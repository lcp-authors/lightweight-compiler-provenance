
../repos/coreutils/src/[:     file format elf32-littlearm


Disassembly of section .init:

00010be4 <.init>:
   10be4:	push	{r3, lr}
   10be8:	bl	10ea4 <__lxstat64@plt+0x48>
   10bec:	pop	{r3, pc}

Disassembly of section .plt:

00010bf0 <calloc@plt-0x14>:
   10bf0:	push	{lr}		; (str lr, [sp, #-4]!)
   10bf4:	ldr	lr, [pc, #4]	; 10c00 <calloc@plt-0x4>
   10bf8:	add	lr, pc, lr
   10bfc:	ldr	pc, [lr, #8]!
   10c00:	andeq	r7, r1, r0, lsl #8

00010c04 <calloc@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #94208	; 0x17000
   10c0c:	ldr	pc, [ip, #1024]!	; 0x400

00010c10 <fputs_unlocked@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #94208	; 0x17000
   10c18:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c1c <raise@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #94208	; 0x17000
   10c24:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c28 <strcmp@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #94208	; 0x17000
   10c30:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c34 <strtol@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #94208	; 0x17000
   10c3c:	ldr	pc, [ip, #992]!	; 0x3e0

00010c40 <fflush@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #94208	; 0x17000
   10c48:	ldr	pc, [ip, #984]!	; 0x3d8

00010c4c <free@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #94208	; 0x17000
   10c54:	ldr	pc, [ip, #976]!	; 0x3d0

00010c58 <_exit@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #94208	; 0x17000
   10c60:	ldr	pc, [ip, #968]!	; 0x3c8

00010c64 <memcpy@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #94208	; 0x17000
   10c6c:	ldr	pc, [ip, #960]!	; 0x3c0

00010c70 <mbsinit@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #94208	; 0x17000
   10c78:	ldr	pc, [ip, #952]!	; 0x3b8

00010c7c <memcmp@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #94208	; 0x17000
   10c84:	ldr	pc, [ip, #944]!	; 0x3b0

00010c88 <fputc_unlocked@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #94208	; 0x17000
   10c90:	ldr	pc, [ip, #936]!	; 0x3a8

00010c94 <dcgettext@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #94208	; 0x17000
   10c9c:	ldr	pc, [ip, #928]!	; 0x3a0

00010ca0 <realloc@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #94208	; 0x17000
   10ca8:	ldr	pc, [ip, #920]!	; 0x398

00010cac <textdomain@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #94208	; 0x17000
   10cb4:	ldr	pc, [ip, #912]!	; 0x390

00010cb8 <geteuid@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #94208	; 0x17000
   10cc0:	ldr	pc, [ip, #904]!	; 0x388

00010cc4 <iswprint@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #94208	; 0x17000
   10ccc:	ldr	pc, [ip, #896]!	; 0x380

00010cd0 <getegid@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #94208	; 0x17000
   10cd8:	ldr	pc, [ip, #888]!	; 0x378

00010cdc <fwrite@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #94208	; 0x17000
   10ce4:	ldr	pc, [ip, #880]!	; 0x370

00010ce8 <lseek64@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #94208	; 0x17000
   10cf0:	ldr	pc, [ip, #872]!	; 0x368

00010cf4 <__ctype_get_mb_cur_max@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #94208	; 0x17000
   10cfc:	ldr	pc, [ip, #864]!	; 0x360

00010d00 <__fpending@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #94208	; 0x17000
   10d08:	ldr	pc, [ip, #856]!	; 0x358

00010d0c <mbrtowc@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #94208	; 0x17000
   10d14:	ldr	pc, [ip, #848]!	; 0x350

00010d18 <error@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #94208	; 0x17000
   10d20:	ldr	pc, [ip, #840]!	; 0x348

00010d24 <malloc@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #94208	; 0x17000
   10d2c:	ldr	pc, [ip, #832]!	; 0x340

00010d30 <error_at_line@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #94208	; 0x17000
   10d38:	ldr	pc, [ip, #824]!	; 0x338

00010d3c <__libc_start_main@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #94208	; 0x17000
   10d44:	ldr	pc, [ip, #816]!	; 0x330

00010d48 <__freading@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #94208	; 0x17000
   10d50:	ldr	pc, [ip, #808]!	; 0x328

00010d54 <__gmon_start__@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #94208	; 0x17000
   10d5c:	ldr	pc, [ip, #800]!	; 0x320

00010d60 <__ctype_b_loc@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #94208	; 0x17000
   10d68:	ldr	pc, [ip, #792]!	; 0x318

00010d6c <exit@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #94208	; 0x17000
   10d74:	ldr	pc, [ip, #784]!	; 0x310

00010d78 <strlen@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #94208	; 0x17000
   10d80:	ldr	pc, [ip, #776]!	; 0x308

00010d84 <__errno_location@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #94208	; 0x17000
   10d8c:	ldr	pc, [ip, #768]!	; 0x300

00010d90 <__cxa_atexit@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #94208	; 0x17000
   10d98:	ldr	pc, [ip, #760]!	; 0x2f8

00010d9c <__vasprintf_chk@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #94208	; 0x17000
   10da4:	ldr	pc, [ip, #752]!	; 0x2f0

00010da8 <memset@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #94208	; 0x17000
   10db0:	ldr	pc, [ip, #744]!	; 0x2e8

00010db4 <__printf_chk@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #94208	; 0x17000
   10dbc:	ldr	pc, [ip, #736]!	; 0x2e0

00010dc0 <fileno@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #94208	; 0x17000
   10dc8:	ldr	pc, [ip, #728]!	; 0x2d8

00010dcc <__fprintf_chk@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #94208	; 0x17000
   10dd4:	ldr	pc, [ip, #720]!	; 0x2d0

00010dd8 <fclose@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #94208	; 0x17000
   10de0:	ldr	pc, [ip, #712]!	; 0x2c8

00010de4 <fseeko64@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #94208	; 0x17000
   10dec:	ldr	pc, [ip, #704]!	; 0x2c0

00010df0 <setlocale@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #94208	; 0x17000
   10df8:	ldr	pc, [ip, #696]!	; 0x2b8

00010dfc <strrchr@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #94208	; 0x17000
   10e04:	ldr	pc, [ip, #688]!	; 0x2b0

00010e08 <nl_langinfo@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #94208	; 0x17000
   10e10:	ldr	pc, [ip, #680]!	; 0x2a8

00010e14 <euidaccess@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #94208	; 0x17000
   10e1c:	ldr	pc, [ip, #672]!	; 0x2a0

00010e20 <bindtextdomain@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #94208	; 0x17000
   10e28:	ldr	pc, [ip, #664]!	; 0x298

00010e2c <__xstat64@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #94208	; 0x17000
   10e34:	ldr	pc, [ip, #656]!	; 0x290

00010e38 <isatty@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #94208	; 0x17000
   10e40:	ldr	pc, [ip, #648]!	; 0x288

00010e44 <strncmp@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #94208	; 0x17000
   10e4c:	ldr	pc, [ip, #640]!	; 0x280

00010e50 <abort@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #94208	; 0x17000
   10e58:	ldr	pc, [ip, #632]!	; 0x278

00010e5c <__lxstat64@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #94208	; 0x17000
   10e64:	ldr	pc, [ip, #624]!	; 0x270

Disassembly of section .text:

00010e68 <.text>:
   10e68:	mov	fp, #0
   10e6c:	mov	lr, #0
   10e70:	pop	{r1}		; (ldr r1, [sp], #4)
   10e74:	mov	r2, sp
   10e78:	push	{r2}		; (str r2, [sp, #-4]!)
   10e7c:	push	{r0}		; (str r0, [sp, #-4]!)
   10e80:	ldr	ip, [pc, #16]	; 10e98 <__lxstat64@plt+0x3c>
   10e84:	push	{ip}		; (str ip, [sp, #-4]!)
   10e88:	ldr	r0, [pc, #12]	; 10e9c <__lxstat64@plt+0x40>
   10e8c:	ldr	r3, [pc, #12]	; 10ea0 <__lxstat64@plt+0x44>
   10e90:	bl	10d3c <__libc_start_main@plt>
   10e94:	bl	10e50 <abort@plt>
   10e98:	andeq	r6, r1, ip, lsl r4
   10e9c:	andeq	r2, r1, r0, lsl #19
   10ea0:			; <UNDEFINED> instruction: 0x000163bc
   10ea4:	ldr	r3, [pc, #20]	; 10ec0 <__lxstat64@plt+0x64>
   10ea8:	ldr	r2, [pc, #20]	; 10ec4 <__lxstat64@plt+0x68>
   10eac:	add	r3, pc, r3
   10eb0:	ldr	r2, [r3, r2]
   10eb4:	cmp	r2, #0
   10eb8:	bxeq	lr
   10ebc:	b	10d54 <__gmon_start__@plt>
   10ec0:	andeq	r7, r1, ip, asr #2
   10ec4:	ldrdeq	r0, [r0], -r8
   10ec8:	ldr	r3, [pc, #28]	; 10eec <__lxstat64@plt+0x90>
   10ecc:	ldr	r0, [pc, #28]	; 10ef0 <__lxstat64@plt+0x94>
   10ed0:	sub	r3, r3, r0
   10ed4:	cmp	r3, #6
   10ed8:	bxls	lr
   10edc:	ldr	r3, [pc, #16]	; 10ef4 <__lxstat64@plt+0x98>
   10ee0:	cmp	r3, #0
   10ee4:	bxeq	lr
   10ee8:	bx	r3
   10eec:	andeq	r8, r2, pc, lsr #2
   10ef0:	andeq	r8, r2, ip, lsr #2
   10ef4:	andeq	r0, r0, r0
   10ef8:	ldr	r1, [pc, #36]	; 10f24 <__lxstat64@plt+0xc8>
   10efc:	ldr	r0, [pc, #36]	; 10f28 <__lxstat64@plt+0xcc>
   10f00:	sub	r1, r1, r0
   10f04:	asr	r1, r1, #2
   10f08:	add	r1, r1, r1, lsr #31
   10f0c:	asrs	r1, r1, #1
   10f10:	bxeq	lr
   10f14:	ldr	r3, [pc, #16]	; 10f2c <__lxstat64@plt+0xd0>
   10f18:	cmp	r3, #0
   10f1c:	bxeq	lr
   10f20:	bx	r3
   10f24:	andeq	r8, r2, ip, lsr #2
   10f28:	andeq	r8, r2, ip, lsr #2
   10f2c:	andeq	r0, r0, r0
   10f30:	push	{r4, lr}
   10f34:	ldr	r4, [pc, #24]	; 10f54 <__lxstat64@plt+0xf8>
   10f38:	ldrb	r3, [r4]
   10f3c:	cmp	r3, #0
   10f40:	popne	{r4, pc}
   10f44:	bl	10ec8 <__lxstat64@plt+0x6c>
   10f48:	mov	r3, #1
   10f4c:	strb	r3, [r4]
   10f50:	pop	{r4, pc}
   10f54:	andeq	r8, r2, r0, asr #2
   10f58:	ldr	r0, [pc, #40]	; 10f88 <__lxstat64@plt+0x12c>
   10f5c:	ldr	r3, [r0]
   10f60:	cmp	r3, #0
   10f64:	bne	10f6c <__lxstat64@plt+0x110>
   10f68:	b	10ef8 <__lxstat64@plt+0x9c>
   10f6c:	ldr	r3, [pc, #24]	; 10f8c <__lxstat64@plt+0x130>
   10f70:	cmp	r3, #0
   10f74:	beq	10f68 <__lxstat64@plt+0x10c>
   10f78:	push	{r4, lr}
   10f7c:	blx	r3
   10f80:	pop	{r4, lr}
   10f84:	b	10ef8 <__lxstat64@plt+0x9c>
   10f88:	andeq	r7, r2, r4, lsl pc
   10f8c:	andeq	r0, r0, r0
   10f90:	ldr	r3, [pc, #32]	; 10fb8 <__lxstat64@plt+0x15c>
   10f94:	ldr	r1, [r3]
   10f98:	ldr	r2, [r3, #4]
   10f9c:	add	r0, r2, #1
   10fa0:	str	r0, [r3, #4]
   10fa4:	ldr	r3, [r1, r2, lsl #2]
   10fa8:	ldrb	r0, [r3]
   10fac:	adds	r0, r0, #0
   10fb0:	movne	r0, #1
   10fb4:	bx	lr
   10fb8:	andeq	r8, r2, r4, asr #2
   10fbc:	push	{r4, lr}
   10fc0:	mov	r4, r0
   10fc4:	ldr	r1, [pc, #320]	; 1110c <__lxstat64@plt+0x2b0>
   10fc8:	bl	10c28 <strcmp@plt>
   10fcc:	cmp	r0, #0
   10fd0:	beq	110b4 <__lxstat64@plt+0x258>
   10fd4:	ldr	r1, [pc, #308]	; 11110 <__lxstat64@plt+0x2b4>
   10fd8:	mov	r0, r4
   10fdc:	bl	10c28 <strcmp@plt>
   10fe0:	cmp	r0, #0
   10fe4:	beq	110bc <__lxstat64@plt+0x260>
   10fe8:	ldr	r1, [pc, #292]	; 11114 <__lxstat64@plt+0x2b8>
   10fec:	mov	r0, r4
   10ff0:	bl	10c28 <strcmp@plt>
   10ff4:	cmp	r0, #0
   10ff8:	beq	110c4 <__lxstat64@plt+0x268>
   10ffc:	ldr	r1, [pc, #276]	; 11118 <__lxstat64@plt+0x2bc>
   11000:	mov	r0, r4
   11004:	bl	10c28 <strcmp@plt>
   11008:	cmp	r0, #0
   1100c:	beq	110cc <__lxstat64@plt+0x270>
   11010:	ldr	r1, [pc, #260]	; 1111c <__lxstat64@plt+0x2c0>
   11014:	mov	r0, r4
   11018:	bl	10c28 <strcmp@plt>
   1101c:	cmp	r0, #0
   11020:	beq	110d4 <__lxstat64@plt+0x278>
   11024:	ldr	r1, [pc, #244]	; 11120 <__lxstat64@plt+0x2c4>
   11028:	mov	r0, r4
   1102c:	bl	10c28 <strcmp@plt>
   11030:	cmp	r0, #0
   11034:	beq	110dc <__lxstat64@plt+0x280>
   11038:	ldr	r1, [pc, #228]	; 11124 <__lxstat64@plt+0x2c8>
   1103c:	mov	r0, r4
   11040:	bl	10c28 <strcmp@plt>
   11044:	cmp	r0, #0
   11048:	beq	110e4 <__lxstat64@plt+0x288>
   1104c:	ldr	r1, [pc, #212]	; 11128 <__lxstat64@plt+0x2cc>
   11050:	mov	r0, r4
   11054:	bl	10c28 <strcmp@plt>
   11058:	cmp	r0, #0
   1105c:	beq	110ec <__lxstat64@plt+0x290>
   11060:	ldr	r1, [pc, #196]	; 1112c <__lxstat64@plt+0x2d0>
   11064:	mov	r0, r4
   11068:	bl	10c28 <strcmp@plt>
   1106c:	cmp	r0, #0
   11070:	beq	110f4 <__lxstat64@plt+0x298>
   11074:	ldr	r1, [pc, #180]	; 11130 <__lxstat64@plt+0x2d4>
   11078:	mov	r0, r4
   1107c:	bl	10c28 <strcmp@plt>
   11080:	cmp	r0, #0
   11084:	beq	110fc <__lxstat64@plt+0x2a0>
   11088:	ldr	r1, [pc, #164]	; 11134 <__lxstat64@plt+0x2d8>
   1108c:	mov	r0, r4
   11090:	bl	10c28 <strcmp@plt>
   11094:	cmp	r0, #0
   11098:	beq	11104 <__lxstat64@plt+0x2a8>
   1109c:	ldr	r1, [pc, #148]	; 11138 <__lxstat64@plt+0x2dc>
   110a0:	mov	r0, r4
   110a4:	bl	10c28 <strcmp@plt>
   110a8:	clz	r0, r0
   110ac:	lsr	r0, r0, #5
   110b0:	pop	{r4, pc}
   110b4:	mov	r0, #1
   110b8:	pop	{r4, pc}
   110bc:	mov	r0, #1
   110c0:	pop	{r4, pc}
   110c4:	mov	r0, #1
   110c8:	pop	{r4, pc}
   110cc:	mov	r0, #1
   110d0:	pop	{r4, pc}
   110d4:	mov	r0, #1
   110d8:	pop	{r4, pc}
   110dc:	mov	r0, #1
   110e0:	pop	{r4, pc}
   110e4:	mov	r0, #1
   110e8:	pop	{r4, pc}
   110ec:	mov	r0, #1
   110f0:	pop	{r4, pc}
   110f4:	mov	r0, #1
   110f8:	pop	{r4, pc}
   110fc:	mov	r0, #1
   11100:	pop	{r4, pc}
   11104:	mov	r0, #1
   11108:	pop	{r4, pc}
   1110c:	andeq	r6, r1, ip, ror r4
   11110:	andeq	r6, r1, r0, lsl #9
   11114:	andeq	r6, r1, r4, lsl #9
   11118:	andeq	r6, r1, r8, lsl #9
   1111c:	andeq	r6, r1, ip, lsl #9
   11120:	muleq	r1, r0, r4
   11124:	muleq	r1, r4, r4
   11128:	muleq	r1, r8, r4
   1112c:	muleq	r1, ip, r4
   11130:	andeq	r6, r1, r0, lsr #9
   11134:	andeq	r6, r1, r4, lsr #9
   11138:	andeq	r6, r1, r8, lsr #9
   1113c:	push	{r4, lr}
   11140:	sub	sp, sp, #104	; 0x68
   11144:	mov	r4, r1
   11148:	mov	r2, sp
   1114c:	mov	r1, r0
   11150:	mov	r0, #3
   11154:	bl	10e2c <__xstat64@plt>
   11158:	cmp	r0, #0
   1115c:	moveq	r0, #1
   11160:	movne	r0, #0
   11164:	ldreq	r3, [sp, #80]	; 0x50
   11168:	streq	r3, [r4]
   1116c:	ldreq	r3, [sp, #84]	; 0x54
   11170:	streq	r3, [r4, #4]
   11174:	add	sp, sp, #104	; 0x68
   11178:	pop	{r4, pc}
   1117c:	push	{r0, r1, r2, r3}
   11180:	push	{lr}		; (str lr, [sp, #-4]!)
   11184:	sub	sp, sp, #12
   11188:	add	r3, sp, #20
   1118c:	str	r3, [sp, #4]
   11190:	ldr	r2, [sp, #16]
   11194:	mov	r1, #0
   11198:	mov	r0, r1
   1119c:	bl	14bac <__lxstat64@plt+0x3d50>
   111a0:	mov	r0, #2
   111a4:	bl	10d6c <exit@plt>
   111a8:	push	{r4, r5, r6, lr}
   111ac:	mov	r4, r0
   111b0:	bl	10d60 <__ctype_b_loc@plt>
   111b4:	ldr	ip, [r0]
   111b8:	mov	r2, r4
   111bc:	mov	r0, r2
   111c0:	ldrb	r3, [r2], #1
   111c4:	lsl	r1, r3, #1
   111c8:	ldrh	r1, [ip, r1]
   111cc:	tst	r1, #1
   111d0:	bne	111bc <__lxstat64@plt+0x360>
   111d4:	cmp	r3, #43	; 0x2b
   111d8:	moveq	r0, r2
   111dc:	beq	111ec <__lxstat64@plt+0x390>
   111e0:	cmp	r3, #45	; 0x2d
   111e4:	movne	r2, r0
   111e8:	addeq	r2, r0, #1
   111ec:	add	r3, r2, #1
   111f0:	ldrb	r1, [r2]
   111f4:	sub	r1, r1, #48	; 0x30
   111f8:	cmp	r1, #9
   111fc:	bhi	11250 <__lxstat64@plt+0x3f4>
   11200:	ldrb	r2, [r2, #1]
   11204:	sub	r2, r2, #48	; 0x30
   11208:	cmp	r2, #9
   1120c:	bhi	11220 <__lxstat64@plt+0x3c4>
   11210:	ldrb	r2, [r3, #1]!
   11214:	sub	r2, r2, #48	; 0x30
   11218:	cmp	r2, #9
   1121c:	bls	11210 <__lxstat64@plt+0x3b4>
   11220:	ldrb	r2, [r3]
   11224:	lsl	r1, r2, #1
   11228:	ldrh	r1, [ip, r1]
   1122c:	tst	r1, #1
   11230:	beq	11248 <__lxstat64@plt+0x3ec>
   11234:	ldrb	r2, [r3, #1]!
   11238:	lsl	r1, r2, #1
   1123c:	ldrh	r1, [ip, r1]
   11240:	tst	r1, #1
   11244:	bne	11234 <__lxstat64@plt+0x3d8>
   11248:	cmp	r2, #0
   1124c:	popeq	{r4, r5, r6, pc}
   11250:	mov	r2, #5
   11254:	ldr	r1, [pc, #28]	; 11278 <__lxstat64@plt+0x41c>
   11258:	mov	r0, #0
   1125c:	bl	10c94 <dcgettext@plt>
   11260:	mov	r5, r0
   11264:	mov	r0, r4
   11268:	bl	14854 <__lxstat64@plt+0x39f8>
   1126c:	mov	r1, r0
   11270:	mov	r0, r5
   11274:	bl	1117c <__lxstat64@plt+0x320>
   11278:	andeq	r6, r1, ip, lsr #9
   1127c:	push	{r4, lr}
   11280:	mov	r2, #5
   11284:	ldr	r1, [pc, #44]	; 112b8 <__lxstat64@plt+0x45c>
   11288:	mov	r0, #0
   1128c:	bl	10c94 <dcgettext@plt>
   11290:	mov	r4, r0
   11294:	ldr	r2, [pc, #32]	; 112bc <__lxstat64@plt+0x460>
   11298:	ldr	r3, [r2, #8]
   1129c:	sub	r3, r3, #-1073741823	; 0xc0000001
   112a0:	ldr	r2, [r2]
   112a4:	ldr	r0, [r2, r3, lsl #2]
   112a8:	bl	14854 <__lxstat64@plt+0x39f8>
   112ac:	mov	r1, r0
   112b0:	mov	r0, r4
   112b4:	bl	1117c <__lxstat64@plt+0x320>
   112b8:	andeq	r6, r1, r0, asr #9
   112bc:	andeq	r8, r2, r4, asr #2
   112c0:	ldr	r2, [pc, #40]	; 112f0 <__lxstat64@plt+0x494>
   112c4:	ldr	r3, [r2, #4]
   112c8:	add	r3, r3, #1
   112cc:	str	r3, [r2, #4]
   112d0:	cmp	r0, #0
   112d4:	beq	112e4 <__lxstat64@plt+0x488>
   112d8:	ldr	r2, [r2, #8]
   112dc:	cmp	r3, r2
   112e0:	bge	112e8 <__lxstat64@plt+0x48c>
   112e4:	bx	lr
   112e8:	push	{r4, lr}
   112ec:	bl	1127c <__lxstat64@plt+0x420>
   112f0:	andeq	r8, r2, r4, asr #2
   112f4:	push	{r4, lr}
   112f8:	mov	r0, #1
   112fc:	bl	112c0 <__lxstat64@plt+0x464>
   11300:	ldr	r2, [pc, #12]	; 11314 <__lxstat64@plt+0x4b8>
   11304:	ldr	r3, [r2, #4]
   11308:	add	r3, r3, #1
   1130c:	str	r3, [r2, #4]
   11310:	pop	{r4, pc}
   11314:	andeq	r8, r2, r4, asr #2
   11318:	push	{r4, r5, r6, r7, r8, lr}
   1131c:	sub	sp, sp, #256	; 0x100
   11320:	subs	r6, r0, #0
   11324:	bne	113d0 <__lxstat64@plt+0x574>
   11328:	ldr	r3, [pc, #1296]	; 11840 <__lxstat64@plt+0x9e4>
   1132c:	ldr	r4, [r3, #4]
   11330:	add	r4, r4, #1
   11334:	ldr	r3, [r3, #8]
   11338:	sub	r3, r3, #2
   1133c:	cmp	r4, r3
   11340:	movge	r8, #0
   11344:	bge	1136c <__lxstat64@plt+0x510>
   11348:	add	r3, r4, #1
   1134c:	ldr	r2, [pc, #1260]	; 11840 <__lxstat64@plt+0x9e4>
   11350:	ldr	r2, [r2]
   11354:	ldr	r1, [pc, #1256]	; 11844 <__lxstat64@plt+0x9e8>
   11358:	ldr	r0, [r2, r3, lsl #2]
   1135c:	bl	10c28 <strcmp@plt>
   11360:	cmp	r0, #0
   11364:	movne	r8, #0
   11368:	beq	113dc <__lxstat64@plt+0x580>
   1136c:	ldr	r3, [pc, #1228]	; 11840 <__lxstat64@plt+0x9e4>
   11370:	ldr	r5, [r3]
   11374:	lsl	r7, r4, #2
   11378:	ldr	r0, [r5, r4, lsl #2]
   1137c:	ldrb	r3, [r0]
   11380:	cmp	r3, #45	; 0x2d
   11384:	beq	113e8 <__lxstat64@plt+0x58c>
   11388:	cmp	r3, #61	; 0x3d
   1138c:	beq	117d0 <__lxstat64@plt+0x974>
   11390:	ldr	r1, [pc, #1200]	; 11848 <__lxstat64@plt+0x9ec>
   11394:	bl	10c28 <strcmp@plt>
   11398:	cmp	r0, #0
   1139c:	bne	1181c <__lxstat64@plt+0x9c0>
   113a0:	ldr	r6, [pc, #1176]	; 11840 <__lxstat64@plt+0x9e4>
   113a4:	ldr	r4, [r6, #4]
   113a8:	add	r3, r5, r4, lsl #2
   113ac:	ldr	r1, [r3, #8]
   113b0:	ldr	r0, [r5, r4, lsl #2]
   113b4:	bl	10c28 <strcmp@plt>
   113b8:	adds	r0, r0, #0
   113bc:	movne	r0, #1
   113c0:	add	r4, r4, #3
   113c4:	str	r4, [r6, #4]
   113c8:	add	sp, sp, #256	; 0x100
   113cc:	pop	{r4, r5, r6, r7, r8, pc}
   113d0:	mov	r0, #0
   113d4:	bl	112c0 <__lxstat64@plt+0x464>
   113d8:	b	11328 <__lxstat64@plt+0x4cc>
   113dc:	bl	112c0 <__lxstat64@plt+0x464>
   113e0:	mov	r8, #1
   113e4:	b	1136c <__lxstat64@plt+0x510>
   113e8:	ldrb	r3, [r0, #1]
   113ec:	cmp	r3, #103	; 0x67
   113f0:	cmpne	r3, #108	; 0x6c
   113f4:	bne	11408 <__lxstat64@plt+0x5ac>
   113f8:	ldrb	r2, [r0, #2]
   113fc:	cmp	r2, #116	; 0x74
   11400:	cmpne	r2, #101	; 0x65
   11404:	beq	11584 <__lxstat64@plt+0x728>
   11408:	cmp	r3, #101	; 0x65
   1140c:	beq	11458 <__lxstat64@plt+0x5fc>
   11410:	cmp	r3, #110	; 0x6e
   11414:	beq	114bc <__lxstat64@plt+0x660>
   11418:	cmp	r3, #110	; 0x6e
   1141c:	beq	114c8 <__lxstat64@plt+0x66c>
   11420:	cmp	r3, #111	; 0x6f
   11424:	beq	11708 <__lxstat64@plt+0x8ac>
   11428:	cmp	r3, #101	; 0x65
   1142c:	beq	11464 <__lxstat64@plt+0x608>
   11430:	mov	r2, #5
   11434:	ldr	r1, [pc, #1040]	; 1184c <__lxstat64@plt+0x9f0>
   11438:	mov	r0, #0
   1143c:	bl	10c94 <dcgettext@plt>
   11440:	mov	r6, r0
   11444:	ldr	r0, [r5, r4, lsl #2]
   11448:	bl	14854 <__lxstat64@plt+0x39f8>
   1144c:	mov	r1, r0
   11450:	mov	r0, r6
   11454:	bl	1117c <__lxstat64@plt+0x320>
   11458:	ldrb	r3, [r0, #2]
   1145c:	cmp	r3, #113	; 0x71
   11460:	beq	11830 <__lxstat64@plt+0x9d4>
   11464:	ldrb	r3, [r0, #2]
   11468:	cmp	r3, #102	; 0x66
   1146c:	bne	11430 <__lxstat64@plt+0x5d4>
   11470:	ldrb	r3, [r0, #3]
   11474:	cmp	r3, #0
   11478:	bne	11430 <__lxstat64@plt+0x5d4>
   1147c:	ldr	r2, [pc, #956]	; 11840 <__lxstat64@plt+0x9e4>
   11480:	ldr	r3, [r2, #4]
   11484:	add	r3, r3, #3
   11488:	str	r3, [r2, #4]
   1148c:	orrs	r3, r8, r6
   11490:	bne	116a4 <__lxstat64@plt+0x848>
   11494:	add	r3, r5, r7
   11498:	add	r2, sp, #152	; 0x98
   1149c:	ldr	r1, [r3, #-4]
   114a0:	mov	r0, #3
   114a4:	bl	10e2c <__xstat64@plt>
   114a8:	subs	r4, r0, #0
   114ac:	movne	r4, #0
   114b0:	beq	116b8 <__lxstat64@plt+0x85c>
   114b4:	and	r0, r4, #1
   114b8:	b	113c8 <__lxstat64@plt+0x56c>
   114bc:	ldrb	r3, [r0, #2]
   114c0:	cmp	r3, #101	; 0x65
   114c4:	beq	11820 <__lxstat64@plt+0x9c4>
   114c8:	ldrb	r3, [r0, #2]
   114cc:	cmp	r3, #116	; 0x74
   114d0:	bne	11430 <__lxstat64@plt+0x5d4>
   114d4:	ldrb	r3, [r0, #3]
   114d8:	cmp	r3, #0
   114dc:	bne	11430 <__lxstat64@plt+0x5d4>
   114e0:	ldr	r2, [pc, #856]	; 11840 <__lxstat64@plt+0x9e4>
   114e4:	ldr	r3, [r2, #4]
   114e8:	add	r3, r3, #3
   114ec:	str	r3, [r2, #4]
   114f0:	orrs	r3, r8, r6
   114f4:	bne	11690 <__lxstat64@plt+0x834>
   114f8:	add	r5, r5, r7
   114fc:	mov	r1, sp
   11500:	ldr	r0, [r5, #-4]
   11504:	bl	1113c <__lxstat64@plt+0x2e0>
   11508:	mov	r4, r0
   1150c:	add	r1, sp, #24
   11510:	ldr	r0, [r5, #4]
   11514:	bl	1113c <__lxstat64@plt+0x2e0>
   11518:	cmp	r4, #0
   1151c:	moveq	r0, #0
   11520:	beq	113c8 <__lxstat64@plt+0x56c>
   11524:	cmp	r0, #0
   11528:	moveq	r0, #1
   1152c:	beq	113c8 <__lxstat64@plt+0x56c>
   11530:	ldr	r3, [sp]
   11534:	ldr	r2, [sp, #24]
   11538:	cmp	r2, r3
   1153c:	movlt	r0, #1
   11540:	movge	r0, #0
   11544:	movgt	r3, #1
   11548:	movle	r3, #0
   1154c:	sub	r3, r0, r3
   11550:	ldr	r2, [sp, #4]
   11554:	ldr	r1, [sp, #28]
   11558:	cmp	r1, r2
   1155c:	movlt	r0, #1
   11560:	movge	r0, #0
   11564:	movgt	r2, #1
   11568:	movle	r2, #0
   1156c:	sub	r0, r0, r2
   11570:	add	r0, r0, r3, lsl #1
   11574:	cmp	r0, #0
   11578:	movle	r0, #0
   1157c:	movgt	r0, #1
   11580:	b	113c8 <__lxstat64@plt+0x56c>
   11584:	ldrb	r2, [r0, #3]
   11588:	cmp	r2, #0
   1158c:	bne	11418 <__lxstat64@plt+0x5bc>
   11590:	cmp	r6, #0
   11594:	beq	1163c <__lxstat64@plt+0x7e0>
   11598:	add	r5, r5, r7
   1159c:	ldr	r0, [r5, #-4]
   115a0:	bl	10d78 <strlen@plt>
   115a4:	mov	r2, sp
   115a8:	mov	r1, #0
   115ac:	bl	12c9c <__lxstat64@plt+0x1e40>
   115b0:	mov	r5, r0
   115b4:	cmp	r8, #0
   115b8:	beq	11650 <__lxstat64@plt+0x7f4>
   115bc:	ldr	r3, [pc, #636]	; 11840 <__lxstat64@plt+0x9e4>
   115c0:	ldr	r3, [r3]
   115c4:	add	r7, r3, r7
   115c8:	ldr	r0, [r7, #8]
   115cc:	bl	10d78 <strlen@plt>
   115d0:	add	r2, sp, #24
   115d4:	mov	r1, #0
   115d8:	bl	12c9c <__lxstat64@plt+0x1e40>
   115dc:	mov	r1, r0
   115e0:	mov	r0, r5
   115e4:	bl	14868 <__lxstat64@plt+0x3a0c>
   115e8:	ldr	r2, [pc, #592]	; 11840 <__lxstat64@plt+0x9e4>
   115ec:	ldr	r3, [r2]
   115f0:	ldr	ip, [r3, r4, lsl #2]
   115f4:	ldrb	r3, [ip, #2]
   115f8:	cmp	r3, #101	; 0x65
   115fc:	movne	r3, #0
   11600:	moveq	r3, #1
   11604:	ldr	r1, [r2, #4]
   11608:	add	r1, r1, #3
   1160c:	str	r1, [r2, #4]
   11610:	ldrb	r2, [ip, #1]
   11614:	cmp	r2, #108	; 0x6c
   11618:	beq	1166c <__lxstat64@plt+0x810>
   1161c:	cmp	r2, #103	; 0x67
   11620:	beq	1167c <__lxstat64@plt+0x820>
   11624:	adds	r0, r0, #0
   11628:	movne	r0, #1
   1162c:	cmp	r0, r3
   11630:	movne	r0, #0
   11634:	moveq	r0, #1
   11638:	b	113c8 <__lxstat64@plt+0x56c>
   1163c:	add	r5, r5, r7
   11640:	ldr	r0, [r5, #-4]
   11644:	bl	111a8 <__lxstat64@plt+0x34c>
   11648:	mov	r5, r0
   1164c:	b	115b4 <__lxstat64@plt+0x758>
   11650:	ldr	r3, [pc, #488]	; 11840 <__lxstat64@plt+0x9e4>
   11654:	ldr	r3, [r3]
   11658:	add	r7, r3, r7
   1165c:	ldr	r0, [r7, #4]
   11660:	bl	111a8 <__lxstat64@plt+0x34c>
   11664:	mov	r1, r0
   11668:	b	115e0 <__lxstat64@plt+0x784>
   1166c:	cmp	r0, r3
   11670:	movge	r0, #0
   11674:	movlt	r0, #1
   11678:	b	113c8 <__lxstat64@plt+0x56c>
   1167c:	rsb	r3, r3, #0
   11680:	cmp	r0, r3
   11684:	movle	r0, #0
   11688:	movgt	r0, #1
   1168c:	b	113c8 <__lxstat64@plt+0x56c>
   11690:	mov	r2, #5
   11694:	ldr	r1, [pc, #436]	; 11850 <__lxstat64@plt+0x9f4>
   11698:	mov	r0, #0
   1169c:	bl	10c94 <dcgettext@plt>
   116a0:	bl	1117c <__lxstat64@plt+0x320>
   116a4:	mov	r2, #5
   116a8:	ldr	r1, [pc, #420]	; 11854 <__lxstat64@plt+0x9f8>
   116ac:	mov	r0, #0
   116b0:	bl	10c94 <dcgettext@plt>
   116b4:	bl	1117c <__lxstat64@plt+0x320>
   116b8:	add	r5, r5, r7
   116bc:	add	r2, sp, #48	; 0x30
   116c0:	ldr	r1, [r5, #4]
   116c4:	mov	r0, #3
   116c8:	bl	10e2c <__xstat64@plt>
   116cc:	cmp	r0, #0
   116d0:	bne	114b4 <__lxstat64@plt+0x658>
   116d4:	ldrd	r2, [sp, #48]	; 0x30
   116d8:	ldrd	r4, [sp, #152]	; 0x98
   116dc:	cmp	r5, r3
   116e0:	cmpeq	r4, r2
   116e4:	movne	r4, r0
   116e8:	bne	114b4 <__lxstat64@plt+0x658>
   116ec:	ldrd	r2, [sp, #144]	; 0x90
   116f0:	ldrd	r0, [sp, #248]	; 0xf8
   116f4:	cmp	r1, r3
   116f8:	cmpeq	r0, r2
   116fc:	moveq	r4, #1
   11700:	movne	r4, #0
   11704:	b	114b4 <__lxstat64@plt+0x658>
   11708:	ldrb	r3, [r0, #2]
   1170c:	cmp	r3, #116	; 0x74
   11710:	bne	11430 <__lxstat64@plt+0x5d4>
   11714:	ldrb	r3, [r0, #3]
   11718:	cmp	r3, #0
   1171c:	bne	11430 <__lxstat64@plt+0x5d4>
   11720:	ldr	r2, [pc, #280]	; 11840 <__lxstat64@plt+0x9e4>
   11724:	ldr	r3, [r2, #4]
   11728:	add	r3, r3, #3
   1172c:	str	r3, [r2, #4]
   11730:	orrs	r3, r8, r6
   11734:	bne	117bc <__lxstat64@plt+0x960>
   11738:	add	r5, r5, r7
   1173c:	mov	r1, sp
   11740:	ldr	r0, [r5, #-4]
   11744:	bl	1113c <__lxstat64@plt+0x2e0>
   11748:	mov	r4, r0
   1174c:	add	r1, sp, #24
   11750:	ldr	r0, [r5, #4]
   11754:	bl	1113c <__lxstat64@plt+0x2e0>
   11758:	cmp	r0, #0
   1175c:	moveq	r0, #0
   11760:	beq	113c8 <__lxstat64@plt+0x56c>
   11764:	cmp	r4, #0
   11768:	moveq	r0, #1
   1176c:	beq	113c8 <__lxstat64@plt+0x56c>
   11770:	ldr	r3, [sp]
   11774:	ldr	r2, [sp, #24]
   11778:	cmp	r2, r3
   1177c:	movlt	r0, #1
   11780:	movge	r0, #0
   11784:	movgt	r3, #1
   11788:	movle	r3, #0
   1178c:	sub	r3, r0, r3
   11790:	ldr	r2, [sp, #4]
   11794:	ldr	r1, [sp, #28]
   11798:	cmp	r1, r2
   1179c:	movlt	r0, #1
   117a0:	movge	r0, #0
   117a4:	movgt	r2, #1
   117a8:	movle	r2, #0
   117ac:	sub	r0, r0, r2
   117b0:	add	r0, r0, r3, lsl #1
   117b4:	lsr	r0, r0, #31
   117b8:	b	113c8 <__lxstat64@plt+0x56c>
   117bc:	mov	r2, #5
   117c0:	ldr	r1, [pc, #144]	; 11858 <__lxstat64@plt+0x9fc>
   117c4:	mov	r0, #0
   117c8:	bl	10c94 <dcgettext@plt>
   117cc:	bl	1117c <__lxstat64@plt+0x320>
   117d0:	ldrb	r3, [r0, #1]
   117d4:	cmp	r3, #0
   117d8:	beq	117f0 <__lxstat64@plt+0x994>
   117dc:	cmp	r3, #61	; 0x3d
   117e0:	bne	11390 <__lxstat64@plt+0x534>
   117e4:	ldrb	r3, [r0, #2]
   117e8:	cmp	r3, #0
   117ec:	bne	11390 <__lxstat64@plt+0x534>
   117f0:	ldr	r6, [pc, #72]	; 11840 <__lxstat64@plt+0x9e4>
   117f4:	ldr	r4, [r6, #4]
   117f8:	add	r3, r5, r4, lsl #2
   117fc:	ldr	r1, [r3, #8]
   11800:	ldr	r0, [r5, r4, lsl #2]
   11804:	bl	10c28 <strcmp@plt>
   11808:	clz	r0, r0
   1180c:	lsr	r0, r0, #5
   11810:	add	r4, r4, #3
   11814:	str	r4, [r6, #4]
   11818:	b	113c8 <__lxstat64@plt+0x56c>
   1181c:	bl	10e50 <abort@plt>
   11820:	ldrb	r3, [r0, #3]
   11824:	cmp	r3, #0
   11828:	beq	11590 <__lxstat64@plt+0x734>
   1182c:	b	11430 <__lxstat64@plt+0x5d4>
   11830:	ldrb	r3, [r0, #3]
   11834:	cmp	r3, #0
   11838:	beq	11590 <__lxstat64@plt+0x734>
   1183c:	b	11430 <__lxstat64@plt+0x5d4>
   11840:	andeq	r8, r2, r4, asr #2
   11844:	andeq	r6, r1, r8, lsl #10
   11848:	andeq	r6, r1, r0, lsl #9
   1184c:	andeq	r6, r1, r4, lsr #10
   11850:	ldrdeq	r6, [r1], -ip
   11854:	strdeq	r6, [r1], -r4
   11858:	andeq	r6, r1, ip, lsl #10
   1185c:	push	{r4, r5, r6, lr}
   11860:	sub	sp, sp, #104	; 0x68
   11864:	ldr	r3, [pc, #1684]	; 11f00 <__lxstat64@plt+0x10a4>
   11868:	ldr	r4, [r3]
   1186c:	ldr	r5, [r3, #4]
   11870:	ldr	r3, [r4, r5, lsl #2]
   11874:	ldrb	r3, [r3, #1]
   11878:	sub	r3, r3, #71	; 0x47
   1187c:	cmp	r3, #51	; 0x33
   11880:	ldrls	pc, [pc, r3, lsl #2]
   11884:	b	11958 <__lxstat64@plt+0xafc>
   11888:	andeq	r1, r1, r8, lsl fp
   1188c:	andeq	r1, r1, r8, asr r9
   11890:	andeq	r1, r1, r8, asr r9
   11894:	andeq	r1, r1, r8, asr r9
   11898:	andeq	r1, r1, r8, asr r9
   1189c:	andeq	r1, r1, r4, ror #26
   118a0:	andeq	r1, r1, r8, asr r9
   118a4:	andeq	r1, r1, r8, lsr #20
   118a8:	andeq	r1, r1, r8, lsr #21
   118ac:	andeq	r1, r1, r8, asr r9
   118b0:	andeq	r1, r1, r8, asr r9
   118b4:	andeq	r1, r1, r8, asr r9
   118b8:	andeq	r1, r1, r4, asr ip
   118bc:	andeq	r1, r1, r8, asr r9
   118c0:	andeq	r1, r1, r8, asr r9
   118c4:	andeq	r1, r1, r8, asr r9
   118c8:	andeq	r1, r1, r8, asr r9
   118cc:	andeq	r1, r1, r8, asr r9
   118d0:	andeq	r1, r1, r8, asr r9
   118d4:	andeq	r1, r1, r8, asr r9
   118d8:	andeq	r1, r1, r8, asr r9
   118dc:	andeq	r1, r1, r8, asr r9
   118e0:	andeq	r1, r1, r8, asr r9
   118e4:	andeq	r1, r1, r8, asr r9
   118e8:	andeq	r1, r1, r8, asr r9
   118ec:	andeq	r1, r1, r8, asr r9
   118f0:	andeq	r1, r1, r8, asr r9
   118f4:	ldrdeq	r1, [r1], -ip
   118f8:	muleq	r1, r8, ip
   118fc:	andeq	r1, r1, ip, asr #23
   11900:	andeq	r1, r1, r0, lsl #19
   11904:	andeq	r1, r1, r8, lsl #23
   11908:	andeq	r1, r1, r0, ror #27
   1190c:	andeq	r1, r1, r4, ror #26
   11910:	andeq	r1, r1, r8, asr r9
   11914:	andeq	r1, r1, r8, asr r9
   11918:	andeq	r1, r1, r8, lsl lr
   1191c:	andeq	r1, r1, r8, asr r9
   11920:	andeq	r1, r1, r8, asr r9
   11924:			; <UNDEFINED> instruction: 0x00011eb8
   11928:	andeq	r1, r1, r8, asr r9
   1192c:	andeq	r1, r1, r0, lsr #26
   11930:	andeq	r1, r1, r8, asr r9
   11934:			; <UNDEFINED> instruction: 0x000119b0
   11938:	andeq	r1, r1, r0, lsl ip
   1193c:	andeq	r1, r1, r0, asr lr
   11940:	andeq	r1, r1, r8, lsr #27
   11944:	andeq	r1, r1, r8, asr r9
   11948:	ldrdeq	r1, [r1], -r8
   1194c:	andeq	r1, r1, r0, lsl #20
   11950:	andeq	r1, r1, r8, asr r9
   11954:	ldrdeq	r1, [r1], -ip
   11958:	mov	r2, #5
   1195c:	ldr	r1, [pc, #1440]	; 11f04 <__lxstat64@plt+0x10a8>
   11960:	mov	r0, #0
   11964:	bl	10c94 <dcgettext@plt>
   11968:	mov	r6, r0
   1196c:	ldr	r0, [r4, r5, lsl #2]
   11970:	bl	14854 <__lxstat64@plt+0x39f8>
   11974:	mov	r1, r0
   11978:	mov	r0, r6
   1197c:	bl	1117c <__lxstat64@plt+0x320>
   11980:	bl	112f4 <__lxstat64@plt+0x498>
   11984:	ldr	r3, [pc, #1396]	; 11f00 <__lxstat64@plt+0x10a4>
   11988:	ldr	r3, [r3, #4]
   1198c:	sub	r3, r3, #-1073741823	; 0xc0000001
   11990:	mov	r2, sp
   11994:	ldr	r1, [r4, r3, lsl #2]
   11998:	mov	r0, #3
   1199c:	bl	10e2c <__xstat64@plt>
   119a0:	clz	r0, r0
   119a4:	lsr	r0, r0, #5
   119a8:	add	sp, sp, #104	; 0x68
   119ac:	pop	{r4, r5, r6, pc}
   119b0:	bl	112f4 <__lxstat64@plt+0x498>
   119b4:	ldr	r3, [pc, #1348]	; 11f00 <__lxstat64@plt+0x10a4>
   119b8:	ldr	r3, [r3, #4]
   119bc:	sub	r3, r3, #-1073741823	; 0xc0000001
   119c0:	mov	r1, #4
   119c4:	ldr	r0, [r4, r3, lsl #2]
   119c8:	bl	10e14 <euidaccess@plt>
   119cc:	clz	r0, r0
   119d0:	lsr	r0, r0, #5
   119d4:	b	119a8 <__lxstat64@plt+0xb4c>
   119d8:	bl	112f4 <__lxstat64@plt+0x498>
   119dc:	ldr	r3, [pc, #1308]	; 11f00 <__lxstat64@plt+0x10a4>
   119e0:	ldr	r3, [r3, #4]
   119e4:	sub	r3, r3, #-1073741823	; 0xc0000001
   119e8:	mov	r1, #2
   119ec:	ldr	r0, [r4, r3, lsl #2]
   119f0:	bl	10e14 <euidaccess@plt>
   119f4:	clz	r0, r0
   119f8:	lsr	r0, r0, #5
   119fc:	b	119a8 <__lxstat64@plt+0xb4c>
   11a00:	bl	112f4 <__lxstat64@plt+0x498>
   11a04:	ldr	r3, [pc, #1268]	; 11f00 <__lxstat64@plt+0x10a4>
   11a08:	ldr	r3, [r3, #4]
   11a0c:	sub	r3, r3, #-1073741823	; 0xc0000001
   11a10:	mov	r1, #1
   11a14:	ldr	r0, [r4, r3, lsl #2]
   11a18:	bl	10e14 <euidaccess@plt>
   11a1c:	clz	r0, r0
   11a20:	lsr	r0, r0, #5
   11a24:	b	119a8 <__lxstat64@plt+0xb4c>
   11a28:	bl	112f4 <__lxstat64@plt+0x498>
   11a2c:	ldr	r3, [pc, #1228]	; 11f00 <__lxstat64@plt+0x10a4>
   11a30:	ldr	r3, [r3, #4]
   11a34:	sub	r3, r3, #-1073741823	; 0xc0000001
   11a38:	mov	r2, sp
   11a3c:	ldr	r1, [r4, r3, lsl #2]
   11a40:	mov	r0, #3
   11a44:	bl	10e2c <__xstat64@plt>
   11a48:	cmp	r0, #0
   11a4c:	movne	r0, #0
   11a50:	bne	119a8 <__lxstat64@plt+0xb4c>
   11a54:	ldr	r3, [sp, #80]	; 0x50
   11a58:	ldr	r2, [sp, #72]	; 0x48
   11a5c:	cmp	r2, r3
   11a60:	movlt	r0, #1
   11a64:	movge	r0, #0
   11a68:	movgt	r3, #1
   11a6c:	movle	r3, #0
   11a70:	sub	r3, r0, r3
   11a74:	ldr	r2, [sp, #84]	; 0x54
   11a78:	ldr	r1, [sp, #76]	; 0x4c
   11a7c:	cmp	r1, r2
   11a80:	movlt	r0, #1
   11a84:	movge	r0, #0
   11a88:	movgt	r2, #1
   11a8c:	movle	r2, #0
   11a90:	sub	r0, r0, r2
   11a94:	add	r0, r0, r3, lsl #1
   11a98:	cmp	r0, #0
   11a9c:	movle	r0, #0
   11aa0:	movgt	r0, #1
   11aa4:	b	119a8 <__lxstat64@plt+0xb4c>
   11aa8:	bl	112f4 <__lxstat64@plt+0x498>
   11aac:	ldr	r3, [pc, #1100]	; 11f00 <__lxstat64@plt+0x10a4>
   11ab0:	ldr	r3, [r3, #4]
   11ab4:	sub	r3, r3, #-1073741823	; 0xc0000001
   11ab8:	mov	r2, sp
   11abc:	ldr	r1, [r4, r3, lsl #2]
   11ac0:	mov	r0, #3
   11ac4:	bl	10e2c <__xstat64@plt>
   11ac8:	subs	r4, r0, #0
   11acc:	movne	r0, #0
   11ad0:	bne	119a8 <__lxstat64@plt+0xb4c>
   11ad4:	bl	10d84 <__errno_location@plt>
   11ad8:	mov	r5, r0
   11adc:	mov	r3, #0
   11ae0:	str	r3, [r0]
   11ae4:	bl	10cb8 <geteuid@plt>
   11ae8:	cmn	r0, #1
   11aec:	beq	11b08 <__lxstat64@plt+0xcac>
   11af0:	ldr	r4, [sp, #24]
   11af4:	cmp	r4, r0
   11af8:	movne	r4, #0
   11afc:	moveq	r4, #1
   11b00:	and	r0, r4, #1
   11b04:	b	119a8 <__lxstat64@plt+0xb4c>
   11b08:	ldr	r3, [r5]
   11b0c:	cmp	r3, #0
   11b10:	bne	11b00 <__lxstat64@plt+0xca4>
   11b14:	b	11af0 <__lxstat64@plt+0xc94>
   11b18:	bl	112f4 <__lxstat64@plt+0x498>
   11b1c:	ldr	r3, [pc, #988]	; 11f00 <__lxstat64@plt+0x10a4>
   11b20:	ldr	r3, [r3, #4]
   11b24:	sub	r3, r3, #-1073741823	; 0xc0000001
   11b28:	mov	r2, sp
   11b2c:	ldr	r1, [r4, r3, lsl #2]
   11b30:	mov	r0, #3
   11b34:	bl	10e2c <__xstat64@plt>
   11b38:	subs	r4, r0, #0
   11b3c:	movne	r0, #0
   11b40:	bne	119a8 <__lxstat64@plt+0xb4c>
   11b44:	bl	10d84 <__errno_location@plt>
   11b48:	mov	r5, r0
   11b4c:	mov	r3, #0
   11b50:	str	r3, [r0]
   11b54:	bl	10cd0 <getegid@plt>
   11b58:	cmn	r0, #1
   11b5c:	beq	11b78 <__lxstat64@plt+0xd1c>
   11b60:	ldr	r4, [sp, #28]
   11b64:	cmp	r4, r0
   11b68:	movne	r4, #0
   11b6c:	moveq	r4, #1
   11b70:	and	r0, r4, #1
   11b74:	b	119a8 <__lxstat64@plt+0xb4c>
   11b78:	ldr	r3, [r5]
   11b7c:	cmp	r3, #0
   11b80:	bne	11b70 <__lxstat64@plt+0xd14>
   11b84:	b	11b60 <__lxstat64@plt+0xd04>
   11b88:	bl	112f4 <__lxstat64@plt+0x498>
   11b8c:	ldr	r3, [pc, #876]	; 11f00 <__lxstat64@plt+0x10a4>
   11b90:	ldr	r3, [r3, #4]
   11b94:	sub	r3, r3, #-1073741823	; 0xc0000001
   11b98:	mov	r2, sp
   11b9c:	ldr	r1, [r4, r3, lsl #2]
   11ba0:	mov	r0, #3
   11ba4:	bl	10e2c <__xstat64@plt>
   11ba8:	cmp	r0, #0
   11bac:	movne	r0, #0
   11bb0:	bne	119a8 <__lxstat64@plt+0xb4c>
   11bb4:	ldr	r0, [sp, #16]
   11bb8:	and	r0, r0, #61440	; 0xf000
   11bbc:	cmp	r0, #32768	; 0x8000
   11bc0:	movne	r0, #0
   11bc4:	moveq	r0, #1
   11bc8:	b	119a8 <__lxstat64@plt+0xb4c>
   11bcc:	bl	112f4 <__lxstat64@plt+0x498>
   11bd0:	ldr	r3, [pc, #808]	; 11f00 <__lxstat64@plt+0x10a4>
   11bd4:	ldr	r3, [r3, #4]
   11bd8:	sub	r3, r3, #-1073741823	; 0xc0000001
   11bdc:	mov	r2, sp
   11be0:	ldr	r1, [r4, r3, lsl #2]
   11be4:	mov	r0, #3
   11be8:	bl	10e2c <__xstat64@plt>
   11bec:	cmp	r0, #0
   11bf0:	movne	r0, #0
   11bf4:	bne	119a8 <__lxstat64@plt+0xb4c>
   11bf8:	ldr	r0, [sp, #16]
   11bfc:	and	r0, r0, #61440	; 0xf000
   11c00:	cmp	r0, #16384	; 0x4000
   11c04:	movne	r0, #0
   11c08:	moveq	r0, #1
   11c0c:	b	119a8 <__lxstat64@plt+0xb4c>
   11c10:	bl	112f4 <__lxstat64@plt+0x498>
   11c14:	ldr	r3, [pc, #740]	; 11f00 <__lxstat64@plt+0x10a4>
   11c18:	ldr	r3, [r3, #4]
   11c1c:	sub	r3, r3, #-1073741823	; 0xc0000001
   11c20:	mov	r2, sp
   11c24:	ldr	r1, [r4, r3, lsl #2]
   11c28:	mov	r0, #3
   11c2c:	bl	10e2c <__xstat64@plt>
   11c30:	cmp	r0, #0
   11c34:	movne	r0, #0
   11c38:	bne	119a8 <__lxstat64@plt+0xb4c>
   11c3c:	ldrd	r2, [sp, #48]	; 0x30
   11c40:	cmp	r2, #1
   11c44:	sbcs	r3, r3, #0
   11c48:	movge	r0, #1
   11c4c:	movlt	r0, #0
   11c50:	b	119a8 <__lxstat64@plt+0xb4c>
   11c54:	bl	112f4 <__lxstat64@plt+0x498>
   11c58:	ldr	r3, [pc, #672]	; 11f00 <__lxstat64@plt+0x10a4>
   11c5c:	ldr	r3, [r3, #4]
   11c60:	sub	r3, r3, #-1073741823	; 0xc0000001
   11c64:	mov	r2, sp
   11c68:	ldr	r1, [r4, r3, lsl #2]
   11c6c:	mov	r0, #3
   11c70:	bl	10e2c <__xstat64@plt>
   11c74:	cmp	r0, #0
   11c78:	movne	r0, #0
   11c7c:	bne	119a8 <__lxstat64@plt+0xb4c>
   11c80:	ldr	r0, [sp, #16]
   11c84:	and	r0, r0, #61440	; 0xf000
   11c88:	cmp	r0, #49152	; 0xc000
   11c8c:	movne	r0, #0
   11c90:	moveq	r0, #1
   11c94:	b	119a8 <__lxstat64@plt+0xb4c>
   11c98:	bl	112f4 <__lxstat64@plt+0x498>
   11c9c:	ldr	r3, [pc, #604]	; 11f00 <__lxstat64@plt+0x10a4>
   11ca0:	ldr	r3, [r3, #4]
   11ca4:	sub	r3, r3, #-1073741823	; 0xc0000001
   11ca8:	mov	r2, sp
   11cac:	ldr	r1, [r4, r3, lsl #2]
   11cb0:	mov	r0, #3
   11cb4:	bl	10e2c <__xstat64@plt>
   11cb8:	cmp	r0, #0
   11cbc:	movne	r0, #0
   11cc0:	bne	119a8 <__lxstat64@plt+0xb4c>
   11cc4:	ldr	r0, [sp, #16]
   11cc8:	and	r0, r0, #61440	; 0xf000
   11ccc:	cmp	r0, #8192	; 0x2000
   11cd0:	movne	r0, #0
   11cd4:	moveq	r0, #1
   11cd8:	b	119a8 <__lxstat64@plt+0xb4c>
   11cdc:	bl	112f4 <__lxstat64@plt+0x498>
   11ce0:	ldr	r3, [pc, #536]	; 11f00 <__lxstat64@plt+0x10a4>
   11ce4:	ldr	r3, [r3, #4]
   11ce8:	sub	r3, r3, #-1073741823	; 0xc0000001
   11cec:	mov	r2, sp
   11cf0:	ldr	r1, [r4, r3, lsl #2]
   11cf4:	mov	r0, #3
   11cf8:	bl	10e2c <__xstat64@plt>
   11cfc:	cmp	r0, #0
   11d00:	movne	r0, #0
   11d04:	bne	119a8 <__lxstat64@plt+0xb4c>
   11d08:	ldr	r0, [sp, #16]
   11d0c:	and	r0, r0, #61440	; 0xf000
   11d10:	cmp	r0, #24576	; 0x6000
   11d14:	movne	r0, #0
   11d18:	moveq	r0, #1
   11d1c:	b	119a8 <__lxstat64@plt+0xb4c>
   11d20:	bl	112f4 <__lxstat64@plt+0x498>
   11d24:	ldr	r3, [pc, #468]	; 11f00 <__lxstat64@plt+0x10a4>
   11d28:	ldr	r3, [r3, #4]
   11d2c:	sub	r3, r3, #-1073741823	; 0xc0000001
   11d30:	mov	r2, sp
   11d34:	ldr	r1, [r4, r3, lsl #2]
   11d38:	mov	r0, #3
   11d3c:	bl	10e2c <__xstat64@plt>
   11d40:	cmp	r0, #0
   11d44:	movne	r0, #0
   11d48:	bne	119a8 <__lxstat64@plt+0xb4c>
   11d4c:	ldr	r0, [sp, #16]
   11d50:	and	r0, r0, #61440	; 0xf000
   11d54:	cmp	r0, #4096	; 0x1000
   11d58:	movne	r0, #0
   11d5c:	moveq	r0, #1
   11d60:	b	119a8 <__lxstat64@plt+0xb4c>
   11d64:	bl	112f4 <__lxstat64@plt+0x498>
   11d68:	ldr	r3, [pc, #400]	; 11f00 <__lxstat64@plt+0x10a4>
   11d6c:	ldr	r3, [r3, #4]
   11d70:	sub	r3, r3, #-1073741823	; 0xc0000001
   11d74:	mov	r2, sp
   11d78:	ldr	r1, [r4, r3, lsl #2]
   11d7c:	mov	r0, #3
   11d80:	bl	10e5c <__lxstat64@plt>
   11d84:	cmp	r0, #0
   11d88:	movne	r0, #0
   11d8c:	bne	119a8 <__lxstat64@plt+0xb4c>
   11d90:	ldr	r0, [sp, #16]
   11d94:	and	r0, r0, #61440	; 0xf000
   11d98:	cmp	r0, #40960	; 0xa000
   11d9c:	movne	r0, #0
   11da0:	moveq	r0, #1
   11da4:	b	119a8 <__lxstat64@plt+0xb4c>
   11da8:	bl	112f4 <__lxstat64@plt+0x498>
   11dac:	ldr	r3, [pc, #332]	; 11f00 <__lxstat64@plt+0x10a4>
   11db0:	ldr	r3, [r3, #4]
   11db4:	sub	r3, r3, #-1073741823	; 0xc0000001
   11db8:	mov	r2, sp
   11dbc:	ldr	r1, [r4, r3, lsl #2]
   11dc0:	mov	r0, #3
   11dc4:	bl	10e2c <__xstat64@plt>
   11dc8:	cmp	r0, #0
   11dcc:	ldreq	r0, [sp, #16]
   11dd0:	lsreq	r0, r0, #11
   11dd4:	andeq	r0, r0, #1
   11dd8:	movne	r0, #0
   11ddc:	b	119a8 <__lxstat64@plt+0xb4c>
   11de0:	bl	112f4 <__lxstat64@plt+0x498>
   11de4:	ldr	r3, [pc, #276]	; 11f00 <__lxstat64@plt+0x10a4>
   11de8:	ldr	r3, [r3, #4]
   11dec:	sub	r3, r3, #-1073741823	; 0xc0000001
   11df0:	mov	r2, sp
   11df4:	ldr	r1, [r4, r3, lsl #2]
   11df8:	mov	r0, #3
   11dfc:	bl	10e2c <__xstat64@plt>
   11e00:	cmp	r0, #0
   11e04:	ldreq	r0, [sp, #16]
   11e08:	lsreq	r0, r0, #10
   11e0c:	andeq	r0, r0, #1
   11e10:	movne	r0, #0
   11e14:	b	119a8 <__lxstat64@plt+0xb4c>
   11e18:	bl	112f4 <__lxstat64@plt+0x498>
   11e1c:	ldr	r3, [pc, #220]	; 11f00 <__lxstat64@plt+0x10a4>
   11e20:	ldr	r3, [r3, #4]
   11e24:	sub	r3, r3, #-1073741823	; 0xc0000001
   11e28:	mov	r2, sp
   11e2c:	ldr	r1, [r4, r3, lsl #2]
   11e30:	mov	r0, #3
   11e34:	bl	10e2c <__xstat64@plt>
   11e38:	cmp	r0, #0
   11e3c:	ldreq	r0, [sp, #16]
   11e40:	lsreq	r0, r0, #9
   11e44:	andeq	r0, r0, #1
   11e48:	movne	r0, #0
   11e4c:	b	119a8 <__lxstat64@plt+0xb4c>
   11e50:	bl	112f4 <__lxstat64@plt+0x498>
   11e54:	ldr	r3, [pc, #164]	; 11f00 <__lxstat64@plt+0x10a4>
   11e58:	ldr	r3, [r3, #4]
   11e5c:	sub	r3, r3, #-1073741823	; 0xc0000001
   11e60:	ldr	r0, [r4, r3, lsl #2]
   11e64:	bl	111a8 <__lxstat64@plt+0x34c>
   11e68:	mov	r5, r0
   11e6c:	bl	10d84 <__errno_location@plt>
   11e70:	mov	r4, r0
   11e74:	mov	r1, #0
   11e78:	str	r1, [r0]
   11e7c:	mov	r2, #10
   11e80:	mov	r0, r5
   11e84:	bl	10c34 <strtol@plt>
   11e88:	ldr	r3, [r4]
   11e8c:	subs	r3, r3, #34	; 0x22
   11e90:	movne	r3, #1
   11e94:	cmp	r0, #0
   11e98:	movlt	r3, #0
   11e9c:	cmp	r3, #0
   11ea0:	moveq	r0, #0
   11ea4:	beq	119a8 <__lxstat64@plt+0xb4c>
   11ea8:	bl	10e38 <isatty@plt>
   11eac:	adds	r0, r0, #0
   11eb0:	movne	r0, #1
   11eb4:	b	119a8 <__lxstat64@plt+0xb4c>
   11eb8:	bl	112f4 <__lxstat64@plt+0x498>
   11ebc:	ldr	r3, [pc, #60]	; 11f00 <__lxstat64@plt+0x10a4>
   11ec0:	ldr	r3, [r3, #4]
   11ec4:	sub	r3, r3, #-1073741823	; 0xc0000001
   11ec8:	ldr	r3, [r4, r3, lsl #2]
   11ecc:	ldrb	r0, [r3]
   11ed0:	adds	r0, r0, #0
   11ed4:	movne	r0, #1
   11ed8:	b	119a8 <__lxstat64@plt+0xb4c>
   11edc:	bl	112f4 <__lxstat64@plt+0x498>
   11ee0:	ldr	r3, [pc, #24]	; 11f00 <__lxstat64@plt+0x10a4>
   11ee4:	ldr	r3, [r3, #4]
   11ee8:	sub	r3, r3, #-1073741823	; 0xc0000001
   11eec:	ldr	r3, [r4, r3, lsl #2]
   11ef0:	ldrb	r0, [r3]
   11ef4:	clz	r0, r0
   11ef8:	lsr	r0, r0, #5
   11efc:	b	119a8 <__lxstat64@plt+0xb4c>
   11f00:	andeq	r8, r2, r4, asr #2
   11f04:	andeq	r6, r1, r0, asr #10
   11f08:	push	{r4, lr}
   11f0c:	ldr	r3, [pc, #96]	; 11f74 <__lxstat64@plt+0x1118>
   11f10:	ldr	r2, [r3, #4]
   11f14:	ldr	r3, [r3]
   11f18:	ldr	r4, [r3, r2, lsl #2]
   11f1c:	ldr	r1, [pc, #84]	; 11f78 <__lxstat64@plt+0x111c>
   11f20:	mov	r0, r4
   11f24:	bl	10c28 <strcmp@plt>
   11f28:	cmp	r0, #0
   11f2c:	beq	11f5c <__lxstat64@plt+0x1100>
   11f30:	ldrb	r3, [r4]
   11f34:	cmp	r3, #45	; 0x2d
   11f38:	bne	11f70 <__lxstat64@plt+0x1114>
   11f3c:	ldrb	r3, [r4, #1]
   11f40:	cmp	r3, #0
   11f44:	beq	11f70 <__lxstat64@plt+0x1114>
   11f48:	ldrb	r3, [r4, #2]
   11f4c:	cmp	r3, #0
   11f50:	bne	11f70 <__lxstat64@plt+0x1114>
   11f54:	bl	1185c <__lxstat64@plt+0xa00>
   11f58:	pop	{r4, pc}
   11f5c:	bl	112c0 <__lxstat64@plt+0x464>
   11f60:	bl	10f90 <__lxstat64@plt+0x134>
   11f64:	eor	r0, r0, #1
   11f68:	uxtb	r0, r0
   11f6c:	pop	{r4, pc}
   11f70:	bl	1127c <__lxstat64@plt+0x420>
   11f74:	andeq	r8, r2, r4, asr #2
   11f78:	andeq	r6, r1, ip, asr r5
   11f7c:	push	{r4, r5, r6, lr}
   11f80:	sub	r3, r0, #1
   11f84:	cmp	r3, #3
   11f88:	ldrls	pc, [pc, r3, lsl #2]
   11f8c:	b	12048 <__lxstat64@plt+0x11ec>
   11f90:	andeq	r1, r1, r0, lsr #31
   11f94:	andeq	r1, r1, ip, lsr #31
   11f98:			; <UNDEFINED> instruction: 0x00011fb8
   11f9c:	andeq	r1, r1, r4, asr #31
   11fa0:	bl	10f90 <__lxstat64@plt+0x134>
   11fa4:	mov	r4, r0
   11fa8:	b	1206c <__lxstat64@plt+0x1210>
   11fac:	bl	11f08 <__lxstat64@plt+0x10ac>
   11fb0:	mov	r4, r0
   11fb4:	b	1206c <__lxstat64@plt+0x1210>
   11fb8:	bl	123b0 <__lxstat64@plt+0x1554>
   11fbc:	mov	r4, r0
   11fc0:	b	1206c <__lxstat64@plt+0x1210>
   11fc4:	ldr	r3, [pc, #176]	; 1207c <__lxstat64@plt+0x1220>
   11fc8:	ldr	r4, [r3]
   11fcc:	ldr	r3, [r3, #4]
   11fd0:	lsl	r6, r3, #2
   11fd4:	ldr	r5, [r4, r3, lsl #2]
   11fd8:	ldr	r1, [pc, #160]	; 12080 <__lxstat64@plt+0x1224>
   11fdc:	mov	r0, r5
   11fe0:	bl	10c28 <strcmp@plt>
   11fe4:	cmp	r0, #0
   11fe8:	beq	12030 <__lxstat64@plt+0x11d4>
   11fec:	ldr	r1, [pc, #144]	; 12084 <__lxstat64@plt+0x1228>
   11ff0:	mov	r0, r5
   11ff4:	bl	10c28 <strcmp@plt>
   11ff8:	cmp	r0, #0
   11ffc:	bne	12050 <__lxstat64@plt+0x11f4>
   12000:	add	r4, r4, r6
   12004:	ldr	r1, [pc, #124]	; 12088 <__lxstat64@plt+0x122c>
   12008:	ldr	r0, [r4, #12]
   1200c:	bl	10c28 <strcmp@plt>
   12010:	cmp	r0, #0
   12014:	bne	12050 <__lxstat64@plt+0x11f4>
   12018:	bl	112c0 <__lxstat64@plt+0x464>
   1201c:	bl	11f08 <__lxstat64@plt+0x10ac>
   12020:	mov	r4, r0
   12024:	mov	r0, #0
   12028:	bl	112c0 <__lxstat64@plt+0x464>
   1202c:	b	1206c <__lxstat64@plt+0x1210>
   12030:	mov	r0, #1
   12034:	bl	112c0 <__lxstat64@plt+0x464>
   12038:	bl	123b0 <__lxstat64@plt+0x1554>
   1203c:	eor	r0, r0, #1
   12040:	uxtb	r4, r0
   12044:	b	1206c <__lxstat64@plt+0x1210>
   12048:	cmp	r0, #0
   1204c:	ble	12074 <__lxstat64@plt+0x1218>
   12050:	ldr	r3, [pc, #36]	; 1207c <__lxstat64@plt+0x1220>
   12054:	ldr	r2, [r3, #4]
   12058:	ldr	r3, [r3, #8]
   1205c:	cmp	r2, r3
   12060:	bge	12078 <__lxstat64@plt+0x121c>
   12064:	bl	1208c <__lxstat64@plt+0x1230>
   12068:	mov	r4, r0
   1206c:	mov	r0, r4
   12070:	pop	{r4, r5, r6, pc}
   12074:	bl	10e50 <abort@plt>
   12078:	bl	1127c <__lxstat64@plt+0x420>
   1207c:	andeq	r8, r2, r4, asr #2
   12080:	andeq	r6, r1, ip, asr r5
   12084:	andeq	r6, r1, r0, ror #10
   12088:	andeq	r6, r1, r4, ror #10
   1208c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12090:	sub	sp, sp, #12
   12094:	mov	r3, #0
   12098:	str	r3, [sp, #4]
   1209c:	ldr	r6, [pc, #752]	; 12394 <__lxstat64@plt+0x1538>
   120a0:	b	12384 <__lxstat64@plt+0x1528>
   120a4:	ldrb	r2, [r9, #1]
   120a8:	cmp	r2, #0
   120ac:	bne	12228 <__lxstat64@plt+0x13cc>
   120b0:	mov	r0, #1
   120b4:	bl	112c0 <__lxstat64@plt+0x464>
   120b8:	ldr	r9, [r6, #4]
   120bc:	add	r3, r9, #1
   120c0:	cmp	r3, r7
   120c4:	bge	1214c <__lxstat64@plt+0x12f0>
   120c8:	mov	sl, r9
   120cc:	add	r5, r5, r9, lsl #2
   120d0:	mov	r8, #1
   120d4:	ldr	r1, [pc, #700]	; 12398 <__lxstat64@plt+0x153c>
   120d8:	ldr	r0, [r5, #4]!
   120dc:	bl	10c28 <strcmp@plt>
   120e0:	cmp	r0, #0
   120e4:	beq	12108 <__lxstat64@plt+0x12ac>
   120e8:	cmp	r8, #4
   120ec:	beq	12104 <__lxstat64@plt+0x12a8>
   120f0:	add	r8, r8, #1
   120f4:	add	r3, r8, sl
   120f8:	cmp	r7, r3
   120fc:	bgt	120d4 <__lxstat64@plt+0x1278>
   12100:	b	12108 <__lxstat64@plt+0x12ac>
   12104:	sub	r8, r7, r9
   12108:	mov	r0, r8
   1210c:	bl	11f7c <__lxstat64@plt+0x1120>
   12110:	mov	r8, r0
   12114:	ldr	r2, [r6, #4]
   12118:	ldr	r3, [r6]
   1211c:	ldr	r3, [r3, r2, lsl #2]
   12120:	cmp	r3, #0
   12124:	beq	12154 <__lxstat64@plt+0x12f8>
   12128:	ldrb	r2, [r3]
   1212c:	cmp	r2, #41	; 0x29
   12130:	bne	1217c <__lxstat64@plt+0x1320>
   12134:	ldrb	r3, [r3, #1]
   12138:	cmp	r3, #0
   1213c:	bne	1217c <__lxstat64@plt+0x1320>
   12140:	mov	r0, #0
   12144:	bl	112c0 <__lxstat64@plt+0x464>
   12148:	b	12290 <__lxstat64@plt+0x1434>
   1214c:	mov	r8, #1
   12150:	b	12108 <__lxstat64@plt+0x12ac>
   12154:	mov	r2, #5
   12158:	ldr	r1, [pc, #572]	; 1239c <__lxstat64@plt+0x1540>
   1215c:	mov	r0, #0
   12160:	bl	10c94 <dcgettext@plt>
   12164:	mov	r4, r0
   12168:	ldr	r0, [pc, #552]	; 12398 <__lxstat64@plt+0x153c>
   1216c:	bl	14854 <__lxstat64@plt+0x39f8>
   12170:	mov	r1, r0
   12174:	mov	r0, r4
   12178:	bl	1117c <__lxstat64@plt+0x320>
   1217c:	mov	r2, #5
   12180:	ldr	r1, [pc, #536]	; 123a0 <__lxstat64@plt+0x1544>
   12184:	mov	r0, #0
   12188:	bl	10c94 <dcgettext@plt>
   1218c:	mov	r4, r0
   12190:	ldr	r1, [pc, #512]	; 12398 <__lxstat64@plt+0x153c>
   12194:	mov	r0, #0
   12198:	bl	14844 <__lxstat64@plt+0x39e8>
   1219c:	mov	r5, r0
   121a0:	ldr	r3, [pc, #492]	; 12394 <__lxstat64@plt+0x1538>
   121a4:	ldr	r2, [r3, #4]
   121a8:	ldr	r3, [r3]
   121ac:	ldr	r1, [r3, r2, lsl #2]
   121b0:	mov	r0, #1
   121b4:	bl	14844 <__lxstat64@plt+0x39e8>
   121b8:	mov	r2, r0
   121bc:	mov	r1, r5
   121c0:	mov	r0, r4
   121c4:	bl	1117c <__lxstat64@plt+0x320>
   121c8:	mov	r0, #1
   121cc:	bl	11318 <__lxstat64@plt+0x4bc>
   121d0:	mov	r8, r0
   121d4:	b	12290 <__lxstat64@plt+0x1434>
   121d8:	mov	r0, #0
   121dc:	bl	11318 <__lxstat64@plt+0x4bc>
   121e0:	mov	r8, r0
   121e4:	b	12290 <__lxstat64@plt+0x1434>
   121e8:	ldrb	r3, [r9, #1]
   121ec:	cmp	r3, #0
   121f0:	beq	12280 <__lxstat64@plt+0x1424>
   121f4:	ldrb	r3, [r9, #2]
   121f8:	cmp	r3, #0
   121fc:	bne	12280 <__lxstat64@plt+0x1424>
   12200:	bl	1185c <__lxstat64@plt+0xa00>
   12204:	mov	r8, r0
   12208:	b	12290 <__lxstat64@plt+0x1434>
   1220c:	bl	1127c <__lxstat64@plt+0x420>
   12210:	mov	r4, #0
   12214:	lsl	sl, r3, #2
   12218:	ldr	r9, [r5, r3, lsl #2]
   1221c:	ldrb	r8, [r9]
   12220:	cmp	r8, #40	; 0x28
   12224:	beq	120a4 <__lxstat64@plt+0x1248>
   12228:	sub	r7, r7, r3
   1222c:	cmp	r7, #3
   12230:	ble	1225c <__lxstat64@plt+0x1400>
   12234:	ldr	r1, [pc, #360]	; 123a4 <__lxstat64@plt+0x1548>
   12238:	mov	r0, r9
   1223c:	bl	10c28 <strcmp@plt>
   12240:	cmp	r0, #0
   12244:	bne	1225c <__lxstat64@plt+0x1400>
   12248:	add	r3, r5, sl
   1224c:	ldr	r0, [r3, #8]
   12250:	bl	10fbc <__lxstat64@plt+0x160>
   12254:	cmp	r0, #0
   12258:	bne	121c8 <__lxstat64@plt+0x136c>
   1225c:	cmp	r7, #2
   12260:	ble	12278 <__lxstat64@plt+0x141c>
   12264:	add	r5, r5, sl
   12268:	ldr	r0, [r5, #4]
   1226c:	bl	10fbc <__lxstat64@plt+0x160>
   12270:	cmp	r0, #0
   12274:	bne	121d8 <__lxstat64@plt+0x137c>
   12278:	cmp	r8, #45	; 0x2d
   1227c:	beq	121e8 <__lxstat64@plt+0x138c>
   12280:	adds	r8, r8, #0
   12284:	movne	r8, #1
   12288:	mov	r0, #0
   1228c:	bl	112c0 <__lxstat64@plt+0x464>
   12290:	cmp	r8, r4
   12294:	moveq	fp, #0
   12298:	andne	fp, fp, #1
   1229c:	ldr	r3, [r6, #4]
   122a0:	ldr	r2, [r6, #8]
   122a4:	cmp	r3, r2
   122a8:	bge	12344 <__lxstat64@plt+0x14e8>
   122ac:	ldr	r2, [r6]
   122b0:	ldr	r4, [r2, r3, lsl #2]
   122b4:	ldr	r1, [pc, #236]	; 123a8 <__lxstat64@plt+0x154c>
   122b8:	mov	r0, r4
   122bc:	bl	10c28 <strcmp@plt>
   122c0:	cmp	r0, #0
   122c4:	bne	1235c <__lxstat64@plt+0x1500>
   122c8:	bl	112c0 <__lxstat64@plt+0x464>
   122cc:	ldr	r3, [r6, #4]
   122d0:	ldr	r7, [r6, #8]
   122d4:	cmp	r3, r7
   122d8:	bge	1220c <__lxstat64@plt+0x13b0>
   122dc:	ldr	r5, [r6]
   122e0:	ldr	r2, [r5, r3, lsl #2]
   122e4:	ldrb	r1, [r2]
   122e8:	cmp	r1, #33	; 0x21
   122ec:	bne	12210 <__lxstat64@plt+0x13b4>
   122f0:	ldrb	r2, [r2, #1]
   122f4:	cmp	r2, #0
   122f8:	bne	1238c <__lxstat64@plt+0x1530>
   122fc:	mov	r4, #0
   12300:	mov	r0, #1
   12304:	bl	112c0 <__lxstat64@plt+0x464>
   12308:	eor	r4, r4, #1
   1230c:	ldr	r3, [r6, #4]
   12310:	cmp	r3, r7
   12314:	bge	1220c <__lxstat64@plt+0x13b0>
   12318:	ldr	r2, [r5, r3, lsl #2]
   1231c:	ldrb	r1, [r2]
   12320:	cmp	r1, #33	; 0x21
   12324:	bne	12214 <__lxstat64@plt+0x13b8>
   12328:	ldrb	r2, [r2, #1]
   1232c:	cmp	r2, #0
   12330:	beq	12300 <__lxstat64@plt+0x14a4>
   12334:	lsl	sl, r3, #2
   12338:	ldr	r9, [r5, r3, lsl #2]
   1233c:	ldrb	r8, [r9]
   12340:	b	12228 <__lxstat64@plt+0x13cc>
   12344:	ldr	r3, [sp, #4]
   12348:	orr	r3, r3, fp
   1234c:	str	r3, [sp, #4]
   12350:	ldr	r0, [sp, #4]
   12354:	add	sp, sp, #12
   12358:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1235c:	ldr	r3, [sp, #4]
   12360:	orr	r3, r3, fp
   12364:	str	r3, [sp, #4]
   12368:	ldr	r1, [pc, #60]	; 123ac <__lxstat64@plt+0x1550>
   1236c:	mov	r0, r4
   12370:	bl	10c28 <strcmp@plt>
   12374:	cmp	r0, #0
   12378:	bne	12350 <__lxstat64@plt+0x14f4>
   1237c:	mov	r0, #0
   12380:	bl	112c0 <__lxstat64@plt+0x464>
   12384:	mov	fp, #1
   12388:	b	122cc <__lxstat64@plt+0x1470>
   1238c:	mov	r4, #0
   12390:	b	12334 <__lxstat64@plt+0x14d8>
   12394:	andeq	r8, r2, r4, asr #2
   12398:	andeq	r6, r1, r4, ror #10
   1239c:	andeq	r6, r1, r8, ror #10
   123a0:	andeq	r6, r1, r4, ror r5
   123a4:	andeq	r6, r1, r8, lsl #10
   123a8:	andeq	r6, r1, ip, lsl #11
   123ac:	muleq	r1, r0, r5
   123b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   123b4:	ldr	r3, [pc, #284]	; 124d8 <__lxstat64@plt+0x167c>
   123b8:	ldr	r4, [r3]
   123bc:	ldr	r8, [r3, #4]
   123c0:	add	r6, r8, #1
   123c4:	ldr	r5, [r4, r6, lsl #2]
   123c8:	mov	r0, r5
   123cc:	bl	10fbc <__lxstat64@plt+0x160>
   123d0:	cmp	r0, #0
   123d4:	bne	1246c <__lxstat64@plt+0x1610>
   123d8:	lsl	r7, r6, #2
   123dc:	add	r3, r4, r7
   123e0:	ldr	r9, [r3, #-4]
   123e4:	ldr	r1, [pc, #240]	; 124dc <__lxstat64@plt+0x1680>
   123e8:	mov	r0, r9
   123ec:	bl	10c28 <strcmp@plt>
   123f0:	cmp	r0, #0
   123f4:	beq	1247c <__lxstat64@plt+0x1620>
   123f8:	ldr	r1, [pc, #224]	; 124e0 <__lxstat64@plt+0x1684>
   123fc:	mov	r0, r9
   12400:	bl	10c28 <strcmp@plt>
   12404:	cmp	r0, #0
   12408:	bne	12424 <__lxstat64@plt+0x15c8>
   1240c:	add	r7, r4, r7
   12410:	ldr	r1, [pc, #204]	; 124e4 <__lxstat64@plt+0x1688>
   12414:	ldr	r0, [r7, #4]
   12418:	bl	10c28 <strcmp@plt>
   1241c:	cmp	r0, #0
   12420:	beq	12494 <__lxstat64@plt+0x1638>
   12424:	ldr	r1, [pc, #188]	; 124e8 <__lxstat64@plt+0x168c>
   12428:	mov	r0, r5
   1242c:	bl	10c28 <strcmp@plt>
   12430:	cmp	r0, #0
   12434:	beq	1244c <__lxstat64@plt+0x15f0>
   12438:	ldr	r1, [pc, #172]	; 124ec <__lxstat64@plt+0x1690>
   1243c:	mov	r0, r5
   12440:	bl	10c28 <strcmp@plt>
   12444:	cmp	r0, #0
   12448:	bne	124b0 <__lxstat64@plt+0x1654>
   1244c:	ldr	r3, [pc, #132]	; 124d8 <__lxstat64@plt+0x167c>
   12450:	ldr	r3, [r3, #8]
   12454:	cmp	r8, r3
   12458:	bge	124ac <__lxstat64@plt+0x1650>
   1245c:	bl	1208c <__lxstat64@plt+0x1230>
   12460:	mov	r4, r0
   12464:	mov	r0, r4
   12468:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1246c:	mov	r0, #0
   12470:	bl	11318 <__lxstat64@plt+0x4bc>
   12474:	mov	r4, r0
   12478:	b	12464 <__lxstat64@plt+0x1608>
   1247c:	mov	r0, #1
   12480:	bl	112c0 <__lxstat64@plt+0x464>
   12484:	bl	11f08 <__lxstat64@plt+0x10ac>
   12488:	eor	r0, r0, #1
   1248c:	uxtb	r4, r0
   12490:	b	12464 <__lxstat64@plt+0x1608>
   12494:	bl	112c0 <__lxstat64@plt+0x464>
   12498:	bl	10f90 <__lxstat64@plt+0x134>
   1249c:	mov	r4, r0
   124a0:	mov	r0, #0
   124a4:	bl	112c0 <__lxstat64@plt+0x464>
   124a8:	b	12464 <__lxstat64@plt+0x1608>
   124ac:	bl	1127c <__lxstat64@plt+0x420>
   124b0:	mov	r2, #5
   124b4:	ldr	r1, [pc, #52]	; 124f0 <__lxstat64@plt+0x1694>
   124b8:	mov	r0, #0
   124bc:	bl	10c94 <dcgettext@plt>
   124c0:	mov	r5, r0
   124c4:	ldr	r0, [r4, r6, lsl #2]
   124c8:	bl	14854 <__lxstat64@plt+0x39f8>
   124cc:	mov	r1, r0
   124d0:	mov	r0, r5
   124d4:	bl	1117c <__lxstat64@plt+0x320>
   124d8:	andeq	r8, r2, r4, asr #2
   124dc:	andeq	r6, r1, ip, asr r5
   124e0:	andeq	r6, r1, r0, ror #10
   124e4:	andeq	r6, r1, r4, ror #10
   124e8:	andeq	r6, r1, ip, lsl #11
   124ec:	muleq	r1, r0, r5
   124f0:	muleq	r1, r4, r5
   124f4:	push	{lr}		; (str lr, [sp, #-4]!)
   124f8:	sub	sp, sp, #60	; 0x3c
   124fc:	subs	r6, r0, #0
   12500:	beq	1253c <__lxstat64@plt+0x16e0>
   12504:	ldr	r3, [pc, #1008]	; 128fc <__lxstat64@plt+0x1aa0>
   12508:	ldr	r4, [r3]
   1250c:	mov	r2, #5
   12510:	ldr	r1, [pc, #1000]	; 12900 <__lxstat64@plt+0x1aa4>
   12514:	mov	r0, #0
   12518:	bl	10c94 <dcgettext@plt>
   1251c:	ldr	r3, [pc, #992]	; 12904 <__lxstat64@plt+0x1aa8>
   12520:	ldr	r3, [r3]
   12524:	mov	r2, r0
   12528:	mov	r1, #1
   1252c:	mov	r0, r4
   12530:	bl	10dcc <__fprintf_chk@plt>
   12534:	mov	r0, r6
   12538:	bl	10d6c <exit@plt>
   1253c:	mov	r2, #5
   12540:	ldr	r1, [pc, #960]	; 12908 <__lxstat64@plt+0x1aac>
   12544:	mov	r0, #0
   12548:	bl	10c94 <dcgettext@plt>
   1254c:	ldr	r4, [pc, #952]	; 1290c <__lxstat64@plt+0x1ab0>
   12550:	ldr	r1, [r4]
   12554:	bl	10c10 <fputs_unlocked@plt>
   12558:	mov	r2, #5
   1255c:	ldr	r1, [pc, #940]	; 12910 <__lxstat64@plt+0x1ab4>
   12560:	mov	r0, #0
   12564:	bl	10c94 <dcgettext@plt>
   12568:	ldr	r1, [r4]
   1256c:	bl	10c10 <fputs_unlocked@plt>
   12570:	mov	r2, #5
   12574:	ldr	r1, [pc, #920]	; 12914 <__lxstat64@plt+0x1ab8>
   12578:	mov	r0, #0
   1257c:	bl	10c94 <dcgettext@plt>
   12580:	ldr	r1, [r4]
   12584:	bl	10c10 <fputs_unlocked@plt>
   12588:	mov	r2, #5
   1258c:	ldr	r1, [pc, #900]	; 12918 <__lxstat64@plt+0x1abc>
   12590:	mov	r0, #0
   12594:	bl	10c94 <dcgettext@plt>
   12598:	ldr	r1, [r4]
   1259c:	bl	10c10 <fputs_unlocked@plt>
   125a0:	mov	r2, #5
   125a4:	ldr	r1, [pc, #880]	; 1291c <__lxstat64@plt+0x1ac0>
   125a8:	mov	r0, #0
   125ac:	bl	10c94 <dcgettext@plt>
   125b0:	ldr	r1, [r4]
   125b4:	bl	10c10 <fputs_unlocked@plt>
   125b8:	mov	r2, #5
   125bc:	ldr	r1, [pc, #860]	; 12920 <__lxstat64@plt+0x1ac4>
   125c0:	mov	r0, #0
   125c4:	bl	10c94 <dcgettext@plt>
   125c8:	ldr	r1, [r4]
   125cc:	bl	10c10 <fputs_unlocked@plt>
   125d0:	mov	r2, #5
   125d4:	ldr	r1, [pc, #840]	; 12924 <__lxstat64@plt+0x1ac8>
   125d8:	mov	r0, #0
   125dc:	bl	10c94 <dcgettext@plt>
   125e0:	ldr	r1, [r4]
   125e4:	bl	10c10 <fputs_unlocked@plt>
   125e8:	mov	r2, #5
   125ec:	ldr	r1, [pc, #820]	; 12928 <__lxstat64@plt+0x1acc>
   125f0:	mov	r0, #0
   125f4:	bl	10c94 <dcgettext@plt>
   125f8:	ldr	r1, [r4]
   125fc:	bl	10c10 <fputs_unlocked@plt>
   12600:	mov	r2, #5
   12604:	ldr	r1, [pc, #800]	; 1292c <__lxstat64@plt+0x1ad0>
   12608:	mov	r0, #0
   1260c:	bl	10c94 <dcgettext@plt>
   12610:	ldr	r1, [r4]
   12614:	bl	10c10 <fputs_unlocked@plt>
   12618:	mov	r2, #5
   1261c:	ldr	r1, [pc, #780]	; 12930 <__lxstat64@plt+0x1ad4>
   12620:	mov	r0, #0
   12624:	bl	10c94 <dcgettext@plt>
   12628:	ldr	r1, [r4]
   1262c:	bl	10c10 <fputs_unlocked@plt>
   12630:	mov	r2, #5
   12634:	ldr	r1, [pc, #760]	; 12934 <__lxstat64@plt+0x1ad8>
   12638:	mov	r0, #0
   1263c:	bl	10c94 <dcgettext@plt>
   12640:	ldr	r1, [r4]
   12644:	bl	10c10 <fputs_unlocked@plt>
   12648:	mov	r2, #5
   1264c:	ldr	r1, [pc, #740]	; 12938 <__lxstat64@plt+0x1adc>
   12650:	mov	r0, #0
   12654:	bl	10c94 <dcgettext@plt>
   12658:	ldr	r1, [r4]
   1265c:	bl	10c10 <fputs_unlocked@plt>
   12660:	mov	r2, #5
   12664:	ldr	r1, [pc, #720]	; 1293c <__lxstat64@plt+0x1ae0>
   12668:	mov	r0, #0
   1266c:	bl	10c94 <dcgettext@plt>
   12670:	ldr	r1, [r4]
   12674:	bl	10c10 <fputs_unlocked@plt>
   12678:	mov	r2, #5
   1267c:	ldr	r1, [pc, #700]	; 12940 <__lxstat64@plt+0x1ae4>
   12680:	mov	r0, #0
   12684:	bl	10c94 <dcgettext@plt>
   12688:	ldr	r1, [r4]
   1268c:	bl	10c10 <fputs_unlocked@plt>
   12690:	mov	r2, #5
   12694:	ldr	r1, [pc, #680]	; 12944 <__lxstat64@plt+0x1ae8>
   12698:	mov	r0, #0
   1269c:	bl	10c94 <dcgettext@plt>
   126a0:	ldr	r1, [r4]
   126a4:	bl	10c10 <fputs_unlocked@plt>
   126a8:	mov	r2, #5
   126ac:	ldr	r1, [pc, #660]	; 12948 <__lxstat64@plt+0x1aec>
   126b0:	mov	r0, #0
   126b4:	bl	10c94 <dcgettext@plt>
   126b8:	ldr	r1, [r4]
   126bc:	bl	10c10 <fputs_unlocked@plt>
   126c0:	mov	r2, #5
   126c4:	ldr	r1, [pc, #640]	; 1294c <__lxstat64@plt+0x1af0>
   126c8:	mov	r0, #0
   126cc:	bl	10c94 <dcgettext@plt>
   126d0:	mov	r4, r0
   126d4:	mov	r2, #5
   126d8:	ldr	r1, [pc, #624]	; 12950 <__lxstat64@plt+0x1af4>
   126dc:	mov	r0, #0
   126e0:	bl	10c94 <dcgettext@plt>
   126e4:	mov	r2, r0
   126e8:	mov	r1, r4
   126ec:	mov	r0, #1
   126f0:	bl	10db4 <__printf_chk@plt>
   126f4:	mov	ip, sp
   126f8:	ldr	lr, [pc, #596]	; 12954 <__lxstat64@plt+0x1af8>
   126fc:	ldm	lr!, {r0, r1, r2, r3}
   12700:	stmia	ip!, {r0, r1, r2, r3}
   12704:	ldm	lr!, {r0, r1, r2, r3}
   12708:	stmia	ip!, {r0, r1, r2, r3}
   1270c:	ldm	lr!, {r0, r1, r2, r3}
   12710:	stmia	ip!, {r0, r1, r2, r3}
   12714:	ldm	lr, {r0, r1}
   12718:	stm	ip, {r0, r1}
   1271c:	ldr	r1, [sp]
   12720:	cmp	r1, #0
   12724:	moveq	r4, sp
   12728:	beq	12750 <__lxstat64@plt+0x18f4>
   1272c:	mov	r4, sp
   12730:	ldr	r5, [pc, #544]	; 12958 <__lxstat64@plt+0x1afc>
   12734:	mov	r0, r5
   12738:	bl	10c28 <strcmp@plt>
   1273c:	cmp	r0, #0
   12740:	beq	12750 <__lxstat64@plt+0x18f4>
   12744:	ldr	r1, [r4, #8]!
   12748:	cmp	r1, #0
   1274c:	bne	12734 <__lxstat64@plt+0x18d8>
   12750:	ldr	r4, [r4, #4]
   12754:	cmp	r4, #0
   12758:	beq	1286c <__lxstat64@plt+0x1a10>
   1275c:	mov	r2, #5
   12760:	ldr	r1, [pc, #500]	; 1295c <__lxstat64@plt+0x1b00>
   12764:	mov	r0, #0
   12768:	bl	10c94 <dcgettext@plt>
   1276c:	ldr	r3, [pc, #492]	; 12960 <__lxstat64@plt+0x1b04>
   12770:	ldr	r2, [pc, #492]	; 12964 <__lxstat64@plt+0x1b08>
   12774:	mov	r1, r0
   12778:	mov	r0, #1
   1277c:	bl	10db4 <__printf_chk@plt>
   12780:	mov	r1, #0
   12784:	mov	r0, #5
   12788:	bl	10df0 <setlocale@plt>
   1278c:	cmp	r0, #0
   12790:	beq	127a8 <__lxstat64@plt+0x194c>
   12794:	mov	r2, #3
   12798:	ldr	r1, [pc, #456]	; 12968 <__lxstat64@plt+0x1b0c>
   1279c:	bl	10e44 <strncmp@plt>
   127a0:	cmp	r0, #0
   127a4:	bne	12808 <__lxstat64@plt+0x19ac>
   127a8:	mov	r2, #5
   127ac:	ldr	r1, [pc, #440]	; 1296c <__lxstat64@plt+0x1b10>
   127b0:	mov	r0, #0
   127b4:	bl	10c94 <dcgettext@plt>
   127b8:	ldr	r5, [pc, #408]	; 12958 <__lxstat64@plt+0x1afc>
   127bc:	mov	r3, r5
   127c0:	ldr	r2, [pc, #408]	; 12960 <__lxstat64@plt+0x1b04>
   127c4:	mov	r1, r0
   127c8:	mov	r0, #1
   127cc:	bl	10db4 <__printf_chk@plt>
   127d0:	mov	r2, #5
   127d4:	ldr	r1, [pc, #404]	; 12970 <__lxstat64@plt+0x1b14>
   127d8:	mov	r0, #0
   127dc:	bl	10c94 <dcgettext@plt>
   127e0:	mov	r1, r0
   127e4:	ldr	r2, [pc, #392]	; 12974 <__lxstat64@plt+0x1b18>
   127e8:	ldr	r3, [pc, #392]	; 12978 <__lxstat64@plt+0x1b1c>
   127ec:	cmp	r4, r5
   127f0:	movne	r3, r2
   127f4:	mov	r2, r4
   127f8:	mov	r0, #1
   127fc:	bl	10db4 <__printf_chk@plt>
   12800:	b	12534 <__lxstat64@plt+0x16d8>
   12804:	ldr	r4, [pc, #332]	; 12958 <__lxstat64@plt+0x1afc>
   12808:	mov	r2, #5
   1280c:	ldr	r1, [pc, #360]	; 1297c <__lxstat64@plt+0x1b20>
   12810:	mov	r0, #0
   12814:	bl	10c94 <dcgettext@plt>
   12818:	ldr	r3, [pc, #236]	; 1290c <__lxstat64@plt+0x1ab0>
   1281c:	ldr	r1, [r3]
   12820:	bl	10c10 <fputs_unlocked@plt>
   12824:	b	127a8 <__lxstat64@plt+0x194c>
   12828:	mov	r2, #5
   1282c:	ldr	r1, [pc, #312]	; 1296c <__lxstat64@plt+0x1b10>
   12830:	mov	r0, #0
   12834:	bl	10c94 <dcgettext@plt>
   12838:	ldr	r4, [pc, #280]	; 12958 <__lxstat64@plt+0x1afc>
   1283c:	mov	r3, r4
   12840:	ldr	r2, [pc, #280]	; 12960 <__lxstat64@plt+0x1b04>
   12844:	mov	r1, r0
   12848:	mov	r0, #1
   1284c:	bl	10db4 <__printf_chk@plt>
   12850:	mov	r2, #5
   12854:	ldr	r1, [pc, #276]	; 12970 <__lxstat64@plt+0x1b14>
   12858:	mov	r0, #0
   1285c:	bl	10c94 <dcgettext@plt>
   12860:	mov	r1, r0
   12864:	ldr	r3, [pc, #268]	; 12978 <__lxstat64@plt+0x1b1c>
   12868:	b	127f4 <__lxstat64@plt+0x1998>
   1286c:	mov	r2, #5
   12870:	ldr	r1, [pc, #228]	; 1295c <__lxstat64@plt+0x1b00>
   12874:	mov	r0, #0
   12878:	bl	10c94 <dcgettext@plt>
   1287c:	ldr	r3, [pc, #220]	; 12960 <__lxstat64@plt+0x1b04>
   12880:	ldr	r2, [pc, #220]	; 12964 <__lxstat64@plt+0x1b08>
   12884:	mov	r1, r0
   12888:	mov	r0, #1
   1288c:	bl	10db4 <__printf_chk@plt>
   12890:	mov	r1, #0
   12894:	mov	r0, #5
   12898:	bl	10df0 <setlocale@plt>
   1289c:	cmp	r0, #0
   128a0:	beq	12828 <__lxstat64@plt+0x19cc>
   128a4:	mov	r2, #3
   128a8:	ldr	r1, [pc, #184]	; 12968 <__lxstat64@plt+0x1b0c>
   128ac:	bl	10e44 <strncmp@plt>
   128b0:	cmp	r0, #0
   128b4:	bne	12804 <__lxstat64@plt+0x19a8>
   128b8:	mov	r2, #5
   128bc:	ldr	r1, [pc, #168]	; 1296c <__lxstat64@plt+0x1b10>
   128c0:	mov	r0, #0
   128c4:	bl	10c94 <dcgettext@plt>
   128c8:	ldr	r4, [pc, #136]	; 12958 <__lxstat64@plt+0x1afc>
   128cc:	mov	r3, r4
   128d0:	ldr	r2, [pc, #136]	; 12960 <__lxstat64@plt+0x1b04>
   128d4:	mov	r1, r0
   128d8:	mov	r0, #1
   128dc:	bl	10db4 <__printf_chk@plt>
   128e0:	mov	r2, #5
   128e4:	ldr	r1, [pc, #132]	; 12970 <__lxstat64@plt+0x1b14>
   128e8:	mov	r0, #0
   128ec:	bl	10c94 <dcgettext@plt>
   128f0:	mov	r1, r0
   128f4:	ldr	r3, [pc, #124]	; 12978 <__lxstat64@plt+0x1b1c>
   128f8:	b	127f4 <__lxstat64@plt+0x1998>
   128fc:	andeq	r8, r2, r8, lsr r1
   12900:			; <UNDEFINED> instruction: 0x000165b4
   12904:	andeq	r8, r2, r8, asr r1
   12908:	ldrdeq	r6, [r1], -ip
   1290c:	andeq	r8, r2, ip, lsr r1
   12910:	andeq	r6, r1, r4, lsr r6
   12914:	andeq	r6, r1, r8, ror #12
   12918:	muleq	r1, r8, r6
   1291c:	ldrdeq	r6, [r1], -r0
   12920:	andeq	r6, r1, r8, asr #14
   12924:	andeq	r6, r1, r4, asr #16
   12928:	andeq	r6, r1, r0, asr #18
   1292c:			; <UNDEFINED> instruction: 0x00016ab8
   12930:	andeq	r6, r1, r8, ror fp
   12934:	andeq	r6, r1, r4, lsr #24
   12938:	andeq	r6, r1, r8, lsr sp
   1293c:	andeq	r6, r1, r0, lsr #29
   12940:	andeq	r6, r1, r0, asr #31
   12944:	andeq	r7, r1, r4, lsr #1
   12948:	andeq	r7, r1, r0, lsr #2
   1294c:	andeq	r7, r1, r8, lsr #3
   12950:	andeq	r7, r1, r8, ror #4
   12954:	andeq	r6, r1, r4, asr #8
   12958:	andeq	r7, r1, r4, ror r2
   1295c:	andeq	r7, r1, r8, ror r2
   12960:	muleq	r1, r0, r2
   12964:			; <UNDEFINED> instruction: 0x000172b8
   12968:	andeq	r7, r1, r8, asr #5
   1296c:	andeq	r7, r1, r4, lsl r3
   12970:	andeq	r7, r1, r0, lsr r3
   12974:	andeq	r6, r1, r4, ror #12
   12978:	andeq	r7, r1, r0, ror #7
   1297c:	andeq	r7, r1, ip, asr #5
   12980:	push	{r4, r5, r6, lr}
   12984:	sub	sp, sp, #16
   12988:	mov	r4, r0
   1298c:	mov	r6, r1
   12990:	ldr	r0, [r1]
   12994:	bl	12d04 <__lxstat64@plt+0x1ea8>
   12998:	ldr	r1, [pc, #420]	; 12b44 <__lxstat64@plt+0x1ce8>
   1299c:	mov	r0, #6
   129a0:	bl	10df0 <setlocale@plt>
   129a4:	ldr	r5, [pc, #412]	; 12b48 <__lxstat64@plt+0x1cec>
   129a8:	ldr	r1, [pc, #412]	; 12b4c <__lxstat64@plt+0x1cf0>
   129ac:	mov	r0, r5
   129b0:	bl	10e20 <bindtextdomain@plt>
   129b4:	mov	r0, r5
   129b8:	bl	10cac <textdomain@plt>
   129bc:	mov	r2, #2
   129c0:	ldr	r3, [pc, #392]	; 12b50 <__lxstat64@plt+0x1cf4>
   129c4:	str	r2, [r3]
   129c8:	ldr	r0, [pc, #388]	; 12b54 <__lxstat64@plt+0x1cf8>
   129cc:	bl	16420 <__lxstat64@plt+0x55c4>
   129d0:	ldr	r3, [pc, #384]	; 12b58 <__lxstat64@plt+0x1cfc>
   129d4:	str	r6, [r3]
   129d8:	cmp	r4, #2
   129dc:	beq	12a4c <__lxstat64@plt+0x1bf0>
   129e0:	cmp	r4, #1
   129e4:	ble	12ae4 <__lxstat64@plt+0x1c88>
   129e8:	sub	r3, r4, #-1073741823	; 0xc0000001
   129ec:	ldr	r1, [pc, #360]	; 12b5c <__lxstat64@plt+0x1d00>
   129f0:	ldr	r0, [r6, r3, lsl #2]
   129f4:	bl	10c28 <strcmp@plt>
   129f8:	cmp	r0, #0
   129fc:	bne	12ae4 <__lxstat64@plt+0x1c88>
   12a00:	sub	r3, r4, #1
   12a04:	ldr	r2, [pc, #332]	; 12b58 <__lxstat64@plt+0x1cfc>
   12a08:	str	r3, [r2, #8]
   12a0c:	mov	r1, #1
   12a10:	str	r1, [r2, #4]
   12a14:	cmp	r3, r1
   12a18:	ble	12b3c <__lxstat64@plt+0x1ce0>
   12a1c:	sub	r0, r4, #2
   12a20:	bl	11f7c <__lxstat64@plt+0x1120>
   12a24:	ldr	r3, [pc, #300]	; 12b58 <__lxstat64@plt+0x1cfc>
   12a28:	ldr	r4, [r3, #4]
   12a2c:	ldr	r3, [r3, #8]
   12a30:	cmp	r4, r3
   12a34:	eoreq	r0, r0, #1
   12a38:	uxtbeq	r5, r0
   12a3c:	bne	12b0c <__lxstat64@plt+0x1cb0>
   12a40:	mov	r0, r5
   12a44:	add	sp, sp, #16
   12a48:	pop	{r4, r5, r6, pc}
   12a4c:	ldr	r5, [r6, #4]
   12a50:	ldr	r1, [pc, #264]	; 12b60 <__lxstat64@plt+0x1d04>
   12a54:	mov	r0, r5
   12a58:	bl	10c28 <strcmp@plt>
   12a5c:	cmp	r0, #0
   12a60:	beq	12aa8 <__lxstat64@plt+0x1c4c>
   12a64:	ldr	r1, [pc, #248]	; 12b64 <__lxstat64@plt+0x1d08>
   12a68:	mov	r0, r5
   12a6c:	bl	10c28 <strcmp@plt>
   12a70:	subs	r5, r0, #0
   12a74:	beq	12aac <__lxstat64@plt+0x1c50>
   12a78:	sub	r3, r4, #-1073741823	; 0xc0000001
   12a7c:	ldr	r1, [pc, #216]	; 12b5c <__lxstat64@plt+0x1d00>
   12a80:	ldr	r0, [r6, r3, lsl #2]
   12a84:	bl	10c28 <strcmp@plt>
   12a88:	cmp	r0, #0
   12a8c:	bne	12ae4 <__lxstat64@plt+0x1c88>
   12a90:	ldr	r3, [pc, #192]	; 12b58 <__lxstat64@plt+0x1cfc>
   12a94:	sub	r4, r4, #1
   12a98:	str	r4, [r3, #8]
   12a9c:	mov	r5, #1
   12aa0:	str	r5, [r3, #4]
   12aa4:	b	12a40 <__lxstat64@plt+0x1be4>
   12aa8:	bl	124f4 <__lxstat64@plt+0x1698>
   12aac:	mov	r3, #0
   12ab0:	str	r3, [sp, #8]
   12ab4:	ldr	r3, [pc, #172]	; 12b68 <__lxstat64@plt+0x1d0c>
   12ab8:	str	r3, [sp, #4]
   12abc:	ldr	r3, [pc, #168]	; 12b6c <__lxstat64@plt+0x1d10>
   12ac0:	str	r3, [sp]
   12ac4:	ldr	r3, [pc, #164]	; 12b70 <__lxstat64@plt+0x1d14>
   12ac8:	ldr	r3, [r3]
   12acc:	ldr	r2, [pc, #160]	; 12b74 <__lxstat64@plt+0x1d18>
   12ad0:	ldr	r1, [pc, #160]	; 12b78 <__lxstat64@plt+0x1d1c>
   12ad4:	ldr	r0, [pc, #160]	; 12b7c <__lxstat64@plt+0x1d20>
   12ad8:	ldr	r0, [r0]
   12adc:	bl	15088 <__lxstat64@plt+0x422c>
   12ae0:	b	12a40 <__lxstat64@plt+0x1be4>
   12ae4:	mov	r2, #5
   12ae8:	ldr	r1, [pc, #144]	; 12b80 <__lxstat64@plt+0x1d24>
   12aec:	mov	r0, #0
   12af0:	bl	10c94 <dcgettext@plt>
   12af4:	mov	r4, r0
   12af8:	ldr	r0, [pc, #92]	; 12b5c <__lxstat64@plt+0x1d00>
   12afc:	bl	14854 <__lxstat64@plt+0x39f8>
   12b00:	mov	r1, r0
   12b04:	mov	r0, r4
   12b08:	bl	1117c <__lxstat64@plt+0x320>
   12b0c:	mov	r2, #5
   12b10:	ldr	r1, [pc, #108]	; 12b84 <__lxstat64@plt+0x1d28>
   12b14:	mov	r0, #0
   12b18:	bl	10c94 <dcgettext@plt>
   12b1c:	mov	r5, r0
   12b20:	ldr	r3, [pc, #48]	; 12b58 <__lxstat64@plt+0x1cfc>
   12b24:	ldr	r3, [r3]
   12b28:	ldr	r0, [r3, r4, lsl #2]
   12b2c:	bl	14854 <__lxstat64@plt+0x39f8>
   12b30:	mov	r1, r0
   12b34:	mov	r0, r5
   12b38:	bl	1117c <__lxstat64@plt+0x320>
   12b3c:	mov	r5, #1
   12b40:	b	12a40 <__lxstat64@plt+0x1be4>
   12b44:	andeq	r6, r1, r4, ror #12
   12b48:			; <UNDEFINED> instruction: 0x000172bc
   12b4c:	andeq	r7, r1, r4, ror #6
   12b50:	andeq	r8, r2, r8, ror #1
   12b54:	andeq	r2, r1, r8, lsr #23
   12b58:	andeq	r8, r2, r4, asr #2
   12b5c:			; <UNDEFINED> instruction: 0x000173b8
   12b60:	andeq	r7, r1, ip, ror r3
   12b64:	andeq	r7, r1, r4, lsl #7
   12b68:	muleq	r1, r0, r3
   12b6c:	andeq	r7, r1, r4, lsr #7
   12b70:	andeq	r8, r2, r4, ror #1
   12b74:			; <UNDEFINED> instruction: 0x000172b8
   12b78:	andeq	r7, r1, r4, ror r2
   12b7c:	andeq	r8, r2, ip, lsr r1
   12b80:			; <UNDEFINED> instruction: 0x000173bc
   12b84:	andeq	r7, r1, r8, asr #7
   12b88:	ldr	r3, [pc, #4]	; 12b94 <__lxstat64@plt+0x1d38>
   12b8c:	str	r0, [r3]
   12b90:	bx	lr
   12b94:	andeq	r8, r2, r0, asr r1
   12b98:	ldr	r3, [pc, #4]	; 12ba4 <__lxstat64@plt+0x1d48>
   12b9c:	strb	r0, [r3, #4]
   12ba0:	bx	lr
   12ba4:	andeq	r8, r2, r0, asr r1
   12ba8:	push	{r4, r5, r6, lr}
   12bac:	sub	sp, sp, #8
   12bb0:	ldr	r3, [pc, #200]	; 12c80 <__lxstat64@plt+0x1e24>
   12bb4:	ldr	r0, [r3]
   12bb8:	bl	15998 <__lxstat64@plt+0x4b3c>
   12bbc:	cmp	r0, #0
   12bc0:	beq	12be4 <__lxstat64@plt+0x1d88>
   12bc4:	ldr	r3, [pc, #184]	; 12c84 <__lxstat64@plt+0x1e28>
   12bc8:	ldrb	r3, [r3, #4]
   12bcc:	cmp	r3, #0
   12bd0:	beq	12c00 <__lxstat64@plt+0x1da4>
   12bd4:	bl	10d84 <__errno_location@plt>
   12bd8:	ldr	r3, [r0]
   12bdc:	cmp	r3, #32
   12be0:	bne	12c00 <__lxstat64@plt+0x1da4>
   12be4:	ldr	r3, [pc, #156]	; 12c88 <__lxstat64@plt+0x1e2c>
   12be8:	ldr	r0, [r3]
   12bec:	bl	15998 <__lxstat64@plt+0x4b3c>
   12bf0:	cmp	r0, #0
   12bf4:	bne	12c74 <__lxstat64@plt+0x1e18>
   12bf8:	add	sp, sp, #8
   12bfc:	pop	{r4, r5, r6, pc}
   12c00:	mov	r2, #5
   12c04:	ldr	r1, [pc, #128]	; 12c8c <__lxstat64@plt+0x1e30>
   12c08:	mov	r0, #0
   12c0c:	bl	10c94 <dcgettext@plt>
   12c10:	mov	r4, r0
   12c14:	ldr	r3, [pc, #104]	; 12c84 <__lxstat64@plt+0x1e28>
   12c18:	ldr	r5, [r3]
   12c1c:	cmp	r5, #0
   12c20:	beq	12c58 <__lxstat64@plt+0x1dfc>
   12c24:	bl	10d84 <__errno_location@plt>
   12c28:	ldr	r6, [r0]
   12c2c:	mov	r0, r5
   12c30:	bl	146cc <__lxstat64@plt+0x3870>
   12c34:	str	r4, [sp]
   12c38:	mov	r3, r0
   12c3c:	ldr	r2, [pc, #76]	; 12c90 <__lxstat64@plt+0x1e34>
   12c40:	mov	r1, r6
   12c44:	mov	r0, #0
   12c48:	bl	10d18 <error@plt>
   12c4c:	ldr	r3, [pc, #64]	; 12c94 <__lxstat64@plt+0x1e38>
   12c50:	ldr	r0, [r3]
   12c54:	bl	10c58 <_exit@plt>
   12c58:	bl	10d84 <__errno_location@plt>
   12c5c:	mov	r3, r4
   12c60:	ldr	r2, [pc, #48]	; 12c98 <__lxstat64@plt+0x1e3c>
   12c64:	ldr	r1, [r0]
   12c68:	mov	r0, #0
   12c6c:	bl	10d18 <error@plt>
   12c70:	b	12c4c <__lxstat64@plt+0x1df0>
   12c74:	ldr	r3, [pc, #24]	; 12c94 <__lxstat64@plt+0x1e38>
   12c78:	ldr	r0, [r3]
   12c7c:	bl	10c58 <_exit@plt>
   12c80:	andeq	r8, r2, ip, lsr r1
   12c84:	andeq	r8, r2, r0, asr r1
   12c88:	andeq	r8, r2, r8, lsr r1
   12c8c:	andeq	r7, r1, r4, asr r4
   12c90:	andeq	r7, r1, r0, ror #8
   12c94:	andeq	r8, r2, r8, ror #1
   12c98:	andeq	r7, r1, r4, ror #8
   12c9c:	push	{r4, r5, r6, r8, r9, lr}
   12ca0:	mov	r4, r0
   12ca4:	mov	r5, r1
   12ca8:	add	r6, r2, #20
   12cac:	mov	r3, #0
   12cb0:	strb	r3, [r2, #20]
   12cb4:	mov	r8, #10
   12cb8:	mov	r9, #0
   12cbc:	mov	r2, r8
   12cc0:	mov	r3, r9
   12cc4:	mov	r0, r4
   12cc8:	mov	r1, r5
   12ccc:	bl	16248 <__lxstat64@plt+0x53ec>
   12cd0:	add	r2, r2, #48	; 0x30
   12cd4:	strb	r2, [r6, #-1]!
   12cd8:	mov	r2, r8
   12cdc:	mov	r3, r9
   12ce0:	mov	r0, r4
   12ce4:	mov	r1, r5
   12ce8:	bl	16248 <__lxstat64@plt+0x53ec>
   12cec:	mov	r4, r0
   12cf0:	mov	r5, r1
   12cf4:	orrs	r3, r4, r5
   12cf8:	bne	12cbc <__lxstat64@plt+0x1e60>
   12cfc:	mov	r0, r6
   12d00:	pop	{r4, r5, r6, r8, r9, pc}
   12d04:	push	{r4, r5, r6, lr}
   12d08:	subs	r4, r0, #0
   12d0c:	beq	12d84 <__lxstat64@plt+0x1f28>
   12d10:	mov	r1, #47	; 0x2f
   12d14:	mov	r0, r4
   12d18:	bl	10dfc <strrchr@plt>
   12d1c:	cmp	r0, #0
   12d20:	addne	r5, r0, #1
   12d24:	moveq	r5, r4
   12d28:	sub	r3, r5, r4
   12d2c:	cmp	r3, #6
   12d30:	ble	12d70 <__lxstat64@plt+0x1f14>
   12d34:	mov	r2, #7
   12d38:	ldr	r1, [pc, #96]	; 12da0 <__lxstat64@plt+0x1f44>
   12d3c:	sub	r0, r5, #7
   12d40:	bl	10e44 <strncmp@plt>
   12d44:	cmp	r0, #0
   12d48:	bne	12d70 <__lxstat64@plt+0x1f14>
   12d4c:	mov	r2, #3
   12d50:	ldr	r1, [pc, #76]	; 12da4 <__lxstat64@plt+0x1f48>
   12d54:	mov	r0, r5
   12d58:	bl	10e44 <strncmp@plt>
   12d5c:	cmp	r0, #0
   12d60:	addeq	r4, r5, #3
   12d64:	ldreq	r3, [pc, #60]	; 12da8 <__lxstat64@plt+0x1f4c>
   12d68:	streq	r4, [r3]
   12d6c:	movne	r4, r5
   12d70:	ldr	r3, [pc, #52]	; 12dac <__lxstat64@plt+0x1f50>
   12d74:	str	r4, [r3]
   12d78:	ldr	r3, [pc, #48]	; 12db0 <__lxstat64@plt+0x1f54>
   12d7c:	str	r4, [r3]
   12d80:	pop	{r4, r5, r6, pc}
   12d84:	ldr	r3, [pc, #40]	; 12db4 <__lxstat64@plt+0x1f58>
   12d88:	ldr	r3, [r3]
   12d8c:	mov	r2, #55	; 0x37
   12d90:	mov	r1, #1
   12d94:	ldr	r0, [pc, #28]	; 12db8 <__lxstat64@plt+0x1f5c>
   12d98:	bl	10cdc <fwrite@plt>
   12d9c:	bl	10e50 <abort@plt>
   12da0:	andeq	r7, r1, r0, lsr #9
   12da4:	andeq	r7, r1, r8, lsr #9
   12da8:	andeq	r8, r2, r0, lsr r1
   12dac:	andeq	r8, r2, r8, asr r1
   12db0:	andeq	r8, r2, r4, lsr r1
   12db4:	andeq	r8, r2, r8, lsr r1
   12db8:	andeq	r7, r1, r8, ror #8
   12dbc:	push	{r4, r5, r6, lr}
   12dc0:	mov	r5, r0
   12dc4:	mov	r4, r1
   12dc8:	mov	r2, #48	; 0x30
   12dcc:	mov	r1, #0
   12dd0:	bl	10da8 <memset@plt>
   12dd4:	cmp	r4, #10
   12dd8:	beq	12de8 <__lxstat64@plt+0x1f8c>
   12ddc:	str	r4, [r5]
   12de0:	mov	r0, r5
   12de4:	pop	{r4, r5, r6, pc}
   12de8:	bl	10e50 <abort@plt>
   12dec:	push	{r4, r5, r6, lr}
   12df0:	mov	r4, r0
   12df4:	mov	r5, r1
   12df8:	mov	r2, #5
   12dfc:	mov	r1, r0
   12e00:	mov	r0, #0
   12e04:	bl	10c94 <dcgettext@plt>
   12e08:	cmp	r4, r0
   12e0c:	popne	{r4, r5, r6, pc}
   12e10:	bl	15c1c <__lxstat64@plt+0x4dc0>
   12e14:	ldrb	r3, [r0]
   12e18:	bic	r3, r3, #32
   12e1c:	cmp	r3, #85	; 0x55
   12e20:	beq	12e9c <__lxstat64@plt+0x2040>
   12e24:	cmp	r3, #71	; 0x47
   12e28:	bne	12ef8 <__lxstat64@plt+0x209c>
   12e2c:	ldrb	r3, [r0, #1]
   12e30:	bic	r3, r3, #32
   12e34:	cmp	r3, #66	; 0x42
   12e38:	bne	12ef8 <__lxstat64@plt+0x209c>
   12e3c:	ldrb	r3, [r0, #2]
   12e40:	cmp	r3, #49	; 0x31
   12e44:	bne	12ef8 <__lxstat64@plt+0x209c>
   12e48:	ldrb	r3, [r0, #3]
   12e4c:	cmp	r3, #56	; 0x38
   12e50:	bne	12ef8 <__lxstat64@plt+0x209c>
   12e54:	ldrb	r3, [r0, #4]
   12e58:	cmp	r3, #48	; 0x30
   12e5c:	bne	12ef8 <__lxstat64@plt+0x209c>
   12e60:	ldrb	r3, [r0, #5]
   12e64:	cmp	r3, #51	; 0x33
   12e68:	bne	12ef8 <__lxstat64@plt+0x209c>
   12e6c:	ldrb	r3, [r0, #6]
   12e70:	cmp	r3, #48	; 0x30
   12e74:	bne	12ef8 <__lxstat64@plt+0x209c>
   12e78:	ldrb	r3, [r0, #7]
   12e7c:	cmp	r3, #0
   12e80:	bne	12ef8 <__lxstat64@plt+0x209c>
   12e84:	ldrb	r2, [r4]
   12e88:	ldr	r3, [pc, #124]	; 12f0c <__lxstat64@plt+0x20b0>
   12e8c:	ldr	r0, [pc, #124]	; 12f10 <__lxstat64@plt+0x20b4>
   12e90:	cmp	r2, #96	; 0x60
   12e94:	movne	r0, r3
   12e98:	pop	{r4, r5, r6, pc}
   12e9c:	ldrb	r3, [r0, #1]
   12ea0:	bic	r3, r3, #32
   12ea4:	cmp	r3, #84	; 0x54
   12ea8:	bne	12ef8 <__lxstat64@plt+0x209c>
   12eac:	ldrb	r3, [r0, #2]
   12eb0:	bic	r3, r3, #32
   12eb4:	cmp	r3, #70	; 0x46
   12eb8:	bne	12ef8 <__lxstat64@plt+0x209c>
   12ebc:	ldrb	r3, [r0, #3]
   12ec0:	cmp	r3, #45	; 0x2d
   12ec4:	bne	12ef8 <__lxstat64@plt+0x209c>
   12ec8:	ldrb	r3, [r0, #4]
   12ecc:	cmp	r3, #56	; 0x38
   12ed0:	bne	12ef8 <__lxstat64@plt+0x209c>
   12ed4:	ldrb	r3, [r0, #5]
   12ed8:	cmp	r3, #0
   12edc:	bne	12ef8 <__lxstat64@plt+0x209c>
   12ee0:	ldrb	r2, [r4]
   12ee4:	ldr	r3, [pc, #40]	; 12f14 <__lxstat64@plt+0x20b8>
   12ee8:	ldr	r0, [pc, #40]	; 12f18 <__lxstat64@plt+0x20bc>
   12eec:	cmp	r2, #96	; 0x60
   12ef0:	movne	r0, r3
   12ef4:	pop	{r4, r5, r6, pc}
   12ef8:	ldr	r3, [pc, #28]	; 12f1c <__lxstat64@plt+0x20c0>
   12efc:	ldr	r0, [pc, #28]	; 12f20 <__lxstat64@plt+0x20c4>
   12f00:	cmp	r5, #9
   12f04:	movne	r0, r3
   12f08:	pop	{r4, r5, r6, pc}
   12f0c:	andeq	r7, r1, r4, lsl #10
   12f10:	andeq	r7, r1, r0, lsl r5
   12f14:	andeq	r7, r1, r0, lsl #10
   12f18:	andeq	r7, r1, r4, lsl r5
   12f1c:	andeq	r7, r1, r8, lsl #10
   12f20:	andeq	r7, r1, ip, lsl #10
   12f24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f28:	sub	sp, sp, #116	; 0x74
   12f2c:	str	r0, [sp, #36]	; 0x24
   12f30:	mov	sl, r1
   12f34:	str	r2, [sp, #52]	; 0x34
   12f38:	str	r3, [sp, #28]
   12f3c:	ldr	r8, [sp, #152]	; 0x98
   12f40:	bl	10cf4 <__ctype_get_mb_cur_max@plt>
   12f44:	str	r0, [sp, #84]	; 0x54
   12f48:	ldr	r3, [sp, #156]	; 0x9c
   12f4c:	lsr	r3, r3, #1
   12f50:	and	r3, r3, #1
   12f54:	str	r3, [sp, #32]
   12f58:	mov	r3, #1
   12f5c:	str	r3, [sp, #40]	; 0x28
   12f60:	mov	r3, #0
   12f64:	str	r3, [sp, #80]	; 0x50
   12f68:	str	r3, [sp, #44]	; 0x2c
   12f6c:	str	r3, [sp, #48]	; 0x30
   12f70:	str	r3, [sp, #60]	; 0x3c
   12f74:	str	r3, [sp, #72]	; 0x48
   12f78:	str	r3, [sp, #76]	; 0x4c
   12f7c:	mov	r7, sl
   12f80:	mov	sl, r8
   12f84:	cmp	sl, #10
   12f88:	ldrls	pc, [pc, sl, lsl #2]
   12f8c:	b	13144 <__lxstat64@plt+0x22e8>
   12f90:	strdeq	r2, [r1], -r4
   12f94:	andeq	r2, r1, r4, asr #31
   12f98:	andeq	r3, r1, r0, lsr #2
   12f9c:			; <UNDEFINED> instruction: 0x00012fbc
   12fa0:	ldrdeq	r3, [r1], -r4
   12fa4:	andeq	r3, r1, r4
   12fa8:	andeq	r4, r1, r0, ror r0
   12fac:	andeq	r3, r1, r8, asr #2
   12fb0:	andeq	r3, r1, r0, asr #32
   12fb4:	andeq	r3, r1, r0, asr #32
   12fb8:	andeq	r3, r1, r0, asr #32
   12fbc:	mov	r3, #1
   12fc0:	str	r3, [sp, #48]	; 0x30
   12fc4:	mov	r3, #1
   12fc8:	str	r3, [sp, #32]
   12fcc:	str	r3, [sp, #60]	; 0x3c
   12fd0:	ldr	r3, [pc, #4068]	; 13fbc <__lxstat64@plt+0x3160>
   12fd4:	str	r3, [sp, #72]	; 0x48
   12fd8:	mov	fp, #0
   12fdc:	mov	sl, #2
   12fe0:	mov	r6, #0
   12fe4:	ldr	r3, [sp, #48]	; 0x30
   12fe8:	eor	r3, r3, #1
   12fec:	str	r3, [sp, #68]	; 0x44
   12ff0:	b	138d8 <__lxstat64@plt+0x2a7c>
   12ff4:	mov	r3, #0
   12ff8:	str	r3, [sp, #32]
   12ffc:	mov	fp, r3
   13000:	b	12fe0 <__lxstat64@plt+0x2184>
   13004:	ldr	r3, [sp, #32]
   13008:	cmp	r3, #0
   1300c:	bne	13160 <__lxstat64@plt+0x2304>
   13010:	cmp	r7, #0
   13014:	beq	13180 <__lxstat64@plt+0x2324>
   13018:	ldr	r3, [sp, #36]	; 0x24
   1301c:	mov	r2, #34	; 0x22
   13020:	strb	r2, [r3]
   13024:	mov	r3, #1
   13028:	str	r3, [sp, #48]	; 0x30
   1302c:	str	r3, [sp, #60]	; 0x3c
   13030:	ldr	r3, [pc, #3980]	; 13fc4 <__lxstat64@plt+0x3168>
   13034:	str	r3, [sp, #72]	; 0x48
   13038:	mov	fp, #1
   1303c:	b	12fe0 <__lxstat64@plt+0x2184>
   13040:	cmp	sl, #10
   13044:	beq	13068 <__lxstat64@plt+0x220c>
   13048:	mov	r1, sl
   1304c:	ldr	r0, [pc, #3948]	; 13fc0 <__lxstat64@plt+0x3164>
   13050:	bl	12dec <__lxstat64@plt+0x1f90>
   13054:	str	r0, [sp, #164]	; 0xa4
   13058:	mov	r1, sl
   1305c:	ldr	r0, [pc, #3928]	; 13fbc <__lxstat64@plt+0x3160>
   13060:	bl	12dec <__lxstat64@plt+0x1f90>
   13064:	str	r0, [sp, #168]	; 0xa8
   13068:	ldr	r3, [sp, #32]
   1306c:	cmp	r3, #0
   13070:	movne	fp, #0
   13074:	bne	130ac <__lxstat64@plt+0x2250>
   13078:	ldr	r3, [sp, #164]	; 0xa4
   1307c:	ldrb	r3, [r3]
   13080:	cmp	r3, #0
   13084:	beq	130cc <__lxstat64@plt+0x2270>
   13088:	ldr	r2, [sp, #164]	; 0xa4
   1308c:	mov	fp, #0
   13090:	ldr	r1, [sp, #36]	; 0x24
   13094:	cmp	r7, fp
   13098:	strbhi	r3, [r1, fp]
   1309c:	add	fp, fp, #1
   130a0:	ldrb	r3, [r2, #1]!
   130a4:	cmp	r3, #0
   130a8:	bne	13094 <__lxstat64@plt+0x2238>
   130ac:	ldr	r0, [sp, #168]	; 0xa8
   130b0:	bl	10d78 <strlen@plt>
   130b4:	str	r0, [sp, #60]	; 0x3c
   130b8:	ldr	r3, [sp, #168]	; 0xa8
   130bc:	str	r3, [sp, #72]	; 0x48
   130c0:	mov	r3, #1
   130c4:	str	r3, [sp, #48]	; 0x30
   130c8:	b	12fe0 <__lxstat64@plt+0x2184>
   130cc:	mov	fp, #0
   130d0:	b	130ac <__lxstat64@plt+0x2250>
   130d4:	ldr	r3, [sp, #32]
   130d8:	cmp	r3, #0
   130dc:	bne	1319c <__lxstat64@plt+0x2340>
   130e0:	mov	r3, #1
   130e4:	str	r3, [sp, #48]	; 0x30
   130e8:	cmp	r7, #0
   130ec:	beq	131b8 <__lxstat64@plt+0x235c>
   130f0:	ldr	r3, [sp, #36]	; 0x24
   130f4:	mov	r2, #39	; 0x27
   130f8:	strb	r2, [r3]
   130fc:	mov	r3, #0
   13100:	str	r3, [sp, #32]
   13104:	mov	r3, #1
   13108:	str	r3, [sp, #60]	; 0x3c
   1310c:	ldr	r3, [pc, #3752]	; 13fbc <__lxstat64@plt+0x3160>
   13110:	str	r3, [sp, #72]	; 0x48
   13114:	mov	fp, #1
   13118:	mov	sl, #2
   1311c:	b	12fe0 <__lxstat64@plt+0x2184>
   13120:	ldr	r3, [sp, #32]
   13124:	cmp	r3, #0
   13128:	beq	130e8 <__lxstat64@plt+0x228c>
   1312c:	mov	r3, #1
   13130:	str	r3, [sp, #60]	; 0x3c
   13134:	ldr	r3, [pc, #3712]	; 13fbc <__lxstat64@plt+0x3160>
   13138:	str	r3, [sp, #72]	; 0x48
   1313c:	mov	fp, #0
   13140:	b	12fe0 <__lxstat64@plt+0x2184>
   13144:	bl	10e50 <abort@plt>
   13148:	mov	r3, #0
   1314c:	str	r3, [sp, #32]
   13150:	mov	r3, #1
   13154:	str	r3, [sp, #48]	; 0x30
   13158:	mov	fp, #0
   1315c:	b	12fe0 <__lxstat64@plt+0x2184>
   13160:	ldr	r3, [sp, #32]
   13164:	str	r3, [sp, #48]	; 0x30
   13168:	mov	r3, #1
   1316c:	str	r3, [sp, #60]	; 0x3c
   13170:	ldr	r3, [pc, #3660]	; 13fc4 <__lxstat64@plt+0x3168>
   13174:	str	r3, [sp, #72]	; 0x48
   13178:	mov	fp, #0
   1317c:	b	12fe0 <__lxstat64@plt+0x2184>
   13180:	mov	r3, #1
   13184:	str	r3, [sp, #48]	; 0x30
   13188:	str	r3, [sp, #60]	; 0x3c
   1318c:	ldr	r3, [pc, #3632]	; 13fc4 <__lxstat64@plt+0x3168>
   13190:	str	r3, [sp, #72]	; 0x48
   13194:	mov	fp, #1
   13198:	b	12fe0 <__lxstat64@plt+0x2184>
   1319c:	mov	r3, #1
   131a0:	str	r3, [sp, #60]	; 0x3c
   131a4:	ldr	r3, [pc, #3600]	; 13fbc <__lxstat64@plt+0x3160>
   131a8:	str	r3, [sp, #72]	; 0x48
   131ac:	mov	fp, #0
   131b0:	mov	sl, #2
   131b4:	b	12fe0 <__lxstat64@plt+0x2184>
   131b8:	mov	r3, #0
   131bc:	str	r3, [sp, #32]
   131c0:	mov	r3, #1
   131c4:	str	r3, [sp, #60]	; 0x3c
   131c8:	ldr	r3, [pc, #3564]	; 13fbc <__lxstat64@plt+0x3160>
   131cc:	str	r3, [sp, #72]	; 0x48
   131d0:	mov	fp, #1
   131d4:	mov	sl, #2
   131d8:	b	12fe0 <__lxstat64@plt+0x2184>
   131dc:	mov	r3, #0
   131e0:	str	r3, [sp, #56]	; 0x38
   131e4:	ldr	r3, [sp, #52]	; 0x34
   131e8:	add	r2, r3, r6
   131ec:	str	r2, [sp, #64]	; 0x40
   131f0:	ldrb	r4, [r3, r6]
   131f4:	cmp	r4, #126	; 0x7e
   131f8:	ldrls	pc, [pc, r4, lsl #2]
   131fc:	b	13a38 <__lxstat64@plt+0x2bdc>
   13200:	andeq	r3, r1, r8, lsl r4
   13204:	andeq	r3, r1, r8, lsr sl
   13208:	andeq	r3, r1, r8, lsr sl
   1320c:	andeq	r3, r1, r8, lsr sl
   13210:	andeq	r3, r1, r8, lsr sl
   13214:	andeq	r3, r1, r8, lsr sl
   13218:	andeq	r3, r1, r8, lsr sl
   1321c:	andeq	r3, r1, r4, ror r7
   13220:	andeq	r3, r1, r0, lsl r4
   13224:	andeq	r3, r1, ip, lsr #14
   13228:	andeq	r3, r1, r4, lsr #14
   1322c:	muleq	r1, r4, r6
   13230:	andeq	r3, r1, ip, lsl #13
   13234:	andeq	r3, r1, r8, lsl #8
   13238:	andeq	r3, r1, r8, lsr sl
   1323c:	andeq	r3, r1, r8, lsr sl
   13240:	andeq	r3, r1, r8, lsr sl
   13244:	andeq	r3, r1, r8, lsr sl
   13248:	andeq	r3, r1, r8, lsr sl
   1324c:	andeq	r3, r1, r8, lsr sl
   13250:	andeq	r3, r1, r8, lsr sl
   13254:	andeq	r3, r1, r8, lsr sl
   13258:	andeq	r3, r1, r8, lsr sl
   1325c:	andeq	r3, r1, r8, lsr sl
   13260:	andeq	r3, r1, r8, lsr sl
   13264:	andeq	r3, r1, r8, lsr sl
   13268:	andeq	r3, r1, r8, lsr sl
   1326c:	andeq	r3, r1, r8, lsr sl
   13270:	andeq	r3, r1, r8, lsr sl
   13274:	andeq	r3, r1, r8, lsr sl
   13278:	andeq	r3, r1, r8, lsr sl
   1327c:	andeq	r3, r1, r8, lsr sl
   13280:	andeq	r3, r1, r8, asr #15
   13284:	andeq	r3, r1, r4, asr #15
   13288:	andeq	r3, r1, r4, asr #15
   1328c:	muleq	r1, ip, r7
   13290:	andeq	r3, r1, r4, asr #15
   13294:	andeq	r3, r1, ip, lsl #28
   13298:	andeq	r3, r1, r4, asr #15
   1329c:	muleq	r1, ip, r9
   132a0:	andeq	r3, r1, r4, asr #15
   132a4:	andeq	r3, r1, r4, asr #15
   132a8:	andeq	r3, r1, r4, asr #15
   132ac:	andeq	r3, r1, ip, lsl #28
   132b0:	andeq	r3, r1, ip, lsl #28
   132b4:	andeq	r3, r1, ip, lsl #28
   132b8:	andeq	r3, r1, ip, lsl #28
   132bc:	andeq	r3, r1, ip, lsl #28
   132c0:	andeq	r3, r1, ip, lsl #28
   132c4:	andeq	r3, r1, ip, lsl #28
   132c8:	andeq	r3, r1, ip, lsl #28
   132cc:	andeq	r3, r1, ip, lsl #28
   132d0:	andeq	r3, r1, ip, lsl #28
   132d4:	andeq	r3, r1, ip, lsl #28
   132d8:	andeq	r3, r1, ip, lsl #28
   132dc:	andeq	r3, r1, ip, lsl #28
   132e0:	andeq	r3, r1, ip, lsl #28
   132e4:	andeq	r3, r1, ip, lsl #28
   132e8:	andeq	r3, r1, ip, lsl #28
   132ec:	andeq	r3, r1, r4, asr #15
   132f0:	andeq	r3, r1, r4, asr #15
   132f4:	andeq	r3, r1, r4, asr #15
   132f8:	andeq	r3, r1, r4, asr #15
   132fc:	andeq	r3, r1, r0, lsr #10
   13300:	andeq	r3, r1, r8, lsr sl
   13304:	andeq	r3, r1, ip, lsl #28
   13308:	andeq	r3, r1, ip, lsl #28
   1330c:	andeq	r3, r1, ip, lsl #28
   13310:	andeq	r3, r1, ip, lsl #28
   13314:	andeq	r3, r1, ip, lsl #28
   13318:	andeq	r3, r1, ip, lsl #28
   1331c:	andeq	r3, r1, ip, lsl #28
   13320:	andeq	r3, r1, ip, lsl #28
   13324:	andeq	r3, r1, ip, lsl #28
   13328:	andeq	r3, r1, ip, lsl #28
   1332c:	andeq	r3, r1, ip, lsl #28
   13330:	andeq	r3, r1, ip, lsl #28
   13334:	andeq	r3, r1, ip, lsl #28
   13338:	andeq	r3, r1, ip, lsl #28
   1333c:	andeq	r3, r1, ip, lsl #28
   13340:	andeq	r3, r1, ip, lsl #28
   13344:	andeq	r3, r1, ip, lsl #28
   13348:	andeq	r3, r1, ip, lsl #28
   1334c:	andeq	r3, r1, ip, lsl #28
   13350:	andeq	r3, r1, ip, lsl #28
   13354:	andeq	r3, r1, ip, lsl #28
   13358:	andeq	r3, r1, ip, lsl #28
   1335c:	andeq	r3, r1, ip, lsl #28
   13360:	andeq	r3, r1, ip, lsl #28
   13364:	andeq	r3, r1, ip, lsl #28
   13368:	andeq	r3, r1, ip, lsl #28
   1336c:	andeq	r3, r1, r4, asr #15
   13370:	muleq	r1, ip, r6
   13374:	andeq	r3, r1, ip, lsl #28
   13378:	andeq	r3, r1, r4, asr #15
   1337c:	andeq	r3, r1, ip, lsl #28
   13380:	andeq	r3, r1, r4, asr #15
   13384:	andeq	r3, r1, ip, lsl #28
   13388:	andeq	r3, r1, ip, lsl #28
   1338c:	andeq	r3, r1, ip, lsl #28
   13390:	andeq	r3, r1, ip, lsl #28
   13394:	andeq	r3, r1, ip, lsl #28
   13398:	andeq	r3, r1, ip, lsl #28
   1339c:	andeq	r3, r1, ip, lsl #28
   133a0:	andeq	r3, r1, ip, lsl #28
   133a4:	andeq	r3, r1, ip, lsl #28
   133a8:	andeq	r3, r1, ip, lsl #28
   133ac:	andeq	r3, r1, ip, lsl #28
   133b0:	andeq	r3, r1, ip, lsl #28
   133b4:	andeq	r3, r1, ip, lsl #28
   133b8:	andeq	r3, r1, ip, lsl #28
   133bc:	andeq	r3, r1, ip, lsl #28
   133c0:	andeq	r3, r1, ip, lsl #28
   133c4:	andeq	r3, r1, ip, lsl #28
   133c8:	andeq	r3, r1, ip, lsl #28
   133cc:	andeq	r3, r1, ip, lsl #28
   133d0:	andeq	r3, r1, ip, lsl #28
   133d4:	andeq	r3, r1, ip, lsl #28
   133d8:	andeq	r3, r1, ip, lsl #28
   133dc:	andeq	r3, r1, ip, lsl #28
   133e0:	andeq	r3, r1, ip, lsl #28
   133e4:	andeq	r3, r1, ip, lsl #28
   133e8:	andeq	r3, r1, ip, lsl #28
   133ec:	andeq	r3, r1, ip, ror r7
   133f0:	andeq	r3, r1, r4, asr #15
   133f4:	andeq	r3, r1, ip, ror r7
   133f8:	muleq	r1, ip, r7
   133fc:	mov	r3, #0
   13400:	str	r3, [sp, #56]	; 0x38
   13404:	b	131e4 <__lxstat64@plt+0x2388>
   13408:	mov	r3, #114	; 0x72
   1340c:	b	13730 <__lxstat64@plt+0x28d4>
   13410:	mov	r3, #98	; 0x62
   13414:	b	13748 <__lxstat64@plt+0x28ec>
   13418:	ldr	r3, [sp, #48]	; 0x30
   1341c:	cmp	r3, #0
   13420:	beq	13508 <__lxstat64@plt+0x26ac>
   13424:	ldr	r3, [sp, #32]
   13428:	cmp	r3, #0
   1342c:	bne	13f90 <__lxstat64@plt+0x3134>
   13430:	ldr	r3, [sp, #44]	; 0x2c
   13434:	eor	r3, r3, #1
   13438:	cmp	sl, #2
   1343c:	movne	r3, #0
   13440:	andeq	r3, r3, #1
   13444:	cmp	r3, #0
   13448:	moveq	r2, fp
   1344c:	beq	13490 <__lxstat64@plt+0x2634>
   13450:	cmp	r7, fp
   13454:	ldrhi	r2, [sp, #36]	; 0x24
   13458:	movhi	r1, #39	; 0x27
   1345c:	strbhi	r1, [r2, fp]
   13460:	add	r2, fp, #1
   13464:	cmp	r7, r2
   13468:	ldrhi	r1, [sp, #36]	; 0x24
   1346c:	movhi	r0, #36	; 0x24
   13470:	strbhi	r0, [r1, r2]
   13474:	add	r2, fp, #2
   13478:	cmp	r7, r2
   1347c:	ldrhi	r1, [sp, #36]	; 0x24
   13480:	movhi	r0, #39	; 0x27
   13484:	strbhi	r0, [r1, r2]
   13488:	add	r2, fp, #3
   1348c:	str	r3, [sp, #44]	; 0x2c
   13490:	cmp	r7, r2
   13494:	ldrhi	r3, [sp, #36]	; 0x24
   13498:	movhi	r1, #92	; 0x5c
   1349c:	strbhi	r1, [r3, r2]
   134a0:	add	fp, r2, #1
   134a4:	cmp	r5, #0
   134a8:	beq	13e14 <__lxstat64@plt+0x2fb8>
   134ac:	add	r3, r6, #1
   134b0:	ldr	r1, [sp, #28]
   134b4:	cmp	r1, r3
   134b8:	bls	13e24 <__lxstat64@plt+0x2fc8>
   134bc:	ldr	r1, [sp, #52]	; 0x34
   134c0:	ldrb	r3, [r1, r3]
   134c4:	sub	r3, r3, #48	; 0x30
   134c8:	uxtb	r3, r3
   134cc:	cmp	r3, #9
   134d0:	bhi	13e30 <__lxstat64@plt+0x2fd4>
   134d4:	cmp	r7, fp
   134d8:	movhi	r3, #48	; 0x30
   134dc:	ldrhi	r1, [sp, #36]	; 0x24
   134e0:	strbhi	r3, [r1, fp]
   134e4:	add	r3, r2, #2
   134e8:	cmp	r7, r3
   134ec:	movhi	r1, #48	; 0x30
   134f0:	ldrhi	r0, [sp, #36]	; 0x24
   134f4:	strbhi	r1, [r0, r3]
   134f8:	add	fp, r2, #3
   134fc:	ldr	r8, [sp, #32]
   13500:	mov	r4, #48	; 0x30
   13504:	b	137e0 <__lxstat64@plt+0x2984>
   13508:	ldr	r3, [sp, #156]	; 0x9c
   1350c:	tst	r3, #1
   13510:	bne	138d4 <__lxstat64@plt+0x2a78>
   13514:	ldr	r5, [sp, #48]	; 0x30
   13518:	mov	r8, r5
   1351c:	b	137e0 <__lxstat64@plt+0x2984>
   13520:	cmp	sl, #2
   13524:	beq	1353c <__lxstat64@plt+0x26e0>
   13528:	cmp	sl, #5
   1352c:	beq	13554 <__lxstat64@plt+0x26f8>
   13530:	mov	r8, #0
   13534:	mov	r5, r8
   13538:	b	137e0 <__lxstat64@plt+0x2984>
   1353c:	ldr	r3, [sp, #32]
   13540:	cmp	r3, #0
   13544:	bne	13fa4 <__lxstat64@plt+0x3148>
   13548:	mov	r8, r3
   1354c:	mov	r5, r3
   13550:	b	137e0 <__lxstat64@plt+0x2984>
   13554:	ldr	r3, [sp, #156]	; 0x9c
   13558:	tst	r3, #4
   1355c:	beq	13e3c <__lxstat64@plt+0x2fe0>
   13560:	add	r3, r6, #2
   13564:	ldr	r2, [sp, #28]
   13568:	cmp	r2, r3
   1356c:	bls	13e48 <__lxstat64@plt+0x2fec>
   13570:	ldr	r2, [sp, #52]	; 0x34
   13574:	add	r2, r2, r6
   13578:	ldrb	r2, [r2, #1]
   1357c:	cmp	r2, #63	; 0x3f
   13580:	movne	r8, #0
   13584:	movne	r5, r8
   13588:	bne	137e0 <__lxstat64@plt+0x2984>
   1358c:	ldr	r2, [sp, #52]	; 0x34
   13590:	ldrb	r2, [r2, r3]
   13594:	sub	r1, r2, #33	; 0x21
   13598:	cmp	r1, #29
   1359c:	ldrls	pc, [pc, r1, lsl #2]
   135a0:	b	13e54 <__lxstat64@plt+0x2ff8>
   135a4:	andeq	r3, r1, ip, lsl r6
   135a8:	andeq	r3, r1, r4, asr lr
   135ac:	andeq	r3, r1, r4, asr lr
   135b0:	andeq	r3, r1, r4, asr lr
   135b4:	andeq	r3, r1, r4, asr lr
   135b8:	andeq	r3, r1, r4, asr lr
   135bc:	andeq	r3, r1, ip, lsl r6
   135c0:	andeq	r3, r1, ip, lsl r6
   135c4:	andeq	r3, r1, ip, lsl r6
   135c8:	andeq	r3, r1, r4, asr lr
   135cc:	andeq	r3, r1, r4, asr lr
   135d0:	andeq	r3, r1, r4, asr lr
   135d4:	andeq	r3, r1, ip, lsl r6
   135d8:	andeq	r3, r1, r4, asr lr
   135dc:	andeq	r3, r1, ip, lsl r6
   135e0:	andeq	r3, r1, r4, asr lr
   135e4:	andeq	r3, r1, r4, asr lr
   135e8:	andeq	r3, r1, r4, asr lr
   135ec:	andeq	r3, r1, r4, asr lr
   135f0:	andeq	r3, r1, r4, asr lr
   135f4:	andeq	r3, r1, r4, asr lr
   135f8:	andeq	r3, r1, r4, asr lr
   135fc:	andeq	r3, r1, r4, asr lr
   13600:	andeq	r3, r1, r4, asr lr
   13604:	andeq	r3, r1, r4, asr lr
   13608:	andeq	r3, r1, r4, asr lr
   1360c:	andeq	r3, r1, r4, asr lr
   13610:	andeq	r3, r1, ip, lsl r6
   13614:	andeq	r3, r1, ip, lsl r6
   13618:	andeq	r3, r1, ip, lsl r6
   1361c:	ldr	r1, [sp, #32]
   13620:	cmp	r1, #0
   13624:	bne	14064 <__lxstat64@plt+0x3208>
   13628:	cmp	r7, fp
   1362c:	movhi	r1, #63	; 0x3f
   13630:	ldrhi	r0, [sp, #36]	; 0x24
   13634:	strbhi	r1, [r0, fp]
   13638:	add	r1, fp, #1
   1363c:	cmp	r7, r1
   13640:	ldrhi	r0, [sp, #36]	; 0x24
   13644:	movhi	ip, #34	; 0x22
   13648:	strbhi	ip, [r0, r1]
   1364c:	add	r1, fp, #2
   13650:	cmp	r7, r1
   13654:	ldrhi	r0, [sp, #36]	; 0x24
   13658:	movhi	ip, #34	; 0x22
   1365c:	strbhi	ip, [r0, r1]
   13660:	add	r1, fp, #3
   13664:	cmp	r7, r1
   13668:	movhi	r0, #63	; 0x3f
   1366c:	ldrhi	ip, [sp, #36]	; 0x24
   13670:	strbhi	r0, [ip, r1]
   13674:	add	fp, fp, #4
   13678:	ldr	r5, [sp, #32]
   1367c:	mov	r8, r5
   13680:	mov	r4, r2
   13684:	mov	r6, r3
   13688:	b	137e0 <__lxstat64@plt+0x2984>
   1368c:	mov	r3, #102	; 0x66
   13690:	b	13748 <__lxstat64@plt+0x28ec>
   13694:	mov	r3, #118	; 0x76
   13698:	b	13748 <__lxstat64@plt+0x28ec>
   1369c:	cmp	sl, #2
   136a0:	beq	1370c <__lxstat64@plt+0x28b0>
   136a4:	ldr	r3, [sp, #48]	; 0x30
   136a8:	ldr	r2, [sp, #32]
   136ac:	and	r3, r3, r2
   136b0:	tst	r9, r3
   136b4:	moveq	r3, r4
   136b8:	beq	13748 <__lxstat64@plt+0x28ec>
   136bc:	mov	r8, #0
   136c0:	mov	r5, r8
   136c4:	eor	r5, r5, #1
   136c8:	ldr	r3, [sp, #44]	; 0x2c
   136cc:	and	r5, r5, r3
   136d0:	tst	r5, #255	; 0xff
   136d4:	beq	138b4 <__lxstat64@plt+0x2a58>
   136d8:	cmp	r7, fp
   136dc:	ldrhi	r3, [sp, #36]	; 0x24
   136e0:	movhi	r2, #39	; 0x27
   136e4:	strbhi	r2, [r3, fp]
   136e8:	add	r3, fp, #1
   136ec:	cmp	r7, r3
   136f0:	ldrhi	r2, [sp, #36]	; 0x24
   136f4:	movhi	r1, #39	; 0x27
   136f8:	strbhi	r1, [r2, r3]
   136fc:	add	fp, fp, #2
   13700:	mov	r3, #0
   13704:	str	r3, [sp, #44]	; 0x2c
   13708:	b	138b4 <__lxstat64@plt+0x2a58>
   1370c:	ldr	r3, [sp, #32]
   13710:	cmp	r3, #0
   13714:	bne	13fb0 <__lxstat64@plt+0x3154>
   13718:	mov	r8, r3
   1371c:	mov	r5, r3
   13720:	b	136c4 <__lxstat64@plt+0x2868>
   13724:	mov	r3, #110	; 0x6e
   13728:	b	13730 <__lxstat64@plt+0x28d4>
   1372c:	mov	r3, #116	; 0x74
   13730:	ldr	r2, [sp, #32]
   13734:	cmp	sl, #2
   13738:	movne	r2, #0
   1373c:	andeq	r2, r2, #1
   13740:	cmp	r2, #0
   13744:	bne	13768 <__lxstat64@plt+0x290c>
   13748:	ldr	r2, [sp, #48]	; 0x30
   1374c:	cmp	r2, #0
   13750:	moveq	r8, r2
   13754:	moveq	r5, r2
   13758:	beq	137e0 <__lxstat64@plt+0x2984>
   1375c:	mov	r4, r3
   13760:	mov	r8, #0
   13764:	b	13838 <__lxstat64@plt+0x29dc>
   13768:	mov	r8, sl
   1376c:	mov	sl, r7
   13770:	b	13fdc <__lxstat64@plt+0x3180>
   13774:	mov	r3, #97	; 0x61
   13778:	b	13748 <__lxstat64@plt+0x28ec>
   1377c:	ldr	r3, [sp, #28]
   13780:	cmn	r3, #1
   13784:	beq	137b0 <__lxstat64@plt+0x2954>
   13788:	ldr	r3, [sp, #28]
   1378c:	subs	r3, r3, #1
   13790:	movne	r3, #1
   13794:	cmp	r3, #0
   13798:	bne	13e60 <__lxstat64@plt+0x3004>
   1379c:	cmp	r6, #0
   137a0:	beq	137c8 <__lxstat64@plt+0x296c>
   137a4:	mov	r8, #0
   137a8:	mov	r5, r8
   137ac:	b	137e0 <__lxstat64@plt+0x2984>
   137b0:	ldr	r3, [sp, #52]	; 0x34
   137b4:	ldrb	r3, [r3, #1]
   137b8:	adds	r3, r3, #0
   137bc:	movne	r3, #1
   137c0:	b	13794 <__lxstat64@plt+0x2938>
   137c4:	mov	r8, #0
   137c8:	ldr	r5, [sp, #32]
   137cc:	cmp	sl, #2
   137d0:	movne	r5, #0
   137d4:	andeq	r5, r5, #1
   137d8:	cmp	r5, #0
   137dc:	bne	13990 <__lxstat64@plt+0x2b34>
   137e0:	ldr	r3, [sp, #68]	; 0x44
   137e4:	cmp	sl, #2
   137e8:	orreq	r3, r3, #1
   137ec:	eor	r3, r3, #1
   137f0:	ldr	r2, [sp, #32]
   137f4:	orr	r3, r2, r3
   137f8:	tst	r3, #255	; 0xff
   137fc:	beq	1382c <__lxstat64@plt+0x29d0>
   13800:	ldr	r3, [sp, #160]	; 0xa0
   13804:	cmp	r3, #0
   13808:	beq	1382c <__lxstat64@plt+0x29d0>
   1380c:	lsr	r2, r4, #5
   13810:	uxtb	r2, r2
   13814:	and	r3, r4, #31
   13818:	ldr	r1, [sp, #160]	; 0xa0
   1381c:	ldr	r2, [r1, r2, lsl #2]
   13820:	lsr	r3, r2, r3
   13824:	tst	r3, #1
   13828:	bne	13838 <__lxstat64@plt+0x29dc>
   1382c:	ldr	r3, [sp, #56]	; 0x38
   13830:	cmp	r3, #0
   13834:	beq	136c4 <__lxstat64@plt+0x2868>
   13838:	ldr	r3, [sp, #32]
   1383c:	cmp	r3, #0
   13840:	bne	1404c <__lxstat64@plt+0x31f0>
   13844:	ldr	r3, [sp, #44]	; 0x2c
   13848:	eor	r3, r3, #1
   1384c:	cmp	sl, #2
   13850:	movne	r3, #0
   13854:	andeq	r3, r3, #1
   13858:	cmp	r3, #0
   1385c:	beq	138a0 <__lxstat64@plt+0x2a44>
   13860:	cmp	r7, fp
   13864:	ldrhi	r2, [sp, #36]	; 0x24
   13868:	movhi	r1, #39	; 0x27
   1386c:	strbhi	r1, [r2, fp]
   13870:	add	r2, fp, #1
   13874:	cmp	r7, r2
   13878:	ldrhi	r1, [sp, #36]	; 0x24
   1387c:	movhi	r0, #36	; 0x24
   13880:	strbhi	r0, [r1, r2]
   13884:	add	r2, fp, #2
   13888:	cmp	r7, r2
   1388c:	ldrhi	r1, [sp, #36]	; 0x24
   13890:	movhi	r0, #39	; 0x27
   13894:	strbhi	r0, [r1, r2]
   13898:	add	fp, fp, #3
   1389c:	str	r3, [sp, #44]	; 0x2c
   138a0:	cmp	r7, fp
   138a4:	ldrhi	r3, [sp, #36]	; 0x24
   138a8:	movhi	r2, #92	; 0x5c
   138ac:	strbhi	r2, [r3, fp]
   138b0:	add	fp, fp, #1
   138b4:	cmp	fp, r7
   138b8:	ldrcc	r3, [sp, #36]	; 0x24
   138bc:	strbcc	r4, [r3, fp]
   138c0:	add	fp, fp, #1
   138c4:	ldr	r3, [sp, #40]	; 0x28
   138c8:	cmp	r8, #0
   138cc:	moveq	r3, #0
   138d0:	str	r3, [sp, #40]	; 0x28
   138d4:	add	r6, r6, #1
   138d8:	ldr	r3, [sp, #28]
   138dc:	cmn	r3, #1
   138e0:	beq	13e6c <__lxstat64@plt+0x3010>
   138e4:	ldr	r3, [sp, #28]
   138e8:	subs	r8, r3, r6
   138ec:	movne	r8, #1
   138f0:	cmp	r8, #0
   138f4:	beq	13e80 <__lxstat64@plt+0x3024>
   138f8:	ldr	r5, [sp, #48]	; 0x30
   138fc:	cmp	sl, #2
   13900:	moveq	r5, #0
   13904:	andne	r5, r5, #1
   13908:	ldr	r3, [sp, #60]	; 0x3c
   1390c:	adds	r9, r3, #0
   13910:	movne	r9, #1
   13914:	ands	r2, r5, r9
   13918:	str	r2, [sp, #56]	; 0x38
   1391c:	beq	131e4 <__lxstat64@plt+0x2388>
   13920:	add	r4, r6, r3
   13924:	ldr	r2, [sp, #28]
   13928:	cmp	r3, #1
   1392c:	movls	r3, #0
   13930:	movhi	r3, #1
   13934:	cmn	r2, #1
   13938:	movne	r3, #0
   1393c:	cmp	r3, #0
   13940:	beq	13950 <__lxstat64@plt+0x2af4>
   13944:	ldr	r0, [sp, #52]	; 0x34
   13948:	bl	10d78 <strlen@plt>
   1394c:	str	r0, [sp, #28]
   13950:	ldr	r3, [sp, #28]
   13954:	cmp	r3, r4
   13958:	bcc	131dc <__lxstat64@plt+0x2380>
   1395c:	ldr	r2, [sp, #60]	; 0x3c
   13960:	ldr	r1, [sp, #72]	; 0x48
   13964:	ldr	r3, [sp, #52]	; 0x34
   13968:	add	r0, r3, r6
   1396c:	bl	10c7c <memcmp@plt>
   13970:	cmp	r0, #0
   13974:	bne	133fc <__lxstat64@plt+0x25a0>
   13978:	ldr	r3, [sp, #32]
   1397c:	cmp	r3, #0
   13980:	beq	131e4 <__lxstat64@plt+0x2388>
   13984:	mov	r8, sl
   13988:	mov	sl, r7
   1398c:	b	13fdc <__lxstat64@plt+0x3180>
   13990:	mov	r8, sl
   13994:	mov	sl, r7
   13998:	b	13fdc <__lxstat64@plt+0x3180>
   1399c:	cmp	sl, #2
   139a0:	strne	r8, [sp, #80]	; 0x50
   139a4:	movne	r5, #0
   139a8:	bne	137e0 <__lxstat64@plt+0x2984>
   139ac:	ldr	r3, [sp, #32]
   139b0:	cmp	r3, #0
   139b4:	bne	13fc8 <__lxstat64@plt+0x316c>
   139b8:	ldr	r2, [sp, #76]	; 0x4c
   139bc:	adds	r3, r7, #0
   139c0:	movne	r3, #1
   139c4:	cmp	r2, #0
   139c8:	movne	r3, #0
   139cc:	cmp	r3, #0
   139d0:	movne	r3, #0
   139d4:	bne	13a04 <__lxstat64@plt+0x2ba8>
   139d8:	cmp	r7, fp
   139dc:	ldrhi	r3, [sp, #36]	; 0x24
   139e0:	movhi	r2, #39	; 0x27
   139e4:	strbhi	r2, [r3, fp]
   139e8:	add	r3, fp, #1
   139ec:	cmp	r7, r3
   139f0:	ldrhi	r2, [sp, #36]	; 0x24
   139f4:	movhi	r1, #92	; 0x5c
   139f8:	strbhi	r1, [r2, r3]
   139fc:	mov	r3, r7
   13a00:	ldr	r7, [sp, #76]	; 0x4c
   13a04:	add	r2, fp, #2
   13a08:	cmp	r2, r3
   13a0c:	ldrcc	r1, [sp, #36]	; 0x24
   13a10:	movcc	r0, #39	; 0x27
   13a14:	strbcc	r0, [r1, r2]
   13a18:	add	fp, fp, #3
   13a1c:	ldr	r2, [sp, #32]
   13a20:	mov	r5, r2
   13a24:	str	r8, [sp, #80]	; 0x50
   13a28:	str	r2, [sp, #44]	; 0x2c
   13a2c:	str	r7, [sp, #76]	; 0x4c
   13a30:	mov	r7, r3
   13a34:	b	137e0 <__lxstat64@plt+0x2984>
   13a38:	ldr	r5, [sp, #84]	; 0x54
   13a3c:	cmp	r5, #1
   13a40:	beq	13a70 <__lxstat64@plt+0x2c14>
   13a44:	mov	r3, #0
   13a48:	str	r3, [sp, #104]	; 0x68
   13a4c:	str	r3, [sp, #108]	; 0x6c
   13a50:	ldr	r3, [sp, #28]
   13a54:	cmn	r3, #1
   13a58:	beq	13aa4 <__lxstat64@plt+0x2c48>
   13a5c:	mov	r3, #0
   13a60:	str	r4, [sp, #88]	; 0x58
   13a64:	str	fp, [sp, #92]	; 0x5c
   13a68:	mov	fp, r3
   13a6c:	b	13bcc <__lxstat64@plt+0x2d70>
   13a70:	bl	10d60 <__ctype_b_loc@plt>
   13a74:	ldr	r2, [r0]
   13a78:	lsl	r3, r4, #1
   13a7c:	ldrh	r8, [r2, r3]
   13a80:	lsr	r8, r8, #14
   13a84:	and	r8, r8, #1
   13a88:	mov	r2, r5
   13a8c:	eor	r5, r8, #1
   13a90:	ldr	r3, [sp, #48]	; 0x30
   13a94:	and	r5, r5, r3
   13a98:	ands	r5, r5, #255	; 0xff
   13a9c:	beq	137e0 <__lxstat64@plt+0x2984>
   13aa0:	b	13c64 <__lxstat64@plt+0x2e08>
   13aa4:	ldr	r0, [sp, #52]	; 0x34
   13aa8:	bl	10d78 <strlen@plt>
   13aac:	str	r0, [sp, #28]
   13ab0:	b	13a5c <__lxstat64@plt+0x2c00>
   13ab4:	mov	r2, fp
   13ab8:	mov	r1, r4
   13abc:	ldr	r4, [sp, #88]	; 0x58
   13ac0:	ldr	fp, [sp, #92]	; 0x5c
   13ac4:	ldr	r0, [sp, #28]
   13ac8:	cmp	r0, r5
   13acc:	bls	13c98 <__lxstat64@plt+0x2e3c>
   13ad0:	ldrb	r3, [r1]
   13ad4:	cmp	r3, #0
   13ad8:	beq	13ca0 <__lxstat64@plt+0x2e44>
   13adc:	mov	r3, r1
   13ae0:	add	r2, r2, #1
   13ae4:	add	r1, r6, r2
   13ae8:	cmp	r0, r1
   13aec:	bls	13ca8 <__lxstat64@plt+0x2e4c>
   13af0:	ldrb	r1, [r3, #1]!
   13af4:	cmp	r1, #0
   13af8:	bne	13ae0 <__lxstat64@plt+0x2c84>
   13afc:	mov	r8, #0
   13b00:	b	13c5c <__lxstat64@plt+0x2e00>
   13b04:	cmp	r4, r5
   13b08:	beq	13ba8 <__lxstat64@plt+0x2d4c>
   13b0c:	ldrb	r3, [r4, #1]!
   13b10:	sub	r3, r3, #91	; 0x5b
   13b14:	cmp	r3, #33	; 0x21
   13b18:	ldrls	pc, [pc, r3, lsl #2]
   13b1c:	b	13b04 <__lxstat64@plt+0x2ca8>
   13b20:	ldrdeq	r3, [r1], -r4
   13b24:	ldrdeq	r3, [r1], -r4
   13b28:	andeq	r3, r1, r4, lsl #22
   13b2c:	ldrdeq	r3, [r1], -r4
   13b30:	andeq	r3, r1, r4, lsl #22
   13b34:	ldrdeq	r3, [r1], -r4
   13b38:	andeq	r3, r1, r4, lsl #22
   13b3c:	andeq	r3, r1, r4, lsl #22
   13b40:	andeq	r3, r1, r4, lsl #22
   13b44:	andeq	r3, r1, r4, lsl #22
   13b48:	andeq	r3, r1, r4, lsl #22
   13b4c:	andeq	r3, r1, r4, lsl #22
   13b50:	andeq	r3, r1, r4, lsl #22
   13b54:	andeq	r3, r1, r4, lsl #22
   13b58:	andeq	r3, r1, r4, lsl #22
   13b5c:	andeq	r3, r1, r4, lsl #22
   13b60:	andeq	r3, r1, r4, lsl #22
   13b64:	andeq	r3, r1, r4, lsl #22
   13b68:	andeq	r3, r1, r4, lsl #22
   13b6c:	andeq	r3, r1, r4, lsl #22
   13b70:	andeq	r3, r1, r4, lsl #22
   13b74:	andeq	r3, r1, r4, lsl #22
   13b78:	andeq	r3, r1, r4, lsl #22
   13b7c:	andeq	r3, r1, r4, lsl #22
   13b80:	andeq	r3, r1, r4, lsl #22
   13b84:	andeq	r3, r1, r4, lsl #22
   13b88:	andeq	r3, r1, r4, lsl #22
   13b8c:	andeq	r3, r1, r4, lsl #22
   13b90:	andeq	r3, r1, r4, lsl #22
   13b94:	andeq	r3, r1, r4, lsl #22
   13b98:	andeq	r3, r1, r4, lsl #22
   13b9c:	andeq	r3, r1, r4, lsl #22
   13ba0:	andeq	r3, r1, r4, lsl #22
   13ba4:	ldrdeq	r3, [r1], -r4
   13ba8:	ldr	r0, [sp, #100]	; 0x64
   13bac:	bl	10cc4 <iswprint@plt>
   13bb0:	cmp	r0, #0
   13bb4:	moveq	r8, #0
   13bb8:	add	fp, fp, r9
   13bbc:	add	r0, sp, #104	; 0x68
   13bc0:	bl	10c70 <mbsinit@plt>
   13bc4:	cmp	r0, #0
   13bc8:	bne	13c3c <__lxstat64@plt+0x2de0>
   13bcc:	add	r5, r6, fp
   13bd0:	ldr	r3, [sp, #52]	; 0x34
   13bd4:	add	r4, r3, r5
   13bd8:	add	r3, sp, #104	; 0x68
   13bdc:	ldr	r2, [sp, #28]
   13be0:	sub	r2, r2, r5
   13be4:	mov	r1, r4
   13be8:	add	r0, sp, #100	; 0x64
   13bec:	bl	15c50 <__lxstat64@plt+0x4df4>
   13bf0:	subs	r9, r0, #0
   13bf4:	beq	13cb0 <__lxstat64@plt+0x2e54>
   13bf8:	cmn	r9, #1
   13bfc:	beq	13c4c <__lxstat64@plt+0x2df0>
   13c00:	cmn	r9, #2
   13c04:	beq	13ab4 <__lxstat64@plt+0x2c58>
   13c08:	ldr	r3, [sp, #32]
   13c0c:	cmp	sl, #2
   13c10:	movne	r3, #0
   13c14:	andeq	r3, r3, #1
   13c18:	cmp	r3, #0
   13c1c:	beq	13ba8 <__lxstat64@plt+0x2d4c>
   13c20:	cmp	r9, #1
   13c24:	bls	13ba8 <__lxstat64@plt+0x2d4c>
   13c28:	sub	r3, r9, #1
   13c2c:	add	r5, r3, r5
   13c30:	ldr	r3, [sp, #52]	; 0x34
   13c34:	add	r5, r3, r5
   13c38:	b	13b0c <__lxstat64@plt+0x2cb0>
   13c3c:	ldr	r4, [sp, #88]	; 0x58
   13c40:	mov	r2, fp
   13c44:	ldr	fp, [sp, #92]	; 0x5c
   13c48:	b	13c5c <__lxstat64@plt+0x2e00>
   13c4c:	ldr	r4, [sp, #88]	; 0x58
   13c50:	mov	r2, fp
   13c54:	ldr	fp, [sp, #92]	; 0x5c
   13c58:	mov	r8, #0
   13c5c:	cmp	r2, #1
   13c60:	bls	13a8c <__lxstat64@plt+0x2c30>
   13c64:	add	r1, r6, r2
   13c68:	ldr	ip, [sp, #64]	; 0x40
   13c6c:	mov	r5, #0
   13c70:	eor	r3, r8, #1
   13c74:	ldr	r2, [sp, #48]	; 0x30
   13c78:	and	r3, r3, r2
   13c7c:	uxtb	r3, r3
   13c80:	ldr	r9, [sp, #32]
   13c84:	ldr	lr, [sp, #44]	; 0x2c
   13c88:	ldr	r2, [sp, #56]	; 0x38
   13c8c:	str	r8, [sp, #56]	; 0x38
   13c90:	ldr	r0, [sp, #36]	; 0x24
   13c94:	b	13d30 <__lxstat64@plt+0x2ed4>
   13c98:	mov	r8, #0
   13c9c:	b	13c5c <__lxstat64@plt+0x2e00>
   13ca0:	mov	r8, #0
   13ca4:	b	13c5c <__lxstat64@plt+0x2e00>
   13ca8:	mov	r8, #0
   13cac:	b	13c5c <__lxstat64@plt+0x2e00>
   13cb0:	ldr	r4, [sp, #88]	; 0x58
   13cb4:	mov	r2, fp
   13cb8:	ldr	fp, [sp, #92]	; 0x5c
   13cbc:	b	13c5c <__lxstat64@plt+0x2e00>
   13cc0:	cmp	r2, #0
   13cc4:	beq	13cd8 <__lxstat64@plt+0x2e7c>
   13cc8:	cmp	r7, fp
   13ccc:	movhi	r2, #92	; 0x5c
   13cd0:	strbhi	r2, [r0, fp]
   13cd4:	add	fp, fp, #1
   13cd8:	add	r8, r6, #1
   13cdc:	cmp	r1, r8
   13ce0:	bls	13de8 <__lxstat64@plt+0x2f8c>
   13ce4:	eor	r2, r5, #1
   13ce8:	and	r2, r2, lr
   13cec:	ands	r2, r2, #255	; 0xff
   13cf0:	beq	13e04 <__lxstat64@plt+0x2fa8>
   13cf4:	cmp	r7, fp
   13cf8:	movhi	r2, #39	; 0x27
   13cfc:	strbhi	r2, [r0, fp]
   13d00:	add	r2, fp, #1
   13d04:	cmp	r7, r2
   13d08:	movhi	lr, #39	; 0x27
   13d0c:	strbhi	lr, [r0, r2]
   13d10:	add	fp, fp, #2
   13d14:	mov	r6, r8
   13d18:	mov	r2, r3
   13d1c:	mov	lr, r3
   13d20:	cmp	r7, fp
   13d24:	strbhi	r4, [r0, fp]
   13d28:	add	fp, fp, #1
   13d2c:	ldrb	r4, [ip, #1]!
   13d30:	cmp	r3, #0
   13d34:	beq	13cc0 <__lxstat64@plt+0x2e64>
   13d38:	cmp	r9, #0
   13d3c:	bne	14040 <__lxstat64@plt+0x31e4>
   13d40:	eor	r5, lr, #1
   13d44:	cmp	sl, #2
   13d48:	movne	r5, #0
   13d4c:	andeq	r5, r5, #1
   13d50:	cmp	r5, #0
   13d54:	beq	13d8c <__lxstat64@plt+0x2f30>
   13d58:	cmp	r7, fp
   13d5c:	movhi	lr, #39	; 0x27
   13d60:	strbhi	lr, [r0, fp]
   13d64:	add	lr, fp, #1
   13d68:	cmp	r7, lr
   13d6c:	movhi	r8, #36	; 0x24
   13d70:	strbhi	r8, [r0, lr]
   13d74:	add	lr, fp, #2
   13d78:	cmp	r7, lr
   13d7c:	movhi	r8, #39	; 0x27
   13d80:	strbhi	r8, [r0, lr]
   13d84:	add	fp, fp, #3
   13d88:	mov	lr, r5
   13d8c:	cmp	r7, fp
   13d90:	movhi	r5, #92	; 0x5c
   13d94:	strbhi	r5, [r0, fp]
   13d98:	add	r5, fp, #1
   13d9c:	cmp	r7, r5
   13da0:	lsrhi	r8, r4, #6
   13da4:	addhi	r8, r8, #48	; 0x30
   13da8:	strbhi	r8, [r0, r5]
   13dac:	add	r8, fp, #2
   13db0:	cmp	r7, r8
   13db4:	lsrhi	r5, r4, #3
   13db8:	andhi	r5, r5, #7
   13dbc:	addhi	r5, r5, #48	; 0x30
   13dc0:	strbhi	r5, [r0, r8]
   13dc4:	add	fp, fp, #3
   13dc8:	and	r4, r4, #7
   13dcc:	add	r4, r4, #48	; 0x30
   13dd0:	add	r5, r6, #1
   13dd4:	cmp	r1, r5
   13dd8:	bls	13df4 <__lxstat64@plt+0x2f98>
   13ddc:	mov	r6, r5
   13de0:	mov	r5, r3
   13de4:	b	13d20 <__lxstat64@plt+0x2ec4>
   13de8:	str	lr, [sp, #44]	; 0x2c
   13dec:	ldr	r8, [sp, #56]	; 0x38
   13df0:	b	136c4 <__lxstat64@plt+0x2868>
   13df4:	str	lr, [sp, #44]	; 0x2c
   13df8:	ldr	r8, [sp, #56]	; 0x38
   13dfc:	mov	r5, r3
   13e00:	b	136c4 <__lxstat64@plt+0x2868>
   13e04:	mov	r6, r8
   13e08:	b	13d20 <__lxstat64@plt+0x2ec4>
   13e0c:	mov	r5, #0
   13e10:	b	137e0 <__lxstat64@plt+0x2984>
   13e14:	mov	r8, r5
   13e18:	ldr	r5, [sp, #48]	; 0x30
   13e1c:	mov	r4, #48	; 0x30
   13e20:	b	137e0 <__lxstat64@plt+0x2984>
   13e24:	ldr	r8, [sp, #32]
   13e28:	mov	r4, #48	; 0x30
   13e2c:	b	137e0 <__lxstat64@plt+0x2984>
   13e30:	ldr	r8, [sp, #32]
   13e34:	mov	r4, #48	; 0x30
   13e38:	b	137e0 <__lxstat64@plt+0x2984>
   13e3c:	mov	r8, #0
   13e40:	mov	r5, r8
   13e44:	b	137e0 <__lxstat64@plt+0x2984>
   13e48:	mov	r8, #0
   13e4c:	mov	r5, r8
   13e50:	b	137e0 <__lxstat64@plt+0x2984>
   13e54:	mov	r8, #0
   13e58:	mov	r5, r8
   13e5c:	b	137e0 <__lxstat64@plt+0x2984>
   13e60:	mov	r8, #0
   13e64:	mov	r5, r8
   13e68:	b	137e0 <__lxstat64@plt+0x2984>
   13e6c:	ldr	r3, [sp, #52]	; 0x34
   13e70:	ldrb	r8, [r3, r6]
   13e74:	adds	r8, r8, #0
   13e78:	movne	r8, #1
   13e7c:	b	138f0 <__lxstat64@plt+0x2a94>
   13e80:	cmp	sl, #2
   13e84:	movne	r3, #0
   13e88:	moveq	r3, #1
   13e8c:	ldr	r1, [sp, #32]
   13e90:	mov	r2, r1
   13e94:	and	r2, r2, r3
   13e98:	cmp	fp, #0
   13e9c:	movne	r2, #0
   13ea0:	andeq	r2, r2, #1
   13ea4:	cmp	r2, #0
   13ea8:	bne	14058 <__lxstat64@plt+0x31fc>
   13eac:	eor	r2, r1, #1
   13eb0:	and	r3, r3, r2
   13eb4:	ldr	r1, [sp, #80]	; 0x50
   13eb8:	tst	r1, r3
   13ebc:	beq	13f34 <__lxstat64@plt+0x30d8>
   13ec0:	ldr	r3, [sp, #40]	; 0x28
   13ec4:	cmp	r3, #0
   13ec8:	bne	13ef0 <__lxstat64@plt+0x3094>
   13ecc:	ldr	r1, [sp, #76]	; 0x4c
   13ed0:	clz	r3, r7
   13ed4:	lsr	r3, r3, #5
   13ed8:	cmp	r1, #0
   13edc:	moveq	r3, #0
   13ee0:	cmp	r3, #0
   13ee4:	beq	13f34 <__lxstat64@plt+0x30d8>
   13ee8:	ldr	r7, [sp, #76]	; 0x4c
   13eec:	b	12f84 <__lxstat64@plt+0x2128>
   13ef0:	ldr	r3, [sp, #168]	; 0xa8
   13ef4:	str	r3, [sp, #16]
   13ef8:	ldr	r3, [sp, #164]	; 0xa4
   13efc:	str	r3, [sp, #12]
   13f00:	ldr	r3, [sp, #160]	; 0xa0
   13f04:	str	r3, [sp, #8]
   13f08:	ldr	r3, [sp, #156]	; 0x9c
   13f0c:	str	r3, [sp, #4]
   13f10:	mov	r3, #5
   13f14:	str	r3, [sp]
   13f18:	ldr	r3, [sp, #28]
   13f1c:	ldr	r2, [sp, #52]	; 0x34
   13f20:	ldr	r1, [sp, #76]	; 0x4c
   13f24:	ldr	r0, [sp, #36]	; 0x24
   13f28:	bl	12f24 <__lxstat64@plt+0x20c8>
   13f2c:	mov	fp, r0
   13f30:	b	14034 <__lxstat64@plt+0x31d8>
   13f34:	mov	sl, r7
   13f38:	ldr	r3, [sp, #72]	; 0x48
   13f3c:	cmp	r3, #0
   13f40:	moveq	r2, #0
   13f44:	andne	r2, r2, #1
   13f48:	cmp	r2, #0
   13f4c:	beq	13f7c <__lxstat64@plt+0x3120>
   13f50:	mov	r2, r3
   13f54:	ldrb	r3, [r3]
   13f58:	cmp	r3, #0
   13f5c:	beq	13f7c <__lxstat64@plt+0x3120>
   13f60:	ldr	r1, [sp, #36]	; 0x24
   13f64:	cmp	sl, fp
   13f68:	strbhi	r3, [r1, fp]
   13f6c:	add	fp, fp, #1
   13f70:	ldrb	r3, [r2, #1]!
   13f74:	cmp	r3, #0
   13f78:	bne	13f64 <__lxstat64@plt+0x3108>
   13f7c:	cmp	sl, fp
   13f80:	movhi	r3, #0
   13f84:	ldrhi	r2, [sp, #36]	; 0x24
   13f88:	strbhi	r3, [r2, fp]
   13f8c:	b	14034 <__lxstat64@plt+0x31d8>
   13f90:	mov	r8, sl
   13f94:	mov	sl, r7
   13f98:	ldr	r3, [sp, #32]
   13f9c:	str	r3, [sp, #48]	; 0x30
   13fa0:	b	13fdc <__lxstat64@plt+0x3180>
   13fa4:	mov	r8, sl
   13fa8:	mov	sl, r7
   13fac:	b	13fdc <__lxstat64@plt+0x3180>
   13fb0:	mov	r8, sl
   13fb4:	mov	sl, r7
   13fb8:	b	13fdc <__lxstat64@plt+0x3180>
   13fbc:	andeq	r7, r1, r8, lsl #10
   13fc0:	andeq	r7, r1, r8, lsl r5
   13fc4:	andeq	r7, r1, ip, lsl #10
   13fc8:	mov	r8, sl
   13fcc:	mov	sl, r7
   13fd0:	b	13fdc <__lxstat64@plt+0x3180>
   13fd4:	mov	r8, sl
   13fd8:	mov	sl, r7
   13fdc:	ldr	r3, [sp, #48]	; 0x30
   13fe0:	cmp	r8, #2
   13fe4:	movne	r3, #0
   13fe8:	andeq	r3, r3, #1
   13fec:	cmp	r3, #0
   13ff0:	movne	r8, #4
   13ff4:	ldr	r3, [sp, #168]	; 0xa8
   13ff8:	str	r3, [sp, #16]
   13ffc:	ldr	r3, [sp, #164]	; 0xa4
   14000:	str	r3, [sp, #12]
   14004:	mov	r3, #0
   14008:	str	r3, [sp, #8]
   1400c:	ldr	r3, [sp, #156]	; 0x9c
   14010:	bic	r3, r3, #2
   14014:	str	r3, [sp, #4]
   14018:	str	r8, [sp]
   1401c:	ldr	r3, [sp, #28]
   14020:	ldr	r2, [sp, #52]	; 0x34
   14024:	mov	r1, sl
   14028:	ldr	r0, [sp, #36]	; 0x24
   1402c:	bl	12f24 <__lxstat64@plt+0x20c8>
   14030:	mov	fp, r0
   14034:	mov	r0, fp
   14038:	add	sp, sp, #116	; 0x74
   1403c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14040:	mov	r8, sl
   14044:	mov	sl, r7
   14048:	b	13fdc <__lxstat64@plt+0x3180>
   1404c:	mov	r8, sl
   14050:	mov	sl, r7
   14054:	b	13fdc <__lxstat64@plt+0x3180>
   14058:	mov	r8, sl
   1405c:	mov	sl, r7
   14060:	b	13fdc <__lxstat64@plt+0x3180>
   14064:	mov	r8, sl
   14068:	mov	sl, r7
   1406c:	b	13ff4 <__lxstat64@plt+0x3198>
   14070:	mov	r3, #1
   14074:	str	r3, [sp, #32]
   14078:	str	r3, [sp, #48]	; 0x30
   1407c:	str	r3, [sp, #60]	; 0x3c
   14080:	ldr	r3, [pc, #-196]	; 13fc4 <__lxstat64@plt+0x3168>
   14084:	str	r3, [sp, #72]	; 0x48
   14088:	mov	fp, #0
   1408c:	mov	sl, #5
   14090:	b	12fe0 <__lxstat64@plt+0x2184>
   14094:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14098:	sub	sp, sp, #52	; 0x34
   1409c:	mov	r5, r0
   140a0:	str	r1, [sp, #24]
   140a4:	str	r2, [sp, #28]
   140a8:	mov	r4, r3
   140ac:	bl	10d84 <__errno_location@plt>
   140b0:	str	r0, [sp, #32]
   140b4:	ldr	r3, [r0]
   140b8:	str	r3, [sp, #36]	; 0x24
   140bc:	ldr	r3, [pc, #396]	; 14250 <__lxstat64@plt+0x33f4>
   140c0:	ldr	r6, [r3]
   140c4:	cmn	r5, #-2147483647	; 0x80000001
   140c8:	movne	r3, #0
   140cc:	moveq	r3, #1
   140d0:	orrs	r3, r3, r5, lsr #31
   140d4:	bne	14214 <__lxstat64@plt+0x33b8>
   140d8:	ldr	r3, [pc, #368]	; 14250 <__lxstat64@plt+0x33f4>
   140dc:	ldr	r2, [r3, #4]
   140e0:	cmp	r5, r2
   140e4:	blt	1414c <__lxstat64@plt+0x32f0>
   140e8:	str	r2, [sp, #44]	; 0x2c
   140ec:	add	r3, r3, #8
   140f0:	cmp	r6, r3
   140f4:	beq	14218 <__lxstat64@plt+0x33bc>
   140f8:	sub	r2, r5, r2
   140fc:	mov	r3, #8
   14100:	str	r3, [sp]
   14104:	mvn	r3, #-2147483648	; 0x80000000
   14108:	add	r2, r2, #1
   1410c:	add	r1, sp, #44	; 0x2c
   14110:	mov	r0, r6
   14114:	bl	15300 <__lxstat64@plt+0x44a4>
   14118:	mov	r6, r0
   1411c:	ldr	r3, [pc, #300]	; 14250 <__lxstat64@plt+0x33f4>
   14120:	str	r0, [r3]
   14124:	ldr	r7, [pc, #292]	; 14250 <__lxstat64@plt+0x33f4>
   14128:	ldr	r0, [r7, #4]
   1412c:	ldr	r2, [sp, #44]	; 0x2c
   14130:	sub	r2, r2, r0
   14134:	lsl	r2, r2, #3
   14138:	mov	r1, #0
   1413c:	add	r0, r6, r0, lsl #3
   14140:	bl	10da8 <memset@plt>
   14144:	ldr	r3, [sp, #44]	; 0x2c
   14148:	str	r3, [r7, #4]
   1414c:	add	fp, r6, r5, lsl #3
   14150:	ldr	r8, [r6, r5, lsl #3]
   14154:	ldr	r7, [fp, #4]
   14158:	ldr	r9, [r4, #4]
   1415c:	orr	r9, r9, #1
   14160:	add	sl, r4, #8
   14164:	ldr	r3, [r4, #44]	; 0x2c
   14168:	str	r3, [sp, #16]
   1416c:	ldr	r3, [r4, #40]	; 0x28
   14170:	str	r3, [sp, #12]
   14174:	str	sl, [sp, #8]
   14178:	str	r9, [sp, #4]
   1417c:	ldr	r3, [r4]
   14180:	str	r3, [sp]
   14184:	ldr	r3, [sp, #28]
   14188:	ldr	r2, [sp, #24]
   1418c:	mov	r1, r8
   14190:	mov	r0, r7
   14194:	bl	12f24 <__lxstat64@plt+0x20c8>
   14198:	cmp	r8, r0
   1419c:	bhi	141fc <__lxstat64@plt+0x33a0>
   141a0:	add	r8, r0, #1
   141a4:	str	r8, [r6, r5, lsl #3]
   141a8:	ldr	r3, [pc, #164]	; 14254 <__lxstat64@plt+0x33f8>
   141ac:	cmp	r7, r3
   141b0:	beq	141bc <__lxstat64@plt+0x3360>
   141b4:	mov	r0, r7
   141b8:	bl	15b1c <__lxstat64@plt+0x4cc0>
   141bc:	mov	r0, r8
   141c0:	bl	1517c <__lxstat64@plt+0x4320>
   141c4:	mov	r7, r0
   141c8:	str	r0, [fp, #4]
   141cc:	ldr	r3, [r4, #44]	; 0x2c
   141d0:	str	r3, [sp, #16]
   141d4:	ldr	r3, [r4, #40]	; 0x28
   141d8:	str	r3, [sp, #12]
   141dc:	str	sl, [sp, #8]
   141e0:	str	r9, [sp, #4]
   141e4:	ldr	r3, [r4]
   141e8:	str	r3, [sp]
   141ec:	ldr	r3, [sp, #28]
   141f0:	ldr	r2, [sp, #24]
   141f4:	mov	r1, r8
   141f8:	bl	12f24 <__lxstat64@plt+0x20c8>
   141fc:	ldr	r3, [sp, #32]
   14200:	ldr	r2, [sp, #36]	; 0x24
   14204:	str	r2, [r3]
   14208:	mov	r0, r7
   1420c:	add	sp, sp, #52	; 0x34
   14210:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14214:	bl	10e50 <abort@plt>
   14218:	sub	r2, r5, r2
   1421c:	mov	r3, #8
   14220:	str	r3, [sp]
   14224:	mvn	r3, #-2147483648	; 0x80000000
   14228:	add	r2, r2, #1
   1422c:	add	r1, sp, #44	; 0x2c
   14230:	mov	r0, #0
   14234:	bl	15300 <__lxstat64@plt+0x44a4>
   14238:	mov	r6, r0
   1423c:	ldr	r3, [pc, #12]	; 14250 <__lxstat64@plt+0x33f4>
   14240:	str	r0, [r3], #8
   14244:	ldm	r3, {r0, r1}
   14248:	stm	r6, {r0, r1}
   1424c:	b	14124 <__lxstat64@plt+0x32c8>
   14250:	andeq	r8, r2, ip, ror #1
   14254:	andeq	r8, r2, ip, asr r1
   14258:	push	{r4, r5, r6, lr}
   1425c:	mov	r4, r0
   14260:	bl	10d84 <__errno_location@plt>
   14264:	mov	r5, r0
   14268:	ldr	r6, [r0]
   1426c:	cmp	r4, #0
   14270:	ldr	r3, [pc, #20]	; 1428c <__lxstat64@plt+0x3430>
   14274:	moveq	r4, r3
   14278:	mov	r1, #48	; 0x30
   1427c:	mov	r0, r4
   14280:	bl	15668 <__lxstat64@plt+0x480c>
   14284:	str	r6, [r5]
   14288:	pop	{r4, r5, r6, pc}
   1428c:	andeq	r8, r2, ip, asr r2
   14290:	subs	r3, r0, #0
   14294:	ldr	r2, [pc, #8]	; 142a4 <__lxstat64@plt+0x3448>
   14298:	moveq	r3, r2
   1429c:	ldr	r0, [r3]
   142a0:	bx	lr
   142a4:	andeq	r8, r2, ip, asr r2
   142a8:	subs	r3, r0, #0
   142ac:	ldr	r2, [pc, #8]	; 142bc <__lxstat64@plt+0x3460>
   142b0:	moveq	r3, r2
   142b4:	str	r1, [r3]
   142b8:	bx	lr
   142bc:	andeq	r8, r2, ip, asr r2
   142c0:	push	{lr}		; (str lr, [sp, #-4]!)
   142c4:	subs	r3, r0, #0
   142c8:	ldr	r0, [pc, #44]	; 142fc <__lxstat64@plt+0x34a0>
   142cc:	moveq	r3, r0
   142d0:	add	r3, r3, #8
   142d4:	lsr	lr, r1, #5
   142d8:	and	r1, r1, #31
   142dc:	ldr	ip, [r3, lr, lsl #2]
   142e0:	lsr	r0, ip, r1
   142e4:	eor	r2, r2, r0
   142e8:	and	r2, r2, #1
   142ec:	eor	r1, ip, r2, lsl r1
   142f0:	str	r1, [r3, lr, lsl #2]
   142f4:	and	r0, r0, #1
   142f8:	pop	{pc}		; (ldr pc, [sp], #4)
   142fc:	andeq	r8, r2, ip, asr r2
   14300:	subs	r3, r0, #0
   14304:	ldr	r2, [pc, #12]	; 14318 <__lxstat64@plt+0x34bc>
   14308:	moveq	r3, r2
   1430c:	ldr	r0, [r3, #4]
   14310:	str	r1, [r3, #4]
   14314:	bx	lr
   14318:	andeq	r8, r2, ip, asr r2
   1431c:	subs	r3, r0, #0
   14320:	ldr	r0, [pc, #40]	; 14350 <__lxstat64@plt+0x34f4>
   14324:	moveq	r3, r0
   14328:	mov	r0, #10
   1432c:	str	r0, [r3]
   14330:	cmp	r2, #0
   14334:	cmpne	r1, #0
   14338:	beq	14348 <__lxstat64@plt+0x34ec>
   1433c:	str	r1, [r3, #40]	; 0x28
   14340:	str	r2, [r3, #44]	; 0x2c
   14344:	bx	lr
   14348:	push	{r4, lr}
   1434c:	bl	10e50 <abort@plt>
   14350:	andeq	r8, r2, ip, asr r2
   14354:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14358:	sub	sp, sp, #24
   1435c:	mov	r7, r0
   14360:	mov	r8, r1
   14364:	mov	r9, r2
   14368:	mov	sl, r3
   1436c:	ldr	r4, [sp, #56]	; 0x38
   14370:	cmp	r4, #0
   14374:	ldr	r3, [pc, #84]	; 143d0 <__lxstat64@plt+0x3574>
   14378:	moveq	r4, r3
   1437c:	bl	10d84 <__errno_location@plt>
   14380:	mov	r5, r0
   14384:	ldr	r6, [r0]
   14388:	ldr	r3, [r4, #44]	; 0x2c
   1438c:	str	r3, [sp, #16]
   14390:	ldr	r3, [r4, #40]	; 0x28
   14394:	str	r3, [sp, #12]
   14398:	add	r3, r4, #8
   1439c:	str	r3, [sp, #8]
   143a0:	ldr	r3, [r4, #4]
   143a4:	str	r3, [sp, #4]
   143a8:	ldr	r3, [r4]
   143ac:	str	r3, [sp]
   143b0:	mov	r3, sl
   143b4:	mov	r2, r9
   143b8:	mov	r1, r8
   143bc:	mov	r0, r7
   143c0:	bl	12f24 <__lxstat64@plt+0x20c8>
   143c4:	str	r6, [r5]
   143c8:	add	sp, sp, #24
   143cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   143d0:	andeq	r8, r2, ip, asr r2
   143d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143d8:	sub	sp, sp, #44	; 0x2c
   143dc:	str	r0, [sp, #28]
   143e0:	str	r1, [sp, #32]
   143e4:	mov	r6, r2
   143e8:	subs	r4, r3, #0
   143ec:	ldr	r3, [pc, #172]	; 144a0 <__lxstat64@plt+0x3644>
   143f0:	moveq	r4, r3
   143f4:	bl	10d84 <__errno_location@plt>
   143f8:	mov	r7, r0
   143fc:	ldr	fp, [r0]
   14400:	ldr	r5, [r4, #4]
   14404:	cmp	r6, #0
   14408:	orreq	r5, r5, #1
   1440c:	add	r9, r4, #8
   14410:	ldr	r3, [r4, #44]	; 0x2c
   14414:	str	r3, [sp, #16]
   14418:	ldr	r3, [r4, #40]	; 0x28
   1441c:	str	r3, [sp, #12]
   14420:	str	r9, [sp, #8]
   14424:	str	r5, [sp, #4]
   14428:	ldr	r3, [r4]
   1442c:	str	r3, [sp]
   14430:	ldr	r3, [sp, #32]
   14434:	ldr	r2, [sp, #28]
   14438:	mov	r1, #0
   1443c:	mov	r0, r1
   14440:	bl	12f24 <__lxstat64@plt+0x20c8>
   14444:	mov	sl, r0
   14448:	add	r8, r0, #1
   1444c:	mov	r0, r8
   14450:	bl	1517c <__lxstat64@plt+0x4320>
   14454:	str	r0, [sp, #36]	; 0x24
   14458:	ldr	r3, [r4, #44]	; 0x2c
   1445c:	str	r3, [sp, #16]
   14460:	ldr	r3, [r4, #40]	; 0x28
   14464:	str	r3, [sp, #12]
   14468:	str	r9, [sp, #8]
   1446c:	str	r5, [sp, #4]
   14470:	ldr	r3, [r4]
   14474:	str	r3, [sp]
   14478:	ldr	r3, [sp, #32]
   1447c:	ldr	r2, [sp, #28]
   14480:	mov	r1, r8
   14484:	bl	12f24 <__lxstat64@plt+0x20c8>
   14488:	str	fp, [r7]
   1448c:	cmp	r6, #0
   14490:	strne	sl, [r6]
   14494:	ldr	r0, [sp, #36]	; 0x24
   14498:	add	sp, sp, #44	; 0x2c
   1449c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144a0:	andeq	r8, r2, ip, asr r2
   144a4:	push	{r4, lr}
   144a8:	mov	r3, r2
   144ac:	mov	r2, #0
   144b0:	bl	143d4 <__lxstat64@plt+0x3578>
   144b4:	pop	{r4, pc}
   144b8:	push	{r4, r5, r6, r7, r8, lr}
   144bc:	ldr	r3, [pc, #140]	; 14550 <__lxstat64@plt+0x36f4>
   144c0:	ldr	r7, [r3]
   144c4:	ldr	r3, [r3, #4]
   144c8:	cmp	r3, #1
   144cc:	ble	144f8 <__lxstat64@plt+0x369c>
   144d0:	mov	r5, r7
   144d4:	mov	r4, #1
   144d8:	ldr	r6, [pc, #112]	; 14550 <__lxstat64@plt+0x36f4>
   144dc:	ldr	r0, [r5, #12]
   144e0:	bl	15b1c <__lxstat64@plt+0x4cc0>
   144e4:	add	r4, r4, #1
   144e8:	add	r5, r5, #8
   144ec:	ldr	r3, [r6, #4]
   144f0:	cmp	r3, r4
   144f4:	bgt	144dc <__lxstat64@plt+0x3680>
   144f8:	ldr	r0, [r7, #4]
   144fc:	ldr	r3, [pc, #80]	; 14554 <__lxstat64@plt+0x36f8>
   14500:	cmp	r0, r3
   14504:	beq	14520 <__lxstat64@plt+0x36c4>
   14508:	bl	15b1c <__lxstat64@plt+0x4cc0>
   1450c:	ldr	r3, [pc, #60]	; 14550 <__lxstat64@plt+0x36f4>
   14510:	mov	r2, #256	; 0x100
   14514:	str	r2, [r3, #8]
   14518:	ldr	r2, [pc, #52]	; 14554 <__lxstat64@plt+0x36f8>
   1451c:	str	r2, [r3, #12]
   14520:	ldr	r3, [pc, #48]	; 14558 <__lxstat64@plt+0x36fc>
   14524:	cmp	r7, r3
   14528:	beq	14540 <__lxstat64@plt+0x36e4>
   1452c:	mov	r0, r7
   14530:	bl	15b1c <__lxstat64@plt+0x4cc0>
   14534:	ldr	r3, [pc, #20]	; 14550 <__lxstat64@plt+0x36f4>
   14538:	add	r2, r3, #8
   1453c:	str	r2, [r3]
   14540:	mov	r2, #1
   14544:	ldr	r3, [pc, #4]	; 14550 <__lxstat64@plt+0x36f4>
   14548:	str	r2, [r3, #4]
   1454c:	pop	{r4, r5, r6, r7, r8, pc}
   14550:	andeq	r8, r2, ip, ror #1
   14554:	andeq	r8, r2, ip, asr r1
   14558:	strdeq	r8, [r2], -r4
   1455c:	push	{r4, lr}
   14560:	ldr	r3, [pc, #8]	; 14570 <__lxstat64@plt+0x3714>
   14564:	mvn	r2, #0
   14568:	bl	14094 <__lxstat64@plt+0x3238>
   1456c:	pop	{r4, pc}
   14570:	andeq	r8, r2, ip, asr r2
   14574:	push	{r4, lr}
   14578:	ldr	r3, [pc, #4]	; 14584 <__lxstat64@plt+0x3728>
   1457c:	bl	14094 <__lxstat64@plt+0x3238>
   14580:	pop	{r4, pc}
   14584:	andeq	r8, r2, ip, asr r2
   14588:	push	{r4, lr}
   1458c:	mov	r1, r0
   14590:	mov	r0, #0
   14594:	bl	1455c <__lxstat64@plt+0x3700>
   14598:	pop	{r4, pc}
   1459c:	push	{r4, lr}
   145a0:	mov	r2, r1
   145a4:	mov	r1, r0
   145a8:	mov	r0, #0
   145ac:	bl	14574 <__lxstat64@plt+0x3718>
   145b0:	pop	{r4, pc}
   145b4:	push	{r4, r5, lr}
   145b8:	sub	sp, sp, #52	; 0x34
   145bc:	mov	r4, r0
   145c0:	mov	r5, r2
   145c4:	mov	r0, sp
   145c8:	bl	12dbc <__lxstat64@plt+0x1f60>
   145cc:	mov	r3, sp
   145d0:	mvn	r2, #0
   145d4:	mov	r1, r5
   145d8:	mov	r0, r4
   145dc:	bl	14094 <__lxstat64@plt+0x3238>
   145e0:	add	sp, sp, #52	; 0x34
   145e4:	pop	{r4, r5, pc}
   145e8:	push	{r4, r5, r6, lr}
   145ec:	sub	sp, sp, #48	; 0x30
   145f0:	mov	r4, r0
   145f4:	mov	r5, r2
   145f8:	mov	r6, r3
   145fc:	mov	r0, sp
   14600:	bl	12dbc <__lxstat64@plt+0x1f60>
   14604:	mov	r3, sp
   14608:	mov	r2, r6
   1460c:	mov	r1, r5
   14610:	mov	r0, r4
   14614:	bl	14094 <__lxstat64@plt+0x3238>
   14618:	add	sp, sp, #48	; 0x30
   1461c:	pop	{r4, r5, r6, pc}
   14620:	push	{r4, lr}
   14624:	mov	r2, r1
   14628:	mov	r1, r0
   1462c:	mov	r0, #0
   14630:	bl	145b4 <__lxstat64@plt+0x3758>
   14634:	pop	{r4, pc}
   14638:	push	{r4, lr}
   1463c:	mov	r3, r2
   14640:	mov	r2, r1
   14644:	mov	r1, r0
   14648:	mov	r0, #0
   1464c:	bl	145e8 <__lxstat64@plt+0x378c>
   14650:	pop	{r4, pc}
   14654:	push	{r4, r5, r6, lr}
   14658:	sub	sp, sp, #48	; 0x30
   1465c:	mov	r4, r0
   14660:	mov	r5, r1
   14664:	mov	r6, r2
   14668:	mov	ip, sp
   1466c:	ldr	lr, [pc, #64]	; 146b4 <__lxstat64@plt+0x3858>
   14670:	ldm	lr!, {r0, r1, r2, r3}
   14674:	stmia	ip!, {r0, r1, r2, r3}
   14678:	ldm	lr!, {r0, r1, r2, r3}
   1467c:	stmia	ip!, {r0, r1, r2, r3}
   14680:	ldm	lr, {r0, r1, r2, r3}
   14684:	stm	ip, {r0, r1, r2, r3}
   14688:	mov	r2, #1
   1468c:	mov	r1, r6
   14690:	mov	r0, sp
   14694:	bl	142c0 <__lxstat64@plt+0x3464>
   14698:	mov	r3, sp
   1469c:	mov	r2, r5
   146a0:	mov	r1, r4
   146a4:	mov	r0, #0
   146a8:	bl	14094 <__lxstat64@plt+0x3238>
   146ac:	add	sp, sp, #48	; 0x30
   146b0:	pop	{r4, r5, r6, pc}
   146b4:	andeq	r8, r2, ip, asr r2
   146b8:	push	{r4, lr}
   146bc:	mov	r2, r1
   146c0:	mvn	r1, #0
   146c4:	bl	14654 <__lxstat64@plt+0x37f8>
   146c8:	pop	{r4, pc}
   146cc:	push	{r4, lr}
   146d0:	mov	r1, #58	; 0x3a
   146d4:	bl	146b8 <__lxstat64@plt+0x385c>
   146d8:	pop	{r4, pc}
   146dc:	push	{r4, lr}
   146e0:	mov	r2, #58	; 0x3a
   146e4:	bl	14654 <__lxstat64@plt+0x37f8>
   146e8:	pop	{r4, pc}
   146ec:	push	{r4, r5, lr}
   146f0:	sub	sp, sp, #100	; 0x64
   146f4:	mov	r4, r0
   146f8:	mov	r5, r2
   146fc:	mov	r0, sp
   14700:	bl	12dbc <__lxstat64@plt+0x1f60>
   14704:	add	lr, sp, #48	; 0x30
   14708:	mov	ip, sp
   1470c:	ldm	ip!, {r0, r1, r2, r3}
   14710:	stmia	lr!, {r0, r1, r2, r3}
   14714:	ldm	ip!, {r0, r1, r2, r3}
   14718:	stmia	lr!, {r0, r1, r2, r3}
   1471c:	ldm	ip, {r0, r1, r2, r3}
   14720:	stm	lr, {r0, r1, r2, r3}
   14724:	mov	r2, #1
   14728:	mov	r1, #58	; 0x3a
   1472c:	add	r0, sp, #48	; 0x30
   14730:	bl	142c0 <__lxstat64@plt+0x3464>
   14734:	add	r3, sp, #48	; 0x30
   14738:	mvn	r2, #0
   1473c:	mov	r1, r5
   14740:	mov	r0, r4
   14744:	bl	14094 <__lxstat64@plt+0x3238>
   14748:	add	sp, sp, #100	; 0x64
   1474c:	pop	{r4, r5, pc}
   14750:	push	{r4, r5, r6, r7, lr}
   14754:	sub	sp, sp, #52	; 0x34
   14758:	mov	r4, r0
   1475c:	mov	r6, r1
   14760:	mov	r7, r2
   14764:	mov	r5, r3
   14768:	mov	ip, sp
   1476c:	ldr	lr, [pc, #64]	; 147b4 <__lxstat64@plt+0x3958>
   14770:	ldm	lr!, {r0, r1, r2, r3}
   14774:	stmia	ip!, {r0, r1, r2, r3}
   14778:	ldm	lr!, {r0, r1, r2, r3}
   1477c:	stmia	ip!, {r0, r1, r2, r3}
   14780:	ldm	lr, {r0, r1, r2, r3}
   14784:	stm	ip, {r0, r1, r2, r3}
   14788:	mov	r2, r7
   1478c:	mov	r1, r6
   14790:	mov	r0, sp
   14794:	bl	1431c <__lxstat64@plt+0x34c0>
   14798:	mov	r3, sp
   1479c:	ldr	r2, [sp, #72]	; 0x48
   147a0:	mov	r1, r5
   147a4:	mov	r0, r4
   147a8:	bl	14094 <__lxstat64@plt+0x3238>
   147ac:	add	sp, sp, #52	; 0x34
   147b0:	pop	{r4, r5, r6, r7, pc}
   147b4:	andeq	r8, r2, ip, asr r2
   147b8:	push	{lr}		; (str lr, [sp, #-4]!)
   147bc:	sub	sp, sp, #12
   147c0:	mvn	ip, #0
   147c4:	str	ip, [sp]
   147c8:	bl	14750 <__lxstat64@plt+0x38f4>
   147cc:	add	sp, sp, #12
   147d0:	pop	{pc}		; (ldr pc, [sp], #4)
   147d4:	push	{r4, lr}
   147d8:	mov	r3, r2
   147dc:	mov	r2, r1
   147e0:	mov	r1, r0
   147e4:	mov	r0, #0
   147e8:	bl	147b8 <__lxstat64@plt+0x395c>
   147ec:	pop	{r4, pc}
   147f0:	push	{lr}		; (str lr, [sp, #-4]!)
   147f4:	sub	sp, sp, #12
   147f8:	str	r3, [sp]
   147fc:	mov	r3, r2
   14800:	mov	r2, r1
   14804:	mov	r1, r0
   14808:	mov	r0, #0
   1480c:	bl	14750 <__lxstat64@plt+0x38f4>
   14810:	add	sp, sp, #12
   14814:	pop	{pc}		; (ldr pc, [sp], #4)
   14818:	push	{r4, lr}
   1481c:	ldr	r3, [pc, #4]	; 14828 <__lxstat64@plt+0x39cc>
   14820:	bl	14094 <__lxstat64@plt+0x3238>
   14824:	pop	{r4, pc}
   14828:	strdeq	r8, [r2], -ip
   1482c:	push	{r4, lr}
   14830:	mov	r2, r1
   14834:	mov	r1, r0
   14838:	mov	r0, #0
   1483c:	bl	14818 <__lxstat64@plt+0x39bc>
   14840:	pop	{r4, pc}
   14844:	push	{r4, lr}
   14848:	mvn	r2, #0
   1484c:	bl	14818 <__lxstat64@plt+0x39bc>
   14850:	pop	{r4, pc}
   14854:	push	{r4, lr}
   14858:	mov	r1, r0
   1485c:	mov	r0, #0
   14860:	bl	14844 <__lxstat64@plt+0x39e8>
   14864:	pop	{r4, pc}
   14868:	push	{r4, lr}
   1486c:	ldrb	lr, [r0]
   14870:	ldrb	ip, [r1]
   14874:	cmp	lr, #45	; 0x2d
   14878:	beq	148f0 <__lxstat64@plt+0x3a94>
   1487c:	cmp	ip, #45	; 0x2d
   14880:	beq	14a04 <__lxstat64@plt+0x3ba8>
   14884:	cmp	lr, #48	; 0x30
   14888:	bne	14898 <__lxstat64@plt+0x3a3c>
   1488c:	ldrb	lr, [r0, #1]!
   14890:	cmp	lr, #48	; 0x30
   14894:	beq	1488c <__lxstat64@plt+0x3a30>
   14898:	cmp	ip, #48	; 0x30
   1489c:	bne	148ac <__lxstat64@plt+0x3a50>
   148a0:	ldrb	ip, [r1, #1]!
   148a4:	cmp	ip, #48	; 0x30
   148a8:	beq	148a0 <__lxstat64@plt+0x3a44>
   148ac:	cmp	ip, lr
   148b0:	bne	14a48 <__lxstat64@plt+0x3bec>
   148b4:	sub	r3, ip, #48	; 0x30
   148b8:	cmp	r3, #9
   148bc:	bhi	14a44 <__lxstat64@plt+0x3be8>
   148c0:	ldrb	lr, [r0, #1]!
   148c4:	ldrb	ip, [r1, #1]!
   148c8:	cmp	lr, ip
   148cc:	bne	14a48 <__lxstat64@plt+0x3bec>
   148d0:	sub	r3, lr, #48	; 0x30
   148d4:	cmp	r3, #9
   148d8:	bls	148c0 <__lxstat64@plt+0x3a64>
   148dc:	mov	r3, lr
   148e0:	mov	lr, ip
   148e4:	mov	ip, r3
   148e8:	mov	r4, #0
   148ec:	b	14a70 <__lxstat64@plt+0x3c14>
   148f0:	ldrb	lr, [r0, #1]!
   148f4:	cmp	lr, #48	; 0x30
   148f8:	beq	148f0 <__lxstat64@plt+0x3a94>
   148fc:	cmp	ip, #45	; 0x2d
   14900:	beq	14938 <__lxstat64@plt+0x3adc>
   14904:	sub	r0, lr, #48	; 0x30
   14908:	cmp	r0, #9
   1490c:	bls	14ac4 <__lxstat64@plt+0x3c68>
   14910:	cmp	ip, #48	; 0x30
   14914:	bne	14924 <__lxstat64@plt+0x3ac8>
   14918:	ldrb	ip, [r1, #1]!
   1491c:	cmp	ip, #48	; 0x30
   14920:	beq	14918 <__lxstat64@plt+0x3abc>
   14924:	sub	ip, ip, #48	; 0x30
   14928:	cmp	ip, #9
   1492c:	movhi	r0, #0
   14930:	mvnls	r0, #0
   14934:	pop	{r4, pc}
   14938:	ldrb	r4, [r1, #1]!
   1493c:	cmp	r4, #48	; 0x30
   14940:	beq	14938 <__lxstat64@plt+0x3adc>
   14944:	cmp	lr, r4
   14948:	bne	14988 <__lxstat64@plt+0x3b2c>
   1494c:	sub	r3, lr, #48	; 0x30
   14950:	cmp	r3, #9
   14954:	bhi	14988 <__lxstat64@plt+0x3b2c>
   14958:	ldrb	lr, [r0, #1]!
   1495c:	ldrb	r4, [r1, #1]!
   14960:	cmp	lr, r4
   14964:	bne	14988 <__lxstat64@plt+0x3b2c>
   14968:	sub	r3, lr, #48	; 0x30
   1496c:	cmp	r3, #9
   14970:	bls	14958 <__lxstat64@plt+0x3afc>
   14974:	mov	r3, lr
   14978:	mov	lr, r4
   1497c:	mov	r4, r3
   14980:	mov	r3, #0
   14984:	b	149b0 <__lxstat64@plt+0x3b54>
   14988:	sub	r3, lr, #48	; 0x30
   1498c:	cmp	r3, #9
   14990:	bhi	149ec <__lxstat64@plt+0x3b90>
   14994:	mov	r2, r0
   14998:	add	r2, r2, #1
   1499c:	sub	r3, r2, r0
   149a0:	ldrb	ip, [r2]
   149a4:	sub	ip, ip, #48	; 0x30
   149a8:	cmp	ip, #9
   149ac:	bls	14998 <__lxstat64@plt+0x3b3c>
   149b0:	sub	r2, r4, #48	; 0x30
   149b4:	cmp	r2, #9
   149b8:	bhi	14ae4 <__lxstat64@plt+0x3c88>
   149bc:	mov	r2, r1
   149c0:	add	r2, r2, #1
   149c4:	sub	ip, r2, r1
   149c8:	ldrb	r0, [r2]
   149cc:	sub	r0, r0, #48	; 0x30
   149d0:	cmp	r0, #9
   149d4:	bls	149c0 <__lxstat64@plt+0x3b64>
   149d8:	cmp	r3, ip
   149dc:	beq	149f4 <__lxstat64@plt+0x3b98>
   149e0:	movcc	r0, #1
   149e4:	mvncs	r0, #0
   149e8:	pop	{r4, pc}
   149ec:	mov	r3, #0
   149f0:	b	149b0 <__lxstat64@plt+0x3b54>
   149f4:	cmp	ip, #0
   149f8:	beq	14acc <__lxstat64@plt+0x3c70>
   149fc:	sub	r0, r4, lr
   14a00:	pop	{r4, pc}
   14a04:	ldrb	r3, [r1, #1]!
   14a08:	cmp	r3, #48	; 0x30
   14a0c:	beq	14a04 <__lxstat64@plt+0x3ba8>
   14a10:	sub	r3, r3, #48	; 0x30
   14a14:	cmp	r3, #9
   14a18:	bls	14ad4 <__lxstat64@plt+0x3c78>
   14a1c:	cmp	lr, #48	; 0x30
   14a20:	bne	14a30 <__lxstat64@plt+0x3bd4>
   14a24:	ldrb	lr, [r0, #1]!
   14a28:	cmp	lr, #48	; 0x30
   14a2c:	beq	14a24 <__lxstat64@plt+0x3bc8>
   14a30:	sub	lr, lr, #48	; 0x30
   14a34:	cmp	lr, #9
   14a38:	movhi	r0, #0
   14a3c:	movls	r0, #1
   14a40:	pop	{r4, pc}
   14a44:	mov	lr, ip
   14a48:	sub	r3, lr, #48	; 0x30
   14a4c:	cmp	r3, #9
   14a50:	bhi	14aac <__lxstat64@plt+0x3c50>
   14a54:	mov	r3, r0
   14a58:	add	r3, r3, #1
   14a5c:	sub	r4, r3, r0
   14a60:	ldrb	r2, [r3]
   14a64:	sub	r2, r2, #48	; 0x30
   14a68:	cmp	r2, #9
   14a6c:	bls	14a58 <__lxstat64@plt+0x3bfc>
   14a70:	sub	r3, ip, #48	; 0x30
   14a74:	cmp	r3, #9
   14a78:	bhi	14af0 <__lxstat64@plt+0x3c94>
   14a7c:	mov	r3, r1
   14a80:	add	r3, r3, #1
   14a84:	sub	r0, r3, r1
   14a88:	ldrb	r2, [r3]
   14a8c:	sub	r2, r2, #48	; 0x30
   14a90:	cmp	r2, #9
   14a94:	bls	14a80 <__lxstat64@plt+0x3c24>
   14a98:	cmp	r0, r4
   14a9c:	beq	14ab4 <__lxstat64@plt+0x3c58>
   14aa0:	mvnhi	r0, #0
   14aa4:	movls	r0, #1
   14aa8:	pop	{r4, pc}
   14aac:	mov	r4, #0
   14ab0:	b	14a70 <__lxstat64@plt+0x3c14>
   14ab4:	cmp	r4, #0
   14ab8:	beq	14adc <__lxstat64@plt+0x3c80>
   14abc:	sub	r0, lr, ip
   14ac0:	pop	{r4, pc}
   14ac4:	mvn	r0, #0
   14ac8:	pop	{r4, pc}
   14acc:	mov	r0, #0
   14ad0:	pop	{r4, pc}
   14ad4:	mov	r0, #1
   14ad8:	pop	{r4, pc}
   14adc:	mov	r0, #0
   14ae0:	pop	{r4, pc}
   14ae4:	adds	r0, r3, #0
   14ae8:	mvnne	r0, #0
   14aec:	pop	{r4, pc}
   14af0:	adds	r0, r4, #0
   14af4:	movne	r0, #1
   14af8:	pop	{r4, pc}
   14afc:	push	{r4, r5, r6, r7, r8, lr}
   14b00:	sub	sp, sp, #8
   14b04:	mov	r6, r0
   14b08:	mov	r7, r1
   14b0c:	mov	r5, r2
   14b10:	mov	r8, r3
   14b14:	ldr	r1, [sp, #36]	; 0x24
   14b18:	ldr	r0, [sp, #32]
   14b1c:	bl	15820 <__lxstat64@plt+0x49c4>
   14b20:	subs	r4, r0, #0
   14b24:	beq	14b78 <__lxstat64@plt+0x3d1c>
   14b28:	cmp	r5, #0
   14b2c:	beq	14b60 <__lxstat64@plt+0x3d04>
   14b30:	str	r4, [sp, #4]
   14b34:	ldr	r3, [pc, #104]	; 14ba4 <__lxstat64@plt+0x3d48>
   14b38:	str	r3, [sp]
   14b3c:	mov	r3, r8
   14b40:	mov	r2, r5
   14b44:	mov	r1, r7
   14b48:	mov	r0, r6
   14b4c:	bl	10d30 <error_at_line@plt>
   14b50:	mov	r0, r4
   14b54:	bl	15b1c <__lxstat64@plt+0x4cc0>
   14b58:	add	sp, sp, #8
   14b5c:	pop	{r4, r5, r6, r7, r8, pc}
   14b60:	mov	r3, r4
   14b64:	ldr	r2, [pc, #56]	; 14ba4 <__lxstat64@plt+0x3d48>
   14b68:	mov	r1, r7
   14b6c:	mov	r0, r6
   14b70:	bl	10d18 <error@plt>
   14b74:	b	14b50 <__lxstat64@plt+0x3cf4>
   14b78:	bl	10d84 <__errno_location@plt>
   14b7c:	ldr	r4, [r0]
   14b80:	mov	r2, #5
   14b84:	ldr	r1, [pc, #28]	; 14ba8 <__lxstat64@plt+0x3d4c>
   14b88:	mov	r0, #0
   14b8c:	bl	10c94 <dcgettext@plt>
   14b90:	mov	r2, r0
   14b94:	mov	r1, r4
   14b98:	mov	r0, #0
   14b9c:	bl	10d18 <error@plt>
   14ba0:	bl	10e50 <abort@plt>
   14ba4:	andeq	r7, r1, r4, ror #8
   14ba8:	andeq	r7, r1, r4, lsl #11
   14bac:	push	{lr}		; (str lr, [sp, #-4]!)
   14bb0:	sub	sp, sp, #12
   14bb4:	str	r3, [sp, #4]
   14bb8:	str	r2, [sp]
   14bbc:	mov	r3, #0
   14bc0:	mov	r2, r3
   14bc4:	bl	14afc <__lxstat64@plt+0x3ca0>
   14bc8:	add	sp, sp, #12
   14bcc:	pop	{pc}		; (ldr pc, [sp], #4)
   14bd0:	push	{r4, r5, r6, lr}
   14bd4:	sub	sp, sp, #32
   14bd8:	mov	r4, r0
   14bdc:	ldr	r5, [sp, #48]	; 0x30
   14be0:	ldr	r6, [sp, #52]	; 0x34
   14be4:	cmp	r1, #0
   14be8:	beq	14ca0 <__lxstat64@plt+0x3e44>
   14bec:	str	r3, [sp, #4]
   14bf0:	str	r2, [sp]
   14bf4:	mov	r3, r1
   14bf8:	ldr	r2, [pc, #940]	; 14fac <__lxstat64@plt+0x4150>
   14bfc:	mov	r1, #1
   14c00:	bl	10dcc <__fprintf_chk@plt>
   14c04:	mov	r2, #5
   14c08:	ldr	r1, [pc, #928]	; 14fb0 <__lxstat64@plt+0x4154>
   14c0c:	mov	r0, #0
   14c10:	bl	10c94 <dcgettext@plt>
   14c14:	ldr	r3, [pc, #920]	; 14fb4 <__lxstat64@plt+0x4158>
   14c18:	str	r3, [sp]
   14c1c:	mov	r3, r0
   14c20:	ldr	r2, [pc, #912]	; 14fb8 <__lxstat64@plt+0x415c>
   14c24:	mov	r1, #1
   14c28:	mov	r0, r4
   14c2c:	bl	10dcc <__fprintf_chk@plt>
   14c30:	mov	r1, r4
   14c34:	mov	r0, #10
   14c38:	bl	10c88 <fputc_unlocked@plt>
   14c3c:	mov	r2, #5
   14c40:	ldr	r1, [pc, #884]	; 14fbc <__lxstat64@plt+0x4160>
   14c44:	mov	r0, #0
   14c48:	bl	10c94 <dcgettext@plt>
   14c4c:	ldr	r3, [pc, #876]	; 14fc0 <__lxstat64@plt+0x4164>
   14c50:	mov	r2, r0
   14c54:	mov	r1, #1
   14c58:	mov	r0, r4
   14c5c:	bl	10dcc <__fprintf_chk@plt>
   14c60:	mov	r1, r4
   14c64:	mov	r0, #10
   14c68:	bl	10c88 <fputc_unlocked@plt>
   14c6c:	cmp	r6, #9
   14c70:	ldrls	pc, [pc, r6, lsl #2]
   14c74:	b	14f44 <__lxstat64@plt+0x40e8>
   14c78:	ldrdeq	r4, [r1], -ip
   14c7c:			; <UNDEFINED> instruction: 0x00014cb8
   14c80:	andeq	r4, r1, r4, ror #25
   14c84:	andeq	r4, r1, r4, lsl sp
   14c88:	andeq	r4, r1, ip, asr #26
   14c8c:	andeq	r4, r1, ip, lsl #27
   14c90:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14c94:	andeq	r4, r1, r4, lsr #28
   14c98:	andeq	r4, r1, ip, ror lr
   14c9c:	ldrdeq	r4, [r1], -ip
   14ca0:	str	r3, [sp]
   14ca4:	mov	r3, r2
   14ca8:	ldr	r2, [pc, #788]	; 14fc4 <__lxstat64@plt+0x4168>
   14cac:	mov	r1, #1
   14cb0:	bl	10dcc <__fprintf_chk@plt>
   14cb4:	b	14c04 <__lxstat64@plt+0x3da8>
   14cb8:	mov	r2, #5
   14cbc:	ldr	r1, [pc, #772]	; 14fc8 <__lxstat64@plt+0x416c>
   14cc0:	mov	r0, #0
   14cc4:	bl	10c94 <dcgettext@plt>
   14cc8:	ldr	r3, [r5]
   14ccc:	mov	r2, r0
   14cd0:	mov	r1, #1
   14cd4:	mov	r0, r4
   14cd8:	bl	10dcc <__fprintf_chk@plt>
   14cdc:	add	sp, sp, #32
   14ce0:	pop	{r4, r5, r6, pc}
   14ce4:	mov	r2, #5
   14ce8:	ldr	r1, [pc, #732]	; 14fcc <__lxstat64@plt+0x4170>
   14cec:	mov	r0, #0
   14cf0:	bl	10c94 <dcgettext@plt>
   14cf4:	ldr	r3, [r5]
   14cf8:	ldr	r2, [r5, #4]
   14cfc:	str	r2, [sp]
   14d00:	mov	r2, r0
   14d04:	mov	r1, #1
   14d08:	mov	r0, r4
   14d0c:	bl	10dcc <__fprintf_chk@plt>
   14d10:	b	14cdc <__lxstat64@plt+0x3e80>
   14d14:	mov	r2, #5
   14d18:	ldr	r1, [pc, #688]	; 14fd0 <__lxstat64@plt+0x4174>
   14d1c:	mov	r0, #0
   14d20:	bl	10c94 <dcgettext@plt>
   14d24:	ldr	r3, [r5]
   14d28:	ldr	r2, [r5, #8]
   14d2c:	str	r2, [sp, #4]
   14d30:	ldr	r2, [r5, #4]
   14d34:	str	r2, [sp]
   14d38:	mov	r2, r0
   14d3c:	mov	r1, #1
   14d40:	mov	r0, r4
   14d44:	bl	10dcc <__fprintf_chk@plt>
   14d48:	b	14cdc <__lxstat64@plt+0x3e80>
   14d4c:	mov	r2, #5
   14d50:	ldr	r1, [pc, #636]	; 14fd4 <__lxstat64@plt+0x4178>
   14d54:	mov	r0, #0
   14d58:	bl	10c94 <dcgettext@plt>
   14d5c:	ldr	r3, [r5]
   14d60:	ldr	r2, [r5, #12]
   14d64:	str	r2, [sp, #8]
   14d68:	ldr	r2, [r5, #8]
   14d6c:	str	r2, [sp, #4]
   14d70:	ldr	r2, [r5, #4]
   14d74:	str	r2, [sp]
   14d78:	mov	r2, r0
   14d7c:	mov	r1, #1
   14d80:	mov	r0, r4
   14d84:	bl	10dcc <__fprintf_chk@plt>
   14d88:	b	14cdc <__lxstat64@plt+0x3e80>
   14d8c:	mov	r2, #5
   14d90:	ldr	r1, [pc, #576]	; 14fd8 <__lxstat64@plt+0x417c>
   14d94:	mov	r0, #0
   14d98:	bl	10c94 <dcgettext@plt>
   14d9c:	ldr	r3, [r5]
   14da0:	ldr	r2, [r5, #16]
   14da4:	str	r2, [sp, #12]
   14da8:	ldr	r2, [r5, #12]
   14dac:	str	r2, [sp, #8]
   14db0:	ldr	r2, [r5, #8]
   14db4:	str	r2, [sp, #4]
   14db8:	ldr	r2, [r5, #4]
   14dbc:	str	r2, [sp]
   14dc0:	mov	r2, r0
   14dc4:	mov	r1, #1
   14dc8:	mov	r0, r4
   14dcc:	bl	10dcc <__fprintf_chk@plt>
   14dd0:	b	14cdc <__lxstat64@plt+0x3e80>
   14dd4:	mov	r2, #5
   14dd8:	ldr	r1, [pc, #508]	; 14fdc <__lxstat64@plt+0x4180>
   14ddc:	mov	r0, #0
   14de0:	bl	10c94 <dcgettext@plt>
   14de4:	ldr	r3, [r5]
   14de8:	ldr	r2, [r5, #20]
   14dec:	str	r2, [sp, #16]
   14df0:	ldr	r2, [r5, #16]
   14df4:	str	r2, [sp, #12]
   14df8:	ldr	r2, [r5, #12]
   14dfc:	str	r2, [sp, #8]
   14e00:	ldr	r2, [r5, #8]
   14e04:	str	r2, [sp, #4]
   14e08:	ldr	r2, [r5, #4]
   14e0c:	str	r2, [sp]
   14e10:	mov	r2, r0
   14e14:	mov	r1, #1
   14e18:	mov	r0, r4
   14e1c:	bl	10dcc <__fprintf_chk@plt>
   14e20:	b	14cdc <__lxstat64@plt+0x3e80>
   14e24:	mov	r2, #5
   14e28:	ldr	r1, [pc, #432]	; 14fe0 <__lxstat64@plt+0x4184>
   14e2c:	mov	r0, #0
   14e30:	bl	10c94 <dcgettext@plt>
   14e34:	ldr	r3, [r5]
   14e38:	ldr	r2, [r5, #24]
   14e3c:	str	r2, [sp, #20]
   14e40:	ldr	r2, [r5, #20]
   14e44:	str	r2, [sp, #16]
   14e48:	ldr	r2, [r5, #16]
   14e4c:	str	r2, [sp, #12]
   14e50:	ldr	r2, [r5, #12]
   14e54:	str	r2, [sp, #8]
   14e58:	ldr	r2, [r5, #8]
   14e5c:	str	r2, [sp, #4]
   14e60:	ldr	r2, [r5, #4]
   14e64:	str	r2, [sp]
   14e68:	mov	r2, r0
   14e6c:	mov	r1, #1
   14e70:	mov	r0, r4
   14e74:	bl	10dcc <__fprintf_chk@plt>
   14e78:	b	14cdc <__lxstat64@plt+0x3e80>
   14e7c:	mov	r2, #5
   14e80:	ldr	r1, [pc, #348]	; 14fe4 <__lxstat64@plt+0x4188>
   14e84:	mov	r0, #0
   14e88:	bl	10c94 <dcgettext@plt>
   14e8c:	ldr	r3, [r5]
   14e90:	ldr	r2, [r5, #28]
   14e94:	str	r2, [sp, #24]
   14e98:	ldr	r2, [r5, #24]
   14e9c:	str	r2, [sp, #20]
   14ea0:	ldr	r2, [r5, #20]
   14ea4:	str	r2, [sp, #16]
   14ea8:	ldr	r2, [r5, #16]
   14eac:	str	r2, [sp, #12]
   14eb0:	ldr	r2, [r5, #12]
   14eb4:	str	r2, [sp, #8]
   14eb8:	ldr	r2, [r5, #8]
   14ebc:	str	r2, [sp, #4]
   14ec0:	ldr	r2, [r5, #4]
   14ec4:	str	r2, [sp]
   14ec8:	mov	r2, r0
   14ecc:	mov	r1, #1
   14ed0:	mov	r0, r4
   14ed4:	bl	10dcc <__fprintf_chk@plt>
   14ed8:	b	14cdc <__lxstat64@plt+0x3e80>
   14edc:	mov	r2, #5
   14ee0:	ldr	r1, [pc, #256]	; 14fe8 <__lxstat64@plt+0x418c>
   14ee4:	mov	r0, #0
   14ee8:	bl	10c94 <dcgettext@plt>
   14eec:	ldr	r3, [r5]
   14ef0:	ldr	r2, [r5, #32]
   14ef4:	str	r2, [sp, #28]
   14ef8:	ldr	r2, [r5, #28]
   14efc:	str	r2, [sp, #24]
   14f00:	ldr	r2, [r5, #24]
   14f04:	str	r2, [sp, #20]
   14f08:	ldr	r2, [r5, #20]
   14f0c:	str	r2, [sp, #16]
   14f10:	ldr	r2, [r5, #16]
   14f14:	str	r2, [sp, #12]
   14f18:	ldr	r2, [r5, #12]
   14f1c:	str	r2, [sp, #8]
   14f20:	ldr	r2, [r5, #8]
   14f24:	str	r2, [sp, #4]
   14f28:	ldr	r2, [r5, #4]
   14f2c:	str	r2, [sp]
   14f30:	mov	r2, r0
   14f34:	mov	r1, #1
   14f38:	mov	r0, r4
   14f3c:	bl	10dcc <__fprintf_chk@plt>
   14f40:	b	14cdc <__lxstat64@plt+0x3e80>
   14f44:	mov	r2, #5
   14f48:	ldr	r1, [pc, #156]	; 14fec <__lxstat64@plt+0x4190>
   14f4c:	mov	r0, #0
   14f50:	bl	10c94 <dcgettext@plt>
   14f54:	ldr	r3, [r5]
   14f58:	ldr	r2, [r5, #32]
   14f5c:	str	r2, [sp, #28]
   14f60:	ldr	r2, [r5, #28]
   14f64:	str	r2, [sp, #24]
   14f68:	ldr	r2, [r5, #24]
   14f6c:	str	r2, [sp, #20]
   14f70:	ldr	r2, [r5, #20]
   14f74:	str	r2, [sp, #16]
   14f78:	ldr	r2, [r5, #16]
   14f7c:	str	r2, [sp, #12]
   14f80:	ldr	r2, [r5, #12]
   14f84:	str	r2, [sp, #8]
   14f88:	ldr	r2, [r5, #8]
   14f8c:	str	r2, [sp, #4]
   14f90:	ldr	r2, [r5, #4]
   14f94:	str	r2, [sp]
   14f98:	mov	r2, r0
   14f9c:	mov	r1, #1
   14fa0:	mov	r0, r4
   14fa4:	bl	10dcc <__fprintf_chk@plt>
   14fa8:	b	14cdc <__lxstat64@plt+0x3e80>
   14fac:	andeq	r7, r1, r4, lsr #11
   14fb0:			; <UNDEFINED> instruction: 0x000175b8
   14fb4:	andeq	r0, r0, r6, ror #15
   14fb8:	muleq	r1, r0, r8
   14fbc:			; <UNDEFINED> instruction: 0x000175bc
   14fc0:	andeq	r7, r1, r8, ror #12
   14fc4:			; <UNDEFINED> instruction: 0x000175b0
   14fc8:	andeq	r7, r1, ip, lsl #13
   14fcc:	muleq	r1, ip, r6
   14fd0:			; <UNDEFINED> instruction: 0x000176b4
   14fd4:	ldrdeq	r7, [r1], -r0
   14fd8:	strdeq	r7, [r1], -r0
   14fdc:	andeq	r7, r1, r4, lsl r7
   14fe0:	andeq	r7, r1, ip, lsr r7
   14fe4:	andeq	r7, r1, r8, ror #14
   14fe8:	muleq	r1, r8, r7
   14fec:	andeq	r7, r1, ip, asr #15
   14ff0:	push	{r4, r5, lr}
   14ff4:	sub	sp, sp, #12
   14ff8:	ldr	r5, [sp, #24]
   14ffc:	ldr	ip, [r5]
   15000:	cmp	ip, #0
   15004:	beq	15034 <__lxstat64@plt+0x41d8>
   15008:	mov	lr, r5
   1500c:	mov	ip, #0
   15010:	add	ip, ip, #1
   15014:	ldr	r4, [lr, #4]!
   15018:	cmp	r4, #0
   1501c:	bne	15010 <__lxstat64@plt+0x41b4>
   15020:	str	ip, [sp, #4]
   15024:	str	r5, [sp]
   15028:	bl	14bd0 <__lxstat64@plt+0x3d74>
   1502c:	add	sp, sp, #12
   15030:	pop	{r4, r5, pc}
   15034:	mov	ip, #0
   15038:	b	15020 <__lxstat64@plt+0x41c4>
   1503c:	push	{r4, r5, lr}
   15040:	sub	sp, sp, #52	; 0x34
   15044:	ldr	r4, [sp, #64]	; 0x40
   15048:	sub	r4, r4, #4
   1504c:	add	r5, sp, #4
   15050:	mov	ip, #0
   15054:	ldr	lr, [r4, #4]!
   15058:	str	lr, [r5, #4]!
   1505c:	cmp	lr, #0
   15060:	beq	15070 <__lxstat64@plt+0x4214>
   15064:	add	ip, ip, #1
   15068:	cmp	ip, #10
   1506c:	bne	15054 <__lxstat64@plt+0x41f8>
   15070:	str	ip, [sp, #4]
   15074:	add	ip, sp, #8
   15078:	str	ip, [sp]
   1507c:	bl	14bd0 <__lxstat64@plt+0x3d74>
   15080:	add	sp, sp, #52	; 0x34
   15084:	pop	{r4, r5, pc}
   15088:	push	{r3}		; (str r3, [sp, #-4]!)
   1508c:	push	{lr}		; (str lr, [sp, #-4]!)
   15090:	sub	sp, sp, #16
   15094:	add	r3, sp, #24
   15098:	str	r3, [sp, #12]
   1509c:	str	r3, [sp]
   150a0:	ldr	r3, [sp, #20]
   150a4:	bl	1503c <__lxstat64@plt+0x41e0>
   150a8:	add	sp, sp, #16
   150ac:	pop	{lr}		; (ldr lr, [sp], #4)
   150b0:	add	sp, sp, #4
   150b4:	bx	lr
   150b8:	push	{r4, lr}
   150bc:	ldr	r3, [pc, #112]	; 15134 <__lxstat64@plt+0x42d8>
   150c0:	ldr	r1, [r3]
   150c4:	mov	r0, #10
   150c8:	bl	10c88 <fputc_unlocked@plt>
   150cc:	mov	r2, #5
   150d0:	ldr	r1, [pc, #96]	; 15138 <__lxstat64@plt+0x42dc>
   150d4:	mov	r0, #0
   150d8:	bl	10c94 <dcgettext@plt>
   150dc:	ldr	r2, [pc, #88]	; 1513c <__lxstat64@plt+0x42e0>
   150e0:	mov	r1, r0
   150e4:	mov	r0, #1
   150e8:	bl	10db4 <__printf_chk@plt>
   150ec:	mov	r2, #5
   150f0:	ldr	r1, [pc, #72]	; 15140 <__lxstat64@plt+0x42e4>
   150f4:	mov	r0, #0
   150f8:	bl	10c94 <dcgettext@plt>
   150fc:	ldr	r3, [pc, #64]	; 15144 <__lxstat64@plt+0x42e8>
   15100:	ldr	r2, [pc, #64]	; 15148 <__lxstat64@plt+0x42ec>
   15104:	mov	r1, r0
   15108:	mov	r0, #1
   1510c:	bl	10db4 <__printf_chk@plt>
   15110:	mov	r2, #5
   15114:	ldr	r1, [pc, #48]	; 1514c <__lxstat64@plt+0x42f0>
   15118:	mov	r0, #0
   1511c:	bl	10c94 <dcgettext@plt>
   15120:	ldr	r2, [pc, #40]	; 15150 <__lxstat64@plt+0x42f4>
   15124:	mov	r1, r0
   15128:	mov	r0, #1
   1512c:	bl	10db4 <__printf_chk@plt>
   15130:	pop	{r4, pc}
   15134:	andeq	r8, r2, ip, lsr r1
   15138:	andeq	r7, r1, r8, lsl #16
   1513c:	andeq	r7, r1, ip, lsl r8
   15140:	andeq	r7, r1, r4, lsr r8
   15144:	muleq	r1, r0, r2
   15148:			; <UNDEFINED> instruction: 0x000172b8
   1514c:	andeq	r7, r1, r8, asr #16
   15150:	andeq	r7, r1, r0, ror r8
   15154:	push	{r4, lr}
   15158:	bl	15918 <__lxstat64@plt+0x4abc>
   1515c:	cmp	r0, #0
   15160:	popne	{r4, pc}
   15164:	bl	156f8 <__lxstat64@plt+0x489c>
   15168:	push	{r4, lr}
   1516c:	bl	15918 <__lxstat64@plt+0x4abc>
   15170:	cmp	r0, #0
   15174:	popne	{r4, pc}
   15178:	bl	156f8 <__lxstat64@plt+0x489c>
   1517c:	push	{r4, lr}
   15180:	bl	15154 <__lxstat64@plt+0x42f8>
   15184:	pop	{r4, pc}
   15188:	push	{r4, r5, r6, lr}
   1518c:	mov	r5, r0
   15190:	mov	r4, r1
   15194:	bl	15948 <__lxstat64@plt+0x4aec>
   15198:	cmp	r0, #0
   1519c:	popne	{r4, r5, r6, pc}
   151a0:	adds	r4, r4, #0
   151a4:	movne	r4, #1
   151a8:	cmp	r5, #0
   151ac:	orreq	r4, r4, #1
   151b0:	cmp	r4, #0
   151b4:	popeq	{r4, r5, r6, pc}
   151b8:	bl	156f8 <__lxstat64@plt+0x489c>
   151bc:	push	{r4, lr}
   151c0:	cmp	r1, #0
   151c4:	orreq	r1, r1, #1
   151c8:	bl	15948 <__lxstat64@plt+0x4aec>
   151cc:	cmp	r0, #0
   151d0:	popne	{r4, pc}
   151d4:	bl	156f8 <__lxstat64@plt+0x489c>
   151d8:	push	{r4, r5, r6, lr}
   151dc:	mov	r6, r0
   151e0:	mov	r5, r1
   151e4:	mov	r4, r2
   151e8:	bl	15ca8 <__lxstat64@plt+0x4e4c>
   151ec:	cmp	r0, #0
   151f0:	popne	{r4, r5, r6, pc}
   151f4:	cmp	r6, #0
   151f8:	beq	15208 <__lxstat64@plt+0x43ac>
   151fc:	cmp	r5, #0
   15200:	cmpne	r4, #0
   15204:	popeq	{r4, r5, r6, pc}
   15208:	bl	156f8 <__lxstat64@plt+0x489c>
   1520c:	push	{r4, lr}
   15210:	bl	151d8 <__lxstat64@plt+0x437c>
   15214:	pop	{r4, pc}
   15218:	push	{r4, lr}
   1521c:	mov	ip, r1
   15220:	mov	r3, r2
   15224:	cmp	r2, #0
   15228:	cmpne	r1, #0
   1522c:	moveq	r3, #1
   15230:	moveq	ip, r3
   15234:	mov	r2, r3
   15238:	mov	r1, ip
   1523c:	bl	15ca8 <__lxstat64@plt+0x4e4c>
   15240:	cmp	r0, #0
   15244:	popne	{r4, pc}
   15248:	bl	156f8 <__lxstat64@plt+0x489c>
   1524c:	push	{r4, lr}
   15250:	mov	r2, r1
   15254:	mov	r1, r0
   15258:	mov	r0, #0
   1525c:	bl	151d8 <__lxstat64@plt+0x437c>
   15260:	pop	{r4, pc}
   15264:	push	{r4, lr}
   15268:	mov	r2, r1
   1526c:	mov	r1, r0
   15270:	mov	r0, #0
   15274:	bl	15218 <__lxstat64@plt+0x43bc>
   15278:	pop	{r4, pc}
   1527c:	push	{r4, r5, r6, r7, r8, lr}
   15280:	mov	r5, r1
   15284:	mov	r6, r2
   15288:	ldr	r4, [r1]
   1528c:	subs	r7, r0, #0
   15290:	beq	152ac <__lxstat64@plt+0x4450>
   15294:	lsr	r2, r4, #1
   15298:	add	r3, r2, #1
   1529c:	mvn	r3, r3
   152a0:	cmp	r4, r3
   152a4:	bls	152d0 <__lxstat64@plt+0x4474>
   152a8:	bl	156f8 <__lxstat64@plt+0x489c>
   152ac:	cmp	r4, #0
   152b0:	bne	152d8 <__lxstat64@plt+0x447c>
   152b4:	mov	r1, r2
   152b8:	mov	r0, #64	; 0x40
   152bc:	bl	15dfc <__lxstat64@plt+0x4fa0>
   152c0:	cmp	r0, #0
   152c4:	movne	r4, r0
   152c8:	addeq	r4, r0, #1
   152cc:	b	152d8 <__lxstat64@plt+0x447c>
   152d0:	add	r4, r4, #1
   152d4:	add	r4, r4, r2
   152d8:	mov	r2, r6
   152dc:	mov	r1, r4
   152e0:	mov	r0, r7
   152e4:	bl	151d8 <__lxstat64@plt+0x437c>
   152e8:	str	r4, [r5]
   152ec:	pop	{r4, r5, r6, r7, r8, pc}
   152f0:	push	{r4, lr}
   152f4:	mov	r2, #1
   152f8:	bl	1527c <__lxstat64@plt+0x4420>
   152fc:	pop	{r4, pc}
   15300:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15304:	sub	sp, sp, #12
   15308:	mov	fp, r0
   1530c:	mov	sl, r1
   15310:	mov	r9, r2
   15314:	mov	r7, r3
   15318:	ldr	r6, [sp, #48]	; 0x30
   1531c:	ldr	r5, [r1]
   15320:	asrs	r4, r5, #1
   15324:	bmi	15480 <__lxstat64@plt+0x4624>
   15328:	cmp	r5, #0
   1532c:	blt	15494 <__lxstat64@plt+0x4638>
   15330:	mvn	r3, #-2147483648	; 0x80000000
   15334:	sub	r3, r3, r4
   15338:	cmp	r5, r3
   1533c:	movle	r3, #0
   15340:	movgt	r3, #1
   15344:	cmp	r3, #0
   15348:	addeq	r4, r4, r5
   1534c:	mvnne	r4, #-2147483648	; 0x80000000
   15350:	mvn	r8, r7
   15354:	lsr	r8, r8, #31
   15358:	cmp	r7, r4
   1535c:	movge	r3, #0
   15360:	andlt	r3, r8, #1
   15364:	cmp	r3, #0
   15368:	movne	r4, r7
   1536c:	cmp	r6, #0
   15370:	blt	154a8 <__lxstat64@plt+0x464c>
   15374:	cmp	r6, #0
   15378:	beq	15554 <__lxstat64@plt+0x46f8>
   1537c:	cmp	r4, #0
   15380:	blt	15504 <__lxstat64@plt+0x46a8>
   15384:	mov	r1, r6
   15388:	mvn	r0, #-2147483648	; 0x80000000
   1538c:	bl	16008 <__lxstat64@plt+0x51ac>
   15390:	cmp	r0, r4
   15394:	movge	r0, #0
   15398:	movlt	r0, #1
   1539c:	cmp	r0, #0
   153a0:	mvnne	r3, #-2147483648	; 0x80000000
   153a4:	strne	r3, [sp, #4]
   153a8:	beq	1553c <__lxstat64@plt+0x46e0>
   153ac:	mov	r1, r6
   153b0:	ldr	r0, [sp, #4]
   153b4:	bl	16008 <__lxstat64@plt+0x51ac>
   153b8:	mov	r4, r0
   153bc:	mov	r1, r6
   153c0:	ldr	r0, [sp, #4]
   153c4:	bl	16228 <__lxstat64@plt+0x53cc>
   153c8:	ldr	r3, [sp, #4]
   153cc:	sub	r1, r3, r1
   153d0:	cmp	fp, #0
   153d4:	moveq	r3, #0
   153d8:	streq	r3, [sl]
   153dc:	sub	r3, r4, r5
   153e0:	cmp	r3, r9
   153e4:	bge	1546c <__lxstat64@plt+0x4610>
   153e8:	cmp	r9, #0
   153ec:	blt	15560 <__lxstat64@plt+0x4704>
   153f0:	cmp	r5, #0
   153f4:	blt	15574 <__lxstat64@plt+0x4718>
   153f8:	mvn	r3, #-2147483648	; 0x80000000
   153fc:	sub	r3, r3, r9
   15400:	cmp	r5, r3
   15404:	movle	r3, #0
   15408:	movgt	r3, #1
   1540c:	cmp	r3, #0
   15410:	bne	1561c <__lxstat64@plt+0x47c0>
   15414:	add	r5, r5, r9
   15418:	mov	r4, r5
   1541c:	cmp	r7, r5
   15420:	movge	r7, #0
   15424:	andlt	r7, r8, #1
   15428:	cmp	r7, #0
   1542c:	bne	1561c <__lxstat64@plt+0x47c0>
   15430:	cmp	r6, #0
   15434:	blt	15588 <__lxstat64@plt+0x472c>
   15438:	cmp	r6, #0
   1543c:	beq	15468 <__lxstat64@plt+0x460c>
   15440:	cmp	r5, #0
   15444:	blt	155e4 <__lxstat64@plt+0x4788>
   15448:	mov	r1, r6
   1544c:	mvn	r0, #-2147483648	; 0x80000000
   15450:	bl	16008 <__lxstat64@plt+0x51ac>
   15454:	cmp	r5, r0
   15458:	movle	r0, #0
   1545c:	movgt	r0, #1
   15460:	cmp	r0, #0
   15464:	bne	1561c <__lxstat64@plt+0x47c0>
   15468:	mul	r1, r5, r6
   1546c:	mov	r0, fp
   15470:	bl	15188 <__lxstat64@plt+0x432c>
   15474:	str	r4, [sl]
   15478:	add	sp, sp, #12
   1547c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15480:	rsb	r3, r4, #-2147483648	; 0x80000000
   15484:	cmp	r5, r3
   15488:	movge	r3, #0
   1548c:	movlt	r3, #1
   15490:	b	15344 <__lxstat64@plt+0x44e8>
   15494:	rsb	r3, r5, #-2147483648	; 0x80000000
   15498:	cmp	r4, r3
   1549c:	movge	r3, #0
   154a0:	movlt	r3, #1
   154a4:	b	15344 <__lxstat64@plt+0x44e8>
   154a8:	cmp	r4, #0
   154ac:	blt	154d4 <__lxstat64@plt+0x4678>
   154b0:	cmn	r6, #1
   154b4:	beq	154f0 <__lxstat64@plt+0x4694>
   154b8:	mov	r1, r6
   154bc:	mov	r0, #-2147483648	; 0x80000000
   154c0:	bl	16008 <__lxstat64@plt+0x51ac>
   154c4:	cmp	r0, r4
   154c8:	movge	r0, #0
   154cc:	movlt	r0, #1
   154d0:	b	1539c <__lxstat64@plt+0x4540>
   154d4:	mov	r1, r6
   154d8:	mvn	r0, #-2147483648	; 0x80000000
   154dc:	bl	16008 <__lxstat64@plt+0x51ac>
   154e0:	cmp	r0, r4
   154e4:	movle	r0, #0
   154e8:	movgt	r0, #1
   154ec:	b	1539c <__lxstat64@plt+0x4540>
   154f0:	add	r0, r4, #-2147483648	; 0x80000000
   154f4:	cmp	r0, #0
   154f8:	movle	r0, #0
   154fc:	movgt	r0, #1
   15500:	b	1539c <__lxstat64@plt+0x4540>
   15504:	cmn	r4, #1
   15508:	beq	15528 <__lxstat64@plt+0x46cc>
   1550c:	mov	r1, r4
   15510:	mov	r0, #-2147483648	; 0x80000000
   15514:	bl	16008 <__lxstat64@plt+0x51ac>
   15518:	cmp	r6, r0
   1551c:	movle	r0, #0
   15520:	movgt	r0, #1
   15524:	b	1539c <__lxstat64@plt+0x4540>
   15528:	add	r0, r6, #-2147483648	; 0x80000000
   1552c:	cmp	r0, #0
   15530:	movle	r0, #0
   15534:	movgt	r0, #1
   15538:	b	1539c <__lxstat64@plt+0x4540>
   1553c:	mul	r1, r6, r4
   15540:	cmp	r1, #63	; 0x3f
   15544:	movle	r3, #64	; 0x40
   15548:	strle	r3, [sp, #4]
   1554c:	bgt	153d0 <__lxstat64@plt+0x4574>
   15550:	b	153ac <__lxstat64@plt+0x4550>
   15554:	mov	r3, #64	; 0x40
   15558:	str	r3, [sp, #4]
   1555c:	b	153ac <__lxstat64@plt+0x4550>
   15560:	rsb	r3, r9, #-2147483648	; 0x80000000
   15564:	cmp	r5, r3
   15568:	movge	r3, #0
   1556c:	movlt	r3, #1
   15570:	b	1540c <__lxstat64@plt+0x45b0>
   15574:	rsb	r3, r5, #-2147483648	; 0x80000000
   15578:	cmp	r9, r3
   1557c:	movge	r3, #0
   15580:	movlt	r3, #1
   15584:	b	1540c <__lxstat64@plt+0x45b0>
   15588:	cmp	r5, #0
   1558c:	blt	155b4 <__lxstat64@plt+0x4758>
   15590:	cmn	r6, #1
   15594:	beq	155d0 <__lxstat64@plt+0x4774>
   15598:	mov	r1, r6
   1559c:	mov	r0, #-2147483648	; 0x80000000
   155a0:	bl	16008 <__lxstat64@plt+0x51ac>
   155a4:	cmp	r5, r0
   155a8:	movle	r0, #0
   155ac:	movgt	r0, #1
   155b0:	b	15460 <__lxstat64@plt+0x4604>
   155b4:	mov	r1, r6
   155b8:	mvn	r0, #-2147483648	; 0x80000000
   155bc:	bl	16008 <__lxstat64@plt+0x51ac>
   155c0:	cmp	r5, r0
   155c4:	movge	r0, #0
   155c8:	movlt	r0, #1
   155cc:	b	15460 <__lxstat64@plt+0x4604>
   155d0:	add	r0, r5, #-2147483648	; 0x80000000
   155d4:	cmp	r0, #0
   155d8:	movle	r0, #0
   155dc:	movgt	r0, #1
   155e0:	b	15460 <__lxstat64@plt+0x4604>
   155e4:	cmn	r5, #1
   155e8:	beq	15608 <__lxstat64@plt+0x47ac>
   155ec:	mov	r1, r5
   155f0:	mov	r0, #-2147483648	; 0x80000000
   155f4:	bl	16008 <__lxstat64@plt+0x51ac>
   155f8:	cmp	r6, r0
   155fc:	movle	r0, #0
   15600:	movgt	r0, #1
   15604:	b	15460 <__lxstat64@plt+0x4604>
   15608:	add	r0, r6, #-2147483648	; 0x80000000
   1560c:	cmp	r0, #0
   15610:	movle	r0, #0
   15614:	movgt	r0, #1
   15618:	b	15460 <__lxstat64@plt+0x4604>
   1561c:	bl	156f8 <__lxstat64@plt+0x489c>
   15620:	push	{r4, lr}
   15624:	bl	158c8 <__lxstat64@plt+0x4a6c>
   15628:	cmp	r0, #0
   1562c:	popne	{r4, pc}
   15630:	bl	156f8 <__lxstat64@plt+0x489c>
   15634:	push	{r4, lr}
   15638:	mov	r1, #1
   1563c:	bl	15620 <__lxstat64@plt+0x47c4>
   15640:	pop	{r4, pc}
   15644:	push	{r4, lr}
   15648:	bl	158c8 <__lxstat64@plt+0x4a6c>
   1564c:	cmp	r0, #0
   15650:	popne	{r4, pc}
   15654:	bl	156f8 <__lxstat64@plt+0x489c>
   15658:	push	{r4, lr}
   1565c:	mov	r1, #1
   15660:	bl	15644 <__lxstat64@plt+0x47e8>
   15664:	pop	{r4, pc}
   15668:	push	{r4, r5, r6, lr}
   1566c:	mov	r5, r0
   15670:	mov	r4, r1
   15674:	mov	r0, r1
   15678:	bl	15154 <__lxstat64@plt+0x42f8>
   1567c:	mov	r2, r4
   15680:	mov	r1, r5
   15684:	bl	10c64 <memcpy@plt>
   15688:	pop	{r4, r5, r6, pc}
   1568c:	push	{r4, r5, r6, lr}
   15690:	mov	r5, r0
   15694:	mov	r4, r1
   15698:	mov	r0, r1
   1569c:	bl	15168 <__lxstat64@plt+0x430c>
   156a0:	mov	r2, r4
   156a4:	mov	r1, r5
   156a8:	bl	10c64 <memcpy@plt>
   156ac:	pop	{r4, r5, r6, pc}
   156b0:	push	{r4, r5, r6, lr}
   156b4:	mov	r5, r0
   156b8:	mov	r4, r1
   156bc:	add	r0, r1, #1
   156c0:	bl	15168 <__lxstat64@plt+0x430c>
   156c4:	mov	r2, #0
   156c8:	strb	r2, [r0, r4]
   156cc:	mov	r2, r4
   156d0:	mov	r1, r5
   156d4:	bl	10c64 <memcpy@plt>
   156d8:	pop	{r4, r5, r6, pc}
   156dc:	push	{r4, lr}
   156e0:	mov	r4, r0
   156e4:	bl	10d78 <strlen@plt>
   156e8:	add	r1, r0, #1
   156ec:	mov	r0, r4
   156f0:	bl	15668 <__lxstat64@plt+0x480c>
   156f4:	pop	{r4, pc}
   156f8:	push	{r4, lr}
   156fc:	ldr	r3, [pc, #40]	; 1572c <__lxstat64@plt+0x48d0>
   15700:	ldr	r4, [r3]
   15704:	mov	r2, #5
   15708:	ldr	r1, [pc, #32]	; 15730 <__lxstat64@plt+0x48d4>
   1570c:	mov	r0, #0
   15710:	bl	10c94 <dcgettext@plt>
   15714:	mov	r3, r0
   15718:	ldr	r2, [pc, #20]	; 15734 <__lxstat64@plt+0x48d8>
   1571c:	mov	r1, #0
   15720:	mov	r0, r4
   15724:	bl	10d18 <error@plt>
   15728:	bl	10e50 <abort@plt>
   1572c:	andeq	r8, r2, r8, ror #1
   15730:	andeq	r7, r1, r0, asr #17
   15734:	andeq	r7, r1, r4, ror #8
   15738:	push	{r4, r5, r6, r7, r8, r9, lr}
   1573c:	sub	sp, sp, #12
   15740:	str	r1, [sp, #4]
   15744:	subs	r6, r0, #0
   15748:	beq	1580c <__lxstat64@plt+0x49b0>
   1574c:	mov	r8, r1
   15750:	ldr	r3, [sp, #4]
   15754:	add	r2, r3, #4
   15758:	str	r2, [sp, #4]
   1575c:	ldr	r0, [r3]
   15760:	bl	10d78 <strlen@plt>
   15764:	mov	r5, r0
   15768:	mov	r4, r6
   1576c:	b	15794 <__lxstat64@plt+0x4938>
   15770:	ldr	r3, [sp, #4]
   15774:	add	r2, r3, #4
   15778:	str	r2, [sp, #4]
   1577c:	ldr	r0, [r3]
   15780:	bl	10d78 <strlen@plt>
   15784:	add	r0, r0, r5
   15788:	cmp	r0, r5
   1578c:	movcs	r5, r0
   15790:	mvncc	r5, #0
   15794:	subs	r4, r4, #1
   15798:	bne	15770 <__lxstat64@plt+0x4914>
   1579c:	cmp	r5, #0
   157a0:	blt	157f8 <__lxstat64@plt+0x499c>
   157a4:	add	r0, r5, #1
   157a8:	bl	15154 <__lxstat64@plt+0x42f8>
   157ac:	mov	r9, r0
   157b0:	sub	r8, r8, #4
   157b4:	mov	r4, r0
   157b8:	ldr	r7, [r8, #4]!
   157bc:	mov	r0, r7
   157c0:	bl	10d78 <strlen@plt>
   157c4:	mov	r5, r0
   157c8:	mov	r2, r0
   157cc:	mov	r1, r7
   157d0:	mov	r0, r4
   157d4:	bl	10c64 <memcpy@plt>
   157d8:	add	r4, r4, r5
   157dc:	subs	r6, r6, #1
   157e0:	bne	157b8 <__lxstat64@plt+0x495c>
   157e4:	mov	r3, #0
   157e8:	strb	r3, [r4]
   157ec:	mov	r0, r9
   157f0:	add	sp, sp, #12
   157f4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   157f8:	bl	10d84 <__errno_location@plt>
   157fc:	mov	r3, #75	; 0x4b
   15800:	str	r3, [r0]
   15804:	mov	r9, #0
   15808:	b	157ec <__lxstat64@plt+0x4990>
   1580c:	mov	r0, #1
   15810:	bl	15154 <__lxstat64@plt+0x42f8>
   15814:	mov	r4, r0
   15818:	mov	r9, r0
   1581c:	b	157e4 <__lxstat64@plt+0x4988>
   15820:	push	{r4, lr}
   15824:	sub	sp, sp, #8
   15828:	ldrb	r2, [r0]
   1582c:	cmp	r2, #0
   15830:	beq	158a0 <__lxstat64@plt+0x4a44>
   15834:	cmp	r2, #37	; 0x25
   15838:	bne	15878 <__lxstat64@plt+0x4a1c>
   1583c:	ldrb	r3, [r0, #1]
   15840:	cmp	r3, #115	; 0x73
   15844:	bne	15878 <__lxstat64@plt+0x4a1c>
   15848:	mov	ip, r0
   1584c:	mov	r4, #0
   15850:	add	r4, r4, #1
   15854:	ldrb	lr, [ip, #2]
   15858:	cmp	lr, #0
   1585c:	beq	158a4 <__lxstat64@plt+0x4a48>
   15860:	cmp	lr, #37	; 0x25
   15864:	bne	15878 <__lxstat64@plt+0x4a1c>
   15868:	add	ip, ip, #2
   1586c:	ldrb	lr, [ip, #1]
   15870:	cmp	lr, #115	; 0x73
   15874:	beq	15850 <__lxstat64@plt+0x49f4>
   15878:	mov	r3, r1
   1587c:	mov	r2, r0
   15880:	mov	r1, #1
   15884:	add	r0, sp, #4
   15888:	bl	10d9c <__vasprintf_chk@plt>
   1588c:	cmp	r0, #0
   15890:	ldrge	r0, [sp, #4]
   15894:	blt	158b0 <__lxstat64@plt+0x4a54>
   15898:	add	sp, sp, #8
   1589c:	pop	{r4, pc}
   158a0:	mov	r4, #0
   158a4:	mov	r0, r4
   158a8:	bl	15738 <__lxstat64@plt+0x48dc>
   158ac:	b	15898 <__lxstat64@plt+0x4a3c>
   158b0:	bl	10d84 <__errno_location@plt>
   158b4:	ldr	r3, [r0]
   158b8:	cmp	r3, #12
   158bc:	movne	r0, #0
   158c0:	bne	15898 <__lxstat64@plt+0x4a3c>
   158c4:	bl	156f8 <__lxstat64@plt+0x489c>
   158c8:	push	{r4, lr}
   158cc:	mov	r2, r0
   158d0:	mov	r3, r1
   158d4:	cmp	r1, #0
   158d8:	cmpne	r0, #0
   158dc:	moveq	r3, #1
   158e0:	moveq	r2, r3
   158e4:	umull	r0, r1, r2, r3
   158e8:	cmp	r0, #0
   158ec:	cmpge	r1, #0
   158f0:	bne	15904 <__lxstat64@plt+0x4aa8>
   158f4:	mov	r1, r3
   158f8:	mov	r0, r2
   158fc:	bl	10c04 <calloc@plt>
   15900:	pop	{r4, pc}
   15904:	bl	10d84 <__errno_location@plt>
   15908:	mov	r3, #12
   1590c:	str	r3, [r0]
   15910:	mov	r0, #0
   15914:	pop	{r4, pc}
   15918:	push	{r4, lr}
   1591c:	cmp	r0, #0
   15920:	moveq	r0, #1
   15924:	cmp	r0, #0
   15928:	blt	15934 <__lxstat64@plt+0x4ad8>
   1592c:	bl	10d24 <malloc@plt>
   15930:	pop	{r4, pc}
   15934:	bl	10d84 <__errno_location@plt>
   15938:	mov	r3, #12
   1593c:	str	r3, [r0]
   15940:	mov	r0, #0
   15944:	pop	{r4, pc}
   15948:	push	{r4, lr}
   1594c:	cmp	r0, #0
   15950:	beq	1596c <__lxstat64@plt+0x4b10>
   15954:	cmp	r1, #0
   15958:	beq	15978 <__lxstat64@plt+0x4b1c>
   1595c:	cmp	r1, #0
   15960:	blt	15984 <__lxstat64@plt+0x4b28>
   15964:	bl	10ca0 <realloc@plt>
   15968:	pop	{r4, pc}
   1596c:	mov	r0, r1
   15970:	bl	15918 <__lxstat64@plt+0x4abc>
   15974:	pop	{r4, pc}
   15978:	bl	15b1c <__lxstat64@plt+0x4cc0>
   1597c:	mov	r0, #0
   15980:	pop	{r4, pc}
   15984:	bl	10d84 <__errno_location@plt>
   15988:	mov	r3, #12
   1598c:	str	r3, [r0]
   15990:	mov	r0, #0
   15994:	pop	{r4, pc}
   15998:	push	{r4, r5, r6, lr}
   1599c:	mov	r5, r0
   159a0:	bl	10d00 <__fpending@plt>
   159a4:	mov	r6, r0
   159a8:	ldr	r4, [r5]
   159ac:	and	r4, r4, #32
   159b0:	mov	r0, r5
   159b4:	bl	15a10 <__lxstat64@plt+0x4bb4>
   159b8:	cmp	r4, #0
   159bc:	bne	159e4 <__lxstat64@plt+0x4b88>
   159c0:	cmp	r0, #0
   159c4:	popeq	{r4, r5, r6, pc}
   159c8:	cmp	r6, #0
   159cc:	bne	15a00 <__lxstat64@plt+0x4ba4>
   159d0:	bl	10d84 <__errno_location@plt>
   159d4:	ldr	r0, [r0]
   159d8:	subs	r0, r0, #9
   159dc:	mvnne	r0, #0
   159e0:	pop	{r4, r5, r6, pc}
   159e4:	cmp	r0, #0
   159e8:	bne	15a08 <__lxstat64@plt+0x4bac>
   159ec:	bl	10d84 <__errno_location@plt>
   159f0:	mov	r3, #0
   159f4:	str	r3, [r0]
   159f8:	mvn	r0, #0
   159fc:	pop	{r4, r5, r6, pc}
   15a00:	mvn	r0, #0
   15a04:	pop	{r4, r5, r6, pc}
   15a08:	mvn	r0, #0
   15a0c:	pop	{r4, r5, r6, pc}
   15a10:	push	{r4, r5, r6, lr}
   15a14:	sub	sp, sp, #8
   15a18:	mov	r4, r0
   15a1c:	bl	10dc0 <fileno@plt>
   15a20:	cmp	r0, #0
   15a24:	blt	15a9c <__lxstat64@plt+0x4c40>
   15a28:	mov	r0, r4
   15a2c:	bl	10d48 <__freading@plt>
   15a30:	cmp	r0, #0
   15a34:	beq	15a68 <__lxstat64@plt+0x4c0c>
   15a38:	mov	r0, r4
   15a3c:	bl	10dc0 <fileno@plt>
   15a40:	mov	r3, #1
   15a44:	str	r3, [sp]
   15a48:	mov	r2, #0
   15a4c:	mov	r3, #0
   15a50:	bl	10ce8 <lseek64@plt>
   15a54:	mvn	r2, #0
   15a58:	mvn	r3, #0
   15a5c:	cmp	r1, r3
   15a60:	cmpeq	r0, r2
   15a64:	beq	15aa8 <__lxstat64@plt+0x4c4c>
   15a68:	mov	r0, r4
   15a6c:	bl	15ab8 <__lxstat64@plt+0x4c5c>
   15a70:	cmp	r0, #0
   15a74:	beq	15aa8 <__lxstat64@plt+0x4c4c>
   15a78:	bl	10d84 <__errno_location@plt>
   15a7c:	mov	r5, r0
   15a80:	ldr	r6, [r0]
   15a84:	mov	r0, r4
   15a88:	bl	10dd8 <fclose@plt>
   15a8c:	cmp	r6, #0
   15a90:	strne	r6, [r5]
   15a94:	mvnne	r0, #0
   15a98:	b	15ab0 <__lxstat64@plt+0x4c54>
   15a9c:	mov	r0, r4
   15aa0:	bl	10dd8 <fclose@plt>
   15aa4:	b	15ab0 <__lxstat64@plt+0x4c54>
   15aa8:	mov	r0, r4
   15aac:	bl	10dd8 <fclose@plt>
   15ab0:	add	sp, sp, #8
   15ab4:	pop	{r4, r5, r6, pc}
   15ab8:	push	{r4, lr}
   15abc:	sub	sp, sp, #8
   15ac0:	subs	r4, r0, #0
   15ac4:	beq	15ad8 <__lxstat64@plt+0x4c7c>
   15ac8:	mov	r0, r4
   15acc:	bl	10d48 <__freading@plt>
   15ad0:	cmp	r0, #0
   15ad4:	bne	15ae8 <__lxstat64@plt+0x4c8c>
   15ad8:	mov	r0, r4
   15adc:	bl	10c40 <fflush@plt>
   15ae0:	add	sp, sp, #8
   15ae4:	pop	{r4, pc}
   15ae8:	ldr	r3, [r4]
   15aec:	tst	r3, #256	; 0x100
   15af0:	bne	15b00 <__lxstat64@plt+0x4ca4>
   15af4:	mov	r0, r4
   15af8:	bl	10c40 <fflush@plt>
   15afc:	b	15ae0 <__lxstat64@plt+0x4c84>
   15b00:	mov	r3, #1
   15b04:	str	r3, [sp]
   15b08:	mov	r2, #0
   15b0c:	mov	r3, #0
   15b10:	mov	r0, r4
   15b14:	bl	15b74 <__lxstat64@plt+0x4d18>
   15b18:	b	15af4 <__lxstat64@plt+0x4c98>
   15b1c:	push	{r4, r5, lr}
   15b20:	sub	sp, sp, #12
   15b24:	mov	r5, r0
   15b28:	bl	10d84 <__errno_location@plt>
   15b2c:	mov	r4, r0
   15b30:	ldr	r3, [r0]
   15b34:	str	r3, [sp]
   15b38:	str	r3, [sp, #4]
   15b3c:	mov	r3, #0
   15b40:	str	r3, [r0]
   15b44:	mov	r0, r5
   15b48:	bl	10c4c <free@plt>
   15b4c:	ldr	r3, [r4]
   15b50:	cmp	r3, #0
   15b54:	moveq	r3, #4
   15b58:	movne	r3, #0
   15b5c:	add	r2, sp, #8
   15b60:	add	r3, r2, r3
   15b64:	ldr	r3, [r3, #-8]
   15b68:	str	r3, [r4]
   15b6c:	add	sp, sp, #12
   15b70:	pop	{r4, r5, pc}
   15b74:	push	{r4, r5, r6, r7, lr}
   15b78:	sub	sp, sp, #12
   15b7c:	mov	r4, r0
   15b80:	mov	r6, r2
   15b84:	mov	r7, r3
   15b88:	ldr	r5, [sp, #32]
   15b8c:	ldr	r2, [r0, #8]
   15b90:	ldr	r3, [r0, #4]
   15b94:	cmp	r2, r3
   15b98:	beq	15bb8 <__lxstat64@plt+0x4d5c>
   15b9c:	str	r5, [sp]
   15ba0:	mov	r2, r6
   15ba4:	mov	r3, r7
   15ba8:	mov	r0, r4
   15bac:	bl	10de4 <fseeko64@plt>
   15bb0:	add	sp, sp, #12
   15bb4:	pop	{r4, r5, r6, r7, pc}
   15bb8:	ldr	r2, [r0, #20]
   15bbc:	ldr	r3, [r0, #16]
   15bc0:	cmp	r2, r3
   15bc4:	bne	15b9c <__lxstat64@plt+0x4d40>
   15bc8:	ldr	r3, [r0, #36]	; 0x24
   15bcc:	cmp	r3, #0
   15bd0:	bne	15b9c <__lxstat64@plt+0x4d40>
   15bd4:	bl	10dc0 <fileno@plt>
   15bd8:	str	r5, [sp]
   15bdc:	mov	r2, r6
   15be0:	mov	r3, r7
   15be4:	bl	10ce8 <lseek64@plt>
   15be8:	mvn	r2, #0
   15bec:	mvn	r3, #0
   15bf0:	cmp	r1, r3
   15bf4:	cmpeq	r0, r2
   15bf8:	beq	15c14 <__lxstat64@plt+0x4db8>
   15bfc:	ldr	r3, [r4]
   15c00:	bic	r3, r3, #16
   15c04:	str	r3, [r4]
   15c08:	strd	r0, [r4, #80]	; 0x50
   15c0c:	mov	r0, #0
   15c10:	b	15bb0 <__lxstat64@plt+0x4d54>
   15c14:	mvn	r0, #0
   15c18:	b	15bb0 <__lxstat64@plt+0x4d54>
   15c1c:	push	{r4, lr}
   15c20:	mov	r0, #14
   15c24:	bl	10e08 <nl_langinfo@plt>
   15c28:	cmp	r0, #0
   15c2c:	beq	15c44 <__lxstat64@plt+0x4de8>
   15c30:	ldrb	r2, [r0]
   15c34:	ldr	r3, [pc, #16]	; 15c4c <__lxstat64@plt+0x4df0>
   15c38:	cmp	r2, #0
   15c3c:	moveq	r0, r3
   15c40:	pop	{r4, pc}
   15c44:	ldr	r0, [pc]	; 15c4c <__lxstat64@plt+0x4df0>
   15c48:	pop	{r4, pc}
   15c4c:	ldrdeq	r7, [r1], -r4
   15c50:	push	{r4, r5, r6, r7, lr}
   15c54:	sub	sp, sp, #12
   15c58:	mov	r7, r1
   15c5c:	mov	r5, r2
   15c60:	subs	r6, r0, #0
   15c64:	addeq	r6, sp, #4
   15c68:	mov	r0, r6
   15c6c:	bl	10d0c <mbrtowc@plt>
   15c70:	mov	r4, r0
   15c74:	cmp	r5, #0
   15c78:	cmnne	r0, #3
   15c7c:	bhi	15c8c <__lxstat64@plt+0x4e30>
   15c80:	mov	r0, r4
   15c84:	add	sp, sp, #12
   15c88:	pop	{r4, r5, r6, r7, pc}
   15c8c:	mov	r0, #0
   15c90:	bl	15cf4 <__lxstat64@plt+0x4e98>
   15c94:	cmp	r0, #0
   15c98:	ldrbeq	r3, [r7]
   15c9c:	streq	r3, [r6]
   15ca0:	moveq	r4, #1
   15ca4:	b	15c80 <__lxstat64@plt+0x4e24>
   15ca8:	push	{r4, r5, r6, lr}
   15cac:	mov	r6, r0
   15cb0:	mov	r5, r1
   15cb4:	subs	r4, r2, #0
   15cb8:	beq	15ce4 <__lxstat64@plt+0x4e88>
   15cbc:	mov	r1, r4
   15cc0:	mvn	r0, #0
   15cc4:	bl	15dfc <__lxstat64@plt+0x4fa0>
   15cc8:	cmp	r0, r5
   15ccc:	bcs	15ce4 <__lxstat64@plt+0x4e88>
   15cd0:	bl	10d84 <__errno_location@plt>
   15cd4:	mov	r3, #12
   15cd8:	str	r3, [r0]
   15cdc:	mov	r0, #0
   15ce0:	pop	{r4, r5, r6, pc}
   15ce4:	mul	r1, r5, r4
   15ce8:	mov	r0, r6
   15cec:	bl	15948 <__lxstat64@plt+0x4aec>
   15cf0:	pop	{r4, r5, r6, pc}
   15cf4:	push	{lr}		; (str lr, [sp, #-4]!)
   15cf8:	sub	sp, sp, #268	; 0x10c
   15cfc:	ldr	r2, [pc, #68]	; 15d48 <__lxstat64@plt+0x4eec>
   15d00:	add	r1, sp, #4
   15d04:	bl	15d54 <__lxstat64@plt+0x4ef8>
   15d08:	cmp	r0, #0
   15d0c:	movne	r0, #0
   15d10:	bne	15d40 <__lxstat64@plt+0x4ee4>
   15d14:	ldr	r1, [pc, #48]	; 15d4c <__lxstat64@plt+0x4ef0>
   15d18:	add	r0, sp, #4
   15d1c:	bl	10c28 <strcmp@plt>
   15d20:	cmp	r0, #0
   15d24:	moveq	r0, #0
   15d28:	beq	15d40 <__lxstat64@plt+0x4ee4>
   15d2c:	ldr	r1, [pc, #28]	; 15d50 <__lxstat64@plt+0x4ef4>
   15d30:	add	r0, sp, #4
   15d34:	bl	10c28 <strcmp@plt>
   15d38:	adds	r0, r0, #0
   15d3c:	movne	r0, #1
   15d40:	add	sp, sp, #268	; 0x10c
   15d44:	pop	{pc}		; (ldr pc, [sp], #4)
   15d48:	andeq	r0, r0, r1, lsl #2
   15d4c:	ldrdeq	r7, [r1], -ip
   15d50:	andeq	r7, r1, r0, ror #17
   15d54:	push	{r4, r5, r6, lr}
   15d58:	mov	r6, r1
   15d5c:	mov	r4, r2
   15d60:	mov	r1, #0
   15d64:	bl	10df0 <setlocale@plt>
   15d68:	subs	r5, r0, #0
   15d6c:	beq	15d90 <__lxstat64@plt+0x4f34>
   15d70:	mov	r0, r5
   15d74:	bl	10d78 <strlen@plt>
   15d78:	cmp	r4, r0
   15d7c:	bhi	15da8 <__lxstat64@plt+0x4f4c>
   15d80:	cmp	r4, #0
   15d84:	bne	15dc0 <__lxstat64@plt+0x4f64>
   15d88:	mov	r0, #34	; 0x22
   15d8c:	pop	{r4, r5, r6, pc}
   15d90:	cmp	r4, #0
   15d94:	beq	15de4 <__lxstat64@plt+0x4f88>
   15d98:	mov	r3, #0
   15d9c:	strb	r3, [r6]
   15da0:	mov	r0, #22
   15da4:	pop	{r4, r5, r6, pc}
   15da8:	add	r2, r0, #1
   15dac:	mov	r1, r5
   15db0:	mov	r0, r6
   15db4:	bl	10c64 <memcpy@plt>
   15db8:	mov	r0, #0
   15dbc:	pop	{r4, r5, r6, pc}
   15dc0:	sub	r4, r4, #1
   15dc4:	mov	r2, r4
   15dc8:	mov	r1, r5
   15dcc:	mov	r0, r6
   15dd0:	bl	10c64 <memcpy@plt>
   15dd4:	mov	r3, #0
   15dd8:	strb	r3, [r6, r4]
   15ddc:	mov	r0, #34	; 0x22
   15de0:	pop	{r4, r5, r6, pc}
   15de4:	mov	r0, #22
   15de8:	pop	{r4, r5, r6, pc}
   15dec:	push	{r4, lr}
   15df0:	mov	r1, #0
   15df4:	bl	10df0 <setlocale@plt>
   15df8:	pop	{r4, pc}
   15dfc:	subs	r2, r1, #1
   15e00:	bxeq	lr
   15e04:	bcc	15fdc <__lxstat64@plt+0x5180>
   15e08:	cmp	r0, r1
   15e0c:	bls	15fc0 <__lxstat64@plt+0x5164>
   15e10:	tst	r1, r2
   15e14:	beq	15fcc <__lxstat64@plt+0x5170>
   15e18:	clz	r3, r0
   15e1c:	clz	r2, r1
   15e20:	sub	r3, r2, r3
   15e24:	rsbs	r3, r3, #31
   15e28:	addne	r3, r3, r3, lsl #1
   15e2c:	mov	r2, #0
   15e30:	addne	pc, pc, r3, lsl #2
   15e34:	nop			; (mov r0, r0)
   15e38:	cmp	r0, r1, lsl #31
   15e3c:	adc	r2, r2, r2
   15e40:	subcs	r0, r0, r1, lsl #31
   15e44:	cmp	r0, r1, lsl #30
   15e48:	adc	r2, r2, r2
   15e4c:	subcs	r0, r0, r1, lsl #30
   15e50:	cmp	r0, r1, lsl #29
   15e54:	adc	r2, r2, r2
   15e58:	subcs	r0, r0, r1, lsl #29
   15e5c:	cmp	r0, r1, lsl #28
   15e60:	adc	r2, r2, r2
   15e64:	subcs	r0, r0, r1, lsl #28
   15e68:	cmp	r0, r1, lsl #27
   15e6c:	adc	r2, r2, r2
   15e70:	subcs	r0, r0, r1, lsl #27
   15e74:	cmp	r0, r1, lsl #26
   15e78:	adc	r2, r2, r2
   15e7c:	subcs	r0, r0, r1, lsl #26
   15e80:	cmp	r0, r1, lsl #25
   15e84:	adc	r2, r2, r2
   15e88:	subcs	r0, r0, r1, lsl #25
   15e8c:	cmp	r0, r1, lsl #24
   15e90:	adc	r2, r2, r2
   15e94:	subcs	r0, r0, r1, lsl #24
   15e98:	cmp	r0, r1, lsl #23
   15e9c:	adc	r2, r2, r2
   15ea0:	subcs	r0, r0, r1, lsl #23
   15ea4:	cmp	r0, r1, lsl #22
   15ea8:	adc	r2, r2, r2
   15eac:	subcs	r0, r0, r1, lsl #22
   15eb0:	cmp	r0, r1, lsl #21
   15eb4:	adc	r2, r2, r2
   15eb8:	subcs	r0, r0, r1, lsl #21
   15ebc:	cmp	r0, r1, lsl #20
   15ec0:	adc	r2, r2, r2
   15ec4:	subcs	r0, r0, r1, lsl #20
   15ec8:	cmp	r0, r1, lsl #19
   15ecc:	adc	r2, r2, r2
   15ed0:	subcs	r0, r0, r1, lsl #19
   15ed4:	cmp	r0, r1, lsl #18
   15ed8:	adc	r2, r2, r2
   15edc:	subcs	r0, r0, r1, lsl #18
   15ee0:	cmp	r0, r1, lsl #17
   15ee4:	adc	r2, r2, r2
   15ee8:	subcs	r0, r0, r1, lsl #17
   15eec:	cmp	r0, r1, lsl #16
   15ef0:	adc	r2, r2, r2
   15ef4:	subcs	r0, r0, r1, lsl #16
   15ef8:	cmp	r0, r1, lsl #15
   15efc:	adc	r2, r2, r2
   15f00:	subcs	r0, r0, r1, lsl #15
   15f04:	cmp	r0, r1, lsl #14
   15f08:	adc	r2, r2, r2
   15f0c:	subcs	r0, r0, r1, lsl #14
   15f10:	cmp	r0, r1, lsl #13
   15f14:	adc	r2, r2, r2
   15f18:	subcs	r0, r0, r1, lsl #13
   15f1c:	cmp	r0, r1, lsl #12
   15f20:	adc	r2, r2, r2
   15f24:	subcs	r0, r0, r1, lsl #12
   15f28:	cmp	r0, r1, lsl #11
   15f2c:	adc	r2, r2, r2
   15f30:	subcs	r0, r0, r1, lsl #11
   15f34:	cmp	r0, r1, lsl #10
   15f38:	adc	r2, r2, r2
   15f3c:	subcs	r0, r0, r1, lsl #10
   15f40:	cmp	r0, r1, lsl #9
   15f44:	adc	r2, r2, r2
   15f48:	subcs	r0, r0, r1, lsl #9
   15f4c:	cmp	r0, r1, lsl #8
   15f50:	adc	r2, r2, r2
   15f54:	subcs	r0, r0, r1, lsl #8
   15f58:	cmp	r0, r1, lsl #7
   15f5c:	adc	r2, r2, r2
   15f60:	subcs	r0, r0, r1, lsl #7
   15f64:	cmp	r0, r1, lsl #6
   15f68:	adc	r2, r2, r2
   15f6c:	subcs	r0, r0, r1, lsl #6
   15f70:	cmp	r0, r1, lsl #5
   15f74:	adc	r2, r2, r2
   15f78:	subcs	r0, r0, r1, lsl #5
   15f7c:	cmp	r0, r1, lsl #4
   15f80:	adc	r2, r2, r2
   15f84:	subcs	r0, r0, r1, lsl #4
   15f88:	cmp	r0, r1, lsl #3
   15f8c:	adc	r2, r2, r2
   15f90:	subcs	r0, r0, r1, lsl #3
   15f94:	cmp	r0, r1, lsl #2
   15f98:	adc	r2, r2, r2
   15f9c:	subcs	r0, r0, r1, lsl #2
   15fa0:	cmp	r0, r1, lsl #1
   15fa4:	adc	r2, r2, r2
   15fa8:	subcs	r0, r0, r1, lsl #1
   15fac:	cmp	r0, r1
   15fb0:	adc	r2, r2, r2
   15fb4:	subcs	r0, r0, r1
   15fb8:	mov	r0, r2
   15fbc:	bx	lr
   15fc0:	moveq	r0, #1
   15fc4:	movne	r0, #0
   15fc8:	bx	lr
   15fcc:	clz	r2, r1
   15fd0:	rsb	r2, r2, #31
   15fd4:	lsr	r0, r0, r2
   15fd8:	bx	lr
   15fdc:	cmp	r0, #0
   15fe0:	mvnne	r0, #0
   15fe4:	b	16284 <__lxstat64@plt+0x5428>
   15fe8:	cmp	r1, #0
   15fec:	beq	15fdc <__lxstat64@plt+0x5180>
   15ff0:	push	{r0, r1, lr}
   15ff4:	bl	15dfc <__lxstat64@plt+0x4fa0>
   15ff8:	pop	{r1, r2, lr}
   15ffc:	mul	r3, r2, r0
   16000:	sub	r1, r1, r3
   16004:	bx	lr
   16008:	cmp	r1, #0
   1600c:	beq	16218 <__lxstat64@plt+0x53bc>
   16010:	eor	ip, r0, r1
   16014:	rsbmi	r1, r1, #0
   16018:	subs	r2, r1, #1
   1601c:	beq	161e4 <__lxstat64@plt+0x5388>
   16020:	movs	r3, r0
   16024:	rsbmi	r3, r0, #0
   16028:	cmp	r3, r1
   1602c:	bls	161f0 <__lxstat64@plt+0x5394>
   16030:	tst	r1, r2
   16034:	beq	16200 <__lxstat64@plt+0x53a4>
   16038:	clz	r2, r3
   1603c:	clz	r0, r1
   16040:	sub	r2, r0, r2
   16044:	rsbs	r2, r2, #31
   16048:	addne	r2, r2, r2, lsl #1
   1604c:	mov	r0, #0
   16050:	addne	pc, pc, r2, lsl #2
   16054:	nop			; (mov r0, r0)
   16058:	cmp	r3, r1, lsl #31
   1605c:	adc	r0, r0, r0
   16060:	subcs	r3, r3, r1, lsl #31
   16064:	cmp	r3, r1, lsl #30
   16068:	adc	r0, r0, r0
   1606c:	subcs	r3, r3, r1, lsl #30
   16070:	cmp	r3, r1, lsl #29
   16074:	adc	r0, r0, r0
   16078:	subcs	r3, r3, r1, lsl #29
   1607c:	cmp	r3, r1, lsl #28
   16080:	adc	r0, r0, r0
   16084:	subcs	r3, r3, r1, lsl #28
   16088:	cmp	r3, r1, lsl #27
   1608c:	adc	r0, r0, r0
   16090:	subcs	r3, r3, r1, lsl #27
   16094:	cmp	r3, r1, lsl #26
   16098:	adc	r0, r0, r0
   1609c:	subcs	r3, r3, r1, lsl #26
   160a0:	cmp	r3, r1, lsl #25
   160a4:	adc	r0, r0, r0
   160a8:	subcs	r3, r3, r1, lsl #25
   160ac:	cmp	r3, r1, lsl #24
   160b0:	adc	r0, r0, r0
   160b4:	subcs	r3, r3, r1, lsl #24
   160b8:	cmp	r3, r1, lsl #23
   160bc:	adc	r0, r0, r0
   160c0:	subcs	r3, r3, r1, lsl #23
   160c4:	cmp	r3, r1, lsl #22
   160c8:	adc	r0, r0, r0
   160cc:	subcs	r3, r3, r1, lsl #22
   160d0:	cmp	r3, r1, lsl #21
   160d4:	adc	r0, r0, r0
   160d8:	subcs	r3, r3, r1, lsl #21
   160dc:	cmp	r3, r1, lsl #20
   160e0:	adc	r0, r0, r0
   160e4:	subcs	r3, r3, r1, lsl #20
   160e8:	cmp	r3, r1, lsl #19
   160ec:	adc	r0, r0, r0
   160f0:	subcs	r3, r3, r1, lsl #19
   160f4:	cmp	r3, r1, lsl #18
   160f8:	adc	r0, r0, r0
   160fc:	subcs	r3, r3, r1, lsl #18
   16100:	cmp	r3, r1, lsl #17
   16104:	adc	r0, r0, r0
   16108:	subcs	r3, r3, r1, lsl #17
   1610c:	cmp	r3, r1, lsl #16
   16110:	adc	r0, r0, r0
   16114:	subcs	r3, r3, r1, lsl #16
   16118:	cmp	r3, r1, lsl #15
   1611c:	adc	r0, r0, r0
   16120:	subcs	r3, r3, r1, lsl #15
   16124:	cmp	r3, r1, lsl #14
   16128:	adc	r0, r0, r0
   1612c:	subcs	r3, r3, r1, lsl #14
   16130:	cmp	r3, r1, lsl #13
   16134:	adc	r0, r0, r0
   16138:	subcs	r3, r3, r1, lsl #13
   1613c:	cmp	r3, r1, lsl #12
   16140:	adc	r0, r0, r0
   16144:	subcs	r3, r3, r1, lsl #12
   16148:	cmp	r3, r1, lsl #11
   1614c:	adc	r0, r0, r0
   16150:	subcs	r3, r3, r1, lsl #11
   16154:	cmp	r3, r1, lsl #10
   16158:	adc	r0, r0, r0
   1615c:	subcs	r3, r3, r1, lsl #10
   16160:	cmp	r3, r1, lsl #9
   16164:	adc	r0, r0, r0
   16168:	subcs	r3, r3, r1, lsl #9
   1616c:	cmp	r3, r1, lsl #8
   16170:	adc	r0, r0, r0
   16174:	subcs	r3, r3, r1, lsl #8
   16178:	cmp	r3, r1, lsl #7
   1617c:	adc	r0, r0, r0
   16180:	subcs	r3, r3, r1, lsl #7
   16184:	cmp	r3, r1, lsl #6
   16188:	adc	r0, r0, r0
   1618c:	subcs	r3, r3, r1, lsl #6
   16190:	cmp	r3, r1, lsl #5
   16194:	adc	r0, r0, r0
   16198:	subcs	r3, r3, r1, lsl #5
   1619c:	cmp	r3, r1, lsl #4
   161a0:	adc	r0, r0, r0
   161a4:	subcs	r3, r3, r1, lsl #4
   161a8:	cmp	r3, r1, lsl #3
   161ac:	adc	r0, r0, r0
   161b0:	subcs	r3, r3, r1, lsl #3
   161b4:	cmp	r3, r1, lsl #2
   161b8:	adc	r0, r0, r0
   161bc:	subcs	r3, r3, r1, lsl #2
   161c0:	cmp	r3, r1, lsl #1
   161c4:	adc	r0, r0, r0
   161c8:	subcs	r3, r3, r1, lsl #1
   161cc:	cmp	r3, r1
   161d0:	adc	r0, r0, r0
   161d4:	subcs	r3, r3, r1
   161d8:	cmp	ip, #0
   161dc:	rsbmi	r0, r0, #0
   161e0:	bx	lr
   161e4:	teq	ip, r0
   161e8:	rsbmi	r0, r0, #0
   161ec:	bx	lr
   161f0:	movcc	r0, #0
   161f4:	asreq	r0, ip, #31
   161f8:	orreq	r0, r0, #1
   161fc:	bx	lr
   16200:	clz	r2, r1
   16204:	rsb	r2, r2, #31
   16208:	cmp	ip, #0
   1620c:	lsr	r0, r3, r2
   16210:	rsbmi	r0, r0, #0
   16214:	bx	lr
   16218:	cmp	r0, #0
   1621c:	mvngt	r0, #-2147483648	; 0x80000000
   16220:	movlt	r0, #-2147483648	; 0x80000000
   16224:	b	16284 <__lxstat64@plt+0x5428>
   16228:	cmp	r1, #0
   1622c:	beq	16218 <__lxstat64@plt+0x53bc>
   16230:	push	{r0, r1, lr}
   16234:	bl	16010 <__lxstat64@plt+0x51b4>
   16238:	pop	{r1, r2, lr}
   1623c:	mul	r3, r2, r0
   16240:	sub	r1, r1, r3
   16244:	bx	lr
   16248:	cmp	r3, #0
   1624c:	cmpeq	r2, #0
   16250:	bne	16268 <__lxstat64@plt+0x540c>
   16254:	cmp	r1, #0
   16258:	cmpeq	r0, #0
   1625c:	mvnne	r1, #0
   16260:	mvnne	r0, #0
   16264:	b	16284 <__lxstat64@plt+0x5428>
   16268:	sub	sp, sp, #8
   1626c:	push	{sp, lr}
   16270:	bl	16294 <__lxstat64@plt+0x5438>
   16274:	ldr	lr, [sp, #4]
   16278:	add	sp, sp, #8
   1627c:	pop	{r2, r3}
   16280:	bx	lr
   16284:	push	{r1, lr}
   16288:	mov	r0, #8
   1628c:	bl	10c1c <raise@plt>
   16290:	pop	{r1, pc}
   16294:	cmp	r1, r3
   16298:	push	{r4, r5, r6, r7, r8, r9, lr}
   1629c:	cmpeq	r0, r2
   162a0:	mov	r4, r0
   162a4:	mov	r5, r1
   162a8:	ldr	r9, [sp, #28]
   162ac:	movcc	r0, #0
   162b0:	movcc	r1, #0
   162b4:	bcc	163ac <__lxstat64@plt+0x5550>
   162b8:	cmp	r3, #0
   162bc:	clzeq	ip, r2
   162c0:	clzne	ip, r3
   162c4:	addeq	ip, ip, #32
   162c8:	cmp	r5, #0
   162cc:	clzeq	r1, r4
   162d0:	addeq	r1, r1, #32
   162d4:	clzne	r1, r5
   162d8:	sub	ip, ip, r1
   162dc:	sub	lr, ip, #32
   162e0:	lsl	r7, r3, ip
   162e4:	rsb	r8, ip, #32
   162e8:	orr	r7, r7, r2, lsl lr
   162ec:	orr	r7, r7, r2, lsr r8
   162f0:	lsl	r6, r2, ip
   162f4:	cmp	r5, r7
   162f8:	cmpeq	r4, r6
   162fc:	movcc	r0, #0
   16300:	movcc	r1, #0
   16304:	bcc	16320 <__lxstat64@plt+0x54c4>
   16308:	mov	r3, #1
   1630c:	subs	r4, r4, r6
   16310:	lsl	r1, r3, lr
   16314:	lsl	r0, r3, ip
   16318:	orr	r1, r1, r3, lsr r8
   1631c:	sbc	r5, r5, r7
   16320:	cmp	ip, #0
   16324:	beq	163ac <__lxstat64@plt+0x5550>
   16328:	lsrs	r3, r7, #1
   1632c:	rrx	r2, r6
   16330:	mov	r6, ip
   16334:	b	16358 <__lxstat64@plt+0x54fc>
   16338:	subs	r4, r4, r2
   1633c:	sbc	r5, r5, r3
   16340:	adds	r4, r4, r4
   16344:	adc	r5, r5, r5
   16348:	adds	r4, r4, #1
   1634c:	adc	r5, r5, #0
   16350:	subs	r6, r6, #1
   16354:	beq	16374 <__lxstat64@plt+0x5518>
   16358:	cmp	r5, r3
   1635c:	cmpeq	r4, r2
   16360:	bcs	16338 <__lxstat64@plt+0x54dc>
   16364:	adds	r4, r4, r4
   16368:	adc	r5, r5, r5
   1636c:	subs	r6, r6, #1
   16370:	bne	16358 <__lxstat64@plt+0x54fc>
   16374:	lsr	r6, r4, ip
   16378:	lsr	r7, r5, ip
   1637c:	orr	r6, r6, r5, lsl r8
   16380:	adds	r2, r0, r4
   16384:	orr	r6, r6, r5, lsr lr
   16388:	adc	r3, r1, r5
   1638c:	lsl	r1, r7, ip
   16390:	orr	r1, r1, r6, lsl lr
   16394:	lsl	r0, r6, ip
   16398:	orr	r1, r1, r6, lsr r8
   1639c:	subs	r0, r2, r0
   163a0:	mov	r4, r6
   163a4:	mov	r5, r7
   163a8:	sbc	r1, r3, r1
   163ac:	cmp	r9, #0
   163b0:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   163b4:	strd	r4, [r9]
   163b8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   163bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   163c0:	mov	r7, r0
   163c4:	ldr	r6, [pc, #72]	; 16414 <__lxstat64@plt+0x55b8>
   163c8:	ldr	r5, [pc, #72]	; 16418 <__lxstat64@plt+0x55bc>
   163cc:	add	r6, pc, r6
   163d0:	add	r5, pc, r5
   163d4:	sub	r6, r6, r5
   163d8:	mov	r8, r1
   163dc:	mov	r9, r2
   163e0:	bl	10be4 <calloc@plt-0x20>
   163e4:	asrs	r6, r6, #2
   163e8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   163ec:	mov	r4, #0
   163f0:	add	r4, r4, #1
   163f4:	ldr	r3, [r5], #4
   163f8:	mov	r2, r9
   163fc:	mov	r1, r8
   16400:	mov	r0, r7
   16404:	blx	r3
   16408:	cmp	r6, r4
   1640c:	bne	163f0 <__lxstat64@plt+0x5594>
   16410:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16414:	andeq	r1, r1, ip, lsr fp
   16418:	andeq	r1, r1, r4, lsr fp
   1641c:	bx	lr
   16420:	ldr	r3, [pc, #12]	; 16434 <__lxstat64@plt+0x55d8>
   16424:	mov	r1, #0
   16428:	add	r3, pc, r3
   1642c:	ldr	r2, [r3]
   16430:	b	10d90 <__cxa_atexit@plt>
   16434:			; <UNDEFINED> instruction: 0x00011cb0

Disassembly of section .fini:

00016438 <.fini>:
   16438:	push	{r3, lr}
   1643c:	pop	{r3, pc}
