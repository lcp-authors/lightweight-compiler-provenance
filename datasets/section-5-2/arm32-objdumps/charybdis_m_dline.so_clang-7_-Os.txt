
../repos/charybdis/modules/.libs/m_dline.so:     file format elf32-littlearm


Disassembly of section .init:

00000b18 <_init>:
 b18:	push	{r3, lr}
 b1c:	bl	cdc <call_weak_fn>
 b20:	pop	{r3, pc}

Disassembly of section .plt:

00000b24 <.plt>:
 b24:	push	{lr}		; (str lr, [sp, #-4]!)
 b28:	ldr	lr, [pc, #4]	; b34 <.plt+0x10>
 b2c:	add	lr, pc, lr
 b30:	ldr	pc, [lr, #8]!
 b34:	.word	0x000114cc

00000b38 <make_conf@plt>:
 b38:	add	ip, pc, #0, 12
 b3c:	add	ip, ip, #69632	; 0x11000
 b40:	ldr	pc, [ip, #1228]!	; 0x4cc

00000b44 <parse_netmask_strict@plt>:
 b44:	add	ip, pc, #0, 12
 b48:	add	ip, ip, #69632	; 0x11000
 b4c:	ldr	pc, [ip, #1220]!	; 0x4c4

00000b50 <rb_current_time@plt>:
 b50:	add	ip, pc, #0, 12
 b54:	add	ip, ip, #69632	; 0x11000
 b58:	ldr	pc, [ip, #1212]!	; 0x4bc

00000b5c <sendto_match_servs@plt>:
 b5c:	add	ip, pc, #0, 12
 b60:	add	ip, ip, #69632	; 0x11000
 b64:	ldr	pc, [ip, #1204]!	; 0x4b4

00000b68 <__cxa_finalize@plt>:
 b68:	add	ip, pc, #0, 12
 b6c:	add	ip, ip, #69632	; 0x11000
 b70:	ldr	pc, [ip, #1196]!	; 0x4ac

00000b74 <sendto_one@plt>:
 b74:	add	ip, pc, #0, 12
 b78:	add	ip, ip, #69632	; 0x11000
 b7c:	ldr	pc, [ip, #1188]!	; 0x4a4

00000b80 <rb_outofmemory@plt>:
 b80:	add	ip, pc, #0, 12
 b84:	add	ip, ip, #69632	; 0x11000
 b88:	ldr	pc, [ip, #1180]!	; 0x49c

00000b8c <parse_netmask@plt>:
 b8c:	add	ip, pc, #0, 12
 b90:	add	ip, ip, #69632	; 0x11000
 b94:	ldr	pc, [ip, #1172]!	; 0x494

00000b98 <sendto_realops_snomask@plt>:
 b98:	add	ip, pc, #0, 12
 b9c:	add	ip, ip, #69632	; 0x11000
 ba0:	ldr	pc, [ip, #1164]!	; 0x48c

00000ba4 <bandb_add@plt>:
 ba4:	add	ip, pc, #0, 12
 ba8:	add	ip, ip, #69632	; 0x11000
 bac:	ldr	pc, [ip, #1156]!	; 0x484

00000bb0 <get_oper_name@plt>:
 bb0:	add	ip, pc, #0, 12
 bb4:	add	ip, ip, #69632	; 0x11000
 bb8:	ldr	pc, [ip, #1148]!	; 0x47c

00000bbc <rb_free_rb_dlink_node@plt>:
 bbc:	add	ip, pc, #0, 12
 bc0:	add	ip, ip, #69632	; 0x11000
 bc4:	ldr	pc, [ip, #1140]!	; 0x474

00000bc8 <operhash_add@plt>:
 bc8:	add	ip, pc, #0, 12
 bcc:	add	ip, ip, #69632	; 0x11000
 bd0:	ldr	pc, [ip, #1132]!	; 0x46c

00000bd4 <strcpy@plt>:
 bd4:	add	ip, pc, #0, 12
 bd8:	add	ip, ip, #69632	; 0x11000
 bdc:	ldr	pc, [ip, #1124]!	; 0x464

00000be0 <add_temp_dline@plt>:
 be0:	add	ip, pc, #0, 12
 be4:	add	ip, ip, #69632	; 0x11000
 be8:	ldr	pc, [ip, #1116]!	; 0x45c

00000bec <rb_set_time@plt>:
 bec:	add	ip, pc, #0, 12
 bf0:	add	ip, ip, #69632	; 0x11000
 bf4:	ldr	pc, [ip, #1108]!	; 0x454

00000bf8 <malloc@plt>:
 bf8:	add	ip, pc, #0, 12
 bfc:	add	ip, ip, #69632	; 0x11000
 c00:	ldr	pc, [ip, #1100]!	; 0x44c

00000c04 <add_conf_by_address@plt>:
 c04:	add	ip, pc, #0, 12
 c08:	add	ip, ip, #69632	; 0x11000
 c0c:	ldr	pc, [ip, #1092]!	; 0x444

00000c10 <__gmon_start__@plt>:
 c10:	add	ip, pc, #0, 12
 c14:	add	ip, ip, #69632	; 0x11000
 c18:	ldr	pc, [ip, #1084]!	; 0x43c

00000c1c <strlen@plt>:
 c1c:	add	ip, pc, #0, 12
 c20:	add	ip, ip, #69632	; 0x11000
 c24:	ldr	pc, [ip, #1076]!	; 0x434

00000c28 <strchr@plt>:
 c28:	add	ip, pc, #0, 12
 c2c:	add	ip, ip, #69632	; 0x11000
 c30:	ldr	pc, [ip, #1068]!	; 0x42c

00000c34 <delete_one_address_conf@plt>:
 c34:	add	ip, pc, #0, 12
 c38:	add	ip, ip, #69632	; 0x11000
 c3c:	ldr	pc, [ip, #1060]!	; 0x424

00000c40 <ilog@plt>:
 c40:	add	ip, pc, #0, 12
 c44:	add	ip, ip, #69632	; 0x11000
 c48:	ldr	pc, [ip, #1052]!	; 0x41c

00000c4c <match@plt>:
 c4c:	add	ip, pc, #0, 12
 c50:	add	ip, ip, #69632	; 0x11000
 c54:	ldr	pc, [ip, #1044]!	; 0x414

00000c58 <valid_temp_time@plt>:
 c58:	add	ip, pc, #0, 12
 c5c:	add	ip, ip, #69632	; 0x11000
 c60:	ldr	pc, [ip, #1036]!	; 0x40c

00000c64 <check_dlines@plt>:
 c64:	add	ip, pc, #0, 12
 c68:	add	ip, ip, #69632	; 0x11000
 c6c:	ldr	pc, [ip, #1028]!	; 0x404

00000c70 <sendto_one_notice@plt>:
 c70:	add	ip, pc, #0, 12
 c74:	add	ip, ip, #69632	; 0x11000
 c78:	ldr	pc, [ip, #1020]!	; 0x3fc

00000c7c <bandb_del@plt>:
 c7c:	add	ip, pc, #0, 12
 c80:	add	ip, ip, #69632	; 0x11000
 c84:	ldr	pc, [ip, #1012]!	; 0x3f4

00000c88 <atoi@plt>:
 c88:	add	ip, pc, #0, 12
 c8c:	add	ip, ip, #69632	; 0x11000
 c90:	ldr	pc, [ip, #1004]!	; 0x3ec

00000c94 <find_exact_conf_by_address@plt>:
 c94:	add	ip, pc, #0, 12
 c98:	add	ip, ip, #69632	; 0x11000
 c9c:	ldr	pc, [ip, #996]!	; 0x3e4

00000ca0 <rb_strlcpy@plt>:
 ca0:	add	ip, pc, #0, 12
 ca4:	add	ip, ip, #69632	; 0x11000
 ca8:	ldr	pc, [ip, #988]!	; 0x3dc

00000cac <find_shared_conf@plt>:
 cac:	add	ip, pc, #0, 12
 cb0:	add	ip, ip, #69632	; 0x11000
 cb4:	ldr	pc, [ip, #980]!	; 0x3d4

00000cb8 <privilegeset_in_set@plt>:
 cb8:	add	ip, pc, #0, 12
 cbc:	add	ip, ip, #69632	; 0x11000
 cc0:	ldr	pc, [ip, #972]!	; 0x3cc

00000cc4 <irccmp@plt>:
 cc4:	add	ip, pc, #0, 12
 cc8:	add	ip, ip, #69632	; 0x11000
 ccc:	ldr	pc, [ip, #964]!	; 0x3c4

00000cd0 <find_dline@plt>:
 cd0:	add	ip, pc, #0, 12
 cd4:	add	ip, ip, #69632	; 0x11000
 cd8:	ldr	pc, [ip, #956]!	; 0x3bc

Disassembly of section .text:

00000cdc <call_weak_fn>:
     cdc:	ldr	r3, [pc, #20]	; cf8 <call_weak_fn+0x1c>
     ce0:	ldr	r2, [pc, #20]	; cfc <call_weak_fn+0x20>
     ce4:	add	r3, pc, r3
     ce8:	ldr	r2, [r3, r2]
     cec:	cmp	r2, #0
     cf0:	bxeq	lr
     cf4:	b	c10 <__gmon_start__@plt>
     cf8:	.word	0x00011314
     cfc:	.word	0x000000a0

00000d00 <deregister_tm_clones>:
     d00:	ldr	r0, [pc, #44]	; d34 <deregister_tm_clones+0x34>
     d04:	ldr	r3, [pc, #44]	; d38 <deregister_tm_clones+0x38>
     d08:	add	r0, pc, r0
     d0c:	add	r3, pc, r3
     d10:	cmp	r3, r0
     d14:	ldr	r3, [pc, #32]	; d3c <deregister_tm_clones+0x3c>
     d18:	add	r3, pc, r3
     d1c:	bxeq	lr
     d20:	ldr	r2, [pc, #24]	; d40 <deregister_tm_clones+0x40>
     d24:	ldr	r3, [r3, r2]
     d28:	cmp	r3, #0
     d2c:	bxeq	lr
     d30:	bx	r3
     d34:	.word	0x00011468
     d38:	.word	0x00011464
     d3c:	.word	0x000112e0
     d40:	.word	0x0000009c

00000d44 <register_tm_clones>:
     d44:	ldr	r0, [pc, #56]	; d84 <register_tm_clones+0x40>
     d48:	ldr	r3, [pc, #56]	; d88 <register_tm_clones+0x44>
     d4c:	add	r0, pc, r0
     d50:	add	r3, pc, r3
     d54:	sub	r1, r3, r0
     d58:	ldr	r3, [pc, #44]	; d8c <register_tm_clones+0x48>
     d5c:	asr	r1, r1, #2
     d60:	add	r3, pc, r3
     d64:	add	r1, r1, r1, lsr #31
     d68:	asrs	r1, r1, #1
     d6c:	bxeq	lr
     d70:	ldr	r2, [pc, #24]	; d90 <register_tm_clones+0x4c>
     d74:	ldr	r3, [r3, r2]
     d78:	cmp	r3, #0
     d7c:	bxeq	lr
     d80:	bx	r3
     d84:	.word	0x00011424
     d88:	.word	0x00011420
     d8c:	.word	0x00011298
     d90:	.word	0x000000a8

00000d94 <__do_global_dtors_aux>:
     d94:	ldr	r3, [pc, #76]	; de8 <__do_global_dtors_aux+0x54>
     d98:	ldr	r2, [pc, #76]	; dec <__do_global_dtors_aux+0x58>
     d9c:	add	r3, pc, r3
     da0:	add	r2, pc, r2
     da4:	ldrb	r3, [r3]
     da8:	cmp	r3, #0
     dac:	bxne	lr
     db0:	ldr	r3, [pc, #56]	; df0 <__do_global_dtors_aux+0x5c>
     db4:	push	{r4, lr}
     db8:	ldr	r3, [r2, r3]
     dbc:	cmp	r3, #0
     dc0:	beq	dd0 <__do_global_dtors_aux+0x3c>
     dc4:	ldr	r3, [pc, #40]	; df4 <__do_global_dtors_aux+0x60>
     dc8:	ldr	r0, [pc, r3]
     dcc:	bl	b68 <__cxa_finalize@plt>
     dd0:	bl	d00 <deregister_tm_clones>
     dd4:	ldr	r3, [pc, #28]	; df8 <__do_global_dtors_aux+0x64>
     dd8:	mov	r2, #1
     ddc:	add	r3, pc, r3
     de0:	strb	r2, [r3]
     de4:	pop	{r4, pc}
     de8:	.word	0x000113d4
     dec:	.word	0x00011258
     df0:	.word	0x00000098
     df4:	.word	0x000112e8
     df8:	.word	0x00011394

00000dfc <frame_dummy>:
     dfc:	b	d44 <register_tm_clones>

00000e00 <me_dline>:
     e00:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
     e04:	add	fp, sp, #24
     e08:	ldr	r6, [fp, #8]
     e0c:	mov	r4, r2
     e10:	ldr	r0, [r6, #4]
     e14:	bl	c88 <atoi@plt>
     e18:	mov	r5, r0
     e1c:	ldrh	r0, [r4, #80]	; 0x50
     e20:	cmp	r0, #64	; 0x40
     e24:	bne	ea0 <me_dline+0xa0>
     e28:	ldr	r0, [r4, #24]
     e2c:	cmp	r0, #0
     e30:	beq	ea0 <me_dline+0xa0>
     e34:	ldr	r2, [r4, #32]
     e38:	mov	r3, #4096	; 0x1000
     e3c:	cmp	r5, #0
     e40:	add	r0, r4, #152	; 0x98
     e44:	add	r1, r4, #163	; 0xa3
     e48:	movwgt	r3, #2048	; 0x800
     e4c:	add	r2, r2, #88	; 0x58
     e50:	bl	cac <find_shared_conf@plt>
     e54:	cmp	r0, #0
     e58:	beq	ea0 <me_dline+0xa0>
     e5c:	ldr	r7, [r6, #12]
     e60:	ldr	r8, [r6, #8]
     e64:	mov	r0, r7
     e68:	bl	c1c <strlen@plt>
     e6c:	add	r0, r0, #8
     e70:	bic	r0, r0, #7
     e74:	sub	r6, sp, r0
     e78:	mov	sp, r6
     e7c:	mov	r0, r6
     e80:	mov	r1, r7
     e84:	bl	bd4 <strcpy@plt>
     e88:	mov	r0, r4
     e8c:	mov	r1, r8
     e90:	mov	r2, r5
     e94:	mov	r3, r6
     e98:	bl	12f0 <apply_dline>
     e9c:	bl	c64 <check_dlines@plt>
     ea0:	sub	sp, fp, #24
     ea4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00000ea8 <mo_dline>:
     ea8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     eac:	add	fp, sp, #28
     eb0:	sub	sp, sp, #92	; 0x5c
     eb4:	ldr	r0, [pc, #588]	; 1108 <mo_dline+0x260>
     eb8:	mov	r4, r2
     ebc:	add	r0, pc, r0
     ec0:	vldr	d16, [r0]
     ec4:	mov	r0, #110	; 0x6e
     ec8:	strh	r0, [fp, #-40]	; 0xffffffd8
     ecc:	vstr	d16, [fp, #-48]	; 0xffffffd0
     ed0:	ldr	r0, [r2, #24]
     ed4:	cmp	r0, #0
     ed8:	ldrne	r0, [r0, #36]	; 0x24
     edc:	cmpne	r0, #0
     ee0:	bne	f20 <mo_dline+0x78>
     ee4:	sub	sp, sp, #8
     ee8:	ldr	r0, [pc, #544]	; 1110 <mo_dline+0x268>
     eec:	add	r0, pc, r0
     ef0:	str	r0, [sp]
     ef4:	add	r3, r4, #88	; 0x58
     ef8:	ldr	r0, [pc, #532]	; 1114 <mo_dline+0x26c>
     efc:	ldr	r0, [pc, r0]
     f00:	ldr	r1, [pc, #528]	; 1118 <mo_dline+0x270>
     f04:	add	r2, r0, #88	; 0x58
     f08:	add	r1, pc, r1
     f0c:	mov	r0, r4
     f10:	bl	b74 <sendto_one@plt>
     f14:	add	sp, sp, #8
     f18:	sub	sp, fp, #28
     f1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     f20:	ldr	r1, [pc, #484]	; 110c <mo_dline+0x264>
     f24:	mov	r7, r3
     f28:	add	r1, pc, r1
     f2c:	bl	cb8 <privilegeset_in_set@plt>
     f30:	cmp	r0, #0
     f34:	beq	ee4 <mo_dline+0x3c>
     f38:	ldr	r9, [fp, #8]
     f3c:	ldr	r0, [r9, #4]
     f40:	bl	c58 <valid_temp_time@plt>
     f44:	mov	r6, #1
     f48:	cmn	r0, #1
     f4c:	mov	sl, r0
     f50:	sub	r0, fp, #112	; 0x70
     f54:	mov	r2, #64	; 0x40
     f58:	movwgt	r6, #2
     f5c:	ldr	r5, [r9, r6, lsl #2]
     f60:	mov	r1, r5
     f64:	bl	ca0 <rb_strlcpy@plt>
     f68:	ldrb	r0, [r5]
     f6c:	cmp	r0, #58	; 0x3a
     f70:	bne	f80 <mo_dline+0xd8>
     f74:	ldr	r1, [pc, #416]	; 111c <mo_dline+0x274>
     f78:	add	r1, pc, r1
     f7c:	b	102c <mo_dline+0x184>
     f80:	mov	r0, r5
     f84:	mov	r1, #0
     f88:	mov	r2, #0
     f8c:	bl	b44 <parse_netmask_strict@plt>
     f90:	orr	r0, r0, #1
     f94:	cmp	r0, #3
     f98:	bne	1024 <mo_dline+0x17c>
     f9c:	mov	r0, #0
     fa0:	add	r8, r6, #1
     fa4:	str	r0, [fp, #-116]	; 0xffffff8c
     fa8:	add	r0, r6, #3
     fac:	cmp	r0, r7
     fb0:	bgt	fd0 <mo_dline+0x128>
     fb4:	str	r0, [fp, #-120]	; 0xffffff88
     fb8:	ldr	r0, [r9, r8, lsl #2]
     fbc:	ldr	r1, [pc, #352]	; 1124 <mo_dline+0x27c>
     fc0:	add	r1, pc, r1
     fc4:	bl	cc4 <irccmp@plt>
     fc8:	cmp	r0, #0
     fcc:	beq	10bc <mo_dline+0x214>
     fd0:	sub	r1, fp, #48	; 0x30
     fd4:	cmp	r8, r7
     fd8:	bge	103c <mo_dline+0x194>
     fdc:	ldr	r8, [r9, r8, lsl #2]
     fe0:	cmp	r8, #0
     fe4:	beq	103c <mo_dline+0x194>
     fe8:	ldrb	r0, [r8]
     fec:	ldr	r6, [fp, #-116]	; 0xffffff8c
     ff0:	mov	r7, r1
     ff4:	cmp	r0, #0
     ff8:	beq	1044 <mo_dline+0x19c>
     ffc:	mov	r0, r8
    1000:	bl	c1c <strlen@plt>
    1004:	add	r0, r0, #8
    1008:	bic	r0, r0, #7
    100c:	sub	r7, sp, r0
    1010:	mov	sp, r7
    1014:	mov	r0, r7
    1018:	mov	r1, r8
    101c:	bl	bd4 <strcpy@plt>
    1020:	b	1044 <mo_dline+0x19c>
    1024:	ldr	r1, [pc, #244]	; 1120 <mo_dline+0x278>
    1028:	add	r1, pc, r1
    102c:	mov	r0, r4
    1030:	mov	r2, r5
    1034:	bl	c70 <sendto_one_notice@plt>
    1038:	b	f18 <mo_dline+0x70>
    103c:	ldr	r6, [fp, #-116]	; 0xffffff8c
    1040:	mov	r7, r1
    1044:	cmp	r6, #0
    1048:	beq	10a0 <mo_dline+0x1f8>
    104c:	ldr	r0, [pc, #220]	; 1130 <mo_dline+0x288>
    1050:	ldr	r0, [pc, r0]
    1054:	ldr	r2, [r0]
    1058:	sub	sp, sp, #24
    105c:	ldr	r0, [pc, #208]	; 1134 <mo_dline+0x28c>
    1060:	mov	r1, r6
    1064:	mov	r3, #0
    1068:	add	r0, pc, r0
    106c:	stm	sp, {r0, r6, sl}
    1070:	mov	r0, r4
    1074:	str	r5, [sp, #12]
    1078:	str	r7, [sp, #16]
    107c:	bl	b5c <sendto_match_servs@plt>
    1080:	add	sp, sp, #24
    1084:	ldr	r0, [pc, #172]	; 1138 <mo_dline+0x290>
    1088:	ldr	r0, [pc, r0]
    108c:	add	r1, r0, #88	; 0x58
    1090:	mov	r0, r6
    1094:	bl	c4c <match@plt>
    1098:	cmp	r0, #0
    109c:	beq	f18 <mo_dline+0x70>
    10a0:	mov	r0, r4
    10a4:	mov	r1, r5
    10a8:	mov	r2, sl
    10ac:	mov	r3, r7
    10b0:	bl	12f0 <apply_dline>
    10b4:	bl	c64 <check_dlines@plt>
    10b8:	b	f18 <mo_dline+0x70>
    10bc:	ldr	r0, [r4, #24]
    10c0:	cmp	r0, #0
    10c4:	ldrne	r0, [r0, #36]	; 0x24
    10c8:	cmpne	r0, #0
    10cc:	bne	10e0 <mo_dline+0x238>
    10d0:	sub	sp, sp, #8
    10d4:	ldr	r0, [pc, #80]	; 112c <mo_dline+0x284>
    10d8:	add	r0, pc, r0
    10dc:	b	ef0 <mo_dline+0x48>
    10e0:	ldr	r1, [pc, #64]	; 1128 <mo_dline+0x280>
    10e4:	add	r1, pc, r1
    10e8:	bl	cb8 <privilegeset_in_set@plt>
    10ec:	cmp	r0, #0
    10f0:	beq	10d0 <mo_dline+0x228>
    10f4:	add	r0, r9, r6, lsl #2
    10f8:	ldr	r8, [fp, #-120]	; 0xffffff88
    10fc:	ldr	r0, [r0, #8]
    1100:	str	r0, [fp, #-116]	; 0xffffff8c
    1104:	b	fd0 <mo_dline+0x128>
    1108:	.word	0x00000fbc
    110c:	.word	0x00000b48
    1110:	.word	0x00000b89
    1114:	.word	0x000111a8
    1118:	.word	0x00000b73
    111c:	.word	0x00000b2a
    1120:	.word	0x00000aa8
    1124:	.word	0x00000b43
    1128:	.word	0x00000a22
    112c:	.word	0x00000a33
    1130:	.word	0x00011058
    1134:	.word	0x00000aad
    1138:	.word	0x0001101c

0000113c <me_undline>:
    113c:	push	{r4, r5, fp, lr}
    1140:	add	fp, sp, #8
    1144:	ldrh	r0, [r2, #80]	; 0x50
    1148:	cmp	r0, #64	; 0x40
    114c:	bne	1194 <me_undline+0x58>
    1150:	ldr	r0, [r2, #24]
    1154:	mov	r4, r2
    1158:	cmp	r0, #0
    115c:	popeq	{r4, r5, fp, pc}
    1160:	ldr	r2, [r4, #32]
    1164:	ldr	r5, [fp, #8]
    1168:	add	r0, r4, #152	; 0x98
    116c:	add	r1, r4, #163	; 0xa3
    1170:	mov	r3, #8192	; 0x2000
    1174:	add	r2, r2, #88	; 0x58
    1178:	bl	cac <find_shared_conf@plt>
    117c:	cmp	r0, #0
    1180:	beq	1194 <me_undline+0x58>
    1184:	ldr	r1, [r5, #4]
    1188:	mov	r0, r4
    118c:	pop	{r4, r5, fp, lr}
    1190:	b	181c <apply_undline>
    1194:	pop	{r4, r5, fp, pc}

00001198 <mo_undline>:
    1198:	push	{r4, r5, r6, r7, fp, lr}
    119c:	add	fp, sp, #16
    11a0:	sub	sp, sp, #16
    11a4:	ldr	r0, [r2, #24]
    11a8:	mov	r4, r2
    11ac:	cmp	r0, #0
    11b0:	ldrne	r0, [r0, #36]	; 0x24
    11b4:	cmpne	r0, #0
    11b8:	bne	11f0 <mo_undline+0x58>
    11bc:	ldr	r0, [pc, #264]	; 12cc <mo_undline+0x134>
    11c0:	add	r0, pc, r0
    11c4:	str	r0, [sp]
    11c8:	add	r3, r4, #88	; 0x58
    11cc:	ldr	r0, [pc, #252]	; 12d0 <mo_undline+0x138>
    11d0:	ldr	r0, [pc, r0]
    11d4:	ldr	r1, [pc, #248]	; 12d4 <mo_undline+0x13c>
    11d8:	add	r2, r0, #88	; 0x58
    11dc:	add	r1, pc, r1
    11e0:	mov	r0, r4
    11e4:	bl	b74 <sendto_one@plt>
    11e8:	sub	sp, fp, #16
    11ec:	pop	{r4, r5, r6, r7, fp, pc}
    11f0:	ldr	r7, [fp, #8]
    11f4:	ldr	r1, [pc, #204]	; 12c8 <mo_undline+0x130>
    11f8:	mov	r6, r3
    11fc:	add	r1, pc, r1
    1200:	bl	cb8 <privilegeset_in_set@plt>
    1204:	cmp	r0, #0
    1208:	beq	11bc <mo_undline+0x24>
    120c:	ldr	r5, [r7, #4]
    1210:	cmp	r6, #4
    1214:	blt	1230 <mo_undline+0x98>
    1218:	ldr	r0, [r7, #8]
    121c:	ldr	r1, [pc, #180]	; 12d8 <mo_undline+0x140>
    1220:	add	r1, pc, r1
    1224:	bl	cc4 <irccmp@plt>
    1228:	cmp	r0, #0
    122c:	beq	1244 <mo_undline+0xac>
    1230:	mov	r0, r4
    1234:	mov	r1, r5
    1238:	sub	sp, fp, #16
    123c:	pop	{r4, r5, r6, r7, fp, lr}
    1240:	b	181c <apply_undline>
    1244:	ldr	r0, [r4, #24]
    1248:	cmp	r0, #0
    124c:	ldrne	r0, [r0, #36]	; 0x24
    1250:	cmpne	r0, #0
    1254:	bne	1264 <mo_undline+0xcc>
    1258:	ldr	r0, [pc, #128]	; 12e0 <mo_undline+0x148>
    125c:	add	r0, pc, r0
    1260:	b	11c4 <mo_undline+0x2c>
    1264:	ldr	r1, [pc, #112]	; 12dc <mo_undline+0x144>
    1268:	add	r1, pc, r1
    126c:	bl	cb8 <privilegeset_in_set@plt>
    1270:	cmp	r0, #0
    1274:	beq	1258 <mo_undline+0xc0>
    1278:	ldr	r0, [pc, #100]	; 12e4 <mo_undline+0x14c>
    127c:	mov	r3, #0
    1280:	ldr	r0, [pc, r0]
    1284:	ldr	r6, [r7, #12]
    1288:	ldr	r2, [r0]
    128c:	ldr	r0, [pc, #84]	; 12e8 <mo_undline+0x150>
    1290:	mov	r1, r6
    1294:	add	r0, pc, r0
    1298:	stm	sp, {r0, r6}
    129c:	mov	r0, r4
    12a0:	str	r5, [sp, #8]
    12a4:	bl	b5c <sendto_match_servs@plt>
    12a8:	ldr	r0, [pc, #60]	; 12ec <mo_undline+0x154>
    12ac:	ldr	r0, [pc, r0]
    12b0:	add	r1, r0, #88	; 0x58
    12b4:	mov	r0, r6
    12b8:	bl	c4c <match@plt>
    12bc:	cmp	r0, #0
    12c0:	bne	1230 <mo_undline+0x98>
    12c4:	b	11e8 <mo_undline+0x50>
    12c8:	.word	0x00000874
    12cc:	.word	0x00000b93
    12d0:	.word	0x00010ed4
    12d4:	.word	0x0000089f
    12d8:	.word	0x000008e3
    12dc:	.word	0x0000089e
    12e0:	.word	0x000008af
    12e4:	.word	0x00010e28
    12e8:	.word	0x00000ac7
    12ec:	.word	0x00010df8

000012f0 <apply_dline>:
    12f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    12f4:	add	fp, sp, #24
    12f8:	sub	sp, sp, #152	; 0x98
    12fc:	mov	r7, r1
    1300:	mov	r8, r2
    1304:	mov	r4, r0
    1308:	add	r1, sp, #24
    130c:	add	r2, sp, #20
    1310:	mov	r9, r3
    1314:	mov	r0, r7
    1318:	bl	b44 <parse_netmask_strict@plt>
    131c:	orr	r1, r0, #1
    1320:	cmp	r1, #3
    1324:	bne	13a4 <apply_dline+0xb4>
    1328:	ldr	r1, [r4, #24]
    132c:	mov	r5, #2
    1330:	cmp	r0, #3
    1334:	movweq	r5, #10
    1338:	cmp	r1, #0
    133c:	beq	13c0 <apply_dline+0xd0>
    1340:	ldr	r0, [r1, #36]	; 0x24
    1344:	cmp	r0, #0
    1348:	beq	136c <apply_dline+0x7c>
    134c:	ldr	r1, [pc, #1144]	; 17cc <apply_dline+0x4dc>
    1350:	add	r1, pc, r1
    1354:	bl	cb8 <privilegeset_in_set@plt>
    1358:	cmp	r0, #0
    135c:	bne	138c <apply_dline+0x9c>
    1360:	ldr	r1, [r4, #24]
    1364:	cmp	r1, #0
    1368:	beq	13c0 <apply_dline+0xd0>
    136c:	ldr	r0, [r1, #36]	; 0x24
    1370:	cmp	r0, #0
    1374:	beq	13c0 <apply_dline+0xd0>
    1378:	ldr	r1, [pc, #1104]	; 17d0 <apply_dline+0x4e0>
    137c:	add	r1, pc, r1
    1380:	bl	cb8 <privilegeset_in_set@plt>
    1384:	cmp	r0, #0
    1388:	beq	13c0 <apply_dline+0xd0>
    138c:	ldr	r0, [sp, #20]
    1390:	cmp	r0, #7
    1394:	bgt	13e0 <apply_dline+0xf0>
    1398:	ldr	r1, [pc, #1076]	; 17d4 <apply_dline+0x4e4>
    139c:	add	r1, pc, r1
    13a0:	b	13d4 <apply_dline+0xe4>
    13a4:	ldr	r0, [pc, #1048]	; 17c4 <apply_dline+0x4d4>
    13a8:	add	r3, r4, #88	; 0x58
    13ac:	ldr	r0, [pc, r0]
    13b0:	ldr	r1, [pc, #1040]	; 17c8 <apply_dline+0x4d8>
    13b4:	add	r2, r0, #88	; 0x58
    13b8:	add	r1, pc, r1
    13bc:	b	16e8 <apply_dline+0x3f8>
    13c0:	ldr	r0, [sp, #20]
    13c4:	cmp	r0, #15
    13c8:	bgt	13e0 <apply_dline+0xf0>
    13cc:	ldr	r1, [pc, #1028]	; 17d8 <apply_dline+0x4e8>
    13d0:	add	r1, pc, r1
    13d4:	mov	r0, r4
    13d8:	bl	c70 <sendto_one_notice@plt>
    13dc:	b	16f0 <apply_dline+0x400>
    13e0:	ldr	r0, [pc, #1012]	; 17dc <apply_dline+0x4ec>
    13e4:	ldr	r0, [pc, r0]
    13e8:	ldr	r0, [r0, #140]	; 0x8c
    13ec:	cmp	r0, #0
    13f0:	beq	1434 <apply_dline+0x144>
    13f4:	add	r0, sp, #24
    13f8:	mov	r1, r5
    13fc:	bl	cd0 <find_dline@plt>
    1400:	cmp	r0, #0
    1404:	beq	1434 <apply_dline+0x144>
    1408:	mov	r5, r0
    140c:	ldr	r0, [r0, #16]
    1410:	add	r2, sp, #16
    1414:	mov	r1, #0
    1418:	bl	b44 <parse_netmask_strict@plt>
    141c:	cmp	r0, #0
    1420:	beq	1434 <apply_dline+0x144>
    1424:	ldr	r0, [sp, #16]
    1428:	ldr	r1, [sp, #20]
    142c:	cmp	r1, r0
    1430:	bge	1750 <apply_dline+0x460>
    1434:	bl	bec <rb_set_time@plt>
    1438:	bl	b38 <make_conf@plt>
    143c:	mov	r6, r0
    1440:	mov	r0, #131072	; 0x20000
    1444:	str	r0, [r6]
    1448:	bl	b50 <rb_current_time@plt>
    144c:	str	r0, [r6, #40]	; 0x28
    1450:	mov	r0, r7
    1454:	bl	c1c <strlen@plt>
    1458:	add	r0, r0, #1
    145c:	bl	bf8 <malloc@plt>
    1460:	cmp	r0, #0
    1464:	beq	17c0 <apply_dline+0x4d0>
    1468:	mov	r1, r7
    146c:	mov	r5, r0
    1470:	bl	bd4 <strcpy@plt>
    1474:	mov	r0, r9
    1478:	str	r5, [r6, #16]
    147c:	bl	c1c <strlen@plt>
    1480:	add	r0, r0, #1
    1484:	bl	bf8 <malloc@plt>
    1488:	cmp	r0, #0
    148c:	beq	17c0 <apply_dline+0x4d0>
    1490:	mov	r1, r9
    1494:	mov	r5, r0
    1498:	bl	bd4 <strcpy@plt>
    149c:	mov	r0, r4
    14a0:	str	r5, [r6, #20]
    14a4:	bl	bb0 <get_oper_name@plt>
    14a8:	bl	bc8 <operhash_add@plt>
    14ac:	str	r0, [r6, #12]
    14b0:	mov	r0, r9
    14b4:	bl	c1c <strlen@plt>
    14b8:	movw	r1, #391	; 0x187
    14bc:	cmp	r0, r1
    14c0:	mov	r1, #124	; 0x7c
    14c4:	movcs	r0, #0
    14c8:	strbcs	r0, [r9, #390]	; 0x186
    14cc:	mov	r0, r9
    14d0:	bl	c28 <strchr@plt>
    14d4:	cmp	r0, #0
    14d8:	beq	1520 <apply_dline+0x230>
    14dc:	mov	r7, r0
    14e0:	mov	r0, #0
    14e4:	strb	r0, [r7]
    14e8:	ldrb	r0, [r7, #1]!
    14ec:	cmp	r0, #0
    14f0:	beq	1524 <apply_dline+0x234>
    14f4:	mov	r0, r7
    14f8:	bl	c1c <strlen@plt>
    14fc:	add	r0, r0, #1
    1500:	bl	bf8 <malloc@plt>
    1504:	cmp	r0, #0
    1508:	beq	17c0 <apply_dline+0x4d0>
    150c:	mov	r1, r7
    1510:	mov	r5, r0
    1514:	bl	bd4 <strcpy@plt>
    1518:	str	r5, [r6, #24]
    151c:	b	1524 <apply_dline+0x234>
    1520:	mov	r7, #0
    1524:	cmp	r8, #1
    1528:	blt	15ac <apply_dline+0x2bc>
    152c:	bl	b50 <rb_current_time@plt>
    1530:	add	r0, r0, r8
    1534:	str	r0, [r6, #36]	; 0x24
    1538:	mov	r0, r6
    153c:	bl	be0 <add_temp_dline@plt>
    1540:	cmp	r7, #0
    1544:	ldrbne	r0, [r7]
    1548:	cmpne	r0, #0
    154c:	bne	1658 <apply_dline+0x368>
    1550:	mov	r0, r4
    1554:	bl	bb0 <get_oper_name@plt>
    1558:	movw	r1, #34953	; 0x8889
    155c:	mov	r3, r0
    1560:	ldr	r0, [r6, #16]
    1564:	movt	r1, #34952	; 0x8888
    1568:	umull	r1, r2, r8, r1
    156c:	lsr	r5, r2, #5
    1570:	mov	r1, #0
    1574:	str	r5, [sp]
    1578:	stmib	sp, {r0, r9}
    157c:	mov	r0, #256	; 0x100
    1580:	ldr	r2, [pc, #620]	; 17f4 <apply_dline+0x504>
    1584:	add	r2, pc, r2
    1588:	bl	b98 <sendto_realops_snomask@plt>
    158c:	mov	r0, r4
    1590:	bl	bb0 <get_oper_name@plt>
    1594:	mov	r2, r0
    1598:	ldr	r0, [r6, #16]
    159c:	stm	sp, {r0, r9}
    15a0:	ldr	r1, [pc, #592]	; 17f8 <apply_dline+0x508>
    15a4:	add	r1, pc, r1
    15a8:	b	16b8 <apply_dline+0x3c8>
    15ac:	ldr	r0, [r6, #16]
    15b0:	mov	r1, #131072	; 0x20000
    15b4:	mov	r2, #0
    15b8:	mov	r3, #0
    15bc:	str	r6, [sp]
    15c0:	mov	r5, #0
    15c4:	bl	c04 <add_conf_by_address@plt>
    15c8:	ldr	r1, [r6, #24]
    15cc:	ldr	r2, [r6, #16]
    15d0:	mov	r0, #0
    15d4:	cmp	r1, #0
    15d8:	beq	15e8 <apply_dline+0x2f8>
    15dc:	ldrb	r0, [r1]
    15e0:	cmp	r0, #0
    15e4:	movne	r0, r1
    15e8:	str	r9, [sp]
    15ec:	stmib	sp, {r0, r5}
    15f0:	mov	r0, #1
    15f4:	mov	r1, r4
    15f8:	mov	r3, #0
    15fc:	bl	ba4 <bandb_add@plt>
    1600:	cmp	r7, #0
    1604:	ldrbne	r0, [r7]
    1608:	cmpne	r0, #0
    160c:	bne	16f8 <apply_dline+0x408>
    1610:	mov	r0, r4
    1614:	bl	bb0 <get_oper_name@plt>
    1618:	mov	r3, r0
    161c:	ldr	r0, [r6, #16]
    1620:	mov	r1, #0
    1624:	stm	sp, {r0, r9}
    1628:	mov	r0, #256	; 0x100
    162c:	ldr	r2, [pc, #472]	; 180c <apply_dline+0x51c>
    1630:	add	r2, pc, r2
    1634:	bl	b98 <sendto_realops_snomask@plt>
    1638:	mov	r0, r4
    163c:	bl	bb0 <get_oper_name@plt>
    1640:	ldr	r3, [r6, #16]
    1644:	str	r9, [sp]
    1648:	mov	r2, r0
    164c:	ldr	r1, [pc, #444]	; 1810 <apply_dline+0x520>
    1650:	add	r1, pc, r1
    1654:	b	1744 <apply_dline+0x454>
    1658:	mov	r0, r4
    165c:	bl	bb0 <get_oper_name@plt>
    1660:	movw	r1, #34953	; 0x8889
    1664:	mov	r3, r0
    1668:	ldr	r0, [r6, #16]
    166c:	movt	r1, #34952	; 0x8888
    1670:	umull	r1, r2, r8, r1
    1674:	lsr	r5, r2, #5
    1678:	mov	r1, #0
    167c:	str	r5, [sp]
    1680:	stmib	sp, {r0, r9}
    1684:	str	r7, [sp, #12]
    1688:	mov	r0, #256	; 0x100
    168c:	ldr	r2, [pc, #360]	; 17fc <apply_dline+0x50c>
    1690:	add	r2, pc, r2
    1694:	bl	b98 <sendto_realops_snomask@plt>
    1698:	mov	r0, r4
    169c:	bl	bb0 <get_oper_name@plt>
    16a0:	mov	r2, r0
    16a4:	ldr	r0, [r6, #16]
    16a8:	stm	sp, {r0, r9}
    16ac:	str	r7, [sp, #8]
    16b0:	ldr	r1, [pc, #328]	; 1800 <apply_dline+0x510>
    16b4:	add	r1, pc, r1
    16b8:	mov	r0, #7
    16bc:	mov	r3, r5
    16c0:	bl	c40 <ilog@plt>
    16c4:	ldr	r0, [r6, #16]
    16c8:	str	r5, [sp]
    16cc:	add	r3, r4, #88	; 0x58
    16d0:	str	r0, [sp, #4]
    16d4:	ldr	r0, [pc, #296]	; 1804 <apply_dline+0x514>
    16d8:	ldr	r0, [pc, r0]
    16dc:	ldr	r1, [pc, #292]	; 1808 <apply_dline+0x518>
    16e0:	add	r2, r0, #88	; 0x58
    16e4:	add	r1, pc, r1
    16e8:	mov	r0, r4
    16ec:	bl	b74 <sendto_one@plt>
    16f0:	sub	sp, fp, #24
    16f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    16f8:	mov	r0, r4
    16fc:	bl	bb0 <get_oper_name@plt>
    1700:	mov	r3, r0
    1704:	ldr	r0, [r6, #16]
    1708:	mov	r1, #0
    170c:	stm	sp, {r0, r9}
    1710:	str	r7, [sp, #8]
    1714:	mov	r0, #256	; 0x100
    1718:	ldr	r2, [pc, #244]	; 1814 <apply_dline+0x524>
    171c:	add	r2, pc, r2
    1720:	bl	b98 <sendto_realops_snomask@plt>
    1724:	mov	r0, r4
    1728:	bl	bb0 <get_oper_name@plt>
    172c:	ldr	r3, [r6, #16]
    1730:	str	r9, [sp]
    1734:	str	r7, [sp, #4]
    1738:	mov	r2, r0
    173c:	ldr	r1, [pc, #212]	; 1818 <apply_dline+0x528>
    1740:	add	r1, pc, r1
    1744:	mov	r0, #7
    1748:	bl	c40 <ilog@plt>
    174c:	b	16f0 <apply_dline+0x400>
    1750:	ldr	r2, [r5, #20]
    1754:	ldr	r1, [r5, #16]
    1758:	ldr	r0, [pc, #128]	; 17e0 <apply_dline+0x4f0>
    175c:	add	r3, r4, #88	; 0x58
    1760:	add	r0, pc, r0
    1764:	cmp	r2, #0
    1768:	movne	r0, r2
    176c:	ldrb	r2, [r5, #4]
    1770:	tst	r2, #64	; 0x40
    1774:	bne	179c <apply_dline+0x4ac>
    1778:	str	r7, [sp]
    177c:	str	r1, [sp, #4]
    1780:	str	r0, [sp, #8]
    1784:	ldr	r0, [pc, #96]	; 17ec <apply_dline+0x4fc>
    1788:	ldr	r0, [pc, r0]
    178c:	ldr	r1, [pc, #92]	; 17f0 <apply_dline+0x500>
    1790:	add	r2, r0, #88	; 0x58
    1794:	add	r1, pc, r1
    1798:	b	16e8 <apply_dline+0x3f8>
    179c:	str	r7, [sp]
    17a0:	str	r1, [sp, #4]
    17a4:	str	r0, [sp, #8]
    17a8:	ldr	r0, [pc, #52]	; 17e4 <apply_dline+0x4f4>
    17ac:	ldr	r0, [pc, r0]
    17b0:	ldr	r1, [pc, #48]	; 17e8 <apply_dline+0x4f8>
    17b4:	add	r2, r0, #88	; 0x58
    17b8:	add	r1, pc, r1
    17bc:	b	16e8 <apply_dline+0x3f8>
    17c0:	bl	b80 <rb_outofmemory@plt>
    17c4:	.word	0x00010cf8
    17c8:	.word	0x00000776
    17cc:	.word	0x000007fc
    17d0:	.word	0x000007db
    17d4:	.word	0x000007cd
    17d8:	.word	0x000007d0
    17dc:	.word	0x00010cc8
    17e0:	.word	0x00000472
    17e4:	.word	0x000108f8
    17e8:	.word	0x00000426
    17ec:	.word	0x0001091c
    17f0:	.word	0x00000479
    17f4:	.word	0x000006ba
    17f8:	.word	0x000006ca
    17fc:	.word	0x000005ec
    1800:	.word	0x000005fb
    1804:	.word	0x000109cc
    1808:	.word	0x000005dc
    180c:	.word	0x000006c7
    1810:	.word	0x000006c5
    1814:	.word	0x00000606
    1818:	.word	0x00000603

0000181c <apply_undline>:
    181c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    1820:	add	fp, sp, #24
    1824:	sub	sp, sp, #520	; 0x208
    1828:	mov	r4, r0
    182c:	mov	r6, r1
    1830:	mov	r0, r1
    1834:	mov	r1, #0
    1838:	mov	r2, #0
    183c:	bl	b8c <parse_netmask@plt>
    1840:	orr	r0, r0, #1
    1844:	cmp	r0, #3
    1848:	bne	1950 <apply_undline+0x134>
    184c:	mov	r0, r6
    1850:	mov	r1, #131072	; 0x20000
    1854:	mov	r2, #0
    1858:	mov	r7, #0
    185c:	bl	c94 <find_exact_conf_by_address@plt>
    1860:	cmp	r0, #0
    1864:	beq	1974 <apply_undline+0x158>
    1868:	ldr	r1, [r0, #16]
    186c:	add	r8, sp, #8
    1870:	mov	r5, r0
    1874:	mov	r2, #512	; 0x200
    1878:	mov	r0, r8
    187c:	bl	ca0 <rb_strlcpy@plt>
    1880:	ldr	ip, [pc, #444]	; 1a44 <apply_undline+0x228>
    1884:	ldr	ip, [pc, ip]
    1888:	add	r3, r7, r7, lsl #1
    188c:	add	r2, ip, r3, lsl #2
    1890:	mov	r1, r2
    1894:	ldr	r0, [r1]
    1898:	cmp	r0, #0
    189c:	beq	18b4 <apply_undline+0x98>
    18a0:	mov	r1, r0
    18a4:	ldr	r6, [r1], #8
    18a8:	cmp	r6, r5
    18ac:	bne	1894 <apply_undline+0x78>
    18b0:	b	195c <apply_undline+0x140>
    18b4:	add	r7, r7, #1
    18b8:	cmp	r7, #4
    18bc:	bcc	1888 <apply_undline+0x6c>
    18c0:	ldr	r1, [r5, #16]
    18c4:	mov	r0, #1
    18c8:	mov	r2, #0
    18cc:	bl	c7c <bandb_del@plt>
    18d0:	ldr	r0, [r5, #16]
    18d4:	add	r3, r4, #88	; 0x58
    18d8:	str	r0, [sp]
    18dc:	ldr	r0, [pc, #372]	; 1a58 <apply_undline+0x23c>
    18e0:	ldr	r0, [pc, r0]
    18e4:	ldr	r1, [pc, #368]	; 1a5c <apply_undline+0x240>
    18e8:	add	r2, r0, #88	; 0x58
    18ec:	add	r1, pc, r1
    18f0:	mov	r0, r4
    18f4:	bl	b74 <sendto_one@plt>
    18f8:	mov	r0, r4
    18fc:	bl	bb0 <get_oper_name@plt>
    1900:	mov	r3, r0
    1904:	ldr	r0, [r5, #16]
    1908:	mov	r1, #0
    190c:	str	r0, [sp]
    1910:	mov	r0, #256	; 0x100
    1914:	ldr	r2, [pc, #324]	; 1a60 <apply_undline+0x244>
    1918:	add	r2, pc, r2
    191c:	bl	b98 <sendto_realops_snomask@plt>
    1920:	mov	r0, r4
    1924:	bl	bb0 <get_oper_name@plt>
    1928:	ldr	r3, [r5, #16]
    192c:	ldr	r1, [pc, #304]	; 1a64 <apply_undline+0x248>
    1930:	mov	r2, r0
    1934:	mov	r0, #7
    1938:	add	r1, pc, r1
    193c:	bl	c40 <ilog@plt>
    1940:	ldr	r0, [r5, #16]
    1944:	mov	r1, r5
    1948:	bl	c34 <delete_one_address_conf@plt>
    194c:	b	1a34 <apply_undline+0x218>
    1950:	ldr	r1, [pc, #228]	; 1a3c <apply_undline+0x220>
    1954:	add	r1, pc, r1
    1958:	b	197c <apply_undline+0x160>
    195c:	ldmib	r0, {r6, r7}
    1960:	cmp	r7, #0
    1964:	beq	198c <apply_undline+0x170>
    1968:	str	r6, [r7, #4]
    196c:	ldr	r6, [r0, #4]
    1970:	b	1994 <apply_undline+0x178>
    1974:	ldr	r1, [pc, #196]	; 1a40 <apply_undline+0x224>
    1978:	add	r1, pc, r1
    197c:	mov	r0, r4
    1980:	mov	r2, r6
    1984:	bl	c70 <sendto_one_notice@plt>
    1988:	b	1a34 <apply_undline+0x218>
    198c:	add	r1, ip, r3, lsl #2
    1990:	str	r6, [r1, #4]
    1994:	cmp	r6, #0
    1998:	mov	r1, r2
    199c:	addne	r1, r6, #8
    19a0:	str	r7, [r1]
    19a4:	mov	r1, #0
    19a8:	str	r1, [r0, #4]
    19ac:	str	r1, [r0, #8]
    19b0:	ldr	r1, [r2, #8]
    19b4:	sub	r1, r1, #1
    19b8:	str	r1, [r2, #8]
    19bc:	bl	bbc <rb_free_rb_dlink_node@plt>
    19c0:	ldr	r0, [r5, #16]
    19c4:	mov	r1, r5
    19c8:	bl	c34 <delete_one_address_conf@plt>
    19cc:	str	r8, [sp]
    19d0:	add	r3, r4, #88	; 0x58
    19d4:	ldr	r0, [pc, #108]	; 1a48 <apply_undline+0x22c>
    19d8:	ldr	r0, [pc, r0]
    19dc:	ldr	r1, [pc, #104]	; 1a4c <apply_undline+0x230>
    19e0:	add	r2, r0, #88	; 0x58
    19e4:	add	r1, pc, r1
    19e8:	mov	r0, r4
    19ec:	bl	b74 <sendto_one@plt>
    19f0:	mov	r0, r4
    19f4:	bl	bb0 <get_oper_name@plt>
    19f8:	str	r8, [sp]
    19fc:	mov	r3, r0
    1a00:	mov	r0, #256	; 0x100
    1a04:	mov	r1, #0
    1a08:	ldr	r2, [pc, #64]	; 1a50 <apply_undline+0x234>
    1a0c:	add	r2, pc, r2
    1a10:	bl	b98 <sendto_realops_snomask@plt>
    1a14:	mov	r0, r4
    1a18:	bl	bb0 <get_oper_name@plt>
    1a1c:	ldr	r1, [pc, #48]	; 1a54 <apply_undline+0x238>
    1a20:	mov	r2, r0
    1a24:	mov	r0, #7
    1a28:	mov	r3, r8
    1a2c:	add	r1, pc, r1
    1a30:	bl	c40 <ilog@plt>
    1a34:	sub	sp, fp, #24
    1a38:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1a3c:	.word	0x0000017c
    1a40:	.word	0x000003f7
    1a44:	.word	0x00010818
    1a48:	.word	0x000106cc
    1a4c:	.word	0x0000039d
    1a50:	.word	0x000003aa
    1a54:	.word	0x000003b8
    1a58:	.word	0x000107c4
    1a5c:	.word	0x00000501
    1a60:	.word	0x000004ff
    1a64:	.word	0x000004ac

Disassembly of section .fini:

00001a68 <_fini>:
    1a68:	push	{r3, lr}
    1a6c:	pop	{r3, pc}
