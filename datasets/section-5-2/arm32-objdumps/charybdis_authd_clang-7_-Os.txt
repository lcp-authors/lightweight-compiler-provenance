
../repos/charybdis/authd/.libs/authd:     file format elf32-littlearm


Disassembly of section .init:

000114b0 <.init>:
   114b0:	push	{r3, lr}
   114b4:	bl	11908 <sprintf@plt+0x48>
   114b8:	pop	{r3, pc}

Disassembly of section .plt:

000114bc <sigemptyset@plt-0x14>:
   114bc:	push	{lr}		; (str lr, [sp, #-4]!)
   114c0:	ldr	lr, [pc, #4]	; 114cc <sigemptyset@plt-0x4>
   114c4:	add	lr, pc, lr
   114c8:	ldr	pc, [lr, #8]!
   114cc:	andeq	r8, r1, r4, lsr fp

000114d0 <sigemptyset@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #24, 20	; 0x18000
   114d8:	ldr	pc, [ip, #2868]!	; 0xb34

000114dc <strerror@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #24, 20	; 0x18000
   114e4:	ldr	pc, [ip, #2860]!	; 0xb2c

000114e8 <rb_helper_loop@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #24, 20	; 0x18000
   114f0:	ldr	pc, [ip, #2852]!	; 0xb24

000114f4 <abort@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #24, 20	; 0x18000
   114fc:	ldr	pc, [ip, #2844]!	; 0xb1c

00011500 <rb_event_addish@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #24, 20	; 0x18000
   11508:	ldr	pc, [ip, #2836]!	; 0xb14

0001150c <getsockname@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #24, 20	; 0x18000
   11514:	ldr	pc, [ip, #2828]!	; 0xb0c

00011518 <rb_ignore_errno@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #24, 20	; 0x18000
   11520:	ldr	pc, [ip, #2820]!	; 0xb04

00011524 <rb_connect_tcp_ssl@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #24, 20	; 0x18000
   1152c:	ldr	pc, [ip, #2812]!	; 0xafc

00011530 <rb_connect_tcp@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #24, 20	; 0x18000
   11538:	ldr	pc, [ip, #2804]!	; 0xaf4

0001153c <memcmp@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #24, 20	; 0x18000
   11544:	ldr	pc, [ip, #2796]!	; 0xaec

00011548 <__libc_start_main@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #24, 20	; 0x18000
   11550:	ldr	pc, [ip, #2788]!	; 0xae4

00011554 <rb_event_delete@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #24, 20	; 0x18000
   1155c:	ldr	pc, [ip, #2780]!	; 0xadc

00011560 <rb_setselect@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #24, 20	; 0x18000
   11568:	ldr	pc, [ip, #2772]!	; 0xad4

0001156c <rb_get_fd@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #24, 20	; 0x18000
   11574:	ldr	pc, [ip, #2764]!	; 0xacc

00011578 <__gmon_start__@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #24, 20	; 0x18000
   11580:	ldr	pc, [ip, #2756]!	; 0xac4

00011584 <vsnprintf@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #24, 20	; 0x18000
   1158c:	ldr	pc, [ip, #2748]!	; 0xabc

00011590 <rb_socket@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #24, 20	; 0x18000
   11598:	ldr	pc, [ip, #2740]!	; 0xab4

0001159c <fclose@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #24, 20	; 0x18000
   115a4:	ldr	pc, [ip, #2732]!	; 0xaac

000115a8 <rb_strtok_r@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #24, 20	; 0x18000
   115b0:	ldr	pc, [ip, #2724]!	; 0xaa4

000115b4 <strchr@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #24, 20	; 0x18000
   115bc:	ldr	pc, [ip, #2716]!	; 0xa9c

000115c0 <rb_dictionary_foreach_cur@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #24, 20	; 0x18000
   115c8:	ldr	pc, [ip, #2708]!	; 0xa94

000115cc <strcasecmp@plt>:
   115cc:	add	ip, pc, #0, 12
   115d0:	add	ip, ip, #24, 20	; 0x18000
   115d4:	ldr	pc, [ip, #2700]!	; 0xa8c

000115d8 <calloc@plt>:
   115d8:	add	ip, pc, #0, 12
   115dc:	add	ip, ip, #24, 20	; 0x18000
   115e0:	ldr	pc, [ip, #2692]!	; 0xa84

000115e4 <rb_helper_child@plt>:
   115e4:	add	ip, pc, #0, 12
   115e8:	add	ip, ip, #24, 20	; 0x18000
   115ec:	ldr	pc, [ip, #2684]!	; 0xa7c

000115f0 <sendto@plt>:
   115f0:	add	ip, pc, #0, 12
   115f4:	add	ip, ip, #24, 20	; 0x18000
   115f8:	ldr	pc, [ip, #2676]!	; 0xa74

000115fc <fopen@plt>:
   115fc:	add	ip, pc, #0, 12
   11600:	add	ip, ip, #24, 20	; 0x18000
   11604:	ldr	pc, [ip, #2668]!	; 0xa6c

00011608 <memset@plt>:
   11608:	add	ip, pc, #0, 12
   1160c:	add	ip, ip, #24, 20	; 0x18000
   11610:	ldr	pc, [ip, #2660]!	; 0xa64

00011614 <freeaddrinfo@plt>:
   11614:	add	ip, pc, #0, 12
   11618:	add	ip, ip, #24, 20	; 0x18000
   1161c:	ldr	pc, [ip, #2652]!	; 0xa5c

00011620 <strrchr@plt>:
   11620:	add	ip, pc, #0, 12
   11624:	add	ip, ip, #24, 20	; 0x18000
   11628:	ldr	pc, [ip, #2644]!	; 0xa54

0001162c <rb_write@plt>:
   1162c:	add	ip, pc, #0, 12
   11630:	add	ip, ip, #24, 20	; 0x18000
   11634:	ldr	pc, [ip, #2636]!	; 0xa4c

00011638 <__assert_fail@plt>:
   11638:	add	ip, pc, #0, 12
   1163c:	add	ip, ip, #24, 20	; 0x18000
   11640:	ldr	pc, [ip, #2628]!	; 0xa44

00011644 <fgets_unlocked@plt>:
   11644:	add	ip, pc, #0, 12
   11648:	add	ip, ip, #24, 20	; 0x18000
   1164c:	ldr	pc, [ip, #2620]!	; 0xa3c

00011650 <rb_strlcpy@plt>:
   11650:	add	ip, pc, #0, 12
   11654:	add	ip, ip, #24, 20	; 0x18000
   11658:	ldr	pc, [ip, #2612]!	; 0xa34

0001165c <strtoull@plt>:
   1165c:	add	ip, pc, #0, 12
   11660:	add	ip, ip, #24, 20	; 0x18000
   11664:	ldr	pc, [ip, #2604]!	; 0xa2c

00011668 <rb_dictionary_foreach_next@plt>:
   11668:	add	ip, pc, #0, 12
   1166c:	add	ip, ip, #24, 20	; 0x18000
   11670:	ldr	pc, [ip, #2596]!	; 0xa24

00011674 <free@plt>:
   11674:	add	ip, pc, #0, 12
   11678:	add	ip, ip, #24, 20	; 0x18000
   1167c:	ldr	pc, [ip, #2588]!	; 0xa1c

00011680 <rb_string_to_array@plt>:
   11680:	add	ip, pc, #0, 12
   11684:	add	ip, ip, #24, 20	; 0x18000
   11688:	ldr	pc, [ip, #2580]!	; 0xa14

0001168c <rb_read@plt>:
   1168c:	add	ip, pc, #0, 12
   11690:	add	ip, ip, #24, 20	; 0x18000
   11694:	ldr	pc, [ip, #2572]!	; 0xa0c

00011698 <rb_strcasecmp@plt>:
   11698:	add	ip, pc, #0, 12
   1169c:	add	ip, ip, #24, 20	; 0x18000
   116a0:	ldr	pc, [ip, #2564]!	; 0xa04

000116a4 <getaddrinfo@plt>:
   116a4:	add	ip, pc, #0, 12
   116a8:	add	ip, ip, #24, 20	; 0x18000
   116ac:	ldr	pc, [ip, #2556]!	; 0x9fc

000116b0 <rb_dictionary_foreach_start@plt>:
   116b0:	add	ip, pc, #0, 12
   116b4:	add	ip, ip, #24, 20	; 0x18000
   116b8:	ldr	pc, [ip, #2548]!	; 0x9f4

000116bc <rb_inet_pton_sock@plt>:
   116bc:	add	ip, pc, #0, 12
   116c0:	add	ip, ip, #24, 20	; 0x18000
   116c4:	ldr	pc, [ip, #2540]!	; 0x9ec

000116c8 <strlen@plt>:
   116c8:	add	ip, pc, #0, 12
   116cc:	add	ip, ip, #24, 20	; 0x18000
   116d0:	ldr	pc, [ip, #2532]!	; 0x9e4

000116d4 <rb_current_time@plt>:
   116d4:	add	ip, pc, #0, 12
   116d8:	add	ip, ip, #24, 20	; 0x18000
   116dc:	ldr	pc, [ip, #2524]!	; 0x9dc

000116e0 <rb_dictionary_delete@plt>:
   116e0:	add	ip, pc, #0, 12
   116e4:	add	ip, ip, #24, 20	; 0x18000
   116e8:	ldr	pc, [ip, #2516]!	; 0x9d4

000116ec <memcpy@plt>:
   116ec:	add	ip, pc, #0, 12
   116f0:	add	ip, ip, #24, 20	; 0x18000
   116f4:	ldr	pc, [ip, #2508]!	; 0x9cc

000116f8 <rb_free_rb_dlink_node@plt>:
   116f8:	add	ip, pc, #0, 12
   116fc:	add	ip, ip, #24, 20	; 0x18000
   11700:	ldr	pc, [ip, #2500]!	; 0x9c4

00011704 <rb_close@plt>:
   11704:	add	ip, pc, #0, 12
   11708:	add	ip, ip, #24, 20	; 0x18000
   1170c:	ldr	pc, [ip, #2492]!	; 0x9bc

00011710 <strtol@plt>:
   11710:	add	ip, pc, #0, 12
   11714:	add	ip, ip, #24, 20	; 0x18000
   11718:	ldr	pc, [ip, #2484]!	; 0x9b4

0001171c <sigaddset@plt>:
   1171c:	add	ip, pc, #0, 12
   11720:	add	ip, ip, #24, 20	; 0x18000
   11724:	ldr	pc, [ip, #2476]!	; 0x9ac

00011728 <strcpy@plt>:
   11728:	add	ip, pc, #0, 12
   1172c:	add	ip, ip, #24, 20	; 0x18000
   11730:	ldr	pc, [ip, #2468]!	; 0x9a4

00011734 <atoi@plt>:
   11734:	add	ip, pc, #0, 12
   11738:	add	ip, ip, #24, 20	; 0x18000
   1173c:	ldr	pc, [ip, #2460]!	; 0x99c

00011740 <rb_dictionary_destroy@plt>:
   11740:	add	ip, pc, #0, 12
   11744:	add	ip, ip, #24, 20	; 0x18000
   11748:	ldr	pc, [ip, #2452]!	; 0x994

0001174c <bind@plt>:
   1174c:	add	ip, pc, #0, 12
   11750:	add	ip, ip, #24, 20	; 0x18000
   11754:	ldr	pc, [ip, #2444]!	; 0x98c

00011758 <strstr@plt>:
   11758:	add	ip, pc, #0, 12
   1175c:	add	ip, ip, #24, 20	; 0x18000
   11760:	ldr	pc, [ip, #2436]!	; 0x984

00011764 <fwrite@plt>:
   11764:	add	ip, pc, #0, 12
   11768:	add	ip, ip, #24, 20	; 0x18000
   1176c:	ldr	pc, [ip, #2428]!	; 0x97c

00011770 <rb_init_prng@plt>:
   11770:	add	ip, pc, #0, 12
   11774:	add	ip, ip, #24, 20	; 0x18000
   11778:	ldr	pc, [ip, #2420]!	; 0x974

0001177c <rb_dictionary_retrieve@plt>:
   1177c:	add	ip, pc, #0, 12
   11780:	add	ip, ip, #24, 20	; 0x18000
   11784:	ldr	pc, [ip, #2412]!	; 0x96c

00011788 <rb_outofmemory@plt>:
   11788:	add	ip, pc, #0, 12
   1178c:	add	ip, ip, #24, 20	; 0x18000
   11790:	ldr	pc, [ip, #2404]!	; 0x964

00011794 <__ctype_b_loc@plt>:
   11794:	add	ip, pc, #0, 12
   11798:	add	ip, ip, #24, 20	; 0x18000
   1179c:	ldr	pc, [ip, #2396]!	; 0x95c

000117a0 <rb_dictionary_add@plt>:
   117a0:	add	ip, pc, #0, 12
   117a4:	add	ip, ip, #24, 20	; 0x18000
   117a8:	ldr	pc, [ip, #2388]!	; 0x954

000117ac <rb_set_time@plt>:
   117ac:	add	ip, pc, #0, 12
   117b0:	add	ip, ip, #24, 20	; 0x18000
   117b4:	ldr	pc, [ip, #2380]!	; 0x94c

000117b8 <malloc@plt>:
   117b8:	add	ip, pc, #0, 12
   117bc:	add	ip, ip, #24, 20	; 0x18000
   117c0:	ldr	pc, [ip, #2372]!	; 0x944

000117c4 <sigaction@plt>:
   117c4:	add	ip, pc, #0, 12
   117c8:	add	ip, ip, #24, 20	; 0x18000
   117cc:	ldr	pc, [ip, #2364]!	; 0x93c

000117d0 <rb_helper_read@plt>:
   117d0:	add	ip, pc, #0, 12
   117d4:	add	ip, ip, #24, 20	; 0x18000
   117d8:	ldr	pc, [ip, #2356]!	; 0x934

000117dc <rb_inet_ntop_sock@plt>:
   117dc:	add	ip, pc, #0, 12
   117e0:	add	ip, ip, #24, 20	; 0x18000
   117e4:	ldr	pc, [ip, #2348]!	; 0x92c

000117e8 <rb_dictionary_find@plt>:
   117e8:	add	ip, pc, #0, 12
   117ec:	add	ip, ip, #24, 20	; 0x18000
   117f0:	ldr	pc, [ip, #2340]!	; 0x924

000117f4 <rb_dictionary_create@plt>:
   117f4:	add	ip, pc, #0, 12
   117f8:	add	ip, ip, #24, 20	; 0x18000
   117fc:	ldr	pc, [ip, #2332]!	; 0x91c

00011800 <memmove@plt>:
   11800:	add	ip, pc, #0, 12
   11804:	add	ip, ip, #24, 20	; 0x18000
   11808:	ldr	pc, [ip, #2324]!	; 0x914

0001180c <rb_accept_tcp@plt>:
   1180c:	add	ip, pc, #0, 12
   11810:	add	ip, ip, #24, 20	; 0x18000
   11814:	ldr	pc, [ip, #2316]!	; 0x90c

00011818 <rb_helper_write@plt>:
   11818:	add	ip, pc, #0, 12
   1181c:	add	ip, ip, #24, 20	; 0x18000
   11820:	ldr	pc, [ip, #2308]!	; 0x904

00011824 <rb_event_add@plt>:
   11824:	add	ip, pc, #0, 12
   11828:	add	ip, ip, #24, 20	; 0x18000
   1182c:	ldr	pc, [ip, #2300]!	; 0x8fc

00011830 <rb_get_random@plt>:
   11830:	add	ip, pc, #0, 12
   11834:	add	ip, ip, #24, 20	; 0x18000
   11838:	ldr	pc, [ip, #2292]!	; 0x8f4

0001183c <rb_make_rb_dlink_node@plt>:
   1183c:	add	ip, pc, #0, 12
   11840:	add	ip, ip, #24, 20	; 0x18000
   11844:	ldr	pc, [ip, #2284]!	; 0x8ec

00011848 <snprintf@plt>:
   11848:	add	ip, pc, #0, 12
   1184c:	add	ip, ip, #24, 20	; 0x18000
   11850:	ldr	pc, [ip, #2276]!	; 0x8e4

00011854 <rb_listen@plt>:
   11854:	add	ip, pc, #0, 12
   11858:	add	ip, ip, #24, 20	; 0x18000
   1185c:	ldr	pc, [ip, #2268]!	; 0x8dc

00011860 <strncmp@plt>:
   11860:	add	ip, pc, #0, 12
   11864:	add	ip, ip, #24, 20	; 0x18000
   11868:	ldr	pc, [ip, #2260]!	; 0x8d4

0001186c <recvfrom@plt>:
   1186c:	add	ip, pc, #0, 12
   11870:	add	ip, ip, #24, 20	; 0x18000
   11874:	ldr	pc, [ip, #2252]!	; 0x8cc

00011878 <setsockopt@plt>:
   11878:	add	ip, pc, #0, 12
   1187c:	add	ip, ip, #24, 20	; 0x18000
   11880:	ldr	pc, [ip, #2244]!	; 0x8c4

00011884 <strpbrk@plt>:
   11884:	add	ip, pc, #0, 12
   11888:	add	ip, ip, #24, 20	; 0x18000
   1188c:	ldr	pc, [ip, #2236]!	; 0x8bc

00011890 <memchr@plt>:
   11890:	add	ip, pc, #0, 12
   11894:	add	ip, ip, #24, 20	; 0x18000
   11898:	ldr	pc, [ip, #2228]!	; 0x8b4

0001189c <strcmp@plt>:
   1189c:	add	ip, pc, #0, 12
   118a0:	add	ip, ip, #24, 20	; 0x18000
   118a4:	ldr	pc, [ip, #2220]!	; 0x8ac

000118a8 <exit@plt>:
   118a8:	add	ip, pc, #0, 12
   118ac:	add	ip, ip, #24, 20	; 0x18000
   118b0:	ldr	pc, [ip, #2212]!	; 0x8a4

000118b4 <__errno_location@plt>:
   118b4:	add	ip, pc, #0, 12
   118b8:	add	ip, ip, #24, 20	; 0x18000
   118bc:	ldr	pc, [ip, #2204]!	; 0x89c

000118c0 <sprintf@plt>:
   118c0:	add	ip, pc, #0, 12
   118c4:	add	ip, ip, #24, 20	; 0x18000
   118c8:	ldr	pc, [ip, #2196]!	; 0x894

Disassembly of section .text:

000118cc <.text>:
   118cc:	mov	fp, #0
   118d0:	mov	lr, #0
   118d4:	pop	{r1}		; (ldr r1, [sp], #4)
   118d8:	mov	r2, sp
   118dc:	push	{r2}		; (str r2, [sp, #-4]!)
   118e0:	push	{r0}		; (str r0, [sp, #-4]!)
   118e4:	ldr	ip, [pc, #16]	; 118fc <sprintf@plt+0x3c>
   118e8:	push	{ip}		; (str ip, [sp, #-4]!)
   118ec:	ldr	r0, [pc, #12]	; 11900 <sprintf@plt+0x40>
   118f0:	ldr	r3, [pc, #12]	; 11904 <sprintf@plt+0x44>
   118f4:	bl	11548 <__libc_start_main@plt>
   118f8:	bl	114f4 <abort@plt>
   118fc:	andeq	r8, r1, r0, lsr #32
   11900:	andeq	r1, r1, r8, lsr fp
   11904:	andeq	r7, r1, r0, asr #31
   11908:	ldr	r3, [pc, #20]	; 11924 <sprintf@plt+0x64>
   1190c:	ldr	r2, [pc, #20]	; 11928 <sprintf@plt+0x68>
   11910:	add	r3, pc, r3
   11914:	ldr	r2, [r3, r2]
   11918:	cmp	r2, #0
   1191c:	bxeq	lr
   11920:	b	11578 <__gmon_start__@plt>
   11924:	andeq	r8, r1, r8, ror #13
   11928:	andeq	r0, r0, r0, ror #2
   1192c:	ldr	r0, [pc, #24]	; 1194c <sprintf@plt+0x8c>
   11930:	ldr	r3, [pc, #24]	; 11950 <sprintf@plt+0x90>
   11934:	cmp	r3, r0
   11938:	bxeq	lr
   1193c:	ldr	r3, [pc, #16]	; 11954 <sprintf@plt+0x94>
   11940:	cmp	r3, #0
   11944:	bxeq	lr
   11948:	bx	r3
   1194c:	andeq	sl, r2, r8, asr #30
   11950:	andeq	sl, r2, r8, asr #30
   11954:	andeq	r0, r0, r0
   11958:	ldr	r0, [pc, #36]	; 11984 <sprintf@plt+0xc4>
   1195c:	ldr	r1, [pc, #36]	; 11988 <sprintf@plt+0xc8>
   11960:	sub	r1, r1, r0
   11964:	asr	r1, r1, #2
   11968:	add	r1, r1, r1, lsr #31
   1196c:	asrs	r1, r1, #1
   11970:	bxeq	lr
   11974:	ldr	r3, [pc, #16]	; 1198c <sprintf@plt+0xcc>
   11978:	cmp	r3, #0
   1197c:	bxeq	lr
   11980:	bx	r3
   11984:	andeq	sl, r2, r8, asr #30
   11988:	andeq	sl, r2, r8, asr #30
   1198c:	andeq	r0, r0, r0
   11990:	push	{r4, lr}
   11994:	ldr	r4, [pc, #24]	; 119b4 <sprintf@plt+0xf4>
   11998:	ldrb	r3, [r4]
   1199c:	cmp	r3, #0
   119a0:	popne	{r4, pc}
   119a4:	bl	1192c <sprintf@plt+0x6c>
   119a8:	mov	r3, #1
   119ac:	strb	r3, [r4]
   119b0:	pop	{r4, pc}
   119b4:	andeq	sl, r2, ip, asr #30
   119b8:	b	11958 <sprintf@plt+0x98>
   119bc:	push	{r4, r5, fp, lr}
   119c0:	add	fp, sp, #8
   119c4:	mov	r4, r0
   119c8:	cmp	r0, #1
   119cc:	bgt	119e8 <sprintf@plt+0x128>
   119d0:	movw	r1, #33011	; 0x80f3
   119d4:	mov	r0, #67	; 0x43
   119d8:	mov	r2, r4
   119dc:	movt	r1, #1
   119e0:	pop	{r4, r5, fp, lr}
   119e4:	b	123d0 <sprintf@plt+0xb10>
   119e8:	movw	r0, #61816	; 0xf178
   119ec:	mov	r5, r1
   119f0:	ldr	r1, [r1, #4]
   119f4:	movt	r0, #2
   119f8:	ldr	r0, [r0]
   119fc:	bl	1177c <rb_dictionary_retrieve@plt>
   11a00:	cmp	r0, #0
   11a04:	beq	11a30 <sprintf@plt+0x170>
   11a08:	ldr	r2, [r0, #4]
   11a0c:	sub	r1, r4, #2
   11a10:	cmp	r1, r2
   11a14:	bge	11a48 <sprintf@plt+0x188>
   11a18:	movw	r1, #33134	; 0x816e
   11a1c:	mov	r0, #67	; 0x43
   11a20:	mov	r3, r4
   11a24:	movt	r1, #1
   11a28:	pop	{r4, r5, fp, lr}
   11a2c:	b	123d0 <sprintf@plt+0xb10>
   11a30:	ldr	r2, [r5, #4]
   11a34:	movw	r1, #33089	; 0x8141
   11a38:	mov	r0, #67	; 0x43
   11a3c:	movt	r1, #1
   11a40:	pop	{r4, r5, fp, lr}
   11a44:	b	123d0 <sprintf@plt+0xb10>
   11a48:	ldr	r3, [r0, #8]
   11a4c:	ldr	r0, [r5, #4]
   11a50:	add	r2, r5, #8
   11a54:	pop	{r4, r5, fp, lr}
   11a58:	bx	r3
   11a5c:	push	{r4, r5, fp, lr}
   11a60:	add	fp, sp, #8
   11a64:	cmp	r0, #2
   11a68:	bgt	11a9c <sprintf@plt+0x1dc>
   11a6c:	movw	r5, #43372	; 0xa96c
   11a70:	mov	r4, #0
   11a74:	movt	r5, #2
   11a78:	ldr	r1, [r5, r4, lsl #2]
   11a7c:	cmp	r1, #0
   11a80:	beq	11a8c <sprintf@plt+0x1cc>
   11a84:	mov	r0, #0
   11a88:	blx	r1
   11a8c:	add	r4, r4, #1
   11a90:	cmp	r4, #256	; 0x100
   11a94:	bne	11a78 <sprintf@plt+0x1b8>
   11a98:	pop	{r4, r5, fp, pc}
   11a9c:	ldr	r0, [r1, #4]
   11aa0:	movw	r1, #43372	; 0xa96c
   11aa4:	movt	r1, #2
   11aa8:	ldrb	r0, [r0]
   11aac:	ldr	r1, [r1, r0, lsl #2]
   11ab0:	cmp	r1, #0
   11ab4:	popeq	{r4, r5, fp, pc}
   11ab8:	pop	{r4, r5, fp, lr}
   11abc:	bx	r1
   11ac0:	push	{r4, sl, fp, lr}
   11ac4:	add	fp, sp, #8
   11ac8:	cmp	r0, #2
   11acc:	bgt	11ae0 <sprintf@plt+0x220>
   11ad0:	movw	r1, #32886	; 0x8076
   11ad4:	mov	r2, r0
   11ad8:	movt	r1, #1
   11adc:	b	11b08 <sprintf@plt+0x248>
   11ae0:	ldr	r0, [r1, #4]
   11ae4:	mov	r4, r1
   11ae8:	mov	r1, #0
   11aec:	mov	r2, #16
   11af0:	bl	1165c <strtoull@plt>
   11af4:	cmp	r1, #0
   11af8:	beq	11b14 <sprintf@plt+0x254>
   11afc:	ldr	r2, [r4, #4]
   11b00:	movw	r1, #32961	; 0x80c1
   11b04:	movt	r1, #1
   11b08:	mov	r0, #67	; 0x43
   11b0c:	pop	{r4, sl, fp, lr}
   11b10:	b	123d0 <sprintf@plt+0xb10>
   11b14:	ldr	r1, [r4, #8]
   11b18:	movw	r2, #42348	; 0xa56c
   11b1c:	movt	r2, #2
   11b20:	ldrb	r1, [r1]
   11b24:	ldr	r2, [r2, r1, lsl #2]
   11b28:	cmp	r2, #0
   11b2c:	popeq	{r4, sl, fp, pc}
   11b30:	pop	{r4, sl, fp, lr}
   11b34:	bx	r2
   11b38:	push	{fp, lr}
   11b3c:	mov	fp, sp
   11b40:	sub	sp, sp, #16
   11b44:	bl	11c00 <sprintf@plt+0x340>
   11b48:	mov	r0, #256	; 0x100
   11b4c:	mov	r1, #0
   11b50:	mov	r2, #0
   11b54:	mov	r3, #0
   11b58:	str	r1, [sp]
   11b5c:	movw	r1, #7484	; 0x1d3c
   11b60:	str	r0, [sp, #4]
   11b64:	str	r0, [sp, #8]
   11b68:	str	r0, [sp, #12]
   11b6c:	movw	r0, #7344	; 0x1cb0
   11b70:	movt	r0, #1
   11b74:	movt	r1, #1
   11b78:	bl	115e4 <rb_helper_child@plt>
   11b7c:	movw	r4, #44880	; 0xaf50
   11b80:	cmp	r0, #0
   11b84:	movt	r4, #2
   11b88:	str	r0, [r4]
   11b8c:	bne	11bb8 <sprintf@plt+0x2f8>
   11b90:	movw	r0, #44872	; 0xaf48
   11b94:	mov	r1, #46	; 0x2e
   11b98:	mov	r2, #1
   11b9c:	movt	r0, #2
   11ba0:	ldr	r3, [r0]
   11ba4:	movw	r0, #32816	; 0x8030
   11ba8:	movt	r0, #1
   11bac:	bl	11764 <fwrite@plt>
   11bb0:	mov	r0, #1
   11bb4:	bl	118a8 <exit@plt>
   11bb8:	bl	117ac <rb_set_time@plt>
   11bbc:	bl	11c00 <sprintf@plt+0x340>
   11bc0:	movw	r0, #32863	; 0x805f
   11bc4:	movw	r1, #5784	; 0x1698
   11bc8:	movt	r0, #1
   11bcc:	movt	r1, #1
   11bd0:	bl	117f4 <rb_dictionary_create@plt>
   11bd4:	movw	r1, #61816	; 0xf178
   11bd8:	movt	r1, #2
   11bdc:	str	r0, [r1]
   11be0:	bl	1313c <sprintf@plt+0x187c>
   11be4:	bl	1252c <sprintf@plt+0xc6c>
   11be8:	mov	r0, #0
   11bec:	mov	r1, #1
   11bf0:	bl	11770 <rb_init_prng@plt>
   11bf4:	ldr	r0, [r4]
   11bf8:	mov	r1, #0
   11bfc:	bl	114e8 <rb_helper_loop@plt>
   11c00:	push	{r4, r5, fp, lr}
   11c04:	add	fp, sp, #8
   11c08:	sub	sp, sp, #144	; 0x90
   11c0c:	mov	r0, #1
   11c10:	add	r4, sp, #4
   11c14:	str	r0, [sp, #4]
   11c18:	mov	r0, #0
   11c1c:	add	r5, r4, #4
   11c20:	str	r0, [sp, #136]	; 0x88
   11c24:	mov	r0, r5
   11c28:	bl	114d0 <sigemptyset@plt>
   11c2c:	mov	r0, r5
   11c30:	mov	r1, #13
   11c34:	bl	1171c <sigaddset@plt>
   11c38:	mov	r0, r5
   11c3c:	mov	r1, #14
   11c40:	bl	1171c <sigaddset@plt>
   11c44:	mov	r0, r5
   11c48:	mov	r1, #5
   11c4c:	bl	1171c <sigaddset@plt>
   11c50:	mov	r0, r5
   11c54:	mov	r1, #28
   11c58:	bl	1171c <sigaddset@plt>
   11c5c:	mov	r0, #28
   11c60:	mov	r1, r4
   11c64:	mov	r2, #0
   11c68:	bl	117c4 <sigaction@plt>
   11c6c:	mov	r0, #13
   11c70:	mov	r1, r4
   11c74:	mov	r2, #0
   11c78:	bl	117c4 <sigaction@plt>
   11c7c:	mov	r0, #5
   11c80:	mov	r1, r4
   11c84:	mov	r2, #0
   11c88:	bl	117c4 <sigaction@plt>
   11c8c:	movw	r0, #7500	; 0x1d4c
   11c90:	mov	r1, r4
   11c94:	mov	r2, #0
   11c98:	movt	r0, #1
   11c9c:	str	r0, [sp, #4]
   11ca0:	mov	r0, #14
   11ca4:	bl	117c4 <sigaction@plt>
   11ca8:	sub	sp, fp, #8
   11cac:	pop	{r4, r5, fp, pc}
   11cb0:	push	{r4, r5, r6, r7, fp, lr}
   11cb4:	add	fp, sp, #16
   11cb8:	movw	r1, #44928	; 0xaf80
   11cbc:	mov	r2, #16384	; 0x4000
   11cc0:	mov	r4, r0
   11cc4:	movt	r1, #2
   11cc8:	bl	117d0 <rb_helper_read@plt>
   11ccc:	cmp	r0, #1
   11cd0:	poplt	{r4, r5, r6, r7, fp, pc}
   11cd4:	movw	r5, #44928	; 0xaf80
   11cd8:	movw	r6, #44884	; 0xaf54
   11cdc:	movw	r7, #41324	; 0xa16c
   11ce0:	movt	r5, #2
   11ce4:	movt	r6, #2
   11ce8:	movt	r7, #2
   11cec:	mov	r0, r5
   11cf0:	mov	r1, r6
   11cf4:	mov	r2, #10
   11cf8:	bl	11680 <rb_string_to_array@plt>
   11cfc:	cmp	r0, #1
   11d00:	blt	11d20 <sprintf@plt+0x460>
   11d04:	ldr	r1, [r6]
   11d08:	ldrb	r1, [r1]
   11d0c:	ldr	r2, [r7, r1, lsl #2]
   11d10:	cmp	r2, #0
   11d14:	beq	11d20 <sprintf@plt+0x460>
   11d18:	mov	r1, r6
   11d1c:	blx	r2
   11d20:	mov	r0, r4
   11d24:	mov	r1, r5
   11d28:	mov	r2, #16384	; 0x4000
   11d2c:	bl	117d0 <rb_helper_read@plt>
   11d30:	cmp	r0, #0
   11d34:	bgt	11cec <sprintf@plt+0x42c>
   11d38:	pop	{r4, r5, r6, r7, fp, pc}
   11d3c:	push	{fp, lr}
   11d40:	mov	fp, sp
   11d44:	mov	r0, #1
   11d48:	bl	118a8 <exit@plt>
   11d4c:	bx	lr
   11d50:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11d54:	add	fp, sp, #24
   11d58:	mov	r6, r1
   11d5c:	mov	r8, r0
   11d60:	mov	r0, #1
   11d64:	mov	r1, #160	; 0xa0
   11d68:	mov	r9, r3
   11d6c:	mov	r7, r2
   11d70:	mov	r5, #1
   11d74:	bl	115d8 <calloc@plt>
   11d78:	cmp	r0, #0
   11d7c:	beq	11e04 <sprintf@plt+0x544>
   11d80:	mov	r4, r0
   11d84:	cmp	r6, #2
   11d88:	beq	11da0 <sprintf@plt+0x4e0>
   11d8c:	cmp	r6, #10
   11d90:	bne	11df0 <sprintf@plt+0x530>
   11d94:	mov	r5, #28
   11d98:	mov	r0, #54	; 0x36
   11d9c:	b	11da4 <sprintf@plt+0x4e4>
   11da0:	mov	r0, #52	; 0x34
   11da4:	str	r0, [r4, #8]
   11da8:	movw	r0, #61312	; 0xef80
   11dac:	movt	r0, #2
   11db0:	ldrd	r2, [r0]
   11db4:	adds	r6, r2, #1
   11db8:	adc	r1, r3, #0
   11dbc:	str	r6, [r0]
   11dc0:	str	r1, [r0, #4]
   11dc4:	add	r0, r4, #144	; 0x90
   11dc8:	mov	r1, r4
   11dcc:	stm	r0, {r2, r3, r7, r9}
   11dd0:	movw	r0, #7688	; 0x1e08
   11dd4:	mov	r2, r5
   11dd8:	movt	r0, #1
   11ddc:	str	r0, [r4, #4]
   11de0:	mov	r0, r8
   11de4:	str	r4, [r4]
   11de8:	bl	13230 <sprintf@plt+0x1970>
   11dec:	b	11dfc <sprintf@plt+0x53c>
   11df0:	mov	r0, r4
   11df4:	bl	11674 <free@plt>
   11df8:	mov	r4, #0
   11dfc:	mov	r0, r4
   11e00:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11e04:	bl	11788 <rb_outofmemory@plt>
   11e08:	push	{r4, r5, fp, lr}
   11e0c:	add	fp, sp, #8
   11e10:	sub	sp, sp, #56	; 0x38
   11e14:	mov	r4, r0
   11e18:	mov	r0, sp
   11e1c:	vmov.i32	q8, #0	; 0x00000000
   11e20:	add	r2, r0, #33	; 0x21
   11e24:	cmp	r4, #0
   11e28:	vst1.8	{d16-d17}, [r2]
   11e2c:	add	r2, r0, #17
   11e30:	orr	r0, r0, #1
   11e34:	vst1.8	{d16-d17}, [r0]
   11e38:	mov	r0, #0
   11e3c:	vst1.8	{d16-d17}, [r2]
   11e40:	str	r0, [sp, #49]	; 0x31
   11e44:	mov	r0, #42	; 0x2a
   11e48:	strb	r0, [sp]
   11e4c:	beq	11f14 <sprintf@plt+0x654>
   11e50:	cmp	r1, #0
   11e54:	beq	11edc <sprintf@plt+0x61c>
   11e58:	ldr	r2, [r4, #8]
   11e5c:	cmp	r2, #54	; 0x36
   11e60:	beq	11e90 <sprintf@plt+0x5d0>
   11e64:	cmp	r2, #52	; 0x34
   11e68:	bne	11f2c <sprintf@plt+0x66c>
   11e6c:	ldrh	r0, [r1, #4]!
   11e70:	cmp	r0, #2
   11e74:	bne	11edc <sprintf@plt+0x61c>
   11e78:	mov	r2, sp
   11e7c:	mov	r0, r1
   11e80:	mov	r1, r2
   11e84:	mov	r2, #53	; 0x35
   11e88:	bl	117dc <rb_inet_ntop_sock@plt>
   11e8c:	b	11edc <sprintf@plt+0x61c>
   11e90:	ldrh	r0, [r1, #4]!
   11e94:	cmp	r0, #10
   11e98:	bne	11edc <sprintf@plt+0x61c>
   11e9c:	mov	r5, sp
   11ea0:	mov	r0, r1
   11ea4:	mov	r2, #53	; 0x35
   11ea8:	mov	r1, r5
   11eac:	bl	117dc <rb_inet_ntop_sock@plt>
   11eb0:	ldrb	r0, [sp]
   11eb4:	cmp	r0, #58	; 0x3a
   11eb8:	bne	11edc <sprintf@plt+0x61c>
   11ebc:	mov	r0, r5
   11ec0:	bl	116c8 <strlen@plt>
   11ec4:	mov	r2, r0
   11ec8:	orr	r0, r5, #1
   11ecc:	mov	r1, r5
   11ed0:	bl	11800 <memmove@plt>
   11ed4:	mov	r0, #48	; 0x30
   11ed8:	strb	r0, [sp]
   11edc:	ldr	r5, [r4, #152]	; 0x98
   11ee0:	cmp	r5, #0
   11ee4:	beq	11f04 <sprintf@plt+0x644>
   11ee8:	ldrb	r0, [sp]
   11eec:	ldr	r2, [r4, #8]
   11ef0:	ldr	r3, [r4, #156]	; 0x9c
   11ef4:	subs	r1, r0, #42	; 0x2a
   11ef8:	mov	r0, sp
   11efc:	movwne	r1, #1
   11f00:	blx	r5
   11f04:	mov	r0, r4
   11f08:	bl	11674 <free@plt>
   11f0c:	sub	sp, fp, #8
   11f10:	pop	{r4, r5, fp, pc}
   11f14:	movw	r1, #33341	; 0x823d
   11f18:	mov	r0, #67	; 0x43
   11f1c:	movt	r1, #1
   11f20:	bl	123d0 <sprintf@plt+0xb10>
   11f24:	mov	r0, #2
   11f28:	bl	118a8 <exit@plt>
   11f2c:	movw	r1, #33385	; 0x8269
   11f30:	mov	r0, #67	; 0x43
   11f34:	movt	r1, #1
   11f38:	bl	123d0 <sprintf@plt+0xb10>
   11f3c:	mov	r0, #2
   11f40:	bl	118a8 <exit@plt>
   11f44:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11f48:	add	fp, sp, #24
   11f4c:	mov	r6, r1
   11f50:	mov	r5, r0
   11f54:	mov	r0, #1
   11f58:	mov	r1, #160	; 0xa0
   11f5c:	mov	r8, r2
   11f60:	bl	115d8 <calloc@plt>
   11f64:	cmp	r0, #0
   11f68:	beq	12000 <sprintf@plt+0x740>
   11f6c:	add	r7, r0, #12
   11f70:	mov	r4, r0
   11f74:	mov	r0, r5
   11f78:	mov	r1, r7
   11f7c:	bl	116bc <rb_inet_pton_sock@plt>
   11f80:	cmp	r0, #0
   11f84:	beq	11fa4 <sprintf@plt+0x6e4>
   11f88:	ldrh	r0, [r7]
   11f8c:	cmp	r0, #2
   11f90:	beq	11fb4 <sprintf@plt+0x6f4>
   11f94:	cmp	r0, #10
   11f98:	bne	11fa4 <sprintf@plt+0x6e4>
   11f9c:	mov	r0, #83	; 0x53
   11fa0:	b	11fb8 <sprintf@plt+0x6f8>
   11fa4:	mov	r0, r4
   11fa8:	bl	11674 <free@plt>
   11fac:	mov	r4, #0
   11fb0:	b	11ff8 <sprintf@plt+0x738>
   11fb4:	mov	r0, #82	; 0x52
   11fb8:	str	r0, [r4, #8]
   11fbc:	movw	r0, #61312	; 0xef80
   11fc0:	movt	r0, #2
   11fc4:	ldrd	r2, [r0]
   11fc8:	adds	r1, r2, #1
   11fcc:	adc	r5, r3, #0
   11fd0:	stm	r0, {r1, r5}
   11fd4:	add	r0, r4, #144	; 0x90
   11fd8:	mov	r1, r4
   11fdc:	stm	r0, {r2, r3, r6, r8}
   11fe0:	movw	r0, #8196	; 0x2004
   11fe4:	movt	r0, #1
   11fe8:	str	r0, [r4, #4]
   11fec:	mov	r0, r7
   11ff0:	str	r4, [r4]
   11ff4:	bl	13308 <sprintf@plt+0x1a48>
   11ff8:	mov	r0, r4
   11ffc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12000:	bl	11788 <rb_outofmemory@plt>
   12004:	push	{r4, r5, r6, sl, fp, lr}
   12008:	add	fp, sp, #16
   1200c:	cmp	r0, #0
   12010:	beq	120a0 <sprintf@plt+0x7e0>
   12014:	mov	r6, r1
   12018:	mov	r4, r0
   1201c:	mov	r5, #0
   12020:	cmp	r1, #0
   12024:	beq	1206c <sprintf@plt+0x7ac>
   12028:	ldr	r2, [r4, #8]
   1202c:	cmp	r2, #83	; 0x53
   12030:	beq	12054 <sprintf@plt+0x794>
   12034:	cmp	r2, #82	; 0x52
   12038:	bne	120b8 <sprintf@plt+0x7f8>
   1203c:	ldr	r0, [r6, #8]
   12040:	ldr	r1, [r4, #16]
   12044:	cmp	r1, r0
   12048:	bne	1206c <sprintf@plt+0x7ac>
   1204c:	ldr	r5, [r6]
   12050:	b	1206c <sprintf@plt+0x7ac>
   12054:	add	r0, r4, #20
   12058:	add	r1, r6, #12
   1205c:	mov	r2, #16
   12060:	bl	1153c <memcmp@plt>
   12064:	cmp	r0, #0
   12068:	ldreq	r5, [r6]
   1206c:	ldr	r6, [r4, #152]	; 0x98
   12070:	cmp	r6, #0
   12074:	beq	12094 <sprintf@plt+0x7d4>
   12078:	ldr	r2, [r4, #8]
   1207c:	ldr	r3, [r4, #156]	; 0x9c
   12080:	cmp	r5, #0
   12084:	mov	r1, r5
   12088:	mov	r0, r5
   1208c:	movwne	r1, #1
   12090:	blx	r6
   12094:	mov	r0, r4
   12098:	pop	{r4, r5, r6, sl, fp, lr}
   1209c:	b	11674 <free@plt>
   120a0:	movw	r1, #33436	; 0x829c
   120a4:	mov	r0, #67	; 0x43
   120a8:	movt	r1, #1
   120ac:	bl	123d0 <sprintf@plt+0xb10>
   120b0:	mov	r0, #2
   120b4:	bl	118a8 <exit@plt>
   120b8:	movw	r1, #33486	; 0x82ce
   120bc:	mov	r0, #67	; 0x43
   120c0:	movt	r1, #1
   120c4:	bl	123d0 <sprintf@plt+0xb10>
   120c8:	mov	r0, #2
   120cc:	bl	118a8 <exit@plt>
   120d0:	mov	r1, #0
   120d4:	str	r1, [r0, #152]	; 0x98
   120d8:	str	r1, [r0, #156]	; 0x9c
   120dc:	bx	lr
   120e0:	push	{r4, r5, r6, sl, fp, lr}
   120e4:	add	fp, sp, #16
   120e8:	ldr	r6, [r1, #4]
   120ec:	mov	r5, r1
   120f0:	mov	r0, r6
   120f4:	bl	116c8 <strlen@plt>
   120f8:	add	r0, r0, #1
   120fc:	bl	117b8 <malloc@plt>
   12100:	cmp	r0, #0
   12104:	beq	12188 <sprintf@plt+0x8c8>
   12108:	mov	r1, r6
   1210c:	mov	r4, r0
   12110:	bl	11728 <strcpy@plt>
   12114:	ldr	r1, [r5, #8]
   12118:	ldr	r0, [r5, #12]
   1211c:	ldrb	r2, [r1]
   12120:	sub	r1, r2, #82	; 0x52
   12124:	cmp	r1, #2
   12128:	bcc	12158 <sprintf@plt+0x898>
   1212c:	mov	r1, #2
   12130:	cmp	r2, #52	; 0x34
   12134:	beq	12144 <sprintf@plt+0x884>
   12138:	cmp	r2, #54	; 0x36
   1213c:	bne	1218c <sprintf@plt+0x8cc>
   12140:	mov	r1, #10
   12144:	movw	r2, #8612	; 0x21a4
   12148:	mov	r3, r4
   1214c:	movt	r2, #1
   12150:	bl	11d50 <sprintf@plt+0x490>
   12154:	b	12168 <sprintf@plt+0x8a8>
   12158:	movw	r1, #8612	; 0x21a4
   1215c:	mov	r2, r4
   12160:	movt	r1, #1
   12164:	bl	11f44 <sprintf@plt+0x684>
   12168:	cmp	r0, #0
   1216c:	popne	{r4, r5, r6, sl, fp, pc}
   12170:	movw	r1, #33543	; 0x8307
   12174:	mov	r0, #67	; 0x43
   12178:	movt	r1, #1
   1217c:	bl	123d0 <sprintf@plt+0xb10>
   12180:	mov	r0, #2
   12184:	bl	118a8 <exit@plt>
   12188:	bl	11788 <rb_outofmemory@plt>
   1218c:	movw	r1, #33213	; 0x81bd
   12190:	mov	r0, #67	; 0x43
   12194:	movt	r1, #1
   12198:	bl	123d0 <sprintf@plt+0xb10>
   1219c:	mov	r0, #2
   121a0:	bl	118a8 <exit@plt>
   121a4:	push	{r4, sl, fp, lr}
   121a8:	add	fp, sp, #8
   121ac:	sub	sp, sp, #8
   121b0:	cmp	r2, #0
   121b4:	movne	r4, r3
   121b8:	cmpne	r3, #0
   121bc:	bne	121d8 <sprintf@plt+0x918>
   121c0:	movw	r1, #33543	; 0x8307
   121c4:	mov	r0, #67	; 0x43
   121c8:	movt	r1, #1
   121cc:	bl	123d0 <sprintf@plt+0xb10>
   121d0:	mov	r0, #2
   121d4:	bl	118a8 <exit@plt>
   121d8:	mov	r3, r2
   121dc:	movw	r2, #44880	; 0xaf50
   121e0:	cmp	r0, #0
   121e4:	movt	r2, #2
   121e8:	cmpne	r1, #0
   121ec:	ldr	r2, [r2]
   121f0:	bne	12200 <sprintf@plt+0x940>
   121f4:	movw	r1, #33586	; 0x8332
   121f8:	movt	r1, #1
   121fc:	b	1220c <sprintf@plt+0x94c>
   12200:	movw	r1, #33598	; 0x833e
   12204:	str	r0, [sp]
   12208:	movt	r1, #1
   1220c:	mov	r0, r2
   12210:	mov	r2, r4
   12214:	bl	11818 <rb_helper_write@plt>
   12218:	mov	r0, r4
   1221c:	sub	sp, fp, #8
   12220:	pop	{r4, sl, fp, lr}
   12224:	b	11674 <free@plt>
   12228:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1222c:	add	fp, sp, #28
   12230:	sub	sp, sp, #612	; 0x264
   12234:	mov	r5, r0
   12238:	movw	r0, #61408	; 0xefe0
   1223c:	mov	r4, r1
   12240:	movt	r0, #2
   12244:	ldr	r0, [r0]
   12248:	cmp	r0, #0
   1224c:	beq	1233c <sprintf@plt+0xa7c>
   12250:	cmp	r0, #1
   12254:	blt	122f4 <sprintf@plt+0xa34>
   12258:	movw	r6, #62112	; 0xf2a0
   1225c:	str	r4, [sp, #8]
   12260:	movw	r4, #33337	; 0x8239
   12264:	mov	r9, #0
   12268:	add	r7, sp, #15
   1226c:	add	r8, sp, #68	; 0x44
   12270:	mov	sl, #0
   12274:	str	r5, [sp, #4]
   12278:	movt	r6, #2
   1227c:	movt	r4, #1
   12280:	mov	r0, r6
   12284:	mov	r1, r7
   12288:	mov	r2, #53	; 0x35
   1228c:	bl	117dc <rb_inet_ntop_sock@plt>
   12290:	ldrb	r0, [sp, #15]
   12294:	cmp	r0, #0
   12298:	beq	12314 <sprintf@plt+0xa54>
   1229c:	mov	r0, r7
   122a0:	bl	116c8 <strlen@plt>
   122a4:	mov	r5, r0
   122a8:	add	r0, r8, r9
   122ac:	rsb	r1, r9, #540	; 0x21c
   122b0:	mov	r2, r4
   122b4:	mov	r3, r7
   122b8:	bl	11848 <snprintf@plt>
   122bc:	movw	r1, #61408	; 0xefe0
   122c0:	add	r0, r9, r5
   122c4:	add	sl, sl, #1
   122c8:	add	r6, r6, #128	; 0x80
   122cc:	movt	r1, #2
   122d0:	add	r9, r0, #1
   122d4:	ldr	r1, [r1]
   122d8:	cmp	sl, r1
   122dc:	blt	12280 <sprintf@plt+0x9c0>
   122e0:	ldr	r4, [sp, #8]
   122e4:	ldr	r5, [sp, #4]
   122e8:	cmp	r9, #0
   122ec:	movne	r1, #0
   122f0:	strbne	r1, [r8, r0]
   122f4:	movw	r2, #36924	; 0x903c
   122f8:	add	r3, sp, #68	; 0x44
   122fc:	mov	r0, r5
   12300:	mov	r1, r4
   12304:	movt	r2, #1
   12308:	bl	1243c <sprintf@plt+0xb7c>
   1230c:	sub	sp, fp, #28
   12310:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12314:	movw	r1, #33298	; 0x8212
   12318:	mov	r0, #67	; 0x43
   1231c:	movt	r1, #1
   12320:	bl	123d0 <sprintf@plt+0xb10>
   12324:	ldmib	sp, {r0, r1}
   12328:	movw	r2, #33319	; 0x8227
   1232c:	movt	r2, #1
   12330:	bl	124a4 <sprintf@plt+0xbe4>
   12334:	mov	r0, #2
   12338:	bl	118a8 <exit@plt>
   1233c:	movw	r1, #33262	; 0x81ee
   12340:	mov	r0, #67	; 0x43
   12344:	movt	r1, #1
   12348:	bl	123d0 <sprintf@plt+0xb10>
   1234c:	movw	r2, #33284	; 0x8204
   12350:	mov	r0, r5
   12354:	mov	r1, r4
   12358:	movt	r2, #1
   1235c:	b	12330 <sprintf@plt+0xa70>
   12360:	b	131f8 <sprintf@plt+0x1938>
   12364:	sub	sp, sp, #8
   12368:	push	{r4, r5, r6, r7, fp, lr}
   1236c:	add	fp, sp, #16
   12370:	sub	sp, sp, #520	; 0x208
   12374:	mov	ip, r1
   12378:	add	r5, sp, #8
   1237c:	mov	r4, r0
   12380:	str	r3, [fp, #12]
   12384:	str	r2, [fp, #8]
   12388:	add	r3, fp, #8
   1238c:	mov	r1, #512	; 0x200
   12390:	mov	r0, r5
   12394:	mov	r2, ip
   12398:	str	r3, [sp, #4]
   1239c:	bl	11584 <vsnprintf@plt>
   123a0:	movw	r0, #44880	; 0xaf50
   123a4:	movw	r1, #33611	; 0x834b
   123a8:	mov	r2, r4
   123ac:	mov	r3, r5
   123b0:	movt	r0, #2
   123b4:	movt	r1, #1
   123b8:	ldr	r0, [r0]
   123bc:	bl	11818 <rb_helper_write@plt>
   123c0:	sub	sp, fp, #16
   123c4:	pop	{r4, r5, r6, r7, fp, lr}
   123c8:	add	sp, sp, #8
   123cc:	bx	lr
   123d0:	sub	sp, sp, #8
   123d4:	push	{r4, r5, r6, r7, fp, lr}
   123d8:	add	fp, sp, #16
   123dc:	sub	sp, sp, #520	; 0x208
   123e0:	mov	ip, r1
   123e4:	add	r5, sp, #8
   123e8:	mov	r4, r0
   123ec:	str	r3, [fp, #12]
   123f0:	str	r2, [fp, #8]
   123f4:	add	r3, fp, #8
   123f8:	mov	r1, #512	; 0x200
   123fc:	mov	r0, r5
   12400:	mov	r2, ip
   12404:	str	r3, [sp, #4]
   12408:	bl	11584 <vsnprintf@plt>
   1240c:	movw	r0, #44880	; 0xaf50
   12410:	movw	r1, #33620	; 0x8354
   12414:	mov	r2, r4
   12418:	mov	r3, r5
   1241c:	movt	r0, #2
   12420:	movt	r1, #1
   12424:	ldr	r0, [r0]
   12428:	bl	11818 <rb_helper_write@plt>
   1242c:	sub	sp, fp, #16
   12430:	pop	{r4, r5, r6, r7, fp, lr}
   12434:	add	sp, sp, #8
   12438:	bx	lr
   1243c:	sub	sp, sp, #4
   12440:	push	{r4, r5, r6, sl, fp, lr}
   12444:	add	fp, sp, #16
   12448:	sub	sp, sp, #524	; 0x20c
   1244c:	add	r6, sp, #12
   12450:	mov	r4, r1
   12454:	mov	r5, r0
   12458:	str	r3, [fp, #8]
   1245c:	add	r3, fp, #8
   12460:	mov	r1, #512	; 0x200
   12464:	mov	r0, r6
   12468:	str	r3, [sp, #8]
   1246c:	bl	11584 <vsnprintf@plt>
   12470:	movw	r0, #44880	; 0xaf50
   12474:	movw	r1, #33629	; 0x835d
   12478:	mov	r2, r5
   1247c:	mov	r3, r4
   12480:	str	r6, [sp]
   12484:	movt	r0, #2
   12488:	movt	r1, #1
   1248c:	ldr	r0, [r0]
   12490:	bl	11818 <rb_helper_write@plt>
   12494:	sub	sp, fp, #16
   12498:	pop	{r4, r5, r6, sl, fp, lr}
   1249c:	add	sp, sp, #4
   124a0:	bx	lr
   124a4:	sub	sp, sp, #4
   124a8:	push	{r4, r5, r6, sl, fp, lr}
   124ac:	add	fp, sp, #16
   124b0:	sub	sp, sp, #524	; 0x20c
   124b4:	add	r6, sp, #12
   124b8:	mov	r4, r1
   124bc:	mov	r5, r0
   124c0:	str	r3, [fp, #8]
   124c4:	add	r3, fp, #8
   124c8:	mov	r1, #512	; 0x200
   124cc:	mov	r0, r6
   124d0:	str	r3, [sp, #8]
   124d4:	bl	11584 <vsnprintf@plt>
   124d8:	movw	r0, #44880	; 0xaf50
   124dc:	movw	r1, #33640	; 0x8368
   124e0:	mov	r2, r5
   124e4:	mov	r3, r4
   124e8:	str	r6, [sp]
   124ec:	movt	r0, #2
   124f0:	movt	r1, #1
   124f4:	ldr	r0, [r0]
   124f8:	bl	11818 <rb_helper_write@plt>
   124fc:	sub	sp, fp, #16
   12500:	pop	{r4, r5, r6, sl, fp, lr}
   12504:	add	sp, sp, #4
   12508:	bx	lr
   1250c:	mov	r2, r0
   12510:	movw	r0, #44880	; 0xaf50
   12514:	mov	r3, r1
   12518:	movw	r1, #33651	; 0x8373
   1251c:	movt	r0, #2
   12520:	movt	r1, #1
   12524:	ldr	r0, [r0]
   12528:	b	11818 <rb_helper_write@plt>
   1252c:	push	{fp, lr}
   12530:	mov	fp, sp
   12534:	movw	r0, #33659	; 0x837b
   12538:	movw	r1, #9648	; 0x25b0
   1253c:	movt	r0, #1
   12540:	movt	r1, #1
   12544:	bl	117f4 <rb_dictionary_create@plt>
   12548:	movw	r1, #61820	; 0xf17c
   1254c:	mov	r2, #0
   12550:	mov	r3, #1
   12554:	movt	r1, #2
   12558:	str	r0, [r1]
   1255c:	movw	r0, #33680	; 0x8390
   12560:	movw	r1, #9656	; 0x25b8
   12564:	movt	r0, #1
   12568:	movt	r1, #1
   1256c:	bl	11500 <rb_event_addish@plt>
   12570:	movw	r1, #61320	; 0xef88
   12574:	movt	r1, #2
   12578:	str	r0, [r1]
   1257c:	movw	r0, #44456	; 0xada8
   12580:	movt	r0, #2
   12584:	bl	126b4 <sprintf@plt+0xdf4>
   12588:	movw	r0, #44808	; 0xaf08
   1258c:	movt	r0, #2
   12590:	bl	126b4 <sprintf@plt+0xdf4>
   12594:	movw	r0, #44648	; 0xae68
   12598:	movt	r0, #2
   1259c:	bl	126b4 <sprintf@plt+0xdf4>
   125a0:	movw	r0, #44556	; 0xae0c
   125a4:	movt	r0, #2
   125a8:	pop	{fp, lr}
   125ac:	b	126b4 <sprintf@plt+0xdf4>
   125b0:	sub	r0, r1, r0
   125b4:	bx	lr
   125b8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   125bc:	add	fp, sp, #24
   125c0:	sub	sp, sp, #8
   125c4:	bl	116d4 <rb_current_time@plt>
   125c8:	movw	r9, #61820	; 0xf17c
   125cc:	mov	r4, r0
   125d0:	mov	r5, sp
   125d4:	movt	r9, #2
   125d8:	mov	r1, r5
   125dc:	ldr	r0, [r9]
   125e0:	bl	116b0 <rb_dictionary_foreach_start@plt>
   125e4:	ldr	r0, [r9]
   125e8:	mov	r1, r5
   125ec:	bl	115c0 <rb_dictionary_foreach_cur@plt>
   125f0:	cmp	r0, #0
   125f4:	beq	126ac <sprintf@plt+0xdec>
   125f8:	movw	r8, #61824	; 0xf180
   125fc:	mov	r6, r0
   12600:	mov	r5, sp
   12604:	movt	r8, #2
   12608:	ldr	r0, [r6, #460]	; 0x1cc
   1260c:	add	r0, r0, #1
   12610:	str	r0, [r6, #460]	; 0x1cc
   12614:	ldr	r7, [r8]
   12618:	cmp	r7, #0
   1261c:	beq	12674 <sprintf@plt+0xdb4>
   12620:	ldr	r0, [r7]
   12624:	ldr	r1, [r6, #464]	; 0x1d0
   12628:	ldr	r2, [r0, #12]
   1262c:	add	r1, r1, r2, lsl #4
   12630:	ldr	r2, [r1, #12]
   12634:	cmp	r2, #1
   12638:	bne	12664 <sprintf@plt+0xda4>
   1263c:	ldr	r1, [r1, #4]
   12640:	cmp	r1, r4
   12644:	bge	12664 <sprintf@plt+0xda4>
   12648:	cmp	r1, #1
   1264c:	blt	12664 <sprintf@plt+0xda4>
   12650:	ldr	r1, [r0, #40]	; 0x28
   12654:	cmp	r1, #0
   12658:	beq	12664 <sprintf@plt+0xda4>
   1265c:	mov	r0, r6
   12660:	blx	r1
   12664:	ldr	r7, [r7, #8]
   12668:	cmp	r7, #0
   1266c:	bne	12620 <sprintf@plt+0xd60>
   12670:	ldr	r0, [r6, #460]	; 0x1cc
   12674:	subs	r0, r0, #1
   12678:	str	r0, [r6, #460]	; 0x1cc
   1267c:	bne	12688 <sprintf@plt+0xdc8>
   12680:	mov	r0, r6
   12684:	bl	12be8 <sprintf@plt+0x1328>
   12688:	ldr	r0, [r9]
   1268c:	mov	r1, r5
   12690:	bl	11668 <rb_dictionary_foreach_next@plt>
   12694:	ldr	r0, [r9]
   12698:	mov	r1, r5
   1269c:	bl	115c0 <rb_dictionary_foreach_cur@plt>
   126a0:	mov	r6, r0
   126a4:	cmp	r0, #0
   126a8:	bne	12608 <sprintf@plt+0xd48>
   126ac:	sub	sp, fp, #24
   126b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   126b4:	push	{r4, r5, r6, sl, fp, lr}
   126b8:	add	fp, sp, #16
   126bc:	movw	r6, #61324	; 0xef8c
   126c0:	mov	r4, r0
   126c4:	movt	r6, #2
   126c8:	ldr	r2, [r6, #8]
   126cc:	cmp	r2, #0
   126d0:	beq	127bc <sprintf@plt+0xefc>
   126d4:	ldr	r0, [r6]
   126d8:	ldr	r3, [r0]
   126dc:	cmp	r0, #0
   126e0:	str	r3, [r4, #12]
   126e4:	beq	1281c <sprintf@plt+0xf5c>
   126e8:	ldr	r3, [r0, #8]
   126ec:	ldr	r5, [r0, #4]
   126f0:	mov	r1, r6
   126f4:	cmp	r3, #0
   126f8:	streq	r5, [r6, #4]
   126fc:	strne	r5, [r3, #4]
   12700:	ldrne	r5, [r0, #4]
   12704:	cmp	r5, #0
   12708:	addne	r1, r5, #8
   1270c:	cmp	r5, #0
   12710:	str	r3, [r1]
   12714:	mov	r1, #0
   12718:	str	r1, [r0, #4]
   1271c:	str	r1, [r0, #8]
   12720:	sub	r1, r2, #1
   12724:	moveq	r0, r3
   12728:	str	r1, [r6, #8]
   1272c:	bl	116f8 <rb_free_rb_dlink_node@plt>
   12730:	ldr	r5, [r4, #56]	; 0x38
   12734:	cmp	r5, #0
   12738:	ldrne	r1, [r5]
   1273c:	cmpne	r1, #0
   12740:	beq	12764 <sprintf@plt+0xea4>
   12744:	movw	r6, #61816	; 0xf178
   12748:	movt	r6, #2
   1274c:	ldr	r0, [r6]
   12750:	mov	r2, r5
   12754:	bl	117a0 <rb_dictionary_add@plt>
   12758:	ldr	r1, [r5, #12]!
   1275c:	cmp	r1, #0
   12760:	bne	1274c <sprintf@plt+0xe8c>
   12764:	ldrb	r0, [r4, #48]	; 0x30
   12768:	cmp	r0, #0
   1276c:	ldrne	r1, [r4, #52]	; 0x34
   12770:	movwne	r2, #42348	; 0xa56c
   12774:	movtne	r2, #2
   12778:	strne	r1, [r2, r0, lsl #2]
   1277c:	ldr	r0, [r4, #24]
   12780:	cmp	r0, #0
   12784:	beq	1278c <sprintf@plt+0xecc>
   12788:	blx	r0
   1278c:	mov	r0, #0
   12790:	str	r0, [r4, #4]
   12794:	movw	r0, #61824	; 0xf180
   12798:	str	r4, [r4]
   1279c:	movt	r0, #2
   127a0:	ldr	r1, [r0]
   127a4:	cmp	r1, #0
   127a8:	str	r1, [r4, #8]
   127ac:	beq	127e8 <sprintf@plt+0xf28>
   127b0:	add	r1, r1, #4
   127b4:	str	r4, [r1]
   127b8:	b	127f8 <sprintf@plt+0xf38>
   127bc:	movw	r1, #61336	; 0xef98
   127c0:	movt	r1, #2
   127c4:	ldr	r0, [r1]
   127c8:	cmp	r0, #32
   127cc:	cmnne	r0, #1
   127d0:	bne	1280c <sprintf@plt+0xf4c>
   127d4:	movw	r1, #33778	; 0x83f2
   127d8:	mov	r0, #87	; 0x57
   127dc:	movt	r1, #1
   127e0:	pop	{r4, r5, r6, sl, fp, lr}
   127e4:	b	123d0 <sprintf@plt+0xb10>
   127e8:	mov	r1, r0
   127ec:	ldr	r2, [r1, #4]!
   127f0:	cmp	r2, #0
   127f4:	streq	r4, [r1]
   127f8:	str	r4, [r0]
   127fc:	ldr	r1, [r0, #8]
   12800:	add	r1, r1, #1
   12804:	str	r1, [r0, #8]
   12808:	pop	{r4, r5, r6, sl, fp, pc}
   1280c:	add	r2, r0, #1
   12810:	str	r2, [r1]
   12814:	str	r0, [r4, #12]
   12818:	b	12730 <sprintf@plt+0xe70>
   1281c:	movw	r0, #34072	; 0x8518
   12820:	movw	r1, #34082	; 0x8522
   12824:	movw	r3, #34110	; 0x853e
   12828:	mov	r2, #235	; 0xeb
   1282c:	movt	r0, #1
   12830:	movt	r1, #1
   12834:	movt	r3, #1
   12838:	bl	11638 <__assert_fail@plt>
   1283c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12840:	add	fp, sp, #24
   12844:	sub	sp, sp, #8
   12848:	movw	r9, #61820	; 0xf17c
   1284c:	mov	r5, sp
   12850:	movt	r9, #2
   12854:	mov	r1, r5
   12858:	ldr	r0, [r9]
   1285c:	bl	116b0 <rb_dictionary_foreach_start@plt>
   12860:	ldr	r0, [r9]
   12864:	mov	r1, r5
   12868:	bl	115c0 <rb_dictionary_foreach_cur@plt>
   1286c:	cmp	r0, #0
   12870:	beq	128e8 <sprintf@plt+0x1028>
   12874:	movw	r8, #33703	; 0x83a7
   12878:	movw	r5, #33711	; 0x83af
   1287c:	mov	r7, r0
   12880:	mov	r6, sp
   12884:	movt	r8, #1
   12888:	movt	r5, #1
   1288c:	ldr	r0, [r7, #460]	; 0x1cc
   12890:	mvn	r1, #0
   12894:	mov	r2, r8
   12898:	mov	r3, r5
   1289c:	add	r0, r0, #1
   128a0:	str	r0, [r7, #460]	; 0x1cc
   128a4:	mov	r0, r7
   128a8:	bl	12988 <sprintf@plt+0x10c8>
   128ac:	ldr	r0, [r7, #460]	; 0x1cc
   128b0:	subs	r0, r0, #1
   128b4:	str	r0, [r7, #460]	; 0x1cc
   128b8:	bne	128c4 <sprintf@plt+0x1004>
   128bc:	mov	r0, r7
   128c0:	bl	12be8 <sprintf@plt+0x1328>
   128c4:	ldr	r0, [r9]
   128c8:	mov	r1, r6
   128cc:	bl	11668 <rb_dictionary_foreach_next@plt>
   128d0:	ldr	r0, [r9]
   128d4:	mov	r1, r6
   128d8:	bl	115c0 <rb_dictionary_foreach_cur@plt>
   128dc:	mov	r7, r0
   128e0:	cmp	r0, #0
   128e4:	bne	1288c <sprintf@plt+0xfcc>
   128e8:	movw	r5, #61824	; 0xf180
   128ec:	movt	r5, #2
   128f0:	ldr	r7, [r5]
   128f4:	cmp	r7, #0
   128f8:	beq	12960 <sprintf@plt+0x10a0>
   128fc:	mov	r6, #0
   12900:	ldr	r0, [r7]
   12904:	ldr	r4, [r7, #8]
   12908:	ldr	r0, [r0, #28]
   1290c:	cmp	r0, #0
   12910:	beq	12918 <sprintf@plt+0x1058>
   12914:	blx	r0
   12918:	ldr	r0, [r7, #8]
   1291c:	ldr	r1, [r7, #4]
   12920:	mov	r2, r5
   12924:	cmp	r0, #0
   12928:	streq	r1, [r5, #4]
   1292c:	strne	r1, [r0, #4]
   12930:	ldrne	r1, [r7, #4]
   12934:	cmp	r1, #0
   12938:	addne	r2, r1, #8
   1293c:	cmp	r4, #0
   12940:	str	r0, [r2]
   12944:	str	r6, [r7, #4]
   12948:	str	r6, [r7, #8]
   1294c:	mov	r7, r4
   12950:	ldr	r0, [r5, #8]
   12954:	sub	r0, r0, #1
   12958:	str	r0, [r5, #8]
   1295c:	bne	12900 <sprintf@plt+0x1040>
   12960:	ldr	r0, [r9]
   12964:	mov	r1, #0
   12968:	mov	r2, #0
   1296c:	bl	11740 <rb_dictionary_destroy@plt>
   12970:	movw	r0, #61320	; 0xef88
   12974:	movt	r0, #2
   12978:	ldr	r0, [r0]
   1297c:	bl	11554 <rb_event_delete@plt>
   12980:	sub	sp, fp, #24
   12984:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12988:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1298c:	add	fp, sp, #24
   12990:	sub	sp, sp, #536	; 0x218
   12994:	mov	r6, r3
   12998:	add	r8, sp, #24
   1299c:	mov	r7, r2
   129a0:	mov	r5, r1
   129a4:	mov	r4, r0
   129a8:	add	r3, fp, #8
   129ac:	mov	r1, #512	; 0x200
   129b0:	mov	r0, r8
   129b4:	mov	r2, r6
   129b8:	str	r3, [sp, #20]
   129bc:	bl	11584 <vsnprintf@plt>
   129c0:	movw	r0, #44880	; 0xaf50
   129c4:	ldr	r2, [r4]
   129c8:	cmn	r5, #1
   129cc:	movt	r0, #2
   129d0:	ldr	r0, [r0]
   129d4:	beq	12a34 <sprintf@plt+0x1174>
   129d8:	ldr	r1, [r4, #464]	; 0x1d0
   129dc:	cmp	r7, #0
   129e0:	add	r6, r4, #440	; 0x1b8
   129e4:	ldr	r1, [r1, r5, lsl #4]
   129e8:	ldrb	r3, [r1, #20]
   129ec:	movw	r1, #33596	; 0x833c
   129f0:	movt	r1, #1
   129f4:	movne	r1, r7
   129f8:	add	r7, r4, #376	; 0x178
   129fc:	stm	sp, {r6, r7}
   12a00:	str	r1, [sp, #8]
   12a04:	movw	r1, #33824	; 0x8420
   12a08:	str	r8, [sp, #12]
   12a0c:	movt	r1, #1
   12a10:	bl	11818 <rb_helper_write@plt>
   12a14:	ldr	r0, [r4, #464]	; 0x1d0
   12a18:	mov	r1, #2
   12a1c:	add	r0, r0, r5, lsl #4
   12a20:	str	r1, [r0, #12]
   12a24:	ldr	r0, [r4, #456]	; 0x1c8
   12a28:	sub	r0, r0, #1
   12a2c:	str	r0, [r4, #456]	; 0x1c8
   12a30:	b	12a6c <sprintf@plt+0x11ac>
   12a34:	movw	r1, #33596	; 0x833c
   12a38:	cmp	r7, #0
   12a3c:	add	r3, r4, #376	; 0x178
   12a40:	str	r8, [sp, #12]
   12a44:	movt	r1, #1
   12a48:	str	r3, [sp, #4]
   12a4c:	mov	r3, #42	; 0x2a
   12a50:	movne	r1, r7
   12a54:	add	r7, r4, #440	; 0x1b8
   12a58:	str	r1, [sp, #8]
   12a5c:	movw	r1, #33824	; 0x8420
   12a60:	str	r7, [sp]
   12a64:	movt	r1, #1
   12a68:	bl	11818 <rb_helper_write@plt>
   12a6c:	mov	r0, r4
   12a70:	bl	12c24 <sprintf@plt+0x1364>
   12a74:	sub	sp, fp, #24
   12a78:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12a7c:	push	{r4, r5, r6, sl, fp, lr}
   12a80:	add	fp, sp, #16
   12a84:	mov	r4, r0
   12a88:	ldr	r0, [r0, #56]	; 0x38
   12a8c:	cmp	r0, #0
   12a90:	ldrne	r1, [r0]
   12a94:	cmpne	r1, #0
   12a98:	beq	12abc <sprintf@plt+0x11fc>
   12a9c:	movw	r6, #61816	; 0xf178
   12aa0:	add	r5, r0, #12
   12aa4:	movt	r6, #2
   12aa8:	ldr	r0, [r6]
   12aac:	bl	116e0 <rb_dictionary_delete@plt>
   12ab0:	ldr	r1, [r5], #12
   12ab4:	cmp	r1, #0
   12ab8:	bne	12aa8 <sprintf@plt+0x11e8>
   12abc:	ldrb	r0, [r4, #48]	; 0x30
   12ac0:	cmp	r0, #0
   12ac4:	movwne	r1, #42348	; 0xa56c
   12ac8:	movne	r2, #0
   12acc:	movtne	r1, #2
   12ad0:	strne	r2, [r1, r0, lsl #2]
   12ad4:	ldr	r0, [r4, #28]
   12ad8:	cmp	r0, #0
   12adc:	beq	12ae4 <sprintf@plt+0x1224>
   12ae0:	blx	r0
   12ae4:	ldr	r0, [r4, #8]
   12ae8:	ldr	r1, [r4, #4]
   12aec:	cmp	r0, #0
   12af0:	beq	12b00 <sprintf@plt+0x1240>
   12af4:	str	r1, [r0, #4]
   12af8:	ldr	r1, [r4, #4]
   12afc:	b	12b0c <sprintf@plt+0x124c>
   12b00:	movw	r2, #61824	; 0xf180
   12b04:	movt	r2, #2
   12b08:	str	r1, [r2, #4]
   12b0c:	movw	r2, #61824	; 0xf180
   12b10:	cmp	r1, #0
   12b14:	movt	r2, #2
   12b18:	mov	r3, r2
   12b1c:	addne	r3, r1, #8
   12b20:	str	r0, [r3]
   12b24:	mov	r0, #0
   12b28:	str	r0, [r4, #4]
   12b2c:	str	r0, [r4, #8]
   12b30:	ldr	r0, [r2, #8]
   12b34:	sub	r0, r0, #1
   12b38:	str	r0, [r2, #8]
   12b3c:	ldr	r4, [r4, #12]
   12b40:	bl	1183c <rb_make_rb_dlink_node@plt>
   12b44:	cmp	r4, #0
   12b48:	beq	12ba8 <sprintf@plt+0x12e8>
   12b4c:	cmp	r0, #0
   12b50:	beq	12bc8 <sprintf@plt+0x1308>
   12b54:	mov	r1, #0
   12b58:	str	r1, [r0, #4]
   12b5c:	movw	r1, #61324	; 0xef8c
   12b60:	str	r4, [r0]
   12b64:	movt	r1, #2
   12b68:	ldr	r2, [r1]
   12b6c:	cmp	r2, #0
   12b70:	str	r2, [r0, #8]
   12b74:	beq	12b84 <sprintf@plt+0x12c4>
   12b78:	add	r2, r2, #4
   12b7c:	str	r0, [r2]
   12b80:	b	12b94 <sprintf@plt+0x12d4>
   12b84:	mov	r2, r1
   12b88:	ldr	r3, [r2, #4]!
   12b8c:	cmp	r3, #0
   12b90:	streq	r0, [r2]
   12b94:	str	r0, [r1]
   12b98:	ldr	r0, [r1, #8]
   12b9c:	add	r0, r0, #1
   12ba0:	str	r0, [r1, #8]
   12ba4:	pop	{r4, r5, r6, sl, fp, pc}
   12ba8:	movw	r0, #34164	; 0x8574
   12bac:	movw	r1, #34082	; 0x8522
   12bb0:	movw	r3, #34177	; 0x8581
   12bb4:	mov	r2, #143	; 0x8f
   12bb8:	movt	r0, #1
   12bbc:	movt	r1, #1
   12bc0:	movt	r3, #1
   12bc4:	bl	11638 <__assert_fail@plt>
   12bc8:	movw	r0, #34072	; 0x8518
   12bcc:	movw	r1, #34082	; 0x8522
   12bd0:	movw	r3, #34177	; 0x8581
   12bd4:	mov	r2, #144	; 0x90
   12bd8:	movt	r0, #1
   12bdc:	movt	r1, #1
   12be0:	movt	r3, #1
   12be4:	bl	11638 <__assert_fail@plt>
   12be8:	push	{r4, sl, fp, lr}
   12bec:	add	fp, sp, #8
   12bf0:	mov	r4, r0
   12bf4:	ldr	r1, [r0]
   12bf8:	movw	r0, #61820	; 0xf17c
   12bfc:	movt	r0, #2
   12c00:	ldr	r0, [r0]
   12c04:	bl	116e0 <rb_dictionary_delete@plt>
   12c08:	ldr	r0, [r4, #464]	; 0x1d0
   12c0c:	cmp	r0, #0
   12c10:	beq	12c18 <sprintf@plt+0x1358>
   12c14:	bl	11674 <free@plt>
   12c18:	mov	r0, r4
   12c1c:	pop	{r4, sl, fp, lr}
   12c20:	b	11674 <free@plt>
   12c24:	push	{r4, r5, fp, lr}
   12c28:	add	fp, sp, #8
   12c2c:	mov	r4, r0
   12c30:	ldrb	r0, [r0, #452]	; 0x1c4
   12c34:	cmp	r0, #0
   12c38:	beq	12c40 <sprintf@plt+0x1380>
   12c3c:	pop	{r4, r5, fp, pc}
   12c40:	mov	r0, #1
   12c44:	strb	r0, [r4, #452]	; 0x1c4
   12c48:	ldr	r0, [r4, #456]	; 0x1c8
   12c4c:	cmp	r0, #0
   12c50:	beq	12c3c <sprintf@plt+0x137c>
   12c54:	movw	r0, #61824	; 0xf180
   12c58:	movt	r0, #2
   12c5c:	ldr	r5, [r0]
   12c60:	cmp	r5, #0
   12c64:	popeq	{r4, r5, fp, pc}
   12c68:	ldr	r0, [r5]
   12c6c:	ldr	r1, [r0, #36]	; 0x24
   12c70:	cmp	r1, #0
   12c74:	beq	12c98 <sprintf@plt+0x13d8>
   12c78:	ldr	r0, [r0, #12]
   12c7c:	ldr	r2, [r4, #464]	; 0x1d0
   12c80:	add	r0, r2, r0, lsl #4
   12c84:	ldr	r0, [r0, #12]
   12c88:	cmp	r0, #1
   12c8c:	bne	12c98 <sprintf@plt+0x13d8>
   12c90:	mov	r0, r4
   12c94:	blx	r1
   12c98:	ldr	r5, [r5, #8]
   12c9c:	b	12c60 <sprintf@plt+0x13a0>
   12ca0:	push	{r4, r5, r6, sl, fp, lr}
   12ca4:	add	fp, sp, #16
   12ca8:	sub	sp, sp, #8
   12cac:	mov	r4, r0
   12cb0:	ldr	r0, [r0, #464]	; 0x1d0
   12cb4:	mov	r5, r1
   12cb8:	add	r0, r0, r1, lsl #4
   12cbc:	mov	r1, #2
   12cc0:	str	r1, [r0, #12]
   12cc4:	ldr	r0, [r4, #456]	; 0x1c8
   12cc8:	subs	r0, r0, #1
   12ccc:	str	r0, [r4, #456]	; 0x1c8
   12cd0:	bne	12ce0 <sprintf@plt+0x1420>
   12cd4:	ldrb	r0, [r4, #451]	; 0x1c3
   12cd8:	cmp	r0, #0
   12cdc:	beq	12d34 <sprintf@plt+0x1474>
   12ce0:	movw	r0, #61824	; 0xf180
   12ce4:	movt	r0, #2
   12ce8:	ldr	r6, [r0]
   12cec:	cmp	r6, #0
   12cf0:	subeq	sp, fp, #16
   12cf4:	popeq	{r4, r5, r6, sl, fp, pc}
   12cf8:	ldr	r0, [r6]
   12cfc:	ldr	r2, [r0, #44]	; 0x2c
   12d00:	cmp	r2, #0
   12d04:	beq	12d2c <sprintf@plt+0x146c>
   12d08:	ldr	r0, [r0, #12]
   12d0c:	ldr	r1, [r4, #464]	; 0x1d0
   12d10:	add	r0, r1, r0, lsl #4
   12d14:	ldr	r0, [r0, #12]
   12d18:	cmp	r0, #1
   12d1c:	bne	12d2c <sprintf@plt+0x146c>
   12d20:	mov	r0, r4
   12d24:	mov	r1, r5
   12d28:	blx	r2
   12d2c:	ldr	r6, [r6, #8]
   12d30:	b	12cec <sprintf@plt+0x142c>
   12d34:	mov	r1, r4
   12d38:	movw	r0, #44880	; 0xaf50
   12d3c:	add	r3, r4, #440	; 0x1b8
   12d40:	ldr	r2, [r1], #376	; 0x178
   12d44:	movt	r0, #2
   12d48:	ldr	r0, [r0]
   12d4c:	str	r1, [sp]
   12d50:	movw	r1, #33845	; 0x8435
   12d54:	movt	r1, #1
   12d58:	bl	11818 <rb_helper_write@plt>
   12d5c:	mov	r0, r4
   12d60:	sub	sp, fp, #16
   12d64:	pop	{r4, r5, r6, sl, fp, lr}
   12d68:	b	12c24 <sprintf@plt+0x1364>
   12d6c:	push	{r4, sl, fp, lr}
   12d70:	add	fp, sp, #8
   12d74:	sub	sp, sp, #8
   12d78:	mov	r4, r0
   12d7c:	movw	r0, #44880	; 0xaf50
   12d80:	mov	r1, r4
   12d84:	movt	r0, #2
   12d88:	add	r3, r4, #440	; 0x1b8
   12d8c:	ldr	r2, [r1], #376	; 0x178
   12d90:	ldr	r0, [r0]
   12d94:	str	r1, [sp]
   12d98:	movw	r1, #33845	; 0x8435
   12d9c:	movt	r1, #1
   12da0:	bl	11818 <rb_helper_write@plt>
   12da4:	mov	r0, r4
   12da8:	sub	sp, fp, #8
   12dac:	pop	{r4, sl, fp, lr}
   12db0:	b	12c24 <sprintf@plt+0x1364>
   12db4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12db8:	add	fp, sp, #28
   12dbc:	sub	sp, sp, #28
   12dc0:	mov	r2, r0
   12dc4:	cmp	r0, #5
   12dc8:	ble	1304c <sprintf@plt+0x178c>
   12dcc:	cmp	r2, #6
   12dd0:	ldr	sl, [r1, #4]
   12dd4:	ldr	r9, [r1, #8]
   12dd8:	ldr	r7, [r1, #12]
   12ddc:	ldr	r5, [r1, #16]
   12de0:	ldr	r4, [r1, #20]
   12de4:	mov	r2, #16
   12de8:	ldrne	r6, [r1, #24]
   12dec:	mov	r1, #0
   12df0:	mov	r0, sl
   12df4:	movweq	r6, #34296	; 0x85f8
   12df8:	movteq	r6, #1
   12dfc:	bl	1165c <strtoull@plt>
   12e00:	mov	r8, r0
   12e04:	subs	r0, r0, #1
   12e08:	mvn	r2, #1
   12e0c:	sbc	r1, r1, #0
   12e10:	subs	r0, r2, r0
   12e14:	rscs	r0, r1, #0
   12e18:	bcc	13034 <sprintf@plt+0x1774>
   12e1c:	mov	r0, #1
   12e20:	mov	r1, #468	; 0x1d4
   12e24:	str	r6, [sp, #8]
   12e28:	str	r9, [sp, #12]
   12e2c:	str	r5, [sp, #16]
   12e30:	str	r7, [sp, #20]
   12e34:	str	r4, [sp, #24]
   12e38:	mov	r5, #1
   12e3c:	bl	115d8 <calloc@plt>
   12e40:	cmp	r0, #0
   12e44:	beq	1305c <sprintf@plt+0x179c>
   12e48:	movw	r9, #61820	; 0xf17c
   12e4c:	str	r8, [r0]
   12e50:	mov	r4, r0
   12e54:	str	r5, [r0, #460]	; 0x1cc
   12e58:	mov	r1, r8
   12e5c:	movt	r9, #2
   12e60:	ldr	r0, [r9]
   12e64:	bl	117e8 <rb_dictionary_find@plt>
   12e68:	cmp	r0, #0
   12e6c:	bne	13060 <sprintf@plt+0x17a0>
   12e70:	ldr	r1, [r4]
   12e74:	ldr	r0, [r9]
   12e78:	mov	r2, r4
   12e7c:	bl	117a0 <rb_dictionary_add@plt>
   12e80:	ldr	r0, [sp, #8]
   12e84:	mov	r1, #0
   12e88:	mov	r2, #16
   12e8c:	bl	1165c <strtoull@plt>
   12e90:	ldr	r5, [sp, #12]
   12e94:	str	r0, [r4, #4]
   12e98:	add	r0, r4, #8
   12e9c:	mov	r2, #54	; 0x36
   12ea0:	mov	r1, r5
   12ea4:	bl	11650 <rb_strlcpy@plt>
   12ea8:	ldr	r0, [sp, #20]
   12eac:	bl	11734 <atoi@plt>
   12eb0:	strh	r0, [r4, #62]	; 0x3e
   12eb4:	add	r1, r4, #64	; 0x40
   12eb8:	mov	r0, r5
   12ebc:	bl	116bc <rb_inet_pton_sock@plt>
   12ec0:	ldrh	r0, [r4, #62]	; 0x3e
   12ec4:	ldr	r5, [sp, #16]
   12ec8:	mov	r2, #54	; 0x36
   12ecc:	rev16	r0, r0
   12ed0:	mov	r1, r5
   12ed4:	strh	r0, [r4, #66]	; 0x42
   12ed8:	add	r0, r4, #192	; 0xc0
   12edc:	bl	11650 <rb_strlcpy@plt>
   12ee0:	ldr	r0, [sp, #24]
   12ee4:	bl	11734 <atoi@plt>
   12ee8:	strh	r0, [r4, #246]	; 0xf6
   12eec:	add	r1, r4, #248	; 0xf8
   12ef0:	mov	r0, r5
   12ef4:	bl	116bc <rb_inet_pton_sock@plt>
   12ef8:	ldrh	r0, [r4, #246]	; 0xf6
   12efc:	movw	r7, #33596	; 0x833c
   12f00:	add	r8, r4, #376	; 0x178
   12f04:	mov	r2, #64	; 0x40
   12f08:	movt	r7, #1
   12f0c:	mov	r1, r7
   12f10:	rev16	r0, r0
   12f14:	strh	r0, [r4, #250]	; 0xfa
   12f18:	mov	r0, r8
   12f1c:	bl	11650 <rb_strlcpy@plt>
   12f20:	add	r6, r4, #440	; 0x1b8
   12f24:	mov	r1, r7
   12f28:	mov	r2, #11
   12f2c:	mov	r0, r6
   12f30:	bl	11650 <rb_strlcpy@plt>
   12f34:	movw	r0, #61336	; 0xef98
   12f38:	mov	r5, #1
   12f3c:	movt	r0, #2
   12f40:	ldr	r0, [r0]
   12f44:	lsl	r1, r0, #4
   12f48:	mov	r0, #1
   12f4c:	bl	115d8 <calloc@plt>
   12f50:	cmp	r0, #0
   12f54:	beq	1305c <sprintf@plt+0x179c>
   12f58:	movw	r1, #61824	; 0xf180
   12f5c:	strb	r5, [r4, #451]	; 0x1c3
   12f60:	str	r0, [r4, #464]	; 0x1d0
   12f64:	movt	r1, #2
   12f68:	ldr	r7, [r1]
   12f6c:	cmp	r7, #0
   12f70:	beq	12fe4 <sprintf@plt+0x1724>
   12f74:	ldr	r1, [r7]
   12f78:	mov	r5, #1
   12f7c:	ldr	r2, [r1, #12]
   12f80:	str	r1, [r0, r2, lsl #4]!
   12f84:	ldr	r2, [r4, #456]	; 0x1c8
   12f88:	add	r2, r2, #1
   12f8c:	str	r2, [r4, #456]	; 0x1c8
   12f90:	b	12fc8 <sprintf@plt+0x1708>
   12f94:	ldrb	r0, [r4, #452]	; 0x1c4
   12f98:	cmp	r0, #0
   12f9c:	bne	12fe4 <sprintf@plt+0x1724>
   12fa0:	ldr	r7, [r7, #8]
   12fa4:	cmp	r7, #0
   12fa8:	beq	12fe4 <sprintf@plt+0x1724>
   12fac:	ldr	r1, [r7]
   12fb0:	ldr	r0, [r4, #464]	; 0x1d0
   12fb4:	ldr	r2, [r1, #12]
   12fb8:	str	r1, [r0, r2, lsl #4]!
   12fbc:	ldr	r2, [r4, #456]	; 0x1c8
   12fc0:	add	r2, r2, #1
   12fc4:	str	r2, [r4, #456]	; 0x1c8
   12fc8:	str	r5, [r0, #12]
   12fcc:	mov	r0, r4
   12fd0:	ldr	r1, [r1, #32]
   12fd4:	blx	r1
   12fd8:	cmp	r0, #0
   12fdc:	bne	12f94 <sprintf@plt+0x16d4>
   12fe0:	b	13024 <sprintf@plt+0x1764>
   12fe4:	mov	r0, #0
   12fe8:	strb	r0, [r4, #451]	; 0x1c3
   12fec:	ldr	r0, [r4, #456]	; 0x1c8
   12ff0:	cmp	r0, #0
   12ff4:	bne	13024 <sprintf@plt+0x1764>
   12ff8:	movw	r0, #44880	; 0xaf50
   12ffc:	ldr	r2, [r4]
   13000:	movw	r1, #33845	; 0x8435
   13004:	mov	r3, r6
   13008:	movt	r0, #2
   1300c:	movt	r1, #1
   13010:	ldr	r0, [r0]
   13014:	str	r8, [sp]
   13018:	bl	11818 <rb_helper_write@plt>
   1301c:	mov	r0, r4
   13020:	bl	12c24 <sprintf@plt+0x1364>
   13024:	ldr	r0, [r4, #460]	; 0x1cc
   13028:	subs	r0, r0, #1
   1302c:	str	r0, [r4, #460]	; 0x1cc
   13030:	beq	1303c <sprintf@plt+0x177c>
   13034:	sub	sp, fp, #28
   13038:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1303c:	mov	r0, r4
   13040:	sub	sp, fp, #28
   13044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13048:	b	12be8 <sprintf@plt+0x1328>
   1304c:	movw	r1, #33856	; 0x8440
   13050:	mov	r0, #67	; 0x43
   13054:	movt	r1, #1
   13058:	b	13070 <sprintf@plt+0x17b0>
   1305c:	bl	11788 <rb_outofmemory@plt>
   13060:	movw	r1, #34236	; 0x85bc
   13064:	mov	r0, #67	; 0x43
   13068:	mov	r2, sl
   1306c:	movt	r1, #1
   13070:	bl	123d0 <sprintf@plt+0xb10>
   13074:	mov	r0, #3
   13078:	bl	118a8 <exit@plt>
   1307c:	push	{r4, sl, fp, lr}
   13080:	add	fp, sp, #8
   13084:	cmp	r0, #1
   13088:	ble	13110 <sprintf@plt+0x1850>
   1308c:	ldr	r0, [r1, #4]
   13090:	mov	r4, r1
   13094:	mov	r1, #0
   13098:	mov	r2, #16
   1309c:	bl	1165c <strtoull@plt>
   130a0:	mov	r2, r0
   130a4:	subs	r0, r0, #1
   130a8:	mvn	r3, #0
   130ac:	sbc	r1, r1, #0
   130b0:	subs	r0, r0, r3
   130b4:	sbcs	r0, r1, #0
   130b8:	bcs	13120 <sprintf@plt+0x1860>
   130bc:	movw	r0, #61820	; 0xf17c
   130c0:	mov	r1, r2
   130c4:	movt	r0, #2
   130c8:	ldr	r0, [r0]
   130cc:	bl	1177c <rb_dictionary_retrieve@plt>
   130d0:	cmp	r0, #0
   130d4:	popeq	{r4, sl, fp, pc}
   130d8:	mov	r4, r0
   130dc:	ldr	r0, [r0, #460]	; 0x1cc
   130e0:	add	r0, r0, #1
   130e4:	str	r0, [r4, #460]	; 0x1cc
   130e8:	mov	r0, r4
   130ec:	bl	12c24 <sprintf@plt+0x1364>
   130f0:	ldr	r0, [r4, #460]	; 0x1cc
   130f4:	subs	r0, r0, #1
   130f8:	str	r0, [r4, #460]	; 0x1cc
   130fc:	beq	13104 <sprintf@plt+0x1844>
   13100:	pop	{r4, sl, fp, pc}
   13104:	mov	r0, r4
   13108:	pop	{r4, sl, fp, lr}
   1310c:	b	12be8 <sprintf@plt+0x1328>
   13110:	movw	r1, #33930	; 0x848a
   13114:	mov	r2, r0
   13118:	movt	r1, #1
   1311c:	b	1312c <sprintf@plt+0x186c>
   13120:	ldr	r2, [r4, #4]
   13124:	movw	r1, #34004	; 0x84d4
   13128:	movt	r1, #1
   1312c:	mov	r0, #67	; 0x43
   13130:	bl	123d0 <sprintf@plt+0xb10>
   13134:	mov	r0, #3
   13138:	bl	118a8 <exit@plt>
   1313c:	b	13140 <sprintf@plt+0x1880>
   13140:	push	{r4, sl, fp, lr}
   13144:	add	fp, sp, #8
   13148:	bl	1403c <sprintf@plt+0x277c>
   1314c:	movw	r0, #61408	; 0xefe0
   13150:	movt	r0, #2
   13154:	ldr	r0, [r0]
   13158:	cmp	r0, #1
   1315c:	blt	13174 <sprintf@plt+0x18b4>
   13160:	lsl	r2, r0, #2
   13164:	movw	r0, #61352	; 0xefa8
   13168:	mov	r1, #0
   1316c:	movt	r0, #2
   13170:	bl	11608 <memset@plt>
   13174:	movw	r4, #61344	; 0xefa0
   13178:	movt	r4, #2
   1317c:	ldr	r0, [r4]
   13180:	cmp	r0, #0
   13184:	beq	1318c <sprintf@plt+0x18cc>
   13188:	pop	{r4, sl, fp, pc}
   1318c:	movw	r0, #62112	; 0xf2a0
   13190:	movw	r3, #34503	; 0x86c7
   13194:	mov	r1, #2
   13198:	mov	r2, #0
   1319c:	movt	r0, #2
   131a0:	movt	r3, #1
   131a4:	ldrh	r0, [r0]
   131a8:	bl	11590 <rb_socket@plt>
   131ac:	cmp	r0, #0
   131b0:	str	r0, [r4]
   131b4:	popeq	{r4, sl, fp, pc}
   131b8:	movw	r2, #13692	; 0x357c
   131bc:	mov	r1, #1
   131c0:	mov	r3, #0
   131c4:	movt	r2, #1
   131c8:	bl	11560 <rb_setselect@plt>
   131cc:	movw	r0, #34523	; 0x86db
   131d0:	movw	r1, #13748	; 0x35b4
   131d4:	mov	r2, #0
   131d8:	mov	r3, #1
   131dc:	movt	r0, #1
   131e0:	movt	r1, #1
   131e4:	bl	11824 <rb_event_add@plt>
   131e8:	movw	r1, #61348	; 0xefa4
   131ec:	movt	r1, #2
   131f0:	str	r0, [r1]
   131f4:	pop	{r4, sl, fp, pc}
   131f8:	push	{r4, sl, fp, lr}
   131fc:	add	fp, sp, #8
   13200:	movw	r4, #61344	; 0xefa0
   13204:	movt	r4, #2
   13208:	ldr	r0, [r4]
   1320c:	bl	11704 <rb_close@plt>
   13210:	mov	r0, #0
   13214:	str	r0, [r4]
   13218:	movw	r0, #61348	; 0xefa4
   1321c:	movt	r0, #2
   13220:	ldr	r0, [r0]
   13224:	bl	11554 <rb_event_delete@plt>
   13228:	pop	{r4, sl, fp, lr}
   1322c:	b	13140 <sprintf@plt+0x1880>
   13230:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13234:	add	fp, sp, #24
   13238:	sub	sp, sp, #256	; 0x100
   1323c:	cmp	r0, #0
   13240:	beq	132e8 <sprintf@plt+0x1a28>
   13244:	mov	r6, sp
   13248:	mov	r4, r2
   1324c:	mov	r5, r1
   13250:	mov	r1, r0
   13254:	mov	r2, #256	; 0x100
   13258:	mov	r0, r6
   1325c:	bl	11650 <rb_strlcpy@plt>
   13260:	mov	r0, r6
   13264:	mov	r1, #46	; 0x2e
   13268:	bl	115b4 <strchr@plt>
   1326c:	cmp	r0, #0
   13270:	bne	132cc <sprintf@plt+0x1a0c>
   13274:	movw	r0, #61856	; 0xf1a0
   13278:	movt	r0, #2
   1327c:	ldrb	r0, [r0]
   13280:	cmp	r0, #0
   13284:	beq	132cc <sprintf@plt+0x1a0c>
   13288:	mov	r6, sp
   1328c:	mov	r0, r6
   13290:	bl	116c8 <strlen@plt>
   13294:	mov	r7, r0
   13298:	movw	r0, #61856	; 0xf1a0
   1329c:	movt	r0, #2
   132a0:	bl	116c8 <strlen@plt>
   132a4:	add	r0, r7, r0
   132a8:	add	r0, r0, #2
   132ac:	cmp	r0, #254	; 0xfe
   132b0:	bhi	132cc <sprintf@plt+0x1a0c>
   132b4:	add	r0, r6, r7
   132b8:	mov	r1, #46	; 0x2e
   132bc:	strb	r1, [r0], #1
   132c0:	movw	r1, #61856	; 0xf1a0
   132c4:	movt	r1, #2
   132c8:	bl	11728 <strcpy@plt>
   132cc:	mov	r1, sp
   132d0:	mov	r0, r5
   132d4:	mov	r2, #0
   132d8:	mov	r3, r4
   132dc:	bl	13cd8 <sprintf@plt+0x2418>
   132e0:	sub	sp, fp, #24
   132e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   132e8:	movw	r0, #34288	; 0x85f0
   132ec:	movw	r1, #34298	; 0x85fa
   132f0:	movw	r3, #34304	; 0x8600
   132f4:	mov	r2, #412	; 0x19c
   132f8:	movt	r0, #1
   132fc:	movt	r1, #1
   13300:	movt	r3, #1
   13304:	bl	11638 <__assert_fail@plt>
   13308:	mov	r2, r0
   1330c:	mov	r0, r1
   13310:	mov	r1, r2
   13314:	mov	r2, #0
   13318:	b	1331c <sprintf@plt+0x1a5c>
   1331c:	push	{r4, r5, fp, lr}
   13320:	add	fp, sp, #8
   13324:	mov	r4, r2
   13328:	mov	r5, r1
   1332c:	cmp	r2, #0
   13330:	bne	13364 <sprintf@plt+0x1aa4>
   13334:	bl	13d48 <sprintf@plt+0x2488>
   13338:	mov	r4, r0
   1333c:	add	r0, r0, #292	; 0x124
   13340:	mov	r1, r5
   13344:	mov	r2, #128	; 0x80
   13348:	bl	116ec <memcpy@plt>
   1334c:	mov	r0, #1
   13350:	mov	r1, #256	; 0x100
   13354:	bl	115d8 <calloc@plt>
   13358:	cmp	r0, #0
   1335c:	beq	1338c <sprintf@plt+0x1acc>
   13360:	str	r0, [r4, #420]	; 0x1a4
   13364:	add	r0, r4, #21
   13368:	mov	r1, #256	; 0x100
   1336c:	mov	r2, r5
   13370:	mov	r3, #0
   13374:	bl	13390 <sprintf@plt+0x1ad0>
   13378:	mov	r0, #12
   1337c:	strb	r0, [r4, #20]
   13380:	mov	r0, r4
   13384:	pop	{r4, r5, fp, lr}
   13388:	b	13e38 <sprintf@plt+0x2578>
   1338c:	bl	11788 <rb_outofmemory@plt>
   13390:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13394:	add	fp, sp, #28
   13398:	sub	sp, sp, #172	; 0xac
   1339c:	ldrh	r7, [r2]
   133a0:	cmp	r7, #10
   133a4:	beq	133e0 <sprintf@plt+0x1b20>
   133a8:	cmp	r7, #2
   133ac:	bne	13574 <sprintf@plt+0x1cb4>
   133b0:	movw	r7, #34382	; 0x864e
   133b4:	cmp	r3, #0
   133b8:	ldrb	r6, [r2, #4]
   133bc:	ldrb	r5, [r2, #5]
   133c0:	ldrb	r4, [r2, #6]
   133c4:	movt	r7, #1
   133c8:	movne	r7, r3
   133cc:	ldrb	r3, [r2, #7]
   133d0:	movw	r2, #34367	; 0x863f
   133d4:	movt	r2, #1
   133d8:	stm	sp, {r4, r5, r6, r7}
   133dc:	b	13570 <sprintf@plt+0x1cb0>
   133e0:	movw	r5, #34494	; 0x86be
   133e4:	cmp	r3, #0
   133e8:	ldrb	r8, [r2, #8]
   133ec:	ldrb	r6, [r2, #15]
   133f0:	ldrb	ip, [r2, #13]
   133f4:	ldrb	lr, [r2, #12]
   133f8:	ldrb	r9, [r2, #9]
   133fc:	ldrb	sl, [r2, #10]
   13400:	str	r0, [fp, #-52]	; 0xffffffcc
   13404:	str	r1, [fp, #-44]	; 0xffffffd4
   13408:	movt	r5, #1
   1340c:	movne	r5, r3
   13410:	ldrb	r3, [r2, #23]
   13414:	lsr	r4, r8, #4
   13418:	lsr	r0, sl, #4
   1341c:	lsr	r1, r9, #4
   13420:	and	r8, r8, #15
   13424:	and	r9, r9, #15
   13428:	and	sl, sl, #15
   1342c:	str	r3, [fp, #-32]	; 0xffffffe0
   13430:	ldrb	r3, [r2, #22]
   13434:	str	r3, [fp, #-36]	; 0xffffffdc
   13438:	ldrb	r3, [r2, #21]
   1343c:	str	r3, [fp, #-40]	; 0xffffffd8
   13440:	ldrb	r3, [r2, #20]
   13444:	str	r3, [fp, #-48]	; 0xffffffd0
   13448:	ldrb	r3, [r2, #19]
   1344c:	str	r3, [fp, #-56]	; 0xffffffc8
   13450:	ldrb	r3, [r2, #18]
   13454:	str	r3, [fp, #-60]	; 0xffffffc4
   13458:	ldrb	r3, [r2, #17]
   1345c:	str	r3, [fp, #-64]	; 0xffffffc0
   13460:	ldrb	r3, [r2, #16]
   13464:	str	r3, [fp, #-68]	; 0xffffffbc
   13468:	ldrb	r3, [r2, #14]
   1346c:	ldrb	r2, [r2, #11]
   13470:	str	r0, [sp, #104]	; 0x68
   13474:	str	r4, [sp, #120]	; 0x78
   13478:	str	r5, [sp, #124]	; 0x7c
   1347c:	mov	r0, r6
   13480:	lsr	r6, r6, #4
   13484:	and	r5, ip, #15
   13488:	str	r1, [sp, #112]	; 0x70
   1348c:	str	r8, [sp, #116]	; 0x74
   13490:	str	sl, [sp, #100]	; 0x64
   13494:	str	r9, [sp, #108]	; 0x6c
   13498:	lsr	r1, lr, #4
   1349c:	str	r6, [sp, #64]	; 0x40
   134a0:	lsr	r7, r2, #4
   134a4:	lsr	r4, r3, #4
   134a8:	and	r3, r3, #15
   134ac:	and	r8, r2, #15
   134b0:	and	r2, lr, #15
   134b4:	add	lr, sp, #32
   134b8:	str	r7, [sp, #96]	; 0x60
   134bc:	lsr	r7, ip, #4
   134c0:	add	ip, sp, #68	; 0x44
   134c4:	stm	ip, {r3, r4, r5, r7}
   134c8:	and	ip, r0, #15
   134cc:	str	r2, [sp, #84]	; 0x54
   134d0:	str	r1, [sp, #88]	; 0x58
   134d4:	str	r8, [sp, #92]	; 0x5c
   134d8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   134dc:	lsr	r1, r0, #4
   134e0:	and	r2, r0, #15
   134e4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   134e8:	lsr	r3, r0, #4
   134ec:	and	r7, r0, #15
   134f0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   134f4:	lsr	r6, r0, #4
   134f8:	and	r5, r0, #15
   134fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13500:	lsr	r4, r0, #4
   13504:	stm	lr, {r4, r5, r6, r7}
   13508:	str	ip, [sp, #60]	; 0x3c
   1350c:	and	ip, r0, #15
   13510:	str	r2, [sp, #52]	; 0x34
   13514:	str	r1, [sp, #56]	; 0x38
   13518:	str	r3, [sp, #48]	; 0x30
   1351c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13520:	lsr	r1, r0, #4
   13524:	and	r2, r0, #15
   13528:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1352c:	lsr	r3, r0, #4
   13530:	and	r7, r0, #15
   13534:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13538:	lsr	r6, r0, #4
   1353c:	and	r5, r0, #15
   13540:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13544:	lsr	r4, r0, #4
   13548:	stm	sp, {r4, r5, r6, r7}
   1354c:	str	r3, [sp, #16]
   13550:	str	r1, [sp, #24]
   13554:	and	r3, r0, #15
   13558:	str	r2, [sp, #20]
   1355c:	movw	r2, #34395	; 0x865b
   13560:	str	ip, [sp, #28]
   13564:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13568:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1356c:	movt	r2, #1
   13570:	bl	11848 <snprintf@plt>
   13574:	sub	sp, fp, #28
   13578:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1357c:	push	{r4, sl, fp, lr}
   13580:	add	fp, sp, #8
   13584:	mov	r4, r0
   13588:	mov	r0, r4
   1358c:	bl	13628 <sprintf@plt+0x1d68>
   13590:	cmp	r0, #0
   13594:	bne	13588 <sprintf@plt+0x1cc8>
   13598:	movw	r2, #13692	; 0x357c
   1359c:	mov	r0, r4
   135a0:	mov	r1, #1
   135a4:	mov	r3, #0
   135a8:	movt	r2, #1
   135ac:	pop	{r4, sl, fp, lr}
   135b0:	b	11560 <rb_setselect@plt>
   135b4:	push	{r4, r5, r6, sl, fp, lr}
   135b8:	add	fp, sp, #16
   135bc:	bl	116d4 <rb_current_time@plt>
   135c0:	mov	r4, r0
   135c4:	movw	r0, #61392	; 0xefd0
   135c8:	movt	r0, #2
   135cc:	ldr	r5, [r0]
   135d0:	cmp	r5, #0
   135d4:	popeq	{r4, r5, r6, sl, fp, pc}
   135d8:	movw	r6, #61352	; 0xefa8
   135dc:	movt	r6, #2
   135e0:	ldr	r0, [r5]
   135e4:	ldr	r5, [r5, #8]
   135e8:	ldr	r2, [r0, #280]	; 0x118
   135ec:	ldr	r1, [r0, #284]	; 0x11c
   135f0:	add	r2, r1, r2
   135f4:	cmp	r2, r4
   135f8:	bgt	1361c <sprintf@plt+0x1d5c>
   135fc:	ldr	r2, [r0, #288]	; 0x120
   13600:	lsl	r1, r1, #1
   13604:	ldr	r3, [r6, r2, lsl #2]
   13608:	add	r3, r3, #1
   1360c:	str	r3, [r6, r2, lsl #2]
   13610:	str	r4, [r0, #280]	; 0x118
   13614:	str	r1, [r0, #284]	; 0x11c
   13618:	bl	13bb4 <sprintf@plt+0x22f4>
   1361c:	cmp	r5, #0
   13620:	bne	135e0 <sprintf@plt+0x1d20>
   13624:	pop	{r4, r5, r6, sl, fp, pc}
   13628:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1362c:	add	fp, sp, #28
   13630:	sub	sp, sp, #532	; 0x214
   13634:	sub	sp, sp, #1024	; 0x400
   13638:	mov	r1, #128	; 0x80
   1363c:	str	r1, [sp, #156]	; 0x9c
   13640:	bl	1156c <rb_get_fd@plt>
   13644:	add	r1, sp, #156	; 0x9c
   13648:	add	r4, sp, #28
   1364c:	movw	r2, #1036	; 0x40c
   13650:	mov	r3, #0
   13654:	mov	sl, #0
   13658:	str	r1, [sp, #4]
   1365c:	add	r1, sp, #160	; 0xa0
   13660:	str	r4, [sp]
   13664:	bl	1186c <recvfrom@plt>
   13668:	mov	r6, r0
   1366c:	add	r0, r0, #1
   13670:	cmp	r0, #2
   13674:	bcc	13b8c <sprintf@plt+0x22cc>
   13678:	mov	sl, #1
   1367c:	cmp	r6, #13
   13680:	blt	13b8c <sprintf@plt+0x22cc>
   13684:	ldr	r0, [sp, #168]	; 0xa8
   13688:	ldr	r3, [sp, #164]	; 0xa4
   1368c:	lsr	r2, r0, #16
   13690:	rev	r1, r0
   13694:	rev	r2, r2
   13698:	orr	r1, r2, r1, lsr #16
   1369c:	str	r1, [sp, #168]	; 0xa8
   136a0:	lsr	r1, r3, #16
   136a4:	orr	r0, r1, r0, lsl #16
   136a8:	rev	r1, r3
   136ac:	rev	r0, r0
   136b0:	pkhtb	r0, r0, r1, asr #16
   136b4:	str	r0, [sp, #164]	; 0xa4
   136b8:	movw	r0, #61392	; 0xefd0
   136bc:	movt	r0, #2
   136c0:	ldr	r0, [r0]
   136c4:	cmp	r0, #0
   136c8:	beq	13b8c <sprintf@plt+0x22cc>
   136cc:	ldrh	r1, [sp, #160]	; 0xa0
   136d0:	ldr	r5, [r0]
   136d4:	ldr	r2, [r5, #12]
   136d8:	cmp	r2, r1
   136dc:	beq	136f0 <sprintf@plt+0x1e30>
   136e0:	ldr	r0, [r0, #8]
   136e4:	cmp	r0, #0
   136e8:	bne	136d0 <sprintf@plt+0x1e10>
   136ec:	b	13b8c <sprintf@plt+0x22cc>
   136f0:	cmp	r5, #0
   136f4:	beq	13b8c <sprintf@plt+0x22cc>
   136f8:	movw	r0, #61408	; 0xefe0
   136fc:	str	r3, [sp, #24]
   13700:	movt	r0, #2
   13704:	ldr	r8, [r0]
   13708:	cmp	r8, #1
   1370c:	blt	137f0 <sprintf@plt+0x1f30>
   13710:	movw	r0, #62112	; 0xf2a0
   13714:	ldrh	r7, [sp, #28]
   13718:	ldrh	r3, [sp, #30]
   1371c:	mov	r9, #0
   13720:	movt	r0, #2
   13724:	add	sl, r0, #4
   13728:	add	r0, r4, #8
   1372c:	str	r0, [sp, #20]
   13730:	ldr	r0, [sp, #32]
   13734:	str	r7, [sp, #12]
   13738:	str	r0, [sp, #16]
   1373c:	ldrh	r0, [sl, #-4]
   13740:	cmp	r0, #2
   13744:	beq	137b0 <sprintf@plt+0x1ef0>
   13748:	cmp	r0, #10
   1374c:	bne	137c0 <sprintf@plt+0x1f00>
   13750:	cmp	r7, #10
   13754:	ldrheq	r0, [sl, #-2]
   13758:	cmpeq	r0, r3
   1375c:	bne	137c0 <sprintf@plt+0x1f00>
   13760:	ldr	r1, [sp, #20]
   13764:	add	r4, sl, #4
   13768:	mov	r2, #16
   1376c:	mov	r7, r3
   13770:	mov	r0, r4
   13774:	bl	1153c <memcmp@plt>
   13778:	mov	r2, #1
   1377c:	cmp	r0, #0
   13780:	beq	137f4 <sprintf@plt+0x1f34>
   13784:	movw	r1, #40680	; 0x9ee8
   13788:	mov	r0, r4
   1378c:	mov	r2, #16
   13790:	movt	r1, #2
   13794:	bl	1153c <memcmp@plt>
   13798:	mov	r3, r7
   1379c:	ldr	r7, [sp, #12]
   137a0:	mov	r2, #1
   137a4:	cmp	r0, #0
   137a8:	bne	137c0 <sprintf@plt+0x1f00>
   137ac:	b	137f4 <sprintf@plt+0x1f34>
   137b0:	cmp	r7, #2
   137b4:	ldrheq	r0, [sl, #-2]
   137b8:	cmpeq	r0, r3
   137bc:	beq	137d4 <sprintf@plt+0x1f14>
   137c0:	add	r9, r9, #1
   137c4:	add	sl, sl, #128	; 0x80
   137c8:	cmp	r9, r8
   137cc:	blt	1373c <sprintf@plt+0x1e7c>
   137d0:	b	137f0 <sprintf@plt+0x1f30>
   137d4:	ldr	r0, [sl]
   137d8:	mov	r2, #1
   137dc:	cmp	r0, #0
   137e0:	ldrne	r1, [sp, #16]
   137e4:	cmpne	r0, r1
   137e8:	beq	137f4 <sprintf@plt+0x1f34>
   137ec:	b	137c0 <sprintf@plt+0x1f00>
   137f0:	mov	r2, #0
   137f4:	ldr	r0, [r5, #288]	; 0x120
   137f8:	cmp	r2, r0
   137fc:	beq	13814 <sprintf@plt+0x1f54>
   13800:	movw	r0, #61352	; 0xefa8
   13804:	movt	r0, #2
   13808:	ldr	r1, [r0, r2, lsl #2]
   1380c:	add	r1, r1, #3
   13810:	str	r1, [r0, r2, lsl #2]
   13814:	ldr	r0, [sp, #24]
   13818:	mov	sl, #1
   1381c:	str	r2, [sp, #20]
   13820:	uxth	r0, r0
   13824:	cmp	r0, #256	; 0x100
   13828:	add	r0, sp, #160	; 0xa0
   1382c:	bne	13b8c <sprintf@plt+0x22cc>
   13830:	add	r4, r0, r6
   13834:	mov	r1, #256	; 0x100
   13838:	add	r6, r0, #12
   1383c:	sub	lr, fp, #256	; 0x100
   13840:	str	r1, [sp]
   13844:	sub	r3, lr, #131	; 0x83
   13848:	mov	r1, r4
   1384c:	mov	r2, r6
   13850:	bl	1428c <sprintf@plt+0x29cc>
   13854:	cmp	r0, #0
   13858:	ble	13b8c <sprintf@plt+0x22cc>
   1385c:	sub	lr, fp, #256	; 0x100
   13860:	add	r1, r5, #21
   13864:	sub	r0, lr, #131	; 0x83
   13868:	bl	11698 <rb_strcasecmp@plt>
   1386c:	cmp	r0, #0
   13870:	bne	13b8c <sprintf@plt+0x22cc>
   13874:	ldr	r1, [sp, #160]	; 0xa0
   13878:	tst	r1, #251658240	; 0xf000000
   1387c:	bne	138dc <sprintf@plt+0x201c>
   13880:	ldr	r2, [sp, #164]	; 0xa4
   13884:	mov	r0, r2
   13888:	bfc	r0, #0, #16
   1388c:	cmp	r0, #0
   13890:	beq	138dc <sprintf@plt+0x201c>
   13894:	movw	r8, #65535	; 0xffff
   13898:	tst	r2, r8
   1389c:	beq	13918 <sprintf@plt+0x2058>
   138a0:	mov	r0, r6
   138a4:	mov	r1, r4
   138a8:	bl	147c4 <sprintf@plt+0x2f04>
   138ac:	cmp	r0, #0
   138b0:	blt	13b6c <sprintf@plt+0x22ac>
   138b4:	add	r3, sp, #160	; 0xa0
   138b8:	add	r0, r6, r0
   138bc:	ldm	r3, {r1, r2, r3}
   138c0:	add	r6, r0, #4
   138c4:	sub	r7, r2, #1
   138c8:	pkhbt	r2, r7, r2
   138cc:	tst	r7, r8
   138d0:	str	r2, [sp, #164]	; 0xa4
   138d4:	bne	138a0 <sprintf@plt+0x1fe0>
   138d8:	b	1391c <sprintf@plt+0x205c>
   138dc:	ubfx	r0, r1, #24, #4
   138e0:	ldr	r3, [sp, #20]
   138e4:	sub	r1, r0, #4
   138e8:	cmp	r1, #2
   138ec:	bcc	13900 <sprintf@plt+0x2040>
   138f0:	cmp	r0, #3
   138f4:	beq	13aac <sprintf@plt+0x21ec>
   138f8:	cmp	r0, #2
   138fc:	bne	13ac8 <sprintf@plt+0x2208>
   13900:	movw	r0, #61352	; 0xefa8
   13904:	movt	r0, #2
   13908:	ldr	r1, [r0, r3, lsl #2]
   1390c:	add	r1, r1, #1
   13910:	str	r1, [r0, r3, lsl #2]
   13914:	b	13b84 <sprintf@plt+0x22c4>
   13918:	ldr	r3, [sp, #168]	; 0xa8
   1391c:	cmp	r6, r4
   13920:	bcs	13a00 <sprintf@plt+0x2140>
   13924:	lsr	r0, r2, #16
   13928:	orr	r0, r0, r3, lsl #16
   1392c:	uxth	r7, r0
   13930:	cmp	r7, #0
   13934:	beq	13a00 <sprintf@plt+0x2140>
   13938:	movw	r8, #0
   1393c:	movt	r8, #65535	; 0xffff
   13940:	str	r1, [sp, #160]	; 0xa0
   13944:	uxth	r1, r2
   13948:	add	r0, r8, r0, lsl #16
   1394c:	sub	lr, fp, #256	; 0x100
   13950:	str	r3, [sp, #168]	; 0xa8
   13954:	mov	r2, r6
   13958:	orr	r0, r0, r1
   1395c:	mov	r1, r4
   13960:	sub	r3, lr, #131	; 0x83
   13964:	str	r0, [sp, #164]	; 0xa4
   13968:	movw	r0, #355	; 0x163
   1396c:	str	r0, [sp]
   13970:	add	r0, sp, #160	; 0xa0
   13974:	bl	1428c <sprintf@plt+0x29cc>
   13978:	cmp	r0, #1
   1397c:	blt	13b6c <sprintf@plt+0x22ac>
   13980:	add	r9, r6, r0
   13984:	mov	r1, #0
   13988:	add	r6, r9, #10
   1398c:	strb	r1, [fp, #-132]	; 0xffffff7c
   13990:	cmp	r6, r4
   13994:	bcs	13a00 <sprintf@plt+0x2140>
   13998:	mov	r0, r9
   1399c:	bl	14860 <sprintf@plt+0x2fa0>
   139a0:	mov	r7, r0
   139a4:	add	r0, r9, #2
   139a8:	bl	14860 <sprintf@plt+0x2fa0>
   139ac:	add	r0, r9, #4
   139b0:	bl	14870 <sprintf@plt+0x2fb0>
   139b4:	str	r0, [r5, #16]
   139b8:	add	r0, r9, #8
   139bc:	bl	14860 <sprintf@plt+0x2fa0>
   139c0:	cmp	r7, #28
   139c4:	beq	13b30 <sprintf@plt+0x2270>
   139c8:	cmp	r7, #12
   139cc:	beq	13ae4 <sprintf@plt+0x2224>
   139d0:	cmp	r7, #1
   139d4:	beq	13b5c <sprintf@plt+0x229c>
   139d8:	add	r6, r6, r0
   139dc:	cmp	r6, r4
   139e0:	bcs	13a00 <sprintf@plt+0x2140>
   139e4:	add	r3, sp, #160	; 0xa0
   139e8:	ldm	r3, {r1, r2, r3}
   139ec:	lsr	r0, r2, #16
   139f0:	orr	r0, r0, r3, lsl #16
   139f4:	uxth	r7, r0
   139f8:	cmp	r7, #0
   139fc:	bne	13940 <sprintf@plt+0x2080>
   13a00:	ldrb	r0, [r5, #20]
   13a04:	cmp	r0, #12
   13a08:	bne	13a3c <sprintf@plt+0x217c>
   13a0c:	ldr	r1, [r5, #420]	; 0x1a4
   13a10:	cmp	r1, #0
   13a14:	beq	13b6c <sprintf@plt+0x22ac>
   13a18:	mov	r0, #292	; 0x124
   13a1c:	ldrh	r2, [r5, r0]
   13a20:	ldr	r0, [r5, #424]	; 0x1a8
   13a24:	cmp	r2, #10
   13a28:	mov	r2, #0
   13a2c:	movne	r3, #1
   13a30:	moveq	r3, #28
   13a34:	bl	13cd8 <sprintf@plt+0x2418>
   13a38:	b	13a80 <sprintf@plt+0x21c0>
   13a3c:	mov	r0, #1
   13a40:	mov	r1, #132	; 0x84
   13a44:	bl	115d8 <calloc@plt>
   13a48:	cmp	r0, #0
   13a4c:	beq	13bb0 <sprintf@plt+0x22f0>
   13a50:	ldr	r1, [r5, #420]	; 0x1a4
   13a54:	mov	r6, r0
   13a58:	mov	r2, #128	; 0x80
   13a5c:	str	r1, [r0], #4
   13a60:	add	r1, r5, #292	; 0x124
   13a64:	bl	116ec <memcpy@plt>
   13a68:	ldr	r1, [r5, #424]	; 0x1a8
   13a6c:	ldm	r1, {r0, r2}
   13a70:	mov	r1, r6
   13a74:	blx	r2
   13a78:	mov	r0, r6
   13a7c:	bl	11674 <free@plt>
   13a80:	mov	r0, r5
   13a84:	bl	13c30 <sprintf@plt+0x2370>
   13a88:	ldr	r3, [sp, #20]
   13a8c:	movw	r0, #61352	; 0xefa8
   13a90:	movt	r0, #2
   13a94:	ldr	r1, [r0, r3, lsl #2]
   13a98:	asr	r2, r1, #31
   13a9c:	add	r1, r1, r2, lsr #30
   13aa0:	asr	r1, r1, #2
   13aa4:	str	r1, [r0, r3, lsl #2]
   13aa8:	b	13b8c <sprintf@plt+0x22cc>
   13aac:	movw	r0, #61352	; 0xefa8
   13ab0:	movt	r0, #2
   13ab4:	ldr	r1, [r0, r3, lsl #2]
   13ab8:	asr	r2, r1, #31
   13abc:	add	r1, r1, r2, lsr #30
   13ac0:	asr	r1, r1, #2
   13ac4:	str	r1, [r0, r3, lsl #2]
   13ac8:	ldr	r1, [r5, #424]	; 0x1a8
   13acc:	ldm	r1, {r0, r2}
   13ad0:	mov	r1, #0
   13ad4:	blx	r2
   13ad8:	mov	r0, r5
   13adc:	bl	13c30 <sprintf@plt+0x2370>
   13ae0:	b	13b8c <sprintf@plt+0x22cc>
   13ae4:	ldrb	r0, [r5, #20]
   13ae8:	cmp	r0, #12
   13aec:	bne	13b6c <sprintf@plt+0x22ac>
   13af0:	movw	r0, #355	; 0x163
   13af4:	sub	lr, fp, #256	; 0x100
   13af8:	mov	r1, r4
   13afc:	mov	r2, r6
   13b00:	str	r0, [sp]
   13b04:	add	r0, sp, #160	; 0xa0
   13b08:	sub	r3, lr, #131	; 0x83
   13b0c:	bl	1428c <sprintf@plt+0x29cc>
   13b10:	cmp	r0, #1
   13b14:	blt	13b6c <sprintf@plt+0x22ac>
   13b18:	ldr	r0, [r5, #420]	; 0x1a4
   13b1c:	sub	lr, fp, #256	; 0x100
   13b20:	mov	r2, #256	; 0x100
   13b24:	sub	r1, lr, #131	; 0x83
   13b28:	bl	11650 <rb_strlcpy@plt>
   13b2c:	b	13a00 <sprintf@plt+0x2140>
   13b30:	cmp	r0, #16
   13b34:	ldrbeq	r0, [r5, #20]
   13b38:	cmpeq	r0, #28
   13b3c:	bne	13b6c <sprintf@plt+0x22ac>
   13b40:	mov	r0, #292	; 0x124
   13b44:	mov	r1, #10
   13b48:	strh	r1, [r5, r0]
   13b4c:	add	r0, r5, #300	; 0x12c
   13b50:	vld1.8	{d16-d17}, [r6]
   13b54:	vst1.8	{d16-d17}, [r0]
   13b58:	b	13a00 <sprintf@plt+0x2140>
   13b5c:	cmp	r0, #4
   13b60:	ldrbeq	r0, [r5, #20]
   13b64:	cmpeq	r0, #1
   13b68:	beq	13b98 <sprintf@plt+0x22d8>
   13b6c:	ldr	r2, [sp, #20]
   13b70:	movw	r0, #61352	; 0xefa8
   13b74:	movt	r0, #2
   13b78:	ldr	r1, [r0, r2, lsl #2]
   13b7c:	add	r1, r1, #1
   13b80:	str	r1, [r0, r2, lsl #2]
   13b84:	mov	r0, r5
   13b88:	bl	13bb4 <sprintf@plt+0x22f4>
   13b8c:	mov	r0, sl
   13b90:	sub	sp, fp, #28
   13b94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b98:	mov	r0, #292	; 0x124
   13b9c:	mov	r1, #2
   13ba0:	strh	r1, [r5, r0]
   13ba4:	ldr	r0, [r6]
   13ba8:	str	r0, [r5, #296]	; 0x128
   13bac:	b	13a00 <sprintf@plt+0x2140>
   13bb0:	bl	11788 <rb_outofmemory@plt>
   13bb4:	push	{r4, sl, fp, lr}
   13bb8:	add	fp, sp, #8
   13bbc:	mov	r4, r0
   13bc0:	ldrb	r0, [r0, #277]	; 0x115
   13bc4:	sub	r0, r0, #1
   13bc8:	tst	r0, #255	; 0xff
   13bcc:	strb	r0, [r4, #277]	; 0x115
   13bd0:	beq	13bf8 <sprintf@plt+0x2338>
   13bd4:	ldrb	r3, [r4, #20]
   13bd8:	cmp	r3, #1
   13bdc:	cmpne	r3, #28
   13be0:	bne	13c14 <sprintf@plt+0x2354>
   13be4:	ldr	r1, [r4, #420]	; 0x1a4
   13be8:	mov	r0, #0
   13bec:	mov	r2, r4
   13bf0:	pop	{r4, sl, fp, lr}
   13bf4:	b	13cd8 <sprintf@plt+0x2418>
   13bf8:	ldr	r1, [r4, #424]	; 0x1a8
   13bfc:	ldm	r1, {r0, r2}
   13c00:	mov	r1, #0
   13c04:	blx	r2
   13c08:	mov	r0, r4
   13c0c:	pop	{r4, sl, fp, lr}
   13c10:	b	13c30 <sprintf@plt+0x2370>
   13c14:	cmp	r3, #12
   13c18:	popne	{r4, sl, fp, pc}
   13c1c:	add	r1, r4, #292	; 0x124
   13c20:	mov	r0, #0
   13c24:	mov	r2, r4
   13c28:	pop	{r4, sl, fp, lr}
   13c2c:	b	1331c <sprintf@plt+0x1a5c>
   13c30:	push	{r4, sl, fp, lr}
   13c34:	add	fp, sp, #8
   13c38:	cmp	r0, #0
   13c3c:	beq	13cb8 <sprintf@plt+0x23f8>
   13c40:	mov	r4, r0
   13c44:	ldr	r1, [r0, #4]
   13c48:	ldr	r0, [r0, #8]
   13c4c:	cmp	r0, #0
   13c50:	beq	13c60 <sprintf@plt+0x23a0>
   13c54:	str	r1, [r0, #4]
   13c58:	ldr	r1, [r4, #4]
   13c5c:	b	13c6c <sprintf@plt+0x23ac>
   13c60:	movw	r2, #61392	; 0xefd0
   13c64:	movt	r2, #2
   13c68:	str	r1, [r2, #4]
   13c6c:	movw	r2, #61392	; 0xefd0
   13c70:	cmp	r1, #0
   13c74:	movt	r2, #2
   13c78:	mov	r3, r2
   13c7c:	addne	r3, r1, #8
   13c80:	str	r0, [r3]
   13c84:	mov	r0, #0
   13c88:	str	r0, [r4, #4]
   13c8c:	str	r0, [r4, #8]
   13c90:	ldr	r0, [r2, #8]
   13c94:	sub	r0, r0, #1
   13c98:	str	r0, [r2, #8]
   13c9c:	ldr	r0, [r4, #420]	; 0x1a4
   13ca0:	cmp	r0, #0
   13ca4:	beq	13cac <sprintf@plt+0x23ec>
   13ca8:	bl	11674 <free@plt>
   13cac:	mov	r0, r4
   13cb0:	pop	{r4, sl, fp, lr}
   13cb4:	b	11674 <free@plt>
   13cb8:	movw	r0, #34072	; 0x8518
   13cbc:	movw	r1, #34082	; 0x8522
   13cc0:	movw	r3, #34110	; 0x853e
   13cc4:	mov	r2, #235	; 0xeb
   13cc8:	movt	r0, #1
   13ccc:	movt	r1, #1
   13cd0:	movt	r3, #1
   13cd4:	bl	11638 <__assert_fail@plt>
   13cd8:	push	{r4, r5, r6, r7, fp, lr}
   13cdc:	add	fp, sp, #16
   13ce0:	mov	r4, r3
   13ce4:	mov	r5, r2
   13ce8:	mov	r6, r1
   13cec:	cmp	r2, #0
   13cf0:	bne	13d24 <sprintf@plt+0x2464>
   13cf4:	bl	13d48 <sprintf@plt+0x2488>
   13cf8:	mov	r5, r0
   13cfc:	mov	r0, r6
   13d00:	bl	116c8 <strlen@plt>
   13d04:	add	r0, r0, #1
   13d08:	bl	117b8 <malloc@plt>
   13d0c:	cmp	r0, #0
   13d10:	beq	13d44 <sprintf@plt+0x2484>
   13d14:	mov	r1, r6
   13d18:	mov	r7, r0
   13d1c:	bl	11728 <strcpy@plt>
   13d20:	str	r7, [r5, #420]	; 0x1a4
   13d24:	add	r0, r5, #21
   13d28:	mov	r1, r6
   13d2c:	mov	r2, #256	; 0x100
   13d30:	bl	11650 <rb_strlcpy@plt>
   13d34:	strb	r4, [r5, #20]
   13d38:	mov	r0, r5
   13d3c:	pop	{r4, r5, r6, r7, fp, lr}
   13d40:	b	13e38 <sprintf@plt+0x2578>
   13d44:	bl	11788 <rb_outofmemory@plt>
   13d48:	push	{r4, r5, r6, r7, fp, lr}
   13d4c:	add	fp, sp, #16
   13d50:	sub	sp, sp, #8
   13d54:	mov	r5, r0
   13d58:	mov	r0, #1
   13d5c:	mov	r1, #428	; 0x1ac
   13d60:	bl	115d8 <calloc@plt>
   13d64:	cmp	r0, #0
   13d68:	beq	13e34 <sprintf@plt+0x2574>
   13d6c:	mov	r4, r0
   13d70:	bl	116d4 <rb_current_time@plt>
   13d74:	movw	r6, #61392	; 0xefd0
   13d78:	mov	r1, #3
   13d7c:	add	r7, sp, #6
   13d80:	strb	r1, [r4, #277]	; 0x115
   13d84:	movt	r6, #2
   13d88:	mov	r1, #4
   13d8c:	str	r0, [r4, #280]	; 0x118
   13d90:	str	r1, [r4, #284]	; 0x11c
   13d94:	str	r5, [r4, #424]	; 0x1a8
   13d98:	mov	r0, r7
   13d9c:	mov	r1, #2
   13da0:	bl	11830 <rb_get_random@plt>
   13da4:	ldr	r0, [r6]
   13da8:	ldrh	r1, [sp, #6]
   13dac:	cmp	r0, #0
   13db0:	mov	r2, r0
   13db4:	beq	13de0 <sprintf@plt+0x2520>
   13db8:	ldr	r3, [r2]
   13dbc:	ldr	r5, [r3, #12]
   13dc0:	cmp	r5, r1
   13dc4:	beq	13dd8 <sprintf@plt+0x2518>
   13dc8:	ldr	r2, [r2, #8]
   13dcc:	cmp	r2, #0
   13dd0:	bne	13db8 <sprintf@plt+0x24f8>
   13dd4:	b	13de0 <sprintf@plt+0x2520>
   13dd8:	cmp	r3, #0
   13ddc:	bne	13d98 <sprintf@plt+0x24d8>
   13de0:	cmp	r0, #0
   13de4:	mov	r2, #0
   13de8:	str	r4, [r4]
   13dec:	str	r2, [r4, #4]
   13df0:	str	r0, [r4, #8]
   13df4:	str	r1, [r4, #12]
   13df8:	beq	13e08 <sprintf@plt+0x2548>
   13dfc:	add	r0, r0, #4
   13e00:	str	r4, [r0]
   13e04:	b	13e18 <sprintf@plt+0x2558>
   13e08:	mov	r0, r6
   13e0c:	ldr	r1, [r0, #4]!
   13e10:	cmp	r1, #0
   13e14:	streq	r4, [r0]
   13e18:	str	r4, [r6]
   13e1c:	ldr	r0, [r6, #8]
   13e20:	add	r0, r0, #1
   13e24:	str	r0, [r6, #8]
   13e28:	mov	r0, r4
   13e2c:	sub	sp, fp, #16
   13e30:	pop	{r4, r5, r6, r7, fp, pc}
   13e34:	bl	11788 <rb_outofmemory@plt>
   13e38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e3c:	add	fp, sp, #28
   13e40:	sub	sp, sp, #20
   13e44:	sub	sp, sp, #1024	; 0x400
   13e48:	add	r5, sp, #16
   13e4c:	mov	r6, r0
   13e50:	mov	r1, #0
   13e54:	mov	r2, #1024	; 0x400
   13e58:	mov	r4, #1024	; 0x400
   13e5c:	mov	r0, r5
   13e60:	bl	11608 <memset@plt>
   13e64:	ldrb	r2, [r6, #20]
   13e68:	add	r0, r6, #21
   13e6c:	mov	r1, #1
   13e70:	mov	r3, r5
   13e74:	str	r4, [sp]
   13e78:	str	r6, [sp, #12]
   13e7c:	bl	148ac <sprintf@plt+0x2fec>
   13e80:	cmp	r0, #1
   13e84:	blt	14034 <sprintf@plt+0x2774>
   13e88:	ldr	r2, [sp, #12]
   13e8c:	ldr	r1, [sp, #16]
   13e90:	mov	r5, r0
   13e94:	movw	r8, #61404	; 0xefdc
   13e98:	movt	r8, #2
   13e9c:	ldrh	r0, [r2, #12]
   13ea0:	bfc	r1, #0, #16
   13ea4:	orr	r0, r1, r0
   13ea8:	str	r0, [sp, #16]
   13eac:	ldrb	r0, [r2, #278]	; 0x116
   13eb0:	add	r1, r0, #1
   13eb4:	strb	r1, [r2, #278]	; 0x116
   13eb8:	ldr	r0, [r8]
   13ebc:	add	r0, r0, #1
   13ec0:	str	r0, [r8]
   13ec4:	movw	r0, #61408	; 0xefe0
   13ec8:	movt	r0, #2
   13ecc:	ldr	r0, [r0]
   13ed0:	cmp	r0, #1
   13ed4:	blt	14034 <sprintf@plt+0x2774>
   13ed8:	movw	r4, #61352	; 0xefa8
   13edc:	mvn	r2, #0
   13ee0:	mov	r9, #0
   13ee4:	add	r6, sp, #16
   13ee8:	uxtab	r7, r2, r1
   13eec:	movt	r4, #2
   13ef0:	add	r1, r7, r9
   13ef4:	sdiv	r2, r1, r0
   13ef8:	mls	sl, r2, r0, r1
   13efc:	ldr	r1, [r4, sl, lsl #2]
   13f00:	cmp	r1, #0
   13f04:	beq	13f34 <sprintf@plt+0x2674>
   13f08:	sub	r3, r1, #1
   13f0c:	mov	r2, #243	; 0xf3
   13f10:	ldr	r1, [r8]
   13f14:	cmp	r3, #3
   13f18:	movwls	r2, #34540	; 0x86ec
   13f1c:	movtls	r2, #1
   13f20:	ldrls	r2, [r2, r3, lsl #2]
   13f24:	sdiv	r3, r1, r2
   13f28:	mls	r1, r3, r2, r1
   13f2c:	cmp	r1, #0
   13f30:	bne	13f8c <sprintf@plt+0x26cc>
   13f34:	movw	r0, #61344	; 0xefa0
   13f38:	movt	r0, #2
   13f3c:	ldr	r0, [r0]
   13f40:	bl	1156c <rb_get_fd@plt>
   13f44:	movw	r2, #62112	; 0xf2a0
   13f48:	lsl	r1, sl, #7
   13f4c:	mov	r3, #0
   13f50:	movt	r2, #2
   13f54:	ldrh	r1, [r2, r1]!	; <UNPREDICTABLE>
   13f58:	cmp	r1, #2
   13f5c:	mov	r1, #28
   13f60:	str	r2, [sp]
   13f64:	mov	r2, r5
   13f68:	movweq	r1, #16
   13f6c:	str	r1, [sp, #4]
   13f70:	mov	r1, r6
   13f74:	bl	115f0 <sendto@plt>
   13f78:	cmp	r0, r5
   13f7c:	beq	14028 <sprintf@plt+0x2768>
   13f80:	movw	r0, #61408	; 0xefe0
   13f84:	movt	r0, #2
   13f88:	ldr	r0, [r0]
   13f8c:	add	r9, r9, #1
   13f90:	cmp	r9, r0
   13f94:	blt	13ef0 <sprintf@plt+0x2630>
   13f98:	cmp	r0, #1
   13f9c:	blt	14034 <sprintf@plt+0x2774>
   13fa0:	mov	r6, #0
   13fa4:	add	r8, sp, #16
   13fa8:	add	r1, r7, r6
   13fac:	sdiv	r2, r1, r0
   13fb0:	mls	sl, r2, r0, r1
   13fb4:	ldr	r1, [r4, sl, lsl #2]
   13fb8:	cmp	r1, #0
   13fbc:	beq	14018 <sprintf@plt+0x2758>
   13fc0:	movw	r0, #61344	; 0xefa0
   13fc4:	movt	r0, #2
   13fc8:	ldr	r0, [r0]
   13fcc:	bl	1156c <rb_get_fd@plt>
   13fd0:	movw	r2, #62112	; 0xf2a0
   13fd4:	lsl	r1, sl, #7
   13fd8:	mov	r3, #0
   13fdc:	movt	r2, #2
   13fe0:	ldrh	r1, [r2, r1]!	; <UNPREDICTABLE>
   13fe4:	cmp	r1, #2
   13fe8:	mov	r1, #28
   13fec:	str	r2, [sp]
   13ff0:	mov	r2, r5
   13ff4:	movweq	r1, #16
   13ff8:	str	r1, [sp, #4]
   13ffc:	mov	r1, r8
   14000:	bl	115f0 <sendto@plt>
   14004:	cmp	r0, r5
   14008:	beq	14028 <sprintf@plt+0x2768>
   1400c:	movw	r0, #61408	; 0xefe0
   14010:	movt	r0, #2
   14014:	ldr	r0, [r0]
   14018:	add	r6, r6, #1
   1401c:	cmp	r6, r0
   14020:	blt	13fa8 <sprintf@plt+0x26e8>
   14024:	b	14034 <sprintf@plt+0x2774>
   14028:	cmn	sl, #1
   1402c:	ldrne	r0, [sp, #12]
   14030:	strne	sl, [r0, #288]	; 0x120
   14034:	sub	sp, fp, #28
   14038:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1403c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14040:	add	fp, sp, #28
   14044:	sub	sp, sp, #132	; 0x84
   14048:	movw	r5, #61408	; 0xefe0
   1404c:	mov	r0, #0
   14050:	movw	r1, #36047	; 0x8ccf
   14054:	movt	r5, #2
   14058:	movt	r1, #1
   1405c:	str	r0, [r5]
   14060:	movw	r0, #34566	; 0x8706
   14064:	movt	r0, #1
   14068:	bl	115fc <fopen@plt>
   1406c:	cmp	r0, #0
   14070:	beq	141c8 <sprintf@plt+0x2908>
   14074:	mov	r4, r0
   14078:	add	r5, sp, #4
   1407c:	mov	r1, #128	; 0x80
   14080:	mov	r0, r5
   14084:	mov	r2, r4
   14088:	bl	11644 <fgets_unlocked@plt>
   1408c:	cmp	r0, #0
   14090:	beq	141b8 <sprintf@plt+0x28f8>
   14094:	movw	r6, #36681	; 0x8f49
   14098:	sub	r7, r5, #1
   1409c:	mov	r8, #0
   140a0:	movt	r6, #1
   140a4:	b	14160 <sprintf@plt+0x28a0>
   140a8:	cmp	r2, #59	; 0x3b
   140ac:	mov	sl, r9
   140b0:	beq	141a0 <sprintf@plt+0x28e0>
   140b4:	ldrb	r2, [sl, #1]!
   140b8:	cmp	r2, #0
   140bc:	beq	140d0 <sprintf@plt+0x2810>
   140c0:	add	r3, r1, r2, lsl #1
   140c4:	ldrh	r3, [r3]
   140c8:	ands	r3, r3, #8192	; 0x2000
   140cc:	beq	140b4 <sprintf@plt+0x27f4>
   140d0:	cmp	r2, #0
   140d4:	beq	141a0 <sprintf@plt+0x28e0>
   140d8:	strb	r8, [sl]
   140dc:	ldr	r0, [r0]
   140e0:	ldrb	r1, [sl, #1]!
   140e4:	add	r1, r0, r1, lsl #1
   140e8:	ldrb	r1, [r1, #1]
   140ec:	tst	r1, #32
   140f0:	bne	140e0 <sprintf@plt+0x2820>
   140f4:	movw	r1, #34583	; 0x8717
   140f8:	mov	r0, sl
   140fc:	movt	r1, #1
   14100:	bl	11884 <strpbrk@plt>
   14104:	movw	r1, #34586	; 0x871a
   14108:	cmp	r0, #0
   1410c:	strbne	r8, [r0]
   14110:	mov	r0, r9
   14114:	movt	r1, #1
   14118:	bl	11698 <rb_strcasecmp@plt>
   1411c:	cmp	r0, #0
   14120:	beq	14148 <sprintf@plt+0x2888>
   14124:	movw	r1, #34593	; 0x8721
   14128:	mov	r0, r9
   1412c:	movt	r1, #1
   14130:	bl	11698 <rb_strcasecmp@plt>
   14134:	cmp	r0, #0
   14138:	bne	141a0 <sprintf@plt+0x28e0>
   1413c:	mov	r0, sl
   14140:	bl	141ec <sprintf@plt+0x292c>
   14144:	b	141a0 <sprintf@plt+0x28e0>
   14148:	movw	r0, #61856	; 0xf1a0
   1414c:	mov	r1, sl
   14150:	mov	r2, #256	; 0x100
   14154:	movt	r0, #2
   14158:	bl	11650 <rb_strlcpy@plt>
   1415c:	b	141a0 <sprintf@plt+0x28e0>
   14160:	mov	r0, r5
   14164:	mov	r1, r6
   14168:	bl	11884 <strpbrk@plt>
   1416c:	cmp	r0, #0
   14170:	strbne	r8, [r0]
   14174:	bl	11794 <__ctype_b_loc@plt>
   14178:	ldr	r1, [r0]
   1417c:	mov	r9, r7
   14180:	ldrb	r2, [r9, #1]!
   14184:	add	r3, r1, r2, lsl #1
   14188:	ldrb	r3, [r3, #1]
   1418c:	tst	r3, #32
   14190:	bne	14180 <sprintf@plt+0x28c0>
   14194:	cmp	r2, #0
   14198:	cmpne	r2, #35	; 0x23
   1419c:	bne	140a8 <sprintf@plt+0x27e8>
   141a0:	mov	r0, r5
   141a4:	mov	r1, #128	; 0x80
   141a8:	mov	r2, r4
   141ac:	bl	11644 <fgets_unlocked@plt>
   141b0:	cmp	r0, #0
   141b4:	bne	14160 <sprintf@plt+0x28a0>
   141b8:	mov	r0, r4
   141bc:	bl	1159c <fclose@plt>
   141c0:	movw	r5, #61408	; 0xefe0
   141c4:	movt	r5, #2
   141c8:	ldr	r0, [r5]
   141cc:	cmp	r0, #0
   141d0:	bne	141e0 <sprintf@plt+0x2920>
   141d4:	movw	r0, #34556	; 0x86fc
   141d8:	movt	r0, #1
   141dc:	bl	141ec <sprintf@plt+0x292c>
   141e0:	mov	r0, #0
   141e4:	sub	sp, fp, #28
   141e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141ec:	push	{r4, r5, r6, sl, fp, lr}
   141f0:	add	fp, sp, #16
   141f4:	sub	sp, sp, #40	; 0x28
   141f8:	movw	r5, #61408	; 0xefe0
   141fc:	movt	r5, #2
   14200:	ldr	r1, [r5]
   14204:	cmp	r1, #9
   14208:	bgt	14284 <sprintf@plt+0x29c4>
   1420c:	add	r2, sp, #8
   14210:	vmov.i32	q8, #0	; 0x00000000
   14214:	add	r3, sp, #4
   14218:	add	r1, r2, #4
   1421c:	vst1.32	{d16-d17}, [r1]
   14220:	add	r1, r2, #16
   14224:	vst1.32	{d16-d17}, [r1]
   14228:	mov	r1, #5
   1422c:	str	r1, [sp, #8]
   14230:	mov	r1, #2
   14234:	str	r1, [sp, #16]
   14238:	movw	r1, #34586	; 0x871a
   1423c:	movt	r1, #1
   14240:	bl	116a4 <getaddrinfo@plt>
   14244:	cmp	r0, #0
   14248:	bne	14284 <sprintf@plt+0x29c4>
   1424c:	ldr	r4, [sp, #4]
   14250:	cmp	r4, #0
   14254:	beq	14284 <sprintf@plt+0x29c4>
   14258:	ldr	r6, [r5]
   1425c:	ldr	r2, [r4, #16]
   14260:	ldr	r1, [r4, #20]
   14264:	movw	r0, #62112	; 0xf2a0
   14268:	movt	r0, #2
   1426c:	add	r0, r0, r6, lsl #7
   14270:	bl	116ec <memcpy@plt>
   14274:	add	r0, r6, #1
   14278:	str	r0, [r5]
   1427c:	mov	r0, r4
   14280:	bl	11614 <freeaddrinfo@plt>
   14284:	sub	sp, fp, #16
   14288:	pop	{r4, r5, r6, sl, fp, pc}
   1428c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14290:	add	fp, sp, #28
   14294:	sub	sp, sp, #284	; 0x11c
   14298:	cmp	r2, r0
   1429c:	bcc	1479c <sprintf@plt+0x2edc>
   142a0:	mov	ip, r1
   142a4:	cmp	r2, r1
   142a8:	bcs	1479c <sprintf@plt+0x2edc>
   142ac:	ldrb	r6, [r2]
   142b0:	ldr	r8, [fp, #8]
   142b4:	mov	r5, r3
   142b8:	cmp	r6, #0
   142bc:	beq	14740 <sprintf@plt+0x2e80>
   142c0:	str	r0, [sp, #20]
   142c4:	sub	r0, ip, r0
   142c8:	add	r7, sp, #25
   142cc:	str	r2, [sp, #4]
   142d0:	add	r1, r2, #1
   142d4:	mvn	r4, #0
   142d8:	mov	r8, #0
   142dc:	mov	sl, #0
   142e0:	str	r5, [sp, #8]
   142e4:	str	r0, [sp, #16]
   142e8:	rsb	r0, r2, #1
   142ec:	mov	r2, r7
   142f0:	str	r0, [sp, #12]
   142f4:	ands	r3, r6, #192	; 0xc0
   142f8:	beq	14330 <sprintf@plt+0x2a70>
   142fc:	cmp	r3, #192	; 0xc0
   14300:	beq	14378 <sprintf@plt+0x2ab8>
   14304:	cmp	r3, #64	; 0x40
   14308:	uxtbeq	r3, r6
   1430c:	cmpeq	r3, #65	; 0x41
   14310:	bne	1479c <sprintf@plt+0x2edc>
   14314:	ldrb	r3, [r1]
   14318:	mov	r0, #1
   1431c:	add	r5, r3, #7
   14320:	cmp	r3, #0
   14324:	add	r5, r0, r5, lsr #3
   14328:	movweq	r5, #33	; 0x21
   1432c:	b	14334 <sprintf@plt+0x2a74>
   14330:	uxtb	r5, r6
   14334:	add	r3, sl, #1
   14338:	add	sl, r5, r3
   1433c:	cmp	sl, #254	; 0xfe
   14340:	bgt	1479c <sprintf@plt+0x2edc>
   14344:	add	r9, r1, r5
   14348:	cmp	r9, ip
   1434c:	bcs	1479c <sprintf@plt+0x2edc>
   14350:	strb	r6, [r2]
   14354:	add	r0, r7, r3
   14358:	mov	r2, r5
   1435c:	mov	r6, ip
   14360:	bl	116ec <memcpy@plt>
   14364:	add	r0, r8, r5
   14368:	mov	ip, r6
   1436c:	mov	r1, r9
   14370:	add	r8, r0, #1
   14374:	b	143b8 <sprintf@plt+0x2af8>
   14378:	cmp	r1, ip
   1437c:	ldrbcc	r2, [r1]
   14380:	andcc	r0, r6, #63	; 0x3f
   14384:	orrcc	r0, r2, r0, lsl #8
   14388:	ldrcc	r2, [sp, #20]
   1438c:	addcc	r0, r2, r0
   14390:	cmpcc	r0, ip
   14394:	bcs	1479c <sprintf@plt+0x2edc>
   14398:	ldr	r2, [sp, #12]
   1439c:	cmp	r4, #0
   143a0:	add	r8, r8, #2
   143a4:	addlt	r4, r2, r1
   143a8:	ldr	r1, [sp, #16]
   143ac:	cmp	r8, r1
   143b0:	mov	r1, r0
   143b4:	bge	1479c <sprintf@plt+0x2edc>
   143b8:	ldrb	r6, [r1], #1
   143bc:	add	r2, r7, sl
   143c0:	cmp	r6, #0
   143c4:	bne	142f4 <sprintf@plt+0x2a34>
   143c8:	ldr	r5, [sp, #8]
   143cc:	mov	r0, #0
   143d0:	cmn	r4, #1
   143d4:	strb	r0, [r2]
   143d8:	bgt	143ec <sprintf@plt+0x2b2c>
   143dc:	ldr	r0, [sp, #4]
   143e0:	sub	r4, r1, r0
   143e4:	cmn	r4, #1
   143e8:	beq	147a8 <sprintf@plt+0x2ee8>
   143ec:	ldr	r8, [fp, #8]
   143f0:	ldrb	r6, [sp, #25]
   143f4:	add	sl, r5, r8
   143f8:	cmp	r6, #0
   143fc:	beq	14750 <sprintf@plt+0x2e90>
   14400:	movw	r1, #34604	; 0x872c
   14404:	add	r9, sp, #25
   14408:	mov	lr, #1
   1440c:	mov	ip, #92	; 0x5c
   14410:	mov	r0, r5
   14414:	movt	r1, #1
   14418:	uxtb	r2, r6
   1441c:	cmp	r2, #192	; 0xc0
   14420:	bcs	1479c <sprintf@plt+0x2edc>
   14424:	cmp	r0, r5
   14428:	mov	r3, r6
   1442c:	mov	r7, r5
   14430:	beq	1444c <sprintf@plt+0x2b8c>
   14434:	cmp	r0, sl
   14438:	bcs	1479c <sprintf@plt+0x2edc>
   1443c:	mov	r3, #46	; 0x2e
   14440:	strb	r3, [r0], #1
   14444:	ldrb	r3, [r9]
   14448:	mov	r7, r0
   1444c:	add	r0, r9, #1
   14450:	str	r0, [sp, #20]
   14454:	and	r0, r3, #192	; 0xc0
   14458:	cmp	r0, #64	; 0x40
   1445c:	beq	14470 <sprintf@plt+0x2bb0>
   14460:	cmp	r0, #192	; 0xc0
   14464:	beq	1479c <sprintf@plt+0x2edc>
   14468:	uxtb	r0, r3
   1446c:	b	14494 <sprintf@plt+0x2bd4>
   14470:	uxtb	r0, r3
   14474:	cmp	r0, #65	; 0x41
   14478:	bne	1479c <sprintf@plt+0x2edc>
   1447c:	ldr	r0, [sp, #20]
   14480:	ldrb	r3, [r0]
   14484:	add	r0, r3, #7
   14488:	cmp	r3, #0
   1448c:	add	r0, lr, r0, lsr #3
   14490:	movweq	r0, #33	; 0x21
   14494:	add	r3, r7, r0
   14498:	cmp	r3, sl
   1449c:	bcs	1479c <sprintf@plt+0x2edc>
   144a0:	and	r3, r6, #192	; 0xc0
   144a4:	cmp	r3, #64	; 0x40
   144a8:	bne	14578 <sprintf@plt+0x2cb8>
   144ac:	cmp	r2, #65	; 0x41
   144b0:	bne	147b8 <sprintf@plt+0x2ef8>
   144b4:	ldr	r0, [sp, #20]
   144b8:	ldrb	r6, [r0]
   144bc:	mov	r0, #7
   144c0:	cmp	r6, #0
   144c4:	movweq	r6, #256	; 0x100
   144c8:	cmp	r6, #9
   144cc:	add	r2, r6, #3
   144d0:	movwhi	r0, #8
   144d4:	cmp	r6, #99	; 0x63
   144d8:	movwhi	r0, #9
   144dc:	add	r0, r0, r2, lsr #2
   144e0:	add	r0, r7, r0
   144e4:	cmp	r0, sl
   144e8:	bcs	1479c <sprintf@plt+0x2edc>
   144ec:	movw	r0, #23388	; 0x5b5c
   144f0:	str	r7, [sp, #16]
   144f4:	add	r9, r9, #2
   144f8:	cmp	r6, #8
   144fc:	movt	r0, #120	; 0x78
   14500:	str	r0, [r7], #3
   14504:	bcc	1468c <sprintf@plt+0x2dcc>
   14508:	mvn	r0, r6
   1450c:	add	r8, r6, #8
   14510:	cmn	r0, #16
   14514:	mvnls	r0, #15
   14518:	add	r5, r8, r0
   1451c:	lsr	r0, r5, #3
   14520:	str	r0, [sp, #12]
   14524:	ldrb	r2, [r9], #1
   14528:	mov	r0, r7
   1452c:	bl	118c0 <sprintf@plt>
   14530:	movw	r1, #34604	; 0x872c
   14534:	sub	r8, r8, #8
   14538:	add	r7, r7, r0
   1453c:	movt	r1, #1
   14540:	cmp	r8, #15
   14544:	bgt	14524 <sprintf@plt+0x2c64>
   14548:	bic	r0, r5, #7
   1454c:	sub	r2, r6, #8
   14550:	ldr	r3, [sp, #12]
   14554:	ldr	r5, [sp, #8]
   14558:	ldr	r8, [fp, #8]
   1455c:	sub	r0, r2, r0
   14560:	ldr	r2, [sp, #20]
   14564:	add	r2, r2, r3
   14568:	add	r9, r2, #2
   1456c:	add	r2, r2, #1
   14570:	str	r2, [sp, #20]
   14574:	b	14690 <sprintf@plt+0x2dd0>
   14578:	cmp	r0, #1
   1457c:	blt	14720 <sprintf@plt+0x2e60>
   14580:	ldr	r9, [sp, #20]
   14584:	mov	r2, r7
   14588:	add	r7, r0, #1
   1458c:	mov	r0, r2
   14590:	b	14644 <sprintf@plt+0x2d84>
   14594:	cmp	r2, #92	; 0x5c
   14598:	beq	14664 <sprintf@plt+0x2da4>
   1459c:	sub	r3, r2, #33	; 0x21
   145a0:	cmp	r3, #94	; 0x5e
   145a4:	bcc	14634 <sprintf@plt+0x2d74>
   145a8:	add	r3, r0, #3
   145ac:	cmp	r3, sl
   145b0:	bcs	1479c <sprintf@plt+0x2edc>
   145b4:	movw	r3, #34079	; 0x851f
   145b8:	strb	ip, [r0]
   145bc:	movt	r3, #20971	; 0x51eb
   145c0:	umull	r3, ip, r2, r3
   145c4:	movw	r3, #34618	; 0x873a
   145c8:	movt	r3, #1
   145cc:	ldrb	r3, [r3, ip, lsr #5]
   145d0:	strb	r3, [r0, #1]
   145d4:	movw	r3, #52429	; 0xcccd
   145d8:	movt	r3, #52428	; 0xcccc
   145dc:	umull	r3, r6, r2, r3
   145e0:	lsr	r3, r6, #3
   145e4:	movw	r6, #34618	; 0x873a
   145e8:	add	r3, r3, r3, lsl #2
   145ec:	movt	r6, #1
   145f0:	sub	r3, r2, r3, lsl #1
   145f4:	ldrb	r3, [r6, r3]
   145f8:	mov	r6, #100	; 0x64
   145fc:	strb	r3, [r0, #3]
   14600:	lsr	r3, ip, #5
   14604:	mov	ip, #92	; 0x5c
   14608:	mls	r2, r3, r6, r2
   1460c:	movw	r3, #52429	; 0xcccd
   14610:	uxtb	r2, r2
   14614:	movt	r3, #52428	; 0xcccc
   14618:	umull	r2, r3, r2, r3
   1461c:	movw	r2, #34618	; 0x873a
   14620:	movt	r2, #1
   14624:	ldrb	r2, [r2, r3, lsr #3]
   14628:	strb	r2, [r0, #2]
   1462c:	add	r0, r0, #4
   14630:	b	1467c <sprintf@plt+0x2dbc>
   14634:	cmp	r0, sl
   14638:	bcs	1479c <sprintf@plt+0x2edc>
   1463c:	strb	r2, [r0], #1
   14640:	b	1467c <sprintf@plt+0x2dbc>
   14644:	ldrb	r2, [r9], #1
   14648:	sub	r3, r2, #34	; 0x22
   1464c:	cmp	r3, #30
   14650:	bhi	14594 <sprintf@plt+0x2cd4>
   14654:	movw	r6, #4293	; 0x10c5
   14658:	movt	r6, #16896	; 0x4200
   1465c:	tst	r6, lr, lsl r3
   14660:	beq	14594 <sprintf@plt+0x2cd4>
   14664:	add	r3, r0, #1
   14668:	cmp	r3, sl
   1466c:	bcs	1479c <sprintf@plt+0x2edc>
   14670:	strb	r2, [r0, #1]
   14674:	strb	ip, [r0]
   14678:	add	r0, r0, #2
   1467c:	sub	r7, r7, #1
   14680:	cmp	r7, #1
   14684:	bgt	14644 <sprintf@plt+0x2d84>
   14688:	b	14728 <sprintf@plt+0x2e68>
   1468c:	mov	r0, r6
   14690:	cmp	r0, #5
   14694:	blt	146a8 <sprintf@plt+0x2de8>
   14698:	ldrb	ip, [r9]
   1469c:	mov	r3, #255	; 0xff
   146a0:	mov	r2, #8
   146a4:	b	146c8 <sprintf@plt+0x2e08>
   146a8:	cmp	r0, #1
   146ac:	blt	146e4 <sprintf@plt+0x2e24>
   146b0:	ldrb	r1, [r9]
   146b4:	mov	r3, #15
   146b8:	mov	r2, #4
   146bc:	lsr	ip, r1, #4
   146c0:	movw	r1, #34609	; 0x8731
   146c4:	movt	r1, #1
   146c8:	sub	r0, r2, r0
   146cc:	and	r2, ip, r3, lsl r0
   146d0:	mov	r0, r7
   146d4:	bl	118c0 <sprintf@plt>
   146d8:	add	r7, r7, r0
   146dc:	ldr	r0, [sp, #20]
   146e0:	add	r9, r0, #2
   146e4:	movw	r1, #34613	; 0x8735
   146e8:	mov	r0, r7
   146ec:	mov	r2, r6
   146f0:	movt	r1, #1
   146f4:	bl	118c0 <sprintf@plt>
   146f8:	ldr	r1, [sp, #16]
   146fc:	add	r0, r7, r0
   14700:	mov	lr, #1
   14704:	mov	ip, #92	; 0x5c
   14708:	sub	r1, r0, r1
   1470c:	cmp	r1, #0
   14710:	movw	r1, #34604	; 0x872c
   14714:	movt	r1, #1
   14718:	bge	14728 <sprintf@plt+0x2e68>
   1471c:	b	1479c <sprintf@plt+0x2edc>
   14720:	ldr	r9, [sp, #20]
   14724:	mov	r0, r7
   14728:	ldrb	r6, [r9]
   1472c:	cmp	r6, #0
   14730:	bne	14418 <sprintf@plt+0x2b58>
   14734:	cmp	r0, r5
   14738:	bne	14764 <sprintf@plt+0x2ea4>
   1473c:	b	14750 <sprintf@plt+0x2e90>
   14740:	mov	r0, #0
   14744:	add	sl, r5, r8
   14748:	mov	r4, #1
   1474c:	strb	r0, [sp, #25]
   14750:	cmp	r8, #0
   14754:	ble	1479c <sprintf@plt+0x2edc>
   14758:	mov	r1, #46	; 0x2e
   1475c:	mov	r0, r5
   14760:	strb	r1, [r0], #1
   14764:	cmp	r0, sl
   14768:	bcs	1479c <sprintf@plt+0x2edc>
   1476c:	mov	r1, #0
   14770:	strb	r1, [r0], #1
   14774:	sub	r0, r0, r5
   14778:	cmn	r0, #1
   1477c:	beq	147a8 <sprintf@plt+0x2ee8>
   14780:	cmp	r4, #1
   14784:	blt	147ac <sprintf@plt+0x2eec>
   14788:	ldrb	r0, [r5]
   1478c:	cmp	r0, #46	; 0x2e
   14790:	moveq	r0, #0
   14794:	strbeq	r0, [r5]
   14798:	b	147ac <sprintf@plt+0x2eec>
   1479c:	bl	118b4 <__errno_location@plt>
   147a0:	mov	r1, #90	; 0x5a
   147a4:	str	r1, [r0]
   147a8:	mvn	r4, #0
   147ac:	mov	r0, r4
   147b0:	sub	sp, fp, #28
   147b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   147b8:	bl	118b4 <__errno_location@plt>
   147bc:	mov	r1, #22
   147c0:	b	147a4 <sprintf@plt+0x2ee4>
   147c4:	push	{r4, sl, fp, lr}
   147c8:	add	fp, sp, #8
   147cc:	cmp	r0, r1
   147d0:	mov	lr, r0
   147d4:	bcs	14840 <sprintf@plt+0x2f80>
   147d8:	mov	ip, #1
   147dc:	mov	lr, r0
   147e0:	mov	r2, lr
   147e4:	ldrb	r3, [r2], #1
   147e8:	cmp	r3, #0
   147ec:	beq	1482c <sprintf@plt+0x2f6c>
   147f0:	ands	r4, r3, #192	; 0xc0
   147f4:	beq	1481c <sprintf@plt+0x2f5c>
   147f8:	cmp	r4, #64	; 0x40
   147fc:	bne	14834 <sprintf@plt+0x2f74>
   14800:	cmp	r3, #65	; 0x41
   14804:	bne	1484c <sprintf@plt+0x2f8c>
   14808:	ldrb	r4, [r2]
   1480c:	add	r3, r4, #7
   14810:	cmp	r4, #0
   14814:	add	r3, ip, r3, lsr #3
   14818:	movweq	r3, #33	; 0x21
   1481c:	add	lr, r2, r3
   14820:	cmp	lr, r1
   14824:	bcc	147e0 <sprintf@plt+0x2f20>
   14828:	b	14840 <sprintf@plt+0x2f80>
   1482c:	mov	lr, r2
   14830:	b	14840 <sprintf@plt+0x2f80>
   14834:	cmp	r4, #192	; 0xc0
   14838:	bne	1484c <sprintf@plt+0x2f8c>
   1483c:	add	lr, lr, #2
   14840:	cmp	lr, r1
   14844:	subls	r0, lr, r0
   14848:	popls	{r4, sl, fp, pc}
   1484c:	bl	118b4 <__errno_location@plt>
   14850:	mov	r1, #90	; 0x5a
   14854:	str	r1, [r0]
   14858:	mvn	r0, #0
   1485c:	pop	{r4, sl, fp, pc}
   14860:	ldrb	r1, [r0]
   14864:	ldrb	r0, [r0, #1]
   14868:	orr	r0, r0, r1, lsl #8
   1486c:	bx	lr
   14870:	ldr	r0, [r0]
   14874:	rev	r0, r0
   14878:	bx	lr
   1487c:	strb	r0, [r1, #1]
   14880:	lsr	r0, r0, #8
   14884:	strb	r0, [r1]
   14888:	bx	lr
   1488c:	lsr	r2, r0, #16
   14890:	strb	r0, [r1, #3]
   14894:	strb	r2, [r1, #1]
   14898:	lsr	r2, r0, #24
   1489c:	lsr	r0, r0, #8
   148a0:	strb	r2, [r1]
   148a4:	strb	r0, [r1, #2]
   148a8:	bx	lr
   148ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   148b0:	add	fp, sp, #28
   148b4:	sub	sp, sp, #396	; 0x18c
   148b8:	mov	r7, r0
   148bc:	mvn	r0, #0
   148c0:	cmp	r3, #0
   148c4:	beq	15098 <sprintf@plt+0x37d8>
   148c8:	ldr	r4, [fp, #8]
   148cc:	cmp	r4, #12
   148d0:	blt	15098 <sprintf@plt+0x37d8>
   148d4:	cmp	r4, #16
   148d8:	mov	r6, #0
   148dc:	mov	r5, #65536	; 0x10000
   148e0:	stm	r3, {r5, r6}
   148e4:	str	r6, [r3, #8]
   148e8:	str	r6, [sp, #52]	; 0x34
   148ec:	str	r3, [sp, #48]	; 0x30
   148f0:	blt	15098 <sprintf@plt+0x37d8>
   148f4:	add	r4, sp, #129	; 0x81
   148f8:	str	r1, [sp, #40]	; 0x28
   148fc:	str	r2, [sp, #28]
   14900:	str	r3, [sp, #36]	; 0x24
   14904:	add	r0, r4, #1
   14908:	add	r1, r4, #255	; 0xff
   1490c:	str	r0, [fp, #-40]	; 0xffffffd8
   14910:	str	r1, [sp, #44]	; 0x2c
   14914:	ldrb	r1, [r7]
   14918:	cmp	r1, #0
   1491c:	beq	14cc0 <sprintf@plt+0x3400>
   14920:	sub	r0, fp, #40	; 0x28
   14924:	add	r3, r0, #4
   14928:	str	r3, [sp, #24]
   1492c:	movw	r5, #34618	; 0x873a
   14930:	mov	r0, #0
   14934:	str	r4, [sp, #32]
   14938:	movt	r5, #1
   1493c:	uxtb	r9, r1
   14940:	add	r8, r7, #1
   14944:	cmp	r0, #0
   14948:	beq	149ec <sprintf@plt+0x312c>
   1494c:	cmp	r9, #91	; 0x5b
   14950:	beq	14a34 <sprintf@plt+0x3174>
   14954:	mov	r0, r5
   14958:	mov	r1, r9
   1495c:	mov	r2, #11
   14960:	bl	11890 <memchr@plt>
   14964:	cmp	r0, #0
   14968:	beq	14a00 <sprintf@plt+0x3140>
   1496c:	ldrb	r1, [r7, #1]
   14970:	mov	r6, #90	; 0x5a
   14974:	cmp	r1, #0
   14978:	beq	1508c <sprintf@plt+0x37cc>
   1497c:	mov	sl, r0
   14980:	mov	r0, r5
   14984:	mov	r2, #11
   14988:	bl	11890 <memchr@plt>
   1498c:	cmp	r0, #0
   14990:	ldrbne	r1, [r7, #2]
   14994:	cmpne	r1, #0
   14998:	beq	1508c <sprintf@plt+0x37cc>
   1499c:	movw	r5, #34618	; 0x873a
   149a0:	mov	r4, r0
   149a4:	mov	r2, #11
   149a8:	movt	r5, #1
   149ac:	mov	r0, r5
   149b0:	bl	11890 <memchr@plt>
   149b4:	cmp	r0, #0
   149b8:	beq	1508c <sprintf@plt+0x37cc>
   149bc:	sub	r1, sl, r5
   149c0:	mov	r2, #100	; 0x64
   149c4:	sub	r0, r0, r5
   149c8:	mul	r1, r1, r2
   149cc:	sub	r2, r4, r5
   149d0:	add	r2, r2, r2, lsl #2
   149d4:	add	r1, r1, r2, lsl #1
   149d8:	add	r9, r1, r0
   149dc:	cmp	r9, #255	; 0xff
   149e0:	bgt	1508c <sprintf@plt+0x37cc>
   149e4:	add	r8, r7, #3
   149e8:	b	14a00 <sprintf@plt+0x3140>
   149ec:	mov	r0, #1
   149f0:	cmp	r9, #92	; 0x5c
   149f4:	beq	14a20 <sprintf@plt+0x3160>
   149f8:	cmp	r9, #46	; 0x2e
   149fc:	beq	14ad8 <sprintf@plt+0x3218>
   14a00:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14a04:	ldr	r1, [sp, #44]	; 0x2c
   14a08:	cmp	r0, r1
   14a0c:	bcs	15088 <sprintf@plt+0x37c8>
   14a10:	add	r1, r0, #1
   14a14:	str	r1, [fp, #-40]	; 0xffffffd8
   14a18:	strb	r9, [r0]
   14a1c:	mov	r0, #0
   14a20:	ldrb	r1, [r8]
   14a24:	mov	r7, r8
   14a28:	cmp	r1, #0
   14a2c:	bne	1493c <sprintf@plt+0x307c>
   14a30:	b	1507c <sprintf@plt+0x37bc>
   14a34:	mov	r0, r8
   14a38:	mov	r1, #93	; 0x5d
   14a3c:	bl	115b4 <strchr@plt>
   14a40:	cmp	r0, #0
   14a44:	beq	150ac <sprintf@plt+0x37ec>
   14a48:	mov	r4, r0
   14a4c:	mov	r0, #0
   14a50:	add	r9, r4, #2
   14a54:	str	r0, [fp, #-36]	; 0xffffffdc
   14a58:	sub	r0, r9, r8
   14a5c:	cmp	r0, #2
   14a60:	blt	150ac <sprintf@plt+0x37ec>
   14a64:	ldrb	r0, [r7, #1]
   14a68:	cmp	r0, #120	; 0x78
   14a6c:	bne	150ac <sprintf@plt+0x37ec>
   14a70:	add	r8, r7, #2
   14a74:	bl	11794 <__ctype_b_loc@plt>
   14a78:	ldrb	r1, [r8]
   14a7c:	ldr	r2, [r0]
   14a80:	add	r2, r2, r1, lsl #1
   14a84:	ldrb	r2, [r2, #1]
   14a88:	tst	r2, #16
   14a8c:	beq	150ac <sprintf@plt+0x37ec>
   14a90:	ldr	r2, [sp, #44]	; 0x2c
   14a94:	ldr	r3, [sp, #24]
   14a98:	mov	r5, #0
   14a9c:	cmp	r2, r3
   14aa0:	bls	14bd4 <sprintf@plt+0x3314>
   14aa4:	cmp	r7, r4
   14aa8:	mov	sl, #0
   14aac:	mov	r4, r3
   14ab0:	mov	r2, #0
   14ab4:	bcs	14be0 <sprintf@plt+0x3320>
   14ab8:	ldr	r4, [sp, #24]
   14abc:	add	r8, r7, #3
   14ac0:	mov	sl, #0
   14ac4:	mov	r6, #0
   14ac8:	mov	r5, #0
   14acc:	mov	r7, #0
   14ad0:	mov	r3, #0
   14ad4:	b	14b30 <sprintf@plt+0x3270>
   14ad8:	ldr	r2, [sp, #32]
   14adc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14ae0:	mov	r6, #90	; 0x5a
   14ae4:	mvn	r0, r2
   14ae8:	add	r0, r1, r0
   14aec:	tst	r0, #192	; 0xc0
   14af0:	bne	1508c <sprintf@plt+0x37cc>
   14af4:	ldr	r1, [sp, #44]	; 0x2c
   14af8:	cmp	r1, r2
   14afc:	bls	1508c <sprintf@plt+0x37cc>
   14b00:	strb	r0, [r2]
   14b04:	ldrb	r1, [r8]
   14b08:	cmp	r1, #0
   14b0c:	beq	15140 <sprintf@plt+0x3880>
   14b10:	cmp	r0, #0
   14b14:	cmpne	r1, #46	; 0x2e
   14b18:	beq	1508c <sprintf@plt+0x37cc>
   14b1c:	ldr	r4, [fp, #-40]	; 0xffffffd8
   14b20:	add	r0, r4, #1
   14b24:	str	r0, [fp, #-40]	; 0xffffffd8
   14b28:	b	14c60 <sprintf@plt+0x33a0>
   14b2c:	ldrb	r1, [r8], #1
   14b30:	uxtb	r1, r1
   14b34:	cmp	r1, #47	; 0x2f
   14b38:	beq	14b78 <sprintf@plt+0x32b8>
   14b3c:	cmp	r1, #93	; 0x5d
   14b40:	beq	14c74 <sprintf@plt+0x33b4>
   14b44:	ldr	r2, [r0]
   14b48:	cmp	r3, #0
   14b4c:	add	r2, r2, r1, lsl #1
   14b50:	ldrh	r2, [r2]
   14b54:	beq	14b80 <sprintf@plt+0x32c0>
   14b58:	tst	r2, #2048	; 0x800
   14b5c:	beq	150ac <sprintf@plt+0x37ec>
   14b60:	cmp	r7, #0
   14b64:	bne	14bbc <sprintf@plt+0x32fc>
   14b68:	cmp	r1, #48	; 0x30
   14b6c:	beq	150ac <sprintf@plt+0x37ec>
   14b70:	sub	r7, r8, #1
   14b74:	b	14bbc <sprintf@plt+0x32fc>
   14b78:	mov	r3, #1
   14b7c:	b	14bbc <sprintf@plt+0x32fc>
   14b80:	tst	r2, #4096	; 0x1000
   14b84:	beq	150ac <sprintf@plt+0x37ec>
   14b88:	cmp	sl, #252	; 0xfc
   14b8c:	bgt	150ac <sprintf@plt+0x37ec>
   14b90:	movw	r2, #34629	; 0x8745
   14b94:	add	r6, r6, #4
   14b98:	mov	r3, #0
   14b9c:	add	sl, sl, #4
   14ba0:	movt	r2, #1
   14ba4:	cmp	r6, #8
   14ba8:	ldrb	r1, [r2, r1]
   14bac:	moveq	r3, #0
   14bb0:	moveq	r6, #0
   14bb4:	add	r5, r1, r5, lsl #4
   14bb8:	strbeq	r5, [r4], #1
   14bbc:	cmp	r8, r9
   14bc0:	mov	r2, #0
   14bc4:	ldrcc	r1, [sp, #44]	; 0x2c
   14bc8:	cmpcc	r4, r1
   14bcc:	bcs	14be0 <sprintf@plt+0x3320>
   14bd0:	b	14b2c <sprintf@plt+0x326c>
   14bd4:	mov	sl, #0
   14bd8:	mov	r4, r3
   14bdc:	mov	r2, #0
   14be0:	mov	r6, #90	; 0x5a
   14be4:	cmp	r8, r9
   14be8:	bcs	1508c <sprintf@plt+0x37cc>
   14bec:	ldr	r0, [sp, #44]	; 0x2c
   14bf0:	ldr	r1, [sp, #32]
   14bf4:	cmp	r4, r0
   14bf8:	bcs	1508c <sprintf@plt+0x37cc>
   14bfc:	cmp	r2, #1
   14c00:	blt	14c30 <sprintf@plt+0x3370>
   14c04:	add	r0, r2, #3
   14c08:	bic	r0, r0, #3
   14c0c:	cmp	r0, sl
   14c10:	bne	150ac <sprintf@plt+0x37ec>
   14c14:	rsb	r0, sl, #8
   14c18:	mov	r7, #255	; 0xff
   14c1c:	mov	r6, #22
   14c20:	add	r0, r0, r2
   14c24:	tst	r5, r7, lsr r0
   14c28:	beq	14c34 <sprintf@plt+0x3374>
   14c2c:	b	1508c <sprintf@plt+0x37cc>
   14c30:	mov	r2, sl
   14c34:	mov	r0, #65	; 0x41
   14c38:	strb	r0, [r1]
   14c3c:	subs	r0, r2, #256	; 0x100
   14c40:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14c44:	movne	r0, r2
   14c48:	strb	r0, [r1]
   14c4c:	add	r0, r4, #1
   14c50:	str	r0, [fp, #-40]	; 0xffffffd8
   14c54:	ldrb	r1, [r8], #1
   14c58:	cmp	r1, #46	; 0x2e
   14c5c:	bne	150dc <sprintf@plt+0x381c>
   14c60:	ldrb	r1, [r8]
   14c64:	mov	r7, r8
   14c68:	cmp	r1, #0
   14c6c:	bne	1492c <sprintf@plt+0x306c>
   14c70:	b	14cc4 <sprintf@plt+0x3404>
   14c74:	cmp	r3, #0
   14c78:	beq	14cac <sprintf@plt+0x33ec>
   14c7c:	cmp	r7, #0
   14c80:	beq	150ac <sprintf@plt+0x37ec>
   14c84:	mov	r0, r7
   14c88:	sub	r1, fp, #36	; 0x24
   14c8c:	mov	r2, #10
   14c90:	bl	11710 <strtol@plt>
   14c94:	mov	r2, r0
   14c98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14c9c:	ldrb	r0, [r0]
   14ca0:	cmp	r0, #93	; 0x5d
   14ca4:	beq	14cb0 <sprintf@plt+0x33f0>
   14ca8:	b	150ac <sprintf@plt+0x37ec>
   14cac:	mov	r2, #0
   14cb0:	cmp	r6, #0
   14cb4:	lslne	r0, r5, #4
   14cb8:	strbne	r0, [r4], #1
   14cbc:	b	14be0 <sprintf@plt+0x3320>
   14cc0:	add	r4, sp, #129	; 0x81
   14cc4:	mvn	r1, r4
   14cc8:	mov	r6, #90	; 0x5a
   14ccc:	add	r0, r0, r1
   14cd0:	tst	r0, #192	; 0xc0
   14cd4:	bne	1508c <sprintf@plt+0x37cc>
   14cd8:	ldr	r1, [sp, #44]	; 0x2c
   14cdc:	mov	r2, r4
   14ce0:	mov	r6, #90	; 0x5a
   14ce4:	cmp	r4, r1
   14ce8:	bcs	1508c <sprintf@plt+0x37cc>
   14cec:	cmp	r0, #0
   14cf0:	strb	r0, [r2]
   14cf4:	beq	14d18 <sprintf@plt+0x3458>
   14cf8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14cfc:	ldr	r1, [sp, #44]	; 0x2c
   14d00:	cmp	r0, r1
   14d04:	bcs	1508c <sprintf@plt+0x37cc>
   14d08:	add	r1, r0, #1
   14d0c:	str	r1, [fp, #-40]	; 0xffffffd8
   14d10:	mov	r1, #0
   14d14:	strb	r1, [r0]
   14d18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14d1c:	add	r1, sp, #129	; 0x81
   14d20:	sub	r0, r0, r1
   14d24:	cmp	r0, #256	; 0x100
   14d28:	bge	1508c <sprintf@plt+0x37cc>
   14d2c:	ldr	r0, [sp, #36]	; 0x24
   14d30:	ldr	r9, [sp, #48]	; 0x30
   14d34:	ldr	r8, [sp, #40]	; 0x28
   14d38:	add	r1, sp, #48	; 0x30
   14d3c:	mov	r7, #0
   14d40:	add	r5, r0, #12
   14d44:	ldr	r0, [fp, #8]
   14d48:	cmp	r9, #0
   14d4c:	sub	r2, r0, #16
   14d50:	mov	r0, #0
   14d54:	beq	14d68 <sprintf@plt+0x34a8>
   14d58:	mov	r7, r1
   14d5c:	ldr	r3, [r7, #4]!
   14d60:	cmp	r3, #0
   14d64:	bne	14d5c <sprintf@plt+0x349c>
   14d68:	add	ip, r1, #4
   14d6c:	add	r1, r5, r2
   14d70:	mov	r2, #1
   14d74:	str	r1, [sp, #32]
   14d78:	add	r1, sp, #129	; 0x81
   14d7c:	ldrb	r3, [r1]
   14d80:	cmp	r3, #192	; 0xc0
   14d84:	bcs	150cc <sprintf@plt+0x380c>
   14d88:	and	r6, r3, #192	; 0xc0
   14d8c:	cmp	r6, #64	; 0x40
   14d90:	beq	14da4 <sprintf@plt+0x34e4>
   14d94:	cmp	r6, #192	; 0xc0
   14d98:	mov	r6, r3
   14d9c:	bne	14dc0 <sprintf@plt+0x3500>
   14da0:	b	150a0 <sprintf@plt+0x37e0>
   14da4:	cmp	r3, #65	; 0x41
   14da8:	bne	150a0 <sprintf@plt+0x37e0>
   14dac:	ldrb	r4, [r1, #1]
   14db0:	add	r6, r4, #7
   14db4:	cmp	r4, #0
   14db8:	add	r6, r2, r6, lsr #3
   14dbc:	movweq	r6, #33	; 0x21
   14dc0:	add	r6, r6, #1
   14dc4:	add	r0, r6, r0
   14dc8:	cmp	r0, #256	; 0x100
   14dcc:	bge	150cc <sprintf@plt+0x380c>
   14dd0:	add	r1, r1, r6
   14dd4:	cmp	r3, #0
   14dd8:	bne	14d7c <sprintf@plt+0x34bc>
   14ddc:	add	r0, sp, #48	; 0x30
   14de0:	mov	r3, r5
   14de4:	add	sl, sp, #129	; 0x81
   14de8:	str	ip, [sp, #12]
   14dec:	str	r5, [sp]
   14df0:	str	r7, [sp, #16]
   14df4:	add	r0, r0, #76	; 0x4c
   14df8:	str	r0, [sp, #8]
   14dfc:	mov	r0, #1
   14e00:	ldrb	r4, [sl]
   14e04:	cmp	r9, #0
   14e08:	str	r0, [sp, #44]	; 0x2c
   14e0c:	cmpne	r4, #0
   14e10:	bne	14e5c <sprintf@plt+0x359c>
   14e14:	cmp	r4, #191	; 0xbf
   14e18:	bhi	150c0 <sprintf@plt+0x3800>
   14e1c:	ldrb	r0, [sl]
   14e20:	mvn	r6, #0
   14e24:	and	r1, r0, #192	; 0xc0
   14e28:	cmp	r1, #192	; 0xc0
   14e2c:	beq	14f98 <sprintf@plt+0x36d8>
   14e30:	cmp	r1, #64	; 0x40
   14e34:	bne	14f94 <sprintf@plt+0x36d4>
   14e38:	cmp	r0, #65	; 0x41
   14e3c:	bne	14f98 <sprintf@plt+0x36d8>
   14e40:	ldrb	r0, [sl, #1]
   14e44:	mov	r2, #1
   14e48:	add	r1, r0, #7
   14e4c:	cmp	r0, #0
   14e50:	add	r6, r2, r1, lsr #3
   14e54:	movweq	r6, #33	; 0x21
   14e58:	b	14f98 <sprintf@plt+0x36d8>
   14e5c:	ldr	r0, [sp, #12]
   14e60:	mov	r6, #2
   14e64:	str	r3, [sp, #24]
   14e68:	cmp	r0, r7
   14e6c:	bcs	14fec <sprintf@plt+0x372c>
   14e70:	str	r4, [sp, #4]
   14e74:	ldr	lr, [r0]
   14e78:	str	r0, [sp, #20]
   14e7c:	ldrb	r8, [lr]
   14e80:	sub	r2, r8, #1
   14e84:	uxtb	r2, r2
   14e88:	cmp	r2, #62	; 0x3e
   14e8c:	bhi	14f74 <sprintf@plt+0x36b4>
   14e90:	sub	r5, lr, r9
   14e94:	cmp	r5, #16384	; 0x4000
   14e98:	bge	14f74 <sprintf@plt+0x36b4>
   14e9c:	mov	r2, r8
   14ea0:	mov	r4, sl
   14ea4:	mov	r6, lr
   14ea8:	tst	r2, #255	; 0xff
   14eac:	beq	14f5c <sprintf@plt+0x369c>
   14eb0:	and	r3, r2, #192	; 0xc0
   14eb4:	add	r6, r6, #1
   14eb8:	cmp	r3, #192	; 0xc0
   14ebc:	bne	14ee0 <sprintf@plt+0x3620>
   14ec0:	ldrb	r0, [r6]
   14ec4:	and	r1, r2, #63	; 0x3f
   14ec8:	mov	r6, r9
   14ecc:	orr	r0, r0, r1, lsl #8
   14ed0:	ldrb	r2, [r6, r0]!
   14ed4:	cmp	r2, #0
   14ed8:	bne	14eb0 <sprintf@plt+0x35f0>
   14edc:	b	14f5c <sprintf@plt+0x369c>
   14ee0:	cmp	r3, #0
   14ee4:	bne	14fe0 <sprintf@plt+0x3720>
   14ee8:	ldrb	r3, [r4]
   14eec:	uxtb	ip, r2
   14ef0:	cmp	ip, r3
   14ef4:	bne	14f5c <sprintf@plt+0x369c>
   14ef8:	ldrb	r3, [r4, #1]
   14efc:	add	r2, r4, #2
   14f00:	rsb	r4, ip, #0
   14f04:	mvn	r0, #64	; 0x40
   14f08:	uxtb	r1, r3
   14f0c:	uxtab	r0, r0, r3
   14f10:	cmp	r0, #26
   14f14:	mov	r0, #32
   14f18:	uxtabcc	r1, r0, r3
   14f1c:	ldrb	r0, [r6]
   14f20:	sub	r3, r0, #65	; 0x41
   14f24:	cmp	r3, #26
   14f28:	addcc	r0, r0, #32
   14f2c:	cmp	r1, r0
   14f30:	bne	14f5c <sprintf@plt+0x369c>
   14f34:	ldrb	r3, [r2], #1
   14f38:	adds	r4, r4, #1
   14f3c:	add	r6, r6, #1
   14f40:	bne	14f04 <sprintf@plt+0x3644>
   14f44:	sub	r4, r2, #1
   14f48:	ldrb	r2, [r6]
   14f4c:	cmp	r3, #0
   14f50:	bne	14ea8 <sprintf@plt+0x35e8>
   14f54:	cmp	r2, #0
   14f58:	beq	15040 <sprintf@plt+0x3780>
   14f5c:	uxtab	lr, lr, r8
   14f60:	ldrb	r8, [lr, #1]!
   14f64:	sub	r0, r8, #1
   14f68:	uxtb	r0, r0
   14f6c:	cmp	r0, #63	; 0x3f
   14f70:	bcc	14e90 <sprintf@plt+0x35d0>
   14f74:	ldr	r0, [sp, #20]
   14f78:	add	r0, r0, #4
   14f7c:	cmp	r0, r7
   14f80:	bcc	14e74 <sprintf@plt+0x35b4>
   14f84:	ldr	r8, [sp, #40]	; 0x28
   14f88:	ldr	r4, [sp, #4]
   14f8c:	mov	r6, #2
   14f90:	b	14fec <sprintf@plt+0x372c>
   14f94:	mov	r6, r0
   14f98:	ldr	r1, [sp, #32]
   14f9c:	add	r0, r3, r6
   14fa0:	add	r0, r0, #1
   14fa4:	cmp	r0, r1
   14fa8:	bcs	150c0 <sprintf@plt+0x3800>
   14fac:	add	r4, r6, #1
   14fb0:	mov	r0, r3
   14fb4:	mov	r1, sl
   14fb8:	mov	r5, r3
   14fbc:	mov	r2, r4
   14fc0:	bl	116ec <memcpy@plt>
   14fc4:	ldr	r0, [sp, #44]	; 0x2c
   14fc8:	mov	r3, r5
   14fcc:	add	sl, sl, r4
   14fd0:	cmp	r6, #0
   14fd4:	add	r3, r5, r4
   14fd8:	bne	14e00 <sprintf@plt+0x3540>
   14fdc:	b	150b4 <sprintf@plt+0x37f4>
   14fe0:	ldr	r8, [sp, #40]	; 0x28
   14fe4:	ldr	r4, [sp, #4]
   14fe8:	mov	r6, #90	; 0x5a
   14fec:	bl	118b4 <__errno_location@plt>
   14ff0:	str	r6, [r0]
   14ff4:	ldr	r0, [sp, #8]
   14ff8:	ldr	r1, [sp, #16]
   14ffc:	ldr	r3, [sp, #24]
   15000:	cmp	r1, r0
   15004:	bcs	14e14 <sprintf@plt+0x3554>
   15008:	sub	r0, r3, r9
   1500c:	cmp	r0, #16384	; 0x4000
   15010:	bge	14e14 <sprintf@plt+0x3554>
   15014:	ldr	r0, [sp, #44]	; 0x2c
   15018:	cmp	r0, #0
   1501c:	beq	14e14 <sprintf@plt+0x3554>
   15020:	ldr	r0, [sp, #16]
   15024:	mov	r2, #0
   15028:	mov	r1, #0
   1502c:	str	r1, [sp, #44]	; 0x2c
   15030:	str	r3, [r0]
   15034:	str	r2, [r0, #4]!
   15038:	str	r0, [sp, #16]
   1503c:	b	14e14 <sprintf@plt+0x3554>
   15040:	ldr	r8, [sp, #40]	; 0x28
   15044:	ldr	r4, [sp, #4]
   15048:	cmp	r5, #0
   1504c:	blt	14ff4 <sprintf@plt+0x3734>
   15050:	ldr	r3, [sp, #24]
   15054:	ldr	r1, [sp, #32]
   15058:	add	r0, r3, #1
   1505c:	cmp	r0, r1
   15060:	bcs	150c0 <sprintf@plt+0x3800>
   15064:	mov	r0, #192	; 0xc0
   15068:	strb	r5, [r3, #1]
   1506c:	orr	r0, r0, r5, lsr #8
   15070:	strb	r0, [r3]
   15074:	add	r3, r3, #2
   15078:	b	150f0 <sprintf@plt+0x3830>
   1507c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15080:	ldr	r4, [sp, #32]
   15084:	b	14cc4 <sprintf@plt+0x3404>
   15088:	mov	r6, #90	; 0x5a
   1508c:	bl	118b4 <__errno_location@plt>
   15090:	str	r6, [r0]
   15094:	mvn	r0, #0
   15098:	sub	sp, fp, #28
   1509c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   150a0:	bl	118b4 <__errno_location@plt>
   150a4:	mov	r1, #22
   150a8:	b	150d4 <sprintf@plt+0x3814>
   150ac:	mov	r6, #22
   150b0:	b	1508c <sprintf@plt+0x37cc>
   150b4:	ldr	r0, [sp, #32]
   150b8:	cmp	r3, r0
   150bc:	bls	150f0 <sprintf@plt+0x3830>
   150c0:	cmp	r9, #0
   150c4:	movne	r0, #0
   150c8:	strne	r0, [r7]
   150cc:	bl	118b4 <__errno_location@plt>
   150d0:	mov	r1, #90	; 0x5a
   150d4:	str	r1, [r0]
   150d8:	b	15094 <sprintf@plt+0x37d4>
   150dc:	mov	r6, #22
   150e0:	cmp	r1, #0
   150e4:	bne	1508c <sprintf@plt+0x37cc>
   150e8:	mov	r0, #0
   150ec:	b	14cd8 <sprintf@plt+0x3418>
   150f0:	ldr	r0, [sp]
   150f4:	sub	r0, r3, r0
   150f8:	cmp	r0, #0
   150fc:	mvn	r0, #0
   15100:	blt	15098 <sprintf@plt+0x37d8>
   15104:	ldr	r0, [sp, #28]
   15108:	ldr	r2, [sp, #36]	; 0x24
   1510c:	mov	r1, #256	; 0x100
   15110:	strb	r0, [r3, #1]
   15114:	lsr	r0, r0, #8
   15118:	strb	r8, [r3, #3]
   1511c:	strb	r0, [r3]
   15120:	lsr	r0, r8, #8
   15124:	strb	r0, [r3, #2]
   15128:	ldr	r0, [r2, #4]
   1512c:	bfi	r0, r1, #0, #16
   15130:	str	r0, [r2, #4]
   15134:	add	r0, r3, #4
   15138:	sub	r0, r0, r2
   1513c:	b	15098 <sprintf@plt+0x37d8>
   15140:	cmp	r0, #0
   15144:	beq	15168 <sprintf@plt+0x38a8>
   15148:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1514c:	ldr	r1, [sp, #44]	; 0x2c
   15150:	cmp	r0, r1
   15154:	bcs	1508c <sprintf@plt+0x37cc>
   15158:	add	r1, r0, #1
   1515c:	str	r1, [fp, #-40]	; 0xffffffd8
   15160:	mov	r1, #0
   15164:	strb	r1, [r0]
   15168:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1516c:	add	r1, sp, #129	; 0x81
   15170:	sub	r0, r0, r1
   15174:	cmp	r0, #255	; 0xff
   15178:	ble	14d2c <sprintf@plt+0x346c>
   1517c:	b	1508c <sprintf@plt+0x37cc>
   15180:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15184:	add	fp, sp, #28
   15188:	sub	sp, sp, #20
   1518c:	ldr	r4, [r2, #8]
   15190:	mov	r5, r2
   15194:	mov	r0, r4
   15198:	bl	116c8 <strlen@plt>
   1519c:	add	r0, r0, #1
   151a0:	bl	117b8 <malloc@plt>
   151a4:	cmp	r0, #0
   151a8:	beq	154a0 <sprintf@plt+0x3be0>
   151ac:	mov	r1, r4
   151b0:	mov	r6, r0
   151b4:	str	r5, [sp, #4]
   151b8:	bl	11728 <strcpy@plt>
   151bc:	ldrb	r0, [r6]
   151c0:	mov	r5, #0
   151c4:	str	r6, [sp]
   151c8:	cmp	r0, #42	; 0x2a
   151cc:	bne	151e0 <sprintf@plt+0x3920>
   151d0:	mov	r0, #0
   151d4:	mov	r7, #0
   151d8:	str	r0, [sp, #8]
   151dc:	b	15310 <sprintf@plt+0x3a50>
   151e0:	movw	r1, #34921	; 0x8869
   151e4:	add	r2, sp, #16
   151e8:	mov	r0, r6
   151ec:	movt	r1, #1
   151f0:	bl	115a8 <rb_strtok_r@plt>
   151f4:	mov	sl, r0
   151f8:	cmp	r0, #0
   151fc:	mov	r0, #0
   15200:	mov	r7, #0
   15204:	str	r0, [sp, #8]
   15208:	beq	15310 <sprintf@plt+0x3a50>
   1520c:	mov	r0, #0
   15210:	mov	r7, #0
   15214:	mov	r5, #0
   15218:	str	r0, [sp, #8]
   1521c:	mov	r0, #1
   15220:	mov	r1, #72	; 0x48
   15224:	str	r5, [sp, #12]
   15228:	mov	r8, r7
   1522c:	bl	115d8 <calloc@plt>
   15230:	cmp	r0, #0
   15234:	beq	154a0 <sprintf@plt+0x3be0>
   15238:	mov	r5, r0
   1523c:	mov	r9, #2
   15240:	mov	r7, #0
   15244:	mov	r4, sl
   15248:	b	1527c <sprintf@plt+0x39bc>
   1524c:	bl	11794 <__ctype_b_loc@plt>
   15250:	ldr	r0, [r0]
   15254:	add	r0, r0, r6, lsl #1
   15258:	ldrb	r0, [r0, #1]
   1525c:	tst	r0, #8
   15260:	bne	15278 <sprintf@plt+0x39b8>
   15264:	b	15478 <sprintf@plt+0x3bb8>
   15268:	cmp	r7, #3
   1526c:	bge	15494 <sprintf@plt+0x3bd4>
   15270:	add	r7, r7, #1
   15274:	mov	r9, #1
   15278:	add	r4, r4, #1
   1527c:	ldrb	r6, [r4]
   15280:	cmp	r6, #46	; 0x2e
   15284:	beq	15268 <sprintf@plt+0x39a8>
   15288:	cmp	r6, #0
   1528c:	bne	1524c <sprintf@plt+0x398c>
   15290:	sub	r0, r7, #1
   15294:	cmp	r0, #2
   15298:	bcc	154a4 <sprintf@plt+0x3be4>
   1529c:	add	r0, r5, #4
   152a0:	mov	r1, sl
   152a4:	mov	r2, #53	; 0x35
   152a8:	str	r9, [r5]
   152ac:	bl	11650 <rb_strlcpy@plt>
   152b0:	mov	r0, #0
   152b4:	str	r5, [r5, #60]	; 0x3c
   152b8:	cmp	r8, #0
   152bc:	str	r0, [r5, #64]	; 0x40
   152c0:	add	r0, r5, #60	; 0x3c
   152c4:	str	r8, [r5, #68]	; 0x44
   152c8:	beq	152d4 <sprintf@plt+0x3a14>
   152cc:	str	r0, [r8, #4]
   152d0:	b	152e4 <sprintf@plt+0x3a24>
   152d4:	ldr	r1, [sp, #8]
   152d8:	cmp	r1, #0
   152dc:	moveq	r1, r0
   152e0:	str	r1, [sp, #8]
   152e4:	movw	r1, #34921	; 0x8869
   152e8:	mov	r7, r0
   152ec:	mov	r0, #0
   152f0:	add	r2, sp, #16
   152f4:	movt	r1, #1
   152f8:	bl	115a8 <rb_strtok_r@plt>
   152fc:	ldr	r5, [sp, #12]
   15300:	mov	sl, r0
   15304:	cmp	r0, #0
   15308:	add	r5, r5, #1
   1530c:	bne	1521c <sprintf@plt+0x395c>
   15310:	ldr	r0, [sp]
   15314:	bl	11674 <free@plt>
   15318:	ldr	r4, [sp, #4]
   1531c:	ldr	r0, [r4, #4]
   15320:	bl	11734 <atoi@plt>
   15324:	ands	r9, r0, #3
   15328:	beq	15340 <sprintf@plt+0x3a80>
   1532c:	ldr	r6, [r4]
   15330:	cmp	r6, #0
   15334:	ldrne	r8, [r4, #12]
   15338:	cmpne	r8, #0
   1533c:	bne	15358 <sprintf@plt+0x3a98>
   15340:	movw	r1, #35123	; 0x8933
   15344:	movt	r1, #1
   15348:	mov	r0, #67	; 0x43
   1534c:	bl	123d0 <sprintf@plt+0xb10>
   15350:	mov	r0, #3
   15354:	bl	118a8 <exit@plt>
   15358:	mov	r0, r6
   1535c:	bl	158b8 <sprintf@plt+0x3ff8>
   15360:	cmp	r0, #0
   15364:	beq	15378 <sprintf@plt+0x3ab8>
   15368:	mov	r4, r0
   1536c:	mov	r0, #0
   15370:	strb	r0, [r4, #784]	; 0x310
   15374:	b	153ec <sprintf@plt+0x3b2c>
   15378:	mov	r0, #1
   1537c:	mov	r1, #800	; 0x320
   15380:	bl	115d8 <calloc@plt>
   15384:	cmp	r0, #0
   15388:	beq	154a0 <sprintf@plt+0x3be0>
   1538c:	mov	r4, r0
   15390:	bl	1183c <rb_make_rb_dlink_node@plt>
   15394:	cmp	r0, #0
   15398:	beq	154b0 <sprintf@plt+0x3bf0>
   1539c:	mov	r1, #0
   153a0:	str	r1, [r0, #4]
   153a4:	movw	r1, #61412	; 0xefe4
   153a8:	str	r4, [r0]
   153ac:	movt	r1, #2
   153b0:	ldr	r2, [r1]
   153b4:	cmp	r2, #0
   153b8:	str	r2, [r0, #8]
   153bc:	beq	153cc <sprintf@plt+0x3b0c>
   153c0:	add	r2, r2, #4
   153c4:	str	r0, [r2]
   153c8:	b	153dc <sprintf@plt+0x3b1c>
   153cc:	mov	r2, r1
   153d0:	ldr	r3, [r2, #4]!
   153d4:	cmp	r3, #0
   153d8:	streq	r0, [r2]
   153dc:	str	r0, [r1]
   153e0:	ldr	r0, [r1, #8]
   153e4:	add	r0, r0, #1
   153e8:	str	r0, [r1, #8]
   153ec:	mov	r0, r4
   153f0:	mov	r1, r6
   153f4:	mov	r2, #256	; 0x100
   153f8:	bl	11650 <rb_strlcpy@plt>
   153fc:	add	r0, r4, #256	; 0x100
   15400:	mov	r1, r8
   15404:	mov	r2, #512	; 0x200
   15408:	bl	11650 <rb_strlcpy@plt>
   1540c:	cmp	r7, #0
   15410:	strb	r9, [r4, #768]	; 0x300
   15414:	beq	15444 <sprintf@plt+0x3b84>
   15418:	ldr	r0, [r4, #772]	; 0x304
   1541c:	cmp	r0, #0
   15420:	beq	15458 <sprintf@plt+0x3b98>
   15424:	ldr	r1, [sp, #8]
   15428:	str	r0, [r1, #8]
   1542c:	str	r1, [r0, #4]
   15430:	str	r7, [r4, #772]	; 0x304
   15434:	ldr	r0, [r4, #780]	; 0x30c
   15438:	add	r0, r0, r5
   1543c:	str	r0, [r4, #780]	; 0x30c
   15440:	b	15468 <sprintf@plt+0x3ba8>
   15444:	mov	r0, #0
   15448:	cmp	r4, #0
   1544c:	str	r0, [r4, #796]	; 0x31c
   15450:	bne	15470 <sprintf@plt+0x3bb0>
   15454:	b	15340 <sprintf@plt+0x3a80>
   15458:	ldr	r0, [sp, #8]
   1545c:	str	r7, [r4, #772]	; 0x304
   15460:	str	r0, [r4, #776]	; 0x308
   15464:	str	r5, [r4, #780]	; 0x30c
   15468:	mov	r0, #0
   1546c:	str	r0, [r4, #796]	; 0x31c
   15470:	sub	sp, fp, #28
   15474:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15478:	movw	r1, #34981	; 0x88a5
   1547c:	mov	r0, #67	; 0x43
   15480:	mov	r2, r6
   15484:	movt	r1, #1
   15488:	bl	123d0 <sprintf@plt+0xb10>
   1548c:	mov	r0, #3
   15490:	bl	118a8 <exit@plt>
   15494:	movw	r1, #34923	; 0x886b
   15498:	movt	r1, #1
   1549c:	b	15348 <sprintf@plt+0x3a88>
   154a0:	bl	11788 <rb_outofmemory@plt>
   154a4:	movw	r1, #35061	; 0x88f5
   154a8:	movt	r1, #1
   154ac:	b	15348 <sprintf@plt+0x3a88>
   154b0:	movw	r0, #34072	; 0x8518
   154b4:	movw	r1, #34082	; 0x8522
   154b8:	movw	r3, #34177	; 0x8581
   154bc:	mov	r2, #144	; 0x90
   154c0:	movt	r0, #1
   154c4:	movt	r1, #1
   154c8:	movt	r3, #1
   154cc:	bl	11638 <__assert_fail@plt>
   154d0:	push	{r4, r5, fp, lr}
   154d4:	add	fp, sp, #8
   154d8:	ldr	r5, [r2]
   154dc:	mov	r0, r5
   154e0:	bl	158b8 <sprintf@plt+0x3ff8>
   154e4:	cmp	r0, #0
   154e8:	beq	15578 <sprintf@plt+0x3cb8>
   154ec:	mov	r4, r0
   154f0:	ldr	r0, [r0, #788]	; 0x314
   154f4:	cmp	r0, #1
   154f8:	movge	r0, #1
   154fc:	strbge	r0, [r4, #784]	; 0x310
   15500:	popge	{r4, r5, fp, pc}
   15504:	movw	r5, #61412	; 0xefe4
   15508:	movt	r5, #2
   1550c:	ldr	r2, [r5]
   15510:	cmp	r2, #0
   15514:	beq	1556c <sprintf@plt+0x3cac>
   15518:	ldr	r3, [r2]
   1551c:	mov	r0, r2
   15520:	ldr	r2, [r2, #8]
   15524:	cmp	r3, r4
   15528:	bne	15510 <sprintf@plt+0x3c50>
   1552c:	ldr	r3, [r0, #4]
   15530:	cmp	r2, #0
   15534:	mov	r1, r5
   15538:	streq	r3, [r5, #4]
   1553c:	strne	r3, [r2, #4]
   15540:	ldrne	r3, [r0, #4]
   15544:	cmp	r3, #0
   15548:	addne	r1, r3, #8
   1554c:	str	r2, [r1]
   15550:	mov	r1, #0
   15554:	str	r1, [r0, #4]
   15558:	str	r1, [r0, #8]
   1555c:	ldr	r1, [r5, #8]
   15560:	sub	r1, r1, #1
   15564:	str	r1, [r5, #8]
   15568:	bl	116f8 <rb_free_rb_dlink_node@plt>
   1556c:	mov	r0, r4
   15570:	pop	{r4, r5, fp, lr}
   15574:	b	11674 <free@plt>
   15578:	movw	r1, #35168	; 0x8960
   1557c:	mov	r0, #87	; 0x57
   15580:	mov	r2, r5
   15584:	movt	r1, #1
   15588:	pop	{r4, r5, fp, lr}
   1558c:	b	123d0 <sprintf@plt+0xb10>
   15590:	b	15904 <sprintf@plt+0x4044>
   15594:	push	{fp, lr}
   15598:	mov	fp, sp
   1559c:	ldr	r0, [r2]
   155a0:	bl	11734 <atoi@plt>
   155a4:	cmn	r0, #1
   155a8:	mov	r2, r0
   155ac:	movwgt	r0, #44516	; 0xade4
   155b0:	movtgt	r0, #2
   155b4:	strgt	r2, [r0]
   155b8:	popgt	{fp, pc}
   155bc:	movw	r1, #35212	; 0x898c
   155c0:	mov	r0, #67	; 0x43
   155c4:	movt	r1, #1
   155c8:	bl	123d0 <sprintf@plt+0xb10>
   155cc:	mov	r0, #3
   155d0:	bl	118a8 <exit@plt>
   155d4:	push	{r4, r5, r6, sl, fp, lr}
   155d8:	add	fp, sp, #16
   155dc:	sub	sp, sp, #8
   155e0:	movw	r6, #61820	; 0xf17c
   155e4:	mov	r4, sp
   155e8:	movt	r6, #2
   155ec:	mov	r1, r4
   155f0:	ldr	r0, [r6]
   155f4:	bl	116b0 <rb_dictionary_foreach_start@plt>
   155f8:	ldr	r0, [r6]
   155fc:	mov	r1, r4
   15600:	bl	115c0 <rb_dictionary_foreach_cur@plt>
   15604:	cmp	r0, #0
   15608:	beq	15640 <sprintf@plt+0x3d80>
   1560c:	movw	r4, #35464	; 0x8a88
   15610:	mov	r5, sp
   15614:	movt	r4, #1
   15618:	mov	r1, r4
   1561c:	bl	15eb8 <sprintf@plt+0x45f8>
   15620:	ldr	r0, [r6]
   15624:	mov	r1, r5
   15628:	bl	11668 <rb_dictionary_foreach_next@plt>
   1562c:	ldr	r0, [r6]
   15630:	mov	r1, r5
   15634:	bl	115c0 <rb_dictionary_foreach_cur@plt>
   15638:	cmp	r0, #0
   1563c:	bne	15618 <sprintf@plt+0x3d58>
   15640:	bl	15904 <sprintf@plt+0x4044>
   15644:	sub	sp, fp, #16
   15648:	pop	{r4, r5, r6, sl, fp, pc}
   1564c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15650:	add	fp, sp, #24
   15654:	mov	r9, r0
   15658:	movw	r0, #61412	; 0xefe4
   1565c:	movt	r0, #2
   15660:	ldr	r0, [r0, #8]
   15664:	cmp	r0, #0
   15668:	beq	156ec <sprintf@plt+0x3e2c>
   1566c:	ldr	r0, [r9, #460]	; 0x1cc
   15670:	mov	r1, #16
   15674:	add	r0, r0, #1
   15678:	str	r0, [r9, #460]	; 0x1cc
   1567c:	movw	r0, #44456	; 0xada8
   15680:	movt	r0, #2
   15684:	ldr	r5, [r0, #12]
   15688:	mov	r0, #1
   1568c:	bl	115d8 <calloc@plt>
   15690:	cmp	r0, #0
   15694:	beq	15790 <sprintf@plt+0x3ed0>
   15698:	ldr	r8, [r9, #464]	; 0x1d0
   1569c:	add	r1, r8, r5, lsl #4
   156a0:	str	r0, [r1, #8]
   156a4:	movw	r0, #61824	; 0xf180
   156a8:	movt	r0, #2
   156ac:	ldr	r6, [r0]
   156b0:	cmp	r6, #0
   156b4:	beq	15768 <sprintf@plt+0x3ea8>
   156b8:	movw	r5, #35249	; 0x89b1
   156bc:	mov	r7, r6
   156c0:	movt	r5, #1
   156c4:	ldr	r4, [r7]
   156c8:	mov	r1, r5
   156cc:	ldr	r0, [r4, #16]
   156d0:	bl	115cc <strcasecmp@plt>
   156d4:	cmp	r0, #0
   156d8:	beq	15704 <sprintf@plt+0x3e44>
   156dc:	ldr	r7, [r7, #8]
   156e0:	cmp	r7, #0
   156e4:	bne	156c4 <sprintf@plt+0x3e04>
   156e8:	b	15720 <sprintf@plt+0x3e60>
   156ec:	movw	r0, #44456	; 0xada8
   156f0:	movt	r0, #2
   156f4:	ldr	r1, [r0, #12]
   156f8:	mov	r0, r9
   156fc:	bl	12ca0 <sprintf@plt+0x13e0>
   15700:	b	15788 <sprintf@plt+0x3ec8>
   15704:	cmp	r4, #0
   15708:	beq	15720 <sprintf@plt+0x3e60>
   1570c:	ldr	r0, [r4, #12]
   15710:	add	r0, r8, r0, lsl #4
   15714:	ldr	r0, [r0, #12]
   15718:	cmp	r0, #2
   1571c:	bne	15788 <sprintf@plt+0x3ec8>
   15720:	ldr	r5, [r6]
   15724:	movw	r1, #35729	; 0x8b91
   15728:	movt	r1, #1
   1572c:	ldr	r0, [r5, #16]
   15730:	bl	115cc <strcasecmp@plt>
   15734:	cmp	r0, #0
   15738:	beq	1574c <sprintf@plt+0x3e8c>
   1573c:	ldr	r6, [r6, #8]
   15740:	cmp	r6, #0
   15744:	bne	15720 <sprintf@plt+0x3e60>
   15748:	b	15768 <sprintf@plt+0x3ea8>
   1574c:	cmp	r5, #0
   15750:	beq	15768 <sprintf@plt+0x3ea8>
   15754:	ldr	r0, [r5, #12]
   15758:	add	r0, r8, r0, lsl #4
   1575c:	ldr	r0, [r0, #12]
   15760:	cmp	r0, #2
   15764:	bne	15788 <sprintf@plt+0x3ec8>
   15768:	mov	r0, r9
   1576c:	bl	159b4 <sprintf@plt+0x40f4>
   15770:	cmp	r0, #0
   15774:	bne	15788 <sprintf@plt+0x3ec8>
   15778:	movw	r1, #35437	; 0x8a6d
   1577c:	mov	r0, r9
   15780:	movt	r1, #1
   15784:	bl	15eb8 <sprintf@plt+0x45f8>
   15788:	mov	r0, #1
   1578c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15790:	bl	11788 <rb_outofmemory@plt>
   15794:	movw	r1, #35464	; 0x8a88
   15798:	movt	r1, #1
   1579c:	b	15eb8 <sprintf@plt+0x45f8>
   157a0:	movw	r1, #35490	; 0x8aa2
   157a4:	movt	r1, #1
   157a8:	b	15eb8 <sprintf@plt+0x45f8>
   157ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   157b0:	add	fp, sp, #24
   157b4:	mov	r8, r0
   157b8:	movw	r0, #44456	; 0xada8
   157bc:	movt	r0, #2
   157c0:	ldr	r9, [r8, #464]	; 0x1d0
   157c4:	ldr	r0, [r0, #12]
   157c8:	add	r0, r9, r0, lsl #4
   157cc:	ldr	r0, [r0, #8]
   157d0:	cmp	r0, #0
   157d4:	beq	158a0 <sprintf@plt+0x3fe0>
   157d8:	ldrb	r0, [r0]
   157dc:	cmp	r0, #0
   157e0:	bne	158a0 <sprintf@plt+0x3fe0>
   157e4:	movw	r0, #61824	; 0xf180
   157e8:	movt	r0, #2
   157ec:	ldr	r4, [r0]
   157f0:	cmp	r4, #0
   157f4:	beq	15890 <sprintf@plt+0x3fd0>
   157f8:	movw	r5, #35249	; 0x89b1
   157fc:	mov	r7, r4
   15800:	movt	r5, #1
   15804:	ldr	r6, [r7]
   15808:	mov	r1, r5
   1580c:	ldr	r0, [r6, #16]
   15810:	bl	115cc <strcasecmp@plt>
   15814:	cmp	r0, #0
   15818:	beq	1582c <sprintf@plt+0x3f6c>
   1581c:	ldr	r7, [r7, #8]
   15820:	cmp	r7, #0
   15824:	bne	15804 <sprintf@plt+0x3f44>
   15828:	b	15848 <sprintf@plt+0x3f88>
   1582c:	cmp	r6, #0
   15830:	beq	15848 <sprintf@plt+0x3f88>
   15834:	ldr	r0, [r6, #12]
   15838:	add	r0, r9, r0, lsl #4
   1583c:	ldr	r0, [r0, #12]
   15840:	cmp	r0, #2
   15844:	bne	158a0 <sprintf@plt+0x3fe0>
   15848:	ldr	r5, [r4]
   1584c:	movw	r1, #35729	; 0x8b91
   15850:	movt	r1, #1
   15854:	ldr	r0, [r5, #16]
   15858:	bl	115cc <strcasecmp@plt>
   1585c:	cmp	r0, #0
   15860:	beq	15874 <sprintf@plt+0x3fb4>
   15864:	ldr	r4, [r4, #8]
   15868:	cmp	r4, #0
   1586c:	bne	15848 <sprintf@plt+0x3f88>
   15870:	b	15890 <sprintf@plt+0x3fd0>
   15874:	cmp	r5, #0
   15878:	beq	15890 <sprintf@plt+0x3fd0>
   1587c:	ldr	r0, [r5, #12]
   15880:	add	r0, r9, r0, lsl #4
   15884:	ldr	r0, [r0, #12]
   15888:	cmp	r0, #2
   1588c:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   15890:	mov	r0, r8
   15894:	bl	159b4 <sprintf@plt+0x40f4>
   15898:	cmp	r0, #0
   1589c:	beq	158a4 <sprintf@plt+0x3fe4>
   158a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   158a4:	movw	r1, #35437	; 0x8a6d
   158a8:	mov	r0, r8
   158ac:	movt	r1, #1
   158b0:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   158b4:	b	15eb8 <sprintf@plt+0x45f8>
   158b8:	push	{r4, r5, r6, sl, fp, lr}
   158bc:	add	fp, sp, #16
   158c0:	mov	r4, r0
   158c4:	movw	r0, #61412	; 0xefe4
   158c8:	movt	r0, #2
   158cc:	ldr	r6, [r0]
   158d0:	b	158f0 <sprintf@plt+0x4030>
   158d4:	ldr	r5, [r6]
   158d8:	mov	r1, r4
   158dc:	mov	r0, r5
   158e0:	bl	115cc <strcasecmp@plt>
   158e4:	cmp	r0, #0
   158e8:	beq	158fc <sprintf@plt+0x403c>
   158ec:	ldr	r6, [r6, #8]
   158f0:	cmp	r6, #0
   158f4:	bne	158d4 <sprintf@plt+0x4014>
   158f8:	mov	r5, #0
   158fc:	mov	r0, r5
   15900:	pop	{r4, r5, r6, sl, fp, pc}
   15904:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15908:	add	fp, sp, #24
   1590c:	movw	r5, #61412	; 0xefe4
   15910:	movt	r5, #2
   15914:	ldr	r6, [r5]
   15918:	cmp	r6, #0
   1591c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   15920:	mov	r7, #1
   15924:	mov	r8, #0
   15928:	ldr	r4, [r6]
   1592c:	ldr	r6, [r6, #8]
   15930:	ldr	r0, [r4, #788]	; 0x314
   15934:	cmp	r0, #1
   15938:	blt	15944 <sprintf@plt+0x4084>
   1593c:	strb	r7, [r4, #784]	; 0x310
   15940:	b	159a8 <sprintf@plt+0x40e8>
   15944:	ldr	r1, [r5]
   15948:	cmp	r1, #0
   1594c:	beq	159a0 <sprintf@plt+0x40e0>
   15950:	ldr	r2, [r1]
   15954:	mov	r0, r1
   15958:	ldr	r1, [r1, #8]
   1595c:	cmp	r2, r4
   15960:	bne	15948 <sprintf@plt+0x4088>
   15964:	ldr	r2, [r0, #4]
   15968:	cmp	r1, #0
   1596c:	mov	r3, r5
   15970:	streq	r2, [r5, #4]
   15974:	strne	r2, [r1, #4]
   15978:	ldrne	r2, [r0, #4]
   1597c:	cmp	r2, #0
   15980:	addne	r3, r2, #8
   15984:	str	r1, [r3]
   15988:	str	r8, [r0, #4]
   1598c:	str	r8, [r0, #8]
   15990:	ldr	r1, [r5, #8]
   15994:	sub	r1, r1, #1
   15998:	str	r1, [r5, #8]
   1599c:	bl	116f8 <rb_free_rb_dlink_node@plt>
   159a0:	mov	r0, r4
   159a4:	bl	11674 <free@plt>
   159a8:	cmp	r6, #0
   159ac:	bne	15928 <sprintf@plt+0x4068>
   159b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   159b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159b8:	add	fp, sp, #28
   159bc:	sub	sp, sp, #268	; 0x10c
   159c0:	mov	r4, r0
   159c4:	movw	r0, #44456	; 0xada8
   159c8:	mov	r2, #1
   159cc:	mov	r9, #1
   159d0:	movt	r0, #2
   159d4:	ldr	r1, [r4, #464]	; 0x1d0
   159d8:	ldr	r0, [r0, #12]
   159dc:	add	r0, r1, r0, lsl #4
   159e0:	ldrh	r1, [r4, #248]	; 0xf8
   159e4:	ldr	r3, [r0, #8]
   159e8:	mov	r0, #0
   159ec:	cmp	r1, #2
   159f0:	beq	15a00 <sprintf@plt+0x4140>
   159f4:	cmp	r1, #10
   159f8:	bne	15ba0 <sprintf@plt+0x42e0>
   159fc:	mov	r9, #2
   15a00:	strb	r2, [r3]
   15a04:	movw	r1, #35254	; 0x89b6
   15a08:	str	r3, [sp]
   15a0c:	ldr	r0, [r4]
   15a10:	movt	r1, #1
   15a14:	bl	12364 <sprintf@plt+0xaa4>
   15a18:	movw	r0, #61412	; 0xefe4
   15a1c:	movt	r0, #2
   15a20:	ldr	r8, [r0]
   15a24:	cmp	r8, #0
   15a28:	beq	15b5c <sprintf@plt+0x429c>
   15a2c:	add	r0, r4, #248	; 0xf8
   15a30:	str	r0, [sp, #4]
   15a34:	b	15b40 <sprintf@plt+0x4280>
   15a38:	ldrb	r0, [r5, #768]	; 0x300
   15a3c:	tst	r9, r0
   15a40:	beq	15b50 <sprintf@plt+0x4290>
   15a44:	mov	r0, #1
   15a48:	mov	r1, #24
   15a4c:	bl	115d8 <calloc@plt>
   15a50:	cmp	r0, #0
   15a54:	beq	15ba8 <sprintf@plt+0x42e8>
   15a58:	mov	r7, r0
   15a5c:	movw	r0, #44456	; 0xada8
   15a60:	ldr	r1, [r4, #464]	; 0x1d0
   15a64:	movt	r0, #2
   15a68:	ldr	r0, [r0, #12]
   15a6c:	add	r0, r1, r0, lsl #4
   15a70:	ldr	sl, [r0, #8]
   15a74:	str	r5, [r7]
   15a78:	str	r4, [r7, #4]
   15a7c:	ldrh	r0, [r4, #248]	; 0xf8
   15a80:	cmp	r0, #10
   15a84:	beq	15af8 <sprintf@plt+0x4238>
   15a88:	cmp	r0, #2
   15a8c:	ldrbeq	r0, [r5, #768]	; 0x300
   15a90:	tsteq	r0, #1
   15a94:	beq	15b04 <sprintf@plt+0x4244>
   15a98:	ldr	r2, [sp, #4]
   15a9c:	add	r6, sp, #8
   15aa0:	mov	r1, #256	; 0x100
   15aa4:	mov	r3, r5
   15aa8:	mov	r0, r6
   15aac:	bl	13390 <sprintf@plt+0x1ad0>
   15ab0:	movw	r2, #23468	; 0x5bac
   15ab4:	mov	r0, r6
   15ab8:	mov	r1, #2
   15abc:	mov	r3, r7
   15ac0:	movt	r2, #1
   15ac4:	bl	11d50 <sprintf@plt+0x490>
   15ac8:	str	r0, [r7, #8]
   15acc:	mov	r0, #0
   15ad0:	str	r0, [r7, #16]
   15ad4:	str	r7, [r7, #12]
   15ad8:	add	r0, r7, #12
   15adc:	ldr	r1, [sl, #4]
   15ae0:	cmp	r1, #0
   15ae4:	str	r1, [r7, #20]
   15ae8:	beq	15b10 <sprintf@plt+0x4250>
   15aec:	add	r1, r1, #4
   15af0:	str	r0, [r1]
   15af4:	b	15b20 <sprintf@plt+0x4260>
   15af8:	ldrb	r0, [r5, #768]	; 0x300
   15afc:	tst	r0, #2
   15b00:	bne	15a98 <sprintf@plt+0x41d8>
   15b04:	mov	r0, r7
   15b08:	bl	11674 <free@plt>
   15b0c:	b	15b50 <sprintf@plt+0x4290>
   15b10:	mov	r1, sl
   15b14:	ldr	r2, [r1, #8]!
   15b18:	cmp	r2, #0
   15b1c:	streq	r0, [r1]
   15b20:	str	r0, [sl, #4]
   15b24:	ldr	r0, [sl, #12]
   15b28:	add	r0, r0, #1
   15b2c:	str	r0, [sl, #12]
   15b30:	ldr	r0, [r5, #788]	; 0x314
   15b34:	add	r0, r0, #1
   15b38:	str	r0, [r5, #788]	; 0x314
   15b3c:	b	15b50 <sprintf@plt+0x4290>
   15b40:	ldr	r5, [r8]
   15b44:	ldrb	r0, [r5, #784]	; 0x310
   15b48:	cmp	r0, #0
   15b4c:	beq	15a38 <sprintf@plt+0x4178>
   15b50:	ldr	r8, [r8, #8]
   15b54:	cmp	r8, #0
   15b58:	bne	15b40 <sprintf@plt+0x4280>
   15b5c:	ldr	r0, [sp]
   15b60:	ldr	r0, [r0, #12]
   15b64:	cmp	r0, #0
   15b68:	mov	r0, #0
   15b6c:	beq	15ba0 <sprintf@plt+0x42e0>
   15b70:	movw	r0, #44456	; 0xada8
   15b74:	movt	r0, #2
   15b78:	ldr	r5, [r0, #12]
   15b7c:	movw	r0, #44516	; 0xade4
   15b80:	movt	r0, #2
   15b84:	ldr	r6, [r0]
   15b88:	bl	116d4 <rb_current_time@plt>
   15b8c:	ldr	r1, [r4, #464]	; 0x1d0
   15b90:	add	r0, r0, r6
   15b94:	add	r1, r1, r5, lsl #4
   15b98:	str	r0, [r1, #4]
   15b9c:	mov	r0, #1
   15ba0:	sub	sp, fp, #28
   15ba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ba8:	bl	11788 <rb_outofmemory@plt>
   15bac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15bb0:	add	fp, sp, #28
   15bb4:	sub	sp, sp, #4
   15bb8:	ldr	r8, [r3, #4]
   15bbc:	mov	r4, r0
   15bc0:	movw	r0, #44456	; 0xada8
   15bc4:	movt	r0, #2
   15bc8:	ldr	r7, [r0, #12]
   15bcc:	ldr	r0, [r8, #464]	; 0x1d0
   15bd0:	add	r0, r0, r7, lsl #4
   15bd4:	ldr	r5, [r0, #8]
   15bd8:	cmp	r5, #0
   15bdc:	beq	15ca4 <sprintf@plt+0x43e4>
   15be0:	ldr	r9, [r3]
   15be4:	cmp	r4, #0
   15be8:	mov	r6, r3
   15bec:	cmpne	r1, #0
   15bf0:	bne	15cac <sprintf@plt+0x43ec>
   15bf4:	mov	r0, r9
   15bf8:	bl	15dbc <sprintf@plt+0x44fc>
   15bfc:	ldr	r0, [r6, #8]
   15c00:	bl	120d0 <sprintf@plt+0x810>
   15c04:	ldr	r0, [r6, #20]
   15c08:	ldr	r1, [r6, #16]
   15c0c:	mov	r4, #0
   15c10:	movw	r7, #44456	; 0xada8
   15c14:	movt	r7, #2
   15c18:	cmp	r0, #0
   15c1c:	streq	r1, [r5, #8]
   15c20:	strne	r1, [r0, #4]
   15c24:	ldrne	r1, [r6, #16]
   15c28:	add	r2, r1, #8
   15c2c:	cmp	r1, #0
   15c30:	addeq	r2, r5, #4
   15c34:	str	r0, [r2]
   15c38:	str	r4, [r6, #16]
   15c3c:	str	r4, [r6, #20]
   15c40:	ldr	r0, [r5, #12]
   15c44:	sub	r0, r0, #1
   15c48:	str	r0, [r5, #12]
   15c4c:	mov	r0, r6
   15c50:	bl	11674 <free@plt>
   15c54:	ldr	r0, [r5, #12]
   15c58:	cmp	r0, #0
   15c5c:	bne	15ca4 <sprintf@plt+0x43e4>
   15c60:	ldr	r0, [r8]
   15c64:	movw	r1, #35290	; 0x89da
   15c68:	movt	r1, #1
   15c6c:	bl	12364 <sprintf@plt+0xaa4>
   15c70:	mov	r0, r5
   15c74:	bl	11674 <free@plt>
   15c78:	ldr	r1, [r7, #12]
   15c7c:	ldr	r0, [r8, #464]	; 0x1d0
   15c80:	add	r0, r0, r1, lsl #4
   15c84:	str	r4, [r0, #4]
   15c88:	str	r4, [r0, #8]
   15c8c:	mov	r0, r8
   15c90:	bl	12ca0 <sprintf@plt+0x13e0>
   15c94:	ldr	r0, [r8, #460]	; 0x1cc
   15c98:	subs	r0, r0, #1
   15c9c:	str	r0, [r8, #460]	; 0x1cc
   15ca0:	beq	15d0c <sprintf@plt+0x444c>
   15ca4:	sub	sp, fp, #28
   15ca8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15cac:	ldr	r0, [r9, #780]	; 0x30c
   15cb0:	cmp	r0, #0
   15cb4:	beq	15d68 <sprintf@plt+0x44a8>
   15cb8:	mov	r0, r4
   15cbc:	mov	r1, #46	; 0x2e
   15cc0:	bl	11620 <strrchr@plt>
   15cc4:	cmp	r0, #0
   15cc8:	ldrbne	r1, [r0, #1]!
   15ccc:	cmpne	r1, #0
   15cd0:	bne	15d1c <sprintf@plt+0x445c>
   15cd4:	ldr	r0, [r9, #796]	; 0x31c
   15cd8:	add	r7, r0, #3600	; 0xe10
   15cdc:	bl	116d4 <rb_current_time@plt>
   15ce0:	cmp	r7, r0
   15ce4:	bge	15bf4 <sprintf@plt+0x4334>
   15ce8:	movw	r1, #35374	; 0x8a2e
   15cec:	mov	r0, #87	; 0x57
   15cf0:	mov	r2, r9
   15cf4:	mov	r3, r4
   15cf8:	movt	r1, #1
   15cfc:	bl	123d0 <sprintf@plt+0xb10>
   15d00:	bl	116d4 <rb_current_time@plt>
   15d04:	str	r0, [r9, #796]	; 0x31c
   15d08:	b	15bf4 <sprintf@plt+0x4334>
   15d0c:	mov	r0, r8
   15d10:	sub	sp, fp, #28
   15d14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d18:	b	12be8 <sprintf@plt+0x1328>
   15d1c:	ldr	sl, [r9, #772]	; 0x304
   15d20:	str	r0, [sp]
   15d24:	b	15d5c <sprintf@plt+0x449c>
   15d28:	ldr	r1, [sl]
   15d2c:	mov	r0, r4
   15d30:	ldr	r3, [r1]
   15d34:	cmp	r3, #1
   15d38:	beq	15d48 <sprintf@plt+0x4488>
   15d3c:	ldr	r0, [sp]
   15d40:	cmp	r3, #2
   15d44:	bne	15da0 <sprintf@plt+0x44e0>
   15d48:	add	r1, r1, #4
   15d4c:	bl	1189c <strcmp@plt>
   15d50:	cmp	r0, #0
   15d54:	beq	15d68 <sprintf@plt+0x44a8>
   15d58:	ldr	sl, [sl, #8]
   15d5c:	cmp	sl, #0
   15d60:	bne	15d28 <sprintf@plt+0x4468>
   15d64:	b	15bf4 <sprintf@plt+0x4334>
   15d68:	ldr	r0, [r9, #792]	; 0x318
   15d6c:	add	r3, r9, #256	; 0x100
   15d70:	mov	r1, r7
   15d74:	mov	r2, r9
   15d78:	add	r0, r0, #1
   15d7c:	str	r0, [r9, #792]	; 0x318
   15d80:	mov	r0, r8
   15d84:	bl	12988 <sprintf@plt+0x10c8>
   15d88:	movw	r1, #35464	; 0x8a88
   15d8c:	mov	r0, r8
   15d90:	movt	r1, #1
   15d94:	sub	sp, fp, #28
   15d98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d9c:	b	15eb8 <sprintf@plt+0x45f8>
   15da0:	movw	r1, #35327	; 0x89ff
   15da4:	mov	r0, #67	; 0x43
   15da8:	mov	r2, r9
   15dac:	movt	r1, #1
   15db0:	bl	123d0 <sprintf@plt+0xb10>
   15db4:	mov	r0, #3
   15db8:	bl	118a8 <exit@plt>
   15dbc:	push	{r4, r5, r6, r7, fp, lr}
   15dc0:	add	fp, sp, #16
   15dc4:	mov	r4, r0
   15dc8:	ldr	r0, [r0, #788]	; 0x314
   15dcc:	subs	r0, r0, #1
   15dd0:	str	r0, [r4, #788]	; 0x314
   15dd4:	bgt	15eb4 <sprintf@plt+0x45f4>
   15dd8:	ldrb	r0, [r4, #784]	; 0x310
   15ddc:	cmp	r0, #0
   15de0:	popeq	{r4, r5, r6, r7, fp, pc}
   15de4:	mov	r5, r4
   15de8:	ldr	r0, [r5, #772]!	; 0x304
   15dec:	cmp	r0, #0
   15df0:	beq	15e40 <sprintf@plt+0x4580>
   15df4:	mov	r6, #0
   15df8:	ldmib	r0, {r1, r7}
   15dfc:	mov	r2, r5
   15e00:	cmp	r7, #0
   15e04:	streq	r1, [r4, #776]	; 0x308
   15e08:	strne	r1, [r7, #4]
   15e0c:	ldrne	r1, [r0, #4]
   15e10:	cmp	r1, #0
   15e14:	addne	r2, r1, #8
   15e18:	str	r7, [r2]
   15e1c:	str	r6, [r0, #4]
   15e20:	str	r6, [r0, #8]
   15e24:	ldr	r1, [r4, #780]	; 0x30c
   15e28:	sub	r1, r1, #1
   15e2c:	str	r1, [r4, #780]	; 0x30c
   15e30:	bl	11674 <free@plt>
   15e34:	cmp	r7, #0
   15e38:	mov	r0, r7
   15e3c:	bne	15df8 <sprintf@plt+0x4538>
   15e40:	movw	r7, #61412	; 0xefe4
   15e44:	movt	r7, #2
   15e48:	ldr	r2, [r7]
   15e4c:	cmp	r2, #0
   15e50:	beq	15ea8 <sprintf@plt+0x45e8>
   15e54:	ldr	r3, [r2]
   15e58:	mov	r0, r2
   15e5c:	ldr	r2, [r2, #8]
   15e60:	cmp	r3, r4
   15e64:	bne	15e4c <sprintf@plt+0x458c>
   15e68:	ldr	r3, [r0, #4]
   15e6c:	cmp	r2, #0
   15e70:	mov	r1, r7
   15e74:	streq	r3, [r7, #4]
   15e78:	strne	r3, [r2, #4]
   15e7c:	ldrne	r3, [r0, #4]
   15e80:	cmp	r3, #0
   15e84:	addne	r1, r3, #8
   15e88:	str	r2, [r1]
   15e8c:	mov	r1, #0
   15e90:	str	r1, [r0, #4]
   15e94:	str	r1, [r0, #8]
   15e98:	ldr	r1, [r7, #8]
   15e9c:	sub	r1, r1, #1
   15ea0:	str	r1, [r7, #8]
   15ea4:	bl	116f8 <rb_free_rb_dlink_node@plt>
   15ea8:	mov	r0, r4
   15eac:	pop	{r4, r5, r6, r7, fp, lr}
   15eb0:	b	11674 <free@plt>
   15eb4:	pop	{r4, r5, r6, r7, fp, pc}
   15eb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ebc:	add	fp, sp, #28
   15ec0:	sub	sp, sp, #4
   15ec4:	movw	r8, #44456	; 0xada8
   15ec8:	mov	r9, r0
   15ecc:	movt	r8, #2
   15ed0:	ldr	r2, [r9, #464]	; 0x1d0
   15ed4:	ldr	r0, [r8, #12]
   15ed8:	add	r0, r2, r0, lsl #4
   15edc:	ldr	r5, [r0, #8]
   15ee0:	cmp	r5, #0
   15ee4:	beq	15fb4 <sprintf@plt+0x46f4>
   15ee8:	ldr	r0, [r5, #12]
   15eec:	cmp	r0, #0
   15ef0:	beq	15f7c <sprintf@plt+0x46bc>
   15ef4:	ldr	r0, [r9]
   15ef8:	add	sl, r5, #4
   15efc:	bl	12364 <sprintf@plt+0xaa4>
   15f00:	ldr	r4, [sl]
   15f04:	cmp	r4, #0
   15f08:	beq	15f7c <sprintf@plt+0x46bc>
   15f0c:	mov	r7, #0
   15f10:	ldr	r6, [r4]
   15f14:	ldr	r4, [r4, #8]
   15f18:	ldr	r0, [r6, #8]
   15f1c:	bl	120d0 <sprintf@plt+0x810>
   15f20:	ldr	r0, [r6]
   15f24:	bl	15dbc <sprintf@plt+0x44fc>
   15f28:	ldr	r0, [r6, #20]
   15f2c:	ldr	r1, [r6, #16]
   15f30:	mov	r2, sl
   15f34:	cmp	r0, #0
   15f38:	streq	r1, [r5, #8]
   15f3c:	strne	r1, [r0, #4]
   15f40:	ldrne	r1, [r6, #16]
   15f44:	cmp	r1, #0
   15f48:	addne	r2, r1, #8
   15f4c:	cmp	r6, #0
   15f50:	str	r0, [r2]
   15f54:	str	r7, [r6, #16]
   15f58:	str	r7, [r6, #20]
   15f5c:	ldr	r0, [r5, #12]
   15f60:	sub	r0, r0, #1
   15f64:	str	r0, [r5, #12]
   15f68:	beq	15f74 <sprintf@plt+0x46b4>
   15f6c:	mov	r0, r6
   15f70:	bl	11674 <free@plt>
   15f74:	cmp	r4, #0
   15f78:	bne	15f10 <sprintf@plt+0x4650>
   15f7c:	mov	r0, r5
   15f80:	bl	11674 <free@plt>
   15f84:	ldr	r1, [r8, #12]
   15f88:	ldr	r0, [r9, #464]	; 0x1d0
   15f8c:	mov	r2, #0
   15f90:	add	r0, r0, r1, lsl #4
   15f94:	str	r2, [r0, #4]
   15f98:	str	r2, [r0, #8]
   15f9c:	mov	r0, r9
   15fa0:	bl	12ca0 <sprintf@plt+0x13e0>
   15fa4:	ldr	r0, [r9, #460]	; 0x1cc
   15fa8:	subs	r0, r0, #1
   15fac:	str	r0, [r9, #460]	; 0x1cc
   15fb0:	beq	15fbc <sprintf@plt+0x46fc>
   15fb4:	sub	sp, fp, #28
   15fb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15fbc:	mov	r0, r9
   15fc0:	sub	sp, fp, #28
   15fc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15fc8:	b	12be8 <sprintf@plt+0x1328>
   15fcc:	push	{fp, lr}
   15fd0:	mov	fp, sp
   15fd4:	ldr	r0, [r2]
   15fd8:	bl	11734 <atoi@plt>
   15fdc:	cmn	r0, #1
   15fe0:	mov	r2, r0
   15fe4:	movwgt	r0, #44616	; 0xae48
   15fe8:	movtgt	r0, #2
   15fec:	strgt	r2, [r0]
   15ff0:	popgt	{fp, pc}
   15ff4:	movw	r1, #35546	; 0x8ada
   15ff8:	mov	r0, #67	; 0x43
   15ffc:	movt	r1, #1
   16000:	bl	123d0 <sprintf@plt+0xb10>
   16004:	mov	r0, #3
   16008:	bl	118a8 <exit@plt>
   1600c:	ldr	r0, [r2]
   16010:	movw	r1, #44620	; 0xae4c
   16014:	movt	r1, #2
   16018:	ldrb	r0, [r0]
   1601c:	sub	r0, r0, #49	; 0x31
   16020:	clz	r0, r0
   16024:	lsr	r0, r0, #5
   16028:	strb	r0, [r1]
   1602c:	bx	lr
   16030:	push	{r4, r5, r6, sl, fp, lr}
   16034:	add	fp, sp, #16
   16038:	sub	sp, sp, #8
   1603c:	movw	r5, #61820	; 0xf17c
   16040:	mov	r4, sp
   16044:	movt	r5, #2
   16048:	mov	r1, r4
   1604c:	ldr	r0, [r5]
   16050:	bl	116b0 <rb_dictionary_foreach_start@plt>
   16054:	ldr	r0, [r5]
   16058:	mov	r1, r4
   1605c:	bl	115c0 <rb_dictionary_foreach_cur@plt>
   16060:	cmp	r0, #0
   16064:	beq	160b0 <sprintf@plt+0x47f0>
   16068:	movw	r6, #44556	; 0xae0c
   1606c:	mov	r4, sp
   16070:	movt	r6, #2
   16074:	ldr	r1, [r6, #12]
   16078:	ldr	r2, [r0, #464]	; 0x1d0
   1607c:	add	r1, r2, r1, lsl #4
   16080:	ldr	r1, [r1, #8]
   16084:	cmp	r1, #0
   16088:	movne	r1, #2
   1608c:	blne	1626c <sprintf@plt+0x49ac>
   16090:	ldr	r0, [r5]
   16094:	mov	r1, r4
   16098:	bl	11668 <rb_dictionary_foreach_next@plt>
   1609c:	ldr	r0, [r5]
   160a0:	mov	r1, r4
   160a4:	bl	115c0 <rb_dictionary_foreach_cur@plt>
   160a8:	cmp	r0, #0
   160ac:	bne	16074 <sprintf@plt+0x47b4>
   160b0:	sub	sp, fp, #16
   160b4:	pop	{r4, r5, r6, sl, fp, pc}
   160b8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   160bc:	add	fp, sp, #24
   160c0:	sub	sp, sp, #272	; 0x110
   160c4:	mov	r4, r0
   160c8:	mov	r0, #1
   160cc:	mov	r1, #4
   160d0:	bl	115d8 <calloc@plt>
   160d4:	cmp	r0, #0
   160d8:	beq	16240 <sprintf@plt+0x4980>
   160dc:	mov	r5, r0
   160e0:	movw	r0, #44620	; 0xae4c
   160e4:	movt	r0, #2
   160e8:	ldrb	r0, [r0]
   160ec:	cmp	r0, #0
   160f0:	beq	161d8 <sprintf@plt+0x4918>
   160f4:	ldr	r1, [r4, #460]	; 0x1cc
   160f8:	ldr	r0, [r4]
   160fc:	add	r1, r1, #1
   16100:	str	r1, [r4, #460]	; 0x1cc
   16104:	movw	r1, #35583	; 0x8aff
   16108:	ldrh	r8, [r4, #248]	; 0xf8
   1610c:	movt	r1, #1
   16110:	bl	12364 <sprintf@plt+0xaa4>
   16114:	movw	r0, #44556	; 0xae0c
   16118:	movw	r9, #44616	; 0xae48
   1611c:	movt	r0, #2
   16120:	movt	r9, #2
   16124:	ldr	r7, [r0, #12]
   16128:	ldr	r0, [r4, #464]	; 0x1d0
   1612c:	add	r0, r0, r7, lsl #4
   16130:	str	r5, [r0, #8]
   16134:	ldr	r6, [r9]
   16138:	bl	116d4 <rb_current_time@plt>
   1613c:	ldr	r1, [r4, #464]	; 0x1d0
   16140:	add	r0, r0, r6
   16144:	movw	r3, #35729	; 0x8b91
   16148:	movt	r3, #1
   1614c:	add	r1, r1, r7, lsl #4
   16150:	str	r0, [r1, #4]
   16154:	mov	r0, r8
   16158:	mov	r1, #1
   1615c:	ldr	r2, [r4, #4]
   16160:	bl	11590 <rb_socket@plt>
   16164:	cmp	r0, #0
   16168:	str	r0, [r5]
   1616c:	beq	16208 <sprintf@plt+0x4948>
   16170:	add	r8, sp, #136	; 0x88
   16174:	mov	r6, r0
   16178:	add	r1, r4, #64	; 0x40
   1617c:	mov	r2, #128	; 0x80
   16180:	add	r5, r4, #248	; 0xf8
   16184:	mov	r0, r8
   16188:	bl	116ec <memcpy@plt>
   1618c:	add	r7, sp, #8
   16190:	mov	r1, r5
   16194:	mov	r2, #128	; 0x80
   16198:	mov	r0, r7
   1619c:	bl	116ec <memcpy@plt>
   161a0:	mov	r0, #0
   161a4:	movw	r3, #25372	; 0x631c
   161a8:	mov	r1, r7
   161ac:	mov	r2, r8
   161b0:	str	r4, [sp]
   161b4:	strh	r0, [sp, #138]	; 0x8a
   161b8:	mov	r0, #28928	; 0x7100
   161bc:	movt	r3, #1
   161c0:	strh	r0, [sp, #10]
   161c4:	ldr	r0, [r9]
   161c8:	str	r0, [sp, #4]
   161cc:	mov	r0, r6
   161d0:	bl	11530 <rb_connect_tcp@plt>
   161d4:	b	16234 <sprintf@plt+0x4974>
   161d8:	mov	r0, r5
   161dc:	bl	11674 <free@plt>
   161e0:	ldr	r0, [r4]
   161e4:	movw	r1, #35696	; 0x8b70
   161e8:	movt	r1, #1
   161ec:	bl	12364 <sprintf@plt+0xaa4>
   161f0:	movw	r0, #44556	; 0xae0c
   161f4:	movt	r0, #2
   161f8:	ldr	r1, [r0, #12]
   161fc:	mov	r0, r4
   16200:	bl	12ca0 <sprintf@plt+0x13e0>
   16204:	b	16234 <sprintf@plt+0x4974>
   16208:	bl	118b4 <__errno_location@plt>
   1620c:	ldr	r0, [r0]
   16210:	bl	114dc <strerror@plt>
   16214:	movw	r1, #35735	; 0x8b97
   16218:	mov	r2, r0
   1621c:	mov	r0, #68	; 0x44
   16220:	movt	r1, #1
   16224:	bl	123d0 <sprintf@plt+0xb10>
   16228:	mov	r0, r4
   1622c:	mov	r1, #2
   16230:	bl	1626c <sprintf@plt+0x49ac>
   16234:	mov	r0, #1
   16238:	sub	sp, fp, #24
   1623c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16240:	bl	11788 <rb_outofmemory@plt>
   16244:	movw	r1, #44556	; 0xae0c
   16248:	ldr	r2, [r0, #464]	; 0x1d0
   1624c:	movt	r1, #2
   16250:	ldr	r1, [r1, #12]
   16254:	add	r1, r2, r1, lsl #4
   16258:	ldr	r1, [r1, #8]
   1625c:	cmp	r1, #0
   16260:	bxeq	lr
   16264:	mov	r1, #2
   16268:	b	1626c <sprintf@plt+0x49ac>
   1626c:	push	{r4, r5, r6, r7, fp, lr}
   16270:	add	fp, sp, #16
   16274:	movw	r7, #44556	; 0xae0c
   16278:	mov	r4, r0
   1627c:	mov	r5, r1
   16280:	mov	r2, #11
   16284:	movt	r7, #2
   16288:	ldr	r1, [r4, #464]	; 0x1d0
   1628c:	ldr	r0, [r7, #12]
   16290:	add	r0, r1, r0, lsl #4
   16294:	movw	r1, #33596	; 0x833c
   16298:	ldr	r6, [r0, #8]
   1629c:	add	r0, r4, #440	; 0x1b8
   162a0:	movt	r1, #1
   162a4:	bl	11650 <rb_strlcpy@plt>
   162a8:	ldr	r0, [r6]
   162ac:	cmp	r0, #0
   162b0:	beq	162b8 <sprintf@plt+0x49f8>
   162b4:	bl	11704 <rb_close@plt>
   162b8:	cmp	r6, #0
   162bc:	beq	162c8 <sprintf@plt+0x4a08>
   162c0:	mov	r0, r6
   162c4:	bl	11674 <free@plt>
   162c8:	ldr	r0, [r7, #12]
   162cc:	ldr	r1, [r4, #464]	; 0x1d0
   162d0:	add	r0, r1, r0, lsl #4
   162d4:	mov	r1, #0
   162d8:	str	r1, [r0, #4]
   162dc:	str	r1, [r0, #8]
   162e0:	movw	r0, #35788	; 0x8bcc
   162e4:	movt	r0, #1
   162e8:	ldr	r1, [r0, r5, lsl #2]
   162ec:	ldr	r0, [r4]
   162f0:	bl	12364 <sprintf@plt+0xaa4>
   162f4:	ldr	r1, [r7, #12]
   162f8:	mov	r0, r4
   162fc:	bl	12ca0 <sprintf@plt+0x13e0>
   16300:	ldr	r0, [r4, #460]	; 0x1cc
   16304:	subs	r0, r0, #1
   16308:	str	r0, [r4, #460]	; 0x1cc
   1630c:	popne	{r4, r5, r6, r7, fp, pc}
   16310:	mov	r0, r4
   16314:	pop	{r4, r5, r6, r7, fp, lr}
   16318:	b	12be8 <sprintf@plt+0x1328>
   1631c:	push	{r4, r5, r6, r7, fp, lr}
   16320:	add	fp, sp, #16
   16324:	sub	sp, sp, #40	; 0x28
   16328:	mov	r4, r2
   1632c:	cmp	r1, #0
   16330:	bne	163a4 <sprintf@plt+0x4ae4>
   16334:	movw	r0, #44556	; 0xae0c
   16338:	ldr	r1, [r4, #464]	; 0x1d0
   1633c:	ldrh	r3, [r4, #246]	; 0xf6
   16340:	movw	r2, #35769	; 0x8bb9
   16344:	add	r5, sp, #8
   16348:	movt	r0, #2
   1634c:	movt	r2, #1
   16350:	ldr	r0, [r0, #12]
   16354:	add	r0, r1, r0, lsl #4
   16358:	mov	r1, #32
   1635c:	ldr	r7, [r0, #8]
   16360:	ldrh	r0, [r4, #62]	; 0x3e
   16364:	str	r0, [sp]
   16368:	mov	r0, r5
   1636c:	bl	11848 <snprintf@plt>
   16370:	mov	r0, r5
   16374:	bl	116c8 <strlen@plt>
   16378:	mov	r6, r0
   1637c:	ldr	r0, [r7]
   16380:	mov	r1, r5
   16384:	mov	r2, r6
   16388:	bl	1162c <rb_write@plt>
   1638c:	cmp	r0, r6
   16390:	bne	163a4 <sprintf@plt+0x4ae4>
   16394:	ldr	r0, [r7]
   16398:	mov	r1, r4
   1639c:	bl	163b8 <sprintf@plt+0x4af8>
   163a0:	b	163b0 <sprintf@plt+0x4af0>
   163a4:	mov	r0, r4
   163a8:	mov	r1, #2
   163ac:	bl	1626c <sprintf@plt+0x49ac>
   163b0:	sub	sp, fp, #16
   163b4:	pop	{r4, r5, r6, r7, fp, pc}
   163b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   163bc:	add	fp, sp, #24
   163c0:	sub	sp, sp, #136	; 0x88
   163c4:	mov	r4, sp
   163c8:	mov	r8, r1
   163cc:	mov	r5, r0
   163d0:	mov	r1, #0
   163d4:	mov	r2, #129	; 0x81
   163d8:	mov	r0, r4
   163dc:	bl	11608 <memset@plt>
   163e0:	mov	r0, r5
   163e4:	mov	r1, r4
   163e8:	mov	r2, #128	; 0x80
   163ec:	bl	1168c <rb_read@plt>
   163f0:	cmn	r0, #1
   163f4:	ble	165c4 <sprintf@plt+0x4d04>
   163f8:	cmp	r0, #0
   163fc:	beq	165f4 <sprintf@plt+0x4d34>
   16400:	mov	r0, sp
   16404:	mov	r1, #58	; 0x3a
   16408:	bl	115b4 <strchr@plt>
   1640c:	mov	r5, #3
   16410:	cmp	r0, #0
   16414:	beq	165f8 <sprintf@plt+0x4d38>
   16418:	mov	r6, r0
   1641c:	mov	r4, #0
   16420:	mov	r1, #58	; 0x3a
   16424:	strb	r4, [r6], #1
   16428:	mov	r0, r6
   1642c:	bl	115b4 <strchr@plt>
   16430:	cmp	r0, #0
   16434:	beq	165f8 <sprintf@plt+0x4d38>
   16438:	mov	r7, r0
   1643c:	mov	r0, sp
   16440:	mov	r1, #44	; 0x2c
   16444:	strb	r4, [r7], #1
   16448:	bl	115b4 <strchr@plt>
   1644c:	cmp	r0, #0
   16450:	beq	165f8 <sprintf@plt+0x4d38>
   16454:	mov	r4, r0
   16458:	mov	r0, #0
   1645c:	strb	r0, [r4]
   16460:	mov	r0, sp
   16464:	bl	11734 <atoi@plt>
   16468:	cmp	r0, #0
   1646c:	beq	165f8 <sprintf@plt+0x4d38>
   16470:	add	r0, r4, #1
   16474:	bl	11734 <atoi@plt>
   16478:	cmp	r0, #0
   1647c:	beq	165f8 <sprintf@plt+0x4d38>
   16480:	movw	r1, #35779	; 0x8bc3
   16484:	mov	r0, r6
   16488:	movt	r1, #1
   1648c:	bl	11758 <strstr@plt>
   16490:	cmp	r0, #0
   16494:	beq	165f8 <sprintf@plt+0x4d38>
   16498:	mov	r0, r7
   1649c:	mov	r1, #58	; 0x3a
   164a0:	bl	115b4 <strchr@plt>
   164a4:	cmp	r0, #0
   164a8:	beq	165f8 <sprintf@plt+0x4d38>
   164ac:	mov	r1, #0
   164b0:	strb	r1, [r0]
   164b4:	mov	r1, r0
   164b8:	ldrb	r7, [r0, #1]!
   164bc:	orr	r2, r7, #32
   164c0:	cmp	r2, #126	; 0x7e
   164c4:	beq	164b4 <sprintf@plt+0x4bf4>
   164c8:	add	r0, r8, #440	; 0x1b8
   164cc:	cmp	r7, #0
   164d0:	beq	16534 <sprintf@plt+0x4c74>
   164d4:	mov	r2, #10
   164d8:	mov	r3, #2
   164dc:	uxtb	r6, r7
   164e0:	cmp	r6, #57	; 0x39
   164e4:	ble	16500 <sprintf@plt+0x4c40>
   164e8:	cmp	r6, #58	; 0x3a
   164ec:	cmpne	r6, #91	; 0x5b
   164f0:	beq	16520 <sprintf@plt+0x4c60>
   164f4:	cmp	r6, #64	; 0x40
   164f8:	bne	16518 <sprintf@plt+0x4c58>
   164fc:	b	16534 <sprintf@plt+0x4c74>
   16500:	cmp	r6, #32
   16504:	beq	16520 <sprintf@plt+0x4c60>
   16508:	cmp	r6, #10
   1650c:	beq	16534 <sprintf@plt+0x4c74>
   16510:	cmp	r6, #13
   16514:	beq	16534 <sprintf@plt+0x4c74>
   16518:	strb	r7, [r0], #1
   1651c:	sub	r2, r2, #1
   16520:	ldrb	r7, [r1, r3]
   16524:	cmp	r7, #0
   16528:	addne	r3, r3, #1
   1652c:	cmpne	r2, #0
   16530:	bne	164dc <sprintf@plt+0x4c1c>
   16534:	movw	r5, #44556	; 0xae0c
   16538:	mov	r1, #0
   1653c:	strb	r1, [r0]
   16540:	movt	r5, #2
   16544:	ldr	r0, [r5, #12]
   16548:	ldr	r1, [r8, #464]	; 0x1d0
   1654c:	add	r0, r1, r0, lsl #4
   16550:	ldr	r4, [r0, #8]
   16554:	ldr	r0, [r4]
   16558:	cmp	r0, #0
   1655c:	beq	16564 <sprintf@plt+0x4ca4>
   16560:	bl	11704 <rb_close@plt>
   16564:	cmp	r4, #0
   16568:	beq	16574 <sprintf@plt+0x4cb4>
   1656c:	mov	r0, r4
   16570:	bl	11674 <free@plt>
   16574:	ldr	r0, [r5, #12]
   16578:	ldr	r1, [r8, #464]	; 0x1d0
   1657c:	add	r0, r1, r0, lsl #4
   16580:	mov	r1, #0
   16584:	str	r1, [r0, #4]
   16588:	str	r1, [r0, #8]
   1658c:	movw	r1, #35602	; 0x8b12
   16590:	ldr	r0, [r8]
   16594:	movt	r1, #1
   16598:	bl	12364 <sprintf@plt+0xaa4>
   1659c:	ldr	r1, [r5, #12]
   165a0:	mov	r0, r8
   165a4:	bl	12ca0 <sprintf@plt+0x13e0>
   165a8:	ldr	r0, [r8, #460]	; 0x1cc
   165ac:	subs	r0, r0, #1
   165b0:	str	r0, [r8, #460]	; 0x1cc
   165b4:	bne	16604 <sprintf@plt+0x4d44>
   165b8:	mov	r0, r8
   165bc:	bl	12be8 <sprintf@plt+0x1328>
   165c0:	b	16604 <sprintf@plt+0x4d44>
   165c4:	bl	118b4 <__errno_location@plt>
   165c8:	ldr	r0, [r0]
   165cc:	bl	11518 <rb_ignore_errno@plt>
   165d0:	cmp	r0, #0
   165d4:	beq	165f4 <sprintf@plt+0x4d34>
   165d8:	movw	r2, #25528	; 0x63b8
   165dc:	mov	r0, r5
   165e0:	mov	r1, #1
   165e4:	mov	r3, r8
   165e8:	movt	r2, #1
   165ec:	bl	11560 <rb_setselect@plt>
   165f0:	b	16604 <sprintf@plt+0x4d44>
   165f4:	mov	r5, #2
   165f8:	mov	r0, r8
   165fc:	mov	r1, r5
   16600:	bl	1626c <sprintf@plt+0x49ac>
   16604:	sub	sp, fp, #24
   16608:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1660c:	push	{fp, lr}
   16610:	mov	fp, sp
   16614:	ldr	r0, [r2]
   16618:	bl	11734 <atoi@plt>
   1661c:	cmn	r0, #1
   16620:	mov	r2, r0
   16624:	movwgt	r0, #44708	; 0xaea4
   16628:	movtgt	r0, #2
   1662c:	strgt	r2, [r0]
   16630:	popgt	{fp, pc}
   16634:	movw	r1, #35821	; 0x8bed
   16638:	mov	r0, #67	; 0x43
   1663c:	movt	r1, #1
   16640:	bl	123d0 <sprintf@plt+0xb10>
   16644:	mov	r0, #3
   16648:	bl	118a8 <exit@plt>
   1664c:	push	{r4, r5, r6, sl, fp, lr}
   16650:	add	fp, sp, #16
   16654:	sub	sp, sp, #8
   16658:	movw	r5, #61820	; 0xf17c
   1665c:	mov	r4, sp
   16660:	movt	r5, #2
   16664:	mov	r1, r4
   16668:	ldr	r0, [r5]
   1666c:	bl	116b0 <rb_dictionary_foreach_start@plt>
   16670:	ldr	r0, [r5]
   16674:	mov	r1, r4
   16678:	bl	115c0 <rb_dictionary_foreach_cur@plt>
   1667c:	cmp	r0, #0
   16680:	beq	166cc <sprintf@plt+0x4e0c>
   16684:	movw	r6, #44648	; 0xae68
   16688:	mov	r4, sp
   1668c:	movt	r6, #2
   16690:	ldr	r1, [r6, #12]
   16694:	ldr	r2, [r0, #464]	; 0x1d0
   16698:	add	r1, r2, r1, lsl #4
   1669c:	ldr	r1, [r1, #8]
   166a0:	cmp	r1, #0
   166a4:	movne	r1, #1
   166a8:	blne	16798 <sprintf@plt+0x4ed8>
   166ac:	ldr	r0, [r5]
   166b0:	mov	r1, r4
   166b4:	bl	11668 <rb_dictionary_foreach_next@plt>
   166b8:	ldr	r0, [r5]
   166bc:	mov	r1, r4
   166c0:	bl	115c0 <rb_dictionary_foreach_cur@plt>
   166c4:	cmp	r0, #0
   166c8:	bne	16690 <sprintf@plt+0x4dd0>
   166cc:	sub	sp, fp, #16
   166d0:	pop	{r4, r5, r6, sl, fp, pc}
   166d4:	push	{r4, r5, r6, r7, fp, lr}
   166d8:	add	fp, sp, #16
   166dc:	mov	r4, r0
   166e0:	mov	r0, #1
   166e4:	mov	r1, #4
   166e8:	bl	115d8 <calloc@plt>
   166ec:	cmp	r0, #0
   166f0:	beq	1676c <sprintf@plt+0x4eac>
   166f4:	mov	r5, r0
   166f8:	ldr	r0, [r4, #460]	; 0x1cc
   166fc:	ldr	r1, [r4, #464]	; 0x1d0
   16700:	add	r0, r0, #1
   16704:	str	r0, [r4, #460]	; 0x1cc
   16708:	movw	r0, #44648	; 0xae68
   1670c:	movt	r0, #2
   16710:	ldr	r6, [r0, #12]
   16714:	add	r0, r1, r6, lsl #4
   16718:	str	r5, [r0, #8]
   1671c:	movw	r0, #44708	; 0xaea4
   16720:	movt	r0, #2
   16724:	ldr	r7, [r0]
   16728:	bl	116d4 <rb_current_time@plt>
   1672c:	ldr	r1, [r4, #464]	; 0x1d0
   16730:	add	r0, r0, r7
   16734:	mov	r2, r4
   16738:	add	r1, r1, r6, lsl #4
   1673c:	str	r0, [r1, #4]
   16740:	movw	r1, #26684	; 0x683c
   16744:	add	r0, r4, #192	; 0xc0
   16748:	movt	r1, #1
   1674c:	bl	11f44 <sprintf@plt+0x684>
   16750:	str	r0, [r5]
   16754:	movw	r1, #35855	; 0x8c0f
   16758:	ldr	r0, [r4]
   1675c:	movt	r1, #1
   16760:	bl	12364 <sprintf@plt+0xaa4>
   16764:	mov	r0, #1
   16768:	pop	{r4, r5, r6, r7, fp, pc}
   1676c:	bl	11788 <rb_outofmemory@plt>
   16770:	movw	r1, #44648	; 0xae68
   16774:	ldr	r2, [r0, #464]	; 0x1d0
   16778:	movt	r1, #2
   1677c:	ldr	r1, [r1, #12]
   16780:	add	r1, r2, r1, lsl #4
   16784:	ldr	r1, [r1, #8]
   16788:	cmp	r1, #0
   1678c:	bxeq	lr
   16790:	mov	r1, #1
   16794:	b	16798 <sprintf@plt+0x4ed8>
   16798:	push	{r4, r5, r6, r7, fp, lr}
   1679c:	add	fp, sp, #16
   167a0:	movw	r7, #44648	; 0xae68
   167a4:	mov	r4, r0
   167a8:	mov	r6, r1
   167ac:	mov	r2, #64	; 0x40
   167b0:	movt	r7, #2
   167b4:	ldr	r1, [r4, #464]	; 0x1d0
   167b8:	ldr	r0, [r7, #12]
   167bc:	add	r0, r1, r0, lsl #4
   167c0:	movw	r1, #33596	; 0x833c
   167c4:	ldr	r5, [r0, #8]
   167c8:	add	r0, r4, #376	; 0x178
   167cc:	movt	r1, #1
   167d0:	bl	11650 <rb_strlcpy@plt>
   167d4:	movw	r0, #36000	; 0x8ca0
   167d8:	movt	r0, #1
   167dc:	ldr	r1, [r0, r6, lsl #2]
   167e0:	ldr	r0, [r4]
   167e4:	bl	12364 <sprintf@plt+0xaa4>
   167e8:	ldr	r0, [r5]
   167ec:	bl	120d0 <sprintf@plt+0x810>
   167f0:	cmp	r5, #0
   167f4:	beq	16800 <sprintf@plt+0x4f40>
   167f8:	mov	r0, r5
   167fc:	bl	11674 <free@plt>
   16800:	ldr	r1, [r7, #12]
   16804:	ldr	r0, [r4, #464]	; 0x1d0
   16808:	mov	r2, #0
   1680c:	add	r0, r0, r1, lsl #4
   16810:	str	r2, [r0, #4]
   16814:	str	r2, [r0, #8]
   16818:	mov	r0, r4
   1681c:	bl	12ca0 <sprintf@plt+0x13e0>
   16820:	ldr	r0, [r4, #460]	; 0x1cc
   16824:	subs	r0, r0, #1
   16828:	str	r0, [r4, #460]	; 0x1cc
   1682c:	popne	{r4, r5, r6, r7, fp, pc}
   16830:	mov	r0, r4
   16834:	pop	{r4, r5, r6, r7, fp, lr}
   16838:	b	12be8 <sprintf@plt+0x1328>
   1683c:	push	{r4, r5, r6, r7, fp, lr}
   16840:	add	fp, sp, #16
   16844:	cmp	r0, #0
   16848:	mov	r4, r3
   1684c:	cmpne	r1, #0
   16850:	bne	16864 <sprintf@plt+0x4fa4>
   16854:	mov	r0, r4
   16858:	mov	r1, #1
   1685c:	pop	{r4, r5, r6, r7, fp, lr}
   16860:	b	16798 <sprintf@plt+0x4ed8>
   16864:	mov	r5, r0
   16868:	bl	116c8 <strlen@plt>
   1686c:	cmp	r0, #64	; 0x40
   16870:	bcc	16884 <sprintf@plt+0x4fc4>
   16874:	mov	r0, r4
   16878:	mov	r1, #2
   1687c:	pop	{r4, r5, r6, r7, fp, lr}
   16880:	b	16798 <sprintf@plt+0x4ed8>
   16884:	add	r6, r4, #376	; 0x178
   16888:	mov	r1, r5
   1688c:	mov	r2, #64	; 0x40
   16890:	mov	r0, r6
   16894:	bl	11650 <rb_strlcpy@plt>
   16898:	movw	r7, #44648	; 0xae68
   1689c:	ldr	r2, [r4, #464]	; 0x1d0
   168a0:	ldr	r0, [r4]
   168a4:	movt	r7, #2
   168a8:	ldr	r1, [r7, #12]
   168ac:	add	r1, r2, r1, lsl #4
   168b0:	mov	r2, r6
   168b4:	ldr	r5, [r1, #8]
   168b8:	movw	r1, #35971	; 0x8c83
   168bc:	movt	r1, #1
   168c0:	bl	12364 <sprintf@plt+0xaa4>
   168c4:	ldr	r0, [r5]
   168c8:	bl	120d0 <sprintf@plt+0x810>
   168cc:	cmp	r5, #0
   168d0:	beq	168dc <sprintf@plt+0x501c>
   168d4:	mov	r0, r5
   168d8:	bl	11674 <free@plt>
   168dc:	ldr	r1, [r7, #12]
   168e0:	ldr	r0, [r4, #464]	; 0x1d0
   168e4:	mov	r2, #0
   168e8:	add	r0, r0, r1, lsl #4
   168ec:	str	r2, [r0, #4]
   168f0:	str	r2, [r0, #8]
   168f4:	mov	r0, r4
   168f8:	bl	12ca0 <sprintf@plt+0x13e0>
   168fc:	ldr	r0, [r4, #460]	; 0x1cc
   16900:	subs	r0, r0, #1
   16904:	str	r0, [r4, #460]	; 0x1cc
   16908:	popne	{r4, r5, r6, r7, fp, pc}
   1690c:	mov	r0, r4
   16910:	pop	{r4, r5, r6, r7, fp, lr}
   16914:	b	12be8 <sprintf@plt+0x1328>
   16918:	push	{fp, lr}
   1691c:	mov	fp, sp
   16920:	ldr	r0, [r2]
   16924:	bl	11734 <atoi@plt>
   16928:	cmn	r0, #1
   1692c:	mov	r2, r0
   16930:	movwgt	r0, #44868	; 0xaf44
   16934:	movtgt	r0, #2
   16938:	strgt	r2, [r0]
   1693c:	popgt	{fp, pc}
   16940:	movw	r1, #36122	; 0x8d1a
   16944:	mov	r0, #67	; 0x43
   16948:	movt	r1, #1
   1694c:	pop	{fp, lr}
   16950:	b	123d0 <sprintf@plt+0xb10>
   16954:	push	{r4, r5, r6, sl, fp, lr}
   16958:	add	fp, sp, #16
   1695c:	sub	sp, sp, #8
   16960:	ldr	r0, [r2]
   16964:	movw	r4, #61424	; 0xeff0
   16968:	movt	r4, #2
   1696c:	ldrb	r0, [r0]
   16970:	subs	r0, r0, #49	; 0x31
   16974:	clz	r0, r0
   16978:	lsr	r5, r0, #5
   1697c:	bne	169bc <sprintf@plt+0x50fc>
   16980:	ldrb	r0, [r4]
   16984:	cmp	r0, #0
   16988:	ldrhne	r1, [r4, #54]	; 0x36
   1698c:	cmpne	r1, #0
   16990:	bne	16a60 <sprintf@plt+0x51a0>
   16994:	ldrb	r0, [r4, #188]	; 0xbc
   16998:	cmp	r0, #0
   1699c:	ldrhne	r1, [r4, #242]	; 0xf2
   169a0:	cmpne	r1, #0
   169a4:	beq	16a4c <sprintf@plt+0x518c>
   169a8:	ldr	r0, [r4, #372]	; 0x174
   169ac:	cmp	r0, #0
   169b0:	addeq	r0, r4, #188	; 0xbc
   169b4:	bleq	174ac <sprintf@plt+0x5bec>
   169b8:	b	16a4c <sprintf@plt+0x518c>
   169bc:	ldr	r1, [r4, #184]	; 0xb8
   169c0:	ldr	r0, [r4, #372]	; 0x174
   169c4:	orrs	r2, r1, r0
   169c8:	beq	16a4c <sprintf@plt+0x518c>
   169cc:	cmp	r1, #0
   169d0:	beq	169e0 <sprintf@plt+0x5120>
   169d4:	mov	r0, r1
   169d8:	bl	11704 <rb_close@plt>
   169dc:	ldr	r0, [r4, #372]	; 0x174
   169e0:	cmp	r0, #0
   169e4:	beq	169ec <sprintf@plt+0x512c>
   169e8:	bl	11704 <rb_close@plt>
   169ec:	movw	r6, #61820	; 0xf17c
   169f0:	mov	r0, #0
   169f4:	movt	r6, #2
   169f8:	str	r0, [r4, #184]	; 0xb8
   169fc:	str	r0, [r4, #372]	; 0x174
   16a00:	mov	r4, sp
   16a04:	ldr	r0, [r6]
   16a08:	mov	r1, r4
   16a0c:	bl	116b0 <rb_dictionary_foreach_start@plt>
   16a10:	ldr	r0, [r6]
   16a14:	mov	r1, r4
   16a18:	bl	115c0 <rb_dictionary_foreach_cur@plt>
   16a1c:	cmp	r0, #0
   16a20:	beq	16a4c <sprintf@plt+0x518c>
   16a24:	mov	r4, sp
   16a28:	bl	17304 <sprintf@plt+0x5a44>
   16a2c:	ldr	r0, [r6]
   16a30:	mov	r1, r4
   16a34:	bl	11668 <rb_dictionary_foreach_next@plt>
   16a38:	ldr	r0, [r6]
   16a3c:	mov	r1, r4
   16a40:	bl	115c0 <rb_dictionary_foreach_cur@plt>
   16a44:	cmp	r0, #0
   16a48:	bne	16a28 <sprintf@plt+0x5168>
   16a4c:	movw	r0, #61800	; 0xf168
   16a50:	movt	r0, #2
   16a54:	strb	r5, [r0]
   16a58:	sub	sp, fp, #16
   16a5c:	pop	{r4, r5, r6, sl, fp, pc}
   16a60:	ldr	r0, [r4, #184]	; 0xb8
   16a64:	cmp	r0, #0
   16a68:	bne	16994 <sprintf@plt+0x50d4>
   16a6c:	movw	r0, #61424	; 0xeff0
   16a70:	movt	r0, #2
   16a74:	bl	174ac <sprintf@plt+0x5bec>
   16a78:	b	16994 <sprintf@plt+0x50d4>
   16a7c:	push	{r4, r5, fp, lr}
   16a80:	add	fp, sp, #8
   16a84:	ldm	r2, {r4, r5}
   16a88:	mov	r0, r5
   16a8c:	bl	11734 <atoi@plt>
   16a90:	sub	r1, r0, #1
   16a94:	movw	r2, #65535	; 0xffff
   16a98:	cmp	r1, r2
   16a9c:	bcs	16ab0 <sprintf@plt+0x51f0>
   16aa0:	uxth	r1, r0
   16aa4:	mov	r0, r4
   16aa8:	pop	{r4, r5, fp, lr}
   16aac:	b	174ac <sprintf@plt+0x5bec>
   16ab0:	movw	r1, #36404	; 0x8e34
   16ab4:	mov	r0, #67	; 0x43
   16ab8:	mov	r2, r4
   16abc:	mov	r3, r5
   16ac0:	movt	r1, #1
   16ac4:	bl	123d0 <sprintf@plt+0xb10>
   16ac8:	mov	r0, #3
   16acc:	bl	118a8 <exit@plt>
   16ad0:	push	{r4, sl, fp, lr}
   16ad4:	add	fp, sp, #8
   16ad8:	movw	r4, #61424	; 0xeff0
   16adc:	movt	r4, #2
   16ae0:	ldr	r0, [r4, #184]	; 0xb8
   16ae4:	cmp	r0, #0
   16ae8:	beq	16af0 <sprintf@plt+0x5230>
   16aec:	bl	11704 <rb_close@plt>
   16af0:	ldr	r0, [r4, #372]	; 0x174
   16af4:	cmp	r0, #0
   16af8:	beq	16b00 <sprintf@plt+0x5240>
   16afc:	bl	11704 <rb_close@plt>
   16b00:	movw	r0, #61424	; 0xeff0
   16b04:	mov	r1, #0
   16b08:	mov	r2, #376	; 0x178
   16b0c:	movt	r0, #2
   16b10:	pop	{r4, sl, fp, lr}
   16b14:	b	11608 <memset@plt>
   16b18:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16b1c:	add	fp, sp, #24
   16b20:	ldr	r7, [r2, #4]
   16b24:	mov	r8, r2
   16b28:	mov	r0, r7
   16b2c:	bl	11734 <atoi@plt>
   16b30:	mov	r6, r0
   16b34:	mov	r0, #1
   16b38:	mov	r1, #40	; 0x28
   16b3c:	bl	115d8 <calloc@plt>
   16b40:	cmp	r0, #0
   16b44:	beq	16d50 <sprintf@plt+0x5490>
   16b48:	mov	r5, r0
   16b4c:	sub	r0, r6, #1
   16b50:	movw	r1, #65535	; 0xffff
   16b54:	cmp	r0, r1
   16b58:	bcs	16d54 <sprintf@plt+0x5494>
   16b5c:	strh	r6, [r5, #20]
   16b60:	movw	r1, #36617	; 0x8f09
   16b64:	ldr	r7, [r8]
   16b68:	movt	r1, #1
   16b6c:	mov	r0, r7
   16b70:	bl	115cc <strcasecmp@plt>
   16b74:	cmp	r0, #0
   16b78:	beq	16c04 <sprintf@plt+0x5344>
   16b7c:	movw	r1, #36624	; 0x8f10
   16b80:	mov	r0, r7
   16b84:	movt	r1, #1
   16b88:	bl	115cc <strcasecmp@plt>
   16b8c:	cmp	r0, #0
   16b90:	beq	16c38 <sprintf@plt+0x5378>
   16b94:	movw	r1, #36631	; 0x8f17
   16b98:	mov	r0, r7
   16b9c:	movt	r1, #1
   16ba0:	bl	115cc <strcasecmp@plt>
   16ba4:	cmp	r0, #0
   16ba8:	beq	16c6c <sprintf@plt+0x53ac>
   16bac:	movw	r1, #36643	; 0x8f23
   16bb0:	mov	r0, r7
   16bb4:	movt	r1, #1
   16bb8:	bl	115cc <strcasecmp@plt>
   16bbc:	clz	r1, r0
   16bc0:	uxth	r3, r6
   16bc4:	cmp	r0, #0
   16bc8:	lsr	r1, r1, #5
   16bcc:	lsl	r1, r1, #2
   16bd0:	str	r1, [r5, #16]
   16bd4:	bne	16d6c <sprintf@plt+0x54ac>
   16bd8:	movw	r2, #36510	; 0x8e9e
   16bdc:	mov	r0, r5
   16be0:	mov	r1, #16
   16be4:	movt	r2, #1
   16be8:	bl	11848 <snprintf@plt>
   16bec:	movw	r0, #31552	; 0x7b40
   16bf0:	movt	r0, #1
   16bf4:	str	r0, [r5, #24]
   16bf8:	mov	r0, #1
   16bfc:	strb	r0, [r5, #22]
   16c00:	b	16ca0 <sprintf@plt+0x53e0>
   16c04:	movw	r2, #36472	; 0x8e78
   16c08:	mov	r0, #1
   16c0c:	uxth	r3, r6
   16c10:	mov	r1, #16
   16c14:	str	r0, [r5, #16]
   16c18:	movt	r2, #1
   16c1c:	mov	r0, r5
   16c20:	bl	11848 <snprintf@plt>
   16c24:	mov	r0, #0
   16c28:	strb	r0, [r5, #22]
   16c2c:	movw	r0, #31232	; 0x7a00
   16c30:	movt	r0, #1
   16c34:	b	16c9c <sprintf@plt+0x53dc>
   16c38:	movw	r2, #36483	; 0x8e83
   16c3c:	mov	r0, #2
   16c40:	uxth	r3, r6
   16c44:	mov	r1, #16
   16c48:	str	r0, [r5, #16]
   16c4c:	movt	r2, #1
   16c50:	mov	r0, r5
   16c54:	bl	11848 <snprintf@plt>
   16c58:	mov	r0, #0
   16c5c:	strb	r0, [r5, #22]
   16c60:	movw	r0, #31348	; 0x7a74
   16c64:	movt	r0, #1
   16c68:	b	16c9c <sprintf@plt+0x53dc>
   16c6c:	movw	r2, #36494	; 0x8e8e
   16c70:	mov	r0, #3
   16c74:	uxth	r3, r6
   16c78:	mov	r1, #16
   16c7c:	str	r0, [r5, #16]
   16c80:	movt	r2, #1
   16c84:	mov	r0, r5
   16c88:	bl	11848 <snprintf@plt>
   16c8c:	mov	r0, #0
   16c90:	strb	r0, [r5, #22]
   16c94:	movw	r0, #31552	; 0x7b40
   16c98:	movt	r0, #1
   16c9c:	str	r0, [r5, #24]
   16ca0:	movw	r0, #61804	; 0xf16c
   16ca4:	movt	r0, #2
   16ca8:	ldr	r7, [r0]
   16cac:	cmp	r7, #0
   16cb0:	beq	16ce4 <sprintf@plt+0x5424>
   16cb4:	ldrh	r3, [r5, #20]
   16cb8:	ldr	r2, [r5, #16]
   16cbc:	mov	r1, r7
   16cc0:	ldr	r6, [r1]
   16cc4:	ldr	r4, [r6, #16]
   16cc8:	cmp	r4, r2
   16ccc:	ldrheq	r6, [r6, #20]
   16cd0:	cmpeq	r6, r3
   16cd4:	beq	16d30 <sprintf@plt+0x5470>
   16cd8:	ldr	r1, [r1, #8]
   16cdc:	cmp	r1, #0
   16ce0:	bne	16cc0 <sprintf@plt+0x5400>
   16ce4:	mov	r1, #0
   16ce8:	add	r2, r5, #28
   16cec:	cmp	r7, #0
   16cf0:	str	r5, [r5, #28]
   16cf4:	str	r1, [r5, #32]
   16cf8:	str	r7, [r5, #36]	; 0x24
   16cfc:	beq	16d0c <sprintf@plt+0x544c>
   16d00:	add	r1, r7, #4
   16d04:	str	r2, [r1]
   16d08:	b	16d1c <sprintf@plt+0x545c>
   16d0c:	mov	r1, r0
   16d10:	ldr	r3, [r1, #4]!
   16d14:	cmp	r3, #0
   16d18:	streq	r2, [r1]
   16d1c:	str	r2, [r0]
   16d20:	ldr	r1, [r0, #8]
   16d24:	add	r1, r1, #1
   16d28:	str	r1, [r0, #8]
   16d2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16d30:	ldr	r2, [r8]
   16d34:	movw	r1, #36573	; 0x8edd
   16d38:	mov	r0, #67	; 0x43
   16d3c:	movt	r1, #1
   16d40:	bl	123d0 <sprintf@plt+0xb10>
   16d44:	mov	r0, r5
   16d48:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   16d4c:	b	11674 <free@plt>
   16d50:	bl	11788 <rb_outofmemory@plt>
   16d54:	ldr	r2, [r8]
   16d58:	movw	r1, #36435	; 0x8e53
   16d5c:	mov	r0, #67	; 0x43
   16d60:	mov	r3, r7
   16d64:	movt	r1, #1
   16d68:	b	16d7c <sprintf@plt+0x54bc>
   16d6c:	movw	r1, #36527	; 0x8eaf
   16d70:	mov	r0, #67	; 0x43
   16d74:	mov	r2, r7
   16d78:	movt	r1, #1
   16d7c:	bl	123d0 <sprintf@plt+0xb10>
   16d80:	mov	r0, #3
   16d84:	bl	118a8 <exit@plt>
   16d88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d8c:	add	fp, sp, #28
   16d90:	sub	sp, sp, #12
   16d94:	ldr	r5, [r2]
   16d98:	movw	r1, #36617	; 0x8f09
   16d9c:	mov	r4, r2
   16da0:	movt	r1, #1
   16da4:	mov	r0, r5
   16da8:	bl	115cc <strcasecmp@plt>
   16dac:	cmp	r0, #0
   16db0:	beq	16e04 <sprintf@plt+0x5544>
   16db4:	movw	r1, #36624	; 0x8f10
   16db8:	mov	r0, r5
   16dbc:	movt	r1, #1
   16dc0:	bl	115cc <strcasecmp@plt>
   16dc4:	cmp	r0, #0
   16dc8:	beq	16e0c <sprintf@plt+0x554c>
   16dcc:	movw	r1, #36631	; 0x8f17
   16dd0:	mov	r0, r5
   16dd4:	movt	r1, #1
   16dd8:	bl	115cc <strcasecmp@plt>
   16ddc:	cmp	r0, #0
   16de0:	beq	16e14 <sprintf@plt+0x5554>
   16de4:	movw	r1, #36643	; 0x8f23
   16de8:	mov	r0, r5
   16dec:	movt	r1, #1
   16df0:	bl	115cc <strcasecmp@plt>
   16df4:	clz	r0, r0
   16df8:	lsr	r0, r0, #5
   16dfc:	lsl	r6, r0, #2
   16e00:	b	16e18 <sprintf@plt+0x5558>
   16e04:	mov	r6, #1
   16e08:	b	16e18 <sprintf@plt+0x5558>
   16e0c:	mov	r6, #2
   16e10:	b	16e18 <sprintf@plt+0x5558>
   16e14:	mov	r6, #3
   16e18:	ldr	r4, [r4, #4]
   16e1c:	mov	r0, r4
   16e20:	bl	11734 <atoi@plt>
   16e24:	mov	r3, r0
   16e28:	sub	r0, r0, #1
   16e2c:	movw	r1, #65535	; 0xffff
   16e30:	cmp	r0, r1
   16e34:	bcs	1704c <sprintf@plt+0x578c>
   16e38:	cmp	r6, #0
   16e3c:	beq	17064 <sprintf@plt+0x57a4>
   16e40:	movw	r0, #61804	; 0xf16c
   16e44:	movt	r0, #2
   16e48:	ldr	r0, [r0]
   16e4c:	cmp	r0, #0
   16e50:	beq	16e7c <sprintf@plt+0x55bc>
   16e54:	uxth	r1, r3
   16e58:	ldr	r4, [r0]
   16e5c:	ldr	r2, [r4, #16]
   16e60:	cmp	r2, r6
   16e64:	ldrheq	r2, [r4, #20]
   16e68:	cmpeq	r2, r1
   16e6c:	beq	16e98 <sprintf@plt+0x55d8>
   16e70:	ldr	r0, [r0, #8]
   16e74:	cmp	r0, #0
   16e78:	bne	16e58 <sprintf@plt+0x5598>
   16e7c:	movw	r1, #36799	; 0x8fbf
   16e80:	movt	r1, #1
   16e84:	mov	r0, #67	; 0x43
   16e88:	mov	r2, r5
   16e8c:	bl	123d0 <sprintf@plt+0xb10>
   16e90:	mov	r0, #3
   16e94:	bl	118a8 <exit@plt>
   16e98:	movw	sl, #61820	; 0xf17c
   16e9c:	add	r5, sp, #4
   16ea0:	movt	sl, #2
   16ea4:	mov	r1, r5
   16ea8:	ldr	r0, [sl]
   16eac:	bl	116b0 <rb_dictionary_foreach_start@plt>
   16eb0:	ldr	r0, [sl]
   16eb4:	mov	r1, r5
   16eb8:	bl	115c0 <rb_dictionary_foreach_cur@plt>
   16ebc:	cmp	r0, #0
   16ec0:	beq	16fd0 <sprintf@plt+0x5710>
   16ec4:	movw	r9, #44808	; 0xaf08
   16ec8:	mov	r6, r0
   16ecc:	add	r5, sp, #4
   16ed0:	movt	r9, #2
   16ed4:	ldr	r0, [r9, #12]
   16ed8:	ldr	r1, [r6, #464]	; 0x1d0
   16edc:	add	r0, r1, r0, lsl #4
   16ee0:	ldr	r8, [r0, #8]
   16ee4:	cmp	r8, #0
   16ee8:	beq	16fac <sprintf@plt+0x56ec>
   16eec:	ldr	r0, [r6, #460]	; 0x1cc
   16ef0:	add	r0, r0, #1
   16ef4:	str	r0, [r6, #460]	; 0x1cc
   16ef8:	ldr	r1, [r8]
   16efc:	cmp	r1, #0
   16f00:	beq	16f94 <sprintf@plt+0x56d4>
   16f04:	ldrh	r2, [r4, #20]
   16f08:	ldr	r0, [r1]
   16f0c:	ldr	r3, [r0, #8]
   16f10:	ldrh	r7, [r3, #20]
   16f14:	cmp	r7, r2
   16f18:	bne	16f2c <sprintf@plt+0x566c>
   16f1c:	ldr	r7, [r4, #16]
   16f20:	ldr	r3, [r3, #16]
   16f24:	cmp	r3, r7
   16f28:	beq	16f3c <sprintf@plt+0x567c>
   16f2c:	ldr	r1, [r1, #8]
   16f30:	cmp	r1, #0
   16f34:	bne	16f08 <sprintf@plt+0x5648>
   16f38:	b	16f94 <sprintf@plt+0x56d4>
   16f3c:	ldr	r1, [r0, #24]
   16f40:	ldr	r2, [r0, #20]
   16f44:	mov	r3, r8
   16f48:	cmp	r1, #0
   16f4c:	streq	r2, [r8, #4]
   16f50:	strne	r2, [r1, #4]
   16f54:	ldrne	r2, [r0, #20]
   16f58:	cmp	r2, #0
   16f5c:	addne	r3, r2, #8
   16f60:	str	r1, [r3]
   16f64:	mov	r1, #0
   16f68:	str	r1, [r0, #20]
   16f6c:	str	r1, [r0, #24]
   16f70:	ldr	r1, [r8, #8]
   16f74:	sub	r1, r1, #1
   16f78:	str	r1, [r8, #8]
   16f7c:	bl	11674 <free@plt>
   16f80:	ldr	r0, [r8, #8]
   16f84:	cmp	r0, #0
   16f88:	bne	16f94 <sprintf@plt+0x56d4>
   16f8c:	mov	r0, r6
   16f90:	bl	17304 <sprintf@plt+0x5a44>
   16f94:	ldr	r0, [r6, #460]	; 0x1cc
   16f98:	subs	r0, r0, #1
   16f9c:	str	r0, [r6, #460]	; 0x1cc
   16fa0:	bne	16fac <sprintf@plt+0x56ec>
   16fa4:	mov	r0, r6
   16fa8:	bl	12be8 <sprintf@plt+0x1328>
   16fac:	ldr	r0, [sl]
   16fb0:	mov	r1, r5
   16fb4:	bl	11668 <rb_dictionary_foreach_next@plt>
   16fb8:	ldr	r0, [sl]
   16fbc:	mov	r1, r5
   16fc0:	bl	115c0 <rb_dictionary_foreach_cur@plt>
   16fc4:	mov	r6, r0
   16fc8:	cmp	r0, #0
   16fcc:	bne	16ed4 <sprintf@plt+0x5614>
   16fd0:	ldr	r0, [r4, #36]	; 0x24
   16fd4:	ldr	r1, [r4, #32]
   16fd8:	cmp	r0, #0
   16fdc:	beq	16ff4 <sprintf@plt+0x5734>
   16fe0:	str	r1, [r0, #4]
   16fe4:	movw	r6, #61804	; 0xf16c
   16fe8:	ldr	r1, [r4, #32]
   16fec:	movt	r6, #2
   16ff0:	b	17000 <sprintf@plt+0x5740>
   16ff4:	movw	r6, #61804	; 0xf16c
   16ff8:	movt	r6, #2
   16ffc:	str	r1, [r6, #4]
   17000:	cmp	r1, #0
   17004:	mov	r2, r6
   17008:	mov	r5, #0
   1700c:	addne	r2, r1, #8
   17010:	str	r0, [r2]
   17014:	str	r5, [r4, #32]
   17018:	str	r5, [r4, #36]	; 0x24
   1701c:	ldr	r0, [r6, #8]
   17020:	sub	r0, r0, #1
   17024:	str	r0, [r6, #8]
   17028:	mov	r0, r4
   1702c:	bl	11674 <free@plt>
   17030:	ldr	r0, [r6, #8]
   17034:	cmp	r0, #0
   17038:	movweq	r0, #61800	; 0xf168
   1703c:	movteq	r0, #2
   17040:	strbeq	r5, [r0]
   17044:	sub	sp, fp, #28
   17048:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1704c:	movw	r1, #36697	; 0x8f59
   17050:	mov	r0, #67	; 0x43
   17054:	mov	r2, r5
   17058:	mov	r3, r4
   1705c:	movt	r1, #1
   17060:	b	16e8c <sprintf@plt+0x55cc>
   17064:	movw	r1, #36744	; 0x8f88
   17068:	movt	r1, #1
   1706c:	b	16e84 <sprintf@plt+0x55c4>
   17070:	push	{r4, r5, r6, r7, fp, lr}
   17074:	add	fp, sp, #16
   17078:	sub	sp, sp, #8
   1707c:	movw	r4, #61804	; 0xf16c
   17080:	movt	r4, #2
   17084:	ldr	r6, [r4]
   17088:	cmp	r6, #0
   1708c:	beq	170f0 <sprintf@plt+0x5830>
   17090:	mov	r5, #0
   17094:	ldr	r0, [r6]
   17098:	ldr	r7, [r6, #8]
   1709c:	cmp	r0, #0
   170a0:	beq	170a8 <sprintf@plt+0x57e8>
   170a4:	bl	11674 <free@plt>
   170a8:	ldr	r0, [r6, #8]
   170ac:	ldr	r1, [r6, #4]
   170b0:	mov	r2, r4
   170b4:	cmp	r0, #0
   170b8:	streq	r1, [r4, #4]
   170bc:	strne	r1, [r0, #4]
   170c0:	ldrne	r1, [r6, #4]
   170c4:	cmp	r1, #0
   170c8:	addne	r2, r1, #8
   170cc:	cmp	r7, #0
   170d0:	str	r0, [r2]
   170d4:	str	r5, [r6, #4]
   170d8:	str	r5, [r6, #8]
   170dc:	mov	r6, r7
   170e0:	ldr	r0, [r4, #8]
   170e4:	sub	r0, r0, #1
   170e8:	str	r0, [r4, #8]
   170ec:	bne	17094 <sprintf@plt+0x57d4>
   170f0:	movw	r5, #61820	; 0xf17c
   170f4:	mov	r4, sp
   170f8:	movt	r5, #2
   170fc:	mov	r1, r4
   17100:	ldr	r0, [r5]
   17104:	bl	116b0 <rb_dictionary_foreach_start@plt>
   17108:	ldr	r0, [r5]
   1710c:	mov	r1, r4
   17110:	bl	115c0 <rb_dictionary_foreach_cur@plt>
   17114:	cmp	r0, #0
   17118:	beq	17144 <sprintf@plt+0x5884>
   1711c:	mov	r4, sp
   17120:	bl	17304 <sprintf@plt+0x5a44>
   17124:	ldr	r0, [r5]
   17128:	mov	r1, r4
   1712c:	bl	11668 <rb_dictionary_foreach_next@plt>
   17130:	ldr	r0, [r5]
   17134:	mov	r1, r4
   17138:	bl	115c0 <rb_dictionary_foreach_cur@plt>
   1713c:	cmp	r0, #0
   17140:	bne	17120 <sprintf@plt+0x5860>
   17144:	movw	r0, #61800	; 0xf168
   17148:	mov	r1, #0
   1714c:	movt	r0, #2
   17150:	strb	r1, [r0]
   17154:	sub	sp, fp, #16
   17158:	pop	{r4, r5, r6, r7, fp, pc}
   1715c:	push	{r4, r5, fp, lr}
   17160:	add	fp, sp, #8
   17164:	sub	sp, sp, #8
   17168:	movw	r5, #61820	; 0xf17c
   1716c:	mov	r4, sp
   17170:	movt	r5, #2
   17174:	mov	r1, r4
   17178:	ldr	r0, [r5]
   1717c:	bl	116b0 <rb_dictionary_foreach_start@plt>
   17180:	ldr	r0, [r5]
   17184:	mov	r1, r4
   17188:	bl	115c0 <rb_dictionary_foreach_cur@plt>
   1718c:	cmp	r0, #0
   17190:	beq	171bc <sprintf@plt+0x58fc>
   17194:	mov	r4, sp
   17198:	bl	17304 <sprintf@plt+0x5a44>
   1719c:	ldr	r0, [r5]
   171a0:	mov	r1, r4
   171a4:	bl	11668 <rb_dictionary_foreach_next@plt>
   171a8:	ldr	r0, [r5]
   171ac:	mov	r1, r4
   171b0:	bl	115c0 <rb_dictionary_foreach_cur@plt>
   171b4:	cmp	r0, #0
   171b8:	bne	17198 <sprintf@plt+0x58d8>
   171bc:	sub	sp, fp, #8
   171c0:	pop	{r4, r5, fp, pc}
   171c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   171c8:	add	fp, sp, #24
   171cc:	mov	r9, r0
   171d0:	movw	r0, #61800	; 0xf168
   171d4:	movt	r0, #2
   171d8:	ldrb	r0, [r0]
   171dc:	cmp	r0, #0
   171e0:	movwne	r0, #61804	; 0xf16c
   171e4:	movtne	r0, #2
   171e8:	ldrne	r0, [r0, #8]
   171ec:	cmpne	r0, #0
   171f0:	bne	1720c <sprintf@plt+0x594c>
   171f4:	movw	r0, #44808	; 0xaf08
   171f8:	movt	r0, #2
   171fc:	ldr	r1, [r0, #12]
   17200:	mov	r0, r9
   17204:	bl	12ca0 <sprintf@plt+0x13e0>
   17208:	b	172f8 <sprintf@plt+0x5a38>
   1720c:	ldr	r0, [r9, #460]	; 0x1cc
   17210:	mov	r1, #16
   17214:	add	r0, r0, #1
   17218:	str	r0, [r9, #460]	; 0x1cc
   1721c:	movw	r0, #44808	; 0xaf08
   17220:	movt	r0, #2
   17224:	ldr	r5, [r0, #12]
   17228:	mov	r0, #1
   1722c:	bl	115d8 <calloc@plt>
   17230:	cmp	r0, #0
   17234:	beq	17300 <sprintf@plt+0x5a40>
   17238:	ldr	r8, [r9, #464]	; 0x1d0
   1723c:	add	r1, r8, r5, lsl #4
   17240:	str	r0, [r1, #8]
   17244:	movw	r0, #61824	; 0xf180
   17248:	movt	r0, #2
   1724c:	ldr	r6, [r0]
   17250:	cmp	r6, #0
   17254:	beq	172f0 <sprintf@plt+0x5a30>
   17258:	movw	r5, #35249	; 0x89b1
   1725c:	mov	r7, r6
   17260:	movt	r5, #1
   17264:	ldr	r4, [r7]
   17268:	mov	r1, r5
   1726c:	ldr	r0, [r4, #16]
   17270:	bl	115cc <strcasecmp@plt>
   17274:	cmp	r0, #0
   17278:	beq	1728c <sprintf@plt+0x59cc>
   1727c:	ldr	r7, [r7, #8]
   17280:	cmp	r7, #0
   17284:	bne	17264 <sprintf@plt+0x59a4>
   17288:	b	172a8 <sprintf@plt+0x59e8>
   1728c:	cmp	r4, #0
   17290:	beq	172a8 <sprintf@plt+0x59e8>
   17294:	ldr	r0, [r4, #12]
   17298:	add	r0, r8, r0, lsl #4
   1729c:	ldr	r0, [r0, #12]
   172a0:	cmp	r0, #2
   172a4:	bne	172f8 <sprintf@plt+0x5a38>
   172a8:	ldr	r5, [r6]
   172ac:	movw	r1, #35729	; 0x8b91
   172b0:	movt	r1, #1
   172b4:	ldr	r0, [r5, #16]
   172b8:	bl	115cc <strcasecmp@plt>
   172bc:	cmp	r0, #0
   172c0:	beq	172d4 <sprintf@plt+0x5a14>
   172c4:	ldr	r6, [r6, #8]
   172c8:	cmp	r6, #0
   172cc:	bne	172a8 <sprintf@plt+0x59e8>
   172d0:	b	172f0 <sprintf@plt+0x5a30>
   172d4:	cmp	r5, #0
   172d8:	beq	172f0 <sprintf@plt+0x5a30>
   172dc:	ldr	r0, [r5, #12]
   172e0:	add	r0, r8, r0, lsl #4
   172e4:	ldr	r0, [r0, #12]
   172e8:	cmp	r0, #2
   172ec:	bne	172f8 <sprintf@plt+0x5a38>
   172f0:	mov	r0, r9
   172f4:	bl	17bd8 <sprintf@plt+0x6318>
   172f8:	mov	r0, #1
   172fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17300:	bl	11788 <rb_outofmemory@plt>
   17304:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17308:	add	fp, sp, #24
   1730c:	movw	r8, #44808	; 0xaf08
   17310:	mov	r4, r0
   17314:	movt	r8, #2
   17318:	ldr	r1, [r4, #464]	; 0x1d0
   1731c:	ldr	r0, [r8, #12]
   17320:	add	r0, r1, r0, lsl #4
   17324:	ldr	r5, [r0, #8]
   17328:	cmp	r5, #0
   1732c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   17330:	ldr	r0, [r4]
   17334:	movw	r1, #36927	; 0x903f
   17338:	movt	r1, #1
   1733c:	bl	12364 <sprintf@plt+0xaa4>
   17340:	ldr	r7, [r5]
   17344:	b	17368 <sprintf@plt+0x5aa8>
   17348:	ldr	r6, [r7]
   1734c:	ldr	r7, [r7, #8]
   17350:	ldr	r0, [r6, #4]
   17354:	bl	11704 <rb_close@plt>
   17358:	cmp	r6, #0
   1735c:	beq	17368 <sprintf@plt+0x5aa8>
   17360:	mov	r0, r6
   17364:	bl	11674 <free@plt>
   17368:	cmp	r7, #0
   1736c:	bne	17348 <sprintf@plt+0x5a88>
   17370:	mov	r0, r5
   17374:	bl	11674 <free@plt>
   17378:	ldr	r1, [r8, #12]
   1737c:	ldr	r0, [r4, #464]	; 0x1d0
   17380:	mov	r2, #0
   17384:	add	r0, r0, r1, lsl #4
   17388:	str	r2, [r0, #4]
   1738c:	str	r2, [r0, #8]
   17390:	mov	r0, r4
   17394:	bl	12ca0 <sprintf@plt+0x13e0>
   17398:	ldr	r0, [r4, #460]	; 0x1cc
   1739c:	subs	r0, r0, #1
   173a0:	str	r0, [r4, #460]	; 0x1cc
   173a4:	beq	173ac <sprintf@plt+0x5aec>
   173a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   173ac:	mov	r0, r4
   173b0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   173b4:	b	12be8 <sprintf@plt+0x1328>
   173b8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   173bc:	add	fp, sp, #24
   173c0:	mov	r8, r0
   173c4:	movw	r0, #44808	; 0xaf08
   173c8:	movt	r0, #2
   173cc:	ldr	r9, [r8, #464]	; 0x1d0
   173d0:	ldr	r0, [r0, #12]
   173d4:	add	r0, r9, r0, lsl #4
   173d8:	ldr	r0, [r0, #8]
   173dc:	cmp	r0, #0
   173e0:	beq	174a8 <sprintf@plt+0x5be8>
   173e4:	ldrb	r0, [r0, #12]
   173e8:	cmp	r0, #0
   173ec:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   173f0:	movw	r0, #61824	; 0xf180
   173f4:	movt	r0, #2
   173f8:	ldr	r4, [r0]
   173fc:	cmp	r4, #0
   17400:	beq	1749c <sprintf@plt+0x5bdc>
   17404:	movw	r5, #35249	; 0x89b1
   17408:	mov	r7, r4
   1740c:	movt	r5, #1
   17410:	ldr	r6, [r7]
   17414:	mov	r1, r5
   17418:	ldr	r0, [r6, #16]
   1741c:	bl	115cc <strcasecmp@plt>
   17420:	cmp	r0, #0
   17424:	beq	17438 <sprintf@plt+0x5b78>
   17428:	ldr	r7, [r7, #8]
   1742c:	cmp	r7, #0
   17430:	bne	17410 <sprintf@plt+0x5b50>
   17434:	b	17454 <sprintf@plt+0x5b94>
   17438:	cmp	r6, #0
   1743c:	beq	17454 <sprintf@plt+0x5b94>
   17440:	ldr	r0, [r6, #12]
   17444:	add	r0, r9, r0, lsl #4
   17448:	ldr	r0, [r0, #12]
   1744c:	cmp	r0, #2
   17450:	bne	174a8 <sprintf@plt+0x5be8>
   17454:	ldr	r5, [r4]
   17458:	movw	r1, #35729	; 0x8b91
   1745c:	movt	r1, #1
   17460:	ldr	r0, [r5, #16]
   17464:	bl	115cc <strcasecmp@plt>
   17468:	cmp	r0, #0
   1746c:	beq	17480 <sprintf@plt+0x5bc0>
   17470:	ldr	r4, [r4, #8]
   17474:	cmp	r4, #0
   17478:	bne	17454 <sprintf@plt+0x5b94>
   1747c:	b	1749c <sprintf@plt+0x5bdc>
   17480:	cmp	r5, #0
   17484:	beq	1749c <sprintf@plt+0x5bdc>
   17488:	ldr	r0, [r5, #12]
   1748c:	add	r0, r9, r0, lsl #4
   17490:	ldr	r0, [r0, #12]
   17494:	cmp	r0, #2
   17498:	bne	174a8 <sprintf@plt+0x5be8>
   1749c:	mov	r0, r8
   174a0:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   174a4:	b	17bd8 <sprintf@plt+0x6318>
   174a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   174ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   174b0:	add	fp, sp, #24
   174b4:	sub	sp, sp, #144	; 0x90
   174b8:	mov	r5, r0
   174bc:	mov	r0, #1
   174c0:	mov	r8, r1
   174c4:	add	r1, sp, #16
   174c8:	str	r0, [sp, #4]
   174cc:	mov	r0, r5
   174d0:	bl	116bc <rb_inet_pton_sock@plt>
   174d4:	cmp	r0, #0
   174d8:	beq	17718 <sprintf@plt+0x5e58>
   174dc:	rev16	r1, r8
   174e0:	strh	r1, [sp, #18]
   174e4:	ldrh	r0, [sp, #16]
   174e8:	cmp	r0, #10
   174ec:	bne	17554 <sprintf@plt+0x5c94>
   174f0:	movw	r2, #61424	; 0xeff0
   174f4:	ldr	r7, [sp, #24]
   174f8:	movt	r2, #2
   174fc:	ldr	r3, [r2, #252]	; 0xfc
   17500:	add	r6, r2, #188	; 0xbc
   17504:	cmp	r7, r3
   17508:	bne	17590 <sprintf@plt+0x5cd0>
   1750c:	ldr	r3, [r2, #256]	; 0x100
   17510:	ldr	r7, [sp, #28]
   17514:	cmp	r7, r3
   17518:	bne	17590 <sprintf@plt+0x5cd0>
   1751c:	ldr	r3, [r2, #260]	; 0x104
   17520:	ldr	r7, [sp, #32]
   17524:	cmp	r7, r3
   17528:	bne	17590 <sprintf@plt+0x5cd0>
   1752c:	ldr	r3, [r2, #264]	; 0x108
   17530:	ldr	r7, [sp, #36]	; 0x24
   17534:	cmp	r7, r3
   17538:	bne	17590 <sprintf@plt+0x5cd0>
   1753c:	ldrh	r3, [r2, #246]	; 0xf6
   17540:	uxth	r1, r1
   17544:	cmp	r1, r3
   17548:	bne	17590 <sprintf@plt+0x5cd0>
   1754c:	ldr	r1, [r2, #372]	; 0x174
   17550:	b	17588 <sprintf@plt+0x5cc8>
   17554:	movw	r6, #61424	; 0xeff0
   17558:	ldr	r3, [sp, #20]
   1755c:	movt	r6, #2
   17560:	ldr	r2, [r6, #60]	; 0x3c
   17564:	cmp	r3, r2
   17568:	bne	17590 <sprintf@plt+0x5cd0>
   1756c:	movw	r6, #61424	; 0xeff0
   17570:	uxth	r1, r1
   17574:	movt	r6, #2
   17578:	ldrh	r2, [r6, #58]	; 0x3a
   1757c:	cmp	r1, r2
   17580:	bne	17590 <sprintf@plt+0x5cd0>
   17584:	ldr	r1, [r6, #184]	; 0xb8
   17588:	cmp	r1, #0
   1758c:	bne	17658 <sprintf@plt+0x5d98>
   17590:	movw	r3, #36187	; 0x8d5b
   17594:	mov	r1, #1
   17598:	mov	r2, #0
   1759c:	movt	r3, #1
   175a0:	bl	11590 <rb_socket@plt>
   175a4:	cmp	r0, #0
   175a8:	beq	17738 <sprintf@plt+0x5e78>
   175ac:	mov	r7, r0
   175b0:	bl	1156c <rb_get_fd@plt>
   175b4:	mov	r1, #4
   175b8:	add	r3, sp, #4
   175bc:	mov	r2, #2
   175c0:	str	r1, [sp]
   175c4:	mov	r1, #1
   175c8:	bl	11878 <setsockopt@plt>
   175cc:	cmp	r0, #0
   175d0:	bne	17754 <sprintf@plt+0x5e94>
   175d4:	mov	r0, r7
   175d8:	bl	1156c <rb_get_fd@plt>
   175dc:	ldrh	r1, [sp, #16]
   175e0:	mov	r2, #28
   175e4:	cmp	r1, #2
   175e8:	add	r1, sp, #16
   175ec:	movweq	r2, #16
   175f0:	bl	1174c <bind@plt>
   175f4:	cmp	r0, #0
   175f8:	beq	17618 <sprintf@plt+0x5d58>
   175fc:	bl	118b4 <__errno_location@plt>
   17600:	ldr	r0, [r0]
   17604:	bl	114dc <strerror@plt>
   17608:	movw	r1, #36275	; 0x8db3
   1760c:	mov	r2, r0
   17610:	movt	r1, #1
   17614:	b	17648 <sprintf@plt+0x5d88>
   17618:	mov	r0, r7
   1761c:	mov	r1, #128	; 0x80
   17620:	mov	r2, #0
   17624:	bl	11854 <rb_listen@plt>
   17628:	cmp	r0, #0
   1762c:	beq	17660 <sprintf@plt+0x5da0>
   17630:	bl	118b4 <__errno_location@plt>
   17634:	ldr	r0, [r0]
   17638:	bl	114dc <strerror@plt>
   1763c:	movw	r1, #36306	; 0x8dd2
   17640:	mov	r2, r0
   17644:	movt	r1, #1
   17648:	mov	r0, #87	; 0x57
   1764c:	bl	123d0 <sprintf@plt+0xb10>
   17650:	mov	r0, r7
   17654:	bl	11704 <rb_close@plt>
   17658:	sub	sp, fp, #24
   1765c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17660:	ldr	r0, [r6, #184]	; 0xb8
   17664:	cmp	r0, #0
   17668:	beq	17670 <sprintf@plt+0x5db0>
   1766c:	bl	11704 <rb_close@plt>
   17670:	movw	r4, #61820	; 0xf17c
   17674:	str	r7, [r6, #184]	; 0xb8
   17678:	add	r7, sp, #8
   1767c:	movt	r4, #2
   17680:	mov	r1, r7
   17684:	ldr	r0, [r4]
   17688:	bl	116b0 <rb_dictionary_foreach_start@plt>
   1768c:	ldr	r0, [r4]
   17690:	mov	r1, r7
   17694:	bl	115c0 <rb_dictionary_foreach_cur@plt>
   17698:	cmp	r0, #0
   1769c:	beq	176c8 <sprintf@plt+0x5e08>
   176a0:	add	r7, sp, #8
   176a4:	bl	17304 <sprintf@plt+0x5a44>
   176a8:	ldr	r0, [r4]
   176ac:	mov	r1, r7
   176b0:	bl	11668 <rb_dictionary_foreach_next@plt>
   176b4:	ldr	r0, [r4]
   176b8:	mov	r1, r7
   176bc:	bl	115c0 <rb_dictionary_foreach_cur@plt>
   176c0:	cmp	r0, #0
   176c4:	bne	176a4 <sprintf@plt+0x5de4>
   176c8:	mov	r0, r6
   176cc:	mov	r1, r5
   176d0:	mov	r2, #53	; 0x35
   176d4:	bl	11650 <rb_strlcpy@plt>
   176d8:	add	r0, r6, #56	; 0x38
   176dc:	add	r1, sp, #16
   176e0:	mov	r2, #128	; 0x80
   176e4:	strh	r8, [r6, #54]	; 0x36
   176e8:	bl	116ec <memcpy@plt>
   176ec:	movw	r0, #61800	; 0xf168
   176f0:	mov	r1, #1
   176f4:	movw	r2, #30588	; 0x777c
   176f8:	mov	r3, r6
   176fc:	movt	r0, #2
   17700:	movt	r2, #1
   17704:	strb	r1, [r0]
   17708:	ldr	r0, [r6, #184]	; 0xb8
   1770c:	mov	r1, #0
   17710:	bl	1180c <rb_accept_tcp@plt>
   17714:	b	17658 <sprintf@plt+0x5d98>
   17718:	movw	r1, #36155	; 0x8d3b
   1771c:	mov	r0, #67	; 0x43
   17720:	mov	r2, r5
   17724:	mov	r3, r8
   17728:	movt	r1, #1
   1772c:	bl	123d0 <sprintf@plt+0xb10>
   17730:	mov	r0, #3
   17734:	bl	118a8 <exit@plt>
   17738:	bl	118b4 <__errno_location@plt>
   1773c:	ldr	r0, [r0]
   17740:	bl	114dc <strerror@plt>
   17744:	movw	r1, #36207	; 0x8d6f
   17748:	mov	r2, r0
   1774c:	movt	r1, #1
   17750:	b	1776c <sprintf@plt+0x5eac>
   17754:	bl	118b4 <__errno_location@plt>
   17758:	ldr	r0, [r0]
   1775c:	bl	114dc <strerror@plt>
   17760:	movw	r1, #36237	; 0x8d8d
   17764:	mov	r2, r0
   17768:	movt	r1, #1
   1776c:	mov	r0, #67	; 0x43
   17770:	bl	123d0 <sprintf@plt+0xb10>
   17774:	mov	r0, #3
   17778:	bl	118a8 <exit@plt>
   1777c:	push	{r4, r5, r6, sl, fp, lr}
   17780:	add	fp, sp, #16
   17784:	sub	sp, sp, #144	; 0x90
   17788:	mov	r4, r0
   1778c:	mov	r0, #128	; 0x80
   17790:	cmp	r1, #0
   17794:	str	r0, [sp, #12]
   17798:	bne	1788c <sprintf@plt+0x5fcc>
   1779c:	ldr	r0, [fp, #8]
   177a0:	cmp	r0, #0
   177a4:	beq	1788c <sprintf@plt+0x5fcc>
   177a8:	mov	r0, r4
   177ac:	bl	1156c <rb_get_fd@plt>
   177b0:	add	r1, sp, #16
   177b4:	add	r2, sp, #12
   177b8:	bl	1150c <getsockname@plt>
   177bc:	cmp	r0, #0
   177c0:	bne	1788c <sprintf@plt+0x5fcc>
   177c4:	movw	r6, #61820	; 0xf17c
   177c8:	add	r5, sp, #4
   177cc:	movt	r6, #2
   177d0:	mov	r1, r5
   177d4:	ldr	r0, [r6]
   177d8:	bl	116b0 <rb_dictionary_foreach_start@plt>
   177dc:	ldr	r0, [r6]
   177e0:	mov	r1, r5
   177e4:	bl	115c0 <rb_dictionary_foreach_cur@plt>
   177e8:	cmp	r0, #0
   177ec:	beq	1788c <sprintf@plt+0x5fcc>
   177f0:	mov	r3, r0
   177f4:	add	r5, sp, #4
   177f8:	ldrh	r0, [r3, #248]	; 0xf8
   177fc:	ldrh	r1, [sp, #16]
   17800:	cmp	r0, r1
   17804:	bne	17868 <sprintf@plt+0x5fa8>
   17808:	cmp	r0, #10
   1780c:	beq	1782c <sprintf@plt+0x5f6c>
   17810:	cmp	r0, #2
   17814:	bne	178b4 <sprintf@plt+0x5ff4>
   17818:	ldr	r0, [r3, #252]	; 0xfc
   1781c:	ldr	r1, [sp, #20]
   17820:	cmp	r1, r0
   17824:	bne	17868 <sprintf@plt+0x5fa8>
   17828:	b	1789c <sprintf@plt+0x5fdc>
   1782c:	ldr	r0, [r3, #256]	; 0x100
   17830:	ldr	r1, [sp, #24]
   17834:	cmp	r1, r0
   17838:	bne	17868 <sprintf@plt+0x5fa8>
   1783c:	ldr	r0, [r3, #260]	; 0x104
   17840:	ldr	r1, [sp, #28]
   17844:	cmp	r1, r0
   17848:	bne	17868 <sprintf@plt+0x5fa8>
   1784c:	ldr	r0, [r3, #264]	; 0x108
   17850:	ldr	r1, [sp, #32]
   17854:	cmp	r1, r0
   17858:	bne	17868 <sprintf@plt+0x5fa8>
   1785c:	ldr	r0, [r3, #268]	; 0x10c
   17860:	ldr	r1, [sp, #36]	; 0x24
   17864:	b	17820 <sprintf@plt+0x5f60>
   17868:	ldr	r0, [r6]
   1786c:	mov	r1, r5
   17870:	bl	11668 <rb_dictionary_foreach_next@plt>
   17874:	ldr	r0, [r6]
   17878:	mov	r1, r5
   1787c:	bl	115c0 <rb_dictionary_foreach_cur@plt>
   17880:	mov	r3, r0
   17884:	cmp	r0, #0
   17888:	bne	177f8 <sprintf@plt+0x5f38>
   1788c:	mov	r0, r4
   17890:	bl	11704 <rb_close@plt>
   17894:	sub	sp, fp, #16
   17898:	pop	{r4, r5, r6, sl, fp, pc}
   1789c:	movw	r2, #30924	; 0x78cc
   178a0:	mov	r0, r4
   178a4:	mov	r1, #1
   178a8:	movt	r2, #1
   178ac:	bl	11560 <rb_setselect@plt>
   178b0:	b	17894 <sprintf@plt+0x5fd4>
   178b4:	movw	r1, #36339	; 0x8df3
   178b8:	mov	r0, #67	; 0x43
   178bc:	movt	r1, #1
   178c0:	bl	123d0 <sprintf@plt+0xb10>
   178c4:	mov	r0, #3
   178c8:	bl	118a8 <exit@plt>
   178cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   178d0:	add	fp, sp, #28
   178d4:	sub	sp, sp, #132	; 0x84
   178d8:	movw	r9, #44808	; 0xaf08
   178dc:	mov	sl, r1
   178e0:	mov	r4, r0
   178e4:	ldr	r1, [r1, #464]	; 0x1d0
   178e8:	mov	r2, #128	; 0x80
   178ec:	movt	r9, #2
   178f0:	ldr	r0, [r9, #12]
   178f4:	add	r0, r1, r0, lsl #4
   178f8:	add	r1, sp, #4
   178fc:	ldr	r8, [r0, #8]
   17900:	mov	r0, r4
   17904:	bl	1168c <rb_read@plt>
   17908:	cmn	r0, #1
   1790c:	ble	17964 <sprintf@plt+0x60a4>
   17910:	cmp	r0, #0
   17914:	beq	179f0 <sprintf@plt+0x6130>
   17918:	movw	r0, #61804	; 0xf16c
   1791c:	movt	r0, #2
   17920:	ldr	r5, [r0]
   17924:	cmp	r5, #0
   17928:	beq	179f0 <sprintf@plt+0x6130>
   1792c:	add	r7, sp, #4
   17930:	ldr	r6, [r5]
   17934:	mov	r0, r6
   17938:	bl	116c8 <strlen@plt>
   1793c:	mov	r2, r0
   17940:	mov	r0, r6
   17944:	mov	r1, r7
   17948:	bl	11860 <strncmp@plt>
   1794c:	cmp	r0, #0
   17950:	beq	17994 <sprintf@plt+0x60d4>
   17954:	ldr	r5, [r5, #8]
   17958:	cmp	r5, #0
   1795c:	bne	17930 <sprintf@plt+0x6070>
   17960:	b	179f0 <sprintf@plt+0x6130>
   17964:	bl	118b4 <__errno_location@plt>
   17968:	ldr	r0, [r0]
   1796c:	bl	11518 <rb_ignore_errno@plt>
   17970:	cmp	r0, #0
   17974:	beq	179f0 <sprintf@plt+0x6130>
   17978:	movw	r2, #30924	; 0x78cc
   1797c:	mov	r0, r4
   17980:	mov	r1, #1
   17984:	mov	r3, sl
   17988:	movt	r2, #1
   1798c:	bl	11560 <rb_setselect@plt>
   17990:	b	179f8 <sprintf@plt+0x6138>
   17994:	ldr	r5, [r8]
   17998:	cmp	r5, #0
   1799c:	beq	179d0 <sprintf@plt+0x6110>
   179a0:	ldr	r7, [r5]
   179a4:	ldr	r5, [r5, #8]
   179a8:	ldr	r0, [r7, #4]
   179ac:	bl	11704 <rb_close@plt>
   179b0:	cmp	r7, #0
   179b4:	beq	179c0 <sprintf@plt+0x6100>
   179b8:	mov	r0, r7
   179bc:	bl	11674 <free@plt>
   179c0:	cmp	r5, #0
   179c4:	bne	179a0 <sprintf@plt+0x60e0>
   179c8:	cmp	r8, #0
   179cc:	beq	179d8 <sprintf@plt+0x6118>
   179d0:	mov	r0, r8
   179d4:	bl	11674 <free@plt>
   179d8:	ldr	r1, [r9, #12]
   179dc:	movw	r3, #36384	; 0x8e20
   179e0:	add	r2, sp, #4
   179e4:	mov	r0, sl
   179e8:	movt	r3, #1
   179ec:	bl	12988 <sprintf@plt+0x10c8>
   179f0:	mov	r0, r4
   179f4:	bl	11704 <rb_close@plt>
   179f8:	sub	sp, fp, #28
   179fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a00:	push	{r4, r5, fp, lr}
   17a04:	add	fp, sp, #8
   17a08:	sub	sp, sp, #16
   17a0c:	mov	r4, r0
   17a10:	mov	r0, #260	; 0x104
   17a14:	mov	r2, #9
   17a18:	strh	r0, [sp, #6]
   17a1c:	ldr	r0, [r4, #12]
   17a20:	ldrh	r1, [r0, #58]	; 0x3a
   17a24:	strh	r1, [sp, #8]
   17a28:	mov	r1, #0
   17a2c:	ldr	r0, [r0, #60]	; 0x3c
   17a30:	strb	r1, [sp, #14]
   17a34:	add	r1, sp, #6
   17a38:	str	r0, [sp, #10]
   17a3c:	ldr	r0, [r4, #4]
   17a40:	bl	1162c <rb_write@plt>
   17a44:	cmp	r0, #0
   17a48:	blt	17a6c <sprintf@plt+0x61ac>
   17a4c:	ldr	r5, [r4, #4]
   17a50:	ldr	r4, [r4, #8]
   17a54:	mov	r0, r4
   17a58:	bl	116c8 <strlen@plt>
   17a5c:	add	r2, r0, #1
   17a60:	mov	r0, r5
   17a64:	mov	r1, r4
   17a68:	bl	1162c <rb_write@plt>
   17a6c:	sub	sp, fp, #8
   17a70:	pop	{r4, r5, fp, pc}
   17a74:	push	{r4, r5, fp, lr}
   17a78:	add	fp, sp, #8
   17a7c:	sub	sp, sp, #32
   17a80:	mov	r4, r0
   17a84:	ldr	r0, [r0]
   17a88:	mov	r1, #1
   17a8c:	strh	r1, [sp, #4]
   17a90:	movw	r1, #261	; 0x105
   17a94:	movt	r1, #1280	; 0x500
   17a98:	str	r1, [sp]
   17a9c:	ldrh	r0, [r0, #248]	; 0xf8
   17aa0:	cmp	r0, #10
   17aa4:	beq	17ad0 <sprintf@plt+0x6210>
   17aa8:	cmp	r0, #2
   17aac:	bne	17b38 <sprintf@plt+0x6278>
   17ab0:	mov	r0, #1
   17ab4:	mvn	r2, #12
   17ab8:	mov	r3, #11
   17abc:	strb	r0, [sp, #6]
   17ac0:	ldr	r0, [r4, #12]
   17ac4:	ldr	r1, [r0, #60]	; 0x3c
   17ac8:	str	r1, [sp, #7]
   17acc:	b	17af8 <sprintf@plt+0x6238>
   17ad0:	mov	r0, #4
   17ad4:	mvn	r2, #24
   17ad8:	mov	r3, #23
   17adc:	strb	r0, [sp, #6]
   17ae0:	ldr	r0, [r4, #12]
   17ae4:	add	r1, r0, #64	; 0x40
   17ae8:	vld1.8	{d16-d17}, [r1]
   17aec:	mov	r1, sp
   17af0:	orr	r1, r1, #7
   17af4:	vst1.8	{d16-d17}, [r1]
   17af8:	ldrh	r0, [r0, #58]	; 0x3a
   17afc:	mov	r1, sp
   17b00:	add	r3, r1, r3
   17b04:	strh	r0, [r3]
   17b08:	ldr	r0, [r4, #4]
   17b0c:	bl	1162c <rb_write@plt>
   17b10:	cmp	r0, #1
   17b14:	blt	17b38 <sprintf@plt+0x6278>
   17b18:	ldr	r5, [r4, #4]
   17b1c:	ldr	r4, [r4, #8]
   17b20:	mov	r0, r4
   17b24:	bl	116c8 <strlen@plt>
   17b28:	add	r2, r0, #1
   17b2c:	mov	r0, r5
   17b30:	mov	r1, r4
   17b34:	bl	1162c <rb_write@plt>
   17b38:	sub	sp, fp, #8
   17b3c:	pop	{r4, r5, fp, pc}
   17b40:	push	{r4, r5, r6, sl, fp, lr}
   17b44:	add	fp, sp, #16
   17b48:	sub	sp, sp, #136	; 0x88
   17b4c:	ldr	r3, [r0, #12]
   17b50:	mov	r4, r0
   17b54:	movw	r2, #36656	; 0x8f30
   17b58:	add	r5, sp, #8
   17b5c:	mov	r1, #128	; 0x80
   17b60:	movt	r2, #1
   17b64:	ldrh	r0, [r3, #54]	; 0x36
   17b68:	str	r0, [sp]
   17b6c:	mov	r0, r5
   17b70:	bl	11848 <snprintf@plt>
   17b74:	ldr	r6, [r4, #4]
   17b78:	mov	r0, r5
   17b7c:	bl	116c8 <strlen@plt>
   17b80:	mov	r2, r0
   17b84:	mov	r0, r6
   17b88:	mov	r1, r5
   17b8c:	bl	1162c <rb_write@plt>
   17b90:	cmp	r0, #1
   17b94:	blt	17bd0 <sprintf@plt+0x6310>
   17b98:	ldmib	r4, {r5, r6}
   17b9c:	mov	r0, r6
   17ba0:	bl	116c8 <strlen@plt>
   17ba4:	add	r2, r0, #1
   17ba8:	mov	r0, r5
   17bac:	mov	r1, r6
   17bb0:	bl	1162c <rb_write@plt>
   17bb4:	cmp	r0, #1
   17bb8:	blt	17bd0 <sprintf@plt+0x6310>
   17bbc:	ldr	r0, [r4, #4]
   17bc0:	movw	r1, #36681	; 0x8f49
   17bc4:	mov	r2, #2
   17bc8:	movt	r1, #1
   17bcc:	bl	1162c <rb_write@plt>
   17bd0:	sub	sp, fp, #16
   17bd4:	pop	{r4, r5, r6, sl, fp, pc}
   17bd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17bdc:	add	fp, sp, #28
   17be0:	sub	sp, sp, #284	; 0x11c
   17be4:	mov	sl, r0
   17be8:	movw	r0, #44808	; 0xaf08
   17bec:	movt	r0, #2
   17bf0:	ldr	r4, [r0, #12]
   17bf4:	ldr	r0, [sl, #464]	; 0x1d0
   17bf8:	add	r0, r0, r4, lsl #4
   17bfc:	ldr	r5, [r0, #8]
   17c00:	movw	r0, #44868	; 0xaf44
   17c04:	movt	r0, #2
   17c08:	ldr	r6, [r0]
   17c0c:	bl	116d4 <rb_current_time@plt>
   17c10:	add	r1, r0, r6
   17c14:	ldr	r0, [sl, #464]	; 0x1d0
   17c18:	add	r2, r0, r4, lsl #4
   17c1c:	str	r1, [r2, #4]
   17c20:	mov	r1, #1
   17c24:	strb	r1, [r5, #12]
   17c28:	movw	r1, #61804	; 0xf16c
   17c2c:	movt	r1, #2
   17c30:	ldr	r7, [r1]
   17c34:	cmp	r7, #0
   17c38:	beq	17e74 <sprintf@plt+0x65b4>
   17c3c:	movw	r1, #44808	; 0xaf08
   17c40:	ldr	r9, [r7]
   17c44:	movt	r1, #2
   17c48:	ldr	r1, [r1, #12]
   17c4c:	add	r0, r0, r1, lsl #4
   17c50:	mov	r1, #28
   17c54:	ldr	r4, [r0, #8]
   17c58:	mov	r0, #1
   17c5c:	bl	115d8 <calloc@plt>
   17c60:	cmp	r0, #0
   17c64:	beq	17e70 <sprintf@plt+0x65b0>
   17c68:	mov	r8, r0
   17c6c:	add	r0, sl, #248	; 0xf8
   17c70:	str	sl, [sp, #8]
   17c74:	str	r0, [sp, #16]
   17c78:	movw	r0, #61424	; 0xeff0
   17c7c:	movt	r0, #2
   17c80:	add	r0, r0, #188	; 0xbc
   17c84:	str	r0, [sp, #12]
   17c88:	mov	r0, #1
   17c8c:	movw	r5, #61424	; 0xeff0
   17c90:	str	r0, [sp, #20]
   17c94:	ldr	r0, [sp, #16]
   17c98:	movt	r5, #2
   17c9c:	ldrh	r6, [r0]
   17ca0:	cmp	r6, #10
   17ca4:	bne	17cb8 <sprintf@plt+0x63f8>
   17ca8:	ldr	r0, [r9, #16]
   17cac:	ldr	r5, [sp, #12]
   17cb0:	cmp	r0, #1
   17cb4:	beq	17d74 <sprintf@plt+0x64b4>
   17cb8:	ldr	r0, [r5, #184]	; 0xb8
   17cbc:	cmp	r0, #0
   17cc0:	beq	17d74 <sprintf@plt+0x64b4>
   17cc4:	ldr	r1, [sp, #16]
   17cc8:	add	r0, sp, #152	; 0x98
   17ccc:	mov	r2, #128	; 0x80
   17cd0:	bl	116ec <memcpy@plt>
   17cd4:	add	r1, r5, #56	; 0x38
   17cd8:	add	r0, sp, #24
   17cdc:	mov	r2, #128	; 0x80
   17ce0:	bl	116ec <memcpy@plt>
   17ce4:	mov	r0, r6
   17ce8:	mov	r1, #1
   17cec:	mov	r2, #0
   17cf0:	mov	r3, r9
   17cf4:	str	sl, [r8]
   17cf8:	str	r9, [r8, #8]
   17cfc:	str	r5, [r8, #12]
   17d00:	bl	11590 <rb_socket@plt>
   17d04:	cmp	r0, #0
   17d08:	str	r0, [r8, #4]
   17d0c:	beq	17d80 <sprintf@plt+0x64c0>
   17d10:	mov	sl, r0
   17d14:	bl	1156c <rb_get_fd@plt>
   17d18:	mov	r1, #4
   17d1c:	mov	r2, #1
   17d20:	add	r3, sp, #20
   17d24:	str	r1, [sp]
   17d28:	mov	r1, #6
   17d2c:	bl	11878 <setsockopt@plt>
   17d30:	mov	r1, #0
   17d34:	cmp	r4, #0
   17d38:	strh	r1, [sp, #26]
   17d3c:	ldrh	r0, [r9, #20]
   17d40:	rev16	r0, r0
   17d44:	strh	r0, [sp, #154]	; 0x9a
   17d48:	beq	17e8c <sprintf@plt+0x65cc>
   17d4c:	str	r1, [r8, #20]
   17d50:	str	r8, [r8, #16]
   17d54:	add	r0, r8, #16
   17d58:	ldr	r1, [r4]
   17d5c:	cmp	r1, #0
   17d60:	str	r1, [r8, #24]
   17d64:	beq	17db0 <sprintf@plt+0x64f0>
   17d68:	add	r1, r1, #4
   17d6c:	str	r0, [r1]
   17d70:	b	17dc0 <sprintf@plt+0x6500>
   17d74:	mov	r0, r8
   17d78:	bl	11674 <free@plt>
   17d7c:	b	17e30 <sprintf@plt+0x6570>
   17d80:	bl	118b4 <__errno_location@plt>
   17d84:	ldr	r0, [r0]
   17d88:	bl	114dc <strerror@plt>
   17d8c:	movw	r1, #36879	; 0x900f
   17d90:	mov	r3, r0
   17d94:	mov	r0, #87	; 0x57
   17d98:	mov	r2, r9
   17d9c:	movt	r1, #1
   17da0:	bl	123d0 <sprintf@plt+0xb10>
   17da4:	mov	r0, r8
   17da8:	bl	11674 <free@plt>
   17dac:	b	17e2c <sprintf@plt+0x656c>
   17db0:	mov	r1, r4
   17db4:	ldr	r2, [r1, #4]!
   17db8:	cmp	r2, #0
   17dbc:	streq	r0, [r1]
   17dc0:	str	r0, [r4]
   17dc4:	ldr	r0, [r4, #8]
   17dc8:	add	r0, r0, #1
   17dcc:	str	r0, [r4, #8]
   17dd0:	movw	r0, #44868	; 0xaf44
   17dd4:	movt	r0, #2
   17dd8:	ldrb	r1, [r9, #22]
   17ddc:	ldr	r0, [r0]
   17de0:	cmp	r1, #0
   17de4:	beq	17e0c <sprintf@plt+0x654c>
   17de8:	movw	r3, #32428	; 0x7eac
   17dec:	str	r0, [sp, #4]
   17df0:	mov	r0, sl
   17df4:	add	r1, sp, #152	; 0x98
   17df8:	add	r2, sp, #24
   17dfc:	str	r8, [sp]
   17e00:	movt	r3, #1
   17e04:	bl	11524 <rb_connect_tcp_ssl@plt>
   17e08:	b	17e2c <sprintf@plt+0x656c>
   17e0c:	movw	r3, #32428	; 0x7eac
   17e10:	str	r0, [sp, #4]
   17e14:	mov	r0, sl
   17e18:	add	r1, sp, #152	; 0x98
   17e1c:	add	r2, sp, #24
   17e20:	str	r8, [sp]
   17e24:	movt	r3, #1
   17e28:	bl	11530 <rb_connect_tcp@plt>
   17e2c:	ldr	sl, [sp, #8]
   17e30:	ldr	r7, [r7, #8]
   17e34:	cmp	r7, #0
   17e38:	beq	17e74 <sprintf@plt+0x65b4>
   17e3c:	movw	r0, #44808	; 0xaf08
   17e40:	ldr	r1, [sl, #464]	; 0x1d0
   17e44:	ldr	r9, [r7]
   17e48:	movt	r0, #2
   17e4c:	ldr	r0, [r0, #12]
   17e50:	add	r0, r1, r0, lsl #4
   17e54:	mov	r1, #28
   17e58:	ldr	r4, [r0, #8]
   17e5c:	mov	r0, #1
   17e60:	bl	115d8 <calloc@plt>
   17e64:	mov	r8, r0
   17e68:	cmp	r0, #0
   17e6c:	bne	17c88 <sprintf@plt+0x63c8>
   17e70:	bl	11788 <rb_outofmemory@plt>
   17e74:	ldr	r0, [sl]
   17e78:	movw	r1, #36846	; 0x8fee
   17e7c:	movt	r1, #1
   17e80:	bl	12364 <sprintf@plt+0xaa4>
   17e84:	sub	sp, fp, #28
   17e88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e8c:	movw	r0, #36684	; 0x8f4c
   17e90:	movw	r1, #34082	; 0x8522
   17e94:	movw	r3, #34177	; 0x8581
   17e98:	mov	r2, #145	; 0x91
   17e9c:	movt	r0, #1
   17ea0:	movt	r1, #1
   17ea4:	movt	r3, #1
   17ea8:	bl	11638 <__assert_fail@plt>
   17eac:	push	{r4, r5, fp, lr}
   17eb0:	add	fp, sp, #8
   17eb4:	mov	r4, r2
   17eb8:	ldr	r2, [r2]
   17ebc:	movw	r0, #44808	; 0xaf08
   17ec0:	cmp	r1, #0
   17ec4:	movt	r0, #2
   17ec8:	ldr	r0, [r0, #12]
   17ecc:	ldr	r3, [r2, #464]	; 0x1d0
   17ed0:	add	r0, r3, r0, lsl #4
   17ed4:	ldr	r5, [r0, #8]
   17ed8:	bne	17f44 <sprintf@plt+0x6684>
   17edc:	movw	r0, #61800	; 0xf168
   17ee0:	movt	r0, #2
   17ee4:	ldrb	r0, [r0]
   17ee8:	cmp	r0, #0
   17eec:	beq	17f44 <sprintf@plt+0x6684>
   17ef0:	ldrh	r1, [r2, #248]	; 0xf8
   17ef4:	ldr	r0, [r4, #8]
   17ef8:	cmp	r1, #10
   17efc:	beq	17f18 <sprintf@plt+0x6658>
   17f00:	cmp	r1, #2
   17f04:	bne	17f44 <sprintf@plt+0x6684>
   17f08:	movw	r1, #61424	; 0xeff0
   17f0c:	movt	r1, #2
   17f10:	ldr	r1, [r1, #184]	; 0xb8
   17f14:	b	17f30 <sprintf@plt+0x6670>
   17f18:	ldrb	r1, [r0, #23]
   17f1c:	cmp	r1, #0
   17f20:	beq	17f44 <sprintf@plt+0x6684>
   17f24:	movw	r1, #61424	; 0xeff0
   17f28:	movt	r1, #2
   17f2c:	ldr	r1, [r1, #372]	; 0x174
   17f30:	cmp	r1, #0
   17f34:	beq	17f44 <sprintf@plt+0x6684>
   17f38:	ldr	r1, [r0, #24]
   17f3c:	mov	r0, r4
   17f40:	blx	r1
   17f44:	ldr	r0, [r4, #4]
   17f48:	bl	11704 <rb_close@plt>
   17f4c:	cmp	r5, #0
   17f50:	beq	17fa0 <sprintf@plt+0x66e0>
   17f54:	ldr	r0, [r4, #24]
   17f58:	ldr	r1, [r4, #20]
   17f5c:	mov	r2, r5
   17f60:	cmp	r0, #0
   17f64:	streq	r1, [r5, #4]
   17f68:	strne	r1, [r0, #4]
   17f6c:	ldrne	r1, [r4, #20]
   17f70:	cmp	r1, #0
   17f74:	addne	r2, r1, #8
   17f78:	str	r0, [r2]
   17f7c:	mov	r0, #0
   17f80:	str	r0, [r4, #20]
   17f84:	str	r0, [r4, #24]
   17f88:	ldr	r0, [r5, #8]
   17f8c:	sub	r0, r0, #1
   17f90:	str	r0, [r5, #8]
   17f94:	mov	r0, r4
   17f98:	pop	{r4, r5, fp, lr}
   17f9c:	b	11674 <free@plt>
   17fa0:	movw	r0, #36684	; 0x8f4c
   17fa4:	movw	r1, #34082	; 0x8522
   17fa8:	movw	r3, #34110	; 0x853e
   17fac:	mov	r2, #236	; 0xec
   17fb0:	movt	r0, #1
   17fb4:	movt	r1, #1
   17fb8:	movt	r3, #1
   17fbc:	bl	11638 <__assert_fail@plt>
   17fc0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17fc4:	mov	r7, r0
   17fc8:	ldr	r6, [pc, #72]	; 18018 <sprintf@plt+0x6758>
   17fcc:	ldr	r5, [pc, #72]	; 1801c <sprintf@plt+0x675c>
   17fd0:	add	r6, pc, r6
   17fd4:	add	r5, pc, r5
   17fd8:	sub	r6, r6, r5
   17fdc:	mov	r8, r1
   17fe0:	mov	r9, r2
   17fe4:	bl	114b0 <sigemptyset@plt-0x20>
   17fe8:	asrs	r6, r6, #2
   17fec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17ff0:	mov	r4, #0
   17ff4:	add	r4, r4, #1
   17ff8:	ldr	r3, [r5], #4
   17ffc:	mov	r2, r9
   18000:	mov	r1, r8
   18004:	mov	r0, r7
   18008:	blx	r3
   1800c:	cmp	r6, r4
   18010:	bne	17ff4 <sprintf@plt+0x6734>
   18014:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18018:	andeq	r1, r1, ip, lsl #30
   1801c:	andeq	r1, r1, r4, lsl #30
   18020:	bx	lr

Disassembly of section .fini:

00018024 <.fini>:
   18024:	push	{r3, lr}
   18028:	pop	{r3, pc}
