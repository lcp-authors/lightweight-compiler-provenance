
../repos/coreutils/src/sync:     file format elf32-littlearm


Disassembly of section .init:

00010bbc <.init>:
   10bbc:	push	{r3, lr}
   10bc0:	bl	10e64 <close@plt+0x48>
   10bc4:	pop	{r3, pc}

Disassembly of section .plt:

00010bc8 <calloc@plt-0x14>:
   10bc8:	push	{lr}		; (str lr, [sp, #-4]!)
   10bcc:	ldr	lr, [pc, #4]	; 10bd8 <calloc@plt-0x4>
   10bd0:	add	lr, pc, lr
   10bd4:	ldr	pc, [lr, #8]!
   10bd8:	andeq	r5, r1, r8, lsr #8

00010bdc <calloc@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #86016	; 0x15000
   10be4:	ldr	pc, [ip, #1064]!	; 0x428

00010be8 <fputs_unlocked@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #86016	; 0x15000
   10bf0:	ldr	pc, [ip, #1056]!	; 0x420

00010bf4 <fsync@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #86016	; 0x15000
   10bfc:	ldr	pc, [ip, #1048]!	; 0x418

00010c00 <strcmp@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #86016	; 0x15000
   10c08:	ldr	pc, [ip, #1040]!	; 0x410

00010c0c <fflush@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #86016	; 0x15000
   10c14:	ldr	pc, [ip, #1032]!	; 0x408

00010c18 <free@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #86016	; 0x15000
   10c20:	ldr	pc, [ip, #1024]!	; 0x400

00010c24 <_exit@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #86016	; 0x15000
   10c2c:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c30 <memcpy@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #86016	; 0x15000
   10c38:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c3c <mbsinit@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #86016	; 0x15000
   10c44:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c48 <memcmp@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #86016	; 0x15000
   10c50:	ldr	pc, [ip, #992]!	; 0x3e0

00010c54 <fputc_unlocked@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #86016	; 0x15000
   10c5c:	ldr	pc, [ip, #984]!	; 0x3d8

00010c60 <dcgettext@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #86016	; 0x15000
   10c68:	ldr	pc, [ip, #976]!	; 0x3d0

00010c6c <syncfs@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #86016	; 0x15000
   10c74:	ldr	pc, [ip, #968]!	; 0x3c8

00010c78 <realloc@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #86016	; 0x15000
   10c80:	ldr	pc, [ip, #960]!	; 0x3c0

00010c84 <textdomain@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #86016	; 0x15000
   10c8c:	ldr	pc, [ip, #952]!	; 0x3b8

00010c90 <iswprint@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #86016	; 0x15000
   10c98:	ldr	pc, [ip, #944]!	; 0x3b0

00010c9c <fwrite@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #86016	; 0x15000
   10ca4:	ldr	pc, [ip, #936]!	; 0x3a8

00010ca8 <lseek64@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #86016	; 0x15000
   10cb0:	ldr	pc, [ip, #928]!	; 0x3a0

00010cb4 <__ctype_get_mb_cur_max@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #86016	; 0x15000
   10cbc:	ldr	pc, [ip, #920]!	; 0x398

00010cc0 <__fpending@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #86016	; 0x15000
   10cc8:	ldr	pc, [ip, #912]!	; 0x390

00010ccc <mbrtowc@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #86016	; 0x15000
   10cd4:	ldr	pc, [ip, #904]!	; 0x388

00010cd8 <error@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #86016	; 0x15000
   10ce0:	ldr	pc, [ip, #896]!	; 0x380

00010ce4 <open64@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #86016	; 0x15000
   10cec:	ldr	pc, [ip, #888]!	; 0x378

00010cf0 <malloc@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #86016	; 0x15000
   10cf8:	ldr	pc, [ip, #880]!	; 0x370

00010cfc <__libc_start_main@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #86016	; 0x15000
   10d04:	ldr	pc, [ip, #872]!	; 0x368

00010d08 <__freading@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #86016	; 0x15000
   10d10:	ldr	pc, [ip, #864]!	; 0x360

00010d14 <__gmon_start__@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #86016	; 0x15000
   10d1c:	ldr	pc, [ip, #856]!	; 0x358

00010d20 <getopt_long@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #86016	; 0x15000
   10d28:	ldr	pc, [ip, #848]!	; 0x350

00010d2c <__ctype_b_loc@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #86016	; 0x15000
   10d34:	ldr	pc, [ip, #840]!	; 0x348

00010d38 <exit@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #86016	; 0x15000
   10d40:	ldr	pc, [ip, #832]!	; 0x340

00010d44 <strlen@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #86016	; 0x15000
   10d4c:	ldr	pc, [ip, #824]!	; 0x338

00010d50 <__errno_location@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #86016	; 0x15000
   10d58:	ldr	pc, [ip, #816]!	; 0x330

00010d5c <__cxa_atexit@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #86016	; 0x15000
   10d64:	ldr	pc, [ip, #808]!	; 0x328

00010d68 <memset@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #86016	; 0x15000
   10d70:	ldr	pc, [ip, #800]!	; 0x320

00010d74 <__printf_chk@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #86016	; 0x15000
   10d7c:	ldr	pc, [ip, #792]!	; 0x318

00010d80 <fileno@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #86016	; 0x15000
   10d88:	ldr	pc, [ip, #784]!	; 0x310

00010d8c <__fprintf_chk@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #86016	; 0x15000
   10d94:	ldr	pc, [ip, #776]!	; 0x308

00010d98 <fclose@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #86016	; 0x15000
   10da0:	ldr	pc, [ip, #768]!	; 0x300

00010da4 <fseeko64@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #86016	; 0x15000
   10dac:	ldr	pc, [ip, #760]!	; 0x2f8

00010db0 <fcntl64@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #86016	; 0x15000
   10db8:	ldr	pc, [ip, #752]!	; 0x2f0

00010dbc <setlocale@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #86016	; 0x15000
   10dc4:	ldr	pc, [ip, #744]!	; 0x2e8

00010dc8 <strrchr@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #86016	; 0x15000
   10dd0:	ldr	pc, [ip, #736]!	; 0x2e0

00010dd4 <nl_langinfo@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #86016	; 0x15000
   10ddc:	ldr	pc, [ip, #728]!	; 0x2d8

00010de0 <bindtextdomain@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #86016	; 0x15000
   10de8:	ldr	pc, [ip, #720]!	; 0x2d0

00010dec <sync@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #86016	; 0x15000
   10df4:	ldr	pc, [ip, #712]!	; 0x2c8

00010df8 <strncmp@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #86016	; 0x15000
   10e00:	ldr	pc, [ip, #704]!	; 0x2c0

00010e04 <fdatasync@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #86016	; 0x15000
   10e0c:	ldr	pc, [ip, #696]!	; 0x2b8

00010e10 <abort@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #86016	; 0x15000
   10e18:	ldr	pc, [ip, #688]!	; 0x2b0

00010e1c <close@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #86016	; 0x15000
   10e24:	ldr	pc, [ip, #680]!	; 0x2a8

Disassembly of section .text:

00010e28 <.text>:
   10e28:	mov	fp, #0
   10e2c:	mov	lr, #0
   10e30:	pop	{r1}		; (ldr r1, [sp], #4)
   10e34:	mov	r2, sp
   10e38:	push	{r2}		; (str r2, [sp, #-4]!)
   10e3c:	push	{r0}		; (str r0, [sp, #-4]!)
   10e40:	ldr	ip, [pc, #16]	; 10e58 <close@plt+0x3c>
   10e44:	push	{ip}		; (str ip, [sp, #-4]!)
   10e48:	ldr	r0, [pc, #12]	; 10e5c <close@plt+0x40>
   10e4c:	ldr	r3, [pc, #12]	; 10e60 <close@plt+0x44>
   10e50:	bl	10cfc <__libc_start_main@plt>
   10e54:	bl	10e10 <abort@plt>
   10e58:	andeq	r4, r1, r0, asr #28
   10e5c:	andeq	r1, r1, r0, asr #5
   10e60:	andeq	r4, r1, r0, ror #27
   10e64:	ldr	r3, [pc, #20]	; 10e80 <close@plt+0x64>
   10e68:	ldr	r2, [pc, #20]	; 10e84 <close@plt+0x68>
   10e6c:	add	r3, pc, r3
   10e70:	ldr	r2, [r3, r2]
   10e74:	cmp	r2, #0
   10e78:	bxeq	lr
   10e7c:	b	10d14 <__gmon_start__@plt>
   10e80:	andeq	r5, r1, ip, lsl #3
   10e84:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10e88:	ldr	r0, [pc, #24]	; 10ea8 <close@plt+0x8c>
   10e8c:	ldr	r3, [pc, #24]	; 10eac <close@plt+0x90>
   10e90:	cmp	r3, r0
   10e94:	bxeq	lr
   10e98:	ldr	r3, [pc, #16]	; 10eb0 <close@plt+0x94>
   10e9c:	cmp	r3, #0
   10ea0:	bxeq	lr
   10ea4:	bx	r3
   10ea8:	andeq	r6, r2, r4, lsr #2
   10eac:	andeq	r6, r2, r4, lsr #2
   10eb0:	andeq	r0, r0, r0
   10eb4:	ldr	r0, [pc, #36]	; 10ee0 <close@plt+0xc4>
   10eb8:	ldr	r1, [pc, #36]	; 10ee4 <close@plt+0xc8>
   10ebc:	sub	r1, r1, r0
   10ec0:	asr	r1, r1, #2
   10ec4:	add	r1, r1, r1, lsr #31
   10ec8:	asrs	r1, r1, #1
   10ecc:	bxeq	lr
   10ed0:	ldr	r3, [pc, #16]	; 10ee8 <close@plt+0xcc>
   10ed4:	cmp	r3, #0
   10ed8:	bxeq	lr
   10edc:	bx	r3
   10ee0:	andeq	r6, r2, r4, lsr #2
   10ee4:	andeq	r6, r2, r4, lsr #2
   10ee8:	andeq	r0, r0, r0
   10eec:	push	{r4, lr}
   10ef0:	ldr	r4, [pc, #24]	; 10f10 <close@plt+0xf4>
   10ef4:	ldrb	r3, [r4]
   10ef8:	cmp	r3, #0
   10efc:	popne	{r4, pc}
   10f00:	bl	10e88 <close@plt+0x6c>
   10f04:	mov	r3, #1
   10f08:	strb	r3, [r4]
   10f0c:	pop	{r4, pc}
   10f10:	andeq	r6, r2, r0, asr #2
   10f14:	b	10eb4 <close@plt+0x98>
   10f18:	push	{lr}		; (str lr, [sp, #-4]!)
   10f1c:	sub	sp, sp, #60	; 0x3c
   10f20:	subs	r4, r0, #0
   10f24:	beq	10f6c <close@plt+0x150>
   10f28:	movw	r3, #24888	; 0x6138
   10f2c:	movt	r3, #2
   10f30:	ldr	r5, [r3]
   10f34:	mov	r2, #5
   10f38:	movw	r1, #20216	; 0x4ef8
   10f3c:	movt	r1, #1
   10f40:	mov	r0, #0
   10f44:	bl	10c60 <dcgettext@plt>
   10f48:	movw	r3, #24912	; 0x6150
   10f4c:	movt	r3, #2
   10f50:	ldr	r3, [r3]
   10f54:	mov	r2, r0
   10f58:	mov	r1, #1
   10f5c:	mov	r0, r5
   10f60:	bl	10d8c <__fprintf_chk@plt>
   10f64:	mov	r0, r4
   10f68:	bl	10d38 <exit@plt>
   10f6c:	mov	r2, #5
   10f70:	movw	r1, #20256	; 0x4f20
   10f74:	movt	r1, #1
   10f78:	mov	r0, #0
   10f7c:	bl	10c60 <dcgettext@plt>
   10f80:	movw	r3, #24912	; 0x6150
   10f84:	movt	r3, #2
   10f88:	ldr	r2, [r3]
   10f8c:	mov	r1, r0
   10f90:	mov	r0, #1
   10f94:	bl	10d74 <__printf_chk@plt>
   10f98:	mov	r2, #5
   10f9c:	movw	r1, #20288	; 0x4f40
   10fa0:	movt	r1, #1
   10fa4:	mov	r0, #0
   10fa8:	bl	10c60 <dcgettext@plt>
   10fac:	movw	r5, #24892	; 0x613c
   10fb0:	movt	r5, #2
   10fb4:	ldr	r1, [r5]
   10fb8:	bl	10be8 <fputs_unlocked@plt>
   10fbc:	mov	r2, #5
   10fc0:	movw	r1, #20428	; 0x4fcc
   10fc4:	movt	r1, #1
   10fc8:	mov	r0, #0
   10fcc:	bl	10c60 <dcgettext@plt>
   10fd0:	ldr	r1, [r5]
   10fd4:	bl	10be8 <fputs_unlocked@plt>
   10fd8:	mov	r2, #5
   10fdc:	movw	r1, #20496	; 0x5010
   10fe0:	movt	r1, #1
   10fe4:	mov	r0, #0
   10fe8:	bl	10c60 <dcgettext@plt>
   10fec:	ldr	r1, [r5]
   10ff0:	bl	10be8 <fputs_unlocked@plt>
   10ff4:	mov	r2, #5
   10ff8:	movw	r1, #20568	; 0x5058
   10ffc:	movt	r1, #1
   11000:	mov	r0, #0
   11004:	bl	10c60 <dcgettext@plt>
   11008:	ldr	r1, [r5]
   1100c:	bl	10be8 <fputs_unlocked@plt>
   11010:	mov	r2, #5
   11014:	movw	r1, #20616	; 0x5088
   11018:	movt	r1, #1
   1101c:	mov	r0, #0
   11020:	bl	10c60 <dcgettext@plt>
   11024:	ldr	r1, [r5]
   11028:	bl	10be8 <fputs_unlocked@plt>
   1102c:	movw	r0, #20072	; 0x4e68
   11030:	movt	r0, #1
   11034:	ldr	r1, [r0]
   11038:	ldr	r3, [r0, #4]
   1103c:	str	r1, [sp]
   11040:	str	r3, [sp, #4]
   11044:	ldrd	r2, [r0, #8]
   11048:	strd	r2, [sp, #8]
   1104c:	ldrd	r2, [r0, #16]
   11050:	strd	r2, [sp, #16]
   11054:	ldrd	r2, [r0, #24]
   11058:	strd	r2, [sp, #24]
   1105c:	ldrd	r2, [r0, #32]
   11060:	strd	r2, [sp, #32]
   11064:	ldrd	r2, [r0, #40]	; 0x28
   11068:	strd	r2, [sp, #40]	; 0x28
   1106c:	ldrd	r2, [r0, #48]	; 0x30
   11070:	strd	r2, [sp, #48]	; 0x30
   11074:	cmp	r1, #0
   11078:	moveq	r5, sp
   1107c:	beq	110a8 <close@plt+0x28c>
   11080:	mov	r5, sp
   11084:	movw	r6, #20208	; 0x4ef0
   11088:	movt	r6, #1
   1108c:	mov	r0, r6
   11090:	bl	10c00 <strcmp@plt>
   11094:	cmp	r0, #0
   11098:	beq	110a8 <close@plt+0x28c>
   1109c:	ldr	r1, [r5, #8]!
   110a0:	cmp	r1, #0
   110a4:	bne	1108c <close@plt+0x270>
   110a8:	ldr	r5, [r5, #4]
   110ac:	cmp	r5, #0
   110b0:	beq	1120c <close@plt+0x3f0>
   110b4:	mov	r2, #5
   110b8:	movw	r1, #20672	; 0x50c0
   110bc:	movt	r1, #1
   110c0:	mov	r0, #0
   110c4:	bl	10c60 <dcgettext@plt>
   110c8:	movw	r3, #20696	; 0x50d8
   110cc:	movt	r3, #1
   110d0:	movw	r2, #20736	; 0x5100
   110d4:	movt	r2, #1
   110d8:	mov	r1, r0
   110dc:	mov	r0, #1
   110e0:	bl	10d74 <__printf_chk@plt>
   110e4:	mov	r1, #0
   110e8:	mov	r0, #5
   110ec:	bl	10dbc <setlocale@plt>
   110f0:	cmp	r0, #0
   110f4:	beq	11110 <close@plt+0x2f4>
   110f8:	mov	r2, #3
   110fc:	movw	r1, #20752	; 0x5110
   11100:	movt	r1, #1
   11104:	bl	10df8 <strncmp@plt>
   11108:	cmp	r0, #0
   1110c:	bne	1118c <close@plt+0x370>
   11110:	mov	r2, #5
   11114:	movw	r1, #20828	; 0x515c
   11118:	movt	r1, #1
   1111c:	mov	r0, #0
   11120:	bl	10c60 <dcgettext@plt>
   11124:	movw	r6, #20208	; 0x4ef0
   11128:	movt	r6, #1
   1112c:	mov	r3, r6
   11130:	movw	r2, #20696	; 0x50d8
   11134:	movt	r2, #1
   11138:	mov	r1, r0
   1113c:	mov	r0, #1
   11140:	bl	10d74 <__printf_chk@plt>
   11144:	mov	r2, #5
   11148:	movw	r1, #20856	; 0x5178
   1114c:	movt	r1, #1
   11150:	mov	r0, #0
   11154:	bl	10c60 <dcgettext@plt>
   11158:	mov	r1, r0
   1115c:	movw	r2, #21160	; 0x52a8
   11160:	movt	r2, #1
   11164:	movw	r3, #20424	; 0x4fc8
   11168:	movt	r3, #1
   1116c:	cmp	r5, r6
   11170:	moveq	r3, r2
   11174:	mov	r2, r5
   11178:	mov	r0, #1
   1117c:	bl	10d74 <__printf_chk@plt>
   11180:	b	10f64 <close@plt+0x148>
   11184:	movw	r5, #20208	; 0x4ef0
   11188:	movt	r5, #1
   1118c:	mov	r2, #5
   11190:	movw	r1, #20756	; 0x5114
   11194:	movt	r1, #1
   11198:	mov	r0, #0
   1119c:	bl	10c60 <dcgettext@plt>
   111a0:	movw	r3, #24892	; 0x613c
   111a4:	movt	r3, #2
   111a8:	ldr	r1, [r3]
   111ac:	bl	10be8 <fputs_unlocked@plt>
   111b0:	b	11110 <close@plt+0x2f4>
   111b4:	mov	r2, #5
   111b8:	movw	r1, #20828	; 0x515c
   111bc:	movt	r1, #1
   111c0:	mov	r0, #0
   111c4:	bl	10c60 <dcgettext@plt>
   111c8:	movw	r5, #20208	; 0x4ef0
   111cc:	movt	r5, #1
   111d0:	mov	r3, r5
   111d4:	movw	r2, #20696	; 0x50d8
   111d8:	movt	r2, #1
   111dc:	mov	r1, r0
   111e0:	mov	r0, #1
   111e4:	bl	10d74 <__printf_chk@plt>
   111e8:	mov	r2, #5
   111ec:	movw	r1, #20856	; 0x5178
   111f0:	movt	r1, #1
   111f4:	mov	r0, #0
   111f8:	bl	10c60 <dcgettext@plt>
   111fc:	mov	r1, r0
   11200:	movw	r3, #21160	; 0x52a8
   11204:	movt	r3, #1
   11208:	b	11174 <close@plt+0x358>
   1120c:	mov	r2, #5
   11210:	movw	r1, #20672	; 0x50c0
   11214:	movt	r1, #1
   11218:	mov	r0, #0
   1121c:	bl	10c60 <dcgettext@plt>
   11220:	movw	r3, #20696	; 0x50d8
   11224:	movt	r3, #1
   11228:	movw	r2, #20736	; 0x5100
   1122c:	movt	r2, #1
   11230:	mov	r1, r0
   11234:	mov	r0, #1
   11238:	bl	10d74 <__printf_chk@plt>
   1123c:	mov	r1, #0
   11240:	mov	r0, #5
   11244:	bl	10dbc <setlocale@plt>
   11248:	cmp	r0, #0
   1124c:	beq	111b4 <close@plt+0x398>
   11250:	mov	r2, #3
   11254:	movw	r1, #20752	; 0x5110
   11258:	movt	r1, #1
   1125c:	bl	10df8 <strncmp@plt>
   11260:	cmp	r0, #0
   11264:	bne	11184 <close@plt+0x368>
   11268:	mov	r2, #5
   1126c:	movw	r1, #20828	; 0x515c
   11270:	movt	r1, #1
   11274:	mov	r0, #0
   11278:	bl	10c60 <dcgettext@plt>
   1127c:	movw	r5, #20208	; 0x4ef0
   11280:	movt	r5, #1
   11284:	mov	r3, r5
   11288:	movw	r2, #20696	; 0x50d8
   1128c:	movt	r2, #1
   11290:	mov	r1, r0
   11294:	mov	r0, #1
   11298:	bl	10d74 <__printf_chk@plt>
   1129c:	mov	r2, #5
   112a0:	movw	r1, #20856	; 0x5178
   112a4:	movt	r1, #1
   112a8:	mov	r0, #0
   112ac:	bl	10c60 <dcgettext@plt>
   112b0:	mov	r1, r0
   112b4:	movw	r3, #21160	; 0x52a8
   112b8:	movt	r3, #1
   112bc:	b	11174 <close@plt+0x358>
   112c0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   112c4:	strd	r6, [sp, #8]
   112c8:	strd	r8, [sp, #16]
   112cc:	strd	sl, [sp, #24]
   112d0:	str	lr, [sp, #32]
   112d4:	sub	sp, sp, #36	; 0x24
   112d8:	mov	r5, r0
   112dc:	mov	r4, r1
   112e0:	ldr	r0, [r1]
   112e4:	bl	11a48 <close@plt+0xc2c>
   112e8:	movw	r1, #20424	; 0x4fc8
   112ec:	movt	r1, #1
   112f0:	mov	r0, #6
   112f4:	bl	10dbc <setlocale@plt>
   112f8:	movw	r6, #20740	; 0x5104
   112fc:	movt	r6, #1
   11300:	movw	r1, #20908	; 0x51ac
   11304:	movt	r1, #1
   11308:	mov	r0, r6
   1130c:	bl	10de0 <bindtextdomain@plt>
   11310:	mov	r0, r6
   11314:	bl	10c84 <textdomain@plt>
   11318:	movw	r0, #5836	; 0x16cc
   1131c:	movt	r0, #1
   11320:	bl	14e44 <close@plt+0x4028>
   11324:	mov	r8, #0
   11328:	mov	r6, r8
   1132c:	ldr	sl, [pc, #884]	; 116a8 <close@plt+0x88c>
   11330:	movw	r7, #20968	; 0x51e8
   11334:	movt	r7, #1
   11338:	mov	r9, r8
   1133c:	b	113a8 <close@plt+0x58c>
   11340:	cmn	r0, #3
   11344:	bne	113ec <close@plt+0x5d0>
   11348:	movw	r3, #24796	; 0x60dc
   1134c:	movt	r3, #2
   11350:	movw	r0, #24892	; 0x613c
   11354:	movt	r0, #2
   11358:	mov	r4, #0
   1135c:	str	r4, [sp, #8]
   11360:	movw	r2, #20932	; 0x51c4
   11364:	movt	r2, #1
   11368:	str	r2, [sp, #4]
   1136c:	movw	r2, #20952	; 0x51d8
   11370:	movt	r2, #1
   11374:	str	r2, [sp]
   11378:	ldr	r3, [r3]
   1137c:	movw	r2, #20736	; 0x5100
   11380:	movt	r2, #1
   11384:	movw	r1, #20208	; 0x4ef0
   11388:	movt	r1, #1
   1138c:	ldr	r0, [r0]
   11390:	bl	14240 <close@plt+0x3424>
   11394:	mov	r0, r4
   11398:	bl	10d38 <exit@plt>
   1139c:	cmp	r0, #102	; 0x66
   113a0:	bne	113ec <close@plt+0x5d0>
   113a4:	mov	r8, #1
   113a8:	str	r9, [sp]
   113ac:	mov	r3, sl
   113b0:	mov	r2, r7
   113b4:	mov	r1, r4
   113b8:	mov	r0, r5
   113bc:	bl	10d20 <getopt_long@plt>
   113c0:	cmn	r0, #1
   113c4:	beq	113f4 <close@plt+0x5d8>
   113c8:	cmn	r0, #2
   113cc:	beq	113e4 <close@plt+0x5c8>
   113d0:	ble	11340 <close@plt+0x524>
   113d4:	cmp	r0, #100	; 0x64
   113d8:	bne	1139c <close@plt+0x580>
   113dc:	mov	r6, #1
   113e0:	b	113a8 <close@plt+0x58c>
   113e4:	mov	r0, #0
   113e8:	bl	10f18 <close@plt+0xfc>
   113ec:	mov	r0, #1
   113f0:	bl	10f18 <close@plt+0xfc>
   113f4:	movw	r3, #24880	; 0x6130
   113f8:	movt	r3, #2
   113fc:	ldr	r3, [r3]
   11400:	tst	r6, r8
   11404:	bne	11458 <close@plt+0x63c>
   11408:	cmp	r3, r5
   1140c:	movlt	fp, #0
   11410:	andge	fp, r6, #1
   11414:	cmp	fp, #0
   11418:	bne	1147c <close@plt+0x660>
   1141c:	cmp	r3, r5
   11420:	bge	114a0 <close@plt+0x684>
   11424:	cmp	r8, #0
   11428:	movne	r6, #2
   1142c:	mov	r9, #1
   11430:	movw	r2, #21132	; 0x528c
   11434:	movt	r2, #1
   11438:	str	r2, [sp, #24]
   1143c:	movw	r2, #21076	; 0x5254
   11440:	movt	r2, #1
   11444:	str	r2, [sp, #20]
   11448:	movw	r2, #21112	; 0x5278
   1144c:	movt	r2, #1
   11450:	str	r2, [sp, #28]
   11454:	b	11594 <close@plt+0x778>
   11458:	mov	r2, #5
   1145c:	movw	r1, #20972	; 0x51ec
   11460:	movt	r1, #1
   11464:	mov	r0, #0
   11468:	bl	10c60 <dcgettext@plt>
   1146c:	mov	r2, r0
   11470:	mov	r1, #0
   11474:	mov	r0, #1
   11478:	bl	10cd8 <error@plt>
   1147c:	mov	r2, #5
   11480:	movw	r1, #21020	; 0x521c
   11484:	movt	r1, #1
   11488:	mov	r0, #0
   1148c:	bl	10c60 <dcgettext@plt>
   11490:	mov	r2, r0
   11494:	mov	r1, #0
   11498:	mov	r0, #1
   1149c:	bl	10cd8 <error@plt>
   114a0:	bl	10dec <sync@plt>
   114a4:	mov	r9, #1
   114a8:	eor	r0, r9, #1
   114ac:	add	sp, sp, #36	; 0x24
   114b0:	ldrd	r4, [sp]
   114b4:	ldrd	r6, [sp, #8]
   114b8:	ldrd	r8, [sp, #16]
   114bc:	ldrd	sl, [sp, #24]
   114c0:	add	sp, sp, #32
   114c4:	pop	{pc}		; (ldr pc, [sp], #4)
   114c8:	bl	10d50 <__errno_location@plt>
   114cc:	ldr	sl, [r0]
   114d0:	movw	r1, #2049	; 0x801
   114d4:	mov	r0, r8
   114d8:	bl	10ce4 <open64@plt>
   114dc:	subs	r7, r0, #0
   114e0:	bge	115ac <close@plt+0x790>
   114e4:	mov	r2, #5
   114e8:	movw	r1, #21056	; 0x5240
   114ec:	movt	r1, #1
   114f0:	mov	r0, #0
   114f4:	bl	10c60 <dcgettext@plt>
   114f8:	mov	r7, r0
   114fc:	mov	r1, r8
   11500:	mov	r0, #4
   11504:	bl	13a54 <close@plt+0x2c38>
   11508:	mov	r3, r0
   1150c:	mov	r2, r7
   11510:	mov	r1, sl
   11514:	mov	r0, #0
   11518:	bl	10cd8 <error@plt>
   1151c:	mov	sl, fp
   11520:	b	11574 <close@plt+0x758>
   11524:	bl	10d50 <__errno_location@plt>
   11528:	ldr	sl, [r0]
   1152c:	mov	r2, #5
   11530:	ldr	r1, [sp, #20]
   11534:	mov	r0, #0
   11538:	bl	10c60 <dcgettext@plt>
   1153c:	str	r0, [sp, #16]
   11540:	mov	r1, r8
   11544:	mov	r0, #4
   11548:	bl	13a54 <close@plt+0x2c38>
   1154c:	mov	r3, r0
   11550:	ldr	r2, [sp, #16]
   11554:	mov	r1, sl
   11558:	mov	r0, #0
   1155c:	bl	10cd8 <error@plt>
   11560:	mov	sl, fp
   11564:	mov	r0, r7
   11568:	bl	10e1c <close@plt>
   1156c:	cmp	r0, #0
   11570:	blt	11664 <close@plt+0x848>
   11574:	and	r9, r9, sl
   11578:	movw	r2, #24880	; 0x6130
   1157c:	movt	r2, #2
   11580:	ldr	r3, [r2]
   11584:	add	r3, r3, #1
   11588:	str	r3, [r2]
   1158c:	cmp	r3, r5
   11590:	bge	114a8 <close@plt+0x68c>
   11594:	ldr	r8, [r4, r3, lsl #2]
   11598:	mov	r1, #2048	; 0x800
   1159c:	mov	r0, r8
   115a0:	bl	10ce4 <open64@plt>
   115a4:	subs	r7, r0, #0
   115a8:	blt	114c8 <close@plt+0x6ac>
   115ac:	mov	r1, #3
   115b0:	mov	r0, r7
   115b4:	bl	117dc <close@plt+0x9c0>
   115b8:	cmn	r0, #1
   115bc:	beq	11524 <close@plt+0x708>
   115c0:	bic	r2, r0, #2048	; 0x800
   115c4:	mov	r1, #4
   115c8:	mov	r0, r7
   115cc:	bl	117dc <close@plt+0x9c0>
   115d0:	cmp	r0, #0
   115d4:	blt	11524 <close@plt+0x708>
   115d8:	cmp	r6, #1
   115dc:	beq	11634 <close@plt+0x818>
   115e0:	cmp	r6, #0
   115e4:	beq	1164c <close@plt+0x830>
   115e8:	cmp	r6, #2
   115ec:	beq	11658 <close@plt+0x83c>
   115f0:	bl	10d50 <__errno_location@plt>
   115f4:	ldr	sl, [r0]
   115f8:	mov	r2, #5
   115fc:	ldr	r1, [sp, #28]
   11600:	mov	r0, #0
   11604:	bl	10c60 <dcgettext@plt>
   11608:	str	r0, [sp, #16]
   1160c:	mov	r1, r8
   11610:	mov	r0, #4
   11614:	bl	13a54 <close@plt+0x2c38>
   11618:	mov	r3, r0
   1161c:	ldr	r2, [sp, #16]
   11620:	mov	r1, sl
   11624:	mov	r0, #0
   11628:	bl	10cd8 <error@plt>
   1162c:	mov	sl, fp
   11630:	b	11564 <close@plt+0x748>
   11634:	mov	r0, r7
   11638:	bl	10e04 <fdatasync@plt>
   1163c:	cmp	r0, #0
   11640:	movge	sl, #1
   11644:	bge	11564 <close@plt+0x748>
   11648:	b	115f0 <close@plt+0x7d4>
   1164c:	mov	r0, r7
   11650:	bl	10bf4 <fsync@plt>
   11654:	b	1163c <close@plt+0x820>
   11658:	mov	r0, r7
   1165c:	bl	10c6c <syncfs@plt>
   11660:	b	1163c <close@plt+0x820>
   11664:	bl	10d50 <__errno_location@plt>
   11668:	ldr	r7, [r0]
   1166c:	mov	r2, #5
   11670:	ldr	r1, [sp, #24]
   11674:	mov	r0, #0
   11678:	bl	10c60 <dcgettext@plt>
   1167c:	mov	sl, r0
   11680:	mov	r1, r8
   11684:	mov	r0, #4
   11688:	bl	13a54 <close@plt+0x2c38>
   1168c:	mov	r3, r0
   11690:	mov	r2, sl
   11694:	mov	r1, r7
   11698:	mov	r0, #0
   1169c:	bl	10cd8 <error@plt>
   116a0:	mov	sl, fp
   116a4:	b	11574 <close@plt+0x758>
   116a8:	andeq	r4, r1, r0, lsr #29
   116ac:	movw	r3, #24900	; 0x6144
   116b0:	movt	r3, #2
   116b4:	str	r0, [r3]
   116b8:	bx	lr
   116bc:	movw	r3, #24900	; 0x6144
   116c0:	movt	r3, #2
   116c4:	strb	r0, [r3, #4]
   116c8:	bx	lr
   116cc:	strd	r4, [sp, #-16]!
   116d0:	str	r6, [sp, #8]
   116d4:	str	lr, [sp, #12]
   116d8:	sub	sp, sp, #8
   116dc:	movw	r3, #24892	; 0x613c
   116e0:	movt	r3, #2
   116e4:	ldr	r0, [r3]
   116e8:	bl	148fc <close@plt+0x3ae0>
   116ec:	cmp	r0, #0
   116f0:	beq	11718 <close@plt+0x8fc>
   116f4:	movw	r3, #24900	; 0x6144
   116f8:	movt	r3, #2
   116fc:	ldrb	r3, [r3, #4]
   11700:	cmp	r3, #0
   11704:	beq	11744 <close@plt+0x928>
   11708:	bl	10d50 <__errno_location@plt>
   1170c:	ldr	r3, [r0]
   11710:	cmp	r3, #32
   11714:	bne	11744 <close@plt+0x928>
   11718:	movw	r3, #24888	; 0x6138
   1171c:	movt	r3, #2
   11720:	ldr	r0, [r3]
   11724:	bl	148fc <close@plt+0x3ae0>
   11728:	cmp	r0, #0
   1172c:	bne	117cc <close@plt+0x9b0>
   11730:	add	sp, sp, #8
   11734:	ldrd	r4, [sp]
   11738:	ldr	r6, [sp, #8]
   1173c:	add	sp, sp, #12
   11740:	pop	{pc}		; (ldr pc, [sp], #4)
   11744:	mov	r2, #5
   11748:	movw	r1, #21312	; 0x5340
   1174c:	movt	r1, #1
   11750:	mov	r0, #0
   11754:	bl	10c60 <dcgettext@plt>
   11758:	mov	r4, r0
   1175c:	movw	r3, #24900	; 0x6144
   11760:	movt	r3, #2
   11764:	ldr	r5, [r3]
   11768:	cmp	r5, #0
   1176c:	beq	117ac <close@plt+0x990>
   11770:	bl	10d50 <__errno_location@plt>
   11774:	ldr	r6, [r0]
   11778:	mov	r0, r5
   1177c:	bl	13b40 <close@plt+0x2d24>
   11780:	str	r4, [sp]
   11784:	mov	r3, r0
   11788:	movw	r2, #21324	; 0x534c
   1178c:	movt	r2, #1
   11790:	mov	r1, r6
   11794:	mov	r0, #0
   11798:	bl	10cd8 <error@plt>
   1179c:	movw	r3, #24800	; 0x60e0
   117a0:	movt	r3, #2
   117a4:	ldr	r0, [r3]
   117a8:	bl	10c24 <_exit@plt>
   117ac:	bl	10d50 <__errno_location@plt>
   117b0:	mov	r3, r4
   117b4:	movw	r2, #21328	; 0x5350
   117b8:	movt	r2, #1
   117bc:	ldr	r1, [r0]
   117c0:	mov	r0, #0
   117c4:	bl	10cd8 <error@plt>
   117c8:	b	1179c <close@plt+0x980>
   117cc:	movw	r3, #24800	; 0x60e0
   117d0:	movt	r3, #2
   117d4:	ldr	r0, [r3]
   117d8:	bl	10c24 <_exit@plt>
   117dc:	push	{r1, r2, r3}
   117e0:	strd	r4, [sp, #-16]!
   117e4:	str	r6, [sp, #8]
   117e8:	str	lr, [sp, #12]
   117ec:	sub	sp, sp, #12
   117f0:	mov	r5, r0
   117f4:	ldr	r1, [sp, #28]
   117f8:	add	r3, sp, #32
   117fc:	str	r3, [sp, #4]
   11800:	cmp	r1, #0
   11804:	beq	1184c <close@plt+0xa30>
   11808:	movw	r3, #1030	; 0x406
   1180c:	cmp	r1, r3
   11810:	beq	11888 <close@plt+0xa6c>
   11814:	cmp	r1, #11
   11818:	beq	11a38 <close@plt+0xc1c>
   1181c:	bgt	119c4 <close@plt+0xba8>
   11820:	cmp	r1, #3
   11824:	beq	11a38 <close@plt+0xc1c>
   11828:	ble	11984 <close@plt+0xb68>
   1182c:	cmp	r1, #8
   11830:	beq	119a4 <close@plt+0xb88>
   11834:	ble	1199c <close@plt+0xb80>
   11838:	cmp	r1, #9
   1183c:	beq	11a38 <close@plt+0xc1c>
   11840:	cmp	r1, #10
   11844:	bne	119fc <close@plt+0xbe0>
   11848:	b	119a4 <close@plt+0xb88>
   1184c:	ldr	r3, [sp, #4]
   11850:	add	r2, r3, #4
   11854:	str	r2, [sp, #4]
   11858:	ldr	r2, [r3]
   1185c:	mov	r1, #0
   11860:	bl	10db0 <fcntl64@plt>
   11864:	mov	r4, r0
   11868:	mov	r0, r4
   1186c:	add	sp, sp, #12
   11870:	ldrd	r4, [sp]
   11874:	ldr	r6, [sp, #8]
   11878:	ldr	lr, [sp, #12]
   1187c:	add	sp, sp, #16
   11880:	add	sp, sp, #12
   11884:	bx	lr
   11888:	ldr	r3, [sp, #4]
   1188c:	add	r2, r3, #4
   11890:	str	r2, [sp, #4]
   11894:	ldr	r6, [r3]
   11898:	movw	r3, #24908	; 0x614c
   1189c:	movt	r3, #2
   118a0:	ldr	r3, [r3]
   118a4:	cmp	r3, #0
   118a8:	blt	11910 <close@plt+0xaf4>
   118ac:	mov	r2, r6
   118b0:	movw	r1, #1030	; 0x406
   118b4:	bl	10db0 <fcntl64@plt>
   118b8:	subs	r4, r0, #0
   118bc:	blt	118d4 <close@plt+0xab8>
   118c0:	movw	r3, #24908	; 0x614c
   118c4:	movt	r3, #2
   118c8:	mov	r2, #1
   118cc:	str	r2, [r3]
   118d0:	b	11868 <close@plt+0xa4c>
   118d4:	bl	10d50 <__errno_location@plt>
   118d8:	ldr	r3, [r0]
   118dc:	cmp	r3, #22
   118e0:	bne	118c0 <close@plt+0xaa4>
   118e4:	mov	r2, r6
   118e8:	mov	r1, #0
   118ec:	mov	r0, r5
   118f0:	bl	10db0 <fcntl64@plt>
   118f4:	subs	r4, r0, #0
   118f8:	blt	11868 <close@plt+0xa4c>
   118fc:	movw	r3, #24908	; 0x614c
   11900:	movt	r3, #2
   11904:	mvn	r2, #0
   11908:	str	r2, [r3]
   1190c:	b	11938 <close@plt+0xb1c>
   11910:	mov	r2, r6
   11914:	mov	r1, #0
   11918:	bl	10db0 <fcntl64@plt>
   1191c:	subs	r4, r0, #0
   11920:	blt	11868 <close@plt+0xa4c>
   11924:	movw	r3, #24908	; 0x614c
   11928:	movt	r3, #2
   1192c:	ldr	r3, [r3]
   11930:	cmn	r3, #1
   11934:	bne	11868 <close@plt+0xa4c>
   11938:	mov	r1, #1
   1193c:	mov	r0, r4
   11940:	bl	10db0 <fcntl64@plt>
   11944:	subs	r2, r0, #0
   11948:	blt	11964 <close@plt+0xb48>
   1194c:	orr	r2, r2, #1
   11950:	mov	r1, #2
   11954:	mov	r0, r4
   11958:	bl	10db0 <fcntl64@plt>
   1195c:	cmn	r0, #1
   11960:	bne	11868 <close@plt+0xa4c>
   11964:	bl	10d50 <__errno_location@plt>
   11968:	mov	r5, r0
   1196c:	ldr	r6, [r0]
   11970:	mov	r0, r4
   11974:	bl	10e1c <close@plt>
   11978:	str	r6, [r5]
   1197c:	mvn	r4, #0
   11980:	b	11868 <close@plt+0xa4c>
   11984:	cmp	r1, #1
   11988:	beq	11a38 <close@plt+0xc1c>
   1198c:	bgt	119a4 <close@plt+0xb88>
   11990:	cmp	r1, #0
   11994:	bne	119fc <close@plt+0xbe0>
   11998:	b	119a4 <close@plt+0xb88>
   1199c:	cmp	r1, #4
   119a0:	bne	119fc <close@plt+0xbe0>
   119a4:	ldr	r3, [sp, #4]
   119a8:	add	r2, r3, #4
   119ac:	str	r2, [sp, #4]
   119b0:	ldr	r2, [r3]
   119b4:	mov	r0, r5
   119b8:	bl	10db0 <fcntl64@plt>
   119bc:	mov	r4, r0
   119c0:	b	11868 <close@plt+0xa4c>
   119c4:	movw	r3, #1031	; 0x407
   119c8:	cmp	r1, r3
   119cc:	bgt	11a1c <close@plt+0xc00>
   119d0:	movw	r3, #1030	; 0x406
   119d4:	cmp	r1, r3
   119d8:	bge	119a4 <close@plt+0xb88>
   119dc:	movw	r3, #1025	; 0x401
   119e0:	cmp	r1, r3
   119e4:	beq	11a38 <close@plt+0xc1c>
   119e8:	movw	r3, #1026	; 0x402
   119ec:	cmp	r1, r3
   119f0:	beq	119a4 <close@plt+0xb88>
   119f4:	cmp	r1, #1024	; 0x400
   119f8:	beq	119a4 <close@plt+0xb88>
   119fc:	ldr	r3, [sp, #4]
   11a00:	add	r2, r3, #4
   11a04:	str	r2, [sp, #4]
   11a08:	ldr	r2, [r3]
   11a0c:	mov	r0, r5
   11a10:	bl	10db0 <fcntl64@plt>
   11a14:	mov	r4, r0
   11a18:	b	11868 <close@plt+0xa4c>
   11a1c:	movw	r3, #1033	; 0x409
   11a20:	cmp	r1, r3
   11a24:	beq	119a4 <close@plt+0xb88>
   11a28:	blt	11a38 <close@plt+0xc1c>
   11a2c:	movw	r3, #1034	; 0x40a
   11a30:	cmp	r1, r3
   11a34:	bne	119fc <close@plt+0xbe0>
   11a38:	mov	r0, r5
   11a3c:	bl	10db0 <fcntl64@plt>
   11a40:	mov	r4, r0
   11a44:	b	11868 <close@plt+0xa4c>
   11a48:	strd	r4, [sp, #-16]!
   11a4c:	str	r6, [sp, #8]
   11a50:	str	lr, [sp, #12]
   11a54:	subs	r4, r0, #0
   11a58:	beq	11af4 <close@plt+0xcd8>
   11a5c:	mov	r1, #47	; 0x2f
   11a60:	mov	r0, r4
   11a64:	bl	10dc8 <strrchr@plt>
   11a68:	subs	r5, r0, #0
   11a6c:	beq	11acc <close@plt+0xcb0>
   11a70:	add	r6, r5, #1
   11a74:	sub	r3, r6, r4
   11a78:	cmp	r3, #6
   11a7c:	ble	11acc <close@plt+0xcb0>
   11a80:	mov	r2, #7
   11a84:	movw	r1, #21388	; 0x538c
   11a88:	movt	r1, #1
   11a8c:	sub	r0, r5, #6
   11a90:	bl	10df8 <strncmp@plt>
   11a94:	cmp	r0, #0
   11a98:	bne	11acc <close@plt+0xcb0>
   11a9c:	mov	r2, #3
   11aa0:	movw	r1, #21396	; 0x5394
   11aa4:	movt	r1, #1
   11aa8:	mov	r0, r6
   11aac:	bl	10df8 <strncmp@plt>
   11ab0:	cmp	r0, #0
   11ab4:	movne	r4, r6
   11ab8:	bne	11acc <close@plt+0xcb0>
   11abc:	add	r4, r5, #4
   11ac0:	movw	r3, #24872	; 0x6128
   11ac4:	movt	r3, #2
   11ac8:	str	r4, [r3]
   11acc:	movw	r3, #24912	; 0x6150
   11ad0:	movt	r3, #2
   11ad4:	str	r4, [r3]
   11ad8:	movw	r3, #24876	; 0x612c
   11adc:	movt	r3, #2
   11ae0:	str	r4, [r3]
   11ae4:	ldrd	r4, [sp]
   11ae8:	ldr	r6, [sp, #8]
   11aec:	add	sp, sp, #12
   11af0:	pop	{pc}		; (ldr pc, [sp], #4)
   11af4:	movw	r3, #24888	; 0x6138
   11af8:	movt	r3, #2
   11afc:	ldr	r3, [r3]
   11b00:	mov	r2, #55	; 0x37
   11b04:	mov	r1, #1
   11b08:	movw	r0, #21332	; 0x5354
   11b0c:	movt	r0, #1
   11b10:	bl	10c9c <fwrite@plt>
   11b14:	bl	10e10 <abort@plt>
   11b18:	mov	r2, #0
   11b1c:	mov	r3, #0
   11b20:	strd	r2, [r0]
   11b24:	strd	r2, [r0, #8]
   11b28:	strd	r2, [r0, #16]
   11b2c:	strd	r2, [r0, #24]
   11b30:	strd	r2, [r0, #32]
   11b34:	strd	r2, [r0, #40]	; 0x28
   11b38:	cmp	r1, #10
   11b3c:	beq	11b48 <close@plt+0xd2c>
   11b40:	str	r1, [r0]
   11b44:	bx	lr
   11b48:	str	r4, [sp, #-8]!
   11b4c:	str	lr, [sp, #4]
   11b50:	bl	10e10 <abort@plt>
   11b54:	strd	r4, [sp, #-16]!
   11b58:	str	r6, [sp, #8]
   11b5c:	str	lr, [sp, #12]
   11b60:	mov	r5, r0
   11b64:	mov	r6, r1
   11b68:	mov	r2, #5
   11b6c:	mov	r1, r0
   11b70:	mov	r0, #0
   11b74:	bl	10c60 <dcgettext@plt>
   11b78:	mov	r4, r0
   11b7c:	cmp	r5, r0
   11b80:	beq	11b98 <close@plt+0xd7c>
   11b84:	mov	r0, r4
   11b88:	ldrd	r4, [sp]
   11b8c:	ldr	r6, [sp, #8]
   11b90:	add	sp, sp, #12
   11b94:	pop	{pc}		; (ldr pc, [sp], #4)
   11b98:	bl	14bd4 <close@plt+0x3db8>
   11b9c:	ldrb	r3, [r0]
   11ba0:	bic	r3, r3, #32
   11ba4:	cmp	r3, #85	; 0x55
   11ba8:	bne	11c2c <close@plt+0xe10>
   11bac:	ldrb	r3, [r0, #1]
   11bb0:	bic	r3, r3, #32
   11bb4:	cmp	r3, #84	; 0x54
   11bb8:	bne	11bf0 <close@plt+0xdd4>
   11bbc:	ldrb	r3, [r0, #2]
   11bc0:	bic	r3, r3, #32
   11bc4:	cmp	r3, #70	; 0x46
   11bc8:	bne	11bf0 <close@plt+0xdd4>
   11bcc:	ldrb	r3, [r0, #3]
   11bd0:	cmp	r3, #45	; 0x2d
   11bd4:	bne	11bf0 <close@plt+0xdd4>
   11bd8:	ldrb	r3, [r0, #4]
   11bdc:	cmp	r3, #56	; 0x38
   11be0:	bne	11bf0 <close@plt+0xdd4>
   11be4:	ldrb	r3, [r0, #5]
   11be8:	cmp	r3, #0
   11bec:	beq	11c0c <close@plt+0xdf0>
   11bf0:	movw	r4, #21484	; 0x53ec
   11bf4:	movt	r4, #1
   11bf8:	movw	r3, #21504	; 0x5400
   11bfc:	movt	r3, #1
   11c00:	cmp	r6, #9
   11c04:	movne	r4, r3
   11c08:	b	11b84 <close@plt+0xd68>
   11c0c:	ldrb	r2, [r4]
   11c10:	movw	r4, #21500	; 0x53fc
   11c14:	movt	r4, #1
   11c18:	movw	r3, #21488	; 0x53f0
   11c1c:	movt	r3, #1
   11c20:	cmp	r2, #96	; 0x60
   11c24:	movne	r4, r3
   11c28:	b	11b84 <close@plt+0xd68>
   11c2c:	cmp	r3, #71	; 0x47
   11c30:	bne	11bf0 <close@plt+0xdd4>
   11c34:	ldrb	r3, [r0, #1]
   11c38:	bic	r3, r3, #32
   11c3c:	cmp	r3, #66	; 0x42
   11c40:	bne	11bf0 <close@plt+0xdd4>
   11c44:	ldrb	r3, [r0, #2]
   11c48:	cmp	r3, #49	; 0x31
   11c4c:	bne	11bf0 <close@plt+0xdd4>
   11c50:	ldrb	r3, [r0, #3]
   11c54:	cmp	r3, #56	; 0x38
   11c58:	bne	11bf0 <close@plt+0xdd4>
   11c5c:	ldrb	r3, [r0, #4]
   11c60:	cmp	r3, #48	; 0x30
   11c64:	bne	11bf0 <close@plt+0xdd4>
   11c68:	ldrb	r3, [r0, #5]
   11c6c:	cmp	r3, #51	; 0x33
   11c70:	bne	11bf0 <close@plt+0xdd4>
   11c74:	ldrb	r3, [r0, #6]
   11c78:	cmp	r3, #48	; 0x30
   11c7c:	bne	11bf0 <close@plt+0xdd4>
   11c80:	ldrb	r3, [r0, #7]
   11c84:	cmp	r3, #0
   11c88:	bne	11bf0 <close@plt+0xdd4>
   11c8c:	ldrb	r2, [r4]
   11c90:	movw	r4, #21496	; 0x53f8
   11c94:	movt	r4, #1
   11c98:	movw	r3, #21492	; 0x53f4
   11c9c:	movt	r3, #1
   11ca0:	cmp	r2, #96	; 0x60
   11ca4:	movne	r4, r3
   11ca8:	b	11b84 <close@plt+0xd68>
   11cac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11cb0:	strd	r6, [sp, #8]
   11cb4:	strd	r8, [sp, #16]
   11cb8:	strd	sl, [sp, #24]
   11cbc:	str	lr, [sp, #32]
   11cc0:	sub	sp, sp, #116	; 0x74
   11cc4:	str	r0, [sp, #64]	; 0x40
   11cc8:	mov	r8, r1
   11ccc:	str	r2, [sp, #48]	; 0x30
   11cd0:	str	r3, [sp, #24]
   11cd4:	ldr	r7, [sp, #152]	; 0x98
   11cd8:	bl	10cb4 <__ctype_get_mb_cur_max@plt>
   11cdc:	str	r0, [sp, #76]	; 0x4c
   11ce0:	ldr	r3, [sp, #156]	; 0x9c
   11ce4:	ubfx	r3, r3, #1, #1
   11ce8:	str	r3, [sp, #32]
   11cec:	mov	r3, #1
   11cf0:	str	r3, [sp, #40]	; 0x28
   11cf4:	mov	r3, #0
   11cf8:	str	r3, [sp, #68]	; 0x44
   11cfc:	str	r3, [sp, #36]	; 0x24
   11d00:	str	r3, [sp, #28]
   11d04:	str	r3, [sp, #52]	; 0x34
   11d08:	str	r3, [sp, #60]	; 0x3c
   11d0c:	str	r3, [sp, #72]	; 0x48
   11d10:	movw	r3, #21508	; 0x5404
   11d14:	movt	r3, #1
   11d18:	str	r3, [sp, #80]	; 0x50
   11d1c:	mov	r9, r8
   11d20:	mov	sl, r7
   11d24:	cmp	sl, #10
   11d28:	ldrls	pc, [pc, sl, lsl #2]
   11d2c:	b	11ef0 <close@plt+0x10d4>
   11d30:	muleq	r1, r0, sp
   11d34:	andeq	r1, r1, r4, ror #26
   11d38:	andeq	r1, r1, r8, asr #29
   11d3c:	andeq	r1, r1, ip, asr sp
   11d40:	andeq	r1, r1, ip, ror lr
   11d44:	andeq	r1, r1, r0, lsr #27
   11d48:	andeq	r3, r1, ip, ror #2
   11d4c:	strdeq	r1, [r1], -r4
   11d50:	ldrdeq	r1, [r1], -ip
   11d54:	ldrdeq	r1, [r1], -ip
   11d58:	ldrdeq	r1, [r1], -ip
   11d5c:	mov	r3, #1
   11d60:	str	r3, [sp, #28]
   11d64:	mov	r3, #1
   11d68:	str	r3, [sp, #32]
   11d6c:	str	r3, [sp, #52]	; 0x34
   11d70:	movw	r3, #21504	; 0x5400
   11d74:	movt	r3, #1
   11d78:	str	r3, [sp, #60]	; 0x3c
   11d7c:	mov	fp, #0
   11d80:	mov	sl, #2
   11d84:	mov	r6, #0
   11d88:	ldr	r8, [sp, #64]	; 0x40
   11d8c:	b	12604 <close@plt+0x17e8>
   11d90:	mov	fp, sl
   11d94:	mov	r3, #0
   11d98:	str	r3, [sp, #32]
   11d9c:	b	11d84 <close@plt+0xf68>
   11da0:	ldr	r3, [sp, #32]
   11da4:	cmp	r3, #0
   11da8:	bne	11f08 <close@plt+0x10ec>
   11dac:	cmp	r9, #0
   11db0:	beq	11f2c <close@plt+0x1110>
   11db4:	mov	r3, #34	; 0x22
   11db8:	ldr	r2, [sp, #64]	; 0x40
   11dbc:	strb	r3, [r2]
   11dc0:	mov	fp, #1
   11dc4:	str	fp, [sp, #28]
   11dc8:	str	fp, [sp, #52]	; 0x34
   11dcc:	movw	r3, #21484	; 0x53ec
   11dd0:	movt	r3, #1
   11dd4:	str	r3, [sp, #60]	; 0x3c
   11dd8:	b	11d84 <close@plt+0xf68>
   11ddc:	cmp	sl, #10
   11de0:	bne	11e14 <close@plt+0xff8>
   11de4:	ldr	r3, [sp, #32]
   11de8:	cmp	r3, #0
   11dec:	movne	fp, #0
   11df0:	beq	11e3c <close@plt+0x1020>
   11df4:	ldr	r0, [sp, #168]	; 0xa8
   11df8:	bl	10d44 <strlen@plt>
   11dfc:	str	r0, [sp, #52]	; 0x34
   11e00:	ldr	r3, [sp, #168]	; 0xa8
   11e04:	str	r3, [sp, #60]	; 0x3c
   11e08:	mov	r3, #1
   11e0c:	str	r3, [sp, #28]
   11e10:	b	11d84 <close@plt+0xf68>
   11e14:	mov	r1, sl
   11e18:	ldr	r0, [sp, #80]	; 0x50
   11e1c:	bl	11b54 <close@plt+0xd38>
   11e20:	str	r0, [sp, #164]	; 0xa4
   11e24:	mov	r1, sl
   11e28:	movw	r0, #21504	; 0x5400
   11e2c:	movt	r0, #1
   11e30:	bl	11b54 <close@plt+0xd38>
   11e34:	str	r0, [sp, #168]	; 0xa8
   11e38:	b	11de4 <close@plt+0xfc8>
   11e3c:	ldr	r3, [sp, #164]	; 0xa4
   11e40:	ldrb	r3, [r3]
   11e44:	cmp	r3, #0
   11e48:	beq	11e74 <close@plt+0x1058>
   11e4c:	ldr	r2, [sp, #164]	; 0xa4
   11e50:	mov	fp, #0
   11e54:	ldr	r1, [sp, #64]	; 0x40
   11e58:	cmp	r9, fp
   11e5c:	strbhi	r3, [r1, fp]
   11e60:	add	fp, fp, #1
   11e64:	ldrb	r3, [r2, #1]!
   11e68:	cmp	r3, #0
   11e6c:	bne	11e58 <close@plt+0x103c>
   11e70:	b	11df4 <close@plt+0xfd8>
   11e74:	mov	fp, #0
   11e78:	b	11df4 <close@plt+0xfd8>
   11e7c:	ldr	r3, [sp, #32]
   11e80:	cmp	r3, #0
   11e84:	bne	11d64 <close@plt+0xf48>
   11e88:	mov	r3, #1
   11e8c:	str	r3, [sp, #28]
   11e90:	cmp	r9, #0
   11e94:	beq	11f48 <close@plt+0x112c>
   11e98:	mov	r3, #39	; 0x27
   11e9c:	ldr	r2, [sp, #64]	; 0x40
   11ea0:	strb	r3, [r2]
   11ea4:	mov	r3, #0
   11ea8:	str	r3, [sp, #32]
   11eac:	mov	fp, #1
   11eb0:	str	fp, [sp, #52]	; 0x34
   11eb4:	movw	r3, #21504	; 0x5400
   11eb8:	movt	r3, #1
   11ebc:	str	r3, [sp, #60]	; 0x3c
   11ec0:	mov	sl, #2
   11ec4:	b	11d84 <close@plt+0xf68>
   11ec8:	ldr	r3, [sp, #32]
   11ecc:	cmp	r3, #0
   11ed0:	beq	11e90 <close@plt+0x1074>
   11ed4:	mov	r3, #1
   11ed8:	str	r3, [sp, #52]	; 0x34
   11edc:	movw	r3, #21504	; 0x5400
   11ee0:	movt	r3, #1
   11ee4:	str	r3, [sp, #60]	; 0x3c
   11ee8:	mov	fp, #0
   11eec:	b	11d84 <close@plt+0xf68>
   11ef0:	bl	10e10 <abort@plt>
   11ef4:	mov	fp, #0
   11ef8:	str	fp, [sp, #32]
   11efc:	mov	r3, #1
   11f00:	str	r3, [sp, #28]
   11f04:	b	11d84 <close@plt+0xf68>
   11f08:	ldr	r3, [sp, #32]
   11f0c:	str	r3, [sp, #28]
   11f10:	mov	r3, #1
   11f14:	str	r3, [sp, #52]	; 0x34
   11f18:	movw	r3, #21484	; 0x53ec
   11f1c:	movt	r3, #1
   11f20:	str	r3, [sp, #60]	; 0x3c
   11f24:	mov	fp, #0
   11f28:	b	11d84 <close@plt+0xf68>
   11f2c:	mov	fp, #1
   11f30:	str	fp, [sp, #28]
   11f34:	str	fp, [sp, #52]	; 0x34
   11f38:	movw	r3, #21484	; 0x53ec
   11f3c:	movt	r3, #1
   11f40:	str	r3, [sp, #60]	; 0x3c
   11f44:	b	11d84 <close@plt+0xf68>
   11f48:	mov	r3, #0
   11f4c:	str	r3, [sp, #32]
   11f50:	mov	fp, #1
   11f54:	str	fp, [sp, #52]	; 0x34
   11f58:	movw	r3, #21504	; 0x5400
   11f5c:	movt	r3, #1
   11f60:	str	r3, [sp, #60]	; 0x3c
   11f64:	mov	sl, #2
   11f68:	b	11d84 <close@plt+0xf68>
   11f6c:	mov	r3, r2
   11f70:	add	r4, r6, r2
   11f74:	ldr	r2, [sp, #24]
   11f78:	cmp	r3, #1
   11f7c:	movls	r3, #0
   11f80:	movhi	r3, #1
   11f84:	cmn	r2, #1
   11f88:	movne	r3, #0
   11f8c:	cmp	r3, #0
   11f90:	beq	11fa0 <close@plt+0x1184>
   11f94:	ldr	r0, [sp, #48]	; 0x30
   11f98:	bl	10d44 <strlen@plt>
   11f9c:	str	r0, [sp, #24]
   11fa0:	ldr	r3, [sp, #24]
   11fa4:	cmp	r4, r3
   11fa8:	bhi	13194 <close@plt+0x2378>
   11fac:	ldr	r3, [sp, #48]	; 0x30
   11fb0:	add	r4, r3, r6
   11fb4:	ldr	r2, [sp, #52]	; 0x34
   11fb8:	ldr	r1, [sp, #60]	; 0x3c
   11fbc:	mov	r0, r4
   11fc0:	bl	10c48 <memcmp@plt>
   11fc4:	cmp	r0, #0
   11fc8:	bne	13194 <close@plt+0x2378>
   11fcc:	ldr	r3, [sp, #32]
   11fd0:	cmp	r3, #0
   11fd4:	bne	121e4 <close@plt+0x13c8>
   11fd8:	ldrb	r4, [r4]
   11fdc:	cmp	r4, #126	; 0x7e
   11fe0:	ldrls	pc, [pc, r4, lsl #2]
   11fe4:	b	12a98 <close@plt+0x1c7c>
   11fe8:	andeq	r2, r1, r8, lsr #4
   11fec:	muleq	r1, r8, sl
   11ff0:	muleq	r1, r8, sl
   11ff4:	muleq	r1, r8, sl
   11ff8:	muleq	r1, r8, sl
   11ffc:	muleq	r1, r8, sl
   12000:	muleq	r1, r8, sl
   12004:	andeq	r2, r1, r0, asr #18
   12008:	andeq	r2, r1, r4, asr #9
   1200c:	andeq	r2, r1, r8, ror #16
   12010:	andeq	r2, r1, r4, lsl r9
   12014:	andeq	r2, r1, ip, ror r8
   12018:	ldrdeq	r2, [r1], -r8
   1201c:	andeq	r2, r1, ip, ror #9
   12020:	muleq	r1, r8, sl
   12024:	muleq	r1, r8, sl
   12028:	muleq	r1, r8, sl
   1202c:	muleq	r1, r8, sl
   12030:	muleq	r1, r8, sl
   12034:	muleq	r1, r8, sl
   12038:	muleq	r1, r8, sl
   1203c:	muleq	r1, r8, sl
   12040:	muleq	r1, r8, sl
   12044:	muleq	r1, r8, sl
   12048:	muleq	r1, r8, sl
   1204c:	muleq	r1, r8, sl
   12050:	muleq	r1, r8, sl
   12054:	muleq	r1, r8, sl
   12058:	muleq	r1, r8, sl
   1205c:	muleq	r1, r8, sl
   12060:	muleq	r1, r8, sl
   12064:	muleq	r1, r8, sl
   12068:			; <UNDEFINED> instruction: 0x000129b4
   1206c:	ldrdeq	r2, [r1], -r8
   12070:	ldrdeq	r2, [r1], -r8
   12074:	andeq	r2, r1, r0, ror r9
   12078:	ldrdeq	r2, [r1], -r8
   1207c:	strdeq	r2, [r1], -r8
   12080:	ldrdeq	r2, [r1], -r8
   12084:	strdeq	r2, [r1], -r8
   12088:	ldrdeq	r2, [r1], -r8
   1208c:	ldrdeq	r2, [r1], -r8
   12090:	ldrdeq	r2, [r1], -r8
   12094:	strdeq	r2, [r1], -r8
   12098:	strdeq	r2, [r1], -r8
   1209c:	strdeq	r2, [r1], -r8
   120a0:	strdeq	r2, [r1], -r8
   120a4:	strdeq	r2, [r1], -r8
   120a8:	strdeq	r2, [r1], -r8
   120ac:	strdeq	r2, [r1], -r8
   120b0:	strdeq	r2, [r1], -r8
   120b4:	strdeq	r2, [r1], -r8
   120b8:	strdeq	r2, [r1], -r8
   120bc:	strdeq	r2, [r1], -r8
   120c0:	strdeq	r2, [r1], -r8
   120c4:	strdeq	r2, [r1], -r8
   120c8:	strdeq	r2, [r1], -r8
   120cc:	strdeq	r2, [r1], -r8
   120d0:	strdeq	r2, [r1], -r8
   120d4:	ldrdeq	r2, [r1], -r8
   120d8:	ldrdeq	r2, [r1], -r8
   120dc:	ldrdeq	r2, [r1], -r8
   120e0:	ldrdeq	r2, [r1], -r8
   120e4:	andeq	r2, r1, r8, asr r3
   120e8:	muleq	r1, r8, sl
   120ec:	strdeq	r2, [r1], -r8
   120f0:	strdeq	r2, [r1], -r8
   120f4:	strdeq	r2, [r1], -r8
   120f8:	strdeq	r2, [r1], -r8
   120fc:	strdeq	r2, [r1], -r8
   12100:	strdeq	r2, [r1], -r8
   12104:	strdeq	r2, [r1], -r8
   12108:	strdeq	r2, [r1], -r8
   1210c:	strdeq	r2, [r1], -r8
   12110:	strdeq	r2, [r1], -r8
   12114:	strdeq	r2, [r1], -r8
   12118:	strdeq	r2, [r1], -r8
   1211c:	strdeq	r2, [r1], -r8
   12120:	strdeq	r2, [r1], -r8
   12124:	strdeq	r2, [r1], -r8
   12128:	strdeq	r2, [r1], -r8
   1212c:	strdeq	r2, [r1], -r8
   12130:	strdeq	r2, [r1], -r8
   12134:	strdeq	r2, [r1], -r8
   12138:	strdeq	r2, [r1], -r8
   1213c:	strdeq	r2, [r1], -r8
   12140:	strdeq	r2, [r1], -r8
   12144:	strdeq	r2, [r1], -r8
   12148:	strdeq	r2, [r1], -r8
   1214c:	strdeq	r2, [r1], -r8
   12150:	strdeq	r2, [r1], -r8
   12154:	ldrdeq	r2, [r1], -r8
   12158:	muleq	r1, r0, r8
   1215c:	strdeq	r2, [r1], -r8
   12160:	ldrdeq	r2, [r1], -r8
   12164:	strdeq	r2, [r1], -r8
   12168:	ldrdeq	r2, [r1], -r8
   1216c:	strdeq	r2, [r1], -r8
   12170:	strdeq	r2, [r1], -r8
   12174:	strdeq	r2, [r1], -r8
   12178:	strdeq	r2, [r1], -r8
   1217c:	strdeq	r2, [r1], -r8
   12180:	strdeq	r2, [r1], -r8
   12184:	strdeq	r2, [r1], -r8
   12188:	strdeq	r2, [r1], -r8
   1218c:	strdeq	r2, [r1], -r8
   12190:	strdeq	r2, [r1], -r8
   12194:	strdeq	r2, [r1], -r8
   12198:	strdeq	r2, [r1], -r8
   1219c:	strdeq	r2, [r1], -r8
   121a0:	strdeq	r2, [r1], -r8
   121a4:	strdeq	r2, [r1], -r8
   121a8:	strdeq	r2, [r1], -r8
   121ac:	strdeq	r2, [r1], -r8
   121b0:	strdeq	r2, [r1], -r8
   121b4:	strdeq	r2, [r1], -r8
   121b8:	strdeq	r2, [r1], -r8
   121bc:	strdeq	r2, [r1], -r8
   121c0:	strdeq	r2, [r1], -r8
   121c4:	strdeq	r2, [r1], -r8
   121c8:	strdeq	r2, [r1], -r8
   121cc:	strdeq	r2, [r1], -r8
   121d0:	strdeq	r2, [r1], -r8
   121d4:	andeq	r2, r1, r0, asr r9
   121d8:	ldrdeq	r2, [r1], -r8
   121dc:	andeq	r2, r1, r0, asr r9
   121e0:	andeq	r2, r1, r0, ror r9
   121e4:	mov	r8, r9
   121e8:	mov	r7, sl
   121ec:	b	130ec <close@plt+0x22d0>
   121f0:	ldr	r3, [sp, #28]
   121f4:	cmp	r3, #0
   121f8:	bne	12218 <close@plt+0x13fc>
   121fc:	ldr	r3, [sp, #156]	; 0x9c
   12200:	tst	r3, #1
   12204:	bne	12600 <close@plt+0x17e4>
   12208:	ldr	r3, [sp, #28]
   1220c:	str	r3, [sp, #44]	; 0x2c
   12210:	mov	r5, r3
   12214:	b	12520 <close@plt+0x1704>
   12218:	ldr	r3, [sp, #32]
   1221c:	cmp	r3, #0
   12220:	bne	1309c <close@plt+0x2280>
   12224:	str	r3, [sp, #44]	; 0x2c
   12228:	ldr	r3, [sp, #36]	; 0x24
   1222c:	eor	r3, r3, #1
   12230:	cmp	sl, #2
   12234:	movne	r3, #0
   12238:	andeq	r3, r3, #1
   1223c:	cmp	r3, #0
   12240:	beq	12298 <close@plt+0x147c>
   12244:	cmp	r9, fp
   12248:	movhi	r2, #39	; 0x27
   1224c:	strbhi	r2, [r8, fp]
   12250:	add	r2, fp, #1
   12254:	cmp	r9, r2
   12258:	movhi	r1, #36	; 0x24
   1225c:	strbhi	r1, [r8, r2]
   12260:	add	r2, fp, #2
   12264:	cmp	r9, r2
   12268:	movhi	r1, #39	; 0x27
   1226c:	strbhi	r1, [r8, r2]
   12270:	add	r2, fp, #3
   12274:	cmp	r9, r2
   12278:	bls	13158 <close@plt+0x233c>
   1227c:	mov	r1, #92	; 0x5c
   12280:	strb	r1, [r8, r2]
   12284:	add	fp, fp, #4
   12288:	str	r3, [sp, #36]	; 0x24
   1228c:	mov	r5, #0
   12290:	mov	r4, #48	; 0x30
   12294:	b	1256c <close@plt+0x1750>
   12298:	cmp	r9, fp
   1229c:	bhi	122c4 <close@plt+0x14a8>
   122a0:	add	r1, fp, #1
   122a4:	ldr	r2, [sp, #56]	; 0x38
   122a8:	cmp	r2, #0
   122ac:	bne	122ec <close@plt+0x14d0>
   122b0:	mov	r3, r5
   122b4:	ldr	r5, [sp, #56]	; 0x38
   122b8:	mov	fp, r1
   122bc:	mov	r4, #48	; 0x30
   122c0:	b	12520 <close@plt+0x1704>
   122c4:	mov	r2, #92	; 0x5c
   122c8:	strb	r2, [r8, fp]
   122cc:	add	r1, fp, #1
   122d0:	ldr	r2, [sp, #56]	; 0x38
   122d4:	cmp	r2, #0
   122d8:	moveq	r3, r5
   122dc:	moveq	r5, r2
   122e0:	moveq	fp, r1
   122e4:	moveq	r4, #48	; 0x30
   122e8:	beq	1256c <close@plt+0x1750>
   122ec:	add	r2, r6, #1
   122f0:	ldr	r0, [sp, #24]
   122f4:	cmp	r2, r0
   122f8:	bcs	12314 <close@plt+0x14f8>
   122fc:	ldr	r0, [sp, #48]	; 0x30
   12300:	ldrb	r2, [r0, r2]
   12304:	sub	r2, r2, #48	; 0x30
   12308:	uxtb	r2, r2
   1230c:	cmp	r2, #9
   12310:	bls	1232c <close@plt+0x1510>
   12314:	mov	r2, r3
   12318:	mov	r3, r5
   1231c:	mov	r5, r2
   12320:	mov	fp, r1
   12324:	mov	r4, #48	; 0x30
   12328:	b	12544 <close@plt+0x1728>
   1232c:	cmp	r9, r1
   12330:	movhi	r2, #48	; 0x30
   12334:	strbhi	r2, [r8, r1]
   12338:	add	r2, fp, #2
   1233c:	cmp	r9, r2
   12340:	movhi	r1, #48	; 0x30
   12344:	strbhi	r1, [r8, r2]
   12348:	add	r1, fp, #3
   1234c:	b	12314 <close@plt+0x14f8>
   12350:	mov	r3, #0
   12354:	str	r3, [sp, #44]	; 0x2c
   12358:	cmp	sl, #2
   1235c:	beq	12378 <close@plt+0x155c>
   12360:	cmp	sl, #5
   12364:	beq	12390 <close@plt+0x1574>
   12368:	mov	r5, #0
   1236c:	mov	r3, r5
   12370:	mov	r4, #63	; 0x3f
   12374:	b	12520 <close@plt+0x1704>
   12378:	ldr	r3, [sp, #32]
   1237c:	cmp	r3, #0
   12380:	bne	130a8 <close@plt+0x228c>
   12384:	mov	r5, r3
   12388:	mov	r4, #63	; 0x3f
   1238c:	b	12a88 <close@plt+0x1c6c>
   12390:	ldr	r3, [sp, #156]	; 0x9c
   12394:	tst	r3, #4
   12398:	beq	12ec0 <close@plt+0x20a4>
   1239c:	add	r2, r6, #2
   123a0:	ldr	r3, [sp, #24]
   123a4:	cmp	r2, r3
   123a8:	bcs	12ed0 <close@plt+0x20b4>
   123ac:	ldr	r3, [sp, #48]	; 0x30
   123b0:	add	r3, r3, r6
   123b4:	ldrb	r4, [r3, #1]
   123b8:	cmp	r4, #63	; 0x3f
   123bc:	movne	r5, #0
   123c0:	movne	r3, r5
   123c4:	movne	r4, #63	; 0x3f
   123c8:	bne	12520 <close@plt+0x1704>
   123cc:	ldr	r3, [sp, #48]	; 0x30
   123d0:	ldrb	r1, [r3, r2]
   123d4:	sub	r3, r1, #33	; 0x21
   123d8:	cmp	r3, #29
   123dc:	ldrls	pc, [pc, r3, lsl #2]
   123e0:	b	12ee0 <close@plt+0x20c4>
   123e4:	andeq	r2, r1, ip, asr r4
   123e8:	andeq	r2, r1, r0, ror #29
   123ec:	andeq	r2, r1, r0, ror #29
   123f0:	andeq	r2, r1, r0, ror #29
   123f4:	andeq	r2, r1, r0, ror #29
   123f8:	andeq	r2, r1, r0, ror #29
   123fc:	andeq	r2, r1, ip, asr r4
   12400:	andeq	r2, r1, ip, asr r4
   12404:	andeq	r2, r1, ip, asr r4
   12408:	andeq	r2, r1, r0, ror #29
   1240c:	andeq	r2, r1, r0, ror #29
   12410:	andeq	r2, r1, r0, ror #29
   12414:	andeq	r2, r1, ip, asr r4
   12418:	andeq	r2, r1, r0, ror #29
   1241c:	andeq	r2, r1, ip, asr r4
   12420:	andeq	r2, r1, r0, ror #29
   12424:	andeq	r2, r1, r0, ror #29
   12428:	andeq	r2, r1, r0, ror #29
   1242c:	andeq	r2, r1, r0, ror #29
   12430:	andeq	r2, r1, r0, ror #29
   12434:	andeq	r2, r1, r0, ror #29
   12438:	andeq	r2, r1, r0, ror #29
   1243c:	andeq	r2, r1, r0, ror #29
   12440:	andeq	r2, r1, r0, ror #29
   12444:	andeq	r2, r1, r0, ror #29
   12448:	andeq	r2, r1, r0, ror #29
   1244c:	andeq	r2, r1, r0, ror #29
   12450:	andeq	r2, r1, ip, asr r4
   12454:	andeq	r2, r1, ip, asr r4
   12458:	andeq	r2, r1, ip, asr r4
   1245c:	ldr	r3, [sp, #32]
   12460:	cmp	r3, #0
   12464:	bne	1314c <close@plt+0x2330>
   12468:	cmp	r9, fp
   1246c:	movhi	r3, #63	; 0x3f
   12470:	strbhi	r3, [r8, fp]
   12474:	add	r3, fp, #1
   12478:	cmp	r9, r3
   1247c:	movhi	r0, #34	; 0x22
   12480:	strbhi	r0, [r8, r3]
   12484:	add	r3, fp, #2
   12488:	cmp	r9, r3
   1248c:	movhi	r0, #34	; 0x22
   12490:	strbhi	r0, [r8, r3]
   12494:	add	r3, fp, #3
   12498:	cmp	r9, r3
   1249c:	movhi	r0, #63	; 0x3f
   124a0:	strbhi	r0, [r8, r3]
   124a4:	add	fp, fp, #4
   124a8:	ldr	r3, [sp, #32]
   124ac:	mov	r5, r3
   124b0:	mov	r4, r1
   124b4:	mov	r6, r2
   124b8:	b	12520 <close@plt+0x1704>
   124bc:	mov	r3, #0
   124c0:	str	r3, [sp, #44]	; 0x2c
   124c4:	mov	r4, #8
   124c8:	mov	r3, #98	; 0x62
   124cc:	b	1250c <close@plt+0x16f0>
   124d0:	mov	r3, #0
   124d4:	str	r3, [sp, #44]	; 0x2c
   124d8:	mov	r4, #12
   124dc:	mov	r3, #102	; 0x66
   124e0:	b	1250c <close@plt+0x16f0>
   124e4:	mov	r3, #0
   124e8:	str	r3, [sp, #44]	; 0x2c
   124ec:	mov	r4, #13
   124f0:	mov	r3, #114	; 0x72
   124f4:	ldr	r2, [sp, #32]
   124f8:	cmp	sl, #2
   124fc:	movne	r2, #0
   12500:	andeq	r2, r2, #1
   12504:	cmp	r2, #0
   12508:	bne	1292c <close@plt+0x1b10>
   1250c:	ldr	r2, [sp, #28]
   12510:	cmp	r2, #0
   12514:	bne	12f14 <close@plt+0x20f8>
   12518:	mov	r5, r2
   1251c:	mov	r3, r2
   12520:	ldr	r2, [sp, #28]
   12524:	eor	r2, r2, #1
   12528:	cmp	sl, #2
   1252c:	orreq	r2, r2, #1
   12530:	eor	r2, r2, #1
   12534:	ldr	r1, [sp, #32]
   12538:	orr	r2, r1, r2
   1253c:	tst	r2, #255	; 0xff
   12540:	beq	1256c <close@plt+0x1750>
   12544:	ldr	r2, [sp, #160]	; 0xa0
   12548:	cmp	r2, #0
   1254c:	beq	1256c <close@plt+0x1750>
   12550:	ubfx	r1, r4, #5, #8
   12554:	and	r2, r4, #31
   12558:	ldr	r0, [sp, #160]	; 0xa0
   1255c:	ldr	r1, [r0, r1, lsl #2]
   12560:	lsr	r2, r1, r2
   12564:	tst	r2, #1
   12568:	bne	12578 <close@plt+0x175c>
   1256c:	ldr	r2, [sp, #44]	; 0x2c
   12570:	cmp	r2, #0
   12574:	beq	128cc <close@plt+0x1ab0>
   12578:	ldr	r3, [sp, #32]
   1257c:	cmp	r3, #0
   12580:	bne	130cc <close@plt+0x22b0>
   12584:	ldr	r3, [sp, #36]	; 0x24
   12588:	eor	r3, r3, #1
   1258c:	cmp	sl, #2
   12590:	movne	r3, #0
   12594:	andeq	r3, r3, #1
   12598:	cmp	r3, #0
   1259c:	beq	125d4 <close@plt+0x17b8>
   125a0:	cmp	r9, fp
   125a4:	movhi	r2, #39	; 0x27
   125a8:	strbhi	r2, [r8, fp]
   125ac:	add	r2, fp, #1
   125b0:	cmp	r9, r2
   125b4:	movhi	r1, #36	; 0x24
   125b8:	strbhi	r1, [r8, r2]
   125bc:	add	r2, fp, #2
   125c0:	cmp	r9, r2
   125c4:	movhi	r1, #39	; 0x27
   125c8:	strbhi	r1, [r8, r2]
   125cc:	add	fp, fp, #3
   125d0:	str	r3, [sp, #36]	; 0x24
   125d4:	cmp	r9, fp
   125d8:	movhi	r3, #92	; 0x5c
   125dc:	strbhi	r3, [r8, fp]
   125e0:	add	fp, fp, #1
   125e4:	cmp	fp, r9
   125e8:	strbcc	r4, [r8, fp]
   125ec:	add	fp, fp, #1
   125f0:	cmp	r5, #0
   125f4:	ldr	r3, [sp, #40]	; 0x28
   125f8:	moveq	r3, r5
   125fc:	str	r3, [sp, #40]	; 0x28
   12600:	add	r6, r6, #1
   12604:	ldr	r3, [sp, #24]
   12608:	cmn	r3, #1
   1260c:	beq	12f3c <close@plt+0x2120>
   12610:	ldr	r3, [sp, #24]
   12614:	subs	r5, r3, r6
   12618:	movne	r5, #1
   1261c:	cmp	r5, #0
   12620:	beq	12f50 <close@plt+0x2134>
   12624:	ldr	r3, [sp, #28]
   12628:	cmp	sl, #2
   1262c:	moveq	r3, #0
   12630:	andne	r3, r3, #1
   12634:	str	r3, [sp, #56]	; 0x38
   12638:	ldr	r2, [sp, #52]	; 0x34
   1263c:	adds	r7, r2, #0
   12640:	movne	r7, #1
   12644:	ands	r3, r3, r7
   12648:	str	r3, [sp, #44]	; 0x2c
   1264c:	bne	11f6c <close@plt+0x1150>
   12650:	ldr	r3, [sp, #48]	; 0x30
   12654:	ldrb	r4, [r3, r6]
   12658:	cmp	r4, #126	; 0x7e
   1265c:	ldrls	pc, [pc, r4, lsl #2]
   12660:	b	12a98 <close@plt+0x1c7c>
   12664:	strdeq	r2, [r1], -r0
   12668:	muleq	r1, r8, sl
   1266c:	muleq	r1, r8, sl
   12670:	muleq	r1, r8, sl
   12674:	muleq	r1, r8, sl
   12678:	muleq	r1, r8, sl
   1267c:	muleq	r1, r8, sl
   12680:	andeq	r2, r1, r8, lsr r9
   12684:	andeq	r2, r1, r4, asr #9
   12688:	andeq	r2, r1, r8, ror #16
   1268c:	andeq	r2, r1, ip, lsl #18
   12690:	andeq	r2, r1, ip, ror r8
   12694:	ldrdeq	r2, [r1], -r8
   12698:	andeq	r2, r1, ip, ror #9
   1269c:	muleq	r1, r8, sl
   126a0:	muleq	r1, r8, sl
   126a4:	muleq	r1, r8, sl
   126a8:	muleq	r1, r8, sl
   126ac:	muleq	r1, r8, sl
   126b0:	muleq	r1, r8, sl
   126b4:	muleq	r1, r8, sl
   126b8:	muleq	r1, r8, sl
   126bc:	muleq	r1, r8, sl
   126c0:	muleq	r1, r8, sl
   126c4:	muleq	r1, r8, sl
   126c8:	muleq	r1, r8, sl
   126cc:	muleq	r1, r8, sl
   126d0:	muleq	r1, r8, sl
   126d4:	muleq	r1, r8, sl
   126d8:	muleq	r1, r8, sl
   126dc:	muleq	r1, r8, sl
   126e0:	muleq	r1, r8, sl
   126e4:			; <UNDEFINED> instruction: 0x000129b4
   126e8:			; <UNDEFINED> instruction: 0x000129b0
   126ec:			; <UNDEFINED> instruction: 0x000129b0
   126f0:	andeq	r2, r1, r0, ror r9
   126f4:			; <UNDEFINED> instruction: 0x000129b0
   126f8:			; <UNDEFINED> instruction: 0x00012eb8
   126fc:			; <UNDEFINED> instruction: 0x000129b0
   12700:	strdeq	r2, [r1], -r8
   12704:			; <UNDEFINED> instruction: 0x000129b0
   12708:			; <UNDEFINED> instruction: 0x000129b0
   1270c:			; <UNDEFINED> instruction: 0x000129b0
   12710:			; <UNDEFINED> instruction: 0x00012eb8
   12714:			; <UNDEFINED> instruction: 0x00012eb8
   12718:			; <UNDEFINED> instruction: 0x00012eb8
   1271c:			; <UNDEFINED> instruction: 0x00012eb8
   12720:			; <UNDEFINED> instruction: 0x00012eb8
   12724:			; <UNDEFINED> instruction: 0x00012eb8
   12728:			; <UNDEFINED> instruction: 0x00012eb8
   1272c:			; <UNDEFINED> instruction: 0x00012eb8
   12730:			; <UNDEFINED> instruction: 0x00012eb8
   12734:			; <UNDEFINED> instruction: 0x00012eb8
   12738:			; <UNDEFINED> instruction: 0x00012eb8
   1273c:			; <UNDEFINED> instruction: 0x00012eb8
   12740:			; <UNDEFINED> instruction: 0x00012eb8
   12744:			; <UNDEFINED> instruction: 0x00012eb8
   12748:			; <UNDEFINED> instruction: 0x00012eb8
   1274c:			; <UNDEFINED> instruction: 0x00012eb8
   12750:			; <UNDEFINED> instruction: 0x000129b0
   12754:			; <UNDEFINED> instruction: 0x000129b0
   12758:			; <UNDEFINED> instruction: 0x000129b0
   1275c:			; <UNDEFINED> instruction: 0x000129b0
   12760:	andeq	r2, r1, r8, asr r3
   12764:	muleq	r1, r8, sl
   12768:			; <UNDEFINED> instruction: 0x00012eb8
   1276c:			; <UNDEFINED> instruction: 0x00012eb8
   12770:			; <UNDEFINED> instruction: 0x00012eb8
   12774:			; <UNDEFINED> instruction: 0x00012eb8
   12778:			; <UNDEFINED> instruction: 0x00012eb8
   1277c:			; <UNDEFINED> instruction: 0x00012eb8
   12780:			; <UNDEFINED> instruction: 0x00012eb8
   12784:			; <UNDEFINED> instruction: 0x00012eb8
   12788:			; <UNDEFINED> instruction: 0x00012eb8
   1278c:			; <UNDEFINED> instruction: 0x00012eb8
   12790:			; <UNDEFINED> instruction: 0x00012eb8
   12794:			; <UNDEFINED> instruction: 0x00012eb8
   12798:			; <UNDEFINED> instruction: 0x00012eb8
   1279c:			; <UNDEFINED> instruction: 0x00012eb8
   127a0:			; <UNDEFINED> instruction: 0x00012eb8
   127a4:			; <UNDEFINED> instruction: 0x00012eb8
   127a8:			; <UNDEFINED> instruction: 0x00012eb8
   127ac:			; <UNDEFINED> instruction: 0x00012eb8
   127b0:			; <UNDEFINED> instruction: 0x00012eb8
   127b4:			; <UNDEFINED> instruction: 0x00012eb8
   127b8:			; <UNDEFINED> instruction: 0x00012eb8
   127bc:			; <UNDEFINED> instruction: 0x00012eb8
   127c0:			; <UNDEFINED> instruction: 0x00012eb8
   127c4:			; <UNDEFINED> instruction: 0x00012eb8
   127c8:			; <UNDEFINED> instruction: 0x00012eb8
   127cc:			; <UNDEFINED> instruction: 0x00012eb8
   127d0:			; <UNDEFINED> instruction: 0x000129b0
   127d4:	muleq	r1, r0, r8
   127d8:			; <UNDEFINED> instruction: 0x00012eb8
   127dc:			; <UNDEFINED> instruction: 0x000129b0
   127e0:			; <UNDEFINED> instruction: 0x00012eb8
   127e4:			; <UNDEFINED> instruction: 0x000129b0
   127e8:			; <UNDEFINED> instruction: 0x00012eb8
   127ec:			; <UNDEFINED> instruction: 0x00012eb8
   127f0:			; <UNDEFINED> instruction: 0x00012eb8
   127f4:			; <UNDEFINED> instruction: 0x00012eb8
   127f8:			; <UNDEFINED> instruction: 0x00012eb8
   127fc:			; <UNDEFINED> instruction: 0x00012eb8
   12800:			; <UNDEFINED> instruction: 0x00012eb8
   12804:			; <UNDEFINED> instruction: 0x00012eb8
   12808:			; <UNDEFINED> instruction: 0x00012eb8
   1280c:			; <UNDEFINED> instruction: 0x00012eb8
   12810:			; <UNDEFINED> instruction: 0x00012eb8
   12814:			; <UNDEFINED> instruction: 0x00012eb8
   12818:			; <UNDEFINED> instruction: 0x00012eb8
   1281c:			; <UNDEFINED> instruction: 0x00012eb8
   12820:			; <UNDEFINED> instruction: 0x00012eb8
   12824:			; <UNDEFINED> instruction: 0x00012eb8
   12828:			; <UNDEFINED> instruction: 0x00012eb8
   1282c:			; <UNDEFINED> instruction: 0x00012eb8
   12830:			; <UNDEFINED> instruction: 0x00012eb8
   12834:			; <UNDEFINED> instruction: 0x00012eb8
   12838:			; <UNDEFINED> instruction: 0x00012eb8
   1283c:			; <UNDEFINED> instruction: 0x00012eb8
   12840:			; <UNDEFINED> instruction: 0x00012eb8
   12844:			; <UNDEFINED> instruction: 0x00012eb8
   12848:			; <UNDEFINED> instruction: 0x00012eb8
   1284c:			; <UNDEFINED> instruction: 0x00012eb8
   12850:	andeq	r2, r1, r0, asr r9
   12854:			; <UNDEFINED> instruction: 0x000129b0
   12858:	andeq	r2, r1, r0, asr r9
   1285c:	andeq	r2, r1, r0, ror r9
   12860:	mov	r3, #0
   12864:	str	r3, [sp, #44]	; 0x2c
   12868:	mov	r4, #9
   1286c:	mov	r3, #116	; 0x74
   12870:	b	124f4 <close@plt+0x16d8>
   12874:	mov	r3, #0
   12878:	str	r3, [sp, #44]	; 0x2c
   1287c:	mov	r4, #11
   12880:	mov	r3, #118	; 0x76
   12884:	b	1250c <close@plt+0x16f0>
   12888:	mov	r3, #0
   1288c:	str	r3, [sp, #44]	; 0x2c
   12890:	cmp	sl, #2
   12894:	beq	128b8 <close@plt+0x1a9c>
   12898:	ldr	r3, [sp, #28]
   1289c:	ldr	r2, [sp, #32]
   128a0:	and	r3, r3, r2
   128a4:	tst	r7, r3
   128a8:	bne	12f2c <close@plt+0x2110>
   128ac:	mov	r4, #92	; 0x5c
   128b0:	mov	r3, r4
   128b4:	b	1250c <close@plt+0x16f0>
   128b8:	ldr	r3, [sp, #32]
   128bc:	cmp	r3, #0
   128c0:	bne	130b4 <close@plt+0x2298>
   128c4:	mov	r5, r3
   128c8:	mov	r4, #92	; 0x5c
   128cc:	eor	r3, r3, #1
   128d0:	ldr	r2, [sp, #36]	; 0x24
   128d4:	and	r3, r3, r2
   128d8:	tst	r3, #255	; 0xff
   128dc:	beq	125e4 <close@plt+0x17c8>
   128e0:	cmp	r9, fp
   128e4:	movhi	r3, #39	; 0x27
   128e8:	strbhi	r3, [r8, fp]
   128ec:	add	r3, fp, #1
   128f0:	cmp	r9, r3
   128f4:	movhi	r2, #39	; 0x27
   128f8:	strbhi	r2, [r8, r3]
   128fc:	add	fp, fp, #2
   12900:	mov	r3, #0
   12904:	str	r3, [sp, #36]	; 0x24
   12908:	b	125e4 <close@plt+0x17c8>
   1290c:	mov	r3, #110	; 0x6e
   12910:	b	124f4 <close@plt+0x16d8>
   12914:	mov	r3, #110	; 0x6e
   12918:	b	124f4 <close@plt+0x16d8>
   1291c:	mov	r3, #0
   12920:	str	r3, [sp, #44]	; 0x2c
   12924:	mov	r3, #110	; 0x6e
   12928:	b	124f4 <close@plt+0x16d8>
   1292c:	mov	r8, r9
   12930:	mov	r7, #2
   12934:	b	130d4 <close@plt+0x22b8>
   12938:	mov	r3, #97	; 0x61
   1293c:	b	1250c <close@plt+0x16f0>
   12940:	mov	r3, #97	; 0x61
   12944:	b	1250c <close@plt+0x16f0>
   12948:	mov	r3, #0
   1294c:	str	r3, [sp, #44]	; 0x2c
   12950:	ldr	r3, [sp, #24]
   12954:	cmn	r3, #1
   12958:	beq	12984 <close@plt+0x1b68>
   1295c:	ldr	r3, [sp, #24]
   12960:	subs	r3, r3, #1
   12964:	movne	r3, #1
   12968:	cmp	r3, #0
   1296c:	bne	12eec <close@plt+0x20d0>
   12970:	cmp	r6, #0
   12974:	beq	129b4 <close@plt+0x1b98>
   12978:	mov	r5, #0
   1297c:	mov	r3, r5
   12980:	b	12520 <close@plt+0x1704>
   12984:	ldr	r3, [sp, #48]	; 0x30
   12988:	ldrb	r3, [r3, #1]
   1298c:	adds	r3, r3, #0
   12990:	movne	r3, #1
   12994:	b	12968 <close@plt+0x1b4c>
   12998:	mov	r3, #0
   1299c:	str	r3, [sp, #44]	; 0x2c
   129a0:	b	12970 <close@plt+0x1b54>
   129a4:	mov	r3, #0
   129a8:	str	r3, [sp, #44]	; 0x2c
   129ac:	b	129b4 <close@plt+0x1b98>
   129b0:	ldr	r5, [sp, #44]	; 0x2c
   129b4:	ldr	r3, [sp, #32]
   129b8:	cmp	sl, #2
   129bc:	movne	r3, #0
   129c0:	andeq	r3, r3, #1
   129c4:	cmp	r3, #0
   129c8:	beq	12520 <close@plt+0x1704>
   129cc:	mov	r8, r9
   129d0:	mov	r7, #2
   129d4:	b	130d4 <close@plt+0x22b8>
   129d8:	ldr	r5, [sp, #32]
   129dc:	b	129b4 <close@plt+0x1b98>
   129e0:	mov	r3, #0
   129e4:	str	r3, [sp, #44]	; 0x2c
   129e8:	mov	r5, r3
   129ec:	b	129b4 <close@plt+0x1b98>
   129f0:	mov	r3, #0
   129f4:	str	r3, [sp, #44]	; 0x2c
   129f8:	cmp	sl, #2
   129fc:	strne	r5, [sp, #68]	; 0x44
   12a00:	movne	r3, #0
   12a04:	movne	r4, #39	; 0x27
   12a08:	bne	12520 <close@plt+0x1704>
   12a0c:	ldr	r3, [sp, #32]
   12a10:	cmp	r3, #0
   12a14:	bne	130c0 <close@plt+0x22a4>
   12a18:	ldr	r3, [sp, #72]	; 0x48
   12a1c:	clz	r3, r3
   12a20:	lsr	r3, r3, #5
   12a24:	cmp	r9, #0
   12a28:	moveq	r3, #0
   12a2c:	cmp	r3, #0
   12a30:	movne	r3, #0
   12a34:	bne	12a5c <close@plt+0x1c40>
   12a38:	cmp	r9, fp
   12a3c:	movhi	r3, #39	; 0x27
   12a40:	strbhi	r3, [r8, fp]
   12a44:	add	r3, fp, #1
   12a48:	cmp	r9, r3
   12a4c:	movhi	r2, #92	; 0x5c
   12a50:	strbhi	r2, [r8, r3]
   12a54:	mov	r3, r9
   12a58:	ldr	r9, [sp, #72]	; 0x48
   12a5c:	add	r2, fp, #2
   12a60:	cmp	r2, r3
   12a64:	movcc	r1, #39	; 0x27
   12a68:	strbcc	r1, [r8, r2]
   12a6c:	add	fp, fp, #3
   12a70:	str	r5, [sp, #68]	; 0x44
   12a74:	ldr	r2, [sp, #32]
   12a78:	str	r2, [sp, #36]	; 0x24
   12a7c:	str	r9, [sp, #72]	; 0x48
   12a80:	mov	r9, r3
   12a84:	mov	r4, #39	; 0x27
   12a88:	mov	r3, #0
   12a8c:	b	1256c <close@plt+0x1750>
   12a90:	mov	r3, #0
   12a94:	str	r3, [sp, #44]	; 0x2c
   12a98:	ldr	r7, [sp, #76]	; 0x4c
   12a9c:	cmp	r7, #1
   12aa0:	bne	12ad8 <close@plt+0x1cbc>
   12aa4:	bl	10d2c <__ctype_b_loc@plt>
   12aa8:	ldr	r2, [r0]
   12aac:	lsl	r3, r4, #1
   12ab0:	ldrh	r5, [r2, r3]
   12ab4:	ubfx	r5, r5, #14, #1
   12ab8:	mov	ip, r7
   12abc:	eor	r3, r5, #1
   12ac0:	ldr	r2, [sp, #28]
   12ac4:	and	r3, r3, r2
   12ac8:	ands	r3, r3, #255	; 0xff
   12acc:	beq	12520 <close@plt+0x1704>
   12ad0:	mov	r5, #0
   12ad4:	b	12d34 <close@plt+0x1f18>
   12ad8:	mov	r2, #0
   12adc:	mov	r3, #0
   12ae0:	strd	r2, [sp, #104]	; 0x68
   12ae4:	ldr	r3, [sp, #24]
   12ae8:	cmn	r3, #1
   12aec:	beq	12b10 <close@plt+0x1cf4>
   12af0:	mov	r3, #0
   12af4:	str	r4, [sp, #88]	; 0x58
   12af8:	str	fp, [sp, #92]	; 0x5c
   12afc:	str	r8, [sp, #56]	; 0x38
   12b00:	mov	r8, r3
   12b04:	str	r9, [sp, #84]	; 0x54
   12b08:	ldr	r9, [sp, #48]	; 0x30
   12b0c:	b	12c5c <close@plt+0x1e40>
   12b10:	ldr	r0, [sp, #48]	; 0x30
   12b14:	bl	10d44 <strlen@plt>
   12b18:	str	r0, [sp, #24]
   12b1c:	b	12af0 <close@plt+0x1cd4>
   12b20:	mov	r1, fp
   12b24:	ldr	r4, [sp, #88]	; 0x58
   12b28:	mov	r2, r8
   12b2c:	mov	ip, r8
   12b30:	ldr	fp, [sp, #92]	; 0x5c
   12b34:	ldr	r8, [sp, #56]	; 0x38
   12b38:	ldr	r9, [sp, #84]	; 0x54
   12b3c:	ldr	r0, [sp, #24]
   12b40:	cmp	r7, r0
   12b44:	bcs	12cfc <close@plt+0x1ee0>
   12b48:	ldrb	r3, [r1]
   12b4c:	cmp	r3, #0
   12b50:	beq	12d04 <close@plt+0x1ee8>
   12b54:	mov	r3, r1
   12b58:	add	r2, r2, #1
   12b5c:	add	r1, r6, r2
   12b60:	cmp	r0, r1
   12b64:	bls	12d0c <close@plt+0x1ef0>
   12b68:	ldrb	r1, [r3, #1]!
   12b6c:	cmp	r1, #0
   12b70:	bne	12b58 <close@plt+0x1d3c>
   12b74:	mov	ip, r2
   12b78:	mov	r5, #0
   12b7c:	b	12d2c <close@plt+0x1f10>
   12b80:	ldr	r3, [sp, #56]	; 0x38
   12b84:	str	r3, [sp, #64]	; 0x40
   12b88:	ldr	r8, [sp, #84]	; 0x54
   12b8c:	mov	r7, #2
   12b90:	b	130d4 <close@plt+0x22b8>
   12b94:	cmp	r2, r7
   12b98:	beq	12c38 <close@plt+0x1e1c>
   12b9c:	ldrb	r3, [r2], #1
   12ba0:	sub	r3, r3, #91	; 0x5b
   12ba4:	cmp	r3, #33	; 0x21
   12ba8:	ldrls	pc, [pc, r3, lsl #2]
   12bac:	b	12b94 <close@plt+0x1d78>
   12bb0:	andeq	r2, r1, r0, lsl #23
   12bb4:	andeq	r2, r1, r0, lsl #23
   12bb8:	muleq	r1, r4, fp
   12bbc:	andeq	r2, r1, r0, lsl #23
   12bc0:	muleq	r1, r4, fp
   12bc4:	andeq	r2, r1, r0, lsl #23
   12bc8:	muleq	r1, r4, fp
   12bcc:	muleq	r1, r4, fp
   12bd0:	muleq	r1, r4, fp
   12bd4:	muleq	r1, r4, fp
   12bd8:	muleq	r1, r4, fp
   12bdc:	muleq	r1, r4, fp
   12be0:	muleq	r1, r4, fp
   12be4:	muleq	r1, r4, fp
   12be8:	muleq	r1, r4, fp
   12bec:	muleq	r1, r4, fp
   12bf0:	muleq	r1, r4, fp
   12bf4:	muleq	r1, r4, fp
   12bf8:	muleq	r1, r4, fp
   12bfc:	muleq	r1, r4, fp
   12c00:	muleq	r1, r4, fp
   12c04:	muleq	r1, r4, fp
   12c08:	muleq	r1, r4, fp
   12c0c:	muleq	r1, r4, fp
   12c10:	muleq	r1, r4, fp
   12c14:	muleq	r1, r4, fp
   12c18:	muleq	r1, r4, fp
   12c1c:	muleq	r1, r4, fp
   12c20:	muleq	r1, r4, fp
   12c24:	muleq	r1, r4, fp
   12c28:	muleq	r1, r4, fp
   12c2c:	muleq	r1, r4, fp
   12c30:	muleq	r1, r4, fp
   12c34:	andeq	r2, r1, r0, lsl #23
   12c38:	ldr	r0, [sp, #100]	; 0x64
   12c3c:	bl	10c90 <iswprint@plt>
   12c40:	cmp	r0, #0
   12c44:	moveq	r5, #0
   12c48:	add	r8, r8, r4
   12c4c:	add	r0, sp, #104	; 0x68
   12c50:	bl	10c3c <mbsinit@plt>
   12c54:	cmp	r0, #0
   12c58:	bne	12cc8 <close@plt+0x1eac>
   12c5c:	add	r7, r6, r8
   12c60:	add	fp, r9, r7
   12c64:	add	r3, sp, #104	; 0x68
   12c68:	ldr	r2, [sp, #24]
   12c6c:	sub	r2, r2, r7
   12c70:	mov	r1, fp
   12c74:	add	r0, sp, #100	; 0x64
   12c78:	bl	14c18 <close@plt+0x3dfc>
   12c7c:	subs	r4, r0, #0
   12c80:	beq	12d18 <close@plt+0x1efc>
   12c84:	cmn	r4, #1
   12c88:	beq	12ce0 <close@plt+0x1ec4>
   12c8c:	cmn	r4, #2
   12c90:	beq	12b20 <close@plt+0x1d04>
   12c94:	ldr	r3, [sp, #32]
   12c98:	cmp	sl, #2
   12c9c:	movne	r3, #0
   12ca0:	andeq	r3, r3, #1
   12ca4:	cmp	r3, #0
   12ca8:	beq	12c38 <close@plt+0x1e1c>
   12cac:	cmp	r4, #1
   12cb0:	bls	12c38 <close@plt+0x1e1c>
   12cb4:	add	r2, r7, #1
   12cb8:	add	r2, r9, r2
   12cbc:	add	r3, r9, r4
   12cc0:	add	r7, r3, r7
   12cc4:	b	12b9c <close@plt+0x1d80>
   12cc8:	ldr	r4, [sp, #88]	; 0x58
   12ccc:	mov	ip, r8
   12cd0:	ldr	fp, [sp, #92]	; 0x5c
   12cd4:	ldr	r8, [sp, #56]	; 0x38
   12cd8:	ldr	r9, [sp, #84]	; 0x54
   12cdc:	b	12d2c <close@plt+0x1f10>
   12ce0:	ldr	r4, [sp, #88]	; 0x58
   12ce4:	mov	ip, r8
   12ce8:	ldr	fp, [sp, #92]	; 0x5c
   12cec:	ldr	r8, [sp, #56]	; 0x38
   12cf0:	ldr	r9, [sp, #84]	; 0x54
   12cf4:	mov	r5, #0
   12cf8:	b	12d2c <close@plt+0x1f10>
   12cfc:	mov	r5, #0
   12d00:	b	12d2c <close@plt+0x1f10>
   12d04:	mov	r5, #0
   12d08:	b	12d2c <close@plt+0x1f10>
   12d0c:	mov	ip, r2
   12d10:	mov	r5, #0
   12d14:	b	12d2c <close@plt+0x1f10>
   12d18:	ldr	r4, [sp, #88]	; 0x58
   12d1c:	mov	ip, r8
   12d20:	ldr	fp, [sp, #92]	; 0x5c
   12d24:	ldr	r8, [sp, #56]	; 0x38
   12d28:	ldr	r9, [sp, #84]	; 0x54
   12d2c:	cmp	ip, #1
   12d30:	bls	12abc <close@plt+0x1ca0>
   12d34:	add	lr, r6, ip
   12d38:	ldr	r3, [sp, #48]	; 0x30
   12d3c:	add	r1, r3, r6
   12d40:	mov	r3, #0
   12d44:	eor	r0, r5, #1
   12d48:	ldr	r2, [sp, #28]
   12d4c:	and	r0, r0, r2
   12d50:	uxtb	r0, r0
   12d54:	str	r0, [sp, #56]	; 0x38
   12d58:	mov	r7, #92	; 0x5c
   12d5c:	ldr	ip, [sp, #36]	; 0x24
   12d60:	str	r5, [sp, #84]	; 0x54
   12d64:	ldr	r2, [sp, #44]	; 0x2c
   12d68:	b	12dd8 <close@plt+0x1fbc>
   12d6c:	cmp	r2, #0
   12d70:	beq	12d80 <close@plt+0x1f64>
   12d74:	cmp	r9, fp
   12d78:	strbhi	r7, [r8, fp]
   12d7c:	add	fp, fp, #1
   12d80:	add	r5, r6, #1
   12d84:	cmp	r5, lr
   12d88:	bcs	12e94 <close@plt+0x2078>
   12d8c:	eor	r2, r3, #1
   12d90:	and	r2, r2, ip
   12d94:	ands	r2, r2, #255	; 0xff
   12d98:	beq	12eb0 <close@plt+0x2094>
   12d9c:	cmp	r9, fp
   12da0:	movhi	r2, #39	; 0x27
   12da4:	strbhi	r2, [r8, fp]
   12da8:	add	r2, fp, #1
   12dac:	cmp	r9, r2
   12db0:	movhi	ip, #39	; 0x27
   12db4:	strbhi	ip, [r8, r2]
   12db8:	add	fp, fp, #2
   12dbc:	ldr	ip, [sp, #56]	; 0x38
   12dc0:	mov	r2, ip
   12dc4:	mov	r6, r5
   12dc8:	cmp	r9, fp
   12dcc:	strbhi	r4, [r8, fp]
   12dd0:	add	fp, fp, #1
   12dd4:	ldrb	r4, [r1, #1]!
   12dd8:	cmp	r0, #0
   12ddc:	beq	12d6c <close@plt+0x1f50>
   12de0:	ldr	r3, [sp, #32]
   12de4:	cmp	r3, #0
   12de8:	bne	1307c <close@plt+0x2260>
   12dec:	eor	r3, ip, #1
   12df0:	cmp	sl, #2
   12df4:	movne	r3, #0
   12df8:	andeq	r3, r3, #1
   12dfc:	cmp	r3, #0
   12e00:	beq	12e38 <close@plt+0x201c>
   12e04:	cmp	r9, fp
   12e08:	movhi	ip, #39	; 0x27
   12e0c:	strbhi	ip, [r8, fp]
   12e10:	add	ip, fp, #1
   12e14:	cmp	r9, ip
   12e18:	movhi	r5, #36	; 0x24
   12e1c:	strbhi	r5, [r8, ip]
   12e20:	add	ip, fp, #2
   12e24:	cmp	r9, ip
   12e28:	movhi	r5, #39	; 0x27
   12e2c:	strbhi	r5, [r8, ip]
   12e30:	add	fp, fp, #3
   12e34:	mov	ip, r3
   12e38:	cmp	r9, fp
   12e3c:	strbhi	r7, [r8, fp]
   12e40:	add	r3, fp, #1
   12e44:	cmp	r9, r3
   12e48:	bls	12e58 <close@plt+0x203c>
   12e4c:	lsr	r5, r4, #6
   12e50:	add	r5, r5, #48	; 0x30
   12e54:	strb	r5, [r8, r3]
   12e58:	add	r3, fp, #2
   12e5c:	cmp	r9, r3
   12e60:	bls	12e70 <close@plt+0x2054>
   12e64:	ubfx	r5, r4, #3, #3
   12e68:	add	r5, r5, #48	; 0x30
   12e6c:	strb	r5, [r8, r3]
   12e70:	add	fp, fp, #3
   12e74:	and	r4, r4, #7
   12e78:	add	r4, r4, #48	; 0x30
   12e7c:	add	r5, r6, #1
   12e80:	cmp	r5, lr
   12e84:	bcs	12ea0 <close@plt+0x2084>
   12e88:	ldr	r3, [sp, #56]	; 0x38
   12e8c:	mov	r6, r5
   12e90:	b	12dc8 <close@plt+0x1fac>
   12e94:	str	ip, [sp, #36]	; 0x24
   12e98:	ldr	r5, [sp, #84]	; 0x54
   12e9c:	b	128cc <close@plt+0x1ab0>
   12ea0:	str	ip, [sp, #36]	; 0x24
   12ea4:	ldr	r5, [sp, #84]	; 0x54
   12ea8:	mov	r3, r0
   12eac:	b	128cc <close@plt+0x1ab0>
   12eb0:	mov	r6, r5
   12eb4:	b	12dc8 <close@plt+0x1fac>
   12eb8:	ldr	r3, [sp, #44]	; 0x2c
   12ebc:	b	12520 <close@plt+0x1704>
   12ec0:	mov	r5, #0
   12ec4:	mov	r3, r5
   12ec8:	mov	r4, #63	; 0x3f
   12ecc:	b	12520 <close@plt+0x1704>
   12ed0:	mov	r5, #0
   12ed4:	mov	r3, r5
   12ed8:	mov	r4, #63	; 0x3f
   12edc:	b	12520 <close@plt+0x1704>
   12ee0:	mov	r5, #0
   12ee4:	mov	r3, r5
   12ee8:	b	12520 <close@plt+0x1704>
   12eec:	mov	r5, #0
   12ef0:	mov	r3, r5
   12ef4:	b	12520 <close@plt+0x1704>
   12ef8:	ldr	r5, [sp, #44]	; 0x2c
   12efc:	ldr	r3, [sp, #32]
   12f00:	b	12520 <close@plt+0x1704>
   12f04:	ldr	r5, [sp, #44]	; 0x2c
   12f08:	mov	r3, #0
   12f0c:	str	r3, [sp, #44]	; 0x2c
   12f10:	b	12520 <close@plt+0x1704>
   12f14:	mov	r4, r3
   12f18:	mov	r5, #0
   12f1c:	b	12578 <close@plt+0x175c>
   12f20:	mov	r5, #0
   12f24:	mov	r4, #97	; 0x61
   12f28:	b	12578 <close@plt+0x175c>
   12f2c:	mov	r5, #0
   12f30:	mov	r3, r5
   12f34:	mov	r4, #92	; 0x5c
   12f38:	b	128cc <close@plt+0x1ab0>
   12f3c:	ldr	r3, [sp, #48]	; 0x30
   12f40:	ldrb	r5, [r3, r6]
   12f44:	adds	r5, r5, #0
   12f48:	movne	r5, #1
   12f4c:	b	1261c <close@plt+0x1800>
   12f50:	cmp	sl, #2
   12f54:	movne	r3, #0
   12f58:	moveq	r3, #1
   12f5c:	ldr	r1, [sp, #32]
   12f60:	cmp	fp, #0
   12f64:	andeq	r2, r3, r1
   12f68:	movne	r2, #0
   12f6c:	cmp	r2, #0
   12f70:	bne	13090 <close@plt+0x2274>
   12f74:	eor	r2, r1, #1
   12f78:	uxtb	r2, r2
   12f7c:	and	r3, r3, r2
   12f80:	ldr	r1, [sp, #68]	; 0x44
   12f84:	ands	r3, r1, r3
   12f88:	beq	1301c <close@plt+0x2200>
   12f8c:	ldr	r2, [sp, #40]	; 0x28
   12f90:	cmp	r2, #0
   12f94:	bne	12fcc <close@plt+0x21b0>
   12f98:	ldr	r2, [sp, #72]	; 0x48
   12f9c:	adds	r2, r2, #0
   12fa0:	movne	r2, #1
   12fa4:	cmp	r9, #0
   12fa8:	movne	r2, #0
   12fac:	str	r2, [sp, #68]	; 0x44
   12fb0:	mov	sl, #2
   12fb4:	ldr	r1, [sp, #40]	; 0x28
   12fb8:	str	r1, [sp, #32]
   12fbc:	cmp	r2, #0
   12fc0:	beq	13010 <close@plt+0x21f4>
   12fc4:	ldr	r9, [sp, #72]	; 0x48
   12fc8:	b	11d24 <close@plt+0xf08>
   12fcc:	ldr	r3, [sp, #168]	; 0xa8
   12fd0:	str	r3, [sp, #16]
   12fd4:	ldr	r3, [sp, #164]	; 0xa4
   12fd8:	str	r3, [sp, #12]
   12fdc:	ldr	r3, [sp, #160]	; 0xa0
   12fe0:	str	r3, [sp, #8]
   12fe4:	ldr	r3, [sp, #156]	; 0x9c
   12fe8:	str	r3, [sp, #4]
   12fec:	mov	r3, #5
   12ff0:	str	r3, [sp]
   12ff4:	ldr	r3, [sp, #24]
   12ff8:	ldr	r2, [sp, #48]	; 0x30
   12ffc:	ldr	r1, [sp, #72]	; 0x48
   13000:	ldr	r0, [sp, #64]	; 0x40
   13004:	bl	11cac <close@plt+0xe90>
   13008:	mov	fp, r0
   1300c:	b	1312c <close@plt+0x2310>
   13010:	mov	r8, r9
   13014:	mov	r2, r3
   13018:	b	13020 <close@plt+0x2204>
   1301c:	mov	r8, r9
   13020:	ldr	r3, [sp, #60]	; 0x3c
   13024:	cmp	r3, #0
   13028:	moveq	r2, #0
   1302c:	andne	r2, r2, #1
   13030:	cmp	r2, #0
   13034:	beq	13064 <close@plt+0x2248>
   13038:	mov	r2, r3
   1303c:	ldrb	r3, [r3]
   13040:	cmp	r3, #0
   13044:	beq	13064 <close@plt+0x2248>
   13048:	ldr	r1, [sp, #64]	; 0x40
   1304c:	cmp	r8, fp
   13050:	strbhi	r3, [r1, fp]
   13054:	add	fp, fp, #1
   13058:	ldrb	r3, [r2, #1]!
   1305c:	cmp	r3, #0
   13060:	bne	1304c <close@plt+0x2230>
   13064:	cmp	r8, fp
   13068:	bls	1312c <close@plt+0x2310>
   1306c:	mov	r3, #0
   13070:	ldr	r2, [sp, #64]	; 0x40
   13074:	strb	r3, [r2, fp]
   13078:	b	1312c <close@plt+0x2310>
   1307c:	mov	r8, r9
   13080:	mov	r7, sl
   13084:	ldr	r3, [sp, #32]
   13088:	str	r3, [sp, #28]
   1308c:	b	130d4 <close@plt+0x22b8>
   13090:	mov	r8, r9
   13094:	mov	r7, #2
   13098:	b	130d4 <close@plt+0x22b8>
   1309c:	mov	r8, r9
   130a0:	mov	r7, sl
   130a4:	b	130d4 <close@plt+0x22b8>
   130a8:	mov	r8, r9
   130ac:	mov	r7, sl
   130b0:	b	130d4 <close@plt+0x22b8>
   130b4:	mov	r8, r9
   130b8:	mov	r7, sl
   130bc:	b	130d4 <close@plt+0x22b8>
   130c0:	mov	r8, r9
   130c4:	mov	r7, sl
   130c8:	b	130d4 <close@plt+0x22b8>
   130cc:	mov	r8, r9
   130d0:	mov	r7, sl
   130d4:	ldr	r3, [sp, #28]
   130d8:	cmp	r7, #2
   130dc:	movne	r3, #0
   130e0:	andeq	r3, r3, #1
   130e4:	cmp	r3, #0
   130e8:	movne	r7, #4
   130ec:	ldr	r3, [sp, #168]	; 0xa8
   130f0:	str	r3, [sp, #16]
   130f4:	ldr	r3, [sp, #164]	; 0xa4
   130f8:	str	r3, [sp, #12]
   130fc:	mov	r3, #0
   13100:	str	r3, [sp, #8]
   13104:	ldr	r3, [sp, #156]	; 0x9c
   13108:	bic	r3, r3, #2
   1310c:	str	r3, [sp, #4]
   13110:	str	r7, [sp]
   13114:	ldr	r3, [sp, #24]
   13118:	ldr	r2, [sp, #48]	; 0x30
   1311c:	mov	r1, r8
   13120:	ldr	r0, [sp, #64]	; 0x40
   13124:	bl	11cac <close@plt+0xe90>
   13128:	mov	fp, r0
   1312c:	mov	r0, fp
   13130:	add	sp, sp, #116	; 0x74
   13134:	ldrd	r4, [sp]
   13138:	ldrd	r6, [sp, #8]
   1313c:	ldrd	r8, [sp, #16]
   13140:	ldrd	sl, [sp, #24]
   13144:	add	sp, sp, #32
   13148:	pop	{pc}		; (ldr pc, [sp], #4)
   1314c:	mov	r8, r9
   13150:	mov	r7, sl
   13154:	b	130ec <close@plt+0x22d0>
   13158:	add	fp, fp, #4
   1315c:	str	r3, [sp, #36]	; 0x24
   13160:	mov	r5, #0
   13164:	mov	r4, #48	; 0x30
   13168:	b	12520 <close@plt+0x1704>
   1316c:	mov	r3, #1
   13170:	str	r3, [sp, #32]
   13174:	str	r3, [sp, #28]
   13178:	str	r3, [sp, #52]	; 0x34
   1317c:	movw	r3, #21484	; 0x53ec
   13180:	movt	r3, #1
   13184:	str	r3, [sp, #60]	; 0x3c
   13188:	mov	fp, #0
   1318c:	mov	sl, #5
   13190:	b	11d84 <close@plt+0xf68>
   13194:	ldr	r3, [sp, #48]	; 0x30
   13198:	ldrb	r4, [r3, r6]
   1319c:	cmp	r4, #126	; 0x7e
   131a0:	ldrls	pc, [pc, r4, lsl #2]
   131a4:	b	12a90 <close@plt+0x1c74>
   131a8:	andeq	r2, r1, r8, lsl r2
   131ac:	muleq	r1, r0, sl
   131b0:	muleq	r1, r0, sl
   131b4:	muleq	r1, r0, sl
   131b8:	muleq	r1, r0, sl
   131bc:	muleq	r1, r0, sl
   131c0:	muleq	r1, r0, sl
   131c4:	andeq	r2, r1, r0, lsr #30
   131c8:			; <UNDEFINED> instruction: 0x000124bc
   131cc:	andeq	r2, r1, r0, ror #16
   131d0:	andeq	r2, r1, ip, lsl r9
   131d4:	andeq	r2, r1, r4, ror r8
   131d8:	ldrdeq	r2, [r1], -r0
   131dc:	andeq	r2, r1, r4, ror #9
   131e0:	muleq	r1, r0, sl
   131e4:	muleq	r1, r0, sl
   131e8:	muleq	r1, r0, sl
   131ec:	muleq	r1, r0, sl
   131f0:	muleq	r1, r0, sl
   131f4:	muleq	r1, r0, sl
   131f8:	muleq	r1, r0, sl
   131fc:	muleq	r1, r0, sl
   13200:	muleq	r1, r0, sl
   13204:	muleq	r1, r0, sl
   13208:	muleq	r1, r0, sl
   1320c:	muleq	r1, r0, sl
   13210:	muleq	r1, r0, sl
   13214:	muleq	r1, r0, sl
   13218:	muleq	r1, r0, sl
   1321c:	muleq	r1, r0, sl
   13220:	muleq	r1, r0, sl
   13224:	muleq	r1, r0, sl
   13228:	andeq	r2, r1, r4, lsr #19
   1322c:	andeq	r2, r1, r0, ror #19
   13230:	andeq	r2, r1, r0, ror #19
   13234:	muleq	r1, r8, r9
   13238:	andeq	r2, r1, r0, ror #19
   1323c:	andeq	r2, r1, r4, lsl #30
   13240:	andeq	r2, r1, r0, ror #19
   13244:	strdeq	r2, [r1], -r0
   13248:	andeq	r2, r1, r0, ror #19
   1324c:	andeq	r2, r1, r0, ror #19
   13250:	andeq	r2, r1, r0, ror #19
   13254:	andeq	r2, r1, r4, lsl #30
   13258:	andeq	r2, r1, r4, lsl #30
   1325c:	andeq	r2, r1, r4, lsl #30
   13260:	andeq	r2, r1, r4, lsl #30
   13264:	andeq	r2, r1, r4, lsl #30
   13268:	andeq	r2, r1, r4, lsl #30
   1326c:	andeq	r2, r1, r4, lsl #30
   13270:	andeq	r2, r1, r4, lsl #30
   13274:	andeq	r2, r1, r4, lsl #30
   13278:	andeq	r2, r1, r4, lsl #30
   1327c:	andeq	r2, r1, r4, lsl #30
   13280:	andeq	r2, r1, r4, lsl #30
   13284:	andeq	r2, r1, r4, lsl #30
   13288:	andeq	r2, r1, r4, lsl #30
   1328c:	andeq	r2, r1, r4, lsl #30
   13290:	andeq	r2, r1, r4, lsl #30
   13294:	andeq	r2, r1, r0, ror #19
   13298:	andeq	r2, r1, r0, ror #19
   1329c:	andeq	r2, r1, r0, ror #19
   132a0:	andeq	r2, r1, r0, ror #19
   132a4:	andeq	r2, r1, r0, asr r3
   132a8:	muleq	r1, r0, sl
   132ac:	andeq	r2, r1, r4, lsl #30
   132b0:	andeq	r2, r1, r4, lsl #30
   132b4:	andeq	r2, r1, r4, lsl #30
   132b8:	andeq	r2, r1, r4, lsl #30
   132bc:	andeq	r2, r1, r4, lsl #30
   132c0:	andeq	r2, r1, r4, lsl #30
   132c4:	andeq	r2, r1, r4, lsl #30
   132c8:	andeq	r2, r1, r4, lsl #30
   132cc:	andeq	r2, r1, r4, lsl #30
   132d0:	andeq	r2, r1, r4, lsl #30
   132d4:	andeq	r2, r1, r4, lsl #30
   132d8:	andeq	r2, r1, r4, lsl #30
   132dc:	andeq	r2, r1, r4, lsl #30
   132e0:	andeq	r2, r1, r4, lsl #30
   132e4:	andeq	r2, r1, r4, lsl #30
   132e8:	andeq	r2, r1, r4, lsl #30
   132ec:	andeq	r2, r1, r4, lsl #30
   132f0:	andeq	r2, r1, r4, lsl #30
   132f4:	andeq	r2, r1, r4, lsl #30
   132f8:	andeq	r2, r1, r4, lsl #30
   132fc:	andeq	r2, r1, r4, lsl #30
   13300:	andeq	r2, r1, r4, lsl #30
   13304:	andeq	r2, r1, r4, lsl #30
   13308:	andeq	r2, r1, r4, lsl #30
   1330c:	andeq	r2, r1, r4, lsl #30
   13310:	andeq	r2, r1, r4, lsl #30
   13314:	andeq	r2, r1, r0, ror #19
   13318:	andeq	r2, r1, r8, lsl #17
   1331c:	andeq	r2, r1, r4, lsl #30
   13320:	andeq	r2, r1, r0, ror #19
   13324:	andeq	r2, r1, r4, lsl #30
   13328:	andeq	r2, r1, r0, ror #19
   1332c:	andeq	r2, r1, r4, lsl #30
   13330:	andeq	r2, r1, r4, lsl #30
   13334:	andeq	r2, r1, r4, lsl #30
   13338:	andeq	r2, r1, r4, lsl #30
   1333c:	andeq	r2, r1, r4, lsl #30
   13340:	andeq	r2, r1, r4, lsl #30
   13344:	andeq	r2, r1, r4, lsl #30
   13348:	andeq	r2, r1, r4, lsl #30
   1334c:	andeq	r2, r1, r4, lsl #30
   13350:	andeq	r2, r1, r4, lsl #30
   13354:	andeq	r2, r1, r4, lsl #30
   13358:	andeq	r2, r1, r4, lsl #30
   1335c:	andeq	r2, r1, r4, lsl #30
   13360:	andeq	r2, r1, r4, lsl #30
   13364:	andeq	r2, r1, r4, lsl #30
   13368:	andeq	r2, r1, r4, lsl #30
   1336c:	andeq	r2, r1, r4, lsl #30
   13370:	andeq	r2, r1, r4, lsl #30
   13374:	andeq	r2, r1, r4, lsl #30
   13378:	andeq	r2, r1, r4, lsl #30
   1337c:	andeq	r2, r1, r4, lsl #30
   13380:	andeq	r2, r1, r4, lsl #30
   13384:	andeq	r2, r1, r4, lsl #30
   13388:	andeq	r2, r1, r4, lsl #30
   1338c:	andeq	r2, r1, r4, lsl #30
   13390:	andeq	r2, r1, r4, lsl #30
   13394:	andeq	r2, r1, r8, asr #18
   13398:	andeq	r2, r1, r0, ror #19
   1339c:	andeq	r2, r1, r8, asr #18
   133a0:	muleq	r1, r8, r9
   133a4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   133a8:	strd	r6, [sp, #8]
   133ac:	strd	r8, [sp, #16]
   133b0:	strd	sl, [sp, #24]
   133b4:	str	lr, [sp, #32]
   133b8:	sub	sp, sp, #52	; 0x34
   133bc:	mov	r5, r0
   133c0:	str	r1, [sp, #24]
   133c4:	str	r2, [sp, #28]
   133c8:	mov	r4, r3
   133cc:	bl	10d50 <__errno_location@plt>
   133d0:	str	r0, [sp, #32]
   133d4:	ldr	r3, [r0]
   133d8:	str	r3, [sp, #36]	; 0x24
   133dc:	movw	r3, #24804	; 0x60e4
   133e0:	movt	r3, #2
   133e4:	ldr	r6, [r3]
   133e8:	cmn	r5, #-2147483647	; 0x80000001
   133ec:	movne	r3, #0
   133f0:	moveq	r3, #1
   133f4:	orrs	r3, r3, r5, lsr #31
   133f8:	bne	1355c <close@plt+0x2740>
   133fc:	movw	r3, #24804	; 0x60e4
   13400:	movt	r3, #2
   13404:	ldr	r2, [r3, #4]
   13408:	cmp	r2, r5
   1340c:	bgt	1347c <close@plt+0x2660>
   13410:	str	r2, [sp, #44]	; 0x2c
   13414:	add	r3, r3, #8
   13418:	cmp	r6, r3
   1341c:	beq	13560 <close@plt+0x2744>
   13420:	sub	r2, r5, r2
   13424:	mov	r3, #8
   13428:	str	r3, [sp]
   1342c:	mvn	r3, #-2147483648	; 0x80000000
   13430:	add	r2, r2, #1
   13434:	add	r1, sp, #44	; 0x2c
   13438:	mov	r0, r6
   1343c:	bl	14564 <close@plt+0x3748>
   13440:	mov	r6, r0
   13444:	movw	r3, #24804	; 0x60e4
   13448:	movt	r3, #2
   1344c:	str	r0, [r3]
   13450:	movw	r7, #24804	; 0x60e4
   13454:	movt	r7, #2
   13458:	ldr	r0, [r7, #4]
   1345c:	ldr	r2, [sp, #44]	; 0x2c
   13460:	sub	r2, r2, r0
   13464:	lsl	r2, r2, #3
   13468:	mov	r1, #0
   1346c:	add	r0, r6, r0, lsl #3
   13470:	bl	10d68 <memset@plt>
   13474:	ldr	r3, [sp, #44]	; 0x2c
   13478:	str	r3, [r7, #4]
   1347c:	add	fp, r6, r5, lsl #3
   13480:	ldr	r8, [r6, r5, lsl #3]
   13484:	ldr	r7, [fp, #4]
   13488:	ldr	r3, [r4, #4]
   1348c:	orr	r9, r3, #1
   13490:	add	sl, r4, #8
   13494:	ldr	r3, [r4, #44]	; 0x2c
   13498:	str	r3, [sp, #16]
   1349c:	ldr	r3, [r4, #40]	; 0x28
   134a0:	str	r3, [sp, #12]
   134a4:	str	sl, [sp, #8]
   134a8:	str	r9, [sp, #4]
   134ac:	ldr	r3, [r4]
   134b0:	str	r3, [sp]
   134b4:	ldr	r3, [sp, #28]
   134b8:	ldr	r2, [sp, #24]
   134bc:	mov	r1, r8
   134c0:	mov	r0, r7
   134c4:	bl	11cac <close@plt+0xe90>
   134c8:	cmp	r8, r0
   134cc:	bhi	13530 <close@plt+0x2714>
   134d0:	add	r8, r0, #1
   134d4:	str	r8, [r6, r5, lsl #3]
   134d8:	movw	r3, #24916	; 0x6154
   134dc:	movt	r3, #2
   134e0:	cmp	r7, r3
   134e4:	beq	134f0 <close@plt+0x26d4>
   134e8:	mov	r0, r7
   134ec:	bl	14ab4 <close@plt+0x3c98>
   134f0:	mov	r0, r8
   134f4:	bl	14360 <close@plt+0x3544>
   134f8:	mov	r7, r0
   134fc:	str	r0, [fp, #4]
   13500:	ldr	r3, [r4, #44]	; 0x2c
   13504:	str	r3, [sp, #16]
   13508:	ldr	r3, [r4, #40]	; 0x28
   1350c:	str	r3, [sp, #12]
   13510:	str	sl, [sp, #8]
   13514:	str	r9, [sp, #4]
   13518:	ldr	r3, [r4]
   1351c:	str	r3, [sp]
   13520:	ldr	r3, [sp, #28]
   13524:	ldr	r2, [sp, #24]
   13528:	mov	r1, r8
   1352c:	bl	11cac <close@plt+0xe90>
   13530:	ldr	r3, [sp, #32]
   13534:	ldr	r2, [sp, #36]	; 0x24
   13538:	str	r2, [r3]
   1353c:	mov	r0, r7
   13540:	add	sp, sp, #52	; 0x34
   13544:	ldrd	r4, [sp]
   13548:	ldrd	r6, [sp, #8]
   1354c:	ldrd	r8, [sp, #16]
   13550:	ldrd	sl, [sp, #24]
   13554:	add	sp, sp, #32
   13558:	pop	{pc}		; (ldr pc, [sp], #4)
   1355c:	bl	10e10 <abort@plt>
   13560:	sub	r2, r5, r2
   13564:	mov	r3, #8
   13568:	str	r3, [sp]
   1356c:	mvn	r3, #-2147483648	; 0x80000000
   13570:	add	r2, r2, #1
   13574:	add	r1, sp, #44	; 0x2c
   13578:	mov	r0, #0
   1357c:	bl	14564 <close@plt+0x3748>
   13580:	mov	r6, r0
   13584:	movw	r3, #24804	; 0x60e4
   13588:	movt	r3, #2
   1358c:	str	r0, [r3]
   13590:	ldrd	r2, [r3, #8]
   13594:	strd	r2, [r0]
   13598:	b	13450 <close@plt+0x2634>
   1359c:	strd	r4, [sp, #-16]!
   135a0:	str	r6, [sp, #8]
   135a4:	str	lr, [sp, #12]
   135a8:	mov	r4, r0
   135ac:	bl	10d50 <__errno_location@plt>
   135b0:	mov	r5, r0
   135b4:	ldr	r6, [r0]
   135b8:	cmp	r4, #0
   135bc:	ldr	r3, [pc, #32]	; 135e4 <close@plt+0x27c8>
   135c0:	moveq	r4, r3
   135c4:	mov	r1, #48	; 0x30
   135c8:	mov	r0, r4
   135cc:	bl	146d4 <close@plt+0x38b8>
   135d0:	str	r6, [r5]
   135d4:	ldrd	r4, [sp]
   135d8:	ldr	r6, [sp, #8]
   135dc:	add	sp, sp, #12
   135e0:	pop	{pc}		; (ldr pc, [sp], #4)
   135e4:	andeq	r6, r2, r4, asr r2
   135e8:	subs	r3, r0, #0
   135ec:	ldr	r2, [pc, #8]	; 135fc <close@plt+0x27e0>
   135f0:	moveq	r3, r2
   135f4:	ldr	r0, [r3]
   135f8:	bx	lr
   135fc:	andeq	r6, r2, r4, asr r2
   13600:	subs	r3, r0, #0
   13604:	ldr	r2, [pc, #8]	; 13614 <close@plt+0x27f8>
   13608:	moveq	r3, r2
   1360c:	str	r1, [r3]
   13610:	bx	lr
   13614:	andeq	r6, r2, r4, asr r2
   13618:	push	{lr}		; (str lr, [sp, #-4]!)
   1361c:	subs	r3, r0, #0
   13620:	ldr	r0, [pc, #44]	; 13654 <close@plt+0x2838>
   13624:	moveq	r3, r0
   13628:	add	r3, r3, #8
   1362c:	lsr	lr, r1, #5
   13630:	and	r1, r1, #31
   13634:	ldr	ip, [r3, lr, lsl #2]
   13638:	lsr	r0, ip, r1
   1363c:	eor	r2, r2, r0
   13640:	and	r2, r2, #1
   13644:	eor	r1, ip, r2, lsl r1
   13648:	str	r1, [r3, lr, lsl #2]
   1364c:	and	r0, r0, #1
   13650:	pop	{pc}		; (ldr pc, [sp], #4)
   13654:	andeq	r6, r2, r4, asr r2
   13658:	subs	r3, r0, #0
   1365c:	ldr	r2, [pc, #12]	; 13670 <close@plt+0x2854>
   13660:	moveq	r3, r2
   13664:	ldr	r0, [r3, #4]
   13668:	str	r1, [r3, #4]
   1366c:	bx	lr
   13670:	andeq	r6, r2, r4, asr r2
   13674:	subs	r3, r0, #0
   13678:	ldr	r0, [pc, #44]	; 136ac <close@plt+0x2890>
   1367c:	moveq	r3, r0
   13680:	mov	r0, #10
   13684:	str	r0, [r3]
   13688:	cmp	r2, #0
   1368c:	cmpne	r1, #0
   13690:	beq	136a0 <close@plt+0x2884>
   13694:	str	r1, [r3, #40]	; 0x28
   13698:	str	r2, [r3, #44]	; 0x2c
   1369c:	bx	lr
   136a0:	str	r4, [sp, #-8]!
   136a4:	str	lr, [sp, #4]
   136a8:	bl	10e10 <abort@plt>
   136ac:	andeq	r6, r2, r4, asr r2
   136b0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   136b4:	strd	r6, [sp, #8]
   136b8:	strd	r8, [sp, #16]
   136bc:	str	sl, [sp, #24]
   136c0:	str	lr, [sp, #28]
   136c4:	sub	sp, sp, #24
   136c8:	mov	r7, r0
   136cc:	mov	r8, r1
   136d0:	mov	r9, r2
   136d4:	mov	sl, r3
   136d8:	ldr	r4, [sp, #56]	; 0x38
   136dc:	cmp	r4, #0
   136e0:	ldr	r3, [pc, #104]	; 13750 <close@plt+0x2934>
   136e4:	moveq	r4, r3
   136e8:	bl	10d50 <__errno_location@plt>
   136ec:	mov	r5, r0
   136f0:	ldr	r6, [r0]
   136f4:	ldr	r3, [r4, #44]	; 0x2c
   136f8:	str	r3, [sp, #16]
   136fc:	ldr	r3, [r4, #40]	; 0x28
   13700:	str	r3, [sp, #12]
   13704:	add	r3, r4, #8
   13708:	str	r3, [sp, #8]
   1370c:	ldr	r3, [r4, #4]
   13710:	str	r3, [sp, #4]
   13714:	ldr	r3, [r4]
   13718:	str	r3, [sp]
   1371c:	mov	r3, sl
   13720:	mov	r2, r9
   13724:	mov	r1, r8
   13728:	mov	r0, r7
   1372c:	bl	11cac <close@plt+0xe90>
   13730:	str	r6, [r5]
   13734:	add	sp, sp, #24
   13738:	ldrd	r4, [sp]
   1373c:	ldrd	r6, [sp, #8]
   13740:	ldrd	r8, [sp, #16]
   13744:	ldr	sl, [sp, #24]
   13748:	add	sp, sp, #28
   1374c:	pop	{pc}		; (ldr pc, [sp], #4)
   13750:	andeq	r6, r2, r4, asr r2
   13754:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13758:	strd	r6, [sp, #8]
   1375c:	strd	r8, [sp, #16]
   13760:	strd	sl, [sp, #24]
   13764:	str	lr, [sp, #32]
   13768:	sub	sp, sp, #44	; 0x2c
   1376c:	mov	r8, r0
   13770:	mov	sl, r1
   13774:	mov	r6, r2
   13778:	subs	r4, r3, #0
   1377c:	ldr	r3, [pc, #200]	; 1384c <close@plt+0x2a30>
   13780:	moveq	r4, r3
   13784:	bl	10d50 <__errno_location@plt>
   13788:	mov	r7, r0
   1378c:	ldr	fp, [r0]
   13790:	ldr	r5, [r4, #4]
   13794:	cmp	r6, #0
   13798:	orreq	r5, r5, #1
   1379c:	add	r9, r4, #8
   137a0:	ldr	r3, [r4, #44]	; 0x2c
   137a4:	str	r3, [sp, #16]
   137a8:	ldr	r3, [r4, #40]	; 0x28
   137ac:	str	r3, [sp, #12]
   137b0:	str	r9, [sp, #8]
   137b4:	str	r5, [sp, #4]
   137b8:	ldr	r3, [r4]
   137bc:	str	r3, [sp]
   137c0:	str	sl, [sp, #36]	; 0x24
   137c4:	mov	r3, sl
   137c8:	str	r8, [sp, #32]
   137cc:	mov	r2, r8
   137d0:	mov	r1, #0
   137d4:	mov	r0, r1
   137d8:	bl	11cac <close@plt+0xe90>
   137dc:	mov	sl, r0
   137e0:	add	r8, r0, #1
   137e4:	mov	r0, r8
   137e8:	bl	14360 <close@plt+0x3544>
   137ec:	str	r0, [sp, #28]
   137f0:	ldr	r3, [r4, #44]	; 0x2c
   137f4:	str	r3, [sp, #16]
   137f8:	ldr	r3, [r4, #40]	; 0x28
   137fc:	str	r3, [sp, #12]
   13800:	str	r9, [sp, #8]
   13804:	str	r5, [sp, #4]
   13808:	ldr	r3, [r4]
   1380c:	str	r3, [sp]
   13810:	ldr	r3, [sp, #36]	; 0x24
   13814:	ldr	r2, [sp, #32]
   13818:	mov	r1, r8
   1381c:	bl	11cac <close@plt+0xe90>
   13820:	str	fp, [r7]
   13824:	cmp	r6, #0
   13828:	strne	sl, [r6]
   1382c:	ldr	r0, [sp, #28]
   13830:	add	sp, sp, #44	; 0x2c
   13834:	ldrd	r4, [sp]
   13838:	ldrd	r6, [sp, #8]
   1383c:	ldrd	r8, [sp, #16]
   13840:	ldrd	sl, [sp, #24]
   13844:	add	sp, sp, #32
   13848:	pop	{pc}		; (ldr pc, [sp], #4)
   1384c:	andeq	r6, r2, r4, asr r2
   13850:	str	r4, [sp, #-8]!
   13854:	str	lr, [sp, #4]
   13858:	mov	r3, r2
   1385c:	mov	r2, #0
   13860:	bl	13754 <close@plt+0x2938>
   13864:	ldr	r4, [sp]
   13868:	add	sp, sp, #4
   1386c:	pop	{pc}		; (ldr pc, [sp], #4)
   13870:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13874:	strd	r6, [sp, #8]
   13878:	str	r8, [sp, #16]
   1387c:	str	lr, [sp, #20]
   13880:	movw	r3, #24804	; 0x60e4
   13884:	movt	r3, #2
   13888:	ldr	r7, [r3]
   1388c:	ldr	r3, [r3, #4]
   13890:	cmp	r3, #1
   13894:	ble	138c0 <close@plt+0x2aa4>
   13898:	mov	r4, #1
   1389c:	add	r6, r7, #4
   138a0:	movw	r5, #24804	; 0x60e4
   138a4:	movt	r5, #2
   138a8:	ldr	r0, [r6, r4, lsl #3]
   138ac:	bl	14ab4 <close@plt+0x3c98>
   138b0:	add	r4, r4, #1
   138b4:	ldr	r3, [r5, #4]
   138b8:	cmp	r3, r4
   138bc:	bgt	138a8 <close@plt+0x2a8c>
   138c0:	ldr	r0, [r7, #4]
   138c4:	movw	r3, #24916	; 0x6154
   138c8:	movt	r3, #2
   138cc:	cmp	r0, r3
   138d0:	beq	138f4 <close@plt+0x2ad8>
   138d4:	bl	14ab4 <close@plt+0x3c98>
   138d8:	movw	r3, #24804	; 0x60e4
   138dc:	movt	r3, #2
   138e0:	mov	r2, #256	; 0x100
   138e4:	str	r2, [r3, #8]
   138e8:	movw	r2, #24916	; 0x6154
   138ec:	movt	r2, #2
   138f0:	str	r2, [r3, #12]
   138f4:	ldr	r3, [pc, #64]	; 1393c <close@plt+0x2b20>
   138f8:	cmp	r7, r3
   138fc:	beq	13918 <close@plt+0x2afc>
   13900:	mov	r0, r7
   13904:	bl	14ab4 <close@plt+0x3c98>
   13908:	movw	r3, #24804	; 0x60e4
   1390c:	movt	r3, #2
   13910:	add	r2, r3, #8
   13914:	str	r2, [r3]
   13918:	movw	r3, #24804	; 0x60e4
   1391c:	movt	r3, #2
   13920:	mov	r2, #1
   13924:	str	r2, [r3, #4]
   13928:	ldrd	r4, [sp]
   1392c:	ldrd	r6, [sp, #8]
   13930:	ldr	r8, [sp, #16]
   13934:	add	sp, sp, #20
   13938:	pop	{pc}		; (ldr pc, [sp], #4)
   1393c:	andeq	r6, r2, ip, ror #1
   13940:	str	r4, [sp, #-8]!
   13944:	str	lr, [sp, #4]
   13948:	ldr	r3, [pc, #16]	; 13960 <close@plt+0x2b44>
   1394c:	mvn	r2, #0
   13950:	bl	133a4 <close@plt+0x2588>
   13954:	ldr	r4, [sp]
   13958:	add	sp, sp, #4
   1395c:	pop	{pc}		; (ldr pc, [sp], #4)
   13960:	andeq	r6, r2, r4, asr r2
   13964:	str	r4, [sp, #-8]!
   13968:	str	lr, [sp, #4]
   1396c:	ldr	r3, [pc, #12]	; 13980 <close@plt+0x2b64>
   13970:	bl	133a4 <close@plt+0x2588>
   13974:	ldr	r4, [sp]
   13978:	add	sp, sp, #4
   1397c:	pop	{pc}		; (ldr pc, [sp], #4)
   13980:	andeq	r6, r2, r4, asr r2
   13984:	str	r4, [sp, #-8]!
   13988:	str	lr, [sp, #4]
   1398c:	mov	r1, r0
   13990:	mov	r0, #0
   13994:	bl	13940 <close@plt+0x2b24>
   13998:	ldr	r4, [sp]
   1399c:	add	sp, sp, #4
   139a0:	pop	{pc}		; (ldr pc, [sp], #4)
   139a4:	str	r4, [sp, #-8]!
   139a8:	str	lr, [sp, #4]
   139ac:	mov	r2, r1
   139b0:	mov	r1, r0
   139b4:	mov	r0, #0
   139b8:	bl	13964 <close@plt+0x2b48>
   139bc:	ldr	r4, [sp]
   139c0:	add	sp, sp, #4
   139c4:	pop	{pc}		; (ldr pc, [sp], #4)
   139c8:	strd	r4, [sp, #-12]!
   139cc:	str	lr, [sp, #8]
   139d0:	sub	sp, sp, #52	; 0x34
   139d4:	mov	r4, r0
   139d8:	mov	r5, r2
   139dc:	mov	r0, sp
   139e0:	bl	11b18 <close@plt+0xcfc>
   139e4:	mov	r3, sp
   139e8:	mvn	r2, #0
   139ec:	mov	r1, r5
   139f0:	mov	r0, r4
   139f4:	bl	133a4 <close@plt+0x2588>
   139f8:	add	sp, sp, #52	; 0x34
   139fc:	ldrd	r4, [sp]
   13a00:	add	sp, sp, #8
   13a04:	pop	{pc}		; (ldr pc, [sp], #4)
   13a08:	strd	r4, [sp, #-16]!
   13a0c:	str	r6, [sp, #8]
   13a10:	str	lr, [sp, #12]
   13a14:	sub	sp, sp, #48	; 0x30
   13a18:	mov	r4, r0
   13a1c:	mov	r5, r2
   13a20:	mov	r6, r3
   13a24:	mov	r0, sp
   13a28:	bl	11b18 <close@plt+0xcfc>
   13a2c:	mov	r3, sp
   13a30:	mov	r2, r6
   13a34:	mov	r1, r5
   13a38:	mov	r0, r4
   13a3c:	bl	133a4 <close@plt+0x2588>
   13a40:	add	sp, sp, #48	; 0x30
   13a44:	ldrd	r4, [sp]
   13a48:	ldr	r6, [sp, #8]
   13a4c:	add	sp, sp, #12
   13a50:	pop	{pc}		; (ldr pc, [sp], #4)
   13a54:	str	r4, [sp, #-8]!
   13a58:	str	lr, [sp, #4]
   13a5c:	mov	r2, r1
   13a60:	mov	r1, r0
   13a64:	mov	r0, #0
   13a68:	bl	139c8 <close@plt+0x2bac>
   13a6c:	ldr	r4, [sp]
   13a70:	add	sp, sp, #4
   13a74:	pop	{pc}		; (ldr pc, [sp], #4)
   13a78:	str	r4, [sp, #-8]!
   13a7c:	str	lr, [sp, #4]
   13a80:	mov	r3, r2
   13a84:	mov	r2, r1
   13a88:	mov	r1, r0
   13a8c:	mov	r0, #0
   13a90:	bl	13a08 <close@plt+0x2bec>
   13a94:	ldr	r4, [sp]
   13a98:	add	sp, sp, #4
   13a9c:	pop	{pc}		; (ldr pc, [sp], #4)
   13aa0:	strd	r4, [sp, #-12]!
   13aa4:	str	lr, [sp, #8]
   13aa8:	sub	sp, sp, #52	; 0x34
   13aac:	mov	r4, r0
   13ab0:	mov	r5, r1
   13ab4:	mov	r1, r2
   13ab8:	ldr	r0, [pc, #92]	; 13b1c <close@plt+0x2d00>
   13abc:	ldrd	r2, [r0]
   13ac0:	strd	r2, [sp]
   13ac4:	ldrd	r2, [r0, #8]
   13ac8:	strd	r2, [sp, #8]
   13acc:	ldrd	r2, [r0, #16]
   13ad0:	strd	r2, [sp, #16]
   13ad4:	ldrd	r2, [r0, #24]
   13ad8:	strd	r2, [sp, #24]
   13adc:	ldrd	r2, [r0, #32]
   13ae0:	strd	r2, [sp, #32]
   13ae4:	ldrd	r2, [r0, #40]	; 0x28
   13ae8:	strd	r2, [sp, #40]	; 0x28
   13aec:	mov	r2, #1
   13af0:	mov	r0, sp
   13af4:	bl	13618 <close@plt+0x27fc>
   13af8:	mov	r3, sp
   13afc:	mov	r2, r5
   13b00:	mov	r1, r4
   13b04:	mov	r0, #0
   13b08:	bl	133a4 <close@plt+0x2588>
   13b0c:	add	sp, sp, #52	; 0x34
   13b10:	ldrd	r4, [sp]
   13b14:	add	sp, sp, #8
   13b18:	pop	{pc}		; (ldr pc, [sp], #4)
   13b1c:	andeq	r6, r2, r4, asr r2
   13b20:	str	r4, [sp, #-8]!
   13b24:	str	lr, [sp, #4]
   13b28:	mov	r2, r1
   13b2c:	mvn	r1, #0
   13b30:	bl	13aa0 <close@plt+0x2c84>
   13b34:	ldr	r4, [sp]
   13b38:	add	sp, sp, #4
   13b3c:	pop	{pc}		; (ldr pc, [sp], #4)
   13b40:	str	r4, [sp, #-8]!
   13b44:	str	lr, [sp, #4]
   13b48:	mov	r1, #58	; 0x3a
   13b4c:	bl	13b20 <close@plt+0x2d04>
   13b50:	ldr	r4, [sp]
   13b54:	add	sp, sp, #4
   13b58:	pop	{pc}		; (ldr pc, [sp], #4)
   13b5c:	str	r4, [sp, #-8]!
   13b60:	str	lr, [sp, #4]
   13b64:	mov	r2, #58	; 0x3a
   13b68:	bl	13aa0 <close@plt+0x2c84>
   13b6c:	ldr	r4, [sp]
   13b70:	add	sp, sp, #4
   13b74:	pop	{pc}		; (ldr pc, [sp], #4)
   13b78:	strd	r4, [sp, #-12]!
   13b7c:	str	lr, [sp, #8]
   13b80:	sub	sp, sp, #100	; 0x64
   13b84:	mov	r4, r0
   13b88:	mov	r5, r2
   13b8c:	mov	r0, sp
   13b90:	bl	11b18 <close@plt+0xcfc>
   13b94:	ldrd	r2, [sp]
   13b98:	strd	r2, [sp, #48]	; 0x30
   13b9c:	ldrd	r2, [sp, #8]
   13ba0:	strd	r2, [sp, #56]	; 0x38
   13ba4:	ldrd	r2, [sp, #16]
   13ba8:	strd	r2, [sp, #64]	; 0x40
   13bac:	ldrd	r2, [sp, #24]
   13bb0:	strd	r2, [sp, #72]	; 0x48
   13bb4:	ldrd	r2, [sp, #32]
   13bb8:	strd	r2, [sp, #80]	; 0x50
   13bbc:	ldrd	r2, [sp, #40]	; 0x28
   13bc0:	strd	r2, [sp, #88]	; 0x58
   13bc4:	mov	r2, #1
   13bc8:	mov	r1, #58	; 0x3a
   13bcc:	add	r0, sp, #48	; 0x30
   13bd0:	bl	13618 <close@plt+0x27fc>
   13bd4:	add	r3, sp, #48	; 0x30
   13bd8:	mvn	r2, #0
   13bdc:	mov	r1, r5
   13be0:	mov	r0, r4
   13be4:	bl	133a4 <close@plt+0x2588>
   13be8:	add	sp, sp, #100	; 0x64
   13bec:	ldrd	r4, [sp]
   13bf0:	add	sp, sp, #8
   13bf4:	pop	{pc}		; (ldr pc, [sp], #4)
   13bf8:	strd	r4, [sp, #-20]!	; 0xffffffec
   13bfc:	strd	r6, [sp, #8]
   13c00:	str	lr, [sp, #16]
   13c04:	sub	sp, sp, #52	; 0x34
   13c08:	mov	r4, r0
   13c0c:	mov	r5, r3
   13c10:	ldr	r3, [pc, #92]	; 13c74 <close@plt+0x2e58>
   13c14:	ldrd	r6, [r3]
   13c18:	strd	r6, [sp]
   13c1c:	ldrd	r6, [r3, #8]
   13c20:	strd	r6, [sp, #8]
   13c24:	ldrd	r6, [r3, #16]
   13c28:	strd	r6, [sp, #16]
   13c2c:	ldrd	r6, [r3, #24]
   13c30:	strd	r6, [sp, #24]
   13c34:	ldrd	r6, [r3, #32]
   13c38:	strd	r6, [sp, #32]
   13c3c:	ldrd	r6, [r3, #40]	; 0x28
   13c40:	strd	r6, [sp, #40]	; 0x28
   13c44:	mov	r0, sp
   13c48:	bl	13674 <close@plt+0x2858>
   13c4c:	mov	r3, sp
   13c50:	ldr	r2, [sp, #72]	; 0x48
   13c54:	mov	r1, r5
   13c58:	mov	r0, r4
   13c5c:	bl	133a4 <close@plt+0x2588>
   13c60:	add	sp, sp, #52	; 0x34
   13c64:	ldrd	r4, [sp]
   13c68:	ldrd	r6, [sp, #8]
   13c6c:	add	sp, sp, #16
   13c70:	pop	{pc}		; (ldr pc, [sp], #4)
   13c74:	andeq	r6, r2, r4, asr r2
   13c78:	push	{lr}		; (str lr, [sp, #-4]!)
   13c7c:	sub	sp, sp, #12
   13c80:	mvn	ip, #0
   13c84:	str	ip, [sp]
   13c88:	bl	13bf8 <close@plt+0x2ddc>
   13c8c:	add	sp, sp, #12
   13c90:	pop	{pc}		; (ldr pc, [sp], #4)
   13c94:	str	r4, [sp, #-8]!
   13c98:	str	lr, [sp, #4]
   13c9c:	mov	r3, r2
   13ca0:	mov	r2, r1
   13ca4:	mov	r1, r0
   13ca8:	mov	r0, #0
   13cac:	bl	13c78 <close@plt+0x2e5c>
   13cb0:	ldr	r4, [sp]
   13cb4:	add	sp, sp, #4
   13cb8:	pop	{pc}		; (ldr pc, [sp], #4)
   13cbc:	push	{lr}		; (str lr, [sp, #-4]!)
   13cc0:	sub	sp, sp, #12
   13cc4:	str	r3, [sp]
   13cc8:	mov	r3, r2
   13ccc:	mov	r2, r1
   13cd0:	mov	r1, r0
   13cd4:	mov	r0, #0
   13cd8:	bl	13bf8 <close@plt+0x2ddc>
   13cdc:	add	sp, sp, #12
   13ce0:	pop	{pc}		; (ldr pc, [sp], #4)
   13ce4:	str	r4, [sp, #-8]!
   13ce8:	str	lr, [sp, #4]
   13cec:	ldr	r3, [pc, #12]	; 13d00 <close@plt+0x2ee4>
   13cf0:	bl	133a4 <close@plt+0x2588>
   13cf4:	ldr	r4, [sp]
   13cf8:	add	sp, sp, #4
   13cfc:	pop	{pc}		; (ldr pc, [sp], #4)
   13d00:	strdeq	r6, [r2], -r4
   13d04:	str	r4, [sp, #-8]!
   13d08:	str	lr, [sp, #4]
   13d0c:	mov	r2, r1
   13d10:	mov	r1, r0
   13d14:	mov	r0, #0
   13d18:	bl	13ce4 <close@plt+0x2ec8>
   13d1c:	ldr	r4, [sp]
   13d20:	add	sp, sp, #4
   13d24:	pop	{pc}		; (ldr pc, [sp], #4)
   13d28:	str	r4, [sp, #-8]!
   13d2c:	str	lr, [sp, #4]
   13d30:	mvn	r2, #0
   13d34:	bl	13ce4 <close@plt+0x2ec8>
   13d38:	ldr	r4, [sp]
   13d3c:	add	sp, sp, #4
   13d40:	pop	{pc}		; (ldr pc, [sp], #4)
   13d44:	str	r4, [sp, #-8]!
   13d48:	str	lr, [sp, #4]
   13d4c:	mov	r1, r0
   13d50:	mov	r0, #0
   13d54:	bl	13d28 <close@plt+0x2f0c>
   13d58:	ldr	r4, [sp]
   13d5c:	add	sp, sp, #4
   13d60:	pop	{pc}		; (ldr pc, [sp], #4)
   13d64:	strd	r4, [sp, #-16]!
   13d68:	str	r6, [sp, #8]
   13d6c:	str	lr, [sp, #12]
   13d70:	sub	sp, sp, #32
   13d74:	mov	r4, r0
   13d78:	ldr	r5, [sp, #48]	; 0x30
   13d7c:	ldr	r6, [sp, #52]	; 0x34
   13d80:	cmp	r1, #0
   13d84:	beq	13e50 <close@plt+0x3034>
   13d88:	str	r3, [sp, #4]
   13d8c:	str	r2, [sp]
   13d90:	mov	r3, r1
   13d94:	movw	r2, #21616	; 0x5470
   13d98:	movt	r2, #1
   13d9c:	mov	r1, #1
   13da0:	bl	10d8c <__fprintf_chk@plt>
   13da4:	mov	r2, #5
   13da8:	movw	r1, #21636	; 0x5484
   13dac:	movt	r1, #1
   13db0:	mov	r0, #0
   13db4:	bl	10c60 <dcgettext@plt>
   13db8:	movw	r3, #2022	; 0x7e6
   13dbc:	str	r3, [sp]
   13dc0:	mov	r3, r0
   13dc4:	movw	r2, #22364	; 0x575c
   13dc8:	movt	r2, #1
   13dcc:	mov	r1, #1
   13dd0:	mov	r0, r4
   13dd4:	bl	10d8c <__fprintf_chk@plt>
   13dd8:	mov	r1, r4
   13ddc:	mov	r0, #10
   13de0:	bl	10c54 <fputc_unlocked@plt>
   13de4:	mov	r2, #5
   13de8:	movw	r1, #21640	; 0x5488
   13dec:	movt	r1, #1
   13df0:	mov	r0, #0
   13df4:	bl	10c60 <dcgettext@plt>
   13df8:	movw	r3, #21812	; 0x5534
   13dfc:	movt	r3, #1
   13e00:	mov	r2, r0
   13e04:	mov	r1, #1
   13e08:	mov	r0, r4
   13e0c:	bl	10d8c <__fprintf_chk@plt>
   13e10:	mov	r1, r4
   13e14:	mov	r0, #10
   13e18:	bl	10c54 <fputc_unlocked@plt>
   13e1c:	cmp	r6, #9
   13e20:	ldrls	pc, [pc, r6, lsl #2]
   13e24:	b	14128 <close@plt+0x330c>
   13e28:	muleq	r1, r4, lr
   13e2c:	andeq	r3, r1, ip, ror #28
   13e30:	andeq	r3, r1, r8, lsr #29
   13e34:	ldrdeq	r3, [r1], -ip
   13e38:	andeq	r3, r1, r8, lsl pc
   13e3c:	andeq	r3, r1, ip, asr pc
   13e40:	andeq	r3, r1, r8, lsr #31
   13e44:	strdeq	r3, [r1], -ip
   13e48:	andeq	r4, r1, r8, asr r0
   13e4c:	strheq	r4, [r1], -ip
   13e50:	str	r3, [sp]
   13e54:	mov	r3, r2
   13e58:	movw	r2, #21628	; 0x547c
   13e5c:	movt	r2, #1
   13e60:	mov	r1, #1
   13e64:	bl	10d8c <__fprintf_chk@plt>
   13e68:	b	13da4 <close@plt+0x2f88>
   13e6c:	mov	r2, #5
   13e70:	movw	r1, #21848	; 0x5558
   13e74:	movt	r1, #1
   13e78:	mov	r0, #0
   13e7c:	bl	10c60 <dcgettext@plt>
   13e80:	ldr	r3, [r5]
   13e84:	mov	r2, r0
   13e88:	mov	r1, #1
   13e8c:	mov	r0, r4
   13e90:	bl	10d8c <__fprintf_chk@plt>
   13e94:	add	sp, sp, #32
   13e98:	ldrd	r4, [sp]
   13e9c:	ldr	r6, [sp, #8]
   13ea0:	add	sp, sp, #12
   13ea4:	pop	{pc}		; (ldr pc, [sp], #4)
   13ea8:	mov	r2, #5
   13eac:	movw	r1, #21864	; 0x5568
   13eb0:	movt	r1, #1
   13eb4:	mov	r0, #0
   13eb8:	bl	10c60 <dcgettext@plt>
   13ebc:	ldr	r3, [r5, #4]
   13ec0:	str	r3, [sp]
   13ec4:	ldr	r3, [r5]
   13ec8:	mov	r2, r0
   13ecc:	mov	r1, #1
   13ed0:	mov	r0, r4
   13ed4:	bl	10d8c <__fprintf_chk@plt>
   13ed8:	b	13e94 <close@plt+0x3078>
   13edc:	mov	r2, #5
   13ee0:	movw	r1, #21888	; 0x5580
   13ee4:	movt	r1, #1
   13ee8:	mov	r0, #0
   13eec:	bl	10c60 <dcgettext@plt>
   13ef0:	ldr	r3, [r5, #8]
   13ef4:	str	r3, [sp, #4]
   13ef8:	ldr	r3, [r5, #4]
   13efc:	str	r3, [sp]
   13f00:	ldr	r3, [r5]
   13f04:	mov	r2, r0
   13f08:	mov	r1, #1
   13f0c:	mov	r0, r4
   13f10:	bl	10d8c <__fprintf_chk@plt>
   13f14:	b	13e94 <close@plt+0x3078>
   13f18:	mov	r2, #5
   13f1c:	movw	r1, #21916	; 0x559c
   13f20:	movt	r1, #1
   13f24:	mov	r0, #0
   13f28:	bl	10c60 <dcgettext@plt>
   13f2c:	ldr	r3, [r5, #12]
   13f30:	str	r3, [sp, #8]
   13f34:	ldr	r3, [r5, #8]
   13f38:	str	r3, [sp, #4]
   13f3c:	ldr	r3, [r5, #4]
   13f40:	str	r3, [sp]
   13f44:	ldr	r3, [r5]
   13f48:	mov	r2, r0
   13f4c:	mov	r1, #1
   13f50:	mov	r0, r4
   13f54:	bl	10d8c <__fprintf_chk@plt>
   13f58:	b	13e94 <close@plt+0x3078>
   13f5c:	mov	r2, #5
   13f60:	movw	r1, #21948	; 0x55bc
   13f64:	movt	r1, #1
   13f68:	mov	r0, #0
   13f6c:	bl	10c60 <dcgettext@plt>
   13f70:	ldr	r3, [r5, #16]
   13f74:	str	r3, [sp, #12]
   13f78:	ldr	r3, [r5, #12]
   13f7c:	str	r3, [sp, #8]
   13f80:	ldr	r3, [r5, #8]
   13f84:	str	r3, [sp, #4]
   13f88:	ldr	r3, [r5, #4]
   13f8c:	str	r3, [sp]
   13f90:	ldr	r3, [r5]
   13f94:	mov	r2, r0
   13f98:	mov	r1, #1
   13f9c:	mov	r0, r4
   13fa0:	bl	10d8c <__fprintf_chk@plt>
   13fa4:	b	13e94 <close@plt+0x3078>
   13fa8:	mov	r2, #5
   13fac:	movw	r1, #21984	; 0x55e0
   13fb0:	movt	r1, #1
   13fb4:	mov	r0, #0
   13fb8:	bl	10c60 <dcgettext@plt>
   13fbc:	ldr	r3, [r5, #20]
   13fc0:	str	r3, [sp, #16]
   13fc4:	ldr	r3, [r5, #16]
   13fc8:	str	r3, [sp, #12]
   13fcc:	ldr	r3, [r5, #12]
   13fd0:	str	r3, [sp, #8]
   13fd4:	ldr	r3, [r5, #8]
   13fd8:	str	r3, [sp, #4]
   13fdc:	ldr	r3, [r5, #4]
   13fe0:	str	r3, [sp]
   13fe4:	ldr	r3, [r5]
   13fe8:	mov	r2, r0
   13fec:	mov	r1, #1
   13ff0:	mov	r0, r4
   13ff4:	bl	10d8c <__fprintf_chk@plt>
   13ff8:	b	13e94 <close@plt+0x3078>
   13ffc:	mov	r2, #5
   14000:	movw	r1, #22024	; 0x5608
   14004:	movt	r1, #1
   14008:	mov	r0, #0
   1400c:	bl	10c60 <dcgettext@plt>
   14010:	ldr	r3, [r5, #24]
   14014:	str	r3, [sp, #20]
   14018:	ldr	r3, [r5, #20]
   1401c:	str	r3, [sp, #16]
   14020:	ldr	r3, [r5, #16]
   14024:	str	r3, [sp, #12]
   14028:	ldr	r3, [r5, #12]
   1402c:	str	r3, [sp, #8]
   14030:	ldr	r3, [r5, #8]
   14034:	str	r3, [sp, #4]
   14038:	ldr	r3, [r5, #4]
   1403c:	str	r3, [sp]
   14040:	ldr	r3, [r5]
   14044:	mov	r2, r0
   14048:	mov	r1, #1
   1404c:	mov	r0, r4
   14050:	bl	10d8c <__fprintf_chk@plt>
   14054:	b	13e94 <close@plt+0x3078>
   14058:	mov	r2, #5
   1405c:	movw	r1, #22068	; 0x5634
   14060:	movt	r1, #1
   14064:	mov	r0, #0
   14068:	bl	10c60 <dcgettext@plt>
   1406c:	ldr	r3, [r5, #28]
   14070:	str	r3, [sp, #24]
   14074:	ldr	r3, [r5, #24]
   14078:	str	r3, [sp, #20]
   1407c:	ldr	r3, [r5, #20]
   14080:	str	r3, [sp, #16]
   14084:	ldr	r3, [r5, #16]
   14088:	str	r3, [sp, #12]
   1408c:	ldr	r3, [r5, #12]
   14090:	str	r3, [sp, #8]
   14094:	ldr	r3, [r5, #8]
   14098:	str	r3, [sp, #4]
   1409c:	ldr	r3, [r5, #4]
   140a0:	str	r3, [sp]
   140a4:	ldr	r3, [r5]
   140a8:	mov	r2, r0
   140ac:	mov	r1, #1
   140b0:	mov	r0, r4
   140b4:	bl	10d8c <__fprintf_chk@plt>
   140b8:	b	13e94 <close@plt+0x3078>
   140bc:	mov	r2, #5
   140c0:	movw	r1, #22116	; 0x5664
   140c4:	movt	r1, #1
   140c8:	mov	r0, #0
   140cc:	bl	10c60 <dcgettext@plt>
   140d0:	ldr	r3, [r5, #32]
   140d4:	str	r3, [sp, #28]
   140d8:	ldr	r3, [r5, #28]
   140dc:	str	r3, [sp, #24]
   140e0:	ldr	r3, [r5, #24]
   140e4:	str	r3, [sp, #20]
   140e8:	ldr	r3, [r5, #20]
   140ec:	str	r3, [sp, #16]
   140f0:	ldr	r3, [r5, #16]
   140f4:	str	r3, [sp, #12]
   140f8:	ldr	r3, [r5, #12]
   140fc:	str	r3, [sp, #8]
   14100:	ldr	r3, [r5, #8]
   14104:	str	r3, [sp, #4]
   14108:	ldr	r3, [r5, #4]
   1410c:	str	r3, [sp]
   14110:	ldr	r3, [r5]
   14114:	mov	r2, r0
   14118:	mov	r1, #1
   1411c:	mov	r0, r4
   14120:	bl	10d8c <__fprintf_chk@plt>
   14124:	b	13e94 <close@plt+0x3078>
   14128:	mov	r2, #5
   1412c:	movw	r1, #22168	; 0x5698
   14130:	movt	r1, #1
   14134:	mov	r0, #0
   14138:	bl	10c60 <dcgettext@plt>
   1413c:	ldr	r3, [r5, #32]
   14140:	str	r3, [sp, #28]
   14144:	ldr	r3, [r5, #28]
   14148:	str	r3, [sp, #24]
   1414c:	ldr	r3, [r5, #24]
   14150:	str	r3, [sp, #20]
   14154:	ldr	r3, [r5, #20]
   14158:	str	r3, [sp, #16]
   1415c:	ldr	r3, [r5, #16]
   14160:	str	r3, [sp, #12]
   14164:	ldr	r3, [r5, #12]
   14168:	str	r3, [sp, #8]
   1416c:	ldr	r3, [r5, #8]
   14170:	str	r3, [sp, #4]
   14174:	ldr	r3, [r5, #4]
   14178:	str	r3, [sp]
   1417c:	ldr	r3, [r5]
   14180:	mov	r2, r0
   14184:	mov	r1, #1
   14188:	mov	r0, r4
   1418c:	bl	10d8c <__fprintf_chk@plt>
   14190:	b	13e94 <close@plt+0x3078>
   14194:	strd	r4, [sp, #-12]!
   14198:	str	lr, [sp, #8]
   1419c:	sub	sp, sp, #12
   141a0:	ldr	r5, [sp, #24]
   141a4:	ldr	ip, [r5]
   141a8:	cmp	ip, #0
   141ac:	beq	141e4 <close@plt+0x33c8>
   141b0:	mov	lr, r5
   141b4:	mov	ip, #0
   141b8:	add	ip, ip, #1
   141bc:	ldr	r4, [lr, #4]!
   141c0:	cmp	r4, #0
   141c4:	bne	141b8 <close@plt+0x339c>
   141c8:	str	ip, [sp, #4]
   141cc:	str	r5, [sp]
   141d0:	bl	13d64 <close@plt+0x2f48>
   141d4:	add	sp, sp, #12
   141d8:	ldrd	r4, [sp]
   141dc:	add	sp, sp, #8
   141e0:	pop	{pc}		; (ldr pc, [sp], #4)
   141e4:	mov	ip, #0
   141e8:	b	141c8 <close@plt+0x33ac>
   141ec:	strd	r4, [sp, #-12]!
   141f0:	str	lr, [sp, #8]
   141f4:	sub	sp, sp, #52	; 0x34
   141f8:	ldr	r5, [sp, #64]	; 0x40
   141fc:	add	r4, sp, #8
   14200:	mov	ip, #0
   14204:	ldr	lr, [r5], #4
   14208:	str	lr, [r4], #4
   1420c:	cmp	lr, #0
   14210:	beq	14220 <close@plt+0x3404>
   14214:	add	ip, ip, #1
   14218:	cmp	ip, #10
   1421c:	bne	14204 <close@plt+0x33e8>
   14220:	str	ip, [sp, #4]
   14224:	add	ip, sp, #8
   14228:	str	ip, [sp]
   1422c:	bl	13d64 <close@plt+0x2f48>
   14230:	add	sp, sp, #52	; 0x34
   14234:	ldrd	r4, [sp]
   14238:	add	sp, sp, #8
   1423c:	pop	{pc}		; (ldr pc, [sp], #4)
   14240:	push	{r3}		; (str r3, [sp, #-4]!)
   14244:	push	{lr}		; (str lr, [sp, #-4]!)
   14248:	sub	sp, sp, #16
   1424c:	add	r3, sp, #24
   14250:	str	r3, [sp, #12]
   14254:	str	r3, [sp]
   14258:	ldr	r3, [sp, #20]
   1425c:	bl	141ec <close@plt+0x33d0>
   14260:	add	sp, sp, #16
   14264:	pop	{lr}		; (ldr lr, [sp], #4)
   14268:	add	sp, sp, #4
   1426c:	bx	lr
   14270:	str	r4, [sp, #-8]!
   14274:	str	lr, [sp, #4]
   14278:	movw	r3, #24892	; 0x613c
   1427c:	movt	r3, #2
   14280:	ldr	r1, [r3]
   14284:	mov	r0, #10
   14288:	bl	10c54 <fputc_unlocked@plt>
   1428c:	mov	r2, #5
   14290:	movw	r1, #22228	; 0x56d4
   14294:	movt	r1, #1
   14298:	mov	r0, #0
   1429c:	bl	10c60 <dcgettext@plt>
   142a0:	movw	r2, #22248	; 0x56e8
   142a4:	movt	r2, #1
   142a8:	mov	r1, r0
   142ac:	mov	r0, #1
   142b0:	bl	10d74 <__printf_chk@plt>
   142b4:	mov	r2, #5
   142b8:	movw	r1, #22272	; 0x5700
   142bc:	movt	r1, #1
   142c0:	mov	r0, #0
   142c4:	bl	10c60 <dcgettext@plt>
   142c8:	movw	r3, #20696	; 0x50d8
   142cc:	movt	r3, #1
   142d0:	movw	r2, #20736	; 0x5100
   142d4:	movt	r2, #1
   142d8:	mov	r1, r0
   142dc:	mov	r0, #1
   142e0:	bl	10d74 <__printf_chk@plt>
   142e4:	mov	r2, #5
   142e8:	movw	r1, #22292	; 0x5714
   142ec:	movt	r1, #1
   142f0:	mov	r0, #0
   142f4:	bl	10c60 <dcgettext@plt>
   142f8:	movw	r2, #22332	; 0x573c
   142fc:	movt	r2, #1
   14300:	mov	r1, r0
   14304:	mov	r0, #1
   14308:	bl	10d74 <__printf_chk@plt>
   1430c:	ldr	r4, [sp]
   14310:	add	sp, sp, #4
   14314:	pop	{pc}		; (ldr pc, [sp], #4)
   14318:	str	r4, [sp, #-8]!
   1431c:	str	lr, [sp, #4]
   14320:	bl	14864 <close@plt+0x3a48>
   14324:	cmp	r0, #0
   14328:	beq	14338 <close@plt+0x351c>
   1432c:	ldr	r4, [sp]
   14330:	add	sp, sp, #4
   14334:	pop	{pc}		; (ldr pc, [sp], #4)
   14338:	bl	147ac <close@plt+0x3990>
   1433c:	str	r4, [sp, #-8]!
   14340:	str	lr, [sp, #4]
   14344:	bl	14864 <close@plt+0x3a48>
   14348:	cmp	r0, #0
   1434c:	beq	1435c <close@plt+0x3540>
   14350:	ldr	r4, [sp]
   14354:	add	sp, sp, #4
   14358:	pop	{pc}		; (ldr pc, [sp], #4)
   1435c:	bl	147ac <close@plt+0x3990>
   14360:	str	r4, [sp, #-8]!
   14364:	str	lr, [sp, #4]
   14368:	bl	14318 <close@plt+0x34fc>
   1436c:	ldr	r4, [sp]
   14370:	add	sp, sp, #4
   14374:	pop	{pc}		; (ldr pc, [sp], #4)
   14378:	strd	r4, [sp, #-16]!
   1437c:	str	r6, [sp, #8]
   14380:	str	lr, [sp, #12]
   14384:	mov	r5, r0
   14388:	mov	r4, r1
   1438c:	bl	148a0 <close@plt+0x3a84>
   14390:	cmp	r0, #0
   14394:	beq	143a8 <close@plt+0x358c>
   14398:	ldrd	r4, [sp]
   1439c:	ldr	r6, [sp, #8]
   143a0:	add	sp, sp, #12
   143a4:	pop	{pc}		; (ldr pc, [sp], #4)
   143a8:	adds	r4, r4, #0
   143ac:	movne	r4, #1
   143b0:	cmp	r5, #0
   143b4:	moveq	r4, #1
   143b8:	cmp	r4, #0
   143bc:	beq	14398 <close@plt+0x357c>
   143c0:	bl	147ac <close@plt+0x3990>
   143c4:	str	r4, [sp, #-8]!
   143c8:	str	lr, [sp, #4]
   143cc:	cmp	r1, #0
   143d0:	orreq	r1, r1, #1
   143d4:	bl	148a0 <close@plt+0x3a84>
   143d8:	cmp	r0, #0
   143dc:	beq	143ec <close@plt+0x35d0>
   143e0:	ldr	r4, [sp]
   143e4:	add	sp, sp, #4
   143e8:	pop	{pc}		; (ldr pc, [sp], #4)
   143ec:	bl	147ac <close@plt+0x3990>
   143f0:	strd	r4, [sp, #-16]!
   143f4:	str	r6, [sp, #8]
   143f8:	str	lr, [sp, #12]
   143fc:	mov	r4, r0
   14400:	mov	r6, r1
   14404:	mov	r5, r2
   14408:	bl	14c88 <close@plt+0x3e6c>
   1440c:	cmp	r0, #0
   14410:	beq	14424 <close@plt+0x3608>
   14414:	ldrd	r4, [sp]
   14418:	ldr	r6, [sp, #8]
   1441c:	add	sp, sp, #12
   14420:	pop	{pc}		; (ldr pc, [sp], #4)
   14424:	cmp	r4, #0
   14428:	beq	14438 <close@plt+0x361c>
   1442c:	cmp	r6, #0
   14430:	cmpne	r5, #0
   14434:	beq	14414 <close@plt+0x35f8>
   14438:	bl	147ac <close@plt+0x3990>
   1443c:	str	r4, [sp, #-8]!
   14440:	str	lr, [sp, #4]
   14444:	bl	143f0 <close@plt+0x35d4>
   14448:	ldr	r4, [sp]
   1444c:	add	sp, sp, #4
   14450:	pop	{pc}		; (ldr pc, [sp], #4)
   14454:	str	r4, [sp, #-8]!
   14458:	str	lr, [sp, #4]
   1445c:	mov	ip, r1
   14460:	mov	r3, r2
   14464:	cmp	r2, #0
   14468:	cmpne	r1, #0
   1446c:	moveq	r3, #1
   14470:	moveq	ip, r3
   14474:	mov	r2, r3
   14478:	mov	r1, ip
   1447c:	bl	14c88 <close@plt+0x3e6c>
   14480:	cmp	r0, #0
   14484:	beq	14494 <close@plt+0x3678>
   14488:	ldr	r4, [sp]
   1448c:	add	sp, sp, #4
   14490:	pop	{pc}		; (ldr pc, [sp], #4)
   14494:	bl	147ac <close@plt+0x3990>
   14498:	str	r4, [sp, #-8]!
   1449c:	str	lr, [sp, #4]
   144a0:	mov	r2, r1
   144a4:	mov	r1, r0
   144a8:	mov	r0, #0
   144ac:	bl	143f0 <close@plt+0x35d4>
   144b0:	ldr	r4, [sp]
   144b4:	add	sp, sp, #4
   144b8:	pop	{pc}		; (ldr pc, [sp], #4)
   144bc:	str	r4, [sp, #-8]!
   144c0:	str	lr, [sp, #4]
   144c4:	mov	r2, r1
   144c8:	mov	r1, r0
   144cc:	mov	r0, #0
   144d0:	bl	14454 <close@plt+0x3638>
   144d4:	ldr	r4, [sp]
   144d8:	add	sp, sp, #4
   144dc:	pop	{pc}		; (ldr pc, [sp], #4)
   144e0:	strd	r4, [sp, #-16]!
   144e4:	str	r6, [sp, #8]
   144e8:	str	lr, [sp, #12]
   144ec:	mov	r5, r1
   144f0:	ldr	r4, [r1]
   144f4:	cmp	r0, #0
   144f8:	beq	14528 <close@plt+0x370c>
   144fc:	lsr	r3, r4, #1
   14500:	add	r3, r3, #1
   14504:	adds	r4, r4, r3
   14508:	bcs	14544 <close@plt+0x3728>
   1450c:	mov	r1, r4
   14510:	bl	143f0 <close@plt+0x35d4>
   14514:	str	r4, [r5]
   14518:	ldrd	r4, [sp]
   1451c:	ldr	r6, [sp, #8]
   14520:	add	sp, sp, #12
   14524:	pop	{pc}		; (ldr pc, [sp], #4)
   14528:	cmp	r4, #0
   1452c:	bne	1450c <close@plt+0x36f0>
   14530:	mov	r4, #64	; 0x40
   14534:	udiv	r4, r4, r2
   14538:	cmp	r2, #64	; 0x40
   1453c:	addhi	r4, r4, #1
   14540:	b	1450c <close@plt+0x36f0>
   14544:	bl	147ac <close@plt+0x3990>
   14548:	str	r4, [sp, #-8]!
   1454c:	str	lr, [sp, #4]
   14550:	mov	r2, #1
   14554:	bl	144e0 <close@plt+0x36c4>
   14558:	ldr	r4, [sp]
   1455c:	add	sp, sp, #4
   14560:	pop	{pc}		; (ldr pc, [sp], #4)
   14564:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14568:	strd	r6, [sp, #8]
   1456c:	str	r8, [sp, #16]
   14570:	str	lr, [sp, #20]
   14574:	mov	r5, r1
   14578:	ldr	lr, [sp, #24]
   1457c:	ldr	ip, [r1]
   14580:	asr	r4, ip, #1
   14584:	adds	r4, ip, r4
   14588:	movvs	r1, #1
   1458c:	movvc	r1, #0
   14590:	cmp	r1, #0
   14594:	mvnne	r4, #-2147483648	; 0x80000000
   14598:	mvn	r8, r3
   1459c:	lsr	r8, r8, #31
   145a0:	cmp	r3, r4
   145a4:	movge	r1, #0
   145a8:	andlt	r1, r8, #1
   145ac:	cmp	r1, #0
   145b0:	movne	r4, r3
   145b4:	smull	r6, r7, r4, lr
   145b8:	asr	r1, r6, #31
   145bc:	cmp	r1, r7
   145c0:	bne	145d8 <close@plt+0x37bc>
   145c4:	mov	r1, r6
   145c8:	cmp	r6, #63	; 0x3f
   145cc:	movle	r1, #64	; 0x40
   145d0:	ble	145dc <close@plt+0x37c0>
   145d4:	b	145e8 <close@plt+0x37cc>
   145d8:	mvn	r1, #-2147483648	; 0x80000000
   145dc:	sdiv	r4, r1, lr
   145e0:	mls	r6, lr, r4, r1
   145e4:	sub	r1, r1, r6
   145e8:	cmp	r0, #0
   145ec:	moveq	r6, #0
   145f0:	streq	r6, [r5]
   145f4:	sub	r6, r4, ip
   145f8:	cmp	r6, r2
   145fc:	bge	14634 <close@plt+0x3818>
   14600:	adds	r2, ip, r2
   14604:	mov	r4, r2
   14608:	bvs	14650 <close@plt+0x3834>
   1460c:	cmp	r2, r3
   14610:	movle	r3, #0
   14614:	andgt	r3, r8, #1
   14618:	cmp	r3, #0
   1461c:	bne	14650 <close@plt+0x3834>
   14620:	smull	r2, r3, r2, lr
   14624:	asr	ip, r2, #31
   14628:	mov	r1, r2
   1462c:	cmp	ip, r3
   14630:	bne	14650 <close@plt+0x3834>
   14634:	bl	14378 <close@plt+0x355c>
   14638:	str	r4, [r5]
   1463c:	ldrd	r4, [sp]
   14640:	ldrd	r6, [sp, #8]
   14644:	ldr	r8, [sp, #16]
   14648:	add	sp, sp, #20
   1464c:	pop	{pc}		; (ldr pc, [sp], #4)
   14650:	bl	147ac <close@plt+0x3990>
   14654:	str	r4, [sp, #-8]!
   14658:	str	lr, [sp, #4]
   1465c:	bl	147f0 <close@plt+0x39d4>
   14660:	cmp	r0, #0
   14664:	beq	14674 <close@plt+0x3858>
   14668:	ldr	r4, [sp]
   1466c:	add	sp, sp, #4
   14670:	pop	{pc}		; (ldr pc, [sp], #4)
   14674:	bl	147ac <close@plt+0x3990>
   14678:	str	r4, [sp, #-8]!
   1467c:	str	lr, [sp, #4]
   14680:	mov	r1, #1
   14684:	bl	14654 <close@plt+0x3838>
   14688:	ldr	r4, [sp]
   1468c:	add	sp, sp, #4
   14690:	pop	{pc}		; (ldr pc, [sp], #4)
   14694:	str	r4, [sp, #-8]!
   14698:	str	lr, [sp, #4]
   1469c:	bl	147f0 <close@plt+0x39d4>
   146a0:	cmp	r0, #0
   146a4:	beq	146b4 <close@plt+0x3898>
   146a8:	ldr	r4, [sp]
   146ac:	add	sp, sp, #4
   146b0:	pop	{pc}		; (ldr pc, [sp], #4)
   146b4:	bl	147ac <close@plt+0x3990>
   146b8:	str	r4, [sp, #-8]!
   146bc:	str	lr, [sp, #4]
   146c0:	mov	r1, #1
   146c4:	bl	14694 <close@plt+0x3878>
   146c8:	ldr	r4, [sp]
   146cc:	add	sp, sp, #4
   146d0:	pop	{pc}		; (ldr pc, [sp], #4)
   146d4:	strd	r4, [sp, #-16]!
   146d8:	str	r6, [sp, #8]
   146dc:	str	lr, [sp, #12]
   146e0:	mov	r5, r0
   146e4:	mov	r4, r1
   146e8:	mov	r0, r1
   146ec:	bl	14318 <close@plt+0x34fc>
   146f0:	mov	r2, r4
   146f4:	mov	r1, r5
   146f8:	bl	10c30 <memcpy@plt>
   146fc:	ldrd	r4, [sp]
   14700:	ldr	r6, [sp, #8]
   14704:	add	sp, sp, #12
   14708:	pop	{pc}		; (ldr pc, [sp], #4)
   1470c:	strd	r4, [sp, #-16]!
   14710:	str	r6, [sp, #8]
   14714:	str	lr, [sp, #12]
   14718:	mov	r5, r0
   1471c:	mov	r4, r1
   14720:	mov	r0, r1
   14724:	bl	1433c <close@plt+0x3520>
   14728:	mov	r2, r4
   1472c:	mov	r1, r5
   14730:	bl	10c30 <memcpy@plt>
   14734:	ldrd	r4, [sp]
   14738:	ldr	r6, [sp, #8]
   1473c:	add	sp, sp, #12
   14740:	pop	{pc}		; (ldr pc, [sp], #4)
   14744:	strd	r4, [sp, #-16]!
   14748:	str	r6, [sp, #8]
   1474c:	str	lr, [sp, #12]
   14750:	mov	r5, r0
   14754:	mov	r4, r1
   14758:	add	r0, r1, #1
   1475c:	bl	1433c <close@plt+0x3520>
   14760:	mov	r2, #0
   14764:	strb	r2, [r0, r4]
   14768:	mov	r2, r4
   1476c:	mov	r1, r5
   14770:	bl	10c30 <memcpy@plt>
   14774:	ldrd	r4, [sp]
   14778:	ldr	r6, [sp, #8]
   1477c:	add	sp, sp, #12
   14780:	pop	{pc}		; (ldr pc, [sp], #4)
   14784:	str	r4, [sp, #-8]!
   14788:	str	lr, [sp, #4]
   1478c:	mov	r4, r0
   14790:	bl	10d44 <strlen@plt>
   14794:	add	r1, r0, #1
   14798:	mov	r0, r4
   1479c:	bl	146d4 <close@plt+0x38b8>
   147a0:	ldr	r4, [sp]
   147a4:	add	sp, sp, #4
   147a8:	pop	{pc}		; (ldr pc, [sp], #4)
   147ac:	str	r4, [sp, #-8]!
   147b0:	str	lr, [sp, #4]
   147b4:	movw	r3, #24800	; 0x60e0
   147b8:	movt	r3, #2
   147bc:	ldr	r4, [r3]
   147c0:	mov	r2, #5
   147c4:	movw	r1, #22412	; 0x578c
   147c8:	movt	r1, #1
   147cc:	mov	r0, #0
   147d0:	bl	10c60 <dcgettext@plt>
   147d4:	mov	r3, r0
   147d8:	movw	r2, #21328	; 0x5350
   147dc:	movt	r2, #1
   147e0:	mov	r1, #0
   147e4:	mov	r0, r4
   147e8:	bl	10cd8 <error@plt>
   147ec:	bl	10e10 <abort@plt>
   147f0:	strd	r4, [sp, #-16]!
   147f4:	str	r6, [sp, #8]
   147f8:	str	lr, [sp, #12]
   147fc:	cmp	r1, #0
   14800:	cmpne	r0, #0
   14804:	beq	14840 <close@plt+0x3a24>
   14808:	mov	r2, r0
   1480c:	mov	r3, r1
   14810:	umull	r4, r5, r0, r1
   14814:	adds	r1, r5, #0
   14818:	movne	r1, #1
   1481c:	cmp	r4, #0
   14820:	movlt	r1, #1
   14824:	cmp	r1, #0
   14828:	beq	14848 <close@plt+0x3a2c>
   1482c:	bl	10d50 <__errno_location@plt>
   14830:	mov	r3, #12
   14834:	str	r3, [r0]
   14838:	mov	r0, #0
   1483c:	b	14854 <close@plt+0x3a38>
   14840:	mov	r3, #1
   14844:	mov	r2, r3
   14848:	mov	r1, r3
   1484c:	mov	r0, r2
   14850:	bl	10bdc <calloc@plt>
   14854:	ldrd	r4, [sp]
   14858:	ldr	r6, [sp, #8]
   1485c:	add	sp, sp, #12
   14860:	pop	{pc}		; (ldr pc, [sp], #4)
   14864:	str	r4, [sp, #-8]!
   14868:	str	lr, [sp, #4]
   1486c:	cmp	r0, #0
   14870:	beq	1488c <close@plt+0x3a70>
   14874:	bge	14890 <close@plt+0x3a74>
   14878:	bl	10d50 <__errno_location@plt>
   1487c:	mov	r3, #12
   14880:	str	r3, [r0]
   14884:	mov	r0, #0
   14888:	b	14894 <close@plt+0x3a78>
   1488c:	mov	r0, #1
   14890:	bl	10cf0 <malloc@plt>
   14894:	ldr	r4, [sp]
   14898:	add	sp, sp, #4
   1489c:	pop	{pc}		; (ldr pc, [sp], #4)
   148a0:	str	r4, [sp, #-8]!
   148a4:	str	lr, [sp, #4]
   148a8:	cmp	r0, #0
   148ac:	beq	148d0 <close@plt+0x3ab4>
   148b0:	cmp	r1, #0
   148b4:	beq	148dc <close@plt+0x3ac0>
   148b8:	cmp	r1, #0
   148bc:	blt	148e8 <close@plt+0x3acc>
   148c0:	bl	10c78 <realloc@plt>
   148c4:	ldr	r4, [sp]
   148c8:	add	sp, sp, #4
   148cc:	pop	{pc}		; (ldr pc, [sp], #4)
   148d0:	mov	r0, r1
   148d4:	bl	14864 <close@plt+0x3a48>
   148d8:	b	148c4 <close@plt+0x3aa8>
   148dc:	bl	14ab4 <close@plt+0x3c98>
   148e0:	mov	r0, #0
   148e4:	b	148c4 <close@plt+0x3aa8>
   148e8:	bl	10d50 <__errno_location@plt>
   148ec:	mov	r3, #12
   148f0:	str	r3, [r0]
   148f4:	mov	r0, #0
   148f8:	b	148c4 <close@plt+0x3aa8>
   148fc:	strd	r4, [sp, #-16]!
   14900:	str	r6, [sp, #8]
   14904:	str	lr, [sp, #12]
   14908:	mov	r5, r0
   1490c:	bl	10cc0 <__fpending@plt>
   14910:	mov	r6, r0
   14914:	ldr	r4, [r5]
   14918:	and	r4, r4, #32
   1491c:	mov	r0, r5
   14920:	bl	14988 <close@plt+0x3b6c>
   14924:	cmp	r4, #0
   14928:	bne	1495c <close@plt+0x3b40>
   1492c:	cmp	r0, #0
   14930:	beq	1494c <close@plt+0x3b30>
   14934:	cmp	r6, #0
   14938:	bne	14978 <close@plt+0x3b5c>
   1493c:	bl	10d50 <__errno_location@plt>
   14940:	ldr	r0, [r0]
   14944:	subs	r0, r0, #9
   14948:	mvnne	r0, #0
   1494c:	ldrd	r4, [sp]
   14950:	ldr	r6, [sp, #8]
   14954:	add	sp, sp, #12
   14958:	pop	{pc}		; (ldr pc, [sp], #4)
   1495c:	cmp	r0, #0
   14960:	bne	14980 <close@plt+0x3b64>
   14964:	bl	10d50 <__errno_location@plt>
   14968:	mov	r3, #0
   1496c:	str	r3, [r0]
   14970:	mvn	r0, #0
   14974:	b	1494c <close@plt+0x3b30>
   14978:	mvn	r0, #0
   1497c:	b	1494c <close@plt+0x3b30>
   14980:	mvn	r0, #0
   14984:	b	1494c <close@plt+0x3b30>
   14988:	strd	r4, [sp, #-16]!
   1498c:	str	r6, [sp, #8]
   14990:	str	lr, [sp, #12]
   14994:	sub	sp, sp, #8
   14998:	mov	r4, r0
   1499c:	bl	10d80 <fileno@plt>
   149a0:	cmp	r0, #0
   149a4:	blt	14a1c <close@plt+0x3c00>
   149a8:	mov	r0, r4
   149ac:	bl	10d08 <__freading@plt>
   149b0:	cmp	r0, #0
   149b4:	beq	149e8 <close@plt+0x3bcc>
   149b8:	mov	r0, r4
   149bc:	bl	10d80 <fileno@plt>
   149c0:	mov	r3, #1
   149c4:	str	r3, [sp]
   149c8:	mov	r2, #0
   149cc:	mov	r3, #0
   149d0:	bl	10ca8 <lseek64@plt>
   149d4:	mvn	r2, #0
   149d8:	mvn	r3, #0
   149dc:	cmp	r1, r3
   149e0:	cmpeq	r0, r2
   149e4:	beq	14a28 <close@plt+0x3c0c>
   149e8:	mov	r0, r4
   149ec:	bl	14a44 <close@plt+0x3c28>
   149f0:	cmp	r0, #0
   149f4:	beq	14a28 <close@plt+0x3c0c>
   149f8:	bl	10d50 <__errno_location@plt>
   149fc:	mov	r5, r0
   14a00:	ldr	r6, [r0]
   14a04:	mov	r0, r4
   14a08:	bl	10d98 <fclose@plt>
   14a0c:	cmp	r6, #0
   14a10:	strne	r6, [r5]
   14a14:	mvnne	r0, #0
   14a18:	b	14a30 <close@plt+0x3c14>
   14a1c:	mov	r0, r4
   14a20:	bl	10d98 <fclose@plt>
   14a24:	b	14a30 <close@plt+0x3c14>
   14a28:	mov	r0, r4
   14a2c:	bl	10d98 <fclose@plt>
   14a30:	add	sp, sp, #8
   14a34:	ldrd	r4, [sp]
   14a38:	ldr	r6, [sp, #8]
   14a3c:	add	sp, sp, #12
   14a40:	pop	{pc}		; (ldr pc, [sp], #4)
   14a44:	str	r4, [sp, #-8]!
   14a48:	str	lr, [sp, #4]
   14a4c:	sub	sp, sp, #8
   14a50:	subs	r4, r0, #0
   14a54:	beq	14a68 <close@plt+0x3c4c>
   14a58:	mov	r0, r4
   14a5c:	bl	10d08 <__freading@plt>
   14a60:	cmp	r0, #0
   14a64:	bne	14a80 <close@plt+0x3c64>
   14a68:	mov	r0, r4
   14a6c:	bl	10c0c <fflush@plt>
   14a70:	add	sp, sp, #8
   14a74:	ldr	r4, [sp]
   14a78:	add	sp, sp, #4
   14a7c:	pop	{pc}		; (ldr pc, [sp], #4)
   14a80:	ldr	r3, [r4]
   14a84:	tst	r3, #256	; 0x100
   14a88:	bne	14a98 <close@plt+0x3c7c>
   14a8c:	mov	r0, r4
   14a90:	bl	10c0c <fflush@plt>
   14a94:	b	14a70 <close@plt+0x3c54>
   14a98:	mov	r3, #1
   14a9c:	str	r3, [sp]
   14aa0:	mov	r2, #0
   14aa4:	mov	r3, #0
   14aa8:	mov	r0, r4
   14aac:	bl	14b14 <close@plt+0x3cf8>
   14ab0:	b	14a8c <close@plt+0x3c70>
   14ab4:	strd	r4, [sp, #-12]!
   14ab8:	str	lr, [sp, #8]
   14abc:	sub	sp, sp, #12
   14ac0:	mov	r5, r0
   14ac4:	bl	10d50 <__errno_location@plt>
   14ac8:	mov	r4, r0
   14acc:	ldr	r3, [r0]
   14ad0:	str	r3, [sp]
   14ad4:	str	r3, [sp, #4]
   14ad8:	mov	r3, #0
   14adc:	str	r3, [r0]
   14ae0:	mov	r0, r5
   14ae4:	bl	10c18 <free@plt>
   14ae8:	ldr	r3, [r4]
   14aec:	clz	r3, r3
   14af0:	lsr	r3, r3, #5
   14af4:	add	r2, sp, #8
   14af8:	add	r3, r2, r3, lsl #2
   14afc:	ldr	r3, [r3, #-8]
   14b00:	str	r3, [r4]
   14b04:	add	sp, sp, #12
   14b08:	ldrd	r4, [sp]
   14b0c:	add	sp, sp, #8
   14b10:	pop	{pc}		; (ldr pc, [sp], #4)
   14b14:	str	r4, [sp, #-16]!
   14b18:	strd	r6, [sp, #4]
   14b1c:	str	lr, [sp, #12]
   14b20:	sub	sp, sp, #8
   14b24:	mov	r4, r0
   14b28:	mov	r6, r2
   14b2c:	mov	r7, r3
   14b30:	ldr	r2, [r0, #8]
   14b34:	ldr	r3, [r0, #4]
   14b38:	cmp	r2, r3
   14b3c:	beq	14b6c <close@plt+0x3d50>
   14b40:	ldr	r3, [sp, #24]
   14b44:	str	r3, [sp]
   14b48:	mov	r2, r6
   14b4c:	mov	r3, r7
   14b50:	mov	r0, r4
   14b54:	bl	10da4 <fseeko64@plt>
   14b58:	add	sp, sp, #8
   14b5c:	ldr	r4, [sp]
   14b60:	ldrd	r6, [sp, #4]
   14b64:	add	sp, sp, #12
   14b68:	pop	{pc}		; (ldr pc, [sp], #4)
   14b6c:	ldr	r2, [r0, #20]
   14b70:	ldr	r3, [r0, #16]
   14b74:	cmp	r2, r3
   14b78:	bne	14b40 <close@plt+0x3d24>
   14b7c:	ldr	r3, [r0, #36]	; 0x24
   14b80:	cmp	r3, #0
   14b84:	bne	14b40 <close@plt+0x3d24>
   14b88:	bl	10d80 <fileno@plt>
   14b8c:	ldr	r3, [sp, #24]
   14b90:	str	r3, [sp]
   14b94:	mov	r2, r6
   14b98:	mov	r3, r7
   14b9c:	bl	10ca8 <lseek64@plt>
   14ba0:	mvn	r2, #0
   14ba4:	mvn	r3, #0
   14ba8:	cmp	r1, r3
   14bac:	cmpeq	r0, r2
   14bb0:	beq	14bcc <close@plt+0x3db0>
   14bb4:	ldr	r3, [r4]
   14bb8:	bic	r3, r3, #16
   14bbc:	str	r3, [r4]
   14bc0:	strd	r0, [r4, #80]	; 0x50
   14bc4:	mov	r0, #0
   14bc8:	b	14b58 <close@plt+0x3d3c>
   14bcc:	mvn	r0, #0
   14bd0:	b	14b58 <close@plt+0x3d3c>
   14bd4:	str	r4, [sp, #-8]!
   14bd8:	str	lr, [sp, #4]
   14bdc:	mov	r0, #14
   14be0:	bl	10dd4 <nl_langinfo@plt>
   14be4:	cmp	r0, #0
   14be8:	beq	14c0c <close@plt+0x3df0>
   14bec:	ldrb	r2, [r0]
   14bf0:	movw	r3, #22432	; 0x57a0
   14bf4:	movt	r3, #1
   14bf8:	cmp	r2, #0
   14bfc:	moveq	r0, r3
   14c00:	ldr	r4, [sp]
   14c04:	add	sp, sp, #4
   14c08:	pop	{pc}		; (ldr pc, [sp], #4)
   14c0c:	movw	r0, #22432	; 0x57a0
   14c10:	movt	r0, #1
   14c14:	b	14c00 <close@plt+0x3de4>
   14c18:	strd	r4, [sp, #-20]!	; 0xffffffec
   14c1c:	strd	r6, [sp, #8]
   14c20:	str	lr, [sp, #16]
   14c24:	sub	sp, sp, #12
   14c28:	mov	r7, r1
   14c2c:	mov	r5, r2
   14c30:	subs	r6, r0, #0
   14c34:	addeq	r6, sp, #4
   14c38:	mov	r0, r6
   14c3c:	bl	10ccc <mbrtowc@plt>
   14c40:	mov	r4, r0
   14c44:	cmp	r5, #0
   14c48:	cmnne	r0, #3
   14c4c:	bhi	14c68 <close@plt+0x3e4c>
   14c50:	mov	r0, r4
   14c54:	add	sp, sp, #12
   14c58:	ldrd	r4, [sp]
   14c5c:	ldrd	r6, [sp, #8]
   14c60:	add	sp, sp, #16
   14c64:	pop	{pc}		; (ldr pc, [sp], #4)
   14c68:	mov	r0, #0
   14c6c:	bl	14cc4 <close@plt+0x3ea8>
   14c70:	cmp	r0, #0
   14c74:	bne	14c50 <close@plt+0x3e34>
   14c78:	ldrb	r3, [r7]
   14c7c:	str	r3, [r6]
   14c80:	mov	r4, #1
   14c84:	b	14c50 <close@plt+0x3e34>
   14c88:	str	r4, [sp, #-8]!
   14c8c:	str	lr, [sp, #4]
   14c90:	umull	r2, r3, r1, r2
   14c94:	cmp	r3, #0
   14c98:	bne	14cb0 <close@plt+0x3e94>
   14c9c:	mov	r1, r2
   14ca0:	bl	148a0 <close@plt+0x3a84>
   14ca4:	ldr	r4, [sp]
   14ca8:	add	sp, sp, #4
   14cac:	pop	{pc}		; (ldr pc, [sp], #4)
   14cb0:	bl	10d50 <__errno_location@plt>
   14cb4:	mov	r3, #12
   14cb8:	str	r3, [r0]
   14cbc:	mov	r0, #0
   14cc0:	b	14ca4 <close@plt+0x3e88>
   14cc4:	push	{lr}		; (str lr, [sp, #-4]!)
   14cc8:	sub	sp, sp, #268	; 0x10c
   14ccc:	movw	r2, #257	; 0x101
   14cd0:	add	r1, sp, #4
   14cd4:	bl	14d20 <close@plt+0x3f04>
   14cd8:	cmp	r0, #0
   14cdc:	movne	r0, #0
   14ce0:	bne	14d18 <close@plt+0x3efc>
   14ce4:	movw	r1, #22440	; 0x57a8
   14ce8:	movt	r1, #1
   14cec:	add	r0, sp, #4
   14cf0:	bl	10c00 <strcmp@plt>
   14cf4:	cmp	r0, #0
   14cf8:	beq	14d14 <close@plt+0x3ef8>
   14cfc:	movw	r1, #22444	; 0x57ac
   14d00:	movt	r1, #1
   14d04:	add	r0, sp, #4
   14d08:	bl	10c00 <strcmp@plt>
   14d0c:	adds	r0, r0, #0
   14d10:	movne	r0, #1
   14d14:	and	r0, r0, #1
   14d18:	add	sp, sp, #268	; 0x10c
   14d1c:	pop	{pc}		; (ldr pc, [sp], #4)
   14d20:	strd	r4, [sp, #-16]!
   14d24:	str	r6, [sp, #8]
   14d28:	str	lr, [sp, #12]
   14d2c:	mov	r6, r1
   14d30:	mov	r4, r2
   14d34:	mov	r1, #0
   14d38:	bl	10dbc <setlocale@plt>
   14d3c:	subs	r5, r0, #0
   14d40:	beq	14d84 <close@plt+0x3f68>
   14d44:	mov	r0, r5
   14d48:	bl	10d44 <strlen@plt>
   14d4c:	cmp	r4, r0
   14d50:	bhi	14da0 <close@plt+0x3f84>
   14d54:	cmp	r4, #0
   14d58:	moveq	r0, #34	; 0x22
   14d5c:	beq	14db4 <close@plt+0x3f98>
   14d60:	sub	r4, r4, #1
   14d64:	mov	r2, r4
   14d68:	mov	r1, r5
   14d6c:	mov	r0, r6
   14d70:	bl	10c30 <memcpy@plt>
   14d74:	mov	r3, #0
   14d78:	strb	r3, [r6, r4]
   14d7c:	mov	r0, #34	; 0x22
   14d80:	b	14db4 <close@plt+0x3f98>
   14d84:	cmp	r4, #0
   14d88:	moveq	r0, #22
   14d8c:	beq	14db4 <close@plt+0x3f98>
   14d90:	mov	r3, #0
   14d94:	strb	r3, [r6]
   14d98:	mov	r0, #22
   14d9c:	b	14db4 <close@plt+0x3f98>
   14da0:	add	r2, r0, #1
   14da4:	mov	r1, r5
   14da8:	mov	r0, r6
   14dac:	bl	10c30 <memcpy@plt>
   14db0:	mov	r0, #0
   14db4:	ldrd	r4, [sp]
   14db8:	ldr	r6, [sp, #8]
   14dbc:	add	sp, sp, #12
   14dc0:	pop	{pc}		; (ldr pc, [sp], #4)
   14dc4:	str	r4, [sp, #-8]!
   14dc8:	str	lr, [sp, #4]
   14dcc:	mov	r1, #0
   14dd0:	bl	10dbc <setlocale@plt>
   14dd4:	ldr	r4, [sp]
   14dd8:	add	sp, sp, #4
   14ddc:	pop	{pc}		; (ldr pc, [sp], #4)
   14de0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14de4:	mov	r7, r0
   14de8:	ldr	r6, [pc, #72]	; 14e38 <close@plt+0x401c>
   14dec:	ldr	r5, [pc, #72]	; 14e3c <close@plt+0x4020>
   14df0:	add	r6, pc, r6
   14df4:	add	r5, pc, r5
   14df8:	sub	r6, r6, r5
   14dfc:	mov	r8, r1
   14e00:	mov	r9, r2
   14e04:	bl	10bbc <calloc@plt-0x20>
   14e08:	asrs	r6, r6, #2
   14e0c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14e10:	mov	r4, #0
   14e14:	add	r4, r4, #1
   14e18:	ldr	r3, [r5], #4
   14e1c:	mov	r2, r9
   14e20:	mov	r1, r8
   14e24:	mov	r0, r7
   14e28:	blx	r3
   14e2c:	cmp	r6, r4
   14e30:	bne	14e14 <close@plt+0x3ff8>
   14e34:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14e38:	andeq	r1, r1, ip, lsl r1
   14e3c:	andeq	r1, r1, r4, lsl r1
   14e40:	bx	lr
   14e44:	ldr	r3, [pc, #12]	; 14e58 <close@plt+0x403c>
   14e48:	mov	r1, #0
   14e4c:	add	r3, pc, r3
   14e50:	ldr	r2, [r3]
   14e54:	b	10d5c <__cxa_atexit@plt>
   14e58:	andeq	r1, r1, r4, lsl #5

Disassembly of section .fini:

00014e5c <.fini>:
   14e5c:	push	{r3, lr}
   14e60:	pop	{r3, pc}
