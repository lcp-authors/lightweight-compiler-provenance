
../repos/charybdis/modules/.libs/m_resv.so:     file format elf32-littlearm


Disassembly of section .init:

00000d0c <_init>:
 d0c:	push	{r3, lr}
 d10:	bl	f18 <call_weak_fn>
 d14:	pop	{r3, pc}

Disassembly of section .plt:

00000d18 <.plt>:
 d18:	push	{lr}		; (str lr, [sp, #-4]!)
 d1c:	ldr	lr, [pc, #4]	; d28 <.plt+0x10>
 d20:	add	lr, pc, lr
 d24:	ldr	pc, [lr, #8]!
 d28:	.word	0x000122d8

00000d2c <propagate_generic@plt>:
 d2c:	add	ip, pc, #0, 12
 d30:	add	ip, ip, #73728	; 0x12000
 d34:	ldr	pc, [ip, #728]!	; 0x2d8

00000d38 <make_conf@plt>:
 d38:	add	ip, pc, #0, 12
 d3c:	add	ip, ip, #73728	; 0x12000
 d40:	ldr	pc, [ip, #720]!	; 0x2d0

00000d44 <rb_current_time@plt>:
 d44:	add	ip, pc, #0, 12
 d48:	add	ip, ip, #73728	; 0x12000
 d4c:	ldr	pc, [ip, #712]!	; 0x2c8

00000d50 <add_to_resv_hash@plt>:
 d50:	add	ip, pc, #0, 12
 d54:	add	ip, ip, #73728	; 0x12000
 d58:	ldr	pc, [ip, #704]!	; 0x2c0

00000d5c <sendto_match_servs@plt>:
 d5c:	add	ip, pc, #0, 12
 d60:	add	ip, ip, #73728	; 0x12000
 d64:	ldr	pc, [ip, #696]!	; 0x2b8

00000d68 <__cxa_finalize@plt>:
 d68:	add	ip, pc, #0, 12
 d6c:	add	ip, ip, #73728	; 0x12000
 d70:	ldr	pc, [ip, #688]!	; 0x2b0

00000d74 <sendto_one@plt>:
 d74:	add	ip, pc, #0, 12
 d78:	add	ip, ip, #73728	; 0x12000
 d7c:	ldr	pc, [ip, #680]!	; 0x2a8

00000d80 <replace_old_ban@plt>:
 d80:	add	ip, pc, #0, 12
 d84:	add	ip, ip, #73728	; 0x12000
 d88:	ldr	pc, [ip, #672]!	; 0x2a0

00000d8c <rb_outofmemory@plt>:
 d8c:	add	ip, pc, #0, 12
 d90:	add	ip, ip, #73728	; 0x12000
 d94:	ldr	pc, [ip, #664]!	; 0x298

00000d98 <resv_nick_fnc@plt>:
 d98:	add	ip, pc, #0, 12
 d9c:	add	ip, ip, #73728	; 0x12000
 da0:	ldr	pc, [ip, #656]!	; 0x290

00000da4 <operhash_delete@plt>:
 da4:	add	ip, pc, #0, 12
 da8:	add	ip, ip, #73728	; 0x12000
 dac:	ldr	pc, [ip, #648]!	; 0x288

00000db0 <sendto_realops_snomask@plt>:
 db0:	add	ip, pc, #0, 12
 db4:	add	ip, ip, #73728	; 0x12000
 db8:	ldr	pc, [ip, #640]!	; 0x280

00000dbc <bandb_add@plt>:
 dbc:	add	ip, pc, #0, 12
 dc0:	add	ip, ip, #73728	; 0x12000
 dc4:	ldr	pc, [ip, #632]!	; 0x278

00000dc8 <resv_chan_forcepart@plt>:
 dc8:	add	ip, pc, #0, 12
 dcc:	add	ip, ip, #73728	; 0x12000
 dd0:	ldr	pc, [ip, #624]!	; 0x270

00000dd4 <deactivate_conf@plt>:
 dd4:	add	ip, pc, #0, 12
 dd8:	add	ip, ip, #73728	; 0x12000
 ddc:	ldr	pc, [ip, #616]!	; 0x268

00000de0 <get_oper_name@plt>:
 de0:	add	ip, pc, #0, 12
 de4:	add	ip, ip, #73728	; 0x12000
 de8:	ldr	pc, [ip, #608]!	; 0x260

00000dec <rb_free_rb_dlink_node@plt>:
 dec:	add	ip, pc, #0, 12
 df0:	add	ip, ip, #73728	; 0x12000
 df4:	ldr	pc, [ip, #600]!	; 0x258

00000df8 <cluster_generic@plt>:
 df8:	add	ip, pc, #0, 12
 dfc:	add	ip, ip, #73728	; 0x12000
 e00:	ldr	pc, [ip, #592]!	; 0x250

00000e04 <operhash_add@plt>:
 e04:	add	ip, pc, #0, 12
 e08:	add	ip, ip, #73728	; 0x12000
 e0c:	ldr	pc, [ip, #584]!	; 0x248

00000e10 <strcpy@plt>:
 e10:	add	ip, pc, #0, 12
 e14:	add	ip, ip, #73728	; 0x12000
 e18:	ldr	pc, [ip, #576]!	; 0x240

00000e1c <sendto_server@plt>:
 e1c:	add	ip, pc, #0, 12
 e20:	add	ip, ip, #73728	; 0x12000
 e24:	ldr	pc, [ip, #568]!	; 0x238

00000e28 <malloc@plt>:
 e28:	add	ip, pc, #0, 12
 e2c:	add	ip, ip, #73728	; 0x12000
 e30:	ldr	pc, [ip, #560]!	; 0x230

00000e34 <__gmon_start__@plt>:
 e34:	add	ip, pc, #0, 12
 e38:	add	ip, ip, #73728	; 0x12000
 e3c:	ldr	pc, [ip, #552]!	; 0x228

00000e40 <free_conf@plt>:
 e40:	add	ip, pc, #0, 12
 e44:	add	ip, ip, #73728	; 0x12000
 e48:	ldr	pc, [ip, #544]!	; 0x220

00000e4c <rb_make_rb_dlink_node@plt>:
 e4c:	add	ip, pc, #0, 12
 e50:	add	ip, ip, #73728	; 0x12000
 e54:	ldr	pc, [ip, #536]!	; 0x218

00000e58 <strlen@plt>:
 e58:	add	ip, pc, #0, 12
 e5c:	add	ip, ip, #73728	; 0x12000
 e60:	ldr	pc, [ip, #528]!	; 0x210

00000e64 <ilog@plt>:
 e64:	add	ip, pc, #0, 12
 e68:	add	ip, ip, #73728	; 0x12000
 e6c:	ldr	pc, [ip, #520]!	; 0x208

00000e70 <match@plt>:
 e70:	add	ip, pc, #0, 12
 e74:	add	ip, ip, #73728	; 0x12000
 e78:	ldr	pc, [ip, #512]!	; 0x200

00000e7c <del_from_resv_hash@plt>:
 e7c:	add	ip, pc, #0, 12
 e80:	add	ip, ip, #73728	; 0x12000
 e84:	ldr	pc, [ip, #504]!	; 0x1f8

00000e88 <find_nick_resv_mask@plt>:
 e88:	add	ip, pc, #0, 12
 e8c:	add	ip, ip, #73728	; 0x12000
 e90:	ldr	pc, [ip, #496]!	; 0x1f0

00000e94 <valid_temp_time@plt>:
 e94:	add	ip, pc, #0, 12
 e98:	add	ip, ip, #73728	; 0x12000
 e9c:	ldr	pc, [ip, #488]!	; 0x1e8

00000ea0 <sendto_one_notice@plt>:
 ea0:	add	ip, pc, #0, 12
 ea4:	add	ip, ip, #73728	; 0x12000
 ea8:	ldr	pc, [ip, #480]!	; 0x1e0

00000eac <bandb_del@plt>:
 eac:	add	ip, pc, #0, 12
 eb0:	add	ip, ip, #73728	; 0x12000
 eb4:	ldr	pc, [ip, #472]!	; 0x1d8

00000eb8 <atoi@plt>:
 eb8:	add	ip, pc, #0, 12
 ebc:	add	ip, ip, #73728	; 0x12000
 ec0:	ldr	pc, [ip, #464]!	; 0x1d0

00000ec4 <valid_wild_card_simple@plt>:
 ec4:	add	ip, pc, #0, 12
 ec8:	add	ip, ip, #73728	; 0x12000
 ecc:	ldr	pc, [ip, #456]!	; 0x1c8

00000ed0 <find_shared_conf@plt>:
 ed0:	add	ip, pc, #0, 12
 ed4:	add	ip, ip, #73728	; 0x12000
 ed8:	ldr	pc, [ip, #448]!	; 0x1c0

00000edc <privilegeset_in_set@plt>:
 edc:	add	ip, pc, #0, 12
 ee0:	add	ip, ip, #73728	; 0x12000
 ee4:	ldr	pc, [ip, #440]!	; 0x1b8

00000ee8 <hash_find_resv@plt>:
 ee8:	add	ip, pc, #0, 12
 eec:	add	ip, ip, #73728	; 0x12000
 ef0:	ldr	pc, [ip, #432]!	; 0x1b0

00000ef4 <irccmp@plt>:
 ef4:	add	ip, pc, #0, 12
 ef8:	add	ip, ip, #73728	; 0x12000
 efc:	ldr	pc, [ip, #424]!	; 0x1a8

00000f00 <clean_resv_nick@plt>:
 f00:	add	ip, pc, #0, 12
 f04:	add	ip, ip, #73728	; 0x12000
 f08:	ldr	pc, [ip, #416]!	; 0x1a0

00000f0c <__assert_fail@plt>:
 f0c:	add	ip, pc, #0, 12
 f10:	add	ip, ip, #73728	; 0x12000
 f14:	ldr	pc, [ip, #408]!	; 0x198

Disassembly of section .text:

00000f18 <call_weak_fn>:
     f18:	ldr	r3, [pc, #20]	; f34 <call_weak_fn+0x1c>
     f1c:	ldr	r2, [pc, #20]	; f38 <call_weak_fn+0x20>
     f20:	add	r3, pc, r3
     f24:	ldr	r2, [r3, r2]
     f28:	cmp	r2, #0
     f2c:	bxeq	lr
     f30:	b	e34 <__gmon_start__@plt>
     f34:	.word	0x000120d8
     f38:	.word	0x000000cc

00000f3c <deregister_tm_clones>:
     f3c:	ldr	r0, [pc, #44]	; f70 <deregister_tm_clones+0x34>
     f40:	ldr	r3, [pc, #44]	; f74 <deregister_tm_clones+0x38>
     f44:	add	r0, pc, r0
     f48:	add	r3, pc, r3
     f4c:	cmp	r3, r0
     f50:	ldr	r3, [pc, #32]	; f78 <deregister_tm_clones+0x3c>
     f54:	add	r3, pc, r3
     f58:	bxeq	lr
     f5c:	ldr	r2, [pc, #24]	; f7c <deregister_tm_clones+0x40>
     f60:	ldr	r3, [r3, r2]
     f64:	cmp	r3, #0
     f68:	bxeq	lr
     f6c:	bx	r3
     f70:	.word	0x0001225c
     f74:	.word	0x00012258
     f78:	.word	0x000120a4
     f7c:	.word	0x000000b4

00000f80 <register_tm_clones>:
     f80:	ldr	r0, [pc, #56]	; fc0 <register_tm_clones+0x40>
     f84:	ldr	r3, [pc, #56]	; fc4 <register_tm_clones+0x44>
     f88:	add	r0, pc, r0
     f8c:	add	r3, pc, r3
     f90:	sub	r1, r3, r0
     f94:	ldr	r3, [pc, #44]	; fc8 <register_tm_clones+0x48>
     f98:	asr	r1, r1, #2
     f9c:	add	r3, pc, r3
     fa0:	add	r1, r1, r1, lsr #31
     fa4:	asrs	r1, r1, #1
     fa8:	bxeq	lr
     fac:	ldr	r2, [pc, #24]	; fcc <register_tm_clones+0x4c>
     fb0:	ldr	r3, [r3, r2]
     fb4:	cmp	r3, #0
     fb8:	bxeq	lr
     fbc:	bx	r3
     fc0:	.word	0x00012218
     fc4:	.word	0x00012214
     fc8:	.word	0x0001205c
     fcc:	.word	0x000000d8

00000fd0 <__do_global_dtors_aux>:
     fd0:	ldr	r3, [pc, #76]	; 1024 <__do_global_dtors_aux+0x54>
     fd4:	ldr	r2, [pc, #76]	; 1028 <__do_global_dtors_aux+0x58>
     fd8:	add	r3, pc, r3
     fdc:	add	r2, pc, r2
     fe0:	ldrb	r3, [r3]
     fe4:	cmp	r3, #0
     fe8:	bxne	lr
     fec:	ldr	r3, [pc, #56]	; 102c <__do_global_dtors_aux+0x5c>
     ff0:	push	{r4, lr}
     ff4:	ldr	r3, [r2, r3]
     ff8:	cmp	r3, #0
     ffc:	beq	100c <__do_global_dtors_aux+0x3c>
    1000:	ldr	r3, [pc, #40]	; 1030 <__do_global_dtors_aux+0x60>
    1004:	ldr	r0, [pc, r3]
    1008:	bl	d68 <__cxa_finalize@plt>
    100c:	bl	f3c <deregister_tm_clones>
    1010:	ldr	r3, [pc, #28]	; 1034 <__do_global_dtors_aux+0x64>
    1014:	mov	r2, #1
    1018:	add	r3, pc, r3
    101c:	strb	r2, [r3]
    1020:	pop	{r4, pc}
    1024:	.word	0x000121c8
    1028:	.word	0x0001201c
    102c:	.word	0x000000b0
    1030:	.word	0x000120dc
    1034:	.word	0x00012188

00001038 <frame_dummy>:
    1038:	b	f80 <register_tm_clones>

0000103c <ms_resv>:
    103c:	push	{r4, r5, fp, lr}
    1040:	add	fp, sp, #8
    1044:	sub	sp, sp, #8
    1048:	ldr	r5, [fp, #8]
    104c:	mov	r4, r2
    1050:	ldmib	r5, {r1, r3}
    1054:	ldr	r0, [r5, #12]
    1058:	str	r0, [sp]
    105c:	mov	r0, r2
    1060:	mov	r2, #0
    1064:	bl	1688 <propagate_resv>
    1068:	ldr	r0, [r5, #4]
    106c:	ldr	r1, [pc, #76]	; 10c0 <ms_resv+0x84>
    1070:	ldr	r1, [pc, r1]
    1074:	add	r1, r1, #88	; 0x58
    1078:	bl	e70 <match@plt>
    107c:	cmp	r0, #0
    1080:	beq	10b8 <ms_resv+0x7c>
    1084:	ldrh	r0, [r4, #80]	; 0x50
    1088:	cmp	r0, #64	; 0x40
    108c:	bne	10b8 <ms_resv+0x7c>
    1090:	ldr	r0, [r4, #24]
    1094:	cmp	r0, #0
    1098:	beq	10b8 <ms_resv+0x7c>
    109c:	ldr	r1, [r5, #8]
    10a0:	ldr	r2, [r5, #12]
    10a4:	mov	r0, #0
    10a8:	mov	r3, #0
    10ac:	str	r0, [sp]
    10b0:	mov	r0, r4
    10b4:	bl	175c <parse_resv>
    10b8:	sub	sp, fp, #8
    10bc:	pop	{r4, r5, fp, pc}
    10c0:	.word	0x00012064

000010c4 <me_resv>:
    10c4:	push	{r4, r5, r6, sl, fp, lr}
    10c8:	add	fp, sp, #16
    10cc:	sub	sp, sp, #8
    10d0:	ldrh	r0, [r2, #80]	; 0x50
    10d4:	cmp	r0, #64	; 0x40
    10d8:	bne	1118 <me_resv+0x54>
    10dc:	ldr	r0, [r2, #24]
    10e0:	mov	r4, r2
    10e4:	cmp	r0, #0
    10e8:	beq	1118 <me_resv+0x54>
    10ec:	ldr	r1, [fp, #8]
    10f0:	ldmib	r1, {r0, r5}
    10f4:	ldr	r6, [r1, #16]
    10f8:	bl	eb8 <atoi@plt>
    10fc:	mov	r3, r0
    1100:	mov	r0, #0
    1104:	mov	r1, r5
    1108:	mov	r2, r6
    110c:	str	r0, [sp]
    1110:	mov	r0, r4
    1114:	bl	175c <parse_resv>
    1118:	sub	sp, fp, #16
    111c:	pop	{r4, r5, r6, sl, fp, pc}

00001120 <mo_resv>:
    1120:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1124:	add	fp, sp, #28
    1128:	sub	sp, sp, #36	; 0x24
    112c:	ldr	r0, [r2, #24]
    1130:	mov	r4, r2
    1134:	cmp	r0, #0
    1138:	ldrne	r0, [r0, #36]	; 0x24
    113c:	cmpne	r0, #0
    1140:	bne	1178 <mo_resv+0x58>
    1144:	ldr	r0, [pc, #696]	; 1404 <mo_resv+0x2e4>
    1148:	add	r0, pc, r0
    114c:	str	r0, [sp]
    1150:	add	r3, r4, #88	; 0x58
    1154:	ldr	r0, [pc, #684]	; 1408 <mo_resv+0x2e8>
    1158:	ldr	r0, [pc, r0]
    115c:	ldr	r1, [pc, #680]	; 140c <mo_resv+0x2ec>
    1160:	add	r2, r0, #88	; 0x58
    1164:	add	r1, pc, r1
    1168:	mov	r0, r4
    116c:	bl	d74 <sendto_one@plt>
    1170:	sub	sp, fp, #28
    1174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1178:	ldr	r1, [pc, #636]	; 13fc <mo_resv+0x2dc>
    117c:	mov	r7, r3
    1180:	ldr	r1, [pc, r1]
    1184:	ldr	r5, [fp, #8]
    1188:	ldr	r6, [r1, #324]	; 0x144
    118c:	ldr	r1, [pc, #620]	; 1400 <mo_resv+0x2e0>
    1190:	add	r1, pc, r1
    1194:	bl	edc <privilegeset_in_set@plt>
    1198:	cmp	r0, #0
    119c:	beq	1144 <mo_resv+0x24>
    11a0:	ldr	r0, [r5, #4]
    11a4:	str	r6, [sp, #32]
    11a8:	bl	e94 <valid_temp_time@plt>
    11ac:	mov	r6, #0
    11b0:	cmn	r0, #1
    11b4:	mov	r8, #1
    11b8:	movwgt	r8, #2
    11bc:	movle	r0, r6
    11c0:	str	r0, [sp, #28]
    11c4:	ldr	r0, [r5, r8, lsl #2]
    11c8:	add	sl, r8, #3
    11cc:	add	r9, r8, #1
    11d0:	cmp	sl, r7
    11d4:	str	r0, [sp, #24]
    11d8:	bgt	11f4 <mo_resv+0xd4>
    11dc:	ldr	r0, [r5, r9, lsl #2]
    11e0:	ldr	r1, [pc, #552]	; 1410 <mo_resv+0x2f0>
    11e4:	add	r1, pc, r1
    11e8:	bl	ef4 <irccmp@plt>
    11ec:	cmp	r0, #0
    11f0:	beq	1238 <mo_resv+0x118>
    11f4:	cmp	r9, r7
    11f8:	bge	1210 <mo_resv+0xf0>
    11fc:	ldr	r7, [r5, r9, lsl #2]
    1200:	cmp	r7, #0
    1204:	ldrbne	r0, [r7]
    1208:	cmpne	r0, #0
    120c:	bne	1258 <mo_resv+0x138>
    1210:	ldr	r0, [pc, #516]	; 141c <mo_resv+0x2fc>
    1214:	add	r3, r4, #88	; 0x58
    1218:	add	r0, pc, r0
    121c:	str	r0, [sp]
    1220:	ldr	r0, [pc, #504]	; 1420 <mo_resv+0x300>
    1224:	ldr	r0, [pc, r0]
    1228:	ldr	r1, [pc, #500]	; 1424 <mo_resv+0x304>
    122c:	add	r2, r0, #88	; 0x58
    1230:	add	r1, pc, r1
    1234:	b	1168 <mo_resv+0x48>
    1238:	ldr	r0, [r4, #24]
    123c:	cmp	r0, #0
    1240:	ldrne	r0, [r0, #36]	; 0x24
    1244:	cmpne	r0, #0
    1248:	bne	13d0 <mo_resv+0x2b0>
    124c:	ldr	r0, [pc, #452]	; 1418 <mo_resv+0x2f8>
    1250:	add	r0, pc, r0
    1254:	b	114c <mo_resv+0x2c>
    1258:	cmp	r6, #0
    125c:	beq	12a0 <mo_resv+0x180>
    1260:	str	r7, [sp]
    1264:	mov	r0, r4
    1268:	mov	r1, r6
    126c:	ldr	r9, [sp, #28]
    1270:	ldr	sl, [sp, #24]
    1274:	mov	r2, r9
    1278:	mov	r3, sl
    127c:	bl	1688 <propagate_resv>
    1280:	ldr	r0, [pc, #416]	; 1428 <mo_resv+0x308>
    1284:	ldr	r0, [pc, r0]
    1288:	add	r1, r0, #88	; 0x58
    128c:	mov	r0, r6
    1290:	bl	e70 <match@plt>
    1294:	cmp	r0, #0
    1298:	bne	1388 <mo_resv+0x268>
    129c:	b	1170 <mo_resv+0x50>
    12a0:	ldr	r0, [sp, #32]
    12a4:	ldr	r9, [sp, #28]
    12a8:	ldr	sl, [sp, #24]
    12ac:	cmp	r0, #0
    12b0:	bne	1388 <mo_resv+0x268>
    12b4:	ldr	r0, [pc, #368]	; 142c <mo_resv+0x30c>
    12b8:	ldr	r0, [pc, r0]
    12bc:	ldr	r1, [r0, #8]
    12c0:	cmp	r1, #0
    12c4:	beq	1388 <mo_resv+0x268>
    12c8:	ldr	r5, [r0]
    12cc:	ldr	r0, [sp, #32]
    12d0:	cmp	r5, #0
    12d4:	beq	13b4 <mo_resv+0x294>
    12d8:	ldr	r8, [pc, #336]	; 1430 <mo_resv+0x310>
    12dc:	ldr	r8, [pc, r8]
    12e0:	ldr	r6, [r5]
    12e4:	cmp	r9, #0
    12e8:	ldr	r0, [r6, #12]
    12ec:	beq	131c <mo_resv+0x1fc>
    12f0:	tst	r0, #128	; 0x80
    12f4:	beq	137c <mo_resv+0x25c>
    12f8:	ldr	r2, [r8]
    12fc:	ldr	r1, [r6, #8]
    1300:	ldr	r0, [pc, #316]	; 1444 <mo_resv+0x324>
    1304:	mov	r3, #0
    1308:	add	r0, pc, r0
    130c:	stm	sp, {r0, r1, r9, sl}
    1310:	mov	r0, r4
    1314:	str	r7, [sp, #16]
    1318:	b	1378 <mo_resv+0x258>
    131c:	tst	r0, #256	; 0x100
    1320:	beq	137c <mo_resv+0x25c>
    1324:	ldr	r0, [pc, #264]	; 1434 <mo_resv+0x314>
    1328:	mov	r3, #0
    132c:	ldr	r0, [pc, r0]
    1330:	ldr	r1, [r6, #8]
    1334:	ldr	r2, [r0]
    1338:	ldr	r0, [pc, #248]	; 1438 <mo_resv+0x318>
    133c:	add	r0, pc, r0
    1340:	stm	sp, {r0, r1, sl}
    1344:	mov	r0, r4
    1348:	str	r7, [sp, #12]
    134c:	bl	d5c <sendto_match_servs@plt>
    1350:	ldr	r0, [pc, #228]	; 143c <mo_resv+0x31c>
    1354:	ldr	r0, [pc, r0]
    1358:	ldr	r2, [r8]
    135c:	ldr	r1, [r6, #8]
    1360:	ldr	r3, [r0]
    1364:	ldr	r0, [pc, #212]	; 1440 <mo_resv+0x320>
    1368:	add	r0, pc, r0
    136c:	stm	sp, {r0, r1, sl}
    1370:	str	r7, [sp, #12]
    1374:	mov	r0, r4
    1378:	bl	d5c <sendto_match_servs@plt>
    137c:	ldr	r5, [r5, #8]
    1380:	cmp	r5, #0
    1384:	bne	12e0 <mo_resv+0x1c0>
    1388:	ldr	r0, [sp, #32]
    138c:	cmp	r9, #0
    1390:	bne	13b4 <mo_resv+0x294>
    1394:	cmp	r0, #0
    1398:	beq	13b4 <mo_resv+0x294>
    139c:	ldr	r1, [pc, #164]	; 1448 <mo_resv+0x328>
    13a0:	mov	r0, r4
    13a4:	add	r1, pc, r1
    13a8:	sub	sp, fp, #28
    13ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    13b0:	b	ea0 <sendto_one_notice@plt>
    13b4:	str	r0, [sp]
    13b8:	mov	r0, r4
    13bc:	mov	r1, sl
    13c0:	mov	r2, r7
    13c4:	mov	r3, r9
    13c8:	bl	175c <parse_resv>
    13cc:	b	1170 <mo_resv+0x50>
    13d0:	ldr	r1, [pc, #60]	; 1414 <mo_resv+0x2f4>
    13d4:	add	r1, pc, r1
    13d8:	bl	edc <privilegeset_in_set@plt>
    13dc:	cmp	r0, #0
    13e0:	beq	124c <mo_resv+0x12c>
    13e4:	add	r0, r5, r8, lsl #2
    13e8:	mov	r9, sl
    13ec:	ldr	r6, [r0, #8]
    13f0:	mov	r0, #0
    13f4:	str	r0, [sp, #32]
    13f8:	b	11f4 <mo_resv+0xd4>
    13fc:	.word	0x00011f5c
    1400:	.word	0x000013a3
    1404:	.word	0x00001640
    1408:	.word	0x00011f7c
    140c:	.word	0x000013d9
    1410:	.word	0x00001380
    1414:	.word	0x00001193
    1418:	.word	0x0000131c
    141c:	.word	0x00001316
    1420:	.word	0x00011eb0
    1424:	.word	0x00001346
    1428:	.word	0x00011e50
    142c:	.word	0x00011e10
    1430:	.word	0x00011dfc
    1434:	.word	0x00011d8c
    1438:	.word	0x00001282
    143c:	.word	0x00011d64
    1440:	.word	0x0000127f
    1444:	.word	0x000012c5
    1448:	.word	0x000011f7

0000144c <ms_unresv>:
    144c:	push	{r4, r5, fp, lr}
    1450:	add	fp, sp, #8
    1454:	sub	sp, sp, #8
    1458:	ldr	r0, [pc, #132]	; 14e4 <ms_unresv+0x98>
    145c:	mov	r4, r2
    1460:	ldr	r0, [pc, r0]
    1464:	ldr	r5, [fp, #8]
    1468:	ldr	r3, [r0]
    146c:	ldr	r2, [r5, #4]
    1470:	ldr	r0, [r5, #8]
    1474:	ldr	r1, [pc, #108]	; 14e8 <ms_unresv+0x9c>
    1478:	add	r1, pc, r1
    147c:	str	r0, [sp, #4]
    1480:	mov	r0, r4
    1484:	str	r1, [sp]
    1488:	ldr	r1, [pc, #92]	; 14ec <ms_unresv+0xa0>
    148c:	add	r1, pc, r1
    1490:	bl	d2c <propagate_generic@plt>
    1494:	ldr	r0, [r5, #4]
    1498:	ldr	r1, [pc, #80]	; 14f0 <ms_unresv+0xa4>
    149c:	ldr	r1, [pc, r1]
    14a0:	add	r1, r1, #88	; 0x58
    14a4:	bl	e70 <match@plt>
    14a8:	cmp	r0, #0
    14ac:	beq	14dc <ms_unresv+0x90>
    14b0:	ldrh	r0, [r4, #80]	; 0x50
    14b4:	cmp	r0, #64	; 0x40
    14b8:	bne	14dc <ms_unresv+0x90>
    14bc:	ldr	r0, [r4, #24]
    14c0:	cmp	r0, #0
    14c4:	beq	14dc <ms_unresv+0x90>
    14c8:	ldr	r1, [r5, #8]
    14cc:	mov	r0, r4
    14d0:	sub	sp, fp, #8
    14d4:	pop	{r4, r5, fp, lr}
    14d8:	b	24e8 <handle_remote_unresv>
    14dc:	sub	sp, fp, #8
    14e0:	pop	{r4, r5, fp, pc}
    14e4:	.word	0x00011c58
    14e8:	.word	0x000011cd
    14ec:	.word	0x000010a0
    14f0:	.word	0x00011c38

000014f4 <me_unresv>:
    14f4:	ldrh	r0, [r2, #80]	; 0x50
    14f8:	cmp	r0, #64	; 0x40
    14fc:	bxne	lr
    1500:	ldr	r0, [r2, #24]
    1504:	cmp	r0, #0
    1508:	beq	151c <me_unresv+0x28>
    150c:	ldr	r0, [sp]
    1510:	ldr	r1, [r0, #4]
    1514:	mov	r0, r2
    1518:	b	24e8 <handle_remote_unresv>
    151c:	bx	lr

00001520 <mo_unresv>:
    1520:	push	{r4, r5, r6, r7, fp, lr}
    1524:	add	fp, sp, #16
    1528:	sub	sp, sp, #8
    152c:	ldr	r0, [r2, #24]
    1530:	mov	r4, r2
    1534:	cmp	r0, #0
    1538:	ldrne	r0, [r0, #36]	; 0x24
    153c:	cmpne	r0, #0
    1540:	bne	1578 <mo_unresv+0x58>
    1544:	ldr	r0, [pc, #276]	; 1660 <mo_unresv+0x140>
    1548:	add	r0, pc, r0
    154c:	str	r0, [sp]
    1550:	add	r3, r4, #88	; 0x58
    1554:	ldr	r0, [pc, #264]	; 1664 <mo_unresv+0x144>
    1558:	ldr	r0, [pc, r0]
    155c:	ldr	r1, [pc, #260]	; 1668 <mo_unresv+0x148>
    1560:	add	r2, r0, #88	; 0x58
    1564:	add	r1, pc, r1
    1568:	mov	r0, r4
    156c:	bl	d74 <sendto_one@plt>
    1570:	sub	sp, fp, #16
    1574:	pop	{r4, r5, r6, r7, fp, pc}
    1578:	ldr	r7, [fp, #8]
    157c:	ldr	r1, [pc, #216]	; 165c <mo_unresv+0x13c>
    1580:	mov	r6, r3
    1584:	add	r1, pc, r1
    1588:	bl	edc <privilegeset_in_set@plt>
    158c:	cmp	r0, #0
    1590:	beq	1544 <mo_unresv+0x24>
    1594:	mov	r5, #1
    1598:	cmp	r6, #4
    159c:	bne	15b8 <mo_unresv+0x98>
    15a0:	ldr	r0, [r7, #8]
    15a4:	ldr	r1, [pc, #192]	; 166c <mo_unresv+0x14c>
    15a8:	add	r1, pc, r1
    15ac:	bl	ef4 <irccmp@plt>
    15b0:	cmp	r0, #0
    15b4:	beq	15d0 <mo_unresv+0xb0>
    15b8:	ldr	r1, [r7, #4]
    15bc:	mov	r0, r4
    15c0:	mov	r2, r5
    15c4:	sub	sp, fp, #16
    15c8:	pop	{r4, r5, r6, r7, fp, lr}
    15cc:	b	1fc8 <remove_resv>
    15d0:	ldr	r0, [r4, #24]
    15d4:	cmp	r0, #0
    15d8:	ldrne	r0, [r0, #36]	; 0x24
    15dc:	cmpne	r0, #0
    15e0:	bne	15f0 <mo_unresv+0xd0>
    15e4:	ldr	r0, [pc, #136]	; 1674 <mo_unresv+0x154>
    15e8:	add	r0, pc, r0
    15ec:	b	154c <mo_unresv+0x2c>
    15f0:	ldr	r1, [pc, #120]	; 1670 <mo_unresv+0x150>
    15f4:	add	r1, pc, r1
    15f8:	bl	edc <privilegeset_in_set@plt>
    15fc:	cmp	r0, #0
    1600:	beq	15e4 <mo_unresv+0xc4>
    1604:	ldr	r0, [pc, #108]	; 1678 <mo_unresv+0x158>
    1608:	ldr	r0, [pc, r0]
    160c:	ldr	r2, [r7, #12]
    1610:	ldr	r3, [r0]
    1614:	ldr	r0, [r7, #4]
    1618:	ldr	r1, [pc, #92]	; 167c <mo_unresv+0x15c>
    161c:	add	r1, pc, r1
    1620:	str	r0, [sp, #4]
    1624:	mov	r0, r4
    1628:	str	r1, [sp]
    162c:	ldr	r1, [pc, #76]	; 1680 <mo_unresv+0x160>
    1630:	add	r1, pc, r1
    1634:	bl	d2c <propagate_generic@plt>
    1638:	ldr	r0, [r7, #12]
    163c:	ldr	r1, [pc, #64]	; 1684 <mo_unresv+0x164>
    1640:	ldr	r1, [pc, r1]
    1644:	add	r1, r1, #88	; 0x58
    1648:	bl	e70 <match@plt>
    164c:	mov	r5, #0
    1650:	cmp	r0, #0
    1654:	bne	15b8 <mo_unresv+0x98>
    1658:	b	1570 <mo_unresv+0x50>
    165c:	.word	0x00000faf
    1660:	.word	0x00001240
    1664:	.word	0x00011b7c
    1668:	.word	0x00000fd9
    166c:	.word	0x00000fbc
    1670:	.word	0x00000f73
    1674:	.word	0x00000f84
    1678:	.word	0x00011ab0
    167c:	.word	0x00001029
    1680:	.word	0x00000efc
    1684:	.word	0x00011a94

00001688 <propagate_resv>:
    1688:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    168c:	add	fp, sp, #24
    1690:	sub	sp, sp, #24
    1694:	ldr	r7, [fp, #8]
    1698:	mov	r6, r3
    169c:	mov	r4, r1
    16a0:	mov	r5, r0
    16a4:	cmp	r2, #0
    16a8:	beq	16e0 <propagate_resv+0x58>
    16ac:	ldr	r0, [pc, #160]	; 1754 <propagate_resv+0xcc>
    16b0:	mov	r1, r4
    16b4:	ldr	r0, [pc, r0]
    16b8:	ldr	r3, [r0]
    16bc:	ldr	r0, [pc, #148]	; 1758 <propagate_resv+0xd0>
    16c0:	add	r0, pc, r0
    16c4:	stm	sp, {r0, r4}
    16c8:	add	r0, sp, #8
    16cc:	stm	r0, {r2, r6, r7}
    16d0:	mov	r2, r3
    16d4:	mov	r0, r5
    16d8:	mov	r3, #0
    16dc:	b	1738 <propagate_resv+0xb0>
    16e0:	ldr	r8, [pc, #92]	; 1744 <propagate_resv+0xbc>
    16e4:	mov	r1, r4
    16e8:	mov	r3, #0
    16ec:	mov	r9, #0
    16f0:	ldr	r8, [pc, r8]
    16f4:	ldr	r2, [r8]
    16f8:	ldr	r0, [pc, #72]	; 1748 <propagate_resv+0xc0>
    16fc:	add	r0, pc, r0
    1700:	stm	sp, {r0, r4, r6, r7}
    1704:	mov	r0, r5
    1708:	bl	d5c <sendto_match_servs@plt>
    170c:	ldr	r3, [r8]
    1710:	ldr	r0, [pc, #52]	; 174c <propagate_resv+0xc4>
    1714:	mov	r1, r4
    1718:	ldr	r0, [pc, r0]
    171c:	ldr	r2, [r0]
    1720:	ldr	r0, [pc, #40]	; 1750 <propagate_resv+0xc8>
    1724:	add	r0, pc, r0
    1728:	stm	sp, {r0, r4, r9}
    172c:	str	r6, [sp, #12]
    1730:	str	r7, [sp, #16]
    1734:	mov	r0, r5
    1738:	bl	d5c <sendto_match_servs@plt>
    173c:	sub	sp, fp, #24
    1740:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1744:	.word	0x000119c8
    1748:	.word	0x00000ec2
    174c:	.word	0x000119c0
    1750:	.word	0x00000ea9
    1754:	.word	0x00011a24
    1758:	.word	0x00000f0d

0000175c <parse_resv>:
    175c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1760:	add	fp, sp, #28
    1764:	sub	sp, sp, #28
    1768:	mov	r5, r0
    176c:	ldrb	r0, [r0, #65]	; 0x41
    1770:	ldr	r4, [fp, #8]
    1774:	mov	r9, r3
    1778:	mov	sl, r2
    177c:	mov	r6, r1
    1780:	tst	r0, #32
    1784:	beq	1794 <parse_resv+0x38>
    1788:	ldrh	r0, [r5, #80]	; 0x50
    178c:	cmp	r0, #64	; 0x40
    1790:	beq	17c0 <parse_resv+0x64>
    1794:	ldr	r2, [r5, #32]
    1798:	mov	r3, #256	; 0x100
    179c:	cmp	r9, #0
    17a0:	add	r0, r5, #152	; 0x98
    17a4:	add	r1, r5, #163	; 0xa3
    17a8:	movwgt	r3, #128	; 0x80
    17ac:	add	r2, r2, #88	; 0x58
    17b0:	bl	ed0 <find_shared_conf@plt>
    17b4:	cmp	r0, #0
    17b8:	subeq	sp, fp, #28
    17bc:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    17c0:	cmp	r6, #0
    17c4:	beq	17e4 <parse_resv+0x88>
    17c8:	ldrb	r0, [r6]
    17cc:	ldr	r1, [pc, #1888]	; 1f34 <parse_resv+0x7d8>
    17d0:	ldr	r1, [pc, r1]
    17d4:	add	r0, r1, r0, lsl #2
    17d8:	ldrb	r0, [r0, #1]
    17dc:	tst	r0, #2
    17e0:	bne	1830 <parse_resv+0xd4>
    17e4:	mov	r0, r6
    17e8:	bl	f00 <clean_resv_nick@plt>
    17ec:	cmp	r0, #0
    17f0:	beq	184c <parse_resv+0xf0>
    17f4:	mov	r0, r6
    17f8:	bl	e58 <strlen@plt>
    17fc:	cmp	r0, #65	; 0x41
    1800:	bcs	1868 <parse_resv+0x10c>
    1804:	mov	r0, r6
    1808:	bl	ec4 <valid_wild_card_simple@plt>
    180c:	cmp	r0, #0
    1810:	beq	1884 <parse_resv+0x128>
    1814:	mov	r0, r6
    1818:	bl	e88 <find_nick_resv_mask@plt>
    181c:	cmp	r0, #0
    1820:	beq	1988 <parse_resv+0x22c>
    1824:	ldr	r1, [pc, #1872]	; 1f7c <parse_resv+0x820>
    1828:	add	r1, pc, r1
    182c:	b	1870 <parse_resv+0x114>
    1830:	mov	r0, r6
    1834:	bl	ee8 <hash_find_resv@plt>
    1838:	cmp	r0, #0
    183c:	beq	1858 <parse_resv+0xfc>
    1840:	ldr	r1, [pc, #1776]	; 1f38 <parse_resv+0x7dc>
    1844:	add	r1, pc, r1
    1848:	b	1870 <parse_resv+0x114>
    184c:	ldr	r1, [pc, #1892]	; 1fb8 <parse_resv+0x85c>
    1850:	add	r1, pc, r1
    1854:	b	1870 <parse_resv+0x114>
    1858:	mov	r0, r6
    185c:	bl	e58 <strlen@plt>
    1860:	cmp	r0, #201	; 0xc9
    1864:	bcc	18a0 <parse_resv+0x144>
    1868:	ldr	r1, [pc, #1740]	; 1f3c <parse_resv+0x7e0>
    186c:	add	r1, pc, r1
    1870:	mov	r0, r5
    1874:	mov	r2, r6
    1878:	sub	sp, fp, #28
    187c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1880:	b	ea0 <sendto_one_notice@plt>
    1884:	ldr	r0, [pc, #1768]	; 1f74 <parse_resv+0x818>
    1888:	ldr	r0, [pc, r0]
    188c:	ldr	r2, [r0, #240]	; 0xf0
    1890:	ldr	r1, [pc, #1760]	; 1f78 <parse_resv+0x81c>
    1894:	mov	r0, r5
    1898:	add	r1, pc, r1
    189c:	b	1878 <parse_resv+0x11c>
    18a0:	bl	d38 <make_conf@plt>
    18a4:	mov	r8, r0
    18a8:	mov	r0, #256	; 0x100
    18ac:	str	r0, [r8]
    18b0:	mov	r0, #0
    18b4:	str	r0, [r8, #32]
    18b8:	bl	d44 <rb_current_time@plt>
    18bc:	str	r0, [r8, #40]	; 0x28
    18c0:	mov	r0, r6
    18c4:	bl	e58 <strlen@plt>
    18c8:	add	r0, r0, #1
    18cc:	bl	e28 <malloc@plt>
    18d0:	cmp	r0, #0
    18d4:	beq	1f10 <parse_resv+0x7b4>
    18d8:	mov	r1, r6
    18dc:	mov	r7, r0
    18e0:	bl	e10 <strcpy@plt>
    18e4:	mov	r0, sl
    18e8:	str	r7, [r8, #16]
    18ec:	bl	e58 <strlen@plt>
    18f0:	add	r0, r0, #1
    18f4:	bl	e28 <malloc@plt>
    18f8:	cmp	r0, #0
    18fc:	beq	1f10 <parse_resv+0x7b4>
    1900:	mov	r1, sl
    1904:	mov	r7, r0
    1908:	bl	e10 <strcpy@plt>
    190c:	mov	r0, r5
    1910:	str	r7, [r8, #20]
    1914:	bl	de0 <get_oper_name@plt>
    1918:	bl	e04 <operhash_add@plt>
    191c:	cmp	r4, #0
    1920:	str	r0, [r8, #12]
    1924:	beq	1a70 <parse_resv+0x314>
    1928:	ldr	r0, [r8, #4]
    192c:	orr	r0, r0, #8912896	; 0x880000
    1930:	str	r0, [r8, #4]
    1934:	bl	d44 <rb_current_time@plt>
    1938:	add	r0, r0, r9
    193c:	str	r0, [r8, #36]	; 0x24
    1940:	str	r0, [r8, #44]	; 0x2c
    1944:	mov	r0, r8
    1948:	bl	d80 <replace_old_ban@plt>
    194c:	bl	e4c <rb_make_rb_dlink_node@plt>
    1950:	cmp	r0, #0
    1954:	beq	1f14 <parse_resv+0x7b8>
    1958:	mov	r1, #0
    195c:	str	r1, [r0, #4]
    1960:	str	r8, [r0]
    1964:	ldr	r1, [pc, #1492]	; 1f40 <parse_resv+0x7e4>
    1968:	ldr	r1, [pc, r1]
    196c:	ldr	r2, [r1]
    1970:	cmp	r2, #0
    1974:	str	r2, [r0, #8]
    1978:	beq	1b80 <parse_resv+0x424>
    197c:	add	r2, r2, #4
    1980:	str	r0, [r2]
    1984:	b	1b90 <parse_resv+0x434>
    1988:	bl	d38 <make_conf@plt>
    198c:	mov	r8, r0
    1990:	mov	r0, #512	; 0x200
    1994:	str	r0, [r8]
    1998:	mov	r0, #0
    199c:	str	r0, [r8, #32]
    19a0:	bl	d44 <rb_current_time@plt>
    19a4:	str	r0, [r8, #40]	; 0x28
    19a8:	mov	r0, r6
    19ac:	bl	e58 <strlen@plt>
    19b0:	add	r0, r0, #1
    19b4:	bl	e28 <malloc@plt>
    19b8:	cmp	r0, #0
    19bc:	beq	1f10 <parse_resv+0x7b4>
    19c0:	mov	r1, r6
    19c4:	mov	r7, r0
    19c8:	bl	e10 <strcpy@plt>
    19cc:	mov	r0, sl
    19d0:	str	r7, [r8, #16]
    19d4:	bl	e58 <strlen@plt>
    19d8:	add	r0, r0, #1
    19dc:	bl	e28 <malloc@plt>
    19e0:	cmp	r0, #0
    19e4:	beq	1f10 <parse_resv+0x7b4>
    19e8:	mov	r1, sl
    19ec:	mov	r7, r0
    19f0:	bl	e10 <strcpy@plt>
    19f4:	mov	r0, r5
    19f8:	str	r7, [r8, #20]
    19fc:	bl	de0 <get_oper_name@plt>
    1a00:	bl	e04 <operhash_add@plt>
    1a04:	cmp	r4, #0
    1a08:	str	r0, [r8, #12]
    1a0c:	beq	1af8 <parse_resv+0x39c>
    1a10:	ldr	r0, [r8, #4]
    1a14:	orr	r0, r0, #8912896	; 0x880000
    1a18:	str	r0, [r8, #4]
    1a1c:	bl	d44 <rb_current_time@plt>
    1a20:	add	r0, r0, r9
    1a24:	str	r0, [r8, #36]	; 0x24
    1a28:	str	r0, [r8, #44]	; 0x2c
    1a2c:	mov	r0, r8
    1a30:	bl	d80 <replace_old_ban@plt>
    1a34:	bl	e4c <rb_make_rb_dlink_node@plt>
    1a38:	cmp	r0, #0
    1a3c:	beq	1f14 <parse_resv+0x7b8>
    1a40:	mov	r1, #0
    1a44:	str	r1, [r0, #4]
    1a48:	str	r8, [r0]
    1a4c:	ldr	r1, [pc, #1324]	; 1f80 <parse_resv+0x824>
    1a50:	ldr	r1, [pc, r1]
    1a54:	ldr	r2, [r1]
    1a58:	cmp	r2, #0
    1a5c:	str	r2, [r0, #8]
    1a60:	beq	1c9c <parse_resv+0x540>
    1a64:	add	r2, r2, #4
    1a68:	str	r0, [r2]
    1a6c:	b	1cac <parse_resv+0x550>
    1a70:	cmp	r9, #1
    1a74:	blt	1e08 <parse_resv+0x6ac>
    1a78:	bl	d44 <rb_current_time@plt>
    1a7c:	add	r0, r0, r9
    1a80:	str	r0, [r8, #36]	; 0x24
    1a84:	mov	r0, r5
    1a88:	bl	de0 <get_oper_name@plt>
    1a8c:	mov	r3, r0
    1a90:	movw	r0, #34953	; 0x8889
    1a94:	movt	r0, #34952	; 0x8888
    1a98:	umull	r0, r1, r9, r0
    1a9c:	lsr	r4, r1, #5
    1aa0:	mov	r0, #256	; 0x100
    1aa4:	mov	r1, #0
    1aa8:	stm	sp, {r4, r6, sl}
    1aac:	ldr	r2, [pc, #1192]	; 1f5c <parse_resv+0x800>
    1ab0:	add	r2, pc, r2
    1ab4:	bl	db0 <sendto_realops_snomask@plt>
    1ab8:	mov	r0, r5
    1abc:	bl	de0 <get_oper_name@plt>
    1ac0:	stm	sp, {r6, sl}
    1ac4:	mov	r2, r0
    1ac8:	mov	r0, #7
    1acc:	mov	r3, r4
    1ad0:	ldr	r1, [pc, #1160]	; 1f60 <parse_resv+0x804>
    1ad4:	add	r1, pc, r1
    1ad8:	bl	e64 <ilog@plt>
    1adc:	ldr	r1, [pc, #1152]	; 1f64 <parse_resv+0x808>
    1ae0:	mov	r0, r5
    1ae4:	mov	r2, r4
    1ae8:	mov	r3, r6
    1aec:	add	r1, pc, r1
    1af0:	bl	ea0 <sendto_one_notice@plt>
    1af4:	b	1c78 <parse_resv+0x51c>
    1af8:	cmp	r9, #1
    1afc:	blt	1e8c <parse_resv+0x730>
    1b00:	bl	d44 <rb_current_time@plt>
    1b04:	add	r0, r0, r9
    1b08:	str	r0, [r8, #36]	; 0x24
    1b0c:	mov	r0, r5
    1b10:	bl	de0 <get_oper_name@plt>
    1b14:	mov	r3, r0
    1b18:	movw	r0, #34953	; 0x8889
    1b1c:	movt	r0, #34952	; 0x8888
    1b20:	umull	r0, r1, r9, r0
    1b24:	lsr	r4, r1, #5
    1b28:	mov	r0, #256	; 0x100
    1b2c:	mov	r1, #0
    1b30:	stm	sp, {r4, r6, sl}
    1b34:	ldr	r2, [pc, #1120]	; 1f9c <parse_resv+0x840>
    1b38:	add	r2, pc, r2
    1b3c:	bl	db0 <sendto_realops_snomask@plt>
    1b40:	mov	r0, r5
    1b44:	bl	de0 <get_oper_name@plt>
    1b48:	stm	sp, {r6, sl}
    1b4c:	mov	r2, r0
    1b50:	mov	r0, #7
    1b54:	mov	r3, r4
    1b58:	ldr	r1, [pc, #1088]	; 1fa0 <parse_resv+0x844>
    1b5c:	add	r1, pc, r1
    1b60:	bl	e64 <ilog@plt>
    1b64:	ldr	r1, [pc, #1080]	; 1fa4 <parse_resv+0x848>
    1b68:	mov	r0, r5
    1b6c:	mov	r2, r4
    1b70:	mov	r3, r6
    1b74:	add	r1, pc, r1
    1b78:	bl	ea0 <sendto_one_notice@plt>
    1b7c:	b	1d94 <parse_resv+0x638>
    1b80:	mov	r2, r1
    1b84:	ldr	r3, [r2, #4]!
    1b88:	cmp	r3, #0
    1b8c:	streq	r0, [r2]
    1b90:	str	r0, [r1]
    1b94:	ldr	r0, [r1, #8]
    1b98:	add	r0, r0, #1
    1b9c:	str	r0, [r1, #8]
    1ba0:	mov	r0, r5
    1ba4:	bl	de0 <get_oper_name@plt>
    1ba8:	mov	r3, r0
    1bac:	movw	r0, #34953	; 0x8889
    1bb0:	movt	r0, #34952	; 0x8888
    1bb4:	smmla	r0, r9, r0, r9
    1bb8:	asr	r1, r0, #5
    1bbc:	add	r4, r1, r0, lsr #31
    1bc0:	mov	r0, #256	; 0x100
    1bc4:	mov	r1, #0
    1bc8:	stm	sp, {r4, r6, sl}
    1bcc:	ldr	r2, [pc, #880]	; 1f44 <parse_resv+0x7e8>
    1bd0:	add	r2, pc, r2
    1bd4:	bl	db0 <sendto_realops_snomask@plt>
    1bd8:	mov	r0, r5
    1bdc:	bl	de0 <get_oper_name@plt>
    1be0:	stm	sp, {r6, sl}
    1be4:	mov	r2, r0
    1be8:	mov	r0, #7
    1bec:	mov	r3, r4
    1bf0:	ldr	r1, [pc, #848]	; 1f48 <parse_resv+0x7ec>
    1bf4:	add	r1, pc, r1
    1bf8:	bl	e64 <ilog@plt>
    1bfc:	ldr	r1, [pc, #840]	; 1f4c <parse_resv+0x7f0>
    1c00:	mov	r0, r5
    1c04:	mov	r2, r4
    1c08:	mov	r3, r6
    1c0c:	add	r1, pc, r1
    1c10:	bl	ea0 <sendto_one_notice@plt>
    1c14:	ldr	r0, [pc, #820]	; 1f50 <parse_resv+0x7f4>
    1c18:	add	r5, r5, #396	; 0x18c
    1c1c:	ldr	r0, [pc, r0]
    1c20:	ldr	r0, [r0]
    1c24:	ldr	r1, [pc, #808]	; 1f54 <parse_resv+0x7f8>
    1c28:	ldr	r1, [pc, r1]
    1c2c:	ldr	r2, [r8, #16]
    1c30:	ldr	r3, [r8, #36]	; 0x24
    1c34:	ldr	r7, [r8, #40]	; 0x28
    1c38:	ldr	r6, [r8, #44]	; 0x2c
    1c3c:	ldr	r1, [r1]
    1c40:	ldr	r4, [pc, #784]	; 1f58 <parse_resv+0x7fc>
    1c44:	sub	r6, r6, r7
    1c48:	sub	r3, r3, r7
    1c4c:	add	r4, pc, r4
    1c50:	stm	sp, {r4, r5}
    1c54:	str	r2, [sp, #8]
    1c58:	add	r2, sp, #16
    1c5c:	str	r7, [sp, #12]
    1c60:	stm	r2, {r3, r6, sl}
    1c64:	orr	r2, r0, r1
    1c68:	mov	r0, #0
    1c6c:	mov	r1, #0
    1c70:	mov	r3, #0
    1c74:	bl	e1c <sendto_server@plt>
    1c78:	ldr	r0, [r8, #16]
    1c7c:	mov	r1, r8
    1c80:	bl	d50 <add_to_resv_hash@plt>
    1c84:	ldr	r0, [r8, #16]
    1c88:	ldr	r1, [r8, #20]
    1c8c:	mov	r2, r9
    1c90:	sub	sp, fp, #28
    1c94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1c98:	b	dc8 <resv_chan_forcepart@plt>
    1c9c:	mov	r2, r1
    1ca0:	ldr	r3, [r2, #4]!
    1ca4:	cmp	r3, #0
    1ca8:	streq	r0, [r2]
    1cac:	str	r0, [r1]
    1cb0:	ldr	r0, [r1, #8]
    1cb4:	add	r0, r0, #1
    1cb8:	str	r0, [r1, #8]
    1cbc:	mov	r0, r5
    1cc0:	bl	de0 <get_oper_name@plt>
    1cc4:	mov	r3, r0
    1cc8:	movw	r0, #34953	; 0x8889
    1ccc:	movt	r0, #34952	; 0x8888
    1cd0:	smmla	r0, r9, r0, r9
    1cd4:	asr	r1, r0, #5
    1cd8:	add	r4, r1, r0, lsr #31
    1cdc:	mov	r0, #256	; 0x100
    1ce0:	mov	r1, #0
    1ce4:	stm	sp, {r4, r6, sl}
    1ce8:	ldr	r2, [pc, #660]	; 1f84 <parse_resv+0x828>
    1cec:	add	r2, pc, r2
    1cf0:	bl	db0 <sendto_realops_snomask@plt>
    1cf4:	mov	r0, r5
    1cf8:	bl	de0 <get_oper_name@plt>
    1cfc:	stm	sp, {r6, sl}
    1d00:	mov	r2, r0
    1d04:	mov	r0, #7
    1d08:	mov	r3, r4
    1d0c:	ldr	r1, [pc, #628]	; 1f88 <parse_resv+0x82c>
    1d10:	add	r1, pc, r1
    1d14:	bl	e64 <ilog@plt>
    1d18:	ldr	r1, [pc, #620]	; 1f8c <parse_resv+0x830>
    1d1c:	mov	r0, r5
    1d20:	mov	r2, r4
    1d24:	mov	r3, r6
    1d28:	add	r1, pc, r1
    1d2c:	bl	ea0 <sendto_one_notice@plt>
    1d30:	ldr	r0, [pc, #600]	; 1f90 <parse_resv+0x834>
    1d34:	add	r5, r5, #396	; 0x18c
    1d38:	ldr	r0, [pc, r0]
    1d3c:	ldr	r0, [r0]
    1d40:	ldr	r1, [pc, #588]	; 1f94 <parse_resv+0x838>
    1d44:	ldr	r1, [pc, r1]
    1d48:	ldr	r2, [r8, #16]
    1d4c:	ldr	r3, [r8, #36]	; 0x24
    1d50:	ldr	r7, [r8, #40]	; 0x28
    1d54:	ldr	r6, [r8, #44]	; 0x2c
    1d58:	ldr	r1, [r1]
    1d5c:	ldr	r4, [pc, #564]	; 1f98 <parse_resv+0x83c>
    1d60:	sub	r6, r6, r7
    1d64:	sub	r3, r3, r7
    1d68:	add	r4, pc, r4
    1d6c:	stm	sp, {r4, r5}
    1d70:	str	r2, [sp, #8]
    1d74:	add	r2, sp, #16
    1d78:	str	r7, [sp, #12]
    1d7c:	stm	r2, {r3, r6, sl}
    1d80:	orr	r2, r0, r1
    1d84:	mov	r0, #0
    1d88:	mov	r1, #0
    1d8c:	mov	r3, #0
    1d90:	bl	e1c <sendto_server@plt>
    1d94:	bl	e4c <rb_make_rb_dlink_node@plt>
    1d98:	cmp	r0, #0
    1d9c:	beq	1f14 <parse_resv+0x7b8>
    1da0:	mov	r1, #0
    1da4:	str	r1, [r0, #4]
    1da8:	str	r8, [r0]
    1dac:	ldr	r1, [pc, #512]	; 1fb4 <parse_resv+0x858>
    1db0:	ldr	r1, [pc, r1]
    1db4:	ldr	r2, [r1]
    1db8:	cmp	r2, #0
    1dbc:	str	r2, [r0, #8]
    1dc0:	beq	1dd0 <parse_resv+0x674>
    1dc4:	add	r2, r2, #4
    1dc8:	str	r0, [r2]
    1dcc:	b	1de0 <parse_resv+0x684>
    1dd0:	mov	r2, r1
    1dd4:	ldr	r3, [r2, #4]!
    1dd8:	cmp	r3, #0
    1ddc:	streq	r0, [r2]
    1de0:	str	r0, [r1]
    1de4:	mov	r2, r9
    1de8:	ldr	r0, [r1, #8]
    1dec:	add	r0, r0, #1
    1df0:	str	r0, [r1, #8]
    1df4:	ldr	r0, [r8, #16]
    1df8:	ldr	r1, [r8, #20]
    1dfc:	sub	sp, fp, #28
    1e00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1e04:	b	d98 <resv_nick_fnc@plt>
    1e08:	mov	r0, r5
    1e0c:	bl	de0 <get_oper_name@plt>
    1e10:	stm	sp, {r6, sl}
    1e14:	mov	r3, r0
    1e18:	mov	r0, #256	; 0x100
    1e1c:	mov	r1, #0
    1e20:	mov	r4, #0
    1e24:	ldr	r2, [pc, #316]	; 1f68 <parse_resv+0x80c>
    1e28:	add	r2, pc, r2
    1e2c:	bl	db0 <sendto_realops_snomask@plt>
    1e30:	mov	r0, r5
    1e34:	bl	de0 <get_oper_name@plt>
    1e38:	str	sl, [sp]
    1e3c:	mov	r2, r0
    1e40:	mov	r0, #7
    1e44:	mov	r3, r6
    1e48:	ldr	r1, [pc, #284]	; 1f6c <parse_resv+0x810>
    1e4c:	add	r1, pc, r1
    1e50:	bl	e64 <ilog@plt>
    1e54:	ldr	r1, [pc, #276]	; 1f70 <parse_resv+0x814>
    1e58:	mov	r0, r5
    1e5c:	mov	r2, r6
    1e60:	add	r1, pc, r1
    1e64:	bl	ea0 <sendto_one_notice@plt>
    1e68:	ldr	r0, [r8, #20]
    1e6c:	ldr	r2, [r8, #16]
    1e70:	mov	r1, r5
    1e74:	mov	r3, #0
    1e78:	stm	sp, {r0, r4}
    1e7c:	mov	r0, #3
    1e80:	str	r4, [sp, #8]
    1e84:	bl	dbc <bandb_add@plt>
    1e88:	b	1c78 <parse_resv+0x51c>
    1e8c:	mov	r0, r5
    1e90:	bl	de0 <get_oper_name@plt>
    1e94:	stm	sp, {r6, sl}
    1e98:	mov	r3, r0
    1e9c:	mov	r0, #256	; 0x100
    1ea0:	mov	r1, #0
    1ea4:	mov	r4, #0
    1ea8:	ldr	r2, [pc, #248]	; 1fa8 <parse_resv+0x84c>
    1eac:	add	r2, pc, r2
    1eb0:	bl	db0 <sendto_realops_snomask@plt>
    1eb4:	mov	r0, r5
    1eb8:	bl	de0 <get_oper_name@plt>
    1ebc:	str	sl, [sp]
    1ec0:	mov	r2, r0
    1ec4:	mov	r0, #7
    1ec8:	mov	r3, r6
    1ecc:	ldr	r1, [pc, #216]	; 1fac <parse_resv+0x850>
    1ed0:	add	r1, pc, r1
    1ed4:	bl	e64 <ilog@plt>
    1ed8:	ldr	r1, [pc, #208]	; 1fb0 <parse_resv+0x854>
    1edc:	mov	r0, r5
    1ee0:	mov	r2, r6
    1ee4:	add	r1, pc, r1
    1ee8:	bl	ea0 <sendto_one_notice@plt>
    1eec:	ldr	r0, [r8, #20]
    1ef0:	ldr	r2, [r8, #16]
    1ef4:	mov	r1, r5
    1ef8:	mov	r3, #0
    1efc:	stm	sp, {r0, r4}
    1f00:	mov	r0, #3
    1f04:	str	r4, [sp, #8]
    1f08:	bl	dbc <bandb_add@plt>
    1f0c:	b	1d94 <parse_resv+0x638>
    1f10:	bl	d8c <rb_outofmemory@plt>
    1f14:	ldr	r0, [pc, #160]	; 1fbc <parse_resv+0x860>
    1f18:	ldr	r1, [pc, #160]	; 1fc0 <parse_resv+0x864>
    1f1c:	ldr	r3, [pc, #160]	; 1fc4 <parse_resv+0x868>
    1f20:	mov	r2, #144	; 0x90
    1f24:	add	r0, pc, r0
    1f28:	add	r1, pc, r1
    1f2c:	add	r3, pc, r3
    1f30:	bl	f0c <__assert_fail@plt>
    1f34:	.word	0x000118fc
    1f38:	.word	0x00000dbc
    1f3c:	.word	0x00000dc3
    1f40:	.word	0x0001174c
    1f44:	.word	0x00000a78
    1f48:	.word	0x00000a7f
    1f4c:	.word	0x00000a75
    1f50:	.word	0x000114a4
    1f54:	.word	0x00011494
    1f58:	.word	0x00000a55
    1f5c:	.word	0x00000c10
    1f60:	.word	0x00000b9f
    1f64:	.word	0x00000c02
    1f68:	.word	0x000008e9
    1f6c:	.word	0x000008e1
    1f70:	.word	0x000008da
    1f74:	.word	0x00011854
    1f78:	.word	0x00000eb3
    1f7c:	.word	0x00000f65
    1f80:	.word	0x00011664
    1f84:	.word	0x0000095c
    1f88:	.word	0x00000963
    1f8c:	.word	0x00000959
    1f90:	.word	0x00011388
    1f94:	.word	0x00011378
    1f98:	.word	0x00000939
    1f9c:	.word	0x00000b88
    1fa0:	.word	0x00000b17
    1fa4:	.word	0x00000b7a
    1fa8:	.word	0x00000865
    1fac:	.word	0x0000085d
    1fb0:	.word	0x00000856
    1fb4:	.word	0x00011300
    1fb8:	.word	0x00000f69
    1fbc:	.word	0x00000916
    1fc0:	.word	0x000008bb
    1fc4:	.word	0x000008d3

00001fc8 <remove_resv>:
    1fc8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1fcc:	add	fp, sp, #24
    1fd0:	sub	sp, sp, #24
    1fd4:	mov	r5, r2
    1fd8:	mov	r6, r1
    1fdc:	mov	r8, r0
    1fe0:	cmp	r1, #0
    1fe4:	beq	2004 <remove_resv+0x3c>
    1fe8:	ldrb	r0, [r6]
    1fec:	ldr	r1, [pc, #1140]	; 2468 <remove_resv+0x4a0>
    1ff0:	ldr	r1, [pc, r1]
    1ff4:	add	r0, r1, r0, lsl #2
    1ff8:	ldrb	r0, [r0, #1]
    1ffc:	tst	r0, #2
    2000:	bne	203c <remove_resv+0x74>
    2004:	ldr	r9, [pc, #1180]	; 24a8 <remove_resv+0x4e0>
    2008:	ldr	r9, [pc, r9]
    200c:	ldr	r7, [r9]
    2010:	b	2030 <remove_resv+0x68>
    2014:	ldr	r4, [r7]
    2018:	mov	r1, r6
    201c:	ldr	r0, [r4, #16]
    2020:	bl	ef4 <irccmp@plt>
    2024:	cmp	r0, #0
    2028:	beq	2090 <remove_resv+0xc8>
    202c:	ldr	r7, [r7, #8]
    2030:	cmp	r7, #0
    2034:	bne	2014 <remove_resv+0x4c>
    2038:	b	20bc <remove_resv+0xf4>
    203c:	mov	r0, r6
    2040:	bl	ee8 <hash_find_resv@plt>
    2044:	cmp	r0, #0
    2048:	beq	20bc <remove_resv+0xf4>
    204c:	mov	r4, r0
    2050:	ldr	r0, [r0, #44]	; 0x2c
    2054:	cmp	r0, #0
    2058:	beq	2148 <remove_resv+0x180>
    205c:	cmp	r5, #0
    2060:	beq	213c <remove_resv+0x174>
    2064:	ldr	r0, [pc, #1048]	; 2484 <remove_resv+0x4bc>
    2068:	ldr	r0, [pc, r0]
    206c:	ldr	r7, [r0]
    2070:	b	2084 <remove_resv+0xbc>
    2074:	ldr	r0, [r7]
    2078:	cmp	r0, r4
    207c:	beq	2288 <remove_resv+0x2c0>
    2080:	ldr	r7, [r7, #8]
    2084:	cmp	r7, #0
    2088:	bne	2074 <remove_resv+0xac>
    208c:	b	2134 <remove_resv+0x16c>
    2090:	cmp	r4, #0
    2094:	beq	20bc <remove_resv+0xf4>
    2098:	ldr	r0, [r4, #44]	; 0x2c
    209c:	cmp	r0, #0
    20a0:	beq	21e8 <remove_resv+0x220>
    20a4:	cmp	r5, #0
    20a8:	beq	213c <remove_resv+0x174>
    20ac:	ldr	r0, [pc, #1016]	; 24ac <remove_resv+0x4e4>
    20b0:	ldr	r0, [pc, r0]
    20b4:	ldr	r7, [r0]
    20b8:	b	212c <remove_resv+0x164>
    20bc:	cmp	r5, #0
    20c0:	ldrne	r0, [pc, #932]	; 246c <remove_resv+0x4a4>
    20c4:	ldrne	r0, [pc, r0]
    20c8:	ldrne	r0, [r0, #8]
    20cc:	cmpne	r0, #0
    20d0:	beq	2100 <remove_resv+0x138>
    20d4:	ldr	r0, [pc, #916]	; 2470 <remove_resv+0x4a8>
    20d8:	mov	r2, #512	; 0x200
    20dc:	ldr	r0, [pc, r0]
    20e0:	ldr	r3, [r0]
    20e4:	ldr	r0, [pc, #904]	; 2474 <remove_resv+0x4ac>
    20e8:	add	r0, pc, r0
    20ec:	stm	sp, {r0, r6}
    20f0:	mov	r0, r8
    20f4:	ldr	r1, [pc, #892]	; 2478 <remove_resv+0x4b0>
    20f8:	add	r1, pc, r1
    20fc:	bl	df8 <cluster_generic@plt>
    2100:	ldr	r1, [pc, #884]	; 247c <remove_resv+0x4b4>
    2104:	add	r1, pc, r1
    2108:	mov	r0, r8
    210c:	mov	r2, r6
    2110:	sub	sp, fp, #24
    2114:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    2118:	b	ea0 <sendto_one_notice@plt>
    211c:	ldr	r0, [r7]
    2120:	cmp	r0, r4
    2124:	beq	2288 <remove_resv+0x2c0>
    2128:	ldr	r7, [r7, #8]
    212c:	cmp	r7, #0
    2130:	bne	211c <remove_resv+0x154>
    2134:	sub	sp, fp, #24
    2138:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    213c:	ldr	r1, [pc, #828]	; 2480 <remove_resv+0x4b8>
    2140:	add	r1, pc, r1
    2144:	b	2108 <remove_resv+0x140>
    2148:	cmp	r5, #0
    214c:	ldrne	r0, [pc, #820]	; 2488 <remove_resv+0x4c0>
    2150:	ldrne	r0, [pc, r0]
    2154:	ldrne	r0, [r0, #8]
    2158:	cmpne	r0, #0
    215c:	beq	218c <remove_resv+0x1c4>
    2160:	ldr	r0, [pc, #804]	; 248c <remove_resv+0x4c4>
    2164:	mov	r2, #512	; 0x200
    2168:	ldr	r0, [pc, r0]
    216c:	ldr	r3, [r0]
    2170:	ldr	r0, [pc, #792]	; 2490 <remove_resv+0x4c8>
    2174:	add	r0, pc, r0
    2178:	stm	sp, {r0, r6}
    217c:	mov	r0, r8
    2180:	ldr	r1, [pc, #780]	; 2494 <remove_resv+0x4cc>
    2184:	add	r1, pc, r1
    2188:	bl	df8 <cluster_generic@plt>
    218c:	ldr	r1, [pc, #772]	; 2498 <remove_resv+0x4d0>
    2190:	mov	r0, r8
    2194:	mov	r2, r6
    2198:	add	r1, pc, r1
    219c:	bl	ea0 <sendto_one_notice@plt>
    21a0:	mov	r0, r8
    21a4:	bl	de0 <get_oper_name@plt>
    21a8:	ldr	r1, [pc, #748]	; 249c <remove_resv+0x4d4>
    21ac:	mov	r2, r0
    21b0:	mov	r0, #7
    21b4:	mov	r3, r6
    21b8:	add	r1, pc, r1
    21bc:	bl	e64 <ilog@plt>
    21c0:	ldr	r0, [r4, #36]	; 0x24
    21c4:	cmp	r0, #0
    21c8:	beq	2398 <remove_resv+0x3d0>
    21cc:	mov	r0, r8
    21d0:	bl	de0 <get_oper_name@plt>
    21d4:	str	r6, [sp]
    21d8:	mov	r3, r0
    21dc:	ldr	r2, [pc, #704]	; 24a4 <remove_resv+0x4dc>
    21e0:	add	r2, pc, r2
    21e4:	b	23c0 <remove_resv+0x3f8>
    21e8:	cmp	r5, #0
    21ec:	ldrne	r0, [pc, #724]	; 24c8 <remove_resv+0x500>
    21f0:	ldrne	r0, [pc, r0]
    21f4:	ldrne	r0, [r0, #8]
    21f8:	cmpne	r0, #0
    21fc:	beq	222c <remove_resv+0x264>
    2200:	ldr	r0, [pc, #708]	; 24cc <remove_resv+0x504>
    2204:	mov	r2, #512	; 0x200
    2208:	ldr	r0, [pc, r0]
    220c:	ldr	r3, [r0]
    2210:	ldr	r0, [pc, #696]	; 24d0 <remove_resv+0x508>
    2214:	add	r0, pc, r0
    2218:	stm	sp, {r0, r6}
    221c:	mov	r0, r8
    2220:	ldr	r1, [pc, #684]	; 24d4 <remove_resv+0x50c>
    2224:	add	r1, pc, r1
    2228:	bl	df8 <cluster_generic@plt>
    222c:	ldr	r1, [pc, #676]	; 24d8 <remove_resv+0x510>
    2230:	mov	r0, r8
    2234:	mov	r2, r6
    2238:	add	r1, pc, r1
    223c:	bl	ea0 <sendto_one_notice@plt>
    2240:	mov	r0, r8
    2244:	bl	de0 <get_oper_name@plt>
    2248:	ldr	r1, [pc, #652]	; 24dc <remove_resv+0x514>
    224c:	mov	r2, r0
    2250:	mov	r0, #7
    2254:	mov	r3, r6
    2258:	add	r1, pc, r1
    225c:	bl	e64 <ilog@plt>
    2260:	ldr	r0, [r4, #36]	; 0x24
    2264:	cmp	r0, #0
    2268:	beq	23dc <remove_resv+0x414>
    226c:	mov	r0, r8
    2270:	bl	de0 <get_oper_name@plt>
    2274:	str	r6, [sp]
    2278:	mov	r3, r0
    227c:	ldr	r2, [pc, #608]	; 24e4 <remove_resv+0x51c>
    2280:	add	r2, pc, r2
    2284:	b	2404 <remove_resv+0x43c>
    2288:	ldr	r1, [pc, #544]	; 24b0 <remove_resv+0x4e8>
    228c:	mov	r0, r8
    2290:	mov	r2, r6
    2294:	add	r1, pc, r1
    2298:	bl	ea0 <sendto_one_notice@plt>
    229c:	mov	r0, r8
    22a0:	bl	de0 <get_oper_name@plt>
    22a4:	str	r6, [sp]
    22a8:	mov	r3, r0
    22ac:	mov	r0, #256	; 0x100
    22b0:	mov	r1, #0
    22b4:	mov	r9, #0
    22b8:	ldr	r2, [pc, #500]	; 24b4 <remove_resv+0x4ec>
    22bc:	add	r2, pc, r2
    22c0:	bl	db0 <sendto_realops_snomask@plt>
    22c4:	mov	r0, r8
    22c8:	bl	de0 <get_oper_name@plt>
    22cc:	ldr	r1, [pc, #484]	; 24b8 <remove_resv+0x4f0>
    22d0:	mov	r2, r0
    22d4:	mov	r0, #7
    22d8:	mov	r3, r6
    22dc:	add	r1, pc, r1
    22e0:	bl	e64 <ilog@plt>
    22e4:	bl	d44 <rb_current_time@plt>
    22e8:	ldr	r1, [r4, #40]	; 0x28
    22ec:	mov	r5, r0
    22f0:	ldr	r0, [r4, #12]
    22f4:	mov	r2, r5
    22f8:	cmp	r1, r5
    22fc:	addge	r2, r1, #1
    2300:	str	r2, [r4, #36]	; 0x24
    2304:	str	r2, [r4, #40]	; 0x28
    2308:	bl	da4 <operhash_delete@plt>
    230c:	mov	r0, r8
    2310:	bl	de0 <get_oper_name@plt>
    2314:	bl	e04 <operhash_add@plt>
    2318:	str	r0, [r4, #12]
    231c:	add	r1, r8, #396	; 0x18c
    2320:	ldr	r0, [r4, #4]
    2324:	ldr	ip, [r4, #16]
    2328:	ldr	r2, [r4, #40]	; 0x28
    232c:	ldr	r3, [r4, #44]	; 0x2c
    2330:	orr	r0, r0, #8912896	; 0x880000
    2334:	sub	r3, r3, r2
    2338:	str	r0, [r4, #4]
    233c:	ldr	r0, [pc, #376]	; 24bc <remove_resv+0x4f4>
    2340:	ldr	r0, [pc, r0]
    2344:	ldr	lr, [r0]
    2348:	ldr	r6, [pc, #368]	; 24c0 <remove_resv+0x4f8>
    234c:	ldr	r6, [pc, r6]
    2350:	ldr	r6, [r6]
    2354:	ldr	r0, [pc, #360]	; 24c4 <remove_resv+0x4fc>
    2358:	add	r0, pc, r0
    235c:	stm	sp, {r0, r1, ip}
    2360:	str	r2, [sp, #12]
    2364:	str	r3, [sp, #20]
    2368:	orr	r2, lr, r6
    236c:	mov	r0, #0
    2370:	mov	r1, #0
    2374:	mov	r3, #0
    2378:	str	r9, [sp, #16]
    237c:	bl	e1c <sendto_server@plt>
    2380:	mov	r0, r4
    2384:	mov	r1, r7
    2388:	mov	r2, r5
    238c:	sub	sp, fp, #24
    2390:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    2394:	b	dd4 <deactivate_conf@plt>
    2398:	ldr	r1, [r4, #16]
    239c:	mov	r0, #3
    23a0:	mov	r2, #0
    23a4:	bl	eac <bandb_del@plt>
    23a8:	mov	r0, r8
    23ac:	bl	de0 <get_oper_name@plt>
    23b0:	str	r6, [sp]
    23b4:	mov	r3, r0
    23b8:	ldr	r2, [pc, #224]	; 24a0 <remove_resv+0x4d8>
    23bc:	add	r2, pc, r2
    23c0:	mov	r0, #256	; 0x100
    23c4:	mov	r1, #0
    23c8:	bl	db0 <sendto_realops_snomask@plt>
    23cc:	mov	r0, r6
    23d0:	mov	r1, r4
    23d4:	bl	e7c <del_from_resv_hash@plt>
    23d8:	b	2458 <remove_resv+0x490>
    23dc:	ldr	r1, [r4, #16]
    23e0:	mov	r0, #3
    23e4:	mov	r2, #0
    23e8:	bl	eac <bandb_del@plt>
    23ec:	mov	r0, r8
    23f0:	bl	de0 <get_oper_name@plt>
    23f4:	str	r6, [sp]
    23f8:	mov	r3, r0
    23fc:	ldr	r2, [pc, #220]	; 24e0 <remove_resv+0x518>
    2400:	add	r2, pc, r2
    2404:	mov	r0, #256	; 0x100
    2408:	mov	r1, #0
    240c:	bl	db0 <sendto_realops_snomask@plt>
    2410:	ldr	r0, [r7, #8]
    2414:	ldr	r1, [r7, #4]
    2418:	mov	r2, r9
    241c:	cmp	r0, #0
    2420:	streq	r1, [r9, #4]
    2424:	strne	r1, [r0, #4]
    2428:	ldrne	r1, [r7, #4]
    242c:	cmp	r1, #0
    2430:	addne	r2, r1, #8
    2434:	str	r0, [r2]
    2438:	mov	r0, #0
    243c:	str	r0, [r7, #4]
    2440:	str	r0, [r7, #8]
    2444:	ldr	r0, [r9, #8]
    2448:	sub	r0, r0, #1
    244c:	str	r0, [r9, #8]
    2450:	mov	r0, r7
    2454:	bl	dec <rb_free_rb_dlink_node@plt>
    2458:	mov	r0, r4
    245c:	sub	sp, fp, #24
    2460:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    2464:	b	e40 <free_conf@plt>
    2468:	.word	0x000110dc
    246c:	.word	0x00011004
    2470:	.word	0x00010fdc
    2474:	.word	0x0000055d
    2478:	.word	0x00000434
    247c:	.word	0x00000740
    2480:	.word	0x00000714
    2484:	.word	0x0001104c
    2488:	.word	0x00010f78
    248c:	.word	0x00010f50
    2490:	.word	0x000004d1
    2494:	.word	0x000003a8
    2498:	.word	0x000006ee
    249c:	.word	0x00000711
    24a0:	.word	0x00000534
    24a4:	.word	0x00000732
    24a8:	.word	0x000110a8
    24ac:	.word	0x00011004
    24b0:	.word	0x000005f2
    24b4:	.word	0x000005e4
    24b8:	.word	0x000005ed
    24bc:	.word	0x00010d80
    24c0:	.word	0x00010d70
    24c4:	.word	0x0000057a
    24c8:	.word	0x00010ed8
    24cc:	.word	0x00010eb0
    24d0:	.word	0x00000431
    24d4:	.word	0x00000308
    24d8:	.word	0x0000064e
    24dc:	.word	0x00000671
    24e0:	.word	0x000004f0
    24e4:	.word	0x00000692

000024e8 <handle_remote_unresv>:
    24e8:	push	{r4, r5, fp, lr}
    24ec:	add	fp, sp, #8
    24f0:	ldr	r2, [r0, #32]
    24f4:	mov	r5, r0
    24f8:	mov	r4, r1
    24fc:	add	r0, r0, #152	; 0x98
    2500:	mov	r3, #512	; 0x200
    2504:	add	r1, r5, #163	; 0xa3
    2508:	add	r2, r2, #88	; 0x58
    250c:	bl	ed0 <find_shared_conf@plt>
    2510:	cmp	r0, #0
    2514:	popeq	{r4, r5, fp, pc}
    2518:	mov	r0, r5
    251c:	mov	r1, r4
    2520:	mov	r2, #0
    2524:	pop	{r4, r5, fp, lr}
    2528:	b	1fc8 <remove_resv>

Disassembly of section .fini:

0000252c <_fini>:
    252c:	push	{r3, lr}
    2530:	pop	{r3, pc}
