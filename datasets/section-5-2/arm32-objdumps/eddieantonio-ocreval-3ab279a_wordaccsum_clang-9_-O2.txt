
../repos/eddieantonio-ocreval-3ab279a/wordaccsum/wordaccsum:     file format elf32-littlearm


Disassembly of section .init:

000107e0 <.init>:
   107e0:	push	{r3, lr}
   107e4:	bl	1095c <abort@plt+0x48>
   107e8:	pop	{r3, pc}

Disassembly of section .plt:

000107ec <calloc@plt-0x14>:
   107ec:	push	{lr}		; (str lr, [sp, #-4]!)
   107f0:	ldr	lr, [pc, #4]	; 107fc <calloc@plt-0x4>
   107f4:	add	lr, pc, lr
   107f8:	ldr	pc, [lr, #8]!
   107fc:	andeq	r2, r1, r4, lsl #16

00010800 <calloc@plt>:
   10800:	add	ip, pc, #0, 12
   10804:	add	ip, ip, #73728	; 0x12000
   10808:	ldr	pc, [ip, #2052]!	; 0x804

0001080c <strcmp@plt>:
   1080c:	add	ip, pc, #0, 12
   10810:	add	ip, ip, #73728	; 0x12000
   10814:	ldr	pc, [ip, #2044]!	; 0x7fc

00010818 <strtol@plt>:
   10818:	add	ip, pc, #0, 12
   1081c:	add	ip, ip, #73728	; 0x12000
   10820:	ldr	pc, [ip, #2036]!	; 0x7f4

00010824 <fopen@plt>:
   10824:	add	ip, pc, #0, 12
   10828:	add	ip, ip, #73728	; 0x12000
   1082c:	ldr	pc, [ip, #2028]!	; 0x7ec

00010830 <free@plt>:
   10830:	add	ip, pc, #0, 12
   10834:	add	ip, ip, #73728	; 0x12000
   10838:	ldr	pc, [ip, #2020]!	; 0x7e4

0001083c <fgets@plt>:
   1083c:	add	ip, pc, #0, 12
   10840:	add	ip, ip, #73728	; 0x12000
   10844:	ldr	pc, [ip, #2012]!	; 0x7dc

00010848 <strdup@plt>:
   10848:	add	ip, pc, #0, 12
   1084c:	add	ip, ip, #73728	; 0x12000
   10850:	ldr	pc, [ip, #2004]!	; 0x7d4

00010854 <unlink@plt>:
   10854:	add	ip, pc, #0, 12
   10858:	add	ip, ip, #73728	; 0x12000
   1085c:	ldr	pc, [ip, #1996]!	; 0x7cc

00010860 <__xstat@plt>:
   10860:	add	ip, pc, #0, 12
   10864:	add	ip, ip, #73728	; 0x12000
   10868:	ldr	pc, [ip, #1988]!	; 0x7c4

0001086c <fwrite@plt>:
   1086c:	add	ip, pc, #0, 12
   10870:	add	ip, ip, #73728	; 0x12000
   10874:	ldr	pc, [ip, #1980]!	; 0x7bc

00010878 <__libc_start_main@plt>:
   10878:	add	ip, pc, #0, 12
   1087c:	add	ip, ip, #73728	; 0x12000
   10880:	ldr	pc, [ip, #1972]!	; 0x7b4

00010884 <__sysv_signal@plt>:
   10884:	add	ip, pc, #0, 12
   10888:	add	ip, ip, #73728	; 0x12000
   1088c:	ldr	pc, [ip, #1964]!	; 0x7ac

00010890 <__gmon_start__@plt>:
   10890:	add	ip, pc, #0, 12
   10894:	add	ip, ip, #73728	; 0x12000
   10898:	ldr	pc, [ip, #1956]!	; 0x7a4

0001089c <getpid@plt>:
   1089c:	add	ip, pc, #0, 12
   108a0:	add	ip, ip, #73728	; 0x12000
   108a4:	ldr	pc, [ip, #1948]!	; 0x79c

000108a8 <exit@plt>:
   108a8:	add	ip, pc, #0, 12
   108ac:	add	ip, ip, #73728	; 0x12000
   108b0:	ldr	pc, [ip, #1940]!	; 0x794

000108b4 <bcmp@plt>:
   108b4:	add	ip, pc, #0, 12
   108b8:	add	ip, ip, #73728	; 0x12000
   108bc:	ldr	pc, [ip, #1932]!	; 0x78c

000108c0 <strlen@plt>:
   108c0:	add	ip, pc, #0, 12
   108c4:	add	ip, ip, #73728	; 0x12000
   108c8:	ldr	pc, [ip, #1924]!	; 0x784

000108cc <fprintf@plt>:
   108cc:	add	ip, pc, #0, 12
   108d0:	add	ip, ip, #73728	; 0x12000
   108d4:	ldr	pc, [ip, #1916]!	; 0x77c

000108d8 <__isoc99_sscanf@plt>:
   108d8:	add	ip, pc, #0, 12
   108dc:	add	ip, ip, #73728	; 0x12000
   108e0:	ldr	pc, [ip, #1908]!	; 0x774

000108e4 <fclose@plt>:
   108e4:	add	ip, pc, #0, 12
   108e8:	add	ip, ip, #73728	; 0x12000
   108ec:	ldr	pc, [ip, #1900]!	; 0x76c

000108f0 <fputc@plt>:
   108f0:	add	ip, pc, #0, 12
   108f4:	add	ip, ip, #73728	; 0x12000
   108f8:	ldr	pc, [ip, #1892]!	; 0x764

000108fc <sprintf@plt>:
   108fc:	add	ip, pc, #0, 12
   10900:	add	ip, ip, #73728	; 0x12000
   10904:	ldr	pc, [ip, #1884]!	; 0x75c

00010908 <strncmp@plt>:
   10908:	add	ip, pc, #0, 12
   1090c:	add	ip, ip, #73728	; 0x12000
   10910:	ldr	pc, [ip, #1876]!	; 0x754

00010914 <abort@plt>:
   10914:	add	ip, pc, #0, 12
   10918:	add	ip, ip, #73728	; 0x12000
   1091c:	ldr	pc, [ip, #1868]!	; 0x74c

Disassembly of section .text:

00010920 <error@@Base-0x64c>:
   10920:	mov	fp, #0
   10924:	mov	lr, #0
   10928:	pop	{r1}		; (ldr r1, [sp], #4)
   1092c:	mov	r2, sp
   10930:	push	{r2}		; (str r2, [sp, #-4]!)
   10934:	push	{r0}		; (str r0, [sp, #-4]!)
   10938:	ldr	ip, [pc, #16]	; 10950 <abort@plt+0x3c>
   1093c:	push	{ip}		; (str ip, [sp, #-4]!)
   10940:	ldr	r0, [pc, #12]	; 10954 <abort@plt+0x40>
   10944:	ldr	r3, [pc, #12]	; 10958 <abort@plt+0x44>
   10948:	bl	10878 <__libc_start_main@plt>
   1094c:	bl	10914 <abort@plt>
   10950:	andeq	r2, r1, r0, asr #11
   10954:	andeq	r0, r1, r0, lsl sl
   10958:	andeq	r2, r1, r0, ror #10
   1095c:	ldr	r3, [pc, #20]	; 10978 <abort@plt+0x64>
   10960:	ldr	r2, [pc, #20]	; 1097c <abort@plt+0x68>
   10964:	add	r3, pc, r3
   10968:	ldr	r2, [r3, r2]
   1096c:	cmp	r2, #0
   10970:	bxeq	lr
   10974:	b	10890 <__gmon_start__@plt>
   10978:	muleq	r1, r4, r6
   1097c:	andeq	r0, r0, r8, ror r0
   10980:	ldr	r0, [pc, #24]	; 109a0 <abort@plt+0x8c>
   10984:	ldr	r3, [pc, #24]	; 109a4 <abort@plt+0x90>
   10988:	cmp	r3, r0
   1098c:	bxeq	lr
   10990:	ldr	r3, [pc, #16]	; 109a8 <abort@plt+0x94>
   10994:	cmp	r3, #0
   10998:	bxeq	lr
   1099c:	bx	r3
   109a0:	andeq	r3, r2, r4, lsr #1
   109a4:	andeq	r3, r2, r4, lsr #1
   109a8:	andeq	r0, r0, r0
   109ac:	ldr	r0, [pc, #36]	; 109d8 <abort@plt+0xc4>
   109b0:	ldr	r1, [pc, #36]	; 109dc <abort@plt+0xc8>
   109b4:	sub	r1, r1, r0
   109b8:	asr	r1, r1, #2
   109bc:	add	r1, r1, r1, lsr #31
   109c0:	asrs	r1, r1, #1
   109c4:	bxeq	lr
   109c8:	ldr	r3, [pc, #16]	; 109e0 <abort@plt+0xcc>
   109cc:	cmp	r3, #0
   109d0:	bxeq	lr
   109d4:	bx	r3
   109d8:	andeq	r3, r2, r4, lsr #1
   109dc:	andeq	r3, r2, r4, lsr #1
   109e0:	andeq	r0, r0, r0
   109e4:	push	{r4, lr}
   109e8:	ldr	r4, [pc, #24]	; 10a08 <abort@plt+0xf4>
   109ec:	ldrb	r3, [r4]
   109f0:	cmp	r3, #0
   109f4:	popne	{r4, pc}
   109f8:	bl	10980 <abort@plt+0x6c>
   109fc:	mov	r3, #1
   10a00:	strb	r3, [r4]
   10a04:	pop	{r4, pc}
   10a08:	andeq	r3, r2, r4, lsr #1
   10a0c:	b	109ac <abort@plt+0x98>
   10a10:	push	{fp, lr}
   10a14:	mov	fp, sp
   10a18:	sub	sp, sp, #8
   10a1c:	str	r0, [sp, #4]
   10a20:	add	r0, sp, #4
   10a24:	mov	r3, #0
   10a28:	mov	r4, r1
   10a2c:	mov	r6, #0
   10a30:	ldr	r2, [pc, #84]	; 10a8c <abort@plt+0x178>
   10a34:	add	r2, pc, r2
   10a38:	bl	10ce4 <abort@plt+0x3d0>
   10a3c:	ldr	r0, [sp, #4]
   10a40:	cmp	r0, #2
   10a44:	blt	10a80 <abort@plt+0x16c>
   10a48:	ldr	r5, [pc, #64]	; 10a90 <abort@plt+0x17c>
   10a4c:	ldr	r5, [pc, r5]
   10a50:	ldr	r1, [r4, r6, lsl #2]
   10a54:	mov	r0, r5
   10a58:	bl	11218 <error@@Base+0x2ac>
   10a5c:	ldr	r0, [sp, #4]
   10a60:	add	r6, r6, #1
   10a64:	cmp	r6, r0
   10a68:	blt	10a50 <abort@plt+0x13c>
   10a6c:	ldr	r0, [pc, #32]	; 10a94 <abort@plt+0x180>
   10a70:	mov	r1, #0
   10a74:	ldr	r0, [pc, r0]
   10a78:	bl	116d8 <error@@Base+0x76c>
   10a7c:	bl	10f28 <abort@plt+0x614>
   10a80:	ldr	r0, [pc, #16]	; 10a98 <abort@plt+0x184>
   10a84:	add	r0, pc, r0
   10a88:	bl	10f6c <error@@Base>
   10a8c:	muleq	r0, r4, fp
   10a90:	andeq	r2, r1, ip, lsr #12
   10a94:	andeq	r2, r1, r4, lsl #12
   10a98:	andeq	r1, r0, r8, ror fp
   10a9c:	push	{fp, lr}
   10aa0:	mov	fp, sp
   10aa4:	bl	10800 <calloc@plt>
   10aa8:	cmp	r0, #0
   10aac:	popne	{fp, pc}
   10ab0:	ldr	r0, [pc, #4]	; 10abc <abort@plt+0x1a8>
   10ab4:	add	r0, pc, r0
   10ab8:	bl	10f6c <error@@Base>
   10abc:	andeq	r1, r0, pc, asr fp
   10ac0:	push	{r4, r5, r6, sl, fp, lr}
   10ac4:	add	fp, sp, #16
   10ac8:	ldrb	r3, [r0]
   10acc:	ldrb	ip, [r1]
   10ad0:	mov	r2, r0
   10ad4:	mov	r0, #0
   10ad8:	cmp	r3, #0
   10adc:	beq	10b1c <abort@plt+0x208>
   10ae0:	add	r6, r2, #1
   10ae4:	add	lr, r1, #1
   10ae8:	mov	r2, #0
   10aec:	uxtb	r4, ip
   10af0:	uxtb	r5, r3
   10af4:	cmp	r5, r4
   10af8:	bne	10b2c <abort@plt+0x218>
   10afc:	ldrb	r3, [r6, r2]
   10b00:	ldrb	ip, [lr, r2]
   10b04:	add	r2, r2, #1
   10b08:	cmp	r3, #0
   10b0c:	bne	10aec <abort@plt+0x1d8>
   10b10:	cmp	ip, #0
   10b14:	bne	10b28 <abort@plt+0x214>
   10b18:	pop	{r4, r5, r6, sl, fp, pc}
   10b1c:	mov	r2, #0
   10b20:	cmp	ip, #0
   10b24:	beq	10b18 <abort@plt+0x204>
   10b28:	mov	r3, #0
   10b2c:	ldrb	r1, [r1, r2]
   10b30:	uxtb	r2, r3
   10b34:	mov	r0, #1
   10b38:	cmp	r2, r1
   10b3c:	mvncc	r0, #0
   10b40:	pop	{r4, r5, r6, sl, fp, pc}
   10b44:	push	{r4, r5, fp, lr}
   10b48:	add	fp, sp, #8
   10b4c:	mov	r5, r1
   10b50:	cmp	r0, #0
   10b54:	beq	10b88 <abort@plt+0x274>
   10b58:	mov	r1, r5
   10b5c:	mov	r4, r0
   10b60:	bl	10824 <fopen@plt>
   10b64:	cmp	r0, #0
   10b68:	popne	{r4, r5, fp, pc}
   10b6c:	ldrb	r0, [r5]
   10b70:	cmp	r0, #119	; 0x77
   10b74:	bne	10bac <abort@plt+0x298>
   10b78:	ldr	r0, [pc, #72]	; 10bc8 <abort@plt+0x2b4>
   10b7c:	mov	r1, r4
   10b80:	add	r0, pc, r0
   10b84:	bl	10fbc <error@@Base+0x50>
   10b88:	ldrb	r0, [r5]
   10b8c:	ldr	r1, [pc, #40]	; 10bbc <abort@plt+0x2a8>
   10b90:	ldr	r1, [pc, r1]
   10b94:	ldr	r2, [pc, #36]	; 10bc0 <abort@plt+0x2ac>
   10b98:	cmp	r0, #114	; 0x72
   10b9c:	ldr	r2, [pc, r2]
   10ba0:	moveq	r2, r1
   10ba4:	ldr	r0, [r2]
   10ba8:	pop	{r4, r5, fp, pc}
   10bac:	ldr	r0, [pc, #16]	; 10bc4 <abort@plt+0x2b0>
   10bb0:	mov	r1, r4
   10bb4:	add	r0, pc, r0
   10bb8:	bl	10fbc <error@@Base+0x50>
   10bbc:	strdeq	r2, [r1], -r0
   10bc0:	andeq	r2, r1, r8, ror #9
   10bc4:	andeq	r1, r0, pc, lsl #21
   10bc8:	andeq	r1, r0, sp, lsr #21
   10bcc:	ldr	r1, [pc, #40]	; 10bfc <abort@plt+0x2e8>
   10bd0:	ldr	r1, [pc, r1]
   10bd4:	ldr	r1, [r1]
   10bd8:	cmp	r1, r0
   10bdc:	bxeq	lr
   10be0:	ldr	r1, [pc, #24]	; 10c00 <abort@plt+0x2ec>
   10be4:	ldr	r1, [pc, r1]
   10be8:	ldr	r1, [r1]
   10bec:	cmp	r1, r0
   10bf0:	beq	10bf8 <abort@plt+0x2e4>
   10bf4:	b	108e4 <fclose@plt>
   10bf8:	bx	lr
   10bfc:			; <UNDEFINED> instruction: 0x000124b0
   10c00:	andeq	r2, r1, r0, lsr #9
   10c04:	push	{fp, lr}
   10c08:	mov	fp, sp
   10c0c:	sub	sp, sp, #88	; 0x58
   10c10:	mov	r1, r0
   10c14:	mov	r2, sp
   10c18:	mov	r0, #3
   10c1c:	bl	10860 <__xstat@plt>
   10c20:	clz	r0, r0
   10c24:	lsr	r0, r0, #5
   10c28:	mov	sp, fp
   10c2c:	pop	{fp, pc}
   10c30:	push	{r4, r5, fp, lr}
   10c34:	add	fp, sp, #8
   10c38:	sub	sp, sp, #104	; 0x68
   10c3c:	ldr	r0, [pc, #92]	; 10ca0 <abort@plt+0x38c>
   10c40:	add	r0, pc, r0
   10c44:	ldrh	r1, [r0]
   10c48:	add	r5, r1, #1
   10c4c:	strh	r5, [r0]
   10c50:	ldr	r0, [pc, #76]	; 10ca4 <abort@plt+0x390>
   10c54:	ldr	r0, [pc, r0]
   10c58:	ldr	r4, [r0]
   10c5c:	bl	1089c <getpid@plt>
   10c60:	mov	r3, r0
   10c64:	sxth	r0, r5
   10c68:	add	r5, sp, #4
   10c6c:	mov	r2, r4
   10c70:	str	r0, [sp]
   10c74:	mov	r0, r5
   10c78:	ldr	r1, [pc, #40]	; 10ca8 <abort@plt+0x394>
   10c7c:	add	r1, pc, r1
   10c80:	bl	108fc <sprintf@plt>
   10c84:	mov	r0, r5
   10c88:	bl	10848 <strdup@plt>
   10c8c:	mov	r4, r0
   10c90:	bl	10854 <unlink@plt>
   10c94:	mov	r0, r4
   10c98:	sub	sp, fp, #8
   10c9c:	pop	{r4, r5, fp, pc}
   10ca0:	andeq	r2, r1, lr, asr r4
   10ca4:	andeq	r2, r1, r0, lsr #8
   10ca8:	strdeq	r1, [r0], -r0
   10cac:	push	{r4, sl, fp, lr}
   10cb0:	add	fp, sp, #8
   10cb4:	mov	r4, r0
   10cb8:	bl	108c0 <strlen@plt>
   10cbc:	sub	r0, r0, #1
   10cc0:	sxth	r0, r0
   10cc4:	cmp	r0, #0
   10cc8:	bmi	10cd8 <abort@plt+0x3c4>
   10ccc:	ldrb	r1, [r4, r0]
   10cd0:	cmp	r1, #47	; 0x2f
   10cd4:	bne	10cbc <abort@plt+0x3a8>
   10cd8:	add	r0, r0, r4
   10cdc:	add	r0, r0, #1
   10ce0:	pop	{r4, sl, fp, pc}
   10ce4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ce8:	add	fp, sp, #28
   10cec:	sub	sp, sp, #12
   10cf0:	stmib	sp, {r0, r1}
   10cf4:	mov	r6, r3
   10cf8:	str	r2, [sp]
   10cfc:	ldr	r4, [r1]
   10d00:	mov	r0, r4
   10d04:	bl	108c0 <strlen@plt>
   10d08:	sub	r0, r0, #1
   10d0c:	sxth	r0, r0
   10d10:	cmp	r0, #0
   10d14:	bmi	10d24 <abort@plt+0x410>
   10d18:	ldrb	r1, [r4, r0]
   10d1c:	cmp	r1, #47	; 0x2f
   10d20:	bne	10d08 <abort@plt+0x3f4>
   10d24:	ldr	r1, [pc, #484]	; 10f10 <abort@plt+0x5fc>
   10d28:	add	r0, r0, r4
   10d2c:	add	r0, r0, #1
   10d30:	ldr	r1, [pc, r1]
   10d34:	str	r0, [r1]
   10d38:	mov	r0, #2
   10d3c:	ldr	r4, [pc, #464]	; 10f14 <abort@plt+0x600>
   10d40:	add	r4, pc, r4
   10d44:	mov	r1, r4
   10d48:	bl	10884 <__sysv_signal@plt>
   10d4c:	mov	r0, #15
   10d50:	mov	r1, r4
   10d54:	bl	10884 <__sysv_signal@plt>
   10d58:	ldr	r0, [sp, #4]
   10d5c:	ldr	r5, [r0]
   10d60:	cmp	r5, #1
   10d64:	bne	10d7c <abort@plt+0x468>
   10d68:	ldr	r0, [pc, #424]	; 10f18 <abort@plt+0x604>
   10d6c:	ldr	r0, [pc, r0]
   10d70:	ldrb	r0, [r0]
   10d74:	cmp	r0, #0
   10d78:	bne	10ef8 <abort@plt+0x5e4>
   10d7c:	ldr	ip, [sp, #8]
   10d80:	mov	r8, #0
   10d84:	cmp	r5, #2
   10d88:	blt	10ed4 <abort@plt+0x5c0>
   10d8c:	mov	r8, #0
   10d90:	mov	r7, #1
   10d94:	mov	r9, #1
   10d98:	ldr	r4, [ip, r7, lsl #2]
   10d9c:	ldrb	r0, [r4]
   10da0:	cmp	r0, #45	; 0x2d
   10da4:	bne	10e7c <abort@plt+0x568>
   10da8:	ldrb	sl, [r4, #1]
   10dac:	cmp	sl, #0
   10db0:	beq	10e7c <abort@plt+0x568>
   10db4:	mov	r0, r4
   10db8:	bl	108c0 <strlen@plt>
   10dbc:	mov	r2, r0
   10dc0:	ldr	r0, [pc, #340]	; 10f1c <abort@plt+0x608>
   10dc4:	mov	r1, r4
   10dc8:	add	r0, pc, r0
   10dcc:	bl	10908 <strncmp@plt>
   10dd0:	cmp	r0, #0
   10dd4:	beq	10ef8 <abort@plt+0x5e4>
   10dd8:	ldr	ip, [sp, #8]
   10ddc:	add	r1, r7, #1
   10de0:	mov	r0, #0
   10de4:	cmp	r1, r5
   10de8:	ldrlt	r0, [ip, r1, lsl #2]
   10dec:	cmp	r6, #0
   10df0:	ldrbne	r2, [r6]
   10df4:	cmpne	r2, #0
   10df8:	beq	10ee8 <abort@plt+0x5d4>
   10dfc:	mov	r1, #0
   10e00:	cmp	sl, r2
   10e04:	beq	10e2c <abort@plt+0x518>
   10e08:	mov	r2, #1
   10e0c:	sxth	r1, r2
   10e10:	add	r3, r1, r1, lsl #1
   10e14:	ldrb	r3, [r6, r3, lsl #2]
   10e18:	cmp	r3, #0
   10e1c:	beq	10ee8 <abort@plt+0x5d4>
   10e20:	add	r2, r2, #1
   10e24:	cmp	sl, r3
   10e28:	bne	10e0c <abort@plt+0x4f8>
   10e2c:	add	r1, r1, r1, lsl #1
   10e30:	add	r3, r6, r1, lsl #2
   10e34:	ldr	r1, [r3, #4]
   10e38:	cmp	r1, #0
   10e3c:	beq	10e9c <abort@plt+0x588>
   10e40:	mov	r2, r4
   10e44:	cmp	r0, #0
   10e48:	ldrb	r7, [r2, #2]!
   10e4c:	cmpeq	r7, #0
   10e50:	beq	10e9c <abort@plt+0x588>
   10e54:	ldr	r3, [r1]
   10e58:	cmp	r3, #0
   10e5c:	bne	10f00 <abort@plt+0x5ec>
   10e60:	cmp	r7, #0
   10e64:	movne	r0, r2
   10e68:	str	r0, [r1]
   10e6c:	ldrb	r0, [r2]
   10e70:	cmp	r0, #0
   10e74:	addeq	r9, r9, #1
   10e78:	b	10e88 <abort@plt+0x574>
   10e7c:	sxth	r0, r8
   10e80:	add	r8, r8, #1
   10e84:	str	r4, [ip, r0, lsl #2]
   10e88:	add	r9, r9, #1
   10e8c:	sxth	r7, r9
   10e90:	cmp	r5, r7
   10e94:	bgt	10d98 <abort@plt+0x484>
   10e98:	b	10ed4 <abort@plt+0x5c0>
   10e9c:	ldr	r0, [r3, #8]
   10ea0:	cmp	r0, #0
   10ea4:	beq	10ee8 <abort@plt+0x5d4>
   10ea8:	ldrb	r1, [r4, #2]
   10eac:	cmp	r1, #0
   10eb0:	bne	10ee8 <abort@plt+0x5d4>
   10eb4:	ldrb	r1, [r0]
   10eb8:	cmp	r1, #0
   10ebc:	bne	10f00 <abort@plt+0x5ec>
   10ec0:	mov	r1, #1
   10ec4:	strb	r1, [r0]
   10ec8:	ldr	r0, [sp, #4]
   10ecc:	ldr	r5, [r0]
   10ed0:	b	10e88 <abort@plt+0x574>
   10ed4:	ldr	r1, [sp, #4]
   10ed8:	sxth	r0, r8
   10edc:	str	r0, [r1]
   10ee0:	sub	sp, fp, #28
   10ee4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ee8:	ldr	r0, [pc, #52]	; 10f24 <abort@plt+0x610>
   10eec:	mov	r1, r4
   10ef0:	add	r0, pc, r0
   10ef4:	bl	10fbc <error@@Base+0x50>
   10ef8:	ldr	r0, [sp]
   10efc:	bl	11098 <error@@Base+0x12c>
   10f00:	ldr	r0, [pc, #24]	; 10f20 <abort@plt+0x60c>
   10f04:	mov	r1, r4
   10f08:	add	r0, pc, r0
   10f0c:	bl	10fbc <error@@Base+0x50>
   10f10:	andeq	r2, r1, r4, asr #6
   10f14:	andeq	r0, r0, r8, lsl r3
   10f18:	strdeq	r2, [r1], -r8
   10f1c:	andeq	r1, r0, r1, asr #17
   10f20:	andeq	r1, r0, r5, lsr #15
   10f24:	andeq	r1, r0, lr, lsr #15
   10f28:	push	{fp, lr}
   10f2c:	mov	fp, sp
   10f30:	mov	r0, #0
   10f34:	bl	10f38 <abort@plt+0x624>
   10f38:	push	{fp, lr}
   10f3c:	mov	fp, sp
   10f40:	mov	r4, r0
   10f44:	ldr	r0, [pc, #28]	; 10f68 <abort@plt+0x654>
   10f48:	ldr	r0, [pc, r0]
   10f4c:	ldr	r0, [r0]
   10f50:	cmp	r0, #0
   10f54:	beq	10f5c <abort@plt+0x648>
   10f58:	blx	r0
   10f5c:	bl	110f8 <error@@Base+0x18c>
   10f60:	mov	r0, r4
   10f64:	bl	108a8 <exit@plt>
   10f68:	andeq	r2, r1, r4, lsr r1

00010f6c <error@@Base>:
   10f6c:	push	{fp, lr}
   10f70:	mov	fp, sp
   10f74:	mov	r3, r0
   10f78:	ldr	r0, [pc, #44]	; 10fac <error@@Base+0x40>
   10f7c:	ldr	r0, [pc, r0]
   10f80:	ldr	r2, [r0]
   10f84:	ldr	r0, [pc, #36]	; 10fb0 <error@@Base+0x44>
   10f88:	ldr	r0, [pc, r0]
   10f8c:	ldr	r0, [r0]
   10f90:	ldr	r1, [pc, #28]	; 10fb4 <error@@Base+0x48>
   10f94:	add	r1, pc, r1
   10f98:	bl	108cc <fprintf@plt>
   10f9c:	ldr	r0, [pc, #20]	; 10fb8 <error@@Base+0x4c>
   10fa0:	ldr	r0, [pc, r0]
   10fa4:	ldr	r0, [r0]
   10fa8:	bl	10f38 <abort@plt+0x624>
   10fac:	strdeq	r2, [r1], -r8
   10fb0:	andeq	r2, r1, r4, ror #1
   10fb4:	andeq	r1, r0, r3, asr #13
   10fb8:	andeq	r2, r1, r8, ror #1
   10fbc:	push	{fp, lr}
   10fc0:	mov	fp, sp
   10fc4:	sub	sp, sp, #8
   10fc8:	mov	r3, r0
   10fcc:	ldr	r0, [pc, #48]	; 11004 <error@@Base+0x98>
   10fd0:	ldr	r0, [pc, r0]
   10fd4:	ldr	r2, [r0]
   10fd8:	ldr	r0, [pc, #40]	; 11008 <error@@Base+0x9c>
   10fdc:	ldr	r0, [pc, r0]
   10fe0:	str	r1, [sp]
   10fe4:	ldr	r0, [r0]
   10fe8:	ldr	r1, [pc, #28]	; 1100c <error@@Base+0xa0>
   10fec:	add	r1, pc, r1
   10ff0:	bl	108cc <fprintf@plt>
   10ff4:	ldr	r0, [pc, #20]	; 11010 <error@@Base+0xa4>
   10ff8:	ldr	r0, [pc, r0]
   10ffc:	ldr	r0, [r0]
   11000:	bl	10f38 <abort@plt+0x624>
   11004:	andeq	r2, r1, r4, lsr #1
   11008:	muleq	r1, r0, r0
   1100c:	andeq	r1, r0, r3, ror r6
   11010:	muleq	r1, r0, r0
   11014:	push	{fp, lr}
   11018:	mov	fp, sp
   1101c:	sub	sp, sp, #8
   11020:	mov	r3, r0
   11024:	ldr	r0, [pc, #40]	; 11054 <error@@Base+0xe8>
   11028:	ldr	r0, [pc, r0]
   1102c:	ldr	r2, [r0]
   11030:	ldr	r0, [pc, #32]	; 11058 <error@@Base+0xec>
   11034:	ldr	r0, [pc, r0]
   11038:	str	r1, [sp]
   1103c:	ldr	r0, [r0]
   11040:	ldr	r1, [pc, #20]	; 1105c <error@@Base+0xf0>
   11044:	add	r1, pc, r1
   11048:	bl	108cc <fprintf@plt>
   1104c:	mov	sp, fp
   11050:	pop	{fp, pc}
   11054:	andeq	r2, r1, ip, asr #32
   11058:	andeq	r2, r1, r8, lsr r0
   1105c:	andeq	r1, r0, fp, lsl r6
   11060:	push	{fp, lr}
   11064:	mov	fp, sp
   11068:	ldr	r0, [pc, #32]	; 11090 <error@@Base+0x124>
   1106c:	add	r0, pc, r0
   11070:	ldrb	r1, [r0]
   11074:	cmp	r1, #1
   11078:	popeq	{fp, pc}
   1107c:	mov	r1, #1
   11080:	strb	r1, [r0]
   11084:	ldr	r0, [pc, #8]	; 11094 <error@@Base+0x128>
   11088:	add	r0, pc, r0
   1108c:	bl	10f6c <error@@Base>
   11090:	andeq	r2, r1, r4, lsr r0
   11094:	strdeq	r1, [r0], -r2
   11098:	push	{fp, lr}
   1109c:	mov	fp, sp
   110a0:	mov	r3, r0
   110a4:	ldr	r0, [pc, #60]	; 110e8 <error@@Base+0x17c>
   110a8:	ldr	r0, [pc, r0]
   110ac:	ldr	r0, [r0]
   110b0:	cmp	r0, #0
   110b4:	bne	110e0 <error@@Base+0x174>
   110b8:	ldr	r0, [pc, #44]	; 110ec <error@@Base+0x180>
   110bc:	ldr	r0, [pc, r0]
   110c0:	ldr	r2, [r0]
   110c4:	ldr	r0, [pc, #36]	; 110f0 <error@@Base+0x184>
   110c8:	ldr	r0, [pc, r0]
   110cc:	ldr	r0, [r0]
   110d0:	ldr	r1, [pc, #28]	; 110f4 <error@@Base+0x188>
   110d4:	add	r1, pc, r1
   110d8:	bl	108cc <fprintf@plt>
   110dc:	bl	10f28 <abort@plt+0x614>
   110e0:	blx	r0
   110e4:	bl	10f28 <abort@plt+0x614>
   110e8:	andeq	r1, r1, r0, asr #31
   110ec:			; <UNDEFINED> instruction: 0x00011fb8
   110f0:	andeq	r1, r1, r4, lsr #31
   110f4:			; <UNDEFINED> instruction: 0x000015bb
   110f8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   110fc:	add	fp, sp, #24
   11100:	sub	sp, sp, #104	; 0x68
   11104:	ldr	r8, [pc, #124]	; 11188 <error@@Base+0x21c>
   11108:	add	r8, pc, r8
   1110c:	ldrsh	r0, [r8]
   11110:	cmp	r0, #1
   11114:	blt	11180 <error@@Base+0x214>
   11118:	ldr	r9, [pc, #108]	; 1118c <error@@Base+0x220>
   1111c:	mov	r7, #1
   11120:	add	r4, sp, #4
   11124:	ldr	r9, [pc, r9]
   11128:	ldr	r5, [pc, #96]	; 11190 <error@@Base+0x224>
   1112c:	add	r5, pc, r5
   11130:	ldr	r6, [r9]
   11134:	bl	1089c <getpid@plt>
   11138:	mov	r3, r0
   1113c:	sxth	r0, r7
   11140:	mov	r1, r5
   11144:	mov	r2, r6
   11148:	str	r0, [sp]
   1114c:	mov	r0, r4
   11150:	bl	108fc <sprintf@plt>
   11154:	mov	r0, r4
   11158:	bl	10848 <strdup@plt>
   1115c:	mov	r6, r0
   11160:	bl	10854 <unlink@plt>
   11164:	mov	r0, r6
   11168:	bl	10830 <free@plt>
   1116c:	add	r0, r7, #1
   11170:	sxth	r7, r0
   11174:	ldrsh	r0, [r8]
   11178:	cmp	r7, r0
   1117c:	ble	11130 <error@@Base+0x1c4>
   11180:	sub	sp, fp, #24
   11184:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11188:	muleq	r1, r6, pc	; <UNPREDICTABLE>
   1118c:	andeq	r1, r1, r0, asr pc
   11190:	andeq	r1, r0, r0, asr #10
   11194:	andeq	r0, r0, r0
   11198:	ldm	r0, {r3, ip}
   1119c:	add	r2, ip, r2
   111a0:	add	r1, r3, r1
   111a4:	stm	r0, {r1, r2}
   111a8:	bx	lr
   111ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   111b0:	add	fp, sp, #24
   111b4:	mov	r8, r3
   111b8:	mov	r5, r2
   111bc:	mov	r4, r1
   111c0:	mov	r6, r0
   111c4:	bl	12030 <error@@Base+0x10c4>
   111c8:	mov	r7, r0
   111cc:	cmp	r0, #0
   111d0:	bne	111fc <error@@Base+0x290>
   111d4:	mov	r0, #1
   111d8:	mov	r1, #20
   111dc:	bl	10a9c <abort@plt+0x188>
   111e0:	mov	r7, r0
   111e4:	mov	r0, r4
   111e8:	bl	10848 <strdup@plt>
   111ec:	str	r0, [r7, #8]
   111f0:	mov	r0, r6
   111f4:	mov	r1, r7
   111f8:	bl	120c0 <error@@Base+0x1154>
   111fc:	ldr	r0, [r7, #12]
   11200:	ldr	r1, [r7, #16]
   11204:	add	r0, r0, r5
   11208:	add	r1, r1, r8
   1120c:	str	r0, [r7, #12]
   11210:	str	r1, [r7, #16]
   11214:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11218:	push	{r4, r5, r6, r7, fp, lr}
   1121c:	add	fp, sp, #16
   11220:	sub	sp, sp, #8
   11224:	mov	r6, r1
   11228:	ldr	r1, [pc, #484]	; 11414 <error@@Base+0x4a8>
   1122c:	mov	r5, r0
   11230:	mov	r0, r6
   11234:	add	r1, pc, r1
   11238:	bl	10b44 <abort@plt+0x230>
   1123c:	mov	r4, r0
   11240:	ldr	r0, [pc, #464]	; 11418 <error@@Base+0x4ac>
   11244:	mov	r1, #99	; 0x63
   11248:	mov	r2, r4
   1124c:	add	r0, pc, r0
   11250:	bl	1083c <fgets@plt>
   11254:	cmp	r0, #0
   11258:	beq	113f8 <error@@Base+0x48c>
   1125c:	ldr	r0, [pc, #440]	; 1141c <error@@Base+0x4b0>
   11260:	ldr	r1, [pc, #440]	; 11420 <error@@Base+0x4b4>
   11264:	mov	r2, #45	; 0x2d
   11268:	add	r0, pc, r0
   1126c:	add	r1, pc, r1
   11270:	bl	108b4 <bcmp@plt>
   11274:	cmp	r0, #0
   11278:	bne	113f8 <error@@Base+0x48c>
   1127c:	ldr	r0, [pc, #416]	; 11424 <error@@Base+0x4b8>
   11280:	mov	r1, #99	; 0x63
   11284:	mov	r2, r4
   11288:	add	r0, pc, r0
   1128c:	bl	1083c <fgets@plt>
   11290:	cmp	r0, #0
   11294:	beq	113f8 <error@@Base+0x48c>
   11298:	ldr	r0, [pc, #392]	; 11428 <error@@Base+0x4bc>
   1129c:	ldr	r1, [pc, #392]	; 1142c <error@@Base+0x4c0>
   112a0:	mov	r2, #48	; 0x30
   112a4:	add	r0, pc, r0
   112a8:	add	r1, pc, r1
   112ac:	bl	108b4 <bcmp@plt>
   112b0:	cmp	r0, #0
   112b4:	bne	113f8 <error@@Base+0x48c>
   112b8:	ldr	r0, [pc, #368]	; 11430 <error@@Base+0x4c4>
   112bc:	mov	r1, #99	; 0x63
   112c0:	mov	r2, r4
   112c4:	add	r0, pc, r0
   112c8:	bl	1083c <fgets@plt>
   112cc:	cmp	r0, #0
   112d0:	beq	113f8 <error@@Base+0x48c>
   112d4:	ldr	r0, [pc, #344]	; 11434 <error@@Base+0x4c8>
   112d8:	ldr	r1, [pc, #344]	; 11438 <error@@Base+0x4cc>
   112dc:	add	r2, sp, #4
   112e0:	add	r0, pc, r0
   112e4:	add	r1, pc, r1
   112e8:	bl	108d8 <__isoc99_sscanf@plt>
   112ec:	cmp	r0, #1
   112f0:	bne	113f8 <error@@Base+0x48c>
   112f4:	ldr	r0, [pc, #320]	; 1143c <error@@Base+0x4d0>
   112f8:	mov	r1, #99	; 0x63
   112fc:	mov	r2, r4
   11300:	add	r0, pc, r0
   11304:	bl	1083c <fgets@plt>
   11308:	cmp	r0, #0
   1130c:	beq	113f8 <error@@Base+0x48c>
   11310:	ldr	r0, [pc, #296]	; 11440 <error@@Base+0x4d4>
   11314:	ldr	r1, [pc, #296]	; 11444 <error@@Base+0x4d8>
   11318:	mov	r2, sp
   1131c:	add	r0, pc, r0
   11320:	add	r1, pc, r1
   11324:	bl	108d8 <__isoc99_sscanf@plt>
   11328:	cmp	r0, #1
   1132c:	bne	113f8 <error@@Base+0x48c>
   11330:	ldr	r0, [pc, #272]	; 11448 <error@@Base+0x4dc>
   11334:	mov	r1, #99	; 0x63
   11338:	mov	r2, r4
   1133c:	add	r0, pc, r0
   11340:	bl	1083c <fgets@plt>
   11344:	cmp	r0, #0
   11348:	beq	113f8 <error@@Base+0x48c>
   1134c:	ldr	r0, [pc, #248]	; 1144c <error@@Base+0x4e0>
   11350:	mov	r1, #99	; 0x63
   11354:	mov	r2, r4
   11358:	add	r0, pc, r0
   1135c:	bl	1083c <fgets@plt>
   11360:	cmp	r0, #0
   11364:	beq	113f8 <error@@Base+0x48c>
   11368:	ldr	r2, [sp, #4]
   1136c:	ldm	r5, {r0, r1}
   11370:	add	r0, r0, r2
   11374:	ldr	r2, [sp]
   11378:	add	r1, r1, r2
   1137c:	stm	r5, {r0, r1}
   11380:	add	r1, r5, #8
   11384:	mov	r0, r4
   11388:	bl	11458 <error@@Base+0x4ec>
   1138c:	mov	r7, r0
   11390:	add	r1, r5, #416	; 0x1a0
   11394:	mov	r0, r4
   11398:	bl	11458 <error@@Base+0x4ec>
   1139c:	mov	r6, r0
   113a0:	add	r1, r5, #824	; 0x338
   113a4:	mov	r0, r4
   113a8:	bl	11458 <error@@Base+0x4ec>
   113ac:	ldr	r0, [sp, #4]
   113b0:	cmp	r0, #1
   113b4:	blt	113e8 <error@@Base+0x47c>
   113b8:	add	r1, r5, #920	; 0x398
   113bc:	mov	r0, r4
   113c0:	bl	11458 <error@@Base+0x4ec>
   113c4:	cmp	r7, #1
   113c8:	addge	r1, r5, #992	; 0x3e0
   113cc:	movge	r0, r4
   113d0:	blge	11598 <error@@Base+0x62c>
   113d4:	cmp	r6, #1
   113d8:	movwge	r0, #9048	; 0x2358
   113dc:	addge	r1, r5, r0
   113e0:	movge	r0, r4
   113e4:	blge	11598 <error@@Base+0x62c>
   113e8:	mov	r0, r4
   113ec:	bl	10bcc <abort@plt+0x2b8>
   113f0:	sub	sp, fp, #16
   113f4:	pop	{r4, r5, r6, r7, fp, pc}
   113f8:	ldr	r1, [pc, #80]	; 11450 <error@@Base+0x4e4>
   113fc:	ldr	r0, [pc, #80]	; 11454 <error@@Base+0x4e8>
   11400:	cmp	r6, #0
   11404:	add	r1, pc, r1
   11408:	movne	r1, r6
   1140c:	add	r0, pc, r0
   11410:	bl	10fbc <error@@Base+0x50>
   11414:	andeq	r1, r0, sl, lsl #9
   11418:	andeq	r1, r1, r5, asr lr
   1141c:	andeq	r1, r1, r9, lsr lr
   11420:	andeq	r1, r0, r4, asr r4
   11424:	andeq	r1, r1, r9, lsl lr
   11428:	strdeq	r1, [r1], -sp
   1142c:	andeq	r1, r0, r8, asr #8
   11430:	ldrdeq	r1, [r1], -sp
   11434:	andeq	r1, r1, r1, asr #27
   11438:	andeq	r1, r0, r1, asr #9
   1143c:	andeq	r1, r1, r1, lsr #27
   11440:	andeq	r1, r1, r5, lsl #27
   11444:	andeq	r1, r0, r5, lsl #9
   11448:	andeq	r1, r1, r5, ror #26
   1144c:	andeq	r1, r1, r9, asr #26
   11450:	andeq	r1, r0, lr, lsr #6
   11454:	andeq	r1, r0, r4, lsl r3
   11458:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1145c:	add	fp, sp, #28
   11460:	sub	sp, sp, #12
   11464:	mov	r5, r0
   11468:	ldr	r0, [pc, #276]	; 11584 <error@@Base+0x618>
   1146c:	mov	r4, r1
   11470:	mov	r1, #99	; 0x63
   11474:	mov	r2, r5
   11478:	add	r0, pc, r0
   1147c:	bl	1083c <fgets@plt>
   11480:	mov	r6, #0
   11484:	cmp	r0, #0
   11488:	beq	11578 <error@@Base+0x60c>
   1148c:	ldr	r0, [pc, #244]	; 11588 <error@@Base+0x61c>
   11490:	mov	r1, #99	; 0x63
   11494:	mov	r2, r5
   11498:	add	r0, pc, r0
   1149c:	bl	1083c <fgets@plt>
   114a0:	cmp	r0, #0
   114a4:	beq	11578 <error@@Base+0x60c>
   114a8:	ldr	r7, [pc, #220]	; 1158c <error@@Base+0x620>
   114ac:	mov	r1, #99	; 0x63
   114b0:	mov	r2, r5
   114b4:	add	r7, pc, r7
   114b8:	mov	r0, r7
   114bc:	bl	1083c <fgets@plt>
   114c0:	cmp	r0, #0
   114c4:	beq	11578 <error@@Base+0x60c>
   114c8:	mov	r6, #0
   114cc:	add	r9, sp, #8
   114d0:	add	sl, sp, #4
   114d4:	add	r8, r7, #29
   114d8:	b	11538 <error@@Base+0x5cc>
   114dc:	ldr	r1, [pc, #176]	; 11594 <error@@Base+0x628>
   114e0:	mov	r0, r8
   114e4:	mov	r2, #8
   114e8:	add	r1, pc, r1
   114ec:	bl	108b4 <bcmp@plt>
   114f0:	ldr	r1, [sp, #8]
   114f4:	cmp	r0, #0
   114f8:	movwne	r0, #11
   114fc:	moveq	r6, r1
   11500:	mov	r2, r4
   11504:	ldr	r0, [r2, r0, lsl #3]!
   11508:	add	r0, r0, r1
   1150c:	ldr	r1, [sp, #4]
   11510:	str	r0, [r2]
   11514:	ldr	r0, [r2, #4]
   11518:	add	r0, r0, r1
   1151c:	mov	r1, #99	; 0x63
   11520:	str	r0, [r2, #4]
   11524:	mov	r0, r7
   11528:	mov	r2, r5
   1152c:	bl	1083c <fgets@plt>
   11530:	cmp	r0, #0
   11534:	beq	11578 <error@@Base+0x60c>
   11538:	ldr	r1, [pc, #80]	; 11590 <error@@Base+0x624>
   1153c:	mov	r0, r7
   11540:	mov	r2, r9
   11544:	mov	r3, sl
   11548:	add	r1, pc, r1
   1154c:	bl	108d8 <__isoc99_sscanf@plt>
   11550:	cmp	r0, #2
   11554:	bne	11578 <error@@Base+0x60c>
   11558:	mov	r0, r8
   1155c:	mov	r1, #0
   11560:	mov	r2, #10
   11564:	bl	10818 <strtol@plt>
   11568:	cmp	r0, #0
   1156c:	beq	114dc <error@@Base+0x570>
   11570:	ldr	r1, [sp, #8]
   11574:	b	11500 <error@@Base+0x594>
   11578:	mov	r0, r6
   1157c:	sub	sp, fp, #28
   11580:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11584:	andeq	r1, r1, r9, lsr #24
   11588:	andeq	r1, r1, r9, lsl #24
   1158c:	andeq	r1, r1, sp, ror #23
   11590:	andeq	r1, r0, r9, asr r2
   11594:			; <UNDEFINED> instruction: 0x000012b1
   11598:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1159c:	add	fp, sp, #28
   115a0:	sub	sp, sp, #12
   115a4:	mov	r5, r0
   115a8:	ldr	r0, [pc, #276]	; 116c4 <error@@Base+0x758>
   115ac:	mov	r4, r1
   115b0:	mov	r1, #99	; 0x63
   115b4:	mov	r2, r5
   115b8:	add	r0, pc, r0
   115bc:	bl	1083c <fgets@plt>
   115c0:	cmp	r0, #0
   115c4:	beq	116bc <error@@Base+0x750>
   115c8:	ldr	r0, [pc, #248]	; 116c8 <error@@Base+0x75c>
   115cc:	mov	r1, #99	; 0x63
   115d0:	mov	r2, r5
   115d4:	add	r0, pc, r0
   115d8:	bl	1083c <fgets@plt>
   115dc:	cmp	r0, #0
   115e0:	beq	116bc <error@@Base+0x750>
   115e4:	ldr	r6, [pc, #224]	; 116cc <error@@Base+0x760>
   115e8:	mov	r1, #99	; 0x63
   115ec:	mov	r2, r5
   115f0:	add	r6, pc, r6
   115f4:	mov	r0, r6
   115f8:	bl	1083c <fgets@plt>
   115fc:	cmp	r0, #0
   11600:	beq	116bc <error@@Base+0x750>
   11604:	add	r7, r6, #29
   11608:	b	1163c <error@@Base+0x6d0>
   1160c:	ldr	r0, [r8, #12]
   11610:	ldr	r1, [r8, #16]
   11614:	mov	r2, r5
   11618:	add	r0, r0, r9
   1161c:	add	r1, r1, sl
   11620:	str	r0, [r8, #12]
   11624:	str	r1, [r8, #16]
   11628:	mov	r0, r6
   1162c:	mov	r1, #99	; 0x63
   11630:	bl	1083c <fgets@plt>
   11634:	cmp	r0, #0
   11638:	beq	116bc <error@@Base+0x750>
   1163c:	ldr	r1, [pc, #140]	; 116d0 <error@@Base+0x764>
   11640:	mov	r0, r6
   11644:	add	r2, sp, #8
   11648:	add	r3, sp, #4
   1164c:	add	r1, pc, r1
   11650:	bl	108d8 <__isoc99_sscanf@plt>
   11654:	cmp	r0, #2
   11658:	bne	116bc <error@@Base+0x750>
   1165c:	mov	r0, r6
   11660:	bl	108c0 <strlen@plt>
   11664:	ldr	r9, [sp, #8]
   11668:	ldr	sl, [sp, #4]
   1166c:	add	r0, r0, r6
   11670:	mov	r1, #0
   11674:	strb	r1, [r0, #-1]
   11678:	mov	r0, r4
   1167c:	mov	r1, r7
   11680:	bl	12030 <error@@Base+0x10c4>
   11684:	mov	r8, r0
   11688:	cmp	r0, #0
   1168c:	bne	1160c <error@@Base+0x6a0>
   11690:	mov	r0, #1
   11694:	mov	r1, #20
   11698:	bl	10a9c <abort@plt+0x188>
   1169c:	mov	r8, r0
   116a0:	mov	r0, r7
   116a4:	bl	10848 <strdup@plt>
   116a8:	str	r0, [r8, #8]
   116ac:	mov	r0, r4
   116b0:	mov	r1, r8
   116b4:	bl	120c0 <error@@Base+0x1154>
   116b8:	b	1160c <error@@Base+0x6a0>
   116bc:	sub	sp, fp, #28
   116c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   116c4:	andeq	r1, r1, r9, ror #21
   116c8:	andeq	r1, r1, sp, asr #21
   116cc:			; <UNDEFINED> instruction: 0x00011ab1
   116d0:	andeq	r1, r0, r5, asr r1
   116d4:	nop	{0}
   116d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   116dc:	add	fp, sp, #24
   116e0:	sub	sp, sp, #8
   116e4:	mov	r2, r1
   116e8:	ldr	r1, [pc, #448]	; 118b0 <error@@Base+0x944>
   116ec:	mov	r5, r0
   116f0:	mov	r0, r2
   116f4:	add	r1, pc, r1
   116f8:	bl	10b44 <abort@plt+0x230>
   116fc:	ldr	r1, [pc, #432]	; 118b4 <error@@Base+0x948>
   11700:	ldr	r2, [pc, #432]	; 118b8 <error@@Base+0x94c>
   11704:	ldr	r3, [pc, #432]	; 118bc <error@@Base+0x950>
   11708:	mov	r4, r0
   1170c:	add	r1, pc, r1
   11710:	add	r2, pc, r2
   11714:	add	r3, pc, r3
   11718:	bl	108cc <fprintf@plt>
   1171c:	ldr	r2, [r5]
   11720:	ldr	r1, [pc, #408]	; 118c0 <error@@Base+0x954>
   11724:	mov	r0, r4
   11728:	add	r1, pc, r1
   1172c:	bl	108cc <fprintf@plt>
   11730:	ldr	r2, [r5, #4]
   11734:	ldr	r1, [pc, #392]	; 118c4 <error@@Base+0x958>
   11738:	mov	r0, r4
   1173c:	add	r1, pc, r1
   11740:	bl	108cc <fprintf@plt>
   11744:	ldr	r0, [r5]
   11748:	cmp	r0, #0
   1174c:	beq	1178c <error@@Base+0x820>
   11750:	ldr	r1, [r5, #4]
   11754:	vldr	d16, [pc, #332]	; 118a8 <error@@Base+0x93c>
   11758:	vmov	s2, r0
   1175c:	sub	r1, r0, r1
   11760:	mov	r0, r4
   11764:	vmov	s0, r1
   11768:	vcvt.f64.s32	d17, s0
   1176c:	vcvt.f64.s32	d18, s2
   11770:	ldr	r1, [pc, #340]	; 118cc <error@@Base+0x960>
   11774:	add	r1, pc, r1
   11778:	vmul.f64	d16, d17, d16
   1177c:	vdiv.f64	d16, d16, d18
   11780:	vmov	r2, r3, d16
   11784:	bl	108cc <fprintf@plt>
   11788:	b	117a4 <error@@Base+0x838>
   1178c:	ldr	r0, [pc, #308]	; 118c8 <error@@Base+0x95c>
   11790:	mov	r1, #8
   11794:	mov	r2, #1
   11798:	mov	r3, r4
   1179c:	add	r0, pc, r0
   117a0:	bl	1086c <fwrite@plt>
   117a4:	ldr	r0, [pc, #292]	; 118d0 <error@@Base+0x964>
   117a8:	mov	r1, #12
   117ac:	mov	r2, #1
   117b0:	mov	r3, r4
   117b4:	mov	r7, #1
   117b8:	add	r0, pc, r0
   117bc:	bl	1086c <fwrite@plt>
   117c0:	mov	r8, #0
   117c4:	str	r7, [sp, #4]
   117c8:	add	r1, r5, #8
   117cc:	mov	r0, r4
   117d0:	mov	r2, #50	; 0x32
   117d4:	str	r8, [sp]
   117d8:	ldr	r3, [pc, #244]	; 118d4 <error@@Base+0x968>
   117dc:	add	r3, pc, r3
   117e0:	bl	118f0 <error@@Base+0x984>
   117e4:	str	r8, [sp]
   117e8:	str	r7, [sp, #4]
   117ec:	add	r6, r5, #416	; 0x1a0
   117f0:	mov	r0, r4
   117f4:	mov	r2, #50	; 0x32
   117f8:	ldr	r3, [pc, #216]	; 118d8 <error@@Base+0x96c>
   117fc:	mov	r1, r6
   11800:	add	r3, pc, r3
   11804:	bl	118f0 <error@@Base+0x984>
   11808:	str	r7, [sp]
   1180c:	str	r7, [sp, #4]
   11810:	add	r1, r5, #824	; 0x338
   11814:	mov	r0, r4
   11818:	mov	r2, #10
   1181c:	ldr	r3, [pc, #184]	; 118dc <error@@Base+0x970>
   11820:	add	r3, pc, r3
   11824:	bl	118f0 <error@@Base+0x984>
   11828:	ldr	r0, [r5]
   1182c:	cmp	r0, #1
   11830:	blt	11898 <error@@Base+0x92c>
   11834:	str	r8, [sp]
   11838:	str	r8, [sp, #4]
   1183c:	add	r1, r5, #920	; 0x398
   11840:	mov	r0, r4
   11844:	mov	r2, #8
   11848:	ldr	r3, [pc, #144]	; 118e0 <error@@Base+0x974>
   1184c:	add	r3, pc, r3
   11850:	bl	118f0 <error@@Base+0x984>
   11854:	ldr	r0, [r5, #8]
   11858:	cmp	r0, #1
   1185c:	blt	11874 <error@@Base+0x908>
   11860:	ldr	r2, [pc, #124]	; 118e4 <error@@Base+0x978>
   11864:	add	r1, r5, #992	; 0x3e0
   11868:	mov	r0, r4
   1186c:	add	r2, pc, r2
   11870:	bl	11cb0 <error@@Base+0xd44>
   11874:	ldr	r0, [r6]
   11878:	cmp	r0, #1
   1187c:	blt	11898 <error@@Base+0x92c>
   11880:	ldr	r2, [pc, #96]	; 118e8 <error@@Base+0x97c>
   11884:	movw	r0, #9048	; 0x2358
   11888:	add	r1, r5, r0
   1188c:	mov	r0, r4
   11890:	add	r2, pc, r2
   11894:	bl	11cb0 <error@@Base+0xd44>
   11898:	mov	r0, r4
   1189c:	sub	sp, fp, #24
   118a0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   118a4:	b	10bcc <abort@plt+0x2b8>
   118a8:	andeq	r0, r0, r0
   118ac:	subsmi	r0, r9, r0
   118b0:	andeq	r1, r0, r4, asr #32
   118b4:	andeq	r1, r0, lr, lsr #32
   118b8:			; <UNDEFINED> instruction: 0x00000fb0
   118bc:	ldrdeq	r0, [r0], -ip
   118c0:	andeq	r1, r0, r7, lsl r0
   118c4:	andeq	r1, r0, r1, lsl r0
   118c8:	andeq	r1, r0, sp
   118cc:	andeq	r1, r0, lr, lsr r0
   118d0:	andeq	r0, r0, fp, lsr #31
   118d4:	muleq	r0, r4, pc	; <UNPREDICTABLE>
   118d8:	andeq	r0, r0, r3, lsl #31
   118dc:	andeq	r0, r0, sl, asr pc
   118e0:	andeq	r0, r0, r5, asr #30
   118e4:	andeq	r0, r0, r4, lsl #30
   118e8:	strdeq	r0, [r0], -r3
   118ec:	nop	{0}
   118f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   118f4:	add	fp, sp, #28
   118f8:	sub	sp, sp, #4
   118fc:	vpush	{d8}
   11900:	sub	sp, sp, #8
   11904:	mov	r5, r1
   11908:	ldr	r1, [pc, #832]	; 11c50 <error@@Base+0xce4>
   1190c:	mov	r8, r2
   11910:	mov	r2, r3
   11914:	mov	r4, r0
   11918:	add	r1, pc, r1
   1191c:	bl	108cc <fprintf@plt>
   11920:	ldr	r0, [pc, #812]	; 11c54 <error@@Base+0xce8>
   11924:	mov	r1, #26
   11928:	mov	r2, #1
   1192c:	mov	r3, r4
   11930:	mov	r7, #1
   11934:	add	r0, pc, r0
   11938:	bl	1086c <fwrite@plt>
   1193c:	ldr	r0, [pc, #788]	; 11c58 <error@@Base+0xcec>
   11940:	mov	r1, #3
   11944:	mov	r2, #1
   11948:	mov	r3, r4
   1194c:	add	r0, pc, r0
   11950:	bl	1086c <fwrite@plt>
   11954:	ldrb	r1, [fp, #8]
   11958:	ldr	r0, [pc, #764]	; 11c5c <error@@Base+0xcf0>
   1195c:	ldr	r2, [pc, #764]	; 11c60 <error@@Base+0xcf4>
   11960:	str	r1, [sp]
   11964:	cmp	r1, #0
   11968:	add	r0, pc, r0
   1196c:	add	r2, pc, r2
   11970:	ldr	r1, [pc, #748]	; 11c64 <error@@Base+0xcf8>
   11974:	movne	r2, r0
   11978:	mov	r0, r4
   1197c:	add	r1, pc, r1
   11980:	bl	108cc <fprintf@plt>
   11984:	ldr	r1, [fp, #12]
   11988:	lsl	r0, r8, #16
   1198c:	sxth	r6, r8
   11990:	cmp	r0, #65536	; 0x10000
   11994:	str	r1, [sp, #4]
   11998:	blt	11a84 <error@@Base+0xb18>
   1199c:	ldr	sl, [pc, #708]	; 11c68 <error@@Base+0xcfc>
   119a0:	vldr	d8, [pc, #672]	; 11c48 <error@@Base+0xcdc>
   119a4:	mov	r8, #1
   119a8:	add	sl, pc, sl
   119ac:	b	11a00 <error@@Base+0xa94>
   119b0:	ldr	r0, [pc, #704]	; 11c78 <error@@Base+0xd0c>
   119b4:	mov	r1, #26
   119b8:	add	r0, pc, r0
   119bc:	mov	r2, #1
   119c0:	mov	r3, r4
   119c4:	bl	1086c <fwrite@plt>
   119c8:	ldr	r0, [pc, #684]	; 11c7c <error@@Base+0xd10>
   119cc:	mov	r1, #3
   119d0:	mov	r2, #1
   119d4:	mov	r3, r4
   119d8:	add	r0, pc, r0
   119dc:	bl	1086c <fwrite@plt>
   119e0:	mov	r0, r4
   119e4:	mov	r1, sl
   119e8:	mov	r2, r7
   119ec:	bl	108cc <fprintf@plt>
   119f0:	add	r8, r8, #1
   119f4:	sxth	r7, r8
   119f8:	cmp	r6, r7
   119fc:	blt	11a84 <error@@Base+0xb18>
   11a00:	mov	r0, r5
   11a04:	ldr	r2, [r0, r7, lsl #3]!
   11a08:	cmp	r2, #1
   11a0c:	blt	119f0 <error@@Base+0xa84>
   11a10:	cmp	r0, #0
   11a14:	beq	119b0 <error@@Base+0xa44>
   11a18:	add	r9, r5, r7, lsl #3
   11a1c:	mov	r0, r4
   11a20:	ldr	r3, [r9, #4]!
   11a24:	ldr	r1, [pc, #576]	; 11c6c <error@@Base+0xd00>
   11a28:	add	r1, pc, r1
   11a2c:	bl	108cc <fprintf@plt>
   11a30:	ldr	r0, [r5, r7, lsl #3]
   11a34:	cmp	r0, #0
   11a38:	beq	11a74 <error@@Base+0xb08>
   11a3c:	ldr	r1, [r9]
   11a40:	vmov	s2, r0
   11a44:	sub	r1, r0, r1
   11a48:	mov	r0, r4
   11a4c:	vmov	s0, r1
   11a50:	vcvt.f64.s32	d16, s0
   11a54:	vcvt.f64.s32	d17, s2
   11a58:	ldr	r1, [pc, #532]	; 11c74 <error@@Base+0xd08>
   11a5c:	add	r1, pc, r1
   11a60:	vmul.f64	d16, d16, d8
   11a64:	vdiv.f64	d16, d16, d17
   11a68:	vmov	r2, r3, d16
   11a6c:	bl	108cc <fprintf@plt>
   11a70:	b	119c8 <error@@Base+0xa5c>
   11a74:	ldr	r0, [pc, #500]	; 11c70 <error@@Base+0xd04>
   11a78:	mov	r1, #8
   11a7c:	add	r0, pc, r0
   11a80:	b	119bc <error@@Base+0xa50>
   11a84:	ldr	r0, [sp]
   11a88:	cmp	r0, #0
   11a8c:	beq	11b60 <error@@Base+0xbf4>
   11a90:	add	r7, r6, #1
   11a94:	mov	r0, r5
   11a98:	ldr	r2, [r0, r7, lsl #3]!
   11a9c:	cmp	r2, #1
   11aa0:	blt	11b60 <error@@Base+0xbf4>
   11aa4:	cmp	r0, #0
   11aa8:	beq	11b0c <error@@Base+0xba0>
   11aac:	add	r8, r5, r7, lsl #3
   11ab0:	mov	r0, r4
   11ab4:	ldr	r3, [r8, #4]!
   11ab8:	ldr	r1, [pc, #448]	; 11c80 <error@@Base+0xd14>
   11abc:	add	r1, pc, r1
   11ac0:	bl	108cc <fprintf@plt>
   11ac4:	ldr	r0, [r5, r7, lsl #3]
   11ac8:	cmp	r0, #0
   11acc:	beq	11b1c <error@@Base+0xbb0>
   11ad0:	ldr	r1, [r8]
   11ad4:	vldr	d16, [pc, #364]	; 11c48 <error@@Base+0xcdc>
   11ad8:	vmov	s2, r0
   11adc:	sub	r1, r0, r1
   11ae0:	mov	r0, r4
   11ae4:	vmov	s0, r1
   11ae8:	vcvt.f64.s32	d17, s0
   11aec:	vcvt.f64.s32	d18, s2
   11af0:	ldr	r1, [pc, #400]	; 11c88 <error@@Base+0xd1c>
   11af4:	add	r1, pc, r1
   11af8:	vmul.f64	d16, d17, d16
   11afc:	vdiv.f64	d16, d16, d18
   11b00:	vmov	r2, r3, d16
   11b04:	bl	108cc <fprintf@plt>
   11b08:	b	11b34 <error@@Base+0xbc8>
   11b0c:	ldr	r0, [pc, #376]	; 11c8c <error@@Base+0xd20>
   11b10:	mov	r1, #26
   11b14:	add	r0, pc, r0
   11b18:	b	11b28 <error@@Base+0xbbc>
   11b1c:	ldr	r0, [pc, #352]	; 11c84 <error@@Base+0xd18>
   11b20:	mov	r1, #8
   11b24:	add	r0, pc, r0
   11b28:	mov	r2, #1
   11b2c:	mov	r3, r4
   11b30:	bl	1086c <fwrite@plt>
   11b34:	ldr	r0, [pc, #340]	; 11c90 <error@@Base+0xd24>
   11b38:	mov	r1, #3
   11b3c:	mov	r2, #1
   11b40:	mov	r3, r4
   11b44:	add	r0, pc, r0
   11b48:	bl	1086c <fwrite@plt>
   11b4c:	ldr	r1, [pc, #320]	; 11c94 <error@@Base+0xd28>
   11b50:	mov	r0, r4
   11b54:	mov	r2, r6
   11b58:	add	r1, pc, r1
   11b5c:	bl	108cc <fprintf@plt>
   11b60:	ldr	r0, [sp, #4]
   11b64:	tst	r0, #255	; 0xff
   11b68:	beq	11bd0 <error@@Base+0xc64>
   11b6c:	cmp	r5, #0
   11b70:	beq	11be0 <error@@Base+0xc74>
   11b74:	ldm	r5, {r2, r3}
   11b78:	ldr	r1, [pc, #280]	; 11c98 <error@@Base+0xd2c>
   11b7c:	mov	r0, r4
   11b80:	add	r1, pc, r1
   11b84:	bl	108cc <fprintf@plt>
   11b88:	ldr	r0, [r5]
   11b8c:	cmp	r0, #0
   11b90:	beq	11bf0 <error@@Base+0xc84>
   11b94:	ldr	r1, [r5, #4]
   11b98:	vldr	d16, [pc, #168]	; 11c48 <error@@Base+0xcdc>
   11b9c:	vmov	s2, r0
   11ba0:	sub	r1, r0, r1
   11ba4:	mov	r0, r4
   11ba8:	vmov	s0, r1
   11bac:	vcvt.f64.s32	d17, s0
   11bb0:	vcvt.f64.s32	d18, s2
   11bb4:	ldr	r1, [pc, #228]	; 11ca0 <error@@Base+0xd34>
   11bb8:	add	r1, pc, r1
   11bbc:	vmul.f64	d16, d17, d16
   11bc0:	vdiv.f64	d16, d16, d18
   11bc4:	vmov	r2, r3, d16
   11bc8:	bl	108cc <fprintf@plt>
   11bcc:	b	11c08 <error@@Base+0xc9c>
   11bd0:	sub	sp, fp, #40	; 0x28
   11bd4:	vpop	{d8}
   11bd8:	add	sp, sp, #4
   11bdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11be0:	ldr	r0, [pc, #188]	; 11ca4 <error@@Base+0xd38>
   11be4:	mov	r1, #26
   11be8:	add	r0, pc, r0
   11bec:	b	11bfc <error@@Base+0xc90>
   11bf0:	ldr	r0, [pc, #164]	; 11c9c <error@@Base+0xd30>
   11bf4:	mov	r1, #8
   11bf8:	add	r0, pc, r0
   11bfc:	mov	r2, #1
   11c00:	mov	r3, r4
   11c04:	bl	1086c <fwrite@plt>
   11c08:	ldr	r0, [pc, #152]	; 11ca8 <error@@Base+0xd3c>
   11c0c:	mov	r1, #3
   11c10:	mov	r2, #1
   11c14:	mov	r3, r4
   11c18:	add	r0, pc, r0
   11c1c:	bl	1086c <fwrite@plt>
   11c20:	ldr	r0, [pc, #132]	; 11cac <error@@Base+0xd40>
   11c24:	mov	r1, #7
   11c28:	mov	r2, #1
   11c2c:	mov	r3, r4
   11c30:	add	r0, pc, r0
   11c34:	sub	sp, fp, #40	; 0x28
   11c38:	vpop	{d8}
   11c3c:	add	sp, sp, #4
   11c40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c44:	b	1086c <fwrite@plt>
   11c48:	andeq	r0, r0, r0
   11c4c:	subsmi	r0, r9, r0
   11c50:	andeq	r0, r0, r0, lsr #29
   11c54:			; <UNDEFINED> instruction: 0x00000eb4
   11c58:			; <UNDEFINED> instruction: 0x00000eb7
   11c5c:	andeq	r0, r0, r5, asr lr
   11c60:	andeq	r0, r0, r8, asr lr
   11c64:	andeq	r0, r0, sp, lsr lr
   11c68:	andeq	r0, r0, r3, lsr #28
   11c6c:			; <UNDEFINED> instruction: 0x00000db5
   11c70:	andeq	r0, r0, sp, lsr #26
   11c74:	andeq	r0, r0, r6, asr sp
   11c78:	andeq	r0, r0, r0, lsr lr
   11c7c:	andeq	r0, r0, fp, lsr #28
   11c80:	andeq	r0, r0, r1, lsr #26
   11c84:	andeq	r0, r0, r5, lsl #25
   11c88:			; <UNDEFINED> instruction: 0x00000cbe
   11c8c:	ldrdeq	r0, [r0], -r4
   11c90:			; <UNDEFINED> instruction: 0x00000cbf
   11c94:	andeq	r0, r0, ip, ror ip
   11c98:	andeq	r0, r0, sp, asr ip
   11c9c:			; <UNDEFINED> instruction: 0x00000bb1
   11ca0:	strdeq	r0, [r0], -sl
   11ca4:	andeq	r0, r0, r0, lsl #24
   11ca8:	andeq	r0, r0, fp, ror #23
   11cac:	andeq	r0, r0, r9, ror #22
   11cb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11cb4:	add	fp, sp, #28
   11cb8:	sub	sp, sp, #4
   11cbc:	vpush	{d8}
   11cc0:	mov	r5, r0
   11cc4:	mov	r0, r1
   11cc8:	mov	r6, r2
   11ccc:	mov	r4, r1
   11cd0:	bl	121d0 <error@@Base+0x1264>
   11cd4:	movw	r0, #8048	; 0x1f70
   11cd8:	ldr	r1, [r4, r0]!
   11cdc:	ldr	r0, [r4, #4]
   11ce0:	ldr	r2, [pc, #336]	; 11e38 <error@@Base+0xecc>
   11ce4:	add	r2, pc, r2
   11ce8:	bl	11e68 <error@@Base+0xefc>
   11cec:	ldr	r1, [pc, #328]	; 11e3c <error@@Base+0xed0>
   11cf0:	mov	r0, r5
   11cf4:	mov	r2, r6
   11cf8:	add	r1, pc, r1
   11cfc:	bl	108cc <fprintf@plt>
   11d00:	ldr	r0, [pc, #312]	; 11e40 <error@@Base+0xed4>
   11d04:	mov	r1, #26
   11d08:	mov	r2, #1
   11d0c:	mov	r3, r5
   11d10:	add	r0, pc, r0
   11d14:	bl	1086c <fwrite@plt>
   11d18:	ldr	r0, [pc, #292]	; 11e44 <error@@Base+0xed8>
   11d1c:	mov	r1, #3
   11d20:	mov	r2, #1
   11d24:	mov	r3, r5
   11d28:	add	r0, pc, r0
   11d2c:	bl	1086c <fwrite@plt>
   11d30:	mov	r0, #10
   11d34:	mov	r1, r5
   11d38:	bl	108f0 <fputc@plt>
   11d3c:	ldr	r0, [r4, #4]
   11d40:	cmp	r0, #1
   11d44:	blt	11e20 <error@@Base+0xeb4>
   11d48:	ldr	r9, [pc, #248]	; 11e48 <error@@Base+0xedc>
   11d4c:	ldr	r7, [pc, #248]	; 11e4c <error@@Base+0xee0>
   11d50:	ldr	r6, [pc, #248]	; 11e50 <error@@Base+0xee4>
   11d54:	vldr	d8, [pc, #212]	; 11e30 <error@@Base+0xec4>
   11d58:	mov	r8, #0
   11d5c:	add	r9, pc, r9
   11d60:	add	r7, pc, r7
   11d64:	add	r6, pc, r6
   11d68:	b	11ddc <error@@Base+0xe70>
   11d6c:	ldr	r1, [sl, #16]
   11d70:	vmov	s2, r0
   11d74:	sub	r1, r0, r1
   11d78:	mov	r0, r5
   11d7c:	vmov	s0, r1
   11d80:	vcvt.f64.s32	d16, s0
   11d84:	vcvt.f64.s32	d17, s2
   11d88:	ldr	r1, [pc, #200]	; 11e58 <error@@Base+0xeec>
   11d8c:	add	r1, pc, r1
   11d90:	vmul.f64	d16, d16, d8
   11d94:	vdiv.f64	d16, d16, d17
   11d98:	vmov	r2, r3, d16
   11d9c:	bl	108cc <fprintf@plt>
   11da0:	mov	r0, r7
   11da4:	mov	r1, #3
   11da8:	mov	r2, #1
   11dac:	mov	r3, r5
   11db0:	bl	1086c <fwrite@plt>
   11db4:	ldr	r0, [r4]
   11db8:	mov	r1, r6
   11dbc:	ldr	r0, [r0, r8, lsl #2]
   11dc0:	ldr	r2, [r0, #8]
   11dc4:	mov	r0, r5
   11dc8:	bl	108cc <fprintf@plt>
   11dcc:	ldr	r0, [r4, #4]
   11dd0:	add	r8, r8, #1
   11dd4:	cmp	r8, r0
   11dd8:	bge	11e20 <error@@Base+0xeb4>
   11ddc:	ldr	r0, [r4]
   11de0:	mov	r1, r9
   11de4:	ldr	sl, [r0, r8, lsl #2]
   11de8:	mov	r0, r5
   11dec:	ldr	r2, [sl, #12]
   11df0:	ldr	r3, [sl, #16]
   11df4:	bl	108cc <fprintf@plt>
   11df8:	ldr	r0, [sl, #12]
   11dfc:	cmp	r0, #0
   11e00:	bne	11d6c <error@@Base+0xe00>
   11e04:	ldr	r0, [pc, #72]	; 11e54 <error@@Base+0xee8>
   11e08:	mov	r1, #8
   11e0c:	mov	r2, #1
   11e10:	mov	r3, r5
   11e14:	add	r0, pc, r0
   11e18:	bl	1086c <fwrite@plt>
   11e1c:	b	11da0 <error@@Base+0xe34>
   11e20:	vpop	{d8}
   11e24:	add	sp, sp, #4
   11e28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e2c:	nop	{0}
   11e30:	andeq	r0, r0, r0
   11e34:	subsmi	r0, r9, r0
   11e38:	andeq	r0, r0, r0, ror r1
   11e3c:	andeq	r0, r0, r0, asr #21
   11e40:	ldrdeq	r0, [r0], -r8
   11e44:	ldrdeq	r0, [r0], -fp
   11e48:	andeq	r0, r0, r1, lsl #21
   11e4c:	andeq	r0, r0, r3, lsr #21
   11e50:	andeq	r0, r0, r5, asr sl
   11e54:	muleq	r0, r5, r9
   11e58:	andeq	r0, r0, r6, lsr #20
   11e5c:	ldr	r1, [r1, #8]
   11e60:	ldr	r0, [r0, #8]
   11e64:	b	10ac0 <abort@plt+0x1ac>
   11e68:	cmp	r0, #2
   11e6c:	bxlt	lr
   11e70:	ldr	r3, [pc, #28]	; 11e94 <error@@Base+0xf28>
   11e74:	add	r3, pc, r3
   11e78:	str	r2, [r3]
   11e7c:	ldr	r2, [pc, #20]	; 11e98 <error@@Base+0xf2c>
   11e80:	add	r2, pc, r2
   11e84:	str	r1, [r2]
   11e88:	sub	r1, r0, #1
   11e8c:	mov	r0, #0
   11e90:	b	11e9c <error@@Base+0xf30>
   11e94:	muleq	r1, r8, r2
   11e98:	andeq	r1, r1, r8, lsl #5
   11e9c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11ea0:	add	fp, sp, #24
   11ea4:	mov	r8, r1
   11ea8:	mov	r5, r0
   11eac:	b	11edc <error@@Base+0xf70>
   11eb0:	mov	r7, r4
   11eb4:	ldr	r0, [pc, #308]	; 11ff0 <error@@Base+0x1084>
   11eb8:	ldr	r0, [pc, r0]
   11ebc:	sub	r1, r4, #1
   11ec0:	str	r6, [r0, r4, lsl #2]
   11ec4:	cmp	r1, r5
   11ec8:	movgt	r0, r5
   11ecc:	blgt	11e9c <error@@Base+0xf30>
   11ed0:	add	r5, r7, #1
   11ed4:	cmp	r5, r8
   11ed8:	bge	11fd0 <error@@Base+0x1064>
   11edc:	ldr	r0, [pc, #240]	; 11fd4 <error@@Base+0x1068>
   11ee0:	cmp	r5, r8
   11ee4:	mov	r4, r8
   11ee8:	mov	r7, r5
   11eec:	ldr	r0, [pc, r0]
   11ef0:	ldr	r6, [r0, r5, lsl #2]
   11ef4:	bge	11ebc <error@@Base+0xf50>
   11ef8:	mov	r7, r5
   11efc:	mov	r4, r8
   11f00:	cmp	r7, r4
   11f04:	blt	11f1c <error@@Base+0xfb0>
   11f08:	b	11f4c <error@@Base+0xfe0>
   11f0c:	cmp	r7, r4
   11f10:	bge	11eb4 <error@@Base+0xf48>
   11f14:	cmp	r7, r4
   11f18:	bge	11f4c <error@@Base+0xfe0>
   11f1c:	ldr	r0, [pc, #180]	; 11fd8 <error@@Base+0x106c>
   11f20:	ldr	r0, [pc, r0]
   11f24:	ldr	r1, [r0, r4, lsl #2]
   11f28:	ldr	r2, [pc, #172]	; 11fdc <error@@Base+0x1070>
   11f2c:	mov	r0, r6
   11f30:	ldr	r2, [pc, r2]
   11f34:	blx	r2
   11f38:	cmn	r0, #1
   11f3c:	bgt	11f4c <error@@Base+0xfe0>
   11f40:	sub	r4, r4, #1
   11f44:	cmp	r7, r4
   11f48:	blt	11f1c <error@@Base+0xfb0>
   11f4c:	cmp	r7, r4
   11f50:	bne	11f60 <error@@Base+0xff4>
   11f54:	cmp	r7, r4
   11f58:	blt	11f7c <error@@Base+0x1010>
   11f5c:	b	11fb0 <error@@Base+0x1044>
   11f60:	ldr	r0, [pc, #120]	; 11fe0 <error@@Base+0x1074>
   11f64:	ldr	r0, [pc, r0]
   11f68:	ldr	r1, [r0, r4, lsl #2]
   11f6c:	str	r1, [r0, r7, lsl #2]
   11f70:	add	r7, r7, #1
   11f74:	cmp	r7, r4
   11f78:	bge	11fb0 <error@@Base+0x1044>
   11f7c:	ldr	r0, [pc, #96]	; 11fe4 <error@@Base+0x1078>
   11f80:	ldr	r0, [pc, r0]
   11f84:	ldr	r1, [r0, r7, lsl #2]
   11f88:	ldr	r2, [pc, #88]	; 11fe8 <error@@Base+0x107c>
   11f8c:	mov	r0, r6
   11f90:	ldr	r2, [pc, r2]
   11f94:	blx	r2
   11f98:	cmp	r0, #1
   11f9c:	blt	11fb0 <error@@Base+0x1044>
   11fa0:	add	r7, r7, #1
   11fa4:	cmp	r4, r7
   11fa8:	bne	11f7c <error@@Base+0x1010>
   11fac:	b	11eb0 <error@@Base+0xf44>
   11fb0:	cmp	r7, r4
   11fb4:	beq	11f0c <error@@Base+0xfa0>
   11fb8:	ldr	r0, [pc, #44]	; 11fec <error@@Base+0x1080>
   11fbc:	ldr	r0, [pc, r0]
   11fc0:	ldr	r1, [r0, r7, lsl #2]
   11fc4:	str	r1, [r0, r4, lsl #2]
   11fc8:	sub	r4, r4, #1
   11fcc:	b	11f0c <error@@Base+0xfa0>
   11fd0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11fd4:	andeq	r1, r1, ip, lsl r2
   11fd8:	andeq	r1, r1, r8, ror #3
   11fdc:	ldrdeq	r1, [r1], -ip
   11fe0:	andeq	r1, r1, r4, lsr #3
   11fe4:	andeq	r1, r1, r8, lsl #3
   11fe8:	andeq	r1, r1, ip, ror r1
   11fec:	andeq	r1, r1, ip, asr #2
   11ff0:	andeq	r1, r1, r0, asr r2
   11ff4:	push	{r4, r5, r6, sl, fp, lr}
   11ff8:	add	fp, sp, #16
   11ffc:	mov	r4, r0
   12000:	movw	r0, #8048	; 0x1f70
   12004:	movw	r6, #503	; 0x1f7
   12008:	add	r5, r4, r0
   1200c:	mov	r0, r4
   12010:	bl	122a8 <error@@Base+0x133c>
   12014:	subs	r6, r6, #1
   12018:	add	r4, r4, #16
   1201c:	bne	1200c <error@@Base+0x10a0>
   12020:	mov	r0, #0
   12024:	str	r0, [r5]
   12028:	str	r0, [r5, #4]
   1202c:	pop	{r4, r5, r6, sl, fp, pc}
   12030:	push	{r4, r5, r6, sl, fp, lr}
   12034:	add	fp, sp, #16
   12038:	mov	r5, r1
   1203c:	ldrb	r1, [r1]
   12040:	mov	r4, #0
   12044:	mov	r2, #0
   12048:	cmp	r1, #0
   1204c:	beq	12080 <error@@Base+0x1114>
   12050:	add	r3, r5, #1
   12054:	mov	r2, #0
   12058:	uxtab	r2, r2, r1
   1205c:	ldrb	r1, [r3], #1
   12060:	cmp	r1, #0
   12064:	bne	12058 <error@@Base+0x10ec>
   12068:	movw	r1, #20065	; 0x4e61
   1206c:	movt	r1, #33354	; 0x824a
   12070:	umull	r1, r3, r2, r1
   12074:	lsr	r1, r3, #8
   12078:	movw	r3, #503	; 0x1f7
   1207c:	mls	r2, r1, r3, r2
   12080:	ldr	r6, [r0, r2, lsl #4]
   12084:	cmp	r6, #0
   12088:	beq	120ac <error@@Base+0x1140>
   1208c:	ldr	r1, [r6, #8]
   12090:	mov	r0, r5
   12094:	bl	1080c <strcmp@plt>
   12098:	cmp	r0, #0
   1209c:	beq	120b4 <error@@Base+0x1148>
   120a0:	ldr	r6, [r6, #4]
   120a4:	cmp	r6, #0
   120a8:	bne	1208c <error@@Base+0x1120>
   120ac:	mov	r0, r4
   120b0:	pop	{r4, r5, r6, sl, fp, pc}
   120b4:	mov	r4, r6
   120b8:	mov	r0, r4
   120bc:	pop	{r4, r5, r6, sl, fp, pc}
   120c0:	push	{r4, r5, fp, lr}
   120c4:	add	fp, sp, #8
   120c8:	movw	r2, #8048	; 0x1f70
   120cc:	add	r5, r0, r2
   120d0:	ldr	r2, [r1, #8]
   120d4:	ldrb	r3, [r2]
   120d8:	cmp	r3, #0
   120dc:	beq	12114 <error@@Base+0x11a8>
   120e0:	add	r4, r2, #1
   120e4:	mov	r2, #0
   120e8:	uxtab	r2, r2, r3
   120ec:	ldrb	r3, [r4], #1
   120f0:	cmp	r3, #0
   120f4:	bne	120e8 <error@@Base+0x117c>
   120f8:	movw	r3, #20065	; 0x4e61
   120fc:	movt	r3, #33354	; 0x824a
   12100:	umull	r3, r4, r2, r3
   12104:	lsr	r3, r4, #8
   12108:	movw	r4, #503	; 0x1f7
   1210c:	mls	r2, r3, r4, r2
   12110:	b	12118 <error@@Base+0x11ac>
   12114:	mov	r2, #0
   12118:	add	r0, r0, r2, lsl #4
   1211c:	bl	122b4 <error@@Base+0x1348>
   12120:	ldr	r0, [r5]
   12124:	cmp	r0, #0
   12128:	beq	12138 <error@@Base+0x11cc>
   1212c:	bl	10830 <free@plt>
   12130:	mov	r0, #0
   12134:	str	r0, [r5]
   12138:	ldr	r0, [r5, #4]
   1213c:	add	r0, r0, #1
   12140:	str	r0, [r5, #4]
   12144:	pop	{r4, r5, fp, pc}
   12148:	push	{r4, r5, fp, lr}
   1214c:	add	fp, sp, #8
   12150:	movw	r2, #8048	; 0x1f70
   12154:	add	r5, r0, r2
   12158:	ldr	r2, [r1, #8]
   1215c:	ldrb	r3, [r2]
   12160:	cmp	r3, #0
   12164:	beq	1219c <error@@Base+0x1230>
   12168:	add	r4, r2, #1
   1216c:	mov	r2, #0
   12170:	uxtab	r2, r2, r3
   12174:	ldrb	r3, [r4], #1
   12178:	cmp	r3, #0
   1217c:	bne	12170 <error@@Base+0x1204>
   12180:	movw	r3, #20065	; 0x4e61
   12184:	movt	r3, #33354	; 0x824a
   12188:	umull	r3, r4, r2, r3
   1218c:	lsr	r3, r4, #8
   12190:	movw	r4, #503	; 0x1f7
   12194:	mls	r2, r3, r4, r2
   12198:	b	121a0 <error@@Base+0x1234>
   1219c:	mov	r2, #0
   121a0:	add	r0, r0, r2, lsl #4
   121a4:	bl	123fc <error@@Base+0x1490>
   121a8:	ldr	r0, [r5]
   121ac:	cmp	r0, #0
   121b0:	beq	121c0 <error@@Base+0x1254>
   121b4:	bl	10830 <free@plt>
   121b8:	mov	r0, #0
   121bc:	str	r0, [r5]
   121c0:	ldr	r0, [r5, #4]
   121c4:	sub	r0, r0, #1
   121c8:	str	r0, [r5, #4]
   121cc:	pop	{r4, r5, fp, pc}
   121d0:	push	{r4, r5, fp, lr}
   121d4:	add	fp, sp, #8
   121d8:	mov	r4, r0
   121dc:	movw	r0, #8048	; 0x1f70
   121e0:	mov	r5, r4
   121e4:	ldr	r0, [r5, r0]!
   121e8:	cmp	r0, #0
   121ec:	bne	1224c <error@@Base+0x12e0>
   121f0:	ldr	r0, [r5, #4]
   121f4:	cmp	r0, #0
   121f8:	popeq	{r4, r5, fp, pc}
   121fc:	mov	r1, #4
   12200:	bl	10a9c <abort@plt+0x188>
   12204:	str	r0, [r5]
   12208:	mov	r0, #0
   1220c:	movw	ip, #503	; 0x1f7
   12210:	mov	r2, #0
   12214:	b	12224 <error@@Base+0x12b8>
   12218:	add	r2, r2, #1
   1221c:	cmp	r2, ip
   12220:	beq	1224c <error@@Base+0x12e0>
   12224:	ldr	r3, [r4, r2, lsl #4]
   12228:	cmp	r3, #0
   1222c:	beq	12218 <error@@Base+0x12ac>
   12230:	ldr	r1, [r5]
   12234:	str	r3, [r1, r0, lsl #2]
   12238:	add	r0, r0, #1
   1223c:	ldr	r3, [r3, #4]
   12240:	cmp	r3, #0
   12244:	bne	12230 <error@@Base+0x12c4>
   12248:	b	12218 <error@@Base+0x12ac>
   1224c:	pop	{r4, r5, fp, pc}
   12250:	push	{r4, r5, r6, r7, fp, lr}
   12254:	add	fp, sp, #16
   12258:	mov	r5, r0
   1225c:	movw	r0, #8048	; 0x1f70
   12260:	mov	r4, r1
   12264:	movw	r7, #503	; 0x1f7
   12268:	add	r6, r5, r0
   1226c:	mov	r0, r5
   12270:	mov	r1, r4
   12274:	bl	124d0 <error@@Base+0x1564>
   12278:	subs	r7, r7, #1
   1227c:	add	r5, r5, #16
   12280:	bne	1226c <error@@Base+0x1300>
   12284:	ldr	r0, [r6]
   12288:	cmp	r0, #0
   1228c:	beq	1229c <error@@Base+0x1330>
   12290:	bl	10830 <free@plt>
   12294:	mov	r0, #0
   12298:	str	r0, [r6]
   1229c:	mov	r0, #0
   122a0:	str	r0, [r6, #4]
   122a4:	pop	{r4, r5, r6, r7, fp, pc}
   122a8:	vmov.i32	q8, #0	; 0x00000000
   122ac:	vst1.32	{d16-d17}, [r0]
   122b0:	bx	lr
   122b4:	push	{r4, r5, fp, lr}
   122b8:	add	fp, sp, #8
   122bc:	mov	r4, r0
   122c0:	ldr	r0, [r0]
   122c4:	mov	r5, #0
   122c8:	str	r5, [r1]
   122cc:	cmp	r0, #0
   122d0:	str	r0, [r1, #4]
   122d4:	str	r1, [r4]
   122d8:	addeq	r0, r4, #4
   122dc:	str	r1, [r0]
   122e0:	ldr	r0, [r4, #8]
   122e4:	cmp	r0, #0
   122e8:	beq	122f4 <error@@Base+0x1388>
   122ec:	bl	10830 <free@plt>
   122f0:	str	r5, [r4, #8]
   122f4:	ldr	r0, [r4, #12]
   122f8:	add	r0, r0, #1
   122fc:	str	r0, [r4, #12]
   12300:	pop	{r4, r5, fp, pc}
   12304:	push	{r4, r5, fp, lr}
   12308:	add	fp, sp, #8
   1230c:	mov	r4, r0
   12310:	ldr	r0, [r0, #4]
   12314:	mov	r5, #0
   12318:	mov	r2, r4
   1231c:	cmp	r0, #0
   12320:	stm	r1, {r0, r5}
   12324:	addne	r2, r0, #4
   12328:	str	r1, [r2]
   1232c:	str	r1, [r4, #4]
   12330:	ldr	r0, [r4, #8]
   12334:	cmp	r0, #0
   12338:	beq	12344 <error@@Base+0x13d8>
   1233c:	bl	10830 <free@plt>
   12340:	str	r5, [r4, #8]
   12344:	ldr	r0, [r4, #12]
   12348:	add	r0, r0, #1
   1234c:	str	r0, [r4, #12]
   12350:	pop	{r4, r5, fp, pc}
   12354:	push	{r4, sl, fp, lr}
   12358:	add	fp, sp, #8
   1235c:	mov	r4, r0
   12360:	ldr	r0, [r2]
   12364:	mov	r3, r4
   12368:	cmp	r0, #0
   1236c:	stm	r1, {r0, r2}
   12370:	addne	r3, r0, #4
   12374:	str	r1, [r3]
   12378:	str	r1, [r2]
   1237c:	ldr	r0, [r4, #8]
   12380:	cmp	r0, #0
   12384:	beq	12394 <error@@Base+0x1428>
   12388:	bl	10830 <free@plt>
   1238c:	mov	r0, #0
   12390:	str	r0, [r4, #8]
   12394:	ldr	r0, [r4, #12]
   12398:	add	r0, r0, #1
   1239c:	str	r0, [r4, #12]
   123a0:	pop	{r4, sl, fp, pc}
   123a4:	push	{r4, sl, fp, lr}
   123a8:	add	fp, sp, #8
   123ac:	mov	r4, r0
   123b0:	mov	r0, r1
   123b4:	cmp	r1, #0
   123b8:	ldr	r3, [r0, #4]!
   123bc:	moveq	r0, r4
   123c0:	stm	r2, {r1, r3}
   123c4:	str	r2, [r0]
   123c8:	cmp	r3, #0
   123cc:	addeq	r3, r4, #4
   123d0:	str	r2, [r3]
   123d4:	ldr	r0, [r4, #8]
   123d8:	cmp	r0, #0
   123dc:	beq	123ec <error@@Base+0x1480>
   123e0:	bl	10830 <free@plt>
   123e4:	mov	r0, #0
   123e8:	str	r0, [r4, #8]
   123ec:	ldr	r0, [r4, #12]
   123f0:	add	r0, r0, #1
   123f4:	str	r0, [r4, #12]
   123f8:	pop	{r4, sl, fp, pc}
   123fc:	push	{r4, r5, fp, lr}
   12400:	add	fp, sp, #8
   12404:	mov	r4, r0
   12408:	ldm	r1, {r0, r2}
   1240c:	cmp	r0, #0
   12410:	beq	12420 <error@@Base+0x14b4>
   12414:	str	r2, [r0, #4]
   12418:	ldr	r2, [r1, #4]
   1241c:	b	12424 <error@@Base+0x14b8>
   12420:	str	r2, [r4]
   12424:	cmp	r2, #0
   12428:	mov	r5, #0
   1242c:	addeq	r2, r4, #4
   12430:	str	r0, [r2]
   12434:	str	r5, [r1]
   12438:	str	r5, [r1, #4]
   1243c:	ldr	r0, [r4, #8]
   12440:	cmp	r0, #0
   12444:	beq	12450 <error@@Base+0x14e4>
   12448:	bl	10830 <free@plt>
   1244c:	str	r5, [r4, #8]
   12450:	ldr	r0, [r4, #12]
   12454:	sub	r0, r0, #1
   12458:	str	r0, [r4, #12]
   1245c:	pop	{r4, r5, fp, pc}
   12460:	push	{r4, sl, fp, lr}
   12464:	add	fp, sp, #8
   12468:	mov	r4, r0
   1246c:	ldr	r0, [r0, #8]
   12470:	cmp	r0, #0
   12474:	beq	1247c <error@@Base+0x1510>
   12478:	pop	{r4, sl, fp, pc}
   1247c:	ldr	r0, [r4, #12]
   12480:	cmp	r0, #0
   12484:	beq	12478 <error@@Base+0x150c>
   12488:	mov	r1, #4
   1248c:	bl	10a9c <abort@plt+0x188>
   12490:	str	r0, [r4, #8]
   12494:	ldr	r1, [r4]
   12498:	cmp	r1, #0
   1249c:	beq	12478 <error@@Base+0x150c>
   124a0:	str	r1, [r0]
   124a4:	ldr	r0, [r1, #4]
   124a8:	cmp	r0, #0
   124ac:	popeq	{r4, sl, fp, pc}
   124b0:	mov	r1, #4
   124b4:	ldr	r2, [r4, #8]
   124b8:	str	r0, [r2, r1]
   124bc:	add	r1, r1, #4
   124c0:	ldr	r0, [r0, #4]
   124c4:	cmp	r0, #0
   124c8:	bne	124b4 <error@@Base+0x1548>
   124cc:	b	12478 <error@@Base+0x150c>
   124d0:	push	{r4, r5, r6, r7, fp, lr}
   124d4:	add	fp, sp, #16
   124d8:	ldr	r6, [r0]
   124dc:	cmp	r6, #0
   124e0:	beq	1255c <error@@Base+0x15f0>
   124e4:	mov	r4, r1
   124e8:	mov	r5, r0
   124ec:	mov	r7, #0
   124f0:	b	12514 <error@@Base+0x15a8>
   124f4:	ldr	r0, [r5, #12]
   124f8:	sub	r0, r0, #1
   124fc:	str	r0, [r5, #12]
   12500:	mov	r0, r6
   12504:	blx	r4
   12508:	ldr	r6, [r5]
   1250c:	cmp	r6, #0
   12510:	beq	1255c <error@@Base+0x15f0>
   12514:	ldm	r6, {r0, r1}
   12518:	cmp	r0, #0
   1251c:	beq	1252c <error@@Base+0x15c0>
   12520:	str	r1, [r0, #4]
   12524:	ldr	r1, [r6, #4]
   12528:	b	12530 <error@@Base+0x15c4>
   1252c:	str	r1, [r5]
   12530:	cmp	r1, #0
   12534:	addeq	r1, r5, #4
   12538:	str	r0, [r1]
   1253c:	str	r7, [r6]
   12540:	str	r7, [r6, #4]
   12544:	ldr	r0, [r5, #8]
   12548:	cmp	r0, #0
   1254c:	beq	124f4 <error@@Base+0x1588>
   12550:	bl	10830 <free@plt>
   12554:	str	r7, [r5, #8]
   12558:	b	124f4 <error@@Base+0x1588>
   1255c:	pop	{r4, r5, r6, r7, fp, pc}
   12560:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12564:	mov	r7, r0
   12568:	ldr	r6, [pc, #72]	; 125b8 <error@@Base+0x164c>
   1256c:	ldr	r5, [pc, #72]	; 125bc <error@@Base+0x1650>
   12570:	add	r6, pc, r6
   12574:	add	r5, pc, r5
   12578:	sub	r6, r6, r5
   1257c:	mov	r8, r1
   12580:	mov	r9, r2
   12584:	bl	107e0 <calloc@plt-0x20>
   12588:	asrs	r6, r6, #2
   1258c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12590:	mov	r4, #0
   12594:	add	r4, r4, #1
   12598:	ldr	r3, [r5], #4
   1259c:	mov	r2, r9
   125a0:	mov	r1, r8
   125a4:	mov	r0, r7
   125a8:	blx	r3
   125ac:	cmp	r6, r4
   125b0:	bne	12594 <error@@Base+0x1628>
   125b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   125b8:	andeq	r0, r1, r4, lsl #19
   125bc:	andeq	r0, r1, ip, ror r9
   125c0:	bx	lr

Disassembly of section .fini:

000125c4 <.fini>:
   125c4:	push	{r3, lr}
   125c8:	pop	{r3, pc}
