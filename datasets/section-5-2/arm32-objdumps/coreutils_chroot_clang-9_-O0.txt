
../repos/coreutils/src/chroot:     file format elf32-littlearm


Disassembly of section .init:

00011100 <.init>:
   11100:	push	{r3, lr}
   11104:	bl	11474 <__assert_fail@plt+0x48>
   11108:	pop	{r3, pc}

Disassembly of section .plt:

0001110c <calloc@plt-0x14>:
   1110c:	push	{lr}		; (str lr, [sp, #-4]!)
   11110:	ldr	lr, [pc, #4]	; 1111c <calloc@plt-0x4>
   11114:	add	lr, pc, lr
   11118:	ldr	pc, [lr, #8]!
   1111c:	andeq	pc, r1, r4, ror #29

00011120 <calloc@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #126976	; 0x1f000
   11128:	ldr	pc, [ip, #3812]!	; 0xee4

0001112c <endgrent@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #126976	; 0x1f000
   11134:	ldr	pc, [ip, #3804]!	; 0xedc

00011138 <fputs_unlocked@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #126976	; 0x1f000
   11140:	ldr	pc, [ip, #3796]!	; 0xed4

00011144 <raise@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #126976	; 0x1f000
   1114c:	ldr	pc, [ip, #3788]!	; 0xecc

00011150 <getpwnam@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #126976	; 0x1f000
   11158:	ldr	pc, [ip, #3780]!	; 0xec4

0001115c <strcmp@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #126976	; 0x1f000
   11164:	ldr	pc, [ip, #3772]!	; 0xebc

00011168 <getpwuid@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #126976	; 0x1f000
   11170:	ldr	pc, [ip, #3764]!	; 0xeb4

00011174 <printf@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #126976	; 0x1f000
   1117c:	ldr	pc, [ip, #3756]!	; 0xeac

00011180 <fflush@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #126976	; 0x1f000
   11188:	ldr	pc, [ip, #3748]!	; 0xea4

0001118c <free@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #126976	; 0x1f000
   11194:	ldr	pc, [ip, #3740]!	; 0xe9c

00011198 <_exit@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #126976	; 0x1f000
   111a0:	ldr	pc, [ip, #3732]!	; 0xe94

000111a4 <memcpy@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #126976	; 0x1f000
   111ac:	ldr	pc, [ip, #3724]!	; 0xe8c

000111b0 <execvp@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #126976	; 0x1f000
   111b8:	ldr	pc, [ip, #3716]!	; 0xe84

000111bc <mbsinit@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #126976	; 0x1f000
   111c4:	ldr	pc, [ip, #3708]!	; 0xe7c

000111c8 <memcmp@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #126976	; 0x1f000
   111d0:	ldr	pc, [ip, #3700]!	; 0xe74

000111d4 <realloc@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #126976	; 0x1f000
   111dc:	ldr	pc, [ip, #3692]!	; 0xe6c

000111e0 <textdomain@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #126976	; 0x1f000
   111e8:	ldr	pc, [ip, #3684]!	; 0xe64

000111ec <chdir@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #126976	; 0x1f000
   111f4:	ldr	pc, [ip, #3676]!	; 0xe5c

000111f8 <iswprint@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #126976	; 0x1f000
   11200:	ldr	pc, [ip, #3668]!	; 0xe54

00011204 <setgroups@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #126976	; 0x1f000
   1120c:	ldr	pc, [ip, #3660]!	; 0xe4c

00011210 <lseek64@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #126976	; 0x1f000
   11218:	ldr	pc, [ip, #3652]!	; 0xe44

0001121c <__ctype_get_mb_cur_max@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #126976	; 0x1f000
   11224:	ldr	pc, [ip, #3644]!	; 0xe3c

00011228 <chroot@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #126976	; 0x1f000
   11230:	ldr	pc, [ip, #3636]!	; 0xe34

00011234 <__fpending@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #126976	; 0x1f000
   1123c:	ldr	pc, [ip, #3628]!	; 0xe2c

00011240 <ferror_unlocked@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #126976	; 0x1f000
   11248:	ldr	pc, [ip, #3620]!	; 0xe24

0001124c <mbrtowc@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #126976	; 0x1f000
   11254:	ldr	pc, [ip, #3612]!	; 0xe1c

00011258 <error@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #126976	; 0x1f000
   11260:	ldr	pc, [ip, #3604]!	; 0xe14

00011264 <getenv@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #126976	; 0x1f000
   1126c:	ldr	pc, [ip, #3596]!	; 0xe0c

00011270 <setgid@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #126976	; 0x1f000
   11278:	ldr	pc, [ip, #3588]!	; 0xe04

0001127c <malloc@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #126976	; 0x1f000
   11284:	ldr	pc, [ip, #3580]!	; 0xdfc

00011288 <__libc_start_main@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #126976	; 0x1f000
   11290:	ldr	pc, [ip, #3572]!	; 0xdf4

00011294 <__freading@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #126976	; 0x1f000
   1129c:	ldr	pc, [ip, #3564]!	; 0xdec

000112a0 <__gmon_start__@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #126976	; 0x1f000
   112a8:	ldr	pc, [ip, #3556]!	; 0xde4

000112ac <getopt_long@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #126976	; 0x1f000
   112b4:	ldr	pc, [ip, #3548]!	; 0xddc

000112b8 <__ctype_b_loc@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #126976	; 0x1f000
   112c0:	ldr	pc, [ip, #3540]!	; 0xdd4

000112c4 <exit@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #126976	; 0x1f000
   112cc:	ldr	pc, [ip, #3532]!	; 0xdcc

000112d0 <gettext@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #126976	; 0x1f000
   112d8:	ldr	pc, [ip, #3524]!	; 0xdc4

000112dc <strtoul@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #126976	; 0x1f000
   112e4:	ldr	pc, [ip, #3516]!	; 0xdbc

000112e8 <strlen@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #126976	; 0x1f000
   112f0:	ldr	pc, [ip, #3508]!	; 0xdb4

000112f4 <strchr@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #126976	; 0x1f000
   112fc:	ldr	pc, [ip, #3500]!	; 0xdac

00011300 <fprintf@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #126976	; 0x1f000
   11308:	ldr	pc, [ip, #3492]!	; 0xda4

0001130c <__errno_location@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #126976	; 0x1f000
   11314:	ldr	pc, [ip, #3484]!	; 0xd9c

00011318 <__cxa_atexit@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #126976	; 0x1f000
   11320:	ldr	pc, [ip, #3476]!	; 0xd94

00011324 <getgrouplist@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #126976	; 0x1f000
   1132c:	ldr	pc, [ip, #3468]!	; 0xd8c

00011330 <memset@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #126976	; 0x1f000
   11338:	ldr	pc, [ip, #3460]!	; 0xd84

0001133c <setgrent@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #126976	; 0x1f000
   11344:	ldr	pc, [ip, #3452]!	; 0xd7c

00011348 <getgrent@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #126976	; 0x1f000
   11350:	ldr	pc, [ip, #3444]!	; 0xd74

00011354 <fileno@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #126976	; 0x1f000
   1135c:	ldr	pc, [ip, #3436]!	; 0xd6c

00011360 <strtoumax@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #126976	; 0x1f000
   11368:	ldr	pc, [ip, #3428]!	; 0xd64

0001136c <fclose@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #126976	; 0x1f000
   11374:	ldr	pc, [ip, #3420]!	; 0xd5c

00011378 <fseeko64@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #126976	; 0x1f000
   11380:	ldr	pc, [ip, #3412]!	; 0xd54

00011384 <strtok@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #126976	; 0x1f000
   1138c:	ldr	pc, [ip, #3404]!	; 0xd4c

00011390 <setlocale@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #126976	; 0x1f000
   11398:	ldr	pc, [ip, #3396]!	; 0xd44

0001139c <endpwent@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #126976	; 0x1f000
   113a4:	ldr	pc, [ip, #3388]!	; 0xd3c

000113a8 <strrchr@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #126976	; 0x1f000
   113b0:	ldr	pc, [ip, #3380]!	; 0xd34

000113b4 <nl_langinfo@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #126976	; 0x1f000
   113bc:	ldr	pc, [ip, #3372]!	; 0xd2c

000113c0 <setuid@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #126976	; 0x1f000
   113c8:	ldr	pc, [ip, #3364]!	; 0xd24

000113cc <getgroups@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #126976	; 0x1f000
   113d4:	ldr	pc, [ip, #3356]!	; 0xd1c

000113d8 <canonicalize_file_name@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #126976	; 0x1f000
   113e0:	ldr	pc, [ip, #3348]!	; 0xd14

000113e4 <bindtextdomain@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #126976	; 0x1f000
   113ec:	ldr	pc, [ip, #3340]!	; 0xd0c

000113f0 <fputs@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #126976	; 0x1f000
   113f8:	ldr	pc, [ip, #3332]!	; 0xd04

000113fc <strncmp@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #126976	; 0x1f000
   11404:	ldr	pc, [ip, #3324]!	; 0xcfc

00011408 <abort@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #126976	; 0x1f000
   11410:	ldr	pc, [ip, #3316]!	; 0xcf4

00011414 <getgrgid@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #126976	; 0x1f000
   1141c:	ldr	pc, [ip, #3308]!	; 0xcec

00011420 <getgrnam@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #126976	; 0x1f000
   11428:	ldr	pc, [ip, #3300]!	; 0xce4

0001142c <__assert_fail@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #126976	; 0x1f000
   11434:	ldr	pc, [ip, #3292]!	; 0xcdc

Disassembly of section .text:

00011438 <.text>:
   11438:	mov	fp, #0
   1143c:	mov	lr, #0
   11440:	pop	{r1}		; (ldr r1, [sp], #4)
   11444:	mov	r2, sp
   11448:	push	{r2}		; (str r2, [sp, #-4]!)
   1144c:	push	{r0}		; (str r0, [sp, #-4]!)
   11450:	ldr	ip, [pc, #16]	; 11468 <__assert_fail@plt+0x3c>
   11454:	push	{ip}		; (str ip, [sp, #-4]!)
   11458:	ldr	r0, [pc, #12]	; 1146c <__assert_fail@plt+0x40>
   1145c:	ldr	r3, [pc, #12]	; 11470 <__assert_fail@plt+0x44>
   11460:	bl	11288 <__libc_start_main@plt>
   11464:	bl	11408 <abort@plt>
   11468:	strdeq	pc, [r1], -ip
   1146c:	muleq	r1, r8, r8
   11470:	muleq	r1, ip, r5
   11474:	ldr	r3, [pc, #20]	; 11490 <__assert_fail@plt+0x64>
   11478:	ldr	r2, [pc, #20]	; 11494 <__assert_fail@plt+0x68>
   1147c:	add	r3, pc, r3
   11480:	ldr	r2, [r3, r2]
   11484:	cmp	r2, #0
   11488:	bxeq	lr
   1148c:	b	112a0 <__gmon_start__@plt>
   11490:	andeq	pc, r1, ip, ror fp	; <UNPREDICTABLE>
   11494:	andeq	r0, r0, r4, lsl r1
   11498:	ldr	r0, [pc, #24]	; 114b8 <__assert_fail@plt+0x8c>
   1149c:	ldr	r3, [pc, #24]	; 114bc <__assert_fail@plt+0x90>
   114a0:	cmp	r3, r0
   114a4:	bxeq	lr
   114a8:	ldr	r3, [pc, #16]	; 114c0 <__assert_fail@plt+0x94>
   114ac:	cmp	r3, #0
   114b0:	bxeq	lr
   114b4:	bx	r3
   114b8:	andeq	r1, r3, r4, ror r1
   114bc:	andeq	r1, r3, r4, ror r1
   114c0:	andeq	r0, r0, r0
   114c4:	ldr	r0, [pc, #36]	; 114f0 <__assert_fail@plt+0xc4>
   114c8:	ldr	r1, [pc, #36]	; 114f4 <__assert_fail@plt+0xc8>
   114cc:	sub	r1, r1, r0
   114d0:	asr	r1, r1, #2
   114d4:	add	r1, r1, r1, lsr #31
   114d8:	asrs	r1, r1, #1
   114dc:	bxeq	lr
   114e0:	ldr	r3, [pc, #16]	; 114f8 <__assert_fail@plt+0xcc>
   114e4:	cmp	r3, #0
   114e8:	bxeq	lr
   114ec:	bx	r3
   114f0:	andeq	r1, r3, r4, ror r1
   114f4:	andeq	r1, r3, r4, ror r1
   114f8:	andeq	r0, r0, r0
   114fc:	push	{r4, lr}
   11500:	ldr	r4, [pc, #24]	; 11520 <__assert_fail@plt+0xf4>
   11504:	ldrb	r3, [r4]
   11508:	cmp	r3, #0
   1150c:	popne	{r4, pc}
   11510:	bl	11498 <__assert_fail@plt+0x6c>
   11514:	mov	r3, #1
   11518:	strb	r3, [r4]
   1151c:	pop	{r4, pc}
   11520:	muleq	r3, r4, r1
   11524:	b	114c4 <__assert_fail@plt+0x98>
   11528:	push	{fp, lr}
   1152c:	mov	fp, sp
   11530:	sub	sp, sp, #56	; 0x38
   11534:	str	r0, [fp, #-4]
   11538:	ldr	r0, [fp, #-4]
   1153c:	cmp	r0, #0
   11540:	beq	1158c <__assert_fail@plt+0x160>
   11544:	b	11548 <__assert_fail@plt+0x11c>
   11548:	movw	r0, #4488	; 0x1188
   1154c:	movt	r0, #3
   11550:	ldr	r0, [r0]
   11554:	movw	r1, #63012	; 0xf624
   11558:	movt	r1, #1
   1155c:	str	r0, [fp, #-8]
   11560:	mov	r0, r1
   11564:	bl	112d0 <gettext@plt>
   11568:	movw	r1, #4512	; 0x11a0
   1156c:	movt	r1, #3
   11570:	ldr	r2, [r1]
   11574:	ldr	r1, [fp, #-8]
   11578:	str	r0, [fp, #-12]
   1157c:	mov	r0, r1
   11580:	ldr	r1, [fp, #-12]
   11584:	bl	11300 <fprintf@plt>
   11588:	b	116e4 <__assert_fail@plt+0x2b8>
   1158c:	movw	r0, #63051	; 0xf64b
   11590:	movt	r0, #1
   11594:	bl	112d0 <gettext@plt>
   11598:	movw	r1, #4512	; 0x11a0
   1159c:	movt	r1, #3
   115a0:	ldr	r2, [r1]
   115a4:	ldr	r1, [r1]
   115a8:	str	r1, [fp, #-16]
   115ac:	mov	r1, r2
   115b0:	ldr	r2, [fp, #-16]
   115b4:	bl	11174 <printf@plt>
   115b8:	movw	r1, #63115	; 0xf68b
   115bc:	movt	r1, #1
   115c0:	str	r0, [fp, #-20]	; 0xffffffec
   115c4:	mov	r0, r1
   115c8:	bl	112d0 <gettext@plt>
   115cc:	movw	r1, #4492	; 0x118c
   115d0:	movt	r1, #3
   115d4:	ldr	r1, [r1]
   115d8:	bl	11138 <fputs_unlocked@plt>
   115dc:	movw	r1, #63165	; 0xf6bd
   115e0:	movt	r1, #1
   115e4:	str	r0, [fp, #-24]	; 0xffffffe8
   115e8:	mov	r0, r1
   115ec:	bl	112d0 <gettext@plt>
   115f0:	movw	r1, #4492	; 0x118c
   115f4:	movt	r1, #3
   115f8:	ldr	r1, [r1]
   115fc:	bl	11138 <fputs_unlocked@plt>
   11600:	movw	r1, #63239	; 0xf707
   11604:	movt	r1, #1
   11608:	str	r0, [sp, #28]
   1160c:	mov	r0, r1
   11610:	bl	112d0 <gettext@plt>
   11614:	movw	r1, #4492	; 0x118c
   11618:	movt	r1, #3
   1161c:	ldr	r1, [r1]
   11620:	bl	11138 <fputs_unlocked@plt>
   11624:	movw	r1, #63312	; 0xf750
   11628:	movt	r1, #1
   1162c:	str	r0, [sp, #24]
   11630:	mov	r0, r1
   11634:	bl	112d0 <gettext@plt>
   11638:	movw	r1, #4
   1163c:	str	r0, [sp, #20]
   11640:	mov	r0, r1
   11644:	movw	r1, #19
   11648:	movt	r1, #2
   1164c:	bl	14a80 <__assert_fail@plt+0x3654>
   11650:	ldr	r1, [sp, #20]
   11654:	str	r0, [sp, #16]
   11658:	mov	r0, r1
   1165c:	ldr	r1, [sp, #16]
   11660:	bl	11174 <printf@plt>
   11664:	movw	r1, #63380	; 0xf794
   11668:	movt	r1, #1
   1166c:	str	r0, [sp, #12]
   11670:	mov	r0, r1
   11674:	bl	112d0 <gettext@plt>
   11678:	movw	r1, #4492	; 0x118c
   1167c:	movt	r1, #3
   11680:	ldr	r1, [r1]
   11684:	bl	11138 <fputs_unlocked@plt>
   11688:	movw	r1, #63425	; 0xf7c1
   1168c:	movt	r1, #1
   11690:	str	r0, [sp, #8]
   11694:	mov	r0, r1
   11698:	bl	112d0 <gettext@plt>
   1169c:	movw	r1, #4492	; 0x118c
   116a0:	movt	r1, #3
   116a4:	ldr	r1, [r1]
   116a8:	bl	11138 <fputs_unlocked@plt>
   116ac:	movw	r1, #63479	; 0xf7f7
   116b0:	movt	r1, #1
   116b4:	str	r0, [sp, #4]
   116b8:	mov	r0, r1
   116bc:	bl	112d0 <gettext@plt>
   116c0:	movw	r1, #4492	; 0x118c
   116c4:	movt	r1, #3
   116c8:	ldr	r1, [r1]
   116cc:	bl	11138 <fputs_unlocked@plt>
   116d0:	movw	r1, #63548	; 0xf83c
   116d4:	movt	r1, #1
   116d8:	str	r0, [sp]
   116dc:	mov	r0, r1
   116e0:	bl	116ec <__assert_fail@plt+0x2c0>
   116e4:	ldr	r0, [fp, #-4]
   116e8:	bl	112c4 <exit@plt>
   116ec:	push	{fp, lr}
   116f0:	mov	fp, sp
   116f4:	sub	sp, sp, #88	; 0x58
   116f8:	add	r1, sp, #28
   116fc:	movw	r2, #64424	; 0xfba8
   11700:	movt	r2, #1
   11704:	str	r0, [fp, #-4]
   11708:	mov	r0, r1
   1170c:	str	r1, [sp, #12]
   11710:	mov	r1, r2
   11714:	movw	r2, #56	; 0x38
   11718:	bl	111a4 <memcpy@plt>
   1171c:	ldr	r0, [fp, #-4]
   11720:	str	r0, [sp, #24]
   11724:	ldr	r0, [sp, #12]
   11728:	str	r0, [sp, #20]
   1172c:	ldr	r0, [sp, #20]
   11730:	ldr	r0, [r0]
   11734:	movw	r1, #0
   11738:	cmp	r0, r1
   1173c:	movw	r0, #0
   11740:	str	r0, [sp, #8]
   11744:	beq	11770 <__assert_fail@plt+0x344>
   11748:	ldr	r0, [fp, #-4]
   1174c:	ldr	r1, [sp, #20]
   11750:	ldr	r1, [r1]
   11754:	bl	1115c <strcmp@plt>
   11758:	cmp	r0, #0
   1175c:	movw	r0, #0
   11760:	moveq	r0, #1
   11764:	mvn	r1, #0
   11768:	eor	r0, r0, r1
   1176c:	str	r0, [sp, #8]
   11770:	ldr	r0, [sp, #8]
   11774:	tst	r0, #1
   11778:	beq	1178c <__assert_fail@plt+0x360>
   1177c:	ldr	r0, [sp, #20]
   11780:	add	r0, r0, #8
   11784:	str	r0, [sp, #20]
   11788:	b	1172c <__assert_fail@plt+0x300>
   1178c:	ldr	r0, [sp, #20]
   11790:	ldr	r0, [r0, #4]
   11794:	movw	r1, #0
   11798:	cmp	r0, r1
   1179c:	beq	117ac <__assert_fail@plt+0x380>
   117a0:	ldr	r0, [sp, #20]
   117a4:	ldr	r0, [r0, #4]
   117a8:	str	r0, [sp, #24]
   117ac:	movw	r0, #64037	; 0xfa25
   117b0:	movt	r0, #1
   117b4:	bl	112d0 <gettext@plt>
   117b8:	movw	r1, #63581	; 0xf85d
   117bc:	movt	r1, #1
   117c0:	movw	r2, #64060	; 0xfa3c
   117c4:	movt	r2, #1
   117c8:	bl	11174 <printf@plt>
   117cc:	movw	r1, #5
   117d0:	str	r0, [sp, #4]
   117d4:	mov	r0, r1
   117d8:	movw	r1, #0
   117dc:	bl	11390 <setlocale@plt>
   117e0:	str	r0, [sp, #16]
   117e4:	ldr	r0, [sp, #16]
   117e8:	movw	r1, #0
   117ec:	cmp	r0, r1
   117f0:	beq	1182c <__assert_fail@plt+0x400>
   117f4:	ldr	r0, [sp, #16]
   117f8:	movw	r1, #64100	; 0xfa64
   117fc:	movt	r1, #1
   11800:	movw	r2, #3
   11804:	bl	113fc <strncmp@plt>
   11808:	cmp	r0, #0
   1180c:	beq	1182c <__assert_fail@plt+0x400>
   11810:	movw	r0, #64104	; 0xfa68
   11814:	movt	r0, #1
   11818:	bl	112d0 <gettext@plt>
   1181c:	movw	r1, #4492	; 0x118c
   11820:	movt	r1, #3
   11824:	ldr	r1, [r1]
   11828:	bl	11138 <fputs_unlocked@plt>
   1182c:	movw	r0, #64175	; 0xfaaf
   11830:	movt	r0, #1
   11834:	bl	112d0 <gettext@plt>
   11838:	ldr	r2, [fp, #-4]
   1183c:	movw	r1, #64060	; 0xfa3c
   11840:	movt	r1, #1
   11844:	bl	11174 <printf@plt>
   11848:	movw	r1, #64202	; 0xfaca
   1184c:	movt	r1, #1
   11850:	str	r0, [sp]
   11854:	mov	r0, r1
   11858:	bl	112d0 <gettext@plt>
   1185c:	ldr	r1, [sp, #24]
   11860:	ldr	r2, [sp, #24]
   11864:	ldr	r3, [fp, #-4]
   11868:	cmp	r2, r3
   1186c:	movw	r2, #0
   11870:	moveq	r2, #1
   11874:	tst	r2, #1
   11878:	movw	r2, #63164	; 0xf6bc
   1187c:	movt	r2, #1
   11880:	movw	r3, #63970	; 0xf9e2
   11884:	movt	r3, #1
   11888:	movne	r2, r3
   1188c:	bl	11174 <printf@plt>
   11890:	mov	sp, fp
   11894:	pop	{fp, pc}
   11898:	push	{fp, lr}
   1189c:	mov	fp, sp
   118a0:	sub	sp, sp, #224	; 0xe0
   118a4:	movw	r2, #0
   118a8:	str	r2, [fp, #-4]
   118ac:	str	r0, [fp, #-8]
   118b0:	str	r1, [fp, #-12]
   118b4:	str	r2, [fp, #-20]	; 0xffffffec
   118b8:	str	r2, [fp, #-24]	; 0xffffffe8
   118bc:	str	r2, [fp, #-28]	; 0xffffffe4
   118c0:	movw	r0, #0
   118c4:	strb	r0, [fp, #-29]	; 0xffffffe3
   118c8:	mvn	r0, #0
   118cc:	str	r0, [fp, #-36]	; 0xffffffdc
   118d0:	str	r0, [fp, #-40]	; 0xffffffd8
   118d4:	str	r2, [fp, #-44]	; 0xffffffd4
   118d8:	str	r2, [fp, #-48]	; 0xffffffd0
   118dc:	ldr	r0, [fp, #-12]
   118e0:	ldr	r0, [r0]
   118e4:	bl	127bc <__assert_fail@plt+0x1390>
   118e8:	movw	r0, #6
   118ec:	movw	r1, #63164	; 0xf6bc
   118f0:	movt	r1, #1
   118f4:	bl	11390 <setlocale@plt>
   118f8:	movw	r1, #63585	; 0xf861
   118fc:	movt	r1, #1
   11900:	str	r0, [fp, #-100]	; 0xffffff9c
   11904:	mov	r0, r1
   11908:	movw	r1, #63555	; 0xf843
   1190c:	movt	r1, #1
   11910:	bl	113e4 <bindtextdomain@plt>
   11914:	movw	r1, #63585	; 0xf861
   11918:	movt	r1, #1
   1191c:	str	r0, [fp, #-104]	; 0xffffff98
   11920:	mov	r0, r1
   11924:	bl	111e0 <textdomain@plt>
   11928:	movw	r1, #125	; 0x7d
   1192c:	str	r0, [fp, #-108]	; 0xffffff94
   11930:	mov	r0, r1
   11934:	bl	12230 <__assert_fail@plt+0xe04>
   11938:	movw	r0, #9820	; 0x265c
   1193c:	movt	r0, #1
   11940:	bl	1f600 <__assert_fail@plt+0xe1d4>
   11944:	ldr	r0, [fp, #-8]
   11948:	ldr	r1, [fp, #-12]
   1194c:	movw	r2, #63579	; 0xf85b
   11950:	movt	r2, #1
   11954:	movw	r3, #64328	; 0xfb48
   11958:	movt	r3, #1
   1195c:	movw	ip, #0
   11960:	str	ip, [sp]
   11964:	bl	112ac <getopt_long@plt>
   11968:	str	r0, [fp, #-16]
   1196c:	cmn	r0, #1
   11970:	beq	11aac <__assert_fail@plt+0x680>
   11974:	ldr	r0, [fp, #-16]
   11978:	cmn	r0, #3
   1197c:	str	r0, [sp, #112]	; 0x70
   11980:	beq	11a58 <__assert_fail@plt+0x62c>
   11984:	b	11988 <__assert_fail@plt+0x55c>
   11988:	ldr	r0, [sp, #112]	; 0x70
   1198c:	cmn	r0, #2
   11990:	beq	11a50 <__assert_fail@plt+0x624>
   11994:	b	11998 <__assert_fail@plt+0x56c>
   11998:	ldr	r0, [sp, #112]	; 0x70
   1199c:	cmp	r0, #256	; 0x100
   119a0:	beq	11a30 <__assert_fail@plt+0x604>
   119a4:	b	119a8 <__assert_fail@plt+0x57c>
   119a8:	movw	r0, #257	; 0x101
   119ac:	ldr	r1, [sp, #112]	; 0x70
   119b0:	cmp	r1, r0
   119b4:	beq	119d0 <__assert_fail@plt+0x5a4>
   119b8:	b	119bc <__assert_fail@plt+0x590>
   119bc:	movw	r0, #258	; 0x102
   119c0:	ldr	r1, [sp, #112]	; 0x70
   119c4:	cmp	r1, r0
   119c8:	beq	11a44 <__assert_fail@plt+0x618>
   119cc:	b	11aa0 <__assert_fail@plt+0x674>
   119d0:	movw	r0, #4496	; 0x1190
   119d4:	movt	r0, #3
   119d8:	ldr	r0, [r0]
   119dc:	str	r0, [fp, #-20]	; 0xffffffec
   119e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   119e4:	bl	112e8 <strlen@plt>
   119e8:	str	r0, [fp, #-52]	; 0xffffffcc
   119ec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   119f0:	cmp	r0, #0
   119f4:	beq	11a2c <__assert_fail@plt+0x600>
   119f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   119fc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11a00:	sub	r1, r1, #1
   11a04:	add	r0, r0, r1
   11a08:	ldrb	r0, [r0]
   11a0c:	cmp	r0, #58	; 0x3a
   11a10:	bne	11a2c <__assert_fail@plt+0x600>
   11a14:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a18:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11a1c:	sub	r1, r1, #1
   11a20:	add	r0, r0, r1
   11a24:	movw	r1, #0
   11a28:	strb	r1, [r0]
   11a2c:	b	11aa8 <__assert_fail@plt+0x67c>
   11a30:	movw	r0, #4496	; 0x1190
   11a34:	movt	r0, #3
   11a38:	ldr	r0, [r0]
   11a3c:	str	r0, [fp, #-28]	; 0xffffffe4
   11a40:	b	11aa8 <__assert_fail@plt+0x67c>
   11a44:	movw	r0, #1
   11a48:	strb	r0, [fp, #-29]	; 0xffffffe3
   11a4c:	b	11aa8 <__assert_fail@plt+0x67c>
   11a50:	movw	r0, #0
   11a54:	bl	11528 <__assert_fail@plt+0xfc>
   11a58:	movw	r0, #4492	; 0x118c
   11a5c:	movt	r0, #3
   11a60:	ldr	r0, [r0]
   11a64:	movw	r1, #4384	; 0x1120
   11a68:	movt	r1, #3
   11a6c:	ldr	r3, [r1]
   11a70:	movw	r1, #63548	; 0xf83c
   11a74:	movt	r1, #1
   11a78:	movw	r2, #63581	; 0xf85d
   11a7c:	movt	r2, #1
   11a80:	movw	ip, #63595	; 0xf86b
   11a84:	movt	ip, #1
   11a88:	str	ip, [sp]
   11a8c:	movw	ip, #0
   11a90:	str	ip, [sp, #4]
   11a94:	bl	15c54 <__assert_fail@plt+0x4828>
   11a98:	movw	r0, #0
   11a9c:	bl	112c4 <exit@plt>
   11aa0:	movw	r0, #125	; 0x7d
   11aa4:	bl	11528 <__assert_fail@plt+0xfc>
   11aa8:	b	11944 <__assert_fail@plt+0x518>
   11aac:	ldr	r0, [fp, #-8]
   11ab0:	movw	r1, #4480	; 0x1180
   11ab4:	movt	r1, #3
   11ab8:	ldr	r1, [r1]
   11abc:	cmp	r0, r1
   11ac0:	bgt	11aec <__assert_fail@plt+0x6c0>
   11ac4:	movw	r0, #63610	; 0xf87a
   11ac8:	movt	r0, #1
   11acc:	bl	112d0 <gettext@plt>
   11ad0:	movw	r1, #0
   11ad4:	str	r0, [sp, #108]	; 0x6c
   11ad8:	mov	r0, r1
   11adc:	ldr	r2, [sp, #108]	; 0x6c
   11ae0:	bl	11258 <error@plt>
   11ae4:	movw	r0, #125	; 0x7d
   11ae8:	bl	11528 <__assert_fail@plt+0xfc>
   11aec:	ldr	r0, [fp, #-12]
   11af0:	movw	r1, #4480	; 0x1180
   11af4:	movt	r1, #3
   11af8:	ldr	r1, [r1]
   11afc:	add	r0, r0, r1, lsl #2
   11b00:	ldr	r0, [r0]
   11b04:	str	r0, [fp, #-56]	; 0xffffffc8
   11b08:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11b0c:	bl	1225c <__assert_fail@plt+0xe30>
   11b10:	and	r0, r0, #1
   11b14:	strb	r0, [fp, #-57]	; 0xffffffc7
   11b18:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   11b1c:	tst	r0, #1
   11b20:	bne	11b74 <__assert_fail@plt+0x748>
   11b24:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11b28:	tst	r0, #1
   11b2c:	beq	11b74 <__assert_fail@plt+0x748>
   11b30:	movw	r0, #63626	; 0xf88a
   11b34:	movt	r0, #1
   11b38:	bl	112d0 <gettext@plt>
   11b3c:	movw	r1, #4
   11b40:	str	r0, [sp, #104]	; 0x68
   11b44:	mov	r0, r1
   11b48:	movw	r1, #19
   11b4c:	movt	r1, #2
   11b50:	bl	14a80 <__assert_fail@plt+0x3654>
   11b54:	movw	r1, #0
   11b58:	str	r0, [sp, #100]	; 0x64
   11b5c:	mov	r0, r1
   11b60:	ldr	r2, [sp, #104]	; 0x68
   11b64:	ldr	r3, [sp, #100]	; 0x64
   11b68:	bl	11258 <error@plt>
   11b6c:	movw	r0, #125	; 0x7d
   11b70:	bl	11528 <__assert_fail@plt+0xfc>
   11b74:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   11b78:	tst	r0, #1
   11b7c:	bne	11cc8 <__assert_fail@plt+0x89c>
   11b80:	ldr	r0, [fp, #-20]	; 0xffffffec
   11b84:	movw	r1, #0
   11b88:	cmp	r0, r1
   11b8c:	beq	11bb0 <__assert_fail@plt+0x784>
   11b90:	ldr	r0, [fp, #-20]	; 0xffffffec
   11b94:	sub	r1, fp, #36	; 0x24
   11b98:	sub	r2, fp, #40	; 0x28
   11b9c:	movw	r3, #0
   11ba0:	str	r3, [sp, #96]	; 0x60
   11ba4:	ldr	ip, [sp, #96]	; 0x60
   11ba8:	str	ip, [sp]
   11bac:	bl	14f50 <__assert_fail@plt+0x3b24>
   11bb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11bb4:	bl	122d4 <__assert_fail@plt+0xea8>
   11bb8:	tst	r0, #1
   11bbc:	bne	11c24 <__assert_fail@plt+0x7f8>
   11bc0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11bc4:	movw	r1, #0
   11bc8:	cmp	r0, r1
   11bcc:	beq	11be0 <__assert_fail@plt+0x7b4>
   11bd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11bd4:	bl	122f8 <__assert_fail@plt+0xecc>
   11bd8:	tst	r0, #1
   11bdc:	beq	11c24 <__assert_fail@plt+0x7f8>
   11be0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11be4:	bl	11168 <getpwuid@plt>
   11be8:	str	r0, [fp, #-64]	; 0xffffffc0
   11bec:	movw	r1, #0
   11bf0:	cmp	r0, r1
   11bf4:	beq	11c20 <__assert_fail@plt+0x7f4>
   11bf8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11bfc:	bl	122f8 <__assert_fail@plt+0xecc>
   11c00:	tst	r0, #1
   11c04:	beq	11c14 <__assert_fail@plt+0x7e8>
   11c08:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11c0c:	ldr	r0, [r0, #12]
   11c10:	str	r0, [fp, #-40]	; 0xffffffd8
   11c14:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11c18:	ldr	r0, [r0]
   11c1c:	str	r0, [fp, #-24]	; 0xffffffe8
   11c20:	b	11c24 <__assert_fail@plt+0x7f8>
   11c24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11c28:	movw	r1, #0
   11c2c:	cmp	r0, r1
   11c30:	beq	11c60 <__assert_fail@plt+0x834>
   11c34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11c38:	ldrb	r0, [r0]
   11c3c:	cmp	r0, #0
   11c40:	beq	11c60 <__assert_fail@plt+0x834>
   11c44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11c48:	sub	r1, fp, #44	; 0x2c
   11c4c:	sub	r2, fp, #48	; 0x30
   11c50:	movw	r3, #0
   11c54:	and	r3, r3, #1
   11c58:	bl	1231c <__assert_fail@plt+0xef0>
   11c5c:	b	11cc4 <__assert_fail@plt+0x898>
   11c60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11c64:	movw	r1, #0
   11c68:	cmp	r0, r1
   11c6c:	bne	11cc0 <__assert_fail@plt+0x894>
   11c70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11c74:	bl	122f8 <__assert_fail@plt+0xecc>
   11c78:	tst	r0, #1
   11c7c:	bne	11cc0 <__assert_fail@plt+0x894>
   11c80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11c84:	movw	r1, #0
   11c88:	cmp	r0, r1
   11c8c:	beq	11cc0 <__assert_fail@plt+0x894>
   11c90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11c94:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11c98:	sub	r2, fp, #44	; 0x2c
   11c9c:	bl	18b64 <__assert_fail@plt+0x7738>
   11ca0:	str	r0, [fp, #-68]	; 0xffffffbc
   11ca4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11ca8:	movw	r1, #0
   11cac:	cmp	r1, r0
   11cb0:	bge	11cbc <__assert_fail@plt+0x890>
   11cb4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11cb8:	str	r0, [fp, #-48]	; 0xffffffd0
   11cbc:	b	11cc0 <__assert_fail@plt+0x894>
   11cc0:	b	11cc4 <__assert_fail@plt+0x898>
   11cc4:	b	11cc8 <__assert_fail@plt+0x89c>
   11cc8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11ccc:	bl	11228 <chroot@plt>
   11cd0:	cmp	r0, #0
   11cd4:	beq	11d20 <__assert_fail@plt+0x8f4>
   11cd8:	bl	1130c <__errno_location@plt>
   11cdc:	ldr	r1, [r0]
   11ce0:	movw	r0, #63682	; 0xf8c2
   11ce4:	movt	r0, #1
   11ce8:	str	r1, [sp, #92]	; 0x5c
   11cec:	bl	112d0 <gettext@plt>
   11cf0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   11cf4:	movw	r2, #4
   11cf8:	str	r0, [sp, #88]	; 0x58
   11cfc:	mov	r0, r2
   11d00:	bl	14a80 <__assert_fail@plt+0x3654>
   11d04:	movw	r1, #125	; 0x7d
   11d08:	str	r0, [sp, #84]	; 0x54
   11d0c:	mov	r0, r1
   11d10:	ldr	r1, [sp, #92]	; 0x5c
   11d14:	ldr	r2, [sp, #88]	; 0x58
   11d18:	ldr	r3, [sp, #84]	; 0x54
   11d1c:	bl	11258 <error@plt>
   11d20:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11d24:	tst	r0, #1
   11d28:	bne	11d70 <__assert_fail@plt+0x944>
   11d2c:	movw	r0, #19
   11d30:	movt	r0, #2
   11d34:	bl	111ec <chdir@plt>
   11d38:	cmp	r0, #0
   11d3c:	beq	11d70 <__assert_fail@plt+0x944>
   11d40:	bl	1130c <__errno_location@plt>
   11d44:	ldr	r1, [r0]
   11d48:	movw	r0, #63717	; 0xf8e5
   11d4c:	movt	r0, #1
   11d50:	str	r1, [sp, #80]	; 0x50
   11d54:	bl	112d0 <gettext@plt>
   11d58:	movw	r1, #125	; 0x7d
   11d5c:	str	r0, [sp, #76]	; 0x4c
   11d60:	mov	r0, r1
   11d64:	ldr	r1, [sp, #80]	; 0x50
   11d68:	ldr	r2, [sp, #76]	; 0x4c
   11d6c:	bl	11258 <error@plt>
   11d70:	ldr	r0, [fp, #-8]
   11d74:	movw	r1, #4480	; 0x1180
   11d78:	movt	r1, #3
   11d7c:	ldr	r1, [r1]
   11d80:	add	r1, r1, #1
   11d84:	cmp	r0, r1
   11d88:	bne	11dec <__assert_fail@plt+0x9c0>
   11d8c:	movw	r0, #63748	; 0xf904
   11d90:	movt	r0, #1
   11d94:	bl	11264 <getenv@plt>
   11d98:	str	r0, [fp, #-72]	; 0xffffffb8
   11d9c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11da0:	movw	r1, #0
   11da4:	cmp	r0, r1
   11da8:	bne	11dbc <__assert_fail@plt+0x990>
   11dac:	movw	r0, #63754	; 0xf90a
   11db0:	movt	r0, #1
   11db4:	bl	125ec <__assert_fail@plt+0x11c0>
   11db8:	str	r0, [fp, #-72]	; 0xffffffb8
   11dbc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11dc0:	ldr	r1, [fp, #-12]
   11dc4:	str	r0, [r1]
   11dc8:	movw	r0, #63762	; 0xf912
   11dcc:	movt	r0, #1
   11dd0:	bl	125ec <__assert_fail@plt+0x11c0>
   11dd4:	ldr	r1, [fp, #-12]
   11dd8:	str	r0, [r1, #4]
   11ddc:	ldr	r0, [fp, #-12]
   11de0:	movw	r1, #0
   11de4:	str	r1, [r0, #8]
   11de8:	b	11e08 <__assert_fail@plt+0x9dc>
   11dec:	movw	r0, #4480	; 0x1180
   11df0:	movt	r0, #3
   11df4:	ldr	r0, [r0]
   11df8:	add	r0, r0, #1
   11dfc:	ldr	r1, [fp, #-12]
   11e00:	add	r0, r1, r0, lsl #2
   11e04:	str	r0, [fp, #-12]
   11e08:	ldr	r0, [fp, #-20]	; 0xffffffec
   11e0c:	movw	r1, #0
   11e10:	cmp	r0, r1
   11e14:	beq	11e8c <__assert_fail@plt+0xa60>
   11e18:	ldr	r0, [fp, #-20]	; 0xffffffec
   11e1c:	sub	r1, fp, #36	; 0x24
   11e20:	sub	r2, fp, #40	; 0x28
   11e24:	movw	r3, #0
   11e28:	str	r3, [sp, #72]	; 0x48
   11e2c:	ldr	ip, [sp, #72]	; 0x48
   11e30:	str	ip, [sp]
   11e34:	bl	14f50 <__assert_fail@plt+0x3b24>
   11e38:	str	r0, [fp, #-76]	; 0xffffffb4
   11e3c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11e40:	movw	r1, #0
   11e44:	cmp	r0, r1
   11e48:	beq	11e88 <__assert_fail@plt+0xa5c>
   11e4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11e50:	bl	122d4 <__assert_fail@plt+0xea8>
   11e54:	tst	r0, #1
   11e58:	beq	11e88 <__assert_fail@plt+0xa5c>
   11e5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11e60:	bl	122f8 <__assert_fail@plt+0xecc>
   11e64:	tst	r0, #1
   11e68:	beq	11e88 <__assert_fail@plt+0xa5c>
   11e6c:	bl	1130c <__errno_location@plt>
   11e70:	ldr	r1, [r0]
   11e74:	ldr	r3, [fp, #-76]	; 0xffffffb4
   11e78:	movw	r0, #125	; 0x7d
   11e7c:	movw	r2, #64511	; 0xfbff
   11e80:	movt	r2, #1
   11e84:	bl	11258 <error@plt>
   11e88:	b	11e8c <__assert_fail@plt+0xa60>
   11e8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11e90:	bl	122d4 <__assert_fail@plt+0xea8>
   11e94:	tst	r0, #1
   11e98:	bne	11f4c <__assert_fail@plt+0xb20>
   11e9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11ea0:	movw	r1, #0
   11ea4:	cmp	r0, r1
   11ea8:	beq	11ebc <__assert_fail@plt+0xa90>
   11eac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11eb0:	bl	122f8 <__assert_fail@plt+0xecc>
   11eb4:	tst	r0, #1
   11eb8:	beq	11f4c <__assert_fail@plt+0xb20>
   11ebc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11ec0:	bl	11168 <getpwuid@plt>
   11ec4:	str	r0, [fp, #-80]	; 0xffffffb0
   11ec8:	movw	r1, #0
   11ecc:	cmp	r0, r1
   11ed0:	beq	11f00 <__assert_fail@plt+0xad4>
   11ed4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11ed8:	bl	122f8 <__assert_fail@plt+0xecc>
   11edc:	tst	r0, #1
   11ee0:	beq	11ef0 <__assert_fail@plt+0xac4>
   11ee4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11ee8:	ldr	r0, [r0, #12]
   11eec:	str	r0, [fp, #-40]	; 0xffffffd8
   11ef0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11ef4:	ldr	r0, [r0]
   11ef8:	str	r0, [fp, #-24]	; 0xffffffe8
   11efc:	b	11f48 <__assert_fail@plt+0xb1c>
   11f00:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11f04:	bl	122f8 <__assert_fail@plt+0xecc>
   11f08:	tst	r0, #1
   11f0c:	beq	11f44 <__assert_fail@plt+0xb18>
   11f10:	bl	1130c <__errno_location@plt>
   11f14:	ldr	r1, [r0]
   11f18:	movw	r0, #63765	; 0xf915
   11f1c:	movt	r0, #1
   11f20:	str	r1, [sp, #68]	; 0x44
   11f24:	bl	112d0 <gettext@plt>
   11f28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11f2c:	movw	r1, #125	; 0x7d
   11f30:	str	r0, [sp, #64]	; 0x40
   11f34:	mov	r0, r1
   11f38:	ldr	r1, [sp, #68]	; 0x44
   11f3c:	ldr	r2, [sp, #64]	; 0x40
   11f40:	bl	11258 <error@plt>
   11f44:	b	11f48 <__assert_fail@plt+0xb1c>
   11f48:	b	11f4c <__assert_fail@plt+0xb20>
   11f4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11f50:	str	r0, [fp, #-84]	; 0xffffffac
   11f54:	movw	r0, #0
   11f58:	str	r0, [fp, #-88]	; 0xffffffa8
   11f5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11f60:	cmp	r1, r0
   11f64:	beq	11fe0 <__assert_fail@plt+0xbb4>
   11f68:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11f6c:	ldrb	r0, [r0]
   11f70:	cmp	r0, #0
   11f74:	beq	11fe0 <__assert_fail@plt+0xbb4>
   11f78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11f7c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11f80:	cmp	r1, #0
   11f84:	movw	r1, #0
   11f88:	movne	r1, #1
   11f8c:	mvn	r2, #0
   11f90:	eor	r1, r1, r2
   11f94:	sub	r2, fp, #88	; 0x58
   11f98:	str	r1, [sp, #60]	; 0x3c
   11f9c:	mov	r1, r2
   11fa0:	sub	r2, fp, #48	; 0x30
   11fa4:	ldr	r3, [sp, #60]	; 0x3c
   11fa8:	and	r3, r3, #1
   11fac:	bl	1231c <__assert_fail@plt+0xef0>
   11fb0:	cmp	r0, #0
   11fb4:	beq	11fd4 <__assert_fail@plt+0xba8>
   11fb8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11fbc:	cmp	r0, #0
   11fc0:	bne	11fd0 <__assert_fail@plt+0xba4>
   11fc4:	movw	r0, #125	; 0x7d
   11fc8:	str	r0, [fp, #-4]
   11fcc:	b	12224 <__assert_fail@plt+0xdf8>
   11fd0:	b	11fdc <__assert_fail@plt+0xbb0>
   11fd4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   11fd8:	str	r0, [fp, #-84]	; 0xffffffac
   11fdc:	b	12088 <__assert_fail@plt+0xc5c>
   11fe0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11fe4:	movw	r1, #0
   11fe8:	cmp	r0, r1
   11fec:	bne	12084 <__assert_fail@plt+0xc58>
   11ff0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11ff4:	bl	122f8 <__assert_fail@plt+0xecc>
   11ff8:	tst	r0, #1
   11ffc:	bne	12084 <__assert_fail@plt+0xc58>
   12000:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12004:	movw	r1, #0
   12008:	cmp	r0, r1
   1200c:	beq	12084 <__assert_fail@plt+0xc58>
   12010:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12014:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12018:	sub	r2, fp, #88	; 0x58
   1201c:	bl	18b64 <__assert_fail@plt+0x7738>
   12020:	str	r0, [fp, #-92]	; 0xffffffa4
   12024:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12028:	cmp	r0, #0
   1202c:	bgt	12070 <__assert_fail@plt+0xc44>
   12030:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12034:	cmp	r0, #0
   12038:	bne	1206c <__assert_fail@plt+0xc40>
   1203c:	bl	1130c <__errno_location@plt>
   12040:	ldr	r1, [r0]
   12044:	movw	r0, #63804	; 0xf93c
   12048:	movt	r0, #1
   1204c:	str	r1, [sp, #56]	; 0x38
   12050:	bl	112d0 <gettext@plt>
   12054:	movw	r1, #125	; 0x7d
   12058:	str	r0, [sp, #52]	; 0x34
   1205c:	mov	r0, r1
   12060:	ldr	r1, [sp, #56]	; 0x38
   12064:	ldr	r2, [sp, #52]	; 0x34
   12068:	bl	11258 <error@plt>
   1206c:	b	12080 <__assert_fail@plt+0xc54>
   12070:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12074:	str	r0, [fp, #-48]	; 0xffffffd0
   12078:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1207c:	str	r0, [fp, #-84]	; 0xffffffac
   12080:	b	12084 <__assert_fail@plt+0xc58>
   12084:	b	12088 <__assert_fail@plt+0xc5c>
   12088:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1208c:	bl	122d4 <__assert_fail@plt+0xea8>
   12090:	tst	r0, #1
   12094:	beq	120a8 <__assert_fail@plt+0xc7c>
   12098:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1209c:	movw	r1, #0
   120a0:	cmp	r0, r1
   120a4:	beq	120ec <__assert_fail@plt+0xcc0>
   120a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   120ac:	ldr	r1, [fp, #-84]	; 0xffffffac
   120b0:	bl	11204 <setgroups@plt>
   120b4:	cmp	r0, #0
   120b8:	beq	120ec <__assert_fail@plt+0xcc0>
   120bc:	bl	1130c <__errno_location@plt>
   120c0:	ldr	r1, [r0]
   120c4:	movw	r0, #63838	; 0xf95e
   120c8:	movt	r0, #1
   120cc:	str	r1, [sp, #48]	; 0x30
   120d0:	bl	112d0 <gettext@plt>
   120d4:	movw	r1, #125	; 0x7d
   120d8:	str	r0, [sp, #44]	; 0x2c
   120dc:	mov	r0, r1
   120e0:	ldr	r1, [sp, #48]	; 0x30
   120e4:	ldr	r2, [sp, #44]	; 0x2c
   120e8:	bl	11258 <error@plt>
   120ec:	ldr	r0, [fp, #-88]	; 0xffffffa8
   120f0:	bl	1277c <__assert_fail@plt+0x1350>
   120f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   120f8:	bl	1277c <__assert_fail@plt+0x1350>
   120fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12100:	bl	122f8 <__assert_fail@plt+0xecc>
   12104:	tst	r0, #1
   12108:	bne	1214c <__assert_fail@plt+0xd20>
   1210c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12110:	bl	11270 <setgid@plt>
   12114:	cmp	r0, #0
   12118:	beq	1214c <__assert_fail@plt+0xd20>
   1211c:	bl	1130c <__errno_location@plt>
   12120:	ldr	r1, [r0]
   12124:	movw	r0, #63872	; 0xf980
   12128:	movt	r0, #1
   1212c:	str	r1, [sp, #40]	; 0x28
   12130:	bl	112d0 <gettext@plt>
   12134:	movw	r1, #125	; 0x7d
   12138:	str	r0, [sp, #36]	; 0x24
   1213c:	mov	r0, r1
   12140:	ldr	r1, [sp, #40]	; 0x28
   12144:	ldr	r2, [sp, #36]	; 0x24
   12148:	bl	11258 <error@plt>
   1214c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12150:	bl	122d4 <__assert_fail@plt+0xea8>
   12154:	tst	r0, #1
   12158:	bne	1219c <__assert_fail@plt+0xd70>
   1215c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12160:	bl	113c0 <setuid@plt>
   12164:	cmp	r0, #0
   12168:	beq	1219c <__assert_fail@plt+0xd70>
   1216c:	bl	1130c <__errno_location@plt>
   12170:	ldr	r1, [r0]
   12174:	movw	r0, #63895	; 0xf997
   12178:	movt	r0, #1
   1217c:	str	r1, [sp, #32]
   12180:	bl	112d0 <gettext@plt>
   12184:	movw	r1, #125	; 0x7d
   12188:	str	r0, [sp, #28]
   1218c:	mov	r0, r1
   12190:	ldr	r1, [sp, #32]
   12194:	ldr	r2, [sp, #28]
   12198:	bl	11258 <error@plt>
   1219c:	ldr	r0, [fp, #-12]
   121a0:	ldr	r0, [r0]
   121a4:	ldr	r1, [fp, #-12]
   121a8:	bl	111b0 <execvp@plt>
   121ac:	str	r0, [sp, #24]
   121b0:	bl	1130c <__errno_location@plt>
   121b4:	ldr	r0, [r0]
   121b8:	cmp	r0, #2
   121bc:	movw	r0, #0
   121c0:	moveq	r0, #1
   121c4:	tst	r0, #1
   121c8:	movw	r0, #127	; 0x7f
   121cc:	moveq	r0, #126	; 0x7e
   121d0:	str	r0, [fp, #-96]	; 0xffffffa0
   121d4:	bl	1130c <__errno_location@plt>
   121d8:	ldr	r1, [r0]
   121dc:	movw	r0, #63917	; 0xf9ad
   121e0:	movt	r0, #1
   121e4:	str	r1, [sp, #20]
   121e8:	bl	112d0 <gettext@plt>
   121ec:	ldr	r1, [fp, #-12]
   121f0:	ldr	r1, [r1]
   121f4:	str	r0, [sp, #16]
   121f8:	mov	r0, r1
   121fc:	bl	14e18 <__assert_fail@plt+0x39ec>
   12200:	movw	r1, #0
   12204:	str	r0, [sp, #12]
   12208:	mov	r0, r1
   1220c:	ldr	r1, [sp, #20]
   12210:	ldr	r2, [sp, #16]
   12214:	ldr	r3, [sp, #12]
   12218:	bl	11258 <error@plt>
   1221c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   12220:	str	r0, [fp, #-4]
   12224:	ldr	r0, [fp, #-4]
   12228:	mov	sp, fp
   1222c:	pop	{fp, pc}
   12230:	sub	sp, sp, #4
   12234:	str	r0, [sp]
   12238:	ldr	r0, [sp]
   1223c:	cmp	r0, #1
   12240:	beq	12254 <__assert_fail@plt+0xe28>
   12244:	ldr	r0, [sp]
   12248:	movw	r1, #4388	; 0x1124
   1224c:	movt	r1, #3
   12250:	str	r0, [r1]
   12254:	add	sp, sp, #4
   12258:	bx	lr
   1225c:	push	{fp, lr}
   12260:	mov	fp, sp
   12264:	sub	sp, sp, #16
   12268:	str	r0, [fp, #-4]
   1226c:	ldr	r0, [fp, #-4]
   12270:	bl	113d8 <canonicalize_file_name@plt>
   12274:	str	r0, [sp, #8]
   12278:	ldr	r0, [sp, #8]
   1227c:	movw	r1, #0
   12280:	cmp	r0, r1
   12284:	movw	r0, #0
   12288:	str	r0, [sp]
   1228c:	beq	122b0 <__assert_fail@plt+0xe84>
   12290:	ldr	r1, [sp, #8]
   12294:	movw	r0, #19
   12298:	movt	r0, #2
   1229c:	bl	1115c <strcmp@plt>
   122a0:	cmp	r0, #0
   122a4:	movw	r0, #0
   122a8:	moveq	r0, #1
   122ac:	str	r0, [sp]
   122b0:	ldr	r0, [sp]
   122b4:	and	r0, r0, #1
   122b8:	strb	r0, [sp, #7]
   122bc:	ldr	r0, [sp, #8]
   122c0:	bl	1277c <__assert_fail@plt+0x1350>
   122c4:	ldrb	r0, [sp, #7]
   122c8:	and	r0, r0, #1
   122cc:	mov	sp, fp
   122d0:	pop	{fp, pc}
   122d4:	sub	sp, sp, #4
   122d8:	str	r0, [sp]
   122dc:	ldr	r0, [sp]
   122e0:	cmn	r0, #1
   122e4:	movw	r0, #0
   122e8:	moveq	r0, #1
   122ec:	and	r0, r0, #1
   122f0:	add	sp, sp, #4
   122f4:	bx	lr
   122f8:	sub	sp, sp, #4
   122fc:	str	r0, [sp]
   12300:	ldr	r0, [sp]
   12304:	cmn	r0, #1
   12308:	movw	r0, #0
   1230c:	moveq	r0, #1
   12310:	and	r0, r0, #1
   12314:	add	sp, sp, #4
   12318:	bx	lr
   1231c:	push	{fp, lr}
   12320:	mov	fp, sp
   12324:	sub	sp, sp, #88	; 0x58
   12328:	str	r0, [fp, #-4]
   1232c:	str	r1, [fp, #-8]
   12330:	str	r2, [fp, #-12]
   12334:	and	r0, r3, #1
   12338:	strb	r0, [fp, #-13]
   1233c:	movw	r0, #0
   12340:	str	r0, [fp, #-20]	; 0xffffffec
   12344:	str	r0, [fp, #-24]	; 0xffffffe8
   12348:	str	r0, [fp, #-28]	; 0xffffffe4
   1234c:	ldr	r0, [fp, #-4]
   12350:	bl	18adc <__assert_fail@plt+0x76b0>
   12354:	str	r0, [fp, #-32]	; 0xffffffe0
   12358:	movw	r0, #0
   1235c:	str	r0, [fp, #-40]	; 0xffffffd8
   12360:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12364:	movw	r1, #64286	; 0xfb1e
   12368:	movt	r1, #1
   1236c:	bl	11384 <strtok@plt>
   12370:	str	r0, [fp, #-36]	; 0xffffffdc
   12374:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12378:	movw	r1, #0
   1237c:	cmp	r0, r1
   12380:	beq	12554 <__assert_fail@plt+0x1128>
   12384:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12388:	movw	r1, #0
   1238c:	movw	r2, #10
   12390:	add	r3, sp, #32
   12394:	movw	ip, #63164	; 0xf6bc
   12398:	movt	ip, #1
   1239c:	str	ip, [sp]
   123a0:	bl	1a874 <__assert_fail@plt+0x9448>
   123a4:	cmp	r0, #0
   123a8:	bne	12458 <__assert_fail@plt+0x102c>
   123ac:	ldr	r0, [sp, #36]	; 0x24
   123b0:	cmp	r0, #0
   123b4:	bne	12458 <__assert_fail@plt+0x102c>
   123b8:	b	123bc <__assert_fail@plt+0xf90>
   123bc:	b	123c0 <__assert_fail@plt+0xf94>
   123c0:	bl	112b8 <__ctype_b_loc@plt>
   123c4:	ldr	r0, [r0]
   123c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   123cc:	ldrb	r1, [r1]
   123d0:	str	r0, [sp, #28]
   123d4:	mov	r0, r1
   123d8:	bl	12600 <__assert_fail@plt+0x11d4>
   123dc:	mov	r1, r0
   123e0:	ldr	r2, [sp, #28]
   123e4:	add	r0, r2, r0, lsl #1
   123e8:	ldrh	r0, [r0]
   123ec:	and	r0, r0, #8192	; 0x2000
   123f0:	cmp	r0, #0
   123f4:	beq	12408 <__assert_fail@plt+0xfdc>
   123f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   123fc:	add	r0, r0, #1
   12400:	str	r0, [fp, #-36]	; 0xffffffdc
   12404:	b	123c0 <__assert_fail@plt+0xf94>
   12408:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1240c:	ldrb	r0, [r0]
   12410:	cmp	r0, #43	; 0x2b
   12414:	beq	1244c <__assert_fail@plt+0x1020>
   12418:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1241c:	bl	11420 <getgrnam@plt>
   12420:	str	r0, [sp, #44]	; 0x2c
   12424:	ldr	r0, [sp, #44]	; 0x2c
   12428:	movw	r1, #0
   1242c:	cmp	r0, r1
   12430:	beq	12448 <__assert_fail@plt+0x101c>
   12434:	ldr	r0, [sp, #44]	; 0x2c
   12438:	ldr	r0, [r0, #8]
   1243c:	mov	r1, #0
   12440:	str	r1, [sp, #36]	; 0x24
   12444:	str	r0, [sp, #32]
   12448:	b	1244c <__assert_fail@plt+0x1020>
   1244c:	movw	r0, #1
   12450:	str	r0, [sp, #44]	; 0x2c
   12454:	b	1248c <__assert_fail@plt+0x1060>
   12458:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1245c:	bl	11420 <getgrnam@plt>
   12460:	str	r0, [sp, #44]	; 0x2c
   12464:	ldr	r0, [sp, #44]	; 0x2c
   12468:	movw	r1, #0
   1246c:	cmp	r0, r1
   12470:	beq	12488 <__assert_fail@plt+0x105c>
   12474:	ldr	r0, [sp, #44]	; 0x2c
   12478:	ldr	r0, [r0, #8]
   1247c:	mov	r1, #0
   12480:	str	r1, [sp, #36]	; 0x24
   12484:	str	r0, [sp, #32]
   12488:	b	1248c <__assert_fail@plt+0x1060>
   1248c:	ldr	r0, [sp, #44]	; 0x2c
   12490:	movw	r1, #0
   12494:	cmp	r0, r1
   12498:	bne	124fc <__assert_fail@plt+0x10d0>
   1249c:	mvn	r0, #0
   124a0:	str	r0, [fp, #-40]	; 0xffffffd8
   124a4:	ldrb	r0, [fp, #-13]
   124a8:	tst	r0, #1
   124ac:	beq	124f8 <__assert_fail@plt+0x10cc>
   124b0:	bl	1130c <__errno_location@plt>
   124b4:	ldr	r1, [r0]
   124b8:	movw	r0, #64288	; 0xfb20
   124bc:	movt	r0, #1
   124c0:	str	r1, [sp, #24]
   124c4:	bl	112d0 <gettext@plt>
   124c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   124cc:	str	r0, [sp, #20]
   124d0:	mov	r0, r1
   124d4:	bl	14e18 <__assert_fail@plt+0x39ec>
   124d8:	movw	r1, #0
   124dc:	str	r0, [sp, #16]
   124e0:	mov	r0, r1
   124e4:	ldr	r1, [sp, #24]
   124e8:	ldr	r2, [sp, #20]
   124ec:	ldr	r3, [sp, #16]
   124f0:	bl	11258 <error@plt>
   124f4:	b	1253c <__assert_fail@plt+0x1110>
   124f8:	b	12554 <__assert_fail@plt+0x1128>
   124fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12500:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12504:	cmp	r0, r1
   12508:	bne	12520 <__assert_fail@plt+0x10f4>
   1250c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12510:	sub	r1, fp, #24
   12514:	movw	r2, #4
   12518:	bl	15fb8 <__assert_fail@plt+0x4b8c>
   1251c:	str	r0, [fp, #-20]	; 0xffffffec
   12520:	ldr	r0, [sp, #32]
   12524:	ldr	r1, [fp, #-20]	; 0xffffffec
   12528:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1252c:	add	r3, r2, #1
   12530:	str	r3, [fp, #-28]	; 0xffffffe4
   12534:	add	r1, r1, r2, lsl #2
   12538:	str	r0, [r1]
   1253c:	movw	r0, #0
   12540:	movw	r1, #64286	; 0xfb1e
   12544:	movt	r1, #1
   12548:	bl	11384 <strtok@plt>
   1254c:	str	r0, [fp, #-36]	; 0xffffffdc
   12550:	b	12374 <__assert_fail@plt+0xf48>
   12554:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12558:	cmp	r0, #0
   1255c:	bne	125b4 <__assert_fail@plt+0x1188>
   12560:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12564:	cmp	r0, #0
   12568:	bne	125b4 <__assert_fail@plt+0x1188>
   1256c:	ldrb	r0, [fp, #-13]
   12570:	tst	r0, #1
   12574:	beq	125ac <__assert_fail@plt+0x1180>
   12578:	movw	r0, #64305	; 0xfb31
   1257c:	movt	r0, #1
   12580:	bl	112d0 <gettext@plt>
   12584:	ldr	r1, [fp, #-4]
   12588:	str	r0, [sp, #12]
   1258c:	mov	r0, r1
   12590:	bl	14e18 <__assert_fail@plt+0x39ec>
   12594:	movw	r1, #0
   12598:	str	r0, [sp, #8]
   1259c:	mov	r0, r1
   125a0:	ldr	r2, [sp, #12]
   125a4:	ldr	r3, [sp, #8]
   125a8:	bl	11258 <error@plt>
   125ac:	mvn	r0, #0
   125b0:	str	r0, [fp, #-40]	; 0xffffffd8
   125b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   125b8:	ldr	r1, [fp, #-8]
   125bc:	str	r0, [r1]
   125c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   125c4:	cmp	r0, #0
   125c8:	bne	125d8 <__assert_fail@plt+0x11ac>
   125cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   125d0:	ldr	r1, [fp, #-12]
   125d4:	str	r0, [r1]
   125d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   125dc:	bl	1277c <__assert_fail@plt+0x1350>
   125e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   125e4:	mov	sp, fp
   125e8:	pop	{fp, pc}
   125ec:	sub	sp, sp, #4
   125f0:	str	r0, [sp]
   125f4:	ldr	r0, [sp]
   125f8:	add	sp, sp, #4
   125fc:	bx	lr
   12600:	sub	sp, sp, #4
   12604:	strb	r0, [sp, #3]
   12608:	ldrb	r0, [sp, #3]
   1260c:	add	sp, sp, #4
   12610:	bx	lr
   12614:	sub	sp, sp, #4
   12618:	str	r0, [sp]
   1261c:	ldr	r0, [sp]
   12620:	movw	r1, #4504	; 0x1198
   12624:	movt	r1, #3
   12628:	str	r0, [r1]
   1262c:	add	sp, sp, #4
   12630:	bx	lr
   12634:	sub	sp, sp, #4
   12638:	and	r0, r0, #1
   1263c:	strb	r0, [sp, #3]
   12640:	ldrb	r0, [sp, #3]
   12644:	and	r0, r0, #1
   12648:	movw	r1, #4508	; 0x119c
   1264c:	movt	r1, #3
   12650:	strb	r0, [r1]
   12654:	add	sp, sp, #4
   12658:	bx	lr
   1265c:	push	{fp, lr}
   12660:	mov	fp, sp
   12664:	sub	sp, sp, #24
   12668:	movw	r0, #4492	; 0x118c
   1266c:	movt	r0, #3
   12670:	ldr	r0, [r0]
   12674:	bl	1ca44 <__assert_fail@plt+0xb618>
   12678:	cmp	r0, #0
   1267c:	beq	1274c <__assert_fail@plt+0x1320>
   12680:	movw	r0, #4508	; 0x119c
   12684:	movt	r0, #3
   12688:	ldrb	r0, [r0]
   1268c:	tst	r0, #1
   12690:	beq	126a4 <__assert_fail@plt+0x1278>
   12694:	bl	1130c <__errno_location@plt>
   12698:	ldr	r0, [r0]
   1269c:	cmp	r0, #32
   126a0:	beq	1274c <__assert_fail@plt+0x1320>
   126a4:	movw	r0, #64495	; 0xfbef
   126a8:	movt	r0, #1
   126ac:	bl	112d0 <gettext@plt>
   126b0:	str	r0, [fp, #-4]
   126b4:	movw	r0, #4504	; 0x1198
   126b8:	movt	r0, #3
   126bc:	ldr	r0, [r0]
   126c0:	movw	r1, #0
   126c4:	cmp	r0, r1
   126c8:	beq	12720 <__assert_fail@plt+0x12f4>
   126cc:	bl	1130c <__errno_location@plt>
   126d0:	ldr	r1, [r0]
   126d4:	movw	r0, #4504	; 0x1198
   126d8:	movt	r0, #3
   126dc:	ldr	r0, [r0]
   126e0:	str	r1, [fp, #-8]
   126e4:	bl	14b7c <__assert_fail@plt+0x3750>
   126e8:	ldr	r1, [fp, #-4]
   126ec:	movw	r2, #0
   126f0:	str	r0, [sp, #12]
   126f4:	mov	r0, r2
   126f8:	ldr	r2, [fp, #-8]
   126fc:	str	r1, [sp, #8]
   12700:	mov	r1, r2
   12704:	movw	r2, #64507	; 0xfbfb
   12708:	movt	r2, #1
   1270c:	ldr	r3, [sp, #12]
   12710:	ldr	ip, [sp, #8]
   12714:	str	ip, [sp]
   12718:	bl	11258 <error@plt>
   1271c:	b	1273c <__assert_fail@plt+0x1310>
   12720:	bl	1130c <__errno_location@plt>
   12724:	ldr	r1, [r0]
   12728:	ldr	r3, [fp, #-4]
   1272c:	movw	r0, #0
   12730:	movw	r2, #64511	; 0xfbff
   12734:	movt	r2, #1
   12738:	bl	11258 <error@plt>
   1273c:	movw	r0, #4388	; 0x1124
   12740:	movt	r0, #3
   12744:	ldr	r0, [r0]
   12748:	bl	11198 <_exit@plt>
   1274c:	movw	r0, #4488	; 0x1188
   12750:	movt	r0, #3
   12754:	ldr	r0, [r0]
   12758:	bl	1ca44 <__assert_fail@plt+0xb618>
   1275c:	cmp	r0, #0
   12760:	beq	12774 <__assert_fail@plt+0x1348>
   12764:	movw	r0, #4388	; 0x1124
   12768:	movt	r0, #3
   1276c:	ldr	r0, [r0]
   12770:	bl	11198 <_exit@plt>
   12774:	mov	sp, fp
   12778:	pop	{fp, pc}
   1277c:	push	{fp, lr}
   12780:	mov	fp, sp
   12784:	sub	sp, sp, #16
   12788:	str	r0, [fp, #-4]
   1278c:	bl	1130c <__errno_location@plt>
   12790:	ldr	r0, [r0]
   12794:	str	r0, [sp, #8]
   12798:	ldr	r0, [fp, #-4]
   1279c:	bl	1118c <free@plt>
   127a0:	ldr	r0, [sp, #8]
   127a4:	str	r0, [sp, #4]
   127a8:	bl	1130c <__errno_location@plt>
   127ac:	ldr	r1, [sp, #4]
   127b0:	str	r1, [r0]
   127b4:	mov	sp, fp
   127b8:	pop	{fp, pc}
   127bc:	push	{fp, lr}
   127c0:	mov	fp, sp
   127c4:	sub	sp, sp, #24
   127c8:	str	r0, [fp, #-4]
   127cc:	ldr	r0, [fp, #-4]
   127d0:	movw	r1, #0
   127d4:	cmp	r0, r1
   127d8:	bne	127fc <__assert_fail@plt+0x13d0>
   127dc:	movw	r0, #4488	; 0x1188
   127e0:	movt	r0, #3
   127e4:	ldr	r1, [r0]
   127e8:	movw	r0, #64514	; 0xfc02
   127ec:	movt	r0, #1
   127f0:	bl	113f0 <fputs@plt>
   127f4:	str	r0, [sp, #8]
   127f8:	bl	11408 <abort@plt>
   127fc:	ldr	r0, [fp, #-4]
   12800:	movw	r1, #47	; 0x2f
   12804:	bl	113a8 <strrchr@plt>
   12808:	str	r0, [fp, #-8]
   1280c:	ldr	r0, [fp, #-8]
   12810:	movw	r1, #0
   12814:	cmp	r0, r1
   12818:	beq	1282c <__assert_fail@plt+0x1400>
   1281c:	ldr	r0, [fp, #-8]
   12820:	add	r0, r0, #1
   12824:	str	r0, [sp, #4]
   12828:	b	12834 <__assert_fail@plt+0x1408>
   1282c:	ldr	r0, [fp, #-4]
   12830:	str	r0, [sp, #4]
   12834:	ldr	r0, [sp, #4]
   12838:	str	r0, [sp, #12]
   1283c:	ldr	r0, [sp, #12]
   12840:	ldr	r1, [fp, #-4]
   12844:	sub	r0, r0, r1
   12848:	cmp	r0, #7
   1284c:	blt	128b8 <__assert_fail@plt+0x148c>
   12850:	ldr	r0, [sp, #12]
   12854:	mvn	r1, #6
   12858:	add	r0, r0, r1
   1285c:	movw	r1, #64570	; 0xfc3a
   12860:	movt	r1, #1
   12864:	movw	r2, #7
   12868:	bl	113fc <strncmp@plt>
   1286c:	cmp	r0, #0
   12870:	bne	128b8 <__assert_fail@plt+0x148c>
   12874:	ldr	r0, [sp, #12]
   12878:	str	r0, [fp, #-4]
   1287c:	ldr	r0, [sp, #12]
   12880:	movw	r1, #64578	; 0xfc42
   12884:	movt	r1, #1
   12888:	movw	r2, #3
   1288c:	bl	113fc <strncmp@plt>
   12890:	cmp	r0, #0
   12894:	bne	128b4 <__assert_fail@plt+0x1488>
   12898:	ldr	r0, [sp, #12]
   1289c:	add	r0, r0, #3
   128a0:	str	r0, [fp, #-4]
   128a4:	ldr	r0, [fp, #-4]
   128a8:	movw	r1, #4472	; 0x1178
   128ac:	movt	r1, #3
   128b0:	str	r0, [r1]
   128b4:	b	128b8 <__assert_fail@plt+0x148c>
   128b8:	ldr	r0, [fp, #-4]
   128bc:	movw	r1, #4512	; 0x11a0
   128c0:	movt	r1, #3
   128c4:	str	r0, [r1]
   128c8:	ldr	r0, [fp, #-4]
   128cc:	movw	r1, #4476	; 0x117c
   128d0:	movt	r1, #3
   128d4:	str	r0, [r1]
   128d8:	mov	sp, fp
   128dc:	pop	{fp, pc}
   128e0:	push	{fp, lr}
   128e4:	mov	fp, sp
   128e8:	sub	sp, sp, #24
   128ec:	str	r0, [fp, #-4]
   128f0:	bl	1130c <__errno_location@plt>
   128f4:	ldr	r0, [r0]
   128f8:	str	r0, [fp, #-8]
   128fc:	ldr	r0, [fp, #-4]
   12900:	movw	r1, #0
   12904:	cmp	r0, r1
   12908:	beq	12918 <__assert_fail@plt+0x14ec>
   1290c:	ldr	r0, [fp, #-4]
   12910:	str	r0, [sp, #8]
   12914:	b	12928 <__assert_fail@plt+0x14fc>
   12918:	movw	r0, #4516	; 0x11a4
   1291c:	movt	r0, #3
   12920:	str	r0, [sp, #8]
   12924:	b	12928 <__assert_fail@plt+0x14fc>
   12928:	ldr	r0, [sp, #8]
   1292c:	movw	r1, #48	; 0x30
   12930:	bl	18a14 <__assert_fail@plt+0x75e8>
   12934:	str	r0, [sp, #12]
   12938:	ldr	r0, [fp, #-8]
   1293c:	str	r0, [sp, #4]
   12940:	bl	1130c <__errno_location@plt>
   12944:	ldr	r1, [sp, #4]
   12948:	str	r1, [r0]
   1294c:	ldr	r0, [sp, #12]
   12950:	mov	sp, fp
   12954:	pop	{fp, pc}
   12958:	sub	sp, sp, #8
   1295c:	str	r0, [sp, #4]
   12960:	ldr	r0, [sp, #4]
   12964:	movw	r1, #0
   12968:	cmp	r0, r1
   1296c:	beq	1297c <__assert_fail@plt+0x1550>
   12970:	ldr	r0, [sp, #4]
   12974:	str	r0, [sp]
   12978:	b	1298c <__assert_fail@plt+0x1560>
   1297c:	movw	r0, #4516	; 0x11a4
   12980:	movt	r0, #3
   12984:	str	r0, [sp]
   12988:	b	1298c <__assert_fail@plt+0x1560>
   1298c:	ldr	r0, [sp]
   12990:	ldr	r0, [r0]
   12994:	add	sp, sp, #8
   12998:	bx	lr
   1299c:	sub	sp, sp, #16
   129a0:	str	r0, [sp, #12]
   129a4:	str	r1, [sp, #8]
   129a8:	ldr	r0, [sp, #8]
   129ac:	ldr	r1, [sp, #12]
   129b0:	movw	r2, #0
   129b4:	cmp	r1, r2
   129b8:	str	r0, [sp, #4]
   129bc:	beq	129cc <__assert_fail@plt+0x15a0>
   129c0:	ldr	r0, [sp, #12]
   129c4:	str	r0, [sp]
   129c8:	b	129dc <__assert_fail@plt+0x15b0>
   129cc:	movw	r0, #4516	; 0x11a4
   129d0:	movt	r0, #3
   129d4:	str	r0, [sp]
   129d8:	b	129dc <__assert_fail@plt+0x15b0>
   129dc:	ldr	r0, [sp]
   129e0:	ldr	r1, [sp, #4]
   129e4:	str	r1, [r0]
   129e8:	add	sp, sp, #16
   129ec:	bx	lr
   129f0:	sub	sp, sp, #32
   129f4:	str	r0, [sp, #28]
   129f8:	strb	r1, [sp, #27]
   129fc:	str	r2, [sp, #20]
   12a00:	ldrb	r0, [sp, #27]
   12a04:	strb	r0, [sp, #19]
   12a08:	ldr	r0, [sp, #28]
   12a0c:	movw	r1, #0
   12a10:	cmp	r0, r1
   12a14:	beq	12a24 <__assert_fail@plt+0x15f8>
   12a18:	ldr	r0, [sp, #28]
   12a1c:	str	r0, [sp]
   12a20:	b	12a34 <__assert_fail@plt+0x1608>
   12a24:	movw	r0, #4516	; 0x11a4
   12a28:	movt	r0, #3
   12a2c:	str	r0, [sp]
   12a30:	b	12a34 <__assert_fail@plt+0x1608>
   12a34:	ldr	r0, [sp]
   12a38:	add	r0, r0, #8
   12a3c:	ldrb	r1, [sp, #19]
   12a40:	lsr	r1, r1, #5
   12a44:	add	r0, r0, r1, lsl #2
   12a48:	str	r0, [sp, #12]
   12a4c:	ldrb	r0, [sp, #19]
   12a50:	and	r0, r0, #31
   12a54:	str	r0, [sp, #8]
   12a58:	ldr	r0, [sp, #12]
   12a5c:	ldr	r0, [r0]
   12a60:	ldr	r1, [sp, #8]
   12a64:	lsr	r0, r0, r1
   12a68:	and	r0, r0, #1
   12a6c:	str	r0, [sp, #4]
   12a70:	ldr	r0, [sp, #20]
   12a74:	and	r0, r0, #1
   12a78:	ldr	r1, [sp, #4]
   12a7c:	eor	r0, r0, r1
   12a80:	ldr	r1, [sp, #8]
   12a84:	lsl	r0, r0, r1
   12a88:	ldr	r1, [sp, #12]
   12a8c:	ldr	r2, [r1]
   12a90:	eor	r0, r2, r0
   12a94:	str	r0, [r1]
   12a98:	ldr	r0, [sp, #4]
   12a9c:	add	sp, sp, #32
   12aa0:	bx	lr
   12aa4:	sub	sp, sp, #12
   12aa8:	str	r0, [sp, #8]
   12aac:	str	r1, [sp, #4]
   12ab0:	ldr	r0, [sp, #8]
   12ab4:	movw	r1, #0
   12ab8:	cmp	r0, r1
   12abc:	bne	12acc <__assert_fail@plt+0x16a0>
   12ac0:	movw	r0, #4516	; 0x11a4
   12ac4:	movt	r0, #3
   12ac8:	str	r0, [sp, #8]
   12acc:	ldr	r0, [sp, #8]
   12ad0:	ldr	r0, [r0, #4]
   12ad4:	str	r0, [sp]
   12ad8:	ldr	r0, [sp, #4]
   12adc:	ldr	r1, [sp, #8]
   12ae0:	str	r0, [r1, #4]
   12ae4:	ldr	r0, [sp]
   12ae8:	add	sp, sp, #12
   12aec:	bx	lr
   12af0:	push	{fp, lr}
   12af4:	mov	fp, sp
   12af8:	sub	sp, sp, #16
   12afc:	str	r0, [fp, #-4]
   12b00:	str	r1, [sp, #8]
   12b04:	str	r2, [sp, #4]
   12b08:	ldr	r0, [fp, #-4]
   12b0c:	movw	r1, #0
   12b10:	cmp	r0, r1
   12b14:	bne	12b24 <__assert_fail@plt+0x16f8>
   12b18:	movw	r0, #4516	; 0x11a4
   12b1c:	movt	r0, #3
   12b20:	str	r0, [fp, #-4]
   12b24:	ldr	r0, [fp, #-4]
   12b28:	movw	r1, #10
   12b2c:	str	r1, [r0]
   12b30:	ldr	r0, [sp, #8]
   12b34:	movw	r1, #0
   12b38:	cmp	r0, r1
   12b3c:	beq	12b50 <__assert_fail@plt+0x1724>
   12b40:	ldr	r0, [sp, #4]
   12b44:	movw	r1, #0
   12b48:	cmp	r0, r1
   12b4c:	bne	12b54 <__assert_fail@plt+0x1728>
   12b50:	bl	11408 <abort@plt>
   12b54:	ldr	r0, [sp, #8]
   12b58:	ldr	r1, [fp, #-4]
   12b5c:	str	r0, [r1, #40]	; 0x28
   12b60:	ldr	r0, [sp, #4]
   12b64:	ldr	r1, [fp, #-4]
   12b68:	str	r0, [r1, #44]	; 0x2c
   12b6c:	mov	sp, fp
   12b70:	pop	{fp, pc}
   12b74:	push	{r4, r5, r6, sl, fp, lr}
   12b78:	add	fp, sp, #16
   12b7c:	sub	sp, sp, #56	; 0x38
   12b80:	ldr	ip, [fp, #8]
   12b84:	str	r0, [fp, #-20]	; 0xffffffec
   12b88:	str	r1, [fp, #-24]	; 0xffffffe8
   12b8c:	str	r2, [fp, #-28]	; 0xffffffe4
   12b90:	str	r3, [fp, #-32]	; 0xffffffe0
   12b94:	ldr	r0, [fp, #8]
   12b98:	movw	r1, #0
   12b9c:	cmp	r0, r1
   12ba0:	beq	12bb0 <__assert_fail@plt+0x1784>
   12ba4:	ldr	r0, [fp, #8]
   12ba8:	str	r0, [sp, #24]
   12bac:	b	12bc0 <__assert_fail@plt+0x1794>
   12bb0:	movw	r0, #4516	; 0x11a4
   12bb4:	movt	r0, #3
   12bb8:	str	r0, [sp, #24]
   12bbc:	b	12bc0 <__assert_fail@plt+0x1794>
   12bc0:	ldr	r0, [sp, #24]
   12bc4:	str	r0, [sp, #36]	; 0x24
   12bc8:	bl	1130c <__errno_location@plt>
   12bcc:	ldr	r0, [r0]
   12bd0:	str	r0, [sp, #32]
   12bd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   12bd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12bdc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12be0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12be4:	ldr	ip, [sp, #36]	; 0x24
   12be8:	ldr	ip, [ip]
   12bec:	ldr	lr, [sp, #36]	; 0x24
   12bf0:	ldr	lr, [lr, #4]
   12bf4:	ldr	r4, [sp, #36]	; 0x24
   12bf8:	add	r4, r4, #8
   12bfc:	ldr	r5, [sp, #36]	; 0x24
   12c00:	ldr	r5, [r5, #40]	; 0x28
   12c04:	ldr	r6, [sp, #36]	; 0x24
   12c08:	ldr	r6, [r6, #44]	; 0x2c
   12c0c:	str	ip, [sp]
   12c10:	str	lr, [sp, #4]
   12c14:	str	r4, [sp, #8]
   12c18:	str	r5, [sp, #12]
   12c1c:	str	r6, [sp, #16]
   12c20:	bl	12c48 <__assert_fail@plt+0x181c>
   12c24:	str	r0, [sp, #28]
   12c28:	ldr	r0, [sp, #32]
   12c2c:	str	r0, [sp, #20]
   12c30:	bl	1130c <__errno_location@plt>
   12c34:	ldr	r1, [sp, #20]
   12c38:	str	r1, [r0]
   12c3c:	ldr	r0, [sp, #28]
   12c40:	sub	sp, fp, #16
   12c44:	pop	{r4, r5, r6, sl, fp, pc}
   12c48:	push	{r4, r5, r6, sl, fp, lr}
   12c4c:	add	fp, sp, #16
   12c50:	sub	sp, sp, #160	; 0xa0
   12c54:	ldr	ip, [fp, #24]
   12c58:	ldr	lr, [fp, #20]
   12c5c:	ldr	r4, [fp, #16]
   12c60:	ldr	r5, [fp, #12]
   12c64:	ldr	r6, [fp, #8]
   12c68:	str	r0, [fp, #-24]	; 0xffffffe8
   12c6c:	str	r1, [fp, #-28]	; 0xffffffe4
   12c70:	str	r2, [fp, #-32]	; 0xffffffe0
   12c74:	str	r3, [fp, #-36]	; 0xffffffdc
   12c78:	movw	r0, #0
   12c7c:	str	r0, [fp, #-44]	; 0xffffffd4
   12c80:	str	r0, [fp, #-48]	; 0xffffffd0
   12c84:	str	r0, [fp, #-52]	; 0xffffffcc
   12c88:	str	r0, [fp, #-56]	; 0xffffffc8
   12c8c:	movw	r0, #0
   12c90:	strb	r0, [fp, #-57]	; 0xffffffc7
   12c94:	str	ip, [sp, #72]	; 0x48
   12c98:	str	lr, [sp, #68]	; 0x44
   12c9c:	str	r4, [sp, #64]	; 0x40
   12ca0:	str	r5, [sp, #60]	; 0x3c
   12ca4:	str	r6, [sp, #56]	; 0x38
   12ca8:	bl	1121c <__ctype_get_mb_cur_max@plt>
   12cac:	cmp	r0, #1
   12cb0:	movw	r0, #0
   12cb4:	moveq	r0, #1
   12cb8:	and	r0, r0, #1
   12cbc:	strb	r0, [fp, #-58]	; 0xffffffc6
   12cc0:	ldr	r0, [fp, #12]
   12cc4:	and	r0, r0, #2
   12cc8:	cmp	r0, #0
   12ccc:	movw	r0, #0
   12cd0:	movne	r0, #1
   12cd4:	and	r0, r0, #1
   12cd8:	strb	r0, [fp, #-59]	; 0xffffffc5
   12cdc:	movw	r0, #0
   12ce0:	strb	r0, [fp, #-60]	; 0xffffffc4
   12ce4:	strb	r0, [fp, #-61]	; 0xffffffc3
   12ce8:	movw	r0, #1
   12cec:	strb	r0, [fp, #-62]	; 0xffffffc2
   12cf0:	ldr	r0, [fp, #8]
   12cf4:	cmp	r0, #10
   12cf8:	str	r0, [sp, #52]	; 0x34
   12cfc:	bhi	12f24 <__assert_fail@plt+0x1af8>
   12d00:	add	r0, pc, #8
   12d04:	ldr	r1, [sp, #52]	; 0x34
   12d08:	ldr	r0, [r0, r1, lsl #2]
   12d0c:	mov	pc, r0
   12d10:	andeq	r2, r1, r8, lsl pc
   12d14:	muleq	r1, r4, lr
   12d18:			; <UNDEFINED> instruction: 0x00012eb4
   12d1c:	andeq	r2, r1, ip, lsl #29
   12d20:	muleq	r1, ip, lr
   12d24:	andeq	r2, r1, ip, asr #26
   12d28:	andeq	r2, r1, ip, lsr sp
   12d2c:			; <UNDEFINED> instruction: 0x00012db0
   12d30:	andeq	r2, r1, r4, asr #27
   12d34:	andeq	r2, r1, r4, asr #27
   12d38:	andeq	r2, r1, r4, asr #27
   12d3c:	movw	r0, #5
   12d40:	str	r0, [fp, #8]
   12d44:	movw	r0, #1
   12d48:	strb	r0, [fp, #-59]	; 0xffffffc5
   12d4c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12d50:	tst	r0, #1
   12d54:	bne	12d90 <__assert_fail@plt+0x1964>
   12d58:	b	12d5c <__assert_fail@plt+0x1930>
   12d5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12d60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12d64:	cmp	r0, r1
   12d68:	bcs	12d80 <__assert_fail@plt+0x1954>
   12d6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12d70:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12d74:	add	r0, r0, r1
   12d78:	movw	r1, #34	; 0x22
   12d7c:	strb	r1, [r0]
   12d80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12d84:	add	r0, r0, #1
   12d88:	str	r0, [fp, #-44]	; 0xffffffd4
   12d8c:	b	12d90 <__assert_fail@plt+0x1964>
   12d90:	movw	r0, #1
   12d94:	strb	r0, [fp, #-57]	; 0xffffffc7
   12d98:	movw	r0, #64658	; 0xfc92
   12d9c:	movt	r0, #1
   12da0:	str	r0, [fp, #-52]	; 0xffffffcc
   12da4:	movw	r0, #1
   12da8:	str	r0, [fp, #-56]	; 0xffffffc8
   12dac:	b	12f28 <__assert_fail@plt+0x1afc>
   12db0:	movw	r0, #1
   12db4:	strb	r0, [fp, #-57]	; 0xffffffc7
   12db8:	movw	r0, #0
   12dbc:	strb	r0, [fp, #-59]	; 0xffffffc5
   12dc0:	b	12f28 <__assert_fail@plt+0x1afc>
   12dc4:	ldr	r0, [fp, #8]
   12dc8:	cmp	r0, #10
   12dcc:	beq	12df8 <__assert_fail@plt+0x19cc>
   12dd0:	ldr	r1, [fp, #8]
   12dd4:	movw	r0, #64660	; 0xfc94
   12dd8:	movt	r0, #1
   12ddc:	bl	14e3c <__assert_fail@plt+0x3a10>
   12de0:	str	r0, [fp, #20]
   12de4:	ldr	r1, [fp, #8]
   12de8:	movw	r0, #64662	; 0xfc96
   12dec:	movt	r0, #1
   12df0:	bl	14e3c <__assert_fail@plt+0x3a10>
   12df4:	str	r0, [fp, #24]
   12df8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12dfc:	tst	r0, #1
   12e00:	bne	12e6c <__assert_fail@plt+0x1a40>
   12e04:	ldr	r0, [fp, #20]
   12e08:	str	r0, [fp, #-52]	; 0xffffffcc
   12e0c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12e10:	ldrsb	r0, [r0]
   12e14:	cmp	r0, #0
   12e18:	beq	12e68 <__assert_fail@plt+0x1a3c>
   12e1c:	b	12e20 <__assert_fail@plt+0x19f4>
   12e20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12e24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12e28:	cmp	r0, r1
   12e2c:	bcs	12e48 <__assert_fail@plt+0x1a1c>
   12e30:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12e34:	ldrb	r0, [r0]
   12e38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12e3c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12e40:	add	r1, r1, r2
   12e44:	strb	r0, [r1]
   12e48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12e4c:	add	r0, r0, #1
   12e50:	str	r0, [fp, #-44]	; 0xffffffd4
   12e54:	b	12e58 <__assert_fail@plt+0x1a2c>
   12e58:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12e5c:	add	r0, r0, #1
   12e60:	str	r0, [fp, #-52]	; 0xffffffcc
   12e64:	b	12e0c <__assert_fail@plt+0x19e0>
   12e68:	b	12e6c <__assert_fail@plt+0x1a40>
   12e6c:	movw	r0, #1
   12e70:	strb	r0, [fp, #-57]	; 0xffffffc7
   12e74:	ldr	r0, [fp, #24]
   12e78:	str	r0, [fp, #-52]	; 0xffffffcc
   12e7c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12e80:	bl	112e8 <strlen@plt>
   12e84:	str	r0, [fp, #-56]	; 0xffffffc8
   12e88:	b	12f28 <__assert_fail@plt+0x1afc>
   12e8c:	movw	r0, #1
   12e90:	strb	r0, [fp, #-57]	; 0xffffffc7
   12e94:	movw	r0, #1
   12e98:	strb	r0, [fp, #-59]	; 0xffffffc5
   12e9c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12ea0:	tst	r0, #1
   12ea4:	bne	12eb0 <__assert_fail@plt+0x1a84>
   12ea8:	movw	r0, #1
   12eac:	strb	r0, [fp, #-57]	; 0xffffffc7
   12eb0:	b	12eb4 <__assert_fail@plt+0x1a88>
   12eb4:	movw	r0, #2
   12eb8:	str	r0, [fp, #8]
   12ebc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   12ec0:	tst	r0, #1
   12ec4:	bne	12f00 <__assert_fail@plt+0x1ad4>
   12ec8:	b	12ecc <__assert_fail@plt+0x1aa0>
   12ecc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12ed0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12ed4:	cmp	r0, r1
   12ed8:	bcs	12ef0 <__assert_fail@plt+0x1ac4>
   12edc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12ee0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12ee4:	add	r0, r0, r1
   12ee8:	movw	r1, #39	; 0x27
   12eec:	strb	r1, [r0]
   12ef0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12ef4:	add	r0, r0, #1
   12ef8:	str	r0, [fp, #-44]	; 0xffffffd4
   12efc:	b	12f00 <__assert_fail@plt+0x1ad4>
   12f00:	movw	r0, #64662	; 0xfc96
   12f04:	movt	r0, #1
   12f08:	str	r0, [fp, #-52]	; 0xffffffcc
   12f0c:	movw	r0, #1
   12f10:	str	r0, [fp, #-56]	; 0xffffffc8
   12f14:	b	12f28 <__assert_fail@plt+0x1afc>
   12f18:	movw	r0, #0
   12f1c:	strb	r0, [fp, #-59]	; 0xffffffc5
   12f20:	b	12f28 <__assert_fail@plt+0x1afc>
   12f24:	bl	11408 <abort@plt>
   12f28:	movw	r0, #0
   12f2c:	str	r0, [fp, #-40]	; 0xffffffd8
   12f30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12f34:	cmn	r0, #1
   12f38:	bne	12f64 <__assert_fail@plt+0x1b38>
   12f3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f40:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12f44:	add	r0, r0, r1
   12f48:	ldrb	r0, [r0]
   12f4c:	cmp	r0, #0
   12f50:	movw	r0, #0
   12f54:	moveq	r0, #1
   12f58:	and	r0, r0, #1
   12f5c:	str	r0, [sp, #48]	; 0x30
   12f60:	b	12f80 <__assert_fail@plt+0x1b54>
   12f64:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12f68:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12f6c:	cmp	r0, r1
   12f70:	movw	r0, #0
   12f74:	moveq	r0, #1
   12f78:	and	r0, r0, #1
   12f7c:	str	r0, [sp, #48]	; 0x30
   12f80:	ldr	r0, [sp, #48]	; 0x30
   12f84:	cmp	r0, #0
   12f88:	movw	r0, #0
   12f8c:	movne	r0, #1
   12f90:	mvn	r1, #0
   12f94:	eor	r0, r0, r1
   12f98:	tst	r0, #1
   12f9c:	beq	14188 <__assert_fail@plt+0x2d5c>
   12fa0:	movw	r0, #0
   12fa4:	strb	r0, [fp, #-65]	; 0xffffffbf
   12fa8:	strb	r0, [fp, #-66]	; 0xffffffbe
   12fac:	strb	r0, [fp, #-67]	; 0xffffffbd
   12fb0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12fb4:	tst	r0, #1
   12fb8:	beq	13064 <__assert_fail@plt+0x1c38>
   12fbc:	ldr	r0, [fp, #8]
   12fc0:	cmp	r0, #2
   12fc4:	beq	13064 <__assert_fail@plt+0x1c38>
   12fc8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12fcc:	cmp	r0, #0
   12fd0:	beq	13064 <__assert_fail@plt+0x1c38>
   12fd4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12fd8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12fdc:	add	r0, r0, r1
   12fe0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12fe4:	cmn	r1, #1
   12fe8:	str	r0, [sp, #44]	; 0x2c
   12fec:	bne	13014 <__assert_fail@plt+0x1be8>
   12ff0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12ff4:	movw	r1, #1
   12ff8:	cmp	r1, r0
   12ffc:	bcs	13014 <__assert_fail@plt+0x1be8>
   13000:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13004:	bl	112e8 <strlen@plt>
   13008:	str	r0, [fp, #-36]	; 0xffffffdc
   1300c:	str	r0, [sp, #40]	; 0x28
   13010:	b	1301c <__assert_fail@plt+0x1bf0>
   13014:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13018:	str	r0, [sp, #40]	; 0x28
   1301c:	ldr	r0, [sp, #40]	; 0x28
   13020:	ldr	r1, [sp, #44]	; 0x2c
   13024:	cmp	r1, r0
   13028:	bhi	13064 <__assert_fail@plt+0x1c38>
   1302c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13030:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13034:	add	r0, r0, r1
   13038:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1303c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13040:	bl	111c8 <memcmp@plt>
   13044:	cmp	r0, #0
   13048:	bne	13064 <__assert_fail@plt+0x1c38>
   1304c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13050:	tst	r0, #1
   13054:	beq	1305c <__assert_fail@plt+0x1c30>
   13058:	b	14308 <__assert_fail@plt+0x2edc>
   1305c:	movw	r0, #1
   13060:	strb	r0, [fp, #-65]	; 0xffffffbf
   13064:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13068:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1306c:	ldrb	r0, [r0, r1]
   13070:	strb	r0, [fp, #-63]	; 0xffffffc1
   13074:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13078:	mov	r1, r0
   1307c:	cmp	r0, #126	; 0x7e
   13080:	str	r1, [sp, #36]	; 0x24
   13084:	bhi	138f4 <__assert_fail@plt+0x24c8>
   13088:	add	r0, pc, #8
   1308c:	ldr	r1, [sp, #36]	; 0x24
   13090:	ldr	r0, [r0, r1, lsl #2]
   13094:	mov	pc, r0
   13098:	muleq	r1, r4, r2
   1309c:	strdeq	r3, [r1], -r4
   130a0:	strdeq	r3, [r1], -r4
   130a4:	strdeq	r3, [r1], -r4
   130a8:	strdeq	r3, [r1], -r4
   130ac:	strdeq	r3, [r1], -r4
   130b0:	strdeq	r3, [r1], -r4
   130b4:	muleq	r1, ip, r6
   130b8:	andeq	r3, r1, r8, lsr #13
   130bc:	ldrdeq	r3, [r1], -r8
   130c0:	andeq	r3, r1, r0, asr #13
   130c4:	andeq	r3, r1, r4, ror #13
   130c8:			; <UNDEFINED> instruction: 0x000136b4
   130cc:	andeq	r3, r1, ip, asr #13
   130d0:	strdeq	r3, [r1], -r4
   130d4:	strdeq	r3, [r1], -r4
   130d8:	strdeq	r3, [r1], -r4
   130dc:	strdeq	r3, [r1], -r4
   130e0:	strdeq	r3, [r1], -r4
   130e4:	strdeq	r3, [r1], -r4
   130e8:	strdeq	r3, [r1], -r4
   130ec:	strdeq	r3, [r1], -r4
   130f0:	strdeq	r3, [r1], -r4
   130f4:	strdeq	r3, [r1], -r4
   130f8:	strdeq	r3, [r1], -r4
   130fc:	strdeq	r3, [r1], -r4
   13100:	strdeq	r3, [r1], -r4
   13104:	strdeq	r3, [r1], -r4
   13108:	strdeq	r3, [r1], -r4
   1310c:	strdeq	r3, [r1], -r4
   13110:	strdeq	r3, [r1], -r4
   13114:	strdeq	r3, [r1], -r4
   13118:	andeq	r3, r1, r8, asr #15
   1311c:	ldrdeq	r3, [r1], -r0
   13120:	ldrdeq	r3, [r1], -r0
   13124:			; <UNDEFINED> instruction: 0x000137b4
   13128:	ldrdeq	r3, [r1], -r0
   1312c:	andeq	r3, r1, r8, ror #17
   13130:	ldrdeq	r3, [r1], -r0
   13134:	strdeq	r3, [r1], -r0
   13138:	ldrdeq	r3, [r1], -r0
   1313c:	ldrdeq	r3, [r1], -r0
   13140:	ldrdeq	r3, [r1], -r0
   13144:	andeq	r3, r1, r8, ror #17
   13148:	andeq	r3, r1, r8, ror #17
   1314c:	andeq	r3, r1, r8, ror #17
   13150:	andeq	r3, r1, r8, ror #17
   13154:	andeq	r3, r1, r8, ror #17
   13158:	andeq	r3, r1, r8, ror #17
   1315c:	andeq	r3, r1, r8, ror #17
   13160:	andeq	r3, r1, r8, ror #17
   13164:	andeq	r3, r1, r8, ror #17
   13168:	andeq	r3, r1, r8, ror #17
   1316c:	andeq	r3, r1, r8, ror #17
   13170:	andeq	r3, r1, r8, ror #17
   13174:	andeq	r3, r1, r8, ror #17
   13178:	andeq	r3, r1, r8, ror #17
   1317c:	andeq	r3, r1, r8, ror #17
   13180:	andeq	r3, r1, r8, ror #17
   13184:	ldrdeq	r3, [r1], -r0
   13188:	ldrdeq	r3, [r1], -r0
   1318c:	ldrdeq	r3, [r1], -r0
   13190:	ldrdeq	r3, [r1], -r0
   13194:	andeq	r3, r1, r0, lsr #9
   13198:	strdeq	r3, [r1], -r4
   1319c:	andeq	r3, r1, r8, ror #17
   131a0:	andeq	r3, r1, r8, ror #17
   131a4:	andeq	r3, r1, r8, ror #17
   131a8:	andeq	r3, r1, r8, ror #17
   131ac:	andeq	r3, r1, r8, ror #17
   131b0:	andeq	r3, r1, r8, ror #17
   131b4:	andeq	r3, r1, r8, ror #17
   131b8:	andeq	r3, r1, r8, ror #17
   131bc:	andeq	r3, r1, r8, ror #17
   131c0:	andeq	r3, r1, r8, ror #17
   131c4:	andeq	r3, r1, r8, ror #17
   131c8:	andeq	r3, r1, r8, ror #17
   131cc:	andeq	r3, r1, r8, ror #17
   131d0:	andeq	r3, r1, r8, ror #17
   131d4:	andeq	r3, r1, r8, ror #17
   131d8:	andeq	r3, r1, r8, ror #17
   131dc:	andeq	r3, r1, r8, ror #17
   131e0:	andeq	r3, r1, r8, ror #17
   131e4:	andeq	r3, r1, r8, ror #17
   131e8:	andeq	r3, r1, r8, ror #17
   131ec:	andeq	r3, r1, r8, ror #17
   131f0:	andeq	r3, r1, r8, ror #17
   131f4:	andeq	r3, r1, r8, ror #17
   131f8:	andeq	r3, r1, r8, ror #17
   131fc:	andeq	r3, r1, r8, ror #17
   13200:	andeq	r3, r1, r8, ror #17
   13204:	ldrdeq	r3, [r1], -r0
   13208:	strdeq	r3, [r1], -r0
   1320c:	andeq	r3, r1, r8, ror #17
   13210:	ldrdeq	r3, [r1], -r0
   13214:	andeq	r3, r1, r8, ror #17
   13218:	ldrdeq	r3, [r1], -r0
   1321c:	andeq	r3, r1, r8, ror #17
   13220:	andeq	r3, r1, r8, ror #17
   13224:	andeq	r3, r1, r8, ror #17
   13228:	andeq	r3, r1, r8, ror #17
   1322c:	andeq	r3, r1, r8, ror #17
   13230:	andeq	r3, r1, r8, ror #17
   13234:	andeq	r3, r1, r8, ror #17
   13238:	andeq	r3, r1, r8, ror #17
   1323c:	andeq	r3, r1, r8, ror #17
   13240:	andeq	r3, r1, r8, ror #17
   13244:	andeq	r3, r1, r8, ror #17
   13248:	andeq	r3, r1, r8, ror #17
   1324c:	andeq	r3, r1, r8, ror #17
   13250:	andeq	r3, r1, r8, ror #17
   13254:	andeq	r3, r1, r8, ror #17
   13258:	andeq	r3, r1, r8, ror #17
   1325c:	andeq	r3, r1, r8, ror #17
   13260:	andeq	r3, r1, r8, ror #17
   13264:	andeq	r3, r1, r8, ror #17
   13268:	andeq	r3, r1, r8, ror #17
   1326c:	andeq	r3, r1, r8, ror #17
   13270:	andeq	r3, r1, r8, ror #17
   13274:	andeq	r3, r1, r8, ror #17
   13278:	andeq	r3, r1, r8, ror #17
   1327c:	andeq	r3, r1, r8, ror #17
   13280:	andeq	r3, r1, r8, ror #17
   13284:	andeq	r3, r1, r0, lsl #15
   13288:	ldrdeq	r3, [r1], -r0
   1328c:	andeq	r3, r1, r0, lsl #15
   13290:			; <UNDEFINED> instruction: 0x000137b4
   13294:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13298:	tst	r0, #1
   1329c:	beq	13484 <__assert_fail@plt+0x2058>
   132a0:	b	132a4 <__assert_fail@plt+0x1e78>
   132a4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   132a8:	tst	r0, #1
   132ac:	beq	132b4 <__assert_fail@plt+0x1e88>
   132b0:	b	14308 <__assert_fail@plt+0x2edc>
   132b4:	movw	r0, #1
   132b8:	strb	r0, [fp, #-66]	; 0xffffffbe
   132bc:	ldr	r0, [fp, #8]
   132c0:	cmp	r0, #2
   132c4:	bne	13378 <__assert_fail@plt+0x1f4c>
   132c8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   132cc:	tst	r0, #1
   132d0:	bne	13378 <__assert_fail@plt+0x1f4c>
   132d4:	b	132d8 <__assert_fail@plt+0x1eac>
   132d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   132dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   132e0:	cmp	r0, r1
   132e4:	bcs	132fc <__assert_fail@plt+0x1ed0>
   132e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   132ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   132f0:	add	r0, r0, r1
   132f4:	movw	r1, #39	; 0x27
   132f8:	strb	r1, [r0]
   132fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13300:	add	r0, r0, #1
   13304:	str	r0, [fp, #-44]	; 0xffffffd4
   13308:	b	1330c <__assert_fail@plt+0x1ee0>
   1330c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13310:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13314:	cmp	r0, r1
   13318:	bcs	13330 <__assert_fail@plt+0x1f04>
   1331c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13320:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13324:	add	r0, r0, r1
   13328:	movw	r1, #36	; 0x24
   1332c:	strb	r1, [r0]
   13330:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13334:	add	r0, r0, #1
   13338:	str	r0, [fp, #-44]	; 0xffffffd4
   1333c:	b	13340 <__assert_fail@plt+0x1f14>
   13340:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13344:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13348:	cmp	r0, r1
   1334c:	bcs	13364 <__assert_fail@plt+0x1f38>
   13350:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13354:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13358:	add	r0, r0, r1
   1335c:	movw	r1, #39	; 0x27
   13360:	strb	r1, [r0]
   13364:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13368:	add	r0, r0, #1
   1336c:	str	r0, [fp, #-44]	; 0xffffffd4
   13370:	movw	r0, #1
   13374:	strb	r0, [fp, #-60]	; 0xffffffc4
   13378:	b	1337c <__assert_fail@plt+0x1f50>
   1337c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13380:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13384:	cmp	r0, r1
   13388:	bcs	133a0 <__assert_fail@plt+0x1f74>
   1338c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13390:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13394:	add	r0, r0, r1
   13398:	movw	r1, #92	; 0x5c
   1339c:	strb	r1, [r0]
   133a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   133a4:	add	r0, r0, #1
   133a8:	str	r0, [fp, #-44]	; 0xffffffd4
   133ac:	b	133b0 <__assert_fail@plt+0x1f84>
   133b0:	ldr	r0, [fp, #8]
   133b4:	cmp	r0, #2
   133b8:	beq	13478 <__assert_fail@plt+0x204c>
   133bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   133c0:	add	r0, r0, #1
   133c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   133c8:	cmp	r0, r1
   133cc:	bcs	13478 <__assert_fail@plt+0x204c>
   133d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   133d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   133d8:	add	r1, r1, #1
   133dc:	add	r0, r0, r1
   133e0:	ldrb	r0, [r0]
   133e4:	movw	r1, #48	; 0x30
   133e8:	cmp	r1, r0
   133ec:	bgt	13478 <__assert_fail@plt+0x204c>
   133f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   133f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   133f8:	add	r1, r1, #1
   133fc:	add	r0, r0, r1
   13400:	ldrb	r0, [r0]
   13404:	cmp	r0, #57	; 0x39
   13408:	bgt	13478 <__assert_fail@plt+0x204c>
   1340c:	b	13410 <__assert_fail@plt+0x1fe4>
   13410:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13414:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13418:	cmp	r0, r1
   1341c:	bcs	13434 <__assert_fail@plt+0x2008>
   13420:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13424:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13428:	add	r0, r0, r1
   1342c:	movw	r1, #48	; 0x30
   13430:	strb	r1, [r0]
   13434:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13438:	add	r0, r0, #1
   1343c:	str	r0, [fp, #-44]	; 0xffffffd4
   13440:	b	13444 <__assert_fail@plt+0x2018>
   13444:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13448:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1344c:	cmp	r0, r1
   13450:	bcs	13468 <__assert_fail@plt+0x203c>
   13454:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13458:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1345c:	add	r0, r0, r1
   13460:	movw	r1, #48	; 0x30
   13464:	strb	r1, [r0]
   13468:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1346c:	add	r0, r0, #1
   13470:	str	r0, [fp, #-44]	; 0xffffffd4
   13474:	b	13478 <__assert_fail@plt+0x204c>
   13478:	movw	r0, #48	; 0x30
   1347c:	strb	r0, [fp, #-63]	; 0xffffffc1
   13480:	b	1349c <__assert_fail@plt+0x2070>
   13484:	ldr	r0, [fp, #12]
   13488:	and	r0, r0, #1
   1348c:	cmp	r0, #0
   13490:	beq	13498 <__assert_fail@plt+0x206c>
   13494:	b	14178 <__assert_fail@plt+0x2d4c>
   13498:	b	1349c <__assert_fail@plt+0x2070>
   1349c:	b	13f14 <__assert_fail@plt+0x2ae8>
   134a0:	ldr	r0, [fp, #8]
   134a4:	cmp	r0, #2
   134a8:	str	r0, [sp, #32]
   134ac:	beq	134c4 <__assert_fail@plt+0x2098>
   134b0:	b	134b4 <__assert_fail@plt+0x2088>
   134b4:	ldr	r0, [sp, #32]
   134b8:	cmp	r0, #5
   134bc:	beq	134d8 <__assert_fail@plt+0x20ac>
   134c0:	b	13694 <__assert_fail@plt+0x2268>
   134c4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   134c8:	tst	r0, #1
   134cc:	beq	134d4 <__assert_fail@plt+0x20a8>
   134d0:	b	14308 <__assert_fail@plt+0x2edc>
   134d4:	b	13698 <__assert_fail@plt+0x226c>
   134d8:	ldr	r0, [fp, #12]
   134dc:	and	r0, r0, #4
   134e0:	cmp	r0, #0
   134e4:	beq	13690 <__assert_fail@plt+0x2264>
   134e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   134ec:	add	r0, r0, #2
   134f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   134f4:	cmp	r0, r1
   134f8:	bcs	13690 <__assert_fail@plt+0x2264>
   134fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13500:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13504:	add	r1, r1, #1
   13508:	add	r0, r0, r1
   1350c:	ldrb	r0, [r0]
   13510:	cmp	r0, #63	; 0x3f
   13514:	bne	13690 <__assert_fail@plt+0x2264>
   13518:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1351c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13520:	add	r0, r1, r0
   13524:	ldrb	r0, [r0, #2]
   13528:	mov	r1, r0
   1352c:	cmp	r0, #33	; 0x21
   13530:	str	r1, [sp, #28]
   13534:	beq	13584 <__assert_fail@plt+0x2158>
   13538:	b	1353c <__assert_fail@plt+0x2110>
   1353c:	ldr	r0, [sp, #28]
   13540:	sub	r1, r0, #39	; 0x27
   13544:	cmp	r1, #3
   13548:	bcc	13584 <__assert_fail@plt+0x2158>
   1354c:	b	13550 <__assert_fail@plt+0x2124>
   13550:	ldr	r0, [sp, #28]
   13554:	cmp	r0, #45	; 0x2d
   13558:	beq	13584 <__assert_fail@plt+0x2158>
   1355c:	b	13560 <__assert_fail@plt+0x2134>
   13560:	ldr	r0, [sp, #28]
   13564:	cmp	r0, #47	; 0x2f
   13568:	beq	13584 <__assert_fail@plt+0x2158>
   1356c:	b	13570 <__assert_fail@plt+0x2144>
   13570:	ldr	r0, [sp, #28]
   13574:	sub	r1, r0, #60	; 0x3c
   13578:	cmp	r1, #2
   1357c:	bhi	13688 <__assert_fail@plt+0x225c>
   13580:	b	13584 <__assert_fail@plt+0x2158>
   13584:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13588:	tst	r0, #1
   1358c:	beq	13594 <__assert_fail@plt+0x2168>
   13590:	b	14308 <__assert_fail@plt+0x2edc>
   13594:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13598:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1359c:	add	r1, r1, #2
   135a0:	add	r0, r0, r1
   135a4:	ldrb	r0, [r0]
   135a8:	strb	r0, [fp, #-63]	; 0xffffffc1
   135ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   135b0:	add	r0, r0, #2
   135b4:	str	r0, [fp, #-40]	; 0xffffffd8
   135b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   135bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   135c0:	cmp	r0, r1
   135c4:	bcs	135dc <__assert_fail@plt+0x21b0>
   135c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   135cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   135d0:	add	r0, r0, r1
   135d4:	movw	r1, #63	; 0x3f
   135d8:	strb	r1, [r0]
   135dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   135e0:	add	r0, r0, #1
   135e4:	str	r0, [fp, #-44]	; 0xffffffd4
   135e8:	b	135ec <__assert_fail@plt+0x21c0>
   135ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   135f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   135f4:	cmp	r0, r1
   135f8:	bcs	13610 <__assert_fail@plt+0x21e4>
   135fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13600:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13604:	add	r0, r0, r1
   13608:	movw	r1, #34	; 0x22
   1360c:	strb	r1, [r0]
   13610:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13614:	add	r0, r0, #1
   13618:	str	r0, [fp, #-44]	; 0xffffffd4
   1361c:	b	13620 <__assert_fail@plt+0x21f4>
   13620:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13624:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13628:	cmp	r0, r1
   1362c:	bcs	13644 <__assert_fail@plt+0x2218>
   13630:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13634:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13638:	add	r0, r0, r1
   1363c:	movw	r1, #34	; 0x22
   13640:	strb	r1, [r0]
   13644:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13648:	add	r0, r0, #1
   1364c:	str	r0, [fp, #-44]	; 0xffffffd4
   13650:	b	13654 <__assert_fail@plt+0x2228>
   13654:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13658:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1365c:	cmp	r0, r1
   13660:	bcs	13678 <__assert_fail@plt+0x224c>
   13664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13668:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1366c:	add	r0, r0, r1
   13670:	movw	r1, #63	; 0x3f
   13674:	strb	r1, [r0]
   13678:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1367c:	add	r0, r0, #1
   13680:	str	r0, [fp, #-44]	; 0xffffffd4
   13684:	b	1368c <__assert_fail@plt+0x2260>
   13688:	b	1368c <__assert_fail@plt+0x2260>
   1368c:	b	13690 <__assert_fail@plt+0x2264>
   13690:	b	13698 <__assert_fail@plt+0x226c>
   13694:	b	13698 <__assert_fail@plt+0x226c>
   13698:	b	13f14 <__assert_fail@plt+0x2ae8>
   1369c:	movw	r0, #97	; 0x61
   136a0:	strb	r0, [fp, #-64]	; 0xffffffc0
   136a4:	b	13764 <__assert_fail@plt+0x2338>
   136a8:	movw	r0, #98	; 0x62
   136ac:	strb	r0, [fp, #-64]	; 0xffffffc0
   136b0:	b	13764 <__assert_fail@plt+0x2338>
   136b4:	movw	r0, #102	; 0x66
   136b8:	strb	r0, [fp, #-64]	; 0xffffffc0
   136bc:	b	13764 <__assert_fail@plt+0x2338>
   136c0:	movw	r0, #110	; 0x6e
   136c4:	strb	r0, [fp, #-64]	; 0xffffffc0
   136c8:	b	13744 <__assert_fail@plt+0x2318>
   136cc:	movw	r0, #114	; 0x72
   136d0:	strb	r0, [fp, #-64]	; 0xffffffc0
   136d4:	b	13744 <__assert_fail@plt+0x2318>
   136d8:	movw	r0, #116	; 0x74
   136dc:	strb	r0, [fp, #-64]	; 0xffffffc0
   136e0:	b	13744 <__assert_fail@plt+0x2318>
   136e4:	movw	r0, #118	; 0x76
   136e8:	strb	r0, [fp, #-64]	; 0xffffffc0
   136ec:	b	13764 <__assert_fail@plt+0x2338>
   136f0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   136f4:	strb	r0, [fp, #-64]	; 0xffffffc0
   136f8:	ldr	r0, [fp, #8]
   136fc:	cmp	r0, #2
   13700:	bne	13718 <__assert_fail@plt+0x22ec>
   13704:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13708:	tst	r0, #1
   1370c:	beq	13714 <__assert_fail@plt+0x22e8>
   13710:	b	14308 <__assert_fail@plt+0x2edc>
   13714:	b	1409c <__assert_fail@plt+0x2c70>
   13718:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1371c:	tst	r0, #1
   13720:	beq	13740 <__assert_fail@plt+0x2314>
   13724:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13728:	tst	r0, #1
   1372c:	beq	13740 <__assert_fail@plt+0x2314>
   13730:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13734:	cmp	r0, #0
   13738:	beq	13740 <__assert_fail@plt+0x2314>
   1373c:	b	1409c <__assert_fail@plt+0x2c70>
   13740:	b	13744 <__assert_fail@plt+0x2318>
   13744:	ldr	r0, [fp, #8]
   13748:	cmp	r0, #2
   1374c:	bne	13760 <__assert_fail@plt+0x2334>
   13750:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13754:	tst	r0, #1
   13758:	beq	13760 <__assert_fail@plt+0x2334>
   1375c:	b	14308 <__assert_fail@plt+0x2edc>
   13760:	b	13764 <__assert_fail@plt+0x2338>
   13764:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13768:	tst	r0, #1
   1376c:	beq	1377c <__assert_fail@plt+0x2350>
   13770:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   13774:	strb	r0, [fp, #-63]	; 0xffffffc1
   13778:	b	13f88 <__assert_fail@plt+0x2b5c>
   1377c:	b	13f14 <__assert_fail@plt+0x2ae8>
   13780:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13784:	cmn	r0, #1
   13788:	bne	137a0 <__assert_fail@plt+0x2374>
   1378c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13790:	ldrb	r0, [r0, #1]
   13794:	cmp	r0, #0
   13798:	beq	137b0 <__assert_fail@plt+0x2384>
   1379c:	b	137ac <__assert_fail@plt+0x2380>
   137a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   137a4:	cmp	r0, #1
   137a8:	beq	137b0 <__assert_fail@plt+0x2384>
   137ac:	b	13f14 <__assert_fail@plt+0x2ae8>
   137b0:	b	137b4 <__assert_fail@plt+0x2388>
   137b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   137b8:	cmp	r0, #0
   137bc:	beq	137c4 <__assert_fail@plt+0x2398>
   137c0:	b	13f14 <__assert_fail@plt+0x2ae8>
   137c4:	b	137c8 <__assert_fail@plt+0x239c>
   137c8:	movw	r0, #1
   137cc:	strb	r0, [fp, #-67]	; 0xffffffbd
   137d0:	ldr	r0, [fp, #8]
   137d4:	cmp	r0, #2
   137d8:	bne	137ec <__assert_fail@plt+0x23c0>
   137dc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   137e0:	tst	r0, #1
   137e4:	beq	137ec <__assert_fail@plt+0x23c0>
   137e8:	b	14308 <__assert_fail@plt+0x2edc>
   137ec:	b	13f14 <__assert_fail@plt+0x2ae8>
   137f0:	movw	r0, #1
   137f4:	strb	r0, [fp, #-61]	; 0xffffffc3
   137f8:	strb	r0, [fp, #-67]	; 0xffffffbd
   137fc:	ldr	r0, [fp, #8]
   13800:	cmp	r0, #2
   13804:	bne	138e4 <__assert_fail@plt+0x24b8>
   13808:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1380c:	tst	r0, #1
   13810:	beq	13818 <__assert_fail@plt+0x23ec>
   13814:	b	14308 <__assert_fail@plt+0x2edc>
   13818:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1381c:	cmp	r0, #0
   13820:	beq	13840 <__assert_fail@plt+0x2414>
   13824:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13828:	cmp	r0, #0
   1382c:	bne	13840 <__assert_fail@plt+0x2414>
   13830:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13834:	str	r0, [fp, #-48]	; 0xffffffd0
   13838:	movw	r0, #0
   1383c:	str	r0, [fp, #-28]	; 0xffffffe4
   13840:	b	13844 <__assert_fail@plt+0x2418>
   13844:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13848:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1384c:	cmp	r0, r1
   13850:	bcs	13868 <__assert_fail@plt+0x243c>
   13854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13858:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1385c:	add	r0, r0, r1
   13860:	movw	r1, #39	; 0x27
   13864:	strb	r1, [r0]
   13868:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1386c:	add	r0, r0, #1
   13870:	str	r0, [fp, #-44]	; 0xffffffd4
   13874:	b	13878 <__assert_fail@plt+0x244c>
   13878:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1387c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13880:	cmp	r0, r1
   13884:	bcs	1389c <__assert_fail@plt+0x2470>
   13888:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1388c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13890:	add	r0, r0, r1
   13894:	movw	r1, #92	; 0x5c
   13898:	strb	r1, [r0]
   1389c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138a0:	add	r0, r0, #1
   138a4:	str	r0, [fp, #-44]	; 0xffffffd4
   138a8:	b	138ac <__assert_fail@plt+0x2480>
   138ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   138b4:	cmp	r0, r1
   138b8:	bcs	138d0 <__assert_fail@plt+0x24a4>
   138bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   138c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   138c4:	add	r0, r0, r1
   138c8:	movw	r1, #39	; 0x27
   138cc:	strb	r1, [r0]
   138d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138d4:	add	r0, r0, #1
   138d8:	str	r0, [fp, #-44]	; 0xffffffd4
   138dc:	movw	r0, #0
   138e0:	strb	r0, [fp, #-60]	; 0xffffffc4
   138e4:	b	13f14 <__assert_fail@plt+0x2ae8>
   138e8:	movw	r0, #1
   138ec:	strb	r0, [fp, #-67]	; 0xffffffbd
   138f0:	b	13f14 <__assert_fail@plt+0x2ae8>
   138f4:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   138f8:	tst	r0, #1
   138fc:	beq	1393c <__assert_fail@plt+0x2510>
   13900:	mov	r0, #1
   13904:	str	r0, [fp, #-72]	; 0xffffffb8
   13908:	bl	112b8 <__ctype_b_loc@plt>
   1390c:	ldr	r0, [r0]
   13910:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   13914:	mov	r2, r1
   13918:	add	r0, r0, r1, lsl #1
   1391c:	ldrh	r0, [r0]
   13920:	and	r0, r0, #16384	; 0x4000
   13924:	cmp	r0, #0
   13928:	movw	r0, #0
   1392c:	movne	r0, #1
   13930:	and	r0, r0, #1
   13934:	strb	r0, [fp, #-73]	; 0xffffffb7
   13938:	b	13bc8 <__assert_fail@plt+0x279c>
   1393c:	sub	r0, fp, #84	; 0x54
   13940:	movw	r1, #0
   13944:	and	r1, r1, #255	; 0xff
   13948:	movw	r2, #8
   1394c:	bl	11330 <memset@plt>
   13950:	movw	r0, #0
   13954:	str	r0, [fp, #-72]	; 0xffffffb8
   13958:	movw	r0, #1
   1395c:	strb	r0, [fp, #-73]	; 0xffffffb7
   13960:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13964:	cmn	r0, #1
   13968:	bne	13978 <__assert_fail@plt+0x254c>
   1396c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13970:	bl	112e8 <strlen@plt>
   13974:	str	r0, [fp, #-36]	; 0xffffffdc
   13978:	b	1397c <__assert_fail@plt+0x2550>
   1397c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13980:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13984:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13988:	add	r1, r1, r2
   1398c:	add	r1, r0, r1
   13990:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13994:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13998:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1399c:	add	r2, r2, r3
   139a0:	sub	r2, r0, r2
   139a4:	add	r0, sp, #88	; 0x58
   139a8:	sub	r3, fp, #84	; 0x54
   139ac:	bl	1d114 <__assert_fail@plt+0xbce8>
   139b0:	str	r0, [sp, #84]	; 0x54
   139b4:	ldr	r0, [sp, #84]	; 0x54
   139b8:	cmp	r0, #0
   139bc:	bne	139c4 <__assert_fail@plt+0x2598>
   139c0:	b	13bc4 <__assert_fail@plt+0x2798>
   139c4:	ldr	r0, [sp, #84]	; 0x54
   139c8:	cmn	r0, #1
   139cc:	bne	139dc <__assert_fail@plt+0x25b0>
   139d0:	movw	r0, #0
   139d4:	strb	r0, [fp, #-73]	; 0xffffffb7
   139d8:	b	13bc4 <__assert_fail@plt+0x2798>
   139dc:	ldr	r0, [sp, #84]	; 0x54
   139e0:	cmn	r0, #2
   139e4:	bne	13a58 <__assert_fail@plt+0x262c>
   139e8:	movw	r0, #0
   139ec:	strb	r0, [fp, #-73]	; 0xffffffb7
   139f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   139f4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   139f8:	add	r0, r0, r1
   139fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13a00:	cmp	r0, r1
   13a04:	movw	r0, #0
   13a08:	str	r0, [sp, #24]
   13a0c:	bcs	13a38 <__assert_fail@plt+0x260c>
   13a10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13a14:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13a18:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13a1c:	add	r1, r1, r2
   13a20:	add	r0, r0, r1
   13a24:	ldrb	r0, [r0]
   13a28:	cmp	r0, #0
   13a2c:	movw	r0, #0
   13a30:	movne	r0, #1
   13a34:	str	r0, [sp, #24]
   13a38:	ldr	r0, [sp, #24]
   13a3c:	tst	r0, #1
   13a40:	beq	13a54 <__assert_fail@plt+0x2628>
   13a44:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13a48:	add	r0, r0, #1
   13a4c:	str	r0, [fp, #-72]	; 0xffffffb8
   13a50:	b	139f0 <__assert_fail@plt+0x25c4>
   13a54:	b	13bc4 <__assert_fail@plt+0x2798>
   13a58:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13a5c:	tst	r0, #1
   13a60:	beq	13b6c <__assert_fail@plt+0x2740>
   13a64:	ldr	r0, [fp, #8]
   13a68:	cmp	r0, #2
   13a6c:	bne	13b6c <__assert_fail@plt+0x2740>
   13a70:	movw	r0, #1
   13a74:	str	r0, [sp, #80]	; 0x50
   13a78:	ldr	r0, [sp, #80]	; 0x50
   13a7c:	ldr	r1, [sp, #84]	; 0x54
   13a80:	cmp	r0, r1
   13a84:	bcs	13b68 <__assert_fail@plt+0x273c>
   13a88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13a8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13a90:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13a94:	add	r1, r1, r2
   13a98:	ldr	r2, [sp, #80]	; 0x50
   13a9c:	add	r1, r1, r2
   13aa0:	ldrb	r0, [r0, r1]
   13aa4:	sub	r0, r0, #91	; 0x5b
   13aa8:	cmp	r0, #33	; 0x21
   13aac:	str	r0, [sp, #20]
   13ab0:	bhi	13b50 <__assert_fail@plt+0x2724>
   13ab4:	add	r0, pc, #8
   13ab8:	ldr	r1, [sp, #20]
   13abc:	ldr	r0, [r0, r1, lsl #2]
   13ac0:	mov	pc, r0
   13ac4:	andeq	r3, r1, ip, asr #22
   13ac8:	andeq	r3, r1, ip, asr #22
   13acc:	andeq	r3, r1, r0, asr fp
   13ad0:	andeq	r3, r1, ip, asr #22
   13ad4:	andeq	r3, r1, r0, asr fp
   13ad8:	andeq	r3, r1, ip, asr #22
   13adc:	andeq	r3, r1, r0, asr fp
   13ae0:	andeq	r3, r1, r0, asr fp
   13ae4:	andeq	r3, r1, r0, asr fp
   13ae8:	andeq	r3, r1, r0, asr fp
   13aec:	andeq	r3, r1, r0, asr fp
   13af0:	andeq	r3, r1, r0, asr fp
   13af4:	andeq	r3, r1, r0, asr fp
   13af8:	andeq	r3, r1, r0, asr fp
   13afc:	andeq	r3, r1, r0, asr fp
   13b00:	andeq	r3, r1, r0, asr fp
   13b04:	andeq	r3, r1, r0, asr fp
   13b08:	andeq	r3, r1, r0, asr fp
   13b0c:	andeq	r3, r1, r0, asr fp
   13b10:	andeq	r3, r1, r0, asr fp
   13b14:	andeq	r3, r1, r0, asr fp
   13b18:	andeq	r3, r1, r0, asr fp
   13b1c:	andeq	r3, r1, r0, asr fp
   13b20:	andeq	r3, r1, r0, asr fp
   13b24:	andeq	r3, r1, r0, asr fp
   13b28:	andeq	r3, r1, r0, asr fp
   13b2c:	andeq	r3, r1, r0, asr fp
   13b30:	andeq	r3, r1, r0, asr fp
   13b34:	andeq	r3, r1, r0, asr fp
   13b38:	andeq	r3, r1, r0, asr fp
   13b3c:	andeq	r3, r1, r0, asr fp
   13b40:	andeq	r3, r1, r0, asr fp
   13b44:	andeq	r3, r1, r0, asr fp
   13b48:	andeq	r3, r1, ip, asr #22
   13b4c:	b	14308 <__assert_fail@plt+0x2edc>
   13b50:	b	13b54 <__assert_fail@plt+0x2728>
   13b54:	b	13b58 <__assert_fail@plt+0x272c>
   13b58:	ldr	r0, [sp, #80]	; 0x50
   13b5c:	add	r0, r0, #1
   13b60:	str	r0, [sp, #80]	; 0x50
   13b64:	b	13a78 <__assert_fail@plt+0x264c>
   13b68:	b	13b6c <__assert_fail@plt+0x2740>
   13b6c:	ldr	r0, [sp, #88]	; 0x58
   13b70:	bl	111f8 <iswprint@plt>
   13b74:	cmp	r0, #0
   13b78:	bne	13b84 <__assert_fail@plt+0x2758>
   13b7c:	movw	r0, #0
   13b80:	strb	r0, [fp, #-73]	; 0xffffffb7
   13b84:	ldr	r0, [sp, #84]	; 0x54
   13b88:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13b8c:	add	r0, r1, r0
   13b90:	str	r0, [fp, #-72]	; 0xffffffb8
   13b94:	b	13b98 <__assert_fail@plt+0x276c>
   13b98:	b	13b9c <__assert_fail@plt+0x2770>
   13b9c:	b	13ba0 <__assert_fail@plt+0x2774>
   13ba0:	sub	r0, fp, #84	; 0x54
   13ba4:	bl	111bc <mbsinit@plt>
   13ba8:	cmp	r0, #0
   13bac:	movw	r0, #0
   13bb0:	movne	r0, #1
   13bb4:	mvn	r1, #0
   13bb8:	eor	r0, r0, r1
   13bbc:	tst	r0, #1
   13bc0:	bne	1397c <__assert_fail@plt+0x2550>
   13bc4:	b	13bc8 <__assert_fail@plt+0x279c>
   13bc8:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   13bcc:	and	r0, r0, #1
   13bd0:	strb	r0, [fp, #-67]	; 0xffffffbd
   13bd4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13bd8:	movw	r1, #1
   13bdc:	cmp	r1, r0
   13be0:	bcc	13bfc <__assert_fail@plt+0x27d0>
   13be4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13be8:	tst	r0, #1
   13bec:	beq	13f10 <__assert_fail@plt+0x2ae4>
   13bf0:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   13bf4:	tst	r0, #1
   13bf8:	bne	13f10 <__assert_fail@plt+0x2ae4>
   13bfc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13c00:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13c04:	add	r0, r0, r1
   13c08:	str	r0, [sp, #76]	; 0x4c
   13c0c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13c10:	tst	r0, #1
   13c14:	beq	13dc4 <__assert_fail@plt+0x2998>
   13c18:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   13c1c:	tst	r0, #1
   13c20:	bne	13dc4 <__assert_fail@plt+0x2998>
   13c24:	b	13c28 <__assert_fail@plt+0x27fc>
   13c28:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13c2c:	tst	r0, #1
   13c30:	beq	13c38 <__assert_fail@plt+0x280c>
   13c34:	b	14308 <__assert_fail@plt+0x2edc>
   13c38:	movw	r0, #1
   13c3c:	strb	r0, [fp, #-66]	; 0xffffffbe
   13c40:	ldr	r0, [fp, #8]
   13c44:	cmp	r0, #2
   13c48:	bne	13cfc <__assert_fail@plt+0x28d0>
   13c4c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13c50:	tst	r0, #1
   13c54:	bne	13cfc <__assert_fail@plt+0x28d0>
   13c58:	b	13c5c <__assert_fail@plt+0x2830>
   13c5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13c64:	cmp	r0, r1
   13c68:	bcs	13c80 <__assert_fail@plt+0x2854>
   13c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c70:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13c74:	add	r0, r0, r1
   13c78:	movw	r1, #39	; 0x27
   13c7c:	strb	r1, [r0]
   13c80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c84:	add	r0, r0, #1
   13c88:	str	r0, [fp, #-44]	; 0xffffffd4
   13c8c:	b	13c90 <__assert_fail@plt+0x2864>
   13c90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13c98:	cmp	r0, r1
   13c9c:	bcs	13cb4 <__assert_fail@plt+0x2888>
   13ca0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13ca4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13ca8:	add	r0, r0, r1
   13cac:	movw	r1, #36	; 0x24
   13cb0:	strb	r1, [r0]
   13cb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13cb8:	add	r0, r0, #1
   13cbc:	str	r0, [fp, #-44]	; 0xffffffd4
   13cc0:	b	13cc4 <__assert_fail@plt+0x2898>
   13cc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13cc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ccc:	cmp	r0, r1
   13cd0:	bcs	13ce8 <__assert_fail@plt+0x28bc>
   13cd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cd8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13cdc:	add	r0, r0, r1
   13ce0:	movw	r1, #39	; 0x27
   13ce4:	strb	r1, [r0]
   13ce8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13cec:	add	r0, r0, #1
   13cf0:	str	r0, [fp, #-44]	; 0xffffffd4
   13cf4:	movw	r0, #1
   13cf8:	strb	r0, [fp, #-60]	; 0xffffffc4
   13cfc:	b	13d00 <__assert_fail@plt+0x28d4>
   13d00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d08:	cmp	r0, r1
   13d0c:	bcs	13d24 <__assert_fail@plt+0x28f8>
   13d10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d18:	add	r0, r0, r1
   13d1c:	movw	r1, #92	; 0x5c
   13d20:	strb	r1, [r0]
   13d24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d28:	add	r0, r0, #1
   13d2c:	str	r0, [fp, #-44]	; 0xffffffd4
   13d30:	b	13d34 <__assert_fail@plt+0x2908>
   13d34:	b	13d38 <__assert_fail@plt+0x290c>
   13d38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d40:	cmp	r0, r1
   13d44:	bcs	13d64 <__assert_fail@plt+0x2938>
   13d48:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13d4c:	asr	r0, r0, #6
   13d50:	add	r0, r0, #48	; 0x30
   13d54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13d58:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13d5c:	add	r1, r1, r2
   13d60:	strb	r0, [r1]
   13d64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d68:	add	r0, r0, #1
   13d6c:	str	r0, [fp, #-44]	; 0xffffffd4
   13d70:	b	13d74 <__assert_fail@plt+0x2948>
   13d74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d7c:	cmp	r0, r1
   13d80:	bcs	13da4 <__assert_fail@plt+0x2978>
   13d84:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13d88:	asr	r0, r0, #3
   13d8c:	and	r0, r0, #7
   13d90:	add	r0, r0, #48	; 0x30
   13d94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13d98:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13d9c:	add	r1, r1, r2
   13da0:	strb	r0, [r1]
   13da4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13da8:	add	r0, r0, #1
   13dac:	str	r0, [fp, #-44]	; 0xffffffd4
   13db0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13db4:	and	r0, r0, #7
   13db8:	add	r0, r0, #48	; 0x30
   13dbc:	strb	r0, [fp, #-63]	; 0xffffffc1
   13dc0:	b	13e10 <__assert_fail@plt+0x29e4>
   13dc4:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13dc8:	tst	r0, #1
   13dcc:	beq	13e0c <__assert_fail@plt+0x29e0>
   13dd0:	b	13dd4 <__assert_fail@plt+0x29a8>
   13dd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13dd8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ddc:	cmp	r0, r1
   13de0:	bcs	13df8 <__assert_fail@plt+0x29cc>
   13de4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13de8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13dec:	add	r0, r0, r1
   13df0:	movw	r1, #92	; 0x5c
   13df4:	strb	r1, [r0]
   13df8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13dfc:	add	r0, r0, #1
   13e00:	str	r0, [fp, #-44]	; 0xffffffd4
   13e04:	movw	r0, #0
   13e08:	strb	r0, [fp, #-65]	; 0xffffffbf
   13e0c:	b	13e10 <__assert_fail@plt+0x29e4>
   13e10:	ldr	r0, [sp, #76]	; 0x4c
   13e14:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13e18:	add	r1, r1, #1
   13e1c:	cmp	r0, r1
   13e20:	bhi	13e28 <__assert_fail@plt+0x29fc>
   13e24:	b	13f0c <__assert_fail@plt+0x2ae0>
   13e28:	b	13e2c <__assert_fail@plt+0x2a00>
   13e2c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13e30:	tst	r0, #1
   13e34:	beq	13eb4 <__assert_fail@plt+0x2a88>
   13e38:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   13e3c:	tst	r0, #1
   13e40:	bne	13eb4 <__assert_fail@plt+0x2a88>
   13e44:	b	13e48 <__assert_fail@plt+0x2a1c>
   13e48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13e50:	cmp	r0, r1
   13e54:	bcs	13e6c <__assert_fail@plt+0x2a40>
   13e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13e60:	add	r0, r0, r1
   13e64:	movw	r1, #39	; 0x27
   13e68:	strb	r1, [r0]
   13e6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e70:	add	r0, r0, #1
   13e74:	str	r0, [fp, #-44]	; 0xffffffd4
   13e78:	b	13e7c <__assert_fail@plt+0x2a50>
   13e7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13e84:	cmp	r0, r1
   13e88:	bcs	13ea0 <__assert_fail@plt+0x2a74>
   13e8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e90:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13e94:	add	r0, r0, r1
   13e98:	movw	r1, #39	; 0x27
   13e9c:	strb	r1, [r0]
   13ea0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ea4:	add	r0, r0, #1
   13ea8:	str	r0, [fp, #-44]	; 0xffffffd4
   13eac:	movw	r0, #0
   13eb0:	strb	r0, [fp, #-60]	; 0xffffffc4
   13eb4:	b	13eb8 <__assert_fail@plt+0x2a8c>
   13eb8:	b	13ebc <__assert_fail@plt+0x2a90>
   13ebc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ec0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ec4:	cmp	r0, r1
   13ec8:	bcs	13ee0 <__assert_fail@plt+0x2ab4>
   13ecc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13ed0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13ed4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13ed8:	add	r1, r1, r2
   13edc:	strb	r0, [r1]
   13ee0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ee4:	add	r0, r0, #1
   13ee8:	str	r0, [fp, #-44]	; 0xffffffd4
   13eec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13ef0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13ef4:	add	r1, r1, #1
   13ef8:	str	r1, [fp, #-40]	; 0xffffffd8
   13efc:	add	r0, r0, r1
   13f00:	ldrb	r0, [r0]
   13f04:	strb	r0, [fp, #-63]	; 0xffffffc1
   13f08:	b	13c0c <__assert_fail@plt+0x27e0>
   13f0c:	b	1409c <__assert_fail@plt+0x2c70>
   13f10:	b	13f14 <__assert_fail@plt+0x2ae8>
   13f14:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13f18:	tst	r0, #1
   13f1c:	beq	13f2c <__assert_fail@plt+0x2b00>
   13f20:	ldr	r0, [fp, #8]
   13f24:	cmp	r0, #2
   13f28:	bne	13f38 <__assert_fail@plt+0x2b0c>
   13f2c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13f30:	tst	r0, #1
   13f34:	beq	13f74 <__assert_fail@plt+0x2b48>
   13f38:	ldr	r0, [fp, #16]
   13f3c:	movw	r1, #0
   13f40:	cmp	r0, r1
   13f44:	beq	13f74 <__assert_fail@plt+0x2b48>
   13f48:	ldr	r0, [fp, #16]
   13f4c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   13f50:	lsr	r1, r1, #5
   13f54:	add	r0, r0, r1, lsl #2
   13f58:	ldr	r0, [r0]
   13f5c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   13f60:	and	r1, r1, #31
   13f64:	lsr	r0, r0, r1
   13f68:	and	r0, r0, #1
   13f6c:	cmp	r0, #0
   13f70:	bne	13f84 <__assert_fail@plt+0x2b58>
   13f74:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13f78:	tst	r0, #1
   13f7c:	bne	13f84 <__assert_fail@plt+0x2b58>
   13f80:	b	1409c <__assert_fail@plt+0x2c70>
   13f84:	b	13f88 <__assert_fail@plt+0x2b5c>
   13f88:	b	13f8c <__assert_fail@plt+0x2b60>
   13f8c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13f90:	tst	r0, #1
   13f94:	beq	13f9c <__assert_fail@plt+0x2b70>
   13f98:	b	14308 <__assert_fail@plt+0x2edc>
   13f9c:	movw	r0, #1
   13fa0:	strb	r0, [fp, #-66]	; 0xffffffbe
   13fa4:	ldr	r0, [fp, #8]
   13fa8:	cmp	r0, #2
   13fac:	bne	14060 <__assert_fail@plt+0x2c34>
   13fb0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13fb4:	tst	r0, #1
   13fb8:	bne	14060 <__assert_fail@plt+0x2c34>
   13fbc:	b	13fc0 <__assert_fail@plt+0x2b94>
   13fc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13fc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13fc8:	cmp	r0, r1
   13fcc:	bcs	13fe4 <__assert_fail@plt+0x2bb8>
   13fd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13fd4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13fd8:	add	r0, r0, r1
   13fdc:	movw	r1, #39	; 0x27
   13fe0:	strb	r1, [r0]
   13fe4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13fe8:	add	r0, r0, #1
   13fec:	str	r0, [fp, #-44]	; 0xffffffd4
   13ff0:	b	13ff4 <__assert_fail@plt+0x2bc8>
   13ff4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ff8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ffc:	cmp	r0, r1
   14000:	bcs	14018 <__assert_fail@plt+0x2bec>
   14004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14008:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1400c:	add	r0, r0, r1
   14010:	movw	r1, #36	; 0x24
   14014:	strb	r1, [r0]
   14018:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1401c:	add	r0, r0, #1
   14020:	str	r0, [fp, #-44]	; 0xffffffd4
   14024:	b	14028 <__assert_fail@plt+0x2bfc>
   14028:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1402c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14030:	cmp	r0, r1
   14034:	bcs	1404c <__assert_fail@plt+0x2c20>
   14038:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1403c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14040:	add	r0, r0, r1
   14044:	movw	r1, #39	; 0x27
   14048:	strb	r1, [r0]
   1404c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14050:	add	r0, r0, #1
   14054:	str	r0, [fp, #-44]	; 0xffffffd4
   14058:	movw	r0, #1
   1405c:	strb	r0, [fp, #-60]	; 0xffffffc4
   14060:	b	14064 <__assert_fail@plt+0x2c38>
   14064:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14068:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1406c:	cmp	r0, r1
   14070:	bcs	14088 <__assert_fail@plt+0x2c5c>
   14074:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14078:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1407c:	add	r0, r0, r1
   14080:	movw	r1, #92	; 0x5c
   14084:	strb	r1, [r0]
   14088:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1408c:	add	r0, r0, #1
   14090:	str	r0, [fp, #-44]	; 0xffffffd4
   14094:	b	14098 <__assert_fail@plt+0x2c6c>
   14098:	b	1409c <__assert_fail@plt+0x2c70>
   1409c:	b	140a0 <__assert_fail@plt+0x2c74>
   140a0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   140a4:	tst	r0, #1
   140a8:	beq	14128 <__assert_fail@plt+0x2cfc>
   140ac:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   140b0:	tst	r0, #1
   140b4:	bne	14128 <__assert_fail@plt+0x2cfc>
   140b8:	b	140bc <__assert_fail@plt+0x2c90>
   140bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   140c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   140c4:	cmp	r0, r1
   140c8:	bcs	140e0 <__assert_fail@plt+0x2cb4>
   140cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   140d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   140d4:	add	r0, r0, r1
   140d8:	movw	r1, #39	; 0x27
   140dc:	strb	r1, [r0]
   140e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   140e4:	add	r0, r0, #1
   140e8:	str	r0, [fp, #-44]	; 0xffffffd4
   140ec:	b	140f0 <__assert_fail@plt+0x2cc4>
   140f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   140f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   140f8:	cmp	r0, r1
   140fc:	bcs	14114 <__assert_fail@plt+0x2ce8>
   14100:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14104:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14108:	add	r0, r0, r1
   1410c:	movw	r1, #39	; 0x27
   14110:	strb	r1, [r0]
   14114:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14118:	add	r0, r0, #1
   1411c:	str	r0, [fp, #-44]	; 0xffffffd4
   14120:	movw	r0, #0
   14124:	strb	r0, [fp, #-60]	; 0xffffffc4
   14128:	b	1412c <__assert_fail@plt+0x2d00>
   1412c:	b	14130 <__assert_fail@plt+0x2d04>
   14130:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14134:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14138:	cmp	r0, r1
   1413c:	bcs	14154 <__assert_fail@plt+0x2d28>
   14140:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14144:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14148:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1414c:	add	r1, r1, r2
   14150:	strb	r0, [r1]
   14154:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14158:	add	r0, r0, #1
   1415c:	str	r0, [fp, #-44]	; 0xffffffd4
   14160:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   14164:	tst	r0, #1
   14168:	bne	14174 <__assert_fail@plt+0x2d48>
   1416c:	movw	r0, #0
   14170:	strb	r0, [fp, #-62]	; 0xffffffc2
   14174:	b	14178 <__assert_fail@plt+0x2d4c>
   14178:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1417c:	add	r0, r0, #1
   14180:	str	r0, [fp, #-40]	; 0xffffffd8
   14184:	b	12f30 <__assert_fail@plt+0x1b04>
   14188:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1418c:	cmp	r0, #0
   14190:	bne	141b0 <__assert_fail@plt+0x2d84>
   14194:	ldr	r0, [fp, #8]
   14198:	cmp	r0, #2
   1419c:	bne	141b0 <__assert_fail@plt+0x2d84>
   141a0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   141a4:	tst	r0, #1
   141a8:	beq	141b0 <__assert_fail@plt+0x2d84>
   141ac:	b	14308 <__assert_fail@plt+0x2edc>
   141b0:	ldr	r0, [fp, #8]
   141b4:	cmp	r0, #2
   141b8:	bne	14258 <__assert_fail@plt+0x2e2c>
   141bc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   141c0:	tst	r0, #1
   141c4:	bne	14258 <__assert_fail@plt+0x2e2c>
   141c8:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   141cc:	tst	r0, #1
   141d0:	beq	14258 <__assert_fail@plt+0x2e2c>
   141d4:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   141d8:	tst	r0, #1
   141dc:	beq	14224 <__assert_fail@plt+0x2df8>
   141e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   141e4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   141e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   141ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   141f0:	ldr	ip, [fp, #12]
   141f4:	ldr	lr, [fp, #16]
   141f8:	ldr	r4, [fp, #20]
   141fc:	ldr	r5, [fp, #24]
   14200:	movw	r6, #5
   14204:	str	r6, [sp]
   14208:	str	ip, [sp, #4]
   1420c:	str	lr, [sp, #8]
   14210:	str	r4, [sp, #12]
   14214:	str	r5, [sp, #16]
   14218:	bl	12c48 <__assert_fail@plt+0x181c>
   1421c:	str	r0, [fp, #-20]	; 0xffffffec
   14220:	b	14370 <__assert_fail@plt+0x2f44>
   14224:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14228:	cmp	r0, #0
   1422c:	bne	14250 <__assert_fail@plt+0x2e24>
   14230:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14234:	cmp	r0, #0
   14238:	beq	14250 <__assert_fail@plt+0x2e24>
   1423c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14240:	str	r0, [fp, #-28]	; 0xffffffe4
   14244:	movw	r0, #0
   14248:	str	r0, [fp, #-44]	; 0xffffffd4
   1424c:	b	12cf0 <__assert_fail@plt+0x18c4>
   14250:	b	14254 <__assert_fail@plt+0x2e28>
   14254:	b	14258 <__assert_fail@plt+0x2e2c>
   14258:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1425c:	movw	r1, #0
   14260:	cmp	r0, r1
   14264:	beq	142d8 <__assert_fail@plt+0x2eac>
   14268:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1426c:	tst	r0, #1
   14270:	bne	142d8 <__assert_fail@plt+0x2eac>
   14274:	b	14278 <__assert_fail@plt+0x2e4c>
   14278:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1427c:	ldrsb	r0, [r0]
   14280:	cmp	r0, #0
   14284:	beq	142d4 <__assert_fail@plt+0x2ea8>
   14288:	b	1428c <__assert_fail@plt+0x2e60>
   1428c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14290:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14294:	cmp	r0, r1
   14298:	bcs	142b4 <__assert_fail@plt+0x2e88>
   1429c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   142a0:	ldrb	r0, [r0]
   142a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   142a8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   142ac:	add	r1, r1, r2
   142b0:	strb	r0, [r1]
   142b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142b8:	add	r0, r0, #1
   142bc:	str	r0, [fp, #-44]	; 0xffffffd4
   142c0:	b	142c4 <__assert_fail@plt+0x2e98>
   142c4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   142c8:	add	r0, r0, #1
   142cc:	str	r0, [fp, #-52]	; 0xffffffcc
   142d0:	b	14278 <__assert_fail@plt+0x2e4c>
   142d4:	b	142d8 <__assert_fail@plt+0x2eac>
   142d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   142e0:	cmp	r0, r1
   142e4:	bcs	142fc <__assert_fail@plt+0x2ed0>
   142e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   142ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   142f0:	add	r0, r0, r1
   142f4:	movw	r1, #0
   142f8:	strb	r1, [r0]
   142fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14300:	str	r0, [fp, #-20]	; 0xffffffec
   14304:	b	14370 <__assert_fail@plt+0x2f44>
   14308:	ldr	r0, [fp, #8]
   1430c:	cmp	r0, #2
   14310:	bne	14328 <__assert_fail@plt+0x2efc>
   14314:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14318:	tst	r0, #1
   1431c:	beq	14328 <__assert_fail@plt+0x2efc>
   14320:	movw	r0, #4
   14324:	str	r0, [fp, #8]
   14328:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1432c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14330:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14334:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14338:	ldr	ip, [fp, #8]
   1433c:	ldr	lr, [fp, #12]
   14340:	mvn	r4, #2
   14344:	and	lr, lr, r4
   14348:	ldr	r4, [fp, #20]
   1434c:	ldr	r5, [fp, #24]
   14350:	str	ip, [sp]
   14354:	str	lr, [sp, #4]
   14358:	movw	ip, #0
   1435c:	str	ip, [sp, #8]
   14360:	str	r4, [sp, #12]
   14364:	str	r5, [sp, #16]
   14368:	bl	12c48 <__assert_fail@plt+0x181c>
   1436c:	str	r0, [fp, #-20]	; 0xffffffec
   14370:	ldr	r0, [fp, #-20]	; 0xffffffec
   14374:	sub	sp, fp, #16
   14378:	pop	{r4, r5, r6, sl, fp, pc}
   1437c:	push	{fp, lr}
   14380:	mov	fp, sp
   14384:	sub	sp, sp, #16
   14388:	str	r0, [fp, #-4]
   1438c:	str	r1, [sp, #8]
   14390:	str	r2, [sp, #4]
   14394:	ldr	r0, [fp, #-4]
   14398:	ldr	r1, [sp, #8]
   1439c:	ldr	r3, [sp, #4]
   143a0:	movw	r2, #0
   143a4:	bl	143b0 <__assert_fail@plt+0x2f84>
   143a8:	mov	sp, fp
   143ac:	pop	{fp, pc}
   143b0:	push	{r4, r5, r6, sl, fp, lr}
   143b4:	add	fp, sp, #16
   143b8:	sub	sp, sp, #80	; 0x50
   143bc:	str	r0, [fp, #-20]	; 0xffffffec
   143c0:	str	r1, [fp, #-24]	; 0xffffffe8
   143c4:	str	r2, [fp, #-28]	; 0xffffffe4
   143c8:	str	r3, [fp, #-32]	; 0xffffffe0
   143cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   143d0:	movw	r1, #0
   143d4:	cmp	r0, r1
   143d8:	beq	143e8 <__assert_fail@plt+0x2fbc>
   143dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   143e0:	str	r0, [sp, #40]	; 0x28
   143e4:	b	143f8 <__assert_fail@plt+0x2fcc>
   143e8:	movw	r0, #4516	; 0x11a4
   143ec:	movt	r0, #3
   143f0:	str	r0, [sp, #40]	; 0x28
   143f4:	b	143f8 <__assert_fail@plt+0x2fcc>
   143f8:	ldr	r0, [sp, #40]	; 0x28
   143fc:	str	r0, [fp, #-36]	; 0xffffffdc
   14400:	bl	1130c <__errno_location@plt>
   14404:	ldr	r0, [r0]
   14408:	str	r0, [fp, #-40]	; 0xffffffd8
   1440c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14410:	ldr	r0, [r0, #4]
   14414:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14418:	movw	r2, #0
   1441c:	cmp	r1, r2
   14420:	movw	r1, #0
   14424:	movne	r1, #1
   14428:	tst	r1, #1
   1442c:	mov	r1, r2
   14430:	moveq	r1, #1
   14434:	orr	r0, r0, r1
   14438:	str	r0, [fp, #-44]	; 0xffffffd4
   1443c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14440:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14444:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14448:	ldr	r1, [r1]
   1444c:	ldr	ip, [fp, #-44]	; 0xffffffd4
   14450:	ldr	lr, [fp, #-36]	; 0xffffffdc
   14454:	add	lr, lr, #8
   14458:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1445c:	ldr	r4, [r4, #40]	; 0x28
   14460:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14464:	ldr	r5, [r5, #44]	; 0x2c
   14468:	str	r0, [sp, #36]	; 0x24
   1446c:	mov	r0, r2
   14470:	str	r1, [sp, #32]
   14474:	mov	r1, r2
   14478:	ldr	r2, [sp, #36]	; 0x24
   1447c:	ldr	r6, [sp, #32]
   14480:	str	r6, [sp]
   14484:	str	ip, [sp, #4]
   14488:	str	lr, [sp, #8]
   1448c:	str	r4, [sp, #12]
   14490:	str	r5, [sp, #16]
   14494:	bl	12c48 <__assert_fail@plt+0x181c>
   14498:	add	r0, r0, #1
   1449c:	str	r0, [sp, #48]	; 0x30
   144a0:	ldr	r0, [sp, #48]	; 0x30
   144a4:	bl	15e54 <__assert_fail@plt+0x4a28>
   144a8:	str	r0, [sp, #44]	; 0x2c
   144ac:	ldr	r0, [sp, #44]	; 0x2c
   144b0:	ldr	r1, [sp, #48]	; 0x30
   144b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   144b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   144bc:	ldr	ip, [fp, #-36]	; 0xffffffdc
   144c0:	ldr	ip, [ip]
   144c4:	ldr	lr, [fp, #-44]	; 0xffffffd4
   144c8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   144cc:	add	r4, r4, #8
   144d0:	ldr	r5, [fp, #-36]	; 0xffffffdc
   144d4:	ldr	r5, [r5, #40]	; 0x28
   144d8:	ldr	r6, [fp, #-36]	; 0xffffffdc
   144dc:	ldr	r6, [r6, #44]	; 0x2c
   144e0:	str	ip, [sp]
   144e4:	str	lr, [sp, #4]
   144e8:	str	r4, [sp, #8]
   144ec:	str	r5, [sp, #12]
   144f0:	str	r6, [sp, #16]
   144f4:	bl	12c48 <__assert_fail@plt+0x181c>
   144f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   144fc:	str	r0, [sp, #28]
   14500:	str	r1, [sp, #24]
   14504:	bl	1130c <__errno_location@plt>
   14508:	ldr	r1, [sp, #24]
   1450c:	str	r1, [r0]
   14510:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14514:	movw	r2, #0
   14518:	cmp	r0, r2
   1451c:	beq	14530 <__assert_fail@plt+0x3104>
   14520:	ldr	r0, [sp, #48]	; 0x30
   14524:	sub	r0, r0, #1
   14528:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1452c:	str	r0, [r1]
   14530:	ldr	r0, [sp, #44]	; 0x2c
   14534:	sub	sp, fp, #16
   14538:	pop	{r4, r5, r6, sl, fp, pc}
   1453c:	push	{fp, lr}
   14540:	mov	fp, sp
   14544:	sub	sp, sp, #8
   14548:	movw	r0, #4392	; 0x1128
   1454c:	movt	r0, #3
   14550:	ldr	r0, [r0]
   14554:	str	r0, [sp, #4]
   14558:	movw	r0, #1
   1455c:	str	r0, [sp]
   14560:	ldr	r0, [sp]
   14564:	movw	r1, #4396	; 0x112c
   14568:	movt	r1, #3
   1456c:	ldr	r1, [r1]
   14570:	cmp	r0, r1
   14574:	bge	1459c <__assert_fail@plt+0x3170>
   14578:	ldr	r0, [sp, #4]
   1457c:	ldr	r1, [sp]
   14580:	add	r0, r0, r1, lsl #3
   14584:	ldr	r0, [r0, #4]
   14588:	bl	1277c <__assert_fail@plt+0x1350>
   1458c:	ldr	r0, [sp]
   14590:	add	r0, r0, #1
   14594:	str	r0, [sp]
   14598:	b	14560 <__assert_fail@plt+0x3134>
   1459c:	ldr	r0, [sp, #4]
   145a0:	ldr	r0, [r0, #4]
   145a4:	movw	r1, #4564	; 0x11d4
   145a8:	movt	r1, #3
   145ac:	cmp	r0, r1
   145b0:	beq	145dc <__assert_fail@plt+0x31b0>
   145b4:	ldr	r0, [sp, #4]
   145b8:	ldr	r0, [r0, #4]
   145bc:	bl	1277c <__assert_fail@plt+0x1350>
   145c0:	movw	r0, #256	; 0x100
   145c4:	movw	r1, #4400	; 0x1130
   145c8:	movt	r1, #3
   145cc:	str	r0, [r1]
   145d0:	movw	r0, #4564	; 0x11d4
   145d4:	movt	r0, #3
   145d8:	str	r0, [r1, #4]
   145dc:	ldr	r0, [sp, #4]
   145e0:	movw	r1, #4400	; 0x1130
   145e4:	movt	r1, #3
   145e8:	cmp	r0, r1
   145ec:	beq	1460c <__assert_fail@plt+0x31e0>
   145f0:	ldr	r0, [sp, #4]
   145f4:	bl	1277c <__assert_fail@plt+0x1350>
   145f8:	movw	r0, #4392	; 0x1128
   145fc:	movt	r0, #3
   14600:	movw	r1, #4400	; 0x1130
   14604:	movt	r1, #3
   14608:	str	r1, [r0]
   1460c:	movw	r0, #4396	; 0x112c
   14610:	movt	r0, #3
   14614:	movw	r1, #1
   14618:	str	r1, [r0]
   1461c:	mov	sp, fp
   14620:	pop	{fp, pc}
   14624:	push	{fp, lr}
   14628:	mov	fp, sp
   1462c:	sub	sp, sp, #8
   14630:	str	r0, [sp, #4]
   14634:	str	r1, [sp]
   14638:	ldr	r0, [sp, #4]
   1463c:	ldr	r1, [sp]
   14640:	mvn	r2, #0
   14644:	movw	r3, #4516	; 0x11a4
   14648:	movt	r3, #3
   1464c:	bl	14658 <__assert_fail@plt+0x322c>
   14650:	mov	sp, fp
   14654:	pop	{fp, pc}
   14658:	push	{r4, r5, r6, sl, fp, lr}
   1465c:	add	fp, sp, #16
   14660:	sub	sp, sp, #80	; 0x50
   14664:	str	r0, [fp, #-20]	; 0xffffffec
   14668:	str	r1, [fp, #-24]	; 0xffffffe8
   1466c:	str	r2, [fp, #-28]	; 0xffffffe4
   14670:	str	r3, [fp, #-32]	; 0xffffffe0
   14674:	bl	1130c <__errno_location@plt>
   14678:	ldr	r1, [pc, #672]	; 14920 <__assert_fail@plt+0x34f4>
   1467c:	ldr	r0, [r0]
   14680:	str	r0, [fp, #-36]	; 0xffffffdc
   14684:	movw	r0, #4392	; 0x1128
   14688:	movt	r0, #3
   1468c:	ldr	r0, [r0]
   14690:	str	r0, [fp, #-40]	; 0xffffffd8
   14694:	str	r1, [fp, #-44]	; 0xffffffd4
   14698:	ldr	r0, [fp, #-20]	; 0xffffffec
   1469c:	movw	r1, #0
   146a0:	cmp	r1, r0
   146a4:	bgt	146b8 <__assert_fail@plt+0x328c>
   146a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   146ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   146b0:	cmp	r0, r1
   146b4:	blt	146bc <__assert_fail@plt+0x3290>
   146b8:	bl	11408 <abort@plt>
   146bc:	movw	r0, #4396	; 0x112c
   146c0:	movt	r0, #3
   146c4:	ldr	r0, [r0]
   146c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   146cc:	cmp	r0, r1
   146d0:	bgt	147c8 <__assert_fail@plt+0x339c>
   146d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   146d8:	movw	r1, #4400	; 0x1130
   146dc:	movt	r1, #3
   146e0:	cmp	r0, r1
   146e4:	movw	r0, #0
   146e8:	moveq	r0, #1
   146ec:	and	r0, r0, #1
   146f0:	strb	r0, [fp, #-45]	; 0xffffffd3
   146f4:	movw	r0, #4396	; 0x112c
   146f8:	movt	r0, #3
   146fc:	ldr	r0, [r0]
   14700:	str	r0, [sp, #44]	; 0x2c
   14704:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   14708:	tst	r0, #1
   1470c:	beq	1471c <__assert_fail@plt+0x32f0>
   14710:	movw	r0, #0
   14714:	str	r0, [sp, #24]
   14718:	b	14724 <__assert_fail@plt+0x32f8>
   1471c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14720:	str	r0, [sp, #24]
   14724:	ldr	r0, [sp, #24]
   14728:	ldr	r1, [fp, #-20]	; 0xffffffec
   1472c:	movw	r2, #4396	; 0x112c
   14730:	movt	r2, #3
   14734:	ldr	r2, [r2]
   14738:	sub	r1, r1, r2
   1473c:	add	r2, r1, #1
   14740:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14744:	add	r1, sp, #44	; 0x2c
   14748:	movw	ip, #8
   1474c:	str	ip, [sp]
   14750:	bl	16090 <__assert_fail@plt+0x4c64>
   14754:	str	r0, [fp, #-40]	; 0xffffffd8
   14758:	movw	r1, #4392	; 0x1128
   1475c:	movt	r1, #3
   14760:	str	r0, [r1]
   14764:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   14768:	tst	r0, #1
   1476c:	beq	1478c <__assert_fail@plt+0x3360>
   14770:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14774:	movw	r1, #4400	; 0x1130
   14778:	movt	r1, #3
   1477c:	ldr	r2, [r1]
   14780:	str	r2, [r0]
   14784:	ldr	r1, [r1, #4]
   14788:	str	r1, [r0, #4]
   1478c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14790:	movw	r1, #4396	; 0x112c
   14794:	movt	r1, #3
   14798:	ldr	r1, [r1]
   1479c:	add	r0, r0, r1, lsl #3
   147a0:	ldr	r2, [sp, #44]	; 0x2c
   147a4:	sub	r1, r2, r1
   147a8:	lsl	r2, r1, #3
   147ac:	movw	r1, #0
   147b0:	and	r1, r1, #255	; 0xff
   147b4:	bl	11330 <memset@plt>
   147b8:	ldr	r0, [sp, #44]	; 0x2c
   147bc:	movw	r1, #4396	; 0x112c
   147c0:	movt	r1, #3
   147c4:	str	r0, [r1]
   147c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   147cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   147d0:	ldr	r0, [r0, r1, lsl #3]
   147d4:	str	r0, [sp, #40]	; 0x28
   147d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   147dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   147e0:	add	r0, r0, r1, lsl #3
   147e4:	ldr	r0, [r0, #4]
   147e8:	str	r0, [sp, #36]	; 0x24
   147ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   147f0:	ldr	r0, [r0, #4]
   147f4:	orr	r0, r0, #1
   147f8:	str	r0, [sp, #32]
   147fc:	ldr	r0, [sp, #36]	; 0x24
   14800:	ldr	r1, [sp, #40]	; 0x28
   14804:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14808:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1480c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14810:	ldr	ip, [ip]
   14814:	ldr	lr, [sp, #32]
   14818:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1481c:	add	r4, r4, #8
   14820:	ldr	r5, [fp, #-32]	; 0xffffffe0
   14824:	ldr	r5, [r5, #40]	; 0x28
   14828:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1482c:	ldr	r6, [r6, #44]	; 0x2c
   14830:	str	ip, [sp]
   14834:	str	lr, [sp, #4]
   14838:	str	r4, [sp, #8]
   1483c:	str	r5, [sp, #12]
   14840:	str	r6, [sp, #16]
   14844:	bl	12c48 <__assert_fail@plt+0x181c>
   14848:	str	r0, [sp, #28]
   1484c:	ldr	r0, [sp, #40]	; 0x28
   14850:	ldr	r1, [sp, #28]
   14854:	cmp	r0, r1
   14858:	bhi	14900 <__assert_fail@plt+0x34d4>
   1485c:	ldr	r0, [sp, #28]
   14860:	add	r0, r0, #1
   14864:	str	r0, [sp, #40]	; 0x28
   14868:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1486c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14870:	add	r1, r1, r2, lsl #3
   14874:	str	r0, [r1]
   14878:	ldr	r0, [sp, #36]	; 0x24
   1487c:	movw	r1, #4564	; 0x11d4
   14880:	movt	r1, #3
   14884:	cmp	r0, r1
   14888:	beq	14894 <__assert_fail@plt+0x3468>
   1488c:	ldr	r0, [sp, #36]	; 0x24
   14890:	bl	1277c <__assert_fail@plt+0x1350>
   14894:	ldr	r0, [sp, #40]	; 0x28
   14898:	bl	15e54 <__assert_fail@plt+0x4a28>
   1489c:	mov	r1, r0
   148a0:	str	r0, [sp, #36]	; 0x24
   148a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   148a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   148ac:	add	r0, r0, r2, lsl #3
   148b0:	str	r1, [r0, #4]
   148b4:	ldr	r0, [sp, #36]	; 0x24
   148b8:	ldr	r1, [sp, #40]	; 0x28
   148bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   148c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   148c4:	ldr	ip, [fp, #-32]	; 0xffffffe0
   148c8:	ldr	ip, [ip]
   148cc:	ldr	lr, [sp, #32]
   148d0:	ldr	r4, [fp, #-32]	; 0xffffffe0
   148d4:	add	r4, r4, #8
   148d8:	ldr	r5, [fp, #-32]	; 0xffffffe0
   148dc:	ldr	r5, [r5, #40]	; 0x28
   148e0:	ldr	r6, [fp, #-32]	; 0xffffffe0
   148e4:	ldr	r6, [r6, #44]	; 0x2c
   148e8:	str	ip, [sp]
   148ec:	str	lr, [sp, #4]
   148f0:	str	r4, [sp, #8]
   148f4:	str	r5, [sp, #12]
   148f8:	str	r6, [sp, #16]
   148fc:	bl	12c48 <__assert_fail@plt+0x181c>
   14900:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14904:	str	r0, [sp, #20]
   14908:	bl	1130c <__errno_location@plt>
   1490c:	ldr	r1, [sp, #20]
   14910:	str	r1, [r0]
   14914:	ldr	r0, [sp, #36]	; 0x24
   14918:	sub	sp, fp, #16
   1491c:	pop	{r4, r5, r6, sl, fp, pc}
   14920:	svcvc	0x00ffffff
   14924:	push	{fp, lr}
   14928:	mov	fp, sp
   1492c:	sub	sp, sp, #16
   14930:	str	r0, [fp, #-4]
   14934:	str	r1, [sp, #8]
   14938:	str	r2, [sp, #4]
   1493c:	ldr	r0, [fp, #-4]
   14940:	ldr	r1, [sp, #8]
   14944:	ldr	r2, [sp, #4]
   14948:	movw	r3, #4516	; 0x11a4
   1494c:	movt	r3, #3
   14950:	bl	14658 <__assert_fail@plt+0x322c>
   14954:	mov	sp, fp
   14958:	pop	{fp, pc}
   1495c:	push	{fp, lr}
   14960:	mov	fp, sp
   14964:	sub	sp, sp, #8
   14968:	str	r0, [sp, #4]
   1496c:	ldr	r1, [sp, #4]
   14970:	movw	r0, #0
   14974:	bl	14624 <__assert_fail@plt+0x31f8>
   14978:	mov	sp, fp
   1497c:	pop	{fp, pc}
   14980:	push	{fp, lr}
   14984:	mov	fp, sp
   14988:	sub	sp, sp, #8
   1498c:	str	r0, [sp, #4]
   14990:	str	r1, [sp]
   14994:	ldr	r1, [sp, #4]
   14998:	ldr	r2, [sp]
   1499c:	movw	r0, #0
   149a0:	bl	14924 <__assert_fail@plt+0x34f8>
   149a4:	mov	sp, fp
   149a8:	pop	{fp, pc}
   149ac:	push	{fp, lr}
   149b0:	mov	fp, sp
   149b4:	sub	sp, sp, #64	; 0x40
   149b8:	str	r0, [fp, #-4]
   149bc:	str	r1, [fp, #-8]
   149c0:	str	r2, [fp, #-12]
   149c4:	ldr	r1, [fp, #-8]
   149c8:	add	r0, sp, #4
   149cc:	bl	149ec <__assert_fail@plt+0x35c0>
   149d0:	ldr	r0, [fp, #-4]
   149d4:	ldr	r1, [fp, #-12]
   149d8:	mvn	r2, #0
   149dc:	add	r3, sp, #4
   149e0:	bl	14658 <__assert_fail@plt+0x322c>
   149e4:	mov	sp, fp
   149e8:	pop	{fp, pc}
   149ec:	push	{fp, lr}
   149f0:	mov	fp, sp
   149f4:	sub	sp, sp, #8
   149f8:	str	r1, [sp, #4]
   149fc:	mov	r1, r0
   14a00:	str	r0, [sp]
   14a04:	mov	r0, r1
   14a08:	movw	r1, #0
   14a0c:	and	r1, r1, #255	; 0xff
   14a10:	movw	r2, #48	; 0x30
   14a14:	bl	11330 <memset@plt>
   14a18:	ldr	r0, [sp, #4]
   14a1c:	cmp	r0, #10
   14a20:	bne	14a28 <__assert_fail@plt+0x35fc>
   14a24:	bl	11408 <abort@plt>
   14a28:	ldr	r0, [sp, #4]
   14a2c:	ldr	r1, [sp]
   14a30:	str	r0, [r1]
   14a34:	mov	sp, fp
   14a38:	pop	{fp, pc}
   14a3c:	push	{fp, lr}
   14a40:	mov	fp, sp
   14a44:	sub	sp, sp, #64	; 0x40
   14a48:	str	r0, [fp, #-4]
   14a4c:	str	r1, [fp, #-8]
   14a50:	str	r2, [fp, #-12]
   14a54:	str	r3, [fp, #-16]
   14a58:	ldr	r1, [fp, #-8]
   14a5c:	mov	r0, sp
   14a60:	bl	149ec <__assert_fail@plt+0x35c0>
   14a64:	ldr	r0, [fp, #-4]
   14a68:	ldr	r1, [fp, #-12]
   14a6c:	ldr	r2, [fp, #-16]
   14a70:	mov	r3, sp
   14a74:	bl	14658 <__assert_fail@plt+0x322c>
   14a78:	mov	sp, fp
   14a7c:	pop	{fp, pc}
   14a80:	push	{fp, lr}
   14a84:	mov	fp, sp
   14a88:	sub	sp, sp, #8
   14a8c:	str	r0, [sp, #4]
   14a90:	str	r1, [sp]
   14a94:	ldr	r1, [sp, #4]
   14a98:	ldr	r2, [sp]
   14a9c:	movw	r0, #0
   14aa0:	bl	149ac <__assert_fail@plt+0x3580>
   14aa4:	mov	sp, fp
   14aa8:	pop	{fp, pc}
   14aac:	push	{fp, lr}
   14ab0:	mov	fp, sp
   14ab4:	sub	sp, sp, #16
   14ab8:	str	r0, [fp, #-4]
   14abc:	str	r1, [sp, #8]
   14ac0:	str	r2, [sp, #4]
   14ac4:	ldr	r1, [fp, #-4]
   14ac8:	ldr	r2, [sp, #8]
   14acc:	ldr	r3, [sp, #4]
   14ad0:	movw	r0, #0
   14ad4:	bl	14a3c <__assert_fail@plt+0x3610>
   14ad8:	mov	sp, fp
   14adc:	pop	{fp, pc}
   14ae0:	push	{fp, lr}
   14ae4:	mov	fp, sp
   14ae8:	sub	sp, sp, #72	; 0x48
   14aec:	movw	r3, #4516	; 0x11a4
   14af0:	movt	r3, #3
   14af4:	str	r0, [fp, #-4]
   14af8:	str	r1, [fp, #-8]
   14afc:	strb	r2, [fp, #-9]
   14b00:	add	r0, sp, #12
   14b04:	mov	r1, r0
   14b08:	str	r0, [sp, #8]
   14b0c:	mov	r0, r1
   14b10:	mov	r1, r3
   14b14:	movw	r2, #48	; 0x30
   14b18:	bl	111a4 <memcpy@plt>
   14b1c:	ldr	r0, [sp, #8]
   14b20:	ldrb	r1, [fp, #-9]
   14b24:	movw	r2, #1
   14b28:	bl	129f0 <__assert_fail@plt+0x15c4>
   14b2c:	ldr	r1, [fp, #-4]
   14b30:	ldr	r2, [fp, #-8]
   14b34:	movw	r3, #0
   14b38:	str	r0, [sp, #4]
   14b3c:	mov	r0, r3
   14b40:	add	r3, sp, #12
   14b44:	bl	14658 <__assert_fail@plt+0x322c>
   14b48:	mov	sp, fp
   14b4c:	pop	{fp, pc}
   14b50:	push	{fp, lr}
   14b54:	mov	fp, sp
   14b58:	sub	sp, sp, #8
   14b5c:	str	r0, [sp, #4]
   14b60:	strb	r1, [sp, #3]
   14b64:	ldr	r0, [sp, #4]
   14b68:	mvn	r1, #0
   14b6c:	ldrb	r2, [sp, #3]
   14b70:	bl	14ae0 <__assert_fail@plt+0x36b4>
   14b74:	mov	sp, fp
   14b78:	pop	{fp, pc}
   14b7c:	push	{fp, lr}
   14b80:	mov	fp, sp
   14b84:	sub	sp, sp, #8
   14b88:	str	r0, [sp, #4]
   14b8c:	ldr	r0, [sp, #4]
   14b90:	movw	r1, #58	; 0x3a
   14b94:	and	r1, r1, #255	; 0xff
   14b98:	bl	14b50 <__assert_fail@plt+0x3724>
   14b9c:	mov	sp, fp
   14ba0:	pop	{fp, pc}
   14ba4:	push	{fp, lr}
   14ba8:	mov	fp, sp
   14bac:	sub	sp, sp, #8
   14bb0:	str	r0, [sp, #4]
   14bb4:	str	r1, [sp]
   14bb8:	ldr	r0, [sp, #4]
   14bbc:	ldr	r1, [sp]
   14bc0:	movw	r2, #58	; 0x3a
   14bc4:	and	r2, r2, #255	; 0xff
   14bc8:	bl	14ae0 <__assert_fail@plt+0x36b4>
   14bcc:	mov	sp, fp
   14bd0:	pop	{fp, pc}
   14bd4:	push	{fp, lr}
   14bd8:	mov	fp, sp
   14bdc:	sub	sp, sp, #120	; 0x78
   14be0:	str	r0, [fp, #-4]
   14be4:	str	r1, [fp, #-8]
   14be8:	str	r2, [fp, #-12]
   14bec:	ldr	r1, [fp, #-8]
   14bf0:	add	r0, sp, #12
   14bf4:	bl	149ec <__assert_fail@plt+0x35c0>
   14bf8:	add	r0, sp, #60	; 0x3c
   14bfc:	mov	r1, r0
   14c00:	add	r2, sp, #12
   14c04:	str	r0, [sp, #8]
   14c08:	mov	r0, r1
   14c0c:	mov	r1, r2
   14c10:	movw	r2, #48	; 0x30
   14c14:	bl	111a4 <memcpy@plt>
   14c18:	ldr	r0, [sp, #8]
   14c1c:	movw	r1, #58	; 0x3a
   14c20:	and	r1, r1, #255	; 0xff
   14c24:	movw	r2, #1
   14c28:	bl	129f0 <__assert_fail@plt+0x15c4>
   14c2c:	ldr	r1, [fp, #-4]
   14c30:	ldr	r2, [fp, #-12]
   14c34:	str	r0, [sp, #4]
   14c38:	mov	r0, r1
   14c3c:	mov	r1, r2
   14c40:	mvn	r2, #0
   14c44:	add	r3, sp, #60	; 0x3c
   14c48:	bl	14658 <__assert_fail@plt+0x322c>
   14c4c:	mov	sp, fp
   14c50:	pop	{fp, pc}
   14c54:	push	{fp, lr}
   14c58:	mov	fp, sp
   14c5c:	sub	sp, sp, #24
   14c60:	str	r0, [fp, #-4]
   14c64:	str	r1, [fp, #-8]
   14c68:	str	r2, [sp, #12]
   14c6c:	str	r3, [sp, #8]
   14c70:	ldr	r0, [fp, #-4]
   14c74:	ldr	r1, [fp, #-8]
   14c78:	ldr	r2, [sp, #12]
   14c7c:	ldr	r3, [sp, #8]
   14c80:	mvn	ip, #0
   14c84:	str	ip, [sp]
   14c88:	bl	14c94 <__assert_fail@plt+0x3868>
   14c8c:	mov	sp, fp
   14c90:	pop	{fp, pc}
   14c94:	push	{fp, lr}
   14c98:	mov	fp, sp
   14c9c:	sub	sp, sp, #72	; 0x48
   14ca0:	ldr	ip, [fp, #8]
   14ca4:	movw	lr, #4516	; 0x11a4
   14ca8:	movt	lr, #3
   14cac:	str	r0, [fp, #-4]
   14cb0:	str	r1, [fp, #-8]
   14cb4:	str	r2, [fp, #-12]
   14cb8:	str	r3, [fp, #-16]
   14cbc:	add	r0, sp, #8
   14cc0:	mov	r1, r0
   14cc4:	str	r0, [sp, #4]
   14cc8:	mov	r0, r1
   14ccc:	mov	r1, lr
   14cd0:	movw	r2, #48	; 0x30
   14cd4:	str	ip, [sp]
   14cd8:	bl	111a4 <memcpy@plt>
   14cdc:	ldr	r1, [fp, #-8]
   14ce0:	ldr	r2, [fp, #-12]
   14ce4:	ldr	r0, [sp, #4]
   14ce8:	bl	12af0 <__assert_fail@plt+0x16c4>
   14cec:	ldr	r0, [fp, #-4]
   14cf0:	ldr	r1, [fp, #-16]
   14cf4:	ldr	r2, [fp, #8]
   14cf8:	add	r3, sp, #8
   14cfc:	bl	14658 <__assert_fail@plt+0x322c>
   14d00:	mov	sp, fp
   14d04:	pop	{fp, pc}
   14d08:	push	{fp, lr}
   14d0c:	mov	fp, sp
   14d10:	sub	sp, sp, #16
   14d14:	str	r0, [fp, #-4]
   14d18:	str	r1, [sp, #8]
   14d1c:	str	r2, [sp, #4]
   14d20:	ldr	r1, [fp, #-4]
   14d24:	ldr	r2, [sp, #8]
   14d28:	ldr	r3, [sp, #4]
   14d2c:	movw	r0, #0
   14d30:	bl	14c54 <__assert_fail@plt+0x3828>
   14d34:	mov	sp, fp
   14d38:	pop	{fp, pc}
   14d3c:	push	{fp, lr}
   14d40:	mov	fp, sp
   14d44:	sub	sp, sp, #24
   14d48:	str	r0, [fp, #-4]
   14d4c:	str	r1, [fp, #-8]
   14d50:	str	r2, [sp, #12]
   14d54:	str	r3, [sp, #8]
   14d58:	ldr	r1, [fp, #-4]
   14d5c:	ldr	r2, [fp, #-8]
   14d60:	ldr	r3, [sp, #12]
   14d64:	ldr	r0, [sp, #8]
   14d68:	movw	ip, #0
   14d6c:	str	r0, [sp, #4]
   14d70:	mov	r0, ip
   14d74:	ldr	ip, [sp, #4]
   14d78:	str	ip, [sp]
   14d7c:	bl	14c94 <__assert_fail@plt+0x3868>
   14d80:	mov	sp, fp
   14d84:	pop	{fp, pc}
   14d88:	push	{fp, lr}
   14d8c:	mov	fp, sp
   14d90:	sub	sp, sp, #16
   14d94:	str	r0, [fp, #-4]
   14d98:	str	r1, [sp, #8]
   14d9c:	str	r2, [sp, #4]
   14da0:	ldr	r0, [fp, #-4]
   14da4:	ldr	r1, [sp, #8]
   14da8:	ldr	r2, [sp, #4]
   14dac:	movw	r3, #4408	; 0x1138
   14db0:	movt	r3, #3
   14db4:	bl	14658 <__assert_fail@plt+0x322c>
   14db8:	mov	sp, fp
   14dbc:	pop	{fp, pc}
   14dc0:	push	{fp, lr}
   14dc4:	mov	fp, sp
   14dc8:	sub	sp, sp, #8
   14dcc:	str	r0, [sp, #4]
   14dd0:	str	r1, [sp]
   14dd4:	ldr	r1, [sp, #4]
   14dd8:	ldr	r2, [sp]
   14ddc:	movw	r0, #0
   14de0:	bl	14d88 <__assert_fail@plt+0x395c>
   14de4:	mov	sp, fp
   14de8:	pop	{fp, pc}
   14dec:	push	{fp, lr}
   14df0:	mov	fp, sp
   14df4:	sub	sp, sp, #8
   14df8:	str	r0, [sp, #4]
   14dfc:	str	r1, [sp]
   14e00:	ldr	r0, [sp, #4]
   14e04:	ldr	r1, [sp]
   14e08:	mvn	r2, #0
   14e0c:	bl	14d88 <__assert_fail@plt+0x395c>
   14e10:	mov	sp, fp
   14e14:	pop	{fp, pc}
   14e18:	push	{fp, lr}
   14e1c:	mov	fp, sp
   14e20:	sub	sp, sp, #8
   14e24:	str	r0, [sp, #4]
   14e28:	ldr	r1, [sp, #4]
   14e2c:	movw	r0, #0
   14e30:	bl	14dec <__assert_fail@plt+0x39c0>
   14e34:	mov	sp, fp
   14e38:	pop	{fp, pc}
   14e3c:	push	{fp, lr}
   14e40:	mov	fp, sp
   14e44:	sub	sp, sp, #24
   14e48:	str	r0, [fp, #-8]
   14e4c:	str	r1, [sp, #12]
   14e50:	ldr	r0, [fp, #-8]
   14e54:	bl	112d0 <gettext@plt>
   14e58:	str	r0, [sp, #8]
   14e5c:	ldr	r0, [sp, #8]
   14e60:	ldr	r1, [fp, #-8]
   14e64:	cmp	r0, r1
   14e68:	beq	14e78 <__assert_fail@plt+0x3a4c>
   14e6c:	ldr	r0, [sp, #8]
   14e70:	str	r0, [fp, #-4]
   14e74:	b	14f44 <__assert_fail@plt+0x3b18>
   14e78:	bl	1d0b8 <__assert_fail@plt+0xbc8c>
   14e7c:	str	r0, [sp, #4]
   14e80:	ldr	r0, [sp, #4]
   14e84:	movw	r1, #64664	; 0xfc98
   14e88:	movt	r1, #1
   14e8c:	bl	1c98c <__assert_fail@plt+0xb560>
   14e90:	cmp	r0, #0
   14e94:	bne	14ecc <__assert_fail@plt+0x3aa0>
   14e98:	ldr	r0, [fp, #-8]
   14e9c:	ldrb	r0, [r0]
   14ea0:	cmp	r0, #96	; 0x60
   14ea4:	movw	r0, #0
   14ea8:	moveq	r0, #1
   14eac:	tst	r0, #1
   14eb0:	movw	r0, #64674	; 0xfca2
   14eb4:	movt	r0, #1
   14eb8:	movw	r1, #64670	; 0xfc9e
   14ebc:	movt	r1, #1
   14ec0:	movne	r0, r1
   14ec4:	str	r0, [fp, #-4]
   14ec8:	b	14f44 <__assert_fail@plt+0x3b18>
   14ecc:	ldr	r0, [sp, #4]
   14ed0:	movw	r1, #64678	; 0xfca6
   14ed4:	movt	r1, #1
   14ed8:	bl	1c98c <__assert_fail@plt+0xb560>
   14edc:	cmp	r0, #0
   14ee0:	bne	14f18 <__assert_fail@plt+0x3aec>
   14ee4:	ldr	r0, [fp, #-8]
   14ee8:	ldrb	r0, [r0]
   14eec:	cmp	r0, #96	; 0x60
   14ef0:	movw	r0, #0
   14ef4:	moveq	r0, #1
   14ef8:	tst	r0, #1
   14efc:	movw	r0, #64690	; 0xfcb2
   14f00:	movt	r0, #1
   14f04:	movw	r1, #64686	; 0xfcae
   14f08:	movt	r1, #1
   14f0c:	movne	r0, r1
   14f10:	str	r0, [fp, #-4]
   14f14:	b	14f44 <__assert_fail@plt+0x3b18>
   14f18:	ldr	r0, [sp, #12]
   14f1c:	cmp	r0, #9
   14f20:	movw	r0, #0
   14f24:	moveq	r0, #1
   14f28:	tst	r0, #1
   14f2c:	movw	r0, #64662	; 0xfc96
   14f30:	movt	r0, #1
   14f34:	movw	r1, #64658	; 0xfc92
   14f38:	movt	r1, #1
   14f3c:	movne	r0, r1
   14f40:	str	r0, [fp, #-4]
   14f44:	ldr	r0, [fp, #-4]
   14f48:	mov	sp, fp
   14f4c:	pop	{fp, pc}
   14f50:	push	{fp, lr}
   14f54:	mov	fp, sp
   14f58:	sub	sp, sp, #40	; 0x28
   14f5c:	ldr	ip, [fp, #8]
   14f60:	str	r0, [fp, #-4]
   14f64:	str	r1, [fp, #-8]
   14f68:	str	r2, [fp, #-12]
   14f6c:	str	r3, [fp, #-16]
   14f70:	ldr	r0, [fp, #-12]
   14f74:	movw	r1, #0
   14f78:	cmp	r0, r1
   14f7c:	beq	14f94 <__assert_fail@plt+0x3b68>
   14f80:	ldr	r0, [fp, #-4]
   14f84:	movw	r1, #58	; 0x3a
   14f88:	bl	112f4 <strchr@plt>
   14f8c:	str	r0, [sp, #8]
   14f90:	b	14fa0 <__assert_fail@plt+0x3b74>
   14f94:	movw	r0, #0
   14f98:	str	r0, [sp, #8]
   14f9c:	b	14fa0 <__assert_fail@plt+0x3b74>
   14fa0:	ldr	r0, [sp, #8]
   14fa4:	str	r0, [sp, #20]
   14fa8:	ldr	r0, [fp, #-4]
   14fac:	ldr	r1, [sp, #20]
   14fb0:	ldr	r2, [fp, #-8]
   14fb4:	ldr	r3, [fp, #-12]
   14fb8:	ldr	ip, [fp, #-16]
   14fbc:	ldr	lr, [fp, #8]
   14fc0:	str	ip, [sp]
   14fc4:	str	lr, [sp, #4]
   14fc8:	bl	15068 <__assert_fail@plt+0x3c3c>
   14fcc:	str	r0, [sp, #16]
   14fd0:	ldr	r0, [fp, #-12]
   14fd4:	movw	r1, #0
   14fd8:	cmp	r0, r1
   14fdc:	beq	1505c <__assert_fail@plt+0x3c30>
   14fe0:	ldr	r0, [sp, #20]
   14fe4:	movw	r1, #0
   14fe8:	cmp	r0, r1
   14fec:	bne	1505c <__assert_fail@plt+0x3c30>
   14ff0:	ldr	r0, [sp, #16]
   14ff4:	movw	r1, #0
   14ff8:	cmp	r0, r1
   14ffc:	beq	1505c <__assert_fail@plt+0x3c30>
   15000:	ldr	r0, [fp, #-4]
   15004:	movw	r1, #46	; 0x2e
   15008:	bl	112f4 <strchr@plt>
   1500c:	str	r0, [sp, #12]
   15010:	ldr	r0, [sp, #12]
   15014:	movw	r1, #0
   15018:	cmp	r0, r1
   1501c:	beq	15058 <__assert_fail@plt+0x3c2c>
   15020:	ldr	r0, [fp, #-4]
   15024:	ldr	r1, [sp, #12]
   15028:	ldr	r2, [fp, #-8]
   1502c:	ldr	r3, [fp, #-12]
   15030:	ldr	ip, [fp, #-16]
   15034:	ldr	lr, [fp, #8]
   15038:	str	ip, [sp]
   1503c:	str	lr, [sp, #4]
   15040:	bl	15068 <__assert_fail@plt+0x3c3c>
   15044:	movw	r1, #0
   15048:	cmp	r0, r1
   1504c:	bne	15058 <__assert_fail@plt+0x3c2c>
   15050:	movw	r0, #0
   15054:	str	r0, [sp, #16]
   15058:	b	1505c <__assert_fail@plt+0x3c30>
   1505c:	ldr	r0, [sp, #16]
   15060:	mov	sp, fp
   15064:	pop	{fp, pc}
   15068:	push	{fp, lr}
   1506c:	mov	fp, sp
   15070:	sub	sp, sp, #120	; 0x78
   15074:	ldr	ip, [fp, #12]
   15078:	ldr	lr, [fp, #8]
   1507c:	str	r0, [fp, #-4]
   15080:	str	r1, [fp, #-8]
   15084:	str	r2, [fp, #-12]
   15088:	str	r3, [fp, #-16]
   1508c:	movw	r0, #0
   15090:	str	r0, [fp, #-40]	; 0xffffffd8
   15094:	ldr	r1, [fp, #-12]
   15098:	ldr	r1, [r1]
   1509c:	str	r1, [fp, #-44]	; 0xffffffd4
   150a0:	ldr	r1, [fp, #-16]
   150a4:	cmp	r1, r0
   150a8:	beq	150bc <__assert_fail@plt+0x3c90>
   150ac:	ldr	r0, [fp, #-16]
   150b0:	ldr	r0, [r0]
   150b4:	str	r0, [sp, #28]
   150b8:	b	150c8 <__assert_fail@plt+0x3c9c>
   150bc:	mvn	r0, #0
   150c0:	str	r0, [sp, #28]
   150c4:	b	150c8 <__assert_fail@plt+0x3c9c>
   150c8:	ldr	r0, [sp, #28]
   150cc:	str	r0, [fp, #-48]	; 0xffffffd0
   150d0:	movw	r0, #0
   150d4:	str	r0, [fp, #-20]	; 0xffffffec
   150d8:	ldr	r1, [fp, #8]
   150dc:	cmp	r1, r0
   150e0:	beq	150f0 <__assert_fail@plt+0x3cc4>
   150e4:	ldr	r0, [fp, #8]
   150e8:	movw	r1, #0
   150ec:	str	r1, [r0]
   150f0:	ldr	r0, [fp, #12]
   150f4:	movw	r1, #0
   150f8:	cmp	r0, r1
   150fc:	beq	1510c <__assert_fail@plt+0x3ce0>
   15100:	ldr	r0, [fp, #12]
   15104:	movw	r1, #0
   15108:	str	r1, [r0]
   1510c:	movw	r0, #0
   15110:	str	r0, [fp, #-32]	; 0xffffffe0
   15114:	ldr	r1, [fp, #-8]
   15118:	cmp	r1, r0
   1511c:	bne	15140 <__assert_fail@plt+0x3d14>
   15120:	ldr	r0, [fp, #-4]
   15124:	ldrsb	r0, [r0]
   15128:	cmp	r0, #0
   1512c:	beq	1513c <__assert_fail@plt+0x3d10>
   15130:	ldr	r0, [fp, #-4]
   15134:	bl	18adc <__assert_fail@plt+0x76b0>
   15138:	str	r0, [fp, #-32]	; 0xffffffe0
   1513c:	b	15188 <__assert_fail@plt+0x3d5c>
   15140:	ldr	r0, [fp, #-8]
   15144:	ldr	r1, [fp, #-4]
   15148:	sub	r0, r0, r1
   1514c:	str	r0, [fp, #-52]	; 0xffffffcc
   15150:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15154:	cmp	r0, #0
   15158:	beq	15184 <__assert_fail@plt+0x3d58>
   1515c:	ldr	r0, [fp, #-4]
   15160:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15164:	add	r1, r1, #1
   15168:	bl	18a4c <__assert_fail@plt+0x7620>
   1516c:	str	r0, [fp, #-32]	; 0xffffffe0
   15170:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15174:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15178:	add	r0, r0, r1
   1517c:	movw	r1, #0
   15180:	strb	r1, [r0]
   15184:	b	15188 <__assert_fail@plt+0x3d5c>
   15188:	ldr	r0, [fp, #-8]
   1518c:	movw	r1, #0
   15190:	cmp	r0, r1
   15194:	beq	151a8 <__assert_fail@plt+0x3d7c>
   15198:	ldr	r0, [fp, #-8]
   1519c:	ldrb	r0, [r0, #1]
   151a0:	cmp	r0, #0
   151a4:	bne	151b4 <__assert_fail@plt+0x3d88>
   151a8:	movw	r0, #0
   151ac:	str	r0, [sp, #24]
   151b0:	b	151c0 <__assert_fail@plt+0x3d94>
   151b4:	ldr	r0, [fp, #-8]
   151b8:	add	r0, r0, #1
   151bc:	str	r0, [sp, #24]
   151c0:	ldr	r0, [sp, #24]
   151c4:	str	r0, [fp, #-36]	; 0xffffffdc
   151c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   151cc:	movw	r1, #0
   151d0:	cmp	r0, r1
   151d4:	beq	15368 <__assert_fail@plt+0x3f3c>
   151d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   151dc:	ldrb	r0, [r0]
   151e0:	cmp	r0, #43	; 0x2b
   151e4:	bne	151f4 <__assert_fail@plt+0x3dc8>
   151e8:	movw	r0, #0
   151ec:	str	r0, [sp, #20]
   151f0:	b	15200 <__assert_fail@plt+0x3dd4>
   151f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   151f8:	bl	11150 <getpwnam@plt>
   151fc:	str	r0, [sp, #20]
   15200:	ldr	r0, [sp, #20]
   15204:	str	r0, [fp, #-24]	; 0xffffffe8
   15208:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1520c:	movw	r1, #0
   15210:	cmp	r0, r1
   15214:	bne	152d8 <__assert_fail@plt+0x3eac>
   15218:	ldr	r0, [fp, #-8]
   1521c:	movw	r1, #0
   15220:	cmp	r0, r1
   15224:	movw	r0, #0
   15228:	str	r0, [sp, #16]
   1522c:	beq	15248 <__assert_fail@plt+0x3e1c>
   15230:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15234:	movw	r1, #0
   15238:	cmp	r0, r1
   1523c:	movw	r0, #0
   15240:	moveq	r0, #1
   15244:	str	r0, [sp, #16]
   15248:	ldr	r0, [sp, #16]
   1524c:	and	r0, r0, #1
   15250:	strb	r0, [fp, #-53]	; 0xffffffcb
   15254:	ldrb	r0, [fp, #-53]	; 0xffffffcb
   15258:	tst	r0, #1
   1525c:	beq	15274 <__assert_fail@plt+0x3e48>
   15260:	movw	r0, #4464	; 0x1170
   15264:	movt	r0, #3
   15268:	ldr	r0, [r0]
   1526c:	str	r0, [fp, #-20]	; 0xffffffec
   15270:	b	152d4 <__assert_fail@plt+0x3ea8>
   15274:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15278:	movw	r1, #0
   1527c:	movw	r2, #10
   15280:	add	r3, sp, #60	; 0x3c
   15284:	movw	ip, #63164	; 0xf6bc
   15288:	movt	ip, #1
   1528c:	str	ip, [sp]
   15290:	bl	18bbc <__assert_fail@plt+0x7790>
   15294:	cmp	r0, #0
   15298:	bne	152c0 <__assert_fail@plt+0x3e94>
   1529c:	ldr	r0, [sp, #60]	; 0x3c
   152a0:	cmn	r0, #1
   152a4:	bhi	152c0 <__assert_fail@plt+0x3e94>
   152a8:	ldr	r0, [sp, #60]	; 0x3c
   152ac:	cmn	r0, #1
   152b0:	beq	152c0 <__assert_fail@plt+0x3e94>
   152b4:	ldr	r0, [sp, #60]	; 0x3c
   152b8:	str	r0, [fp, #-44]	; 0xffffffd4
   152bc:	b	152d0 <__assert_fail@plt+0x3ea4>
   152c0:	movw	r0, #4456	; 0x1168
   152c4:	movt	r0, #3
   152c8:	ldr	r0, [r0]
   152cc:	str	r0, [fp, #-20]	; 0xffffffec
   152d0:	b	152d4 <__assert_fail@plt+0x3ea8>
   152d4:	b	15364 <__assert_fail@plt+0x3f38>
   152d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152dc:	ldr	r0, [r0, #8]
   152e0:	str	r0, [fp, #-44]	; 0xffffffd4
   152e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   152e8:	movw	r1, #0
   152ec:	cmp	r0, r1
   152f0:	bne	15360 <__assert_fail@plt+0x3f34>
   152f4:	ldr	r0, [fp, #-8]
   152f8:	movw	r1, #0
   152fc:	cmp	r0, r1
   15300:	beq	15360 <__assert_fail@plt+0x3f34>
   15304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15308:	ldr	r0, [r0, #12]
   1530c:	str	r0, [fp, #-48]	; 0xffffffd0
   15310:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15314:	bl	11414 <getgrgid@plt>
   15318:	str	r0, [fp, #-28]	; 0xffffffe4
   1531c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15320:	movw	r1, #0
   15324:	cmp	r0, r1
   15328:	beq	1533c <__assert_fail@plt+0x3f10>
   1532c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15330:	ldr	r0, [r0]
   15334:	str	r0, [sp, #12]
   15338:	b	15350 <__assert_fail@plt+0x3f24>
   1533c:	add	r2, sp, #39	; 0x27
   15340:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15344:	mov	r1, #0
   15348:	bl	1cf88 <__assert_fail@plt+0xbb5c>
   1534c:	str	r0, [sp, #12]
   15350:	ldr	r0, [sp, #12]
   15354:	bl	18adc <__assert_fail@plt+0x76b0>
   15358:	str	r0, [fp, #-40]	; 0xffffffd8
   1535c:	bl	1112c <endgrent@plt>
   15360:	b	15364 <__assert_fail@plt+0x3f38>
   15364:	bl	1139c <endpwent@plt>
   15368:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1536c:	movw	r1, #0
   15370:	cmp	r0, r1
   15374:	beq	15444 <__assert_fail@plt+0x4018>
   15378:	ldr	r0, [fp, #-20]	; 0xffffffec
   1537c:	movw	r1, #0
   15380:	cmp	r0, r1
   15384:	bne	15444 <__assert_fail@plt+0x4018>
   15388:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1538c:	ldrb	r0, [r0]
   15390:	cmp	r0, #43	; 0x2b
   15394:	bne	153a4 <__assert_fail@plt+0x3f78>
   15398:	movw	r0, #0
   1539c:	str	r0, [sp, #8]
   153a0:	b	153b0 <__assert_fail@plt+0x3f84>
   153a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   153a8:	bl	11420 <getgrnam@plt>
   153ac:	str	r0, [sp, #8]
   153b0:	ldr	r0, [sp, #8]
   153b4:	str	r0, [fp, #-28]	; 0xffffffe4
   153b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   153bc:	movw	r1, #0
   153c0:	cmp	r0, r1
   153c4:	bne	15428 <__assert_fail@plt+0x3ffc>
   153c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   153cc:	movw	r1, #0
   153d0:	movw	r2, #10
   153d4:	add	r3, sp, #32
   153d8:	movw	ip, #63164	; 0xf6bc
   153dc:	movt	ip, #1
   153e0:	str	ip, [sp]
   153e4:	bl	18bbc <__assert_fail@plt+0x7790>
   153e8:	cmp	r0, #0
   153ec:	bne	15414 <__assert_fail@plt+0x3fe8>
   153f0:	ldr	r0, [sp, #32]
   153f4:	cmn	r0, #1
   153f8:	bhi	15414 <__assert_fail@plt+0x3fe8>
   153fc:	ldr	r0, [sp, #32]
   15400:	cmn	r0, #1
   15404:	beq	15414 <__assert_fail@plt+0x3fe8>
   15408:	ldr	r0, [sp, #32]
   1540c:	str	r0, [fp, #-48]	; 0xffffffd0
   15410:	b	15424 <__assert_fail@plt+0x3ff8>
   15414:	movw	r0, #4460	; 0x116c
   15418:	movt	r0, #3
   1541c:	ldr	r0, [r0]
   15420:	str	r0, [fp, #-20]	; 0xffffffec
   15424:	b	15434 <__assert_fail@plt+0x4008>
   15428:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1542c:	ldr	r0, [r0, #8]
   15430:	str	r0, [fp, #-48]	; 0xffffffd0
   15434:	bl	1112c <endgrent@plt>
   15438:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1543c:	bl	18adc <__assert_fail@plt+0x76b0>
   15440:	str	r0, [fp, #-40]	; 0xffffffd8
   15444:	ldr	r0, [fp, #-20]	; 0xffffffec
   15448:	movw	r1, #0
   1544c:	cmp	r0, r1
   15450:	bne	154c8 <__assert_fail@plt+0x409c>
   15454:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15458:	ldr	r1, [fp, #-12]
   1545c:	str	r0, [r1]
   15460:	ldr	r0, [fp, #-16]
   15464:	movw	r1, #0
   15468:	cmp	r0, r1
   1546c:	beq	1547c <__assert_fail@plt+0x4050>
   15470:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15474:	ldr	r1, [fp, #-16]
   15478:	str	r0, [r1]
   1547c:	ldr	r0, [fp, #8]
   15480:	movw	r1, #0
   15484:	cmp	r0, r1
   15488:	beq	154a0 <__assert_fail@plt+0x4074>
   1548c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15490:	ldr	r1, [fp, #8]
   15494:	str	r0, [r1]
   15498:	movw	r0, #0
   1549c:	str	r0, [fp, #-32]	; 0xffffffe0
   154a0:	ldr	r0, [fp, #12]
   154a4:	movw	r1, #0
   154a8:	cmp	r0, r1
   154ac:	beq	154c4 <__assert_fail@plt+0x4098>
   154b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   154b4:	ldr	r1, [fp, #12]
   154b8:	str	r0, [r1]
   154bc:	movw	r0, #0
   154c0:	str	r0, [fp, #-40]	; 0xffffffd8
   154c4:	b	154c8 <__assert_fail@plt+0x409c>
   154c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   154cc:	bl	1277c <__assert_fail@plt+0x1350>
   154d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   154d4:	bl	1277c <__assert_fail@plt+0x1350>
   154d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   154dc:	movw	r1, #0
   154e0:	cmp	r0, r1
   154e4:	beq	154f8 <__assert_fail@plt+0x40cc>
   154e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   154ec:	bl	112d0 <gettext@plt>
   154f0:	str	r0, [sp, #4]
   154f4:	b	15504 <__assert_fail@plt+0x40d8>
   154f8:	movw	r0, #0
   154fc:	str	r0, [sp, #4]
   15500:	b	15504 <__assert_fail@plt+0x40d8>
   15504:	ldr	r0, [sp, #4]
   15508:	mov	sp, fp
   1550c:	pop	{fp, pc}
   15510:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15514:	add	fp, sp, #28
   15518:	sub	sp, sp, #196	; 0xc4
   1551c:	ldr	ip, [fp, #12]
   15520:	ldr	lr, [fp, #8]
   15524:	str	r0, [fp, #-32]	; 0xffffffe0
   15528:	str	r1, [fp, #-36]	; 0xffffffdc
   1552c:	str	r2, [fp, #-40]	; 0xffffffd8
   15530:	str	r3, [fp, #-44]	; 0xffffffd4
   15534:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15538:	movw	r1, #0
   1553c:	cmp	r0, r1
   15540:	beq	15574 <__assert_fail@plt+0x4148>
   15544:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15548:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1554c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15550:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15554:	movw	ip, #64820	; 0xfd34
   15558:	movt	ip, #1
   1555c:	str	r1, [fp, #-48]	; 0xffffffd0
   15560:	mov	r1, ip
   15564:	ldr	ip, [fp, #-48]	; 0xffffffd0
   15568:	str	ip, [sp]
   1556c:	bl	11300 <fprintf@plt>
   15570:	b	1558c <__assert_fail@plt+0x4160>
   15574:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15578:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1557c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15580:	movw	r1, #64832	; 0xfd40
   15584:	movt	r1, #1
   15588:	bl	11300 <fprintf@plt>
   1558c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15590:	movw	r1, #64839	; 0xfd47
   15594:	movt	r1, #1
   15598:	str	r0, [fp, #-52]	; 0xffffffcc
   1559c:	mov	r0, r1
   155a0:	bl	112d0 <gettext@plt>
   155a4:	movw	r1, #21
   155a8:	movt	r1, #2
   155ac:	movw	r3, #2022	; 0x7e6
   155b0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   155b4:	str	r0, [fp, #-56]	; 0xffffffc8
   155b8:	mov	r0, r2
   155bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   155c0:	bl	11300 <fprintf@plt>
   155c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   155c8:	movw	r2, #63163	; 0xf6bb
   155cc:	movt	r2, #1
   155d0:	str	r0, [fp, #-60]	; 0xffffffc4
   155d4:	mov	r0, r2
   155d8:	str	r2, [fp, #-64]	; 0xffffffc0
   155dc:	bl	11138 <fputs_unlocked@plt>
   155e0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   155e4:	movw	r2, #64843	; 0xfd4b
   155e8:	movt	r2, #1
   155ec:	str	r0, [fp, #-68]	; 0xffffffbc
   155f0:	mov	r0, r2
   155f4:	str	r1, [fp, #-72]	; 0xffffffb8
   155f8:	bl	112d0 <gettext@plt>
   155fc:	movw	r2, #65014	; 0xfdf6
   15600:	movt	r2, #1
   15604:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15608:	str	r0, [fp, #-76]	; 0xffffffb4
   1560c:	mov	r0, r1
   15610:	ldr	r1, [fp, #-76]	; 0xffffffb4
   15614:	bl	11300 <fprintf@plt>
   15618:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1561c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15620:	str	r0, [fp, #-80]	; 0xffffffb0
   15624:	mov	r0, r2
   15628:	bl	11138 <fputs_unlocked@plt>
   1562c:	ldr	r1, [fp, #12]
   15630:	cmp	r1, #9
   15634:	str	r1, [fp, #-84]	; 0xffffffac
   15638:	bhi	15a54 <__assert_fail@plt+0x4628>
   1563c:	add	r0, pc, #8
   15640:	ldr	r1, [fp, #-84]	; 0xffffffac
   15644:	ldr	r0, [r0, r1, lsl #2]
   15648:	mov	pc, r0
   1564c:	andeq	r5, r1, r4, ror r6
   15650:	andeq	r5, r1, r8, ror r6
   15654:			; <UNDEFINED> instruction: 0x000156b0
   15658:	strdeq	r5, [r1], -r0
   1565c:	andeq	r5, r1, r8, asr #14
   15660:	andeq	r5, r1, ip, lsr #15
   15664:	andeq	r5, r1, ip, lsl r8
   15668:	muleq	r1, r8, r8
   1566c:	andeq	r5, r1, r0, lsr #18
   15670:			; <UNDEFINED> instruction: 0x000159b4
   15674:	b	15af0 <__assert_fail@plt+0x46c4>
   15678:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1567c:	movw	r1, #65048	; 0xfe18
   15680:	movt	r1, #1
   15684:	str	r0, [fp, #-88]	; 0xffffffa8
   15688:	mov	r0, r1
   1568c:	bl	112d0 <gettext@plt>
   15690:	ldr	r1, [fp, #8]
   15694:	ldr	r2, [r1]
   15698:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1569c:	str	r0, [fp, #-92]	; 0xffffffa4
   156a0:	mov	r0, r1
   156a4:	ldr	r1, [fp, #-92]	; 0xffffffa4
   156a8:	bl	11300 <fprintf@plt>
   156ac:	b	15af0 <__assert_fail@plt+0x46c4>
   156b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   156b4:	movw	r1, #65064	; 0xfe28
   156b8:	movt	r1, #1
   156bc:	str	r0, [fp, #-96]	; 0xffffffa0
   156c0:	mov	r0, r1
   156c4:	bl	112d0 <gettext@plt>
   156c8:	ldr	r1, [fp, #8]
   156cc:	ldr	r2, [r1]
   156d0:	ldr	r1, [fp, #8]
   156d4:	ldr	r3, [r1, #4]
   156d8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   156dc:	str	r0, [fp, #-100]	; 0xffffff9c
   156e0:	mov	r0, r1
   156e4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   156e8:	bl	11300 <fprintf@plt>
   156ec:	b	15af0 <__assert_fail@plt+0x46c4>
   156f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   156f4:	movw	r1, #65087	; 0xfe3f
   156f8:	movt	r1, #1
   156fc:	str	r0, [fp, #-104]	; 0xffffff98
   15700:	mov	r0, r1
   15704:	bl	112d0 <gettext@plt>
   15708:	ldr	r1, [fp, #8]
   1570c:	ldr	r2, [r1]
   15710:	ldr	r1, [fp, #8]
   15714:	ldr	r3, [r1, #4]
   15718:	ldr	r1, [fp, #8]
   1571c:	ldr	r1, [r1, #8]
   15720:	ldr	ip, [fp, #-104]	; 0xffffff98
   15724:	str	r0, [fp, #-108]	; 0xffffff94
   15728:	mov	r0, ip
   1572c:	ldr	lr, [fp, #-108]	; 0xffffff94
   15730:	str	r1, [sp, #112]	; 0x70
   15734:	mov	r1, lr
   15738:	ldr	r4, [sp, #112]	; 0x70
   1573c:	str	r4, [sp]
   15740:	bl	11300 <fprintf@plt>
   15744:	b	15af0 <__assert_fail@plt+0x46c4>
   15748:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1574c:	movw	r1, #65115	; 0xfe5b
   15750:	movt	r1, #1
   15754:	str	r0, [sp, #108]	; 0x6c
   15758:	mov	r0, r1
   1575c:	bl	112d0 <gettext@plt>
   15760:	ldr	r1, [fp, #8]
   15764:	ldr	r2, [r1]
   15768:	ldr	r1, [fp, #8]
   1576c:	ldr	r3, [r1, #4]
   15770:	ldr	r1, [fp, #8]
   15774:	ldr	r1, [r1, #8]
   15778:	ldr	ip, [fp, #8]
   1577c:	ldr	ip, [ip, #12]
   15780:	ldr	lr, [sp, #108]	; 0x6c
   15784:	str	r0, [sp, #104]	; 0x68
   15788:	mov	r0, lr
   1578c:	ldr	r4, [sp, #104]	; 0x68
   15790:	str	r1, [sp, #100]	; 0x64
   15794:	mov	r1, r4
   15798:	ldr	r5, [sp, #100]	; 0x64
   1579c:	str	r5, [sp]
   157a0:	str	ip, [sp, #4]
   157a4:	bl	11300 <fprintf@plt>
   157a8:	b	15af0 <__assert_fail@plt+0x46c4>
   157ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   157b0:	movw	r1, #65147	; 0xfe7b
   157b4:	movt	r1, #1
   157b8:	str	r0, [sp, #96]	; 0x60
   157bc:	mov	r0, r1
   157c0:	bl	112d0 <gettext@plt>
   157c4:	ldr	r1, [fp, #8]
   157c8:	ldr	r2, [r1]
   157cc:	ldr	r1, [fp, #8]
   157d0:	ldr	r3, [r1, #4]
   157d4:	ldr	r1, [fp, #8]
   157d8:	ldr	r1, [r1, #8]
   157dc:	ldr	ip, [fp, #8]
   157e0:	ldr	ip, [ip, #12]
   157e4:	ldr	lr, [fp, #8]
   157e8:	ldr	lr, [lr, #16]
   157ec:	ldr	r4, [sp, #96]	; 0x60
   157f0:	str	r0, [sp, #92]	; 0x5c
   157f4:	mov	r0, r4
   157f8:	ldr	r5, [sp, #92]	; 0x5c
   157fc:	str	r1, [sp, #88]	; 0x58
   15800:	mov	r1, r5
   15804:	ldr	r6, [sp, #88]	; 0x58
   15808:	str	r6, [sp]
   1580c:	str	ip, [sp, #4]
   15810:	str	lr, [sp, #8]
   15814:	bl	11300 <fprintf@plt>
   15818:	b	15af0 <__assert_fail@plt+0x46c4>
   1581c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15820:	movw	r1, #65183	; 0xfe9f
   15824:	movt	r1, #1
   15828:	str	r0, [sp, #84]	; 0x54
   1582c:	mov	r0, r1
   15830:	bl	112d0 <gettext@plt>
   15834:	ldr	r1, [fp, #8]
   15838:	ldr	r2, [r1]
   1583c:	ldr	r1, [fp, #8]
   15840:	ldr	r3, [r1, #4]
   15844:	ldr	r1, [fp, #8]
   15848:	ldr	r1, [r1, #8]
   1584c:	ldr	ip, [fp, #8]
   15850:	ldr	ip, [ip, #12]
   15854:	ldr	lr, [fp, #8]
   15858:	ldr	lr, [lr, #16]
   1585c:	ldr	r4, [fp, #8]
   15860:	ldr	r4, [r4, #20]
   15864:	ldr	r5, [sp, #84]	; 0x54
   15868:	str	r0, [sp, #80]	; 0x50
   1586c:	mov	r0, r5
   15870:	ldr	r6, [sp, #80]	; 0x50
   15874:	str	r1, [sp, #76]	; 0x4c
   15878:	mov	r1, r6
   1587c:	ldr	r7, [sp, #76]	; 0x4c
   15880:	str	r7, [sp]
   15884:	str	ip, [sp, #4]
   15888:	str	lr, [sp, #8]
   1588c:	str	r4, [sp, #12]
   15890:	bl	11300 <fprintf@plt>
   15894:	b	15af0 <__assert_fail@plt+0x46c4>
   15898:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1589c:	movw	r1, #65223	; 0xfec7
   158a0:	movt	r1, #1
   158a4:	str	r0, [sp, #72]	; 0x48
   158a8:	mov	r0, r1
   158ac:	bl	112d0 <gettext@plt>
   158b0:	ldr	r1, [fp, #8]
   158b4:	ldr	r2, [r1]
   158b8:	ldr	r1, [fp, #8]
   158bc:	ldr	r3, [r1, #4]
   158c0:	ldr	r1, [fp, #8]
   158c4:	ldr	r1, [r1, #8]
   158c8:	ldr	ip, [fp, #8]
   158cc:	ldr	ip, [ip, #12]
   158d0:	ldr	lr, [fp, #8]
   158d4:	ldr	lr, [lr, #16]
   158d8:	ldr	r4, [fp, #8]
   158dc:	ldr	r4, [r4, #20]
   158e0:	ldr	r5, [fp, #8]
   158e4:	ldr	r5, [r5, #24]
   158e8:	ldr	r6, [sp, #72]	; 0x48
   158ec:	str	r0, [sp, #68]	; 0x44
   158f0:	mov	r0, r6
   158f4:	ldr	r7, [sp, #68]	; 0x44
   158f8:	str	r1, [sp, #64]	; 0x40
   158fc:	mov	r1, r7
   15900:	ldr	r8, [sp, #64]	; 0x40
   15904:	str	r8, [sp]
   15908:	str	ip, [sp, #4]
   1590c:	str	lr, [sp, #8]
   15910:	str	r4, [sp, #12]
   15914:	str	r5, [sp, #16]
   15918:	bl	11300 <fprintf@plt>
   1591c:	b	15af0 <__assert_fail@plt+0x46c4>
   15920:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15924:	movw	r1, #65267	; 0xfef3
   15928:	movt	r1, #1
   1592c:	str	r0, [sp, #60]	; 0x3c
   15930:	mov	r0, r1
   15934:	bl	112d0 <gettext@plt>
   15938:	ldr	r1, [fp, #8]
   1593c:	ldr	r2, [r1]
   15940:	ldr	r1, [fp, #8]
   15944:	ldr	r3, [r1, #4]
   15948:	ldr	r1, [fp, #8]
   1594c:	ldr	r1, [r1, #8]
   15950:	ldr	ip, [fp, #8]
   15954:	ldr	ip, [ip, #12]
   15958:	ldr	lr, [fp, #8]
   1595c:	ldr	lr, [lr, #16]
   15960:	ldr	r4, [fp, #8]
   15964:	ldr	r4, [r4, #20]
   15968:	ldr	r5, [fp, #8]
   1596c:	ldr	r5, [r5, #24]
   15970:	ldr	r6, [fp, #8]
   15974:	ldr	r6, [r6, #28]
   15978:	ldr	r7, [sp, #60]	; 0x3c
   1597c:	str	r0, [sp, #56]	; 0x38
   15980:	mov	r0, r7
   15984:	ldr	r8, [sp, #56]	; 0x38
   15988:	str	r1, [sp, #52]	; 0x34
   1598c:	mov	r1, r8
   15990:	ldr	r9, [sp, #52]	; 0x34
   15994:	str	r9, [sp]
   15998:	str	ip, [sp, #4]
   1599c:	str	lr, [sp, #8]
   159a0:	str	r4, [sp, #12]
   159a4:	str	r5, [sp, #16]
   159a8:	str	r6, [sp, #20]
   159ac:	bl	11300 <fprintf@plt>
   159b0:	b	15af0 <__assert_fail@plt+0x46c4>
   159b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   159b8:	movw	r1, #65315	; 0xff23
   159bc:	movt	r1, #1
   159c0:	str	r0, [sp, #48]	; 0x30
   159c4:	mov	r0, r1
   159c8:	bl	112d0 <gettext@plt>
   159cc:	ldr	r1, [fp, #8]
   159d0:	ldr	r2, [r1]
   159d4:	ldr	r1, [fp, #8]
   159d8:	ldr	r3, [r1, #4]
   159dc:	ldr	r1, [fp, #8]
   159e0:	ldr	r1, [r1, #8]
   159e4:	ldr	ip, [fp, #8]
   159e8:	ldr	ip, [ip, #12]
   159ec:	ldr	lr, [fp, #8]
   159f0:	ldr	lr, [lr, #16]
   159f4:	ldr	r4, [fp, #8]
   159f8:	ldr	r4, [r4, #20]
   159fc:	ldr	r5, [fp, #8]
   15a00:	ldr	r5, [r5, #24]
   15a04:	ldr	r6, [fp, #8]
   15a08:	ldr	r6, [r6, #28]
   15a0c:	ldr	r7, [fp, #8]
   15a10:	ldr	r7, [r7, #32]
   15a14:	ldr	r8, [sp, #48]	; 0x30
   15a18:	str	r0, [sp, #44]	; 0x2c
   15a1c:	mov	r0, r8
   15a20:	ldr	r9, [sp, #44]	; 0x2c
   15a24:	str	r1, [sp, #40]	; 0x28
   15a28:	mov	r1, r9
   15a2c:	ldr	sl, [sp, #40]	; 0x28
   15a30:	str	sl, [sp]
   15a34:	str	ip, [sp, #4]
   15a38:	str	lr, [sp, #8]
   15a3c:	str	r4, [sp, #12]
   15a40:	str	r5, [sp, #16]
   15a44:	str	r6, [sp, #20]
   15a48:	str	r7, [sp, #24]
   15a4c:	bl	11300 <fprintf@plt>
   15a50:	b	15af0 <__assert_fail@plt+0x46c4>
   15a54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a58:	movw	r1, #65367	; 0xff57
   15a5c:	movt	r1, #1
   15a60:	str	r0, [sp, #36]	; 0x24
   15a64:	mov	r0, r1
   15a68:	bl	112d0 <gettext@plt>
   15a6c:	ldr	r1, [fp, #8]
   15a70:	ldr	r2, [r1]
   15a74:	ldr	r1, [fp, #8]
   15a78:	ldr	r3, [r1, #4]
   15a7c:	ldr	r1, [fp, #8]
   15a80:	ldr	r1, [r1, #8]
   15a84:	ldr	ip, [fp, #8]
   15a88:	ldr	ip, [ip, #12]
   15a8c:	ldr	lr, [fp, #8]
   15a90:	ldr	lr, [lr, #16]
   15a94:	ldr	r4, [fp, #8]
   15a98:	ldr	r4, [r4, #20]
   15a9c:	ldr	r5, [fp, #8]
   15aa0:	ldr	r5, [r5, #24]
   15aa4:	ldr	r6, [fp, #8]
   15aa8:	ldr	r6, [r6, #28]
   15aac:	ldr	r7, [fp, #8]
   15ab0:	ldr	r7, [r7, #32]
   15ab4:	ldr	r8, [sp, #36]	; 0x24
   15ab8:	str	r0, [sp, #32]
   15abc:	mov	r0, r8
   15ac0:	ldr	r9, [sp, #32]
   15ac4:	str	r1, [sp, #28]
   15ac8:	mov	r1, r9
   15acc:	ldr	sl, [sp, #28]
   15ad0:	str	sl, [sp]
   15ad4:	str	ip, [sp, #4]
   15ad8:	str	lr, [sp, #8]
   15adc:	str	r4, [sp, #12]
   15ae0:	str	r5, [sp, #16]
   15ae4:	str	r6, [sp, #20]
   15ae8:	str	r7, [sp, #24]
   15aec:	bl	11300 <fprintf@plt>
   15af0:	sub	sp, fp, #28
   15af4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15af8:	push	{fp, lr}
   15afc:	mov	fp, sp
   15b00:	sub	sp, sp, #32
   15b04:	ldr	ip, [fp, #8]
   15b08:	str	r0, [fp, #-4]
   15b0c:	str	r1, [fp, #-8]
   15b10:	str	r2, [fp, #-12]
   15b14:	str	r3, [sp, #16]
   15b18:	movw	r0, #0
   15b1c:	str	r0, [sp, #12]
   15b20:	ldr	r0, [fp, #8]
   15b24:	ldr	r1, [sp, #12]
   15b28:	add	r0, r0, r1, lsl #2
   15b2c:	ldr	r0, [r0]
   15b30:	movw	r1, #0
   15b34:	cmp	r0, r1
   15b38:	beq	15b50 <__assert_fail@plt+0x4724>
   15b3c:	b	15b40 <__assert_fail@plt+0x4714>
   15b40:	ldr	r0, [sp, #12]
   15b44:	add	r0, r0, #1
   15b48:	str	r0, [sp, #12]
   15b4c:	b	15b20 <__assert_fail@plt+0x46f4>
   15b50:	ldr	r0, [fp, #-4]
   15b54:	ldr	r1, [fp, #-8]
   15b58:	ldr	r2, [fp, #-12]
   15b5c:	ldr	r3, [sp, #16]
   15b60:	ldr	ip, [fp, #8]
   15b64:	ldr	lr, [sp, #12]
   15b68:	str	ip, [sp]
   15b6c:	str	lr, [sp, #4]
   15b70:	bl	15510 <__assert_fail@plt+0x40e4>
   15b74:	mov	sp, fp
   15b78:	pop	{fp, pc}
   15b7c:	push	{fp, lr}
   15b80:	mov	fp, sp
   15b84:	sub	sp, sp, #80	; 0x50
   15b88:	ldr	ip, [fp, #8]
   15b8c:	str	ip, [fp, #-4]
   15b90:	str	r0, [fp, #-8]
   15b94:	str	r1, [fp, #-12]
   15b98:	str	r2, [fp, #-16]
   15b9c:	str	r3, [fp, #-20]	; 0xffffffec
   15ba0:	movw	r0, #0
   15ba4:	str	r0, [fp, #-24]	; 0xffffffe8
   15ba8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15bac:	cmp	r0, #10
   15bb0:	movw	r0, #0
   15bb4:	str	r0, [sp, #12]
   15bb8:	bcs	15bf0 <__assert_fail@plt+0x47c4>
   15bbc:	ldr	r0, [fp, #-4]
   15bc0:	add	r1, r0, #4
   15bc4:	str	r1, [fp, #-4]
   15bc8:	ldr	r0, [r0]
   15bcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15bd0:	add	r2, sp, #16
   15bd4:	add	r1, r2, r1, lsl #2
   15bd8:	str	r0, [r1]
   15bdc:	movw	r1, #0
   15be0:	cmp	r0, r1
   15be4:	movw	r0, #0
   15be8:	movne	r0, #1
   15bec:	str	r0, [sp, #12]
   15bf0:	ldr	r0, [sp, #12]
   15bf4:	tst	r0, #1
   15bf8:	beq	15c10 <__assert_fail@plt+0x47e4>
   15bfc:	b	15c00 <__assert_fail@plt+0x47d4>
   15c00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c04:	add	r0, r0, #1
   15c08:	str	r0, [fp, #-24]	; 0xffffffe8
   15c0c:	b	15ba8 <__assert_fail@plt+0x477c>
   15c10:	add	r0, sp, #16
   15c14:	ldr	r1, [fp, #-8]
   15c18:	ldr	r2, [fp, #-12]
   15c1c:	ldr	r3, [fp, #-16]
   15c20:	ldr	ip, [fp, #-20]	; 0xffffffec
   15c24:	ldr	lr, [fp, #-24]	; 0xffffffe8
   15c28:	str	r0, [sp, #8]
   15c2c:	mov	r0, r1
   15c30:	mov	r1, r2
   15c34:	mov	r2, r3
   15c38:	mov	r3, ip
   15c3c:	ldr	ip, [sp, #8]
   15c40:	str	ip, [sp]
   15c44:	str	lr, [sp, #4]
   15c48:	bl	15510 <__assert_fail@plt+0x40e4>
   15c4c:	mov	sp, fp
   15c50:	pop	{fp, pc}
   15c54:	push	{fp, lr}
   15c58:	mov	fp, sp
   15c5c:	sub	sp, sp, #24
   15c60:	str	r0, [fp, #-4]
   15c64:	str	r1, [fp, #-8]
   15c68:	str	r2, [sp, #12]
   15c6c:	str	r3, [sp, #8]
   15c70:	add	r0, fp, #8
   15c74:	str	r0, [sp, #4]
   15c78:	ldr	r0, [fp, #-4]
   15c7c:	ldr	r1, [fp, #-8]
   15c80:	ldr	r2, [sp, #12]
   15c84:	ldr	r3, [sp, #8]
   15c88:	ldr	ip, [sp, #4]
   15c8c:	mov	lr, sp
   15c90:	str	ip, [lr]
   15c94:	bl	15b7c <__assert_fail@plt+0x4750>
   15c98:	add	r0, sp, #4
   15c9c:	mov	sp, fp
   15ca0:	pop	{fp, pc}
   15ca4:	push	{fp, lr}
   15ca8:	mov	fp, sp
   15cac:	sub	sp, sp, #16
   15cb0:	movw	r0, #4492	; 0x118c
   15cb4:	movt	r0, #3
   15cb8:	ldr	r1, [r0]
   15cbc:	movw	r0, #63163	; 0xf6bb
   15cc0:	movt	r0, #1
   15cc4:	bl	11138 <fputs_unlocked@plt>
   15cc8:	movw	r1, #65427	; 0xff93
   15ccc:	movt	r1, #1
   15cd0:	str	r0, [fp, #-4]
   15cd4:	mov	r0, r1
   15cd8:	bl	112d0 <gettext@plt>
   15cdc:	movw	r1, #65447	; 0xffa7
   15ce0:	movt	r1, #1
   15ce4:	bl	11174 <printf@plt>
   15ce8:	movw	r1, #65469	; 0xffbd
   15cec:	movt	r1, #1
   15cf0:	str	r0, [sp, #8]
   15cf4:	mov	r0, r1
   15cf8:	bl	112d0 <gettext@plt>
   15cfc:	movw	r1, #63581	; 0xf85d
   15d00:	movt	r1, #1
   15d04:	movw	r2, #64060	; 0xfa3c
   15d08:	movt	r2, #1
   15d0c:	bl	11174 <printf@plt>
   15d10:	movw	r1, #65489	; 0xffd1
   15d14:	movt	r1, #1
   15d18:	str	r0, [sp, #4]
   15d1c:	mov	r0, r1
   15d20:	bl	112d0 <gettext@plt>
   15d24:	movw	r1, #65528	; 0xfff8
   15d28:	movt	r1, #1
   15d2c:	bl	11174 <printf@plt>
   15d30:	mov	sp, fp
   15d34:	pop	{fp, pc}
   15d38:	push	{fp, lr}
   15d3c:	mov	fp, sp
   15d40:	sub	sp, sp, #16
   15d44:	str	r0, [fp, #-4]
   15d48:	str	r1, [sp, #8]
   15d4c:	str	r2, [sp, #4]
   15d50:	ldr	r0, [fp, #-4]
   15d54:	ldr	r1, [sp, #8]
   15d58:	ldr	r2, [sp, #4]
   15d5c:	bl	15d68 <__assert_fail@plt+0x493c>
   15d60:	mov	sp, fp
   15d64:	pop	{fp, pc}
   15d68:	push	{fp, lr}
   15d6c:	mov	fp, sp
   15d70:	sub	sp, sp, #16
   15d74:	str	r0, [fp, #-4]
   15d78:	str	r1, [sp, #8]
   15d7c:	str	r2, [sp, #4]
   15d80:	ldr	r0, [fp, #-4]
   15d84:	ldr	r1, [sp, #8]
   15d88:	ldr	r2, [sp, #4]
   15d8c:	bl	1d5dc <__assert_fail@plt+0xc1b0>
   15d90:	str	r0, [sp]
   15d94:	ldr	r0, [sp]
   15d98:	movw	r1, #0
   15d9c:	cmp	r0, r1
   15da0:	bne	15dd0 <__assert_fail@plt+0x49a4>
   15da4:	ldr	r0, [fp, #-4]
   15da8:	movw	r1, #0
   15dac:	cmp	r0, r1
   15db0:	beq	15dcc <__assert_fail@plt+0x49a0>
   15db4:	ldr	r0, [sp, #8]
   15db8:	cmp	r0, #0
   15dbc:	beq	15dd0 <__assert_fail@plt+0x49a4>
   15dc0:	ldr	r0, [sp, #4]
   15dc4:	cmp	r0, #0
   15dc8:	beq	15dd0 <__assert_fail@plt+0x49a4>
   15dcc:	bl	18b14 <__assert_fail@plt+0x76e8>
   15dd0:	ldr	r0, [sp]
   15dd4:	mov	sp, fp
   15dd8:	pop	{fp, pc}
   15ddc:	push	{fp, lr}
   15de0:	mov	fp, sp
   15de4:	sub	sp, sp, #8
   15de8:	str	r0, [sp, #4]
   15dec:	ldr	r0, [sp, #4]
   15df0:	bl	1c878 <__assert_fail@plt+0xb44c>
   15df4:	bl	15e00 <__assert_fail@plt+0x49d4>
   15df8:	mov	sp, fp
   15dfc:	pop	{fp, pc}
   15e00:	push	{fp, lr}
   15e04:	mov	fp, sp
   15e08:	sub	sp, sp, #8
   15e0c:	str	r0, [sp, #4]
   15e10:	ldr	r0, [sp, #4]
   15e14:	movw	r1, #0
   15e18:	cmp	r0, r1
   15e1c:	bne	15e24 <__assert_fail@plt+0x49f8>
   15e20:	bl	18b14 <__assert_fail@plt+0x76e8>
   15e24:	ldr	r0, [sp, #4]
   15e28:	mov	sp, fp
   15e2c:	pop	{fp, pc}
   15e30:	push	{fp, lr}
   15e34:	mov	fp, sp
   15e38:	sub	sp, sp, #8
   15e3c:	str	r0, [sp, #4]
   15e40:	ldr	r0, [sp, #4]
   15e44:	bl	1cdd0 <__assert_fail@plt+0xb9a4>
   15e48:	bl	15e00 <__assert_fail@plt+0x49d4>
   15e4c:	mov	sp, fp
   15e50:	pop	{fp, pc}
   15e54:	push	{fp, lr}
   15e58:	mov	fp, sp
   15e5c:	sub	sp, sp, #8
   15e60:	str	r0, [sp, #4]
   15e64:	ldr	r0, [sp, #4]
   15e68:	bl	15ddc <__assert_fail@plt+0x49b0>
   15e6c:	mov	sp, fp
   15e70:	pop	{fp, pc}
   15e74:	push	{fp, lr}
   15e78:	mov	fp, sp
   15e7c:	sub	sp, sp, #16
   15e80:	str	r0, [fp, #-4]
   15e84:	str	r1, [sp, #8]
   15e88:	ldr	r0, [fp, #-4]
   15e8c:	ldr	r1, [sp, #8]
   15e90:	bl	1c8e8 <__assert_fail@plt+0xb4bc>
   15e94:	str	r0, [sp, #4]
   15e98:	ldr	r0, [sp, #4]
   15e9c:	movw	r1, #0
   15ea0:	cmp	r0, r1
   15ea4:	bne	15ec8 <__assert_fail@plt+0x4a9c>
   15ea8:	ldr	r0, [fp, #-4]
   15eac:	movw	r1, #0
   15eb0:	cmp	r0, r1
   15eb4:	beq	15ec4 <__assert_fail@plt+0x4a98>
   15eb8:	ldr	r0, [sp, #8]
   15ebc:	cmp	r0, #0
   15ec0:	beq	15ec8 <__assert_fail@plt+0x4a9c>
   15ec4:	bl	18b14 <__assert_fail@plt+0x76e8>
   15ec8:	ldr	r0, [sp, #4]
   15ecc:	mov	sp, fp
   15ed0:	pop	{fp, pc}
   15ed4:	push	{fp, lr}
   15ed8:	mov	fp, sp
   15edc:	sub	sp, sp, #8
   15ee0:	str	r0, [sp, #4]
   15ee4:	str	r1, [sp]
   15ee8:	ldr	r0, [sp, #4]
   15eec:	ldr	r1, [sp]
   15ef0:	bl	1ce10 <__assert_fail@plt+0xb9e4>
   15ef4:	bl	15e00 <__assert_fail@plt+0x49d4>
   15ef8:	mov	sp, fp
   15efc:	pop	{fp, pc}
   15f00:	push	{fp, lr}
   15f04:	mov	fp, sp
   15f08:	sub	sp, sp, #16
   15f0c:	str	r0, [fp, #-4]
   15f10:	str	r1, [sp, #8]
   15f14:	str	r2, [sp, #4]
   15f18:	ldr	r0, [fp, #-4]
   15f1c:	ldr	r1, [sp, #8]
   15f20:	ldr	r2, [sp, #4]
   15f24:	bl	1cf08 <__assert_fail@plt+0xbadc>
   15f28:	bl	15e00 <__assert_fail@plt+0x49d4>
   15f2c:	mov	sp, fp
   15f30:	pop	{fp, pc}
   15f34:	push	{fp, lr}
   15f38:	mov	fp, sp
   15f3c:	sub	sp, sp, #8
   15f40:	str	r0, [sp, #4]
   15f44:	str	r1, [sp]
   15f48:	ldr	r1, [sp, #4]
   15f4c:	ldr	r2, [sp]
   15f50:	movw	r0, #0
   15f54:	bl	15d68 <__assert_fail@plt+0x493c>
   15f58:	mov	sp, fp
   15f5c:	pop	{fp, pc}
   15f60:	push	{fp, lr}
   15f64:	mov	fp, sp
   15f68:	sub	sp, sp, #8
   15f6c:	str	r0, [sp, #4]
   15f70:	str	r1, [sp]
   15f74:	ldr	r1, [sp, #4]
   15f78:	ldr	r2, [sp]
   15f7c:	movw	r0, #0
   15f80:	bl	15f00 <__assert_fail@plt+0x4ad4>
   15f84:	mov	sp, fp
   15f88:	pop	{fp, pc}
   15f8c:	push	{fp, lr}
   15f90:	mov	fp, sp
   15f94:	sub	sp, sp, #8
   15f98:	str	r0, [sp, #4]
   15f9c:	str	r1, [sp]
   15fa0:	ldr	r0, [sp, #4]
   15fa4:	ldr	r1, [sp]
   15fa8:	movw	r2, #1
   15fac:	bl	15fb8 <__assert_fail@plt+0x4b8c>
   15fb0:	mov	sp, fp
   15fb4:	pop	{fp, pc}
   15fb8:	push	{fp, lr}
   15fbc:	mov	fp, sp
   15fc0:	sub	sp, sp, #16
   15fc4:	str	r0, [fp, #-4]
   15fc8:	str	r1, [sp, #8]
   15fcc:	str	r2, [sp, #4]
   15fd0:	ldr	r0, [sp, #8]
   15fd4:	ldr	r0, [r0]
   15fd8:	str	r0, [sp]
   15fdc:	ldr	r0, [fp, #-4]
   15fe0:	movw	r1, #0
   15fe4:	cmp	r0, r1
   15fe8:	bne	16034 <__assert_fail@plt+0x4c08>
   15fec:	ldr	r0, [sp]
   15ff0:	cmp	r0, #0
   15ff4:	bne	16030 <__assert_fail@plt+0x4c04>
   15ff8:	ldr	r0, [sp, #4]
   15ffc:	movw	r1, #64	; 0x40
   16000:	udiv	r0, r1, r0
   16004:	str	r0, [sp]
   16008:	ldr	r0, [sp]
   1600c:	cmp	r0, #0
   16010:	movw	r0, #0
   16014:	movne	r0, #1
   16018:	mvn	r1, #0
   1601c:	eor	r0, r0, r1
   16020:	and	r0, r0, #1
   16024:	ldr	r1, [sp]
   16028:	add	r0, r1, r0
   1602c:	str	r0, [sp]
   16030:	b	16064 <__assert_fail@plt+0x4c38>
   16034:	ldr	r0, [sp]
   16038:	ldr	r1, [sp]
   1603c:	lsr	r1, r1, #1
   16040:	add	r1, r1, #1
   16044:	adds	r0, r0, r1
   16048:	mov	r1, #0
   1604c:	adc	r1, r1, #0
   16050:	str	r0, [sp]
   16054:	tst	r1, #1
   16058:	beq	16060 <__assert_fail@plt+0x4c34>
   1605c:	bl	18b14 <__assert_fail@plt+0x76e8>
   16060:	b	16064 <__assert_fail@plt+0x4c38>
   16064:	ldr	r0, [fp, #-4]
   16068:	ldr	r1, [sp]
   1606c:	ldr	r2, [sp, #4]
   16070:	bl	15d68 <__assert_fail@plt+0x493c>
   16074:	str	r0, [fp, #-4]
   16078:	ldr	r0, [sp]
   1607c:	ldr	r1, [sp, #8]
   16080:	str	r0, [r1]
   16084:	ldr	r0, [fp, #-4]
   16088:	mov	sp, fp
   1608c:	pop	{fp, pc}
   16090:	push	{fp, lr}
   16094:	mov	fp, sp
   16098:	sub	sp, sp, #216	; 0xd8
   1609c:	ldr	ip, [fp, #8]
   160a0:	str	r0, [fp, #-4]
   160a4:	str	r1, [fp, #-8]
   160a8:	str	r2, [fp, #-12]
   160ac:	str	r3, [fp, #-16]
   160b0:	ldr	r0, [fp, #-8]
   160b4:	ldr	r0, [r0]
   160b8:	str	r0, [fp, #-20]	; 0xffffffec
   160bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   160c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   160c4:	asr	r1, r1, #1
   160c8:	add	r1, r0, r1
   160cc:	mov	r2, #1
   160d0:	cmp	r1, r0
   160d4:	movwvc	r2, #0
   160d8:	str	r1, [fp, #-24]	; 0xffffffe8
   160dc:	tst	r2, #1
   160e0:	beq	160ec <__assert_fail@plt+0x4cc0>
   160e4:	ldr	r0, [pc, #4036]	; 170b0 <__assert_fail@plt+0x5c84>
   160e8:	str	r0, [fp, #-24]	; 0xffffffe8
   160ec:	ldr	r0, [fp, #-16]
   160f0:	movw	r1, #0
   160f4:	cmp	r1, r0
   160f8:	bgt	16114 <__assert_fail@plt+0x4ce8>
   160fc:	ldr	r0, [fp, #-16]
   16100:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16104:	cmp	r0, r1
   16108:	bge	16114 <__assert_fail@plt+0x4ce8>
   1610c:	ldr	r0, [fp, #-16]
   16110:	str	r0, [fp, #-24]	; 0xffffffe8
   16114:	b	164ec <__assert_fail@plt+0x50c0>
   16118:	b	1611c <__assert_fail@plt+0x4cf0>
   1611c:	ldr	r0, [fp, #8]
   16120:	cmp	r0, #0
   16124:	bge	16238 <__assert_fail@plt+0x4e0c>
   16128:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1612c:	cmp	r0, #0
   16130:	bge	161bc <__assert_fail@plt+0x4d90>
   16134:	b	16138 <__assert_fail@plt+0x4d0c>
   16138:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1613c:	ldr	r1, [fp, #8]
   16140:	movw	r2, #127	; 0x7f
   16144:	sdiv	r1, r2, r1
   16148:	cmp	r0, r1
   1614c:	blt	162d8 <__assert_fail@plt+0x4eac>
   16150:	b	162f0 <__assert_fail@plt+0x4ec4>
   16154:	b	16158 <__assert_fail@plt+0x4d2c>
   16158:	ldr	r0, [pc, #4084]	; 17154 <__assert_fail@plt+0x5d28>
   1615c:	ldr	r1, [fp, #8]
   16160:	cmp	r1, r0
   16164:	blt	1617c <__assert_fail@plt+0x4d50>
   16168:	b	16188 <__assert_fail@plt+0x4d5c>
   1616c:	ldr	r0, [fp, #8]
   16170:	movw	r1, #0
   16174:	cmp	r1, r0
   16178:	bge	16188 <__assert_fail@plt+0x4d5c>
   1617c:	movw	r0, #0
   16180:	str	r0, [fp, #-36]	; 0xffffffdc
   16184:	b	161a0 <__assert_fail@plt+0x4d74>
   16188:	ldr	r0, [fp, #8]
   1618c:	movw	r1, #0
   16190:	sub	r0, r1, r0
   16194:	movw	r1, #127	; 0x7f
   16198:	sdiv	r0, r1, r0
   1619c:	str	r0, [fp, #-36]	; 0xffffffdc
   161a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   161a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   161a8:	mvn	r2, #0
   161ac:	sub	r1, r2, r1
   161b0:	cmp	r0, r1
   161b4:	ble	162d8 <__assert_fail@plt+0x4eac>
   161b8:	b	162f0 <__assert_fail@plt+0x4ec4>
   161bc:	b	161c0 <__assert_fail@plt+0x4d94>
   161c0:	b	1621c <__assert_fail@plt+0x4df0>
   161c4:	b	1621c <__assert_fail@plt+0x4df0>
   161c8:	ldr	r0, [fp, #8]
   161cc:	cmn	r0, #1
   161d0:	bne	1621c <__assert_fail@plt+0x4df0>
   161d4:	b	161d8 <__assert_fail@plt+0x4dac>
   161d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161dc:	mvn	r1, #127	; 0x7f
   161e0:	add	r0, r0, r1
   161e4:	movw	r1, #0
   161e8:	cmp	r1, r0
   161ec:	blt	162d8 <__assert_fail@plt+0x4eac>
   161f0:	b	162f0 <__assert_fail@plt+0x4ec4>
   161f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161f8:	movw	r1, #0
   161fc:	cmp	r1, r0
   16200:	bge	162f0 <__assert_fail@plt+0x4ec4>
   16204:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16208:	sub	r0, r0, #1
   1620c:	movw	r1, #127	; 0x7f
   16210:	cmp	r1, r0
   16214:	blt	162d8 <__assert_fail@plt+0x4eac>
   16218:	b	162f0 <__assert_fail@plt+0x4ec4>
   1621c:	ldr	r0, [fp, #8]
   16220:	mvn	r1, #127	; 0x7f
   16224:	sdiv	r0, r1, r0
   16228:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1622c:	cmp	r0, r1
   16230:	blt	162d8 <__assert_fail@plt+0x4eac>
   16234:	b	162f0 <__assert_fail@plt+0x4ec4>
   16238:	ldr	r0, [fp, #8]
   1623c:	cmp	r0, #0
   16240:	bne	16248 <__assert_fail@plt+0x4e1c>
   16244:	b	162f0 <__assert_fail@plt+0x4ec4>
   16248:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1624c:	cmp	r0, #0
   16250:	bge	162c0 <__assert_fail@plt+0x4e94>
   16254:	b	16258 <__assert_fail@plt+0x4e2c>
   16258:	b	162a4 <__assert_fail@plt+0x4e78>
   1625c:	b	162a4 <__assert_fail@plt+0x4e78>
   16260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16264:	cmn	r0, #1
   16268:	bne	162a4 <__assert_fail@plt+0x4e78>
   1626c:	b	16270 <__assert_fail@plt+0x4e44>
   16270:	ldr	r0, [fp, #8]
   16274:	mvn	r1, #127	; 0x7f
   16278:	add	r0, r0, r1
   1627c:	movw	r1, #0
   16280:	cmp	r1, r0
   16284:	blt	162d8 <__assert_fail@plt+0x4eac>
   16288:	b	162f0 <__assert_fail@plt+0x4ec4>
   1628c:	ldr	r0, [fp, #8]
   16290:	sub	r0, r0, #1
   16294:	movw	r1, #127	; 0x7f
   16298:	cmp	r1, r0
   1629c:	blt	162d8 <__assert_fail@plt+0x4eac>
   162a0:	b	162f0 <__assert_fail@plt+0x4ec4>
   162a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162a8:	mvn	r1, #127	; 0x7f
   162ac:	sdiv	r0, r1, r0
   162b0:	ldr	r1, [fp, #8]
   162b4:	cmp	r0, r1
   162b8:	blt	162d8 <__assert_fail@plt+0x4eac>
   162bc:	b	162f0 <__assert_fail@plt+0x4ec4>
   162c0:	ldr	r0, [fp, #8]
   162c4:	movw	r1, #127	; 0x7f
   162c8:	sdiv	r0, r1, r0
   162cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   162d0:	cmp	r0, r1
   162d4:	bge	162f0 <__assert_fail@plt+0x4ec4>
   162d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162dc:	ldr	r1, [fp, #8]
   162e0:	mul	r0, r0, r1
   162e4:	sxtb	r0, r0
   162e8:	str	r0, [fp, #-28]	; 0xffffffe4
   162ec:	b	174b4 <__assert_fail@plt+0x6088>
   162f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162f4:	ldr	r1, [fp, #8]
   162f8:	mul	r0, r0, r1
   162fc:	sxtb	r0, r0
   16300:	str	r0, [fp, #-28]	; 0xffffffe4
   16304:	b	174c0 <__assert_fail@plt+0x6094>
   16308:	ldr	r0, [fp, #8]
   1630c:	cmp	r0, #0
   16310:	bge	16420 <__assert_fail@plt+0x4ff4>
   16314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16318:	cmp	r0, #0
   1631c:	bge	163a8 <__assert_fail@plt+0x4f7c>
   16320:	b	16324 <__assert_fail@plt+0x4ef8>
   16324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16328:	ldr	r1, [fp, #8]
   1632c:	movw	r2, #255	; 0xff
   16330:	sdiv	r1, r2, r1
   16334:	cmp	r0, r1
   16338:	blt	164bc <__assert_fail@plt+0x5090>
   1633c:	b	164d4 <__assert_fail@plt+0x50a8>
   16340:	b	16344 <__assert_fail@plt+0x4f18>
   16344:	ldr	r0, [pc, #3592]	; 17154 <__assert_fail@plt+0x5d28>
   16348:	ldr	r1, [fp, #8]
   1634c:	cmp	r1, r0
   16350:	blt	16368 <__assert_fail@plt+0x4f3c>
   16354:	b	16374 <__assert_fail@plt+0x4f48>
   16358:	ldr	r0, [fp, #8]
   1635c:	movw	r1, #0
   16360:	cmp	r1, r0
   16364:	bge	16374 <__assert_fail@plt+0x4f48>
   16368:	movw	r0, #0
   1636c:	str	r0, [fp, #-40]	; 0xffffffd8
   16370:	b	1638c <__assert_fail@plt+0x4f60>
   16374:	ldr	r0, [fp, #8]
   16378:	movw	r1, #0
   1637c:	sub	r0, r1, r0
   16380:	movw	r1, #255	; 0xff
   16384:	sdiv	r0, r1, r0
   16388:	str	r0, [fp, #-40]	; 0xffffffd8
   1638c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16390:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16394:	mvn	r2, #0
   16398:	sub	r1, r2, r1
   1639c:	cmp	r0, r1
   163a0:	ble	164bc <__assert_fail@plt+0x5090>
   163a4:	b	164d4 <__assert_fail@plt+0x50a8>
   163a8:	b	163ac <__assert_fail@plt+0x4f80>
   163ac:	b	16404 <__assert_fail@plt+0x4fd8>
   163b0:	b	16404 <__assert_fail@plt+0x4fd8>
   163b4:	ldr	r0, [fp, #8]
   163b8:	cmn	r0, #1
   163bc:	bne	16404 <__assert_fail@plt+0x4fd8>
   163c0:	b	163c4 <__assert_fail@plt+0x4f98>
   163c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163c8:	add	r0, r0, #0
   163cc:	movw	r1, #0
   163d0:	cmp	r1, r0
   163d4:	blt	164bc <__assert_fail@plt+0x5090>
   163d8:	b	164d4 <__assert_fail@plt+0x50a8>
   163dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163e0:	movw	r1, #0
   163e4:	cmp	r1, r0
   163e8:	bge	164d4 <__assert_fail@plt+0x50a8>
   163ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163f0:	sub	r0, r0, #1
   163f4:	mvn	r1, #0
   163f8:	cmp	r1, r0
   163fc:	blt	164bc <__assert_fail@plt+0x5090>
   16400:	b	164d4 <__assert_fail@plt+0x50a8>
   16404:	ldr	r0, [fp, #8]
   16408:	movw	r1, #0
   1640c:	sdiv	r0, r1, r0
   16410:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16414:	cmp	r0, r1
   16418:	blt	164bc <__assert_fail@plt+0x5090>
   1641c:	b	164d4 <__assert_fail@plt+0x50a8>
   16420:	ldr	r0, [fp, #8]
   16424:	cmp	r0, #0
   16428:	bne	16430 <__assert_fail@plt+0x5004>
   1642c:	b	164d4 <__assert_fail@plt+0x50a8>
   16430:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16434:	cmp	r0, #0
   16438:	bge	164a4 <__assert_fail@plt+0x5078>
   1643c:	b	16440 <__assert_fail@plt+0x5014>
   16440:	b	16488 <__assert_fail@plt+0x505c>
   16444:	b	16488 <__assert_fail@plt+0x505c>
   16448:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1644c:	cmn	r0, #1
   16450:	bne	16488 <__assert_fail@plt+0x505c>
   16454:	b	16458 <__assert_fail@plt+0x502c>
   16458:	ldr	r0, [fp, #8]
   1645c:	add	r0, r0, #0
   16460:	movw	r1, #0
   16464:	cmp	r1, r0
   16468:	blt	164bc <__assert_fail@plt+0x5090>
   1646c:	b	164d4 <__assert_fail@plt+0x50a8>
   16470:	ldr	r0, [fp, #8]
   16474:	sub	r0, r0, #1
   16478:	mvn	r1, #0
   1647c:	cmp	r1, r0
   16480:	blt	164bc <__assert_fail@plt+0x5090>
   16484:	b	164d4 <__assert_fail@plt+0x50a8>
   16488:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1648c:	movw	r1, #0
   16490:	sdiv	r0, r1, r0
   16494:	ldr	r1, [fp, #8]
   16498:	cmp	r0, r1
   1649c:	blt	164bc <__assert_fail@plt+0x5090>
   164a0:	b	164d4 <__assert_fail@plt+0x50a8>
   164a4:	ldr	r0, [fp, #8]
   164a8:	movw	r1, #255	; 0xff
   164ac:	sdiv	r0, r1, r0
   164b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   164b4:	cmp	r0, r1
   164b8:	bge	164d4 <__assert_fail@plt+0x50a8>
   164bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164c0:	ldr	r1, [fp, #8]
   164c4:	mul	r0, r0, r1
   164c8:	and	r0, r0, #255	; 0xff
   164cc:	str	r0, [fp, #-28]	; 0xffffffe4
   164d0:	b	174b4 <__assert_fail@plt+0x6088>
   164d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164d8:	ldr	r1, [fp, #8]
   164dc:	mul	r0, r0, r1
   164e0:	and	r0, r0, #255	; 0xff
   164e4:	str	r0, [fp, #-28]	; 0xffffffe4
   164e8:	b	174c0 <__assert_fail@plt+0x6094>
   164ec:	b	168c4 <__assert_fail@plt+0x5498>
   164f0:	b	164f4 <__assert_fail@plt+0x50c8>
   164f4:	ldr	r0, [fp, #8]
   164f8:	cmp	r0, #0
   164fc:	bge	16610 <__assert_fail@plt+0x51e4>
   16500:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16504:	cmp	r0, #0
   16508:	bge	16594 <__assert_fail@plt+0x5168>
   1650c:	b	16510 <__assert_fail@plt+0x50e4>
   16510:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16514:	ldr	r1, [fp, #8]
   16518:	movw	r2, #32767	; 0x7fff
   1651c:	sdiv	r1, r2, r1
   16520:	cmp	r0, r1
   16524:	blt	166b0 <__assert_fail@plt+0x5284>
   16528:	b	166c8 <__assert_fail@plt+0x529c>
   1652c:	b	16530 <__assert_fail@plt+0x5104>
   16530:	ldr	r0, [pc, #3100]	; 17154 <__assert_fail@plt+0x5d28>
   16534:	ldr	r1, [fp, #8]
   16538:	cmp	r1, r0
   1653c:	blt	16554 <__assert_fail@plt+0x5128>
   16540:	b	16560 <__assert_fail@plt+0x5134>
   16544:	ldr	r0, [fp, #8]
   16548:	movw	r1, #0
   1654c:	cmp	r1, r0
   16550:	bge	16560 <__assert_fail@plt+0x5134>
   16554:	movw	r0, #0
   16558:	str	r0, [fp, #-44]	; 0xffffffd4
   1655c:	b	16578 <__assert_fail@plt+0x514c>
   16560:	ldr	r0, [fp, #8]
   16564:	movw	r1, #0
   16568:	sub	r0, r1, r0
   1656c:	movw	r1, #32767	; 0x7fff
   16570:	sdiv	r0, r1, r0
   16574:	str	r0, [fp, #-44]	; 0xffffffd4
   16578:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1657c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16580:	mvn	r2, #0
   16584:	sub	r1, r2, r1
   16588:	cmp	r0, r1
   1658c:	ble	166b0 <__assert_fail@plt+0x5284>
   16590:	b	166c8 <__assert_fail@plt+0x529c>
   16594:	b	16598 <__assert_fail@plt+0x516c>
   16598:	b	165f4 <__assert_fail@plt+0x51c8>
   1659c:	b	165f4 <__assert_fail@plt+0x51c8>
   165a0:	ldr	r0, [fp, #8]
   165a4:	cmn	r0, #1
   165a8:	bne	165f4 <__assert_fail@plt+0x51c8>
   165ac:	b	165b0 <__assert_fail@plt+0x5184>
   165b0:	ldr	r0, [pc, #4068]	; 1759c <__assert_fail@plt+0x6170>
   165b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   165b8:	add	r0, r1, r0
   165bc:	movw	r1, #0
   165c0:	cmp	r1, r0
   165c4:	blt	166b0 <__assert_fail@plt+0x5284>
   165c8:	b	166c8 <__assert_fail@plt+0x529c>
   165cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165d0:	movw	r1, #0
   165d4:	cmp	r1, r0
   165d8:	bge	166c8 <__assert_fail@plt+0x529c>
   165dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165e0:	sub	r0, r0, #1
   165e4:	movw	r1, #32767	; 0x7fff
   165e8:	cmp	r1, r0
   165ec:	blt	166b0 <__assert_fail@plt+0x5284>
   165f0:	b	166c8 <__assert_fail@plt+0x529c>
   165f4:	ldr	r0, [pc, #4000]	; 1759c <__assert_fail@plt+0x6170>
   165f8:	ldr	r1, [fp, #8]
   165fc:	sdiv	r0, r0, r1
   16600:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16604:	cmp	r0, r1
   16608:	blt	166b0 <__assert_fail@plt+0x5284>
   1660c:	b	166c8 <__assert_fail@plt+0x529c>
   16610:	ldr	r0, [fp, #8]
   16614:	cmp	r0, #0
   16618:	bne	16620 <__assert_fail@plt+0x51f4>
   1661c:	b	166c8 <__assert_fail@plt+0x529c>
   16620:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16624:	cmp	r0, #0
   16628:	bge	16698 <__assert_fail@plt+0x526c>
   1662c:	b	16630 <__assert_fail@plt+0x5204>
   16630:	b	1667c <__assert_fail@plt+0x5250>
   16634:	b	1667c <__assert_fail@plt+0x5250>
   16638:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1663c:	cmn	r0, #1
   16640:	bne	1667c <__assert_fail@plt+0x5250>
   16644:	b	16648 <__assert_fail@plt+0x521c>
   16648:	ldr	r0, [pc, #3916]	; 1759c <__assert_fail@plt+0x6170>
   1664c:	ldr	r1, [fp, #8]
   16650:	add	r0, r1, r0
   16654:	movw	r1, #0
   16658:	cmp	r1, r0
   1665c:	blt	166b0 <__assert_fail@plt+0x5284>
   16660:	b	166c8 <__assert_fail@plt+0x529c>
   16664:	ldr	r0, [fp, #8]
   16668:	sub	r0, r0, #1
   1666c:	movw	r1, #32767	; 0x7fff
   16670:	cmp	r1, r0
   16674:	blt	166b0 <__assert_fail@plt+0x5284>
   16678:	b	166c8 <__assert_fail@plt+0x529c>
   1667c:	ldr	r0, [pc, #3864]	; 1759c <__assert_fail@plt+0x6170>
   16680:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16684:	sdiv	r0, r0, r1
   16688:	ldr	r1, [fp, #8]
   1668c:	cmp	r0, r1
   16690:	blt	166b0 <__assert_fail@plt+0x5284>
   16694:	b	166c8 <__assert_fail@plt+0x529c>
   16698:	ldr	r0, [fp, #8]
   1669c:	movw	r1, #32767	; 0x7fff
   166a0:	sdiv	r0, r1, r0
   166a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   166a8:	cmp	r0, r1
   166ac:	bge	166c8 <__assert_fail@plt+0x529c>
   166b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166b4:	ldr	r1, [fp, #8]
   166b8:	mul	r0, r0, r1
   166bc:	sxth	r0, r0
   166c0:	str	r0, [fp, #-28]	; 0xffffffe4
   166c4:	b	174b4 <__assert_fail@plt+0x6088>
   166c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166cc:	ldr	r1, [fp, #8]
   166d0:	mul	r0, r0, r1
   166d4:	sxth	r0, r0
   166d8:	str	r0, [fp, #-28]	; 0xffffffe4
   166dc:	b	174c0 <__assert_fail@plt+0x6094>
   166e0:	ldr	r0, [fp, #8]
   166e4:	cmp	r0, #0
   166e8:	bge	167f8 <__assert_fail@plt+0x53cc>
   166ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166f0:	cmp	r0, #0
   166f4:	bge	16780 <__assert_fail@plt+0x5354>
   166f8:	b	166fc <__assert_fail@plt+0x52d0>
   166fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16700:	ldr	r1, [fp, #8]
   16704:	movw	r2, #65535	; 0xffff
   16708:	sdiv	r1, r2, r1
   1670c:	cmp	r0, r1
   16710:	blt	16894 <__assert_fail@plt+0x5468>
   16714:	b	168ac <__assert_fail@plt+0x5480>
   16718:	b	1671c <__assert_fail@plt+0x52f0>
   1671c:	ldr	r0, [pc, #2608]	; 17154 <__assert_fail@plt+0x5d28>
   16720:	ldr	r1, [fp, #8]
   16724:	cmp	r1, r0
   16728:	blt	16740 <__assert_fail@plt+0x5314>
   1672c:	b	1674c <__assert_fail@plt+0x5320>
   16730:	ldr	r0, [fp, #8]
   16734:	movw	r1, #0
   16738:	cmp	r1, r0
   1673c:	bge	1674c <__assert_fail@plt+0x5320>
   16740:	movw	r0, #0
   16744:	str	r0, [fp, #-48]	; 0xffffffd0
   16748:	b	16764 <__assert_fail@plt+0x5338>
   1674c:	ldr	r0, [fp, #8]
   16750:	movw	r1, #0
   16754:	sub	r0, r1, r0
   16758:	movw	r1, #65535	; 0xffff
   1675c:	sdiv	r0, r1, r0
   16760:	str	r0, [fp, #-48]	; 0xffffffd0
   16764:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16768:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1676c:	mvn	r2, #0
   16770:	sub	r1, r2, r1
   16774:	cmp	r0, r1
   16778:	ble	16894 <__assert_fail@plt+0x5468>
   1677c:	b	168ac <__assert_fail@plt+0x5480>
   16780:	b	16784 <__assert_fail@plt+0x5358>
   16784:	b	167dc <__assert_fail@plt+0x53b0>
   16788:	b	167dc <__assert_fail@plt+0x53b0>
   1678c:	ldr	r0, [fp, #8]
   16790:	cmn	r0, #1
   16794:	bne	167dc <__assert_fail@plt+0x53b0>
   16798:	b	1679c <__assert_fail@plt+0x5370>
   1679c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167a0:	add	r0, r0, #0
   167a4:	movw	r1, #0
   167a8:	cmp	r1, r0
   167ac:	blt	16894 <__assert_fail@plt+0x5468>
   167b0:	b	168ac <__assert_fail@plt+0x5480>
   167b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167b8:	movw	r1, #0
   167bc:	cmp	r1, r0
   167c0:	bge	168ac <__assert_fail@plt+0x5480>
   167c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167c8:	sub	r0, r0, #1
   167cc:	mvn	r1, #0
   167d0:	cmp	r1, r0
   167d4:	blt	16894 <__assert_fail@plt+0x5468>
   167d8:	b	168ac <__assert_fail@plt+0x5480>
   167dc:	ldr	r0, [fp, #8]
   167e0:	movw	r1, #0
   167e4:	sdiv	r0, r1, r0
   167e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   167ec:	cmp	r0, r1
   167f0:	blt	16894 <__assert_fail@plt+0x5468>
   167f4:	b	168ac <__assert_fail@plt+0x5480>
   167f8:	ldr	r0, [fp, #8]
   167fc:	cmp	r0, #0
   16800:	bne	16808 <__assert_fail@plt+0x53dc>
   16804:	b	168ac <__assert_fail@plt+0x5480>
   16808:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1680c:	cmp	r0, #0
   16810:	bge	1687c <__assert_fail@plt+0x5450>
   16814:	b	16818 <__assert_fail@plt+0x53ec>
   16818:	b	16860 <__assert_fail@plt+0x5434>
   1681c:	b	16860 <__assert_fail@plt+0x5434>
   16820:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16824:	cmn	r0, #1
   16828:	bne	16860 <__assert_fail@plt+0x5434>
   1682c:	b	16830 <__assert_fail@plt+0x5404>
   16830:	ldr	r0, [fp, #8]
   16834:	add	r0, r0, #0
   16838:	movw	r1, #0
   1683c:	cmp	r1, r0
   16840:	blt	16894 <__assert_fail@plt+0x5468>
   16844:	b	168ac <__assert_fail@plt+0x5480>
   16848:	ldr	r0, [fp, #8]
   1684c:	sub	r0, r0, #1
   16850:	mvn	r1, #0
   16854:	cmp	r1, r0
   16858:	blt	16894 <__assert_fail@plt+0x5468>
   1685c:	b	168ac <__assert_fail@plt+0x5480>
   16860:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16864:	movw	r1, #0
   16868:	sdiv	r0, r1, r0
   1686c:	ldr	r1, [fp, #8]
   16870:	cmp	r0, r1
   16874:	blt	16894 <__assert_fail@plt+0x5468>
   16878:	b	168ac <__assert_fail@plt+0x5480>
   1687c:	ldr	r0, [fp, #8]
   16880:	movw	r1, #65535	; 0xffff
   16884:	sdiv	r0, r1, r0
   16888:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1688c:	cmp	r0, r1
   16890:	bge	168ac <__assert_fail@plt+0x5480>
   16894:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16898:	ldr	r1, [fp, #8]
   1689c:	mul	r0, r0, r1
   168a0:	uxth	r0, r0
   168a4:	str	r0, [fp, #-28]	; 0xffffffe4
   168a8:	b	174b4 <__assert_fail@plt+0x6088>
   168ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168b0:	ldr	r1, [fp, #8]
   168b4:	mul	r0, r0, r1
   168b8:	uxth	r0, r0
   168bc:	str	r0, [fp, #-28]	; 0xffffffe4
   168c0:	b	174c0 <__assert_fail@plt+0x6094>
   168c4:	b	168c8 <__assert_fail@plt+0x549c>
   168c8:	b	168cc <__assert_fail@plt+0x54a0>
   168cc:	ldr	r0, [fp, #8]
   168d0:	cmp	r0, #0
   168d4:	bge	169d8 <__assert_fail@plt+0x55ac>
   168d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168dc:	cmp	r0, #0
   168e0:	bge	1696c <__assert_fail@plt+0x5540>
   168e4:	b	168e8 <__assert_fail@plt+0x54bc>
   168e8:	ldr	r0, [pc, #1984]	; 170b0 <__assert_fail@plt+0x5c84>
   168ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   168f0:	ldr	r2, [fp, #8]
   168f4:	sdiv	r0, r0, r2
   168f8:	cmp	r1, r0
   168fc:	blt	16a68 <__assert_fail@plt+0x563c>
   16900:	b	16a7c <__assert_fail@plt+0x5650>
   16904:	b	16908 <__assert_fail@plt+0x54dc>
   16908:	ldr	r0, [pc, #2116]	; 17154 <__assert_fail@plt+0x5d28>
   1690c:	ldr	r1, [fp, #8]
   16910:	cmp	r1, r0
   16914:	blt	1692c <__assert_fail@plt+0x5500>
   16918:	b	16938 <__assert_fail@plt+0x550c>
   1691c:	ldr	r0, [fp, #8]
   16920:	movw	r1, #0
   16924:	cmp	r1, r0
   16928:	bge	16938 <__assert_fail@plt+0x550c>
   1692c:	movw	r0, #0
   16930:	str	r0, [fp, #-52]	; 0xffffffcc
   16934:	b	16950 <__assert_fail@plt+0x5524>
   16938:	ldr	r0, [pc, #1904]	; 170b0 <__assert_fail@plt+0x5c84>
   1693c:	ldr	r1, [fp, #8]
   16940:	movw	r2, #0
   16944:	sub	r1, r2, r1
   16948:	sdiv	r0, r0, r1
   1694c:	str	r0, [fp, #-52]	; 0xffffffcc
   16950:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16954:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16958:	mvn	r2, #0
   1695c:	sub	r1, r2, r1
   16960:	cmp	r0, r1
   16964:	ble	16a68 <__assert_fail@plt+0x563c>
   16968:	b	16a7c <__assert_fail@plt+0x5650>
   1696c:	ldr	r0, [fp, #8]
   16970:	cmn	r0, #1
   16974:	bne	169bc <__assert_fail@plt+0x5590>
   16978:	b	1697c <__assert_fail@plt+0x5550>
   1697c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16980:	add	r0, r0, #-2147483648	; 0x80000000
   16984:	movw	r1, #0
   16988:	cmp	r1, r0
   1698c:	blt	16a68 <__assert_fail@plt+0x563c>
   16990:	b	16a7c <__assert_fail@plt+0x5650>
   16994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16998:	movw	r1, #0
   1699c:	cmp	r1, r0
   169a0:	bge	16a7c <__assert_fail@plt+0x5650>
   169a4:	ldr	r0, [pc, #1796]	; 170b0 <__assert_fail@plt+0x5c84>
   169a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   169ac:	sub	r1, r1, #1
   169b0:	cmp	r0, r1
   169b4:	blt	16a68 <__assert_fail@plt+0x563c>
   169b8:	b	16a7c <__assert_fail@plt+0x5650>
   169bc:	ldr	r0, [pc, #4080]	; 179b4 <__assert_fail@plt+0x6588>
   169c0:	ldr	r1, [fp, #8]
   169c4:	sdiv	r0, r0, r1
   169c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   169cc:	cmp	r0, r1
   169d0:	blt	16a68 <__assert_fail@plt+0x563c>
   169d4:	b	16a7c <__assert_fail@plt+0x5650>
   169d8:	ldr	r0, [fp, #8]
   169dc:	cmp	r0, #0
   169e0:	bne	169e8 <__assert_fail@plt+0x55bc>
   169e4:	b	16a7c <__assert_fail@plt+0x5650>
   169e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169ec:	cmp	r0, #0
   169f0:	bge	16a50 <__assert_fail@plt+0x5624>
   169f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169f8:	cmn	r0, #1
   169fc:	bne	16a34 <__assert_fail@plt+0x5608>
   16a00:	b	16a04 <__assert_fail@plt+0x55d8>
   16a04:	ldr	r0, [fp, #8]
   16a08:	add	r0, r0, #-2147483648	; 0x80000000
   16a0c:	movw	r1, #0
   16a10:	cmp	r1, r0
   16a14:	blt	16a68 <__assert_fail@plt+0x563c>
   16a18:	b	16a7c <__assert_fail@plt+0x5650>
   16a1c:	ldr	r0, [pc, #1676]	; 170b0 <__assert_fail@plt+0x5c84>
   16a20:	ldr	r1, [fp, #8]
   16a24:	sub	r1, r1, #1
   16a28:	cmp	r0, r1
   16a2c:	blt	16a68 <__assert_fail@plt+0x563c>
   16a30:	b	16a7c <__assert_fail@plt+0x5650>
   16a34:	ldr	r0, [pc, #3960]	; 179b4 <__assert_fail@plt+0x6588>
   16a38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a3c:	sdiv	r0, r0, r1
   16a40:	ldr	r1, [fp, #8]
   16a44:	cmp	r0, r1
   16a48:	blt	16a68 <__assert_fail@plt+0x563c>
   16a4c:	b	16a7c <__assert_fail@plt+0x5650>
   16a50:	ldr	r0, [pc, #1624]	; 170b0 <__assert_fail@plt+0x5c84>
   16a54:	ldr	r1, [fp, #8]
   16a58:	sdiv	r0, r0, r1
   16a5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a60:	cmp	r0, r1
   16a64:	bge	16a7c <__assert_fail@plt+0x5650>
   16a68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a6c:	ldr	r1, [fp, #8]
   16a70:	mul	r0, r0, r1
   16a74:	str	r0, [fp, #-28]	; 0xffffffe4
   16a78:	b	174b4 <__assert_fail@plt+0x6088>
   16a7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a80:	ldr	r1, [fp, #8]
   16a84:	mul	r0, r0, r1
   16a88:	str	r0, [fp, #-28]	; 0xffffffe4
   16a8c:	b	174c0 <__assert_fail@plt+0x6094>
   16a90:	ldr	r0, [fp, #8]
   16a94:	cmp	r0, #0
   16a98:	bge	16ba8 <__assert_fail@plt+0x577c>
   16a9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16aa0:	cmp	r0, #0
   16aa4:	bge	16b30 <__assert_fail@plt+0x5704>
   16aa8:	b	16ac8 <__assert_fail@plt+0x569c>
   16aac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ab0:	ldr	r1, [fp, #8]
   16ab4:	mvn	r2, #0
   16ab8:	udiv	r1, r2, r1
   16abc:	cmp	r0, r1
   16ac0:	bcc	16c44 <__assert_fail@plt+0x5818>
   16ac4:	b	16c58 <__assert_fail@plt+0x582c>
   16ac8:	b	16acc <__assert_fail@plt+0x56a0>
   16acc:	ldr	r0, [pc, #1664]	; 17154 <__assert_fail@plt+0x5d28>
   16ad0:	ldr	r1, [fp, #8]
   16ad4:	cmp	r1, r0
   16ad8:	blt	16af0 <__assert_fail@plt+0x56c4>
   16adc:	b	16afc <__assert_fail@plt+0x56d0>
   16ae0:	ldr	r0, [fp, #8]
   16ae4:	movw	r1, #0
   16ae8:	cmp	r1, r0
   16aec:	bge	16afc <__assert_fail@plt+0x56d0>
   16af0:	movw	r0, #1
   16af4:	str	r0, [fp, #-56]	; 0xffffffc8
   16af8:	b	16b14 <__assert_fail@plt+0x56e8>
   16afc:	ldr	r0, [fp, #8]
   16b00:	movw	r1, #0
   16b04:	sub	r0, r1, r0
   16b08:	mvn	r1, #0
   16b0c:	udiv	r0, r1, r0
   16b10:	str	r0, [fp, #-56]	; 0xffffffc8
   16b14:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16b18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b1c:	mvn	r2, #0
   16b20:	sub	r1, r2, r1
   16b24:	cmp	r0, r1
   16b28:	bls	16c44 <__assert_fail@plt+0x5818>
   16b2c:	b	16c58 <__assert_fail@plt+0x582c>
   16b30:	b	16b34 <__assert_fail@plt+0x5708>
   16b34:	b	16b8c <__assert_fail@plt+0x5760>
   16b38:	b	16b8c <__assert_fail@plt+0x5760>
   16b3c:	ldr	r0, [fp, #8]
   16b40:	cmn	r0, #1
   16b44:	bne	16b8c <__assert_fail@plt+0x5760>
   16b48:	b	16b4c <__assert_fail@plt+0x5720>
   16b4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b50:	add	r0, r0, #0
   16b54:	movw	r1, #0
   16b58:	cmp	r1, r0
   16b5c:	blt	16c44 <__assert_fail@plt+0x5818>
   16b60:	b	16c58 <__assert_fail@plt+0x582c>
   16b64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b68:	movw	r1, #0
   16b6c:	cmp	r1, r0
   16b70:	bge	16c58 <__assert_fail@plt+0x582c>
   16b74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b78:	sub	r0, r0, #1
   16b7c:	mvn	r1, #0
   16b80:	cmp	r1, r0
   16b84:	blt	16c44 <__assert_fail@plt+0x5818>
   16b88:	b	16c58 <__assert_fail@plt+0x582c>
   16b8c:	ldr	r0, [fp, #8]
   16b90:	movw	r1, #0
   16b94:	sdiv	r0, r1, r0
   16b98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b9c:	cmp	r0, r1
   16ba0:	blt	16c44 <__assert_fail@plt+0x5818>
   16ba4:	b	16c58 <__assert_fail@plt+0x582c>
   16ba8:	ldr	r0, [fp, #8]
   16bac:	cmp	r0, #0
   16bb0:	bne	16bb8 <__assert_fail@plt+0x578c>
   16bb4:	b	16c58 <__assert_fail@plt+0x582c>
   16bb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bbc:	cmp	r0, #0
   16bc0:	bge	16c2c <__assert_fail@plt+0x5800>
   16bc4:	b	16bc8 <__assert_fail@plt+0x579c>
   16bc8:	b	16c10 <__assert_fail@plt+0x57e4>
   16bcc:	b	16c10 <__assert_fail@plt+0x57e4>
   16bd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bd4:	cmn	r0, #1
   16bd8:	bne	16c10 <__assert_fail@plt+0x57e4>
   16bdc:	b	16be0 <__assert_fail@plt+0x57b4>
   16be0:	ldr	r0, [fp, #8]
   16be4:	add	r0, r0, #0
   16be8:	movw	r1, #0
   16bec:	cmp	r1, r0
   16bf0:	blt	16c44 <__assert_fail@plt+0x5818>
   16bf4:	b	16c58 <__assert_fail@plt+0x582c>
   16bf8:	ldr	r0, [fp, #8]
   16bfc:	sub	r0, r0, #1
   16c00:	mvn	r1, #0
   16c04:	cmp	r1, r0
   16c08:	blt	16c44 <__assert_fail@plt+0x5818>
   16c0c:	b	16c58 <__assert_fail@plt+0x582c>
   16c10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c14:	movw	r1, #0
   16c18:	sdiv	r0, r1, r0
   16c1c:	ldr	r1, [fp, #8]
   16c20:	cmp	r0, r1
   16c24:	blt	16c44 <__assert_fail@plt+0x5818>
   16c28:	b	16c58 <__assert_fail@plt+0x582c>
   16c2c:	ldr	r0, [fp, #8]
   16c30:	mvn	r1, #0
   16c34:	udiv	r0, r1, r0
   16c38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c3c:	cmp	r0, r1
   16c40:	bcs	16c58 <__assert_fail@plt+0x582c>
   16c44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c48:	ldr	r1, [fp, #8]
   16c4c:	mul	r0, r0, r1
   16c50:	str	r0, [fp, #-28]	; 0xffffffe4
   16c54:	b	174b4 <__assert_fail@plt+0x6088>
   16c58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c5c:	ldr	r1, [fp, #8]
   16c60:	mul	r0, r0, r1
   16c64:	str	r0, [fp, #-28]	; 0xffffffe4
   16c68:	b	174c0 <__assert_fail@plt+0x6094>
   16c6c:	b	16c70 <__assert_fail@plt+0x5844>
   16c70:	b	16c74 <__assert_fail@plt+0x5848>
   16c74:	ldr	r0, [fp, #8]
   16c78:	cmp	r0, #0
   16c7c:	bge	16d80 <__assert_fail@plt+0x5954>
   16c80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c84:	cmp	r0, #0
   16c88:	bge	16d14 <__assert_fail@plt+0x58e8>
   16c8c:	b	16c90 <__assert_fail@plt+0x5864>
   16c90:	ldr	r0, [pc, #1048]	; 170b0 <__assert_fail@plt+0x5c84>
   16c94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c98:	ldr	r2, [fp, #8]
   16c9c:	sdiv	r0, r0, r2
   16ca0:	cmp	r1, r0
   16ca4:	blt	16e10 <__assert_fail@plt+0x59e4>
   16ca8:	b	16e24 <__assert_fail@plt+0x59f8>
   16cac:	b	16cb0 <__assert_fail@plt+0x5884>
   16cb0:	ldr	r0, [pc, #1180]	; 17154 <__assert_fail@plt+0x5d28>
   16cb4:	ldr	r1, [fp, #8]
   16cb8:	cmp	r1, r0
   16cbc:	blt	16cd4 <__assert_fail@plt+0x58a8>
   16cc0:	b	16ce0 <__assert_fail@plt+0x58b4>
   16cc4:	ldr	r0, [fp, #8]
   16cc8:	movw	r1, #0
   16ccc:	cmp	r1, r0
   16cd0:	bge	16ce0 <__assert_fail@plt+0x58b4>
   16cd4:	movw	r0, #0
   16cd8:	str	r0, [fp, #-60]	; 0xffffffc4
   16cdc:	b	16cf8 <__assert_fail@plt+0x58cc>
   16ce0:	ldr	r0, [pc, #968]	; 170b0 <__assert_fail@plt+0x5c84>
   16ce4:	ldr	r1, [fp, #8]
   16ce8:	movw	r2, #0
   16cec:	sub	r1, r2, r1
   16cf0:	sdiv	r0, r0, r1
   16cf4:	str	r0, [fp, #-60]	; 0xffffffc4
   16cf8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16cfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d00:	mvn	r2, #0
   16d04:	sub	r1, r2, r1
   16d08:	cmp	r0, r1
   16d0c:	ble	16e10 <__assert_fail@plt+0x59e4>
   16d10:	b	16e24 <__assert_fail@plt+0x59f8>
   16d14:	ldr	r0, [fp, #8]
   16d18:	cmn	r0, #1
   16d1c:	bne	16d64 <__assert_fail@plt+0x5938>
   16d20:	b	16d24 <__assert_fail@plt+0x58f8>
   16d24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d28:	add	r0, r0, #-2147483648	; 0x80000000
   16d2c:	movw	r1, #0
   16d30:	cmp	r1, r0
   16d34:	blt	16e10 <__assert_fail@plt+0x59e4>
   16d38:	b	16e24 <__assert_fail@plt+0x59f8>
   16d3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d40:	movw	r1, #0
   16d44:	cmp	r1, r0
   16d48:	bge	16e24 <__assert_fail@plt+0x59f8>
   16d4c:	ldr	r0, [pc, #860]	; 170b0 <__assert_fail@plt+0x5c84>
   16d50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d54:	sub	r1, r1, #1
   16d58:	cmp	r0, r1
   16d5c:	blt	16e10 <__assert_fail@plt+0x59e4>
   16d60:	b	16e24 <__assert_fail@plt+0x59f8>
   16d64:	ldr	r0, [pc, #3144]	; 179b4 <__assert_fail@plt+0x6588>
   16d68:	ldr	r1, [fp, #8]
   16d6c:	sdiv	r0, r0, r1
   16d70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d74:	cmp	r0, r1
   16d78:	blt	16e10 <__assert_fail@plt+0x59e4>
   16d7c:	b	16e24 <__assert_fail@plt+0x59f8>
   16d80:	ldr	r0, [fp, #8]
   16d84:	cmp	r0, #0
   16d88:	bne	16d90 <__assert_fail@plt+0x5964>
   16d8c:	b	16e24 <__assert_fail@plt+0x59f8>
   16d90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d94:	cmp	r0, #0
   16d98:	bge	16df8 <__assert_fail@plt+0x59cc>
   16d9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16da0:	cmn	r0, #1
   16da4:	bne	16ddc <__assert_fail@plt+0x59b0>
   16da8:	b	16dac <__assert_fail@plt+0x5980>
   16dac:	ldr	r0, [fp, #8]
   16db0:	add	r0, r0, #-2147483648	; 0x80000000
   16db4:	movw	r1, #0
   16db8:	cmp	r1, r0
   16dbc:	blt	16e10 <__assert_fail@plt+0x59e4>
   16dc0:	b	16e24 <__assert_fail@plt+0x59f8>
   16dc4:	ldr	r0, [pc, #740]	; 170b0 <__assert_fail@plt+0x5c84>
   16dc8:	ldr	r1, [fp, #8]
   16dcc:	sub	r1, r1, #1
   16dd0:	cmp	r0, r1
   16dd4:	blt	16e10 <__assert_fail@plt+0x59e4>
   16dd8:	b	16e24 <__assert_fail@plt+0x59f8>
   16ddc:	ldr	r0, [pc, #3024]	; 179b4 <__assert_fail@plt+0x6588>
   16de0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16de4:	sdiv	r0, r0, r1
   16de8:	ldr	r1, [fp, #8]
   16dec:	cmp	r0, r1
   16df0:	blt	16e10 <__assert_fail@plt+0x59e4>
   16df4:	b	16e24 <__assert_fail@plt+0x59f8>
   16df8:	ldr	r0, [pc, #688]	; 170b0 <__assert_fail@plt+0x5c84>
   16dfc:	ldr	r1, [fp, #8]
   16e00:	sdiv	r0, r0, r1
   16e04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e08:	cmp	r0, r1
   16e0c:	bge	16e24 <__assert_fail@plt+0x59f8>
   16e10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e14:	ldr	r1, [fp, #8]
   16e18:	mul	r0, r0, r1
   16e1c:	str	r0, [fp, #-28]	; 0xffffffe4
   16e20:	b	174b4 <__assert_fail@plt+0x6088>
   16e24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e28:	ldr	r1, [fp, #8]
   16e2c:	mul	r0, r0, r1
   16e30:	str	r0, [fp, #-28]	; 0xffffffe4
   16e34:	b	174c0 <__assert_fail@plt+0x6094>
   16e38:	ldr	r0, [fp, #8]
   16e3c:	cmp	r0, #0
   16e40:	bge	16f50 <__assert_fail@plt+0x5b24>
   16e44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e48:	cmp	r0, #0
   16e4c:	bge	16ed8 <__assert_fail@plt+0x5aac>
   16e50:	b	16e70 <__assert_fail@plt+0x5a44>
   16e54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e58:	ldr	r1, [fp, #8]
   16e5c:	mvn	r2, #0
   16e60:	udiv	r1, r2, r1
   16e64:	cmp	r0, r1
   16e68:	bcc	16fec <__assert_fail@plt+0x5bc0>
   16e6c:	b	17000 <__assert_fail@plt+0x5bd4>
   16e70:	b	16e74 <__assert_fail@plt+0x5a48>
   16e74:	ldr	r0, [pc, #728]	; 17154 <__assert_fail@plt+0x5d28>
   16e78:	ldr	r1, [fp, #8]
   16e7c:	cmp	r1, r0
   16e80:	blt	16e98 <__assert_fail@plt+0x5a6c>
   16e84:	b	16ea4 <__assert_fail@plt+0x5a78>
   16e88:	ldr	r0, [fp, #8]
   16e8c:	movw	r1, #0
   16e90:	cmp	r1, r0
   16e94:	bge	16ea4 <__assert_fail@plt+0x5a78>
   16e98:	movw	r0, #1
   16e9c:	str	r0, [fp, #-64]	; 0xffffffc0
   16ea0:	b	16ebc <__assert_fail@plt+0x5a90>
   16ea4:	ldr	r0, [fp, #8]
   16ea8:	movw	r1, #0
   16eac:	sub	r0, r1, r0
   16eb0:	mvn	r1, #0
   16eb4:	udiv	r0, r1, r0
   16eb8:	str	r0, [fp, #-64]	; 0xffffffc0
   16ebc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16ec0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ec4:	mvn	r2, #0
   16ec8:	sub	r1, r2, r1
   16ecc:	cmp	r0, r1
   16ed0:	bls	16fec <__assert_fail@plt+0x5bc0>
   16ed4:	b	17000 <__assert_fail@plt+0x5bd4>
   16ed8:	b	16edc <__assert_fail@plt+0x5ab0>
   16edc:	b	16f34 <__assert_fail@plt+0x5b08>
   16ee0:	b	16f34 <__assert_fail@plt+0x5b08>
   16ee4:	ldr	r0, [fp, #8]
   16ee8:	cmn	r0, #1
   16eec:	bne	16f34 <__assert_fail@plt+0x5b08>
   16ef0:	b	16ef4 <__assert_fail@plt+0x5ac8>
   16ef4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ef8:	add	r0, r0, #0
   16efc:	movw	r1, #0
   16f00:	cmp	r1, r0
   16f04:	blt	16fec <__assert_fail@plt+0x5bc0>
   16f08:	b	17000 <__assert_fail@plt+0x5bd4>
   16f0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f10:	movw	r1, #0
   16f14:	cmp	r1, r0
   16f18:	bge	17000 <__assert_fail@plt+0x5bd4>
   16f1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f20:	sub	r0, r0, #1
   16f24:	mvn	r1, #0
   16f28:	cmp	r1, r0
   16f2c:	blt	16fec <__assert_fail@plt+0x5bc0>
   16f30:	b	17000 <__assert_fail@plt+0x5bd4>
   16f34:	ldr	r0, [fp, #8]
   16f38:	movw	r1, #0
   16f3c:	sdiv	r0, r1, r0
   16f40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f44:	cmp	r0, r1
   16f48:	blt	16fec <__assert_fail@plt+0x5bc0>
   16f4c:	b	17000 <__assert_fail@plt+0x5bd4>
   16f50:	ldr	r0, [fp, #8]
   16f54:	cmp	r0, #0
   16f58:	bne	16f60 <__assert_fail@plt+0x5b34>
   16f5c:	b	17000 <__assert_fail@plt+0x5bd4>
   16f60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f64:	cmp	r0, #0
   16f68:	bge	16fd4 <__assert_fail@plt+0x5ba8>
   16f6c:	b	16f70 <__assert_fail@plt+0x5b44>
   16f70:	b	16fb8 <__assert_fail@plt+0x5b8c>
   16f74:	b	16fb8 <__assert_fail@plt+0x5b8c>
   16f78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f7c:	cmn	r0, #1
   16f80:	bne	16fb8 <__assert_fail@plt+0x5b8c>
   16f84:	b	16f88 <__assert_fail@plt+0x5b5c>
   16f88:	ldr	r0, [fp, #8]
   16f8c:	add	r0, r0, #0
   16f90:	movw	r1, #0
   16f94:	cmp	r1, r0
   16f98:	blt	16fec <__assert_fail@plt+0x5bc0>
   16f9c:	b	17000 <__assert_fail@plt+0x5bd4>
   16fa0:	ldr	r0, [fp, #8]
   16fa4:	sub	r0, r0, #1
   16fa8:	mvn	r1, #0
   16fac:	cmp	r1, r0
   16fb0:	blt	16fec <__assert_fail@plt+0x5bc0>
   16fb4:	b	17000 <__assert_fail@plt+0x5bd4>
   16fb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fbc:	movw	r1, #0
   16fc0:	sdiv	r0, r1, r0
   16fc4:	ldr	r1, [fp, #8]
   16fc8:	cmp	r0, r1
   16fcc:	blt	16fec <__assert_fail@plt+0x5bc0>
   16fd0:	b	17000 <__assert_fail@plt+0x5bd4>
   16fd4:	ldr	r0, [fp, #8]
   16fd8:	mvn	r1, #0
   16fdc:	udiv	r0, r1, r0
   16fe0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fe4:	cmp	r0, r1
   16fe8:	bcs	17000 <__assert_fail@plt+0x5bd4>
   16fec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ff0:	ldr	r1, [fp, #8]
   16ff4:	mul	r0, r0, r1
   16ff8:	str	r0, [fp, #-28]	; 0xffffffe4
   16ffc:	b	174b4 <__assert_fail@plt+0x6088>
   17000:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17004:	ldr	r1, [fp, #8]
   17008:	mul	r0, r0, r1
   1700c:	str	r0, [fp, #-28]	; 0xffffffe4
   17010:	b	174c0 <__assert_fail@plt+0x6094>
   17014:	b	17018 <__assert_fail@plt+0x5bec>
   17018:	ldr	r0, [fp, #8]
   1701c:	cmp	r0, #0
   17020:	bge	17190 <__assert_fail@plt+0x5d64>
   17024:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17028:	cmp	r0, #0
   1702c:	bge	17108 <__assert_fail@plt+0x5cdc>
   17030:	b	17034 <__assert_fail@plt+0x5c08>
   17034:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17038:	ldr	r1, [fp, #8]
   1703c:	asr	r3, r1, #31
   17040:	mvn	r2, #0
   17044:	mvn	ip, #-2147483648	; 0x80000000
   17048:	str	r0, [fp, #-68]	; 0xffffffbc
   1704c:	mov	r0, r2
   17050:	str	r1, [fp, #-72]	; 0xffffffb8
   17054:	mov	r1, ip
   17058:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1705c:	bl	1f354 <__assert_fail@plt+0xdf28>
   17060:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17064:	subs	r0, r2, r0
   17068:	rscs	r1, r1, r2, asr #31
   1706c:	blt	17258 <__assert_fail@plt+0x5e2c>
   17070:	b	1726c <__assert_fail@plt+0x5e40>
   17074:	b	17078 <__assert_fail@plt+0x5c4c>
   17078:	ldr	r0, [pc, #212]	; 17154 <__assert_fail@plt+0x5d28>
   1707c:	ldr	r1, [fp, #8]
   17080:	cmp	r1, r0
   17084:	blt	1709c <__assert_fail@plt+0x5c70>
   17088:	b	170b4 <__assert_fail@plt+0x5c88>
   1708c:	ldr	r0, [fp, #8]
   17090:	movw	r1, #0
   17094:	cmp	r1, r0
   17098:	bge	170b4 <__assert_fail@plt+0x5c88>
   1709c:	mov	r0, #0
   170a0:	mvn	r1, #0
   170a4:	str	r1, [fp, #-76]	; 0xffffffb4
   170a8:	str	r0, [fp, #-80]	; 0xffffffb0
   170ac:	b	170e8 <__assert_fail@plt+0x5cbc>
   170b0:	svcvc	0x00ffffff
   170b4:	ldr	r0, [fp, #8]
   170b8:	rsb	r0, r0, #0
   170bc:	asr	r3, r0, #31
   170c0:	mvn	r1, #0
   170c4:	mvn	r2, #-2147483648	; 0x80000000
   170c8:	str	r0, [fp, #-84]	; 0xffffffac
   170cc:	mov	r0, r1
   170d0:	mov	r1, r2
   170d4:	ldr	r2, [fp, #-84]	; 0xffffffac
   170d8:	bl	1f354 <__assert_fail@plt+0xdf28>
   170dc:	str	r0, [fp, #-76]	; 0xffffffb4
   170e0:	str	r1, [fp, #-80]	; 0xffffffb0
   170e4:	b	170e8 <__assert_fail@plt+0x5cbc>
   170e8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   170ec:	ldr	r1, [fp, #-76]	; 0xffffffb4
   170f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   170f4:	mvn	r2, r2
   170f8:	subs	r1, r2, r1
   170fc:	rscs	r0, r0, r2, asr #31
   17100:	bge	17258 <__assert_fail@plt+0x5e2c>
   17104:	b	1726c <__assert_fail@plt+0x5e40>
   17108:	ldr	r0, [fp, #8]
   1710c:	cmn	r0, #1
   17110:	bne	17158 <__assert_fail@plt+0x5d2c>
   17114:	b	17118 <__assert_fail@plt+0x5cec>
   17118:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1711c:	mov	r1, #-2147483648	; 0x80000000
   17120:	add	r1, r1, r0, asr #31
   17124:	rsbs	r0, r0, #0
   17128:	rscs	r1, r1, #0
   1712c:	blt	17258 <__assert_fail@plt+0x5e2c>
   17130:	b	1726c <__assert_fail@plt+0x5e40>
   17134:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17138:	movw	r1, #0
   1713c:	cmp	r1, r0
   17140:	bge	1726c <__assert_fail@plt+0x5e40>
   17144:	mov	r0, #0
   17148:	cmp	r0, #0
   1714c:	bne	17258 <__assert_fail@plt+0x5e2c>
   17150:	b	1726c <__assert_fail@plt+0x5e40>
   17154:	andhi	r0, r0, r1
   17158:	ldr	r0, [fp, #8]
   1715c:	asr	r3, r0, #31
   17160:	mov	r1, #0
   17164:	mov	r2, #-2147483648	; 0x80000000
   17168:	str	r0, [fp, #-88]	; 0xffffffa8
   1716c:	mov	r0, r1
   17170:	mov	r1, r2
   17174:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17178:	bl	1f354 <__assert_fail@plt+0xdf28>
   1717c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17180:	subs	r0, r0, r2
   17184:	sbcs	r1, r1, r2, asr #31
   17188:	blt	17258 <__assert_fail@plt+0x5e2c>
   1718c:	b	1726c <__assert_fail@plt+0x5e40>
   17190:	ldr	r0, [fp, #8]
   17194:	cmp	r0, #0
   17198:	bne	171a0 <__assert_fail@plt+0x5d74>
   1719c:	b	1726c <__assert_fail@plt+0x5e40>
   171a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171a4:	cmp	r0, #0
   171a8:	bge	17220 <__assert_fail@plt+0x5df4>
   171ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171b0:	cmn	r0, #1
   171b4:	bne	171e8 <__assert_fail@plt+0x5dbc>
   171b8:	b	171bc <__assert_fail@plt+0x5d90>
   171bc:	ldr	r0, [fp, #8]
   171c0:	mov	r1, #-2147483648	; 0x80000000
   171c4:	add	r1, r1, r0, asr #31
   171c8:	rsbs	r0, r0, #0
   171cc:	rscs	r1, r1, #0
   171d0:	blt	17258 <__assert_fail@plt+0x5e2c>
   171d4:	b	1726c <__assert_fail@plt+0x5e40>
   171d8:	mov	r0, #0
   171dc:	cmp	r0, #0
   171e0:	bne	17258 <__assert_fail@plt+0x5e2c>
   171e4:	b	1726c <__assert_fail@plt+0x5e40>
   171e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171ec:	asr	r3, r0, #31
   171f0:	mov	r1, #0
   171f4:	mov	r2, #-2147483648	; 0x80000000
   171f8:	str	r0, [fp, #-92]	; 0xffffffa4
   171fc:	mov	r0, r1
   17200:	mov	r1, r2
   17204:	ldr	r2, [fp, #-92]	; 0xffffffa4
   17208:	bl	1f354 <__assert_fail@plt+0xdf28>
   1720c:	ldr	r2, [fp, #8]
   17210:	subs	r0, r0, r2
   17214:	sbcs	r1, r1, r2, asr #31
   17218:	blt	17258 <__assert_fail@plt+0x5e2c>
   1721c:	b	1726c <__assert_fail@plt+0x5e40>
   17220:	ldr	r0, [fp, #8]
   17224:	asr	r3, r0, #31
   17228:	mvn	r1, #0
   1722c:	mvn	r2, #-2147483648	; 0x80000000
   17230:	str	r0, [fp, #-96]	; 0xffffffa0
   17234:	mov	r0, r1
   17238:	mov	r1, r2
   1723c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17240:	bl	1f354 <__assert_fail@plt+0xdf28>
   17244:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17248:	subs	r0, r0, r2
   1724c:	sbcs	r1, r1, r2, asr #31
   17250:	bge	1726c <__assert_fail@plt+0x5e40>
   17254:	b	17258 <__assert_fail@plt+0x5e2c>
   17258:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1725c:	ldr	r1, [fp, #8]
   17260:	mul	r0, r0, r1
   17264:	str	r0, [fp, #-28]	; 0xffffffe4
   17268:	b	174b4 <__assert_fail@plt+0x6088>
   1726c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17270:	ldr	r1, [fp, #8]
   17274:	mul	r0, r0, r1
   17278:	str	r0, [fp, #-28]	; 0xffffffe4
   1727c:	b	174c0 <__assert_fail@plt+0x6094>
   17280:	ldr	r0, [fp, #8]
   17284:	cmp	r0, #0
   17288:	bge	173d8 <__assert_fail@plt+0x5fac>
   1728c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17290:	cmp	r0, #0
   17294:	bge	17360 <__assert_fail@plt+0x5f34>
   17298:	b	172d8 <__assert_fail@plt+0x5eac>
   1729c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172a0:	ldr	r1, [fp, #8]
   172a4:	asr	r3, r1, #31
   172a8:	mvn	r2, #0
   172ac:	str	r0, [fp, #-100]	; 0xffffff9c
   172b0:	mov	r0, r2
   172b4:	str	r1, [fp, #-104]	; 0xffffff98
   172b8:	mov	r1, r2
   172bc:	ldr	r2, [fp, #-104]	; 0xffffff98
   172c0:	bl	1f428 <__assert_fail@plt+0xdffc>
   172c4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   172c8:	subs	r0, r2, r0
   172cc:	rscs	r1, r1, r2, asr #31
   172d0:	bcc	1748c <__assert_fail@plt+0x6060>
   172d4:	b	174a0 <__assert_fail@plt+0x6074>
   172d8:	b	172dc <__assert_fail@plt+0x5eb0>
   172dc:	ldr	r0, [pc, #-400]	; 17154 <__assert_fail@plt+0x5d28>
   172e0:	ldr	r1, [fp, #8]
   172e4:	cmp	r1, r0
   172e8:	blt	17300 <__assert_fail@plt+0x5ed4>
   172ec:	b	17314 <__assert_fail@plt+0x5ee8>
   172f0:	ldr	r0, [fp, #8]
   172f4:	movw	r1, #0
   172f8:	cmp	r1, r0
   172fc:	bge	17314 <__assert_fail@plt+0x5ee8>
   17300:	mov	r0, #1
   17304:	mvn	r1, #0
   17308:	str	r1, [sp, #108]	; 0x6c
   1730c:	str	r0, [sp, #104]	; 0x68
   17310:	b	17340 <__assert_fail@plt+0x5f14>
   17314:	ldr	r0, [fp, #8]
   17318:	rsb	r0, r0, #0
   1731c:	asr	r3, r0, #31
   17320:	mvn	r1, #0
   17324:	str	r0, [sp, #100]	; 0x64
   17328:	mov	r0, r1
   1732c:	ldr	r2, [sp, #100]	; 0x64
   17330:	bl	1f428 <__assert_fail@plt+0xdffc>
   17334:	str	r0, [sp, #108]	; 0x6c
   17338:	str	r1, [sp, #104]	; 0x68
   1733c:	b	17340 <__assert_fail@plt+0x5f14>
   17340:	ldr	r0, [sp, #104]	; 0x68
   17344:	ldr	r1, [sp, #108]	; 0x6c
   17348:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1734c:	mvn	r2, r2
   17350:	subs	r1, r2, r1
   17354:	rscs	r0, r0, r2, asr #31
   17358:	bcs	1748c <__assert_fail@plt+0x6060>
   1735c:	b	174a0 <__assert_fail@plt+0x6074>
   17360:	b	17364 <__assert_fail@plt+0x5f38>
   17364:	b	173bc <__assert_fail@plt+0x5f90>
   17368:	b	173bc <__assert_fail@plt+0x5f90>
   1736c:	ldr	r0, [fp, #8]
   17370:	cmn	r0, #1
   17374:	bne	173bc <__assert_fail@plt+0x5f90>
   17378:	b	1737c <__assert_fail@plt+0x5f50>
   1737c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17380:	add	r0, r0, #0
   17384:	movw	r1, #0
   17388:	cmp	r1, r0
   1738c:	blt	1748c <__assert_fail@plt+0x6060>
   17390:	b	174a0 <__assert_fail@plt+0x6074>
   17394:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17398:	movw	r1, #0
   1739c:	cmp	r1, r0
   173a0:	bge	174a0 <__assert_fail@plt+0x6074>
   173a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173a8:	sub	r0, r0, #1
   173ac:	mvn	r1, #0
   173b0:	cmp	r1, r0
   173b4:	blt	1748c <__assert_fail@plt+0x6060>
   173b8:	b	174a0 <__assert_fail@plt+0x6074>
   173bc:	ldr	r0, [fp, #8]
   173c0:	movw	r1, #0
   173c4:	sdiv	r0, r1, r0
   173c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   173cc:	cmp	r0, r1
   173d0:	blt	1748c <__assert_fail@plt+0x6060>
   173d4:	b	174a0 <__assert_fail@plt+0x6074>
   173d8:	ldr	r0, [fp, #8]
   173dc:	cmp	r0, #0
   173e0:	bne	173e8 <__assert_fail@plt+0x5fbc>
   173e4:	b	174a0 <__assert_fail@plt+0x6074>
   173e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173ec:	cmp	r0, #0
   173f0:	bge	1745c <__assert_fail@plt+0x6030>
   173f4:	b	173f8 <__assert_fail@plt+0x5fcc>
   173f8:	b	17440 <__assert_fail@plt+0x6014>
   173fc:	b	17440 <__assert_fail@plt+0x6014>
   17400:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17404:	cmn	r0, #1
   17408:	bne	17440 <__assert_fail@plt+0x6014>
   1740c:	b	17410 <__assert_fail@plt+0x5fe4>
   17410:	ldr	r0, [fp, #8]
   17414:	add	r0, r0, #0
   17418:	movw	r1, #0
   1741c:	cmp	r1, r0
   17420:	blt	1748c <__assert_fail@plt+0x6060>
   17424:	b	174a0 <__assert_fail@plt+0x6074>
   17428:	ldr	r0, [fp, #8]
   1742c:	sub	r0, r0, #1
   17430:	mvn	r1, #0
   17434:	cmp	r1, r0
   17438:	blt	1748c <__assert_fail@plt+0x6060>
   1743c:	b	174a0 <__assert_fail@plt+0x6074>
   17440:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17444:	movw	r1, #0
   17448:	sdiv	r0, r1, r0
   1744c:	ldr	r1, [fp, #8]
   17450:	cmp	r0, r1
   17454:	blt	1748c <__assert_fail@plt+0x6060>
   17458:	b	174a0 <__assert_fail@plt+0x6074>
   1745c:	ldr	r0, [fp, #8]
   17460:	asr	r3, r0, #31
   17464:	mvn	r1, #0
   17468:	str	r0, [sp, #96]	; 0x60
   1746c:	mov	r0, r1
   17470:	ldr	r2, [sp, #96]	; 0x60
   17474:	bl	1f428 <__assert_fail@plt+0xdffc>
   17478:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1747c:	subs	r0, r0, r2
   17480:	sbcs	r1, r1, r2, asr #31
   17484:	bcs	174a0 <__assert_fail@plt+0x6074>
   17488:	b	1748c <__assert_fail@plt+0x6060>
   1748c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17490:	ldr	r1, [fp, #8]
   17494:	mul	r0, r0, r1
   17498:	str	r0, [fp, #-28]	; 0xffffffe4
   1749c:	b	174b4 <__assert_fail@plt+0x6088>
   174a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174a4:	ldr	r1, [fp, #8]
   174a8:	mul	r0, r0, r1
   174ac:	str	r0, [fp, #-28]	; 0xffffffe4
   174b0:	b	174c0 <__assert_fail@plt+0x6094>
   174b4:	ldr	r0, [pc, #-1036]	; 170b0 <__assert_fail@plt+0x5c84>
   174b8:	str	r0, [sp, #92]	; 0x5c
   174bc:	b	174e0 <__assert_fail@plt+0x60b4>
   174c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   174c4:	cmp	r0, #64	; 0x40
   174c8:	movw	r0, #0
   174cc:	movlt	r0, #1
   174d0:	tst	r0, #1
   174d4:	movw	r0, #64	; 0x40
   174d8:	moveq	r0, #0
   174dc:	str	r0, [sp, #92]	; 0x5c
   174e0:	ldr	r0, [sp, #92]	; 0x5c
   174e4:	str	r0, [fp, #-32]	; 0xffffffe0
   174e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   174ec:	cmp	r0, #0
   174f0:	beq	17520 <__assert_fail@plt+0x60f4>
   174f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   174f8:	ldr	r1, [fp, #8]
   174fc:	sdiv	r0, r0, r1
   17500:	str	r0, [fp, #-24]	; 0xffffffe8
   17504:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17508:	mov	r1, r0
   1750c:	ldr	r2, [fp, #8]
   17510:	sdiv	r3, r0, r2
   17514:	mls	r0, r3, r2, r0
   17518:	sub	r0, r1, r0
   1751c:	str	r0, [fp, #-28]	; 0xffffffe4
   17520:	ldr	r0, [fp, #-4]
   17524:	movw	r1, #0
   17528:	cmp	r0, r1
   1752c:	bne	1753c <__assert_fail@plt+0x6110>
   17530:	ldr	r0, [fp, #-8]
   17534:	movw	r1, #0
   17538:	str	r1, [r0]
   1753c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17540:	ldr	r1, [fp, #-20]	; 0xffffffec
   17544:	sub	r0, r0, r1
   17548:	ldr	r1, [fp, #-12]
   1754c:	cmp	r0, r1
   17550:	bge	1893c <__assert_fail@plt+0x7510>
   17554:	ldr	r0, [fp, #-20]	; 0xffffffec
   17558:	ldr	r1, [fp, #-12]
   1755c:	add	r1, r0, r1
   17560:	mov	r2, #1
   17564:	cmp	r1, r0
   17568:	movwvc	r2, #0
   1756c:	str	r1, [fp, #-24]	; 0xffffffe8
   17570:	tst	r2, #1
   17574:	bne	18938 <__assert_fail@plt+0x750c>
   17578:	ldr	r0, [fp, #-16]
   1757c:	movw	r1, #0
   17580:	cmp	r1, r0
   17584:	bgt	17598 <__assert_fail@plt+0x616c>
   17588:	ldr	r0, [fp, #-16]
   1758c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17590:	cmp	r0, r1
   17594:	blt	18938 <__assert_fail@plt+0x750c>
   17598:	b	17974 <__assert_fail@plt+0x6548>
   1759c:			; <UNDEFINED> instruction: 0xffff8000
   175a0:	b	175a4 <__assert_fail@plt+0x6178>
   175a4:	ldr	r0, [fp, #8]
   175a8:	cmp	r0, #0
   175ac:	bge	176c0 <__assert_fail@plt+0x6294>
   175b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175b4:	cmp	r0, #0
   175b8:	bge	17644 <__assert_fail@plt+0x6218>
   175bc:	b	175c0 <__assert_fail@plt+0x6194>
   175c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175c4:	ldr	r1, [fp, #8]
   175c8:	movw	r2, #127	; 0x7f
   175cc:	sdiv	r1, r2, r1
   175d0:	cmp	r0, r1
   175d4:	blt	17760 <__assert_fail@plt+0x6334>
   175d8:	b	17778 <__assert_fail@plt+0x634c>
   175dc:	b	175e0 <__assert_fail@plt+0x61b4>
   175e0:	ldr	r0, [pc, #-1172]	; 17154 <__assert_fail@plt+0x5d28>
   175e4:	ldr	r1, [fp, #8]
   175e8:	cmp	r1, r0
   175ec:	blt	17604 <__assert_fail@plt+0x61d8>
   175f0:	b	17610 <__assert_fail@plt+0x61e4>
   175f4:	ldr	r0, [fp, #8]
   175f8:	movw	r1, #0
   175fc:	cmp	r1, r0
   17600:	bge	17610 <__assert_fail@plt+0x61e4>
   17604:	movw	r0, #0
   17608:	str	r0, [sp, #88]	; 0x58
   1760c:	b	17628 <__assert_fail@plt+0x61fc>
   17610:	ldr	r0, [fp, #8]
   17614:	movw	r1, #0
   17618:	sub	r0, r1, r0
   1761c:	movw	r1, #127	; 0x7f
   17620:	sdiv	r0, r1, r0
   17624:	str	r0, [sp, #88]	; 0x58
   17628:	ldr	r0, [sp, #88]	; 0x58
   1762c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17630:	mvn	r2, #0
   17634:	sub	r1, r2, r1
   17638:	cmp	r0, r1
   1763c:	ble	17760 <__assert_fail@plt+0x6334>
   17640:	b	17778 <__assert_fail@plt+0x634c>
   17644:	b	17648 <__assert_fail@plt+0x621c>
   17648:	b	176a4 <__assert_fail@plt+0x6278>
   1764c:	b	176a4 <__assert_fail@plt+0x6278>
   17650:	ldr	r0, [fp, #8]
   17654:	cmn	r0, #1
   17658:	bne	176a4 <__assert_fail@plt+0x6278>
   1765c:	b	17660 <__assert_fail@plt+0x6234>
   17660:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17664:	mvn	r1, #127	; 0x7f
   17668:	add	r0, r0, r1
   1766c:	movw	r1, #0
   17670:	cmp	r1, r0
   17674:	blt	17760 <__assert_fail@plt+0x6334>
   17678:	b	17778 <__assert_fail@plt+0x634c>
   1767c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17680:	movw	r1, #0
   17684:	cmp	r1, r0
   17688:	bge	17778 <__assert_fail@plt+0x634c>
   1768c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17690:	sub	r0, r0, #1
   17694:	movw	r1, #127	; 0x7f
   17698:	cmp	r1, r0
   1769c:	blt	17760 <__assert_fail@plt+0x6334>
   176a0:	b	17778 <__assert_fail@plt+0x634c>
   176a4:	ldr	r0, [fp, #8]
   176a8:	mvn	r1, #127	; 0x7f
   176ac:	sdiv	r0, r1, r0
   176b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   176b4:	cmp	r0, r1
   176b8:	blt	17760 <__assert_fail@plt+0x6334>
   176bc:	b	17778 <__assert_fail@plt+0x634c>
   176c0:	ldr	r0, [fp, #8]
   176c4:	cmp	r0, #0
   176c8:	bne	176d0 <__assert_fail@plt+0x62a4>
   176cc:	b	17778 <__assert_fail@plt+0x634c>
   176d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176d4:	cmp	r0, #0
   176d8:	bge	17748 <__assert_fail@plt+0x631c>
   176dc:	b	176e0 <__assert_fail@plt+0x62b4>
   176e0:	b	1772c <__assert_fail@plt+0x6300>
   176e4:	b	1772c <__assert_fail@plt+0x6300>
   176e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176ec:	cmn	r0, #1
   176f0:	bne	1772c <__assert_fail@plt+0x6300>
   176f4:	b	176f8 <__assert_fail@plt+0x62cc>
   176f8:	ldr	r0, [fp, #8]
   176fc:	mvn	r1, #127	; 0x7f
   17700:	add	r0, r0, r1
   17704:	movw	r1, #0
   17708:	cmp	r1, r0
   1770c:	blt	17760 <__assert_fail@plt+0x6334>
   17710:	b	17778 <__assert_fail@plt+0x634c>
   17714:	ldr	r0, [fp, #8]
   17718:	sub	r0, r0, #1
   1771c:	movw	r1, #127	; 0x7f
   17720:	cmp	r1, r0
   17724:	blt	17760 <__assert_fail@plt+0x6334>
   17728:	b	17778 <__assert_fail@plt+0x634c>
   1772c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17730:	mvn	r1, #127	; 0x7f
   17734:	sdiv	r0, r1, r0
   17738:	ldr	r1, [fp, #8]
   1773c:	cmp	r0, r1
   17740:	blt	17760 <__assert_fail@plt+0x6334>
   17744:	b	17778 <__assert_fail@plt+0x634c>
   17748:	ldr	r0, [fp, #8]
   1774c:	movw	r1, #127	; 0x7f
   17750:	sdiv	r0, r1, r0
   17754:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17758:	cmp	r0, r1
   1775c:	bge	17778 <__assert_fail@plt+0x634c>
   17760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17764:	ldr	r1, [fp, #8]
   17768:	mul	r0, r0, r1
   1776c:	sxtb	r0, r0
   17770:	str	r0, [fp, #-28]	; 0xffffffe4
   17774:	b	18938 <__assert_fail@plt+0x750c>
   17778:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1777c:	ldr	r1, [fp, #8]
   17780:	mul	r0, r0, r1
   17784:	sxtb	r0, r0
   17788:	str	r0, [fp, #-28]	; 0xffffffe4
   1778c:	b	1893c <__assert_fail@plt+0x7510>
   17790:	ldr	r0, [fp, #8]
   17794:	cmp	r0, #0
   17798:	bge	178a8 <__assert_fail@plt+0x647c>
   1779c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177a0:	cmp	r0, #0
   177a4:	bge	17830 <__assert_fail@plt+0x6404>
   177a8:	b	177ac <__assert_fail@plt+0x6380>
   177ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177b0:	ldr	r1, [fp, #8]
   177b4:	movw	r2, #255	; 0xff
   177b8:	sdiv	r1, r2, r1
   177bc:	cmp	r0, r1
   177c0:	blt	17944 <__assert_fail@plt+0x6518>
   177c4:	b	1795c <__assert_fail@plt+0x6530>
   177c8:	b	177cc <__assert_fail@plt+0x63a0>
   177cc:	ldr	r0, [pc, #-1664]	; 17154 <__assert_fail@plt+0x5d28>
   177d0:	ldr	r1, [fp, #8]
   177d4:	cmp	r1, r0
   177d8:	blt	177f0 <__assert_fail@plt+0x63c4>
   177dc:	b	177fc <__assert_fail@plt+0x63d0>
   177e0:	ldr	r0, [fp, #8]
   177e4:	movw	r1, #0
   177e8:	cmp	r1, r0
   177ec:	bge	177fc <__assert_fail@plt+0x63d0>
   177f0:	movw	r0, #0
   177f4:	str	r0, [sp, #84]	; 0x54
   177f8:	b	17814 <__assert_fail@plt+0x63e8>
   177fc:	ldr	r0, [fp, #8]
   17800:	movw	r1, #0
   17804:	sub	r0, r1, r0
   17808:	movw	r1, #255	; 0xff
   1780c:	sdiv	r0, r1, r0
   17810:	str	r0, [sp, #84]	; 0x54
   17814:	ldr	r0, [sp, #84]	; 0x54
   17818:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1781c:	mvn	r2, #0
   17820:	sub	r1, r2, r1
   17824:	cmp	r0, r1
   17828:	ble	17944 <__assert_fail@plt+0x6518>
   1782c:	b	1795c <__assert_fail@plt+0x6530>
   17830:	b	17834 <__assert_fail@plt+0x6408>
   17834:	b	1788c <__assert_fail@plt+0x6460>
   17838:	b	1788c <__assert_fail@plt+0x6460>
   1783c:	ldr	r0, [fp, #8]
   17840:	cmn	r0, #1
   17844:	bne	1788c <__assert_fail@plt+0x6460>
   17848:	b	1784c <__assert_fail@plt+0x6420>
   1784c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17850:	add	r0, r0, #0
   17854:	movw	r1, #0
   17858:	cmp	r1, r0
   1785c:	blt	17944 <__assert_fail@plt+0x6518>
   17860:	b	1795c <__assert_fail@plt+0x6530>
   17864:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17868:	movw	r1, #0
   1786c:	cmp	r1, r0
   17870:	bge	1795c <__assert_fail@plt+0x6530>
   17874:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17878:	sub	r0, r0, #1
   1787c:	mvn	r1, #0
   17880:	cmp	r1, r0
   17884:	blt	17944 <__assert_fail@plt+0x6518>
   17888:	b	1795c <__assert_fail@plt+0x6530>
   1788c:	ldr	r0, [fp, #8]
   17890:	movw	r1, #0
   17894:	sdiv	r0, r1, r0
   17898:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1789c:	cmp	r0, r1
   178a0:	blt	17944 <__assert_fail@plt+0x6518>
   178a4:	b	1795c <__assert_fail@plt+0x6530>
   178a8:	ldr	r0, [fp, #8]
   178ac:	cmp	r0, #0
   178b0:	bne	178b8 <__assert_fail@plt+0x648c>
   178b4:	b	1795c <__assert_fail@plt+0x6530>
   178b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178bc:	cmp	r0, #0
   178c0:	bge	1792c <__assert_fail@plt+0x6500>
   178c4:	b	178c8 <__assert_fail@plt+0x649c>
   178c8:	b	17910 <__assert_fail@plt+0x64e4>
   178cc:	b	17910 <__assert_fail@plt+0x64e4>
   178d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178d4:	cmn	r0, #1
   178d8:	bne	17910 <__assert_fail@plt+0x64e4>
   178dc:	b	178e0 <__assert_fail@plt+0x64b4>
   178e0:	ldr	r0, [fp, #8]
   178e4:	add	r0, r0, #0
   178e8:	movw	r1, #0
   178ec:	cmp	r1, r0
   178f0:	blt	17944 <__assert_fail@plt+0x6518>
   178f4:	b	1795c <__assert_fail@plt+0x6530>
   178f8:	ldr	r0, [fp, #8]
   178fc:	sub	r0, r0, #1
   17900:	mvn	r1, #0
   17904:	cmp	r1, r0
   17908:	blt	17944 <__assert_fail@plt+0x6518>
   1790c:	b	1795c <__assert_fail@plt+0x6530>
   17910:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17914:	movw	r1, #0
   17918:	sdiv	r0, r1, r0
   1791c:	ldr	r1, [fp, #8]
   17920:	cmp	r0, r1
   17924:	blt	17944 <__assert_fail@plt+0x6518>
   17928:	b	1795c <__assert_fail@plt+0x6530>
   1792c:	ldr	r0, [fp, #8]
   17930:	movw	r1, #255	; 0xff
   17934:	sdiv	r0, r1, r0
   17938:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1793c:	cmp	r0, r1
   17940:	bge	1795c <__assert_fail@plt+0x6530>
   17944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17948:	ldr	r1, [fp, #8]
   1794c:	mul	r0, r0, r1
   17950:	and	r0, r0, #255	; 0xff
   17954:	str	r0, [fp, #-28]	; 0xffffffe4
   17958:	b	18938 <__assert_fail@plt+0x750c>
   1795c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17960:	ldr	r1, [fp, #8]
   17964:	mul	r0, r0, r1
   17968:	and	r0, r0, #255	; 0xff
   1796c:	str	r0, [fp, #-28]	; 0xffffffe4
   17970:	b	1893c <__assert_fail@plt+0x7510>
   17974:	b	17d50 <__assert_fail@plt+0x6924>
   17978:	b	1797c <__assert_fail@plt+0x6550>
   1797c:	ldr	r0, [fp, #8]
   17980:	cmp	r0, #0
   17984:	bge	17a9c <__assert_fail@plt+0x6670>
   17988:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1798c:	cmp	r0, #0
   17990:	bge	17a20 <__assert_fail@plt+0x65f4>
   17994:	b	17998 <__assert_fail@plt+0x656c>
   17998:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1799c:	ldr	r1, [fp, #8]
   179a0:	movw	r2, #32767	; 0x7fff
   179a4:	sdiv	r1, r2, r1
   179a8:	cmp	r0, r1
   179ac:	blt	17b3c <__assert_fail@plt+0x6710>
   179b0:	b	17b54 <__assert_fail@plt+0x6728>
   179b4:	andhi	r0, r0, r0
   179b8:	b	179bc <__assert_fail@plt+0x6590>
   179bc:	ldr	r0, [pc, #4004]	; 18968 <__assert_fail@plt+0x753c>
   179c0:	ldr	r1, [fp, #8]
   179c4:	cmp	r1, r0
   179c8:	blt	179e0 <__assert_fail@plt+0x65b4>
   179cc:	b	179ec <__assert_fail@plt+0x65c0>
   179d0:	ldr	r0, [fp, #8]
   179d4:	movw	r1, #0
   179d8:	cmp	r1, r0
   179dc:	bge	179ec <__assert_fail@plt+0x65c0>
   179e0:	movw	r0, #0
   179e4:	str	r0, [sp, #80]	; 0x50
   179e8:	b	17a04 <__assert_fail@plt+0x65d8>
   179ec:	ldr	r0, [fp, #8]
   179f0:	movw	r1, #0
   179f4:	sub	r0, r1, r0
   179f8:	movw	r1, #32767	; 0x7fff
   179fc:	sdiv	r0, r1, r0
   17a00:	str	r0, [sp, #80]	; 0x50
   17a04:	ldr	r0, [sp, #80]	; 0x50
   17a08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a0c:	mvn	r2, #0
   17a10:	sub	r1, r2, r1
   17a14:	cmp	r0, r1
   17a18:	ble	17b3c <__assert_fail@plt+0x6710>
   17a1c:	b	17b54 <__assert_fail@plt+0x6728>
   17a20:	b	17a24 <__assert_fail@plt+0x65f8>
   17a24:	b	17a80 <__assert_fail@plt+0x6654>
   17a28:	b	17a80 <__assert_fail@plt+0x6654>
   17a2c:	ldr	r0, [fp, #8]
   17a30:	cmn	r0, #1
   17a34:	bne	17a80 <__assert_fail@plt+0x6654>
   17a38:	b	17a3c <__assert_fail@plt+0x6610>
   17a3c:	ldr	r0, [pc, #3884]	; 18970 <__assert_fail@plt+0x7544>
   17a40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a44:	add	r0, r1, r0
   17a48:	movw	r1, #0
   17a4c:	cmp	r1, r0
   17a50:	blt	17b3c <__assert_fail@plt+0x6710>
   17a54:	b	17b54 <__assert_fail@plt+0x6728>
   17a58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a5c:	movw	r1, #0
   17a60:	cmp	r1, r0
   17a64:	bge	17b54 <__assert_fail@plt+0x6728>
   17a68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a6c:	sub	r0, r0, #1
   17a70:	movw	r1, #32767	; 0x7fff
   17a74:	cmp	r1, r0
   17a78:	blt	17b3c <__assert_fail@plt+0x6710>
   17a7c:	b	17b54 <__assert_fail@plt+0x6728>
   17a80:	ldr	r0, [pc, #3816]	; 18970 <__assert_fail@plt+0x7544>
   17a84:	ldr	r1, [fp, #8]
   17a88:	sdiv	r0, r0, r1
   17a8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a90:	cmp	r0, r1
   17a94:	blt	17b3c <__assert_fail@plt+0x6710>
   17a98:	b	17b54 <__assert_fail@plt+0x6728>
   17a9c:	ldr	r0, [fp, #8]
   17aa0:	cmp	r0, #0
   17aa4:	bne	17aac <__assert_fail@plt+0x6680>
   17aa8:	b	17b54 <__assert_fail@plt+0x6728>
   17aac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ab0:	cmp	r0, #0
   17ab4:	bge	17b24 <__assert_fail@plt+0x66f8>
   17ab8:	b	17abc <__assert_fail@plt+0x6690>
   17abc:	b	17b08 <__assert_fail@plt+0x66dc>
   17ac0:	b	17b08 <__assert_fail@plt+0x66dc>
   17ac4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ac8:	cmn	r0, #1
   17acc:	bne	17b08 <__assert_fail@plt+0x66dc>
   17ad0:	b	17ad4 <__assert_fail@plt+0x66a8>
   17ad4:	ldr	r0, [pc, #3732]	; 18970 <__assert_fail@plt+0x7544>
   17ad8:	ldr	r1, [fp, #8]
   17adc:	add	r0, r1, r0
   17ae0:	movw	r1, #0
   17ae4:	cmp	r1, r0
   17ae8:	blt	17b3c <__assert_fail@plt+0x6710>
   17aec:	b	17b54 <__assert_fail@plt+0x6728>
   17af0:	ldr	r0, [fp, #8]
   17af4:	sub	r0, r0, #1
   17af8:	movw	r1, #32767	; 0x7fff
   17afc:	cmp	r1, r0
   17b00:	blt	17b3c <__assert_fail@plt+0x6710>
   17b04:	b	17b54 <__assert_fail@plt+0x6728>
   17b08:	ldr	r0, [pc, #3680]	; 18970 <__assert_fail@plt+0x7544>
   17b0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b10:	sdiv	r0, r0, r1
   17b14:	ldr	r1, [fp, #8]
   17b18:	cmp	r0, r1
   17b1c:	blt	17b3c <__assert_fail@plt+0x6710>
   17b20:	b	17b54 <__assert_fail@plt+0x6728>
   17b24:	ldr	r0, [fp, #8]
   17b28:	movw	r1, #32767	; 0x7fff
   17b2c:	sdiv	r0, r1, r0
   17b30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b34:	cmp	r0, r1
   17b38:	bge	17b54 <__assert_fail@plt+0x6728>
   17b3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b40:	ldr	r1, [fp, #8]
   17b44:	mul	r0, r0, r1
   17b48:	sxth	r0, r0
   17b4c:	str	r0, [fp, #-28]	; 0xffffffe4
   17b50:	b	18938 <__assert_fail@plt+0x750c>
   17b54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b58:	ldr	r1, [fp, #8]
   17b5c:	mul	r0, r0, r1
   17b60:	sxth	r0, r0
   17b64:	str	r0, [fp, #-28]	; 0xffffffe4
   17b68:	b	1893c <__assert_fail@plt+0x7510>
   17b6c:	ldr	r0, [fp, #8]
   17b70:	cmp	r0, #0
   17b74:	bge	17c84 <__assert_fail@plt+0x6858>
   17b78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b7c:	cmp	r0, #0
   17b80:	bge	17c0c <__assert_fail@plt+0x67e0>
   17b84:	b	17b88 <__assert_fail@plt+0x675c>
   17b88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b8c:	ldr	r1, [fp, #8]
   17b90:	movw	r2, #65535	; 0xffff
   17b94:	sdiv	r1, r2, r1
   17b98:	cmp	r0, r1
   17b9c:	blt	17d20 <__assert_fail@plt+0x68f4>
   17ba0:	b	17d38 <__assert_fail@plt+0x690c>
   17ba4:	b	17ba8 <__assert_fail@plt+0x677c>
   17ba8:	ldr	r0, [pc, #3512]	; 18968 <__assert_fail@plt+0x753c>
   17bac:	ldr	r1, [fp, #8]
   17bb0:	cmp	r1, r0
   17bb4:	blt	17bcc <__assert_fail@plt+0x67a0>
   17bb8:	b	17bd8 <__assert_fail@plt+0x67ac>
   17bbc:	ldr	r0, [fp, #8]
   17bc0:	movw	r1, #0
   17bc4:	cmp	r1, r0
   17bc8:	bge	17bd8 <__assert_fail@plt+0x67ac>
   17bcc:	movw	r0, #0
   17bd0:	str	r0, [sp, #76]	; 0x4c
   17bd4:	b	17bf0 <__assert_fail@plt+0x67c4>
   17bd8:	ldr	r0, [fp, #8]
   17bdc:	movw	r1, #0
   17be0:	sub	r0, r1, r0
   17be4:	movw	r1, #65535	; 0xffff
   17be8:	sdiv	r0, r1, r0
   17bec:	str	r0, [sp, #76]	; 0x4c
   17bf0:	ldr	r0, [sp, #76]	; 0x4c
   17bf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17bf8:	mvn	r2, #0
   17bfc:	sub	r1, r2, r1
   17c00:	cmp	r0, r1
   17c04:	ble	17d20 <__assert_fail@plt+0x68f4>
   17c08:	b	17d38 <__assert_fail@plt+0x690c>
   17c0c:	b	17c10 <__assert_fail@plt+0x67e4>
   17c10:	b	17c68 <__assert_fail@plt+0x683c>
   17c14:	b	17c68 <__assert_fail@plt+0x683c>
   17c18:	ldr	r0, [fp, #8]
   17c1c:	cmn	r0, #1
   17c20:	bne	17c68 <__assert_fail@plt+0x683c>
   17c24:	b	17c28 <__assert_fail@plt+0x67fc>
   17c28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c2c:	add	r0, r0, #0
   17c30:	movw	r1, #0
   17c34:	cmp	r1, r0
   17c38:	blt	17d20 <__assert_fail@plt+0x68f4>
   17c3c:	b	17d38 <__assert_fail@plt+0x690c>
   17c40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c44:	movw	r1, #0
   17c48:	cmp	r1, r0
   17c4c:	bge	17d38 <__assert_fail@plt+0x690c>
   17c50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c54:	sub	r0, r0, #1
   17c58:	mvn	r1, #0
   17c5c:	cmp	r1, r0
   17c60:	blt	17d20 <__assert_fail@plt+0x68f4>
   17c64:	b	17d38 <__assert_fail@plt+0x690c>
   17c68:	ldr	r0, [fp, #8]
   17c6c:	movw	r1, #0
   17c70:	sdiv	r0, r1, r0
   17c74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c78:	cmp	r0, r1
   17c7c:	blt	17d20 <__assert_fail@plt+0x68f4>
   17c80:	b	17d38 <__assert_fail@plt+0x690c>
   17c84:	ldr	r0, [fp, #8]
   17c88:	cmp	r0, #0
   17c8c:	bne	17c94 <__assert_fail@plt+0x6868>
   17c90:	b	17d38 <__assert_fail@plt+0x690c>
   17c94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c98:	cmp	r0, #0
   17c9c:	bge	17d08 <__assert_fail@plt+0x68dc>
   17ca0:	b	17ca4 <__assert_fail@plt+0x6878>
   17ca4:	b	17cec <__assert_fail@plt+0x68c0>
   17ca8:	b	17cec <__assert_fail@plt+0x68c0>
   17cac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cb0:	cmn	r0, #1
   17cb4:	bne	17cec <__assert_fail@plt+0x68c0>
   17cb8:	b	17cbc <__assert_fail@plt+0x6890>
   17cbc:	ldr	r0, [fp, #8]
   17cc0:	add	r0, r0, #0
   17cc4:	movw	r1, #0
   17cc8:	cmp	r1, r0
   17ccc:	blt	17d20 <__assert_fail@plt+0x68f4>
   17cd0:	b	17d38 <__assert_fail@plt+0x690c>
   17cd4:	ldr	r0, [fp, #8]
   17cd8:	sub	r0, r0, #1
   17cdc:	mvn	r1, #0
   17ce0:	cmp	r1, r0
   17ce4:	blt	17d20 <__assert_fail@plt+0x68f4>
   17ce8:	b	17d38 <__assert_fail@plt+0x690c>
   17cec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cf0:	movw	r1, #0
   17cf4:	sdiv	r0, r1, r0
   17cf8:	ldr	r1, [fp, #8]
   17cfc:	cmp	r0, r1
   17d00:	blt	17d20 <__assert_fail@plt+0x68f4>
   17d04:	b	17d38 <__assert_fail@plt+0x690c>
   17d08:	ldr	r0, [fp, #8]
   17d0c:	movw	r1, #65535	; 0xffff
   17d10:	sdiv	r0, r1, r0
   17d14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d18:	cmp	r0, r1
   17d1c:	bge	17d38 <__assert_fail@plt+0x690c>
   17d20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d24:	ldr	r1, [fp, #8]
   17d28:	mul	r0, r0, r1
   17d2c:	uxth	r0, r0
   17d30:	str	r0, [fp, #-28]	; 0xffffffe4
   17d34:	b	18938 <__assert_fail@plt+0x750c>
   17d38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d3c:	ldr	r1, [fp, #8]
   17d40:	mul	r0, r0, r1
   17d44:	uxth	r0, r0
   17d48:	str	r0, [fp, #-28]	; 0xffffffe4
   17d4c:	b	1893c <__assert_fail@plt+0x7510>
   17d50:	b	17d54 <__assert_fail@plt+0x6928>
   17d54:	b	17d58 <__assert_fail@plt+0x692c>
   17d58:	ldr	r0, [fp, #8]
   17d5c:	cmp	r0, #0
   17d60:	bge	17e64 <__assert_fail@plt+0x6a38>
   17d64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d68:	cmp	r0, #0
   17d6c:	bge	17df8 <__assert_fail@plt+0x69cc>
   17d70:	b	17d74 <__assert_fail@plt+0x6948>
   17d74:	ldr	r0, [pc, #3048]	; 18964 <__assert_fail@plt+0x7538>
   17d78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d7c:	ldr	r2, [fp, #8]
   17d80:	sdiv	r0, r0, r2
   17d84:	cmp	r1, r0
   17d88:	blt	17ef4 <__assert_fail@plt+0x6ac8>
   17d8c:	b	17f08 <__assert_fail@plt+0x6adc>
   17d90:	b	17d94 <__assert_fail@plt+0x6968>
   17d94:	ldr	r0, [pc, #3020]	; 18968 <__assert_fail@plt+0x753c>
   17d98:	ldr	r1, [fp, #8]
   17d9c:	cmp	r1, r0
   17da0:	blt	17db8 <__assert_fail@plt+0x698c>
   17da4:	b	17dc4 <__assert_fail@plt+0x6998>
   17da8:	ldr	r0, [fp, #8]
   17dac:	movw	r1, #0
   17db0:	cmp	r1, r0
   17db4:	bge	17dc4 <__assert_fail@plt+0x6998>
   17db8:	movw	r0, #0
   17dbc:	str	r0, [sp, #72]	; 0x48
   17dc0:	b	17ddc <__assert_fail@plt+0x69b0>
   17dc4:	ldr	r0, [pc, #2968]	; 18964 <__assert_fail@plt+0x7538>
   17dc8:	ldr	r1, [fp, #8]
   17dcc:	movw	r2, #0
   17dd0:	sub	r1, r2, r1
   17dd4:	sdiv	r0, r0, r1
   17dd8:	str	r0, [sp, #72]	; 0x48
   17ddc:	ldr	r0, [sp, #72]	; 0x48
   17de0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17de4:	mvn	r2, #0
   17de8:	sub	r1, r2, r1
   17dec:	cmp	r0, r1
   17df0:	ble	17ef4 <__assert_fail@plt+0x6ac8>
   17df4:	b	17f08 <__assert_fail@plt+0x6adc>
   17df8:	ldr	r0, [fp, #8]
   17dfc:	cmn	r0, #1
   17e00:	bne	17e48 <__assert_fail@plt+0x6a1c>
   17e04:	b	17e08 <__assert_fail@plt+0x69dc>
   17e08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e0c:	add	r0, r0, #-2147483648	; 0x80000000
   17e10:	movw	r1, #0
   17e14:	cmp	r1, r0
   17e18:	blt	17ef4 <__assert_fail@plt+0x6ac8>
   17e1c:	b	17f08 <__assert_fail@plt+0x6adc>
   17e20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e24:	movw	r1, #0
   17e28:	cmp	r1, r0
   17e2c:	bge	17f08 <__assert_fail@plt+0x6adc>
   17e30:	ldr	r0, [pc, #2860]	; 18964 <__assert_fail@plt+0x7538>
   17e34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e38:	sub	r1, r1, #1
   17e3c:	cmp	r0, r1
   17e40:	blt	17ef4 <__assert_fail@plt+0x6ac8>
   17e44:	b	17f08 <__assert_fail@plt+0x6adc>
   17e48:	ldr	r0, [pc, #2844]	; 1896c <__assert_fail@plt+0x7540>
   17e4c:	ldr	r1, [fp, #8]
   17e50:	sdiv	r0, r0, r1
   17e54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e58:	cmp	r0, r1
   17e5c:	blt	17ef4 <__assert_fail@plt+0x6ac8>
   17e60:	b	17f08 <__assert_fail@plt+0x6adc>
   17e64:	ldr	r0, [fp, #8]
   17e68:	cmp	r0, #0
   17e6c:	bne	17e74 <__assert_fail@plt+0x6a48>
   17e70:	b	17f08 <__assert_fail@plt+0x6adc>
   17e74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e78:	cmp	r0, #0
   17e7c:	bge	17edc <__assert_fail@plt+0x6ab0>
   17e80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e84:	cmn	r0, #1
   17e88:	bne	17ec0 <__assert_fail@plt+0x6a94>
   17e8c:	b	17e90 <__assert_fail@plt+0x6a64>
   17e90:	ldr	r0, [fp, #8]
   17e94:	add	r0, r0, #-2147483648	; 0x80000000
   17e98:	movw	r1, #0
   17e9c:	cmp	r1, r0
   17ea0:	blt	17ef4 <__assert_fail@plt+0x6ac8>
   17ea4:	b	17f08 <__assert_fail@plt+0x6adc>
   17ea8:	ldr	r0, [pc, #2740]	; 18964 <__assert_fail@plt+0x7538>
   17eac:	ldr	r1, [fp, #8]
   17eb0:	sub	r1, r1, #1
   17eb4:	cmp	r0, r1
   17eb8:	blt	17ef4 <__assert_fail@plt+0x6ac8>
   17ebc:	b	17f08 <__assert_fail@plt+0x6adc>
   17ec0:	ldr	r0, [pc, #2724]	; 1896c <__assert_fail@plt+0x7540>
   17ec4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ec8:	sdiv	r0, r0, r1
   17ecc:	ldr	r1, [fp, #8]
   17ed0:	cmp	r0, r1
   17ed4:	blt	17ef4 <__assert_fail@plt+0x6ac8>
   17ed8:	b	17f08 <__assert_fail@plt+0x6adc>
   17edc:	ldr	r0, [pc, #2688]	; 18964 <__assert_fail@plt+0x7538>
   17ee0:	ldr	r1, [fp, #8]
   17ee4:	sdiv	r0, r0, r1
   17ee8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17eec:	cmp	r0, r1
   17ef0:	bge	17f08 <__assert_fail@plt+0x6adc>
   17ef4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ef8:	ldr	r1, [fp, #8]
   17efc:	mul	r0, r0, r1
   17f00:	str	r0, [fp, #-28]	; 0xffffffe4
   17f04:	b	18938 <__assert_fail@plt+0x750c>
   17f08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f0c:	ldr	r1, [fp, #8]
   17f10:	mul	r0, r0, r1
   17f14:	str	r0, [fp, #-28]	; 0xffffffe4
   17f18:	b	1893c <__assert_fail@plt+0x7510>
   17f1c:	ldr	r0, [fp, #8]
   17f20:	cmp	r0, #0
   17f24:	bge	18034 <__assert_fail@plt+0x6c08>
   17f28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f2c:	cmp	r0, #0
   17f30:	bge	17fbc <__assert_fail@plt+0x6b90>
   17f34:	b	17f54 <__assert_fail@plt+0x6b28>
   17f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f3c:	ldr	r1, [fp, #8]
   17f40:	mvn	r2, #0
   17f44:	udiv	r1, r2, r1
   17f48:	cmp	r0, r1
   17f4c:	bcc	180d0 <__assert_fail@plt+0x6ca4>
   17f50:	b	180e4 <__assert_fail@plt+0x6cb8>
   17f54:	b	17f58 <__assert_fail@plt+0x6b2c>
   17f58:	ldr	r0, [pc, #2568]	; 18968 <__assert_fail@plt+0x753c>
   17f5c:	ldr	r1, [fp, #8]
   17f60:	cmp	r1, r0
   17f64:	blt	17f7c <__assert_fail@plt+0x6b50>
   17f68:	b	17f88 <__assert_fail@plt+0x6b5c>
   17f6c:	ldr	r0, [fp, #8]
   17f70:	movw	r1, #0
   17f74:	cmp	r1, r0
   17f78:	bge	17f88 <__assert_fail@plt+0x6b5c>
   17f7c:	movw	r0, #1
   17f80:	str	r0, [sp, #68]	; 0x44
   17f84:	b	17fa0 <__assert_fail@plt+0x6b74>
   17f88:	ldr	r0, [fp, #8]
   17f8c:	movw	r1, #0
   17f90:	sub	r0, r1, r0
   17f94:	mvn	r1, #0
   17f98:	udiv	r0, r1, r0
   17f9c:	str	r0, [sp, #68]	; 0x44
   17fa0:	ldr	r0, [sp, #68]	; 0x44
   17fa4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17fa8:	mvn	r2, #0
   17fac:	sub	r1, r2, r1
   17fb0:	cmp	r0, r1
   17fb4:	bls	180d0 <__assert_fail@plt+0x6ca4>
   17fb8:	b	180e4 <__assert_fail@plt+0x6cb8>
   17fbc:	b	17fc0 <__assert_fail@plt+0x6b94>
   17fc0:	b	18018 <__assert_fail@plt+0x6bec>
   17fc4:	b	18018 <__assert_fail@plt+0x6bec>
   17fc8:	ldr	r0, [fp, #8]
   17fcc:	cmn	r0, #1
   17fd0:	bne	18018 <__assert_fail@plt+0x6bec>
   17fd4:	b	17fd8 <__assert_fail@plt+0x6bac>
   17fd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fdc:	add	r0, r0, #0
   17fe0:	movw	r1, #0
   17fe4:	cmp	r1, r0
   17fe8:	blt	180d0 <__assert_fail@plt+0x6ca4>
   17fec:	b	180e4 <__assert_fail@plt+0x6cb8>
   17ff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ff4:	movw	r1, #0
   17ff8:	cmp	r1, r0
   17ffc:	bge	180e4 <__assert_fail@plt+0x6cb8>
   18000:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18004:	sub	r0, r0, #1
   18008:	mvn	r1, #0
   1800c:	cmp	r1, r0
   18010:	blt	180d0 <__assert_fail@plt+0x6ca4>
   18014:	b	180e4 <__assert_fail@plt+0x6cb8>
   18018:	ldr	r0, [fp, #8]
   1801c:	movw	r1, #0
   18020:	sdiv	r0, r1, r0
   18024:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18028:	cmp	r0, r1
   1802c:	blt	180d0 <__assert_fail@plt+0x6ca4>
   18030:	b	180e4 <__assert_fail@plt+0x6cb8>
   18034:	ldr	r0, [fp, #8]
   18038:	cmp	r0, #0
   1803c:	bne	18044 <__assert_fail@plt+0x6c18>
   18040:	b	180e4 <__assert_fail@plt+0x6cb8>
   18044:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18048:	cmp	r0, #0
   1804c:	bge	180b8 <__assert_fail@plt+0x6c8c>
   18050:	b	18054 <__assert_fail@plt+0x6c28>
   18054:	b	1809c <__assert_fail@plt+0x6c70>
   18058:	b	1809c <__assert_fail@plt+0x6c70>
   1805c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18060:	cmn	r0, #1
   18064:	bne	1809c <__assert_fail@plt+0x6c70>
   18068:	b	1806c <__assert_fail@plt+0x6c40>
   1806c:	ldr	r0, [fp, #8]
   18070:	add	r0, r0, #0
   18074:	movw	r1, #0
   18078:	cmp	r1, r0
   1807c:	blt	180d0 <__assert_fail@plt+0x6ca4>
   18080:	b	180e4 <__assert_fail@plt+0x6cb8>
   18084:	ldr	r0, [fp, #8]
   18088:	sub	r0, r0, #1
   1808c:	mvn	r1, #0
   18090:	cmp	r1, r0
   18094:	blt	180d0 <__assert_fail@plt+0x6ca4>
   18098:	b	180e4 <__assert_fail@plt+0x6cb8>
   1809c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180a0:	movw	r1, #0
   180a4:	sdiv	r0, r1, r0
   180a8:	ldr	r1, [fp, #8]
   180ac:	cmp	r0, r1
   180b0:	blt	180d0 <__assert_fail@plt+0x6ca4>
   180b4:	b	180e4 <__assert_fail@plt+0x6cb8>
   180b8:	ldr	r0, [fp, #8]
   180bc:	mvn	r1, #0
   180c0:	udiv	r0, r1, r0
   180c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   180c8:	cmp	r0, r1
   180cc:	bcs	180e4 <__assert_fail@plt+0x6cb8>
   180d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180d4:	ldr	r1, [fp, #8]
   180d8:	mul	r0, r0, r1
   180dc:	str	r0, [fp, #-28]	; 0xffffffe4
   180e0:	b	18938 <__assert_fail@plt+0x750c>
   180e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180e8:	ldr	r1, [fp, #8]
   180ec:	mul	r0, r0, r1
   180f0:	str	r0, [fp, #-28]	; 0xffffffe4
   180f4:	b	1893c <__assert_fail@plt+0x7510>
   180f8:	b	180fc <__assert_fail@plt+0x6cd0>
   180fc:	b	18100 <__assert_fail@plt+0x6cd4>
   18100:	ldr	r0, [fp, #8]
   18104:	cmp	r0, #0
   18108:	bge	1820c <__assert_fail@plt+0x6de0>
   1810c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18110:	cmp	r0, #0
   18114:	bge	181a0 <__assert_fail@plt+0x6d74>
   18118:	b	1811c <__assert_fail@plt+0x6cf0>
   1811c:	ldr	r0, [pc, #2112]	; 18964 <__assert_fail@plt+0x7538>
   18120:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18124:	ldr	r2, [fp, #8]
   18128:	sdiv	r0, r0, r2
   1812c:	cmp	r1, r0
   18130:	blt	1829c <__assert_fail@plt+0x6e70>
   18134:	b	182b0 <__assert_fail@plt+0x6e84>
   18138:	b	1813c <__assert_fail@plt+0x6d10>
   1813c:	ldr	r0, [pc, #2084]	; 18968 <__assert_fail@plt+0x753c>
   18140:	ldr	r1, [fp, #8]
   18144:	cmp	r1, r0
   18148:	blt	18160 <__assert_fail@plt+0x6d34>
   1814c:	b	1816c <__assert_fail@plt+0x6d40>
   18150:	ldr	r0, [fp, #8]
   18154:	movw	r1, #0
   18158:	cmp	r1, r0
   1815c:	bge	1816c <__assert_fail@plt+0x6d40>
   18160:	movw	r0, #0
   18164:	str	r0, [sp, #64]	; 0x40
   18168:	b	18184 <__assert_fail@plt+0x6d58>
   1816c:	ldr	r0, [pc, #2032]	; 18964 <__assert_fail@plt+0x7538>
   18170:	ldr	r1, [fp, #8]
   18174:	movw	r2, #0
   18178:	sub	r1, r2, r1
   1817c:	sdiv	r0, r0, r1
   18180:	str	r0, [sp, #64]	; 0x40
   18184:	ldr	r0, [sp, #64]	; 0x40
   18188:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1818c:	mvn	r2, #0
   18190:	sub	r1, r2, r1
   18194:	cmp	r0, r1
   18198:	ble	1829c <__assert_fail@plt+0x6e70>
   1819c:	b	182b0 <__assert_fail@plt+0x6e84>
   181a0:	ldr	r0, [fp, #8]
   181a4:	cmn	r0, #1
   181a8:	bne	181f0 <__assert_fail@plt+0x6dc4>
   181ac:	b	181b0 <__assert_fail@plt+0x6d84>
   181b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181b4:	add	r0, r0, #-2147483648	; 0x80000000
   181b8:	movw	r1, #0
   181bc:	cmp	r1, r0
   181c0:	blt	1829c <__assert_fail@plt+0x6e70>
   181c4:	b	182b0 <__assert_fail@plt+0x6e84>
   181c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181cc:	movw	r1, #0
   181d0:	cmp	r1, r0
   181d4:	bge	182b0 <__assert_fail@plt+0x6e84>
   181d8:	ldr	r0, [pc, #1924]	; 18964 <__assert_fail@plt+0x7538>
   181dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   181e0:	sub	r1, r1, #1
   181e4:	cmp	r0, r1
   181e8:	blt	1829c <__assert_fail@plt+0x6e70>
   181ec:	b	182b0 <__assert_fail@plt+0x6e84>
   181f0:	ldr	r0, [pc, #1908]	; 1896c <__assert_fail@plt+0x7540>
   181f4:	ldr	r1, [fp, #8]
   181f8:	sdiv	r0, r0, r1
   181fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18200:	cmp	r0, r1
   18204:	blt	1829c <__assert_fail@plt+0x6e70>
   18208:	b	182b0 <__assert_fail@plt+0x6e84>
   1820c:	ldr	r0, [fp, #8]
   18210:	cmp	r0, #0
   18214:	bne	1821c <__assert_fail@plt+0x6df0>
   18218:	b	182b0 <__assert_fail@plt+0x6e84>
   1821c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18220:	cmp	r0, #0
   18224:	bge	18284 <__assert_fail@plt+0x6e58>
   18228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1822c:	cmn	r0, #1
   18230:	bne	18268 <__assert_fail@plt+0x6e3c>
   18234:	b	18238 <__assert_fail@plt+0x6e0c>
   18238:	ldr	r0, [fp, #8]
   1823c:	add	r0, r0, #-2147483648	; 0x80000000
   18240:	movw	r1, #0
   18244:	cmp	r1, r0
   18248:	blt	1829c <__assert_fail@plt+0x6e70>
   1824c:	b	182b0 <__assert_fail@plt+0x6e84>
   18250:	ldr	r0, [pc, #1804]	; 18964 <__assert_fail@plt+0x7538>
   18254:	ldr	r1, [fp, #8]
   18258:	sub	r1, r1, #1
   1825c:	cmp	r0, r1
   18260:	blt	1829c <__assert_fail@plt+0x6e70>
   18264:	b	182b0 <__assert_fail@plt+0x6e84>
   18268:	ldr	r0, [pc, #1788]	; 1896c <__assert_fail@plt+0x7540>
   1826c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18270:	sdiv	r0, r0, r1
   18274:	ldr	r1, [fp, #8]
   18278:	cmp	r0, r1
   1827c:	blt	1829c <__assert_fail@plt+0x6e70>
   18280:	b	182b0 <__assert_fail@plt+0x6e84>
   18284:	ldr	r0, [pc, #1752]	; 18964 <__assert_fail@plt+0x7538>
   18288:	ldr	r1, [fp, #8]
   1828c:	sdiv	r0, r0, r1
   18290:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18294:	cmp	r0, r1
   18298:	bge	182b0 <__assert_fail@plt+0x6e84>
   1829c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182a0:	ldr	r1, [fp, #8]
   182a4:	mul	r0, r0, r1
   182a8:	str	r0, [fp, #-28]	; 0xffffffe4
   182ac:	b	18938 <__assert_fail@plt+0x750c>
   182b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182b4:	ldr	r1, [fp, #8]
   182b8:	mul	r0, r0, r1
   182bc:	str	r0, [fp, #-28]	; 0xffffffe4
   182c0:	b	1893c <__assert_fail@plt+0x7510>
   182c4:	ldr	r0, [fp, #8]
   182c8:	cmp	r0, #0
   182cc:	bge	183dc <__assert_fail@plt+0x6fb0>
   182d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182d4:	cmp	r0, #0
   182d8:	bge	18364 <__assert_fail@plt+0x6f38>
   182dc:	b	182fc <__assert_fail@plt+0x6ed0>
   182e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182e4:	ldr	r1, [fp, #8]
   182e8:	mvn	r2, #0
   182ec:	udiv	r1, r2, r1
   182f0:	cmp	r0, r1
   182f4:	bcc	18478 <__assert_fail@plt+0x704c>
   182f8:	b	1848c <__assert_fail@plt+0x7060>
   182fc:	b	18300 <__assert_fail@plt+0x6ed4>
   18300:	ldr	r0, [pc, #1632]	; 18968 <__assert_fail@plt+0x753c>
   18304:	ldr	r1, [fp, #8]
   18308:	cmp	r1, r0
   1830c:	blt	18324 <__assert_fail@plt+0x6ef8>
   18310:	b	18330 <__assert_fail@plt+0x6f04>
   18314:	ldr	r0, [fp, #8]
   18318:	movw	r1, #0
   1831c:	cmp	r1, r0
   18320:	bge	18330 <__assert_fail@plt+0x6f04>
   18324:	movw	r0, #1
   18328:	str	r0, [sp, #60]	; 0x3c
   1832c:	b	18348 <__assert_fail@plt+0x6f1c>
   18330:	ldr	r0, [fp, #8]
   18334:	movw	r1, #0
   18338:	sub	r0, r1, r0
   1833c:	mvn	r1, #0
   18340:	udiv	r0, r1, r0
   18344:	str	r0, [sp, #60]	; 0x3c
   18348:	ldr	r0, [sp, #60]	; 0x3c
   1834c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18350:	mvn	r2, #0
   18354:	sub	r1, r2, r1
   18358:	cmp	r0, r1
   1835c:	bls	18478 <__assert_fail@plt+0x704c>
   18360:	b	1848c <__assert_fail@plt+0x7060>
   18364:	b	18368 <__assert_fail@plt+0x6f3c>
   18368:	b	183c0 <__assert_fail@plt+0x6f94>
   1836c:	b	183c0 <__assert_fail@plt+0x6f94>
   18370:	ldr	r0, [fp, #8]
   18374:	cmn	r0, #1
   18378:	bne	183c0 <__assert_fail@plt+0x6f94>
   1837c:	b	18380 <__assert_fail@plt+0x6f54>
   18380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18384:	add	r0, r0, #0
   18388:	movw	r1, #0
   1838c:	cmp	r1, r0
   18390:	blt	18478 <__assert_fail@plt+0x704c>
   18394:	b	1848c <__assert_fail@plt+0x7060>
   18398:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1839c:	movw	r1, #0
   183a0:	cmp	r1, r0
   183a4:	bge	1848c <__assert_fail@plt+0x7060>
   183a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183ac:	sub	r0, r0, #1
   183b0:	mvn	r1, #0
   183b4:	cmp	r1, r0
   183b8:	blt	18478 <__assert_fail@plt+0x704c>
   183bc:	b	1848c <__assert_fail@plt+0x7060>
   183c0:	ldr	r0, [fp, #8]
   183c4:	movw	r1, #0
   183c8:	sdiv	r0, r1, r0
   183cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   183d0:	cmp	r0, r1
   183d4:	blt	18478 <__assert_fail@plt+0x704c>
   183d8:	b	1848c <__assert_fail@plt+0x7060>
   183dc:	ldr	r0, [fp, #8]
   183e0:	cmp	r0, #0
   183e4:	bne	183ec <__assert_fail@plt+0x6fc0>
   183e8:	b	1848c <__assert_fail@plt+0x7060>
   183ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183f0:	cmp	r0, #0
   183f4:	bge	18460 <__assert_fail@plt+0x7034>
   183f8:	b	183fc <__assert_fail@plt+0x6fd0>
   183fc:	b	18444 <__assert_fail@plt+0x7018>
   18400:	b	18444 <__assert_fail@plt+0x7018>
   18404:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18408:	cmn	r0, #1
   1840c:	bne	18444 <__assert_fail@plt+0x7018>
   18410:	b	18414 <__assert_fail@plt+0x6fe8>
   18414:	ldr	r0, [fp, #8]
   18418:	add	r0, r0, #0
   1841c:	movw	r1, #0
   18420:	cmp	r1, r0
   18424:	blt	18478 <__assert_fail@plt+0x704c>
   18428:	b	1848c <__assert_fail@plt+0x7060>
   1842c:	ldr	r0, [fp, #8]
   18430:	sub	r0, r0, #1
   18434:	mvn	r1, #0
   18438:	cmp	r1, r0
   1843c:	blt	18478 <__assert_fail@plt+0x704c>
   18440:	b	1848c <__assert_fail@plt+0x7060>
   18444:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18448:	movw	r1, #0
   1844c:	sdiv	r0, r1, r0
   18450:	ldr	r1, [fp, #8]
   18454:	cmp	r0, r1
   18458:	blt	18478 <__assert_fail@plt+0x704c>
   1845c:	b	1848c <__assert_fail@plt+0x7060>
   18460:	ldr	r0, [fp, #8]
   18464:	mvn	r1, #0
   18468:	udiv	r0, r1, r0
   1846c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18470:	cmp	r0, r1
   18474:	bcs	1848c <__assert_fail@plt+0x7060>
   18478:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1847c:	ldr	r1, [fp, #8]
   18480:	mul	r0, r0, r1
   18484:	str	r0, [fp, #-28]	; 0xffffffe4
   18488:	b	18938 <__assert_fail@plt+0x750c>
   1848c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18490:	ldr	r1, [fp, #8]
   18494:	mul	r0, r0, r1
   18498:	str	r0, [fp, #-28]	; 0xffffffe4
   1849c:	b	1893c <__assert_fail@plt+0x7510>
   184a0:	b	184a4 <__assert_fail@plt+0x7078>
   184a4:	ldr	r0, [fp, #8]
   184a8:	cmp	r0, #0
   184ac:	bge	18614 <__assert_fail@plt+0x71e8>
   184b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184b4:	cmp	r0, #0
   184b8:	bge	18590 <__assert_fail@plt+0x7164>
   184bc:	b	184c0 <__assert_fail@plt+0x7094>
   184c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184c4:	ldr	r1, [fp, #8]
   184c8:	asr	r3, r1, #31
   184cc:	mvn	r2, #0
   184d0:	mvn	ip, #-2147483648	; 0x80000000
   184d4:	str	r0, [sp, #56]	; 0x38
   184d8:	mov	r0, r2
   184dc:	str	r1, [sp, #52]	; 0x34
   184e0:	mov	r1, ip
   184e4:	ldr	r2, [sp, #52]	; 0x34
   184e8:	bl	1f354 <__assert_fail@plt+0xdf28>
   184ec:	ldr	r2, [sp, #56]	; 0x38
   184f0:	subs	r0, r2, r0
   184f4:	rscs	r1, r1, r2, asr #31
   184f8:	blt	186dc <__assert_fail@plt+0x72b0>
   184fc:	b	186f0 <__assert_fail@plt+0x72c4>
   18500:	b	18504 <__assert_fail@plt+0x70d8>
   18504:	ldr	r0, [pc, #1116]	; 18968 <__assert_fail@plt+0x753c>
   18508:	ldr	r1, [fp, #8]
   1850c:	cmp	r1, r0
   18510:	blt	18528 <__assert_fail@plt+0x70fc>
   18514:	b	1853c <__assert_fail@plt+0x7110>
   18518:	ldr	r0, [fp, #8]
   1851c:	movw	r1, #0
   18520:	cmp	r1, r0
   18524:	bge	1853c <__assert_fail@plt+0x7110>
   18528:	mov	r0, #0
   1852c:	mvn	r1, #0
   18530:	str	r1, [sp, #48]	; 0x30
   18534:	str	r0, [sp, #44]	; 0x2c
   18538:	b	18570 <__assert_fail@plt+0x7144>
   1853c:	ldr	r0, [fp, #8]
   18540:	rsb	r0, r0, #0
   18544:	asr	r3, r0, #31
   18548:	mvn	r1, #0
   1854c:	mvn	r2, #-2147483648	; 0x80000000
   18550:	str	r0, [sp, #40]	; 0x28
   18554:	mov	r0, r1
   18558:	mov	r1, r2
   1855c:	ldr	r2, [sp, #40]	; 0x28
   18560:	bl	1f354 <__assert_fail@plt+0xdf28>
   18564:	str	r0, [sp, #48]	; 0x30
   18568:	str	r1, [sp, #44]	; 0x2c
   1856c:	b	18570 <__assert_fail@plt+0x7144>
   18570:	ldr	r0, [sp, #44]	; 0x2c
   18574:	ldr	r1, [sp, #48]	; 0x30
   18578:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1857c:	mvn	r2, r2
   18580:	subs	r1, r2, r1
   18584:	rscs	r0, r0, r2, asr #31
   18588:	bge	186dc <__assert_fail@plt+0x72b0>
   1858c:	b	186f0 <__assert_fail@plt+0x72c4>
   18590:	ldr	r0, [fp, #8]
   18594:	cmn	r0, #1
   18598:	bne	185dc <__assert_fail@plt+0x71b0>
   1859c:	b	185a0 <__assert_fail@plt+0x7174>
   185a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185a4:	mov	r1, #-2147483648	; 0x80000000
   185a8:	add	r1, r1, r0, asr #31
   185ac:	rsbs	r0, r0, #0
   185b0:	rscs	r1, r1, #0
   185b4:	blt	186dc <__assert_fail@plt+0x72b0>
   185b8:	b	186f0 <__assert_fail@plt+0x72c4>
   185bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185c0:	movw	r1, #0
   185c4:	cmp	r1, r0
   185c8:	bge	186f0 <__assert_fail@plt+0x72c4>
   185cc:	mov	r0, #0
   185d0:	cmp	r0, #0
   185d4:	bne	186dc <__assert_fail@plt+0x72b0>
   185d8:	b	186f0 <__assert_fail@plt+0x72c4>
   185dc:	ldr	r0, [fp, #8]
   185e0:	asr	r3, r0, #31
   185e4:	mov	r1, #0
   185e8:	mov	r2, #-2147483648	; 0x80000000
   185ec:	str	r0, [sp, #36]	; 0x24
   185f0:	mov	r0, r1
   185f4:	mov	r1, r2
   185f8:	ldr	r2, [sp, #36]	; 0x24
   185fc:	bl	1f354 <__assert_fail@plt+0xdf28>
   18600:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18604:	subs	r0, r0, r2
   18608:	sbcs	r1, r1, r2, asr #31
   1860c:	blt	186dc <__assert_fail@plt+0x72b0>
   18610:	b	186f0 <__assert_fail@plt+0x72c4>
   18614:	ldr	r0, [fp, #8]
   18618:	cmp	r0, #0
   1861c:	bne	18624 <__assert_fail@plt+0x71f8>
   18620:	b	186f0 <__assert_fail@plt+0x72c4>
   18624:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18628:	cmp	r0, #0
   1862c:	bge	186a4 <__assert_fail@plt+0x7278>
   18630:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18634:	cmn	r0, #1
   18638:	bne	1866c <__assert_fail@plt+0x7240>
   1863c:	b	18640 <__assert_fail@plt+0x7214>
   18640:	ldr	r0, [fp, #8]
   18644:	mov	r1, #-2147483648	; 0x80000000
   18648:	add	r1, r1, r0, asr #31
   1864c:	rsbs	r0, r0, #0
   18650:	rscs	r1, r1, #0
   18654:	blt	186dc <__assert_fail@plt+0x72b0>
   18658:	b	186f0 <__assert_fail@plt+0x72c4>
   1865c:	mov	r0, #0
   18660:	cmp	r0, #0
   18664:	bne	186dc <__assert_fail@plt+0x72b0>
   18668:	b	186f0 <__assert_fail@plt+0x72c4>
   1866c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18670:	asr	r3, r0, #31
   18674:	mov	r1, #0
   18678:	mov	r2, #-2147483648	; 0x80000000
   1867c:	str	r0, [sp, #32]
   18680:	mov	r0, r1
   18684:	mov	r1, r2
   18688:	ldr	r2, [sp, #32]
   1868c:	bl	1f354 <__assert_fail@plt+0xdf28>
   18690:	ldr	r2, [fp, #8]
   18694:	subs	r0, r0, r2
   18698:	sbcs	r1, r1, r2, asr #31
   1869c:	blt	186dc <__assert_fail@plt+0x72b0>
   186a0:	b	186f0 <__assert_fail@plt+0x72c4>
   186a4:	ldr	r0, [fp, #8]
   186a8:	asr	r3, r0, #31
   186ac:	mvn	r1, #0
   186b0:	mvn	r2, #-2147483648	; 0x80000000
   186b4:	str	r0, [sp, #28]
   186b8:	mov	r0, r1
   186bc:	mov	r1, r2
   186c0:	ldr	r2, [sp, #28]
   186c4:	bl	1f354 <__assert_fail@plt+0xdf28>
   186c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   186cc:	subs	r0, r0, r2
   186d0:	sbcs	r1, r1, r2, asr #31
   186d4:	bge	186f0 <__assert_fail@plt+0x72c4>
   186d8:	b	186dc <__assert_fail@plt+0x72b0>
   186dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186e0:	ldr	r1, [fp, #8]
   186e4:	mul	r0, r0, r1
   186e8:	str	r0, [fp, #-28]	; 0xffffffe4
   186ec:	b	18938 <__assert_fail@plt+0x750c>
   186f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186f4:	ldr	r1, [fp, #8]
   186f8:	mul	r0, r0, r1
   186fc:	str	r0, [fp, #-28]	; 0xffffffe4
   18700:	b	1893c <__assert_fail@plt+0x7510>
   18704:	ldr	r0, [fp, #8]
   18708:	cmp	r0, #0
   1870c:	bge	1885c <__assert_fail@plt+0x7430>
   18710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18714:	cmp	r0, #0
   18718:	bge	187e4 <__assert_fail@plt+0x73b8>
   1871c:	b	1875c <__assert_fail@plt+0x7330>
   18720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18724:	ldr	r1, [fp, #8]
   18728:	asr	r3, r1, #31
   1872c:	mvn	r2, #0
   18730:	str	r0, [sp, #24]
   18734:	mov	r0, r2
   18738:	str	r1, [sp, #20]
   1873c:	mov	r1, r2
   18740:	ldr	r2, [sp, #20]
   18744:	bl	1f428 <__assert_fail@plt+0xdffc>
   18748:	ldr	r2, [sp, #24]
   1874c:	subs	r0, r2, r0
   18750:	rscs	r1, r1, r2, asr #31
   18754:	bcc	18910 <__assert_fail@plt+0x74e4>
   18758:	b	18924 <__assert_fail@plt+0x74f8>
   1875c:	b	18760 <__assert_fail@plt+0x7334>
   18760:	ldr	r0, [pc, #512]	; 18968 <__assert_fail@plt+0x753c>
   18764:	ldr	r1, [fp, #8]
   18768:	cmp	r1, r0
   1876c:	blt	18784 <__assert_fail@plt+0x7358>
   18770:	b	18798 <__assert_fail@plt+0x736c>
   18774:	ldr	r0, [fp, #8]
   18778:	movw	r1, #0
   1877c:	cmp	r1, r0
   18780:	bge	18798 <__assert_fail@plt+0x736c>
   18784:	mov	r0, #1
   18788:	mvn	r1, #0
   1878c:	str	r1, [sp, #16]
   18790:	str	r0, [sp, #12]
   18794:	b	187c4 <__assert_fail@plt+0x7398>
   18798:	ldr	r0, [fp, #8]
   1879c:	rsb	r0, r0, #0
   187a0:	asr	r3, r0, #31
   187a4:	mvn	r1, #0
   187a8:	str	r0, [sp, #8]
   187ac:	mov	r0, r1
   187b0:	ldr	r2, [sp, #8]
   187b4:	bl	1f428 <__assert_fail@plt+0xdffc>
   187b8:	str	r0, [sp, #16]
   187bc:	str	r1, [sp, #12]
   187c0:	b	187c4 <__assert_fail@plt+0x7398>
   187c4:	ldr	r0, [sp, #12]
   187c8:	ldr	r1, [sp, #16]
   187cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   187d0:	mvn	r2, r2
   187d4:	subs	r1, r2, r1
   187d8:	rscs	r0, r0, r2, asr #31
   187dc:	bcs	18910 <__assert_fail@plt+0x74e4>
   187e0:	b	18924 <__assert_fail@plt+0x74f8>
   187e4:	b	187e8 <__assert_fail@plt+0x73bc>
   187e8:	b	18840 <__assert_fail@plt+0x7414>
   187ec:	b	18840 <__assert_fail@plt+0x7414>
   187f0:	ldr	r0, [fp, #8]
   187f4:	cmn	r0, #1
   187f8:	bne	18840 <__assert_fail@plt+0x7414>
   187fc:	b	18800 <__assert_fail@plt+0x73d4>
   18800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18804:	add	r0, r0, #0
   18808:	movw	r1, #0
   1880c:	cmp	r1, r0
   18810:	blt	18910 <__assert_fail@plt+0x74e4>
   18814:	b	18924 <__assert_fail@plt+0x74f8>
   18818:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1881c:	movw	r1, #0
   18820:	cmp	r1, r0
   18824:	bge	18924 <__assert_fail@plt+0x74f8>
   18828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1882c:	sub	r0, r0, #1
   18830:	mvn	r1, #0
   18834:	cmp	r1, r0
   18838:	blt	18910 <__assert_fail@plt+0x74e4>
   1883c:	b	18924 <__assert_fail@plt+0x74f8>
   18840:	ldr	r0, [fp, #8]
   18844:	movw	r1, #0
   18848:	sdiv	r0, r1, r0
   1884c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18850:	cmp	r0, r1
   18854:	blt	18910 <__assert_fail@plt+0x74e4>
   18858:	b	18924 <__assert_fail@plt+0x74f8>
   1885c:	ldr	r0, [fp, #8]
   18860:	cmp	r0, #0
   18864:	bne	1886c <__assert_fail@plt+0x7440>
   18868:	b	18924 <__assert_fail@plt+0x74f8>
   1886c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18870:	cmp	r0, #0
   18874:	bge	188e0 <__assert_fail@plt+0x74b4>
   18878:	b	1887c <__assert_fail@plt+0x7450>
   1887c:	b	188c4 <__assert_fail@plt+0x7498>
   18880:	b	188c4 <__assert_fail@plt+0x7498>
   18884:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18888:	cmn	r0, #1
   1888c:	bne	188c4 <__assert_fail@plt+0x7498>
   18890:	b	18894 <__assert_fail@plt+0x7468>
   18894:	ldr	r0, [fp, #8]
   18898:	add	r0, r0, #0
   1889c:	movw	r1, #0
   188a0:	cmp	r1, r0
   188a4:	blt	18910 <__assert_fail@plt+0x74e4>
   188a8:	b	18924 <__assert_fail@plt+0x74f8>
   188ac:	ldr	r0, [fp, #8]
   188b0:	sub	r0, r0, #1
   188b4:	mvn	r1, #0
   188b8:	cmp	r1, r0
   188bc:	blt	18910 <__assert_fail@plt+0x74e4>
   188c0:	b	18924 <__assert_fail@plt+0x74f8>
   188c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188c8:	movw	r1, #0
   188cc:	sdiv	r0, r1, r0
   188d0:	ldr	r1, [fp, #8]
   188d4:	cmp	r0, r1
   188d8:	blt	18910 <__assert_fail@plt+0x74e4>
   188dc:	b	18924 <__assert_fail@plt+0x74f8>
   188e0:	ldr	r0, [fp, #8]
   188e4:	asr	r3, r0, #31
   188e8:	mvn	r1, #0
   188ec:	str	r0, [sp, #4]
   188f0:	mov	r0, r1
   188f4:	ldr	r2, [sp, #4]
   188f8:	bl	1f428 <__assert_fail@plt+0xdffc>
   188fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18900:	subs	r0, r0, r2
   18904:	sbcs	r1, r1, r2, asr #31
   18908:	bcs	18924 <__assert_fail@plt+0x74f8>
   1890c:	b	18910 <__assert_fail@plt+0x74e4>
   18910:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18914:	ldr	r1, [fp, #8]
   18918:	mul	r0, r0, r1
   1891c:	str	r0, [fp, #-28]	; 0xffffffe4
   18920:	b	18938 <__assert_fail@plt+0x750c>
   18924:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18928:	ldr	r1, [fp, #8]
   1892c:	mul	r0, r0, r1
   18930:	str	r0, [fp, #-28]	; 0xffffffe4
   18934:	b	1893c <__assert_fail@plt+0x7510>
   18938:	bl	18b14 <__assert_fail@plt+0x76e8>
   1893c:	ldr	r0, [fp, #-4]
   18940:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18944:	bl	15e74 <__assert_fail@plt+0x4a48>
   18948:	str	r0, [fp, #-4]
   1894c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18950:	ldr	r1, [fp, #-8]
   18954:	str	r0, [r1]
   18958:	ldr	r0, [fp, #-4]
   1895c:	mov	sp, fp
   18960:	pop	{fp, pc}
   18964:	svcvc	0x00ffffff
   18968:	andhi	r0, r0, r1
   1896c:	andhi	r0, r0, r0
   18970:			; <UNDEFINED> instruction: 0xffff8000
   18974:	push	{fp, lr}
   18978:	mov	fp, sp
   1897c:	sub	sp, sp, #8
   18980:	str	r0, [sp, #4]
   18984:	ldr	r0, [sp, #4]
   18988:	movw	r1, #1
   1898c:	bl	18998 <__assert_fail@plt+0x756c>
   18990:	mov	sp, fp
   18994:	pop	{fp, pc}
   18998:	push	{fp, lr}
   1899c:	mov	fp, sp
   189a0:	sub	sp, sp, #8
   189a4:	str	r0, [sp, #4]
   189a8:	str	r1, [sp]
   189ac:	ldr	r0, [sp, #4]
   189b0:	ldr	r1, [sp]
   189b4:	bl	1c7dc <__assert_fail@plt+0xb3b0>
   189b8:	bl	15e00 <__assert_fail@plt+0x49d4>
   189bc:	mov	sp, fp
   189c0:	pop	{fp, pc}
   189c4:	push	{fp, lr}
   189c8:	mov	fp, sp
   189cc:	sub	sp, sp, #8
   189d0:	str	r0, [sp, #4]
   189d4:	ldr	r0, [sp, #4]
   189d8:	movw	r1, #1
   189dc:	bl	189e8 <__assert_fail@plt+0x75bc>
   189e0:	mov	sp, fp
   189e4:	pop	{fp, pc}
   189e8:	push	{fp, lr}
   189ec:	mov	fp, sp
   189f0:	sub	sp, sp, #8
   189f4:	str	r0, [sp, #4]
   189f8:	str	r1, [sp]
   189fc:	ldr	r0, [sp, #4]
   18a00:	ldr	r1, [sp]
   18a04:	bl	1ce78 <__assert_fail@plt+0xba4c>
   18a08:	bl	15e00 <__assert_fail@plt+0x49d4>
   18a0c:	mov	sp, fp
   18a10:	pop	{fp, pc}
   18a14:	push	{fp, lr}
   18a18:	mov	fp, sp
   18a1c:	sub	sp, sp, #16
   18a20:	str	r0, [fp, #-4]
   18a24:	str	r1, [sp, #8]
   18a28:	ldr	r0, [sp, #8]
   18a2c:	bl	15ddc <__assert_fail@plt+0x49b0>
   18a30:	ldr	r1, [fp, #-4]
   18a34:	ldr	r2, [sp, #8]
   18a38:	str	r0, [sp, #4]
   18a3c:	bl	111a4 <memcpy@plt>
   18a40:	ldr	r0, [sp, #4]
   18a44:	mov	sp, fp
   18a48:	pop	{fp, pc}
   18a4c:	push	{fp, lr}
   18a50:	mov	fp, sp
   18a54:	sub	sp, sp, #16
   18a58:	str	r0, [fp, #-4]
   18a5c:	str	r1, [sp, #8]
   18a60:	ldr	r0, [sp, #8]
   18a64:	bl	15e30 <__assert_fail@plt+0x4a04>
   18a68:	ldr	r1, [fp, #-4]
   18a6c:	ldr	r2, [sp, #8]
   18a70:	str	r0, [sp, #4]
   18a74:	bl	111a4 <memcpy@plt>
   18a78:	ldr	r0, [sp, #4]
   18a7c:	mov	sp, fp
   18a80:	pop	{fp, pc}
   18a84:	push	{fp, lr}
   18a88:	mov	fp, sp
   18a8c:	sub	sp, sp, #16
   18a90:	str	r0, [fp, #-4]
   18a94:	str	r1, [sp, #8]
   18a98:	ldr	r0, [sp, #8]
   18a9c:	add	r0, r0, #1
   18aa0:	bl	15e30 <__assert_fail@plt+0x4a04>
   18aa4:	str	r0, [sp, #4]
   18aa8:	ldr	r0, [sp, #4]
   18aac:	ldr	r1, [sp, #8]
   18ab0:	add	r0, r0, r1
   18ab4:	movw	r1, #0
   18ab8:	strb	r1, [r0]
   18abc:	ldr	r0, [sp, #4]
   18ac0:	ldr	r1, [fp, #-4]
   18ac4:	ldr	r2, [sp, #8]
   18ac8:	str	r0, [sp]
   18acc:	bl	111a4 <memcpy@plt>
   18ad0:	ldr	r0, [sp]
   18ad4:	mov	sp, fp
   18ad8:	pop	{fp, pc}
   18adc:	push	{fp, lr}
   18ae0:	mov	fp, sp
   18ae4:	sub	sp, sp, #8
   18ae8:	str	r0, [sp, #4]
   18aec:	ldr	r0, [sp, #4]
   18af0:	ldr	r1, [sp, #4]
   18af4:	str	r0, [sp]
   18af8:	mov	r0, r1
   18afc:	bl	112e8 <strlen@plt>
   18b00:	add	r1, r0, #1
   18b04:	ldr	r0, [sp]
   18b08:	bl	18a14 <__assert_fail@plt+0x75e8>
   18b0c:	mov	sp, fp
   18b10:	pop	{fp, pc}
   18b14:	push	{fp, lr}
   18b18:	mov	fp, sp
   18b1c:	sub	sp, sp, #8
   18b20:	movw	r0, #4388	; 0x1124
   18b24:	movt	r0, #3
   18b28:	ldr	r0, [r0]
   18b2c:	movw	r1, #68	; 0x44
   18b30:	movt	r1, #2
   18b34:	str	r0, [sp, #4]
   18b38:	mov	r0, r1
   18b3c:	bl	112d0 <gettext@plt>
   18b40:	ldr	r1, [sp, #4]
   18b44:	str	r0, [sp]
   18b48:	mov	r0, r1
   18b4c:	movw	r1, #0
   18b50:	movw	r2, #64511	; 0xfbff
   18b54:	movt	r2, #1
   18b58:	ldr	r3, [sp]
   18b5c:	bl	11258 <error@plt>
   18b60:	bl	11408 <abort@plt>
   18b64:	push	{fp, lr}
   18b68:	mov	fp, sp
   18b6c:	sub	sp, sp, #16
   18b70:	str	r0, [fp, #-4]
   18b74:	str	r1, [sp, #8]
   18b78:	str	r2, [sp, #4]
   18b7c:	ldr	r0, [fp, #-4]
   18b80:	ldr	r1, [sp, #8]
   18b84:	ldr	r2, [sp, #4]
   18b88:	bl	1d1c4 <__assert_fail@plt+0xbd98>
   18b8c:	str	r0, [sp]
   18b90:	ldr	r0, [sp]
   18b94:	cmn	r0, #1
   18b98:	bne	18bb0 <__assert_fail@plt+0x7784>
   18b9c:	bl	1130c <__errno_location@plt>
   18ba0:	ldr	r0, [r0]
   18ba4:	cmp	r0, #12
   18ba8:	bne	18bb0 <__assert_fail@plt+0x7784>
   18bac:	bl	18b14 <__assert_fail@plt+0x76e8>
   18bb0:	ldr	r0, [sp]
   18bb4:	mov	sp, fp
   18bb8:	pop	{fp, pc}
   18bbc:	push	{fp, lr}
   18bc0:	mov	fp, sp
   18bc4:	sub	sp, sp, #72	; 0x48
   18bc8:	ldr	ip, [fp, #8]
   18bcc:	str	r0, [fp, #-8]
   18bd0:	str	r1, [fp, #-12]
   18bd4:	str	r2, [fp, #-16]
   18bd8:	str	r3, [fp, #-20]	; 0xffffffec
   18bdc:	movw	r0, #0
   18be0:	str	r0, [sp, #36]	; 0x24
   18be4:	ldr	r1, [fp, #-16]
   18be8:	cmp	r0, r1
   18bec:	bgt	18c00 <__assert_fail@plt+0x77d4>
   18bf0:	ldr	r0, [fp, #-16]
   18bf4:	cmp	r0, #36	; 0x24
   18bf8:	bgt	18c00 <__assert_fail@plt+0x77d4>
   18bfc:	b	18c20 <__assert_fail@plt+0x77f4>
   18c00:	movw	r0, #85	; 0x55
   18c04:	movt	r0, #2
   18c08:	movw	r1, #123	; 0x7b
   18c0c:	movt	r1, #2
   18c10:	movw	r2, #85	; 0x55
   18c14:	movw	r3, #139	; 0x8b
   18c18:	movt	r3, #2
   18c1c:	bl	1142c <__assert_fail@plt>
   18c20:	ldr	r0, [fp, #-12]
   18c24:	movw	r1, #0
   18c28:	cmp	r0, r1
   18c2c:	beq	18c3c <__assert_fail@plt+0x7810>
   18c30:	ldr	r0, [fp, #-12]
   18c34:	str	r0, [sp, #12]
   18c38:	b	18c48 <__assert_fail@plt+0x781c>
   18c3c:	sub	r0, fp, #24
   18c40:	str	r0, [sp, #12]
   18c44:	b	18c48 <__assert_fail@plt+0x781c>
   18c48:	ldr	r0, [sp, #12]
   18c4c:	str	r0, [fp, #-28]	; 0xffffffe4
   18c50:	bl	1130c <__errno_location@plt>
   18c54:	movw	r1, #0
   18c58:	str	r1, [r0]
   18c5c:	ldr	r0, [fp, #-8]
   18c60:	str	r0, [sp, #32]
   18c64:	ldr	r0, [sp, #32]
   18c68:	ldrb	r0, [r0]
   18c6c:	strb	r0, [sp, #31]
   18c70:	bl	112b8 <__ctype_b_loc@plt>
   18c74:	ldr	r0, [r0]
   18c78:	ldrb	r1, [sp, #31]
   18c7c:	mov	r2, r1
   18c80:	add	r0, r0, r1, lsl #1
   18c84:	ldrh	r0, [r0]
   18c88:	and	r0, r0, #8192	; 0x2000
   18c8c:	cmp	r0, #0
   18c90:	beq	18cac <__assert_fail@plt+0x7880>
   18c94:	ldr	r0, [sp, #32]
   18c98:	add	r1, r0, #1
   18c9c:	str	r1, [sp, #32]
   18ca0:	ldrb	r0, [r0, #1]
   18ca4:	strb	r0, [sp, #31]
   18ca8:	b	18c70 <__assert_fail@plt+0x7844>
   18cac:	ldrb	r0, [sp, #31]
   18cb0:	cmp	r0, #45	; 0x2d
   18cb4:	bne	18cc4 <__assert_fail@plt+0x7898>
   18cb8:	movw	r0, #4
   18cbc:	str	r0, [fp, #-4]
   18cc0:	b	19214 <__assert_fail@plt+0x7de8>
   18cc4:	ldr	r0, [fp, #-8]
   18cc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18ccc:	ldr	r2, [fp, #-16]
   18cd0:	bl	112dc <strtoul@plt>
   18cd4:	str	r0, [fp, #-32]	; 0xffffffe0
   18cd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18cdc:	ldr	r0, [r0]
   18ce0:	ldr	r1, [fp, #-8]
   18ce4:	cmp	r0, r1
   18ce8:	bne	18d4c <__assert_fail@plt+0x7920>
   18cec:	ldr	r0, [fp, #8]
   18cf0:	movw	r1, #0
   18cf4:	cmp	r0, r1
   18cf8:	beq	18d3c <__assert_fail@plt+0x7910>
   18cfc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18d00:	ldr	r0, [r0]
   18d04:	ldrb	r0, [r0]
   18d08:	cmp	r0, #0
   18d0c:	beq	18d3c <__assert_fail@plt+0x7910>
   18d10:	ldr	r0, [fp, #8]
   18d14:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18d18:	ldr	r1, [r1]
   18d1c:	ldrb	r1, [r1]
   18d20:	bl	112f4 <strchr@plt>
   18d24:	movw	r1, #0
   18d28:	cmp	r0, r1
   18d2c:	beq	18d3c <__assert_fail@plt+0x7910>
   18d30:	movw	r0, #1
   18d34:	str	r0, [fp, #-32]	; 0xffffffe0
   18d38:	b	18d48 <__assert_fail@plt+0x791c>
   18d3c:	movw	r0, #4
   18d40:	str	r0, [fp, #-4]
   18d44:	b	19214 <__assert_fail@plt+0x7de8>
   18d48:	b	18d84 <__assert_fail@plt+0x7958>
   18d4c:	bl	1130c <__errno_location@plt>
   18d50:	ldr	r0, [r0]
   18d54:	cmp	r0, #0
   18d58:	beq	18d80 <__assert_fail@plt+0x7954>
   18d5c:	bl	1130c <__errno_location@plt>
   18d60:	ldr	r0, [r0]
   18d64:	cmp	r0, #34	; 0x22
   18d68:	beq	18d78 <__assert_fail@plt+0x794c>
   18d6c:	movw	r0, #4
   18d70:	str	r0, [fp, #-4]
   18d74:	b	19214 <__assert_fail@plt+0x7de8>
   18d78:	movw	r0, #1
   18d7c:	str	r0, [sp, #36]	; 0x24
   18d80:	b	18d84 <__assert_fail@plt+0x7958>
   18d84:	ldr	r0, [fp, #8]
   18d88:	movw	r1, #0
   18d8c:	cmp	r0, r1
   18d90:	bne	18dac <__assert_fail@plt+0x7980>
   18d94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18d98:	ldr	r1, [fp, #-20]	; 0xffffffec
   18d9c:	str	r0, [r1]
   18da0:	ldr	r0, [sp, #36]	; 0x24
   18da4:	str	r0, [fp, #-4]
   18da8:	b	19214 <__assert_fail@plt+0x7de8>
   18dac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18db0:	ldr	r0, [r0]
   18db4:	ldrb	r0, [r0]
   18db8:	cmp	r0, #0
   18dbc:	beq	19200 <__assert_fail@plt+0x7dd4>
   18dc0:	movw	r0, #1024	; 0x400
   18dc4:	str	r0, [sp, #24]
   18dc8:	movw	r0, #1
   18dcc:	str	r0, [sp, #20]
   18dd0:	ldr	r0, [fp, #8]
   18dd4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18dd8:	ldr	r1, [r1]
   18ddc:	ldrb	r1, [r1]
   18de0:	bl	112f4 <strchr@plt>
   18de4:	movw	r1, #0
   18de8:	cmp	r0, r1
   18dec:	bne	18e0c <__assert_fail@plt+0x79e0>
   18df0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18df4:	ldr	r1, [fp, #-20]	; 0xffffffec
   18df8:	str	r0, [r1]
   18dfc:	ldr	r0, [sp, #36]	; 0x24
   18e00:	orr	r0, r0, #2
   18e04:	str	r0, [fp, #-4]
   18e08:	b	19214 <__assert_fail@plt+0x7de8>
   18e0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18e10:	ldr	r0, [r0]
   18e14:	ldrb	r0, [r0]
   18e18:	sub	r0, r0, #69	; 0x45
   18e1c:	cmp	r0, #47	; 0x2f
   18e20:	str	r0, [sp, #8]
   18e24:	bhi	18f90 <__assert_fail@plt+0x7b64>
   18e28:	add	r0, pc, #8
   18e2c:	ldr	r1, [sp, #8]
   18e30:	ldr	r0, [r0, r1, lsl #2]
   18e34:	mov	pc, r0
   18e38:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18e3c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18e40:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18e44:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18e48:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18e4c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18e50:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18e54:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18e58:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18e5c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18e60:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18e64:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18e68:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18e6c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18e70:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18e74:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18e78:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18e7c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18e80:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18e84:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18e88:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18e8c:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18e90:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18e94:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18e98:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18e9c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18ea0:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18ea4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18ea8:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18eac:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18eb0:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18eb4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18eb8:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18ebc:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18ec0:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18ec4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18ec8:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18ecc:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18ed0:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18ed4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18ed8:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18edc:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18ee0:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18ee4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18ee8:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18eec:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18ef0:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18ef4:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18ef8:	ldr	r0, [fp, #8]
   18efc:	movw	r1, #48	; 0x30
   18f00:	bl	112f4 <strchr@plt>
   18f04:	movw	r1, #0
   18f08:	cmp	r0, r1
   18f0c:	beq	18f8c <__assert_fail@plt+0x7b60>
   18f10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18f14:	ldr	r0, [r0]
   18f18:	ldrb	r0, [r0, #1]
   18f1c:	mov	r1, r0
   18f20:	cmp	r0, #66	; 0x42
   18f24:	str	r1, [sp, #4]
   18f28:	beq	18f74 <__assert_fail@plt+0x7b48>
   18f2c:	b	18f30 <__assert_fail@plt+0x7b04>
   18f30:	ldr	r0, [sp, #4]
   18f34:	cmp	r0, #68	; 0x44
   18f38:	beq	18f74 <__assert_fail@plt+0x7b48>
   18f3c:	b	18f40 <__assert_fail@plt+0x7b14>
   18f40:	ldr	r0, [sp, #4]
   18f44:	cmp	r0, #105	; 0x69
   18f48:	bne	18f88 <__assert_fail@plt+0x7b5c>
   18f4c:	b	18f50 <__assert_fail@plt+0x7b24>
   18f50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18f54:	ldr	r0, [r0]
   18f58:	ldrb	r0, [r0, #2]
   18f5c:	cmp	r0, #66	; 0x42
   18f60:	bne	18f70 <__assert_fail@plt+0x7b44>
   18f64:	ldr	r0, [sp, #20]
   18f68:	add	r0, r0, #2
   18f6c:	str	r0, [sp, #20]
   18f70:	b	18f88 <__assert_fail@plt+0x7b5c>
   18f74:	movw	r0, #1000	; 0x3e8
   18f78:	str	r0, [sp, #24]
   18f7c:	ldr	r0, [sp, #20]
   18f80:	add	r0, r0, #1
   18f84:	str	r0, [sp, #20]
   18f88:	b	18f8c <__assert_fail@plt+0x7b60>
   18f8c:	b	18f90 <__assert_fail@plt+0x7b64>
   18f90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18f94:	ldr	r0, [r0]
   18f98:	ldrb	r0, [r0]
   18f9c:	sub	r0, r0, #66	; 0x42
   18fa0:	cmp	r0, #53	; 0x35
   18fa4:	str	r0, [sp]
   18fa8:	bhi	1919c <__assert_fail@plt+0x7d70>
   18fac:	add	r0, pc, #8
   18fb0:	ldr	r1, [sp]
   18fb4:	ldr	r0, [r0, r1, lsl #2]
   18fb8:	mov	pc, r0
   18fbc:	andeq	r9, r1, r8, lsr #1
   18fc0:	muleq	r1, ip, r1
   18fc4:	muleq	r1, ip, r1
   18fc8:	andeq	r9, r1, r8, asr #1
   18fcc:	muleq	r1, ip, r1
   18fd0:	andeq	r9, r1, r0, ror #1
   18fd4:	muleq	r1, ip, r1
   18fd8:	muleq	r1, ip, r1
   18fdc:	muleq	r1, ip, r1
   18fe0:	strdeq	r9, [r1], -r8
   18fe4:	muleq	r1, ip, r1
   18fe8:	andeq	r9, r1, r0, lsl r1
   18fec:	muleq	r1, ip, r1
   18ff0:	muleq	r1, ip, r1
   18ff4:	andeq	r9, r1, r8, lsr #2
   18ff8:	muleq	r1, ip, r1
   18ffc:	muleq	r1, ip, r1
   19000:	muleq	r1, ip, r1
   19004:	andeq	r9, r1, r0, asr #2
   19008:	muleq	r1, ip, r1
   1900c:	muleq	r1, ip, r1
   19010:	muleq	r1, ip, r1
   19014:	muleq	r1, ip, r1
   19018:	andeq	r9, r1, ip, ror #2
   1901c:	andeq	r9, r1, r4, lsl #3
   19020:	muleq	r1, ip, r1
   19024:	muleq	r1, ip, r1
   19028:	muleq	r1, ip, r1
   1902c:	muleq	r1, ip, r1
   19030:	muleq	r1, ip, r1
   19034:	muleq	r1, ip, r1
   19038:	muleq	r1, ip, r1
   1903c:	muleq	r1, r4, r0
   19040:	strheq	r9, [r1], -ip
   19044:	muleq	r1, ip, r1
   19048:	muleq	r1, ip, r1
   1904c:	muleq	r1, ip, r1
   19050:	andeq	r9, r1, r0, ror #1
   19054:	muleq	r1, ip, r1
   19058:	muleq	r1, ip, r1
   1905c:	muleq	r1, ip, r1
   19060:	strdeq	r9, [r1], -r8
   19064:	muleq	r1, ip, r1
   19068:	andeq	r9, r1, r0, lsl r1
   1906c:	muleq	r1, ip, r1
   19070:	muleq	r1, ip, r1
   19074:	muleq	r1, ip, r1
   19078:	muleq	r1, ip, r1
   1907c:	muleq	r1, ip, r1
   19080:	muleq	r1, ip, r1
   19084:	andeq	r9, r1, r0, asr #2
   19088:	muleq	r1, ip, r1
   1908c:	muleq	r1, ip, r1
   19090:	andeq	r9, r1, r8, asr r1
   19094:	sub	r0, fp, #32
   19098:	movw	r1, #512	; 0x200
   1909c:	bl	19220 <__assert_fail@plt+0x7df4>
   190a0:	str	r0, [sp, #16]
   190a4:	b	191b8 <__assert_fail@plt+0x7d8c>
   190a8:	sub	r0, fp, #32
   190ac:	movw	r1, #1024	; 0x400
   190b0:	bl	19220 <__assert_fail@plt+0x7df4>
   190b4:	str	r0, [sp, #16]
   190b8:	b	191b8 <__assert_fail@plt+0x7d8c>
   190bc:	movw	r0, #0
   190c0:	str	r0, [sp, #16]
   190c4:	b	191b8 <__assert_fail@plt+0x7d8c>
   190c8:	ldr	r1, [sp, #24]
   190cc:	sub	r0, fp, #32
   190d0:	movw	r2, #6
   190d4:	bl	1a814 <__assert_fail@plt+0x93e8>
   190d8:	str	r0, [sp, #16]
   190dc:	b	191b8 <__assert_fail@plt+0x7d8c>
   190e0:	ldr	r1, [sp, #24]
   190e4:	sub	r0, fp, #32
   190e8:	movw	r2, #3
   190ec:	bl	1a814 <__assert_fail@plt+0x93e8>
   190f0:	str	r0, [sp, #16]
   190f4:	b	191b8 <__assert_fail@plt+0x7d8c>
   190f8:	ldr	r1, [sp, #24]
   190fc:	sub	r0, fp, #32
   19100:	movw	r2, #1
   19104:	bl	1a814 <__assert_fail@plt+0x93e8>
   19108:	str	r0, [sp, #16]
   1910c:	b	191b8 <__assert_fail@plt+0x7d8c>
   19110:	ldr	r1, [sp, #24]
   19114:	sub	r0, fp, #32
   19118:	movw	r2, #2
   1911c:	bl	1a814 <__assert_fail@plt+0x93e8>
   19120:	str	r0, [sp, #16]
   19124:	b	191b8 <__assert_fail@plt+0x7d8c>
   19128:	ldr	r1, [sp, #24]
   1912c:	sub	r0, fp, #32
   19130:	movw	r2, #5
   19134:	bl	1a814 <__assert_fail@plt+0x93e8>
   19138:	str	r0, [sp, #16]
   1913c:	b	191b8 <__assert_fail@plt+0x7d8c>
   19140:	ldr	r1, [sp, #24]
   19144:	sub	r0, fp, #32
   19148:	movw	r2, #4
   1914c:	bl	1a814 <__assert_fail@plt+0x93e8>
   19150:	str	r0, [sp, #16]
   19154:	b	191b8 <__assert_fail@plt+0x7d8c>
   19158:	sub	r0, fp, #32
   1915c:	movw	r1, #2
   19160:	bl	19220 <__assert_fail@plt+0x7df4>
   19164:	str	r0, [sp, #16]
   19168:	b	191b8 <__assert_fail@plt+0x7d8c>
   1916c:	ldr	r1, [sp, #24]
   19170:	sub	r0, fp, #32
   19174:	movw	r2, #8
   19178:	bl	1a814 <__assert_fail@plt+0x93e8>
   1917c:	str	r0, [sp, #16]
   19180:	b	191b8 <__assert_fail@plt+0x7d8c>
   19184:	ldr	r1, [sp, #24]
   19188:	sub	r0, fp, #32
   1918c:	movw	r2, #7
   19190:	bl	1a814 <__assert_fail@plt+0x93e8>
   19194:	str	r0, [sp, #16]
   19198:	b	191b8 <__assert_fail@plt+0x7d8c>
   1919c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   191a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   191a4:	str	r0, [r1]
   191a8:	ldr	r0, [sp, #36]	; 0x24
   191ac:	orr	r0, r0, #2
   191b0:	str	r0, [fp, #-4]
   191b4:	b	19214 <__assert_fail@plt+0x7de8>
   191b8:	ldr	r0, [sp, #16]
   191bc:	ldr	r1, [sp, #36]	; 0x24
   191c0:	orr	r0, r1, r0
   191c4:	str	r0, [sp, #36]	; 0x24
   191c8:	ldr	r0, [sp, #20]
   191cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   191d0:	ldr	r2, [r1]
   191d4:	add	r0, r2, r0
   191d8:	str	r0, [r1]
   191dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   191e0:	ldr	r0, [r0]
   191e4:	ldrsb	r0, [r0]
   191e8:	cmp	r0, #0
   191ec:	beq	191fc <__assert_fail@plt+0x7dd0>
   191f0:	ldr	r0, [sp, #36]	; 0x24
   191f4:	orr	r0, r0, #2
   191f8:	str	r0, [sp, #36]	; 0x24
   191fc:	b	19200 <__assert_fail@plt+0x7dd4>
   19200:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19204:	ldr	r1, [fp, #-20]	; 0xffffffec
   19208:	str	r0, [r1]
   1920c:	ldr	r0, [sp, #36]	; 0x24
   19210:	str	r0, [fp, #-4]
   19214:	ldr	r0, [fp, #-4]
   19218:	mov	sp, fp
   1921c:	pop	{fp, pc}
   19220:	push	{fp, lr}
   19224:	mov	fp, sp
   19228:	sub	sp, sp, #104	; 0x68
   1922c:	str	r0, [fp, #-8]
   19230:	str	r1, [fp, #-12]
   19234:	b	19668 <__assert_fail@plt+0x823c>
   19238:	b	19450 <__assert_fail@plt+0x8024>
   1923c:	ldr	r0, [fp, #-12]
   19240:	cmp	r0, #0
   19244:	bge	19374 <__assert_fail@plt+0x7f48>
   19248:	ldr	r0, [fp, #-8]
   1924c:	ldr	r0, [r0]
   19250:	cmp	r0, #0
   19254:	bcs	192e8 <__assert_fail@plt+0x7ebc>
   19258:	b	1925c <__assert_fail@plt+0x7e30>
   1925c:	ldr	r0, [fp, #-8]
   19260:	ldr	r0, [r0]
   19264:	ldr	r1, [fp, #-12]
   19268:	movw	r2, #127	; 0x7f
   1926c:	sdiv	r1, r2, r1
   19270:	cmp	r0, r1
   19274:	bcc	19418 <__assert_fail@plt+0x7fec>
   19278:	b	19434 <__assert_fail@plt+0x8008>
   1927c:	b	19280 <__assert_fail@plt+0x7e54>
   19280:	ldr	r0, [pc, #4072]	; 1a270 <__assert_fail@plt+0x8e44>
   19284:	ldr	r1, [fp, #-12]
   19288:	cmp	r1, r0
   1928c:	blt	192a4 <__assert_fail@plt+0x7e78>
   19290:	b	192b0 <__assert_fail@plt+0x7e84>
   19294:	ldr	r0, [fp, #-12]
   19298:	movw	r1, #0
   1929c:	cmp	r1, r0
   192a0:	bge	192b0 <__assert_fail@plt+0x7e84>
   192a4:	movw	r0, #0
   192a8:	str	r0, [fp, #-20]	; 0xffffffec
   192ac:	b	192c8 <__assert_fail@plt+0x7e9c>
   192b0:	ldr	r0, [fp, #-12]
   192b4:	movw	r1, #0
   192b8:	sub	r0, r1, r0
   192bc:	movw	r1, #127	; 0x7f
   192c0:	sdiv	r0, r1, r0
   192c4:	str	r0, [fp, #-20]	; 0xffffffec
   192c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   192cc:	ldr	r1, [fp, #-8]
   192d0:	ldr	r1, [r1]
   192d4:	mvn	r2, #0
   192d8:	sub	r1, r2, r1
   192dc:	cmp	r0, r1
   192e0:	bls	19418 <__assert_fail@plt+0x7fec>
   192e4:	b	19434 <__assert_fail@plt+0x8008>
   192e8:	b	192ec <__assert_fail@plt+0x7ec0>
   192ec:	b	19354 <__assert_fail@plt+0x7f28>
   192f0:	b	19354 <__assert_fail@plt+0x7f28>
   192f4:	ldr	r0, [fp, #-12]
   192f8:	cmn	r0, #1
   192fc:	bne	19354 <__assert_fail@plt+0x7f28>
   19300:	b	19324 <__assert_fail@plt+0x7ef8>
   19304:	ldr	r0, [fp, #-8]
   19308:	ldr	r0, [r0]
   1930c:	mvn	r1, #127	; 0x7f
   19310:	add	r0, r0, r1
   19314:	movw	r1, #0
   19318:	cmp	r1, r0
   1931c:	bcc	19418 <__assert_fail@plt+0x7fec>
   19320:	b	19434 <__assert_fail@plt+0x8008>
   19324:	ldr	r0, [fp, #-8]
   19328:	ldr	r0, [r0]
   1932c:	movw	r1, #0
   19330:	cmp	r1, r0
   19334:	bcs	19434 <__assert_fail@plt+0x8008>
   19338:	ldr	r0, [fp, #-8]
   1933c:	ldr	r0, [r0]
   19340:	sub	r0, r0, #1
   19344:	movw	r1, #127	; 0x7f
   19348:	cmp	r1, r0
   1934c:	bcc	19418 <__assert_fail@plt+0x7fec>
   19350:	b	19434 <__assert_fail@plt+0x8008>
   19354:	ldr	r0, [fp, #-12]
   19358:	mvn	r1, #127	; 0x7f
   1935c:	sdiv	r0, r1, r0
   19360:	ldr	r1, [fp, #-8]
   19364:	ldr	r1, [r1]
   19368:	cmp	r0, r1
   1936c:	bcc	19418 <__assert_fail@plt+0x7fec>
   19370:	b	19434 <__assert_fail@plt+0x8008>
   19374:	ldr	r0, [fp, #-12]
   19378:	cmp	r0, #0
   1937c:	bne	19384 <__assert_fail@plt+0x7f58>
   19380:	b	19434 <__assert_fail@plt+0x8008>
   19384:	ldr	r0, [fp, #-8]
   19388:	ldr	r0, [r0]
   1938c:	cmp	r0, #0
   19390:	bcs	193fc <__assert_fail@plt+0x7fd0>
   19394:	ldr	r0, [fp, #-8]
   19398:	ldr	r0, [r0]
   1939c:	cmn	r0, #1
   193a0:	bne	193dc <__assert_fail@plt+0x7fb0>
   193a4:	b	193a8 <__assert_fail@plt+0x7f7c>
   193a8:	ldr	r0, [fp, #-12]
   193ac:	mvn	r1, #127	; 0x7f
   193b0:	add	r0, r0, r1
   193b4:	movw	r1, #0
   193b8:	cmp	r1, r0
   193bc:	blt	19418 <__assert_fail@plt+0x7fec>
   193c0:	b	19434 <__assert_fail@plt+0x8008>
   193c4:	ldr	r0, [fp, #-12]
   193c8:	sub	r0, r0, #1
   193cc:	movw	r1, #127	; 0x7f
   193d0:	cmp	r1, r0
   193d4:	blt	19418 <__assert_fail@plt+0x7fec>
   193d8:	b	19434 <__assert_fail@plt+0x8008>
   193dc:	ldr	r0, [fp, #-8]
   193e0:	ldr	r0, [r0]
   193e4:	mvn	r1, #127	; 0x7f
   193e8:	udiv	r0, r1, r0
   193ec:	ldr	r1, [fp, #-12]
   193f0:	cmp	r0, r1
   193f4:	bcc	19418 <__assert_fail@plt+0x7fec>
   193f8:	b	19434 <__assert_fail@plt+0x8008>
   193fc:	ldr	r0, [fp, #-12]
   19400:	movw	r1, #127	; 0x7f
   19404:	sdiv	r0, r1, r0
   19408:	ldr	r1, [fp, #-8]
   1940c:	ldr	r1, [r1]
   19410:	cmp	r0, r1
   19414:	bcs	19434 <__assert_fail@plt+0x8008>
   19418:	ldr	r0, [fp, #-8]
   1941c:	ldr	r0, [r0]
   19420:	ldr	r1, [fp, #-12]
   19424:	mul	r0, r0, r1
   19428:	sxtb	r0, r0
   1942c:	str	r0, [fp, #-16]
   19430:	b	1a7b0 <__assert_fail@plt+0x9384>
   19434:	ldr	r0, [fp, #-8]
   19438:	ldr	r0, [r0]
   1943c:	ldr	r1, [fp, #-12]
   19440:	mul	r0, r0, r1
   19444:	sxtb	r0, r0
   19448:	str	r0, [fp, #-16]
   1944c:	b	1a7e4 <__assert_fail@plt+0x93b8>
   19450:	ldr	r0, [fp, #-12]
   19454:	cmp	r0, #0
   19458:	bge	19584 <__assert_fail@plt+0x8158>
   1945c:	ldr	r0, [fp, #-8]
   19460:	ldr	r0, [r0]
   19464:	cmp	r0, #0
   19468:	bcs	194fc <__assert_fail@plt+0x80d0>
   1946c:	b	19470 <__assert_fail@plt+0x8044>
   19470:	ldr	r0, [fp, #-8]
   19474:	ldr	r0, [r0]
   19478:	ldr	r1, [fp, #-12]
   1947c:	movw	r2, #255	; 0xff
   19480:	sdiv	r1, r2, r1
   19484:	cmp	r0, r1
   19488:	bcc	19630 <__assert_fail@plt+0x8204>
   1948c:	b	1964c <__assert_fail@plt+0x8220>
   19490:	b	19494 <__assert_fail@plt+0x8068>
   19494:	ldr	r0, [pc, #3540]	; 1a270 <__assert_fail@plt+0x8e44>
   19498:	ldr	r1, [fp, #-12]
   1949c:	cmp	r1, r0
   194a0:	blt	194b8 <__assert_fail@plt+0x808c>
   194a4:	b	194c4 <__assert_fail@plt+0x8098>
   194a8:	ldr	r0, [fp, #-12]
   194ac:	movw	r1, #0
   194b0:	cmp	r1, r0
   194b4:	bge	194c4 <__assert_fail@plt+0x8098>
   194b8:	movw	r0, #0
   194bc:	str	r0, [fp, #-24]	; 0xffffffe8
   194c0:	b	194dc <__assert_fail@plt+0x80b0>
   194c4:	ldr	r0, [fp, #-12]
   194c8:	movw	r1, #0
   194cc:	sub	r0, r1, r0
   194d0:	movw	r1, #255	; 0xff
   194d4:	sdiv	r0, r1, r0
   194d8:	str	r0, [fp, #-24]	; 0xffffffe8
   194dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194e0:	ldr	r1, [fp, #-8]
   194e4:	ldr	r1, [r1]
   194e8:	mvn	r2, #0
   194ec:	sub	r1, r2, r1
   194f0:	cmp	r0, r1
   194f4:	bls	19630 <__assert_fail@plt+0x8204>
   194f8:	b	1964c <__assert_fail@plt+0x8220>
   194fc:	b	19500 <__assert_fail@plt+0x80d4>
   19500:	b	19564 <__assert_fail@plt+0x8138>
   19504:	b	19564 <__assert_fail@plt+0x8138>
   19508:	ldr	r0, [fp, #-12]
   1950c:	cmn	r0, #1
   19510:	bne	19564 <__assert_fail@plt+0x8138>
   19514:	b	19534 <__assert_fail@plt+0x8108>
   19518:	ldr	r0, [fp, #-8]
   1951c:	ldr	r0, [r0]
   19520:	add	r0, r0, #0
   19524:	movw	r1, #0
   19528:	cmp	r1, r0
   1952c:	bcc	19630 <__assert_fail@plt+0x8204>
   19530:	b	1964c <__assert_fail@plt+0x8220>
   19534:	ldr	r0, [fp, #-8]
   19538:	ldr	r0, [r0]
   1953c:	movw	r1, #0
   19540:	cmp	r1, r0
   19544:	bcs	1964c <__assert_fail@plt+0x8220>
   19548:	ldr	r0, [fp, #-8]
   1954c:	ldr	r0, [r0]
   19550:	sub	r0, r0, #1
   19554:	mvn	r1, #0
   19558:	cmp	r1, r0
   1955c:	bcc	19630 <__assert_fail@plt+0x8204>
   19560:	b	1964c <__assert_fail@plt+0x8220>
   19564:	ldr	r0, [fp, #-12]
   19568:	movw	r1, #0
   1956c:	sdiv	r0, r1, r0
   19570:	ldr	r1, [fp, #-8]
   19574:	ldr	r1, [r1]
   19578:	cmp	r0, r1
   1957c:	bcc	19630 <__assert_fail@plt+0x8204>
   19580:	b	1964c <__assert_fail@plt+0x8220>
   19584:	ldr	r0, [fp, #-12]
   19588:	cmp	r0, #0
   1958c:	bne	19594 <__assert_fail@plt+0x8168>
   19590:	b	1964c <__assert_fail@plt+0x8220>
   19594:	ldr	r0, [fp, #-8]
   19598:	ldr	r0, [r0]
   1959c:	cmp	r0, #0
   195a0:	bcs	19614 <__assert_fail@plt+0x81e8>
   195a4:	b	195ac <__assert_fail@plt+0x8180>
   195a8:	b	195b0 <__assert_fail@plt+0x8184>
   195ac:	b	195f4 <__assert_fail@plt+0x81c8>
   195b0:	ldr	r0, [fp, #-8]
   195b4:	ldr	r0, [r0]
   195b8:	cmn	r0, #1
   195bc:	bne	195f4 <__assert_fail@plt+0x81c8>
   195c0:	b	195c4 <__assert_fail@plt+0x8198>
   195c4:	ldr	r0, [fp, #-12]
   195c8:	add	r0, r0, #0
   195cc:	movw	r1, #0
   195d0:	cmp	r1, r0
   195d4:	blt	19630 <__assert_fail@plt+0x8204>
   195d8:	b	1964c <__assert_fail@plt+0x8220>
   195dc:	ldr	r0, [fp, #-12]
   195e0:	sub	r0, r0, #1
   195e4:	mvn	r1, #0
   195e8:	cmp	r1, r0
   195ec:	blt	19630 <__assert_fail@plt+0x8204>
   195f0:	b	1964c <__assert_fail@plt+0x8220>
   195f4:	ldr	r0, [fp, #-8]
   195f8:	ldr	r0, [r0]
   195fc:	movw	r1, #0
   19600:	udiv	r0, r1, r0
   19604:	ldr	r1, [fp, #-12]
   19608:	cmp	r0, r1
   1960c:	bcc	19630 <__assert_fail@plt+0x8204>
   19610:	b	1964c <__assert_fail@plt+0x8220>
   19614:	ldr	r0, [fp, #-12]
   19618:	movw	r1, #255	; 0xff
   1961c:	sdiv	r0, r1, r0
   19620:	ldr	r1, [fp, #-8]
   19624:	ldr	r1, [r1]
   19628:	cmp	r0, r1
   1962c:	bcs	1964c <__assert_fail@plt+0x8220>
   19630:	ldr	r0, [fp, #-8]
   19634:	ldr	r0, [r0]
   19638:	ldr	r1, [fp, #-12]
   1963c:	mul	r0, r0, r1
   19640:	and	r0, r0, #255	; 0xff
   19644:	str	r0, [fp, #-16]
   19648:	b	1a7b0 <__assert_fail@plt+0x9384>
   1964c:	ldr	r0, [fp, #-8]
   19650:	ldr	r0, [r0]
   19654:	ldr	r1, [fp, #-12]
   19658:	mul	r0, r0, r1
   1965c:	and	r0, r0, #255	; 0xff
   19660:	str	r0, [fp, #-16]
   19664:	b	1a7e4 <__assert_fail@plt+0x93b8>
   19668:	b	19a9c <__assert_fail@plt+0x8670>
   1966c:	b	19884 <__assert_fail@plt+0x8458>
   19670:	ldr	r0, [fp, #-12]
   19674:	cmp	r0, #0
   19678:	bge	197a8 <__assert_fail@plt+0x837c>
   1967c:	ldr	r0, [fp, #-8]
   19680:	ldr	r0, [r0]
   19684:	cmp	r0, #0
   19688:	bcs	1971c <__assert_fail@plt+0x82f0>
   1968c:	b	19690 <__assert_fail@plt+0x8264>
   19690:	ldr	r0, [fp, #-8]
   19694:	ldr	r0, [r0]
   19698:	ldr	r1, [fp, #-12]
   1969c:	movw	r2, #32767	; 0x7fff
   196a0:	sdiv	r1, r2, r1
   196a4:	cmp	r0, r1
   196a8:	bcc	1984c <__assert_fail@plt+0x8420>
   196ac:	b	19868 <__assert_fail@plt+0x843c>
   196b0:	b	196b4 <__assert_fail@plt+0x8288>
   196b4:	ldr	r0, [pc, #2996]	; 1a270 <__assert_fail@plt+0x8e44>
   196b8:	ldr	r1, [fp, #-12]
   196bc:	cmp	r1, r0
   196c0:	blt	196d8 <__assert_fail@plt+0x82ac>
   196c4:	b	196e4 <__assert_fail@plt+0x82b8>
   196c8:	ldr	r0, [fp, #-12]
   196cc:	movw	r1, #0
   196d0:	cmp	r1, r0
   196d4:	bge	196e4 <__assert_fail@plt+0x82b8>
   196d8:	movw	r0, #0
   196dc:	str	r0, [fp, #-28]	; 0xffffffe4
   196e0:	b	196fc <__assert_fail@plt+0x82d0>
   196e4:	ldr	r0, [fp, #-12]
   196e8:	movw	r1, #0
   196ec:	sub	r0, r1, r0
   196f0:	movw	r1, #32767	; 0x7fff
   196f4:	sdiv	r0, r1, r0
   196f8:	str	r0, [fp, #-28]	; 0xffffffe4
   196fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19700:	ldr	r1, [fp, #-8]
   19704:	ldr	r1, [r1]
   19708:	mvn	r2, #0
   1970c:	sub	r1, r2, r1
   19710:	cmp	r0, r1
   19714:	bls	1984c <__assert_fail@plt+0x8420>
   19718:	b	19868 <__assert_fail@plt+0x843c>
   1971c:	b	19720 <__assert_fail@plt+0x82f4>
   19720:	b	19788 <__assert_fail@plt+0x835c>
   19724:	b	19788 <__assert_fail@plt+0x835c>
   19728:	ldr	r0, [fp, #-12]
   1972c:	cmn	r0, #1
   19730:	bne	19788 <__assert_fail@plt+0x835c>
   19734:	b	19758 <__assert_fail@plt+0x832c>
   19738:	ldr	r0, [pc, #4072]	; 1a728 <__assert_fail@plt+0x92fc>
   1973c:	ldr	r1, [fp, #-8]
   19740:	ldr	r1, [r1]
   19744:	add	r0, r1, r0
   19748:	movw	r1, #0
   1974c:	cmp	r1, r0
   19750:	bcc	1984c <__assert_fail@plt+0x8420>
   19754:	b	19868 <__assert_fail@plt+0x843c>
   19758:	ldr	r0, [fp, #-8]
   1975c:	ldr	r0, [r0]
   19760:	movw	r1, #0
   19764:	cmp	r1, r0
   19768:	bcs	19868 <__assert_fail@plt+0x843c>
   1976c:	ldr	r0, [fp, #-8]
   19770:	ldr	r0, [r0]
   19774:	sub	r0, r0, #1
   19778:	movw	r1, #32767	; 0x7fff
   1977c:	cmp	r1, r0
   19780:	bcc	1984c <__assert_fail@plt+0x8420>
   19784:	b	19868 <__assert_fail@plt+0x843c>
   19788:	ldr	r0, [pc, #3992]	; 1a728 <__assert_fail@plt+0x92fc>
   1978c:	ldr	r1, [fp, #-12]
   19790:	sdiv	r0, r0, r1
   19794:	ldr	r1, [fp, #-8]
   19798:	ldr	r1, [r1]
   1979c:	cmp	r0, r1
   197a0:	bcc	1984c <__assert_fail@plt+0x8420>
   197a4:	b	19868 <__assert_fail@plt+0x843c>
   197a8:	ldr	r0, [fp, #-12]
   197ac:	cmp	r0, #0
   197b0:	bne	197b8 <__assert_fail@plt+0x838c>
   197b4:	b	19868 <__assert_fail@plt+0x843c>
   197b8:	ldr	r0, [fp, #-8]
   197bc:	ldr	r0, [r0]
   197c0:	cmp	r0, #0
   197c4:	bcs	19830 <__assert_fail@plt+0x8404>
   197c8:	ldr	r0, [fp, #-8]
   197cc:	ldr	r0, [r0]
   197d0:	cmn	r0, #1
   197d4:	bne	19810 <__assert_fail@plt+0x83e4>
   197d8:	b	197dc <__assert_fail@plt+0x83b0>
   197dc:	ldr	r0, [pc, #3908]	; 1a728 <__assert_fail@plt+0x92fc>
   197e0:	ldr	r1, [fp, #-12]
   197e4:	add	r0, r1, r0
   197e8:	movw	r1, #0
   197ec:	cmp	r1, r0
   197f0:	blt	1984c <__assert_fail@plt+0x8420>
   197f4:	b	19868 <__assert_fail@plt+0x843c>
   197f8:	ldr	r0, [fp, #-12]
   197fc:	sub	r0, r0, #1
   19800:	movw	r1, #32767	; 0x7fff
   19804:	cmp	r1, r0
   19808:	blt	1984c <__assert_fail@plt+0x8420>
   1980c:	b	19868 <__assert_fail@plt+0x843c>
   19810:	ldr	r0, [pc, #4088]	; 1a810 <__assert_fail@plt+0x93e4>
   19814:	ldr	r1, [fp, #-8]
   19818:	ldr	r1, [r1]
   1981c:	udiv	r0, r0, r1
   19820:	ldr	r1, [fp, #-12]
   19824:	cmp	r0, r1
   19828:	bcc	1984c <__assert_fail@plt+0x8420>
   1982c:	b	19868 <__assert_fail@plt+0x843c>
   19830:	ldr	r0, [fp, #-12]
   19834:	movw	r1, #32767	; 0x7fff
   19838:	sdiv	r0, r1, r0
   1983c:	ldr	r1, [fp, #-8]
   19840:	ldr	r1, [r1]
   19844:	cmp	r0, r1
   19848:	bcs	19868 <__assert_fail@plt+0x843c>
   1984c:	ldr	r0, [fp, #-8]
   19850:	ldr	r0, [r0]
   19854:	ldr	r1, [fp, #-12]
   19858:	mul	r0, r0, r1
   1985c:	sxth	r0, r0
   19860:	str	r0, [fp, #-16]
   19864:	b	1a7b0 <__assert_fail@plt+0x9384>
   19868:	ldr	r0, [fp, #-8]
   1986c:	ldr	r0, [r0]
   19870:	ldr	r1, [fp, #-12]
   19874:	mul	r0, r0, r1
   19878:	sxth	r0, r0
   1987c:	str	r0, [fp, #-16]
   19880:	b	1a7e4 <__assert_fail@plt+0x93b8>
   19884:	ldr	r0, [fp, #-12]
   19888:	cmp	r0, #0
   1988c:	bge	199b8 <__assert_fail@plt+0x858c>
   19890:	ldr	r0, [fp, #-8]
   19894:	ldr	r0, [r0]
   19898:	cmp	r0, #0
   1989c:	bcs	19930 <__assert_fail@plt+0x8504>
   198a0:	b	198a4 <__assert_fail@plt+0x8478>
   198a4:	ldr	r0, [fp, #-8]
   198a8:	ldr	r0, [r0]
   198ac:	ldr	r1, [fp, #-12]
   198b0:	movw	r2, #65535	; 0xffff
   198b4:	sdiv	r1, r2, r1
   198b8:	cmp	r0, r1
   198bc:	bcc	19a64 <__assert_fail@plt+0x8638>
   198c0:	b	19a80 <__assert_fail@plt+0x8654>
   198c4:	b	198c8 <__assert_fail@plt+0x849c>
   198c8:	ldr	r0, [pc, #3892]	; 1a804 <__assert_fail@plt+0x93d8>
   198cc:	ldr	r1, [fp, #-12]
   198d0:	cmp	r1, r0
   198d4:	blt	198ec <__assert_fail@plt+0x84c0>
   198d8:	b	198f8 <__assert_fail@plt+0x84cc>
   198dc:	ldr	r0, [fp, #-12]
   198e0:	movw	r1, #0
   198e4:	cmp	r1, r0
   198e8:	bge	198f8 <__assert_fail@plt+0x84cc>
   198ec:	movw	r0, #0
   198f0:	str	r0, [fp, #-32]	; 0xffffffe0
   198f4:	b	19910 <__assert_fail@plt+0x84e4>
   198f8:	ldr	r0, [fp, #-12]
   198fc:	movw	r1, #0
   19900:	sub	r0, r1, r0
   19904:	movw	r1, #65535	; 0xffff
   19908:	sdiv	r0, r1, r0
   1990c:	str	r0, [fp, #-32]	; 0xffffffe0
   19910:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19914:	ldr	r1, [fp, #-8]
   19918:	ldr	r1, [r1]
   1991c:	mvn	r2, #0
   19920:	sub	r1, r2, r1
   19924:	cmp	r0, r1
   19928:	bls	19a64 <__assert_fail@plt+0x8638>
   1992c:	b	19a80 <__assert_fail@plt+0x8654>
   19930:	b	19934 <__assert_fail@plt+0x8508>
   19934:	b	19998 <__assert_fail@plt+0x856c>
   19938:	b	19998 <__assert_fail@plt+0x856c>
   1993c:	ldr	r0, [fp, #-12]
   19940:	cmn	r0, #1
   19944:	bne	19998 <__assert_fail@plt+0x856c>
   19948:	b	19968 <__assert_fail@plt+0x853c>
   1994c:	ldr	r0, [fp, #-8]
   19950:	ldr	r0, [r0]
   19954:	add	r0, r0, #0
   19958:	movw	r1, #0
   1995c:	cmp	r1, r0
   19960:	bcc	19a64 <__assert_fail@plt+0x8638>
   19964:	b	19a80 <__assert_fail@plt+0x8654>
   19968:	ldr	r0, [fp, #-8]
   1996c:	ldr	r0, [r0]
   19970:	movw	r1, #0
   19974:	cmp	r1, r0
   19978:	bcs	19a80 <__assert_fail@plt+0x8654>
   1997c:	ldr	r0, [fp, #-8]
   19980:	ldr	r0, [r0]
   19984:	sub	r0, r0, #1
   19988:	mvn	r1, #0
   1998c:	cmp	r1, r0
   19990:	bcc	19a64 <__assert_fail@plt+0x8638>
   19994:	b	19a80 <__assert_fail@plt+0x8654>
   19998:	ldr	r0, [fp, #-12]
   1999c:	movw	r1, #0
   199a0:	sdiv	r0, r1, r0
   199a4:	ldr	r1, [fp, #-8]
   199a8:	ldr	r1, [r1]
   199ac:	cmp	r0, r1
   199b0:	bcc	19a64 <__assert_fail@plt+0x8638>
   199b4:	b	19a80 <__assert_fail@plt+0x8654>
   199b8:	ldr	r0, [fp, #-12]
   199bc:	cmp	r0, #0
   199c0:	bne	199c8 <__assert_fail@plt+0x859c>
   199c4:	b	19a80 <__assert_fail@plt+0x8654>
   199c8:	ldr	r0, [fp, #-8]
   199cc:	ldr	r0, [r0]
   199d0:	cmp	r0, #0
   199d4:	bcs	19a48 <__assert_fail@plt+0x861c>
   199d8:	b	199e0 <__assert_fail@plt+0x85b4>
   199dc:	b	199e4 <__assert_fail@plt+0x85b8>
   199e0:	b	19a28 <__assert_fail@plt+0x85fc>
   199e4:	ldr	r0, [fp, #-8]
   199e8:	ldr	r0, [r0]
   199ec:	cmn	r0, #1
   199f0:	bne	19a28 <__assert_fail@plt+0x85fc>
   199f4:	b	199f8 <__assert_fail@plt+0x85cc>
   199f8:	ldr	r0, [fp, #-12]
   199fc:	add	r0, r0, #0
   19a00:	movw	r1, #0
   19a04:	cmp	r1, r0
   19a08:	blt	19a64 <__assert_fail@plt+0x8638>
   19a0c:	b	19a80 <__assert_fail@plt+0x8654>
   19a10:	ldr	r0, [fp, #-12]
   19a14:	sub	r0, r0, #1
   19a18:	mvn	r1, #0
   19a1c:	cmp	r1, r0
   19a20:	blt	19a64 <__assert_fail@plt+0x8638>
   19a24:	b	19a80 <__assert_fail@plt+0x8654>
   19a28:	ldr	r0, [fp, #-8]
   19a2c:	ldr	r0, [r0]
   19a30:	movw	r1, #0
   19a34:	udiv	r0, r1, r0
   19a38:	ldr	r1, [fp, #-12]
   19a3c:	cmp	r0, r1
   19a40:	bcc	19a64 <__assert_fail@plt+0x8638>
   19a44:	b	19a80 <__assert_fail@plt+0x8654>
   19a48:	ldr	r0, [fp, #-12]
   19a4c:	movw	r1, #65535	; 0xffff
   19a50:	sdiv	r0, r1, r0
   19a54:	ldr	r1, [fp, #-8]
   19a58:	ldr	r1, [r1]
   19a5c:	cmp	r0, r1
   19a60:	bcs	19a80 <__assert_fail@plt+0x8654>
   19a64:	ldr	r0, [fp, #-8]
   19a68:	ldr	r0, [r0]
   19a6c:	ldr	r1, [fp, #-12]
   19a70:	mul	r0, r0, r1
   19a74:	uxth	r0, r0
   19a78:	str	r0, [fp, #-16]
   19a7c:	b	1a7b0 <__assert_fail@plt+0x9384>
   19a80:	ldr	r0, [fp, #-8]
   19a84:	ldr	r0, [r0]
   19a88:	ldr	r1, [fp, #-12]
   19a8c:	mul	r0, r0, r1
   19a90:	uxth	r0, r0
   19a94:	str	r0, [fp, #-16]
   19a98:	b	1a7e4 <__assert_fail@plt+0x93b8>
   19a9c:	b	19aa0 <__assert_fail@plt+0x8674>
   19aa0:	b	19c9c <__assert_fail@plt+0x8870>
   19aa4:	ldr	r0, [fp, #-12]
   19aa8:	cmp	r0, #0
   19aac:	bge	19bcc <__assert_fail@plt+0x87a0>
   19ab0:	ldr	r0, [fp, #-8]
   19ab4:	ldr	r0, [r0]
   19ab8:	cmp	r0, #0
   19abc:	bcs	19b50 <__assert_fail@plt+0x8724>
   19ac0:	b	19ac4 <__assert_fail@plt+0x8698>
   19ac4:	ldr	r0, [pc, #3388]	; 1a808 <__assert_fail@plt+0x93dc>
   19ac8:	ldr	r1, [fp, #-8]
   19acc:	ldr	r1, [r1]
   19ad0:	ldr	r2, [fp, #-12]
   19ad4:	sdiv	r0, r0, r2
   19ad8:	cmp	r1, r0
   19adc:	bcc	19c6c <__assert_fail@plt+0x8840>
   19ae0:	b	19c84 <__assert_fail@plt+0x8858>
   19ae4:	b	19ae8 <__assert_fail@plt+0x86bc>
   19ae8:	ldr	r0, [pc, #3348]	; 1a804 <__assert_fail@plt+0x93d8>
   19aec:	ldr	r1, [fp, #-12]
   19af0:	cmp	r1, r0
   19af4:	blt	19b0c <__assert_fail@plt+0x86e0>
   19af8:	b	19b18 <__assert_fail@plt+0x86ec>
   19afc:	ldr	r0, [fp, #-12]
   19b00:	movw	r1, #0
   19b04:	cmp	r1, r0
   19b08:	bge	19b18 <__assert_fail@plt+0x86ec>
   19b0c:	movw	r0, #0
   19b10:	str	r0, [fp, #-36]	; 0xffffffdc
   19b14:	b	19b30 <__assert_fail@plt+0x8704>
   19b18:	ldr	r0, [pc, #3304]	; 1a808 <__assert_fail@plt+0x93dc>
   19b1c:	ldr	r1, [fp, #-12]
   19b20:	movw	r2, #0
   19b24:	sub	r1, r2, r1
   19b28:	sdiv	r0, r0, r1
   19b2c:	str	r0, [fp, #-36]	; 0xffffffdc
   19b30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19b34:	ldr	r1, [fp, #-8]
   19b38:	ldr	r1, [r1]
   19b3c:	mvn	r2, #0
   19b40:	sub	r1, r2, r1
   19b44:	cmp	r0, r1
   19b48:	bls	19c6c <__assert_fail@plt+0x8840>
   19b4c:	b	19c84 <__assert_fail@plt+0x8858>
   19b50:	ldr	r0, [fp, #-12]
   19b54:	cmn	r0, #1
   19b58:	bne	19bac <__assert_fail@plt+0x8780>
   19b5c:	b	19b7c <__assert_fail@plt+0x8750>
   19b60:	ldr	r0, [fp, #-8]
   19b64:	ldr	r0, [r0]
   19b68:	add	r0, r0, #-2147483648	; 0x80000000
   19b6c:	movw	r1, #0
   19b70:	cmp	r1, r0
   19b74:	bcc	19c6c <__assert_fail@plt+0x8840>
   19b78:	b	19c84 <__assert_fail@plt+0x8858>
   19b7c:	ldr	r0, [fp, #-8]
   19b80:	ldr	r0, [r0]
   19b84:	movw	r1, #0
   19b88:	cmp	r1, r0
   19b8c:	bcs	19c84 <__assert_fail@plt+0x8858>
   19b90:	ldr	r0, [pc, #3184]	; 1a808 <__assert_fail@plt+0x93dc>
   19b94:	ldr	r1, [fp, #-8]
   19b98:	ldr	r1, [r1]
   19b9c:	sub	r1, r1, #1
   19ba0:	cmp	r0, r1
   19ba4:	bcc	19c6c <__assert_fail@plt+0x8840>
   19ba8:	b	19c84 <__assert_fail@plt+0x8858>
   19bac:	ldr	r0, [pc, #3160]	; 1a80c <__assert_fail@plt+0x93e0>
   19bb0:	ldr	r1, [fp, #-12]
   19bb4:	sdiv	r0, r0, r1
   19bb8:	ldr	r1, [fp, #-8]
   19bbc:	ldr	r1, [r1]
   19bc0:	cmp	r0, r1
   19bc4:	bcc	19c6c <__assert_fail@plt+0x8840>
   19bc8:	b	19c84 <__assert_fail@plt+0x8858>
   19bcc:	ldr	r0, [fp, #-12]
   19bd0:	cmp	r0, #0
   19bd4:	bne	19bdc <__assert_fail@plt+0x87b0>
   19bd8:	b	19c84 <__assert_fail@plt+0x8858>
   19bdc:	ldr	r0, [fp, #-8]
   19be0:	ldr	r0, [r0]
   19be4:	cmp	r0, #0
   19be8:	bcs	19c50 <__assert_fail@plt+0x8824>
   19bec:	ldr	r0, [fp, #-8]
   19bf0:	ldr	r0, [r0]
   19bf4:	cmn	r0, #1
   19bf8:	bne	19c30 <__assert_fail@plt+0x8804>
   19bfc:	b	19c00 <__assert_fail@plt+0x87d4>
   19c00:	ldr	r0, [fp, #-12]
   19c04:	add	r0, r0, #-2147483648	; 0x80000000
   19c08:	movw	r1, #0
   19c0c:	cmp	r1, r0
   19c10:	blt	19c6c <__assert_fail@plt+0x8840>
   19c14:	b	19c84 <__assert_fail@plt+0x8858>
   19c18:	ldr	r0, [pc, #3048]	; 1a808 <__assert_fail@plt+0x93dc>
   19c1c:	ldr	r1, [fp, #-12]
   19c20:	sub	r1, r1, #1
   19c24:	cmp	r0, r1
   19c28:	blt	19c6c <__assert_fail@plt+0x8840>
   19c2c:	b	19c84 <__assert_fail@plt+0x8858>
   19c30:	ldr	r0, [pc, #3028]	; 1a80c <__assert_fail@plt+0x93e0>
   19c34:	ldr	r1, [fp, #-8]
   19c38:	ldr	r1, [r1]
   19c3c:	udiv	r0, r0, r1
   19c40:	ldr	r1, [fp, #-12]
   19c44:	cmp	r0, r1
   19c48:	bcc	19c6c <__assert_fail@plt+0x8840>
   19c4c:	b	19c84 <__assert_fail@plt+0x8858>
   19c50:	ldr	r0, [pc, #2992]	; 1a808 <__assert_fail@plt+0x93dc>
   19c54:	ldr	r1, [fp, #-12]
   19c58:	sdiv	r0, r0, r1
   19c5c:	ldr	r1, [fp, #-8]
   19c60:	ldr	r1, [r1]
   19c64:	cmp	r0, r1
   19c68:	bcs	19c84 <__assert_fail@plt+0x8858>
   19c6c:	ldr	r0, [fp, #-8]
   19c70:	ldr	r0, [r0]
   19c74:	ldr	r1, [fp, #-12]
   19c78:	mul	r0, r0, r1
   19c7c:	str	r0, [fp, #-16]
   19c80:	b	1a7b0 <__assert_fail@plt+0x9384>
   19c84:	ldr	r0, [fp, #-8]
   19c88:	ldr	r0, [r0]
   19c8c:	ldr	r1, [fp, #-12]
   19c90:	mul	r0, r0, r1
   19c94:	str	r0, [fp, #-16]
   19c98:	b	1a7e4 <__assert_fail@plt+0x93b8>
   19c9c:	ldr	r0, [fp, #-12]
   19ca0:	cmp	r0, #0
   19ca4:	bge	19dd0 <__assert_fail@plt+0x89a4>
   19ca8:	ldr	r0, [fp, #-8]
   19cac:	ldr	r0, [r0]
   19cb0:	cmp	r0, #0
   19cb4:	bcs	19d48 <__assert_fail@plt+0x891c>
   19cb8:	b	19cdc <__assert_fail@plt+0x88b0>
   19cbc:	ldr	r0, [fp, #-8]
   19cc0:	ldr	r0, [r0]
   19cc4:	ldr	r1, [fp, #-12]
   19cc8:	mvn	r2, #0
   19ccc:	udiv	r1, r2, r1
   19cd0:	cmp	r0, r1
   19cd4:	bcc	19e7c <__assert_fail@plt+0x8a50>
   19cd8:	b	19e94 <__assert_fail@plt+0x8a68>
   19cdc:	b	19ce0 <__assert_fail@plt+0x88b4>
   19ce0:	ldr	r0, [pc, #2844]	; 1a804 <__assert_fail@plt+0x93d8>
   19ce4:	ldr	r1, [fp, #-12]
   19ce8:	cmp	r1, r0
   19cec:	blt	19d04 <__assert_fail@plt+0x88d8>
   19cf0:	b	19d10 <__assert_fail@plt+0x88e4>
   19cf4:	ldr	r0, [fp, #-12]
   19cf8:	movw	r1, #0
   19cfc:	cmp	r1, r0
   19d00:	bge	19d10 <__assert_fail@plt+0x88e4>
   19d04:	movw	r0, #1
   19d08:	str	r0, [fp, #-40]	; 0xffffffd8
   19d0c:	b	19d28 <__assert_fail@plt+0x88fc>
   19d10:	ldr	r0, [fp, #-12]
   19d14:	movw	r1, #0
   19d18:	sub	r0, r1, r0
   19d1c:	mvn	r1, #0
   19d20:	udiv	r0, r1, r0
   19d24:	str	r0, [fp, #-40]	; 0xffffffd8
   19d28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19d2c:	ldr	r1, [fp, #-8]
   19d30:	ldr	r1, [r1]
   19d34:	mvn	r2, #0
   19d38:	sub	r1, r2, r1
   19d3c:	cmp	r0, r1
   19d40:	bls	19e7c <__assert_fail@plt+0x8a50>
   19d44:	b	19e94 <__assert_fail@plt+0x8a68>
   19d48:	b	19d4c <__assert_fail@plt+0x8920>
   19d4c:	b	19db0 <__assert_fail@plt+0x8984>
   19d50:	b	19db0 <__assert_fail@plt+0x8984>
   19d54:	ldr	r0, [fp, #-12]
   19d58:	cmn	r0, #1
   19d5c:	bne	19db0 <__assert_fail@plt+0x8984>
   19d60:	b	19d80 <__assert_fail@plt+0x8954>
   19d64:	ldr	r0, [fp, #-8]
   19d68:	ldr	r0, [r0]
   19d6c:	add	r0, r0, #0
   19d70:	movw	r1, #0
   19d74:	cmp	r1, r0
   19d78:	bcc	19e7c <__assert_fail@plt+0x8a50>
   19d7c:	b	19e94 <__assert_fail@plt+0x8a68>
   19d80:	ldr	r0, [fp, #-8]
   19d84:	ldr	r0, [r0]
   19d88:	movw	r1, #0
   19d8c:	cmp	r1, r0
   19d90:	bcs	19e94 <__assert_fail@plt+0x8a68>
   19d94:	ldr	r0, [fp, #-8]
   19d98:	ldr	r0, [r0]
   19d9c:	sub	r0, r0, #1
   19da0:	mvn	r1, #0
   19da4:	cmp	r1, r0
   19da8:	bcc	19e7c <__assert_fail@plt+0x8a50>
   19dac:	b	19e94 <__assert_fail@plt+0x8a68>
   19db0:	ldr	r0, [fp, #-12]
   19db4:	movw	r1, #0
   19db8:	sdiv	r0, r1, r0
   19dbc:	ldr	r1, [fp, #-8]
   19dc0:	ldr	r1, [r1]
   19dc4:	cmp	r0, r1
   19dc8:	bcc	19e7c <__assert_fail@plt+0x8a50>
   19dcc:	b	19e94 <__assert_fail@plt+0x8a68>
   19dd0:	ldr	r0, [fp, #-12]
   19dd4:	cmp	r0, #0
   19dd8:	bne	19de0 <__assert_fail@plt+0x89b4>
   19ddc:	b	19e94 <__assert_fail@plt+0x8a68>
   19de0:	ldr	r0, [fp, #-8]
   19de4:	ldr	r0, [r0]
   19de8:	cmp	r0, #0
   19dec:	bcs	19e60 <__assert_fail@plt+0x8a34>
   19df0:	b	19df8 <__assert_fail@plt+0x89cc>
   19df4:	b	19dfc <__assert_fail@plt+0x89d0>
   19df8:	b	19e40 <__assert_fail@plt+0x8a14>
   19dfc:	ldr	r0, [fp, #-8]
   19e00:	ldr	r0, [r0]
   19e04:	cmn	r0, #1
   19e08:	bne	19e40 <__assert_fail@plt+0x8a14>
   19e0c:	b	19e10 <__assert_fail@plt+0x89e4>
   19e10:	ldr	r0, [fp, #-12]
   19e14:	add	r0, r0, #0
   19e18:	movw	r1, #0
   19e1c:	cmp	r1, r0
   19e20:	blt	19e7c <__assert_fail@plt+0x8a50>
   19e24:	b	19e94 <__assert_fail@plt+0x8a68>
   19e28:	ldr	r0, [fp, #-12]
   19e2c:	sub	r0, r0, #1
   19e30:	mvn	r1, #0
   19e34:	cmp	r1, r0
   19e38:	blt	19e7c <__assert_fail@plt+0x8a50>
   19e3c:	b	19e94 <__assert_fail@plt+0x8a68>
   19e40:	ldr	r0, [fp, #-8]
   19e44:	ldr	r0, [r0]
   19e48:	movw	r1, #0
   19e4c:	udiv	r0, r1, r0
   19e50:	ldr	r1, [fp, #-12]
   19e54:	cmp	r0, r1
   19e58:	bcc	19e7c <__assert_fail@plt+0x8a50>
   19e5c:	b	19e94 <__assert_fail@plt+0x8a68>
   19e60:	ldr	r0, [fp, #-12]
   19e64:	mvn	r1, #0
   19e68:	udiv	r0, r1, r0
   19e6c:	ldr	r1, [fp, #-8]
   19e70:	ldr	r1, [r1]
   19e74:	cmp	r0, r1
   19e78:	bcs	19e94 <__assert_fail@plt+0x8a68>
   19e7c:	ldr	r0, [fp, #-8]
   19e80:	ldr	r0, [r0]
   19e84:	ldr	r1, [fp, #-12]
   19e88:	mul	r0, r0, r1
   19e8c:	str	r0, [fp, #-16]
   19e90:	b	1a7b0 <__assert_fail@plt+0x9384>
   19e94:	ldr	r0, [fp, #-8]
   19e98:	ldr	r0, [r0]
   19e9c:	ldr	r1, [fp, #-12]
   19ea0:	mul	r0, r0, r1
   19ea4:	str	r0, [fp, #-16]
   19ea8:	b	1a7e4 <__assert_fail@plt+0x93b8>
   19eac:	b	19eb0 <__assert_fail@plt+0x8a84>
   19eb0:	b	1a0ac <__assert_fail@plt+0x8c80>
   19eb4:	ldr	r0, [fp, #-12]
   19eb8:	cmp	r0, #0
   19ebc:	bge	19fdc <__assert_fail@plt+0x8bb0>
   19ec0:	ldr	r0, [fp, #-8]
   19ec4:	ldr	r0, [r0]
   19ec8:	cmp	r0, #0
   19ecc:	bcs	19f60 <__assert_fail@plt+0x8b34>
   19ed0:	b	19ed4 <__assert_fail@plt+0x8aa8>
   19ed4:	ldr	r0, [pc, #2348]	; 1a808 <__assert_fail@plt+0x93dc>
   19ed8:	ldr	r1, [fp, #-8]
   19edc:	ldr	r1, [r1]
   19ee0:	ldr	r2, [fp, #-12]
   19ee4:	sdiv	r0, r0, r2
   19ee8:	cmp	r1, r0
   19eec:	bcc	1a07c <__assert_fail@plt+0x8c50>
   19ef0:	b	1a094 <__assert_fail@plt+0x8c68>
   19ef4:	b	19ef8 <__assert_fail@plt+0x8acc>
   19ef8:	ldr	r0, [pc, #2308]	; 1a804 <__assert_fail@plt+0x93d8>
   19efc:	ldr	r1, [fp, #-12]
   19f00:	cmp	r1, r0
   19f04:	blt	19f1c <__assert_fail@plt+0x8af0>
   19f08:	b	19f28 <__assert_fail@plt+0x8afc>
   19f0c:	ldr	r0, [fp, #-12]
   19f10:	movw	r1, #0
   19f14:	cmp	r1, r0
   19f18:	bge	19f28 <__assert_fail@plt+0x8afc>
   19f1c:	movw	r0, #0
   19f20:	str	r0, [fp, #-44]	; 0xffffffd4
   19f24:	b	19f40 <__assert_fail@plt+0x8b14>
   19f28:	ldr	r0, [pc, #2264]	; 1a808 <__assert_fail@plt+0x93dc>
   19f2c:	ldr	r1, [fp, #-12]
   19f30:	movw	r2, #0
   19f34:	sub	r1, r2, r1
   19f38:	sdiv	r0, r0, r1
   19f3c:	str	r0, [fp, #-44]	; 0xffffffd4
   19f40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19f44:	ldr	r1, [fp, #-8]
   19f48:	ldr	r1, [r1]
   19f4c:	mvn	r2, #0
   19f50:	sub	r1, r2, r1
   19f54:	cmp	r0, r1
   19f58:	bls	1a07c <__assert_fail@plt+0x8c50>
   19f5c:	b	1a094 <__assert_fail@plt+0x8c68>
   19f60:	ldr	r0, [fp, #-12]
   19f64:	cmn	r0, #1
   19f68:	bne	19fbc <__assert_fail@plt+0x8b90>
   19f6c:	b	19f8c <__assert_fail@plt+0x8b60>
   19f70:	ldr	r0, [fp, #-8]
   19f74:	ldr	r0, [r0]
   19f78:	add	r0, r0, #-2147483648	; 0x80000000
   19f7c:	movw	r1, #0
   19f80:	cmp	r1, r0
   19f84:	bcc	1a07c <__assert_fail@plt+0x8c50>
   19f88:	b	1a094 <__assert_fail@plt+0x8c68>
   19f8c:	ldr	r0, [fp, #-8]
   19f90:	ldr	r0, [r0]
   19f94:	movw	r1, #0
   19f98:	cmp	r1, r0
   19f9c:	bcs	1a094 <__assert_fail@plt+0x8c68>
   19fa0:	ldr	r0, [pc, #2144]	; 1a808 <__assert_fail@plt+0x93dc>
   19fa4:	ldr	r1, [fp, #-8]
   19fa8:	ldr	r1, [r1]
   19fac:	sub	r1, r1, #1
   19fb0:	cmp	r0, r1
   19fb4:	bcc	1a07c <__assert_fail@plt+0x8c50>
   19fb8:	b	1a094 <__assert_fail@plt+0x8c68>
   19fbc:	ldr	r0, [pc, #2120]	; 1a80c <__assert_fail@plt+0x93e0>
   19fc0:	ldr	r1, [fp, #-12]
   19fc4:	sdiv	r0, r0, r1
   19fc8:	ldr	r1, [fp, #-8]
   19fcc:	ldr	r1, [r1]
   19fd0:	cmp	r0, r1
   19fd4:	bcc	1a07c <__assert_fail@plt+0x8c50>
   19fd8:	b	1a094 <__assert_fail@plt+0x8c68>
   19fdc:	ldr	r0, [fp, #-12]
   19fe0:	cmp	r0, #0
   19fe4:	bne	19fec <__assert_fail@plt+0x8bc0>
   19fe8:	b	1a094 <__assert_fail@plt+0x8c68>
   19fec:	ldr	r0, [fp, #-8]
   19ff0:	ldr	r0, [r0]
   19ff4:	cmp	r0, #0
   19ff8:	bcs	1a060 <__assert_fail@plt+0x8c34>
   19ffc:	ldr	r0, [fp, #-8]
   1a000:	ldr	r0, [r0]
   1a004:	cmn	r0, #1
   1a008:	bne	1a040 <__assert_fail@plt+0x8c14>
   1a00c:	b	1a010 <__assert_fail@plt+0x8be4>
   1a010:	ldr	r0, [fp, #-12]
   1a014:	add	r0, r0, #-2147483648	; 0x80000000
   1a018:	movw	r1, #0
   1a01c:	cmp	r1, r0
   1a020:	blt	1a07c <__assert_fail@plt+0x8c50>
   1a024:	b	1a094 <__assert_fail@plt+0x8c68>
   1a028:	ldr	r0, [pc, #2008]	; 1a808 <__assert_fail@plt+0x93dc>
   1a02c:	ldr	r1, [fp, #-12]
   1a030:	sub	r1, r1, #1
   1a034:	cmp	r0, r1
   1a038:	blt	1a07c <__assert_fail@plt+0x8c50>
   1a03c:	b	1a094 <__assert_fail@plt+0x8c68>
   1a040:	ldr	r0, [pc, #1988]	; 1a80c <__assert_fail@plt+0x93e0>
   1a044:	ldr	r1, [fp, #-8]
   1a048:	ldr	r1, [r1]
   1a04c:	udiv	r0, r0, r1
   1a050:	ldr	r1, [fp, #-12]
   1a054:	cmp	r0, r1
   1a058:	bcc	1a07c <__assert_fail@plt+0x8c50>
   1a05c:	b	1a094 <__assert_fail@plt+0x8c68>
   1a060:	ldr	r0, [pc, #1952]	; 1a808 <__assert_fail@plt+0x93dc>
   1a064:	ldr	r1, [fp, #-12]
   1a068:	sdiv	r0, r0, r1
   1a06c:	ldr	r1, [fp, #-8]
   1a070:	ldr	r1, [r1]
   1a074:	cmp	r0, r1
   1a078:	bcs	1a094 <__assert_fail@plt+0x8c68>
   1a07c:	ldr	r0, [fp, #-8]
   1a080:	ldr	r0, [r0]
   1a084:	ldr	r1, [fp, #-12]
   1a088:	mul	r0, r0, r1
   1a08c:	str	r0, [fp, #-16]
   1a090:	b	1a7b0 <__assert_fail@plt+0x9384>
   1a094:	ldr	r0, [fp, #-8]
   1a098:	ldr	r0, [r0]
   1a09c:	ldr	r1, [fp, #-12]
   1a0a0:	mul	r0, r0, r1
   1a0a4:	str	r0, [fp, #-16]
   1a0a8:	b	1a7e4 <__assert_fail@plt+0x93b8>
   1a0ac:	ldr	r0, [fp, #-12]
   1a0b0:	cmp	r0, #0
   1a0b4:	bge	1a1e0 <__assert_fail@plt+0x8db4>
   1a0b8:	ldr	r0, [fp, #-8]
   1a0bc:	ldr	r0, [r0]
   1a0c0:	cmp	r0, #0
   1a0c4:	bcs	1a158 <__assert_fail@plt+0x8d2c>
   1a0c8:	b	1a0ec <__assert_fail@plt+0x8cc0>
   1a0cc:	ldr	r0, [fp, #-8]
   1a0d0:	ldr	r0, [r0]
   1a0d4:	ldr	r1, [fp, #-12]
   1a0d8:	mvn	r2, #0
   1a0dc:	udiv	r1, r2, r1
   1a0e0:	cmp	r0, r1
   1a0e4:	bcc	1a290 <__assert_fail@plt+0x8e64>
   1a0e8:	b	1a2a8 <__assert_fail@plt+0x8e7c>
   1a0ec:	b	1a0f0 <__assert_fail@plt+0x8cc4>
   1a0f0:	ldr	r0, [pc, #1804]	; 1a804 <__assert_fail@plt+0x93d8>
   1a0f4:	ldr	r1, [fp, #-12]
   1a0f8:	cmp	r1, r0
   1a0fc:	blt	1a114 <__assert_fail@plt+0x8ce8>
   1a100:	b	1a120 <__assert_fail@plt+0x8cf4>
   1a104:	ldr	r0, [fp, #-12]
   1a108:	movw	r1, #0
   1a10c:	cmp	r1, r0
   1a110:	bge	1a120 <__assert_fail@plt+0x8cf4>
   1a114:	movw	r0, #1
   1a118:	str	r0, [fp, #-48]	; 0xffffffd0
   1a11c:	b	1a138 <__assert_fail@plt+0x8d0c>
   1a120:	ldr	r0, [fp, #-12]
   1a124:	movw	r1, #0
   1a128:	sub	r0, r1, r0
   1a12c:	mvn	r1, #0
   1a130:	udiv	r0, r1, r0
   1a134:	str	r0, [fp, #-48]	; 0xffffffd0
   1a138:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a13c:	ldr	r1, [fp, #-8]
   1a140:	ldr	r1, [r1]
   1a144:	mvn	r2, #0
   1a148:	sub	r1, r2, r1
   1a14c:	cmp	r0, r1
   1a150:	bls	1a290 <__assert_fail@plt+0x8e64>
   1a154:	b	1a2a8 <__assert_fail@plt+0x8e7c>
   1a158:	b	1a15c <__assert_fail@plt+0x8d30>
   1a15c:	b	1a1c0 <__assert_fail@plt+0x8d94>
   1a160:	b	1a1c0 <__assert_fail@plt+0x8d94>
   1a164:	ldr	r0, [fp, #-12]
   1a168:	cmn	r0, #1
   1a16c:	bne	1a1c0 <__assert_fail@plt+0x8d94>
   1a170:	b	1a190 <__assert_fail@plt+0x8d64>
   1a174:	ldr	r0, [fp, #-8]
   1a178:	ldr	r0, [r0]
   1a17c:	add	r0, r0, #0
   1a180:	movw	r1, #0
   1a184:	cmp	r1, r0
   1a188:	bcc	1a290 <__assert_fail@plt+0x8e64>
   1a18c:	b	1a2a8 <__assert_fail@plt+0x8e7c>
   1a190:	ldr	r0, [fp, #-8]
   1a194:	ldr	r0, [r0]
   1a198:	movw	r1, #0
   1a19c:	cmp	r1, r0
   1a1a0:	bcs	1a2a8 <__assert_fail@plt+0x8e7c>
   1a1a4:	ldr	r0, [fp, #-8]
   1a1a8:	ldr	r0, [r0]
   1a1ac:	sub	r0, r0, #1
   1a1b0:	mvn	r1, #0
   1a1b4:	cmp	r1, r0
   1a1b8:	bcc	1a290 <__assert_fail@plt+0x8e64>
   1a1bc:	b	1a2a8 <__assert_fail@plt+0x8e7c>
   1a1c0:	ldr	r0, [fp, #-12]
   1a1c4:	movw	r1, #0
   1a1c8:	sdiv	r0, r1, r0
   1a1cc:	ldr	r1, [fp, #-8]
   1a1d0:	ldr	r1, [r1]
   1a1d4:	cmp	r0, r1
   1a1d8:	bcc	1a290 <__assert_fail@plt+0x8e64>
   1a1dc:	b	1a2a8 <__assert_fail@plt+0x8e7c>
   1a1e0:	ldr	r0, [fp, #-12]
   1a1e4:	cmp	r0, #0
   1a1e8:	bne	1a1f0 <__assert_fail@plt+0x8dc4>
   1a1ec:	b	1a2a8 <__assert_fail@plt+0x8e7c>
   1a1f0:	ldr	r0, [fp, #-8]
   1a1f4:	ldr	r0, [r0]
   1a1f8:	cmp	r0, #0
   1a1fc:	bcs	1a274 <__assert_fail@plt+0x8e48>
   1a200:	b	1a208 <__assert_fail@plt+0x8ddc>
   1a204:	b	1a20c <__assert_fail@plt+0x8de0>
   1a208:	b	1a250 <__assert_fail@plt+0x8e24>
   1a20c:	ldr	r0, [fp, #-8]
   1a210:	ldr	r0, [r0]
   1a214:	cmn	r0, #1
   1a218:	bne	1a250 <__assert_fail@plt+0x8e24>
   1a21c:	b	1a220 <__assert_fail@plt+0x8df4>
   1a220:	ldr	r0, [fp, #-12]
   1a224:	add	r0, r0, #0
   1a228:	movw	r1, #0
   1a22c:	cmp	r1, r0
   1a230:	blt	1a290 <__assert_fail@plt+0x8e64>
   1a234:	b	1a2a8 <__assert_fail@plt+0x8e7c>
   1a238:	ldr	r0, [fp, #-12]
   1a23c:	sub	r0, r0, #1
   1a240:	mvn	r1, #0
   1a244:	cmp	r1, r0
   1a248:	blt	1a290 <__assert_fail@plt+0x8e64>
   1a24c:	b	1a2a8 <__assert_fail@plt+0x8e7c>
   1a250:	ldr	r0, [fp, #-8]
   1a254:	ldr	r0, [r0]
   1a258:	movw	r1, #0
   1a25c:	udiv	r0, r1, r0
   1a260:	ldr	r1, [fp, #-12]
   1a264:	cmp	r0, r1
   1a268:	bcc	1a290 <__assert_fail@plt+0x8e64>
   1a26c:	b	1a2a8 <__assert_fail@plt+0x8e7c>
   1a270:	andhi	r0, r0, r1
   1a274:	ldr	r0, [fp, #-12]
   1a278:	mvn	r1, #0
   1a27c:	udiv	r0, r1, r0
   1a280:	ldr	r1, [fp, #-8]
   1a284:	ldr	r1, [r1]
   1a288:	cmp	r0, r1
   1a28c:	bcs	1a2a8 <__assert_fail@plt+0x8e7c>
   1a290:	ldr	r0, [fp, #-8]
   1a294:	ldr	r0, [r0]
   1a298:	ldr	r1, [fp, #-12]
   1a29c:	mul	r0, r0, r1
   1a2a0:	str	r0, [fp, #-16]
   1a2a4:	b	1a7b0 <__assert_fail@plt+0x9384>
   1a2a8:	ldr	r0, [fp, #-8]
   1a2ac:	ldr	r0, [r0]
   1a2b0:	ldr	r1, [fp, #-12]
   1a2b4:	mul	r0, r0, r1
   1a2b8:	str	r0, [fp, #-16]
   1a2bc:	b	1a7e4 <__assert_fail@plt+0x93b8>
   1a2c0:	b	1a544 <__assert_fail@plt+0x9118>
   1a2c4:	ldr	r0, [fp, #-12]
   1a2c8:	cmp	r0, #0
   1a2cc:	bge	1a448 <__assert_fail@plt+0x901c>
   1a2d0:	ldr	r0, [fp, #-8]
   1a2d4:	ldr	r0, [r0]
   1a2d8:	cmp	r0, #0
   1a2dc:	bcs	1a3bc <__assert_fail@plt+0x8f90>
   1a2e0:	b	1a2e4 <__assert_fail@plt+0x8eb8>
   1a2e4:	ldr	r0, [fp, #-8]
   1a2e8:	ldr	r0, [r0]
   1a2ec:	ldr	r1, [fp, #-12]
   1a2f0:	asr	r3, r1, #31
   1a2f4:	mvn	r2, #0
   1a2f8:	mvn	ip, #-2147483648	; 0x80000000
   1a2fc:	str	r0, [sp, #52]	; 0x34
   1a300:	mov	r0, r2
   1a304:	str	r1, [sp, #48]	; 0x30
   1a308:	mov	r1, ip
   1a30c:	ldr	r2, [sp, #48]	; 0x30
   1a310:	bl	1f354 <__assert_fail@plt+0xdf28>
   1a314:	ldr	r2, [sp, #52]	; 0x34
   1a318:	subs	r0, r2, r0
   1a31c:	rscs	r1, r1, #0
   1a320:	blt	1a514 <__assert_fail@plt+0x90e8>
   1a324:	b	1a52c <__assert_fail@plt+0x9100>
   1a328:	b	1a32c <__assert_fail@plt+0x8f00>
   1a32c:	ldr	r0, [pc, #1232]	; 1a804 <__assert_fail@plt+0x93d8>
   1a330:	ldr	r1, [fp, #-12]
   1a334:	cmp	r1, r0
   1a338:	blt	1a350 <__assert_fail@plt+0x8f24>
   1a33c:	b	1a364 <__assert_fail@plt+0x8f38>
   1a340:	ldr	r0, [fp, #-12]
   1a344:	movw	r1, #0
   1a348:	cmp	r1, r0
   1a34c:	bge	1a364 <__assert_fail@plt+0x8f38>
   1a350:	mov	r0, #0
   1a354:	mvn	r1, #0
   1a358:	str	r1, [sp, #44]	; 0x2c
   1a35c:	str	r0, [sp, #40]	; 0x28
   1a360:	b	1a398 <__assert_fail@plt+0x8f6c>
   1a364:	ldr	r0, [fp, #-12]
   1a368:	rsb	r0, r0, #0
   1a36c:	asr	r3, r0, #31
   1a370:	mvn	r1, #0
   1a374:	mvn	r2, #-2147483648	; 0x80000000
   1a378:	str	r0, [sp, #36]	; 0x24
   1a37c:	mov	r0, r1
   1a380:	mov	r1, r2
   1a384:	ldr	r2, [sp, #36]	; 0x24
   1a388:	bl	1f354 <__assert_fail@plt+0xdf28>
   1a38c:	str	r0, [sp, #44]	; 0x2c
   1a390:	str	r1, [sp, #40]	; 0x28
   1a394:	b	1a398 <__assert_fail@plt+0x8f6c>
   1a398:	ldr	r0, [sp, #40]	; 0x28
   1a39c:	ldr	r1, [sp, #44]	; 0x2c
   1a3a0:	ldr	r2, [fp, #-8]
   1a3a4:	ldr	r2, [r2]
   1a3a8:	mvn	r2, r2
   1a3ac:	subs	r1, r2, r1
   1a3b0:	rscs	r0, r0, #0
   1a3b4:	bge	1a514 <__assert_fail@plt+0x90e8>
   1a3b8:	b	1a52c <__assert_fail@plt+0x9100>
   1a3bc:	ldr	r0, [fp, #-12]
   1a3c0:	cmn	r0, #1
   1a3c4:	bne	1a40c <__assert_fail@plt+0x8fe0>
   1a3c8:	b	1a3e8 <__assert_fail@plt+0x8fbc>
   1a3cc:	ldr	r0, [fp, #-8]
   1a3d0:	ldr	r0, [r0]
   1a3d4:	rsbs	r0, r0, #0
   1a3d8:	mov	r1, #0
   1a3dc:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1a3e0:	blt	1a514 <__assert_fail@plt+0x90e8>
   1a3e4:	b	1a52c <__assert_fail@plt+0x9100>
   1a3e8:	ldr	r0, [fp, #-8]
   1a3ec:	ldr	r0, [r0]
   1a3f0:	movw	r1, #0
   1a3f4:	cmp	r1, r0
   1a3f8:	bcs	1a52c <__assert_fail@plt+0x9100>
   1a3fc:	mov	r0, #0
   1a400:	cmp	r0, #0
   1a404:	bne	1a514 <__assert_fail@plt+0x90e8>
   1a408:	b	1a52c <__assert_fail@plt+0x9100>
   1a40c:	ldr	r0, [fp, #-12]
   1a410:	asr	r3, r0, #31
   1a414:	mov	r1, #0
   1a418:	mov	r2, #-2147483648	; 0x80000000
   1a41c:	str	r0, [sp, #32]
   1a420:	mov	r0, r1
   1a424:	mov	r1, r2
   1a428:	ldr	r2, [sp, #32]
   1a42c:	bl	1f354 <__assert_fail@plt+0xdf28>
   1a430:	ldr	r2, [fp, #-8]
   1a434:	ldr	r2, [r2]
   1a438:	subs	r0, r0, r2
   1a43c:	sbcs	r1, r1, #0
   1a440:	blt	1a514 <__assert_fail@plt+0x90e8>
   1a444:	b	1a52c <__assert_fail@plt+0x9100>
   1a448:	ldr	r0, [fp, #-12]
   1a44c:	cmp	r0, #0
   1a450:	bne	1a458 <__assert_fail@plt+0x902c>
   1a454:	b	1a52c <__assert_fail@plt+0x9100>
   1a458:	ldr	r0, [fp, #-8]
   1a45c:	ldr	r0, [r0]
   1a460:	cmp	r0, #0
   1a464:	bcs	1a4d8 <__assert_fail@plt+0x90ac>
   1a468:	ldr	r0, [fp, #-8]
   1a46c:	ldr	r0, [r0]
   1a470:	cmn	r0, #1
   1a474:	bne	1a4a8 <__assert_fail@plt+0x907c>
   1a478:	b	1a47c <__assert_fail@plt+0x9050>
   1a47c:	ldr	r0, [fp, #-12]
   1a480:	mov	r1, #-2147483648	; 0x80000000
   1a484:	add	r1, r1, r0, asr #31
   1a488:	rsbs	r0, r0, #0
   1a48c:	rscs	r1, r1, #0
   1a490:	blt	1a514 <__assert_fail@plt+0x90e8>
   1a494:	b	1a52c <__assert_fail@plt+0x9100>
   1a498:	mov	r0, #0
   1a49c:	cmp	r0, #0
   1a4a0:	bne	1a514 <__assert_fail@plt+0x90e8>
   1a4a4:	b	1a52c <__assert_fail@plt+0x9100>
   1a4a8:	ldr	r0, [fp, #-8]
   1a4ac:	ldr	r2, [r0]
   1a4b0:	mov	r1, #-2147483648	; 0x80000000
   1a4b4:	mov	r0, #0
   1a4b8:	str	r0, [sp, #28]
   1a4bc:	ldr	r3, [sp, #28]
   1a4c0:	bl	1f354 <__assert_fail@plt+0xdf28>
   1a4c4:	ldr	r2, [fp, #-12]
   1a4c8:	subs	r0, r0, r2
   1a4cc:	sbcs	r1, r1, r2, asr #31
   1a4d0:	blt	1a514 <__assert_fail@plt+0x90e8>
   1a4d4:	b	1a52c <__assert_fail@plt+0x9100>
   1a4d8:	ldr	r0, [fp, #-12]
   1a4dc:	asr	r3, r0, #31
   1a4e0:	mvn	r1, #0
   1a4e4:	mvn	r2, #-2147483648	; 0x80000000
   1a4e8:	str	r0, [sp, #24]
   1a4ec:	mov	r0, r1
   1a4f0:	mov	r1, r2
   1a4f4:	ldr	r2, [sp, #24]
   1a4f8:	bl	1f354 <__assert_fail@plt+0xdf28>
   1a4fc:	ldr	r2, [fp, #-8]
   1a500:	ldr	r2, [r2]
   1a504:	subs	r0, r0, r2
   1a508:	sbcs	r1, r1, #0
   1a50c:	bge	1a52c <__assert_fail@plt+0x9100>
   1a510:	b	1a514 <__assert_fail@plt+0x90e8>
   1a514:	ldr	r0, [fp, #-8]
   1a518:	ldr	r0, [r0]
   1a51c:	ldr	r1, [fp, #-12]
   1a520:	mul	r0, r0, r1
   1a524:	str	r0, [fp, #-16]
   1a528:	b	1a7b0 <__assert_fail@plt+0x9384>
   1a52c:	ldr	r0, [fp, #-8]
   1a530:	ldr	r0, [r0]
   1a534:	ldr	r1, [fp, #-12]
   1a538:	mul	r0, r0, r1
   1a53c:	str	r0, [fp, #-16]
   1a540:	b	1a7e4 <__assert_fail@plt+0x93b8>
   1a544:	ldr	r0, [fp, #-12]
   1a548:	cmp	r0, #0
   1a54c:	bge	1a6b8 <__assert_fail@plt+0x928c>
   1a550:	ldr	r0, [fp, #-8]
   1a554:	ldr	r0, [r0]
   1a558:	cmp	r0, #0
   1a55c:	bcs	1a630 <__assert_fail@plt+0x9204>
   1a560:	b	1a5a4 <__assert_fail@plt+0x9178>
   1a564:	ldr	r0, [fp, #-8]
   1a568:	ldr	r0, [r0]
   1a56c:	ldr	r1, [fp, #-12]
   1a570:	asr	r3, r1, #31
   1a574:	mvn	r2, #0
   1a578:	str	r0, [sp, #20]
   1a57c:	mov	r0, r2
   1a580:	str	r1, [sp, #16]
   1a584:	mov	r1, r2
   1a588:	ldr	r2, [sp, #16]
   1a58c:	bl	1f428 <__assert_fail@plt+0xdffc>
   1a590:	ldr	r2, [sp, #20]
   1a594:	subs	r0, r2, r0
   1a598:	rscs	r1, r1, #0
   1a59c:	bcc	1a780 <__assert_fail@plt+0x9354>
   1a5a0:	b	1a798 <__assert_fail@plt+0x936c>
   1a5a4:	b	1a5a8 <__assert_fail@plt+0x917c>
   1a5a8:	ldr	r0, [pc, #596]	; 1a804 <__assert_fail@plt+0x93d8>
   1a5ac:	ldr	r1, [fp, #-12]
   1a5b0:	cmp	r1, r0
   1a5b4:	blt	1a5cc <__assert_fail@plt+0x91a0>
   1a5b8:	b	1a5e0 <__assert_fail@plt+0x91b4>
   1a5bc:	ldr	r0, [fp, #-12]
   1a5c0:	movw	r1, #0
   1a5c4:	cmp	r1, r0
   1a5c8:	bge	1a5e0 <__assert_fail@plt+0x91b4>
   1a5cc:	mov	r0, #1
   1a5d0:	mvn	r1, #0
   1a5d4:	str	r1, [sp, #12]
   1a5d8:	str	r0, [sp, #8]
   1a5dc:	b	1a60c <__assert_fail@plt+0x91e0>
   1a5e0:	ldr	r0, [fp, #-12]
   1a5e4:	rsb	r0, r0, #0
   1a5e8:	asr	r3, r0, #31
   1a5ec:	mvn	r1, #0
   1a5f0:	str	r0, [sp, #4]
   1a5f4:	mov	r0, r1
   1a5f8:	ldr	r2, [sp, #4]
   1a5fc:	bl	1f428 <__assert_fail@plt+0xdffc>
   1a600:	str	r0, [sp, #12]
   1a604:	str	r1, [sp, #8]
   1a608:	b	1a60c <__assert_fail@plt+0x91e0>
   1a60c:	ldr	r0, [sp, #8]
   1a610:	ldr	r1, [sp, #12]
   1a614:	ldr	r2, [fp, #-8]
   1a618:	ldr	r2, [r2]
   1a61c:	mvn	r2, r2
   1a620:	subs	r1, r2, r1
   1a624:	rscs	r0, r0, #0
   1a628:	bcs	1a780 <__assert_fail@plt+0x9354>
   1a62c:	b	1a798 <__assert_fail@plt+0x936c>
   1a630:	b	1a634 <__assert_fail@plt+0x9208>
   1a634:	b	1a698 <__assert_fail@plt+0x926c>
   1a638:	b	1a698 <__assert_fail@plt+0x926c>
   1a63c:	ldr	r0, [fp, #-12]
   1a640:	cmn	r0, #1
   1a644:	bne	1a698 <__assert_fail@plt+0x926c>
   1a648:	b	1a668 <__assert_fail@plt+0x923c>
   1a64c:	ldr	r0, [fp, #-8]
   1a650:	ldr	r0, [r0]
   1a654:	add	r0, r0, #0
   1a658:	movw	r1, #0
   1a65c:	cmp	r1, r0
   1a660:	bcc	1a780 <__assert_fail@plt+0x9354>
   1a664:	b	1a798 <__assert_fail@plt+0x936c>
   1a668:	ldr	r0, [fp, #-8]
   1a66c:	ldr	r0, [r0]
   1a670:	movw	r1, #0
   1a674:	cmp	r1, r0
   1a678:	bcs	1a798 <__assert_fail@plt+0x936c>
   1a67c:	ldr	r0, [fp, #-8]
   1a680:	ldr	r0, [r0]
   1a684:	sub	r0, r0, #1
   1a688:	mvn	r1, #0
   1a68c:	cmp	r1, r0
   1a690:	bcc	1a780 <__assert_fail@plt+0x9354>
   1a694:	b	1a798 <__assert_fail@plt+0x936c>
   1a698:	ldr	r0, [fp, #-12]
   1a69c:	movw	r1, #0
   1a6a0:	sdiv	r0, r1, r0
   1a6a4:	ldr	r1, [fp, #-8]
   1a6a8:	ldr	r1, [r1]
   1a6ac:	cmp	r0, r1
   1a6b0:	bcc	1a780 <__assert_fail@plt+0x9354>
   1a6b4:	b	1a798 <__assert_fail@plt+0x936c>
   1a6b8:	ldr	r0, [fp, #-12]
   1a6bc:	cmp	r0, #0
   1a6c0:	bne	1a6c8 <__assert_fail@plt+0x929c>
   1a6c4:	b	1a798 <__assert_fail@plt+0x936c>
   1a6c8:	ldr	r0, [fp, #-8]
   1a6cc:	ldr	r0, [r0]
   1a6d0:	cmp	r0, #0
   1a6d4:	bcs	1a74c <__assert_fail@plt+0x9320>
   1a6d8:	b	1a6e0 <__assert_fail@plt+0x92b4>
   1a6dc:	b	1a6e4 <__assert_fail@plt+0x92b8>
   1a6e0:	b	1a72c <__assert_fail@plt+0x9300>
   1a6e4:	ldr	r0, [fp, #-8]
   1a6e8:	ldr	r0, [r0]
   1a6ec:	cmn	r0, #1
   1a6f0:	bne	1a72c <__assert_fail@plt+0x9300>
   1a6f4:	b	1a6f8 <__assert_fail@plt+0x92cc>
   1a6f8:	ldr	r0, [fp, #-12]
   1a6fc:	add	r0, r0, #0
   1a700:	movw	r1, #0
   1a704:	cmp	r1, r0
   1a708:	blt	1a780 <__assert_fail@plt+0x9354>
   1a70c:	b	1a798 <__assert_fail@plt+0x936c>
   1a710:	ldr	r0, [fp, #-12]
   1a714:	sub	r0, r0, #1
   1a718:	mvn	r1, #0
   1a71c:	cmp	r1, r0
   1a720:	blt	1a780 <__assert_fail@plt+0x9354>
   1a724:	b	1a798 <__assert_fail@plt+0x936c>
   1a728:			; <UNDEFINED> instruction: 0xffff8000
   1a72c:	ldr	r0, [fp, #-8]
   1a730:	ldr	r0, [r0]
   1a734:	movw	r1, #0
   1a738:	udiv	r0, r1, r0
   1a73c:	ldr	r1, [fp, #-12]
   1a740:	cmp	r0, r1
   1a744:	bcc	1a780 <__assert_fail@plt+0x9354>
   1a748:	b	1a798 <__assert_fail@plt+0x936c>
   1a74c:	ldr	r0, [fp, #-12]
   1a750:	asr	r3, r0, #31
   1a754:	mvn	r1, #0
   1a758:	str	r0, [sp]
   1a75c:	mov	r0, r1
   1a760:	ldr	r2, [sp]
   1a764:	bl	1f428 <__assert_fail@plt+0xdffc>
   1a768:	ldr	r2, [fp, #-8]
   1a76c:	ldr	r2, [r2]
   1a770:	subs	r0, r0, r2
   1a774:	sbcs	r1, r1, #0
   1a778:	bcs	1a798 <__assert_fail@plt+0x936c>
   1a77c:	b	1a780 <__assert_fail@plt+0x9354>
   1a780:	ldr	r0, [fp, #-8]
   1a784:	ldr	r0, [r0]
   1a788:	ldr	r1, [fp, #-12]
   1a78c:	mul	r0, r0, r1
   1a790:	str	r0, [fp, #-16]
   1a794:	b	1a7b0 <__assert_fail@plt+0x9384>
   1a798:	ldr	r0, [fp, #-8]
   1a79c:	ldr	r0, [r0]
   1a7a0:	ldr	r1, [fp, #-12]
   1a7a4:	mul	r0, r0, r1
   1a7a8:	str	r0, [fp, #-16]
   1a7ac:	b	1a7e4 <__assert_fail@plt+0x93b8>
   1a7b0:	ldr	r0, [fp, #-8]
   1a7b4:	ldr	r0, [r0]
   1a7b8:	cmp	r0, #0
   1a7bc:	movw	r0, #0
   1a7c0:	movcc	r0, #1
   1a7c4:	tst	r0, #1
   1a7c8:	movw	r0, #0
   1a7cc:	mvneq	r0, #0
   1a7d0:	ldr	r1, [fp, #-8]
   1a7d4:	str	r0, [r1]
   1a7d8:	movw	r0, #1
   1a7dc:	str	r0, [fp, #-4]
   1a7e0:	b	1a7f8 <__assert_fail@plt+0x93cc>
   1a7e4:	ldr	r0, [fp, #-16]
   1a7e8:	ldr	r1, [fp, #-8]
   1a7ec:	str	r0, [r1]
   1a7f0:	movw	r0, #0
   1a7f4:	str	r0, [fp, #-4]
   1a7f8:	ldr	r0, [fp, #-4]
   1a7fc:	mov	sp, fp
   1a800:	pop	{fp, pc}
   1a804:	andhi	r0, r0, r1
   1a808:	svcvc	0x00ffffff
   1a80c:	andhi	r0, r0, r0
   1a810:			; <UNDEFINED> instruction: 0xffff8000
   1a814:	push	{fp, lr}
   1a818:	mov	fp, sp
   1a81c:	sub	sp, sp, #16
   1a820:	str	r0, [fp, #-4]
   1a824:	str	r1, [sp, #8]
   1a828:	str	r2, [sp, #4]
   1a82c:	movw	r0, #0
   1a830:	str	r0, [sp]
   1a834:	ldr	r0, [sp, #4]
   1a838:	mvn	r1, #0
   1a83c:	add	r1, r0, r1
   1a840:	str	r1, [sp, #4]
   1a844:	cmp	r0, #0
   1a848:	beq	1a868 <__assert_fail@plt+0x943c>
   1a84c:	ldr	r0, [fp, #-4]
   1a850:	ldr	r1, [sp, #8]
   1a854:	bl	19220 <__assert_fail@plt+0x7df4>
   1a858:	ldr	r1, [sp]
   1a85c:	orr	r0, r1, r0
   1a860:	str	r0, [sp]
   1a864:	b	1a834 <__assert_fail@plt+0x9408>
   1a868:	ldr	r0, [sp]
   1a86c:	mov	sp, fp
   1a870:	pop	{fp, pc}
   1a874:	push	{fp, lr}
   1a878:	mov	fp, sp
   1a87c:	sub	sp, sp, #80	; 0x50
   1a880:	ldr	ip, [fp, #8]
   1a884:	str	r0, [fp, #-8]
   1a888:	str	r1, [fp, #-12]
   1a88c:	str	r2, [fp, #-16]
   1a890:	str	r3, [fp, #-20]	; 0xffffffec
   1a894:	movw	r0, #0
   1a898:	str	r0, [sp, #36]	; 0x24
   1a89c:	ldr	r1, [fp, #-16]
   1a8a0:	cmp	r0, r1
   1a8a4:	bgt	1a8b8 <__assert_fail@plt+0x948c>
   1a8a8:	ldr	r0, [fp, #-16]
   1a8ac:	cmp	r0, #36	; 0x24
   1a8b0:	bgt	1a8b8 <__assert_fail@plt+0x948c>
   1a8b4:	b	1a8d8 <__assert_fail@plt+0x94ac>
   1a8b8:	movw	r0, #85	; 0x55
   1a8bc:	movt	r0, #2
   1a8c0:	movw	r1, #123	; 0x7b
   1a8c4:	movt	r1, #2
   1a8c8:	movw	r2, #85	; 0x55
   1a8cc:	movw	r3, #220	; 0xdc
   1a8d0:	movt	r3, #2
   1a8d4:	bl	1142c <__assert_fail@plt>
   1a8d8:	ldr	r0, [fp, #-12]
   1a8dc:	movw	r1, #0
   1a8e0:	cmp	r0, r1
   1a8e4:	beq	1a8f4 <__assert_fail@plt+0x94c8>
   1a8e8:	ldr	r0, [fp, #-12]
   1a8ec:	str	r0, [sp, #12]
   1a8f0:	b	1a900 <__assert_fail@plt+0x94d4>
   1a8f4:	sub	r0, fp, #24
   1a8f8:	str	r0, [sp, #12]
   1a8fc:	b	1a900 <__assert_fail@plt+0x94d4>
   1a900:	ldr	r0, [sp, #12]
   1a904:	str	r0, [fp, #-28]	; 0xffffffe4
   1a908:	bl	1130c <__errno_location@plt>
   1a90c:	movw	r1, #0
   1a910:	str	r1, [r0]
   1a914:	ldr	r0, [fp, #-8]
   1a918:	str	r0, [sp, #32]
   1a91c:	ldr	r0, [sp, #32]
   1a920:	ldrb	r0, [r0]
   1a924:	strb	r0, [sp, #31]
   1a928:	bl	112b8 <__ctype_b_loc@plt>
   1a92c:	ldr	r0, [r0]
   1a930:	ldrb	r1, [sp, #31]
   1a934:	mov	r2, r1
   1a938:	add	r0, r0, r1, lsl #1
   1a93c:	ldrh	r0, [r0]
   1a940:	and	r0, r0, #8192	; 0x2000
   1a944:	cmp	r0, #0
   1a948:	beq	1a964 <__assert_fail@plt+0x9538>
   1a94c:	ldr	r0, [sp, #32]
   1a950:	add	r1, r0, #1
   1a954:	str	r1, [sp, #32]
   1a958:	ldrb	r0, [r0, #1]
   1a95c:	strb	r0, [sp, #31]
   1a960:	b	1a928 <__assert_fail@plt+0x94fc>
   1a964:	ldrb	r0, [sp, #31]
   1a968:	cmp	r0, #45	; 0x2d
   1a96c:	bne	1a97c <__assert_fail@plt+0x9550>
   1a970:	movw	r0, #4
   1a974:	str	r0, [fp, #-4]
   1a978:	b	1aef8 <__assert_fail@plt+0x9acc>
   1a97c:	ldr	r0, [fp, #-8]
   1a980:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a984:	ldr	r2, [fp, #-16]
   1a988:	bl	11360 <strtoumax@plt>
   1a98c:	str	r1, [sp, #44]	; 0x2c
   1a990:	str	r0, [sp, #40]	; 0x28
   1a994:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a998:	ldr	r0, [r0]
   1a99c:	ldr	r1, [fp, #-8]
   1a9a0:	cmp	r0, r1
   1a9a4:	bne	1aa10 <__assert_fail@plt+0x95e4>
   1a9a8:	ldr	r0, [fp, #8]
   1a9ac:	movw	r1, #0
   1a9b0:	cmp	r0, r1
   1a9b4:	beq	1aa00 <__assert_fail@plt+0x95d4>
   1a9b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a9bc:	ldr	r0, [r0]
   1a9c0:	ldrb	r0, [r0]
   1a9c4:	cmp	r0, #0
   1a9c8:	beq	1aa00 <__assert_fail@plt+0x95d4>
   1a9cc:	ldr	r0, [fp, #8]
   1a9d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a9d4:	ldr	r1, [r1]
   1a9d8:	ldrb	r1, [r1]
   1a9dc:	bl	112f4 <strchr@plt>
   1a9e0:	movw	r1, #0
   1a9e4:	cmp	r0, r1
   1a9e8:	beq	1aa00 <__assert_fail@plt+0x95d4>
   1a9ec:	mov	r0, #0
   1a9f0:	str	r0, [sp, #44]	; 0x2c
   1a9f4:	mov	r0, #1
   1a9f8:	str	r0, [sp, #40]	; 0x28
   1a9fc:	b	1aa0c <__assert_fail@plt+0x95e0>
   1aa00:	movw	r0, #4
   1aa04:	str	r0, [fp, #-4]
   1aa08:	b	1aef8 <__assert_fail@plt+0x9acc>
   1aa0c:	b	1aa48 <__assert_fail@plt+0x961c>
   1aa10:	bl	1130c <__errno_location@plt>
   1aa14:	ldr	r0, [r0]
   1aa18:	cmp	r0, #0
   1aa1c:	beq	1aa44 <__assert_fail@plt+0x9618>
   1aa20:	bl	1130c <__errno_location@plt>
   1aa24:	ldr	r0, [r0]
   1aa28:	cmp	r0, #34	; 0x22
   1aa2c:	beq	1aa3c <__assert_fail@plt+0x9610>
   1aa30:	movw	r0, #4
   1aa34:	str	r0, [fp, #-4]
   1aa38:	b	1aef8 <__assert_fail@plt+0x9acc>
   1aa3c:	movw	r0, #1
   1aa40:	str	r0, [sp, #36]	; 0x24
   1aa44:	b	1aa48 <__assert_fail@plt+0x961c>
   1aa48:	ldr	r0, [fp, #8]
   1aa4c:	movw	r1, #0
   1aa50:	cmp	r0, r1
   1aa54:	bne	1aa78 <__assert_fail@plt+0x964c>
   1aa58:	ldr	r0, [sp, #40]	; 0x28
   1aa5c:	ldr	r1, [sp, #44]	; 0x2c
   1aa60:	ldr	r2, [fp, #-20]	; 0xffffffec
   1aa64:	str	r1, [r2, #4]
   1aa68:	str	r0, [r2]
   1aa6c:	ldr	r0, [sp, #36]	; 0x24
   1aa70:	str	r0, [fp, #-4]
   1aa74:	b	1aef8 <__assert_fail@plt+0x9acc>
   1aa78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1aa7c:	ldr	r0, [r0]
   1aa80:	ldrb	r0, [r0]
   1aa84:	cmp	r0, #0
   1aa88:	beq	1aedc <__assert_fail@plt+0x9ab0>
   1aa8c:	movw	r0, #1024	; 0x400
   1aa90:	str	r0, [sp, #24]
   1aa94:	movw	r0, #1
   1aa98:	str	r0, [sp, #20]
   1aa9c:	ldr	r0, [fp, #8]
   1aaa0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aaa4:	ldr	r1, [r1]
   1aaa8:	ldrb	r1, [r1]
   1aaac:	bl	112f4 <strchr@plt>
   1aab0:	movw	r1, #0
   1aab4:	cmp	r0, r1
   1aab8:	bne	1aae0 <__assert_fail@plt+0x96b4>
   1aabc:	ldr	r0, [sp, #40]	; 0x28
   1aac0:	ldr	r1, [sp, #44]	; 0x2c
   1aac4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1aac8:	str	r1, [r2, #4]
   1aacc:	str	r0, [r2]
   1aad0:	ldr	r0, [sp, #36]	; 0x24
   1aad4:	orr	r0, r0, #2
   1aad8:	str	r0, [fp, #-4]
   1aadc:	b	1aef8 <__assert_fail@plt+0x9acc>
   1aae0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1aae4:	ldr	r0, [r0]
   1aae8:	ldrb	r0, [r0]
   1aaec:	sub	r0, r0, #69	; 0x45
   1aaf0:	cmp	r0, #47	; 0x2f
   1aaf4:	str	r0, [sp, #8]
   1aaf8:	bhi	1ac64 <__assert_fail@plt+0x9838>
   1aafc:	add	r0, pc, #8
   1ab00:	ldr	r1, [sp, #8]
   1ab04:	ldr	r0, [r0, r1, lsl #2]
   1ab08:	mov	pc, r0
   1ab0c:	andeq	sl, r1, ip, asr #23
   1ab10:	andeq	sl, r1, r4, ror #24
   1ab14:	andeq	sl, r1, ip, asr #23
   1ab18:	andeq	sl, r1, r4, ror #24
   1ab1c:	andeq	sl, r1, r4, ror #24
   1ab20:	andeq	sl, r1, r4, ror #24
   1ab24:	andeq	sl, r1, ip, asr #23
   1ab28:	andeq	sl, r1, r4, ror #24
   1ab2c:	andeq	sl, r1, ip, asr #23
   1ab30:	andeq	sl, r1, r4, ror #24
   1ab34:	andeq	sl, r1, r4, ror #24
   1ab38:	andeq	sl, r1, ip, asr #23
   1ab3c:	andeq	sl, r1, r4, ror #24
   1ab40:	andeq	sl, r1, r4, ror #24
   1ab44:	andeq	sl, r1, r4, ror #24
   1ab48:	andeq	sl, r1, ip, asr #23
   1ab4c:	andeq	sl, r1, r4, ror #24
   1ab50:	andeq	sl, r1, r4, ror #24
   1ab54:	andeq	sl, r1, r4, ror #24
   1ab58:	andeq	sl, r1, r4, ror #24
   1ab5c:	andeq	sl, r1, ip, asr #23
   1ab60:	andeq	sl, r1, ip, asr #23
   1ab64:	andeq	sl, r1, r4, ror #24
   1ab68:	andeq	sl, r1, r4, ror #24
   1ab6c:	andeq	sl, r1, r4, ror #24
   1ab70:	andeq	sl, r1, r4, ror #24
   1ab74:	andeq	sl, r1, r4, ror #24
   1ab78:	andeq	sl, r1, r4, ror #24
   1ab7c:	andeq	sl, r1, r4, ror #24
   1ab80:	andeq	sl, r1, r4, ror #24
   1ab84:	andeq	sl, r1, r4, ror #24
   1ab88:	andeq	sl, r1, r4, ror #24
   1ab8c:	andeq	sl, r1, r4, ror #24
   1ab90:	andeq	sl, r1, r4, ror #24
   1ab94:	andeq	sl, r1, ip, asr #23
   1ab98:	andeq	sl, r1, r4, ror #24
   1ab9c:	andeq	sl, r1, r4, ror #24
   1aba0:	andeq	sl, r1, r4, ror #24
   1aba4:	andeq	sl, r1, ip, asr #23
   1aba8:	andeq	sl, r1, r4, ror #24
   1abac:	andeq	sl, r1, ip, asr #23
   1abb0:	andeq	sl, r1, r4, ror #24
   1abb4:	andeq	sl, r1, r4, ror #24
   1abb8:	andeq	sl, r1, r4, ror #24
   1abbc:	andeq	sl, r1, r4, ror #24
   1abc0:	andeq	sl, r1, r4, ror #24
   1abc4:	andeq	sl, r1, r4, ror #24
   1abc8:	andeq	sl, r1, ip, asr #23
   1abcc:	ldr	r0, [fp, #8]
   1abd0:	movw	r1, #48	; 0x30
   1abd4:	bl	112f4 <strchr@plt>
   1abd8:	movw	r1, #0
   1abdc:	cmp	r0, r1
   1abe0:	beq	1ac60 <__assert_fail@plt+0x9834>
   1abe4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1abe8:	ldr	r0, [r0]
   1abec:	ldrb	r0, [r0, #1]
   1abf0:	mov	r1, r0
   1abf4:	cmp	r0, #66	; 0x42
   1abf8:	str	r1, [sp, #4]
   1abfc:	beq	1ac48 <__assert_fail@plt+0x981c>
   1ac00:	b	1ac04 <__assert_fail@plt+0x97d8>
   1ac04:	ldr	r0, [sp, #4]
   1ac08:	cmp	r0, #68	; 0x44
   1ac0c:	beq	1ac48 <__assert_fail@plt+0x981c>
   1ac10:	b	1ac14 <__assert_fail@plt+0x97e8>
   1ac14:	ldr	r0, [sp, #4]
   1ac18:	cmp	r0, #105	; 0x69
   1ac1c:	bne	1ac5c <__assert_fail@plt+0x9830>
   1ac20:	b	1ac24 <__assert_fail@plt+0x97f8>
   1ac24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ac28:	ldr	r0, [r0]
   1ac2c:	ldrb	r0, [r0, #2]
   1ac30:	cmp	r0, #66	; 0x42
   1ac34:	bne	1ac44 <__assert_fail@plt+0x9818>
   1ac38:	ldr	r0, [sp, #20]
   1ac3c:	add	r0, r0, #2
   1ac40:	str	r0, [sp, #20]
   1ac44:	b	1ac5c <__assert_fail@plt+0x9830>
   1ac48:	movw	r0, #1000	; 0x3e8
   1ac4c:	str	r0, [sp, #24]
   1ac50:	ldr	r0, [sp, #20]
   1ac54:	add	r0, r0, #1
   1ac58:	str	r0, [sp, #20]
   1ac5c:	b	1ac60 <__assert_fail@plt+0x9834>
   1ac60:	b	1ac64 <__assert_fail@plt+0x9838>
   1ac64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ac68:	ldr	r0, [r0]
   1ac6c:	ldrb	r0, [r0]
   1ac70:	sub	r0, r0, #66	; 0x42
   1ac74:	cmp	r0, #53	; 0x35
   1ac78:	str	r0, [sp]
   1ac7c:	bhi	1ae70 <__assert_fail@plt+0x9a44>
   1ac80:	add	r0, pc, #8
   1ac84:	ldr	r1, [sp]
   1ac88:	ldr	r0, [r0, r1, lsl #2]
   1ac8c:	mov	pc, r0
   1ac90:	andeq	sl, r1, ip, ror sp
   1ac94:	andeq	sl, r1, r0, ror lr
   1ac98:	andeq	sl, r1, r0, ror lr
   1ac9c:	muleq	r1, ip, sp
   1aca0:	andeq	sl, r1, r0, ror lr
   1aca4:			; <UNDEFINED> instruction: 0x0001adb4
   1aca8:	andeq	sl, r1, r0, ror lr
   1acac:	andeq	sl, r1, r0, ror lr
   1acb0:	andeq	sl, r1, r0, ror lr
   1acb4:	andeq	sl, r1, ip, asr #27
   1acb8:	andeq	sl, r1, r0, ror lr
   1acbc:	andeq	sl, r1, r4, ror #27
   1acc0:	andeq	sl, r1, r0, ror lr
   1acc4:	andeq	sl, r1, r0, ror lr
   1acc8:	strdeq	sl, [r1], -ip
   1accc:	andeq	sl, r1, r0, ror lr
   1acd0:	andeq	sl, r1, r0, ror lr
   1acd4:	andeq	sl, r1, r0, ror lr
   1acd8:	andeq	sl, r1, r4, lsl lr
   1acdc:	andeq	sl, r1, r0, ror lr
   1ace0:	andeq	sl, r1, r0, ror lr
   1ace4:	andeq	sl, r1, r0, ror lr
   1ace8:	andeq	sl, r1, r0, ror lr
   1acec:	andeq	sl, r1, r0, asr #28
   1acf0:	andeq	sl, r1, r8, asr lr
   1acf4:	andeq	sl, r1, r0, ror lr
   1acf8:	andeq	sl, r1, r0, ror lr
   1acfc:	andeq	sl, r1, r0, ror lr
   1ad00:	andeq	sl, r1, r0, ror lr
   1ad04:	andeq	sl, r1, r0, ror lr
   1ad08:	andeq	sl, r1, r0, ror lr
   1ad0c:	andeq	sl, r1, r0, ror lr
   1ad10:	andeq	sl, r1, r8, ror #26
   1ad14:	muleq	r1, r0, sp
   1ad18:	andeq	sl, r1, r0, ror lr
   1ad1c:	andeq	sl, r1, r0, ror lr
   1ad20:	andeq	sl, r1, r0, ror lr
   1ad24:			; <UNDEFINED> instruction: 0x0001adb4
   1ad28:	andeq	sl, r1, r0, ror lr
   1ad2c:	andeq	sl, r1, r0, ror lr
   1ad30:	andeq	sl, r1, r0, ror lr
   1ad34:	andeq	sl, r1, ip, asr #27
   1ad38:	andeq	sl, r1, r0, ror lr
   1ad3c:	andeq	sl, r1, r4, ror #27
   1ad40:	andeq	sl, r1, r0, ror lr
   1ad44:	andeq	sl, r1, r0, ror lr
   1ad48:	andeq	sl, r1, r0, ror lr
   1ad4c:	andeq	sl, r1, r0, ror lr
   1ad50:	andeq	sl, r1, r0, ror lr
   1ad54:	andeq	sl, r1, r0, ror lr
   1ad58:	andeq	sl, r1, r4, lsl lr
   1ad5c:	andeq	sl, r1, r0, ror lr
   1ad60:	andeq	sl, r1, r0, ror lr
   1ad64:	andeq	sl, r1, ip, lsr #28
   1ad68:	add	r0, sp, #40	; 0x28
   1ad6c:	movw	r1, #512	; 0x200
   1ad70:	bl	1af04 <__assert_fail@plt+0x9ad8>
   1ad74:	str	r0, [sp, #16]
   1ad78:	b	1ae94 <__assert_fail@plt+0x9a68>
   1ad7c:	add	r0, sp, #40	; 0x28
   1ad80:	movw	r1, #1024	; 0x400
   1ad84:	bl	1af04 <__assert_fail@plt+0x9ad8>
   1ad88:	str	r0, [sp, #16]
   1ad8c:	b	1ae94 <__assert_fail@plt+0x9a68>
   1ad90:	movw	r0, #0
   1ad94:	str	r0, [sp, #16]
   1ad98:	b	1ae94 <__assert_fail@plt+0x9a68>
   1ad9c:	ldr	r1, [sp, #24]
   1ada0:	add	r0, sp, #40	; 0x28
   1ada4:	movw	r2, #6
   1ada8:	bl	1c77c <__assert_fail@plt+0xb350>
   1adac:	str	r0, [sp, #16]
   1adb0:	b	1ae94 <__assert_fail@plt+0x9a68>
   1adb4:	ldr	r1, [sp, #24]
   1adb8:	add	r0, sp, #40	; 0x28
   1adbc:	movw	r2, #3
   1adc0:	bl	1c77c <__assert_fail@plt+0xb350>
   1adc4:	str	r0, [sp, #16]
   1adc8:	b	1ae94 <__assert_fail@plt+0x9a68>
   1adcc:	ldr	r1, [sp, #24]
   1add0:	add	r0, sp, #40	; 0x28
   1add4:	movw	r2, #1
   1add8:	bl	1c77c <__assert_fail@plt+0xb350>
   1addc:	str	r0, [sp, #16]
   1ade0:	b	1ae94 <__assert_fail@plt+0x9a68>
   1ade4:	ldr	r1, [sp, #24]
   1ade8:	add	r0, sp, #40	; 0x28
   1adec:	movw	r2, #2
   1adf0:	bl	1c77c <__assert_fail@plt+0xb350>
   1adf4:	str	r0, [sp, #16]
   1adf8:	b	1ae94 <__assert_fail@plt+0x9a68>
   1adfc:	ldr	r1, [sp, #24]
   1ae00:	add	r0, sp, #40	; 0x28
   1ae04:	movw	r2, #5
   1ae08:	bl	1c77c <__assert_fail@plt+0xb350>
   1ae0c:	str	r0, [sp, #16]
   1ae10:	b	1ae94 <__assert_fail@plt+0x9a68>
   1ae14:	ldr	r1, [sp, #24]
   1ae18:	add	r0, sp, #40	; 0x28
   1ae1c:	movw	r2, #4
   1ae20:	bl	1c77c <__assert_fail@plt+0xb350>
   1ae24:	str	r0, [sp, #16]
   1ae28:	b	1ae94 <__assert_fail@plt+0x9a68>
   1ae2c:	add	r0, sp, #40	; 0x28
   1ae30:	movw	r1, #2
   1ae34:	bl	1af04 <__assert_fail@plt+0x9ad8>
   1ae38:	str	r0, [sp, #16]
   1ae3c:	b	1ae94 <__assert_fail@plt+0x9a68>
   1ae40:	ldr	r1, [sp, #24]
   1ae44:	add	r0, sp, #40	; 0x28
   1ae48:	movw	r2, #8
   1ae4c:	bl	1c77c <__assert_fail@plt+0xb350>
   1ae50:	str	r0, [sp, #16]
   1ae54:	b	1ae94 <__assert_fail@plt+0x9a68>
   1ae58:	ldr	r1, [sp, #24]
   1ae5c:	add	r0, sp, #40	; 0x28
   1ae60:	movw	r2, #7
   1ae64:	bl	1c77c <__assert_fail@plt+0xb350>
   1ae68:	str	r0, [sp, #16]
   1ae6c:	b	1ae94 <__assert_fail@plt+0x9a68>
   1ae70:	ldr	r0, [sp, #40]	; 0x28
   1ae74:	ldr	r1, [sp, #44]	; 0x2c
   1ae78:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ae7c:	str	r1, [r2, #4]
   1ae80:	str	r0, [r2]
   1ae84:	ldr	r0, [sp, #36]	; 0x24
   1ae88:	orr	r0, r0, #2
   1ae8c:	str	r0, [fp, #-4]
   1ae90:	b	1aef8 <__assert_fail@plt+0x9acc>
   1ae94:	ldr	r0, [sp, #16]
   1ae98:	ldr	r1, [sp, #36]	; 0x24
   1ae9c:	orr	r0, r1, r0
   1aea0:	str	r0, [sp, #36]	; 0x24
   1aea4:	ldr	r0, [sp, #20]
   1aea8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aeac:	ldr	r2, [r1]
   1aeb0:	add	r0, r2, r0
   1aeb4:	str	r0, [r1]
   1aeb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1aebc:	ldr	r0, [r0]
   1aec0:	ldrsb	r0, [r0]
   1aec4:	cmp	r0, #0
   1aec8:	beq	1aed8 <__assert_fail@plt+0x9aac>
   1aecc:	ldr	r0, [sp, #36]	; 0x24
   1aed0:	orr	r0, r0, #2
   1aed4:	str	r0, [sp, #36]	; 0x24
   1aed8:	b	1aedc <__assert_fail@plt+0x9ab0>
   1aedc:	ldr	r0, [sp, #40]	; 0x28
   1aee0:	ldr	r1, [sp, #44]	; 0x2c
   1aee4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1aee8:	str	r1, [r2, #4]
   1aeec:	str	r0, [r2]
   1aef0:	ldr	r0, [sp, #36]	; 0x24
   1aef4:	str	r0, [fp, #-4]
   1aef8:	ldr	r0, [fp, #-4]
   1aefc:	mov	sp, fp
   1af00:	pop	{fp, pc}
   1af04:	push	{fp, lr}
   1af08:	mov	fp, sp
   1af0c:	sub	sp, sp, #112	; 0x70
   1af10:	str	r0, [fp, #-8]
   1af14:	str	r1, [fp, #-12]
   1af18:	b	1b3c8 <__assert_fail@plt+0x9f9c>
   1af1c:	b	1b190 <__assert_fail@plt+0x9d64>
   1af20:	ldr	r0, [fp, #-12]
   1af24:	cmp	r0, #0
   1af28:	bge	1b080 <__assert_fail@plt+0x9c54>
   1af2c:	mov	r0, #1
   1af30:	cmp	r0, #0
   1af34:	bne	1afdc <__assert_fail@plt+0x9bb0>
   1af38:	b	1af3c <__assert_fail@plt+0x9b10>
   1af3c:	b	1af40 <__assert_fail@plt+0x9b14>
   1af40:	ldr	r0, [fp, #-8]
   1af44:	ldr	r1, [r0]
   1af48:	ldr	r0, [r0, #4]
   1af4c:	ldr	r2, [fp, #-12]
   1af50:	mov	r3, #127	; 0x7f
   1af54:	sdiv	r2, r3, r2
   1af58:	subs	r1, r1, r2
   1af5c:	sbcs	r0, r0, r2, asr #31
   1af60:	bcc	1b148 <__assert_fail@plt+0x9d1c>
   1af64:	b	1b16c <__assert_fail@plt+0x9d40>
   1af68:	b	1af6c <__assert_fail@plt+0x9b40>
   1af6c:	ldr	r0, [pc, #4076]	; 1bf60 <__assert_fail@plt+0xab34>
   1af70:	ldr	r1, [fp, #-12]
   1af74:	cmp	r1, r0
   1af78:	blt	1af90 <__assert_fail@plt+0x9b64>
   1af7c:	b	1af9c <__assert_fail@plt+0x9b70>
   1af80:	ldr	r0, [fp, #-12]
   1af84:	movw	r1, #0
   1af88:	cmp	r1, r0
   1af8c:	bge	1af9c <__assert_fail@plt+0x9b70>
   1af90:	movw	r0, #0
   1af94:	str	r0, [fp, #-28]	; 0xffffffe4
   1af98:	b	1afb4 <__assert_fail@plt+0x9b88>
   1af9c:	ldr	r0, [fp, #-12]
   1afa0:	movw	r1, #0
   1afa4:	sub	r0, r1, r0
   1afa8:	movw	r1, #127	; 0x7f
   1afac:	sdiv	r0, r1, r0
   1afb0:	str	r0, [fp, #-28]	; 0xffffffe4
   1afb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1afb8:	ldr	r1, [fp, #-8]
   1afbc:	ldr	r2, [r1]
   1afc0:	ldr	r1, [r1, #4]
   1afc4:	mvn	r1, r1
   1afc8:	mvn	r2, r2
   1afcc:	subs	r2, r2, r0
   1afd0:	sbcs	r0, r1, r0, asr #31
   1afd4:	bcs	1b148 <__assert_fail@plt+0x9d1c>
   1afd8:	b	1b16c <__assert_fail@plt+0x9d40>
   1afdc:	b	1afe0 <__assert_fail@plt+0x9bb4>
   1afe0:	b	1b058 <__assert_fail@plt+0x9c2c>
   1afe4:	b	1b058 <__assert_fail@plt+0x9c2c>
   1afe8:	ldr	r0, [fp, #-12]
   1afec:	cmn	r0, #1
   1aff0:	bne	1b058 <__assert_fail@plt+0x9c2c>
   1aff4:	b	1b018 <__assert_fail@plt+0x9bec>
   1aff8:	ldr	r0, [fp, #-8]
   1affc:	ldr	r1, [r0]
   1b000:	ldr	r0, [r0, #4]
   1b004:	eor	r1, r1, #128	; 0x80
   1b008:	orr	r0, r1, r0
   1b00c:	cmp	r0, #0
   1b010:	bne	1b148 <__assert_fail@plt+0x9d1c>
   1b014:	b	1b16c <__assert_fail@plt+0x9d40>
   1b018:	ldr	r0, [fp, #-8]
   1b01c:	ldr	r1, [r0]
   1b020:	ldr	r0, [r0, #4]
   1b024:	orr	r0, r1, r0
   1b028:	cmp	r0, #0
   1b02c:	beq	1b16c <__assert_fail@plt+0x9d40>
   1b030:	b	1b034 <__assert_fail@plt+0x9c08>
   1b034:	ldr	r0, [fp, #-8]
   1b038:	ldr	r1, [r0]
   1b03c:	ldr	r0, [r0, #4]
   1b040:	subs	r1, r1, #1
   1b044:	sbc	r0, r0, #0
   1b048:	rsbs	r1, r1, #127	; 0x7f
   1b04c:	rscs	r0, r0, #0
   1b050:	bcc	1b148 <__assert_fail@plt+0x9d1c>
   1b054:	b	1b16c <__assert_fail@plt+0x9d40>
   1b058:	ldr	r0, [fp, #-12]
   1b05c:	mvn	r1, #127	; 0x7f
   1b060:	sdiv	r0, r1, r0
   1b064:	ldr	r1, [fp, #-8]
   1b068:	ldr	r2, [r1]
   1b06c:	ldr	r1, [r1, #4]
   1b070:	subs	r2, r0, r2
   1b074:	rscs	r0, r1, r0, asr #31
   1b078:	bcc	1b148 <__assert_fail@plt+0x9d1c>
   1b07c:	b	1b16c <__assert_fail@plt+0x9d40>
   1b080:	ldr	r0, [fp, #-12]
   1b084:	cmp	r0, #0
   1b088:	bne	1b090 <__assert_fail@plt+0x9c64>
   1b08c:	b	1b16c <__assert_fail@plt+0x9d40>
   1b090:	mov	r0, #1
   1b094:	cmp	r0, #0
   1b098:	bne	1b120 <__assert_fail@plt+0x9cf4>
   1b09c:	b	1b0a0 <__assert_fail@plt+0x9c74>
   1b0a0:	ldr	r0, [fp, #-8]
   1b0a4:	ldr	r1, [r0]
   1b0a8:	ldr	r0, [r0, #4]
   1b0ac:	and	r0, r1, r0
   1b0b0:	cmn	r0, #1
   1b0b4:	bne	1b0f4 <__assert_fail@plt+0x9cc8>
   1b0b8:	b	1b0bc <__assert_fail@plt+0x9c90>
   1b0bc:	b	1b0c0 <__assert_fail@plt+0x9c94>
   1b0c0:	ldr	r0, [fp, #-12]
   1b0c4:	mvn	r1, #127	; 0x7f
   1b0c8:	add	r0, r0, r1
   1b0cc:	movw	r1, #0
   1b0d0:	cmp	r1, r0
   1b0d4:	blt	1b148 <__assert_fail@plt+0x9d1c>
   1b0d8:	b	1b16c <__assert_fail@plt+0x9d40>
   1b0dc:	ldr	r0, [fp, #-12]
   1b0e0:	sub	r0, r0, #1
   1b0e4:	movw	r1, #127	; 0x7f
   1b0e8:	cmp	r1, r0
   1b0ec:	blt	1b148 <__assert_fail@plt+0x9d1c>
   1b0f0:	b	1b16c <__assert_fail@plt+0x9d40>
   1b0f4:	ldr	r0, [fp, #-8]
   1b0f8:	ldr	r2, [r0]
   1b0fc:	ldr	r3, [r0, #4]
   1b100:	mvn	r0, #127	; 0x7f
   1b104:	mvn	r1, #0
   1b108:	bl	1f428 <__assert_fail@plt+0xdffc>
   1b10c:	ldr	r2, [fp, #-12]
   1b110:	subs	r0, r0, r2
   1b114:	sbcs	r1, r1, r2, asr #31
   1b118:	bcc	1b148 <__assert_fail@plt+0x9d1c>
   1b11c:	b	1b16c <__assert_fail@plt+0x9d40>
   1b120:	ldr	r0, [fp, #-12]
   1b124:	mov	r1, #127	; 0x7f
   1b128:	sdiv	r0, r1, r0
   1b12c:	ldr	r1, [fp, #-8]
   1b130:	ldr	r2, [r1]
   1b134:	ldr	r1, [r1, #4]
   1b138:	subs	r2, r0, r2
   1b13c:	rscs	r0, r1, r0, asr #31
   1b140:	bcs	1b16c <__assert_fail@plt+0x9d40>
   1b144:	b	1b148 <__assert_fail@plt+0x9d1c>
   1b148:	ldr	r0, [fp, #-8]
   1b14c:	ldr	r0, [r0]
   1b150:	ldr	r1, [fp, #-12]
   1b154:	mul	r0, r0, r1
   1b158:	sxtb	r0, r0
   1b15c:	asr	r1, r0, #31
   1b160:	str	r0, [fp, #-24]	; 0xffffffe8
   1b164:	str	r1, [fp, #-20]	; 0xffffffec
   1b168:	b	1c730 <__assert_fail@plt+0xb304>
   1b16c:	ldr	r0, [fp, #-8]
   1b170:	ldr	r0, [r0]
   1b174:	ldr	r1, [fp, #-12]
   1b178:	mul	r0, r0, r1
   1b17c:	sxtb	r0, r0
   1b180:	asr	r1, r0, #31
   1b184:	str	r0, [fp, #-24]	; 0xffffffe8
   1b188:	str	r1, [fp, #-20]	; 0xffffffec
   1b18c:	b	1c74c <__assert_fail@plt+0xb320>
   1b190:	ldr	r0, [fp, #-12]
   1b194:	cmp	r0, #0
   1b198:	bge	1b2cc <__assert_fail@plt+0x9ea0>
   1b19c:	mov	r0, #1
   1b1a0:	cmp	r0, #0
   1b1a4:	bne	1b24c <__assert_fail@plt+0x9e20>
   1b1a8:	b	1b1ac <__assert_fail@plt+0x9d80>
   1b1ac:	b	1b1b0 <__assert_fail@plt+0x9d84>
   1b1b0:	ldr	r0, [fp, #-8]
   1b1b4:	ldr	r1, [r0]
   1b1b8:	ldr	r0, [r0, #4]
   1b1bc:	ldr	r2, [fp, #-12]
   1b1c0:	mov	r3, #255	; 0xff
   1b1c4:	sdiv	r2, r3, r2
   1b1c8:	subs	r1, r1, r2
   1b1cc:	sbcs	r0, r0, r2, asr #31
   1b1d0:	bcc	1b380 <__assert_fail@plt+0x9f54>
   1b1d4:	b	1b3a4 <__assert_fail@plt+0x9f78>
   1b1d8:	b	1b1dc <__assert_fail@plt+0x9db0>
   1b1dc:	ldr	r0, [pc, #3452]	; 1bf60 <__assert_fail@plt+0xab34>
   1b1e0:	ldr	r1, [fp, #-12]
   1b1e4:	cmp	r1, r0
   1b1e8:	blt	1b200 <__assert_fail@plt+0x9dd4>
   1b1ec:	b	1b20c <__assert_fail@plt+0x9de0>
   1b1f0:	ldr	r0, [fp, #-12]
   1b1f4:	movw	r1, #0
   1b1f8:	cmp	r1, r0
   1b1fc:	bge	1b20c <__assert_fail@plt+0x9de0>
   1b200:	movw	r0, #0
   1b204:	str	r0, [fp, #-32]	; 0xffffffe0
   1b208:	b	1b224 <__assert_fail@plt+0x9df8>
   1b20c:	ldr	r0, [fp, #-12]
   1b210:	movw	r1, #0
   1b214:	sub	r0, r1, r0
   1b218:	movw	r1, #255	; 0xff
   1b21c:	sdiv	r0, r1, r0
   1b220:	str	r0, [fp, #-32]	; 0xffffffe0
   1b224:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b228:	ldr	r1, [fp, #-8]
   1b22c:	ldr	r2, [r1]
   1b230:	ldr	r1, [r1, #4]
   1b234:	mvn	r1, r1
   1b238:	mvn	r2, r2
   1b23c:	subs	r2, r2, r0
   1b240:	sbcs	r0, r1, r0, asr #31
   1b244:	bcs	1b380 <__assert_fail@plt+0x9f54>
   1b248:	b	1b3a4 <__assert_fail@plt+0x9f78>
   1b24c:	b	1b250 <__assert_fail@plt+0x9e24>
   1b250:	b	1b2b0 <__assert_fail@plt+0x9e84>
   1b254:	b	1b2b0 <__assert_fail@plt+0x9e84>
   1b258:	ldr	r0, [fp, #-12]
   1b25c:	cmn	r0, #1
   1b260:	bne	1b2b0 <__assert_fail@plt+0x9e84>
   1b264:	b	1b284 <__assert_fail@plt+0x9e58>
   1b268:	ldr	r0, [fp, #-8]
   1b26c:	ldr	r1, [r0]
   1b270:	ldr	r0, [r0, #4]
   1b274:	orr	r0, r1, r0
   1b278:	cmp	r0, #0
   1b27c:	bne	1b380 <__assert_fail@plt+0x9f54>
   1b280:	b	1b3a4 <__assert_fail@plt+0x9f78>
   1b284:	ldr	r0, [fp, #-8]
   1b288:	ldr	r1, [r0]
   1b28c:	ldr	r0, [r0, #4]
   1b290:	orr	r0, r1, r0
   1b294:	cmp	r0, #0
   1b298:	beq	1b3a4 <__assert_fail@plt+0x9f78>
   1b29c:	b	1b2a0 <__assert_fail@plt+0x9e74>
   1b2a0:	mov	r0, #0
   1b2a4:	cmp	r0, #0
   1b2a8:	bne	1b380 <__assert_fail@plt+0x9f54>
   1b2ac:	b	1b3a4 <__assert_fail@plt+0x9f78>
   1b2b0:	ldr	r0, [fp, #-8]
   1b2b4:	ldr	r1, [r0]
   1b2b8:	ldr	r0, [r0, #4]
   1b2bc:	orr	r0, r1, r0
   1b2c0:	cmp	r0, #0
   1b2c4:	bne	1b380 <__assert_fail@plt+0x9f54>
   1b2c8:	b	1b3a4 <__assert_fail@plt+0x9f78>
   1b2cc:	ldr	r0, [fp, #-12]
   1b2d0:	cmp	r0, #0
   1b2d4:	bne	1b2dc <__assert_fail@plt+0x9eb0>
   1b2d8:	b	1b3a4 <__assert_fail@plt+0x9f78>
   1b2dc:	mov	r0, #1
   1b2e0:	cmp	r0, #0
   1b2e4:	bne	1b358 <__assert_fail@plt+0x9f2c>
   1b2e8:	b	1b2ec <__assert_fail@plt+0x9ec0>
   1b2ec:	b	1b2f4 <__assert_fail@plt+0x9ec8>
   1b2f0:	b	1b2f8 <__assert_fail@plt+0x9ecc>
   1b2f4:	b	1b348 <__assert_fail@plt+0x9f1c>
   1b2f8:	ldr	r0, [fp, #-8]
   1b2fc:	ldr	r1, [r0]
   1b300:	ldr	r0, [r0, #4]
   1b304:	and	r0, r1, r0
   1b308:	cmn	r0, #1
   1b30c:	bne	1b348 <__assert_fail@plt+0x9f1c>
   1b310:	b	1b314 <__assert_fail@plt+0x9ee8>
   1b314:	b	1b318 <__assert_fail@plt+0x9eec>
   1b318:	ldr	r0, [fp, #-12]
   1b31c:	add	r0, r0, #0
   1b320:	movw	r1, #0
   1b324:	cmp	r1, r0
   1b328:	blt	1b380 <__assert_fail@plt+0x9f54>
   1b32c:	b	1b3a4 <__assert_fail@plt+0x9f78>
   1b330:	ldr	r0, [fp, #-12]
   1b334:	sub	r0, r0, #1
   1b338:	mvn	r1, #0
   1b33c:	cmp	r1, r0
   1b340:	blt	1b380 <__assert_fail@plt+0x9f54>
   1b344:	b	1b3a4 <__assert_fail@plt+0x9f78>
   1b348:	ldr	r0, [fp, #-12]
   1b34c:	cmp	r0, #0
   1b350:	bne	1b380 <__assert_fail@plt+0x9f54>
   1b354:	b	1b3a4 <__assert_fail@plt+0x9f78>
   1b358:	ldr	r0, [fp, #-12]
   1b35c:	mov	r1, #255	; 0xff
   1b360:	sdiv	r0, r1, r0
   1b364:	ldr	r1, [fp, #-8]
   1b368:	ldr	r2, [r1]
   1b36c:	ldr	r1, [r1, #4]
   1b370:	subs	r2, r0, r2
   1b374:	rscs	r0, r1, r0, asr #31
   1b378:	bcs	1b3a4 <__assert_fail@plt+0x9f78>
   1b37c:	b	1b380 <__assert_fail@plt+0x9f54>
   1b380:	ldr	r0, [fp, #-8]
   1b384:	ldr	r0, [r0]
   1b388:	ldr	r1, [fp, #-12]
   1b38c:	mul	r0, r0, r1
   1b390:	uxtb	r0, r0
   1b394:	mov	r1, #0
   1b398:	str	r1, [fp, #-20]	; 0xffffffec
   1b39c:	str	r0, [fp, #-24]	; 0xffffffe8
   1b3a0:	b	1c730 <__assert_fail@plt+0xb304>
   1b3a4:	ldr	r0, [fp, #-8]
   1b3a8:	ldr	r0, [r0]
   1b3ac:	ldr	r1, [fp, #-12]
   1b3b0:	mul	r0, r0, r1
   1b3b4:	uxtb	r0, r0
   1b3b8:	mov	r1, #0
   1b3bc:	str	r1, [fp, #-20]	; 0xffffffec
   1b3c0:	str	r0, [fp, #-24]	; 0xffffffe8
   1b3c4:	b	1c74c <__assert_fail@plt+0xb320>
   1b3c8:	b	1b888 <__assert_fail@plt+0xa45c>
   1b3cc:	b	1b650 <__assert_fail@plt+0xa224>
   1b3d0:	ldr	r0, [fp, #-12]
   1b3d4:	cmp	r0, #0
   1b3d8:	bge	1b53c <__assert_fail@plt+0xa110>
   1b3dc:	mov	r0, #1
   1b3e0:	cmp	r0, #0
   1b3e4:	bne	1b48c <__assert_fail@plt+0xa060>
   1b3e8:	b	1b3ec <__assert_fail@plt+0x9fc0>
   1b3ec:	b	1b3f0 <__assert_fail@plt+0x9fc4>
   1b3f0:	ldr	r0, [fp, #-8]
   1b3f4:	ldr	r1, [r0]
   1b3f8:	ldr	r0, [r0, #4]
   1b3fc:	ldr	r2, [fp, #-12]
   1b400:	movw	r3, #32767	; 0x7fff
   1b404:	sdiv	r2, r3, r2
   1b408:	subs	r1, r1, r2
   1b40c:	sbcs	r0, r0, r2, asr #31
   1b410:	bcc	1b608 <__assert_fail@plt+0xa1dc>
   1b414:	b	1b62c <__assert_fail@plt+0xa200>
   1b418:	b	1b41c <__assert_fail@plt+0x9ff0>
   1b41c:	ldr	r0, [pc, #2876]	; 1bf60 <__assert_fail@plt+0xab34>
   1b420:	ldr	r1, [fp, #-12]
   1b424:	cmp	r1, r0
   1b428:	blt	1b440 <__assert_fail@plt+0xa014>
   1b42c:	b	1b44c <__assert_fail@plt+0xa020>
   1b430:	ldr	r0, [fp, #-12]
   1b434:	movw	r1, #0
   1b438:	cmp	r1, r0
   1b43c:	bge	1b44c <__assert_fail@plt+0xa020>
   1b440:	movw	r0, #0
   1b444:	str	r0, [fp, #-36]	; 0xffffffdc
   1b448:	b	1b464 <__assert_fail@plt+0xa038>
   1b44c:	ldr	r0, [fp, #-12]
   1b450:	movw	r1, #0
   1b454:	sub	r0, r1, r0
   1b458:	movw	r1, #32767	; 0x7fff
   1b45c:	sdiv	r0, r1, r0
   1b460:	str	r0, [fp, #-36]	; 0xffffffdc
   1b464:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b468:	ldr	r1, [fp, #-8]
   1b46c:	ldr	r2, [r1]
   1b470:	ldr	r1, [r1, #4]
   1b474:	mvn	r1, r1
   1b478:	mvn	r2, r2
   1b47c:	subs	r2, r2, r0
   1b480:	sbcs	r0, r1, r0, asr #31
   1b484:	bcs	1b608 <__assert_fail@plt+0xa1dc>
   1b488:	b	1b62c <__assert_fail@plt+0xa200>
   1b48c:	b	1b490 <__assert_fail@plt+0xa064>
   1b490:	b	1b510 <__assert_fail@plt+0xa0e4>
   1b494:	b	1b510 <__assert_fail@plt+0xa0e4>
   1b498:	ldr	r0, [fp, #-12]
   1b49c:	cmn	r0, #1
   1b4a0:	bne	1b510 <__assert_fail@plt+0xa0e4>
   1b4a4:	b	1b4c8 <__assert_fail@plt+0xa09c>
   1b4a8:	ldr	r0, [fp, #-8]
   1b4ac:	ldr	r1, [r0]
   1b4b0:	ldr	r0, [r0, #4]
   1b4b4:	eor	r1, r1, #32768	; 0x8000
   1b4b8:	orr	r0, r1, r0
   1b4bc:	cmp	r0, #0
   1b4c0:	bne	1b608 <__assert_fail@plt+0xa1dc>
   1b4c4:	b	1b62c <__assert_fail@plt+0xa200>
   1b4c8:	ldr	r0, [fp, #-8]
   1b4cc:	ldr	r1, [r0]
   1b4d0:	ldr	r0, [r0, #4]
   1b4d4:	orr	r0, r1, r0
   1b4d8:	cmp	r0, #0
   1b4dc:	beq	1b62c <__assert_fail@plt+0xa200>
   1b4e0:	b	1b4e4 <__assert_fail@plt+0xa0b8>
   1b4e4:	ldr	r0, [fp, #-8]
   1b4e8:	ldr	r1, [r0]
   1b4ec:	ldr	r0, [r0, #4]
   1b4f0:	subs	r1, r1, #1
   1b4f4:	sbc	r0, r0, #0
   1b4f8:	lsr	r1, r1, #15
   1b4fc:	orr	r1, r1, r0, lsl #17
   1b500:	orr	r0, r1, r0, lsr #15
   1b504:	cmp	r0, #0
   1b508:	bne	1b608 <__assert_fail@plt+0xa1dc>
   1b50c:	b	1b62c <__assert_fail@plt+0xa200>
   1b510:	ldr	r0, [fp, #-12]
   1b514:	movw	r1, #32768	; 0x8000
   1b518:	movt	r1, #65535	; 0xffff
   1b51c:	sdiv	r0, r1, r0
   1b520:	ldr	r1, [fp, #-8]
   1b524:	ldr	r2, [r1]
   1b528:	ldr	r1, [r1, #4]
   1b52c:	subs	r2, r0, r2
   1b530:	rscs	r0, r1, r0, asr #31
   1b534:	bcc	1b608 <__assert_fail@plt+0xa1dc>
   1b538:	b	1b62c <__assert_fail@plt+0xa200>
   1b53c:	ldr	r0, [fp, #-12]
   1b540:	cmp	r0, #0
   1b544:	bne	1b54c <__assert_fail@plt+0xa120>
   1b548:	b	1b62c <__assert_fail@plt+0xa200>
   1b54c:	mov	r0, #1
   1b550:	cmp	r0, #0
   1b554:	bne	1b5e0 <__assert_fail@plt+0xa1b4>
   1b558:	b	1b55c <__assert_fail@plt+0xa130>
   1b55c:	ldr	r0, [fp, #-8]
   1b560:	ldr	r1, [r0]
   1b564:	ldr	r0, [r0, #4]
   1b568:	and	r0, r1, r0
   1b56c:	cmn	r0, #1
   1b570:	bne	1b5b0 <__assert_fail@plt+0xa184>
   1b574:	b	1b578 <__assert_fail@plt+0xa14c>
   1b578:	b	1b57c <__assert_fail@plt+0xa150>
   1b57c:	ldr	r0, [pc, #4020]	; 1c538 <__assert_fail@plt+0xb10c>
   1b580:	ldr	r1, [fp, #-12]
   1b584:	add	r0, r1, r0
   1b588:	movw	r1, #0
   1b58c:	cmp	r1, r0
   1b590:	blt	1b608 <__assert_fail@plt+0xa1dc>
   1b594:	b	1b62c <__assert_fail@plt+0xa200>
   1b598:	ldr	r0, [fp, #-12]
   1b59c:	sub	r0, r0, #1
   1b5a0:	movw	r1, #32767	; 0x7fff
   1b5a4:	cmp	r1, r0
   1b5a8:	blt	1b608 <__assert_fail@plt+0xa1dc>
   1b5ac:	b	1b62c <__assert_fail@plt+0xa200>
   1b5b0:	ldr	r0, [fp, #-8]
   1b5b4:	ldr	r2, [r0]
   1b5b8:	ldr	r3, [r0, #4]
   1b5bc:	movw	r0, #32768	; 0x8000
   1b5c0:	movt	r0, #65535	; 0xffff
   1b5c4:	mvn	r1, #0
   1b5c8:	bl	1f428 <__assert_fail@plt+0xdffc>
   1b5cc:	ldr	r2, [fp, #-12]
   1b5d0:	subs	r0, r0, r2
   1b5d4:	sbcs	r1, r1, r2, asr #31
   1b5d8:	bcc	1b608 <__assert_fail@plt+0xa1dc>
   1b5dc:	b	1b62c <__assert_fail@plt+0xa200>
   1b5e0:	ldr	r0, [fp, #-12]
   1b5e4:	movw	r1, #32767	; 0x7fff
   1b5e8:	sdiv	r0, r1, r0
   1b5ec:	ldr	r1, [fp, #-8]
   1b5f0:	ldr	r2, [r1]
   1b5f4:	ldr	r1, [r1, #4]
   1b5f8:	subs	r2, r0, r2
   1b5fc:	rscs	r0, r1, r0, asr #31
   1b600:	bcs	1b62c <__assert_fail@plt+0xa200>
   1b604:	b	1b608 <__assert_fail@plt+0xa1dc>
   1b608:	ldr	r0, [fp, #-8]
   1b60c:	ldr	r0, [r0]
   1b610:	ldr	r1, [fp, #-12]
   1b614:	mul	r0, r0, r1
   1b618:	sxth	r0, r0
   1b61c:	asr	r1, r0, #31
   1b620:	str	r0, [fp, #-24]	; 0xffffffe8
   1b624:	str	r1, [fp, #-20]	; 0xffffffec
   1b628:	b	1c730 <__assert_fail@plt+0xb304>
   1b62c:	ldr	r0, [fp, #-8]
   1b630:	ldr	r0, [r0]
   1b634:	ldr	r1, [fp, #-12]
   1b638:	mul	r0, r0, r1
   1b63c:	sxth	r0, r0
   1b640:	asr	r1, r0, #31
   1b644:	str	r0, [fp, #-24]	; 0xffffffe8
   1b648:	str	r1, [fp, #-20]	; 0xffffffec
   1b64c:	b	1c74c <__assert_fail@plt+0xb320>
   1b650:	ldr	r0, [fp, #-12]
   1b654:	cmp	r0, #0
   1b658:	bge	1b78c <__assert_fail@plt+0xa360>
   1b65c:	mov	r0, #1
   1b660:	cmp	r0, #0
   1b664:	bne	1b70c <__assert_fail@plt+0xa2e0>
   1b668:	b	1b66c <__assert_fail@plt+0xa240>
   1b66c:	b	1b670 <__assert_fail@plt+0xa244>
   1b670:	ldr	r0, [fp, #-8]
   1b674:	ldr	r1, [r0]
   1b678:	ldr	r0, [r0, #4]
   1b67c:	ldr	r2, [fp, #-12]
   1b680:	movw	r3, #65535	; 0xffff
   1b684:	sdiv	r2, r3, r2
   1b688:	subs	r1, r1, r2
   1b68c:	sbcs	r0, r0, r2, asr #31
   1b690:	bcc	1b840 <__assert_fail@plt+0xa414>
   1b694:	b	1b864 <__assert_fail@plt+0xa438>
   1b698:	b	1b69c <__assert_fail@plt+0xa270>
   1b69c:	ldr	r0, [pc, #2236]	; 1bf60 <__assert_fail@plt+0xab34>
   1b6a0:	ldr	r1, [fp, #-12]
   1b6a4:	cmp	r1, r0
   1b6a8:	blt	1b6c0 <__assert_fail@plt+0xa294>
   1b6ac:	b	1b6cc <__assert_fail@plt+0xa2a0>
   1b6b0:	ldr	r0, [fp, #-12]
   1b6b4:	movw	r1, #0
   1b6b8:	cmp	r1, r0
   1b6bc:	bge	1b6cc <__assert_fail@plt+0xa2a0>
   1b6c0:	movw	r0, #0
   1b6c4:	str	r0, [fp, #-40]	; 0xffffffd8
   1b6c8:	b	1b6e4 <__assert_fail@plt+0xa2b8>
   1b6cc:	ldr	r0, [fp, #-12]
   1b6d0:	movw	r1, #0
   1b6d4:	sub	r0, r1, r0
   1b6d8:	movw	r1, #65535	; 0xffff
   1b6dc:	sdiv	r0, r1, r0
   1b6e0:	str	r0, [fp, #-40]	; 0xffffffd8
   1b6e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b6e8:	ldr	r1, [fp, #-8]
   1b6ec:	ldr	r2, [r1]
   1b6f0:	ldr	r1, [r1, #4]
   1b6f4:	mvn	r1, r1
   1b6f8:	mvn	r2, r2
   1b6fc:	subs	r2, r2, r0
   1b700:	sbcs	r0, r1, r0, asr #31
   1b704:	bcs	1b840 <__assert_fail@plt+0xa414>
   1b708:	b	1b864 <__assert_fail@plt+0xa438>
   1b70c:	b	1b710 <__assert_fail@plt+0xa2e4>
   1b710:	b	1b770 <__assert_fail@plt+0xa344>
   1b714:	b	1b770 <__assert_fail@plt+0xa344>
   1b718:	ldr	r0, [fp, #-12]
   1b71c:	cmn	r0, #1
   1b720:	bne	1b770 <__assert_fail@plt+0xa344>
   1b724:	b	1b744 <__assert_fail@plt+0xa318>
   1b728:	ldr	r0, [fp, #-8]
   1b72c:	ldr	r1, [r0]
   1b730:	ldr	r0, [r0, #4]
   1b734:	orr	r0, r1, r0
   1b738:	cmp	r0, #0
   1b73c:	bne	1b840 <__assert_fail@plt+0xa414>
   1b740:	b	1b864 <__assert_fail@plt+0xa438>
   1b744:	ldr	r0, [fp, #-8]
   1b748:	ldr	r1, [r0]
   1b74c:	ldr	r0, [r0, #4]
   1b750:	orr	r0, r1, r0
   1b754:	cmp	r0, #0
   1b758:	beq	1b864 <__assert_fail@plt+0xa438>
   1b75c:	b	1b760 <__assert_fail@plt+0xa334>
   1b760:	mov	r0, #0
   1b764:	cmp	r0, #0
   1b768:	bne	1b840 <__assert_fail@plt+0xa414>
   1b76c:	b	1b864 <__assert_fail@plt+0xa438>
   1b770:	ldr	r0, [fp, #-8]
   1b774:	ldr	r1, [r0]
   1b778:	ldr	r0, [r0, #4]
   1b77c:	orr	r0, r1, r0
   1b780:	cmp	r0, #0
   1b784:	bne	1b840 <__assert_fail@plt+0xa414>
   1b788:	b	1b864 <__assert_fail@plt+0xa438>
   1b78c:	ldr	r0, [fp, #-12]
   1b790:	cmp	r0, #0
   1b794:	bne	1b79c <__assert_fail@plt+0xa370>
   1b798:	b	1b864 <__assert_fail@plt+0xa438>
   1b79c:	mov	r0, #1
   1b7a0:	cmp	r0, #0
   1b7a4:	bne	1b818 <__assert_fail@plt+0xa3ec>
   1b7a8:	b	1b7ac <__assert_fail@plt+0xa380>
   1b7ac:	b	1b7b4 <__assert_fail@plt+0xa388>
   1b7b0:	b	1b7b8 <__assert_fail@plt+0xa38c>
   1b7b4:	b	1b808 <__assert_fail@plt+0xa3dc>
   1b7b8:	ldr	r0, [fp, #-8]
   1b7bc:	ldr	r1, [r0]
   1b7c0:	ldr	r0, [r0, #4]
   1b7c4:	and	r0, r1, r0
   1b7c8:	cmn	r0, #1
   1b7cc:	bne	1b808 <__assert_fail@plt+0xa3dc>
   1b7d0:	b	1b7d4 <__assert_fail@plt+0xa3a8>
   1b7d4:	b	1b7d8 <__assert_fail@plt+0xa3ac>
   1b7d8:	ldr	r0, [fp, #-12]
   1b7dc:	add	r0, r0, #0
   1b7e0:	movw	r1, #0
   1b7e4:	cmp	r1, r0
   1b7e8:	blt	1b840 <__assert_fail@plt+0xa414>
   1b7ec:	b	1b864 <__assert_fail@plt+0xa438>
   1b7f0:	ldr	r0, [fp, #-12]
   1b7f4:	sub	r0, r0, #1
   1b7f8:	mvn	r1, #0
   1b7fc:	cmp	r1, r0
   1b800:	blt	1b840 <__assert_fail@plt+0xa414>
   1b804:	b	1b864 <__assert_fail@plt+0xa438>
   1b808:	ldr	r0, [fp, #-12]
   1b80c:	cmp	r0, #0
   1b810:	bne	1b840 <__assert_fail@plt+0xa414>
   1b814:	b	1b864 <__assert_fail@plt+0xa438>
   1b818:	ldr	r0, [fp, #-12]
   1b81c:	movw	r1, #65535	; 0xffff
   1b820:	sdiv	r0, r1, r0
   1b824:	ldr	r1, [fp, #-8]
   1b828:	ldr	r2, [r1]
   1b82c:	ldr	r1, [r1, #4]
   1b830:	subs	r2, r0, r2
   1b834:	rscs	r0, r1, r0, asr #31
   1b838:	bcs	1b864 <__assert_fail@plt+0xa438>
   1b83c:	b	1b840 <__assert_fail@plt+0xa414>
   1b840:	ldr	r0, [fp, #-8]
   1b844:	ldr	r0, [r0]
   1b848:	ldr	r1, [fp, #-12]
   1b84c:	mul	r0, r0, r1
   1b850:	uxth	r0, r0
   1b854:	mov	r1, #0
   1b858:	str	r1, [fp, #-20]	; 0xffffffec
   1b85c:	str	r0, [fp, #-24]	; 0xffffffe8
   1b860:	b	1c730 <__assert_fail@plt+0xb304>
   1b864:	ldr	r0, [fp, #-8]
   1b868:	ldr	r0, [r0]
   1b86c:	ldr	r1, [fp, #-12]
   1b870:	mul	r0, r0, r1
   1b874:	uxth	r0, r0
   1b878:	mov	r1, #0
   1b87c:	str	r1, [fp, #-20]	; 0xffffffec
   1b880:	str	r0, [fp, #-24]	; 0xffffffe8
   1b884:	b	1c74c <__assert_fail@plt+0xb320>
   1b888:	b	1bd1c <__assert_fail@plt+0xa8f0>
   1b88c:	b	1baec <__assert_fail@plt+0xa6c0>
   1b890:	ldr	r0, [fp, #-12]
   1b894:	cmp	r0, #0
   1b898:	bge	1b9e8 <__assert_fail@plt+0xa5bc>
   1b89c:	mov	r0, #1
   1b8a0:	cmp	r0, #0
   1b8a4:	bne	1b94c <__assert_fail@plt+0xa520>
   1b8a8:	b	1b8ac <__assert_fail@plt+0xa480>
   1b8ac:	b	1b8b0 <__assert_fail@plt+0xa484>
   1b8b0:	ldr	r0, [fp, #-8]
   1b8b4:	ldr	r1, [r0]
   1b8b8:	ldr	r0, [r0, #4]
   1b8bc:	ldr	r2, [fp, #-12]
   1b8c0:	mvn	r3, #-2147483648	; 0x80000000
   1b8c4:	sdiv	r2, r3, r2
   1b8c8:	subs	r1, r1, r2
   1b8cc:	sbcs	r0, r0, r2, asr #31
   1b8d0:	bcc	1baac <__assert_fail@plt+0xa680>
   1b8d4:	b	1bacc <__assert_fail@plt+0xa6a0>
   1b8d8:	b	1b8dc <__assert_fail@plt+0xa4b0>
   1b8dc:	ldr	r0, [pc, #3728]	; 1c774 <__assert_fail@plt+0xb348>
   1b8e0:	ldr	r1, [fp, #-12]
   1b8e4:	cmp	r1, r0
   1b8e8:	blt	1b900 <__assert_fail@plt+0xa4d4>
   1b8ec:	b	1b90c <__assert_fail@plt+0xa4e0>
   1b8f0:	ldr	r0, [fp, #-12]
   1b8f4:	movw	r1, #0
   1b8f8:	cmp	r1, r0
   1b8fc:	bge	1b90c <__assert_fail@plt+0xa4e0>
   1b900:	movw	r0, #0
   1b904:	str	r0, [fp, #-44]	; 0xffffffd4
   1b908:	b	1b924 <__assert_fail@plt+0xa4f8>
   1b90c:	ldr	r0, [pc, #3684]	; 1c778 <__assert_fail@plt+0xb34c>
   1b910:	ldr	r1, [fp, #-12]
   1b914:	movw	r2, #0
   1b918:	sub	r1, r2, r1
   1b91c:	sdiv	r0, r0, r1
   1b920:	str	r0, [fp, #-44]	; 0xffffffd4
   1b924:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b928:	ldr	r1, [fp, #-8]
   1b92c:	ldr	r2, [r1]
   1b930:	ldr	r1, [r1, #4]
   1b934:	mvn	r1, r1
   1b938:	mvn	r2, r2
   1b93c:	subs	r2, r2, r0
   1b940:	sbcs	r0, r1, r0, asr #31
   1b944:	bcs	1baac <__assert_fail@plt+0xa680>
   1b948:	b	1bacc <__assert_fail@plt+0xa6a0>
   1b94c:	ldr	r0, [fp, #-12]
   1b950:	cmn	r0, #1
   1b954:	bne	1b9c0 <__assert_fail@plt+0xa594>
   1b958:	b	1b97c <__assert_fail@plt+0xa550>
   1b95c:	ldr	r0, [fp, #-8]
   1b960:	ldr	r1, [r0]
   1b964:	ldr	r0, [r0, #4]
   1b968:	eor	r1, r1, #-2147483648	; 0x80000000
   1b96c:	orr	r0, r1, r0
   1b970:	cmp	r0, #0
   1b974:	bne	1baac <__assert_fail@plt+0xa680>
   1b978:	b	1bacc <__assert_fail@plt+0xa6a0>
   1b97c:	ldr	r0, [fp, #-8]
   1b980:	ldr	r1, [r0]
   1b984:	ldr	r0, [r0, #4]
   1b988:	orr	r0, r1, r0
   1b98c:	cmp	r0, #0
   1b990:	beq	1bacc <__assert_fail@plt+0xa6a0>
   1b994:	b	1b998 <__assert_fail@plt+0xa56c>
   1b998:	ldr	r0, [fp, #-8]
   1b99c:	ldr	r1, [r0]
   1b9a0:	ldr	r0, [r0, #4]
   1b9a4:	subs	r1, r1, #1
   1b9a8:	sbc	r0, r0, #0
   1b9ac:	mvn	r2, #-2147483648	; 0x80000000
   1b9b0:	subs	r1, r2, r1
   1b9b4:	rscs	r0, r0, #0
   1b9b8:	bcc	1baac <__assert_fail@plt+0xa680>
   1b9bc:	b	1bacc <__assert_fail@plt+0xa6a0>
   1b9c0:	ldr	r0, [fp, #-12]
   1b9c4:	mov	r1, #-2147483648	; 0x80000000
   1b9c8:	sdiv	r0, r1, r0
   1b9cc:	ldr	r1, [fp, #-8]
   1b9d0:	ldr	r2, [r1]
   1b9d4:	ldr	r1, [r1, #4]
   1b9d8:	subs	r2, r0, r2
   1b9dc:	rscs	r0, r1, r0, asr #31
   1b9e0:	bcc	1baac <__assert_fail@plt+0xa680>
   1b9e4:	b	1bacc <__assert_fail@plt+0xa6a0>
   1b9e8:	ldr	r0, [fp, #-12]
   1b9ec:	cmp	r0, #0
   1b9f0:	bne	1b9f8 <__assert_fail@plt+0xa5cc>
   1b9f4:	b	1bacc <__assert_fail@plt+0xa6a0>
   1b9f8:	mov	r0, #1
   1b9fc:	cmp	r0, #0
   1ba00:	bne	1ba84 <__assert_fail@plt+0xa658>
   1ba04:	b	1ba08 <__assert_fail@plt+0xa5dc>
   1ba08:	ldr	r0, [fp, #-8]
   1ba0c:	ldr	r1, [r0]
   1ba10:	ldr	r0, [r0, #4]
   1ba14:	and	r0, r1, r0
   1ba18:	cmn	r0, #1
   1ba1c:	bne	1ba58 <__assert_fail@plt+0xa62c>
   1ba20:	b	1ba24 <__assert_fail@plt+0xa5f8>
   1ba24:	b	1ba28 <__assert_fail@plt+0xa5fc>
   1ba28:	ldr	r0, [fp, #-12]
   1ba2c:	add	r0, r0, #-2147483648	; 0x80000000
   1ba30:	movw	r1, #0
   1ba34:	cmp	r1, r0
   1ba38:	blt	1baac <__assert_fail@plt+0xa680>
   1ba3c:	b	1bacc <__assert_fail@plt+0xa6a0>
   1ba40:	ldr	r0, [pc, #3376]	; 1c778 <__assert_fail@plt+0xb34c>
   1ba44:	ldr	r1, [fp, #-12]
   1ba48:	sub	r1, r1, #1
   1ba4c:	cmp	r0, r1
   1ba50:	blt	1baac <__assert_fail@plt+0xa680>
   1ba54:	b	1bacc <__assert_fail@plt+0xa6a0>
   1ba58:	ldr	r0, [fp, #-8]
   1ba5c:	ldr	r2, [r0]
   1ba60:	ldr	r3, [r0, #4]
   1ba64:	mov	r0, #-2147483648	; 0x80000000
   1ba68:	mvn	r1, #0
   1ba6c:	bl	1f428 <__assert_fail@plt+0xdffc>
   1ba70:	ldr	r2, [fp, #-12]
   1ba74:	subs	r0, r0, r2
   1ba78:	sbcs	r1, r1, r2, asr #31
   1ba7c:	bcc	1baac <__assert_fail@plt+0xa680>
   1ba80:	b	1bacc <__assert_fail@plt+0xa6a0>
   1ba84:	ldr	r0, [fp, #-12]
   1ba88:	mvn	r1, #-2147483648	; 0x80000000
   1ba8c:	sdiv	r0, r1, r0
   1ba90:	ldr	r1, [fp, #-8]
   1ba94:	ldr	r2, [r1]
   1ba98:	ldr	r1, [r1, #4]
   1ba9c:	subs	r2, r0, r2
   1baa0:	rscs	r0, r1, r0, asr #31
   1baa4:	bcs	1bacc <__assert_fail@plt+0xa6a0>
   1baa8:	b	1baac <__assert_fail@plt+0xa680>
   1baac:	ldr	r0, [fp, #-8]
   1bab0:	ldr	r0, [r0]
   1bab4:	ldr	r1, [fp, #-12]
   1bab8:	mul	r0, r0, r1
   1babc:	asr	r1, r0, #31
   1bac0:	str	r0, [fp, #-24]	; 0xffffffe8
   1bac4:	str	r1, [fp, #-20]	; 0xffffffec
   1bac8:	b	1c730 <__assert_fail@plt+0xb304>
   1bacc:	ldr	r0, [fp, #-8]
   1bad0:	ldr	r0, [r0]
   1bad4:	ldr	r1, [fp, #-12]
   1bad8:	mul	r0, r0, r1
   1badc:	asr	r1, r0, #31
   1bae0:	str	r0, [fp, #-24]	; 0xffffffe8
   1bae4:	str	r1, [fp, #-20]	; 0xffffffec
   1bae8:	b	1c74c <__assert_fail@plt+0xb320>
   1baec:	ldr	r0, [fp, #-12]
   1baf0:	cmp	r0, #0
   1baf4:	bge	1bc28 <__assert_fail@plt+0xa7fc>
   1baf8:	mov	r0, #1
   1bafc:	cmp	r0, #0
   1bb00:	bne	1bba8 <__assert_fail@plt+0xa77c>
   1bb04:	b	1bb08 <__assert_fail@plt+0xa6dc>
   1bb08:	b	1bb34 <__assert_fail@plt+0xa708>
   1bb0c:	ldr	r0, [fp, #-8]
   1bb10:	ldr	r1, [r0]
   1bb14:	ldr	r0, [r0, #4]
   1bb18:	ldr	r2, [fp, #-12]
   1bb1c:	mvn	r3, #0
   1bb20:	udiv	r2, r3, r2
   1bb24:	subs	r1, r1, r2
   1bb28:	sbcs	r0, r0, #0
   1bb2c:	bcc	1bcdc <__assert_fail@plt+0xa8b0>
   1bb30:	b	1bcfc <__assert_fail@plt+0xa8d0>
   1bb34:	b	1bb38 <__assert_fail@plt+0xa70c>
   1bb38:	ldr	r0, [pc, #3124]	; 1c774 <__assert_fail@plt+0xb348>
   1bb3c:	ldr	r1, [fp, #-12]
   1bb40:	cmp	r1, r0
   1bb44:	blt	1bb5c <__assert_fail@plt+0xa730>
   1bb48:	b	1bb68 <__assert_fail@plt+0xa73c>
   1bb4c:	ldr	r0, [fp, #-12]
   1bb50:	movw	r1, #0
   1bb54:	cmp	r1, r0
   1bb58:	bge	1bb68 <__assert_fail@plt+0xa73c>
   1bb5c:	movw	r0, #1
   1bb60:	str	r0, [fp, #-48]	; 0xffffffd0
   1bb64:	b	1bb80 <__assert_fail@plt+0xa754>
   1bb68:	ldr	r0, [fp, #-12]
   1bb6c:	movw	r1, #0
   1bb70:	sub	r0, r1, r0
   1bb74:	mvn	r1, #0
   1bb78:	udiv	r0, r1, r0
   1bb7c:	str	r0, [fp, #-48]	; 0xffffffd0
   1bb80:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1bb84:	ldr	r1, [fp, #-8]
   1bb88:	ldr	r2, [r1]
   1bb8c:	ldr	r1, [r1, #4]
   1bb90:	mvn	r1, r1
   1bb94:	mvn	r2, r2
   1bb98:	subs	r0, r2, r0
   1bb9c:	sbcs	r1, r1, #0
   1bba0:	bcs	1bcdc <__assert_fail@plt+0xa8b0>
   1bba4:	b	1bcfc <__assert_fail@plt+0xa8d0>
   1bba8:	b	1bbac <__assert_fail@plt+0xa780>
   1bbac:	b	1bc0c <__assert_fail@plt+0xa7e0>
   1bbb0:	b	1bc0c <__assert_fail@plt+0xa7e0>
   1bbb4:	ldr	r0, [fp, #-12]
   1bbb8:	cmn	r0, #1
   1bbbc:	bne	1bc0c <__assert_fail@plt+0xa7e0>
   1bbc0:	b	1bbe0 <__assert_fail@plt+0xa7b4>
   1bbc4:	ldr	r0, [fp, #-8]
   1bbc8:	ldr	r1, [r0]
   1bbcc:	ldr	r0, [r0, #4]
   1bbd0:	orr	r0, r1, r0
   1bbd4:	cmp	r0, #0
   1bbd8:	bne	1bcdc <__assert_fail@plt+0xa8b0>
   1bbdc:	b	1bcfc <__assert_fail@plt+0xa8d0>
   1bbe0:	ldr	r0, [fp, #-8]
   1bbe4:	ldr	r1, [r0]
   1bbe8:	ldr	r0, [r0, #4]
   1bbec:	orr	r0, r1, r0
   1bbf0:	cmp	r0, #0
   1bbf4:	beq	1bcfc <__assert_fail@plt+0xa8d0>
   1bbf8:	b	1bbfc <__assert_fail@plt+0xa7d0>
   1bbfc:	mov	r0, #0
   1bc00:	cmp	r0, #0
   1bc04:	bne	1bcdc <__assert_fail@plt+0xa8b0>
   1bc08:	b	1bcfc <__assert_fail@plt+0xa8d0>
   1bc0c:	ldr	r0, [fp, #-8]
   1bc10:	ldr	r1, [r0]
   1bc14:	ldr	r0, [r0, #4]
   1bc18:	orr	r0, r1, r0
   1bc1c:	cmp	r0, #0
   1bc20:	bne	1bcdc <__assert_fail@plt+0xa8b0>
   1bc24:	b	1bcfc <__assert_fail@plt+0xa8d0>
   1bc28:	ldr	r0, [fp, #-12]
   1bc2c:	cmp	r0, #0
   1bc30:	bne	1bc38 <__assert_fail@plt+0xa80c>
   1bc34:	b	1bcfc <__assert_fail@plt+0xa8d0>
   1bc38:	mov	r0, #1
   1bc3c:	cmp	r0, #0
   1bc40:	bne	1bcb4 <__assert_fail@plt+0xa888>
   1bc44:	b	1bc48 <__assert_fail@plt+0xa81c>
   1bc48:	b	1bc50 <__assert_fail@plt+0xa824>
   1bc4c:	b	1bc54 <__assert_fail@plt+0xa828>
   1bc50:	b	1bca4 <__assert_fail@plt+0xa878>
   1bc54:	ldr	r0, [fp, #-8]
   1bc58:	ldr	r1, [r0]
   1bc5c:	ldr	r0, [r0, #4]
   1bc60:	and	r0, r1, r0
   1bc64:	cmn	r0, #1
   1bc68:	bne	1bca4 <__assert_fail@plt+0xa878>
   1bc6c:	b	1bc70 <__assert_fail@plt+0xa844>
   1bc70:	b	1bc74 <__assert_fail@plt+0xa848>
   1bc74:	ldr	r0, [fp, #-12]
   1bc78:	add	r0, r0, #0
   1bc7c:	movw	r1, #0
   1bc80:	cmp	r1, r0
   1bc84:	blt	1bcdc <__assert_fail@plt+0xa8b0>
   1bc88:	b	1bcfc <__assert_fail@plt+0xa8d0>
   1bc8c:	ldr	r0, [fp, #-12]
   1bc90:	sub	r0, r0, #1
   1bc94:	mvn	r1, #0
   1bc98:	cmp	r1, r0
   1bc9c:	blt	1bcdc <__assert_fail@plt+0xa8b0>
   1bca0:	b	1bcfc <__assert_fail@plt+0xa8d0>
   1bca4:	ldr	r0, [fp, #-12]
   1bca8:	cmp	r0, #0
   1bcac:	bne	1bcdc <__assert_fail@plt+0xa8b0>
   1bcb0:	b	1bcfc <__assert_fail@plt+0xa8d0>
   1bcb4:	ldr	r0, [fp, #-12]
   1bcb8:	mvn	r1, #0
   1bcbc:	udiv	r0, r1, r0
   1bcc0:	ldr	r1, [fp, #-8]
   1bcc4:	ldr	r2, [r1]
   1bcc8:	ldr	r1, [r1, #4]
   1bccc:	subs	r0, r0, r2
   1bcd0:	rscs	r1, r1, #0
   1bcd4:	bcs	1bcfc <__assert_fail@plt+0xa8d0>
   1bcd8:	b	1bcdc <__assert_fail@plt+0xa8b0>
   1bcdc:	ldr	r0, [fp, #-8]
   1bce0:	ldr	r0, [r0]
   1bce4:	ldr	r1, [fp, #-12]
   1bce8:	mul	r0, r0, r1
   1bcec:	mov	r1, #0
   1bcf0:	str	r1, [fp, #-20]	; 0xffffffec
   1bcf4:	str	r0, [fp, #-24]	; 0xffffffe8
   1bcf8:	b	1c730 <__assert_fail@plt+0xb304>
   1bcfc:	ldr	r0, [fp, #-8]
   1bd00:	ldr	r0, [r0]
   1bd04:	ldr	r1, [fp, #-12]
   1bd08:	mul	r0, r0, r1
   1bd0c:	mov	r1, #0
   1bd10:	str	r1, [fp, #-20]	; 0xffffffec
   1bd14:	str	r0, [fp, #-24]	; 0xffffffe8
   1bd18:	b	1c74c <__assert_fail@plt+0xb320>
   1bd1c:	b	1c1b4 <__assert_fail@plt+0xad88>
   1bd20:	b	1bf84 <__assert_fail@plt+0xab58>
   1bd24:	ldr	r0, [fp, #-12]
   1bd28:	cmp	r0, #0
   1bd2c:	bge	1be7c <__assert_fail@plt+0xaa50>
   1bd30:	mov	r0, #1
   1bd34:	cmp	r0, #0
   1bd38:	bne	1bde0 <__assert_fail@plt+0xa9b4>
   1bd3c:	b	1bd40 <__assert_fail@plt+0xa914>
   1bd40:	b	1bd44 <__assert_fail@plt+0xa918>
   1bd44:	ldr	r0, [fp, #-8]
   1bd48:	ldr	r1, [r0]
   1bd4c:	ldr	r0, [r0, #4]
   1bd50:	ldr	r2, [fp, #-12]
   1bd54:	mvn	r3, #-2147483648	; 0x80000000
   1bd58:	sdiv	r2, r3, r2
   1bd5c:	subs	r1, r1, r2
   1bd60:	sbcs	r0, r0, r2, asr #31
   1bd64:	bcc	1bf40 <__assert_fail@plt+0xab14>
   1bd68:	b	1bf64 <__assert_fail@plt+0xab38>
   1bd6c:	b	1bd70 <__assert_fail@plt+0xa944>
   1bd70:	ldr	r0, [pc, #2556]	; 1c774 <__assert_fail@plt+0xb348>
   1bd74:	ldr	r1, [fp, #-12]
   1bd78:	cmp	r1, r0
   1bd7c:	blt	1bd94 <__assert_fail@plt+0xa968>
   1bd80:	b	1bda0 <__assert_fail@plt+0xa974>
   1bd84:	ldr	r0, [fp, #-12]
   1bd88:	movw	r1, #0
   1bd8c:	cmp	r1, r0
   1bd90:	bge	1bda0 <__assert_fail@plt+0xa974>
   1bd94:	movw	r0, #0
   1bd98:	str	r0, [fp, #-52]	; 0xffffffcc
   1bd9c:	b	1bdb8 <__assert_fail@plt+0xa98c>
   1bda0:	ldr	r0, [pc, #2512]	; 1c778 <__assert_fail@plt+0xb34c>
   1bda4:	ldr	r1, [fp, #-12]
   1bda8:	movw	r2, #0
   1bdac:	sub	r1, r2, r1
   1bdb0:	sdiv	r0, r0, r1
   1bdb4:	str	r0, [fp, #-52]	; 0xffffffcc
   1bdb8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1bdbc:	ldr	r1, [fp, #-8]
   1bdc0:	ldr	r2, [r1]
   1bdc4:	ldr	r1, [r1, #4]
   1bdc8:	mvn	r1, r1
   1bdcc:	mvn	r2, r2
   1bdd0:	subs	r2, r2, r0
   1bdd4:	sbcs	r0, r1, r0, asr #31
   1bdd8:	bcs	1bf40 <__assert_fail@plt+0xab14>
   1bddc:	b	1bf64 <__assert_fail@plt+0xab38>
   1bde0:	ldr	r0, [fp, #-12]
   1bde4:	cmn	r0, #1
   1bde8:	bne	1be54 <__assert_fail@plt+0xaa28>
   1bdec:	b	1be10 <__assert_fail@plt+0xa9e4>
   1bdf0:	ldr	r0, [fp, #-8]
   1bdf4:	ldr	r1, [r0]
   1bdf8:	ldr	r0, [r0, #4]
   1bdfc:	eor	r1, r1, #-2147483648	; 0x80000000
   1be00:	orr	r0, r1, r0
   1be04:	cmp	r0, #0
   1be08:	bne	1bf40 <__assert_fail@plt+0xab14>
   1be0c:	b	1bf64 <__assert_fail@plt+0xab38>
   1be10:	ldr	r0, [fp, #-8]
   1be14:	ldr	r1, [r0]
   1be18:	ldr	r0, [r0, #4]
   1be1c:	orr	r0, r1, r0
   1be20:	cmp	r0, #0
   1be24:	beq	1bf64 <__assert_fail@plt+0xab38>
   1be28:	b	1be2c <__assert_fail@plt+0xaa00>
   1be2c:	ldr	r0, [fp, #-8]
   1be30:	ldr	r1, [r0]
   1be34:	ldr	r0, [r0, #4]
   1be38:	subs	r1, r1, #1
   1be3c:	sbc	r0, r0, #0
   1be40:	mvn	r2, #-2147483648	; 0x80000000
   1be44:	subs	r1, r2, r1
   1be48:	rscs	r0, r0, #0
   1be4c:	bcc	1bf40 <__assert_fail@plt+0xab14>
   1be50:	b	1bf64 <__assert_fail@plt+0xab38>
   1be54:	ldr	r0, [fp, #-12]
   1be58:	mov	r1, #-2147483648	; 0x80000000
   1be5c:	sdiv	r0, r1, r0
   1be60:	ldr	r1, [fp, #-8]
   1be64:	ldr	r2, [r1]
   1be68:	ldr	r1, [r1, #4]
   1be6c:	subs	r2, r0, r2
   1be70:	rscs	r0, r1, r0, asr #31
   1be74:	bcc	1bf40 <__assert_fail@plt+0xab14>
   1be78:	b	1bf64 <__assert_fail@plt+0xab38>
   1be7c:	ldr	r0, [fp, #-12]
   1be80:	cmp	r0, #0
   1be84:	bne	1be8c <__assert_fail@plt+0xaa60>
   1be88:	b	1bf64 <__assert_fail@plt+0xab38>
   1be8c:	mov	r0, #1
   1be90:	cmp	r0, #0
   1be94:	bne	1bf18 <__assert_fail@plt+0xaaec>
   1be98:	b	1be9c <__assert_fail@plt+0xaa70>
   1be9c:	ldr	r0, [fp, #-8]
   1bea0:	ldr	r1, [r0]
   1bea4:	ldr	r0, [r0, #4]
   1bea8:	and	r0, r1, r0
   1beac:	cmn	r0, #1
   1beb0:	bne	1beec <__assert_fail@plt+0xaac0>
   1beb4:	b	1beb8 <__assert_fail@plt+0xaa8c>
   1beb8:	b	1bebc <__assert_fail@plt+0xaa90>
   1bebc:	ldr	r0, [fp, #-12]
   1bec0:	add	r0, r0, #-2147483648	; 0x80000000
   1bec4:	movw	r1, #0
   1bec8:	cmp	r1, r0
   1becc:	blt	1bf40 <__assert_fail@plt+0xab14>
   1bed0:	b	1bf64 <__assert_fail@plt+0xab38>
   1bed4:	ldr	r0, [pc, #2204]	; 1c778 <__assert_fail@plt+0xb34c>
   1bed8:	ldr	r1, [fp, #-12]
   1bedc:	sub	r1, r1, #1
   1bee0:	cmp	r0, r1
   1bee4:	blt	1bf40 <__assert_fail@plt+0xab14>
   1bee8:	b	1bf64 <__assert_fail@plt+0xab38>
   1beec:	ldr	r0, [fp, #-8]
   1bef0:	ldr	r2, [r0]
   1bef4:	ldr	r3, [r0, #4]
   1bef8:	mov	r0, #-2147483648	; 0x80000000
   1befc:	mvn	r1, #0
   1bf00:	bl	1f428 <__assert_fail@plt+0xdffc>
   1bf04:	ldr	r2, [fp, #-12]
   1bf08:	subs	r0, r0, r2
   1bf0c:	sbcs	r1, r1, r2, asr #31
   1bf10:	bcc	1bf40 <__assert_fail@plt+0xab14>
   1bf14:	b	1bf64 <__assert_fail@plt+0xab38>
   1bf18:	ldr	r0, [fp, #-12]
   1bf1c:	mvn	r1, #-2147483648	; 0x80000000
   1bf20:	sdiv	r0, r1, r0
   1bf24:	ldr	r1, [fp, #-8]
   1bf28:	ldr	r2, [r1]
   1bf2c:	ldr	r1, [r1, #4]
   1bf30:	subs	r2, r0, r2
   1bf34:	rscs	r0, r1, r0, asr #31
   1bf38:	bcs	1bf64 <__assert_fail@plt+0xab38>
   1bf3c:	b	1bf40 <__assert_fail@plt+0xab14>
   1bf40:	ldr	r0, [fp, #-8]
   1bf44:	ldr	r0, [r0]
   1bf48:	ldr	r1, [fp, #-12]
   1bf4c:	mul	r0, r0, r1
   1bf50:	asr	r1, r0, #31
   1bf54:	str	r0, [fp, #-24]	; 0xffffffe8
   1bf58:	str	r1, [fp, #-20]	; 0xffffffec
   1bf5c:	b	1c730 <__assert_fail@plt+0xb304>
   1bf60:	andhi	r0, r0, r1
   1bf64:	ldr	r0, [fp, #-8]
   1bf68:	ldr	r0, [r0]
   1bf6c:	ldr	r1, [fp, #-12]
   1bf70:	mul	r0, r0, r1
   1bf74:	asr	r1, r0, #31
   1bf78:	str	r0, [fp, #-24]	; 0xffffffe8
   1bf7c:	str	r1, [fp, #-20]	; 0xffffffec
   1bf80:	b	1c74c <__assert_fail@plt+0xb320>
   1bf84:	ldr	r0, [fp, #-12]
   1bf88:	cmp	r0, #0
   1bf8c:	bge	1c0c0 <__assert_fail@plt+0xac94>
   1bf90:	mov	r0, #1
   1bf94:	cmp	r0, #0
   1bf98:	bne	1c040 <__assert_fail@plt+0xac14>
   1bf9c:	b	1bfa0 <__assert_fail@plt+0xab74>
   1bfa0:	b	1bfcc <__assert_fail@plt+0xaba0>
   1bfa4:	ldr	r0, [fp, #-8]
   1bfa8:	ldr	r1, [r0]
   1bfac:	ldr	r0, [r0, #4]
   1bfb0:	ldr	r2, [fp, #-12]
   1bfb4:	mvn	r3, #0
   1bfb8:	udiv	r2, r3, r2
   1bfbc:	subs	r1, r1, r2
   1bfc0:	sbcs	r0, r0, #0
   1bfc4:	bcc	1c174 <__assert_fail@plt+0xad48>
   1bfc8:	b	1c194 <__assert_fail@plt+0xad68>
   1bfcc:	b	1bfd0 <__assert_fail@plt+0xaba4>
   1bfd0:	ldr	r0, [pc, #1948]	; 1c774 <__assert_fail@plt+0xb348>
   1bfd4:	ldr	r1, [fp, #-12]
   1bfd8:	cmp	r1, r0
   1bfdc:	blt	1bff4 <__assert_fail@plt+0xabc8>
   1bfe0:	b	1c000 <__assert_fail@plt+0xabd4>
   1bfe4:	ldr	r0, [fp, #-12]
   1bfe8:	movw	r1, #0
   1bfec:	cmp	r1, r0
   1bff0:	bge	1c000 <__assert_fail@plt+0xabd4>
   1bff4:	movw	r0, #1
   1bff8:	str	r0, [sp, #56]	; 0x38
   1bffc:	b	1c018 <__assert_fail@plt+0xabec>
   1c000:	ldr	r0, [fp, #-12]
   1c004:	movw	r1, #0
   1c008:	sub	r0, r1, r0
   1c00c:	mvn	r1, #0
   1c010:	udiv	r0, r1, r0
   1c014:	str	r0, [sp, #56]	; 0x38
   1c018:	ldr	r0, [sp, #56]	; 0x38
   1c01c:	ldr	r1, [fp, #-8]
   1c020:	ldr	r2, [r1]
   1c024:	ldr	r1, [r1, #4]
   1c028:	mvn	r1, r1
   1c02c:	mvn	r2, r2
   1c030:	subs	r0, r2, r0
   1c034:	sbcs	r1, r1, #0
   1c038:	bcs	1c174 <__assert_fail@plt+0xad48>
   1c03c:	b	1c194 <__assert_fail@plt+0xad68>
   1c040:	b	1c044 <__assert_fail@plt+0xac18>
   1c044:	b	1c0a4 <__assert_fail@plt+0xac78>
   1c048:	b	1c0a4 <__assert_fail@plt+0xac78>
   1c04c:	ldr	r0, [fp, #-12]
   1c050:	cmn	r0, #1
   1c054:	bne	1c0a4 <__assert_fail@plt+0xac78>
   1c058:	b	1c078 <__assert_fail@plt+0xac4c>
   1c05c:	ldr	r0, [fp, #-8]
   1c060:	ldr	r1, [r0]
   1c064:	ldr	r0, [r0, #4]
   1c068:	orr	r0, r1, r0
   1c06c:	cmp	r0, #0
   1c070:	bne	1c174 <__assert_fail@plt+0xad48>
   1c074:	b	1c194 <__assert_fail@plt+0xad68>
   1c078:	ldr	r0, [fp, #-8]
   1c07c:	ldr	r1, [r0]
   1c080:	ldr	r0, [r0, #4]
   1c084:	orr	r0, r1, r0
   1c088:	cmp	r0, #0
   1c08c:	beq	1c194 <__assert_fail@plt+0xad68>
   1c090:	b	1c094 <__assert_fail@plt+0xac68>
   1c094:	mov	r0, #0
   1c098:	cmp	r0, #0
   1c09c:	bne	1c174 <__assert_fail@plt+0xad48>
   1c0a0:	b	1c194 <__assert_fail@plt+0xad68>
   1c0a4:	ldr	r0, [fp, #-8]
   1c0a8:	ldr	r1, [r0]
   1c0ac:	ldr	r0, [r0, #4]
   1c0b0:	orr	r0, r1, r0
   1c0b4:	cmp	r0, #0
   1c0b8:	bne	1c174 <__assert_fail@plt+0xad48>
   1c0bc:	b	1c194 <__assert_fail@plt+0xad68>
   1c0c0:	ldr	r0, [fp, #-12]
   1c0c4:	cmp	r0, #0
   1c0c8:	bne	1c0d0 <__assert_fail@plt+0xaca4>
   1c0cc:	b	1c194 <__assert_fail@plt+0xad68>
   1c0d0:	mov	r0, #1
   1c0d4:	cmp	r0, #0
   1c0d8:	bne	1c14c <__assert_fail@plt+0xad20>
   1c0dc:	b	1c0e0 <__assert_fail@plt+0xacb4>
   1c0e0:	b	1c0e8 <__assert_fail@plt+0xacbc>
   1c0e4:	b	1c0ec <__assert_fail@plt+0xacc0>
   1c0e8:	b	1c13c <__assert_fail@plt+0xad10>
   1c0ec:	ldr	r0, [fp, #-8]
   1c0f0:	ldr	r1, [r0]
   1c0f4:	ldr	r0, [r0, #4]
   1c0f8:	and	r0, r1, r0
   1c0fc:	cmn	r0, #1
   1c100:	bne	1c13c <__assert_fail@plt+0xad10>
   1c104:	b	1c108 <__assert_fail@plt+0xacdc>
   1c108:	b	1c10c <__assert_fail@plt+0xace0>
   1c10c:	ldr	r0, [fp, #-12]
   1c110:	add	r0, r0, #0
   1c114:	movw	r1, #0
   1c118:	cmp	r1, r0
   1c11c:	blt	1c174 <__assert_fail@plt+0xad48>
   1c120:	b	1c194 <__assert_fail@plt+0xad68>
   1c124:	ldr	r0, [fp, #-12]
   1c128:	sub	r0, r0, #1
   1c12c:	mvn	r1, #0
   1c130:	cmp	r1, r0
   1c134:	blt	1c174 <__assert_fail@plt+0xad48>
   1c138:	b	1c194 <__assert_fail@plt+0xad68>
   1c13c:	ldr	r0, [fp, #-12]
   1c140:	cmp	r0, #0
   1c144:	bne	1c174 <__assert_fail@plt+0xad48>
   1c148:	b	1c194 <__assert_fail@plt+0xad68>
   1c14c:	ldr	r0, [fp, #-12]
   1c150:	mvn	r1, #0
   1c154:	udiv	r0, r1, r0
   1c158:	ldr	r1, [fp, #-8]
   1c15c:	ldr	r2, [r1]
   1c160:	ldr	r1, [r1, #4]
   1c164:	subs	r0, r0, r2
   1c168:	rscs	r1, r1, #0
   1c16c:	bcs	1c194 <__assert_fail@plt+0xad68>
   1c170:	b	1c174 <__assert_fail@plt+0xad48>
   1c174:	ldr	r0, [fp, #-8]
   1c178:	ldr	r0, [r0]
   1c17c:	ldr	r1, [fp, #-12]
   1c180:	mul	r0, r0, r1
   1c184:	mov	r1, #0
   1c188:	str	r1, [fp, #-20]	; 0xffffffec
   1c18c:	str	r0, [fp, #-24]	; 0xffffffe8
   1c190:	b	1c730 <__assert_fail@plt+0xb304>
   1c194:	ldr	r0, [fp, #-8]
   1c198:	ldr	r0, [r0]
   1c19c:	ldr	r1, [fp, #-12]
   1c1a0:	mul	r0, r0, r1
   1c1a4:	mov	r1, #0
   1c1a8:	str	r1, [fp, #-20]	; 0xffffffec
   1c1ac:	str	r0, [fp, #-24]	; 0xffffffe8
   1c1b0:	b	1c74c <__assert_fail@plt+0xb320>
   1c1b4:	b	1c498 <__assert_fail@plt+0xb06c>
   1c1b8:	ldr	r0, [fp, #-12]
   1c1bc:	cmp	r0, #0
   1c1c0:	bge	1c368 <__assert_fail@plt+0xaf3c>
   1c1c4:	mov	r0, #1
   1c1c8:	cmp	r0, #0
   1c1cc:	bne	1c2bc <__assert_fail@plt+0xae90>
   1c1d0:	b	1c1d4 <__assert_fail@plt+0xada8>
   1c1d4:	b	1c1d8 <__assert_fail@plt+0xadac>
   1c1d8:	ldr	r0, [fp, #-8]
   1c1dc:	ldr	r1, [r0]
   1c1e0:	ldr	r0, [r0, #4]
   1c1e4:	ldr	r2, [fp, #-12]
   1c1e8:	asr	r3, r2, #31
   1c1ec:	mvn	ip, #0
   1c1f0:	mvn	lr, #-2147483648	; 0x80000000
   1c1f4:	str	r0, [sp, #52]	; 0x34
   1c1f8:	mov	r0, ip
   1c1fc:	str	r1, [sp, #48]	; 0x30
   1c200:	mov	r1, lr
   1c204:	bl	1f354 <__assert_fail@plt+0xdf28>
   1c208:	ldr	r2, [sp, #48]	; 0x30
   1c20c:	subs	r0, r2, r0
   1c210:	ldr	r2, [sp, #52]	; 0x34
   1c214:	sbcs	r1, r2, r1
   1c218:	bcc	1c440 <__assert_fail@plt+0xb014>
   1c21c:	b	1c46c <__assert_fail@plt+0xb040>
   1c220:	b	1c224 <__assert_fail@plt+0xadf8>
   1c224:	ldr	r0, [pc, #1352]	; 1c774 <__assert_fail@plt+0xb348>
   1c228:	ldr	r1, [fp, #-12]
   1c22c:	cmp	r1, r0
   1c230:	blt	1c248 <__assert_fail@plt+0xae1c>
   1c234:	b	1c25c <__assert_fail@plt+0xae30>
   1c238:	ldr	r0, [fp, #-12]
   1c23c:	movw	r1, #0
   1c240:	cmp	r1, r0
   1c244:	bge	1c25c <__assert_fail@plt+0xae30>
   1c248:	mov	r0, #0
   1c24c:	mvn	r1, #0
   1c250:	str	r1, [sp, #44]	; 0x2c
   1c254:	str	r0, [sp, #40]	; 0x28
   1c258:	b	1c290 <__assert_fail@plt+0xae64>
   1c25c:	ldr	r0, [fp, #-12]
   1c260:	rsb	r0, r0, #0
   1c264:	asr	r3, r0, #31
   1c268:	mvn	r1, #0
   1c26c:	mvn	r2, #-2147483648	; 0x80000000
   1c270:	str	r0, [sp, #36]	; 0x24
   1c274:	mov	r0, r1
   1c278:	mov	r1, r2
   1c27c:	ldr	r2, [sp, #36]	; 0x24
   1c280:	bl	1f354 <__assert_fail@plt+0xdf28>
   1c284:	str	r0, [sp, #44]	; 0x2c
   1c288:	str	r1, [sp, #40]	; 0x28
   1c28c:	b	1c290 <__assert_fail@plt+0xae64>
   1c290:	ldr	r0, [sp, #40]	; 0x28
   1c294:	ldr	r1, [sp, #44]	; 0x2c
   1c298:	ldr	r2, [fp, #-8]
   1c29c:	ldr	r3, [r2]
   1c2a0:	ldr	r2, [r2, #4]
   1c2a4:	mvn	r2, r2
   1c2a8:	mvn	r3, r3
   1c2ac:	subs	r1, r3, r1
   1c2b0:	sbcs	r0, r2, r0
   1c2b4:	bcs	1c440 <__assert_fail@plt+0xb014>
   1c2b8:	b	1c46c <__assert_fail@plt+0xb040>
   1c2bc:	ldr	r0, [fp, #-12]
   1c2c0:	cmn	r0, #1
   1c2c4:	bne	1c328 <__assert_fail@plt+0xaefc>
   1c2c8:	b	1c2ec <__assert_fail@plt+0xaec0>
   1c2cc:	ldr	r0, [fp, #-8]
   1c2d0:	ldr	r1, [r0]
   1c2d4:	ldr	r0, [r0, #4]
   1c2d8:	eor	r0, r0, #-2147483648	; 0x80000000
   1c2dc:	orr	r0, r1, r0
   1c2e0:	cmp	r0, #0
   1c2e4:	bne	1c440 <__assert_fail@plt+0xb014>
   1c2e8:	b	1c46c <__assert_fail@plt+0xb040>
   1c2ec:	ldr	r0, [fp, #-8]
   1c2f0:	ldr	r1, [r0]
   1c2f4:	ldr	r0, [r0, #4]
   1c2f8:	orr	r0, r1, r0
   1c2fc:	cmp	r0, #0
   1c300:	beq	1c46c <__assert_fail@plt+0xb040>
   1c304:	b	1c308 <__assert_fail@plt+0xaedc>
   1c308:	ldr	r0, [fp, #-8]
   1c30c:	ldr	r1, [r0]
   1c310:	ldr	r0, [r0, #4]
   1c314:	subs	r1, r1, #1
   1c318:	sbc	r0, r0, #0
   1c31c:	cmp	r0, #0
   1c320:	bmi	1c440 <__assert_fail@plt+0xb014>
   1c324:	b	1c46c <__assert_fail@plt+0xb040>
   1c328:	ldr	r0, [fp, #-12]
   1c32c:	asr	r3, r0, #31
   1c330:	mov	r1, #0
   1c334:	mov	r2, #-2147483648	; 0x80000000
   1c338:	str	r0, [sp, #32]
   1c33c:	mov	r0, r1
   1c340:	mov	r1, r2
   1c344:	ldr	r2, [sp, #32]
   1c348:	bl	1f354 <__assert_fail@plt+0xdf28>
   1c34c:	ldr	r2, [fp, #-8]
   1c350:	ldr	r3, [r2]
   1c354:	ldr	r2, [r2, #4]
   1c358:	subs	r0, r0, r3
   1c35c:	sbcs	r1, r1, r2
   1c360:	bcc	1c440 <__assert_fail@plt+0xb014>
   1c364:	b	1c46c <__assert_fail@plt+0xb040>
   1c368:	ldr	r0, [fp, #-12]
   1c36c:	cmp	r0, #0
   1c370:	bne	1c378 <__assert_fail@plt+0xaf4c>
   1c374:	b	1c46c <__assert_fail@plt+0xb040>
   1c378:	mov	r0, #1
   1c37c:	cmp	r0, #0
   1c380:	bne	1c400 <__assert_fail@plt+0xafd4>
   1c384:	b	1c388 <__assert_fail@plt+0xaf5c>
   1c388:	ldr	r0, [fp, #-8]
   1c38c:	ldr	r1, [r0]
   1c390:	ldr	r0, [r0, #4]
   1c394:	and	r0, r1, r0
   1c398:	cmn	r0, #1
   1c39c:	bne	1c3d4 <__assert_fail@plt+0xafa8>
   1c3a0:	b	1c3a4 <__assert_fail@plt+0xaf78>
   1c3a4:	b	1c3a8 <__assert_fail@plt+0xaf7c>
   1c3a8:	ldr	r0, [fp, #-12]
   1c3ac:	mov	r1, #-2147483648	; 0x80000000
   1c3b0:	add	r1, r1, r0, asr #31
   1c3b4:	rsbs	r0, r0, #0
   1c3b8:	rscs	r1, r1, #0
   1c3bc:	blt	1c440 <__assert_fail@plt+0xb014>
   1c3c0:	b	1c46c <__assert_fail@plt+0xb040>
   1c3c4:	mov	r0, #0
   1c3c8:	cmp	r0, #0
   1c3cc:	bne	1c440 <__assert_fail@plt+0xb014>
   1c3d0:	b	1c46c <__assert_fail@plt+0xb040>
   1c3d4:	ldr	r0, [fp, #-8]
   1c3d8:	ldr	r2, [r0]
   1c3dc:	ldr	r3, [r0, #4]
   1c3e0:	mov	r0, #0
   1c3e4:	mov	r1, #-2147483648	; 0x80000000
   1c3e8:	bl	1f428 <__assert_fail@plt+0xdffc>
   1c3ec:	ldr	r2, [fp, #-12]
   1c3f0:	subs	r0, r0, r2
   1c3f4:	sbcs	r1, r1, r2, asr #31
   1c3f8:	bcc	1c440 <__assert_fail@plt+0xb014>
   1c3fc:	b	1c46c <__assert_fail@plt+0xb040>
   1c400:	ldr	r0, [fp, #-12]
   1c404:	asr	r3, r0, #31
   1c408:	mvn	r1, #0
   1c40c:	mvn	r2, #-2147483648	; 0x80000000
   1c410:	str	r0, [sp, #28]
   1c414:	mov	r0, r1
   1c418:	mov	r1, r2
   1c41c:	ldr	r2, [sp, #28]
   1c420:	bl	1f354 <__assert_fail@plt+0xdf28>
   1c424:	ldr	r2, [fp, #-8]
   1c428:	ldr	r3, [r2]
   1c42c:	ldr	r2, [r2, #4]
   1c430:	subs	r0, r0, r3
   1c434:	sbcs	r1, r1, r2
   1c438:	bcs	1c46c <__assert_fail@plt+0xb040>
   1c43c:	b	1c440 <__assert_fail@plt+0xb014>
   1c440:	ldr	r0, [fp, #-8]
   1c444:	ldr	r1, [r0]
   1c448:	ldr	r0, [r0, #4]
   1c44c:	ldr	r2, [fp, #-12]
   1c450:	asr	r3, r2, #31
   1c454:	umull	ip, lr, r1, r2
   1c458:	mla	r1, r1, r3, lr
   1c45c:	mla	r0, r0, r2, r1
   1c460:	str	ip, [fp, #-24]	; 0xffffffe8
   1c464:	str	r0, [fp, #-20]	; 0xffffffec
   1c468:	b	1c730 <__assert_fail@plt+0xb304>
   1c46c:	ldr	r0, [fp, #-8]
   1c470:	ldr	r1, [r0]
   1c474:	ldr	r0, [r0, #4]
   1c478:	ldr	r2, [fp, #-12]
   1c47c:	asr	r3, r2, #31
   1c480:	umull	ip, lr, r1, r2
   1c484:	mla	r1, r1, r3, lr
   1c488:	mla	r0, r0, r2, r1
   1c48c:	str	ip, [fp, #-24]	; 0xffffffe8
   1c490:	str	r0, [fp, #-20]	; 0xffffffec
   1c494:	b	1c74c <__assert_fail@plt+0xb320>
   1c498:	ldr	r0, [fp, #-12]
   1c49c:	cmp	r0, #0
   1c4a0:	bge	1c614 <__assert_fail@plt+0xb1e8>
   1c4a4:	mov	r0, #1
   1c4a8:	cmp	r0, #0
   1c4ac:	bne	1c594 <__assert_fail@plt+0xb168>
   1c4b0:	b	1c4b4 <__assert_fail@plt+0xb088>
   1c4b4:	b	1c4fc <__assert_fail@plt+0xb0d0>
   1c4b8:	ldr	r0, [fp, #-8]
   1c4bc:	ldr	r1, [r0]
   1c4c0:	ldr	r0, [r0, #4]
   1c4c4:	ldr	r2, [fp, #-12]
   1c4c8:	asr	r3, r2, #31
   1c4cc:	mvn	ip, #0
   1c4d0:	str	r0, [sp, #24]
   1c4d4:	mov	r0, ip
   1c4d8:	str	r1, [sp, #20]
   1c4dc:	mov	r1, ip
   1c4e0:	bl	1f428 <__assert_fail@plt+0xdffc>
   1c4e4:	ldr	r2, [sp, #20]
   1c4e8:	subs	r0, r2, r0
   1c4ec:	ldr	r2, [sp, #24]
   1c4f0:	sbcs	r1, r2, r1
   1c4f4:	bcc	1c6d8 <__assert_fail@plt+0xb2ac>
   1c4f8:	b	1c704 <__assert_fail@plt+0xb2d8>
   1c4fc:	b	1c500 <__assert_fail@plt+0xb0d4>
   1c500:	ldr	r0, [pc, #620]	; 1c774 <__assert_fail@plt+0xb348>
   1c504:	ldr	r1, [fp, #-12]
   1c508:	cmp	r1, r0
   1c50c:	blt	1c524 <__assert_fail@plt+0xb0f8>
   1c510:	b	1c53c <__assert_fail@plt+0xb110>
   1c514:	ldr	r0, [fp, #-12]
   1c518:	movw	r1, #0
   1c51c:	cmp	r1, r0
   1c520:	bge	1c53c <__assert_fail@plt+0xb110>
   1c524:	mov	r0, #1
   1c528:	mvn	r1, #0
   1c52c:	str	r1, [sp, #16]
   1c530:	str	r0, [sp, #12]
   1c534:	b	1c568 <__assert_fail@plt+0xb13c>
   1c538:			; <UNDEFINED> instruction: 0xffff8000
   1c53c:	ldr	r0, [fp, #-12]
   1c540:	rsb	r0, r0, #0
   1c544:	asr	r3, r0, #31
   1c548:	mvn	r1, #0
   1c54c:	str	r0, [sp, #8]
   1c550:	mov	r0, r1
   1c554:	ldr	r2, [sp, #8]
   1c558:	bl	1f428 <__assert_fail@plt+0xdffc>
   1c55c:	str	r0, [sp, #16]
   1c560:	str	r1, [sp, #12]
   1c564:	b	1c568 <__assert_fail@plt+0xb13c>
   1c568:	ldr	r0, [sp, #12]
   1c56c:	ldr	r1, [sp, #16]
   1c570:	ldr	r2, [fp, #-8]
   1c574:	ldr	r3, [r2]
   1c578:	ldr	r2, [r2, #4]
   1c57c:	mvn	r2, r2
   1c580:	mvn	r3, r3
   1c584:	subs	r1, r3, r1
   1c588:	sbcs	r0, r2, r0
   1c58c:	bcs	1c6d8 <__assert_fail@plt+0xb2ac>
   1c590:	b	1c704 <__assert_fail@plt+0xb2d8>
   1c594:	b	1c598 <__assert_fail@plt+0xb16c>
   1c598:	b	1c5f8 <__assert_fail@plt+0xb1cc>
   1c59c:	b	1c5f8 <__assert_fail@plt+0xb1cc>
   1c5a0:	ldr	r0, [fp, #-12]
   1c5a4:	cmn	r0, #1
   1c5a8:	bne	1c5f8 <__assert_fail@plt+0xb1cc>
   1c5ac:	b	1c5cc <__assert_fail@plt+0xb1a0>
   1c5b0:	ldr	r0, [fp, #-8]
   1c5b4:	ldr	r1, [r0]
   1c5b8:	ldr	r0, [r0, #4]
   1c5bc:	orr	r0, r1, r0
   1c5c0:	cmp	r0, #0
   1c5c4:	bne	1c6d8 <__assert_fail@plt+0xb2ac>
   1c5c8:	b	1c704 <__assert_fail@plt+0xb2d8>
   1c5cc:	ldr	r0, [fp, #-8]
   1c5d0:	ldr	r1, [r0]
   1c5d4:	ldr	r0, [r0, #4]
   1c5d8:	orr	r0, r1, r0
   1c5dc:	cmp	r0, #0
   1c5e0:	beq	1c704 <__assert_fail@plt+0xb2d8>
   1c5e4:	b	1c5e8 <__assert_fail@plt+0xb1bc>
   1c5e8:	mov	r0, #0
   1c5ec:	cmp	r0, #0
   1c5f0:	bne	1c6d8 <__assert_fail@plt+0xb2ac>
   1c5f4:	b	1c704 <__assert_fail@plt+0xb2d8>
   1c5f8:	ldr	r0, [fp, #-8]
   1c5fc:	ldr	r1, [r0]
   1c600:	ldr	r0, [r0, #4]
   1c604:	orr	r0, r1, r0
   1c608:	cmp	r0, #0
   1c60c:	bne	1c6d8 <__assert_fail@plt+0xb2ac>
   1c610:	b	1c704 <__assert_fail@plt+0xb2d8>
   1c614:	ldr	r0, [fp, #-12]
   1c618:	cmp	r0, #0
   1c61c:	bne	1c624 <__assert_fail@plt+0xb1f8>
   1c620:	b	1c704 <__assert_fail@plt+0xb2d8>
   1c624:	mov	r0, #1
   1c628:	cmp	r0, #0
   1c62c:	bne	1c6a0 <__assert_fail@plt+0xb274>
   1c630:	b	1c634 <__assert_fail@plt+0xb208>
   1c634:	b	1c63c <__assert_fail@plt+0xb210>
   1c638:	b	1c640 <__assert_fail@plt+0xb214>
   1c63c:	b	1c690 <__assert_fail@plt+0xb264>
   1c640:	ldr	r0, [fp, #-8]
   1c644:	ldr	r1, [r0]
   1c648:	ldr	r0, [r0, #4]
   1c64c:	and	r0, r1, r0
   1c650:	cmn	r0, #1
   1c654:	bne	1c690 <__assert_fail@plt+0xb264>
   1c658:	b	1c65c <__assert_fail@plt+0xb230>
   1c65c:	b	1c660 <__assert_fail@plt+0xb234>
   1c660:	ldr	r0, [fp, #-12]
   1c664:	add	r0, r0, #0
   1c668:	movw	r1, #0
   1c66c:	cmp	r1, r0
   1c670:	blt	1c6d8 <__assert_fail@plt+0xb2ac>
   1c674:	b	1c704 <__assert_fail@plt+0xb2d8>
   1c678:	ldr	r0, [fp, #-12]
   1c67c:	sub	r0, r0, #1
   1c680:	mvn	r1, #0
   1c684:	cmp	r1, r0
   1c688:	blt	1c6d8 <__assert_fail@plt+0xb2ac>
   1c68c:	b	1c704 <__assert_fail@plt+0xb2d8>
   1c690:	ldr	r0, [fp, #-12]
   1c694:	cmp	r0, #0
   1c698:	bne	1c6d8 <__assert_fail@plt+0xb2ac>
   1c69c:	b	1c704 <__assert_fail@plt+0xb2d8>
   1c6a0:	ldr	r0, [fp, #-12]
   1c6a4:	asr	r3, r0, #31
   1c6a8:	mvn	r1, #0
   1c6ac:	str	r0, [sp, #4]
   1c6b0:	mov	r0, r1
   1c6b4:	ldr	r2, [sp, #4]
   1c6b8:	bl	1f428 <__assert_fail@plt+0xdffc>
   1c6bc:	ldr	r2, [fp, #-8]
   1c6c0:	ldr	r3, [r2]
   1c6c4:	ldr	r2, [r2, #4]
   1c6c8:	subs	r0, r0, r3
   1c6cc:	sbcs	r1, r1, r2
   1c6d0:	bcs	1c704 <__assert_fail@plt+0xb2d8>
   1c6d4:	b	1c6d8 <__assert_fail@plt+0xb2ac>
   1c6d8:	ldr	r0, [fp, #-8]
   1c6dc:	ldr	r1, [r0]
   1c6e0:	ldr	r0, [r0, #4]
   1c6e4:	ldr	r2, [fp, #-12]
   1c6e8:	asr	r3, r2, #31
   1c6ec:	umull	ip, lr, r1, r2
   1c6f0:	mla	r1, r1, r3, lr
   1c6f4:	mla	r0, r0, r2, r1
   1c6f8:	str	ip, [fp, #-24]	; 0xffffffe8
   1c6fc:	str	r0, [fp, #-20]	; 0xffffffec
   1c700:	b	1c730 <__assert_fail@plt+0xb304>
   1c704:	ldr	r0, [fp, #-8]
   1c708:	ldr	r1, [r0]
   1c70c:	ldr	r0, [r0, #4]
   1c710:	ldr	r2, [fp, #-12]
   1c714:	asr	r3, r2, #31
   1c718:	umull	ip, lr, r1, r2
   1c71c:	mla	r1, r1, r3, lr
   1c720:	mla	r0, r0, r2, r1
   1c724:	str	ip, [fp, #-24]	; 0xffffffe8
   1c728:	str	r0, [fp, #-20]	; 0xffffffec
   1c72c:	b	1c74c <__assert_fail@plt+0xb320>
   1c730:	ldr	r0, [fp, #-8]
   1c734:	mvn	r1, #0
   1c738:	str	r1, [r0, #4]
   1c73c:	str	r1, [r0]
   1c740:	movw	r0, #1
   1c744:	str	r0, [fp, #-4]
   1c748:	b	1c768 <__assert_fail@plt+0xb33c>
   1c74c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c750:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c754:	ldr	r2, [fp, #-8]
   1c758:	str	r1, [r2, #4]
   1c75c:	str	r0, [r2]
   1c760:	movw	r0, #0
   1c764:	str	r0, [fp, #-4]
   1c768:	ldr	r0, [fp, #-4]
   1c76c:	mov	sp, fp
   1c770:	pop	{fp, pc}
   1c774:	andhi	r0, r0, r1
   1c778:	svcvc	0x00ffffff
   1c77c:	push	{fp, lr}
   1c780:	mov	fp, sp
   1c784:	sub	sp, sp, #16
   1c788:	str	r0, [fp, #-4]
   1c78c:	str	r1, [sp, #8]
   1c790:	str	r2, [sp, #4]
   1c794:	movw	r0, #0
   1c798:	str	r0, [sp]
   1c79c:	ldr	r0, [sp, #4]
   1c7a0:	mvn	r1, #0
   1c7a4:	add	r1, r0, r1
   1c7a8:	str	r1, [sp, #4]
   1c7ac:	cmp	r0, #0
   1c7b0:	beq	1c7d0 <__assert_fail@plt+0xb3a4>
   1c7b4:	ldr	r0, [fp, #-4]
   1c7b8:	ldr	r1, [sp, #8]
   1c7bc:	bl	1af04 <__assert_fail@plt+0x9ad8>
   1c7c0:	ldr	r1, [sp]
   1c7c4:	orr	r0, r1, r0
   1c7c8:	str	r0, [sp]
   1c7cc:	b	1c79c <__assert_fail@plt+0xb370>
   1c7d0:	ldr	r0, [sp]
   1c7d4:	mov	sp, fp
   1c7d8:	pop	{fp, pc}
   1c7dc:	push	{fp, lr}
   1c7e0:	mov	fp, sp
   1c7e4:	sub	sp, sp, #16
   1c7e8:	str	r0, [sp, #8]
   1c7ec:	str	r1, [sp, #4]
   1c7f0:	ldr	r0, [sp, #8]
   1c7f4:	cmp	r0, #0
   1c7f8:	beq	1c808 <__assert_fail@plt+0xb3dc>
   1c7fc:	ldr	r0, [sp, #4]
   1c800:	cmp	r0, #0
   1c804:	bne	1c814 <__assert_fail@plt+0xb3e8>
   1c808:	movw	r0, #1
   1c80c:	str	r0, [sp, #4]
   1c810:	str	r0, [sp, #8]
   1c814:	ldr	r0, [sp, #4]
   1c818:	cmp	r0, #0
   1c81c:	beq	1c850 <__assert_fail@plt+0xb424>
   1c820:	ldr	r0, [pc, #76]	; 1c874 <__assert_fail@plt+0xb448>
   1c824:	ldr	r1, [sp, #4]
   1c828:	udiv	r0, r0, r1
   1c82c:	ldr	r1, [sp, #8]
   1c830:	cmp	r0, r1
   1c834:	bcs	1c850 <__assert_fail@plt+0xb424>
   1c838:	bl	1130c <__errno_location@plt>
   1c83c:	movw	r1, #12
   1c840:	str	r1, [r0]
   1c844:	movw	r0, #0
   1c848:	str	r0, [fp, #-4]
   1c84c:	b	1c868 <__assert_fail@plt+0xb43c>
   1c850:	ldr	r0, [sp, #8]
   1c854:	ldr	r1, [sp, #4]
   1c858:	bl	11120 <calloc@plt>
   1c85c:	str	r0, [sp]
   1c860:	ldr	r0, [sp]
   1c864:	str	r0, [fp, #-4]
   1c868:	ldr	r0, [fp, #-4]
   1c86c:	mov	sp, fp
   1c870:	pop	{fp, pc}
   1c874:	svcvc	0x00ffffff
   1c878:	push	{fp, lr}
   1c87c:	mov	fp, sp
   1c880:	sub	sp, sp, #16
   1c884:	str	r0, [sp, #8]
   1c888:	ldr	r0, [sp, #8]
   1c88c:	cmp	r0, #0
   1c890:	bne	1c89c <__assert_fail@plt+0xb470>
   1c894:	movw	r0, #1
   1c898:	str	r0, [sp, #8]
   1c89c:	ldr	r0, [pc, #64]	; 1c8e4 <__assert_fail@plt+0xb4b8>
   1c8a0:	ldr	r1, [sp, #8]
   1c8a4:	cmp	r0, r1
   1c8a8:	bcs	1c8c4 <__assert_fail@plt+0xb498>
   1c8ac:	bl	1130c <__errno_location@plt>
   1c8b0:	movw	r1, #12
   1c8b4:	str	r1, [r0]
   1c8b8:	movw	r0, #0
   1c8bc:	str	r0, [fp, #-4]
   1c8c0:	b	1c8d8 <__assert_fail@plt+0xb4ac>
   1c8c4:	ldr	r0, [sp, #8]
   1c8c8:	bl	1127c <malloc@plt>
   1c8cc:	str	r0, [sp, #4]
   1c8d0:	ldr	r0, [sp, #4]
   1c8d4:	str	r0, [fp, #-4]
   1c8d8:	ldr	r0, [fp, #-4]
   1c8dc:	mov	sp, fp
   1c8e0:	pop	{fp, pc}
   1c8e4:	svcvc	0x00ffffff
   1c8e8:	push	{fp, lr}
   1c8ec:	mov	fp, sp
   1c8f0:	sub	sp, sp, #16
   1c8f4:	str	r0, [sp, #8]
   1c8f8:	str	r1, [sp, #4]
   1c8fc:	ldr	r0, [sp, #8]
   1c900:	movw	r1, #0
   1c904:	cmp	r0, r1
   1c908:	bne	1c91c <__assert_fail@plt+0xb4f0>
   1c90c:	ldr	r0, [sp, #4]
   1c910:	bl	1c878 <__assert_fail@plt+0xb44c>
   1c914:	str	r0, [fp, #-4]
   1c918:	b	1c97c <__assert_fail@plt+0xb550>
   1c91c:	ldr	r0, [sp, #4]
   1c920:	cmp	r0, #0
   1c924:	bne	1c93c <__assert_fail@plt+0xb510>
   1c928:	ldr	r0, [sp, #8]
   1c92c:	bl	1277c <__assert_fail@plt+0x1350>
   1c930:	movw	r0, #0
   1c934:	str	r0, [fp, #-4]
   1c938:	b	1c97c <__assert_fail@plt+0xb550>
   1c93c:	ldr	r0, [pc, #68]	; 1c988 <__assert_fail@plt+0xb55c>
   1c940:	ldr	r1, [sp, #4]
   1c944:	cmp	r0, r1
   1c948:	bcs	1c964 <__assert_fail@plt+0xb538>
   1c94c:	bl	1130c <__errno_location@plt>
   1c950:	movw	r1, #12
   1c954:	str	r1, [r0]
   1c958:	movw	r0, #0
   1c95c:	str	r0, [fp, #-4]
   1c960:	b	1c97c <__assert_fail@plt+0xb550>
   1c964:	ldr	r0, [sp, #8]
   1c968:	ldr	r1, [sp, #4]
   1c96c:	bl	111d4 <realloc@plt>
   1c970:	str	r0, [sp]
   1c974:	ldr	r0, [sp]
   1c978:	str	r0, [fp, #-4]
   1c97c:	ldr	r0, [fp, #-4]
   1c980:	mov	sp, fp
   1c984:	pop	{fp, pc}
   1c988:	svcvc	0x00ffffff
   1c98c:	push	{fp, lr}
   1c990:	mov	fp, sp
   1c994:	sub	sp, sp, #24
   1c998:	str	r0, [fp, #-8]
   1c99c:	str	r1, [sp, #12]
   1c9a0:	ldr	r0, [fp, #-8]
   1c9a4:	str	r0, [sp, #8]
   1c9a8:	ldr	r0, [sp, #12]
   1c9ac:	str	r0, [sp, #4]
   1c9b0:	ldr	r0, [sp, #8]
   1c9b4:	ldr	r1, [sp, #4]
   1c9b8:	cmp	r0, r1
   1c9bc:	bne	1c9cc <__assert_fail@plt+0xb5a0>
   1c9c0:	movw	r0, #0
   1c9c4:	str	r0, [fp, #-4]
   1c9c8:	b	1ca38 <__assert_fail@plt+0xb60c>
   1c9cc:	b	1c9d0 <__assert_fail@plt+0xb5a4>
   1c9d0:	ldr	r0, [sp, #8]
   1c9d4:	ldrb	r0, [r0]
   1c9d8:	bl	1eed4 <__assert_fail@plt+0xdaa8>
   1c9dc:	strb	r0, [sp, #3]
   1c9e0:	ldr	r0, [sp, #4]
   1c9e4:	ldrb	r0, [r0]
   1c9e8:	bl	1eed4 <__assert_fail@plt+0xdaa8>
   1c9ec:	strb	r0, [sp, #2]
   1c9f0:	ldrb	r0, [sp, #3]
   1c9f4:	cmp	r0, #0
   1c9f8:	bne	1ca00 <__assert_fail@plt+0xb5d4>
   1c9fc:	b	1ca28 <__assert_fail@plt+0xb5fc>
   1ca00:	ldr	r0, [sp, #8]
   1ca04:	add	r0, r0, #1
   1ca08:	str	r0, [sp, #8]
   1ca0c:	ldr	r0, [sp, #4]
   1ca10:	add	r0, r0, #1
   1ca14:	str	r0, [sp, #4]
   1ca18:	ldrb	r0, [sp, #3]
   1ca1c:	ldrb	r1, [sp, #2]
   1ca20:	cmp	r0, r1
   1ca24:	beq	1c9d0 <__assert_fail@plt+0xb5a4>
   1ca28:	ldrb	r0, [sp, #3]
   1ca2c:	ldrb	r1, [sp, #2]
   1ca30:	sub	r0, r0, r1
   1ca34:	str	r0, [fp, #-4]
   1ca38:	ldr	r0, [fp, #-4]
   1ca3c:	mov	sp, fp
   1ca40:	pop	{fp, pc}
   1ca44:	push	{fp, lr}
   1ca48:	mov	fp, sp
   1ca4c:	sub	sp, sp, #16
   1ca50:	str	r0, [sp, #8]
   1ca54:	ldr	r0, [sp, #8]
   1ca58:	bl	11234 <__fpending@plt>
   1ca5c:	cmp	r0, #0
   1ca60:	movw	r0, #0
   1ca64:	movne	r0, #1
   1ca68:	and	r0, r0, #1
   1ca6c:	strb	r0, [sp, #7]
   1ca70:	ldr	r0, [sp, #8]
   1ca74:	bl	11240 <ferror_unlocked@plt>
   1ca78:	cmp	r0, #0
   1ca7c:	movw	r0, #0
   1ca80:	movne	r0, #1
   1ca84:	and	r0, r0, #1
   1ca88:	strb	r0, [sp, #6]
   1ca8c:	ldr	r0, [sp, #8]
   1ca90:	bl	1cb14 <__assert_fail@plt+0xb6e8>
   1ca94:	cmp	r0, #0
   1ca98:	movw	r0, #0
   1ca9c:	movne	r0, #1
   1caa0:	and	r0, r0, #1
   1caa4:	strb	r0, [sp, #5]
   1caa8:	ldrb	r0, [sp, #6]
   1caac:	tst	r0, #1
   1cab0:	bne	1cadc <__assert_fail@plt+0xb6b0>
   1cab4:	ldrb	r0, [sp, #5]
   1cab8:	tst	r0, #1
   1cabc:	beq	1cb00 <__assert_fail@plt+0xb6d4>
   1cac0:	ldrb	r0, [sp, #7]
   1cac4:	tst	r0, #1
   1cac8:	bne	1cadc <__assert_fail@plt+0xb6b0>
   1cacc:	bl	1130c <__errno_location@plt>
   1cad0:	ldr	r0, [r0]
   1cad4:	cmp	r0, #9
   1cad8:	beq	1cb00 <__assert_fail@plt+0xb6d4>
   1cadc:	ldrb	r0, [sp, #5]
   1cae0:	tst	r0, #1
   1cae4:	bne	1caf4 <__assert_fail@plt+0xb6c8>
   1cae8:	bl	1130c <__errno_location@plt>
   1caec:	movw	r1, #0
   1caf0:	str	r1, [r0]
   1caf4:	mvn	r0, #0
   1caf8:	str	r0, [fp, #-4]
   1cafc:	b	1cb08 <__assert_fail@plt+0xb6dc>
   1cb00:	movw	r0, #0
   1cb04:	str	r0, [fp, #-4]
   1cb08:	ldr	r0, [fp, #-4]
   1cb0c:	mov	sp, fp
   1cb10:	pop	{fp, pc}
   1cb14:	push	{fp, lr}
   1cb18:	mov	fp, sp
   1cb1c:	sub	sp, sp, #32
   1cb20:	str	r0, [fp, #-8]
   1cb24:	movw	r0, #0
   1cb28:	str	r0, [fp, #-12]
   1cb2c:	str	r0, [sp, #12]
   1cb30:	ldr	r0, [fp, #-8]
   1cb34:	bl	11354 <fileno@plt>
   1cb38:	str	r0, [sp, #16]
   1cb3c:	ldr	r0, [sp, #16]
   1cb40:	cmp	r0, #0
   1cb44:	bge	1cb58 <__assert_fail@plt+0xb72c>
   1cb48:	ldr	r0, [fp, #-8]
   1cb4c:	bl	1136c <fclose@plt>
   1cb50:	str	r0, [fp, #-4]
   1cb54:	b	1cbf4 <__assert_fail@plt+0xb7c8>
   1cb58:	ldr	r0, [fp, #-8]
   1cb5c:	bl	11294 <__freading@plt>
   1cb60:	cmp	r0, #0
   1cb64:	beq	1cb9c <__assert_fail@plt+0xb770>
   1cb68:	ldr	r0, [fp, #-8]
   1cb6c:	bl	11354 <fileno@plt>
   1cb70:	mov	r1, sp
   1cb74:	mov	r2, #1
   1cb78:	str	r2, [r1]
   1cb7c:	mov	r1, #0
   1cb80:	mov	r2, r1
   1cb84:	mov	r3, r1
   1cb88:	bl	11210 <lseek64@plt>
   1cb8c:	and	r0, r0, r1
   1cb90:	cmn	r0, #1
   1cb94:	beq	1cbb8 <__assert_fail@plt+0xb78c>
   1cb98:	b	1cb9c <__assert_fail@plt+0xb770>
   1cb9c:	ldr	r0, [fp, #-8]
   1cba0:	bl	1cc00 <__assert_fail@plt+0xb7d4>
   1cba4:	cmp	r0, #0
   1cba8:	beq	1cbb8 <__assert_fail@plt+0xb78c>
   1cbac:	bl	1130c <__errno_location@plt>
   1cbb0:	ldr	r0, [r0]
   1cbb4:	str	r0, [fp, #-12]
   1cbb8:	ldr	r0, [fp, #-8]
   1cbbc:	bl	1136c <fclose@plt>
   1cbc0:	str	r0, [sp, #12]
   1cbc4:	ldr	r0, [fp, #-12]
   1cbc8:	cmp	r0, #0
   1cbcc:	beq	1cbec <__assert_fail@plt+0xb7c0>
   1cbd0:	ldr	r0, [fp, #-12]
   1cbd4:	str	r0, [sp, #8]
   1cbd8:	bl	1130c <__errno_location@plt>
   1cbdc:	ldr	r1, [sp, #8]
   1cbe0:	str	r1, [r0]
   1cbe4:	mvn	r0, #0
   1cbe8:	str	r0, [sp, #12]
   1cbec:	ldr	r0, [sp, #12]
   1cbf0:	str	r0, [fp, #-4]
   1cbf4:	ldr	r0, [fp, #-4]
   1cbf8:	mov	sp, fp
   1cbfc:	pop	{fp, pc}
   1cc00:	push	{fp, lr}
   1cc04:	mov	fp, sp
   1cc08:	sub	sp, sp, #8
   1cc0c:	str	r0, [sp]
   1cc10:	ldr	r0, [sp]
   1cc14:	movw	r1, #0
   1cc18:	cmp	r0, r1
   1cc1c:	beq	1cc30 <__assert_fail@plt+0xb804>
   1cc20:	ldr	r0, [sp]
   1cc24:	bl	11294 <__freading@plt>
   1cc28:	cmp	r0, #0
   1cc2c:	bne	1cc40 <__assert_fail@plt+0xb814>
   1cc30:	ldr	r0, [sp]
   1cc34:	bl	11180 <fflush@plt>
   1cc38:	str	r0, [sp, #4]
   1cc3c:	b	1cc54 <__assert_fail@plt+0xb828>
   1cc40:	ldr	r0, [sp]
   1cc44:	bl	1cc60 <__assert_fail@plt+0xb834>
   1cc48:	ldr	r0, [sp]
   1cc4c:	bl	11180 <fflush@plt>
   1cc50:	str	r0, [sp, #4]
   1cc54:	ldr	r0, [sp, #4]
   1cc58:	mov	sp, fp
   1cc5c:	pop	{fp, pc}
   1cc60:	push	{fp, lr}
   1cc64:	mov	fp, sp
   1cc68:	sub	sp, sp, #8
   1cc6c:	str	r0, [sp, #4]
   1cc70:	ldr	r0, [sp, #4]
   1cc74:	ldr	r0, [r0]
   1cc78:	and	r0, r0, #256	; 0x100
   1cc7c:	cmp	r0, #0
   1cc80:	beq	1cca4 <__assert_fail@plt+0xb878>
   1cc84:	ldr	r0, [sp, #4]
   1cc88:	mov	r1, sp
   1cc8c:	mov	r2, #1
   1cc90:	str	r2, [r1]
   1cc94:	mov	r1, #0
   1cc98:	mov	r2, r1
   1cc9c:	mov	r3, r1
   1cca0:	bl	1ccac <__assert_fail@plt+0xb880>
   1cca4:	mov	sp, fp
   1cca8:	pop	{fp, pc}
   1ccac:	push	{fp, lr}
   1ccb0:	mov	fp, sp
   1ccb4:	sub	sp, sp, #32
   1ccb8:	ldr	r1, [fp, #8]
   1ccbc:	str	r0, [fp, #-8]
   1ccc0:	str	r3, [sp, #20]
   1ccc4:	str	r2, [sp, #16]
   1ccc8:	ldr	r0, [fp, #-8]
   1cccc:	ldr	r0, [r0, #8]
   1ccd0:	ldr	r2, [fp, #-8]
   1ccd4:	ldr	r2, [r2, #4]
   1ccd8:	cmp	r0, r2
   1ccdc:	bne	1cd88 <__assert_fail@plt+0xb95c>
   1cce0:	ldr	r0, [fp, #-8]
   1cce4:	ldr	r0, [r0, #20]
   1cce8:	ldr	r1, [fp, #-8]
   1ccec:	ldr	r1, [r1, #16]
   1ccf0:	cmp	r0, r1
   1ccf4:	bne	1cd88 <__assert_fail@plt+0xb95c>
   1ccf8:	ldr	r0, [fp, #-8]
   1ccfc:	ldr	r0, [r0, #36]	; 0x24
   1cd00:	movw	r1, #0
   1cd04:	cmp	r0, r1
   1cd08:	bne	1cd88 <__assert_fail@plt+0xb95c>
   1cd0c:	ldr	r0, [fp, #-8]
   1cd10:	bl	11354 <fileno@plt>
   1cd14:	ldr	r2, [sp, #16]
   1cd18:	ldr	r3, [sp, #20]
   1cd1c:	ldr	r1, [fp, #8]
   1cd20:	mov	ip, sp
   1cd24:	str	r1, [ip]
   1cd28:	bl	11210 <lseek64@plt>
   1cd2c:	str	r1, [sp, #12]
   1cd30:	str	r0, [sp, #8]
   1cd34:	ldr	r0, [sp, #8]
   1cd38:	ldr	r1, [sp, #12]
   1cd3c:	and	r0, r0, r1
   1cd40:	cmn	r0, #1
   1cd44:	bne	1cd58 <__assert_fail@plt+0xb92c>
   1cd48:	b	1cd4c <__assert_fail@plt+0xb920>
   1cd4c:	mvn	r0, #0
   1cd50:	str	r0, [fp, #-4]
   1cd54:	b	1cda8 <__assert_fail@plt+0xb97c>
   1cd58:	ldr	r0, [fp, #-8]
   1cd5c:	ldr	r1, [r0]
   1cd60:	bic	r1, r1, #16
   1cd64:	str	r1, [r0]
   1cd68:	ldr	r0, [sp, #8]
   1cd6c:	ldr	r1, [sp, #12]
   1cd70:	ldr	r2, [fp, #-8]
   1cd74:	str	r1, [r2, #84]	; 0x54
   1cd78:	str	r0, [r2, #80]	; 0x50
   1cd7c:	movw	r0, #0
   1cd80:	str	r0, [fp, #-4]
   1cd84:	b	1cda8 <__assert_fail@plt+0xb97c>
   1cd88:	ldr	r0, [fp, #-8]
   1cd8c:	ldr	r2, [sp, #16]
   1cd90:	ldr	r3, [sp, #20]
   1cd94:	ldr	r1, [fp, #8]
   1cd98:	mov	ip, sp
   1cd9c:	str	r1, [ip]
   1cda0:	bl	11378 <fseeko64@plt>
   1cda4:	str	r0, [fp, #-4]
   1cda8:	ldr	r0, [fp, #-4]
   1cdac:	mov	sp, fp
   1cdb0:	pop	{fp, pc}
   1cdb4:	push	{fp, lr}
   1cdb8:	mov	fp, sp
   1cdbc:	bl	1130c <__errno_location@plt>
   1cdc0:	movw	r1, #12
   1cdc4:	str	r1, [r0]
   1cdc8:	movw	r0, #0
   1cdcc:	pop	{fp, pc}
   1cdd0:	push	{fp, lr}
   1cdd4:	mov	fp, sp
   1cdd8:	sub	sp, sp, #8
   1cddc:	str	r0, [sp, #4]
   1cde0:	ldr	r0, [sp, #4]
   1cde4:	cmn	r0, #1
   1cde8:	bhi	1cdfc <__assert_fail@plt+0xb9d0>
   1cdec:	ldr	r0, [sp, #4]
   1cdf0:	bl	1c878 <__assert_fail@plt+0xb44c>
   1cdf4:	str	r0, [sp]
   1cdf8:	b	1ce04 <__assert_fail@plt+0xb9d8>
   1cdfc:	bl	1cdb4 <__assert_fail@plt+0xb988>
   1ce00:	str	r0, [sp]
   1ce04:	ldr	r0, [sp]
   1ce08:	mov	sp, fp
   1ce0c:	pop	{fp, pc}
   1ce10:	push	{fp, lr}
   1ce14:	mov	fp, sp
   1ce18:	sub	sp, sp, #16
   1ce1c:	str	r0, [fp, #-4]
   1ce20:	str	r1, [sp, #8]
   1ce24:	ldr	r0, [sp, #8]
   1ce28:	cmn	r0, #1
   1ce2c:	bhi	1ce64 <__assert_fail@plt+0xba38>
   1ce30:	ldr	r0, [fp, #-4]
   1ce34:	ldr	r1, [sp, #8]
   1ce38:	ldr	r2, [sp, #8]
   1ce3c:	cmp	r2, #0
   1ce40:	movw	r2, #0
   1ce44:	movne	r2, #1
   1ce48:	mvn	r3, #0
   1ce4c:	eor	r2, r2, r3
   1ce50:	and	r2, r2, #1
   1ce54:	orr	r1, r1, r2
   1ce58:	bl	1c8e8 <__assert_fail@plt+0xb4bc>
   1ce5c:	str	r0, [sp, #4]
   1ce60:	b	1ce6c <__assert_fail@plt+0xba40>
   1ce64:	bl	1cdb4 <__assert_fail@plt+0xb988>
   1ce68:	str	r0, [sp, #4]
   1ce6c:	ldr	r0, [sp, #4]
   1ce70:	mov	sp, fp
   1ce74:	pop	{fp, pc}
   1ce78:	push	{fp, lr}
   1ce7c:	mov	fp, sp
   1ce80:	sub	sp, sp, #16
   1ce84:	str	r0, [sp, #8]
   1ce88:	str	r1, [sp, #4]
   1ce8c:	ldr	r0, [sp, #8]
   1ce90:	mvn	r1, #0
   1ce94:	cmp	r1, r0
   1ce98:	bcs	1cebc <__assert_fail@plt+0xba90>
   1ce9c:	ldr	r0, [sp, #4]
   1cea0:	cmp	r0, #0
   1cea4:	beq	1ceb4 <__assert_fail@plt+0xba88>
   1cea8:	bl	1cdb4 <__assert_fail@plt+0xb988>
   1ceac:	str	r0, [fp, #-4]
   1ceb0:	b	1cefc <__assert_fail@plt+0xbad0>
   1ceb4:	movw	r0, #0
   1ceb8:	str	r0, [sp, #8]
   1cebc:	ldr	r0, [sp, #4]
   1cec0:	mvn	r1, #0
   1cec4:	cmp	r1, r0
   1cec8:	bcs	1ceec <__assert_fail@plt+0xbac0>
   1cecc:	ldr	r0, [sp, #8]
   1ced0:	cmp	r0, #0
   1ced4:	beq	1cee4 <__assert_fail@plt+0xbab8>
   1ced8:	bl	1cdb4 <__assert_fail@plt+0xb988>
   1cedc:	str	r0, [fp, #-4]
   1cee0:	b	1cefc <__assert_fail@plt+0xbad0>
   1cee4:	movw	r0, #0
   1cee8:	str	r0, [sp, #4]
   1ceec:	ldr	r0, [sp, #8]
   1cef0:	ldr	r1, [sp, #4]
   1cef4:	bl	1c7dc <__assert_fail@plt+0xb3b0>
   1cef8:	str	r0, [fp, #-4]
   1cefc:	ldr	r0, [fp, #-4]
   1cf00:	mov	sp, fp
   1cf04:	pop	{fp, pc}
   1cf08:	push	{fp, lr}
   1cf0c:	mov	fp, sp
   1cf10:	sub	sp, sp, #16
   1cf14:	str	r0, [fp, #-4]
   1cf18:	str	r1, [sp, #8]
   1cf1c:	str	r2, [sp, #4]
   1cf20:	ldr	r0, [sp, #8]
   1cf24:	cmp	r0, #0
   1cf28:	beq	1cf38 <__assert_fail@plt+0xbb0c>
   1cf2c:	ldr	r0, [sp, #4]
   1cf30:	cmp	r0, #0
   1cf34:	bne	1cf44 <__assert_fail@plt+0xbb18>
   1cf38:	movw	r0, #1
   1cf3c:	str	r0, [sp, #4]
   1cf40:	str	r0, [sp, #8]
   1cf44:	ldr	r0, [sp, #8]
   1cf48:	cmn	r0, #1
   1cf4c:	bhi	1cf74 <__assert_fail@plt+0xbb48>
   1cf50:	ldr	r0, [sp, #4]
   1cf54:	cmn	r0, #1
   1cf58:	bhi	1cf74 <__assert_fail@plt+0xbb48>
   1cf5c:	ldr	r0, [fp, #-4]
   1cf60:	ldr	r1, [sp, #8]
   1cf64:	ldr	r2, [sp, #4]
   1cf68:	bl	1d5dc <__assert_fail@plt+0xc1b0>
   1cf6c:	str	r0, [sp]
   1cf70:	b	1cf7c <__assert_fail@plt+0xbb50>
   1cf74:	bl	1cdb4 <__assert_fail@plt+0xb988>
   1cf78:	str	r0, [sp]
   1cf7c:	ldr	r0, [sp]
   1cf80:	mov	sp, fp
   1cf84:	pop	{fp, pc}
   1cf88:	push	{fp, lr}
   1cf8c:	mov	fp, sp
   1cf90:	sub	sp, sp, #16
   1cf94:	str	r0, [sp, #8]
   1cf98:	str	r1, [sp, #12]
   1cf9c:	str	r2, [sp, #4]
   1cfa0:	ldr	r0, [sp, #4]
   1cfa4:	add	r0, r0, #20
   1cfa8:	str	r0, [sp]
   1cfac:	ldr	r0, [sp]
   1cfb0:	mov	r1, #0
   1cfb4:	strb	r1, [r0]
   1cfb8:	mov	r0, #1
   1cfbc:	cmp	r0, #0
   1cfc0:	bne	1d048 <__assert_fail@plt+0xbc1c>
   1cfc4:	b	1cfc8 <__assert_fail@plt+0xbb9c>
   1cfc8:	b	1cfcc <__assert_fail@plt+0xbba0>
   1cfcc:	ldr	r0, [sp, #8]
   1cfd0:	ldr	r1, [sp, #12]
   1cfd4:	mov	r2, #10
   1cfd8:	mov	r3, #0
   1cfdc:	bl	1f428 <__assert_fail@plt+0xdffc>
   1cfe0:	rsb	r2, r2, #48	; 0x30
   1cfe4:	ldr	r3, [sp]
   1cfe8:	mvn	ip, #0
   1cfec:	add	lr, r3, ip
   1cff0:	str	lr, [sp]
   1cff4:	add	r3, r3, ip
   1cff8:	strb	r2, [r3]
   1cffc:	ldr	r0, [sp, #8]
   1d000:	ldr	r1, [sp, #12]
   1d004:	mov	r2, #10
   1d008:	mov	r3, #0
   1d00c:	bl	1f428 <__assert_fail@plt+0xdffc>
   1d010:	str	r1, [sp, #12]
   1d014:	str	r0, [sp, #8]
   1d018:	orr	r0, r0, r1
   1d01c:	cmp	r0, #0
   1d020:	bne	1cfcc <__assert_fail@plt+0xbba0>
   1d024:	b	1d028 <__assert_fail@plt+0xbbfc>
   1d028:	ldr	r0, [sp]
   1d02c:	mvn	r1, #0
   1d030:	add	r2, r0, r1
   1d034:	str	r2, [sp]
   1d038:	add	r0, r0, r1
   1d03c:	movw	r1, #45	; 0x2d
   1d040:	strb	r1, [r0]
   1d044:	b	1d0ac <__assert_fail@plt+0xbc80>
   1d048:	b	1d04c <__assert_fail@plt+0xbc20>
   1d04c:	ldr	r0, [sp, #8]
   1d050:	ldr	r1, [sp, #12]
   1d054:	mov	r2, #10
   1d058:	mov	r3, #0
   1d05c:	bl	1f428 <__assert_fail@plt+0xdffc>
   1d060:	orr	r2, r2, #48	; 0x30
   1d064:	ldr	r3, [sp]
   1d068:	mvn	ip, #0
   1d06c:	add	lr, r3, ip
   1d070:	str	lr, [sp]
   1d074:	add	r3, r3, ip
   1d078:	strb	r2, [r3]
   1d07c:	ldr	r0, [sp, #8]
   1d080:	ldr	r1, [sp, #12]
   1d084:	mov	r2, #10
   1d088:	mov	r3, #0
   1d08c:	bl	1f428 <__assert_fail@plt+0xdffc>
   1d090:	str	r1, [sp, #12]
   1d094:	str	r0, [sp, #8]
   1d098:	orr	r0, r0, r1
   1d09c:	cmp	r0, #0
   1d0a0:	bne	1d04c <__assert_fail@plt+0xbc20>
   1d0a4:	b	1d0a8 <__assert_fail@plt+0xbc7c>
   1d0a8:	b	1d0ac <__assert_fail@plt+0xbc80>
   1d0ac:	ldr	r0, [sp]
   1d0b0:	mov	sp, fp
   1d0b4:	pop	{fp, pc}
   1d0b8:	push	{fp, lr}
   1d0bc:	mov	fp, sp
   1d0c0:	sub	sp, sp, #8
   1d0c4:	movw	r0, #14
   1d0c8:	bl	113b4 <nl_langinfo@plt>
   1d0cc:	str	r0, [sp, #4]
   1d0d0:	ldr	r0, [sp, #4]
   1d0d4:	movw	r1, #0
   1d0d8:	cmp	r0, r1
   1d0dc:	bne	1d0ec <__assert_fail@plt+0xbcc0>
   1d0e0:	movw	r0, #63164	; 0xf6bc
   1d0e4:	movt	r0, #1
   1d0e8:	str	r0, [sp, #4]
   1d0ec:	ldr	r0, [sp, #4]
   1d0f0:	ldrb	r0, [r0]
   1d0f4:	cmp	r0, #0
   1d0f8:	bne	1d108 <__assert_fail@plt+0xbcdc>
   1d0fc:	movw	r0, #299	; 0x12b
   1d100:	movt	r0, #2
   1d104:	str	r0, [sp, #4]
   1d108:	ldr	r0, [sp, #4]
   1d10c:	mov	sp, fp
   1d110:	pop	{fp, pc}
   1d114:	push	{fp, lr}
   1d118:	mov	fp, sp
   1d11c:	sub	sp, sp, #32
   1d120:	str	r0, [fp, #-8]
   1d124:	str	r1, [fp, #-12]
   1d128:	str	r2, [sp, #16]
   1d12c:	str	r3, [sp, #12]
   1d130:	ldr	r0, [fp, #-8]
   1d134:	movw	r1, #0
   1d138:	cmp	r0, r1
   1d13c:	bne	1d148 <__assert_fail@plt+0xbd1c>
   1d140:	add	r0, sp, #4
   1d144:	str	r0, [fp, #-8]
   1d148:	ldr	r0, [fp, #-8]
   1d14c:	ldr	r1, [fp, #-12]
   1d150:	ldr	r2, [sp, #16]
   1d154:	ldr	r3, [sp, #12]
   1d158:	bl	1124c <mbrtowc@plt>
   1d15c:	str	r0, [sp, #8]
   1d160:	ldr	r0, [sp, #8]
   1d164:	mvn	r1, #1
   1d168:	cmp	r1, r0
   1d16c:	bhi	1d1b0 <__assert_fail@plt+0xbd84>
   1d170:	ldr	r0, [sp, #16]
   1d174:	cmp	r0, #0
   1d178:	beq	1d1b0 <__assert_fail@plt+0xbd84>
   1d17c:	movw	r0, #0
   1d180:	bl	1f15c <__assert_fail@plt+0xdd30>
   1d184:	tst	r0, #1
   1d188:	bne	1d1b0 <__assert_fail@plt+0xbd84>
   1d18c:	ldr	r0, [fp, #-12]
   1d190:	ldrb	r0, [r0]
   1d194:	strb	r0, [sp, #3]
   1d198:	ldrb	r0, [sp, #3]
   1d19c:	ldr	r1, [fp, #-8]
   1d1a0:	str	r0, [r1]
   1d1a4:	movw	r0, #1
   1d1a8:	str	r0, [fp, #-4]
   1d1ac:	b	1d1b8 <__assert_fail@plt+0xbd8c>
   1d1b0:	ldr	r0, [sp, #8]
   1d1b4:	str	r0, [fp, #-4]
   1d1b8:	ldr	r0, [fp, #-4]
   1d1bc:	mov	sp, fp
   1d1c0:	pop	{fp, pc}
   1d1c4:	push	{fp, lr}
   1d1c8:	mov	fp, sp
   1d1cc:	sub	sp, sp, #64	; 0x40
   1d1d0:	str	r0, [fp, #-8]
   1d1d4:	str	r1, [fp, #-12]
   1d1d8:	str	r2, [fp, #-16]
   1d1dc:	ldr	r0, [fp, #-8]
   1d1e0:	movw	r1, #0
   1d1e4:	cmp	r0, r1
   1d1e8:	beq	1d2d0 <__assert_fail@plt+0xbea4>
   1d1ec:	movw	r0, #10
   1d1f0:	str	r0, [fp, #-20]	; 0xffffffec
   1d1f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d1f8:	movw	r0, #0
   1d1fc:	bl	1d57c <__assert_fail@plt+0xc150>
   1d200:	str	r0, [fp, #-28]	; 0xffffffe4
   1d204:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d208:	movw	r1, #0
   1d20c:	cmp	r0, r1
   1d210:	bne	1d220 <__assert_fail@plt+0xbdf4>
   1d214:	mvn	r0, #0
   1d218:	str	r0, [fp, #-4]
   1d21c:	b	1d570 <__assert_fail@plt+0xc144>
   1d220:	b	1d224 <__assert_fail@plt+0xbdf8>
   1d224:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d228:	str	r0, [sp, #28]
   1d22c:	ldr	r0, [fp, #-8]
   1d230:	ldr	r1, [fp, #-12]
   1d234:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d238:	sub	r3, fp, #20
   1d23c:	bl	11324 <getgrouplist@plt>
   1d240:	str	r0, [fp, #-24]	; 0xffffffe8
   1d244:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d248:	cmp	r0, #0
   1d24c:	bge	1d26c <__assert_fail@plt+0xbe40>
   1d250:	ldr	r0, [sp, #28]
   1d254:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d258:	cmp	r0, r1
   1d25c:	bne	1d26c <__assert_fail@plt+0xbe40>
   1d260:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d264:	lsl	r0, r0, #1
   1d268:	str	r0, [fp, #-20]	; 0xffffffec
   1d26c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d270:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d274:	bl	1d57c <__assert_fail@plt+0xc150>
   1d278:	str	r0, [sp, #32]
   1d27c:	movw	r1, #0
   1d280:	cmp	r0, r1
   1d284:	bne	1d29c <__assert_fail@plt+0xbe70>
   1d288:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d28c:	bl	1277c <__assert_fail@plt+0x1350>
   1d290:	mvn	r0, #0
   1d294:	str	r0, [fp, #-4]
   1d298:	b	1d570 <__assert_fail@plt+0xc144>
   1d29c:	ldr	r0, [sp, #32]
   1d2a0:	str	r0, [fp, #-28]	; 0xffffffe4
   1d2a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2a8:	movw	r1, #0
   1d2ac:	cmp	r1, r0
   1d2b0:	bgt	1d2cc <__assert_fail@plt+0xbea0>
   1d2b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d2b8:	ldr	r1, [fp, #-16]
   1d2bc:	str	r0, [r1]
   1d2c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d2c4:	str	r0, [fp, #-4]
   1d2c8:	b	1d570 <__assert_fail@plt+0xc144>
   1d2cc:	b	1d224 <__assert_fail@plt+0xbdf8>
   1d2d0:	ldr	r0, [fp, #-8]
   1d2d4:	movw	r1, #0
   1d2d8:	cmp	r0, r1
   1d2dc:	beq	1d300 <__assert_fail@plt+0xbed4>
   1d2e0:	ldr	r2, [fp, #-8]
   1d2e4:	ldr	r3, [fp, #-12]
   1d2e8:	movw	r0, #0
   1d2ec:	str	r0, [sp, #12]
   1d2f0:	ldr	r1, [sp, #12]
   1d2f4:	bl	1ef5c <__assert_fail@plt+0xdb30>
   1d2f8:	str	r0, [sp, #8]
   1d2fc:	b	1d314 <__assert_fail@plt+0xbee8>
   1d300:	movw	r0, #0
   1d304:	str	r0, [sp, #4]
   1d308:	ldr	r1, [sp, #4]
   1d30c:	bl	113cc <getgroups@plt>
   1d310:	str	r0, [sp, #8]
   1d314:	ldr	r0, [sp, #8]
   1d318:	str	r0, [fp, #-20]	; 0xffffffec
   1d31c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d320:	cmp	r0, #0
   1d324:	bge	1d394 <__assert_fail@plt+0xbf68>
   1d328:	bl	1130c <__errno_location@plt>
   1d32c:	ldr	r0, [r0]
   1d330:	cmp	r0, #38	; 0x26
   1d334:	bne	1d388 <__assert_fail@plt+0xbf5c>
   1d338:	movw	r0, #0
   1d33c:	movw	r1, #1
   1d340:	bl	1d57c <__assert_fail@plt+0xc150>
   1d344:	str	r0, [fp, #-28]	; 0xffffffe4
   1d348:	movw	r1, #0
   1d34c:	cmp	r0, r1
   1d350:	beq	1d388 <__assert_fail@plt+0xbf5c>
   1d354:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d358:	ldr	r1, [fp, #-16]
   1d35c:	str	r0, [r1]
   1d360:	ldr	r0, [fp, #-12]
   1d364:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d368:	str	r0, [r1]
   1d36c:	ldr	r0, [fp, #-12]
   1d370:	cmn	r0, #1
   1d374:	movw	r0, #0
   1d378:	movne	r0, #1
   1d37c:	and	r0, r0, #1
   1d380:	str	r0, [fp, #-4]
   1d384:	b	1d570 <__assert_fail@plt+0xc144>
   1d388:	mvn	r0, #0
   1d38c:	str	r0, [fp, #-4]
   1d390:	b	1d570 <__assert_fail@plt+0xc144>
   1d394:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d398:	cmp	r0, #0
   1d39c:	beq	1d3bc <__assert_fail@plt+0xbf90>
   1d3a0:	ldr	r0, [fp, #-8]
   1d3a4:	movw	r1, #0
   1d3a8:	cmp	r0, r1
   1d3ac:	bne	1d3c8 <__assert_fail@plt+0xbf9c>
   1d3b0:	ldr	r0, [fp, #-12]
   1d3b4:	cmn	r0, #1
   1d3b8:	beq	1d3c8 <__assert_fail@plt+0xbf9c>
   1d3bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d3c0:	add	r0, r0, #1
   1d3c4:	str	r0, [fp, #-20]	; 0xffffffec
   1d3c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d3cc:	movw	r0, #0
   1d3d0:	bl	1d57c <__assert_fail@plt+0xc150>
   1d3d4:	str	r0, [fp, #-28]	; 0xffffffe4
   1d3d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d3dc:	movw	r1, #0
   1d3e0:	cmp	r0, r1
   1d3e4:	bne	1d3f4 <__assert_fail@plt+0xbfc8>
   1d3e8:	mvn	r0, #0
   1d3ec:	str	r0, [fp, #-4]
   1d3f0:	b	1d570 <__assert_fail@plt+0xc144>
   1d3f4:	ldr	r0, [fp, #-8]
   1d3f8:	movw	r1, #0
   1d3fc:	cmp	r0, r1
   1d400:	beq	1d420 <__assert_fail@plt+0xbff4>
   1d404:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d408:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d40c:	ldr	r2, [fp, #-8]
   1d410:	ldr	r3, [fp, #-12]
   1d414:	bl	1ef5c <__assert_fail@plt+0xdb30>
   1d418:	str	r0, [sp]
   1d41c:	b	1d448 <__assert_fail@plt+0xc01c>
   1d420:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d424:	ldr	r1, [fp, #-12]
   1d428:	mvn	r2, #0
   1d42c:	subs	r1, r1, r2
   1d430:	movwne	r1, #1
   1d434:	sub	r0, r0, r1
   1d438:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d43c:	add	r1, r2, r1, lsl #2
   1d440:	bl	113cc <getgroups@plt>
   1d444:	str	r0, [sp]
   1d448:	ldr	r0, [sp]
   1d44c:	str	r0, [fp, #-24]	; 0xffffffe8
   1d450:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d454:	cmp	r0, #0
   1d458:	bge	1d470 <__assert_fail@plt+0xc044>
   1d45c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d460:	bl	1277c <__assert_fail@plt+0x1350>
   1d464:	mvn	r0, #0
   1d468:	str	r0, [fp, #-4]
   1d46c:	b	1d570 <__assert_fail@plt+0xc144>
   1d470:	ldr	r0, [fp, #-8]
   1d474:	movw	r1, #0
   1d478:	cmp	r0, r1
   1d47c:	bne	1d4a4 <__assert_fail@plt+0xc078>
   1d480:	ldr	r0, [fp, #-12]
   1d484:	cmn	r0, #1
   1d488:	beq	1d4a4 <__assert_fail@plt+0xc078>
   1d48c:	ldr	r0, [fp, #-12]
   1d490:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d494:	str	r0, [r1]
   1d498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d49c:	add	r0, r0, #1
   1d4a0:	str	r0, [fp, #-24]	; 0xffffffe8
   1d4a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d4a8:	ldr	r1, [fp, #-16]
   1d4ac:	str	r0, [r1]
   1d4b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d4b4:	movw	r1, #1
   1d4b8:	cmp	r1, r0
   1d4bc:	bge	1d568 <__assert_fail@plt+0xc13c>
   1d4c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d4c4:	ldr	r0, [r0]
   1d4c8:	str	r0, [sp, #24]
   1d4cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d4d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d4d4:	add	r0, r0, r1, lsl #2
   1d4d8:	str	r0, [sp, #16]
   1d4dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d4e0:	add	r0, r0, #4
   1d4e4:	str	r0, [sp, #20]
   1d4e8:	ldr	r0, [sp, #20]
   1d4ec:	ldr	r1, [sp, #16]
   1d4f0:	cmp	r0, r1
   1d4f4:	bcs	1d564 <__assert_fail@plt+0xc138>
   1d4f8:	ldr	r0, [sp, #20]
   1d4fc:	ldr	r0, [r0]
   1d500:	ldr	r1, [sp, #24]
   1d504:	cmp	r0, r1
   1d508:	beq	1d524 <__assert_fail@plt+0xc0f8>
   1d50c:	ldr	r0, [sp, #20]
   1d510:	ldr	r0, [r0]
   1d514:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d518:	ldr	r1, [r1]
   1d51c:	cmp	r0, r1
   1d520:	bne	1d538 <__assert_fail@plt+0xc10c>
   1d524:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d528:	mvn	r1, #0
   1d52c:	add	r0, r0, r1
   1d530:	str	r0, [fp, #-24]	; 0xffffffe8
   1d534:	b	1d550 <__assert_fail@plt+0xc124>
   1d538:	ldr	r0, [sp, #20]
   1d53c:	ldr	r0, [r0]
   1d540:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d544:	add	r2, r1, #4
   1d548:	str	r2, [fp, #-28]	; 0xffffffe4
   1d54c:	str	r0, [r1, #4]
   1d550:	b	1d554 <__assert_fail@plt+0xc128>
   1d554:	ldr	r0, [sp, #20]
   1d558:	add	r0, r0, #4
   1d55c:	str	r0, [sp, #20]
   1d560:	b	1d4e8 <__assert_fail@plt+0xc0bc>
   1d564:	b	1d568 <__assert_fail@plt+0xc13c>
   1d568:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d56c:	str	r0, [fp, #-4]
   1d570:	ldr	r0, [fp, #-4]
   1d574:	mov	sp, fp
   1d578:	pop	{fp, pc}
   1d57c:	push	{fp, lr}
   1d580:	mov	fp, sp
   1d584:	sub	sp, sp, #16
   1d588:	ldr	r2, [pc, #72]	; 1d5d8 <__assert_fail@plt+0xc1ac>
   1d58c:	str	r0, [sp, #8]
   1d590:	str	r1, [sp, #4]
   1d594:	ldr	r0, [sp, #4]
   1d598:	cmp	r2, r0
   1d59c:	bcs	1d5b8 <__assert_fail@plt+0xc18c>
   1d5a0:	bl	1130c <__errno_location@plt>
   1d5a4:	movw	r1, #12
   1d5a8:	str	r1, [r0]
   1d5ac:	movw	r0, #0
   1d5b0:	str	r0, [fp, #-4]
   1d5b4:	b	1d5cc <__assert_fail@plt+0xc1a0>
   1d5b8:	ldr	r0, [sp, #8]
   1d5bc:	ldr	r1, [sp, #4]
   1d5c0:	lsl	r1, r1, #2
   1d5c4:	bl	1c8e8 <__assert_fail@plt+0xb4bc>
   1d5c8:	str	r0, [fp, #-4]
   1d5cc:	ldr	r0, [fp, #-4]
   1d5d0:	mov	sp, fp
   1d5d4:	pop	{fp, pc}
   1d5d8:	svcne	0x00ffffff
   1d5dc:	push	{fp, lr}
   1d5e0:	mov	fp, sp
   1d5e4:	sub	sp, sp, #96	; 0x60
   1d5e8:	str	r0, [fp, #-8]
   1d5ec:	str	r1, [fp, #-12]
   1d5f0:	str	r2, [fp, #-16]
   1d5f4:	b	1d9ac <__assert_fail@plt+0xc580>
   1d5f8:	b	1d7cc <__assert_fail@plt+0xc3a0>
   1d5fc:	ldr	r0, [fp, #-16]
   1d600:	cmp	r0, #0
   1d604:	bcs	1d708 <__assert_fail@plt+0xc2dc>
   1d608:	ldr	r0, [fp, #-12]
   1d60c:	cmp	r0, #0
   1d610:	bcs	1d698 <__assert_fail@plt+0xc26c>
   1d614:	b	1d634 <__assert_fail@plt+0xc208>
   1d618:	ldr	r0, [fp, #-12]
   1d61c:	ldr	r1, [fp, #-16]
   1d620:	movw	r2, #127	; 0x7f
   1d624:	udiv	r1, r2, r1
   1d628:	cmp	r0, r1
   1d62c:	bcc	1d79c <__assert_fail@plt+0xc370>
   1d630:	b	1d7b4 <__assert_fail@plt+0xc388>
   1d634:	b	1d648 <__assert_fail@plt+0xc21c>
   1d638:	ldr	r0, [fp, #-16]
   1d63c:	cmp	r0, #1
   1d640:	bcc	1d658 <__assert_fail@plt+0xc22c>
   1d644:	b	1d664 <__assert_fail@plt+0xc238>
   1d648:	ldr	r0, [fp, #-16]
   1d64c:	movw	r1, #0
   1d650:	cmp	r1, r0
   1d654:	bcs	1d664 <__assert_fail@plt+0xc238>
   1d658:	movw	r0, #0
   1d65c:	str	r0, [fp, #-24]	; 0xffffffe8
   1d660:	b	1d67c <__assert_fail@plt+0xc250>
   1d664:	ldr	r0, [fp, #-16]
   1d668:	movw	r1, #0
   1d66c:	sub	r0, r1, r0
   1d670:	movw	r1, #127	; 0x7f
   1d674:	udiv	r0, r1, r0
   1d678:	str	r0, [fp, #-24]	; 0xffffffe8
   1d67c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d680:	ldr	r1, [fp, #-12]
   1d684:	mvn	r2, #0
   1d688:	sub	r1, r2, r1
   1d68c:	cmp	r0, r1
   1d690:	bls	1d79c <__assert_fail@plt+0xc370>
   1d694:	b	1d7b4 <__assert_fail@plt+0xc388>
   1d698:	ldr	r0, [fp, #-16]
   1d69c:	cmn	r0, #1
   1d6a0:	bne	1d6ec <__assert_fail@plt+0xc2c0>
   1d6a4:	b	1d6c4 <__assert_fail@plt+0xc298>
   1d6a8:	ldr	r0, [fp, #-12]
   1d6ac:	mvn	r1, #127	; 0x7f
   1d6b0:	add	r0, r0, r1
   1d6b4:	movw	r1, #0
   1d6b8:	cmp	r1, r0
   1d6bc:	bcc	1d79c <__assert_fail@plt+0xc370>
   1d6c0:	b	1d7b4 <__assert_fail@plt+0xc388>
   1d6c4:	ldr	r0, [fp, #-12]
   1d6c8:	movw	r1, #0
   1d6cc:	cmp	r1, r0
   1d6d0:	bcs	1d7b4 <__assert_fail@plt+0xc388>
   1d6d4:	ldr	r0, [fp, #-12]
   1d6d8:	sub	r0, r0, #1
   1d6dc:	movw	r1, #127	; 0x7f
   1d6e0:	cmp	r1, r0
   1d6e4:	bcc	1d79c <__assert_fail@plt+0xc370>
   1d6e8:	b	1d7b4 <__assert_fail@plt+0xc388>
   1d6ec:	ldr	r0, [fp, #-16]
   1d6f0:	mvn	r1, #127	; 0x7f
   1d6f4:	udiv	r0, r1, r0
   1d6f8:	ldr	r1, [fp, #-12]
   1d6fc:	cmp	r0, r1
   1d700:	bcc	1d79c <__assert_fail@plt+0xc370>
   1d704:	b	1d7b4 <__assert_fail@plt+0xc388>
   1d708:	ldr	r0, [fp, #-16]
   1d70c:	cmp	r0, #0
   1d710:	bne	1d718 <__assert_fail@plt+0xc2ec>
   1d714:	b	1d7b4 <__assert_fail@plt+0xc388>
   1d718:	ldr	r0, [fp, #-12]
   1d71c:	cmp	r0, #0
   1d720:	bcs	1d784 <__assert_fail@plt+0xc358>
   1d724:	ldr	r0, [fp, #-12]
   1d728:	cmn	r0, #1
   1d72c:	bne	1d768 <__assert_fail@plt+0xc33c>
   1d730:	b	1d750 <__assert_fail@plt+0xc324>
   1d734:	ldr	r0, [fp, #-16]
   1d738:	mvn	r1, #127	; 0x7f
   1d73c:	add	r0, r0, r1
   1d740:	movw	r1, #0
   1d744:	cmp	r1, r0
   1d748:	bcc	1d79c <__assert_fail@plt+0xc370>
   1d74c:	b	1d7b4 <__assert_fail@plt+0xc388>
   1d750:	ldr	r0, [fp, #-16]
   1d754:	sub	r0, r0, #1
   1d758:	movw	r1, #127	; 0x7f
   1d75c:	cmp	r1, r0
   1d760:	bcc	1d79c <__assert_fail@plt+0xc370>
   1d764:	b	1d7b4 <__assert_fail@plt+0xc388>
   1d768:	ldr	r0, [fp, #-12]
   1d76c:	mvn	r1, #127	; 0x7f
   1d770:	udiv	r0, r1, r0
   1d774:	ldr	r1, [fp, #-16]
   1d778:	cmp	r0, r1
   1d77c:	bcc	1d79c <__assert_fail@plt+0xc370>
   1d780:	b	1d7b4 <__assert_fail@plt+0xc388>
   1d784:	ldr	r0, [fp, #-16]
   1d788:	movw	r1, #127	; 0x7f
   1d78c:	udiv	r0, r1, r0
   1d790:	ldr	r1, [fp, #-12]
   1d794:	cmp	r0, r1
   1d798:	bcs	1d7b4 <__assert_fail@plt+0xc388>
   1d79c:	ldr	r0, [fp, #-12]
   1d7a0:	ldr	r1, [fp, #-16]
   1d7a4:	mul	r0, r0, r1
   1d7a8:	sxtb	r0, r0
   1d7ac:	str	r0, [fp, #-20]	; 0xffffffec
   1d7b0:	b	1e8dc <__assert_fail@plt+0xd4b0>
   1d7b4:	ldr	r0, [fp, #-12]
   1d7b8:	ldr	r1, [fp, #-16]
   1d7bc:	mul	r0, r0, r1
   1d7c0:	sxtb	r0, r0
   1d7c4:	str	r0, [fp, #-20]	; 0xffffffec
   1d7c8:	b	1e8f4 <__assert_fail@plt+0xd4c8>
   1d7cc:	ldr	r0, [fp, #-16]
   1d7d0:	cmp	r0, #0
   1d7d4:	bcs	1d8e0 <__assert_fail@plt+0xc4b4>
   1d7d8:	ldr	r0, [fp, #-12]
   1d7dc:	cmp	r0, #0
   1d7e0:	bcs	1d868 <__assert_fail@plt+0xc43c>
   1d7e4:	b	1d804 <__assert_fail@plt+0xc3d8>
   1d7e8:	ldr	r0, [fp, #-12]
   1d7ec:	ldr	r1, [fp, #-16]
   1d7f0:	movw	r2, #255	; 0xff
   1d7f4:	udiv	r1, r2, r1
   1d7f8:	cmp	r0, r1
   1d7fc:	bcc	1d97c <__assert_fail@plt+0xc550>
   1d800:	b	1d994 <__assert_fail@plt+0xc568>
   1d804:	b	1d818 <__assert_fail@plt+0xc3ec>
   1d808:	ldr	r0, [fp, #-16]
   1d80c:	cmp	r0, #1
   1d810:	bcc	1d828 <__assert_fail@plt+0xc3fc>
   1d814:	b	1d834 <__assert_fail@plt+0xc408>
   1d818:	ldr	r0, [fp, #-16]
   1d81c:	movw	r1, #0
   1d820:	cmp	r1, r0
   1d824:	bcs	1d834 <__assert_fail@plt+0xc408>
   1d828:	movw	r0, #0
   1d82c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d830:	b	1d84c <__assert_fail@plt+0xc420>
   1d834:	ldr	r0, [fp, #-16]
   1d838:	movw	r1, #0
   1d83c:	sub	r0, r1, r0
   1d840:	movw	r1, #255	; 0xff
   1d844:	udiv	r0, r1, r0
   1d848:	str	r0, [fp, #-28]	; 0xffffffe4
   1d84c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d850:	ldr	r1, [fp, #-12]
   1d854:	mvn	r2, #0
   1d858:	sub	r1, r2, r1
   1d85c:	cmp	r0, r1
   1d860:	bls	1d97c <__assert_fail@plt+0xc550>
   1d864:	b	1d994 <__assert_fail@plt+0xc568>
   1d868:	b	1d870 <__assert_fail@plt+0xc444>
   1d86c:	b	1d874 <__assert_fail@plt+0xc448>
   1d870:	b	1d8c4 <__assert_fail@plt+0xc498>
   1d874:	ldr	r0, [fp, #-16]
   1d878:	cmn	r0, #1
   1d87c:	bne	1d8c4 <__assert_fail@plt+0xc498>
   1d880:	b	1d89c <__assert_fail@plt+0xc470>
   1d884:	ldr	r0, [fp, #-12]
   1d888:	add	r0, r0, #0
   1d88c:	movw	r1, #0
   1d890:	cmp	r1, r0
   1d894:	bcc	1d97c <__assert_fail@plt+0xc550>
   1d898:	b	1d994 <__assert_fail@plt+0xc568>
   1d89c:	ldr	r0, [fp, #-12]
   1d8a0:	movw	r1, #0
   1d8a4:	cmp	r1, r0
   1d8a8:	bcs	1d994 <__assert_fail@plt+0xc568>
   1d8ac:	ldr	r0, [fp, #-12]
   1d8b0:	sub	r0, r0, #1
   1d8b4:	mvn	r1, #0
   1d8b8:	cmp	r1, r0
   1d8bc:	bcc	1d97c <__assert_fail@plt+0xc550>
   1d8c0:	b	1d994 <__assert_fail@plt+0xc568>
   1d8c4:	ldr	r0, [fp, #-16]
   1d8c8:	movw	r1, #0
   1d8cc:	udiv	r0, r1, r0
   1d8d0:	ldr	r1, [fp, #-12]
   1d8d4:	cmp	r0, r1
   1d8d8:	bcc	1d97c <__assert_fail@plt+0xc550>
   1d8dc:	b	1d994 <__assert_fail@plt+0xc568>
   1d8e0:	ldr	r0, [fp, #-16]
   1d8e4:	cmp	r0, #0
   1d8e8:	bne	1d8f0 <__assert_fail@plt+0xc4c4>
   1d8ec:	b	1d994 <__assert_fail@plt+0xc568>
   1d8f0:	ldr	r0, [fp, #-12]
   1d8f4:	cmp	r0, #0
   1d8f8:	bcs	1d964 <__assert_fail@plt+0xc538>
   1d8fc:	b	1d904 <__assert_fail@plt+0xc4d8>
   1d900:	b	1d908 <__assert_fail@plt+0xc4dc>
   1d904:	b	1d948 <__assert_fail@plt+0xc51c>
   1d908:	ldr	r0, [fp, #-12]
   1d90c:	cmn	r0, #1
   1d910:	bne	1d948 <__assert_fail@plt+0xc51c>
   1d914:	b	1d930 <__assert_fail@plt+0xc504>
   1d918:	ldr	r0, [fp, #-16]
   1d91c:	add	r0, r0, #0
   1d920:	movw	r1, #0
   1d924:	cmp	r1, r0
   1d928:	bcc	1d97c <__assert_fail@plt+0xc550>
   1d92c:	b	1d994 <__assert_fail@plt+0xc568>
   1d930:	ldr	r0, [fp, #-16]
   1d934:	sub	r0, r0, #1
   1d938:	mvn	r1, #0
   1d93c:	cmp	r1, r0
   1d940:	bcc	1d97c <__assert_fail@plt+0xc550>
   1d944:	b	1d994 <__assert_fail@plt+0xc568>
   1d948:	ldr	r0, [fp, #-12]
   1d94c:	movw	r1, #0
   1d950:	udiv	r0, r1, r0
   1d954:	ldr	r1, [fp, #-16]
   1d958:	cmp	r0, r1
   1d95c:	bcc	1d97c <__assert_fail@plt+0xc550>
   1d960:	b	1d994 <__assert_fail@plt+0xc568>
   1d964:	ldr	r0, [fp, #-16]
   1d968:	movw	r1, #255	; 0xff
   1d96c:	udiv	r0, r1, r0
   1d970:	ldr	r1, [fp, #-12]
   1d974:	cmp	r0, r1
   1d978:	bcs	1d994 <__assert_fail@plt+0xc568>
   1d97c:	ldr	r0, [fp, #-12]
   1d980:	ldr	r1, [fp, #-16]
   1d984:	mul	r0, r0, r1
   1d988:	and	r0, r0, #255	; 0xff
   1d98c:	str	r0, [fp, #-20]	; 0xffffffec
   1d990:	b	1e8dc <__assert_fail@plt+0xd4b0>
   1d994:	ldr	r0, [fp, #-12]
   1d998:	ldr	r1, [fp, #-16]
   1d99c:	mul	r0, r0, r1
   1d9a0:	and	r0, r0, #255	; 0xff
   1d9a4:	str	r0, [fp, #-20]	; 0xffffffec
   1d9a8:	b	1e8f4 <__assert_fail@plt+0xd4c8>
   1d9ac:	b	1dd64 <__assert_fail@plt+0xc938>
   1d9b0:	b	1db84 <__assert_fail@plt+0xc758>
   1d9b4:	ldr	r0, [fp, #-16]
   1d9b8:	cmp	r0, #0
   1d9bc:	bcs	1dac0 <__assert_fail@plt+0xc694>
   1d9c0:	ldr	r0, [fp, #-12]
   1d9c4:	cmp	r0, #0
   1d9c8:	bcs	1da50 <__assert_fail@plt+0xc624>
   1d9cc:	b	1d9ec <__assert_fail@plt+0xc5c0>
   1d9d0:	ldr	r0, [fp, #-12]
   1d9d4:	ldr	r1, [fp, #-16]
   1d9d8:	movw	r2, #32767	; 0x7fff
   1d9dc:	udiv	r1, r2, r1
   1d9e0:	cmp	r0, r1
   1d9e4:	bcc	1db54 <__assert_fail@plt+0xc728>
   1d9e8:	b	1db6c <__assert_fail@plt+0xc740>
   1d9ec:	b	1da00 <__assert_fail@plt+0xc5d4>
   1d9f0:	ldr	r0, [fp, #-16]
   1d9f4:	cmp	r0, #1
   1d9f8:	bcc	1da10 <__assert_fail@plt+0xc5e4>
   1d9fc:	b	1da1c <__assert_fail@plt+0xc5f0>
   1da00:	ldr	r0, [fp, #-16]
   1da04:	movw	r1, #0
   1da08:	cmp	r1, r0
   1da0c:	bcs	1da1c <__assert_fail@plt+0xc5f0>
   1da10:	movw	r0, #0
   1da14:	str	r0, [fp, #-32]	; 0xffffffe0
   1da18:	b	1da34 <__assert_fail@plt+0xc608>
   1da1c:	ldr	r0, [fp, #-16]
   1da20:	movw	r1, #0
   1da24:	sub	r0, r1, r0
   1da28:	movw	r1, #32767	; 0x7fff
   1da2c:	udiv	r0, r1, r0
   1da30:	str	r0, [fp, #-32]	; 0xffffffe0
   1da34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1da38:	ldr	r1, [fp, #-12]
   1da3c:	mvn	r2, #0
   1da40:	sub	r1, r2, r1
   1da44:	cmp	r0, r1
   1da48:	bls	1db54 <__assert_fail@plt+0xc728>
   1da4c:	b	1db6c <__assert_fail@plt+0xc740>
   1da50:	ldr	r0, [fp, #-16]
   1da54:	cmn	r0, #1
   1da58:	bne	1daa4 <__assert_fail@plt+0xc678>
   1da5c:	b	1da7c <__assert_fail@plt+0xc650>
   1da60:	ldr	r0, [pc, #3760]	; 1e918 <__assert_fail@plt+0xd4ec>
   1da64:	ldr	r1, [fp, #-12]
   1da68:	add	r0, r1, r0
   1da6c:	movw	r1, #0
   1da70:	cmp	r1, r0
   1da74:	bcc	1db54 <__assert_fail@plt+0xc728>
   1da78:	b	1db6c <__assert_fail@plt+0xc740>
   1da7c:	ldr	r0, [fp, #-12]
   1da80:	movw	r1, #0
   1da84:	cmp	r1, r0
   1da88:	bcs	1db6c <__assert_fail@plt+0xc740>
   1da8c:	ldr	r0, [fp, #-12]
   1da90:	sub	r0, r0, #1
   1da94:	movw	r1, #32767	; 0x7fff
   1da98:	cmp	r1, r0
   1da9c:	bcc	1db54 <__assert_fail@plt+0xc728>
   1daa0:	b	1db6c <__assert_fail@plt+0xc740>
   1daa4:	ldr	r0, [pc, #3692]	; 1e918 <__assert_fail@plt+0xd4ec>
   1daa8:	ldr	r1, [fp, #-16]
   1daac:	udiv	r0, r0, r1
   1dab0:	ldr	r1, [fp, #-12]
   1dab4:	cmp	r0, r1
   1dab8:	bcc	1db54 <__assert_fail@plt+0xc728>
   1dabc:	b	1db6c <__assert_fail@plt+0xc740>
   1dac0:	ldr	r0, [fp, #-16]
   1dac4:	cmp	r0, #0
   1dac8:	bne	1dad0 <__assert_fail@plt+0xc6a4>
   1dacc:	b	1db6c <__assert_fail@plt+0xc740>
   1dad0:	ldr	r0, [fp, #-12]
   1dad4:	cmp	r0, #0
   1dad8:	bcs	1db3c <__assert_fail@plt+0xc710>
   1dadc:	ldr	r0, [fp, #-12]
   1dae0:	cmn	r0, #1
   1dae4:	bne	1db20 <__assert_fail@plt+0xc6f4>
   1dae8:	b	1db08 <__assert_fail@plt+0xc6dc>
   1daec:	ldr	r0, [pc, #3620]	; 1e918 <__assert_fail@plt+0xd4ec>
   1daf0:	ldr	r1, [fp, #-16]
   1daf4:	add	r0, r1, r0
   1daf8:	movw	r1, #0
   1dafc:	cmp	r1, r0
   1db00:	bcc	1db54 <__assert_fail@plt+0xc728>
   1db04:	b	1db6c <__assert_fail@plt+0xc740>
   1db08:	ldr	r0, [fp, #-16]
   1db0c:	sub	r0, r0, #1
   1db10:	movw	r1, #32767	; 0x7fff
   1db14:	cmp	r1, r0
   1db18:	bcc	1db54 <__assert_fail@plt+0xc728>
   1db1c:	b	1db6c <__assert_fail@plt+0xc740>
   1db20:	ldr	r0, [pc, #3568]	; 1e918 <__assert_fail@plt+0xd4ec>
   1db24:	ldr	r1, [fp, #-12]
   1db28:	udiv	r0, r0, r1
   1db2c:	ldr	r1, [fp, #-16]
   1db30:	cmp	r0, r1
   1db34:	bcc	1db54 <__assert_fail@plt+0xc728>
   1db38:	b	1db6c <__assert_fail@plt+0xc740>
   1db3c:	ldr	r0, [fp, #-16]
   1db40:	movw	r1, #32767	; 0x7fff
   1db44:	udiv	r0, r1, r0
   1db48:	ldr	r1, [fp, #-12]
   1db4c:	cmp	r0, r1
   1db50:	bcs	1db6c <__assert_fail@plt+0xc740>
   1db54:	ldr	r0, [fp, #-12]
   1db58:	ldr	r1, [fp, #-16]
   1db5c:	mul	r0, r0, r1
   1db60:	sxth	r0, r0
   1db64:	str	r0, [fp, #-20]	; 0xffffffec
   1db68:	b	1e8dc <__assert_fail@plt+0xd4b0>
   1db6c:	ldr	r0, [fp, #-12]
   1db70:	ldr	r1, [fp, #-16]
   1db74:	mul	r0, r0, r1
   1db78:	sxth	r0, r0
   1db7c:	str	r0, [fp, #-20]	; 0xffffffec
   1db80:	b	1e8f4 <__assert_fail@plt+0xd4c8>
   1db84:	ldr	r0, [fp, #-16]
   1db88:	cmp	r0, #0
   1db8c:	bcs	1dc98 <__assert_fail@plt+0xc86c>
   1db90:	ldr	r0, [fp, #-12]
   1db94:	cmp	r0, #0
   1db98:	bcs	1dc20 <__assert_fail@plt+0xc7f4>
   1db9c:	b	1dbbc <__assert_fail@plt+0xc790>
   1dba0:	ldr	r0, [fp, #-12]
   1dba4:	ldr	r1, [fp, #-16]
   1dba8:	movw	r2, #65535	; 0xffff
   1dbac:	udiv	r1, r2, r1
   1dbb0:	cmp	r0, r1
   1dbb4:	bcc	1dd34 <__assert_fail@plt+0xc908>
   1dbb8:	b	1dd4c <__assert_fail@plt+0xc920>
   1dbbc:	b	1dbd0 <__assert_fail@plt+0xc7a4>
   1dbc0:	ldr	r0, [fp, #-16]
   1dbc4:	cmp	r0, #1
   1dbc8:	bcc	1dbe0 <__assert_fail@plt+0xc7b4>
   1dbcc:	b	1dbec <__assert_fail@plt+0xc7c0>
   1dbd0:	ldr	r0, [fp, #-16]
   1dbd4:	movw	r1, #0
   1dbd8:	cmp	r1, r0
   1dbdc:	bcs	1dbec <__assert_fail@plt+0xc7c0>
   1dbe0:	movw	r0, #0
   1dbe4:	str	r0, [fp, #-36]	; 0xffffffdc
   1dbe8:	b	1dc04 <__assert_fail@plt+0xc7d8>
   1dbec:	ldr	r0, [fp, #-16]
   1dbf0:	movw	r1, #0
   1dbf4:	sub	r0, r1, r0
   1dbf8:	movw	r1, #65535	; 0xffff
   1dbfc:	udiv	r0, r1, r0
   1dc00:	str	r0, [fp, #-36]	; 0xffffffdc
   1dc04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1dc08:	ldr	r1, [fp, #-12]
   1dc0c:	mvn	r2, #0
   1dc10:	sub	r1, r2, r1
   1dc14:	cmp	r0, r1
   1dc18:	bls	1dd34 <__assert_fail@plt+0xc908>
   1dc1c:	b	1dd4c <__assert_fail@plt+0xc920>
   1dc20:	b	1dc28 <__assert_fail@plt+0xc7fc>
   1dc24:	b	1dc2c <__assert_fail@plt+0xc800>
   1dc28:	b	1dc7c <__assert_fail@plt+0xc850>
   1dc2c:	ldr	r0, [fp, #-16]
   1dc30:	cmn	r0, #1
   1dc34:	bne	1dc7c <__assert_fail@plt+0xc850>
   1dc38:	b	1dc54 <__assert_fail@plt+0xc828>
   1dc3c:	ldr	r0, [fp, #-12]
   1dc40:	add	r0, r0, #0
   1dc44:	movw	r1, #0
   1dc48:	cmp	r1, r0
   1dc4c:	bcc	1dd34 <__assert_fail@plt+0xc908>
   1dc50:	b	1dd4c <__assert_fail@plt+0xc920>
   1dc54:	ldr	r0, [fp, #-12]
   1dc58:	movw	r1, #0
   1dc5c:	cmp	r1, r0
   1dc60:	bcs	1dd4c <__assert_fail@plt+0xc920>
   1dc64:	ldr	r0, [fp, #-12]
   1dc68:	sub	r0, r0, #1
   1dc6c:	mvn	r1, #0
   1dc70:	cmp	r1, r0
   1dc74:	bcc	1dd34 <__assert_fail@plt+0xc908>
   1dc78:	b	1dd4c <__assert_fail@plt+0xc920>
   1dc7c:	ldr	r0, [fp, #-16]
   1dc80:	movw	r1, #0
   1dc84:	udiv	r0, r1, r0
   1dc88:	ldr	r1, [fp, #-12]
   1dc8c:	cmp	r0, r1
   1dc90:	bcc	1dd34 <__assert_fail@plt+0xc908>
   1dc94:	b	1dd4c <__assert_fail@plt+0xc920>
   1dc98:	ldr	r0, [fp, #-16]
   1dc9c:	cmp	r0, #0
   1dca0:	bne	1dca8 <__assert_fail@plt+0xc87c>
   1dca4:	b	1dd4c <__assert_fail@plt+0xc920>
   1dca8:	ldr	r0, [fp, #-12]
   1dcac:	cmp	r0, #0
   1dcb0:	bcs	1dd1c <__assert_fail@plt+0xc8f0>
   1dcb4:	b	1dcbc <__assert_fail@plt+0xc890>
   1dcb8:	b	1dcc0 <__assert_fail@plt+0xc894>
   1dcbc:	b	1dd00 <__assert_fail@plt+0xc8d4>
   1dcc0:	ldr	r0, [fp, #-12]
   1dcc4:	cmn	r0, #1
   1dcc8:	bne	1dd00 <__assert_fail@plt+0xc8d4>
   1dccc:	b	1dce8 <__assert_fail@plt+0xc8bc>
   1dcd0:	ldr	r0, [fp, #-16]
   1dcd4:	add	r0, r0, #0
   1dcd8:	movw	r1, #0
   1dcdc:	cmp	r1, r0
   1dce0:	bcc	1dd34 <__assert_fail@plt+0xc908>
   1dce4:	b	1dd4c <__assert_fail@plt+0xc920>
   1dce8:	ldr	r0, [fp, #-16]
   1dcec:	sub	r0, r0, #1
   1dcf0:	mvn	r1, #0
   1dcf4:	cmp	r1, r0
   1dcf8:	bcc	1dd34 <__assert_fail@plt+0xc908>
   1dcfc:	b	1dd4c <__assert_fail@plt+0xc920>
   1dd00:	ldr	r0, [fp, #-12]
   1dd04:	movw	r1, #0
   1dd08:	udiv	r0, r1, r0
   1dd0c:	ldr	r1, [fp, #-16]
   1dd10:	cmp	r0, r1
   1dd14:	bcc	1dd34 <__assert_fail@plt+0xc908>
   1dd18:	b	1dd4c <__assert_fail@plt+0xc920>
   1dd1c:	ldr	r0, [fp, #-16]
   1dd20:	movw	r1, #65535	; 0xffff
   1dd24:	udiv	r0, r1, r0
   1dd28:	ldr	r1, [fp, #-12]
   1dd2c:	cmp	r0, r1
   1dd30:	bcs	1dd4c <__assert_fail@plt+0xc920>
   1dd34:	ldr	r0, [fp, #-12]
   1dd38:	ldr	r1, [fp, #-16]
   1dd3c:	mul	r0, r0, r1
   1dd40:	uxth	r0, r0
   1dd44:	str	r0, [fp, #-20]	; 0xffffffec
   1dd48:	b	1e8dc <__assert_fail@plt+0xd4b0>
   1dd4c:	ldr	r0, [fp, #-12]
   1dd50:	ldr	r1, [fp, #-16]
   1dd54:	mul	r0, r0, r1
   1dd58:	uxth	r0, r0
   1dd5c:	str	r0, [fp, #-20]	; 0xffffffec
   1dd60:	b	1e8f4 <__assert_fail@plt+0xd4c8>
   1dd64:	b	1dd68 <__assert_fail@plt+0xc93c>
   1dd68:	b	1df2c <__assert_fail@plt+0xcb00>
   1dd6c:	ldr	r0, [fp, #-16]
   1dd70:	cmp	r0, #0
   1dd74:	bcs	1de74 <__assert_fail@plt+0xca48>
   1dd78:	ldr	r0, [fp, #-12]
   1dd7c:	cmp	r0, #0
   1dd80:	bcs	1de08 <__assert_fail@plt+0xc9dc>
   1dd84:	b	1dda4 <__assert_fail@plt+0xc978>
   1dd88:	ldr	r0, [pc, #2944]	; 1e910 <__assert_fail@plt+0xd4e4>
   1dd8c:	ldr	r1, [fp, #-12]
   1dd90:	ldr	r2, [fp, #-16]
   1dd94:	udiv	r0, r0, r2
   1dd98:	cmp	r1, r0
   1dd9c:	bcc	1df04 <__assert_fail@plt+0xcad8>
   1dda0:	b	1df18 <__assert_fail@plt+0xcaec>
   1dda4:	b	1ddb8 <__assert_fail@plt+0xc98c>
   1dda8:	ldr	r0, [fp, #-16]
   1ddac:	cmp	r0, #1
   1ddb0:	bcc	1ddc8 <__assert_fail@plt+0xc99c>
   1ddb4:	b	1ddd4 <__assert_fail@plt+0xc9a8>
   1ddb8:	ldr	r0, [fp, #-16]
   1ddbc:	movw	r1, #0
   1ddc0:	cmp	r1, r0
   1ddc4:	bcs	1ddd4 <__assert_fail@plt+0xc9a8>
   1ddc8:	movw	r0, #0
   1ddcc:	str	r0, [fp, #-40]	; 0xffffffd8
   1ddd0:	b	1ddec <__assert_fail@plt+0xc9c0>
   1ddd4:	ldr	r0, [pc, #2868]	; 1e910 <__assert_fail@plt+0xd4e4>
   1ddd8:	ldr	r1, [fp, #-16]
   1dddc:	movw	r2, #0
   1dde0:	sub	r1, r2, r1
   1dde4:	udiv	r0, r0, r1
   1dde8:	str	r0, [fp, #-40]	; 0xffffffd8
   1ddec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ddf0:	ldr	r1, [fp, #-12]
   1ddf4:	mvn	r2, #0
   1ddf8:	sub	r1, r2, r1
   1ddfc:	cmp	r0, r1
   1de00:	bls	1df04 <__assert_fail@plt+0xcad8>
   1de04:	b	1df18 <__assert_fail@plt+0xcaec>
   1de08:	ldr	r0, [fp, #-16]
   1de0c:	cmn	r0, #1
   1de10:	bne	1de58 <__assert_fail@plt+0xca2c>
   1de14:	b	1de30 <__assert_fail@plt+0xca04>
   1de18:	ldr	r0, [fp, #-12]
   1de1c:	add	r0, r0, #-2147483648	; 0x80000000
   1de20:	movw	r1, #0
   1de24:	cmp	r1, r0
   1de28:	bcc	1df04 <__assert_fail@plt+0xcad8>
   1de2c:	b	1df18 <__assert_fail@plt+0xcaec>
   1de30:	ldr	r0, [fp, #-12]
   1de34:	movw	r1, #0
   1de38:	cmp	r1, r0
   1de3c:	bcs	1df18 <__assert_fail@plt+0xcaec>
   1de40:	ldr	r0, [pc, #2760]	; 1e910 <__assert_fail@plt+0xd4e4>
   1de44:	ldr	r1, [fp, #-12]
   1de48:	sub	r1, r1, #1
   1de4c:	cmp	r0, r1
   1de50:	bcc	1df04 <__assert_fail@plt+0xcad8>
   1de54:	b	1df18 <__assert_fail@plt+0xcaec>
   1de58:	ldr	r0, [pc, #2740]	; 1e914 <__assert_fail@plt+0xd4e8>
   1de5c:	ldr	r1, [fp, #-16]
   1de60:	udiv	r0, r0, r1
   1de64:	ldr	r1, [fp, #-12]
   1de68:	cmp	r0, r1
   1de6c:	bcc	1df04 <__assert_fail@plt+0xcad8>
   1de70:	b	1df18 <__assert_fail@plt+0xcaec>
   1de74:	ldr	r0, [fp, #-16]
   1de78:	cmp	r0, #0
   1de7c:	bne	1de84 <__assert_fail@plt+0xca58>
   1de80:	b	1df18 <__assert_fail@plt+0xcaec>
   1de84:	ldr	r0, [fp, #-12]
   1de88:	cmp	r0, #0
   1de8c:	bcs	1deec <__assert_fail@plt+0xcac0>
   1de90:	ldr	r0, [fp, #-12]
   1de94:	cmn	r0, #1
   1de98:	bne	1ded0 <__assert_fail@plt+0xcaa4>
   1de9c:	b	1deb8 <__assert_fail@plt+0xca8c>
   1dea0:	ldr	r0, [fp, #-16]
   1dea4:	add	r0, r0, #-2147483648	; 0x80000000
   1dea8:	movw	r1, #0
   1deac:	cmp	r1, r0
   1deb0:	bcc	1df04 <__assert_fail@plt+0xcad8>
   1deb4:	b	1df18 <__assert_fail@plt+0xcaec>
   1deb8:	ldr	r0, [pc, #2640]	; 1e910 <__assert_fail@plt+0xd4e4>
   1debc:	ldr	r1, [fp, #-16]
   1dec0:	sub	r1, r1, #1
   1dec4:	cmp	r0, r1
   1dec8:	bcc	1df04 <__assert_fail@plt+0xcad8>
   1decc:	b	1df18 <__assert_fail@plt+0xcaec>
   1ded0:	ldr	r0, [pc, #2620]	; 1e914 <__assert_fail@plt+0xd4e8>
   1ded4:	ldr	r1, [fp, #-12]
   1ded8:	udiv	r0, r0, r1
   1dedc:	ldr	r1, [fp, #-16]
   1dee0:	cmp	r0, r1
   1dee4:	bcc	1df04 <__assert_fail@plt+0xcad8>
   1dee8:	b	1df18 <__assert_fail@plt+0xcaec>
   1deec:	ldr	r0, [pc, #2588]	; 1e910 <__assert_fail@plt+0xd4e4>
   1def0:	ldr	r1, [fp, #-16]
   1def4:	udiv	r0, r0, r1
   1def8:	ldr	r1, [fp, #-12]
   1defc:	cmp	r0, r1
   1df00:	bcs	1df18 <__assert_fail@plt+0xcaec>
   1df04:	ldr	r0, [fp, #-12]
   1df08:	ldr	r1, [fp, #-16]
   1df0c:	mul	r0, r0, r1
   1df10:	str	r0, [fp, #-20]	; 0xffffffec
   1df14:	b	1e8dc <__assert_fail@plt+0xd4b0>
   1df18:	ldr	r0, [fp, #-12]
   1df1c:	ldr	r1, [fp, #-16]
   1df20:	mul	r0, r0, r1
   1df24:	str	r0, [fp, #-20]	; 0xffffffec
   1df28:	b	1e8f4 <__assert_fail@plt+0xd4c8>
   1df2c:	ldr	r0, [fp, #-16]
   1df30:	cmp	r0, #0
   1df34:	bcs	1e040 <__assert_fail@plt+0xcc14>
   1df38:	ldr	r0, [fp, #-12]
   1df3c:	cmp	r0, #0
   1df40:	bcs	1dfc8 <__assert_fail@plt+0xcb9c>
   1df44:	b	1df64 <__assert_fail@plt+0xcb38>
   1df48:	ldr	r0, [fp, #-12]
   1df4c:	ldr	r1, [fp, #-16]
   1df50:	mvn	r2, #0
   1df54:	udiv	r1, r2, r1
   1df58:	cmp	r0, r1
   1df5c:	bcc	1e0dc <__assert_fail@plt+0xccb0>
   1df60:	b	1e0f0 <__assert_fail@plt+0xccc4>
   1df64:	b	1df78 <__assert_fail@plt+0xcb4c>
   1df68:	ldr	r0, [fp, #-16]
   1df6c:	cmp	r0, #1
   1df70:	bcc	1df88 <__assert_fail@plt+0xcb5c>
   1df74:	b	1df94 <__assert_fail@plt+0xcb68>
   1df78:	ldr	r0, [fp, #-16]
   1df7c:	movw	r1, #0
   1df80:	cmp	r1, r0
   1df84:	bcs	1df94 <__assert_fail@plt+0xcb68>
   1df88:	movw	r0, #1
   1df8c:	str	r0, [fp, #-44]	; 0xffffffd4
   1df90:	b	1dfac <__assert_fail@plt+0xcb80>
   1df94:	ldr	r0, [fp, #-16]
   1df98:	movw	r1, #0
   1df9c:	sub	r0, r1, r0
   1dfa0:	mvn	r1, #0
   1dfa4:	udiv	r0, r1, r0
   1dfa8:	str	r0, [fp, #-44]	; 0xffffffd4
   1dfac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1dfb0:	ldr	r1, [fp, #-12]
   1dfb4:	mvn	r2, #0
   1dfb8:	sub	r1, r2, r1
   1dfbc:	cmp	r0, r1
   1dfc0:	bls	1e0dc <__assert_fail@plt+0xccb0>
   1dfc4:	b	1e0f0 <__assert_fail@plt+0xccc4>
   1dfc8:	b	1dfd0 <__assert_fail@plt+0xcba4>
   1dfcc:	b	1dfd4 <__assert_fail@plt+0xcba8>
   1dfd0:	b	1e024 <__assert_fail@plt+0xcbf8>
   1dfd4:	ldr	r0, [fp, #-16]
   1dfd8:	cmn	r0, #1
   1dfdc:	bne	1e024 <__assert_fail@plt+0xcbf8>
   1dfe0:	b	1dffc <__assert_fail@plt+0xcbd0>
   1dfe4:	ldr	r0, [fp, #-12]
   1dfe8:	add	r0, r0, #0
   1dfec:	movw	r1, #0
   1dff0:	cmp	r1, r0
   1dff4:	bcc	1e0dc <__assert_fail@plt+0xccb0>
   1dff8:	b	1e0f0 <__assert_fail@plt+0xccc4>
   1dffc:	ldr	r0, [fp, #-12]
   1e000:	movw	r1, #0
   1e004:	cmp	r1, r0
   1e008:	bcs	1e0f0 <__assert_fail@plt+0xccc4>
   1e00c:	ldr	r0, [fp, #-12]
   1e010:	sub	r0, r0, #1
   1e014:	mvn	r1, #0
   1e018:	cmp	r1, r0
   1e01c:	bcc	1e0dc <__assert_fail@plt+0xccb0>
   1e020:	b	1e0f0 <__assert_fail@plt+0xccc4>
   1e024:	ldr	r0, [fp, #-16]
   1e028:	movw	r1, #0
   1e02c:	udiv	r0, r1, r0
   1e030:	ldr	r1, [fp, #-12]
   1e034:	cmp	r0, r1
   1e038:	bcc	1e0dc <__assert_fail@plt+0xccb0>
   1e03c:	b	1e0f0 <__assert_fail@plt+0xccc4>
   1e040:	ldr	r0, [fp, #-16]
   1e044:	cmp	r0, #0
   1e048:	bne	1e050 <__assert_fail@plt+0xcc24>
   1e04c:	b	1e0f0 <__assert_fail@plt+0xccc4>
   1e050:	ldr	r0, [fp, #-12]
   1e054:	cmp	r0, #0
   1e058:	bcs	1e0c4 <__assert_fail@plt+0xcc98>
   1e05c:	b	1e064 <__assert_fail@plt+0xcc38>
   1e060:	b	1e068 <__assert_fail@plt+0xcc3c>
   1e064:	b	1e0a8 <__assert_fail@plt+0xcc7c>
   1e068:	ldr	r0, [fp, #-12]
   1e06c:	cmn	r0, #1
   1e070:	bne	1e0a8 <__assert_fail@plt+0xcc7c>
   1e074:	b	1e090 <__assert_fail@plt+0xcc64>
   1e078:	ldr	r0, [fp, #-16]
   1e07c:	add	r0, r0, #0
   1e080:	movw	r1, #0
   1e084:	cmp	r1, r0
   1e088:	bcc	1e0dc <__assert_fail@plt+0xccb0>
   1e08c:	b	1e0f0 <__assert_fail@plt+0xccc4>
   1e090:	ldr	r0, [fp, #-16]
   1e094:	sub	r0, r0, #1
   1e098:	mvn	r1, #0
   1e09c:	cmp	r1, r0
   1e0a0:	bcc	1e0dc <__assert_fail@plt+0xccb0>
   1e0a4:	b	1e0f0 <__assert_fail@plt+0xccc4>
   1e0a8:	ldr	r0, [fp, #-12]
   1e0ac:	movw	r1, #0
   1e0b0:	udiv	r0, r1, r0
   1e0b4:	ldr	r1, [fp, #-16]
   1e0b8:	cmp	r0, r1
   1e0bc:	bcc	1e0dc <__assert_fail@plt+0xccb0>
   1e0c0:	b	1e0f0 <__assert_fail@plt+0xccc4>
   1e0c4:	ldr	r0, [fp, #-16]
   1e0c8:	mvn	r1, #0
   1e0cc:	udiv	r0, r1, r0
   1e0d0:	ldr	r1, [fp, #-12]
   1e0d4:	cmp	r0, r1
   1e0d8:	bcs	1e0f0 <__assert_fail@plt+0xccc4>
   1e0dc:	ldr	r0, [fp, #-12]
   1e0e0:	ldr	r1, [fp, #-16]
   1e0e4:	mul	r0, r0, r1
   1e0e8:	str	r0, [fp, #-20]	; 0xffffffec
   1e0ec:	b	1e8dc <__assert_fail@plt+0xd4b0>
   1e0f0:	ldr	r0, [fp, #-12]
   1e0f4:	ldr	r1, [fp, #-16]
   1e0f8:	mul	r0, r0, r1
   1e0fc:	str	r0, [fp, #-20]	; 0xffffffec
   1e100:	b	1e8f4 <__assert_fail@plt+0xd4c8>
   1e104:	b	1e108 <__assert_fail@plt+0xccdc>
   1e108:	b	1e2cc <__assert_fail@plt+0xcea0>
   1e10c:	ldr	r0, [fp, #-16]
   1e110:	cmp	r0, #0
   1e114:	bcs	1e214 <__assert_fail@plt+0xcde8>
   1e118:	ldr	r0, [fp, #-12]
   1e11c:	cmp	r0, #0
   1e120:	bcs	1e1a8 <__assert_fail@plt+0xcd7c>
   1e124:	b	1e144 <__assert_fail@plt+0xcd18>
   1e128:	ldr	r0, [pc, #2016]	; 1e910 <__assert_fail@plt+0xd4e4>
   1e12c:	ldr	r1, [fp, #-12]
   1e130:	ldr	r2, [fp, #-16]
   1e134:	udiv	r0, r0, r2
   1e138:	cmp	r1, r0
   1e13c:	bcc	1e2a4 <__assert_fail@plt+0xce78>
   1e140:	b	1e2b8 <__assert_fail@plt+0xce8c>
   1e144:	b	1e158 <__assert_fail@plt+0xcd2c>
   1e148:	ldr	r0, [fp, #-16]
   1e14c:	cmp	r0, #1
   1e150:	bcc	1e168 <__assert_fail@plt+0xcd3c>
   1e154:	b	1e174 <__assert_fail@plt+0xcd48>
   1e158:	ldr	r0, [fp, #-16]
   1e15c:	movw	r1, #0
   1e160:	cmp	r1, r0
   1e164:	bcs	1e174 <__assert_fail@plt+0xcd48>
   1e168:	movw	r0, #0
   1e16c:	str	r0, [sp, #48]	; 0x30
   1e170:	b	1e18c <__assert_fail@plt+0xcd60>
   1e174:	ldr	r0, [pc, #1940]	; 1e910 <__assert_fail@plt+0xd4e4>
   1e178:	ldr	r1, [fp, #-16]
   1e17c:	movw	r2, #0
   1e180:	sub	r1, r2, r1
   1e184:	udiv	r0, r0, r1
   1e188:	str	r0, [sp, #48]	; 0x30
   1e18c:	ldr	r0, [sp, #48]	; 0x30
   1e190:	ldr	r1, [fp, #-12]
   1e194:	mvn	r2, #0
   1e198:	sub	r1, r2, r1
   1e19c:	cmp	r0, r1
   1e1a0:	bls	1e2a4 <__assert_fail@plt+0xce78>
   1e1a4:	b	1e2b8 <__assert_fail@plt+0xce8c>
   1e1a8:	ldr	r0, [fp, #-16]
   1e1ac:	cmn	r0, #1
   1e1b0:	bne	1e1f8 <__assert_fail@plt+0xcdcc>
   1e1b4:	b	1e1d0 <__assert_fail@plt+0xcda4>
   1e1b8:	ldr	r0, [fp, #-12]
   1e1bc:	add	r0, r0, #-2147483648	; 0x80000000
   1e1c0:	movw	r1, #0
   1e1c4:	cmp	r1, r0
   1e1c8:	bcc	1e2a4 <__assert_fail@plt+0xce78>
   1e1cc:	b	1e2b8 <__assert_fail@plt+0xce8c>
   1e1d0:	ldr	r0, [fp, #-12]
   1e1d4:	movw	r1, #0
   1e1d8:	cmp	r1, r0
   1e1dc:	bcs	1e2b8 <__assert_fail@plt+0xce8c>
   1e1e0:	ldr	r0, [pc, #1832]	; 1e910 <__assert_fail@plt+0xd4e4>
   1e1e4:	ldr	r1, [fp, #-12]
   1e1e8:	sub	r1, r1, #1
   1e1ec:	cmp	r0, r1
   1e1f0:	bcc	1e2a4 <__assert_fail@plt+0xce78>
   1e1f4:	b	1e2b8 <__assert_fail@plt+0xce8c>
   1e1f8:	ldr	r0, [pc, #1812]	; 1e914 <__assert_fail@plt+0xd4e8>
   1e1fc:	ldr	r1, [fp, #-16]
   1e200:	udiv	r0, r0, r1
   1e204:	ldr	r1, [fp, #-12]
   1e208:	cmp	r0, r1
   1e20c:	bcc	1e2a4 <__assert_fail@plt+0xce78>
   1e210:	b	1e2b8 <__assert_fail@plt+0xce8c>
   1e214:	ldr	r0, [fp, #-16]
   1e218:	cmp	r0, #0
   1e21c:	bne	1e224 <__assert_fail@plt+0xcdf8>
   1e220:	b	1e2b8 <__assert_fail@plt+0xce8c>
   1e224:	ldr	r0, [fp, #-12]
   1e228:	cmp	r0, #0
   1e22c:	bcs	1e28c <__assert_fail@plt+0xce60>
   1e230:	ldr	r0, [fp, #-12]
   1e234:	cmn	r0, #1
   1e238:	bne	1e270 <__assert_fail@plt+0xce44>
   1e23c:	b	1e258 <__assert_fail@plt+0xce2c>
   1e240:	ldr	r0, [fp, #-16]
   1e244:	add	r0, r0, #-2147483648	; 0x80000000
   1e248:	movw	r1, #0
   1e24c:	cmp	r1, r0
   1e250:	bcc	1e2a4 <__assert_fail@plt+0xce78>
   1e254:	b	1e2b8 <__assert_fail@plt+0xce8c>
   1e258:	ldr	r0, [pc, #1712]	; 1e910 <__assert_fail@plt+0xd4e4>
   1e25c:	ldr	r1, [fp, #-16]
   1e260:	sub	r1, r1, #1
   1e264:	cmp	r0, r1
   1e268:	bcc	1e2a4 <__assert_fail@plt+0xce78>
   1e26c:	b	1e2b8 <__assert_fail@plt+0xce8c>
   1e270:	ldr	r0, [pc, #1692]	; 1e914 <__assert_fail@plt+0xd4e8>
   1e274:	ldr	r1, [fp, #-12]
   1e278:	udiv	r0, r0, r1
   1e27c:	ldr	r1, [fp, #-16]
   1e280:	cmp	r0, r1
   1e284:	bcc	1e2a4 <__assert_fail@plt+0xce78>
   1e288:	b	1e2b8 <__assert_fail@plt+0xce8c>
   1e28c:	ldr	r0, [pc, #1660]	; 1e910 <__assert_fail@plt+0xd4e4>
   1e290:	ldr	r1, [fp, #-16]
   1e294:	udiv	r0, r0, r1
   1e298:	ldr	r1, [fp, #-12]
   1e29c:	cmp	r0, r1
   1e2a0:	bcs	1e2b8 <__assert_fail@plt+0xce8c>
   1e2a4:	ldr	r0, [fp, #-12]
   1e2a8:	ldr	r1, [fp, #-16]
   1e2ac:	mul	r0, r0, r1
   1e2b0:	str	r0, [fp, #-20]	; 0xffffffec
   1e2b4:	b	1e8dc <__assert_fail@plt+0xd4b0>
   1e2b8:	ldr	r0, [fp, #-12]
   1e2bc:	ldr	r1, [fp, #-16]
   1e2c0:	mul	r0, r0, r1
   1e2c4:	str	r0, [fp, #-20]	; 0xffffffec
   1e2c8:	b	1e8f4 <__assert_fail@plt+0xd4c8>
   1e2cc:	ldr	r0, [fp, #-16]
   1e2d0:	cmp	r0, #0
   1e2d4:	bcs	1e3e0 <__assert_fail@plt+0xcfb4>
   1e2d8:	ldr	r0, [fp, #-12]
   1e2dc:	cmp	r0, #0
   1e2e0:	bcs	1e368 <__assert_fail@plt+0xcf3c>
   1e2e4:	b	1e304 <__assert_fail@plt+0xced8>
   1e2e8:	ldr	r0, [fp, #-12]
   1e2ec:	ldr	r1, [fp, #-16]
   1e2f0:	mvn	r2, #0
   1e2f4:	udiv	r1, r2, r1
   1e2f8:	cmp	r0, r1
   1e2fc:	bcc	1e47c <__assert_fail@plt+0xd050>
   1e300:	b	1e490 <__assert_fail@plt+0xd064>
   1e304:	b	1e318 <__assert_fail@plt+0xceec>
   1e308:	ldr	r0, [fp, #-16]
   1e30c:	cmp	r0, #1
   1e310:	bcc	1e328 <__assert_fail@plt+0xcefc>
   1e314:	b	1e334 <__assert_fail@plt+0xcf08>
   1e318:	ldr	r0, [fp, #-16]
   1e31c:	movw	r1, #0
   1e320:	cmp	r1, r0
   1e324:	bcs	1e334 <__assert_fail@plt+0xcf08>
   1e328:	movw	r0, #1
   1e32c:	str	r0, [sp, #44]	; 0x2c
   1e330:	b	1e34c <__assert_fail@plt+0xcf20>
   1e334:	ldr	r0, [fp, #-16]
   1e338:	movw	r1, #0
   1e33c:	sub	r0, r1, r0
   1e340:	mvn	r1, #0
   1e344:	udiv	r0, r1, r0
   1e348:	str	r0, [sp, #44]	; 0x2c
   1e34c:	ldr	r0, [sp, #44]	; 0x2c
   1e350:	ldr	r1, [fp, #-12]
   1e354:	mvn	r2, #0
   1e358:	sub	r1, r2, r1
   1e35c:	cmp	r0, r1
   1e360:	bls	1e47c <__assert_fail@plt+0xd050>
   1e364:	b	1e490 <__assert_fail@plt+0xd064>
   1e368:	b	1e370 <__assert_fail@plt+0xcf44>
   1e36c:	b	1e374 <__assert_fail@plt+0xcf48>
   1e370:	b	1e3c4 <__assert_fail@plt+0xcf98>
   1e374:	ldr	r0, [fp, #-16]
   1e378:	cmn	r0, #1
   1e37c:	bne	1e3c4 <__assert_fail@plt+0xcf98>
   1e380:	b	1e39c <__assert_fail@plt+0xcf70>
   1e384:	ldr	r0, [fp, #-12]
   1e388:	add	r0, r0, #0
   1e38c:	movw	r1, #0
   1e390:	cmp	r1, r0
   1e394:	bcc	1e47c <__assert_fail@plt+0xd050>
   1e398:	b	1e490 <__assert_fail@plt+0xd064>
   1e39c:	ldr	r0, [fp, #-12]
   1e3a0:	movw	r1, #0
   1e3a4:	cmp	r1, r0
   1e3a8:	bcs	1e490 <__assert_fail@plt+0xd064>
   1e3ac:	ldr	r0, [fp, #-12]
   1e3b0:	sub	r0, r0, #1
   1e3b4:	mvn	r1, #0
   1e3b8:	cmp	r1, r0
   1e3bc:	bcc	1e47c <__assert_fail@plt+0xd050>
   1e3c0:	b	1e490 <__assert_fail@plt+0xd064>
   1e3c4:	ldr	r0, [fp, #-16]
   1e3c8:	movw	r1, #0
   1e3cc:	udiv	r0, r1, r0
   1e3d0:	ldr	r1, [fp, #-12]
   1e3d4:	cmp	r0, r1
   1e3d8:	bcc	1e47c <__assert_fail@plt+0xd050>
   1e3dc:	b	1e490 <__assert_fail@plt+0xd064>
   1e3e0:	ldr	r0, [fp, #-16]
   1e3e4:	cmp	r0, #0
   1e3e8:	bne	1e3f0 <__assert_fail@plt+0xcfc4>
   1e3ec:	b	1e490 <__assert_fail@plt+0xd064>
   1e3f0:	ldr	r0, [fp, #-12]
   1e3f4:	cmp	r0, #0
   1e3f8:	bcs	1e464 <__assert_fail@plt+0xd038>
   1e3fc:	b	1e404 <__assert_fail@plt+0xcfd8>
   1e400:	b	1e408 <__assert_fail@plt+0xcfdc>
   1e404:	b	1e448 <__assert_fail@plt+0xd01c>
   1e408:	ldr	r0, [fp, #-12]
   1e40c:	cmn	r0, #1
   1e410:	bne	1e448 <__assert_fail@plt+0xd01c>
   1e414:	b	1e430 <__assert_fail@plt+0xd004>
   1e418:	ldr	r0, [fp, #-16]
   1e41c:	add	r0, r0, #0
   1e420:	movw	r1, #0
   1e424:	cmp	r1, r0
   1e428:	bcc	1e47c <__assert_fail@plt+0xd050>
   1e42c:	b	1e490 <__assert_fail@plt+0xd064>
   1e430:	ldr	r0, [fp, #-16]
   1e434:	sub	r0, r0, #1
   1e438:	mvn	r1, #0
   1e43c:	cmp	r1, r0
   1e440:	bcc	1e47c <__assert_fail@plt+0xd050>
   1e444:	b	1e490 <__assert_fail@plt+0xd064>
   1e448:	ldr	r0, [fp, #-12]
   1e44c:	movw	r1, #0
   1e450:	udiv	r0, r1, r0
   1e454:	ldr	r1, [fp, #-16]
   1e458:	cmp	r0, r1
   1e45c:	bcc	1e47c <__assert_fail@plt+0xd050>
   1e460:	b	1e490 <__assert_fail@plt+0xd064>
   1e464:	ldr	r0, [fp, #-16]
   1e468:	mvn	r1, #0
   1e46c:	udiv	r0, r1, r0
   1e470:	ldr	r1, [fp, #-12]
   1e474:	cmp	r0, r1
   1e478:	bcs	1e490 <__assert_fail@plt+0xd064>
   1e47c:	ldr	r0, [fp, #-12]
   1e480:	ldr	r1, [fp, #-16]
   1e484:	mul	r0, r0, r1
   1e488:	str	r0, [fp, #-20]	; 0xffffffec
   1e48c:	b	1e8dc <__assert_fail@plt+0xd4b0>
   1e490:	ldr	r0, [fp, #-12]
   1e494:	ldr	r1, [fp, #-16]
   1e498:	mul	r0, r0, r1
   1e49c:	str	r0, [fp, #-20]	; 0xffffffec
   1e4a0:	b	1e8f4 <__assert_fail@plt+0xd4c8>
   1e4a4:	b	1e6c0 <__assert_fail@plt+0xd294>
   1e4a8:	ldr	r0, [fp, #-16]
   1e4ac:	cmp	r0, #0
   1e4b0:	bcs	1e5f0 <__assert_fail@plt+0xd1c4>
   1e4b4:	ldr	r0, [fp, #-12]
   1e4b8:	cmp	r0, #0
   1e4bc:	bcs	1e57c <__assert_fail@plt+0xd150>
   1e4c0:	b	1e4c4 <__assert_fail@plt+0xd098>
   1e4c4:	ldr	r0, [fp, #-12]
   1e4c8:	ldr	r2, [fp, #-16]
   1e4cc:	mvn	r1, #0
   1e4d0:	mvn	r3, #-2147483648	; 0x80000000
   1e4d4:	mov	ip, #0
   1e4d8:	str	r0, [sp, #40]	; 0x28
   1e4dc:	mov	r0, r1
   1e4e0:	mov	r1, r3
   1e4e4:	mov	r3, ip
   1e4e8:	bl	1f428 <__assert_fail@plt+0xdffc>
   1e4ec:	ldr	r2, [sp, #40]	; 0x28
   1e4f0:	subs	r0, r2, r0
   1e4f4:	rscs	r1, r1, #0
   1e4f8:	blt	1e698 <__assert_fail@plt+0xd26c>
   1e4fc:	b	1e6ac <__assert_fail@plt+0xd280>
   1e500:	b	1e514 <__assert_fail@plt+0xd0e8>
   1e504:	ldr	r0, [fp, #-16]
   1e508:	cmp	r0, #1
   1e50c:	bcc	1e524 <__assert_fail@plt+0xd0f8>
   1e510:	b	1e538 <__assert_fail@plt+0xd10c>
   1e514:	ldr	r0, [fp, #-16]
   1e518:	movw	r1, #0
   1e51c:	cmp	r1, r0
   1e520:	bcs	1e538 <__assert_fail@plt+0xd10c>
   1e524:	mov	r0, #0
   1e528:	mvn	r1, #0
   1e52c:	str	r1, [sp, #36]	; 0x24
   1e530:	str	r0, [sp, #32]
   1e534:	b	1e55c <__assert_fail@plt+0xd130>
   1e538:	ldr	r0, [fp, #-16]
   1e53c:	rsb	r2, r0, #0
   1e540:	mvn	r0, #0
   1e544:	mvn	r1, #-2147483648	; 0x80000000
   1e548:	mov	r3, #0
   1e54c:	bl	1f428 <__assert_fail@plt+0xdffc>
   1e550:	str	r0, [sp, #36]	; 0x24
   1e554:	str	r1, [sp, #32]
   1e558:	b	1e55c <__assert_fail@plt+0xd130>
   1e55c:	ldr	r0, [sp, #32]
   1e560:	ldr	r1, [sp, #36]	; 0x24
   1e564:	ldr	r2, [fp, #-12]
   1e568:	mvn	r2, r2
   1e56c:	subs	r1, r2, r1
   1e570:	rscs	r0, r0, #0
   1e574:	bge	1e698 <__assert_fail@plt+0xd26c>
   1e578:	b	1e6ac <__assert_fail@plt+0xd280>
   1e57c:	ldr	r0, [fp, #-16]
   1e580:	cmn	r0, #1
   1e584:	bne	1e5c4 <__assert_fail@plt+0xd198>
   1e588:	b	1e5a4 <__assert_fail@plt+0xd178>
   1e58c:	ldr	r0, [fp, #-12]
   1e590:	rsbs	r0, r0, #0
   1e594:	mov	r1, #0
   1e598:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1e59c:	blt	1e698 <__assert_fail@plt+0xd26c>
   1e5a0:	b	1e6ac <__assert_fail@plt+0xd280>
   1e5a4:	ldr	r0, [fp, #-12]
   1e5a8:	movw	r1, #0
   1e5ac:	cmp	r1, r0
   1e5b0:	bcs	1e6ac <__assert_fail@plt+0xd280>
   1e5b4:	mov	r0, #0
   1e5b8:	cmp	r0, #0
   1e5bc:	bne	1e698 <__assert_fail@plt+0xd26c>
   1e5c0:	b	1e6ac <__assert_fail@plt+0xd280>
   1e5c4:	ldr	r2, [fp, #-16]
   1e5c8:	mov	r1, #-2147483648	; 0x80000000
   1e5cc:	mov	r0, #0
   1e5d0:	str	r0, [sp, #28]
   1e5d4:	ldr	r3, [sp, #28]
   1e5d8:	bl	1f354 <__assert_fail@plt+0xdf28>
   1e5dc:	ldr	r2, [fp, #-12]
   1e5e0:	subs	r0, r0, r2
   1e5e4:	sbcs	r1, r1, #0
   1e5e8:	blt	1e698 <__assert_fail@plt+0xd26c>
   1e5ec:	b	1e6ac <__assert_fail@plt+0xd280>
   1e5f0:	ldr	r0, [fp, #-16]
   1e5f4:	cmp	r0, #0
   1e5f8:	bne	1e600 <__assert_fail@plt+0xd1d4>
   1e5fc:	b	1e6ac <__assert_fail@plt+0xd280>
   1e600:	ldr	r0, [fp, #-12]
   1e604:	cmp	r0, #0
   1e608:	bcs	1e670 <__assert_fail@plt+0xd244>
   1e60c:	ldr	r0, [fp, #-12]
   1e610:	cmn	r0, #1
   1e614:	bne	1e644 <__assert_fail@plt+0xd218>
   1e618:	b	1e634 <__assert_fail@plt+0xd208>
   1e61c:	ldr	r0, [fp, #-16]
   1e620:	rsbs	r0, r0, #0
   1e624:	mov	r1, #0
   1e628:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1e62c:	blt	1e698 <__assert_fail@plt+0xd26c>
   1e630:	b	1e6ac <__assert_fail@plt+0xd280>
   1e634:	mov	r0, #0
   1e638:	cmp	r0, #0
   1e63c:	bne	1e698 <__assert_fail@plt+0xd26c>
   1e640:	b	1e6ac <__assert_fail@plt+0xd280>
   1e644:	ldr	r2, [fp, #-12]
   1e648:	mov	r1, #-2147483648	; 0x80000000
   1e64c:	mov	r0, #0
   1e650:	str	r0, [sp, #24]
   1e654:	ldr	r3, [sp, #24]
   1e658:	bl	1f354 <__assert_fail@plt+0xdf28>
   1e65c:	ldr	r2, [fp, #-16]
   1e660:	subs	r0, r0, r2
   1e664:	sbcs	r1, r1, #0
   1e668:	blt	1e698 <__assert_fail@plt+0xd26c>
   1e66c:	b	1e6ac <__assert_fail@plt+0xd280>
   1e670:	ldr	r2, [fp, #-16]
   1e674:	mvn	r0, #0
   1e678:	mvn	r1, #-2147483648	; 0x80000000
   1e67c:	mov	r3, #0
   1e680:	bl	1f428 <__assert_fail@plt+0xdffc>
   1e684:	ldr	r2, [fp, #-12]
   1e688:	subs	r0, r0, r2
   1e68c:	sbcs	r1, r1, #0
   1e690:	bge	1e6ac <__assert_fail@plt+0xd280>
   1e694:	b	1e698 <__assert_fail@plt+0xd26c>
   1e698:	ldr	r0, [fp, #-12]
   1e69c:	ldr	r1, [fp, #-16]
   1e6a0:	mul	r0, r0, r1
   1e6a4:	str	r0, [fp, #-20]	; 0xffffffec
   1e6a8:	b	1e8dc <__assert_fail@plt+0xd4b0>
   1e6ac:	ldr	r0, [fp, #-12]
   1e6b0:	ldr	r1, [fp, #-16]
   1e6b4:	mul	r0, r0, r1
   1e6b8:	str	r0, [fp, #-20]	; 0xffffffec
   1e6bc:	b	1e8f4 <__assert_fail@plt+0xd4c8>
   1e6c0:	ldr	r0, [fp, #-16]
   1e6c4:	cmp	r0, #0
   1e6c8:	bcs	1e804 <__assert_fail@plt+0xd3d8>
   1e6cc:	ldr	r0, [fp, #-12]
   1e6d0:	cmp	r0, #0
   1e6d4:	bcs	1e78c <__assert_fail@plt+0xd360>
   1e6d8:	b	1e70c <__assert_fail@plt+0xd2e0>
   1e6dc:	ldr	r0, [fp, #-12]
   1e6e0:	ldr	r2, [fp, #-16]
   1e6e4:	mvn	r1, #0
   1e6e8:	mov	r3, #0
   1e6ec:	str	r0, [sp, #20]
   1e6f0:	mov	r0, r1
   1e6f4:	bl	1f428 <__assert_fail@plt+0xdffc>
   1e6f8:	ldr	r2, [sp, #20]
   1e6fc:	subs	r0, r2, r0
   1e700:	rscs	r1, r1, #0
   1e704:	bcc	1e8b4 <__assert_fail@plt+0xd488>
   1e708:	b	1e8c8 <__assert_fail@plt+0xd49c>
   1e70c:	b	1e720 <__assert_fail@plt+0xd2f4>
   1e710:	ldr	r0, [fp, #-16]
   1e714:	cmp	r0, #1
   1e718:	bcc	1e730 <__assert_fail@plt+0xd304>
   1e71c:	b	1e744 <__assert_fail@plt+0xd318>
   1e720:	ldr	r0, [fp, #-16]
   1e724:	movw	r1, #0
   1e728:	cmp	r1, r0
   1e72c:	bcs	1e744 <__assert_fail@plt+0xd318>
   1e730:	mov	r0, #1
   1e734:	mvn	r1, #0
   1e738:	str	r1, [sp, #16]
   1e73c:	str	r0, [sp, #12]
   1e740:	b	1e76c <__assert_fail@plt+0xd340>
   1e744:	ldr	r0, [fp, #-16]
   1e748:	rsb	r2, r0, #0
   1e74c:	mvn	r0, #0
   1e750:	mov	r3, #0
   1e754:	str	r0, [sp, #8]
   1e758:	ldr	r1, [sp, #8]
   1e75c:	bl	1f428 <__assert_fail@plt+0xdffc>
   1e760:	str	r0, [sp, #16]
   1e764:	str	r1, [sp, #12]
   1e768:	b	1e76c <__assert_fail@plt+0xd340>
   1e76c:	ldr	r0, [sp, #12]
   1e770:	ldr	r1, [sp, #16]
   1e774:	ldr	r2, [fp, #-12]
   1e778:	mvn	r2, r2
   1e77c:	subs	r1, r2, r1
   1e780:	rscs	r0, r0, #0
   1e784:	bcs	1e8b4 <__assert_fail@plt+0xd488>
   1e788:	b	1e8c8 <__assert_fail@plt+0xd49c>
   1e78c:	b	1e794 <__assert_fail@plt+0xd368>
   1e790:	b	1e798 <__assert_fail@plt+0xd36c>
   1e794:	b	1e7e8 <__assert_fail@plt+0xd3bc>
   1e798:	ldr	r0, [fp, #-16]
   1e79c:	cmn	r0, #1
   1e7a0:	bne	1e7e8 <__assert_fail@plt+0xd3bc>
   1e7a4:	b	1e7c0 <__assert_fail@plt+0xd394>
   1e7a8:	ldr	r0, [fp, #-12]
   1e7ac:	add	r0, r0, #0
   1e7b0:	movw	r1, #0
   1e7b4:	cmp	r1, r0
   1e7b8:	bcc	1e8b4 <__assert_fail@plt+0xd488>
   1e7bc:	b	1e8c8 <__assert_fail@plt+0xd49c>
   1e7c0:	ldr	r0, [fp, #-12]
   1e7c4:	movw	r1, #0
   1e7c8:	cmp	r1, r0
   1e7cc:	bcs	1e8c8 <__assert_fail@plt+0xd49c>
   1e7d0:	ldr	r0, [fp, #-12]
   1e7d4:	sub	r0, r0, #1
   1e7d8:	mvn	r1, #0
   1e7dc:	cmp	r1, r0
   1e7e0:	bcc	1e8b4 <__assert_fail@plt+0xd488>
   1e7e4:	b	1e8c8 <__assert_fail@plt+0xd49c>
   1e7e8:	ldr	r0, [fp, #-16]
   1e7ec:	movw	r1, #0
   1e7f0:	udiv	r0, r1, r0
   1e7f4:	ldr	r1, [fp, #-12]
   1e7f8:	cmp	r0, r1
   1e7fc:	bcc	1e8b4 <__assert_fail@plt+0xd488>
   1e800:	b	1e8c8 <__assert_fail@plt+0xd49c>
   1e804:	ldr	r0, [fp, #-16]
   1e808:	cmp	r0, #0
   1e80c:	bne	1e814 <__assert_fail@plt+0xd3e8>
   1e810:	b	1e8c8 <__assert_fail@plt+0xd49c>
   1e814:	ldr	r0, [fp, #-12]
   1e818:	cmp	r0, #0
   1e81c:	bcs	1e888 <__assert_fail@plt+0xd45c>
   1e820:	b	1e828 <__assert_fail@plt+0xd3fc>
   1e824:	b	1e82c <__assert_fail@plt+0xd400>
   1e828:	b	1e86c <__assert_fail@plt+0xd440>
   1e82c:	ldr	r0, [fp, #-12]
   1e830:	cmn	r0, #1
   1e834:	bne	1e86c <__assert_fail@plt+0xd440>
   1e838:	b	1e854 <__assert_fail@plt+0xd428>
   1e83c:	ldr	r0, [fp, #-16]
   1e840:	add	r0, r0, #0
   1e844:	movw	r1, #0
   1e848:	cmp	r1, r0
   1e84c:	bcc	1e8b4 <__assert_fail@plt+0xd488>
   1e850:	b	1e8c8 <__assert_fail@plt+0xd49c>
   1e854:	ldr	r0, [fp, #-16]
   1e858:	sub	r0, r0, #1
   1e85c:	mvn	r1, #0
   1e860:	cmp	r1, r0
   1e864:	bcc	1e8b4 <__assert_fail@plt+0xd488>
   1e868:	b	1e8c8 <__assert_fail@plt+0xd49c>
   1e86c:	ldr	r0, [fp, #-12]
   1e870:	movw	r1, #0
   1e874:	udiv	r0, r1, r0
   1e878:	ldr	r1, [fp, #-16]
   1e87c:	cmp	r0, r1
   1e880:	bcc	1e8b4 <__assert_fail@plt+0xd488>
   1e884:	b	1e8c8 <__assert_fail@plt+0xd49c>
   1e888:	ldr	r2, [fp, #-16]
   1e88c:	mvn	r0, #0
   1e890:	mov	r3, #0
   1e894:	str	r0, [sp, #4]
   1e898:	ldr	r1, [sp, #4]
   1e89c:	bl	1f428 <__assert_fail@plt+0xdffc>
   1e8a0:	ldr	r2, [fp, #-12]
   1e8a4:	subs	r0, r0, r2
   1e8a8:	sbcs	r1, r1, #0
   1e8ac:	bcs	1e8c8 <__assert_fail@plt+0xd49c>
   1e8b0:	b	1e8b4 <__assert_fail@plt+0xd488>
   1e8b4:	ldr	r0, [fp, #-12]
   1e8b8:	ldr	r1, [fp, #-16]
   1e8bc:	mul	r0, r0, r1
   1e8c0:	str	r0, [fp, #-20]	; 0xffffffec
   1e8c4:	b	1e8dc <__assert_fail@plt+0xd4b0>
   1e8c8:	ldr	r0, [fp, #-12]
   1e8cc:	ldr	r1, [fp, #-16]
   1e8d0:	mul	r0, r0, r1
   1e8d4:	str	r0, [fp, #-20]	; 0xffffffec
   1e8d8:	b	1e8f4 <__assert_fail@plt+0xd4c8>
   1e8dc:	bl	1130c <__errno_location@plt>
   1e8e0:	movw	r1, #12
   1e8e4:	str	r1, [r0]
   1e8e8:	movw	r0, #0
   1e8ec:	str	r0, [fp, #-4]
   1e8f0:	b	1e904 <__assert_fail@plt+0xd4d8>
   1e8f4:	ldr	r0, [fp, #-8]
   1e8f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e8fc:	bl	1c8e8 <__assert_fail@plt+0xb4bc>
   1e900:	str	r0, [fp, #-4]
   1e904:	ldr	r0, [fp, #-4]
   1e908:	mov	sp, fp
   1e90c:	pop	{fp, pc}
   1e910:	svcvc	0x00ffffff
   1e914:	andhi	r0, r0, r0
   1e918:			; <UNDEFINED> instruction: 0xffff8000
   1e91c:	sub	sp, sp, #12
   1e920:	str	r0, [sp, #4]
   1e924:	ldr	r0, [sp, #4]
   1e928:	sub	r1, r0, #48	; 0x30
   1e92c:	cmp	r1, #10
   1e930:	str	r0, [sp]
   1e934:	bcc	1e964 <__assert_fail@plt+0xd538>
   1e938:	b	1e93c <__assert_fail@plt+0xd510>
   1e93c:	ldr	r0, [sp]
   1e940:	sub	r1, r0, #65	; 0x41
   1e944:	cmp	r1, #26
   1e948:	bcc	1e964 <__assert_fail@plt+0xd538>
   1e94c:	b	1e950 <__assert_fail@plt+0xd524>
   1e950:	ldr	r0, [sp]
   1e954:	sub	r1, r0, #97	; 0x61
   1e958:	cmp	r1, #25
   1e95c:	bhi	1e974 <__assert_fail@plt+0xd548>
   1e960:	b	1e964 <__assert_fail@plt+0xd538>
   1e964:	movw	r0, #1
   1e968:	and	r0, r0, #1
   1e96c:	strb	r0, [sp, #11]
   1e970:	b	1e980 <__assert_fail@plt+0xd554>
   1e974:	movw	r0, #0
   1e978:	and	r0, r0, #1
   1e97c:	strb	r0, [sp, #11]
   1e980:	ldrb	r0, [sp, #11]
   1e984:	and	r0, r0, #1
   1e988:	add	sp, sp, #12
   1e98c:	bx	lr
   1e990:	sub	sp, sp, #12
   1e994:	str	r0, [sp, #4]
   1e998:	ldr	r0, [sp, #4]
   1e99c:	sub	r1, r0, #65	; 0x41
   1e9a0:	cmp	r1, #26
   1e9a4:	str	r0, [sp]
   1e9a8:	bcc	1e9c4 <__assert_fail@plt+0xd598>
   1e9ac:	b	1e9b0 <__assert_fail@plt+0xd584>
   1e9b0:	ldr	r0, [sp]
   1e9b4:	sub	r1, r0, #97	; 0x61
   1e9b8:	cmp	r1, #25
   1e9bc:	bhi	1e9d4 <__assert_fail@plt+0xd5a8>
   1e9c0:	b	1e9c4 <__assert_fail@plt+0xd598>
   1e9c4:	movw	r0, #1
   1e9c8:	and	r0, r0, #1
   1e9cc:	strb	r0, [sp, #11]
   1e9d0:	b	1e9e0 <__assert_fail@plt+0xd5b4>
   1e9d4:	movw	r0, #0
   1e9d8:	and	r0, r0, #1
   1e9dc:	strb	r0, [sp, #11]
   1e9e0:	ldrb	r0, [sp, #11]
   1e9e4:	and	r0, r0, #1
   1e9e8:	add	sp, sp, #12
   1e9ec:	bx	lr
   1e9f0:	sub	sp, sp, #8
   1e9f4:	str	r0, [sp]
   1e9f8:	ldr	r0, [sp]
   1e9fc:	cmp	r0, #127	; 0x7f
   1ea00:	bhi	1ea18 <__assert_fail@plt+0xd5ec>
   1ea04:	b	1ea08 <__assert_fail@plt+0xd5dc>
   1ea08:	movw	r0, #1
   1ea0c:	and	r0, r0, #1
   1ea10:	strb	r0, [sp, #7]
   1ea14:	b	1ea24 <__assert_fail@plt+0xd5f8>
   1ea18:	movw	r0, #0
   1ea1c:	and	r0, r0, #1
   1ea20:	strb	r0, [sp, #7]
   1ea24:	ldrb	r0, [sp, #7]
   1ea28:	and	r0, r0, #1
   1ea2c:	add	sp, sp, #8
   1ea30:	bx	lr
   1ea34:	sub	sp, sp, #8
   1ea38:	str	r0, [sp, #4]
   1ea3c:	ldr	r0, [sp, #4]
   1ea40:	cmp	r0, #32
   1ea44:	movw	r0, #1
   1ea48:	str	r0, [sp]
   1ea4c:	beq	1ea64 <__assert_fail@plt+0xd638>
   1ea50:	ldr	r0, [sp, #4]
   1ea54:	cmp	r0, #9
   1ea58:	movw	r0, #0
   1ea5c:	moveq	r0, #1
   1ea60:	str	r0, [sp]
   1ea64:	ldr	r0, [sp]
   1ea68:	and	r0, r0, #1
   1ea6c:	add	sp, sp, #8
   1ea70:	bx	lr
   1ea74:	sub	sp, sp, #12
   1ea78:	str	r0, [sp, #4]
   1ea7c:	ldr	r0, [sp, #4]
   1ea80:	cmp	r0, #32
   1ea84:	str	r0, [sp]
   1ea88:	bcc	1eaa0 <__assert_fail@plt+0xd674>
   1ea8c:	b	1ea90 <__assert_fail@plt+0xd664>
   1ea90:	ldr	r0, [sp]
   1ea94:	cmp	r0, #127	; 0x7f
   1ea98:	bne	1eab0 <__assert_fail@plt+0xd684>
   1ea9c:	b	1eaa0 <__assert_fail@plt+0xd674>
   1eaa0:	movw	r0, #1
   1eaa4:	and	r0, r0, #1
   1eaa8:	strb	r0, [sp, #11]
   1eaac:	b	1eabc <__assert_fail@plt+0xd690>
   1eab0:	movw	r0, #0
   1eab4:	and	r0, r0, #1
   1eab8:	strb	r0, [sp, #11]
   1eabc:	ldrb	r0, [sp, #11]
   1eac0:	and	r0, r0, #1
   1eac4:	add	sp, sp, #12
   1eac8:	bx	lr
   1eacc:	sub	sp, sp, #8
   1ead0:	str	r0, [sp]
   1ead4:	ldr	r0, [sp]
   1ead8:	sub	r0, r0, #48	; 0x30
   1eadc:	cmp	r0, #9
   1eae0:	bhi	1eaf8 <__assert_fail@plt+0xd6cc>
   1eae4:	b	1eae8 <__assert_fail@plt+0xd6bc>
   1eae8:	movw	r0, #1
   1eaec:	and	r0, r0, #1
   1eaf0:	strb	r0, [sp, #7]
   1eaf4:	b	1eb04 <__assert_fail@plt+0xd6d8>
   1eaf8:	movw	r0, #0
   1eafc:	and	r0, r0, #1
   1eb00:	strb	r0, [sp, #7]
   1eb04:	ldrb	r0, [sp, #7]
   1eb08:	and	r0, r0, #1
   1eb0c:	add	sp, sp, #8
   1eb10:	bx	lr
   1eb14:	sub	sp, sp, #8
   1eb18:	str	r0, [sp]
   1eb1c:	ldr	r0, [sp]
   1eb20:	sub	r0, r0, #33	; 0x21
   1eb24:	cmp	r0, #93	; 0x5d
   1eb28:	bhi	1eb40 <__assert_fail@plt+0xd714>
   1eb2c:	b	1eb30 <__assert_fail@plt+0xd704>
   1eb30:	movw	r0, #1
   1eb34:	and	r0, r0, #1
   1eb38:	strb	r0, [sp, #7]
   1eb3c:	b	1eb4c <__assert_fail@plt+0xd720>
   1eb40:	movw	r0, #0
   1eb44:	and	r0, r0, #1
   1eb48:	strb	r0, [sp, #7]
   1eb4c:	ldrb	r0, [sp, #7]
   1eb50:	and	r0, r0, #1
   1eb54:	add	sp, sp, #8
   1eb58:	bx	lr
   1eb5c:	sub	sp, sp, #8
   1eb60:	str	r0, [sp]
   1eb64:	ldr	r0, [sp]
   1eb68:	sub	r0, r0, #97	; 0x61
   1eb6c:	cmp	r0, #25
   1eb70:	bhi	1eb88 <__assert_fail@plt+0xd75c>
   1eb74:	b	1eb78 <__assert_fail@plt+0xd74c>
   1eb78:	movw	r0, #1
   1eb7c:	and	r0, r0, #1
   1eb80:	strb	r0, [sp, #7]
   1eb84:	b	1eb94 <__assert_fail@plt+0xd768>
   1eb88:	movw	r0, #0
   1eb8c:	and	r0, r0, #1
   1eb90:	strb	r0, [sp, #7]
   1eb94:	ldrb	r0, [sp, #7]
   1eb98:	and	r0, r0, #1
   1eb9c:	add	sp, sp, #8
   1eba0:	bx	lr
   1eba4:	sub	sp, sp, #8
   1eba8:	str	r0, [sp]
   1ebac:	ldr	r0, [sp]
   1ebb0:	sub	r0, r0, #32
   1ebb4:	cmp	r0, #94	; 0x5e
   1ebb8:	bhi	1ebd0 <__assert_fail@plt+0xd7a4>
   1ebbc:	b	1ebc0 <__assert_fail@plt+0xd794>
   1ebc0:	movw	r0, #1
   1ebc4:	and	r0, r0, #1
   1ebc8:	strb	r0, [sp, #7]
   1ebcc:	b	1ebdc <__assert_fail@plt+0xd7b0>
   1ebd0:	movw	r0, #0
   1ebd4:	and	r0, r0, #1
   1ebd8:	strb	r0, [sp, #7]
   1ebdc:	ldrb	r0, [sp, #7]
   1ebe0:	and	r0, r0, #1
   1ebe4:	add	sp, sp, #8
   1ebe8:	bx	lr
   1ebec:	sub	sp, sp, #12
   1ebf0:	str	r0, [sp, #4]
   1ebf4:	ldr	r0, [sp, #4]
   1ebf8:	sub	r0, r0, #33	; 0x21
   1ebfc:	cmp	r0, #93	; 0x5d
   1ec00:	str	r0, [sp]
   1ec04:	bhi	1eda0 <__assert_fail@plt+0xd974>
   1ec08:	add	r0, pc, #8
   1ec0c:	ldr	r1, [sp]
   1ec10:	ldr	r0, [r0, r1, lsl #2]
   1ec14:	mov	pc, r0
   1ec18:	muleq	r1, r0, sp
   1ec1c:	muleq	r1, r0, sp
   1ec20:	muleq	r1, r0, sp
   1ec24:	muleq	r1, r0, sp
   1ec28:	muleq	r1, r0, sp
   1ec2c:	muleq	r1, r0, sp
   1ec30:	muleq	r1, r0, sp
   1ec34:	muleq	r1, r0, sp
   1ec38:	muleq	r1, r0, sp
   1ec3c:	muleq	r1, r0, sp
   1ec40:	muleq	r1, r0, sp
   1ec44:	muleq	r1, r0, sp
   1ec48:	muleq	r1, r0, sp
   1ec4c:	muleq	r1, r0, sp
   1ec50:	muleq	r1, r0, sp
   1ec54:	andeq	lr, r1, r0, lsr #27
   1ec58:	andeq	lr, r1, r0, lsr #27
   1ec5c:	andeq	lr, r1, r0, lsr #27
   1ec60:	andeq	lr, r1, r0, lsr #27
   1ec64:	andeq	lr, r1, r0, lsr #27
   1ec68:	andeq	lr, r1, r0, lsr #27
   1ec6c:	andeq	lr, r1, r0, lsr #27
   1ec70:	andeq	lr, r1, r0, lsr #27
   1ec74:	andeq	lr, r1, r0, lsr #27
   1ec78:	andeq	lr, r1, r0, lsr #27
   1ec7c:	muleq	r1, r0, sp
   1ec80:	muleq	r1, r0, sp
   1ec84:	muleq	r1, r0, sp
   1ec88:	muleq	r1, r0, sp
   1ec8c:	muleq	r1, r0, sp
   1ec90:	muleq	r1, r0, sp
   1ec94:	muleq	r1, r0, sp
   1ec98:	andeq	lr, r1, r0, lsr #27
   1ec9c:	andeq	lr, r1, r0, lsr #27
   1eca0:	andeq	lr, r1, r0, lsr #27
   1eca4:	andeq	lr, r1, r0, lsr #27
   1eca8:	andeq	lr, r1, r0, lsr #27
   1ecac:	andeq	lr, r1, r0, lsr #27
   1ecb0:	andeq	lr, r1, r0, lsr #27
   1ecb4:	andeq	lr, r1, r0, lsr #27
   1ecb8:	andeq	lr, r1, r0, lsr #27
   1ecbc:	andeq	lr, r1, r0, lsr #27
   1ecc0:	andeq	lr, r1, r0, lsr #27
   1ecc4:	andeq	lr, r1, r0, lsr #27
   1ecc8:	andeq	lr, r1, r0, lsr #27
   1eccc:	andeq	lr, r1, r0, lsr #27
   1ecd0:	andeq	lr, r1, r0, lsr #27
   1ecd4:	andeq	lr, r1, r0, lsr #27
   1ecd8:	andeq	lr, r1, r0, lsr #27
   1ecdc:	andeq	lr, r1, r0, lsr #27
   1ece0:	andeq	lr, r1, r0, lsr #27
   1ece4:	andeq	lr, r1, r0, lsr #27
   1ece8:	andeq	lr, r1, r0, lsr #27
   1ecec:	andeq	lr, r1, r0, lsr #27
   1ecf0:	andeq	lr, r1, r0, lsr #27
   1ecf4:	andeq	lr, r1, r0, lsr #27
   1ecf8:	andeq	lr, r1, r0, lsr #27
   1ecfc:	andeq	lr, r1, r0, lsr #27
   1ed00:	muleq	r1, r0, sp
   1ed04:	muleq	r1, r0, sp
   1ed08:	muleq	r1, r0, sp
   1ed0c:	muleq	r1, r0, sp
   1ed10:	muleq	r1, r0, sp
   1ed14:	muleq	r1, r0, sp
   1ed18:	andeq	lr, r1, r0, lsr #27
   1ed1c:	andeq	lr, r1, r0, lsr #27
   1ed20:	andeq	lr, r1, r0, lsr #27
   1ed24:	andeq	lr, r1, r0, lsr #27
   1ed28:	andeq	lr, r1, r0, lsr #27
   1ed2c:	andeq	lr, r1, r0, lsr #27
   1ed30:	andeq	lr, r1, r0, lsr #27
   1ed34:	andeq	lr, r1, r0, lsr #27
   1ed38:	andeq	lr, r1, r0, lsr #27
   1ed3c:	andeq	lr, r1, r0, lsr #27
   1ed40:	andeq	lr, r1, r0, lsr #27
   1ed44:	andeq	lr, r1, r0, lsr #27
   1ed48:	andeq	lr, r1, r0, lsr #27
   1ed4c:	andeq	lr, r1, r0, lsr #27
   1ed50:	andeq	lr, r1, r0, lsr #27
   1ed54:	andeq	lr, r1, r0, lsr #27
   1ed58:	andeq	lr, r1, r0, lsr #27
   1ed5c:	andeq	lr, r1, r0, lsr #27
   1ed60:	andeq	lr, r1, r0, lsr #27
   1ed64:	andeq	lr, r1, r0, lsr #27
   1ed68:	andeq	lr, r1, r0, lsr #27
   1ed6c:	andeq	lr, r1, r0, lsr #27
   1ed70:	andeq	lr, r1, r0, lsr #27
   1ed74:	andeq	lr, r1, r0, lsr #27
   1ed78:	andeq	lr, r1, r0, lsr #27
   1ed7c:	andeq	lr, r1, r0, lsr #27
   1ed80:	muleq	r1, r0, sp
   1ed84:	muleq	r1, r0, sp
   1ed88:	muleq	r1, r0, sp
   1ed8c:	muleq	r1, r0, sp
   1ed90:	movw	r0, #1
   1ed94:	and	r0, r0, #1
   1ed98:	strb	r0, [sp, #11]
   1ed9c:	b	1edac <__assert_fail@plt+0xd980>
   1eda0:	movw	r0, #0
   1eda4:	and	r0, r0, #1
   1eda8:	strb	r0, [sp, #11]
   1edac:	ldrb	r0, [sp, #11]
   1edb0:	and	r0, r0, #1
   1edb4:	add	sp, sp, #12
   1edb8:	bx	lr
   1edbc:	sub	sp, sp, #12
   1edc0:	str	r0, [sp, #4]
   1edc4:	ldr	r0, [sp, #4]
   1edc8:	sub	r1, r0, #9
   1edcc:	cmp	r1, #5
   1edd0:	str	r0, [sp]
   1edd4:	bcc	1edec <__assert_fail@plt+0xd9c0>
   1edd8:	b	1eddc <__assert_fail@plt+0xd9b0>
   1eddc:	ldr	r0, [sp]
   1ede0:	cmp	r0, #32
   1ede4:	bne	1edfc <__assert_fail@plt+0xd9d0>
   1ede8:	b	1edec <__assert_fail@plt+0xd9c0>
   1edec:	movw	r0, #1
   1edf0:	and	r0, r0, #1
   1edf4:	strb	r0, [sp, #11]
   1edf8:	b	1ee08 <__assert_fail@plt+0xd9dc>
   1edfc:	movw	r0, #0
   1ee00:	and	r0, r0, #1
   1ee04:	strb	r0, [sp, #11]
   1ee08:	ldrb	r0, [sp, #11]
   1ee0c:	and	r0, r0, #1
   1ee10:	add	sp, sp, #12
   1ee14:	bx	lr
   1ee18:	sub	sp, sp, #8
   1ee1c:	str	r0, [sp]
   1ee20:	ldr	r0, [sp]
   1ee24:	sub	r0, r0, #65	; 0x41
   1ee28:	cmp	r0, #25
   1ee2c:	bhi	1ee44 <__assert_fail@plt+0xda18>
   1ee30:	b	1ee34 <__assert_fail@plt+0xda08>
   1ee34:	movw	r0, #1
   1ee38:	and	r0, r0, #1
   1ee3c:	strb	r0, [sp, #7]
   1ee40:	b	1ee50 <__assert_fail@plt+0xda24>
   1ee44:	movw	r0, #0
   1ee48:	and	r0, r0, #1
   1ee4c:	strb	r0, [sp, #7]
   1ee50:	ldrb	r0, [sp, #7]
   1ee54:	and	r0, r0, #1
   1ee58:	add	sp, sp, #8
   1ee5c:	bx	lr
   1ee60:	sub	sp, sp, #12
   1ee64:	str	r0, [sp, #4]
   1ee68:	ldr	r0, [sp, #4]
   1ee6c:	sub	r1, r0, #48	; 0x30
   1ee70:	cmp	r1, #10
   1ee74:	str	r0, [sp]
   1ee78:	bcc	1eea8 <__assert_fail@plt+0xda7c>
   1ee7c:	b	1ee80 <__assert_fail@plt+0xda54>
   1ee80:	ldr	r0, [sp]
   1ee84:	sub	r1, r0, #65	; 0x41
   1ee88:	cmp	r1, #6
   1ee8c:	bcc	1eea8 <__assert_fail@plt+0xda7c>
   1ee90:	b	1ee94 <__assert_fail@plt+0xda68>
   1ee94:	ldr	r0, [sp]
   1ee98:	sub	r1, r0, #97	; 0x61
   1ee9c:	cmp	r1, #5
   1eea0:	bhi	1eeb8 <__assert_fail@plt+0xda8c>
   1eea4:	b	1eea8 <__assert_fail@plt+0xda7c>
   1eea8:	movw	r0, #1
   1eeac:	and	r0, r0, #1
   1eeb0:	strb	r0, [sp, #11]
   1eeb4:	b	1eec4 <__assert_fail@plt+0xda98>
   1eeb8:	movw	r0, #0
   1eebc:	and	r0, r0, #1
   1eec0:	strb	r0, [sp, #11]
   1eec4:	ldrb	r0, [sp, #11]
   1eec8:	and	r0, r0, #1
   1eecc:	add	sp, sp, #12
   1eed0:	bx	lr
   1eed4:	sub	sp, sp, #8
   1eed8:	str	r0, [sp]
   1eedc:	ldr	r0, [sp]
   1eee0:	sub	r0, r0, #65	; 0x41
   1eee4:	cmp	r0, #25
   1eee8:	bhi	1ef04 <__assert_fail@plt+0xdad8>
   1eeec:	b	1eef0 <__assert_fail@plt+0xdac4>
   1eef0:	ldr	r0, [sp]
   1eef4:	sub	r0, r0, #65	; 0x41
   1eef8:	add	r0, r0, #97	; 0x61
   1eefc:	str	r0, [sp, #4]
   1ef00:	b	1ef0c <__assert_fail@plt+0xdae0>
   1ef04:	ldr	r0, [sp]
   1ef08:	str	r0, [sp, #4]
   1ef0c:	ldr	r0, [sp, #4]
   1ef10:	add	sp, sp, #8
   1ef14:	bx	lr
   1ef18:	sub	sp, sp, #8
   1ef1c:	str	r0, [sp]
   1ef20:	ldr	r0, [sp]
   1ef24:	sub	r0, r0, #97	; 0x61
   1ef28:	cmp	r0, #25
   1ef2c:	bhi	1ef48 <__assert_fail@plt+0xdb1c>
   1ef30:	b	1ef34 <__assert_fail@plt+0xdb08>
   1ef34:	ldr	r0, [sp]
   1ef38:	sub	r0, r0, #97	; 0x61
   1ef3c:	add	r0, r0, #65	; 0x41
   1ef40:	str	r0, [sp, #4]
   1ef44:	b	1ef50 <__assert_fail@plt+0xdb24>
   1ef48:	ldr	r0, [sp]
   1ef4c:	str	r0, [sp, #4]
   1ef50:	ldr	r0, [sp, #4]
   1ef54:	add	sp, sp, #8
   1ef58:	bx	lr
   1ef5c:	push	{fp, lr}
   1ef60:	mov	fp, sp
   1ef64:	sub	sp, sp, #40	; 0x28
   1ef68:	str	r0, [fp, #-4]
   1ef6c:	str	r1, [fp, #-8]
   1ef70:	str	r2, [fp, #-12]
   1ef74:	str	r3, [fp, #-16]
   1ef78:	movw	r0, #0
   1ef7c:	str	r0, [sp, #20]
   1ef80:	ldr	r0, [fp, #-16]
   1ef84:	cmn	r0, #1
   1ef88:	beq	1efb8 <__assert_fail@plt+0xdb8c>
   1ef8c:	ldr	r0, [fp, #-4]
   1ef90:	cmp	r0, #0
   1ef94:	beq	1efac <__assert_fail@plt+0xdb80>
   1ef98:	ldr	r0, [fp, #-16]
   1ef9c:	ldr	r1, [fp, #-8]
   1efa0:	ldr	r2, [sp, #20]
   1efa4:	add	r1, r1, r2, lsl #2
   1efa8:	str	r0, [r1]
   1efac:	ldr	r0, [sp, #20]
   1efb0:	add	r0, r0, #1
   1efb4:	str	r0, [sp, #20]
   1efb8:	bl	1133c <setgrent@plt>
   1efbc:	bl	1130c <__errno_location@plt>
   1efc0:	movw	r1, #0
   1efc4:	str	r1, [r0]
   1efc8:	bl	11348 <getgrent@plt>
   1efcc:	str	r0, [sp, #12]
   1efd0:	ldr	r0, [sp, #12]
   1efd4:	movw	r1, #0
   1efd8:	cmp	r0, r1
   1efdc:	bne	1efe4 <__assert_fail@plt+0xdbb8>
   1efe0:	b	1f10c <__assert_fail@plt+0xdce0>
   1efe4:	ldr	r0, [sp, #12]
   1efe8:	ldr	r0, [r0, #12]
   1efec:	str	r0, [sp, #16]
   1eff0:	ldr	r0, [sp, #16]
   1eff4:	ldr	r0, [r0]
   1eff8:	movw	r1, #0
   1effc:	cmp	r0, r1
   1f000:	beq	1f108 <__assert_fail@plt+0xdcdc>
   1f004:	ldr	r0, [fp, #-12]
   1f008:	ldr	r1, [sp, #16]
   1f00c:	ldr	r1, [r1]
   1f010:	bl	1115c <strcmp@plt>
   1f014:	cmp	r0, #0
   1f018:	beq	1f020 <__assert_fail@plt+0xdbf4>
   1f01c:	b	1f0f8 <__assert_fail@plt+0xdccc>
   1f020:	movw	r0, #0
   1f024:	str	r0, [sp, #8]
   1f028:	ldr	r0, [sp, #8]
   1f02c:	ldr	r1, [sp, #20]
   1f030:	cmp	r0, r1
   1f034:	bge	1f080 <__assert_fail@plt+0xdc54>
   1f038:	ldr	r0, [fp, #-8]
   1f03c:	movw	r1, #0
   1f040:	cmp	r0, r1
   1f044:	beq	1f06c <__assert_fail@plt+0xdc40>
   1f048:	ldr	r0, [fp, #-8]
   1f04c:	ldr	r1, [sp, #8]
   1f050:	add	r0, r0, r1, lsl #2
   1f054:	ldr	r0, [r0]
   1f058:	ldr	r1, [sp, #12]
   1f05c:	ldr	r1, [r1, #8]
   1f060:	cmp	r0, r1
   1f064:	bne	1f06c <__assert_fail@plt+0xdc40>
   1f068:	b	1f080 <__assert_fail@plt+0xdc54>
   1f06c:	b	1f070 <__assert_fail@plt+0xdc44>
   1f070:	ldr	r0, [sp, #8]
   1f074:	add	r0, r0, #1
   1f078:	str	r0, [sp, #8]
   1f07c:	b	1f028 <__assert_fail@plt+0xdbfc>
   1f080:	ldr	r0, [sp, #8]
   1f084:	ldr	r1, [sp, #20]
   1f088:	cmp	r0, r1
   1f08c:	bne	1f0f4 <__assert_fail@plt+0xdcc8>
   1f090:	ldr	r0, [fp, #-4]
   1f094:	cmp	r0, #0
   1f098:	beq	1f0c8 <__assert_fail@plt+0xdc9c>
   1f09c:	ldr	r0, [sp, #20]
   1f0a0:	ldr	r1, [fp, #-4]
   1f0a4:	cmp	r0, r1
   1f0a8:	blt	1f0b0 <__assert_fail@plt+0xdc84>
   1f0ac:	b	1f128 <__assert_fail@plt+0xdcfc>
   1f0b0:	ldr	r0, [sp, #12]
   1f0b4:	ldr	r0, [r0, #8]
   1f0b8:	ldr	r1, [fp, #-8]
   1f0bc:	ldr	r2, [sp, #20]
   1f0c0:	add	r1, r1, r2, lsl #2
   1f0c4:	str	r0, [r1]
   1f0c8:	ldr	r0, [pc, #136]	; 1f158 <__assert_fail@plt+0xdd2c>
   1f0cc:	ldr	r1, [sp, #20]
   1f0d0:	cmp	r1, r0
   1f0d4:	bne	1f0e8 <__assert_fail@plt+0xdcbc>
   1f0d8:	bl	1130c <__errno_location@plt>
   1f0dc:	movw	r1, #75	; 0x4b
   1f0e0:	str	r1, [r0]
   1f0e4:	b	1f128 <__assert_fail@plt+0xdcfc>
   1f0e8:	ldr	r0, [sp, #20]
   1f0ec:	add	r0, r0, #1
   1f0f0:	str	r0, [sp, #20]
   1f0f4:	b	1f0f8 <__assert_fail@plt+0xdccc>
   1f0f8:	ldr	r0, [sp, #16]
   1f0fc:	add	r0, r0, #4
   1f100:	str	r0, [sp, #16]
   1f104:	b	1eff0 <__assert_fail@plt+0xdbc4>
   1f108:	b	1efbc <__assert_fail@plt+0xdb90>
   1f10c:	bl	1130c <__errno_location@plt>
   1f110:	ldr	r0, [r0]
   1f114:	cmp	r0, #0
   1f118:	beq	1f124 <__assert_fail@plt+0xdcf8>
   1f11c:	mvn	r0, #0
   1f120:	str	r0, [sp, #20]
   1f124:	b	1f128 <__assert_fail@plt+0xdcfc>
   1f128:	bl	1130c <__errno_location@plt>
   1f12c:	ldr	r0, [r0]
   1f130:	str	r0, [sp, #4]
   1f134:	bl	1112c <endgrent@plt>
   1f138:	ldr	r0, [sp, #4]
   1f13c:	str	r0, [sp]
   1f140:	bl	1130c <__errno_location@plt>
   1f144:	ldr	r1, [sp]
   1f148:	str	r1, [r0]
   1f14c:	ldr	r0, [sp, #20]
   1f150:	mov	sp, fp
   1f154:	pop	{fp, pc}
   1f158:	svcvc	0x00ffffff
   1f15c:	push	{r4, r5, fp, lr}
   1f160:	add	fp, sp, #8
   1f164:	sub	sp, sp, #272	; 0x110
   1f168:	add	r1, sp, #7
   1f16c:	str	r0, [fp, #-16]
   1f170:	ldr	r0, [fp, #-16]
   1f174:	movw	r2, #257	; 0x101
   1f178:	bl	1f1f8 <__assert_fail@plt+0xddcc>
   1f17c:	cmp	r0, #0
   1f180:	beq	1f194 <__assert_fail@plt+0xdd68>
   1f184:	movw	r0, #0
   1f188:	and	r0, r0, #1
   1f18c:	strb	r0, [fp, #-9]
   1f190:	b	1f1e8 <__assert_fail@plt+0xddbc>
   1f194:	add	r0, sp, #7
   1f198:	movw	r1, #305	; 0x131
   1f19c:	movt	r1, #2
   1f1a0:	bl	1115c <strcmp@plt>
   1f1a4:	cmp	r0, #0
   1f1a8:	movw	r0, #1
   1f1ac:	str	r0, [sp]
   1f1b0:	beq	1f1d4 <__assert_fail@plt+0xdda8>
   1f1b4:	add	r0, sp, #7
   1f1b8:	movw	r1, #307	; 0x133
   1f1bc:	movt	r1, #2
   1f1c0:	bl	1115c <strcmp@plt>
   1f1c4:	cmp	r0, #0
   1f1c8:	movw	r0, #0
   1f1cc:	moveq	r0, #1
   1f1d0:	str	r0, [sp]
   1f1d4:	ldr	r0, [sp]
   1f1d8:	mvn	r1, #0
   1f1dc:	eor	r0, r0, r1
   1f1e0:	and	r0, r0, #1
   1f1e4:	strb	r0, [fp, #-9]
   1f1e8:	ldrb	r0, [fp, #-9]
   1f1ec:	and	r0, r0, #1
   1f1f0:	sub	sp, fp, #8
   1f1f4:	pop	{r4, r5, fp, pc}
   1f1f8:	push	{fp, lr}
   1f1fc:	mov	fp, sp
   1f200:	sub	sp, sp, #16
   1f204:	str	r0, [fp, #-4]
   1f208:	str	r1, [sp, #8]
   1f20c:	str	r2, [sp, #4]
   1f210:	ldr	r0, [fp, #-4]
   1f214:	ldr	r1, [sp, #8]
   1f218:	ldr	r2, [sp, #4]
   1f21c:	bl	1f228 <__assert_fail@plt+0xddfc>
   1f220:	mov	sp, fp
   1f224:	pop	{fp, pc}
   1f228:	push	{fp, lr}
   1f22c:	mov	fp, sp
   1f230:	sub	sp, sp, #24
   1f234:	str	r0, [fp, #-8]
   1f238:	str	r1, [sp, #12]
   1f23c:	str	r2, [sp, #8]
   1f240:	ldr	r0, [fp, #-8]
   1f244:	bl	1f328 <__assert_fail@plt+0xdefc>
   1f248:	str	r0, [sp, #4]
   1f24c:	ldr	r0, [sp, #4]
   1f250:	movw	r1, #0
   1f254:	cmp	r0, r1
   1f258:	bne	1f280 <__assert_fail@plt+0xde54>
   1f25c:	ldr	r0, [sp, #8]
   1f260:	cmp	r0, #0
   1f264:	bls	1f274 <__assert_fail@plt+0xde48>
   1f268:	ldr	r0, [sp, #12]
   1f26c:	movw	r1, #0
   1f270:	strb	r1, [r0]
   1f274:	movw	r0, #22
   1f278:	str	r0, [fp, #-4]
   1f27c:	b	1f2fc <__assert_fail@plt+0xded0>
   1f280:	ldr	r0, [sp, #4]
   1f284:	bl	112e8 <strlen@plt>
   1f288:	str	r0, [sp]
   1f28c:	ldr	r0, [sp]
   1f290:	ldr	r1, [sp, #8]
   1f294:	cmp	r0, r1
   1f298:	bcs	1f2bc <__assert_fail@plt+0xde90>
   1f29c:	ldr	r0, [sp, #12]
   1f2a0:	ldr	r1, [sp, #4]
   1f2a4:	ldr	r2, [sp]
   1f2a8:	add	r2, r2, #1
   1f2ac:	bl	111a4 <memcpy@plt>
   1f2b0:	movw	r0, #0
   1f2b4:	str	r0, [fp, #-4]
   1f2b8:	b	1f2fc <__assert_fail@plt+0xded0>
   1f2bc:	ldr	r0, [sp, #8]
   1f2c0:	cmp	r0, #0
   1f2c4:	bls	1f2f4 <__assert_fail@plt+0xdec8>
   1f2c8:	ldr	r0, [sp, #12]
   1f2cc:	ldr	r1, [sp, #4]
   1f2d0:	ldr	r2, [sp, #8]
   1f2d4:	sub	r2, r2, #1
   1f2d8:	bl	111a4 <memcpy@plt>
   1f2dc:	ldr	r0, [sp, #12]
   1f2e0:	ldr	r1, [sp, #8]
   1f2e4:	sub	r1, r1, #1
   1f2e8:	add	r0, r0, r1
   1f2ec:	movw	r1, #0
   1f2f0:	strb	r1, [r0]
   1f2f4:	movw	r0, #34	; 0x22
   1f2f8:	str	r0, [fp, #-4]
   1f2fc:	ldr	r0, [fp, #-4]
   1f300:	mov	sp, fp
   1f304:	pop	{fp, pc}
   1f308:	push	{fp, lr}
   1f30c:	mov	fp, sp
   1f310:	sub	sp, sp, #8
   1f314:	str	r0, [sp, #4]
   1f318:	ldr	r0, [sp, #4]
   1f31c:	bl	1f328 <__assert_fail@plt+0xdefc>
   1f320:	mov	sp, fp
   1f324:	pop	{fp, pc}
   1f328:	push	{fp, lr}
   1f32c:	mov	fp, sp
   1f330:	sub	sp, sp, #8
   1f334:	str	r0, [sp, #4]
   1f338:	ldr	r0, [sp, #4]
   1f33c:	movw	r1, #0
   1f340:	bl	11390 <setlocale@plt>
   1f344:	str	r0, [sp]
   1f348:	ldr	r0, [sp]
   1f34c:	mov	sp, fp
   1f350:	pop	{fp, pc}
   1f354:	cmp	r3, #0
   1f358:	cmpeq	r2, #0
   1f35c:	bne	1f380 <__assert_fail@plt+0xdf54>
   1f360:	cmp	r1, #0
   1f364:	movlt	r1, #-2147483648	; 0x80000000
   1f368:	movlt	r0, #0
   1f36c:	blt	1f37c <__assert_fail@plt+0xdf50>
   1f370:	cmpeq	r0, #0
   1f374:	mvnne	r1, #-2147483648	; 0x80000000
   1f378:	mvnne	r0, #0
   1f37c:	b	1f464 <__assert_fail@plt+0xe038>
   1f380:	sub	sp, sp, #8
   1f384:	push	{sp, lr}
   1f388:	cmp	r1, #0
   1f38c:	blt	1f3ac <__assert_fail@plt+0xdf80>
   1f390:	cmp	r3, #0
   1f394:	blt	1f3e0 <__assert_fail@plt+0xdfb4>
   1f398:	bl	1f474 <__assert_fail@plt+0xe048>
   1f39c:	ldr	lr, [sp, #4]
   1f3a0:	add	sp, sp, #8
   1f3a4:	pop	{r2, r3}
   1f3a8:	bx	lr
   1f3ac:	rsbs	r0, r0, #0
   1f3b0:	sbc	r1, r1, r1, lsl #1
   1f3b4:	cmp	r3, #0
   1f3b8:	blt	1f404 <__assert_fail@plt+0xdfd8>
   1f3bc:	bl	1f474 <__assert_fail@plt+0xe048>
   1f3c0:	ldr	lr, [sp, #4]
   1f3c4:	add	sp, sp, #8
   1f3c8:	pop	{r2, r3}
   1f3cc:	rsbs	r0, r0, #0
   1f3d0:	sbc	r1, r1, r1, lsl #1
   1f3d4:	rsbs	r2, r2, #0
   1f3d8:	sbc	r3, r3, r3, lsl #1
   1f3dc:	bx	lr
   1f3e0:	rsbs	r2, r2, #0
   1f3e4:	sbc	r3, r3, r3, lsl #1
   1f3e8:	bl	1f474 <__assert_fail@plt+0xe048>
   1f3ec:	ldr	lr, [sp, #4]
   1f3f0:	add	sp, sp, #8
   1f3f4:	pop	{r2, r3}
   1f3f8:	rsbs	r0, r0, #0
   1f3fc:	sbc	r1, r1, r1, lsl #1
   1f400:	bx	lr
   1f404:	rsbs	r2, r2, #0
   1f408:	sbc	r3, r3, r3, lsl #1
   1f40c:	bl	1f474 <__assert_fail@plt+0xe048>
   1f410:	ldr	lr, [sp, #4]
   1f414:	add	sp, sp, #8
   1f418:	pop	{r2, r3}
   1f41c:	rsbs	r2, r2, #0
   1f420:	sbc	r3, r3, r3, lsl #1
   1f424:	bx	lr
   1f428:	cmp	r3, #0
   1f42c:	cmpeq	r2, #0
   1f430:	bne	1f448 <__assert_fail@plt+0xe01c>
   1f434:	cmp	r1, #0
   1f438:	cmpeq	r0, #0
   1f43c:	mvnne	r1, #0
   1f440:	mvnne	r0, #0
   1f444:	b	1f464 <__assert_fail@plt+0xe038>
   1f448:	sub	sp, sp, #8
   1f44c:	push	{sp, lr}
   1f450:	bl	1f474 <__assert_fail@plt+0xe048>
   1f454:	ldr	lr, [sp, #4]
   1f458:	add	sp, sp, #8
   1f45c:	pop	{r2, r3}
   1f460:	bx	lr
   1f464:	push	{r1, lr}
   1f468:	mov	r0, #8
   1f46c:	bl	11144 <raise@plt>
   1f470:	pop	{r1, pc}
   1f474:	cmp	r1, r3
   1f478:	cmpeq	r0, r2
   1f47c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f480:	mov	r4, r0
   1f484:	movcc	r0, #0
   1f488:	mov	r5, r1
   1f48c:	ldr	lr, [sp, #36]	; 0x24
   1f490:	movcc	r1, r0
   1f494:	bcc	1f590 <__assert_fail@plt+0xe164>
   1f498:	cmp	r3, #0
   1f49c:	clzeq	ip, r2
   1f4a0:	clzne	ip, r3
   1f4a4:	addeq	ip, ip, #32
   1f4a8:	cmp	r5, #0
   1f4ac:	clzeq	r1, r4
   1f4b0:	addeq	r1, r1, #32
   1f4b4:	clzne	r1, r5
   1f4b8:	sub	ip, ip, r1
   1f4bc:	sub	sl, ip, #32
   1f4c0:	lsl	r9, r3, ip
   1f4c4:	rsb	fp, ip, #32
   1f4c8:	orr	r9, r9, r2, lsl sl
   1f4cc:	orr	r9, r9, r2, lsr fp
   1f4d0:	lsl	r8, r2, ip
   1f4d4:	cmp	r5, r9
   1f4d8:	cmpeq	r4, r8
   1f4dc:	movcc	r0, #0
   1f4e0:	movcc	r1, r0
   1f4e4:	bcc	1f500 <__assert_fail@plt+0xe0d4>
   1f4e8:	mov	r0, #1
   1f4ec:	subs	r4, r4, r8
   1f4f0:	lsl	r1, r0, sl
   1f4f4:	orr	r1, r1, r0, lsr fp
   1f4f8:	lsl	r0, r0, ip
   1f4fc:	sbc	r5, r5, r9
   1f500:	cmp	ip, #0
   1f504:	beq	1f590 <__assert_fail@plt+0xe164>
   1f508:	lsr	r6, r8, #1
   1f50c:	orr	r6, r6, r9, lsl #31
   1f510:	lsr	r7, r9, #1
   1f514:	mov	r2, ip
   1f518:	b	1f53c <__assert_fail@plt+0xe110>
   1f51c:	subs	r3, r4, r6
   1f520:	sbc	r8, r5, r7
   1f524:	adds	r3, r3, r3
   1f528:	adc	r8, r8, r8
   1f52c:	adds	r4, r3, #1
   1f530:	adc	r5, r8, #0
   1f534:	subs	r2, r2, #1
   1f538:	beq	1f558 <__assert_fail@plt+0xe12c>
   1f53c:	cmp	r5, r7
   1f540:	cmpeq	r4, r6
   1f544:	bcs	1f51c <__assert_fail@plt+0xe0f0>
   1f548:	adds	r4, r4, r4
   1f54c:	adc	r5, r5, r5
   1f550:	subs	r2, r2, #1
   1f554:	bne	1f53c <__assert_fail@plt+0xe110>
   1f558:	lsr	r3, r4, ip
   1f55c:	orr	r3, r3, r5, lsl fp
   1f560:	lsr	r2, r5, ip
   1f564:	orr	r3, r3, r5, lsr sl
   1f568:	adds	r0, r0, r4
   1f56c:	mov	r4, r3
   1f570:	lsl	r3, r2, ip
   1f574:	orr	r3, r3, r4, lsl sl
   1f578:	lsl	ip, r4, ip
   1f57c:	orr	r3, r3, r4, lsr fp
   1f580:	adc	r1, r1, r5
   1f584:	subs	r0, r0, ip
   1f588:	mov	r5, r2
   1f58c:	sbc	r1, r1, r3
   1f590:	cmp	lr, #0
   1f594:	strdne	r4, [lr]
   1f598:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f59c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1f5a0:	mov	r7, r0
   1f5a4:	ldr	r6, [pc, #72]	; 1f5f4 <__assert_fail@plt+0xe1c8>
   1f5a8:	ldr	r5, [pc, #72]	; 1f5f8 <__assert_fail@plt+0xe1cc>
   1f5ac:	add	r6, pc, r6
   1f5b0:	add	r5, pc, r5
   1f5b4:	sub	r6, r6, r5
   1f5b8:	mov	r8, r1
   1f5bc:	mov	r9, r2
   1f5c0:	bl	11100 <calloc@plt-0x20>
   1f5c4:	asrs	r6, r6, #2
   1f5c8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1f5cc:	mov	r4, #0
   1f5d0:	add	r4, r4, #1
   1f5d4:	ldr	r3, [r5], #4
   1f5d8:	mov	r2, r9
   1f5dc:	mov	r1, r8
   1f5e0:	mov	r0, r7
   1f5e4:	blx	r3
   1f5e8:	cmp	r6, r4
   1f5ec:	bne	1f5d0 <__assert_fail@plt+0xe1a4>
   1f5f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1f5f4:	andeq	r1, r1, r8, asr r9
   1f5f8:	andeq	r1, r1, r0, asr r9
   1f5fc:	bx	lr
   1f600:	ldr	r3, [pc, #12]	; 1f614 <__assert_fail@plt+0xe1e8>
   1f604:	mov	r1, #0
   1f608:	add	r3, pc, r3
   1f60c:	ldr	r2, [r3]
   1f610:	b	11318 <__cxa_atexit@plt>
   1f614:	andeq	r1, r1, ip, lsl #22

Disassembly of section .fini:

0001f618 <.fini>:
   1f618:	push	{r3, lr}
   1f61c:	pop	{r3, pc}
