
../repos/findutils/xargs/xargs:     file format elf32-littlearm


Disassembly of section .init:

00011174 <.init>:
   11174:	push	{r3, lr}
   11178:	bl	115b4 <__assert_fail@plt+0x48>
   1117c:	pop	{r3, pc}

Disassembly of section .plt:

00011180 <fdopen@plt-0x14>:
   11180:	push	{lr}		; (str lr, [sp, #-4]!)
   11184:	ldr	lr, [pc, #4]	; 11190 <fdopen@plt-0x4>
   11188:	add	lr, pc, lr
   1118c:	ldr	pc, [lr, #8]!
   11190:	andeq	r0, r2, r0, ror lr

00011194 <fdopen@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #32, 20	; 0x20000
   1119c:	ldr	pc, [ip, #3696]!	; 0xe70

000111a0 <calloc@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #32, 20	; 0x20000
   111a8:	ldr	pc, [ip, #3688]!	; 0xe68

000111ac <strcmp@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #32, 20	; 0x20000
   111b4:	ldr	pc, [ip, #3680]!	; 0xe60

000111b8 <strtol@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #32, 20	; 0x20000
   111c0:	ldr	pc, [ip, #3672]!	; 0xe58

000111c4 <printf@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #32, 20	; 0x20000
   111cc:	ldr	pc, [ip, #3664]!	; 0xe50

000111d0 <read@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #32, 20	; 0x20000
   111d8:	ldr	pc, [ip, #3656]!	; 0xe48

000111dc <fflush@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #32, 20	; 0x20000
   111e4:	ldr	pc, [ip, #3648]!	; 0xe40

000111e8 <wcwidth@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #32, 20	; 0x20000
   111f0:	ldr	pc, [ip, #3640]!	; 0xe38

000111f4 <free@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #32, 20	; 0x20000
   111fc:	ldr	pc, [ip, #3632]!	; 0xe30

00011200 <ferror@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #32, 20	; 0x20000
   11208:	ldr	pc, [ip, #3624]!	; 0xe28

0001120c <_exit@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #32, 20	; 0x20000
   11214:	ldr	pc, [ip, #3616]!	; 0xe20

00011218 <memcpy@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #32, 20	; 0x20000
   11220:	ldr	pc, [ip, #3608]!	; 0xe18

00011224 <execvp@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #32, 20	; 0x20000
   1122c:	ldr	pc, [ip, #3600]!	; 0xe10

00011230 <mbsinit@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #32, 20	; 0x20000
   11238:	ldr	pc, [ip, #3592]!	; 0xe08

0001123c <signal@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #32, 20	; 0x20000
   11244:	ldr	pc, [ip, #3584]!	; 0xe00

00011248 <memcmp@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #32, 20	; 0x20000
   11250:	ldr	pc, [ip, #3576]!	; 0xdf8

00011254 <sysconf@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #32, 20	; 0x20000
   1125c:	ldr	pc, [ip, #3568]!	; 0xdf0

00011260 <dup2@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #32, 20	; 0x20000
   11268:	ldr	pc, [ip, #3560]!	; 0xde8

0001126c <getrlimit64@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #32, 20	; 0x20000
   11274:	ldr	pc, [ip, #3552]!	; 0xde0

00011278 <realloc@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #32, 20	; 0x20000
   11280:	ldr	pc, [ip, #3544]!	; 0xdd8

00011284 <textdomain@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #32, 20	; 0x20000
   1128c:	ldr	pc, [ip, #3536]!	; 0xdd0

00011290 <iswcntrl@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #32, 20	; 0x20000
   11298:	ldr	pc, [ip, #3528]!	; 0xdc8

0001129c <iswprint@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #32, 20	; 0x20000
   112a4:	ldr	pc, [ip, #3520]!	; 0xdc0

000112a8 <poll@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #32, 20	; 0x20000
   112b0:	ldr	pc, [ip, #3512]!	; 0xdb8

000112b4 <sigaction@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #32, 20	; 0x20000
   112bc:	ldr	pc, [ip, #3504]!	; 0xdb0

000112c0 <fwrite@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #32, 20	; 0x20000
   112c8:	ldr	pc, [ip, #3496]!	; 0xda8

000112cc <lseek64@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #32, 20	; 0x20000
   112d4:	ldr	pc, [ip, #3488]!	; 0xda0

000112d8 <waitpid@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #32, 20	; 0x20000
   112e0:	ldr	pc, [ip, #3480]!	; 0xd98

000112e4 <__ctype_get_mb_cur_max@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #32, 20	; 0x20000
   112ec:	ldr	pc, [ip, #3472]!	; 0xd90

000112f0 <strcpy@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #32, 20	; 0x20000
   112f8:	ldr	pc, [ip, #3464]!	; 0xd88

000112fc <__fpending@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #32, 20	; 0x20000
   11304:	ldr	pc, [ip, #3456]!	; 0xd80

00011308 <mbrtowc@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #32, 20	; 0x20000
   11310:	ldr	pc, [ip, #3448]!	; 0xd78

00011314 <error@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #32, 20	; 0x20000
   1131c:	ldr	pc, [ip, #3440]!	; 0xd70

00011320 <opendir@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #32, 20	; 0x20000
   11328:	ldr	pc, [ip, #3432]!	; 0xd68

0001132c <open64@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #32, 20	; 0x20000
   11334:	ldr	pc, [ip, #3424]!	; 0xd60

00011338 <getenv@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #32, 20	; 0x20000
   11340:	ldr	pc, [ip, #3416]!	; 0xd58

00011344 <malloc@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #32, 20	; 0x20000
   1134c:	ldr	pc, [ip, #3408]!	; 0xd50

00011350 <__libc_start_main@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #32, 20	; 0x20000
   11358:	ldr	pc, [ip, #3400]!	; 0xd48

0001135c <__freading@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #32, 20	; 0x20000
   11364:	ldr	pc, [ip, #3392]!	; 0xd40

00011368 <__gmon_start__@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #32, 20	; 0x20000
   11370:	ldr	pc, [ip, #3384]!	; 0xd38

00011374 <getopt_long@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #32, 20	; 0x20000
   1137c:	ldr	pc, [ip, #3376]!	; 0xd30

00011380 <__ctype_b_loc@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #32, 20	; 0x20000
   11388:	ldr	pc, [ip, #3368]!	; 0xd28

0001138c <getpid@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #32, 20	; 0x20000
   11394:	ldr	pc, [ip, #3360]!	; 0xd20

00011398 <exit@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #32, 20	; 0x20000
   113a0:	ldr	pc, [ip, #3352]!	; 0xd18

000113a4 <gettext@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #32, 20	; 0x20000
   113ac:	ldr	pc, [ip, #3344]!	; 0xd10

000113b0 <strtoul@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #32, 20	; 0x20000
   113b8:	ldr	pc, [ip, #3336]!	; 0xd08

000113bc <strlen@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #32, 20	; 0x20000
   113c4:	ldr	pc, [ip, #3328]!	; 0xd00

000113c8 <strchr@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #32, 20	; 0x20000
   113d0:	ldr	pc, [ip, #3320]!	; 0xcf8

000113d4 <setenv@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #32, 20	; 0x20000
   113dc:	ldr	pc, [ip, #3312]!	; 0xcf0

000113e0 <fprintf@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #32, 20	; 0x20000
   113e8:	ldr	pc, [ip, #3304]!	; 0xce8

000113ec <__errno_location@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #32, 20	; 0x20000
   113f4:	ldr	pc, [ip, #3296]!	; 0xce0

000113f8 <snprintf@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #32, 20	; 0x20000
   11400:	ldr	pc, [ip, #3288]!	; 0xcd8

00011404 <__cxa_atexit@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #32, 20	; 0x20000
   1140c:	ldr	pc, [ip, #3280]!	; 0xcd0

00011410 <memset@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #32, 20	; 0x20000
   11418:	ldr	pc, [ip, #3272]!	; 0xcc8

0001141c <strncpy@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #32, 20	; 0x20000
   11424:	ldr	pc, [ip, #3264]!	; 0xcc0

00011428 <write@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #32, 20	; 0x20000
   11430:	ldr	pc, [ip, #3256]!	; 0xcb8

00011434 <fileno@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #32, 20	; 0x20000
   1143c:	ldr	pc, [ip, #3248]!	; 0xcb0

00011440 <memchr@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #32, 20	; 0x20000
   11448:	ldr	pc, [ip, #3240]!	; 0xca8

0001144c <fclose@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #32, 20	; 0x20000
   11454:	ldr	pc, [ip, #3232]!	; 0xca0

00011458 <strnlen@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #32, 20	; 0x20000
   11460:	ldr	pc, [ip, #3224]!	; 0xc98

00011464 <pipe@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #32, 20	; 0x20000
   1146c:	ldr	pc, [ip, #3216]!	; 0xc90

00011470 <fseeko64@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #32, 20	; 0x20000
   11478:	ldr	pc, [ip, #3208]!	; 0xc88

0001147c <fcntl64@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #32, 20	; 0x20000
   11484:	ldr	pc, [ip, #3200]!	; 0xc80

00011488 <setlocale@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #32, 20	; 0x20000
   11490:	ldr	pc, [ip, #3192]!	; 0xc78

00011494 <sigemptyset@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #32, 20	; 0x20000
   1149c:	ldr	pc, [ip, #3184]!	; 0xc70

000114a0 <fork@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #32, 20	; 0x20000
   114a8:	ldr	pc, [ip, #3176]!	; 0xc68

000114ac <strrchr@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #32, 20	; 0x20000
   114b4:	ldr	pc, [ip, #3168]!	; 0xc60

000114b8 <nl_langinfo@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #32, 20	; 0x20000
   114c0:	ldr	pc, [ip, #3160]!	; 0xc58

000114c4 <fputc@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #32, 20	; 0x20000
   114cc:	ldr	pc, [ip, #3152]!	; 0xc50

000114d0 <readdir64@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #32, 20	; 0x20000
   114d8:	ldr	pc, [ip, #3144]!	; 0xc48

000114dc <fdopendir@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #32, 20	; 0x20000
   114e4:	ldr	pc, [ip, #3136]!	; 0xc40

000114e8 <putc@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #32, 20	; 0x20000
   114f0:	ldr	pc, [ip, #3128]!	; 0xc38

000114f4 <dirfd@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #32, 20	; 0x20000
   114fc:	ldr	pc, [ip, #3120]!	; 0xc30

00011500 <bindtextdomain@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #32, 20	; 0x20000
   11508:	ldr	pc, [ip, #3112]!	; 0xc28

0001150c <isatty@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #32, 20	; 0x20000
   11514:	ldr	pc, [ip, #3104]!	; 0xc20

00011518 <unsetenv@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #32, 20	; 0x20000
   11520:	ldr	pc, [ip, #3096]!	; 0xc18

00011524 <fputs@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #32, 20	; 0x20000
   1152c:	ldr	pc, [ip, #3088]!	; 0xc10

00011530 <strncmp@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #32, 20	; 0x20000
   11538:	ldr	pc, [ip, #3080]!	; 0xc08

0001153c <abort@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #32, 20	; 0x20000
   11544:	ldr	pc, [ip, #3072]!	; 0xc00

00011548 <getc@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #32, 20	; 0x20000
   11550:	ldr	pc, [ip, #3064]!	; 0xbf8

00011554 <close@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #32, 20	; 0x20000
   1155c:	ldr	pc, [ip, #3056]!	; 0xbf0

00011560 <closedir@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #32, 20	; 0x20000
   11568:	ldr	pc, [ip, #3048]!	; 0xbe8

0001156c <__assert_fail@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #32, 20	; 0x20000
   11574:	ldr	pc, [ip, #3040]!	; 0xbe0

Disassembly of section .text:

00011578 <.text>:
   11578:	mov	fp, #0
   1157c:	mov	lr, #0
   11580:	pop	{r1}		; (ldr r1, [sp], #4)
   11584:	mov	r2, sp
   11588:	push	{r2}		; (str r2, [sp, #-4]!)
   1158c:	push	{r0}		; (str r0, [sp, #-4]!)
   11590:	ldr	ip, [pc, #16]	; 115a8 <__assert_fail@plt+0x3c>
   11594:	push	{ip}		; (str ip, [sp, #-4]!)
   11598:	ldr	r0, [pc, #12]	; 115ac <__assert_fail@plt+0x40>
   1159c:	ldr	r3, [pc, #12]	; 115b0 <__assert_fail@plt+0x44>
   115a0:	bl	11350 <__libc_start_main@plt>
   115a4:	bl	1153c <abort@plt>
   115a8:	andeq	lr, r1, r8, lsr #23
   115ac:	andeq	r1, r1, ip, lsr #22
   115b0:	andeq	lr, r1, r8, asr #22
   115b4:	ldr	r3, [pc, #20]	; 115d0 <__assert_fail@plt+0x64>
   115b8:	ldr	r2, [pc, #20]	; 115d4 <__assert_fail@plt+0x68>
   115bc:	add	r3, pc, r3
   115c0:	ldr	r2, [r3, r2]
   115c4:	cmp	r2, #0
   115c8:	bxeq	lr
   115cc:	b	11368 <__gmon_start__@plt>
   115d0:	andeq	r0, r2, ip, lsr sl
   115d4:	andeq	r0, r0, r8, asr r1
   115d8:	ldr	r0, [pc, #24]	; 115f8 <__assert_fail@plt+0x8c>
   115dc:	ldr	r3, [pc, #24]	; 115fc <__assert_fail@plt+0x90>
   115e0:	cmp	r3, r0
   115e4:	bxeq	lr
   115e8:	ldr	r3, [pc, #16]	; 11600 <__assert_fail@plt+0x94>
   115ec:	cmp	r3, #0
   115f0:	bxeq	lr
   115f4:	bx	r3
   115f8:			; <UNDEFINED> instruction: 0x000321b8
   115fc:			; <UNDEFINED> instruction: 0x000321b8
   11600:	andeq	r0, r0, r0
   11604:	ldr	r0, [pc, #36]	; 11630 <__assert_fail@plt+0xc4>
   11608:	ldr	r1, [pc, #36]	; 11634 <__assert_fail@plt+0xc8>
   1160c:	sub	r1, r1, r0
   11610:	asr	r1, r1, #2
   11614:	add	r1, r1, r1, lsr #31
   11618:	asrs	r1, r1, #1
   1161c:	bxeq	lr
   11620:	ldr	r3, [pc, #16]	; 11638 <__assert_fail@plt+0xcc>
   11624:	cmp	r3, #0
   11628:	bxeq	lr
   1162c:	bx	r3
   11630:			; <UNDEFINED> instruction: 0x000321b8
   11634:			; <UNDEFINED> instruction: 0x000321b8
   11638:	andeq	r0, r0, r0
   1163c:	push	{r4, lr}
   11640:	ldr	r4, [pc, #24]	; 11660 <__assert_fail@plt+0xf4>
   11644:	ldrb	r3, [r4]
   11648:	cmp	r3, #0
   1164c:	popne	{r4, pc}
   11650:	bl	115d8 <__assert_fail@plt+0x6c>
   11654:	mov	r3, #1
   11658:	strb	r3, [r4]
   1165c:	pop	{r4, pc}
   11660:	andeq	r2, r3, r4, ror #3
   11664:	b	11604 <__assert_fail@plt+0x98>
   11668:	str	fp, [sp, #-8]!
   1166c:	str	lr, [sp, #4]
   11670:	add	fp, sp, #4
   11674:	sub	sp, sp, #32
   11678:	str	r0, [fp, #-24]	; 0xffffffe8
   1167c:	mov	r3, #8
   11680:	str	r3, [fp, #-12]
   11684:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11688:	ldrb	r3, [r3]
   1168c:	cmp	r3, #92	; 0x5c
   11690:	beq	116b4 <__assert_fail@plt+0x148>
   11694:	movw	r3, #1284	; 0x504
   11698:	movt	r3, #2
   1169c:	mov	r2, #236	; 0xec
   116a0:	movw	r1, #60868	; 0xedc4
   116a4:	movt	r1, #1
   116a8:	movw	r0, #60876	; 0xedcc
   116ac:	movt	r0, #1
   116b0:	bl	1156c <__assert_fail@plt>
   116b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   116b8:	add	r3, r3, #1
   116bc:	ldrb	r3, [r3]
   116c0:	cmp	r3, #120	; 0x78
   116c4:	bne	116e0 <__assert_fail@plt+0x174>
   116c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   116cc:	add	r3, r3, #2
   116d0:	str	r3, [fp, #-8]
   116d4:	mov	r3, #16
   116d8:	str	r3, [fp, #-12]
   116dc:	b	11750 <__assert_fail@plt+0x1e4>
   116e0:	bl	11380 <__ctype_b_loc@plt>
   116e4:	mov	r3, r0
   116e8:	ldr	r2, [r3]
   116ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   116f0:	add	r3, r3, #1
   116f4:	ldrb	r3, [r3]
   116f8:	lsl	r3, r3, #1
   116fc:	add	r3, r2, r3
   11700:	ldrh	r3, [r3]
   11704:	and	r3, r3, #2048	; 0x800
   11708:	cmp	r3, #0
   1170c:	beq	11728 <__assert_fail@plt+0x1bc>
   11710:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11714:	add	r3, r3, #1
   11718:	str	r3, [fp, #-8]
   1171c:	mov	r3, #8
   11720:	str	r3, [fp, #-12]
   11724:	b	11750 <__assert_fail@plt+0x1e4>
   11728:	mov	r3, #0
   1172c:	str	r3, [fp, #-8]
   11730:	movw	r0, #60892	; 0xeddc
   11734:	movt	r0, #1
   11738:	bl	113a4 <gettext@plt>
   1173c:	mov	r2, r0
   11740:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11744:	mov	r1, #0
   11748:	mov	r0, #1
   1174c:	bl	11314 <error@plt>
   11750:	bl	113ec <__errno_location@plt>
   11754:	mov	r2, r0
   11758:	mov	r3, #0
   1175c:	str	r3, [r2]
   11760:	mov	r3, #0
   11764:	str	r3, [fp, #-20]	; 0xffffffec
   11768:	sub	r3, fp, #20
   1176c:	ldr	r2, [fp, #-12]
   11770:	mov	r1, r3
   11774:	ldr	r0, [fp, #-8]
   11778:	bl	113b0 <strtoul@plt>
   1177c:	str	r0, [fp, #-16]
   11780:	ldr	r3, [fp, #-16]
   11784:	cmn	r3, #1
   11788:	bne	117a0 <__assert_fail@plt+0x234>
   1178c:	bl	113ec <__errno_location@plt>
   11790:	mov	r3, r0
   11794:	ldr	r3, [r3]
   11798:	cmp	r3, #34	; 0x22
   1179c:	beq	117ac <__assert_fail@plt+0x240>
   117a0:	ldr	r3, [fp, #-16]
   117a4:	cmp	r3, #255	; 0xff
   117a8:	bls	11808 <__assert_fail@plt+0x29c>
   117ac:	ldr	r3, [fp, #-12]
   117b0:	cmp	r3, #16
   117b4:	bne	117e0 <__assert_fail@plt+0x274>
   117b8:	movw	r0, #60956	; 0xee1c
   117bc:	movt	r0, #1
   117c0:	bl	113a4 <gettext@plt>
   117c4:	mov	r2, r0
   117c8:	mov	r3, #255	; 0xff
   117cc:	str	r3, [sp]
   117d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   117d4:	mov	r1, #0
   117d8:	mov	r0, #1
   117dc:	bl	11314 <error@plt>
   117e0:	movw	r0, #61056	; 0xee80
   117e4:	movt	r0, #1
   117e8:	bl	113a4 <gettext@plt>
   117ec:	mov	r2, r0
   117f0:	mov	r3, #255	; 0xff
   117f4:	str	r3, [sp]
   117f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   117fc:	mov	r1, #0
   11800:	mov	r0, #1
   11804:	bl	11314 <error@plt>
   11808:	ldr	r3, [fp, #-20]	; 0xffffffec
   1180c:	ldrb	r3, [r3]
   11810:	cmp	r3, #0
   11814:	beq	11840 <__assert_fail@plt+0x2d4>
   11818:	movw	r0, #61156	; 0xeee4
   1181c:	movt	r0, #1
   11820:	bl	113a4 <gettext@plt>
   11824:	mov	r2, r0
   11828:	ldr	r3, [fp, #-20]	; 0xffffffec
   1182c:	str	r3, [sp]
   11830:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11834:	mov	r1, #0
   11838:	mov	r0, #1
   1183c:	bl	11314 <error@plt>
   11840:	ldr	r3, [fp, #-16]
   11844:	uxtb	r3, r3
   11848:	mov	r0, r3
   1184c:	sub	sp, fp, #4
   11850:	ldr	fp, [sp]
   11854:	add	sp, sp, #4
   11858:	pop	{pc}		; (ldr pc, [sp], #4)
   1185c:	str	fp, [sp, #-8]!
   11860:	str	lr, [sp, #4]
   11864:	add	fp, sp, #4
   11868:	sub	sp, sp, #8
   1186c:	str	r0, [fp, #-8]
   11870:	ldr	r0, [fp, #-8]
   11874:	bl	113bc <strlen@plt>
   11878:	mov	r3, r0
   1187c:	cmp	r3, #1
   11880:	bne	11890 <__assert_fail@plt+0x324>
   11884:	ldr	r3, [fp, #-8]
   11888:	ldrb	r3, [r3]
   1188c:	b	11998 <__assert_fail@plt+0x42c>
   11890:	ldr	r3, [fp, #-8]
   11894:	ldrb	r3, [r3]
   11898:	cmp	r3, #92	; 0x5c
   1189c:	bne	11978 <__assert_fail@plt+0x40c>
   118a0:	ldr	r3, [fp, #-8]
   118a4:	add	r3, r3, #1
   118a8:	ldrb	r3, [r3]
   118ac:	sub	r3, r3, #92	; 0x5c
   118b0:	cmp	r3, #26
   118b4:	ldrls	pc, [pc, r3, lsl #2]
   118b8:	b	11968 <__assert_fail@plt+0x3fc>
   118bc:	andeq	r1, r1, r0, ror #18
   118c0:	andeq	r1, r1, r8, ror #18
   118c4:	andeq	r1, r1, r8, ror #18
   118c8:	andeq	r1, r1, r8, ror #18
   118cc:	andeq	r1, r1, r8, ror #18
   118d0:	andeq	r1, r1, r8, lsr #18
   118d4:	andeq	r1, r1, r0, lsr r9
   118d8:	andeq	r1, r1, r8, ror #18
   118dc:	andeq	r1, r1, r8, ror #18
   118e0:	andeq	r1, r1, r8, ror #18
   118e4:	andeq	r1, r1, r8, lsr r9
   118e8:	andeq	r1, r1, r8, ror #18
   118ec:	andeq	r1, r1, r8, ror #18
   118f0:	andeq	r1, r1, r8, ror #18
   118f4:	andeq	r1, r1, r8, ror #18
   118f8:	andeq	r1, r1, r8, ror #18
   118fc:	andeq	r1, r1, r8, ror #18
   11900:	andeq	r1, r1, r8, ror #18
   11904:	andeq	r1, r1, r0, asr #18
   11908:	andeq	r1, r1, r8, ror #18
   1190c:	andeq	r1, r1, r8, ror #18
   11910:	andeq	r1, r1, r8, ror #18
   11914:	andeq	r1, r1, r8, asr #18
   11918:	andeq	r1, r1, r8, ror #18
   1191c:	andeq	r1, r1, r0, asr r9
   11920:	andeq	r1, r1, r8, ror #18
   11924:	andeq	r1, r1, r8, asr r9
   11928:	mov	r3, #7
   1192c:	b	11998 <__assert_fail@plt+0x42c>
   11930:	mov	r3, #8
   11934:	b	11998 <__assert_fail@plt+0x42c>
   11938:	mov	r3, #12
   1193c:	b	11998 <__assert_fail@plt+0x42c>
   11940:	mov	r3, #10
   11944:	b	11998 <__assert_fail@plt+0x42c>
   11948:	mov	r3, #13
   1194c:	b	11998 <__assert_fail@plt+0x42c>
   11950:	mov	r3, #9
   11954:	b	11998 <__assert_fail@plt+0x42c>
   11958:	mov	r3, #11
   1195c:	b	11998 <__assert_fail@plt+0x42c>
   11960:	mov	r3, #92	; 0x5c
   11964:	b	11998 <__assert_fail@plt+0x42c>
   11968:	ldr	r0, [fp, #-8]
   1196c:	bl	11668 <__assert_fail@plt+0xfc>
   11970:	mov	r3, r0
   11974:	b	11998 <__assert_fail@plt+0x42c>
   11978:	movw	r0, #61256	; 0xef48
   1197c:	movt	r0, #1
   11980:	bl	113a4 <gettext@plt>
   11984:	mov	r2, r0
   11988:	ldr	r3, [fp, #-8]
   1198c:	mov	r1, #0
   11990:	mov	r0, #1
   11994:	bl	11314 <error@plt>
   11998:	mov	r0, r3
   1199c:	sub	sp, fp, #4
   119a0:	ldr	fp, [sp]
   119a4:	add	sp, sp, #4
   119a8:	pop	{pc}		; (ldr pc, [sp], #4)
   119ac:	push	{fp}		; (str fp, [sp, #-4]!)
   119b0:	add	fp, sp, #0
   119b4:	nop	{0}
   119b8:	add	sp, fp, #0
   119bc:	pop	{fp}		; (ldr fp, [sp], #4)
   119c0:	bx	lr
   119c4:	str	fp, [sp, #-8]!
   119c8:	str	lr, [sp, #4]
   119cc:	add	fp, sp, #4
   119d0:	movw	r0, #61388	; 0xefcc
   119d4:	movt	r0, #1
   119d8:	bl	113a4 <gettext@plt>
   119dc:	mov	r3, r0
   119e0:	mov	r2, r3
   119e4:	mov	r1, #0
   119e8:	mov	r0, #1
   119ec:	bl	11314 <error@plt>
   119f0:	push	{fp}		; (str fp, [sp, #-4]!)
   119f4:	add	fp, sp, #0
   119f8:	sub	sp, sp, #12
   119fc:	str	r0, [fp, #-8]
   11a00:	str	r1, [fp, #-12]
   11a04:	ldr	r2, [fp, #-8]
   11a08:	ldr	r3, [fp, #-12]
   11a0c:	cmp	r2, r3
   11a10:	bcs	11a1c <__assert_fail@plt+0x4b0>
   11a14:	ldr	r3, [fp, #-8]
   11a18:	b	11a20 <__assert_fail@plt+0x4b4>
   11a1c:	ldr	r3, [fp, #-12]
   11a20:	mov	r0, r3
   11a24:	add	sp, fp, #0
   11a28:	pop	{fp}		; (ldr fp, [sp], #4)
   11a2c:	bx	lr
   11a30:	str	fp, [sp, #-8]!
   11a34:	str	lr, [sp, #4]
   11a38:	add	fp, sp, #4
   11a3c:	sub	sp, sp, #24
   11a40:	str	r0, [fp, #-24]	; 0xffffffe8
   11a44:	mov	r1, #0
   11a48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a4c:	bl	16ad8 <__assert_fail@plt+0x556c>
   11a50:	str	r0, [fp, #-8]
   11a54:	ldr	r3, [fp, #-8]
   11a58:	cmp	r3, #0
   11a5c:	bge	11a68 <__assert_fail@plt+0x4fc>
   11a60:	mov	r3, #0
   11a64:	b	11abc <__assert_fail@plt+0x550>
   11a68:	movw	r1, #61424	; 0xeff0
   11a6c:	movt	r1, #1
   11a70:	ldr	r0, [fp, #-8]
   11a74:	bl	11194 <fdopen@plt>
   11a78:	str	r0, [fp, #-12]
   11a7c:	ldr	r3, [fp, #-12]
   11a80:	cmp	r3, #0
   11a84:	bne	11ab8 <__assert_fail@plt+0x54c>
   11a88:	bl	113ec <__errno_location@plt>
   11a8c:	mov	r3, r0
   11a90:	ldr	r3, [r3]
   11a94:	str	r3, [fp, #-16]
   11a98:	ldr	r0, [fp, #-8]
   11a9c:	bl	11554 <close@plt>
   11aa0:	bl	113ec <__errno_location@plt>
   11aa4:	mov	r2, r0
   11aa8:	ldr	r3, [fp, #-16]
   11aac:	str	r3, [r2]
   11ab0:	mov	r3, #0
   11ab4:	b	11abc <__assert_fail@plt+0x550>
   11ab8:	ldr	r3, [fp, #-12]
   11abc:	mov	r0, r3
   11ac0:	sub	sp, fp, #4
   11ac4:	ldr	fp, [sp]
   11ac8:	add	sp, sp, #4
   11acc:	pop	{pc}		; (ldr pc, [sp], #4)
   11ad0:	str	fp, [sp, #-8]!
   11ad4:	str	lr, [sp, #4]
   11ad8:	add	fp, sp, #4
   11adc:	sub	sp, sp, #16
   11ae0:	str	r0, [fp, #-8]
   11ae4:	str	r1, [fp, #-12]
   11ae8:	movw	r0, #61428	; 0xeff4
   11aec:	movt	r0, #1
   11af0:	bl	113a4 <gettext@plt>
   11af4:	mov	r2, r0
   11af8:	ldr	r3, [fp, #-12]
   11afc:	str	r3, [sp, #4]
   11b00:	ldr	r3, [fp, #-8]
   11b04:	str	r3, [sp]
   11b08:	ldr	r3, [fp, #-12]
   11b0c:	mov	r1, #0
   11b10:	mov	r0, #0
   11b14:	bl	11314 <error@plt>
   11b18:	nop	{0}
   11b1c:	sub	sp, fp, #4
   11b20:	ldr	fp, [sp]
   11b24:	add	sp, sp, #4
   11b28:	pop	{pc}		; (ldr pc, [sp], #4)
   11b2c:	strd	r4, [sp, #-20]!	; 0xffffffec
   11b30:	str	r6, [sp, #8]
   11b34:	str	fp, [sp, #12]
   11b38:	str	lr, [sp, #16]
   11b3c:	add	fp, sp, #16
   11b40:	sub	sp, sp, #244	; 0xf4
   11b44:	str	r0, [fp, #-232]	; 0xffffff18
   11b48:	str	r1, [fp, #-236]	; 0xffffff14
   11b4c:	mov	r3, #0
   11b50:	str	r3, [fp, #-24]	; 0xffffffe8
   11b54:	mov	r3, #1
   11b58:	str	r3, [fp, #-28]	; 0xffffffe4
   11b5c:	movw	r3, #61508	; 0xf044
   11b60:	movt	r3, #1
   11b64:	str	r3, [fp, #-32]	; 0xffffffe0
   11b68:	movw	r3, #62776	; 0xf538
   11b6c:	movt	r3, #1
   11b70:	sub	r2, fp, #84	; 0x54
   11b74:	ldr	r1, [r3]
   11b78:	str	r1, [r2]
   11b7c:	ldrb	r3, [r3, #4]
   11b80:	strb	r3, [r2, #4]
   11b84:	movw	r3, #12436	; 0x3094
   11b88:	movt	r3, #1
   11b8c:	str	r3, [fp, #-36]	; 0xffffffdc
   11b90:	movw	r3, #6572	; 0x19ac
   11b94:	movt	r3, #1
   11b98:	str	r3, [fp, #-40]	; 0xffffffd8
   11b9c:	ldr	r3, [fp, #-236]	; 0xffffff14
   11ba0:	ldr	r3, [r3]
   11ba4:	cmp	r3, #0
   11ba8:	beq	11bc0 <__assert_fail@plt+0x654>
   11bac:	ldr	r3, [fp, #-236]	; 0xffffff14
   11bb0:	ldr	r3, [r3]
   11bb4:	mov	r0, r3
   11bb8:	bl	18d6c <__assert_fail@plt+0x7800>
   11bbc:	b	11bcc <__assert_fail@plt+0x660>
   11bc0:	movw	r0, #61512	; 0xf048
   11bc4:	movt	r0, #1
   11bc8:	bl	18d6c <__assert_fail@plt+0x7800>
   11bcc:	bl	16854 <__assert_fail@plt+0x52e8>
   11bd0:	bl	1138c <getpid@plt>
   11bd4:	mov	r2, r0
   11bd8:	movw	r3, #8808	; 0x2268
   11bdc:	movt	r3, #3
   11be0:	str	r2, [r3]
   11be4:	movw	r3, #8820	; 0x2274
   11be8:	movt	r3, #3
   11bec:	mov	r2, #0
   11bf0:	str	r2, [r3]
   11bf4:	movw	r1, #61520	; 0xf050
   11bf8:	movt	r1, #1
   11bfc:	mov	r0, #6
   11c00:	bl	11488 <setlocale@plt>
   11c04:	movw	r1, #61524	; 0xf054
   11c08:	movt	r1, #1
   11c0c:	movw	r0, #61548	; 0xf06c
   11c10:	movt	r0, #1
   11c14:	bl	11500 <bindtextdomain@plt>
   11c18:	movw	r0, #61548	; 0xf06c
   11c1c:	movt	r0, #1
   11c20:	bl	11284 <textdomain@plt>
   11c24:	movw	r0, #29508	; 0x7344
   11c28:	movt	r0, #1
   11c2c:	bl	1ebac <__assert_fail@plt+0xd640>
   11c30:	mov	r3, r0
   11c34:	cmp	r3, #0
   11c38:	bne	11c54 <__assert_fail@plt+0x6e8>
   11c3c:	movw	r0, #18904	; 0x49d8
   11c40:	movt	r0, #1
   11c44:	bl	1ebac <__assert_fail@plt+0xd640>
   11c48:	mov	r3, r0
   11c4c:	cmp	r3, #0
   11c50:	beq	11c80 <__assert_fail@plt+0x714>
   11c54:	bl	113ec <__errno_location@plt>
   11c58:	mov	r3, r0
   11c5c:	ldr	r4, [r3]
   11c60:	movw	r0, #61560	; 0xf078
   11c64:	movt	r0, #1
   11c68:	bl	113a4 <gettext@plt>
   11c6c:	mov	r3, r0
   11c70:	mov	r2, r3
   11c74:	mov	r1, r4
   11c78:	mov	r0, #1
   11c7c:	bl	11314 <error@plt>
   11c80:	mov	r1, #2048	; 0x800
   11c84:	movw	r0, #8740	; 0x2224
   11c88:	movt	r0, #3
   11c8c:	bl	15e6c <__assert_fail@plt+0x4900>
   11c90:	str	r0, [fp, #-52]	; 0xffffffcc
   11c94:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11c98:	cmp	r3, #1
   11c9c:	bne	11cb0 <__assert_fail@plt+0x744>
   11ca0:	movw	r3, #6596	; 0x19c4
   11ca4:	movt	r3, #1
   11ca8:	str	r3, [fp, #-40]	; 0xffffffd8
   11cac:	b	12710 <__assert_fail@plt+0x11a4>
   11cb0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11cb4:	cmp	r3, #2
   11cb8:	bne	11ccc <__assert_fail@plt+0x760>
   11cbc:	movw	r3, #6596	; 0x19c4
   11cc0:	movt	r3, #1
   11cc4:	str	r3, [fp, #-40]	; 0xffffffd8
   11cc8:	b	12710 <__assert_fail@plt+0x11a4>
   11ccc:	mov	r0, #0
   11cd0:	bl	11254 <sysconf@plt>
   11cd4:	str	r0, [fp, #-56]	; 0xffffffc8
   11cd8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11cdc:	cmp	r3, #0
   11ce0:	ble	11d40 <__assert_fail@plt+0x7d4>
   11ce4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11ce8:	cmp	r3, #2048	; 0x800
   11cec:	bgt	11d10 <__assert_fail@plt+0x7a4>
   11cf0:	movw	r3, #1312	; 0x520
   11cf4:	movt	r3, #2
   11cf8:	movw	r2, #483	; 0x1e3
   11cfc:	movw	r1, #60868	; 0xedc4
   11d00:	movt	r1, #1
   11d04:	movw	r0, #61596	; 0xf09c
   11d08:	movt	r0, #1
   11d0c:	bl	1156c <__assert_fail@plt>
   11d10:	movw	r3, #8740	; 0x2224
   11d14:	movt	r3, #3
   11d18:	ldr	r2, [r3, #12]
   11d1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11d20:	sub	r3, r3, #2048	; 0x800
   11d24:	mov	r1, r3
   11d28:	mov	r0, r2
   11d2c:	bl	119f0 <__assert_fail@plt+0x484>
   11d30:	mov	r2, r0
   11d34:	movw	r3, #8740	; 0x2224
   11d38:	movt	r3, #3
   11d3c:	str	r2, [r3, #12]
   11d40:	movw	r3, #8740	; 0x2224
   11d44:	movt	r3, #3
   11d48:	ldr	r3, [r3, #12]
   11d4c:	cmp	r3, #2048	; 0x800
   11d50:	bcs	11d74 <__assert_fail@plt+0x808>
   11d54:	movw	r3, #1312	; 0x520
   11d58:	movt	r3, #2
   11d5c:	movw	r2, #511	; 0x1ff
   11d60:	movw	r1, #60868	; 0xedc4
   11d64:	movt	r1, #1
   11d68:	movw	r0, #61624	; 0xf0b8
   11d6c:	movt	r0, #1
   11d70:	bl	1156c <__assert_fail@plt>
   11d74:	movw	r3, #8740	; 0x2224
   11d78:	movt	r3, #3
   11d7c:	movw	r2, #16424	; 0x4028
   11d80:	movt	r2, #1
   11d84:	str	r2, [r3, #32]
   11d88:	movw	r0, #8740	; 0x2224
   11d8c:	movt	r0, #3
   11d90:	bl	15fe0 <__assert_fail@plt+0x4a74>
   11d94:	b	12710 <__assert_fail@plt+0x11a4>
   11d98:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11d9c:	sub	r3, r3, #48	; 0x30
   11da0:	cmp	r3, #208	; 0xd0
   11da4:	ldrls	pc, [pc, r3, lsl #2]
   11da8:	b	12708 <__assert_fail@plt+0x119c>
   11dac:	strdeq	r2, [r1], -r0
   11db0:	andeq	r2, r1, r8, lsl #14
   11db4:	andeq	r2, r1, r8, lsl #14
   11db8:	andeq	r2, r1, r8, lsl #14
   11dbc:	andeq	r2, r1, r8, lsl #14
   11dc0:	andeq	r2, r1, r8, lsl #14
   11dc4:	andeq	r2, r1, r8, lsl #14
   11dc8:	andeq	r2, r1, r8, lsl #14
   11dcc:	andeq	r2, r1, r8, lsl #14
   11dd0:	andeq	r2, r1, r8, lsl #14
   11dd4:	andeq	r2, r1, r8, lsl #14
   11dd8:	andeq	r2, r1, r8, lsl #14
   11ddc:	andeq	r2, r1, r8, lsl #14
   11de0:	andeq	r2, r1, r8, lsl #14
   11de4:	andeq	r2, r1, r8, lsl #14
   11de8:	andeq	r2, r1, r8, lsl #14
   11dec:	andeq	r2, r1, r8, lsl #14
   11df0:	andeq	r2, r1, r8, lsl #14
   11df4:	andeq	r2, r1, r8, lsl #14
   11df8:	andeq	r2, r1, r8, lsl #14
   11dfc:	andeq	r2, r1, r8, lsl #14
   11e00:	andeq	r2, r1, r8, asr #2
   11e04:	andeq	r2, r1, r8, lsl #14
   11e08:	andeq	r2, r1, r8, lsl #14
   11e0c:	andeq	r2, r1, r8, lsl #14
   11e10:	andeq	r2, r1, ip, lsr #3
   11e14:	andeq	r2, r1, r8, lsl #14
   11e18:	andeq	r2, r1, r8, lsl #14
   11e1c:	andeq	r2, r1, r4, ror #4
   11e20:	andeq	r2, r1, r8, lsl #14
   11e24:	andeq	r2, r1, r8, lsl #14
   11e28:	andeq	r2, r1, r8, lsl #14
   11e2c:	andeq	r2, r1, r8, ror #11
   11e30:	andeq	r2, r1, r8, lsl #14
   11e34:	andeq	r2, r1, r8, lsl #14
   11e38:	andeq	r2, r1, r0, ror r5
   11e3c:	andeq	r2, r1, r8, lsl #14
   11e40:	andeq	r2, r1, r8, lsl #14
   11e44:	andeq	r2, r1, r8, lsl #14
   11e48:	andeq	r2, r1, r8, lsl #14
   11e4c:	andeq	r2, r1, r8, lsl #14
   11e50:	andeq	r2, r1, r8, lsl #14
   11e54:	andeq	r2, r1, r8, lsl #14
   11e58:	andeq	r2, r1, r8, lsl #14
   11e5c:	andeq	r2, r1, r8, lsl #14
   11e60:	andeq	r2, r1, r8, lsl #14
   11e64:	andeq	r2, r1, r8, lsl #14
   11e68:	andeq	r2, r1, r8, lsl #14
   11e6c:	andeq	r2, r1, r8, lsl #14
   11e70:	andeq	r2, r1, r0, lsr #12
   11e74:	andeq	r2, r1, r8, lsl #14
   11e78:	andeq	r2, r1, r8, lsl #14
   11e7c:	andeq	r2, r1, r0, lsl r1
   11e80:	andeq	r2, r1, r8, asr #2
   11e84:	andeq	r2, r1, r8, lsl #14
   11e88:	andeq	r2, r1, r8, lsl #14
   11e8c:	andeq	r2, r1, r4, lsr #3
   11e90:	andeq	r2, r1, ip, lsr #3
   11e94:	andeq	r2, r1, r8, lsl #14
   11e98:	andeq	r2, r1, r8, lsl #14
   11e9c:	andeq	r2, r1, r0, lsl r3
   11ea0:	andeq	r2, r1, r8, lsl #14
   11ea4:	andeq	r2, r1, r4, ror #7
   11ea8:	andeq	r2, r1, r4, lsr #11
   11eac:			; <UNDEFINED> instruction: 0x000125b8
   11eb0:	andeq	r2, r1, r8, lsl #14
   11eb4:	ldrdeq	r2, [r1], -ip
   11eb8:			; <UNDEFINED> instruction: 0x000124b8
   11ebc:	andeq	r2, r1, ip, ror r5
   11ec0:	andeq	r2, r1, r8, lsl #14
   11ec4:	andeq	r2, r1, r4, lsr r6
   11ec8:	andeq	r2, r1, r8, lsl #14
   11ecc:	muleq	r1, r0, r5
   11ed0:	andeq	r2, r1, r8, lsl #14
   11ed4:	andeq	r2, r1, r8, lsl #14
   11ed8:	andeq	r2, r1, r8, lsl #14
   11edc:	andeq	r2, r1, r8, lsl #14
   11ee0:	andeq	r2, r1, r8, lsl #14
   11ee4:	andeq	r2, r1, r8, lsl #14
   11ee8:	andeq	r2, r1, r8, lsl #14
   11eec:	andeq	r2, r1, r8, lsl #14
   11ef0:	andeq	r2, r1, r8, lsl #14
   11ef4:	andeq	r2, r1, r8, lsl #14
   11ef8:	andeq	r2, r1, r8, lsl #14
   11efc:	andeq	r2, r1, r8, lsl #14
   11f00:	andeq	r2, r1, r8, lsl #14
   11f04:	andeq	r2, r1, r8, lsl #14
   11f08:	andeq	r2, r1, r8, lsl #14
   11f0c:	andeq	r2, r1, r8, lsl #14
   11f10:	andeq	r2, r1, r8, lsl #14
   11f14:	andeq	r2, r1, r8, lsl #14
   11f18:	andeq	r2, r1, r8, lsl #14
   11f1c:	andeq	r2, r1, r8, lsl #14
   11f20:	andeq	r2, r1, r8, lsl #14
   11f24:	andeq	r2, r1, r8, lsl #14
   11f28:	andeq	r2, r1, r8, lsl #14
   11f2c:	andeq	r2, r1, r8, lsl #14
   11f30:	andeq	r2, r1, r8, lsl #14
   11f34:	andeq	r2, r1, r8, lsl #14
   11f38:	andeq	r2, r1, r8, lsl #14
   11f3c:	andeq	r2, r1, r8, lsl #14
   11f40:	andeq	r2, r1, r8, lsl #14
   11f44:	andeq	r2, r1, r8, lsl #14
   11f48:	andeq	r2, r1, r8, lsl #14
   11f4c:	andeq	r2, r1, r8, lsl #14
   11f50:	andeq	r2, r1, r8, lsl #14
   11f54:	andeq	r2, r1, r8, lsl #14
   11f58:	andeq	r2, r1, r8, lsl #14
   11f5c:	andeq	r2, r1, r8, lsl #14
   11f60:	andeq	r2, r1, r8, lsl #14
   11f64:	andeq	r2, r1, r8, lsl #14
   11f68:	andeq	r2, r1, r8, lsl #14
   11f6c:	andeq	r2, r1, r8, lsl #14
   11f70:	andeq	r2, r1, r8, lsl #14
   11f74:	andeq	r2, r1, r8, lsl #14
   11f78:	andeq	r2, r1, r8, lsl #14
   11f7c:	andeq	r2, r1, r8, lsl #14
   11f80:	andeq	r2, r1, r8, lsl #14
   11f84:	andeq	r2, r1, r8, lsl #14
   11f88:	andeq	r2, r1, r8, lsl #14
   11f8c:	andeq	r2, r1, r8, lsl #14
   11f90:	andeq	r2, r1, r8, lsl #14
   11f94:	andeq	r2, r1, r8, lsl #14
   11f98:	andeq	r2, r1, r8, lsl #14
   11f9c:	andeq	r2, r1, r8, lsl #14
   11fa0:	andeq	r2, r1, r8, lsl #14
   11fa4:	andeq	r2, r1, r8, lsl #14
   11fa8:	andeq	r2, r1, r8, lsl #14
   11fac:	andeq	r2, r1, r8, lsl #14
   11fb0:	andeq	r2, r1, r8, lsl #14
   11fb4:	andeq	r2, r1, r8, lsl #14
   11fb8:	andeq	r2, r1, r8, lsl #14
   11fbc:	andeq	r2, r1, r8, lsl #14
   11fc0:	andeq	r2, r1, r8, lsl #14
   11fc4:	andeq	r2, r1, r8, lsl #14
   11fc8:	andeq	r2, r1, r8, lsl #14
   11fcc:	andeq	r2, r1, r8, lsl #14
   11fd0:	andeq	r2, r1, r8, lsl #14
   11fd4:	andeq	r2, r1, r8, lsl #14
   11fd8:	andeq	r2, r1, r8, lsl #14
   11fdc:	andeq	r2, r1, r8, lsl #14
   11fe0:	andeq	r2, r1, r8, lsl #14
   11fe4:	andeq	r2, r1, r8, lsl #14
   11fe8:	andeq	r2, r1, r8, lsl #14
   11fec:	andeq	r2, r1, r8, lsl #14
   11ff0:	andeq	r2, r1, r8, lsl #14
   11ff4:	andeq	r2, r1, r8, lsl #14
   11ff8:	andeq	r2, r1, r8, lsl #14
   11ffc:	andeq	r2, r1, r8, lsl #14
   12000:	andeq	r2, r1, r8, lsl #14
   12004:	andeq	r2, r1, r8, lsl #14
   12008:	andeq	r2, r1, r8, lsl #14
   1200c:	andeq	r2, r1, r8, lsl #14
   12010:	andeq	r2, r1, r8, lsl #14
   12014:	andeq	r2, r1, r8, lsl #14
   12018:	andeq	r2, r1, r8, lsl #14
   1201c:	andeq	r2, r1, r8, lsl #14
   12020:	andeq	r2, r1, r8, lsl #14
   12024:	andeq	r2, r1, r8, lsl #14
   12028:	andeq	r2, r1, r8, lsl #14
   1202c:	andeq	r2, r1, r8, lsl #14
   12030:	andeq	r2, r1, r8, lsl #14
   12034:	andeq	r2, r1, r8, lsl #14
   12038:	andeq	r2, r1, r8, lsl #14
   1203c:	andeq	r2, r1, r8, lsl #14
   12040:	andeq	r2, r1, r8, lsl #14
   12044:	andeq	r2, r1, r8, lsl #14
   12048:	andeq	r2, r1, r8, lsl #14
   1204c:	andeq	r2, r1, r8, lsl #14
   12050:	andeq	r2, r1, r8, lsl #14
   12054:	andeq	r2, r1, r8, lsl #14
   12058:	andeq	r2, r1, r8, lsl #14
   1205c:	andeq	r2, r1, r8, lsl #14
   12060:	andeq	r2, r1, r8, lsl #14
   12064:	andeq	r2, r1, r8, lsl #14
   12068:	andeq	r2, r1, r8, lsl #14
   1206c:	andeq	r2, r1, r8, lsl #14
   12070:	andeq	r2, r1, r8, lsl #14
   12074:	andeq	r2, r1, r8, lsl #14
   12078:	andeq	r2, r1, r8, lsl #14
   1207c:	andeq	r2, r1, r8, lsl #14
   12080:	andeq	r2, r1, r8, lsl #14
   12084:	andeq	r2, r1, r8, lsl #14
   12088:	andeq	r2, r1, r8, lsl #14
   1208c:	andeq	r2, r1, r8, lsl #14
   12090:	andeq	r2, r1, r8, lsl #14
   12094:	andeq	r2, r1, r8, lsl #14
   12098:	andeq	r2, r1, r8, lsl #14
   1209c:	andeq	r2, r1, r8, lsl #14
   120a0:	andeq	r2, r1, r8, lsl #14
   120a4:	andeq	r2, r1, r8, lsl #14
   120a8:	andeq	r2, r1, r8, lsl #14
   120ac:	andeq	r2, r1, r8, lsl #14
   120b0:	andeq	r2, r1, r8, lsl #14
   120b4:	andeq	r2, r1, r8, lsl #14
   120b8:	andeq	r2, r1, r8, lsl #14
   120bc:	andeq	r2, r1, r8, lsl #14
   120c0:	andeq	r2, r1, r8, lsl #14
   120c4:	andeq	r2, r1, r8, lsl #14
   120c8:	andeq	r2, r1, r8, lsl #14
   120cc:	andeq	r2, r1, r8, lsl #14
   120d0:	andeq	r2, r1, r8, lsl #14
   120d4:	andeq	r2, r1, r8, lsl #14
   120d8:	andeq	r2, r1, r8, lsl #14
   120dc:	andeq	r2, r1, r8, lsl #14
   120e0:	andeq	r2, r1, r8, lsl #14
   120e4:	andeq	r2, r1, r8, lsl #14
   120e8:	andeq	r2, r1, r8, lsl #14
   120ec:	andeq	r2, r1, r8, asr #12
   120f0:	movw	r3, #14436	; 0x3864
   120f4:	movt	r3, #1
   120f8:	str	r3, [fp, #-36]	; 0xffffffdc
   120fc:	movw	r3, #8827	; 0x227b
   12100:	movt	r3, #3
   12104:	mov	r2, #0
   12108:	strb	r2, [r3]
   1210c:	b	12710 <__assert_fail@plt+0x11a4>
   12110:	movw	r3, #14436	; 0x3864
   12114:	movt	r3, #1
   12118:	str	r3, [fp, #-36]	; 0xffffffdc
   1211c:	movw	r3, #8672	; 0x21e0
   12120:	movt	r3, #3
   12124:	ldr	r3, [r3]
   12128:	mov	r0, r3
   1212c:	bl	1185c <__assert_fail@plt+0x2f0>
   12130:	mov	r3, r0
   12134:	mov	r2, r3
   12138:	movw	r3, #8827	; 0x227b
   1213c:	movt	r3, #3
   12140:	strb	r2, [r3]
   12144:	b	12710 <__assert_fail@plt+0x11a4>
   12148:	movw	r3, #8672	; 0x21e0
   1214c:	movt	r3, #3
   12150:	ldr	r3, [r3]
   12154:	cmp	r3, #0
   12158:	beq	12190 <__assert_fail@plt+0xc24>
   1215c:	movw	r3, #8672	; 0x21e0
   12160:	movt	r3, #3
   12164:	ldr	r3, [r3]
   12168:	ldrb	r3, [r3]
   1216c:	cmp	r3, #0
   12170:	beq	12190 <__assert_fail@plt+0xc24>
   12174:	movw	r3, #8672	; 0x21e0
   12178:	movt	r3, #3
   1217c:	ldr	r2, [r3]
   12180:	movw	r3, #8788	; 0x2254
   12184:	movt	r3, #3
   12188:	str	r2, [r3]
   1218c:	b	121a0 <__assert_fail@plt+0xc34>
   12190:	movw	r3, #8788	; 0x2254
   12194:	movt	r3, #3
   12198:	mov	r2, #0
   1219c:	str	r2, [r3]
   121a0:	b	12710 <__assert_fail@plt+0x11a4>
   121a4:	mov	r0, #0
   121a8:	bl	14d04 <__assert_fail@plt+0x3798>
   121ac:	movw	r3, #8672	; 0x21e0
   121b0:	movt	r3, #3
   121b4:	ldr	r3, [r3]
   121b8:	cmp	r3, #0
   121bc:	beq	121dc <__assert_fail@plt+0xc70>
   121c0:	movw	r3, #8672	; 0x21e0
   121c4:	movt	r3, #3
   121c8:	ldr	r2, [r3]
   121cc:	movw	r3, #8740	; 0x2224
   121d0:	movt	r3, #3
   121d4:	str	r2, [r3, #24]
   121d8:	b	121f0 <__assert_fail@plt+0xc84>
   121dc:	movw	r3, #8740	; 0x2224
   121e0:	movt	r3, #3
   121e4:	movw	r2, #61652	; 0xf0d4
   121e8:	movt	r2, #1
   121ec:	str	r2, [r3, #24]
   121f0:	movw	r3, #8740	; 0x2224
   121f4:	movt	r3, #3
   121f8:	ldr	r3, [r3, #40]	; 0x28
   121fc:	cmp	r3, #0
   12200:	beq	12228 <__assert_fail@plt+0xcbc>
   12204:	movw	r1, #61656	; 0xf0d8
   12208:	movt	r1, #1
   1220c:	movw	r0, #61668	; 0xf0e4
   12210:	movt	r0, #1
   12214:	bl	11ad0 <__assert_fail@plt+0x564>
   12218:	movw	r3, #8740	; 0x2224
   1221c:	movt	r3, #3
   12220:	mov	r2, #0
   12224:	str	r2, [r3, #40]	; 0x28
   12228:	movw	r3, #8740	; 0x2224
   1222c:	movt	r3, #3
   12230:	ldr	r3, [r3, #36]	; 0x24
   12234:	cmp	r3, #0
   12238:	beq	12710 <__assert_fail@plt+0x11a4>
   1223c:	movw	r1, #61684	; 0xf0f4
   12240:	movt	r1, #1
   12244:	movw	r0, #61668	; 0xf0e4
   12248:	movt	r0, #1
   1224c:	bl	11ad0 <__assert_fail@plt+0x564>
   12250:	movw	r3, #8740	; 0x2224
   12254:	movt	r3, #3
   12258:	mov	r2, #0
   1225c:	str	r2, [r3, #36]	; 0x24
   12260:	b	12710 <__assert_fail@plt+0x11a4>
   12264:	movw	r3, #8672	; 0x21e0
   12268:	movt	r3, #3
   1226c:	ldr	r0, [r3]
   12270:	mov	r3, #1
   12274:	str	r3, [sp]
   12278:	mvn	r3, #0
   1227c:	mov	r2, #1
   12280:	mov	r1, #76	; 0x4c
   12284:	bl	14b58 <__assert_fail@plt+0x35ec>
   12288:	mov	r3, r0
   1228c:	mov	r2, r3
   12290:	movw	r3, #8740	; 0x2224
   12294:	movt	r3, #3
   12298:	str	r2, [r3, #36]	; 0x24
   1229c:	movw	r3, #8740	; 0x2224
   122a0:	movt	r3, #3
   122a4:	ldr	r3, [r3, #40]	; 0x28
   122a8:	cmp	r3, #0
   122ac:	beq	122d4 <__assert_fail@plt+0xd68>
   122b0:	movw	r1, #61656	; 0xf0d8
   122b4:	movt	r1, #1
   122b8:	movw	r0, #61696	; 0xf100
   122bc:	movt	r0, #1
   122c0:	bl	11ad0 <__assert_fail@plt+0x564>
   122c4:	movw	r3, #8740	; 0x2224
   122c8:	movt	r3, #3
   122cc:	mov	r2, #0
   122d0:	str	r2, [r3, #40]	; 0x28
   122d4:	movw	r3, #8740	; 0x2224
   122d8:	movt	r3, #3
   122dc:	ldr	r3, [r3, #24]
   122e0:	cmp	r3, #0
   122e4:	beq	12710 <__assert_fail@plt+0x11a4>
   122e8:	movw	r1, #61700	; 0xf104
   122ec:	movt	r1, #1
   122f0:	movw	r0, #61696	; 0xf100
   122f4:	movt	r0, #1
   122f8:	bl	11ad0 <__assert_fail@plt+0x564>
   122fc:	movw	r3, #8740	; 0x2224
   12300:	movt	r3, #3
   12304:	mov	r2, #0
   12308:	str	r2, [r3, #24]
   1230c:	b	12710 <__assert_fail@plt+0x11a4>
   12310:	movw	r3, #8672	; 0x21e0
   12314:	movt	r3, #3
   12318:	ldr	r3, [r3]
   1231c:	cmp	r3, #0
   12320:	beq	12360 <__assert_fail@plt+0xdf4>
   12324:	movw	r3, #8672	; 0x21e0
   12328:	movt	r3, #3
   1232c:	ldr	r0, [r3]
   12330:	mov	r3, #1
   12334:	str	r3, [sp]
   12338:	mvn	r3, #0
   1233c:	mov	r2, #1
   12340:	mov	r1, #108	; 0x6c
   12344:	bl	14b58 <__assert_fail@plt+0x35ec>
   12348:	mov	r3, r0
   1234c:	mov	r2, r3
   12350:	movw	r3, #8740	; 0x2224
   12354:	movt	r3, #3
   12358:	str	r2, [r3, #36]	; 0x24
   1235c:	b	12370 <__assert_fail@plt+0xe04>
   12360:	movw	r3, #8740	; 0x2224
   12364:	movt	r3, #3
   12368:	mov	r2, #1
   1236c:	str	r2, [r3, #36]	; 0x24
   12370:	movw	r3, #8740	; 0x2224
   12374:	movt	r3, #3
   12378:	ldr	r3, [r3, #40]	; 0x28
   1237c:	cmp	r3, #0
   12380:	beq	123a8 <__assert_fail@plt+0xe3c>
   12384:	movw	r1, #61656	; 0xf0d8
   12388:	movt	r1, #1
   1238c:	movw	r0, #61712	; 0xf110
   12390:	movt	r0, #1
   12394:	bl	11ad0 <__assert_fail@plt+0x564>
   12398:	movw	r3, #8740	; 0x2224
   1239c:	movt	r3, #3
   123a0:	mov	r2, #0
   123a4:	str	r2, [r3, #40]	; 0x28
   123a8:	movw	r3, #8740	; 0x2224
   123ac:	movt	r3, #3
   123b0:	ldr	r3, [r3, #24]
   123b4:	cmp	r3, #0
   123b8:	beq	12710 <__assert_fail@plt+0x11a4>
   123bc:	movw	r1, #61700	; 0xf104
   123c0:	movt	r1, #1
   123c4:	movw	r0, #61712	; 0xf110
   123c8:	movt	r0, #1
   123cc:	bl	11ad0 <__assert_fail@plt+0x564>
   123d0:	movw	r3, #8740	; 0x2224
   123d4:	movt	r3, #3
   123d8:	mov	r2, #0
   123dc:	str	r2, [r3, #24]
   123e0:	b	12710 <__assert_fail@plt+0x11a4>
   123e4:	movw	r3, #8672	; 0x21e0
   123e8:	movt	r3, #3
   123ec:	ldr	r0, [r3]
   123f0:	mov	r3, #1
   123f4:	str	r3, [sp]
   123f8:	mvn	r3, #0
   123fc:	mov	r2, #1
   12400:	mov	r1, #110	; 0x6e
   12404:	bl	14b58 <__assert_fail@plt+0x35ec>
   12408:	mov	r3, r0
   1240c:	mov	r2, r3
   12410:	movw	r3, #8740	; 0x2224
   12414:	movt	r3, #3
   12418:	str	r2, [r3, #40]	; 0x28
   1241c:	movw	r3, #8740	; 0x2224
   12420:	movt	r3, #3
   12424:	ldr	r3, [r3, #36]	; 0x24
   12428:	cmp	r3, #0
   1242c:	beq	12454 <__assert_fail@plt+0xee8>
   12430:	movw	r1, #61684	; 0xf0f4
   12434:	movt	r1, #1
   12438:	movw	r0, #61728	; 0xf120
   1243c:	movt	r0, #1
   12440:	bl	11ad0 <__assert_fail@plt+0x564>
   12444:	movw	r3, #8740	; 0x2224
   12448:	movt	r3, #3
   1244c:	mov	r2, #0
   12450:	str	r2, [r3, #36]	; 0x24
   12454:	movw	r3, #8740	; 0x2224
   12458:	movt	r3, #3
   1245c:	ldr	r3, [r3, #24]
   12460:	cmp	r3, #0
   12464:	beq	12710 <__assert_fail@plt+0x11a4>
   12468:	movw	r3, #8740	; 0x2224
   1246c:	movt	r3, #3
   12470:	ldr	r3, [r3, #40]	; 0x28
   12474:	cmp	r3, #1
   12478:	bne	12490 <__assert_fail@plt+0xf24>
   1247c:	movw	r3, #8740	; 0x2224
   12480:	movt	r3, #3
   12484:	mov	r2, #0
   12488:	str	r2, [r3, #40]	; 0x28
   1248c:	b	12710 <__assert_fail@plt+0x11a4>
   12490:	movw	r1, #61700	; 0xf104
   12494:	movt	r1, #1
   12498:	movw	r0, #61728	; 0xf120
   1249c:	movt	r0, #1
   124a0:	bl	11ad0 <__assert_fail@plt+0x564>
   124a4:	movw	r3, #8740	; 0x2224
   124a8:	movt	r3, #3
   124ac:	mov	r2, #0
   124b0:	str	r2, [r3, #24]
   124b4:	b	12710 <__assert_fail@plt+0x11a4>
   124b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   124bc:	blx	r3
   124c0:	movw	r3, #8672	; 0x21e0
   124c4:	movt	r3, #3
   124c8:	ldr	r0, [r3]
   124cc:	movw	r3, #8740	; 0x2224
   124d0:	movt	r3, #3
   124d4:	ldr	r3, [r3, #4]
   124d8:	mov	r2, r3
   124dc:	mov	r3, #0
   124e0:	str	r3, [sp]
   124e4:	mov	r3, r2
   124e8:	mov	r2, #1
   124ec:	mov	r1, #115	; 0x73
   124f0:	bl	14b58 <__assert_fail@plt+0x35ec>
   124f4:	mov	r3, r0
   124f8:	str	r3, [fp, #-44]	; 0xffffffd4
   124fc:	movw	r3, #8740	; 0x2224
   12500:	movt	r3, #3
   12504:	ldr	r3, [r3, #4]
   12508:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1250c:	cmp	r2, r3
   12510:	bls	1255c <__assert_fail@plt+0xff0>
   12514:	movw	r0, #61744	; 0xf130
   12518:	movt	r0, #1
   1251c:	bl	113a4 <gettext@plt>
   12520:	mov	r1, r0
   12524:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12528:	movw	r3, #8740	; 0x2224
   1252c:	movt	r3, #3
   12530:	ldr	r3, [r3, #4]
   12534:	str	r3, [sp]
   12538:	mov	r3, r2
   1253c:	mov	r2, r1
   12540:	mov	r1, #0
   12544:	mov	r0, #0
   12548:	bl	11314 <error@plt>
   1254c:	movw	r3, #8740	; 0x2224
   12550:	movt	r3, #3
   12554:	ldr	r3, [r3, #4]
   12558:	str	r3, [fp, #-44]	; 0xffffffd4
   1255c:	movw	r3, #8740	; 0x2224
   12560:	movt	r3, #3
   12564:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12568:	str	r2, [r3, #12]
   1256c:	b	12710 <__assert_fail@plt+0x11a4>
   12570:	mov	r3, #1
   12574:	str	r3, [fp, #-24]	; 0xffffffe8
   12578:	b	12710 <__assert_fail@plt+0x11a4>
   1257c:	movw	r3, #8825	; 0x2279
   12580:	movt	r3, #3
   12584:	mov	r2, #1
   12588:	strb	r2, [r3]
   1258c:	b	12710 <__assert_fail@plt+0x11a4>
   12590:	movw	r3, #8740	; 0x2224
   12594:	movt	r3, #3
   12598:	mov	r2, #1
   1259c:	str	r2, [r3]
   125a0:	b	12710 <__assert_fail@plt+0x11a4>
   125a4:	movw	r3, #8824	; 0x2278
   125a8:	movt	r3, #3
   125ac:	mov	r2, #1
   125b0:	strb	r2, [r3]
   125b4:	b	12710 <__assert_fail@plt+0x11a4>
   125b8:	movw	r3, #8826	; 0x227a
   125bc:	movt	r3, #3
   125c0:	mov	r2, #1
   125c4:	strb	r2, [r3]
   125c8:	movw	r3, #8825	; 0x2279
   125cc:	movt	r3, #3
   125d0:	mov	r2, #1
   125d4:	strb	r2, [r3]
   125d8:	b	12710 <__assert_fail@plt+0x11a4>
   125dc:	mov	r3, #0
   125e0:	str	r3, [fp, #-28]	; 0xffffffe4
   125e4:	b	12710 <__assert_fail@plt+0x11a4>
   125e8:	movw	r3, #8672	; 0x21e0
   125ec:	movt	r3, #3
   125f0:	ldr	r0, [r3]
   125f4:	mov	r3, #1
   125f8:	str	r3, [sp]
   125fc:	mvn	r3, #-2147483648	; 0x80000000
   12600:	mov	r2, #0
   12604:	mov	r1, #80	; 0x50
   12608:	bl	14b58 <__assert_fail@plt+0x35ec>
   1260c:	mov	r2, r0
   12610:	movw	r3, #8552	; 0x2168
   12614:	movt	r3, #3
   12618:	str	r2, [r3]
   1261c:	b	12710 <__assert_fail@plt+0x11a4>
   12620:	movw	r3, #8672	; 0x21e0
   12624:	movt	r3, #3
   12628:	ldr	r3, [r3]
   1262c:	str	r3, [fp, #-32]	; 0xffffffe0
   12630:	b	12710 <__assert_fail@plt+0x11a4>
   12634:	movw	r0, #61512	; 0xf048
   12638:	movt	r0, #1
   1263c:	bl	16d24 <__assert_fail@plt+0x57b8>
   12640:	mov	r3, #0
   12644:	b	13078 <__assert_fail@plt+0x1b0c>
   12648:	movw	r3, #8672	; 0x21e0
   1264c:	movt	r3, #3
   12650:	ldr	r3, [r3]
   12654:	mov	r1, #61	; 0x3d
   12658:	mov	r0, r3
   1265c:	bl	113c8 <strchr@plt>
   12660:	mov	r3, r0
   12664:	cmp	r3, #0
   12668:	beq	1269c <__assert_fail@plt+0x1130>
   1266c:	movw	r0, #61812	; 0xf174
   12670:	movt	r0, #1
   12674:	bl	113a4 <gettext@plt>
   12678:	mov	r1, r0
   1267c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12680:	movw	r3, #60564	; 0xec94
   12684:	movt	r3, #1
   12688:	ldr	r3, [r3, r2, lsl #4]
   1268c:	mov	r2, r1
   12690:	mov	r1, #0
   12694:	mov	r0, #1
   12698:	bl	11314 <error@plt>
   1269c:	movw	r3, #8672	; 0x21e0
   126a0:	movt	r3, #3
   126a4:	ldr	r2, [r3]
   126a8:	movw	r3, #8828	; 0x227c
   126ac:	movt	r3, #3
   126b0:	str	r2, [r3]
   126b4:	movw	r3, #8828	; 0x227c
   126b8:	movt	r3, #3
   126bc:	ldr	r3, [r3]
   126c0:	mov	r0, r3
   126c4:	bl	11518 <unsetenv@plt>
   126c8:	mov	r3, r0
   126cc:	cmp	r3, #0
   126d0:	beq	12710 <__assert_fail@plt+0x11a4>
   126d4:	bl	113ec <__errno_location@plt>
   126d8:	mov	r3, r0
   126dc:	ldr	r4, [r3]
   126e0:	movw	r0, #61872	; 0xf1b0
   126e4:	movt	r0, #1
   126e8:	bl	113a4 <gettext@plt>
   126ec:	mov	r2, r0
   126f0:	movw	r3, #8828	; 0x227c
   126f4:	movt	r3, #3
   126f8:	ldr	r3, [r3]
   126fc:	mov	r1, r4
   12700:	mov	r0, #1
   12704:	bl	11314 <error@plt>
   12708:	mov	r0, #1
   1270c:	bl	14d04 <__assert_fail@plt+0x3798>
   12710:	sub	r3, fp, #76	; 0x4c
   12714:	str	r3, [sp]
   12718:	movw	r3, #60564	; 0xec94
   1271c:	movt	r3, #1
   12720:	movw	r2, #61912	; 0xf1d8
   12724:	movt	r2, #1
   12728:	ldr	r1, [fp, #-236]	; 0xffffff14
   1272c:	ldr	r0, [fp, #-232]	; 0xffffff18
   12730:	bl	11374 <getopt_long@plt>
   12734:	str	r0, [fp, #-60]	; 0xffffffc4
   12738:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1273c:	cmn	r3, #1
   12740:	bne	11d98 <__assert_fail@plt+0x82c>
   12744:	movw	r3, #8788	; 0x2254
   12748:	movt	r3, #3
   1274c:	ldr	r3, [r3]
   12750:	cmp	r3, #0
   12754:	beq	1278c <__assert_fail@plt+0x1220>
   12758:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1275c:	movw	r3, #14436	; 0x3864
   12760:	movt	r3, #1
   12764:	cmp	r2, r3
   12768:	bne	1278c <__assert_fail@plt+0x1220>
   1276c:	movw	r0, #61948	; 0xf1fc
   12770:	movt	r0, #1
   12774:	bl	113a4 <gettext@plt>
   12778:	mov	r3, r0
   1277c:	mov	r2, r3
   12780:	mov	r1, #0
   12784:	mov	r0, #0
   12788:	bl	11314 <error@plt>
   1278c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12790:	blx	r3
   12794:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12798:	cmp	r3, #0
   1279c:	beq	127c0 <__assert_fail@plt+0x1254>
   127a0:	movw	r3, #1312	; 0x520
   127a4:	movt	r3, #2
   127a8:	movw	r2, #723	; 0x2d3
   127ac:	movw	r1, #60868	; 0xedc4
   127b0:	movt	r1, #1
   127b4:	movw	r0, #62008	; 0xf238
   127b8:	movt	r0, #1
   127bc:	bl	1156c <__assert_fail@plt>
   127c0:	movw	r3, #19112	; 0x4aa8
   127c4:	movt	r3, #1
   127c8:	str	r3, [fp, #-228]	; 0xffffff1c
   127cc:	sub	r3, fp, #228	; 0xe4
   127d0:	add	r3, r3, #4
   127d4:	mov	r0, r3
   127d8:	bl	11494 <sigemptyset@plt>
   127dc:	mov	r3, #0
   127e0:	str	r3, [fp, #-96]	; 0xffffffa0
   127e4:	sub	r3, fp, #228	; 0xe4
   127e8:	mov	r2, #0
   127ec:	mov	r1, r3
   127f0:	mov	r0, #10
   127f4:	bl	112b4 <sigaction@plt>
   127f8:	mov	r3, r0
   127fc:	cmp	r3, #0
   12800:	beq	12830 <__assert_fail@plt+0x12c4>
   12804:	bl	113ec <__errno_location@plt>
   12808:	mov	r3, r0
   1280c:	ldr	r4, [r3]
   12810:	movw	r0, #62032	; 0xf250
   12814:	movt	r0, #1
   12818:	bl	113a4 <gettext@plt>
   1281c:	mov	r3, r0
   12820:	mov	r2, r3
   12824:	mov	r1, r4
   12828:	mov	r0, #0
   1282c:	bl	11314 <error@plt>
   12830:	movw	r3, #19208	; 0x4b08
   12834:	movt	r3, #1
   12838:	str	r3, [fp, #-228]	; 0xffffff1c
   1283c:	sub	r3, fp, #228	; 0xe4
   12840:	add	r3, r3, #4
   12844:	mov	r0, r3
   12848:	bl	11494 <sigemptyset@plt>
   1284c:	mov	r3, #0
   12850:	str	r3, [fp, #-96]	; 0xffffffa0
   12854:	sub	r3, fp, #228	; 0xe4
   12858:	mov	r2, #0
   1285c:	mov	r1, r3
   12860:	mov	r0, #12
   12864:	bl	112b4 <sigaction@plt>
   12868:	mov	r3, r0
   1286c:	cmp	r3, #0
   12870:	beq	128a0 <__assert_fail@plt+0x1334>
   12874:	bl	113ec <__errno_location@plt>
   12878:	mov	r3, r0
   1287c:	ldr	r4, [r3]
   12880:	movw	r0, #62068	; 0xf274
   12884:	movt	r0, #1
   12888:	bl	113a4 <gettext@plt>
   1288c:	mov	r3, r0
   12890:	mov	r2, r3
   12894:	mov	r1, r4
   12898:	mov	r0, #0
   1289c:	bl	11314 <error@plt>
   128a0:	movw	r1, #61508	; 0xf044
   128a4:	movt	r1, #1
   128a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   128ac:	bl	111ac <strcmp@plt>
   128b0:	mov	r3, r0
   128b4:	cmp	r3, #0
   128b8:	bne	128d8 <__assert_fail@plt+0x136c>
   128bc:	movw	r3, #8664	; 0x21d8
   128c0:	movt	r3, #3
   128c4:	ldr	r2, [r3]
   128c8:	movw	r3, #8680	; 0x21e8
   128cc:	movt	r3, #3
   128d0:	str	r2, [r3]
   128d4:	b	12954 <__assert_fail@plt+0x13e8>
   128d8:	movw	r3, #8688	; 0x21f0
   128dc:	movt	r3, #3
   128e0:	mov	r2, #1
   128e4:	str	r2, [r3]
   128e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   128ec:	bl	11a30 <__assert_fail@plt+0x4c4>
   128f0:	mov	r2, r0
   128f4:	movw	r3, #8680	; 0x21e8
   128f8:	movt	r3, #3
   128fc:	str	r2, [r3]
   12900:	movw	r3, #8680	; 0x21e8
   12904:	movt	r3, #3
   12908:	ldr	r3, [r3]
   1290c:	cmp	r3, #0
   12910:	bne	12954 <__assert_fail@plt+0x13e8>
   12914:	bl	113ec <__errno_location@plt>
   12918:	mov	r3, r0
   1291c:	ldr	r4, [r3]
   12920:	movw	r0, #62104	; 0xf298
   12924:	movt	r0, #1
   12928:	bl	113a4 <gettext@plt>
   1292c:	mov	r5, r0
   12930:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12934:	mov	r1, #8
   12938:	mov	r0, #0
   1293c:	bl	1b138 <__assert_fail@plt+0x9bcc>
   12940:	mov	r3, r0
   12944:	mov	r2, r5
   12948:	mov	r1, r4
   1294c:	mov	r0, #1
   12950:	bl	11314 <error@plt>
   12954:	movw	r3, #8740	; 0x2224
   12958:	movt	r3, #3
   1295c:	ldr	r3, [r3, #24]
   12960:	cmp	r3, #0
   12964:	bne	1297c <__assert_fail@plt+0x1410>
   12968:	movw	r3, #8740	; 0x2224
   1296c:	movt	r3, #3
   12970:	ldr	r3, [r3, #36]	; 0x24
   12974:	cmp	r3, #0
   12978:	beq	1298c <__assert_fail@plt+0x1420>
   1297c:	movw	r3, #8740	; 0x2224
   12980:	movt	r3, #3
   12984:	mov	r2, #1
   12988:	str	r2, [r3]
   1298c:	movw	r3, #8648	; 0x21c8
   12990:	movt	r3, #3
   12994:	ldr	r3, [r3]
   12998:	ldr	r2, [fp, #-232]	; 0xffffff18
   1299c:	cmp	r2, r3
   129a0:	bne	129cc <__assert_fail@plt+0x1460>
   129a4:	movw	r3, #8648	; 0x21c8
   129a8:	movt	r3, #3
   129ac:	mov	r2, #0
   129b0:	str	r2, [r3]
   129b4:	mov	r3, #1
   129b8:	str	r3, [fp, #-232]	; 0xffffff18
   129bc:	sub	r3, fp, #84	; 0x54
   129c0:	str	r3, [fp, #-88]	; 0xffffffa8
   129c4:	sub	r3, fp, #88	; 0x58
   129c8:	str	r3, [fp, #-236]	; 0xffffff14
   129cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   129d0:	cmp	r3, #0
   129d4:	beq	12bb8 <__assert_fail@plt+0x164c>
   129d8:	movw	r3, #8656	; 0x21d0
   129dc:	movt	r3, #3
   129e0:	ldr	r4, [r3]
   129e4:	movw	r0, #62132	; 0xf2b4
   129e8:	movt	r0, #1
   129ec:	bl	113a4 <gettext@plt>
   129f0:	mov	r5, r0
   129f4:	bl	15dec <__assert_fail@plt+0x4880>
   129f8:	mov	r3, r0
   129fc:	mov	r2, r3
   12a00:	mov	r3, #0
   12a04:	mov	r1, r5
   12a08:	mov	r0, r4
   12a0c:	bl	113e0 <fprintf@plt>
   12a10:	movw	r3, #8656	; 0x21d0
   12a14:	movt	r3, #3
   12a18:	ldr	r4, [r3]
   12a1c:	movw	r0, #62180	; 0xf2e4
   12a20:	movt	r0, #1
   12a24:	bl	113a4 <gettext@plt>
   12a28:	mov	r1, r0
   12a2c:	movw	r3, #8740	; 0x2224
   12a30:	movt	r3, #3
   12a34:	ldr	r3, [r3, #4]
   12a38:	mov	r2, r3
   12a3c:	mov	r3, #0
   12a40:	mov	r0, r4
   12a44:	bl	113e0 <fprintf@plt>
   12a48:	movw	r3, #8656	; 0x21d0
   12a4c:	movt	r3, #3
   12a50:	ldr	r4, [r3]
   12a54:	movw	r0, #62240	; 0xf320
   12a58:	movt	r0, #1
   12a5c:	bl	113a4 <gettext@plt>
   12a60:	mov	r1, r0
   12a64:	movw	r3, #8740	; 0x2224
   12a68:	movt	r3, #3
   12a6c:	ldr	r3, [r3, #8]
   12a70:	mov	r2, r3
   12a74:	mov	r3, #0
   12a78:	mov	r0, r4
   12a7c:	bl	113e0 <fprintf@plt>
   12a80:	movw	r3, #8656	; 0x21d0
   12a84:	movt	r3, #3
   12a88:	ldr	r5, [r3]
   12a8c:	movw	r0, #62320	; 0xf370
   12a90:	movt	r0, #1
   12a94:	bl	113a4 <gettext@plt>
   12a98:	mov	r6, r0
   12a9c:	movw	r3, #8740	; 0x2224
   12aa0:	movt	r3, #3
   12aa4:	ldr	r4, [r3, #4]
   12aa8:	bl	15dec <__assert_fail@plt+0x4880>
   12aac:	mov	r3, r0
   12ab0:	sub	r3, r4, r3
   12ab4:	mov	r2, r3
   12ab8:	mov	r3, #0
   12abc:	mov	r1, r6
   12ac0:	mov	r0, r5
   12ac4:	bl	113e0 <fprintf@plt>
   12ac8:	movw	r3, #8656	; 0x21d0
   12acc:	movt	r3, #3
   12ad0:	ldr	r4, [r3]
   12ad4:	movw	r0, #62376	; 0xf3a8
   12ad8:	movt	r0, #1
   12adc:	bl	113a4 <gettext@plt>
   12ae0:	mov	r1, r0
   12ae4:	movw	r3, #8740	; 0x2224
   12ae8:	movt	r3, #3
   12aec:	ldr	r3, [r3, #12]
   12af0:	mov	r2, r3
   12af4:	mov	r3, #0
   12af8:	mov	r0, r4
   12afc:	bl	113e0 <fprintf@plt>
   12b00:	movw	r3, #8656	; 0x21d0
   12b04:	movt	r3, #3
   12b08:	ldr	r4, [r3]
   12b0c:	movw	r0, #62428	; 0xf3dc
   12b10:	movt	r0, #1
   12b14:	bl	113a4 <gettext@plt>
   12b18:	mov	r1, r0
   12b1c:	mvn	r2, #-2147483648	; 0x80000000
   12b20:	mov	r3, #0
   12b24:	mov	r0, r4
   12b28:	bl	113e0 <fprintf@plt>
   12b2c:	mov	r0, #0
   12b30:	bl	1150c <isatty@plt>
   12b34:	mov	r3, r0
   12b38:	cmp	r3, #0
   12b3c:	beq	12bb8 <__assert_fail@plt+0x164c>
   12b40:	movw	r3, #8656	; 0x21d0
   12b44:	movt	r3, #3
   12b48:	ldr	r4, [r3]
   12b4c:	movw	r0, #62488	; 0xf418
   12b50:	movt	r0, #1
   12b54:	bl	113a4 <gettext@plt>
   12b58:	mov	r3, r0
   12b5c:	mov	r1, r3
   12b60:	mov	r0, r4
   12b64:	bl	113e0 <fprintf@plt>
   12b68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12b6c:	cmp	r3, #0
   12b70:	beq	12bb8 <__assert_fail@plt+0x164c>
   12b74:	movw	r3, #8656	; 0x21d0
   12b78:	movt	r3, #3
   12b7c:	ldr	r4, [r3]
   12b80:	movw	r0, #62664	; 0xf4c8
   12b84:	movt	r0, #1
   12b88:	bl	113a4 <gettext@plt>
   12b8c:	mov	r1, r0
   12b90:	movw	r3, #8648	; 0x21c8
   12b94:	movt	r3, #3
   12b98:	ldr	r3, [r3]
   12b9c:	lsl	r3, r3, #2
   12ba0:	ldr	r2, [fp, #-236]	; 0xffffff14
   12ba4:	add	r3, r2, r3
   12ba8:	ldr	r3, [r3]
   12bac:	mov	r2, r3
   12bb0:	mov	r0, r4
   12bb4:	bl	113e0 <fprintf@plt>
   12bb8:	movw	r3, #8740	; 0x2224
   12bbc:	movt	r3, #3
   12bc0:	ldr	r3, [r3, #12]
   12bc4:	add	r3, r3, #1
   12bc8:	mov	r0, r3
   12bcc:	bl	1c1f8 <__assert_fail@plt+0xac8c>
   12bd0:	mov	r3, r0
   12bd4:	mov	r2, r3
   12bd8:	movw	r3, #8684	; 0x21ec
   12bdc:	movt	r3, #3
   12be0:	str	r2, [r3]
   12be4:	movw	r3, #8740	; 0x2224
   12be8:	movt	r3, #3
   12bec:	ldr	r3, [r3, #12]
   12bf0:	add	r3, r3, #1
   12bf4:	mov	r0, r3
   12bf8:	bl	1c1f8 <__assert_fail@plt+0xac8c>
   12bfc:	mov	r3, r0
   12c00:	mov	r2, r3
   12c04:	movw	r3, #8696	; 0x21f8
   12c08:	movt	r3, #3
   12c0c:	str	r2, [r3, #12]
   12c10:	mov	r1, #0
   12c14:	mov	r0, #17
   12c18:	bl	1123c <signal@plt>
   12c1c:	movw	r3, #8740	; 0x2224
   12c20:	movt	r3, #3
   12c24:	ldr	r3, [r3, #24]
   12c28:	cmp	r3, #0
   12c2c:	bne	12e14 <__assert_fail@plt+0x18a8>
   12c30:	b	12cd4 <__assert_fail@plt+0x1768>
   12c34:	movw	r3, #8648	; 0x21c8
   12c38:	movt	r3, #3
   12c3c:	ldr	r3, [r3]
   12c40:	lsl	r3, r3, #2
   12c44:	ldr	r2, [fp, #-236]	; 0xffffff14
   12c48:	add	r3, r2, r3
   12c4c:	ldr	r4, [r3]
   12c50:	movw	r3, #8648	; 0x21c8
   12c54:	movt	r3, #3
   12c58:	ldr	r3, [r3]
   12c5c:	lsl	r3, r3, #2
   12c60:	ldr	r2, [fp, #-236]	; 0xffffff14
   12c64:	add	r3, r2, r3
   12c68:	ldr	r3, [r3]
   12c6c:	mov	r0, r3
   12c70:	bl	113bc <strlen@plt>
   12c74:	mov	r3, r0
   12c78:	add	r2, r3, #1
   12c7c:	movw	r3, #8548	; 0x2164
   12c80:	movt	r3, #3
   12c84:	ldrb	r3, [r3]
   12c88:	str	r3, [sp, #8]
   12c8c:	mov	r3, #0
   12c90:	str	r3, [sp, #4]
   12c94:	mov	r3, #0
   12c98:	str	r3, [sp]
   12c9c:	mov	r3, r2
   12ca0:	mov	r2, r4
   12ca4:	movw	r1, #8696	; 0x21f8
   12ca8:	movt	r1, #3
   12cac:	movw	r0, #8740	; 0x2224
   12cb0:	movt	r0, #3
   12cb4:	bl	159f8 <__assert_fail@plt+0x448c>
   12cb8:	movw	r3, #8648	; 0x21c8
   12cbc:	movt	r3, #3
   12cc0:	ldr	r3, [r3]
   12cc4:	add	r2, r3, #1
   12cc8:	movw	r3, #8648	; 0x21c8
   12ccc:	movt	r3, #3
   12cd0:	str	r2, [r3]
   12cd4:	movw	r3, #8648	; 0x21c8
   12cd8:	movt	r3, #3
   12cdc:	ldr	r3, [r3]
   12ce0:	ldr	r2, [fp, #-232]	; 0xffffff18
   12ce4:	cmp	r2, r3
   12ce8:	bgt	12c34 <__assert_fail@plt+0x16c8>
   12cec:	movw	r3, #8548	; 0x2164
   12cf0:	movt	r3, #3
   12cf4:	mov	r2, #0
   12cf8:	strb	r2, [r3]
   12cfc:	movw	r3, #8696	; 0x21f8
   12d00:	movt	r3, #3
   12d04:	ldr	r2, [r3]
   12d08:	movw	r3, #8740	; 0x2224
   12d0c:	movt	r3, #3
   12d10:	str	r2, [r3, #28]
   12d14:	movw	r3, #8696	; 0x21f8
   12d18:	movt	r3, #3
   12d1c:	ldr	r2, [r3, #16]
   12d20:	movw	r3, #8696	; 0x21f8
   12d24:	movt	r3, #3
   12d28:	str	r2, [r3, #20]
   12d2c:	movw	r3, #8696	; 0x21f8
   12d30:	movt	r3, #3
   12d34:	ldr	r2, [r3]
   12d38:	movw	r3, #8740	; 0x2224
   12d3c:	movt	r3, #3
   12d40:	str	r2, [r3, #28]
   12d44:	b	12da0 <__assert_fail@plt+0x1834>
   12d48:	movw	r3, #8740	; 0x2224
   12d4c:	movt	r3, #3
   12d50:	ldr	r3, [r3, #36]	; 0x24
   12d54:	cmp	r3, #0
   12d58:	beq	12da0 <__assert_fail@plt+0x1834>
   12d5c:	movw	r3, #8740	; 0x2224
   12d60:	movt	r3, #3
   12d64:	ldr	r2, [r3, #36]	; 0x24
   12d68:	movw	r3, #8692	; 0x21f4
   12d6c:	movt	r3, #3
   12d70:	ldr	r3, [r3]
   12d74:	cmp	r2, r3
   12d78:	bhi	12da0 <__assert_fail@plt+0x1834>
   12d7c:	movw	r1, #8696	; 0x21f8
   12d80:	movt	r1, #3
   12d84:	movw	r0, #8740	; 0x2224
   12d88:	movt	r0, #3
   12d8c:	bl	15770 <__assert_fail@plt+0x4204>
   12d90:	movw	r3, #8692	; 0x21f4
   12d94:	movt	r3, #3
   12d98:	mov	r2, #0
   12d9c:	str	r2, [r3]
   12da0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12da4:	blx	r3
   12da8:	mov	r3, r0
   12dac:	cmn	r3, #1
   12db0:	bne	12d48 <__assert_fail@plt+0x17dc>
   12db4:	movw	r3, #8696	; 0x21f8
   12db8:	movt	r3, #3
   12dbc:	ldr	r2, [r3]
   12dc0:	movw	r3, #8740	; 0x2224
   12dc4:	movt	r3, #3
   12dc8:	ldr	r3, [r3, #28]
   12dcc:	cmp	r2, r3
   12dd0:	bne	12dfc <__assert_fail@plt+0x1890>
   12dd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12dd8:	cmp	r3, #0
   12ddc:	beq	13054 <__assert_fail@plt+0x1ae8>
   12de0:	movw	r3, #8792	; 0x2258
   12de4:	movt	r3, #3
   12de8:	ldrb	r3, [r3]
   12dec:	eor	r3, r3, #1
   12df0:	uxtb	r3, r3
   12df4:	cmp	r3, #0
   12df8:	beq	13054 <__assert_fail@plt+0x1ae8>
   12dfc:	movw	r1, #8696	; 0x21f8
   12e00:	movt	r1, #3
   12e04:	movw	r0, #8740	; 0x2224
   12e08:	movt	r0, #3
   12e0c:	bl	15770 <__assert_fail@plt+0x4204>
   12e10:	b	13054 <__assert_fail@plt+0x1ae8>
   12e14:	ldr	r3, [fp, #-232]	; 0xffffff18
   12e18:	lsl	r3, r3, #2
   12e1c:	mov	r0, r3
   12e20:	bl	1c1f8 <__assert_fail@plt+0xac8c>
   12e24:	mov	r3, r0
   12e28:	str	r3, [fp, #-64]	; 0xffffffc0
   12e2c:	movw	r3, #8648	; 0x21c8
   12e30:	movt	r3, #3
   12e34:	ldr	r3, [r3]
   12e38:	str	r3, [fp, #-48]	; 0xffffffd0
   12e3c:	b	12e80 <__assert_fail@plt+0x1914>
   12e40:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12e44:	lsl	r3, r3, #2
   12e48:	ldr	r2, [fp, #-236]	; 0xffffff14
   12e4c:	add	r3, r2, r3
   12e50:	ldr	r1, [r3]
   12e54:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12e58:	lsl	r3, r3, #2
   12e5c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12e60:	add	r4, r2, r3
   12e64:	mov	r0, r1
   12e68:	bl	113bc <strlen@plt>
   12e6c:	mov	r3, r0
   12e70:	str	r3, [r4]
   12e74:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12e78:	add	r3, r3, #1
   12e7c:	str	r3, [fp, #-48]	; 0xffffffd0
   12e80:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12e84:	ldr	r3, [fp, #-232]	; 0xffffff18
   12e88:	cmp	r2, r3
   12e8c:	blt	12e40 <__assert_fail@plt+0x18d4>
   12e90:	movw	r3, #8740	; 0x2224
   12e94:	movt	r3, #3
   12e98:	ldr	r3, [r3, #24]
   12e9c:	mov	r0, r3
   12ea0:	bl	113bc <strlen@plt>
   12ea4:	mov	r2, r0
   12ea8:	movw	r3, #8740	; 0x2224
   12eac:	movt	r3, #3
   12eb0:	str	r2, [r3, #20]
   12eb4:	b	1303c <__assert_fail@plt+0x1ad0>
   12eb8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12ebc:	str	r3, [fp, #-72]	; 0xffffffb8
   12ec0:	movw	r1, #8696	; 0x21f8
   12ec4:	movt	r1, #3
   12ec8:	movw	r0, #8740	; 0x2224
   12ecc:	movt	r0, #3
   12ed0:	bl	16168 <__assert_fail@plt+0x4bfc>
   12ed4:	movw	r3, #8696	; 0x21f8
   12ed8:	movt	r3, #3
   12edc:	mov	r2, #0
   12ee0:	str	r2, [r3, #16]
   12ee4:	movw	r3, #8648	; 0x21c8
   12ee8:	movt	r3, #3
   12eec:	ldr	r3, [r3]
   12ef0:	lsl	r3, r3, #2
   12ef4:	ldr	r2, [fp, #-236]	; 0xffffff14
   12ef8:	add	r3, r2, r3
   12efc:	ldr	r1, [r3]
   12f00:	movw	r3, #8648	; 0x21c8
   12f04:	movt	r3, #3
   12f08:	ldr	r3, [r3]
   12f0c:	lsl	r3, r3, #2
   12f10:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12f14:	add	r3, r2, r3
   12f18:	ldr	r3, [r3]
   12f1c:	add	r2, r3, #1
   12f20:	movw	r3, #8548	; 0x2164
   12f24:	movt	r3, #3
   12f28:	ldrb	r3, [r3]
   12f2c:	str	r3, [sp, #8]
   12f30:	mov	r3, #0
   12f34:	str	r3, [sp, #4]
   12f38:	mov	r3, #0
   12f3c:	str	r3, [sp]
   12f40:	mov	r3, r2
   12f44:	mov	r2, r1
   12f48:	movw	r1, #8696	; 0x21f8
   12f4c:	movt	r1, #3
   12f50:	movw	r0, #8740	; 0x2224
   12f54:	movt	r0, #3
   12f58:	bl	159f8 <__assert_fail@plt+0x448c>
   12f5c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12f60:	sub	r3, r3, #1
   12f64:	str	r3, [fp, #-72]	; 0xffffffb8
   12f68:	movw	r3, #8548	; 0x2164
   12f6c:	movt	r3, #3
   12f70:	mov	r2, #0
   12f74:	strb	r2, [r3]
   12f78:	movw	r3, #8648	; 0x21c8
   12f7c:	movt	r3, #3
   12f80:	ldr	r3, [r3]
   12f84:	add	r3, r3, #1
   12f88:	str	r3, [fp, #-48]	; 0xffffffd0
   12f8c:	b	13018 <__assert_fail@plt+0x1aac>
   12f90:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12f94:	lsl	r3, r3, #2
   12f98:	ldr	r2, [fp, #-236]	; 0xffffff14
   12f9c:	add	r3, r2, r3
   12fa0:	ldr	r1, [r3]
   12fa4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12fa8:	lsl	r3, r3, #2
   12fac:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12fb0:	add	r3, r2, r3
   12fb4:	ldr	r0, [r3]
   12fb8:	movw	r3, #8684	; 0x21ec
   12fbc:	movt	r3, #3
   12fc0:	ldr	r2, [r3]
   12fc4:	movw	r3, #8548	; 0x2164
   12fc8:	movt	r3, #3
   12fcc:	ldrb	r3, [r3]
   12fd0:	str	r3, [sp, #16]
   12fd4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12fd8:	str	r3, [sp, #12]
   12fdc:	str	r2, [sp, #8]
   12fe0:	mov	r3, #0
   12fe4:	str	r3, [sp, #4]
   12fe8:	mov	r3, #0
   12fec:	str	r3, [sp]
   12ff0:	mov	r3, r0
   12ff4:	mov	r2, r1
   12ff8:	movw	r1, #8696	; 0x21f8
   12ffc:	movt	r1, #3
   13000:	movw	r0, #8740	; 0x2224
   13004:	movt	r0, #3
   13008:	bl	151bc <__assert_fail@plt+0x3c50>
   1300c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13010:	add	r3, r3, #1
   13014:	str	r3, [fp, #-48]	; 0xffffffd0
   13018:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1301c:	ldr	r3, [fp, #-232]	; 0xffffff18
   13020:	cmp	r2, r3
   13024:	blt	12f90 <__assert_fail@plt+0x1a24>
   13028:	movw	r1, #8696	; 0x21f8
   1302c:	movt	r1, #3
   13030:	movw	r0, #8740	; 0x2224
   13034:	movt	r0, #3
   13038:	bl	15770 <__assert_fail@plt+0x4204>
   1303c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13040:	blx	r3
   13044:	str	r0, [fp, #-68]	; 0xffffffbc
   13048:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1304c:	cmn	r3, #1
   13050:	bne	12eb8 <__assert_fail@plt+0x194c>
   13054:	movw	r3, #8816	; 0x2270
   13058:	movt	r3, #3
   1305c:	ldr	r2, [r3]
   13060:	movw	r3, #8820	; 0x2274
   13064:	movt	r3, #3
   13068:	str	r2, [r3]
   1306c:	movw	r3, #8816	; 0x2270
   13070:	movt	r3, #3
   13074:	ldr	r3, [r3]
   13078:	mov	r0, r3
   1307c:	sub	sp, fp, #16
   13080:	ldrd	r4, [sp]
   13084:	ldr	r6, [sp, #8]
   13088:	ldr	fp, [sp, #12]
   1308c:	add	sp, sp, #16
   13090:	pop	{pc}		; (ldr pc, [sp], #4)
   13094:	str	r4, [sp, #-12]!
   13098:	str	fp, [sp, #4]
   1309c:	str	lr, [sp, #8]
   130a0:	add	fp, sp, #8
   130a4:	sub	sp, sp, #52	; 0x34
   130a8:	mov	r3, #1
   130ac:	str	r3, [fp, #-16]
   130b0:	mov	r3, #0
   130b4:	str	r3, [fp, #-20]	; 0xffffffec
   130b8:	mvn	r3, #0
   130bc:	str	r3, [fp, #-24]	; 0xffffffe8
   130c0:	mov	r3, #1
   130c4:	strb	r3, [fp, #-25]	; 0xffffffe7
   130c8:	mov	r3, #0
   130cc:	strb	r3, [fp, #-26]	; 0xffffffe6
   130d0:	movw	r3, #8684	; 0x21ec
   130d4:	movt	r3, #3
   130d8:	ldr	r3, [r3]
   130dc:	str	r3, [fp, #-32]	; 0xffffffe0
   130e0:	movw	r3, #8684	; 0x21ec
   130e4:	movt	r3, #3
   130e8:	ldr	r2, [r3]
   130ec:	movw	r3, #8740	; 0x2224
   130f0:	movt	r3, #3
   130f4:	ldr	r1, [r3, #12]
   130f8:	movw	r3, #8696	; 0x21f8
   130fc:	movt	r3, #3
   13100:	ldr	r3, [r3, #20]
   13104:	sub	r3, r1, r3
   13108:	sub	r3, r3, #1
   1310c:	add	r3, r2, r3
   13110:	str	r3, [fp, #-36]	; 0xffffffdc
   13114:	movw	r3, #8832	; 0x2280
   13118:	movt	r3, #3
   1311c:	ldrb	r3, [r3]
   13120:	cmp	r3, #0
   13124:	beq	13130 <__assert_fail@plt+0x1bc4>
   13128:	mvn	r3, #0
   1312c:	b	1384c <__assert_fail@plt+0x22e0>
   13130:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13134:	str	r3, [fp, #-40]	; 0xffffffd8
   13138:	movw	r3, #8680	; 0x21e8
   1313c:	movt	r3, #3
   13140:	ldr	r3, [r3]
   13144:	mov	r0, r3
   13148:	bl	11548 <getc@plt>
   1314c:	str	r0, [fp, #-24]	; 0xffffffe8
   13150:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13154:	cmn	r3, #1
   13158:	bne	132fc <__assert_fail@plt+0x1d90>
   1315c:	movw	r3, #8832	; 0x2280
   13160:	movt	r3, #3
   13164:	mov	r2, #1
   13168:	strb	r2, [r3]
   1316c:	movw	r3, #8684	; 0x21ec
   13170:	movt	r3, #3
   13174:	ldr	r3, [r3]
   13178:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1317c:	cmp	r2, r3
   13180:	bne	1318c <__assert_fail@plt+0x1c20>
   13184:	mvn	r3, #0
   13188:	b	1384c <__assert_fail@plt+0x22e0>
   1318c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13190:	add	r2, r3, #1
   13194:	str	r2, [fp, #-32]	; 0xffffffe0
   13198:	mov	r2, #0
   1319c:	strb	r2, [r3]
   131a0:	movw	r3, #8684	; 0x21ec
   131a4:	movt	r3, #3
   131a8:	ldr	r3, [r3]
   131ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   131b0:	sub	r3, r2, r3
   131b4:	str	r3, [fp, #-44]	; 0xffffffd4
   131b8:	ldr	r3, [fp, #-16]
   131bc:	cmp	r3, #2
   131c0:	bne	13218 <__assert_fail@plt+0x1cac>
   131c4:	bl	14424 <__assert_fail@plt+0x2eb8>
   131c8:	movw	r0, #62784	; 0xf540
   131cc:	movt	r0, #1
   131d0:	bl	113a4 <gettext@plt>
   131d4:	mov	r4, r0
   131d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   131dc:	cmp	r3, #34	; 0x22
   131e0:	bne	131f8 <__assert_fail@plt+0x1c8c>
   131e4:	movw	r0, #62872	; 0xf598
   131e8:	movt	r0, #1
   131ec:	bl	113a4 <gettext@plt>
   131f0:	mov	r3, r0
   131f4:	b	13208 <__assert_fail@plt+0x1c9c>
   131f8:	movw	r0, #62880	; 0xf5a0
   131fc:	movt	r0, #1
   13200:	bl	113a4 <gettext@plt>
   13204:	mov	r3, r0
   13208:	mov	r2, r4
   1320c:	mov	r1, #0
   13210:	mov	r0, #1
   13214:	bl	11314 <error@plt>
   13218:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1321c:	cmp	r3, #0
   13220:	beq	13298 <__assert_fail@plt+0x1d2c>
   13224:	movw	r3, #8788	; 0x2254
   13228:	movt	r3, #3
   1322c:	ldr	r3, [r3]
   13230:	cmp	r3, #0
   13234:	beq	13298 <__assert_fail@plt+0x1d2c>
   13238:	movw	r3, #8788	; 0x2254
   1323c:	movt	r3, #3
   13240:	ldr	r3, [r3]
   13244:	ldrb	r2, [r3]
   13248:	movw	r3, #8684	; 0x21ec
   1324c:	movt	r3, #3
   13250:	ldr	r3, [r3]
   13254:	ldrb	r3, [r3]
   13258:	cmp	r2, r3
   1325c:	bne	13298 <__assert_fail@plt+0x1d2c>
   13260:	movw	r3, #8788	; 0x2254
   13264:	movt	r3, #3
   13268:	ldr	r2, [r3]
   1326c:	movw	r3, #8684	; 0x21ec
   13270:	movt	r3, #3
   13274:	ldr	r3, [r3]
   13278:	mov	r1, r3
   1327c:	mov	r0, r2
   13280:	bl	111ac <strcmp@plt>
   13284:	mov	r3, r0
   13288:	cmp	r3, #0
   1328c:	bne	13298 <__assert_fail@plt+0x1d2c>
   13290:	mvn	r3, #0
   13294:	b	1384c <__assert_fail@plt+0x22e0>
   13298:	movw	r3, #8740	; 0x2224
   1329c:	movt	r3, #3
   132a0:	ldr	r3, [r3, #24]
   132a4:	cmp	r3, #0
   132a8:	bne	132f4 <__assert_fail@plt+0x1d88>
   132ac:	movw	r3, #8684	; 0x21ec
   132b0:	movt	r3, #3
   132b4:	ldr	r2, [r3]
   132b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   132bc:	movw	r3, #8548	; 0x2164
   132c0:	movt	r3, #3
   132c4:	ldrb	r3, [r3]
   132c8:	str	r3, [sp, #8]
   132cc:	mov	r3, #0
   132d0:	str	r3, [sp, #4]
   132d4:	mov	r3, #0
   132d8:	str	r3, [sp]
   132dc:	mov	r3, r1
   132e0:	movw	r1, #8696	; 0x21f8
   132e4:	movt	r1, #3
   132e8:	movw	r0, #8740	; 0x2224
   132ec:	movt	r0, #3
   132f0:	bl	159f8 <__assert_fail@plt+0x448c>
   132f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   132f8:	b	1384c <__assert_fail@plt+0x22e0>
   132fc:	ldr	r3, [fp, #-16]
   13300:	cmp	r3, #3
   13304:	ldrls	pc, [pc, r3, lsl #2]
   13308:	b	137a4 <__assert_fail@plt+0x2238>
   1330c:	andeq	r3, r1, ip, lsl #7
   13310:	andeq	r3, r1, ip, lsl r3
   13314:	andeq	r3, r1, r0, lsl r7
   13318:	muleq	r1, r4, r7
   1331c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13320:	bic	r3, r3, #127	; 0x7f
   13324:	cmp	r3, #0
   13328:	bne	13354 <__assert_fail@plt+0x1de8>
   1332c:	bl	11380 <__ctype_b_loc@plt>
   13330:	mov	r3, r0
   13334:	ldr	r2, [r3]
   13338:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1333c:	lsl	r3, r3, #1
   13340:	add	r3, r2, r3
   13344:	ldrh	r3, [r3]
   13348:	and	r3, r3, #1
   1334c:	cmp	r3, #0
   13350:	bne	13844 <__assert_fail@plt+0x22d8>
   13354:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13358:	cmp	r3, #10
   1335c:	beq	13844 <__assert_fail@plt+0x22d8>
   13360:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13364:	cmp	r3, #13
   13368:	beq	13844 <__assert_fail@plt+0x22d8>
   1336c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13370:	cmp	r3, #12
   13374:	beq	13844 <__assert_fail@plt+0x22d8>
   13378:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1337c:	cmp	r3, #11
   13380:	beq	13844 <__assert_fail@plt+0x22d8>
   13384:	mov	r3, #0
   13388:	str	r3, [fp, #-16]
   1338c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13390:	cmp	r3, #10
   13394:	bne	13544 <__assert_fail@plt+0x1fd8>
   13398:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1339c:	bic	r3, r3, #127	; 0x7f
   133a0:	cmp	r3, #0
   133a4:	bne	133d0 <__assert_fail@plt+0x1e64>
   133a8:	bl	11380 <__ctype_b_loc@plt>
   133ac:	mov	r3, r0
   133b0:	ldr	r2, [r3]
   133b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   133b8:	lsl	r3, r3, #1
   133bc:	add	r3, r2, r3
   133c0:	ldrh	r3, [r3]
   133c4:	and	r3, r3, #1
   133c8:	cmp	r3, #0
   133cc:	bne	133ec <__assert_fail@plt+0x1e80>
   133d0:	movw	r3, #8692	; 0x21f4
   133d4:	movt	r3, #3
   133d8:	ldr	r3, [r3]
   133dc:	add	r2, r3, #1
   133e0:	movw	r3, #8692	; 0x21f4
   133e4:	movt	r3, #3
   133e8:	str	r2, [r3]
   133ec:	movw	r3, #8684	; 0x21ec
   133f0:	movt	r3, #3
   133f4:	ldr	r3, [r3]
   133f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   133fc:	cmp	r2, r3
   13400:	bne	1341c <__assert_fail@plt+0x1eb0>
   13404:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   13408:	cmp	r3, #0
   1340c:	bne	1341c <__assert_fail@plt+0x1eb0>
   13410:	mov	r3, #1
   13414:	str	r3, [fp, #-16]
   13418:	b	13848 <__assert_fail@plt+0x22dc>
   1341c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13420:	add	r2, r3, #1
   13424:	str	r2, [fp, #-32]	; 0xffffffe0
   13428:	mov	r2, #0
   1342c:	strb	r2, [r3]
   13430:	movw	r3, #8684	; 0x21ec
   13434:	movt	r3, #3
   13438:	ldr	r3, [r3]
   1343c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13440:	sub	r3, r2, r3
   13444:	str	r3, [fp, #-44]	; 0xffffffd4
   13448:	movw	r3, #8788	; 0x2254
   1344c:	movt	r3, #3
   13450:	ldr	r3, [r3]
   13454:	cmp	r3, #0
   13458:	beq	134e0 <__assert_fail@plt+0x1f74>
   1345c:	movw	r3, #8788	; 0x2254
   13460:	movt	r3, #3
   13464:	ldr	r3, [r3]
   13468:	ldrb	r2, [r3]
   1346c:	movw	r3, #8684	; 0x21ec
   13470:	movt	r3, #3
   13474:	ldr	r3, [r3]
   13478:	ldrb	r3, [r3]
   1347c:	cmp	r2, r3
   13480:	bne	134e0 <__assert_fail@plt+0x1f74>
   13484:	movw	r3, #8788	; 0x2254
   13488:	movt	r3, #3
   1348c:	ldr	r2, [r3]
   13490:	movw	r3, #8684	; 0x21ec
   13494:	movt	r3, #3
   13498:	ldr	r3, [r3]
   1349c:	mov	r1, r3
   134a0:	mov	r0, r2
   134a4:	bl	111ac <strcmp@plt>
   134a8:	mov	r3, r0
   134ac:	cmp	r3, #0
   134b0:	bne	134e0 <__assert_fail@plt+0x1f74>
   134b4:	movw	r3, #8832	; 0x2280
   134b8:	movt	r3, #3
   134bc:	mov	r2, #1
   134c0:	strb	r2, [r3]
   134c4:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   134c8:	cmp	r3, #0
   134cc:	beq	134d8 <__assert_fail@plt+0x1f6c>
   134d0:	mvn	r3, #0
   134d4:	b	1384c <__assert_fail@plt+0x22e0>
   134d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   134dc:	b	1384c <__assert_fail@plt+0x22e0>
   134e0:	movw	r3, #8740	; 0x2224
   134e4:	movt	r3, #3
   134e8:	ldr	r3, [r3, #24]
   134ec:	cmp	r3, #0
   134f0:	bne	1353c <__assert_fail@plt+0x1fd0>
   134f4:	movw	r3, #8684	; 0x21ec
   134f8:	movt	r3, #3
   134fc:	ldr	r2, [r3]
   13500:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13504:	movw	r3, #8548	; 0x2164
   13508:	movt	r3, #3
   1350c:	ldrb	r3, [r3]
   13510:	str	r3, [sp, #8]
   13514:	mov	r3, #0
   13518:	str	r3, [sp, #4]
   1351c:	mov	r3, #0
   13520:	str	r3, [sp]
   13524:	mov	r3, r1
   13528:	movw	r1, #8696	; 0x21f8
   1352c:	movt	r1, #3
   13530:	movw	r0, #8740	; 0x2224
   13534:	movt	r0, #3
   13538:	bl	159f8 <__assert_fail@plt+0x448c>
   1353c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13540:	b	1384c <__assert_fail@plt+0x22e0>
   13544:	mov	r3, #1
   13548:	strb	r3, [fp, #-26]	; 0xffffffe6
   1354c:	movw	r3, #8740	; 0x2224
   13550:	movt	r3, #3
   13554:	ldr	r3, [r3, #24]
   13558:	cmp	r3, #0
   1355c:	bne	136c8 <__assert_fail@plt+0x215c>
   13560:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13564:	bic	r3, r3, #127	; 0x7f
   13568:	cmp	r3, #0
   1356c:	bne	136c8 <__assert_fail@plt+0x215c>
   13570:	bl	11380 <__ctype_b_loc@plt>
   13574:	mov	r3, r0
   13578:	ldr	r2, [r3]
   1357c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13580:	lsl	r3, r3, #1
   13584:	add	r3, r2, r3
   13588:	ldrh	r3, [r3]
   1358c:	and	r3, r3, #1
   13590:	cmp	r3, #0
   13594:	beq	136c8 <__assert_fail@plt+0x215c>
   13598:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1359c:	add	r2, r3, #1
   135a0:	str	r2, [fp, #-32]	; 0xffffffe0
   135a4:	mov	r2, #0
   135a8:	strb	r2, [r3]
   135ac:	movw	r3, #8684	; 0x21ec
   135b0:	movt	r3, #3
   135b4:	ldr	r3, [r3]
   135b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   135bc:	sub	r3, r2, r3
   135c0:	str	r3, [fp, #-44]	; 0xffffffd4
   135c4:	movw	r3, #8788	; 0x2254
   135c8:	movt	r3, #3
   135cc:	ldr	r3, [r3]
   135d0:	cmp	r3, #0
   135d4:	beq	1365c <__assert_fail@plt+0x20f0>
   135d8:	movw	r3, #8788	; 0x2254
   135dc:	movt	r3, #3
   135e0:	ldr	r3, [r3]
   135e4:	ldrb	r2, [r3]
   135e8:	movw	r3, #8684	; 0x21ec
   135ec:	movt	r3, #3
   135f0:	ldr	r3, [r3]
   135f4:	ldrb	r3, [r3]
   135f8:	cmp	r2, r3
   135fc:	bne	1365c <__assert_fail@plt+0x20f0>
   13600:	movw	r3, #8788	; 0x2254
   13604:	movt	r3, #3
   13608:	ldr	r2, [r3]
   1360c:	movw	r3, #8684	; 0x21ec
   13610:	movt	r3, #3
   13614:	ldr	r3, [r3]
   13618:	mov	r1, r3
   1361c:	mov	r0, r2
   13620:	bl	111ac <strcmp@plt>
   13624:	mov	r3, r0
   13628:	cmp	r3, #0
   1362c:	bne	1365c <__assert_fail@plt+0x20f0>
   13630:	movw	r3, #8832	; 0x2280
   13634:	movt	r3, #3
   13638:	mov	r2, #1
   1363c:	strb	r2, [r3]
   13640:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   13644:	cmp	r3, #0
   13648:	beq	13654 <__assert_fail@plt+0x20e8>
   1364c:	mvn	r3, #0
   13650:	b	1384c <__assert_fail@plt+0x22e0>
   13654:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13658:	b	1384c <__assert_fail@plt+0x22e0>
   1365c:	movw	r3, #8684	; 0x21ec
   13660:	movt	r3, #3
   13664:	ldr	r2, [r3]
   13668:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1366c:	movw	r3, #8548	; 0x2164
   13670:	movt	r3, #3
   13674:	ldrb	r3, [r3]
   13678:	str	r3, [sp, #8]
   1367c:	mov	r3, #0
   13680:	str	r3, [sp, #4]
   13684:	mov	r3, #0
   13688:	str	r3, [sp]
   1368c:	mov	r3, r1
   13690:	movw	r1, #8696	; 0x21f8
   13694:	movt	r1, #3
   13698:	movw	r0, #8740	; 0x2224
   1369c:	movt	r0, #3
   136a0:	bl	159f8 <__assert_fail@plt+0x448c>
   136a4:	movw	r3, #8684	; 0x21ec
   136a8:	movt	r3, #3
   136ac:	ldr	r3, [r3]
   136b0:	str	r3, [fp, #-32]	; 0xffffffe0
   136b4:	mov	r3, #1
   136b8:	str	r3, [fp, #-16]
   136bc:	mov	r3, #0
   136c0:	strb	r3, [fp, #-25]	; 0xffffffe7
   136c4:	b	13848 <__assert_fail@plt+0x22dc>
   136c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   136cc:	cmp	r3, #39	; 0x27
   136d0:	beq	136fc <__assert_fail@plt+0x2190>
   136d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   136d8:	cmp	r3, #92	; 0x5c
   136dc:	beq	136f0 <__assert_fail@plt+0x2184>
   136e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   136e4:	cmp	r3, #34	; 0x22
   136e8:	beq	136fc <__assert_fail@plt+0x2190>
   136ec:	b	137a4 <__assert_fail@plt+0x2238>
   136f0:	mov	r3, #3
   136f4:	str	r3, [fp, #-16]
   136f8:	b	13848 <__assert_fail@plt+0x22dc>
   136fc:	mov	r3, #2
   13700:	str	r3, [fp, #-16]
   13704:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13708:	str	r3, [fp, #-20]	; 0xffffffec
   1370c:	b	13848 <__assert_fail@plt+0x22dc>
   13710:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13714:	cmp	r3, #10
   13718:	bne	13770 <__assert_fail@plt+0x2204>
   1371c:	bl	14424 <__assert_fail@plt+0x2eb8>
   13720:	movw	r0, #62784	; 0xf540
   13724:	movt	r0, #1
   13728:	bl	113a4 <gettext@plt>
   1372c:	mov	r4, r0
   13730:	ldr	r3, [fp, #-20]	; 0xffffffec
   13734:	cmp	r3, #34	; 0x22
   13738:	bne	13750 <__assert_fail@plt+0x21e4>
   1373c:	movw	r0, #62872	; 0xf598
   13740:	movt	r0, #1
   13744:	bl	113a4 <gettext@plt>
   13748:	mov	r3, r0
   1374c:	b	13760 <__assert_fail@plt+0x21f4>
   13750:	movw	r0, #62880	; 0xf5a0
   13754:	movt	r0, #1
   13758:	bl	113a4 <gettext@plt>
   1375c:	mov	r3, r0
   13760:	mov	r2, r4
   13764:	mov	r1, #0
   13768:	mov	r0, #1
   1376c:	bl	11314 <error@plt>
   13770:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13774:	ldr	r3, [fp, #-20]	; 0xffffffec
   13778:	cmp	r2, r3
   1377c:	bne	137a0 <__assert_fail@plt+0x2234>
   13780:	mov	r3, #0
   13784:	str	r3, [fp, #-16]
   13788:	mov	r3, #1
   1378c:	strb	r3, [fp, #-26]	; 0xffffffe6
   13790:	b	13848 <__assert_fail@plt+0x22dc>
   13794:	mov	r3, #0
   13798:	str	r3, [fp, #-16]
   1379c:	b	137a4 <__assert_fail@plt+0x2238>
   137a0:	nop	{0}
   137a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   137a8:	cmp	r3, #0
   137ac:	bne	137f4 <__assert_fail@plt+0x2288>
   137b0:	movw	r3, #8784	; 0x2250
   137b4:	movt	r3, #3
   137b8:	ldr	r3, [r3]
   137bc:	cmp	r3, #0
   137c0:	bne	137f4 <__assert_fail@plt+0x2288>
   137c4:	movw	r0, #62888	; 0xf5a8
   137c8:	movt	r0, #1
   137cc:	bl	113a4 <gettext@plt>
   137d0:	mov	r3, r0
   137d4:	mov	r2, r3
   137d8:	mov	r1, #0
   137dc:	mov	r0, #0
   137e0:	bl	11314 <error@plt>
   137e4:	movw	r3, #8784	; 0x2250
   137e8:	movt	r3, #3
   137ec:	mov	r2, #1
   137f0:	str	r2, [r3]
   137f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   137f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   137fc:	cmp	r2, r3
   13800:	bcc	13828 <__assert_fail@plt+0x22bc>
   13804:	bl	14424 <__assert_fail@plt+0x2eb8>
   13808:	movw	r0, #63028	; 0xf634
   1380c:	movt	r0, #1
   13810:	bl	113a4 <gettext@plt>
   13814:	mov	r3, r0
   13818:	mov	r2, r3
   1381c:	mov	r1, #0
   13820:	mov	r0, #1
   13824:	bl	11314 <error@plt>
   13828:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1382c:	add	r2, r3, #1
   13830:	str	r2, [fp, #-32]	; 0xffffffe0
   13834:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13838:	uxtb	r2, r2
   1383c:	strb	r2, [r3]
   13840:	b	13130 <__assert_fail@plt+0x1bc4>
   13844:	nop	{0}
   13848:	b	13130 <__assert_fail@plt+0x1bc4>
   1384c:	mov	r0, r3
   13850:	sub	sp, fp, #8
   13854:	ldr	r4, [sp]
   13858:	ldr	fp, [sp, #4]
   1385c:	add	sp, sp, #8
   13860:	pop	{pc}		; (ldr pc, [sp], #4)
   13864:	str	fp, [sp, #-8]!
   13868:	str	lr, [sp, #4]
   1386c:	add	fp, sp, #4
   13870:	sub	sp, sp, #32
   13874:	movw	r3, #8684	; 0x21ec
   13878:	movt	r3, #3
   1387c:	ldr	r3, [r3]
   13880:	str	r3, [fp, #-8]
   13884:	movw	r3, #8684	; 0x21ec
   13888:	movt	r3, #3
   1388c:	ldr	r2, [r3]
   13890:	movw	r3, #8740	; 0x2224
   13894:	movt	r3, #3
   13898:	ldr	r1, [r3, #12]
   1389c:	movw	r3, #8696	; 0x21f8
   138a0:	movt	r3, #3
   138a4:	ldr	r3, [r3, #20]
   138a8:	sub	r3, r1, r3
   138ac:	sub	r3, r3, #1
   138b0:	add	r3, r2, r3
   138b4:	str	r3, [fp, #-12]
   138b8:	movw	r3, #8833	; 0x2281
   138bc:	movt	r3, #3
   138c0:	ldrb	r3, [r3]
   138c4:	cmp	r3, #0
   138c8:	beq	138d4 <__assert_fail@plt+0x2368>
   138cc:	mvn	r3, #0
   138d0:	b	13ad0 <__assert_fail@plt+0x2564>
   138d4:	movw	r3, #8680	; 0x21e8
   138d8:	movt	r3, #3
   138dc:	ldr	r3, [r3]
   138e0:	mov	r0, r3
   138e4:	bl	11548 <getc@plt>
   138e8:	str	r0, [fp, #-16]
   138ec:	ldr	r3, [fp, #-16]
   138f0:	cmn	r3, #1
   138f4:	bne	139b8 <__assert_fail@plt+0x244c>
   138f8:	movw	r3, #8833	; 0x2281
   138fc:	movt	r3, #3
   13900:	mov	r2, #1
   13904:	strb	r2, [r3]
   13908:	movw	r3, #8684	; 0x21ec
   1390c:	movt	r3, #3
   13910:	ldr	r3, [r3]
   13914:	ldr	r2, [fp, #-8]
   13918:	cmp	r2, r3
   1391c:	bne	13928 <__assert_fail@plt+0x23bc>
   13920:	mvn	r3, #0
   13924:	b	13ad0 <__assert_fail@plt+0x2564>
   13928:	ldr	r3, [fp, #-8]
   1392c:	add	r2, r3, #1
   13930:	str	r2, [fp, #-8]
   13934:	mov	r2, #0
   13938:	strb	r2, [r3]
   1393c:	movw	r3, #8684	; 0x21ec
   13940:	movt	r3, #3
   13944:	ldr	r3, [r3]
   13948:	ldr	r2, [fp, #-8]
   1394c:	sub	r3, r2, r3
   13950:	str	r3, [fp, #-20]	; 0xffffffec
   13954:	movw	r3, #8740	; 0x2224
   13958:	movt	r3, #3
   1395c:	ldr	r3, [r3, #24]
   13960:	cmp	r3, #0
   13964:	bne	139b0 <__assert_fail@plt+0x2444>
   13968:	movw	r3, #8684	; 0x21ec
   1396c:	movt	r3, #3
   13970:	ldr	r2, [r3]
   13974:	ldr	r1, [fp, #-20]	; 0xffffffec
   13978:	movw	r3, #8548	; 0x2164
   1397c:	movt	r3, #3
   13980:	ldrb	r3, [r3]
   13984:	str	r3, [sp, #8]
   13988:	mov	r3, #0
   1398c:	str	r3, [sp, #4]
   13990:	mov	r3, #0
   13994:	str	r3, [sp]
   13998:	mov	r3, r1
   1399c:	movw	r1, #8696	; 0x21f8
   139a0:	movt	r1, #3
   139a4:	movw	r0, #8740	; 0x2224
   139a8:	movt	r0, #3
   139ac:	bl	159f8 <__assert_fail@plt+0x448c>
   139b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   139b4:	b	13ad0 <__assert_fail@plt+0x2564>
   139b8:	movw	r3, #8827	; 0x227b
   139bc:	movt	r3, #3
   139c0:	ldrb	r3, [r3]
   139c4:	mov	r2, r3
   139c8:	ldr	r3, [fp, #-16]
   139cc:	cmp	r3, r2
   139d0:	bne	13a80 <__assert_fail@plt+0x2514>
   139d4:	movw	r3, #8692	; 0x21f4
   139d8:	movt	r3, #3
   139dc:	ldr	r3, [r3]
   139e0:	add	r2, r3, #1
   139e4:	movw	r3, #8692	; 0x21f4
   139e8:	movt	r3, #3
   139ec:	str	r2, [r3]
   139f0:	ldr	r3, [fp, #-8]
   139f4:	add	r2, r3, #1
   139f8:	str	r2, [fp, #-8]
   139fc:	mov	r2, #0
   13a00:	strb	r2, [r3]
   13a04:	movw	r3, #8684	; 0x21ec
   13a08:	movt	r3, #3
   13a0c:	ldr	r3, [r3]
   13a10:	ldr	r2, [fp, #-8]
   13a14:	sub	r3, r2, r3
   13a18:	str	r3, [fp, #-20]	; 0xffffffec
   13a1c:	movw	r3, #8740	; 0x2224
   13a20:	movt	r3, #3
   13a24:	ldr	r3, [r3, #24]
   13a28:	cmp	r3, #0
   13a2c:	bne	13a78 <__assert_fail@plt+0x250c>
   13a30:	movw	r3, #8684	; 0x21ec
   13a34:	movt	r3, #3
   13a38:	ldr	r2, [r3]
   13a3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13a40:	movw	r3, #8548	; 0x2164
   13a44:	movt	r3, #3
   13a48:	ldrb	r3, [r3]
   13a4c:	str	r3, [sp, #8]
   13a50:	mov	r3, #0
   13a54:	str	r3, [sp, #4]
   13a58:	mov	r3, #0
   13a5c:	str	r3, [sp]
   13a60:	mov	r3, r1
   13a64:	movw	r1, #8696	; 0x21f8
   13a68:	movt	r1, #3
   13a6c:	movw	r0, #8740	; 0x2224
   13a70:	movt	r0, #3
   13a74:	bl	159f8 <__assert_fail@plt+0x448c>
   13a78:	ldr	r3, [fp, #-20]	; 0xffffffec
   13a7c:	b	13ad0 <__assert_fail@plt+0x2564>
   13a80:	ldr	r2, [fp, #-8]
   13a84:	ldr	r3, [fp, #-12]
   13a88:	cmp	r2, r3
   13a8c:	bcc	13ab4 <__assert_fail@plt+0x2548>
   13a90:	bl	14424 <__assert_fail@plt+0x2eb8>
   13a94:	movw	r0, #63028	; 0xf634
   13a98:	movt	r0, #1
   13a9c:	bl	113a4 <gettext@plt>
   13aa0:	mov	r3, r0
   13aa4:	mov	r2, r3
   13aa8:	mov	r1, #0
   13aac:	mov	r0, #1
   13ab0:	bl	11314 <error@plt>
   13ab4:	ldr	r3, [fp, #-8]
   13ab8:	add	r2, r3, #1
   13abc:	str	r2, [fp, #-8]
   13ac0:	ldr	r2, [fp, #-16]
   13ac4:	uxtb	r2, r2
   13ac8:	strb	r2, [r3]
   13acc:	b	138d4 <__assert_fail@plt+0x2368>
   13ad0:	mov	r0, r3
   13ad4:	sub	sp, fp, #4
   13ad8:	ldr	fp, [sp]
   13adc:	add	sp, sp, #4
   13ae0:	pop	{pc}		; (ldr pc, [sp], #4)
   13ae4:	strd	r4, [sp, #-16]!
   13ae8:	str	fp, [sp, #8]
   13aec:	str	lr, [sp, #12]
   13af0:	add	fp, sp, #12
   13af4:	sub	sp, sp, #24
   13af8:	mov	r3, r0
   13afc:	strb	r3, [fp, #-29]	; 0xffffffe3
   13b00:	mov	r3, #0
   13b04:	str	r3, [fp, #-16]
   13b08:	b	13bc0 <__assert_fail@plt+0x2654>
   13b0c:	movw	r3, #8656	; 0x21d0
   13b10:	movt	r3, #3
   13b14:	ldr	r5, [r3]
   13b18:	ldr	r3, [fp, #-16]
   13b1c:	cmp	r3, #0
   13b20:	bne	13b30 <__assert_fail@plt+0x25c4>
   13b24:	movw	r4, #61520	; 0xf050
   13b28:	movt	r4, #1
   13b2c:	b	13b38 <__assert_fail@plt+0x25cc>
   13b30:	movw	r4, #63052	; 0xf64c
   13b34:	movt	r4, #1
   13b38:	movw	r3, #8696	; 0x21f8
   13b3c:	movt	r3, #3
   13b40:	ldr	r2, [r3, #4]
   13b44:	ldr	r3, [fp, #-16]
   13b48:	lsl	r3, r3, #2
   13b4c:	add	r3, r2, r3
   13b50:	ldr	r3, [r3]
   13b54:	mov	r2, r3
   13b58:	mov	r1, #3
   13b5c:	mov	r0, #0
   13b60:	bl	1b138 <__assert_fail@plt+0x9bcc>
   13b64:	mov	r3, r0
   13b68:	mov	r2, r4
   13b6c:	movw	r1, #63056	; 0xf650
   13b70:	movt	r1, #1
   13b74:	mov	r0, r5
   13b78:	bl	113e0 <fprintf@plt>
   13b7c:	mov	r3, r0
   13b80:	cmp	r3, #0
   13b84:	bge	13bb4 <__assert_fail@plt+0x2648>
   13b88:	bl	113ec <__errno_location@plt>
   13b8c:	mov	r3, r0
   13b90:	ldr	r4, [r3]
   13b94:	movw	r0, #63064	; 0xf658
   13b98:	movt	r0, #1
   13b9c:	bl	113a4 <gettext@plt>
   13ba0:	mov	r3, r0
   13ba4:	mov	r2, r3
   13ba8:	mov	r1, r4
   13bac:	mov	r0, #1
   13bb0:	bl	11314 <error@plt>
   13bb4:	ldr	r3, [fp, #-16]
   13bb8:	add	r3, r3, #1
   13bbc:	str	r3, [fp, #-16]
   13bc0:	movw	r3, #8696	; 0x21f8
   13bc4:	movt	r3, #3
   13bc8:	ldr	r3, [r3]
   13bcc:	sub	r3, r3, #1
   13bd0:	ldr	r2, [fp, #-16]
   13bd4:	cmp	r2, r3
   13bd8:	bcc	13b0c <__assert_fail@plt+0x25a0>
   13bdc:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   13be0:	cmp	r3, #0
   13be4:	beq	13d70 <__assert_fail@plt+0x2804>
   13be8:	movw	r3, #8836	; 0x2284
   13bec:	movt	r3, #3
   13bf0:	ldr	r3, [r3]
   13bf4:	cmp	r3, #0
   13bf8:	bne	13c58 <__assert_fail@plt+0x26ec>
   13bfc:	movw	r0, #63092	; 0xf674
   13c00:	movt	r0, #1
   13c04:	bl	11a30 <__assert_fail@plt+0x4c4>
   13c08:	mov	r2, r0
   13c0c:	movw	r3, #8836	; 0x2284
   13c10:	movt	r3, #3
   13c14:	str	r2, [r3]
   13c18:	movw	r3, #8836	; 0x2284
   13c1c:	movt	r3, #3
   13c20:	ldr	r3, [r3]
   13c24:	cmp	r3, #0
   13c28:	bne	13c58 <__assert_fail@plt+0x26ec>
   13c2c:	bl	113ec <__errno_location@plt>
   13c30:	mov	r3, r0
   13c34:	ldr	r4, [r3]
   13c38:	movw	r0, #63104	; 0xf680
   13c3c:	movt	r0, #1
   13c40:	bl	113a4 <gettext@plt>
   13c44:	mov	r3, r0
   13c48:	mov	r2, r3
   13c4c:	mov	r1, r4
   13c50:	mov	r0, #1
   13c54:	bl	11314 <error@plt>
   13c58:	movw	r3, #8656	; 0x21d0
   13c5c:	movt	r3, #3
   13c60:	ldr	r3, [r3]
   13c64:	mov	r2, #4
   13c68:	mov	r1, #1
   13c6c:	movw	r0, #63140	; 0xf6a4
   13c70:	movt	r0, #1
   13c74:	bl	112c0 <fwrite@plt>
   13c78:	movw	r3, #8656	; 0x21d0
   13c7c:	movt	r3, #3
   13c80:	ldr	r3, [r3]
   13c84:	mov	r0, r3
   13c88:	bl	1d6f4 <__assert_fail@plt+0xc188>
   13c8c:	mov	r3, r0
   13c90:	cmp	r3, #0
   13c94:	beq	13cc4 <__assert_fail@plt+0x2758>
   13c98:	bl	113ec <__errno_location@plt>
   13c9c:	mov	r3, r0
   13ca0:	ldr	r4, [r3]
   13ca4:	movw	r0, #63064	; 0xf658
   13ca8:	movt	r0, #1
   13cac:	bl	113a4 <gettext@plt>
   13cb0:	mov	r3, r0
   13cb4:	mov	r2, r3
   13cb8:	mov	r1, r4
   13cbc:	mov	r0, #1
   13cc0:	bl	11314 <error@plt>
   13cc4:	movw	r3, #8836	; 0x2284
   13cc8:	movt	r3, #3
   13ccc:	ldr	r3, [r3]
   13cd0:	mov	r0, r3
   13cd4:	bl	11548 <getc@plt>
   13cd8:	str	r0, [fp, #-24]	; 0xffffffe8
   13cdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13ce0:	str	r3, [fp, #-20]	; 0xffffffec
   13ce4:	b	13d00 <__assert_fail@plt+0x2794>
   13ce8:	movw	r3, #8836	; 0x2284
   13cec:	movt	r3, #3
   13cf0:	ldr	r3, [r3]
   13cf4:	mov	r0, r3
   13cf8:	bl	11548 <getc@plt>
   13cfc:	str	r0, [fp, #-20]	; 0xffffffec
   13d00:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d04:	cmn	r3, #1
   13d08:	beq	13d18 <__assert_fail@plt+0x27ac>
   13d0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d10:	cmp	r3, #10
   13d14:	bne	13ce8 <__assert_fail@plt+0x277c>
   13d18:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d1c:	cmn	r3, #1
   13d20:	bne	13d50 <__assert_fail@plt+0x27e4>
   13d24:	bl	113ec <__errno_location@plt>
   13d28:	mov	r3, r0
   13d2c:	ldr	r4, [r3]
   13d30:	movw	r0, #63148	; 0xf6ac
   13d34:	movt	r0, #1
   13d38:	bl	113a4 <gettext@plt>
   13d3c:	mov	r3, r0
   13d40:	mov	r2, r3
   13d44:	mov	r1, r4
   13d48:	mov	r0, #1
   13d4c:	bl	11314 <error@plt>
   13d50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13d54:	cmp	r3, #121	; 0x79
   13d58:	beq	13d68 <__assert_fail@plt+0x27fc>
   13d5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13d60:	cmp	r3, #89	; 0x59
   13d64:	bne	13d88 <__assert_fail@plt+0x281c>
   13d68:	mov	r3, #1
   13d6c:	b	13d8c <__assert_fail@plt+0x2820>
   13d70:	movw	r3, #8656	; 0x21d0
   13d74:	movt	r3, #3
   13d78:	ldr	r3, [r3]
   13d7c:	mov	r1, r3
   13d80:	mov	r0, #10
   13d84:	bl	114e8 <putc@plt>
   13d88:	mov	r3, #0
   13d8c:	mov	r0, r3
   13d90:	sub	sp, fp, #12
   13d94:	ldrd	r4, [sp]
   13d98:	ldr	fp, [sp, #8]
   13d9c:	add	sp, sp, #12
   13da0:	pop	{pc}		; (ldr pc, [sp], #4)
   13da4:	str	r4, [sp, #-12]!
   13da8:	str	fp, [sp, #4]
   13dac:	str	lr, [sp, #8]
   13db0:	add	fp, sp, #8
   13db4:	sub	sp, sp, #36	; 0x24
   13db8:	str	r0, [fp, #-40]	; 0xffffffd8
   13dbc:	sub	r0, fp, #32
   13dc0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13dc4:	movw	r2, #63176	; 0xf6c8
   13dc8:	movt	r2, #1
   13dcc:	mov	r1, #19
   13dd0:	bl	113f8 <snprintf@plt>
   13dd4:	mov	r3, r0
   13dd8:	cmp	r3, #19
   13ddc:	bls	13e00 <__assert_fail@plt+0x2894>
   13de0:	movw	r3, #1320	; 0x528
   13de4:	movt	r3, #2
   13de8:	movw	r2, #1190	; 0x4a6
   13dec:	movw	r1, #60868	; 0xedc4
   13df0:	movt	r1, #1
   13df4:	movw	r0, #63180	; 0xf6cc
   13df8:	movt	r0, #1
   13dfc:	bl	1156c <__assert_fail@plt>
   13e00:	movw	r3, #8828	; 0x227c
   13e04:	movt	r3, #3
   13e08:	ldr	r3, [r3]
   13e0c:	cmp	r3, #0
   13e10:	beq	13e70 <__assert_fail@plt+0x2904>
   13e14:	movw	r3, #8828	; 0x227c
   13e18:	movt	r3, #3
   13e1c:	ldr	r3, [r3]
   13e20:	sub	r1, fp, #32
   13e24:	mov	r2, #1
   13e28:	mov	r0, r3
   13e2c:	bl	113d4 <setenv@plt>
   13e30:	mov	r3, r0
   13e34:	cmp	r3, #0
   13e38:	bge	13e70 <__assert_fail@plt+0x2904>
   13e3c:	bl	113ec <__errno_location@plt>
   13e40:	mov	r3, r0
   13e44:	ldr	r4, [r3]
   13e48:	movw	r0, #63240	; 0xf708
   13e4c:	movt	r0, #1
   13e50:	bl	113a4 <gettext@plt>
   13e54:	mov	r2, r0
   13e58:	movw	r3, #8828	; 0x227c
   13e5c:	movt	r3, #3
   13e60:	ldr	r3, [r3]
   13e64:	mov	r1, r4
   13e68:	mov	r0, #0
   13e6c:	bl	11314 <error@plt>
   13e70:	nop	{0}
   13e74:	sub	sp, fp, #8
   13e78:	ldr	r4, [sp]
   13e7c:	ldr	fp, [sp, #4]
   13e80:	add	sp, sp, #8
   13e84:	pop	{pc}		; (ldr pc, [sp], #4)
   13e88:	str	r4, [sp, #-12]!
   13e8c:	str	fp, [sp, #4]
   13e90:	str	lr, [sp, #8]
   13e94:	add	fp, sp, #8
   13e98:	sub	sp, sp, #20
   13e9c:	bl	16c2c <__assert_fail@plt+0x56c0>
   13ea0:	mov	r3, r0
   13ea4:	cmp	r3, #0
   13ea8:	beq	13eb0 <__assert_fail@plt+0x2944>
   13eac:	bl	16c70 <__assert_fail@plt+0x5704>
   13eb0:	mov	r0, #0
   13eb4:	bl	144b8 <__assert_fail@plt+0x2f4c>
   13eb8:	str	r0, [fp, #-16]
   13ebc:	ldr	r0, [fp, #-16]
   13ec0:	bl	13da4 <__assert_fail@plt+0x2838>
   13ec4:	movw	r3, #8688	; 0x21f0
   13ec8:	movt	r3, #3
   13ecc:	ldr	r3, [r3]
   13ed0:	cmp	r3, #0
   13ed4:	beq	13eec <__assert_fail@plt+0x2980>
   13ed8:	movw	r3, #8824	; 0x2278
   13edc:	movt	r3, #3
   13ee0:	ldrb	r3, [r3]
   13ee4:	cmp	r3, #0
   13ee8:	beq	14010 <__assert_fail@plt+0x2aa4>
   13eec:	movw	r3, #8824	; 0x2278
   13ef0:	movt	r3, #3
   13ef4:	ldrb	r3, [r3]
   13ef8:	cmp	r3, #0
   13efc:	beq	13f0c <__assert_fail@plt+0x29a0>
   13f00:	movw	r3, #63092	; 0xf674
   13f04:	movt	r3, #1
   13f08:	b	13f14 <__assert_fail@plt+0x29a8>
   13f0c:	movw	r3, #63280	; 0xf730
   13f10:	movt	r3, #1
   13f14:	str	r3, [fp, #-20]	; 0xffffffec
   13f18:	mov	r0, #0
   13f1c:	bl	11554 <close@plt>
   13f20:	mov	r1, #0
   13f24:	ldr	r0, [fp, #-20]	; 0xffffffec
   13f28:	bl	1777c <__assert_fail@plt+0x6210>
   13f2c:	str	r0, [fp, #-24]	; 0xffffffe8
   13f30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f34:	cmp	r3, #0
   13f38:	bge	13fb8 <__assert_fail@plt+0x2a4c>
   13f3c:	movw	r3, #8824	; 0x2278
   13f40:	movt	r3, #3
   13f44:	ldrb	r3, [r3]
   13f48:	cmp	r3, #0
   13f4c:	beq	13f84 <__assert_fail@plt+0x2a18>
   13f50:	bl	113ec <__errno_location@plt>
   13f54:	mov	r3, r0
   13f58:	ldr	r4, [r3]
   13f5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13f60:	mov	r1, #8
   13f64:	mov	r0, #0
   13f68:	bl	1b138 <__assert_fail@plt+0x9bcc>
   13f6c:	mov	r3, r0
   13f70:	movw	r2, #63292	; 0xf73c
   13f74:	movt	r2, #1
   13f78:	mov	r1, r4
   13f7c:	mov	r0, #1
   13f80:	bl	11314 <error@plt>
   13f84:	bl	113ec <__errno_location@plt>
   13f88:	mov	r3, r0
   13f8c:	ldr	r4, [r3]
   13f90:	ldr	r2, [fp, #-20]	; 0xffffffec
   13f94:	mov	r1, #8
   13f98:	mov	r0, #0
   13f9c:	bl	1b138 <__assert_fail@plt+0x9bcc>
   13fa0:	mov	r3, r0
   13fa4:	movw	r2, #63292	; 0xf73c
   13fa8:	movt	r2, #1
   13fac:	mov	r1, r4
   13fb0:	mov	r0, #0
   13fb4:	bl	11314 <error@plt>
   13fb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13fbc:	cmp	r3, #0
   13fc0:	ble	14010 <__assert_fail@plt+0x2aa4>
   13fc4:	mov	r1, #0
   13fc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13fcc:	bl	11260 <dup2@plt>
   13fd0:	mov	r3, r0
   13fd4:	cmp	r3, #0
   13fd8:	beq	14008 <__assert_fail@plt+0x2a9c>
   13fdc:	bl	113ec <__errno_location@plt>
   13fe0:	mov	r3, r0
   13fe4:	ldr	r4, [r3]
   13fe8:	movw	r0, #63296	; 0xf740
   13fec:	movt	r0, #1
   13ff0:	bl	113a4 <gettext@plt>
   13ff4:	mov	r3, r0
   13ff8:	mov	r2, r3
   13ffc:	mov	r1, r4
   14000:	mov	r0, #1
   14004:	bl	11314 <error@plt>
   14008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1400c:	bl	11554 <close@plt>
   14010:	nop	{0}
   14014:	sub	sp, fp, #8
   14018:	ldr	r4, [sp]
   1401c:	ldr	fp, [sp, #4]
   14020:	add	sp, sp, #8
   14024:	pop	{pc}		; (ldr pc, [sp], #4)
   14028:	str	r4, [sp, #-12]!
   1402c:	str	fp, [sp, #4]
   14030:	str	lr, [sp, #8]
   14034:	add	fp, sp, #8
   14038:	sub	sp, sp, #44	; 0x2c
   1403c:	str	r0, [fp, #-40]	; 0xffffffd8
   14040:	str	r1, [fp, #-44]	; 0xffffffd4
   14044:	str	r2, [fp, #-48]	; 0xffffffd0
   14048:	str	r3, [fp, #-52]	; 0xffffffcc
   1404c:	movw	r3, #8552	; 0x2168
   14050:	movt	r3, #3
   14054:	ldr	r3, [r3]
   14058:	cmp	r3, #0
   1405c:	beq	14090 <__assert_fail@plt+0x2b24>
   14060:	b	14070 <__assert_fail@plt+0x2b04>
   14064:	mov	r1, #1
   14068:	mov	r0, #0
   1406c:	bl	14660 <__assert_fail@plt+0x30f4>
   14070:	movw	r3, #8796	; 0x225c
   14074:	movt	r3, #3
   14078:	ldr	r2, [r3]
   1407c:	movw	r3, #8552	; 0x2168
   14080:	movt	r3, #3
   14084:	ldr	r3, [r3]
   14088:	cmp	r2, r3
   1408c:	bcs	14064 <__assert_fail@plt+0x2af8>
   14090:	movw	r3, #8826	; 0x227a
   14094:	movt	r3, #3
   14098:	ldrb	r3, [r3]
   1409c:	eor	r3, r3, #1
   140a0:	uxtb	r3, r3
   140a4:	cmp	r3, #0
   140a8:	bne	140c0 <__assert_fail@plt+0x2b54>
   140ac:	mov	r0, #1
   140b0:	bl	13ae4 <__assert_fail@plt+0x2578>
   140b4:	mov	r3, r0
   140b8:	cmp	r3, #0
   140bc:	beq	14408 <__assert_fail@plt+0x2e9c>
   140c0:	movw	r3, #8826	; 0x227a
   140c4:	movt	r3, #3
   140c8:	ldrb	r3, [r3]
   140cc:	eor	r3, r3, #1
   140d0:	uxtb	r3, r3
   140d4:	cmp	r3, #0
   140d8:	beq	140f8 <__assert_fail@plt+0x2b8c>
   140dc:	movw	r3, #8825	; 0x2279
   140e0:	movt	r3, #3
   140e4:	ldrb	r3, [r3]
   140e8:	cmp	r3, #0
   140ec:	beq	140f8 <__assert_fail@plt+0x2b8c>
   140f0:	mov	r0, #0
   140f4:	bl	13ae4 <__assert_fail@plt+0x2578>
   140f8:	mov	r1, #0
   140fc:	mov	r0, #0
   14100:	bl	14660 <__assert_fail@plt+0x30f4>
   14104:	sub	r3, fp, #28
   14108:	mov	r0, r3
   1410c:	bl	1b89c <__assert_fail@plt+0xa330>
   14110:	mov	r3, r0
   14114:	cmp	r3, #0
   14118:	beq	14148 <__assert_fail@plt+0x2bdc>
   1411c:	bl	113ec <__errno_location@plt>
   14120:	mov	r3, r0
   14124:	ldr	r4, [r3]
   14128:	movw	r0, #63352	; 0xf778
   1412c:	movt	r0, #1
   14130:	bl	113a4 <gettext@plt>
   14134:	mov	r3, r0
   14138:	mov	r2, r3
   1413c:	mov	r1, r4
   14140:	mov	r0, #1
   14144:	bl	11314 <error@plt>
   14148:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1414c:	mov	r2, #1
   14150:	mov	r1, #2
   14154:	mov	r0, r3
   14158:	bl	1d2bc <__assert_fail@plt+0xbd50>
   1415c:	b	1416c <__assert_fail@plt+0x2c00>
   14160:	mov	r1, #1
   14164:	mov	r0, #0
   14168:	bl	14660 <__assert_fail@plt+0x30f4>
   1416c:	bl	114a0 <fork@plt>
   14170:	mov	r3, r0
   14174:	str	r3, [fp, #-16]
   14178:	ldr	r3, [fp, #-16]
   1417c:	cmp	r3, #0
   14180:	bge	141ac <__assert_fail@plt+0x2c40>
   14184:	bl	113ec <__errno_location@plt>
   14188:	mov	r3, r0
   1418c:	ldr	r3, [r3]
   14190:	cmp	r3, #11
   14194:	bne	141ac <__assert_fail@plt+0x2c40>
   14198:	movw	r3, #8796	; 0x225c
   1419c:	movt	r3, #3
   141a0:	ldr	r3, [r3]
   141a4:	cmp	r3, #0
   141a8:	bne	14160 <__assert_fail@plt+0x2bf4>
   141ac:	ldr	r3, [fp, #-16]
   141b0:	cmn	r3, #1
   141b4:	beq	141c8 <__assert_fail@plt+0x2c5c>
   141b8:	ldr	r3, [fp, #-16]
   141bc:	cmp	r3, #0
   141c0:	beq	141f4 <__assert_fail@plt+0x2c88>
   141c4:	b	142ec <__assert_fail@plt+0x2d80>
   141c8:	bl	113ec <__errno_location@plt>
   141cc:	mov	r3, r0
   141d0:	ldr	r4, [r3]
   141d4:	movw	r0, #63388	; 0xf79c
   141d8:	movt	r0, #1
   141dc:	bl	113a4 <gettext@plt>
   141e0:	mov	r3, r0
   141e4:	mov	r2, r3
   141e8:	mov	r1, r4
   141ec:	mov	r0, #1
   141f0:	bl	11314 <error@plt>
   141f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   141f8:	mov	r0, r3
   141fc:	bl	11554 <close@plt>
   14200:	movw	r3, #8816	; 0x2270
   14204:	movt	r3, #3
   14208:	mov	r2, #0
   1420c:	str	r2, [r3]
   14210:	bl	13e88 <__assert_fail@plt+0x291c>
   14214:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14218:	bl	16284 <__assert_fail@plt+0x4d18>
   1421c:	mov	r3, r0
   14220:	cmp	r3, #0
   14224:	beq	1423c <__assert_fail@plt+0x2cd0>
   14228:	bl	113ec <__errno_location@plt>
   1422c:	mov	r2, r0
   14230:	mov	r3, #7
   14234:	str	r3, [r2]
   14238:	b	14250 <__assert_fail@plt+0x2ce4>
   1423c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14240:	ldr	r3, [r3]
   14244:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14248:	mov	r0, r3
   1424c:	bl	11224 <execvp@plt>
   14250:	bl	113ec <__errno_location@plt>
   14254:	mov	r3, r0
   14258:	ldr	r3, [r3]
   1425c:	cmp	r3, #0
   14260:	beq	14280 <__assert_fail@plt+0x2d14>
   14264:	ldr	r4, [fp, #-24]	; 0xffffffe8
   14268:	bl	113ec <__errno_location@plt>
   1426c:	mov	r3, r0
   14270:	mov	r2, #4
   14274:	mov	r1, r3
   14278:	mov	r0, r4
   1427c:	bl	11428 <write@plt>
   14280:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14284:	mov	r0, r3
   14288:	bl	11554 <close@plt>
   1428c:	bl	113ec <__errno_location@plt>
   14290:	mov	r3, r0
   14294:	ldr	r3, [r3]
   14298:	cmp	r3, #7
   1429c:	beq	142c4 <__assert_fail@plt+0x2d58>
   142a0:	bl	113ec <__errno_location@plt>
   142a4:	mov	r3, r0
   142a8:	ldr	r1, [r3]
   142ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   142b0:	ldr	r3, [r3]
   142b4:	movw	r2, #63292	; 0xf73c
   142b8:	movt	r2, #1
   142bc:	mov	r0, #0
   142c0:	bl	11314 <error@plt>
   142c4:	bl	113ec <__errno_location@plt>
   142c8:	mov	r3, r0
   142cc:	ldr	r3, [r3]
   142d0:	cmp	r3, #2
   142d4:	bne	142e0 <__assert_fail@plt+0x2d74>
   142d8:	mov	r3, #127	; 0x7f
   142dc:	b	142e4 <__assert_fail@plt+0x2d78>
   142e0:	mov	r3, #126	; 0x7e
   142e4:	mov	r0, r3
   142e8:	bl	1120c <_exit@plt>
   142ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   142f0:	mov	r0, r3
   142f4:	bl	11554 <close@plt>
   142f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   142fc:	sub	r1, fp, #32
   14300:	mov	r2, #4
   14304:	mov	r0, r3
   14308:	bl	1b704 <__assert_fail@plt+0xa198>
   1430c:	str	r0, [fp, #-20]	; 0xffffffec
   14310:	ldr	r3, [fp, #-20]	; 0xffffffec
   14314:	cmp	r3, #4
   14318:	beq	14374 <__assert_fail@plt+0x2e08>
   1431c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14320:	cmn	r3, #1
   14324:	beq	14338 <__assert_fail@plt+0x2dcc>
   14328:	ldr	r3, [fp, #-20]	; 0xffffffec
   1432c:	cmp	r3, #0
   14330:	beq	143c4 <__assert_fail@plt+0x2e58>
   14334:	b	143d0 <__assert_fail@plt+0x2e64>
   14338:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1433c:	mov	r0, r3
   14340:	bl	11554 <close@plt>
   14344:	bl	113ec <__errno_location@plt>
   14348:	mov	r3, r0
   1434c:	ldr	r4, [r3]
   14350:	movw	r0, #63400	; 0xf7a8
   14354:	movt	r0, #1
   14358:	bl	113a4 <gettext@plt>
   1435c:	mov	r3, r0
   14360:	mov	r2, r3
   14364:	mov	r1, r4
   14368:	mov	r0, #0
   1436c:	bl	11314 <error@plt>
   14370:	b	143fc <__assert_fail@plt+0x2e90>
   14374:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14378:	mov	r0, r3
   1437c:	bl	11554 <close@plt>
   14380:	sub	r3, fp, #36	; 0x24
   14384:	mov	r2, #0
   14388:	mov	r1, r3
   1438c:	ldr	r0, [fp, #-16]
   14390:	bl	112d8 <waitpid@plt>
   14394:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14398:	cmp	r3, #7
   1439c:	bne	143a8 <__assert_fail@plt+0x2e3c>
   143a0:	mov	r3, #0
   143a4:	b	1440c <__assert_fail@plt+0x2ea0>
   143a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   143ac:	cmp	r3, #2
   143b0:	bne	143bc <__assert_fail@plt+0x2e50>
   143b4:	mov	r0, #127	; 0x7f
   143b8:	bl	11398 <exit@plt>
   143bc:	mov	r0, #126	; 0x7e
   143c0:	bl	11398 <exit@plt>
   143c4:	ldr	r0, [fp, #-16]
   143c8:	bl	144b8 <__assert_fail@plt+0x2f4c>
   143cc:	b	143fc <__assert_fail@plt+0x2e90>
   143d0:	bl	113ec <__errno_location@plt>
   143d4:	mov	r3, r0
   143d8:	ldr	r4, [r3]
   143dc:	movw	r0, #63492	; 0xf804
   143e0:	movt	r0, #1
   143e4:	bl	113a4 <gettext@plt>
   143e8:	mov	r2, r0
   143ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   143f0:	mov	r1, r4
   143f4:	mov	r0, #1
   143f8:	bl	11314 <error@plt>
   143fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14400:	mov	r0, r3
   14404:	bl	11554 <close@plt>
   14408:	mov	r3, #1
   1440c:	mov	r0, r3
   14410:	sub	sp, fp, #8
   14414:	ldr	r4, [sp]
   14418:	ldr	fp, [sp, #4]
   1441c:	add	sp, sp, #8
   14420:	pop	{pc}		; (ldr pc, [sp], #4)
   14424:	str	fp, [sp, #-8]!
   14428:	str	lr, [sp, #4]
   1442c:	add	fp, sp, #4
   14430:	movw	r3, #8740	; 0x2224
   14434:	movt	r3, #3
   14438:	ldr	r3, [r3, #24]
   1443c:	cmp	r3, #0
   14440:	bne	144a4 <__assert_fail@plt+0x2f38>
   14444:	movw	r3, #8548	; 0x2164
   14448:	movt	r3, #3
   1444c:	ldrb	r3, [r3]
   14450:	cmp	r3, #0
   14454:	bne	144a4 <__assert_fail@plt+0x2f38>
   14458:	movw	r3, #8696	; 0x21f8
   1445c:	movt	r3, #3
   14460:	ldr	r2, [r3]
   14464:	movw	r3, #8740	; 0x2224
   14468:	movt	r3, #3
   1446c:	ldr	r3, [r3, #28]
   14470:	cmp	r2, r3
   14474:	beq	144a4 <__assert_fail@plt+0x2f38>
   14478:	movw	r3, #8740	; 0x2224
   1447c:	movt	r3, #3
   14480:	ldr	r3, [r3]
   14484:	cmp	r3, #0
   14488:	bne	144a4 <__assert_fail@plt+0x2f38>
   1448c:	movw	r1, #8696	; 0x21f8
   14490:	movt	r1, #3
   14494:	movw	r0, #8740	; 0x2224
   14498:	movt	r0, #3
   1449c:	bl	15770 <__assert_fail@plt+0x4204>
   144a0:	b	144a8 <__assert_fail@plt+0x2f3c>
   144a4:	nop	{0}
   144a8:	sub	sp, fp, #4
   144ac:	ldr	fp, [sp]
   144b0:	add	sp, sp, #4
   144b4:	pop	{pc}		; (ldr pc, [sp], #4)
   144b8:	str	fp, [sp, #-8]!
   144bc:	str	lr, [sp, #4]
   144c0:	add	fp, sp, #4
   144c4:	sub	sp, sp, #16
   144c8:	str	r0, [fp, #-16]
   144cc:	mov	r3, #0
   144d0:	str	r3, [fp, #-8]
   144d4:	b	144e4 <__assert_fail@plt+0x2f78>
   144d8:	ldr	r3, [fp, #-8]
   144dc:	add	r3, r3, #1
   144e0:	str	r3, [fp, #-8]
   144e4:	movw	r3, #8804	; 0x2264
   144e8:	movt	r3, #3
   144ec:	ldr	r3, [r3]
   144f0:	ldr	r2, [fp, #-8]
   144f4:	cmp	r2, r3
   144f8:	bcs	14520 <__assert_fail@plt+0x2fb4>
   144fc:	movw	r3, #8800	; 0x2260
   14500:	movt	r3, #3
   14504:	ldr	r2, [r3]
   14508:	ldr	r3, [fp, #-8]
   1450c:	lsl	r3, r3, #2
   14510:	add	r3, r2, r3
   14514:	ldr	r3, [r3]
   14518:	cmp	r3, #0
   1451c:	bne	144d8 <__assert_fail@plt+0x2f6c>
   14520:	movw	r3, #8804	; 0x2264
   14524:	movt	r3, #3
   14528:	ldr	r3, [r3]
   1452c:	ldr	r2, [fp, #-8]
   14530:	cmp	r2, r3
   14534:	bne	145b8 <__assert_fail@plt+0x304c>
   14538:	movw	r3, #8800	; 0x2260
   1453c:	movt	r3, #3
   14540:	ldr	r3, [r3]
   14544:	mov	r2, #4
   14548:	movw	r1, #8804	; 0x2264
   1454c:	movt	r1, #3
   14550:	mov	r0, r3
   14554:	bl	1c4e8 <__assert_fail@plt+0xaf7c>
   14558:	mov	r2, r0
   1455c:	movw	r3, #8800	; 0x2260
   14560:	movt	r3, #3
   14564:	str	r2, [r3]
   14568:	ldr	r3, [fp, #-8]
   1456c:	str	r3, [fp, #-12]
   14570:	b	145a0 <__assert_fail@plt+0x3034>
   14574:	movw	r3, #8800	; 0x2260
   14578:	movt	r3, #3
   1457c:	ldr	r2, [r3]
   14580:	ldr	r3, [fp, #-12]
   14584:	lsl	r3, r3, #2
   14588:	add	r3, r2, r3
   1458c:	mov	r2, #0
   14590:	str	r2, [r3]
   14594:	ldr	r3, [fp, #-12]
   14598:	add	r3, r3, #1
   1459c:	str	r3, [fp, #-12]
   145a0:	movw	r3, #8804	; 0x2264
   145a4:	movt	r3, #3
   145a8:	ldr	r3, [r3]
   145ac:	ldr	r2, [fp, #-12]
   145b0:	cmp	r2, r3
   145b4:	bcc	14574 <__assert_fail@plt+0x3008>
   145b8:	movw	r3, #8800	; 0x2260
   145bc:	movt	r3, #3
   145c0:	ldr	r2, [r3]
   145c4:	ldr	r3, [fp, #-8]
   145c8:	lsl	r3, r3, #2
   145cc:	add	r3, r2, r3
   145d0:	ldr	r3, [r3]
   145d4:	cmp	r3, #0
   145d8:	beq	145fc <__assert_fail@plt+0x3090>
   145dc:	movw	r3, #1336	; 0x538
   145e0:	movt	r3, #2
   145e4:	movw	r2, #1477	; 0x5c5
   145e8:	movw	r1, #60868	; 0xedc4
   145ec:	movt	r1, #1
   145f0:	movw	r0, #63572	; 0xf854
   145f4:	movt	r0, #1
   145f8:	bl	1156c <__assert_fail@plt>
   145fc:	movw	r3, #8800	; 0x2260
   14600:	movt	r3, #3
   14604:	ldr	r2, [r3]
   14608:	ldr	r3, [fp, #-8]
   1460c:	lsl	r3, r3, #2
   14610:	add	r3, r2, r3
   14614:	ldr	r2, [fp, #-16]
   14618:	str	r2, [r3]
   1461c:	movw	r3, #8796	; 0x225c
   14620:	movt	r3, #3
   14624:	ldr	r3, [r3]
   14628:	add	r2, r3, #1
   1462c:	movw	r3, #8796	; 0x225c
   14630:	movt	r3, #3
   14634:	str	r2, [r3]
   14638:	movw	r3, #8792	; 0x2258
   1463c:	movt	r3, #3
   14640:	mov	r2, #1
   14644:	strb	r2, [r3]
   14648:	ldr	r3, [fp, #-8]
   1464c:	mov	r0, r3
   14650:	sub	sp, fp, #4
   14654:	ldr	fp, [sp]
   14658:	add	sp, sp, #4
   1465c:	pop	{pc}		; (ldr pc, [sp], #4)
   14660:	str	r4, [sp, #-12]!
   14664:	str	fp, [sp, #4]
   14668:	str	lr, [sp, #8]
   1466c:	add	fp, sp, #8
   14670:	sub	sp, sp, #44	; 0x2c
   14674:	mov	r3, r0
   14678:	str	r1, [fp, #-44]	; 0xffffffd4
   1467c:	strb	r3, [fp, #-37]	; 0xffffffdb
   14680:	mov	r3, #0
   14684:	str	r3, [fp, #-16]
   14688:	b	149a4 <__assert_fail@plt+0x3438>
   1468c:	mov	r3, #0
   14690:	str	r3, [fp, #-24]	; 0xffffffe8
   14694:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   14698:	eor	r3, r3, #1
   1469c:	uxtb	r3, r3
   146a0:	cmp	r3, #0
   146a4:	beq	146c0 <__assert_fail@plt+0x3154>
   146a8:	ldr	r2, [fp, #-16]
   146ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   146b0:	cmp	r2, r3
   146b4:	bcc	146c0 <__assert_fail@plt+0x3154>
   146b8:	mov	r3, #1
   146bc:	str	r3, [fp, #-24]	; 0xffffffe8
   146c0:	movw	r3, #8812	; 0x226c
   146c4:	movt	r3, #3
   146c8:	mov	r2, #0
   146cc:	str	r2, [r3]
   146d0:	b	14744 <__assert_fail@plt+0x31d8>
   146d4:	bl	113ec <__errno_location@plt>
   146d8:	mov	r3, r0
   146dc:	ldr	r3, [r3]
   146e0:	cmp	r3, #4
   146e4:	beq	14714 <__assert_fail@plt+0x31a8>
   146e8:	bl	113ec <__errno_location@plt>
   146ec:	mov	r3, r0
   146f0:	ldr	r4, [r3]
   146f4:	movw	r0, #63588	; 0xf864
   146f8:	movt	r0, #1
   146fc:	bl	113a4 <gettext@plt>
   14700:	mov	r3, r0
   14704:	mov	r2, r3
   14708:	mov	r1, r4
   1470c:	mov	r0, #1
   14710:	bl	11314 <error@plt>
   14714:	movw	r3, #8812	; 0x226c
   14718:	movt	r3, #3
   1471c:	ldr	r3, [r3]
   14720:	cmp	r3, #0
   14724:	beq	14744 <__assert_fail@plt+0x31d8>
   14728:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1472c:	eor	r3, r3, #1
   14730:	uxtb	r3, r3
   14734:	cmp	r3, #0
   14738:	beq	14744 <__assert_fail@plt+0x31d8>
   1473c:	mov	r3, #1
   14740:	str	r3, [fp, #-24]	; 0xffffffe8
   14744:	sub	r3, fp, #32
   14748:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1474c:	mov	r1, r3
   14750:	mvn	r0, #0
   14754:	bl	112d8 <waitpid@plt>
   14758:	str	r0, [fp, #-28]	; 0xffffffe4
   1475c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14760:	cmn	r3, #1
   14764:	beq	146d4 <__assert_fail@plt+0x3168>
   14768:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1476c:	cmp	r3, #0
   14770:	beq	147cc <__assert_fail@plt+0x3260>
   14774:	mov	r3, #0
   14778:	str	r3, [fp, #-20]	; 0xffffffec
   1477c:	b	1478c <__assert_fail@plt+0x3220>
   14780:	ldr	r3, [fp, #-20]	; 0xffffffec
   14784:	add	r3, r3, #1
   14788:	str	r3, [fp, #-20]	; 0xffffffec
   1478c:	movw	r3, #8804	; 0x2264
   14790:	movt	r3, #3
   14794:	ldr	r3, [r3]
   14798:	ldr	r2, [fp, #-20]	; 0xffffffec
   1479c:	cmp	r2, r3
   147a0:	bcs	147cc <__assert_fail@plt+0x3260>
   147a4:	movw	r3, #8800	; 0x2260
   147a8:	movt	r3, #3
   147ac:	ldr	r2, [r3]
   147b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   147b4:	lsl	r3, r3, #2
   147b8:	add	r3, r2, r3
   147bc:	ldr	r3, [r3]
   147c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   147c4:	cmp	r2, r3
   147c8:	bne	14780 <__assert_fail@plt+0x3214>
   147cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   147d0:	cmp	r3, #0
   147d4:	beq	147f0 <__assert_fail@plt+0x3284>
   147d8:	movw	r3, #8804	; 0x2264
   147dc:	movt	r3, #3
   147e0:	ldr	r3, [r3]
   147e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   147e8:	cmp	r2, r3
   147ec:	beq	14744 <__assert_fail@plt+0x31d8>
   147f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   147f4:	cmp	r3, #0
   147f8:	bne	14838 <__assert_fail@plt+0x32cc>
   147fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14800:	and	r3, r3, #1
   14804:	cmp	r3, #0
   14808:	bne	149bc <__assert_fail@plt+0x3450>
   1480c:	movw	r0, #63620	; 0xf884
   14810:	movt	r0, #1
   14814:	bl	113a4 <gettext@plt>
   14818:	mov	r2, r0
   1481c:	movw	r3, #8796	; 0x225c
   14820:	movt	r3, #3
   14824:	ldr	r3, [r3]
   14828:	mov	r1, #0
   1482c:	mov	r0, #0
   14830:	bl	11314 <error@plt>
   14834:	b	149c0 <__assert_fail@plt+0x3454>
   14838:	movw	r3, #8800	; 0x2260
   1483c:	movt	r3, #3
   14840:	ldr	r2, [r3]
   14844:	ldr	r3, [fp, #-20]	; 0xffffffec
   14848:	lsl	r3, r3, #2
   1484c:	add	r3, r2, r3
   14850:	mov	r2, #0
   14854:	str	r2, [r3]
   14858:	movw	r3, #8796	; 0x225c
   1485c:	movt	r3, #3
   14860:	ldr	r3, [r3]
   14864:	sub	r2, r3, #1
   14868:	movw	r3, #8796	; 0x225c
   1486c:	movt	r3, #3
   14870:	str	r2, [r3]
   14874:	ldr	r3, [fp, #-16]
   14878:	add	r3, r3, #1
   1487c:	str	r3, [fp, #-16]
   14880:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14884:	asr	r3, r3, #8
   14888:	uxtb	r3, r3
   1488c:	cmp	r3, #255	; 0xff
   14890:	bne	148c0 <__assert_fail@plt+0x3354>
   14894:	movw	r0, #63664	; 0xf8b0
   14898:	movt	r0, #1
   1489c:	bl	113a4 <gettext@plt>
   148a0:	mov	r2, r0
   148a4:	movw	r3, #8696	; 0x21f8
   148a8:	movt	r3, #3
   148ac:	ldr	r3, [r3, #4]
   148b0:	ldr	r3, [r3]
   148b4:	mov	r1, #0
   148b8:	mov	r0, #124	; 0x7c
   148bc:	bl	11314 <error@plt>
   148c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   148c4:	uxtb	r3, r3
   148c8:	cmp	r3, #127	; 0x7f
   148cc:	bne	14914 <__assert_fail@plt+0x33a8>
   148d0:	movw	r0, #63704	; 0xf8d8
   148d4:	movt	r0, #1
   148d8:	bl	113a4 <gettext@plt>
   148dc:	mov	r1, r0
   148e0:	movw	r3, #8696	; 0x21f8
   148e4:	movt	r3, #3
   148e8:	ldr	r3, [r3, #4]
   148ec:	ldr	r2, [r3]
   148f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   148f4:	asr	r3, r3, #8
   148f8:	uxtb	r3, r3
   148fc:	str	r3, [sp]
   14900:	mov	r3, r2
   14904:	mov	r2, r1
   14908:	mov	r1, #0
   1490c:	mov	r0, #125	; 0x7d
   14910:	bl	11314 <error@plt>
   14914:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14918:	uxtb	r3, r3
   1491c:	and	r3, r3, #127	; 0x7f
   14920:	uxtb	r3, r3
   14924:	add	r3, r3, #1
   14928:	uxtb	r3, r3
   1492c:	sxtb	r3, r3
   14930:	asr	r3, r3, #1
   14934:	sxtb	r3, r3
   14938:	cmp	r3, #0
   1493c:	ble	14980 <__assert_fail@plt+0x3414>
   14940:	movw	r0, #63732	; 0xf8f4
   14944:	movt	r0, #1
   14948:	bl	113a4 <gettext@plt>
   1494c:	mov	r1, r0
   14950:	movw	r3, #8696	; 0x21f8
   14954:	movt	r3, #3
   14958:	ldr	r3, [r3, #4]
   1495c:	ldr	r2, [r3]
   14960:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14964:	and	r3, r3, #127	; 0x7f
   14968:	str	r3, [sp]
   1496c:	mov	r3, r2
   14970:	mov	r2, r1
   14974:	mov	r1, #0
   14978:	mov	r0, #125	; 0x7d
   1497c:	bl	11314 <error@plt>
   14980:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14984:	asr	r3, r3, #8
   14988:	uxtb	r3, r3
   1498c:	cmp	r3, #0
   14990:	beq	149a4 <__assert_fail@plt+0x3438>
   14994:	movw	r3, #8816	; 0x2270
   14998:	movt	r3, #3
   1499c:	mov	r2, #123	; 0x7b
   149a0:	str	r2, [r3]
   149a4:	movw	r3, #8796	; 0x225c
   149a8:	movt	r3, #3
   149ac:	ldr	r3, [r3]
   149b0:	cmp	r3, #0
   149b4:	bne	1468c <__assert_fail@plt+0x3120>
   149b8:	b	149c0 <__assert_fail@plt+0x3454>
   149bc:	nop	{0}
   149c0:	nop	{0}
   149c4:	sub	sp, fp, #8
   149c8:	ldr	r4, [sp]
   149cc:	ldr	fp, [sp, #4]
   149d0:	add	sp, sp, #8
   149d4:	pop	{pc}		; (ldr pc, [sp], #4)
   149d8:	str	fp, [sp, #-8]!
   149dc:	str	lr, [sp, #4]
   149e0:	add	fp, sp, #4
   149e4:	bl	1138c <getpid@plt>
   149e8:	mov	r2, r0
   149ec:	movw	r3, #8808	; 0x2268
   149f0:	movt	r3, #3
   149f4:	ldr	r3, [r3]
   149f8:	cmp	r2, r3
   149fc:	beq	14a20 <__assert_fail@plt+0x34b4>
   14a00:	movw	r3, #1348	; 0x544
   14a04:	movt	r3, #2
   14a08:	movw	r2, #1605	; 0x645
   14a0c:	movw	r1, #60868	; 0xedc4
   14a10:	movt	r1, #1
   14a14:	movw	r0, #63760	; 0xf910
   14a18:	movt	r0, #1
   14a1c:	bl	1156c <__assert_fail@plt>
   14a20:	movw	r3, #8840	; 0x2288
   14a24:	movt	r3, #3
   14a28:	ldrb	r3, [r3]
   14a2c:	cmp	r3, #0
   14a30:	bne	14a94 <__assert_fail@plt+0x3528>
   14a34:	movw	r3, #8840	; 0x2288
   14a38:	movt	r3, #3
   14a3c:	mov	r2, #1
   14a40:	strb	r2, [r3]
   14a44:	mov	r1, #0
   14a48:	mov	r0, #1
   14a4c:	bl	14660 <__assert_fail@plt+0x30f4>
   14a50:	movw	r3, #8840	; 0x2288
   14a54:	movt	r3, #3
   14a58:	mov	r2, #0
   14a5c:	strb	r2, [r3]
   14a60:	movw	r3, #8820	; 0x2274
   14a64:	movt	r3, #3
   14a68:	ldr	r2, [r3]
   14a6c:	movw	r3, #8816	; 0x2270
   14a70:	movt	r3, #3
   14a74:	ldr	r3, [r3]
   14a78:	cmp	r2, r3
   14a7c:	beq	14a98 <__assert_fail@plt+0x352c>
   14a80:	movw	r3, #8816	; 0x2270
   14a84:	movt	r3, #3
   14a88:	ldr	r3, [r3]
   14a8c:	mov	r0, r3
   14a90:	bl	1120c <_exit@plt>
   14a94:	nop	{0}
   14a98:	sub	sp, fp, #4
   14a9c:	ldr	fp, [sp]
   14aa0:	add	sp, sp, #4
   14aa4:	pop	{pc}		; (ldr pc, [sp], #4)
   14aa8:	push	{fp}		; (str fp, [sp, #-4]!)
   14aac:	add	fp, sp, #0
   14ab0:	sub	sp, sp, #12
   14ab4:	str	r0, [fp, #-8]
   14ab8:	movw	r3, #8552	; 0x2168
   14abc:	movt	r3, #3
   14ac0:	ldr	r3, [r3]
   14ac4:	cmn	r3, #-2147483647	; 0x80000001
   14ac8:	beq	14ae8 <__assert_fail@plt+0x357c>
   14acc:	movw	r3, #8552	; 0x2168
   14ad0:	movt	r3, #3
   14ad4:	ldr	r3, [r3]
   14ad8:	add	r2, r3, #1
   14adc:	movw	r3, #8552	; 0x2168
   14ae0:	movt	r3, #3
   14ae4:	str	r2, [r3]
   14ae8:	movw	r3, #8812	; 0x226c
   14aec:	movt	r3, #3
   14af0:	mov	r2, #1
   14af4:	str	r2, [r3]
   14af8:	nop	{0}
   14afc:	add	sp, fp, #0
   14b00:	pop	{fp}		; (ldr fp, [sp], #4)
   14b04:	bx	lr
   14b08:	push	{fp}		; (str fp, [sp, #-4]!)
   14b0c:	add	fp, sp, #0
   14b10:	sub	sp, sp, #12
   14b14:	str	r0, [fp, #-8]
   14b18:	movw	r3, #8552	; 0x2168
   14b1c:	movt	r3, #3
   14b20:	ldr	r3, [r3]
   14b24:	cmp	r3, #1
   14b28:	ble	14b48 <__assert_fail@plt+0x35dc>
   14b2c:	movw	r3, #8552	; 0x2168
   14b30:	movt	r3, #3
   14b34:	ldr	r3, [r3]
   14b38:	sub	r2, r3, #1
   14b3c:	movw	r3, #8552	; 0x2168
   14b40:	movt	r3, #3
   14b44:	str	r2, [r3]
   14b48:	nop	{0}
   14b4c:	add	sp, fp, #0
   14b50:	pop	{fp}		; (ldr fp, [sp], #4)
   14b54:	bx	lr
   14b58:	str	r4, [sp, #-12]!
   14b5c:	str	fp, [sp, #4]
   14b60:	str	lr, [sp, #8]
   14b64:	add	fp, sp, #8
   14b68:	sub	sp, sp, #36	; 0x24
   14b6c:	str	r0, [fp, #-24]	; 0xffffffe8
   14b70:	str	r1, [fp, #-28]	; 0xffffffe4
   14b74:	str	r2, [fp, #-32]	; 0xffffffe0
   14b78:	str	r3, [fp, #-36]	; 0xffffffdc
   14b7c:	sub	r3, fp, #20
   14b80:	mov	r2, #10
   14b84:	mov	r1, r3
   14b88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b8c:	bl	111b8 <strtol@plt>
   14b90:	str	r0, [fp, #-16]
   14b94:	ldr	r3, [fp, #-20]	; 0xffffffec
   14b98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14b9c:	cmp	r2, r3
   14ba0:	beq	14bb4 <__assert_fail@plt+0x3648>
   14ba4:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ba8:	ldrb	r3, [r3]
   14bac:	cmp	r3, #0
   14bb0:	beq	14bf8 <__assert_fail@plt+0x368c>
   14bb4:	movw	r3, #8656	; 0x21d0
   14bb8:	movt	r3, #3
   14bbc:	ldr	r4, [r3]
   14bc0:	movw	r0, #63780	; 0xf924
   14bc4:	movt	r0, #1
   14bc8:	bl	113a4 <gettext@plt>
   14bcc:	mov	r1, r0
   14bd0:	movw	r3, #8872	; 0x22a8
   14bd4:	movt	r3, #3
   14bd8:	ldr	r2, [r3]
   14bdc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14be0:	str	r3, [sp]
   14be4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14be8:	mov	r0, r4
   14bec:	bl	113e0 <fprintf@plt>
   14bf0:	mov	r0, #1
   14bf4:	bl	14d04 <__assert_fail@plt+0x3798>
   14bf8:	ldr	r2, [fp, #-16]
   14bfc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14c00:	cmp	r2, r3
   14c04:	bge	14c6c <__assert_fail@plt+0x3700>
   14c08:	movw	r3, #8656	; 0x21d0
   14c0c:	movt	r3, #3
   14c10:	ldr	r4, [r3]
   14c14:	movw	r0, #63820	; 0xf94c
   14c18:	movt	r0, #1
   14c1c:	bl	113a4 <gettext@plt>
   14c20:	mov	r1, r0
   14c24:	movw	r3, #8872	; 0x22a8
   14c28:	movt	r3, #3
   14c2c:	ldr	r2, [r3]
   14c30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14c34:	str	r3, [sp, #4]
   14c38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14c3c:	str	r3, [sp]
   14c40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14c44:	mov	r0, r4
   14c48:	bl	113e0 <fprintf@plt>
   14c4c:	ldr	r3, [fp, #4]
   14c50:	cmp	r3, #0
   14c54:	beq	14c60 <__assert_fail@plt+0x36f4>
   14c58:	mov	r0, #1
   14c5c:	bl	14d04 <__assert_fail@plt+0x3798>
   14c60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14c64:	str	r3, [fp, #-16]
   14c68:	b	14ce8 <__assert_fail@plt+0x377c>
   14c6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14c70:	cmp	r3, #0
   14c74:	blt	14ce8 <__assert_fail@plt+0x377c>
   14c78:	ldr	r2, [fp, #-16]
   14c7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14c80:	cmp	r2, r3
   14c84:	ble	14ce8 <__assert_fail@plt+0x377c>
   14c88:	movw	r3, #8656	; 0x21d0
   14c8c:	movt	r3, #3
   14c90:	ldr	r4, [r3]
   14c94:	movw	r0, #63868	; 0xf97c
   14c98:	movt	r0, #1
   14c9c:	bl	113a4 <gettext@plt>
   14ca0:	mov	r1, r0
   14ca4:	movw	r3, #8872	; 0x22a8
   14ca8:	movt	r3, #3
   14cac:	ldr	r2, [r3]
   14cb0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14cb4:	str	r3, [sp, #4]
   14cb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14cbc:	str	r3, [sp]
   14cc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14cc4:	mov	r0, r4
   14cc8:	bl	113e0 <fprintf@plt>
   14ccc:	ldr	r3, [fp, #4]
   14cd0:	cmp	r3, #0
   14cd4:	beq	14ce0 <__assert_fail@plt+0x3774>
   14cd8:	mov	r0, #1
   14cdc:	bl	14d04 <__assert_fail@plt+0x3798>
   14ce0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14ce4:	str	r3, [fp, #-16]
   14ce8:	ldr	r3, [fp, #-16]
   14cec:	mov	r0, r3
   14cf0:	sub	sp, fp, #8
   14cf4:	ldr	r4, [sp]
   14cf8:	ldr	fp, [sp, #4]
   14cfc:	add	sp, sp, #8
   14d00:	pop	{pc}		; (ldr pc, [sp], #4)
   14d04:	str	r4, [sp, #-12]!
   14d08:	str	fp, [sp, #4]
   14d0c:	str	lr, [sp, #8]
   14d10:	add	fp, sp, #8
   14d14:	sub	sp, sp, #12
   14d18:	str	r0, [fp, #-16]
   14d1c:	ldr	r3, [fp, #-16]
   14d20:	cmp	r3, #0
   14d24:	beq	14d64 <__assert_fail@plt+0x37f8>
   14d28:	movw	r3, #8656	; 0x21d0
   14d2c:	movt	r3, #3
   14d30:	ldr	r4, [r3]
   14d34:	movw	r0, #63916	; 0xf9ac
   14d38:	movt	r0, #1
   14d3c:	bl	113a4 <gettext@plt>
   14d40:	mov	r1, r0
   14d44:	movw	r3, #8872	; 0x22a8
   14d48:	movt	r3, #3
   14d4c:	ldr	r3, [r3]
   14d50:	mov	r2, r3
   14d54:	mov	r0, r4
   14d58:	bl	113e0 <fprintf@plt>
   14d5c:	ldr	r0, [fp, #-16]
   14d60:	bl	11398 <exit@plt>
   14d64:	movw	r3, #8668	; 0x21dc
   14d68:	movt	r3, #3
   14d6c:	ldr	r4, [r3]
   14d70:	movw	r0, #63956	; 0xf9d4
   14d74:	movt	r0, #1
   14d78:	bl	113a4 <gettext@plt>
   14d7c:	mov	r1, r0
   14d80:	movw	r3, #8872	; 0x22a8
   14d84:	movt	r3, #3
   14d88:	ldr	r3, [r3]
   14d8c:	mov	r2, r3
   14d90:	mov	r0, r4
   14d94:	bl	113e0 <fprintf@plt>
   14d98:	movw	r0, #64008	; 0xfa08
   14d9c:	movt	r0, #1
   14da0:	bl	113a4 <gettext@plt>
   14da4:	mov	r2, r0
   14da8:	movw	r3, #8668	; 0x21dc
   14dac:	movt	r3, #3
   14db0:	ldr	r3, [r3]
   14db4:	mov	r1, r3
   14db8:	mov	r0, r2
   14dbc:	bl	11524 <fputs@plt>
   14dc0:	movw	r0, #64088	; 0xfa58
   14dc4:	movt	r0, #1
   14dc8:	bl	113a4 <gettext@plt>
   14dcc:	mov	r2, r0
   14dd0:	movw	r3, #8668	; 0x21dc
   14dd4:	movt	r3, #3
   14dd8:	ldr	r3, [r3]
   14ddc:	mov	r1, r3
   14de0:	mov	r0, r2
   14de4:	bl	11524 <fputs@plt>
   14de8:	movw	r0, #64208	; 0xfad0
   14dec:	movt	r0, #1
   14df0:	bl	113a4 <gettext@plt>
   14df4:	mov	r2, r0
   14df8:	movw	r3, #8668	; 0x21dc
   14dfc:	movt	r3, #3
   14e00:	ldr	r3, [r3]
   14e04:	mov	r1, r3
   14e08:	mov	r0, r2
   14e0c:	bl	11524 <fputs@plt>
   14e10:	movw	r0, #64420	; 0xfba4
   14e14:	movt	r0, #1
   14e18:	bl	113a4 <gettext@plt>
   14e1c:	mov	r2, r0
   14e20:	movw	r3, #8668	; 0x21dc
   14e24:	movt	r3, #3
   14e28:	ldr	r3, [r3]
   14e2c:	mov	r1, r3
   14e30:	mov	r0, r2
   14e34:	bl	11524 <fputs@plt>
   14e38:	movw	r0, #64500	; 0xfbf4
   14e3c:	movt	r0, #1
   14e40:	bl	113a4 <gettext@plt>
   14e44:	mov	r2, r0
   14e48:	movw	r3, #8668	; 0x21dc
   14e4c:	movt	r3, #3
   14e50:	ldr	r3, [r3]
   14e54:	mov	r1, r3
   14e58:	mov	r0, r2
   14e5c:	bl	11524 <fputs@plt>
   14e60:	movw	r0, #64736	; 0xfce0
   14e64:	movt	r0, #1
   14e68:	bl	113a4 <gettext@plt>
   14e6c:	mov	r2, r0
   14e70:	movw	r3, #8668	; 0x21dc
   14e74:	movt	r3, #3
   14e78:	ldr	r3, [r3]
   14e7c:	mov	r1, r3
   14e80:	mov	r0, r2
   14e84:	bl	11524 <fputs@plt>
   14e88:	movw	r0, #64964	; 0xfdc4
   14e8c:	movt	r0, #1
   14e90:	bl	113a4 <gettext@plt>
   14e94:	mov	r2, r0
   14e98:	movw	r3, #8668	; 0x21dc
   14e9c:	movt	r3, #3
   14ea0:	ldr	r3, [r3]
   14ea4:	mov	r1, r3
   14ea8:	mov	r0, r2
   14eac:	bl	11524 <fputs@plt>
   14eb0:	movw	r0, #65116	; 0xfe5c
   14eb4:	movt	r0, #1
   14eb8:	bl	113a4 <gettext@plt>
   14ebc:	mov	r2, r0
   14ec0:	movw	r3, #8668	; 0x21dc
   14ec4:	movt	r3, #3
   14ec8:	ldr	r3, [r3]
   14ecc:	mov	r1, r3
   14ed0:	mov	r0, r2
   14ed4:	bl	11524 <fputs@plt>
   14ed8:	movw	r0, #65168	; 0xfe90
   14edc:	movt	r0, #1
   14ee0:	bl	113a4 <gettext@plt>
   14ee4:	mov	r2, r0
   14ee8:	movw	r3, #8668	; 0x21dc
   14eec:	movt	r3, #3
   14ef0:	ldr	r3, [r3]
   14ef4:	mov	r1, r3
   14ef8:	mov	r0, r2
   14efc:	bl	11524 <fputs@plt>
   14f00:	movw	r0, #65380	; 0xff64
   14f04:	movt	r0, #1
   14f08:	bl	113a4 <gettext@plt>
   14f0c:	mov	r2, r0
   14f10:	movw	r3, #8668	; 0x21dc
   14f14:	movt	r3, #3
   14f18:	ldr	r3, [r3]
   14f1c:	mov	r1, r3
   14f20:	mov	r0, r2
   14f24:	bl	11524 <fputs@plt>
   14f28:	movw	r0, #65508	; 0xffe4
   14f2c:	movt	r0, #1
   14f30:	bl	113a4 <gettext@plt>
   14f34:	mov	r2, r0
   14f38:	movw	r3, #8668	; 0x21dc
   14f3c:	movt	r3, #3
   14f40:	ldr	r3, [r3]
   14f44:	mov	r1, r3
   14f48:	mov	r0, r2
   14f4c:	bl	11524 <fputs@plt>
   14f50:	movw	r0, #132	; 0x84
   14f54:	movt	r0, #2
   14f58:	bl	113a4 <gettext@plt>
   14f5c:	mov	r2, r0
   14f60:	movw	r3, #8668	; 0x21dc
   14f64:	movt	r3, #3
   14f68:	ldr	r3, [r3]
   14f6c:	mov	r1, r3
   14f70:	mov	r0, r2
   14f74:	bl	11524 <fputs@plt>
   14f78:	movw	r0, #212	; 0xd4
   14f7c:	movt	r0, #2
   14f80:	bl	113a4 <gettext@plt>
   14f84:	mov	r2, r0
   14f88:	movw	r3, #8668	; 0x21dc
   14f8c:	movt	r3, #3
   14f90:	ldr	r3, [r3]
   14f94:	mov	r1, r3
   14f98:	mov	r0, r2
   14f9c:	bl	11524 <fputs@plt>
   14fa0:	movw	r0, #428	; 0x1ac
   14fa4:	movt	r0, #2
   14fa8:	bl	113a4 <gettext@plt>
   14fac:	mov	r2, r0
   14fb0:	movw	r3, #8668	; 0x21dc
   14fb4:	movt	r3, #3
   14fb8:	ldr	r3, [r3]
   14fbc:	mov	r1, r3
   14fc0:	mov	r0, r2
   14fc4:	bl	11524 <fputs@plt>
   14fc8:	movw	r0, #504	; 0x1f8
   14fcc:	movt	r0, #2
   14fd0:	bl	113a4 <gettext@plt>
   14fd4:	mov	r2, r0
   14fd8:	movw	r3, #8668	; 0x21dc
   14fdc:	movt	r3, #3
   14fe0:	ldr	r3, [r3]
   14fe4:	mov	r1, r3
   14fe8:	mov	r0, r2
   14fec:	bl	11524 <fputs@plt>
   14ff0:	movw	r0, #568	; 0x238
   14ff4:	movt	r0, #2
   14ff8:	bl	113a4 <gettext@plt>
   14ffc:	mov	r2, r0
   15000:	movw	r3, #8668	; 0x21dc
   15004:	movt	r3, #3
   15008:	ldr	r3, [r3]
   1500c:	mov	r1, r3
   15010:	mov	r0, r2
   15014:	bl	11524 <fputs@plt>
   15018:	movw	r0, #648	; 0x288
   1501c:	movt	r0, #2
   15020:	bl	113a4 <gettext@plt>
   15024:	mov	r2, r0
   15028:	movw	r3, #8668	; 0x21dc
   1502c:	movt	r3, #3
   15030:	ldr	r3, [r3]
   15034:	mov	r1, r3
   15038:	mov	r0, r2
   1503c:	bl	11524 <fputs@plt>
   15040:	movw	r0, #864	; 0x360
   15044:	movt	r0, #2
   15048:	bl	113a4 <gettext@plt>
   1504c:	mov	r2, r0
   15050:	movw	r3, #8668	; 0x21dc
   15054:	movt	r3, #3
   15058:	ldr	r3, [r3]
   1505c:	mov	r1, r3
   15060:	mov	r0, r2
   15064:	bl	11524 <fputs@plt>
   15068:	movw	r0, #940	; 0x3ac
   1506c:	movt	r0, #2
   15070:	bl	113a4 <gettext@plt>
   15074:	mov	r2, r0
   15078:	movw	r3, #8668	; 0x21dc
   1507c:	movt	r3, #3
   15080:	ldr	r3, [r3]
   15084:	mov	r1, r3
   15088:	mov	r0, r2
   1508c:	bl	11524 <fputs@plt>
   15090:	movw	r0, #1008	; 0x3f0
   15094:	movt	r0, #2
   15098:	bl	113a4 <gettext@plt>
   1509c:	mov	r2, r0
   150a0:	movw	r3, #8668	; 0x21dc
   150a4:	movt	r3, #3
   150a8:	ldr	r3, [r3]
   150ac:	mov	r1, r3
   150b0:	mov	r0, r2
   150b4:	bl	11524 <fputs@plt>
   150b8:	movw	r0, #1080	; 0x438
   150bc:	movt	r0, #2
   150c0:	bl	113a4 <gettext@plt>
   150c4:	mov	r2, r0
   150c8:	movw	r3, #8668	; 0x21dc
   150cc:	movt	r3, #3
   150d0:	ldr	r3, [r3]
   150d4:	mov	r1, r3
   150d8:	mov	r0, r2
   150dc:	bl	11524 <fputs@plt>
   150e0:	movw	r0, #1152	; 0x480
   150e4:	movt	r0, #2
   150e8:	bl	113a4 <gettext@plt>
   150ec:	mov	r2, r0
   150f0:	movw	r3, #8668	; 0x21dc
   150f4:	movt	r3, #3
   150f8:	ldr	r3, [r3]
   150fc:	mov	r1, r3
   15100:	mov	r0, r2
   15104:	bl	11524 <fputs@plt>
   15108:	movw	r0, #1212	; 0x4bc
   1510c:	movt	r0, #2
   15110:	bl	113a4 <gettext@plt>
   15114:	mov	r2, r0
   15118:	movw	r3, #8668	; 0x21dc
   1511c:	movt	r3, #3
   15120:	ldr	r3, [r3]
   15124:	mov	r1, r3
   15128:	mov	r0, r2
   1512c:	bl	11524 <fputs@plt>
   15130:	movw	r3, #8668	; 0x21dc
   15134:	movt	r3, #3
   15138:	ldr	r2, [r3]
   1513c:	movw	r3, #8872	; 0x22a8
   15140:	movt	r3, #3
   15144:	ldr	r3, [r3]
   15148:	mov	r1, r3
   1514c:	mov	r0, r2
   15150:	bl	16f78 <__assert_fail@plt+0x5a0c>
   15154:	ldr	r0, [fp, #-16]
   15158:	bl	11398 <exit@plt>
   1515c:	str	fp, [sp, #-8]!
   15160:	str	lr, [sp, #4]
   15164:	add	fp, sp, #4
   15168:	sub	sp, sp, #24
   1516c:	str	r0, [fp, #-8]
   15170:	str	r1, [fp, #-12]
   15174:	movw	r3, #8556	; 0x216c
   15178:	movt	r3, #3
   1517c:	ldr	r2, [r3]
   15180:	mov	r3, #0
   15184:	str	r3, [sp, #8]
   15188:	mov	r3, #0
   1518c:	str	r3, [sp, #4]
   15190:	mov	r3, #0
   15194:	str	r3, [sp]
   15198:	mov	r3, #0
   1519c:	ldr	r1, [fp, #-12]
   151a0:	ldr	r0, [fp, #-8]
   151a4:	bl	159f8 <__assert_fail@plt+0x448c>
   151a8:	nop	{0}
   151ac:	sub	sp, fp, #4
   151b0:	ldr	fp, [sp]
   151b4:	add	sp, sp, #4
   151b8:	pop	{pc}		; (ldr pc, [sp], #4)
   151bc:	str	fp, [sp, #-8]!
   151c0:	str	lr, [sp, #4]
   151c4:	add	fp, sp, #4
   151c8:	sub	sp, sp, #48	; 0x30
   151cc:	str	r0, [fp, #-24]	; 0xffffffe8
   151d0:	str	r1, [fp, #-28]	; 0xffffffe4
   151d4:	str	r2, [fp, #-32]	; 0xffffffe0
   151d8:	str	r3, [fp, #-36]	; 0xffffffdc
   151dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   151e0:	ldr	r3, [r3, #12]
   151e4:	sub	r3, r3, #1
   151e8:	str	r3, [fp, #-12]
   151ec:	movw	r3, #8844	; 0x228c
   151f0:	movt	r3, #3
   151f4:	ldr	r3, [r3]
   151f8:	cmp	r3, #0
   151fc:	bne	15228 <__assert_fail@plt+0x3cbc>
   15200:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15204:	ldr	r3, [r3, #12]
   15208:	add	r3, r3, #1
   1520c:	mov	r0, r3
   15210:	bl	1c1f8 <__assert_fail@plt+0xac8c>
   15214:	mov	r3, r0
   15218:	mov	r2, r3
   1521c:	movw	r3, #8844	; 0x228c
   15220:	movt	r3, #3
   15224:	str	r2, [r3]
   15228:	movw	r3, #8844	; 0x228c
   1522c:	movt	r3, #3
   15230:	ldr	r3, [r3]
   15234:	str	r3, [fp, #-8]
   15238:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1523c:	ldr	r3, [r3, #24]
   15240:	mov	r1, r3
   15244:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15248:	bl	18250 <__assert_fail@plt+0x6ce4>
   1524c:	str	r0, [fp, #-20]	; 0xffffffec
   15250:	ldr	r3, [fp, #-20]	; 0xffffffec
   15254:	cmp	r3, #0
   15258:	beq	15270 <__assert_fail@plt+0x3d04>
   1525c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15260:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15264:	sub	r3, r2, r3
   15268:	str	r3, [fp, #-16]
   1526c:	b	15278 <__assert_fail@plt+0x3d0c>
   15270:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15274:	str	r3, [fp, #-16]
   15278:	ldr	r2, [fp, #-12]
   1527c:	ldr	r3, [fp, #-16]
   15280:	cmp	r2, r3
   15284:	bls	15394 <__assert_fail@plt+0x3e28>
   15288:	ldr	r2, [fp, #-12]
   1528c:	ldr	r3, [fp, #-16]
   15290:	sub	r3, r2, r3
   15294:	str	r3, [fp, #-12]
   15298:	ldr	r2, [fp, #-16]
   1529c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   152a0:	ldr	r0, [fp, #-8]
   152a4:	bl	1141c <strncpy@plt>
   152a8:	ldr	r2, [fp, #-8]
   152ac:	ldr	r3, [fp, #-16]
   152b0:	add	r3, r2, r3
   152b4:	str	r3, [fp, #-8]
   152b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   152bc:	ldr	r3, [fp, #-16]
   152c0:	add	r3, r2, r3
   152c4:	str	r3, [fp, #-32]	; 0xffffffe0
   152c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   152cc:	ldr	r3, [fp, #-16]
   152d0:	sub	r3, r2, r3
   152d4:	str	r3, [fp, #-36]	; 0xffffffdc
   152d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   152dc:	cmp	r3, #0
   152e0:	beq	15380 <__assert_fail@plt+0x3e14>
   152e4:	ldr	r2, [fp, #16]
   152e8:	ldr	r3, [fp, #8]
   152ec:	add	r3, r2, r3
   152f0:	ldr	r2, [fp, #-12]
   152f4:	cmp	r2, r3
   152f8:	bls	1539c <__assert_fail@plt+0x3e30>
   152fc:	ldr	r2, [fp, #16]
   15300:	ldr	r3, [fp, #8]
   15304:	add	r3, r2, r3
   15308:	ldr	r2, [fp, #-12]
   1530c:	sub	r3, r2, r3
   15310:	str	r3, [fp, #-12]
   15314:	ldr	r3, [fp, #4]
   15318:	cmp	r3, #0
   1531c:	beq	1533c <__assert_fail@plt+0x3dd0>
   15320:	ldr	r1, [fp, #4]
   15324:	ldr	r0, [fp, #-8]
   15328:	bl	112f0 <strcpy@plt>
   1532c:	ldr	r2, [fp, #-8]
   15330:	ldr	r3, [fp, #8]
   15334:	add	r3, r2, r3
   15338:	str	r3, [fp, #-8]
   1533c:	ldr	r1, [fp, #12]
   15340:	ldr	r0, [fp, #-8]
   15344:	bl	112f0 <strcpy@plt>
   15348:	ldr	r2, [fp, #-8]
   1534c:	ldr	r3, [fp, #16]
   15350:	add	r3, r2, r3
   15354:	str	r3, [fp, #-8]
   15358:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1535c:	ldr	r3, [r3, #20]
   15360:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15364:	add	r3, r2, r3
   15368:	str	r3, [fp, #-32]	; 0xffffffe0
   1536c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15370:	ldr	r3, [r3, #20]
   15374:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15378:	sub	r3, r2, r3
   1537c:	str	r3, [fp, #-36]	; 0xffffffdc
   15380:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15384:	ldrb	r3, [r3]
   15388:	cmp	r3, #0
   1538c:	bne	15238 <__assert_fail@plt+0x3ccc>
   15390:	b	153a0 <__assert_fail@plt+0x3e34>
   15394:	nop	{0}
   15398:	b	153a0 <__assert_fail@plt+0x3e34>
   1539c:	nop	{0}
   153a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   153a4:	ldrb	r3, [r3]
   153a8:	cmp	r3, #0
   153ac:	beq	153d0 <__assert_fail@plt+0x3e64>
   153b0:	movw	r0, #1380	; 0x564
   153b4:	movt	r0, #2
   153b8:	bl	113a4 <gettext@plt>
   153bc:	mov	r3, r0
   153c0:	mov	r2, r3
   153c4:	mov	r1, #0
   153c8:	mov	r0, #1
   153cc:	bl	11314 <error@plt>
   153d0:	ldr	r3, [fp, #-8]
   153d4:	add	r2, r3, #1
   153d8:	str	r2, [fp, #-8]
   153dc:	mov	r2, #0
   153e0:	strb	r2, [r3]
   153e4:	movw	r3, #8844	; 0x228c
   153e8:	movt	r3, #3
   153ec:	ldr	r1, [r3]
   153f0:	movw	r3, #8844	; 0x228c
   153f4:	movt	r3, #3
   153f8:	ldr	r3, [r3]
   153fc:	ldr	r2, [fp, #-8]
   15400:	sub	r3, r2, r3
   15404:	mov	r2, r3
   15408:	ldr	r3, [fp, #20]
   1540c:	str	r3, [sp, #8]
   15410:	mov	r3, #0
   15414:	str	r3, [sp, #4]
   15418:	mov	r3, #0
   1541c:	str	r3, [sp]
   15420:	mov	r3, r2
   15424:	mov	r2, r1
   15428:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1542c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15430:	bl	159f8 <__assert_fail@plt+0x448c>
   15434:	nop	{0}
   15438:	sub	sp, fp, #4
   1543c:	ldr	fp, [sp]
   15440:	add	sp, sp, #4
   15444:	pop	{pc}		; (ldr pc, [sp], #4)
   15448:	push	{fp}		; (str fp, [sp, #-4]!)
   1544c:	add	fp, sp, #0
   15450:	sub	sp, sp, #28
   15454:	str	r0, [fp, #-16]
   15458:	str	r1, [fp, #-20]	; 0xffffffec
   1545c:	str	r3, [fp, #-28]	; 0xffffffe4
   15460:	mov	r3, r2
   15464:	strb	r3, [fp, #-21]	; 0xffffffeb
   15468:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1546c:	cmp	r3, #0
   15470:	beq	15498 <__assert_fail@plt+0x3f2c>
   15474:	ldr	r3, [fp, #-20]	; 0xffffffec
   15478:	ldr	r3, [r3, #36]	; 0x24
   1547c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15480:	cmp	r2, r3
   15484:	bls	154c8 <__assert_fail@plt+0x3f5c>
   15488:	ldr	r3, [fp, #-20]	; 0xffffffec
   1548c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15490:	str	r2, [r3, #36]	; 0x24
   15494:	b	154c8 <__assert_fail@plt+0x3f5c>
   15498:	ldr	r3, [fp, #-20]	; 0xffffffec
   1549c:	ldr	r3, [r3, #40]	; 0x28
   154a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   154a4:	cmp	r2, r3
   154a8:	bcc	154bc <__assert_fail@plt+0x3f50>
   154ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   154b0:	ldr	r3, [r3, #40]	; 0x28
   154b4:	cmp	r3, #0
   154b8:	bne	154c8 <__assert_fail@plt+0x3f5c>
   154bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   154c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   154c4:	str	r2, [r3, #40]	; 0x28
   154c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   154cc:	ldr	r3, [r3, #36]	; 0x24
   154d0:	cmp	r3, #0
   154d4:	beq	154f0 <__assert_fail@plt+0x3f84>
   154d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   154dc:	ldr	r2, [r3, #40]	; 0x28
   154e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   154e4:	ldr	r3, [r3, #36]	; 0x24
   154e8:	cmp	r2, r3
   154ec:	bhi	15528 <__assert_fail@plt+0x3fbc>
   154f0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   154f4:	cmp	r3, #0
   154f8:	beq	15518 <__assert_fail@plt+0x3fac>
   154fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15500:	cmn	r3, #1
   15504:	beq	155b0 <__assert_fail@plt+0x4044>
   15508:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1550c:	add	r3, r3, #1
   15510:	str	r3, [fp, #-28]	; 0xffffffe4
   15514:	b	155b0 <__assert_fail@plt+0x4044>
   15518:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1551c:	lsr	r3, r3, #1
   15520:	str	r3, [fp, #-28]	; 0xffffffe4
   15524:	b	155b0 <__assert_fail@plt+0x4044>
   15528:	ldr	r3, [fp, #-20]	; 0xffffffec
   1552c:	ldr	r2, [r3, #40]	; 0x28
   15530:	ldr	r3, [fp, #-20]	; 0xffffffec
   15534:	ldr	r3, [r3, #36]	; 0x24
   15538:	sub	r3, r2, r3
   1553c:	lsr	r3, r3, #1
   15540:	str	r3, [fp, #-8]
   15544:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   15548:	cmp	r3, #0
   1554c:	beq	15580 <__assert_fail@plt+0x4014>
   15550:	ldr	r3, [fp, #-8]
   15554:	cmp	r3, #0
   15558:	beq	15570 <__assert_fail@plt+0x4004>
   1555c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15560:	ldr	r3, [fp, #-8]
   15564:	add	r3, r2, r3
   15568:	str	r3, [fp, #-28]	; 0xffffffe4
   1556c:	b	155b4 <__assert_fail@plt+0x4048>
   15570:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15574:	add	r3, r3, #1
   15578:	str	r3, [fp, #-28]	; 0xffffffe4
   1557c:	b	155b4 <__assert_fail@plt+0x4048>
   15580:	ldr	r3, [fp, #-8]
   15584:	cmp	r3, #0
   15588:	beq	155a0 <__assert_fail@plt+0x4034>
   1558c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15590:	ldr	r3, [fp, #-8]
   15594:	sub	r3, r2, r3
   15598:	str	r3, [fp, #-28]	; 0xffffffe4
   1559c:	b	155b4 <__assert_fail@plt+0x4048>
   155a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   155a4:	sub	r3, r3, #1
   155a8:	str	r3, [fp, #-28]	; 0xffffffe4
   155ac:	b	155b4 <__assert_fail@plt+0x4048>
   155b0:	nop	{0}
   155b4:	ldr	r3, [fp, #-16]
   155b8:	ldr	r3, [r3, #28]
   155bc:	cmp	r3, #0
   155c0:	beq	155ec <__assert_fail@plt+0x4080>
   155c4:	ldr	r3, [fp, #-16]
   155c8:	ldr	r3, [r3, #28]
   155cc:	add	r3, r3, #1
   155d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   155d4:	cmp	r2, r3
   155d8:	bhi	155ec <__assert_fail@plt+0x4080>
   155dc:	ldr	r3, [fp, #-16]
   155e0:	ldr	r3, [r3, #28]
   155e4:	add	r3, r3, #1
   155e8:	str	r3, [fp, #-28]	; 0xffffffe4
   155ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   155f0:	cmp	r3, #0
   155f4:	bne	15600 <__assert_fail@plt+0x4094>
   155f8:	mov	r3, #1
   155fc:	str	r3, [fp, #-28]	; 0xffffffe4
   15600:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15604:	mov	r0, r3
   15608:	add	sp, fp, #0
   1560c:	pop	{fp}		; (ldr fp, [sp], #4)
   15610:	bx	lr
   15614:	str	fp, [sp, #-8]!
   15618:	str	lr, [sp, #4]
   1561c:	add	fp, sp, #4
   15620:	sub	sp, sp, #24
   15624:	str	r0, [fp, #-16]
   15628:	str	r1, [fp, #-20]	; 0xffffffec
   1562c:	str	r2, [fp, #-24]	; 0xffffffe8
   15630:	str	r3, [fp, #-28]	; 0xffffffe4
   15634:	mov	r3, #0
   15638:	str	r3, [fp, #-8]
   1563c:	mov	r3, #0
   15640:	str	r3, [fp, #-12]
   15644:	b	15684 <__assert_fail@plt+0x4118>
   15648:	ldr	r3, [fp, #-20]	; 0xffffffec
   1564c:	ldr	r2, [r3, #4]
   15650:	ldr	r3, [fp, #-12]
   15654:	add	r1, r3, #1
   15658:	str	r1, [fp, #-12]
   1565c:	lsl	r3, r3, #2
   15660:	add	r2, r2, r3
   15664:	ldr	r3, [fp, #-8]
   15668:	add	r1, r3, #1
   1566c:	str	r1, [fp, #-8]
   15670:	lsl	r3, r3, #2
   15674:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15678:	add	r3, r1, r3
   1567c:	ldr	r2, [r2]
   15680:	str	r2, [r3]
   15684:	ldr	r3, [fp, #-16]
   15688:	ldr	r3, [r3, #28]
   1568c:	ldr	r2, [fp, #-12]
   15690:	cmp	r2, r3
   15694:	bcc	15648 <__assert_fail@plt+0x40dc>
   15698:	ldr	r2, [fp, #-12]
   1569c:	ldr	r3, [fp, #4]
   156a0:	add	r3, r2, r3
   156a4:	str	r3, [fp, #-12]
   156a8:	b	156e8 <__assert_fail@plt+0x417c>
   156ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   156b0:	ldr	r2, [r3, #4]
   156b4:	ldr	r3, [fp, #-12]
   156b8:	add	r1, r3, #1
   156bc:	str	r1, [fp, #-12]
   156c0:	lsl	r3, r3, #2
   156c4:	add	r2, r2, r3
   156c8:	ldr	r3, [fp, #-8]
   156cc:	add	r1, r3, #1
   156d0:	str	r1, [fp, #-8]
   156d4:	lsl	r3, r3, #2
   156d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   156dc:	add	r3, r1, r3
   156e0:	ldr	r2, [r2]
   156e4:	str	r2, [r3]
   156e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   156ec:	ldr	r3, [r3]
   156f0:	ldr	r2, [fp, #-12]
   156f4:	cmp	r2, r3
   156f8:	bcs	1570c <__assert_fail@plt+0x41a0>
   156fc:	ldr	r2, [fp, #-8]
   15700:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15704:	cmp	r2, r3
   15708:	bcc	156ac <__assert_fail@plt+0x4140>
   1570c:	ldr	r3, [fp, #-16]
   15710:	ldr	r3, [r3, #28]
   15714:	ldr	r2, [fp, #-8]
   15718:	cmp	r2, r3
   1571c:	bcs	15740 <__assert_fail@plt+0x41d4>
   15720:	movw	r3, #1860	; 0x744
   15724:	movt	r3, #2
   15728:	mov	r2, #242	; 0xf2
   1572c:	movw	r1, #1400	; 0x578
   15730:	movt	r1, #2
   15734:	movw	r0, #1412	; 0x584
   15738:	movt	r0, #2
   1573c:	bl	1156c <__assert_fail@plt>
   15740:	ldr	r3, [fp, #-8]
   15744:	lsl	r3, r3, #2
   15748:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1574c:	add	r3, r2, r3
   15750:	mov	r2, #0
   15754:	str	r2, [r3]
   15758:	ldr	r3, [fp, #-8]
   1575c:	mov	r0, r3
   15760:	sub	sp, fp, #4
   15764:	ldr	fp, [sp]
   15768:	add	sp, sp, #4
   1576c:	pop	{pc}		; (ldr pc, [sp], #4)
   15770:	str	r4, [sp, #-12]!
   15774:	str	fp, [sp, #4]
   15778:	str	lr, [sp, #8]
   1577c:	add	fp, sp, #8
   15780:	sub	sp, sp, #36	; 0x24
   15784:	str	r0, [fp, #-32]	; 0xffffffe0
   15788:	str	r1, [fp, #-36]	; 0xffffffdc
   1578c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15790:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15794:	bl	1515c <__assert_fail@plt+0x3bf0>
   15798:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1579c:	ldr	r3, [r3]
   157a0:	cmp	r3, #0
   157a4:	bne	157c8 <__assert_fail@plt+0x425c>
   157a8:	movw	r3, #1872	; 0x750
   157ac:	movt	r3, #2
   157b0:	movw	r2, #261	; 0x105
   157b4:	movw	r1, #1400	; 0x578
   157b8:	movt	r1, #2
   157bc:	movw	r0, #1444	; 0x5a4
   157c0:	movt	r0, #2
   157c4:	bl	1156c <__assert_fail@plt>
   157c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   157cc:	ldr	r2, [r3, #4]
   157d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   157d4:	ldr	r3, [r3]
   157d8:	sub	r3, r3, #-1073741823	; 0xc0000001
   157dc:	lsl	r3, r3, #2
   157e0:	add	r3, r2, r3
   157e4:	ldr	r3, [r3]
   157e8:	cmp	r3, #0
   157ec:	beq	15810 <__assert_fail@plt+0x42a4>
   157f0:	movw	r3, #1872	; 0x750
   157f4:	movt	r3, #2
   157f8:	movw	r2, #262	; 0x106
   157fc:	movw	r1, #1400	; 0x578
   15800:	movt	r1, #2
   15804:	movw	r0, #1464	; 0x5b8
   15808:	movt	r0, #2
   1580c:	bl	1156c <__assert_fail@plt>
   15810:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15814:	ldr	r3, [r3]
   15818:	add	r3, r3, #1
   1581c:	lsl	r3, r3, #2
   15820:	mov	r0, r3
   15824:	bl	1c1f8 <__assert_fail@plt+0xac8c>
   15828:	mov	r3, r0
   1582c:	str	r3, [fp, #-24]	; 0xffffffe8
   15830:	mov	r3, #0
   15834:	str	r3, [fp, #-20]	; 0xffffffec
   15838:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1583c:	ldr	r3, [r3]
   15840:	str	r3, [fp, #-16]
   15844:	ldr	r3, [fp, #-20]	; 0xffffffec
   15848:	str	r3, [sp]
   1584c:	ldr	r3, [fp, #-16]
   15850:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15854:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15858:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1585c:	bl	15614 <__assert_fail@plt+0x40a8>
   15860:	str	r0, [fp, #-28]	; 0xffffffe4
   15864:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15868:	ldr	r4, [r3, #32]
   1586c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15870:	ldr	r1, [r3, #24]
   15874:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15878:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1587c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15880:	blx	r4
   15884:	mov	r3, r0
   15888:	cmp	r3, #0
   1588c:	beq	158c8 <__assert_fail@plt+0x435c>
   15890:	ldr	r3, [fp, #-16]
   15894:	mov	r2, #1
   15898:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1589c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   158a0:	bl	15448 <__assert_fail@plt+0x3edc>
   158a4:	str	r0, [fp, #-16]
   158a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   158ac:	ldr	r3, [r3, #28]
   158b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   158b4:	sub	r3, r2, r3
   158b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   158bc:	add	r3, r2, r3
   158c0:	str	r3, [fp, #-20]	; 0xffffffec
   158c4:	b	15918 <__assert_fail@plt+0x43ac>
   158c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   158cc:	ldr	r3, [r3, #28]
   158d0:	add	r3, r3, #1
   158d4:	ldr	r2, [fp, #-16]
   158d8:	cmp	r2, r3
   158dc:	bhi	15900 <__assert_fail@plt+0x4394>
   158e0:	movw	r0, #1508	; 0x5e4
   158e4:	movt	r0, #2
   158e8:	bl	113a4 <gettext@plt>
   158ec:	mov	r3, r0
   158f0:	mov	r2, r3
   158f4:	mov	r1, #0
   158f8:	mov	r0, #1
   158fc:	bl	11314 <error@plt>
   15900:	ldr	r3, [fp, #-16]
   15904:	mov	r2, #0
   15908:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1590c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15910:	bl	15448 <__assert_fail@plt+0x3edc>
   15914:	str	r0, [fp, #-16]
   15918:	ldr	r3, [fp, #-20]	; 0xffffffec
   1591c:	add	r2, r3, #1
   15920:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15924:	ldr	r1, [r3]
   15928:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1592c:	ldr	r3, [r3, #28]
   15930:	sub	r3, r1, r3
   15934:	cmp	r2, r3
   15938:	bcc	15844 <__assert_fail@plt+0x42d8>
   1593c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15940:	bl	1d7e8 <__assert_fail@plt+0xc27c>
   15944:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15948:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1594c:	bl	16168 <__assert_fail@plt+0x4bfc>
   15950:	nop	{0}
   15954:	sub	sp, fp, #8
   15958:	ldr	r4, [sp]
   1595c:	ldr	fp, [sp, #4]
   15960:	add	sp, sp, #8
   15964:	pop	{pc}		; (ldr pc, [sp], #4)
   15968:	push	{fp}		; (str fp, [sp, #-4]!)
   1596c:	add	fp, sp, #0
   15970:	sub	sp, sp, #20
   15974:	str	r0, [fp, #-8]
   15978:	str	r1, [fp, #-12]
   1597c:	str	r2, [fp, #-16]
   15980:	ldr	r3, [fp, #-8]
   15984:	cmp	r3, #0
   15988:	bne	159c8 <__assert_fail@plt+0x445c>
   1598c:	ldr	r3, [fp, #-12]
   15990:	ldr	r3, [r3, #40]	; 0x28
   15994:	cmp	r3, #0
   15998:	beq	159c8 <__assert_fail@plt+0x445c>
   1599c:	ldr	r3, [fp, #-16]
   159a0:	ldr	r2, [r3]
   159a4:	ldr	r3, [fp, #-12]
   159a8:	ldr	r3, [r3, #28]
   159ac:	sub	r2, r2, r3
   159b0:	ldr	r3, [fp, #-12]
   159b4:	ldr	r3, [r3, #40]	; 0x28
   159b8:	cmp	r2, r3
   159bc:	bne	159c8 <__assert_fail@plt+0x445c>
   159c0:	mov	r3, #1
   159c4:	b	159e8 <__assert_fail@plt+0x447c>
   159c8:	ldr	r3, [fp, #-16]
   159cc:	ldr	r2, [r3]
   159d0:	ldr	r3, [fp, #-12]
   159d4:	ldr	r3, [r3, #16]
   159d8:	cmp	r2, r3
   159dc:	moveq	r3, #1
   159e0:	movne	r3, #0
   159e4:	uxtb	r3, r3
   159e8:	mov	r0, r3
   159ec:	add	sp, fp, #0
   159f0:	pop	{fp}		; (ldr fp, [sp], #4)
   159f4:	bx	lr
   159f8:	str	fp, [sp, #-8]!
   159fc:	str	lr, [sp, #4]
   15a00:	add	fp, sp, #4
   15a04:	sub	sp, sp, #24
   15a08:	str	r0, [fp, #-16]
   15a0c:	str	r1, [fp, #-20]	; 0xffffffec
   15a10:	str	r2, [fp, #-24]	; 0xffffffe8
   15a14:	str	r3, [fp, #-28]	; 0xffffffe4
   15a18:	movw	r3, #8556	; 0x216c
   15a1c:	movt	r3, #3
   15a20:	ldr	r3, [r3]
   15a24:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15a28:	cmp	r2, r3
   15a2c:	moveq	r3, #1
   15a30:	movne	r3, #0
   15a34:	uxtb	r3, r3
   15a38:	str	r3, [fp, #-8]
   15a3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15a40:	cmp	r3, #0
   15a44:	bne	15a68 <__assert_fail@plt+0x44fc>
   15a48:	movw	r3, #1884	; 0x75c
   15a4c:	movt	r3, #2
   15a50:	movw	r2, #341	; 0x155
   15a54:	movw	r1, #1400	; 0x578
   15a58:	movt	r1, #2
   15a5c:	movw	r0, #1560	; 0x618
   15a60:	movt	r0, #2
   15a64:	bl	1156c <__assert_fail@plt>
   15a68:	ldr	r3, [fp, #-8]
   15a6c:	cmp	r3, #0
   15a70:	bne	15b74 <__assert_fail@plt+0x4608>
   15a74:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a78:	ldr	r2, [r3, #16]
   15a7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15a80:	add	r2, r2, r3
   15a84:	ldr	r3, [fp, #8]
   15a88:	add	r2, r2, r3
   15a8c:	ldr	r3, [fp, #-16]
   15a90:	ldr	r3, [r3, #12]
   15a94:	cmp	r2, r3
   15a98:	bls	15b4c <__assert_fail@plt+0x45e0>
   15a9c:	ldr	r3, [fp, #12]
   15aa0:	cmp	r3, #0
   15aa4:	bne	15ac0 <__assert_fail@plt+0x4554>
   15aa8:	ldr	r3, [fp, #-20]	; 0xffffffec
   15aac:	ldr	r2, [r3]
   15ab0:	ldr	r3, [fp, #-16]
   15ab4:	ldr	r3, [r3, #28]
   15ab8:	cmp	r2, r3
   15abc:	bne	15ae0 <__assert_fail@plt+0x4574>
   15ac0:	movw	r0, #1572	; 0x624
   15ac4:	movt	r0, #2
   15ac8:	bl	113a4 <gettext@plt>
   15acc:	mov	r3, r0
   15ad0:	mov	r2, r3
   15ad4:	mov	r1, #0
   15ad8:	mov	r0, #1
   15adc:	bl	11314 <error@plt>
   15ae0:	ldr	r3, [fp, #-16]
   15ae4:	ldr	r3, [r3, #24]
   15ae8:	cmp	r3, #0
   15aec:	bne	15b20 <__assert_fail@plt+0x45b4>
   15af0:	ldr	r3, [fp, #-16]
   15af4:	ldr	r3, [r3]
   15af8:	cmp	r3, #0
   15afc:	beq	15b40 <__assert_fail@plt+0x45d4>
   15b00:	ldr	r3, [fp, #-16]
   15b04:	ldr	r3, [r3, #36]	; 0x24
   15b08:	cmp	r3, #0
   15b0c:	bne	15b20 <__assert_fail@plt+0x45b4>
   15b10:	ldr	r3, [fp, #-16]
   15b14:	ldr	r3, [r3, #40]	; 0x28
   15b18:	cmp	r3, #0
   15b1c:	beq	15b40 <__assert_fail@plt+0x45d4>
   15b20:	movw	r0, #1632	; 0x660
   15b24:	movt	r0, #2
   15b28:	bl	113a4 <gettext@plt>
   15b2c:	mov	r3, r0
   15b30:	mov	r2, r3
   15b34:	mov	r1, #0
   15b38:	mov	r0, #1
   15b3c:	bl	11314 <error@plt>
   15b40:	ldr	r1, [fp, #-20]	; 0xffffffec
   15b44:	ldr	r0, [fp, #-16]
   15b48:	bl	15770 <__assert_fail@plt+0x4204>
   15b4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15b50:	ldr	r1, [fp, #-16]
   15b54:	ldr	r0, [fp, #12]
   15b58:	bl	15968 <__assert_fail@plt+0x43fc>
   15b5c:	mov	r3, r0
   15b60:	cmp	r3, #0
   15b64:	beq	15b74 <__assert_fail@plt+0x4608>
   15b68:	ldr	r1, [fp, #-20]	; 0xffffffec
   15b6c:	ldr	r0, [fp, #-16]
   15b70:	bl	15770 <__assert_fail@plt+0x4204>
   15b74:	ldr	r3, [fp, #12]
   15b78:	cmp	r3, #0
   15b7c:	bne	15b8c <__assert_fail@plt+0x4620>
   15b80:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b84:	mov	r2, #1
   15b88:	str	r2, [r3, #28]
   15b8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b90:	ldr	r2, [r3]
   15b94:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b98:	ldr	r3, [r3, #8]
   15b9c:	cmp	r2, r3
   15ba0:	bcc	15c28 <__assert_fail@plt+0x46bc>
   15ba4:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ba8:	ldr	r3, [r3, #4]
   15bac:	cmp	r3, #0
   15bb0:	bne	15be8 <__assert_fail@plt+0x467c>
   15bb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   15bb8:	mov	r2, #64	; 0x40
   15bbc:	str	r2, [r3, #8]
   15bc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15bc4:	ldr	r3, [r3, #8]
   15bc8:	lsl	r3, r3, #2
   15bcc:	mov	r0, r3
   15bd0:	bl	1c1f8 <__assert_fail@plt+0xac8c>
   15bd4:	mov	r3, r0
   15bd8:	mov	r2, r3
   15bdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15be0:	str	r2, [r3, #4]
   15be4:	b	15c28 <__assert_fail@plt+0x46bc>
   15be8:	ldr	r3, [fp, #-20]	; 0xffffffec
   15bec:	ldr	r3, [r3, #8]
   15bf0:	lsl	r2, r3, #1
   15bf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   15bf8:	str	r2, [r3, #8]
   15bfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c00:	ldr	r2, [r3, #4]
   15c04:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c08:	ldr	r3, [r3, #8]
   15c0c:	lsl	r3, r3, #2
   15c10:	mov	r1, r3
   15c14:	mov	r0, r2
   15c18:	bl	1c2ac <__assert_fail@plt+0xad40>
   15c1c:	mov	r2, r0
   15c20:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c24:	str	r2, [r3, #4]
   15c28:	ldr	r3, [fp, #-8]
   15c2c:	cmp	r3, #0
   15c30:	beq	15c64 <__assert_fail@plt+0x46f8>
   15c34:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c38:	ldr	r2, [r3, #4]
   15c3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c40:	ldr	r3, [r3]
   15c44:	add	r0, r3, #1
   15c48:	ldr	r1, [fp, #-20]	; 0xffffffec
   15c4c:	str	r0, [r1]
   15c50:	lsl	r3, r3, #2
   15c54:	add	r3, r2, r3
   15c58:	mov	r2, #0
   15c5c:	str	r2, [r3]
   15c60:	b	15d44 <__assert_fail@plt+0x47d8>
   15c64:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c68:	ldr	r1, [r3, #12]
   15c6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c70:	ldr	r2, [r3, #16]
   15c74:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c78:	ldr	r0, [r3, #4]
   15c7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c80:	ldr	r3, [r3]
   15c84:	add	lr, r3, #1
   15c88:	ldr	ip, [fp, #-20]	; 0xffffffec
   15c8c:	str	lr, [ip]
   15c90:	lsl	r3, r3, #2
   15c94:	add	r3, r0, r3
   15c98:	add	r2, r1, r2
   15c9c:	str	r2, [r3]
   15ca0:	ldr	r3, [fp, #4]
   15ca4:	cmp	r3, #0
   15ca8:	beq	15ce4 <__assert_fail@plt+0x4778>
   15cac:	ldr	r3, [fp, #-20]	; 0xffffffec
   15cb0:	ldr	r2, [r3, #12]
   15cb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   15cb8:	ldr	r3, [r3, #16]
   15cbc:	add	r3, r2, r3
   15cc0:	ldr	r1, [fp, #4]
   15cc4:	mov	r0, r3
   15cc8:	bl	112f0 <strcpy@plt>
   15ccc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15cd0:	ldr	r2, [r3, #16]
   15cd4:	ldr	r3, [fp, #8]
   15cd8:	add	r2, r2, r3
   15cdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ce0:	str	r2, [r3, #16]
   15ce4:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ce8:	ldr	r2, [r3, #12]
   15cec:	ldr	r3, [fp, #-20]	; 0xffffffec
   15cf0:	ldr	r3, [r3, #16]
   15cf4:	add	r3, r2, r3
   15cf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15cfc:	mov	r0, r3
   15d00:	bl	112f0 <strcpy@plt>
   15d04:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d08:	ldr	r2, [r3, #16]
   15d0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15d10:	add	r2, r2, r3
   15d14:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d18:	str	r2, [r3, #16]
   15d1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15d20:	ldr	r1, [fp, #-16]
   15d24:	ldr	r0, [fp, #12]
   15d28:	bl	15968 <__assert_fail@plt+0x43fc>
   15d2c:	mov	r3, r0
   15d30:	cmp	r3, #0
   15d34:	beq	15d44 <__assert_fail@plt+0x47d8>
   15d38:	ldr	r1, [fp, #-20]	; 0xffffffec
   15d3c:	ldr	r0, [fp, #-16]
   15d40:	bl	15770 <__assert_fail@plt+0x4204>
   15d44:	ldr	r3, [fp, #12]
   15d48:	cmp	r3, #0
   15d4c:	beq	15d60 <__assert_fail@plt+0x47f4>
   15d50:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d54:	ldr	r2, [r3, #16]
   15d58:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d5c:	str	r2, [r3, #20]
   15d60:	nop	{0}
   15d64:	sub	sp, fp, #4
   15d68:	ldr	fp, [sp]
   15d6c:	add	sp, sp, #4
   15d70:	pop	{pc}		; (ldr pc, [sp], #4)
   15d74:	str	fp, [sp, #-8]!
   15d78:	str	lr, [sp, #4]
   15d7c:	add	fp, sp, #4
   15d80:	sub	sp, sp, #8
   15d84:	mov	r0, #0
   15d88:	bl	11254 <sysconf@plt>
   15d8c:	str	r0, [fp, #-8]
   15d90:	ldr	r3, [fp, #-8]
   15d94:	cmp	r3, #0
   15d98:	ble	15da4 <__assert_fail@plt+0x4838>
   15d9c:	ldr	r3, [fp, #-8]
   15da0:	b	15da8 <__assert_fail@plt+0x483c>
   15da4:	mvn	r3, #-2147483648	; 0x80000000
   15da8:	mov	r0, r3
   15dac:	sub	sp, fp, #4
   15db0:	ldr	fp, [sp]
   15db4:	add	sp, sp, #4
   15db8:	pop	{pc}		; (ldr pc, [sp], #4)
   15dbc:	push	{fp}		; (str fp, [sp, #-4]!)
   15dc0:	add	fp, sp, #0
   15dc4:	sub	sp, sp, #20
   15dc8:	str	r0, [fp, #-8]
   15dcc:	str	r1, [fp, #-12]
   15dd0:	str	r2, [fp, #-16]
   15dd4:	str	r3, [fp, #-20]	; 0xffffffec
   15dd8:	mov	r3, #0
   15ddc:	mov	r0, r3
   15de0:	add	sp, fp, #0
   15de4:	pop	{fp}		; (ldr fp, [sp], #4)
   15de8:	bx	lr
   15dec:	str	fp, [sp, #-8]!
   15df0:	str	lr, [sp, #4]
   15df4:	add	fp, sp, #4
   15df8:	sub	sp, sp, #8
   15dfc:	mov	r3, #0
   15e00:	str	r3, [fp, #-8]
   15e04:	movw	r3, #8636	; 0x21bc
   15e08:	movt	r3, #3
   15e0c:	ldr	r3, [r3]
   15e10:	str	r3, [fp, #-12]
   15e14:	b	15e44 <__assert_fail@plt+0x48d8>
   15e18:	ldr	r3, [fp, #-12]
   15e1c:	add	r2, r3, #4
   15e20:	str	r2, [fp, #-12]
   15e24:	ldr	r3, [r3]
   15e28:	mov	r0, r3
   15e2c:	bl	113bc <strlen@plt>
   15e30:	mov	r3, r0
   15e34:	add	r3, r3, #1
   15e38:	ldr	r2, [fp, #-8]
   15e3c:	add	r3, r2, r3
   15e40:	str	r3, [fp, #-8]
   15e44:	ldr	r3, [fp, #-12]
   15e48:	ldr	r3, [r3]
   15e4c:	cmp	r3, #0
   15e50:	bne	15e18 <__assert_fail@plt+0x48ac>
   15e54:	ldr	r3, [fp, #-8]
   15e58:	mov	r0, r3
   15e5c:	sub	sp, fp, #4
   15e60:	ldr	fp, [sp]
   15e64:	add	sp, sp, #4
   15e68:	pop	{pc}		; (ldr pc, [sp], #4)
   15e6c:	str	fp, [sp, #-8]!
   15e70:	str	lr, [sp, #4]
   15e74:	add	fp, sp, #4
   15e78:	sub	sp, sp, #16
   15e7c:	str	r0, [fp, #-16]
   15e80:	str	r1, [fp, #-20]	; 0xffffffec
   15e84:	bl	15dec <__assert_fail@plt+0x4880>
   15e88:	str	r0, [fp, #-8]
   15e8c:	ldr	r3, [fp, #-16]
   15e90:	mov	r2, #4096	; 0x1000
   15e94:	str	r2, [r3, #8]
   15e98:	bl	15d74 <__assert_fail@plt+0x4808>
   15e9c:	mov	r2, r0
   15ea0:	ldr	r3, [fp, #-16]
   15ea4:	str	r2, [r3, #4]
   15ea8:	ldr	r3, [fp, #-16]
   15eac:	mov	r2, #0
   15eb0:	str	r2, [r3]
   15eb4:	ldr	r3, [fp, #-16]
   15eb8:	ldr	r3, [r3, #4]
   15ebc:	ldr	r2, [fp, #-8]
   15ec0:	cmp	r2, r3
   15ec4:	bls	15ed0 <__assert_fail@plt+0x4964>
   15ec8:	mov	r3, #1
   15ecc:	b	15fcc <__assert_fail@plt+0x4a60>
   15ed0:	ldr	r2, [fp, #-20]	; 0xffffffec
   15ed4:	ldr	r3, [fp, #-8]
   15ed8:	add	r2, r2, r3
   15edc:	ldr	r3, [fp, #-16]
   15ee0:	ldr	r3, [r3, #4]
   15ee4:	cmp	r2, r3
   15ee8:	bcc	15ef4 <__assert_fail@plt+0x4988>
   15eec:	mov	r3, #2
   15ef0:	b	15fcc <__assert_fail@plt+0x4a60>
   15ef4:	ldr	r3, [fp, #-16]
   15ef8:	ldr	r2, [r3, #4]
   15efc:	ldr	r3, [fp, #-8]
   15f00:	sub	r2, r2, r3
   15f04:	ldr	r3, [fp, #-16]
   15f08:	str	r2, [r3, #4]
   15f0c:	ldr	r3, [fp, #-16]
   15f10:	ldr	r2, [r3, #4]
   15f14:	ldr	r3, [fp, #-20]	; 0xffffffec
   15f18:	sub	r2, r2, r3
   15f1c:	ldr	r3, [fp, #-16]
   15f20:	str	r2, [r3, #4]
   15f24:	ldr	r3, [fp, #-16]
   15f28:	ldr	r3, [r3, #4]
   15f2c:	lsr	r3, r3, #2
   15f30:	sub	r2, r3, #2
   15f34:	ldr	r3, [fp, #-16]
   15f38:	str	r2, [r3, #16]
   15f3c:	ldr	r3, [fp, #-16]
   15f40:	ldr	r3, [r3, #16]
   15f44:	cmp	r3, #0
   15f48:	bne	15f6c <__assert_fail@plt+0x4a00>
   15f4c:	movw	r3, #1896	; 0x768
   15f50:	movt	r3, #2
   15f54:	movw	r2, #518	; 0x206
   15f58:	movw	r1, #1400	; 0x578
   15f5c:	movt	r1, #2
   15f60:	movw	r0, #1656	; 0x678
   15f64:	movt	r0, #2
   15f68:	bl	1156c <__assert_fail@plt>
   15f6c:	ldr	r3, [fp, #-16]
   15f70:	mov	r2, #0
   15f74:	str	r2, [r3, #20]
   15f78:	ldr	r3, [fp, #-16]
   15f7c:	mov	r2, #0
   15f80:	str	r2, [r3, #24]
   15f84:	ldr	r3, [fp, #-16]
   15f88:	mov	r2, #0
   15f8c:	str	r2, [r3, #28]
   15f90:	ldr	r2, [fp, #-16]
   15f94:	movw	r3, #23996	; 0x5dbc
   15f98:	movt	r3, #1
   15f9c:	str	r3, [r2, #32]
   15fa0:	ldr	r3, [fp, #-16]
   15fa4:	mov	r2, #0
   15fa8:	str	r2, [r3, #36]	; 0x24
   15fac:	ldr	r3, [fp, #-16]
   15fb0:	mov	r2, #0
   15fb4:	str	r2, [r3, #40]	; 0x28
   15fb8:	ldr	r3, [fp, #-16]
   15fbc:	ldr	r2, [r3, #4]
   15fc0:	ldr	r3, [fp, #-16]
   15fc4:	str	r2, [r3, #12]
   15fc8:	mov	r3, #0
   15fcc:	mov	r0, r3
   15fd0:	sub	sp, fp, #4
   15fd4:	ldr	fp, [sp]
   15fd8:	add	sp, sp, #4
   15fdc:	pop	{pc}		; (ldr pc, [sp], #4)
   15fe0:	push	{fp}		; (str fp, [sp, #-4]!)
   15fe4:	add	fp, sp, #0
   15fe8:	sub	sp, sp, #12
   15fec:	str	r0, [fp, #-8]
   15ff0:	ldr	r3, [fp, #-8]
   15ff4:	ldr	r3, [r3, #4]
   15ff8:	cmp	r3, #131072	; 0x20000
   15ffc:	bcs	16014 <__assert_fail@plt+0x4aa8>
   16000:	ldr	r3, [fp, #-8]
   16004:	ldr	r2, [r3, #4]
   16008:	ldr	r3, [fp, #-8]
   1600c:	str	r2, [r3, #12]
   16010:	b	16044 <__assert_fail@plt+0x4ad8>
   16014:	ldr	r3, [fp, #-8]
   16018:	ldr	r3, [r3, #8]
   1601c:	cmp	r3, #131072	; 0x20000
   16020:	bls	16038 <__assert_fail@plt+0x4acc>
   16024:	ldr	r3, [fp, #-8]
   16028:	ldr	r2, [r3, #8]
   1602c:	ldr	r3, [fp, #-8]
   16030:	str	r2, [r3, #12]
   16034:	b	16044 <__assert_fail@plt+0x4ad8>
   16038:	ldr	r3, [fp, #-8]
   1603c:	mov	r2, #131072	; 0x20000
   16040:	str	r2, [r3, #12]
   16044:	nop	{0}
   16048:	add	sp, fp, #0
   1604c:	pop	{fp}		; (ldr fp, [sp], #4)
   16050:	bx	lr
   16054:	str	fp, [sp, #-8]!
   16058:	str	lr, [sp, #4]
   1605c:	add	fp, sp, #4
   16060:	sub	sp, sp, #16
   16064:	str	r0, [fp, #-8]
   16068:	str	r1, [fp, #-12]
   1606c:	str	r2, [fp, #-16]
   16070:	ldr	r3, [fp, #-12]
   16074:	mov	r2, #0
   16078:	str	r2, [r3]
   1607c:	ldr	r3, [fp, #-12]
   16080:	mov	r2, #0
   16084:	str	r2, [r3, #16]
   16088:	ldr	r3, [fp, #-12]
   1608c:	mov	r2, #0
   16090:	str	r2, [r3, #4]
   16094:	ldr	r3, [fp, #-12]
   16098:	mov	r2, #0
   1609c:	str	r2, [r3, #8]
   160a0:	ldr	r3, [fp, #-12]
   160a4:	mov	r2, #0
   160a8:	str	r2, [r3, #36]	; 0x24
   160ac:	ldr	r3, [fp, #-12]
   160b0:	mov	r2, #0
   160b4:	str	r2, [r3, #40]	; 0x28
   160b8:	ldr	r3, [fp, #-8]
   160bc:	ldr	r2, [r3, #12]
   160c0:	movw	r3, #63487	; 0xf7ff
   160c4:	movt	r3, #32767	; 0x7fff
   160c8:	cmp	r2, r3
   160cc:	bls	160f0 <__assert_fail@plt+0x4b84>
   160d0:	movw	r3, #1916	; 0x77c
   160d4:	movt	r3, #2
   160d8:	mov	r2, #572	; 0x23c
   160dc:	movw	r1, #1400	; 0x578
   160e0:	movt	r1, #2
   160e4:	movw	r0, #1680	; 0x690
   160e8:	movt	r0, #2
   160ec:	bl	1156c <__assert_fail@plt>
   160f0:	ldr	r3, [fp, #-8]
   160f4:	ldr	r3, [r3, #12]
   160f8:	add	r3, r3, #1
   160fc:	mov	r0, r3
   16100:	bl	1c1f8 <__assert_fail@plt+0xac8c>
   16104:	mov	r3, r0
   16108:	mov	r2, r3
   1610c:	ldr	r3, [fp, #-12]
   16110:	str	r2, [r3, #12]
   16114:	ldr	r3, [fp, #-12]
   16118:	mov	r2, #0
   1611c:	str	r2, [r3, #20]
   16120:	ldr	r3, [fp, #-12]
   16124:	ldr	r2, [r3, #20]
   16128:	ldr	r3, [fp, #-12]
   1612c:	str	r2, [r3, #16]
   16130:	ldr	r3, [fp, #-12]
   16134:	mov	r2, #0
   16138:	str	r2, [r3, #28]
   1613c:	ldr	r3, [fp, #-12]
   16140:	mvn	r2, #0
   16144:	str	r2, [r3, #32]
   16148:	ldr	r3, [fp, #-12]
   1614c:	ldr	r2, [fp, #-16]
   16150:	str	r2, [r3, #24]
   16154:	nop	{0}
   16158:	sub	sp, fp, #4
   1615c:	ldr	fp, [sp]
   16160:	add	sp, sp, #4
   16164:	pop	{pc}		; (ldr pc, [sp], #4)
   16168:	push	{fp}		; (str fp, [sp, #-4]!)
   1616c:	add	fp, sp, #0
   16170:	sub	sp, sp, #12
   16174:	str	r0, [fp, #-8]
   16178:	str	r1, [fp, #-12]
   1617c:	ldr	r3, [fp, #-8]
   16180:	ldr	r2, [r3, #28]
   16184:	ldr	r3, [fp, #-12]
   16188:	str	r2, [r3]
   1618c:	ldr	r3, [fp, #-12]
   16190:	ldr	r2, [r3, #20]
   16194:	ldr	r3, [fp, #-12]
   16198:	str	r2, [r3, #16]
   1619c:	ldr	r3, [fp, #-12]
   161a0:	mov	r2, #0
   161a4:	str	r2, [r3, #28]
   161a8:	ldr	r3, [fp, #-12]
   161ac:	mvn	r2, #0
   161b0:	str	r2, [r3, #32]
   161b4:	nop	{0}
   161b8:	add	sp, fp, #0
   161bc:	pop	{fp}		; (ldr fp, [sp], #4)
   161c0:	bx	lr
   161c4:	str	r4, [sp, #-12]!
   161c8:	str	fp, [sp, #4]
   161cc:	str	lr, [sp, #8]
   161d0:	add	fp, sp, #8
   161d4:	sub	sp, sp, #36	; 0x24
   161d8:	str	r0, [fp, #-32]	; 0xffffffe0
   161dc:	str	r1, [fp, #-36]	; 0xffffffdc
   161e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   161e4:	bl	11338 <getenv@plt>
   161e8:	str	r0, [fp, #-16]
   161ec:	ldr	r3, [fp, #-16]
   161f0:	cmp	r3, #0
   161f4:	beq	16268 <__assert_fail@plt+0x4cfc>
   161f8:	sub	r2, fp, #24
   161fc:	sub	r1, fp, #20
   16200:	mov	r3, #0
   16204:	str	r3, [sp]
   16208:	mov	r3, r2
   1620c:	mov	r2, #10
   16210:	ldr	r0, [fp, #-16]
   16214:	bl	1cba0 <__assert_fail@plt+0xb634>
   16218:	mov	r3, r0
   1621c:	cmp	r3, #0
   16220:	bne	1623c <__assert_fail@plt+0x4cd0>
   16224:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16228:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1622c:	cmp	r2, r3
   16230:	bls	16268 <__assert_fail@plt+0x4cfc>
   16234:	mov	r3, #1
   16238:	b	1626c <__assert_fail@plt+0x4d00>
   1623c:	bl	113ec <__errno_location@plt>
   16240:	mov	r3, r0
   16244:	ldr	r4, [r3]
   16248:	movw	r0, #1716	; 0x6b4
   1624c:	movt	r0, #2
   16250:	bl	113a4 <gettext@plt>
   16254:	mov	r2, r0
   16258:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1625c:	mov	r1, r4
   16260:	mov	r0, #1
   16264:	bl	11314 <error@plt>
   16268:	mov	r3, #0
   1626c:	mov	r0, r3
   16270:	sub	sp, fp, #8
   16274:	ldr	r4, [sp]
   16278:	ldr	fp, [sp, #4]
   1627c:	add	sp, sp, #8
   16280:	pop	{pc}		; (ldr pc, [sp], #4)
   16284:	str	fp, [sp, #-8]!
   16288:	str	lr, [sp, #4]
   1628c:	add	fp, sp, #4
   16290:	sub	sp, sp, #16
   16294:	str	r0, [fp, #-16]
   16298:	mov	r3, #0
   1629c:	str	r3, [fp, #-12]
   162a0:	ldr	r3, [fp, #-12]
   162a4:	str	r3, [fp, #-8]
   162a8:	b	162e4 <__assert_fail@plt+0x4d78>
   162ac:	ldr	r3, [fp, #-12]
   162b0:	add	r3, r3, #1
   162b4:	str	r3, [fp, #-12]
   162b8:	ldr	r3, [fp, #-16]
   162bc:	ldr	r3, [r3]
   162c0:	mov	r0, r3
   162c4:	bl	113bc <strlen@plt>
   162c8:	mov	r2, r0
   162cc:	ldr	r3, [fp, #-8]
   162d0:	add	r3, r3, r2
   162d4:	str	r3, [fp, #-8]
   162d8:	ldr	r3, [fp, #-16]
   162dc:	add	r3, r3, #4
   162e0:	str	r3, [fp, #-16]
   162e4:	ldr	r3, [fp, #-16]
   162e8:	ldr	r3, [r3]
   162ec:	cmp	r3, #0
   162f0:	bne	162ac <__assert_fail@plt+0x4d40>
   162f4:	ldr	r1, [fp, #-12]
   162f8:	movw	r0, #1780	; 0x6f4
   162fc:	movt	r0, #2
   16300:	bl	161c4 <__assert_fail@plt+0x4c58>
   16304:	mov	r3, r0
   16308:	cmp	r3, #0
   1630c:	bne	1632c <__assert_fail@plt+0x4dc0>
   16310:	ldr	r1, [fp, #-8]
   16314:	movw	r0, #1820	; 0x71c
   16318:	movt	r0, #2
   1631c:	bl	161c4 <__assert_fail@plt+0x4c58>
   16320:	mov	r3, r0
   16324:	cmp	r3, #0
   16328:	beq	16334 <__assert_fail@plt+0x4dc8>
   1632c:	mov	r3, #1
   16330:	b	16338 <__assert_fail@plt+0x4dcc>
   16334:	mov	r3, #0
   16338:	and	r3, r3, #1
   1633c:	uxtb	r3, r3
   16340:	mov	r0, r3
   16344:	sub	sp, fp, #4
   16348:	ldr	fp, [sp]
   1634c:	add	sp, sp, #4
   16350:	pop	{pc}		; (ldr pc, [sp], #4)
   16354:	str	r4, [sp, #-12]!
   16358:	str	fp, [sp, #4]
   1635c:	str	lr, [sp, #8]
   16360:	add	fp, sp, #8
   16364:	sub	sp, sp, #28
   16368:	movw	r3, #1932	; 0x78c
   1636c:	movt	r3, #2
   16370:	str	r3, [fp, #-24]	; 0xffffffe8
   16374:	mvn	r3, #0
   16378:	str	r3, [fp, #-16]
   1637c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16380:	bl	17688 <__assert_fail@plt+0x611c>
   16384:	str	r0, [fp, #-28]	; 0xffffffe4
   16388:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1638c:	cmp	r3, #0
   16390:	beq	164b4 <__assert_fail@plt+0x4f48>
   16394:	mov	r3, #0
   16398:	str	r3, [fp, #-20]	; 0xffffffec
   1639c:	bl	113ec <__errno_location@plt>
   163a0:	mov	r2, r0
   163a4:	mov	r3, #0
   163a8:	str	r3, [r2]
   163ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   163b0:	bl	114d0 <readdir64@plt>
   163b4:	str	r0, [fp, #-32]	; 0xffffffe0
   163b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   163bc:	cmp	r3, #0
   163c0:	bne	16418 <__assert_fail@plt+0x4eac>
   163c4:	bl	113ec <__errno_location@plt>
   163c8:	mov	r3, r0
   163cc:	ldr	r3, [r3]
   163d0:	cmp	r3, #0
   163d4:	beq	16494 <__assert_fail@plt+0x4f28>
   163d8:	bl	113ec <__errno_location@plt>
   163dc:	mov	r3, r0
   163e0:	ldr	r4, [r3]
   163e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   163e8:	mov	r1, #8
   163ec:	mov	r0, #0
   163f0:	bl	1b138 <__assert_fail@plt+0x9bcc>
   163f4:	mov	r3, r0
   163f8:	movw	r2, #1948	; 0x79c
   163fc:	movt	r2, #2
   16400:	mov	r1, r4
   16404:	mov	r0, #0
   16408:	bl	11314 <error@plt>
   1640c:	mov	r3, #0
   16410:	str	r3, [fp, #-20]	; 0xffffffec
   16414:	b	16494 <__assert_fail@plt+0x4f28>
   16418:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1641c:	ldrb	r3, [r3, #19]
   16420:	cmp	r3, #46	; 0x2e
   16424:	bne	16458 <__assert_fail@plt+0x4eec>
   16428:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1642c:	ldrb	r3, [r3, #20]
   16430:	cmp	r3, #0
   16434:	beq	1639c <__assert_fail@plt+0x4e30>
   16438:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1643c:	ldrb	r3, [r3, #20]
   16440:	cmp	r3, #46	; 0x2e
   16444:	bne	16458 <__assert_fail@plt+0x4eec>
   16448:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1644c:	ldrb	r3, [r3, #21]
   16450:	cmp	r3, #0
   16454:	beq	1639c <__assert_fail@plt+0x4e30>
   16458:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1645c:	add	r3, r3, #19
   16460:	mov	r1, #0
   16464:	mov	r0, r3
   16468:	bl	16de4 <__assert_fail@plt+0x5878>
   1646c:	str	r0, [fp, #-36]	; 0xffffffdc
   16470:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16474:	ldr	r3, [fp, #-16]
   16478:	cmp	r2, r3
   1647c:	ble	16488 <__assert_fail@plt+0x4f1c>
   16480:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16484:	str	r3, [fp, #-16]
   16488:	mov	r3, #1
   1648c:	str	r3, [fp, #-20]	; 0xffffffec
   16490:	b	1639c <__assert_fail@plt+0x4e30>
   16494:	nop	{0}
   16498:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1649c:	bl	11560 <closedir@plt>
   164a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   164a4:	cmp	r3, #0
   164a8:	beq	164b4 <__assert_fail@plt+0x4f48>
   164ac:	ldr	r3, [fp, #-16]
   164b0:	b	164b8 <__assert_fail@plt+0x4f4c>
   164b4:	mvn	r3, #0
   164b8:	mov	r0, r3
   164bc:	sub	sp, fp, #8
   164c0:	ldr	r4, [sp]
   164c4:	ldr	fp, [sp, #4]
   164c8:	add	sp, sp, #8
   164cc:	pop	{pc}		; (ldr pc, [sp], #4)
   164d0:	str	fp, [sp, #-8]!
   164d4:	str	lr, [sp, #4]
   164d8:	add	fp, sp, #4
   164dc:	sub	sp, sp, #24
   164e0:	bl	16354 <__assert_fail@plt+0x4de8>
   164e4:	str	r0, [fp, #-8]
   164e8:	ldr	r3, [fp, #-8]
   164ec:	cmp	r3, #0
   164f0:	blt	164fc <__assert_fail@plt+0x4f90>
   164f4:	ldr	r3, [fp, #-8]
   164f8:	b	16568 <__assert_fail@plt+0x4ffc>
   164fc:	mov	r0, #4
   16500:	bl	11254 <sysconf@plt>
   16504:	str	r0, [fp, #-8]
   16508:	ldr	r3, [fp, #-8]
   1650c:	cmn	r3, #1
   16510:	bne	1651c <__assert_fail@plt+0x4fb0>
   16514:	mov	r3, #20
   16518:	str	r3, [fp, #-8]
   1651c:	sub	r3, fp, #28
   16520:	mov	r1, r3
   16524:	mov	r0, #7
   16528:	bl	1126c <getrlimit64@plt>
   1652c:	mov	r3, r0
   16530:	cmp	r3, #0
   16534:	bne	16564 <__assert_fail@plt+0x4ff8>
   16538:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1653c:	mvn	r0, #0
   16540:	mvn	r1, #0
   16544:	cmp	r3, r1
   16548:	cmpeq	r2, r0
   1654c:	bne	16558 <__assert_fail@plt+0x4fec>
   16550:	ldr	r3, [fp, #-8]
   16554:	b	16568 <__assert_fail@plt+0x4ffc>
   16558:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1655c:	mov	r3, r2
   16560:	b	16568 <__assert_fail@plt+0x4ffc>
   16564:	ldr	r3, [fp, #-8]
   16568:	mov	r0, r3
   1656c:	sub	sp, fp, #4
   16570:	ldr	fp, [sp]
   16574:	add	sp, sp, #4
   16578:	pop	{pc}		; (ldr pc, [sp], #4)
   1657c:	str	fp, [sp, #-8]!
   16580:	str	lr, [sp, #4]
   16584:	add	fp, sp, #4
   16588:	sub	sp, sp, #544	; 0x220
   1658c:	str	r0, [fp, #-536]	; 0xfffffde8
   16590:	str	r1, [fp, #-540]	; 0xfffffde4
   16594:	str	r2, [fp, #-544]	; 0xfffffde0
   16598:	str	r3, [fp, #-548]	; 0xfffffddc
   1659c:	mov	r3, #0
   165a0:	str	r3, [fp, #-20]	; 0xffffffec
   165a4:	b	16718 <__assert_fail@plt+0x51ac>
   165a8:	ldr	r2, [fp, #-540]	; 0xfffffde4
   165ac:	ldr	r3, [fp, #-536]	; 0xfffffde8
   165b0:	sub	r3, r2, r3
   165b4:	str	r3, [fp, #-12]
   165b8:	ldr	r3, [fp, #-12]
   165bc:	cmp	r3, #64	; 0x40
   165c0:	ble	165cc <__assert_fail@plt+0x5060>
   165c4:	mov	r3, #64	; 0x40
   165c8:	str	r3, [fp, #-12]
   165cc:	mov	r3, #0
   165d0:	str	r3, [fp, #-8]
   165d4:	b	16644 <__assert_fail@plt+0x50d8>
   165d8:	sub	r3, fp, #4
   165dc:	sub	r2, r3, #528	; 0x210
   165e0:	ldr	r3, [fp, #-8]
   165e4:	lsl	r3, r3, #3
   165e8:	add	r3, r2, r3
   165ec:	add	r3, r3, #4
   165f0:	mov	r2, #5
   165f4:	strh	r2, [r3]
   165f8:	sub	r3, fp, #4
   165fc:	sub	r2, r3, #528	; 0x210
   16600:	ldr	r3, [fp, #-8]
   16604:	lsl	r3, r3, #3
   16608:	add	r3, r2, r3
   1660c:	add	r3, r3, #6
   16610:	mov	r2, #0
   16614:	strh	r2, [r3]
   16618:	ldr	r2, [fp, #-536]	; 0xfffffde8
   1661c:	ldr	r3, [fp, #-8]
   16620:	add	r2, r2, r3
   16624:	ldr	r3, [fp, #-8]
   16628:	lsl	r3, r3, #3
   1662c:	sub	r1, fp, #4
   16630:	add	r3, r1, r3
   16634:	str	r2, [r3, #-528]	; 0xfffffdf0
   16638:	ldr	r3, [fp, #-8]
   1663c:	add	r3, r3, #1
   16640:	str	r3, [fp, #-8]
   16644:	ldr	r2, [fp, #-8]
   16648:	ldr	r3, [fp, #-12]
   1664c:	cmp	r2, r3
   16650:	blt	165d8 <__assert_fail@plt+0x506c>
   16654:	ldr	r1, [fp, #-12]
   16658:	sub	r3, fp, #532	; 0x214
   1665c:	mov	r2, #0
   16660:	mov	r0, r3
   16664:	bl	112a8 <poll@plt>
   16668:	str	r0, [fp, #-20]	; 0xffffffec
   1666c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16670:	cmn	r3, #1
   16674:	bne	16680 <__assert_fail@plt+0x5114>
   16678:	mvn	r3, #0
   1667c:	b	1672c <__assert_fail@plt+0x51c0>
   16680:	mov	r3, #0
   16684:	str	r3, [fp, #-16]
   16688:	b	166f8 <__assert_fail@plt+0x518c>
   1668c:	sub	r3, fp, #4
   16690:	sub	r2, r3, #528	; 0x210
   16694:	ldr	r3, [fp, #-16]
   16698:	lsl	r3, r3, #3
   1669c:	add	r3, r2, r3
   166a0:	add	r3, r3, #6
   166a4:	ldrsh	r3, [r3]
   166a8:	cmp	r3, #32
   166ac:	beq	166ec <__assert_fail@plt+0x5180>
   166b0:	ldr	r3, [fp, #-16]
   166b4:	lsl	r3, r3, #3
   166b8:	sub	r2, fp, #4
   166bc:	add	r3, r2, r3
   166c0:	ldr	r2, [r3, #-528]	; 0xfffffdf0
   166c4:	ldr	r3, [fp, #-544]	; 0xfffffde0
   166c8:	ldr	r1, [fp, #-548]	; 0xfffffddc
   166cc:	mov	r0, r2
   166d0:	blx	r3
   166d4:	str	r0, [fp, #-20]	; 0xffffffec
   166d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   166dc:	cmp	r3, #0
   166e0:	beq	166ec <__assert_fail@plt+0x5180>
   166e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   166e8:	b	1672c <__assert_fail@plt+0x51c0>
   166ec:	ldr	r3, [fp, #-16]
   166f0:	add	r3, r3, #1
   166f4:	str	r3, [fp, #-16]
   166f8:	ldr	r2, [fp, #-16]
   166fc:	ldr	r3, [fp, #-12]
   16700:	cmp	r2, r3
   16704:	blt	1668c <__assert_fail@plt+0x5120>
   16708:	ldr	r2, [fp, #-536]	; 0xfffffde8
   1670c:	ldr	r3, [fp, #-12]
   16710:	add	r3, r2, r3
   16714:	str	r3, [fp, #-536]	; 0xfffffde8
   16718:	ldr	r2, [fp, #-536]	; 0xfffffde8
   1671c:	ldr	r3, [fp, #-540]	; 0xfffffde4
   16720:	cmp	r2, r3
   16724:	blt	165a8 <__assert_fail@plt+0x503c>
   16728:	mov	r3, #0
   1672c:	mov	r0, r3
   16730:	sub	sp, fp, #4
   16734:	ldr	fp, [sp]
   16738:	add	sp, sp, #4
   1673c:	pop	{pc}		; (ldr pc, [sp], #4)
   16740:	str	fp, [sp, #-8]!
   16744:	str	lr, [sp, #4]
   16748:	add	fp, sp, #4
   1674c:	sub	sp, sp, #16
   16750:	str	r0, [fp, #-16]
   16754:	mov	r1, #1
   16758:	ldr	r0, [fp, #-16]
   1675c:	bl	1d2bc <__assert_fail@plt+0xbd50>
   16760:	str	r0, [fp, #-8]
   16764:	ldr	r3, [fp, #-8]
   16768:	and	r3, r3, #1
   1676c:	mov	r0, r3
   16770:	sub	sp, fp, #4
   16774:	ldr	fp, [sp]
   16778:	add	sp, sp, #4
   1677c:	pop	{pc}		; (ldr pc, [sp], #4)
   16780:	str	fp, [sp, #-8]!
   16784:	str	lr, [sp, #4]
   16788:	add	fp, sp, #4
   1678c:	sub	sp, sp, #16
   16790:	str	r0, [fp, #-16]
   16794:	str	r1, [fp, #-20]	; 0xffffffec
   16798:	ldr	r0, [fp, #-16]
   1679c:	bl	16740 <__assert_fail@plt+0x51d4>
   167a0:	mov	r3, r0
   167a4:	cmp	r3, #0
   167a8:	beq	167b4 <__assert_fail@plt+0x5248>
   167ac:	mov	r3, #0
   167b0:	b	16840 <__assert_fail@plt+0x52d4>
   167b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   167b8:	str	r3, [fp, #-8]
   167bc:	ldr	r3, [fp, #-8]
   167c0:	ldr	r0, [r3]
   167c4:	ldr	r3, [fp, #-8]
   167c8:	ldr	r3, [r3, #4]
   167cc:	add	r3, r3, #1
   167d0:	lsl	r1, r3, #2
   167d4:	ldr	r3, [fp, #-8]
   167d8:	add	r3, r3, #8
   167dc:	mov	r2, r3
   167e0:	bl	17074 <__assert_fail@plt+0x5b08>
   167e4:	str	r0, [fp, #-12]
   167e8:	ldr	r3, [fp, #-12]
   167ec:	cmp	r3, #0
   167f0:	beq	1683c <__assert_fail@plt+0x52d0>
   167f4:	ldr	r3, [fp, #-8]
   167f8:	ldr	r2, [fp, #-12]
   167fc:	str	r2, [r3]
   16800:	ldr	r3, [fp, #-8]
   16804:	ldr	r2, [r3]
   16808:	ldr	r3, [fp, #-8]
   1680c:	ldr	r3, [r3, #4]
   16810:	lsl	r3, r3, #2
   16814:	add	r3, r2, r3
   16818:	ldr	r2, [fp, #-16]
   1681c:	str	r2, [r3]
   16820:	ldr	r3, [fp, #-8]
   16824:	ldr	r3, [r3, #4]
   16828:	add	r2, r3, #1
   1682c:	ldr	r3, [fp, #-8]
   16830:	str	r2, [r3, #4]
   16834:	mov	r3, #0
   16838:	b	16840 <__assert_fail@plt+0x52d4>
   1683c:	mvn	r3, #0
   16840:	mov	r0, r3
   16844:	sub	sp, fp, #4
   16848:	ldr	fp, [sp]
   1684c:	add	sp, sp, #4
   16850:	pop	{pc}		; (ldr pc, [sp], #4)
   16854:	str	fp, [sp, #-8]!
   16858:	str	lr, [sp, #4]
   1685c:	add	fp, sp, #4
   16860:	sub	sp, sp, #16
   16864:	bl	164d0 <__assert_fail@plt+0x4f64>
   16868:	str	r0, [fp, #-8]
   1686c:	mov	r3, #0
   16870:	str	r3, [fp, #-20]	; 0xffffffec
   16874:	mov	r3, #0
   16878:	str	r3, [fp, #-12]
   1687c:	ldr	r3, [fp, #-12]
   16880:	str	r3, [fp, #-16]
   16884:	ldr	r3, [fp, #-8]
   16888:	cmn	r3, #-2147483647	; 0x80000001
   1688c:	beq	1689c <__assert_fail@plt+0x5330>
   16890:	ldr	r3, [fp, #-8]
   16894:	add	r3, r3, #1
   16898:	str	r3, [fp, #-8]
   1689c:	sub	r3, fp, #20
   168a0:	movw	r2, #26496	; 0x6780
   168a4:	movt	r2, #1
   168a8:	ldr	r1, [fp, #-8]
   168ac:	mov	r0, #0
   168b0:	bl	1657c <__assert_fail@plt+0x5010>
   168b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   168b8:	movw	r3, #8848	; 0x2290
   168bc:	movt	r3, #3
   168c0:	str	r2, [r3]
   168c4:	ldr	r2, [fp, #-16]
   168c8:	movw	r3, #8852	; 0x2294
   168cc:	movt	r3, #3
   168d0:	str	r2, [r3]
   168d4:	nop	{0}
   168d8:	sub	sp, fp, #4
   168dc:	ldr	fp, [sp]
   168e0:	add	sp, sp, #4
   168e4:	pop	{pc}		; (ldr pc, [sp], #4)
   168e8:	str	fp, [sp, #-8]!
   168ec:	str	lr, [sp, #4]
   168f0:	add	fp, sp, #4
   168f4:	sub	sp, sp, #16
   168f8:	str	r0, [fp, #-16]
   168fc:	str	r1, [fp, #-20]	; 0xffffffec
   16900:	ldr	r0, [fp, #-16]
   16904:	bl	16740 <__assert_fail@plt+0x51d4>
   16908:	mov	r3, r0
   1690c:	cmp	r3, #0
   16910:	bne	169c4 <__assert_fail@plt+0x5458>
   16914:	ldr	r3, [fp, #-20]	; 0xffffffec
   16918:	str	r3, [fp, #-8]
   1691c:	b	16990 <__assert_fail@plt+0x5424>
   16920:	ldr	r3, [fp, #-8]
   16924:	ldr	r2, [r3]
   16928:	ldr	r3, [fp, #-8]
   1692c:	ldr	r3, [r3, #8]
   16930:	lsl	r3, r3, #2
   16934:	add	r3, r2, r3
   16938:	ldr	r3, [r3]
   1693c:	ldr	r2, [fp, #-16]
   16940:	cmp	r2, r3
   16944:	ble	16960 <__assert_fail@plt+0x53f4>
   16948:	ldr	r3, [fp, #-8]
   1694c:	ldr	r3, [r3, #8]
   16950:	add	r2, r3, #1
   16954:	ldr	r3, [fp, #-8]
   16958:	str	r2, [r3, #8]
   1695c:	b	16990 <__assert_fail@plt+0x5424>
   16960:	ldr	r3, [fp, #-8]
   16964:	ldr	r2, [r3]
   16968:	ldr	r3, [fp, #-8]
   1696c:	ldr	r3, [r3, #8]
   16970:	lsl	r3, r3, #2
   16974:	add	r3, r2, r3
   16978:	ldr	r3, [r3]
   1697c:	ldr	r2, [fp, #-16]
   16980:	cmp	r2, r3
   16984:	bne	169ac <__assert_fail@plt+0x5440>
   16988:	mov	r3, #0
   1698c:	b	169c8 <__assert_fail@plt+0x545c>
   16990:	ldr	r3, [fp, #-8]
   16994:	ldr	r2, [r3, #8]
   16998:	ldr	r3, [fp, #-8]
   1699c:	ldr	r3, [r3, #4]
   169a0:	cmp	r2, r3
   169a4:	bcc	16920 <__assert_fail@plt+0x53b4>
   169a8:	b	169b0 <__assert_fail@plt+0x5444>
   169ac:	nop	{0}
   169b0:	ldr	r3, [fp, #-8]
   169b4:	ldr	r2, [fp, #-16]
   169b8:	str	r2, [r3, #12]
   169bc:	mvn	r3, #0
   169c0:	b	169c8 <__assert_fail@plt+0x545c>
   169c4:	mov	r3, #0
   169c8:	mov	r0, r3
   169cc:	sub	sp, fp, #4
   169d0:	ldr	fp, [sp]
   169d4:	add	sp, sp, #4
   169d8:	pop	{pc}		; (ldr pc, [sp], #4)
   169dc:	str	fp, [sp, #-8]!
   169e0:	str	lr, [sp, #4]
   169e4:	add	fp, sp, #4
   169e8:	sub	sp, sp, #32
   169ec:	str	r0, [fp, #-32]	; 0xffffffe0
   169f0:	str	r1, [fp, #-36]	; 0xffffffdc
   169f4:	bl	164d0 <__assert_fail@plt+0x4f64>
   169f8:	str	r0, [fp, #-8]
   169fc:	ldr	r3, [fp, #-8]
   16a00:	cmn	r3, #-2147483647	; 0x80000001
   16a04:	beq	16a14 <__assert_fail@plt+0x54a8>
   16a08:	ldr	r3, [fp, #-8]
   16a0c:	add	r3, r3, #1
   16a10:	str	r3, [fp, #-8]
   16a14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16a18:	str	r3, [fp, #-24]	; 0xffffffe8
   16a1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16a20:	str	r3, [fp, #-20]	; 0xffffffec
   16a24:	mov	r3, #0
   16a28:	str	r3, [fp, #-16]
   16a2c:	mvn	r3, #0
   16a30:	str	r3, [fp, #-12]
   16a34:	sub	r3, fp, #24
   16a38:	movw	r2, #26856	; 0x68e8
   16a3c:	movt	r2, #1
   16a40:	ldr	r1, [fp, #-8]
   16a44:	mov	r0, #0
   16a48:	bl	1657c <__assert_fail@plt+0x5010>
   16a4c:	ldr	r3, [fp, #-12]
   16a50:	mov	r0, r3
   16a54:	sub	sp, fp, #4
   16a58:	ldr	fp, [sp]
   16a5c:	add	sp, sp, #4
   16a60:	pop	{pc}		; (ldr pc, [sp], #4)
   16a64:	str	fp, [sp, #-8]!
   16a68:	str	lr, [sp, #4]
   16a6c:	add	fp, sp, #4
   16a70:	sub	sp, sp, #8
   16a74:	mov	r3, #0
   16a78:	strb	r3, [fp, #-5]
   16a7c:	mov	r1, #524288	; 0x80000
   16a80:	movw	r0, #1952	; 0x7a0
   16a84:	movt	r0, #2
   16a88:	bl	1777c <__assert_fail@plt+0x6210>
   16a8c:	str	r0, [fp, #-12]
   16a90:	ldr	r3, [fp, #-12]
   16a94:	cmp	r3, #0
   16a98:	blt	16ac0 <__assert_fail@plt+0x5554>
   16a9c:	ldr	r0, [fp, #-12]
   16aa0:	bl	16740 <__assert_fail@plt+0x51d4>
   16aa4:	mov	r3, r0
   16aa8:	cmp	r3, #0
   16aac:	movne	r3, #1
   16ab0:	moveq	r3, #0
   16ab4:	strb	r3, [fp, #-5]
   16ab8:	ldr	r0, [fp, #-12]
   16abc:	bl	11554 <close@plt>
   16ac0:	ldrb	r3, [fp, #-5]
   16ac4:	mov	r0, r3
   16ac8:	sub	sp, fp, #4
   16acc:	ldr	fp, [sp]
   16ad0:	add	sp, sp, #4
   16ad4:	pop	{pc}		; (ldr pc, [sp], #4)
   16ad8:	push	{r1, r2, r3}
   16adc:	str	fp, [sp, #-8]!
   16ae0:	str	lr, [sp, #4]
   16ae4:	add	fp, sp, #4
   16ae8:	sub	sp, sp, #28
   16aec:	str	r0, [fp, #-28]	; 0xffffffe4
   16af0:	mov	r3, #0
   16af4:	str	r3, [fp, #-12]
   16af8:	ldr	r3, [fp, #4]
   16afc:	and	r3, r3, #64	; 0x40
   16b00:	cmp	r3, #0
   16b04:	beq	16b24 <__assert_fail@plt+0x55b8>
   16b08:	add	r3, fp, #8
   16b0c:	str	r3, [fp, #-20]	; 0xffffffec
   16b10:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b14:	add	r2, r3, #4
   16b18:	str	r2, [fp, #-20]	; 0xffffffec
   16b1c:	ldr	r3, [r3]
   16b20:	str	r3, [fp, #-12]
   16b24:	movw	r3, #8856	; 0x2298
   16b28:	movt	r3, #3
   16b2c:	ldrb	r3, [r3]
   16b30:	eor	r3, r3, #1
   16b34:	uxtb	r3, r3
   16b38:	cmp	r3, #0
   16b3c:	beq	16b68 <__assert_fail@plt+0x55fc>
   16b40:	bl	16a64 <__assert_fail@plt+0x54f8>
   16b44:	mov	r3, r0
   16b48:	mov	r2, r3
   16b4c:	movw	r3, #8857	; 0x2299
   16b50:	movt	r3, #3
   16b54:	strb	r2, [r3]
   16b58:	movw	r3, #8856	; 0x2298
   16b5c:	movt	r3, #3
   16b60:	mov	r2, #1
   16b64:	strb	r2, [r3]
   16b68:	ldr	r3, [fp, #4]
   16b6c:	orr	r3, r3, #524288	; 0x80000
   16b70:	ldr	r2, [fp, #-12]
   16b74:	mov	r1, r3
   16b78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16b7c:	bl	1777c <__assert_fail@plt+0x6210>
   16b80:	str	r0, [fp, #-16]
   16b84:	ldr	r3, [fp, #-16]
   16b88:	cmp	r3, #0
   16b8c:	blt	16bb8 <__assert_fail@plt+0x564c>
   16b90:	movw	r3, #8857	; 0x2299
   16b94:	movt	r3, #3
   16b98:	ldrb	r3, [r3]
   16b9c:	eor	r3, r3, #1
   16ba0:	uxtb	r3, r3
   16ba4:	cmp	r3, #0
   16ba8:	beq	16bb8 <__assert_fail@plt+0x564c>
   16bac:	mov	r1, #1
   16bb0:	ldr	r0, [fp, #-16]
   16bb4:	bl	1722c <__assert_fail@plt+0x5cc0>
   16bb8:	ldr	r3, [fp, #-16]
   16bbc:	mov	r0, r3
   16bc0:	sub	sp, fp, #4
   16bc4:	ldr	fp, [sp]
   16bc8:	ldr	lr, [sp, #4]
   16bcc:	add	sp, sp, #8
   16bd0:	add	sp, sp, #12
   16bd4:	bx	lr
   16bd8:	str	fp, [sp, #-8]!
   16bdc:	str	lr, [sp, #4]
   16be0:	add	fp, sp, #4
   16be4:	movw	r3, #8848	; 0x2290
   16be8:	movt	r3, #3
   16bec:	ldr	r3, [r3]
   16bf0:	mov	r0, r3
   16bf4:	bl	1d7e8 <__assert_fail@plt+0xc27c>
   16bf8:	movw	r3, #8848	; 0x2290
   16bfc:	movt	r3, #3
   16c00:	mov	r2, #0
   16c04:	str	r2, [r3]
   16c08:	movw	r3, #8852	; 0x2294
   16c0c:	movt	r3, #3
   16c10:	mov	r2, #0
   16c14:	str	r2, [r3]
   16c18:	nop	{0}
   16c1c:	sub	sp, fp, #4
   16c20:	ldr	fp, [sp]
   16c24:	add	sp, sp, #4
   16c28:	pop	{pc}		; (ldr pc, [sp], #4)
   16c2c:	str	fp, [sp, #-8]!
   16c30:	str	lr, [sp, #4]
   16c34:	add	fp, sp, #4
   16c38:	movw	r0, #1956	; 0x7a4
   16c3c:	movt	r0, #2
   16c40:	bl	11338 <getenv@plt>
   16c44:	mov	r3, r0
   16c48:	cmp	r3, #0
   16c4c:	beq	16c58 <__assert_fail@plt+0x56ec>
   16c50:	mov	r3, #1
   16c54:	b	16c5c <__assert_fail@plt+0x56f0>
   16c58:	mov	r3, #0
   16c5c:	mov	r0, r3
   16c60:	sub	sp, fp, #4
   16c64:	ldr	fp, [sp]
   16c68:	add	sp, sp, #4
   16c6c:	pop	{pc}		; (ldr pc, [sp], #4)
   16c70:	str	fp, [sp, #-8]!
   16c74:	str	lr, [sp, #4]
   16c78:	add	fp, sp, #4
   16c7c:	sub	sp, sp, #8
   16c80:	mov	r3, #1
   16c84:	str	r3, [fp, #-8]
   16c88:	movw	r3, #8848	; 0x2290
   16c8c:	movt	r3, #3
   16c90:	ldr	r2, [r3]
   16c94:	movw	r3, #8852	; 0x2294
   16c98:	movt	r3, #3
   16c9c:	ldr	r3, [r3]
   16ca0:	mov	r1, r3
   16ca4:	mov	r0, r2
   16ca8:	bl	169dc <__assert_fail@plt+0x5470>
   16cac:	str	r0, [fp, #-12]
   16cb0:	ldr	r3, [fp, #-12]
   16cb4:	cmp	r3, #0
   16cb8:	blt	16ce4 <__assert_fail@plt+0x5778>
   16cbc:	mov	r3, #0
   16cc0:	str	r3, [fp, #-8]
   16cc4:	movw	r0, #1984	; 0x7c0
   16cc8:	movt	r0, #2
   16ccc:	bl	113a4 <gettext@plt>
   16cd0:	mov	r2, r0
   16cd4:	ldr	r3, [fp, #-12]
   16cd8:	mov	r1, #0
   16cdc:	mov	r0, #0
   16ce0:	bl	11314 <error@plt>
   16ce4:	ldr	r3, [fp, #-8]
   16ce8:	cmp	r3, #0
   16cec:	bne	16d10 <__assert_fail@plt+0x57a4>
   16cf0:	movw	r3, #2160	; 0x870
   16cf4:	movt	r3, #2
   16cf8:	mov	r2, #396	; 0x18c
   16cfc:	movw	r1, #2136	; 0x858
   16d00:	movt	r1, #2
   16d04:	movw	r0, #2148	; 0x864
   16d08:	movt	r0, #2
   16d0c:	bl	1156c <__assert_fail@plt>
   16d10:	nop	{0}
   16d14:	sub	sp, fp, #4
   16d18:	ldr	fp, [sp]
   16d1c:	add	sp, sp, #4
   16d20:	pop	{pc}		; (ldr pc, [sp], #4)
   16d24:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16d28:	strd	r6, [sp, #8]
   16d2c:	str	fp, [sp, #16]
   16d30:	str	lr, [sp, #20]
   16d34:	add	fp, sp, #20
   16d38:	sub	sp, sp, #24
   16d3c:	str	r0, [fp, #-24]	; 0xffffffe8
   16d40:	movw	r3, #8656	; 0x21d0
   16d44:	movt	r3, #3
   16d48:	ldr	r3, [r3]
   16d4c:	mov	r0, r3
   16d50:	bl	1d6f4 <__assert_fail@plt+0xc188>
   16d54:	movw	r3, #8668	; 0x21dc
   16d58:	movt	r3, #3
   16d5c:	ldr	r4, [r3]
   16d60:	movw	r3, #8560	; 0x2170
   16d64:	movt	r3, #3
   16d68:	ldr	r5, [r3]
   16d6c:	movw	r0, #2204	; 0x89c
   16d70:	movt	r0, #2
   16d74:	bl	113a4 <gettext@plt>
   16d78:	mov	r6, r0
   16d7c:	movw	r0, #2220	; 0x8ac
   16d80:	movt	r0, #2
   16d84:	bl	113a4 <gettext@plt>
   16d88:	mov	r7, r0
   16d8c:	movw	r0, #2236	; 0x8bc
   16d90:	movt	r0, #2
   16d94:	bl	113a4 <gettext@plt>
   16d98:	mov	r2, r0
   16d9c:	mov	r3, #0
   16da0:	str	r3, [sp, #12]
   16da4:	str	r2, [sp, #8]
   16da8:	str	r7, [sp, #4]
   16dac:	str	r6, [sp]
   16db0:	mov	r3, r5
   16db4:	movw	r2, #2252	; 0x8cc
   16db8:	movt	r2, #2
   16dbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16dc0:	mov	r0, r4
   16dc4:	bl	1c078 <__assert_fail@plt+0xab0c>
   16dc8:	nop	{0}
   16dcc:	sub	sp, fp, #20
   16dd0:	ldrd	r4, [sp]
   16dd4:	ldrd	r6, [sp, #8]
   16dd8:	ldr	fp, [sp, #16]
   16ddc:	add	sp, sp, #20
   16de0:	pop	{pc}		; (ldr pc, [sp], #4)
   16de4:	strd	r4, [sp, #-20]!	; 0xffffffec
   16de8:	str	r6, [sp, #8]
   16dec:	str	fp, [sp, #12]
   16df0:	str	lr, [sp, #16]
   16df4:	add	fp, sp, #16
   16df8:	sub	sp, sp, #28
   16dfc:	str	r0, [fp, #-32]	; 0xffffffe0
   16e00:	str	r1, [fp, #-36]	; 0xffffffdc
   16e04:	bl	113ec <__errno_location@plt>
   16e08:	mov	r2, r0
   16e0c:	mov	r3, #0
   16e10:	str	r3, [r2]
   16e14:	sub	r3, fp, #28
   16e18:	mov	r2, #10
   16e1c:	mov	r1, r3
   16e20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16e24:	bl	111b8 <strtol@plt>
   16e28:	str	r0, [fp, #-24]	; 0xffffffe8
   16e2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16e30:	cmn	r3, #-2147483647	; 0x80000001
   16e34:	beq	16e44 <__assert_fail@plt+0x58d8>
   16e38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16e3c:	cmp	r3, #-2147483648	; 0x80000000
   16e40:	bne	16e98 <__assert_fail@plt+0x592c>
   16e44:	bl	113ec <__errno_location@plt>
   16e48:	mov	r3, r0
   16e4c:	ldr	r3, [r3]
   16e50:	cmp	r3, #34	; 0x22
   16e54:	bne	16e78 <__assert_fail@plt+0x590c>
   16e58:	bl	113ec <__errno_location@plt>
   16e5c:	mov	r3, r0
   16e60:	ldr	r1, [r3]
   16e64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16e68:	movw	r2, #2268	; 0x8dc
   16e6c:	movt	r2, #2
   16e70:	mov	r0, #1
   16e74:	bl	11314 <error@plt>
   16e78:	bl	113ec <__errno_location@plt>
   16e7c:	mov	r3, r0
   16e80:	ldr	r1, [r3]
   16e84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16e88:	movw	r2, #2268	; 0x8dc
   16e8c:	movt	r2, #2
   16e90:	mov	r0, #1
   16e94:	bl	11314 <error@plt>
   16e98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16e9c:	ldrb	r3, [r3]
   16ea0:	cmp	r3, #0
   16ea4:	beq	16f08 <__assert_fail@plt+0x599c>
   16ea8:	bl	113ec <__errno_location@plt>
   16eac:	mov	r3, r0
   16eb0:	ldr	r4, [r3]
   16eb4:	movw	r0, #2272	; 0x8e0
   16eb8:	movt	r0, #2
   16ebc:	bl	113a4 <gettext@plt>
   16ec0:	mov	r5, r0
   16ec4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16ec8:	mov	r2, r3
   16ecc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16ed0:	mov	r0, #0
   16ed4:	bl	1b138 <__assert_fail@plt+0x9bcc>
   16ed8:	mov	r6, r0
   16edc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16ee0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16ee4:	mov	r0, #1
   16ee8:	bl	1b138 <__assert_fail@plt+0x9bcc>
   16eec:	mov	r3, r0
   16ef0:	str	r3, [sp]
   16ef4:	mov	r3, r6
   16ef8:	mov	r2, r5
   16efc:	mov	r1, r4
   16f00:	mov	r0, #1
   16f04:	bl	11314 <error@plt>
   16f08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16f0c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16f10:	cmp	r2, r3
   16f14:	bne	16f58 <__assert_fail@plt+0x59ec>
   16f18:	bl	113ec <__errno_location@plt>
   16f1c:	mov	r3, r0
   16f20:	ldr	r4, [r3]
   16f24:	movw	r0, #2300	; 0x8fc
   16f28:	movt	r0, #2
   16f2c:	bl	113a4 <gettext@plt>
   16f30:	mov	r5, r0
   16f34:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16f38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16f3c:	mov	r0, #0
   16f40:	bl	1b138 <__assert_fail@plt+0x9bcc>
   16f44:	mov	r3, r0
   16f48:	mov	r2, r5
   16f4c:	mov	r1, r4
   16f50:	mov	r0, #1
   16f54:	bl	11314 <error@plt>
   16f58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16f5c:	mov	r0, r3
   16f60:	sub	sp, fp, #16
   16f64:	ldrd	r4, [sp]
   16f68:	ldr	r6, [sp, #8]
   16f6c:	ldr	fp, [sp, #12]
   16f70:	add	sp, sp, #16
   16f74:	pop	{pc}		; (ldr pc, [sp], #4)
   16f78:	str	fp, [sp, #-8]!
   16f7c:	str	lr, [sp, #4]
   16f80:	add	fp, sp, #4
   16f84:	sub	sp, sp, #24
   16f88:	str	r0, [fp, #-8]
   16f8c:	str	r1, [fp, #-12]
   16f90:	movw	r0, #2324	; 0x914
   16f94:	movt	r0, #2
   16f98:	bl	113a4 <gettext@plt>
   16f9c:	mov	r1, r0
   16fa0:	movw	r3, #2572	; 0xa0c
   16fa4:	movt	r3, #2
   16fa8:	str	r3, [sp, #8]
   16fac:	movw	r3, #2596	; 0xa24
   16fb0:	movt	r3, #2
   16fb4:	str	r3, [sp, #4]
   16fb8:	movw	r3, #2644	; 0xa54
   16fbc:	movt	r3, #2
   16fc0:	str	r3, [sp]
   16fc4:	ldr	r3, [fp, #-12]
   16fc8:	movw	r2, #2532	; 0x9e4
   16fcc:	movt	r2, #2
   16fd0:	ldr	r0, [fp, #-8]
   16fd4:	bl	113e0 <fprintf@plt>
   16fd8:	mov	r3, r0
   16fdc:	mov	r0, r3
   16fe0:	sub	sp, fp, #4
   16fe4:	ldr	fp, [sp]
   16fe8:	add	sp, sp, #4
   16fec:	pop	{pc}		; (ldr pc, [sp], #4)
   16ff0:	push	{fp}		; (str fp, [sp, #-4]!)
   16ff4:	add	fp, sp, #0
   16ff8:	sub	sp, sp, #20
   16ffc:	str	r0, [fp, #-16]
   17000:	str	r1, [fp, #-20]	; 0xffffffec
   17004:	ldr	r3, [fp, #-16]
   17008:	cmp	r3, #0
   1700c:	bne	1701c <__assert_fail@plt+0x5ab0>
   17010:	mov	r3, #16
   17014:	str	r3, [fp, #-8]
   17018:	b	17050 <__assert_fail@plt+0x5ae4>
   1701c:	ldr	r3, [fp, #-16]
   17020:	str	r3, [fp, #-8]
   17024:	b	17050 <__assert_fail@plt+0x5ae4>
   17028:	ldr	r3, [fp, #-8]
   1702c:	lsl	r3, r3, #1
   17030:	ldr	r2, [fp, #-8]
   17034:	cmp	r2, r3
   17038:	bls	17044 <__assert_fail@plt+0x5ad8>
   1703c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17040:	b	17064 <__assert_fail@plt+0x5af8>
   17044:	ldr	r3, [fp, #-8]
   17048:	lsl	r3, r3, #1
   1704c:	str	r3, [fp, #-8]
   17050:	ldr	r2, [fp, #-8]
   17054:	ldr	r3, [fp, #-20]	; 0xffffffec
   17058:	cmp	r2, r3
   1705c:	bcc	17028 <__assert_fail@plt+0x5abc>
   17060:	ldr	r3, [fp, #-8]
   17064:	mov	r0, r3
   17068:	add	sp, fp, #0
   1706c:	pop	{fp}		; (ldr fp, [sp], #4)
   17070:	bx	lr
   17074:	str	fp, [sp, #-8]!
   17078:	str	lr, [sp, #4]
   1707c:	add	fp, sp, #4
   17080:	sub	sp, sp, #32
   17084:	str	r0, [fp, #-24]	; 0xffffffe8
   17088:	str	r1, [fp, #-28]	; 0xffffffe4
   1708c:	str	r2, [fp, #-32]	; 0xffffffe0
   17090:	bl	113ec <__errno_location@plt>
   17094:	mov	r3, r0
   17098:	ldr	r3, [r3]
   1709c:	str	r3, [fp, #-8]
   170a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   170a4:	cmp	r3, #0
   170a8:	bne	170cc <__assert_fail@plt+0x5b60>
   170ac:	movw	r3, #2704	; 0xa90
   170b0:	movt	r3, #2
   170b4:	mov	r2, #71	; 0x47
   170b8:	movw	r1, #2660	; 0xa64
   170bc:	movt	r1, #2
   170c0:	movw	r0, #2672	; 0xa70
   170c4:	movt	r0, #2
   170c8:	bl	1156c <__assert_fail@plt>
   170cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   170d0:	ldr	r3, [r3]
   170d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   170d8:	mov	r0, r3
   170dc:	bl	16ff0 <__assert_fail@plt+0x5a84>
   170e0:	str	r0, [fp, #-16]
   170e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   170e8:	ldr	r3, [r3]
   170ec:	cmp	r3, #0
   170f0:	bne	17140 <__assert_fail@plt+0x5bd4>
   170f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   170f8:	cmp	r3, #0
   170fc:	beq	17120 <__assert_fail@plt+0x5bb4>
   17100:	movw	r3, #2704	; 0xa90
   17104:	movt	r3, #2
   17108:	mov	r2, #79	; 0x4f
   1710c:	movw	r1, #2660	; 0xa64
   17110:	movt	r1, #2
   17114:	movw	r0, #2684	; 0xa7c
   17118:	movt	r0, #2
   1711c:	bl	1156c <__assert_fail@plt>
   17120:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17124:	ldr	r2, [fp, #-16]
   17128:	str	r2, [r3]
   1712c:	ldr	r0, [fp, #-16]
   17130:	bl	1d97c <__assert_fail@plt+0xc410>
   17134:	mov	r3, r0
   17138:	str	r3, [fp, #-12]
   1713c:	b	17198 <__assert_fail@plt+0x5c2c>
   17140:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17144:	ldr	r3, [r3]
   17148:	ldr	r2, [fp, #-16]
   1714c:	cmp	r2, r3
   17150:	beq	17190 <__assert_fail@plt+0x5c24>
   17154:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17158:	ldr	r2, [fp, #-16]
   1715c:	str	r2, [r3]
   17160:	ldr	r1, [fp, #-16]
   17164:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17168:	bl	1dac4 <__assert_fail@plt+0xc558>
   1716c:	str	r0, [fp, #-12]
   17170:	ldr	r3, [fp, #-12]
   17174:	cmp	r3, #0
   17178:	bne	17198 <__assert_fail@plt+0x5c2c>
   1717c:	bl	113ec <__errno_location@plt>
   17180:	mov	r3, r0
   17184:	ldr	r3, [r3]
   17188:	str	r3, [fp, #-8]
   1718c:	b	17198 <__assert_fail@plt+0x5c2c>
   17190:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17194:	str	r3, [fp, #-12]
   17198:	ldr	r3, [fp, #-12]
   1719c:	cmp	r3, #0
   171a0:	beq	171b4 <__assert_fail@plt+0x5c48>
   171a4:	bl	113ec <__errno_location@plt>
   171a8:	mov	r2, r0
   171ac:	ldr	r3, [fp, #-8]
   171b0:	str	r3, [r2]
   171b4:	ldr	r3, [fp, #-12]
   171b8:	mov	r0, r3
   171bc:	sub	sp, fp, #4
   171c0:	ldr	fp, [sp]
   171c4:	add	sp, sp, #4
   171c8:	pop	{pc}		; (ldr pc, [sp], #4)
   171cc:	str	fp, [sp, #-8]!
   171d0:	str	lr, [sp, #4]
   171d4:	add	fp, sp, #4
   171d8:	sub	sp, sp, #24
   171dc:	str	r0, [fp, #-16]
   171e0:	str	r1, [fp, #-20]	; 0xffffffec
   171e4:	str	r2, [fp, #-24]	; 0xffffffe8
   171e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   171ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   171f0:	ldr	r0, [fp, #-16]
   171f4:	bl	17074 <__assert_fail@plt+0x5b08>
   171f8:	str	r0, [fp, #-8]
   171fc:	ldr	r3, [fp, #-8]
   17200:	cmp	r3, #0
   17204:	bne	17214 <__assert_fail@plt+0x5ca8>
   17208:	ldr	r0, [fp, #-16]
   1720c:	bl	1d7e8 <__assert_fail@plt+0xc27c>
   17210:	bl	1ca6c <__assert_fail@plt+0xb500>
   17214:	ldr	r3, [fp, #-8]
   17218:	mov	r0, r3
   1721c:	sub	sp, fp, #4
   17220:	ldr	fp, [sp]
   17224:	add	sp, sp, #4
   17228:	pop	{pc}		; (ldr pc, [sp], #4)
   1722c:	str	fp, [sp, #-8]!
   17230:	str	lr, [sp, #4]
   17234:	add	fp, sp, #4
   17238:	sub	sp, sp, #16
   1723c:	str	r0, [fp, #-16]
   17240:	mov	r3, r1
   17244:	strb	r3, [fp, #-17]	; 0xffffffef
   17248:	mov	r2, #0
   1724c:	mov	r1, #1
   17250:	ldr	r0, [fp, #-16]
   17254:	bl	1d2bc <__assert_fail@plt+0xbd50>
   17258:	str	r0, [fp, #-8]
   1725c:	ldr	r3, [fp, #-8]
   17260:	cmp	r3, #0
   17264:	blt	172c0 <__assert_fail@plt+0x5d54>
   17268:	ldrb	r3, [fp, #-17]	; 0xffffffef
   1726c:	cmp	r3, #0
   17270:	beq	17280 <__assert_fail@plt+0x5d14>
   17274:	ldr	r3, [fp, #-8]
   17278:	orr	r3, r3, #1
   1727c:	b	17288 <__assert_fail@plt+0x5d1c>
   17280:	ldr	r3, [fp, #-8]
   17284:	bic	r3, r3, #1
   17288:	str	r3, [fp, #-12]
   1728c:	ldr	r2, [fp, #-8]
   17290:	ldr	r3, [fp, #-12]
   17294:	cmp	r2, r3
   17298:	beq	172b8 <__assert_fail@plt+0x5d4c>
   1729c:	ldr	r2, [fp, #-12]
   172a0:	mov	r1, #2
   172a4:	ldr	r0, [fp, #-16]
   172a8:	bl	1d2bc <__assert_fail@plt+0xbd50>
   172ac:	mov	r3, r0
   172b0:	cmn	r3, #1
   172b4:	beq	172c0 <__assert_fail@plt+0x5d54>
   172b8:	mov	r3, #0
   172bc:	b	172c4 <__assert_fail@plt+0x5d58>
   172c0:	mvn	r3, #0
   172c4:	mov	r0, r3
   172c8:	sub	sp, fp, #4
   172cc:	ldr	fp, [sp]
   172d0:	add	sp, sp, #4
   172d4:	pop	{pc}		; (ldr pc, [sp], #4)
   172d8:	str	fp, [sp, #-8]!
   172dc:	str	lr, [sp, #4]
   172e0:	add	fp, sp, #4
   172e4:	sub	sp, sp, #8
   172e8:	str	r0, [fp, #-8]
   172ec:	mov	r2, #0
   172f0:	movw	r1, #1030	; 0x406
   172f4:	ldr	r0, [fp, #-8]
   172f8:	bl	1d2bc <__assert_fail@plt+0xbd50>
   172fc:	mov	r3, r0
   17300:	mov	r0, r3
   17304:	sub	sp, fp, #4
   17308:	ldr	fp, [sp]
   1730c:	add	sp, sp, #4
   17310:	pop	{pc}		; (ldr pc, [sp], #4)
   17314:	push	{fp}		; (str fp, [sp, #-4]!)
   17318:	add	fp, sp, #0
   1731c:	sub	sp, sp, #12
   17320:	str	r0, [fp, #-8]
   17324:	movw	r3, #8860	; 0x229c
   17328:	movt	r3, #3
   1732c:	ldr	r2, [fp, #-8]
   17330:	str	r2, [r3]
   17334:	nop	{0}
   17338:	add	sp, fp, #0
   1733c:	pop	{fp}		; (ldr fp, [sp], #4)
   17340:	bx	lr
   17344:	str	r4, [sp, #-12]!
   17348:	str	fp, [sp, #4]
   1734c:	str	lr, [sp, #8]
   17350:	add	fp, sp, #8
   17354:	sub	sp, sp, #20
   17358:	mov	r3, #0
   1735c:	strb	r3, [fp, #-13]
   17360:	movw	r3, #8664	; 0x21d8
   17364:	movt	r3, #3
   17368:	ldr	r3, [r3]
   1736c:	mov	r0, r3
   17370:	bl	1d760 <__assert_fail@plt+0xc1f4>
   17374:	mov	r3, r0
   17378:	cmp	r3, #0
   1737c:	beq	173d8 <__assert_fail@plt+0x5e6c>
   17380:	movw	r3, #8664	; 0x21d8
   17384:	movt	r3, #3
   17388:	ldr	r1, [r3]
   1738c:	mov	r3, #1
   17390:	str	r3, [sp]
   17394:	mov	r2, #0
   17398:	mov	r3, #0
   1739c:	mov	r0, r1
   173a0:	bl	1d88c <__assert_fail@plt+0xc320>
   173a4:	mov	r3, r0
   173a8:	cmp	r3, #0
   173ac:	bne	173d8 <__assert_fail@plt+0x5e6c>
   173b0:	movw	r3, #8664	; 0x21d8
   173b4:	movt	r3, #3
   173b8:	ldr	r3, [r3]
   173bc:	mov	r0, r3
   173c0:	bl	1d6f4 <__assert_fail@plt+0xc188>
   173c4:	mov	r3, r0
   173c8:	cmp	r3, #0
   173cc:	beq	173d8 <__assert_fail@plt+0x5e6c>
   173d0:	mov	r3, #1
   173d4:	strb	r3, [fp, #-13]
   173d8:	movw	r3, #8664	; 0x21d8
   173dc:	movt	r3, #3
   173e0:	ldr	r3, [r3]
   173e4:	mov	r0, r3
   173e8:	bl	1dccc <__assert_fail@plt+0xc760>
   173ec:	mov	r3, r0
   173f0:	cmp	r3, #0
   173f4:	beq	17400 <__assert_fail@plt+0x5e94>
   173f8:	mov	r3, #1
   173fc:	strb	r3, [fp, #-13]
   17400:	ldrb	r3, [fp, #-13]
   17404:	cmp	r3, #0
   17408:	beq	17498 <__assert_fail@plt+0x5f2c>
   1740c:	movw	r0, #2716	; 0xa9c
   17410:	movt	r0, #2
   17414:	bl	113a4 <gettext@plt>
   17418:	str	r0, [fp, #-20]	; 0xffffffec
   1741c:	movw	r3, #8860	; 0x229c
   17420:	movt	r3, #3
   17424:	ldr	r3, [r3]
   17428:	cmp	r3, #0
   1742c:	beq	17478 <__assert_fail@plt+0x5f0c>
   17430:	bl	113ec <__errno_location@plt>
   17434:	mov	r3, r0
   17438:	ldr	r4, [r3]
   1743c:	movw	r3, #8860	; 0x229c
   17440:	movt	r3, #3
   17444:	ldr	r3, [r3]
   17448:	mov	r0, r3
   1744c:	bl	1b358 <__assert_fail@plt+0x9dec>
   17450:	mov	r2, r0
   17454:	ldr	r3, [fp, #-20]	; 0xffffffec
   17458:	str	r3, [sp]
   1745c:	mov	r3, r2
   17460:	movw	r2, #2736	; 0xab0
   17464:	movt	r2, #2
   17468:	mov	r1, r4
   1746c:	mov	r0, #0
   17470:	bl	11314 <error@plt>
   17474:	b	17498 <__assert_fail@plt+0x5f2c>
   17478:	bl	113ec <__errno_location@plt>
   1747c:	mov	r3, r0
   17480:	ldr	r1, [r3]
   17484:	ldr	r3, [fp, #-20]	; 0xffffffec
   17488:	movw	r2, #2744	; 0xab8
   1748c:	movt	r2, #2
   17490:	mov	r0, #0
   17494:	bl	11314 <error@plt>
   17498:	bl	17538 <__assert_fail@plt+0x5fcc>
   1749c:	ldrb	r3, [fp, #-13]
   174a0:	cmp	r3, #0
   174a4:	beq	174bc <__assert_fail@plt+0x5f50>
   174a8:	movw	r3, #8564	; 0x2174
   174ac:	movt	r3, #3
   174b0:	ldr	r3, [r3]
   174b4:	mov	r0, r3
   174b8:	bl	1120c <_exit@plt>
   174bc:	nop	{0}
   174c0:	sub	sp, fp, #8
   174c4:	ldr	r4, [sp]
   174c8:	ldr	fp, [sp, #4]
   174cc:	add	sp, sp, #8
   174d0:	pop	{pc}		; (ldr pc, [sp], #4)
   174d4:	push	{fp}		; (str fp, [sp, #-4]!)
   174d8:	add	fp, sp, #0
   174dc:	sub	sp, sp, #12
   174e0:	str	r0, [fp, #-8]
   174e4:	movw	r3, #8864	; 0x22a0
   174e8:	movt	r3, #3
   174ec:	ldr	r2, [fp, #-8]
   174f0:	str	r2, [r3]
   174f4:	nop	{0}
   174f8:	add	sp, fp, #0
   174fc:	pop	{fp}		; (ldr fp, [sp], #4)
   17500:	bx	lr
   17504:	push	{fp}		; (str fp, [sp, #-4]!)
   17508:	add	fp, sp, #0
   1750c:	sub	sp, sp, #12
   17510:	mov	r3, r0
   17514:	strb	r3, [fp, #-5]
   17518:	movw	r3, #8868	; 0x22a4
   1751c:	movt	r3, #3
   17520:	ldrb	r2, [fp, #-5]
   17524:	strb	r2, [r3]
   17528:	nop	{0}
   1752c:	add	sp, fp, #0
   17530:	pop	{fp}		; (ldr fp, [sp], #4)
   17534:	bx	lr
   17538:	str	r4, [sp, #-12]!
   1753c:	str	fp, [sp, #4]
   17540:	str	lr, [sp, #8]
   17544:	add	fp, sp, #8
   17548:	sub	sp, sp, #20
   1754c:	movw	r3, #8668	; 0x21dc
   17550:	movt	r3, #3
   17554:	ldr	r3, [r3]
   17558:	mov	r0, r3
   1755c:	bl	1dccc <__assert_fail@plt+0xc760>
   17560:	mov	r3, r0
   17564:	cmp	r3, #0
   17568:	beq	1763c <__assert_fail@plt+0x60d0>
   1756c:	movw	r3, #8868	; 0x22a4
   17570:	movt	r3, #3
   17574:	ldrb	r3, [r3]
   17578:	eor	r3, r3, #1
   1757c:	uxtb	r3, r3
   17580:	cmp	r3, #0
   17584:	bne	1759c <__assert_fail@plt+0x6030>
   17588:	bl	113ec <__errno_location@plt>
   1758c:	mov	r3, r0
   17590:	ldr	r3, [r3]
   17594:	cmp	r3, #32
   17598:	beq	1763c <__assert_fail@plt+0x60d0>
   1759c:	movw	r0, #2748	; 0xabc
   175a0:	movt	r0, #2
   175a4:	bl	113a4 <gettext@plt>
   175a8:	str	r0, [fp, #-16]
   175ac:	movw	r3, #8864	; 0x22a0
   175b0:	movt	r3, #3
   175b4:	ldr	r3, [r3]
   175b8:	cmp	r3, #0
   175bc:	beq	17608 <__assert_fail@plt+0x609c>
   175c0:	bl	113ec <__errno_location@plt>
   175c4:	mov	r3, r0
   175c8:	ldr	r4, [r3]
   175cc:	movw	r3, #8864	; 0x22a0
   175d0:	movt	r3, #3
   175d4:	ldr	r3, [r3]
   175d8:	mov	r0, r3
   175dc:	bl	1b358 <__assert_fail@plt+0x9dec>
   175e0:	mov	r2, r0
   175e4:	ldr	r3, [fp, #-16]
   175e8:	str	r3, [sp]
   175ec:	mov	r3, r2
   175f0:	movw	r2, #2760	; 0xac8
   175f4:	movt	r2, #2
   175f8:	mov	r1, r4
   175fc:	mov	r0, #0
   17600:	bl	11314 <error@plt>
   17604:	b	17628 <__assert_fail@plt+0x60bc>
   17608:	bl	113ec <__errno_location@plt>
   1760c:	mov	r3, r0
   17610:	ldr	r1, [r3]
   17614:	ldr	r3, [fp, #-16]
   17618:	movw	r2, #2768	; 0xad0
   1761c:	movt	r2, #2
   17620:	mov	r0, #0
   17624:	bl	11314 <error@plt>
   17628:	movw	r3, #8564	; 0x2174
   1762c:	movt	r3, #3
   17630:	ldr	r3, [r3]
   17634:	mov	r0, r3
   17638:	bl	1120c <_exit@plt>
   1763c:	movw	r3, #8656	; 0x21d0
   17640:	movt	r3, #3
   17644:	ldr	r3, [r3]
   17648:	mov	r0, r3
   1764c:	bl	1dccc <__assert_fail@plt+0xc760>
   17650:	mov	r3, r0
   17654:	cmp	r3, #0
   17658:	beq	17670 <__assert_fail@plt+0x6104>
   1765c:	movw	r3, #8564	; 0x2174
   17660:	movt	r3, #3
   17664:	ldr	r3, [r3]
   17668:	mov	r0, r3
   1766c:	bl	1120c <_exit@plt>
   17670:	nop	{0}
   17674:	sub	sp, fp, #8
   17678:	ldr	r4, [sp]
   1767c:	ldr	fp, [sp, #4]
   17680:	add	sp, sp, #8
   17684:	pop	{pc}		; (ldr pc, [sp], #4)
   17688:	str	fp, [sp, #-8]!
   1768c:	str	lr, [sp, #4]
   17690:	add	fp, sp, #4
   17694:	sub	sp, sp, #32
   17698:	str	r0, [fp, #-32]	; 0xffffffe0
   1769c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   176a0:	bl	11320 <opendir@plt>
   176a4:	str	r0, [fp, #-8]
   176a8:	ldr	r3, [fp, #-8]
   176ac:	cmp	r3, #0
   176b0:	beq	17764 <__assert_fail@plt+0x61f8>
   176b4:	ldr	r0, [fp, #-8]
   176b8:	bl	114f4 <dirfd@plt>
   176bc:	str	r0, [fp, #-20]	; 0xffffffec
   176c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   176c4:	cmp	r3, #0
   176c8:	blt	17764 <__assert_fail@plt+0x61f8>
   176cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   176d0:	cmp	r3, #2
   176d4:	bgt	17764 <__assert_fail@plt+0x61f8>
   176d8:	mov	r2, #3
   176dc:	movw	r1, #1030	; 0x406
   176e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   176e4:	bl	1d2bc <__assert_fail@plt+0xbd50>
   176e8:	str	r0, [fp, #-24]	; 0xffffffe8
   176ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   176f0:	cmp	r3, #0
   176f4:	bge	17714 <__assert_fail@plt+0x61a8>
   176f8:	bl	113ec <__errno_location@plt>
   176fc:	mov	r3, r0
   17700:	ldr	r3, [r3]
   17704:	str	r3, [fp, #-16]
   17708:	mov	r3, #0
   1770c:	str	r3, [fp, #-12]
   17710:	b	17744 <__assert_fail@plt+0x61d8>
   17714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17718:	bl	114dc <fdopendir@plt>
   1771c:	str	r0, [fp, #-12]
   17720:	bl	113ec <__errno_location@plt>
   17724:	mov	r3, r0
   17728:	ldr	r3, [r3]
   1772c:	str	r3, [fp, #-16]
   17730:	ldr	r3, [fp, #-12]
   17734:	cmp	r3, #0
   17738:	bne	17744 <__assert_fail@plt+0x61d8>
   1773c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17740:	bl	11554 <close@plt>
   17744:	ldr	r0, [fp, #-8]
   17748:	bl	11560 <closedir@plt>
   1774c:	bl	113ec <__errno_location@plt>
   17750:	mov	r2, r0
   17754:	ldr	r3, [fp, #-16]
   17758:	str	r3, [r2]
   1775c:	ldr	r3, [fp, #-12]
   17760:	str	r3, [fp, #-8]
   17764:	ldr	r3, [fp, #-8]
   17768:	mov	r0, r3
   1776c:	sub	sp, fp, #4
   17770:	ldr	fp, [sp]
   17774:	add	sp, sp, #4
   17778:	pop	{pc}		; (ldr pc, [sp], #4)
   1777c:	push	{r1, r2, r3}
   17780:	str	fp, [sp, #-8]!
   17784:	str	lr, [sp, #4]
   17788:	add	fp, sp, #4
   1778c:	sub	sp, sp, #20
   17790:	str	r0, [fp, #-20]	; 0xffffffec
   17794:	mov	r3, #0
   17798:	str	r3, [fp, #-12]
   1779c:	ldr	r3, [fp, #4]
   177a0:	and	r3, r3, #64	; 0x40
   177a4:	cmp	r3, #0
   177a8:	beq	177c8 <__assert_fail@plt+0x625c>
   177ac:	add	r3, fp, #8
   177b0:	str	r3, [fp, #-16]
   177b4:	ldr	r3, [fp, #-16]
   177b8:	add	r2, r3, #4
   177bc:	str	r2, [fp, #-16]
   177c0:	ldr	r3, [r3]
   177c4:	str	r3, [fp, #-12]
   177c8:	ldr	r2, [fp, #-12]
   177cc:	ldr	r1, [fp, #4]
   177d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   177d4:	bl	1132c <open64@plt>
   177d8:	mov	r3, r0
   177dc:	mov	r0, r3
   177e0:	bl	1b81c <__assert_fail@plt+0xa2b0>
   177e4:	mov	r3, r0
   177e8:	mov	r0, r3
   177ec:	sub	sp, fp, #4
   177f0:	ldr	fp, [sp]
   177f4:	ldr	lr, [sp, #4]
   177f8:	add	sp, sp, #8
   177fc:	add	sp, sp, #12
   17800:	bx	lr
   17804:	str	fp, [sp, #-8]!
   17808:	str	lr, [sp, #4]
   1780c:	add	fp, sp, #4
   17810:	sub	sp, sp, #48	; 0x30
   17814:	str	r0, [fp, #-40]	; 0xffffffd8
   17818:	str	r1, [fp, #-44]	; 0xffffffd4
   1781c:	str	r2, [fp, #-48]	; 0xffffffd0
   17820:	str	r3, [fp, #-52]	; 0xffffffcc
   17824:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17828:	str	r3, [fp, #-28]	; 0xffffffe4
   1782c:	mov	r3, #0
   17830:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17834:	lsl	r2, r2, #2
   17838:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1783c:	lsr	r1, r1, #30
   17840:	cmp	r1, #0
   17844:	beq	1784c <__assert_fail@plt+0x62e0>
   17848:	mov	r3, #1
   1784c:	cmp	r2, #0
   17850:	bge	17858 <__assert_fail@plt+0x62ec>
   17854:	mov	r3, #1
   17858:	and	r3, r3, #1
   1785c:	uxtb	r3, r3
   17860:	eor	r3, r3, #1
   17864:	uxtb	r3, r3
   17868:	cmp	r3, #0
   1786c:	beq	178d4 <__assert_fail@plt+0x6368>
   17870:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17874:	lsl	r3, r3, #2
   17878:	cmp	r3, #4016	; 0xfb0
   1787c:	bhi	178bc <__assert_fail@plt+0x6350>
   17880:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17884:	add	r3, r3, #4
   17888:	lsl	r3, r3, #2
   1788c:	sub	r3, r3, #1
   17890:	add	r3, r3, #7
   17894:	lsr	r3, r3, #3
   17898:	lsl	r3, r3, #3
   1789c:	sub	sp, sp, r3
   178a0:	mov	r3, sp
   178a4:	add	r3, r3, #7
   178a8:	lsr	r3, r3, #3
   178ac:	lsl	r3, r3, #3
   178b0:	add	r3, r3, #15
   178b4:	bic	r3, r3, #15
   178b8:	b	178d8 <__assert_fail@plt+0x636c>
   178bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   178c0:	lsl	r3, r3, #2
   178c4:	mov	r0, r3
   178c8:	bl	1e038 <__assert_fail@plt+0xcacc>
   178cc:	mov	r3, r0
   178d0:	b	178d8 <__assert_fail@plt+0x636c>
   178d4:	mov	r3, #0
   178d8:	str	r3, [fp, #-32]	; 0xffffffe0
   178dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   178e0:	cmp	r3, #0
   178e4:	bne	178f0 <__assert_fail@plt+0x6384>
   178e8:	mov	r3, #0
   178ec:	b	17ae4 <__assert_fail@plt+0x6578>
   178f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   178f4:	add	r3, r3, #4
   178f8:	mov	r2, #1
   178fc:	str	r2, [r3]
   17900:	mov	r3, #0
   17904:	str	r3, [fp, #-12]
   17908:	mov	r3, #2
   1790c:	str	r3, [fp, #-8]
   17910:	b	179d0 <__assert_fail@plt+0x6464>
   17914:	ldr	r3, [fp, #-8]
   17918:	sub	r3, r3, #1
   1791c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17920:	add	r3, r2, r3
   17924:	ldrb	r3, [r3]
   17928:	strb	r3, [fp, #-33]	; 0xffffffdf
   1792c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17930:	ldr	r3, [fp, #-12]
   17934:	add	r3, r2, r3
   17938:	ldrb	r3, [r3]
   1793c:	ldrb	r2, [fp, #-33]	; 0xffffffdf
   17940:	cmp	r2, r3
   17944:	bne	17978 <__assert_fail@plt+0x640c>
   17948:	ldr	r3, [fp, #-12]
   1794c:	add	r3, r3, #1
   17950:	str	r3, [fp, #-12]
   17954:	ldr	r3, [fp, #-8]
   17958:	lsl	r3, r3, #2
   1795c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17960:	add	r3, r2, r3
   17964:	ldr	r1, [fp, #-8]
   17968:	ldr	r2, [fp, #-12]
   1796c:	sub	r2, r1, r2
   17970:	str	r2, [r3]
   17974:	b	179c4 <__assert_fail@plt+0x6458>
   17978:	ldr	r3, [fp, #-12]
   1797c:	cmp	r3, #0
   17980:	bne	179a0 <__assert_fail@plt+0x6434>
   17984:	ldr	r3, [fp, #-8]
   17988:	lsl	r3, r3, #2
   1798c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17990:	add	r3, r2, r3
   17994:	ldr	r2, [fp, #-8]
   17998:	str	r2, [r3]
   1799c:	b	179c4 <__assert_fail@plt+0x6458>
   179a0:	ldr	r3, [fp, #-12]
   179a4:	lsl	r3, r3, #2
   179a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   179ac:	add	r3, r2, r3
   179b0:	ldr	r3, [r3]
   179b4:	ldr	r2, [fp, #-12]
   179b8:	sub	r3, r2, r3
   179bc:	str	r3, [fp, #-12]
   179c0:	b	1792c <__assert_fail@plt+0x63c0>
   179c4:	ldr	r3, [fp, #-8]
   179c8:	add	r3, r3, #1
   179cc:	str	r3, [fp, #-8]
   179d0:	ldr	r2, [fp, #-8]
   179d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   179d8:	cmp	r2, r3
   179dc:	bcc	17914 <__assert_fail@plt+0x63a8>
   179e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   179e4:	mov	r2, #0
   179e8:	str	r2, [r3]
   179ec:	mov	r3, #0
   179f0:	str	r3, [fp, #-16]
   179f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   179f8:	str	r3, [fp, #-20]	; 0xffffffec
   179fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17a00:	str	r3, [fp, #-24]	; 0xffffffe8
   17a04:	b	17ac8 <__assert_fail@plt+0x655c>
   17a08:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17a0c:	ldr	r3, [fp, #-16]
   17a10:	add	r3, r2, r3
   17a14:	ldrb	r2, [r3]
   17a18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17a1c:	ldrb	r3, [r3]
   17a20:	cmp	r2, r3
   17a24:	bne	17a60 <__assert_fail@plt+0x64f4>
   17a28:	ldr	r3, [fp, #-16]
   17a2c:	add	r3, r3, #1
   17a30:	str	r3, [fp, #-16]
   17a34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17a38:	add	r3, r3, #1
   17a3c:	str	r3, [fp, #-24]	; 0xffffffe8
   17a40:	ldr	r2, [fp, #-16]
   17a44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17a48:	cmp	r2, r3
   17a4c:	bne	17ac8 <__assert_fail@plt+0x655c>
   17a50:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17a54:	ldr	r2, [fp, #-20]	; 0xffffffec
   17a58:	str	r2, [r3]
   17a5c:	b	17ad8 <__assert_fail@plt+0x656c>
   17a60:	ldr	r3, [fp, #-16]
   17a64:	cmp	r3, #0
   17a68:	beq	17ab0 <__assert_fail@plt+0x6544>
   17a6c:	ldr	r3, [fp, #-16]
   17a70:	lsl	r3, r3, #2
   17a74:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17a78:	add	r3, r2, r3
   17a7c:	ldr	r3, [r3]
   17a80:	ldr	r2, [fp, #-20]	; 0xffffffec
   17a84:	add	r3, r2, r3
   17a88:	str	r3, [fp, #-20]	; 0xffffffec
   17a8c:	ldr	r3, [fp, #-16]
   17a90:	lsl	r3, r3, #2
   17a94:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17a98:	add	r3, r2, r3
   17a9c:	ldr	r3, [r3]
   17aa0:	ldr	r2, [fp, #-16]
   17aa4:	sub	r3, r2, r3
   17aa8:	str	r3, [fp, #-16]
   17aac:	b	17ac8 <__assert_fail@plt+0x655c>
   17ab0:	ldr	r3, [fp, #-20]	; 0xffffffec
   17ab4:	add	r3, r3, #1
   17ab8:	str	r3, [fp, #-20]	; 0xffffffec
   17abc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17ac0:	add	r3, r3, #1
   17ac4:	str	r3, [fp, #-24]	; 0xffffffe8
   17ac8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17acc:	ldrb	r3, [r3]
   17ad0:	cmp	r3, #0
   17ad4:	bne	17a08 <__assert_fail@plt+0x649c>
   17ad8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17adc:	bl	1e164 <__assert_fail@plt+0xcbf8>
   17ae0:	mov	r3, #1
   17ae4:	mov	r0, r3
   17ae8:	sub	sp, fp, #4
   17aec:	ldr	fp, [sp]
   17af0:	add	sp, sp, #4
   17af4:	pop	{pc}		; (ldr pc, [sp], #4)
   17af8:	str	fp, [sp, #-8]!
   17afc:	str	lr, [sp, #4]
   17b00:	add	fp, sp, #4
   17b04:	sub	sp, sp, #176	; 0xb0
   17b08:	str	r0, [fp, #-168]	; 0xffffff58
   17b0c:	str	r1, [fp, #-172]	; 0xffffff54
   17b10:	str	r2, [fp, #-176]	; 0xffffff50
   17b14:	ldr	r0, [fp, #-172]	; 0xffffff54
   17b18:	bl	1e360 <__assert_fail@plt+0xcdf4>
   17b1c:	str	r0, [fp, #-28]	; 0xffffffe4
   17b20:	mov	ip, #0
   17b24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17b28:	mov	r2, #44	; 0x2c
   17b2c:	umull	r0, r1, r3, r2
   17b30:	mov	r2, #0
   17b34:	mov	r3, #0
   17b38:	mov	r2, r1
   17b3c:	mov	r3, #0
   17b40:	cmp	r2, #0
   17b44:	beq	17b4c <__assert_fail@plt+0x65e0>
   17b48:	mov	ip, #1
   17b4c:	cmp	r0, #0
   17b50:	bge	17b58 <__assert_fail@plt+0x65ec>
   17b54:	mov	ip, #1
   17b58:	mov	r3, ip
   17b5c:	and	r3, r3, #1
   17b60:	uxtb	r3, r3
   17b64:	cmp	r3, #0
   17b68:	bne	17bd8 <__assert_fail@plt+0x666c>
   17b6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17b70:	mov	r2, #44	; 0x2c
   17b74:	mul	r3, r2, r3
   17b78:	cmp	r3, #4016	; 0xfb0
   17b7c:	bhi	17bbc <__assert_fail@plt+0x6650>
   17b80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17b84:	mov	r2, #44	; 0x2c
   17b88:	mul	r3, r2, r3
   17b8c:	add	r3, r3, #15
   17b90:	add	r3, r3, #7
   17b94:	lsr	r3, r3, #3
   17b98:	lsl	r3, r3, #3
   17b9c:	sub	sp, sp, r3
   17ba0:	mov	r3, sp
   17ba4:	add	r3, r3, #7
   17ba8:	lsr	r3, r3, #3
   17bac:	lsl	r3, r3, #3
   17bb0:	add	r3, r3, #15
   17bb4:	bic	r3, r3, #15
   17bb8:	b	17bdc <__assert_fail@plt+0x6670>
   17bbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17bc0:	mov	r2, #44	; 0x2c
   17bc4:	mul	r3, r2, r3
   17bc8:	mov	r0, r3
   17bcc:	bl	1e038 <__assert_fail@plt+0xcacc>
   17bd0:	mov	r3, r0
   17bd4:	b	17bdc <__assert_fail@plt+0x6670>
   17bd8:	mov	r3, #0
   17bdc:	str	r3, [fp, #-32]	; 0xffffffe0
   17be0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17be4:	cmp	r3, #0
   17be8:	bne	17bf4 <__assert_fail@plt+0x6688>
   17bec:	mov	r3, #0
   17bf0:	b	1823c <__assert_fail@plt+0x6cd0>
   17bf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17bf8:	str	r3, [fp, #-36]	; 0xffffffdc
   17bfc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17c00:	mov	r3, r2
   17c04:	lsl	r3, r3, #2
   17c08:	add	r3, r3, r2
   17c0c:	lsl	r3, r3, #3
   17c10:	mov	r2, r3
   17c14:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17c18:	add	r3, r3, r2
   17c1c:	str	r3, [fp, #-40]	; 0xffffffd8
   17c20:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17c24:	str	r3, [fp, #-44]	; 0xffffffd4
   17c28:	mov	r3, #0
   17c2c:	str	r3, [fp, #-8]
   17c30:	ldr	r3, [fp, #-172]	; 0xffffff54
   17c34:	str	r3, [fp, #-88]	; 0xffffffa8
   17c38:	mov	r3, #0
   17c3c:	strb	r3, [fp, #-104]	; 0xffffff98
   17c40:	sub	r3, fp, #104	; 0x68
   17c44:	add	r3, r3, #4
   17c48:	mov	r2, #8
   17c4c:	mov	r1, #0
   17c50:	mov	r0, r3
   17c54:	bl	11410 <memset@plt>
   17c58:	mov	r3, #0
   17c5c:	strb	r3, [fp, #-92]	; 0xffffffa4
   17c60:	b	17cbc <__assert_fail@plt+0x6750>
   17c64:	ldr	r2, [fp, #-8]
   17c68:	mov	r3, r2
   17c6c:	lsl	r3, r3, #2
   17c70:	add	r3, r3, r2
   17c74:	lsl	r3, r3, #3
   17c78:	mov	r2, r3
   17c7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17c80:	add	r2, r3, r2
   17c84:	sub	r3, fp, #104	; 0x68
   17c88:	add	r3, r3, #16
   17c8c:	mov	r1, r3
   17c90:	mov	r0, r2
   17c94:	bl	1e238 <__assert_fail@plt+0xcccc>
   17c98:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17c9c:	ldr	r3, [fp, #-84]	; 0xffffffac
   17ca0:	add	r3, r2, r3
   17ca4:	str	r3, [fp, #-88]	; 0xffffffa8
   17ca8:	mov	r3, #0
   17cac:	strb	r3, [fp, #-92]	; 0xffffffa4
   17cb0:	ldr	r3, [fp, #-8]
   17cb4:	add	r3, r3, #1
   17cb8:	str	r3, [fp, #-8]
   17cbc:	sub	r3, fp, #104	; 0x68
   17cc0:	mov	r0, r3
   17cc4:	bl	18a08 <__assert_fail@plt+0x749c>
   17cc8:	ldrb	r3, [fp, #-80]	; 0xffffffb0
   17ccc:	eor	r3, r3, #1
   17cd0:	uxtb	r3, r3
   17cd4:	cmp	r3, #0
   17cd8:	bne	17ce8 <__assert_fail@plt+0x677c>
   17cdc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   17ce0:	cmp	r3, #0
   17ce4:	beq	17cf0 <__assert_fail@plt+0x6784>
   17ce8:	mov	r3, #1
   17cec:	b	17cf4 <__assert_fail@plt+0x6788>
   17cf0:	mov	r3, #0
   17cf4:	cmp	r3, #0
   17cf8:	bne	17c64 <__assert_fail@plt+0x66f8>
   17cfc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17d00:	add	r3, r3, #4
   17d04:	mov	r2, #1
   17d08:	str	r2, [r3]
   17d0c:	mov	r3, #0
   17d10:	str	r3, [fp, #-16]
   17d14:	mov	r3, #2
   17d18:	str	r3, [fp, #-12]
   17d1c:	b	17ee0 <__assert_fail@plt+0x6974>
   17d20:	ldr	r2, [fp, #-12]
   17d24:	mov	r3, r2
   17d28:	lsl	r3, r3, #2
   17d2c:	add	r3, r3, r2
   17d30:	lsl	r3, r3, #3
   17d34:	sub	r3, r3, #40	; 0x28
   17d38:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17d3c:	add	r3, r2, r3
   17d40:	str	r3, [fp, #-48]	; 0xffffffd0
   17d44:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17d48:	ldrb	r3, [r3, #8]
   17d4c:	cmp	r3, #0
   17d50:	beq	17dc0 <__assert_fail@plt+0x6854>
   17d54:	ldr	r2, [fp, #-16]
   17d58:	mov	r3, r2
   17d5c:	lsl	r3, r3, #2
   17d60:	add	r3, r3, r2
   17d64:	lsl	r3, r3, #3
   17d68:	mov	r2, r3
   17d6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17d70:	add	r3, r3, r2
   17d74:	ldrb	r3, [r3, #8]
   17d78:	cmp	r3, #0
   17d7c:	beq	17dc0 <__assert_fail@plt+0x6854>
   17d80:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17d84:	ldr	r1, [r3, #12]
   17d88:	ldr	r2, [fp, #-16]
   17d8c:	mov	r3, r2
   17d90:	lsl	r3, r3, #2
   17d94:	add	r3, r3, r2
   17d98:	lsl	r3, r3, #3
   17d9c:	mov	r2, r3
   17da0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17da4:	add	r3, r3, r2
   17da8:	ldr	r3, [r3, #12]
   17dac:	cmp	r1, r3
   17db0:	moveq	r3, #1
   17db4:	movne	r3, #0
   17db8:	uxtb	r3, r3
   17dbc:	b	17e50 <__assert_fail@plt+0x68e4>
   17dc0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17dc4:	ldr	r1, [r3, #4]
   17dc8:	ldr	r2, [fp, #-16]
   17dcc:	mov	r3, r2
   17dd0:	lsl	r3, r3, #2
   17dd4:	add	r3, r3, r2
   17dd8:	lsl	r3, r3, #3
   17ddc:	mov	r2, r3
   17de0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17de4:	add	r3, r3, r2
   17de8:	ldr	r3, [r3, #4]
   17dec:	cmp	r1, r3
   17df0:	bne	17e44 <__assert_fail@plt+0x68d8>
   17df4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17df8:	ldr	r0, [r3]
   17dfc:	ldr	r2, [fp, #-16]
   17e00:	mov	r3, r2
   17e04:	lsl	r3, r3, #2
   17e08:	add	r3, r3, r2
   17e0c:	lsl	r3, r3, #3
   17e10:	mov	r2, r3
   17e14:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17e18:	add	r3, r3, r2
   17e1c:	ldr	r1, [r3]
   17e20:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17e24:	ldr	r3, [r3, #4]
   17e28:	mov	r2, r3
   17e2c:	bl	11248 <memcmp@plt>
   17e30:	mov	r3, r0
   17e34:	cmp	r3, #0
   17e38:	bne	17e44 <__assert_fail@plt+0x68d8>
   17e3c:	mov	r3, #1
   17e40:	b	17e48 <__assert_fail@plt+0x68dc>
   17e44:	mov	r3, #0
   17e48:	and	r3, r3, #1
   17e4c:	uxtb	r3, r3
   17e50:	cmp	r3, #0
   17e54:	beq	17e88 <__assert_fail@plt+0x691c>
   17e58:	ldr	r3, [fp, #-16]
   17e5c:	add	r3, r3, #1
   17e60:	str	r3, [fp, #-16]
   17e64:	ldr	r3, [fp, #-12]
   17e68:	lsl	r3, r3, #2
   17e6c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17e70:	add	r3, r2, r3
   17e74:	ldr	r1, [fp, #-12]
   17e78:	ldr	r2, [fp, #-16]
   17e7c:	sub	r2, r1, r2
   17e80:	str	r2, [r3]
   17e84:	b	17ed4 <__assert_fail@plt+0x6968>
   17e88:	ldr	r3, [fp, #-16]
   17e8c:	cmp	r3, #0
   17e90:	bne	17eb0 <__assert_fail@plt+0x6944>
   17e94:	ldr	r3, [fp, #-12]
   17e98:	lsl	r3, r3, #2
   17e9c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17ea0:	add	r3, r2, r3
   17ea4:	ldr	r2, [fp, #-12]
   17ea8:	str	r2, [r3]
   17eac:	b	17ed4 <__assert_fail@plt+0x6968>
   17eb0:	ldr	r3, [fp, #-16]
   17eb4:	lsl	r3, r3, #2
   17eb8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17ebc:	add	r3, r2, r3
   17ec0:	ldr	r3, [r3]
   17ec4:	ldr	r2, [fp, #-16]
   17ec8:	sub	r3, r2, r3
   17ecc:	str	r3, [fp, #-16]
   17ed0:	b	17d44 <__assert_fail@plt+0x67d8>
   17ed4:	ldr	r3, [fp, #-12]
   17ed8:	add	r3, r3, #1
   17edc:	str	r3, [fp, #-12]
   17ee0:	ldr	r2, [fp, #-12]
   17ee4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17ee8:	cmp	r2, r3
   17eec:	bcc	17d20 <__assert_fail@plt+0x67b4>
   17ef0:	ldr	r3, [fp, #-176]	; 0xffffff50
   17ef4:	mov	r2, #0
   17ef8:	str	r2, [r3]
   17efc:	mov	r3, #0
   17f00:	str	r3, [fp, #-20]	; 0xffffffec
   17f04:	ldr	r3, [fp, #-168]	; 0xffffff58
   17f08:	str	r3, [fp, #-144]	; 0xffffff70
   17f0c:	mov	r3, #0
   17f10:	strb	r3, [fp, #-160]	; 0xffffff60
   17f14:	sub	r3, fp, #160	; 0xa0
   17f18:	add	r3, r3, #4
   17f1c:	mov	r2, #8
   17f20:	mov	r1, #0
   17f24:	mov	r0, r3
   17f28:	bl	11410 <memset@plt>
   17f2c:	mov	r3, #0
   17f30:	strb	r3, [fp, #-148]	; 0xffffff6c
   17f34:	ldr	r3, [fp, #-168]	; 0xffffff58
   17f38:	str	r3, [fp, #-88]	; 0xffffffa8
   17f3c:	mov	r3, #0
   17f40:	strb	r3, [fp, #-104]	; 0xffffff98
   17f44:	sub	r3, fp, #104	; 0x68
   17f48:	add	r3, r3, #4
   17f4c:	mov	r2, #8
   17f50:	mov	r1, #0
   17f54:	mov	r0, r3
   17f58:	bl	11410 <memset@plt>
   17f5c:	mov	r3, #0
   17f60:	strb	r3, [fp, #-92]	; 0xffffffa4
   17f64:	b	181f0 <__assert_fail@plt+0x6c84>
   17f68:	ldr	r2, [fp, #-20]	; 0xffffffec
   17f6c:	mov	r3, r2
   17f70:	lsl	r3, r3, #2
   17f74:	add	r3, r3, r2
   17f78:	lsl	r3, r3, #3
   17f7c:	mov	r2, r3
   17f80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17f84:	add	r3, r3, r2
   17f88:	ldrb	r3, [r3, #8]
   17f8c:	cmp	r3, #0
   17f90:	beq	17fdc <__assert_fail@plt+0x6a70>
   17f94:	ldrb	r3, [fp, #-80]	; 0xffffffb0
   17f98:	cmp	r3, #0
   17f9c:	beq	17fdc <__assert_fail@plt+0x6a70>
   17fa0:	ldr	r2, [fp, #-20]	; 0xffffffec
   17fa4:	mov	r3, r2
   17fa8:	lsl	r3, r3, #2
   17fac:	add	r3, r3, r2
   17fb0:	lsl	r3, r3, #3
   17fb4:	mov	r2, r3
   17fb8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17fbc:	add	r3, r3, r2
   17fc0:	ldr	r2, [r3, #12]
   17fc4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   17fc8:	cmp	r2, r3
   17fcc:	moveq	r3, #1
   17fd0:	movne	r3, #0
   17fd4:	uxtb	r3, r3
   17fd8:	b	18080 <__assert_fail@plt+0x6b14>
   17fdc:	ldr	r2, [fp, #-20]	; 0xffffffec
   17fe0:	mov	r3, r2
   17fe4:	lsl	r3, r3, #2
   17fe8:	add	r3, r3, r2
   17fec:	lsl	r3, r3, #3
   17ff0:	mov	r2, r3
   17ff4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17ff8:	add	r3, r3, r2
   17ffc:	ldr	r2, [r3, #4]
   18000:	ldr	r3, [fp, #-84]	; 0xffffffac
   18004:	cmp	r2, r3
   18008:	bne	18074 <__assert_fail@plt+0x6b08>
   1800c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18010:	mov	r3, r2
   18014:	lsl	r3, r3, #2
   18018:	add	r3, r3, r2
   1801c:	lsl	r3, r3, #3
   18020:	mov	r2, r3
   18024:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18028:	add	r3, r3, r2
   1802c:	ldr	r0, [r3]
   18030:	ldr	r1, [fp, #-88]	; 0xffffffa8
   18034:	ldr	r2, [fp, #-20]	; 0xffffffec
   18038:	mov	r3, r2
   1803c:	lsl	r3, r3, #2
   18040:	add	r3, r3, r2
   18044:	lsl	r3, r3, #3
   18048:	mov	r2, r3
   1804c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18050:	add	r3, r3, r2
   18054:	ldr	r3, [r3, #4]
   18058:	mov	r2, r3
   1805c:	bl	11248 <memcmp@plt>
   18060:	mov	r3, r0
   18064:	cmp	r3, #0
   18068:	bne	18074 <__assert_fail@plt+0x6b08>
   1806c:	mov	r3, #1
   18070:	b	18078 <__assert_fail@plt+0x6b0c>
   18074:	mov	r3, #0
   18078:	and	r3, r3, #1
   1807c:	uxtb	r3, r3
   18080:	cmp	r3, #0
   18084:	beq	180cc <__assert_fail@plt+0x6b60>
   18088:	ldr	r3, [fp, #-20]	; 0xffffffec
   1808c:	add	r3, r3, #1
   18090:	str	r3, [fp, #-20]	; 0xffffffec
   18094:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18098:	ldr	r3, [fp, #-84]	; 0xffffffac
   1809c:	add	r3, r2, r3
   180a0:	str	r3, [fp, #-88]	; 0xffffffa8
   180a4:	mov	r3, #0
   180a8:	strb	r3, [fp, #-92]	; 0xffffffa4
   180ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   180b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   180b4:	cmp	r2, r3
   180b8:	bne	181f0 <__assert_fail@plt+0x6c84>
   180bc:	ldr	r2, [fp, #-144]	; 0xffffff70
   180c0:	ldr	r3, [fp, #-176]	; 0xffffff50
   180c4:	str	r2, [r3]
   180c8:	b	18230 <__assert_fail@plt+0x6cc4>
   180cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   180d0:	cmp	r3, #0
   180d4:	beq	1817c <__assert_fail@plt+0x6c10>
   180d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   180dc:	lsl	r3, r3, #2
   180e0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   180e4:	add	r3, r2, r3
   180e8:	ldr	r3, [r3]
   180ec:	str	r3, [fp, #-24]	; 0xffffffe8
   180f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   180f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   180f8:	sub	r3, r2, r3
   180fc:	str	r3, [fp, #-20]	; 0xffffffec
   18100:	b	1816c <__assert_fail@plt+0x6c00>
   18104:	sub	r3, fp, #160	; 0xa0
   18108:	mov	r0, r3
   1810c:	bl	18a08 <__assert_fail@plt+0x749c>
   18110:	ldrb	r3, [fp, #-136]	; 0xffffff78
   18114:	eor	r3, r3, #1
   18118:	uxtb	r3, r3
   1811c:	cmp	r3, #0
   18120:	bne	18130 <__assert_fail@plt+0x6bc4>
   18124:	ldr	r3, [fp, #-132]	; 0xffffff7c
   18128:	cmp	r3, #0
   1812c:	beq	18138 <__assert_fail@plt+0x6bcc>
   18130:	mov	r3, #1
   18134:	b	1813c <__assert_fail@plt+0x6bd0>
   18138:	mov	r3, #0
   1813c:	cmp	r3, #0
   18140:	bne	18148 <__assert_fail@plt+0x6bdc>
   18144:	bl	1153c <abort@plt>
   18148:	ldr	r2, [fp, #-144]	; 0xffffff70
   1814c:	ldr	r3, [fp, #-140]	; 0xffffff74
   18150:	add	r3, r2, r3
   18154:	str	r3, [fp, #-144]	; 0xffffff70
   18158:	mov	r3, #0
   1815c:	strb	r3, [fp, #-148]	; 0xffffff6c
   18160:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18164:	sub	r3, r3, #1
   18168:	str	r3, [fp, #-24]	; 0xffffffe8
   1816c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18170:	cmp	r3, #0
   18174:	bne	18104 <__assert_fail@plt+0x6b98>
   18178:	b	181f0 <__assert_fail@plt+0x6c84>
   1817c:	sub	r3, fp, #160	; 0xa0
   18180:	mov	r0, r3
   18184:	bl	18a08 <__assert_fail@plt+0x749c>
   18188:	ldrb	r3, [fp, #-136]	; 0xffffff78
   1818c:	eor	r3, r3, #1
   18190:	uxtb	r3, r3
   18194:	cmp	r3, #0
   18198:	bne	181a8 <__assert_fail@plt+0x6c3c>
   1819c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   181a0:	cmp	r3, #0
   181a4:	beq	181b0 <__assert_fail@plt+0x6c44>
   181a8:	mov	r3, #1
   181ac:	b	181b4 <__assert_fail@plt+0x6c48>
   181b0:	mov	r3, #0
   181b4:	cmp	r3, #0
   181b8:	bne	181c0 <__assert_fail@plt+0x6c54>
   181bc:	bl	1153c <abort@plt>
   181c0:	ldr	r2, [fp, #-144]	; 0xffffff70
   181c4:	ldr	r3, [fp, #-140]	; 0xffffff74
   181c8:	add	r3, r2, r3
   181cc:	str	r3, [fp, #-144]	; 0xffffff70
   181d0:	mov	r3, #0
   181d4:	strb	r3, [fp, #-148]	; 0xffffff6c
   181d8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   181dc:	ldr	r3, [fp, #-84]	; 0xffffffac
   181e0:	add	r3, r2, r3
   181e4:	str	r3, [fp, #-88]	; 0xffffffa8
   181e8:	mov	r3, #0
   181ec:	strb	r3, [fp, #-92]	; 0xffffffa4
   181f0:	sub	r3, fp, #104	; 0x68
   181f4:	mov	r0, r3
   181f8:	bl	18a08 <__assert_fail@plt+0x749c>
   181fc:	ldrb	r3, [fp, #-80]	; 0xffffffb0
   18200:	eor	r3, r3, #1
   18204:	uxtb	r3, r3
   18208:	cmp	r3, #0
   1820c:	bne	1821c <__assert_fail@plt+0x6cb0>
   18210:	ldr	r3, [fp, #-76]	; 0xffffffb4
   18214:	cmp	r3, #0
   18218:	beq	18224 <__assert_fail@plt+0x6cb8>
   1821c:	mov	r3, #1
   18220:	b	18228 <__assert_fail@plt+0x6cbc>
   18224:	mov	r3, #0
   18228:	cmp	r3, #0
   1822c:	bne	17f68 <__assert_fail@plt+0x69fc>
   18230:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18234:	bl	1e164 <__assert_fail@plt+0xcbf8>
   18238:	mov	r3, #1
   1823c:	mov	r0, r3
   18240:	sub	sp, fp, #4
   18244:	ldr	fp, [sp]
   18248:	add	sp, sp, #4
   1824c:	pop	{pc}		; (ldr pc, [sp], #4)
   18250:	str	r4, [sp, #-12]!
   18254:	str	fp, [sp, #4]
   18258:	str	lr, [sp, #8]
   1825c:	add	fp, sp, #8
   18260:	sub	sp, sp, #356	; 0x164
   18264:	str	r0, [fp, #-360]	; 0xfffffe98
   18268:	str	r1, [fp, #-364]	; 0xfffffe94
   1826c:	bl	112e4 <__ctype_get_mb_cur_max@plt>
   18270:	mov	r3, r0
   18274:	cmp	r3, #1
   18278:	bls	187e0 <__assert_fail@plt+0x7274>
   1827c:	ldr	r3, [fp, #-364]	; 0xfffffe94
   18280:	str	r3, [fp, #-336]	; 0xfffffeb0
   18284:	mov	r3, #0
   18288:	strb	r3, [fp, #-352]	; 0xfffffea0
   1828c:	sub	r3, fp, #352	; 0x160
   18290:	add	r3, r3, #4
   18294:	mov	r2, #8
   18298:	mov	r1, #0
   1829c:	mov	r0, r3
   182a0:	bl	11410 <memset@plt>
   182a4:	mov	r3, #0
   182a8:	strb	r3, [fp, #-340]	; 0xfffffeac
   182ac:	sub	r3, fp, #352	; 0x160
   182b0:	mov	r0, r3
   182b4:	bl	18a08 <__assert_fail@plt+0x749c>
   182b8:	ldrb	r3, [fp, #-328]	; 0xfffffeb8
   182bc:	eor	r3, r3, #1
   182c0:	uxtb	r3, r3
   182c4:	cmp	r3, #0
   182c8:	bne	182d8 <__assert_fail@plt+0x6d6c>
   182cc:	ldr	r3, [fp, #-324]	; 0xfffffebc
   182d0:	cmp	r3, #0
   182d4:	beq	182e0 <__assert_fail@plt+0x6d74>
   182d8:	mov	r3, #1
   182dc:	b	182e4 <__assert_fail@plt+0x6d78>
   182e0:	mov	r3, #0
   182e4:	cmp	r3, #0
   182e8:	beq	187d8 <__assert_fail@plt+0x726c>
   182ec:	mov	r3, #1
   182f0:	strb	r3, [fp, #-13]
   182f4:	mov	r3, #0
   182f8:	str	r3, [fp, #-20]	; 0xffffffec
   182fc:	mov	r3, #0
   18300:	str	r3, [fp, #-24]	; 0xffffffe8
   18304:	mov	r3, #0
   18308:	str	r3, [fp, #-28]	; 0xffffffe4
   1830c:	ldr	r3, [fp, #-364]	; 0xfffffe94
   18310:	str	r3, [fp, #-280]	; 0xfffffee8
   18314:	mov	r3, #0
   18318:	strb	r3, [fp, #-296]	; 0xfffffed8
   1831c:	sub	r3, fp, #296	; 0x128
   18320:	add	r3, r3, #4
   18324:	mov	r2, #8
   18328:	mov	r1, #0
   1832c:	mov	r0, r3
   18330:	bl	11410 <memset@plt>
   18334:	mov	r3, #0
   18338:	strb	r3, [fp, #-284]	; 0xfffffee4
   1833c:	ldr	r3, [fp, #-360]	; 0xfffffe98
   18340:	str	r3, [fp, #-224]	; 0xffffff20
   18344:	mov	r3, #0
   18348:	strb	r3, [fp, #-240]	; 0xffffff10
   1834c:	sub	r3, fp, #240	; 0xf0
   18350:	add	r3, r3, #4
   18354:	mov	r2, #8
   18358:	mov	r1, #0
   1835c:	mov	r0, r3
   18360:	bl	11410 <memset@plt>
   18364:	mov	r3, #0
   18368:	strb	r3, [fp, #-228]	; 0xffffff1c
   1836c:	sub	r3, fp, #240	; 0xf0
   18370:	mov	r0, r3
   18374:	bl	18a08 <__assert_fail@plt+0x749c>
   18378:	ldrb	r3, [fp, #-216]	; 0xffffff28
   1837c:	eor	r3, r3, #1
   18380:	uxtb	r3, r3
   18384:	cmp	r3, #0
   18388:	bne	18398 <__assert_fail@plt+0x6e2c>
   1838c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   18390:	cmp	r3, #0
   18394:	beq	183a0 <__assert_fail@plt+0x6e34>
   18398:	mov	r3, #1
   1839c:	b	183a4 <__assert_fail@plt+0x6e38>
   183a0:	mov	r3, #0
   183a4:	cmp	r3, #0
   183a8:	bne	183b4 <__assert_fail@plt+0x6e48>
   183ac:	mov	r3, #0
   183b0:	b	189f0 <__assert_fail@plt+0x7484>
   183b4:	ldrb	r3, [fp, #-13]
   183b8:	cmp	r3, #0
   183bc:	beq	184ec <__assert_fail@plt+0x6f80>
   183c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   183c4:	cmp	r3, #9
   183c8:	bls	184ec <__assert_fail@plt+0x6f80>
   183cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   183d0:	mov	r3, r2
   183d4:	lsl	r3, r3, #2
   183d8:	add	r3, r3, r2
   183dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   183e0:	cmp	r2, r3
   183e4:	bcc	184ec <__assert_fail@plt+0x6f80>
   183e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   183ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   183f0:	sub	r3, r2, r3
   183f4:	str	r3, [fp, #-32]	; 0xffffffe0
   183f8:	b	18420 <__assert_fail@plt+0x6eb4>
   183fc:	ldr	r2, [fp, #-280]	; 0xfffffee8
   18400:	ldr	r3, [fp, #-276]	; 0xfffffeec
   18404:	add	r3, r2, r3
   18408:	str	r3, [fp, #-280]	; 0xfffffee8
   1840c:	mov	r3, #0
   18410:	strb	r3, [fp, #-284]	; 0xfffffee4
   18414:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18418:	sub	r3, r3, #1
   1841c:	str	r3, [fp, #-32]	; 0xffffffe0
   18420:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18424:	cmp	r3, #0
   18428:	beq	1846c <__assert_fail@plt+0x6f00>
   1842c:	sub	r3, fp, #296	; 0x128
   18430:	mov	r0, r3
   18434:	bl	18a08 <__assert_fail@plt+0x749c>
   18438:	ldrb	r3, [fp, #-272]	; 0xfffffef0
   1843c:	eor	r3, r3, #1
   18440:	uxtb	r3, r3
   18444:	cmp	r3, #0
   18448:	bne	18458 <__assert_fail@plt+0x6eec>
   1844c:	ldr	r3, [fp, #-268]	; 0xfffffef4
   18450:	cmp	r3, #0
   18454:	beq	18460 <__assert_fail@plt+0x6ef4>
   18458:	mov	r3, #1
   1845c:	b	18464 <__assert_fail@plt+0x6ef8>
   18460:	mov	r3, #0
   18464:	cmp	r3, #0
   18468:	bne	183fc <__assert_fail@plt+0x6e90>
   1846c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18470:	str	r3, [fp, #-28]	; 0xffffffe4
   18474:	sub	r3, fp, #296	; 0x128
   18478:	mov	r0, r3
   1847c:	bl	18a08 <__assert_fail@plt+0x749c>
   18480:	ldrb	r3, [fp, #-272]	; 0xfffffef0
   18484:	eor	r3, r3, #1
   18488:	uxtb	r3, r3
   1848c:	cmp	r3, #0
   18490:	bne	184a0 <__assert_fail@plt+0x6f34>
   18494:	ldr	r3, [fp, #-268]	; 0xfffffef4
   18498:	cmp	r3, #0
   1849c:	beq	184a8 <__assert_fail@plt+0x6f3c>
   184a0:	mov	r3, #1
   184a4:	b	184ac <__assert_fail@plt+0x6f40>
   184a8:	mov	r3, #0
   184ac:	cmp	r3, #0
   184b0:	bne	184ec <__assert_fail@plt+0x6f80>
   184b4:	sub	r3, fp, #68	; 0x44
   184b8:	mov	r2, r3
   184bc:	ldr	r1, [fp, #-364]	; 0xfffffe94
   184c0:	ldr	r0, [fp, #-360]	; 0xfffffe98
   184c4:	bl	17af8 <__assert_fail@plt+0x658c>
   184c8:	mov	r3, r0
   184cc:	strb	r3, [fp, #-61]	; 0xffffffc3
   184d0:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   184d4:	cmp	r3, #0
   184d8:	beq	184e4 <__assert_fail@plt+0x6f78>
   184dc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   184e0:	b	189f0 <__assert_fail@plt+0x7484>
   184e4:	mov	r3, #0
   184e8:	strb	r3, [fp, #-13]
   184ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   184f0:	add	r3, r3, #1
   184f4:	str	r3, [fp, #-20]	; 0xffffffec
   184f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   184fc:	add	r3, r3, #1
   18500:	str	r3, [fp, #-24]	; 0xffffffe8
   18504:	ldrb	r3, [fp, #-216]	; 0xffffff28
   18508:	cmp	r3, #0
   1850c:	beq	18538 <__assert_fail@plt+0x6fcc>
   18510:	ldrb	r3, [fp, #-328]	; 0xfffffeb8
   18514:	cmp	r3, #0
   18518:	beq	18538 <__assert_fail@plt+0x6fcc>
   1851c:	ldr	r2, [fp, #-212]	; 0xffffff2c
   18520:	ldr	r3, [fp, #-324]	; 0xfffffebc
   18524:	cmp	r2, r3
   18528:	moveq	r3, #1
   1852c:	movne	r3, #0
   18530:	uxtb	r3, r3
   18534:	b	1857c <__assert_fail@plt+0x7010>
   18538:	ldr	r2, [fp, #-220]	; 0xffffff24
   1853c:	ldr	r3, [fp, #-332]	; 0xfffffeb4
   18540:	cmp	r2, r3
   18544:	bne	18570 <__assert_fail@plt+0x7004>
   18548:	ldr	r3, [fp, #-224]	; 0xffffff20
   1854c:	ldr	r1, [fp, #-336]	; 0xfffffeb0
   18550:	ldr	r2, [fp, #-220]	; 0xffffff24
   18554:	mov	r0, r3
   18558:	bl	11248 <memcmp@plt>
   1855c:	mov	r3, r0
   18560:	cmp	r3, #0
   18564:	bne	18570 <__assert_fail@plt+0x7004>
   18568:	mov	r3, #1
   1856c:	b	18574 <__assert_fail@plt+0x7008>
   18570:	mov	r3, #0
   18574:	and	r3, r3, #1
   18578:	uxtb	r3, r3
   1857c:	cmp	r3, #0
   18580:	beq	187bc <__assert_fail@plt+0x7250>
   18584:	sub	r3, fp, #184	; 0xb8
   18588:	sub	r2, fp, #240	; 0xf0
   1858c:	ldrd	r0, [r2]
   18590:	strd	r0, [r3]
   18594:	ldrd	r0, [r2, #8]
   18598:	strd	r0, [r3, #8]
   1859c:	ldrd	r0, [r2, #16]
   185a0:	strd	r0, [r3, #16]
   185a4:	ldrd	r0, [r2, #24]
   185a8:	strd	r0, [r3, #24]
   185ac:	ldrd	r0, [r2, #32]
   185b0:	strd	r0, [r3, #32]
   185b4:	ldrd	r0, [r2, #40]	; 0x28
   185b8:	strd	r0, [r3, #40]	; 0x28
   185bc:	ldrd	r0, [r2, #48]	; 0x30
   185c0:	strd	r0, [r3, #48]	; 0x30
   185c4:	ldr	r2, [fp, #-168]	; 0xffffff58
   185c8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   185cc:	add	r3, r2, r3
   185d0:	str	r3, [fp, #-168]	; 0xffffff58
   185d4:	mov	r3, #0
   185d8:	strb	r3, [fp, #-172]	; 0xffffff54
   185dc:	ldr	r3, [fp, #-364]	; 0xfffffe94
   185e0:	str	r3, [fp, #-112]	; 0xffffff90
   185e4:	mov	r3, #0
   185e8:	strb	r3, [fp, #-128]	; 0xffffff80
   185ec:	sub	r3, fp, #128	; 0x80
   185f0:	add	r3, r3, #4
   185f4:	mov	r2, #8
   185f8:	mov	r1, #0
   185fc:	mov	r0, r3
   18600:	bl	11410 <memset@plt>
   18604:	mov	r3, #0
   18608:	strb	r3, [fp, #-116]	; 0xffffff8c
   1860c:	sub	r3, fp, #128	; 0x80
   18610:	mov	r0, r3
   18614:	bl	18a08 <__assert_fail@plt+0x749c>
   18618:	ldrb	r3, [fp, #-104]	; 0xffffff98
   1861c:	eor	r3, r3, #1
   18620:	uxtb	r3, r3
   18624:	cmp	r3, #0
   18628:	bne	18638 <__assert_fail@plt+0x70cc>
   1862c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18630:	cmp	r3, #0
   18634:	beq	18640 <__assert_fail@plt+0x70d4>
   18638:	mov	r3, #1
   1863c:	b	18644 <__assert_fail@plt+0x70d8>
   18640:	mov	r3, #0
   18644:	cmp	r3, #0
   18648:	bne	18650 <__assert_fail@plt+0x70e4>
   1864c:	bl	1153c <abort@plt>
   18650:	ldr	r2, [fp, #-112]	; 0xffffff90
   18654:	ldr	r3, [fp, #-108]	; 0xffffff94
   18658:	add	r3, r2, r3
   1865c:	str	r3, [fp, #-112]	; 0xffffff90
   18660:	mov	r3, #0
   18664:	strb	r3, [fp, #-116]	; 0xffffff8c
   18668:	sub	r3, fp, #128	; 0x80
   1866c:	mov	r0, r3
   18670:	bl	18a08 <__assert_fail@plt+0x749c>
   18674:	ldrb	r3, [fp, #-104]	; 0xffffff98
   18678:	eor	r3, r3, #1
   1867c:	uxtb	r3, r3
   18680:	cmp	r3, #0
   18684:	bne	18694 <__assert_fail@plt+0x7128>
   18688:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1868c:	cmp	r3, #0
   18690:	beq	1869c <__assert_fail@plt+0x7130>
   18694:	mov	r3, #1
   18698:	b	186a0 <__assert_fail@plt+0x7134>
   1869c:	mov	r3, #0
   186a0:	cmp	r3, #0
   186a4:	bne	186b0 <__assert_fail@plt+0x7144>
   186a8:	ldr	r3, [fp, #-224]	; 0xffffff20
   186ac:	b	189f0 <__assert_fail@plt+0x7484>
   186b0:	sub	r3, fp, #184	; 0xb8
   186b4:	mov	r0, r3
   186b8:	bl	18a08 <__assert_fail@plt+0x749c>
   186bc:	ldrb	r3, [fp, #-160]	; 0xffffff60
   186c0:	eor	r3, r3, #1
   186c4:	uxtb	r3, r3
   186c8:	cmp	r3, #0
   186cc:	bne	186dc <__assert_fail@plt+0x7170>
   186d0:	ldr	r3, [fp, #-156]	; 0xffffff64
   186d4:	cmp	r3, #0
   186d8:	beq	186e4 <__assert_fail@plt+0x7178>
   186dc:	mov	r3, #1
   186e0:	b	186e8 <__assert_fail@plt+0x717c>
   186e4:	mov	r3, #0
   186e8:	cmp	r3, #0
   186ec:	bne	186f8 <__assert_fail@plt+0x718c>
   186f0:	mov	r3, #0
   186f4:	b	189f0 <__assert_fail@plt+0x7484>
   186f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   186fc:	add	r3, r3, #1
   18700:	str	r3, [fp, #-24]	; 0xffffffe8
   18704:	ldrb	r3, [fp, #-160]	; 0xffffff60
   18708:	cmp	r3, #0
   1870c:	beq	18738 <__assert_fail@plt+0x71cc>
   18710:	ldrb	r3, [fp, #-104]	; 0xffffff98
   18714:	cmp	r3, #0
   18718:	beq	18738 <__assert_fail@plt+0x71cc>
   1871c:	ldr	r2, [fp, #-156]	; 0xffffff64
   18720:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18724:	cmp	r2, r3
   18728:	movne	r3, #1
   1872c:	moveq	r3, #0
   18730:	uxtb	r3, r3
   18734:	b	1877c <__assert_fail@plt+0x7210>
   18738:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1873c:	ldr	r3, [fp, #-108]	; 0xffffff94
   18740:	cmp	r2, r3
   18744:	bne	18768 <__assert_fail@plt+0x71fc>
   18748:	ldr	r3, [fp, #-168]	; 0xffffff58
   1874c:	ldr	r1, [fp, #-112]	; 0xffffff90
   18750:	ldr	r2, [fp, #-164]	; 0xffffff5c
   18754:	mov	r0, r3
   18758:	bl	11248 <memcmp@plt>
   1875c:	mov	r3, r0
   18760:	cmp	r3, #0
   18764:	beq	18770 <__assert_fail@plt+0x7204>
   18768:	mov	r3, #1
   1876c:	b	18774 <__assert_fail@plt+0x7208>
   18770:	mov	r3, #0
   18774:	and	r3, r3, #1
   18778:	uxtb	r3, r3
   1877c:	cmp	r3, #0
   18780:	bne	187b8 <__assert_fail@plt+0x724c>
   18784:	ldr	r2, [fp, #-168]	; 0xffffff58
   18788:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1878c:	add	r3, r2, r3
   18790:	str	r3, [fp, #-168]	; 0xffffff58
   18794:	mov	r3, #0
   18798:	strb	r3, [fp, #-172]	; 0xffffff54
   1879c:	ldr	r2, [fp, #-112]	; 0xffffff90
   187a0:	ldr	r3, [fp, #-108]	; 0xffffff94
   187a4:	add	r3, r2, r3
   187a8:	str	r3, [fp, #-112]	; 0xffffff90
   187ac:	mov	r3, #0
   187b0:	strb	r3, [fp, #-116]	; 0xffffff8c
   187b4:	b	18668 <__assert_fail@plt+0x70fc>
   187b8:	nop	{0}
   187bc:	ldr	r2, [fp, #-224]	; 0xffffff20
   187c0:	ldr	r3, [fp, #-220]	; 0xffffff24
   187c4:	add	r3, r2, r3
   187c8:	str	r3, [fp, #-224]	; 0xffffff20
   187cc:	mov	r3, #0
   187d0:	strb	r3, [fp, #-228]	; 0xffffff1c
   187d4:	b	1836c <__assert_fail@plt+0x6e00>
   187d8:	ldr	r3, [fp, #-360]	; 0xfffffe98
   187dc:	b	189f0 <__assert_fail@plt+0x7484>
   187e0:	ldr	r3, [fp, #-364]	; 0xfffffe94
   187e4:	ldrb	r3, [r3]
   187e8:	cmp	r3, #0
   187ec:	beq	189ec <__assert_fail@plt+0x7480>
   187f0:	mov	r3, #1
   187f4:	strb	r3, [fp, #-33]	; 0xffffffdf
   187f8:	mov	r3, #0
   187fc:	str	r3, [fp, #-40]	; 0xffffffd8
   18800:	mov	r3, #0
   18804:	str	r3, [fp, #-44]	; 0xffffffd4
   18808:	mov	r3, #0
   1880c:	str	r3, [fp, #-48]	; 0xffffffd0
   18810:	ldr	r3, [fp, #-364]	; 0xfffffe94
   18814:	str	r3, [fp, #-52]	; 0xffffffcc
   18818:	ldr	r3, [fp, #-364]	; 0xfffffe94
   1881c:	add	r2, r3, #1
   18820:	str	r2, [fp, #-364]	; 0xfffffe94
   18824:	ldrb	r3, [r3]
   18828:	strb	r3, [fp, #-62]	; 0xffffffc2
   1882c:	ldr	r3, [fp, #-360]	; 0xfffffe98
   18830:	ldrb	r3, [r3]
   18834:	cmp	r3, #0
   18838:	bne	18844 <__assert_fail@plt+0x72d8>
   1883c:	mov	r3, #0
   18840:	b	189f0 <__assert_fail@plt+0x7484>
   18844:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   18848:	cmp	r3, #0
   1884c:	beq	18928 <__assert_fail@plt+0x73bc>
   18850:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18854:	cmp	r3, #9
   18858:	bls	18928 <__assert_fail@plt+0x73bc>
   1885c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18860:	mov	r3, r2
   18864:	lsl	r3, r3, #2
   18868:	add	r3, r3, r2
   1886c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18870:	cmp	r2, r3
   18874:	bcc	18928 <__assert_fail@plt+0x73bc>
   18878:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1887c:	cmp	r3, #0
   18880:	beq	188cc <__assert_fail@plt+0x7360>
   18884:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18888:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1888c:	sub	r3, r2, r3
   18890:	mov	r1, r3
   18894:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18898:	bl	11458 <strnlen@plt>
   1889c:	mov	r2, r0
   188a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   188a4:	add	r3, r3, r2
   188a8:	str	r3, [fp, #-52]	; 0xffffffcc
   188ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   188b0:	ldrb	r3, [r3]
   188b4:	cmp	r3, #0
   188b8:	bne	188c4 <__assert_fail@plt+0x7358>
   188bc:	mov	r3, #0
   188c0:	str	r3, [fp, #-52]	; 0xffffffcc
   188c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   188c8:	str	r3, [fp, #-48]	; 0xffffffd0
   188cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   188d0:	cmp	r3, #0
   188d4:	bne	18928 <__assert_fail@plt+0x73bc>
   188d8:	ldr	r3, [fp, #-364]	; 0xfffffe94
   188dc:	sub	r4, r3, #1
   188e0:	ldr	r3, [fp, #-364]	; 0xfffffe94
   188e4:	sub	r3, r3, #1
   188e8:	mov	r0, r3
   188ec:	bl	113bc <strlen@plt>
   188f0:	mov	r2, r0
   188f4:	sub	r3, fp, #72	; 0x48
   188f8:	mov	r1, r4
   188fc:	ldr	r0, [fp, #-360]	; 0xfffffe98
   18900:	bl	17804 <__assert_fail@plt+0x6298>
   18904:	mov	r3, r0
   18908:	strb	r3, [fp, #-63]	; 0xffffffc1
   1890c:	ldrb	r3, [fp, #-63]	; 0xffffffc1
   18910:	cmp	r3, #0
   18914:	beq	18920 <__assert_fail@plt+0x73b4>
   18918:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1891c:	b	189f0 <__assert_fail@plt+0x7484>
   18920:	mov	r3, #0
   18924:	strb	r3, [fp, #-33]	; 0xffffffdf
   18928:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1892c:	add	r3, r3, #1
   18930:	str	r3, [fp, #-40]	; 0xffffffd8
   18934:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18938:	add	r3, r3, #1
   1893c:	str	r3, [fp, #-44]	; 0xffffffd4
   18940:	ldr	r3, [fp, #-360]	; 0xfffffe98
   18944:	ldrb	r3, [r3]
   18948:	ldrb	r2, [fp, #-62]	; 0xffffffc2
   1894c:	cmp	r2, r3
   18950:	bne	189dc <__assert_fail@plt+0x7470>
   18954:	ldr	r3, [fp, #-360]	; 0xfffffe98
   18958:	add	r3, r3, #1
   1895c:	str	r3, [fp, #-56]	; 0xffffffc8
   18960:	ldr	r3, [fp, #-364]	; 0xfffffe94
   18964:	str	r3, [fp, #-60]	; 0xffffffc4
   18968:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1896c:	ldrb	r3, [r3]
   18970:	cmp	r3, #0
   18974:	bne	18980 <__assert_fail@plt+0x7414>
   18978:	ldr	r3, [fp, #-360]	; 0xfffffe98
   1897c:	b	189f0 <__assert_fail@plt+0x7484>
   18980:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18984:	ldrb	r3, [r3]
   18988:	cmp	r3, #0
   1898c:	bne	18998 <__assert_fail@plt+0x742c>
   18990:	mov	r3, #0
   18994:	b	189f0 <__assert_fail@plt+0x7484>
   18998:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1899c:	add	r3, r3, #1
   189a0:	str	r3, [fp, #-44]	; 0xffffffd4
   189a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   189a8:	ldrb	r2, [r3]
   189ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   189b0:	ldrb	r3, [r3]
   189b4:	cmp	r2, r3
   189b8:	bne	189d8 <__assert_fail@plt+0x746c>
   189bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   189c0:	add	r3, r3, #1
   189c4:	str	r3, [fp, #-56]	; 0xffffffc8
   189c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   189cc:	add	r3, r3, #1
   189d0:	str	r3, [fp, #-60]	; 0xffffffc4
   189d4:	b	18968 <__assert_fail@plt+0x73fc>
   189d8:	nop	{0}
   189dc:	ldr	r3, [fp, #-360]	; 0xfffffe98
   189e0:	add	r3, r3, #1
   189e4:	str	r3, [fp, #-360]	; 0xfffffe98
   189e8:	b	1882c <__assert_fail@plt+0x72c0>
   189ec:	ldr	r3, [fp, #-360]	; 0xfffffe98
   189f0:	mov	r0, r3
   189f4:	sub	sp, fp, #8
   189f8:	ldr	r4, [sp]
   189fc:	ldr	fp, [sp, #4]
   18a00:	add	sp, sp, #8
   18a04:	pop	{pc}		; (ldr pc, [sp], #4)
   18a08:	strd	r4, [sp, #-20]!	; 0xffffffec
   18a0c:	str	r6, [sp, #8]
   18a10:	str	fp, [sp, #12]
   18a14:	str	lr, [sp, #16]
   18a18:	add	fp, sp, #16
   18a1c:	sub	sp, sp, #12
   18a20:	str	r0, [fp, #-24]	; 0xffffffe8
   18a24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a28:	ldrb	r3, [r3, #12]
   18a2c:	cmp	r3, #0
   18a30:	bne	18c64 <__assert_fail@plt+0x76f8>
   18a34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a38:	ldrb	r3, [r3]
   18a3c:	cmp	r3, #0
   18a40:	bne	18ae4 <__assert_fail@plt+0x7578>
   18a44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a48:	ldr	r3, [r3, #16]
   18a4c:	ldrb	r3, [r3]
   18a50:	mov	r0, r3
   18a54:	bl	1e300 <__assert_fail@plt+0xcd94>
   18a58:	mov	r3, r0
   18a5c:	cmp	r3, #0
   18a60:	beq	18a98 <__assert_fail@plt+0x752c>
   18a64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a68:	mov	r2, #1
   18a6c:	str	r2, [r3, #20]
   18a70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a74:	ldr	r3, [r3, #16]
   18a78:	ldrb	r3, [r3]
   18a7c:	mov	r2, r3
   18a80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a84:	str	r2, [r3, #28]
   18a88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a8c:	mov	r2, #1
   18a90:	strb	r2, [r3, #24]
   18a94:	b	18c54 <__assert_fail@plt+0x76e8>
   18a98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a9c:	add	r3, r3, #4
   18aa0:	mov	r0, r3
   18aa4:	bl	11230 <mbsinit@plt>
   18aa8:	mov	r3, r0
   18aac:	cmp	r3, #0
   18ab0:	bne	18ad4 <__assert_fail@plt+0x7568>
   18ab4:	movw	r3, #2852	; 0xb24
   18ab8:	movt	r3, #2
   18abc:	mov	r2, #143	; 0x8f
   18ac0:	movw	r1, #2772	; 0xad4
   18ac4:	movt	r1, #2
   18ac8:	movw	r0, #2784	; 0xae0
   18acc:	movt	r0, #2
   18ad0:	bl	1156c <__assert_fail@plt>
   18ad4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18ad8:	mov	r2, #1
   18adc:	strb	r2, [r3]
   18ae0:	b	18ae8 <__assert_fail@plt+0x757c>
   18ae4:	nop	{0}
   18ae8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18aec:	add	r4, r3, #28
   18af0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18af4:	ldr	r5, [r3, #16]
   18af8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18afc:	ldr	r6, [r3, #16]
   18b00:	bl	112e4 <__ctype_get_mb_cur_max@plt>
   18b04:	mov	r3, r0
   18b08:	mov	r1, r3
   18b0c:	mov	r0, r6
   18b10:	bl	1b7b8 <__assert_fail@plt+0xa24c>
   18b14:	mov	r2, r0
   18b18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b1c:	add	r3, r3, #4
   18b20:	mov	r1, r5
   18b24:	mov	r0, r4
   18b28:	bl	1da0c <__assert_fail@plt+0xc4a0>
   18b2c:	mov	r2, r0
   18b30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b34:	str	r2, [r3, #20]
   18b38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b3c:	ldr	r3, [r3, #20]
   18b40:	cmn	r3, #1
   18b44:	bne	18b64 <__assert_fail@plt+0x75f8>
   18b48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b4c:	mov	r2, #1
   18b50:	str	r2, [r3, #20]
   18b54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b58:	mov	r2, #0
   18b5c:	strb	r2, [r3, #24]
   18b60:	b	18c54 <__assert_fail@plt+0x76e8>
   18b64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b68:	ldr	r3, [r3, #20]
   18b6c:	cmn	r3, #2
   18b70:	bne	18ba0 <__assert_fail@plt+0x7634>
   18b74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b78:	ldr	r3, [r3, #16]
   18b7c:	mov	r0, r3
   18b80:	bl	113bc <strlen@plt>
   18b84:	mov	r2, r0
   18b88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b8c:	str	r2, [r3, #20]
   18b90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b94:	mov	r2, #0
   18b98:	strb	r2, [r3, #24]
   18b9c:	b	18c54 <__assert_fail@plt+0x76e8>
   18ba0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18ba4:	ldr	r3, [r3, #20]
   18ba8:	cmp	r3, #0
   18bac:	bne	18c20 <__assert_fail@plt+0x76b4>
   18bb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18bb4:	mov	r2, #1
   18bb8:	str	r2, [r3, #20]
   18bbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18bc0:	ldr	r3, [r3, #16]
   18bc4:	ldrb	r3, [r3]
   18bc8:	cmp	r3, #0
   18bcc:	beq	18bf0 <__assert_fail@plt+0x7684>
   18bd0:	movw	r3, #2852	; 0xb24
   18bd4:	movt	r3, #2
   18bd8:	mov	r2, #171	; 0xab
   18bdc:	movw	r1, #2772	; 0xad4
   18be0:	movt	r1, #2
   18be4:	movw	r0, #2808	; 0xaf8
   18be8:	movt	r0, #2
   18bec:	bl	1156c <__assert_fail@plt>
   18bf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18bf4:	ldr	r3, [r3, #28]
   18bf8:	cmp	r3, #0
   18bfc:	beq	18c20 <__assert_fail@plt+0x76b4>
   18c00:	movw	r3, #2852	; 0xb24
   18c04:	movt	r3, #2
   18c08:	mov	r2, #172	; 0xac
   18c0c:	movw	r1, #2772	; 0xad4
   18c10:	movt	r1, #2
   18c14:	movw	r0, #2832	; 0xb10
   18c18:	movt	r0, #2
   18c1c:	bl	1156c <__assert_fail@plt>
   18c20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c24:	mov	r2, #1
   18c28:	strb	r2, [r3, #24]
   18c2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c30:	add	r3, r3, #4
   18c34:	mov	r0, r3
   18c38:	bl	11230 <mbsinit@plt>
   18c3c:	mov	r3, r0
   18c40:	cmp	r3, #0
   18c44:	beq	18c54 <__assert_fail@plt+0x76e8>
   18c48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c4c:	mov	r2, #0
   18c50:	strb	r2, [r3]
   18c54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c58:	mov	r2, #1
   18c5c:	strb	r2, [r3, #12]
   18c60:	b	18c68 <__assert_fail@plt+0x76fc>
   18c64:	nop	{0}
   18c68:	sub	sp, fp, #16
   18c6c:	ldrd	r4, [sp]
   18c70:	ldr	r6, [sp, #8]
   18c74:	ldr	fp, [sp, #12]
   18c78:	add	sp, sp, #16
   18c7c:	pop	{pc}		; (ldr pc, [sp], #4)
   18c80:	push	{fp}		; (str fp, [sp, #-4]!)
   18c84:	add	fp, sp, #0
   18c88:	sub	sp, sp, #12
   18c8c:	str	r0, [fp, #-8]
   18c90:	str	r1, [fp, #-12]
   18c94:	ldr	r3, [fp, #-8]
   18c98:	ldr	r2, [r3, #16]
   18c9c:	ldr	r3, [fp, #-12]
   18ca0:	add	r2, r2, r3
   18ca4:	ldr	r3, [fp, #-8]
   18ca8:	str	r2, [r3, #16]
   18cac:	nop	{0}
   18cb0:	add	sp, fp, #0
   18cb4:	pop	{fp}		; (ldr fp, [sp], #4)
   18cb8:	bx	lr
   18cbc:	str	fp, [sp, #-8]!
   18cc0:	str	lr, [sp, #4]
   18cc4:	add	fp, sp, #4
   18cc8:	sub	sp, sp, #8
   18ccc:	str	r0, [fp, #-8]
   18cd0:	str	r1, [fp, #-12]
   18cd4:	ldr	r3, [fp, #-12]
   18cd8:	ldrb	r2, [r3]
   18cdc:	ldr	r3, [fp, #-8]
   18ce0:	strb	r2, [r3]
   18ce4:	ldr	r3, [fp, #-8]
   18ce8:	ldrb	r3, [r3]
   18cec:	cmp	r3, #0
   18cf0:	beq	18d14 <__assert_fail@plt+0x77a8>
   18cf4:	ldr	r3, [fp, #-8]
   18cf8:	add	r0, r3, #4
   18cfc:	ldr	r3, [fp, #-12]
   18d00:	add	r3, r3, #4
   18d04:	mov	r2, #8
   18d08:	mov	r1, r3
   18d0c:	bl	11218 <memcpy@plt>
   18d10:	b	18d2c <__assert_fail@plt+0x77c0>
   18d14:	ldr	r3, [fp, #-8]
   18d18:	add	r3, r3, #4
   18d1c:	mov	r2, #8
   18d20:	mov	r1, #0
   18d24:	mov	r0, r3
   18d28:	bl	11410 <memset@plt>
   18d2c:	ldr	r3, [fp, #-12]
   18d30:	ldrb	r2, [r3, #12]
   18d34:	ldr	r3, [fp, #-8]
   18d38:	strb	r2, [r3, #12]
   18d3c:	ldr	r3, [fp, #-8]
   18d40:	add	r2, r3, #16
   18d44:	ldr	r3, [fp, #-12]
   18d48:	add	r3, r3, #16
   18d4c:	mov	r1, r3
   18d50:	mov	r0, r2
   18d54:	bl	1e238 <__assert_fail@plt+0xcccc>
   18d58:	nop	{0}
   18d5c:	sub	sp, fp, #4
   18d60:	ldr	fp, [sp]
   18d64:	add	sp, sp, #4
   18d68:	pop	{pc}		; (ldr pc, [sp], #4)
   18d6c:	str	fp, [sp, #-8]!
   18d70:	str	lr, [sp, #4]
   18d74:	add	fp, sp, #4
   18d78:	sub	sp, sp, #16
   18d7c:	str	r0, [fp, #-16]
   18d80:	ldr	r3, [fp, #-16]
   18d84:	cmp	r3, #0
   18d88:	bne	18db0 <__assert_fail@plt+0x7844>
   18d8c:	movw	r3, #8656	; 0x21d0
   18d90:	movt	r3, #3
   18d94:	ldr	r3, [r3]
   18d98:	mov	r2, #55	; 0x37
   18d9c:	mov	r1, #1
   18da0:	movw	r0, #2872	; 0xb38
   18da4:	movt	r0, #2
   18da8:	bl	112c0 <fwrite@plt>
   18dac:	bl	1153c <abort@plt>
   18db0:	mov	r1, #47	; 0x2f
   18db4:	ldr	r0, [fp, #-16]
   18db8:	bl	114ac <strrchr@plt>
   18dbc:	str	r0, [fp, #-8]
   18dc0:	ldr	r3, [fp, #-8]
   18dc4:	cmp	r3, #0
   18dc8:	beq	18dd8 <__assert_fail@plt+0x786c>
   18dcc:	ldr	r3, [fp, #-8]
   18dd0:	add	r3, r3, #1
   18dd4:	b	18ddc <__assert_fail@plt+0x7870>
   18dd8:	ldr	r3, [fp, #-16]
   18ddc:	str	r3, [fp, #-12]
   18de0:	ldr	r2, [fp, #-12]
   18de4:	ldr	r3, [fp, #-16]
   18de8:	sub	r3, r2, r3
   18dec:	cmp	r3, #6
   18df0:	ble	18e60 <__assert_fail@plt+0x78f4>
   18df4:	ldr	r3, [fp, #-12]
   18df8:	sub	r3, r3, #7
   18dfc:	mov	r2, #7
   18e00:	movw	r1, #2928	; 0xb70
   18e04:	movt	r1, #2
   18e08:	mov	r0, r3
   18e0c:	bl	11530 <strncmp@plt>
   18e10:	mov	r3, r0
   18e14:	cmp	r3, #0
   18e18:	bne	18e60 <__assert_fail@plt+0x78f4>
   18e1c:	ldr	r3, [fp, #-12]
   18e20:	str	r3, [fp, #-16]
   18e24:	mov	r2, #3
   18e28:	movw	r1, #2936	; 0xb78
   18e2c:	movt	r1, #2
   18e30:	ldr	r0, [fp, #-12]
   18e34:	bl	11530 <strncmp@plt>
   18e38:	mov	r3, r0
   18e3c:	cmp	r3, #0
   18e40:	bne	18e60 <__assert_fail@plt+0x78f4>
   18e44:	ldr	r3, [fp, #-12]
   18e48:	add	r3, r3, #3
   18e4c:	str	r3, [fp, #-16]
   18e50:	movw	r3, #8632	; 0x21b8
   18e54:	movt	r3, #3
   18e58:	ldr	r2, [fp, #-16]
   18e5c:	str	r2, [r3]
   18e60:	movw	r3, #8872	; 0x22a8
   18e64:	movt	r3, #3
   18e68:	ldr	r2, [fp, #-16]
   18e6c:	str	r2, [r3]
   18e70:	movw	r3, #8640	; 0x21c0
   18e74:	movt	r3, #3
   18e78:	ldr	r2, [fp, #-16]
   18e7c:	str	r2, [r3]
   18e80:	nop	{0}
   18e84:	sub	sp, fp, #4
   18e88:	ldr	fp, [sp]
   18e8c:	add	sp, sp, #4
   18e90:	pop	{pc}		; (ldr pc, [sp], #4)
   18e94:	str	fp, [sp, #-8]!
   18e98:	str	lr, [sp, #4]
   18e9c:	add	fp, sp, #4
   18ea0:	sub	sp, sp, #16
   18ea4:	str	r0, [fp, #-16]
   18ea8:	bl	113ec <__errno_location@plt>
   18eac:	mov	r3, r0
   18eb0:	ldr	r3, [r3]
   18eb4:	str	r3, [fp, #-8]
   18eb8:	ldr	r3, [fp, #-16]
   18ebc:	cmp	r3, #0
   18ec0:	beq	18ecc <__assert_fail@plt+0x7960>
   18ec4:	ldr	r3, [fp, #-16]
   18ec8:	b	18ed4 <__assert_fail@plt+0x7968>
   18ecc:	movw	r3, #8876	; 0x22ac
   18ed0:	movt	r3, #3
   18ed4:	mov	r1, #48	; 0x30
   18ed8:	mov	r0, r3
   18edc:	bl	1c918 <__assert_fail@plt+0xb3ac>
   18ee0:	mov	r3, r0
   18ee4:	str	r3, [fp, #-12]
   18ee8:	bl	113ec <__errno_location@plt>
   18eec:	mov	r2, r0
   18ef0:	ldr	r3, [fp, #-8]
   18ef4:	str	r3, [r2]
   18ef8:	ldr	r3, [fp, #-12]
   18efc:	mov	r0, r3
   18f00:	sub	sp, fp, #4
   18f04:	ldr	fp, [sp]
   18f08:	add	sp, sp, #4
   18f0c:	pop	{pc}		; (ldr pc, [sp], #4)
   18f10:	push	{fp}		; (str fp, [sp, #-4]!)
   18f14:	add	fp, sp, #0
   18f18:	sub	sp, sp, #12
   18f1c:	str	r0, [fp, #-8]
   18f20:	ldr	r3, [fp, #-8]
   18f24:	cmp	r3, #0
   18f28:	beq	18f34 <__assert_fail@plt+0x79c8>
   18f2c:	ldr	r3, [fp, #-8]
   18f30:	b	18f3c <__assert_fail@plt+0x79d0>
   18f34:	movw	r3, #8876	; 0x22ac
   18f38:	movt	r3, #3
   18f3c:	ldr	r3, [r3]
   18f40:	mov	r0, r3
   18f44:	add	sp, fp, #0
   18f48:	pop	{fp}		; (ldr fp, [sp], #4)
   18f4c:	bx	lr
   18f50:	push	{fp}		; (str fp, [sp, #-4]!)
   18f54:	add	fp, sp, #0
   18f58:	sub	sp, sp, #12
   18f5c:	str	r0, [fp, #-8]
   18f60:	str	r1, [fp, #-12]
   18f64:	ldr	r3, [fp, #-8]
   18f68:	cmp	r3, #0
   18f6c:	beq	18f78 <__assert_fail@plt+0x7a0c>
   18f70:	ldr	r3, [fp, #-8]
   18f74:	b	18f80 <__assert_fail@plt+0x7a14>
   18f78:	movw	r3, #8876	; 0x22ac
   18f7c:	movt	r3, #3
   18f80:	ldr	r2, [fp, #-12]
   18f84:	str	r2, [r3]
   18f88:	nop	{0}
   18f8c:	add	sp, fp, #0
   18f90:	pop	{fp}		; (ldr fp, [sp], #4)
   18f94:	bx	lr
   18f98:	push	{fp}		; (str fp, [sp, #-4]!)
   18f9c:	add	fp, sp, #0
   18fa0:	sub	sp, sp, #36	; 0x24
   18fa4:	str	r0, [fp, #-24]	; 0xffffffe8
   18fa8:	mov	r3, r1
   18fac:	str	r2, [fp, #-32]	; 0xffffffe0
   18fb0:	strb	r3, [fp, #-25]	; 0xffffffe7
   18fb4:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   18fb8:	strb	r3, [fp, #-5]
   18fbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18fc0:	cmp	r3, #0
   18fc4:	beq	18fd0 <__assert_fail@plt+0x7a64>
   18fc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18fcc:	b	18fd8 <__assert_fail@plt+0x7a6c>
   18fd0:	movw	r3, #8876	; 0x22ac
   18fd4:	movt	r3, #3
   18fd8:	add	r2, r3, #8
   18fdc:	ldrb	r3, [fp, #-5]
   18fe0:	lsr	r3, r3, #5
   18fe4:	uxtb	r3, r3
   18fe8:	lsl	r3, r3, #2
   18fec:	add	r3, r2, r3
   18ff0:	str	r3, [fp, #-12]
   18ff4:	ldrb	r3, [fp, #-5]
   18ff8:	and	r3, r3, #31
   18ffc:	str	r3, [fp, #-16]
   19000:	ldr	r3, [fp, #-12]
   19004:	ldr	r2, [r3]
   19008:	ldr	r3, [fp, #-16]
   1900c:	lsr	r3, r2, r3
   19010:	and	r3, r3, #1
   19014:	str	r3, [fp, #-20]	; 0xffffffec
   19018:	ldr	r3, [fp, #-12]
   1901c:	ldr	r3, [r3]
   19020:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19024:	and	r1, r2, #1
   19028:	ldr	r2, [fp, #-20]	; 0xffffffec
   1902c:	eor	r1, r1, r2
   19030:	ldr	r2, [fp, #-16]
   19034:	lsl	r2, r1, r2
   19038:	eor	r2, r2, r3
   1903c:	ldr	r3, [fp, #-12]
   19040:	str	r2, [r3]
   19044:	ldr	r3, [fp, #-20]	; 0xffffffec
   19048:	mov	r0, r3
   1904c:	add	sp, fp, #0
   19050:	pop	{fp}		; (ldr fp, [sp], #4)
   19054:	bx	lr
   19058:	push	{fp}		; (str fp, [sp, #-4]!)
   1905c:	add	fp, sp, #0
   19060:	sub	sp, sp, #20
   19064:	str	r0, [fp, #-16]
   19068:	str	r1, [fp, #-20]	; 0xffffffec
   1906c:	ldr	r3, [fp, #-16]
   19070:	cmp	r3, #0
   19074:	bne	19084 <__assert_fail@plt+0x7b18>
   19078:	movw	r3, #8876	; 0x22ac
   1907c:	movt	r3, #3
   19080:	str	r3, [fp, #-16]
   19084:	ldr	r3, [fp, #-16]
   19088:	ldr	r3, [r3, #4]
   1908c:	str	r3, [fp, #-8]
   19090:	ldr	r3, [fp, #-16]
   19094:	ldr	r2, [fp, #-20]	; 0xffffffec
   19098:	str	r2, [r3, #4]
   1909c:	ldr	r3, [fp, #-8]
   190a0:	mov	r0, r3
   190a4:	add	sp, fp, #0
   190a8:	pop	{fp}		; (ldr fp, [sp], #4)
   190ac:	bx	lr
   190b0:	str	fp, [sp, #-8]!
   190b4:	str	lr, [sp, #4]
   190b8:	add	fp, sp, #4
   190bc:	sub	sp, sp, #16
   190c0:	str	r0, [fp, #-8]
   190c4:	str	r1, [fp, #-12]
   190c8:	str	r2, [fp, #-16]
   190cc:	ldr	r3, [fp, #-8]
   190d0:	cmp	r3, #0
   190d4:	bne	190e4 <__assert_fail@plt+0x7b78>
   190d8:	movw	r3, #8876	; 0x22ac
   190dc:	movt	r3, #3
   190e0:	str	r3, [fp, #-8]
   190e4:	ldr	r3, [fp, #-8]
   190e8:	mov	r2, #10
   190ec:	str	r2, [r3]
   190f0:	ldr	r3, [fp, #-12]
   190f4:	cmp	r3, #0
   190f8:	beq	19108 <__assert_fail@plt+0x7b9c>
   190fc:	ldr	r3, [fp, #-16]
   19100:	cmp	r3, #0
   19104:	bne	1910c <__assert_fail@plt+0x7ba0>
   19108:	bl	1153c <abort@plt>
   1910c:	ldr	r3, [fp, #-8]
   19110:	ldr	r2, [fp, #-12]
   19114:	str	r2, [r3, #40]	; 0x28
   19118:	ldr	r3, [fp, #-8]
   1911c:	ldr	r2, [fp, #-16]
   19120:	str	r2, [r3, #44]	; 0x2c
   19124:	nop	{0}
   19128:	sub	sp, fp, #4
   1912c:	ldr	fp, [sp]
   19130:	add	sp, sp, #4
   19134:	pop	{pc}		; (ldr pc, [sp], #4)
   19138:	str	fp, [sp, #-8]!
   1913c:	str	lr, [sp, #4]
   19140:	add	fp, sp, #4
   19144:	sub	sp, sp, #56	; 0x38
   19148:	str	r0, [fp, #-56]	; 0xffffffc8
   1914c:	str	r1, [fp, #-60]	; 0xffffffc4
   19150:	sub	r1, fp, #52	; 0x34
   19154:	mov	r2, #0
   19158:	mov	r3, #0
   1915c:	strd	r2, [r1]
   19160:	strd	r2, [r1, #8]
   19164:	strd	r2, [r1, #16]
   19168:	strd	r2, [r1, #24]
   1916c:	strd	r2, [r1, #32]
   19170:	strd	r2, [r1, #40]	; 0x28
   19174:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19178:	cmp	r3, #10
   1917c:	bne	19184 <__assert_fail@plt+0x7c18>
   19180:	bl	1153c <abort@plt>
   19184:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19188:	str	r3, [fp, #-52]	; 0xffffffcc
   1918c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19190:	mov	r2, r3
   19194:	sub	r3, fp, #52	; 0x34
   19198:	ldrd	r0, [r3]
   1919c:	strd	r0, [r2]
   191a0:	ldrd	r0, [r3, #8]
   191a4:	strd	r0, [r2, #8]
   191a8:	ldrd	r0, [r3, #16]
   191ac:	strd	r0, [r2, #16]
   191b0:	ldrd	r0, [r3, #24]
   191b4:	strd	r0, [r2, #24]
   191b8:	ldrd	r0, [r3, #32]
   191bc:	strd	r0, [r2, #32]
   191c0:	ldrd	r0, [r3, #40]	; 0x28
   191c4:	strd	r0, [r2, #40]	; 0x28
   191c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   191cc:	sub	sp, fp, #4
   191d0:	ldr	fp, [sp]
   191d4:	add	sp, sp, #4
   191d8:	pop	{pc}		; (ldr pc, [sp], #4)
   191dc:	str	fp, [sp, #-8]!
   191e0:	str	lr, [sp, #4]
   191e4:	add	fp, sp, #4
   191e8:	sub	sp, sp, #16
   191ec:	str	r0, [fp, #-16]
   191f0:	str	r1, [fp, #-20]	; 0xffffffec
   191f4:	ldr	r0, [fp, #-16]
   191f8:	bl	113a4 <gettext@plt>
   191fc:	str	r0, [fp, #-8]
   19200:	ldr	r2, [fp, #-8]
   19204:	ldr	r3, [fp, #-16]
   19208:	cmp	r2, r3
   1920c:	beq	19218 <__assert_fail@plt+0x7cac>
   19210:	ldr	r3, [fp, #-8]
   19214:	b	192c8 <__assert_fail@plt+0x7d5c>
   19218:	bl	1dfd0 <__assert_fail@plt+0xca64>
   1921c:	str	r0, [fp, #-12]
   19220:	movw	r1, #3128	; 0xc38
   19224:	movt	r1, #2
   19228:	ldr	r0, [fp, #-12]
   1922c:	bl	1dc20 <__assert_fail@plt+0xc6b4>
   19230:	mov	r3, r0
   19234:	cmp	r3, #0
   19238:	bne	19264 <__assert_fail@plt+0x7cf8>
   1923c:	ldr	r3, [fp, #-16]
   19240:	ldrb	r3, [r3]
   19244:	cmp	r3, #96	; 0x60
   19248:	bne	19258 <__assert_fail@plt+0x7cec>
   1924c:	movw	r3, #3136	; 0xc40
   19250:	movt	r3, #2
   19254:	b	192c8 <__assert_fail@plt+0x7d5c>
   19258:	movw	r3, #3140	; 0xc44
   1925c:	movt	r3, #2
   19260:	b	192c8 <__assert_fail@plt+0x7d5c>
   19264:	movw	r1, #3144	; 0xc48
   19268:	movt	r1, #2
   1926c:	ldr	r0, [fp, #-12]
   19270:	bl	1dc20 <__assert_fail@plt+0xc6b4>
   19274:	mov	r3, r0
   19278:	cmp	r3, #0
   1927c:	bne	192a8 <__assert_fail@plt+0x7d3c>
   19280:	ldr	r3, [fp, #-16]
   19284:	ldrb	r3, [r3]
   19288:	cmp	r3, #96	; 0x60
   1928c:	bne	1929c <__assert_fail@plt+0x7d30>
   19290:	movw	r3, #3152	; 0xc50
   19294:	movt	r3, #2
   19298:	b	192c8 <__assert_fail@plt+0x7d5c>
   1929c:	movw	r3, #3156	; 0xc54
   192a0:	movt	r3, #2
   192a4:	b	192c8 <__assert_fail@plt+0x7d5c>
   192a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   192ac:	cmp	r3, #9
   192b0:	bne	192c0 <__assert_fail@plt+0x7d54>
   192b4:	movw	r3, #3160	; 0xc58
   192b8:	movt	r3, #2
   192bc:	b	192c8 <__assert_fail@plt+0x7d5c>
   192c0:	movw	r3, #3164	; 0xc5c
   192c4:	movt	r3, #2
   192c8:	mov	r0, r3
   192cc:	sub	sp, fp, #4
   192d0:	ldr	fp, [sp]
   192d4:	add	sp, sp, #4
   192d8:	pop	{pc}		; (ldr pc, [sp], #4)
   192dc:	str	r4, [sp, #-12]!
   192e0:	str	fp, [sp, #4]
   192e4:	str	lr, [sp, #8]
   192e8:	add	fp, sp, #8
   192ec:	sub	sp, sp, #116	; 0x74
   192f0:	str	r0, [fp, #-88]	; 0xffffffa8
   192f4:	str	r1, [fp, #-92]	; 0xffffffa4
   192f8:	str	r2, [fp, #-96]	; 0xffffffa0
   192fc:	str	r3, [fp, #-100]	; 0xffffff9c
   19300:	mov	r3, #0
   19304:	str	r3, [fp, #-20]	; 0xffffffec
   19308:	mov	r3, #0
   1930c:	str	r3, [fp, #-24]	; 0xffffffe8
   19310:	mov	r3, #0
   19314:	str	r3, [fp, #-28]	; 0xffffffe4
   19318:	mov	r3, #0
   1931c:	str	r3, [fp, #-32]	; 0xffffffe0
   19320:	mov	r3, #0
   19324:	strb	r3, [fp, #-33]	; 0xffffffdf
   19328:	bl	112e4 <__ctype_get_mb_cur_max@plt>
   1932c:	mov	r3, r0
   19330:	cmp	r3, #1
   19334:	moveq	r3, #1
   19338:	movne	r3, #0
   1933c:	strb	r3, [fp, #-57]	; 0xffffffc7
   19340:	ldr	r3, [fp, #8]
   19344:	and	r3, r3, #2
   19348:	cmp	r3, #0
   1934c:	movne	r3, #1
   19350:	moveq	r3, #0
   19354:	strb	r3, [fp, #-34]	; 0xffffffde
   19358:	mov	r3, #0
   1935c:	strb	r3, [fp, #-35]	; 0xffffffdd
   19360:	mov	r3, #0
   19364:	strb	r3, [fp, #-36]	; 0xffffffdc
   19368:	mov	r3, #1
   1936c:	strb	r3, [fp, #-37]	; 0xffffffdb
   19370:	ldr	r3, [fp, #4]
   19374:	cmp	r3, #10
   19378:	ldrls	pc, [pc, r3, lsl #2]
   1937c:	b	19594 <__assert_fail@plt+0x8028>
   19380:	andeq	r9, r1, r8, lsl #11
   19384:	andeq	r9, r1, r0, lsl #10
   19388:	andeq	r9, r1, r4, lsr #10
   1938c:	strdeq	r9, [r1], -r8
   19390:	andeq	r9, r1, r8, lsl #10
   19394:			; <UNDEFINED> instruction: 0x000193bc
   19398:	andeq	r9, r1, ip, lsr #7
   1939c:	andeq	r9, r1, r0, lsr #8
   193a0:	andeq	r9, r1, r4, lsr r4
   193a4:	andeq	r9, r1, r4, lsr r4
   193a8:	andeq	r9, r1, r4, lsr r4
   193ac:	mov	r3, #5
   193b0:	str	r3, [fp, #4]
   193b4:	mov	r3, #1
   193b8:	strb	r3, [fp, #-34]	; 0xffffffde
   193bc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   193c0:	eor	r3, r3, #1
   193c4:	uxtb	r3, r3
   193c8:	cmp	r3, #0
   193cc:	beq	19400 <__assert_fail@plt+0x7e94>
   193d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   193d4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   193d8:	cmp	r2, r3
   193dc:	bcs	193f4 <__assert_fail@plt+0x7e88>
   193e0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   193e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   193e8:	add	r3, r2, r3
   193ec:	mov	r2, #34	; 0x22
   193f0:	strb	r2, [r3]
   193f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   193f8:	add	r3, r3, #1
   193fc:	str	r3, [fp, #-20]	; 0xffffffec
   19400:	mov	r3, #1
   19404:	strb	r3, [fp, #-33]	; 0xffffffdf
   19408:	movw	r3, #3160	; 0xc58
   1940c:	movt	r3, #2
   19410:	str	r3, [fp, #-28]	; 0xffffffe4
   19414:	mov	r3, #1
   19418:	str	r3, [fp, #-32]	; 0xffffffe0
   1941c:	b	19598 <__assert_fail@plt+0x802c>
   19420:	mov	r3, #1
   19424:	strb	r3, [fp, #-33]	; 0xffffffdf
   19428:	mov	r3, #0
   1942c:	strb	r3, [fp, #-34]	; 0xffffffde
   19430:	b	19598 <__assert_fail@plt+0x802c>
   19434:	ldr	r3, [fp, #4]
   19438:	cmp	r3, #10
   1943c:	beq	19468 <__assert_fail@plt+0x7efc>
   19440:	ldr	r1, [fp, #4]
   19444:	movw	r0, #3168	; 0xc60
   19448:	movt	r0, #2
   1944c:	bl	191dc <__assert_fail@plt+0x7c70>
   19450:	str	r0, [fp, #16]
   19454:	ldr	r1, [fp, #4]
   19458:	movw	r0, #3164	; 0xc5c
   1945c:	movt	r0, #2
   19460:	bl	191dc <__assert_fail@plt+0x7c70>
   19464:	str	r0, [fp, #20]
   19468:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1946c:	eor	r3, r3, #1
   19470:	uxtb	r3, r3
   19474:	cmp	r3, #0
   19478:	beq	194d8 <__assert_fail@plt+0x7f6c>
   1947c:	ldr	r3, [fp, #16]
   19480:	str	r3, [fp, #-28]	; 0xffffffe4
   19484:	b	194c8 <__assert_fail@plt+0x7f5c>
   19488:	ldr	r2, [fp, #-20]	; 0xffffffec
   1948c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19490:	cmp	r2, r3
   19494:	bcs	194b0 <__assert_fail@plt+0x7f44>
   19498:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1949c:	ldr	r3, [fp, #-20]	; 0xffffffec
   194a0:	add	r3, r2, r3
   194a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   194a8:	ldrb	r2, [r2]
   194ac:	strb	r2, [r3]
   194b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   194b4:	add	r3, r3, #1
   194b8:	str	r3, [fp, #-20]	; 0xffffffec
   194bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   194c0:	add	r3, r3, #1
   194c4:	str	r3, [fp, #-28]	; 0xffffffe4
   194c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   194cc:	ldrb	r3, [r3]
   194d0:	cmp	r3, #0
   194d4:	bne	19488 <__assert_fail@plt+0x7f1c>
   194d8:	mov	r3, #1
   194dc:	strb	r3, [fp, #-33]	; 0xffffffdf
   194e0:	ldr	r3, [fp, #20]
   194e4:	str	r3, [fp, #-28]	; 0xffffffe4
   194e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   194ec:	bl	113bc <strlen@plt>
   194f0:	str	r0, [fp, #-32]	; 0xffffffe0
   194f4:	b	19598 <__assert_fail@plt+0x802c>
   194f8:	mov	r3, #1
   194fc:	strb	r3, [fp, #-33]	; 0xffffffdf
   19500:	mov	r3, #1
   19504:	strb	r3, [fp, #-34]	; 0xffffffde
   19508:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1950c:	eor	r3, r3, #1
   19510:	uxtb	r3, r3
   19514:	cmp	r3, #0
   19518:	beq	19524 <__assert_fail@plt+0x7fb8>
   1951c:	mov	r3, #1
   19520:	strb	r3, [fp, #-33]	; 0xffffffdf
   19524:	mov	r3, #2
   19528:	str	r3, [fp, #4]
   1952c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19530:	eor	r3, r3, #1
   19534:	uxtb	r3, r3
   19538:	cmp	r3, #0
   1953c:	beq	19570 <__assert_fail@plt+0x8004>
   19540:	ldr	r2, [fp, #-20]	; 0xffffffec
   19544:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19548:	cmp	r2, r3
   1954c:	bcs	19564 <__assert_fail@plt+0x7ff8>
   19550:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19554:	ldr	r3, [fp, #-20]	; 0xffffffec
   19558:	add	r3, r2, r3
   1955c:	mov	r2, #39	; 0x27
   19560:	strb	r2, [r3]
   19564:	ldr	r3, [fp, #-20]	; 0xffffffec
   19568:	add	r3, r3, #1
   1956c:	str	r3, [fp, #-20]	; 0xffffffec
   19570:	movw	r3, #3164	; 0xc5c
   19574:	movt	r3, #2
   19578:	str	r3, [fp, #-28]	; 0xffffffe4
   1957c:	mov	r3, #1
   19580:	str	r3, [fp, #-32]	; 0xffffffe0
   19584:	b	19598 <__assert_fail@plt+0x802c>
   19588:	mov	r3, #0
   1958c:	strb	r3, [fp, #-34]	; 0xffffffde
   19590:	b	19598 <__assert_fail@plt+0x802c>
   19594:	bl	1153c <abort@plt>
   19598:	mov	r3, #0
   1959c:	str	r3, [fp, #-16]
   195a0:	b	1a73c <__assert_fail@plt+0x91d0>
   195a4:	mov	r3, #0
   195a8:	strb	r3, [fp, #-40]	; 0xffffffd8
   195ac:	mov	r3, #0
   195b0:	strb	r3, [fp, #-41]	; 0xffffffd7
   195b4:	mov	r3, #0
   195b8:	strb	r3, [fp, #-42]	; 0xffffffd6
   195bc:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   195c0:	cmp	r3, #0
   195c4:	beq	19660 <__assert_fail@plt+0x80f4>
   195c8:	ldr	r3, [fp, #4]
   195cc:	cmp	r3, #2
   195d0:	beq	19660 <__assert_fail@plt+0x80f4>
   195d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   195d8:	cmp	r3, #0
   195dc:	beq	19660 <__assert_fail@plt+0x80f4>
   195e0:	ldr	r2, [fp, #-16]
   195e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   195e8:	add	r4, r2, r3
   195ec:	ldr	r3, [fp, #-100]	; 0xffffff9c
   195f0:	cmn	r3, #1
   195f4:	bne	19618 <__assert_fail@plt+0x80ac>
   195f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   195fc:	cmp	r3, #1
   19600:	bls	19618 <__assert_fail@plt+0x80ac>
   19604:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19608:	bl	113bc <strlen@plt>
   1960c:	str	r0, [fp, #-100]	; 0xffffff9c
   19610:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19614:	b	1961c <__assert_fail@plt+0x80b0>
   19618:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1961c:	cmp	r3, r4
   19620:	bcc	19660 <__assert_fail@plt+0x80f4>
   19624:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19628:	ldr	r3, [fp, #-16]
   1962c:	add	r3, r2, r3
   19630:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19634:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19638:	mov	r0, r3
   1963c:	bl	11248 <memcmp@plt>
   19640:	mov	r3, r0
   19644:	cmp	r3, #0
   19648:	bne	19660 <__assert_fail@plt+0x80f4>
   1964c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19650:	cmp	r3, #0
   19654:	bne	1a8f8 <__assert_fail@plt+0x938c>
   19658:	mov	r3, #1
   1965c:	strb	r3, [fp, #-40]	; 0xffffffd8
   19660:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19664:	ldr	r3, [fp, #-16]
   19668:	add	r3, r2, r3
   1966c:	ldrb	r3, [r3]
   19670:	strb	r3, [fp, #-38]	; 0xffffffda
   19674:	ldrb	r3, [fp, #-38]	; 0xffffffda
   19678:	cmp	r3, #126	; 0x7e
   1967c:	ldrls	pc, [pc, r3, lsl #2]
   19680:	b	19eb8 <__assert_fail@plt+0x894c>
   19684:	andeq	r9, r1, r0, lsl #17
   19688:			; <UNDEFINED> instruction: 0x00019eb8
   1968c:			; <UNDEFINED> instruction: 0x00019eb8
   19690:			; <UNDEFINED> instruction: 0x00019eb8
   19694:			; <UNDEFINED> instruction: 0x00019eb8
   19698:			; <UNDEFINED> instruction: 0x00019eb8
   1969c:			; <UNDEFINED> instruction: 0x00019eb8
   196a0:	andeq	r9, r1, r4, ror ip
   196a4:	andeq	r9, r1, r0, lsl #25
   196a8:			; <UNDEFINED> instruction: 0x00019cb0
   196ac:	muleq	r1, r8, ip
   196b0:			; <UNDEFINED> instruction: 0x00019cbc
   196b4:	andeq	r9, r1, ip, lsl #25
   196b8:	andeq	r9, r1, r4, lsr #25
   196bc:			; <UNDEFINED> instruction: 0x00019eb8
   196c0:			; <UNDEFINED> instruction: 0x00019eb8
   196c4:			; <UNDEFINED> instruction: 0x00019eb8
   196c8:			; <UNDEFINED> instruction: 0x00019eb8
   196cc:			; <UNDEFINED> instruction: 0x00019eb8
   196d0:			; <UNDEFINED> instruction: 0x00019eb8
   196d4:			; <UNDEFINED> instruction: 0x00019eb8
   196d8:			; <UNDEFINED> instruction: 0x00019eb8
   196dc:			; <UNDEFINED> instruction: 0x00019eb8
   196e0:			; <UNDEFINED> instruction: 0x00019eb8
   196e4:			; <UNDEFINED> instruction: 0x00019eb8
   196e8:			; <UNDEFINED> instruction: 0x00019eb8
   196ec:			; <UNDEFINED> instruction: 0x00019eb8
   196f0:			; <UNDEFINED> instruction: 0x00019eb8
   196f4:			; <UNDEFINED> instruction: 0x00019eb8
   196f8:			; <UNDEFINED> instruction: 0x00019eb8
   196fc:			; <UNDEFINED> instruction: 0x00019eb8
   19700:			; <UNDEFINED> instruction: 0x00019eb8
   19704:	muleq	r1, ip, sp
   19708:	andeq	r9, r1, r4, lsr #27
   1970c:	andeq	r9, r1, r4, lsr #27
   19710:	muleq	r1, r0, sp
   19714:	andeq	r9, r1, r4, lsr #27
   19718:	andeq	r9, r1, ip, lsr #29
   1971c:	andeq	r9, r1, r4, lsr #27
   19720:	andeq	r9, r1, r0, asr #27
   19724:	andeq	r9, r1, r4, lsr #27
   19728:	andeq	r9, r1, r4, lsr #27
   1972c:	andeq	r9, r1, r4, lsr #27
   19730:	andeq	r9, r1, ip, lsr #29
   19734:	andeq	r9, r1, ip, lsr #29
   19738:	andeq	r9, r1, ip, lsr #29
   1973c:	andeq	r9, r1, ip, lsr #29
   19740:	andeq	r9, r1, ip, lsr #29
   19744:	andeq	r9, r1, ip, lsr #29
   19748:	andeq	r9, r1, ip, lsr #29
   1974c:	andeq	r9, r1, ip, lsr #29
   19750:	andeq	r9, r1, ip, lsr #29
   19754:	andeq	r9, r1, ip, lsr #29
   19758:	andeq	r9, r1, ip, lsr #29
   1975c:	andeq	r9, r1, ip, lsr #29
   19760:	andeq	r9, r1, ip, lsr #29
   19764:	andeq	r9, r1, ip, lsr #29
   19768:	andeq	r9, r1, ip, lsr #29
   1976c:	andeq	r9, r1, ip, lsr #29
   19770:	andeq	r9, r1, r4, lsr #27
   19774:	andeq	r9, r1, r4, lsr #27
   19778:	andeq	r9, r1, r4, lsr #27
   1977c:	andeq	r9, r1, r4, lsr #27
   19780:	andeq	r9, r1, r0, ror #20
   19784:			; <UNDEFINED> instruction: 0x00019eb8
   19788:	andeq	r9, r1, ip, lsr #29
   1978c:	andeq	r9, r1, ip, lsr #29
   19790:	andeq	r9, r1, ip, lsr #29
   19794:	andeq	r9, r1, ip, lsr #29
   19798:	andeq	r9, r1, ip, lsr #29
   1979c:	andeq	r9, r1, ip, lsr #29
   197a0:	andeq	r9, r1, ip, lsr #29
   197a4:	andeq	r9, r1, ip, lsr #29
   197a8:	andeq	r9, r1, ip, lsr #29
   197ac:	andeq	r9, r1, ip, lsr #29
   197b0:	andeq	r9, r1, ip, lsr #29
   197b4:	andeq	r9, r1, ip, lsr #29
   197b8:	andeq	r9, r1, ip, lsr #29
   197bc:	andeq	r9, r1, ip, lsr #29
   197c0:	andeq	r9, r1, ip, lsr #29
   197c4:	andeq	r9, r1, ip, lsr #29
   197c8:	andeq	r9, r1, ip, lsr #29
   197cc:	andeq	r9, r1, ip, lsr #29
   197d0:	andeq	r9, r1, ip, lsr #29
   197d4:	andeq	r9, r1, ip, lsr #29
   197d8:	andeq	r9, r1, ip, lsr #29
   197dc:	andeq	r9, r1, ip, lsr #29
   197e0:	andeq	r9, r1, ip, lsr #29
   197e4:	andeq	r9, r1, ip, lsr #29
   197e8:	andeq	r9, r1, ip, lsr #29
   197ec:	andeq	r9, r1, ip, lsr #29
   197f0:	andeq	r9, r1, r4, lsr #27
   197f4:	andeq	r9, r1, r8, asr #25
   197f8:	andeq	r9, r1, ip, lsr #29
   197fc:	andeq	r9, r1, r4, lsr #27
   19800:	andeq	r9, r1, ip, lsr #29
   19804:	andeq	r9, r1, r4, lsr #27
   19808:	andeq	r9, r1, ip, lsr #29
   1980c:	andeq	r9, r1, ip, lsr #29
   19810:	andeq	r9, r1, ip, lsr #29
   19814:	andeq	r9, r1, ip, lsr #29
   19818:	andeq	r9, r1, ip, lsr #29
   1981c:	andeq	r9, r1, ip, lsr #29
   19820:	andeq	r9, r1, ip, lsr #29
   19824:	andeq	r9, r1, ip, lsr #29
   19828:	andeq	r9, r1, ip, lsr #29
   1982c:	andeq	r9, r1, ip, lsr #29
   19830:	andeq	r9, r1, ip, lsr #29
   19834:	andeq	r9, r1, ip, lsr #29
   19838:	andeq	r9, r1, ip, lsr #29
   1983c:	andeq	r9, r1, ip, lsr #29
   19840:	andeq	r9, r1, ip, lsr #29
   19844:	andeq	r9, r1, ip, lsr #29
   19848:	andeq	r9, r1, ip, lsr #29
   1984c:	andeq	r9, r1, ip, lsr #29
   19850:	andeq	r9, r1, ip, lsr #29
   19854:	andeq	r9, r1, ip, lsr #29
   19858:	andeq	r9, r1, ip, lsr #29
   1985c:	andeq	r9, r1, ip, lsr #29
   19860:	andeq	r9, r1, ip, lsr #29
   19864:	andeq	r9, r1, ip, lsr #29
   19868:	andeq	r9, r1, ip, lsr #29
   1986c:	andeq	r9, r1, ip, lsr #29
   19870:	andeq	r9, r1, r8, asr #26
   19874:	andeq	r9, r1, r4, lsr #27
   19878:	andeq	r9, r1, r8, asr #26
   1987c:	muleq	r1, r0, sp
   19880:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   19884:	cmp	r3, #0
   19888:	beq	19a4c <__assert_fail@plt+0x84e0>
   1988c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19890:	cmp	r3, #0
   19894:	bne	1a900 <__assert_fail@plt+0x9394>
   19898:	mov	r3, #1
   1989c:	strb	r3, [fp, #-41]	; 0xffffffd7
   198a0:	ldr	r3, [fp, #4]
   198a4:	cmp	r3, #2
   198a8:	bne	19958 <__assert_fail@plt+0x83ec>
   198ac:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   198b0:	eor	r3, r3, #1
   198b4:	uxtb	r3, r3
   198b8:	cmp	r3, #0
   198bc:	beq	19958 <__assert_fail@plt+0x83ec>
   198c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   198c4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   198c8:	cmp	r2, r3
   198cc:	bcs	198e4 <__assert_fail@plt+0x8378>
   198d0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   198d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   198d8:	add	r3, r2, r3
   198dc:	mov	r2, #39	; 0x27
   198e0:	strb	r2, [r3]
   198e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   198e8:	add	r3, r3, #1
   198ec:	str	r3, [fp, #-20]	; 0xffffffec
   198f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   198f4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   198f8:	cmp	r2, r3
   198fc:	bcs	19914 <__assert_fail@plt+0x83a8>
   19900:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19904:	ldr	r3, [fp, #-20]	; 0xffffffec
   19908:	add	r3, r2, r3
   1990c:	mov	r2, #36	; 0x24
   19910:	strb	r2, [r3]
   19914:	ldr	r3, [fp, #-20]	; 0xffffffec
   19918:	add	r3, r3, #1
   1991c:	str	r3, [fp, #-20]	; 0xffffffec
   19920:	ldr	r2, [fp, #-20]	; 0xffffffec
   19924:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19928:	cmp	r2, r3
   1992c:	bcs	19944 <__assert_fail@plt+0x83d8>
   19930:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19934:	ldr	r3, [fp, #-20]	; 0xffffffec
   19938:	add	r3, r2, r3
   1993c:	mov	r2, #39	; 0x27
   19940:	strb	r2, [r3]
   19944:	ldr	r3, [fp, #-20]	; 0xffffffec
   19948:	add	r3, r3, #1
   1994c:	str	r3, [fp, #-20]	; 0xffffffec
   19950:	mov	r3, #1
   19954:	strb	r3, [fp, #-35]	; 0xffffffdd
   19958:	ldr	r2, [fp, #-20]	; 0xffffffec
   1995c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19960:	cmp	r2, r3
   19964:	bcs	1997c <__assert_fail@plt+0x8410>
   19968:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1996c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19970:	add	r3, r2, r3
   19974:	mov	r2, #92	; 0x5c
   19978:	strb	r2, [r3]
   1997c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19980:	add	r3, r3, #1
   19984:	str	r3, [fp, #-20]	; 0xffffffec
   19988:	ldr	r3, [fp, #4]
   1998c:	cmp	r3, #2
   19990:	beq	19a40 <__assert_fail@plt+0x84d4>
   19994:	ldr	r3, [fp, #-16]
   19998:	add	r3, r3, #1
   1999c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   199a0:	cmp	r2, r3
   199a4:	bls	19a40 <__assert_fail@plt+0x84d4>
   199a8:	ldr	r3, [fp, #-16]
   199ac:	add	r3, r3, #1
   199b0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   199b4:	add	r3, r2, r3
   199b8:	ldrb	r3, [r3]
   199bc:	cmp	r3, #47	; 0x2f
   199c0:	bls	19a40 <__assert_fail@plt+0x84d4>
   199c4:	ldr	r3, [fp, #-16]
   199c8:	add	r3, r3, #1
   199cc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   199d0:	add	r3, r2, r3
   199d4:	ldrb	r3, [r3]
   199d8:	cmp	r3, #57	; 0x39
   199dc:	bhi	19a40 <__assert_fail@plt+0x84d4>
   199e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   199e4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   199e8:	cmp	r2, r3
   199ec:	bcs	19a04 <__assert_fail@plt+0x8498>
   199f0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   199f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   199f8:	add	r3, r2, r3
   199fc:	mov	r2, #48	; 0x30
   19a00:	strb	r2, [r3]
   19a04:	ldr	r3, [fp, #-20]	; 0xffffffec
   19a08:	add	r3, r3, #1
   19a0c:	str	r3, [fp, #-20]	; 0xffffffec
   19a10:	ldr	r2, [fp, #-20]	; 0xffffffec
   19a14:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19a18:	cmp	r2, r3
   19a1c:	bcs	19a34 <__assert_fail@plt+0x84c8>
   19a20:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19a24:	ldr	r3, [fp, #-20]	; 0xffffffec
   19a28:	add	r3, r2, r3
   19a2c:	mov	r2, #48	; 0x30
   19a30:	strb	r2, [r3]
   19a34:	ldr	r3, [fp, #-20]	; 0xffffffec
   19a38:	add	r3, r3, #1
   19a3c:	str	r3, [fp, #-20]	; 0xffffffec
   19a40:	mov	r3, #48	; 0x30
   19a44:	strb	r3, [fp, #-38]	; 0xffffffda
   19a48:	b	1a488 <__assert_fail@plt+0x8f1c>
   19a4c:	ldr	r3, [fp, #8]
   19a50:	and	r3, r3, #1
   19a54:	cmp	r3, #0
   19a58:	beq	1a488 <__assert_fail@plt+0x8f1c>
   19a5c:	b	1a730 <__assert_fail@plt+0x91c4>
   19a60:	ldr	r3, [fp, #4]
   19a64:	cmp	r3, #2
   19a68:	beq	19a7c <__assert_fail@plt+0x8510>
   19a6c:	ldr	r3, [fp, #4]
   19a70:	cmp	r3, #5
   19a74:	beq	19a8c <__assert_fail@plt+0x8520>
   19a78:	b	19c70 <__assert_fail@plt+0x8704>
   19a7c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19a80:	cmp	r3, #0
   19a84:	beq	19c64 <__assert_fail@plt+0x86f8>
   19a88:	b	1a934 <__assert_fail@plt+0x93c8>
   19a8c:	ldr	r3, [fp, #8]
   19a90:	and	r3, r3, #4
   19a94:	cmp	r3, #0
   19a98:	beq	19c6c <__assert_fail@plt+0x8700>
   19a9c:	ldr	r3, [fp, #-16]
   19aa0:	add	r3, r3, #2
   19aa4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19aa8:	cmp	r2, r3
   19aac:	bls	19c6c <__assert_fail@plt+0x8700>
   19ab0:	ldr	r3, [fp, #-16]
   19ab4:	add	r3, r3, #1
   19ab8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19abc:	add	r3, r2, r3
   19ac0:	ldrb	r3, [r3]
   19ac4:	cmp	r3, #63	; 0x3f
   19ac8:	bne	19c6c <__assert_fail@plt+0x8700>
   19acc:	ldr	r3, [fp, #-16]
   19ad0:	add	r3, r3, #2
   19ad4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19ad8:	add	r3, r2, r3
   19adc:	ldrb	r3, [r3]
   19ae0:	sub	r3, r3, #33	; 0x21
   19ae4:	cmp	r3, #29
   19ae8:	ldrls	pc, [pc, r3, lsl #2]
   19aec:	b	19c5c <__assert_fail@plt+0x86f0>
   19af0:	andeq	r9, r1, r8, ror #22
   19af4:	andeq	r9, r1, ip, asr ip
   19af8:	andeq	r9, r1, ip, asr ip
   19afc:	andeq	r9, r1, ip, asr ip
   19b00:	andeq	r9, r1, ip, asr ip
   19b04:	andeq	r9, r1, ip, asr ip
   19b08:	andeq	r9, r1, r8, ror #22
   19b0c:	andeq	r9, r1, r8, ror #22
   19b10:	andeq	r9, r1, r8, ror #22
   19b14:	andeq	r9, r1, ip, asr ip
   19b18:	andeq	r9, r1, ip, asr ip
   19b1c:	andeq	r9, r1, ip, asr ip
   19b20:	andeq	r9, r1, r8, ror #22
   19b24:	andeq	r9, r1, ip, asr ip
   19b28:	andeq	r9, r1, r8, ror #22
   19b2c:	andeq	r9, r1, ip, asr ip
   19b30:	andeq	r9, r1, ip, asr ip
   19b34:	andeq	r9, r1, ip, asr ip
   19b38:	andeq	r9, r1, ip, asr ip
   19b3c:	andeq	r9, r1, ip, asr ip
   19b40:	andeq	r9, r1, ip, asr ip
   19b44:	andeq	r9, r1, ip, asr ip
   19b48:	andeq	r9, r1, ip, asr ip
   19b4c:	andeq	r9, r1, ip, asr ip
   19b50:	andeq	r9, r1, ip, asr ip
   19b54:	andeq	r9, r1, ip, asr ip
   19b58:	andeq	r9, r1, ip, asr ip
   19b5c:	andeq	r9, r1, r8, ror #22
   19b60:	andeq	r9, r1, r8, ror #22
   19b64:	andeq	r9, r1, r8, ror #22
   19b68:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19b6c:	cmp	r3, #0
   19b70:	bne	1a908 <__assert_fail@plt+0x939c>
   19b74:	ldr	r3, [fp, #-16]
   19b78:	add	r3, r3, #2
   19b7c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19b80:	add	r3, r2, r3
   19b84:	ldrb	r3, [r3]
   19b88:	strb	r3, [fp, #-38]	; 0xffffffda
   19b8c:	ldr	r3, [fp, #-16]
   19b90:	add	r3, r3, #2
   19b94:	str	r3, [fp, #-16]
   19b98:	ldr	r2, [fp, #-20]	; 0xffffffec
   19b9c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19ba0:	cmp	r2, r3
   19ba4:	bcs	19bbc <__assert_fail@plt+0x8650>
   19ba8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19bac:	ldr	r3, [fp, #-20]	; 0xffffffec
   19bb0:	add	r3, r2, r3
   19bb4:	mov	r2, #63	; 0x3f
   19bb8:	strb	r2, [r3]
   19bbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   19bc0:	add	r3, r3, #1
   19bc4:	str	r3, [fp, #-20]	; 0xffffffec
   19bc8:	ldr	r2, [fp, #-20]	; 0xffffffec
   19bcc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19bd0:	cmp	r2, r3
   19bd4:	bcs	19bec <__assert_fail@plt+0x8680>
   19bd8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19bdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   19be0:	add	r3, r2, r3
   19be4:	mov	r2, #34	; 0x22
   19be8:	strb	r2, [r3]
   19bec:	ldr	r3, [fp, #-20]	; 0xffffffec
   19bf0:	add	r3, r3, #1
   19bf4:	str	r3, [fp, #-20]	; 0xffffffec
   19bf8:	ldr	r2, [fp, #-20]	; 0xffffffec
   19bfc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19c00:	cmp	r2, r3
   19c04:	bcs	19c1c <__assert_fail@plt+0x86b0>
   19c08:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19c0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19c10:	add	r3, r2, r3
   19c14:	mov	r2, #34	; 0x22
   19c18:	strb	r2, [r3]
   19c1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19c20:	add	r3, r3, #1
   19c24:	str	r3, [fp, #-20]	; 0xffffffec
   19c28:	ldr	r2, [fp, #-20]	; 0xffffffec
   19c2c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19c30:	cmp	r2, r3
   19c34:	bcs	19c4c <__assert_fail@plt+0x86e0>
   19c38:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19c3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19c40:	add	r3, r2, r3
   19c44:	mov	r2, #63	; 0x3f
   19c48:	strb	r2, [r3]
   19c4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19c50:	add	r3, r3, #1
   19c54:	str	r3, [fp, #-20]	; 0xffffffec
   19c58:	b	19c60 <__assert_fail@plt+0x86f4>
   19c5c:	nop	{0}
   19c60:	b	19c6c <__assert_fail@plt+0x8700>
   19c64:	nop	{0}
   19c68:	b	1a4bc <__assert_fail@plt+0x8f50>
   19c6c:	nop	{0}
   19c70:	b	1a4bc <__assert_fail@plt+0x8f50>
   19c74:	mov	r3, #97	; 0x61
   19c78:	strb	r3, [fp, #-39]	; 0xffffffd9
   19c7c:	b	19d30 <__assert_fail@plt+0x87c4>
   19c80:	mov	r3, #98	; 0x62
   19c84:	strb	r3, [fp, #-39]	; 0xffffffd9
   19c88:	b	19d30 <__assert_fail@plt+0x87c4>
   19c8c:	mov	r3, #102	; 0x66
   19c90:	strb	r3, [fp, #-39]	; 0xffffffd9
   19c94:	b	19d30 <__assert_fail@plt+0x87c4>
   19c98:	mov	r3, #110	; 0x6e
   19c9c:	strb	r3, [fp, #-39]	; 0xffffffd9
   19ca0:	b	19d14 <__assert_fail@plt+0x87a8>
   19ca4:	mov	r3, #114	; 0x72
   19ca8:	strb	r3, [fp, #-39]	; 0xffffffd9
   19cac:	b	19d14 <__assert_fail@plt+0x87a8>
   19cb0:	mov	r3, #116	; 0x74
   19cb4:	strb	r3, [fp, #-39]	; 0xffffffd9
   19cb8:	b	19d14 <__assert_fail@plt+0x87a8>
   19cbc:	mov	r3, #118	; 0x76
   19cc0:	strb	r3, [fp, #-39]	; 0xffffffd9
   19cc4:	b	19d30 <__assert_fail@plt+0x87c4>
   19cc8:	ldrb	r3, [fp, #-38]	; 0xffffffda
   19ccc:	strb	r3, [fp, #-39]	; 0xffffffd9
   19cd0:	ldr	r3, [fp, #4]
   19cd4:	cmp	r3, #2
   19cd8:	bne	19cec <__assert_fail@plt+0x8780>
   19cdc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19ce0:	cmp	r3, #0
   19ce4:	beq	1a648 <__assert_fail@plt+0x90dc>
   19ce8:	b	1a934 <__assert_fail@plt+0x93c8>
   19cec:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   19cf0:	cmp	r3, #0
   19cf4:	beq	19d10 <__assert_fail@plt+0x87a4>
   19cf8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19cfc:	cmp	r3, #0
   19d00:	beq	19d10 <__assert_fail@plt+0x87a4>
   19d04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19d08:	cmp	r3, #0
   19d0c:	bne	1a650 <__assert_fail@plt+0x90e4>
   19d10:	nop	{0}
   19d14:	ldr	r3, [fp, #4]
   19d18:	cmp	r3, #2
   19d1c:	bne	19d2c <__assert_fail@plt+0x87c0>
   19d20:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19d24:	cmp	r3, #0
   19d28:	bne	1a910 <__assert_fail@plt+0x93a4>
   19d2c:	nop	{0}
   19d30:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   19d34:	cmp	r3, #0
   19d38:	beq	1a490 <__assert_fail@plt+0x8f24>
   19d3c:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   19d40:	strb	r3, [fp, #-38]	; 0xffffffda
   19d44:	b	1a548 <__assert_fail@plt+0x8fdc>
   19d48:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19d4c:	cmn	r3, #1
   19d50:	bne	19d74 <__assert_fail@plt+0x8808>
   19d54:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19d58:	add	r3, r3, #1
   19d5c:	ldrb	r3, [r3]
   19d60:	cmp	r3, #0
   19d64:	movne	r3, #1
   19d68:	moveq	r3, #0
   19d6c:	uxtb	r3, r3
   19d70:	b	19d88 <__assert_fail@plt+0x881c>
   19d74:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19d78:	cmp	r3, #1
   19d7c:	movne	r3, #1
   19d80:	moveq	r3, #0
   19d84:	uxtb	r3, r3
   19d88:	cmp	r3, #0
   19d8c:	bne	1a498 <__assert_fail@plt+0x8f2c>
   19d90:	ldr	r3, [fp, #-16]
   19d94:	cmp	r3, #0
   19d98:	bne	1a4a0 <__assert_fail@plt+0x8f34>
   19d9c:	mov	r3, #1
   19da0:	strb	r3, [fp, #-42]	; 0xffffffd6
   19da4:	ldr	r3, [fp, #4]
   19da8:	cmp	r3, #2
   19dac:	bne	1a4a8 <__assert_fail@plt+0x8f3c>
   19db0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19db4:	cmp	r3, #0
   19db8:	beq	1a4a8 <__assert_fail@plt+0x8f3c>
   19dbc:	b	1a934 <__assert_fail@plt+0x93c8>
   19dc0:	mov	r3, #1
   19dc4:	strb	r3, [fp, #-36]	; 0xffffffdc
   19dc8:	mov	r3, #1
   19dcc:	strb	r3, [fp, #-42]	; 0xffffffd6
   19dd0:	ldr	r3, [fp, #4]
   19dd4:	cmp	r3, #2
   19dd8:	bne	1a4b0 <__assert_fail@plt+0x8f44>
   19ddc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19de0:	cmp	r3, #0
   19de4:	bne	1a918 <__assert_fail@plt+0x93ac>
   19de8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19dec:	cmp	r3, #0
   19df0:	beq	19e10 <__assert_fail@plt+0x88a4>
   19df4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19df8:	cmp	r3, #0
   19dfc:	bne	19e10 <__assert_fail@plt+0x88a4>
   19e00:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19e04:	str	r3, [fp, #-24]	; 0xffffffe8
   19e08:	mov	r3, #0
   19e0c:	str	r3, [fp, #-92]	; 0xffffffa4
   19e10:	ldr	r2, [fp, #-20]	; 0xffffffec
   19e14:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19e18:	cmp	r2, r3
   19e1c:	bcs	19e34 <__assert_fail@plt+0x88c8>
   19e20:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19e24:	ldr	r3, [fp, #-20]	; 0xffffffec
   19e28:	add	r3, r2, r3
   19e2c:	mov	r2, #39	; 0x27
   19e30:	strb	r2, [r3]
   19e34:	ldr	r3, [fp, #-20]	; 0xffffffec
   19e38:	add	r3, r3, #1
   19e3c:	str	r3, [fp, #-20]	; 0xffffffec
   19e40:	ldr	r2, [fp, #-20]	; 0xffffffec
   19e44:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19e48:	cmp	r2, r3
   19e4c:	bcs	19e64 <__assert_fail@plt+0x88f8>
   19e50:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19e54:	ldr	r3, [fp, #-20]	; 0xffffffec
   19e58:	add	r3, r2, r3
   19e5c:	mov	r2, #92	; 0x5c
   19e60:	strb	r2, [r3]
   19e64:	ldr	r3, [fp, #-20]	; 0xffffffec
   19e68:	add	r3, r3, #1
   19e6c:	str	r3, [fp, #-20]	; 0xffffffec
   19e70:	ldr	r2, [fp, #-20]	; 0xffffffec
   19e74:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19e78:	cmp	r2, r3
   19e7c:	bcs	19e94 <__assert_fail@plt+0x8928>
   19e80:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19e84:	ldr	r3, [fp, #-20]	; 0xffffffec
   19e88:	add	r3, r2, r3
   19e8c:	mov	r2, #39	; 0x27
   19e90:	strb	r2, [r3]
   19e94:	ldr	r3, [fp, #-20]	; 0xffffffec
   19e98:	add	r3, r3, #1
   19e9c:	str	r3, [fp, #-20]	; 0xffffffec
   19ea0:	mov	r3, #0
   19ea4:	strb	r3, [fp, #-35]	; 0xffffffdd
   19ea8:	b	1a4b0 <__assert_fail@plt+0x8f44>
   19eac:	mov	r3, #1
   19eb0:	strb	r3, [fp, #-42]	; 0xffffffd6
   19eb4:	b	1a4bc <__assert_fail@plt+0x8f50>
   19eb8:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   19ebc:	cmp	r3, #0
   19ec0:	beq	19f00 <__assert_fail@plt+0x8994>
   19ec4:	mov	r3, #1
   19ec8:	str	r3, [fp, #-48]	; 0xffffffd0
   19ecc:	bl	11380 <__ctype_b_loc@plt>
   19ed0:	mov	r3, r0
   19ed4:	ldr	r2, [r3]
   19ed8:	ldrb	r3, [fp, #-38]	; 0xffffffda
   19edc:	lsl	r3, r3, #1
   19ee0:	add	r3, r2, r3
   19ee4:	ldrh	r3, [r3]
   19ee8:	and	r3, r3, #16384	; 0x4000
   19eec:	cmp	r3, #0
   19ef0:	movne	r3, #1
   19ef4:	moveq	r3, #0
   19ef8:	strb	r3, [fp, #-49]	; 0xffffffcf
   19efc:	b	1a14c <__assert_fail@plt+0x8be0>
   19f00:	sub	r3, fp, #76	; 0x4c
   19f04:	mov	r2, #8
   19f08:	mov	r1, #0
   19f0c:	mov	r0, r3
   19f10:	bl	11410 <memset@plt>
   19f14:	mov	r3, #0
   19f18:	str	r3, [fp, #-48]	; 0xffffffd0
   19f1c:	mov	r3, #1
   19f20:	strb	r3, [fp, #-49]	; 0xffffffcf
   19f24:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19f28:	cmn	r3, #1
   19f2c:	bne	19f3c <__assert_fail@plt+0x89d0>
   19f30:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19f34:	bl	113bc <strlen@plt>
   19f38:	str	r0, [fp, #-100]	; 0xffffff9c
   19f3c:	ldr	r2, [fp, #-16]
   19f40:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19f44:	add	r3, r2, r3
   19f48:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19f4c:	add	r1, r2, r3
   19f50:	ldr	r2, [fp, #-16]
   19f54:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19f58:	add	r3, r2, r3
   19f5c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19f60:	sub	r2, r2, r3
   19f64:	sub	r3, fp, #76	; 0x4c
   19f68:	sub	r0, fp, #80	; 0x50
   19f6c:	bl	1da0c <__assert_fail@plt+0xc4a0>
   19f70:	str	r0, [fp, #-64]	; 0xffffffc0
   19f74:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19f78:	cmp	r3, #0
   19f7c:	beq	1a140 <__assert_fail@plt+0x8bd4>
   19f80:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19f84:	cmn	r3, #1
   19f88:	bne	19f98 <__assert_fail@plt+0x8a2c>
   19f8c:	mov	r3, #0
   19f90:	strb	r3, [fp, #-49]	; 0xffffffcf
   19f94:	b	1a14c <__assert_fail@plt+0x8be0>
   19f98:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19f9c:	cmn	r3, #2
   19fa0:	bne	19ff8 <__assert_fail@plt+0x8a8c>
   19fa4:	mov	r3, #0
   19fa8:	strb	r3, [fp, #-49]	; 0xffffffcf
   19fac:	b	19fbc <__assert_fail@plt+0x8a50>
   19fb0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19fb4:	add	r3, r3, #1
   19fb8:	str	r3, [fp, #-48]	; 0xffffffd0
   19fbc:	ldr	r2, [fp, #-16]
   19fc0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19fc4:	add	r3, r2, r3
   19fc8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19fcc:	cmp	r2, r3
   19fd0:	bls	1a148 <__assert_fail@plt+0x8bdc>
   19fd4:	ldr	r2, [fp, #-16]
   19fd8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19fdc:	add	r3, r2, r3
   19fe0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19fe4:	add	r3, r2, r3
   19fe8:	ldrb	r3, [r3]
   19fec:	cmp	r3, #0
   19ff0:	bne	19fb0 <__assert_fail@plt+0x8a44>
   19ff4:	b	1a148 <__assert_fail@plt+0x8bdc>
   19ff8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   19ffc:	cmp	r3, #0
   1a000:	beq	1a0f4 <__assert_fail@plt+0x8b88>
   1a004:	ldr	r3, [fp, #4]
   1a008:	cmp	r3, #2
   1a00c:	bne	1a0f4 <__assert_fail@plt+0x8b88>
   1a010:	mov	r3, #1
   1a014:	str	r3, [fp, #-56]	; 0xffffffc8
   1a018:	b	1a0e4 <__assert_fail@plt+0x8b78>
   1a01c:	ldr	r2, [fp, #-16]
   1a020:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a024:	add	r2, r2, r3
   1a028:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a02c:	add	r3, r2, r3
   1a030:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a034:	add	r3, r2, r3
   1a038:	ldrb	r3, [r3]
   1a03c:	sub	r3, r3, #91	; 0x5b
   1a040:	cmp	r3, #33	; 0x21
   1a044:	ldrls	pc, [pc, r3, lsl #2]
   1a048:	b	1a0d4 <__assert_fail@plt+0x8b68>
   1a04c:	andeq	sl, r1, r4, lsr r9
   1a050:	andeq	sl, r1, r4, lsr r9
   1a054:	ldrdeq	sl, [r1], -r4
   1a058:	andeq	sl, r1, r4, lsr r9
   1a05c:	ldrdeq	sl, [r1], -r4
   1a060:	andeq	sl, r1, r4, lsr r9
   1a064:	ldrdeq	sl, [r1], -r4
   1a068:	ldrdeq	sl, [r1], -r4
   1a06c:	ldrdeq	sl, [r1], -r4
   1a070:	ldrdeq	sl, [r1], -r4
   1a074:	ldrdeq	sl, [r1], -r4
   1a078:	ldrdeq	sl, [r1], -r4
   1a07c:	ldrdeq	sl, [r1], -r4
   1a080:	ldrdeq	sl, [r1], -r4
   1a084:	ldrdeq	sl, [r1], -r4
   1a088:	ldrdeq	sl, [r1], -r4
   1a08c:	ldrdeq	sl, [r1], -r4
   1a090:	ldrdeq	sl, [r1], -r4
   1a094:	ldrdeq	sl, [r1], -r4
   1a098:	ldrdeq	sl, [r1], -r4
   1a09c:	ldrdeq	sl, [r1], -r4
   1a0a0:	ldrdeq	sl, [r1], -r4
   1a0a4:	ldrdeq	sl, [r1], -r4
   1a0a8:	ldrdeq	sl, [r1], -r4
   1a0ac:	ldrdeq	sl, [r1], -r4
   1a0b0:	ldrdeq	sl, [r1], -r4
   1a0b4:	ldrdeq	sl, [r1], -r4
   1a0b8:	ldrdeq	sl, [r1], -r4
   1a0bc:	ldrdeq	sl, [r1], -r4
   1a0c0:	ldrdeq	sl, [r1], -r4
   1a0c4:	ldrdeq	sl, [r1], -r4
   1a0c8:	ldrdeq	sl, [r1], -r4
   1a0cc:	ldrdeq	sl, [r1], -r4
   1a0d0:	andeq	sl, r1, r4, lsr r9
   1a0d4:	nop	{0}
   1a0d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a0dc:	add	r3, r3, #1
   1a0e0:	str	r3, [fp, #-56]	; 0xffffffc8
   1a0e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a0e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a0ec:	cmp	r2, r3
   1a0f0:	bcc	1a01c <__assert_fail@plt+0x8ab0>
   1a0f4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a0f8:	mov	r0, r3
   1a0fc:	bl	1129c <iswprint@plt>
   1a100:	mov	r3, r0
   1a104:	cmp	r3, #0
   1a108:	bne	1a114 <__assert_fail@plt+0x8ba8>
   1a10c:	mov	r3, #0
   1a110:	strb	r3, [fp, #-49]	; 0xffffffcf
   1a114:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a118:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a11c:	add	r3, r2, r3
   1a120:	str	r3, [fp, #-48]	; 0xffffffd0
   1a124:	sub	r3, fp, #76	; 0x4c
   1a128:	mov	r0, r3
   1a12c:	bl	11230 <mbsinit@plt>
   1a130:	mov	r3, r0
   1a134:	cmp	r3, #0
   1a138:	beq	19f3c <__assert_fail@plt+0x89d0>
   1a13c:	b	1a14c <__assert_fail@plt+0x8be0>
   1a140:	nop	{0}
   1a144:	b	1a14c <__assert_fail@plt+0x8be0>
   1a148:	nop	{0}
   1a14c:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   1a150:	strb	r3, [fp, #-42]	; 0xffffffd6
   1a154:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a158:	cmp	r3, #1
   1a15c:	bhi	1a180 <__assert_fail@plt+0x8c14>
   1a160:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1a164:	cmp	r3, #0
   1a168:	beq	1a4b8 <__assert_fail@plt+0x8f4c>
   1a16c:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   1a170:	eor	r3, r3, #1
   1a174:	uxtb	r3, r3
   1a178:	cmp	r3, #0
   1a17c:	beq	1a4b8 <__assert_fail@plt+0x8f4c>
   1a180:	ldr	r2, [fp, #-16]
   1a184:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a188:	add	r3, r2, r3
   1a18c:	str	r3, [fp, #-68]	; 0xffffffbc
   1a190:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1a194:	cmp	r3, #0
   1a198:	beq	1a34c <__assert_fail@plt+0x8de0>
   1a19c:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   1a1a0:	eor	r3, r3, #1
   1a1a4:	uxtb	r3, r3
   1a1a8:	cmp	r3, #0
   1a1ac:	beq	1a34c <__assert_fail@plt+0x8de0>
   1a1b0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1a1b4:	cmp	r3, #0
   1a1b8:	bne	1a920 <__assert_fail@plt+0x93b4>
   1a1bc:	mov	r3, #1
   1a1c0:	strb	r3, [fp, #-41]	; 0xffffffd7
   1a1c4:	ldr	r3, [fp, #4]
   1a1c8:	cmp	r3, #2
   1a1cc:	bne	1a27c <__assert_fail@plt+0x8d10>
   1a1d0:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   1a1d4:	eor	r3, r3, #1
   1a1d8:	uxtb	r3, r3
   1a1dc:	cmp	r3, #0
   1a1e0:	beq	1a27c <__assert_fail@plt+0x8d10>
   1a1e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a1e8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a1ec:	cmp	r2, r3
   1a1f0:	bcs	1a208 <__assert_fail@plt+0x8c9c>
   1a1f4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a1f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a1fc:	add	r3, r2, r3
   1a200:	mov	r2, #39	; 0x27
   1a204:	strb	r2, [r3]
   1a208:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a20c:	add	r3, r3, #1
   1a210:	str	r3, [fp, #-20]	; 0xffffffec
   1a214:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a218:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a21c:	cmp	r2, r3
   1a220:	bcs	1a238 <__assert_fail@plt+0x8ccc>
   1a224:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a228:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a22c:	add	r3, r2, r3
   1a230:	mov	r2, #36	; 0x24
   1a234:	strb	r2, [r3]
   1a238:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a23c:	add	r3, r3, #1
   1a240:	str	r3, [fp, #-20]	; 0xffffffec
   1a244:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a248:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a24c:	cmp	r2, r3
   1a250:	bcs	1a268 <__assert_fail@plt+0x8cfc>
   1a254:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a258:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a25c:	add	r3, r2, r3
   1a260:	mov	r2, #39	; 0x27
   1a264:	strb	r2, [r3]
   1a268:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a26c:	add	r3, r3, #1
   1a270:	str	r3, [fp, #-20]	; 0xffffffec
   1a274:	mov	r3, #1
   1a278:	strb	r3, [fp, #-35]	; 0xffffffdd
   1a27c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a280:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a284:	cmp	r2, r3
   1a288:	bcs	1a2a0 <__assert_fail@plt+0x8d34>
   1a28c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a290:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a294:	add	r3, r2, r3
   1a298:	mov	r2, #92	; 0x5c
   1a29c:	strb	r2, [r3]
   1a2a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a2a4:	add	r3, r3, #1
   1a2a8:	str	r3, [fp, #-20]	; 0xffffffec
   1a2ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a2b0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a2b4:	cmp	r2, r3
   1a2b8:	bcs	1a2e0 <__assert_fail@plt+0x8d74>
   1a2bc:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1a2c0:	lsr	r3, r3, #6
   1a2c4:	uxtb	r2, r3
   1a2c8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1a2cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a2d0:	add	r3, r1, r3
   1a2d4:	add	r2, r2, #48	; 0x30
   1a2d8:	uxtb	r2, r2
   1a2dc:	strb	r2, [r3]
   1a2e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a2e4:	add	r3, r3, #1
   1a2e8:	str	r3, [fp, #-20]	; 0xffffffec
   1a2ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a2f0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a2f4:	cmp	r2, r3
   1a2f8:	bcs	1a328 <__assert_fail@plt+0x8dbc>
   1a2fc:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1a300:	lsr	r3, r3, #3
   1a304:	uxtb	r3, r3
   1a308:	and	r3, r3, #7
   1a30c:	uxtb	r2, r3
   1a310:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1a314:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a318:	add	r3, r1, r3
   1a31c:	add	r2, r2, #48	; 0x30
   1a320:	uxtb	r2, r2
   1a324:	strb	r2, [r3]
   1a328:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a32c:	add	r3, r3, #1
   1a330:	str	r3, [fp, #-20]	; 0xffffffec
   1a334:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1a338:	and	r3, r3, #7
   1a33c:	uxtb	r3, r3
   1a340:	add	r3, r3, #48	; 0x30
   1a344:	strb	r3, [fp, #-38]	; 0xffffffda
   1a348:	b	1a390 <__assert_fail@plt+0x8e24>
   1a34c:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   1a350:	cmp	r3, #0
   1a354:	beq	1a390 <__assert_fail@plt+0x8e24>
   1a358:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a35c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a360:	cmp	r2, r3
   1a364:	bcs	1a37c <__assert_fail@plt+0x8e10>
   1a368:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a36c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a370:	add	r3, r2, r3
   1a374:	mov	r2, #92	; 0x5c
   1a378:	strb	r2, [r3]
   1a37c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a380:	add	r3, r3, #1
   1a384:	str	r3, [fp, #-20]	; 0xffffffec
   1a388:	mov	r3, #0
   1a38c:	strb	r3, [fp, #-40]	; 0xffffffd8
   1a390:	ldr	r3, [fp, #-16]
   1a394:	add	r3, r3, #1
   1a398:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1a39c:	cmp	r2, r3
   1a3a0:	bls	1a480 <__assert_fail@plt+0x8f14>
   1a3a4:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   1a3a8:	cmp	r3, #0
   1a3ac:	beq	1a42c <__assert_fail@plt+0x8ec0>
   1a3b0:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   1a3b4:	eor	r3, r3, #1
   1a3b8:	uxtb	r3, r3
   1a3bc:	cmp	r3, #0
   1a3c0:	beq	1a42c <__assert_fail@plt+0x8ec0>
   1a3c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a3c8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a3cc:	cmp	r2, r3
   1a3d0:	bcs	1a3e8 <__assert_fail@plt+0x8e7c>
   1a3d4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a3d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a3dc:	add	r3, r2, r3
   1a3e0:	mov	r2, #39	; 0x27
   1a3e4:	strb	r2, [r3]
   1a3e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a3ec:	add	r3, r3, #1
   1a3f0:	str	r3, [fp, #-20]	; 0xffffffec
   1a3f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a3f8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a3fc:	cmp	r2, r3
   1a400:	bcs	1a418 <__assert_fail@plt+0x8eac>
   1a404:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a408:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a40c:	add	r3, r2, r3
   1a410:	mov	r2, #39	; 0x27
   1a414:	strb	r2, [r3]
   1a418:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a41c:	add	r3, r3, #1
   1a420:	str	r3, [fp, #-20]	; 0xffffffec
   1a424:	mov	r3, #0
   1a428:	strb	r3, [fp, #-35]	; 0xffffffdd
   1a42c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a430:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a434:	cmp	r2, r3
   1a438:	bcs	1a450 <__assert_fail@plt+0x8ee4>
   1a43c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a440:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a444:	add	r3, r2, r3
   1a448:	ldrb	r2, [fp, #-38]	; 0xffffffda
   1a44c:	strb	r2, [r3]
   1a450:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a454:	add	r3, r3, #1
   1a458:	str	r3, [fp, #-20]	; 0xffffffec
   1a45c:	ldr	r3, [fp, #-16]
   1a460:	add	r3, r3, #1
   1a464:	str	r3, [fp, #-16]
   1a468:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a46c:	ldr	r3, [fp, #-16]
   1a470:	add	r3, r2, r3
   1a474:	ldrb	r3, [r3]
   1a478:	strb	r3, [fp, #-38]	; 0xffffffda
   1a47c:	b	1a190 <__assert_fail@plt+0x8c24>
   1a480:	nop	{0}
   1a484:	b	1a65c <__assert_fail@plt+0x90f0>
   1a488:	nop	{0}
   1a48c:	b	1a4bc <__assert_fail@plt+0x8f50>
   1a490:	nop	{0}
   1a494:	b	1a4bc <__assert_fail@plt+0x8f50>
   1a498:	nop	{0}
   1a49c:	b	1a4bc <__assert_fail@plt+0x8f50>
   1a4a0:	nop	{0}
   1a4a4:	b	1a4bc <__assert_fail@plt+0x8f50>
   1a4a8:	nop	{0}
   1a4ac:	b	1a4bc <__assert_fail@plt+0x8f50>
   1a4b0:	nop	{0}
   1a4b4:	b	1a4bc <__assert_fail@plt+0x8f50>
   1a4b8:	nop	{0}
   1a4bc:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1a4c0:	eor	r3, r3, #1
   1a4c4:	uxtb	r3, r3
   1a4c8:	cmp	r3, #0
   1a4cc:	bne	1a4dc <__assert_fail@plt+0x8f70>
   1a4d0:	ldr	r3, [fp, #4]
   1a4d4:	cmp	r3, #2
   1a4d8:	bne	1a4f0 <__assert_fail@plt+0x8f84>
   1a4dc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1a4e0:	eor	r3, r3, #1
   1a4e4:	uxtb	r3, r3
   1a4e8:	cmp	r3, #0
   1a4ec:	bne	1a530 <__assert_fail@plt+0x8fc4>
   1a4f0:	ldr	r3, [fp, #12]
   1a4f4:	cmp	r3, #0
   1a4f8:	beq	1a530 <__assert_fail@plt+0x8fc4>
   1a4fc:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1a500:	lsr	r3, r3, #5
   1a504:	uxtb	r3, r3
   1a508:	lsl	r3, r3, #2
   1a50c:	ldr	r2, [fp, #12]
   1a510:	add	r3, r2, r3
   1a514:	ldr	r2, [r3]
   1a518:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1a51c:	and	r3, r3, #31
   1a520:	lsr	r3, r2, r3
   1a524:	and	r3, r3, #1
   1a528:	cmp	r3, #0
   1a52c:	bne	1a544 <__assert_fail@plt+0x8fd8>
   1a530:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   1a534:	eor	r3, r3, #1
   1a538:	uxtb	r3, r3
   1a53c:	cmp	r3, #0
   1a540:	bne	1a658 <__assert_fail@plt+0x90ec>
   1a544:	nop	{0}
   1a548:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1a54c:	cmp	r3, #0
   1a550:	bne	1a928 <__assert_fail@plt+0x93bc>
   1a554:	mov	r3, #1
   1a558:	strb	r3, [fp, #-41]	; 0xffffffd7
   1a55c:	ldr	r3, [fp, #4]
   1a560:	cmp	r3, #2
   1a564:	bne	1a614 <__assert_fail@plt+0x90a8>
   1a568:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   1a56c:	eor	r3, r3, #1
   1a570:	uxtb	r3, r3
   1a574:	cmp	r3, #0
   1a578:	beq	1a614 <__assert_fail@plt+0x90a8>
   1a57c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a580:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a584:	cmp	r2, r3
   1a588:	bcs	1a5a0 <__assert_fail@plt+0x9034>
   1a58c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a590:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a594:	add	r3, r2, r3
   1a598:	mov	r2, #39	; 0x27
   1a59c:	strb	r2, [r3]
   1a5a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a5a4:	add	r3, r3, #1
   1a5a8:	str	r3, [fp, #-20]	; 0xffffffec
   1a5ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a5b0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a5b4:	cmp	r2, r3
   1a5b8:	bcs	1a5d0 <__assert_fail@plt+0x9064>
   1a5bc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a5c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a5c4:	add	r3, r2, r3
   1a5c8:	mov	r2, #36	; 0x24
   1a5cc:	strb	r2, [r3]
   1a5d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a5d4:	add	r3, r3, #1
   1a5d8:	str	r3, [fp, #-20]	; 0xffffffec
   1a5dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a5e0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a5e4:	cmp	r2, r3
   1a5e8:	bcs	1a600 <__assert_fail@plt+0x9094>
   1a5ec:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a5f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a5f4:	add	r3, r2, r3
   1a5f8:	mov	r2, #39	; 0x27
   1a5fc:	strb	r2, [r3]
   1a600:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a604:	add	r3, r3, #1
   1a608:	str	r3, [fp, #-20]	; 0xffffffec
   1a60c:	mov	r3, #1
   1a610:	strb	r3, [fp, #-35]	; 0xffffffdd
   1a614:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a618:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a61c:	cmp	r2, r3
   1a620:	bcs	1a638 <__assert_fail@plt+0x90cc>
   1a624:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a628:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a62c:	add	r3, r2, r3
   1a630:	mov	r2, #92	; 0x5c
   1a634:	strb	r2, [r3]
   1a638:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a63c:	add	r3, r3, #1
   1a640:	str	r3, [fp, #-20]	; 0xffffffec
   1a644:	b	1a65c <__assert_fail@plt+0x90f0>
   1a648:	nop	{0}
   1a64c:	b	1a65c <__assert_fail@plt+0x90f0>
   1a650:	nop	{0}
   1a654:	b	1a65c <__assert_fail@plt+0x90f0>
   1a658:	nop	{0}
   1a65c:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   1a660:	cmp	r3, #0
   1a664:	beq	1a6e4 <__assert_fail@plt+0x9178>
   1a668:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   1a66c:	eor	r3, r3, #1
   1a670:	uxtb	r3, r3
   1a674:	cmp	r3, #0
   1a678:	beq	1a6e4 <__assert_fail@plt+0x9178>
   1a67c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a680:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a684:	cmp	r2, r3
   1a688:	bcs	1a6a0 <__assert_fail@plt+0x9134>
   1a68c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a690:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a694:	add	r3, r2, r3
   1a698:	mov	r2, #39	; 0x27
   1a69c:	strb	r2, [r3]
   1a6a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a6a4:	add	r3, r3, #1
   1a6a8:	str	r3, [fp, #-20]	; 0xffffffec
   1a6ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a6b0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a6b4:	cmp	r2, r3
   1a6b8:	bcs	1a6d0 <__assert_fail@plt+0x9164>
   1a6bc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a6c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a6c4:	add	r3, r2, r3
   1a6c8:	mov	r2, #39	; 0x27
   1a6cc:	strb	r2, [r3]
   1a6d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a6d4:	add	r3, r3, #1
   1a6d8:	str	r3, [fp, #-20]	; 0xffffffec
   1a6dc:	mov	r3, #0
   1a6e0:	strb	r3, [fp, #-35]	; 0xffffffdd
   1a6e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a6e8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a6ec:	cmp	r2, r3
   1a6f0:	bcs	1a708 <__assert_fail@plt+0x919c>
   1a6f4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a6f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a6fc:	add	r3, r2, r3
   1a700:	ldrb	r2, [fp, #-38]	; 0xffffffda
   1a704:	strb	r2, [r3]
   1a708:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a70c:	add	r3, r3, #1
   1a710:	str	r3, [fp, #-20]	; 0xffffffec
   1a714:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   1a718:	eor	r3, r3, #1
   1a71c:	uxtb	r3, r3
   1a720:	cmp	r3, #0
   1a724:	beq	1a730 <__assert_fail@plt+0x91c4>
   1a728:	mov	r3, #0
   1a72c:	strb	r3, [fp, #-37]	; 0xffffffdb
   1a730:	ldr	r3, [fp, #-16]
   1a734:	add	r3, r3, #1
   1a738:	str	r3, [fp, #-16]
   1a73c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a740:	cmn	r3, #1
   1a744:	bne	1a76c <__assert_fail@plt+0x9200>
   1a748:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a74c:	ldr	r3, [fp, #-16]
   1a750:	add	r3, r2, r3
   1a754:	ldrb	r3, [r3]
   1a758:	cmp	r3, #0
   1a75c:	movne	r3, #1
   1a760:	moveq	r3, #0
   1a764:	uxtb	r3, r3
   1a768:	b	1a784 <__assert_fail@plt+0x9218>
   1a76c:	ldr	r2, [fp, #-16]
   1a770:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a774:	cmp	r2, r3
   1a778:	movne	r3, #1
   1a77c:	moveq	r3, #0
   1a780:	uxtb	r3, r3
   1a784:	cmp	r3, #0
   1a788:	bne	195a4 <__assert_fail@plt+0x8038>
   1a78c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a790:	cmp	r3, #0
   1a794:	bne	1a7b0 <__assert_fail@plt+0x9244>
   1a798:	ldr	r3, [fp, #4]
   1a79c:	cmp	r3, #2
   1a7a0:	bne	1a7b0 <__assert_fail@plt+0x9244>
   1a7a4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1a7a8:	cmp	r3, #0
   1a7ac:	bne	1a930 <__assert_fail@plt+0x93c4>
   1a7b0:	ldr	r3, [fp, #4]
   1a7b4:	cmp	r3, #2
   1a7b8:	bne	1a858 <__assert_fail@plt+0x92ec>
   1a7bc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1a7c0:	eor	r3, r3, #1
   1a7c4:	uxtb	r3, r3
   1a7c8:	cmp	r3, #0
   1a7cc:	beq	1a858 <__assert_fail@plt+0x92ec>
   1a7d0:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   1a7d4:	cmp	r3, #0
   1a7d8:	beq	1a858 <__assert_fail@plt+0x92ec>
   1a7dc:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1a7e0:	cmp	r3, #0
   1a7e4:	beq	1a82c <__assert_fail@plt+0x92c0>
   1a7e8:	ldr	r3, [fp, #20]
   1a7ec:	str	r3, [sp, #16]
   1a7f0:	ldr	r3, [fp, #16]
   1a7f4:	str	r3, [sp, #12]
   1a7f8:	ldr	r3, [fp, #12]
   1a7fc:	str	r3, [sp, #8]
   1a800:	ldr	r3, [fp, #8]
   1a804:	str	r3, [sp, #4]
   1a808:	mov	r3, #5
   1a80c:	str	r3, [sp]
   1a810:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a814:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a818:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a81c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1a820:	bl	192dc <__assert_fail@plt+0x7d70>
   1a824:	mov	r3, r0
   1a828:	b	1a998 <__assert_fail@plt+0x942c>
   1a82c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a830:	cmp	r3, #0
   1a834:	bne	1a858 <__assert_fail@plt+0x92ec>
   1a838:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a83c:	cmp	r3, #0
   1a840:	beq	1a858 <__assert_fail@plt+0x92ec>
   1a844:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a848:	str	r3, [fp, #-92]	; 0xffffffa4
   1a84c:	mov	r3, #0
   1a850:	str	r3, [fp, #-20]	; 0xffffffec
   1a854:	b	19370 <__assert_fail@plt+0x7e04>
   1a858:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a85c:	cmp	r3, #0
   1a860:	beq	1a8cc <__assert_fail@plt+0x9360>
   1a864:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1a868:	eor	r3, r3, #1
   1a86c:	uxtb	r3, r3
   1a870:	cmp	r3, #0
   1a874:	beq	1a8cc <__assert_fail@plt+0x9360>
   1a878:	b	1a8bc <__assert_fail@plt+0x9350>
   1a87c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a880:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a884:	cmp	r2, r3
   1a888:	bcs	1a8a4 <__assert_fail@plt+0x9338>
   1a88c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a890:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a894:	add	r3, r2, r3
   1a898:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a89c:	ldrb	r2, [r2]
   1a8a0:	strb	r2, [r3]
   1a8a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a8a8:	add	r3, r3, #1
   1a8ac:	str	r3, [fp, #-20]	; 0xffffffec
   1a8b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a8b4:	add	r3, r3, #1
   1a8b8:	str	r3, [fp, #-28]	; 0xffffffe4
   1a8bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a8c0:	ldrb	r3, [r3]
   1a8c4:	cmp	r3, #0
   1a8c8:	bne	1a87c <__assert_fail@plt+0x9310>
   1a8cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a8d0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a8d4:	cmp	r2, r3
   1a8d8:	bcs	1a8f0 <__assert_fail@plt+0x9384>
   1a8dc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a8e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a8e4:	add	r3, r2, r3
   1a8e8:	mov	r2, #0
   1a8ec:	strb	r2, [r3]
   1a8f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a8f4:	b	1a998 <__assert_fail@plt+0x942c>
   1a8f8:	nop	{0}
   1a8fc:	b	1a934 <__assert_fail@plt+0x93c8>
   1a900:	nop	{0}
   1a904:	b	1a934 <__assert_fail@plt+0x93c8>
   1a908:	nop	{0}
   1a90c:	b	1a934 <__assert_fail@plt+0x93c8>
   1a910:	nop	{0}
   1a914:	b	1a934 <__assert_fail@plt+0x93c8>
   1a918:	nop	{0}
   1a91c:	b	1a934 <__assert_fail@plt+0x93c8>
   1a920:	nop	{0}
   1a924:	b	1a934 <__assert_fail@plt+0x93c8>
   1a928:	nop	{0}
   1a92c:	b	1a934 <__assert_fail@plt+0x93c8>
   1a930:	nop	{0}
   1a934:	ldr	r3, [fp, #4]
   1a938:	cmp	r3, #2
   1a93c:	bne	1a954 <__assert_fail@plt+0x93e8>
   1a940:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1a944:	cmp	r3, #0
   1a948:	beq	1a954 <__assert_fail@plt+0x93e8>
   1a94c:	mov	r3, #4
   1a950:	str	r3, [fp, #4]
   1a954:	ldr	r3, [fp, #8]
   1a958:	bic	r3, r3, #2
   1a95c:	ldr	r2, [fp, #20]
   1a960:	str	r2, [sp, #16]
   1a964:	ldr	r2, [fp, #16]
   1a968:	str	r2, [sp, #12]
   1a96c:	mov	r2, #0
   1a970:	str	r2, [sp, #8]
   1a974:	str	r3, [sp, #4]
   1a978:	ldr	r3, [fp, #4]
   1a97c:	str	r3, [sp]
   1a980:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a984:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a988:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1a98c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1a990:	bl	192dc <__assert_fail@plt+0x7d70>
   1a994:	mov	r3, r0
   1a998:	mov	r0, r3
   1a99c:	sub	sp, fp, #8
   1a9a0:	ldr	r4, [sp]
   1a9a4:	ldr	fp, [sp, #4]
   1a9a8:	add	sp, sp, #8
   1a9ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1a9b0:	str	fp, [sp, #-8]!
   1a9b4:	str	lr, [sp, #4]
   1a9b8:	add	fp, sp, #4
   1a9bc:	sub	sp, sp, #56	; 0x38
   1a9c0:	str	r0, [fp, #-24]	; 0xffffffe8
   1a9c4:	str	r1, [fp, #-28]	; 0xffffffe4
   1a9c8:	str	r2, [fp, #-32]	; 0xffffffe0
   1a9cc:	str	r3, [fp, #-36]	; 0xffffffdc
   1a9d0:	ldr	r3, [fp, #4]
   1a9d4:	cmp	r3, #0
   1a9d8:	beq	1a9e4 <__assert_fail@plt+0x9478>
   1a9dc:	ldr	r3, [fp, #4]
   1a9e0:	b	1a9ec <__assert_fail@plt+0x9480>
   1a9e4:	movw	r3, #8876	; 0x22ac
   1a9e8:	movt	r3, #3
   1a9ec:	str	r3, [fp, #-8]
   1a9f0:	bl	113ec <__errno_location@plt>
   1a9f4:	mov	r3, r0
   1a9f8:	ldr	r3, [r3]
   1a9fc:	str	r3, [fp, #-12]
   1aa00:	ldr	r3, [fp, #-8]
   1aa04:	ldr	r3, [r3]
   1aa08:	ldr	r2, [fp, #-8]
   1aa0c:	ldr	r2, [r2, #4]
   1aa10:	ldr	r1, [fp, #-8]
   1aa14:	add	r1, r1, #8
   1aa18:	ldr	r0, [fp, #-8]
   1aa1c:	ldr	r0, [r0, #40]	; 0x28
   1aa20:	ldr	ip, [fp, #-8]
   1aa24:	ldr	ip, [ip, #44]	; 0x2c
   1aa28:	str	ip, [sp, #16]
   1aa2c:	str	r0, [sp, #12]
   1aa30:	str	r1, [sp, #8]
   1aa34:	str	r2, [sp, #4]
   1aa38:	str	r3, [sp]
   1aa3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1aa40:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1aa44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aa48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa4c:	bl	192dc <__assert_fail@plt+0x7d70>
   1aa50:	str	r0, [fp, #-16]
   1aa54:	bl	113ec <__errno_location@plt>
   1aa58:	mov	r2, r0
   1aa5c:	ldr	r3, [fp, #-12]
   1aa60:	str	r3, [r2]
   1aa64:	ldr	r3, [fp, #-16]
   1aa68:	mov	r0, r3
   1aa6c:	sub	sp, fp, #4
   1aa70:	ldr	fp, [sp]
   1aa74:	add	sp, sp, #4
   1aa78:	pop	{pc}		; (ldr pc, [sp], #4)
   1aa7c:	str	fp, [sp, #-8]!
   1aa80:	str	lr, [sp, #4]
   1aa84:	add	fp, sp, #4
   1aa88:	sub	sp, sp, #16
   1aa8c:	str	r0, [fp, #-8]
   1aa90:	str	r1, [fp, #-12]
   1aa94:	str	r2, [fp, #-16]
   1aa98:	ldr	r3, [fp, #-16]
   1aa9c:	mov	r2, #0
   1aaa0:	ldr	r1, [fp, #-12]
   1aaa4:	ldr	r0, [fp, #-8]
   1aaa8:	bl	1aac4 <__assert_fail@plt+0x9558>
   1aaac:	mov	r3, r0
   1aab0:	mov	r0, r3
   1aab4:	sub	sp, fp, #4
   1aab8:	ldr	fp, [sp]
   1aabc:	add	sp, sp, #4
   1aac0:	pop	{pc}		; (ldr pc, [sp], #4)
   1aac4:	str	fp, [sp, #-8]!
   1aac8:	str	lr, [sp, #4]
   1aacc:	add	fp, sp, #4
   1aad0:	sub	sp, sp, #64	; 0x40
   1aad4:	str	r0, [fp, #-32]	; 0xffffffe0
   1aad8:	str	r1, [fp, #-36]	; 0xffffffdc
   1aadc:	str	r2, [fp, #-40]	; 0xffffffd8
   1aae0:	str	r3, [fp, #-44]	; 0xffffffd4
   1aae4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1aae8:	cmp	r3, #0
   1aaec:	beq	1aaf8 <__assert_fail@plt+0x958c>
   1aaf0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1aaf4:	b	1ab00 <__assert_fail@plt+0x9594>
   1aaf8:	movw	r3, #8876	; 0x22ac
   1aafc:	movt	r3, #3
   1ab00:	str	r3, [fp, #-8]
   1ab04:	bl	113ec <__errno_location@plt>
   1ab08:	mov	r3, r0
   1ab0c:	ldr	r3, [r3]
   1ab10:	str	r3, [fp, #-12]
   1ab14:	ldr	r3, [fp, #-8]
   1ab18:	ldr	r3, [r3, #4]
   1ab1c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ab20:	cmp	r2, #0
   1ab24:	moveq	r2, #1
   1ab28:	movne	r2, #0
   1ab2c:	uxtb	r2, r2
   1ab30:	orr	r3, r3, r2
   1ab34:	str	r3, [fp, #-16]
   1ab38:	ldr	r3, [fp, #-8]
   1ab3c:	ldr	r3, [r3]
   1ab40:	ldr	r2, [fp, #-8]
   1ab44:	add	r2, r2, #8
   1ab48:	ldr	r1, [fp, #-8]
   1ab4c:	ldr	r1, [r1, #40]	; 0x28
   1ab50:	ldr	r0, [fp, #-8]
   1ab54:	ldr	r0, [r0, #44]	; 0x2c
   1ab58:	str	r0, [sp, #16]
   1ab5c:	str	r1, [sp, #12]
   1ab60:	str	r2, [sp, #8]
   1ab64:	ldr	r2, [fp, #-16]
   1ab68:	str	r2, [sp, #4]
   1ab6c:	str	r3, [sp]
   1ab70:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ab74:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ab78:	mov	r1, #0
   1ab7c:	mov	r0, #0
   1ab80:	bl	192dc <__assert_fail@plt+0x7d70>
   1ab84:	mov	r3, r0
   1ab88:	add	r3, r3, #1
   1ab8c:	str	r3, [fp, #-20]	; 0xffffffec
   1ab90:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ab94:	bl	1c278 <__assert_fail@plt+0xad0c>
   1ab98:	mov	r3, r0
   1ab9c:	str	r3, [fp, #-24]	; 0xffffffe8
   1aba0:	ldr	r3, [fp, #-8]
   1aba4:	ldr	r3, [r3]
   1aba8:	ldr	r2, [fp, #-8]
   1abac:	add	r2, r2, #8
   1abb0:	ldr	r1, [fp, #-8]
   1abb4:	ldr	r1, [r1, #40]	; 0x28
   1abb8:	ldr	r0, [fp, #-8]
   1abbc:	ldr	r0, [r0, #44]	; 0x2c
   1abc0:	str	r0, [sp, #16]
   1abc4:	str	r1, [sp, #12]
   1abc8:	str	r2, [sp, #8]
   1abcc:	ldr	r2, [fp, #-16]
   1abd0:	str	r2, [sp, #4]
   1abd4:	str	r3, [sp]
   1abd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1abdc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1abe0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1abe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1abe8:	bl	192dc <__assert_fail@plt+0x7d70>
   1abec:	bl	113ec <__errno_location@plt>
   1abf0:	mov	r2, r0
   1abf4:	ldr	r3, [fp, #-12]
   1abf8:	str	r3, [r2]
   1abfc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ac00:	cmp	r3, #0
   1ac04:	beq	1ac18 <__assert_fail@plt+0x96ac>
   1ac08:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ac0c:	sub	r2, r3, #1
   1ac10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ac14:	str	r2, [r3]
   1ac18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ac1c:	mov	r0, r3
   1ac20:	sub	sp, fp, #4
   1ac24:	ldr	fp, [sp]
   1ac28:	add	sp, sp, #4
   1ac2c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ac30:	str	fp, [sp, #-8]!
   1ac34:	str	lr, [sp, #4]
   1ac38:	add	fp, sp, #4
   1ac3c:	sub	sp, sp, #8
   1ac40:	movw	r3, #8580	; 0x2184
   1ac44:	movt	r3, #3
   1ac48:	ldr	r3, [r3]
   1ac4c:	str	r3, [fp, #-12]
   1ac50:	mov	r3, #1
   1ac54:	str	r3, [fp, #-8]
   1ac58:	b	1ac84 <__assert_fail@plt+0x9718>
   1ac5c:	ldr	r3, [fp, #-8]
   1ac60:	lsl	r3, r3, #3
   1ac64:	ldr	r2, [fp, #-12]
   1ac68:	add	r3, r2, r3
   1ac6c:	ldr	r3, [r3, #4]
   1ac70:	mov	r0, r3
   1ac74:	bl	1d7e8 <__assert_fail@plt+0xc27c>
   1ac78:	ldr	r3, [fp, #-8]
   1ac7c:	add	r3, r3, #1
   1ac80:	str	r3, [fp, #-8]
   1ac84:	movw	r3, #8568	; 0x2178
   1ac88:	movt	r3, #3
   1ac8c:	ldr	r3, [r3]
   1ac90:	ldr	r2, [fp, #-8]
   1ac94:	cmp	r2, r3
   1ac98:	blt	1ac5c <__assert_fail@plt+0x96f0>
   1ac9c:	ldr	r3, [fp, #-12]
   1aca0:	ldr	r2, [r3, #4]
   1aca4:	movw	r3, #8924	; 0x22dc
   1aca8:	movt	r3, #3
   1acac:	cmp	r2, r3
   1acb0:	beq	1ace8 <__assert_fail@plt+0x977c>
   1acb4:	ldr	r3, [fp, #-12]
   1acb8:	ldr	r3, [r3, #4]
   1acbc:	mov	r0, r3
   1acc0:	bl	1d7e8 <__assert_fail@plt+0xc27c>
   1acc4:	movw	r3, #8572	; 0x217c
   1acc8:	movt	r3, #3
   1accc:	mov	r2, #256	; 0x100
   1acd0:	str	r2, [r3]
   1acd4:	movw	r3, #8572	; 0x217c
   1acd8:	movt	r3, #3
   1acdc:	movw	r2, #8924	; 0x22dc
   1ace0:	movt	r2, #3
   1ace4:	str	r2, [r3, #4]
   1ace8:	ldr	r2, [fp, #-12]
   1acec:	movw	r3, #8572	; 0x217c
   1acf0:	movt	r3, #3
   1acf4:	cmp	r2, r3
   1acf8:	beq	1ad18 <__assert_fail@plt+0x97ac>
   1acfc:	ldr	r0, [fp, #-12]
   1ad00:	bl	1d7e8 <__assert_fail@plt+0xc27c>
   1ad04:	movw	r3, #8580	; 0x2184
   1ad08:	movt	r3, #3
   1ad0c:	movw	r2, #8572	; 0x217c
   1ad10:	movt	r2, #3
   1ad14:	str	r2, [r3]
   1ad18:	movw	r3, #8568	; 0x2178
   1ad1c:	movt	r3, #3
   1ad20:	mov	r2, #1
   1ad24:	str	r2, [r3]
   1ad28:	nop	{0}
   1ad2c:	sub	sp, fp, #4
   1ad30:	ldr	fp, [sp]
   1ad34:	add	sp, sp, #4
   1ad38:	pop	{pc}		; (ldr pc, [sp], #4)
   1ad3c:	str	fp, [sp, #-8]!
   1ad40:	str	lr, [sp, #4]
   1ad44:	add	fp, sp, #4
   1ad48:	sub	sp, sp, #80	; 0x50
   1ad4c:	str	r0, [fp, #-48]	; 0xffffffd0
   1ad50:	str	r1, [fp, #-52]	; 0xffffffcc
   1ad54:	str	r2, [fp, #-56]	; 0xffffffc8
   1ad58:	str	r3, [fp, #-60]	; 0xffffffc4
   1ad5c:	bl	113ec <__errno_location@plt>
   1ad60:	mov	r3, r0
   1ad64:	ldr	r3, [r3]
   1ad68:	str	r3, [fp, #-16]
   1ad6c:	movw	r3, #8580	; 0x2184
   1ad70:	movt	r3, #3
   1ad74:	ldr	r3, [r3]
   1ad78:	str	r3, [fp, #-8]
   1ad7c:	mvn	r3, #-2147483648	; 0x80000000
   1ad80:	str	r3, [fp, #-20]	; 0xffffffec
   1ad84:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ad88:	cmp	r3, #0
   1ad8c:	blt	1ada0 <__assert_fail@plt+0x9834>
   1ad90:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ad94:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ad98:	cmp	r2, r3
   1ad9c:	blt	1ada4 <__assert_fail@plt+0x9838>
   1ada0:	bl	1153c <abort@plt>
   1ada4:	movw	r3, #8568	; 0x2178
   1ada8:	movt	r3, #3
   1adac:	ldr	r3, [r3]
   1adb0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1adb4:	cmp	r2, r3
   1adb8:	blt	1aeb0 <__assert_fail@plt+0x9944>
   1adbc:	ldr	r2, [fp, #-8]
   1adc0:	movw	r3, #8572	; 0x217c
   1adc4:	movt	r3, #3
   1adc8:	cmp	r2, r3
   1adcc:	moveq	r3, #1
   1add0:	movne	r3, #0
   1add4:	strb	r3, [fp, #-21]	; 0xffffffeb
   1add8:	movw	r3, #8568	; 0x2178
   1addc:	movt	r3, #3
   1ade0:	ldr	r3, [r3]
   1ade4:	str	r3, [fp, #-40]	; 0xffffffd8
   1ade8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1adec:	cmp	r3, #0
   1adf0:	beq	1adfc <__assert_fail@plt+0x9890>
   1adf4:	mov	r0, #0
   1adf8:	b	1ae00 <__assert_fail@plt+0x9894>
   1adfc:	ldr	r0, [fp, #-8]
   1ae00:	movw	r3, #8568	; 0x2178
   1ae04:	movt	r3, #3
   1ae08:	ldr	r3, [r3]
   1ae0c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ae10:	sub	r3, r2, r3
   1ae14:	add	r2, r3, #1
   1ae18:	sub	r1, fp, #40	; 0x28
   1ae1c:	mov	r3, #8
   1ae20:	str	r3, [sp]
   1ae24:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ae28:	bl	1c5d8 <__assert_fail@plt+0xb06c>
   1ae2c:	str	r0, [fp, #-8]
   1ae30:	movw	r3, #8580	; 0x2184
   1ae34:	movt	r3, #3
   1ae38:	ldr	r2, [fp, #-8]
   1ae3c:	str	r2, [r3]
   1ae40:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1ae44:	cmp	r3, #0
   1ae48:	beq	1ae64 <__assert_fail@plt+0x98f8>
   1ae4c:	ldr	r2, [fp, #-8]
   1ae50:	movw	r3, #8572	; 0x217c
   1ae54:	movt	r3, #3
   1ae58:	mov	r1, r2
   1ae5c:	ldrd	r2, [r3]
   1ae60:	strd	r2, [r1]
   1ae64:	movw	r3, #8568	; 0x2178
   1ae68:	movt	r3, #3
   1ae6c:	ldr	r3, [r3]
   1ae70:	lsl	r3, r3, #3
   1ae74:	ldr	r2, [fp, #-8]
   1ae78:	add	r0, r2, r3
   1ae7c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ae80:	movw	r3, #8568	; 0x2178
   1ae84:	movt	r3, #3
   1ae88:	ldr	r3, [r3]
   1ae8c:	sub	r3, r2, r3
   1ae90:	lsl	r3, r3, #3
   1ae94:	mov	r2, r3
   1ae98:	mov	r1, #0
   1ae9c:	bl	11410 <memset@plt>
   1aea0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1aea4:	movw	r3, #8568	; 0x2178
   1aea8:	movt	r3, #3
   1aeac:	str	r2, [r3]
   1aeb0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1aeb4:	lsl	r3, r3, #3
   1aeb8:	ldr	r2, [fp, #-8]
   1aebc:	add	r3, r2, r3
   1aec0:	ldr	r3, [r3]
   1aec4:	str	r3, [fp, #-28]	; 0xffffffe4
   1aec8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1aecc:	lsl	r3, r3, #3
   1aed0:	ldr	r2, [fp, #-8]
   1aed4:	add	r3, r2, r3
   1aed8:	ldr	r3, [r3, #4]
   1aedc:	str	r3, [fp, #-12]
   1aee0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1aee4:	ldr	r3, [r3, #4]
   1aee8:	orr	r3, r3, #1
   1aeec:	str	r3, [fp, #-32]	; 0xffffffe0
   1aef0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1aef4:	ldr	r3, [r3]
   1aef8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1aefc:	add	r2, r2, #8
   1af00:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1af04:	ldr	r1, [r1, #40]	; 0x28
   1af08:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1af0c:	ldr	r0, [r0, #44]	; 0x2c
   1af10:	str	r0, [sp, #16]
   1af14:	str	r1, [sp, #12]
   1af18:	str	r2, [sp, #8]
   1af1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1af20:	str	r2, [sp, #4]
   1af24:	str	r3, [sp]
   1af28:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1af2c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1af30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1af34:	ldr	r0, [fp, #-12]
   1af38:	bl	192dc <__assert_fail@plt+0x7d70>
   1af3c:	str	r0, [fp, #-36]	; 0xffffffdc
   1af40:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1af44:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1af48:	cmp	r2, r3
   1af4c:	bhi	1b004 <__assert_fail@plt+0x9a98>
   1af50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1af54:	add	r3, r3, #1
   1af58:	str	r3, [fp, #-28]	; 0xffffffe4
   1af5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1af60:	lsl	r3, r3, #3
   1af64:	ldr	r2, [fp, #-8]
   1af68:	add	r3, r2, r3
   1af6c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1af70:	str	r2, [r3]
   1af74:	ldr	r2, [fp, #-12]
   1af78:	movw	r3, #8924	; 0x22dc
   1af7c:	movt	r3, #3
   1af80:	cmp	r2, r3
   1af84:	beq	1af90 <__assert_fail@plt+0x9a24>
   1af88:	ldr	r0, [fp, #-12]
   1af8c:	bl	1d7e8 <__assert_fail@plt+0xc27c>
   1af90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1af94:	bl	1c278 <__assert_fail@plt+0xad0c>
   1af98:	mov	r3, r0
   1af9c:	str	r3, [fp, #-12]
   1afa0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1afa4:	lsl	r3, r3, #3
   1afa8:	ldr	r2, [fp, #-8]
   1afac:	add	r3, r2, r3
   1afb0:	ldr	r2, [fp, #-12]
   1afb4:	str	r2, [r3, #4]
   1afb8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1afbc:	ldr	r3, [r3]
   1afc0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1afc4:	add	r2, r2, #8
   1afc8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1afcc:	ldr	r1, [r1, #40]	; 0x28
   1afd0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1afd4:	ldr	r0, [r0, #44]	; 0x2c
   1afd8:	str	r0, [sp, #16]
   1afdc:	str	r1, [sp, #12]
   1afe0:	str	r2, [sp, #8]
   1afe4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1afe8:	str	r2, [sp, #4]
   1afec:	str	r3, [sp]
   1aff0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1aff4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1aff8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1affc:	ldr	r0, [fp, #-12]
   1b000:	bl	192dc <__assert_fail@plt+0x7d70>
   1b004:	bl	113ec <__errno_location@plt>
   1b008:	mov	r2, r0
   1b00c:	ldr	r3, [fp, #-16]
   1b010:	str	r3, [r2]
   1b014:	ldr	r3, [fp, #-12]
   1b018:	mov	r0, r3
   1b01c:	sub	sp, fp, #4
   1b020:	ldr	fp, [sp]
   1b024:	add	sp, sp, #4
   1b028:	pop	{pc}		; (ldr pc, [sp], #4)
   1b02c:	str	fp, [sp, #-8]!
   1b030:	str	lr, [sp, #4]
   1b034:	add	fp, sp, #4
   1b038:	sub	sp, sp, #8
   1b03c:	str	r0, [fp, #-8]
   1b040:	str	r1, [fp, #-12]
   1b044:	movw	r3, #8876	; 0x22ac
   1b048:	movt	r3, #3
   1b04c:	mvn	r2, #0
   1b050:	ldr	r1, [fp, #-12]
   1b054:	ldr	r0, [fp, #-8]
   1b058:	bl	1ad3c <__assert_fail@plt+0x97d0>
   1b05c:	mov	r3, r0
   1b060:	mov	r0, r3
   1b064:	sub	sp, fp, #4
   1b068:	ldr	fp, [sp]
   1b06c:	add	sp, sp, #4
   1b070:	pop	{pc}		; (ldr pc, [sp], #4)
   1b074:	str	fp, [sp, #-8]!
   1b078:	str	lr, [sp, #4]
   1b07c:	add	fp, sp, #4
   1b080:	sub	sp, sp, #16
   1b084:	str	r0, [fp, #-8]
   1b088:	str	r1, [fp, #-12]
   1b08c:	str	r2, [fp, #-16]
   1b090:	movw	r3, #8876	; 0x22ac
   1b094:	movt	r3, #3
   1b098:	ldr	r2, [fp, #-16]
   1b09c:	ldr	r1, [fp, #-12]
   1b0a0:	ldr	r0, [fp, #-8]
   1b0a4:	bl	1ad3c <__assert_fail@plt+0x97d0>
   1b0a8:	mov	r3, r0
   1b0ac:	mov	r0, r3
   1b0b0:	sub	sp, fp, #4
   1b0b4:	ldr	fp, [sp]
   1b0b8:	add	sp, sp, #4
   1b0bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b0c0:	str	fp, [sp, #-8]!
   1b0c4:	str	lr, [sp, #4]
   1b0c8:	add	fp, sp, #4
   1b0cc:	sub	sp, sp, #8
   1b0d0:	str	r0, [fp, #-8]
   1b0d4:	ldr	r1, [fp, #-8]
   1b0d8:	mov	r0, #0
   1b0dc:	bl	1b02c <__assert_fail@plt+0x9ac0>
   1b0e0:	mov	r3, r0
   1b0e4:	mov	r0, r3
   1b0e8:	sub	sp, fp, #4
   1b0ec:	ldr	fp, [sp]
   1b0f0:	add	sp, sp, #4
   1b0f4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b0f8:	str	fp, [sp, #-8]!
   1b0fc:	str	lr, [sp, #4]
   1b100:	add	fp, sp, #4
   1b104:	sub	sp, sp, #8
   1b108:	str	r0, [fp, #-8]
   1b10c:	str	r1, [fp, #-12]
   1b110:	ldr	r2, [fp, #-12]
   1b114:	ldr	r1, [fp, #-8]
   1b118:	mov	r0, #0
   1b11c:	bl	1b074 <__assert_fail@plt+0x9b08>
   1b120:	mov	r3, r0
   1b124:	mov	r0, r3
   1b128:	sub	sp, fp, #4
   1b12c:	ldr	fp, [sp]
   1b130:	add	sp, sp, #4
   1b134:	pop	{pc}		; (ldr pc, [sp], #4)
   1b138:	str	fp, [sp, #-8]!
   1b13c:	str	lr, [sp, #4]
   1b140:	add	fp, sp, #4
   1b144:	sub	sp, sp, #64	; 0x40
   1b148:	str	r0, [fp, #-56]	; 0xffffffc8
   1b14c:	str	r1, [fp, #-60]	; 0xffffffc4
   1b150:	str	r2, [fp, #-64]	; 0xffffffc0
   1b154:	sub	r3, fp, #52	; 0x34
   1b158:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b15c:	mov	r0, r3
   1b160:	bl	19138 <__assert_fail@plt+0x7bcc>
   1b164:	sub	r3, fp, #52	; 0x34
   1b168:	mvn	r2, #0
   1b16c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1b170:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b174:	bl	1ad3c <__assert_fail@plt+0x97d0>
   1b178:	mov	r3, r0
   1b17c:	mov	r0, r3
   1b180:	sub	sp, fp, #4
   1b184:	ldr	fp, [sp]
   1b188:	add	sp, sp, #4
   1b18c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b190:	str	fp, [sp, #-8]!
   1b194:	str	lr, [sp, #4]
   1b198:	add	fp, sp, #4
   1b19c:	sub	sp, sp, #64	; 0x40
   1b1a0:	str	r0, [fp, #-56]	; 0xffffffc8
   1b1a4:	str	r1, [fp, #-60]	; 0xffffffc4
   1b1a8:	str	r2, [fp, #-64]	; 0xffffffc0
   1b1ac:	str	r3, [fp, #-68]	; 0xffffffbc
   1b1b0:	sub	r3, fp, #52	; 0x34
   1b1b4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b1b8:	mov	r0, r3
   1b1bc:	bl	19138 <__assert_fail@plt+0x7bcc>
   1b1c0:	sub	r3, fp, #52	; 0x34
   1b1c4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1b1c8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1b1cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b1d0:	bl	1ad3c <__assert_fail@plt+0x97d0>
   1b1d4:	mov	r3, r0
   1b1d8:	mov	r0, r3
   1b1dc:	sub	sp, fp, #4
   1b1e0:	ldr	fp, [sp]
   1b1e4:	add	sp, sp, #4
   1b1e8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b1ec:	str	fp, [sp, #-8]!
   1b1f0:	str	lr, [sp, #4]
   1b1f4:	add	fp, sp, #4
   1b1f8:	sub	sp, sp, #8
   1b1fc:	str	r0, [fp, #-8]
   1b200:	str	r1, [fp, #-12]
   1b204:	ldr	r2, [fp, #-12]
   1b208:	ldr	r1, [fp, #-8]
   1b20c:	mov	r0, #0
   1b210:	bl	1b138 <__assert_fail@plt+0x9bcc>
   1b214:	mov	r3, r0
   1b218:	mov	r0, r3
   1b21c:	sub	sp, fp, #4
   1b220:	ldr	fp, [sp]
   1b224:	add	sp, sp, #4
   1b228:	pop	{pc}		; (ldr pc, [sp], #4)
   1b22c:	str	fp, [sp, #-8]!
   1b230:	str	lr, [sp, #4]
   1b234:	add	fp, sp, #4
   1b238:	sub	sp, sp, #16
   1b23c:	str	r0, [fp, #-8]
   1b240:	str	r1, [fp, #-12]
   1b244:	str	r2, [fp, #-16]
   1b248:	ldr	r3, [fp, #-16]
   1b24c:	ldr	r2, [fp, #-12]
   1b250:	ldr	r1, [fp, #-8]
   1b254:	mov	r0, #0
   1b258:	bl	1b190 <__assert_fail@plt+0x9c24>
   1b25c:	mov	r3, r0
   1b260:	mov	r0, r3
   1b264:	sub	sp, fp, #4
   1b268:	ldr	fp, [sp]
   1b26c:	add	sp, sp, #4
   1b270:	pop	{pc}		; (ldr pc, [sp], #4)
   1b274:	str	fp, [sp, #-8]!
   1b278:	str	lr, [sp, #4]
   1b27c:	add	fp, sp, #4
   1b280:	sub	sp, sp, #64	; 0x40
   1b284:	str	r0, [fp, #-56]	; 0xffffffc8
   1b288:	str	r1, [fp, #-60]	; 0xffffffc4
   1b28c:	mov	r3, r2
   1b290:	strb	r3, [fp, #-61]	; 0xffffffc3
   1b294:	movw	r2, #8876	; 0x22ac
   1b298:	movt	r2, #3
   1b29c:	sub	r3, fp, #52	; 0x34
   1b2a0:	ldrd	r0, [r2]
   1b2a4:	strd	r0, [r3]
   1b2a8:	ldrd	r0, [r2, #8]
   1b2ac:	strd	r0, [r3, #8]
   1b2b0:	ldrd	r0, [r2, #16]
   1b2b4:	strd	r0, [r3, #16]
   1b2b8:	ldrd	r0, [r2, #24]
   1b2bc:	strd	r0, [r3, #24]
   1b2c0:	ldrd	r0, [r2, #32]
   1b2c4:	strd	r0, [r3, #32]
   1b2c8:	ldrd	r0, [r2, #40]	; 0x28
   1b2cc:	strd	r0, [r3, #40]	; 0x28
   1b2d0:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   1b2d4:	sub	r3, fp, #52	; 0x34
   1b2d8:	mov	r2, #1
   1b2dc:	mov	r0, r3
   1b2e0:	bl	18f98 <__assert_fail@plt+0x7a2c>
   1b2e4:	sub	r3, fp, #52	; 0x34
   1b2e8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1b2ec:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1b2f0:	mov	r0, #0
   1b2f4:	bl	1ad3c <__assert_fail@plt+0x97d0>
   1b2f8:	mov	r3, r0
   1b2fc:	mov	r0, r3
   1b300:	sub	sp, fp, #4
   1b304:	ldr	fp, [sp]
   1b308:	add	sp, sp, #4
   1b30c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b310:	str	fp, [sp, #-8]!
   1b314:	str	lr, [sp, #4]
   1b318:	add	fp, sp, #4
   1b31c:	sub	sp, sp, #8
   1b320:	str	r0, [fp, #-8]
   1b324:	mov	r3, r1
   1b328:	strb	r3, [fp, #-9]
   1b32c:	ldrb	r3, [fp, #-9]
   1b330:	mov	r2, r3
   1b334:	mvn	r1, #0
   1b338:	ldr	r0, [fp, #-8]
   1b33c:	bl	1b274 <__assert_fail@plt+0x9d08>
   1b340:	mov	r3, r0
   1b344:	mov	r0, r3
   1b348:	sub	sp, fp, #4
   1b34c:	ldr	fp, [sp]
   1b350:	add	sp, sp, #4
   1b354:	pop	{pc}		; (ldr pc, [sp], #4)
   1b358:	str	fp, [sp, #-8]!
   1b35c:	str	lr, [sp, #4]
   1b360:	add	fp, sp, #4
   1b364:	sub	sp, sp, #8
   1b368:	str	r0, [fp, #-8]
   1b36c:	mov	r1, #58	; 0x3a
   1b370:	ldr	r0, [fp, #-8]
   1b374:	bl	1b310 <__assert_fail@plt+0x9da4>
   1b378:	mov	r3, r0
   1b37c:	mov	r0, r3
   1b380:	sub	sp, fp, #4
   1b384:	ldr	fp, [sp]
   1b388:	add	sp, sp, #4
   1b38c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b390:	str	fp, [sp, #-8]!
   1b394:	str	lr, [sp, #4]
   1b398:	add	fp, sp, #4
   1b39c:	sub	sp, sp, #8
   1b3a0:	str	r0, [fp, #-8]
   1b3a4:	str	r1, [fp, #-12]
   1b3a8:	mov	r2, #58	; 0x3a
   1b3ac:	ldr	r1, [fp, #-12]
   1b3b0:	ldr	r0, [fp, #-8]
   1b3b4:	bl	1b274 <__assert_fail@plt+0x9d08>
   1b3b8:	mov	r3, r0
   1b3bc:	mov	r0, r3
   1b3c0:	sub	sp, fp, #4
   1b3c4:	ldr	fp, [sp]
   1b3c8:	add	sp, sp, #4
   1b3cc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b3d0:	str	fp, [sp, #-8]!
   1b3d4:	str	lr, [sp, #4]
   1b3d8:	add	fp, sp, #4
   1b3dc:	sub	sp, sp, #112	; 0x70
   1b3e0:	str	r0, [fp, #-56]	; 0xffffffc8
   1b3e4:	str	r1, [fp, #-60]	; 0xffffffc4
   1b3e8:	str	r2, [fp, #-64]	; 0xffffffc0
   1b3ec:	sub	r3, fp, #116	; 0x74
   1b3f0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b3f4:	mov	r0, r3
   1b3f8:	bl	19138 <__assert_fail@plt+0x7bcc>
   1b3fc:	sub	r3, fp, #52	; 0x34
   1b400:	sub	r2, fp, #116	; 0x74
   1b404:	ldrd	r0, [r2]
   1b408:	strd	r0, [r3]
   1b40c:	ldrd	r0, [r2, #8]
   1b410:	strd	r0, [r3, #8]
   1b414:	ldrd	r0, [r2, #16]
   1b418:	strd	r0, [r3, #16]
   1b41c:	ldrd	r0, [r2, #24]
   1b420:	strd	r0, [r3, #24]
   1b424:	ldrd	r0, [r2, #32]
   1b428:	strd	r0, [r3, #32]
   1b42c:	ldrd	r0, [r2, #40]	; 0x28
   1b430:	strd	r0, [r3, #40]	; 0x28
   1b434:	sub	r3, fp, #52	; 0x34
   1b438:	mov	r2, #1
   1b43c:	mov	r1, #58	; 0x3a
   1b440:	mov	r0, r3
   1b444:	bl	18f98 <__assert_fail@plt+0x7a2c>
   1b448:	sub	r3, fp, #52	; 0x34
   1b44c:	mvn	r2, #0
   1b450:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1b454:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b458:	bl	1ad3c <__assert_fail@plt+0x97d0>
   1b45c:	mov	r3, r0
   1b460:	mov	r0, r3
   1b464:	sub	sp, fp, #4
   1b468:	ldr	fp, [sp]
   1b46c:	add	sp, sp, #4
   1b470:	pop	{pc}		; (ldr pc, [sp], #4)
   1b474:	str	fp, [sp, #-8]!
   1b478:	str	lr, [sp, #4]
   1b47c:	add	fp, sp, #4
   1b480:	sub	sp, sp, #24
   1b484:	str	r0, [fp, #-8]
   1b488:	str	r1, [fp, #-12]
   1b48c:	str	r2, [fp, #-16]
   1b490:	str	r3, [fp, #-20]	; 0xffffffec
   1b494:	mvn	r3, #0
   1b498:	str	r3, [sp]
   1b49c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b4a0:	ldr	r2, [fp, #-16]
   1b4a4:	ldr	r1, [fp, #-12]
   1b4a8:	ldr	r0, [fp, #-8]
   1b4ac:	bl	1b4c8 <__assert_fail@plt+0x9f5c>
   1b4b0:	mov	r3, r0
   1b4b4:	mov	r0, r3
   1b4b8:	sub	sp, fp, #4
   1b4bc:	ldr	fp, [sp]
   1b4c0:	add	sp, sp, #4
   1b4c4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b4c8:	str	fp, [sp, #-8]!
   1b4cc:	str	lr, [sp, #4]
   1b4d0:	add	fp, sp, #4
   1b4d4:	sub	sp, sp, #64	; 0x40
   1b4d8:	str	r0, [fp, #-56]	; 0xffffffc8
   1b4dc:	str	r1, [fp, #-60]	; 0xffffffc4
   1b4e0:	str	r2, [fp, #-64]	; 0xffffffc0
   1b4e4:	str	r3, [fp, #-68]	; 0xffffffbc
   1b4e8:	movw	r2, #8876	; 0x22ac
   1b4ec:	movt	r2, #3
   1b4f0:	sub	r3, fp, #52	; 0x34
   1b4f4:	ldrd	r0, [r2]
   1b4f8:	strd	r0, [r3]
   1b4fc:	ldrd	r0, [r2, #8]
   1b500:	strd	r0, [r3, #8]
   1b504:	ldrd	r0, [r2, #16]
   1b508:	strd	r0, [r3, #16]
   1b50c:	ldrd	r0, [r2, #24]
   1b510:	strd	r0, [r3, #24]
   1b514:	ldrd	r0, [r2, #32]
   1b518:	strd	r0, [r3, #32]
   1b51c:	ldrd	r0, [r2, #40]	; 0x28
   1b520:	strd	r0, [r3, #40]	; 0x28
   1b524:	sub	r3, fp, #52	; 0x34
   1b528:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b52c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b530:	mov	r0, r3
   1b534:	bl	190b0 <__assert_fail@plt+0x7b44>
   1b538:	sub	r3, fp, #52	; 0x34
   1b53c:	ldr	r2, [fp, #4]
   1b540:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1b544:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b548:	bl	1ad3c <__assert_fail@plt+0x97d0>
   1b54c:	mov	r3, r0
   1b550:	mov	r0, r3
   1b554:	sub	sp, fp, #4
   1b558:	ldr	fp, [sp]
   1b55c:	add	sp, sp, #4
   1b560:	pop	{pc}		; (ldr pc, [sp], #4)
   1b564:	str	fp, [sp, #-8]!
   1b568:	str	lr, [sp, #4]
   1b56c:	add	fp, sp, #4
   1b570:	sub	sp, sp, #16
   1b574:	str	r0, [fp, #-8]
   1b578:	str	r1, [fp, #-12]
   1b57c:	str	r2, [fp, #-16]
   1b580:	ldr	r3, [fp, #-16]
   1b584:	ldr	r2, [fp, #-12]
   1b588:	ldr	r1, [fp, #-8]
   1b58c:	mov	r0, #0
   1b590:	bl	1b474 <__assert_fail@plt+0x9f08>
   1b594:	mov	r3, r0
   1b598:	mov	r0, r3
   1b59c:	sub	sp, fp, #4
   1b5a0:	ldr	fp, [sp]
   1b5a4:	add	sp, sp, #4
   1b5a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b5ac:	str	fp, [sp, #-8]!
   1b5b0:	str	lr, [sp, #4]
   1b5b4:	add	fp, sp, #4
   1b5b8:	sub	sp, sp, #24
   1b5bc:	str	r0, [fp, #-8]
   1b5c0:	str	r1, [fp, #-12]
   1b5c4:	str	r2, [fp, #-16]
   1b5c8:	str	r3, [fp, #-20]	; 0xffffffec
   1b5cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b5d0:	str	r3, [sp]
   1b5d4:	ldr	r3, [fp, #-16]
   1b5d8:	ldr	r2, [fp, #-12]
   1b5dc:	ldr	r1, [fp, #-8]
   1b5e0:	mov	r0, #0
   1b5e4:	bl	1b4c8 <__assert_fail@plt+0x9f5c>
   1b5e8:	mov	r3, r0
   1b5ec:	mov	r0, r3
   1b5f0:	sub	sp, fp, #4
   1b5f4:	ldr	fp, [sp]
   1b5f8:	add	sp, sp, #4
   1b5fc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b600:	str	fp, [sp, #-8]!
   1b604:	str	lr, [sp, #4]
   1b608:	add	fp, sp, #4
   1b60c:	sub	sp, sp, #16
   1b610:	str	r0, [fp, #-8]
   1b614:	str	r1, [fp, #-12]
   1b618:	str	r2, [fp, #-16]
   1b61c:	movw	r3, #8584	; 0x2188
   1b620:	movt	r3, #3
   1b624:	ldr	r2, [fp, #-16]
   1b628:	ldr	r1, [fp, #-12]
   1b62c:	ldr	r0, [fp, #-8]
   1b630:	bl	1ad3c <__assert_fail@plt+0x97d0>
   1b634:	mov	r3, r0
   1b638:	mov	r0, r3
   1b63c:	sub	sp, fp, #4
   1b640:	ldr	fp, [sp]
   1b644:	add	sp, sp, #4
   1b648:	pop	{pc}		; (ldr pc, [sp], #4)
   1b64c:	str	fp, [sp, #-8]!
   1b650:	str	lr, [sp, #4]
   1b654:	add	fp, sp, #4
   1b658:	sub	sp, sp, #8
   1b65c:	str	r0, [fp, #-8]
   1b660:	str	r1, [fp, #-12]
   1b664:	ldr	r2, [fp, #-12]
   1b668:	ldr	r1, [fp, #-8]
   1b66c:	mov	r0, #0
   1b670:	bl	1b600 <__assert_fail@plt+0xa094>
   1b674:	mov	r3, r0
   1b678:	mov	r0, r3
   1b67c:	sub	sp, fp, #4
   1b680:	ldr	fp, [sp]
   1b684:	add	sp, sp, #4
   1b688:	pop	{pc}		; (ldr pc, [sp], #4)
   1b68c:	str	fp, [sp, #-8]!
   1b690:	str	lr, [sp, #4]
   1b694:	add	fp, sp, #4
   1b698:	sub	sp, sp, #8
   1b69c:	str	r0, [fp, #-8]
   1b6a0:	str	r1, [fp, #-12]
   1b6a4:	mvn	r2, #0
   1b6a8:	ldr	r1, [fp, #-12]
   1b6ac:	ldr	r0, [fp, #-8]
   1b6b0:	bl	1b600 <__assert_fail@plt+0xa094>
   1b6b4:	mov	r3, r0
   1b6b8:	mov	r0, r3
   1b6bc:	sub	sp, fp, #4
   1b6c0:	ldr	fp, [sp]
   1b6c4:	add	sp, sp, #4
   1b6c8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b6cc:	str	fp, [sp, #-8]!
   1b6d0:	str	lr, [sp, #4]
   1b6d4:	add	fp, sp, #4
   1b6d8:	sub	sp, sp, #8
   1b6dc:	str	r0, [fp, #-8]
   1b6e0:	ldr	r1, [fp, #-8]
   1b6e4:	mov	r0, #0
   1b6e8:	bl	1b68c <__assert_fail@plt+0xa120>
   1b6ec:	mov	r3, r0
   1b6f0:	mov	r0, r3
   1b6f4:	sub	sp, fp, #4
   1b6f8:	ldr	fp, [sp]
   1b6fc:	add	sp, sp, #4
   1b700:	pop	{pc}		; (ldr pc, [sp], #4)
   1b704:	str	fp, [sp, #-8]!
   1b708:	str	lr, [sp, #4]
   1b70c:	add	fp, sp, #4
   1b710:	sub	sp, sp, #24
   1b714:	str	r0, [fp, #-16]
   1b718:	str	r1, [fp, #-20]	; 0xffffffec
   1b71c:	str	r2, [fp, #-24]	; 0xffffffe8
   1b720:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b724:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b728:	ldr	r0, [fp, #-16]
   1b72c:	bl	111d0 <read@plt>
   1b730:	str	r0, [fp, #-8]
   1b734:	ldr	r3, [fp, #-8]
   1b738:	cmp	r3, #0
   1b73c:	blt	1b748 <__assert_fail@plt+0xa1dc>
   1b740:	ldr	r3, [fp, #-8]
   1b744:	b	1b7a4 <__assert_fail@plt+0xa238>
   1b748:	bl	113ec <__errno_location@plt>
   1b74c:	mov	r3, r0
   1b750:	ldr	r3, [r3]
   1b754:	cmp	r3, #4
   1b758:	beq	1b79c <__assert_fail@plt+0xa230>
   1b75c:	bl	113ec <__errno_location@plt>
   1b760:	mov	r3, r0
   1b764:	ldr	r3, [r3]
   1b768:	cmp	r3, #22
   1b76c:	bne	1b794 <__assert_fail@plt+0xa228>
   1b770:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b774:	mov	r3, #0
   1b778:	movt	r3, #32752	; 0x7ff0
   1b77c:	cmp	r2, r3
   1b780:	bls	1b794 <__assert_fail@plt+0xa228>
   1b784:	mov	r3, #0
   1b788:	movt	r3, #32752	; 0x7ff0
   1b78c:	str	r3, [fp, #-24]	; 0xffffffe8
   1b790:	b	1b7a0 <__assert_fail@plt+0xa234>
   1b794:	ldr	r3, [fp, #-8]
   1b798:	b	1b7a4 <__assert_fail@plt+0xa238>
   1b79c:	nop	{0}
   1b7a0:	b	1b720 <__assert_fail@plt+0xa1b4>
   1b7a4:	mov	r0, r3
   1b7a8:	sub	sp, fp, #4
   1b7ac:	ldr	fp, [sp]
   1b7b0:	add	sp, sp, #4
   1b7b4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b7b8:	str	fp, [sp, #-8]!
   1b7bc:	str	lr, [sp, #4]
   1b7c0:	add	fp, sp, #4
   1b7c4:	sub	sp, sp, #16
   1b7c8:	str	r0, [fp, #-16]
   1b7cc:	str	r1, [fp, #-20]	; 0xffffffec
   1b7d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b7d4:	mov	r1, #0
   1b7d8:	ldr	r0, [fp, #-16]
   1b7dc:	bl	11440 <memchr@plt>
   1b7e0:	str	r0, [fp, #-8]
   1b7e4:	ldr	r3, [fp, #-8]
   1b7e8:	cmp	r3, #0
   1b7ec:	beq	1b804 <__assert_fail@plt+0xa298>
   1b7f0:	ldr	r2, [fp, #-8]
   1b7f4:	ldr	r3, [fp, #-16]
   1b7f8:	sub	r3, r2, r3
   1b7fc:	add	r3, r3, #1
   1b800:	b	1b808 <__assert_fail@plt+0xa29c>
   1b804:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b808:	mov	r0, r3
   1b80c:	sub	sp, fp, #4
   1b810:	ldr	fp, [sp]
   1b814:	add	sp, sp, #4
   1b818:	pop	{pc}		; (ldr pc, [sp], #4)
   1b81c:	str	fp, [sp, #-8]!
   1b820:	str	lr, [sp, #4]
   1b824:	add	fp, sp, #4
   1b828:	sub	sp, sp, #16
   1b82c:	str	r0, [fp, #-16]
   1b830:	ldr	r3, [fp, #-16]
   1b834:	cmp	r3, #0
   1b838:	blt	1b884 <__assert_fail@plt+0xa318>
   1b83c:	ldr	r3, [fp, #-16]
   1b840:	cmp	r3, #2
   1b844:	bgt	1b884 <__assert_fail@plt+0xa318>
   1b848:	ldr	r0, [fp, #-16]
   1b84c:	bl	1e5e4 <__assert_fail@plt+0xd078>
   1b850:	str	r0, [fp, #-8]
   1b854:	bl	113ec <__errno_location@plt>
   1b858:	mov	r3, r0
   1b85c:	ldr	r3, [r3]
   1b860:	str	r3, [fp, #-12]
   1b864:	ldr	r0, [fp, #-16]
   1b868:	bl	11554 <close@plt>
   1b86c:	bl	113ec <__errno_location@plt>
   1b870:	mov	r2, r0
   1b874:	ldr	r3, [fp, #-12]
   1b878:	str	r3, [r2]
   1b87c:	ldr	r3, [fp, #-8]
   1b880:	str	r3, [fp, #-16]
   1b884:	ldr	r3, [fp, #-16]
   1b888:	mov	r0, r3
   1b88c:	sub	sp, fp, #4
   1b890:	ldr	fp, [sp]
   1b894:	add	sp, sp, #4
   1b898:	pop	{pc}		; (ldr pc, [sp], #4)
   1b89c:	str	r4, [sp, #-12]!
   1b8a0:	str	fp, [sp, #4]
   1b8a4:	str	lr, [sp, #8]
   1b8a8:	add	fp, sp, #8
   1b8ac:	sub	sp, sp, #20
   1b8b0:	str	r0, [fp, #-24]	; 0xffffffe8
   1b8b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b8b8:	bl	11464 <pipe@plt>
   1b8bc:	mov	r3, r0
   1b8c0:	cmp	r3, #0
   1b8c4:	bne	1b98c <__assert_fail@plt+0xa420>
   1b8c8:	mov	r3, #0
   1b8cc:	str	r3, [fp, #-16]
   1b8d0:	b	1b978 <__assert_fail@plt+0xa40c>
   1b8d4:	ldr	r3, [fp, #-16]
   1b8d8:	lsl	r3, r3, #2
   1b8dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b8e0:	add	r3, r2, r3
   1b8e4:	ldr	r1, [r3]
   1b8e8:	ldr	r3, [fp, #-16]
   1b8ec:	lsl	r3, r3, #2
   1b8f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b8f4:	add	r4, r2, r3
   1b8f8:	mov	r0, r1
   1b8fc:	bl	1b81c <__assert_fail@plt+0xa2b0>
   1b900:	mov	r3, r0
   1b904:	str	r3, [r4]
   1b908:	ldr	r3, [fp, #-16]
   1b90c:	lsl	r3, r3, #2
   1b910:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b914:	add	r3, r2, r3
   1b918:	ldr	r3, [r3]
   1b91c:	cmp	r3, #0
   1b920:	bge	1b96c <__assert_fail@plt+0xa400>
   1b924:	bl	113ec <__errno_location@plt>
   1b928:	mov	r3, r0
   1b92c:	ldr	r3, [r3]
   1b930:	str	r3, [fp, #-20]	; 0xffffffec
   1b934:	ldr	r3, [fp, #-16]
   1b938:	rsb	r3, r3, #1
   1b93c:	lsl	r3, r3, #2
   1b940:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b944:	add	r3, r2, r3
   1b948:	ldr	r3, [r3]
   1b94c:	mov	r0, r3
   1b950:	bl	11554 <close@plt>
   1b954:	bl	113ec <__errno_location@plt>
   1b958:	mov	r2, r0
   1b95c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b960:	str	r3, [r2]
   1b964:	mvn	r3, #0
   1b968:	b	1b990 <__assert_fail@plt+0xa424>
   1b96c:	ldr	r3, [fp, #-16]
   1b970:	add	r3, r3, #1
   1b974:	str	r3, [fp, #-16]
   1b978:	ldr	r3, [fp, #-16]
   1b97c:	cmp	r3, #1
   1b980:	ble	1b8d4 <__assert_fail@plt+0xa368>
   1b984:	mov	r3, #0
   1b988:	b	1b990 <__assert_fail@plt+0xa424>
   1b98c:	mvn	r3, #0
   1b990:	mov	r0, r3
   1b994:	sub	sp, fp, #8
   1b998:	ldr	r4, [sp]
   1b99c:	ldr	fp, [sp, #4]
   1b9a0:	add	sp, sp, #8
   1b9a4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b9a8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b9ac:	strd	r6, [sp, #8]
   1b9b0:	str	fp, [sp, #16]
   1b9b4:	str	lr, [sp, #20]
   1b9b8:	add	fp, sp, #20
   1b9bc:	sub	sp, sp, #48	; 0x30
   1b9c0:	str	r0, [fp, #-24]	; 0xffffffe8
   1b9c4:	str	r1, [fp, #-28]	; 0xffffffe4
   1b9c8:	str	r2, [fp, #-32]	; 0xffffffe0
   1b9cc:	str	r3, [fp, #-36]	; 0xffffffdc
   1b9d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b9d4:	cmp	r3, #0
   1b9d8:	beq	1ba00 <__assert_fail@plt+0xa494>
   1b9dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b9e0:	str	r3, [sp]
   1b9e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b9e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b9ec:	movw	r1, #3172	; 0xc64
   1b9f0:	movt	r1, #2
   1b9f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b9f8:	bl	113e0 <fprintf@plt>
   1b9fc:	b	1ba18 <__assert_fail@plt+0xa4ac>
   1ba00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ba04:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ba08:	movw	r1, #3184	; 0xc70
   1ba0c:	movt	r1, #2
   1ba10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ba14:	bl	113e0 <fprintf@plt>
   1ba18:	movw	r0, #3192	; 0xc78
   1ba1c:	movt	r0, #2
   1ba20:	bl	113a4 <gettext@plt>
   1ba24:	mov	r2, r0
   1ba28:	movw	r3, #2022	; 0x7e6
   1ba2c:	movw	r1, #3976	; 0xf88
   1ba30:	movt	r1, #2
   1ba34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ba38:	bl	113e0 <fprintf@plt>
   1ba3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ba40:	mov	r0, #10
   1ba44:	bl	114c4 <fputc@plt>
   1ba48:	movw	r0, #3196	; 0xc7c
   1ba4c:	movt	r0, #2
   1ba50:	bl	113a4 <gettext@plt>
   1ba54:	mov	r3, r0
   1ba58:	movw	r2, #3368	; 0xd28
   1ba5c:	movt	r2, #2
   1ba60:	mov	r1, r3
   1ba64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ba68:	bl	113e0 <fprintf@plt>
   1ba6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ba70:	mov	r0, #10
   1ba74:	bl	114c4 <fputc@plt>
   1ba78:	ldr	r3, [fp, #8]
   1ba7c:	cmp	r3, #9
   1ba80:	ldrls	pc, [pc, r3, lsl #2]
   1ba84:	b	1be64 <__assert_fail@plt+0xa8f8>
   1ba88:	andeq	fp, r1, r0, lsl pc
   1ba8c:			; <UNDEFINED> instruction: 0x0001bab0
   1ba90:	ldrdeq	fp, [r1], -r8
   1ba94:	andeq	fp, r1, r8, lsl #22
   1ba98:	andeq	fp, r1, ip, asr #22
   1ba9c:	andeq	fp, r1, r8, lsr #23
   1baa0:	andeq	fp, r1, r4, lsl ip
   1baa4:	muleq	r1, r0, ip
   1baa8:	andeq	fp, r1, ip, lsl sp
   1baac:			; <UNDEFINED> instruction: 0x0001bdb8
   1bab0:	movw	r0, #3404	; 0xd4c
   1bab4:	movt	r0, #2
   1bab8:	bl	113a4 <gettext@plt>
   1babc:	mov	r1, r0
   1bac0:	ldr	r3, [fp, #4]
   1bac4:	ldr	r3, [r3]
   1bac8:	mov	r2, r3
   1bacc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bad0:	bl	113e0 <fprintf@plt>
   1bad4:	b	1bf14 <__assert_fail@plt+0xa9a8>
   1bad8:	movw	r0, #3420	; 0xd5c
   1badc:	movt	r0, #2
   1bae0:	bl	113a4 <gettext@plt>
   1bae4:	mov	r1, r0
   1bae8:	ldr	r3, [fp, #4]
   1baec:	ldr	r2, [r3]
   1baf0:	ldr	r3, [fp, #4]
   1baf4:	add	r3, r3, #4
   1baf8:	ldr	r3, [r3]
   1bafc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb00:	bl	113e0 <fprintf@plt>
   1bb04:	b	1bf14 <__assert_fail@plt+0xa9a8>
   1bb08:	movw	r0, #3444	; 0xd74
   1bb0c:	movt	r0, #2
   1bb10:	bl	113a4 <gettext@plt>
   1bb14:	ldr	r3, [fp, #4]
   1bb18:	ldr	r2, [r3]
   1bb1c:	ldr	r3, [fp, #4]
   1bb20:	add	r3, r3, #4
   1bb24:	ldr	r1, [r3]
   1bb28:	ldr	r3, [fp, #4]
   1bb2c:	add	r3, r3, #8
   1bb30:	ldr	r3, [r3]
   1bb34:	str	r3, [sp]
   1bb38:	mov	r3, r1
   1bb3c:	mov	r1, r0
   1bb40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb44:	bl	113e0 <fprintf@plt>
   1bb48:	b	1bf14 <__assert_fail@plt+0xa9a8>
   1bb4c:	movw	r0, #3472	; 0xd90
   1bb50:	movt	r0, #2
   1bb54:	bl	113a4 <gettext@plt>
   1bb58:	mov	ip, r0
   1bb5c:	ldr	r3, [fp, #4]
   1bb60:	ldr	r1, [r3]
   1bb64:	ldr	r3, [fp, #4]
   1bb68:	add	r3, r3, #4
   1bb6c:	ldr	r0, [r3]
   1bb70:	ldr	r3, [fp, #4]
   1bb74:	add	r3, r3, #8
   1bb78:	ldr	r3, [r3]
   1bb7c:	ldr	r2, [fp, #4]
   1bb80:	add	r2, r2, #12
   1bb84:	ldr	r2, [r2]
   1bb88:	str	r2, [sp, #4]
   1bb8c:	str	r3, [sp]
   1bb90:	mov	r3, r0
   1bb94:	mov	r2, r1
   1bb98:	mov	r1, ip
   1bb9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bba0:	bl	113e0 <fprintf@plt>
   1bba4:	b	1bf14 <__assert_fail@plt+0xa9a8>
   1bba8:	movw	r0, #3504	; 0xdb0
   1bbac:	movt	r0, #2
   1bbb0:	bl	113a4 <gettext@plt>
   1bbb4:	mov	lr, r0
   1bbb8:	ldr	r3, [fp, #4]
   1bbbc:	ldr	r0, [r3]
   1bbc0:	ldr	r3, [fp, #4]
   1bbc4:	add	r3, r3, #4
   1bbc8:	ldr	ip, [r3]
   1bbcc:	ldr	r3, [fp, #4]
   1bbd0:	add	r3, r3, #8
   1bbd4:	ldr	r3, [r3]
   1bbd8:	ldr	r2, [fp, #4]
   1bbdc:	add	r2, r2, #12
   1bbe0:	ldr	r2, [r2]
   1bbe4:	ldr	r1, [fp, #4]
   1bbe8:	add	r1, r1, #16
   1bbec:	ldr	r1, [r1]
   1bbf0:	str	r1, [sp, #8]
   1bbf4:	str	r2, [sp, #4]
   1bbf8:	str	r3, [sp]
   1bbfc:	mov	r3, ip
   1bc00:	mov	r2, r0
   1bc04:	mov	r1, lr
   1bc08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bc0c:	bl	113e0 <fprintf@plt>
   1bc10:	b	1bf14 <__assert_fail@plt+0xa9a8>
   1bc14:	movw	r0, #3540	; 0xdd4
   1bc18:	movt	r0, #2
   1bc1c:	bl	113a4 <gettext@plt>
   1bc20:	mov	r4, r0
   1bc24:	ldr	r3, [fp, #4]
   1bc28:	ldr	ip, [r3]
   1bc2c:	ldr	r3, [fp, #4]
   1bc30:	add	r3, r3, #4
   1bc34:	ldr	lr, [r3]
   1bc38:	ldr	r3, [fp, #4]
   1bc3c:	add	r3, r3, #8
   1bc40:	ldr	r3, [r3]
   1bc44:	ldr	r2, [fp, #4]
   1bc48:	add	r2, r2, #12
   1bc4c:	ldr	r2, [r2]
   1bc50:	ldr	r1, [fp, #4]
   1bc54:	add	r1, r1, #16
   1bc58:	ldr	r1, [r1]
   1bc5c:	ldr	r0, [fp, #4]
   1bc60:	add	r0, r0, #20
   1bc64:	ldr	r0, [r0]
   1bc68:	str	r0, [sp, #12]
   1bc6c:	str	r1, [sp, #8]
   1bc70:	str	r2, [sp, #4]
   1bc74:	str	r3, [sp]
   1bc78:	mov	r3, lr
   1bc7c:	mov	r2, ip
   1bc80:	mov	r1, r4
   1bc84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bc88:	bl	113e0 <fprintf@plt>
   1bc8c:	b	1bf14 <__assert_fail@plt+0xa9a8>
   1bc90:	movw	r0, #3580	; 0xdfc
   1bc94:	movt	r0, #2
   1bc98:	bl	113a4 <gettext@plt>
   1bc9c:	mov	r5, r0
   1bca0:	ldr	r3, [fp, #4]
   1bca4:	ldr	lr, [r3]
   1bca8:	ldr	r3, [fp, #4]
   1bcac:	add	r3, r3, #4
   1bcb0:	ldr	r4, [r3]
   1bcb4:	ldr	r3, [fp, #4]
   1bcb8:	add	r3, r3, #8
   1bcbc:	ldr	r3, [r3]
   1bcc0:	ldr	r2, [fp, #4]
   1bcc4:	add	r2, r2, #12
   1bcc8:	ldr	r2, [r2]
   1bccc:	ldr	r1, [fp, #4]
   1bcd0:	add	r1, r1, #16
   1bcd4:	ldr	r1, [r1]
   1bcd8:	ldr	r0, [fp, #4]
   1bcdc:	add	r0, r0, #20
   1bce0:	ldr	r0, [r0]
   1bce4:	ldr	ip, [fp, #4]
   1bce8:	add	ip, ip, #24
   1bcec:	ldr	ip, [ip]
   1bcf0:	str	ip, [sp, #16]
   1bcf4:	str	r0, [sp, #12]
   1bcf8:	str	r1, [sp, #8]
   1bcfc:	str	r2, [sp, #4]
   1bd00:	str	r3, [sp]
   1bd04:	mov	r3, r4
   1bd08:	mov	r2, lr
   1bd0c:	mov	r1, r5
   1bd10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bd14:	bl	113e0 <fprintf@plt>
   1bd18:	b	1bf14 <__assert_fail@plt+0xa9a8>
   1bd1c:	movw	r0, #3624	; 0xe28
   1bd20:	movt	r0, #2
   1bd24:	bl	113a4 <gettext@plt>
   1bd28:	mov	r6, r0
   1bd2c:	ldr	r3, [fp, #4]
   1bd30:	ldr	r4, [r3]
   1bd34:	ldr	r3, [fp, #4]
   1bd38:	add	r3, r3, #4
   1bd3c:	ldr	r5, [r3]
   1bd40:	ldr	r3, [fp, #4]
   1bd44:	add	r3, r3, #8
   1bd48:	ldr	r3, [r3]
   1bd4c:	ldr	r2, [fp, #4]
   1bd50:	add	r2, r2, #12
   1bd54:	ldr	r2, [r2]
   1bd58:	ldr	r1, [fp, #4]
   1bd5c:	add	r1, r1, #16
   1bd60:	ldr	r1, [r1]
   1bd64:	ldr	r0, [fp, #4]
   1bd68:	add	r0, r0, #20
   1bd6c:	ldr	r0, [r0]
   1bd70:	ldr	ip, [fp, #4]
   1bd74:	add	ip, ip, #24
   1bd78:	ldr	ip, [ip]
   1bd7c:	ldr	lr, [fp, #4]
   1bd80:	add	lr, lr, #28
   1bd84:	ldr	lr, [lr]
   1bd88:	str	lr, [sp, #20]
   1bd8c:	str	ip, [sp, #16]
   1bd90:	str	r0, [sp, #12]
   1bd94:	str	r1, [sp, #8]
   1bd98:	str	r2, [sp, #4]
   1bd9c:	str	r3, [sp]
   1bda0:	mov	r3, r5
   1bda4:	mov	r2, r4
   1bda8:	mov	r1, r6
   1bdac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bdb0:	bl	113e0 <fprintf@plt>
   1bdb4:	b	1bf14 <__assert_fail@plt+0xa9a8>
   1bdb8:	movw	r0, #3672	; 0xe58
   1bdbc:	movt	r0, #2
   1bdc0:	bl	113a4 <gettext@plt>
   1bdc4:	mov	r7, r0
   1bdc8:	ldr	r3, [fp, #4]
   1bdcc:	ldr	r5, [r3]
   1bdd0:	ldr	r3, [fp, #4]
   1bdd4:	add	r3, r3, #4
   1bdd8:	ldr	r6, [r3]
   1bddc:	ldr	r3, [fp, #4]
   1bde0:	add	r3, r3, #8
   1bde4:	ldr	r3, [r3]
   1bde8:	ldr	r2, [fp, #4]
   1bdec:	add	r2, r2, #12
   1bdf0:	ldr	r2, [r2]
   1bdf4:	ldr	r1, [fp, #4]
   1bdf8:	add	r1, r1, #16
   1bdfc:	ldr	r1, [r1]
   1be00:	ldr	r0, [fp, #4]
   1be04:	add	r0, r0, #20
   1be08:	ldr	r0, [r0]
   1be0c:	ldr	ip, [fp, #4]
   1be10:	add	ip, ip, #24
   1be14:	ldr	ip, [ip]
   1be18:	ldr	lr, [fp, #4]
   1be1c:	add	lr, lr, #28
   1be20:	ldr	lr, [lr]
   1be24:	ldr	r4, [fp, #4]
   1be28:	add	r4, r4, #32
   1be2c:	ldr	r4, [r4]
   1be30:	str	r4, [sp, #24]
   1be34:	str	lr, [sp, #20]
   1be38:	str	ip, [sp, #16]
   1be3c:	str	r0, [sp, #12]
   1be40:	str	r1, [sp, #8]
   1be44:	str	r2, [sp, #4]
   1be48:	str	r3, [sp]
   1be4c:	mov	r3, r6
   1be50:	mov	r2, r5
   1be54:	mov	r1, r7
   1be58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be5c:	bl	113e0 <fprintf@plt>
   1be60:	b	1bf14 <__assert_fail@plt+0xa9a8>
   1be64:	movw	r0, #3724	; 0xe8c
   1be68:	movt	r0, #2
   1be6c:	bl	113a4 <gettext@plt>
   1be70:	mov	r7, r0
   1be74:	ldr	r3, [fp, #4]
   1be78:	ldr	r5, [r3]
   1be7c:	ldr	r3, [fp, #4]
   1be80:	add	r3, r3, #4
   1be84:	ldr	r6, [r3]
   1be88:	ldr	r3, [fp, #4]
   1be8c:	add	r3, r3, #8
   1be90:	ldr	r3, [r3]
   1be94:	ldr	r2, [fp, #4]
   1be98:	add	r2, r2, #12
   1be9c:	ldr	r2, [r2]
   1bea0:	ldr	r1, [fp, #4]
   1bea4:	add	r1, r1, #16
   1bea8:	ldr	r1, [r1]
   1beac:	ldr	r0, [fp, #4]
   1beb0:	add	r0, r0, #20
   1beb4:	ldr	r0, [r0]
   1beb8:	ldr	ip, [fp, #4]
   1bebc:	add	ip, ip, #24
   1bec0:	ldr	ip, [ip]
   1bec4:	ldr	lr, [fp, #4]
   1bec8:	add	lr, lr, #28
   1becc:	ldr	lr, [lr]
   1bed0:	ldr	r4, [fp, #4]
   1bed4:	add	r4, r4, #32
   1bed8:	ldr	r4, [r4]
   1bedc:	str	r4, [sp, #24]
   1bee0:	str	lr, [sp, #20]
   1bee4:	str	ip, [sp, #16]
   1bee8:	str	r0, [sp, #12]
   1beec:	str	r1, [sp, #8]
   1bef0:	str	r2, [sp, #4]
   1bef4:	str	r3, [sp]
   1bef8:	mov	r3, r6
   1befc:	mov	r2, r5
   1bf00:	mov	r1, r7
   1bf04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bf08:	bl	113e0 <fprintf@plt>
   1bf0c:	b	1bf14 <__assert_fail@plt+0xa9a8>
   1bf10:	nop	{0}
   1bf14:	nop	{0}
   1bf18:	sub	sp, fp, #20
   1bf1c:	ldrd	r4, [sp]
   1bf20:	ldrd	r6, [sp, #8]
   1bf24:	ldr	fp, [sp, #16]
   1bf28:	add	sp, sp, #20
   1bf2c:	pop	{pc}		; (ldr pc, [sp], #4)
   1bf30:	str	fp, [sp, #-8]!
   1bf34:	str	lr, [sp, #4]
   1bf38:	add	fp, sp, #4
   1bf3c:	sub	sp, sp, #32
   1bf40:	str	r0, [fp, #-16]
   1bf44:	str	r1, [fp, #-20]	; 0xffffffec
   1bf48:	str	r2, [fp, #-24]	; 0xffffffe8
   1bf4c:	str	r3, [fp, #-28]	; 0xffffffe4
   1bf50:	mov	r3, #0
   1bf54:	str	r3, [fp, #-8]
   1bf58:	b	1bf68 <__assert_fail@plt+0xa9fc>
   1bf5c:	ldr	r3, [fp, #-8]
   1bf60:	add	r3, r3, #1
   1bf64:	str	r3, [fp, #-8]
   1bf68:	ldr	r3, [fp, #-8]
   1bf6c:	lsl	r3, r3, #2
   1bf70:	ldr	r2, [fp, #4]
   1bf74:	add	r3, r2, r3
   1bf78:	ldr	r3, [r3]
   1bf7c:	cmp	r3, #0
   1bf80:	bne	1bf5c <__assert_fail@plt+0xa9f0>
   1bf84:	ldr	r3, [fp, #-8]
   1bf88:	str	r3, [sp, #4]
   1bf8c:	ldr	r3, [fp, #4]
   1bf90:	str	r3, [sp]
   1bf94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bf98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1bf9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bfa0:	ldr	r0, [fp, #-16]
   1bfa4:	bl	1b9a8 <__assert_fail@plt+0xa43c>
   1bfa8:	nop	{0}
   1bfac:	sub	sp, fp, #4
   1bfb0:	ldr	fp, [sp]
   1bfb4:	add	sp, sp, #4
   1bfb8:	pop	{pc}		; (ldr pc, [sp], #4)
   1bfbc:	str	fp, [sp, #-8]!
   1bfc0:	str	lr, [sp, #4]
   1bfc4:	add	fp, sp, #4
   1bfc8:	sub	sp, sp, #72	; 0x48
   1bfcc:	str	r0, [fp, #-56]	; 0xffffffc8
   1bfd0:	str	r1, [fp, #-60]	; 0xffffffc4
   1bfd4:	str	r2, [fp, #-64]	; 0xffffffc0
   1bfd8:	str	r3, [fp, #-68]	; 0xffffffbc
   1bfdc:	mov	r3, #0
   1bfe0:	str	r3, [fp, #-8]
   1bfe4:	b	1bff4 <__assert_fail@plt+0xaa88>
   1bfe8:	ldr	r3, [fp, #-8]
   1bfec:	add	r3, r3, #1
   1bff0:	str	r3, [fp, #-8]
   1bff4:	ldr	r3, [fp, #-8]
   1bff8:	cmp	r3, #9
   1bffc:	bhi	1c040 <__assert_fail@plt+0xaad4>
   1c000:	ldr	r3, [fp, #4]
   1c004:	add	r2, r3, #4
   1c008:	str	r2, [fp, #4]
   1c00c:	ldr	r2, [r3]
   1c010:	ldr	r3, [fp, #-8]
   1c014:	lsl	r3, r3, #2
   1c018:	sub	r1, fp, #4
   1c01c:	add	r3, r1, r3
   1c020:	str	r2, [r3, #-44]	; 0xffffffd4
   1c024:	ldr	r3, [fp, #-8]
   1c028:	lsl	r3, r3, #2
   1c02c:	sub	r2, fp, #4
   1c030:	add	r3, r2, r3
   1c034:	ldr	r3, [r3, #-44]	; 0xffffffd4
   1c038:	cmp	r3, #0
   1c03c:	bne	1bfe8 <__assert_fail@plt+0xaa7c>
   1c040:	ldr	r3, [fp, #-8]
   1c044:	str	r3, [sp, #4]
   1c048:	sub	r3, fp, #48	; 0x30
   1c04c:	str	r3, [sp]
   1c050:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1c054:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1c058:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1c05c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c060:	bl	1b9a8 <__assert_fail@plt+0xa43c>
   1c064:	nop	{0}
   1c068:	sub	sp, fp, #4
   1c06c:	ldr	fp, [sp]
   1c070:	add	sp, sp, #4
   1c074:	pop	{pc}		; (ldr pc, [sp], #4)
   1c078:	push	{r3}		; (str r3, [sp, #-4]!)
   1c07c:	str	fp, [sp, #-8]!
   1c080:	str	lr, [sp, #4]
   1c084:	add	fp, sp, #4
   1c088:	sub	sp, sp, #36	; 0x24
   1c08c:	str	r0, [fp, #-20]	; 0xffffffec
   1c090:	str	r1, [fp, #-24]	; 0xffffffe8
   1c094:	str	r2, [fp, #-28]	; 0xffffffe4
   1c098:	add	r3, fp, #8
   1c09c:	str	r3, [fp, #-12]
   1c0a0:	ldr	r3, [fp, #-12]
   1c0a4:	str	r3, [sp]
   1c0a8:	ldr	r3, [fp, #4]
   1c0ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c0b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c0b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c0b8:	bl	1bfbc <__assert_fail@plt+0xaa50>
   1c0bc:	nop	{0}
   1c0c0:	sub	sp, fp, #4
   1c0c4:	ldr	fp, [sp]
   1c0c8:	ldr	lr, [sp, #4]
   1c0cc:	add	sp, sp, #8
   1c0d0:	add	sp, sp, #4
   1c0d4:	bx	lr
   1c0d8:	str	fp, [sp, #-8]!
   1c0dc:	str	lr, [sp, #4]
   1c0e0:	add	fp, sp, #4
   1c0e4:	movw	r3, #8668	; 0x21dc
   1c0e8:	movt	r3, #3
   1c0ec:	ldr	r3, [r3]
   1c0f0:	mov	r1, r3
   1c0f4:	mov	r0, #10
   1c0f8:	bl	114c4 <fputc@plt>
   1c0fc:	movw	r0, #3784	; 0xec8
   1c100:	movt	r0, #2
   1c104:	bl	113a4 <gettext@plt>
   1c108:	mov	r3, r0
   1c10c:	movw	r1, #3804	; 0xedc
   1c110:	movt	r1, #2
   1c114:	mov	r0, r3
   1c118:	bl	111c4 <printf@plt>
   1c11c:	movw	r0, #3828	; 0xef4
   1c120:	movt	r0, #2
   1c124:	bl	113a4 <gettext@plt>
   1c128:	mov	r3, r0
   1c12c:	movw	r2, #3848	; 0xf08
   1c130:	movt	r2, #2
   1c134:	movw	r1, #3888	; 0xf30
   1c138:	movt	r1, #2
   1c13c:	mov	r0, r3
   1c140:	bl	111c4 <printf@plt>
   1c144:	movw	r0, #3904	; 0xf40
   1c148:	movt	r0, #2
   1c14c:	bl	113a4 <gettext@plt>
   1c150:	mov	r3, r0
   1c154:	movw	r1, #3944	; 0xf68
   1c158:	movt	r1, #2
   1c15c:	mov	r0, r3
   1c160:	bl	111c4 <printf@plt>
   1c164:	nop	{0}
   1c168:	sub	sp, fp, #4
   1c16c:	ldr	fp, [sp]
   1c170:	add	sp, sp, #4
   1c174:	pop	{pc}		; (ldr pc, [sp], #4)
   1c178:	str	fp, [sp, #-8]!
   1c17c:	str	lr, [sp, #4]
   1c180:	add	fp, sp, #4
   1c184:	sub	sp, sp, #16
   1c188:	str	r0, [fp, #-8]
   1c18c:	str	r1, [fp, #-12]
   1c190:	str	r2, [fp, #-16]
   1c194:	ldr	r2, [fp, #-16]
   1c198:	ldr	r1, [fp, #-12]
   1c19c:	ldr	r0, [fp, #-8]
   1c1a0:	bl	1c35c <__assert_fail@plt+0xadf0>
   1c1a4:	mov	r3, r0
   1c1a8:	mov	r0, r3
   1c1ac:	sub	sp, fp, #4
   1c1b0:	ldr	fp, [sp]
   1c1b4:	add	sp, sp, #4
   1c1b8:	pop	{pc}		; (ldr pc, [sp], #4)
   1c1bc:	str	fp, [sp, #-8]!
   1c1c0:	str	lr, [sp, #4]
   1c1c4:	add	fp, sp, #4
   1c1c8:	sub	sp, sp, #8
   1c1cc:	str	r0, [fp, #-8]
   1c1d0:	ldr	r3, [fp, #-8]
   1c1d4:	cmp	r3, #0
   1c1d8:	bne	1c1e0 <__assert_fail@plt+0xac74>
   1c1dc:	bl	1ca6c <__assert_fail@plt+0xb500>
   1c1e0:	ldr	r3, [fp, #-8]
   1c1e4:	mov	r0, r3
   1c1e8:	sub	sp, fp, #4
   1c1ec:	ldr	fp, [sp]
   1c1f0:	add	sp, sp, #4
   1c1f4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c1f8:	str	fp, [sp, #-8]!
   1c1fc:	str	lr, [sp, #4]
   1c200:	add	fp, sp, #4
   1c204:	sub	sp, sp, #8
   1c208:	str	r0, [fp, #-8]
   1c20c:	ldr	r0, [fp, #-8]
   1c210:	bl	1d97c <__assert_fail@plt+0xc410>
   1c214:	mov	r3, r0
   1c218:	mov	r0, r3
   1c21c:	bl	1c1bc <__assert_fail@plt+0xac50>
   1c220:	mov	r3, r0
   1c224:	mov	r0, r3
   1c228:	sub	sp, fp, #4
   1c22c:	ldr	fp, [sp]
   1c230:	add	sp, sp, #4
   1c234:	pop	{pc}		; (ldr pc, [sp], #4)
   1c238:	str	fp, [sp, #-8]!
   1c23c:	str	lr, [sp, #4]
   1c240:	add	fp, sp, #4
   1c244:	sub	sp, sp, #8
   1c248:	str	r0, [fp, #-8]
   1c24c:	ldr	r0, [fp, #-8]
   1c250:	bl	1de88 <__assert_fail@plt+0xc91c>
   1c254:	mov	r3, r0
   1c258:	mov	r0, r3
   1c25c:	bl	1c1bc <__assert_fail@plt+0xac50>
   1c260:	mov	r3, r0
   1c264:	mov	r0, r3
   1c268:	sub	sp, fp, #4
   1c26c:	ldr	fp, [sp]
   1c270:	add	sp, sp, #4
   1c274:	pop	{pc}		; (ldr pc, [sp], #4)
   1c278:	str	fp, [sp, #-8]!
   1c27c:	str	lr, [sp, #4]
   1c280:	add	fp, sp, #4
   1c284:	sub	sp, sp, #8
   1c288:	str	r0, [fp, #-8]
   1c28c:	ldr	r0, [fp, #-8]
   1c290:	bl	1c1f8 <__assert_fail@plt+0xac8c>
   1c294:	mov	r3, r0
   1c298:	mov	r0, r3
   1c29c:	sub	sp, fp, #4
   1c2a0:	ldr	fp, [sp]
   1c2a4:	add	sp, sp, #4
   1c2a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1c2ac:	str	fp, [sp, #-8]!
   1c2b0:	str	lr, [sp, #4]
   1c2b4:	add	fp, sp, #4
   1c2b8:	sub	sp, sp, #16
   1c2bc:	str	r0, [fp, #-16]
   1c2c0:	str	r1, [fp, #-20]	; 0xffffffec
   1c2c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c2c8:	ldr	r0, [fp, #-16]
   1c2cc:	bl	1dac4 <__assert_fail@plt+0xc558>
   1c2d0:	str	r0, [fp, #-8]
   1c2d4:	ldr	r3, [fp, #-8]
   1c2d8:	cmp	r3, #0
   1c2dc:	bne	1c2fc <__assert_fail@plt+0xad90>
   1c2e0:	ldr	r3, [fp, #-16]
   1c2e4:	cmp	r3, #0
   1c2e8:	beq	1c2f8 <__assert_fail@plt+0xad8c>
   1c2ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c2f0:	cmp	r3, #0
   1c2f4:	beq	1c2fc <__assert_fail@plt+0xad90>
   1c2f8:	bl	1ca6c <__assert_fail@plt+0xb500>
   1c2fc:	ldr	r3, [fp, #-8]
   1c300:	mov	r0, r3
   1c304:	sub	sp, fp, #4
   1c308:	ldr	fp, [sp]
   1c30c:	add	sp, sp, #4
   1c310:	pop	{pc}		; (ldr pc, [sp], #4)
   1c314:	str	fp, [sp, #-8]!
   1c318:	str	lr, [sp, #4]
   1c31c:	add	fp, sp, #4
   1c320:	sub	sp, sp, #8
   1c324:	str	r0, [fp, #-8]
   1c328:	str	r1, [fp, #-12]
   1c32c:	ldr	r1, [fp, #-12]
   1c330:	ldr	r0, [fp, #-8]
   1c334:	bl	1dec0 <__assert_fail@plt+0xc954>
   1c338:	mov	r3, r0
   1c33c:	mov	r0, r3
   1c340:	bl	1c1bc <__assert_fail@plt+0xac50>
   1c344:	mov	r3, r0
   1c348:	mov	r0, r3
   1c34c:	sub	sp, fp, #4
   1c350:	ldr	fp, [sp]
   1c354:	add	sp, sp, #4
   1c358:	pop	{pc}		; (ldr pc, [sp], #4)
   1c35c:	str	fp, [sp, #-8]!
   1c360:	str	lr, [sp, #4]
   1c364:	add	fp, sp, #4
   1c368:	sub	sp, sp, #24
   1c36c:	str	r0, [fp, #-16]
   1c370:	str	r1, [fp, #-20]	; 0xffffffec
   1c374:	str	r2, [fp, #-24]	; 0xffffffe8
   1c378:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c37c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c380:	ldr	r0, [fp, #-16]
   1c384:	bl	1db7c <__assert_fail@plt+0xc610>
   1c388:	str	r0, [fp, #-8]
   1c38c:	ldr	r3, [fp, #-8]
   1c390:	cmp	r3, #0
   1c394:	bne	1c3c0 <__assert_fail@plt+0xae54>
   1c398:	ldr	r3, [fp, #-16]
   1c39c:	cmp	r3, #0
   1c3a0:	beq	1c3bc <__assert_fail@plt+0xae50>
   1c3a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c3a8:	cmp	r3, #0
   1c3ac:	beq	1c3c0 <__assert_fail@plt+0xae54>
   1c3b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c3b4:	cmp	r3, #0
   1c3b8:	beq	1c3c0 <__assert_fail@plt+0xae54>
   1c3bc:	bl	1ca6c <__assert_fail@plt+0xb500>
   1c3c0:	ldr	r3, [fp, #-8]
   1c3c4:	mov	r0, r3
   1c3c8:	sub	sp, fp, #4
   1c3cc:	ldr	fp, [sp]
   1c3d0:	add	sp, sp, #4
   1c3d4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c3d8:	str	fp, [sp, #-8]!
   1c3dc:	str	lr, [sp, #4]
   1c3e0:	add	fp, sp, #4
   1c3e4:	sub	sp, sp, #16
   1c3e8:	str	r0, [fp, #-8]
   1c3ec:	str	r1, [fp, #-12]
   1c3f0:	str	r2, [fp, #-16]
   1c3f4:	ldr	r2, [fp, #-16]
   1c3f8:	ldr	r1, [fp, #-12]
   1c3fc:	ldr	r0, [fp, #-8]
   1c400:	bl	1df60 <__assert_fail@plt+0xc9f4>
   1c404:	mov	r3, r0
   1c408:	mov	r0, r3
   1c40c:	bl	1c1bc <__assert_fail@plt+0xac50>
   1c410:	mov	r3, r0
   1c414:	mov	r0, r3
   1c418:	sub	sp, fp, #4
   1c41c:	ldr	fp, [sp]
   1c420:	add	sp, sp, #4
   1c424:	pop	{pc}		; (ldr pc, [sp], #4)
   1c428:	str	fp, [sp, #-8]!
   1c42c:	str	lr, [sp, #4]
   1c430:	add	fp, sp, #4
   1c434:	sub	sp, sp, #8
   1c438:	str	r0, [fp, #-8]
   1c43c:	str	r1, [fp, #-12]
   1c440:	ldr	r2, [fp, #-12]
   1c444:	ldr	r1, [fp, #-8]
   1c448:	mov	r0, #0
   1c44c:	bl	1c35c <__assert_fail@plt+0xadf0>
   1c450:	mov	r3, r0
   1c454:	mov	r0, r3
   1c458:	sub	sp, fp, #4
   1c45c:	ldr	fp, [sp]
   1c460:	add	sp, sp, #4
   1c464:	pop	{pc}		; (ldr pc, [sp], #4)
   1c468:	str	fp, [sp, #-8]!
   1c46c:	str	lr, [sp, #4]
   1c470:	add	fp, sp, #4
   1c474:	sub	sp, sp, #8
   1c478:	str	r0, [fp, #-8]
   1c47c:	str	r1, [fp, #-12]
   1c480:	ldr	r2, [fp, #-12]
   1c484:	ldr	r1, [fp, #-8]
   1c488:	mov	r0, #0
   1c48c:	bl	1c3d8 <__assert_fail@plt+0xae6c>
   1c490:	mov	r3, r0
   1c494:	mov	r0, r3
   1c498:	sub	sp, fp, #4
   1c49c:	ldr	fp, [sp]
   1c4a0:	add	sp, sp, #4
   1c4a4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c4a8:	str	fp, [sp, #-8]!
   1c4ac:	str	lr, [sp, #4]
   1c4b0:	add	fp, sp, #4
   1c4b4:	sub	sp, sp, #8
   1c4b8:	str	r0, [fp, #-8]
   1c4bc:	str	r1, [fp, #-12]
   1c4c0:	mov	r2, #1
   1c4c4:	ldr	r1, [fp, #-12]
   1c4c8:	ldr	r0, [fp, #-8]
   1c4cc:	bl	1c4e8 <__assert_fail@plt+0xaf7c>
   1c4d0:	mov	r3, r0
   1c4d4:	mov	r0, r3
   1c4d8:	sub	sp, fp, #4
   1c4dc:	ldr	fp, [sp]
   1c4e0:	add	sp, sp, #4
   1c4e4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c4e8:	str	fp, [sp, #-8]!
   1c4ec:	str	lr, [sp, #4]
   1c4f0:	add	fp, sp, #4
   1c4f4:	sub	sp, sp, #24
   1c4f8:	str	r0, [fp, #-16]
   1c4fc:	str	r1, [fp, #-20]	; 0xffffffec
   1c500:	str	r2, [fp, #-24]	; 0xffffffe8
   1c504:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c508:	ldr	r3, [r3]
   1c50c:	str	r3, [fp, #-8]
   1c510:	ldr	r3, [fp, #-16]
   1c514:	cmp	r3, #0
   1c518:	bne	1c560 <__assert_fail@plt+0xaff4>
   1c51c:	ldr	r3, [fp, #-8]
   1c520:	cmp	r3, #0
   1c524:	bne	1c59c <__assert_fail@plt+0xb030>
   1c528:	mov	r2, #64	; 0x40
   1c52c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c530:	udiv	r3, r2, r3
   1c534:	str	r3, [fp, #-8]
   1c538:	ldr	r3, [fp, #-8]
   1c53c:	cmp	r3, #0
   1c540:	moveq	r3, #1
   1c544:	movne	r3, #0
   1c548:	uxtb	r3, r3
   1c54c:	mov	r2, r3
   1c550:	ldr	r3, [fp, #-8]
   1c554:	add	r3, r2, r3
   1c558:	str	r3, [fp, #-8]
   1c55c:	b	1c59c <__assert_fail@plt+0xb030>
   1c560:	ldr	r2, [fp, #-8]
   1c564:	ldr	r3, [fp, #-8]
   1c568:	lsr	r3, r3, #1
   1c56c:	add	r3, r3, #1
   1c570:	mov	r1, #0
   1c574:	adds	r3, r2, r3
   1c578:	bcc	1c580 <__assert_fail@plt+0xb014>
   1c57c:	mov	r1, #1
   1c580:	str	r3, [fp, #-8]
   1c584:	mov	r3, r1
   1c588:	and	r3, r3, #1
   1c58c:	uxtb	r3, r3
   1c590:	cmp	r3, #0
   1c594:	beq	1c59c <__assert_fail@plt+0xb030>
   1c598:	bl	1ca6c <__assert_fail@plt+0xb500>
   1c59c:	ldr	r3, [fp, #-8]
   1c5a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c5a4:	mov	r1, r3
   1c5a8:	ldr	r0, [fp, #-16]
   1c5ac:	bl	1c35c <__assert_fail@plt+0xadf0>
   1c5b0:	str	r0, [fp, #-16]
   1c5b4:	ldr	r2, [fp, #-8]
   1c5b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c5bc:	str	r2, [r3]
   1c5c0:	ldr	r3, [fp, #-16]
   1c5c4:	mov	r0, r3
   1c5c8:	sub	sp, fp, #4
   1c5cc:	ldr	fp, [sp]
   1c5d0:	add	sp, sp, #4
   1c5d4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c5d8:	str	fp, [sp, #-8]!
   1c5dc:	str	lr, [sp, #4]
   1c5e0:	add	fp, sp, #4
   1c5e4:	sub	sp, sp, #32
   1c5e8:	str	r0, [fp, #-24]	; 0xffffffe8
   1c5ec:	str	r1, [fp, #-28]	; 0xffffffe4
   1c5f0:	str	r2, [fp, #-32]	; 0xffffffe0
   1c5f4:	str	r3, [fp, #-36]	; 0xffffffdc
   1c5f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c5fc:	ldr	r3, [r3]
   1c600:	str	r3, [fp, #-8]
   1c604:	ldr	r3, [fp, #-8]
   1c608:	asr	r3, r3, #1
   1c60c:	mov	r1, #0
   1c610:	ldr	r2, [fp, #-8]
   1c614:	adds	r3, r2, r3
   1c618:	bvc	1c620 <__assert_fail@plt+0xb0b4>
   1c61c:	mov	r1, #1
   1c620:	str	r3, [fp, #-16]
   1c624:	mov	r3, r1
   1c628:	and	r3, r3, #1
   1c62c:	uxtb	r3, r3
   1c630:	cmp	r3, #0
   1c634:	beq	1c640 <__assert_fail@plt+0xb0d4>
   1c638:	mvn	r3, #-2147483648	; 0x80000000
   1c63c:	str	r3, [fp, #-16]
   1c640:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c644:	cmp	r3, #0
   1c648:	blt	1c664 <__assert_fail@plt+0xb0f8>
   1c64c:	ldr	r3, [fp, #-16]
   1c650:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c654:	cmp	r2, r3
   1c658:	bge	1c664 <__assert_fail@plt+0xb0f8>
   1c65c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c660:	str	r3, [fp, #-16]
   1c664:	ldr	r2, [fp, #-16]
   1c668:	mov	lr, #0
   1c66c:	ldr	r3, [fp, #4]
   1c670:	smull	r2, r3, r2, r3
   1c674:	mov	r0, #0
   1c678:	mov	r1, #0
   1c67c:	mov	r0, r3
   1c680:	asr	r1, r3, #31
   1c684:	asr	ip, r2, #31
   1c688:	cmp	ip, r0
   1c68c:	beq	1c694 <__assert_fail@plt+0xb128>
   1c690:	mov	lr, #1
   1c694:	mov	r3, r2
   1c698:	str	r3, [fp, #-20]	; 0xffffffec
   1c69c:	mov	r3, lr
   1c6a0:	and	r3, r3, #1
   1c6a4:	uxtb	r3, r3
   1c6a8:	cmp	r3, #0
   1c6ac:	beq	1c6b8 <__assert_fail@plt+0xb14c>
   1c6b0:	mvn	r3, #-2147483648	; 0x80000000
   1c6b4:	b	1c6d0 <__assert_fail@plt+0xb164>
   1c6b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c6bc:	cmp	r3, #63	; 0x3f
   1c6c0:	bgt	1c6cc <__assert_fail@plt+0xb160>
   1c6c4:	mov	r3, #64	; 0x40
   1c6c8:	b	1c6d0 <__assert_fail@plt+0xb164>
   1c6cc:	mov	r3, #0
   1c6d0:	str	r3, [fp, #-12]
   1c6d4:	ldr	r3, [fp, #-12]
   1c6d8:	cmp	r3, #0
   1c6dc:	beq	1c714 <__assert_fail@plt+0xb1a8>
   1c6e0:	ldr	r2, [fp, #-12]
   1c6e4:	ldr	r3, [fp, #4]
   1c6e8:	sdiv	r3, r2, r3
   1c6ec:	str	r3, [fp, #-16]
   1c6f0:	ldr	r3, [fp, #-12]
   1c6f4:	ldr	r2, [fp, #4]
   1c6f8:	sdiv	r2, r3, r2
   1c6fc:	ldr	r1, [fp, #4]
   1c700:	mul	r2, r1, r2
   1c704:	sub	r3, r3, r2
   1c708:	ldr	r2, [fp, #-12]
   1c70c:	sub	r3, r2, r3
   1c710:	str	r3, [fp, #-20]	; 0xffffffec
   1c714:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c718:	cmp	r3, #0
   1c71c:	bne	1c72c <__assert_fail@plt+0xb1c0>
   1c720:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c724:	mov	r2, #0
   1c728:	str	r2, [r3]
   1c72c:	ldr	r2, [fp, #-16]
   1c730:	ldr	r3, [fp, #-8]
   1c734:	sub	r3, r2, r3
   1c738:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c73c:	cmp	r2, r3
   1c740:	ble	1c7e0 <__assert_fail@plt+0xb274>
   1c744:	mov	r1, #0
   1c748:	ldr	r2, [fp, #-8]
   1c74c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c750:	adds	r3, r2, r3
   1c754:	bvc	1c75c <__assert_fail@plt+0xb1f0>
   1c758:	mov	r1, #1
   1c75c:	str	r3, [fp, #-16]
   1c760:	mov	r3, r1
   1c764:	and	r3, r3, #1
   1c768:	uxtb	r3, r3
   1c76c:	cmp	r3, #0
   1c770:	bne	1c7dc <__assert_fail@plt+0xb270>
   1c774:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c778:	cmp	r3, #0
   1c77c:	blt	1c790 <__assert_fail@plt+0xb224>
   1c780:	ldr	r3, [fp, #-16]
   1c784:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c788:	cmp	r2, r3
   1c78c:	blt	1c7dc <__assert_fail@plt+0xb270>
   1c790:	ldr	r2, [fp, #-16]
   1c794:	mov	lr, #0
   1c798:	ldr	r3, [fp, #4]
   1c79c:	smull	r2, r3, r2, r3
   1c7a0:	mov	r0, #0
   1c7a4:	mov	r1, #0
   1c7a8:	mov	r0, r3
   1c7ac:	asr	r1, r3, #31
   1c7b0:	asr	ip, r2, #31
   1c7b4:	cmp	ip, r0
   1c7b8:	beq	1c7c0 <__assert_fail@plt+0xb254>
   1c7bc:	mov	lr, #1
   1c7c0:	mov	r3, r2
   1c7c4:	str	r3, [fp, #-20]	; 0xffffffec
   1c7c8:	mov	r3, lr
   1c7cc:	and	r3, r3, #1
   1c7d0:	uxtb	r3, r3
   1c7d4:	cmp	r3, #0
   1c7d8:	beq	1c7e0 <__assert_fail@plt+0xb274>
   1c7dc:	bl	1ca6c <__assert_fail@plt+0xb500>
   1c7e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c7e4:	mov	r1, r3
   1c7e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c7ec:	bl	1c2ac <__assert_fail@plt+0xad40>
   1c7f0:	str	r0, [fp, #-24]	; 0xffffffe8
   1c7f4:	ldr	r2, [fp, #-16]
   1c7f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c7fc:	str	r2, [r3]
   1c800:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c804:	mov	r0, r3
   1c808:	sub	sp, fp, #4
   1c80c:	ldr	fp, [sp]
   1c810:	add	sp, sp, #4
   1c814:	pop	{pc}		; (ldr pc, [sp], #4)
   1c818:	str	fp, [sp, #-8]!
   1c81c:	str	lr, [sp, #4]
   1c820:	add	fp, sp, #4
   1c824:	sub	sp, sp, #8
   1c828:	str	r0, [fp, #-8]
   1c82c:	mov	r1, #1
   1c830:	ldr	r0, [fp, #-8]
   1c834:	bl	1c888 <__assert_fail@plt+0xb31c>
   1c838:	mov	r3, r0
   1c83c:	mov	r0, r3
   1c840:	sub	sp, fp, #4
   1c844:	ldr	fp, [sp]
   1c848:	add	sp, sp, #4
   1c84c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c850:	str	fp, [sp, #-8]!
   1c854:	str	lr, [sp, #4]
   1c858:	add	fp, sp, #4
   1c85c:	sub	sp, sp, #8
   1c860:	str	r0, [fp, #-8]
   1c864:	mov	r1, #1
   1c868:	ldr	r0, [fp, #-8]
   1c86c:	bl	1c8d0 <__assert_fail@plt+0xb364>
   1c870:	mov	r3, r0
   1c874:	mov	r0, r3
   1c878:	sub	sp, fp, #4
   1c87c:	ldr	fp, [sp]
   1c880:	add	sp, sp, #4
   1c884:	pop	{pc}		; (ldr pc, [sp], #4)
   1c888:	str	fp, [sp, #-8]!
   1c88c:	str	lr, [sp, #4]
   1c890:	add	fp, sp, #4
   1c894:	sub	sp, sp, #8
   1c898:	str	r0, [fp, #-8]
   1c89c:	str	r1, [fp, #-12]
   1c8a0:	ldr	r1, [fp, #-12]
   1c8a4:	ldr	r0, [fp, #-8]
   1c8a8:	bl	1d1ec <__assert_fail@plt+0xbc80>
   1c8ac:	mov	r3, r0
   1c8b0:	mov	r0, r3
   1c8b4:	bl	1c1bc <__assert_fail@plt+0xac50>
   1c8b8:	mov	r3, r0
   1c8bc:	mov	r0, r3
   1c8c0:	sub	sp, fp, #4
   1c8c4:	ldr	fp, [sp]
   1c8c8:	add	sp, sp, #4
   1c8cc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c8d0:	str	fp, [sp, #-8]!
   1c8d4:	str	lr, [sp, #4]
   1c8d8:	add	fp, sp, #4
   1c8dc:	sub	sp, sp, #8
   1c8e0:	str	r0, [fp, #-8]
   1c8e4:	str	r1, [fp, #-12]
   1c8e8:	ldr	r1, [fp, #-12]
   1c8ec:	ldr	r0, [fp, #-8]
   1c8f0:	bl	1df1c <__assert_fail@plt+0xc9b0>
   1c8f4:	mov	r3, r0
   1c8f8:	mov	r0, r3
   1c8fc:	bl	1c1bc <__assert_fail@plt+0xac50>
   1c900:	mov	r3, r0
   1c904:	mov	r0, r3
   1c908:	sub	sp, fp, #4
   1c90c:	ldr	fp, [sp]
   1c910:	add	sp, sp, #4
   1c914:	pop	{pc}		; (ldr pc, [sp], #4)
   1c918:	str	fp, [sp, #-8]!
   1c91c:	str	lr, [sp, #4]
   1c920:	add	fp, sp, #4
   1c924:	sub	sp, sp, #8
   1c928:	str	r0, [fp, #-8]
   1c92c:	str	r1, [fp, #-12]
   1c930:	ldr	r0, [fp, #-12]
   1c934:	bl	1c1f8 <__assert_fail@plt+0xac8c>
   1c938:	mov	r3, r0
   1c93c:	ldr	r2, [fp, #-12]
   1c940:	ldr	r1, [fp, #-8]
   1c944:	mov	r0, r3
   1c948:	bl	11218 <memcpy@plt>
   1c94c:	mov	r3, r0
   1c950:	mov	r0, r3
   1c954:	sub	sp, fp, #4
   1c958:	ldr	fp, [sp]
   1c95c:	add	sp, sp, #4
   1c960:	pop	{pc}		; (ldr pc, [sp], #4)
   1c964:	str	fp, [sp, #-8]!
   1c968:	str	lr, [sp, #4]
   1c96c:	add	fp, sp, #4
   1c970:	sub	sp, sp, #8
   1c974:	str	r0, [fp, #-8]
   1c978:	str	r1, [fp, #-12]
   1c97c:	ldr	r0, [fp, #-12]
   1c980:	bl	1c238 <__assert_fail@plt+0xaccc>
   1c984:	mov	r3, r0
   1c988:	mov	r0, r3
   1c98c:	ldr	r3, [fp, #-12]
   1c990:	mov	r2, r3
   1c994:	ldr	r1, [fp, #-8]
   1c998:	bl	11218 <memcpy@plt>
   1c99c:	mov	r3, r0
   1c9a0:	mov	r0, r3
   1c9a4:	sub	sp, fp, #4
   1c9a8:	ldr	fp, [sp]
   1c9ac:	add	sp, sp, #4
   1c9b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1c9b4:	str	fp, [sp, #-8]!
   1c9b8:	str	lr, [sp, #4]
   1c9bc:	add	fp, sp, #4
   1c9c0:	sub	sp, sp, #16
   1c9c4:	str	r0, [fp, #-16]
   1c9c8:	str	r1, [fp, #-20]	; 0xffffffec
   1c9cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c9d0:	add	r3, r3, #1
   1c9d4:	mov	r0, r3
   1c9d8:	bl	1c238 <__assert_fail@plt+0xaccc>
   1c9dc:	mov	r3, r0
   1c9e0:	str	r3, [fp, #-8]
   1c9e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c9e8:	ldr	r2, [fp, #-8]
   1c9ec:	add	r3, r2, r3
   1c9f0:	mov	r2, #0
   1c9f4:	strb	r2, [r3]
   1c9f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c9fc:	mov	r2, r3
   1ca00:	ldr	r1, [fp, #-16]
   1ca04:	ldr	r0, [fp, #-8]
   1ca08:	bl	11218 <memcpy@plt>
   1ca0c:	mov	r3, r0
   1ca10:	mov	r0, r3
   1ca14:	sub	sp, fp, #4
   1ca18:	ldr	fp, [sp]
   1ca1c:	add	sp, sp, #4
   1ca20:	pop	{pc}		; (ldr pc, [sp], #4)
   1ca24:	str	fp, [sp, #-8]!
   1ca28:	str	lr, [sp, #4]
   1ca2c:	add	fp, sp, #4
   1ca30:	sub	sp, sp, #8
   1ca34:	str	r0, [fp, #-8]
   1ca38:	ldr	r0, [fp, #-8]
   1ca3c:	bl	113bc <strlen@plt>
   1ca40:	mov	r3, r0
   1ca44:	add	r3, r3, #1
   1ca48:	mov	r1, r3
   1ca4c:	ldr	r0, [fp, #-8]
   1ca50:	bl	1c918 <__assert_fail@plt+0xb3ac>
   1ca54:	mov	r3, r0
   1ca58:	mov	r0, r3
   1ca5c:	sub	sp, fp, #4
   1ca60:	ldr	fp, [sp]
   1ca64:	add	sp, sp, #4
   1ca68:	pop	{pc}		; (ldr pc, [sp], #4)
   1ca6c:	strd	r4, [sp, #-16]!
   1ca70:	str	fp, [sp, #8]
   1ca74:	str	lr, [sp, #12]
   1ca78:	add	fp, sp, #12
   1ca7c:	movw	r3, #8564	; 0x2174
   1ca80:	movt	r3, #3
   1ca84:	ldr	r4, [r3]
   1ca88:	movw	r0, #4024	; 0xfb8
   1ca8c:	movt	r0, #2
   1ca90:	bl	113a4 <gettext@plt>
   1ca94:	mov	r3, r0
   1ca98:	movw	r2, #4044	; 0xfcc
   1ca9c:	movt	r2, #2
   1caa0:	mov	r1, #0
   1caa4:	mov	r0, r4
   1caa8:	bl	11314 <error@plt>
   1caac:	bl	1153c <abort@plt>
   1cab0:	push	{fp}		; (str fp, [sp, #-4]!)
   1cab4:	add	fp, sp, #0
   1cab8:	sub	sp, sp, #12
   1cabc:	str	r0, [fp, #-8]
   1cac0:	str	r1, [fp, #-12]
   1cac4:	ldr	r3, [fp, #-8]
   1cac8:	ldr	r2, [r3]
   1cacc:	ldr	r3, [fp, #-12]
   1cad0:	mov	r1, #0
   1cad4:	umull	r2, r3, r3, r2
   1cad8:	cmp	r3, #0
   1cadc:	beq	1cae4 <__assert_fail@plt+0xb578>
   1cae0:	mov	r1, #1
   1cae4:	mov	r3, r1
   1cae8:	cmp	r3, #0
   1caec:	beq	1cb04 <__assert_fail@plt+0xb598>
   1caf0:	ldr	r3, [fp, #-8]
   1caf4:	mvn	r2, #0
   1caf8:	str	r2, [r3]
   1cafc:	mov	r3, #1
   1cb00:	b	1cb20 <__assert_fail@plt+0xb5b4>
   1cb04:	ldr	r3, [fp, #-8]
   1cb08:	ldr	r3, [r3]
   1cb0c:	ldr	r2, [fp, #-12]
   1cb10:	mul	r2, r2, r3
   1cb14:	ldr	r3, [fp, #-8]
   1cb18:	str	r2, [r3]
   1cb1c:	mov	r3, #0
   1cb20:	mov	r0, r3
   1cb24:	add	sp, fp, #0
   1cb28:	pop	{fp}		; (ldr fp, [sp], #4)
   1cb2c:	bx	lr
   1cb30:	str	fp, [sp, #-8]!
   1cb34:	str	lr, [sp, #4]
   1cb38:	add	fp, sp, #4
   1cb3c:	sub	sp, sp, #24
   1cb40:	str	r0, [fp, #-16]
   1cb44:	str	r1, [fp, #-20]	; 0xffffffec
   1cb48:	str	r2, [fp, #-24]	; 0xffffffe8
   1cb4c:	mov	r3, #0
   1cb50:	str	r3, [fp, #-8]
   1cb54:	b	1cb74 <__assert_fail@plt+0xb608>
   1cb58:	ldr	r1, [fp, #-20]	; 0xffffffec
   1cb5c:	ldr	r0, [fp, #-16]
   1cb60:	bl	1cab0 <__assert_fail@plt+0xb544>
   1cb64:	mov	r2, r0
   1cb68:	ldr	r3, [fp, #-8]
   1cb6c:	orr	r3, r3, r2
   1cb70:	str	r3, [fp, #-8]
   1cb74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cb78:	sub	r2, r3, #1
   1cb7c:	str	r2, [fp, #-24]	; 0xffffffe8
   1cb80:	cmp	r3, #0
   1cb84:	bne	1cb58 <__assert_fail@plt+0xb5ec>
   1cb88:	ldr	r3, [fp, #-8]
   1cb8c:	mov	r0, r3
   1cb90:	sub	sp, fp, #4
   1cb94:	ldr	fp, [sp]
   1cb98:	add	sp, sp, #4
   1cb9c:	pop	{pc}		; (ldr pc, [sp], #4)
   1cba0:	str	fp, [sp, #-8]!
   1cba4:	str	lr, [sp, #4]
   1cba8:	add	fp, sp, #4
   1cbac:	sub	sp, sp, #56	; 0x38
   1cbb0:	str	r0, [fp, #-48]	; 0xffffffd0
   1cbb4:	str	r1, [fp, #-52]	; 0xffffffcc
   1cbb8:	str	r2, [fp, #-56]	; 0xffffffc8
   1cbbc:	str	r3, [fp, #-60]	; 0xffffffc4
   1cbc0:	mov	r3, #0
   1cbc4:	str	r3, [fp, #-8]
   1cbc8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cbcc:	cmp	r3, #0
   1cbd0:	blt	1cbe0 <__assert_fail@plt+0xb674>
   1cbd4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cbd8:	cmp	r3, #36	; 0x24
   1cbdc:	ble	1cc00 <__assert_fail@plt+0xb694>
   1cbe0:	movw	r3, #4100	; 0x1004
   1cbe4:	movt	r3, #2
   1cbe8:	mov	r2, #84	; 0x54
   1cbec:	movw	r1, #4048	; 0xfd0
   1cbf0:	movt	r1, #2
   1cbf4:	movw	r0, #4060	; 0xfdc
   1cbf8:	movt	r0, #2
   1cbfc:	bl	1156c <__assert_fail@plt>
   1cc00:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1cc04:	cmp	r3, #0
   1cc08:	bne	1cc14 <__assert_fail@plt+0xb6a8>
   1cc0c:	sub	r3, fp, #36	; 0x24
   1cc10:	b	1cc18 <__assert_fail@plt+0xb6ac>
   1cc14:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1cc18:	str	r3, [fp, #-32]	; 0xffffffe0
   1cc1c:	bl	113ec <__errno_location@plt>
   1cc20:	mov	r2, r0
   1cc24:	mov	r3, #0
   1cc28:	str	r3, [r2]
   1cc2c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1cc30:	str	r3, [fp, #-12]
   1cc34:	ldr	r3, [fp, #-12]
   1cc38:	ldrb	r3, [r3]
   1cc3c:	strb	r3, [fp, #-13]
   1cc40:	b	1cc5c <__assert_fail@plt+0xb6f0>
   1cc44:	ldr	r3, [fp, #-12]
   1cc48:	add	r3, r3, #1
   1cc4c:	str	r3, [fp, #-12]
   1cc50:	ldr	r3, [fp, #-12]
   1cc54:	ldrb	r3, [r3]
   1cc58:	strb	r3, [fp, #-13]
   1cc5c:	bl	11380 <__ctype_b_loc@plt>
   1cc60:	mov	r3, r0
   1cc64:	ldr	r2, [r3]
   1cc68:	ldrb	r3, [fp, #-13]
   1cc6c:	lsl	r3, r3, #1
   1cc70:	add	r3, r2, r3
   1cc74:	ldrh	r3, [r3]
   1cc78:	and	r3, r3, #8192	; 0x2000
   1cc7c:	cmp	r3, #0
   1cc80:	bne	1cc44 <__assert_fail@plt+0xb6d8>
   1cc84:	ldrb	r3, [fp, #-13]
   1cc88:	cmp	r3, #45	; 0x2d
   1cc8c:	bne	1cc98 <__assert_fail@plt+0xb72c>
   1cc90:	mov	r3, #4
   1cc94:	b	1d1d8 <__assert_fail@plt+0xbc6c>
   1cc98:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1cc9c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cca0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1cca4:	bl	113b0 <strtoul@plt>
   1cca8:	mov	r3, r0
   1ccac:	str	r3, [fp, #-40]	; 0xffffffd8
   1ccb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ccb4:	ldr	r3, [r3]
   1ccb8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ccbc:	cmp	r2, r3
   1ccc0:	bne	1cd1c <__assert_fail@plt+0xb7b0>
   1ccc4:	ldr	r3, [fp, #4]
   1ccc8:	cmp	r3, #0
   1cccc:	beq	1cd14 <__assert_fail@plt+0xb7a8>
   1ccd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ccd4:	ldr	r3, [r3]
   1ccd8:	ldrb	r3, [r3]
   1ccdc:	cmp	r3, #0
   1cce0:	beq	1cd14 <__assert_fail@plt+0xb7a8>
   1cce4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cce8:	ldr	r3, [r3]
   1ccec:	ldrb	r3, [r3]
   1ccf0:	mov	r1, r3
   1ccf4:	ldr	r0, [fp, #4]
   1ccf8:	bl	113c8 <strchr@plt>
   1ccfc:	mov	r3, r0
   1cd00:	cmp	r3, #0
   1cd04:	beq	1cd14 <__assert_fail@plt+0xb7a8>
   1cd08:	mov	r3, #1
   1cd0c:	str	r3, [fp, #-40]	; 0xffffffd8
   1cd10:	b	1cd54 <__assert_fail@plt+0xb7e8>
   1cd14:	mov	r3, #4
   1cd18:	b	1d1d8 <__assert_fail@plt+0xbc6c>
   1cd1c:	bl	113ec <__errno_location@plt>
   1cd20:	mov	r3, r0
   1cd24:	ldr	r3, [r3]
   1cd28:	cmp	r3, #0
   1cd2c:	beq	1cd54 <__assert_fail@plt+0xb7e8>
   1cd30:	bl	113ec <__errno_location@plt>
   1cd34:	mov	r3, r0
   1cd38:	ldr	r3, [r3]
   1cd3c:	cmp	r3, #34	; 0x22
   1cd40:	beq	1cd4c <__assert_fail@plt+0xb7e0>
   1cd44:	mov	r3, #4
   1cd48:	b	1d1d8 <__assert_fail@plt+0xbc6c>
   1cd4c:	mov	r3, #1
   1cd50:	str	r3, [fp, #-8]
   1cd54:	ldr	r3, [fp, #4]
   1cd58:	cmp	r3, #0
   1cd5c:	bne	1cd74 <__assert_fail@plt+0xb808>
   1cd60:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cd64:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1cd68:	str	r2, [r3]
   1cd6c:	ldr	r3, [fp, #-8]
   1cd70:	b	1d1d8 <__assert_fail@plt+0xbc6c>
   1cd74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cd78:	ldr	r3, [r3]
   1cd7c:	ldrb	r3, [r3]
   1cd80:	cmp	r3, #0
   1cd84:	beq	1d1c8 <__assert_fail@plt+0xbc5c>
   1cd88:	mov	r3, #1024	; 0x400
   1cd8c:	str	r3, [fp, #-20]	; 0xffffffec
   1cd90:	mov	r3, #1
   1cd94:	str	r3, [fp, #-24]	; 0xffffffe8
   1cd98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cd9c:	ldr	r3, [r3]
   1cda0:	ldrb	r3, [r3]
   1cda4:	mov	r1, r3
   1cda8:	ldr	r0, [fp, #4]
   1cdac:	bl	113c8 <strchr@plt>
   1cdb0:	mov	r3, r0
   1cdb4:	cmp	r3, #0
   1cdb8:	bne	1cdd4 <__assert_fail@plt+0xb868>
   1cdbc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cdc0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1cdc4:	str	r2, [r3]
   1cdc8:	ldr	r3, [fp, #-8]
   1cdcc:	orr	r3, r3, #2
   1cdd0:	b	1d1d8 <__assert_fail@plt+0xbc6c>
   1cdd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cdd8:	ldr	r3, [r3]
   1cddc:	ldrb	r3, [r3]
   1cde0:	sub	r3, r3, #69	; 0x45
   1cde4:	cmp	r3, #47	; 0x2f
   1cde8:	ldrls	pc, [pc, r3, lsl #2]
   1cdec:	b	1cf40 <__assert_fail@plt+0xb9d4>
   1cdf0:			; <UNDEFINED> instruction: 0x0001ceb0
   1cdf4:	andeq	ip, r1, r0, asr #30
   1cdf8:			; <UNDEFINED> instruction: 0x0001ceb0
   1cdfc:	andeq	ip, r1, r0, asr #30
   1ce00:	andeq	ip, r1, r0, asr #30
   1ce04:	andeq	ip, r1, r0, asr #30
   1ce08:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce0c:	andeq	ip, r1, r0, asr #30
   1ce10:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce14:	andeq	ip, r1, r0, asr #30
   1ce18:	andeq	ip, r1, r0, asr #30
   1ce1c:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce20:	andeq	ip, r1, r0, asr #30
   1ce24:	andeq	ip, r1, r0, asr #30
   1ce28:	andeq	ip, r1, r0, asr #30
   1ce2c:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce30:	andeq	ip, r1, r0, asr #30
   1ce34:	andeq	ip, r1, r0, asr #30
   1ce38:	andeq	ip, r1, r0, asr #30
   1ce3c:	andeq	ip, r1, r0, asr #30
   1ce40:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce44:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce48:	andeq	ip, r1, r0, asr #30
   1ce4c:	andeq	ip, r1, r0, asr #30
   1ce50:	andeq	ip, r1, r0, asr #30
   1ce54:	andeq	ip, r1, r0, asr #30
   1ce58:	andeq	ip, r1, r0, asr #30
   1ce5c:	andeq	ip, r1, r0, asr #30
   1ce60:	andeq	ip, r1, r0, asr #30
   1ce64:	andeq	ip, r1, r0, asr #30
   1ce68:	andeq	ip, r1, r0, asr #30
   1ce6c:	andeq	ip, r1, r0, asr #30
   1ce70:	andeq	ip, r1, r0, asr #30
   1ce74:	andeq	ip, r1, r0, asr #30
   1ce78:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce7c:	andeq	ip, r1, r0, asr #30
   1ce80:	andeq	ip, r1, r0, asr #30
   1ce84:	andeq	ip, r1, r0, asr #30
   1ce88:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce8c:	andeq	ip, r1, r0, asr #30
   1ce90:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce94:	andeq	ip, r1, r0, asr #30
   1ce98:	andeq	ip, r1, r0, asr #30
   1ce9c:	andeq	ip, r1, r0, asr #30
   1cea0:	andeq	ip, r1, r0, asr #30
   1cea4:	andeq	ip, r1, r0, asr #30
   1cea8:	andeq	ip, r1, r0, asr #30
   1ceac:			; <UNDEFINED> instruction: 0x0001ceb0
   1ceb0:	mov	r1, #48	; 0x30
   1ceb4:	ldr	r0, [fp, #4]
   1ceb8:	bl	113c8 <strchr@plt>
   1cebc:	mov	r3, r0
   1cec0:	cmp	r3, #0
   1cec4:	beq	1cf34 <__assert_fail@plt+0xb9c8>
   1cec8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cecc:	ldr	r3, [r3]
   1ced0:	add	r3, r3, #1
   1ced4:	ldrb	r3, [r3]
   1ced8:	cmp	r3, #68	; 0x44
   1cedc:	beq	1cf1c <__assert_fail@plt+0xb9b0>
   1cee0:	cmp	r3, #105	; 0x69
   1cee4:	beq	1cef4 <__assert_fail@plt+0xb988>
   1cee8:	cmp	r3, #66	; 0x42
   1ceec:	beq	1cf1c <__assert_fail@plt+0xb9b0>
   1cef0:	b	1cf40 <__assert_fail@plt+0xb9d4>
   1cef4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cef8:	ldr	r3, [r3]
   1cefc:	add	r3, r3, #2
   1cf00:	ldrb	r3, [r3]
   1cf04:	cmp	r3, #66	; 0x42
   1cf08:	bne	1cf3c <__assert_fail@plt+0xb9d0>
   1cf0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf10:	add	r3, r3, #2
   1cf14:	str	r3, [fp, #-24]	; 0xffffffe8
   1cf18:	b	1cf3c <__assert_fail@plt+0xb9d0>
   1cf1c:	mov	r3, #1000	; 0x3e8
   1cf20:	str	r3, [fp, #-20]	; 0xffffffec
   1cf24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf28:	add	r3, r3, #1
   1cf2c:	str	r3, [fp, #-24]	; 0xffffffe8
   1cf30:	b	1cf40 <__assert_fail@plt+0xb9d4>
   1cf34:	nop	{0}
   1cf38:	b	1cf40 <__assert_fail@plt+0xb9d4>
   1cf3c:	nop	{0}
   1cf40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cf44:	ldr	r3, [r3]
   1cf48:	ldrb	r3, [r3]
   1cf4c:	sub	r3, r3, #66	; 0x42
   1cf50:	cmp	r3, #53	; 0x35
   1cf54:	ldrls	pc, [pc, r3, lsl #2]
   1cf58:	b	1d168 <__assert_fail@plt+0xbbfc>
   1cf5c:	andeq	sp, r1, ip, asr #32
   1cf60:	andeq	sp, r1, r8, ror #2
   1cf64:	andeq	sp, r1, r8, ror #2
   1cf68:	andeq	sp, r1, r0, ror r0
   1cf6c:	andeq	sp, r1, r8, ror #2
   1cf70:	andeq	sp, r1, ip, lsl #1
   1cf74:	andeq	sp, r1, r8, ror #2
   1cf78:	andeq	sp, r1, r8, ror #2
   1cf7c:	andeq	sp, r1, r8, ror #2
   1cf80:	andeq	sp, r1, r8, lsr #1
   1cf84:	andeq	sp, r1, r8, ror #2
   1cf88:	andeq	sp, r1, r4, asr #1
   1cf8c:	andeq	sp, r1, r8, ror #2
   1cf90:	andeq	sp, r1, r8, ror #2
   1cf94:	andeq	sp, r1, r0, ror #1
   1cf98:	andeq	sp, r1, r8, ror #2
   1cf9c:	andeq	sp, r1, r8, ror #2
   1cfa0:	andeq	sp, r1, r8, ror #2
   1cfa4:	strdeq	sp, [r1], -ip
   1cfa8:	andeq	sp, r1, r8, ror #2
   1cfac:	andeq	sp, r1, r8, ror #2
   1cfb0:	andeq	sp, r1, r8, ror #2
   1cfb4:	andeq	sp, r1, r8, ror #2
   1cfb8:	andeq	sp, r1, r0, lsr r1
   1cfbc:	andeq	sp, r1, ip, asr #2
   1cfc0:	andeq	sp, r1, r8, ror #2
   1cfc4:	andeq	sp, r1, r8, ror #2
   1cfc8:	andeq	sp, r1, r8, ror #2
   1cfcc:	andeq	sp, r1, r8, ror #2
   1cfd0:	andeq	sp, r1, r8, ror #2
   1cfd4:	andeq	sp, r1, r8, ror #2
   1cfd8:	andeq	sp, r1, r8, ror #2
   1cfdc:	andeq	sp, r1, r4, lsr r0
   1cfe0:	andeq	sp, r1, r4, rrx
   1cfe4:	andeq	sp, r1, r8, ror #2
   1cfe8:	andeq	sp, r1, r8, ror #2
   1cfec:	andeq	sp, r1, r8, ror #2
   1cff0:	andeq	sp, r1, ip, lsl #1
   1cff4:	andeq	sp, r1, r8, ror #2
   1cff8:	andeq	sp, r1, r8, ror #2
   1cffc:	andeq	sp, r1, r8, ror #2
   1d000:	andeq	sp, r1, r8, lsr #1
   1d004:	andeq	sp, r1, r8, ror #2
   1d008:	andeq	sp, r1, r4, asr #1
   1d00c:	andeq	sp, r1, r8, ror #2
   1d010:	andeq	sp, r1, r8, ror #2
   1d014:	andeq	sp, r1, r8, ror #2
   1d018:	andeq	sp, r1, r8, ror #2
   1d01c:	andeq	sp, r1, r8, ror #2
   1d020:	andeq	sp, r1, r8, ror #2
   1d024:	strdeq	sp, [r1], -ip
   1d028:	andeq	sp, r1, r8, ror #2
   1d02c:	andeq	sp, r1, r8, ror #2
   1d030:	andeq	sp, r1, r8, lsl r1
   1d034:	sub	r3, fp, #40	; 0x28
   1d038:	mov	r1, #512	; 0x200
   1d03c:	mov	r0, r3
   1d040:	bl	1cab0 <__assert_fail@plt+0xb544>
   1d044:	str	r0, [fp, #-28]	; 0xffffffe4
   1d048:	b	1d180 <__assert_fail@plt+0xbc14>
   1d04c:	sub	r3, fp, #40	; 0x28
   1d050:	mov	r1, #1024	; 0x400
   1d054:	mov	r0, r3
   1d058:	bl	1cab0 <__assert_fail@plt+0xb544>
   1d05c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d060:	b	1d180 <__assert_fail@plt+0xbc14>
   1d064:	mov	r3, #0
   1d068:	str	r3, [fp, #-28]	; 0xffffffe4
   1d06c:	b	1d180 <__assert_fail@plt+0xbc14>
   1d070:	sub	r3, fp, #40	; 0x28
   1d074:	mov	r2, #6
   1d078:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d07c:	mov	r0, r3
   1d080:	bl	1cb30 <__assert_fail@plt+0xb5c4>
   1d084:	str	r0, [fp, #-28]	; 0xffffffe4
   1d088:	b	1d180 <__assert_fail@plt+0xbc14>
   1d08c:	sub	r3, fp, #40	; 0x28
   1d090:	mov	r2, #3
   1d094:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d098:	mov	r0, r3
   1d09c:	bl	1cb30 <__assert_fail@plt+0xb5c4>
   1d0a0:	str	r0, [fp, #-28]	; 0xffffffe4
   1d0a4:	b	1d180 <__assert_fail@plt+0xbc14>
   1d0a8:	sub	r3, fp, #40	; 0x28
   1d0ac:	mov	r2, #1
   1d0b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d0b4:	mov	r0, r3
   1d0b8:	bl	1cb30 <__assert_fail@plt+0xb5c4>
   1d0bc:	str	r0, [fp, #-28]	; 0xffffffe4
   1d0c0:	b	1d180 <__assert_fail@plt+0xbc14>
   1d0c4:	sub	r3, fp, #40	; 0x28
   1d0c8:	mov	r2, #2
   1d0cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d0d0:	mov	r0, r3
   1d0d4:	bl	1cb30 <__assert_fail@plt+0xb5c4>
   1d0d8:	str	r0, [fp, #-28]	; 0xffffffe4
   1d0dc:	b	1d180 <__assert_fail@plt+0xbc14>
   1d0e0:	sub	r3, fp, #40	; 0x28
   1d0e4:	mov	r2, #5
   1d0e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d0ec:	mov	r0, r3
   1d0f0:	bl	1cb30 <__assert_fail@plt+0xb5c4>
   1d0f4:	str	r0, [fp, #-28]	; 0xffffffe4
   1d0f8:	b	1d180 <__assert_fail@plt+0xbc14>
   1d0fc:	sub	r3, fp, #40	; 0x28
   1d100:	mov	r2, #4
   1d104:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d108:	mov	r0, r3
   1d10c:	bl	1cb30 <__assert_fail@plt+0xb5c4>
   1d110:	str	r0, [fp, #-28]	; 0xffffffe4
   1d114:	b	1d180 <__assert_fail@plt+0xbc14>
   1d118:	sub	r3, fp, #40	; 0x28
   1d11c:	mov	r1, #2
   1d120:	mov	r0, r3
   1d124:	bl	1cab0 <__assert_fail@plt+0xb544>
   1d128:	str	r0, [fp, #-28]	; 0xffffffe4
   1d12c:	b	1d180 <__assert_fail@plt+0xbc14>
   1d130:	sub	r3, fp, #40	; 0x28
   1d134:	mov	r2, #8
   1d138:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d13c:	mov	r0, r3
   1d140:	bl	1cb30 <__assert_fail@plt+0xb5c4>
   1d144:	str	r0, [fp, #-28]	; 0xffffffe4
   1d148:	b	1d180 <__assert_fail@plt+0xbc14>
   1d14c:	sub	r3, fp, #40	; 0x28
   1d150:	mov	r2, #7
   1d154:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d158:	mov	r0, r3
   1d15c:	bl	1cb30 <__assert_fail@plt+0xb5c4>
   1d160:	str	r0, [fp, #-28]	; 0xffffffe4
   1d164:	b	1d180 <__assert_fail@plt+0xbc14>
   1d168:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d16c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d170:	str	r2, [r3]
   1d174:	ldr	r3, [fp, #-8]
   1d178:	orr	r3, r3, #2
   1d17c:	b	1d1d8 <__assert_fail@plt+0xbc6c>
   1d180:	ldr	r2, [fp, #-8]
   1d184:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d188:	orr	r3, r2, r3
   1d18c:	str	r3, [fp, #-8]
   1d190:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d194:	ldr	r2, [r3]
   1d198:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d19c:	add	r2, r2, r3
   1d1a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d1a4:	str	r2, [r3]
   1d1a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d1ac:	ldr	r3, [r3]
   1d1b0:	ldrb	r3, [r3]
   1d1b4:	cmp	r3, #0
   1d1b8:	beq	1d1c8 <__assert_fail@plt+0xbc5c>
   1d1bc:	ldr	r3, [fp, #-8]
   1d1c0:	orr	r3, r3, #2
   1d1c4:	str	r3, [fp, #-8]
   1d1c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d1cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d1d0:	str	r2, [r3]
   1d1d4:	ldr	r3, [fp, #-8]
   1d1d8:	mov	r0, r3
   1d1dc:	sub	sp, fp, #4
   1d1e0:	ldr	fp, [sp]
   1d1e4:	add	sp, sp, #4
   1d1e8:	pop	{pc}		; (ldr pc, [sp], #4)
   1d1ec:	str	fp, [sp, #-8]!
   1d1f0:	str	lr, [sp, #4]
   1d1f4:	add	fp, sp, #4
   1d1f8:	sub	sp, sp, #16
   1d1fc:	str	r0, [fp, #-16]
   1d200:	str	r1, [fp, #-20]	; 0xffffffec
   1d204:	ldr	r3, [fp, #-16]
   1d208:	cmp	r3, #0
   1d20c:	beq	1d21c <__assert_fail@plt+0xbcb0>
   1d210:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d214:	cmp	r3, #0
   1d218:	bne	1d22c <__assert_fail@plt+0xbcc0>
   1d21c:	mov	r3, #1
   1d220:	str	r3, [fp, #-20]	; 0xffffffec
   1d224:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d228:	str	r3, [fp, #-16]
   1d22c:	mov	ip, #0
   1d230:	ldr	r2, [fp, #-16]
   1d234:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d238:	umull	r0, r1, r2, r3
   1d23c:	mov	r2, #0
   1d240:	mov	r3, #0
   1d244:	mov	r2, r1
   1d248:	mov	r3, #0
   1d24c:	cmp	r2, #0
   1d250:	beq	1d258 <__assert_fail@plt+0xbcec>
   1d254:	mov	ip, #1
   1d258:	cmp	r0, #0
   1d25c:	bge	1d264 <__assert_fail@plt+0xbcf8>
   1d260:	mov	ip, #1
   1d264:	mov	r3, ip
   1d268:	and	r3, r3, #1
   1d26c:	uxtb	r3, r3
   1d270:	cmp	r3, #0
   1d274:	beq	1d290 <__assert_fail@plt+0xbd24>
   1d278:	bl	113ec <__errno_location@plt>
   1d27c:	mov	r2, r0
   1d280:	mov	r3, #12
   1d284:	str	r3, [r2]
   1d288:	mov	r3, #0
   1d28c:	b	1d2a8 <__assert_fail@plt+0xbd3c>
   1d290:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d294:	ldr	r0, [fp, #-16]
   1d298:	bl	111a0 <calloc@plt>
   1d29c:	mov	r3, r0
   1d2a0:	str	r3, [fp, #-8]
   1d2a4:	ldr	r3, [fp, #-8]
   1d2a8:	mov	r0, r3
   1d2ac:	sub	sp, fp, #4
   1d2b0:	ldr	fp, [sp]
   1d2b4:	add	sp, sp, #4
   1d2b8:	pop	{pc}		; (ldr pc, [sp], #4)
   1d2bc:	push	{r1, r2, r3}
   1d2c0:	str	fp, [sp, #-8]!
   1d2c4:	str	lr, [sp, #4]
   1d2c8:	add	fp, sp, #4
   1d2cc:	sub	sp, sp, #36	; 0x24
   1d2d0:	str	r0, [fp, #-36]	; 0xffffffdc
   1d2d4:	mvn	r3, #0
   1d2d8:	str	r3, [fp, #-12]
   1d2dc:	add	r3, fp, #8
   1d2e0:	str	r3, [fp, #-32]	; 0xffffffe0
   1d2e4:	ldr	r3, [fp, #4]
   1d2e8:	cmp	r3, #0
   1d2ec:	beq	1d304 <__assert_fail@plt+0xbd98>
   1d2f0:	ldr	r3, [fp, #4]
   1d2f4:	movw	r2, #1030	; 0x406
   1d2f8:	cmp	r3, r2
   1d2fc:	beq	1d32c <__assert_fail@plt+0xbdc0>
   1d300:	b	1d354 <__assert_fail@plt+0xbde8>
   1d304:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d308:	add	r2, r3, #4
   1d30c:	str	r2, [fp, #-32]	; 0xffffffe0
   1d310:	ldr	r3, [r3]
   1d314:	str	r3, [fp, #-16]
   1d318:	ldr	r1, [fp, #-16]
   1d31c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d320:	bl	1d500 <__assert_fail@plt+0xbf94>
   1d324:	str	r0, [fp, #-12]
   1d328:	b	1d4e0 <__assert_fail@plt+0xbf74>
   1d32c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d330:	add	r2, r3, #4
   1d334:	str	r2, [fp, #-32]	; 0xffffffe0
   1d338:	ldr	r3, [r3]
   1d33c:	str	r3, [fp, #-20]	; 0xffffffec
   1d340:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d344:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d348:	bl	1d544 <__assert_fail@plt+0xbfd8>
   1d34c:	str	r0, [fp, #-12]
   1d350:	b	1d4e0 <__assert_fail@plt+0xbf74>
   1d354:	ldr	r3, [fp, #4]
   1d358:	cmp	r3, #11
   1d35c:	beq	1d470 <__assert_fail@plt+0xbf04>
   1d360:	ldr	r3, [fp, #4]
   1d364:	cmp	r3, #11
   1d368:	bgt	1d3f0 <__assert_fail@plt+0xbe84>
   1d36c:	ldr	r3, [fp, #4]
   1d370:	cmp	r3, #3
   1d374:	beq	1d470 <__assert_fail@plt+0xbf04>
   1d378:	ldr	r3, [fp, #4]
   1d37c:	cmp	r3, #3
   1d380:	bgt	1d3ac <__assert_fail@plt+0xbe40>
   1d384:	ldr	r3, [fp, #4]
   1d388:	cmp	r3, #1
   1d38c:	beq	1d470 <__assert_fail@plt+0xbf04>
   1d390:	ldr	r3, [fp, #4]
   1d394:	cmp	r3, #1
   1d398:	bgt	1d484 <__assert_fail@plt+0xbf18>
   1d39c:	ldr	r3, [fp, #4]
   1d3a0:	cmp	r3, #0
   1d3a4:	beq	1d484 <__assert_fail@plt+0xbf18>
   1d3a8:	b	1d4b0 <__assert_fail@plt+0xbf44>
   1d3ac:	ldr	r3, [fp, #4]
   1d3b0:	cmp	r3, #8
   1d3b4:	beq	1d484 <__assert_fail@plt+0xbf18>
   1d3b8:	ldr	r3, [fp, #4]
   1d3bc:	cmp	r3, #8
   1d3c0:	bgt	1d3d4 <__assert_fail@plt+0xbe68>
   1d3c4:	ldr	r3, [fp, #4]
   1d3c8:	cmp	r3, #4
   1d3cc:	beq	1d484 <__assert_fail@plt+0xbf18>
   1d3d0:	b	1d4b0 <__assert_fail@plt+0xbf44>
   1d3d4:	ldr	r3, [fp, #4]
   1d3d8:	cmp	r3, #9
   1d3dc:	beq	1d470 <__assert_fail@plt+0xbf04>
   1d3e0:	ldr	r3, [fp, #4]
   1d3e4:	cmp	r3, #10
   1d3e8:	beq	1d484 <__assert_fail@plt+0xbf18>
   1d3ec:	b	1d4b0 <__assert_fail@plt+0xbf44>
   1d3f0:	ldr	r3, [fp, #4]
   1d3f4:	movw	r2, #1031	; 0x407
   1d3f8:	cmp	r3, r2
   1d3fc:	bgt	1d440 <__assert_fail@plt+0xbed4>
   1d400:	ldr	r3, [fp, #4]
   1d404:	movw	r2, #1030	; 0x406
   1d408:	cmp	r3, r2
   1d40c:	bge	1d484 <__assert_fail@plt+0xbf18>
   1d410:	ldr	r3, [fp, #4]
   1d414:	movw	r2, #1025	; 0x401
   1d418:	cmp	r3, r2
   1d41c:	beq	1d470 <__assert_fail@plt+0xbf04>
   1d420:	ldr	r3, [fp, #4]
   1d424:	movw	r2, #1026	; 0x402
   1d428:	cmp	r3, r2
   1d42c:	beq	1d484 <__assert_fail@plt+0xbf18>
   1d430:	ldr	r3, [fp, #4]
   1d434:	cmp	r3, #1024	; 0x400
   1d438:	beq	1d484 <__assert_fail@plt+0xbf18>
   1d43c:	b	1d4b0 <__assert_fail@plt+0xbf44>
   1d440:	ldr	r3, [fp, #4]
   1d444:	movw	r2, #1033	; 0x409
   1d448:	cmp	r3, r2
   1d44c:	beq	1d484 <__assert_fail@plt+0xbf18>
   1d450:	ldr	r3, [fp, #4]
   1d454:	movw	r2, #1033	; 0x409
   1d458:	cmp	r3, r2
   1d45c:	blt	1d470 <__assert_fail@plt+0xbf04>
   1d460:	ldr	r3, [fp, #4]
   1d464:	movw	r2, #1034	; 0x40a
   1d468:	cmp	r3, r2
   1d46c:	bne	1d4b0 <__assert_fail@plt+0xbf44>
   1d470:	ldr	r1, [fp, #4]
   1d474:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d478:	bl	1147c <fcntl64@plt>
   1d47c:	str	r0, [fp, #-12]
   1d480:	b	1d4dc <__assert_fail@plt+0xbf70>
   1d484:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d488:	add	r2, r3, #4
   1d48c:	str	r2, [fp, #-32]	; 0xffffffe0
   1d490:	ldr	r3, [r3]
   1d494:	str	r3, [fp, #-24]	; 0xffffffe8
   1d498:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d49c:	ldr	r1, [fp, #4]
   1d4a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d4a4:	bl	1147c <fcntl64@plt>
   1d4a8:	str	r0, [fp, #-12]
   1d4ac:	b	1d4dc <__assert_fail@plt+0xbf70>
   1d4b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d4b4:	add	r2, r3, #4
   1d4b8:	str	r2, [fp, #-32]	; 0xffffffe0
   1d4bc:	ldr	r3, [r3]
   1d4c0:	str	r3, [fp, #-28]	; 0xffffffe4
   1d4c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d4c8:	ldr	r1, [fp, #4]
   1d4cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d4d0:	bl	1147c <fcntl64@plt>
   1d4d4:	str	r0, [fp, #-12]
   1d4d8:	nop	{0}
   1d4dc:	nop	{0}
   1d4e0:	ldr	r3, [fp, #-12]
   1d4e4:	mov	r0, r3
   1d4e8:	sub	sp, fp, #4
   1d4ec:	ldr	fp, [sp]
   1d4f0:	ldr	lr, [sp, #4]
   1d4f4:	add	sp, sp, #8
   1d4f8:	add	sp, sp, #12
   1d4fc:	bx	lr
   1d500:	str	fp, [sp, #-8]!
   1d504:	str	lr, [sp, #4]
   1d508:	add	fp, sp, #4
   1d50c:	sub	sp, sp, #16
   1d510:	str	r0, [fp, #-16]
   1d514:	str	r1, [fp, #-20]	; 0xffffffec
   1d518:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d51c:	mov	r1, #0
   1d520:	ldr	r0, [fp, #-16]
   1d524:	bl	1147c <fcntl64@plt>
   1d528:	str	r0, [fp, #-8]
   1d52c:	ldr	r3, [fp, #-8]
   1d530:	mov	r0, r3
   1d534:	sub	sp, fp, #4
   1d538:	ldr	fp, [sp]
   1d53c:	add	sp, sp, #4
   1d540:	pop	{pc}		; (ldr pc, [sp], #4)
   1d544:	str	fp, [sp, #-8]!
   1d548:	str	lr, [sp, #4]
   1d54c:	add	fp, sp, #4
   1d550:	sub	sp, sp, #24
   1d554:	str	r0, [fp, #-24]	; 0xffffffe8
   1d558:	str	r1, [fp, #-28]	; 0xffffffe4
   1d55c:	movw	r3, #9180	; 0x23dc
   1d560:	movt	r3, #3
   1d564:	ldr	r3, [r3]
   1d568:	cmp	r3, #0
   1d56c:	blt	1d5e8 <__assert_fail@plt+0xc07c>
   1d570:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d574:	movw	r1, #1030	; 0x406
   1d578:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d57c:	bl	1147c <fcntl64@plt>
   1d580:	str	r0, [fp, #-8]
   1d584:	ldr	r3, [fp, #-8]
   1d588:	cmp	r3, #0
   1d58c:	bge	1d5a4 <__assert_fail@plt+0xc038>
   1d590:	bl	113ec <__errno_location@plt>
   1d594:	mov	r3, r0
   1d598:	ldr	r3, [r3]
   1d59c:	cmp	r3, #22
   1d5a0:	beq	1d5b8 <__assert_fail@plt+0xc04c>
   1d5a4:	movw	r3, #9180	; 0x23dc
   1d5a8:	movt	r3, #3
   1d5ac:	mov	r2, #1
   1d5b0:	str	r2, [r3]
   1d5b4:	b	1d5f8 <__assert_fail@plt+0xc08c>
   1d5b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d5bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5c0:	bl	1d500 <__assert_fail@plt+0xbf94>
   1d5c4:	str	r0, [fp, #-8]
   1d5c8:	ldr	r3, [fp, #-8]
   1d5cc:	cmp	r3, #0
   1d5d0:	blt	1d5f8 <__assert_fail@plt+0xc08c>
   1d5d4:	movw	r3, #9180	; 0x23dc
   1d5d8:	movt	r3, #3
   1d5dc:	mvn	r2, #0
   1d5e0:	str	r2, [r3]
   1d5e4:	b	1d5f8 <__assert_fail@plt+0xc08c>
   1d5e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d5ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5f0:	bl	1d500 <__assert_fail@plt+0xbf94>
   1d5f4:	str	r0, [fp, #-8]
   1d5f8:	ldr	r3, [fp, #-8]
   1d5fc:	cmp	r3, #0
   1d600:	blt	1d688 <__assert_fail@plt+0xc11c>
   1d604:	movw	r3, #9180	; 0x23dc
   1d608:	movt	r3, #3
   1d60c:	ldr	r3, [r3]
   1d610:	cmn	r3, #1
   1d614:	bne	1d688 <__assert_fail@plt+0xc11c>
   1d618:	mov	r1, #1
   1d61c:	ldr	r0, [fp, #-8]
   1d620:	bl	1147c <fcntl64@plt>
   1d624:	str	r0, [fp, #-12]
   1d628:	ldr	r3, [fp, #-12]
   1d62c:	cmp	r3, #0
   1d630:	blt	1d658 <__assert_fail@plt+0xc0ec>
   1d634:	ldr	r3, [fp, #-12]
   1d638:	orr	r3, r3, #1
   1d63c:	mov	r2, r3
   1d640:	mov	r1, #2
   1d644:	ldr	r0, [fp, #-8]
   1d648:	bl	1147c <fcntl64@plt>
   1d64c:	mov	r3, r0
   1d650:	cmn	r3, #1
   1d654:	bne	1d688 <__assert_fail@plt+0xc11c>
   1d658:	bl	113ec <__errno_location@plt>
   1d65c:	mov	r3, r0
   1d660:	ldr	r3, [r3]
   1d664:	str	r3, [fp, #-16]
   1d668:	ldr	r0, [fp, #-8]
   1d66c:	bl	11554 <close@plt>
   1d670:	bl	113ec <__errno_location@plt>
   1d674:	mov	r2, r0
   1d678:	ldr	r3, [fp, #-16]
   1d67c:	str	r3, [r2]
   1d680:	mvn	r3, #0
   1d684:	str	r3, [fp, #-8]
   1d688:	ldr	r3, [fp, #-8]
   1d68c:	mov	r0, r3
   1d690:	sub	sp, fp, #4
   1d694:	ldr	fp, [sp]
   1d698:	add	sp, sp, #4
   1d69c:	pop	{pc}		; (ldr pc, [sp], #4)
   1d6a0:	str	fp, [sp, #-8]!
   1d6a4:	str	lr, [sp, #4]
   1d6a8:	add	fp, sp, #4
   1d6ac:	sub	sp, sp, #16
   1d6b0:	str	r0, [fp, #-8]
   1d6b4:	ldr	r3, [fp, #-8]
   1d6b8:	ldr	r3, [r3]
   1d6bc:	and	r3, r3, #256	; 0x100
   1d6c0:	cmp	r3, #0
   1d6c4:	beq	1d6e0 <__assert_fail@plt+0xc174>
   1d6c8:	mov	r3, #1
   1d6cc:	str	r3, [sp]
   1d6d0:	mov	r2, #0
   1d6d4:	mov	r3, #0
   1d6d8:	ldr	r0, [fp, #-8]
   1d6dc:	bl	1d88c <__assert_fail@plt+0xc320>
   1d6e0:	nop	{0}
   1d6e4:	sub	sp, fp, #4
   1d6e8:	ldr	fp, [sp]
   1d6ec:	add	sp, sp, #4
   1d6f0:	pop	{pc}		; (ldr pc, [sp], #4)
   1d6f4:	str	fp, [sp, #-8]!
   1d6f8:	str	lr, [sp, #4]
   1d6fc:	add	fp, sp, #4
   1d700:	sub	sp, sp, #8
   1d704:	str	r0, [fp, #-8]
   1d708:	ldr	r3, [fp, #-8]
   1d70c:	cmp	r3, #0
   1d710:	beq	1d728 <__assert_fail@plt+0xc1bc>
   1d714:	ldr	r0, [fp, #-8]
   1d718:	bl	1135c <__freading@plt>
   1d71c:	mov	r3, r0
   1d720:	cmp	r3, #0
   1d724:	bne	1d738 <__assert_fail@plt+0xc1cc>
   1d728:	ldr	r0, [fp, #-8]
   1d72c:	bl	111dc <fflush@plt>
   1d730:	mov	r3, r0
   1d734:	b	1d74c <__assert_fail@plt+0xc1e0>
   1d738:	ldr	r0, [fp, #-8]
   1d73c:	bl	1d6a0 <__assert_fail@plt+0xc134>
   1d740:	ldr	r0, [fp, #-8]
   1d744:	bl	111dc <fflush@plt>
   1d748:	mov	r3, r0
   1d74c:	mov	r0, r3
   1d750:	sub	sp, fp, #4
   1d754:	ldr	fp, [sp]
   1d758:	add	sp, sp, #4
   1d75c:	pop	{pc}		; (ldr pc, [sp], #4)
   1d760:	push	{fp}		; (str fp, [sp, #-4]!)
   1d764:	add	fp, sp, #0
   1d768:	sub	sp, sp, #12
   1d76c:	str	r0, [fp, #-8]
   1d770:	ldr	r3, [fp, #-8]
   1d774:	ldr	r2, [r3, #20]
   1d778:	ldr	r3, [fp, #-8]
   1d77c:	ldr	r3, [r3, #16]
   1d780:	cmp	r2, r3
   1d784:	bls	1d790 <__assert_fail@plt+0xc224>
   1d788:	mov	r3, #0
   1d78c:	b	1d7d8 <__assert_fail@plt+0xc26c>
   1d790:	ldr	r3, [fp, #-8]
   1d794:	ldr	r2, [r3, #8]
   1d798:	ldr	r3, [fp, #-8]
   1d79c:	ldr	r3, [r3, #4]
   1d7a0:	sub	r2, r2, r3
   1d7a4:	ldr	r3, [fp, #-8]
   1d7a8:	ldr	r3, [r3]
   1d7ac:	and	r3, r3, #256	; 0x100
   1d7b0:	cmp	r3, #0
   1d7b4:	beq	1d7d0 <__assert_fail@plt+0xc264>
   1d7b8:	ldr	r3, [fp, #-8]
   1d7bc:	ldr	r1, [r3, #44]	; 0x2c
   1d7c0:	ldr	r3, [fp, #-8]
   1d7c4:	ldr	r3, [r3, #36]	; 0x24
   1d7c8:	sub	r3, r1, r3
   1d7cc:	b	1d7d4 <__assert_fail@plt+0xc268>
   1d7d0:	mov	r3, #0
   1d7d4:	add	r3, r3, r2
   1d7d8:	mov	r0, r3
   1d7dc:	add	sp, fp, #0
   1d7e0:	pop	{fp}		; (ldr fp, [sp], #4)
   1d7e4:	bx	lr
   1d7e8:	str	r4, [sp, #-12]!
   1d7ec:	str	fp, [sp, #4]
   1d7f0:	str	lr, [sp, #8]
   1d7f4:	add	fp, sp, #8
   1d7f8:	sub	sp, sp, #20
   1d7fc:	str	r0, [fp, #-24]	; 0xffffffe8
   1d800:	bl	113ec <__errno_location@plt>
   1d804:	mov	r3, r0
   1d808:	ldr	r3, [r3]
   1d80c:	str	r3, [fp, #-20]	; 0xffffffec
   1d810:	bl	113ec <__errno_location@plt>
   1d814:	mov	r3, r0
   1d818:	ldr	r3, [r3]
   1d81c:	str	r3, [fp, #-16]
   1d820:	bl	113ec <__errno_location@plt>
   1d824:	mov	r2, r0
   1d828:	mov	r3, #0
   1d82c:	str	r3, [r2]
   1d830:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d834:	bl	111f4 <free@plt>
   1d838:	bl	113ec <__errno_location@plt>
   1d83c:	mov	r3, r0
   1d840:	ldr	r3, [r3]
   1d844:	cmp	r3, #0
   1d848:	moveq	r3, #1
   1d84c:	movne	r3, #0
   1d850:	uxtb	r3, r3
   1d854:	mov	r4, r3
   1d858:	bl	113ec <__errno_location@plt>
   1d85c:	mov	r2, r0
   1d860:	lsl	r3, r4, #2
   1d864:	sub	r1, fp, #12
   1d868:	add	r3, r1, r3
   1d86c:	ldr	r3, [r3, #-8]
   1d870:	str	r3, [r2]
   1d874:	nop	{0}
   1d878:	sub	sp, fp, #8
   1d87c:	ldr	r4, [sp]
   1d880:	ldr	fp, [sp, #4]
   1d884:	add	sp, sp, #8
   1d888:	pop	{pc}		; (ldr pc, [sp], #4)
   1d88c:	str	fp, [sp, #-8]!
   1d890:	str	lr, [sp, #4]
   1d894:	add	fp, sp, #4
   1d898:	sub	sp, sp, #32
   1d89c:	str	r0, [fp, #-16]
   1d8a0:	strd	r2, [fp, #-28]	; 0xffffffe4
   1d8a4:	ldr	r3, [fp, #-16]
   1d8a8:	ldr	r2, [r3, #8]
   1d8ac:	ldr	r3, [fp, #-16]
   1d8b0:	ldr	r3, [r3, #4]
   1d8b4:	cmp	r2, r3
   1d8b8:	bne	1d950 <__assert_fail@plt+0xc3e4>
   1d8bc:	ldr	r3, [fp, #-16]
   1d8c0:	ldr	r2, [r3, #20]
   1d8c4:	ldr	r3, [fp, #-16]
   1d8c8:	ldr	r3, [r3, #16]
   1d8cc:	cmp	r2, r3
   1d8d0:	bne	1d950 <__assert_fail@plt+0xc3e4>
   1d8d4:	ldr	r3, [fp, #-16]
   1d8d8:	ldr	r3, [r3, #36]	; 0x24
   1d8dc:	cmp	r3, #0
   1d8e0:	bne	1d950 <__assert_fail@plt+0xc3e4>
   1d8e4:	ldr	r0, [fp, #-16]
   1d8e8:	bl	11434 <fileno@plt>
   1d8ec:	mov	r1, r0
   1d8f0:	ldr	r3, [fp, #4]
   1d8f4:	str	r3, [sp]
   1d8f8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1d8fc:	mov	r0, r1
   1d900:	bl	112cc <lseek64@plt>
   1d904:	strd	r0, [fp, #-12]
   1d908:	ldrd	r2, [fp, #-12]
   1d90c:	mvn	r0, #0
   1d910:	mvn	r1, #0
   1d914:	cmp	r3, r1
   1d918:	cmpeq	r2, r0
   1d91c:	bne	1d928 <__assert_fail@plt+0xc3bc>
   1d920:	mvn	r3, #0
   1d924:	b	1d968 <__assert_fail@plt+0xc3fc>
   1d928:	ldr	r3, [fp, #-16]
   1d92c:	ldr	r3, [r3]
   1d930:	bic	r2, r3, #16
   1d934:	ldr	r3, [fp, #-16]
   1d938:	str	r2, [r3]
   1d93c:	ldr	r1, [fp, #-16]
   1d940:	ldrd	r2, [fp, #-12]
   1d944:	strd	r2, [r1, #80]	; 0x50
   1d948:	mov	r3, #0
   1d94c:	b	1d968 <__assert_fail@plt+0xc3fc>
   1d950:	ldr	r3, [fp, #4]
   1d954:	str	r3, [sp]
   1d958:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1d95c:	ldr	r0, [fp, #-16]
   1d960:	bl	11470 <fseeko64@plt>
   1d964:	mov	r3, r0
   1d968:	mov	r0, r3
   1d96c:	sub	sp, fp, #4
   1d970:	ldr	fp, [sp]
   1d974:	add	sp, sp, #4
   1d978:	pop	{pc}		; (ldr pc, [sp], #4)
   1d97c:	str	fp, [sp, #-8]!
   1d980:	str	lr, [sp, #4]
   1d984:	add	fp, sp, #4
   1d988:	sub	sp, sp, #16
   1d98c:	str	r0, [fp, #-16]
   1d990:	ldr	r3, [fp, #-16]
   1d994:	cmp	r3, #0
   1d998:	bne	1d9a4 <__assert_fail@plt+0xc438>
   1d99c:	mov	r3, #1
   1d9a0:	str	r3, [fp, #-16]
   1d9a4:	mov	r2, #0
   1d9a8:	ldr	r3, [fp, #-16]
   1d9ac:	cmp	r3, #0
   1d9b0:	bge	1d9b8 <__assert_fail@plt+0xc44c>
   1d9b4:	mov	r2, #1
   1d9b8:	mov	r3, r2
   1d9bc:	and	r3, r3, #1
   1d9c0:	uxtb	r3, r3
   1d9c4:	cmp	r3, #0
   1d9c8:	beq	1d9e4 <__assert_fail@plt+0xc478>
   1d9cc:	bl	113ec <__errno_location@plt>
   1d9d0:	mov	r2, r0
   1d9d4:	mov	r3, #12
   1d9d8:	str	r3, [r2]
   1d9dc:	mov	r3, #0
   1d9e0:	b	1d9f8 <__assert_fail@plt+0xc48c>
   1d9e4:	ldr	r0, [fp, #-16]
   1d9e8:	bl	11344 <malloc@plt>
   1d9ec:	mov	r3, r0
   1d9f0:	str	r3, [fp, #-8]
   1d9f4:	ldr	r3, [fp, #-8]
   1d9f8:	mov	r0, r3
   1d9fc:	sub	sp, fp, #4
   1da00:	ldr	fp, [sp]
   1da04:	add	sp, sp, #4
   1da08:	pop	{pc}		; (ldr pc, [sp], #4)
   1da0c:	str	fp, [sp, #-8]!
   1da10:	str	lr, [sp, #4]
   1da14:	add	fp, sp, #4
   1da18:	sub	sp, sp, #32
   1da1c:	str	r0, [fp, #-24]	; 0xffffffe8
   1da20:	str	r1, [fp, #-28]	; 0xffffffe4
   1da24:	str	r2, [fp, #-32]	; 0xffffffe0
   1da28:	str	r3, [fp, #-36]	; 0xffffffdc
   1da2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1da30:	cmp	r3, #0
   1da34:	bne	1da40 <__assert_fail@plt+0xc4d4>
   1da38:	sub	r3, fp, #16
   1da3c:	str	r3, [fp, #-24]	; 0xffffffe8
   1da40:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1da44:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1da48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1da4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da50:	bl	11308 <mbrtowc@plt>
   1da54:	str	r0, [fp, #-8]
   1da58:	ldr	r3, [fp, #-8]
   1da5c:	cmn	r3, #3
   1da60:	bls	1daac <__assert_fail@plt+0xc540>
   1da64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1da68:	cmp	r3, #0
   1da6c:	beq	1daac <__assert_fail@plt+0xc540>
   1da70:	mov	r0, #0
   1da74:	bl	1ddb0 <__assert_fail@plt+0xc844>
   1da78:	mov	r3, r0
   1da7c:	eor	r3, r3, #1
   1da80:	uxtb	r3, r3
   1da84:	cmp	r3, #0
   1da88:	beq	1daac <__assert_fail@plt+0xc540>
   1da8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1da90:	ldrb	r3, [r3]
   1da94:	strb	r3, [fp, #-9]
   1da98:	ldrb	r2, [fp, #-9]
   1da9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1daa0:	str	r2, [r3]
   1daa4:	mov	r3, #1
   1daa8:	b	1dab0 <__assert_fail@plt+0xc544>
   1daac:	ldr	r3, [fp, #-8]
   1dab0:	mov	r0, r3
   1dab4:	sub	sp, fp, #4
   1dab8:	ldr	fp, [sp]
   1dabc:	add	sp, sp, #4
   1dac0:	pop	{pc}		; (ldr pc, [sp], #4)
   1dac4:	str	fp, [sp, #-8]!
   1dac8:	str	lr, [sp, #4]
   1dacc:	add	fp, sp, #4
   1dad0:	sub	sp, sp, #16
   1dad4:	str	r0, [fp, #-16]
   1dad8:	str	r1, [fp, #-20]	; 0xffffffec
   1dadc:	ldr	r3, [fp, #-16]
   1dae0:	cmp	r3, #0
   1dae4:	bne	1daf8 <__assert_fail@plt+0xc58c>
   1dae8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1daec:	bl	1d97c <__assert_fail@plt+0xc410>
   1daf0:	mov	r3, r0
   1daf4:	b	1db68 <__assert_fail@plt+0xc5fc>
   1daf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dafc:	cmp	r3, #0
   1db00:	bne	1db14 <__assert_fail@plt+0xc5a8>
   1db04:	ldr	r0, [fp, #-16]
   1db08:	bl	1d7e8 <__assert_fail@plt+0xc27c>
   1db0c:	mov	r3, #0
   1db10:	b	1db68 <__assert_fail@plt+0xc5fc>
   1db14:	mov	r2, #0
   1db18:	ldr	r3, [fp, #-20]	; 0xffffffec
   1db1c:	cmp	r3, #0
   1db20:	bge	1db28 <__assert_fail@plt+0xc5bc>
   1db24:	mov	r2, #1
   1db28:	mov	r3, r2
   1db2c:	and	r3, r3, #1
   1db30:	uxtb	r3, r3
   1db34:	cmp	r3, #0
   1db38:	beq	1db54 <__assert_fail@plt+0xc5e8>
   1db3c:	bl	113ec <__errno_location@plt>
   1db40:	mov	r2, r0
   1db44:	mov	r3, #12
   1db48:	str	r3, [r2]
   1db4c:	mov	r3, #0
   1db50:	b	1db68 <__assert_fail@plt+0xc5fc>
   1db54:	ldr	r1, [fp, #-20]	; 0xffffffec
   1db58:	ldr	r0, [fp, #-16]
   1db5c:	bl	11278 <realloc@plt>
   1db60:	str	r0, [fp, #-8]
   1db64:	ldr	r3, [fp, #-8]
   1db68:	mov	r0, r3
   1db6c:	sub	sp, fp, #4
   1db70:	ldr	fp, [sp]
   1db74:	add	sp, sp, #4
   1db78:	pop	{pc}		; (ldr pc, [sp], #4)
   1db7c:	str	fp, [sp, #-8]!
   1db80:	str	lr, [sp, #4]
   1db84:	add	fp, sp, #4
   1db88:	sub	sp, sp, #24
   1db8c:	str	r0, [fp, #-16]
   1db90:	str	r1, [fp, #-20]	; 0xffffffec
   1db94:	str	r2, [fp, #-24]	; 0xffffffe8
   1db98:	mov	ip, #0
   1db9c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1dba0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dba4:	umull	r0, r1, r2, r3
   1dba8:	mov	r2, #0
   1dbac:	mov	r3, #0
   1dbb0:	mov	r2, r1
   1dbb4:	mov	r3, #0
   1dbb8:	cmp	r2, #0
   1dbbc:	beq	1dbc4 <__assert_fail@plt+0xc658>
   1dbc0:	mov	ip, #1
   1dbc4:	mov	r3, r0
   1dbc8:	str	r3, [fp, #-8]
   1dbcc:	mov	r3, ip
   1dbd0:	and	r3, r3, #1
   1dbd4:	uxtb	r3, r3
   1dbd8:	cmp	r3, #0
   1dbdc:	beq	1dbf8 <__assert_fail@plt+0xc68c>
   1dbe0:	bl	113ec <__errno_location@plt>
   1dbe4:	mov	r2, r0
   1dbe8:	mov	r3, #12
   1dbec:	str	r3, [r2]
   1dbf0:	mov	r3, #0
   1dbf4:	b	1dc0c <__assert_fail@plt+0xc6a0>
   1dbf8:	ldr	r3, [fp, #-8]
   1dbfc:	mov	r1, r3
   1dc00:	ldr	r0, [fp, #-16]
   1dc04:	bl	1dac4 <__assert_fail@plt+0xc558>
   1dc08:	mov	r3, r0
   1dc0c:	mov	r0, r3
   1dc10:	sub	sp, fp, #4
   1dc14:	ldr	fp, [sp]
   1dc18:	add	sp, sp, #4
   1dc1c:	pop	{pc}		; (ldr pc, [sp], #4)
   1dc20:	strd	r4, [sp, #-16]!
   1dc24:	str	fp, [sp, #8]
   1dc28:	str	lr, [sp, #12]
   1dc2c:	add	fp, sp, #12
   1dc30:	sub	sp, sp, #16
   1dc34:	str	r0, [fp, #-24]	; 0xffffffe8
   1dc38:	str	r1, [fp, #-28]	; 0xffffffe4
   1dc3c:	ldr	r5, [fp, #-24]	; 0xffffffe8
   1dc40:	ldr	r4, [fp, #-28]	; 0xffffffe4
   1dc44:	cmp	r5, r4
   1dc48:	bne	1dc54 <__assert_fail@plt+0xc6e8>
   1dc4c:	mov	r3, #0
   1dc50:	b	1dcb4 <__assert_fail@plt+0xc748>
   1dc54:	ldrb	r3, [r5]
   1dc58:	mov	r0, r3
   1dc5c:	bl	1eac8 <__assert_fail@plt+0xd55c>
   1dc60:	mov	r3, r0
   1dc64:	strb	r3, [fp, #-13]
   1dc68:	ldrb	r3, [r4]
   1dc6c:	mov	r0, r3
   1dc70:	bl	1eac8 <__assert_fail@plt+0xd55c>
   1dc74:	mov	r3, r0
   1dc78:	strb	r3, [fp, #-14]
   1dc7c:	ldrb	r3, [fp, #-13]
   1dc80:	cmp	r3, #0
   1dc84:	beq	1dca4 <__assert_fail@plt+0xc738>
   1dc88:	add	r5, r5, #1
   1dc8c:	add	r4, r4, #1
   1dc90:	ldrb	r2, [fp, #-13]
   1dc94:	ldrb	r3, [fp, #-14]
   1dc98:	cmp	r2, r3
   1dc9c:	beq	1dc54 <__assert_fail@plt+0xc6e8>
   1dca0:	b	1dca8 <__assert_fail@plt+0xc73c>
   1dca4:	nop	{0}
   1dca8:	ldrb	r2, [fp, #-13]
   1dcac:	ldrb	r3, [fp, #-14]
   1dcb0:	sub	r3, r2, r3
   1dcb4:	mov	r0, r3
   1dcb8:	sub	sp, fp, #12
   1dcbc:	ldrd	r4, [sp]
   1dcc0:	ldr	fp, [sp, #8]
   1dcc4:	add	sp, sp, #12
   1dcc8:	pop	{pc}		; (ldr pc, [sp], #4)
   1dccc:	str	fp, [sp, #-8]!
   1dcd0:	str	lr, [sp, #4]
   1dcd4:	add	fp, sp, #4
   1dcd8:	sub	sp, sp, #16
   1dcdc:	str	r0, [fp, #-16]
   1dce0:	ldr	r0, [fp, #-16]
   1dce4:	bl	112fc <__fpending@plt>
   1dce8:	mov	r3, r0
   1dcec:	cmp	r3, #0
   1dcf0:	movne	r3, #1
   1dcf4:	moveq	r3, #0
   1dcf8:	strb	r3, [fp, #-5]
   1dcfc:	ldr	r0, [fp, #-16]
   1dd00:	bl	11200 <ferror@plt>
   1dd04:	mov	r3, r0
   1dd08:	cmp	r3, #0
   1dd0c:	movne	r3, #1
   1dd10:	moveq	r3, #0
   1dd14:	strb	r3, [fp, #-6]
   1dd18:	ldr	r0, [fp, #-16]
   1dd1c:	bl	1144c <fclose@plt>
   1dd20:	mov	r3, r0
   1dd24:	cmp	r3, #0
   1dd28:	movne	r3, #1
   1dd2c:	moveq	r3, #0
   1dd30:	strb	r3, [fp, #-7]
   1dd34:	ldrb	r3, [fp, #-6]
   1dd38:	cmp	r3, #0
   1dd3c:	bne	1dd6c <__assert_fail@plt+0xc800>
   1dd40:	ldrb	r3, [fp, #-7]
   1dd44:	cmp	r3, #0
   1dd48:	beq	1dd98 <__assert_fail@plt+0xc82c>
   1dd4c:	ldrb	r3, [fp, #-5]
   1dd50:	cmp	r3, #0
   1dd54:	bne	1dd6c <__assert_fail@plt+0xc800>
   1dd58:	bl	113ec <__errno_location@plt>
   1dd5c:	mov	r3, r0
   1dd60:	ldr	r3, [r3]
   1dd64:	cmp	r3, #9
   1dd68:	beq	1dd98 <__assert_fail@plt+0xc82c>
   1dd6c:	ldrb	r3, [fp, #-7]
   1dd70:	eor	r3, r3, #1
   1dd74:	uxtb	r3, r3
   1dd78:	cmp	r3, #0
   1dd7c:	beq	1dd90 <__assert_fail@plt+0xc824>
   1dd80:	bl	113ec <__errno_location@plt>
   1dd84:	mov	r2, r0
   1dd88:	mov	r3, #0
   1dd8c:	str	r3, [r2]
   1dd90:	mvn	r3, #0
   1dd94:	b	1dd9c <__assert_fail@plt+0xc830>
   1dd98:	mov	r3, #0
   1dd9c:	mov	r0, r3
   1dda0:	sub	sp, fp, #4
   1dda4:	ldr	fp, [sp]
   1dda8:	add	sp, sp, #4
   1ddac:	pop	{pc}		; (ldr pc, [sp], #4)
   1ddb0:	str	fp, [sp, #-8]!
   1ddb4:	str	lr, [sp, #4]
   1ddb8:	add	fp, sp, #4
   1ddbc:	sub	sp, sp, #272	; 0x110
   1ddc0:	str	r0, [fp, #-272]	; 0xfffffef0
   1ddc4:	sub	r3, fp, #264	; 0x108
   1ddc8:	movw	r2, #257	; 0x101
   1ddcc:	mov	r1, r3
   1ddd0:	ldr	r0, [fp, #-272]	; 0xfffffef0
   1ddd4:	bl	1e56c <__assert_fail@plt+0xd000>
   1ddd8:	mov	r3, r0
   1dddc:	cmp	r3, #0
   1dde0:	beq	1ddec <__assert_fail@plt+0xc880>
   1dde4:	mov	r3, #0
   1dde8:	b	1de40 <__assert_fail@plt+0xc8d4>
   1ddec:	sub	r3, fp, #264	; 0x108
   1ddf0:	movw	r1, #4112	; 0x1010
   1ddf4:	movt	r1, #2
   1ddf8:	mov	r0, r3
   1ddfc:	bl	111ac <strcmp@plt>
   1de00:	mov	r3, r0
   1de04:	cmp	r3, #0
   1de08:	beq	1de34 <__assert_fail@plt+0xc8c8>
   1de0c:	sub	r3, fp, #264	; 0x108
   1de10:	movw	r1, #4116	; 0x1014
   1de14:	movt	r1, #2
   1de18:	mov	r0, r3
   1de1c:	bl	111ac <strcmp@plt>
   1de20:	mov	r3, r0
   1de24:	cmp	r3, #0
   1de28:	beq	1de34 <__assert_fail@plt+0xc8c8>
   1de2c:	mov	r3, #1
   1de30:	b	1de38 <__assert_fail@plt+0xc8cc>
   1de34:	mov	r3, #0
   1de38:	and	r3, r3, #1
   1de3c:	uxtb	r3, r3
   1de40:	mov	r0, r3
   1de44:	sub	sp, fp, #4
   1de48:	ldr	fp, [sp]
   1de4c:	add	sp, sp, #4
   1de50:	pop	{pc}		; (ldr pc, [sp], #4)
   1de54:	str	fp, [sp, #-8]!
   1de58:	str	lr, [sp, #4]
   1de5c:	add	fp, sp, #4
   1de60:	bl	113ec <__errno_location@plt>
   1de64:	mov	r2, r0
   1de68:	mov	r3, #12
   1de6c:	str	r3, [r2]
   1de70:	mov	r3, #0
   1de74:	mov	r0, r3
   1de78:	sub	sp, fp, #4
   1de7c:	ldr	fp, [sp]
   1de80:	add	sp, sp, #4
   1de84:	pop	{pc}		; (ldr pc, [sp], #4)
   1de88:	str	fp, [sp, #-8]!
   1de8c:	str	lr, [sp, #4]
   1de90:	add	fp, sp, #4
   1de94:	sub	sp, sp, #8
   1de98:	str	r0, [fp, #-8]
   1de9c:	ldr	r3, [fp, #-8]
   1dea0:	mov	r0, r3
   1dea4:	bl	1d97c <__assert_fail@plt+0xc410>
   1dea8:	mov	r3, r0
   1deac:	mov	r0, r3
   1deb0:	sub	sp, fp, #4
   1deb4:	ldr	fp, [sp]
   1deb8:	add	sp, sp, #4
   1debc:	pop	{pc}		; (ldr pc, [sp], #4)
   1dec0:	str	fp, [sp, #-8]!
   1dec4:	str	lr, [sp, #4]
   1dec8:	add	fp, sp, #4
   1decc:	sub	sp, sp, #8
   1ded0:	str	r0, [fp, #-8]
   1ded4:	str	r1, [fp, #-12]
   1ded8:	ldr	r3, [fp, #-12]
   1dedc:	cmp	r3, #0
   1dee0:	moveq	r3, #1
   1dee4:	movne	r3, #0
   1dee8:	uxtb	r3, r3
   1deec:	mov	r2, r3
   1def0:	ldr	r3, [fp, #-12]
   1def4:	orr	r3, r2, r3
   1def8:	mov	r1, r3
   1defc:	ldr	r0, [fp, #-8]
   1df00:	bl	1dac4 <__assert_fail@plt+0xc558>
   1df04:	mov	r3, r0
   1df08:	mov	r0, r3
   1df0c:	sub	sp, fp, #4
   1df10:	ldr	fp, [sp]
   1df14:	add	sp, sp, #4
   1df18:	pop	{pc}		; (ldr pc, [sp], #4)
   1df1c:	str	fp, [sp, #-8]!
   1df20:	str	lr, [sp, #4]
   1df24:	add	fp, sp, #4
   1df28:	sub	sp, sp, #8
   1df2c:	str	r0, [fp, #-8]
   1df30:	str	r1, [fp, #-12]
   1df34:	ldr	r3, [fp, #-8]
   1df38:	ldr	r2, [fp, #-12]
   1df3c:	mov	r1, r2
   1df40:	mov	r0, r3
   1df44:	bl	1d1ec <__assert_fail@plt+0xbc80>
   1df48:	mov	r3, r0
   1df4c:	mov	r0, r3
   1df50:	sub	sp, fp, #4
   1df54:	ldr	fp, [sp]
   1df58:	add	sp, sp, #4
   1df5c:	pop	{pc}		; (ldr pc, [sp], #4)
   1df60:	str	fp, [sp, #-8]!
   1df64:	str	lr, [sp, #4]
   1df68:	add	fp, sp, #4
   1df6c:	sub	sp, sp, #16
   1df70:	str	r0, [fp, #-8]
   1df74:	str	r1, [fp, #-12]
   1df78:	str	r2, [fp, #-16]
   1df7c:	ldr	r3, [fp, #-12]
   1df80:	cmp	r3, #0
   1df84:	beq	1df94 <__assert_fail@plt+0xca28>
   1df88:	ldr	r3, [fp, #-16]
   1df8c:	cmp	r3, #0
   1df90:	bne	1dfa4 <__assert_fail@plt+0xca38>
   1df94:	mov	r3, #1
   1df98:	str	r3, [fp, #-16]
   1df9c:	ldr	r3, [fp, #-16]
   1dfa0:	str	r3, [fp, #-12]
   1dfa4:	ldr	r3, [fp, #-12]
   1dfa8:	ldr	r2, [fp, #-16]
   1dfac:	mov	r1, r3
   1dfb0:	ldr	r0, [fp, #-8]
   1dfb4:	bl	1db7c <__assert_fail@plt+0xc610>
   1dfb8:	mov	r3, r0
   1dfbc:	mov	r0, r3
   1dfc0:	sub	sp, fp, #4
   1dfc4:	ldr	fp, [sp]
   1dfc8:	add	sp, sp, #4
   1dfcc:	pop	{pc}		; (ldr pc, [sp], #4)
   1dfd0:	str	fp, [sp, #-8]!
   1dfd4:	str	lr, [sp, #4]
   1dfd8:	add	fp, sp, #4
   1dfdc:	sub	sp, sp, #8
   1dfe0:	mov	r0, #14
   1dfe4:	bl	114b8 <nl_langinfo@plt>
   1dfe8:	str	r0, [fp, #-8]
   1dfec:	ldr	r3, [fp, #-8]
   1dff0:	cmp	r3, #0
   1dff4:	bne	1e004 <__assert_fail@plt+0xca98>
   1dff8:	movw	r3, #4124	; 0x101c
   1dffc:	movt	r3, #2
   1e000:	str	r3, [fp, #-8]
   1e004:	ldr	r3, [fp, #-8]
   1e008:	ldrb	r3, [r3]
   1e00c:	cmp	r3, #0
   1e010:	bne	1e020 <__assert_fail@plt+0xcab4>
   1e014:	movw	r3, #4128	; 0x1020
   1e018:	movt	r3, #2
   1e01c:	str	r3, [fp, #-8]
   1e020:	ldr	r3, [fp, #-8]
   1e024:	mov	r0, r3
   1e028:	sub	sp, fp, #4
   1e02c:	ldr	fp, [sp]
   1e030:	add	sp, sp, #4
   1e034:	pop	{pc}		; (ldr pc, [sp], #4)
   1e038:	str	fp, [sp, #-8]!
   1e03c:	str	lr, [sp, #4]
   1e040:	add	fp, sp, #4
   1e044:	sub	sp, sp, #48	; 0x30
   1e048:	str	r0, [fp, #-48]	; 0xffffffd0
   1e04c:	mov	r3, #15
   1e050:	str	r3, [fp, #-8]
   1e054:	ldr	r3, [fp, #-8]
   1e058:	add	r3, r3, #1
   1e05c:	str	r3, [fp, #-12]
   1e060:	mov	r0, #0
   1e064:	ldr	r2, [fp, #-12]
   1e068:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e06c:	add	r3, r2, r3
   1e070:	add	r1, r3, #-2147483648	; 0x80000000
   1e074:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1e078:	cmp	r1, r2
   1e07c:	bcs	1e084 <__assert_fail@plt+0xcb18>
   1e080:	mov	r0, #1
   1e084:	str	r3, [fp, #-36]	; 0xffffffdc
   1e088:	mov	r3, r0
   1e08c:	and	r3, r3, #1
   1e090:	uxtb	r3, r3
   1e094:	eor	r3, r3, #1
   1e098:	uxtb	r3, r3
   1e09c:	cmp	r3, #0
   1e0a0:	beq	1e14c <__assert_fail@plt+0xcbe0>
   1e0a4:	mov	r3, #0
   1e0a8:	and	r3, r3, #1
   1e0ac:	uxtb	r3, r3
   1e0b0:	eor	r3, r3, #1
   1e0b4:	uxtb	r3, r3
   1e0b8:	cmp	r3, #0
   1e0bc:	beq	1e14c <__assert_fail@plt+0xcbe0>
   1e0c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e0c4:	mov	r0, r3
   1e0c8:	bl	11344 <malloc@plt>
   1e0cc:	mov	r3, r0
   1e0d0:	str	r3, [fp, #-16]
   1e0d4:	ldr	r3, [fp, #-16]
   1e0d8:	cmp	r3, #0
   1e0dc:	beq	1e14c <__assert_fail@plt+0xcbe0>
   1e0e0:	ldr	r3, [fp, #-16]
   1e0e4:	str	r3, [fp, #-20]	; 0xffffffec
   1e0e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e0ec:	mov	r2, #8
   1e0f0:	adds	r3, r3, r2
   1e0f4:	str	r3, [fp, #-40]	; 0xffffffd8
   1e0f8:	ldr	r3, [fp, #-8]
   1e0fc:	mvn	r2, r3
   1e100:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e104:	and	r2, r2, r3
   1e108:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e10c:	sub	r3, r2, r3
   1e110:	add	r3, r3, #8
   1e114:	str	r3, [fp, #-24]	; 0xffffffe8
   1e118:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e11c:	ldr	r2, [fp, #-16]
   1e120:	add	r3, r2, r3
   1e124:	str	r3, [fp, #-28]	; 0xffffffe4
   1e128:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e12c:	str	r3, [fp, #-32]	; 0xffffffe0
   1e130:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e134:	sub	r3, r3, #1
   1e138:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e13c:	uxtb	r2, r2
   1e140:	strb	r2, [r3]
   1e144:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e148:	b	1e150 <__assert_fail@plt+0xcbe4>
   1e14c:	mov	r3, #0
   1e150:	mov	r0, r3
   1e154:	sub	sp, fp, #4
   1e158:	ldr	fp, [sp]
   1e15c:	add	sp, sp, #4
   1e160:	pop	{pc}		; (ldr pc, [sp], #4)
   1e164:	str	fp, [sp, #-8]!
   1e168:	str	lr, [sp, #4]
   1e16c:	add	fp, sp, #4
   1e170:	sub	sp, sp, #16
   1e174:	str	r0, [fp, #-16]
   1e178:	ldr	r3, [fp, #-16]
   1e17c:	and	r3, r3, #7
   1e180:	cmp	r3, #0
   1e184:	beq	1e18c <__assert_fail@plt+0xcc20>
   1e188:	bl	1153c <abort@plt>
   1e18c:	ldr	r3, [fp, #-16]
   1e190:	and	r3, r3, #8
   1e194:	cmp	r3, #0
   1e198:	beq	1e1c0 <__assert_fail@plt+0xcc54>
   1e19c:	ldr	r3, [fp, #-16]
   1e1a0:	sub	r3, r3, #1
   1e1a4:	ldrb	r3, [r3]
   1e1a8:	rsb	r3, r3, #0
   1e1ac:	ldr	r2, [fp, #-16]
   1e1b0:	add	r3, r2, r3
   1e1b4:	str	r3, [fp, #-8]
   1e1b8:	ldr	r0, [fp, #-8]
   1e1bc:	bl	1d7e8 <__assert_fail@plt+0xc27c>
   1e1c0:	nop	{0}
   1e1c4:	sub	sp, fp, #4
   1e1c8:	ldr	fp, [sp]
   1e1cc:	add	sp, sp, #4
   1e1d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1e1d4:	str	fp, [sp, #-8]!
   1e1d8:	str	lr, [sp, #4]
   1e1dc:	add	fp, sp, #4
   1e1e0:	sub	sp, sp, #16
   1e1e4:	str	r0, [fp, #-16]
   1e1e8:	ldr	r0, [fp, #-16]
   1e1ec:	bl	111e8 <wcwidth@plt>
   1e1f0:	str	r0, [fp, #-8]
   1e1f4:	ldr	r3, [fp, #-8]
   1e1f8:	cmp	r3, #0
   1e1fc:	bge	1e220 <__assert_fail@plt+0xccb4>
   1e200:	ldr	r0, [fp, #-16]
   1e204:	bl	11290 <iswcntrl@plt>
   1e208:	mov	r3, r0
   1e20c:	cmp	r3, #0
   1e210:	moveq	r3, #1
   1e214:	movne	r3, #0
   1e218:	uxtb	r3, r3
   1e21c:	b	1e224 <__assert_fail@plt+0xccb8>
   1e220:	ldr	r3, [fp, #-8]
   1e224:	mov	r0, r3
   1e228:	sub	sp, fp, #4
   1e22c:	ldr	fp, [sp]
   1e230:	add	sp, sp, #4
   1e234:	pop	{pc}		; (ldr pc, [sp], #4)
   1e238:	str	fp, [sp, #-8]!
   1e23c:	str	lr, [sp, #4]
   1e240:	add	fp, sp, #4
   1e244:	sub	sp, sp, #8
   1e248:	str	r0, [fp, #-8]
   1e24c:	str	r1, [fp, #-12]
   1e250:	ldr	r3, [fp, #-12]
   1e254:	ldr	r2, [r3]
   1e258:	ldr	r3, [fp, #-12]
   1e25c:	add	r3, r3, #16
   1e260:	cmp	r2, r3
   1e264:	bne	1e29c <__assert_fail@plt+0xcd30>
   1e268:	ldr	r3, [fp, #-8]
   1e26c:	add	r0, r3, #16
   1e270:	ldr	r3, [fp, #-12]
   1e274:	add	r1, r3, #16
   1e278:	ldr	r3, [fp, #-12]
   1e27c:	ldr	r3, [r3, #4]
   1e280:	mov	r2, r3
   1e284:	bl	11218 <memcpy@plt>
   1e288:	ldr	r3, [fp, #-8]
   1e28c:	add	r2, r3, #16
   1e290:	ldr	r3, [fp, #-8]
   1e294:	str	r2, [r3]
   1e298:	b	1e2ac <__assert_fail@plt+0xcd40>
   1e29c:	ldr	r3, [fp, #-12]
   1e2a0:	ldr	r2, [r3]
   1e2a4:	ldr	r3, [fp, #-8]
   1e2a8:	str	r2, [r3]
   1e2ac:	ldr	r3, [fp, #-12]
   1e2b0:	ldr	r2, [r3, #4]
   1e2b4:	ldr	r3, [fp, #-8]
   1e2b8:	str	r2, [r3, #4]
   1e2bc:	ldr	r3, [fp, #-12]
   1e2c0:	ldrb	r2, [r3, #8]
   1e2c4:	ldr	r3, [fp, #-8]
   1e2c8:	strb	r2, [r3, #8]
   1e2cc:	ldr	r3, [fp, #-8]
   1e2d0:	ldrb	r3, [r3, #8]
   1e2d4:	cmp	r3, #0
   1e2d8:	beq	1e2ec <__assert_fail@plt+0xcd80>
   1e2dc:	ldr	r3, [fp, #-12]
   1e2e0:	ldr	r2, [r3, #12]
   1e2e4:	ldr	r3, [fp, #-8]
   1e2e8:	str	r2, [r3, #12]
   1e2ec:	nop	{0}
   1e2f0:	sub	sp, fp, #4
   1e2f4:	ldr	fp, [sp]
   1e2f8:	add	sp, sp, #4
   1e2fc:	pop	{pc}		; (ldr pc, [sp], #4)
   1e300:	push	{fp}		; (str fp, [sp, #-4]!)
   1e304:	add	fp, sp, #0
   1e308:	sub	sp, sp, #12
   1e30c:	mov	r3, r0
   1e310:	strb	r3, [fp, #-5]
   1e314:	ldrb	r3, [fp, #-5]
   1e318:	lsr	r3, r3, #5
   1e31c:	uxtb	r3, r3
   1e320:	mov	r2, r3
   1e324:	movw	r3, #4136	; 0x1028
   1e328:	movt	r3, #2
   1e32c:	ldr	r2, [r3, r2, lsl #2]
   1e330:	ldrb	r3, [fp, #-5]
   1e334:	and	r3, r3, #31
   1e338:	lsr	r3, r2, r3
   1e33c:	and	r3, r3, #1
   1e340:	cmp	r3, #0
   1e344:	movne	r3, #1
   1e348:	moveq	r3, #0
   1e34c:	uxtb	r3, r3
   1e350:	mov	r0, r3
   1e354:	add	sp, fp, #0
   1e358:	pop	{fp}		; (ldr fp, [sp], #4)
   1e35c:	bx	lr
   1e360:	str	fp, [sp, #-8]!
   1e364:	str	lr, [sp, #4]
   1e368:	add	fp, sp, #4
   1e36c:	sub	sp, sp, #72	; 0x48
   1e370:	str	r0, [fp, #-72]	; 0xffffffb8
   1e374:	bl	112e4 <__ctype_get_mb_cur_max@plt>
   1e378:	mov	r3, r0
   1e37c:	cmp	r3, #1
   1e380:	bls	1e42c <__assert_fail@plt+0xcec0>
   1e384:	mov	r3, #0
   1e388:	str	r3, [fp, #-8]
   1e38c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e390:	str	r3, [fp, #-48]	; 0xffffffd0
   1e394:	mov	r3, #0
   1e398:	strb	r3, [fp, #-64]	; 0xffffffc0
   1e39c:	sub	r3, fp, #64	; 0x40
   1e3a0:	add	r3, r3, #4
   1e3a4:	mov	r2, #8
   1e3a8:	mov	r1, #0
   1e3ac:	mov	r0, r3
   1e3b0:	bl	11410 <memset@plt>
   1e3b4:	mov	r3, #0
   1e3b8:	strb	r3, [fp, #-52]	; 0xffffffcc
   1e3bc:	b	1e3e4 <__assert_fail@plt+0xce78>
   1e3c0:	ldr	r3, [fp, #-8]
   1e3c4:	add	r3, r3, #1
   1e3c8:	str	r3, [fp, #-8]
   1e3cc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1e3d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e3d4:	add	r3, r2, r3
   1e3d8:	str	r3, [fp, #-48]	; 0xffffffd0
   1e3dc:	mov	r3, #0
   1e3e0:	strb	r3, [fp, #-52]	; 0xffffffcc
   1e3e4:	sub	r3, fp, #64	; 0x40
   1e3e8:	mov	r0, r3
   1e3ec:	bl	18a08 <__assert_fail@plt+0x749c>
   1e3f0:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   1e3f4:	eor	r3, r3, #1
   1e3f8:	uxtb	r3, r3
   1e3fc:	cmp	r3, #0
   1e400:	bne	1e410 <__assert_fail@plt+0xcea4>
   1e404:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e408:	cmp	r3, #0
   1e40c:	beq	1e418 <__assert_fail@plt+0xceac>
   1e410:	mov	r3, #1
   1e414:	b	1e41c <__assert_fail@plt+0xceb0>
   1e418:	mov	r3, #0
   1e41c:	cmp	r3, #0
   1e420:	bne	1e3c0 <__assert_fail@plt+0xce54>
   1e424:	ldr	r3, [fp, #-8]
   1e428:	b	1e438 <__assert_fail@plt+0xcecc>
   1e42c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1e430:	bl	113bc <strlen@plt>
   1e434:	mov	r3, r0
   1e438:	mov	r0, r3
   1e43c:	sub	sp, fp, #4
   1e440:	ldr	fp, [sp]
   1e444:	add	sp, sp, #4
   1e448:	pop	{pc}		; (ldr pc, [sp], #4)
   1e44c:	str	fp, [sp, #-8]!
   1e450:	str	lr, [sp, #4]
   1e454:	add	fp, sp, #4
   1e458:	sub	sp, sp, #16
   1e45c:	str	r0, [fp, #-16]
   1e460:	mov	r1, #0
   1e464:	ldr	r0, [fp, #-16]
   1e468:	bl	11488 <setlocale@plt>
   1e46c:	str	r0, [fp, #-8]
   1e470:	ldr	r3, [fp, #-8]
   1e474:	mov	r0, r3
   1e478:	sub	sp, fp, #4
   1e47c:	ldr	fp, [sp]
   1e480:	add	sp, sp, #4
   1e484:	pop	{pc}		; (ldr pc, [sp], #4)
   1e488:	str	fp, [sp, #-8]!
   1e48c:	str	lr, [sp, #4]
   1e490:	add	fp, sp, #4
   1e494:	sub	sp, sp, #24
   1e498:	str	r0, [fp, #-16]
   1e49c:	str	r1, [fp, #-20]	; 0xffffffec
   1e4a0:	str	r2, [fp, #-24]	; 0xffffffe8
   1e4a4:	ldr	r0, [fp, #-16]
   1e4a8:	bl	1e44c <__assert_fail@plt+0xcee0>
   1e4ac:	str	r0, [fp, #-8]
   1e4b0:	ldr	r3, [fp, #-8]
   1e4b4:	cmp	r3, #0
   1e4b8:	bne	1e4dc <__assert_fail@plt+0xcf70>
   1e4bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e4c0:	cmp	r3, #0
   1e4c4:	beq	1e4d4 <__assert_fail@plt+0xcf68>
   1e4c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e4cc:	mov	r2, #0
   1e4d0:	strb	r2, [r3]
   1e4d4:	mov	r3, #22
   1e4d8:	b	1e558 <__assert_fail@plt+0xcfec>
   1e4dc:	ldr	r0, [fp, #-8]
   1e4e0:	bl	113bc <strlen@plt>
   1e4e4:	str	r0, [fp, #-12]
   1e4e8:	ldr	r2, [fp, #-12]
   1e4ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e4f0:	cmp	r2, r3
   1e4f4:	bcs	1e518 <__assert_fail@plt+0xcfac>
   1e4f8:	ldr	r3, [fp, #-12]
   1e4fc:	add	r3, r3, #1
   1e500:	mov	r2, r3
   1e504:	ldr	r1, [fp, #-8]
   1e508:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e50c:	bl	11218 <memcpy@plt>
   1e510:	mov	r3, #0
   1e514:	b	1e558 <__assert_fail@plt+0xcfec>
   1e518:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e51c:	cmp	r3, #0
   1e520:	beq	1e554 <__assert_fail@plt+0xcfe8>
   1e524:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e528:	sub	r3, r3, #1
   1e52c:	mov	r2, r3
   1e530:	ldr	r1, [fp, #-8]
   1e534:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e538:	bl	11218 <memcpy@plt>
   1e53c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e540:	sub	r3, r3, #1
   1e544:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e548:	add	r3, r2, r3
   1e54c:	mov	r2, #0
   1e550:	strb	r2, [r3]
   1e554:	mov	r3, #34	; 0x22
   1e558:	mov	r0, r3
   1e55c:	sub	sp, fp, #4
   1e560:	ldr	fp, [sp]
   1e564:	add	sp, sp, #4
   1e568:	pop	{pc}		; (ldr pc, [sp], #4)
   1e56c:	str	fp, [sp, #-8]!
   1e570:	str	lr, [sp, #4]
   1e574:	add	fp, sp, #4
   1e578:	sub	sp, sp, #16
   1e57c:	str	r0, [fp, #-8]
   1e580:	str	r1, [fp, #-12]
   1e584:	str	r2, [fp, #-16]
   1e588:	ldr	r2, [fp, #-16]
   1e58c:	ldr	r1, [fp, #-12]
   1e590:	ldr	r0, [fp, #-8]
   1e594:	bl	1e488 <__assert_fail@plt+0xcf1c>
   1e598:	mov	r3, r0
   1e59c:	mov	r0, r3
   1e5a0:	sub	sp, fp, #4
   1e5a4:	ldr	fp, [sp]
   1e5a8:	add	sp, sp, #4
   1e5ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1e5b0:	str	fp, [sp, #-8]!
   1e5b4:	str	lr, [sp, #4]
   1e5b8:	add	fp, sp, #4
   1e5bc:	sub	sp, sp, #8
   1e5c0:	str	r0, [fp, #-8]
   1e5c4:	ldr	r0, [fp, #-8]
   1e5c8:	bl	1e44c <__assert_fail@plt+0xcee0>
   1e5cc:	mov	r3, r0
   1e5d0:	mov	r0, r3
   1e5d4:	sub	sp, fp, #4
   1e5d8:	ldr	fp, [sp]
   1e5dc:	add	sp, sp, #4
   1e5e0:	pop	{pc}		; (ldr pc, [sp], #4)
   1e5e4:	str	fp, [sp, #-8]!
   1e5e8:	str	lr, [sp, #4]
   1e5ec:	add	fp, sp, #4
   1e5f0:	sub	sp, sp, #8
   1e5f4:	str	r0, [fp, #-8]
   1e5f8:	mov	r2, #3
   1e5fc:	mov	r1, #0
   1e600:	ldr	r0, [fp, #-8]
   1e604:	bl	1d2bc <__assert_fail@plt+0xbd50>
   1e608:	mov	r3, r0
   1e60c:	mov	r0, r3
   1e610:	sub	sp, fp, #4
   1e614:	ldr	fp, [sp]
   1e618:	add	sp, sp, #4
   1e61c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e620:	push	{fp}		; (str fp, [sp, #-4]!)
   1e624:	add	fp, sp, #0
   1e628:	sub	sp, sp, #12
   1e62c:	str	r0, [fp, #-8]
   1e630:	ldr	r3, [fp, #-8]
   1e634:	cmp	r3, #90	; 0x5a
   1e638:	bgt	1e65c <__assert_fail@plt+0xd0f0>
   1e63c:	ldr	r3, [fp, #-8]
   1e640:	cmp	r3, #65	; 0x41
   1e644:	bge	1e66c <__assert_fail@plt+0xd100>
   1e648:	ldr	r3, [fp, #-8]
   1e64c:	sub	r3, r3, #48	; 0x30
   1e650:	cmp	r3, #9
   1e654:	bhi	1e674 <__assert_fail@plt+0xd108>
   1e658:	b	1e66c <__assert_fail@plt+0xd100>
   1e65c:	ldr	r3, [fp, #-8]
   1e660:	sub	r3, r3, #97	; 0x61
   1e664:	cmp	r3, #25
   1e668:	bhi	1e674 <__assert_fail@plt+0xd108>
   1e66c:	mov	r3, #1
   1e670:	b	1e678 <__assert_fail@plt+0xd10c>
   1e674:	mov	r3, #0
   1e678:	mov	r0, r3
   1e67c:	add	sp, fp, #0
   1e680:	pop	{fp}		; (ldr fp, [sp], #4)
   1e684:	bx	lr
   1e688:	push	{fp}		; (str fp, [sp, #-4]!)
   1e68c:	add	fp, sp, #0
   1e690:	sub	sp, sp, #12
   1e694:	str	r0, [fp, #-8]
   1e698:	ldr	r3, [fp, #-8]
   1e69c:	cmp	r3, #65	; 0x41
   1e6a0:	blt	1e6c8 <__assert_fail@plt+0xd15c>
   1e6a4:	ldr	r3, [fp, #-8]
   1e6a8:	cmp	r3, #90	; 0x5a
   1e6ac:	ble	1e6c0 <__assert_fail@plt+0xd154>
   1e6b0:	ldr	r3, [fp, #-8]
   1e6b4:	sub	r3, r3, #97	; 0x61
   1e6b8:	cmp	r3, #25
   1e6bc:	bhi	1e6c8 <__assert_fail@plt+0xd15c>
   1e6c0:	mov	r3, #1
   1e6c4:	b	1e6cc <__assert_fail@plt+0xd160>
   1e6c8:	mov	r3, #0
   1e6cc:	mov	r0, r3
   1e6d0:	add	sp, fp, #0
   1e6d4:	pop	{fp}		; (ldr fp, [sp], #4)
   1e6d8:	bx	lr
   1e6dc:	push	{fp}		; (str fp, [sp, #-4]!)
   1e6e0:	add	fp, sp, #0
   1e6e4:	sub	sp, sp, #12
   1e6e8:	str	r0, [fp, #-8]
   1e6ec:	ldr	r3, [fp, #-8]
   1e6f0:	cmp	r3, #127	; 0x7f
   1e6f4:	bhi	1e700 <__assert_fail@plt+0xd194>
   1e6f8:	mov	r3, #1
   1e6fc:	b	1e704 <__assert_fail@plt+0xd198>
   1e700:	mov	r3, #0
   1e704:	mov	r0, r3
   1e708:	add	sp, fp, #0
   1e70c:	pop	{fp}		; (ldr fp, [sp], #4)
   1e710:	bx	lr
   1e714:	push	{fp}		; (str fp, [sp, #-4]!)
   1e718:	add	fp, sp, #0
   1e71c:	sub	sp, sp, #12
   1e720:	str	r0, [fp, #-8]
   1e724:	ldr	r3, [fp, #-8]
   1e728:	cmp	r3, #32
   1e72c:	beq	1e73c <__assert_fail@plt+0xd1d0>
   1e730:	ldr	r3, [fp, #-8]
   1e734:	cmp	r3, #9
   1e738:	bne	1e744 <__assert_fail@plt+0xd1d8>
   1e73c:	mov	r3, #1
   1e740:	b	1e748 <__assert_fail@plt+0xd1dc>
   1e744:	mov	r3, #0
   1e748:	and	r3, r3, #1
   1e74c:	uxtb	r3, r3
   1e750:	mov	r0, r3
   1e754:	add	sp, fp, #0
   1e758:	pop	{fp}		; (ldr fp, [sp], #4)
   1e75c:	bx	lr
   1e760:	push	{fp}		; (str fp, [sp, #-4]!)
   1e764:	add	fp, sp, #0
   1e768:	sub	sp, sp, #12
   1e76c:	str	r0, [fp, #-8]
   1e770:	ldr	r3, [fp, #-8]
   1e774:	cmp	r3, #0
   1e778:	blt	1e79c <__assert_fail@plt+0xd230>
   1e77c:	ldr	r3, [fp, #-8]
   1e780:	cmp	r3, #31
   1e784:	ble	1e794 <__assert_fail@plt+0xd228>
   1e788:	ldr	r3, [fp, #-8]
   1e78c:	cmp	r3, #127	; 0x7f
   1e790:	bne	1e79c <__assert_fail@plt+0xd230>
   1e794:	mov	r3, #1
   1e798:	b	1e7a0 <__assert_fail@plt+0xd234>
   1e79c:	mov	r3, #0
   1e7a0:	mov	r0, r3
   1e7a4:	add	sp, fp, #0
   1e7a8:	pop	{fp}		; (ldr fp, [sp], #4)
   1e7ac:	bx	lr
   1e7b0:	push	{fp}		; (str fp, [sp, #-4]!)
   1e7b4:	add	fp, sp, #0
   1e7b8:	sub	sp, sp, #12
   1e7bc:	str	r0, [fp, #-8]
   1e7c0:	ldr	r3, [fp, #-8]
   1e7c4:	sub	r3, r3, #48	; 0x30
   1e7c8:	cmp	r3, #9
   1e7cc:	bhi	1e7d8 <__assert_fail@plt+0xd26c>
   1e7d0:	mov	r3, #1
   1e7d4:	b	1e7dc <__assert_fail@plt+0xd270>
   1e7d8:	mov	r3, #0
   1e7dc:	mov	r0, r3
   1e7e0:	add	sp, fp, #0
   1e7e4:	pop	{fp}		; (ldr fp, [sp], #4)
   1e7e8:	bx	lr
   1e7ec:	push	{fp}		; (str fp, [sp, #-4]!)
   1e7f0:	add	fp, sp, #0
   1e7f4:	sub	sp, sp, #12
   1e7f8:	str	r0, [fp, #-8]
   1e7fc:	ldr	r3, [fp, #-8]
   1e800:	sub	r3, r3, #33	; 0x21
   1e804:	cmp	r3, #93	; 0x5d
   1e808:	bhi	1e814 <__assert_fail@plt+0xd2a8>
   1e80c:	mov	r3, #1
   1e810:	b	1e818 <__assert_fail@plt+0xd2ac>
   1e814:	mov	r3, #0
   1e818:	mov	r0, r3
   1e81c:	add	sp, fp, #0
   1e820:	pop	{fp}		; (ldr fp, [sp], #4)
   1e824:	bx	lr
   1e828:	push	{fp}		; (str fp, [sp, #-4]!)
   1e82c:	add	fp, sp, #0
   1e830:	sub	sp, sp, #12
   1e834:	str	r0, [fp, #-8]
   1e838:	ldr	r3, [fp, #-8]
   1e83c:	sub	r3, r3, #97	; 0x61
   1e840:	cmp	r3, #25
   1e844:	bhi	1e850 <__assert_fail@plt+0xd2e4>
   1e848:	mov	r3, #1
   1e84c:	b	1e854 <__assert_fail@plt+0xd2e8>
   1e850:	mov	r3, #0
   1e854:	mov	r0, r3
   1e858:	add	sp, fp, #0
   1e85c:	pop	{fp}		; (ldr fp, [sp], #4)
   1e860:	bx	lr
   1e864:	push	{fp}		; (str fp, [sp, #-4]!)
   1e868:	add	fp, sp, #0
   1e86c:	sub	sp, sp, #12
   1e870:	str	r0, [fp, #-8]
   1e874:	ldr	r3, [fp, #-8]
   1e878:	sub	r3, r3, #32
   1e87c:	cmp	r3, #94	; 0x5e
   1e880:	bhi	1e88c <__assert_fail@plt+0xd320>
   1e884:	mov	r3, #1
   1e888:	b	1e890 <__assert_fail@plt+0xd324>
   1e88c:	mov	r3, #0
   1e890:	mov	r0, r3
   1e894:	add	sp, fp, #0
   1e898:	pop	{fp}		; (ldr fp, [sp], #4)
   1e89c:	bx	lr
   1e8a0:	push	{fp}		; (str fp, [sp, #-4]!)
   1e8a4:	add	fp, sp, #0
   1e8a8:	sub	sp, sp, #12
   1e8ac:	str	r0, [fp, #-8]
   1e8b0:	ldr	r3, [fp, #-8]
   1e8b4:	cmp	r3, #64	; 0x40
   1e8b8:	bgt	1e8dc <__assert_fail@plt+0xd370>
   1e8bc:	ldr	r3, [fp, #-8]
   1e8c0:	cmp	r3, #58	; 0x3a
   1e8c4:	bge	1e904 <__assert_fail@plt+0xd398>
   1e8c8:	ldr	r3, [fp, #-8]
   1e8cc:	sub	r3, r3, #33	; 0x21
   1e8d0:	cmp	r3, #14
   1e8d4:	bhi	1e90c <__assert_fail@plt+0xd3a0>
   1e8d8:	b	1e904 <__assert_fail@plt+0xd398>
   1e8dc:	ldr	r3, [fp, #-8]
   1e8e0:	cmp	r3, #91	; 0x5b
   1e8e4:	blt	1e90c <__assert_fail@plt+0xd3a0>
   1e8e8:	ldr	r3, [fp, #-8]
   1e8ec:	cmp	r3, #96	; 0x60
   1e8f0:	ble	1e904 <__assert_fail@plt+0xd398>
   1e8f4:	ldr	r3, [fp, #-8]
   1e8f8:	sub	r3, r3, #123	; 0x7b
   1e8fc:	cmp	r3, #3
   1e900:	bhi	1e90c <__assert_fail@plt+0xd3a0>
   1e904:	mov	r3, #1
   1e908:	b	1e910 <__assert_fail@plt+0xd3a4>
   1e90c:	mov	r3, #0
   1e910:	mov	r0, r3
   1e914:	add	sp, fp, #0
   1e918:	pop	{fp}		; (ldr fp, [sp], #4)
   1e91c:	bx	lr
   1e920:	push	{fp}		; (str fp, [sp, #-4]!)
   1e924:	add	fp, sp, #0
   1e928:	sub	sp, sp, #12
   1e92c:	str	r0, [fp, #-8]
   1e930:	ldr	r3, [fp, #-8]
   1e934:	cmp	r3, #9
   1e938:	blt	1e95c <__assert_fail@plt+0xd3f0>
   1e93c:	ldr	r3, [fp, #-8]
   1e940:	cmp	r3, #13
   1e944:	ble	1e954 <__assert_fail@plt+0xd3e8>
   1e948:	ldr	r3, [fp, #-8]
   1e94c:	cmp	r3, #32
   1e950:	bne	1e95c <__assert_fail@plt+0xd3f0>
   1e954:	mov	r3, #1
   1e958:	b	1e960 <__assert_fail@plt+0xd3f4>
   1e95c:	mov	r3, #0
   1e960:	mov	r0, r3
   1e964:	add	sp, fp, #0
   1e968:	pop	{fp}		; (ldr fp, [sp], #4)
   1e96c:	bx	lr
   1e970:	push	{fp}		; (str fp, [sp, #-4]!)
   1e974:	add	fp, sp, #0
   1e978:	sub	sp, sp, #12
   1e97c:	str	r0, [fp, #-8]
   1e980:	ldr	r3, [fp, #-8]
   1e984:	sub	r3, r3, #65	; 0x41
   1e988:	cmp	r3, #25
   1e98c:	bhi	1e998 <__assert_fail@plt+0xd42c>
   1e990:	mov	r3, #1
   1e994:	b	1e99c <__assert_fail@plt+0xd430>
   1e998:	mov	r3, #0
   1e99c:	mov	r0, r3
   1e9a0:	add	sp, fp, #0
   1e9a4:	pop	{fp}		; (ldr fp, [sp], #4)
   1e9a8:	bx	lr
   1e9ac:	push	{fp}		; (str fp, [sp, #-4]!)
   1e9b0:	add	fp, sp, #0
   1e9b4:	sub	sp, sp, #12
   1e9b8:	str	r0, [fp, #-8]
   1e9bc:	ldr	r3, [fp, #-8]
   1e9c0:	sub	r3, r3, #48	; 0x30
   1e9c4:	cmp	r3, #54	; 0x36
   1e9c8:	ldrls	pc, [pc, r3, lsl #2]
   1e9cc:	b	1eab4 <__assert_fail@plt+0xd548>
   1e9d0:	andeq	lr, r1, ip, lsr #21
   1e9d4:	andeq	lr, r1, ip, lsr #21
   1e9d8:	andeq	lr, r1, ip, lsr #21
   1e9dc:	andeq	lr, r1, ip, lsr #21
   1e9e0:	andeq	lr, r1, ip, lsr #21
   1e9e4:	andeq	lr, r1, ip, lsr #21
   1e9e8:	andeq	lr, r1, ip, lsr #21
   1e9ec:	andeq	lr, r1, ip, lsr #21
   1e9f0:	andeq	lr, r1, ip, lsr #21
   1e9f4:	andeq	lr, r1, ip, lsr #21
   1e9f8:			; <UNDEFINED> instruction: 0x0001eab4
   1e9fc:			; <UNDEFINED> instruction: 0x0001eab4
   1ea00:			; <UNDEFINED> instruction: 0x0001eab4
   1ea04:			; <UNDEFINED> instruction: 0x0001eab4
   1ea08:			; <UNDEFINED> instruction: 0x0001eab4
   1ea0c:			; <UNDEFINED> instruction: 0x0001eab4
   1ea10:			; <UNDEFINED> instruction: 0x0001eab4
   1ea14:	andeq	lr, r1, ip, lsr #21
   1ea18:	andeq	lr, r1, ip, lsr #21
   1ea1c:	andeq	lr, r1, ip, lsr #21
   1ea20:	andeq	lr, r1, ip, lsr #21
   1ea24:	andeq	lr, r1, ip, lsr #21
   1ea28:	andeq	lr, r1, ip, lsr #21
   1ea2c:			; <UNDEFINED> instruction: 0x0001eab4
   1ea30:			; <UNDEFINED> instruction: 0x0001eab4
   1ea34:			; <UNDEFINED> instruction: 0x0001eab4
   1ea38:			; <UNDEFINED> instruction: 0x0001eab4
   1ea3c:			; <UNDEFINED> instruction: 0x0001eab4
   1ea40:			; <UNDEFINED> instruction: 0x0001eab4
   1ea44:			; <UNDEFINED> instruction: 0x0001eab4
   1ea48:			; <UNDEFINED> instruction: 0x0001eab4
   1ea4c:			; <UNDEFINED> instruction: 0x0001eab4
   1ea50:			; <UNDEFINED> instruction: 0x0001eab4
   1ea54:			; <UNDEFINED> instruction: 0x0001eab4
   1ea58:			; <UNDEFINED> instruction: 0x0001eab4
   1ea5c:			; <UNDEFINED> instruction: 0x0001eab4
   1ea60:			; <UNDEFINED> instruction: 0x0001eab4
   1ea64:			; <UNDEFINED> instruction: 0x0001eab4
   1ea68:			; <UNDEFINED> instruction: 0x0001eab4
   1ea6c:			; <UNDEFINED> instruction: 0x0001eab4
   1ea70:			; <UNDEFINED> instruction: 0x0001eab4
   1ea74:			; <UNDEFINED> instruction: 0x0001eab4
   1ea78:			; <UNDEFINED> instruction: 0x0001eab4
   1ea7c:			; <UNDEFINED> instruction: 0x0001eab4
   1ea80:			; <UNDEFINED> instruction: 0x0001eab4
   1ea84:			; <UNDEFINED> instruction: 0x0001eab4
   1ea88:			; <UNDEFINED> instruction: 0x0001eab4
   1ea8c:			; <UNDEFINED> instruction: 0x0001eab4
   1ea90:			; <UNDEFINED> instruction: 0x0001eab4
   1ea94:	andeq	lr, r1, ip, lsr #21
   1ea98:	andeq	lr, r1, ip, lsr #21
   1ea9c:	andeq	lr, r1, ip, lsr #21
   1eaa0:	andeq	lr, r1, ip, lsr #21
   1eaa4:	andeq	lr, r1, ip, lsr #21
   1eaa8:	andeq	lr, r1, ip, lsr #21
   1eaac:	mov	r3, #1
   1eab0:	b	1eab8 <__assert_fail@plt+0xd54c>
   1eab4:	mov	r3, #0
   1eab8:	mov	r0, r3
   1eabc:	add	sp, fp, #0
   1eac0:	pop	{fp}		; (ldr fp, [sp], #4)
   1eac4:	bx	lr
   1eac8:	push	{fp}		; (str fp, [sp, #-4]!)
   1eacc:	add	fp, sp, #0
   1ead0:	sub	sp, sp, #12
   1ead4:	str	r0, [fp, #-8]
   1ead8:	ldr	r3, [fp, #-8]
   1eadc:	sub	r3, r3, #65	; 0x41
   1eae0:	cmp	r3, #25
   1eae4:	bhi	1eaf4 <__assert_fail@plt+0xd588>
   1eae8:	ldr	r3, [fp, #-8]
   1eaec:	add	r3, r3, #32
   1eaf0:	b	1eaf8 <__assert_fail@plt+0xd58c>
   1eaf4:	ldr	r3, [fp, #-8]
   1eaf8:	mov	r0, r3
   1eafc:	add	sp, fp, #0
   1eb00:	pop	{fp}		; (ldr fp, [sp], #4)
   1eb04:	bx	lr
   1eb08:	push	{fp}		; (str fp, [sp, #-4]!)
   1eb0c:	add	fp, sp, #0
   1eb10:	sub	sp, sp, #12
   1eb14:	str	r0, [fp, #-8]
   1eb18:	ldr	r3, [fp, #-8]
   1eb1c:	sub	r3, r3, #97	; 0x61
   1eb20:	cmp	r3, #25
   1eb24:	bhi	1eb34 <__assert_fail@plt+0xd5c8>
   1eb28:	ldr	r3, [fp, #-8]
   1eb2c:	sub	r3, r3, #32
   1eb30:	b	1eb38 <__assert_fail@plt+0xd5cc>
   1eb34:	ldr	r3, [fp, #-8]
   1eb38:	mov	r0, r3
   1eb3c:	add	sp, fp, #0
   1eb40:	pop	{fp}		; (ldr fp, [sp], #4)
   1eb44:	bx	lr
   1eb48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1eb4c:	mov	r7, r0
   1eb50:	ldr	r6, [pc, #72]	; 1eba0 <__assert_fail@plt+0xd634>
   1eb54:	ldr	r5, [pc, #72]	; 1eba4 <__assert_fail@plt+0xd638>
   1eb58:	add	r6, pc, r6
   1eb5c:	add	r5, pc, r5
   1eb60:	sub	r6, r6, r5
   1eb64:	mov	r8, r1
   1eb68:	mov	r9, r2
   1eb6c:	bl	11174 <fdopen@plt-0x20>
   1eb70:	asrs	r6, r6, #2
   1eb74:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1eb78:	mov	r4, #0
   1eb7c:	add	r4, r4, #1
   1eb80:	ldr	r3, [r5], #4
   1eb84:	mov	r2, r9
   1eb88:	mov	r1, r8
   1eb8c:	mov	r0, r7
   1eb90:	blx	r3
   1eb94:	cmp	r6, r4
   1eb98:	bne	1eb7c <__assert_fail@plt+0xd610>
   1eb9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1eba0:			; <UNDEFINED> instruction: 0x000133b4
   1eba4:	andeq	r3, r1, ip, lsr #7
   1eba8:	bx	lr
   1ebac:	ldr	r3, [pc, #12]	; 1ebc0 <__assert_fail@plt+0xd654>
   1ebb0:	mov	r1, #0
   1ebb4:	add	r3, pc, r3
   1ebb8:	ldr	r2, [r3]
   1ebbc:	b	11404 <__cxa_atexit@plt>
   1ebc0:	andeq	r3, r1, r4, lsr #11

Disassembly of section .fini:

0001ebc4 <.fini>:
   1ebc4:	push	{r3, lr}
   1ebc8:	pop	{r3, pc}
