
../repos/dvidelabs-flatcc-3b39ef7/bin/flatcc:     file format elf32-littlearm


Disassembly of section .init:

00013f7c <.init>:
   13f7c:	push	{r3, lr}
   13f80:	bl	14770 <_start@@Base+0x3c>
   13f84:	pop	{r3, pc}

Disassembly of section .plt:

00013f88 <calloc@plt-0x14>:
   13f88:	push	{lr}		; (str lr, [sp, #-4]!)
   13f8c:	ldr	lr, [pc, #4]	; 13f98 <calloc@plt-0x4>
   13f90:	add	lr, pc, lr
   13f94:	ldr	pc, [lr, #8]!
   13f98:	andeq	r7, r5, r8, rrx

00013f9c <calloc@plt>:
   13f9c:	add	ip, pc, #0, 12
   13fa0:	add	ip, ip, #356352	; 0x57000
   13fa4:	ldr	pc, [ip, #104]!	; 0x68

00013fa8 <raise@plt>:
   13fa8:	add	ip, pc, #0, 12
   13fac:	add	ip, ip, #356352	; 0x57000
   13fb0:	ldr	pc, [ip, #96]!	; 0x60

00013fb4 <strcmp@plt>:
   13fb4:	add	ip, pc, #0, 12
   13fb8:	add	ip, ip, #356352	; 0x57000
   13fbc:	ldr	pc, [ip, #88]!	; 0x58

00013fc0 <fopen@plt>:
   13fc0:	add	ip, pc, #0, 12
   13fc4:	add	ip, ip, #356352	; 0x57000
   13fc8:	ldr	pc, [ip, #80]!	; 0x50

00013fcc <free@plt>:
   13fcc:	add	ip, pc, #0, 12
   13fd0:	add	ip, ip, #356352	; 0x57000
   13fd4:	ldr	pc, [ip, #72]!	; 0x48

00013fd8 <memcpy@plt>:
   13fd8:	add	ip, pc, #0, 12
   13fdc:	add	ip, ip, #356352	; 0x57000
   13fe0:	ldr	pc, [ip, #64]!	; 0x40

00013fe4 <ftell@plt>:
   13fe4:	add	ip, pc, #0, 12
   13fe8:	add	ip, ip, #356352	; 0x57000
   13fec:	ldr	pc, [ip, #56]!	; 0x38

00013ff0 <memcmp@plt>:
   13ff0:	add	ip, pc, #0, 12
   13ff4:	add	ip, ip, #356352	; 0x57000
   13ff8:	ldr	pc, [ip, #48]!	; 0x30

00013ffc <rewind@plt>:
   13ffc:	add	ip, pc, #0, 12
   14000:	add	ip, ip, #356352	; 0x57000
   14004:	ldr	pc, [ip, #40]!	; 0x28

00014008 <realloc@plt>:
   14008:	add	ip, pc, #0, 12
   1400c:	add	ip, ip, #356352	; 0x57000
   14010:	ldr	pc, [ip, #32]!

00014014 <fwrite@plt>:
   14014:	add	ip, pc, #0, 12
   14018:	add	ip, ip, #356352	; 0x57000
   1401c:	ldr	pc, [ip, #24]!

00014020 <fread@plt>:
   14020:	add	ip, pc, #0, 12
   14024:	add	ip, ip, #356352	; 0x57000
   14028:	ldr	pc, [ip, #16]!

0001402c <puts@plt>:
   1402c:	add	ip, pc, #0, 12
   14030:	add	ip, ip, #356352	; 0x57000
   14034:	ldr	pc, [ip, #8]!

00014038 <malloc@plt>:
   14038:	add	ip, pc, #0, 12
   1403c:	add	ip, ip, #356352	; 0x57000
   14040:	ldr	pc, [ip, #0]!

00014044 <__libc_start_main@plt>:
   14044:	add	ip, pc, #0, 12
   14048:	add	ip, ip, #352256	; 0x56000
   1404c:	ldr	pc, [ip, #4088]!	; 0xff8

00014050 <__ctype_toupper_loc@plt>:
   14050:	add	ip, pc, #0, 12
   14054:	add	ip, ip, #352256	; 0x56000
   14058:	ldr	pc, [ip, #4080]!	; 0xff0

0001405c <__gmon_start__@plt>:
   1405c:	add	ip, pc, #0, 12
   14060:	add	ip, ip, #352256	; 0x56000
   14064:	ldr	pc, [ip, #4072]!	; 0xfe8

00014068 <exit@plt>:
   14068:	add	ip, pc, #0, 12
   1406c:	add	ip, ip, #352256	; 0x56000
   14070:	ldr	pc, [ip, #4064]!	; 0xfe0

00014074 <strlen@plt>:
   14074:	add	ip, pc, #0, 12
   14078:	add	ip, ip, #352256	; 0x56000
   1407c:	ldr	pc, [ip, #4056]!	; 0xfd8

00014080 <strchr@plt>:
   14080:	add	ip, pc, #0, 12
   14084:	add	ip, ip, #352256	; 0x56000
   14088:	ldr	pc, [ip, #4048]!	; 0xfd0

0001408c <fprintf@plt>:
   1408c:	add	ip, pc, #0, 12
   14090:	add	ip, ip, #352256	; 0x56000
   14094:	ldr	pc, [ip, #4040]!	; 0xfc8

00014098 <posix_memalign@plt>:
   14098:	add	ip, pc, #0, 12
   1409c:	add	ip, ip, #352256	; 0x56000
   140a0:	ldr	pc, [ip, #4032]!	; 0xfc0

000140a4 <memset@plt>:
   140a4:	add	ip, pc, #0, 12
   140a8:	add	ip, ip, #352256	; 0x56000
   140ac:	ldr	pc, [ip, #4024]!	; 0xfb8

000140b0 <strncpy@plt>:
   140b0:	add	ip, pc, #0, 12
   140b4:	add	ip, ip, #352256	; 0x56000
   140b8:	ldr	pc, [ip, #4016]!	; 0xfb0

000140bc <strtod@plt>:
   140bc:	add	ip, pc, #0, 12
   140c0:	add	ip, ip, #352256	; 0x56000
   140c4:	ldr	pc, [ip, #4008]!	; 0xfa8

000140c8 <memchr@plt>:
   140c8:	add	ip, pc, #0, 12
   140cc:	add	ip, ip, #352256	; 0x56000
   140d0:	ldr	pc, [ip, #4000]!	; 0xfa0

000140d4 <fclose@plt>:
   140d4:	add	ip, pc, #0, 12
   140d8:	add	ip, ip, #352256	; 0x56000
   140dc:	ldr	pc, [ip, #3992]!	; 0xf98

000140e0 <vfprintf@plt>:
   140e0:	add	ip, pc, #0, 12
   140e4:	add	ip, ip, #352256	; 0x56000
   140e8:	ldr	pc, [ip, #3984]!	; 0xf90

000140ec <fputc@plt>:
   140ec:	add	ip, pc, #0, 12
   140f0:	add	ip, ip, #352256	; 0x56000
   140f4:	ldr	pc, [ip, #3976]!	; 0xf88

000140f8 <sprintf@plt>:
   140f8:	add	ip, pc, #0, 12
   140fc:	add	ip, ip, #352256	; 0x56000
   14100:	ldr	pc, [ip, #3968]!	; 0xf80

00014104 <vsnprintf@plt>:
   14104:	add	ip, pc, #0, 12
   14108:	add	ip, ip, #352256	; 0x56000
   1410c:	ldr	pc, [ip, #3960]!	; 0xf78

00014110 <qsort@plt>:
   14110:	add	ip, pc, #0, 12
   14114:	add	ip, ip, #352256	; 0x56000
   14118:	ldr	pc, [ip, #3952]!	; 0xf70

0001411c <fseek@plt>:
   1411c:	add	ip, pc, #0, 12
   14120:	add	ip, ip, #352256	; 0x56000
   14124:	ldr	pc, [ip, #3944]!	; 0xf68

00014128 <strncmp@plt>:
   14128:	add	ip, pc, #0, 12
   1412c:	add	ip, ip, #352256	; 0x56000
   14130:	ldr	pc, [ip, #3936]!	; 0xf60

00014134 <abort@plt>:
   14134:	add	ip, pc, #0, 12
   14138:	add	ip, ip, #352256	; 0x56000
   1413c:	ldr	pc, [ip, #3928]!	; 0xf58

00014140 <__assert_fail@plt>:
   14140:	add	ip, pc, #0, 12
   14144:	add	ip, ip, #352256	; 0x56000
   14148:	ldr	pc, [ip, #3920]!	; 0xf50

Disassembly of section .text:

00014150 <main@@Base-0x1b4>:
   14150:	ldr	r3, [pc, #44]	; 14184 <__assert_fail@plt+0x44>
   14154:	ldr	r0, [pc, #44]	; 14188 <__assert_fail@plt+0x48>
   14158:	add	r3, pc, r3
   1415c:	push	{r4, lr}
   14160:	mov	r2, #34	; 0x22
   14164:	ldr	ip, [r3, r0]
   14168:	ldr	r0, [pc, #28]	; 1418c <__assert_fail@plt+0x4c>
   1416c:	mov	r1, #1
   14170:	add	r0, pc, r0
   14174:	ldr	r3, [ip]
   14178:	bl	14014 <fwrite@plt>
   1417c:	mov	r0, #1
   14180:	bl	14068 <exit@plt>
   14184:	andeq	r6, r5, r0, lsr #29
   14188:	andeq	r0, r0, r0, lsr #1
   1418c:	andeq	ip, r2, r4, asr #12
   14190:	ldr	r3, [pc, #28]	; 141b4 <__assert_fail@plt+0x74>
   14194:	ldr	r1, [pc, #28]	; 141b8 <__assert_fail@plt+0x78>
   14198:	ldr	r0, [pc, #28]	; 141bc <__assert_fail@plt+0x7c>
   1419c:	push	{r4, lr}
   141a0:	add	r3, pc, r3
   141a4:	mov	r2, #195	; 0xc3
   141a8:	add	r1, pc, r1
   141ac:	add	r0, pc, r0
   141b0:	bl	14140 <__assert_fail@plt>
   141b4:			; <UNDEFINED> instruction: 0x00042fb8
   141b8:	ldrdeq	r3, [r4], -r4
   141bc:	andeq	r3, r4, r8, asr #2
   141c0:	ldr	r3, [pc, #44]	; 141f4 <__assert_fail@plt+0xb4>
   141c4:	ldr	r0, [pc, #44]	; 141f8 <__assert_fail@plt+0xb8>
   141c8:	add	r3, pc, r3
   141cc:	push	{r4, lr}
   141d0:	mov	r2, #34	; 0x22
   141d4:	ldr	ip, [r3, r0]
   141d8:	ldr	r0, [pc, #28]	; 141fc <__assert_fail@plt+0xbc>
   141dc:	mov	r1, #1
   141e0:	add	r0, pc, r0
   141e4:	ldr	r3, [ip]
   141e8:	bl	14014 <fwrite@plt>
   141ec:	mov	r0, #1
   141f0:	bl	14068 <exit@plt>
   141f4:	andeq	r6, r5, r0, lsr lr
   141f8:	andeq	r0, r0, r0, lsr #1
   141fc:	ldrdeq	ip, [r2], -r4
   14200:	ldr	r3, [pc, #28]	; 14224 <__assert_fail@plt+0xe4>
   14204:	ldr	r1, [pc, #28]	; 14228 <__assert_fail@plt+0xe8>
   14208:	ldr	r0, [pc, #28]	; 1422c <__assert_fail@plt+0xec>
   1420c:	push	{r4, lr}
   14210:	add	r3, pc, r3
   14214:	mov	r2, #108	; 0x6c
   14218:	add	r1, pc, r1
   1421c:	add	r0, pc, r0
   14220:	bl	14140 <__assert_fail@plt>
   14224:	andeq	r4, r4, ip, lsr #9
   14228:	andeq	r4, r4, r8, lsl #12
   1422c:	andeq	r4, r4, r4, ror #12
   14230:	ldr	r3, [pc, #28]	; 14254 <__assert_fail@plt+0x114>
   14234:	ldr	r1, [pc, #28]	; 14258 <__assert_fail@plt+0x118>
   14238:	ldr	r0, [pc, #28]	; 1425c <__assert_fail@plt+0x11c>
   1423c:	push	{r4, lr}
   14240:	add	r3, pc, r3
   14244:	mov	r2, #308	; 0x134
   14248:	add	r1, pc, r1
   1424c:	add	r0, pc, r0
   14250:	bl	14140 <__assert_fail@plt>
   14254:	muleq	r4, ip, r0
   14258:	andeq	r6, r4, r4, ror #15
   1425c:	andeq	r5, r3, r0, ror r0
   14260:	ldr	r3, [pc, #32]	; 14288 <__assert_fail@plt+0x148>
   14264:	ldr	r1, [pc, #32]	; 1428c <__assert_fail@plt+0x14c>
   14268:	ldr	r0, [pc, #32]	; 14290 <__assert_fail@plt+0x150>
   1426c:	add	r3, pc, r3
   14270:	push	{r4, lr}
   14274:	add	r3, r3, #16
   14278:	ldr	r2, [pc, #20]	; 14294 <__assert_fail@plt+0x154>
   1427c:	add	r1, pc, r1
   14280:	add	r0, pc, r0
   14284:	bl	14140 <__assert_fail@plt>
   14288:	andeq	r6, r4, r0, ror r0
   1428c:			; <UNDEFINED> instruction: 0x000467b0
   14290:	andeq	r5, r3, ip, lsr r0
   14294:	andeq	r0, r0, r1, lsr #5
   14298:	ldr	r3, [pc, #32]	; 142c0 <__assert_fail@plt+0x180>
   1429c:	ldr	r1, [pc, #32]	; 142c4 <__assert_fail@plt+0x184>
   142a0:	ldr	r0, [pc, #32]	; 142c8 <__assert_fail@plt+0x188>
   142a4:	add	r3, pc, r3
   142a8:	push	{r4, lr}
   142ac:	add	r3, r3, #28
   142b0:	ldr	r2, [pc, #20]	; 142cc <__assert_fail@plt+0x18c>
   142b4:	add	r1, pc, r1
   142b8:	add	r0, pc, r0
   142bc:	bl	14140 <__assert_fail@plt>
   142c0:	andeq	r6, r4, r8, lsr r0
   142c4:	andeq	r6, r4, r8, ror r7
   142c8:	andeq	r5, r3, r4
   142cc:	andeq	r0, r0, r7, lsl #5
   142d0:	ldr	r3, [pc, #32]	; 142f8 <__assert_fail@plt+0x1b8>
   142d4:	ldr	r1, [pc, #32]	; 142fc <__assert_fail@plt+0x1bc>
   142d8:	ldr	r0, [pc, #32]	; 14300 <__assert_fail@plt+0x1c0>
   142dc:	add	r3, pc, r3
   142e0:	push	{r4, lr}
   142e4:	mov	r2, #892	; 0x37c
   142e8:	add	r3, r3, #40	; 0x28
   142ec:	add	r1, pc, r1
   142f0:	add	r0, pc, r0
   142f4:	bl	14140 <__assert_fail@plt>
   142f8:	andeq	r6, r4, r0
   142fc:	andeq	r6, r4, r0, asr #14
   14300:	muleq	r4, ip, r7

00014304 <main@@Base>:
   14304:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14308:	cmp	r0, #1
   1430c:	ldr	r9, [pc, #1008]	; 14704 <main@@Base+0x400>
   14310:	sub	sp, sp, #224	; 0xe0
   14314:	add	r9, pc, r9
   14318:	ble	14694 <main@@Base+0x390>
   1431c:	mov	r4, r0
   14320:	mov	r0, sp
   14324:	lsl	r5, r4, #2
   14328:	mov	r6, r1
   1432c:	bl	1522c <flatcc_init_options@@Base>
   14330:	mov	r0, r5
   14334:	bl	14038 <malloc@plt>
   14338:	mov	r7, sp
   1433c:	cmp	r0, #0
   14340:	str	r0, [sp, #200]	; 0xc8
   14344:	beq	146dc <main@@Base+0x3d8>
   14348:	mov	r0, r5
   1434c:	bl	14038 <malloc@plt>
   14350:	cmp	r0, #0
   14354:	str	r0, [sp, #204]	; 0xcc
   14358:	beq	146ac <main@@Base+0x3a8>
   1435c:	mov	r1, r6
   14360:	mov	r0, r4
   14364:	mov	r2, sp
   14368:	bl	15158 <parse_opts@@Base>
   1436c:	ldr	r3, [sp, #156]	; 0x9c
   14370:	cmp	r3, #0
   14374:	beq	14538 <main@@Base+0x234>
   14378:	ldr	r1, [sp, #144]	; 0x90
   1437c:	cmp	r1, #0
   14380:	bne	1449c <main@@Base+0x198>
   14384:	ldr	r2, [sp, #212]	; 0xd4
   14388:	str	r1, [sp, #148]	; 0x94
   1438c:	cmp	r2, #0
   14390:	beq	14554 <main@@Base+0x250>
   14394:	ldr	r0, [sp, #152]	; 0x98
   14398:	orrs	r0, r3, r0
   1439c:	bne	143ac <main@@Base+0xa8>
   143a0:	ldr	r0, [sp, #160]	; 0xa0
   143a4:	cmp	r0, #0
   143a8:	beq	14578 <main@@Base+0x274>
   143ac:	ldr	r1, [sp, #180]	; 0xb4
   143b0:	cmp	r1, #0
   143b4:	beq	145c8 <main@@Base+0x2c4>
   143b8:	ldr	r3, [sp, #108]	; 0x6c
   143bc:	cmp	r3, #0
   143c0:	bne	1464c <main@@Base+0x348>
   143c4:	ldr	r3, [sp, #124]	; 0x7c
   143c8:	cmp	r3, #0
   143cc:	bne	145e0 <main@@Base+0x2dc>
   143d0:	ldr	r3, [sp, #120]	; 0x78
   143d4:	cmp	r3, #0
   143d8:	beq	14400 <main@@Base+0xfc>
   143dc:	ldr	r3, [sp, #116]	; 0x74
   143e0:	cmp	r3, #0
   143e4:	beq	14670 <main@@Base+0x36c>
   143e8:	ldr	r3, [sp, #108]	; 0x6c
   143ec:	cmp	r3, #0
   143f0:	beq	14400 <main@@Base+0xfc>
   143f4:	ldr	r3, [sp, #124]	; 0x7c
   143f8:	cmp	r3, #0
   143fc:	bne	14604 <main@@Base+0x300>
   14400:	cmp	r2, #0
   14404:	ldr	r4, [sp, #204]	; 0xcc
   14408:	ble	144e8 <main@@Base+0x1e4>
   1440c:	mov	r6, #0
   14410:	sub	r4, r4, #4
   14414:	mov	r8, r6
   14418:	mov	sl, #1
   1441c:	b	1445c <main@@Base+0x158>
   14420:	ldr	r1, [r4, #4]!
   14424:	bl	1558c <flatcc_parse_file@@Base>
   14428:	cmp	r0, #0
   1442c:	bne	14508 <main@@Base+0x204>
   14430:	mov	r0, r5
   14434:	bl	15434 <flatcc_generate_files@@Base>
   14438:	cmp	r0, #0
   1443c:	bne	14508 <main@@Base+0x204>
   14440:	mov	r0, r5
   14444:	bl	15560 <flatcc_destroy_context@@Base>
   14448:	ldr	r3, [sp, #212]	; 0xd4
   1444c:	add	r6, r6, #1
   14450:	cmp	r3, r6
   14454:	str	sl, [sp, #128]	; 0x80
   14458:	ble	144e8 <main@@Base+0x1e4>
   1445c:	mov	r3, r8
   14460:	mov	r2, #0
   14464:	ldr	r1, [r4, #4]
   14468:	mov	r0, r7
   1446c:	bl	152f0 <flatcc_create_context@@Base>
   14470:	subs	r5, r0, #0
   14474:	bne	14420 <main@@Base+0x11c>
   14478:	ldr	r3, [pc, #648]	; 14708 <main@@Base+0x404>
   1447c:	ldr	r0, [pc, #648]	; 1470c <main@@Base+0x408>
   14480:	mov	r2, #49	; 0x31
   14484:	ldr	r4, [r9, r3]
   14488:	mov	r1, #1
   1448c:	add	r0, pc, r0
   14490:	ldr	r3, [r4]
   14494:	bl	14014 <fwrite@plt>
   14498:	b	14518 <main@@Base+0x214>
   1449c:	ldr	r2, [sp, #212]	; 0xd4
   144a0:	mov	r1, #1
   144a4:	cmp	r2, #0
   144a8:	str	r1, [sp, #148]	; 0x94
   144ac:	bne	14394 <main@@Base+0x90>
   144b0:	ldr	r3, [sp, #180]	; 0xb4
   144b4:	cmp	r3, #0
   144b8:	bne	14554 <main@@Base+0x250>
   144bc:	mov	r0, r7
   144c0:	mov	r2, r3
   144c4:	mov	r1, r3
   144c8:	bl	152f0 <flatcc_create_context@@Base>
   144cc:	subs	r5, r0, #0
   144d0:	beq	14628 <main@@Base+0x324>
   144d4:	bl	15434 <flatcc_generate_files@@Base>
   144d8:	cmp	r0, #0
   144dc:	bne	14508 <main@@Base+0x204>
   144e0:	mov	r0, r5
   144e4:	bl	15560 <flatcc_destroy_context@@Base>
   144e8:	mov	r4, #0
   144ec:	ldr	r0, [sp, #200]	; 0xc8
   144f0:	bl	13fcc <free@plt>
   144f4:	ldr	r0, [sp, #204]	; 0xcc
   144f8:	bl	13fcc <free@plt>
   144fc:	mov	r0, r4
   14500:	add	sp, sp, #224	; 0xe0
   14504:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14508:	mov	r0, r5
   1450c:	bl	15560 <flatcc_destroy_context@@Base>
   14510:	ldr	r3, [pc, #496]	; 14708 <main@@Base+0x404>
   14514:	ldr	r4, [r9, r3]
   14518:	ldr	r0, [pc, #496]	; 14710 <main@@Base+0x40c>
   1451c:	ldr	r3, [r4]
   14520:	mov	r2, #14
   14524:	mov	r1, #1
   14528:	add	r0, pc, r0
   1452c:	bl	14014 <fwrite@plt>
   14530:	mvn	r4, #0
   14534:	b	144ec <main@@Base+0x1e8>
   14538:	ldr	r2, [sp, #212]	; 0xd4
   1453c:	str	r3, [sp, #148]	; 0x94
   14540:	cmp	r2, #0
   14544:	bne	145c0 <main@@Base+0x2bc>
   14548:	ldr	r3, [sp, #144]	; 0x90
   1454c:	cmp	r3, #0
   14550:	bne	144b0 <main@@Base+0x1ac>
   14554:	ldr	r3, [pc, #428]	; 14708 <main@@Base+0x404>
   14558:	ldr	r0, [pc, #436]	; 14714 <main@@Base+0x410>
   1455c:	mov	r2, #17
   14560:	ldr	r4, [r9, r3]
   14564:	mov	r1, #1
   14568:	add	r0, pc, r0
   1456c:	ldr	r3, [r4]
   14570:	bl	14014 <fwrite@plt>
   14574:	b	14518 <main@@Base+0x214>
   14578:	ldr	r0, [sp, #144]	; 0x90
   1457c:	orrs	r1, r1, r0
   14580:	bne	143ac <main@@Base+0xa8>
   14584:	ldr	r1, [sp, #164]	; 0xa4
   14588:	cmp	r1, #0
   1458c:	bne	143ac <main@@Base+0xa8>
   14590:	ldr	r1, [sp, #168]	; 0xa8
   14594:	cmp	r1, #0
   14598:	bne	143ac <main@@Base+0xa8>
   1459c:	ldr	r3, [sp, #180]	; 0xb4
   145a0:	cmp	r3, #0
   145a4:	bne	145b0 <main@@Base+0x2ac>
   145a8:	mov	r3, #1
   145ac:	str	r3, [sp, #152]	; 0x98
   145b0:	ldr	r3, [sp, #120]	; 0x78
   145b4:	cmp	r3, #0
   145b8:	bne	143dc <main@@Base+0xd8>
   145bc:	b	143e8 <main@@Base+0xe4>
   145c0:	mov	r1, r3
   145c4:	b	14394 <main@@Base+0x90>
   145c8:	cmp	r3, #0
   145cc:	bne	145a8 <main@@Base+0x2a4>
   145d0:	ldr	r3, [sp, #160]	; 0xa0
   145d4:	cmp	r3, #0
   145d8:	beq	145b0 <main@@Base+0x2ac>
   145dc:	b	145a8 <main@@Base+0x2a4>
   145e0:	ldr	r3, [pc, #288]	; 14708 <main@@Base+0x404>
   145e4:	ldr	r0, [pc, #300]	; 14718 <main@@Base+0x414>
   145e8:	mov	r2, #58	; 0x3a
   145ec:	ldr	r4, [r9, r3]
   145f0:	mov	r1, #1
   145f4:	add	r0, pc, r0
   145f8:	ldr	r3, [r4]
   145fc:	bl	14014 <fwrite@plt>
   14600:	b	14518 <main@@Base+0x214>
   14604:	ldr	r3, [pc, #252]	; 14708 <main@@Base+0x404>
   14608:	ldr	r0, [pc, #268]	; 1471c <main@@Base+0x418>
   1460c:	mov	r2, #38	; 0x26
   14610:	ldr	r4, [r9, r3]
   14614:	mov	r1, #1
   14618:	add	r0, pc, r0
   1461c:	ldr	r3, [r4]
   14620:	bl	14014 <fwrite@plt>
   14624:	b	14518 <main@@Base+0x214>
   14628:	ldr	r3, [pc, #216]	; 14708 <main@@Base+0x404>
   1462c:	ldr	r0, [pc, #236]	; 14720 <main@@Base+0x41c>
   14630:	mov	r2, #49	; 0x31
   14634:	ldr	r4, [r9, r3]
   14638:	mov	r1, #1
   1463c:	add	r0, pc, r0
   14640:	ldr	r3, [r4]
   14644:	bl	14014 <fwrite@plt>
   14648:	b	14518 <main@@Base+0x214>
   1464c:	ldr	r3, [pc, #180]	; 14708 <main@@Base+0x404>
   14650:	ldr	r0, [pc, #204]	; 14724 <main@@Base+0x420>
   14654:	mov	r2, #57	; 0x39
   14658:	ldr	r4, [r9, r3]
   1465c:	mov	r1, #1
   14660:	add	r0, pc, r0
   14664:	ldr	r3, [r4]
   14668:	bl	14014 <fwrite@plt>
   1466c:	b	14518 <main@@Base+0x214>
   14670:	ldr	r3, [pc, #144]	; 14708 <main@@Base+0x404>
   14674:	ldr	r0, [pc, #172]	; 14728 <main@@Base+0x424>
   14678:	mov	r2, #44	; 0x2c
   1467c:	ldr	r4, [r9, r3]
   14680:	mov	r1, #1
   14684:	add	r0, pc, r0
   14688:	ldr	r3, [r4]
   1468c:	bl	14014 <fwrite@plt>
   14690:	b	14518 <main@@Base+0x214>
   14694:	ldr	r3, [pc, #108]	; 14708 <main@@Base+0x404>
   14698:	ldr	r3, [r9, r3]
   1469c:	ldr	r0, [r3]
   146a0:	bl	1485c <usage@@Base>
   146a4:	mvn	r0, #0
   146a8:	bl	14068 <exit@plt>
   146ac:	ldr	r3, [pc, #84]	; 14708 <main@@Base+0x404>
   146b0:	ldr	r0, [pc, #116]	; 1472c <main@@Base+0x428>
   146b4:	mov	r2, #26
   146b8:	ldr	r3, [r9, r3]
   146bc:	mov	r1, #1
   146c0:	add	r0, pc, r0
   146c4:	ldr	r3, [r3]
   146c8:	bl	14014 <fwrite@plt>
   146cc:	ldr	r0, [sp, #200]	; 0xc8
   146d0:	bl	13fcc <free@plt>
   146d4:	mvn	r0, #0
   146d8:	bl	14068 <exit@plt>
   146dc:	ldr	r3, [pc, #36]	; 14708 <main@@Base+0x404>
   146e0:	ldr	r0, [pc, #72]	; 14730 <main@@Base+0x42c>
   146e4:	mov	r2, #26
   146e8:	ldr	r3, [r9, r3]
   146ec:	mov	r1, #1
   146f0:	add	r0, pc, r0
   146f4:	ldr	r3, [r3]
   146f8:	bl	14014 <fwrite@plt>
   146fc:	mvn	r0, #0
   14700:	bl	14068 <exit@plt>
   14704:	andeq	r6, r5, r4, ror #25
   14708:	andeq	r0, r0, r0, lsr #1
   1470c:	strdeq	ip, [r2], -r8
   14710:	andeq	ip, r2, r0, ror #4
   14714:	andeq	ip, r2, r8, lsl #2
   14718:	andeq	ip, r2, r0, lsl #2
   1471c:	andeq	ip, r2, r8, asr #2
   14720:	andeq	ip, r2, r8, asr #32
   14724:	andeq	ip, r2, r8, asr r0
   14728:	andeq	ip, r2, ip, lsr #1
   1472c:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   14730:	andeq	fp, r2, r4, ror #30

00014734 <_start@@Base>:
   14734:	mov	fp, #0
   14738:	mov	lr, #0
   1473c:	pop	{r1}		; (ldr r1, [sp], #4)
   14740:	mov	r2, sp
   14744:	push	{r2}		; (str r2, [sp, #-4]!)
   14748:	push	{r0}		; (str r0, [sp, #-4]!)
   1474c:	ldr	ip, [pc, #16]	; 14764 <_start@@Base+0x30>
   14750:	push	{ip}		; (str ip, [sp, #-4]!)
   14754:	ldr	r0, [pc, #12]	; 14768 <_start@@Base+0x34>
   14758:	ldr	r3, [pc, #12]	; 1476c <_start@@Base+0x38>
   1475c:	bl	14044 <__libc_start_main@plt>
   14760:	bl	14134 <abort@plt>
   14764:	andeq	pc, r3, r0, ror #1
   14768:	andeq	r4, r1, r4, lsl #6
   1476c:	andeq	pc, r3, r0, lsl #1
   14770:	ldr	r3, [pc, #20]	; 1478c <_start@@Base+0x58>
   14774:	ldr	r2, [pc, #20]	; 14790 <_start@@Base+0x5c>
   14778:	add	r3, pc, r3
   1477c:	ldr	r2, [r3, r2]
   14780:	cmp	r2, #0
   14784:	bxeq	lr
   14788:	b	1405c <__gmon_start__@plt>
   1478c:	andeq	r6, r5, r0, lsl #17
   14790:	andeq	r0, r0, r4, lsr #1
   14794:	ldr	r3, [pc, #28]	; 147b8 <_start@@Base+0x84>
   14798:	ldr	r0, [pc, #28]	; 147bc <_start@@Base+0x88>
   1479c:	sub	r3, r3, r0
   147a0:	cmp	r3, #6
   147a4:	bxls	lr
   147a8:	ldr	r3, [pc, #16]	; 147c0 <_start@@Base+0x8c>
   147ac:	cmp	r3, #0
   147b0:	bxeq	lr
   147b4:	bx	r3
   147b8:	andeq	fp, r6, r3, asr #1
   147bc:	andeq	fp, r6, r0, asr #1
   147c0:	andeq	r0, r0, r0
   147c4:	ldr	r1, [pc, #36]	; 147f0 <_start@@Base+0xbc>
   147c8:	ldr	r0, [pc, #36]	; 147f4 <_start@@Base+0xc0>
   147cc:	sub	r1, r1, r0
   147d0:	asr	r1, r1, #2
   147d4:	add	r1, r1, r1, lsr #31
   147d8:	asrs	r1, r1, #1
   147dc:	bxeq	lr
   147e0:	ldr	r3, [pc, #16]	; 147f8 <_start@@Base+0xc4>
   147e4:	cmp	r3, #0
   147e8:	bxeq	lr
   147ec:	bx	r3
   147f0:	andeq	fp, r6, r0, asr #1
   147f4:	andeq	fp, r6, r0, asr #1
   147f8:	andeq	r0, r0, r0
   147fc:	push	{r4, lr}
   14800:	ldr	r4, [pc, #24]	; 14820 <_start@@Base+0xec>
   14804:	ldrb	r3, [r4]
   14808:	cmp	r3, #0
   1480c:	popne	{r4, pc}
   14810:	bl	14794 <_start@@Base+0x60>
   14814:	mov	r3, #1
   14818:	strb	r3, [r4]
   1481c:	pop	{r4, pc}
   14820:	andeq	fp, r6, r0, asr #1
   14824:	ldr	r0, [pc, #40]	; 14854 <_start@@Base+0x120>
   14828:	ldr	r3, [r0]
   1482c:	cmp	r3, #0
   14830:	bne	14838 <_start@@Base+0x104>
   14834:	b	147c4 <_start@@Base+0x90>
   14838:	ldr	r3, [pc, #24]	; 14858 <_start@@Base+0x124>
   1483c:	cmp	r3, #0
   14840:	beq	14834 <_start@@Base+0x100>
   14844:	push	{r4, lr}
   14848:	blx	r3
   1484c:	pop	{r4, lr}
   14850:	b	147c4 <_start@@Base+0x90>
   14854:	andeq	sl, r6, r4, ror #29
   14858:	andeq	r0, r0, r0

0001485c <usage@@Base>:
   1485c:	ldr	r2, [pc, #96]	; 148c4 <usage@@Base+0x68>
   14860:	ldr	r1, [pc, #96]	; 148c8 <usage@@Base+0x6c>
   14864:	push	{r4, lr}
   14868:	add	r2, pc, r2
   1486c:	add	r1, pc, r1
   14870:	mov	r4, r0
   14874:	bl	1408c <fprintf@plt>
   14878:	ldr	r2, [pc, #76]	; 148cc <usage@@Base+0x70>
   1487c:	ldr	r1, [pc, #76]	; 148d0 <usage@@Base+0x74>
   14880:	mov	r0, r4
   14884:	add	r2, pc, r2
   14888:	add	r1, pc, r1
   1488c:	bl	1408c <fprintf@plt>
   14890:	ldr	r0, [pc, #60]	; 148d4 <usage@@Base+0x78>
   14894:	mov	r3, r4
   14898:	mov	r2, #35	; 0x23
   1489c:	mov	r1, #1
   148a0:	add	r0, pc, r0
   148a4:	bl	14014 <fwrite@plt>
   148a8:	ldr	r0, [pc, #40]	; 148d8 <usage@@Base+0x7c>
   148ac:	mov	r3, r4
   148b0:	ldr	r2, [pc, #36]	; 148dc <usage@@Base+0x80>
   148b4:	mov	r1, #1
   148b8:	add	r0, pc, r0
   148bc:	pop	{r4, lr}
   148c0:	b	14014 <fwrite@plt>
   148c4:	andeq	sl, r2, r0, lsl #17
   148c8:	andeq	fp, r2, r0, ror #31
   148cc:	muleq	r2, ip, r8
   148d0:	andeq	sl, r2, r0, lsr #17
   148d4:	muleq	r2, r8, r8
   148d8:	andeq	sl, r2, r4, lsr #17
   148dc:	andeq	r0, r0, r1, lsl #11

000148e0 <help@@Base>:
   148e0:	push	{r4, lr}
   148e4:	mov	r4, r0
   148e8:	bl	1485c <usage@@Base>
   148ec:	ldr	r0, [pc, #20]	; 14908 <help@@Base+0x28>
   148f0:	mov	r3, r4
   148f4:	ldr	r2, [pc, #16]	; 1490c <help@@Base+0x2c>
   148f8:	mov	r1, #1
   148fc:	add	r0, pc, r0
   14900:	pop	{r4, lr}
   14904:	b	14014 <fwrite@plt>
   14908:	andeq	sl, r2, r4, ror #27
   1490c:	andeq	r0, r0, r4, asr #24

00014910 <parse_bool_arg@@Base>:
   14910:	ldr	r1, [pc, #144]	; 149a8 <parse_bool_arg@@Base+0x98>
   14914:	push	{r4, r5, r6, lr}
   14918:	add	r1, pc, r1
   1491c:	mov	r4, r0
   14920:	bl	13fb4 <strcmp@plt>
   14924:	ldr	r5, [pc, #128]	; 149ac <parse_bool_arg@@Base+0x9c>
   14928:	add	r5, pc, r5
   1492c:	cmp	r0, #0
   14930:	popeq	{r4, r5, r6, pc}
   14934:	ldr	r1, [pc, #116]	; 149b0 <parse_bool_arg@@Base+0xa0>
   14938:	mov	r0, r4
   1493c:	add	r1, pc, r1
   14940:	bl	13fb4 <strcmp@plt>
   14944:	cmp	r0, #0
   14948:	popeq	{r4, r5, r6, pc}
   1494c:	ldr	r1, [pc, #96]	; 149b4 <parse_bool_arg@@Base+0xa4>
   14950:	mov	r0, r4
   14954:	add	r1, pc, r1
   14958:	bl	13fb4 <strcmp@plt>
   1495c:	cmp	r0, #0
   14960:	beq	1497c <parse_bool_arg@@Base+0x6c>
   14964:	ldr	r1, [pc, #76]	; 149b8 <parse_bool_arg@@Base+0xa8>
   14968:	mov	r0, r4
   1496c:	add	r1, pc, r1
   14970:	bl	13fb4 <strcmp@plt>
   14974:	cmp	r0, #0
   14978:	bne	14984 <parse_bool_arg@@Base+0x74>
   1497c:	mov	r0, #1
   14980:	pop	{r4, r5, r6, pc}
   14984:	ldr	r3, [pc, #48]	; 149bc <parse_bool_arg@@Base+0xac>
   14988:	ldr	r1, [pc, #48]	; 149c0 <parse_bool_arg@@Base+0xb0>
   1498c:	mov	r2, r4
   14990:	ldr	r3, [r5, r3]
   14994:	add	r1, pc, r1
   14998:	ldr	r0, [r3]
   1499c:	bl	1408c <fprintf@plt>
   149a0:	mvn	r0, #0
   149a4:	pop	{r4, r5, r6, pc}
   149a8:	andeq	r4, r3, r4, lsr #19
   149ac:	ldrdeq	r6, [r5], -r0
   149b0:	andeq	fp, r2, ip, ror #19
   149b4:	ldrdeq	sl, [r2], -r0
   149b8:	andeq	fp, r2, r0, asr #19
   149bc:	andeq	r0, r0, r0, lsr #1
   149c0:	muleq	r2, ip, r9

000149c4 <match_long_arg@@Base>:
   149c4:	push	{r4, r5, r6, lr}
   149c8:	mov	r5, r0
   149cc:	mov	r4, r2
   149d0:	bl	14128 <strncmp@plt>
   149d4:	cmp	r0, #0
   149d8:	bne	149f4 <match_long_arg@@Base+0x30>
   149dc:	mov	r0, r5
   149e0:	bl	14074 <strlen@plt>
   149e4:	sub	r0, r4, r0
   149e8:	clz	r0, r0
   149ec:	lsr	r0, r0, #5
   149f0:	pop	{r4, r5, r6, pc}
   149f4:	mov	r0, #0
   149f8:	pop	{r4, r5, r6, pc}

000149fc <set_opt@@Base>:
   149fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14a00:	mov	r6, r0
   14a04:	mov	r0, r1
   14a08:	mov	r4, r1
   14a0c:	mov	r8, r2
   14a10:	bl	14074 <strlen@plt>
   14a14:	mov	r1, #61	; 0x3d
   14a18:	ldr	r7, [pc, #1520]	; 15010 <set_opt@@Base+0x614>
   14a1c:	add	r7, pc, r7
   14a20:	mov	r9, r0
   14a24:	mov	r0, r4
   14a28:	bl	14080 <strchr@plt>
   14a2c:	ldrb	r3, [r4]
   14a30:	subs	r5, r0, #0
   14a34:	addne	r8, r5, #1
   14a38:	subne	r9, r5, r4
   14a3c:	cmp	r3, #104	; 0x68
   14a40:	beq	14c48 <set_opt@@Base+0x24c>
   14a44:	ldr	r0, [pc, #1480]	; 15014 <set_opt@@Base+0x618>
   14a48:	mov	r1, r4
   14a4c:	add	r0, pc, r0
   14a50:	bl	13fb4 <strcmp@plt>
   14a54:	cmp	r0, #0
   14a58:	beq	14c48 <set_opt@@Base+0x24c>
   14a5c:	ldr	r0, [pc, #1460]	; 15018 <set_opt@@Base+0x61c>
   14a60:	mov	r1, r4
   14a64:	add	r0, pc, r0
   14a68:	bl	13fb4 <strcmp@plt>
   14a6c:	subs	sl, r0, #0
   14a70:	beq	14c94 <set_opt@@Base+0x298>
   14a74:	ldr	r0, [pc, #1440]	; 1501c <set_opt@@Base+0x620>
   14a78:	mov	r1, r4
   14a7c:	add	r0, pc, r0
   14a80:	bl	13fb4 <strcmp@plt>
   14a84:	cmp	r0, #0
   14a88:	beq	14b08 <set_opt@@Base+0x10c>
   14a8c:	ldr	r0, [pc, #1420]	; 15020 <set_opt@@Base+0x624>
   14a90:	mov	r1, r4
   14a94:	add	r0, pc, r0
   14a98:	bl	13fb4 <strcmp@plt>
   14a9c:	cmp	r0, #0
   14aa0:	beq	14afc <set_opt@@Base+0x100>
   14aa4:	ldr	r0, [pc, #1400]	; 15024 <set_opt@@Base+0x628>
   14aa8:	mov	r1, r4
   14aac:	add	r0, pc, r0
   14ab0:	bl	13fb4 <strcmp@plt>
   14ab4:	cmp	r0, #0
   14ab8:	beq	14b20 <set_opt@@Base+0x124>
   14abc:	ldr	r0, [pc, #1380]	; 15028 <set_opt@@Base+0x62c>
   14ac0:	mov	r1, r4
   14ac4:	add	r0, pc, r0
   14ac8:	bl	13fb4 <strcmp@plt>
   14acc:	cmp	r0, #0
   14ad0:	beq	14b14 <set_opt@@Base+0x118>
   14ad4:	ldr	r0, [pc, #1360]	; 1502c <set_opt@@Base+0x630>
   14ad8:	mov	r1, r4
   14adc:	add	r0, pc, r0
   14ae0:	bl	13fb4 <strcmp@plt>
   14ae4:	cmp	r0, #0
   14ae8:	bne	14b2c <set_opt@@Base+0x130>
   14aec:	mov	r3, #1
   14af0:	str	r3, [r6, #164]	; 0xa4
   14af4:	str	r3, [r6, #168]	; 0xa8
   14af8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14afc:	mov	r3, #1
   14b00:	str	r3, [r6, #180]	; 0xb4
   14b04:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b08:	mov	r3, #1
   14b0c:	str	r3, [r6, #108]	; 0x6c
   14b10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b14:	mov	r3, #1
   14b18:	str	r3, [r6, #168]	; 0xa8
   14b1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b20:	mov	r3, #1
   14b24:	str	r3, [r6, #164]	; 0xa4
   14b28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b2c:	ldr	r0, [pc, #1276]	; 15030 <set_opt@@Base+0x634>
   14b30:	mov	r2, r9
   14b34:	mov	r1, r4
   14b38:	add	r0, pc, r0
   14b3c:	bl	149c4 <match_long_arg@@Base>
   14b40:	cmp	r0, #0
   14b44:	bne	14b90 <set_opt@@Base+0x194>
   14b48:	ldr	r0, [pc, #1252]	; 15034 <set_opt@@Base+0x638>
   14b4c:	mov	r2, r9
   14b50:	mov	r1, r4
   14b54:	add	r0, pc, r0
   14b58:	bl	149c4 <match_long_arg@@Base>
   14b5c:	cmp	r0, #0
   14b60:	beq	14c0c <set_opt@@Base+0x210>
   14b64:	cmp	r8, #0
   14b68:	beq	14e5c <set_opt@@Base+0x460>
   14b6c:	mov	r0, r8
   14b70:	bl	14910 <parse_bool_arg@@Base>
   14b74:	cmp	r0, #0
   14b78:	str	r0, [r6, #188]	; 0xbc
   14b7c:	blt	14bcc <set_opt@@Base+0x1d0>
   14b80:	cmp	r5, #0
   14b84:	beq	14c04 <set_opt@@Base+0x208>
   14b88:	mov	r0, #0
   14b8c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b90:	ldr	r3, [pc, #1184]	; 15038 <set_opt@@Base+0x63c>
   14b94:	ldr	r0, [pc, #1184]	; 1503c <set_opt@@Base+0x640>
   14b98:	mov	r2, #112	; 0x70
   14b9c:	ldr	r4, [r7, r3]
   14ba0:	mov	r1, #1
   14ba4:	add	r0, pc, r0
   14ba8:	ldr	r3, [r4]
   14bac:	bl	14014 <fwrite@plt>
   14bb0:	cmp	r8, #0
   14bb4:	beq	14e3c <set_opt@@Base+0x440>
   14bb8:	mov	r0, r8
   14bbc:	bl	14910 <parse_bool_arg@@Base>
   14bc0:	cmp	r0, #0
   14bc4:	str	r0, [r6, #184]	; 0xb8
   14bc8:	bge	14b80 <set_opt@@Base+0x184>
   14bcc:	mvn	r0, #0
   14bd0:	bl	14068 <exit@plt>
   14bd4:	ldr	r0, [pc, #1124]	; 15040 <set_opt@@Base+0x644>
   14bd8:	mov	r2, r9
   14bdc:	mov	r1, r4
   14be0:	add	r0, pc, r0
   14be4:	bl	149c4 <match_long_arg@@Base>
   14be8:	cmp	r0, #0
   14bec:	beq	14c60 <set_opt@@Base+0x264>
   14bf0:	cmp	r8, #0
   14bf4:	beq	14dec <set_opt@@Base+0x3f0>
   14bf8:	cmp	r5, #0
   14bfc:	str	r8, [r6, #120]	; 0x78
   14c00:	bne	14b88 <set_opt@@Base+0x18c>
   14c04:	mov	r0, #2
   14c08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14c0c:	ldr	r0, [pc, #1072]	; 15044 <set_opt@@Base+0x648>
   14c10:	mov	r2, r9
   14c14:	mov	r1, r4
   14c18:	add	r0, pc, r0
   14c1c:	bl	149c4 <match_long_arg@@Base>
   14c20:	cmp	r0, #0
   14c24:	beq	14bd4 <set_opt@@Base+0x1d8>
   14c28:	cmp	r8, #0
   14c2c:	beq	14e14 <set_opt@@Base+0x418>
   14c30:	mov	r3, #1
   14c34:	cmp	r5, #0
   14c38:	str	r8, [r6, #116]	; 0x74
   14c3c:	str	r3, [r6, #112]	; 0x70
   14c40:	bne	14b88 <set_opt@@Base+0x18c>
   14c44:	b	14c04 <set_opt@@Base+0x208>
   14c48:	ldr	r3, [pc, #1016]	; 15048 <set_opt@@Base+0x64c>
   14c4c:	ldr	r3, [r7, r3]
   14c50:	ldr	r0, [r3]
   14c54:	bl	148e0 <help@@Base>
   14c58:	mov	r0, #0
   14c5c:	bl	14068 <exit@plt>
   14c60:	ldr	r0, [pc, #996]	; 1504c <set_opt@@Base+0x650>
   14c64:	mov	r2, r9
   14c68:	mov	r1, r4
   14c6c:	add	r0, pc, r0
   14c70:	bl	149c4 <match_long_arg@@Base>
   14c74:	cmp	r0, #0
   14c78:	beq	14cd4 <set_opt@@Base+0x2d8>
   14c7c:	cmp	r8, #0
   14c80:	beq	14d3c <set_opt@@Base+0x340>
   14c84:	cmp	r5, #0
   14c88:	str	r8, [r6, #124]	; 0x7c
   14c8c:	bne	14b88 <set_opt@@Base+0x18c>
   14c90:	b	14c04 <set_opt@@Base+0x208>
   14c94:	ldr	r3, [pc, #924]	; 15038 <set_opt@@Base+0x63c>
   14c98:	ldr	r2, [pc, #944]	; 15050 <set_opt@@Base+0x654>
   14c9c:	ldr	r1, [pc, #944]	; 15054 <set_opt@@Base+0x658>
   14ca0:	ldr	r4, [r7, r3]
   14ca4:	add	r2, pc, r2
   14ca8:	add	r1, pc, r1
   14cac:	ldr	r0, [r4]
   14cb0:	bl	1408c <fprintf@plt>
   14cb4:	ldr	r2, [pc, #924]	; 15058 <set_opt@@Base+0x65c>
   14cb8:	ldr	r1, [pc, #924]	; 1505c <set_opt@@Base+0x660>
   14cbc:	ldr	r0, [r4]
   14cc0:	add	r2, pc, r2
   14cc4:	add	r1, pc, r1
   14cc8:	bl	1408c <fprintf@plt>
   14ccc:	mov	r0, sl
   14cd0:	bl	14068 <exit@plt>
   14cd4:	ldr	r0, [pc, #900]	; 15060 <set_opt@@Base+0x664>
   14cd8:	mov	r2, r9
   14cdc:	mov	r1, r4
   14ce0:	add	r0, pc, r0
   14ce4:	bl	149c4 <match_long_arg@@Base>
   14ce8:	cmp	r0, #0
   14cec:	beq	14d08 <set_opt@@Base+0x30c>
   14cf0:	cmp	r8, #0
   14cf4:	beq	14d64 <set_opt@@Base+0x368>
   14cf8:	cmp	r5, #0
   14cfc:	str	r8, [r6, #196]	; 0xc4
   14d00:	bne	14b88 <set_opt@@Base+0x18c>
   14d04:	b	14c04 <set_opt@@Base+0x208>
   14d08:	ldr	r0, [pc, #852]	; 15064 <set_opt@@Base+0x668>
   14d0c:	mov	r2, r9
   14d10:	mov	r1, r4
   14d14:	add	r0, pc, r0
   14d18:	bl	149c4 <match_long_arg@@Base>
   14d1c:	cmp	r0, #0
   14d20:	beq	14db4 <set_opt@@Base+0x3b8>
   14d24:	cmp	r8, #0
   14d28:	beq	14d8c <set_opt@@Base+0x390>
   14d2c:	cmp	r5, #0
   14d30:	str	r8, [r6, #192]	; 0xc0
   14d34:	bne	14b88 <set_opt@@Base+0x18c>
   14d38:	b	14c04 <set_opt@@Base+0x208>
   14d3c:	ldr	r3, [pc, #756]	; 15038 <set_opt@@Base+0x63c>
   14d40:	ldr	r0, [pc, #800]	; 15068 <set_opt@@Base+0x66c>
   14d44:	mov	r2, #35	; 0x23
   14d48:	ldr	r3, [r7, r3]
   14d4c:	mov	r1, #1
   14d50:	add	r0, pc, r0
   14d54:	ldr	r3, [r3]
   14d58:	bl	14014 <fwrite@plt>
   14d5c:	mvn	r0, #0
   14d60:	bl	14068 <exit@plt>
   14d64:	ldr	r3, [pc, #716]	; 15038 <set_opt@@Base+0x63c>
   14d68:	ldr	r0, [pc, #764]	; 1506c <set_opt@@Base+0x670>
   14d6c:	mov	r2, #41	; 0x29
   14d70:	ldr	r3, [r7, r3]
   14d74:	mov	r1, #1
   14d78:	add	r0, pc, r0
   14d7c:	ldr	r3, [r3]
   14d80:	bl	14014 <fwrite@plt>
   14d84:	mvn	r0, #0
   14d88:	bl	14068 <exit@plt>
   14d8c:	ldr	r3, [pc, #676]	; 15038 <set_opt@@Base+0x63c>
   14d90:	ldr	r0, [pc, #728]	; 15070 <set_opt@@Base+0x674>
   14d94:	mov	r2, #28
   14d98:	ldr	r3, [r7, r3]
   14d9c:	mov	r1, #1
   14da0:	add	r0, pc, r0
   14da4:	ldr	r3, [r3]
   14da8:	bl	14014 <fwrite@plt>
   14dac:	mvn	r0, #0
   14db0:	bl	14068 <exit@plt>
   14db4:	ldrb	r2, [r4]
   14db8:	cmp	r2, #100	; 0x64
   14dbc:	beq	14f60 <set_opt@@Base+0x564>
   14dc0:	bhi	14f38 <set_opt@@Base+0x53c>
   14dc4:	cmp	r2, #73	; 0x49
   14dc8:	beq	14ed8 <set_opt@@Base+0x4dc>
   14dcc:	bls	14ebc <set_opt@@Base+0x4c0>
   14dd0:	cmp	r2, #97	; 0x61
   14dd4:	beq	14e9c <set_opt@@Base+0x4a0>
   14dd8:	cmp	r2, #99	; 0x63
   14ddc:	bne	14e80 <set_opt@@Base+0x484>
   14de0:	mov	r3, #1
   14de4:	str	r3, [r6, #144]	; 0x90
   14de8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14dec:	ldr	r3, [pc, #580]	; 15038 <set_opt@@Base+0x63c>
   14df0:	ldr	r0, [pc, #636]	; 15074 <set_opt@@Base+0x678>
   14df4:	mov	r2, #37	; 0x25
   14df8:	ldr	r3, [r7, r3]
   14dfc:	mov	r1, #1
   14e00:	add	r0, pc, r0
   14e04:	ldr	r3, [r3]
   14e08:	bl	14014 <fwrite@plt>
   14e0c:	mvn	r0, #0
   14e10:	bl	14068 <exit@plt>
   14e14:	ldr	r3, [pc, #540]	; 15038 <set_opt@@Base+0x63c>
   14e18:	ldr	r0, [pc, #600]	; 15078 <set_opt@@Base+0x67c>
   14e1c:	mov	r2, #35	; 0x23
   14e20:	ldr	r3, [r7, r3]
   14e24:	mov	r1, #1
   14e28:	add	r0, pc, r0
   14e2c:	ldr	r3, [r3]
   14e30:	bl	14014 <fwrite@plt>
   14e34:	mvn	r0, #0
   14e38:	bl	14068 <exit@plt>
   14e3c:	ldr	r0, [pc, #568]	; 1507c <set_opt@@Base+0x680>
   14e40:	ldr	r3, [r4]
   14e44:	mov	r2, #44	; 0x2c
   14e48:	mov	r1, #1
   14e4c:	add	r0, pc, r0
   14e50:	bl	14014 <fwrite@plt>
   14e54:	mvn	r0, #0
   14e58:	bl	14068 <exit@plt>
   14e5c:	ldr	r3, [pc, #468]	; 15038 <set_opt@@Base+0x63c>
   14e60:	ldr	r0, [pc, #536]	; 15080 <set_opt@@Base+0x684>
   14e64:	mov	r2, #41	; 0x29
   14e68:	ldr	r3, [r7, r3]
   14e6c:	mov	r1, #1
   14e70:	add	r0, pc, r0
   14e74:	ldr	r3, [r3]
   14e78:	bl	14014 <fwrite@plt>
   14e7c:	b	14bcc <set_opt@@Base+0x1d0>
   14e80:	ldr	r1, [pc, #508]	; 15084 <set_opt@@Base+0x688>
   14e84:	ldr	r3, [pc, #428]	; 15038 <set_opt@@Base+0x63c>
   14e88:	add	r1, pc, r1
   14e8c:	ldr	r3, [r7, r3]
   14e90:	ldr	r0, [r3]
   14e94:	bl	1408c <fprintf@plt>
   14e98:	b	14bcc <set_opt@@Base+0x1d0>
   14e9c:	mov	r3, #1
   14ea0:	str	r3, [r6, #152]	; 0x98
   14ea4:	str	r3, [r6, #156]	; 0x9c
   14ea8:	str	r3, [r6, #160]	; 0xa0
   14eac:	str	r3, [r6, #144]	; 0x90
   14eb0:	str	r3, [r6, #148]	; 0x94
   14eb4:	str	r3, [r6, #172]	; 0xac
   14eb8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ebc:	cmp	r2, #45	; 0x2d
   14ec0:	bne	14e80 <set_opt@@Base+0x484>
   14ec4:	ldr	r1, [pc, #444]	; 15088 <set_opt@@Base+0x68c>
   14ec8:	ldr	r3, [pc, #360]	; 15038 <set_opt@@Base+0x63c>
   14ecc:	mov	r2, r4
   14ed0:	add	r1, pc, r1
   14ed4:	b	14e8c <set_opt@@Base+0x490>
   14ed8:	ldrb	r3, [r4, #1]
   14edc:	cmp	r3, #0
   14ee0:	addne	r8, r4, #1
   14ee4:	movne	r0, #1
   14ee8:	bne	14ef8 <set_opt@@Base+0x4fc>
   14eec:	cmp	r8, #0
   14ef0:	movne	r0, #2
   14ef4:	beq	14f10 <set_opt@@Base+0x514>
   14ef8:	ldr	r3, [r6, #208]	; 0xd0
   14efc:	ldr	r2, [r6, #200]	; 0xc8
   14f00:	add	r1, r3, #1
   14f04:	str	r1, [r6, #208]	; 0xd0
   14f08:	str	r8, [r2, r3, lsl #2]
   14f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14f10:	ldr	r3, [pc, #288]	; 15038 <set_opt@@Base+0x63c>
   14f14:	ldr	r0, [pc, #368]	; 1508c <set_opt@@Base+0x690>
   14f18:	mov	r2, #28
   14f1c:	ldr	r3, [r7, r3]
   14f20:	mov	r1, #1
   14f24:	add	r0, pc, r0
   14f28:	ldr	r3, [r3]
   14f2c:	bl	14014 <fwrite@plt>
   14f30:	mvn	r0, #0
   14f34:	bl	14068 <exit@plt>
   14f38:	cmp	r2, #114	; 0x72
   14f3c:	beq	14fdc <set_opt@@Base+0x5e0>
   14f40:	bls	14f78 <set_opt@@Base+0x57c>
   14f44:	cmp	r2, #118	; 0x76
   14f48:	beq	14f6c <set_opt@@Base+0x570>
   14f4c:	cmp	r2, #119	; 0x77
   14f50:	bne	14e80 <set_opt@@Base+0x484>
   14f54:	mov	r3, #1
   14f58:	str	r3, [r6, #156]	; 0x9c
   14f5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14f60:	mov	r3, #1
   14f64:	str	r3, [r6, #112]	; 0x70
   14f68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14f6c:	mov	r3, #1
   14f70:	str	r3, [r6, #160]	; 0xa0
   14f74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14f78:	cmp	r2, #111	; 0x6f
   14f7c:	bne	14e80 <set_opt@@Base+0x484>
   14f80:	ldr	r3, [r6, #216]	; 0xd8
   14f84:	cmp	r3, #0
   14f88:	bne	14fb4 <set_opt@@Base+0x5b8>
   14f8c:	ldrb	r3, [r4, #1]
   14f90:	cmp	r3, #0
   14f94:	addne	r8, r4, #1
   14f98:	movne	r0, #1
   14f9c:	bne	14fac <set_opt@@Base+0x5b0>
   14fa0:	cmp	r8, #0
   14fa4:	movne	r0, #2
   14fa8:	beq	14fe8 <set_opt@@Base+0x5ec>
   14fac:	str	r8, [r6, #216]	; 0xd8
   14fb0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14fb4:	ldr	r3, [pc, #124]	; 15038 <set_opt@@Base+0x63c>
   14fb8:	ldr	r0, [pc, #208]	; 15090 <set_opt@@Base+0x694>
   14fbc:	mov	r2, #37	; 0x25
   14fc0:	ldr	r3, [r7, r3]
   14fc4:	mov	r1, #1
   14fc8:	add	r0, pc, r0
   14fcc:	ldr	r3, [r3]
   14fd0:	bl	14014 <fwrite@plt>
   14fd4:	mvn	r0, #0
   14fd8:	bl	14068 <exit@plt>
   14fdc:	mov	r3, #1
   14fe0:	str	r3, [r6, #172]	; 0xac
   14fe4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14fe8:	ldr	r3, [pc, #72]	; 15038 <set_opt@@Base+0x63c>
   14fec:	ldr	r0, [pc, #160]	; 15094 <set_opt@@Base+0x698>
   14ff0:	mov	r2, #28
   14ff4:	ldr	r3, [r7, r3]
   14ff8:	mov	r1, #1
   14ffc:	add	r0, pc, r0
   15000:	ldr	r3, [r3]
   15004:	bl	14014 <fwrite@plt>
   15008:	mvn	r0, #0
   1500c:	bl	14068 <exit@plt>
   15010:	ldrdeq	r6, [r5], -ip
   15014:	andeq	fp, r2, r8, lsr #18
   15018:	andeq	fp, r2, r8, lsl r9
   1501c:	andeq	fp, r2, ip, lsl #18
   15020:	strdeq	fp, [r2], -ip
   15024:	andeq	fp, r2, ip, ror #17
   15028:	andeq	fp, r2, r4, ror #17
   1502c:	ldrdeq	fp, [r2], -ip
   15030:	andeq	fp, r2, r8, lsl #17
   15034:	andeq	fp, r2, r4, lsr #18
   15038:	andeq	r0, r0, r0, lsr #1
   1503c:	andeq	fp, r2, r0, lsr r8
   15040:	strdeq	fp, [r2], -r8
   15044:	andeq	fp, r2, ip, lsr fp
   15048:	andeq	r0, r0, ip, lsr #1
   1504c:	andeq	fp, r2, r0, lsr #17
   15050:	andeq	sl, r2, r4, asr #8
   15054:	andeq	fp, r2, r4, lsr #23
   15058:	andeq	sl, r2, r0, ror #8
   1505c:	andeq	sl, r2, r4, ror #8
   15060:	andeq	fp, r2, ip, asr r8
   15064:	andeq	fp, r2, r4, ror #16
   15068:	andeq	fp, r2, r8, asr #15
   1506c:	ldrdeq	fp, [r2], -r4
   15070:	andeq	fp, r2, r0, ror #15
   15074:	andeq	fp, r2, r4, ror #13
   15078:	andeq	fp, r2, ip, lsl #13
   1507c:	strdeq	fp, [r2], -ip
   15080:	andeq	fp, r2, r8, lsl r6
   15084:	muleq	r2, r8, r7
   15088:	ldrdeq	fp, [r2], -r0
   1508c:	muleq	r2, r4, r6
   15090:	andeq	fp, r2, r0, lsl r6
   15094:	andeq	fp, r2, r4, lsl #12

00015098 <get_opt@@Base>:
   15098:	push	{r4, r5, r6, lr}
   1509c:	ldrb	r3, [r1, #1]
   150a0:	ldr	ip, [pc, #164]	; 1514c <get_opt@@Base+0xb4>
   150a4:	cmp	r3, #45	; 0x2d
   150a8:	add	ip, pc, ip
   150ac:	beq	1510c <get_opt@@Base+0x74>
   150b0:	cmp	r3, #0
   150b4:	mov	r5, r0
   150b8:	mov	r6, r2
   150bc:	add	r4, r1, #1
   150c0:	beq	15124 <get_opt@@Base+0x8c>
   150c4:	mov	r2, r6
   150c8:	mov	r1, r4
   150cc:	mov	r0, r5
   150d0:	bl	149fc <set_opt@@Base>
   150d4:	cmp	r0, #1
   150d8:	beq	15104 <get_opt@@Base+0x6c>
   150dc:	cmp	r0, #2
   150e0:	beq	150fc <get_opt@@Base+0x64>
   150e4:	cmp	r0, #0
   150e8:	addeq	r4, r4, #1
   150ec:	ldrb	r0, [r4]
   150f0:	cmp	r0, #0
   150f4:	bne	150c4 <get_opt@@Base+0x2c>
   150f8:	pop	{r4, r5, r6, pc}
   150fc:	mov	r0, #1
   15100:	pop	{r4, r5, r6, pc}
   15104:	mov	r0, #0
   15108:	pop	{r4, r5, r6, pc}
   1510c:	add	r1, r1, #1
   15110:	bl	149fc <set_opt@@Base>
   15114:	sub	r0, r0, #2
   15118:	clz	r0, r0
   1511c:	lsr	r0, r0, #5
   15120:	pop	{r4, r5, r6, pc}
   15124:	ldr	r3, [pc, #36]	; 15150 <get_opt@@Base+0xb8>
   15128:	ldr	r0, [pc, #36]	; 15154 <get_opt@@Base+0xbc>
   1512c:	mov	r2, #24
   15130:	ldr	r3, [ip, r3]
   15134:	mov	r1, #1
   15138:	add	r0, pc, r0
   1513c:	ldr	r3, [r3]
   15140:	bl	14014 <fwrite@plt>
   15144:	mvn	r0, #0
   15148:	bl	14068 <exit@plt>
   1514c:	andeq	r5, r5, r0, asr pc
   15150:	andeq	r0, r0, r0, lsr #1
   15154:	andeq	fp, r2, r0, lsl #10

00015158 <parse_opts@@Base>:
   15158:	cmp	r0, #1
   1515c:	bxle	lr
   15160:	push	{r4, r5, r6, r7, r8, lr}
   15164:	mov	r5, r2
   15168:	mov	r8, r1
   1516c:	mov	r6, r0
   15170:	mov	r4, #1
   15174:	mov	r7, #0
   15178:	b	1519c <parse_opts@@Base+0x44>
   1517c:	ldr	r3, [r5, #212]	; 0xd4
   15180:	ldr	r2, [r5, #204]	; 0xcc
   15184:	add	r4, r4, #1
   15188:	add	r0, r3, #1
   1518c:	cmp	r6, r4
   15190:	str	r0, [r5, #212]	; 0xd4
   15194:	str	r1, [r2, r3, lsl #2]
   15198:	ble	151dc <parse_opts@@Base+0x84>
   1519c:	ldr	r1, [r8, r4, lsl #2]
   151a0:	lsl	r2, r4, #2
   151a4:	ldrb	r3, [r1]
   151a8:	cmp	r3, #45	; 0x2d
   151ac:	bne	1517c <parse_opts@@Base+0x24>
   151b0:	add	r0, r4, #1
   151b4:	cmp	r6, r0
   151b8:	add	r3, r8, r2
   151bc:	mov	r0, r5
   151c0:	mov	r2, r7
   151c4:	ldrgt	r2, [r3, #4]
   151c8:	bl	15098 <get_opt@@Base>
   151cc:	add	r4, r4, r0
   151d0:	add	r4, r4, #1
   151d4:	cmp	r6, r4
   151d8:	bgt	1519c <parse_opts@@Base+0x44>
   151dc:	pop	{r4, r5, r6, r7, r8, pc}
   151e0:	add	r0, r0, #172	; 0xac
   151e4:	mov	r2, #1
   151e8:	b	2baf8 <ptr_set_insert_item@@Base>
   151ec:	ldr	r3, [pc, #44]	; 15220 <parse_opts@@Base+0xc8>
   151f0:	ldr	r0, [pc, #44]	; 15224 <parse_opts@@Base+0xcc>
   151f4:	add	r3, pc, r3
   151f8:	push	{r4, lr}
   151fc:	mov	r2, #34	; 0x22
   15200:	ldr	ip, [r3, r0]
   15204:	ldr	r0, [pc, #28]	; 15228 <parse_opts@@Base+0xd0>
   15208:	mov	r1, #1
   1520c:	add	r0, pc, r0
   15210:	ldr	r3, [ip]
   15214:	bl	14014 <fwrite@plt>
   15218:	mov	r0, #1
   1521c:	bl	14068 <exit@plt>
   15220:	andeq	r5, r5, r4, lsl #28
   15224:	andeq	r0, r0, r0, lsr #1
   15228:	andeq	fp, r2, r8, lsr #11

0001522c <flatcc_init_options@@Base>:
   1522c:	push	{r4, r6, r7, lr}
   15230:	mov	r2, #224	; 0xe0
   15234:	mov	r1, #0
   15238:	mov	r4, r0
   1523c:	ldr	r6, [pc, #156]	; 152e0 <flatcc_init_options@@Base+0xb4>
   15240:	bl	140a4 <memset@plt>
   15244:	ldr	r0, [pc, #152]	; 152e4 <flatcc_init_options@@Base+0xb8>
   15248:	ldr	r1, [pc, #152]	; 152e8 <flatcc_init_options@@Base+0xbc>
   1524c:	ldr	r2, [pc, #152]	; 152ec <flatcc_init_options@@Base+0xc0>
   15250:	mov	ip, #65536	; 0x10000
   15254:	mov	r3, #2
   15258:	mov	r7, #0
   1525c:	mov	lr, #100	; 0x64
   15260:	add	r0, pc, r0
   15264:	add	r1, pc, r1
   15268:	add	r2, pc, r2
   1526c:	str	ip, [r4]
   15270:	str	r3, [r4, #68]	; 0x44
   15274:	mov	ip, #4
   15278:	mov	r3, #1
   1527c:	strd	r6, [r4, #88]	; 0x58
   15280:	str	r0, [r4, #96]	; 0x60
   15284:	str	r1, [r4, #100]	; 0x64
   15288:	str	r2, [r4, #104]	; 0x68
   1528c:	str	lr, [r4, #4]
   15290:	str	lr, [r4, #8]
   15294:	str	r3, [r4, #16]
   15298:	str	r3, [r4, #20]
   1529c:	str	r3, [r4, #24]
   152a0:	str	r3, [r4, #28]
   152a4:	str	r3, [r4, #32]
   152a8:	str	r3, [r4, #36]	; 0x24
   152ac:	str	r3, [r4, #40]	; 0x28
   152b0:	str	r3, [r4, #44]	; 0x2c
   152b4:	str	r3, [r4, #48]	; 0x30
   152b8:	str	r3, [r4, #52]	; 0x34
   152bc:	str	r3, [r4, #72]	; 0x48
   152c0:	str	r3, [r4, #76]	; 0x4c
   152c4:	str	r3, [r4, #84]	; 0x54
   152c8:	str	r3, [r4, #136]	; 0x88
   152cc:	str	r3, [r4, #140]	; 0x8c
   152d0:	str	r3, [r4, #184]	; 0xb8
   152d4:	str	ip, [r4, #64]	; 0x40
   152d8:	str	ip, [r4, #176]	; 0xb0
   152dc:	pop	{r4, r6, r7, pc}
   152e0:	strdeq	pc, [r0], -lr
   152e4:	andeq	fp, r2, r8, ror r5
   152e8:	andeq	fp, r2, ip, ror r5
   152ec:	andeq	fp, r2, r0, lsl #11

000152f0 <flatcc_create_context@@Base>:
   152f0:	push	{r4, r5, r6, r7, r8, r9, lr}
   152f4:	mov	r5, r0
   152f8:	sub	sp, sp, #12
   152fc:	mov	r0, #560	; 0x230
   15300:	mov	r6, r1
   15304:	mov	r7, r2
   15308:	mov	r8, r3
   1530c:	bl	14038 <malloc@plt>
   15310:	subs	r4, r0, #0
   15314:	beq	15348 <flatcc_create_context@@Base+0x58>
   15318:	mov	r9, #0
   1531c:	str	r8, [sp]
   15320:	mov	r3, r7
   15324:	mov	r2, r6
   15328:	mov	r1, r5
   1532c:	str	r9, [sp, #4]
   15330:	bl	2f8e8 <__flatcc_fb_init_parser@@Base>
   15334:	cmp	r0, r9
   15338:	mov	r0, r4
   1533c:	bne	15350 <flatcc_create_context@@Base+0x60>
   15340:	add	sp, sp, #12
   15344:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15348:	mov	r0, r4
   1534c:	b	15340 <flatcc_create_context@@Base+0x50>
   15350:	bl	13fcc <free@plt>
   15354:	mov	r0, r9
   15358:	b	15340 <flatcc_create_context@@Base+0x50>

0001535c <flatcc_parse_buffer@@Base>:
   1535c:	ldr	r3, [r0, #128]	; 0x80
   15360:	push	{r4, r5, r6, r7, r8, lr}
   15364:	mov	r6, r2
   15368:	cmp	r3, #0
   1536c:	cmpne	r3, r6
   15370:	mov	r2, #1
   15374:	movcc	r4, #1
   15378:	movcs	r4, #0
   1537c:	str	r2, [r0, #140]	; 0x8c
   15380:	bcc	153d0 <flatcc_parse_buffer@@Base+0x74>
   15384:	mov	r5, r0
   15388:	mov	r7, r1
   1538c:	add	r1, r0, #352	; 0x160
   15390:	add	r0, r0, #524	; 0x20c
   15394:	bl	2baf8 <ptr_set_insert_item@@Base>
   15398:	mov	r3, r4
   1539c:	mov	r2, r6
   153a0:	mov	r1, r7
   153a4:	mov	r0, r5
   153a8:	bl	2fbe4 <__flatcc_fb_parse@@Base>
   153ac:	cmp	r0, #0
   153b0:	bne	153c8 <flatcc_parse_buffer@@Base+0x6c>
   153b4:	mov	r0, r5
   153b8:	bl	35d40 <__flatcc_fb_build_schema@@Base>
   153bc:	adds	r0, r0, #0
   153c0:	mvnne	r0, #0
   153c4:	pop	{r4, r5, r6, r7, r8, pc}
   153c8:	mvn	r0, #0
   153cc:	pop	{r4, r5, r6, r7, r8, pc}
   153d0:	ldr	r1, [pc, #12]	; 153e4 <flatcc_parse_buffer@@Base+0x88>
   153d4:	add	r1, pc, r1
   153d8:	bl	2e14c <__flatcc_fb_print_error@@Base>
   153dc:	mvn	r0, #0
   153e0:	pop	{r4, r5, r6, r7, r8, pc}
   153e4:	andeq	fp, r2, ip, lsl r4

000153e8 <flatcc_generate_binary_schema_to_buffer@@Base>:
   153e8:	push	{lr}		; (str lr, [sp, #-4]!)
   153ec:	sub	sp, sp, #12
   153f0:	add	r3, sp, #8
   153f4:	mov	ip, r0
   153f8:	str	r2, [r3, #-4]!
   153fc:	add	r0, r0, #128	; 0x80
   15400:	mov	r2, r1
   15404:	add	r1, ip, #352	; 0x160
   15408:	bl	2abd0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
   1540c:	cmp	r0, #0
   15410:	mvneq	r0, #0
   15414:	ldrne	r0, [sp, #4]
   15418:	add	sp, sp, #12
   1541c:	pop	{pc}		; (ldr pc, [sp], #4)

00015420 <flatcc_generate_binary_schema@@Base>:
   15420:	mov	r3, r0
   15424:	mov	r2, r1
   15428:	add	r0, r0, #128	; 0x80
   1542c:	add	r1, r3, #352	; 0x160
   15430:	b	2ac48 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>

00015434 <flatcc_generate_files@@Base>:
   15434:	push	{r4, r5, r6, r7, lr}
   15438:	subs	r5, r0, #0
   1543c:	sub	sp, sp, #236	; 0xec
   15440:	beq	154f4 <flatcc_generate_files@@Base+0xc0>
   15444:	ldr	r2, [r5, #108]	; 0x6c
   15448:	cmp	r2, #0
   1544c:	bne	154f4 <flatcc_generate_files@@Base+0xc0>
   15450:	mov	r4, r5
   15454:	b	1545c <flatcc_generate_files@@Base+0x28>
   15458:	mov	r4, r3
   1545c:	ldr	r3, [r4]
   15460:	str	r2, [r4, #4]
   15464:	cmp	r3, #0
   15468:	mov	r2, r4
   1546c:	bne	15458 <flatcc_generate_files@@Base+0x24>
   15470:	ldr	r3, [r5, #308]	; 0x134
   15474:	add	r6, r5, #128	; 0x80
   15478:	cmp	r3, #0
   1547c:	bne	154e0 <flatcc_generate_files@@Base+0xac>
   15480:	mov	r1, r6
   15484:	mov	r0, sp
   15488:	bl	15d5c <__flatcc_fb_init_output_c@@Base>
   1548c:	mov	r7, sp
   15490:	cmp	r0, #0
   15494:	bne	154f4 <flatcc_generate_files@@Base+0xc0>
   15498:	ldr	r3, [r5, #256]	; 0x100
   1549c:	cmp	r3, #0
   154a0:	beq	15538 <flatcc_generate_files@@Base+0x104>
   154a4:	ldr	r6, [r5, #120]	; 0x78
   154a8:	cmp	r6, #0
   154ac:	beq	154cc <flatcc_generate_files@@Base+0x98>
   154b0:	ldr	r3, [r5, #300]	; 0x12c
   154b4:	cmp	r3, #0
   154b8:	beq	1554c <flatcc_generate_files@@Base+0x118>
   154bc:	ldr	r3, [r4, #108]	; 0x6c
   154c0:	cmp	r3, #0
   154c4:	beq	15504 <flatcc_generate_files@@Base+0xd0>
   154c8:	mov	r6, #1
   154cc:	mov	r0, r7
   154d0:	bl	15d18 <__flatcc_fb_end_output_c@@Base>
   154d4:	mov	r0, r6
   154d8:	add	sp, sp, #236	; 0xec
   154dc:	pop	{r4, r5, r6, r7, pc}
   154e0:	mov	r0, r6
   154e4:	add	r1, r5, #352	; 0x160
   154e8:	bl	2acb4 <__flatcc_fb_codegen_bfbs_to_file@@Base>
   154ec:	cmp	r0, #0
   154f0:	beq	15480 <flatcc_generate_files@@Base+0x4c>
   154f4:	mvn	r6, #0
   154f8:	mov	r0, r6
   154fc:	add	sp, sp, #236	; 0xec
   15500:	pop	{r4, r5, r6, r7, pc}
   15504:	add	r1, r4, #352	; 0x160
   15508:	mov	r0, r7
   1550c:	bl	162f8 <__flatcc_fb_codegen_c@@Base>
   15510:	ldr	r4, [r4, #4]
   15514:	cmp	r4, #0
   15518:	clz	r3, r0
   1551c:	lsr	r3, r3, #5
   15520:	moveq	r3, #0
   15524:	cmp	r3, #0
   15528:	bne	154bc <flatcc_generate_files@@Base+0x88>
   1552c:	adds	r6, r0, #0
   15530:	movne	r6, #1
   15534:	b	154cc <flatcc_generate_files@@Base+0x98>
   15538:	mov	r0, sp
   1553c:	bl	16238 <__flatcc_fb_codegen_common_c@@Base>
   15540:	subs	r6, r0, #0
   15544:	bne	154cc <flatcc_generate_files@@Base+0x98>
   15548:	b	154a4 <flatcc_generate_files@@Base+0x70>
   1554c:	add	r1, r5, #352	; 0x160
   15550:	mov	r0, r7
   15554:	bl	162f8 <__flatcc_fb_codegen_c@@Base>
   15558:	mov	r6, r0
   1555c:	b	154cc <flatcc_generate_files@@Base+0x98>

00015560 <flatcc_destroy_context@@Base>:
   15560:	push	{r4, r5, r6, lr}
   15564:	subs	r4, r0, #0
   15568:	popeq	{r4, r5, r6, pc}
   1556c:	mov	r0, r4
   15570:	ldr	r5, [r4]
   15574:	bl	329e4 <__flatcc_fb_clear_parser@@Base>
   15578:	mov	r0, r4
   1557c:	bl	13fcc <free@plt>
   15580:	subs	r4, r5, #0
   15584:	bne	1556c <flatcc_destroy_context@@Base+0xc>
   15588:	pop	{r4, r5, r6, pc}

0001558c <flatcc_parse_file@@Base>:
   1558c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15590:	mov	r4, r0
   15594:	sub	sp, sp, #44	; 0x2c
   15598:	mov	r0, r1
   1559c:	mov	r7, r1
   155a0:	bl	14074 <strlen@plt>
   155a4:	add	r3, r4, #352	; 0x160
   155a8:	mov	r1, r3
   155ac:	mov	r2, #1
   155b0:	str	r3, [sp, #16]
   155b4:	mov	r8, r0
   155b8:	ldr	r0, [r4, #412]	; 0x19c
   155bc:	add	r0, r0, #32
   155c0:	bl	2d7fc <fb_schema_table_insert_item@@Base>
   155c4:	cmp	r0, #0
   155c8:	beq	155dc <flatcc_parse_file@@Base+0x50>
   155cc:	mov	r9, #0
   155d0:	mov	r0, r9
   155d4:	add	sp, sp, #44	; 0x2c
   155d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155dc:	ldr	r3, [r4, #552]	; 0x228
   155e0:	cmp	r3, #0
   155e4:	str	r3, [sp, #28]
   155e8:	str	r3, [sp, #12]
   155ec:	beq	15aa0 <flatcc_parse_file@@Base+0x514>
   155f0:	ldr	r3, [r4, #336]	; 0x150
   155f4:	cmp	r3, #0
   155f8:	ble	15808 <flatcc_parse_file@@Base+0x27c>
   155fc:	ldr	fp, [pc, #1404]	; 15b80 <flatcc_parse_file@@Base+0x5f4>
   15600:	mov	r5, #0
   15604:	add	fp, pc, fp
   15608:	mov	sl, #1
   1560c:	add	r9, sp, #36	; 0x24
   15610:	ldr	r3, [r4, #328]	; 0x148
   15614:	ldr	r6, [r3, r5, lsl #2]
   15618:	mov	r0, r6
   1561c:	bl	14074 <strlen@plt>
   15620:	str	sl, [sp, #4]
   15624:	str	fp, [sp]
   15628:	mov	r3, r8
   1562c:	mov	r2, r7
   15630:	mov	r1, r0
   15634:	mov	r0, r6
   15638:	bl	2d990 <__flatcc_fb_create_join_path_n@@Base>
   1563c:	subs	r6, r0, #0
   15640:	beq	15ad0 <flatcc_parse_file@@Base+0x544>
   15644:	mov	r2, r9
   15648:	ldr	r1, [r4, #128]	; 0x80
   1564c:	bl	2dda8 <__flatcc_fb_read_file@@Base>
   15650:	cmp	r0, #0
   15654:	beq	157c8 <flatcc_parse_file@@Base+0x23c>
   15658:	mov	r1, r0
   1565c:	ldr	r0, [r4, #412]	; 0x19c
   15660:	ldr	ip, [sp, #36]	; 0x24
   15664:	ldr	r3, [r0, #56]	; 0x38
   15668:	mov	r2, ip
   1566c:	add	r3, r3, ip
   15670:	str	r3, [r0, #56]	; 0x38
   15674:	mov	r3, #1
   15678:	str	r6, [r4, #548]	; 0x224
   1567c:	mov	r0, r4
   15680:	bl	2fbe4 <__flatcc_fb_parse@@Base>
   15684:	subs	r9, r0, #0
   15688:	bne	155cc <flatcc_parse_file@@Base+0x40>
   1568c:	ldr	r6, [r4, #352]	; 0x160
   15690:	cmp	r6, #0
   15694:	beq	158c4 <flatcc_parse_file@@Base+0x338>
   15698:	ldr	r3, [pc, #1252]	; 15b84 <flatcc_parse_file@@Base+0x5f8>
   1569c:	str	r9, [sp, #24]
   156a0:	add	r3, pc, r3
   156a4:	str	r3, [sp, #20]
   156a8:	ldr	r3, [pc, #1240]	; 15b88 <flatcc_parse_file@@Base+0x5fc>
   156ac:	add	fp, r4, #128	; 0x80
   156b0:	add	r3, pc, r3
   156b4:	str	r3, [sp, #12]
   156b8:	mov	sl, #560	; 0x230
   156bc:	ldr	r9, [sp, #16]
   156c0:	b	156f0 <flatcc_parse_file@@Base+0x164>
   156c4:	add	r0, r0, #172	; 0xac
   156c8:	mov	r2, r9
   156cc:	ldr	r1, [sp, #12]
   156d0:	bl	2bb34 <ptr_set_visit@@Base>
   156d4:	mov	r0, r7
   156d8:	bl	15560 <flatcc_destroy_context@@Base>
   156dc:	mov	r0, r8
   156e0:	bl	13fcc <free@plt>
   156e4:	ldr	r6, [r6]
   156e8:	cmp	r6, #0
   156ec:	beq	158c4 <flatcc_parse_file@@Base+0x338>
   156f0:	ldr	r1, [r6, #12]
   156f4:	ldr	r0, [r6, #8]
   156f8:	bl	2d8c0 <__flatcc_fb_copy_path_n@@Base>
   156fc:	subs	r8, r0, #0
   15700:	beq	15ad0 <flatcc_parse_file@@Base+0x544>
   15704:	ldr	r5, [r4, #412]	; 0x19c
   15708:	ldr	r3, [r4, #132]	; 0x84
   1570c:	ldr	r2, [r5, #52]	; 0x34
   15710:	cmp	r2, r3
   15714:	cmpge	r3, #0
   15718:	bgt	15a40 <flatcc_parse_file@@Base+0x4b4>
   1571c:	ldr	r3, [r4, #136]	; 0x88
   15720:	ldr	r2, [r5, #48]	; 0x30
   15724:	cmp	r2, r3
   15728:	cmpge	r3, #0
   1572c:	bgt	15a28 <flatcc_parse_file@@Base+0x49c>
   15730:	mov	r0, sl
   15734:	bl	14038 <malloc@plt>
   15738:	subs	r7, r0, #0
   1573c:	beq	1589c <flatcc_parse_file@@Base+0x310>
   15740:	ldr	r2, [r4, #12]
   15744:	ldr	r3, [r4, #8]
   15748:	mov	r1, fp
   1574c:	stm	sp, {r2, r5}
   15750:	mov	r2, r8
   15754:	bl	2f8e8 <__flatcc_fb_init_parser@@Base>
   15758:	cmp	r0, #0
   1575c:	bne	158b4 <flatcc_parse_file@@Base+0x328>
   15760:	add	r1, r7, #352	; 0x160
   15764:	add	r0, r5, #32
   15768:	bl	2d838 <fb_schema_table_find_item@@Base>
   1576c:	cmp	r0, #0
   15770:	bne	156c4 <flatcc_parse_file@@Base+0x138>
   15774:	ldr	r1, [r4]
   15778:	ldr	r2, [r5, #52]	; 0x34
   1577c:	ldr	r3, [r5, #48]	; 0x30
   15780:	str	r1, [r7]
   15784:	ldr	r1, [r4, #548]	; 0x224
   15788:	add	r2, r2, #1
   1578c:	add	r3, r3, #1
   15790:	str	r1, [r7, #552]	; 0x228
   15794:	str	r7, [r4]
   15798:	mov	r1, r8
   1579c:	str	r2, [r5, #52]	; 0x34
   157a0:	str	r3, [r5, #48]	; 0x30
   157a4:	mov	r0, r7
   157a8:	bl	1558c <flatcc_parse_file@@Base>
   157ac:	cmp	r0, #0
   157b0:	bne	1589c <flatcc_parse_file@@Base+0x310>
   157b4:	add	r0, r7, #524	; 0x20c
   157b8:	mov	r2, r9
   157bc:	ldr	r1, [sp, #20]
   157c0:	bl	2bb34 <ptr_set_visit@@Base>
   157c4:	b	156dc <flatcc_parse_file@@Base+0x150>
   157c8:	mov	r0, r6
   157cc:	bl	13fcc <free@plt>
   157d0:	ldr	r3, [r4, #128]	; 0x80
   157d4:	ldr	r2, [sp, #36]	; 0x24
   157d8:	cmp	r3, #0
   157dc:	cmpne	r3, r2
   157e0:	bcc	15ad4 <flatcc_parse_file@@Base+0x548>
   157e4:	ldr	r3, [r4, #336]	; 0x150
   157e8:	add	r5, r5, #1
   157ec:	cmp	r3, r5
   157f0:	bgt	15610 <flatcc_parse_file@@Base+0x84>
   157f4:	ldr	r3, [sp, #12]
   157f8:	cmp	r3, #0
   157fc:	beq	15a84 <flatcc_parse_file@@Base+0x4f8>
   15800:	ldr	r3, [r4, #552]	; 0x228
   15804:	str	r3, [sp, #12]
   15808:	ldr	r5, [sp, #12]
   1580c:	mov	r0, r5
   15810:	bl	14074 <strlen@plt>
   15814:	mov	r1, r0
   15818:	mov	r0, r5
   1581c:	bl	2dcf4 <__flatcc_fb_find_basename@@Base>
   15820:	ldr	r2, [pc, #868]	; 15b8c <flatcc_parse_file@@Base+0x600>
   15824:	mov	r1, #1
   15828:	add	r2, pc, r2
   1582c:	str	r2, [sp]
   15830:	str	r1, [sp, #4]
   15834:	mov	r3, r8
   15838:	mov	r2, r7
   1583c:	mov	r1, r0
   15840:	mov	r0, r5
   15844:	bl	2d990 <__flatcc_fb_create_join_path_n@@Base>
   15848:	subs	r6, r0, #0
   1584c:	beq	15ad0 <flatcc_parse_file@@Base+0x544>
   15850:	ldr	r1, [r4, #128]	; 0x80
   15854:	add	r2, sp, #36	; 0x24
   15858:	bl	2dda8 <__flatcc_fb_read_file@@Base>
   1585c:	subs	r1, r0, #0
   15860:	bne	1565c <flatcc_parse_file@@Base+0xd0>
   15864:	mov	r0, r6
   15868:	bl	13fcc <free@plt>
   1586c:	ldr	r3, [r4, #128]	; 0x80
   15870:	ldr	r2, [sp, #36]	; 0x24
   15874:	cmp	r3, #0
   15878:	cmpne	r3, r2
   1587c:	bcc	15ad4 <flatcc_parse_file@@Base+0x548>
   15880:	ldr	r1, [pc, #776]	; 15b90 <flatcc_parse_file@@Base+0x604>
   15884:	mov	r2, r7
   15888:	mov	r0, r4
   1588c:	add	r1, pc, r1
   15890:	bl	2e14c <__flatcc_fb_print_error@@Base>
   15894:	mvn	r9, #0
   15898:	b	155d0 <flatcc_parse_file@@Base+0x44>
   1589c:	ldr	r9, [sp, #24]
   158a0:	mov	r0, r8
   158a4:	bl	13fcc <free@plt>
   158a8:	mov	r0, r9
   158ac:	add	sp, sp, #44	; 0x2c
   158b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158b4:	mov	r0, r7
   158b8:	ldr	r9, [sp, #24]
   158bc:	bl	13fcc <free@plt>
   158c0:	b	158a0 <flatcc_parse_file@@Base+0x314>
   158c4:	ldr	r1, [sp, #16]
   158c8:	mov	r2, #1
   158cc:	add	r0, r4, #524	; 0x20c
   158d0:	bl	2baf8 <ptr_set_insert_item@@Base>
   158d4:	mov	r0, r4
   158d8:	bl	35d40 <__flatcc_fb_build_schema@@Base>
   158dc:	subs	r9, r0, #0
   158e0:	bne	155cc <flatcc_parse_file@@Base+0x40>
   158e4:	ldr	r3, [r4, #240]	; 0xf0
   158e8:	ldr	r2, [sp, #28]
   158ec:	adds	r3, r3, #0
   158f0:	movne	r3, #1
   158f4:	cmp	r2, #0
   158f8:	movne	r3, #0
   158fc:	cmp	r3, #0
   15900:	beq	155cc <flatcc_parse_file@@Base+0x40>
   15904:	ldr	r3, [r4, #552]	; 0x228
   15908:	cmp	r3, #0
   1590c:	bne	15b60 <flatcc_parse_file@@Base+0x5d4>
   15910:	ldr	r5, [r4, #344]	; 0x158
   15914:	cmp	r5, #0
   15918:	beq	15b54 <flatcc_parse_file@@Base+0x5c8>
   1591c:	ldr	r1, [r4, #244]	; 0xf4
   15920:	ldr	r2, [pc, #620]	; 15b94 <flatcc_parse_file@@Base+0x608>
   15924:	cmp	r1, #0
   15928:	add	r2, pc, r2
   1592c:	ldr	r3, [r4, #512]	; 0x200
   15930:	mov	r0, r2
   15934:	ldr	r6, [r4, #248]	; 0xf8
   15938:	beq	15b30 <flatcc_parse_file@@Base+0x5a4>
   1593c:	cmp	r6, #0
   15940:	beq	15b14 <flatcc_parse_file@@Base+0x588>
   15944:	ldr	r5, [pc, #588]	; 15b98 <flatcc_parse_file@@Base+0x60c>
   15948:	add	r5, pc, r5
   1594c:	mov	r8, r5
   15950:	mov	r3, #1
   15954:	bl	2dad4 <__flatcc_fb_create_join_path@@Base>
   15958:	subs	r7, r0, #0
   1595c:	beq	15ad0 <flatcc_parse_file@@Base+0x544>
   15960:	mov	r0, r5
   15964:	mov	r2, r8
   15968:	mov	r1, r6
   1596c:	mov	r3, #1
   15970:	bl	2dad4 <__flatcc_fb_create_join_path@@Base>
   15974:	subs	r5, r0, #0
   15978:	beq	15ad0 <flatcc_parse_file@@Base+0x544>
   1597c:	bl	2dcd8 <__flatcc_fb_create_make_path@@Base>
   15980:	subs	r8, r0, #0
   15984:	beq	15ad0 <flatcc_parse_file@@Base+0x544>
   15988:	mov	r0, r5
   1598c:	bl	13fcc <free@plt>
   15990:	ldr	r1, [pc, #516]	; 15b9c <flatcc_parse_file@@Base+0x610>
   15994:	mov	r0, r7
   15998:	add	r1, pc, r1
   1599c:	bl	13fc0 <fopen@plt>
   159a0:	subs	r6, r0, #0
   159a4:	beq	15aec <flatcc_parse_file@@Base+0x560>
   159a8:	ldr	r1, [pc, #496]	; 15ba0 <flatcc_parse_file@@Base+0x614>
   159ac:	mov	r2, r8
   159b0:	add	r1, pc, r1
   159b4:	bl	1408c <fprintf@plt>
   159b8:	ldr	r4, [r4]
   159bc:	ldr	sl, [pc, #480]	; 15ba4 <flatcc_parse_file@@Base+0x618>
   159c0:	cmp	r4, #0
   159c4:	add	sl, pc, sl
   159c8:	beq	15a00 <flatcc_parse_file@@Base+0x474>
   159cc:	ldr	r0, [r4, #548]	; 0x224
   159d0:	bl	2dcd8 <__flatcc_fb_create_make_path@@Base>
   159d4:	subs	r5, r0, #0
   159d8:	beq	15ad0 <flatcc_parse_file@@Base+0x544>
   159dc:	mov	r2, r5
   159e0:	mov	r1, sl
   159e4:	mov	r0, r6
   159e8:	bl	1408c <fprintf@plt>
   159ec:	ldr	r4, [r4]
   159f0:	mov	r0, r5
   159f4:	bl	13fcc <free@plt>
   159f8:	cmp	r4, #0
   159fc:	bne	159cc <flatcc_parse_file@@Base+0x440>
   15a00:	mov	r1, r6
   15a04:	mov	r0, #10
   15a08:	bl	140ec <fputc@plt>
   15a0c:	mov	r0, r7
   15a10:	bl	13fcc <free@plt>
   15a14:	mov	r0, r8
   15a18:	bl	13fcc <free@plt>
   15a1c:	mov	r0, r6
   15a20:	bl	140d4 <fclose@plt>
   15a24:	b	155d0 <flatcc_parse_file@@Base+0x44>
   15a28:	ldr	r1, [pc, #376]	; 15ba8 <flatcc_parse_file@@Base+0x61c>
   15a2c:	mov	r0, r4
   15a30:	add	r1, pc, r1
   15a34:	ldr	r9, [sp, #24]
   15a38:	bl	2e14c <__flatcc_fb_print_error@@Base>
   15a3c:	b	158a0 <flatcc_parse_file@@Base+0x314>
   15a40:	ldr	r1, [pc, #356]	; 15bac <flatcc_parse_file@@Base+0x620>
   15a44:	mov	r0, r4
   15a48:	add	r1, pc, r1
   15a4c:	ldr	r9, [sp, #24]
   15a50:	bl	2e14c <__flatcc_fb_print_error@@Base>
   15a54:	b	158a0 <flatcc_parse_file@@Base+0x314>
   15a58:	ldr	r3, [r4, #412]	; 0x19c
   15a5c:	ldr	r1, [sp, #36]	; 0x24
   15a60:	ldr	r2, [r4, #128]	; 0x80
   15a64:	ldr	r3, [r3, #56]	; 0x38
   15a68:	add	r3, r3, r1
   15a6c:	cmp	r2, #0
   15a70:	cmpne	r3, r2
   15a74:	bhi	15ad4 <flatcc_parse_file@@Base+0x548>
   15a78:	ldr	r3, [r4, #336]	; 0x150
   15a7c:	cmp	r3, #0
   15a80:	bgt	155fc <flatcc_parse_file@@Base+0x70>
   15a84:	ldr	r1, [pc, #292]	; 15bb0 <flatcc_parse_file@@Base+0x624>
   15a88:	mov	r2, r7
   15a8c:	mov	r0, r4
   15a90:	add	r1, pc, r1
   15a94:	bl	2e14c <__flatcc_fb_print_error@@Base>
   15a98:	mvn	r9, #0
   15a9c:	b	155d0 <flatcc_parse_file@@Base+0x44>
   15aa0:	ldr	r1, [r4, #128]	; 0x80
   15aa4:	add	r2, sp, #36	; 0x24
   15aa8:	mov	r0, r7
   15aac:	bl	2dda8 <__flatcc_fb_read_file@@Base>
   15ab0:	subs	r1, r0, #0
   15ab4:	beq	15a58 <flatcc_parse_file@@Base+0x4cc>
   15ab8:	mov	r0, r7
   15abc:	str	r1, [sp, #12]
   15ac0:	bl	2d90c <__flatcc_fb_copy_path@@Base>
   15ac4:	ldr	r1, [sp, #12]
   15ac8:	subs	r6, r0, #0
   15acc:	bne	1565c <flatcc_parse_file@@Base+0xd0>
   15ad0:	bl	151ec <parse_opts@@Base+0x94>
   15ad4:	ldr	r1, [pc, #216]	; 15bb4 <flatcc_parse_file@@Base+0x628>
   15ad8:	mov	r0, r4
   15adc:	add	r1, pc, r1
   15ae0:	bl	2e14c <__flatcc_fb_print_error@@Base>
   15ae4:	mvn	r9, #0
   15ae8:	b	155d0 <flatcc_parse_file@@Base+0x44>
   15aec:	ldr	r1, [pc, #196]	; 15bb8 <flatcc_parse_file@@Base+0x62c>
   15af0:	mov	r2, r7
   15af4:	add	r1, pc, r1
   15af8:	mov	r0, r4
   15afc:	bl	2e14c <__flatcc_fb_print_error@@Base>
   15b00:	mov	r0, r7
   15b04:	bl	13fcc <free@plt>
   15b08:	mov	r0, r8
   15b0c:	bl	13fcc <free@plt>
   15b10:	b	155d0 <flatcc_parse_file@@Base+0x44>
   15b14:	ldr	ip, [r4, #308]	; 0x134
   15b18:	cmp	ip, #0
   15b1c:	beq	15b44 <flatcc_parse_file@@Base+0x5b8>
   15b20:	ldr	r8, [pc, #148]	; 15bbc <flatcc_parse_file@@Base+0x630>
   15b24:	mov	r6, r3
   15b28:	add	r8, pc, r8
   15b2c:	b	15950 <flatcc_parse_file@@Base+0x3c4>
   15b30:	ldr	r2, [pc, #136]	; 15bc0 <flatcc_parse_file@@Base+0x634>
   15b34:	mov	r0, r5
   15b38:	mov	r1, r3
   15b3c:	add	r2, pc, r2
   15b40:	b	1593c <flatcc_parse_file@@Base+0x3b0>
   15b44:	ldr	r8, [pc, #120]	; 15bc4 <flatcc_parse_file@@Base+0x638>
   15b48:	mov	r6, r3
   15b4c:	add	r8, pc, r8
   15b50:	b	15950 <flatcc_parse_file@@Base+0x3c4>
   15b54:	ldr	r5, [pc, #108]	; 15bc8 <flatcc_parse_file@@Base+0x63c>
   15b58:	add	r5, pc, r5
   15b5c:	b	1591c <flatcc_parse_file@@Base+0x390>
   15b60:	ldr	r3, [pc, #100]	; 15bcc <flatcc_parse_file@@Base+0x640>
   15b64:	ldr	r1, [pc, #100]	; 15bd0 <flatcc_parse_file@@Base+0x644>
   15b68:	ldr	r0, [pc, #100]	; 15bd4 <flatcc_parse_file@@Base+0x648>
   15b6c:	add	r3, pc, r3
   15b70:	mov	r2, #220	; 0xdc
   15b74:	add	r1, pc, r1
   15b78:	add	r0, pc, r0
   15b7c:	bl	14140 <__assert_fail@plt>
   15b80:	andeq	r5, r3, ip, lsr r5
   15b84:			; <UNDEFINED> instruction: 0xfffffb38
   15b88:			; <UNDEFINED> instruction: 0xfffffb28
   15b8c:	andeq	r5, r3, r8, lsl r3
   15b90:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   15b94:	andeq	r5, r3, r8, lsl r2
   15b98:	strdeq	r5, [r3], -r8
   15b9c:	andeq	sl, r2, r0, ror pc
   15ba0:	andeq	sl, r2, ip, lsl #31
   15ba4:	andeq	sl, r2, ip, ror pc
   15ba8:	andeq	sl, r2, r0, asr #28
   15bac:	andeq	sl, r2, r8, lsl #28
   15bb0:	muleq	r2, r8, sp
   15bb4:	andeq	sl, r2, r4, lsl sp
   15bb8:	andeq	sl, r2, r8, lsl lr
   15bbc:			; <UNDEFINED> instruction: 0x0002acb8
   15bc0:	ldrdeq	sl, [r2], -r8
   15bc4:	ldrdeq	sl, [r2], -r0
   15bc8:	andeq	r4, r3, r8, ror #31
   15bcc:	andeq	sl, r2, ip, lsr #24
   15bd0:	andeq	sl, r2, ip, lsl sp
   15bd4:	andeq	sl, r2, r8, ror sp
   15bd8:	mov	r0, r1
   15bdc:	b	13fcc <free@plt>

00015be0 <__flatcc_fb_open_output_file@@Base>:
   15be0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15be4:	mov	r8, r1
   15be8:	ldr	r1, [r0, #212]	; 0xd4
   15bec:	ldr	r7, [pc, #208]	; 15cc4 <__flatcc_fb_open_output_file@@Base+0xe4>
   15bf0:	mov	r6, r0
   15bf4:	ldr	r5, [r1, #216]	; 0xd8
   15bf8:	sub	sp, sp, #8
   15bfc:	subs	r0, r5, #0
   15c00:	mov	r9, r2
   15c04:	mov	sl, r3
   15c08:	add	r7, pc, r7
   15c0c:	beq	15c30 <__flatcc_fb_open_output_file@@Base+0x50>
   15c10:	bl	14074 <strlen@plt>
   15c14:	ldr	r4, [r6, #204]	; 0xcc
   15c18:	cmp	r4, #0
   15c1c:	movne	r4, #0
   15c20:	beq	15c48 <__flatcc_fb_open_output_file@@Base+0x68>
   15c24:	mov	r0, r4
   15c28:	add	sp, sp, #8
   15c2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15c30:	ldr	r4, [r6, #204]	; 0xcc
   15c34:	ldr	r5, [pc, #140]	; 15cc8 <__flatcc_fb_open_output_file@@Base+0xe8>
   15c38:	cmp	r4, #0
   15c3c:	add	r5, pc, r5
   15c40:	movne	r4, #0
   15c44:	bne	15c24 <__flatcc_fb_open_output_file@@Base+0x44>
   15c48:	mov	ip, #1
   15c4c:	mov	r1, r0
   15c50:	str	sl, [sp]
   15c54:	mov	r0, r5
   15c58:	mov	r3, r9
   15c5c:	mov	r2, r8
   15c60:	str	ip, [sp, #4]
   15c64:	bl	2d990 <__flatcc_fb_create_join_path_n@@Base>
   15c68:	subs	r5, r0, #0
   15c6c:	beq	15cc0 <__flatcc_fb_open_output_file@@Base+0xe0>
   15c70:	ldr	r1, [pc, #84]	; 15ccc <__flatcc_fb_open_output_file@@Base+0xec>
   15c74:	add	r1, pc, r1
   15c78:	bl	13fc0 <fopen@plt>
   15c7c:	cmp	r0, #0
   15c80:	str	r0, [r6, #204]	; 0xcc
   15c84:	beq	15c9c <__flatcc_fb_open_output_file@@Base+0xbc>
   15c88:	mov	r0, r5
   15c8c:	bl	13fcc <free@plt>
   15c90:	mov	r0, r4
   15c94:	add	sp, sp, #8
   15c98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15c9c:	ldr	r3, [pc, #44]	; 15cd0 <__flatcc_fb_open_output_file@@Base+0xf0>
   15ca0:	ldr	r1, [pc, #44]	; 15cd4 <__flatcc_fb_open_output_file@@Base+0xf4>
   15ca4:	mov	r2, r5
   15ca8:	ldr	r3, [r7, r3]
   15cac:	add	r1, pc, r1
   15cb0:	mvn	r4, #0
   15cb4:	ldr	r0, [r3]
   15cb8:	bl	1408c <fprintf@plt>
   15cbc:	b	15c88 <__flatcc_fb_open_output_file@@Base+0xa8>
   15cc0:	bl	14150 <__assert_fail@plt+0x10>
   15cc4:	strdeq	r5, [r5], -r0
   15cc8:	andeq	r4, r3, r4, lsl #30
   15ccc:	muleq	r2, r4, ip
   15cd0:	andeq	r0, r0, r0, lsr #1
   15cd4:	muleq	r2, r8, ip

00015cd8 <__flatcc_fb_close_output_file@@Base>:
   15cd8:	ldr	r3, [r0, #212]	; 0xd4
   15cdc:	ldr	r2, [r3, #124]	; 0x7c
   15ce0:	cmp	r2, #0
   15ce4:	bxne	lr
   15ce8:	push	{r4, r5, r6, lr}
   15cec:	ldr	r5, [r3, #108]	; 0x6c
   15cf0:	cmp	r5, #0
   15cf4:	popne	{r4, r5, r6, pc}
   15cf8:	ldr	r3, [r0, #204]	; 0xcc
   15cfc:	cmp	r3, #0
   15d00:	popeq	{r4, r5, r6, pc}
   15d04:	mov	r4, r0
   15d08:	mov	r0, r3
   15d0c:	bl	140d4 <fclose@plt>
   15d10:	str	r5, [r4, #204]	; 0xcc
   15d14:	pop	{r4, r5, r6, pc}

00015d18 <__flatcc_fb_end_output_c@@Base>:
   15d18:	ldr	r3, [pc, #52]	; 15d54 <__flatcc_fb_end_output_c@@Base+0x3c>
   15d1c:	ldr	r2, [pc, #52]	; 15d58 <__flatcc_fb_end_output_c@@Base+0x40>
   15d20:	add	r3, pc, r3
   15d24:	push	{r4, lr}
   15d28:	mov	r4, r0
   15d2c:	ldr	r3, [r3, r2]
   15d30:	ldr	r0, [r0, #204]	; 0xcc
   15d34:	ldr	r3, [r3]
   15d38:	cmp	r3, r0
   15d3c:	cmpne	r0, #0
   15d40:	beq	15d48 <__flatcc_fb_end_output_c@@Base+0x30>
   15d44:	bl	140d4 <fclose@plt>
   15d48:	mov	r3, #0
   15d4c:	str	r3, [r4, #204]	; 0xcc
   15d50:	pop	{r4, pc}
   15d54:	ldrdeq	r5, [r5], -r8
   15d58:	andeq	r0, r0, ip, lsr #1

00015d5c <__flatcc_fb_init_output_c@@Base>:
   15d5c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d60:	mov	r7, r1
   15d64:	ldr	r3, [r1, #128]	; 0x80
   15d68:	ldr	r9, [pc, #472]	; 15f48 <__flatcc_fb_init_output_c@@Base+0x1ec>
   15d6c:	ldr	sl, [pc, #472]	; 15f4c <__flatcc_fb_init_output_c@@Base+0x1f0>
   15d70:	cmp	r3, #0
   15d74:	mov	r6, r0
   15d78:	add	r9, pc, r9
   15d7c:	add	sl, pc, sl
   15d80:	ldreq	sl, [pc, #456]	; 15f50 <__flatcc_fb_init_output_c@@Base+0x1f4>
   15d84:	addeq	sl, pc, sl
   15d88:	ldr	r8, [r7, #216]	; 0xd8
   15d8c:	cmp	r8, #0
   15d90:	beq	15ec4 <__flatcc_fb_init_output_c@@Base+0x168>
   15d94:	mov	r2, #232	; 0xe8
   15d98:	mov	r1, #0
   15d9c:	mov	r0, r6
   15da0:	bl	140a4 <memset@plt>
   15da4:	ldr	r4, [r7, #196]	; 0xc4
   15da8:	str	r7, [r6, #212]	; 0xd4
   15dac:	cmp	r4, #0
   15db0:	beq	15ed8 <__flatcc_fb_init_output_c@@Base+0x17c>
   15db4:	mov	r0, r4
   15db8:	bl	14074 <strlen@plt>
   15dbc:	cmp	r0, #100	; 0x64
   15dc0:	mov	fp, r0
   15dc4:	bhi	15f20 <__flatcc_fb_init_output_c@@Base+0x1c4>
   15dc8:	mov	r1, r4
   15dcc:	mov	r2, #100	; 0x64
   15dd0:	mov	r0, r6
   15dd4:	bl	140b0 <strncpy@plt>
   15dd8:	mov	r3, #0
   15ddc:	cmp	fp, #0
   15de0:	strb	r3, [r6, #100]	; 0x64
   15de4:	bne	15e90 <__flatcc_fb_init_output_c@@Base+0x134>
   15de8:	ldrb	r4, [r6]
   15dec:	add	r5, r6, #102	; 0x66
   15df0:	cmp	r4, #0
   15df4:	beq	15ed0 <__flatcc_fb_init_output_c@@Base+0x174>
   15df8:	bl	14050 <__ctype_toupper_loc@plt>
   15dfc:	mov	r3, r5
   15e00:	mov	r2, r6
   15e04:	ldr	r1, [r0]
   15e08:	ldr	r1, [r1, r4, lsl #2]
   15e0c:	strb	r1, [r3], #1
   15e10:	ldrb	r4, [r2, #1]!
   15e14:	cmp	r4, #0
   15e18:	bne	15e04 <__flatcc_fb_init_output_c@@Base+0xa8>
   15e1c:	add	fp, r6, fp
   15e20:	mov	r2, #0
   15e24:	strb	r2, [r3]
   15e28:	strb	r2, [fp, #102]	; 0x66
   15e2c:	ldr	r4, [r7, #108]	; 0x6c
   15e30:	ldr	r3, [r7, #176]	; 0xb0
   15e34:	cmp	r4, r2
   15e38:	str	r3, [r6, #224]	; 0xe0
   15e3c:	bne	15ea8 <__flatcc_fb_init_output_c@@Base+0x14c>
   15e40:	ldr	r3, [r6, #212]	; 0xd4
   15e44:	ldr	r1, [r3, #124]	; 0x7c
   15e48:	cmp	r1, #0
   15e4c:	beq	15e88 <__flatcc_fb_init_output_c@@Base+0x12c>
   15e50:	ldr	r2, [pc, #252]	; 15f54 <__flatcc_fb_init_output_c@@Base+0x1f8>
   15e54:	mov	r0, r8
   15e58:	mov	r3, #1
   15e5c:	add	r2, pc, r2
   15e60:	bl	2dad4 <__flatcc_fb_create_join_path@@Base>
   15e64:	subs	r5, r0, #0
   15e68:	beq	15f44 <__flatcc_fb_init_output_c@@Base+0x1e8>
   15e6c:	mov	r1, sl
   15e70:	bl	13fc0 <fopen@plt>
   15e74:	cmp	r0, #0
   15e78:	str	r0, [r6, #204]	; 0xcc
   15e7c:	beq	15efc <__flatcc_fb_init_output_c@@Base+0x1a0>
   15e80:	mov	r0, r5
   15e84:	bl	13fcc <free@plt>
   15e88:	mov	r0, r4
   15e8c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e90:	add	r1, fp, #1
   15e94:	mov	r2, #95	; 0x5f
   15e98:	mov	r3, #0
   15e9c:	strb	r2, [r6, fp]
   15ea0:	strb	r3, [r6, r1]
   15ea4:	b	15de8 <__flatcc_fb_init_output_c@@Base+0x8c>
   15ea8:	ldr	r3, [pc, #168]	; 15f58 <__flatcc_fb_init_output_c@@Base+0x1fc>
   15eac:	mov	r4, r2
   15eb0:	mov	r0, r4
   15eb4:	ldr	r3, [r9, r3]
   15eb8:	ldr	r3, [r3]
   15ebc:	str	r3, [r6, #204]	; 0xcc
   15ec0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ec4:	ldr	r8, [pc, #144]	; 15f5c <__flatcc_fb_init_output_c@@Base+0x200>
   15ec8:	add	r8, pc, r8
   15ecc:	b	15d94 <__flatcc_fb_init_output_c@@Base+0x38>
   15ed0:	mov	r3, r5
   15ed4:	b	15e1c <__flatcc_fb_init_output_c@@Base+0xc0>
   15ed8:	ldr	r1, [pc, #128]	; 15f60 <__flatcc_fb_init_output_c@@Base+0x204>
   15edc:	mov	r2, #100	; 0x64
   15ee0:	add	r1, pc, r1
   15ee4:	mov	r0, r6
   15ee8:	bl	140b0 <strncpy@plt>
   15eec:	mov	fp, #11
   15ef0:	strb	r4, [r6, #100]	; 0x64
   15ef4:	mov	r1, #12
   15ef8:	b	15e94 <__flatcc_fb_init_output_c@@Base+0x138>
   15efc:	ldr	r3, [pc, #96]	; 15f64 <__flatcc_fb_init_output_c@@Base+0x208>
   15f00:	ldr	r1, [pc, #96]	; 15f68 <__flatcc_fb_init_output_c@@Base+0x20c>
   15f04:	mov	r2, r5
   15f08:	ldr	r3, [r9, r3]
   15f0c:	add	r1, pc, r1
   15f10:	mvn	r4, #0
   15f14:	ldr	r0, [r3]
   15f18:	bl	1408c <fprintf@plt>
   15f1c:	b	15e80 <__flatcc_fb_init_output_c@@Base+0x124>
   15f20:	ldr	r3, [pc, #60]	; 15f64 <__flatcc_fb_init_output_c@@Base+0x208>
   15f24:	ldr	r1, [pc, #64]	; 15f6c <__flatcc_fb_init_output_c@@Base+0x210>
   15f28:	mov	r2, #100	; 0x64
   15f2c:	ldr	r3, [r9, r3]
   15f30:	add	r1, pc, r1
   15f34:	mvn	r4, #0
   15f38:	ldr	r0, [r3]
   15f3c:	bl	1408c <fprintf@plt>
   15f40:	b	15e88 <__flatcc_fb_init_output_c@@Base+0x12c>
   15f44:	bl	14150 <__assert_fail@plt+0x10>
   15f48:	andeq	r5, r5, r0, lsl #5
   15f4c:	andeq	sl, r2, ip, ror #23
   15f50:	andeq	sl, r2, r4, lsl #23
   15f54:	andeq	r4, r3, r4, ror #25
   15f58:	andeq	r0, r0, ip, lsr #1
   15f5c:	andeq	r4, r3, r8, ror ip
   15f60:	andeq	sl, r2, r4, asr #21
   15f64:	andeq	r0, r0, r0, lsr #1
   15f68:	andeq	sl, r2, r8, lsr sl
   15f6c:	andeq	sl, r2, ip, lsr sl

00015f70 <__flatcc_fb_gen_c_includes@@Base>:
   15f70:	ldr	ip, [r0, #208]	; 0xd0
   15f74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f78:	sub	sp, sp, #36	; 0x24
   15f7c:	add	r7, sp, #16
   15f80:	mov	r3, #0
   15f84:	mov	r6, r0
   15f88:	ldr	r0, [ip, #164]	; 0xa4
   15f8c:	ldr	r4, [ip]
   15f90:	str	r1, [sp, #8]
   15f94:	str	r3, [r7, #4]
   15f98:	mov	fp, r2
   15f9c:	str	r3, [sp, #16]
   15fa0:	str	r3, [r7, #8]
   15fa4:	str	r3, [r7, #12]
   15fa8:	bl	2d90c <__flatcc_fb_copy_path@@Base>
   15fac:	mov	r2, #1
   15fb0:	mov	r1, r0
   15fb4:	mov	r0, r7
   15fb8:	bl	2b478 <str_set_insert_item@@Base>
   15fbc:	cmp	r4, #0
   15fc0:	beq	1605c <__flatcc_fb_gen_c_includes@@Base+0xec>
   15fc4:	ldr	r3, [pc, #220]	; 160a8 <__flatcc_fb_gen_c_includes@@Base+0x138>
   15fc8:	mov	r8, #1
   15fcc:	add	r3, pc, r3
   15fd0:	str	r3, [sp, #12]
   15fd4:	ldr	r3, [r6, #212]	; 0xd4
   15fd8:	ldr	r1, [r4, #12]
   15fdc:	ldr	r0, [r4, #8]
   15fe0:	ldr	r2, [r3, #96]	; 0x60
   15fe4:	bl	2dd50 <__flatcc_fb_create_basename@@Base>
   15fe8:	subs	r5, r0, #0
   15fec:	beq	160a4 <__flatcc_fb_gen_c_includes@@Base+0x134>
   15ff0:	ldr	r4, [r4]
   15ff4:	bl	2d90c <__flatcc_fb_copy_path@@Base>
   15ff8:	subs	r9, r0, #0
   15ffc:	beq	160a4 <__flatcc_fb_gen_c_includes@@Base+0x134>
   16000:	ldrb	sl, [r9]
   16004:	cmp	sl, #0
   16008:	beq	1602c <__flatcc_fb_gen_c_includes@@Base+0xbc>
   1600c:	bl	14050 <__ctype_toupper_loc@plt>
   16010:	mov	r1, r9
   16014:	ldr	ip, [r0]
   16018:	ldr	r2, [ip, sl, lsl #2]
   1601c:	strb	r2, [r1]
   16020:	ldrb	sl, [r1, #1]!
   16024:	cmp	sl, #0
   16028:	bne	16014 <__flatcc_fb_gen_c_includes@@Base+0xa4>
   1602c:	mov	r2, r8
   16030:	mov	r1, r9
   16034:	mov	r0, r7
   16038:	bl	2b478 <str_set_insert_item@@Base>
   1603c:	cmp	r0, #0
   16040:	beq	16078 <__flatcc_fb_gen_c_includes@@Base+0x108>
   16044:	mov	r0, r9
   16048:	bl	13fcc <free@plt>
   1604c:	mov	r0, r5
   16050:	bl	13fcc <free@plt>
   16054:	cmp	r4, #0
   16058:	bne	15fd4 <__flatcc_fb_gen_c_includes@@Base+0x64>
   1605c:	ldr	r1, [pc, #72]	; 160ac <__flatcc_fb_gen_c_includes@@Base+0x13c>
   16060:	mov	r0, r7
   16064:	mov	r2, #0
   16068:	add	r1, pc, r1
   1606c:	bl	2b3b0 <str_set_destroy@@Base>
   16070:	add	sp, sp, #36	; 0x24
   16074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16078:	ldr	r3, [sp, #8]
   1607c:	ldr	r0, [r6, #204]	; 0xcc
   16080:	mov	r2, r9
   16084:	str	r3, [sp, #4]
   16088:	str	r5, [sp]
   1608c:	mov	r3, fp
   16090:	ldr	r1, [sp, #12]
   16094:	bl	1408c <fprintf@plt>
   16098:	mov	r0, r5
   1609c:	bl	13fcc <free@plt>
   160a0:	b	16054 <__flatcc_fb_gen_c_includes@@Base+0xe4>
   160a4:	bl	14150 <__assert_fail@plt+0x10>
   160a8:	andeq	sl, r2, r4, ror #19
   160ac:			; <UNDEFINED> instruction: 0xfffffb68

000160b0 <__flatcc_fb_copy_scope@@Base>:
   160b0:	ldr	r3, [r0]
   160b4:	push	{r4, r5, r6, r7, r8, lr}
   160b8:	cmp	r3, #0
   160bc:	ldr	r6, [r0, #24]
   160c0:	mov	ip, r6
   160c4:	beq	160e4 <__flatcc_fb_copy_scope@@Base+0x34>
   160c8:	ldr	r2, [r3, #4]
   160cc:	ldr	r3, [r3]
   160d0:	ldr	r2, [r2, #4]
   160d4:	cmp	r3, #0
   160d8:	add	r2, r2, #1
   160dc:	add	ip, ip, r2
   160e0:	bne	160c8 <__flatcc_fb_copy_scope@@Base+0x18>
   160e4:	cmp	ip, #101	; 0x65
   160e8:	bhi	16150 <__flatcc_fb_copy_scope@@Base+0xa0>
   160ec:	mov	r7, r1
   160f0:	mov	r4, r0
   160f4:	ldr	r1, [r0, #20]
   160f8:	mov	r2, r6
   160fc:	mov	r0, r7
   16100:	bl	13fd8 <memcpy@plt>
   16104:	ldr	r5, [r4]
   16108:	cmp	r5, #0
   1610c:	beq	16140 <__flatcc_fb_copy_scope@@Base+0x90>
   16110:	mov	r8, #95	; 0x5f
   16114:	ldr	r3, [r5, #4]
   16118:	add	r0, r7, r6
   1611c:	ldm	r3, {r1, r4}
   16120:	mov	r2, r4
   16124:	add	r4, r4, r6
   16128:	bl	13fd8 <memcpy@plt>
   1612c:	strb	r8, [r7, r4]
   16130:	ldr	r5, [r5]
   16134:	add	r6, r4, #1
   16138:	cmp	r5, #0
   1613c:	bne	16114 <__flatcc_fb_copy_scope@@Base+0x64>
   16140:	mov	r3, #0
   16144:	mov	r0, r6
   16148:	strb	r3, [r7, r6]
   1614c:	pop	{r4, r5, r6, r7, r8, pc}
   16150:	mov	r3, #0
   16154:	strb	r3, [r1]
   16158:	mvn	r0, #0
   1615c:	pop	{r4, r5, r6, r7, r8, pc}

00016160 <__flatcc_fb_scoped_symbol_name@@Base>:
   16160:	ldr	r3, [r2, #204]	; 0xcc
   16164:	push	{r4, r5, r6, lr}
   16168:	cmp	r3, r0
   1616c:	ldr	r6, [pc, #180]	; 16228 <__flatcc_fb_scoped_symbol_name@@Base+0xc8>
   16170:	mov	r4, r2
   16174:	ldr	r5, [r1, #4]
   16178:	add	r6, pc, r6
   1617c:	beq	16220 <__flatcc_fb_scoped_symbol_name@@Base+0xc0>
   16180:	mov	r1, r2
   16184:	bl	160b0 <__flatcc_fb_copy_scope@@Base>
   16188:	cmp	r0, #0
   1618c:	str	r0, [r4, #208]	; 0xd0
   16190:	blt	161f8 <__flatcc_fb_scoped_symbol_name@@Base+0x98>
   16194:	ldr	r2, [r5, #4]
   16198:	add	r3, r2, r0
   1619c:	cmp	r3, #203	; 0xcb
   161a0:	str	r2, [r4, #212]	; 0xd4
   161a4:	str	r3, [r4, #216]	; 0xd8
   161a8:	ble	161dc <__flatcc_fb_scoped_symbol_name@@Base+0x7c>
   161ac:	ldr	r1, [pc, #120]	; 1622c <__flatcc_fb_scoped_symbol_name@@Base+0xcc>
   161b0:	ldr	r3, [r5]
   161b4:	ldr	r0, [r6, r1]
   161b8:	ldr	r1, [pc, #112]	; 16230 <__flatcc_fb_scoped_symbol_name@@Base+0xd0>
   161bc:	ldr	r0, [r0]
   161c0:	add	r1, pc, r1
   161c4:	bl	1408c <fprintf@plt>
   161c8:	ldr	r0, [r4, #208]	; 0xd0
   161cc:	mov	r3, #203	; 0xcb
   161d0:	sub	r2, r3, r0
   161d4:	str	r2, [r4, #212]	; 0xd4
   161d8:	str	r3, [r4, #216]	; 0xd8
   161dc:	ldr	r1, [r5]
   161e0:	add	r0, r4, r0
   161e4:	bl	13fd8 <memcpy@plt>
   161e8:	ldr	r3, [r4, #216]	; 0xd8
   161ec:	mov	r2, #0
   161f0:	strb	r2, [r4, r3]
   161f4:	pop	{r4, r5, r6, pc}
   161f8:	ldr	r3, [pc, #44]	; 1622c <__flatcc_fb_scoped_symbol_name@@Base+0xcc>
   161fc:	mov	r2, #0
   16200:	str	r2, [r4, #208]	; 0xd0
   16204:	ldr	r3, [r6, r3]
   16208:	ldr	r0, [pc, #36]	; 16234 <__flatcc_fb_scoped_symbol_name@@Base+0xd4>
   1620c:	mov	r2, #28
   16210:	mov	r1, #1
   16214:	ldr	r3, [r3]
   16218:	add	r0, pc, r0
   1621c:	bl	14014 <fwrite@plt>
   16220:	ldr	r0, [r4, #208]	; 0xd0
   16224:	b	16194 <__flatcc_fb_scoped_symbol_name@@Base+0x34>
   16228:	andeq	r4, r5, r0, lsl #29
   1622c:	andeq	r0, r0, r0, lsr #1
   16230:	andeq	sl, r2, r8, lsr r8
   16234:	andeq	sl, r2, r0, asr #15

00016238 <__flatcc_fb_codegen_common_c@@Base>:
   16238:	push	{r4, r5, r6, lr}
   1623c:	mov	r4, r0
   16240:	bl	14074 <strlen@plt>
   16244:	ldr	r3, [r4, #212]	; 0xd4
   16248:	ldr	r2, [r3, #144]	; 0x90
   1624c:	cmp	r2, #0
   16250:	sub	r6, r0, #1
   16254:	bne	162a4 <__flatcc_fb_codegen_common_c@@Base+0x6c>
   16258:	ldr	r5, [r3, #148]	; 0x94
   1625c:	cmp	r5, #0
   16260:	bne	1626c <__flatcc_fb_codegen_common_c@@Base+0x34>
   16264:	mov	r0, r5
   16268:	pop	{r4, r5, r6, pc}
   1626c:	ldr	r3, [pc, #124]	; 162f0 <__flatcc_fb_codegen_common_c@@Base+0xb8>
   16270:	mov	r2, r6
   16274:	add	r3, pc, r3
   16278:	mov	r1, r4
   1627c:	mov	r0, r4
   16280:	bl	15be0 <__flatcc_fb_open_output_file@@Base>
   16284:	subs	r5, r0, #0
   16288:	bne	162e8 <__flatcc_fb_codegen_common_c@@Base+0xb0>
   1628c:	mov	r0, r4
   16290:	bl	1f430 <__flatcc_fb_gen_common_c_builder_header@@Base>
   16294:	mov	r0, r4
   16298:	bl	15cd8 <__flatcc_fb_close_output_file@@Base>
   1629c:	mov	r0, r5
   162a0:	pop	{r4, r5, r6, pc}
   162a4:	ldr	r3, [pc, #72]	; 162f4 <__flatcc_fb_codegen_common_c@@Base+0xbc>
   162a8:	mov	r2, r6
   162ac:	add	r3, pc, r3
   162b0:	mov	r1, r4
   162b4:	mov	r0, r4
   162b8:	bl	15be0 <__flatcc_fb_open_output_file@@Base>
   162bc:	cmp	r0, #0
   162c0:	bne	162e8 <__flatcc_fb_codegen_common_c@@Base+0xb0>
   162c4:	mov	r0, r4
   162c8:	bl	1a588 <__flatcc_fb_gen_common_c_header@@Base>
   162cc:	mov	r5, r0
   162d0:	mov	r0, r4
   162d4:	bl	15cd8 <__flatcc_fb_close_output_file@@Base>
   162d8:	cmp	r5, #0
   162dc:	bne	16264 <__flatcc_fb_codegen_common_c@@Base+0x2c>
   162e0:	ldr	r3, [r4, #212]	; 0xd4
   162e4:	b	16258 <__flatcc_fb_codegen_common_c@@Base+0x20>
   162e8:	mvn	r5, #0
   162ec:	b	16264 <__flatcc_fb_codegen_common_c@@Base+0x2c>
   162f0:	andeq	sl, r2, r0, asr #15
   162f4:	andeq	sl, r2, r4, ror r7

000162f8 <__flatcc_fb_codegen_c@@Base>:
   162f8:	mov	r2, #0
   162fc:	push	{r4, r5, r6, lr}
   16300:	mov	r4, r0
   16304:	str	r1, [r0, #208]	; 0xd0
   16308:	ldr	r0, [r1, #60]	; 0x3c
   1630c:	mov	r1, r2
   16310:	bl	2d13c <fb_scope_table_find@@Base>
   16314:	ldr	r3, [r4, #208]	; 0xd0
   16318:	ldr	r5, [r3, #160]	; 0xa0
   1631c:	str	r0, [r4, #216]	; 0xd8
   16320:	mov	r0, r5
   16324:	bl	14074 <strlen@plt>
   16328:	ldr	r3, [r4, #212]	; 0xd4
   1632c:	ldr	r2, [r3, #152]	; 0x98
   16330:	cmp	r2, #0
   16334:	mov	r6, r0
   16338:	bne	16374 <__flatcc_fb_codegen_c@@Base+0x7c>
   1633c:	ldr	r2, [r3, #156]	; 0x9c
   16340:	cmp	r2, #0
   16344:	bne	163bc <__flatcc_fb_codegen_c@@Base+0xc4>
   16348:	ldr	r2, [r3, #160]	; 0xa0
   1634c:	cmp	r2, #0
   16350:	bne	16400 <__flatcc_fb_codegen_c@@Base+0x108>
   16354:	ldr	r2, [r3, #164]	; 0xa4
   16358:	cmp	r2, #0
   1635c:	bne	16444 <__flatcc_fb_codegen_c@@Base+0x14c>
   16360:	ldr	r5, [r3, #168]	; 0xa8
   16364:	cmp	r5, #0
   16368:	bne	16488 <__flatcc_fb_codegen_c@@Base+0x190>
   1636c:	mov	r0, r5
   16370:	pop	{r4, r5, r6, pc}
   16374:	ldr	r3, [pc, #340]	; 164d0 <__flatcc_fb_codegen_c@@Base+0x1d8>
   16378:	mov	r2, r0
   1637c:	mov	r1, r5
   16380:	add	r3, pc, r3
   16384:	mov	r0, r4
   16388:	bl	15be0 <__flatcc_fb_open_output_file@@Base>
   1638c:	cmp	r0, #0
   16390:	bne	164c8 <__flatcc_fb_codegen_c@@Base+0x1d0>
   16394:	mov	r0, r4
   16398:	bl	1b32c <__flatcc_fb_gen_c_reader@@Base>
   1639c:	subs	r5, r0, #0
   163a0:	bne	1636c <__flatcc_fb_codegen_c@@Base+0x74>
   163a4:	mov	r0, r4
   163a8:	bl	15cd8 <__flatcc_fb_close_output_file@@Base>
   163ac:	ldr	r3, [r4, #212]	; 0xd4
   163b0:	ldr	r2, [r3, #156]	; 0x9c
   163b4:	cmp	r2, #0
   163b8:	beq	16348 <__flatcc_fb_codegen_c@@Base+0x50>
   163bc:	ldr	r1, [r4, #208]	; 0xd0
   163c0:	ldr	r3, [pc, #268]	; 164d4 <__flatcc_fb_codegen_c@@Base+0x1dc>
   163c4:	mov	r2, r6
   163c8:	add	r3, pc, r3
   163cc:	ldr	r1, [r1, #160]	; 0xa0
   163d0:	mov	r0, r4
   163d4:	bl	15be0 <__flatcc_fb_open_output_file@@Base>
   163d8:	cmp	r0, #0
   163dc:	bne	164c8 <__flatcc_fb_codegen_c@@Base+0x1d0>
   163e0:	mov	r0, r4
   163e4:	bl	1fe60 <__flatcc_fb_gen_c_builder@@Base>
   163e8:	subs	r5, r0, #0
   163ec:	bne	1636c <__flatcc_fb_codegen_c@@Base+0x74>
   163f0:	mov	r0, r4
   163f4:	bl	15cd8 <__flatcc_fb_close_output_file@@Base>
   163f8:	ldr	r3, [r4, #212]	; 0xd4
   163fc:	b	16348 <__flatcc_fb_codegen_c@@Base+0x50>
   16400:	ldr	r1, [r4, #208]	; 0xd0
   16404:	ldr	r3, [pc, #204]	; 164d8 <__flatcc_fb_codegen_c@@Base+0x1e0>
   16408:	mov	r2, r6
   1640c:	add	r3, pc, r3
   16410:	ldr	r1, [r1, #160]	; 0xa0
   16414:	mov	r0, r4
   16418:	bl	15be0 <__flatcc_fb_open_output_file@@Base>
   1641c:	cmp	r0, #0
   16420:	bne	164c8 <__flatcc_fb_codegen_c@@Base+0x1d0>
   16424:	mov	r0, r4
   16428:	bl	20f60 <__flatcc_fb_gen_c_verifier@@Base>
   1642c:	subs	r5, r0, #0
   16430:	bne	1636c <__flatcc_fb_codegen_c@@Base+0x74>
   16434:	mov	r0, r4
   16438:	bl	15cd8 <__flatcc_fb_close_output_file@@Base>
   1643c:	ldr	r3, [r4, #212]	; 0xd4
   16440:	b	16354 <__flatcc_fb_codegen_c@@Base+0x5c>
   16444:	ldr	r1, [r4, #208]	; 0xd0
   16448:	ldr	r3, [pc, #140]	; 164dc <__flatcc_fb_codegen_c@@Base+0x1e4>
   1644c:	mov	r2, r6
   16450:	add	r3, pc, r3
   16454:	ldr	r1, [r1, #160]	; 0xa0
   16458:	mov	r0, r4
   1645c:	bl	15be0 <__flatcc_fb_open_output_file@@Base>
   16460:	cmp	r0, #0
   16464:	bne	164c8 <__flatcc_fb_codegen_c@@Base+0x1d0>
   16468:	mov	r0, r4
   1646c:	bl	24f40 <__flatcc_fb_gen_c_json_parser@@Base>
   16470:	subs	r5, r0, #0
   16474:	bne	1636c <__flatcc_fb_codegen_c@@Base+0x74>
   16478:	mov	r0, r4
   1647c:	bl	15cd8 <__flatcc_fb_close_output_file@@Base>
   16480:	ldr	r3, [r4, #212]	; 0xd4
   16484:	b	16360 <__flatcc_fb_codegen_c@@Base+0x68>
   16488:	ldr	r1, [r4, #208]	; 0xd0
   1648c:	ldr	r3, [pc, #76]	; 164e0 <__flatcc_fb_codegen_c@@Base+0x1e8>
   16490:	mov	r2, r6
   16494:	add	r3, pc, r3
   16498:	ldr	r1, [r1, #160]	; 0xa0
   1649c:	mov	r0, r4
   164a0:	bl	15be0 <__flatcc_fb_open_output_file@@Base>
   164a4:	cmp	r0, #0
   164a8:	bne	164c8 <__flatcc_fb_codegen_c@@Base+0x1d0>
   164ac:	mov	r0, r4
   164b0:	bl	28cd4 <__flatcc_fb_gen_c_json_printer@@Base>
   164b4:	subs	r5, r0, #0
   164b8:	bne	1636c <__flatcc_fb_codegen_c@@Base+0x74>
   164bc:	mov	r0, r4
   164c0:	bl	15cd8 <__flatcc_fb_close_output_file@@Base>
   164c4:	b	1636c <__flatcc_fb_codegen_c@@Base+0x74>
   164c8:	mvn	r5, #0
   164cc:	b	1636c <__flatcc_fb_codegen_c@@Base+0x74>
   164d0:	muleq	r2, ip, r4
   164d4:	andeq	sl, r2, r0, lsl #13
   164d8:	andeq	sl, r2, r8, asr #12
   164dc:	andeq	sl, r2, r0, lsl r6
   164e0:	ldrdeq	sl, [r2], -ip
   164e4:	push	{r4, r5, r6, lr}
   164e8:	sub	sp, sp, #224	; 0xe0
   164ec:	mov	r5, r1
   164f0:	add	r4, sp, #4
   164f4:	mov	r6, r0
   164f8:	mov	r2, #220	; 0xdc
   164fc:	mov	r0, r4
   16500:	mov	r1, #0
   16504:	bl	140a4 <memset@plt>
   16508:	ldrh	r3, [r5, #8]
   1650c:	cmp	r3, #1
   16510:	bhi	16624 <__flatcc_fb_codegen_c@@Base+0x32c>
   16514:	mov	r2, r4
   16518:	mov	r1, r5
   1651c:	ldr	r0, [r5, #12]
   16520:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   16524:	ldrh	r3, [r5, #8]
   16528:	cmp	r3, #1
   1652c:	beq	16580 <__flatcc_fb_codegen_c@@Base+0x288>
   16530:	ldr	r1, [pc, #268]	; 16644 <__flatcc_fb_codegen_c@@Base+0x34c>
   16534:	mov	r3, r4
   16538:	mov	r2, r4
   1653c:	add	r1, pc, r1
   16540:	ldr	r0, [r6, #204]	; 0xcc
   16544:	bl	1408c <fprintf@plt>
   16548:	ldr	r1, [pc, #248]	; 16648 <__flatcc_fb_codegen_c@@Base+0x350>
   1654c:	mov	r3, r4
   16550:	mov	r2, r6
   16554:	add	r1, pc, r1
   16558:	ldr	r0, [r6, #204]	; 0xcc
   1655c:	bl	1408c <fprintf@plt>
   16560:	ldr	r1, [pc, #228]	; 1664c <__flatcc_fb_codegen_c@@Base+0x354>
   16564:	mov	r3, r4
   16568:	mov	r2, r6
   1656c:	ldr	r0, [r6, #204]	; 0xcc
   16570:	add	r1, pc, r1
   16574:	bl	1408c <fprintf@plt>
   16578:	add	sp, sp, #224	; 0xe0
   1657c:	pop	{r4, r5, r6, pc}
   16580:	ldrd	r2, [r5, #112]	; 0x70
   16584:	orrs	r3, r2, r3
   16588:	bne	16608 <__flatcc_fb_codegen_c@@Base+0x310>
   1658c:	ldr	r1, [pc, #188]	; 16650 <__flatcc_fb_codegen_c@@Base+0x358>
   16590:	mov	r2, r4
   16594:	add	r1, pc, r1
   16598:	ldr	r0, [r6, #204]	; 0xcc
   1659c:	bl	1408c <fprintf@plt>
   165a0:	ldr	r1, [pc, #172]	; 16654 <__flatcc_fb_codegen_c@@Base+0x35c>
   165a4:	mov	r3, r4
   165a8:	mov	r2, r4
   165ac:	add	r1, pc, r1
   165b0:	ldr	r0, [r6, #204]	; 0xcc
   165b4:	bl	1408c <fprintf@plt>
   165b8:	ldr	r1, [pc, #152]	; 16658 <__flatcc_fb_codegen_c@@Base+0x360>
   165bc:	mov	r3, r4
   165c0:	mov	r2, r4
   165c4:	add	r1, pc, r1
   165c8:	ldr	r0, [r6, #204]	; 0xcc
   165cc:	bl	1408c <fprintf@plt>
   165d0:	ldr	r1, [pc, #132]	; 1665c <__flatcc_fb_codegen_c@@Base+0x364>
   165d4:	mov	r3, r4
   165d8:	mov	r2, r4
   165dc:	add	r1, pc, r1
   165e0:	ldr	r0, [r6, #204]	; 0xcc
   165e4:	bl	1408c <fprintf@plt>
   165e8:	ldr	r1, [pc, #112]	; 16660 <__flatcc_fb_codegen_c@@Base+0x368>
   165ec:	mov	r3, r4
   165f0:	mov	r2, r4
   165f4:	ldr	r0, [r6, #204]	; 0xcc
   165f8:	add	r1, pc, r1
   165fc:	bl	1408c <fprintf@plt>
   16600:	add	sp, sp, #224	; 0xe0
   16604:	pop	{r4, r5, r6, pc}
   16608:	ldr	r1, [pc, #84]	; 16664 <__flatcc_fb_codegen_c@@Base+0x36c>
   1660c:	mov	r3, r4
   16610:	mov	r2, r4
   16614:	add	r1, pc, r1
   16618:	ldr	r0, [r6, #204]	; 0xcc
   1661c:	bl	1408c <fprintf@plt>
   16620:	b	165a0 <__flatcc_fb_codegen_c@@Base+0x2a8>
   16624:	ldr	r3, [pc, #60]	; 16668 <__flatcc_fb_codegen_c@@Base+0x370>
   16628:	ldr	r1, [pc, #60]	; 1666c <__flatcc_fb_codegen_c@@Base+0x374>
   1662c:	ldr	r0, [pc, #60]	; 16670 <__flatcc_fb_codegen_c@@Base+0x378>
   16630:	add	r3, pc, r3
   16634:	ldr	r2, [pc, #56]	; 16674 <__flatcc_fb_codegen_c@@Base+0x37c>
   16638:	add	r1, pc, r1
   1663c:	add	r0, pc, r0
   16640:	bl	14140 <__assert_fail@plt>
   16644:	andeq	sl, r2, r0, lsl #15
   16648:	muleq	r2, r4, r7
   1664c:	andeq	sl, r2, r0, lsr #15
   16650:	andeq	sl, r2, r8, asr r6
   16654:	andeq	sl, r2, r4, lsl #13
   16658:	muleq	r2, r0, r6
   1665c:	muleq	r2, ip, r6
   16660:	andeq	sl, r2, r0, lsr #13
   16664:	andeq	sl, r2, r0, lsl #12
   16668:	andeq	sl, r2, r0, asr r4
   1666c:	andeq	sl, r2, r8, lsl #10
   16670:	andeq	sl, r2, ip, ror #10
   16674:	andeq	r0, r0, pc, asr r3
   16678:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1667c:	sub	sp, sp, #372	; 0x174
   16680:	mov	r5, r1
   16684:	add	r9, sp, #148	; 0x94
   16688:	str	r1, [sp, #20]
   1668c:	mov	r2, #220	; 0xdc
   16690:	mov	r4, r0
   16694:	mov	r1, #0
   16698:	mov	r0, r9
   1669c:	bl	140a4 <memset@plt>
   166a0:	ldrh	r3, [r5, #8]
   166a4:	ldr	r2, [pc, #3084]	; 172b8 <__flatcc_fb_codegen_c@@Base+0xfc0>
   166a8:	str	r3, [sp, #36]	; 0x24
   166ac:	sub	r3, r3, #3
   166b0:	add	r2, pc, r2
   166b4:	cmp	r3, #1
   166b8:	str	r2, [sp, #44]	; 0x2c
   166bc:	bhi	17294 <__flatcc_fb_codegen_c@@Base+0xf9c>
   166c0:	ldr	r3, [sp, #20]
   166c4:	ldrh	r3, [r3, #48]	; 0x30
   166c8:	cmp	r3, #8
   166cc:	bne	17270 <__flatcc_fb_codegen_c@@Base+0xf78>
   166d0:	ldr	r3, [sp, #20]
   166d4:	ldr	r3, [r3, #40]	; 0x28
   166d8:	cmp	r3, #5
   166dc:	beq	1671c <__flatcc_fb_codegen_c@@Base+0x424>
   166e0:	sub	r3, r3, #1
   166e4:	cmp	r3, #10
   166e8:	addls	pc, pc, r3, lsl #2
   166ec:	b	17058 <__flatcc_fb_codegen_c@@Base+0xd60>
   166f0:	b	16e8c <__flatcc_fb_codegen_c@@Base+0xb94>
   166f4:	b	16e70 <__flatcc_fb_codegen_c@@Base+0xb78>
   166f8:	b	16ea8 <__flatcc_fb_codegen_c@@Base+0xbb0>
   166fc:	b	16e1c <__flatcc_fb_codegen_c@@Base+0xb24>
   16700:	b	17058 <__flatcc_fb_codegen_c@@Base+0xd60>
   16704:	b	16e54 <__flatcc_fb_codegen_c@@Base+0xb5c>
   16708:	b	16dac <__flatcc_fb_codegen_c@@Base+0xab4>
   1670c:	b	16dc8 <__flatcc_fb_codegen_c@@Base+0xad0>
   16710:	b	16de4 <__flatcc_fb_codegen_c@@Base+0xaec>
   16714:	b	16e00 <__flatcc_fb_codegen_c@@Base+0xb08>
   16718:	b	16e38 <__flatcc_fb_codegen_c@@Base+0xb40>
   1671c:	ldr	r3, [pc, #2968]	; 172bc <__flatcc_fb_codegen_c@@Base+0xfc4>
   16720:	str	r4, [sp, #24]
   16724:	add	r3, pc, r3
   16728:	str	r3, [sp, #16]
   1672c:	ldr	r3, [sp, #20]
   16730:	ldr	r2, [sp, #36]	; 0x24
   16734:	ldr	r5, [sp, #20]
   16738:	ldr	r3, [r3, #112]	; 0x70
   1673c:	cmp	r2, #3
   16740:	mov	r1, r5
   16744:	lsl	r3, r3, #3
   16748:	str	r3, [sp, #32]
   1674c:	mov	r2, r9
   16750:	ldr	r0, [r5, #12]
   16754:	beq	16d8c <__flatcc_fb_codegen_c@@Base+0xa94>
   16758:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   1675c:	ldr	r5, [r5, #32]
   16760:	cmp	r5, #0
   16764:	beq	170d8 <__flatcc_fb_codegen_c@@Base+0xde0>
   16768:	ldr	r3, [pc, #2896]	; 172c0 <__flatcc_fb_codegen_c@@Base+0xfc8>
   1676c:	add	r3, pc, r3
   16770:	str	r3, [sp, #28]
   16774:	ldr	r2, [pc, #2888]	; 172c4 <__flatcc_fb_codegen_c@@Base+0xfcc>
   16778:	ldr	fp, [pc, #2888]	; 172c8 <__flatcc_fb_codegen_c@@Base+0xfd0>
   1677c:	ldr	sl, [pc, #2888]	; 172cc <__flatcc_fb_codegen_c@@Base+0xfd4>
   16780:	ldr	r8, [pc, #2888]	; 172d0 <__flatcc_fb_codegen_c@@Base+0xfd8>
   16784:	ldr	r7, [pc, #2888]	; 172d4 <__flatcc_fb_codegen_c@@Base+0xfdc>
   16788:	mov	r3, #0
   1678c:	add	r2, pc, r2
   16790:	str	r9, [sp, #40]	; 0x28
   16794:	add	fp, pc, fp
   16798:	add	sl, pc, sl
   1679c:	add	r8, pc, r8
   167a0:	add	r7, pc, r7
   167a4:	mov	r6, r3
   167a8:	mov	r0, #1
   167ac:	mov	r9, r2
   167b0:	ldr	r2, [r5, #4]
   167b4:	ldr	r1, [r2, #8]
   167b8:	cmp	r1, r3
   167bc:	beq	167e0 <__flatcc_fb_codegen_c@@Base+0x4e8>
   167c0:	cmp	r0, #0
   167c4:	movne	r2, r9
   167c8:	moveq	r2, fp
   167cc:	movne	r1, r8
   167d0:	moveq	r1, sl
   167d4:	ldr	r0, [r4, #204]	; 0xcc
   167d8:	bl	1408c <fprintf@plt>
   167dc:	ldr	r2, [r5, #4]
   167e0:	ldr	r3, [r2]
   167e4:	mov	r1, r7
   167e8:	ldr	r2, [r2, #4]
   167ec:	ldr	r0, [r4, #204]	; 0xcc
   167f0:	bl	1408c <fprintf@plt>
   167f4:	ldr	r3, [r5, #4]
   167f8:	ldr	r5, [r5]
   167fc:	mov	r0, r6
   16800:	cmp	r5, #0
   16804:	ldr	r3, [r3, #8]
   16808:	bne	167b0 <__flatcc_fb_codegen_c@@Base+0x4b8>
   1680c:	ldr	r0, [pc, #2756]	; 172d8 <__flatcc_fb_codegen_c@@Base+0xfe0>
   16810:	ldr	r3, [r4, #204]	; 0xcc
   16814:	mov	r2, #4
   16818:	mov	r1, #1
   1681c:	add	r0, pc, r0
   16820:	ldr	r9, [sp, #40]	; 0x28
   16824:	bl	14014 <fwrite@plt>
   16828:	ldr	r5, [sp, #28]
   1682c:	ldr	r1, [pc, #2728]	; 172dc <__flatcc_fb_codegen_c@@Base+0xfe4>
   16830:	ldr	r0, [r4, #204]	; 0xcc
   16834:	ldr	r3, [sp, #16]
   16838:	ldr	r2, [sp, #24]
   1683c:	add	r1, pc, r1
   16840:	str	r5, [sp, #4]
   16844:	str	r9, [sp]
   16848:	bl	1408c <fprintf@plt>
   1684c:	ldr	r3, [sp, #32]
   16850:	ldr	r1, [pc, #2696]	; 172e0 <__flatcc_fb_codegen_c@@Base+0xfe8>
   16854:	ldr	r0, [r4, #204]	; 0xcc
   16858:	mov	r2, r4
   1685c:	str	r3, [sp, #8]
   16860:	str	r5, [sp, #4]
   16864:	mov	r3, r9
   16868:	str	r9, [sp]
   1686c:	add	r1, pc, r1
   16870:	bl	1408c <fprintf@plt>
   16874:	ldr	r3, [sp, #36]	; 0x24
   16878:	cmp	r3, #3
   1687c:	beq	16cd8 <__flatcc_fb_codegen_c@@Base+0x9e0>
   16880:	ldr	r1, [pc, #2652]	; 172e4 <__flatcc_fb_codegen_c@@Base+0xfec>
   16884:	ldr	r0, [r4, #204]	; 0xcc
   16888:	mov	r3, r4
   1688c:	str	r9, [sp]
   16890:	mov	r2, r4
   16894:	add	r1, pc, r1
   16898:	bl	1408c <fprintf@plt>
   1689c:	ldr	r3, [sp, #20]
   168a0:	ldr	r6, [r3, #20]
   168a4:	cmp	r6, #0
   168a8:	beq	17238 <__flatcc_fb_codegen_c@@Base+0xf40>
   168ac:	ldr	r3, [pc, #2612]	; 172e8 <__flatcc_fb_codegen_c@@Base+0xff0>
   168b0:	ldr	sl, [pc, #2612]	; 172ec <__flatcc_fb_codegen_c@@Base+0xff4>
   168b4:	add	r3, pc, r3
   168b8:	str	r3, [sp, #16]
   168bc:	ldr	r3, [pc, #2604]	; 172f0 <__flatcc_fb_codegen_c@@Base+0xff8>
   168c0:	ldr	fp, [pc, #2604]	; 172f4 <__flatcc_fb_codegen_c@@Base+0xffc>
   168c4:	ldr	r5, [pc, #2604]	; 172f8 <__flatcc_fb_codegen_c@@Base+0x1000>
   168c8:	add	r3, pc, r3
   168cc:	ldr	r2, [pc, #2600]	; 172fc <__flatcc_fb_codegen_c@@Base+0x1004>
   168d0:	str	r9, [sp, #40]	; 0x28
   168d4:	add	sl, pc, sl
   168d8:	add	fp, pc, fp
   168dc:	add	r5, pc, r5
   168e0:	mov	r9, r3
   168e4:	add	r2, pc, r2
   168e8:	str	r2, [sp, #32]
   168ec:	ldr	r7, [r6, #68]	; 0x44
   168f0:	cmp	r7, #0
   168f4:	beq	16974 <__flatcc_fb_codegen_c@@Base+0x67c>
   168f8:	mov	r3, #0
   168fc:	mov	r8, r3
   16900:	mov	r0, #1
   16904:	ldr	r2, [r7, #4]
   16908:	ldr	r1, [r2, #8]
   1690c:	cmp	r1, r3
   16910:	beq	16934 <__flatcc_fb_codegen_c@@Base+0x63c>
   16914:	cmp	r0, #0
   16918:	moveq	r2, sl
   1691c:	ldrne	r2, [sp, #16]
   16920:	movne	r1, r9
   16924:	moveq	r1, fp
   16928:	ldr	r0, [r4, #204]	; 0xcc
   1692c:	bl	1408c <fprintf@plt>
   16930:	ldr	r2, [r7, #4]
   16934:	ldr	r3, [r2]
   16938:	mov	r1, r5
   1693c:	ldr	r2, [r2, #4]
   16940:	ldr	r0, [r4, #204]	; 0xcc
   16944:	bl	1408c <fprintf@plt>
   16948:	ldr	r3, [r7, #4]
   1694c:	ldr	r7, [r7]
   16950:	mov	r0, r8
   16954:	cmp	r7, #0
   16958:	ldr	r3, [r3, #8]
   1695c:	bne	16904 <__flatcc_fb_codegen_c@@Base+0x60c>
   16960:	ldr	r3, [r4, #204]	; 0xcc
   16964:	mov	r2, #4
   16968:	mov	r1, #1
   1696c:	ldr	r0, [sp, #32]
   16970:	bl	14014 <fwrite@plt>
   16974:	ldr	r1, [r6, #4]
   16978:	ldrh	r3, [r6, #56]	; 0x38
   1697c:	ldr	r2, [sp, #20]
   16980:	ldr	r0, [r1]
   16984:	sub	r3, r3, #3
   16988:	ldr	r2, [r2, #40]	; 0x28
   1698c:	str	r0, [sp, #24]
   16990:	ldr	r8, [r1, #4]
   16994:	cmp	r3, #3
   16998:	addls	pc, pc, r3, lsl #2
   1699c:	b	16c2c <__flatcc_fb_codegen_c@@Base+0x934>
   169a0:	b	16a4c <__flatcc_fb_codegen_c@@Base+0x754>
   169a4:	b	16a18 <__flatcc_fb_codegen_c@@Base+0x720>
   169a8:	b	169e4 <__flatcc_fb_codegen_c@@Base+0x6ec>
   169ac:	b	169b0 <__flatcc_fb_codegen_c@@Base+0x6b8>
   169b0:	sub	r2, r2, #1
   169b4:	cmp	r2, #8
   169b8:	addls	pc, pc, r2, lsl #2
   169bc:	b	17188 <__flatcc_fb_codegen_c@@Base+0xe90>
   169c0:	b	16f5c <__flatcc_fb_codegen_c@@Base+0xc64>
   169c4:	b	16f14 <__flatcc_fb_codegen_c@@Base+0xc1c>
   169c8:	b	16f8c <__flatcc_fb_codegen_c@@Base+0xc94>
   169cc:	b	16f80 <__flatcc_fb_codegen_c@@Base+0xc88>
   169d0:	b	16f74 <__flatcc_fb_codegen_c@@Base+0xc7c>
   169d4:	b	16f68 <__flatcc_fb_codegen_c@@Base+0xc70>
   169d8:	b	16fb0 <__flatcc_fb_codegen_c@@Base+0xcb8>
   169dc:	b	16fa4 <__flatcc_fb_codegen_c@@Base+0xcac>
   169e0:	b	16f98 <__flatcc_fb_codegen_c@@Base+0xca0>
   169e4:	sub	r2, r2, #1
   169e8:	cmp	r2, #8
   169ec:	addls	pc, pc, r2, lsl #2
   169f0:	b	171e0 <__flatcc_fb_codegen_c@@Base+0xee8>
   169f4:	b	16f50 <__flatcc_fb_codegen_c@@Base+0xc58>
   169f8:	b	16eec <__flatcc_fb_codegen_c@@Base+0xbf4>
   169fc:	b	16f44 <__flatcc_fb_codegen_c@@Base+0xc4c>
   16a00:	b	16f38 <__flatcc_fb_codegen_c@@Base+0xc40>
   16a04:	b	16ff8 <__flatcc_fb_codegen_c@@Base+0xd00>
   16a08:	b	16fec <__flatcc_fb_codegen_c@@Base+0xcf4>
   16a0c:	b	16fe0 <__flatcc_fb_codegen_c@@Base+0xce8>
   16a10:	b	16fd4 <__flatcc_fb_codegen_c@@Base+0xcdc>
   16a14:	b	16fc8 <__flatcc_fb_codegen_c@@Base+0xcd0>
   16a18:	sub	r2, r2, #1
   16a1c:	cmp	r2, #8
   16a20:	addls	pc, pc, r2, lsl #2
   16a24:	b	17130 <__flatcc_fb_codegen_c@@Base+0xe38>
   16a28:	b	16fbc <__flatcc_fb_codegen_c@@Base+0xcc4>
   16a2c:	b	16ec4 <__flatcc_fb_codegen_c@@Base+0xbcc>
   16a30:	b	1704c <__flatcc_fb_codegen_c@@Base+0xd54>
   16a34:	b	17040 <__flatcc_fb_codegen_c@@Base+0xd48>
   16a38:	b	17034 <__flatcc_fb_codegen_c@@Base+0xd3c>
   16a3c:	b	17028 <__flatcc_fb_codegen_c@@Base+0xd30>
   16a40:	b	1701c <__flatcc_fb_codegen_c@@Base+0xd24>
   16a44:	b	17010 <__flatcc_fb_codegen_c@@Base+0xd18>
   16a48:	b	17004 <__flatcc_fb_codegen_c@@Base+0xd0c>
   16a4c:	cmp	r2, #11
   16a50:	beq	170b0 <__flatcc_fb_codegen_c@@Base+0xdb8>
   16a54:	ldr	r1, [pc, #2212]	; 17300 <__flatcc_fb_codegen_c@@Base+0x1008>
   16a58:	add	r7, sp, #48	; 0x30
   16a5c:	mov	r0, r7
   16a60:	ldrd	r2, [r6, #48]	; 0x30
   16a64:	add	r1, pc, r1
   16a68:	bl	140f8 <sprintf@plt>
   16a6c:	ldr	r3, [sp, #28]
   16a70:	ldr	r0, [r4, #204]	; 0xcc
   16a74:	ldr	r2, [sp, #40]	; 0x28
   16a78:	str	r3, [sp, #8]
   16a7c:	ldr	r1, [pc, #2176]	; 17304 <__flatcc_fb_codegen_c@@Base+0x100c>
   16a80:	ldr	r3, [sp, #24]
   16a84:	str	r7, [sp, #12]
   16a88:	str	r3, [sp]
   16a8c:	str	r2, [sp, #4]
   16a90:	mov	r3, r8
   16a94:	add	r1, pc, r1
   16a98:	bl	1408c <fprintf@plt>
   16a9c:	ldr	r6, [r6]
   16aa0:	cmp	r6, #0
   16aa4:	bne	168ec <__flatcc_fb_codegen_c@@Base+0x5f4>
   16aa8:	ldr	r1, [r4, #204]	; 0xcc
   16aac:	mov	r0, #10
   16ab0:	ldr	r9, [sp, #40]	; 0x28
   16ab4:	bl	140ec <fputc@plt>
   16ab8:	ldr	r3, [sp, #36]	; 0x24
   16abc:	cmp	r3, #3
   16ac0:	beq	16cf4 <__flatcc_fb_codegen_c@@Base+0x9fc>
   16ac4:	ldr	r1, [pc, #2108]	; 17308 <__flatcc_fb_codegen_c@@Base+0x1010>
   16ac8:	mov	r3, r9
   16acc:	mov	r2, r9
   16ad0:	add	r1, pc, r1
   16ad4:	ldr	r0, [r4, #204]	; 0xcc
   16ad8:	bl	1408c <fprintf@plt>
   16adc:	ldr	r0, [pc, #2088]	; 1730c <__flatcc_fb_codegen_c@@Base+0x1014>
   16ae0:	ldr	r3, [r4, #204]	; 0xcc
   16ae4:	mov	r2, #20
   16ae8:	mov	r1, #1
   16aec:	add	r0, pc, r0
   16af0:	bl	14014 <fwrite@plt>
   16af4:	ldr	r3, [sp, #20]
   16af8:	ldr	r5, [r3, #20]
   16afc:	cmp	r5, #0
   16b00:	beq	17248 <__flatcc_fb_codegen_c@@Base+0xf50>
   16b04:	ldr	r7, [pc, #2052]	; 17310 <__flatcc_fb_codegen_c@@Base+0x1018>
   16b08:	ldr	r6, [pc, #2052]	; 17314 <__flatcc_fb_codegen_c@@Base+0x101c>
   16b0c:	add	r7, pc, r7
   16b10:	add	r6, pc, r6
   16b14:	ldrh	r2, [r5, #10]
   16b18:	ldr	r3, [r5, #4]
   16b1c:	ldr	r0, [r4, #204]	; 0xcc
   16b20:	tst	r2, #4
   16b24:	ldm	r3, {r2, r3}
   16b28:	movne	r1, r6
   16b2c:	moveq	r1, r7
   16b30:	str	r2, [sp, #8]
   16b34:	stm	sp, {r2, r3}
   16b38:	mov	r2, r9
   16b3c:	bl	1408c <fprintf@plt>
   16b40:	ldr	r5, [r5]
   16b44:	cmp	r5, #0
   16b48:	bne	16b14 <__flatcc_fb_codegen_c@@Base+0x81c>
   16b4c:	ldr	r0, [pc, #1988]	; 17318 <__flatcc_fb_codegen_c@@Base+0x1020>
   16b50:	ldr	r3, [r4, #204]	; 0xcc
   16b54:	mov	r2, #32
   16b58:	mov	r1, #1
   16b5c:	add	r0, pc, r0
   16b60:	bl	14014 <fwrite@plt>
   16b64:	ldr	r1, [r4, #204]	; 0xcc
   16b68:	mov	r0, #10
   16b6c:	bl	140ec <fputc@plt>
   16b70:	ldr	r3, [sp, #36]	; 0x24
   16b74:	cmp	r3, #3
   16b78:	beq	16d58 <__flatcc_fb_codegen_c@@Base+0xa60>
   16b7c:	ldr	r1, [pc, #1944]	; 1731c <__flatcc_fb_codegen_c@@Base+0x1024>
   16b80:	mov	r3, r9
   16b84:	mov	r2, r9
   16b88:	add	r1, pc, r1
   16b8c:	ldr	r0, [r4, #204]	; 0xcc
   16b90:	bl	1408c <fprintf@plt>
   16b94:	ldr	r0, [pc, #1924]	; 17320 <__flatcc_fb_codegen_c@@Base+0x1028>
   16b98:	ldr	r3, [r4, #204]	; 0xcc
   16b9c:	mov	r2, #20
   16ba0:	mov	r1, #1
   16ba4:	add	r0, pc, r0
   16ba8:	bl	14014 <fwrite@plt>
   16bac:	ldr	r3, [sp, #20]
   16bb0:	ldr	r7, [pc, #1900]	; 17324 <__flatcc_fb_codegen_c@@Base+0x102c>
   16bb4:	ldr	r6, [pc, #1900]	; 17328 <__flatcc_fb_codegen_c@@Base+0x1030>
   16bb8:	ldr	r5, [r3, #20]
   16bbc:	add	r7, pc, r7
   16bc0:	cmp	r5, #0
   16bc4:	add	r6, pc, r6
   16bc8:	beq	16c00 <__flatcc_fb_codegen_c@@Base+0x908>
   16bcc:	ldrh	r2, [r5, #10]
   16bd0:	ldr	r3, [r5, #4]
   16bd4:	ldr	r0, [r4, #204]	; 0xcc
   16bd8:	tst	r2, #4
   16bdc:	ldm	r3, {r2, r3}
   16be0:	movne	r1, r6
   16be4:	moveq	r1, r7
   16be8:	str	r2, [sp]
   16bec:	mov	r2, r9
   16bf0:	bl	1408c <fprintf@plt>
   16bf4:	ldr	r5, [r5]
   16bf8:	cmp	r5, #0
   16bfc:	bne	16bcc <__flatcc_fb_codegen_c@@Base+0x8d4>
   16c00:	ldr	r0, [pc, #1828]	; 1732c <__flatcc_fb_codegen_c@@Base+0x1034>
   16c04:	ldr	r3, [r4, #204]	; 0xcc
   16c08:	mov	r2, #31
   16c0c:	mov	r1, #1
   16c10:	add	r0, pc, r0
   16c14:	bl	14014 <fwrite@plt>
   16c18:	ldr	r1, [r4, #204]	; 0xcc
   16c1c:	mov	r0, #10
   16c20:	bl	140ec <fputc@plt>
   16c24:	add	sp, sp, #372	; 0x174
   16c28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c2c:	ldr	r2, [pc, #1788]	; 17330 <__flatcc_fb_codegen_c@@Base+0x1038>
   16c30:	ldr	r1, [sp, #44]	; 0x2c
   16c34:	ldr	r3, [pc, #1784]	; 17334 <__flatcc_fb_codegen_c@@Base+0x103c>
   16c38:	ldr	r4, [pc, #1784]	; 17338 <__flatcc_fb_codegen_c@@Base+0x1040>
   16c3c:	ldr	r1, [r1, r2]
   16c40:	add	r3, pc, r3
   16c44:	str	r3, [sp]
   16c48:	ldr	r0, [r1]
   16c4c:	ldr	r1, [pc, #1768]	; 1733c <__flatcc_fb_codegen_c@@Base+0x1044>
   16c50:	add	r4, pc, r4
   16c54:	mov	r2, r4
   16c58:	mov	r3, #260	; 0x104
   16c5c:	add	r1, pc, r1
   16c60:	bl	1408c <fprintf@plt>
   16c64:	ldr	r3, [pc, #1748]	; 17340 <__flatcc_fb_codegen_c@@Base+0x1048>
   16c68:	ldr	r0, [pc, #1748]	; 17344 <__flatcc_fb_codegen_c@@Base+0x104c>
   16c6c:	add	r3, pc, r3
   16c70:	mov	r1, r4
   16c74:	add	r3, r3, #64	; 0x40
   16c78:	mov	r2, #260	; 0x104
   16c7c:	add	r0, pc, r0
   16c80:	bl	14140 <__assert_fail@plt>
   16c84:	ldr	r5, [pc, #1724]	; 17348 <__flatcc_fb_codegen_c@@Base+0x1050>
   16c88:	ldr	r1, [pc, #1724]	; 1734c <__flatcc_fb_codegen_c@@Base+0x1054>
   16c8c:	add	r5, pc, r5
   16c90:	ldr	r0, [r4, #204]	; 0xcc
   16c94:	ldr	r3, [sp, #16]
   16c98:	ldr	r2, [sp, #24]
   16c9c:	add	r1, pc, r1
   16ca0:	str	r9, [sp]
   16ca4:	str	r5, [sp, #4]
   16ca8:	bl	1408c <fprintf@plt>
   16cac:	ldr	r3, [sp, #32]
   16cb0:	ldr	r1, [pc, #1688]	; 17350 <__flatcc_fb_codegen_c@@Base+0x1058>
   16cb4:	ldr	r0, [r4, #204]	; 0xcc
   16cb8:	mov	r2, r4
   16cbc:	str	r3, [sp, #8]
   16cc0:	str	r5, [sp, #4]
   16cc4:	str	r9, [sp]
   16cc8:	mov	r3, r9
   16ccc:	add	r1, pc, r1
   16cd0:	str	r5, [sp, #28]
   16cd4:	bl	1408c <fprintf@plt>
   16cd8:	ldr	r3, [sp, #20]
   16cdc:	ldr	r6, [r3, #20]
   16ce0:	cmp	r6, #0
   16ce4:	bne	168ac <__flatcc_fb_codegen_c@@Base+0x5b4>
   16ce8:	ldr	r1, [r4, #204]	; 0xcc
   16cec:	mov	r0, #10
   16cf0:	bl	140ec <fputc@plt>
   16cf4:	ldr	r1, [pc, #1624]	; 17354 <__flatcc_fb_codegen_c@@Base+0x105c>
   16cf8:	mov	r3, r9
   16cfc:	mov	r2, r9
   16d00:	add	r1, pc, r1
   16d04:	ldr	r0, [r4, #204]	; 0xcc
   16d08:	bl	1408c <fprintf@plt>
   16d0c:	ldr	r0, [pc, #1604]	; 17358 <__flatcc_fb_codegen_c@@Base+0x1060>
   16d10:	ldr	r3, [r4, #204]	; 0xcc
   16d14:	mov	r2, #21
   16d18:	mov	r1, #1
   16d1c:	add	r0, pc, r0
   16d20:	bl	14014 <fwrite@plt>
   16d24:	ldr	r3, [sp, #20]
   16d28:	ldr	r5, [r3, #20]
   16d2c:	cmp	r5, #0
   16d30:	bne	16b04 <__flatcc_fb_codegen_c@@Base+0x80c>
   16d34:	ldr	r0, [pc, #1568]	; 1735c <__flatcc_fb_codegen_c@@Base+0x1064>
   16d38:	mov	r1, #1
   16d3c:	ldr	r3, [r4, #204]	; 0xcc
   16d40:	mov	r2, #32
   16d44:	add	r0, pc, r0
   16d48:	bl	14014 <fwrite@plt>
   16d4c:	ldr	r1, [r4, #204]	; 0xcc
   16d50:	mov	r0, #10
   16d54:	bl	140ec <fputc@plt>
   16d58:	ldr	r1, [pc, #1536]	; 17360 <__flatcc_fb_codegen_c@@Base+0x1068>
   16d5c:	mov	r3, r9
   16d60:	mov	r2, r9
   16d64:	add	r1, pc, r1
   16d68:	ldr	r0, [r4, #204]	; 0xcc
   16d6c:	bl	1408c <fprintf@plt>
   16d70:	ldr	r0, [pc, #1516]	; 17364 <__flatcc_fb_codegen_c@@Base+0x106c>
   16d74:	ldr	r3, [r4, #204]	; 0xcc
   16d78:	mov	r2, #21
   16d7c:	mov	r1, #1
   16d80:	add	r0, pc, r0
   16d84:	bl	14014 <fwrite@plt>
   16d88:	b	16bac <__flatcc_fb_codegen_c@@Base+0x8b4>
   16d8c:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   16d90:	ldr	r5, [r5, #32]
   16d94:	cmp	r5, #0
   16d98:	beq	16c84 <__flatcc_fb_codegen_c@@Base+0x98c>
   16d9c:	ldr	r3, [pc, #1476]	; 17368 <__flatcc_fb_codegen_c@@Base+0x1070>
   16da0:	add	r3, pc, r3
   16da4:	str	r3, [sp, #28]
   16da8:	b	16774 <__flatcc_fb_codegen_c@@Base+0x47c>
   16dac:	ldr	r3, [pc, #1464]	; 1736c <__flatcc_fb_codegen_c@@Base+0x1074>
   16db0:	add	r3, pc, r3
   16db4:	str	r3, [sp, #24]
   16db8:	ldr	r3, [pc, #1456]	; 17370 <__flatcc_fb_codegen_c@@Base+0x1078>
   16dbc:	add	r3, pc, r3
   16dc0:	str	r3, [sp, #16]
   16dc4:	b	1672c <__flatcc_fb_codegen_c@@Base+0x434>
   16dc8:	ldr	r3, [pc, #1444]	; 17374 <__flatcc_fb_codegen_c@@Base+0x107c>
   16dcc:	add	r3, pc, r3
   16dd0:	str	r3, [sp, #24]
   16dd4:	ldr	r3, [pc, #1436]	; 17378 <__flatcc_fb_codegen_c@@Base+0x1080>
   16dd8:	add	r3, pc, r3
   16ddc:	str	r3, [sp, #16]
   16de0:	b	1672c <__flatcc_fb_codegen_c@@Base+0x434>
   16de4:	ldr	r3, [pc, #1424]	; 1737c <__flatcc_fb_codegen_c@@Base+0x1084>
   16de8:	add	r3, pc, r3
   16dec:	str	r3, [sp, #24]
   16df0:	ldr	r3, [pc, #1416]	; 17380 <__flatcc_fb_codegen_c@@Base+0x1088>
   16df4:	add	r3, pc, r3
   16df8:	str	r3, [sp, #16]
   16dfc:	b	1672c <__flatcc_fb_codegen_c@@Base+0x434>
   16e00:	ldr	r3, [pc, #1404]	; 17384 <__flatcc_fb_codegen_c@@Base+0x108c>
   16e04:	add	r3, pc, r3
   16e08:	str	r3, [sp, #24]
   16e0c:	ldr	r3, [pc, #1396]	; 17388 <__flatcc_fb_codegen_c@@Base+0x1090>
   16e10:	add	r3, pc, r3
   16e14:	str	r3, [sp, #16]
   16e18:	b	1672c <__flatcc_fb_codegen_c@@Base+0x434>
   16e1c:	ldr	r3, [pc, #1384]	; 1738c <__flatcc_fb_codegen_c@@Base+0x1094>
   16e20:	add	r3, pc, r3
   16e24:	str	r3, [sp, #24]
   16e28:	ldr	r3, [pc, #1376]	; 17390 <__flatcc_fb_codegen_c@@Base+0x1098>
   16e2c:	add	r3, pc, r3
   16e30:	str	r3, [sp, #16]
   16e34:	b	1672c <__flatcc_fb_codegen_c@@Base+0x434>
   16e38:	ldr	r3, [pc, #1364]	; 17394 <__flatcc_fb_codegen_c@@Base+0x109c>
   16e3c:	add	r3, pc, r3
   16e40:	str	r3, [sp, #24]
   16e44:	ldr	r3, [pc, #1356]	; 17398 <__flatcc_fb_codegen_c@@Base+0x10a0>
   16e48:	add	r3, pc, r3
   16e4c:	str	r3, [sp, #16]
   16e50:	b	1672c <__flatcc_fb_codegen_c@@Base+0x434>
   16e54:	ldr	r3, [pc, #1344]	; 1739c <__flatcc_fb_codegen_c@@Base+0x10a4>
   16e58:	add	r3, pc, r3
   16e5c:	str	r3, [sp, #24]
   16e60:	ldr	r3, [pc, #1336]	; 173a0 <__flatcc_fb_codegen_c@@Base+0x10a8>
   16e64:	add	r3, pc, r3
   16e68:	str	r3, [sp, #16]
   16e6c:	b	1672c <__flatcc_fb_codegen_c@@Base+0x434>
   16e70:	ldr	r3, [pc, #1324]	; 173a4 <__flatcc_fb_codegen_c@@Base+0x10ac>
   16e74:	add	r3, pc, r3
   16e78:	str	r3, [sp, #24]
   16e7c:	ldr	r3, [pc, #1316]	; 173a8 <__flatcc_fb_codegen_c@@Base+0x10b0>
   16e80:	add	r3, pc, r3
   16e84:	str	r3, [sp, #16]
   16e88:	b	1672c <__flatcc_fb_codegen_c@@Base+0x434>
   16e8c:	ldr	r3, [pc, #1304]	; 173ac <__flatcc_fb_codegen_c@@Base+0x10b4>
   16e90:	add	r3, pc, r3
   16e94:	str	r3, [sp, #24]
   16e98:	ldr	r3, [pc, #1296]	; 173b0 <__flatcc_fb_codegen_c@@Base+0x10b8>
   16e9c:	add	r3, pc, r3
   16ea0:	str	r3, [sp, #16]
   16ea4:	b	1672c <__flatcc_fb_codegen_c@@Base+0x434>
   16ea8:	ldr	r3, [pc, #1284]	; 173b4 <__flatcc_fb_codegen_c@@Base+0x10bc>
   16eac:	add	r3, pc, r3
   16eb0:	str	r3, [sp, #24]
   16eb4:	ldr	r3, [pc, #1276]	; 173b8 <__flatcc_fb_codegen_c@@Base+0x10c0>
   16eb8:	add	r3, pc, r3
   16ebc:	str	r3, [sp, #16]
   16ec0:	b	1672c <__flatcc_fb_codegen_c@@Base+0x434>
   16ec4:	ldr	r2, [pc, #1264]	; 173bc <__flatcc_fb_codegen_c@@Base+0x10c4>
   16ec8:	add	r2, pc, r2
   16ecc:	ldrd	r0, [r6, #48]	; 0x30
   16ed0:	add	r7, sp, #48	; 0x30
   16ed4:	strd	r0, [sp]
   16ed8:	ldr	r1, [pc, #1248]	; 173c0 <__flatcc_fb_codegen_c@@Base+0x10c8>
   16edc:	mov	r0, r7
   16ee0:	add	r1, pc, r1
   16ee4:	bl	140f8 <sprintf@plt>
   16ee8:	b	16a6c <__flatcc_fb_codegen_c@@Base+0x774>
   16eec:	ldr	r2, [pc, #1232]	; 173c4 <__flatcc_fb_codegen_c@@Base+0x10cc>
   16ef0:	add	r2, pc, r2
   16ef4:	ldrd	r0, [r6, #48]	; 0x30
   16ef8:	add	r7, sp, #48	; 0x30
   16efc:	strd	r0, [sp]
   16f00:	ldr	r1, [pc, #1216]	; 173c8 <__flatcc_fb_codegen_c@@Base+0x10d0>
   16f04:	mov	r0, r7
   16f08:	add	r1, pc, r1
   16f0c:	bl	140f8 <sprintf@plt>
   16f10:	b	16a6c <__flatcc_fb_codegen_c@@Base+0x774>
   16f14:	ldr	r2, [pc, #1200]	; 173cc <__flatcc_fb_codegen_c@@Base+0x10d4>
   16f18:	add	r2, pc, r2
   16f1c:	ldr	r1, [pc, #1196]	; 173d0 <__flatcc_fb_codegen_c@@Base+0x10d8>
   16f20:	add	r7, sp, #48	; 0x30
   16f24:	mov	r0, r7
   16f28:	ldrb	r3, [r6, #48]	; 0x30
   16f2c:	add	r1, pc, r1
   16f30:	bl	140f8 <sprintf@plt>
   16f34:	b	16a6c <__flatcc_fb_codegen_c@@Base+0x774>
   16f38:	ldr	r2, [pc, #1172]	; 173d4 <__flatcc_fb_codegen_c@@Base+0x10dc>
   16f3c:	add	r2, pc, r2
   16f40:	b	16ef4 <__flatcc_fb_codegen_c@@Base+0xbfc>
   16f44:	ldr	r2, [pc, #1164]	; 173d8 <__flatcc_fb_codegen_c@@Base+0x10e0>
   16f48:	add	r2, pc, r2
   16f4c:	b	16ef4 <__flatcc_fb_codegen_c@@Base+0xbfc>
   16f50:	ldr	r2, [pc, #1156]	; 173dc <__flatcc_fb_codegen_c@@Base+0x10e4>
   16f54:	add	r2, pc, r2
   16f58:	b	16ef4 <__flatcc_fb_codegen_c@@Base+0xbfc>
   16f5c:	ldr	r2, [pc, #1148]	; 173e0 <__flatcc_fb_codegen_c@@Base+0x10e8>
   16f60:	add	r2, pc, r2
   16f64:	b	16f1c <__flatcc_fb_codegen_c@@Base+0xc24>
   16f68:	ldr	r2, [pc, #1140]	; 173e4 <__flatcc_fb_codegen_c@@Base+0x10ec>
   16f6c:	add	r2, pc, r2
   16f70:	b	16f1c <__flatcc_fb_codegen_c@@Base+0xc24>
   16f74:	ldr	r2, [pc, #1132]	; 173e8 <__flatcc_fb_codegen_c@@Base+0x10f0>
   16f78:	add	r2, pc, r2
   16f7c:	b	16f1c <__flatcc_fb_codegen_c@@Base+0xc24>
   16f80:	ldr	r2, [pc, #1124]	; 173ec <__flatcc_fb_codegen_c@@Base+0x10f4>
   16f84:	add	r2, pc, r2
   16f88:	b	16f1c <__flatcc_fb_codegen_c@@Base+0xc24>
   16f8c:	ldr	r2, [pc, #1116]	; 173f0 <__flatcc_fb_codegen_c@@Base+0x10f8>
   16f90:	add	r2, pc, r2
   16f94:	b	16f1c <__flatcc_fb_codegen_c@@Base+0xc24>
   16f98:	ldr	r2, [pc, #1108]	; 173f4 <__flatcc_fb_codegen_c@@Base+0x10fc>
   16f9c:	add	r2, pc, r2
   16fa0:	b	16f1c <__flatcc_fb_codegen_c@@Base+0xc24>
   16fa4:	ldr	r2, [pc, #1100]	; 173f8 <__flatcc_fb_codegen_c@@Base+0x1100>
   16fa8:	add	r2, pc, r2
   16fac:	b	16f1c <__flatcc_fb_codegen_c@@Base+0xc24>
   16fb0:	ldr	r2, [pc, #1092]	; 173fc <__flatcc_fb_codegen_c@@Base+0x1104>
   16fb4:	add	r2, pc, r2
   16fb8:	b	16f1c <__flatcc_fb_codegen_c@@Base+0xc24>
   16fbc:	ldr	r2, [pc, #1084]	; 17400 <__flatcc_fb_codegen_c@@Base+0x1108>
   16fc0:	add	r2, pc, r2
   16fc4:	b	16ecc <__flatcc_fb_codegen_c@@Base+0xbd4>
   16fc8:	ldr	r2, [pc, #1076]	; 17404 <__flatcc_fb_codegen_c@@Base+0x110c>
   16fcc:	add	r2, pc, r2
   16fd0:	b	16ef4 <__flatcc_fb_codegen_c@@Base+0xbfc>
   16fd4:	ldr	r2, [pc, #1068]	; 17408 <__flatcc_fb_codegen_c@@Base+0x1110>
   16fd8:	add	r2, pc, r2
   16fdc:	b	16ef4 <__flatcc_fb_codegen_c@@Base+0xbfc>
   16fe0:	ldr	r2, [pc, #1060]	; 1740c <__flatcc_fb_codegen_c@@Base+0x1114>
   16fe4:	add	r2, pc, r2
   16fe8:	b	16ef4 <__flatcc_fb_codegen_c@@Base+0xbfc>
   16fec:	ldr	r2, [pc, #1052]	; 17410 <__flatcc_fb_codegen_c@@Base+0x1118>
   16ff0:	add	r2, pc, r2
   16ff4:	b	16ef4 <__flatcc_fb_codegen_c@@Base+0xbfc>
   16ff8:	ldr	r2, [pc, #1044]	; 17414 <__flatcc_fb_codegen_c@@Base+0x111c>
   16ffc:	add	r2, pc, r2
   17000:	b	16ef4 <__flatcc_fb_codegen_c@@Base+0xbfc>
   17004:	ldr	r2, [pc, #1036]	; 17418 <__flatcc_fb_codegen_c@@Base+0x1120>
   17008:	add	r2, pc, r2
   1700c:	b	16ecc <__flatcc_fb_codegen_c@@Base+0xbd4>
   17010:	ldr	r2, [pc, #1028]	; 1741c <__flatcc_fb_codegen_c@@Base+0x1124>
   17014:	add	r2, pc, r2
   17018:	b	16ecc <__flatcc_fb_codegen_c@@Base+0xbd4>
   1701c:	ldr	r2, [pc, #1020]	; 17420 <__flatcc_fb_codegen_c@@Base+0x1128>
   17020:	add	r2, pc, r2
   17024:	b	16ecc <__flatcc_fb_codegen_c@@Base+0xbd4>
   17028:	ldr	r2, [pc, #1012]	; 17424 <__flatcc_fb_codegen_c@@Base+0x112c>
   1702c:	add	r2, pc, r2
   17030:	b	16ecc <__flatcc_fb_codegen_c@@Base+0xbd4>
   17034:	ldr	r2, [pc, #1004]	; 17428 <__flatcc_fb_codegen_c@@Base+0x1130>
   17038:	add	r2, pc, r2
   1703c:	b	16ecc <__flatcc_fb_codegen_c@@Base+0xbd4>
   17040:	ldr	r2, [pc, #996]	; 1742c <__flatcc_fb_codegen_c@@Base+0x1134>
   17044:	add	r2, pc, r2
   17048:	b	16ecc <__flatcc_fb_codegen_c@@Base+0xbd4>
   1704c:	ldr	r2, [pc, #988]	; 17430 <__flatcc_fb_codegen_c@@Base+0x1138>
   17050:	add	r2, pc, r2
   17054:	b	16ecc <__flatcc_fb_codegen_c@@Base+0xbd4>
   17058:	ldr	r2, [pc, #720]	; 17330 <__flatcc_fb_codegen_c@@Base+0x1038>
   1705c:	ldr	r1, [sp, #44]	; 0x2c
   17060:	ldr	r3, [pc, #972]	; 17434 <__flatcc_fb_codegen_c@@Base+0x113c>
   17064:	ldr	r4, [pc, #972]	; 17438 <__flatcc_fb_codegen_c@@Base+0x1140>
   17068:	ldr	r1, [r1, r2]
   1706c:	add	r3, pc, r3
   17070:	str	r3, [sp]
   17074:	ldr	r0, [r1]
   17078:	ldr	r1, [pc, #956]	; 1743c <__flatcc_fb_codegen_c@@Base+0x1144>
   1707c:	add	r4, pc, r4
   17080:	mov	r2, r4
   17084:	mov	r3, #141	; 0x8d
   17088:	add	r1, pc, r1
   1708c:	bl	1408c <fprintf@plt>
   17090:	ldr	r3, [pc, #936]	; 17440 <__flatcc_fb_codegen_c@@Base+0x1148>
   17094:	ldr	r0, [pc, #936]	; 17444 <__flatcc_fb_codegen_c@@Base+0x114c>
   17098:	add	r3, pc, r3
   1709c:	mov	r1, r4
   170a0:	add	r3, r3, #32
   170a4:	mov	r2, #141	; 0x8d
   170a8:	add	r0, pc, r0
   170ac:	bl	14140 <__assert_fail@plt>
   170b0:	vldr	d7, [r6, #48]	; 0x30
   170b4:	ldr	r1, [pc, #908]	; 17448 <__flatcc_fb_codegen_c@@Base+0x1150>
   170b8:	add	r7, sp, #48	; 0x30
   170bc:	mov	r0, r7
   170c0:	vcvt.f32.f64	s14, d7
   170c4:	add	r1, pc, r1
   170c8:	vcvt.f64.f32	d7, s14
   170cc:	vmov	r2, r3, d7
   170d0:	bl	140f8 <sprintf@plt>
   170d4:	b	16a6c <__flatcc_fb_codegen_c@@Base+0x774>
   170d8:	ldr	r5, [pc, #876]	; 1744c <__flatcc_fb_codegen_c@@Base+0x1154>
   170dc:	ldr	r1, [pc, #876]	; 17450 <__flatcc_fb_codegen_c@@Base+0x1158>
   170e0:	add	r5, pc, r5
   170e4:	ldr	r0, [r4, #204]	; 0xcc
   170e8:	ldr	r3, [sp, #16]
   170ec:	ldr	r2, [sp, #24]
   170f0:	str	r9, [sp]
   170f4:	str	r5, [sp, #4]
   170f8:	add	r1, pc, r1
   170fc:	bl	1408c <fprintf@plt>
   17100:	ldr	r3, [sp, #32]
   17104:	ldr	r1, [pc, #840]	; 17454 <__flatcc_fb_codegen_c@@Base+0x115c>
   17108:	ldr	r0, [r4, #204]	; 0xcc
   1710c:	mov	r2, r4
   17110:	str	r3, [sp, #8]
   17114:	str	r5, [sp, #4]
   17118:	str	r9, [sp]
   1711c:	mov	r3, r9
   17120:	add	r1, pc, r1
   17124:	str	r5, [sp, #28]
   17128:	bl	1408c <fprintf@plt>
   1712c:	b	16880 <__flatcc_fb_codegen_c@@Base+0x588>
   17130:	ldr	r2, [pc, #504]	; 17330 <__flatcc_fb_codegen_c@@Base+0x1038>
   17134:	ldr	r1, [sp, #44]	; 0x2c
   17138:	ldr	r3, [pc, #792]	; 17458 <__flatcc_fb_codegen_c@@Base+0x1160>
   1713c:	ldr	r4, [pc, #792]	; 1745c <__flatcc_fb_codegen_c@@Base+0x1164>
   17140:	ldr	r1, [r1, r2]
   17144:	add	r3, pc, r3
   17148:	str	r3, [sp]
   1714c:	ldr	r0, [r1]
   17150:	ldr	r1, [pc, #776]	; 17460 <__flatcc_fb_codegen_c@@Base+0x1168>
   17154:	add	r4, pc, r4
   17158:	mov	r2, r4
   1715c:	mov	r3, #226	; 0xe2
   17160:	add	r1, pc, r1
   17164:	bl	1408c <fprintf@plt>
   17168:	ldr	r3, [pc, #756]	; 17464 <__flatcc_fb_codegen_c@@Base+0x116c>
   1716c:	ldr	r0, [pc, #756]	; 17468 <__flatcc_fb_codegen_c@@Base+0x1170>
   17170:	add	r3, pc, r3
   17174:	mov	r1, r4
   17178:	add	r3, r3, #52	; 0x34
   1717c:	mov	r2, #226	; 0xe2
   17180:	add	r0, pc, r0
   17184:	bl	14140 <__assert_fail@plt>
   17188:	ldr	r2, [pc, #416]	; 17330 <__flatcc_fb_codegen_c@@Base+0x1038>
   1718c:	ldr	r1, [sp, #44]	; 0x2c
   17190:	ldr	r3, [pc, #724]	; 1746c <__flatcc_fb_codegen_c@@Base+0x1174>
   17194:	ldr	r4, [pc, #724]	; 17470 <__flatcc_fb_codegen_c@@Base+0x1178>
   17198:	ldr	r1, [r1, r2]
   1719c:	add	r3, pc, r3
   171a0:	str	r3, [sp]
   171a4:	ldr	r0, [r1]
   171a8:	ldr	r1, [pc, #708]	; 17474 <__flatcc_fb_codegen_c@@Base+0x117c>
   171ac:	add	r4, pc, r4
   171b0:	mov	r2, r4
   171b4:	mov	r3, #226	; 0xe2
   171b8:	add	r1, pc, r1
   171bc:	bl	1408c <fprintf@plt>
   171c0:	ldr	r3, [pc, #688]	; 17478 <__flatcc_fb_codegen_c@@Base+0x1180>
   171c4:	ldr	r0, [pc, #688]	; 1747c <__flatcc_fb_codegen_c@@Base+0x1184>
   171c8:	add	r3, pc, r3
   171cc:	mov	r1, r4
   171d0:	add	r3, r3, #52	; 0x34
   171d4:	mov	r2, #226	; 0xe2
   171d8:	add	r0, pc, r0
   171dc:	bl	14140 <__assert_fail@plt>
   171e0:	ldr	r2, [pc, #328]	; 17330 <__flatcc_fb_codegen_c@@Base+0x1038>
   171e4:	ldr	r1, [sp, #44]	; 0x2c
   171e8:	ldr	r3, [pc, #656]	; 17480 <__flatcc_fb_codegen_c@@Base+0x1188>
   171ec:	ldr	r4, [pc, #656]	; 17484 <__flatcc_fb_codegen_c@@Base+0x118c>
   171f0:	ldr	r1, [r1, r2]
   171f4:	add	r3, pc, r3
   171f8:	str	r3, [sp]
   171fc:	ldr	r0, [r1]
   17200:	ldr	r1, [pc, #640]	; 17488 <__flatcc_fb_codegen_c@@Base+0x1190>
   17204:	add	r4, pc, r4
   17208:	mov	r2, r4
   1720c:	mov	r3, #226	; 0xe2
   17210:	add	r1, pc, r1
   17214:	bl	1408c <fprintf@plt>
   17218:	ldr	r3, [pc, #620]	; 1748c <__flatcc_fb_codegen_c@@Base+0x1194>
   1721c:	ldr	r0, [pc, #620]	; 17490 <__flatcc_fb_codegen_c@@Base+0x1198>
   17220:	add	r3, pc, r3
   17224:	mov	r1, r4
   17228:	add	r3, r3, #52	; 0x34
   1722c:	mov	r2, #226	; 0xe2
   17230:	add	r0, pc, r0
   17234:	bl	14140 <__assert_fail@plt>
   17238:	ldr	r1, [r4, #204]	; 0xcc
   1723c:	mov	r0, #10
   17240:	bl	140ec <fputc@plt>
   17244:	b	16ac4 <__flatcc_fb_codegen_c@@Base+0x7cc>
   17248:	ldr	r0, [pc, #580]	; 17494 <__flatcc_fb_codegen_c@@Base+0x119c>
   1724c:	ldr	r3, [r4, #204]	; 0xcc
   17250:	mov	r2, #32
   17254:	mov	r1, #1
   17258:	add	r0, pc, r0
   1725c:	bl	14014 <fwrite@plt>
   17260:	ldr	r1, [r4, #204]	; 0xcc
   17264:	mov	r0, #10
   17268:	bl	140ec <fputc@plt>
   1726c:	b	16b7c <__flatcc_fb_codegen_c@@Base+0x884>
   17270:	ldr	r3, [pc, #544]	; 17498 <__flatcc_fb_codegen_c@@Base+0x11a0>
   17274:	ldr	r1, [pc, #544]	; 1749c <__flatcc_fb_codegen_c@@Base+0x11a4>
   17278:	ldr	r0, [pc, #544]	; 174a0 <__flatcc_fb_codegen_c@@Base+0x11a8>
   1727c:	add	r3, pc, r3
   17280:	ldr	r2, [pc, #540]	; 174a4 <__flatcc_fb_codegen_c@@Base+0x11ac>
   17284:	add	r3, r3, #20
   17288:	add	r1, pc, r1
   1728c:	add	r0, pc, r0
   17290:	bl	14140 <__assert_fail@plt>
   17294:	ldr	r3, [pc, #524]	; 174a8 <__flatcc_fb_codegen_c@@Base+0x11b0>
   17298:	ldr	r1, [pc, #524]	; 174ac <__flatcc_fb_codegen_c@@Base+0x11b4>
   1729c:	ldr	r0, [pc, #524]	; 174b0 <__flatcc_fb_codegen_c@@Base+0x11b8>
   172a0:	add	r3, pc, r3
   172a4:	ldr	r2, [pc, #520]	; 174b4 <__flatcc_fb_codegen_c@@Base+0x11bc>
   172a8:	add	r3, r3, #20
   172ac:	add	r1, pc, r1
   172b0:	add	r0, pc, r0
   172b4:	bl	14140 <__assert_fail@plt>
   172b8:	andeq	r4, r5, r8, asr #18
   172bc:	andeq	sl, r2, r0, asr #12
   172c0:	andeq	sl, r2, r8, lsr r6
   172c4:			; <UNDEFINED> instruction: 0x000343b4
   172c8:	andeq	r4, r3, ip, lsr #7
   172cc:	andeq	sl, r2, r0, ror r7
   172d0:	andeq	sl, r2, r4, ror #14
   172d4:	strdeq	r2, [r3], -r0
   172d8:	andeq	fp, r2, r8, lsl r1
   172dc:	ldrdeq	sl, [r2], -r4
   172e0:			; <UNDEFINED> instruction: 0x0002a6bc
   172e4:	andeq	sl, r2, r0, asr #13
   172e8:	andeq	r4, r3, ip, lsl #5
   172ec:	andeq	r4, r3, ip, ror #4
   172f0:	andeq	sl, r2, r8, lsr r6
   172f4:	andeq	sl, r2, r0, lsr r6
   172f8:			; <UNDEFINED> instruction: 0x000329b4
   172fc:	andeq	fp, r2, r0, asr r0
   17300:	andeq	sl, r2, r0, lsr r5
   17304:	andeq	sl, r2, r4, lsl #10
   17308:	andeq	sl, r2, r8, ror #9
   1730c:	andeq	sl, r2, ip, lsl #10
   17310:	andeq	sl, r2, r8, lsl #11
   17314:	andeq	sl, r2, r0, asr r5
   17318:	andeq	sl, r2, ip, asr r5
   1731c:	andeq	sl, r2, r4, asr r5
   17320:	andeq	sl, r2, r4, asr r4
   17324:	andeq	sl, r2, r4, ror #11
   17328:	andeq	sl, r2, ip, lsr #11
   1732c:	andeq	sl, r2, r0, asr #10
   17330:	andeq	r0, r0, r0, lsr #1
   17334:	andeq	sl, r2, r8, lsl #5
   17338:	andeq	sl, r2, ip, lsl #4
   1733c:	andeq	sl, r2, r0, ror #4
   17340:	andeq	r9, r2, r4, lsl lr
   17344:	andeq	r2, r3, r0, asr #12
   17348:	andeq	sl, r2, r0, lsl r1
   1734c:	andeq	sl, r2, r4, ror r2
   17350:	andeq	sl, r2, ip, asr r2
   17354:	andeq	sl, r2, r0, lsl r3
   17358:	andeq	sl, r2, ip, lsr #6
   1735c:	andeq	sl, r2, r4, ror r3
   17360:			; <UNDEFINED> instruction: 0x0002a3b4
   17364:	andeq	sl, r2, r8, asr #5
   17368:	strdeq	r9, [r2], -ip
   1736c:	muleq	r3, r0, sp
   17370:			; <UNDEFINED> instruction: 0x00029fb8
   17374:	andeq	r3, r3, r4, ror sp
   17378:	andeq	r9, r2, r4, lsr #31
   1737c:	andeq	r3, r3, r8, asr sp
   17380:	muleq	r2, r0, pc	; <UNPREDICTABLE>
   17384:	andeq	r3, r3, ip, lsr sp
   17388:	andeq	r9, r2, r4, lsl #31
   1738c:	andeq	r3, r3, r0, lsr #26
   17390:	andeq	r9, r2, r0, lsr pc
   17394:	andeq	r3, r3, r4, lsl #26
   17398:	andeq	r9, r2, r4, asr #30
   1739c:	andeq	r3, r3, r8, ror #25
   173a0:	andeq	r9, r2, r8, lsl #30
   173a4:	andeq	r3, r3, ip, asr #25
   173a8:	andeq	r9, r2, r4, asr #29
   173ac:			; <UNDEFINED> instruction: 0x00033cb0
   173b0:	muleq	r2, ip, lr
   173b4:	muleq	r3, r4, ip
   173b8:	muleq	r2, r8, lr
   173bc:	strdeq	r9, [r2], -r4
   173c0:	muleq	r2, ip, r0
   173c4:	andeq	r9, r2, ip, asr #29
   173c8:	andeq	sl, r2, r8, rrx
   173cc:	andeq	r9, r2, r4, lsr #29
   173d0:	andeq	sl, r2, ip, asr r0
   173d4:	muleq	r2, r8, lr
   173d8:	andeq	r9, r2, r0, lsl #29
   173dc:	andeq	r9, r2, ip, asr lr
   173e0:	andeq	r9, r2, r0, asr lr
   173e4:	andeq	r9, r2, r0, ror lr
   173e8:	andeq	r9, r2, ip, asr lr
   173ec:	andeq	r9, r2, r0, asr lr
   173f0:	andeq	r9, r2, r8, lsr lr
   173f4:	andeq	r9, r2, r8, asr lr
   173f8:	andeq	r9, r2, r4, asr #28
   173fc:	andeq	r9, r2, r0, lsr lr
   17400:	strdeq	r9, [r2], -r0
   17404:	andeq	r9, r2, r8, lsr #28
   17408:	andeq	r9, r2, r4, lsl lr
   1740c:	andeq	r9, r2, r0, lsl #28
   17410:	andeq	r9, r2, ip, ror #27
   17414:	ldrdeq	r9, [r2], -r8
   17418:	andeq	r9, r2, ip, ror #27
   1741c:	ldrdeq	r9, [r2], -r8
   17420:	andeq	r9, r2, r4, asr #27
   17424:			; <UNDEFINED> instruction: 0x00029db0
   17428:	muleq	r2, ip, sp
   1742c:	muleq	r2, r0, sp
   17430:	andeq	r9, r2, r8, ror sp
   17434:	andeq	r9, r2, ip, asr lr
   17438:	andeq	r9, r2, r0, ror #27
   1743c:	andeq	r9, r2, r4, lsr lr
   17440:	andeq	r9, r2, r8, ror #19
   17444:	andeq	r2, r3, r4, lsl r2
   17448:	andeq	r9, r2, ip, asr #29
   1744c:	andeq	r9, r2, r4, asr #25
   17450:	andeq	r9, r2, r8, lsl lr
   17454:	andeq	r9, r2, r8, lsl #28
   17458:	andeq	r9, r2, r4, lsl #27
   1745c:	andeq	r9, r2, r8, lsl #26
   17460:	andeq	r9, r2, ip, asr sp
   17464:	andeq	r9, r2, r0, lsl r9
   17468:	andeq	r2, r3, ip, lsr r1
   1746c:	andeq	r9, r2, ip, lsr #26
   17470:			; <UNDEFINED> instruction: 0x00029cb0
   17474:	andeq	r9, r2, r4, lsl #26
   17478:			; <UNDEFINED> instruction: 0x000298b8
   1747c:	andeq	r2, r3, r4, ror #1
   17480:	ldrdeq	r9, [r2], -r4
   17484:	andeq	r9, r2, r8, asr ip
   17488:	andeq	r9, r2, ip, lsr #25
   1748c:	andeq	r9, r2, r0, ror #16
   17490:	andeq	r2, r3, ip, lsl #1
   17494:	andeq	r9, r2, r0, ror #28
   17498:	andeq	r9, r2, r4, lsl #16
   1749c:			; <UNDEFINED> instruction: 0x000298b8
   174a0:			; <UNDEFINED> instruction: 0x00029bb0
   174a4:			; <UNDEFINED> instruction: 0x000004b5
   174a8:	andeq	r9, r2, r0, ror #15
   174ac:	muleq	r2, r4, r8
   174b0:	andeq	r9, r2, ip, asr #22
   174b4:			; <UNDEFINED> instruction: 0x000004b4
   174b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   174bc:	mov	r4, r0
   174c0:	sub	sp, sp, #516	; 0x204
   174c4:	add	r3, sp, #72	; 0x48
   174c8:	mov	r0, r3
   174cc:	str	r3, [sp, #48]	; 0x30
   174d0:	ldr	r3, [r4, #212]	; 0xd4
   174d4:	add	ip, sp, #292	; 0x124
   174d8:	mov	r5, ip
   174dc:	ldr	r3, [r3, #132]	; 0x84
   174e0:	mov	sl, r1
   174e4:	mov	r2, #220	; 0xdc
   174e8:	mov	r1, #0
   174ec:	str	r3, [sp, #36]	; 0x24
   174f0:	str	ip, [sp, #60]	; 0x3c
   174f4:	bl	140a4 <memset@plt>
   174f8:	mov	r2, #220	; 0xdc
   174fc:	mov	r0, r5
   17500:	mov	r1, #0
   17504:	bl	140a4 <memset@plt>
   17508:	ldrh	r3, [sl, #8]
   1750c:	ldr	r2, [pc, #3532]	; 182e0 <__flatcc_fb_codegen_c@@Base+0x1fe8>
   17510:	cmp	r3, #1
   17514:	add	r2, pc, r2
   17518:	str	r2, [sp, #68]	; 0x44
   1751c:	bne	18298 <__flatcc_fb_codegen_c@@Base+0x1fa0>
   17520:	ldrh	r3, [sl, #104]	; 0x68
   17524:	cmp	r3, #0
   17528:	bne	179d0 <__flatcc_fb_codegen_c@@Base+0x16d8>
   1752c:	ldrd	r2, [sl, #96]	; 0x60
   17530:	orrs	r3, r2, r3
   17534:	bne	18274 <__flatcc_fb_codegen_c@@Base+0x1f7c>
   17538:	ldr	r2, [sp, #48]	; 0x30
   1753c:	mov	r1, sl
   17540:	ldr	r0, [sl, #12]
   17544:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   17548:	ldr	r5, [sl, #32]
   1754c:	cmp	r5, #0
   17550:	beq	17608 <__flatcc_fb_codegen_c@@Base+0x1310>
   17554:	ldr	r2, [pc, #3464]	; 182e4 <__flatcc_fb_codegen_c@@Base+0x1fec>
   17558:	ldr	fp, [pc, #3464]	; 182e8 <__flatcc_fb_codegen_c@@Base+0x1ff0>
   1755c:	ldr	r9, [pc, #3464]	; 182ec <__flatcc_fb_codegen_c@@Base+0x1ff4>
   17560:	ldr	r8, [pc, #3464]	; 182f0 <__flatcc_fb_codegen_c@@Base+0x1ff8>
   17564:	ldr	r7, [pc, #3464]	; 182f4 <__flatcc_fb_codegen_c@@Base+0x1ffc>
   17568:	mov	r3, #0
   1756c:	add	r2, pc, r2
   17570:	str	sl, [sp, #28]
   17574:	add	fp, pc, fp
   17578:	add	r9, pc, r9
   1757c:	add	r8, pc, r8
   17580:	add	r7, pc, r7
   17584:	mov	r6, r3
   17588:	mov	r0, #1
   1758c:	mov	sl, r2
   17590:	ldr	r2, [r5, #4]
   17594:	ldr	r1, [r2, #8]
   17598:	cmp	r1, r3
   1759c:	beq	175c0 <__flatcc_fb_codegen_c@@Base+0x12c8>
   175a0:	cmp	r0, #0
   175a4:	movne	r2, r9
   175a8:	moveq	r2, fp
   175ac:	movne	r1, r8
   175b0:	moveq	r1, sl
   175b4:	ldr	r0, [r4, #204]	; 0xcc
   175b8:	bl	1408c <fprintf@plt>
   175bc:	ldr	r2, [r5, #4]
   175c0:	ldr	r3, [r2]
   175c4:	mov	r1, r7
   175c8:	ldr	r2, [r2, #4]
   175cc:	ldr	r0, [r4, #204]	; 0xcc
   175d0:	bl	1408c <fprintf@plt>
   175d4:	ldr	r3, [r5, #4]
   175d8:	ldr	r5, [r5]
   175dc:	mov	r0, r6
   175e0:	cmp	r5, #0
   175e4:	ldr	r3, [r3, #8]
   175e8:	bne	17590 <__flatcc_fb_codegen_c@@Base+0x1298>
   175ec:	ldr	r0, [pc, #3332]	; 182f8 <__flatcc_fb_codegen_c@@Base+0x2000>
   175f0:	ldr	r3, [r4, #204]	; 0xcc
   175f4:	mov	r2, #4
   175f8:	mov	r1, #1
   175fc:	add	r0, pc, r0
   17600:	ldr	sl, [sp, #28]
   17604:	bl	14014 <fwrite@plt>
   17608:	ldrd	r2, [sl, #112]	; 0x70
   1760c:	orrs	r3, r2, r3
   17610:	beq	17a30 <__flatcc_fb_codegen_c@@Base+0x1738>
   17614:	ldr	r3, [sp, #36]	; 0x24
   17618:	cmp	r3, #0
   1761c:	bne	17c54 <__flatcc_fb_codegen_c@@Base+0x195c>
   17620:	ldr	r1, [pc, #3284]	; 182fc <__flatcc_fb_codegen_c@@Base+0x2004>
   17624:	ldr	r2, [sp, #48]	; 0x30
   17628:	add	r1, pc, r1
   1762c:	ldr	r0, [r4, #204]	; 0xcc
   17630:	bl	1408c <fprintf@plt>
   17634:	ldr	r5, [sl, #20]
   17638:	cmp	r5, #0
   1763c:	beq	177b8 <__flatcc_fb_codegen_c@@Base+0x14c0>
   17640:	ldr	r1, [pc, #3256]	; 18300 <__flatcc_fb_codegen_c@@Base+0x2008>
   17644:	ldr	r2, [pc, #3256]	; 18304 <__flatcc_fb_codegen_c@@Base+0x200c>
   17648:	add	r1, pc, r1
   1764c:	ldr	fp, [pc, #3252]	; 18308 <__flatcc_fb_codegen_c@@Base+0x2010>
   17650:	ldr	r7, [pc, #3252]	; 1830c <__flatcc_fb_codegen_c@@Base+0x2014>
   17654:	ldr	r6, [pc, #3252]	; 18310 <__flatcc_fb_codegen_c@@Base+0x2018>
   17658:	add	r2, pc, r2
   1765c:	str	r1, [sp, #28]
   17660:	ldr	r1, [pc, #3244]	; 18314 <__flatcc_fb_codegen_c@@Base+0x201c>
   17664:	str	sl, [sp, #56]	; 0x38
   17668:	add	fp, pc, fp
   1766c:	add	r7, pc, r7
   17670:	add	r6, pc, r6
   17674:	mov	sl, r2
   17678:	mov	r3, #0
   1767c:	add	r1, pc, r1
   17680:	str	r3, [sp, #44]	; 0x2c
   17684:	str	r1, [sp, #52]	; 0x34
   17688:	str	r3, [sp, #64]	; 0x40
   1768c:	str	r3, [sp, #32]
   17690:	ldr	r8, [r5, #68]	; 0x44
   17694:	cmp	r8, #0
   17698:	beq	17718 <__flatcc_fb_codegen_c@@Base+0x1420>
   1769c:	mov	r3, #0
   176a0:	mov	r9, r3
   176a4:	mov	r0, #1
   176a8:	ldr	r2, [r8, #4]
   176ac:	ldr	r1, [r2, #8]
   176b0:	cmp	r1, r3
   176b4:	beq	176d8 <__flatcc_fb_codegen_c@@Base+0x13e0>
   176b8:	cmp	r0, #0
   176bc:	moveq	r2, fp
   176c0:	ldrne	r2, [sp, #28]
   176c4:	movne	r1, r7
   176c8:	moveq	r1, sl
   176cc:	ldr	r0, [r4, #204]	; 0xcc
   176d0:	bl	1408c <fprintf@plt>
   176d4:	ldr	r2, [r8, #4]
   176d8:	ldr	r3, [r2]
   176dc:	mov	r1, r6
   176e0:	ldr	r2, [r2, #4]
   176e4:	ldr	r0, [r4, #204]	; 0xcc
   176e8:	bl	1408c <fprintf@plt>
   176ec:	ldr	r3, [r8, #4]
   176f0:	ldr	r8, [r8]
   176f4:	mov	r0, r9
   176f8:	cmp	r8, #0
   176fc:	ldr	r3, [r3, #8]
   17700:	bne	176a8 <__flatcc_fb_codegen_c@@Base+0x13b0>
   17704:	ldr	r3, [r4, #204]	; 0xcc
   17708:	mov	r2, #4
   1770c:	mov	r1, #1
   17710:	ldr	r0, [sp, #52]	; 0x34
   17714:	bl	14014 <fwrite@plt>
   17718:	ldr	r2, [sp, #32]
   1771c:	ldr	r3, [r5, #4]
   17720:	cmp	r2, #0
   17724:	ldm	r3, {r8, r9}
   17728:	ldreq	r3, [sp, #56]	; 0x38
   1772c:	ldrhne	r3, [r5, #74]	; 0x4a
   17730:	ldrheq	r3, [r3, #104]	; 0x68
   17734:	str	r3, [sp, #40]	; 0x28
   17738:	ldr	r3, [sp, #36]	; 0x24
   1773c:	cmp	r3, #0
   17740:	beq	1784c <__flatcc_fb_codegen_c@@Base+0x1554>
   17744:	ldr	r3, [r5, #80]	; 0x50
   17748:	ldr	r2, [sp, #32]
   1774c:	subs	r3, r3, r2
   17750:	bne	17a0c <__flatcc_fb_codegen_c@@Base+0x1714>
   17754:	ldrh	r3, [r5, #72]	; 0x48
   17758:	tst	r3, #4
   1775c:	beq	17890 <__flatcc_fb_codegen_c@@Base+0x1598>
   17760:	ldr	r1, [sp, #44]	; 0x2c
   17764:	ldr	r3, [r5, #88]	; 0x58
   17768:	add	ip, r1, #1
   1776c:	mov	r2, r1
   17770:	ldr	r1, [pc, #2976]	; 18318 <__flatcc_fb_codegen_c@@Base+0x2020>
   17774:	ldr	r0, [r4, #204]	; 0xcc
   17778:	add	r1, pc, r1
   1777c:	str	r8, [sp, #4]
   17780:	str	r9, [sp]
   17784:	str	ip, [sp, #44]	; 0x2c
   17788:	bl	1408c <fprintf@plt>
   1778c:	ldr	r2, [r5, #80]	; 0x50
   17790:	ldr	r3, [r5, #88]	; 0x58
   17794:	ldr	r5, [r5]
   17798:	add	r3, r2, r3
   1779c:	cmp	r5, #0
   177a0:	str	r3, [sp, #32]
   177a4:	bne	17690 <__flatcc_fb_codegen_c@@Base+0x1398>
   177a8:	ldr	r3, [sp, #36]	; 0x24
   177ac:	ldr	sl, [sp, #56]	; 0x38
   177b0:	cmp	r3, #0
   177b4:	bne	17c94 <__flatcc_fb_codegen_c@@Base+0x199c>
   177b8:	ldr	r0, [pc, #2908]	; 1831c <__flatcc_fb_codegen_c@@Base+0x2024>
   177bc:	ldr	r3, [r4, #204]	; 0xcc
   177c0:	mov	r2, #3
   177c4:	mov	r1, #1
   177c8:	add	r0, pc, r0
   177cc:	bl	14014 <fwrite@plt>
   177d0:	ldrd	r6, [sl, #112]	; 0x70
   177d4:	ldr	r5, [sp, #48]	; 0x30
   177d8:	ldr	r1, [pc, #2880]	; 18320 <__flatcc_fb_codegen_c@@Base+0x2028>
   177dc:	ldr	r0, [r4, #204]	; 0xcc
   177e0:	mov	r2, r5
   177e4:	strd	r6, [sp]
   177e8:	add	r1, pc, r1
   177ec:	bl	1408c <fprintf@plt>
   177f0:	ldr	r1, [pc, #2860]	; 18324 <__flatcc_fb_codegen_c@@Base+0x202c>
   177f4:	ldr	r0, [r4, #204]	; 0xcc
   177f8:	mov	r3, r5
   177fc:	mov	r2, r5
   17800:	str	r5, [sp]
   17804:	add	r1, pc, r1
   17808:	bl	1408c <fprintf@plt>
   1780c:	ldr	r1, [pc, #2836]	; 18328 <__flatcc_fb_codegen_c@@Base+0x2030>
   17810:	ldr	r0, [r4, #204]	; 0xcc
   17814:	mov	r3, r5
   17818:	mov	r2, r5
   1781c:	str	r5, [sp]
   17820:	add	r1, pc, r1
   17824:	bl	1408c <fprintf@plt>
   17828:	ldr	r1, [pc, #2812]	; 1832c <__flatcc_fb_codegen_c@@Base+0x2034>
   1782c:	ldr	r0, [r4, #204]	; 0xcc
   17830:	mov	r3, r5
   17834:	str	r4, [sp, #4]
   17838:	str	r5, [sp]
   1783c:	mov	r2, r5
   17840:	add	r1, pc, r1
   17844:	bl	1408c <fprintf@plt>
   17848:	b	17a9c <__flatcc_fb_codegen_c@@Base+0x17a4>
   1784c:	ldrh	r3, [r5, #72]	; 0x48
   17850:	tst	r3, #4
   17854:	beq	17890 <__flatcc_fb_codegen_c@@Base+0x1598>
   17858:	ldr	r1, [sp, #44]	; 0x2c
   1785c:	str	r8, [sp, #8]
   17860:	str	r9, [sp, #4]
   17864:	ldr	r3, [r5, #88]	; 0x58
   17868:	add	ip, r1, #1
   1786c:	ldr	r0, [r4, #204]	; 0xcc
   17870:	str	r3, [sp]
   17874:	mov	r3, r1
   17878:	ldr	r1, [pc, #2736]	; 18330 <__flatcc_fb_codegen_c@@Base+0x2038>
   1787c:	ldr	r2, [sp, #40]	; 0x28
   17880:	add	r1, pc, r1
   17884:	str	ip, [sp, #44]	; 0x2c
   17888:	bl	1408c <fprintf@plt>
   1788c:	b	1778c <__flatcc_fb_codegen_c@@Base+0x1494>
   17890:	ldrh	r3, [r5, #24]
   17894:	cmp	r3, #8
   17898:	beq	17918 <__flatcc_fb_codegen_c@@Base+0x1620>
   1789c:	cmp	r3, #14
   178a0:	bne	17960 <__flatcc_fb_codegen_c@@Base+0x1668>
   178a4:	ldr	r1, [r5, #16]
   178a8:	ldrh	r3, [r1, #8]
   178ac:	bic	r2, r3, #2
   178b0:	cmp	r2, #1
   178b4:	bne	182bc <__flatcc_fb_codegen_c@@Base+0x1fc4>
   178b8:	cmp	r3, #1
   178bc:	beq	17e28 <__flatcc_fb_codegen_c@@Base+0x1b30>
   178c0:	ldr	r3, [pc, #2668]	; 18334 <__flatcc_fb_codegen_c@@Base+0x203c>
   178c4:	add	r3, pc, r3
   178c8:	ldr	r2, [sp, #60]	; 0x3c
   178cc:	ldr	r0, [r1, #12]
   178d0:	str	r3, [sp, #32]
   178d4:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   178d8:	ldr	r3, [sp, #36]	; 0x24
   178dc:	cmp	r3, #0
   178e0:	ldr	r3, [sp, #32]
   178e4:	beq	17c34 <__flatcc_fb_codegen_c@@Base+0x193c>
   178e8:	ldr	r1, [pc, #2632]	; 18338 <__flatcc_fb_codegen_c@@Base+0x2040>
   178ec:	ldr	r2, [sp, #60]	; 0x3c
   178f0:	add	r1, pc, r1
   178f4:	ldr	r0, [r4, #204]	; 0xcc
   178f8:	bl	1408c <fprintf@plt>
   178fc:	ldr	r1, [pc, #2616]	; 1833c <__flatcc_fb_codegen_c@@Base+0x2044>
   17900:	mov	r3, r8
   17904:	mov	r2, r9
   17908:	add	r1, pc, r1
   1790c:	ldr	r0, [r4, #204]	; 0xcc
   17910:	bl	1408c <fprintf@plt>
   17914:	b	1778c <__flatcc_fb_codegen_c@@Base+0x1494>
   17918:	ldr	r3, [r5, #16]
   1791c:	cmp	r3, #5
   17920:	beq	17e34 <__flatcc_fb_codegen_c@@Base+0x1b3c>
   17924:	sub	r3, r3, #1
   17928:	cmp	r3, #10
   1792c:	addls	pc, pc, r3, lsl #2
   17930:	b	17eec <__flatcc_fb_codegen_c@@Base+0x1bf4>
   17934:	b	17fe4 <__flatcc_fb_codegen_c@@Base+0x1cec>
   17938:	b	17ff8 <__flatcc_fb_codegen_c@@Base+0x1d00>
   1793c:	b	17fd0 <__flatcc_fb_codegen_c@@Base+0x1cd8>
   17940:	b	17e88 <__flatcc_fb_codegen_c@@Base+0x1b90>
   17944:	b	17eec <__flatcc_fb_codegen_c@@Base+0x1bf4>
   17948:	b	17e60 <__flatcc_fb_codegen_c@@Base+0x1b68>
   1794c:	b	17ed8 <__flatcc_fb_codegen_c@@Base+0x1be0>
   17950:	b	17ec4 <__flatcc_fb_codegen_c@@Base+0x1bcc>
   17954:	b	17eb0 <__flatcc_fb_codegen_c@@Base+0x1bb8>
   17958:	b	17e9c <__flatcc_fb_codegen_c@@Base+0x1ba4>
   1795c:	b	17e74 <__flatcc_fb_codegen_c@@Base+0x1b7c>
   17960:	ldr	r2, [pc, #2520]	; 18340 <__flatcc_fb_codegen_c@@Base+0x2048>
   17964:	ldr	r1, [pc, #2520]	; 18344 <__flatcc_fb_codegen_c@@Base+0x204c>
   17968:	ldr	r0, [r4, #204]	; 0xcc
   1796c:	add	r2, pc, r2
   17970:	add	r1, pc, r1
   17974:	bl	1408c <fprintf@plt>
   17978:	ldr	r2, [pc, #2504]	; 18348 <__flatcc_fb_codegen_c@@Base+0x2050>
   1797c:	ldr	r1, [sp, #68]	; 0x44
   17980:	ldr	r3, [pc, #2500]	; 1834c <__flatcc_fb_codegen_c@@Base+0x2054>
   17984:	ldr	r4, [pc, #2500]	; 18350 <__flatcc_fb_codegen_c@@Base+0x2058>
   17988:	ldr	r1, [r1, r2]
   1798c:	add	r3, pc, r3
   17990:	str	r3, [sp]
   17994:	ldr	r0, [r1]
   17998:	ldr	r1, [pc, #2484]	; 18354 <__flatcc_fb_codegen_c@@Base+0x205c>
   1799c:	add	r4, pc, r4
   179a0:	mov	r2, r4
   179a4:	ldr	r3, [pc, #2476]	; 18358 <__flatcc_fb_codegen_c@@Base+0x2060>
   179a8:	add	r1, pc, r1
   179ac:	bl	1408c <fprintf@plt>
   179b0:	ldr	r3, [pc, #2468]	; 1835c <__flatcc_fb_codegen_c@@Base+0x2064>
   179b4:	ldr	r0, [pc, #2468]	; 18360 <__flatcc_fb_codegen_c@@Base+0x2068>
   179b8:	add	r3, pc, r3
   179bc:	mov	r1, r4
   179c0:	add	r3, r3, #80	; 0x50
   179c4:	ldr	r2, [pc, #2444]	; 18358 <__flatcc_fb_codegen_c@@Base+0x2060>
   179c8:	add	r0, pc, r0
   179cc:	bl	14140 <__assert_fail@plt>
   179d0:	ldrd	r2, [sl, #112]	; 0x70
   179d4:	orrs	r3, r2, r3
   179d8:	bne	17538 <__flatcc_fb_codegen_c@@Base+0x1240>
   179dc:	ldrd	r2, [sl, #96]	; 0x60
   179e0:	orrs	r3, r2, r3
   179e4:	beq	17538 <__flatcc_fb_codegen_c@@Base+0x1240>
   179e8:	ldr	r3, [pc, #2420]	; 18364 <__flatcc_fb_codegen_c@@Base+0x206c>
   179ec:	ldr	r1, [pc, #2420]	; 18368 <__flatcc_fb_codegen_c@@Base+0x2070>
   179f0:	ldr	r0, [pc, #2420]	; 1836c <__flatcc_fb_codegen_c@@Base+0x2074>
   179f4:	add	r3, pc, r3
   179f8:	ldr	r2, [pc, #2416]	; 18370 <__flatcc_fb_codegen_c@@Base+0x2078>
   179fc:	add	r3, r3, #80	; 0x50
   17a00:	add	r1, pc, r1
   17a04:	add	r0, pc, r0
   17a08:	bl	14140 <__assert_fail@plt>
   17a0c:	ldr	r1, [sp, #64]	; 0x40
   17a10:	ldr	r0, [r4, #204]	; 0xcc
   17a14:	add	ip, r1, #1
   17a18:	mov	r2, r1
   17a1c:	ldr	r1, [pc, #2384]	; 18374 <__flatcc_fb_codegen_c@@Base+0x207c>
   17a20:	str	ip, [sp, #64]	; 0x40
   17a24:	add	r1, pc, r1
   17a28:	bl	1408c <fprintf@plt>
   17a2c:	b	17754 <__flatcc_fb_codegen_c@@Base+0x145c>
   17a30:	ldr	r5, [sp, #48]	; 0x30
   17a34:	ldr	r1, [pc, #2364]	; 18378 <__flatcc_fb_codegen_c@@Base+0x2080>
   17a38:	mov	r2, r5
   17a3c:	add	r1, pc, r1
   17a40:	ldr	r0, [r4, #204]	; 0xcc
   17a44:	bl	1408c <fprintf@plt>
   17a48:	ldr	r1, [pc, #2348]	; 1837c <__flatcc_fb_codegen_c@@Base+0x2084>
   17a4c:	ldr	r0, [r4, #204]	; 0xcc
   17a50:	mov	r3, r5
   17a54:	mov	r2, r5
   17a58:	add	r1, pc, r1
   17a5c:	str	r5, [sp]
   17a60:	bl	1408c <fprintf@plt>
   17a64:	ldr	r1, [pc, #2324]	; 18380 <__flatcc_fb_codegen_c@@Base+0x2088>
   17a68:	ldr	r0, [r4, #204]	; 0xcc
   17a6c:	mov	r3, r5
   17a70:	mov	r2, r5
   17a74:	add	r1, pc, r1
   17a78:	str	r5, [sp]
   17a7c:	bl	1408c <fprintf@plt>
   17a80:	ldr	r1, [pc, #2300]	; 18384 <__flatcc_fb_codegen_c@@Base+0x208c>
   17a84:	ldr	r0, [r4, #204]	; 0xcc
   17a88:	mov	r3, r5
   17a8c:	str	r5, [sp]
   17a90:	mov	r2, r5
   17a94:	add	r1, pc, r1
   17a98:	bl	1408c <fprintf@plt>
   17a9c:	ldrd	r6, [sl, #112]	; 0x70
   17aa0:	ldr	r5, [sp, #48]	; 0x30
   17aa4:	ldr	r1, [pc, #2268]	; 18388 <__flatcc_fb_codegen_c@@Base+0x2090>
   17aa8:	mov	r2, r5
   17aac:	ldr	r0, [r4, #204]	; 0xcc
   17ab0:	add	r1, pc, r1
   17ab4:	strd	r6, [sp]
   17ab8:	bl	1408c <fprintf@plt>
   17abc:	ldr	r1, [pc, #2248]	; 1838c <__flatcc_fb_codegen_c@@Base+0x2094>
   17ac0:	mov	r3, r5
   17ac4:	mov	r2, r5
   17ac8:	ldr	r0, [r4, #204]	; 0xcc
   17acc:	add	r1, pc, r1
   17ad0:	str	r4, [sp]
   17ad4:	bl	1408c <fprintf@plt>
   17ad8:	ldr	r1, [pc, #2224]	; 18390 <__flatcc_fb_codegen_c@@Base+0x2098>
   17adc:	mov	r3, r5
   17ae0:	mov	r2, r4
   17ae4:	add	r1, pc, r1
   17ae8:	ldr	r0, [r4, #204]	; 0xcc
   17aec:	bl	1408c <fprintf@plt>
   17af0:	ldr	r1, [r4, #204]	; 0xcc
   17af4:	mov	r0, #10
   17af8:	bl	140ec <fputc@plt>
   17afc:	ldr	r5, [sl, #20]
   17b00:	cmp	r5, #0
   17b04:	beq	17bd8 <__flatcc_fb_codegen_c@@Base+0x18e0>
   17b08:	ldr	r3, [pc, #2180]	; 18394 <__flatcc_fb_codegen_c@@Base+0x209c>
   17b0c:	ldr	sl, [pc, #2180]	; 18398 <__flatcc_fb_codegen_c@@Base+0x20a0>
   17b10:	add	r3, pc, r3
   17b14:	str	r3, [sp, #32]
   17b18:	ldr	r3, [pc, #2172]	; 1839c <__flatcc_fb_codegen_c@@Base+0x20a4>
   17b1c:	ldr	fp, [pc, #2172]	; 183a0 <__flatcc_fb_codegen_c@@Base+0x20a8>
   17b20:	add	r3, pc, r3
   17b24:	str	r3, [sp, #36]	; 0x24
   17b28:	ldr	r3, [pc, #2164]	; 183a4 <__flatcc_fb_codegen_c@@Base+0x20ac>
   17b2c:	add	sl, pc, sl
   17b30:	add	r3, pc, r3
   17b34:	add	fp, pc, fp
   17b38:	mov	r8, #0
   17b3c:	str	r3, [sp, #40]	; 0x28
   17b40:	str	sl, [sp, #28]
   17b44:	ldr	r3, [pc, #2140]	; 183a8 <__flatcc_fb_codegen_c@@Base+0x20b0>
   17b48:	ldr	sl, [sp, #48]	; 0x30
   17b4c:	str	fp, [sp, #48]	; 0x30
   17b50:	ldr	fp, [sp, #60]	; 0x3c
   17b54:	mov	r9, r8
   17b58:	add	r3, pc, r3
   17b5c:	str	r3, [sp, #44]	; 0x2c
   17b60:	ldrh	r3, [r5, #72]	; 0x48
   17b64:	tst	r3, #4
   17b68:	bne	17bcc <__flatcc_fb_codegen_c@@Base+0x18d4>
   17b6c:	ldrh	r1, [r5, #24]
   17b70:	ldr	r2, [r5, #4]
   17b74:	cmp	r1, #8
   17b78:	ldr	r7, [r2]
   17b7c:	ldr	r6, [r2, #4]
   17b80:	beq	17bec <__flatcc_fb_codegen_c@@Base+0x18f4>
   17b84:	cmp	r1, #14
   17b88:	bne	17bb8 <__flatcc_fb_codegen_c@@Base+0x18c0>
   17b8c:	ldr	r1, [r5, #16]
   17b90:	mov	r2, fp
   17b94:	ldr	r0, [r1, #12]
   17b98:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   17b9c:	ldr	r2, [r5, #16]
   17ba0:	ldrh	r3, [r2, #8]
   17ba4:	cmp	r3, #1
   17ba8:	beq	17f64 <__flatcc_fb_codegen_c@@Base+0x1c6c>
   17bac:	cmp	r3, #3
   17bb0:	beq	17cf4 <__flatcc_fb_codegen_c@@Base+0x19fc>
   17bb4:	ldrh	r3, [r5, #72]	; 0x48
   17bb8:	and	r3, r3, #128	; 0x80
   17bbc:	cmp	r3, #0
   17bc0:	beq	17bcc <__flatcc_fb_codegen_c@@Base+0x18d4>
   17bc4:	cmp	r9, #0
   17bc8:	beq	17cd8 <__flatcc_fb_codegen_c@@Base+0x19e0>
   17bcc:	ldr	r5, [r5]
   17bd0:	cmp	r5, #0
   17bd4:	bne	17b60 <__flatcc_fb_codegen_c@@Base+0x1868>
   17bd8:	ldr	r1, [r4, #204]	; 0xcc
   17bdc:	mov	r0, #10
   17be0:	bl	140ec <fputc@plt>
   17be4:	add	sp, sp, #516	; 0x204
   17be8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17bec:	ldr	r3, [r5, #16]
   17bf0:	cmp	r3, #5
   17bf4:	beq	17f84 <__flatcc_fb_codegen_c@@Base+0x1c8c>
   17bf8:	sub	r3, r3, #1
   17bfc:	cmp	r3, #10
   17c00:	addls	pc, pc, r3, lsl #2
   17c04:	b	18108 <__flatcc_fb_codegen_c@@Base+0x1e10>
   17c08:	b	180c0 <__flatcc_fb_codegen_c@@Base+0x1dc8>
   17c0c:	b	180ec <__flatcc_fb_codegen_c@@Base+0x1df4>
   17c10:	b	180d0 <__flatcc_fb_codegen_c@@Base+0x1dd8>
   17c14:	b	180a4 <__flatcc_fb_codegen_c@@Base+0x1dac>
   17c18:	b	18108 <__flatcc_fb_codegen_c@@Base+0x1e10>
   17c1c:	b	18050 <__flatcc_fb_codegen_c@@Base+0x1d58>
   17c20:	b	1806c <__flatcc_fb_codegen_c@@Base+0x1d74>
   17c24:	b	18088 <__flatcc_fb_codegen_c@@Base+0x1d90>
   17c28:	b	1800c <__flatcc_fb_codegen_c@@Base+0x1d14>
   17c2c:	b	18028 <__flatcc_fb_codegen_c@@Base+0x1d30>
   17c30:	b	18038 <__flatcc_fb_codegen_c@@Base+0x1d40>
   17c34:	ldr	r1, [pc, #1904]	; 183ac <__flatcc_fb_codegen_c@@Base+0x20b4>
   17c38:	ldr	r0, [r4, #204]	; 0xcc
   17c3c:	ldr	r2, [sp, #40]	; 0x28
   17c40:	str	r3, [sp]
   17c44:	add	r1, pc, r1
   17c48:	ldr	r3, [sp, #60]	; 0x3c
   17c4c:	bl	1408c <fprintf@plt>
   17c50:	b	178fc <__flatcc_fb_codegen_c@@Base+0x1604>
   17c54:	ldr	r0, [pc, #1876]	; 183b0 <__flatcc_fb_codegen_c@@Base+0x20b8>
   17c58:	ldr	r3, [r4, #204]	; 0xcc
   17c5c:	mov	r2, #16
   17c60:	mov	r1, #1
   17c64:	add	r0, pc, r0
   17c68:	bl	14014 <fwrite@plt>
   17c6c:	ldr	r1, [pc, #1856]	; 183b4 <__flatcc_fb_codegen_c@@Base+0x20bc>
   17c70:	ldr	r2, [sp, #48]	; 0x30
   17c74:	add	r1, pc, r1
   17c78:	ldr	r0, [r4, #204]	; 0xcc
   17c7c:	bl	1408c <fprintf@plt>
   17c80:	ldr	r5, [sl, #20]
   17c84:	cmp	r5, #0
   17c88:	bne	17640 <__flatcc_fb_codegen_c@@Base+0x1348>
   17c8c:	str	r5, [sp, #64]	; 0x40
   17c90:	str	r5, [sp, #32]
   17c94:	ldr	r3, [sl, #112]	; 0x70
   17c98:	ldr	r2, [sp, #32]
   17c9c:	subs	r3, r3, r2
   17ca0:	bne	18160 <__flatcc_fb_codegen_c@@Base+0x1e68>
   17ca4:	ldr	r0, [pc, #1804]	; 183b8 <__flatcc_fb_codegen_c@@Base+0x20c0>
   17ca8:	ldr	r3, [r4, #204]	; 0xcc
   17cac:	mov	r2, #3
   17cb0:	mov	r1, #1
   17cb4:	add	r0, pc, r0
   17cb8:	bl	14014 <fwrite@plt>
   17cbc:	ldr	r0, [pc, #1784]	; 183bc <__flatcc_fb_codegen_c@@Base+0x20c4>
   17cc0:	ldr	r3, [r4, #204]	; 0xcc
   17cc4:	mov	r2, #15
   17cc8:	mov	r1, #1
   17ccc:	add	r0, pc, r0
   17cd0:	bl	14014 <fwrite@plt>
   17cd4:	b	177d0 <__flatcc_fb_codegen_c@@Base+0x14d8>
   17cd8:	ldr	r3, [r4, #204]	; 0xcc
   17cdc:	mov	r2, #84	; 0x54
   17ce0:	mov	r1, #1
   17ce4:	ldr	r0, [sp, #28]
   17ce8:	bl	14014 <fwrite@plt>
   17cec:	mov	r8, #1
   17cf0:	b	17bcc <__flatcc_fb_codegen_c@@Base+0x18d4>
   17cf4:	ldr	r3, [r2, #40]	; 0x28
   17cf8:	sub	r3, r3, #1
   17cfc:	cmp	r3, #10
   17d00:	bhi	181f4 <__flatcc_fb_codegen_c@@Base+0x1efc>
   17d04:	ldr	r1, [pc, #1716]	; 183c0 <__flatcc_fb_codegen_c@@Base+0x20c8>
   17d08:	ldr	r0, [r4, #204]	; 0xcc
   17d0c:	mov	r3, sl
   17d10:	str	fp, [sp, #12]
   17d14:	stm	sp, {r6, r7, fp}
   17d18:	mov	r2, r4
   17d1c:	add	r1, pc, r1
   17d20:	bl	1408c <fprintf@plt>
   17d24:	ldr	r3, [r4, #212]	; 0xd4
   17d28:	ldr	r3, [r3, #32]
   17d2c:	cmp	r3, #0
   17d30:	bne	17d5c <__flatcc_fb_codegen_c@@Base+0x1a64>
   17d34:	ldrh	r3, [r5, #72]	; 0x48
   17d38:	tst	r3, #128	; 0x80
   17d3c:	beq	17bcc <__flatcc_fb_codegen_c@@Base+0x18d4>
   17d40:	ldr	r1, [pc, #1660]	; 183c4 <__flatcc_fb_codegen_c@@Base+0x20cc>
   17d44:	ldr	r0, [r4, #204]	; 0xcc
   17d48:	mov	r3, sl
   17d4c:	stm	sp, {r6, r7, fp}
   17d50:	mov	r2, r4
   17d54:	add	r1, pc, r1
   17d58:	bl	1408c <fprintf@plt>
   17d5c:	ldrh	r3, [r5, #72]	; 0x48
   17d60:	tst	r3, #128	; 0x80
   17d64:	beq	17bcc <__flatcc_fb_codegen_c@@Base+0x18d4>
   17d68:	cmp	r8, #0
   17d6c:	ldr	r3, [r4, #204]	; 0xcc
   17d70:	bne	18178 <__flatcc_fb_codegen_c@@Base+0x1e80>
   17d74:	ldr	r0, [pc, #1612]	; 183c8 <__flatcc_fb_codegen_c@@Base+0x20d0>
   17d78:	mov	r2, #61	; 0x3d
   17d7c:	mov	r1, #1
   17d80:	add	r0, pc, r0
   17d84:	bl	14014 <fwrite@plt>
   17d88:	ldr	r1, [pc, #1596]	; 183cc <__flatcc_fb_codegen_c@@Base+0x20d4>
   17d8c:	ldr	r0, [r4, #204]	; 0xcc
   17d90:	mov	r3, sl
   17d94:	stm	sp, {r6, r7, fp}
   17d98:	mov	r2, r4
   17d9c:	add	r1, pc, r1
   17da0:	bl	1408c <fprintf@plt>
   17da4:	ldr	r3, [r4, #212]	; 0xd4
   17da8:	ldr	r3, [r3, #136]	; 0x88
   17dac:	cmp	r3, #0
   17db0:	beq	17dd4 <__flatcc_fb_codegen_c@@Base+0x1adc>
   17db4:	ldr	r1, [pc, #1556]	; 183d0 <__flatcc_fb_codegen_c@@Base+0x20d8>
   17db8:	ldr	r0, [r4, #204]	; 0xcc
   17dbc:	mov	r3, sl
   17dc0:	str	sl, [sp, #12]
   17dc4:	stm	sp, {r6, r7, fp}
   17dc8:	mov	r2, r4
   17dcc:	add	r1, pc, r1
   17dd0:	bl	1408c <fprintf@plt>
   17dd4:	ldr	r1, [pc, #1528]	; 183d4 <__flatcc_fb_codegen_c@@Base+0x20dc>
   17dd8:	ldr	r0, [r4, #204]	; 0xcc
   17ddc:	mov	r3, sl
   17de0:	mov	r2, r4
   17de4:	add	r1, pc, r1
   17de8:	stm	sp, {r6, r7, fp}
   17dec:	bl	1408c <fprintf@plt>
   17df0:	ldr	r1, [pc, #1504]	; 183d8 <__flatcc_fb_codegen_c@@Base+0x20e0>
   17df4:	ldr	r0, [r4, #204]	; 0xcc
   17df8:	mov	r3, sl
   17dfc:	stm	sp, {r6, r7, fp}
   17e00:	mov	r2, r4
   17e04:	add	r1, pc, r1
   17e08:	bl	1408c <fprintf@plt>
   17e0c:	ldr	r3, [r4, #212]	; 0xd4
   17e10:	ldr	r3, [r3, #136]	; 0x88
   17e14:	cmp	r3, #0
   17e18:	bne	1824c <__flatcc_fb_codegen_c@@Base+0x1f54>
   17e1c:	mov	r8, #1
   17e20:	mov	r9, r8
   17e24:	b	17bcc <__flatcc_fb_codegen_c@@Base+0x18d4>
   17e28:	ldr	r3, [pc, #1452]	; 183dc <__flatcc_fb_codegen_c@@Base+0x20e4>
   17e2c:	add	r3, pc, r3
   17e30:	b	178c8 <__flatcc_fb_codegen_c@@Base+0x15d0>
   17e34:	ldr	r3, [pc, #1444]	; 183e0 <__flatcc_fb_codegen_c@@Base+0x20e8>
   17e38:	mov	r2, r4
   17e3c:	add	r3, pc, r3
   17e40:	ldr	r1, [sp, #36]	; 0x24
   17e44:	cmp	r1, #0
   17e48:	beq	17f44 <__flatcc_fb_codegen_c@@Base+0x1c4c>
   17e4c:	ldr	r1, [pc, #1424]	; 183e4 <__flatcc_fb_codegen_c@@Base+0x20ec>
   17e50:	ldr	r0, [r4, #204]	; 0xcc
   17e54:	add	r1, pc, r1
   17e58:	bl	1408c <fprintf@plt>
   17e5c:	b	178fc <__flatcc_fb_codegen_c@@Base+0x1604>
   17e60:	ldr	r2, [pc, #1408]	; 183e8 <__flatcc_fb_codegen_c@@Base+0x20f0>
   17e64:	ldr	r3, [pc, #1408]	; 183ec <__flatcc_fb_codegen_c@@Base+0x20f4>
   17e68:	add	r2, pc, r2
   17e6c:	add	r3, pc, r3
   17e70:	b	17e40 <__flatcc_fb_codegen_c@@Base+0x1b48>
   17e74:	ldr	r2, [pc, #1396]	; 183f0 <__flatcc_fb_codegen_c@@Base+0x20f8>
   17e78:	ldr	r3, [pc, #1396]	; 183f4 <__flatcc_fb_codegen_c@@Base+0x20fc>
   17e7c:	add	r2, pc, r2
   17e80:	add	r3, pc, r3
   17e84:	b	17e40 <__flatcc_fb_codegen_c@@Base+0x1b48>
   17e88:	ldr	r2, [pc, #1384]	; 183f8 <__flatcc_fb_codegen_c@@Base+0x2100>
   17e8c:	ldr	r3, [pc, #1384]	; 183fc <__flatcc_fb_codegen_c@@Base+0x2104>
   17e90:	add	r2, pc, r2
   17e94:	add	r3, pc, r3
   17e98:	b	17e40 <__flatcc_fb_codegen_c@@Base+0x1b48>
   17e9c:	ldr	r2, [pc, #1372]	; 18400 <__flatcc_fb_codegen_c@@Base+0x2108>
   17ea0:	ldr	r3, [pc, #1372]	; 18404 <__flatcc_fb_codegen_c@@Base+0x210c>
   17ea4:	add	r2, pc, r2
   17ea8:	add	r3, pc, r3
   17eac:	b	17e40 <__flatcc_fb_codegen_c@@Base+0x1b48>
   17eb0:	ldr	r2, [pc, #1360]	; 18408 <__flatcc_fb_codegen_c@@Base+0x2110>
   17eb4:	ldr	r3, [pc, #1360]	; 1840c <__flatcc_fb_codegen_c@@Base+0x2114>
   17eb8:	add	r2, pc, r2
   17ebc:	add	r3, pc, r3
   17ec0:	b	17e40 <__flatcc_fb_codegen_c@@Base+0x1b48>
   17ec4:	ldr	r2, [pc, #1348]	; 18410 <__flatcc_fb_codegen_c@@Base+0x2118>
   17ec8:	ldr	r3, [pc, #1348]	; 18414 <__flatcc_fb_codegen_c@@Base+0x211c>
   17ecc:	add	r2, pc, r2
   17ed0:	add	r3, pc, r3
   17ed4:	b	17e40 <__flatcc_fb_codegen_c@@Base+0x1b48>
   17ed8:	ldr	r2, [pc, #1336]	; 18418 <__flatcc_fb_codegen_c@@Base+0x2120>
   17edc:	ldr	r3, [pc, #1336]	; 1841c <__flatcc_fb_codegen_c@@Base+0x2124>
   17ee0:	add	r2, pc, r2
   17ee4:	add	r3, pc, r3
   17ee8:	b	17e40 <__flatcc_fb_codegen_c@@Base+0x1b48>
   17eec:	ldr	r2, [pc, #1108]	; 18348 <__flatcc_fb_codegen_c@@Base+0x2050>
   17ef0:	ldr	r1, [sp, #68]	; 0x44
   17ef4:	ldr	r3, [pc, #1316]	; 18420 <__flatcc_fb_codegen_c@@Base+0x2128>
   17ef8:	ldr	r4, [pc, #1316]	; 18424 <__flatcc_fb_codegen_c@@Base+0x212c>
   17efc:	ldr	r1, [r1, r2]
   17f00:	add	r3, pc, r3
   17f04:	str	r3, [sp]
   17f08:	ldr	r0, [r1]
   17f0c:	ldr	r1, [pc, #1300]	; 18428 <__flatcc_fb_codegen_c@@Base+0x2130>
   17f10:	add	r4, pc, r4
   17f14:	mov	r2, r4
   17f18:	mov	r3, #141	; 0x8d
   17f1c:	add	r1, pc, r1
   17f20:	bl	1408c <fprintf@plt>
   17f24:	ldr	r3, [pc, #1280]	; 1842c <__flatcc_fb_codegen_c@@Base+0x2134>
   17f28:	ldr	r0, [pc, #1280]	; 18430 <__flatcc_fb_codegen_c@@Base+0x2138>
   17f2c:	add	r3, pc, r3
   17f30:	mov	r1, r4
   17f34:	add	r3, r3, #32
   17f38:	mov	r2, #141	; 0x8d
   17f3c:	add	r0, pc, r0
   17f40:	bl	14140 <__assert_fail@plt>
   17f44:	ldr	r1, [pc, #1256]	; 18434 <__flatcc_fb_codegen_c@@Base+0x213c>
   17f48:	ldr	r0, [r4, #204]	; 0xcc
   17f4c:	add	r1, pc, r1
   17f50:	str	r3, [sp]
   17f54:	mov	r3, r2
   17f58:	ldr	r2, [sp, #40]	; 0x28
   17f5c:	bl	1408c <fprintf@plt>
   17f60:	b	178fc <__flatcc_fb_codegen_c@@Base+0x1604>
   17f64:	ldr	r1, [pc, #1228]	; 18438 <__flatcc_fb_codegen_c@@Base+0x2140>
   17f68:	ldr	r0, [r4, #204]	; 0xcc
   17f6c:	mov	r3, sl
   17f70:	stm	sp, {r6, r7, fp}
   17f74:	mov	r2, r4
   17f78:	add	r1, pc, r1
   17f7c:	bl	1408c <fprintf@plt>
   17f80:	b	17bb4 <__flatcc_fb_codegen_c@@Base+0x18bc>
   17f84:	ldr	r3, [pc, #1200]	; 1843c <__flatcc_fb_codegen_c@@Base+0x2144>
   17f88:	ldr	r2, [pc, #1200]	; 18440 <__flatcc_fb_codegen_c@@Base+0x2148>
   17f8c:	mov	r1, r4
   17f90:	add	r3, pc, r3
   17f94:	add	r2, pc, r2
   17f98:	ldr	r0, [r4, #204]	; 0xcc
   17f9c:	str	r1, [sp, #16]
   17fa0:	ldr	r1, [pc, #1180]	; 18444 <__flatcc_fb_codegen_c@@Base+0x214c>
   17fa4:	str	r3, [sp, #20]
   17fa8:	str	r2, [sp, #12]
   17fac:	mov	r3, sl
   17fb0:	str	r4, [sp, #8]
   17fb4:	stm	sp, {r6, r7}
   17fb8:	mov	r2, r4
   17fbc:	add	r1, pc, r1
   17fc0:	bl	1408c <fprintf@plt>
   17fc4:	ldrh	r3, [r5, #72]	; 0x48
   17fc8:	and	r3, r3, #128	; 0x80
   17fcc:	b	17bbc <__flatcc_fb_codegen_c@@Base+0x18c4>
   17fd0:	ldr	r2, [pc, #1136]	; 18448 <__flatcc_fb_codegen_c@@Base+0x2150>
   17fd4:	ldr	r3, [pc, #1136]	; 1844c <__flatcc_fb_codegen_c@@Base+0x2154>
   17fd8:	add	r2, pc, r2
   17fdc:	add	r3, pc, r3
   17fe0:	b	17e40 <__flatcc_fb_codegen_c@@Base+0x1b48>
   17fe4:	ldr	r2, [pc, #1124]	; 18450 <__flatcc_fb_codegen_c@@Base+0x2158>
   17fe8:	ldr	r3, [pc, #1124]	; 18454 <__flatcc_fb_codegen_c@@Base+0x215c>
   17fec:	add	r2, pc, r2
   17ff0:	add	r3, pc, r3
   17ff4:	b	17e40 <__flatcc_fb_codegen_c@@Base+0x1b48>
   17ff8:	ldr	r2, [pc, #1112]	; 18458 <__flatcc_fb_codegen_c@@Base+0x2160>
   17ffc:	ldr	r3, [pc, #1112]	; 1845c <__flatcc_fb_codegen_c@@Base+0x2164>
   18000:	add	r2, pc, r2
   18004:	add	r3, pc, r3
   18008:	b	17e40 <__flatcc_fb_codegen_c@@Base+0x1b48>
   1800c:	ldr	r3, [pc, #1100]	; 18460 <__flatcc_fb_codegen_c@@Base+0x2168>
   18010:	ldr	r1, [pc, #1100]	; 18464 <__flatcc_fb_codegen_c@@Base+0x216c>
   18014:	ldr	r2, [pc, #1100]	; 18468 <__flatcc_fb_codegen_c@@Base+0x2170>
   18018:	add	r3, pc, r3
   1801c:	add	r1, pc, r1
   18020:	add	r2, pc, r2
   18024:	b	17f98 <__flatcc_fb_codegen_c@@Base+0x1ca0>
   18028:	ldr	r2, [sp, #48]	; 0x30
   1802c:	ldr	r1, [sp, #44]	; 0x2c
   18030:	mov	r3, r2
   18034:	b	17f98 <__flatcc_fb_codegen_c@@Base+0x1ca0>
   18038:	ldr	r3, [pc, #1068]	; 1846c <__flatcc_fb_codegen_c@@Base+0x2174>
   1803c:	ldr	r1, [pc, #1068]	; 18470 <__flatcc_fb_codegen_c@@Base+0x2178>
   18040:	add	r3, pc, r3
   18044:	add	r1, pc, r1
   18048:	mov	r2, r3
   1804c:	b	17f98 <__flatcc_fb_codegen_c@@Base+0x1ca0>
   18050:	ldr	r3, [pc, #1052]	; 18474 <__flatcc_fb_codegen_c@@Base+0x217c>
   18054:	ldr	r1, [pc, #1052]	; 18478 <__flatcc_fb_codegen_c@@Base+0x2180>
   18058:	ldr	r2, [pc, #1052]	; 1847c <__flatcc_fb_codegen_c@@Base+0x2184>
   1805c:	add	r3, pc, r3
   18060:	add	r1, pc, r1
   18064:	add	r2, pc, r2
   18068:	b	17f98 <__flatcc_fb_codegen_c@@Base+0x1ca0>
   1806c:	ldr	r3, [pc, #1036]	; 18480 <__flatcc_fb_codegen_c@@Base+0x2188>
   18070:	ldr	r1, [pc, #1036]	; 18484 <__flatcc_fb_codegen_c@@Base+0x218c>
   18074:	ldr	r2, [pc, #1036]	; 18488 <__flatcc_fb_codegen_c@@Base+0x2190>
   18078:	add	r3, pc, r3
   1807c:	add	r1, pc, r1
   18080:	add	r2, pc, r2
   18084:	b	17f98 <__flatcc_fb_codegen_c@@Base+0x1ca0>
   18088:	ldr	r3, [pc, #1020]	; 1848c <__flatcc_fb_codegen_c@@Base+0x2194>
   1808c:	ldr	r1, [pc, #1020]	; 18490 <__flatcc_fb_codegen_c@@Base+0x2198>
   18090:	ldr	r2, [pc, #1020]	; 18494 <__flatcc_fb_codegen_c@@Base+0x219c>
   18094:	add	r3, pc, r3
   18098:	add	r1, pc, r1
   1809c:	add	r2, pc, r2
   180a0:	b	17f98 <__flatcc_fb_codegen_c@@Base+0x1ca0>
   180a4:	ldr	r3, [pc, #1004]	; 18498 <__flatcc_fb_codegen_c@@Base+0x21a0>
   180a8:	ldr	r1, [pc, #1004]	; 1849c <__flatcc_fb_codegen_c@@Base+0x21a4>
   180ac:	ldr	r2, [pc, #1004]	; 184a0 <__flatcc_fb_codegen_c@@Base+0x21a8>
   180b0:	add	r3, pc, r3
   180b4:	add	r1, pc, r1
   180b8:	add	r2, pc, r2
   180bc:	b	17f98 <__flatcc_fb_codegen_c@@Base+0x1ca0>
   180c0:	ldr	r3, [sp, #32]
   180c4:	ldr	r1, [sp, #36]	; 0x24
   180c8:	ldr	r2, [sp, #40]	; 0x28
   180cc:	b	17f98 <__flatcc_fb_codegen_c@@Base+0x1ca0>
   180d0:	ldr	r3, [pc, #972]	; 184a4 <__flatcc_fb_codegen_c@@Base+0x21ac>
   180d4:	ldr	r1, [pc, #972]	; 184a8 <__flatcc_fb_codegen_c@@Base+0x21b0>
   180d8:	ldr	r2, [pc, #972]	; 184ac <__flatcc_fb_codegen_c@@Base+0x21b4>
   180dc:	add	r3, pc, r3
   180e0:	add	r1, pc, r1
   180e4:	add	r2, pc, r2
   180e8:	b	17f98 <__flatcc_fb_codegen_c@@Base+0x1ca0>
   180ec:	ldr	r3, [pc, #956]	; 184b0 <__flatcc_fb_codegen_c@@Base+0x21b8>
   180f0:	ldr	r1, [pc, #956]	; 184b4 <__flatcc_fb_codegen_c@@Base+0x21bc>
   180f4:	ldr	r2, [pc, #956]	; 184b8 <__flatcc_fb_codegen_c@@Base+0x21c0>
   180f8:	add	r3, pc, r3
   180fc:	add	r1, pc, r1
   18100:	add	r2, pc, r2
   18104:	b	17f98 <__flatcc_fb_codegen_c@@Base+0x1ca0>
   18108:	ldr	r2, [pc, #568]	; 18348 <__flatcc_fb_codegen_c@@Base+0x2050>
   1810c:	ldr	r1, [sp, #68]	; 0x44
   18110:	ldr	r3, [pc, #932]	; 184bc <__flatcc_fb_codegen_c@@Base+0x21c4>
   18114:	ldr	r4, [pc, #932]	; 184c0 <__flatcc_fb_codegen_c@@Base+0x21c8>
   18118:	ldr	r1, [r1, r2]
   1811c:	add	r3, pc, r3
   18120:	str	r3, [sp]
   18124:	ldr	r0, [r1]
   18128:	ldr	r1, [pc, #916]	; 184c4 <__flatcc_fb_codegen_c@@Base+0x21cc>
   1812c:	add	r4, pc, r4
   18130:	mov	r2, r4
   18134:	mov	r3, #141	; 0x8d
   18138:	add	r1, pc, r1
   1813c:	bl	1408c <fprintf@plt>
   18140:	ldr	r3, [pc, #896]	; 184c8 <__flatcc_fb_codegen_c@@Base+0x21d0>
   18144:	ldr	r0, [pc, #896]	; 184cc <__flatcc_fb_codegen_c@@Base+0x21d4>
   18148:	add	r3, pc, r3
   1814c:	mov	r1, r4
   18150:	add	r3, r3, #32
   18154:	mov	r2, #141	; 0x8d
   18158:	add	r0, pc, r0
   1815c:	bl	14140 <__assert_fail@plt>
   18160:	ldr	r1, [pc, #872]	; 184d0 <__flatcc_fb_codegen_c@@Base+0x21d8>
   18164:	ldr	r2, [sp, #64]	; 0x40
   18168:	add	r1, pc, r1
   1816c:	ldr	r0, [r4, #204]	; 0xcc
   18170:	bl	1408c <fprintf@plt>
   18174:	b	17ca4 <__flatcc_fb_codegen_c@@Base+0x19ac>
   18178:	ldr	r0, [pc, #852]	; 184d4 <__flatcc_fb_codegen_c@@Base+0x21dc>
   1817c:	mov	r2, #66	; 0x42
   18180:	mov	r1, #1
   18184:	add	r0, pc, r0
   18188:	bl	14014 <fwrite@plt>
   1818c:	ldr	r0, [pc, #836]	; 184d8 <__flatcc_fb_codegen_c@@Base+0x21e0>
   18190:	ldr	r3, [r4, #204]	; 0xcc
   18194:	mov	r2, #61	; 0x3d
   18198:	mov	r1, #1
   1819c:	add	r0, pc, r0
   181a0:	bl	14014 <fwrite@plt>
   181a4:	ldr	r1, [pc, #816]	; 184dc <__flatcc_fb_codegen_c@@Base+0x21e4>
   181a8:	ldr	r0, [r4, #204]	; 0xcc
   181ac:	mov	r3, sl
   181b0:	stm	sp, {r6, r7, fp}
   181b4:	mov	r2, r4
   181b8:	add	r1, pc, r1
   181bc:	bl	1408c <fprintf@plt>
   181c0:	ldr	r3, [r4, #212]	; 0xd4
   181c4:	ldr	r3, [r3, #136]	; 0x88
   181c8:	cmp	r3, #0
   181cc:	beq	17e1c <__flatcc_fb_codegen_c@@Base+0x1b24>
   181d0:	ldr	r1, [pc, #776]	; 184e0 <__flatcc_fb_codegen_c@@Base+0x21e8>
   181d4:	ldr	r0, [r4, #204]	; 0xcc
   181d8:	mov	r3, sl
   181dc:	str	sl, [sp, #12]
   181e0:	stm	sp, {r6, r7, fp}
   181e4:	mov	r2, r4
   181e8:	add	r1, pc, r1
   181ec:	bl	1408c <fprintf@plt>
   181f0:	b	17e1c <__flatcc_fb_codegen_c@@Base+0x1b24>
   181f4:	ldr	r2, [pc, #332]	; 18348 <__flatcc_fb_codegen_c@@Base+0x2050>
   181f8:	ldr	r1, [sp, #68]	; 0x44
   181fc:	ldr	r3, [pc, #736]	; 184e4 <__flatcc_fb_codegen_c@@Base+0x21ec>
   18200:	ldr	r4, [pc, #736]	; 184e8 <__flatcc_fb_codegen_c@@Base+0x21f0>
   18204:	ldr	r1, [r1, r2]
   18208:	add	r3, pc, r3
   1820c:	str	r3, [sp]
   18210:	ldr	r0, [r1]
   18214:	ldr	r1, [pc, #720]	; 184ec <__flatcc_fb_codegen_c@@Base+0x21f4>
   18218:	add	r4, pc, r4
   1821c:	mov	r2, r4
   18220:	mov	r3, #96	; 0x60
   18224:	add	r1, pc, r1
   18228:	bl	1408c <fprintf@plt>
   1822c:	ldr	r3, [pc, #700]	; 184f0 <__flatcc_fb_codegen_c@@Base+0x21f8>
   18230:	ldr	r0, [pc, #700]	; 184f4 <__flatcc_fb_codegen_c@@Base+0x21fc>
   18234:	add	r3, pc, r3
   18238:	mov	r1, r4
   1823c:	add	r3, r3, #92	; 0x5c
   18240:	mov	r2, #96	; 0x60
   18244:	add	r0, pc, r0
   18248:	bl	14140 <__assert_fail@plt>
   1824c:	ldr	r1, [pc, #676]	; 184f8 <__flatcc_fb_codegen_c@@Base+0x2200>
   18250:	ldr	r0, [r4, #204]	; 0xcc
   18254:	mov	r3, sl
   18258:	stm	sp, {r6, r7}
   1825c:	mov	r2, sl
   18260:	add	r1, pc, r1
   18264:	mov	r8, #1
   18268:	bl	1408c <fprintf@plt>
   1826c:	mov	r9, r8
   18270:	b	17bcc <__flatcc_fb_codegen_c@@Base+0x18d4>
   18274:	ldr	r3, [pc, #640]	; 184fc <__flatcc_fb_codegen_c@@Base+0x2204>
   18278:	ldr	r1, [pc, #640]	; 18500 <__flatcc_fb_codegen_c@@Base+0x2208>
   1827c:	ldr	r0, [pc, #640]	; 18504 <__flatcc_fb_codegen_c@@Base+0x220c>
   18280:	add	r3, pc, r3
   18284:	ldr	r2, [pc, #636]	; 18508 <__flatcc_fb_codegen_c@@Base+0x2210>
   18288:	add	r3, r3, #80	; 0x50
   1828c:	add	r1, pc, r1
   18290:	add	r0, pc, r0
   18294:	bl	14140 <__assert_fail@plt>
   18298:	ldr	r3, [pc, #620]	; 1850c <__flatcc_fb_codegen_c@@Base+0x2214>
   1829c:	ldr	r1, [pc, #620]	; 18510 <__flatcc_fb_codegen_c@@Base+0x2218>
   182a0:	ldr	r0, [pc, #620]	; 18514 <__flatcc_fb_codegen_c@@Base+0x221c>
   182a4:	add	r3, pc, r3
   182a8:	mov	r2, #936	; 0x3a8
   182ac:	add	r3, r3, #80	; 0x50
   182b0:	add	r1, pc, r1
   182b4:	add	r0, pc, r0
   182b8:	bl	14140 <__assert_fail@plt>
   182bc:	ldr	r3, [pc, #596]	; 18518 <__flatcc_fb_codegen_c@@Base+0x2220>
   182c0:	ldr	r1, [pc, #596]	; 1851c <__flatcc_fb_codegen_c@@Base+0x2224>
   182c4:	ldr	r0, [pc, #596]	; 18520 <__flatcc_fb_codegen_c@@Base+0x2228>
   182c8:	add	r3, pc, r3
   182cc:	ldr	r2, [pc, #592]	; 18524 <__flatcc_fb_codegen_c@@Base+0x222c>
   182d0:	add	r3, r3, #80	; 0x50
   182d4:	add	r1, pc, r1
   182d8:	add	r0, pc, r0
   182dc:	bl	14140 <__assert_fail@plt>
   182e0:	andeq	r3, r5, r4, ror #21
   182e4:	muleq	r2, ip, r9
   182e8:	andeq	r3, r3, ip, asr #11
   182ec:	andeq	r3, r3, r8, asr #11
   182f0:	andeq	r9, r2, r4, lsl #19
   182f4:	andeq	r1, r3, r0, lsl sp
   182f8:	andeq	sl, r2, r8, lsr r3
   182fc:	andeq	r9, r2, r0, lsr #27
   18300:	muleq	r2, r0, sp
   18304:			; <UNDEFINED> instruction: 0x000298b0
   18308:	andeq	r9, r2, r0, ror sp
   1830c:	muleq	r2, r4, r8
   18310:	andeq	r1, r3, r0, lsr #24
   18314:			; <UNDEFINED> instruction: 0x0002a2b8
   18318:	ldrdeq	sl, [r2], -r4
   1831c:	andeq	r2, r3, r4, lsl r1
   18320:	andeq	r9, r2, ip, ror #25
   18324:	andeq	r9, r2, r0, lsl sp
   18328:	andeq	r9, r2, ip, asr #26
   1832c:	andeq	r9, r2, r4, ror sp
   18330:	andeq	sl, r2, r0, lsl #2
   18334:	strdeq	r9, [r2], -ip
   18338:	muleq	r2, r0, fp
   1833c:	andeq	r9, r2, r4, asr #23
   18340:	andeq	r9, r2, r8, lsr fp
   18344:	andeq	r9, r2, r4, asr fp
   18348:	andeq	r0, r0, r0, lsr #1
   1834c:	andeq	r9, r2, ip, lsr r5
   18350:	andeq	r9, r2, r4, lsr #3
   18354:	andeq	r9, r2, r4, lsl r5
   18358:	andeq	r0, r0, r5, lsl #8
   1835c:	andeq	r9, r2, r8, asr #1
   18360:	strdeq	r1, [r3], -r4
   18364:	andeq	r9, r2, ip, lsl #1
   18368:	andeq	r9, r2, r0, asr #2
   1836c:	andeq	r9, r2, r4, asr #16
   18370:	andeq	r0, r0, sl, lsr #7
   18374:			; <UNDEFINED> instruction: 0x000299bc
   18378:	andeq	r9, r2, ip, lsr #16
   1837c:	andeq	r9, r2, r4, ror r8
   18380:	andeq	r9, r2, ip, lsr #17
   18384:	ldrdeq	r9, [r2], -r0
   18388:	andeq	r9, r2, ip, asr fp
   1838c:	andeq	r9, r2, r4, ror fp
   18390:	muleq	r2, ip, fp
   18394:	andeq	r9, r2, r8, lsr #4
   18398:			; <UNDEFINED> instruction: 0x00029db8
   1839c:	andeq	r3, r3, r0, lsr #32
   183a0:	andeq	r9, r2, r0, ror #4
   183a4:	muleq	r2, r8, r6
   183a8:	andeq	r2, r3, r8, ror #31
   183ac:	andeq	r9, r2, r8, asr #16
   183b0:	andeq	r9, r2, r0, asr r7
   183b4:	andeq	r9, r2, r4, asr r7
   183b8:	andeq	r1, r3, r8, lsr #24
   183bc:	andeq	r9, r2, r0, ror ip
   183c0:			; <UNDEFINED> instruction: 0x000299b4
   183c4:			; <UNDEFINED> instruction: 0x000299b8
   183c8:	andeq	r9, r2, r8, lsl #20
   183cc:	andeq	r9, r2, ip, lsr #20
   183d0:	strdeq	r9, [r2], -r4
   183d4:	andeq	r9, r2, ip, lsl sl
   183d8:	andeq	r9, r2, ip, lsr sl
   183dc:	andeq	r2, r3, r4, lsl sp
   183e0:	andeq	r8, r2, r8, lsr #30
   183e4:	andeq	r9, r2, ip, lsr #11
   183e8:	ldrdeq	r2, [r3], -r8
   183ec:	andeq	r8, r2, r0, lsl #30
   183f0:	andeq	r2, r3, r4, asr #25
   183f4:	andeq	r8, r2, ip, lsl #30
   183f8:			; <UNDEFINED> instruction: 0x00032cb0
   183fc:	andeq	r8, r2, r8, asr #29
   18400:	muleq	r3, ip, ip
   18404:	andeq	r8, r2, ip, ror #29
   18408:	andeq	r2, r3, r8, lsl #25
   1840c:	andeq	r8, r2, r8, asr #29
   18410:	andeq	r2, r3, r4, ror ip
   18414:	andeq	r8, r2, ip, lsr #29
   18418:	andeq	r2, r3, r0, ror #24
   1841c:	muleq	r2, r0, lr
   18420:	andeq	r8, r2, r8, asr #31
   18424:	andeq	r8, r2, ip, asr #30
   18428:	andeq	r8, r2, r0, lsr #31
   1842c:	andeq	r8, r2, r4, asr fp
   18430:	andeq	r1, r3, r0, lsl #7
   18434:	andeq	r9, r2, r0, asr #9
   18438:	andeq	r9, r2, r4, lsr r9
   1843c:	ldrdeq	r8, [r2], -r4
   18440:	andeq	r1, r4, r4, ror r5
   18444:	ldrdeq	r9, [r2], -ip
   18448:	andeq	r2, r3, r8, ror #22
   1844c:	andeq	r8, r2, r4, ror sp
   18450:	andeq	r2, r3, r4, asr fp
   18454:	andeq	r8, r2, r8, asr #26
   18458:	andeq	r2, r3, r0, asr #22
   1845c:	andeq	r8, r2, r0, asr #26
   18460:	andeq	r8, r2, ip, ror #26
   18464:	andeq	r2, r3, r4, lsr #22
   18468:	andeq	r9, r2, r0, ror #3
   1846c:	andeq	r8, r2, ip, asr #26
   18470:	strdeq	r2, [r3], -ip
   18474:	andeq	r8, r2, r0, lsl sp
   18478:	andeq	r2, r3, r0, ror #21
   1847c:	andeq	r9, r2, r4, lsl #3
   18480:	strdeq	r8, [r2], -ip
   18484:	andeq	r2, r3, r4, asr #21
   18488:	andeq	r9, r2, r0, ror r1
   1848c:	andeq	r8, r2, r8, ror #25
   18490:	andeq	r2, r3, r8, lsr #21
   18494:	andeq	r9, r2, ip, asr r1
   18498:	andeq	r8, r2, ip, lsr #25
   1849c:	andeq	r2, r3, ip, lsl #21
   184a0:	andeq	r9, r2, r8, lsr #2
   184a4:	andeq	r8, r2, r4, ror ip
   184a8:	andeq	r2, r3, r0, ror #20
   184ac:	strdeq	r9, [r2], -r4
   184b0:	andeq	r8, r2, ip, asr #24
   184b4:	andeq	r2, r3, r4, asr #20
   184b8:	ldrdeq	r9, [r2], -r0
   184bc:	andeq	r8, r2, ip, lsr #27
   184c0:	andeq	r8, r2, r0, lsr sp
   184c4:	andeq	r8, r2, r4, lsl #27
   184c8:	andeq	r8, r2, r8, lsr r9
   184cc:	andeq	r1, r3, r4, ror #2
   184d0:	andeq	r9, r2, r8, ror r2
   184d4:	andeq	r9, r2, r0, asr #11
   184d8:	andeq	r9, r2, ip, ror #11
   184dc:	andeq	r9, r2, r0, lsl r6
   184e0:	ldrdeq	r9, [r2], -r8
   184e4:	andeq	r8, r2, r0, asr #25
   184e8:	andeq	r8, r2, r4, asr #24
   184ec:	muleq	r2, r8, ip
   184f0:	andeq	r8, r2, ip, asr #16
   184f4:	andeq	r1, r3, r8, ror r0
   184f8:	andeq	r9, r2, r0, lsr #12
   184fc:	andeq	r8, r2, r0, lsl #16
   18500:			; <UNDEFINED> instruction: 0x000288b4
   18504:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   18508:	andeq	r0, r0, r9, lsr #7
   1850c:	ldrdeq	r8, [r2], -ip
   18510:	muleq	r2, r0, r8
   18514:	andeq	r8, r2, r4, asr pc
   18518:			; <UNDEFINED> instruction: 0x000287b8
   1851c:	andeq	r8, r2, ip, ror #16
   18520:	andeq	r9, r2, ip, asr #2
   18524:	strdeq	r0, [r0], -sl
   18528:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1852c:	sub	sp, sp, #1072	; 0x430
   18530:	ldrh	r6, [r1, #8]
   18534:	ldr	r3, [pc, #3828]	; 19430 <__flatcc_fb_codegen_c@@Base+0x3138>
   18538:	sub	sp, sp, #4
   1853c:	add	r3, pc, r3
   18540:	cmp	r6, #0
   18544:	str	r1, [sp, #56]	; 0x38
   18548:	str	r3, [sp, #68]	; 0x44
   1854c:	bne	1a308 <__flatcc_fb_codegen_c@@Base+0x4010>
   18550:	add	r5, sp, #192	; 0xc0
   18554:	mov	r4, r0
   18558:	mov	r2, #220	; 0xdc
   1855c:	mov	r0, r5
   18560:	mov	r1, r6
   18564:	add	r7, sp, #412	; 0x19c
   18568:	str	r5, [sp, #48]	; 0x30
   1856c:	str	r7, [sp, #60]	; 0x3c
   18570:	bl	140a4 <memset@plt>
   18574:	mov	r2, #220	; 0xdc
   18578:	mov	r1, r6
   1857c:	mov	r0, r7
   18580:	bl	140a4 <memset@plt>
   18584:	ldr	r1, [r4, #204]	; 0xcc
   18588:	mov	r0, #10
   1858c:	bl	140ec <fputc@plt>
   18590:	mov	r2, r5
   18594:	ldr	r5, [sp, #56]	; 0x38
   18598:	mov	r1, r5
   1859c:	ldr	r0, [r5, #12]
   185a0:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   185a4:	ldr	r5, [r5, #32]
   185a8:	cmp	r5, #0
   185ac:	beq	18654 <__flatcc_fb_codegen_c@@Base+0x235c>
   185b0:	ldr	fp, [pc, #3708]	; 19434 <__flatcc_fb_codegen_c@@Base+0x313c>
   185b4:	ldr	sl, [pc, #3708]	; 19438 <__flatcc_fb_codegen_c@@Base+0x3140>
   185b8:	ldr	r9, [pc, #3708]	; 1943c <__flatcc_fb_codegen_c@@Base+0x3144>
   185bc:	ldr	r8, [pc, #3708]	; 19440 <__flatcc_fb_codegen_c@@Base+0x3148>
   185c0:	ldr	r7, [pc, #3708]	; 19444 <__flatcc_fb_codegen_c@@Base+0x314c>
   185c4:	mov	r1, r6
   185c8:	add	fp, pc, fp
   185cc:	add	sl, pc, sl
   185d0:	add	r9, pc, r9
   185d4:	add	r8, pc, r8
   185d8:	add	r7, pc, r7
   185dc:	mov	r0, #1
   185e0:	ldr	r2, [r5, #4]
   185e4:	ldr	r3, [r2, #8]
   185e8:	cmp	r3, r1
   185ec:	beq	18610 <__flatcc_fb_codegen_c@@Base+0x2318>
   185f0:	cmp	r0, #0
   185f4:	movne	r2, r9
   185f8:	moveq	r2, fp
   185fc:	movne	r1, r8
   18600:	moveq	r1, sl
   18604:	ldr	r0, [r4, #204]	; 0xcc
   18608:	bl	1408c <fprintf@plt>
   1860c:	ldr	r2, [r5, #4]
   18610:	ldr	r3, [r2]
   18614:	mov	r1, r7
   18618:	ldr	r2, [r2, #4]
   1861c:	ldr	r0, [r4, #204]	; 0xcc
   18620:	bl	1408c <fprintf@plt>
   18624:	ldr	r3, [r5, #4]
   18628:	ldr	r5, [r5]
   1862c:	mov	r0, r6
   18630:	cmp	r5, #0
   18634:	ldr	r1, [r3, #8]
   18638:	bne	185e0 <__flatcc_fb_codegen_c@@Base+0x22e8>
   1863c:	ldr	r0, [pc, #3588]	; 19448 <__flatcc_fb_codegen_c@@Base+0x3150>
   18640:	ldr	r3, [r4, #204]	; 0xcc
   18644:	mov	r2, #4
   18648:	mov	r1, #1
   1864c:	add	r0, pc, r0
   18650:	bl	14014 <fwrite@plt>
   18654:	ldr	r5, [sp, #48]	; 0x30
   18658:	ldr	r1, [pc, #3564]	; 1944c <__flatcc_fb_codegen_c@@Base+0x3154>
   1865c:	mov	r2, r5
   18660:	add	r1, pc, r1
   18664:	ldr	r0, [r4, #204]	; 0xcc
   18668:	bl	1408c <fprintf@plt>
   1866c:	ldr	r1, [pc, #3548]	; 19450 <__flatcc_fb_codegen_c@@Base+0x3158>
   18670:	mov	r3, r5
   18674:	mov	r2, r5
   18678:	ldr	r0, [r4, #204]	; 0xcc
   1867c:	add	r1, pc, r1
   18680:	str	r4, [sp]
   18684:	bl	1408c <fprintf@plt>
   18688:	ldr	r1, [pc, #3524]	; 19454 <__flatcc_fb_codegen_c@@Base+0x315c>
   1868c:	ldr	r0, [r4, #204]	; 0xcc
   18690:	mov	r3, r5
   18694:	mov	r2, r5
   18698:	stmib	sp, {r4, r5}
   1869c:	str	r5, [sp]
   186a0:	add	r1, pc, r1
   186a4:	bl	1408c <fprintf@plt>
   186a8:	ldr	r1, [pc, #3496]	; 19458 <__flatcc_fb_codegen_c@@Base+0x3160>
   186ac:	mov	r3, r5
   186b0:	mov	r2, r4
   186b4:	add	r1, pc, r1
   186b8:	ldr	r0, [r4, #204]	; 0xcc
   186bc:	bl	1408c <fprintf@plt>
   186c0:	ldr	r1, [r4, #204]	; 0xcc
   186c4:	mov	r0, #10
   186c8:	bl	140ec <fputc@plt>
   186cc:	ldr	r3, [sp, #56]	; 0x38
   186d0:	ldr	r5, [r3, #20]
   186d4:	cmp	r5, #0
   186d8:	beq	18824 <__flatcc_fb_codegen_c@@Base+0x252c>
   186dc:	ldr	r3, [pc, #3448]	; 1945c <__flatcc_fb_codegen_c@@Base+0x3164>
   186e0:	ldr	r8, [pc, #3448]	; 19460 <__flatcc_fb_codegen_c@@Base+0x3168>
   186e4:	add	r3, pc, r3
   186e8:	str	r3, [sp, #44]	; 0x2c
   186ec:	ldr	sl, [pc, #3440]	; 19464 <__flatcc_fb_codegen_c@@Base+0x316c>
   186f0:	ldr	r9, [pc, #3440]	; 19468 <__flatcc_fb_codegen_c@@Base+0x3170>
   186f4:	ldr	fp, [pc, #3440]	; 1946c <__flatcc_fb_codegen_c@@Base+0x3174>
   186f8:	ldr	r3, [pc, #3440]	; 19470 <__flatcc_fb_codegen_c@@Base+0x3178>
   186fc:	add	r8, pc, r8
   18700:	add	r3, pc, r3
   18704:	add	sl, pc, sl
   18708:	add	r9, pc, r9
   1870c:	add	fp, pc, fp
   18710:	str	r3, [sp, #52]	; 0x34
   18714:	mov	r3, #0
   18718:	str	r3, [sp, #64]	; 0x40
   1871c:	ldr	r6, [r5, #68]	; 0x44
   18720:	cmp	r6, #0
   18724:	beq	187a4 <__flatcc_fb_codegen_c@@Base+0x24ac>
   18728:	mov	r3, #0
   1872c:	mov	r7, r3
   18730:	mov	r0, #1
   18734:	ldr	r2, [r6, #4]
   18738:	ldr	r1, [r2, #8]
   1873c:	cmp	r1, r3
   18740:	beq	18764 <__flatcc_fb_codegen_c@@Base+0x246c>
   18744:	cmp	r0, #0
   18748:	movne	r2, sl
   1874c:	ldreq	r2, [sp, #44]	; 0x2c
   18750:	movne	r1, r9
   18754:	moveq	r1, r8
   18758:	ldr	r0, [r4, #204]	; 0xcc
   1875c:	bl	1408c <fprintf@plt>
   18760:	ldr	r2, [r6, #4]
   18764:	ldr	r3, [r2]
   18768:	mov	r1, fp
   1876c:	ldr	r2, [r2, #4]
   18770:	ldr	r0, [r4, #204]	; 0xcc
   18774:	bl	1408c <fprintf@plt>
   18778:	ldr	r3, [r6, #4]
   1877c:	ldr	r6, [r6]
   18780:	mov	r0, r7
   18784:	cmp	r6, #0
   18788:	ldr	r3, [r3, #8]
   1878c:	bne	18734 <__flatcc_fb_codegen_c@@Base+0x243c>
   18790:	ldr	r3, [r4, #204]	; 0xcc
   18794:	mov	r2, #4
   18798:	mov	r1, #1
   1879c:	ldr	r0, [sp, #52]	; 0x34
   187a0:	bl	14014 <fwrite@plt>
   187a4:	ldrh	r3, [r5, #72]	; 0x48
   187a8:	ldr	r2, [r5, #4]
   187ac:	tst	r3, #4
   187b0:	ldr	r7, [r2]
   187b4:	ldr	r6, [r2, #4]
   187b8:	bne	187fc <__flatcc_fb_codegen_c@@Base+0x2504>
   187bc:	ldrh	r2, [r5, #24]
   187c0:	lsr	r3, r3, #8
   187c4:	and	r3, r3, #1
   187c8:	sub	r2, r2, #7
   187cc:	cmp	r2, #8
   187d0:	addls	pc, pc, r2, lsl #2
   187d4:	b	18b20 <__flatcc_fb_codegen_c@@Base+0x2828>
   187d8:	b	18ae0 <__flatcc_fb_codegen_c@@Base+0x27e8>
   187dc:	b	18a98 <__flatcc_fb_codegen_c@@Base+0x27a0>
   187e0:	b	18a58 <__flatcc_fb_codegen_c@@Base+0x2760>
   187e4:	b	1891c <__flatcc_fb_codegen_c@@Base+0x2624>
   187e8:	b	18b20 <__flatcc_fb_codegen_c@@Base+0x2828>
   187ec:	b	18b20 <__flatcc_fb_codegen_c@@Base+0x2828>
   187f0:	b	18b20 <__flatcc_fb_codegen_c@@Base+0x2828>
   187f4:	b	188dc <__flatcc_fb_codegen_c@@Base+0x25e4>
   187f8:	b	18830 <__flatcc_fb_codegen_c@@Base+0x2538>
   187fc:	ldr	r1, [pc, #3184]	; 19474 <__flatcc_fb_codegen_c@@Base+0x317c>
   18800:	ldr	r0, [r4, #204]	; 0xcc
   18804:	mov	r3, r6
   18808:	str	r7, [sp]
   1880c:	ldr	r2, [sp, #48]	; 0x30
   18810:	add	r1, pc, r1
   18814:	bl	1408c <fprintf@plt>
   18818:	ldr	r5, [r5]
   1881c:	cmp	r5, #0
   18820:	bne	1871c <__flatcc_fb_codegen_c@@Base+0x2424>
   18824:	add	sp, sp, #1072	; 0x430
   18828:	add	sp, sp, #4
   1882c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18830:	ldr	r1, [r5, #16]
   18834:	ldr	r2, [sp, #60]	; 0x3c
   18838:	str	r3, [sp, #72]	; 0x48
   1883c:	ldr	r0, [r1, #12]
   18840:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   18844:	ldr	r2, [r5, #16]
   18848:	ldrh	r2, [r2, #8]
   1884c:	cmp	r2, #4
   18850:	bhi	1a32c <__flatcc_fb_codegen_c@@Base+0x4034>
   18854:	mov	r1, #1
   18858:	ldr	r3, [sp, #72]	; 0x48
   1885c:	lsl	r1, r1, r2
   18860:	tst	r1, #27
   18864:	beq	1a32c <__flatcc_fb_codegen_c@@Base+0x4034>
   18868:	str	r3, [sp, #24]
   1886c:	ldr	r3, [sp, #60]	; 0x3c
   18870:	cmp	r2, #4
   18874:	str	r3, [sp, #20]
   18878:	ldr	r3, [sp, #48]	; 0x30
   1887c:	str	r7, [sp, #16]
   18880:	str	r6, [sp, #12]
   18884:	str	r3, [sp, #8]
   18888:	ldrd	r6, [r5, #96]	; 0x60
   1888c:	ldr	r0, [r4, #204]	; 0xcc
   18890:	beq	19010 <__flatcc_fb_codegen_c@@Base+0x2d18>
   18894:	ldr	r1, [pc, #3036]	; 19478 <__flatcc_fb_codegen_c@@Base+0x3180>
   18898:	mov	r2, r4
   1889c:	strd	r6, [sp]
   188a0:	add	r1, pc, r1
   188a4:	bl	1408c <fprintf@plt>
   188a8:	ldrh	r3, [r5, #72]	; 0x48
   188ac:	and	r3, r3, #128	; 0x80
   188b0:	cmp	r3, #0
   188b4:	beq	18818 <__flatcc_fb_codegen_c@@Base+0x2520>
   188b8:	ldr	r0, [pc, #3004]	; 1947c <__flatcc_fb_codegen_c@@Base+0x3184>
   188bc:	ldr	r3, [r4, #204]	; 0xcc
   188c0:	mov	r2, #84	; 0x54
   188c4:	mov	r1, #1
   188c8:	add	r0, pc, r0
   188cc:	bl	14014 <fwrite@plt>
   188d0:	mov	r3, #1
   188d4:	str	r3, [sp, #64]	; 0x40
   188d8:	b	18818 <__flatcc_fb_codegen_c@@Base+0x2520>
   188dc:	ldr	r1, [r5, #16]
   188e0:	ldr	r2, [sp, #60]	; 0x3c
   188e4:	str	r3, [sp, #72]	; 0x48
   188e8:	ldr	r0, [r1, #12]
   188ec:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   188f0:	ldr	r1, [r5, #16]
   188f4:	ldr	r3, [sp, #72]	; 0x48
   188f8:	ldrh	r2, [r1, #8]
   188fc:	cmp	r2, #4
   18900:	addls	pc, pc, r2, lsl #2
   18904:	b	18cd4 <__flatcc_fb_codegen_c@@Base+0x29dc>
   18908:	b	18c2c <__flatcc_fb_codegen_c@@Base+0x2934>
   1890c:	b	18be8 <__flatcc_fb_codegen_c@@Base+0x28f0>
   18910:	b	18cd4 <__flatcc_fb_codegen_c@@Base+0x29dc>
   18914:	b	18bc0 <__flatcc_fb_codegen_c@@Base+0x28c8>
   18918:	b	18b78 <__flatcc_fb_codegen_c@@Base+0x2880>
   1891c:	str	r3, [sp, #20]
   18920:	ldr	r3, [sp, #48]	; 0x30
   18924:	str	r7, [sp, #16]
   18928:	str	r6, [sp, #12]
   1892c:	str	r3, [sp, #8]
   18930:	ldrd	r0, [r5, #96]	; 0x60
   18934:	ldr	r3, [r4, #204]	; 0xcc
   18938:	mov	r2, r4
   1893c:	strd	r0, [sp]
   18940:	ldr	r1, [pc, #2872]	; 19480 <__flatcc_fb_codegen_c@@Base+0x3188>
   18944:	mov	r0, r3
   18948:	add	r1, pc, r1
   1894c:	bl	1408c <fprintf@plt>
   18950:	ldr	r3, [r4, #212]	; 0xd4
   18954:	ldr	r3, [r3, #32]
   18958:	cmp	r3, #0
   1895c:	bne	18988 <__flatcc_fb_codegen_c@@Base+0x2690>
   18960:	ldrh	r3, [r5, #72]	; 0x48
   18964:	tst	r3, #128	; 0x80
   18968:	beq	18818 <__flatcc_fb_codegen_c@@Base+0x2520>
   1896c:	ldr	r1, [pc, #2832]	; 19484 <__flatcc_fb_codegen_c@@Base+0x318c>
   18970:	ldr	r0, [r4, #204]	; 0xcc
   18974:	ldr	r3, [sp, #48]	; 0x30
   18978:	stm	sp, {r6, r7}
   1897c:	mov	r2, r4
   18980:	add	r1, pc, r1
   18984:	bl	1408c <fprintf@plt>
   18988:	ldrh	r3, [r5, #72]	; 0x48
   1898c:	tst	r3, #128	; 0x80
   18990:	beq	18818 <__flatcc_fb_codegen_c@@Base+0x2520>
   18994:	ldr	r3, [sp, #64]	; 0x40
   18998:	cmp	r3, #0
   1899c:	bne	18c70 <__flatcc_fb_codegen_c@@Base+0x2978>
   189a0:	ldr	r1, [pc, #2784]	; 19488 <__flatcc_fb_codegen_c@@Base+0x3190>
   189a4:	ldr	r0, [r4, #204]	; 0xcc
   189a8:	ldr	r3, [sp, #48]	; 0x30
   189ac:	stm	sp, {r6, r7}
   189b0:	mov	r2, r4
   189b4:	add	r1, pc, r1
   189b8:	bl	1408c <fprintf@plt>
   189bc:	ldr	r3, [r4, #212]	; 0xd4
   189c0:	ldr	r3, [r3, #136]	; 0x88
   189c4:	cmp	r3, #0
   189c8:	beq	189e8 <__flatcc_fb_codegen_c@@Base+0x26f0>
   189cc:	ldr	r1, [pc, #2744]	; 1948c <__flatcc_fb_codegen_c@@Base+0x3194>
   189d0:	ldr	r0, [r4, #204]	; 0xcc
   189d4:	ldr	r3, [sp, #48]	; 0x30
   189d8:	stm	sp, {r6, r7}
   189dc:	mov	r2, r4
   189e0:	add	r1, pc, r1
   189e4:	bl	1408c <fprintf@plt>
   189e8:	ldr	r1, [pc, #2720]	; 19490 <__flatcc_fb_codegen_c@@Base+0x3198>
   189ec:	ldr	r0, [r4, #204]	; 0xcc
   189f0:	ldr	r3, [sp, #48]	; 0x30
   189f4:	mov	r2, r4
   189f8:	add	r1, pc, r1
   189fc:	stm	sp, {r6, r7}
   18a00:	bl	1408c <fprintf@plt>
   18a04:	ldr	r1, [pc, #2696]	; 19494 <__flatcc_fb_codegen_c@@Base+0x319c>
   18a08:	ldr	r0, [r4, #204]	; 0xcc
   18a0c:	ldr	r3, [sp, #48]	; 0x30
   18a10:	stm	sp, {r6, r7}
   18a14:	mov	r2, r4
   18a18:	add	r1, pc, r1
   18a1c:	bl	1408c <fprintf@plt>
   18a20:	ldr	r3, [r4, #212]	; 0xd4
   18a24:	ldr	r3, [r3, #136]	; 0x88
   18a28:	cmp	r3, #0
   18a2c:	beq	188d0 <__flatcc_fb_codegen_c@@Base+0x25d8>
   18a30:	ldr	r2, [sp, #48]	; 0x30
   18a34:	ldr	r1, [pc, #2652]	; 19498 <__flatcc_fb_codegen_c@@Base+0x31a0>
   18a38:	ldr	r0, [r4, #204]	; 0xcc
   18a3c:	mov	r3, r2
   18a40:	stm	sp, {r6, r7}
   18a44:	add	r1, pc, r1
   18a48:	bl	1408c <fprintf@plt>
   18a4c:	mov	r3, #1
   18a50:	str	r3, [sp, #64]	; 0x40
   18a54:	b	18818 <__flatcc_fb_codegen_c@@Base+0x2520>
   18a58:	str	r3, [sp, #24]
   18a5c:	ldr	r3, [sp, #48]	; 0x30
   18a60:	str	r4, [sp, #20]
   18a64:	str	r3, [sp, #8]
   18a68:	str	r7, [sp, #16]
   18a6c:	str	r6, [sp, #12]
   18a70:	ldrd	r6, [r5, #96]	; 0x60
   18a74:	ldr	r1, [pc, #2592]	; 1949c <__flatcc_fb_codegen_c@@Base+0x31a4>
   18a78:	ldr	r0, [r4, #204]	; 0xcc
   18a7c:	mov	r2, r4
   18a80:	strd	r6, [sp]
   18a84:	add	r1, pc, r1
   18a88:	bl	1408c <fprintf@plt>
   18a8c:	ldrh	r3, [r5, #72]	; 0x48
   18a90:	and	r3, r3, #128	; 0x80
   18a94:	b	188b0 <__flatcc_fb_codegen_c@@Base+0x25b8>
   18a98:	ldr	r2, [r5, #16]
   18a9c:	cmp	r2, #5
   18aa0:	beq	18d2c <__flatcc_fb_codegen_c@@Base+0x2a34>
   18aa4:	sub	r3, r2, #1
   18aa8:	cmp	r3, #10
   18aac:	addls	pc, pc, r3, lsl #2
   18ab0:	b	19a48 <__flatcc_fb_codegen_c@@Base+0x3750>
   18ab4:	b	1923c <__flatcc_fb_codegen_c@@Base+0x2f44>
   18ab8:	b	19370 <__flatcc_fb_codegen_c@@Base+0x3078>
   18abc:	b	19348 <__flatcc_fb_codegen_c@@Base+0x3050>
   18ac0:	b	19320 <__flatcc_fb_codegen_c@@Base+0x3028>
   18ac4:	b	19a48 <__flatcc_fb_codegen_c@@Base+0x3750>
   18ac8:	b	19264 <__flatcc_fb_codegen_c@@Base+0x2f6c>
   18acc:	b	1928c <__flatcc_fb_codegen_c@@Base+0x2f94>
   18ad0:	b	192b4 <__flatcc_fb_codegen_c@@Base+0x2fbc>
   18ad4:	b	192d8 <__flatcc_fb_codegen_c@@Base+0x2fe0>
   18ad8:	b	192fc <__flatcc_fb_codegen_c@@Base+0x3004>
   18adc:	b	19218 <__flatcc_fb_codegen_c@@Base+0x2f20>
   18ae0:	ldr	r2, [r5, #16]
   18ae4:	sub	r2, r2, #1
   18ae8:	cmp	r2, #10
   18aec:	addls	pc, pc, r2, lsl #2
   18af0:	b	1a028 <__flatcc_fb_codegen_c@@Base+0x3d30>
   18af4:	b	191e8 <__flatcc_fb_codegen_c@@Base+0x2ef0>
   18af8:	b	1908c <__flatcc_fb_codegen_c@@Base+0x2d94>
   18afc:	b	19200 <__flatcc_fb_codegen_c@@Base+0x2f08>
   18b00:	b	1920c <__flatcc_fb_codegen_c@@Base+0x2f14>
   18b04:	b	191a0 <__flatcc_fb_codegen_c@@Base+0x2ea8>
   18b08:	b	191ac <__flatcc_fb_codegen_c@@Base+0x2eb4>
   18b0c:	b	191b8 <__flatcc_fb_codegen_c@@Base+0x2ec0>
   18b10:	b	191c4 <__flatcc_fb_codegen_c@@Base+0x2ecc>
   18b14:	b	191d0 <__flatcc_fb_codegen_c@@Base+0x2ed8>
   18b18:	b	191dc <__flatcc_fb_codegen_c@@Base+0x2ee4>
   18b1c:	b	191f4 <__flatcc_fb_codegen_c@@Base+0x2efc>
   18b20:	ldr	r2, [pc, #3416]	; 19880 <__flatcc_fb_codegen_c@@Base+0x3588>
   18b24:	ldr	r1, [sp, #68]	; 0x44
   18b28:	ldr	r3, [pc, #2416]	; 194a0 <__flatcc_fb_codegen_c@@Base+0x31a8>
   18b2c:	ldr	r4, [pc, #2416]	; 194a4 <__flatcc_fb_codegen_c@@Base+0x31ac>
   18b30:	ldr	r1, [r1, r2]
   18b34:	add	r3, pc, r3
   18b38:	str	r3, [sp]
   18b3c:	ldr	r0, [r1]
   18b40:	ldr	r1, [pc, #2400]	; 194a8 <__flatcc_fb_codegen_c@@Base+0x31b0>
   18b44:	add	r4, pc, r4
   18b48:	mov	r2, r4
   18b4c:	ldr	r3, [pc, #2392]	; 194ac <__flatcc_fb_codegen_c@@Base+0x31b4>
   18b50:	add	r1, pc, r1
   18b54:	bl	1408c <fprintf@plt>
   18b58:	ldr	r3, [pc, #2384]	; 194b0 <__flatcc_fb_codegen_c@@Base+0x31b8>
   18b5c:	ldr	r0, [pc, #2384]	; 194b4 <__flatcc_fb_codegen_c@@Base+0x31bc>
   18b60:	add	r3, pc, r3
   18b64:	mov	r1, r4
   18b68:	add	r3, r3, #112	; 0x70
   18b6c:	ldr	r2, [pc, #2360]	; 194ac <__flatcc_fb_codegen_c@@Base+0x31b4>
   18b70:	add	r0, pc, r0
   18b74:	bl	14140 <__assert_fail@plt>
   18b78:	str	r3, [sp, #24]
   18b7c:	ldr	r3, [sp, #60]	; 0x3c
   18b80:	str	r7, [sp, #16]
   18b84:	str	r3, [sp, #20]
   18b88:	ldr	r3, [sp, #48]	; 0x30
   18b8c:	str	r6, [sp, #12]
   18b90:	str	r3, [sp, #8]
   18b94:	ldrd	r6, [r5, #96]	; 0x60
   18b98:	ldr	r1, [pc, #2328]	; 194b8 <__flatcc_fb_codegen_c@@Base+0x31c0>
   18b9c:	ldr	r0, [r4, #204]	; 0xcc
   18ba0:	mov	r3, r4
   18ba4:	strd	r6, [sp]
   18ba8:	mov	r2, r4
   18bac:	add	r1, pc, r1
   18bb0:	bl	1408c <fprintf@plt>
   18bb4:	ldrh	r3, [r5, #72]	; 0x48
   18bb8:	and	r3, r3, #128	; 0x80
   18bbc:	b	188b0 <__flatcc_fb_codegen_c@@Base+0x25b8>
   18bc0:	ldrh	r2, [r5, #56]	; 0x38
   18bc4:	ldr	r3, [r1, #40]	; 0x28
   18bc8:	sub	r2, r2, #3
   18bcc:	cmp	r2, #3
   18bd0:	addls	pc, pc, r2, lsl #2
   18bd4:	b	1a080 <__flatcc_fb_codegen_c@@Base+0x3d88>
   18bd8:	b	19898 <__flatcc_fb_codegen_c@@Base+0x35a0>
   18bdc:	b	193fc <__flatcc_fb_codegen_c@@Base+0x3104>
   18be0:	b	193c8 <__flatcc_fb_codegen_c@@Base+0x30d0>
   18be4:	b	19394 <__flatcc_fb_codegen_c@@Base+0x309c>
   18be8:	str	r3, [sp, #24]
   18bec:	ldr	r3, [sp, #60]	; 0x3c
   18bf0:	str	r7, [sp, #16]
   18bf4:	str	r3, [sp, #20]
   18bf8:	ldr	r3, [sp, #48]	; 0x30
   18bfc:	str	r6, [sp, #12]
   18c00:	str	r3, [sp, #8]
   18c04:	ldrd	r6, [r5, #96]	; 0x60
   18c08:	ldr	r1, [pc, #2220]	; 194bc <__flatcc_fb_codegen_c@@Base+0x31c4>
   18c0c:	ldr	r0, [r4, #204]	; 0xcc
   18c10:	mov	r2, r4
   18c14:	strd	r6, [sp]
   18c18:	add	r1, pc, r1
   18c1c:	bl	1408c <fprintf@plt>
   18c20:	ldrh	r3, [r5, #72]	; 0x48
   18c24:	and	r3, r3, #128	; 0x80
   18c28:	b	188b0 <__flatcc_fb_codegen_c@@Base+0x25b8>
   18c2c:	str	r3, [sp, #24]
   18c30:	ldr	r3, [sp, #60]	; 0x3c
   18c34:	str	r7, [sp, #16]
   18c38:	str	r3, [sp, #20]
   18c3c:	ldr	r3, [sp, #48]	; 0x30
   18c40:	str	r6, [sp, #12]
   18c44:	str	r3, [sp, #8]
   18c48:	ldrd	r6, [r5, #96]	; 0x60
   18c4c:	ldr	r1, [pc, #2156]	; 194c0 <__flatcc_fb_codegen_c@@Base+0x31c8>
   18c50:	ldr	r0, [r4, #204]	; 0xcc
   18c54:	mov	r2, r4
   18c58:	strd	r6, [sp]
   18c5c:	add	r1, pc, r1
   18c60:	bl	1408c <fprintf@plt>
   18c64:	ldrh	r3, [r5, #72]	; 0x48
   18c68:	and	r3, r3, #128	; 0x80
   18c6c:	b	188b0 <__flatcc_fb_codegen_c@@Base+0x25b8>
   18c70:	ldr	r0, [pc, #2124]	; 194c4 <__flatcc_fb_codegen_c@@Base+0x31cc>
   18c74:	ldr	r3, [r4, #204]	; 0xcc
   18c78:	mov	r2, #66	; 0x42
   18c7c:	mov	r1, #1
   18c80:	add	r0, pc, r0
   18c84:	bl	14014 <fwrite@plt>
   18c88:	ldr	r1, [pc, #2104]	; 194c8 <__flatcc_fb_codegen_c@@Base+0x31d0>
   18c8c:	ldr	r0, [r4, #204]	; 0xcc
   18c90:	ldr	r3, [sp, #48]	; 0x30
   18c94:	stm	sp, {r6, r7}
   18c98:	mov	r2, r4
   18c9c:	add	r1, pc, r1
   18ca0:	bl	1408c <fprintf@plt>
   18ca4:	ldr	r3, [r4, #212]	; 0xd4
   18ca8:	ldr	r3, [r3, #136]	; 0x88
   18cac:	cmp	r3, #0
   18cb0:	beq	188d0 <__flatcc_fb_codegen_c@@Base+0x25d8>
   18cb4:	ldr	r1, [pc, #2064]	; 194cc <__flatcc_fb_codegen_c@@Base+0x31d4>
   18cb8:	ldr	r0, [r4, #204]	; 0xcc
   18cbc:	ldr	r3, [sp, #48]	; 0x30
   18cc0:	stm	sp, {r6, r7}
   18cc4:	mov	r2, r4
   18cc8:	add	r1, pc, r1
   18ccc:	bl	1408c <fprintf@plt>
   18cd0:	b	188d0 <__flatcc_fb_codegen_c@@Base+0x25d8>
   18cd4:	ldr	r2, [pc, #2980]	; 19880 <__flatcc_fb_codegen_c@@Base+0x3588>
   18cd8:	ldr	r1, [sp, #68]	; 0x44
   18cdc:	ldr	r3, [pc, #2028]	; 194d0 <__flatcc_fb_codegen_c@@Base+0x31d8>
   18ce0:	ldr	r4, [pc, #2028]	; 194d4 <__flatcc_fb_codegen_c@@Base+0x31dc>
   18ce4:	ldr	r1, [r1, r2]
   18ce8:	add	r3, pc, r3
   18cec:	str	r3, [sp]
   18cf0:	ldr	r0, [r1]
   18cf4:	ldr	r1, [pc, #2012]	; 194d8 <__flatcc_fb_codegen_c@@Base+0x31e0>
   18cf8:	add	r4, pc, r4
   18cfc:	mov	r2, r4
   18d00:	mov	r3, #1568	; 0x620
   18d04:	add	r1, pc, r1
   18d08:	bl	1408c <fprintf@plt>
   18d0c:	ldr	r3, [pc, #1992]	; 194dc <__flatcc_fb_codegen_c@@Base+0x31e4>
   18d10:	ldr	r0, [pc, #1992]	; 194e0 <__flatcc_fb_codegen_c@@Base+0x31e8>
   18d14:	add	r3, pc, r3
   18d18:	mov	r1, r4
   18d1c:	add	r3, r3, #112	; 0x70
   18d20:	mov	r2, #1568	; 0x620
   18d24:	add	r0, pc, r0
   18d28:	bl	14140 <__assert_fail@plt>
   18d2c:	ldr	r3, [pc, #1968]	; 194e4 <__flatcc_fb_codegen_c@@Base+0x31ec>
   18d30:	str	r4, [sp, #76]	; 0x4c
   18d34:	add	r3, pc, r3
   18d38:	str	r3, [sp, #72]	; 0x48
   18d3c:	ldr	r3, [pc, #1956]	; 194e8 <__flatcc_fb_codegen_c@@Base+0x31f0>
   18d40:	add	r3, pc, r3
   18d44:	str	r3, [sp, #80]	; 0x50
   18d48:	ldrh	r3, [r5, #56]	; 0x38
   18d4c:	sub	r3, r3, #3
   18d50:	cmp	r3, #3
   18d54:	addls	pc, pc, r3, lsl #2
   18d58:	b	19034 <__flatcc_fb_codegen_c@@Base+0x2d3c>
   18d5c:	b	18dc4 <__flatcc_fb_codegen_c@@Base+0x2acc>
   18d60:	b	18fdc <__flatcc_fb_codegen_c@@Base+0x2ce4>
   18d64:	b	18fa8 <__flatcc_fb_codegen_c@@Base+0x2cb0>
   18d68:	b	18d6c <__flatcc_fb_codegen_c@@Base+0x2a74>
   18d6c:	sub	r3, r2, #1
   18d70:	cmp	r3, #8
   18d74:	addls	pc, pc, r3, lsl #2
   18d78:	b	19e28 <__flatcc_fb_codegen_c@@Base+0x3b30>
   18d7c:	b	19b7c <__flatcc_fb_codegen_c@@Base+0x3884>
   18d80:	b	19b70 <__flatcc_fb_codegen_c@@Base+0x3878>
   18d84:	b	19b64 <__flatcc_fb_codegen_c@@Base+0x386c>
   18d88:	b	19b58 <__flatcc_fb_codegen_c@@Base+0x3860>
   18d8c:	b	19b4c <__flatcc_fb_codegen_c@@Base+0x3854>
   18d90:	b	19b24 <__flatcc_fb_codegen_c@@Base+0x382c>
   18d94:	b	19d40 <__flatcc_fb_codegen_c@@Base+0x3a48>
   18d98:	b	19d70 <__flatcc_fb_codegen_c@@Base+0x3a78>
   18d9c:	b	19bcc <__flatcc_fb_codegen_c@@Base+0x38d4>
   18da0:	ldr	r3, [pc, #1860]	; 194ec <__flatcc_fb_codegen_c@@Base+0x31f4>
   18da4:	add	r3, pc, r3
   18da8:	str	r3, [sp, #72]	; 0x48
   18dac:	ldr	r3, [pc, #1852]	; 194f0 <__flatcc_fb_codegen_c@@Base+0x31f8>
   18db0:	add	r3, pc, r3
   18db4:	str	r3, [sp, #80]	; 0x50
   18db8:	ldr	r3, [pc, #1844]	; 194f4 <__flatcc_fb_codegen_c@@Base+0x31fc>
   18dbc:	add	r3, pc, r3
   18dc0:	str	r3, [sp, #76]	; 0x4c
   18dc4:	ldr	r1, [pc, #1836]	; 194f8 <__flatcc_fb_codegen_c@@Base+0x3200>
   18dc8:	add	r3, sp, #92	; 0x5c
   18dcc:	str	r3, [sp, #84]	; 0x54
   18dd0:	mov	r0, r3
   18dd4:	add	r1, pc, r1
   18dd8:	ldrd	r2, [r5, #48]	; 0x30
   18ddc:	bl	140f8 <sprintf@plt>
   18de0:	ldr	r3, [sp, #84]	; 0x54
   18de4:	str	r4, [sp, #20]
   18de8:	str	r3, [sp, #36]	; 0x24
   18dec:	ldr	r3, [sp, #72]	; 0x48
   18df0:	str	r7, [sp, #16]
   18df4:	str	r3, [sp, #32]
   18df8:	ldr	r3, [sp, #76]	; 0x4c
   18dfc:	str	r6, [sp, #12]
   18e00:	str	r3, [sp, #28]
   18e04:	ldr	r3, [sp, #80]	; 0x50
   18e08:	mov	r2, r4
   18e0c:	str	r3, [sp, #24]
   18e10:	ldr	r3, [sp, #48]	; 0x30
   18e14:	str	r3, [sp, #8]
   18e18:	ldrd	r0, [r5, #96]	; 0x60
   18e1c:	ldr	r3, [r4, #204]	; 0xcc
   18e20:	strd	r0, [sp]
   18e24:	ldr	r1, [pc, #1744]	; 194fc <__flatcc_fb_codegen_c@@Base+0x3204>
   18e28:	mov	r0, r3
   18e2c:	add	r1, pc, r1
   18e30:	bl	1408c <fprintf@plt>
   18e34:	ldr	r3, [r4, #212]	; 0xd4
   18e38:	ldr	r3, [r3, #32]
   18e3c:	cmp	r3, #0
   18e40:	bne	18e7c <__flatcc_fb_codegen_c@@Base+0x2b84>
   18e44:	ldrh	r3, [r5, #72]	; 0x48
   18e48:	tst	r3, #128	; 0x80
   18e4c:	beq	18818 <__flatcc_fb_codegen_c@@Base+0x2520>
   18e50:	ldr	r3, [sp, #72]	; 0x48
   18e54:	ldr	r0, [r4, #204]	; 0xcc
   18e58:	ldr	r1, [pc, #1696]	; 19500 <__flatcc_fb_codegen_c@@Base+0x3208>
   18e5c:	str	r3, [sp, #12]
   18e60:	ldr	r3, [sp, #76]	; 0x4c
   18e64:	stm	sp, {r6, r7}
   18e68:	str	r3, [sp, #8]
   18e6c:	mov	r2, r4
   18e70:	ldr	r3, [sp, #48]	; 0x30
   18e74:	add	r1, pc, r1
   18e78:	bl	1408c <fprintf@plt>
   18e7c:	ldrh	r3, [r5, #72]	; 0x48
   18e80:	tst	r3, #128	; 0x80
   18e84:	beq	18818 <__flatcc_fb_codegen_c@@Base+0x2520>
   18e88:	ldr	r3, [sp, #64]	; 0x40
   18e8c:	cmp	r3, #0
   18e90:	ldr	r3, [r4, #204]	; 0xcc
   18e94:	bne	19f8c <__flatcc_fb_codegen_c@@Base+0x3c94>
   18e98:	ldr	r0, [pc, #1636]	; 19504 <__flatcc_fb_codegen_c@@Base+0x320c>
   18e9c:	mov	r2, #61	; 0x3d
   18ea0:	mov	r1, #1
   18ea4:	add	r0, pc, r0
   18ea8:	bl	14014 <fwrite@plt>
   18eac:	ldr	r3, [sp, #72]	; 0x48
   18eb0:	ldr	r0, [r4, #204]	; 0xcc
   18eb4:	ldr	r1, [pc, #1612]	; 19508 <__flatcc_fb_codegen_c@@Base+0x3210>
   18eb8:	str	r3, [sp, #12]
   18ebc:	ldr	r3, [sp, #76]	; 0x4c
   18ec0:	stm	sp, {r6, r7}
   18ec4:	str	r3, [sp, #8]
   18ec8:	mov	r2, r4
   18ecc:	ldr	r3, [sp, #48]	; 0x30
   18ed0:	add	r1, pc, r1
   18ed4:	bl	1408c <fprintf@plt>
   18ed8:	ldr	r3, [r4, #212]	; 0xd4
   18edc:	ldr	r3, [r3, #136]	; 0x88
   18ee0:	cmp	r3, #0
   18ee4:	beq	18f18 <__flatcc_fb_codegen_c@@Base+0x2c20>
   18ee8:	ldr	r3, [sp, #72]	; 0x48
   18eec:	ldr	r0, [r4, #204]	; 0xcc
   18ef0:	ldr	r1, [pc, #1556]	; 1950c <__flatcc_fb_codegen_c@@Base+0x3214>
   18ef4:	str	r3, [sp, #12]
   18ef8:	ldr	r3, [sp, #76]	; 0x4c
   18efc:	str	r4, [sp, #16]
   18f00:	str	r3, [sp, #8]
   18f04:	stm	sp, {r6, r7}
   18f08:	ldr	r3, [sp, #48]	; 0x30
   18f0c:	mov	r2, r4
   18f10:	add	r1, pc, r1
   18f14:	bl	1408c <fprintf@plt>
   18f18:	ldr	r3, [sp, #72]	; 0x48
   18f1c:	ldr	r2, [sp, #76]	; 0x4c
   18f20:	ldr	r1, [pc, #1512]	; 19510 <__flatcc_fb_codegen_c@@Base+0x3218>
   18f24:	ldr	r0, [r4, #204]	; 0xcc
   18f28:	add	r1, pc, r1
   18f2c:	str	r3, [sp, #12]
   18f30:	str	r2, [sp, #8]
   18f34:	ldr	r3, [sp, #48]	; 0x30
   18f38:	mov	r2, r4
   18f3c:	stm	sp, {r6, r7}
   18f40:	bl	1408c <fprintf@plt>
   18f44:	ldr	r3, [sp, #72]	; 0x48
   18f48:	ldr	r2, [sp, #76]	; 0x4c
   18f4c:	ldr	r1, [pc, #1472]	; 19514 <__flatcc_fb_codegen_c@@Base+0x321c>
   18f50:	ldr	r0, [r4, #204]	; 0xcc
   18f54:	add	r1, pc, r1
   18f58:	str	r3, [sp, #12]
   18f5c:	str	r2, [sp, #8]
   18f60:	ldr	r3, [sp, #48]	; 0x30
   18f64:	stm	sp, {r6, r7}
   18f68:	mov	r2, r4
   18f6c:	bl	1408c <fprintf@plt>
   18f70:	ldr	r3, [r4, #212]	; 0xd4
   18f74:	ldr	r3, [r3, #136]	; 0x88
   18f78:	cmp	r3, #0
   18f7c:	beq	188d0 <__flatcc_fb_codegen_c@@Base+0x25d8>
   18f80:	ldr	r2, [sp, #48]	; 0x30
   18f84:	ldr	r1, [pc, #1420]	; 19518 <__flatcc_fb_codegen_c@@Base+0x3220>
   18f88:	ldr	r0, [r4, #204]	; 0xcc
   18f8c:	mov	r3, r2
   18f90:	stm	sp, {r6, r7}
   18f94:	add	r1, pc, r1
   18f98:	bl	1408c <fprintf@plt>
   18f9c:	mov	r3, #1
   18fa0:	str	r3, [sp, #64]	; 0x40
   18fa4:	b	18818 <__flatcc_fb_codegen_c@@Base+0x2520>
   18fa8:	sub	r3, r2, #1
   18fac:	cmp	r3, #8
   18fb0:	addls	pc, pc, r3, lsl #2
   18fb4:	b	1a0d8 <__flatcc_fb_codegen_c@@Base+0x3de0>
   18fb8:	b	19c90 <__flatcc_fb_codegen_c@@Base+0x3998>
   18fbc:	b	19c84 <__flatcc_fb_codegen_c@@Base+0x398c>
   18fc0:	b	19c78 <__flatcc_fb_codegen_c@@Base+0x3980>
   18fc4:	b	19c6c <__flatcc_fb_codegen_c@@Base+0x3974>
   18fc8:	b	19c60 <__flatcc_fb_codegen_c@@Base+0x3968>
   18fcc:	b	19c54 <__flatcc_fb_codegen_c@@Base+0x395c>
   18fd0:	b	19c28 <__flatcc_fb_codegen_c@@Base+0x3930>
   18fd4:	b	19d04 <__flatcc_fb_codegen_c@@Base+0x3a0c>
   18fd8:	b	19cf8 <__flatcc_fb_codegen_c@@Base+0x3a00>
   18fdc:	sub	r3, r2, #1
   18fe0:	cmp	r3, #8
   18fe4:	addls	pc, pc, r3, lsl #2
   18fe8:	b	1a130 <__flatcc_fb_codegen_c@@Base+0x3e38>
   18fec:	b	19cec <__flatcc_fb_codegen_c@@Base+0x39f4>
   18ff0:	b	19ce0 <__flatcc_fb_codegen_c@@Base+0x39e8>
   18ff4:	b	19cd4 <__flatcc_fb_codegen_c@@Base+0x39dc>
   18ff8:	b	19cc8 <__flatcc_fb_codegen_c@@Base+0x39d0>
   18ffc:	b	19c9c <__flatcc_fb_codegen_c@@Base+0x39a4>
   19000:	b	19d34 <__flatcc_fb_codegen_c@@Base+0x3a3c>
   19004:	b	19d28 <__flatcc_fb_codegen_c@@Base+0x3a30>
   19008:	b	19d1c <__flatcc_fb_codegen_c@@Base+0x3a24>
   1900c:	b	19d10 <__flatcc_fb_codegen_c@@Base+0x3a18>
   19010:	ldr	r1, [pc, #1284]	; 1951c <__flatcc_fb_codegen_c@@Base+0x3224>
   19014:	mov	r3, r4
   19018:	strd	r6, [sp]
   1901c:	mov	r2, r4
   19020:	add	r1, pc, r1
   19024:	bl	1408c <fprintf@plt>
   19028:	ldrh	r3, [r5, #72]	; 0x48
   1902c:	and	r3, r3, #128	; 0x80
   19030:	b	188b0 <__flatcc_fb_codegen_c@@Base+0x25b8>
   19034:	ldr	r2, [pc, #2116]	; 19880 <__flatcc_fb_codegen_c@@Base+0x3588>
   19038:	ldr	r1, [sp, #68]	; 0x44
   1903c:	ldr	r3, [pc, #1244]	; 19520 <__flatcc_fb_codegen_c@@Base+0x3228>
   19040:	ldr	r4, [pc, #1244]	; 19524 <__flatcc_fb_codegen_c@@Base+0x322c>
   19044:	ldr	r1, [r1, r2]
   19048:	add	r3, pc, r3
   1904c:	str	r3, [sp]
   19050:	ldr	r0, [r1]
   19054:	ldr	r1, [pc, #1228]	; 19528 <__flatcc_fb_codegen_c@@Base+0x3230>
   19058:	add	r4, pc, r4
   1905c:	mov	r2, r4
   19060:	mov	r3, #260	; 0x104
   19064:	add	r1, pc, r1
   19068:	bl	1408c <fprintf@plt>
   1906c:	ldr	r3, [pc, #1208]	; 1952c <__flatcc_fb_codegen_c@@Base+0x3234>
   19070:	ldr	r0, [pc, #1208]	; 19530 <__flatcc_fb_codegen_c@@Base+0x3238>
   19074:	add	r3, pc, r3
   19078:	mov	r1, r4
   1907c:	add	r3, r3, #64	; 0x40
   19080:	mov	r2, #260	; 0x104
   19084:	add	r0, pc, r0
   19088:	bl	14140 <__assert_fail@plt>
   1908c:	ldr	r2, [pc, #1184]	; 19534 <__flatcc_fb_codegen_c@@Base+0x323c>
   19090:	add	r2, pc, r2
   19094:	str	r3, [sp, #28]
   19098:	ldr	r3, [sp, #48]	; 0x30
   1909c:	str	r2, [sp, #24]
   190a0:	str	r3, [sp, #8]
   190a4:	str	r4, [sp, #20]
   190a8:	str	r7, [sp, #16]
   190ac:	str	r6, [sp, #12]
   190b0:	ldrd	r6, [r5, #96]	; 0x60
   190b4:	ldr	r1, [pc, #1148]	; 19538 <__flatcc_fb_codegen_c@@Base+0x3240>
   190b8:	ldr	r0, [r4, #204]	; 0xcc
   190bc:	mov	r2, r4
   190c0:	strd	r6, [sp]
   190c4:	add	r1, pc, r1
   190c8:	bl	1408c <fprintf@plt>
   190cc:	ldr	r3, [r5, #104]	; 0x68
   190d0:	cmp	r3, #0
   190d4:	beq	19f14 <__flatcc_fb_codegen_c@@Base+0x3c1c>
   190d8:	add	r6, sp, #632	; 0x278
   190dc:	mov	r2, #220	; 0xdc
   190e0:	mov	r1, #0
   190e4:	mov	r0, r6
   190e8:	add	r7, sp, #852	; 0x354
   190ec:	str	r3, [sp, #72]	; 0x48
   190f0:	bl	140a4 <memset@plt>
   190f4:	mov	r2, #220	; 0xdc
   190f8:	mov	r0, r7
   190fc:	mov	r1, #0
   19100:	bl	140a4 <memset@plt>
   19104:	ldr	r3, [sp, #72]	; 0x48
   19108:	ldrh	r2, [r3, #8]
   1910c:	cmp	r2, #0
   19110:	beq	19f24 <__flatcc_fb_codegen_c@@Base+0x3c2c>
   19114:	cmp	r2, #1
   19118:	bne	19f34 <__flatcc_fb_codegen_c@@Base+0x3c3c>
   1911c:	ldr	r2, [pc, #1048]	; 1953c <__flatcc_fb_codegen_c@@Base+0x3244>
   19120:	add	r2, pc, r2
   19124:	str	r2, [sp, #72]	; 0x48
   19128:	mov	r1, r3
   1912c:	ldr	r0, [r3, #12]
   19130:	mov	r2, r6
   19134:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   19138:	ldr	r3, [sp, #56]	; 0x38
   1913c:	ldrh	r3, [r3, #8]
   19140:	cmp	r3, #0
   19144:	bne	1a2b0 <__flatcc_fb_codegen_c@@Base+0x3fb8>
   19148:	ldr	r3, [sp, #56]	; 0x38
   1914c:	mov	r2, r7
   19150:	mov	r1, r3
   19154:	ldr	r0, [r3, #12]
   19158:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   1915c:	ldr	r3, [r5, #4]
   19160:	ldr	r2, [sp, #72]	; 0x48
   19164:	str	r6, [sp, #8]
   19168:	str	r2, [sp, #12]
   1916c:	ldr	r2, [r3]
   19170:	ldr	r0, [r4, #204]	; 0xcc
   19174:	ldr	r1, [pc, #964]	; 19540 <__flatcc_fb_codegen_c@@Base+0x3248>
   19178:	str	r2, [sp, #4]
   1917c:	ldr	r2, [r3, #4]
   19180:	add	r1, pc, r1
   19184:	mov	r3, r7
   19188:	str	r2, [sp]
   1918c:	mov	r2, r4
   19190:	bl	1408c <fprintf@plt>
   19194:	ldrh	r3, [r5, #72]	; 0x48
   19198:	and	r3, r3, #128	; 0x80
   1919c:	b	188b0 <__flatcc_fb_codegen_c@@Base+0x25b8>
   191a0:	ldr	r2, [pc, #924]	; 19544 <__flatcc_fb_codegen_c@@Base+0x324c>
   191a4:	add	r2, pc, r2
   191a8:	b	19094 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   191ac:	ldr	r2, [pc, #916]	; 19548 <__flatcc_fb_codegen_c@@Base+0x3250>
   191b0:	add	r2, pc, r2
   191b4:	b	19094 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   191b8:	ldr	r2, [pc, #908]	; 1954c <__flatcc_fb_codegen_c@@Base+0x3254>
   191bc:	add	r2, pc, r2
   191c0:	b	19094 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   191c4:	ldr	r2, [pc, #900]	; 19550 <__flatcc_fb_codegen_c@@Base+0x3258>
   191c8:	add	r2, pc, r2
   191cc:	b	19094 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   191d0:	ldr	r2, [pc, #892]	; 19554 <__flatcc_fb_codegen_c@@Base+0x325c>
   191d4:	add	r2, pc, r2
   191d8:	b	19094 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   191dc:	ldr	r2, [pc, #884]	; 19558 <__flatcc_fb_codegen_c@@Base+0x3260>
   191e0:	add	r2, pc, r2
   191e4:	b	19094 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   191e8:	ldr	r2, [pc, #876]	; 1955c <__flatcc_fb_codegen_c@@Base+0x3264>
   191ec:	add	r2, pc, r2
   191f0:	b	19094 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   191f4:	ldr	r2, [pc, #868]	; 19560 <__flatcc_fb_codegen_c@@Base+0x3268>
   191f8:	add	r2, pc, r2
   191fc:	b	19094 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   19200:	ldr	r2, [pc, #860]	; 19564 <__flatcc_fb_codegen_c@@Base+0x326c>
   19204:	add	r2, pc, r2
   19208:	b	19094 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   1920c:	ldr	r2, [pc, #852]	; 19568 <__flatcc_fb_codegen_c@@Base+0x3270>
   19210:	add	r2, pc, r2
   19214:	b	19094 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   19218:	ldrh	r2, [r5, #56]	; 0x38
   1921c:	sub	r2, r2, #3
   19220:	cmp	r2, #3
   19224:	addls	pc, pc, r2, lsl #2
   19228:	b	19034 <__flatcc_fb_codegen_c@@Base+0x2d3c>
   1922c:	b	19aa0 <__flatcc_fb_codegen_c@@Base+0x37a8>
   19230:	b	19ae4 <__flatcc_fb_codegen_c@@Base+0x37ec>
   19234:	b	19b04 <__flatcc_fb_codegen_c@@Base+0x380c>
   19238:	b	19e28 <__flatcc_fb_codegen_c@@Base+0x3b30>
   1923c:	ldr	r3, [pc, #808]	; 1956c <__flatcc_fb_codegen_c@@Base+0x3274>
   19240:	add	r3, pc, r3
   19244:	str	r3, [sp, #72]	; 0x48
   19248:	ldr	r3, [pc, #800]	; 19570 <__flatcc_fb_codegen_c@@Base+0x3278>
   1924c:	add	r3, pc, r3
   19250:	str	r3, [sp, #76]	; 0x4c
   19254:	ldr	r3, [pc, #792]	; 19574 <__flatcc_fb_codegen_c@@Base+0x327c>
   19258:	add	r3, pc, r3
   1925c:	str	r3, [sp, #80]	; 0x50
   19260:	b	18d48 <__flatcc_fb_codegen_c@@Base+0x2a50>
   19264:	ldr	r3, [pc, #780]	; 19578 <__flatcc_fb_codegen_c@@Base+0x3280>
   19268:	add	r3, pc, r3
   1926c:	str	r3, [sp, #72]	; 0x48
   19270:	ldr	r3, [pc, #772]	; 1957c <__flatcc_fb_codegen_c@@Base+0x3284>
   19274:	add	r3, pc, r3
   19278:	str	r3, [sp, #76]	; 0x4c
   1927c:	ldr	r3, [pc, #764]	; 19580 <__flatcc_fb_codegen_c@@Base+0x3288>
   19280:	add	r3, pc, r3
   19284:	str	r3, [sp, #80]	; 0x50
   19288:	b	18d48 <__flatcc_fb_codegen_c@@Base+0x2a50>
   1928c:	ldr	r3, [pc, #752]	; 19584 <__flatcc_fb_codegen_c@@Base+0x328c>
   19290:	add	r3, pc, r3
   19294:	str	r3, [sp, #72]	; 0x48
   19298:	ldr	r3, [pc, #744]	; 19588 <__flatcc_fb_codegen_c@@Base+0x3290>
   1929c:	add	r3, pc, r3
   192a0:	str	r3, [sp, #76]	; 0x4c
   192a4:	ldr	r3, [pc, #736]	; 1958c <__flatcc_fb_codegen_c@@Base+0x3294>
   192a8:	add	r3, pc, r3
   192ac:	str	r3, [sp, #80]	; 0x50
   192b0:	b	18d48 <__flatcc_fb_codegen_c@@Base+0x2a50>
   192b4:	ldrh	r2, [r5, #56]	; 0x38
   192b8:	sub	r2, r2, #3
   192bc:	cmp	r2, #3
   192c0:	addls	pc, pc, r2, lsl #2
   192c4:	b	19034 <__flatcc_fb_codegen_c@@Base+0x2d3c>
   192c8:	b	19e0c <__flatcc_fb_codegen_c@@Base+0x3b14>
   192cc:	b	19de4 <__flatcc_fb_codegen_c@@Base+0x3aec>
   192d0:	b	19d7c <__flatcc_fb_codegen_c@@Base+0x3a84>
   192d4:	b	19d4c <__flatcc_fb_codegen_c@@Base+0x3a54>
   192d8:	ldrh	r2, [r5, #56]	; 0x38
   192dc:	sub	r2, r2, #3
   192e0:	cmp	r2, #3
   192e4:	addls	pc, pc, r2, lsl #2
   192e8:	b	19034 <__flatcc_fb_codegen_c@@Base+0x2d3c>
   192ec:	b	18da0 <__flatcc_fb_codegen_c@@Base+0x2aa8>
   192f0:	b	19c00 <__flatcc_fb_codegen_c@@Base+0x3908>
   192f4:	b	19bd8 <__flatcc_fb_codegen_c@@Base+0x38e0>
   192f8:	b	19ba8 <__flatcc_fb_codegen_c@@Base+0x38b0>
   192fc:	ldrh	r2, [r5, #56]	; 0x38
   19300:	sub	r2, r2, #3
   19304:	cmp	r2, #3
   19308:	addls	pc, pc, r2, lsl #2
   1930c:	b	19034 <__flatcc_fb_codegen_c@@Base+0x2d3c>
   19310:	b	19dc4 <__flatcc_fb_codegen_c@@Base+0x3acc>
   19314:	b	19da4 <__flatcc_fb_codegen_c@@Base+0x3aac>
   19318:	b	19b88 <__flatcc_fb_codegen_c@@Base+0x3890>
   1931c:	b	19e28 <__flatcc_fb_codegen_c@@Base+0x3b30>
   19320:	ldr	r3, [pc, #616]	; 19590 <__flatcc_fb_codegen_c@@Base+0x3298>
   19324:	add	r3, pc, r3
   19328:	str	r3, [sp, #72]	; 0x48
   1932c:	ldr	r3, [pc, #608]	; 19594 <__flatcc_fb_codegen_c@@Base+0x329c>
   19330:	add	r3, pc, r3
   19334:	str	r3, [sp, #76]	; 0x4c
   19338:	ldr	r3, [pc, #600]	; 19598 <__flatcc_fb_codegen_c@@Base+0x32a0>
   1933c:	add	r3, pc, r3
   19340:	str	r3, [sp, #80]	; 0x50
   19344:	b	18d48 <__flatcc_fb_codegen_c@@Base+0x2a50>
   19348:	ldr	r3, [pc, #588]	; 1959c <__flatcc_fb_codegen_c@@Base+0x32a4>
   1934c:	add	r3, pc, r3
   19350:	str	r3, [sp, #72]	; 0x48
   19354:	ldr	r3, [pc, #580]	; 195a0 <__flatcc_fb_codegen_c@@Base+0x32a8>
   19358:	add	r3, pc, r3
   1935c:	str	r3, [sp, #76]	; 0x4c
   19360:	ldr	r3, [pc, #572]	; 195a4 <__flatcc_fb_codegen_c@@Base+0x32ac>
   19364:	add	r3, pc, r3
   19368:	str	r3, [sp, #80]	; 0x50
   1936c:	b	18d48 <__flatcc_fb_codegen_c@@Base+0x2a50>
   19370:	ldrh	r2, [r5, #56]	; 0x38
   19374:	sub	r2, r2, #3
   19378:	cmp	r2, #3
   1937c:	addls	pc, pc, r2, lsl #2
   19380:	b	19034 <__flatcc_fb_codegen_c@@Base+0x2d3c>
   19384:	b	19ef8 <__flatcc_fb_codegen_c@@Base+0x3c00>
   19388:	b	19ed0 <__flatcc_fb_codegen_c@@Base+0x3bd8>
   1938c:	b	19ea8 <__flatcc_fb_codegen_c@@Base+0x3bb0>
   19390:	b	19e80 <__flatcc_fb_codegen_c@@Base+0x3b88>
   19394:	sub	r3, r3, #1
   19398:	cmp	r3, #8
   1939c:	addls	pc, pc, r3, lsl #2
   193a0:	b	1a530 <__flatcc_fb_codegen_c@@Base+0x4238>
   193a4:	b	1a524 <__flatcc_fb_codegen_c@@Base+0x422c>
   193a8:	b	1a518 <__flatcc_fb_codegen_c@@Base+0x4220>
   193ac:	b	1a50c <__flatcc_fb_codegen_c@@Base+0x4214>
   193b0:	b	1a500 <__flatcc_fb_codegen_c@@Base+0x4208>
   193b4:	b	1a4f4 <__flatcc_fb_codegen_c@@Base+0x41fc>
   193b8:	b	1a4e8 <__flatcc_fb_codegen_c@@Base+0x41f0>
   193bc:	b	1a4dc <__flatcc_fb_codegen_c@@Base+0x41e4>
   193c0:	b	1a2fc <__flatcc_fb_codegen_c@@Base+0x4004>
   193c4:	b	1a2d4 <__flatcc_fb_codegen_c@@Base+0x3fdc>
   193c8:	sub	r3, r3, #1
   193cc:	cmp	r3, #8
   193d0:	addls	pc, pc, r3, lsl #2
   193d4:	b	1a484 <__flatcc_fb_codegen_c@@Base+0x418c>
   193d8:	b	1a478 <__flatcc_fb_codegen_c@@Base+0x4180>
   193dc:	b	1a46c <__flatcc_fb_codegen_c@@Base+0x4174>
   193e0:	b	1a460 <__flatcc_fb_codegen_c@@Base+0x4168>
   193e4:	b	1a454 <__flatcc_fb_codegen_c@@Base+0x415c>
   193e8:	b	1a448 <__flatcc_fb_codegen_c@@Base+0x4150>
   193ec:	b	1a43c <__flatcc_fb_codegen_c@@Base+0x4144>
   193f0:	b	1a430 <__flatcc_fb_codegen_c@@Base+0x4138>
   193f4:	b	1a26c <__flatcc_fb_codegen_c@@Base+0x3f74>
   193f8:	b	1a240 <__flatcc_fb_codegen_c@@Base+0x3f48>
   193fc:	sub	r3, r3, #1
   19400:	cmp	r3, #8
   19404:	addls	pc, pc, r3, lsl #2
   19408:	b	1a3d8 <__flatcc_fb_codegen_c@@Base+0x40e0>
   1940c:	b	1a3cc <__flatcc_fb_codegen_c@@Base+0x40d4>
   19410:	b	1a3c0 <__flatcc_fb_codegen_c@@Base+0x40c8>
   19414:	b	1a3b4 <__flatcc_fb_codegen_c@@Base+0x40bc>
   19418:	b	1a3a8 <__flatcc_fb_codegen_c@@Base+0x40b0>
   1941c:	b	1a39c <__flatcc_fb_codegen_c@@Base+0x40a4>
   19420:	b	1a390 <__flatcc_fb_codegen_c@@Base+0x4098>
   19424:	b	1a384 <__flatcc_fb_codegen_c@@Base+0x408c>
   19428:	b	1a2a4 <__flatcc_fb_codegen_c@@Base+0x3fac>
   1942c:	b	1a278 <__flatcc_fb_codegen_c@@Base+0x3f80>
   19430:			; <UNDEFINED> instruction: 0x00052abc
   19434:	andeq	r2, r3, r8, ror r5
   19438:	andeq	r8, r2, ip, lsr r9
   1943c:	andeq	r2, r3, r0, ror r5
   19440:	andeq	r8, r2, ip, lsr #18
   19444:			; <UNDEFINED> instruction: 0x00030cb8
   19448:	andeq	r9, r2, r8, ror #5
   1944c:	andeq	r9, r2, r4, asr r4
   19450:	andeq	r8, r2, r4, asr #31
   19454:	andeq	r9, r2, r0, asr #8
   19458:	muleq	r2, r4, r4
   1945c:	andeq	r2, r3, ip, asr r4
   19460:	andeq	r8, r2, ip, lsl #16
   19464:	andeq	r2, r3, ip, lsr r4
   19468:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1946c:	andeq	r0, r3, r4, lsl #23
   19470:	andeq	r9, r2, r4, lsr r2
   19474:	andeq	r9, r2, r0, asr r3
   19478:	andeq	r9, r2, ip, ror r7
   1947c:	andeq	r9, r2, ip, lsl r0
   19480:	andeq	r9, r2, r8, ror #7
   19484:	andeq	r9, r2, r0, ror #7
   19488:	ldrdeq	r9, [r2], -r8
   1948c:	andeq	r9, r2, ip, lsr #14
   19490:	andeq	r9, r2, r0, asr #7
   19494:	ldrdeq	r9, [r2], -r4
   19498:	andeq	r8, r2, ip, lsr lr
   1949c:	muleq	r2, ip, r3
   194a0:	andeq	r9, r2, r0, lsr #10
   194a4:	strdeq	r7, [r2], -ip
   194a8:	andeq	r8, r2, ip, ror #6
   194ac:	andeq	r0, r0, pc, lsr r6
   194b0:	andeq	r7, r2, r0, lsr #30
   194b4:	andeq	r0, r3, ip, asr #14
   194b8:	andeq	r9, r2, r4, ror #6
   194bc:	andeq	r9, r2, r8, asr #4
   194c0:	andeq	r9, r2, r0, asr #4
   194c4:	andeq	r8, r2, r4, asr #21
   194c8:	strdeq	r9, [r2], -r0
   194cc:	andeq	r9, r2, r4, asr #8
   194d0:	andeq	r9, r2, ip, asr r2
   194d4:	andeq	r7, r2, r8, asr #28
   194d8:			; <UNDEFINED> instruction: 0x000281b8
   194dc:	andeq	r7, r2, ip, ror #26
   194e0:	muleq	r3, r8, r5
   194e4:	andeq	r8, r2, r0, lsr r0
   194e8:	andeq	r0, r4, r8, asr #15
   194ec:	andeq	r7, r2, r0, ror #31
   194f0:	andeq	r8, r2, r0, asr r4
   194f4:	andeq	r1, r3, r4, lsl #27
   194f8:	andeq	r8, r2, r0, asr #3
   194fc:	andeq	r8, r2, r4, ror #26
   19500:	andeq	r8, r2, r8, asr sp
   19504:	andeq	r8, r2, r4, ror #17
   19508:	andeq	r8, r2, r0, lsr sp
   1950c:			; <UNDEFINED> instruction: 0x000291bc
   19510:	andeq	r8, r2, ip, lsl #26
   19514:	andeq	r8, r2, ip, lsl sp
   19518:	andeq	r8, r2, ip, ror #17
   1951c:	andeq	r8, r2, r0, asr #31
   19520:	andeq	r7, r2, r0, lsl #29
   19524:	andeq	r7, r2, r4, lsl #28
   19528:	andeq	r7, r2, r8, asr lr
   1952c:	andeq	r7, r2, ip, lsl #20
   19530:	andeq	r0, r3, r8, lsr r2
   19534:	andeq	r8, r2, r4, ror #19
   19538:	ldrdeq	r8, [r2], -r4
   1953c:	andeq	r8, r2, r4, ror #17
   19540:	andeq	r8, r2, r0, lsl #23
   19544:			; <UNDEFINED> instruction: 0x000288b4
   19548:	muleq	r2, ip, r8
   1954c:	andeq	r8, r2, r4, lsl #17
   19550:	andeq	r8, r2, ip, ror #16
   19554:	andeq	r8, r2, r4, asr r8
   19558:	andeq	r8, r2, ip, lsr #16
   1955c:	muleq	r2, r8, r8
   19560:	andeq	r8, r2, r4, lsr #16
   19564:	andeq	r8, r2, r0, ror #16
   19568:	andeq	r8, r2, r8, asr #16
   1956c:	strdeq	r7, [r2], -r8
   19570:	strdeq	r1, [r3], -r4
   19574:	andeq	r7, r2, r0, ror pc
   19578:	andeq	r7, r2, r4, lsl #22
   1957c:	andeq	r1, r3, ip, asr #17
   19580:	andeq	r7, r2, r8, ror #30
   19584:	andeq	r7, r2, r4, ror #21
   19588:	andeq	r1, r3, r4, lsr #17
   1958c:	andeq	r7, r2, r8, asr #30
   19590:	andeq	r7, r2, r8, lsr sl
   19594:	andeq	r1, r3, r0, lsl r8
   19598:	andeq	r7, r2, r4, lsr #29
   1959c:	andeq	r7, r2, r4, lsl #20
   195a0:	andeq	r1, r3, r8, ror #15
   195a4:	andeq	r7, r2, r4, ror lr
   195a8:	andeq	r7, r2, r8, ror #13
   195ac:	andeq	r8, r2, r0, ror #11
   195b0:	ldrdeq	r7, [r2], -r8
   195b4:	andeq	r7, r2, r4, lsr #28
   195b8:	andeq	r7, r2, r0, asr #28
   195bc:	andeq	r8, r2, r8, ror r7
   195c0:	andeq	r7, r2, r4, lsr #28
   195c4:	andeq	r7, r2, r8, lsr lr
   195c8:	andeq	r7, r2, ip, asr #28
   195cc:	andeq	r7, r2, ip, ror #8
   195d0:	strdeq	r7, [r2], -r0
   195d4:	andeq	r7, r2, r4, asr #8
   195d8:	strdeq	r6, [r2], -r8
   195dc:	andeq	pc, r2, r4, lsr #16
   195e0:	ldrdeq	r7, [r2], -r8
   195e4:	andeq	r1, r3, r8, lsl #1
   195e8:	andeq	r7, r2, r4, asr #9
   195ec:	andeq	r7, r2, r0, lsr #5
   195f0:	andeq	r1, r3, r0, asr r0
   195f4:	andeq	r7, r2, r0, lsl #5
   195f8:	andeq	r1, r3, r0, lsr r0
   195fc:			; <UNDEFINED> instruction: 0x000272b4
   19600:	andeq	r7, r2, ip, asr #8
   19604:	andeq	r7, r2, r4, lsl #5
   19608:	andeq	r7, r2, r8, ror r2
   1960c:	andeq	r7, r2, r0, ror #4
   19610:	andeq	r7, r2, r8, asr #4
   19614:	andeq	r7, r2, r0, lsr r2
   19618:	andeq	r7, r2, r4, lsl #4
   1961c:	andeq	r0, r3, ip, lsr #31
   19620:	ldrdeq	r7, [r2], -r8
   19624:	andeq	r7, r2, r8, asr #12
   19628:	andeq	r0, r3, ip, ror pc
   1962c:	andeq	r7, r2, r4, lsr #4
   19630:	andeq	r7, r2, r8, lsr #3
   19634:	andeq	r7, r2, r8, lsl r6
   19638:	andeq	r0, r3, ip, asr #30
   1963c:	andeq	r7, r2, r0, lsl #3
   19640:	strdeq	r7, [r2], -r0
   19644:	andeq	r0, r3, r4, lsr #30
   19648:			; <UNDEFINED> instruction: 0x000271b8
   1964c:	andeq	r7, r2, r8, lsr #6
   19650:	andeq	r7, r2, r4, lsl #3
   19654:	andeq	r7, r2, r0, ror r1
   19658:	andeq	r7, r2, r4, ror #2
   1965c:	andeq	r7, r2, ip, asr #2
   19660:	andeq	r7, r2, r4, lsr r1
   19664:	andeq	r7, r2, ip, lsl r1
   19668:	andeq	r7, r2, r4, lsr r1
   1966c:	andeq	r7, r2, r0, asr #5
   19670:	andeq	r7, r2, r8, lsl #2
   19674:	strdeq	r7, [r2], -r0
   19678:	ldrdeq	r7, [r2], -r8
   1967c:	andeq	r7, r2, r0, asr #1
   19680:	strdeq	r7, [r2], -r8
   19684:	andeq	r7, r2, r4, ror #1
   19688:	andeq	r7, r2, r0, ror #1
   1968c:	andeq	r7, r2, ip, asr #1
   19690:	strheq	r7, [r2], -r8
   19694:	andeq	r7, r2, r4, lsr #1
   19698:	andeq	r7, r2, r0, lsr #1
   1969c:	andeq	r7, r2, ip, lsr #32
   196a0:	muleq	r2, ip, r4
   196a4:	ldrdeq	r0, [r3], -r8
   196a8:	andeq	r7, r2, r8, ror r0
   196ac:	strdeq	r6, [r2], -ip
   196b0:	andeq	r7, r2, ip, ror #8
   196b4:	andeq	r0, r3, r8, lsr #27
   196b8:	andeq	r6, r2, r8, ror #31
   196bc:	muleq	r3, r0, sp
   196c0:	andeq	r6, r2, r8, asr #31
   196c4:	andeq	r0, r3, r0, ror sp
   196c8:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   196cc:	andeq	r7, r2, r4, lsl #8
   196d0:	andeq	r0, r3, r0, asr #26
   196d4:	andeq	r6, r2, ip, ror #30
   196d8:	ldrdeq	r7, [r2], -ip
   196dc:	andeq	r7, r2, ip, lsl #1
   196e0:	andeq	r7, r2, r0, lsl r0
   196e4:	andeq	r7, r2, r4, rrx
   196e8:	andeq	r6, r2, r8, lsl ip
   196ec:	andeq	pc, r2, r4, asr #8
   196f0:	andeq	r6, r2, r0, asr #29
   196f4:	andeq	r7, r2, r0, asr #6
   196f8:	andeq	r0, r3, r4, lsr #25
   196fc:	muleq	r2, r8, lr
   19700:	andeq	r7, r2, r8, lsl r3
   19704:	andeq	r0, r3, ip, ror ip
   19708:	andeq	r6, r2, r0, ror lr
   1970c:	strdeq	r7, [r2], -r0
   19710:	andeq	r0, r3, r4, asr ip
   19714:	andeq	r6, r2, r8, asr #28
   19718:	andeq	r7, r2, r8, asr #5
   1971c:	ldrdeq	r7, [r2], -r4
   19720:	andeq	r7, r2, r4, ror #26
   19724:	andeq	r6, r2, r8, ror #23
   19728:	andeq	r6, r2, r8, asr pc
   1972c:	andeq	r6, r2, ip, lsl #22
   19730:	andeq	pc, r2, r8, lsr r3	; <UNPREDICTABLE>
   19734:	andeq	r0, r0, fp, lsr r5
   19738:	andeq	r7, r2, ip, lsr #15
   1973c:	ldrdeq	r7, [r2], -r8
   19740:	andeq	r7, r2, r4, lsr #24
   19744:	strheq	r8, [r2], -r0
   19748:	andeq	r6, r2, ip, lsl #29
   1974c:	andeq	r6, r2, r0, lsl lr
   19750:	andeq	r6, r2, r4, ror #28
   19754:	andeq	r6, r2, r8, lsl sl
   19758:	andeq	pc, r2, r4, asr #4
   1975c:	andeq	r6, r2, r4, lsr lr
   19760:			; <UNDEFINED> instruction: 0x00026db8
   19764:	andeq	r6, r2, ip, lsl #28
   19768:	andeq	r6, r2, r0, asr #19
   1976c:	andeq	pc, r2, ip, ror #3
   19770:	ldrdeq	r6, [r2], -ip
   19774:	andeq	r6, r2, r0, ror #26
   19778:			; <UNDEFINED> instruction: 0x00026db4
   1977c:	andeq	r6, r2, r8, ror #18
   19780:	muleq	r2, r4, r1
   19784:	andeq	r6, r2, r4, lsl #27
   19788:	andeq	r6, r2, r8, lsl #26
   1978c:	andeq	r6, r2, ip, asr sp
   19790:	andeq	r6, r2, r0, lsl r9
   19794:	andeq	pc, r2, ip, lsr r1	; <UNPREDICTABLE>
   19798:			; <UNDEFINED> instruction: 0x000275b0
   1979c:	ldrdeq	r7, [r2], -ip
   197a0:	strdeq	r7, [r2], -r8
   197a4:	andeq	r7, r2, r0, lsr pc
   197a8:	andeq	r6, r2, r4, ror #26
   197ac:			; <UNDEFINED> instruction: 0x00026bb0
   197b0:	andeq	r6, r2, r0, lsl sp
   197b4:	andeq	r6, r2, ip, ror fp
   197b8:	andeq	r6, r2, r8, ror fp
   197bc:	andeq	r6, r2, r4, ror #25
   197c0:	andeq	r6, r2, r4, asr #22
   197c4:	andeq	r6, r2, r4, asr #15
   197c8:	andeq	r6, r2, r8, ror r8
   197cc:	andeq	r7, r2, r4, lsl sl
   197d0:	andeq	r0, r0, pc, lsr r5
   197d4:	andeq	r6, r2, ip, lsl fp
   197d8:	muleq	r2, ip, ip
   197dc:	andeq	r6, r2, ip, ror #21
   197e0:	andeq	r6, r2, ip, ror #14
   197e4:	andeq	r6, r2, r0, lsr #16
   197e8:	andeq	r7, r2, r0, ror r7
   197ec:	andeq	r0, r0, r2, asr r5
   197f0:	andeq	r7, r2, r0, asr ip
   197f4:	strdeq	r6, [r2], -r0
   197f8:	andeq	r6, r2, r0, ror #22
   197fc:	andeq	r6, r2, r4, lsl r7
   19800:	andeq	lr, r2, r0, asr #30
   19804:	andeq	r6, r2, ip, asr sl
   19808:	andeq	r6, r2, r8, asr #20
   1980c:	andeq	r6, r2, r4, lsr sl
   19810:	andeq	r6, r2, r8, lsr #20
   19814:	andeq	r6, r2, r0, lsl sl
   19818:	strdeq	r6, [r2], -r8
   1981c:	andeq	r6, r2, r0, ror #19
   19820:	ldrdeq	r6, [r2], -ip
   19824:	andeq	r6, r2, r0, ror #20
   19828:			; <UNDEFINED> instruction: 0x00026ab4
   1982c:	andeq	r6, r2, r8, ror #12
   19830:	muleq	r2, r4, lr
   19834:			; <UNDEFINED> instruction: 0x000269b0
   19838:	muleq	r2, ip, r9
   1983c:	andeq	r6, r2, r8, lsl #19
   19840:	andeq	r6, r2, ip, ror r9
   19844:	andeq	r6, r2, r4, ror #18
   19848:	andeq	r6, r2, ip, asr #18
   1984c:	andeq	r6, r2, r4, lsr r9
   19850:	andeq	r6, r2, r0, lsr sl
   19854:			; <UNDEFINED> instruction: 0x000269b4
   19858:	andeq	r6, r2, r8, lsl #20
   1985c:			; <UNDEFINED> instruction: 0x000265bc
   19860:	andeq	lr, r2, r8, ror #27
   19864:	andeq	r6, r2, r4, lsl #18
   19868:	strdeq	r6, [r2], -r0
   1986c:	ldrdeq	r6, [r2], -ip
   19870:	ldrdeq	r6, [r2], -r0
   19874:			; <UNDEFINED> instruction: 0x000268b8
   19878:	andeq	r6, r2, r0, lsr #17
   1987c:	andeq	r6, r2, r8, lsl #17
   19880:	andeq	r0, r0, r0, lsr #1
   19884:	andeq	r6, r2, r4, lsl #19
   19888:	andeq	r6, r2, r8, lsl #18
   1988c:	andeq	r6, r2, ip, asr r9
   19890:	andeq	r6, r2, r0, lsl r5
   19894:	andeq	lr, r2, ip, lsr sp
   19898:	cmp	r3, #11
   1989c:	beq	1a214 <__flatcc_fb_codegen_c@@Base+0x3f1c>
   198a0:	ldr	r1, [pc, #-768]	; 195a8 <__flatcc_fb_codegen_c@@Base+0x32b0>
   198a4:	add	r0, sp, #92	; 0x5c
   198a8:	ldrd	r2, [r5, #48]	; 0x30
   198ac:	add	r1, pc, r1
   198b0:	str	r0, [sp, #84]	; 0x54
   198b4:	bl	140f8 <sprintf@plt>
   198b8:	ldr	r3, [sp, #84]	; 0x54
   198bc:	str	r7, [sp, #16]
   198c0:	str	r3, [sp, #28]
   198c4:	ldr	r3, [sp, #60]	; 0x3c
   198c8:	str	r6, [sp, #12]
   198cc:	str	r3, [sp, #24]
   198d0:	str	r3, [sp, #20]
   198d4:	ldr	r3, [sp, #48]	; 0x30
   198d8:	mov	r2, r4
   198dc:	str	r3, [sp, #8]
   198e0:	ldrd	r0, [r5, #96]	; 0x60
   198e4:	ldr	r3, [r4, #204]	; 0xcc
   198e8:	strd	r0, [sp]
   198ec:	ldr	r1, [pc, #-840]	; 195ac <__flatcc_fb_codegen_c@@Base+0x32b4>
   198f0:	mov	r0, r3
   198f4:	add	r1, pc, r1
   198f8:	bl	1408c <fprintf@plt>
   198fc:	ldr	r3, [r4, #212]	; 0xd4
   19900:	ldr	r3, [r3, #32]
   19904:	cmp	r3, #0
   19908:	bne	1993c <__flatcc_fb_codegen_c@@Base+0x3644>
   1990c:	ldrh	r3, [r5, #72]	; 0x48
   19910:	tst	r3, #128	; 0x80
   19914:	beq	18818 <__flatcc_fb_codegen_c@@Base+0x2520>
   19918:	ldr	r3, [sp, #60]	; 0x3c
   1991c:	ldr	r1, [pc, #-884]	; 195b0 <__flatcc_fb_codegen_c@@Base+0x32b8>
   19920:	ldr	r0, [r4, #204]	; 0xcc
   19924:	mov	r2, r4
   19928:	str	r3, [sp, #8]
   1992c:	stm	sp, {r6, r7}
   19930:	ldr	r3, [sp, #48]	; 0x30
   19934:	add	r1, pc, r1
   19938:	bl	1408c <fprintf@plt>
   1993c:	ldrh	r3, [r5, #72]	; 0x48
   19940:	tst	r3, #128	; 0x80
   19944:	beq	18818 <__flatcc_fb_codegen_c@@Base+0x2520>
   19948:	ldr	r3, [sp, #64]	; 0x40
   1994c:	cmp	r3, #0
   19950:	ldr	r3, [r4, #204]	; 0xcc
   19954:	bne	1a188 <__flatcc_fb_codegen_c@@Base+0x3e90>
   19958:	ldr	r0, [pc, #-940]	; 195b4 <__flatcc_fb_codegen_c@@Base+0x32bc>
   1995c:	mov	r2, #61	; 0x3d
   19960:	mov	r1, #1
   19964:	add	r0, pc, r0
   19968:	bl	14014 <fwrite@plt>
   1996c:	ldr	r3, [sp, #60]	; 0x3c
   19970:	ldr	r1, [pc, #-960]	; 195b8 <__flatcc_fb_codegen_c@@Base+0x32c0>
   19974:	ldr	r0, [r4, #204]	; 0xcc
   19978:	mov	r2, r4
   1997c:	str	r3, [sp, #8]
   19980:	stm	sp, {r6, r7}
   19984:	ldr	r3, [sp, #48]	; 0x30
   19988:	add	r1, pc, r1
   1998c:	bl	1408c <fprintf@plt>
   19990:	ldr	r3, [r4, #212]	; 0xd4
   19994:	ldr	r3, [r3, #136]	; 0x88
   19998:	cmp	r3, #0
   1999c:	beq	199c8 <__flatcc_fb_codegen_c@@Base+0x36d0>
   199a0:	ldr	r3, [sp, #60]	; 0x3c
   199a4:	ldr	r1, [pc, #-1008]	; 195bc <__flatcc_fb_codegen_c@@Base+0x32c4>
   199a8:	ldr	r0, [r4, #204]	; 0xcc
   199ac:	mov	r2, r4
   199b0:	str	r3, [sp, #8]
   199b4:	str	r4, [sp, #12]
   199b8:	stm	sp, {r6, r7}
   199bc:	ldr	r3, [sp, #48]	; 0x30
   199c0:	add	r1, pc, r1
   199c4:	bl	1408c <fprintf@plt>
   199c8:	ldr	r3, [sp, #60]	; 0x3c
   199cc:	ldr	r1, [pc, #-1044]	; 195c0 <__flatcc_fb_codegen_c@@Base+0x32c8>
   199d0:	ldr	r0, [r4, #204]	; 0xcc
   199d4:	mov	r2, r4
   199d8:	str	r3, [sp, #8]
   199dc:	add	r1, pc, r1
   199e0:	ldr	r3, [sp, #48]	; 0x30
   199e4:	stm	sp, {r6, r7}
   199e8:	bl	1408c <fprintf@plt>
   199ec:	ldr	r3, [sp, #60]	; 0x3c
   199f0:	ldr	r1, [pc, #-1076]	; 195c4 <__flatcc_fb_codegen_c@@Base+0x32cc>
   199f4:	ldr	r0, [r4, #204]	; 0xcc
   199f8:	mov	r2, r4
   199fc:	str	r3, [sp, #8]
   19a00:	stm	sp, {r6, r7}
   19a04:	ldr	r3, [sp, #48]	; 0x30
   19a08:	add	r1, pc, r1
   19a0c:	bl	1408c <fprintf@plt>
   19a10:	ldr	r3, [r4, #212]	; 0xd4
   19a14:	ldr	r3, [r3, #136]	; 0x88
   19a18:	cmp	r3, #0
   19a1c:	beq	188d0 <__flatcc_fb_codegen_c@@Base+0x25d8>
   19a20:	ldr	r2, [sp, #48]	; 0x30
   19a24:	ldr	r1, [pc, #-1124]	; 195c8 <__flatcc_fb_codegen_c@@Base+0x32d0>
   19a28:	ldr	r0, [r4, #204]	; 0xcc
   19a2c:	mov	r3, r2
   19a30:	stm	sp, {r6, r7}
   19a34:	add	r1, pc, r1
   19a38:	bl	1408c <fprintf@plt>
   19a3c:	mov	r3, #1
   19a40:	str	r3, [sp, #64]	; 0x40
   19a44:	b	18818 <__flatcc_fb_codegen_c@@Base+0x2520>
   19a48:	ldr	r2, [pc, #-464]	; 19880 <__flatcc_fb_codegen_c@@Base+0x3588>
   19a4c:	ldr	r1, [sp, #68]	; 0x44
   19a50:	ldr	r3, [pc, #-1164]	; 195cc <__flatcc_fb_codegen_c@@Base+0x32d4>
   19a54:	ldr	r4, [pc, #-1164]	; 195d0 <__flatcc_fb_codegen_c@@Base+0x32d8>
   19a58:	ldr	r1, [r1, r2]
   19a5c:	add	r3, pc, r3
   19a60:	str	r3, [sp]
   19a64:	ldr	r0, [r1]
   19a68:	ldr	r1, [pc, #-1180]	; 195d4 <__flatcc_fb_codegen_c@@Base+0x32dc>
   19a6c:	add	r4, pc, r4
   19a70:	mov	r2, r4
   19a74:	mov	r3, #141	; 0x8d
   19a78:	add	r1, pc, r1
   19a7c:	bl	1408c <fprintf@plt>
   19a80:	ldr	r3, [pc, #-1200]	; 195d8 <__flatcc_fb_codegen_c@@Base+0x32e0>
   19a84:	ldr	r0, [pc, #-1200]	; 195dc <__flatcc_fb_codegen_c@@Base+0x32e4>
   19a88:	add	r3, pc, r3
   19a8c:	mov	r1, r4
   19a90:	add	r3, r3, #32
   19a94:	mov	r2, #141	; 0x8d
   19a98:	add	r0, pc, r0
   19a9c:	bl	14140 <__assert_fail@plt>
   19aa0:	vldr	d7, [r5, #48]	; 0x30
   19aa4:	ldr	r3, [pc, #-1228]	; 195e0 <__flatcc_fb_codegen_c@@Base+0x32e8>
   19aa8:	ldr	r2, [pc, #-1228]	; 195e4 <__flatcc_fb_codegen_c@@Base+0x32ec>
   19aac:	ldr	r1, [pc, #-1228]	; 195e8 <__flatcc_fb_codegen_c@@Base+0x32f0>
   19ab0:	vcvt.f32.f64	s14, d7
   19ab4:	add	r3, pc, r3
   19ab8:	add	r2, pc, r2
   19abc:	add	r0, sp, #92	; 0x5c
   19ac0:	str	r3, [sp, #72]	; 0x48
   19ac4:	str	r2, [sp, #76]	; 0x4c
   19ac8:	str	r3, [sp, #80]	; 0x50
   19acc:	add	r1, pc, r1
   19ad0:	vcvt.f64.f32	d7, s14
   19ad4:	str	r0, [sp, #84]	; 0x54
   19ad8:	vmov	r2, r3, d7
   19adc:	bl	140f8 <sprintf@plt>
   19ae0:	b	18de0 <__flatcc_fb_codegen_c@@Base+0x2ae8>
   19ae4:	ldr	r2, [pc, #-1280]	; 195ec <__flatcc_fb_codegen_c@@Base+0x32f4>
   19ae8:	ldr	r1, [pc, #-1280]	; 195f0 <__flatcc_fb_codegen_c@@Base+0x32f8>
   19aec:	add	r2, pc, r2
   19af0:	add	r1, pc, r1
   19af4:	str	r2, [sp, #72]	; 0x48
   19af8:	str	r1, [sp, #76]	; 0x4c
   19afc:	str	r2, [sp, #80]	; 0x50
   19b00:	b	18fe0 <__flatcc_fb_codegen_c@@Base+0x2ce8>
   19b04:	ldr	r2, [pc, #-1304]	; 195f4 <__flatcc_fb_codegen_c@@Base+0x32fc>
   19b08:	ldr	r1, [pc, #-1304]	; 195f8 <__flatcc_fb_codegen_c@@Base+0x3300>
   19b0c:	add	r2, pc, r2
   19b10:	add	r1, pc, r1
   19b14:	str	r2, [sp, #72]	; 0x48
   19b18:	str	r1, [sp, #76]	; 0x4c
   19b1c:	str	r2, [sp, #80]	; 0x50
   19b20:	b	18fac <__flatcc_fb_codegen_c@@Base+0x2cb4>
   19b24:	ldr	r2, [pc, #-1328]	; 195fc <__flatcc_fb_codegen_c@@Base+0x3304>
   19b28:	add	r2, pc, r2
   19b2c:	ldr	r1, [pc, #-1332]	; 19600 <__flatcc_fb_codegen_c@@Base+0x3308>
   19b30:	add	r3, sp, #92	; 0x5c
   19b34:	str	r3, [sp, #84]	; 0x54
   19b38:	mov	r0, r3
   19b3c:	add	r1, pc, r1
   19b40:	ldrb	r3, [r5, #48]	; 0x30
   19b44:	bl	140f8 <sprintf@plt>
   19b48:	b	18de0 <__flatcc_fb_codegen_c@@Base+0x2ae8>
   19b4c:	ldr	r2, [pc, #-1360]	; 19604 <__flatcc_fb_codegen_c@@Base+0x330c>
   19b50:	add	r2, pc, r2
   19b54:	b	19b2c <__flatcc_fb_codegen_c@@Base+0x3834>
   19b58:	ldr	r2, [pc, #-1368]	; 19608 <__flatcc_fb_codegen_c@@Base+0x3310>
   19b5c:	add	r2, pc, r2
   19b60:	b	19b2c <__flatcc_fb_codegen_c@@Base+0x3834>
   19b64:	ldr	r2, [pc, #-1376]	; 1960c <__flatcc_fb_codegen_c@@Base+0x3314>
   19b68:	add	r2, pc, r2
   19b6c:	b	19b2c <__flatcc_fb_codegen_c@@Base+0x3834>
   19b70:	ldr	r2, [pc, #-1384]	; 19610 <__flatcc_fb_codegen_c@@Base+0x3318>
   19b74:	add	r2, pc, r2
   19b78:	b	19b2c <__flatcc_fb_codegen_c@@Base+0x3834>
   19b7c:	ldr	r2, [pc, #-1392]	; 19614 <__flatcc_fb_codegen_c@@Base+0x331c>
   19b80:	add	r2, pc, r2
   19b84:	b	19b2c <__flatcc_fb_codegen_c@@Base+0x3834>
   19b88:	ldr	r2, [pc, #-1400]	; 19618 <__flatcc_fb_codegen_c@@Base+0x3320>
   19b8c:	ldr	r1, [pc, #-1400]	; 1961c <__flatcc_fb_codegen_c@@Base+0x3324>
   19b90:	add	r2, pc, r2
   19b94:	add	r1, pc, r1
   19b98:	str	r2, [sp, #72]	; 0x48
   19b9c:	str	r1, [sp, #76]	; 0x4c
   19ba0:	str	r2, [sp, #80]	; 0x50
   19ba4:	b	18fac <__flatcc_fb_codegen_c@@Base+0x2cb4>
   19ba8:	ldr	r3, [pc, #-1424]	; 19620 <__flatcc_fb_codegen_c@@Base+0x3328>
   19bac:	add	r3, pc, r3
   19bb0:	str	r3, [sp, #72]	; 0x48
   19bb4:	ldr	r3, [pc, #-1432]	; 19624 <__flatcc_fb_codegen_c@@Base+0x332c>
   19bb8:	add	r3, pc, r3
   19bbc:	str	r3, [sp, #80]	; 0x50
   19bc0:	ldr	r3, [pc, #-1440]	; 19628 <__flatcc_fb_codegen_c@@Base+0x3330>
   19bc4:	add	r3, pc, r3
   19bc8:	str	r3, [sp, #76]	; 0x4c
   19bcc:	ldr	r2, [pc, #-1448]	; 1962c <__flatcc_fb_codegen_c@@Base+0x3334>
   19bd0:	add	r2, pc, r2
   19bd4:	b	19b2c <__flatcc_fb_codegen_c@@Base+0x3834>
   19bd8:	ldr	r2, [pc, #-1456]	; 19630 <__flatcc_fb_codegen_c@@Base+0x3338>
   19bdc:	add	r2, pc, r2
   19be0:	str	r2, [sp, #72]	; 0x48
   19be4:	ldr	r2, [pc, #-1464]	; 19634 <__flatcc_fb_codegen_c@@Base+0x333c>
   19be8:	add	r2, pc, r2
   19bec:	str	r2, [sp, #80]	; 0x50
   19bf0:	ldr	r2, [pc, #-1472]	; 19638 <__flatcc_fb_codegen_c@@Base+0x3340>
   19bf4:	add	r2, pc, r2
   19bf8:	str	r2, [sp, #76]	; 0x4c
   19bfc:	b	18fac <__flatcc_fb_codegen_c@@Base+0x2cb4>
   19c00:	ldr	r2, [pc, #-1484]	; 1963c <__flatcc_fb_codegen_c@@Base+0x3344>
   19c04:	add	r2, pc, r2
   19c08:	str	r2, [sp, #72]	; 0x48
   19c0c:	ldr	r2, [pc, #-1492]	; 19640 <__flatcc_fb_codegen_c@@Base+0x3348>
   19c10:	add	r2, pc, r2
   19c14:	str	r2, [sp, #80]	; 0x50
   19c18:	ldr	r2, [pc, #-1500]	; 19644 <__flatcc_fb_codegen_c@@Base+0x334c>
   19c1c:	add	r2, pc, r2
   19c20:	str	r2, [sp, #76]	; 0x4c
   19c24:	b	18fe0 <__flatcc_fb_codegen_c@@Base+0x2ce8>
   19c28:	ldr	r2, [pc, #-1512]	; 19648 <__flatcc_fb_codegen_c@@Base+0x3350>
   19c2c:	add	r2, pc, r2
   19c30:	ldrd	r0, [r5, #48]	; 0x30
   19c34:	add	r3, sp, #92	; 0x5c
   19c38:	str	r3, [sp, #84]	; 0x54
   19c3c:	strd	r0, [sp]
   19c40:	ldr	r1, [pc, #-1532]	; 1964c <__flatcc_fb_codegen_c@@Base+0x3354>
   19c44:	mov	r0, r3
   19c48:	add	r1, pc, r1
   19c4c:	bl	140f8 <sprintf@plt>
   19c50:	b	18de0 <__flatcc_fb_codegen_c@@Base+0x2ae8>
   19c54:	ldr	r2, [pc, #-1548]	; 19650 <__flatcc_fb_codegen_c@@Base+0x3358>
   19c58:	add	r2, pc, r2
   19c5c:	b	19c30 <__flatcc_fb_codegen_c@@Base+0x3938>
   19c60:	ldr	r2, [pc, #-1556]	; 19654 <__flatcc_fb_codegen_c@@Base+0x335c>
   19c64:	add	r2, pc, r2
   19c68:	b	19c30 <__flatcc_fb_codegen_c@@Base+0x3938>
   19c6c:	ldr	r2, [pc, #-1564]	; 19658 <__flatcc_fb_codegen_c@@Base+0x3360>
   19c70:	add	r2, pc, r2
   19c74:	b	19c30 <__flatcc_fb_codegen_c@@Base+0x3938>
   19c78:	ldr	r2, [pc, #-1572]	; 1965c <__flatcc_fb_codegen_c@@Base+0x3364>
   19c7c:	add	r2, pc, r2
   19c80:	b	19c30 <__flatcc_fb_codegen_c@@Base+0x3938>
   19c84:	ldr	r2, [pc, #-1580]	; 19660 <__flatcc_fb_codegen_c@@Base+0x3368>
   19c88:	add	r2, pc, r2
   19c8c:	b	19c30 <__flatcc_fb_codegen_c@@Base+0x3938>
   19c90:	ldr	r2, [pc, #-1588]	; 19664 <__flatcc_fb_codegen_c@@Base+0x336c>
   19c94:	add	r2, pc, r2
   19c98:	b	19c30 <__flatcc_fb_codegen_c@@Base+0x3938>
   19c9c:	ldr	r2, [pc, #-1596]	; 19668 <__flatcc_fb_codegen_c@@Base+0x3370>
   19ca0:	add	r2, pc, r2
   19ca4:	ldrd	r0, [r5, #48]	; 0x30
   19ca8:	add	r3, sp, #92	; 0x5c
   19cac:	str	r3, [sp, #84]	; 0x54
   19cb0:	strd	r0, [sp]
   19cb4:	ldr	r1, [pc, #-1616]	; 1966c <__flatcc_fb_codegen_c@@Base+0x3374>
   19cb8:	mov	r0, r3
   19cbc:	add	r1, pc, r1
   19cc0:	bl	140f8 <sprintf@plt>
   19cc4:	b	18de0 <__flatcc_fb_codegen_c@@Base+0x2ae8>
   19cc8:	ldr	r2, [pc, #-1632]	; 19670 <__flatcc_fb_codegen_c@@Base+0x3378>
   19ccc:	add	r2, pc, r2
   19cd0:	b	19ca4 <__flatcc_fb_codegen_c@@Base+0x39ac>
   19cd4:	ldr	r2, [pc, #-1640]	; 19674 <__flatcc_fb_codegen_c@@Base+0x337c>
   19cd8:	add	r2, pc, r2
   19cdc:	b	19ca4 <__flatcc_fb_codegen_c@@Base+0x39ac>
   19ce0:	ldr	r2, [pc, #-1648]	; 19678 <__flatcc_fb_codegen_c@@Base+0x3380>
   19ce4:	add	r2, pc, r2
   19ce8:	b	19ca4 <__flatcc_fb_codegen_c@@Base+0x39ac>
   19cec:	ldr	r2, [pc, #-1656]	; 1967c <__flatcc_fb_codegen_c@@Base+0x3384>
   19cf0:	add	r2, pc, r2
   19cf4:	b	19ca4 <__flatcc_fb_codegen_c@@Base+0x39ac>
   19cf8:	ldr	r2, [pc, #-1664]	; 19680 <__flatcc_fb_codegen_c@@Base+0x3388>
   19cfc:	add	r2, pc, r2
   19d00:	b	19c30 <__flatcc_fb_codegen_c@@Base+0x3938>
   19d04:	ldr	r2, [pc, #-1672]	; 19684 <__flatcc_fb_codegen_c@@Base+0x338c>
   19d08:	add	r2, pc, r2
   19d0c:	b	19c30 <__flatcc_fb_codegen_c@@Base+0x3938>
   19d10:	ldr	r2, [pc, #-1680]	; 19688 <__flatcc_fb_codegen_c@@Base+0x3390>
   19d14:	add	r2, pc, r2
   19d18:	b	19ca4 <__flatcc_fb_codegen_c@@Base+0x39ac>
   19d1c:	ldr	r2, [pc, #-1688]	; 1968c <__flatcc_fb_codegen_c@@Base+0x3394>
   19d20:	add	r2, pc, r2
   19d24:	b	19ca4 <__flatcc_fb_codegen_c@@Base+0x39ac>
   19d28:	ldr	r2, [pc, #-1696]	; 19690 <__flatcc_fb_codegen_c@@Base+0x3398>
   19d2c:	add	r2, pc, r2
   19d30:	b	19ca4 <__flatcc_fb_codegen_c@@Base+0x39ac>
   19d34:	ldr	r2, [pc, #-1704]	; 19694 <__flatcc_fb_codegen_c@@Base+0x339c>
   19d38:	add	r2, pc, r2
   19d3c:	b	19ca4 <__flatcc_fb_codegen_c@@Base+0x39ac>
   19d40:	ldr	r2, [pc, #-1712]	; 19698 <__flatcc_fb_codegen_c@@Base+0x33a0>
   19d44:	add	r2, pc, r2
   19d48:	b	19b2c <__flatcc_fb_codegen_c@@Base+0x3834>
   19d4c:	ldr	r3, [pc, #-1720]	; 1969c <__flatcc_fb_codegen_c@@Base+0x33a4>
   19d50:	add	r3, pc, r3
   19d54:	str	r3, [sp, #72]	; 0x48
   19d58:	ldr	r3, [pc, #-1728]	; 196a0 <__flatcc_fb_codegen_c@@Base+0x33a8>
   19d5c:	add	r3, pc, r3
   19d60:	str	r3, [sp, #80]	; 0x50
   19d64:	ldr	r3, [pc, #-1736]	; 196a4 <__flatcc_fb_codegen_c@@Base+0x33ac>
   19d68:	add	r3, pc, r3
   19d6c:	str	r3, [sp, #76]	; 0x4c
   19d70:	ldr	r2, [pc, #-1744]	; 196a8 <__flatcc_fb_codegen_c@@Base+0x33b0>
   19d74:	add	r2, pc, r2
   19d78:	b	19b2c <__flatcc_fb_codegen_c@@Base+0x3834>
   19d7c:	ldr	r2, [pc, #-1752]	; 196ac <__flatcc_fb_codegen_c@@Base+0x33b4>
   19d80:	add	r2, pc, r2
   19d84:	str	r2, [sp, #72]	; 0x48
   19d88:	ldr	r2, [pc, #-1760]	; 196b0 <__flatcc_fb_codegen_c@@Base+0x33b8>
   19d8c:	add	r2, pc, r2
   19d90:	str	r2, [sp, #80]	; 0x50
   19d94:	ldr	r2, [pc, #-1768]	; 196b4 <__flatcc_fb_codegen_c@@Base+0x33bc>
   19d98:	add	r2, pc, r2
   19d9c:	str	r2, [sp, #76]	; 0x4c
   19da0:	b	18fac <__flatcc_fb_codegen_c@@Base+0x2cb4>
   19da4:	ldr	r2, [pc, #-1780]	; 196b8 <__flatcc_fb_codegen_c@@Base+0x33c0>
   19da8:	ldr	r1, [pc, #-1780]	; 196bc <__flatcc_fb_codegen_c@@Base+0x33c4>
   19dac:	add	r2, pc, r2
   19db0:	add	r1, pc, r1
   19db4:	str	r2, [sp, #72]	; 0x48
   19db8:	str	r1, [sp, #76]	; 0x4c
   19dbc:	str	r2, [sp, #80]	; 0x50
   19dc0:	b	18fe0 <__flatcc_fb_codegen_c@@Base+0x2ce8>
   19dc4:	ldr	r3, [pc, #-1804]	; 196c0 <__flatcc_fb_codegen_c@@Base+0x33c8>
   19dc8:	ldr	r2, [pc, #-1804]	; 196c4 <__flatcc_fb_codegen_c@@Base+0x33cc>
   19dcc:	add	r3, pc, r3
   19dd0:	add	r2, pc, r2
   19dd4:	str	r3, [sp, #72]	; 0x48
   19dd8:	str	r2, [sp, #76]	; 0x4c
   19ddc:	str	r3, [sp, #80]	; 0x50
   19de0:	b	18dc4 <__flatcc_fb_codegen_c@@Base+0x2acc>
   19de4:	ldr	r2, [pc, #-1828]	; 196c8 <__flatcc_fb_codegen_c@@Base+0x33d0>
   19de8:	add	r2, pc, r2
   19dec:	str	r2, [sp, #72]	; 0x48
   19df0:	ldr	r2, [pc, #-1836]	; 196cc <__flatcc_fb_codegen_c@@Base+0x33d4>
   19df4:	add	r2, pc, r2
   19df8:	str	r2, [sp, #80]	; 0x50
   19dfc:	ldr	r2, [pc, #-1844]	; 196d0 <__flatcc_fb_codegen_c@@Base+0x33d8>
   19e00:	add	r2, pc, r2
   19e04:	str	r2, [sp, #76]	; 0x4c
   19e08:	b	18fe0 <__flatcc_fb_codegen_c@@Base+0x2ce8>
   19e0c:	ldr	r3, [pc, #-1856]	; 196d4 <__flatcc_fb_codegen_c@@Base+0x33dc>
   19e10:	add	r3, pc, r3
   19e14:	str	r3, [sp, #72]	; 0x48
   19e18:	ldr	r3, [pc, #-1864]	; 196d8 <__flatcc_fb_codegen_c@@Base+0x33e0>
   19e1c:	add	r3, pc, r3
   19e20:	str	r3, [sp, #80]	; 0x50
   19e24:	b	18db8 <__flatcc_fb_codegen_c@@Base+0x2ac0>
   19e28:	ldr	r2, [pc, #-1456]	; 19880 <__flatcc_fb_codegen_c@@Base+0x3588>
   19e2c:	ldr	r1, [sp, #68]	; 0x44
   19e30:	ldr	r3, [pc, #-1884]	; 196dc <__flatcc_fb_codegen_c@@Base+0x33e4>
   19e34:	ldr	r4, [pc, #-1884]	; 196e0 <__flatcc_fb_codegen_c@@Base+0x33e8>
   19e38:	ldr	r1, [r1, r2]
   19e3c:	add	r3, pc, r3
   19e40:	str	r3, [sp]
   19e44:	ldr	r0, [r1]
   19e48:	ldr	r1, [pc, #-1900]	; 196e4 <__flatcc_fb_codegen_c@@Base+0x33ec>
   19e4c:	add	r4, pc, r4
   19e50:	mov	r2, r4
   19e54:	mov	r3, #226	; 0xe2
   19e58:	add	r1, pc, r1
   19e5c:	bl	1408c <fprintf@plt>
   19e60:	ldr	r3, [pc, #-1920]	; 196e8 <__flatcc_fb_codegen_c@@Base+0x33f0>
   19e64:	ldr	r0, [pc, #-1920]	; 196ec <__flatcc_fb_codegen_c@@Base+0x33f4>
   19e68:	add	r3, pc, r3
   19e6c:	mov	r1, r4
   19e70:	add	r3, r3, #52	; 0x34
   19e74:	mov	r2, #226	; 0xe2
   19e78:	add	r0, pc, r0
   19e7c:	bl	14140 <__assert_fail@plt>
   19e80:	ldr	r2, [pc, #-1944]	; 196f0 <__flatcc_fb_codegen_c@@Base+0x33f8>
   19e84:	add	r2, pc, r2
   19e88:	str	r2, [sp, #72]	; 0x48
   19e8c:	ldr	r2, [pc, #-1952]	; 196f4 <__flatcc_fb_codegen_c@@Base+0x33fc>
   19e90:	add	r2, pc, r2
   19e94:	str	r2, [sp, #80]	; 0x50
   19e98:	ldr	r2, [pc, #-1960]	; 196f8 <__flatcc_fb_codegen_c@@Base+0x3400>
   19e9c:	add	r2, pc, r2
   19ea0:	str	r2, [sp, #76]	; 0x4c
   19ea4:	b	18d70 <__flatcc_fb_codegen_c@@Base+0x2a78>
   19ea8:	ldr	r2, [pc, #-1972]	; 196fc <__flatcc_fb_codegen_c@@Base+0x3404>
   19eac:	add	r2, pc, r2
   19eb0:	str	r2, [sp, #72]	; 0x48
   19eb4:	ldr	r2, [pc, #-1980]	; 19700 <__flatcc_fb_codegen_c@@Base+0x3408>
   19eb8:	add	r2, pc, r2
   19ebc:	str	r2, [sp, #80]	; 0x50
   19ec0:	ldr	r2, [pc, #-1988]	; 19704 <__flatcc_fb_codegen_c@@Base+0x340c>
   19ec4:	add	r2, pc, r2
   19ec8:	str	r2, [sp, #76]	; 0x4c
   19ecc:	b	18fac <__flatcc_fb_codegen_c@@Base+0x2cb4>
   19ed0:	ldr	r2, [pc, #-2000]	; 19708 <__flatcc_fb_codegen_c@@Base+0x3410>
   19ed4:	add	r2, pc, r2
   19ed8:	str	r2, [sp, #72]	; 0x48
   19edc:	ldr	r2, [pc, #-2008]	; 1970c <__flatcc_fb_codegen_c@@Base+0x3414>
   19ee0:	add	r2, pc, r2
   19ee4:	str	r2, [sp, #80]	; 0x50
   19ee8:	ldr	r2, [pc, #-2016]	; 19710 <__flatcc_fb_codegen_c@@Base+0x3418>
   19eec:	add	r2, pc, r2
   19ef0:	str	r2, [sp, #76]	; 0x4c
   19ef4:	b	18fe0 <__flatcc_fb_codegen_c@@Base+0x2ce8>
   19ef8:	ldr	r3, [pc, #-2028]	; 19714 <__flatcc_fb_codegen_c@@Base+0x341c>
   19efc:	add	r3, pc, r3
   19f00:	str	r3, [sp, #72]	; 0x48
   19f04:	ldr	r3, [pc, #-2036]	; 19718 <__flatcc_fb_codegen_c@@Base+0x3420>
   19f08:	add	r3, pc, r3
   19f0c:	str	r3, [sp, #80]	; 0x50
   19f10:	b	18db8 <__flatcc_fb_codegen_c@@Base+0x2ac0>
   19f14:	ldrh	r3, [r5, #72]	; 0x48
   19f18:	tst	r3, #128	; 0x80
   19f1c:	bne	188b8 <__flatcc_fb_codegen_c@@Base+0x25c0>
   19f20:	b	18818 <__flatcc_fb_codegen_c@@Base+0x2520>
   19f24:	ldr	r2, [pc, #-2064]	; 1971c <__flatcc_fb_codegen_c@@Base+0x3424>
   19f28:	add	r2, pc, r2
   19f2c:	str	r2, [sp, #72]	; 0x48
   19f30:	b	19128 <__flatcc_fb_codegen_c@@Base+0x2e30>
   19f34:	ldr	r2, [pc, #-1724]	; 19880 <__flatcc_fb_codegen_c@@Base+0x3588>
   19f38:	ldr	r1, [sp, #68]	; 0x44
   19f3c:	ldr	r3, [pc, #-2084]	; 19720 <__flatcc_fb_codegen_c@@Base+0x3428>
   19f40:	ldr	r4, [pc, #-2084]	; 19724 <__flatcc_fb_codegen_c@@Base+0x342c>
   19f44:	ldr	r1, [r1, r2]
   19f48:	add	r3, pc, r3
   19f4c:	str	r3, [sp]
   19f50:	ldr	r0, [r1]
   19f54:	ldr	r1, [pc, #-2100]	; 19728 <__flatcc_fb_codegen_c@@Base+0x3430>
   19f58:	add	r4, pc, r4
   19f5c:	mov	r2, r4
   19f60:	ldr	r3, [pc, #-2100]	; 19734 <__flatcc_fb_codegen_c@@Base+0x343c>
   19f64:	add	r1, pc, r1
   19f68:	bl	1408c <fprintf@plt>
   19f6c:	ldr	r3, [pc, #-2120]	; 1972c <__flatcc_fb_codegen_c@@Base+0x3434>
   19f70:	ldr	r0, [pc, #-2120]	; 19730 <__flatcc_fb_codegen_c@@Base+0x3438>
   19f74:	add	r3, pc, r3
   19f78:	mov	r1, r4
   19f7c:	add	r3, r3, #148	; 0x94
   19f80:	ldr	r2, [pc, #-2132]	; 19734 <__flatcc_fb_codegen_c@@Base+0x343c>
   19f84:	add	r0, pc, r0
   19f88:	bl	14140 <__assert_fail@plt>
   19f8c:	ldr	r0, [pc, #-2140]	; 19738 <__flatcc_fb_codegen_c@@Base+0x3440>
   19f90:	mov	r2, #66	; 0x42
   19f94:	mov	r1, #1
   19f98:	add	r0, pc, r0
   19f9c:	bl	14014 <fwrite@plt>
   19fa0:	ldr	r0, [pc, #-2156]	; 1973c <__flatcc_fb_codegen_c@@Base+0x3444>
   19fa4:	ldr	r3, [r4, #204]	; 0xcc
   19fa8:	mov	r2, #61	; 0x3d
   19fac:	mov	r1, #1
   19fb0:	add	r0, pc, r0
   19fb4:	bl	14014 <fwrite@plt>
   19fb8:	ldr	r3, [sp, #72]	; 0x48
   19fbc:	ldr	r0, [r4, #204]	; 0xcc
   19fc0:	ldr	r1, [pc, #-2184]	; 19740 <__flatcc_fb_codegen_c@@Base+0x3448>
   19fc4:	str	r3, [sp, #12]
   19fc8:	ldr	r3, [sp, #76]	; 0x4c
   19fcc:	stm	sp, {r6, r7}
   19fd0:	str	r3, [sp, #8]
   19fd4:	mov	r2, r4
   19fd8:	ldr	r3, [sp, #48]	; 0x30
   19fdc:	add	r1, pc, r1
   19fe0:	bl	1408c <fprintf@plt>
   19fe4:	ldr	r3, [r4, #212]	; 0xd4
   19fe8:	ldr	r3, [r3, #136]	; 0x88
   19fec:	cmp	r3, #0
   19ff0:	beq	188d0 <__flatcc_fb_codegen_c@@Base+0x25d8>
   19ff4:	ldr	r3, [sp, #72]	; 0x48
   19ff8:	ldr	r0, [r4, #204]	; 0xcc
   19ffc:	ldr	r1, [pc, #-2240]	; 19744 <__flatcc_fb_codegen_c@@Base+0x344c>
   1a000:	str	r3, [sp, #12]
   1a004:	ldr	r3, [sp, #76]	; 0x4c
   1a008:	str	r4, [sp, #16]
   1a00c:	str	r3, [sp, #8]
   1a010:	stm	sp, {r6, r7}
   1a014:	ldr	r3, [sp, #48]	; 0x30
   1a018:	mov	r2, r4
   1a01c:	add	r1, pc, r1
   1a020:	bl	1408c <fprintf@plt>
   1a024:	b	188d0 <__flatcc_fb_codegen_c@@Base+0x25d8>
   1a028:	ldr	r2, [pc, #-1968]	; 19880 <__flatcc_fb_codegen_c@@Base+0x3588>
   1a02c:	ldr	r1, [sp, #68]	; 0x44
   1a030:	ldr	r3, [pc, #-2288]	; 19748 <__flatcc_fb_codegen_c@@Base+0x3450>
   1a034:	ldr	r4, [pc, #-2288]	; 1974c <__flatcc_fb_codegen_c@@Base+0x3454>
   1a038:	ldr	r1, [r1, r2]
   1a03c:	add	r3, pc, r3
   1a040:	str	r3, [sp]
   1a044:	ldr	r0, [r1]
   1a048:	ldr	r1, [pc, #-2304]	; 19750 <__flatcc_fb_codegen_c@@Base+0x3458>
   1a04c:	add	r4, pc, r4
   1a050:	mov	r2, r4
   1a054:	mov	r3, #186	; 0xba
   1a058:	add	r1, pc, r1
   1a05c:	bl	1408c <fprintf@plt>
   1a060:	ldr	r3, [pc, #-2324]	; 19754 <__flatcc_fb_codegen_c@@Base+0x345c>
   1a064:	ldr	r0, [pc, #-2324]	; 19758 <__flatcc_fb_codegen_c@@Base+0x3460>
   1a068:	add	r3, pc, r3
   1a06c:	mov	r1, r4
   1a070:	add	r3, r3, #124	; 0x7c
   1a074:	mov	r2, #186	; 0xba
   1a078:	add	r0, pc, r0
   1a07c:	bl	14140 <__assert_fail@plt>
   1a080:	ldr	r2, [pc, #-2056]	; 19880 <__flatcc_fb_codegen_c@@Base+0x3588>
   1a084:	ldr	r1, [sp, #68]	; 0x44
   1a088:	ldr	r3, [pc, #-2356]	; 1975c <__flatcc_fb_codegen_c@@Base+0x3464>
   1a08c:	ldr	r4, [pc, #-2356]	; 19760 <__flatcc_fb_codegen_c@@Base+0x3468>
   1a090:	ldr	r1, [r1, r2]
   1a094:	add	r3, pc, r3
   1a098:	str	r3, [sp]
   1a09c:	ldr	r0, [r1]
   1a0a0:	ldr	r1, [pc, #-2372]	; 19764 <__flatcc_fb_codegen_c@@Base+0x346c>
   1a0a4:	add	r4, pc, r4
   1a0a8:	mov	r2, r4
   1a0ac:	mov	r3, #260	; 0x104
   1a0b0:	add	r1, pc, r1
   1a0b4:	bl	1408c <fprintf@plt>
   1a0b8:	ldr	r3, [pc, #-2392]	; 19768 <__flatcc_fb_codegen_c@@Base+0x3470>
   1a0bc:	ldr	r0, [pc, #-2392]	; 1976c <__flatcc_fb_codegen_c@@Base+0x3474>
   1a0c0:	add	r3, pc, r3
   1a0c4:	mov	r1, r4
   1a0c8:	add	r3, r3, #64	; 0x40
   1a0cc:	mov	r2, #260	; 0x104
   1a0d0:	add	r0, pc, r0
   1a0d4:	bl	14140 <__assert_fail@plt>
   1a0d8:	ldr	r2, [pc, #-2144]	; 19880 <__flatcc_fb_codegen_c@@Base+0x3588>
   1a0dc:	ldr	r1, [sp, #68]	; 0x44
   1a0e0:	ldr	r3, [pc, #-2424]	; 19770 <__flatcc_fb_codegen_c@@Base+0x3478>
   1a0e4:	ldr	r4, [pc, #-2424]	; 19774 <__flatcc_fb_codegen_c@@Base+0x347c>
   1a0e8:	ldr	r1, [r1, r2]
   1a0ec:	add	r3, pc, r3
   1a0f0:	str	r3, [sp]
   1a0f4:	ldr	r0, [r1]
   1a0f8:	ldr	r1, [pc, #-2440]	; 19778 <__flatcc_fb_codegen_c@@Base+0x3480>
   1a0fc:	add	r4, pc, r4
   1a100:	mov	r2, r4
   1a104:	mov	r3, #226	; 0xe2
   1a108:	add	r1, pc, r1
   1a10c:	bl	1408c <fprintf@plt>
   1a110:	ldr	r3, [pc, #-2460]	; 1977c <__flatcc_fb_codegen_c@@Base+0x3484>
   1a114:	ldr	r0, [pc, #-2460]	; 19780 <__flatcc_fb_codegen_c@@Base+0x3488>
   1a118:	add	r3, pc, r3
   1a11c:	mov	r1, r4
   1a120:	add	r3, r3, #52	; 0x34
   1a124:	mov	r2, #226	; 0xe2
   1a128:	add	r0, pc, r0
   1a12c:	bl	14140 <__assert_fail@plt>
   1a130:	ldr	r2, [pc, #-2232]	; 19880 <__flatcc_fb_codegen_c@@Base+0x3588>
   1a134:	ldr	r1, [sp, #68]	; 0x44
   1a138:	ldr	r3, [pc, #-2492]	; 19784 <__flatcc_fb_codegen_c@@Base+0x348c>
   1a13c:	ldr	r4, [pc, #-2492]	; 19788 <__flatcc_fb_codegen_c@@Base+0x3490>
   1a140:	ldr	r1, [r1, r2]
   1a144:	add	r3, pc, r3
   1a148:	str	r3, [sp]
   1a14c:	ldr	r0, [r1]
   1a150:	ldr	r1, [pc, #-2508]	; 1978c <__flatcc_fb_codegen_c@@Base+0x3494>
   1a154:	add	r4, pc, r4
   1a158:	mov	r2, r4
   1a15c:	mov	r3, #226	; 0xe2
   1a160:	add	r1, pc, r1
   1a164:	bl	1408c <fprintf@plt>
   1a168:	ldr	r3, [pc, #-2528]	; 19790 <__flatcc_fb_codegen_c@@Base+0x3498>
   1a16c:	ldr	r0, [pc, #-2528]	; 19794 <__flatcc_fb_codegen_c@@Base+0x349c>
   1a170:	add	r3, pc, r3
   1a174:	mov	r1, r4
   1a178:	add	r3, r3, #52	; 0x34
   1a17c:	mov	r2, #226	; 0xe2
   1a180:	add	r0, pc, r0
   1a184:	bl	14140 <__assert_fail@plt>
   1a188:	ldr	r0, [pc, #-2552]	; 19798 <__flatcc_fb_codegen_c@@Base+0x34a0>
   1a18c:	mov	r2, #66	; 0x42
   1a190:	mov	r1, #1
   1a194:	add	r0, pc, r0
   1a198:	bl	14014 <fwrite@plt>
   1a19c:	ldr	r0, [pc, #-2568]	; 1979c <__flatcc_fb_codegen_c@@Base+0x34a4>
   1a1a0:	ldr	r3, [r4, #204]	; 0xcc
   1a1a4:	mov	r2, #61	; 0x3d
   1a1a8:	mov	r1, #1
   1a1ac:	add	r0, pc, r0
   1a1b0:	bl	14014 <fwrite@plt>
   1a1b4:	ldr	r3, [sp, #60]	; 0x3c
   1a1b8:	ldr	r1, [pc, #-2592]	; 197a0 <__flatcc_fb_codegen_c@@Base+0x34a8>
   1a1bc:	ldr	r0, [r4, #204]	; 0xcc
   1a1c0:	mov	r2, r4
   1a1c4:	str	r3, [sp, #8]
   1a1c8:	stm	sp, {r6, r7}
   1a1cc:	ldr	r3, [sp, #48]	; 0x30
   1a1d0:	add	r1, pc, r1
   1a1d4:	bl	1408c <fprintf@plt>
   1a1d8:	ldr	r3, [r4, #212]	; 0xd4
   1a1dc:	ldr	r3, [r3, #136]	; 0x88
   1a1e0:	cmp	r3, #0
   1a1e4:	beq	188d0 <__flatcc_fb_codegen_c@@Base+0x25d8>
   1a1e8:	ldr	r3, [sp, #60]	; 0x3c
   1a1ec:	ldr	r1, [pc, #-2640]	; 197a4 <__flatcc_fb_codegen_c@@Base+0x34ac>
   1a1f0:	ldr	r0, [r4, #204]	; 0xcc
   1a1f4:	mov	r2, r4
   1a1f8:	str	r3, [sp, #8]
   1a1fc:	str	r4, [sp, #12]
   1a200:	stm	sp, {r6, r7}
   1a204:	ldr	r3, [sp, #48]	; 0x30
   1a208:	add	r1, pc, r1
   1a20c:	bl	1408c <fprintf@plt>
   1a210:	b	188d0 <__flatcc_fb_codegen_c@@Base+0x25d8>
   1a214:	vldr	d7, [r5, #48]	; 0x30
   1a218:	ldr	r1, [pc, #-2680]	; 197a8 <__flatcc_fb_codegen_c@@Base+0x34b0>
   1a21c:	add	r3, sp, #92	; 0x5c
   1a220:	str	r3, [sp, #84]	; 0x54
   1a224:	vcvt.f32.f64	s14, d7
   1a228:	mov	r0, r3
   1a22c:	add	r1, pc, r1
   1a230:	vcvt.f64.f32	d7, s14
   1a234:	vmov	r2, r3, d7
   1a238:	bl	140f8 <sprintf@plt>
   1a23c:	b	198b8 <__flatcc_fb_codegen_c@@Base+0x35c0>
   1a240:	ldr	r2, [pc, #-2716]	; 197ac <__flatcc_fb_codegen_c@@Base+0x34b4>
   1a244:	add	r2, pc, r2
   1a248:	ldrd	r0, [r5, #48]	; 0x30
   1a24c:	add	r3, sp, #92	; 0x5c
   1a250:	str	r3, [sp, #84]	; 0x54
   1a254:	strd	r0, [sp]
   1a258:	ldr	r1, [pc, #-2736]	; 197b0 <__flatcc_fb_codegen_c@@Base+0x34b8>
   1a25c:	mov	r0, r3
   1a260:	add	r1, pc, r1
   1a264:	bl	140f8 <sprintf@plt>
   1a268:	b	198b8 <__flatcc_fb_codegen_c@@Base+0x35c0>
   1a26c:	ldr	r2, [pc, #-2752]	; 197b4 <__flatcc_fb_codegen_c@@Base+0x34bc>
   1a270:	add	r2, pc, r2
   1a274:	b	1a248 <__flatcc_fb_codegen_c@@Base+0x3f50>
   1a278:	ldr	r2, [pc, #-2760]	; 197b8 <__flatcc_fb_codegen_c@@Base+0x34c0>
   1a27c:	add	r2, pc, r2
   1a280:	ldrd	r0, [r5, #48]	; 0x30
   1a284:	add	r3, sp, #92	; 0x5c
   1a288:	str	r3, [sp, #84]	; 0x54
   1a28c:	strd	r0, [sp]
   1a290:	ldr	r1, [pc, #-2780]	; 197bc <__flatcc_fb_codegen_c@@Base+0x34c4>
   1a294:	mov	r0, r3
   1a298:	add	r1, pc, r1
   1a29c:	bl	140f8 <sprintf@plt>
   1a2a0:	b	198b8 <__flatcc_fb_codegen_c@@Base+0x35c0>
   1a2a4:	ldr	r2, [pc, #-2796]	; 197c0 <__flatcc_fb_codegen_c@@Base+0x34c8>
   1a2a8:	add	r2, pc, r2
   1a2ac:	b	1a280 <__flatcc_fb_codegen_c@@Base+0x3f88>
   1a2b0:	ldr	r3, [pc, #-2804]	; 197c4 <__flatcc_fb_codegen_c@@Base+0x34cc>
   1a2b4:	ldr	r1, [pc, #-2804]	; 197c8 <__flatcc_fb_codegen_c@@Base+0x34d0>
   1a2b8:	ldr	r0, [pc, #-2804]	; 197cc <__flatcc_fb_codegen_c@@Base+0x34d4>
   1a2bc:	add	r3, pc, r3
   1a2c0:	ldr	r2, [pc, #-2808]	; 197d0 <__flatcc_fb_codegen_c@@Base+0x34d8>
   1a2c4:	add	r3, r3, #148	; 0x94
   1a2c8:	add	r1, pc, r1
   1a2cc:	add	r0, pc, r0
   1a2d0:	bl	14140 <__assert_fail@plt>
   1a2d4:	ldr	r2, [pc, #-2824]	; 197d4 <__flatcc_fb_codegen_c@@Base+0x34dc>
   1a2d8:	add	r2, pc, r2
   1a2dc:	ldr	r1, [pc, #-2828]	; 197d8 <__flatcc_fb_codegen_c@@Base+0x34e0>
   1a2e0:	add	r3, sp, #92	; 0x5c
   1a2e4:	str	r3, [sp, #84]	; 0x54
   1a2e8:	mov	r0, r3
   1a2ec:	add	r1, pc, r1
   1a2f0:	ldrb	r3, [r5, #48]	; 0x30
   1a2f4:	bl	140f8 <sprintf@plt>
   1a2f8:	b	198b8 <__flatcc_fb_codegen_c@@Base+0x35c0>
   1a2fc:	ldr	r2, [pc, #-2856]	; 197dc <__flatcc_fb_codegen_c@@Base+0x34e4>
   1a300:	add	r2, pc, r2
   1a304:	b	1a2dc <__flatcc_fb_codegen_c@@Base+0x3fe4>
   1a308:	ldr	r3, [pc, #-2864]	; 197e0 <__flatcc_fb_codegen_c@@Base+0x34e8>
   1a30c:	ldr	r1, [pc, #-2864]	; 197e4 <__flatcc_fb_codegen_c@@Base+0x34ec>
   1a310:	ldr	r0, [pc, #-2864]	; 197e8 <__flatcc_fb_codegen_c@@Base+0x34f0>
   1a314:	add	r3, pc, r3
   1a318:	ldr	r2, [pc, #-2868]	; 197ec <__flatcc_fb_codegen_c@@Base+0x34f4>
   1a31c:	add	r3, r3, #112	; 0x70
   1a320:	add	r1, pc, r1
   1a324:	add	r0, pc, r0
   1a328:	bl	14140 <__assert_fail@plt>
   1a32c:	ldr	r2, [pc, #-2740]	; 19880 <__flatcc_fb_codegen_c@@Base+0x3588>
   1a330:	ldr	r1, [sp, #68]	; 0x44
   1a334:	ldr	r3, [pc, #-2892]	; 197f0 <__flatcc_fb_codegen_c@@Base+0x34f8>
   1a338:	ldr	r4, [pc, #-2892]	; 197f4 <__flatcc_fb_codegen_c@@Base+0x34fc>
   1a33c:	ldr	r1, [r1, r2]
   1a340:	add	r3, pc, r3
   1a344:	str	r3, [sp]
   1a348:	ldr	r0, [r1]
   1a34c:	ldr	r1, [pc, #-2908]	; 197f8 <__flatcc_fb_codegen_c@@Base+0x3500>
   1a350:	add	r4, pc, r4
   1a354:	mov	r2, r4
   1a358:	mov	r3, #1584	; 0x630
   1a35c:	add	r1, pc, r1
   1a360:	bl	1408c <fprintf@plt>
   1a364:	ldr	r3, [pc, #-2928]	; 197fc <__flatcc_fb_codegen_c@@Base+0x3504>
   1a368:	ldr	r0, [pc, #-2928]	; 19800 <__flatcc_fb_codegen_c@@Base+0x3508>
   1a36c:	add	r3, pc, r3
   1a370:	mov	r1, r4
   1a374:	add	r3, r3, #112	; 0x70
   1a378:	mov	r2, #1584	; 0x630
   1a37c:	add	r0, pc, r0
   1a380:	bl	14140 <__assert_fail@plt>
   1a384:	ldr	r2, [pc, #-2952]	; 19804 <__flatcc_fb_codegen_c@@Base+0x350c>
   1a388:	add	r2, pc, r2
   1a38c:	b	1a280 <__flatcc_fb_codegen_c@@Base+0x3f88>
   1a390:	ldr	r2, [pc, #-2960]	; 19808 <__flatcc_fb_codegen_c@@Base+0x3510>
   1a394:	add	r2, pc, r2
   1a398:	b	1a280 <__flatcc_fb_codegen_c@@Base+0x3f88>
   1a39c:	ldr	r2, [pc, #-2968]	; 1980c <__flatcc_fb_codegen_c@@Base+0x3514>
   1a3a0:	add	r2, pc, r2
   1a3a4:	b	1a280 <__flatcc_fb_codegen_c@@Base+0x3f88>
   1a3a8:	ldr	r2, [pc, #-2976]	; 19810 <__flatcc_fb_codegen_c@@Base+0x3518>
   1a3ac:	add	r2, pc, r2
   1a3b0:	b	1a280 <__flatcc_fb_codegen_c@@Base+0x3f88>
   1a3b4:	ldr	r2, [pc, #-2984]	; 19814 <__flatcc_fb_codegen_c@@Base+0x351c>
   1a3b8:	add	r2, pc, r2
   1a3bc:	b	1a280 <__flatcc_fb_codegen_c@@Base+0x3f88>
   1a3c0:	ldr	r2, [pc, #-2992]	; 19818 <__flatcc_fb_codegen_c@@Base+0x3520>
   1a3c4:	add	r2, pc, r2
   1a3c8:	b	1a280 <__flatcc_fb_codegen_c@@Base+0x3f88>
   1a3cc:	ldr	r2, [pc, #-3000]	; 1981c <__flatcc_fb_codegen_c@@Base+0x3524>
   1a3d0:	add	r2, pc, r2
   1a3d4:	b	1a280 <__flatcc_fb_codegen_c@@Base+0x3f88>
   1a3d8:	ldr	r2, [pc, #-2912]	; 19880 <__flatcc_fb_codegen_c@@Base+0x3588>
   1a3dc:	ldr	r1, [sp, #68]	; 0x44
   1a3e0:	ldr	r3, [pc, #-3016]	; 19820 <__flatcc_fb_codegen_c@@Base+0x3528>
   1a3e4:	ldr	r4, [pc, #-3016]	; 19824 <__flatcc_fb_codegen_c@@Base+0x352c>
   1a3e8:	ldr	r1, [r1, r2]
   1a3ec:	add	r3, pc, r3
   1a3f0:	str	r3, [sp]
   1a3f4:	ldr	r0, [r1]
   1a3f8:	ldr	r1, [pc, #-3032]	; 19828 <__flatcc_fb_codegen_c@@Base+0x3530>
   1a3fc:	add	r4, pc, r4
   1a400:	mov	r2, r4
   1a404:	mov	r3, #226	; 0xe2
   1a408:	add	r1, pc, r1
   1a40c:	bl	1408c <fprintf@plt>
   1a410:	ldr	r3, [pc, #-3052]	; 1982c <__flatcc_fb_codegen_c@@Base+0x3534>
   1a414:	ldr	r0, [pc, #-3052]	; 19830 <__flatcc_fb_codegen_c@@Base+0x3538>
   1a418:	add	r3, pc, r3
   1a41c:	mov	r1, r4
   1a420:	add	r3, r3, #52	; 0x34
   1a424:	mov	r2, #226	; 0xe2
   1a428:	add	r0, pc, r0
   1a42c:	bl	14140 <__assert_fail@plt>
   1a430:	ldr	r2, [pc, #-3076]	; 19834 <__flatcc_fb_codegen_c@@Base+0x353c>
   1a434:	add	r2, pc, r2
   1a438:	b	1a248 <__flatcc_fb_codegen_c@@Base+0x3f50>
   1a43c:	ldr	r2, [pc, #-3084]	; 19838 <__flatcc_fb_codegen_c@@Base+0x3540>
   1a440:	add	r2, pc, r2
   1a444:	b	1a248 <__flatcc_fb_codegen_c@@Base+0x3f50>
   1a448:	ldr	r2, [pc, #-3092]	; 1983c <__flatcc_fb_codegen_c@@Base+0x3544>
   1a44c:	add	r2, pc, r2
   1a450:	b	1a248 <__flatcc_fb_codegen_c@@Base+0x3f50>
   1a454:	ldr	r2, [pc, #-3100]	; 19840 <__flatcc_fb_codegen_c@@Base+0x3548>
   1a458:	add	r2, pc, r2
   1a45c:	b	1a248 <__flatcc_fb_codegen_c@@Base+0x3f50>
   1a460:	ldr	r2, [pc, #-3108]	; 19844 <__flatcc_fb_codegen_c@@Base+0x354c>
   1a464:	add	r2, pc, r2
   1a468:	b	1a248 <__flatcc_fb_codegen_c@@Base+0x3f50>
   1a46c:	ldr	r2, [pc, #-3116]	; 19848 <__flatcc_fb_codegen_c@@Base+0x3550>
   1a470:	add	r2, pc, r2
   1a474:	b	1a248 <__flatcc_fb_codegen_c@@Base+0x3f50>
   1a478:	ldr	r2, [pc, #-3124]	; 1984c <__flatcc_fb_codegen_c@@Base+0x3554>
   1a47c:	add	r2, pc, r2
   1a480:	b	1a248 <__flatcc_fb_codegen_c@@Base+0x3f50>
   1a484:	ldr	r2, [pc, #-3084]	; 19880 <__flatcc_fb_codegen_c@@Base+0x3588>
   1a488:	ldr	r1, [sp, #68]	; 0x44
   1a48c:	ldr	r3, [pc, #-3140]	; 19850 <__flatcc_fb_codegen_c@@Base+0x3558>
   1a490:	ldr	r4, [pc, #-3140]	; 19854 <__flatcc_fb_codegen_c@@Base+0x355c>
   1a494:	ldr	r1, [r1, r2]
   1a498:	add	r3, pc, r3
   1a49c:	str	r3, [sp]
   1a4a0:	ldr	r0, [r1]
   1a4a4:	ldr	r1, [pc, #-3156]	; 19858 <__flatcc_fb_codegen_c@@Base+0x3560>
   1a4a8:	add	r4, pc, r4
   1a4ac:	mov	r2, r4
   1a4b0:	mov	r3, #226	; 0xe2
   1a4b4:	add	r1, pc, r1
   1a4b8:	bl	1408c <fprintf@plt>
   1a4bc:	ldr	r3, [pc, #-3176]	; 1985c <__flatcc_fb_codegen_c@@Base+0x3564>
   1a4c0:	ldr	r0, [pc, #-3176]	; 19860 <__flatcc_fb_codegen_c@@Base+0x3568>
   1a4c4:	add	r3, pc, r3
   1a4c8:	mov	r1, r4
   1a4cc:	add	r3, r3, #52	; 0x34
   1a4d0:	mov	r2, #226	; 0xe2
   1a4d4:	add	r0, pc, r0
   1a4d8:	bl	14140 <__assert_fail@plt>
   1a4dc:	ldr	r2, [pc, #-3200]	; 19864 <__flatcc_fb_codegen_c@@Base+0x356c>
   1a4e0:	add	r2, pc, r2
   1a4e4:	b	1a2dc <__flatcc_fb_codegen_c@@Base+0x3fe4>
   1a4e8:	ldr	r2, [pc, #-3208]	; 19868 <__flatcc_fb_codegen_c@@Base+0x3570>
   1a4ec:	add	r2, pc, r2
   1a4f0:	b	1a2dc <__flatcc_fb_codegen_c@@Base+0x3fe4>
   1a4f4:	ldr	r2, [pc, #-3216]	; 1986c <__flatcc_fb_codegen_c@@Base+0x3574>
   1a4f8:	add	r2, pc, r2
   1a4fc:	b	1a2dc <__flatcc_fb_codegen_c@@Base+0x3fe4>
   1a500:	ldr	r2, [pc, #-3224]	; 19870 <__flatcc_fb_codegen_c@@Base+0x3578>
   1a504:	add	r2, pc, r2
   1a508:	b	1a2dc <__flatcc_fb_codegen_c@@Base+0x3fe4>
   1a50c:	ldr	r2, [pc, #-3232]	; 19874 <__flatcc_fb_codegen_c@@Base+0x357c>
   1a510:	add	r2, pc, r2
   1a514:	b	1a2dc <__flatcc_fb_codegen_c@@Base+0x3fe4>
   1a518:	ldr	r2, [pc, #-3240]	; 19878 <__flatcc_fb_codegen_c@@Base+0x3580>
   1a51c:	add	r2, pc, r2
   1a520:	b	1a2dc <__flatcc_fb_codegen_c@@Base+0x3fe4>
   1a524:	ldr	r2, [pc, #-3248]	; 1987c <__flatcc_fb_codegen_c@@Base+0x3584>
   1a528:	add	r2, pc, r2
   1a52c:	b	1a2dc <__flatcc_fb_codegen_c@@Base+0x3fe4>
   1a530:	ldr	r2, [pc, #-3256]	; 19880 <__flatcc_fb_codegen_c@@Base+0x3588>
   1a534:	ldr	r1, [sp, #68]	; 0x44
   1a538:	ldr	r3, [pc, #-3260]	; 19884 <__flatcc_fb_codegen_c@@Base+0x358c>
   1a53c:	ldr	r4, [pc, #-3260]	; 19888 <__flatcc_fb_codegen_c@@Base+0x3590>
   1a540:	ldr	r1, [r1, r2]
   1a544:	add	r3, pc, r3
   1a548:	str	r3, [sp]
   1a54c:	ldr	r0, [r1]
   1a550:	ldr	r1, [pc, #-3276]	; 1988c <__flatcc_fb_codegen_c@@Base+0x3594>
   1a554:	add	r4, pc, r4
   1a558:	mov	r2, r4
   1a55c:	mov	r3, #226	; 0xe2
   1a560:	add	r1, pc, r1
   1a564:	bl	1408c <fprintf@plt>
   1a568:	ldr	r3, [pc, #-3296]	; 19890 <__flatcc_fb_codegen_c@@Base+0x3598>
   1a56c:	ldr	r0, [pc, #-3296]	; 19894 <__flatcc_fb_codegen_c@@Base+0x359c>
   1a570:	add	r3, pc, r3
   1a574:	mov	r1, r4
   1a578:	add	r3, r3, #52	; 0x34
   1a57c:	mov	r2, #226	; 0xe2
   1a580:	add	r0, pc, r0
   1a584:	bl	14140 <__assert_fail@plt>

0001a588 <__flatcc_fb_gen_common_c_header@@Base>:
   1a588:	ldr	r1, [pc, #3160]	; 1b1e8 <__flatcc_fb_gen_common_c_header@@Base+0xc60>
   1a58c:	push	{r4, r5, lr}
   1a590:	add	r5, r0, #102	; 0x66
   1a594:	mov	r4, r0
   1a598:	sub	sp, sp, #236	; 0xec
   1a59c:	mov	r3, r5
   1a5a0:	mov	r2, r5
   1a5a4:	add	r1, pc, r1
   1a5a8:	ldr	r0, [r0, #204]	; 0xcc
   1a5ac:	bl	1408c <fprintf@plt>
   1a5b0:	ldr	r0, [pc, #3124]	; 1b1ec <__flatcc_fb_gen_common_c_header@@Base+0xc64>
   1a5b4:	ldr	r3, [r4, #204]	; 0xcc
   1a5b8:	mov	r2, #81	; 0x51
   1a5bc:	mov	r1, #1
   1a5c0:	add	r0, pc, r0
   1a5c4:	bl	14014 <fwrite@plt>
   1a5c8:	ldr	r0, [pc, #3104]	; 1b1f0 <__flatcc_fb_gen_common_c_header@@Base+0xc68>
   1a5cc:	ldr	r3, [r4, #204]	; 0xcc
   1a5d0:	mov	r2, #52	; 0x34
   1a5d4:	mov	r1, #1
   1a5d8:	add	r0, pc, r0
   1a5dc:	bl	14014 <fwrite@plt>
   1a5e0:	ldr	r3, [r4, #212]	; 0xd4
   1a5e4:	ldr	r2, [r3, #136]	; 0x88
   1a5e8:	cmp	r2, #0
   1a5ec:	beq	1b1c8 <__flatcc_fb_gen_common_c_header@@Base+0xc40>
   1a5f0:	ldr	r2, [r3, #140]	; 0x8c
   1a5f4:	ldr	r3, [r4, #204]	; 0xcc
   1a5f8:	cmp	r2, #0
   1a5fc:	bne	1b1ac <__flatcc_fb_gen_common_c_header@@Base+0xc24>
   1a600:	ldr	r0, [pc, #3052]	; 1b1f4 <__flatcc_fb_gen_common_c_header@@Base+0xc6c>
   1a604:	mov	r2, #41	; 0x29
   1a608:	mov	r1, #1
   1a60c:	add	r0, pc, r0
   1a610:	bl	14014 <fwrite@plt>
   1a614:	ldr	r1, [pc, #3036]	; 1b1f8 <__flatcc_fb_gen_common_c_header@@Base+0xc70>
   1a618:	mov	r0, r4
   1a61c:	add	r1, pc, r1
   1a620:	bl	13fb4 <strcmp@plt>
   1a624:	cmp	r0, #0
   1a628:	bne	1b124 <__flatcc_fb_gen_common_c_header@@Base+0xb9c>
   1a62c:	ldr	r1, [pc, #3016]	; 1b1fc <__flatcc_fb_gen_common_c_header@@Base+0xc74>
   1a630:	mov	r3, r4
   1a634:	mov	r2, r4
   1a638:	add	r1, pc, r1
   1a63c:	ldr	r0, [r4, #204]	; 0xcc
   1a640:	bl	1408c <fprintf@plt>
   1a644:	ldr	r1, [pc, #2996]	; 1b200 <__flatcc_fb_gen_common_c_header@@Base+0xc78>
   1a648:	ldr	r0, [r4, #204]	; 0xcc
   1a64c:	mov	r3, r4
   1a650:	mov	r2, r4
   1a654:	add	r1, pc, r1
   1a658:	str	r4, [sp, #16]
   1a65c:	str	r4, [sp, #12]
   1a660:	str	r4, [sp, #8]
   1a664:	str	r4, [sp, #4]
   1a668:	str	r4, [sp]
   1a66c:	bl	1408c <fprintf@plt>
   1a670:	ldr	r1, [pc, #2956]	; 1b204 <__flatcc_fb_gen_common_c_header@@Base+0xc7c>
   1a674:	mov	r3, r4
   1a678:	mov	r2, r4
   1a67c:	add	r1, pc, r1
   1a680:	ldr	r0, [r4, #204]	; 0xcc
   1a684:	bl	1408c <fprintf@plt>
   1a688:	ldr	r1, [pc, #2936]	; 1b208 <__flatcc_fb_gen_common_c_header@@Base+0xc80>
   1a68c:	ldr	r0, [r4, #204]	; 0xcc
   1a690:	mov	r3, r4
   1a694:	str	r4, [sp, #4]
   1a698:	str	r4, [sp]
   1a69c:	mov	r2, r4
   1a6a0:	add	r1, pc, r1
   1a6a4:	bl	1408c <fprintf@plt>
   1a6a8:	ldr	r3, [r4, #212]	; 0xd4
   1a6ac:	ldr	r3, [r3, #32]
   1a6b0:	cmp	r3, #0
   1a6b4:	beq	1b0e4 <__flatcc_fb_gen_common_c_header@@Base+0xb5c>
   1a6b8:	ldr	r1, [pc, #2892]	; 1b20c <__flatcc_fb_gen_common_c_header@@Base+0xc84>
   1a6bc:	mov	r2, r4
   1a6c0:	add	r1, pc, r1
   1a6c4:	ldr	r0, [r4, #204]	; 0xcc
   1a6c8:	bl	1408c <fprintf@plt>
   1a6cc:	ldr	r1, [pc, #2876]	; 1b210 <__flatcc_fb_gen_common_c_header@@Base+0xc88>
   1a6d0:	mov	r3, r4
   1a6d4:	mov	r2, r4
   1a6d8:	add	r1, pc, r1
   1a6dc:	ldr	r0, [r4, #204]	; 0xcc
   1a6e0:	bl	1408c <fprintf@plt>
   1a6e4:	ldr	r1, [pc, #2856]	; 1b214 <__flatcc_fb_gen_common_c_header@@Base+0xc8c>
   1a6e8:	ldr	r0, [r4, #204]	; 0xcc
   1a6ec:	mov	r3, r4
   1a6f0:	mov	r2, r4
   1a6f4:	add	r1, pc, r1
   1a6f8:	str	r4, [sp, #8]
   1a6fc:	str	r4, [sp, #4]
   1a700:	str	r4, [sp]
   1a704:	bl	1408c <fprintf@plt>
   1a708:	ldr	r1, [pc, #2824]	; 1b218 <__flatcc_fb_gen_common_c_header@@Base+0xc90>
   1a70c:	ldr	r0, [r4, #204]	; 0xcc
   1a710:	mov	r3, r4
   1a714:	mov	r2, r4
   1a718:	add	r1, pc, r1
   1a71c:	str	r4, [sp, #8]
   1a720:	str	r4, [sp, #4]
   1a724:	str	r4, [sp]
   1a728:	bl	1408c <fprintf@plt>
   1a72c:	ldr	r1, [pc, #2792]	; 1b21c <__flatcc_fb_gen_common_c_header@@Base+0xc94>
   1a730:	ldr	r0, [r4, #204]	; 0xcc
   1a734:	mov	r3, r4
   1a738:	mov	r2, r4
   1a73c:	add	r1, pc, r1
   1a740:	str	r4, [sp]
   1a744:	bl	1408c <fprintf@plt>
   1a748:	ldr	r1, [pc, #2768]	; 1b220 <__flatcc_fb_gen_common_c_header@@Base+0xc98>
   1a74c:	ldr	r0, [r4, #204]	; 0xcc
   1a750:	mov	r3, r4
   1a754:	mov	r2, r4
   1a758:	add	r1, pc, r1
   1a75c:	str	r4, [sp]
   1a760:	bl	1408c <fprintf@plt>
   1a764:	ldr	r1, [pc, #2744]	; 1b224 <__flatcc_fb_gen_common_c_header@@Base+0xc9c>
   1a768:	ldr	r0, [r4, #204]	; 0xcc
   1a76c:	mov	r3, r4
   1a770:	mov	r2, r4
   1a774:	add	r1, pc, r1
   1a778:	str	r4, [sp]
   1a77c:	bl	1408c <fprintf@plt>
   1a780:	ldr	r1, [pc, #2720]	; 1b228 <__flatcc_fb_gen_common_c_header@@Base+0xca0>
   1a784:	ldr	r0, [r4, #204]	; 0xcc
   1a788:	mov	r3, r4
   1a78c:	str	r4, [sp, #8]
   1a790:	str	r4, [sp, #4]
   1a794:	str	r4, [sp]
   1a798:	mov	r2, r4
   1a79c:	add	r1, pc, r1
   1a7a0:	bl	1408c <fprintf@plt>
   1a7a4:	ldr	r3, [r4, #212]	; 0xd4
   1a7a8:	ldr	r3, [r3, #32]
   1a7ac:	cmp	r3, #0
   1a7b0:	beq	1b0d4 <__flatcc_fb_gen_common_c_header@@Base+0xb4c>
   1a7b4:	ldr	r1, [pc, #2672]	; 1b22c <__flatcc_fb_gen_common_c_header@@Base+0xca4>
   1a7b8:	mov	r2, r4
   1a7bc:	add	r1, pc, r1
   1a7c0:	ldr	r0, [r4, #204]	; 0xcc
   1a7c4:	bl	1408c <fprintf@plt>
   1a7c8:	ldr	r1, [pc, #2656]	; 1b230 <__flatcc_fb_gen_common_c_header@@Base+0xca8>
   1a7cc:	ldr	r0, [r4, #204]	; 0xcc
   1a7d0:	mov	r3, r4
   1a7d4:	mov	r2, r4
   1a7d8:	add	r1, pc, r1
   1a7dc:	str	r4, [sp, #4]
   1a7e0:	str	r4, [sp]
   1a7e4:	bl	1408c <fprintf@plt>
   1a7e8:	ldr	r1, [pc, #2628]	; 1b234 <__flatcc_fb_gen_common_c_header@@Base+0xcac>
   1a7ec:	mov	r3, r4
   1a7f0:	mov	r2, r4
   1a7f4:	add	r1, pc, r1
   1a7f8:	ldr	r0, [r4, #204]	; 0xcc
   1a7fc:	bl	1408c <fprintf@plt>
   1a800:	ldr	r1, [pc, #2608]	; 1b238 <__flatcc_fb_gen_common_c_header@@Base+0xcb0>
   1a804:	ldr	r0, [r4, #204]	; 0xcc
   1a808:	mov	r3, r4
   1a80c:	mov	r2, r4
   1a810:	add	r1, pc, r1
   1a814:	str	r4, [sp]
   1a818:	bl	1408c <fprintf@plt>
   1a81c:	ldr	r1, [pc, #2584]	; 1b23c <__flatcc_fb_gen_common_c_header@@Base+0xcb4>
   1a820:	mov	r3, r4
   1a824:	mov	r2, r4
   1a828:	add	r1, pc, r1
   1a82c:	ldr	r0, [r4, #204]	; 0xcc
   1a830:	bl	1408c <fprintf@plt>
   1a834:	ldr	r1, [pc, #2564]	; 1b240 <__flatcc_fb_gen_common_c_header@@Base+0xcb8>
   1a838:	ldr	r0, [r4, #204]	; 0xcc
   1a83c:	mov	r3, r4
   1a840:	mov	r2, r4
   1a844:	add	r1, pc, r1
   1a848:	str	r4, [sp, #4]
   1a84c:	str	r4, [sp]
   1a850:	bl	1408c <fprintf@plt>
   1a854:	ldr	r1, [pc, #2536]	; 1b244 <__flatcc_fb_gen_common_c_header@@Base+0xcbc>
   1a858:	mov	r3, r4
   1a85c:	mov	r2, r4
   1a860:	add	r1, pc, r1
   1a864:	ldr	r0, [r4, #204]	; 0xcc
   1a868:	bl	1408c <fprintf@plt>
   1a86c:	ldr	r1, [pc, #2516]	; 1b248 <__flatcc_fb_gen_common_c_header@@Base+0xcc0>
   1a870:	mov	r3, r4
   1a874:	mov	r2, r4
   1a878:	add	r1, pc, r1
   1a87c:	ldr	r0, [r4, #204]	; 0xcc
   1a880:	bl	1408c <fprintf@plt>
   1a884:	ldr	r1, [pc, #2496]	; 1b24c <__flatcc_fb_gen_common_c_header@@Base+0xcc4>
   1a888:	ldr	r0, [r4, #204]	; 0xcc
   1a88c:	mov	r3, r4
   1a890:	mov	r2, r4
   1a894:	add	r1, pc, r1
   1a898:	str	r4, [sp, #4]
   1a89c:	str	r4, [sp]
   1a8a0:	bl	1408c <fprintf@plt>
   1a8a4:	ldr	r1, [pc, #2468]	; 1b250 <__flatcc_fb_gen_common_c_header@@Base+0xcc8>
   1a8a8:	ldr	r0, [r4, #204]	; 0xcc
   1a8ac:	mov	r3, r4
   1a8b0:	mov	r2, r4
   1a8b4:	add	r1, pc, r1
   1a8b8:	str	r4, [sp, #36]	; 0x24
   1a8bc:	str	r4, [sp, #32]
   1a8c0:	str	r4, [sp, #28]
   1a8c4:	str	r4, [sp, #24]
   1a8c8:	str	r4, [sp, #20]
   1a8cc:	str	r4, [sp, #16]
   1a8d0:	str	r4, [sp, #12]
   1a8d4:	str	r4, [sp, #8]
   1a8d8:	str	r4, [sp, #4]
   1a8dc:	str	r4, [sp]
   1a8e0:	bl	1408c <fprintf@plt>
   1a8e4:	ldr	r1, [pc, #2408]	; 1b254 <__flatcc_fb_gen_common_c_header@@Base+0xccc>
   1a8e8:	mov	r2, r4
   1a8ec:	add	r1, pc, r1
   1a8f0:	ldr	r0, [r4, #204]	; 0xcc
   1a8f4:	bl	1408c <fprintf@plt>
   1a8f8:	ldr	r1, [pc, #2392]	; 1b258 <__flatcc_fb_gen_common_c_header@@Base+0xcd0>
   1a8fc:	ldr	r0, [r4, #204]	; 0xcc
   1a900:	mov	r3, r4
   1a904:	mov	r2, r4
   1a908:	add	r1, pc, r1
   1a90c:	str	r4, [sp, #4]
   1a910:	str	r4, [sp]
   1a914:	bl	1408c <fprintf@plt>
   1a918:	ldr	r1, [pc, #2364]	; 1b25c <__flatcc_fb_gen_common_c_header@@Base+0xcd4>
   1a91c:	ldr	r0, [r4, #204]	; 0xcc
   1a920:	mov	r3, r4
   1a924:	mov	r2, r4
   1a928:	add	r1, pc, r1
   1a92c:	str	r4, [sp, #56]	; 0x38
   1a930:	str	r4, [sp, #52]	; 0x34
   1a934:	str	r4, [sp, #48]	; 0x30
   1a938:	str	r4, [sp, #44]	; 0x2c
   1a93c:	str	r4, [sp, #40]	; 0x28
   1a940:	str	r4, [sp, #36]	; 0x24
   1a944:	str	r4, [sp, #32]
   1a948:	str	r4, [sp, #28]
   1a94c:	str	r4, [sp, #24]
   1a950:	str	r4, [sp, #20]
   1a954:	str	r4, [sp, #16]
   1a958:	str	r4, [sp, #12]
   1a95c:	str	r4, [sp, #8]
   1a960:	str	r4, [sp, #4]
   1a964:	str	r4, [sp]
   1a968:	bl	1408c <fprintf@plt>
   1a96c:	ldr	r1, [pc, #2284]	; 1b260 <__flatcc_fb_gen_common_c_header@@Base+0xcd8>
   1a970:	ldr	r0, [r4, #204]	; 0xcc
   1a974:	mov	r3, r4
   1a978:	mov	r2, r4
   1a97c:	add	r1, pc, r1
   1a980:	str	r4, [sp, #20]
   1a984:	str	r4, [sp, #16]
   1a988:	str	r4, [sp, #12]
   1a98c:	str	r4, [sp, #8]
   1a990:	str	r4, [sp, #4]
   1a994:	str	r4, [sp]
   1a998:	bl	1408c <fprintf@plt>
   1a99c:	ldr	r1, [pc, #2240]	; 1b264 <__flatcc_fb_gen_common_c_header@@Base+0xcdc>
   1a9a0:	ldr	r0, [r4, #204]	; 0xcc
   1a9a4:	mov	r3, r4
   1a9a8:	mov	r2, r4
   1a9ac:	add	r1, pc, r1
   1a9b0:	str	r4, [sp, #4]
   1a9b4:	str	r4, [sp]
   1a9b8:	bl	1408c <fprintf@plt>
   1a9bc:	ldr	r1, [pc, #2212]	; 1b268 <__flatcc_fb_gen_common_c_header@@Base+0xce0>
   1a9c0:	mov	r3, r4
   1a9c4:	ldr	r0, [r4, #204]	; 0xcc
   1a9c8:	mov	r2, r4
   1a9cc:	add	r1, pc, r1
   1a9d0:	str	r4, [sp, #4]
   1a9d4:	str	r4, [sp]
   1a9d8:	bl	1408c <fprintf@plt>
   1a9dc:	ldr	r1, [pc, #2184]	; 1b26c <__flatcc_fb_gen_common_c_header@@Base+0xce4>
   1a9e0:	mov	r2, r4
   1a9e4:	add	r1, pc, r1
   1a9e8:	ldr	r0, [r4, #204]	; 0xcc
   1a9ec:	bl	1408c <fprintf@plt>
   1a9f0:	ldr	r1, [pc, #2168]	; 1b270 <__flatcc_fb_gen_common_c_header@@Base+0xce8>
   1a9f4:	mov	r2, r4
   1a9f8:	add	r1, pc, r1
   1a9fc:	ldr	r0, [r4, #204]	; 0xcc
   1aa00:	bl	1408c <fprintf@plt>
   1aa04:	ldr	r1, [pc, #2152]	; 1b274 <__flatcc_fb_gen_common_c_header@@Base+0xcec>
   1aa08:	mov	r2, r4
   1aa0c:	add	r1, pc, r1
   1aa10:	ldr	r0, [r4, #204]	; 0xcc
   1aa14:	bl	1408c <fprintf@plt>
   1aa18:	ldr	r1, [pc, #2136]	; 1b278 <__flatcc_fb_gen_common_c_header@@Base+0xcf0>
   1aa1c:	mov	r2, r4
   1aa20:	add	r1, pc, r1
   1aa24:	ldr	r0, [r4, #204]	; 0xcc
   1aa28:	bl	1408c <fprintf@plt>
   1aa2c:	ldr	r1, [pc, #2120]	; 1b27c <__flatcc_fb_gen_common_c_header@@Base+0xcf4>
   1aa30:	mov	r2, r4
   1aa34:	add	r1, pc, r1
   1aa38:	ldr	r0, [r4, #204]	; 0xcc
   1aa3c:	bl	1408c <fprintf@plt>
   1aa40:	ldr	r1, [pc, #2104]	; 1b280 <__flatcc_fb_gen_common_c_header@@Base+0xcf8>
   1aa44:	ldr	r0, [r4, #204]	; 0xcc
   1aa48:	mov	r3, r4
   1aa4c:	mov	r2, r4
   1aa50:	add	r1, pc, r1
   1aa54:	str	r4, [sp, #4]
   1aa58:	str	r4, [sp]
   1aa5c:	bl	1408c <fprintf@plt>
   1aa60:	ldr	r1, [pc, #2076]	; 1b284 <__flatcc_fb_gen_common_c_header@@Base+0xcfc>
   1aa64:	ldr	r0, [r4, #204]	; 0xcc
   1aa68:	mov	r3, r4
   1aa6c:	mov	r2, r4
   1aa70:	add	r1, pc, r1
   1aa74:	str	r4, [sp, #12]
   1aa78:	str	r4, [sp, #8]
   1aa7c:	str	r4, [sp, #4]
   1aa80:	str	r4, [sp]
   1aa84:	bl	1408c <fprintf@plt>
   1aa88:	ldr	r1, [pc, #2040]	; 1b288 <__flatcc_fb_gen_common_c_header@@Base+0xd00>
   1aa8c:	ldr	r0, [r4, #204]	; 0xcc
   1aa90:	mov	r3, r4
   1aa94:	mov	r2, r4
   1aa98:	add	r1, pc, r1
   1aa9c:	str	r4, [sp]
   1aaa0:	bl	1408c <fprintf@plt>
   1aaa4:	ldr	r1, [pc, #2016]	; 1b28c <__flatcc_fb_gen_common_c_header@@Base+0xd04>
   1aaa8:	ldr	r0, [r4, #204]	; 0xcc
   1aaac:	mov	r3, r4
   1aab0:	mov	r2, r4
   1aab4:	add	r1, pc, r1
   1aab8:	str	r4, [sp, #32]
   1aabc:	str	r4, [sp, #28]
   1aac0:	str	r4, [sp, #24]
   1aac4:	str	r4, [sp, #20]
   1aac8:	str	r4, [sp, #16]
   1aacc:	str	r4, [sp, #12]
   1aad0:	str	r4, [sp, #8]
   1aad4:	str	r4, [sp, #4]
   1aad8:	str	r4, [sp]
   1aadc:	bl	1408c <fprintf@plt>
   1aae0:	ldr	r1, [pc, #1960]	; 1b290 <__flatcc_fb_gen_common_c_header@@Base+0xd08>
   1aae4:	mov	r3, r4
   1aae8:	mov	r2, r4
   1aaec:	add	r1, pc, r1
   1aaf0:	ldr	r0, [r4, #204]	; 0xcc
   1aaf4:	bl	1408c <fprintf@plt>
   1aaf8:	ldr	r1, [pc, #1940]	; 1b294 <__flatcc_fb_gen_common_c_header@@Base+0xd0c>
   1aafc:	ldr	r0, [r4, #204]	; 0xcc
   1ab00:	mov	r3, r4
   1ab04:	mov	r2, r4
   1ab08:	add	r1, pc, r1
   1ab0c:	str	r4, [sp]
   1ab10:	bl	1408c <fprintf@plt>
   1ab14:	ldr	r1, [pc, #1916]	; 1b298 <__flatcc_fb_gen_common_c_header@@Base+0xd10>
   1ab18:	mov	r3, r4
   1ab1c:	ldr	r0, [r4, #204]	; 0xcc
   1ab20:	mov	r2, r4
   1ab24:	add	r1, pc, r1
   1ab28:	str	r4, [sp]
   1ab2c:	bl	1408c <fprintf@plt>
   1ab30:	ldr	r1, [pc, #1892]	; 1b29c <__flatcc_fb_gen_common_c_header@@Base+0xd14>
   1ab34:	mov	r2, r4
   1ab38:	add	r1, pc, r1
   1ab3c:	ldr	r0, [r4, #204]	; 0xcc
   1ab40:	bl	1408c <fprintf@plt>
   1ab44:	ldr	r1, [pc, #1876]	; 1b2a0 <__flatcc_fb_gen_common_c_header@@Base+0xd18>
   1ab48:	mov	r2, r4
   1ab4c:	add	r1, pc, r1
   1ab50:	ldr	r0, [r4, #204]	; 0xcc
   1ab54:	bl	1408c <fprintf@plt>
   1ab58:	ldr	r1, [pc, #1860]	; 1b2a4 <__flatcc_fb_gen_common_c_header@@Base+0xd1c>
   1ab5c:	mov	r3, r4
   1ab60:	mov	r2, r4
   1ab64:	add	r1, pc, r1
   1ab68:	ldr	r0, [r4, #204]	; 0xcc
   1ab6c:	bl	1408c <fprintf@plt>
   1ab70:	ldr	r1, [pc, #1840]	; 1b2a8 <__flatcc_fb_gen_common_c_header@@Base+0xd20>
   1ab74:	mov	r3, r4
   1ab78:	mov	r2, r4
   1ab7c:	add	r1, pc, r1
   1ab80:	ldr	r0, [r4, #204]	; 0xcc
   1ab84:	bl	1408c <fprintf@plt>
   1ab88:	ldr	r1, [pc, #1820]	; 1b2ac <__flatcc_fb_gen_common_c_header@@Base+0xd24>
   1ab8c:	ldr	r0, [r4, #204]	; 0xcc
   1ab90:	mov	r3, r4
   1ab94:	mov	r2, r4
   1ab98:	add	r1, pc, r1
   1ab9c:	str	r4, [sp, #32]
   1aba0:	str	r4, [sp, #28]
   1aba4:	str	r4, [sp, #24]
   1aba8:	str	r4, [sp, #20]
   1abac:	str	r4, [sp, #16]
   1abb0:	str	r4, [sp, #12]
   1abb4:	str	r4, [sp, #8]
   1abb8:	str	r4, [sp, #4]
   1abbc:	str	r4, [sp]
   1abc0:	bl	1408c <fprintf@plt>
   1abc4:	ldr	r1, [pc, #1764]	; 1b2b0 <__flatcc_fb_gen_common_c_header@@Base+0xd28>
   1abc8:	ldr	r0, [r4, #204]	; 0xcc
   1abcc:	mov	r3, r4
   1abd0:	mov	r2, r4
   1abd4:	add	r1, pc, r1
   1abd8:	str	r4, [sp, #32]
   1abdc:	str	r4, [sp, #28]
   1abe0:	str	r4, [sp, #24]
   1abe4:	str	r4, [sp, #20]
   1abe8:	str	r4, [sp, #16]
   1abec:	str	r4, [sp, #12]
   1abf0:	str	r4, [sp, #8]
   1abf4:	str	r4, [sp, #4]
   1abf8:	str	r4, [sp]
   1abfc:	bl	1408c <fprintf@plt>
   1ac00:	ldr	r1, [pc, #1708]	; 1b2b4 <__flatcc_fb_gen_common_c_header@@Base+0xd2c>
   1ac04:	ldr	r0, [r4, #204]	; 0xcc
   1ac08:	mov	r3, r4
   1ac0c:	mov	r2, r4
   1ac10:	add	r1, pc, r1
   1ac14:	str	r4, [sp, #16]
   1ac18:	str	r4, [sp, #12]
   1ac1c:	str	r4, [sp, #8]
   1ac20:	str	r4, [sp, #4]
   1ac24:	str	r4, [sp]
   1ac28:	bl	1408c <fprintf@plt>
   1ac2c:	ldr	r1, [pc, #1668]	; 1b2b8 <__flatcc_fb_gen_common_c_header@@Base+0xd30>
   1ac30:	ldr	r0, [r4, #204]	; 0xcc
   1ac34:	mov	r3, r4
   1ac38:	mov	r2, r4
   1ac3c:	add	r1, pc, r1
   1ac40:	str	r4, [sp, #32]
   1ac44:	str	r4, [sp, #28]
   1ac48:	str	r4, [sp, #24]
   1ac4c:	str	r4, [sp, #20]
   1ac50:	str	r4, [sp, #16]
   1ac54:	str	r4, [sp, #12]
   1ac58:	str	r4, [sp, #8]
   1ac5c:	str	r4, [sp, #4]
   1ac60:	str	r4, [sp]
   1ac64:	bl	1408c <fprintf@plt>
   1ac68:	ldr	r1, [pc, #1612]	; 1b2bc <__flatcc_fb_gen_common_c_header@@Base+0xd34>
   1ac6c:	ldr	r0, [r4, #204]	; 0xcc
   1ac70:	mov	r3, r4
   1ac74:	mov	r2, r4
   1ac78:	add	r1, pc, r1
   1ac7c:	str	r4, [sp, #40]	; 0x28
   1ac80:	str	r4, [sp, #36]	; 0x24
   1ac84:	str	r4, [sp, #32]
   1ac88:	str	r4, [sp, #28]
   1ac8c:	str	r4, [sp, #24]
   1ac90:	str	r4, [sp, #20]
   1ac94:	str	r4, [sp, #16]
   1ac98:	str	r4, [sp, #12]
   1ac9c:	str	r4, [sp, #8]
   1aca0:	str	r4, [sp, #4]
   1aca4:	str	r4, [sp]
   1aca8:	bl	1408c <fprintf@plt>
   1acac:	ldr	r1, [pc, #1548]	; 1b2c0 <__flatcc_fb_gen_common_c_header@@Base+0xd38>
   1acb0:	mov	r2, r4
   1acb4:	add	r1, pc, r1
   1acb8:	ldr	r0, [r4, #204]	; 0xcc
   1acbc:	bl	1408c <fprintf@plt>
   1acc0:	ldr	r1, [pc, #1532]	; 1b2c4 <__flatcc_fb_gen_common_c_header@@Base+0xd3c>
   1acc4:	mov	r2, r4
   1acc8:	add	r1, pc, r1
   1accc:	ldr	r0, [r4, #204]	; 0xcc
   1acd0:	bl	1408c <fprintf@plt>
   1acd4:	ldr	r3, [r4, #212]	; 0xd4
   1acd8:	ldr	r3, [r3, #136]	; 0x88
   1acdc:	cmp	r3, #0
   1ace0:	beq	1b0b8 <__flatcc_fb_gen_common_c_header@@Base+0xb30>
   1ace4:	mov	r0, r4
   1ace8:	bl	1b900 <__flatcc_gen_sort@@Base>
   1acec:	ldr	r1, [pc, #1492]	; 1b2c8 <__flatcc_fb_gen_common_c_header@@Base+0xd40>
   1acf0:	ldr	r0, [r4, #204]	; 0xcc
   1acf4:	mov	r3, r4
   1acf8:	str	r4, [sp, #8]
   1acfc:	str	r4, [sp, #4]
   1ad00:	str	r4, [sp]
   1ad04:	mov	r2, r4
   1ad08:	add	r1, pc, r1
   1ad0c:	bl	1408c <fprintf@plt>
   1ad10:	ldr	r3, [r4, #212]	; 0xd4
   1ad14:	ldr	r3, [r3, #136]	; 0x88
   1ad18:	cmp	r3, #0
   1ad1c:	beq	1b0a8 <__flatcc_fb_gen_common_c_header@@Base+0xb20>
   1ad20:	ldr	r1, [pc, #1444]	; 1b2cc <__flatcc_fb_gen_common_c_header@@Base+0xd44>
   1ad24:	mov	r2, r4
   1ad28:	add	r1, pc, r1
   1ad2c:	ldr	r0, [r4, #204]	; 0xcc
   1ad30:	bl	1408c <fprintf@plt>
   1ad34:	ldr	r1, [r4, #204]	; 0xcc
   1ad38:	mov	r0, #10
   1ad3c:	bl	140ec <fputc@plt>
   1ad40:	ldr	r1, [pc, #1416]	; 1b2d0 <__flatcc_fb_gen_common_c_header@@Base+0xd48>
   1ad44:	ldr	r0, [r4, #204]	; 0xcc
   1ad48:	mov	r3, r4
   1ad4c:	mov	r2, r4
   1ad50:	add	r1, pc, r1
   1ad54:	str	r4, [sp]
   1ad58:	bl	1408c <fprintf@plt>
   1ad5c:	ldr	r1, [pc, #1392]	; 1b2d4 <__flatcc_fb_gen_common_c_header@@Base+0xd4c>
   1ad60:	ldr	r0, [r4, #204]	; 0xcc
   1ad64:	mov	r3, r4
   1ad68:	mov	r2, r4
   1ad6c:	add	r1, pc, r1
   1ad70:	str	r4, [sp, #24]
   1ad74:	str	r4, [sp, #20]
   1ad78:	str	r4, [sp, #16]
   1ad7c:	str	r4, [sp, #12]
   1ad80:	str	r4, [sp, #8]
   1ad84:	str	r4, [sp, #4]
   1ad88:	str	r4, [sp]
   1ad8c:	str	r4, [sp, #92]	; 0x5c
   1ad90:	str	r4, [sp, #88]	; 0x58
   1ad94:	str	r4, [sp, #84]	; 0x54
   1ad98:	str	r4, [sp, #80]	; 0x50
   1ad9c:	str	r4, [sp, #76]	; 0x4c
   1ada0:	str	r4, [sp, #72]	; 0x48
   1ada4:	str	r4, [sp, #68]	; 0x44
   1ada8:	str	r4, [sp, #64]	; 0x40
   1adac:	str	r4, [sp, #60]	; 0x3c
   1adb0:	str	r4, [sp, #56]	; 0x38
   1adb4:	str	r4, [sp, #52]	; 0x34
   1adb8:	str	r4, [sp, #48]	; 0x30
   1adbc:	str	r4, [sp, #44]	; 0x2c
   1adc0:	str	r4, [sp, #40]	; 0x28
   1adc4:	str	r4, [sp, #36]	; 0x24
   1adc8:	str	r4, [sp, #32]
   1adcc:	str	r4, [sp, #28]
   1add0:	bl	1408c <fprintf@plt>
   1add4:	ldr	r1, [pc, #1276]	; 1b2d8 <__flatcc_fb_gen_common_c_header@@Base+0xd50>
   1add8:	ldr	r0, [r4, #204]	; 0xcc
   1addc:	mov	r3, r4
   1ade0:	mov	r2, r4
   1ade4:	add	r1, pc, r1
   1ade8:	str	r4, [sp, #36]	; 0x24
   1adec:	str	r4, [sp, #32]
   1adf0:	str	r4, [sp, #28]
   1adf4:	str	r4, [sp, #24]
   1adf8:	str	r4, [sp, #20]
   1adfc:	str	r4, [sp, #16]
   1ae00:	str	r4, [sp, #12]
   1ae04:	str	r4, [sp, #8]
   1ae08:	str	r4, [sp, #4]
   1ae0c:	str	r4, [sp]
   1ae10:	bl	1408c <fprintf@plt>
   1ae14:	ldr	r1, [pc, #1216]	; 1b2dc <__flatcc_fb_gen_common_c_header@@Base+0xd54>
   1ae18:	ldr	r0, [r4, #204]	; 0xcc
   1ae1c:	mov	r3, r4
   1ae20:	str	r4, [sp, #228]	; 0xe4
   1ae24:	str	r4, [sp, #224]	; 0xe0
   1ae28:	str	r4, [sp, #220]	; 0xdc
   1ae2c:	str	r4, [sp, #216]	; 0xd8
   1ae30:	str	r4, [sp, #212]	; 0xd4
   1ae34:	str	r4, [sp, #208]	; 0xd0
   1ae38:	str	r4, [sp, #204]	; 0xcc
   1ae3c:	str	r4, [sp, #200]	; 0xc8
   1ae40:	str	r4, [sp, #196]	; 0xc4
   1ae44:	str	r4, [sp, #192]	; 0xc0
   1ae48:	str	r4, [sp, #188]	; 0xbc
   1ae4c:	str	r4, [sp, #184]	; 0xb8
   1ae50:	str	r4, [sp, #180]	; 0xb4
   1ae54:	str	r4, [sp, #176]	; 0xb0
   1ae58:	str	r4, [sp, #172]	; 0xac
   1ae5c:	str	r4, [sp, #168]	; 0xa8
   1ae60:	str	r4, [sp, #164]	; 0xa4
   1ae64:	str	r4, [sp, #160]	; 0xa0
   1ae68:	str	r4, [sp, #156]	; 0x9c
   1ae6c:	str	r4, [sp, #152]	; 0x98
   1ae70:	str	r4, [sp, #148]	; 0x94
   1ae74:	str	r4, [sp, #144]	; 0x90
   1ae78:	str	r4, [sp, #140]	; 0x8c
   1ae7c:	str	r4, [sp, #136]	; 0x88
   1ae80:	str	r4, [sp, #132]	; 0x84
   1ae84:	str	r4, [sp, #128]	; 0x80
   1ae88:	str	r4, [sp, #124]	; 0x7c
   1ae8c:	str	r4, [sp, #120]	; 0x78
   1ae90:	str	r4, [sp, #116]	; 0x74
   1ae94:	str	r4, [sp, #112]	; 0x70
   1ae98:	str	r4, [sp, #108]	; 0x6c
   1ae9c:	mov	r2, r4
   1aea0:	str	r4, [sp, #104]	; 0x68
   1aea4:	add	r1, pc, r1
   1aea8:	str	r4, [sp, #20]
   1aeac:	str	r4, [sp, #16]
   1aeb0:	str	r4, [sp, #12]
   1aeb4:	str	r4, [sp, #8]
   1aeb8:	str	r4, [sp, #4]
   1aebc:	str	r4, [sp]
   1aec0:	str	r4, [sp, #100]	; 0x64
   1aec4:	str	r4, [sp, #96]	; 0x60
   1aec8:	str	r4, [sp, #92]	; 0x5c
   1aecc:	str	r4, [sp, #88]	; 0x58
   1aed0:	str	r4, [sp, #84]	; 0x54
   1aed4:	str	r4, [sp, #80]	; 0x50
   1aed8:	str	r4, [sp, #76]	; 0x4c
   1aedc:	str	r4, [sp, #72]	; 0x48
   1aee0:	str	r4, [sp, #68]	; 0x44
   1aee4:	str	r4, [sp, #64]	; 0x40
   1aee8:	str	r4, [sp, #60]	; 0x3c
   1aeec:	str	r4, [sp, #56]	; 0x38
   1aef0:	str	r4, [sp, #52]	; 0x34
   1aef4:	str	r4, [sp, #48]	; 0x30
   1aef8:	str	r4, [sp, #44]	; 0x2c
   1aefc:	str	r4, [sp, #40]	; 0x28
   1af00:	str	r4, [sp, #36]	; 0x24
   1af04:	str	r4, [sp, #32]
   1af08:	str	r4, [sp, #28]
   1af0c:	str	r4, [sp, #24]
   1af10:	bl	1408c <fprintf@plt>
   1af14:	ldr	r3, [r4, #212]	; 0xd4
   1af18:	ldr	r3, [r3, #136]	; 0x88
   1af1c:	cmp	r3, #0
   1af20:	bne	1b10c <__flatcc_fb_gen_common_c_header@@Base+0xb84>
   1af24:	ldr	r1, [pc, #948]	; 1b2e0 <__flatcc_fb_gen_common_c_header@@Base+0xd58>
   1af28:	mov	r3, r4
   1af2c:	mov	r2, r4
   1af30:	add	r1, pc, r1
   1af34:	ldr	r0, [r4, #204]	; 0xcc
   1af38:	bl	1408c <fprintf@plt>
   1af3c:	ldr	r3, [r4, #212]	; 0xd4
   1af40:	ldr	r3, [r3, #32]
   1af44:	cmp	r3, #0
   1af48:	bne	1b0f4 <__flatcc_fb_gen_common_c_header@@Base+0xb6c>
   1af4c:	ldr	r1, [r4, #204]	; 0xcc
   1af50:	mov	r0, #10
   1af54:	bl	140ec <fputc@plt>
   1af58:	ldr	r1, [pc, #900]	; 1b2e4 <__flatcc_fb_gen_common_c_header@@Base+0xd5c>
   1af5c:	mov	r2, r4
   1af60:	add	r1, pc, r1
   1af64:	ldr	r0, [r4, #204]	; 0xcc
   1af68:	bl	1408c <fprintf@plt>
   1af6c:	ldr	r1, [pc, #884]	; 1b2e8 <__flatcc_fb_gen_common_c_header@@Base+0xd60>
   1af70:	ldr	r0, [r4, #204]	; 0xcc
   1af74:	mov	r3, r4
   1af78:	mov	r2, r4
   1af7c:	add	r1, pc, r1
   1af80:	str	r4, [sp, #44]	; 0x2c
   1af84:	str	r4, [sp, #40]	; 0x28
   1af88:	str	r4, [sp, #36]	; 0x24
   1af8c:	str	r4, [sp, #32]
   1af90:	str	r4, [sp, #28]
   1af94:	str	r4, [sp, #24]
   1af98:	str	r4, [sp, #20]
   1af9c:	str	r4, [sp, #16]
   1afa0:	str	r4, [sp, #12]
   1afa4:	str	r4, [sp, #8]
   1afa8:	str	r4, [sp, #4]
   1afac:	str	r4, [sp]
   1afb0:	bl	1408c <fprintf@plt>
   1afb4:	ldr	r1, [pc, #816]	; 1b2ec <__flatcc_fb_gen_common_c_header@@Base+0xd64>
   1afb8:	ldr	r0, [r4, #204]	; 0xcc
   1afbc:	mov	r3, r4
   1afc0:	mov	r2, r4
   1afc4:	add	r1, pc, r1
   1afc8:	str	r4, [sp]
   1afcc:	bl	1408c <fprintf@plt>
   1afd0:	ldr	r1, [pc, #792]	; 1b2f0 <__flatcc_fb_gen_common_c_header@@Base+0xd68>
   1afd4:	ldr	r0, [r4, #204]	; 0xcc
   1afd8:	mov	r3, r4
   1afdc:	mov	r2, r4
   1afe0:	add	r1, pc, r1
   1afe4:	str	r4, [sp, #12]
   1afe8:	str	r4, [sp, #8]
   1afec:	str	r4, [sp, #4]
   1aff0:	str	r4, [sp]
   1aff4:	bl	1408c <fprintf@plt>
   1aff8:	ldr	r1, [pc, #756]	; 1b2f4 <__flatcc_fb_gen_common_c_header@@Base+0xd6c>
   1affc:	ldr	r0, [r4, #204]	; 0xcc
   1b000:	mov	r3, r4
   1b004:	mov	r2, r4
   1b008:	add	r1, pc, r1
   1b00c:	str	r4, [sp, #4]
   1b010:	str	r4, [sp]
   1b014:	bl	1408c <fprintf@plt>
   1b018:	ldr	r1, [pc, #728]	; 1b2f8 <__flatcc_fb_gen_common_c_header@@Base+0xd70>
   1b01c:	ldr	r0, [r4, #204]	; 0xcc
   1b020:	mov	r3, r4
   1b024:	mov	r2, r4
   1b028:	add	r1, pc, r1
   1b02c:	str	r4, [sp, #28]
   1b030:	str	r4, [sp, #24]
   1b034:	str	r4, [sp, #20]
   1b038:	str	r4, [sp, #16]
   1b03c:	str	r4, [sp, #12]
   1b040:	str	r4, [sp, #8]
   1b044:	str	r4, [sp, #4]
   1b048:	str	r4, [sp]
   1b04c:	bl	1408c <fprintf@plt>
   1b050:	ldr	r1, [r4, #204]	; 0xcc
   1b054:	mov	r0, #10
   1b058:	bl	140ec <fputc@plt>
   1b05c:	ldr	r3, [r4, #212]	; 0xd4
   1b060:	ldr	r0, [r4, #204]	; 0xcc
   1b064:	ldr	r3, [r3, #140]	; 0x8c
   1b068:	cmp	r3, #0
   1b06c:	beq	1b08c <__flatcc_fb_gen_common_c_header@@Base+0xb04>
   1b070:	mov	r3, r0
   1b074:	ldr	r0, [pc, #640]	; 1b2fc <__flatcc_fb_gen_common_c_header@@Base+0xd74>
   1b078:	mov	r2, #36	; 0x24
   1b07c:	mov	r1, #1
   1b080:	add	r0, pc, r0
   1b084:	bl	14014 <fwrite@plt>
   1b088:	ldr	r0, [r4, #204]	; 0xcc
   1b08c:	ldr	r1, [pc, #620]	; 1b300 <__flatcc_fb_gen_common_c_header@@Base+0xd78>
   1b090:	mov	r2, r5
   1b094:	add	r1, pc, r1
   1b098:	bl	1408c <fprintf@plt>
   1b09c:	mov	r0, #0
   1b0a0:	add	sp, sp, #236	; 0xec
   1b0a4:	pop	{r4, r5, pc}
   1b0a8:	ldr	r1, [r4, #204]	; 0xcc
   1b0ac:	mov	r0, #10
   1b0b0:	bl	140ec <fputc@plt>
   1b0b4:	b	1ad34 <__flatcc_fb_gen_common_c_header@@Base+0x7ac>
   1b0b8:	ldr	r0, [pc, #580]	; 1b304 <__flatcc_fb_gen_common_c_header@@Base+0xd7c>
   1b0bc:	ldr	r3, [r4, #204]	; 0xcc
   1b0c0:	mov	r2, #20
   1b0c4:	mov	r1, #1
   1b0c8:	add	r0, pc, r0
   1b0cc:	bl	14014 <fwrite@plt>
   1b0d0:	b	1acec <__flatcc_fb_gen_common_c_header@@Base+0x764>
   1b0d4:	ldr	r1, [r4, #204]	; 0xcc
   1b0d8:	mov	r0, #10
   1b0dc:	bl	140ec <fputc@plt>
   1b0e0:	b	1a7c8 <__flatcc_fb_gen_common_c_header@@Base+0x240>
   1b0e4:	ldr	r1, [r4, #204]	; 0xcc
   1b0e8:	mov	r0, #10
   1b0ec:	bl	140ec <fputc@plt>
   1b0f0:	b	1a6cc <__flatcc_fb_gen_common_c_header@@Base+0x144>
   1b0f4:	ldr	r1, [pc, #524]	; 1b308 <__flatcc_fb_gen_common_c_header@@Base+0xd80>
   1b0f8:	mov	r2, r4
   1b0fc:	add	r1, pc, r1
   1b100:	ldr	r0, [r4, #204]	; 0xcc
   1b104:	bl	1408c <fprintf@plt>
   1b108:	b	1af58 <__flatcc_fb_gen_common_c_header@@Base+0x9d0>
   1b10c:	ldr	r1, [pc, #504]	; 1b30c <__flatcc_fb_gen_common_c_header@@Base+0xd84>
   1b110:	mov	r2, r4
   1b114:	add	r1, pc, r1
   1b118:	ldr	r0, [r4, #204]	; 0xcc
   1b11c:	bl	1408c <fprintf@plt>
   1b120:	b	1af24 <__flatcc_fb_gen_common_c_header@@Base+0x99c>
   1b124:	ldr	r1, [pc, #484]	; 1b310 <__flatcc_fb_gen_common_c_header@@Base+0xd88>
   1b128:	ldr	r0, [r4, #204]	; 0xcc
   1b12c:	mov	r3, r4
   1b130:	mov	r2, r4
   1b134:	str	r4, [sp, #8]
   1b138:	str	r4, [sp, #4]
   1b13c:	str	r4, [sp]
   1b140:	add	r1, pc, r1
   1b144:	bl	1408c <fprintf@plt>
   1b148:	ldr	r2, [pc, #452]	; 1b314 <__flatcc_fb_gen_common_c_header@@Base+0xd8c>
   1b14c:	ldr	r1, [pc, #452]	; 1b318 <__flatcc_fb_gen_common_c_header@@Base+0xd90>
   1b150:	ldr	r0, [r4, #204]	; 0xcc
   1b154:	mov	r3, r4
   1b158:	str	r4, [sp, #4]
   1b15c:	str	r4, [sp]
   1b160:	add	r2, pc, r2
   1b164:	add	r1, pc, r1
   1b168:	bl	1408c <fprintf@plt>
   1b16c:	ldr	r1, [pc, #424]	; 1b31c <__flatcc_fb_gen_common_c_header@@Base+0xd94>
   1b170:	ldr	r0, [r4, #204]	; 0xcc
   1b174:	mov	r3, r4
   1b178:	mov	r2, r4
   1b17c:	str	r4, [sp, #8]
   1b180:	str	r4, [sp, #4]
   1b184:	str	r4, [sp]
   1b188:	add	r1, pc, r1
   1b18c:	bl	1408c <fprintf@plt>
   1b190:	ldr	r1, [pc, #392]	; 1b320 <__flatcc_fb_gen_common_c_header@@Base+0xd98>
   1b194:	mov	r3, r5
   1b198:	mov	r2, r5
   1b19c:	add	r1, pc, r1
   1b1a0:	ldr	r0, [r4, #204]	; 0xcc
   1b1a4:	bl	1408c <fprintf@plt>
   1b1a8:	b	1a62c <__flatcc_fb_gen_common_c_header@@Base+0xa4>
   1b1ac:	ldr	r0, [pc, #368]	; 1b324 <__flatcc_fb_gen_common_c_header@@Base+0xd9c>
   1b1b0:	mov	r2, #36	; 0x24
   1b1b4:	mov	r1, #1
   1b1b8:	add	r0, pc, r0
   1b1bc:	bl	14014 <fwrite@plt>
   1b1c0:	ldr	r3, [r4, #204]	; 0xcc
   1b1c4:	b	1a600 <__flatcc_fb_gen_common_c_header@@Base+0x78>
   1b1c8:	ldr	r0, [pc, #344]	; 1b328 <__flatcc_fb_gen_common_c_header@@Base+0xda0>
   1b1cc:	ldr	r3, [r4, #204]	; 0xcc
   1b1d0:	mov	r2, #135	; 0x87
   1b1d4:	mov	r1, #1
   1b1d8:	add	r0, pc, r0
   1b1dc:	bl	14014 <fwrite@plt>
   1b1e0:	ldr	r3, [r4, #212]	; 0xd4
   1b1e4:	b	1a5f0 <__flatcc_fb_gen_common_c_header@@Base+0x68>
   1b1e8:	ldrdeq	r7, [r2], -r8
   1b1ec:	strdeq	r7, [r2], -r4
   1b1f0:	andeq	r7, r2, r0, lsr ip
   1b1f4:	andeq	r7, r2, r4, ror #25
   1b1f8:	andeq	r7, r2, r0, lsl #26
   1b1fc:	ldrdeq	r8, [r2], -r4
   1b200:	andeq	r8, r2, r8, asr #4
   1b204:	muleq	r2, r4, r3
   1b208:	andeq	r8, r2, r8, asr #7
   1b20c:	ldrdeq	r8, [r2], -r0
   1b210:	andeq	r8, r2, r8, ror #9
   1b214:	andeq	r8, r2, r0, lsr #11
   1b218:	andeq	r8, r2, r8, lsr #14
   1b21c:	andeq	r8, r2, r4, lsr #15
   1b220:	andeq	r8, r2, r4, ror #16
   1b224:	andeq	r8, r2, r4, lsr #18
   1b228:	ldrdeq	r8, [r2], -r4
   1b22c:	muleq	r2, ip, sl
   1b230:	andeq	r8, r2, ip, lsr #21
   1b234:	andeq	r8, r2, r0, lsr fp
   1b238:	andeq	r8, r2, r8, asr fp
   1b23c:	andeq	r8, r2, ip, asr #23
   1b240:	andeq	r8, r2, r4, lsr #24
   1b244:	andeq	r8, r2, r8, lsr #26
   1b248:	andeq	r8, r2, r8, lsl #27
   1b24c:	andeq	r8, r2, ip, ror #27
   1b250:	andeq	r8, r2, r0, lsr lr
   1b254:	andeq	r8, r2, ip, lsl pc
   1b258:	andeq	r8, r2, r4, lsr #30
   1b25c:	andeq	r8, r2, ip, lsl #31
   1b260:	andeq	r9, r2, r8, ror #1
   1b264:	andeq	r9, r2, ip, ror r1
   1b268:	strdeq	r9, [r2], -r8
   1b26c:	andeq	r9, r2, r8, asr r2
   1b270:	andeq	r9, r2, r8, lsl r5
   1b274:	muleq	r2, r8, r7
   1b278:	andeq	r9, r2, r8, lsl #16
   1b27c:	andeq	r9, r2, r4, ror #16
   1b280:	andeq	r9, r2, ip, lsr #20
   1b284:			; <UNDEFINED> instruction: 0x00029ab8
   1b288:	andeq	r9, r2, ip, ror #24
   1b28c:	andeq	r9, r2, ip, ror #28
   1b290:	andeq	r9, r2, ip, lsl #31
   1b294:	andeq	sl, r2, r0, asr #32
   1b298:	ldrdeq	sl, [r2], -ip
   1b29c:	andeq	sl, r2, r0, lsl #5
   1b2a0:	andeq	sl, r2, r8, lsl r3
   1b2a4:	andeq	sl, r2, r0, lsr r4
   1b2a8:	andeq	sl, r2, r8, ror #10
   1b2ac:	andeq	sl, r2, r0, lsr #12
   1b2b0:	andeq	sl, r2, r0, ror #14
   1b2b4:	andeq	sl, r2, r8, lsr #17
   1b2b8:	ldrdeq	sl, [r2], -r4
   1b2bc:			; <UNDEFINED> instruction: 0x0002aeb8
   1b2c0:	andeq	fp, r2, r8, asr #10
   1b2c4:	andeq	fp, r2, r4, lsl #15
   1b2c8:	andeq	fp, r2, r0, lsr #24
   1b2cc:	andeq	fp, r2, r4, ror #25
   1b2d0:	ldrdeq	fp, [r2], -ip
   1b2d4:	andeq	fp, r2, r0, asr #26
   1b2d8:	ldrdeq	fp, [r2], -ip
   1b2dc:	andeq	fp, r2, r8, ror #30
   1b2e0:			; <UNDEFINED> instruction: 0x0002c5b4
   1b2e4:	andeq	ip, r2, r0, lsr #12
   1b2e8:	andeq	ip, r2, r4, lsl #13
   1b2ec:	andeq	ip, r2, r8, lsl #19
   1b2f0:	andeq	ip, r2, r4, lsr #20
   1b2f4:	andeq	ip, r2, r4, asr #23
   1b2f8:	andeq	ip, r2, r0, lsr #28
   1b2fc:	andeq	sp, r2, ip, lsr #1
   1b300:	andeq	sp, r2, r0, asr #1
   1b304:	andeq	fp, r2, r8, asr #16
   1b308:	muleq	r2, r4, sl
   1b30c:			; <UNDEFINED> instruction: 0x0002c3b4
   1b310:	andeq	r7, r2, ip, ror #3
   1b314:			; <UNDEFINED> instruction: 0x000271b8
   1b318:	muleq	r2, r8, r2
   1b31c:	andeq	r7, r2, ip, asr #7
   1b320:	andeq	r7, r2, r0, lsr #12
   1b324:	andeq	r7, r2, r0, lsl r1
   1b328:	andeq	r7, r2, r8, rrx

0001b32c <__flatcc_fb_gen_c_reader@@Base>:
   1b32c:	ldr	r3, [r0, #208]	; 0xd0
   1b330:	ldr	r2, [r0, #212]	; 0xd4
   1b334:	ldr	r1, [pc, #1352]	; 1b884 <__flatcc_fb_gen_c_reader@@Base+0x558>
   1b338:	ldr	r3, [r3, #164]	; 0xa4
   1b33c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b340:	add	r1, pc, r1
   1b344:	sub	sp, sp, #260	; 0x104
   1b348:	ldr	r5, [r2, #132]	; 0x84
   1b34c:	mov	r4, r0
   1b350:	mov	r2, r3
   1b354:	ldr	r0, [r0, #204]	; 0xcc
   1b358:	bl	1408c <fprintf@plt>
   1b35c:	ldr	r0, [pc, #1316]	; 1b888 <__flatcc_fb_gen_c_reader@@Base+0x55c>
   1b360:	ldr	r3, [r4, #204]	; 0xcc
   1b364:	mov	r2, #81	; 0x51
   1b368:	mov	r1, #1
   1b36c:	add	r0, pc, r0
   1b370:	bl	14014 <fwrite@plt>
   1b374:	ldr	r3, [pc, #1296]	; 1b88c <__flatcc_fb_gen_c_reader@@Base+0x560>
   1b378:	cmp	r5, #0
   1b37c:	add	r3, pc, r3
   1b380:	str	r3, [sp, #12]
   1b384:	add	r5, r4, #102	; 0x66
   1b388:	bne	1b820 <__flatcc_fb_gen_c_reader@@Base+0x4f4>
   1b38c:	ldr	r1, [pc, #1276]	; 1b890 <__flatcc_fb_gen_c_reader@@Base+0x564>
   1b390:	mov	r3, r4
   1b394:	mov	r2, r5
   1b398:	add	r1, pc, r1
   1b39c:	ldr	r0, [r4, #204]	; 0xcc
   1b3a0:	bl	1408c <fprintf@plt>
   1b3a4:	ldr	r2, [pc, #1256]	; 1b894 <__flatcc_fb_gen_c_reader@@Base+0x568>
   1b3a8:	ldr	r1, [pc, #1256]	; 1b898 <__flatcc_fb_gen_c_reader@@Base+0x56c>
   1b3ac:	add	r2, pc, r2
   1b3b0:	add	r1, pc, r1
   1b3b4:	mov	r0, r4
   1b3b8:	bl	15f70 <__flatcc_fb_gen_c_includes@@Base>
   1b3bc:	ldr	r0, [pc, #1240]	; 1b89c <__flatcc_fb_gen_c_reader@@Base+0x570>
   1b3c0:	ldr	r3, [r4, #204]	; 0xcc
   1b3c4:	mov	r2, #39	; 0x27
   1b3c8:	mov	r1, #1
   1b3cc:	add	r0, pc, r0
   1b3d0:	bl	14014 <fwrite@plt>
   1b3d4:	ldr	r0, [pc, #1220]	; 1b8a0 <__flatcc_fb_gen_c_reader@@Base+0x574>
   1b3d8:	ldr	r3, [r4, #204]	; 0xcc
   1b3dc:	mov	r2, #58	; 0x3a
   1b3e0:	mov	r1, #1
   1b3e4:	add	r0, pc, r0
   1b3e8:	bl	14014 <fwrite@plt>
   1b3ec:	ldr	r3, [r4, #212]	; 0xd4
   1b3f0:	ldr	r0, [r4, #204]	; 0xcc
   1b3f4:	ldr	r3, [r3, #140]	; 0x8c
   1b3f8:	cmp	r3, #0
   1b3fc:	bne	1b794 <__flatcc_fb_gen_c_reader@@Base+0x468>
   1b400:	ldr	r3, [r4, #208]	; 0xd0
   1b404:	ldrh	r2, [r3, #16]
   1b408:	cmp	r2, #2
   1b40c:	beq	1b7c0 <__flatcc_fb_gen_c_reader@@Base+0x494>
   1b410:	ldr	r1, [pc, #1164]	; 1b8a4 <__flatcc_fb_gen_c_reader@@Base+0x578>
   1b414:	mov	r3, r4
   1b418:	mov	r2, r4
   1b41c:	add	r1, pc, r1
   1b420:	bl	1408c <fprintf@plt>
   1b424:	ldr	r3, [r4, #208]	; 0xd0
   1b428:	ldrh	r2, [r3, #32]
   1b42c:	cmp	r2, #2
   1b430:	beq	1b7f4 <__flatcc_fb_gen_c_reader@@Base+0x4c8>
   1b434:	ldr	r2, [r4, #212]	; 0xd4
   1b438:	ldr	r1, [pc, #1128]	; 1b8a8 <__flatcc_fb_gen_c_reader@@Base+0x57c>
   1b43c:	ldr	r0, [r4, #204]	; 0xcc
   1b440:	ldr	r2, [r2, #104]	; 0x68
   1b444:	mov	r3, r4
   1b448:	str	r2, [sp]
   1b44c:	add	r1, pc, r1
   1b450:	mov	r2, r4
   1b454:	bl	1408c <fprintf@plt>
   1b458:	ldr	r1, [r4, #204]	; 0xcc
   1b45c:	mov	r0, #10
   1b460:	bl	140ec <fputc@plt>
   1b464:	ldr	r3, [r4, #208]	; 0xd0
   1b468:	ldr	r5, [r3, #44]	; 0x2c
   1b46c:	cmp	r5, #0
   1b470:	beq	1b48c <__flatcc_fb_gen_c_reader@@Base+0x160>
   1b474:	mov	r1, r5
   1b478:	mov	r0, r4
   1b47c:	bl	164e4 <__flatcc_fb_codegen_c@@Base+0x1ec>
   1b480:	ldr	r5, [r5, #120]	; 0x78
   1b484:	cmp	r5, #0
   1b488:	bne	1b474 <__flatcc_fb_gen_c_reader@@Base+0x148>
   1b48c:	ldr	r1, [r4, #204]	; 0xcc
   1b490:	mov	r0, #10
   1b494:	bl	140ec <fputc@plt>
   1b498:	ldr	r3, [r4, #208]	; 0xd0
   1b49c:	ldr	r5, [r3, #40]	; 0x28
   1b4a0:	cmp	r5, #0
   1b4a4:	bne	1b4b8 <__flatcc_fb_gen_c_reader@@Base+0x18c>
   1b4a8:	b	1b5f4 <__flatcc_fb_gen_c_reader@@Base+0x2c8>
   1b4ac:	ldr	r5, [r5]
   1b4b0:	cmp	r5, #0
   1b4b4:	beq	1b4dc <__flatcc_fb_gen_c_reader@@Base+0x1b0>
   1b4b8:	ldrh	r3, [r5, #8]
   1b4bc:	cmp	r3, #0
   1b4c0:	bne	1b4ac <__flatcc_fb_gen_c_reader@@Base+0x180>
   1b4c4:	mov	r1, r5
   1b4c8:	mov	r0, r4
   1b4cc:	bl	164e4 <__flatcc_fb_codegen_c@@Base+0x1ec>
   1b4d0:	ldr	r5, [r5]
   1b4d4:	cmp	r5, #0
   1b4d8:	bne	1b4b8 <__flatcc_fb_gen_c_reader@@Base+0x18c>
   1b4dc:	ldr	r3, [r4, #208]	; 0xd0
   1b4e0:	ldr	r7, [r3, #40]	; 0x28
   1b4e4:	cmp	r7, #0
   1b4e8:	beq	1b5f4 <__flatcc_fb_gen_c_reader@@Base+0x2c8>
   1b4ec:	ldr	fp, [pc, #952]	; 1b8ac <__flatcc_fb_gen_c_reader@@Base+0x580>
   1b4f0:	ldr	sl, [pc, #952]	; 1b8b0 <__flatcc_fb_gen_c_reader@@Base+0x584>
   1b4f4:	ldr	r9, [pc, #952]	; 1b8b4 <__flatcc_fb_gen_c_reader@@Base+0x588>
   1b4f8:	add	fp, pc, fp
   1b4fc:	add	sl, pc, sl
   1b500:	add	r9, pc, r9
   1b504:	add	r8, sp, #36	; 0x24
   1b508:	b	1b518 <__flatcc_fb_gen_c_reader@@Base+0x1ec>
   1b50c:	ldr	r7, [r7]
   1b510:	cmp	r7, #0
   1b514:	beq	1b5f4 <__flatcc_fb_gen_c_reader@@Base+0x2c8>
   1b518:	ldrh	r3, [r7, #8]
   1b51c:	cmp	r3, #1
   1b520:	bhi	1b50c <__flatcc_fb_gen_c_reader@@Base+0x1e0>
   1b524:	mov	r2, #220	; 0xdc
   1b528:	mov	r1, r5
   1b52c:	mov	r0, r8
   1b530:	bl	140a4 <memset@plt>
   1b534:	mov	r2, r8
   1b538:	mov	r1, r7
   1b53c:	ldr	r0, [r7, #12]
   1b540:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   1b544:	ldr	r6, [r7, #88]	; 0x58
   1b548:	ldr	r0, [r4, #204]	; 0xcc
   1b54c:	mov	r3, r8
   1b550:	mov	r2, r8
   1b554:	mov	r1, fp
   1b558:	str	r4, [sp]
   1b55c:	bl	1408c <fprintf@plt>
   1b560:	ldr	r0, [r4, #204]	; 0xcc
   1b564:	mov	r2, r8
   1b568:	str	r6, [sp]
   1b56c:	mov	r3, r4
   1b570:	mov	r1, sl
   1b574:	bl	1408c <fprintf@plt>
   1b578:	add	r2, sp, #20
   1b57c:	mov	ip, #92	; 0x5c
   1b580:	mov	r0, #120	; 0x78
   1b584:	lsr	r1, r6, #4
   1b588:	and	r1, r1, #15
   1b58c:	cmp	r1, #9
   1b590:	and	r3, r6, #15
   1b594:	movls	lr, #48	; 0x30
   1b598:	movhi	lr, #87	; 0x57
   1b59c:	cmp	r3, #9
   1b5a0:	add	r1, r1, lr
   1b5a4:	movls	lr, #48	; 0x30
   1b5a8:	movhi	lr, #87	; 0x57
   1b5ac:	add	r3, r3, lr
   1b5b0:	strb	ip, [r2, #-4]
   1b5b4:	strb	r0, [r2, #-3]
   1b5b8:	strb	r1, [r2, #-2]
   1b5bc:	strb	r3, [r2, #-1]
   1b5c0:	add	r2, r2, #4
   1b5c4:	cmp	r2, r8
   1b5c8:	lsr	r6, r6, #8
   1b5cc:	bne	1b584 <__flatcc_fb_gen_c_reader@@Base+0x258>
   1b5d0:	add	r3, sp, #16
   1b5d4:	mov	r2, r8
   1b5d8:	mov	r1, r9
   1b5dc:	ldr	r0, [r4, #204]	; 0xcc
   1b5e0:	strb	r5, [sp, #32]
   1b5e4:	bl	1408c <fprintf@plt>
   1b5e8:	ldr	r7, [r7]
   1b5ec:	cmp	r7, #0
   1b5f0:	bne	1b518 <__flatcc_fb_gen_c_reader@@Base+0x1ec>
   1b5f4:	ldr	r1, [r4, #204]	; 0xcc
   1b5f8:	mov	r0, #10
   1b5fc:	bl	140ec <fputc@plt>
   1b600:	ldr	r3, [r4, #208]	; 0xd0
   1b604:	ldr	r5, [r3, #40]	; 0x28
   1b608:	cmp	r5, #0
   1b60c:	bne	1b620 <__flatcc_fb_gen_c_reader@@Base+0x2f4>
   1b610:	b	1b644 <__flatcc_fb_gen_c_reader@@Base+0x318>
   1b614:	ldr	r5, [r5]
   1b618:	cmp	r5, #0
   1b61c:	beq	1b644 <__flatcc_fb_gen_c_reader@@Base+0x318>
   1b620:	ldrh	r3, [r5, #8]
   1b624:	cmp	r3, #3
   1b628:	bne	1b614 <__flatcc_fb_gen_c_reader@@Base+0x2e8>
   1b62c:	mov	r1, r5
   1b630:	mov	r0, r4
   1b634:	bl	16678 <__flatcc_fb_codegen_c@@Base+0x380>
   1b638:	ldr	r5, [r5]
   1b63c:	cmp	r5, #0
   1b640:	bne	1b620 <__flatcc_fb_gen_c_reader@@Base+0x2f4>
   1b644:	ldr	r1, [r4, #204]	; 0xcc
   1b648:	mov	r0, #10
   1b64c:	bl	140ec <fputc@plt>
   1b650:	ldr	r3, [r4, #208]	; 0xd0
   1b654:	ldr	r5, [r3, #44]	; 0x2c
   1b658:	cmp	r5, #0
   1b65c:	beq	1b67c <__flatcc_fb_gen_c_reader@@Base+0x350>
   1b660:	mov	r1, r5
   1b664:	mov	r0, r4
   1b668:	bl	174b8 <__flatcc_fb_codegen_c@@Base+0x11c0>
   1b66c:	ldr	r5, [r5, #120]	; 0x78
   1b670:	cmp	r5, #0
   1b674:	bne	1b660 <__flatcc_fb_gen_c_reader@@Base+0x334>
   1b678:	ldr	r3, [r4, #208]	; 0xd0
   1b67c:	ldr	r5, [r3, #40]	; 0x28
   1b680:	cmp	r5, #0
   1b684:	beq	1b6c4 <__flatcc_fb_gen_c_reader@@Base+0x398>
   1b688:	ldrh	r3, [r5, #8]
   1b68c:	cmp	r3, #4
   1b690:	addls	pc, pc, r3, lsl #2
   1b694:	b	1b73c <__flatcc_fb_gen_c_reader@@Base+0x410>
   1b698:	b	1b720 <__flatcc_fb_gen_c_reader@@Base+0x3f4>
   1b69c:	b	1b6b8 <__flatcc_fb_gen_c_reader@@Base+0x38c>
   1b6a0:	b	1b6b8 <__flatcc_fb_gen_c_reader@@Base+0x38c>
   1b6a4:	b	1b6b8 <__flatcc_fb_gen_c_reader@@Base+0x38c>
   1b6a8:	b	1b6ac <__flatcc_fb_gen_c_reader@@Base+0x380>
   1b6ac:	mov	r1, r5
   1b6b0:	mov	r0, r4
   1b6b4:	bl	16678 <__flatcc_fb_codegen_c@@Base+0x380>
   1b6b8:	ldr	r5, [r5]
   1b6bc:	cmp	r5, #0
   1b6c0:	bne	1b688 <__flatcc_fb_gen_c_reader@@Base+0x35c>
   1b6c4:	ldr	r1, [r4, #204]	; 0xcc
   1b6c8:	mov	r0, #10
   1b6cc:	bl	140ec <fputc@plt>
   1b6d0:	ldr	r3, [r4, #212]	; 0xd4
   1b6d4:	ldr	r0, [r4, #204]	; 0xcc
   1b6d8:	ldr	r3, [r3, #140]	; 0x8c
   1b6dc:	cmp	r3, #0
   1b6e0:	beq	1b700 <__flatcc_fb_gen_c_reader@@Base+0x3d4>
   1b6e4:	mov	r3, r0
   1b6e8:	ldr	r0, [pc, #456]	; 1b8b8 <__flatcc_fb_gen_c_reader@@Base+0x58c>
   1b6ec:	mov	r2, #36	; 0x24
   1b6f0:	mov	r1, #1
   1b6f4:	add	r0, pc, r0
   1b6f8:	bl	14014 <fwrite@plt>
   1b6fc:	ldr	r0, [r4, #204]	; 0xcc
   1b700:	ldr	r3, [r4, #208]	; 0xd0
   1b704:	ldr	r1, [pc, #432]	; 1b8bc <__flatcc_fb_gen_c_reader@@Base+0x590>
   1b708:	ldr	r2, [r3, #164]	; 0xa4
   1b70c:	add	r1, pc, r1
   1b710:	bl	1408c <fprintf@plt>
   1b714:	mov	r0, #0
   1b718:	add	sp, sp, #260	; 0x104
   1b71c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b720:	mov	r1, r5
   1b724:	mov	r0, r4
   1b728:	bl	18528 <__flatcc_fb_codegen_c@@Base+0x2230>
   1b72c:	ldr	r5, [r5]
   1b730:	cmp	r5, #0
   1b734:	bne	1b688 <__flatcc_fb_gen_c_reader@@Base+0x35c>
   1b738:	b	1b6c4 <__flatcc_fb_gen_c_reader@@Base+0x398>
   1b73c:	ldr	r2, [pc, #380]	; 1b8c0 <__flatcc_fb_gen_c_reader@@Base+0x594>
   1b740:	ldr	r1, [sp, #12]
   1b744:	ldr	r3, [pc, #376]	; 1b8c4 <__flatcc_fb_gen_c_reader@@Base+0x598>
   1b748:	ldr	r4, [pc, #376]	; 1b8c8 <__flatcc_fb_gen_c_reader@@Base+0x59c>
   1b74c:	ldr	r1, [r1, r2]
   1b750:	add	r3, pc, r3
   1b754:	str	r3, [sp]
   1b758:	ldr	r0, [r1]
   1b75c:	ldr	r1, [pc, #360]	; 1b8cc <__flatcc_fb_gen_c_reader@@Base+0x5a0>
   1b760:	add	r4, pc, r4
   1b764:	mov	r2, r4
   1b768:	ldr	r3, [pc, #352]	; 1b8d0 <__flatcc_fb_gen_c_reader@@Base+0x5a4>
   1b76c:	add	r1, pc, r1
   1b770:	bl	1408c <fprintf@plt>
   1b774:	ldr	r3, [pc, #344]	; 1b8d4 <__flatcc_fb_gen_c_reader@@Base+0x5a8>
   1b778:	ldr	r0, [pc, #344]	; 1b8d8 <__flatcc_fb_gen_c_reader@@Base+0x5ac>
   1b77c:	add	r3, pc, r3
   1b780:	mov	r1, r4
   1b784:	add	r3, r3, #164	; 0xa4
   1b788:	ldr	r2, [pc, #320]	; 1b8d0 <__flatcc_fb_gen_c_reader@@Base+0x5a4>
   1b78c:	add	r0, pc, r0
   1b790:	bl	14140 <__assert_fail@plt>
   1b794:	mov	r3, r0
   1b798:	ldr	r0, [pc, #316]	; 1b8dc <__flatcc_fb_gen_c_reader@@Base+0x5b0>
   1b79c:	mov	r2, #36	; 0x24
   1b7a0:	mov	r1, #1
   1b7a4:	add	r0, pc, r0
   1b7a8:	bl	14014 <fwrite@plt>
   1b7ac:	ldr	r3, [r4, #208]	; 0xd0
   1b7b0:	ldr	r0, [r4, #204]	; 0xcc
   1b7b4:	ldrh	r2, [r3, #16]
   1b7b8:	cmp	r2, #2
   1b7bc:	bne	1b410 <__flatcc_fb_gen_c_reader@@Base+0xe4>
   1b7c0:	ldr	r2, [r3, #8]
   1b7c4:	ldr	r1, [pc, #276]	; 1b8e0 <__flatcc_fb_gen_c_reader@@Base+0x5b4>
   1b7c8:	str	r2, [sp, #4]
   1b7cc:	ldr	r2, [r3, #12]
   1b7d0:	add	r1, pc, r1
   1b7d4:	mov	r3, r4
   1b7d8:	str	r2, [sp]
   1b7dc:	mov	r2, r4
   1b7e0:	bl	1408c <fprintf@plt>
   1b7e4:	ldr	r3, [r4, #208]	; 0xd0
   1b7e8:	ldrh	r2, [r3, #32]
   1b7ec:	cmp	r2, #2
   1b7f0:	bne	1b434 <__flatcc_fb_gen_c_reader@@Base+0x108>
   1b7f4:	ldr	r2, [r3, #24]
   1b7f8:	ldr	r0, [r4, #204]	; 0xcc
   1b7fc:	ldr	r1, [pc, #224]	; 1b8e4 <__flatcc_fb_gen_c_reader@@Base+0x5b8>
   1b800:	str	r2, [sp, #4]
   1b804:	ldr	r3, [r3, #28]
   1b808:	mov	r2, r4
   1b80c:	str	r3, [sp]
   1b810:	add	r1, pc, r1
   1b814:	mov	r3, r4
   1b818:	bl	1408c <fprintf@plt>
   1b81c:	b	1b458 <__flatcc_fb_gen_c_reader@@Base+0x12c>
   1b820:	ldr	r0, [pc, #192]	; 1b8e8 <__flatcc_fb_gen_c_reader@@Base+0x5bc>
   1b824:	ldr	r3, [r4, #204]	; 0xcc
   1b828:	ldr	r2, [pc, #188]	; 1b8ec <__flatcc_fb_gen_c_reader@@Base+0x5c0>
   1b82c:	mov	r1, #1
   1b830:	add	r0, pc, r0
   1b834:	bl	14014 <fwrite@plt>
   1b838:	ldr	r1, [pc, #176]	; 1b8f0 <__flatcc_fb_gen_c_reader@@Base+0x5c4>
   1b83c:	mov	r3, r4
   1b840:	mov	r2, r5
   1b844:	add	r1, pc, r1
   1b848:	ldr	r0, [r4, #204]	; 0xcc
   1b84c:	bl	1408c <fprintf@plt>
   1b850:	ldr	r2, [pc, #156]	; 1b8f4 <__flatcc_fb_gen_c_reader@@Base+0x5c8>
   1b854:	ldr	r1, [pc, #156]	; 1b8f8 <__flatcc_fb_gen_c_reader@@Base+0x5cc>
   1b858:	mov	r0, r4
   1b85c:	add	r2, pc, r2
   1b860:	add	r1, pc, r1
   1b864:	bl	15f70 <__flatcc_fb_gen_c_includes@@Base>
   1b868:	ldr	r0, [pc, #140]	; 1b8fc <__flatcc_fb_gen_c_reader@@Base+0x5d0>
   1b86c:	ldr	r3, [r4, #204]	; 0xcc
   1b870:	mov	r2, #39	; 0x27
   1b874:	mov	r1, #1
   1b878:	add	r0, pc, r0
   1b87c:	bl	14014 <fwrite@plt>
   1b880:	b	1b3ec <__flatcc_fb_gen_c_reader@@Base+0xc0>
   1b884:	andeq	ip, r2, r0, lsr lr
   1b888:	andeq	r6, r2, r8, asr #28
   1b88c:	andeq	pc, r4, ip, ror ip	; <UNPREDICTABLE>
   1b890:	andeq	ip, r2, r0, asr #31
   1b894:	andeq	ip, r2, ip, ror #31
   1b898:	andeq	r5, r2, ip, ror #8
   1b89c:	ldrdeq	ip, [r2], -r8
   1b8a0:	muleq	r2, r4, r1
   1b8a4:	andeq	ip, r2, r4, ror #31
   1b8a8:	andeq	sp, r2, r8, lsl r0
   1b8ac:	andeq	ip, r2, r4, lsr #31
   1b8b0:	andeq	ip, r2, r4, ror #31
   1b8b4:	andeq	sp, r2, ip
   1b8b8:	andeq	ip, r2, r8, lsr sl
   1b8bc:	andeq	ip, r2, r0, asr lr
   1b8c0:	andeq	r0, r0, r0, lsr #1
   1b8c4:	andeq	ip, r2, r0, ror #27
   1b8c8:	andeq	r5, r2, r0, ror #7
   1b8cc:	andeq	r5, r2, r0, asr r7
   1b8d0:	andeq	r0, r0, r8, lsl #13
   1b8d4:	andeq	r5, r2, r4, lsl #6
   1b8d8:	andeq	sp, r2, r0, lsr fp
   1b8dc:	andeq	r6, r2, r4, lsr #22
   1b8e0:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   1b8e4:	andeq	ip, r2, r4, lsr #24
   1b8e8:	andeq	ip, r2, ip, ror #18
   1b8ec:			; <UNDEFINED> instruction: 0x000001bb
   1b8f0:	andeq	ip, r2, r4, lsl fp
   1b8f4:	andeq	ip, r2, ip, lsr fp
   1b8f8:			; <UNDEFINED> instruction: 0x00024fbc
   1b8fc:	andeq	ip, r2, ip, lsr #22

0001b900 <__flatcc_gen_sort@@Base>:
   1b900:	ldr	r1, [pc, #292]	; 1ba2c <__flatcc_gen_sort@@Base+0x12c>
   1b904:	push	{r4, lr}
   1b908:	mov	r2, r0
   1b90c:	mov	r4, r0
   1b910:	sub	sp, sp, #24
   1b914:	add	r1, pc, r1
   1b918:	ldr	r0, [r0, #204]	; 0xcc
   1b91c:	bl	1408c <fprintf@plt>
   1b920:	ldr	r1, [pc, #264]	; 1ba30 <__flatcc_gen_sort@@Base+0x130>
   1b924:	mov	r3, r4
   1b928:	mov	r2, r4
   1b92c:	ldr	r0, [r4, #204]	; 0xcc
   1b930:	add	r1, pc, r1
   1b934:	bl	1408c <fprintf@plt>
   1b938:	ldr	r1, [pc, #244]	; 1ba34 <__flatcc_gen_sort@@Base+0x134>
   1b93c:	ldr	r0, [r4, #204]	; 0xcc
   1b940:	mov	r3, r4
   1b944:	mov	r2, r4
   1b948:	str	r4, [sp]
   1b94c:	add	r1, pc, r1
   1b950:	bl	1408c <fprintf@plt>
   1b954:	ldr	r1, [pc, #220]	; 1ba38 <__flatcc_gen_sort@@Base+0x138>
   1b958:	ldr	r0, [r4, #204]	; 0xcc
   1b95c:	mov	r3, r4
   1b960:	mov	r2, r4
   1b964:	str	r4, [sp, #4]
   1b968:	str	r4, [sp]
   1b96c:	add	r1, pc, r1
   1b970:	bl	1408c <fprintf@plt>
   1b974:	ldr	r1, [pc, #192]	; 1ba3c <__flatcc_gen_sort@@Base+0x13c>
   1b978:	mov	r3, r4
   1b97c:	mov	r2, r4
   1b980:	ldr	r0, [r4, #204]	; 0xcc
   1b984:	add	r1, pc, r1
   1b988:	bl	1408c <fprintf@plt>
   1b98c:	ldr	r1, [pc, #172]	; 1ba40 <__flatcc_gen_sort@@Base+0x140>
   1b990:	ldr	r0, [r4, #204]	; 0xcc
   1b994:	mov	r3, r4
   1b998:	mov	r2, r4
   1b99c:	str	r4, [sp, #4]
   1b9a0:	str	r4, [sp]
   1b9a4:	add	r1, pc, r1
   1b9a8:	bl	1408c <fprintf@plt>
   1b9ac:	ldr	r1, [pc, #144]	; 1ba44 <__flatcc_gen_sort@@Base+0x144>
   1b9b0:	ldr	r0, [r4, #204]	; 0xcc
   1b9b4:	mov	r3, r4
   1b9b8:	mov	r2, r4
   1b9bc:	str	r4, [sp, #12]
   1b9c0:	str	r4, [sp, #8]
   1b9c4:	str	r4, [sp, #4]
   1b9c8:	str	r4, [sp]
   1b9cc:	add	r1, pc, r1
   1b9d0:	bl	1408c <fprintf@plt>
   1b9d4:	ldr	r1, [pc, #108]	; 1ba48 <__flatcc_gen_sort@@Base+0x148>
   1b9d8:	ldr	r0, [r4, #204]	; 0xcc
   1b9dc:	mov	r3, r4
   1b9e0:	mov	r2, r4
   1b9e4:	str	r4, [sp, #4]
   1b9e8:	str	r4, [sp]
   1b9ec:	add	r1, pc, r1
   1b9f0:	bl	1408c <fprintf@plt>
   1b9f4:	ldr	r1, [pc, #80]	; 1ba4c <__flatcc_gen_sort@@Base+0x14c>
   1b9f8:	ldr	r0, [r4, #204]	; 0xcc
   1b9fc:	mov	r3, r4
   1ba00:	str	r4, [sp, #16]
   1ba04:	str	r4, [sp, #12]
   1ba08:	str	r4, [sp, #8]
   1ba0c:	str	r4, [sp, #4]
   1ba10:	str	r4, [sp]
   1ba14:	mov	r2, r4
   1ba18:	add	r1, pc, r1
   1ba1c:	bl	1408c <fprintf@plt>
   1ba20:	mov	r0, #0
   1ba24:	add	sp, sp, #24
   1ba28:	pop	{r4, pc}
   1ba2c:	andeq	ip, r2, r0, lsr #25
   1ba30:	andeq	sp, r2, r4, asr r0
   1ba34:	andeq	sp, r2, r8, asr #2
   1ba38:	strdeq	sp, [r2], -ip
   1ba3c:	andeq	sp, r2, r8, ror r2
   1ba40:	strdeq	sp, [r2], -r0
   1ba44:	andeq	sp, r2, r0, asr r4
   1ba48:	andeq	sp, r2, r0, asr #9
   1ba4c:	strdeq	sp, [r2], -r8
   1ba50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ba54:	sub	sp, sp, #500	; 0x1f4
   1ba58:	ldr	r9, [pc, #604]	; 1bcbc <__flatcc_gen_sort@@Base+0x3bc>
   1ba5c:	ldr	ip, [sp, #540]	; 0x21c
   1ba60:	str	r3, [sp, #32]
   1ba64:	cmp	ip, #0
   1ba68:	mov	r5, r0
   1ba6c:	mov	sl, r1
   1ba70:	mov	fp, r2
   1ba74:	add	r9, pc, r9
   1ba78:	ldr	r4, [sp, #536]	; 0x218
   1ba7c:	bne	1bc1c <__flatcc_gen_sort@@Base+0x31c>
   1ba80:	ldr	r3, [pc, #568]	; 1bcc0 <__flatcc_gen_sort@@Base+0x3c0>
   1ba84:	add	r3, pc, r3
   1ba88:	str	r3, [sp, #36]	; 0x24
   1ba8c:	add	r6, sp, #56	; 0x38
   1ba90:	mov	r2, #220	; 0xdc
   1ba94:	mov	r1, #0
   1ba98:	mov	r0, r6
   1ba9c:	add	r8, sp, #276	; 0x114
   1baa0:	bl	140a4 <memset@plt>
   1baa4:	mov	r2, #220	; 0xdc
   1baa8:	mov	r1, #0
   1baac:	mov	r0, r8
   1bab0:	bl	140a4 <memset@plt>
   1bab4:	mov	r1, r4
   1bab8:	ldr	r0, [r4, #12]
   1babc:	mov	r2, r6
   1bac0:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   1bac4:	ldr	r4, [r4, #20]
   1bac8:	cmp	r4, #0
   1bacc:	beq	1bbd4 <__flatcc_gen_sort@@Base+0x2d4>
   1bad0:	ldr	r3, [pc, #492]	; 1bcc4 <__flatcc_gen_sort@@Base+0x3c4>
   1bad4:	add	r3, pc, r3
   1bad8:	str	r3, [sp, #40]	; 0x28
   1badc:	ldr	r3, [pc, #484]	; 1bcc8 <__flatcc_gen_sort@@Base+0x3c8>
   1bae0:	add	r3, pc, r3
   1bae4:	str	r3, [sp, #48]	; 0x30
   1bae8:	ldr	r3, [pc, #476]	; 1bccc <__flatcc_gen_sort@@Base+0x3cc>
   1baec:	add	r3, pc, r3
   1baf0:	str	r3, [sp, #52]	; 0x34
   1baf4:	ldrh	r2, [r4, #24]
   1baf8:	ldr	r1, [r4, #4]
   1bafc:	cmp	r2, #10
   1bb00:	ldm	r1, {r3, r7}
   1bb04:	beq	1bbe0 <__flatcc_gen_sort@@Base+0x2e0>
   1bb08:	cmp	r2, #14
   1bb0c:	beq	1bb68 <__flatcc_gen_sort@@Base+0x268>
   1bb10:	cmp	r2, #0
   1bb14:	beq	1bbc8 <__flatcc_gen_sort@@Base+0x2c8>
   1bb18:	ldr	r2, [pc, #432]	; 1bcd0 <__flatcc_gen_sort@@Base+0x3d0>
   1bb1c:	ldr	r3, [pc, #432]	; 1bcd4 <__flatcc_gen_sort@@Base+0x3d4>
   1bb20:	ldr	r4, [pc, #432]	; 1bcd8 <__flatcc_gen_sort@@Base+0x3d8>
   1bb24:	ldr	r1, [r9, r2]
   1bb28:	add	r3, pc, r3
   1bb2c:	str	r3, [sp]
   1bb30:	ldr	r0, [r1]
   1bb34:	ldr	r1, [pc, #416]	; 1bcdc <__flatcc_gen_sort@@Base+0x3dc>
   1bb38:	add	r4, pc, r4
   1bb3c:	mov	r2, r4
   1bb40:	ldr	r3, [pc, #408]	; 1bce0 <__flatcc_gen_sort@@Base+0x3e0>
   1bb44:	add	r1, pc, r1
   1bb48:	bl	1408c <fprintf@plt>
   1bb4c:	ldr	r3, [pc, #400]	; 1bce4 <__flatcc_gen_sort@@Base+0x3e4>
   1bb50:	ldr	r0, [pc, #400]	; 1bce8 <__flatcc_gen_sort@@Base+0x3e8>
   1bb54:	mov	r1, r4
   1bb58:	add	r3, pc, r3
   1bb5c:	ldr	r2, [pc, #380]	; 1bce0 <__flatcc_gen_sort@@Base+0x3e0>
   1bb60:	add	r0, pc, r0
   1bb64:	bl	14140 <__assert_fail@plt>
   1bb68:	ldr	r1, [r4, #16]
   1bb6c:	mov	r2, r8
   1bb70:	str	r3, [sp, #44]	; 0x2c
   1bb74:	ldr	r0, [r1, #12]
   1bb78:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   1bb7c:	ldr	r2, [r4, #16]
   1bb80:	ldr	r3, [sp, #44]	; 0x2c
   1bb84:	ldrh	r2, [r2, #8]
   1bb88:	cmp	r2, #0
   1bb8c:	beq	1bc2c <__flatcc_gen_sort@@Base+0x32c>
   1bb90:	cmp	r2, #1
   1bb94:	bne	1bc6c <__flatcc_gen_sort@@Base+0x36c>
   1bb98:	ldr	r0, [r5, #204]	; 0xcc
   1bb9c:	str	r3, [sp, #24]
   1bba0:	ldr	r3, [sp, #32]
   1bba4:	str	r8, [sp, #28]
   1bba8:	str	r3, [sp, #12]
   1bbac:	str	r7, [sp, #20]
   1bbb0:	str	r6, [sp, #16]
   1bbb4:	stm	sp, {r5, sl, fp}
   1bbb8:	mov	r2, r5
   1bbbc:	ldr	r3, [sp, #36]	; 0x24
   1bbc0:	ldr	r1, [sp, #52]	; 0x34
   1bbc4:	bl	1408c <fprintf@plt>
   1bbc8:	ldr	r4, [r4]
   1bbcc:	cmp	r4, #0
   1bbd0:	bne	1baf4 <__flatcc_gen_sort@@Base+0x1f4>
   1bbd4:	mov	r0, #0
   1bbd8:	add	sp, sp, #500	; 0x1f4
   1bbdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bbe0:	ldr	r0, [r5, #204]	; 0xcc
   1bbe4:	str	r3, [sp, #24]
   1bbe8:	ldr	r3, [sp, #32]
   1bbec:	str	r7, [sp, #20]
   1bbf0:	str	r3, [sp, #12]
   1bbf4:	str	r6, [sp, #16]
   1bbf8:	stm	sp, {r5, sl, fp}
   1bbfc:	mov	r2, r5
   1bc00:	ldr	r3, [sp, #36]	; 0x24
   1bc04:	ldr	r1, [sp, #40]	; 0x28
   1bc08:	bl	1408c <fprintf@plt>
   1bc0c:	ldr	r4, [r4]
   1bc10:	cmp	r4, #0
   1bc14:	bne	1baf4 <__flatcc_gen_sort@@Base+0x1f4>
   1bc18:	b	1bbd4 <__flatcc_gen_sort@@Base+0x2d4>
   1bc1c:	ldr	r3, [pc, #200]	; 1bcec <__flatcc_gen_sort@@Base+0x3ec>
   1bc20:	add	r3, pc, r3
   1bc24:	str	r3, [sp, #36]	; 0x24
   1bc28:	b	1ba8c <__flatcc_gen_sort@@Base+0x18c>
   1bc2c:	ldr	r0, [r5, #204]	; 0xcc
   1bc30:	str	r3, [sp, #24]
   1bc34:	ldr	r3, [sp, #32]
   1bc38:	str	r8, [sp, #28]
   1bc3c:	str	r3, [sp, #12]
   1bc40:	str	r7, [sp, #20]
   1bc44:	str	r6, [sp, #16]
   1bc48:	stm	sp, {r5, sl, fp}
   1bc4c:	mov	r2, r5
   1bc50:	ldr	r3, [sp, #36]	; 0x24
   1bc54:	ldr	r1, [sp, #48]	; 0x30
   1bc58:	bl	1408c <fprintf@plt>
   1bc5c:	ldr	r4, [r4]
   1bc60:	cmp	r4, #0
   1bc64:	bne	1baf4 <__flatcc_gen_sort@@Base+0x1f4>
   1bc68:	b	1bbd4 <__flatcc_gen_sort@@Base+0x2d4>
   1bc6c:	ldr	r2, [pc, #92]	; 1bcd0 <__flatcc_gen_sort@@Base+0x3d0>
   1bc70:	ldr	r3, [pc, #120]	; 1bcf0 <__flatcc_gen_sort@@Base+0x3f0>
   1bc74:	ldr	r4, [pc, #120]	; 1bcf4 <__flatcc_gen_sort@@Base+0x3f4>
   1bc78:	ldr	r1, [r9, r2]
   1bc7c:	add	r3, pc, r3
   1bc80:	str	r3, [sp]
   1bc84:	ldr	r0, [r1]
   1bc88:	ldr	r1, [pc, #104]	; 1bcf8 <__flatcc_gen_sort@@Base+0x3f8>
   1bc8c:	add	r4, pc, r4
   1bc90:	mov	r2, r4
   1bc94:	ldr	r3, [pc, #96]	; 1bcfc <__flatcc_gen_sort@@Base+0x3fc>
   1bc98:	add	r1, pc, r1
   1bc9c:	bl	1408c <fprintf@plt>
   1bca0:	ldr	r3, [pc, #88]	; 1bd00 <__flatcc_gen_sort@@Base+0x400>
   1bca4:	ldr	r0, [pc, #88]	; 1bd04 <__flatcc_gen_sort@@Base+0x404>
   1bca8:	mov	r1, r4
   1bcac:	add	r3, pc, r3
   1bcb0:	ldr	r2, [pc, #68]	; 1bcfc <__flatcc_gen_sort@@Base+0x3fc>
   1bcb4:	add	r0, pc, r0
   1bcb8:	bl	14140 <__assert_fail@plt>
   1bcbc:	andeq	pc, r4, r4, lsl #11
   1bcc0:	strdeq	sp, [r2], -r8
   1bcc4:	andeq	sp, r2, r8, asr #13
   1bcc8:	andeq	sp, r2, r4, lsr #11
   1bccc:	ldrdeq	sp, [r2], -r4
   1bcd0:	andeq	r0, r0, r0, lsr #1
   1bcd4:	andeq	sp, r2, ip, lsr #13
   1bcd8:	andeq	sp, r2, r4, asr #11
   1bcdc:	andeq	r5, r2, r8, ror r3
   1bce0:	andeq	r0, r0, r8, asr r5
   1bce4:	andeq	sp, r2, r0, lsr r4
   1bce8:	andeq	sp, r2, ip, asr r7
   1bcec:	andeq	sp, r2, ip, asr #8
   1bcf0:	andeq	sp, r2, r8, ror #9
   1bcf4:	andeq	sp, r2, r0, ror r4
   1bcf8:	andeq	r5, r2, r4, lsr #4
   1bcfc:	andeq	r0, r0, lr, asr #10
   1bd00:	ldrdeq	sp, [r2], -ip
   1bd04:	andeq	sp, r2, r8, lsl #12
   1bd08:	push	{r4, r5, r6, lr}
   1bd0c:	subs	r4, r0, #0
   1bd10:	beq	1bd68 <__flatcc_gen_sort@@Base+0x468>
   1bd14:	mov	r5, #0
   1bd18:	ldrh	r3, [r4, #72]	; 0x48
   1bd1c:	tst	r3, #4
   1bd20:	bne	1bd44 <__flatcc_gen_sort@@Base+0x444>
   1bd24:	ldrh	r3, [r4, #24]
   1bd28:	cmp	r3, #14
   1bd2c:	bne	1bd40 <__flatcc_gen_sort@@Base+0x440>
   1bd30:	ldr	r3, [r4, #16]
   1bd34:	ldrh	r2, [r3, #8]
   1bd38:	cmp	r2, #1
   1bd3c:	beq	1bd58 <__flatcc_gen_sort@@Base+0x458>
   1bd40:	add	r5, r5, #1
   1bd44:	ldr	r4, [r4]
   1bd48:	cmp	r4, #0
   1bd4c:	bne	1bd18 <__flatcc_gen_sort@@Base+0x418>
   1bd50:	mov	r0, r5
   1bd54:	pop	{r4, r5, r6, pc}
   1bd58:	ldr	r0, [r3, #20]
   1bd5c:	bl	1bd08 <__flatcc_gen_sort@@Base+0x408>
   1bd60:	add	r5, r5, r0
   1bd64:	b	1bd44 <__flatcc_gen_sort@@Base+0x444>
   1bd68:	mov	r5, r4
   1bd6c:	b	1bd50 <__flatcc_gen_sort@@Base+0x450>
   1bd70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bd74:	sub	sp, sp, #316	; 0x13c
   1bd78:	add	r9, sp, #92	; 0x5c
   1bd7c:	str	r2, [sp, #24]
   1bd80:	mov	sl, r0
   1bd84:	mov	r4, r1
   1bd88:	mov	r0, r9
   1bd8c:	mov	r2, #220	; 0xdc
   1bd90:	mov	r1, #0
   1bd94:	mov	r5, r3
   1bd98:	bl	140a4 <memset@plt>
   1bd9c:	ldr	r3, [pc, #1716]	; 1c458 <__flatcc_gen_sort@@Base+0xb58>
   1bda0:	cmp	r5, #1
   1bda4:	add	r3, pc, r3
   1bda8:	str	r3, [sp, #20]
   1bdac:	beq	1bf7c <__flatcc_gen_sort@@Base+0x67c>
   1bdb0:	cmp	r5, #2
   1bdb4:	beq	1bed4 <__flatcc_gen_sort@@Base+0x5d4>
   1bdb8:	ldr	r3, [pc, #1692]	; 1c45c <__flatcc_gen_sort@@Base+0xb5c>
   1bdbc:	add	r3, pc, r3
   1bdc0:	str	r3, [sp, #28]
   1bdc4:	ldr	r8, [r4]
   1bdc8:	cmp	r8, #0
   1bdcc:	moveq	fp, r8
   1bdd0:	beq	1c224 <__flatcc_gen_sort@@Base+0x924>
   1bdd4:	ldr	r3, [r8, #4]
   1bdd8:	mov	r7, #0
   1bddc:	mov	fp, r7
   1bde0:	ldr	r6, [r3]
   1bde4:	ldr	r4, [r3, #4]
   1bde8:	ldr	r3, [pc, #1648]	; 1c460 <__flatcc_gen_sort@@Base+0xb60>
   1bdec:	add	r3, pc, r3
   1bdf0:	str	r3, [sp, #32]
   1bdf4:	ldr	r3, [pc, #1640]	; 1c464 <__flatcc_gen_sort@@Base+0xb64>
   1bdf8:	add	r3, pc, r3
   1bdfc:	str	r3, [sp, #36]	; 0x24
   1be00:	ldr	r3, [pc, #1632]	; 1c468 <__flatcc_gen_sort@@Base+0xb68>
   1be04:	add	r3, pc, r3
   1be08:	str	r3, [sp, #40]	; 0x28
   1be0c:	ldr	r3, [pc, #1624]	; 1c46c <__flatcc_gen_sort@@Base+0xb6c>
   1be10:	add	r3, pc, r3
   1be14:	str	r3, [sp, #44]	; 0x2c
   1be18:	ldr	r3, [pc, #1616]	; 1c470 <__flatcc_gen_sort@@Base+0xb70>
   1be1c:	add	r3, pc, r3
   1be20:	str	r3, [sp, #48]	; 0x30
   1be24:	ldr	r3, [pc, #1608]	; 1c474 <__flatcc_gen_sort@@Base+0xb74>
   1be28:	add	r3, pc, r3
   1be2c:	str	r3, [sp, #52]	; 0x34
   1be30:	mov	r3, r9
   1be34:	mov	r9, r5
   1be38:	mov	r5, r3
   1be3c:	ldrh	r3, [r8, #24]
   1be40:	cmp	r3, #8
   1be44:	beq	1bf3c <__flatcc_gen_sort@@Base+0x63c>
   1be48:	cmp	r3, #14
   1be4c:	bne	1bee4 <__flatcc_gen_sort@@Base+0x5e4>
   1be50:	ldr	r1, [r8, #16]
   1be54:	mov	r2, r5
   1be58:	ldr	r0, [r1, #12]
   1be5c:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   1be60:	ldr	r3, [r8, #16]
   1be64:	ldrh	r3, [r3, #8]
   1be68:	cmp	r3, #1
   1be6c:	str	r3, [sp, #56]	; 0x38
   1be70:	ldrh	r3, [r8, #72]	; 0x48
   1be74:	beq	1bf8c <__flatcc_gen_sort@@Base+0x68c>
   1be78:	tst	r3, #4
   1be7c:	bne	1c1d0 <__flatcc_gen_sort@@Base+0x8d0>
   1be80:	ldrd	r2, [r8, #88]	; 0x58
   1be84:	cmp	r3, #0
   1be88:	cmpeq	r2, #1
   1be8c:	beq	1c00c <__flatcc_gen_sort@@Base+0x70c>
   1be90:	cmp	r9, #1
   1be94:	beq	1c1f4 <__flatcc_gen_sort@@Base+0x8f4>
   1be98:	cmp	r9, #2
   1be9c:	bne	1c00c <__flatcc_gen_sort@@Base+0x70c>
   1bea0:	ldr	r3, [sp, #352]	; 0x160
   1bea4:	ldr	r0, [sl, #204]	; 0xcc
   1bea8:	cmp	r3, #0
   1beac:	beq	1c3c8 <__flatcc_gen_sort@@Base+0xac8>
   1beb0:	ldr	r1, [pc, #1472]	; 1c478 <__flatcc_gen_sort@@Base+0xb78>
   1beb4:	stmib	sp, {r4, r6}
   1beb8:	str	r6, [sp]
   1bebc:	mov	r3, r4
   1bec0:	mov	r2, r5
   1bec4:	add	r1, pc, r1
   1bec8:	bl	1408c <fprintf@plt>
   1becc:	add	fp, fp, #1
   1bed0:	b	1bfc8 <__flatcc_gen_sort@@Base+0x6c8>
   1bed4:	ldr	r3, [pc, #1440]	; 1c47c <__flatcc_gen_sort@@Base+0xb7c>
   1bed8:	add	r3, pc, r3
   1bedc:	str	r3, [sp, #28]
   1bee0:	b	1bdc4 <__flatcc_gen_sort@@Base+0x4c4>
   1bee4:	ldr	r2, [pc, #1428]	; 1c480 <__flatcc_gen_sort@@Base+0xb80>
   1bee8:	ldr	r1, [sp, #20]
   1beec:	ldr	r3, [pc, #1424]	; 1c484 <__flatcc_gen_sort@@Base+0xb84>
   1bef0:	ldr	r4, [pc, #1424]	; 1c488 <__flatcc_gen_sort@@Base+0xb88>
   1bef4:	ldr	r1, [r1, r2]
   1bef8:	add	r3, pc, r3
   1befc:	str	r3, [sp]
   1bf00:	ldr	r0, [r1]
   1bf04:	ldr	r1, [pc, #1408]	; 1c48c <__flatcc_gen_sort@@Base+0xb8c>
   1bf08:	add	r4, pc, r4
   1bf0c:	mov	r2, r4
   1bf10:	ldr	r3, [pc, #1400]	; 1c490 <__flatcc_gen_sort@@Base+0xb90>
   1bf14:	add	r1, pc, r1
   1bf18:	bl	1408c <fprintf@plt>
   1bf1c:	ldr	r3, [pc, #1392]	; 1c494 <__flatcc_gen_sort@@Base+0xb94>
   1bf20:	ldr	r0, [pc, #1392]	; 1c498 <__flatcc_gen_sort@@Base+0xb98>
   1bf24:	add	r3, pc, r3
   1bf28:	mov	r1, r4
   1bf2c:	add	r3, r3, #40	; 0x28
   1bf30:	ldr	r2, [pc, #1368]	; 1c490 <__flatcc_gen_sort@@Base+0xb90>
   1bf34:	add	r0, pc, r0
   1bf38:	bl	14140 <__assert_fail@plt>
   1bf3c:	ldr	r3, [r8, #16]
   1bf40:	sub	r3, r3, #1
   1bf44:	cmp	r3, #10
   1bf48:	addls	pc, pc, r3, lsl #2
   1bf4c:	b	1c400 <__flatcc_gen_sort@@Base+0xb00>
   1bf50:	b	1c0b0 <__flatcc_gen_sort@@Base+0x7b0>
   1bf54:	b	1c0a4 <__flatcc_gen_sort@@Base+0x7a4>
   1bf58:	b	1c038 <__flatcc_gen_sort@@Base+0x738>
   1bf5c:	b	1c104 <__flatcc_gen_sort@@Base+0x804>
   1bf60:	b	1c0f8 <__flatcc_gen_sort@@Base+0x7f8>
   1bf64:	b	1c0ec <__flatcc_gen_sort@@Base+0x7ec>
   1bf68:	b	1c0e0 <__flatcc_gen_sort@@Base+0x7e0>
   1bf6c:	b	1c0d4 <__flatcc_gen_sort@@Base+0x7d4>
   1bf70:	b	1c0c8 <__flatcc_gen_sort@@Base+0x7c8>
   1bf74:	b	1c0bc <__flatcc_gen_sort@@Base+0x7bc>
   1bf78:	b	1c098 <__flatcc_gen_sort@@Base+0x798>
   1bf7c:	ldr	r3, [pc, #1304]	; 1c49c <__flatcc_gen_sort@@Base+0xb9c>
   1bf80:	add	r3, pc, r3
   1bf84:	str	r3, [sp, #28]
   1bf88:	b	1bdc4 <__flatcc_gen_sort@@Base+0x4c4>
   1bf8c:	tst	r3, #4
   1bf90:	bne	1c110 <__flatcc_gen_sort@@Base+0x810>
   1bf94:	ldr	r3, [sp, #352]	; 0x160
   1bf98:	ldr	r0, [sl, #204]	; 0xcc
   1bf9c:	cmp	r3, #0
   1bfa0:	beq	1c294 <__flatcc_gen_sort@@Base+0x994>
   1bfa4:	ldr	r1, [pc, #1268]	; 1c4a0 <__flatcc_gen_sort@@Base+0xba0>
   1bfa8:	str	r6, [sp, #12]
   1bfac:	str	r4, [sp, #8]
   1bfb0:	stm	sp, {r4, r6}
   1bfb4:	ldr	r3, [sp, #28]
   1bfb8:	mov	r2, r5
   1bfbc:	add	r1, pc, r1
   1bfc0:	add	fp, fp, #1
   1bfc4:	bl	1408c <fprintf@plt>
   1bfc8:	ldr	r8, [r8]
   1bfcc:	cmp	r8, #0
   1bfd0:	beq	1c224 <__flatcc_gen_sort@@Base+0x924>
   1bfd4:	ldr	r3, [r8, #4]
   1bfd8:	cmp	fp, #0
   1bfdc:	ldr	r6, [r3]
   1bfe0:	ldr	r4, [r3, #4]
   1bfe4:	ble	1be3c <__flatcc_gen_sort@@Base+0x53c>
   1bfe8:	tst	fp, #3
   1bfec:	ldr	r3, [sl, #204]	; 0xcc
   1bff0:	bne	1c140 <__flatcc_gen_sort@@Base+0x840>
   1bff4:	ldr	r0, [pc, #1192]	; 1c4a4 <__flatcc_gen_sort@@Base+0xba4>
   1bff8:	mov	r2, #4
   1bffc:	mov	r1, #1
   1c000:	add	r0, pc, r0
   1c004:	bl	14014 <fwrite@plt>
   1c008:	b	1be3c <__flatcc_gen_sort@@Base+0x53c>
   1c00c:	ldr	r3, [sp, #352]	; 0x160
   1c010:	ldr	r0, [sl, #204]	; 0xcc
   1c014:	cmp	r3, #0
   1c018:	beq	1c3e4 <__flatcc_gen_sort@@Base+0xae4>
   1c01c:	ldr	r1, [pc, #1156]	; 1c4a8 <__flatcc_gen_sort@@Base+0xba8>
   1c020:	stm	sp, {r4, r6}
   1c024:	mov	r3, r6
   1c028:	mov	r2, r4
   1c02c:	add	r1, pc, r1
   1c030:	bl	1408c <fprintf@plt>
   1c034:	b	1becc <__flatcc_gen_sort@@Base+0x5cc>
   1c038:	ldr	r3, [pc, #1132]	; 1c4ac <__flatcc_gen_sort@@Base+0xbac>
   1c03c:	add	r3, pc, r3
   1c040:	ldrh	r2, [r8, #72]	; 0x48
   1c044:	tst	r2, #4
   1c048:	bne	1c158 <__flatcc_gen_sort@@Base+0x858>
   1c04c:	ldrd	r0, [r8, #88]	; 0x58
   1c050:	cmp	r1, #0
   1c054:	cmpeq	r0, #1
   1c058:	beq	1c17c <__flatcc_gen_sort@@Base+0x87c>
   1c05c:	cmp	r9, #1
   1c060:	beq	1c1a4 <__flatcc_gen_sort@@Base+0x8a4>
   1c064:	cmp	r9, #2
   1c068:	bne	1c17c <__flatcc_gen_sort@@Base+0x87c>
   1c06c:	ldr	r2, [sp, #352]	; 0x160
   1c070:	ldr	r0, [sl, #204]	; 0xcc
   1c074:	cmp	r2, #0
   1c078:	beq	1c254 <__flatcc_gen_sort@@Base+0x954>
   1c07c:	str	r6, [sp, #12]
   1c080:	str	r4, [sp, #8]
   1c084:	stm	sp, {r4, r6}
   1c088:	mov	r2, sl
   1c08c:	ldr	r1, [sp, #52]	; 0x34
   1c090:	bl	1408c <fprintf@plt>
   1c094:	b	1becc <__flatcc_gen_sort@@Base+0x5cc>
   1c098:	ldr	r3, [pc, #1040]	; 1c4b0 <__flatcc_gen_sort@@Base+0xbb0>
   1c09c:	add	r3, pc, r3
   1c0a0:	b	1c040 <__flatcc_gen_sort@@Base+0x740>
   1c0a4:	ldr	r3, [pc, #1032]	; 1c4b4 <__flatcc_gen_sort@@Base+0xbb4>
   1c0a8:	add	r3, pc, r3
   1c0ac:	b	1c040 <__flatcc_gen_sort@@Base+0x740>
   1c0b0:	ldr	r3, [pc, #1024]	; 1c4b8 <__flatcc_gen_sort@@Base+0xbb8>
   1c0b4:	add	r3, pc, r3
   1c0b8:	b	1c040 <__flatcc_gen_sort@@Base+0x740>
   1c0bc:	ldr	r3, [pc, #1016]	; 1c4bc <__flatcc_gen_sort@@Base+0xbbc>
   1c0c0:	add	r3, pc, r3
   1c0c4:	b	1c040 <__flatcc_gen_sort@@Base+0x740>
   1c0c8:	ldr	r3, [pc, #1008]	; 1c4c0 <__flatcc_gen_sort@@Base+0xbc0>
   1c0cc:	add	r3, pc, r3
   1c0d0:	b	1c040 <__flatcc_gen_sort@@Base+0x740>
   1c0d4:	ldr	r3, [pc, #1000]	; 1c4c4 <__flatcc_gen_sort@@Base+0xbc4>
   1c0d8:	add	r3, pc, r3
   1c0dc:	b	1c040 <__flatcc_gen_sort@@Base+0x740>
   1c0e0:	ldr	r3, [pc, #992]	; 1c4c8 <__flatcc_gen_sort@@Base+0xbc8>
   1c0e4:	add	r3, pc, r3
   1c0e8:	b	1c040 <__flatcc_gen_sort@@Base+0x740>
   1c0ec:	ldr	r3, [pc, #984]	; 1c4cc <__flatcc_gen_sort@@Base+0xbcc>
   1c0f0:	add	r3, pc, r3
   1c0f4:	b	1c040 <__flatcc_gen_sort@@Base+0x740>
   1c0f8:	ldr	r3, [pc, #976]	; 1c4d0 <__flatcc_gen_sort@@Base+0xbd0>
   1c0fc:	add	r3, pc, r3
   1c100:	b	1c040 <__flatcc_gen_sort@@Base+0x740>
   1c104:	ldr	r3, [pc, #968]	; 1c4d4 <__flatcc_gen_sort@@Base+0xbd4>
   1c108:	add	r3, pc, r3
   1c10c:	b	1c040 <__flatcc_gen_sort@@Base+0x740>
   1c110:	ldr	r1, [pc, #960]	; 1c4d8 <__flatcc_gen_sort@@Base+0xbd8>
   1c114:	mov	r3, r7
   1c118:	mov	r2, r7
   1c11c:	add	r1, pc, r1
   1c120:	ldr	r0, [sl, #204]	; 0xcc
   1c124:	bl	1408c <fprintf@plt>
   1c128:	ldr	r3, [r8, #16]
   1c12c:	add	r7, r7, #1
   1c130:	ldr	r0, [r3, #20]
   1c134:	bl	1bd08 <__flatcc_gen_sort@@Base+0x408>
   1c138:	add	fp, fp, r0
   1c13c:	b	1bfc8 <__flatcc_gen_sort@@Base+0x6c8>
   1c140:	ldr	r0, [pc, #916]	; 1c4dc <__flatcc_gen_sort@@Base+0xbdc>
   1c144:	mov	r2, #2
   1c148:	mov	r1, #1
   1c14c:	add	r0, pc, r0
   1c150:	bl	14014 <fwrite@plt>
   1c154:	b	1be3c <__flatcc_gen_sort@@Base+0x53c>
   1c158:	ldr	r1, [pc, #896]	; 1c4e0 <__flatcc_gen_sort@@Base+0xbe0>
   1c15c:	add	r3, r7, #1
   1c160:	mov	r2, r7
   1c164:	add	r1, pc, r1
   1c168:	ldr	r0, [sl, #204]	; 0xcc
   1c16c:	add	fp, fp, #1
   1c170:	mov	r7, r3
   1c174:	bl	1408c <fprintf@plt>
   1c178:	b	1bfc8 <__flatcc_gen_sort@@Base+0x6c8>
   1c17c:	ldr	r3, [sp, #352]	; 0x160
   1c180:	ldr	r0, [sl, #204]	; 0xcc
   1c184:	cmp	r3, #0
   1c188:	beq	1c268 <__flatcc_gen_sort@@Base+0x968>
   1c18c:	stm	sp, {r4, r6}
   1c190:	mov	r3, r6
   1c194:	mov	r2, r4
   1c198:	ldr	r1, [sp, #36]	; 0x24
   1c19c:	bl	1408c <fprintf@plt>
   1c1a0:	b	1becc <__flatcc_gen_sort@@Base+0x5cc>
   1c1a4:	ldr	r2, [sp, #352]	; 0x160
   1c1a8:	ldr	r0, [sl, #204]	; 0xcc
   1c1ac:	cmp	r2, #0
   1c1b0:	beq	1c280 <__flatcc_gen_sort@@Base+0x980>
   1c1b4:	str	r6, [sp, #12]
   1c1b8:	str	r4, [sp, #8]
   1c1bc:	stm	sp, {r4, r6}
   1c1c0:	mov	r2, sl
   1c1c4:	ldr	r1, [sp, #44]	; 0x2c
   1c1c8:	bl	1408c <fprintf@plt>
   1c1cc:	b	1becc <__flatcc_gen_sort@@Base+0x5cc>
   1c1d0:	ldr	r1, [pc, #780]	; 1c4e4 <__flatcc_gen_sort@@Base+0xbe4>
   1c1d4:	add	r3, r7, #1
   1c1d8:	mov	r2, r7
   1c1dc:	add	r1, pc, r1
   1c1e0:	ldr	r0, [sl, #204]	; 0xcc
   1c1e4:	add	fp, fp, #1
   1c1e8:	mov	r7, r3
   1c1ec:	bl	1408c <fprintf@plt>
   1c1f0:	b	1bfc8 <__flatcc_gen_sort@@Base+0x6c8>
   1c1f4:	ldr	r3, [sp, #352]	; 0x160
   1c1f8:	ldr	r0, [sl, #204]	; 0xcc
   1c1fc:	cmp	r3, #0
   1c200:	beq	1c3ac <__flatcc_gen_sort@@Base+0xaac>
   1c204:	ldr	r1, [pc, #732]	; 1c4e8 <__flatcc_gen_sort@@Base+0xbe8>
   1c208:	stmib	sp, {r4, r6}
   1c20c:	str	r6, [sp]
   1c210:	mov	r3, r4
   1c214:	mov	r2, r5
   1c218:	add	r1, pc, r1
   1c21c:	bl	1408c <fprintf@plt>
   1c220:	b	1becc <__flatcc_gen_sort@@Base+0x5cc>
   1c224:	ldr	r3, [sp, #24]
   1c228:	cmp	r3, #0
   1c22c:	ble	1c248 <__flatcc_gen_sort@@Base+0x948>
   1c230:	ldr	r0, [pc, #692]	; 1c4ec <__flatcc_gen_sort@@Base+0xbec>
   1c234:	ldr	r3, [sl, #204]	; 0xcc
   1c238:	mov	r2, #4
   1c23c:	mov	r1, #1
   1c240:	add	r0, pc, r0
   1c244:	bl	14014 <fwrite@plt>
   1c248:	mov	r0, fp
   1c24c:	add	sp, sp, #316	; 0x13c
   1c250:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c254:	stm	sp, {r4, r6, fp}
   1c258:	mov	r2, sl
   1c25c:	ldr	r1, [sp, #48]	; 0x30
   1c260:	bl	1408c <fprintf@plt>
   1c264:	b	1becc <__flatcc_gen_sort@@Base+0x5cc>
   1c268:	str	fp, [sp]
   1c26c:	mov	r3, r6
   1c270:	mov	r2, r4
   1c274:	ldr	r1, [sp, #32]
   1c278:	bl	1408c <fprintf@plt>
   1c27c:	b	1becc <__flatcc_gen_sort@@Base+0x5cc>
   1c280:	stm	sp, {r4, r6, fp}
   1c284:	mov	r2, sl
   1c288:	ldr	r1, [sp, #40]	; 0x28
   1c28c:	bl	1408c <fprintf@plt>
   1c290:	b	1becc <__flatcc_gen_sort@@Base+0x5cc>
   1c294:	ldr	r1, [pc, #596]	; 1c4f0 <__flatcc_gen_sort@@Base+0xbf0>
   1c298:	ldr	r3, [sp, #28]
   1c29c:	mov	r2, r5
   1c2a0:	add	r1, pc, r1
   1c2a4:	stm	sp, {r4, r6}
   1c2a8:	bl	1408c <fprintf@plt>
   1c2ac:	ldr	r3, [r8, #16]
   1c2b0:	ldr	r0, [r3, #20]
   1c2b4:	bl	1bd08 <__flatcc_gen_sort@@Base+0x408>
   1c2b8:	subs	r3, r0, #0
   1c2bc:	str	r3, [sp, #68]	; 0x44
   1c2c0:	ble	1c39c <__flatcc_gen_sort@@Base+0xa9c>
   1c2c4:	ldr	r1, [pc, #552]	; 1c4f4 <__flatcc_gen_sort@@Base+0xbf4>
   1c2c8:	ldr	r2, [pc, #552]	; 1c4f8 <__flatcc_gen_sort@@Base+0xbf8>
   1c2cc:	add	r1, pc, r1
   1c2d0:	str	r1, [sp, #60]	; 0x3c
   1c2d4:	ldr	r1, [pc, #544]	; 1c4fc <__flatcc_gen_sort@@Base+0xbfc>
   1c2d8:	add	r2, pc, r2
   1c2dc:	add	r1, pc, r1
   1c2e0:	str	r1, [sp, #64]	; 0x40
   1c2e4:	ldr	r1, [pc, #532]	; 1c500 <__flatcc_gen_sort@@Base+0xc00>
   1c2e8:	str	r7, [sp, #72]	; 0x48
   1c2ec:	add	r1, pc, r1
   1c2f0:	str	r8, [sp, #76]	; 0x4c
   1c2f4:	str	r9, [sp, #80]	; 0x50
   1c2f8:	str	r5, [sp, #84]	; 0x54
   1c2fc:	ldr	r4, [sp, #352]	; 0x160
   1c300:	mov	r8, r3
   1c304:	ldr	r7, [sp, #24]
   1c308:	mov	r9, r1
   1c30c:	mov	r5, r2
   1c310:	b	1c348 <__flatcc_gen_sort@@Base+0xa48>
   1c314:	cmp	r7, #4
   1c318:	ble	1c370 <__flatcc_gen_sort@@Base+0xa70>
   1c31c:	ldr	r2, [sp, #60]	; 0x3c
   1c320:	ldr	r1, [sp, #64]	; 0x40
   1c324:	ldr	r0, [sl, #204]	; 0xcc
   1c328:	bl	1408c <fprintf@plt>
   1c32c:	mov	r2, r6
   1c330:	add	r4, r4, #1
   1c334:	mov	r1, r9
   1c338:	ldr	r0, [sl, #204]	; 0xcc
   1c33c:	bl	1408c <fprintf@plt>
   1c340:	cmp	r8, r4
   1c344:	beq	1c388 <__flatcc_gen_sort@@Base+0xa88>
   1c348:	cmp	r7, #0
   1c34c:	add	r6, fp, r4
   1c350:	beq	1c32c <__flatcc_gen_sort@@Base+0xa2c>
   1c354:	cmp	r4, #0
   1c358:	beq	1c314 <__flatcc_gen_sort@@Base+0xa14>
   1c35c:	tst	r4, #3
   1c360:	bne	1c370 <__flatcc_gen_sort@@Base+0xa70>
   1c364:	sub	r3, r7, r4
   1c368:	cmp	r3, #2
   1c36c:	bgt	1c31c <__flatcc_gen_sort@@Base+0xa1c>
   1c370:	ldr	r3, [sl, #204]	; 0xcc
   1c374:	mov	r2, #2
   1c378:	ldr	r1, [sp, #56]	; 0x38
   1c37c:	mov	r0, r5
   1c380:	bl	14014 <fwrite@plt>
   1c384:	b	1c32c <__flatcc_gen_sort@@Base+0xa2c>
   1c388:	add	r7, sp, #72	; 0x48
   1c38c:	ldr	r3, [sp, #68]	; 0x44
   1c390:	ldm	r7, {r7, r8, r9}
   1c394:	add	fp, r3, fp
   1c398:	ldr	r5, [sp, #84]	; 0x54
   1c39c:	ldr	r1, [sl, #204]	; 0xcc
   1c3a0:	mov	r0, #41	; 0x29
   1c3a4:	bl	140ec <fputc@plt>
   1c3a8:	b	1bfc8 <__flatcc_gen_sort@@Base+0x6c8>
   1c3ac:	ldr	r1, [pc, #336]	; 1c504 <__flatcc_gen_sort@@Base+0xc04>
   1c3b0:	stm	sp, {r6, fp}
   1c3b4:	mov	r3, r4
   1c3b8:	mov	r2, r5
   1c3bc:	add	r1, pc, r1
   1c3c0:	bl	1408c <fprintf@plt>
   1c3c4:	b	1becc <__flatcc_gen_sort@@Base+0x5cc>
   1c3c8:	ldr	r1, [pc, #312]	; 1c508 <__flatcc_gen_sort@@Base+0xc08>
   1c3cc:	stm	sp, {r6, fp}
   1c3d0:	mov	r3, r4
   1c3d4:	mov	r2, r5
   1c3d8:	add	r1, pc, r1
   1c3dc:	bl	1408c <fprintf@plt>
   1c3e0:	b	1becc <__flatcc_gen_sort@@Base+0x5cc>
   1c3e4:	ldr	r1, [pc, #288]	; 1c50c <__flatcc_gen_sort@@Base+0xc0c>
   1c3e8:	str	fp, [sp]
   1c3ec:	mov	r3, r6
   1c3f0:	mov	r2, r4
   1c3f4:	add	r1, pc, r1
   1c3f8:	bl	1408c <fprintf@plt>
   1c3fc:	b	1becc <__flatcc_gen_sort@@Base+0x5cc>
   1c400:	ldr	r2, [pc, #120]	; 1c480 <__flatcc_gen_sort@@Base+0xb80>
   1c404:	ldr	r1, [sp, #20]
   1c408:	ldr	r3, [pc, #256]	; 1c510 <__flatcc_gen_sort@@Base+0xc10>
   1c40c:	ldr	r4, [pc, #256]	; 1c514 <__flatcc_gen_sort@@Base+0xc14>
   1c410:	ldr	r1, [r1, r2]
   1c414:	add	r3, pc, r3
   1c418:	str	r3, [sp]
   1c41c:	ldr	r0, [r1]
   1c420:	ldr	r1, [pc, #240]	; 1c518 <__flatcc_gen_sort@@Base+0xc18>
   1c424:	add	r4, pc, r4
   1c428:	mov	r2, r4
   1c42c:	mov	r3, #96	; 0x60
   1c430:	add	r1, pc, r1
   1c434:	bl	1408c <fprintf@plt>
   1c438:	ldr	r3, [pc, #220]	; 1c51c <__flatcc_gen_sort@@Base+0xc1c>
   1c43c:	ldr	r0, [pc, #220]	; 1c520 <__flatcc_gen_sort@@Base+0xc20>
   1c440:	add	r3, pc, r3
   1c444:	mov	r1, r4
   1c448:	add	r3, r3, #20
   1c44c:	mov	r2, #96	; 0x60
   1c450:	add	r0, pc, r0
   1c454:	bl	14140 <__assert_fail@plt>
   1c458:	andeq	pc, r4, r4, asr r2	; <UNPREDICTABLE>
   1c45c:	andeq	lr, r2, r4, lsl #27
   1c460:	andeq	sp, r2, r8, ror r5
   1c464:	andeq	sp, r2, r8, asr r5
   1c468:	muleq	r2, r8, r5
   1c46c:	andeq	sp, r2, r4, ror #10
   1c470:	andeq	sp, r2, ip, asr #11
   1c474:	muleq	r2, r8, r5
   1c478:	andeq	sp, r2, r8, asr #8
   1c47c:	andeq	sp, r2, ip, lsr #6
   1c480:	andeq	r0, r0, r0, lsr #1
   1c484:	andeq	sp, r2, r4, lsl r5
   1c488:	strdeq	sp, [r2], -r4
   1c48c:	andeq	r4, r2, r8, lsr #31
   1c490:	andeq	r0, r0, r1, ror #7
   1c494:	andeq	sp, r2, r4, rrx
   1c498:	andeq	sp, r2, r8, lsl #7
   1c49c:	andeq	sp, r2, ip, lsl #5
   1c4a0:	andeq	sp, r2, r4, lsr #5
   1c4a4:	andeq	sp, r2, r8, lsl r2
   1c4a8:	andeq	sp, r2, r4, lsr #6
   1c4ac:	muleq	r2, ip, r1
   1c4b0:	strdeq	r4, [r2], -r0
   1c4b4:	andeq	r5, r2, r8, lsr #2
   1c4b8:	andeq	r5, r2, r4, lsl r1
   1c4bc:	ldrdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   1c4c0:	andeq	r5, r2, r4, lsr r1
   1c4c4:	andeq	r5, r2, r0, lsr #2
   1c4c8:	andeq	r5, r2, ip, lsl #2
   1c4cc:	strdeq	r5, [r2], -r8
   1c4d0:	andeq	sp, r3, ip, lsl #8
   1c4d4:	ldrdeq	r5, [r2], -r8
   1c4d8:	andeq	sp, r2, r8, lsl #2
   1c4dc:	ldrdeq	sp, [r2], -r4
   1c4e0:	andeq	sp, r2, r4, asr #2
   1c4e4:	andeq	sp, r2, ip, asr #1
   1c4e8:	andeq	sp, r2, r8, lsr #1
   1c4ec:	ldrdeq	ip, [r2], -r8
   1c4f0:	andeq	ip, r2, r0, ror #31
   1c4f4:	andeq	r6, r2, ip, asr #32
   1c4f8:	andeq	ip, r2, r8, asr #31
   1c4fc:			; <UNDEFINED> instruction: 0x0002cfbc
   1c500:			; <UNDEFINED> instruction: 0x0002cfb8
   1c504:	andeq	ip, r2, ip, lsr #30
   1c508:	andeq	ip, r2, r8, asr pc
   1c50c:	andeq	ip, r2, r0, ror pc
   1c510:			; <UNDEFINED> instruction: 0x00024ab4
   1c514:	andeq	r4, r2, r8, lsr sl
   1c518:	andeq	r4, r2, ip, lsl #21
   1c51c:	andeq	ip, r2, r8, asr #22
   1c520:	andeq	ip, r2, ip, ror #28
   1c524:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c528:	sub	sp, sp, #260	; 0x104
   1c52c:	mov	r4, r1
   1c530:	add	r9, sp, #36	; 0x24
   1c534:	mov	r7, r0
   1c538:	mov	r5, r2
   1c53c:	mov	r0, r9
   1c540:	mov	r2, #220	; 0xdc
   1c544:	mov	r1, #0
   1c548:	mov	r8, r3
   1c54c:	bl	140a4 <memset@plt>
   1c550:	ldr	r4, [r4]
   1c554:	ldr	sl, [pc, #964]	; 1c920 <__flatcc_gen_sort@@Base+0x1020>
   1c558:	cmp	r4, #0
   1c55c:	add	sl, pc, sl
   1c560:	beq	1c66c <__flatcc_gen_sort@@Base+0xd6c>
   1c564:	ldr	r2, [pc, #952]	; 1c924 <__flatcc_gen_sort@@Base+0x1024>
   1c568:	ldr	r3, [pc, #952]	; 1c928 <__flatcc_gen_sort@@Base+0x1028>
   1c56c:	add	r2, pc, r2
   1c570:	str	r2, [sp, #12]
   1c574:	ldr	r2, [pc, #944]	; 1c92c <__flatcc_gen_sort@@Base+0x102c>
   1c578:	ldr	r6, [pc, #944]	; 1c930 <__flatcc_gen_sort@@Base+0x1030>
   1c57c:	add	r2, pc, r2
   1c580:	str	r2, [sp, #16]
   1c584:	ldr	r2, [pc, #936]	; 1c934 <__flatcc_gen_sort@@Base+0x1034>
   1c588:	ldr	fp, [pc, #936]	; 1c938 <__flatcc_gen_sort@@Base+0x1038>
   1c58c:	add	r2, pc, r2
   1c590:	str	r2, [sp, #20]
   1c594:	ldr	r2, [pc, #928]	; 1c93c <__flatcc_gen_sort@@Base+0x103c>
   1c598:	add	r3, pc, r3
   1c59c:	add	r2, pc, r2
   1c5a0:	str	r2, [sp, #24]
   1c5a4:	ldr	r2, [pc, #916]	; 1c940 <__flatcc_gen_sort@@Base+0x1040>
   1c5a8:	add	r6, pc, r6
   1c5ac:	add	r2, pc, r2
   1c5b0:	str	r2, [sp, #28]
   1c5b4:	ldr	r2, [sp, #296]	; 0x128
   1c5b8:	add	fp, pc, fp
   1c5bc:	cmp	r2, #0
   1c5c0:	moveq	r6, r3
   1c5c4:	ldrh	r3, [r4, #72]	; 0x48
   1c5c8:	tst	r3, #4
   1c5cc:	bne	1c660 <__flatcc_gen_sort@@Base+0xd60>
   1c5d0:	ldrh	r3, [r4, #24]
   1c5d4:	cmp	r3, #8
   1c5d8:	beq	1c6cc <__flatcc_gen_sort@@Base+0xdcc>
   1c5dc:	cmp	r3, #14
   1c5e0:	bne	1c678 <__flatcc_gen_sort@@Base+0xd78>
   1c5e4:	ldr	r1, [r4, #16]
   1c5e8:	ldrh	r3, [r1, #8]
   1c5ec:	cmp	r3, #1
   1c5f0:	beq	1c78c <__flatcc_gen_sort@@Base+0xe8c>
   1c5f4:	cmp	r8, #0
   1c5f8:	beq	1c634 <__flatcc_gen_sort@@Base+0xd34>
   1c5fc:	cmp	r5, #0
   1c600:	beq	1c7d4 <__flatcc_gen_sort@@Base+0xed4>
   1c604:	tst	r5, #3
   1c608:	bne	1c618 <__flatcc_gen_sort@@Base+0xd18>
   1c60c:	sub	r3, r8, r5
   1c610:	cmp	r3, #2
   1c614:	bgt	1c8e4 <__flatcc_gen_sort@@Base+0xfe4>
   1c618:	ldr	r0, [pc, #804]	; 1c944 <__flatcc_gen_sort@@Base+0x1044>
   1c61c:	mov	r1, #1
   1c620:	ldr	r3, [r7, #204]	; 0xcc
   1c624:	mov	r2, #2
   1c628:	add	r0, pc, r0
   1c62c:	bl	14014 <fwrite@plt>
   1c630:	ldr	r1, [r4, #16]
   1c634:	ldr	r0, [r1, #12]
   1c638:	mov	r2, r9
   1c63c:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   1c640:	ldr	r1, [pc, #768]	; 1c948 <__flatcc_gen_sort@@Base+0x1048>
   1c644:	add	ip, r5, #1
   1c648:	mov	r3, r5
   1c64c:	mov	r2, r9
   1c650:	add	r1, pc, r1
   1c654:	ldr	r0, [r7, #204]	; 0xcc
   1c658:	mov	r5, ip
   1c65c:	bl	1408c <fprintf@plt>
   1c660:	ldr	r4, [r4]
   1c664:	cmp	r4, #0
   1c668:	bne	1c5c4 <__flatcc_gen_sort@@Base+0xcc4>
   1c66c:	mov	r0, r5
   1c670:	add	sp, sp, #260	; 0x104
   1c674:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c678:	ldr	r2, [pc, #716]	; 1c94c <__flatcc_gen_sort@@Base+0x104c>
   1c67c:	ldr	r3, [pc, #716]	; 1c950 <__flatcc_gen_sort@@Base+0x1050>
   1c680:	ldr	r4, [pc, #716]	; 1c954 <__flatcc_gen_sort@@Base+0x1054>
   1c684:	ldr	r1, [sl, r2]
   1c688:	add	r3, pc, r3
   1c68c:	str	r3, [sp]
   1c690:	ldr	r0, [r1]
   1c694:	ldr	r1, [pc, #700]	; 1c958 <__flatcc_gen_sort@@Base+0x1058>
   1c698:	add	r4, pc, r4
   1c69c:	mov	r2, r4
   1c6a0:	ldr	r3, [pc, #692]	; 1c95c <__flatcc_gen_sort@@Base+0x105c>
   1c6a4:	add	r1, pc, r1
   1c6a8:	bl	1408c <fprintf@plt>
   1c6ac:	ldr	r3, [pc, #684]	; 1c960 <__flatcc_gen_sort@@Base+0x1060>
   1c6b0:	ldr	r0, [pc, #684]	; 1c964 <__flatcc_gen_sort@@Base+0x1064>
   1c6b4:	add	r3, pc, r3
   1c6b8:	mov	r1, r4
   1c6bc:	add	r3, r3, #92	; 0x5c
   1c6c0:	ldr	r2, [pc, #660]	; 1c95c <__flatcc_gen_sort@@Base+0x105c>
   1c6c4:	add	r0, pc, r0
   1c6c8:	bl	14140 <__assert_fail@plt>
   1c6cc:	cmp	r8, #0
   1c6d0:	beq	1c6f8 <__flatcc_gen_sort@@Base+0xdf8>
   1c6d4:	cmp	r5, #0
   1c6d8:	bne	1c740 <__flatcc_gen_sort@@Base+0xe40>
   1c6dc:	cmp	r8, #4
   1c6e0:	ble	1c748 <__flatcc_gen_sort@@Base+0xe48>
   1c6e4:	ldr	r1, [pc, #636]	; 1c968 <__flatcc_gen_sort@@Base+0x1068>
   1c6e8:	mov	r2, r6
   1c6ec:	add	r1, pc, r1
   1c6f0:	ldr	r0, [r7, #204]	; 0xcc
   1c6f4:	bl	1408c <fprintf@plt>
   1c6f8:	ldr	r3, [r4, #16]
   1c6fc:	cmp	r3, #5
   1c700:	beq	1c76c <__flatcc_gen_sort@@Base+0xe6c>
   1c704:	sub	r3, r3, #1
   1c708:	cmp	r3, #10
   1c70c:	addls	pc, pc, r3, lsl #2
   1c710:	b	1c890 <__flatcc_gen_sort@@Base+0xf90>
   1c714:	b	1c914 <__flatcc_gen_sort@@Base+0x1014>
   1c718:	b	1c900 <__flatcc_gen_sort@@Base+0x1000>
   1c71c:	b	1c884 <__flatcc_gen_sort@@Base+0xf84>
   1c720:	b	1c7f8 <__flatcc_gen_sort@@Base+0xef8>
   1c724:	b	1c890 <__flatcc_gen_sort@@Base+0xf90>
   1c728:	b	1c834 <__flatcc_gen_sort@@Base+0xf34>
   1c72c:	b	1c848 <__flatcc_gen_sort@@Base+0xf48>
   1c730:	b	1c85c <__flatcc_gen_sort@@Base+0xf5c>
   1c734:	b	1c870 <__flatcc_gen_sort@@Base+0xf70>
   1c738:	b	1c820 <__flatcc_gen_sort@@Base+0xf20>
   1c73c:	b	1c80c <__flatcc_gen_sort@@Base+0xf0c>
   1c740:	tst	r5, #3
   1c744:	beq	1c7b0 <__flatcc_gen_sort@@Base+0xeb0>
   1c748:	ldr	r0, [pc, #540]	; 1c96c <__flatcc_gen_sort@@Base+0x106c>
   1c74c:	ldr	r3, [r7, #204]	; 0xcc
   1c750:	mov	r2, #2
   1c754:	mov	r1, #1
   1c758:	add	r0, pc, r0
   1c75c:	bl	14014 <fwrite@plt>
   1c760:	ldr	r3, [r4, #16]
   1c764:	cmp	r3, #5
   1c768:	bne	1c704 <__flatcc_gen_sort@@Base+0xe04>
   1c76c:	ldr	r3, [sp, #12]
   1c770:	mov	r2, r7
   1c774:	ldr	r0, [r7, #204]	; 0xcc
   1c778:	mov	r1, fp
   1c77c:	str	r5, [sp]
   1c780:	add	r5, r5, #1
   1c784:	bl	1408c <fprintf@plt>
   1c788:	b	1c660 <__flatcc_gen_sort@@Base+0xd60>
   1c78c:	ldr	r3, [sp, #296]	; 0x128
   1c790:	mov	r2, r5
   1c794:	str	r3, [sp]
   1c798:	add	r1, r1, #20
   1c79c:	mov	r3, r8
   1c7a0:	mov	r0, r7
   1c7a4:	bl	1c524 <__flatcc_gen_sort@@Base+0xc24>
   1c7a8:	mov	r5, r0
   1c7ac:	b	1c660 <__flatcc_gen_sort@@Base+0xd60>
   1c7b0:	sub	r3, r8, r5
   1c7b4:	cmp	r3, #2
   1c7b8:	ble	1c748 <__flatcc_gen_sort@@Base+0xe48>
   1c7bc:	ldr	r1, [pc, #428]	; 1c970 <__flatcc_gen_sort@@Base+0x1070>
   1c7c0:	mov	r2, r6
   1c7c4:	add	r1, pc, r1
   1c7c8:	ldr	r0, [r7, #204]	; 0xcc
   1c7cc:	bl	1408c <fprintf@plt>
   1c7d0:	b	1c6f8 <__flatcc_gen_sort@@Base+0xdf8>
   1c7d4:	cmp	r8, #4
   1c7d8:	ble	1c618 <__flatcc_gen_sort@@Base+0xd18>
   1c7dc:	ldr	r1, [pc, #400]	; 1c974 <__flatcc_gen_sort@@Base+0x1074>
   1c7e0:	mov	r2, r6
   1c7e4:	add	r1, pc, r1
   1c7e8:	ldr	r0, [r7, #204]	; 0xcc
   1c7ec:	bl	1408c <fprintf@plt>
   1c7f0:	ldr	r1, [r4, #16]
   1c7f4:	b	1c634 <__flatcc_gen_sort@@Base+0xd34>
   1c7f8:	ldr	r2, [pc, #376]	; 1c978 <__flatcc_gen_sort@@Base+0x1078>
   1c7fc:	ldr	r3, [pc, #376]	; 1c97c <__flatcc_gen_sort@@Base+0x107c>
   1c800:	add	r2, pc, r2
   1c804:	add	r3, pc, r3
   1c808:	b	1c774 <__flatcc_gen_sort@@Base+0xe74>
   1c80c:	ldr	r2, [pc, #364]	; 1c980 <__flatcc_gen_sort@@Base+0x1080>
   1c810:	ldr	r3, [pc, #364]	; 1c984 <__flatcc_gen_sort@@Base+0x1084>
   1c814:	add	r2, pc, r2
   1c818:	add	r3, pc, r3
   1c81c:	b	1c774 <__flatcc_gen_sort@@Base+0xe74>
   1c820:	ldr	r2, [pc, #352]	; 1c988 <__flatcc_gen_sort@@Base+0x1088>
   1c824:	ldr	r3, [pc, #352]	; 1c98c <__flatcc_gen_sort@@Base+0x108c>
   1c828:	add	r2, pc, r2
   1c82c:	add	r3, pc, r3
   1c830:	b	1c774 <__flatcc_gen_sort@@Base+0xe74>
   1c834:	ldr	r2, [pc, #340]	; 1c990 <__flatcc_gen_sort@@Base+0x1090>
   1c838:	ldr	r3, [pc, #340]	; 1c994 <__flatcc_gen_sort@@Base+0x1094>
   1c83c:	add	r2, pc, r2
   1c840:	add	r3, pc, r3
   1c844:	b	1c774 <__flatcc_gen_sort@@Base+0xe74>
   1c848:	ldr	r2, [pc, #328]	; 1c998 <__flatcc_gen_sort@@Base+0x1098>
   1c84c:	ldr	r3, [pc, #328]	; 1c99c <__flatcc_gen_sort@@Base+0x109c>
   1c850:	add	r2, pc, r2
   1c854:	add	r3, pc, r3
   1c858:	b	1c774 <__flatcc_gen_sort@@Base+0xe74>
   1c85c:	ldr	r2, [pc, #316]	; 1c9a0 <__flatcc_gen_sort@@Base+0x10a0>
   1c860:	ldr	r3, [pc, #316]	; 1c9a4 <__flatcc_gen_sort@@Base+0x10a4>
   1c864:	add	r2, pc, r2
   1c868:	add	r3, pc, r3
   1c86c:	b	1c774 <__flatcc_gen_sort@@Base+0xe74>
   1c870:	ldr	r2, [pc, #304]	; 1c9a8 <__flatcc_gen_sort@@Base+0x10a8>
   1c874:	ldr	r3, [pc, #304]	; 1c9ac <__flatcc_gen_sort@@Base+0x10ac>
   1c878:	add	r2, pc, r2
   1c87c:	add	r3, pc, r3
   1c880:	b	1c774 <__flatcc_gen_sort@@Base+0xe74>
   1c884:	ldr	r2, [sp, #16]
   1c888:	ldr	r3, [sp, #20]
   1c88c:	b	1c774 <__flatcc_gen_sort@@Base+0xe74>
   1c890:	ldr	r2, [pc, #180]	; 1c94c <__flatcc_gen_sort@@Base+0x104c>
   1c894:	ldr	r3, [pc, #276]	; 1c9b0 <__flatcc_gen_sort@@Base+0x10b0>
   1c898:	ldr	r4, [pc, #276]	; 1c9b4 <__flatcc_gen_sort@@Base+0x10b4>
   1c89c:	ldr	r1, [sl, r2]
   1c8a0:	add	r3, pc, r3
   1c8a4:	str	r3, [sp]
   1c8a8:	ldr	r0, [r1]
   1c8ac:	ldr	r1, [pc, #260]	; 1c9b8 <__flatcc_gen_sort@@Base+0x10b8>
   1c8b0:	add	r4, pc, r4
   1c8b4:	mov	r2, r4
   1c8b8:	mov	r3, #141	; 0x8d
   1c8bc:	add	r1, pc, r1
   1c8c0:	bl	1408c <fprintf@plt>
   1c8c4:	ldr	r3, [pc, #240]	; 1c9bc <__flatcc_gen_sort@@Base+0x10bc>
   1c8c8:	ldr	r0, [pc, #240]	; 1c9c0 <__flatcc_gen_sort@@Base+0x10c0>
   1c8cc:	add	r3, pc, r3
   1c8d0:	mov	r1, r4
   1c8d4:	add	r3, r3, #72	; 0x48
   1c8d8:	mov	r2, #141	; 0x8d
   1c8dc:	add	r0, pc, r0
   1c8e0:	bl	14140 <__assert_fail@plt>
   1c8e4:	ldr	r1, [pc, #216]	; 1c9c4 <__flatcc_gen_sort@@Base+0x10c4>
   1c8e8:	mov	r2, r6
   1c8ec:	add	r1, pc, r1
   1c8f0:	ldr	r0, [r7, #204]	; 0xcc
   1c8f4:	bl	1408c <fprintf@plt>
   1c8f8:	ldr	r1, [r4, #16]
   1c8fc:	b	1c634 <__flatcc_gen_sort@@Base+0xd34>
   1c900:	ldr	r2, [pc, #192]	; 1c9c8 <__flatcc_gen_sort@@Base+0x10c8>
   1c904:	ldr	r3, [pc, #192]	; 1c9cc <__flatcc_gen_sort@@Base+0x10cc>
   1c908:	add	r2, pc, r2
   1c90c:	add	r3, pc, r3
   1c910:	b	1c774 <__flatcc_gen_sort@@Base+0xe74>
   1c914:	ldr	r2, [sp, #24]
   1c918:	ldr	r3, [sp, #28]
   1c91c:	b	1c774 <__flatcc_gen_sort@@Base+0xe74>
   1c920:	muleq	r4, ip, sl
   1c924:	strdeq	r4, [r2], -r8
   1c928:	andeq	r5, r2, r0, lsl #27
   1c92c:	andeq	lr, r2, r4, asr #11
   1c930:			; <UNDEFINED> instruction: 0x000274b8
   1c934:	andeq	r4, r2, r4, asr #15
   1c938:	andeq	ip, r2, r0, lsl #29
   1c93c:	andeq	lr, r2, r4, lsr #11
   1c940:	andeq	r4, r2, ip, lsl #15
   1c944:	andeq	ip, r2, r8, ror ip
   1c948:	ldrdeq	ip, [r2], -r8
   1c94c:	andeq	r0, r0, r0, lsr #1
   1c950:			; <UNDEFINED> instruction: 0x0002cdbc
   1c954:	andeq	ip, r2, r4, ror #20
   1c958:	andeq	r4, r2, r8, lsl r8
   1c95c:	andeq	r0, r0, r2, asr r3
   1c960:	ldrdeq	ip, [r2], -r4
   1c964:	strdeq	ip, [r2], -r8
   1c968:	andeq	ip, r2, ip, lsr #23
   1c96c:	andeq	ip, r2, r8, asr #22
   1c970:	ldrdeq	ip, [r2], -r4
   1c974:			; <UNDEFINED> instruction: 0x0002cab4
   1c978:	andeq	lr, r2, r0, asr #6
   1c97c:	andeq	r4, r2, r8, asr r5
   1c980:	andeq	lr, r2, ip, lsr #6
   1c984:	andeq	r4, r2, r4, ror r5
   1c988:	andeq	lr, r2, r8, lsl r3
   1c98c:	andeq	r4, r2, r8, ror #10
   1c990:	andeq	lr, r2, r4, lsl #6
   1c994:	andeq	r4, r2, ip, lsr #10
   1c998:	strdeq	lr, [r2], -r0
   1c99c:	andeq	r4, r2, r0, lsr #10
   1c9a0:	ldrdeq	lr, [r2], -ip
   1c9a4:	andeq	r4, r2, r4, lsl r5
   1c9a8:	andeq	lr, r2, r8, asr #5
   1c9ac:	andeq	r4, r2, r8, lsl #10
   1c9b0:	andeq	r4, r2, r8, lsr #12
   1c9b4:	andeq	r4, r2, ip, lsr #11
   1c9b8:	andeq	r4, r2, r0, lsl #12
   1c9bc:			; <UNDEFINED> instruction: 0x0002c6bc
   1c9c0:	andeq	ip, r2, r0, ror #19
   1c9c4:	andeq	ip, r2, ip, lsr #19
   1c9c8:	andeq	lr, r2, r8, lsr r2
   1c9cc:	andeq	r4, r2, r8, lsr r4
   1c9d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c9d4:	sub	sp, sp, #644	; 0x284
   1c9d8:	add	r8, sp, #200	; 0xc8
   1c9dc:	mov	r4, r1
   1c9e0:	mov	r2, #220	; 0xdc
   1c9e4:	mov	r1, #0
   1c9e8:	mov	r5, r0
   1c9ec:	add	r9, sp, #420	; 0x1a4
   1c9f0:	mov	r0, r8
   1c9f4:	bl	140a4 <memset@plt>
   1c9f8:	mov	r2, #220	; 0xdc
   1c9fc:	mov	r1, #0
   1ca00:	mov	r0, r9
   1ca04:	bl	140a4 <memset@plt>
   1ca08:	mov	r1, r4
   1ca0c:	ldr	r0, [r4, #12]
   1ca10:	mov	r2, r8
   1ca14:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   1ca18:	ldr	r4, [r4, #20]
   1ca1c:	ldr	fp, [pc, #3920]	; 1d974 <__flatcc_gen_sort@@Base+0x2074>
   1ca20:	cmp	r4, #0
   1ca24:	add	fp, pc, fp
   1ca28:	beq	1cae4 <__flatcc_gen_sort@@Base+0x11e4>
   1ca2c:	ldr	r3, [pc, #3908]	; 1d978 <__flatcc_gen_sort@@Base+0x2078>
   1ca30:	ldr	sl, [pc, #3908]	; 1d97c <__flatcc_gen_sort@@Base+0x207c>
   1ca34:	add	r3, pc, r3
   1ca38:	str	r3, [sp, #60]	; 0x3c
   1ca3c:	ldr	r3, [pc, #3900]	; 1d980 <__flatcc_gen_sort@@Base+0x2080>
   1ca40:	add	sl, pc, sl
   1ca44:	add	r3, pc, r3
   1ca48:	str	r3, [sp, #64]	; 0x40
   1ca4c:	ldr	r3, [pc, #3888]	; 1d984 <__flatcc_gen_sort@@Base+0x2084>
   1ca50:	add	r3, pc, r3
   1ca54:	str	r3, [sp, #72]	; 0x48
   1ca58:	ldr	r3, [pc, #3880]	; 1d988 <__flatcc_gen_sort@@Base+0x2088>
   1ca5c:	add	r3, pc, r3
   1ca60:	str	r3, [sp, #68]	; 0x44
   1ca64:	ldr	r3, [pc, #3872]	; 1d98c <__flatcc_gen_sort@@Base+0x208c>
   1ca68:	add	r3, pc, r3
   1ca6c:	str	r3, [sp, #76]	; 0x4c
   1ca70:	ldrh	r2, [r4, #72]	; 0x48
   1ca74:	ldr	r3, [r4, #4]
   1ca78:	tst	r2, #4
   1ca7c:	ldm	r3, {r6, r7}
   1ca80:	bne	1cabc <__flatcc_gen_sort@@Base+0x11bc>
   1ca84:	ldrh	r3, [r4, #24]
   1ca88:	sub	r3, r3, #7
   1ca8c:	cmp	r3, #8
   1ca90:	addls	pc, pc, r3, lsl #2
   1ca94:	b	1cc5c <__flatcc_gen_sort@@Base+0x135c>
   1ca98:	b	1cc14 <__flatcc_gen_sort@@Base+0x1314>
   1ca9c:	b	1cbcc <__flatcc_gen_sort@@Base+0x12cc>
   1caa0:	b	1cb9c <__flatcc_gen_sort@@Base+0x129c>
   1caa4:	b	1cb6c <__flatcc_gen_sort@@Base+0x126c>
   1caa8:	b	1cc5c <__flatcc_gen_sort@@Base+0x135c>
   1caac:	b	1cc5c <__flatcc_gen_sort@@Base+0x135c>
   1cab0:	b	1cc5c <__flatcc_gen_sort@@Base+0x135c>
   1cab4:	b	1cb34 <__flatcc_gen_sort@@Base+0x1234>
   1cab8:	b	1cafc <__flatcc_gen_sort@@Base+0x11fc>
   1cabc:	ldr	r1, [pc, #3788]	; 1d990 <__flatcc_gen_sort@@Base+0x2090>
   1cac0:	ldr	r0, [r5, #204]	; 0xcc
   1cac4:	mov	r3, r7
   1cac8:	str	r6, [sp]
   1cacc:	mov	r2, r8
   1cad0:	add	r1, pc, r1
   1cad4:	bl	1408c <fprintf@plt>
   1cad8:	ldr	r4, [r4]
   1cadc:	cmp	r4, #0
   1cae0:	bne	1ca70 <__flatcc_gen_sort@@Base+0x1170>
   1cae4:	ldr	r1, [r5, #204]	; 0xcc
   1cae8:	mov	r0, #10
   1caec:	bl	140ec <fputc@plt>
   1caf0:	mov	r0, #0
   1caf4:	add	sp, sp, #644	; 0x284
   1caf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cafc:	ldr	r1, [r4, #16]
   1cb00:	mov	r2, r9
   1cb04:	ldr	r0, [r1, #12]
   1cb08:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   1cb0c:	ldr	r2, [r4, #16]
   1cb10:	ldrh	r3, [r2, #8]
   1cb14:	cmp	r3, #4
   1cb18:	addls	pc, pc, r3, lsl #2
   1cb1c:	b	1cee8 <__flatcc_gen_sort@@Base+0x15e8>
   1cb20:	b	1ce58 <__flatcc_gen_sort@@Base+0x1558>
   1cb24:	b	1ce18 <__flatcc_gen_sort@@Base+0x1518>
   1cb28:	b	1cee8 <__flatcc_gen_sort@@Base+0x15e8>
   1cb2c:	b	1cde4 <__flatcc_gen_sort@@Base+0x14e4>
   1cb30:	b	1cdac <__flatcc_gen_sort@@Base+0x14ac>
   1cb34:	ldr	r1, [r4, #16]
   1cb38:	mov	r2, r9
   1cb3c:	ldr	r0, [r1, #12]
   1cb40:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   1cb44:	ldr	r2, [r4, #16]
   1cb48:	ldrh	r3, [r2, #8]
   1cb4c:	cmp	r3, #4
   1cb50:	addls	pc, pc, r3, lsl #2
   1cb54:	b	1ce94 <__flatcc_gen_sort@@Base+0x1594>
   1cb58:	b	1cd78 <__flatcc_gen_sort@@Base+0x1478>
   1cb5c:	b	1cd34 <__flatcc_gen_sort@@Base+0x1434>
   1cb60:	b	1ce94 <__flatcc_gen_sort@@Base+0x1594>
   1cb64:	b	1cd0c <__flatcc_gen_sort@@Base+0x140c>
   1cb68:	b	1ccb0 <__flatcc_gen_sort@@Base+0x13b0>
   1cb6c:	str	r6, [sp, #20]
   1cb70:	str	r7, [sp, #16]
   1cb74:	str	r8, [sp, #12]
   1cb78:	str	r5, [sp, #8]
   1cb7c:	ldrd	r6, [r4, #96]	; 0x60
   1cb80:	ldr	r1, [pc, #3596]	; 1d994 <__flatcc_gen_sort@@Base+0x2094>
   1cb84:	ldr	r0, [r5, #204]	; 0xcc
   1cb88:	mov	r2, r5
   1cb8c:	strd	r6, [sp]
   1cb90:	add	r1, pc, r1
   1cb94:	bl	1408c <fprintf@plt>
   1cb98:	b	1cad8 <__flatcc_gen_sort@@Base+0x11d8>
   1cb9c:	str	r6, [sp, #20]
   1cba0:	str	r7, [sp, #16]
   1cba4:	str	r8, [sp, #12]
   1cba8:	str	r5, [sp, #8]
   1cbac:	ldrd	r6, [r4, #96]	; 0x60
   1cbb0:	ldr	r1, [pc, #3552]	; 1d998 <__flatcc_gen_sort@@Base+0x2098>
   1cbb4:	ldr	r0, [r5, #204]	; 0xcc
   1cbb8:	mov	r2, r5
   1cbbc:	strd	r6, [sp]
   1cbc0:	add	r1, pc, r1
   1cbc4:	bl	1408c <fprintf@plt>
   1cbc8:	b	1cad8 <__flatcc_gen_sort@@Base+0x11d8>
   1cbcc:	ldr	r2, [r4, #16]
   1cbd0:	cmp	r2, #5
   1cbd4:	beq	1cffc <__flatcc_gen_sort@@Base+0x16fc>
   1cbd8:	sub	r3, r2, #1
   1cbdc:	cmp	r3, #10
   1cbe0:	addls	pc, pc, r3, lsl #2
   1cbe4:	b	1d600 <__flatcc_gen_sort@@Base+0x1d00>
   1cbe8:	b	1d4c8 <__flatcc_gen_sort@@Base+0x1bc8>
   1cbec:	b	1d3f8 <__flatcc_gen_sort@@Base+0x1af8>
   1cbf0:	b	1d460 <__flatcc_gen_sort@@Base+0x1b60>
   1cbf4:	b	1d41c <__flatcc_gen_sort@@Base+0x1b1c>
   1cbf8:	b	1d600 <__flatcc_gen_sort@@Base+0x1d00>
   1cbfc:	b	1d388 <__flatcc_gen_sort@@Base+0x1a88>
   1cc00:	b	1d288 <__flatcc_gen_sort@@Base+0x1988>
   1cc04:	b	1d3d4 <__flatcc_gen_sort@@Base+0x1ad4>
   1cc08:	b	1d3b0 <__flatcc_gen_sort@@Base+0x1ab0>
   1cc0c:	b	1d488 <__flatcc_gen_sort@@Base+0x1b88>
   1cc10:	b	1d264 <__flatcc_gen_sort@@Base+0x1964>
   1cc14:	ldr	r3, [r4, #16]
   1cc18:	cmp	r3, #5
   1cc1c:	beq	1cf3c <__flatcc_gen_sort@@Base+0x163c>
   1cc20:	sub	r3, r3, #1
   1cc24:	cmp	r3, #10
   1cc28:	addls	pc, pc, r3, lsl #2
   1cc2c:	b	1d654 <__flatcc_gen_sort@@Base+0x1d54>
   1cc30:	b	1d2e8 <__flatcc_gen_sort@@Base+0x19e8>
   1cc34:	b	1d4ac <__flatcc_gen_sort@@Base+0x1bac>
   1cc38:	b	1d2b0 <__flatcc_gen_sort@@Base+0x19b0>
   1cc3c:	b	1d2cc <__flatcc_gen_sort@@Base+0x19cc>
   1cc40:	b	1d654 <__flatcc_gen_sort@@Base+0x1d54>
   1cc44:	b	1d31c <__flatcc_gen_sort@@Base+0x1a1c>
   1cc48:	b	1d444 <__flatcc_gen_sort@@Base+0x1b44>
   1cc4c:	b	1d338 <__flatcc_gen_sort@@Base+0x1a38>
   1cc50:	b	1d354 <__flatcc_gen_sort@@Base+0x1a54>
   1cc54:	b	1d370 <__flatcc_gen_sort@@Base+0x1a70>
   1cc58:	b	1d304 <__flatcc_gen_sort@@Base+0x1a04>
   1cc5c:	ldr	r2, [pc, #3384]	; 1d99c <__flatcc_gen_sort@@Base+0x209c>
   1cc60:	ldr	r3, [pc, #3384]	; 1d9a0 <__flatcc_gen_sort@@Base+0x20a0>
   1cc64:	ldr	r4, [pc, #3384]	; 1d9a4 <__flatcc_gen_sort@@Base+0x20a4>
   1cc68:	ldr	r1, [fp, r2]
   1cc6c:	add	r3, pc, r3
   1cc70:	str	r3, [sp]
   1cc74:	ldr	r0, [r1]
   1cc78:	ldr	r1, [pc, #3368]	; 1d9a8 <__flatcc_gen_sort@@Base+0x20a8>
   1cc7c:	add	r4, pc, r4
   1cc80:	mov	r2, r4
   1cc84:	ldr	r3, [pc, #3360]	; 1d9ac <__flatcc_gen_sort@@Base+0x20ac>
   1cc88:	add	r1, pc, r1
   1cc8c:	bl	1408c <fprintf@plt>
   1cc90:	ldr	r3, [pc, #3352]	; 1d9b0 <__flatcc_gen_sort@@Base+0x20b0>
   1cc94:	ldr	r0, [pc, #3352]	; 1d9b4 <__flatcc_gen_sort@@Base+0x20b4>
   1cc98:	add	r3, pc, r3
   1cc9c:	mov	r1, r4
   1cca0:	add	r3, r3, #144	; 0x90
   1cca4:	ldr	r2, [pc, #3328]	; 1d9ac <__flatcc_gen_sort@@Base+0x20ac>
   1cca8:	add	r0, pc, r0
   1ccac:	bl	14140 <__assert_fail@plt>
   1ccb0:	str	r9, [sp, #24]
   1ccb4:	str	r6, [sp, #20]
   1ccb8:	str	r7, [sp, #16]
   1ccbc:	str	r8, [sp, #12]
   1ccc0:	str	r5, [sp, #8]
   1ccc4:	ldrd	r0, [r4, #96]	; 0x60
   1ccc8:	ldr	r3, [r5, #204]	; 0xcc
   1cccc:	mov	r2, r5
   1ccd0:	strd	r0, [sp]
   1ccd4:	ldr	r1, [pc, #3292]	; 1d9b8 <__flatcc_gen_sort@@Base+0x20b8>
   1ccd8:	mov	r0, r3
   1ccdc:	add	r1, pc, r1
   1cce0:	bl	1408c <fprintf@plt>
   1cce4:	mov	r3, #0
   1cce8:	str	r3, [sp, #4]
   1ccec:	ldr	r1, [r4, #16]
   1ccf0:	mov	r3, r6
   1ccf4:	str	r1, [sp]
   1ccf8:	mov	r2, r7
   1ccfc:	mov	r1, r8
   1cd00:	mov	r0, r5
   1cd04:	bl	1ba50 <__flatcc_gen_sort@@Base+0x150>
   1cd08:	b	1cad8 <__flatcc_gen_sort@@Base+0x11d8>
   1cd0c:	ldrh	r3, [r4, #56]	; 0x38
   1cd10:	ldr	r2, [r2, #40]	; 0x28
   1cd14:	sub	r3, r3, #3
   1cd18:	cmp	r3, #3
   1cd1c:	addls	pc, pc, r3, lsl #2
   1cd20:	b	1e0d4 <__flatcc_gen_sort@@Base+0x27d4>
   1cd24:	b	1d58c <__flatcc_gen_sort@@Base+0x1c8c>
   1cd28:	b	1d558 <__flatcc_gen_sort@@Base+0x1c58>
   1cd2c:	b	1d524 <__flatcc_gen_sort@@Base+0x1c24>
   1cd30:	b	1d4f0 <__flatcc_gen_sort@@Base+0x1bf0>
   1cd34:	ldrh	r3, [r4, #74]	; 0x4a
   1cd38:	ldr	r0, [r5, #204]	; 0xcc
   1cd3c:	ldr	r1, [pc, #3192]	; 1d9bc <__flatcc_gen_sort@@Base+0x20bc>
   1cd40:	str	r3, [sp, #40]	; 0x28
   1cd44:	ldrd	r2, [r4, #88]	; 0x58
   1cd48:	str	r9, [sp, #24]
   1cd4c:	str	r6, [sp, #20]
   1cd50:	strd	r2, [sp, #32]
   1cd54:	str	r7, [sp, #16]
   1cd58:	str	r8, [sp, #12]
   1cd5c:	str	r5, [sp, #8]
   1cd60:	ldrd	r6, [r4, #96]	; 0x60
   1cd64:	mov	r2, r5
   1cd68:	add	r1, pc, r1
   1cd6c:	strd	r6, [sp]
   1cd70:	bl	1408c <fprintf@plt>
   1cd74:	b	1cad8 <__flatcc_gen_sort@@Base+0x11d8>
   1cd78:	str	r9, [sp, #24]
   1cd7c:	str	r6, [sp, #20]
   1cd80:	str	r7, [sp, #16]
   1cd84:	str	r8, [sp, #12]
   1cd88:	str	r5, [sp, #8]
   1cd8c:	ldrd	r6, [r4, #96]	; 0x60
   1cd90:	ldr	r1, [pc, #3112]	; 1d9c0 <__flatcc_gen_sort@@Base+0x20c0>
   1cd94:	ldr	r0, [r5, #204]	; 0xcc
   1cd98:	mov	r2, r5
   1cd9c:	strd	r6, [sp]
   1cda0:	add	r1, pc, r1
   1cda4:	bl	1408c <fprintf@plt>
   1cda8:	b	1cad8 <__flatcc_gen_sort@@Base+0x11d8>
   1cdac:	str	r9, [sp, #24]
   1cdb0:	str	r6, [sp, #20]
   1cdb4:	str	r7, [sp, #16]
   1cdb8:	str	r8, [sp, #12]
   1cdbc:	str	r5, [sp, #8]
   1cdc0:	ldrd	r0, [r4, #96]	; 0x60
   1cdc4:	ldr	r3, [r5, #204]	; 0xcc
   1cdc8:	mov	r2, r5
   1cdcc:	strd	r0, [sp]
   1cdd0:	mov	r0, r3
   1cdd4:	ldr	r1, [sp, #60]	; 0x3c
   1cdd8:	bl	1408c <fprintf@plt>
   1cddc:	mov	r3, #1
   1cde0:	b	1cce8 <__flatcc_gen_sort@@Base+0x13e8>
   1cde4:	str	r9, [sp, #28]
   1cde8:	str	r9, [sp, #24]
   1cdec:	str	r6, [sp, #20]
   1cdf0:	str	r7, [sp, #16]
   1cdf4:	str	r8, [sp, #12]
   1cdf8:	str	r5, [sp, #8]
   1cdfc:	ldrd	r6, [r4, #96]	; 0x60
   1ce00:	ldr	r0, [r5, #204]	; 0xcc
   1ce04:	mov	r2, r5
   1ce08:	strd	r6, [sp]
   1ce0c:	mov	r1, sl
   1ce10:	bl	1408c <fprintf@plt>
   1ce14:	b	1cad8 <__flatcc_gen_sort@@Base+0x11d8>
   1ce18:	ldrh	r3, [r2, #10]
   1ce1c:	tst	r3, #8
   1ce20:	bne	1e0a4 <__flatcc_gen_sort@@Base+0x27a4>
   1ce24:	str	r9, [sp, #28]
   1ce28:	str	r9, [sp, #24]
   1ce2c:	str	r6, [sp, #20]
   1ce30:	str	r7, [sp, #16]
   1ce34:	str	r8, [sp, #12]
   1ce38:	str	r5, [sp, #8]
   1ce3c:	ldrd	r6, [r4, #96]	; 0x60
   1ce40:	ldr	r0, [r5, #204]	; 0xcc
   1ce44:	mov	r2, r5
   1ce48:	strd	r6, [sp]
   1ce4c:	ldr	r1, [sp, #68]	; 0x44
   1ce50:	bl	1408c <fprintf@plt>
   1ce54:	b	1cad8 <__flatcc_gen_sort@@Base+0x11d8>
   1ce58:	ldrh	r3, [r2, #10]
   1ce5c:	tst	r3, #8
   1ce60:	bne	1e0bc <__flatcc_gen_sort@@Base+0x27bc>
   1ce64:	str	r9, [sp, #24]
   1ce68:	str	r6, [sp, #20]
   1ce6c:	str	r7, [sp, #16]
   1ce70:	str	r8, [sp, #12]
   1ce74:	str	r5, [sp, #8]
   1ce78:	ldrd	r6, [r4, #96]	; 0x60
   1ce7c:	ldr	r0, [r5, #204]	; 0xcc
   1ce80:	mov	r2, r5
   1ce84:	strd	r6, [sp]
   1ce88:	ldr	r1, [sp, #64]	; 0x40
   1ce8c:	bl	1408c <fprintf@plt>
   1ce90:	b	1cad8 <__flatcc_gen_sort@@Base+0x11d8>
   1ce94:	ldr	r2, [pc, #2816]	; 1d99c <__flatcc_gen_sort@@Base+0x209c>
   1ce98:	ldr	r3, [pc, #2852]	; 1d9c4 <__flatcc_gen_sort@@Base+0x20c4>
   1ce9c:	ldr	r4, [pc, #2852]	; 1d9c8 <__flatcc_gen_sort@@Base+0x20c8>
   1cea0:	ldr	r1, [fp, r2]
   1cea4:	add	r3, pc, r3
   1cea8:	str	r3, [sp]
   1ceac:	ldr	r0, [r1]
   1ceb0:	ldr	r1, [pc, #2836]	; 1d9cc <__flatcc_gen_sort@@Base+0x20cc>
   1ceb4:	add	r4, pc, r4
   1ceb8:	mov	r2, r4
   1cebc:	mov	r3, #1472	; 0x5c0
   1cec0:	add	r1, pc, r1
   1cec4:	bl	1408c <fprintf@plt>
   1cec8:	ldr	r3, [pc, #2816]	; 1d9d0 <__flatcc_gen_sort@@Base+0x20d0>
   1cecc:	ldr	r0, [pc, #2816]	; 1d9d4 <__flatcc_gen_sort@@Base+0x20d4>
   1ced0:	add	r3, pc, r3
   1ced4:	mov	r1, r4
   1ced8:	add	r3, r3, #144	; 0x90
   1cedc:	mov	r2, #1472	; 0x5c0
   1cee0:	add	r0, pc, r0
   1cee4:	bl	14140 <__assert_fail@plt>
   1cee8:	ldr	r2, [pc, #2732]	; 1d99c <__flatcc_gen_sort@@Base+0x209c>
   1ceec:	ldr	r3, [pc, #2788]	; 1d9d8 <__flatcc_gen_sort@@Base+0x20d8>
   1cef0:	ldr	r4, [pc, #2788]	; 1d9dc <__flatcc_gen_sort@@Base+0x20dc>
   1cef4:	ldr	r1, [fp, r2]
   1cef8:	add	r3, pc, r3
   1cefc:	str	r3, [sp]
   1cf00:	ldr	r0, [r1]
   1cf04:	ldr	r1, [pc, #2772]	; 1d9e0 <__flatcc_gen_sort@@Base+0x20e0>
   1cf08:	add	r4, pc, r4
   1cf0c:	mov	r2, r4
   1cf10:	ldr	r3, [pc, #2764]	; 1d9e4 <__flatcc_gen_sort@@Base+0x20e4>
   1cf14:	add	r1, pc, r1
   1cf18:	bl	1408c <fprintf@plt>
   1cf1c:	ldr	r3, [pc, #2756]	; 1d9e8 <__flatcc_gen_sort@@Base+0x20e8>
   1cf20:	ldr	r0, [pc, #2756]	; 1d9ec <__flatcc_gen_sort@@Base+0x20ec>
   1cf24:	add	r3, pc, r3
   1cf28:	mov	r1, r4
   1cf2c:	add	r3, r3, #144	; 0x90
   1cf30:	ldr	r2, [pc, #2732]	; 1d9e4 <__flatcc_gen_sort@@Base+0x20e4>
   1cf34:	add	r0, pc, r0
   1cf38:	bl	14140 <__assert_fail@plt>
   1cf3c:	ldr	r3, [pc, #2732]	; 1d9f0 <__flatcc_gen_sort@@Base+0x20f0>
   1cf40:	ldr	r2, [pc, #2732]	; 1d9f4 <__flatcc_gen_sort@@Base+0x20f4>
   1cf44:	mov	r1, r5
   1cf48:	add	r3, pc, r3
   1cf4c:	add	r2, pc, r2
   1cf50:	str	r2, [sp, #28]
   1cf54:	str	r3, [sp, #36]	; 0x24
   1cf58:	str	r1, [sp, #32]
   1cf5c:	str	r5, [sp, #24]
   1cf60:	str	r6, [sp, #20]
   1cf64:	str	r7, [sp, #16]
   1cf68:	str	r8, [sp, #12]
   1cf6c:	str	r5, [sp, #8]
   1cf70:	ldrd	r0, [r4, #96]	; 0x60
   1cf74:	ldr	r3, [r5, #204]	; 0xcc
   1cf78:	mov	r2, r5
   1cf7c:	strd	r0, [sp]
   1cf80:	ldr	r1, [pc, #2672]	; 1d9f8 <__flatcc_gen_sort@@Base+0x20f8>
   1cf84:	mov	r0, r3
   1cf88:	add	r1, pc, r1
   1cf8c:	bl	1408c <fprintf@plt>
   1cf90:	ldr	r1, [r4, #104]	; 0x68
   1cf94:	cmp	r1, #0
   1cf98:	beq	1cad8 <__flatcc_gen_sort@@Base+0x11d8>
   1cf9c:	ldrh	r3, [r1, #8]
   1cfa0:	cmp	r3, #0
   1cfa4:	beq	1d168 <__flatcc_gen_sort@@Base+0x1868>
   1cfa8:	cmp	r3, #1
   1cfac:	bne	1d114 <__flatcc_gen_sort@@Base+0x1814>
   1cfb0:	mov	r2, r9
   1cfb4:	ldr	r0, [r1, #12]
   1cfb8:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   1cfbc:	str	r9, [sp, #24]
   1cfc0:	str	r9, [sp, #20]
   1cfc4:	ldr	r2, [r4, #104]	; 0x68
   1cfc8:	ldr	r1, [pc, #2604]	; 1d9fc <__flatcc_gen_sort@@Base+0x20fc>
   1cfcc:	ldr	r0, [r5, #204]	; 0xcc
   1cfd0:	ldrh	r2, [r2, #104]	; 0x68
   1cfd4:	mov	r3, r5
   1cfd8:	str	r9, [sp, #12]
   1cfdc:	str	r2, [sp, #16]
   1cfe0:	str	r6, [sp, #8]
   1cfe4:	str	r7, [sp, #4]
   1cfe8:	str	r8, [sp]
   1cfec:	mov	r2, r5
   1cff0:	add	r1, pc, r1
   1cff4:	bl	1408c <fprintf@plt>
   1cff8:	b	1cad8 <__flatcc_gen_sort@@Base+0x11d8>
   1cffc:	ldr	r3, [pc, #2556]	; 1da00 <__flatcc_gen_sort@@Base+0x2100>
   1d000:	str	r5, [sp, #80]	; 0x50
   1d004:	add	r3, pc, r3
   1d008:	str	r3, [sp, #84]	; 0x54
   1d00c:	ldr	r3, [pc, #2544]	; 1da04 <__flatcc_gen_sort@@Base+0x2104>
   1d010:	add	r3, pc, r3
   1d014:	str	r3, [sp, #88]	; 0x58
   1d018:	ldrh	r3, [r4, #56]	; 0x38
   1d01c:	sub	r3, r3, #3
   1d020:	cmp	r3, #3
   1d024:	addls	pc, pc, r3, lsl #2
   1d028:	b	1d1a8 <__flatcc_gen_sort@@Base+0x18a8>
   1d02c:	b	1d094 <__flatcc_gen_sort@@Base+0x1794>
   1d030:	b	1d230 <__flatcc_gen_sort@@Base+0x1930>
   1d034:	b	1d1fc <__flatcc_gen_sort@@Base+0x18fc>
   1d038:	b	1d03c <__flatcc_gen_sort@@Base+0x173c>
   1d03c:	sub	r3, r2, #1
   1d040:	cmp	r3, #8
   1d044:	addls	pc, pc, r3, lsl #2
   1d048:	b	1deb0 <__flatcc_gen_sort@@Base+0x25b0>
   1d04c:	b	1dea4 <__flatcc_gen_sort@@Base+0x25a4>
   1d050:	b	1de98 <__flatcc_gen_sort@@Base+0x2598>
   1d054:	b	1de8c <__flatcc_gen_sort@@Base+0x258c>
   1d058:	b	1de80 <__flatcc_gen_sort@@Base+0x2580>
   1d05c:	b	1de74 <__flatcc_gen_sort@@Base+0x2574>
   1d060:	b	1de68 <__flatcc_gen_sort@@Base+0x2568>
   1d064:	b	1de5c <__flatcc_gen_sort@@Base+0x255c>
   1d068:	b	1d754 <__flatcc_gen_sort@@Base+0x1e54>
   1d06c:	b	1d7c8 <__flatcc_gen_sort@@Base+0x1ec8>
   1d070:	ldr	r3, [pc, #2448]	; 1da08 <__flatcc_gen_sort@@Base+0x2108>
   1d074:	add	r3, pc, r3
   1d078:	str	r3, [sp, #84]	; 0x54
   1d07c:	ldr	r3, [pc, #2440]	; 1da0c <__flatcc_gen_sort@@Base+0x210c>
   1d080:	add	r3, pc, r3
   1d084:	str	r3, [sp, #88]	; 0x58
   1d088:	ldr	r3, [pc, #2432]	; 1da10 <__flatcc_gen_sort@@Base+0x2110>
   1d08c:	add	r3, pc, r3
   1d090:	str	r3, [sp, #80]	; 0x50
   1d094:	ldr	r1, [pc, #2424]	; 1da14 <__flatcc_gen_sort@@Base+0x2114>
   1d098:	add	r3, sp, #100	; 0x64
   1d09c:	str	r3, [sp, #92]	; 0x5c
   1d0a0:	mov	r0, r3
   1d0a4:	add	r1, pc, r1
   1d0a8:	ldrd	r2, [r4, #48]	; 0x30
   1d0ac:	bl	140f8 <sprintf@plt>
   1d0b0:	ldr	r3, [sp, #92]	; 0x5c
   1d0b4:	ldr	r1, [sp, #84]	; 0x54
   1d0b8:	str	r3, [sp, #52]	; 0x34
   1d0bc:	ldrh	r3, [r4, #74]	; 0x4a
   1d0c0:	ldr	r0, [r5, #204]	; 0xcc
   1d0c4:	str	r3, [sp, #48]	; 0x30
   1d0c8:	ldrd	r2, [r4, #88]	; 0x58
   1d0cc:	str	r1, [sp, #36]	; 0x24
   1d0d0:	ldr	r1, [sp, #80]	; 0x50
   1d0d4:	strd	r2, [sp, #40]	; 0x28
   1d0d8:	ldr	r3, [sp, #88]	; 0x58
   1d0dc:	str	r1, [sp, #32]
   1d0e0:	str	r3, [sp, #28]
   1d0e4:	str	r5, [sp, #24]
   1d0e8:	str	r6, [sp, #20]
   1d0ec:	str	r7, [sp, #16]
   1d0f0:	str	r8, [sp, #12]
   1d0f4:	str	r5, [sp, #8]
   1d0f8:	ldrd	r6, [r4, #96]	; 0x60
   1d0fc:	ldr	r1, [pc, #2324]	; 1da18 <__flatcc_gen_sort@@Base+0x2118>
   1d100:	mov	r2, r5
   1d104:	strd	r6, [sp]
   1d108:	add	r1, pc, r1
   1d10c:	bl	1408c <fprintf@plt>
   1d110:	b	1cad8 <__flatcc_gen_sort@@Base+0x11d8>
   1d114:	ldr	r2, [pc, #2176]	; 1d99c <__flatcc_gen_sort@@Base+0x209c>
   1d118:	ldr	r3, [pc, #2300]	; 1da1c <__flatcc_gen_sort@@Base+0x211c>
   1d11c:	ldr	r4, [pc, #2300]	; 1da20 <__flatcc_gen_sort@@Base+0x2120>
   1d120:	ldr	r1, [fp, r2]
   1d124:	add	r3, pc, r3
   1d128:	str	r3, [sp]
   1d12c:	ldr	r0, [r1]
   1d130:	ldr	r1, [pc, #2284]	; 1da24 <__flatcc_gen_sort@@Base+0x2124>
   1d134:	add	r4, pc, r4
   1d138:	mov	r2, r4
   1d13c:	ldr	r3, [pc, #2276]	; 1da28 <__flatcc_gen_sort@@Base+0x2128>
   1d140:	add	r1, pc, r1
   1d144:	bl	1408c <fprintf@plt>
   1d148:	ldr	r3, [pc, #2268]	; 1da2c <__flatcc_gen_sort@@Base+0x212c>
   1d14c:	ldr	r0, [pc, #2268]	; 1da30 <__flatcc_gen_sort@@Base+0x2130>
   1d150:	add	r3, pc, r3
   1d154:	mov	r1, r4
   1d158:	add	r3, r3, #144	; 0x90
   1d15c:	ldr	r2, [pc, #2244]	; 1da28 <__flatcc_gen_sort@@Base+0x2128>
   1d160:	add	r0, pc, r0
   1d164:	bl	14140 <__assert_fail@plt>
   1d168:	mov	r2, r9
   1d16c:	ldr	r0, [r1, #12]
   1d170:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   1d174:	ldr	r1, [pc, #2232]	; 1da34 <__flatcc_gen_sort@@Base+0x2134>
   1d178:	ldr	r0, [r5, #204]	; 0xcc
   1d17c:	mov	r3, r5
   1d180:	str	r9, [sp, #20]
   1d184:	str	r9, [sp, #16]
   1d188:	str	r9, [sp, #12]
   1d18c:	str	r6, [sp, #8]
   1d190:	str	r7, [sp, #4]
   1d194:	str	r8, [sp]
   1d198:	mov	r2, r5
   1d19c:	add	r1, pc, r1
   1d1a0:	bl	1408c <fprintf@plt>
   1d1a4:	b	1cad8 <__flatcc_gen_sort@@Base+0x11d8>
   1d1a8:	ldr	r2, [pc, #2028]	; 1d99c <__flatcc_gen_sort@@Base+0x209c>
   1d1ac:	ldr	r3, [pc, #2180]	; 1da38 <__flatcc_gen_sort@@Base+0x2138>
   1d1b0:	ldr	r4, [pc, #2180]	; 1da3c <__flatcc_gen_sort@@Base+0x213c>
   1d1b4:	ldr	r1, [fp, r2]
   1d1b8:	add	r3, pc, r3
   1d1bc:	str	r3, [sp]
   1d1c0:	ldr	r0, [r1]
   1d1c4:	ldr	r1, [pc, #2164]	; 1da40 <__flatcc_gen_sort@@Base+0x2140>
   1d1c8:	add	r4, pc, r4
   1d1cc:	mov	r2, r4
   1d1d0:	mov	r3, #260	; 0x104
   1d1d4:	add	r1, pc, r1
   1d1d8:	bl	1408c <fprintf@plt>
   1d1dc:	ldr	r3, [pc, #2144]	; 1da44 <__flatcc_gen_sort@@Base+0x2144>
   1d1e0:	ldr	r0, [pc, #2144]	; 1da48 <__flatcc_gen_sort@@Base+0x2148>
   1d1e4:	add	r3, pc, r3
   1d1e8:	mov	r1, r4
   1d1ec:	add	r3, r3, #128	; 0x80
   1d1f0:	mov	r2, #260	; 0x104
   1d1f4:	add	r0, pc, r0
   1d1f8:	bl	14140 <__assert_fail@plt>
   1d1fc:	sub	r3, r2, #1
   1d200:	cmp	r3, #8
   1d204:	addls	pc, pc, r3, lsl #2
   1d208:	b	1e17c <__flatcc_gen_sort@@Base+0x287c>
   1d20c:	b	1d88c <__flatcc_gen_sort@@Base+0x1f8c>
   1d210:	b	1d7d4 <__flatcc_gen_sort@@Base+0x1ed4>
   1d214:	b	1d8f8 <__flatcc_gen_sort@@Base+0x1ff8>
   1d218:	b	1d8ec <__flatcc_gen_sort@@Base+0x1fec>
   1d21c:	b	1d8e0 <__flatcc_gen_sort@@Base+0x1fe0>
   1d220:	b	1d8d4 <__flatcc_gen_sort@@Base+0x1fd4>
   1d224:	b	1d8c8 <__flatcc_gen_sort@@Base+0x1fc8>
   1d228:	b	1d8bc <__flatcc_gen_sort@@Base+0x1fbc>
   1d22c:	b	1d8b0 <__flatcc_gen_sort@@Base+0x1fb0>
   1d230:	sub	r3, r2, #1
   1d234:	cmp	r3, #8
   1d238:	addls	pc, pc, r3, lsl #2
   1d23c:	b	1e128 <__flatcc_gen_sort@@Base+0x2828>
   1d240:	b	1d910 <__flatcc_gen_sort@@Base+0x2010>
   1d244:	b	1d800 <__flatcc_gen_sort@@Base+0x1f00>
   1d248:	b	1d904 <__flatcc_gen_sort@@Base+0x2004>
   1d24c:	b	1d940 <__flatcc_gen_sort@@Base+0x2040>
   1d250:	b	1d934 <__flatcc_gen_sort@@Base+0x2034>
   1d254:	b	1d928 <__flatcc_gen_sort@@Base+0x2028>
   1d258:	b	1d91c <__flatcc_gen_sort@@Base+0x201c>
   1d25c:	b	1d8a4 <__flatcc_gen_sort@@Base+0x1fa4>
   1d260:	b	1d898 <__flatcc_gen_sort@@Base+0x1f98>
   1d264:	ldrh	r2, [r4, #56]	; 0x38
   1d268:	sub	r2, r2, #3
   1d26c:	cmp	r2, #3
   1d270:	addls	pc, pc, r2, lsl #2
   1d274:	b	1d1a8 <__flatcc_gen_sort@@Base+0x18a8>
   1d278:	b	1d6a8 <__flatcc_gen_sort@@Base+0x1da8>
   1d27c:	b	1d6f0 <__flatcc_gen_sort@@Base+0x1df0>
   1d280:	b	1d710 <__flatcc_gen_sort@@Base+0x1e10>
   1d284:	b	1deb0 <__flatcc_gen_sort@@Base+0x25b0>
   1d288:	ldr	r3, [pc, #1980]	; 1da4c <__flatcc_gen_sort@@Base+0x214c>
   1d28c:	add	r3, pc, r3
   1d290:	str	r3, [sp, #84]	; 0x54
   1d294:	ldr	r3, [pc, #1972]	; 1da50 <__flatcc_gen_sort@@Base+0x2150>
   1d298:	add	r3, pc, r3
   1d29c:	str	r3, [sp, #80]	; 0x50
   1d2a0:	ldr	r3, [pc, #1964]	; 1da54 <__flatcc_gen_sort@@Base+0x2154>
   1d2a4:	add	r3, pc, r3
   1d2a8:	str	r3, [sp, #88]	; 0x58
   1d2ac:	b	1d018 <__flatcc_gen_sort@@Base+0x1718>
   1d2b0:	ldr	r3, [pc, #1952]	; 1da58 <__flatcc_gen_sort@@Base+0x2158>
   1d2b4:	ldr	r1, [pc, #1952]	; 1da5c <__flatcc_gen_sort@@Base+0x215c>
   1d2b8:	ldr	r2, [pc, #1952]	; 1da60 <__flatcc_gen_sort@@Base+0x2160>
   1d2bc:	add	r3, pc, r3
   1d2c0:	add	r1, pc, r1
   1d2c4:	add	r2, pc, r2
   1d2c8:	b	1cf50 <__flatcc_gen_sort@@Base+0x1650>
   1d2cc:	ldr	r3, [pc, #1936]	; 1da64 <__flatcc_gen_sort@@Base+0x2164>
   1d2d0:	ldr	r1, [pc, #1936]	; 1da68 <__flatcc_gen_sort@@Base+0x2168>
   1d2d4:	ldr	r2, [pc, #1936]	; 1da6c <__flatcc_gen_sort@@Base+0x216c>
   1d2d8:	add	r3, pc, r3
   1d2dc:	add	r1, pc, r1
   1d2e0:	add	r2, pc, r2
   1d2e4:	b	1cf50 <__flatcc_gen_sort@@Base+0x1650>
   1d2e8:	ldr	r3, [pc, #1920]	; 1da70 <__flatcc_gen_sort@@Base+0x2170>
   1d2ec:	ldr	r1, [pc, #1920]	; 1da74 <__flatcc_gen_sort@@Base+0x2174>
   1d2f0:	ldr	r2, [pc, #1920]	; 1da78 <__flatcc_gen_sort@@Base+0x2178>
   1d2f4:	add	r3, pc, r3
   1d2f8:	add	r1, pc, r1
   1d2fc:	add	r2, pc, r2
   1d300:	b	1cf50 <__flatcc_gen_sort@@Base+0x1650>
   1d304:	ldr	r3, [pc, #1904]	; 1da7c <__flatcc_gen_sort@@Base+0x217c>
   1d308:	ldr	r1, [pc, #1904]	; 1da80 <__flatcc_gen_sort@@Base+0x2180>
   1d30c:	add	r3, pc, r3
   1d310:	add	r1, pc, r1
   1d314:	mov	r2, r3
   1d318:	b	1cf50 <__flatcc_gen_sort@@Base+0x1650>
   1d31c:	ldr	r3, [pc, #1888]	; 1da84 <__flatcc_gen_sort@@Base+0x2184>
   1d320:	ldr	r1, [pc, #1888]	; 1da88 <__flatcc_gen_sort@@Base+0x2188>
   1d324:	ldr	r2, [pc, #1888]	; 1da8c <__flatcc_gen_sort@@Base+0x218c>
   1d328:	add	r3, pc, r3
   1d32c:	add	r1, pc, r1
   1d330:	add	r2, pc, r2
   1d334:	b	1cf50 <__flatcc_gen_sort@@Base+0x1650>
   1d338:	ldr	r3, [pc, #1872]	; 1da90 <__flatcc_gen_sort@@Base+0x2190>
   1d33c:	ldr	r1, [pc, #1872]	; 1da94 <__flatcc_gen_sort@@Base+0x2194>
   1d340:	ldr	r2, [pc, #1872]	; 1da98 <__flatcc_gen_sort@@Base+0x2198>
   1d344:	add	r3, pc, r3
   1d348:	add	r1, pc, r1
   1d34c:	add	r2, pc, r2
   1d350:	b	1cf50 <__flatcc_gen_sort@@Base+0x1650>
   1d354:	ldr	r3, [pc, #1856]	; 1da9c <__flatcc_gen_sort@@Base+0x219c>
   1d358:	ldr	r1, [pc, #1856]	; 1daa0 <__flatcc_gen_sort@@Base+0x21a0>
   1d35c:	ldr	r2, [pc, #1856]	; 1daa4 <__flatcc_gen_sort@@Base+0x21a4>
   1d360:	add	r3, pc, r3
   1d364:	add	r1, pc, r1
   1d368:	add	r2, pc, r2
   1d36c:	b	1cf50 <__flatcc_gen_sort@@Base+0x1650>
   1d370:	ldr	r3, [pc, #1840]	; 1daa8 <__flatcc_gen_sort@@Base+0x21a8>
   1d374:	ldr	r1, [pc, #1840]	; 1daac <__flatcc_gen_sort@@Base+0x21ac>
   1d378:	add	r3, pc, r3
   1d37c:	add	r1, pc, r1
   1d380:	mov	r2, r3
   1d384:	b	1cf50 <__flatcc_gen_sort@@Base+0x1650>
   1d388:	ldr	r3, [pc, #1824]	; 1dab0 <__flatcc_gen_sort@@Base+0x21b0>
   1d38c:	add	r3, pc, r3
   1d390:	str	r3, [sp, #84]	; 0x54
   1d394:	ldr	r3, [pc, #1816]	; 1dab4 <__flatcc_gen_sort@@Base+0x21b4>
   1d398:	add	r3, pc, r3
   1d39c:	str	r3, [sp, #80]	; 0x50
   1d3a0:	ldr	r3, [pc, #1808]	; 1dab8 <__flatcc_gen_sort@@Base+0x21b8>
   1d3a4:	add	r3, pc, r3
   1d3a8:	str	r3, [sp, #88]	; 0x58
   1d3ac:	b	1d018 <__flatcc_gen_sort@@Base+0x1718>
   1d3b0:	ldrh	r2, [r4, #56]	; 0x38
   1d3b4:	sub	r2, r2, #3
   1d3b8:	cmp	r2, #3
   1d3bc:	addls	pc, pc, r2, lsl #2
   1d3c0:	b	1d1a8 <__flatcc_gen_sort@@Base+0x18a8>
   1d3c4:	b	1de40 <__flatcc_gen_sort@@Base+0x2540>
   1d3c8:	b	1de18 <__flatcc_gen_sort@@Base+0x2518>
   1d3cc:	b	1ddf0 <__flatcc_gen_sort@@Base+0x24f0>
   1d3d0:	b	1d7a4 <__flatcc_gen_sort@@Base+0x1ea4>
   1d3d4:	ldrh	r2, [r4, #56]	; 0x38
   1d3d8:	sub	r2, r2, #3
   1d3dc:	cmp	r2, #3
   1d3e0:	addls	pc, pc, r2, lsl #2
   1d3e4:	b	1d1a8 <__flatcc_gen_sort@@Base+0x18a8>
   1d3e8:	b	1d070 <__flatcc_gen_sort@@Base+0x1770>
   1d3ec:	b	1d94c <__flatcc_gen_sort@@Base+0x204c>
   1d3f0:	b	1dd5c <__flatcc_gen_sort@@Base+0x245c>
   1d3f4:	b	1d730 <__flatcc_gen_sort@@Base+0x1e30>
   1d3f8:	ldrh	r2, [r4, #56]	; 0x38
   1d3fc:	sub	r2, r2, #3
   1d400:	cmp	r2, #3
   1d404:	addls	pc, pc, r2, lsl #2
   1d408:	b	1d1a8 <__flatcc_gen_sort@@Base+0x18a8>
   1d40c:	b	1ddac <__flatcc_gen_sort@@Base+0x24ac>
   1d410:	b	1dd84 <__flatcc_gen_sort@@Base+0x2484>
   1d414:	b	1ddc8 <__flatcc_gen_sort@@Base+0x24c8>
   1d418:	b	1d77c <__flatcc_gen_sort@@Base+0x1e7c>
   1d41c:	ldr	r3, [pc, #1688]	; 1dabc <__flatcc_gen_sort@@Base+0x21bc>
   1d420:	add	r3, pc, r3
   1d424:	str	r3, [sp, #84]	; 0x54
   1d428:	ldr	r3, [pc, #1680]	; 1dac0 <__flatcc_gen_sort@@Base+0x21c0>
   1d42c:	add	r3, pc, r3
   1d430:	str	r3, [sp, #80]	; 0x50
   1d434:	ldr	r3, [pc, #1672]	; 1dac4 <__flatcc_gen_sort@@Base+0x21c4>
   1d438:	add	r3, pc, r3
   1d43c:	str	r3, [sp, #88]	; 0x58
   1d440:	b	1d018 <__flatcc_gen_sort@@Base+0x1718>
   1d444:	ldr	r3, [pc, #1660]	; 1dac8 <__flatcc_gen_sort@@Base+0x21c8>
   1d448:	ldr	r1, [pc, #1660]	; 1dacc <__flatcc_gen_sort@@Base+0x21cc>
   1d44c:	ldr	r2, [pc, #1660]	; 1dad0 <__flatcc_gen_sort@@Base+0x21d0>
   1d450:	add	r3, pc, r3
   1d454:	add	r1, pc, r1
   1d458:	add	r2, pc, r2
   1d45c:	b	1cf50 <__flatcc_gen_sort@@Base+0x1650>
   1d460:	ldr	r3, [pc, #1644]	; 1dad4 <__flatcc_gen_sort@@Base+0x21d4>
   1d464:	add	r3, pc, r3
   1d468:	str	r3, [sp, #84]	; 0x54
   1d46c:	ldr	r3, [pc, #1636]	; 1dad8 <__flatcc_gen_sort@@Base+0x21d8>
   1d470:	add	r3, pc, r3
   1d474:	str	r3, [sp, #80]	; 0x50
   1d478:	ldr	r3, [pc, #1628]	; 1dadc <__flatcc_gen_sort@@Base+0x21dc>
   1d47c:	add	r3, pc, r3
   1d480:	str	r3, [sp, #88]	; 0x58
   1d484:	b	1d018 <__flatcc_gen_sort@@Base+0x1718>
   1d488:	ldrh	r2, [r4, #56]	; 0x38
   1d48c:	sub	r2, r2, #3
   1d490:	cmp	r2, #3
   1d494:	addls	pc, pc, r2, lsl #2
   1d498:	b	1d1a8 <__flatcc_gen_sort@@Base+0x18a8>
   1d49c:	b	1d84c <__flatcc_gen_sort@@Base+0x1f4c>
   1d4a0:	b	1d82c <__flatcc_gen_sort@@Base+0x1f2c>
   1d4a4:	b	1d86c <__flatcc_gen_sort@@Base+0x1f6c>
   1d4a8:	b	1deb0 <__flatcc_gen_sort@@Base+0x25b0>
   1d4ac:	ldr	r3, [pc, #1580]	; 1dae0 <__flatcc_gen_sort@@Base+0x21e0>
   1d4b0:	ldr	r1, [pc, #1580]	; 1dae4 <__flatcc_gen_sort@@Base+0x21e4>
   1d4b4:	ldr	r2, [pc, #1580]	; 1dae8 <__flatcc_gen_sort@@Base+0x21e8>
   1d4b8:	add	r3, pc, r3
   1d4bc:	add	r1, pc, r1
   1d4c0:	add	r2, pc, r2
   1d4c4:	b	1cf50 <__flatcc_gen_sort@@Base+0x1650>
   1d4c8:	ldr	r3, [pc, #1564]	; 1daec <__flatcc_gen_sort@@Base+0x21ec>
   1d4cc:	add	r3, pc, r3
   1d4d0:	str	r3, [sp, #84]	; 0x54
   1d4d4:	ldr	r3, [pc, #1556]	; 1daf0 <__flatcc_gen_sort@@Base+0x21f0>
   1d4d8:	add	r3, pc, r3
   1d4dc:	str	r3, [sp, #80]	; 0x50
   1d4e0:	ldr	r3, [pc, #1548]	; 1daf4 <__flatcc_gen_sort@@Base+0x21f4>
   1d4e4:	add	r3, pc, r3
   1d4e8:	str	r3, [sp, #88]	; 0x58
   1d4ec:	b	1d018 <__flatcc_gen_sort@@Base+0x1718>
   1d4f0:	sub	r2, r2, #1
   1d4f4:	cmp	r2, #8
   1d4f8:	addls	pc, pc, r2, lsl #2
   1d4fc:	b	1e2a4 <__flatcc_gen_sort@@Base+0x29a4>
   1d500:	b	1dff4 <__flatcc_gen_sort@@Base+0x26f4>
   1d504:	b	1dfe8 <__flatcc_gen_sort@@Base+0x26e8>
   1d508:	b	1dfdc <__flatcc_gen_sort@@Base+0x26dc>
   1d50c:	b	1dfd0 <__flatcc_gen_sort@@Base+0x26d0>
   1d510:	b	1dfc4 <__flatcc_gen_sort@@Base+0x26c4>
   1d514:	b	1dfb8 <__flatcc_gen_sort@@Base+0x26b8>
   1d518:	b	1df90 <__flatcc_gen_sort@@Base+0x2690>
   1d51c:	b	1e00c <__flatcc_gen_sort@@Base+0x270c>
   1d520:	b	1e000 <__flatcc_gen_sort@@Base+0x2700>
   1d524:	sub	r2, r2, #1
   1d528:	cmp	r2, #8
   1d52c:	addls	pc, pc, r2, lsl #2
   1d530:	b	1e250 <__flatcc_gen_sort@@Base+0x2950>
   1d534:	b	1df84 <__flatcc_gen_sort@@Base+0x2684>
   1d538:	b	1df78 <__flatcc_gen_sort@@Base+0x2678>
   1d53c:	b	1df6c <__flatcc_gen_sort@@Base+0x266c>
   1d540:	b	1df60 <__flatcc_gen_sort@@Base+0x2660>
   1d544:	b	1df54 <__flatcc_gen_sort@@Base+0x2654>
   1d548:	b	1df48 <__flatcc_gen_sort@@Base+0x2648>
   1d54c:	b	1df3c <__flatcc_gen_sort@@Base+0x263c>
   1d550:	b	1df30 <__flatcc_gen_sort@@Base+0x2630>
   1d554:	b	1df04 <__flatcc_gen_sort@@Base+0x2604>
   1d558:	sub	r2, r2, #1
   1d55c:	cmp	r2, #8
   1d560:	addls	pc, pc, r2, lsl #2
   1d564:	b	1e1fc <__flatcc_gen_sort@@Base+0x28fc>
   1d568:	b	1e098 <__flatcc_gen_sort@@Base+0x2798>
   1d56c:	b	1e08c <__flatcc_gen_sort@@Base+0x278c>
   1d570:	b	1e080 <__flatcc_gen_sort@@Base+0x2780>
   1d574:	b	1e074 <__flatcc_gen_sort@@Base+0x2774>
   1d578:	b	1e068 <__flatcc_gen_sort@@Base+0x2768>
   1d57c:	b	1e05c <__flatcc_gen_sort@@Base+0x275c>
   1d580:	b	1e050 <__flatcc_gen_sort@@Base+0x2750>
   1d584:	b	1e044 <__flatcc_gen_sort@@Base+0x2744>
   1d588:	b	1e018 <__flatcc_gen_sort@@Base+0x2718>
   1d58c:	cmp	r2, #11
   1d590:	beq	1e1d0 <__flatcc_gen_sort@@Base+0x28d0>
   1d594:	ldr	r1, [pc, #1372]	; 1daf8 <__flatcc_gen_sort@@Base+0x21f8>
   1d598:	add	r3, sp, #100	; 0x64
   1d59c:	str	r3, [sp, #92]	; 0x5c
   1d5a0:	mov	r0, r3
   1d5a4:	add	r1, pc, r1
   1d5a8:	ldrd	r2, [r4, #48]	; 0x30
   1d5ac:	bl	140f8 <sprintf@plt>
   1d5b0:	ldr	r3, [sp, #92]	; 0x5c
   1d5b4:	ldr	r1, [pc, #1344]	; 1dafc <__flatcc_gen_sort@@Base+0x21fc>
   1d5b8:	str	r3, [sp, #44]	; 0x2c
   1d5bc:	ldrh	r3, [r4, #74]	; 0x4a
   1d5c0:	ldr	r0, [r5, #204]	; 0xcc
   1d5c4:	add	r1, pc, r1
   1d5c8:	str	r3, [sp, #40]	; 0x28
   1d5cc:	ldrd	r2, [r4, #88]	; 0x58
   1d5d0:	str	r9, [sp, #28]
   1d5d4:	str	r9, [sp, #24]
   1d5d8:	strd	r2, [sp, #32]
   1d5dc:	str	r6, [sp, #20]
   1d5e0:	str	r7, [sp, #16]
   1d5e4:	str	r8, [sp, #12]
   1d5e8:	str	r5, [sp, #8]
   1d5ec:	ldrd	r6, [r4, #96]	; 0x60
   1d5f0:	mov	r2, r5
   1d5f4:	strd	r6, [sp]
   1d5f8:	bl	1408c <fprintf@plt>
   1d5fc:	b	1cad8 <__flatcc_gen_sort@@Base+0x11d8>
   1d600:	ldr	r2, [pc, #916]	; 1d99c <__flatcc_gen_sort@@Base+0x209c>
   1d604:	ldr	r3, [pc, #1268]	; 1db00 <__flatcc_gen_sort@@Base+0x2200>
   1d608:	ldr	r4, [pc, #1268]	; 1db04 <__flatcc_gen_sort@@Base+0x2204>
   1d60c:	ldr	r1, [fp, r2]
   1d610:	add	r3, pc, r3
   1d614:	str	r3, [sp]
   1d618:	ldr	r0, [r1]
   1d61c:	ldr	r1, [pc, #1252]	; 1db08 <__flatcc_gen_sort@@Base+0x2208>
   1d620:	add	r4, pc, r4
   1d624:	mov	r2, r4
   1d628:	mov	r3, #141	; 0x8d
   1d62c:	add	r1, pc, r1
   1d630:	bl	1408c <fprintf@plt>
   1d634:	ldr	r3, [pc, #1232]	; 1db0c <__flatcc_gen_sort@@Base+0x220c>
   1d638:	ldr	r0, [pc, #1232]	; 1db10 <__flatcc_gen_sort@@Base+0x2210>
   1d63c:	add	r3, pc, r3
   1d640:	mov	r1, r4
   1d644:	add	r3, r3, #72	; 0x48
   1d648:	mov	r2, #141	; 0x8d
   1d64c:	add	r0, pc, r0
   1d650:	bl	14140 <__assert_fail@plt>
   1d654:	ldr	r2, [pc, #832]	; 1d99c <__flatcc_gen_sort@@Base+0x209c>
   1d658:	ldr	r3, [pc, #1204]	; 1db14 <__flatcc_gen_sort@@Base+0x2214>
   1d65c:	ldr	r4, [pc, #1204]	; 1db18 <__flatcc_gen_sort@@Base+0x2218>
   1d660:	ldr	r1, [fp, r2]
   1d664:	add	r3, pc, r3
   1d668:	str	r3, [sp]
   1d66c:	ldr	r0, [r1]
   1d670:	ldr	r1, [pc, #1188]	; 1db1c <__flatcc_gen_sort@@Base+0x221c>
   1d674:	add	r4, pc, r4
   1d678:	mov	r2, r4
   1d67c:	mov	r3, #141	; 0x8d
   1d680:	add	r1, pc, r1
   1d684:	bl	1408c <fprintf@plt>
   1d688:	ldr	r3, [pc, #1168]	; 1db20 <__flatcc_gen_sort@@Base+0x2220>
   1d68c:	ldr	r0, [pc, #1168]	; 1db24 <__flatcc_gen_sort@@Base+0x2224>
   1d690:	add	r3, pc, r3
   1d694:	mov	r1, r4
   1d698:	add	r3, r3, #72	; 0x48
   1d69c:	mov	r2, #141	; 0x8d
   1d6a0:	add	r0, pc, r0
   1d6a4:	bl	14140 <__assert_fail@plt>
   1d6a8:	vldr	d7, [r4, #48]	; 0x30
   1d6ac:	add	r3, sp, #100	; 0x64
   1d6b0:	str	r3, [sp, #92]	; 0x5c
   1d6b4:	mov	r0, r3
   1d6b8:	vcvt.f32.f64	s14, d7
   1d6bc:	ldr	r3, [pc, #1124]	; 1db28 <__flatcc_gen_sort@@Base+0x2228>
   1d6c0:	ldr	r2, [pc, #1124]	; 1db2c <__flatcc_gen_sort@@Base+0x222c>
   1d6c4:	ldr	r1, [pc, #1124]	; 1db30 <__flatcc_gen_sort@@Base+0x2230>
   1d6c8:	add	r3, pc, r3
   1d6cc:	add	r2, pc, r2
   1d6d0:	str	r3, [sp, #84]	; 0x54
   1d6d4:	str	r2, [sp, #80]	; 0x50
   1d6d8:	vcvt.f64.f32	d7, s14
   1d6dc:	str	r3, [sp, #88]	; 0x58
   1d6e0:	add	r1, pc, r1
   1d6e4:	vmov	r2, r3, d7
   1d6e8:	bl	140f8 <sprintf@plt>
   1d6ec:	b	1d0b0 <__flatcc_gen_sort@@Base+0x17b0>
   1d6f0:	ldr	r2, [pc, #1084]	; 1db34 <__flatcc_gen_sort@@Base+0x2234>
   1d6f4:	ldr	r1, [pc, #1084]	; 1db38 <__flatcc_gen_sort@@Base+0x2238>
   1d6f8:	add	r2, pc, r2
   1d6fc:	add	r1, pc, r1
   1d700:	str	r2, [sp, #84]	; 0x54
   1d704:	str	r1, [sp, #80]	; 0x50
   1d708:	str	r2, [sp, #88]	; 0x58
   1d70c:	b	1d234 <__flatcc_gen_sort@@Base+0x1934>
   1d710:	ldr	r2, [pc, #1060]	; 1db3c <__flatcc_gen_sort@@Base+0x223c>
   1d714:	ldr	r1, [pc, #1060]	; 1db40 <__flatcc_gen_sort@@Base+0x2240>
   1d718:	add	r2, pc, r2
   1d71c:	add	r1, pc, r1
   1d720:	str	r2, [sp, #84]	; 0x54
   1d724:	str	r1, [sp, #80]	; 0x50
   1d728:	str	r2, [sp, #88]	; 0x58
   1d72c:	b	1d200 <__flatcc_gen_sort@@Base+0x1900>
   1d730:	ldr	r3, [pc, #1036]	; 1db44 <__flatcc_gen_sort@@Base+0x2244>
   1d734:	add	r3, pc, r3
   1d738:	str	r3, [sp, #84]	; 0x54
   1d73c:	ldr	r3, [pc, #1028]	; 1db48 <__flatcc_gen_sort@@Base+0x2248>
   1d740:	add	r3, pc, r3
   1d744:	str	r3, [sp, #88]	; 0x58
   1d748:	ldr	r3, [pc, #1020]	; 1db4c <__flatcc_gen_sort@@Base+0x224c>
   1d74c:	add	r3, pc, r3
   1d750:	str	r3, [sp, #80]	; 0x50
   1d754:	ldr	r2, [pc, #1012]	; 1db50 <__flatcc_gen_sort@@Base+0x2250>
   1d758:	add	r2, pc, r2
   1d75c:	ldr	r1, [pc, #1008]	; 1db54 <__flatcc_gen_sort@@Base+0x2254>
   1d760:	add	r3, sp, #100	; 0x64
   1d764:	str	r3, [sp, #92]	; 0x5c
   1d768:	mov	r0, r3
   1d76c:	add	r1, pc, r1
   1d770:	ldrb	r3, [r4, #48]	; 0x30
   1d774:	bl	140f8 <sprintf@plt>
   1d778:	b	1d0b0 <__flatcc_gen_sort@@Base+0x17b0>
   1d77c:	ldr	r2, [pc, #980]	; 1db58 <__flatcc_gen_sort@@Base+0x2258>
   1d780:	add	r2, pc, r2
   1d784:	str	r2, [sp, #84]	; 0x54
   1d788:	ldr	r2, [pc, #972]	; 1db5c <__flatcc_gen_sort@@Base+0x225c>
   1d78c:	add	r2, pc, r2
   1d790:	str	r2, [sp, #88]	; 0x58
   1d794:	ldr	r2, [pc, #964]	; 1db60 <__flatcc_gen_sort@@Base+0x2260>
   1d798:	add	r2, pc, r2
   1d79c:	str	r2, [sp, #80]	; 0x50
   1d7a0:	b	1d040 <__flatcc_gen_sort@@Base+0x1740>
   1d7a4:	ldr	r3, [pc, #952]	; 1db64 <__flatcc_gen_sort@@Base+0x2264>
   1d7a8:	add	r3, pc, r3
   1d7ac:	str	r3, [sp, #84]	; 0x54
   1d7b0:	ldr	r3, [pc, #944]	; 1db68 <__flatcc_gen_sort@@Base+0x2268>
   1d7b4:	add	r3, pc, r3
   1d7b8:	str	r3, [sp, #88]	; 0x58
   1d7bc:	ldr	r3, [pc, #936]	; 1db6c <__flatcc_gen_sort@@Base+0x226c>
   1d7c0:	add	r3, pc, r3
   1d7c4:	str	r3, [sp, #80]	; 0x50
   1d7c8:	ldr	r2, [pc, #928]	; 1db70 <__flatcc_gen_sort@@Base+0x2270>
   1d7cc:	add	r2, pc, r2
   1d7d0:	b	1d75c <__flatcc_gen_sort@@Base+0x1e5c>
   1d7d4:	ldr	r2, [pc, #920]	; 1db74 <__flatcc_gen_sort@@Base+0x2274>
   1d7d8:	add	r2, pc, r2
   1d7dc:	ldrd	r0, [r4, #48]	; 0x30
   1d7e0:	add	r3, sp, #100	; 0x64
   1d7e4:	str	r3, [sp, #92]	; 0x5c
   1d7e8:	strd	r0, [sp]
   1d7ec:	ldr	r1, [pc, #900]	; 1db78 <__flatcc_gen_sort@@Base+0x2278>
   1d7f0:	mov	r0, r3
   1d7f4:	add	r1, pc, r1
   1d7f8:	bl	140f8 <sprintf@plt>
   1d7fc:	b	1d0b0 <__flatcc_gen_sort@@Base+0x17b0>
   1d800:	ldr	r2, [pc, #884]	; 1db7c <__flatcc_gen_sort@@Base+0x227c>
   1d804:	add	r2, pc, r2
   1d808:	ldrd	r0, [r4, #48]	; 0x30
   1d80c:	add	r3, sp, #100	; 0x64
   1d810:	str	r3, [sp, #92]	; 0x5c
   1d814:	strd	r0, [sp]
   1d818:	ldr	r1, [pc, #864]	; 1db80 <__flatcc_gen_sort@@Base+0x2280>
   1d81c:	mov	r0, r3
   1d820:	add	r1, pc, r1
   1d824:	bl	140f8 <sprintf@plt>
   1d828:	b	1d0b0 <__flatcc_gen_sort@@Base+0x17b0>
   1d82c:	ldr	r2, [pc, #848]	; 1db84 <__flatcc_gen_sort@@Base+0x2284>
   1d830:	ldr	r1, [pc, #848]	; 1db88 <__flatcc_gen_sort@@Base+0x2288>
   1d834:	add	r2, pc, r2
   1d838:	add	r1, pc, r1
   1d83c:	str	r2, [sp, #84]	; 0x54
   1d840:	str	r1, [sp, #80]	; 0x50
   1d844:	str	r2, [sp, #88]	; 0x58
   1d848:	b	1d234 <__flatcc_gen_sort@@Base+0x1934>
   1d84c:	ldr	r3, [pc, #824]	; 1db8c <__flatcc_gen_sort@@Base+0x228c>
   1d850:	ldr	r2, [pc, #824]	; 1db90 <__flatcc_gen_sort@@Base+0x2290>
   1d854:	add	r3, pc, r3
   1d858:	add	r2, pc, r2
   1d85c:	str	r3, [sp, #84]	; 0x54
   1d860:	str	r2, [sp, #80]	; 0x50
   1d864:	str	r3, [sp, #88]	; 0x58
   1d868:	b	1d094 <__flatcc_gen_sort@@Base+0x1794>
   1d86c:	ldr	r2, [pc, #800]	; 1db94 <__flatcc_gen_sort@@Base+0x2294>
   1d870:	ldr	r1, [pc, #800]	; 1db98 <__flatcc_gen_sort@@Base+0x2298>
   1d874:	add	r2, pc, r2
   1d878:	add	r1, pc, r1
   1d87c:	str	r2, [sp, #84]	; 0x54
   1d880:	str	r1, [sp, #80]	; 0x50
   1d884:	str	r2, [sp, #88]	; 0x58
   1d888:	b	1d200 <__flatcc_gen_sort@@Base+0x1900>
   1d88c:	ldr	r2, [pc, #776]	; 1db9c <__flatcc_gen_sort@@Base+0x229c>
   1d890:	add	r2, pc, r2
   1d894:	b	1d7dc <__flatcc_gen_sort@@Base+0x1edc>
   1d898:	ldr	r2, [pc, #768]	; 1dba0 <__flatcc_gen_sort@@Base+0x22a0>
   1d89c:	add	r2, pc, r2
   1d8a0:	b	1d808 <__flatcc_gen_sort@@Base+0x1f08>
   1d8a4:	ldr	r2, [pc, #760]	; 1dba4 <__flatcc_gen_sort@@Base+0x22a4>
   1d8a8:	add	r2, pc, r2
   1d8ac:	b	1d808 <__flatcc_gen_sort@@Base+0x1f08>
   1d8b0:	ldr	r2, [pc, #752]	; 1dba8 <__flatcc_gen_sort@@Base+0x22a8>
   1d8b4:	add	r2, pc, r2
   1d8b8:	b	1d7dc <__flatcc_gen_sort@@Base+0x1edc>
   1d8bc:	ldr	r2, [pc, #744]	; 1dbac <__flatcc_gen_sort@@Base+0x22ac>
   1d8c0:	add	r2, pc, r2
   1d8c4:	b	1d7dc <__flatcc_gen_sort@@Base+0x1edc>
   1d8c8:	ldr	r2, [pc, #736]	; 1dbb0 <__flatcc_gen_sort@@Base+0x22b0>
   1d8cc:	add	r2, pc, r2
   1d8d0:	b	1d7dc <__flatcc_gen_sort@@Base+0x1edc>
   1d8d4:	ldr	r2, [pc, #728]	; 1dbb4 <__flatcc_gen_sort@@Base+0x22b4>
   1d8d8:	add	r2, pc, r2
   1d8dc:	b	1d7dc <__flatcc_gen_sort@@Base+0x1edc>
   1d8e0:	ldr	r2, [pc, #720]	; 1dbb8 <__flatcc_gen_sort@@Base+0x22b8>
   1d8e4:	add	r2, pc, r2
   1d8e8:	b	1d7dc <__flatcc_gen_sort@@Base+0x1edc>
   1d8ec:	ldr	r2, [pc, #712]	; 1dbbc <__flatcc_gen_sort@@Base+0x22bc>
   1d8f0:	add	r2, pc, r2
   1d8f4:	b	1d7dc <__flatcc_gen_sort@@Base+0x1edc>
   1d8f8:	ldr	r2, [pc, #704]	; 1dbc0 <__flatcc_gen_sort@@Base+0x22c0>
   1d8fc:	add	r2, pc, r2
   1d900:	b	1d7dc <__flatcc_gen_sort@@Base+0x1edc>
   1d904:	ldr	r2, [pc, #696]	; 1dbc4 <__flatcc_gen_sort@@Base+0x22c4>
   1d908:	add	r2, pc, r2
   1d90c:	b	1d808 <__flatcc_gen_sort@@Base+0x1f08>
   1d910:	ldr	r2, [pc, #688]	; 1dbc8 <__flatcc_gen_sort@@Base+0x22c8>
   1d914:	add	r2, pc, r2
   1d918:	b	1d808 <__flatcc_gen_sort@@Base+0x1f08>
   1d91c:	ldr	r2, [pc, #680]	; 1dbcc <__flatcc_gen_sort@@Base+0x22cc>
   1d920:	add	r2, pc, r2
   1d924:	b	1d808 <__flatcc_gen_sort@@Base+0x1f08>
   1d928:	ldr	r2, [pc, #672]	; 1dbd0 <__flatcc_gen_sort@@Base+0x22d0>
   1d92c:	add	r2, pc, r2
   1d930:	b	1d808 <__flatcc_gen_sort@@Base+0x1f08>
   1d934:	ldr	r2, [pc, #664]	; 1dbd4 <__flatcc_gen_sort@@Base+0x22d4>
   1d938:	add	r2, pc, r2
   1d93c:	b	1d808 <__flatcc_gen_sort@@Base+0x1f08>
   1d940:	ldr	r2, [pc, #656]	; 1dbd8 <__flatcc_gen_sort@@Base+0x22d8>
   1d944:	add	r2, pc, r2
   1d948:	b	1d808 <__flatcc_gen_sort@@Base+0x1f08>
   1d94c:	ldr	r2, [pc, #648]	; 1dbdc <__flatcc_gen_sort@@Base+0x22dc>
   1d950:	add	r2, pc, r2
   1d954:	str	r2, [sp, #84]	; 0x54
   1d958:	ldr	r2, [pc, #640]	; 1dbe0 <__flatcc_gen_sort@@Base+0x22e0>
   1d95c:	add	r2, pc, r2
   1d960:	str	r2, [sp, #88]	; 0x58
   1d964:	ldr	r2, [pc, #632]	; 1dbe4 <__flatcc_gen_sort@@Base+0x22e4>
   1d968:	add	r2, pc, r2
   1d96c:	str	r2, [sp, #80]	; 0x50
   1d970:	b	1d234 <__flatcc_gen_sort@@Base+0x1934>
   1d974:	ldrdeq	lr, [r4], -r4
   1d978:	andeq	ip, r2, r0, ror #27
   1d97c:	muleq	r2, r8, sp
   1d980:	andeq	ip, r2, ip, asr sp
   1d984:	strdeq	ip, [r2], -r4
   1d988:	andeq	ip, r2, ip, lsl #26
   1d98c:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   1d990:	andeq	ip, r2, r4, lsr #19
   1d994:	andeq	ip, r2, r0, ror sl
   1d998:	andeq	ip, r2, ip, ror #20
   1d99c:	andeq	r0, r0, r0, lsr #1
   1d9a0:	andeq	r5, r2, r8, ror #7
   1d9a4:	andeq	ip, r2, r0, lsl #9
   1d9a8:	andeq	r4, r2, r4, lsr r2
   1d9ac:	andeq	r0, r0, r8, ror #11
   1d9b0:	strdeq	ip, [r2], -r0
   1d9b4:	andeq	ip, r2, r4, lsl r6
   1d9b8:	andeq	ip, r2, r8, lsr sl
   1d9bc:	strdeq	ip, [r2], -r8
   1d9c0:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   1d9c4:	andeq	r5, r2, r0, lsr #1
   1d9c8:	andeq	ip, r2, r8, asr #4
   1d9cc:	strdeq	r3, [r2], -ip
   1d9d0:	strheq	ip, [r2], -r8
   1d9d4:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   1d9d8:	muleq	r2, r8, r0
   1d9dc:	strdeq	ip, [r2], -r4
   1d9e0:	andeq	r3, r2, r8, lsr #31
   1d9e4:	andeq	r0, r0, r3, ror #11
   1d9e8:	andeq	ip, r2, r4, rrx
   1d9ec:	andeq	ip, r2, r8, lsl #7
   1d9f0:	andeq	r3, r2, ip, lsl lr
   1d9f4:			; <UNDEFINED> instruction: 0x0003c5bc
   1d9f8:	andeq	ip, r2, ip, ror #10
   1d9fc:	muleq	r2, r0, r5
   1da00:	andeq	r3, r2, r0, ror #26
   1da04:	strdeq	ip, [r3], -r8
   1da08:	andeq	r3, r2, r8, lsl #26
   1da0c:	andeq	r4, r2, r8, ror r1
   1da10:			; <UNDEFINED> instruction: 0x0002dab4
   1da14:	strdeq	r3, [r2], -r0
   1da18:	andeq	ip, r2, r4, lsr #7
   1da1c:			; <UNDEFINED> instruction: 0x0002c4b4
   1da20:	andeq	fp, r2, r8, asr #31
   1da24:	andeq	r3, r2, ip, ror sp
   1da28:	muleq	r0, r6, r5
   1da2c:	andeq	fp, r2, r8, lsr lr
   1da30:	andeq	ip, r2, ip, asr r1
   1da34:	muleq	r2, r0, r3
   1da38:	andeq	r3, r2, r0, lsl sp
   1da3c:	muleq	r2, r4, ip
   1da40:	andeq	r3, r2, r8, ror #25
   1da44:	andeq	fp, r2, r4, lsr #27
   1da48:	andeq	ip, r2, r8, asr #1
   1da4c:	andeq	r3, r2, r8, ror #21
   1da50:	andeq	sp, r2, r8, lsr #17
   1da54:	andeq	r3, r2, ip, asr #30
   1da58:	muleq	r2, r4, sl
   1da5c:	andeq	sp, r2, r0, lsl #17
   1da60:	andeq	r3, r2, r4, lsl pc
   1da64:	andeq	r3, r2, r4, lsl #21
   1da68:	andeq	sp, r2, r4, ror #16
   1da6c:	andeq	r3, r2, r0, lsl #30
   1da70:	andeq	r3, r2, r4, asr #20
   1da74:	andeq	sp, r2, r8, asr #16
   1da78:	andeq	r3, r2, ip, asr #29
   1da7c:	andeq	r3, r2, r0, lsl #21
   1da80:	andeq	sp, r2, r0, lsr r8
   1da84:	andeq	r3, r2, r4, asr #20
   1da88:	andeq	sp, r2, r4, lsl r8
   1da8c:			; <UNDEFINED> instruction: 0x00023eb8
   1da90:	andeq	r3, r2, r8, lsr sl
   1da94:	strdeq	sp, [r2], -r8
   1da98:	andeq	r3, r2, ip, lsr #29
   1da9c:	andeq	r3, r2, r4, lsr #20
   1daa0:	ldrdeq	sp, [r2], -ip
   1daa4:	muleq	r2, r8, lr
   1daa8:	andeq	r3, r2, ip, lsl sl
   1daac:	andeq	sp, r2, r4, asr #15
   1dab0:	andeq	r3, r2, r0, ror #19
   1dab4:	andeq	sp, r2, r8, lsr #15
   1dab8:	andeq	r3, r2, r4, asr #28
   1dabc:	andeq	r3, r2, ip, lsr r9
   1dac0:	andeq	sp, r2, r4, lsl r7
   1dac4:	andeq	r3, r2, r8, lsr #27
   1dac8:	andeq	r3, r2, r4, lsr #18
   1dacc:	andeq	sp, r2, ip, ror #13
   1dad0:	muleq	r2, r8, sp
   1dad4:	andeq	r3, r2, ip, ror #17
   1dad8:	ldrdeq	sp, [r2], -r0
   1dadc:	andeq	r3, r2, ip, asr sp
   1dae0:	andeq	r3, r2, ip, lsl #17
   1dae4:	andeq	sp, r2, r4, lsl #13
   1dae8:	andeq	r3, r2, r0, lsl sp
   1daec:	andeq	r3, r2, ip, ror #16
   1daf0:	andeq	sp, r2, r8, ror #12
   1daf4:	andeq	r3, r2, r4, ror #25
   1daf8:	strdeq	r3, [r2], -r0
   1dafc:	andeq	ip, r2, r8, lsl #2
   1db00:			; <UNDEFINED> instruction: 0x000238b8
   1db04:	andeq	r3, r2, ip, lsr r8
   1db08:	muleq	r2, r0, r8
   1db0c:	andeq	fp, r2, ip, asr #18
   1db10:	andeq	fp, r2, r0, ror ip
   1db14:	andeq	r3, r2, r4, ror #16
   1db18:	andeq	r3, r2, r8, ror #15
   1db1c:	andeq	r3, r2, ip, lsr r8
   1db20:	strdeq	fp, [r2], -r8
   1db24:	andeq	fp, r2, ip, lsl ip
   1db28:	andeq	r3, r2, r4, asr #13
   1db2c:	andeq	sp, r2, r4, ror r4
   1db30:			; <UNDEFINED> instruction: 0x000238b0
   1db34:	muleq	r2, r4, r6
   1db38:	andeq	sp, r2, r4, asr #8
   1db3c:	andeq	r3, r2, r4, ror r6
   1db40:	andeq	sp, r2, r4, lsr #8
   1db44:	andeq	r3, r2, r8, asr #12
   1db48:			; <UNDEFINED> instruction: 0x00023ab8
   1db4c:	strdeq	sp, [r2], -r4
   1db50:	muleq	r2, r4, r6
   1db54:	andeq	r3, r2, ip, lsl r8
   1db58:	andeq	r3, r2, r4, asr #11
   1db5c:	andeq	r3, r2, r4, asr #20
   1db60:	andeq	sp, r2, r8, lsr #7
   1db64:	ldrdeq	r3, [r2], -ip
   1db68:	andeq	r3, r2, ip, asr #20
   1db6c:	andeq	sp, r2, r0, lsl #7
   1db70:	andeq	r3, r2, r8, lsr #12
   1db74:	andeq	r3, r2, r4, ror #11
   1db78:	andeq	r3, r2, ip, ror r7
   1db7c:			; <UNDEFINED> instruction: 0x000235b8
   1db80:	andeq	r3, r2, ip, asr r7
   1db84:	andeq	r3, r2, r0, ror #10
   1db88:	andeq	sp, r2, r8, lsl #6
   1db8c:	andeq	r3, r2, r0, asr #10
   1db90:	andeq	sp, r2, r8, ror #5
   1db94:	andeq	r3, r2, r0, lsr #10
   1db98:	andeq	sp, r2, r8, asr #5
   1db9c:	andeq	r3, r2, r0, lsr #10
   1dba0:	andeq	r3, r2, r8, asr r5
   1dba4:	andeq	r3, r2, r4, asr #10
   1dba8:	andeq	r3, r2, r0, asr #10
   1dbac:	andeq	r3, r2, ip, lsr #10
   1dbb0:	andeq	r3, r2, r8, lsl r5
   1dbb4:	andeq	r3, r2, r4, lsl #10
   1dbb8:	strdeq	r3, [r2], -r0
   1dbbc:	andeq	r3, r2, r4, ror #9
   1dbc0:	andeq	r3, r2, ip, asr #9
   1dbc4:	andeq	r3, r2, r0, asr #9
   1dbc8:	muleq	r2, ip, r4
   1dbcc:	andeq	r3, r2, r4, asr #9
   1dbd0:			; <UNDEFINED> instruction: 0x000234b0
   1dbd4:	muleq	r2, ip, r4
   1dbd8:	muleq	r2, r0, r4
   1dbdc:	andeq	r3, r2, ip, lsr #8
   1dbe0:	muleq	r2, ip, r8
   1dbe4:	ldrdeq	sp, [r2], -r8
   1dbe8:	andeq	r3, r2, ip, lsl r0
   1dbec:	andeq	r3, r2, ip, lsl #9
   1dbf0:	andeq	ip, r2, r8, asr #27
   1dbf4:			; <UNDEFINED> instruction: 0x00022fbc
   1dbf8:	andeq	r3, r2, ip, lsr r4
   1dbfc:	andeq	ip, r2, r0, lsr #27
   1dc00:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   1dc04:	andeq	r3, r2, r4, lsl r4
   1dc08:	andeq	r2, r2, r8, ror pc
   1dc0c:	strdeq	r3, [r2], -r8
   1dc10:	andeq	ip, r2, ip, asr sp
   1dc14:	muleq	r2, r0, pc	; <UNPREDICTABLE>
   1dc18:	andeq	r3, r2, r0, lsl #8
   1dc1c:	andeq	ip, r2, r4, lsr sp
   1dc20:	andeq	r2, r2, r8, ror #30
   1dc24:	ldrdeq	r3, [r2], -r8
   1dc28:	andeq	ip, r2, ip, lsl #26
   1dc2c:	andeq	r2, r2, r0, asr #30
   1dc30:			; <UNDEFINED> instruction: 0x000233b0
   1dc34:	andeq	r2, r2, r4, lsl #31
   1dc38:	andeq	r2, r2, r0, ror pc
   1dc3c:	andeq	r2, r2, ip, asr pc
   1dc40:	andeq	r2, r2, r0, asr pc
   1dc44:	andeq	r2, r2, r8, lsr pc
   1dc48:	andeq	r2, r2, r0, lsr #30
   1dc4c:	andeq	r2, r2, r8, lsl #30
   1dc50:	andeq	r3, r2, r8
   1dc54:	andeq	r2, r2, ip, lsl #31
   1dc58:	andeq	r2, r2, r0, ror #31
   1dc5c:	muleq	r2, ip, r0
   1dc60:	andeq	fp, r2, r0, asr #7
   1dc64:	andeq	r2, r2, ip, ror #29
   1dc68:	andeq	r3, r2, ip, asr #32
   1dc6c:			; <UNDEFINED> instruction: 0x00022eb8
   1dc70:	andeq	r2, r2, r4, lsr #29
   1dc74:	muleq	r2, r0, lr
   1dc78:	andeq	r2, r2, ip, ror lr
   1dc7c:	andeq	r2, r2, r0, ror lr
   1dc80:	andeq	r2, r2, r8, asr lr
   1dc84:	andeq	r2, r2, r0, asr #28
   1dc88:	andeq	r2, r2, r8, lsr #28
   1dc8c:	andeq	r2, r2, r0, asr lr
   1dc90:	andeq	r2, r2, r0, ror #31
   1dc94:	andeq	r2, r2, r0, lsr #28
   1dc98:	andeq	r2, r2, ip, lsl #28
   1dc9c:	andeq	r2, r2, r0, lsl #28
   1dca0:	andeq	r2, r2, r8, ror #27
   1dca4:	ldrdeq	r2, [r2], -r0
   1dca8:			; <UNDEFINED> instruction: 0x00022db8
   1dcac:	strdeq	r2, [r2], -r0
   1dcb0:	ldrdeq	r2, [r2], -ip
   1dcb4:	ldrdeq	r2, [r2], -r8
   1dcb8:	andeq	r2, r2, r4, asr #30
   1dcbc:	andeq	r2, r2, r4, lsr #27
   1dcc0:	muleq	r2, r0, sp
   1dcc4:	andeq	r2, r2, ip, ror sp
   1dcc8:	andeq	r2, r2, r8, ror #26
   1dccc:	andeq	r2, r2, ip, asr sp
   1dcd0:	andeq	r2, r2, r4, asr #26
   1dcd4:	andeq	r2, r2, ip, lsr #26
   1dcd8:	andeq	r2, r2, r4, lsl sp
   1dcdc:	andeq	r2, r2, r4, ror #27
   1dce0:	andeq	r2, r2, r8, ror #26
   1dce4:			; <UNDEFINED> instruction: 0x00022dbc
   1dce8:	andeq	sl, r2, r8, ror lr
   1dcec:	muleq	r2, ip, r1
   1dcf0:	muleq	r2, r0, sp
   1dcf4:	andeq	r2, r2, r4, lsl sp
   1dcf8:	andeq	r2, r2, r8, ror #26
   1dcfc:	andeq	sl, r2, r4, lsr #28
   1dd00:	andeq	fp, r2, r8, asr #2
   1dd04:	andeq	r2, r2, ip, lsr sp
   1dd08:	andeq	r2, r2, r0, asr #25
   1dd0c:	andeq	r2, r2, r4, lsl sp
   1dd10:	ldrdeq	sl, [r2], -r0
   1dd14:	strdeq	fp, [r2], -r4
   1dd18:	andeq	r2, r2, r8, lsr #27
   1dd1c:			; <UNDEFINED> instruction: 0x00022cbc
   1dd20:	andeq	r2, r2, r0, asr #24
   1dd24:	muleq	r2, r4, ip
   1dd28:	andeq	sl, r2, r0, asr sp
   1dd2c:	andeq	fp, r2, r4, ror r0
   1dd30:	andeq	r2, r2, r8, ror #24
   1dd34:	andeq	r2, r2, ip, ror #23
   1dd38:	andeq	r2, r2, r0, asr #24
   1dd3c:	strdeq	sl, [r2], -ip
   1dd40:	andeq	fp, r2, r0, lsr #32
   1dd44:	andeq	r0, r0, r0, lsr #1
   1dd48:	andeq	r2, r2, r4, lsl ip
   1dd4c:	muleq	r2, r8, fp
   1dd50:	andeq	r2, r2, ip, ror #23
   1dd54:	andeq	sl, r2, r8, lsr #25
   1dd58:	andeq	sl, r2, ip, asr #31
   1dd5c:	ldr	r2, [pc, #-380]	; 1dbe8 <__flatcc_gen_sort@@Base+0x22e8>
   1dd60:	add	r2, pc, r2
   1dd64:	str	r2, [sp, #84]	; 0x54
   1dd68:	ldr	r2, [pc, #-388]	; 1dbec <__flatcc_gen_sort@@Base+0x22ec>
   1dd6c:	add	r2, pc, r2
   1dd70:	str	r2, [sp, #88]	; 0x58
   1dd74:	ldr	r2, [pc, #-396]	; 1dbf0 <__flatcc_gen_sort@@Base+0x22f0>
   1dd78:	add	r2, pc, r2
   1dd7c:	str	r2, [sp, #80]	; 0x50
   1dd80:	b	1d200 <__flatcc_gen_sort@@Base+0x1900>
   1dd84:	ldr	r2, [pc, #-408]	; 1dbf4 <__flatcc_gen_sort@@Base+0x22f4>
   1dd88:	add	r2, pc, r2
   1dd8c:	str	r2, [sp, #84]	; 0x54
   1dd90:	ldr	r2, [pc, #-416]	; 1dbf8 <__flatcc_gen_sort@@Base+0x22f8>
   1dd94:	add	r2, pc, r2
   1dd98:	str	r2, [sp, #88]	; 0x58
   1dd9c:	ldr	r2, [pc, #-424]	; 1dbfc <__flatcc_gen_sort@@Base+0x22fc>
   1dda0:	add	r2, pc, r2
   1dda4:	str	r2, [sp, #80]	; 0x50
   1dda8:	b	1d234 <__flatcc_gen_sort@@Base+0x1934>
   1ddac:	ldr	r3, [pc, #-436]	; 1dc00 <__flatcc_gen_sort@@Base+0x2300>
   1ddb0:	add	r3, pc, r3
   1ddb4:	str	r3, [sp, #84]	; 0x54
   1ddb8:	ldr	r3, [pc, #-444]	; 1dc04 <__flatcc_gen_sort@@Base+0x2304>
   1ddbc:	add	r3, pc, r3
   1ddc0:	str	r3, [sp, #88]	; 0x58
   1ddc4:	b	1d088 <__flatcc_gen_sort@@Base+0x1788>
   1ddc8:	ldr	r2, [pc, #-456]	; 1dc08 <__flatcc_gen_sort@@Base+0x2308>
   1ddcc:	add	r2, pc, r2
   1ddd0:	str	r2, [sp, #84]	; 0x54
   1ddd4:	ldr	r2, [pc, #-464]	; 1dc0c <__flatcc_gen_sort@@Base+0x230c>
   1ddd8:	add	r2, pc, r2
   1dddc:	str	r2, [sp, #88]	; 0x58
   1dde0:	ldr	r2, [pc, #-472]	; 1dc10 <__flatcc_gen_sort@@Base+0x2310>
   1dde4:	add	r2, pc, r2
   1dde8:	str	r2, [sp, #80]	; 0x50
   1ddec:	b	1d200 <__flatcc_gen_sort@@Base+0x1900>
   1ddf0:	ldr	r2, [pc, #-484]	; 1dc14 <__flatcc_gen_sort@@Base+0x2314>
   1ddf4:	add	r2, pc, r2
   1ddf8:	str	r2, [sp, #84]	; 0x54
   1ddfc:	ldr	r2, [pc, #-492]	; 1dc18 <__flatcc_gen_sort@@Base+0x2318>
   1de00:	add	r2, pc, r2
   1de04:	str	r2, [sp, #88]	; 0x58
   1de08:	ldr	r2, [pc, #-500]	; 1dc1c <__flatcc_gen_sort@@Base+0x231c>
   1de0c:	add	r2, pc, r2
   1de10:	str	r2, [sp, #80]	; 0x50
   1de14:	b	1d200 <__flatcc_gen_sort@@Base+0x1900>
   1de18:	ldr	r2, [pc, #-512]	; 1dc20 <__flatcc_gen_sort@@Base+0x2320>
   1de1c:	add	r2, pc, r2
   1de20:	str	r2, [sp, #84]	; 0x54
   1de24:	ldr	r2, [pc, #-520]	; 1dc24 <__flatcc_gen_sort@@Base+0x2324>
   1de28:	add	r2, pc, r2
   1de2c:	str	r2, [sp, #88]	; 0x58
   1de30:	ldr	r2, [pc, #-528]	; 1dc28 <__flatcc_gen_sort@@Base+0x2328>
   1de34:	add	r2, pc, r2
   1de38:	str	r2, [sp, #80]	; 0x50
   1de3c:	b	1d234 <__flatcc_gen_sort@@Base+0x1934>
   1de40:	ldr	r3, [pc, #-540]	; 1dc2c <__flatcc_gen_sort@@Base+0x232c>
   1de44:	add	r3, pc, r3
   1de48:	str	r3, [sp, #84]	; 0x54
   1de4c:	ldr	r3, [pc, #-548]	; 1dc30 <__flatcc_gen_sort@@Base+0x2330>
   1de50:	add	r3, pc, r3
   1de54:	str	r3, [sp, #88]	; 0x58
   1de58:	b	1d088 <__flatcc_gen_sort@@Base+0x1788>
   1de5c:	ldr	r2, [pc, #-560]	; 1dc34 <__flatcc_gen_sort@@Base+0x2334>
   1de60:	add	r2, pc, r2
   1de64:	b	1d75c <__flatcc_gen_sort@@Base+0x1e5c>
   1de68:	ldr	r2, [pc, #-568]	; 1dc38 <__flatcc_gen_sort@@Base+0x2338>
   1de6c:	add	r2, pc, r2
   1de70:	b	1d75c <__flatcc_gen_sort@@Base+0x1e5c>
   1de74:	ldr	r2, [pc, #-576]	; 1dc3c <__flatcc_gen_sort@@Base+0x233c>
   1de78:	add	r2, pc, r2
   1de7c:	b	1d75c <__flatcc_gen_sort@@Base+0x1e5c>
   1de80:	ldr	r2, [pc, #-584]	; 1dc40 <__flatcc_gen_sort@@Base+0x2340>
   1de84:	add	r2, pc, r2
   1de88:	b	1d75c <__flatcc_gen_sort@@Base+0x1e5c>
   1de8c:	ldr	r2, [pc, #-592]	; 1dc44 <__flatcc_gen_sort@@Base+0x2344>
   1de90:	add	r2, pc, r2
   1de94:	b	1d75c <__flatcc_gen_sort@@Base+0x1e5c>
   1de98:	ldr	r2, [pc, #-600]	; 1dc48 <__flatcc_gen_sort@@Base+0x2348>
   1de9c:	add	r2, pc, r2
   1dea0:	b	1d75c <__flatcc_gen_sort@@Base+0x1e5c>
   1dea4:	ldr	r2, [pc, #-608]	; 1dc4c <__flatcc_gen_sort@@Base+0x234c>
   1dea8:	add	r2, pc, r2
   1deac:	b	1d75c <__flatcc_gen_sort@@Base+0x1e5c>
   1deb0:	ldr	r2, [pc, #-372]	; 1dd44 <__flatcc_gen_sort@@Base+0x2444>
   1deb4:	ldr	r3, [pc, #-620]	; 1dc50 <__flatcc_gen_sort@@Base+0x2350>
   1deb8:	ldr	r4, [pc, #-620]	; 1dc54 <__flatcc_gen_sort@@Base+0x2354>
   1debc:	ldr	r1, [fp, r2]
   1dec0:	add	r3, pc, r3
   1dec4:	str	r3, [sp]
   1dec8:	ldr	r0, [r1]
   1decc:	ldr	r1, [pc, #-636]	; 1dc58 <__flatcc_gen_sort@@Base+0x2358>
   1ded0:	add	r4, pc, r4
   1ded4:	mov	r2, r4
   1ded8:	mov	r3, #226	; 0xe2
   1dedc:	add	r1, pc, r1
   1dee0:	bl	1408c <fprintf@plt>
   1dee4:	ldr	r3, [pc, #-656]	; 1dc5c <__flatcc_gen_sort@@Base+0x235c>
   1dee8:	ldr	r0, [pc, #-656]	; 1dc60 <__flatcc_gen_sort@@Base+0x2360>
   1deec:	add	r3, pc, r3
   1def0:	mov	r1, r4
   1def4:	add	r3, r3, #116	; 0x74
   1def8:	mov	r2, #226	; 0xe2
   1defc:	add	r0, pc, r0
   1df00:	bl	14140 <__assert_fail@plt>
   1df04:	ldr	r2, [pc, #-680]	; 1dc64 <__flatcc_gen_sort@@Base+0x2364>
   1df08:	add	r2, pc, r2
   1df0c:	ldrd	r0, [r4, #48]	; 0x30
   1df10:	add	r3, sp, #100	; 0x64
   1df14:	str	r3, [sp, #92]	; 0x5c
   1df18:	strd	r0, [sp]
   1df1c:	ldr	r1, [pc, #-700]	; 1dc68 <__flatcc_gen_sort@@Base+0x2368>
   1df20:	mov	r0, r3
   1df24:	add	r1, pc, r1
   1df28:	bl	140f8 <sprintf@plt>
   1df2c:	b	1d5b0 <__flatcc_gen_sort@@Base+0x1cb0>
   1df30:	ldr	r2, [pc, #-716]	; 1dc6c <__flatcc_gen_sort@@Base+0x236c>
   1df34:	add	r2, pc, r2
   1df38:	b	1df0c <__flatcc_gen_sort@@Base+0x260c>
   1df3c:	ldr	r2, [pc, #-724]	; 1dc70 <__flatcc_gen_sort@@Base+0x2370>
   1df40:	add	r2, pc, r2
   1df44:	b	1df0c <__flatcc_gen_sort@@Base+0x260c>
   1df48:	ldr	r2, [pc, #-732]	; 1dc74 <__flatcc_gen_sort@@Base+0x2374>
   1df4c:	add	r2, pc, r2
   1df50:	b	1df0c <__flatcc_gen_sort@@Base+0x260c>
   1df54:	ldr	r2, [pc, #-740]	; 1dc78 <__flatcc_gen_sort@@Base+0x2378>
   1df58:	add	r2, pc, r2
   1df5c:	b	1df0c <__flatcc_gen_sort@@Base+0x260c>
   1df60:	ldr	r2, [pc, #-748]	; 1dc7c <__flatcc_gen_sort@@Base+0x237c>
   1df64:	add	r2, pc, r2
   1df68:	b	1df0c <__flatcc_gen_sort@@Base+0x260c>
   1df6c:	ldr	r2, [pc, #-756]	; 1dc80 <__flatcc_gen_sort@@Base+0x2380>
   1df70:	add	r2, pc, r2
   1df74:	b	1df0c <__flatcc_gen_sort@@Base+0x260c>
   1df78:	ldr	r2, [pc, #-764]	; 1dc84 <__flatcc_gen_sort@@Base+0x2384>
   1df7c:	add	r2, pc, r2
   1df80:	b	1df0c <__flatcc_gen_sort@@Base+0x260c>
   1df84:	ldr	r2, [pc, #-772]	; 1dc88 <__flatcc_gen_sort@@Base+0x2388>
   1df88:	add	r2, pc, r2
   1df8c:	b	1df0c <__flatcc_gen_sort@@Base+0x260c>
   1df90:	ldr	r2, [pc, #-780]	; 1dc8c <__flatcc_gen_sort@@Base+0x238c>
   1df94:	add	r2, pc, r2
   1df98:	ldr	r1, [pc, #-784]	; 1dc90 <__flatcc_gen_sort@@Base+0x2390>
   1df9c:	add	r3, sp, #100	; 0x64
   1dfa0:	str	r3, [sp, #92]	; 0x5c
   1dfa4:	mov	r0, r3
   1dfa8:	add	r1, pc, r1
   1dfac:	ldrb	r3, [r4, #48]	; 0x30
   1dfb0:	bl	140f8 <sprintf@plt>
   1dfb4:	b	1d5b0 <__flatcc_gen_sort@@Base+0x1cb0>
   1dfb8:	ldr	r2, [pc, #-812]	; 1dc94 <__flatcc_gen_sort@@Base+0x2394>
   1dfbc:	add	r2, pc, r2
   1dfc0:	b	1df98 <__flatcc_gen_sort@@Base+0x2698>
   1dfc4:	ldr	r2, [pc, #-820]	; 1dc98 <__flatcc_gen_sort@@Base+0x2398>
   1dfc8:	add	r2, pc, r2
   1dfcc:	b	1df98 <__flatcc_gen_sort@@Base+0x2698>
   1dfd0:	ldr	r2, [pc, #-828]	; 1dc9c <__flatcc_gen_sort@@Base+0x239c>
   1dfd4:	add	r2, pc, r2
   1dfd8:	b	1df98 <__flatcc_gen_sort@@Base+0x2698>
   1dfdc:	ldr	r2, [pc, #-836]	; 1dca0 <__flatcc_gen_sort@@Base+0x23a0>
   1dfe0:	add	r2, pc, r2
   1dfe4:	b	1df98 <__flatcc_gen_sort@@Base+0x2698>
   1dfe8:	ldr	r2, [pc, #-844]	; 1dca4 <__flatcc_gen_sort@@Base+0x23a4>
   1dfec:	add	r2, pc, r2
   1dff0:	b	1df98 <__flatcc_gen_sort@@Base+0x2698>
   1dff4:	ldr	r2, [pc, #-852]	; 1dca8 <__flatcc_gen_sort@@Base+0x23a8>
   1dff8:	add	r2, pc, r2
   1dffc:	b	1df98 <__flatcc_gen_sort@@Base+0x2698>
   1e000:	ldr	r2, [pc, #-860]	; 1dcac <__flatcc_gen_sort@@Base+0x23ac>
   1e004:	add	r2, pc, r2
   1e008:	b	1df98 <__flatcc_gen_sort@@Base+0x2698>
   1e00c:	ldr	r2, [pc, #-868]	; 1dcb0 <__flatcc_gen_sort@@Base+0x23b0>
   1e010:	add	r2, pc, r2
   1e014:	b	1df98 <__flatcc_gen_sort@@Base+0x2698>
   1e018:	ldr	r2, [pc, #-876]	; 1dcb4 <__flatcc_gen_sort@@Base+0x23b4>
   1e01c:	add	r2, pc, r2
   1e020:	ldrd	r0, [r4, #48]	; 0x30
   1e024:	add	r3, sp, #100	; 0x64
   1e028:	str	r3, [sp, #92]	; 0x5c
   1e02c:	strd	r0, [sp]
   1e030:	ldr	r1, [pc, #-896]	; 1dcb8 <__flatcc_gen_sort@@Base+0x23b8>
   1e034:	mov	r0, r3
   1e038:	add	r1, pc, r1
   1e03c:	bl	140f8 <sprintf@plt>
   1e040:	b	1d5b0 <__flatcc_gen_sort@@Base+0x1cb0>
   1e044:	ldr	r2, [pc, #-912]	; 1dcbc <__flatcc_gen_sort@@Base+0x23bc>
   1e048:	add	r2, pc, r2
   1e04c:	b	1e020 <__flatcc_gen_sort@@Base+0x2720>
   1e050:	ldr	r2, [pc, #-920]	; 1dcc0 <__flatcc_gen_sort@@Base+0x23c0>
   1e054:	add	r2, pc, r2
   1e058:	b	1e020 <__flatcc_gen_sort@@Base+0x2720>
   1e05c:	ldr	r2, [pc, #-928]	; 1dcc4 <__flatcc_gen_sort@@Base+0x23c4>
   1e060:	add	r2, pc, r2
   1e064:	b	1e020 <__flatcc_gen_sort@@Base+0x2720>
   1e068:	ldr	r2, [pc, #-936]	; 1dcc8 <__flatcc_gen_sort@@Base+0x23c8>
   1e06c:	add	r2, pc, r2
   1e070:	b	1e020 <__flatcc_gen_sort@@Base+0x2720>
   1e074:	ldr	r2, [pc, #-944]	; 1dccc <__flatcc_gen_sort@@Base+0x23cc>
   1e078:	add	r2, pc, r2
   1e07c:	b	1e020 <__flatcc_gen_sort@@Base+0x2720>
   1e080:	ldr	r2, [pc, #-952]	; 1dcd0 <__flatcc_gen_sort@@Base+0x23d0>
   1e084:	add	r2, pc, r2
   1e088:	b	1e020 <__flatcc_gen_sort@@Base+0x2720>
   1e08c:	ldr	r2, [pc, #-960]	; 1dcd4 <__flatcc_gen_sort@@Base+0x23d4>
   1e090:	add	r2, pc, r2
   1e094:	b	1e020 <__flatcc_gen_sort@@Base+0x2720>
   1e098:	ldr	r2, [pc, #-968]	; 1dcd8 <__flatcc_gen_sort@@Base+0x23d8>
   1e09c:	add	r2, pc, r2
   1e0a0:	b	1e020 <__flatcc_gen_sort@@Base+0x2720>
   1e0a4:	ldr	r3, [r5, #204]	; 0xcc
   1e0a8:	mov	r2, #32
   1e0ac:	mov	r1, #1
   1e0b0:	ldr	r0, [sp, #76]	; 0x4c
   1e0b4:	bl	14014 <fwrite@plt>
   1e0b8:	b	1ce24 <__flatcc_gen_sort@@Base+0x1524>
   1e0bc:	ldr	r3, [r5, #204]	; 0xcc
   1e0c0:	mov	r2, #32
   1e0c4:	mov	r1, #1
   1e0c8:	ldr	r0, [sp, #72]	; 0x48
   1e0cc:	bl	14014 <fwrite@plt>
   1e0d0:	b	1ce64 <__flatcc_gen_sort@@Base+0x1564>
   1e0d4:	ldr	r2, [pc, #-920]	; 1dd44 <__flatcc_gen_sort@@Base+0x2444>
   1e0d8:	ldr	r3, [pc, #-1028]	; 1dcdc <__flatcc_gen_sort@@Base+0x23dc>
   1e0dc:	ldr	r4, [pc, #-1028]	; 1dce0 <__flatcc_gen_sort@@Base+0x23e0>
   1e0e0:	ldr	r1, [fp, r2]
   1e0e4:	add	r3, pc, r3
   1e0e8:	str	r3, [sp]
   1e0ec:	ldr	r0, [r1]
   1e0f0:	ldr	r1, [pc, #-1044]	; 1dce4 <__flatcc_gen_sort@@Base+0x23e4>
   1e0f4:	add	r4, pc, r4
   1e0f8:	mov	r2, r4
   1e0fc:	mov	r3, #260	; 0x104
   1e100:	add	r1, pc, r1
   1e104:	bl	1408c <fprintf@plt>
   1e108:	ldr	r3, [pc, #-1064]	; 1dce8 <__flatcc_gen_sort@@Base+0x23e8>
   1e10c:	ldr	r0, [pc, #-1064]	; 1dcec <__flatcc_gen_sort@@Base+0x23ec>
   1e110:	add	r3, pc, r3
   1e114:	mov	r1, r4
   1e118:	add	r3, r3, #128	; 0x80
   1e11c:	mov	r2, #260	; 0x104
   1e120:	add	r0, pc, r0
   1e124:	bl	14140 <__assert_fail@plt>
   1e128:	ldr	r2, [pc, #-1004]	; 1dd44 <__flatcc_gen_sort@@Base+0x2444>
   1e12c:	ldr	r3, [pc, #-1092]	; 1dcf0 <__flatcc_gen_sort@@Base+0x23f0>
   1e130:	ldr	r4, [pc, #-1092]	; 1dcf4 <__flatcc_gen_sort@@Base+0x23f4>
   1e134:	ldr	r1, [fp, r2]
   1e138:	add	r3, pc, r3
   1e13c:	str	r3, [sp]
   1e140:	ldr	r0, [r1]
   1e144:	ldr	r1, [pc, #-1108]	; 1dcf8 <__flatcc_gen_sort@@Base+0x23f8>
   1e148:	add	r4, pc, r4
   1e14c:	mov	r2, r4
   1e150:	mov	r3, #226	; 0xe2
   1e154:	add	r1, pc, r1
   1e158:	bl	1408c <fprintf@plt>
   1e15c:	ldr	r3, [pc, #-1128]	; 1dcfc <__flatcc_gen_sort@@Base+0x23fc>
   1e160:	ldr	r0, [pc, #-1128]	; 1dd00 <__flatcc_gen_sort@@Base+0x2400>
   1e164:	add	r3, pc, r3
   1e168:	mov	r1, r4
   1e16c:	add	r3, r3, #116	; 0x74
   1e170:	mov	r2, #226	; 0xe2
   1e174:	add	r0, pc, r0
   1e178:	bl	14140 <__assert_fail@plt>
   1e17c:	ldr	r2, [pc, #-1088]	; 1dd44 <__flatcc_gen_sort@@Base+0x2444>
   1e180:	ldr	r3, [pc, #-1156]	; 1dd04 <__flatcc_gen_sort@@Base+0x2404>
   1e184:	ldr	r4, [pc, #-1156]	; 1dd08 <__flatcc_gen_sort@@Base+0x2408>
   1e188:	ldr	r1, [fp, r2]
   1e18c:	add	r3, pc, r3
   1e190:	str	r3, [sp]
   1e194:	ldr	r0, [r1]
   1e198:	ldr	r1, [pc, #-1172]	; 1dd0c <__flatcc_gen_sort@@Base+0x240c>
   1e19c:	add	r4, pc, r4
   1e1a0:	mov	r2, r4
   1e1a4:	mov	r3, #226	; 0xe2
   1e1a8:	add	r1, pc, r1
   1e1ac:	bl	1408c <fprintf@plt>
   1e1b0:	ldr	r3, [pc, #-1192]	; 1dd10 <__flatcc_gen_sort@@Base+0x2410>
   1e1b4:	ldr	r0, [pc, #-1192]	; 1dd14 <__flatcc_gen_sort@@Base+0x2414>
   1e1b8:	add	r3, pc, r3
   1e1bc:	mov	r1, r4
   1e1c0:	add	r3, r3, #116	; 0x74
   1e1c4:	mov	r2, #226	; 0xe2
   1e1c8:	add	r0, pc, r0
   1e1cc:	bl	14140 <__assert_fail@plt>
   1e1d0:	vldr	d7, [r4, #48]	; 0x30
   1e1d4:	ldr	r1, [pc, #-1220]	; 1dd18 <__flatcc_gen_sort@@Base+0x2418>
   1e1d8:	add	r3, sp, #100	; 0x64
   1e1dc:	str	r3, [sp, #92]	; 0x5c
   1e1e0:	vcvt.f32.f64	s14, d7
   1e1e4:	mov	r0, r3
   1e1e8:	add	r1, pc, r1
   1e1ec:	vcvt.f64.f32	d7, s14
   1e1f0:	vmov	r2, r3, d7
   1e1f4:	bl	140f8 <sprintf@plt>
   1e1f8:	b	1d5b0 <__flatcc_gen_sort@@Base+0x1cb0>
   1e1fc:	ldr	r2, [pc, #-1216]	; 1dd44 <__flatcc_gen_sort@@Base+0x2444>
   1e200:	ldr	r3, [pc, #-1260]	; 1dd1c <__flatcc_gen_sort@@Base+0x241c>
   1e204:	ldr	r4, [pc, #-1260]	; 1dd20 <__flatcc_gen_sort@@Base+0x2420>
   1e208:	ldr	r1, [fp, r2]
   1e20c:	add	r3, pc, r3
   1e210:	str	r3, [sp]
   1e214:	ldr	r0, [r1]
   1e218:	ldr	r1, [pc, #-1276]	; 1dd24 <__flatcc_gen_sort@@Base+0x2424>
   1e21c:	add	r4, pc, r4
   1e220:	mov	r2, r4
   1e224:	mov	r3, #226	; 0xe2
   1e228:	add	r1, pc, r1
   1e22c:	bl	1408c <fprintf@plt>
   1e230:	ldr	r3, [pc, #-1296]	; 1dd28 <__flatcc_gen_sort@@Base+0x2428>
   1e234:	ldr	r0, [pc, #-1296]	; 1dd2c <__flatcc_gen_sort@@Base+0x242c>
   1e238:	add	r3, pc, r3
   1e23c:	mov	r1, r4
   1e240:	add	r3, r3, #116	; 0x74
   1e244:	mov	r2, #226	; 0xe2
   1e248:	add	r0, pc, r0
   1e24c:	bl	14140 <__assert_fail@plt>
   1e250:	ldr	r2, [pc, #-1300]	; 1dd44 <__flatcc_gen_sort@@Base+0x2444>
   1e254:	ldr	r3, [pc, #-1324]	; 1dd30 <__flatcc_gen_sort@@Base+0x2430>
   1e258:	ldr	r4, [pc, #-1324]	; 1dd34 <__flatcc_gen_sort@@Base+0x2434>
   1e25c:	ldr	r1, [fp, r2]
   1e260:	add	r3, pc, r3
   1e264:	str	r3, [sp]
   1e268:	ldr	r0, [r1]
   1e26c:	ldr	r1, [pc, #-1340]	; 1dd38 <__flatcc_gen_sort@@Base+0x2438>
   1e270:	add	r4, pc, r4
   1e274:	mov	r2, r4
   1e278:	mov	r3, #226	; 0xe2
   1e27c:	add	r1, pc, r1
   1e280:	bl	1408c <fprintf@plt>
   1e284:	ldr	r3, [pc, #-1360]	; 1dd3c <__flatcc_gen_sort@@Base+0x243c>
   1e288:	ldr	r0, [pc, #-1360]	; 1dd40 <__flatcc_gen_sort@@Base+0x2440>
   1e28c:	add	r3, pc, r3
   1e290:	mov	r1, r4
   1e294:	add	r3, r3, #116	; 0x74
   1e298:	mov	r2, #226	; 0xe2
   1e29c:	add	r0, pc, r0
   1e2a0:	bl	14140 <__assert_fail@plt>
   1e2a4:	ldr	r2, [pc, #-1384]	; 1dd44 <__flatcc_gen_sort@@Base+0x2444>
   1e2a8:	ldr	r3, [pc, #-1384]	; 1dd48 <__flatcc_gen_sort@@Base+0x2448>
   1e2ac:	ldr	r4, [pc, #-1384]	; 1dd4c <__flatcc_gen_sort@@Base+0x244c>
   1e2b0:	ldr	r1, [fp, r2]
   1e2b4:	add	r3, pc, r3
   1e2b8:	str	r3, [sp]
   1e2bc:	ldr	r0, [r1]
   1e2c0:	ldr	r1, [pc, #-1400]	; 1dd50 <__flatcc_gen_sort@@Base+0x2450>
   1e2c4:	add	r4, pc, r4
   1e2c8:	mov	r2, r4
   1e2cc:	mov	r3, #226	; 0xe2
   1e2d0:	add	r1, pc, r1
   1e2d4:	bl	1408c <fprintf@plt>
   1e2d8:	ldr	r3, [pc, #-1420]	; 1dd54 <__flatcc_gen_sort@@Base+0x2454>
   1e2dc:	ldr	r0, [pc, #-1420]	; 1dd58 <__flatcc_gen_sort@@Base+0x2458>
   1e2e0:	add	r3, pc, r3
   1e2e4:	mov	r1, r4
   1e2e8:	add	r3, r3, #116	; 0x74
   1e2ec:	mov	r2, #226	; 0xe2
   1e2f0:	add	r0, pc, r0
   1e2f4:	bl	14140 <__assert_fail@plt>
   1e2f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e2fc:	sub	sp, sp, #524	; 0x20c
   1e300:	mov	sl, r0
   1e304:	add	r9, sp, #300	; 0x12c
   1e308:	mov	r2, #220	; 0xdc
   1e30c:	mov	r0, r9
   1e310:	mov	r1, #0
   1e314:	bl	140a4 <memset@plt>
   1e318:	ldr	r3, [sl, #208]	; 0xd0
   1e31c:	ldr	r2, [pc, #3932]	; 1f280 <__flatcc_gen_sort@@Base+0x3980>
   1e320:	ldr	fp, [r3, #40]	; 0x28
   1e324:	add	r2, pc, r2
   1e328:	cmp	fp, #0
   1e32c:	str	r2, [sp, #56]	; 0x38
   1e330:	beq	1e5fc <__flatcc_gen_sort@@Base+0x2cfc>
   1e334:	ldr	r6, [pc, #3912]	; 1f284 <__flatcc_gen_sort@@Base+0x3984>
   1e338:	mov	r2, #0
   1e33c:	add	r6, pc, r6
   1e340:	mov	r5, #1
   1e344:	b	1e354 <__flatcc_gen_sort@@Base+0x2a54>
   1e348:	ldr	fp, [fp]
   1e34c:	cmp	fp, #0
   1e350:	beq	1e39c <__flatcc_gen_sort@@Base+0x2a9c>
   1e354:	ldrh	r3, [fp, #8]
   1e358:	cmp	r3, #4
   1e35c:	bne	1e348 <__flatcc_gen_sort@@Base+0x2a48>
   1e360:	mov	r1, fp
   1e364:	ldr	r0, [fp, #12]
   1e368:	mov	r2, r9
   1e36c:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   1e370:	ldr	r0, [sl, #204]	; 0xcc
   1e374:	mov	r2, sl
   1e378:	str	r9, [sp, #4]
   1e37c:	str	sl, [sp]
   1e380:	mov	r3, r9
   1e384:	mov	r1, r6
   1e388:	bl	1408c <fprintf@plt>
   1e38c:	ldr	fp, [fp]
   1e390:	mov	r2, r5
   1e394:	cmp	fp, #0
   1e398:	bne	1e354 <__flatcc_gen_sort@@Base+0x2a54>
   1e39c:	cmp	r2, #0
   1e3a0:	beq	1e3b0 <__flatcc_gen_sort@@Base+0x2ab0>
   1e3a4:	ldr	r1, [sl, #204]	; 0xcc
   1e3a8:	mov	r0, #10
   1e3ac:	bl	140ec <fputc@plt>
   1e3b0:	ldr	r3, [sl, #208]	; 0xd0
   1e3b4:	ldr	r6, [r3, #40]	; 0x28
   1e3b8:	cmp	r6, #0
   1e3bc:	beq	1f278 <__flatcc_gen_sort@@Base+0x3978>
   1e3c0:	ldr	r3, [pc, #3776]	; 1f288 <__flatcc_gen_sort@@Base+0x3988>
   1e3c4:	ldr	r8, [pc, #3776]	; 1f28c <__flatcc_gen_sort@@Base+0x398c>
   1e3c8:	add	r3, pc, r3
   1e3cc:	str	r3, [sp, #36]	; 0x24
   1e3d0:	ldr	r3, [pc, #3768]	; 1f290 <__flatcc_gen_sort@@Base+0x3990>
   1e3d4:	add	r8, pc, r8
   1e3d8:	add	r3, pc, r3
   1e3dc:	str	r3, [sp, #40]	; 0x28
   1e3e0:	ldr	r3, [pc, #3756]	; 1f294 <__flatcc_gen_sort@@Base+0x3994>
   1e3e4:	mov	fp, #0
   1e3e8:	add	r3, pc, r3
   1e3ec:	str	r3, [sp, #52]	; 0x34
   1e3f0:	ldr	r3, [pc, #3744]	; 1f298 <__flatcc_gen_sort@@Base+0x3998>
   1e3f4:	add	r3, pc, r3
   1e3f8:	str	r3, [sp, #48]	; 0x30
   1e3fc:	ldr	r3, [pc, #3736]	; 1f29c <__flatcc_gen_sort@@Base+0x399c>
   1e400:	add	r3, pc, r3
   1e404:	str	r3, [sp, #60]	; 0x3c
   1e408:	b	1e418 <__flatcc_gen_sort@@Base+0x2b18>
   1e40c:	ldr	r6, [r6]
   1e410:	cmp	r6, #0
   1e414:	beq	1e578 <__flatcc_gen_sort@@Base+0x2c78>
   1e418:	ldrh	r5, [r6, #8]
   1e41c:	cmp	r5, #0
   1e420:	bne	1e40c <__flatcc_gen_sort@@Base+0x2b0c>
   1e424:	mov	r2, #220	; 0xdc
   1e428:	mov	r1, r5
   1e42c:	mov	r0, r9
   1e430:	bl	140a4 <memset@plt>
   1e434:	ldr	r3, [r6, #20]
   1e438:	cmp	r3, #0
   1e43c:	beq	1ec40 <__flatcc_gen_sort@@Base+0x3340>
   1e440:	ldrh	r2, [r3, #72]	; 0x48
   1e444:	ldr	r3, [r3]
   1e448:	tst	r2, #4
   1e44c:	addeq	r5, r5, #1
   1e450:	cmp	r3, #0
   1e454:	bne	1e440 <__flatcc_gen_sort@@Base+0x2b40>
   1e458:	mov	r2, r9
   1e45c:	mov	r1, r6
   1e460:	ldr	r0, [r6, #12]
   1e464:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   1e468:	mov	r3, r9
   1e46c:	mov	r2, sl
   1e470:	ldr	r1, [sp, #36]	; 0x24
   1e474:	ldr	r0, [sl, #204]	; 0xcc
   1e478:	bl	1408c <fprintf@plt>
   1e47c:	ldr	r4, [r6, #20]
   1e480:	cmp	r4, #0
   1e484:	beq	1e84c <__flatcc_gen_sort@@Base+0x2f4c>
   1e488:	ldr	r3, [pc, #3600]	; 1f2a0 <__flatcc_gen_sort@@Base+0x39a0>
   1e48c:	mov	r7, #0
   1e490:	mov	fp, #32
   1e494:	add	r3, pc, r3
   1e498:	str	r3, [sp, #44]	; 0x2c
   1e49c:	ldrh	r3, [r4, #72]	; 0x48
   1e4a0:	tst	r3, #4
   1e4a4:	bne	1e4fc <__flatcc_gen_sort@@Base+0x2bfc>
   1e4a8:	tst	r3, #256	; 0x100
   1e4ac:	beq	1e4fc <__flatcc_gen_sort@@Base+0x2bfc>
   1e4b0:	cmp	r7, #0
   1e4b4:	beq	1e83c <__flatcc_gen_sort@@Base+0x2f3c>
   1e4b8:	cmp	r5, #0
   1e4bc:	beq	1e4e8 <__flatcc_gen_sort@@Base+0x2be8>
   1e4c0:	tst	r7, #3
   1e4c4:	bne	1e4d4 <__flatcc_gen_sort@@Base+0x2bd4>
   1e4c8:	sub	r3, r5, r7
   1e4cc:	cmp	r3, #2
   1e4d0:	bgt	1e9a4 <__flatcc_gen_sort@@Base+0x30a4>
   1e4d4:	ldr	r3, [sl, #204]	; 0xcc
   1e4d8:	mov	r2, #2
   1e4dc:	mov	r1, #1
   1e4e0:	ldr	r0, [sp, #48]	; 0x30
   1e4e4:	bl	14014 <fwrite@plt>
   1e4e8:	ldr	r2, [r4, #96]	; 0x60
   1e4ec:	mov	r1, r8
   1e4f0:	ldr	r0, [sl, #204]	; 0xcc
   1e4f4:	bl	1408c <fprintf@plt>
   1e4f8:	add	r7, r7, #1
   1e4fc:	ldr	r4, [r4]
   1e500:	cmp	r4, #0
   1e504:	bne	1e49c <__flatcc_gen_sort@@Base+0x2b9c>
   1e508:	cmp	r7, #0
   1e50c:	beq	1e84c <__flatcc_gen_sort@@Base+0x2f4c>
   1e510:	ldr	r0, [pc, #3468]	; 1f2a4 <__flatcc_gen_sort@@Base+0x39a4>
   1e514:	ldr	r3, [sl, #204]	; 0xcc
   1e518:	mov	r2, #7
   1e51c:	mov	r1, #1
   1e520:	add	r0, pc, r0
   1e524:	bl	14014 <fwrite@plt>
   1e528:	mov	r2, #220	; 0xdc
   1e52c:	mov	r1, #0
   1e530:	mov	r0, r9
   1e534:	bl	140a4 <memset@plt>
   1e538:	mov	r1, r6
   1e53c:	ldr	r0, [r6, #12]
   1e540:	mov	r2, r9
   1e544:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   1e548:	ldrd	r2, [r6, #96]	; 0x60
   1e54c:	ldr	r0, [sl, #204]	; 0xcc
   1e550:	ldr	r1, [sp, #40]	; 0x28
   1e554:	strd	r2, [sp, #8]
   1e558:	str	r9, [sp]
   1e55c:	mov	r3, sl
   1e560:	mov	r2, sl
   1e564:	bl	1408c <fprintf@plt>
   1e568:	ldr	r6, [r6]
   1e56c:	mov	fp, #1
   1e570:	cmp	r6, #0
   1e574:	bne	1e418 <__flatcc_gen_sort@@Base+0x2b18>
   1e578:	ldr	r3, [sl, #208]	; 0xd0
   1e57c:	ldr	r8, [r3, #40]	; 0x28
   1e580:	cmp	r8, #0
   1e584:	beq	1ee38 <__flatcc_gen_sort@@Base+0x3538>
   1e588:	ldr	r3, [pc, #3352]	; 1f2a8 <__flatcc_gen_sort@@Base+0x39a8>
   1e58c:	str	fp, [sp, #60]	; 0x3c
   1e590:	add	r3, pc, r3
   1e594:	str	r3, [sp, #40]	; 0x28
   1e598:	ldr	r3, [pc, #3340]	; 1f2ac <__flatcc_gen_sort@@Base+0x39ac>
   1e59c:	add	r3, pc, r3
   1e5a0:	str	r3, [sp, #44]	; 0x2c
   1e5a4:	ldr	r3, [pc, #3332]	; 1f2b0 <__flatcc_gen_sort@@Base+0x39b0>
   1e5a8:	add	r3, pc, r3
   1e5ac:	str	r3, [sp, #48]	; 0x30
   1e5b0:	ldr	r3, [pc, #3324]	; 1f2b4 <__flatcc_gen_sort@@Base+0x39b4>
   1e5b4:	add	r3, pc, r3
   1e5b8:	str	r3, [sp, #52]	; 0x34
   1e5bc:	ldr	r3, [pc, #3316]	; 1f2b8 <__flatcc_gen_sort@@Base+0x39b8>
   1e5c0:	add	r3, pc, r3
   1e5c4:	str	r3, [sp, #68]	; 0x44
   1e5c8:	ldr	r3, [pc, #3308]	; 1f2bc <__flatcc_gen_sort@@Base+0x39bc>
   1e5cc:	add	r3, pc, r3
   1e5d0:	str	r3, [sp, #72]	; 0x48
   1e5d4:	ldrh	r4, [r8, #8]
   1e5d8:	cmp	r4, #0
   1e5dc:	beq	1e864 <__flatcc_gen_sort@@Base+0x2f64>
   1e5e0:	ldr	r8, [r8]
   1e5e4:	cmp	r8, #0
   1e5e8:	bne	1e5d4 <__flatcc_gen_sort@@Base+0x2cd4>
   1e5ec:	ldr	fp, [sp, #60]	; 0x3c
   1e5f0:	cmp	fp, #0
   1e5f4:	bne	1ee40 <__flatcc_gen_sort@@Base+0x3540>
   1e5f8:	ldr	r3, [sl, #208]	; 0xd0
   1e5fc:	ldr	r4, [r3, #40]	; 0x28
   1e600:	cmp	r4, #0
   1e604:	beq	1e66c <__flatcc_gen_sort@@Base+0x2d6c>
   1e608:	ldr	r3, [pc, #3248]	; 1f2c0 <__flatcc_gen_sort@@Base+0x39c0>
   1e60c:	ldr	r8, [pc, #3248]	; 1f2c4 <__flatcc_gen_sort@@Base+0x39c4>
   1e610:	add	r3, pc, r3
   1e614:	str	r3, [sp, #36]	; 0x24
   1e618:	ldr	r3, [pc, #3240]	; 1f2c8 <__flatcc_gen_sort@@Base+0x39c8>
   1e61c:	add	r8, pc, r8
   1e620:	add	r3, pc, r3
   1e624:	str	r3, [sp, #40]	; 0x28
   1e628:	ldr	r3, [pc, #3228]	; 1f2cc <__flatcc_gen_sort@@Base+0x39cc>
   1e62c:	mov	r2, #0
   1e630:	add	r6, sp, #80	; 0x50
   1e634:	mov	r7, #220	; 0xdc
   1e638:	add	r3, pc, r3
   1e63c:	str	r3, [sp, #44]	; 0x2c
   1e640:	ldrh	r3, [r4, #8]
   1e644:	cmp	r3, #4
   1e648:	beq	1ec48 <__flatcc_gen_sort@@Base+0x3348>
   1e64c:	ldr	r4, [r4]
   1e650:	cmp	r4, #0
   1e654:	bne	1e640 <__flatcc_gen_sort@@Base+0x2d40>
   1e658:	cmp	r2, #0
   1e65c:	beq	1e66c <__flatcc_gen_sort@@Base+0x2d6c>
   1e660:	ldr	r1, [sl, #204]	; 0xcc
   1e664:	mov	r0, #10
   1e668:	bl	140ec <fputc@plt>
   1e66c:	cmp	fp, #0
   1e670:	beq	1ef94 <__flatcc_gen_sort@@Base+0x3694>
   1e674:	ldr	r3, [sl, #208]	; 0xd0
   1e678:	ldr	r5, [r3, #40]	; 0x28
   1e67c:	cmp	r5, #0
   1e680:	beq	1ef94 <__flatcc_gen_sort@@Base+0x3694>
   1e684:	ldr	r3, [pc, #3140]	; 1f2d0 <__flatcc_gen_sort@@Base+0x39d0>
   1e688:	ldr	r7, [pc, #3140]	; 1f2d4 <__flatcc_gen_sort@@Base+0x39d4>
   1e68c:	add	r3, pc, r3
   1e690:	str	r3, [sp, #44]	; 0x2c
   1e694:	ldr	r3, [pc, #3132]	; 1f2d8 <__flatcc_gen_sort@@Base+0x39d8>
   1e698:	add	r7, pc, r7
   1e69c:	add	r3, pc, r3
   1e6a0:	str	r3, [sp, #48]	; 0x30
   1e6a4:	ldr	r3, [pc, #3120]	; 1f2dc <__flatcc_gen_sort@@Base+0x39dc>
   1e6a8:	str	fp, [sp, #56]	; 0x38
   1e6ac:	add	r3, pc, r3
   1e6b0:	str	r3, [sp, #60]	; 0x3c
   1e6b4:	ldr	r3, [pc, #3108]	; 1f2e0 <__flatcc_gen_sort@@Base+0x39e0>
   1e6b8:	add	r3, pc, r3
   1e6bc:	str	r3, [sp, #64]	; 0x40
   1e6c0:	ldr	r3, [pc, #3100]	; 1f2e4 <__flatcc_gen_sort@@Base+0x39e4>
   1e6c4:	add	r3, pc, r3
   1e6c8:	str	r3, [sp, #52]	; 0x34
   1e6cc:	b	1e6dc <__flatcc_gen_sort@@Base+0x2ddc>
   1e6d0:	ldr	r5, [r5]
   1e6d4:	cmp	r5, #0
   1e6d8:	beq	1ef94 <__flatcc_gen_sort@@Base+0x3694>
   1e6dc:	ldrh	r6, [r5, #8]
   1e6e0:	cmp	r6, #0
   1e6e4:	bne	1e6d0 <__flatcc_gen_sort@@Base+0x2dd0>
   1e6e8:	mov	r1, r5
   1e6ec:	mov	r0, sl
   1e6f0:	bl	1c9d0 <__flatcc_gen_sort@@Base+0x10d0>
   1e6f4:	ldrh	r8, [r5, #92]	; 0x5c
   1e6f8:	mov	r2, #220	; 0xdc
   1e6fc:	mov	r1, r6
   1e700:	ands	r8, r8, #8
   1e704:	mov	r0, r9
   1e708:	moveq	fp, #1
   1e70c:	movne	fp, #0
   1e710:	bl	140a4 <memset@plt>
   1e714:	mov	r2, r9
   1e718:	mov	r1, r5
   1e71c:	ldr	r0, [r5, #12]
   1e720:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   1e724:	ldr	r0, [sl, #204]	; 0xcc
   1e728:	mov	r3, r9
   1e72c:	mov	r2, r9
   1e730:	ldr	r1, [sp, #44]	; 0x2c
   1e734:	str	r9, [sp, #4]
   1e738:	str	sl, [sp]
   1e73c:	bl	1408c <fprintf@plt>
   1e740:	mov	r2, r9
   1e744:	ldr	r1, [sp, #48]	; 0x30
   1e748:	ldr	r0, [sl, #204]	; 0xcc
   1e74c:	bl	1408c <fprintf@plt>
   1e750:	ldr	r4, [r5, #24]
   1e754:	cmp	r4, #0
   1e758:	strne	r8, [sp, #40]	; 0x28
   1e75c:	strne	r9, [sp, #36]	; 0x24
   1e760:	beq	1efa0 <__flatcc_gen_sort@@Base+0x36a0>
   1e764:	ldrh	r3, [r4, #72]	; 0x48
   1e768:	tst	r3, #4
   1e76c:	bne	1e7b0 <__flatcc_gen_sort@@Base+0x2eb0>
   1e770:	ldrh	r2, [r4, #24]
   1e774:	ldr	r3, [r4, #4]
   1e778:	cmp	r2, #14
   1e77c:	ldm	r3, {r2, r3}
   1e780:	bne	1e794 <__flatcc_gen_sort@@Base+0x2e94>
   1e784:	ldr	r1, [r4, #16]
   1e788:	ldrh	r1, [r1, #8]
   1e78c:	cmp	r1, #4
   1e790:	beq	1f030 <__flatcc_gen_sort@@Base+0x3730>
   1e794:	ldrd	r8, [r4, #96]	; 0x60
   1e798:	ldr	r0, [sl, #204]	; 0xcc
   1e79c:	mov	r1, r7
   1e7a0:	str	r2, [sp]
   1e7a4:	strd	r8, [sp, #8]
   1e7a8:	ldr	r2, [sp, #36]	; 0x24
   1e7ac:	bl	1408c <fprintf@plt>
   1e7b0:	ldr	r4, [r4, #108]	; 0x6c
   1e7b4:	cmp	r4, #0
   1e7b8:	bne	1e764 <__flatcc_gen_sort@@Base+0x2e64>
   1e7bc:	tst	r6, fp
   1e7c0:	ldr	r9, [sp, #36]	; 0x24
   1e7c4:	beq	1efa0 <__flatcc_gen_sort@@Base+0x36a0>
   1e7c8:	ldr	r4, [r5, #24]
   1e7cc:	cmp	r4, #0
   1e7d0:	bne	1e7e4 <__flatcc_gen_sort@@Base+0x2ee4>
   1e7d4:	b	1efa0 <__flatcc_gen_sort@@Base+0x36a0>
   1e7d8:	ldr	r4, [r4, #108]	; 0x6c
   1e7dc:	cmp	r4, #0
   1e7e0:	beq	1efa0 <__flatcc_gen_sort@@Base+0x36a0>
   1e7e4:	ldrh	r3, [r4, #72]	; 0x48
   1e7e8:	tst	r3, #4
   1e7ec:	bne	1e7d8 <__flatcc_gen_sort@@Base+0x2ed8>
   1e7f0:	ldrh	r3, [r4, #24]
   1e7f4:	cmp	r3, #14
   1e7f8:	bne	1e7d8 <__flatcc_gen_sort@@Base+0x2ed8>
   1e7fc:	ldr	r3, [r4, #16]
   1e800:	ldrh	r3, [r3, #8]
   1e804:	cmp	r3, #4
   1e808:	bne	1e7d8 <__flatcc_gen_sort@@Base+0x2ed8>
   1e80c:	ldr	r1, [r4, #4]
   1e810:	ldrd	r2, [r4, #96]	; 0x60
   1e814:	ldr	r0, [sl, #204]	; 0xcc
   1e818:	ldr	ip, [r1, #4]
   1e81c:	strd	r2, [sp, #8]
   1e820:	ldr	r2, [r1]
   1e824:	mov	r3, ip
   1e828:	str	r2, [sp]
   1e82c:	ldr	r1, [sp, #64]	; 0x40
   1e830:	mov	r2, r9
   1e834:	bl	1408c <fprintf@plt>
   1e838:	b	1e7d8 <__flatcc_gen_sort@@Base+0x2ed8>
   1e83c:	ldr	r1, [sl, #204]	; 0xcc
   1e840:	mov	r0, fp
   1e844:	bl	140ec <fputc@plt>
   1e848:	b	1e4e8 <__flatcc_gen_sort@@Base+0x2be8>
   1e84c:	ldr	r3, [sl, #204]	; 0xcc
   1e850:	mov	r2, #6
   1e854:	mov	r1, #1
   1e858:	ldr	r0, [sp, #52]	; 0x34
   1e85c:	bl	14014 <fwrite@plt>
   1e860:	b	1e528 <__flatcc_gen_sort@@Base+0x2c28>
   1e864:	add	r6, sp, #80	; 0x50
   1e868:	mov	r2, #220	; 0xdc
   1e86c:	mov	r1, r4
   1e870:	mov	r0, r6
   1e874:	bl	140a4 <memset@plt>
   1e878:	mov	r2, r6
   1e87c:	mov	r1, r8
   1e880:	ldr	r0, [r8, #12]
   1e884:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   1e888:	ldr	r3, [r8, #20]
   1e88c:	cmp	r3, #0
   1e890:	beq	1f064 <__flatcc_gen_sort@@Base+0x3764>
   1e894:	ldrh	r2, [r3, #72]	; 0x48
   1e898:	ldr	r3, [r3]
   1e89c:	tst	r2, #4
   1e8a0:	addeq	r4, r4, #1
   1e8a4:	cmp	r3, #0
   1e8a8:	bne	1e894 <__flatcc_gen_sort@@Base+0x2f94>
   1e8ac:	mov	r2, r6
   1e8b0:	ldr	r1, [sp, #40]	; 0x28
   1e8b4:	ldr	r0, [sl, #204]	; 0xcc
   1e8b8:	bl	1408c <fprintf@plt>
   1e8bc:	mov	r2, #220	; 0xdc
   1e8c0:	mov	r1, #0
   1e8c4:	mov	r0, r9
   1e8c8:	bl	140a4 <memset@plt>
   1e8cc:	ldr	r5, [r8, #20]
   1e8d0:	cmp	r5, #0
   1e8d4:	beq	1ea58 <__flatcc_gen_sort@@Base+0x3158>
   1e8d8:	ldr	fp, [pc, #2568]	; 1f2e8 <__flatcc_gen_sort@@Base+0x39e8>
   1e8dc:	mov	r2, #0
   1e8e0:	add	fp, pc, fp
   1e8e4:	str	r8, [sp, #64]	; 0x40
   1e8e8:	str	r9, [sp, #36]	; 0x24
   1e8ec:	b	1e8fc <__flatcc_gen_sort@@Base+0x2ffc>
   1e8f0:	ldr	r5, [r5]
   1e8f4:	cmp	r5, #0
   1e8f8:	beq	1ea50 <__flatcc_gen_sort@@Base+0x3150>
   1e8fc:	ldrh	r3, [r5, #72]	; 0x48
   1e900:	tst	r3, #4
   1e904:	bne	1e8f0 <__flatcc_gen_sort@@Base+0x2ff0>
   1e908:	cmp	r4, #0
   1e90c:	add	r7, r2, #1
   1e910:	beq	1e93c <__flatcc_gen_sort@@Base+0x303c>
   1e914:	cmp	r2, #0
   1e918:	bne	1e974 <__flatcc_gen_sort@@Base+0x3074>
   1e91c:	cmp	r4, #4
   1e920:	bgt	1e988 <__flatcc_gen_sort@@Base+0x3088>
   1e924:	ldr	r0, [pc, #2496]	; 1f2ec <__flatcc_gen_sort@@Base+0x39ec>
   1e928:	ldr	r3, [sl, #204]	; 0xcc
   1e92c:	mov	r2, #2
   1e930:	mov	r1, #1
   1e934:	add	r0, pc, r0
   1e938:	bl	14014 <fwrite@plt>
   1e93c:	ldrh	r3, [r5, #24]
   1e940:	sub	r3, r3, #7
   1e944:	cmp	r3, #8
   1e948:	addls	pc, pc, r3, lsl #2
   1e94c:	b	1ebe8 <__flatcc_gen_sort@@Base+0x32e8>
   1e950:	b	1eba8 <__flatcc_gen_sort@@Base+0x32a8>
   1e954:	b	1eb60 <__flatcc_gen_sort@@Base+0x3260>
   1e958:	b	1eb40 <__flatcc_gen_sort@@Base+0x3240>
   1e95c:	b	1ea28 <__flatcc_gen_sort@@Base+0x3128>
   1e960:	b	1ebe8 <__flatcc_gen_sort@@Base+0x32e8>
   1e964:	b	1ebe8 <__flatcc_gen_sort@@Base+0x32e8>
   1e968:	b	1ebe8 <__flatcc_gen_sort@@Base+0x32e8>
   1e96c:	b	1e9f0 <__flatcc_gen_sort@@Base+0x30f0>
   1e970:	b	1e9b8 <__flatcc_gen_sort@@Base+0x30b8>
   1e974:	tst	r2, #3
   1e978:	bne	1e924 <__flatcc_gen_sort@@Base+0x3024>
   1e97c:	sub	r2, r4, r2
   1e980:	cmp	r2, #2
   1e984:	ble	1e924 <__flatcc_gen_sort@@Base+0x3024>
   1e988:	ldr	r2, [pc, #2400]	; 1f2f0 <__flatcc_gen_sort@@Base+0x39f0>
   1e98c:	ldr	r1, [pc, #2400]	; 1f2f4 <__flatcc_gen_sort@@Base+0x39f4>
   1e990:	add	r2, pc, r2
   1e994:	add	r1, pc, r1
   1e998:	ldr	r0, [sl, #204]	; 0xcc
   1e99c:	bl	1408c <fprintf@plt>
   1e9a0:	b	1e93c <__flatcc_gen_sort@@Base+0x303c>
   1e9a4:	ldr	r2, [sp, #60]	; 0x3c
   1e9a8:	ldr	r1, [sp, #44]	; 0x2c
   1e9ac:	ldr	r0, [sl, #204]	; 0xcc
   1e9b0:	bl	1408c <fprintf@plt>
   1e9b4:	b	1e4e8 <__flatcc_gen_sort@@Base+0x2be8>
   1e9b8:	ldr	r1, [r5, #16]
   1e9bc:	ldr	r2, [sp, #36]	; 0x24
   1e9c0:	ldr	r0, [r1, #12]
   1e9c4:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   1e9c8:	ldr	r3, [r5, #16]
   1e9cc:	ldrh	r3, [r3, #8]
   1e9d0:	cmp	r3, #4
   1e9d4:	addls	pc, pc, r3, lsl #2
   1e9d8:	b	1eee4 <__flatcc_gen_sort@@Base+0x35e4>
   1e9dc:	b	1ee14 <__flatcc_gen_sort@@Base+0x3514>
   1e9e0:	b	1ee14 <__flatcc_gen_sort@@Base+0x3514>
   1e9e4:	b	1eee4 <__flatcc_gen_sort@@Base+0x35e4>
   1e9e8:	b	1ee14 <__flatcc_gen_sort@@Base+0x3514>
   1e9ec:	b	1edf0 <__flatcc_gen_sort@@Base+0x34f0>
   1e9f0:	ldr	r1, [r5, #16]
   1e9f4:	ldr	r2, [sp, #36]	; 0x24
   1e9f8:	ldr	r0, [r1, #12]
   1e9fc:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   1ea00:	ldr	r3, [r5, #16]
   1ea04:	ldrh	r3, [r3, #8]
   1ea08:	cmp	r3, #4
   1ea0c:	addls	pc, pc, r3, lsl #2
   1ea10:	b	1ef3c <__flatcc_gen_sort@@Base+0x363c>
   1ea14:	b	1eec0 <__flatcc_gen_sort@@Base+0x35c0>
   1ea18:	b	1ee9c <__flatcc_gen_sort@@Base+0x359c>
   1ea1c:	b	1ef3c <__flatcc_gen_sort@@Base+0x363c>
   1ea20:	b	1ee78 <__flatcc_gen_sort@@Base+0x3578>
   1ea24:	b	1ee54 <__flatcc_gen_sort@@Base+0x3554>
   1ea28:	ldrd	r8, [r5, #96]	; 0x60
   1ea2c:	ldr	r0, [sl, #204]	; 0xcc
   1ea30:	mov	r2, sl
   1ea34:	strd	r8, [sp]
   1ea38:	ldr	r1, [sp, #48]	; 0x30
   1ea3c:	bl	1408c <fprintf@plt>
   1ea40:	ldr	r5, [r5]
   1ea44:	mov	r2, r7
   1ea48:	cmp	r5, #0
   1ea4c:	bne	1e8fc <__flatcc_gen_sort@@Base+0x2ffc>
   1ea50:	ldr	r8, [sp, #64]	; 0x40
   1ea54:	ldr	r9, [sp, #36]	; 0x24
   1ea58:	ldr	r1, [pc, #2200]	; 1f2f8 <__flatcc_gen_sort@@Base+0x39f8>
   1ea5c:	mov	r2, r6
   1ea60:	add	r1, pc, r1
   1ea64:	ldr	r0, [sl, #204]	; 0xcc
   1ea68:	bl	1408c <fprintf@plt>
   1ea6c:	ldr	r5, [r8, #20]
   1ea70:	cmp	r5, #0
   1ea74:	beq	1eb10 <__flatcc_gen_sort@@Base+0x3210>
   1ea78:	ldr	r3, [pc, #2172]	; 1f2fc <__flatcc_gen_sort@@Base+0x39fc>
   1ea7c:	ldr	fp, [pc, #2172]	; 1f300 <__flatcc_gen_sort@@Base+0x3a00>
   1ea80:	add	r3, pc, r3
   1ea84:	str	r3, [sp, #36]	; 0x24
   1ea88:	ldr	r3, [pc, #2164]	; 1f304 <__flatcc_gen_sort@@Base+0x3a04>
   1ea8c:	add	fp, pc, fp
   1ea90:	add	r3, pc, r3
   1ea94:	str	r3, [sp, #64]	; 0x40
   1ea98:	ldr	r3, [pc, #2152]	; 1f308 <__flatcc_gen_sort@@Base+0x3a08>
   1ea9c:	mov	r7, #0
   1eaa0:	add	r3, pc, r3
   1eaa4:	str	r3, [sp, #76]	; 0x4c
   1eaa8:	b	1eab8 <__flatcc_gen_sort@@Base+0x31b8>
   1eaac:	ldr	r5, [r5]
   1eab0:	cmp	r5, #0
   1eab4:	beq	1eb10 <__flatcc_gen_sort@@Base+0x3210>
   1eab8:	ldrh	r3, [r5, #72]	; 0x48
   1eabc:	tst	r3, #4
   1eac0:	bne	1eaac <__flatcc_gen_sort@@Base+0x31ac>
   1eac4:	cmp	r4, #0
   1eac8:	beq	1eaf0 <__flatcc_gen_sort@@Base+0x31f0>
   1eacc:	cmp	r7, #0
   1ead0:	bne	1edc8 <__flatcc_gen_sort@@Base+0x34c8>
   1ead4:	cmp	r4, #4
   1ead8:	bgt	1eddc <__flatcc_gen_sort@@Base+0x34dc>
   1eadc:	ldr	r3, [sl, #204]	; 0xcc
   1eae0:	mov	r2, #2
   1eae4:	mov	r1, #1
   1eae8:	ldr	r0, [sp, #36]	; 0x24
   1eaec:	bl	14014 <fwrite@plt>
   1eaf0:	ldrd	r2, [r5, #96]	; 0x60
   1eaf4:	mov	r1, fp
   1eaf8:	ldr	r0, [sl, #204]	; 0xcc
   1eafc:	bl	1408c <fprintf@plt>
   1eb00:	ldr	r5, [r5]
   1eb04:	add	r7, r7, #1
   1eb08:	cmp	r5, #0
   1eb0c:	bne	1eab8 <__flatcc_gen_sort@@Base+0x31b8>
   1eb10:	ldr	r1, [sl, #204]	; 0xcc
   1eb14:	mov	r0, #10
   1eb18:	bl	140ec <fputc@plt>
   1eb1c:	ldr	r1, [pc, #2024]	; 1f30c <__flatcc_gen_sort@@Base+0x3a0c>
   1eb20:	ldr	r0, [sl, #204]	; 0xcc
   1eb24:	mov	r3, r6
   1eb28:	str	r6, [sp, #4]
   1eb2c:	str	sl, [sp]
   1eb30:	mov	r2, r6
   1eb34:	add	r1, pc, r1
   1eb38:	bl	1408c <fprintf@plt>
   1eb3c:	b	1e5e0 <__flatcc_gen_sort@@Base+0x2ce0>
   1eb40:	ldrd	r8, [r5, #96]	; 0x60
   1eb44:	ldr	r0, [sl, #204]	; 0xcc
   1eb48:	mov	r2, sl
   1eb4c:	strd	r8, [sp]
   1eb50:	ldr	r1, [sp, #44]	; 0x2c
   1eb54:	bl	1408c <fprintf@plt>
   1eb58:	mov	r2, r7
   1eb5c:	b	1e8f0 <__flatcc_gen_sort@@Base+0x2ff0>
   1eb60:	ldr	r3, [r5, #16]
   1eb64:	cmp	r3, #5
   1eb68:	beq	1f004 <__flatcc_gen_sort@@Base+0x3704>
   1eb6c:	sub	r3, r3, #1
   1eb70:	cmp	r3, #10
   1eb74:	addls	pc, pc, r3, lsl #2
   1eb78:	b	1f1c8 <__flatcc_gen_sort@@Base+0x38c8>
   1eb7c:	b	1f18c <__flatcc_gen_sort@@Base+0x388c>
   1eb80:	b	1f1a0 <__flatcc_gen_sort@@Base+0x38a0>
   1eb84:	b	1f1b4 <__flatcc_gen_sort@@Base+0x38b4>
   1eb88:	b	1f13c <__flatcc_gen_sort@@Base+0x383c>
   1eb8c:	b	1f1c8 <__flatcc_gen_sort@@Base+0x38c8>
   1eb90:	b	1f164 <__flatcc_gen_sort@@Base+0x3864>
   1eb94:	b	1f178 <__flatcc_gen_sort@@Base+0x3878>
   1eb98:	b	1f100 <__flatcc_gen_sort@@Base+0x3800>
   1eb9c:	b	1f114 <__flatcc_gen_sort@@Base+0x3814>
   1eba0:	b	1f128 <__flatcc_gen_sort@@Base+0x3828>
   1eba4:	b	1f150 <__flatcc_gen_sort@@Base+0x3850>
   1eba8:	ldr	r3, [r5, #16]
   1ebac:	sub	r3, r3, #1
   1ebb0:	cmp	r3, #10
   1ebb4:	addls	pc, pc, r3, lsl #2
   1ebb8:	b	1f220 <__flatcc_gen_sort@@Base+0x3920>
   1ebbc:	b	1f090 <__flatcc_gen_sort@@Base+0x3790>
   1ebc0:	b	1f06c <__flatcc_gen_sort@@Base+0x376c>
   1ebc4:	b	1f0c4 <__flatcc_gen_sort@@Base+0x37c4>
   1ebc8:	b	1f0d0 <__flatcc_gen_sort@@Base+0x37d0>
   1ebcc:	b	1f098 <__flatcc_gen_sort@@Base+0x3798>
   1ebd0:	b	1f0a4 <__flatcc_gen_sort@@Base+0x37a4>
   1ebd4:	b	1f0dc <__flatcc_gen_sort@@Base+0x37dc>
   1ebd8:	b	1f0e8 <__flatcc_gen_sort@@Base+0x37e8>
   1ebdc:	b	1f0f4 <__flatcc_gen_sort@@Base+0x37f4>
   1ebe0:	b	1f0b0 <__flatcc_gen_sort@@Base+0x37b0>
   1ebe4:	b	1f0b8 <__flatcc_gen_sort@@Base+0x37b8>
   1ebe8:	ldr	r2, [pc, #1824]	; 1f310 <__flatcc_gen_sort@@Base+0x3a10>
   1ebec:	ldr	r1, [sp, #56]	; 0x38
   1ebf0:	ldr	r3, [pc, #1820]	; 1f314 <__flatcc_gen_sort@@Base+0x3a14>
   1ebf4:	ldr	r4, [pc, #1820]	; 1f318 <__flatcc_gen_sort@@Base+0x3a18>
   1ebf8:	ldr	r1, [r1, r2]
   1ebfc:	add	r3, pc, r3
   1ec00:	str	r3, [sp]
   1ec04:	ldr	r0, [r1]
   1ec08:	ldr	r1, [pc, #1804]	; 1f31c <__flatcc_gen_sort@@Base+0x3a1c>
   1ec0c:	add	r4, pc, r4
   1ec10:	mov	r2, r4
   1ec14:	ldr	r3, [pc, #1796]	; 1f320 <__flatcc_gen_sort@@Base+0x3a20>
   1ec18:	add	r1, pc, r1
   1ec1c:	bl	1408c <fprintf@plt>
   1ec20:	ldr	r3, [pc, #1788]	; 1f324 <__flatcc_gen_sort@@Base+0x3a24>
   1ec24:	ldr	r0, [pc, #1788]	; 1f328 <__flatcc_gen_sort@@Base+0x3a28>
   1ec28:	add	r3, pc, r3
   1ec2c:	mov	r1, r4
   1ec30:	add	r3, r3, #172	; 0xac
   1ec34:	ldr	r2, [pc, #1764]	; 1f320 <__flatcc_gen_sort@@Base+0x3a20>
   1ec38:	add	r0, pc, r0
   1ec3c:	bl	14140 <__assert_fail@plt>
   1ec40:	mov	r5, r3
   1ec44:	b	1e458 <__flatcc_gen_sort@@Base+0x2b58>
   1ec48:	mov	r2, r7
   1ec4c:	mov	r1, #0
   1ec50:	mov	r0, r6
   1ec54:	bl	140a4 <memset@plt>
   1ec58:	mov	r2, r7
   1ec5c:	mov	r1, #0
   1ec60:	mov	r0, r9
   1ec64:	bl	140a4 <memset@plt>
   1ec68:	mov	r2, r6
   1ec6c:	mov	r1, r4
   1ec70:	ldr	r0, [r4, #12]
   1ec74:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   1ec78:	ldr	r5, [r4, #20]
   1ec7c:	cmp	r5, #0
   1ec80:	beq	1ed20 <__flatcc_gen_sort@@Base+0x3420>
   1ec84:	ldrh	r3, [r5, #24]
   1ec88:	cmp	r3, #10
   1ec8c:	beq	1ed8c <__flatcc_gen_sort@@Base+0x348c>
   1ec90:	cmp	r3, #14
   1ec94:	beq	1ed40 <__flatcc_gen_sort@@Base+0x3440>
   1ec98:	cmp	r3, #0
   1ec9c:	beq	1ecf8 <__flatcc_gen_sort@@Base+0x33f8>
   1eca0:	ldr	r2, [pc, #1640]	; 1f310 <__flatcc_gen_sort@@Base+0x3a10>
   1eca4:	ldr	r1, [sp, #56]	; 0x38
   1eca8:	ldr	r3, [pc, #1660]	; 1f32c <__flatcc_gen_sort@@Base+0x3a2c>
   1ecac:	ldr	r4, [pc, #1660]	; 1f330 <__flatcc_gen_sort@@Base+0x3a30>
   1ecb0:	ldr	r1, [r1, r2]
   1ecb4:	add	r3, pc, r3
   1ecb8:	str	r3, [sp]
   1ecbc:	ldr	r0, [r1]
   1ecc0:	ldr	r1, [pc, #1644]	; 1f334 <__flatcc_gen_sort@@Base+0x3a34>
   1ecc4:	add	r4, pc, r4
   1ecc8:	mov	r2, r4
   1eccc:	ldr	r3, [pc, #1636]	; 1f338 <__flatcc_gen_sort@@Base+0x3a38>
   1ecd0:	add	r1, pc, r1
   1ecd4:	bl	1408c <fprintf@plt>
   1ecd8:	ldr	r3, [pc, #1628]	; 1f33c <__flatcc_gen_sort@@Base+0x3a3c>
   1ecdc:	ldr	r0, [pc, #1628]	; 1f340 <__flatcc_gen_sort@@Base+0x3a40>
   1ece0:	add	r3, pc, r3
   1ece4:	mov	r1, r4
   1ece8:	add	r3, r3, #196	; 0xc4
   1ecec:	ldr	r2, [pc, #1604]	; 1f338 <__flatcc_gen_sort@@Base+0x3a38>
   1ecf0:	add	r0, pc, r0
   1ecf4:	bl	14140 <__assert_fail@plt>
   1ecf8:	ldr	r0, [sl, #204]	; 0xcc
   1ecfc:	mov	r3, r6
   1ed00:	str	r6, [sp, #4]
   1ed04:	str	r6, [sp]
   1ed08:	mov	r2, r6
   1ed0c:	ldr	r1, [sp, #40]	; 0x28
   1ed10:	bl	1408c <fprintf@plt>
   1ed14:	ldr	r5, [r5]
   1ed18:	cmp	r5, #0
   1ed1c:	bne	1ec84 <__flatcc_gen_sort@@Base+0x3384>
   1ed20:	ldr	r0, [sl, #204]	; 0xcc
   1ed24:	mov	r2, sl
   1ed28:	str	r6, [sp]
   1ed2c:	mov	r3, sl
   1ed30:	ldr	r1, [sp, #44]	; 0x2c
   1ed34:	bl	1408c <fprintf@plt>
   1ed38:	mov	r2, #1
   1ed3c:	b	1e64c <__flatcc_gen_sort@@Base+0x2d4c>
   1ed40:	ldr	r1, [r5, #16]
   1ed44:	mov	r2, r9
   1ed48:	ldr	r0, [r1, #12]
   1ed4c:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   1ed50:	ldr	r2, [r5, #4]
   1ed54:	ldr	r0, [sl, #204]	; 0xcc
   1ed58:	mov	r3, r6
   1ed5c:	ldm	r2, {r1, r2}
   1ed60:	str	r6, [sp, #16]
   1ed64:	str	r6, [sp, #12]
   1ed68:	str	r1, [sp, #24]
   1ed6c:	str	r2, [sp, #20]
   1ed70:	str	r1, [sp, #4]
   1ed74:	str	r2, [sp]
   1ed78:	str	r9, [sp, #8]
   1ed7c:	mov	r2, r6
   1ed80:	mov	r1, r8
   1ed84:	bl	1408c <fprintf@plt>
   1ed88:	b	1ed14 <__flatcc_gen_sort@@Base+0x3414>
   1ed8c:	ldr	r2, [r5, #4]
   1ed90:	ldr	r0, [sl, #204]	; 0xcc
   1ed94:	mov	r3, r6
   1ed98:	ldm	r2, {r1, r2}
   1ed9c:	str	r6, [sp, #16]
   1eda0:	str	r6, [sp, #12]
   1eda4:	str	r1, [sp, #24]
   1eda8:	str	r2, [sp, #20]
   1edac:	str	r1, [sp, #4]
   1edb0:	str	r2, [sp]
   1edb4:	str	sl, [sp, #8]
   1edb8:	mov	r2, r6
   1edbc:	ldr	r1, [sp, #36]	; 0x24
   1edc0:	bl	1408c <fprintf@plt>
   1edc4:	b	1ed14 <__flatcc_gen_sort@@Base+0x3414>
   1edc8:	tst	r7, #3
   1edcc:	bne	1eadc <__flatcc_gen_sort@@Base+0x31dc>
   1edd0:	sub	r3, r4, r7
   1edd4:	cmp	r3, #2
   1edd8:	ble	1eadc <__flatcc_gen_sort@@Base+0x31dc>
   1eddc:	ldr	r2, [sp, #64]	; 0x40
   1ede0:	ldr	r1, [sp, #76]	; 0x4c
   1ede4:	ldr	r0, [sl, #204]	; 0xcc
   1ede8:	bl	1408c <fprintf@plt>
   1edec:	b	1eaf0 <__flatcc_gen_sort@@Base+0x31f0>
   1edf0:	ldrd	r8, [r5, #96]	; 0x60
   1edf4:	ldr	r1, [pc, #1352]	; 1f344 <__flatcc_gen_sort@@Base+0x3a44>
   1edf8:	ldr	r0, [sl, #204]	; 0xcc
   1edfc:	ldr	r2, [sp, #36]	; 0x24
   1ee00:	strd	r8, [sp]
   1ee04:	add	r1, pc, r1
   1ee08:	bl	1408c <fprintf@plt>
   1ee0c:	mov	r2, r7
   1ee10:	b	1e8f0 <__flatcc_gen_sort@@Base+0x2ff0>
   1ee14:	ldrd	r8, [r5, #96]	; 0x60
   1ee18:	ldr	r1, [pc, #1320]	; 1f348 <__flatcc_gen_sort@@Base+0x3a48>
   1ee1c:	ldr	r0, [sl, #204]	; 0xcc
   1ee20:	ldr	r2, [sp, #36]	; 0x24
   1ee24:	strd	r8, [sp]
   1ee28:	add	r1, pc, r1
   1ee2c:	bl	1408c <fprintf@plt>
   1ee30:	mov	r2, r7
   1ee34:	b	1e8f0 <__flatcc_gen_sort@@Base+0x2ff0>
   1ee38:	cmp	fp, #0
   1ee3c:	beq	1ef94 <__flatcc_gen_sort@@Base+0x3694>
   1ee40:	ldr	r1, [sl, #204]	; 0xcc
   1ee44:	mov	r0, #10
   1ee48:	bl	140ec <fputc@plt>
   1ee4c:	mov	fp, #1
   1ee50:	b	1e5f8 <__flatcc_gen_sort@@Base+0x2cf8>
   1ee54:	ldrd	r8, [r5, #96]	; 0x60
   1ee58:	ldr	r1, [pc, #1260]	; 1f34c <__flatcc_gen_sort@@Base+0x3a4c>
   1ee5c:	ldr	r0, [sl, #204]	; 0xcc
   1ee60:	ldr	r2, [sp, #36]	; 0x24
   1ee64:	strd	r8, [sp]
   1ee68:	add	r1, pc, r1
   1ee6c:	bl	1408c <fprintf@plt>
   1ee70:	mov	r2, r7
   1ee74:	b	1e8f0 <__flatcc_gen_sort@@Base+0x2ff0>
   1ee78:	ldrd	r8, [r5, #96]	; 0x60
   1ee7c:	ldr	r1, [pc, #1228]	; 1f350 <__flatcc_gen_sort@@Base+0x3a50>
   1ee80:	ldr	r0, [sl, #204]	; 0xcc
   1ee84:	ldr	r2, [sp, #36]	; 0x24
   1ee88:	strd	r8, [sp]
   1ee8c:	add	r1, pc, r1
   1ee90:	bl	1408c <fprintf@plt>
   1ee94:	mov	r2, r7
   1ee98:	b	1e8f0 <__flatcc_gen_sort@@Base+0x2ff0>
   1ee9c:	ldrd	r8, [r5, #96]	; 0x60
   1eea0:	ldr	r1, [pc, #1196]	; 1f354 <__flatcc_gen_sort@@Base+0x3a54>
   1eea4:	ldr	r0, [sl, #204]	; 0xcc
   1eea8:	ldr	r2, [sp, #36]	; 0x24
   1eeac:	strd	r8, [sp]
   1eeb0:	add	r1, pc, r1
   1eeb4:	bl	1408c <fprintf@plt>
   1eeb8:	mov	r2, r7
   1eebc:	b	1e8f0 <__flatcc_gen_sort@@Base+0x2ff0>
   1eec0:	ldrd	r8, [r5, #96]	; 0x60
   1eec4:	ldr	r1, [pc, #1164]	; 1f358 <__flatcc_gen_sort@@Base+0x3a58>
   1eec8:	ldr	r0, [sl, #204]	; 0xcc
   1eecc:	ldr	r2, [sp, #36]	; 0x24
   1eed0:	strd	r8, [sp]
   1eed4:	add	r1, pc, r1
   1eed8:	bl	1408c <fprintf@plt>
   1eedc:	mov	r2, r7
   1eee0:	b	1e8f0 <__flatcc_gen_sort@@Base+0x2ff0>
   1eee4:	ldr	r2, [pc, #1060]	; 1f310 <__flatcc_gen_sort@@Base+0x3a10>
   1eee8:	ldr	r1, [sp, #56]	; 0x38
   1eeec:	ldr	r3, [pc, #1128]	; 1f35c <__flatcc_gen_sort@@Base+0x3a5c>
   1eef0:	ldr	r4, [pc, #1128]	; 1f360 <__flatcc_gen_sort@@Base+0x3a60>
   1eef4:	ldr	r1, [r1, r2]
   1eef8:	add	r3, pc, r3
   1eefc:	str	r3, [sp]
   1ef00:	ldr	r0, [r1]
   1ef04:	ldr	r1, [pc, #1112]	; 1f364 <__flatcc_gen_sort@@Base+0x3a64>
   1ef08:	add	r4, pc, r4
   1ef0c:	mov	r2, r4
   1ef10:	ldr	r3, [pc, #1104]	; 1f368 <__flatcc_gen_sort@@Base+0x3a68>
   1ef14:	add	r1, pc, r1
   1ef18:	bl	1408c <fprintf@plt>
   1ef1c:	ldr	r3, [pc, #1096]	; 1f36c <__flatcc_gen_sort@@Base+0x3a6c>
   1ef20:	ldr	r0, [pc, #1096]	; 1f370 <__flatcc_gen_sort@@Base+0x3a70>
   1ef24:	add	r3, pc, r3
   1ef28:	mov	r1, r4
   1ef2c:	add	r3, r3, #172	; 0xac
   1ef30:	ldr	r2, [pc, #1072]	; 1f368 <__flatcc_gen_sort@@Base+0x3a68>
   1ef34:	add	r0, pc, r0
   1ef38:	bl	14140 <__assert_fail@plt>
   1ef3c:	ldr	r2, [pc, #972]	; 1f310 <__flatcc_gen_sort@@Base+0x3a10>
   1ef40:	ldr	r1, [sp, #56]	; 0x38
   1ef44:	ldr	r3, [pc, #1064]	; 1f374 <__flatcc_gen_sort@@Base+0x3a74>
   1ef48:	ldr	r4, [pc, #1064]	; 1f378 <__flatcc_gen_sort@@Base+0x3a78>
   1ef4c:	ldr	r1, [r1, r2]
   1ef50:	add	r3, pc, r3
   1ef54:	str	r3, [sp]
   1ef58:	ldr	r0, [r1]
   1ef5c:	ldr	r1, [pc, #1048]	; 1f37c <__flatcc_gen_sort@@Base+0x3a7c>
   1ef60:	add	r4, pc, r4
   1ef64:	mov	r2, r4
   1ef68:	ldr	r3, [pc, #1040]	; 1f380 <__flatcc_gen_sort@@Base+0x3a80>
   1ef6c:	add	r1, pc, r1
   1ef70:	bl	1408c <fprintf@plt>
   1ef74:	ldr	r3, [pc, #1032]	; 1f384 <__flatcc_gen_sort@@Base+0x3a84>
   1ef78:	ldr	r0, [pc, #1032]	; 1f388 <__flatcc_gen_sort@@Base+0x3a88>
   1ef7c:	add	r3, pc, r3
   1ef80:	mov	r1, r4
   1ef84:	add	r3, r3, #172	; 0xac
   1ef88:	ldr	r2, [pc, #1008]	; 1f380 <__flatcc_gen_sort@@Base+0x3a80>
   1ef8c:	add	r0, pc, r0
   1ef90:	bl	14140 <__assert_fail@plt>
   1ef94:	mov	r0, #0
   1ef98:	add	sp, sp, #524	; 0x20c
   1ef9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1efa0:	mov	r2, r9
   1efa4:	ldr	r1, [sp, #52]	; 0x34
   1efa8:	ldr	r0, [sl, #204]	; 0xcc
   1efac:	bl	1408c <fprintf@plt>
   1efb0:	mov	r2, #220	; 0xdc
   1efb4:	mov	r1, #0
   1efb8:	mov	r0, r9
   1efbc:	bl	140a4 <memset@plt>
   1efc0:	mov	r2, r9
   1efc4:	mov	r1, r5
   1efc8:	ldr	r0, [r5, #12]
   1efcc:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   1efd0:	ldr	r1, [pc, #948]	; 1f38c <__flatcc_gen_sort@@Base+0x3a8c>
   1efd4:	ldr	r0, [sl, #204]	; 0xcc
   1efd8:	mov	r3, sl
   1efdc:	str	r9, [sp, #8]
   1efe0:	str	r9, [sp, #4]
   1efe4:	str	r9, [sp]
   1efe8:	mov	r2, sl
   1efec:	add	r1, pc, r1
   1eff0:	bl	1408c <fprintf@plt>
   1eff4:	ldr	r1, [sl, #204]	; 0xcc
   1eff8:	mov	r0, #10
   1effc:	bl	140ec <fputc@plt>
   1f000:	b	1e6d0 <__flatcc_gen_sort@@Base+0x2dd0>
   1f004:	ldr	r3, [pc, #900]	; 1f390 <__flatcc_gen_sort@@Base+0x3a90>
   1f008:	mov	r2, sl
   1f00c:	add	r3, pc, r3
   1f010:	ldrd	r8, [r5, #96]	; 0x60
   1f014:	ldr	r1, [pc, #888]	; 1f394 <__flatcc_gen_sort@@Base+0x3a94>
   1f018:	ldr	r0, [sl, #204]	; 0xcc
   1f01c:	add	r1, pc, r1
   1f020:	strd	r8, [sp]
   1f024:	bl	1408c <fprintf@plt>
   1f028:	mov	r2, r7
   1f02c:	b	1e8f0 <__flatcc_gen_sort@@Base+0x2ff0>
   1f030:	ldr	r1, [sp, #40]	; 0x28
   1f034:	cmp	r1, #0
   1f038:	ldrne	r6, [sp, #56]	; 0x38
   1f03c:	bne	1e794 <__flatcc_gen_sort@@Base+0x2e94>
   1f040:	ldrd	r8, [r4, #96]	; 0x60
   1f044:	ldr	r0, [sl, #204]	; 0xcc
   1f048:	ldr	r1, [sp, #60]	; 0x3c
   1f04c:	str	r2, [sp]
   1f050:	strd	r8, [sp, #8]
   1f054:	ldr	r2, [sp, #36]	; 0x24
   1f058:	bl	1408c <fprintf@plt>
   1f05c:	ldr	r6, [sp, #56]	; 0x38
   1f060:	b	1e7b0 <__flatcc_gen_sort@@Base+0x2eb0>
   1f064:	mov	r4, r3
   1f068:	b	1e8ac <__flatcc_gen_sort@@Base+0x2fac>
   1f06c:	ldr	r3, [sp, #68]	; 0x44
   1f070:	ldrd	r8, [r5, #96]	; 0x60
   1f074:	ldr	r0, [sl, #204]	; 0xcc
   1f078:	mov	r2, sl
   1f07c:	strd	r8, [sp]
   1f080:	ldr	r1, [sp, #52]	; 0x34
   1f084:	bl	1408c <fprintf@plt>
   1f088:	mov	r2, r7
   1f08c:	b	1e8f0 <__flatcc_gen_sort@@Base+0x2ff0>
   1f090:	ldr	r3, [sp, #72]	; 0x48
   1f094:	b	1f070 <__flatcc_gen_sort@@Base+0x3770>
   1f098:	ldr	r3, [pc, #760]	; 1f398 <__flatcc_gen_sort@@Base+0x3a98>
   1f09c:	add	r3, pc, r3
   1f0a0:	b	1f070 <__flatcc_gen_sort@@Base+0x3770>
   1f0a4:	ldr	r3, [pc, #752]	; 1f39c <__flatcc_gen_sort@@Base+0x3a9c>
   1f0a8:	add	r3, pc, r3
   1f0ac:	b	1f070 <__flatcc_gen_sort@@Base+0x3770>
   1f0b0:	mov	r3, fp
   1f0b4:	b	1f070 <__flatcc_gen_sort@@Base+0x3770>
   1f0b8:	ldr	r3, [pc, #736]	; 1f3a0 <__flatcc_gen_sort@@Base+0x3aa0>
   1f0bc:	add	r3, pc, r3
   1f0c0:	b	1f070 <__flatcc_gen_sort@@Base+0x3770>
   1f0c4:	ldr	r3, [pc, #728]	; 1f3a4 <__flatcc_gen_sort@@Base+0x3aa4>
   1f0c8:	add	r3, pc, r3
   1f0cc:	b	1f070 <__flatcc_gen_sort@@Base+0x3770>
   1f0d0:	ldr	r3, [pc, #720]	; 1f3a8 <__flatcc_gen_sort@@Base+0x3aa8>
   1f0d4:	add	r3, pc, r3
   1f0d8:	b	1f070 <__flatcc_gen_sort@@Base+0x3770>
   1f0dc:	ldr	r3, [pc, #712]	; 1f3ac <__flatcc_gen_sort@@Base+0x3aac>
   1f0e0:	add	r3, pc, r3
   1f0e4:	b	1f070 <__flatcc_gen_sort@@Base+0x3770>
   1f0e8:	ldr	r3, [pc, #704]	; 1f3b0 <__flatcc_gen_sort@@Base+0x3ab0>
   1f0ec:	add	r3, pc, r3
   1f0f0:	b	1f070 <__flatcc_gen_sort@@Base+0x3770>
   1f0f4:	ldr	r3, [pc, #696]	; 1f3b4 <__flatcc_gen_sort@@Base+0x3ab4>
   1f0f8:	add	r3, pc, r3
   1f0fc:	b	1f070 <__flatcc_gen_sort@@Base+0x3770>
   1f100:	ldr	r2, [pc, #688]	; 1f3b8 <__flatcc_gen_sort@@Base+0x3ab8>
   1f104:	ldr	r3, [pc, #688]	; 1f3bc <__flatcc_gen_sort@@Base+0x3abc>
   1f108:	add	r2, pc, r2
   1f10c:	add	r3, pc, r3
   1f110:	b	1f010 <__flatcc_gen_sort@@Base+0x3710>
   1f114:	ldr	r2, [pc, #676]	; 1f3c0 <__flatcc_gen_sort@@Base+0x3ac0>
   1f118:	ldr	r3, [pc, #676]	; 1f3c4 <__flatcc_gen_sort@@Base+0x3ac4>
   1f11c:	add	r2, pc, r2
   1f120:	add	r3, pc, r3
   1f124:	b	1f010 <__flatcc_gen_sort@@Base+0x3710>
   1f128:	ldr	r2, [pc, #664]	; 1f3c8 <__flatcc_gen_sort@@Base+0x3ac8>
   1f12c:	ldr	r3, [pc, #664]	; 1f3cc <__flatcc_gen_sort@@Base+0x3acc>
   1f130:	add	r2, pc, r2
   1f134:	add	r3, pc, r3
   1f138:	b	1f010 <__flatcc_gen_sort@@Base+0x3710>
   1f13c:	ldr	r2, [pc, #652]	; 1f3d0 <__flatcc_gen_sort@@Base+0x3ad0>
   1f140:	ldr	r3, [pc, #652]	; 1f3d4 <__flatcc_gen_sort@@Base+0x3ad4>
   1f144:	add	r2, pc, r2
   1f148:	add	r3, pc, r3
   1f14c:	b	1f010 <__flatcc_gen_sort@@Base+0x3710>
   1f150:	ldr	r2, [pc, #640]	; 1f3d8 <__flatcc_gen_sort@@Base+0x3ad8>
   1f154:	ldr	r3, [pc, #640]	; 1f3dc <__flatcc_gen_sort@@Base+0x3adc>
   1f158:	add	r2, pc, r2
   1f15c:	add	r3, pc, r3
   1f160:	b	1f010 <__flatcc_gen_sort@@Base+0x3710>
   1f164:	ldr	r2, [pc, #628]	; 1f3e0 <__flatcc_gen_sort@@Base+0x3ae0>
   1f168:	ldr	r3, [pc, #628]	; 1f3e4 <__flatcc_gen_sort@@Base+0x3ae4>
   1f16c:	add	r2, pc, r2
   1f170:	add	r3, pc, r3
   1f174:	b	1f010 <__flatcc_gen_sort@@Base+0x3710>
   1f178:	ldr	r2, [pc, #616]	; 1f3e8 <__flatcc_gen_sort@@Base+0x3ae8>
   1f17c:	ldr	r3, [pc, #616]	; 1f3ec <__flatcc_gen_sort@@Base+0x3aec>
   1f180:	add	r2, pc, r2
   1f184:	add	r3, pc, r3
   1f188:	b	1f010 <__flatcc_gen_sort@@Base+0x3710>
   1f18c:	ldr	r2, [pc, #604]	; 1f3f0 <__flatcc_gen_sort@@Base+0x3af0>
   1f190:	ldr	r3, [pc, #604]	; 1f3f4 <__flatcc_gen_sort@@Base+0x3af4>
   1f194:	add	r2, pc, r2
   1f198:	add	r3, pc, r3
   1f19c:	b	1f010 <__flatcc_gen_sort@@Base+0x3710>
   1f1a0:	ldr	r2, [pc, #592]	; 1f3f8 <__flatcc_gen_sort@@Base+0x3af8>
   1f1a4:	ldr	r3, [pc, #592]	; 1f3fc <__flatcc_gen_sort@@Base+0x3afc>
   1f1a8:	add	r2, pc, r2
   1f1ac:	add	r3, pc, r3
   1f1b0:	b	1f010 <__flatcc_gen_sort@@Base+0x3710>
   1f1b4:	ldr	r2, [pc, #580]	; 1f400 <__flatcc_gen_sort@@Base+0x3b00>
   1f1b8:	ldr	r3, [pc, #580]	; 1f404 <__flatcc_gen_sort@@Base+0x3b04>
   1f1bc:	add	r2, pc, r2
   1f1c0:	add	r3, pc, r3
   1f1c4:	b	1f010 <__flatcc_gen_sort@@Base+0x3710>
   1f1c8:	ldr	r2, [pc, #320]	; 1f310 <__flatcc_gen_sort@@Base+0x3a10>
   1f1cc:	ldr	r1, [sp, #56]	; 0x38
   1f1d0:	ldr	r3, [pc, #560]	; 1f408 <__flatcc_gen_sort@@Base+0x3b08>
   1f1d4:	ldr	r4, [pc, #560]	; 1f40c <__flatcc_gen_sort@@Base+0x3b0c>
   1f1d8:	ldr	r1, [r1, r2]
   1f1dc:	add	r3, pc, r3
   1f1e0:	str	r3, [sp]
   1f1e4:	ldr	r0, [r1]
   1f1e8:	ldr	r1, [pc, #544]	; 1f410 <__flatcc_gen_sort@@Base+0x3b10>
   1f1ec:	add	r4, pc, r4
   1f1f0:	mov	r2, r4
   1f1f4:	mov	r3, #141	; 0x8d
   1f1f8:	add	r1, pc, r1
   1f1fc:	bl	1408c <fprintf@plt>
   1f200:	ldr	r3, [pc, #524]	; 1f414 <__flatcc_gen_sort@@Base+0x3b14>
   1f204:	ldr	r0, [pc, #524]	; 1f418 <__flatcc_gen_sort@@Base+0x3b18>
   1f208:	add	r3, pc, r3
   1f20c:	mov	r1, r4
   1f210:	add	r3, r3, #72	; 0x48
   1f214:	mov	r2, #141	; 0x8d
   1f218:	add	r0, pc, r0
   1f21c:	bl	14140 <__assert_fail@plt>
   1f220:	ldr	r2, [pc, #232]	; 1f310 <__flatcc_gen_sort@@Base+0x3a10>
   1f224:	ldr	r1, [sp, #56]	; 0x38
   1f228:	ldr	r3, [pc, #492]	; 1f41c <__flatcc_gen_sort@@Base+0x3b1c>
   1f22c:	ldr	r4, [pc, #492]	; 1f420 <__flatcc_gen_sort@@Base+0x3b20>
   1f230:	ldr	r1, [r1, r2]
   1f234:	add	r3, pc, r3
   1f238:	str	r3, [sp]
   1f23c:	ldr	r0, [r1]
   1f240:	ldr	r1, [pc, #476]	; 1f424 <__flatcc_gen_sort@@Base+0x3b24>
   1f244:	add	r4, pc, r4
   1f248:	mov	r2, r4
   1f24c:	mov	r3, #96	; 0x60
   1f250:	add	r1, pc, r1
   1f254:	bl	1408c <fprintf@plt>
   1f258:	ldr	r3, [pc, #456]	; 1f428 <__flatcc_gen_sort@@Base+0x3b28>
   1f25c:	ldr	r0, [pc, #456]	; 1f42c <__flatcc_gen_sort@@Base+0x3b2c>
   1f260:	add	r3, pc, r3
   1f264:	mov	r1, r4
   1f268:	add	r3, r3, #20
   1f26c:	mov	r2, #96	; 0x60
   1f270:	add	r0, pc, r0
   1f274:	bl	14140 <__assert_fail@plt>
   1f278:	mov	fp, r6
   1f27c:	b	1e5fc <__flatcc_gen_sort@@Base+0x2cfc>
   1f280:	ldrdeq	ip, [r4], -r4
   1f284:	andeq	fp, r2, r0, lsl r5
   1f288:	ldrdeq	fp, [r2], -ip
   1f28c:	andeq	fp, r2, r0, lsl #10
   1f290:	andeq	fp, r2, r0, lsl r5
   1f294:	strdeq	fp, [r2], -r8
   1f298:	andeq	sl, r2, ip, lsr #29
   1f29c:	andeq	r3, r2, r8, lsl pc
   1f2a0:	andeq	sl, r2, r4, lsl #28
   1f2a4:			; <UNDEFINED> instruction: 0x0002b3b8
   1f2a8:	andeq	fp, r2, r8, ror r3
   1f2ac:	andeq	fp, r2, ip, lsr #9
   1f2b0:	andeq	fp, r2, r8, lsl #9
   1f2b4:	andeq	fp, r2, r4, ror #8
   1f2b8:	andeq	r2, r2, r0, lsl ip
   1f2bc:	strdeq	r2, [r2], -ip
   1f2c0:	andeq	fp, r2, r4, asr #10
   1f2c4:			; <UNDEFINED> instruction: 0x0002b4b4
   1f2c8:	andeq	fp, r2, r0, asr #11
   1f2cc:	andeq	fp, r2, r8, ror r4
   1f2d0:	strdeq	fp, [r2], -r8
   1f2d4:	andeq	fp, r2, ip, ror #13
   1f2d8:	andeq	fp, r2, ip, lsr #12
   1f2dc:			; <UNDEFINED> instruction: 0x0002b6b0
   1f2e0:	strdeq	fp, [r2], -r0
   1f2e4:	andeq	fp, r2, ip, lsl r6
   1f2e8:			; <UNDEFINED> instruction: 0x000224b4
   1f2ec:	andeq	sl, r2, ip, ror #18
   1f2f0:	ldrdeq	r5, [r2], -r0
   1f2f4:	andeq	sl, r2, r4, lsl #18
   1f2f8:	andeq	sl, r2, r4, asr #29
   1f2fc:	andeq	sl, r2, r0, lsr #16
   1f300:	andeq	fp, r2, ip, lsl r0
   1f304:	ldrdeq	r4, [r2], -r0
   1f308:	strdeq	sl, [r2], -r8
   1f30c:	andeq	sl, r2, r0, lsr pc
   1f310:	andeq	r0, r0, r0, lsr #1
   1f314:	andeq	sl, r2, r8, asr #16
   1f318:	strdeq	sl, [r2], -r0
   1f31c:	andeq	r2, r2, r4, lsr #5
   1f320:			; <UNDEFINED> instruction: 0x000004b9
   1f324:	andeq	sl, r2, r0, ror #6
   1f328:	andeq	sl, r2, r4, lsl #13
   1f32c:	andeq	sl, r2, r4, lsr #31
   1f330:	andeq	sl, r2, r8, lsr r4
   1f334:	andeq	r2, r2, ip, ror #3
   1f338:	andeq	r0, r0, r8, asr #12
   1f33c:	andeq	sl, r2, r8, lsr #5
   1f340:	andeq	sl, r2, ip, asr #11
   1f344:	andeq	sl, r2, r0, asr #23
   1f348:	andeq	sl, r2, r8, lsl #23
   1f34c:	andeq	sl, r2, r4, lsl #22
   1f350:	andeq	sl, r2, r0, asr #21
   1f354:	muleq	r2, r0, sl
   1f358:	andeq	sl, r2, r8, lsl #21
   1f35c:	andeq	sl, r2, r8, ror #21
   1f360:	strdeq	sl, [r2], -r4
   1f364:	andeq	r1, r2, r8, lsr #31
   1f368:	andeq	r0, r0, r5, lsr #9
   1f36c:	andeq	sl, r2, r4, rrx
   1f370:	andeq	sl, r2, r8, lsl #7
   1f374:	andeq	sl, r2, r4, lsr sl
   1f378:	muleq	r2, ip, r1
   1f37c:	andeq	r1, r2, r0, asr pc
   1f380:	muleq	r0, r5, r4
   1f384:	andeq	sl, r2, ip
   1f388:	andeq	sl, r2, r0, lsr r3
   1f38c:	andeq	sl, r2, ip, lsr #26
   1f390:	andeq	r1, r2, r8, asr sp
   1f394:	strdeq	sl, [r2], -r0
   1f398:	andeq	sl, r3, ip, ror #8
   1f39c:	andeq	r2, r2, r0, asr #2
   1f3a0:	ldrdeq	r1, [r2], -r0
   1f3a4:	andeq	r2, r2, r0, lsl r1
   1f3a8:	andeq	r2, r2, ip, lsl #2
   1f3ac:	andeq	r2, r2, r0, lsl r1
   1f3b0:	andeq	r2, r2, ip, lsl #2
   1f3b4:	andeq	r2, r2, r8, lsl #2
   1f3b8:	andeq	fp, r2, r8, lsr sl
   1f3bc:	andeq	r1, r2, r0, ror ip
   1f3c0:	andeq	fp, r2, r4, lsr #20
   1f3c4:	andeq	r1, r2, r4, ror #24
   1f3c8:	andeq	fp, r2, r0, lsl sl
   1f3cc:	andeq	r1, r2, r0, ror #24
   1f3d0:	strdeq	fp, [r2], -ip
   1f3d4:	andeq	r1, r2, r4, lsl ip
   1f3d8:	andeq	fp, r2, r8, ror #19
   1f3dc:	andeq	r1, r2, r0, lsr ip
   1f3e0:	ldrdeq	fp, [r2], -r4
   1f3e4:	strdeq	r1, [r2], -ip
   1f3e8:	andeq	fp, r2, r0, asr #19
   1f3ec:	strdeq	r1, [r2], -r0
   1f3f0:	andeq	fp, r2, ip, lsr #19
   1f3f4:	andeq	r1, r2, r0, lsr #23
   1f3f8:	muleq	r2, r8, r9
   1f3fc:	muleq	r2, r8, fp
   1f400:	andeq	fp, r2, r4, lsl #19
   1f404:	muleq	r2, r0, fp
   1f408:	andeq	r1, r2, ip, ror #25
   1f40c:	andeq	r1, r2, r0, ror ip
   1f410:	andeq	r1, r2, r4, asr #25
   1f414:	andeq	r9, r2, r0, lsl #27
   1f418:	andeq	sl, r2, r4, lsr #1
   1f41c:	muleq	r2, r4, ip
   1f420:	andeq	r1, r2, r8, lsl ip
   1f424:	andeq	r1, r2, ip, ror #24
   1f428:	andeq	r9, r2, r8, lsr #26
   1f42c:	andeq	sl, r2, ip, asr #32

0001f430 <__flatcc_fb_gen_common_c_builder_header@@Base>:
   1f430:	ldr	r1, [pc, #2228]	; 1fcec <__flatcc_fb_gen_common_c_builder_header@@Base+0x8bc>
   1f434:	push	{r4, r5, lr}
   1f438:	add	r5, r0, #102	; 0x66
   1f43c:	mov	r4, r0
   1f440:	sub	sp, sp, #12
   1f444:	mov	r2, r5
   1f448:	add	r1, pc, r1
   1f44c:	ldr	r0, [r0, #204]	; 0xcc
   1f450:	bl	1408c <fprintf@plt>
   1f454:	ldr	r1, [pc, #2196]	; 1fcf0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8c0>
   1f458:	mov	r2, r5
   1f45c:	add	r1, pc, r1
   1f460:	ldr	r0, [r4, #204]	; 0xcc
   1f464:	bl	1408c <fprintf@plt>
   1f468:	ldr	r0, [pc, #2180]	; 1fcf4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8c4>
   1f46c:	ldr	r3, [r4, #204]	; 0xcc
   1f470:	mov	r2, #81	; 0x51
   1f474:	mov	r1, #1
   1f478:	add	r0, pc, r0
   1f47c:	bl	14014 <fwrite@plt>
   1f480:	ldr	r0, [pc, #2160]	; 1fcf8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8c8>
   1f484:	ldr	r3, [r4, #204]	; 0xcc
   1f488:	mov	r2, #53	; 0x35
   1f48c:	mov	r1, #1
   1f490:	add	r0, pc, r0
   1f494:	bl	14014 <fwrite@plt>
   1f498:	ldr	r2, [r4, #212]	; 0xd4
   1f49c:	ldr	r3, [r4, #204]	; 0xcc
   1f4a0:	ldr	r2, [r2, #140]	; 0x8c
   1f4a4:	cmp	r2, #0
   1f4a8:	bne	1fcd0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8a0>
   1f4ac:	ldr	r0, [pc, #2120]	; 1fcfc <__flatcc_fb_gen_common_c_builder_header@@Base+0x8cc>
   1f4b0:	mov	r2, #22
   1f4b4:	mov	r1, #1
   1f4b8:	add	r0, pc, r0
   1f4bc:	bl	14014 <fwrite@plt>
   1f4c0:	ldr	r0, [pc, #2104]	; 1fd00 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8d0>
   1f4c4:	ldr	r3, [r4, #204]	; 0xcc
   1f4c8:	mov	r2, #35	; 0x23
   1f4cc:	mov	r1, #1
   1f4d0:	add	r0, pc, r0
   1f4d4:	bl	14014 <fwrite@plt>
   1f4d8:	ldr	r0, [pc, #2084]	; 1fd04 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8d4>
   1f4dc:	ldr	r3, [r4, #204]	; 0xcc
   1f4e0:	mov	r2, #7
   1f4e4:	mov	r1, #1
   1f4e8:	add	r0, pc, r0
   1f4ec:	bl	14014 <fwrite@plt>
   1f4f0:	ldr	r1, [pc, #2064]	; 1fd08 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8d8>
   1f4f4:	mov	r0, r4
   1f4f8:	add	r1, pc, r1
   1f4fc:	bl	13fb4 <strcmp@plt>
   1f500:	cmp	r0, #0
   1f504:	bne	1fc54 <__flatcc_fb_gen_common_c_builder_header@@Base+0x824>
   1f508:	ldr	r1, [pc, #2044]	; 1fd0c <__flatcc_fb_gen_common_c_builder_header@@Base+0x8dc>
   1f50c:	mov	r3, r4
   1f510:	mov	r2, r4
   1f514:	add	r1, pc, r1
   1f518:	ldr	r0, [r4, #204]	; 0xcc
   1f51c:	bl	1408c <fprintf@plt>
   1f520:	ldr	r1, [pc, #2024]	; 1fd10 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8e0>
   1f524:	mov	r3, r4
   1f528:	mov	r2, r4
   1f52c:	add	r1, pc, r1
   1f530:	ldr	r0, [r4, #204]	; 0xcc
   1f534:	bl	1408c <fprintf@plt>
   1f538:	ldr	r1, [pc, #2004]	; 1fd14 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8e4>
   1f53c:	mov	r0, r4
   1f540:	add	r1, pc, r1
   1f544:	bl	13fb4 <strcmp@plt>
   1f548:	cmp	r0, #0
   1f54c:	bne	1fc28 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f8>
   1f550:	ldr	r1, [r4, #204]	; 0xcc
   1f554:	mov	r0, #10
   1f558:	bl	140ec <fputc@plt>
   1f55c:	ldr	r1, [pc, #1972]	; 1fd18 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8e8>
   1f560:	mov	r2, r4
   1f564:	add	r1, pc, r1
   1f568:	ldr	r0, [r4, #204]	; 0xcc
   1f56c:	bl	1408c <fprintf@plt>
   1f570:	ldr	r1, [pc, #1956]	; 1fd1c <__flatcc_fb_gen_common_c_builder_header@@Base+0x8ec>
   1f574:	mov	r2, r4
   1f578:	add	r1, pc, r1
   1f57c:	ldr	r0, [r4, #204]	; 0xcc
   1f580:	bl	1408c <fprintf@plt>
   1f584:	ldr	r1, [pc, #1940]	; 1fd20 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8f0>
   1f588:	mov	r3, r4
   1f58c:	ldr	r0, [r4, #204]	; 0xcc
   1f590:	mov	r2, r4
   1f594:	add	r1, pc, r1
   1f598:	str	r4, [sp]
   1f59c:	bl	1408c <fprintf@plt>
   1f5a0:	ldr	r1, [pc, #1916]	; 1fd24 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8f4>
   1f5a4:	mov	r2, r4
   1f5a8:	add	r1, pc, r1
   1f5ac:	ldr	r0, [r4, #204]	; 0xcc
   1f5b0:	bl	1408c <fprintf@plt>
   1f5b4:	ldr	r1, [pc, #1900]	; 1fd28 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8f8>
   1f5b8:	mov	r2, r4
   1f5bc:	add	r1, pc, r1
   1f5c0:	ldr	r0, [r4, #204]	; 0xcc
   1f5c4:	bl	1408c <fprintf@plt>
   1f5c8:	ldr	r1, [pc, #1884]	; 1fd2c <__flatcc_fb_gen_common_c_builder_header@@Base+0x8fc>
   1f5cc:	mov	r2, r4
   1f5d0:	add	r1, pc, r1
   1f5d4:	ldr	r0, [r4, #204]	; 0xcc
   1f5d8:	bl	1408c <fprintf@plt>
   1f5dc:	ldr	r1, [pc, #1868]	; 1fd30 <__flatcc_fb_gen_common_c_builder_header@@Base+0x900>
   1f5e0:	mov	r2, r4
   1f5e4:	add	r1, pc, r1
   1f5e8:	ldr	r0, [r4, #204]	; 0xcc
   1f5ec:	bl	1408c <fprintf@plt>
   1f5f0:	ldr	r1, [pc, #1852]	; 1fd34 <__flatcc_fb_gen_common_c_builder_header@@Base+0x904>
   1f5f4:	mov	r3, r4
   1f5f8:	mov	r2, r4
   1f5fc:	add	r1, pc, r1
   1f600:	ldr	r0, [r4, #204]	; 0xcc
   1f604:	bl	1408c <fprintf@plt>
   1f608:	ldr	r1, [pc, #1832]	; 1fd38 <__flatcc_fb_gen_common_c_builder_header@@Base+0x908>
   1f60c:	mov	r3, r4
   1f610:	ldr	r0, [r4, #204]	; 0xcc
   1f614:	mov	r2, r4
   1f618:	add	r1, pc, r1
   1f61c:	str	r4, [sp]
   1f620:	bl	1408c <fprintf@plt>
   1f624:	ldr	r1, [pc, #1808]	; 1fd3c <__flatcc_fb_gen_common_c_builder_header@@Base+0x90c>
   1f628:	mov	r2, r4
   1f62c:	add	r1, pc, r1
   1f630:	ldr	r0, [r4, #204]	; 0xcc
   1f634:	bl	1408c <fprintf@plt>
   1f638:	ldr	r1, [pc, #1792]	; 1fd40 <__flatcc_fb_gen_common_c_builder_header@@Base+0x910>
   1f63c:	mov	r2, r4
   1f640:	add	r1, pc, r1
   1f644:	ldr	r0, [r4, #204]	; 0xcc
   1f648:	bl	1408c <fprintf@plt>
   1f64c:	ldr	r1, [pc, #1776]	; 1fd44 <__flatcc_fb_gen_common_c_builder_header@@Base+0x914>
   1f650:	mov	r2, r4
   1f654:	add	r1, pc, r1
   1f658:	ldr	r0, [r4, #204]	; 0xcc
   1f65c:	bl	1408c <fprintf@plt>
   1f660:	ldr	r1, [pc, #1760]	; 1fd48 <__flatcc_fb_gen_common_c_builder_header@@Base+0x918>
   1f664:	mov	r3, r4
   1f668:	mov	r2, r4
   1f66c:	add	r1, pc, r1
   1f670:	ldr	r0, [r4, #204]	; 0xcc
   1f674:	bl	1408c <fprintf@plt>
   1f678:	ldr	r1, [pc, #1740]	; 1fd4c <__flatcc_fb_gen_common_c_builder_header@@Base+0x91c>
   1f67c:	mov	r2, r4
   1f680:	add	r1, pc, r1
   1f684:	ldr	r0, [r4, #204]	; 0xcc
   1f688:	bl	1408c <fprintf@plt>
   1f68c:	ldr	r1, [pc, #1724]	; 1fd50 <__flatcc_fb_gen_common_c_builder_header@@Base+0x920>
   1f690:	ldr	r0, [r4, #204]	; 0xcc
   1f694:	mov	r3, r4
   1f698:	mov	r2, r4
   1f69c:	add	r1, pc, r1
   1f6a0:	str	r4, [sp]
   1f6a4:	bl	1408c <fprintf@plt>
   1f6a8:	ldr	r1, [pc, #1700]	; 1fd54 <__flatcc_fb_gen_common_c_builder_header@@Base+0x924>
   1f6ac:	ldr	r0, [r4, #204]	; 0xcc
   1f6b0:	mov	r3, r4
   1f6b4:	mov	r2, r4
   1f6b8:	add	r1, pc, r1
   1f6bc:	str	r4, [sp, #4]
   1f6c0:	str	r4, [sp]
   1f6c4:	bl	1408c <fprintf@plt>
   1f6c8:	ldr	r1, [pc, #1672]	; 1fd58 <__flatcc_fb_gen_common_c_builder_header@@Base+0x928>
   1f6cc:	mov	r3, r4
   1f6d0:	mov	r2, r4
   1f6d4:	add	r1, pc, r1
   1f6d8:	ldr	r0, [r4, #204]	; 0xcc
   1f6dc:	bl	1408c <fprintf@plt>
   1f6e0:	ldr	r1, [pc, #1652]	; 1fd5c <__flatcc_fb_gen_common_c_builder_header@@Base+0x92c>
   1f6e4:	ldr	r0, [r4, #204]	; 0xcc
   1f6e8:	mov	r3, r4
   1f6ec:	mov	r2, r4
   1f6f0:	add	r1, pc, r1
   1f6f4:	str	r4, [sp, #4]
   1f6f8:	str	r4, [sp]
   1f6fc:	bl	1408c <fprintf@plt>
   1f700:	ldr	r1, [pc, #1624]	; 1fd60 <__flatcc_fb_gen_common_c_builder_header@@Base+0x930>
   1f704:	mov	r3, r4
   1f708:	mov	r2, r4
   1f70c:	add	r1, pc, r1
   1f710:	ldr	r0, [r4, #204]	; 0xcc
   1f714:	bl	1408c <fprintf@plt>
   1f718:	ldr	r1, [pc, #1604]	; 1fd64 <__flatcc_fb_gen_common_c_builder_header@@Base+0x934>
   1f71c:	mov	r2, r4
   1f720:	add	r1, pc, r1
   1f724:	ldr	r0, [r4, #204]	; 0xcc
   1f728:	bl	1408c <fprintf@plt>
   1f72c:	ldr	r1, [pc, #1588]	; 1fd68 <__flatcc_fb_gen_common_c_builder_header@@Base+0x938>
   1f730:	mov	r2, r4
   1f734:	add	r1, pc, r1
   1f738:	ldr	r0, [r4, #204]	; 0xcc
   1f73c:	bl	1408c <fprintf@plt>
   1f740:	ldr	r1, [pc, #1572]	; 1fd6c <__flatcc_fb_gen_common_c_builder_header@@Base+0x93c>
   1f744:	mov	r2, r4
   1f748:	add	r1, pc, r1
   1f74c:	ldr	r0, [r4, #204]	; 0xcc
   1f750:	bl	1408c <fprintf@plt>
   1f754:	ldr	r1, [pc, #1556]	; 1fd70 <__flatcc_fb_gen_common_c_builder_header@@Base+0x940>
   1f758:	mov	r2, r4
   1f75c:	add	r1, pc, r1
   1f760:	ldr	r0, [r4, #204]	; 0xcc
   1f764:	bl	1408c <fprintf@plt>
   1f768:	ldr	r1, [pc, #1540]	; 1fd74 <__flatcc_fb_gen_common_c_builder_header@@Base+0x944>
   1f76c:	mov	r3, r4
   1f770:	mov	r2, r4
   1f774:	add	r1, pc, r1
   1f778:	ldr	r0, [r4, #204]	; 0xcc
   1f77c:	bl	1408c <fprintf@plt>
   1f780:	ldr	r1, [pc, #1520]	; 1fd78 <__flatcc_fb_gen_common_c_builder_header@@Base+0x948>
   1f784:	mov	r2, r4
   1f788:	add	r1, pc, r1
   1f78c:	ldr	r0, [r4, #204]	; 0xcc
   1f790:	bl	1408c <fprintf@plt>
   1f794:	ldr	r1, [pc, #1504]	; 1fd7c <__flatcc_fb_gen_common_c_builder_header@@Base+0x94c>
   1f798:	mov	r2, r4
   1f79c:	add	r1, pc, r1
   1f7a0:	ldr	r0, [r4, #204]	; 0xcc
   1f7a4:	bl	1408c <fprintf@plt>
   1f7a8:	ldr	r1, [pc, #1488]	; 1fd80 <__flatcc_fb_gen_common_c_builder_header@@Base+0x950>
   1f7ac:	mov	r3, r4
   1f7b0:	mov	r2, r4
   1f7b4:	add	r1, pc, r1
   1f7b8:	ldr	r0, [r4, #204]	; 0xcc
   1f7bc:	bl	1408c <fprintf@plt>
   1f7c0:	ldr	r1, [pc, #1468]	; 1fd84 <__flatcc_fb_gen_common_c_builder_header@@Base+0x954>
   1f7c4:	mov	r3, r4
   1f7c8:	mov	r2, r4
   1f7cc:	add	r1, pc, r1
   1f7d0:	ldr	r0, [r4, #204]	; 0xcc
   1f7d4:	bl	1408c <fprintf@plt>
   1f7d8:	ldr	r1, [pc, #1448]	; 1fd88 <__flatcc_fb_gen_common_c_builder_header@@Base+0x958>
   1f7dc:	mov	r3, r4
   1f7e0:	mov	r2, r4
   1f7e4:	add	r1, pc, r1
   1f7e8:	ldr	r0, [r4, #204]	; 0xcc
   1f7ec:	bl	1408c <fprintf@plt>
   1f7f0:	ldr	r1, [pc, #1428]	; 1fd8c <__flatcc_fb_gen_common_c_builder_header@@Base+0x95c>
   1f7f4:	mov	r3, r4
   1f7f8:	mov	r2, r4
   1f7fc:	add	r1, pc, r1
   1f800:	ldr	r0, [r4, #204]	; 0xcc
   1f804:	bl	1408c <fprintf@plt>
   1f808:	ldr	r1, [pc, #1408]	; 1fd90 <__flatcc_fb_gen_common_c_builder_header@@Base+0x960>
   1f80c:	ldr	r0, [r4, #204]	; 0xcc
   1f810:	mov	r3, r4
   1f814:	mov	r2, r4
   1f818:	add	r1, pc, r1
   1f81c:	str	r4, [sp]
   1f820:	bl	1408c <fprintf@plt>
   1f824:	ldr	r1, [pc, #1384]	; 1fd94 <__flatcc_fb_gen_common_c_builder_header@@Base+0x964>
   1f828:	mov	r3, r4
   1f82c:	mov	r2, r4
   1f830:	add	r1, pc, r1
   1f834:	ldr	r0, [r4, #204]	; 0xcc
   1f838:	bl	1408c <fprintf@plt>
   1f83c:	ldr	r1, [pc, #1364]	; 1fd98 <__flatcc_fb_gen_common_c_builder_header@@Base+0x968>
   1f840:	mov	r2, r4
   1f844:	add	r1, pc, r1
   1f848:	ldr	r0, [r4, #204]	; 0xcc
   1f84c:	bl	1408c <fprintf@plt>
   1f850:	ldr	r1, [pc, #1348]	; 1fd9c <__flatcc_fb_gen_common_c_builder_header@@Base+0x96c>
   1f854:	mov	r2, r4
   1f858:	add	r1, pc, r1
   1f85c:	ldr	r0, [r4, #204]	; 0xcc
   1f860:	bl	1408c <fprintf@plt>
   1f864:	ldr	r1, [pc, #1332]	; 1fda0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x970>
   1f868:	mov	r2, r4
   1f86c:	add	r1, pc, r1
   1f870:	ldr	r0, [r4, #204]	; 0xcc
   1f874:	bl	1408c <fprintf@plt>
   1f878:	ldr	r1, [pc, #1316]	; 1fda4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x974>
   1f87c:	mov	r3, r4
   1f880:	ldr	r0, [r4, #204]	; 0xcc
   1f884:	mov	r2, r4
   1f888:	add	r1, pc, r1
   1f88c:	str	r4, [sp]
   1f890:	bl	1408c <fprintf@plt>
   1f894:	ldr	r1, [pc, #1292]	; 1fda8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x978>
   1f898:	mov	r2, r4
   1f89c:	add	r1, pc, r1
   1f8a0:	ldr	r0, [r4, #204]	; 0xcc
   1f8a4:	bl	1408c <fprintf@plt>
   1f8a8:	ldr	r1, [pc, #1276]	; 1fdac <__flatcc_fb_gen_common_c_builder_header@@Base+0x97c>
   1f8ac:	mov	r2, r4
   1f8b0:	add	r1, pc, r1
   1f8b4:	ldr	r0, [r4, #204]	; 0xcc
   1f8b8:	bl	1408c <fprintf@plt>
   1f8bc:	ldr	r1, [pc, #1260]	; 1fdb0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x980>
   1f8c0:	mov	r2, r4
   1f8c4:	add	r1, pc, r1
   1f8c8:	ldr	r0, [r4, #204]	; 0xcc
   1f8cc:	bl	1408c <fprintf@plt>
   1f8d0:	ldr	r1, [pc, #1244]	; 1fdb4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x984>
   1f8d4:	mov	r2, r4
   1f8d8:	add	r1, pc, r1
   1f8dc:	ldr	r0, [r4, #204]	; 0xcc
   1f8e0:	bl	1408c <fprintf@plt>
   1f8e4:	ldr	r1, [pc, #1228]	; 1fdb8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x988>
   1f8e8:	mov	r3, r4
   1f8ec:	mov	r2, r4
   1f8f0:	add	r1, pc, r1
   1f8f4:	ldr	r0, [r4, #204]	; 0xcc
   1f8f8:	bl	1408c <fprintf@plt>
   1f8fc:	ldr	r1, [pc, #1208]	; 1fdbc <__flatcc_fb_gen_common_c_builder_header@@Base+0x98c>
   1f900:	mov	r2, r4
   1f904:	add	r1, pc, r1
   1f908:	ldr	r0, [r4, #204]	; 0xcc
   1f90c:	bl	1408c <fprintf@plt>
   1f910:	ldr	r1, [pc, #1192]	; 1fdc0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x990>
   1f914:	mov	r2, r4
   1f918:	add	r1, pc, r1
   1f91c:	ldr	r0, [r4, #204]	; 0xcc
   1f920:	bl	1408c <fprintf@plt>
   1f924:	ldr	r1, [pc, #1176]	; 1fdc4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x994>
   1f928:	mov	r2, r4
   1f92c:	add	r1, pc, r1
   1f930:	ldr	r0, [r4, #204]	; 0xcc
   1f934:	bl	1408c <fprintf@plt>
   1f938:	ldr	r1, [pc, #1160]	; 1fdc8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x998>
   1f93c:	mov	r2, r4
   1f940:	add	r1, pc, r1
   1f944:	ldr	r0, [r4, #204]	; 0xcc
   1f948:	bl	1408c <fprintf@plt>
   1f94c:	ldr	r1, [pc, #1144]	; 1fdcc <__flatcc_fb_gen_common_c_builder_header@@Base+0x99c>
   1f950:	mov	r2, r4
   1f954:	add	r1, pc, r1
   1f958:	ldr	r0, [r4, #204]	; 0xcc
   1f95c:	bl	1408c <fprintf@plt>
   1f960:	ldr	r1, [pc, #1128]	; 1fdd0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9a0>
   1f964:	mov	r2, r4
   1f968:	add	r1, pc, r1
   1f96c:	ldr	r0, [r4, #204]	; 0xcc
   1f970:	bl	1408c <fprintf@plt>
   1f974:	ldr	r1, [pc, #1112]	; 1fdd4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9a4>
   1f978:	mov	r2, r4
   1f97c:	add	r1, pc, r1
   1f980:	ldr	r0, [r4, #204]	; 0xcc
   1f984:	bl	1408c <fprintf@plt>
   1f988:	ldr	r1, [pc, #1096]	; 1fdd8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9a8>
   1f98c:	mov	r2, r4
   1f990:	add	r1, pc, r1
   1f994:	ldr	r0, [r4, #204]	; 0xcc
   1f998:	bl	1408c <fprintf@plt>
   1f99c:	ldr	r1, [pc, #1080]	; 1fddc <__flatcc_fb_gen_common_c_builder_header@@Base+0x9ac>
   1f9a0:	mov	r2, r4
   1f9a4:	add	r1, pc, r1
   1f9a8:	ldr	r0, [r4, #204]	; 0xcc
   1f9ac:	bl	1408c <fprintf@plt>
   1f9b0:	ldr	r1, [pc, #1064]	; 1fde0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9b0>
   1f9b4:	mov	r2, r4
   1f9b8:	add	r1, pc, r1
   1f9bc:	ldr	r0, [r4, #204]	; 0xcc
   1f9c0:	bl	1408c <fprintf@plt>
   1f9c4:	ldr	r1, [pc, #1048]	; 1fde4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9b4>
   1f9c8:	mov	r2, r4
   1f9cc:	add	r1, pc, r1
   1f9d0:	ldr	r0, [r4, #204]	; 0xcc
   1f9d4:	bl	1408c <fprintf@plt>
   1f9d8:	ldr	r1, [pc, #1032]	; 1fde8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9b8>
   1f9dc:	mov	r2, r4
   1f9e0:	add	r1, pc, r1
   1f9e4:	ldr	r0, [r4, #204]	; 0xcc
   1f9e8:	bl	1408c <fprintf@plt>
   1f9ec:	ldr	r1, [pc, #1016]	; 1fdec <__flatcc_fb_gen_common_c_builder_header@@Base+0x9bc>
   1f9f0:	mov	r2, r4
   1f9f4:	add	r1, pc, r1
   1f9f8:	ldr	r0, [r4, #204]	; 0xcc
   1f9fc:	bl	1408c <fprintf@plt>
   1fa00:	ldr	r1, [pc, #1000]	; 1fdf0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9c0>
   1fa04:	mov	r2, r4
   1fa08:	add	r1, pc, r1
   1fa0c:	ldr	r0, [r4, #204]	; 0xcc
   1fa10:	bl	1408c <fprintf@plt>
   1fa14:	ldr	r1, [pc, #984]	; 1fdf4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9c4>
   1fa18:	mov	r2, r4
   1fa1c:	add	r1, pc, r1
   1fa20:	ldr	r0, [r4, #204]	; 0xcc
   1fa24:	bl	1408c <fprintf@plt>
   1fa28:	ldr	r1, [pc, #968]	; 1fdf8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9c8>
   1fa2c:	mov	r2, r4
   1fa30:	add	r1, pc, r1
   1fa34:	ldr	r0, [r4, #204]	; 0xcc
   1fa38:	bl	1408c <fprintf@plt>
   1fa3c:	ldr	r1, [pc, #952]	; 1fdfc <__flatcc_fb_gen_common_c_builder_header@@Base+0x9cc>
   1fa40:	mov	r2, r4
   1fa44:	add	r1, pc, r1
   1fa48:	ldr	r0, [r4, #204]	; 0xcc
   1fa4c:	bl	1408c <fprintf@plt>
   1fa50:	ldr	r1, [r4, #204]	; 0xcc
   1fa54:	mov	r0, #10
   1fa58:	bl	140ec <fputc@plt>
   1fa5c:	ldr	r1, [pc, #924]	; 1fe00 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9d0>
   1fa60:	ldr	r0, [r4, #204]	; 0xcc
   1fa64:	mov	r3, r4
   1fa68:	mov	r2, r4
   1fa6c:	add	r1, pc, r1
   1fa70:	str	r4, [sp]
   1fa74:	bl	1408c <fprintf@plt>
   1fa78:	ldr	r1, [pc, #900]	; 1fe04 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9d4>
   1fa7c:	ldr	r0, [r4, #204]	; 0xcc
   1fa80:	mov	r3, r4
   1fa84:	mov	r2, r4
   1fa88:	add	r1, pc, r1
   1fa8c:	str	r4, [sp]
   1fa90:	bl	1408c <fprintf@plt>
   1fa94:	ldr	r1, [pc, #876]	; 1fe08 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9d8>
   1fa98:	ldr	r0, [r4, #204]	; 0xcc
   1fa9c:	mov	r3, r4
   1faa0:	mov	r2, r4
   1faa4:	add	r1, pc, r1
   1faa8:	str	r4, [sp, #4]
   1faac:	str	r4, [sp]
   1fab0:	bl	1408c <fprintf@plt>
   1fab4:	ldr	r1, [pc, #848]	; 1fe0c <__flatcc_fb_gen_common_c_builder_header@@Base+0x9dc>
   1fab8:	ldr	r0, [r4, #204]	; 0xcc
   1fabc:	mov	r3, r4
   1fac0:	mov	r2, r4
   1fac4:	add	r1, pc, r1
   1fac8:	str	r4, [sp]
   1facc:	bl	1408c <fprintf@plt>
   1fad0:	ldr	r1, [pc, #824]	; 1fe10 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9e0>
   1fad4:	ldr	r0, [r4, #204]	; 0xcc
   1fad8:	mov	r3, r4
   1fadc:	mov	r2, r4
   1fae0:	add	r1, pc, r1
   1fae4:	str	r4, [sp]
   1fae8:	bl	1408c <fprintf@plt>
   1faec:	ldr	r1, [pc, #800]	; 1fe14 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9e4>
   1faf0:	ldr	r0, [r4, #204]	; 0xcc
   1faf4:	mov	r3, r4
   1faf8:	mov	r2, r4
   1fafc:	add	r1, pc, r1
   1fb00:	str	r4, [sp]
   1fb04:	bl	1408c <fprintf@plt>
   1fb08:	ldr	r1, [pc, #776]	; 1fe18 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9e8>
   1fb0c:	ldr	r0, [r4, #204]	; 0xcc
   1fb10:	mov	r3, r4
   1fb14:	mov	r2, r4
   1fb18:	add	r1, pc, r1
   1fb1c:	str	r4, [sp]
   1fb20:	bl	1408c <fprintf@plt>
   1fb24:	ldr	r1, [pc, #752]	; 1fe1c <__flatcc_fb_gen_common_c_builder_header@@Base+0x9ec>
   1fb28:	ldr	r0, [r4, #204]	; 0xcc
   1fb2c:	mov	r3, r4
   1fb30:	mov	r2, r4
   1fb34:	add	r1, pc, r1
   1fb38:	str	r4, [sp]
   1fb3c:	bl	1408c <fprintf@plt>
   1fb40:	ldr	r1, [pc, #728]	; 1fe20 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9f0>
   1fb44:	ldr	r0, [r4, #204]	; 0xcc
   1fb48:	mov	r3, r4
   1fb4c:	mov	r2, r4
   1fb50:	add	r1, pc, r1
   1fb54:	str	r4, [sp]
   1fb58:	bl	1408c <fprintf@plt>
   1fb5c:	ldr	r1, [pc, #704]	; 1fe24 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9f4>
   1fb60:	ldr	r0, [r4, #204]	; 0xcc
   1fb64:	mov	r3, r4
   1fb68:	mov	r2, r4
   1fb6c:	add	r1, pc, r1
   1fb70:	str	r4, [sp]
   1fb74:	bl	1408c <fprintf@plt>
   1fb78:	ldr	r1, [pc, #680]	; 1fe28 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9f8>
   1fb7c:	mov	r3, r4
   1fb80:	mov	r2, r4
   1fb84:	ldr	r0, [r4, #204]	; 0xcc
   1fb88:	add	r1, pc, r1
   1fb8c:	str	r4, [sp]
   1fb90:	bl	1408c <fprintf@plt>
   1fb94:	ldr	r1, [r4, #204]	; 0xcc
   1fb98:	mov	r0, #10
   1fb9c:	bl	140ec <fputc@plt>
   1fba0:	ldr	r1, [pc, #644]	; 1fe2c <__flatcc_fb_gen_common_c_builder_header@@Base+0x9fc>
   1fba4:	mov	r3, r4
   1fba8:	mov	r2, r4
   1fbac:	add	r1, pc, r1
   1fbb0:	ldr	r0, [r4, #204]	; 0xcc
   1fbb4:	bl	1408c <fprintf@plt>
   1fbb8:	ldr	r1, [r4, #204]	; 0xcc
   1fbbc:	mov	r0, #10
   1fbc0:	bl	140ec <fputc@plt>
   1fbc4:	ldr	r1, [pc, #612]	; 1fe30 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa00>
   1fbc8:	mov	r3, r4
   1fbcc:	mov	r2, r4
   1fbd0:	add	r1, pc, r1
   1fbd4:	ldr	r0, [r4, #204]	; 0xcc
   1fbd8:	bl	1408c <fprintf@plt>
   1fbdc:	ldr	r3, [r4, #212]	; 0xd4
   1fbe0:	ldr	r0, [r4, #204]	; 0xcc
   1fbe4:	ldr	r3, [r3, #140]	; 0x8c
   1fbe8:	cmp	r3, #0
   1fbec:	beq	1fc0c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7dc>
   1fbf0:	mov	r3, r0
   1fbf4:	ldr	r0, [pc, #568]	; 1fe34 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa04>
   1fbf8:	mov	r2, #36	; 0x24
   1fbfc:	mov	r1, #1
   1fc00:	add	r0, pc, r0
   1fc04:	bl	14014 <fwrite@plt>
   1fc08:	ldr	r0, [r4, #204]	; 0xcc
   1fc0c:	ldr	r1, [pc, #548]	; 1fe38 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa08>
   1fc10:	mov	r2, r5
   1fc14:	add	r1, pc, r1
   1fc18:	bl	1408c <fprintf@plt>
   1fc1c:	mov	r0, #0
   1fc20:	add	sp, sp, #12
   1fc24:	pop	{r4, r5, pc}
   1fc28:	ldr	r1, [pc, #524]	; 1fe3c <__flatcc_fb_gen_common_c_builder_header@@Base+0xa0c>
   1fc2c:	mov	r2, r4
   1fc30:	add	r1, pc, r1
   1fc34:	ldr	r0, [r4, #204]	; 0xcc
   1fc38:	bl	1408c <fprintf@plt>
   1fc3c:	ldr	r1, [pc, #508]	; 1fe40 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa10>
   1fc40:	mov	r2, r4
   1fc44:	add	r1, pc, r1
   1fc48:	ldr	r0, [r4, #204]	; 0xcc
   1fc4c:	bl	1408c <fprintf@plt>
   1fc50:	b	1f550 <__flatcc_fb_gen_common_c_builder_header@@Base+0x120>
   1fc54:	ldr	r1, [pc, #488]	; 1fe44 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa14>
   1fc58:	mov	r2, r4
   1fc5c:	add	r1, pc, r1
   1fc60:	ldr	r0, [r4, #204]	; 0xcc
   1fc64:	bl	1408c <fprintf@plt>
   1fc68:	ldr	r1, [pc, #472]	; 1fe48 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa18>
   1fc6c:	mov	r2, r4
   1fc70:	add	r1, pc, r1
   1fc74:	ldr	r0, [r4, #204]	; 0xcc
   1fc78:	bl	1408c <fprintf@plt>
   1fc7c:	ldr	r1, [pc, #456]	; 1fe4c <__flatcc_fb_gen_common_c_builder_header@@Base+0xa1c>
   1fc80:	mov	r2, r4
   1fc84:	add	r1, pc, r1
   1fc88:	ldr	r0, [r4, #204]	; 0xcc
   1fc8c:	bl	1408c <fprintf@plt>
   1fc90:	ldr	r1, [pc, #440]	; 1fe50 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa20>
   1fc94:	mov	r2, r4
   1fc98:	add	r1, pc, r1
   1fc9c:	ldr	r0, [r4, #204]	; 0xcc
   1fca0:	bl	1408c <fprintf@plt>
   1fca4:	ldr	r1, [pc, #424]	; 1fe54 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa24>
   1fca8:	mov	r2, r4
   1fcac:	add	r1, pc, r1
   1fcb0:	ldr	r0, [r4, #204]	; 0xcc
   1fcb4:	bl	1408c <fprintf@plt>
   1fcb8:	ldr	r1, [pc, #408]	; 1fe58 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa28>
   1fcbc:	mov	r2, r4
   1fcc0:	add	r1, pc, r1
   1fcc4:	ldr	r0, [r4, #204]	; 0xcc
   1fcc8:	bl	1408c <fprintf@plt>
   1fccc:	b	1f508 <__flatcc_fb_gen_common_c_builder_header@@Base+0xd8>
   1fcd0:	ldr	r0, [pc, #388]	; 1fe5c <__flatcc_fb_gen_common_c_builder_header@@Base+0xa2c>
   1fcd4:	mov	r2, #36	; 0x24
   1fcd8:	mov	r1, #1
   1fcdc:	add	r0, pc, r0
   1fce0:	bl	14014 <fwrite@plt>
   1fce4:	ldr	r3, [r4, #204]	; 0xcc
   1fce8:	b	1f4ac <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c>
   1fcec:	andeq	sl, r2, ip, lsl #19
   1fcf0:	muleq	r2, r8, r9
   1fcf4:	andeq	r2, r2, ip, lsr sp
   1fcf8:	andeq	sl, r2, r4, lsl #19
   1fcfc:	muleq	r2, r4, r9
   1fd00:	muleq	r2, r4, r9
   1fd04:	andeq	r8, r2, r8, lsr #29
   1fd08:	muleq	r2, r0, r9
   1fd0c:	andeq	sl, r2, r8, asr #21
   1fd10:	andeq	sl, r2, ip, asr #21
   1fd14:	ldrdeq	r2, [r2], -ip
   1fd18:	andeq	sl, r2, r4, lsl fp
   1fd1c:	andeq	sl, r2, r4, ror lr
   1fd20:	andeq	fp, r2, r4, lsr #10
   1fd24:	muleq	r2, ip, r5
   1fd28:	andeq	ip, r2, r4, asr #32
   1fd2c:	andeq	ip, r2, ip, lsl #8
   1fd30:	andeq	ip, r2, r0, lsr sl
   1fd34:	muleq	r2, r4, lr
   1fd38:	andeq	sp, r2, ip, ror #11
   1fd3c:	andeq	sp, r2, r0, lsr #22
   1fd40:	andeq	sp, r2, ip, lsl #31
   1fd44:	andeq	lr, r2, r8, lsl #2
   1fd48:	andeq	lr, r2, ip, asr #8
   1fd4c:	andeq	lr, r2, r0, asr #12
   1fd50:	muleq	r2, r0, r9
   1fd54:	andeq	lr, r2, r0, ror lr
   1fd58:	andeq	lr, r2, r0, ror #30
   1fd5c:	andeq	pc, r2, ip, lsr #5
   1fd60:	muleq	r2, r0, r8
   1fd64:	andeq	pc, r2, r0, lsr sl	; <UNPREDICTABLE>
   1fd68:	andeq	pc, r2, r4, asr #24
   1fd6c:	strdeq	pc, [r2], -r0
   1fd70:	muleq	r3, ip, r2
   1fd74:	muleq	r3, r8, r6
   1fd78:	andeq	r0, r3, r0, ror r7
   1fd7c:	andeq	r0, r3, r0, asr #19
   1fd80:	andeq	r0, r3, r0, lsr #26
   1fd84:	andeq	r1, r3, r8, asr r1
   1fd88:	ldrdeq	r1, [r3], -r8
   1fd8c:			; <UNDEFINED> instruction: 0x000317bc
   1fd90:	andeq	r1, r3, ip, lsr #17
   1fd94:	andeq	r1, r3, r0, lsr #18
   1fd98:	andeq	r1, r3, r8, asr ip
   1fd9c:	andeq	r1, r3, ip, asr #29
   1fda0:	andeq	r2, r3, r8, asr #2
   1fda4:	andeq	r2, r3, r4, ror #13
   1fda8:	andeq	r2, r3, r0, ror #14
   1fdac:	andeq	r2, r3, r8, ror r7
   1fdb0:	andeq	r2, r3, r8, lsl #15
   1fdb4:	andeq	r2, r3, r0, lsr #15
   1fdb8:	andeq	r2, r3, ip, lsr #15
   1fdbc:	andeq	r2, r3, r4, asr #15
   1fdc0:	ldrdeq	r2, [r3], -r4
   1fdc4:	strdeq	r2, [r3], -r0
   1fdc8:	andeq	r2, r3, r0, lsl #16
   1fdcc:	andeq	r2, r3, ip, lsl r8
   1fdd0:	andeq	r2, r3, ip, lsr #16
   1fdd4:	andeq	r2, r3, r8, asr #16
   1fdd8:	andeq	r2, r3, r8, asr r8
   1fddc:	andeq	r2, r3, r0, ror r8
   1fde0:	andeq	r2, r3, r0, lsl #17
   1fde4:	muleq	r3, r8, r8
   1fde8:	andeq	r2, r3, r8, lsr #17
   1fdec:	andeq	r2, r3, r0, asr #17
   1fdf0:	ldrdeq	r2, [r3], -r0
   1fdf4:	andeq	r2, r3, r8, ror #17
   1fdf8:	strdeq	r2, [r3], -r8
   1fdfc:	andeq	r2, r3, r0, lsl r9
   1fe00:	andeq	r2, r3, ip, lsl #18
   1fe04:	andeq	r2, r3, r8, lsl r9
   1fe08:	andeq	r2, r3, r4, lsr #18
   1fe0c:	andeq	r2, r3, ip, lsr #18
   1fe10:	andeq	r2, r3, ip, lsr r9
   1fe14:	andeq	r2, r3, ip, asr #18
   1fe18:	andeq	r2, r3, ip, asr r9
   1fe1c:	andeq	r2, r3, r8, ror #18
   1fe20:	andeq	r2, r3, r4, ror r9
   1fe24:	andeq	r2, r3, r0, lsl #19
   1fe28:	andeq	r2, r3, ip, lsl #19
   1fe2c:	muleq	r3, r0, r9
   1fe30:	andeq	r2, r3, r4, lsl #19
   1fe34:	andeq	r8, r2, ip, lsr #10
   1fe38:	andeq	r2, r3, r8, asr r9
   1fe3c:	strdeq	sl, [r2], -r0
   1fe40:	andeq	sl, r2, r0, lsl r4
   1fe44:	andeq	sl, r2, ip, lsr r2
   1fe48:	andeq	sl, r2, r0, asr r2
   1fe4c:	andeq	sl, r2, r4, ror #4
   1fe50:	andeq	sl, r2, ip, ror r2
   1fe54:	muleq	r2, ip, r2
   1fe58:	andeq	sl, r2, r4, asr #5
   1fe5c:	andeq	r2, r2, ip, ror #11

0001fe60 <__flatcc_fb_gen_c_builder@@Base>:
   1fe60:	ldr	r3, [r0, #208]	; 0xd0
   1fe64:	ldr	r1, [pc, #1916]	; 205e8 <__flatcc_fb_gen_c_builder@@Base+0x788>
   1fe68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fe6c:	add	r1, pc, r1
   1fe70:	ldr	r3, [r3, #164]	; 0xa4
   1fe74:	mov	r4, r0
   1fe78:	sub	sp, sp, #292	; 0x124
   1fe7c:	mov	r2, r3
   1fe80:	ldr	r0, [r0, #204]	; 0xcc
   1fe84:	bl	1408c <fprintf@plt>
   1fe88:	ldr	r0, [pc, #1884]	; 205ec <__flatcc_fb_gen_c_builder@@Base+0x78c>
   1fe8c:	ldr	r3, [r4, #204]	; 0xcc
   1fe90:	mov	r2, #81	; 0x51
   1fe94:	mov	r1, #1
   1fe98:	add	r0, pc, r0
   1fe9c:	bl	14014 <fwrite@plt>
   1fea0:	ldr	r3, [r4, #208]	; 0xd0
   1fea4:	ldr	r1, [pc, #1860]	; 205f0 <__flatcc_fb_gen_c_builder@@Base+0x790>
   1fea8:	ldr	r0, [r4, #204]	; 0xcc
   1feac:	ldr	r2, [r3, #164]	; 0xa4
   1feb0:	add	r1, pc, r1
   1feb4:	bl	1408c <fprintf@plt>
   1feb8:	ldr	r3, [r4, #208]	; 0xd0
   1febc:	ldr	r5, [pc, #1840]	; 205f4 <__flatcc_fb_gen_c_builder@@Base+0x794>
   1fec0:	ldr	r1, [pc, #1840]	; 205f8 <__flatcc_fb_gen_c_builder@@Base+0x798>
   1fec4:	ldr	r2, [r3, #160]	; 0xa0
   1fec8:	add	r5, pc, r5
   1fecc:	add	r1, pc, r1
   1fed0:	ldr	r0, [r4, #204]	; 0xcc
   1fed4:	bl	1408c <fprintf@plt>
   1fed8:	ldr	r3, [r4, #204]	; 0xcc
   1fedc:	mov	r2, #7
   1fee0:	mov	r1, #1
   1fee4:	mov	r0, r5
   1fee8:	bl	14014 <fwrite@plt>
   1feec:	ldr	r1, [pc, #1800]	; 205fc <__flatcc_fb_gen_c_builder@@Base+0x79c>
   1fef0:	add	r2, r4, #102	; 0x66
   1fef4:	add	r1, pc, r1
   1fef8:	ldr	r0, [r4, #204]	; 0xcc
   1fefc:	bl	1408c <fprintf@plt>
   1ff00:	ldr	r1, [pc, #1784]	; 20600 <__flatcc_fb_gen_c_builder@@Base+0x7a0>
   1ff04:	mov	r2, r4
   1ff08:	add	r1, pc, r1
   1ff0c:	ldr	r0, [r4, #204]	; 0xcc
   1ff10:	bl	1408c <fprintf@plt>
   1ff14:	ldr	r3, [r4, #204]	; 0xcc
   1ff18:	mov	r2, #7
   1ff1c:	mov	r1, #1
   1ff20:	mov	r0, r5
   1ff24:	bl	14014 <fwrite@plt>
   1ff28:	ldr	r2, [pc, #1748]	; 20604 <__flatcc_fb_gen_c_builder@@Base+0x7a4>
   1ff2c:	ldr	r1, [pc, #1748]	; 20608 <__flatcc_fb_gen_c_builder@@Base+0x7a8>
   1ff30:	mov	r0, r4
   1ff34:	add	r2, pc, r2
   1ff38:	add	r1, pc, r1
   1ff3c:	bl	15f70 <__flatcc_fb_gen_c_includes@@Base>
   1ff40:	ldr	r3, [r4, #212]	; 0xd4
   1ff44:	ldr	r0, [r4, #204]	; 0xcc
   1ff48:	ldr	r3, [r3, #140]	; 0x8c
   1ff4c:	cmp	r3, #0
   1ff50:	bne	20538 <__flatcc_fb_gen_c_builder@@Base+0x6d8>
   1ff54:	ldr	r3, [r4, #208]	; 0xd0
   1ff58:	ldrh	r2, [r3, #16]
   1ff5c:	cmp	r2, #2
   1ff60:	beq	20564 <__flatcc_fb_gen_c_builder@@Base+0x704>
   1ff64:	ldr	r1, [pc, #1696]	; 2060c <__flatcc_fb_gen_c_builder@@Base+0x7ac>
   1ff68:	mov	r3, r4
   1ff6c:	mov	r2, r4
   1ff70:	add	r1, pc, r1
   1ff74:	bl	1408c <fprintf@plt>
   1ff78:	ldr	r3, [r4, #208]	; 0xd0
   1ff7c:	ldrh	r2, [r3, #32]
   1ff80:	cmp	r2, #2
   1ff84:	beq	20598 <__flatcc_fb_gen_c_builder@@Base+0x738>
   1ff88:	ldr	r2, [r4, #212]	; 0xd4
   1ff8c:	ldr	r1, [pc, #1660]	; 20610 <__flatcc_fb_gen_c_builder@@Base+0x7b0>
   1ff90:	ldr	r0, [r4, #204]	; 0xcc
   1ff94:	ldr	r2, [r2, #104]	; 0x68
   1ff98:	mov	r3, r4
   1ff9c:	str	r2, [sp]
   1ffa0:	add	r1, pc, r1
   1ffa4:	mov	r2, r4
   1ffa8:	bl	1408c <fprintf@plt>
   1ffac:	ldr	r1, [r4, #204]	; 0xcc
   1ffb0:	mov	r0, #10
   1ffb4:	add	sl, sp, #68	; 0x44
   1ffb8:	bl	140ec <fputc@plt>
   1ffbc:	mov	r0, sl
   1ffc0:	mov	r2, #220	; 0xdc
   1ffc4:	mov	r1, #0
   1ffc8:	bl	140a4 <memset@plt>
   1ffcc:	ldr	r3, [r4, #208]	; 0xd0
   1ffd0:	ldr	r5, [r3, #40]	; 0x28
   1ffd4:	cmp	r5, #0
   1ffd8:	beq	2007c <__flatcc_fb_gen_c_builder@@Base+0x21c>
   1ffdc:	ldr	r8, [pc, #1584]	; 20614 <__flatcc_fb_gen_c_builder@@Base+0x7b4>
   1ffe0:	ldr	r7, [pc, #1584]	; 20618 <__flatcc_fb_gen_c_builder@@Base+0x7b8>
   1ffe4:	add	r8, pc, r8
   1ffe8:	add	r7, pc, r7
   1ffec:	mov	r2, #0
   1fff0:	mov	r6, #1
   1fff4:	b	20004 <__flatcc_fb_gen_c_builder@@Base+0x1a4>
   1fff8:	ldr	r5, [r5]
   1fffc:	cmp	r5, #0
   20000:	beq	20064 <__flatcc_fb_gen_c_builder@@Base+0x204>
   20004:	ldrh	r3, [r5, #8]
   20008:	cmp	r3, #3
   2000c:	bne	1fff8 <__flatcc_fb_gen_c_builder@@Base+0x198>
   20010:	mov	r1, r5
   20014:	ldr	r0, [r5, #12]
   20018:	mov	r2, sl
   2001c:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   20020:	ldr	r0, [r4, #204]	; 0xcc
   20024:	mov	r3, sl
   20028:	mov	r2, sl
   2002c:	mov	r1, r8
   20030:	str	sl, [sp]
   20034:	bl	1408c <fprintf@plt>
   20038:	ldr	r0, [r4, #204]	; 0xcc
   2003c:	mov	r2, r4
   20040:	str	sl, [sp, #4]
   20044:	str	sl, [sp]
   20048:	mov	r3, r4
   2004c:	mov	r1, r7
   20050:	bl	1408c <fprintf@plt>
   20054:	ldr	r5, [r5]
   20058:	mov	r2, r6
   2005c:	cmp	r5, #0
   20060:	bne	20004 <__flatcc_fb_gen_c_builder@@Base+0x1a4>
   20064:	cmp	r2, #0
   20068:	beq	20078 <__flatcc_fb_gen_c_builder@@Base+0x218>
   2006c:	ldr	r1, [r4, #204]	; 0xcc
   20070:	mov	r0, #10
   20074:	bl	140ec <fputc@plt>
   20078:	ldr	r3, [r4, #208]	; 0xd0
   2007c:	ldr	fp, [r3, #44]	; 0x2c
   20080:	cmp	fp, #0
   20084:	beq	204e0 <__flatcc_fb_gen_c_builder@@Base+0x680>
   20088:	ldr	r3, [pc, #1420]	; 2061c <__flatcc_fb_gen_c_builder@@Base+0x7bc>
   2008c:	add	r3, pc, r3
   20090:	str	r3, [sp, #48]	; 0x30
   20094:	ldr	r3, [pc, #1412]	; 20620 <__flatcc_fb_gen_c_builder@@Base+0x7c0>
   20098:	add	r3, pc, r3
   2009c:	str	r3, [sp, #52]	; 0x34
   200a0:	ldr	r3, [pc, #1404]	; 20624 <__flatcc_fb_gen_c_builder@@Base+0x7c4>
   200a4:	add	r3, pc, r3
   200a8:	str	r3, [sp, #56]	; 0x38
   200ac:	ldr	r3, [pc, #1396]	; 20628 <__flatcc_fb_gen_c_builder@@Base+0x7c8>
   200b0:	add	r3, pc, r3
   200b4:	str	r3, [sp, #40]	; 0x28
   200b8:	ldr	r3, [pc, #1388]	; 2062c <__flatcc_fb_gen_c_builder@@Base+0x7cc>
   200bc:	add	r3, pc, r3
   200c0:	str	r3, [sp, #44]	; 0x2c
   200c4:	ldr	r3, [pc, #1380]	; 20630 <__flatcc_fb_gen_c_builder@@Base+0x7d0>
   200c8:	add	r3, pc, r3
   200cc:	str	r3, [sp, #60]	; 0x3c
   200d0:	mov	r2, #220	; 0xdc
   200d4:	mov	r1, #0
   200d8:	mov	r0, sl
   200dc:	bl	140a4 <memset@plt>
   200e0:	ldrh	r9, [fp, #8]
   200e4:	cmp	r9, #1
   200e8:	bne	205c4 <__flatcc_fb_gen_c_builder@@Base+0x764>
   200ec:	mov	r7, fp
   200f0:	mov	r2, sl
   200f4:	mov	r1, fp
   200f8:	ldr	r0, [fp, #12]
   200fc:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   20100:	ldr	r0, [r7, #20]!
   20104:	bl	1bd08 <__flatcc_gen_sort@@Base+0x408>
   20108:	mov	r2, sl
   2010c:	ldr	r1, [sp, #48]	; 0x30
   20110:	mov	r6, r0
   20114:	ldr	r0, [r4, #204]	; 0xcc
   20118:	bl	1408c <fprintf@plt>
   2011c:	mov	r3, r6
   20120:	mov	r1, r7
   20124:	mov	r2, #0
   20128:	str	r9, [sp]
   2012c:	mov	r0, r4
   20130:	bl	1c524 <__flatcc_gen_sort@@Base+0xc24>
   20134:	mov	r2, sl
   20138:	ldr	r1, [sp, #52]	; 0x34
   2013c:	ldr	r0, [r4, #204]	; 0xcc
   20140:	bl	1408c <fprintf@plt>
   20144:	ldr	r0, [fp, #20]
   20148:	bl	1bd08 <__flatcc_gen_sort@@Base+0x408>
   2014c:	subs	r8, r0, #0
   20150:	ble	201e4 <__flatcc_fb_gen_c_builder@@Base+0x384>
   20154:	str	fp, [sp, #32]
   20158:	str	r7, [sp, #36]	; 0x24
   2015c:	mov	r5, #0
   20160:	ldr	r7, [sp, #56]	; 0x38
   20164:	ldr	fp, [sp, #60]	; 0x3c
   20168:	b	201a0 <__flatcc_fb_gen_c_builder@@Base+0x340>
   2016c:	cmp	r6, #4
   20170:	ble	201c4 <__flatcc_fb_gen_c_builder@@Base+0x364>
   20174:	ldr	r2, [sp, #40]	; 0x28
   20178:	ldr	r1, [sp, #44]	; 0x2c
   2017c:	ldr	r0, [r4, #204]	; 0xcc
   20180:	bl	1408c <fprintf@plt>
   20184:	mov	r2, r5
   20188:	mov	r1, fp
   2018c:	add	r5, r5, #1
   20190:	ldr	r0, [r4, #204]	; 0xcc
   20194:	bl	1408c <fprintf@plt>
   20198:	cmp	r8, r5
   2019c:	beq	201dc <__flatcc_fb_gen_c_builder@@Base+0x37c>
   201a0:	cmp	r6, #0
   201a4:	beq	20184 <__flatcc_fb_gen_c_builder@@Base+0x324>
   201a8:	cmp	r5, #0
   201ac:	beq	2016c <__flatcc_fb_gen_c_builder@@Base+0x30c>
   201b0:	tst	r5, #3
   201b4:	bne	201c4 <__flatcc_fb_gen_c_builder@@Base+0x364>
   201b8:	sub	r3, r6, r5
   201bc:	cmp	r3, #2
   201c0:	bgt	20174 <__flatcc_fb_gen_c_builder@@Base+0x314>
   201c4:	ldr	r3, [r4, #204]	; 0xcc
   201c8:	mov	r2, #2
   201cc:	mov	r1, r9
   201d0:	mov	r0, r7
   201d4:	bl	14014 <fwrite@plt>
   201d8:	b	20184 <__flatcc_fb_gen_c_builder@@Base+0x324>
   201dc:	ldr	fp, [sp, #32]
   201e0:	ldr	r7, [sp, #36]	; 0x24
   201e4:	ldr	r1, [r4, #204]	; 0xcc
   201e8:	mov	r0, #10
   201ec:	bl	140ec <fputc@plt>
   201f0:	ldr	r1, [pc, #1084]	; 20634 <__flatcc_fb_gen_c_builder@@Base+0x7d4>
   201f4:	ldr	r5, [pc, #1084]	; 20638 <__flatcc_fb_gen_c_builder@@Base+0x7d8>
   201f8:	mov	r8, #0
   201fc:	ldr	r0, [r4, #204]	; 0xcc
   20200:	mov	r3, sl
   20204:	mov	r2, sl
   20208:	add	r1, pc, r1
   2020c:	str	sl, [sp]
   20210:	bl	1408c <fprintf@plt>
   20214:	add	r5, pc, r5
   20218:	mov	r3, r6
   2021c:	mov	r1, r7
   20220:	mov	r2, r8
   20224:	str	r8, [sp]
   20228:	mov	r0, r4
   2022c:	ldr	r9, [pc, #1032]	; 2063c <__flatcc_fb_gen_c_builder@@Base+0x7dc>
   20230:	bl	1c524 <__flatcc_gen_sort@@Base+0xc24>
   20234:	mov	r0, r5
   20238:	ldr	r3, [r4, #204]	; 0xcc
   2023c:	mov	r2, #4
   20240:	mov	r1, #1
   20244:	add	r9, pc, r9
   20248:	str	r5, [sp, #32]
   2024c:	bl	14014 <fwrite@plt>
   20250:	mov	r2, r6
   20254:	mov	r1, r7
   20258:	mov	r3, r8
   2025c:	str	r8, [sp]
   20260:	mov	r0, r4
   20264:	bl	1bd70 <__flatcc_gen_sort@@Base+0x470>
   20268:	ldr	r3, [r4, #204]	; 0xcc
   2026c:	mov	r2, #12
   20270:	mov	r1, #1
   20274:	mov	r0, r9
   20278:	bl	14014 <fwrite@plt>
   2027c:	ldr	r1, [pc, #956]	; 20640 <__flatcc_fb_gen_c_builder@@Base+0x7e0>
   20280:	ldr	r0, [r4, #204]	; 0xcc
   20284:	mov	r3, sl
   20288:	mov	r2, sl
   2028c:	add	r1, pc, r1
   20290:	str	sl, [sp, #4]
   20294:	str	sl, [sp]
   20298:	bl	1408c <fprintf@plt>
   2029c:	ldr	r3, [pc, #928]	; 20644 <__flatcc_fb_gen_c_builder@@Base+0x7e4>
   202a0:	mov	r5, #1
   202a4:	add	r3, pc, r3
   202a8:	str	r3, [sp, #36]	; 0x24
   202ac:	mov	r0, r3
   202b0:	mov	r2, #2
   202b4:	ldr	r3, [r4, #204]	; 0xcc
   202b8:	mov	r1, r5
   202bc:	bl	14014 <fwrite@plt>
   202c0:	mov	r2, r6
   202c4:	mov	r1, r7
   202c8:	mov	r3, r8
   202cc:	str	r5, [sp]
   202d0:	mov	r0, r4
   202d4:	bl	1bd70 <__flatcc_gen_sort@@Base+0x470>
   202d8:	mov	r1, r5
   202dc:	ldr	r3, [r4, #204]	; 0xcc
   202e0:	mov	r2, #12
   202e4:	mov	r0, r9
   202e8:	bl	14014 <fwrite@plt>
   202ec:	ldr	r1, [pc, #852]	; 20648 <__flatcc_fb_gen_c_builder@@Base+0x7e8>
   202f0:	ldr	r0, [r4, #204]	; 0xcc
   202f4:	mov	r3, sl
   202f8:	mov	r2, sl
   202fc:	add	r1, pc, r1
   20300:	str	sl, [sp]
   20304:	bl	1408c <fprintf@plt>
   20308:	mov	r3, r6
   2030c:	mov	r1, r7
   20310:	mov	r2, r8
   20314:	str	r8, [sp]
   20318:	mov	r0, r4
   2031c:	bl	1c524 <__flatcc_gen_sort@@Base+0xc24>
   20320:	mov	r1, r5
   20324:	ldr	r3, [r4, #204]	; 0xcc
   20328:	mov	r2, #4
   2032c:	ldr	r0, [sp, #32]
   20330:	bl	14014 <fwrite@plt>
   20334:	mov	r2, r6
   20338:	mov	r1, r7
   2033c:	mov	r3, #2
   20340:	str	r8, [sp]
   20344:	mov	r0, r4
   20348:	bl	1bd70 <__flatcc_gen_sort@@Base+0x470>
   2034c:	mov	r1, r5
   20350:	ldr	r3, [r4, #204]	; 0xcc
   20354:	mov	r2, #12
   20358:	mov	r0, r9
   2035c:	bl	14014 <fwrite@plt>
   20360:	ldr	r1, [pc, #740]	; 2064c <__flatcc_fb_gen_c_builder@@Base+0x7ec>
   20364:	ldr	r0, [r4, #204]	; 0xcc
   20368:	mov	r3, sl
   2036c:	mov	r2, sl
   20370:	add	r1, pc, r1
   20374:	str	sl, [sp, #4]
   20378:	str	sl, [sp]
   2037c:	bl	1408c <fprintf@plt>
   20380:	mov	r1, r5
   20384:	ldr	r3, [r4, #204]	; 0xcc
   20388:	mov	r2, #2
   2038c:	ldr	r0, [sp, #36]	; 0x24
   20390:	bl	14014 <fwrite@plt>
   20394:	mov	r2, r6
   20398:	mov	r1, r7
   2039c:	mov	r3, #2
   203a0:	str	r5, [sp]
   203a4:	mov	r0, r4
   203a8:	bl	1bd70 <__flatcc_gen_sort@@Base+0x470>
   203ac:	mov	r1, r5
   203b0:	ldr	r3, [r4, #204]	; 0xcc
   203b4:	mov	r2, #12
   203b8:	mov	r0, r9
   203bc:	bl	14014 <fwrite@plt>
   203c0:	ldr	r1, [pc, #648]	; 20650 <__flatcc_fb_gen_c_builder@@Base+0x7f0>
   203c4:	ldr	r0, [r4, #204]	; 0xcc
   203c8:	mov	r3, sl
   203cc:	mov	r2, sl
   203d0:	add	r1, pc, r1
   203d4:	str	sl, [sp]
   203d8:	bl	1408c <fprintf@plt>
   203dc:	mov	r3, r6
   203e0:	mov	r1, r7
   203e4:	mov	r2, r8
   203e8:	str	r8, [sp]
   203ec:	mov	r0, r4
   203f0:	bl	1c524 <__flatcc_gen_sort@@Base+0xc24>
   203f4:	mov	r1, r5
   203f8:	ldr	r3, [r4, #204]	; 0xcc
   203fc:	mov	r2, #4
   20400:	ldr	r0, [sp, #32]
   20404:	bl	14014 <fwrite@plt>
   20408:	mov	r2, r6
   2040c:	mov	r1, r7
   20410:	mov	r3, r5
   20414:	str	r8, [sp]
   20418:	mov	r0, r4
   2041c:	bl	1bd70 <__flatcc_gen_sort@@Base+0x470>
   20420:	mov	r1, r5
   20424:	ldr	r3, [r4, #204]	; 0xcc
   20428:	mov	r2, #12
   2042c:	mov	r0, r9
   20430:	bl	14014 <fwrite@plt>
   20434:	ldr	r1, [pc, #536]	; 20654 <__flatcc_fb_gen_c_builder@@Base+0x7f4>
   20438:	ldr	r0, [r4, #204]	; 0xcc
   2043c:	mov	r3, sl
   20440:	mov	r2, sl
   20444:	add	r1, pc, r1
   20448:	str	sl, [sp, #4]
   2044c:	str	sl, [sp]
   20450:	bl	1408c <fprintf@plt>
   20454:	mov	r1, r5
   20458:	ldr	r3, [r4, #204]	; 0xcc
   2045c:	mov	r2, #2
   20460:	ldr	r0, [sp, #36]	; 0x24
   20464:	bl	14014 <fwrite@plt>
   20468:	mov	r2, r6
   2046c:	mov	r1, r7
   20470:	mov	r3, r5
   20474:	str	r5, [sp]
   20478:	mov	r0, r4
   2047c:	bl	1bd70 <__flatcc_gen_sort@@Base+0x470>
   20480:	mov	r1, r5
   20484:	ldr	r3, [r4, #204]	; 0xcc
   20488:	mov	r2, #12
   2048c:	mov	r0, r9
   20490:	bl	14014 <fwrite@plt>
   20494:	str	sl, [sp, #24]
   20498:	str	sl, [sp, #20]
   2049c:	ldrh	r2, [fp, #104]	; 0x68
   204a0:	ldr	r0, [r4, #204]	; 0xcc
   204a4:	ldr	r1, [pc, #428]	; 20658 <__flatcc_fb_gen_c_builder@@Base+0x7f8>
   204a8:	str	r2, [sp, #16]
   204ac:	ldrd	r6, [fp, #112]	; 0x70
   204b0:	mov	r3, r4
   204b4:	mov	r2, r4
   204b8:	add	r1, pc, r1
   204bc:	str	sl, [sp]
   204c0:	strd	r6, [sp, #8]
   204c4:	bl	1408c <fprintf@plt>
   204c8:	ldr	r1, [r4, #204]	; 0xcc
   204cc:	mov	r0, #10
   204d0:	bl	140ec <fputc@plt>
   204d4:	ldr	fp, [fp, #120]	; 0x78
   204d8:	cmp	fp, r8
   204dc:	bne	200d0 <__flatcc_fb_gen_c_builder@@Base+0x270>
   204e0:	mov	r0, r4
   204e4:	bl	1e2f8 <__flatcc_gen_sort@@Base+0x29f8>
   204e8:	ldr	r3, [r4, #212]	; 0xd4
   204ec:	ldr	r0, [r4, #204]	; 0xcc
   204f0:	ldr	r3, [r3, #140]	; 0x8c
   204f4:	cmp	r3, #0
   204f8:	beq	20518 <__flatcc_fb_gen_c_builder@@Base+0x6b8>
   204fc:	mov	r3, r0
   20500:	ldr	r0, [pc, #340]	; 2065c <__flatcc_fb_gen_c_builder@@Base+0x7fc>
   20504:	mov	r2, #36	; 0x24
   20508:	mov	r1, #1
   2050c:	add	r0, pc, r0
   20510:	bl	14014 <fwrite@plt>
   20514:	ldr	r0, [r4, #204]	; 0xcc
   20518:	ldr	r3, [r4, #208]	; 0xd0
   2051c:	ldr	r1, [pc, #316]	; 20660 <__flatcc_fb_gen_c_builder@@Base+0x800>
   20520:	ldr	r2, [r3, #164]	; 0xa4
   20524:	add	r1, pc, r1
   20528:	bl	1408c <fprintf@plt>
   2052c:	mov	r0, #0
   20530:	add	sp, sp, #292	; 0x124
   20534:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20538:	mov	r3, r0
   2053c:	ldr	r0, [pc, #288]	; 20664 <__flatcc_fb_gen_c_builder@@Base+0x804>
   20540:	mov	r2, #36	; 0x24
   20544:	mov	r1, #1
   20548:	add	r0, pc, r0
   2054c:	bl	14014 <fwrite@plt>
   20550:	ldr	r3, [r4, #208]	; 0xd0
   20554:	ldr	r0, [r4, #204]	; 0xcc
   20558:	ldrh	r2, [r3, #16]
   2055c:	cmp	r2, #2
   20560:	bne	1ff64 <__flatcc_fb_gen_c_builder@@Base+0x104>
   20564:	ldr	r2, [r3, #8]
   20568:	ldr	r1, [pc, #248]	; 20668 <__flatcc_fb_gen_c_builder@@Base+0x808>
   2056c:	str	r2, [sp, #4]
   20570:	ldr	r2, [r3, #12]
   20574:	add	r1, pc, r1
   20578:	mov	r3, r4
   2057c:	str	r2, [sp]
   20580:	mov	r2, r4
   20584:	bl	1408c <fprintf@plt>
   20588:	ldr	r3, [r4, #208]	; 0xd0
   2058c:	ldrh	r2, [r3, #32]
   20590:	cmp	r2, #2
   20594:	bne	1ff88 <__flatcc_fb_gen_c_builder@@Base+0x128>
   20598:	ldr	r2, [r3, #24]
   2059c:	ldr	r0, [r4, #204]	; 0xcc
   205a0:	ldr	r1, [pc, #196]	; 2066c <__flatcc_fb_gen_c_builder@@Base+0x80c>
   205a4:	str	r2, [sp, #4]
   205a8:	ldr	r3, [r3, #28]
   205ac:	mov	r2, r4
   205b0:	str	r3, [sp]
   205b4:	add	r1, pc, r1
   205b8:	mov	r3, r4
   205bc:	bl	1408c <fprintf@plt>
   205c0:	b	1ffac <__flatcc_fb_gen_c_builder@@Base+0x14c>
   205c4:	ldr	r3, [pc, #164]	; 20670 <__flatcc_fb_gen_c_builder@@Base+0x810>
   205c8:	ldr	r1, [pc, #164]	; 20674 <__flatcc_fb_gen_c_builder@@Base+0x814>
   205cc:	ldr	r0, [pc, #164]	; 20678 <__flatcc_fb_gen_c_builder@@Base+0x818>
   205d0:	add	r3, pc, r3
   205d4:	ldr	r2, [pc, #160]	; 2067c <__flatcc_fb_gen_c_builder@@Base+0x81c>
   205d8:	add	r3, r3, #208	; 0xd0
   205dc:	add	r1, pc, r1
   205e0:	add	r0, pc, r0
   205e4:	bl	14140 <__assert_fail@plt>
   205e8:	andeq	r2, r3, r4, lsr #14
   205ec:	andeq	r2, r2, ip, lsl r3
   205f0:	andeq	r2, r3, ip, lsl #14
   205f4:	andeq	r8, r2, r8, asr #9
   205f8:	andeq	r2, r3, r8, lsl #14
   205fc:	andeq	r9, r2, r0, ror #29
   20600:	andeq	r2, r3, r4, ror #13
   20604:	ldrdeq	r2, [r3], -r8
   20608:	andeq	r0, r2, r0, lsl fp
   2060c:	muleq	r2, r0, r4
   20610:	andeq	r8, r2, r4, asr #9
   20614:	andeq	r2, r3, r4, lsr r6
   20618:	andeq	r2, r3, r8, ror r6
   2061c:	andeq	r9, r2, ip, ror r8
   20620:	andeq	r9, r2, ip, lsl #17
   20624:	strdeq	r9, [r2], -ip
   20628:			; <UNDEFINED> instruction: 0x000239b0
   2062c:	ldrdeq	r9, [r2], -ip
   20630:	ldrdeq	r9, [r2], -ip
   20634:	andeq	r2, r3, r0, lsl #9
   20638:	muleq	r3, ip, r4
   2063c:	andeq	r2, r3, r4, ror r4
   20640:	andeq	r2, r3, ip, lsr r4
   20644:	andeq	r2, r3, ip, asr r4
   20648:	andeq	r2, r3, r8, lsl #8
   2064c:	andeq	r2, r3, r0, asr #7
   20650:	muleq	r3, ip, r3
   20654:	andeq	r2, r3, r8, asr r3
   20658:	andeq	r2, r3, r4, lsr #6
   2065c:	andeq	r7, r2, r0, lsr #24
   20660:	andeq	r2, r3, r0, lsl #6
   20664:	andeq	r1, r2, r0, lsl #27
   20668:	andeq	r7, r2, r8, asr lr
   2066c:	andeq	r7, r2, r0, lsl #29
   20670:			; <UNDEFINED> instruction: 0x000289b8
   20674:	andeq	r8, r2, r0, lsr #22
   20678:	andeq	r0, r2, r8, lsr #24
   2067c:	strdeq	r0, [r0], -r2
   20680:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20684:	sub	sp, sp, #516	; 0x204
   20688:	add	r9, sp, #72	; 0x48
   2068c:	mov	r4, r1
   20690:	mov	r8, r0
   20694:	mov	r2, #220	; 0xdc
   20698:	mov	r1, #0
   2069c:	mov	r0, r9
   206a0:	add	r6, sp, #292	; 0x124
   206a4:	bl	140a4 <memset@plt>
   206a8:	mov	r2, #220	; 0xdc
   206ac:	mov	r1, #0
   206b0:	mov	r0, r6
   206b4:	bl	140a4 <memset@plt>
   206b8:	mov	r1, r4
   206bc:	ldr	r0, [r4, #12]
   206c0:	mov	r2, r9
   206c4:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   206c8:	ldr	r1, [pc, #1424]	; 20c60 <__flatcc_fb_gen_c_builder@@Base+0xe00>
   206cc:	mov	r2, r9
   206d0:	ldr	r0, [r8, #204]	; 0xcc
   206d4:	add	r1, pc, r1
   206d8:	bl	1408c <fprintf@plt>
   206dc:	ldr	r4, [r4, #20]
   206e0:	ldr	sl, [pc, #1404]	; 20c64 <__flatcc_fb_gen_c_builder@@Base+0xe04>
   206e4:	cmp	r4, #0
   206e8:	add	sl, pc, sl
   206ec:	beq	208b8 <__flatcc_fb_gen_c_builder@@Base+0xa58>
   206f0:	ldr	r3, [pc, #1392]	; 20c68 <__flatcc_fb_gen_c_builder@@Base+0xe08>
   206f4:	ldr	fp, [pc, #1392]	; 20c6c <__flatcc_fb_gen_c_builder@@Base+0xe0c>
   206f8:	add	r3, pc, r3
   206fc:	str	r3, [sp, #36]	; 0x24
   20700:	ldr	r3, [pc, #1384]	; 20c70 <__flatcc_fb_gen_c_builder@@Base+0xe10>
   20704:	str	sl, [sp, #32]
   20708:	add	r3, pc, r3
   2070c:	str	r3, [sp, #40]	; 0x28
   20710:	ldr	r3, [pc, #1372]	; 20c74 <__flatcc_fb_gen_c_builder@@Base+0xe14>
   20714:	mov	sl, r9
   20718:	add	r3, pc, r3
   2071c:	str	r3, [sp, #44]	; 0x2c
   20720:	ldr	r3, [pc, #1360]	; 20c78 <__flatcc_fb_gen_c_builder@@Base+0xe18>
   20724:	add	fp, pc, fp
   20728:	add	r3, pc, r3
   2072c:	str	r3, [sp, #48]	; 0x30
   20730:	ldr	r3, [pc, #1348]	; 20c7c <__flatcc_fb_gen_c_builder@@Base+0xe1c>
   20734:	mov	r2, #1
   20738:	mov	r9, r6
   2073c:	add	r3, pc, r3
   20740:	str	r3, [sp, #52]	; 0x34
   20744:	ldrh	r3, [r4, #72]	; 0x48
   20748:	tst	r3, #4
   2074c:	bne	208a0 <__flatcc_fb_gen_c_builder@@Base+0xa40>
   20750:	cmp	r2, #0
   20754:	beq	209f4 <__flatcc_fb_gen_c_builder@@Base+0xb94>
   20758:	ldr	r0, [pc, #1312]	; 20c80 <__flatcc_fb_gen_c_builder@@Base+0xe20>
   2075c:	ldr	r3, [r8, #204]	; 0xcc
   20760:	mov	r2, #28
   20764:	mov	r1, #1
   20768:	add	r0, pc, r0
   2076c:	bl	14014 <fwrite@plt>
   20770:	ldrh	r5, [r4, #72]	; 0x48
   20774:	ldrh	r3, [r4, #24]
   20778:	lsr	r5, r5, #8
   2077c:	sub	r3, r3, #7
   20780:	and	r5, r5, #1
   20784:	cmp	r3, #8
   20788:	addls	pc, pc, r3, lsl #2
   2078c:	b	2083c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20790:	b	20960 <__flatcc_fb_gen_c_builder@@Base+0xb00>
   20794:	b	209cc <__flatcc_fb_gen_c_builder@@Base+0xb6c>
   20798:	b	209b0 <__flatcc_fb_gen_c_builder@@Base+0xb50>
   2079c:	b	20824 <__flatcc_fb_gen_c_builder@@Base+0x9c4>
   207a0:	b	2083c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   207a4:	b	2083c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   207a8:	b	2083c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   207ac:	b	207ec <__flatcc_fb_gen_c_builder@@Base+0x98c>
   207b0:	b	207b4 <__flatcc_fb_gen_c_builder@@Base+0x954>
   207b4:	ldr	r1, [r4, #16]
   207b8:	mov	r2, r9
   207bc:	ldr	r0, [r1, #12]
   207c0:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   207c4:	ldr	r3, [r4, #16]
   207c8:	ldrh	r3, [r3, #8]
   207cc:	cmp	r3, #4
   207d0:	addls	pc, pc, r3, lsl #2
   207d4:	b	20b2c <__flatcc_fb_gen_c_builder@@Base+0xccc>
   207d8:	b	20b14 <__flatcc_fb_gen_c_builder@@Base+0xcb4>
   207dc:	b	20aac <__flatcc_fb_gen_c_builder@@Base+0xc4c>
   207e0:	b	20b2c <__flatcc_fb_gen_c_builder@@Base+0xccc>
   207e4:	b	20aac <__flatcc_fb_gen_c_builder@@Base+0xc4c>
   207e8:	b	20a94 <__flatcc_fb_gen_c_builder@@Base+0xc34>
   207ec:	ldr	r1, [r4, #16]
   207f0:	mov	r2, r9
   207f4:	ldr	r0, [r1, #12]
   207f8:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   207fc:	ldr	r3, [r4, #16]
   20800:	ldrh	r3, [r3, #8]
   20804:	cmp	r3, #4
   20808:	addls	pc, pc, r3, lsl #2
   2080c:	b	20b80 <__flatcc_fb_gen_c_builder@@Base+0xd20>
   20810:	b	20a7c <__flatcc_fb_gen_c_builder@@Base+0xc1c>
   20814:	b	20a54 <__flatcc_fb_gen_c_builder@@Base+0xbf4>
   20818:	b	20b80 <__flatcc_fb_gen_c_builder@@Base+0xd20>
   2081c:	b	20a54 <__flatcc_fb_gen_c_builder@@Base+0xbf4>
   20820:	b	20a3c <__flatcc_fb_gen_c_builder@@Base+0xbdc>
   20824:	ldr	r1, [pc, #1112]	; 20c84 <__flatcc_fb_gen_c_builder@@Base+0xe24>
   20828:	ldrd	r2, [r4, #96]	; 0x60
   2082c:	ldr	r0, [r8, #204]	; 0xcc
   20830:	add	r1, pc, r1
   20834:	str	r5, [sp]
   20838:	bl	1408c <fprintf@plt>
   2083c:	ldr	r2, [r4, #4]
   20840:	mov	r1, fp
   20844:	ldr	r0, [r8, #204]	; 0xcc
   20848:	ldr	r3, [r2]
   2084c:	ldr	r2, [r2, #4]
   20850:	bl	1408c <fprintf@plt>
   20854:	ldr	r4, [r4]
   20858:	cmp	r4, #0
   2085c:	beq	20bd4 <__flatcc_fb_gen_c_builder@@Base+0xd74>
   20860:	ldrh	r3, [r4, #72]	; 0x48
   20864:	tst	r3, #4
   20868:	beq	209f4 <__flatcc_fb_gen_c_builder@@Base+0xb94>
   2086c:	ldr	r4, [r4]
   20870:	cmp	r4, #0
   20874:	beq	20bd4 <__flatcc_fb_gen_c_builder@@Base+0xd74>
   20878:	ldrh	r3, [r4, #72]	; 0x48
   2087c:	tst	r3, #4
   20880:	beq	209f4 <__flatcc_fb_gen_c_builder@@Base+0xb94>
   20884:	ldr	r4, [r4]
   20888:	cmp	r4, #0
   2088c:	beq	20bd4 <__flatcc_fb_gen_c_builder@@Base+0xd74>
   20890:	ldrh	r3, [r4, #72]	; 0x48
   20894:	tst	r3, #4
   20898:	beq	209f4 <__flatcc_fb_gen_c_builder@@Base+0xb94>
   2089c:	mov	r2, #0
   208a0:	ldr	r4, [r4]
   208a4:	cmp	r4, #0
   208a8:	bne	20744 <__flatcc_fb_gen_c_builder@@Base+0x8e4>
   208ac:	cmp	r2, #0
   208b0:	mov	r9, sl
   208b4:	beq	20bd8 <__flatcc_fb_gen_c_builder@@Base+0xd78>
   208b8:	ldr	r0, [pc, #968]	; 20c88 <__flatcc_fb_gen_c_builder@@Base+0xe28>
   208bc:	ldr	r3, [r8, #204]	; 0xcc
   208c0:	mov	r2, #29
   208c4:	mov	r1, #1
   208c8:	add	r0, pc, r0
   208cc:	bl	14014 <fwrite@plt>
   208d0:	ldr	r0, [pc, #948]	; 20c8c <__flatcc_fb_gen_c_builder@@Base+0xe2c>
   208d4:	ldr	r3, [r8, #204]	; 0xcc
   208d8:	mov	r2, #3
   208dc:	mov	r1, #1
   208e0:	add	r0, pc, r0
   208e4:	bl	14014 <fwrite@plt>
   208e8:	ldr	r1, [pc, #928]	; 20c90 <__flatcc_fb_gen_c_builder@@Base+0xe30>
   208ec:	ldr	r0, [r8, #204]	; 0xcc
   208f0:	mov	r3, r9
   208f4:	mov	r2, r9
   208f8:	str	r9, [sp]
   208fc:	add	r1, pc, r1
   20900:	bl	1408c <fprintf@plt>
   20904:	ldr	r1, [pc, #904]	; 20c94 <__flatcc_fb_gen_c_builder@@Base+0xe34>
   20908:	ldr	r0, [r8, #204]	; 0xcc
   2090c:	mov	r3, r9
   20910:	mov	r2, r9
   20914:	str	r9, [sp]
   20918:	add	r1, pc, r1
   2091c:	bl	1408c <fprintf@plt>
   20920:	ldr	r1, [pc, #880]	; 20c98 <__flatcc_fb_gen_c_builder@@Base+0xe38>
   20924:	mov	r3, r9
   20928:	mov	r2, r9
   2092c:	add	r1, pc, r1
   20930:	ldr	r0, [r8, #204]	; 0xcc
   20934:	bl	1408c <fprintf@plt>
   20938:	ldr	r1, [pc, #860]	; 20c9c <__flatcc_fb_gen_c_builder@@Base+0xe3c>
   2093c:	ldr	r0, [r8, #204]	; 0xcc
   20940:	mov	r2, r9
   20944:	str	r9, [sp]
   20948:	mov	r3, r8
   2094c:	add	r1, pc, r1
   20950:	bl	1408c <fprintf@plt>
   20954:	mov	r0, #0
   20958:	add	sp, sp, #516	; 0x204
   2095c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20960:	ldr	r1, [r4, #104]	; 0x68
   20964:	cmp	r1, #0
   20968:	beq	20bf4 <__flatcc_fb_gen_c_builder@@Base+0xd94>
   2096c:	mov	r2, r9
   20970:	ldr	r0, [r1, #12]
   20974:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   20978:	ldr	r3, [r4, #104]	; 0x68
   2097c:	ldrh	r3, [r3, #8]
   20980:	cmp	r3, #0
   20984:	bne	20a10 <__flatcc_fb_gen_c_builder@@Base+0xbb0>
   20988:	ldrd	r2, [r4, #96]	; 0x60
   2098c:	str	r9, [sp, #8]
   20990:	ldrh	r1, [r4, #74]	; 0x4a
   20994:	ldr	r0, [r8, #204]	; 0xcc
   20998:	str	r5, [sp]
   2099c:	str	r1, [sp, #4]
   209a0:	ldr	r1, [pc, #760]	; 20ca0 <__flatcc_fb_gen_c_builder@@Base+0xe40>
   209a4:	add	r1, pc, r1
   209a8:	bl	1408c <fprintf@plt>
   209ac:	b	2083c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   209b0:	ldr	r1, [pc, #748]	; 20ca4 <__flatcc_fb_gen_c_builder@@Base+0xe44>
   209b4:	ldrd	r2, [r4, #96]	; 0x60
   209b8:	ldr	r0, [r8, #204]	; 0xcc
   209bc:	add	r1, pc, r1
   209c0:	str	r5, [sp]
   209c4:	bl	1408c <fprintf@plt>
   209c8:	b	2083c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   209cc:	ldrh	r1, [r4, #74]	; 0x4a
   209d0:	ldrd	r2, [r4, #96]	; 0x60
   209d4:	ldr	r0, [r8, #204]	; 0xcc
   209d8:	str	r1, [sp, #8]
   209dc:	ldrd	r6, [r4, #88]	; 0x58
   209e0:	ldr	r1, [pc, #704]	; 20ca8 <__flatcc_fb_gen_c_builder@@Base+0xe48>
   209e4:	strd	r6, [sp]
   209e8:	add	r1, pc, r1
   209ec:	bl	1408c <fprintf@plt>
   209f0:	b	2083c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   209f4:	ldr	r0, [pc, #688]	; 20cac <__flatcc_fb_gen_c_builder@@Base+0xe4c>
   209f8:	ldr	r3, [r8, #204]	; 0xcc
   209fc:	mov	r2, #30
   20a00:	mov	r1, #1
   20a04:	add	r0, pc, r0
   20a08:	bl	14014 <fwrite@plt>
   20a0c:	b	20770 <__flatcc_fb_gen_c_builder@@Base+0x910>
   20a10:	ldrh	r1, [r4, #74]	; 0x4a
   20a14:	ldrd	r2, [r4, #96]	; 0x60
   20a18:	ldr	r0, [r8, #204]	; 0xcc
   20a1c:	str	r1, [sp, #16]
   20a20:	ldrd	r6, [r4, #88]	; 0x58
   20a24:	ldr	r1, [pc, #644]	; 20cb0 <__flatcc_fb_gen_c_builder@@Base+0xe50>
   20a28:	str	r5, [sp]
   20a2c:	strd	r6, [sp, #8]
   20a30:	add	r1, pc, r1
   20a34:	bl	1408c <fprintf@plt>
   20a38:	b	2083c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20a3c:	ldrd	r2, [r4, #96]	; 0x60
   20a40:	ldr	r0, [r8, #204]	; 0xcc
   20a44:	ldr	r1, [sp, #48]	; 0x30
   20a48:	stm	sp, {r5, r9}
   20a4c:	bl	1408c <fprintf@plt>
   20a50:	b	2083c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20a54:	ldrh	r1, [r4, #74]	; 0x4a
   20a58:	ldrd	r2, [r4, #96]	; 0x60
   20a5c:	ldr	r0, [r8, #204]	; 0xcc
   20a60:	str	r1, [sp, #8]
   20a64:	ldrd	r6, [r4, #88]	; 0x58
   20a68:	ldr	r1, [pc, #580]	; 20cb4 <__flatcc_fb_gen_c_builder@@Base+0xe54>
   20a6c:	strd	r6, [sp]
   20a70:	add	r1, pc, r1
   20a74:	bl	1408c <fprintf@plt>
   20a78:	b	2083c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20a7c:	ldrd	r2, [r4, #96]	; 0x60
   20a80:	ldr	r0, [r8, #204]	; 0xcc
   20a84:	ldr	r1, [sp, #52]	; 0x34
   20a88:	stm	sp, {r5, r9}
   20a8c:	bl	1408c <fprintf@plt>
   20a90:	b	2083c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20a94:	ldrd	r2, [r4, #96]	; 0x60
   20a98:	ldr	r0, [r8, #204]	; 0xcc
   20a9c:	ldr	r1, [sp, #36]	; 0x24
   20aa0:	stm	sp, {r5, r9}
   20aa4:	bl	1408c <fprintf@plt>
   20aa8:	b	2083c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20aac:	ldr	r3, [r8, #204]	; 0xcc
   20ab0:	ldrd	r6, [r4, #88]	; 0x58
   20ab4:	str	r3, [sp, #64]	; 0x40
   20ab8:	ldrd	r2, [r4, #96]	; 0x60
   20abc:	strd	r2, [sp, #56]	; 0x38
   20ac0:	orrs	r3, r6, r7
   20ac4:	ldrh	r3, [r4, #74]	; 0x4a
   20ac8:	mvneq	r0, #0
   20acc:	moveq	r1, #0
   20ad0:	str	r3, [sp, #68]	; 0x44
   20ad4:	beq	20aec <__flatcc_fb_gen_c_builder@@Base+0xc8c>
   20ad8:	mov	r2, r6
   20adc:	mov	r3, r7
   20ae0:	mvn	r0, #0
   20ae4:	mov	r1, #0
   20ae8:	bl	3ee24 <fb_value_set_visit@@Base+0x668>
   20aec:	ldr	r3, [sp, #68]	; 0x44
   20af0:	strd	r0, [sp, #24]
   20af4:	str	r3, [sp, #16]
   20af8:	strd	r6, [sp, #8]
   20afc:	str	r5, [sp]
   20b00:	ldrd	r2, [sp, #56]	; 0x38
   20b04:	ldr	r0, [sp, #64]	; 0x40
   20b08:	ldr	r1, [sp, #40]	; 0x28
   20b0c:	bl	1408c <fprintf@plt>
   20b10:	b	2083c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20b14:	ldrd	r2, [r4, #96]	; 0x60
   20b18:	ldr	r0, [r8, #204]	; 0xcc
   20b1c:	ldr	r1, [sp, #44]	; 0x2c
   20b20:	stm	sp, {r5, r9}
   20b24:	bl	1408c <fprintf@plt>
   20b28:	b	2083c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20b2c:	ldr	sl, [sp, #32]
   20b30:	ldr	r2, [pc, #384]	; 20cb8 <__flatcc_fb_gen_c_builder@@Base+0xe58>
   20b34:	ldr	r3, [pc, #384]	; 20cbc <__flatcc_fb_gen_c_builder@@Base+0xe5c>
   20b38:	ldr	r4, [pc, #384]	; 20cc0 <__flatcc_fb_gen_c_builder@@Base+0xe60>
   20b3c:	ldr	r1, [sl, r2]
   20b40:	add	r3, pc, r3
   20b44:	str	r3, [sp]
   20b48:	ldr	r0, [r1]
   20b4c:	ldr	r1, [pc, #368]	; 20cc4 <__flatcc_fb_gen_c_builder@@Base+0xe64>
   20b50:	add	r4, pc, r4
   20b54:	mov	r2, r4
   20b58:	mov	r3, #202	; 0xca
   20b5c:	add	r1, pc, r1
   20b60:	bl	1408c <fprintf@plt>
   20b64:	ldr	r3, [pc, #348]	; 20cc8 <__flatcc_fb_gen_c_builder@@Base+0xe68>
   20b68:	ldr	r0, [pc, #348]	; 20ccc <__flatcc_fb_gen_c_builder@@Base+0xe6c>
   20b6c:	mov	r1, r4
   20b70:	add	r3, pc, r3
   20b74:	mov	r2, #202	; 0xca
   20b78:	add	r0, pc, r0
   20b7c:	bl	14140 <__assert_fail@plt>
   20b80:	ldr	sl, [sp, #32]
   20b84:	ldr	r2, [pc, #300]	; 20cb8 <__flatcc_fb_gen_c_builder@@Base+0xe58>
   20b88:	ldr	r3, [pc, #320]	; 20cd0 <__flatcc_fb_gen_c_builder@@Base+0xe70>
   20b8c:	ldr	r4, [pc, #320]	; 20cd4 <__flatcc_fb_gen_c_builder@@Base+0xe74>
   20b90:	ldr	r1, [sl, r2]
   20b94:	add	r3, pc, r3
   20b98:	str	r3, [sp]
   20b9c:	ldr	r0, [r1]
   20ba0:	ldr	r1, [pc, #304]	; 20cd8 <__flatcc_fb_gen_c_builder@@Base+0xe78>
   20ba4:	add	r4, pc, r4
   20ba8:	mov	r2, r4
   20bac:	mov	r3, #178	; 0xb2
   20bb0:	add	r1, pc, r1
   20bb4:	bl	1408c <fprintf@plt>
   20bb8:	ldr	r3, [pc, #284]	; 20cdc <__flatcc_fb_gen_c_builder@@Base+0xe7c>
   20bbc:	ldr	r0, [pc, #284]	; 20ce0 <__flatcc_fb_gen_c_builder@@Base+0xe80>
   20bc0:	mov	r1, r4
   20bc4:	add	r3, pc, r3
   20bc8:	mov	r2, #178	; 0xb2
   20bcc:	add	r0, pc, r0
   20bd0:	bl	14140 <__assert_fail@plt>
   20bd4:	mov	r9, sl
   20bd8:	ldr	r0, [pc, #260]	; 20ce4 <__flatcc_fb_gen_c_builder@@Base+0xe84>
   20bdc:	ldr	r3, [r8, #204]	; 0xcc
   20be0:	mov	r2, #15
   20be4:	mov	r1, #1
   20be8:	add	r0, pc, r0
   20bec:	bl	14014 <fwrite@plt>
   20bf0:	b	208b8 <__flatcc_fb_gen_c_builder@@Base+0xa58>
   20bf4:	ldr	r3, [r8, #204]	; 0xcc
   20bf8:	ldrd	r6, [r4, #88]	; 0x58
   20bfc:	str	r3, [sp, #64]	; 0x40
   20c00:	ldrd	r2, [r4, #96]	; 0x60
   20c04:	strd	r2, [sp, #56]	; 0x38
   20c08:	orrs	r3, r6, r7
   20c0c:	ldrh	r3, [r4, #74]	; 0x4a
   20c10:	mvneq	r0, #0
   20c14:	moveq	r1, #0
   20c18:	str	r3, [sp, #68]	; 0x44
   20c1c:	beq	20c34 <__flatcc_fb_gen_c_builder@@Base+0xdd4>
   20c20:	mov	r2, r6
   20c24:	mov	r3, r7
   20c28:	mvn	r0, #0
   20c2c:	mov	r1, #0
   20c30:	bl	3ee24 <fb_value_set_visit@@Base+0x668>
   20c34:	strd	r0, [sp, #24]
   20c38:	ldr	r3, [sp, #68]	; 0x44
   20c3c:	ldr	r1, [pc, #164]	; 20ce8 <__flatcc_fb_gen_c_builder@@Base+0xe88>
   20c40:	str	r3, [sp, #16]
   20c44:	strd	r6, [sp, #8]
   20c48:	str	r5, [sp]
   20c4c:	ldrd	r2, [sp, #56]	; 0x38
   20c50:	ldr	r0, [sp, #64]	; 0x40
   20c54:	add	r1, pc, r1
   20c58:	bl	1408c <fprintf@plt>
   20c5c:	b	2083c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   20c60:	muleq	r3, r4, r1
   20c64:	andeq	sl, r4, r0, lsl r9
   20c68:			; <UNDEFINED> instruction: 0x000324b0
   20c6c:	andeq	r3, r3, r4, lsl r4
   20c70:	muleq	r3, ip, r2
   20c74:	andeq	r2, r3, ip, asr #8
   20c78:	andeq	r2, r3, r8, asr r3
   20c7c:	andeq	r2, r3, r8, lsl #6
   20c80:	andeq	r2, r3, r8, asr #2
   20c84:			; <UNDEFINED> instruction: 0x000321b8
   20c88:	andeq	r2, r3, r8, ror r3
   20c8c:	andeq	r2, r3, ip, lsl r4
   20c90:	andeq	r2, r3, r4, ror #6
   20c94:	andeq	r2, r3, r8, ror #7
   20c98:	andeq	r2, r3, r0, lsl #9
   20c9c:	andeq	r2, r3, r8, lsl r5
   20ca0:	andeq	r1, r3, r4, ror pc
   20ca4:	andeq	r2, r3, r8, asr r0
   20ca8:	andeq	r1, r3, r8, lsl #30
   20cac:	andeq	r1, r3, ip, asr #29
   20cb0:	andeq	r1, r3, r4, lsr pc
   20cb4:	andeq	r1, r3, r0, lsl #29
   20cb8:	andeq	r0, r0, r0, lsr #1
   20cbc:	andeq	r2, r3, ip, lsr #1
   20cc0:	andeq	r1, r3, ip, ror #30
   20cc4:	andeq	r0, r2, r0, ror #6
   20cc8:	ldrdeq	r1, [r3], -r0
   20ccc:	andeq	r8, r2, r4, asr #14
   20cd0:	muleq	r3, r4, pc	; <UNPREDICTABLE>
   20cd4:	andeq	r1, r3, r8, lsl pc
   20cd8:	andeq	r0, r2, ip, lsl #6
   20cdc:	andeq	r1, r3, ip, ror ip
   20ce0:	strdeq	r8, [r2], -r0
   20ce4:	andeq	r2, r3, r8, asr #32
   20ce8:	andeq	r1, r3, r0, asr sp
   20cec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20cf0:	sub	sp, sp, #476	; 0x1dc
   20cf4:	add	r4, sp, #32
   20cf8:	mov	r6, r1
   20cfc:	mov	r5, r0
   20d00:	mov	r2, #220	; 0xdc
   20d04:	mov	r0, r4
   20d08:	mov	r1, #0
   20d0c:	add	r7, sp, #252	; 0xfc
   20d10:	bl	140a4 <memset@plt>
   20d14:	mov	r2, #220	; 0xdc
   20d18:	mov	r1, #0
   20d1c:	mov	r0, r7
   20d20:	bl	140a4 <memset@plt>
   20d24:	mov	r2, r4
   20d28:	mov	r1, r6
   20d2c:	ldr	r0, [r6, #12]
   20d30:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   20d34:	ldr	r1, [pc, #480]	; 20f1c <__flatcc_fb_gen_c_builder@@Base+0x10bc>
   20d38:	mov	r2, r4
   20d3c:	ldr	r0, [r5]
   20d40:	add	r1, pc, r1
   20d44:	bl	1408c <fprintf@plt>
   20d48:	ldr	r4, [r6, #20]
   20d4c:	ldr	r6, [pc, #460]	; 20f20 <__flatcc_fb_gen_c_builder@@Base+0x10c0>
   20d50:	cmp	r4, #0
   20d54:	add	r6, pc, r6
   20d58:	beq	20e58 <__flatcc_fb_gen_c_builder@@Base+0xff8>
   20d5c:	ldr	r8, [pc, #448]	; 20f24 <__flatcc_fb_gen_c_builder@@Base+0x10c4>
   20d60:	ldr	sl, [pc, #448]	; 20f28 <__flatcc_fb_gen_c_builder@@Base+0x10c8>
   20d64:	ldr	r9, [pc, #448]	; 20f2c <__flatcc_fb_gen_c_builder@@Base+0x10cc>
   20d68:	add	r8, pc, r8
   20d6c:	add	sl, pc, sl
   20d70:	add	r9, pc, r9
   20d74:	ldrh	r2, [r4, #24]
   20d78:	ldr	r3, [r4, #4]
   20d7c:	cmp	r2, #10
   20d80:	ldr	fp, [r3]
   20d84:	ldr	r3, [r3, #4]
   20d88:	beq	20e7c <__flatcc_fb_gen_c_builder@@Base+0x101c>
   20d8c:	cmp	r2, #14
   20d90:	beq	20df0 <__flatcc_fb_gen_c_builder@@Base+0xf90>
   20d94:	cmp	r2, #0
   20d98:	beq	20e4c <__flatcc_fb_gen_c_builder@@Base+0xfec>
   20d9c:	ldr	r2, [pc, #396]	; 20f30 <__flatcc_fb_gen_c_builder@@Base+0x10d0>
   20da0:	ldr	r3, [pc, #396]	; 20f34 <__flatcc_fb_gen_c_builder@@Base+0x10d4>
   20da4:	ldr	r4, [pc, #396]	; 20f38 <__flatcc_fb_gen_c_builder@@Base+0x10d8>
   20da8:	ldr	r1, [r6, r2]
   20dac:	add	r3, pc, r3
   20db0:	str	r3, [sp]
   20db4:	ldr	r0, [r1]
   20db8:	ldr	r1, [pc, #380]	; 20f3c <__flatcc_fb_gen_c_builder@@Base+0x10dc>
   20dbc:	add	r4, pc, r4
   20dc0:	mov	r2, r4
   20dc4:	mov	r3, #83	; 0x53
   20dc8:	add	r1, pc, r1
   20dcc:	bl	1408c <fprintf@plt>
   20dd0:	ldr	r3, [pc, #360]	; 20f40 <__flatcc_fb_gen_c_builder@@Base+0x10e0>
   20dd4:	ldr	r0, [pc, #360]	; 20f44 <__flatcc_fb_gen_c_builder@@Base+0x10e4>
   20dd8:	add	r3, pc, r3
   20ddc:	mov	r1, r4
   20de0:	add	r3, r3, #20
   20de4:	mov	r2, #83	; 0x53
   20de8:	add	r0, pc, r0
   20dec:	bl	14140 <__assert_fail@plt>
   20df0:	ldr	r1, [r4, #16]
   20df4:	mov	r2, r7
   20df8:	str	r3, [sp, #28]
   20dfc:	ldr	r0, [r1, #12]
   20e00:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   20e04:	ldr	r1, [r4, #16]
   20e08:	ldr	r3, [sp, #28]
   20e0c:	ldrh	r2, [r1, #8]
   20e10:	cmp	r2, #0
   20e14:	beq	20ea0 <__flatcc_fb_gen_c_builder@@Base+0x1040>
   20e18:	cmp	r2, #1
   20e1c:	bne	20ec8 <__flatcc_fb_gen_c_builder@@Base+0x1068>
   20e20:	ldr	r2, [r4, #48]	; 0x30
   20e24:	str	fp, [sp, #16]
   20e28:	str	r3, [sp, #12]
   20e2c:	ldrh	r3, [r1, #104]	; 0x68
   20e30:	ldr	ip, [r5]
   20e34:	str	r3, [sp, #8]
   20e38:	ldrd	r0, [r1, #112]	; 0x70
   20e3c:	strd	r0, [sp]
   20e40:	mov	r0, ip
   20e44:	mov	r1, r9
   20e48:	bl	1408c <fprintf@plt>
   20e4c:	ldr	r4, [r4]
   20e50:	cmp	r4, #0
   20e54:	bne	20d74 <__flatcc_fb_gen_c_builder@@Base+0xf14>
   20e58:	ldr	r0, [pc, #232]	; 20f48 <__flatcc_fb_gen_c_builder@@Base+0x10e8>
   20e5c:	ldr	r3, [r5]
   20e60:	mov	r2, #47	; 0x2f
   20e64:	mov	r1, #1
   20e68:	add	r0, pc, r0
   20e6c:	bl	14014 <fwrite@plt>
   20e70:	mov	r0, #0
   20e74:	add	sp, sp, #476	; 0x1dc
   20e78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20e7c:	ldr	r2, [r4, #48]	; 0x30
   20e80:	ldr	r0, [r5]
   20e84:	mov	r1, r8
   20e88:	str	fp, [sp]
   20e8c:	bl	1408c <fprintf@plt>
   20e90:	ldr	r4, [r4]
   20e94:	cmp	r4, #0
   20e98:	bne	20d74 <__flatcc_fb_gen_c_builder@@Base+0xf14>
   20e9c:	b	20e58 <__flatcc_fb_gen_c_builder@@Base+0xff8>
   20ea0:	ldr	r2, [r4, #48]	; 0x30
   20ea4:	ldr	r0, [r5]
   20ea8:	mov	r1, sl
   20eac:	stm	sp, {r3, fp}
   20eb0:	mov	r3, r7
   20eb4:	bl	1408c <fprintf@plt>
   20eb8:	ldr	r4, [r4]
   20ebc:	cmp	r4, #0
   20ec0:	bne	20d74 <__flatcc_fb_gen_c_builder@@Base+0xf14>
   20ec4:	b	20e58 <__flatcc_fb_gen_c_builder@@Base+0xff8>
   20ec8:	ldr	r2, [pc, #96]	; 20f30 <__flatcc_fb_gen_c_builder@@Base+0x10d0>
   20ecc:	ldr	r3, [pc, #120]	; 20f4c <__flatcc_fb_gen_c_builder@@Base+0x10ec>
   20ed0:	ldr	r4, [pc, #120]	; 20f50 <__flatcc_fb_gen_c_builder@@Base+0x10f0>
   20ed4:	ldr	r1, [r6, r2]
   20ed8:	add	r3, pc, r3
   20edc:	str	r3, [sp]
   20ee0:	ldr	r0, [r1]
   20ee4:	ldr	r1, [pc, #104]	; 20f54 <__flatcc_fb_gen_c_builder@@Base+0x10f4>
   20ee8:	add	r4, pc, r4
   20eec:	mov	r2, r4
   20ef0:	mov	r3, #74	; 0x4a
   20ef4:	add	r1, pc, r1
   20ef8:	bl	1408c <fprintf@plt>
   20efc:	ldr	r3, [pc, #84]	; 20f58 <__flatcc_fb_gen_c_builder@@Base+0x10f8>
   20f00:	ldr	r0, [pc, #84]	; 20f5c <__flatcc_fb_gen_c_builder@@Base+0x10fc>
   20f04:	add	r3, pc, r3
   20f08:	mov	r1, r4
   20f0c:	add	r3, r3, #20
   20f10:	mov	r2, #74	; 0x4a
   20f14:	add	r0, pc, r0
   20f18:	bl	14140 <__assert_fail@plt>
   20f1c:	andeq	r2, r3, r4, ror #3
   20f20:	andeq	sl, r4, r4, lsr #5
   20f24:	andeq	r2, r3, r4, lsr #6
   20f28:	andeq	r2, r3, r8, asr #4
   20f2c:	muleq	r3, r4, r2
   20f30:	andeq	r0, r0, r0, lsr #1
   20f34:	andeq	r2, r3, r0, lsr #6
   20f38:	andeq	r1, r3, r0, lsl #26
   20f3c:	strdeq	r0, [r2], -r4
   20f40:	andeq	r1, r3, r8, ror #20
   20f44:	ldrdeq	r8, [r2], -r4
   20f48:	andeq	r2, r3, ip, lsl r1
   20f4c:	andeq	r2, r3, r8, ror r1
   20f50:	ldrdeq	r1, [r3], -r4
   20f54:	andeq	pc, r1, r8, asr #31
   20f58:	andeq	r1, r3, ip, lsr r9
   20f5c:	andeq	r8, r2, r8, lsr #7

00020f60 <__flatcc_fb_gen_c_verifier@@Base>:
   20f60:	ldr	r3, [r0, #208]	; 0xd0
   20f64:	ldr	r1, [pc, #844]	; 212b8 <__flatcc_fb_gen_c_verifier@@Base+0x358>
   20f68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20f6c:	add	r1, pc, r1
   20f70:	ldr	r3, [r3, #164]	; 0xa4
   20f74:	mov	r6, r0
   20f78:	sub	sp, sp, #252	; 0xfc
   20f7c:	mov	r2, r3
   20f80:	ldr	r0, [r0, #204]	; 0xcc
   20f84:	bl	1408c <fprintf@plt>
   20f88:	ldr	r0, [pc, #812]	; 212bc <__flatcc_fb_gen_c_verifier@@Base+0x35c>
   20f8c:	ldr	r3, [r6, #204]	; 0xcc
   20f90:	mov	r2, #81	; 0x51
   20f94:	mov	r1, #1
   20f98:	add	r0, pc, r0
   20f9c:	bl	14014 <fwrite@plt>
   20fa0:	ldr	r3, [r6, #208]	; 0xd0
   20fa4:	ldr	r1, [pc, #788]	; 212c0 <__flatcc_fb_gen_c_verifier@@Base+0x360>
   20fa8:	ldr	r0, [r6, #204]	; 0xcc
   20fac:	ldr	r2, [r3, #164]	; 0xa4
   20fb0:	add	r1, pc, r1
   20fb4:	bl	1408c <fprintf@plt>
   20fb8:	ldr	r3, [r6, #208]	; 0xd0
   20fbc:	ldr	r1, [pc, #768]	; 212c4 <__flatcc_fb_gen_c_verifier@@Base+0x364>
   20fc0:	ldr	r0, [r6, #204]	; 0xcc
   20fc4:	ldr	r2, [r3, #160]	; 0xa0
   20fc8:	add	r1, pc, r1
   20fcc:	bl	1408c <fprintf@plt>
   20fd0:	ldr	r0, [pc, #752]	; 212c8 <__flatcc_fb_gen_c_verifier@@Base+0x368>
   20fd4:	ldr	r3, [r6, #204]	; 0xcc
   20fd8:	mov	r2, #7
   20fdc:	mov	r1, #1
   20fe0:	add	r0, pc, r0
   20fe4:	bl	14014 <fwrite@plt>
   20fe8:	ldr	r0, [pc, #732]	; 212cc <__flatcc_fb_gen_c_verifier@@Base+0x36c>
   20fec:	ldr	r3, [r6, #204]	; 0xcc
   20ff0:	mov	r2, #36	; 0x24
   20ff4:	mov	r1, #1
   20ff8:	add	r0, pc, r0
   20ffc:	bl	14014 <fwrite@plt>
   21000:	ldr	r2, [pc, #712]	; 212d0 <__flatcc_fb_gen_c_verifier@@Base+0x370>
   21004:	ldr	r1, [pc, #712]	; 212d4 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   21008:	mov	r0, r6
   2100c:	add	r1, pc, r1
   21010:	add	r2, pc, r2
   21014:	bl	15f70 <__flatcc_fb_gen_c_includes@@Base>
   21018:	ldr	r3, [r6, #212]	; 0xd4
   2101c:	ldr	r1, [r6, #204]	; 0xcc
   21020:	ldr	r3, [r3, #140]	; 0x8c
   21024:	cmp	r3, #0
   21028:	beq	21048 <__flatcc_fb_gen_c_verifier@@Base+0xe8>
   2102c:	ldr	r0, [pc, #676]	; 212d8 <__flatcc_fb_gen_c_verifier@@Base+0x378>
   21030:	mov	r3, r1
   21034:	mov	r2, #36	; 0x24
   21038:	mov	r1, #1
   2103c:	add	r0, pc, r0
   21040:	bl	14014 <fwrite@plt>
   21044:	ldr	r1, [r6, #204]	; 0xcc
   21048:	mov	r0, #10
   2104c:	add	r7, sp, #28
   21050:	bl	140ec <fputc@plt>
   21054:	mov	r0, r7
   21058:	mov	r2, #220	; 0xdc
   2105c:	mov	r1, #0
   21060:	bl	140a4 <memset@plt>
   21064:	ldr	r3, [r6, #208]	; 0xd0
   21068:	ldr	r5, [pc, #620]	; 212dc <__flatcc_fb_gen_c_verifier@@Base+0x37c>
   2106c:	ldr	r4, [r3, #40]	; 0x28
   21070:	add	r5, pc, r5
   21074:	cmp	r4, #0
   21078:	bne	2108c <__flatcc_fb_gen_c_verifier@@Base+0x12c>
   2107c:	b	210c4 <__flatcc_fb_gen_c_verifier@@Base+0x164>
   21080:	ldr	r4, [r4]
   21084:	cmp	r4, #0
   21088:	beq	210c4 <__flatcc_fb_gen_c_verifier@@Base+0x164>
   2108c:	ldrh	r3, [r4, #8]
   21090:	cmp	r3, #0
   21094:	bne	21080 <__flatcc_fb_gen_c_verifier@@Base+0x120>
   21098:	mov	r1, r4
   2109c:	ldr	r0, [r4, #12]
   210a0:	mov	r2, r7
   210a4:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   210a8:	mov	r2, r7
   210ac:	mov	r1, r5
   210b0:	ldr	r0, [r6, #204]	; 0xcc
   210b4:	bl	1408c <fprintf@plt>
   210b8:	ldr	r4, [r4]
   210bc:	cmp	r4, #0
   210c0:	bne	2108c <__flatcc_fb_gen_c_verifier@@Base+0x12c>
   210c4:	ldr	r1, [r6, #204]	; 0xcc
   210c8:	mov	r0, #10
   210cc:	bl	140ec <fputc@plt>
   210d0:	ldr	r3, [r6, #208]	; 0xd0
   210d4:	ldr	r5, [r3, #40]	; 0x28
   210d8:	cmp	r5, #0
   210dc:	addne	r4, r6, #204	; 0xcc
   210e0:	bne	210f4 <__flatcc_fb_gen_c_verifier@@Base+0x194>
   210e4:	b	21268 <__flatcc_fb_gen_c_verifier@@Base+0x308>
   210e8:	ldr	r5, [r5]
   210ec:	cmp	r5, #0
   210f0:	beq	21118 <__flatcc_fb_gen_c_verifier@@Base+0x1b8>
   210f4:	ldrh	r3, [r5, #8]
   210f8:	cmp	r3, #4
   210fc:	bne	210e8 <__flatcc_fb_gen_c_verifier@@Base+0x188>
   21100:	mov	r1, r5
   21104:	mov	r0, r4
   21108:	bl	20cec <__flatcc_fb_gen_c_builder@@Base+0xe8c>
   2110c:	ldr	r5, [r5]
   21110:	cmp	r5, #0
   21114:	bne	210f4 <__flatcc_fb_gen_c_verifier@@Base+0x194>
   21118:	ldr	r3, [r6, #208]	; 0xd0
   2111c:	ldr	r4, [r3, #40]	; 0x28
   21120:	cmp	r4, #0
   21124:	beq	21268 <__flatcc_fb_gen_c_verifier@@Base+0x308>
   21128:	ldr	r9, [pc, #432]	; 212e0 <__flatcc_fb_gen_c_verifier@@Base+0x380>
   2112c:	ldr	r8, [pc, #432]	; 212e4 <__flatcc_fb_gen_c_verifier@@Base+0x384>
   21130:	ldr	fp, [pc, #432]	; 212e8 <__flatcc_fb_gen_c_verifier@@Base+0x388>
   21134:	ldr	sl, [pc, #432]	; 212ec <__flatcc_fb_gen_c_verifier@@Base+0x38c>
   21138:	add	r9, pc, r9
   2113c:	add	r8, pc, r8
   21140:	add	fp, pc, fp
   21144:	add	sl, pc, sl
   21148:	str	r9, [sp, #16]
   2114c:	str	r8, [sp, #20]
   21150:	b	21160 <__flatcc_fb_gen_c_verifier@@Base+0x200>
   21154:	ldr	r4, [r4]
   21158:	cmp	r4, #0
   2115c:	beq	21224 <__flatcc_fb_gen_c_verifier@@Base+0x2c4>
   21160:	ldrh	r3, [r4, #8]
   21164:	cmp	r3, #1
   21168:	bne	21154 <__flatcc_fb_gen_c_verifier@@Base+0x1f4>
   2116c:	mov	r2, #220	; 0xdc
   21170:	mov	r1, r5
   21174:	mov	r0, r7
   21178:	bl	140a4 <memset@plt>
   2117c:	mov	r1, r4
   21180:	ldr	r0, [r4, #12]
   21184:	mov	r2, r7
   21188:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   2118c:	ldrh	r2, [r4, #104]	; 0x68
   21190:	ldr	r0, [r6, #204]	; 0xcc
   21194:	mov	r3, r7
   21198:	str	r2, [sp, #8]
   2119c:	ldrd	r8, [r4, #112]	; 0x70
   211a0:	mov	r2, r7
   211a4:	mov	r1, fp
   211a8:	strd	r8, [sp]
   211ac:	bl	1408c <fprintf@plt>
   211b0:	ldrh	r2, [r4, #104]	; 0x68
   211b4:	ldr	r0, [r6, #204]	; 0xcc
   211b8:	mov	r3, r7
   211bc:	str	r2, [sp, #8]
   211c0:	ldrd	r8, [r4, #112]	; 0x70
   211c4:	mov	r2, r7
   211c8:	mov	r1, sl
   211cc:	strd	r8, [sp]
   211d0:	bl	1408c <fprintf@plt>
   211d4:	ldrh	r2, [r4, #104]	; 0x68
   211d8:	ldr	r0, [r6, #204]	; 0xcc
   211dc:	mov	r3, r6
   211e0:	str	r2, [sp, #8]
   211e4:	ldrd	r8, [r4, #112]	; 0x70
   211e8:	mov	r2, r7
   211ec:	ldr	r1, [sp, #16]
   211f0:	strd	r8, [sp]
   211f4:	bl	1408c <fprintf@plt>
   211f8:	ldrh	r3, [r4, #104]	; 0x68
   211fc:	ldr	r0, [r6, #204]	; 0xcc
   21200:	mov	r2, r7
   21204:	str	r3, [sp, #8]
   21208:	ldrd	r8, [r4, #112]	; 0x70
   2120c:	ldr	r1, [sp, #20]
   21210:	strd	r8, [sp]
   21214:	bl	1408c <fprintf@plt>
   21218:	ldr	r4, [r4]
   2121c:	cmp	r4, #0
   21220:	bne	21160 <__flatcc_fb_gen_c_verifier@@Base+0x200>
   21224:	ldr	r3, [r6, #208]	; 0xd0
   21228:	ldr	r4, [r3, #40]	; 0x28
   2122c:	cmp	r4, #0
   21230:	bne	21244 <__flatcc_fb_gen_c_verifier@@Base+0x2e4>
   21234:	b	21268 <__flatcc_fb_gen_c_verifier@@Base+0x308>
   21238:	ldr	r4, [r4]
   2123c:	cmp	r4, #0
   21240:	beq	21268 <__flatcc_fb_gen_c_verifier@@Base+0x308>
   21244:	ldrh	r3, [r4, #8]
   21248:	cmp	r3, #0
   2124c:	bne	21238 <__flatcc_fb_gen_c_verifier@@Base+0x2d8>
   21250:	mov	r1, r4
   21254:	mov	r0, r6
   21258:	bl	20680 <__flatcc_fb_gen_c_builder@@Base+0x820>
   2125c:	ldr	r4, [r4]
   21260:	cmp	r4, #0
   21264:	bne	21244 <__flatcc_fb_gen_c_verifier@@Base+0x2e4>
   21268:	ldr	r3, [r6, #212]	; 0xd4
   2126c:	ldr	r0, [r6, #204]	; 0xcc
   21270:	ldr	r3, [r3, #140]	; 0x8c
   21274:	cmp	r3, #0
   21278:	beq	21298 <__flatcc_fb_gen_c_verifier@@Base+0x338>
   2127c:	mov	r3, r0
   21280:	ldr	r0, [pc, #104]	; 212f0 <__flatcc_fb_gen_c_verifier@@Base+0x390>
   21284:	mov	r2, #36	; 0x24
   21288:	mov	r1, #1
   2128c:	add	r0, pc, r0
   21290:	bl	14014 <fwrite@plt>
   21294:	ldr	r0, [r6, #204]	; 0xcc
   21298:	ldr	r3, [r6, #208]	; 0xd0
   2129c:	ldr	r1, [pc, #80]	; 212f4 <__flatcc_fb_gen_c_verifier@@Base+0x394>
   212a0:	ldr	r2, [r3, #164]	; 0xa4
   212a4:	add	r1, pc, r1
   212a8:	bl	1408c <fprintf@plt>
   212ac:	mov	r0, #0
   212b0:	add	sp, sp, #252	; 0xfc
   212b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   212b8:	muleq	r3, r4, r1
   212bc:	andeq	r1, r2, ip, lsl r2
   212c0:	andeq	r1, r3, ip, lsl #12
   212c4:	andeq	r1, r3, ip, lsl #12
   212c8:			; <UNDEFINED> instruction: 0x000273b0
   212cc:	andeq	r2, r3, r8, lsr r1
   212d0:	andeq	r2, r3, r8, asr #2
   212d4:	andeq	pc, r1, r8, asr #20
   212d8:	andeq	r1, r2, ip, lsl #5
   212dc:	strdeq	r2, [r3], -r4
   212e0:			; <UNDEFINED> instruction: 0x000321b4
   212e4:	andeq	r2, r3, r8, ror #4
   212e8:	andeq	r2, r3, ip, rrx
   212ec:	andeq	r2, r3, r4, lsl #2
   212f0:	andeq	r6, r2, r0, lsr #29
   212f4:			; <UNDEFINED> instruction: 0x000321b0
   212f8:	push	{r1, r2, r3}
   212fc:	ldr	r3, [pc, #236]	; 213f0 <__flatcc_fb_gen_c_verifier@@Base+0x490>
   21300:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21304:	add	r3, pc, r3
   21308:	ldr	r2, [r0, #212]	; 0xd4
   2130c:	ldrb	r1, [r3]
   21310:	sub	sp, sp, #12
   21314:	mov	r5, r0
   21318:	cmp	r1, #0
   2131c:	ldr	sl, [sp, #44]	; 0x2c
   21320:	ldr	r4, [r0, #220]	; 0xdc
   21324:	ldr	r6, [r2, #176]	; 0xb0
   21328:	beq	213dc <__flatcc_fb_gen_c_verifier@@Base+0x47c>
   2132c:	ldrb	r3, [sl]
   21330:	cmp	r3, #0
   21334:	beq	213c0 <__flatcc_fb_gen_c_verifier@@Base+0x460>
   21338:	mul	r6, r6, r4
   2133c:	cmp	r6, #64	; 0x40
   21340:	ble	2138c <__flatcc_fb_gen_c_verifier@@Base+0x42c>
   21344:	ldr	r9, [pc, #168]	; 213f4 <__flatcc_fb_gen_c_verifier@@Base+0x494>
   21348:	ldr	r8, [pc, #168]	; 213f8 <__flatcc_fb_gen_c_verifier@@Base+0x498>
   2134c:	add	r9, pc, r9
   21350:	add	r8, pc, r8
   21354:	mov	r4, r6
   21358:	mov	r7, #64	; 0x40
   2135c:	sub	r4, r4, #64	; 0x40
   21360:	mov	r3, r9
   21364:	mov	r2, r7
   21368:	mov	r1, r8
   2136c:	ldr	r0, [r5, #204]	; 0xcc
   21370:	bl	1408c <fprintf@plt>
   21374:	cmp	r4, #64	; 0x40
   21378:	bgt	2135c <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   2137c:	sub	r3, r6, #65	; 0x41
   21380:	bic	r3, r3, #63	; 0x3f
   21384:	sub	r6, r6, #64	; 0x40
   21388:	sub	r6, r6, r3
   2138c:	ldr	r3, [pc, #104]	; 213fc <__flatcc_fb_gen_c_verifier@@Base+0x49c>
   21390:	ldr	r1, [pc, #104]	; 21400 <__flatcc_fb_gen_c_verifier@@Base+0x4a0>
   21394:	mov	r2, r6
   21398:	add	r3, pc, r3
   2139c:	add	r1, pc, r1
   213a0:	ldr	r0, [r5, #204]	; 0xcc
   213a4:	bl	1408c <fprintf@plt>
   213a8:	add	r3, sp, #48	; 0x30
   213ac:	mov	r1, sl
   213b0:	mov	r2, r3
   213b4:	ldr	r0, [r5, #204]	; 0xcc
   213b8:	str	r3, [sp, #4]
   213bc:	bl	140e0 <vfprintf@plt>
   213c0:	ldr	r1, [r5, #204]	; 0xcc
   213c4:	mov	r0, #10
   213c8:	bl	140ec <fputc@plt>
   213cc:	add	sp, sp, #12
   213d0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   213d4:	add	sp, sp, #12
   213d8:	bx	lr
   213dc:	mov	r0, r3
   213e0:	mov	r2, #64	; 0x40
   213e4:	mov	r1, #32
   213e8:	bl	140a4 <memset@plt>
   213ec:	b	2132c <__flatcc_fb_gen_c_verifier@@Base+0x3cc>
   213f0:			; <UNDEFINED> instruction: 0x00049db8
   213f4:	andeq	r9, r4, r0, ror sp
   213f8:	andeq	r7, r2, r0, asr #30
   213fc:	andeq	r9, r4, r4, lsr #26
   21400:	strdeq	r7, [r2], -r4
   21404:	ldr	r1, [pc, #4]	; 21410 <__flatcc_fb_gen_c_verifier@@Base+0x4b0>
   21408:	add	r1, pc, r1
   2140c:	b	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21410:	andeq	r2, r3, ip, lsl #4
   21414:	b	21404 <__flatcc_fb_gen_c_verifier@@Base+0x4a4>
   21418:	ldr	r1, [pc, #4]	; 21424 <__flatcc_fb_gen_c_verifier@@Base+0x4c4>
   2141c:	add	r1, pc, r1
   21420:	b	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21424:	andeq	r2, r3, ip, lsl #4
   21428:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2142c:	sub	r7, r3, r2
   21430:	add	r7, r7, #1
   21434:	sub	sp, sp, #44	; 0x2c
   21438:	add	r7, r7, r7, lsr #31
   2143c:	str	r2, [sp, #24]
   21440:	add	r7, r2, r7, asr #1
   21444:	ldr	r2, [sp, #80]	; 0x50
   21448:	str	r3, [sp, #28]
   2144c:	ldr	r3, [r1]
   21450:	str	r1, [sp, #20]
   21454:	str	r2, [sp, #32]
   21458:	mov	r1, r2
   2145c:	lsl	r2, r7, #4
   21460:	str	r2, [sp, #36]	; 0x24
   21464:	add	r2, r3, r2
   21468:	mov	r6, r0
   2146c:	ldr	r8, [r2, #4]
   21470:	ldr	r2, [sp, #84]	; 0x54
   21474:	cmp	r1, r8
   21478:	str	r2, [sp, #16]
   2147c:	bgt	215e4 <__flatcc_fb_gen_c_verifier@@Base+0x684>
   21480:	sub	r8, r8, r1
   21484:	cmp	r8, #8
   21488:	movge	r8, #8
   2148c:	ldr	r9, [r3, r7, lsl #4]
   21490:	cmp	r8, #0
   21494:	add	r9, r9, r1
   21498:	beq	2179c <__flatcc_fb_gen_c_verifier@@Base+0x83c>
   2149c:	rsb	ip, r8, #8
   214a0:	add	r2, r9, r8
   214a4:	lsl	ip, ip, #3
   214a8:	mov	r3, ip
   214ac:	mov	sl, #0
   214b0:	mov	fp, #0
   214b4:	ldrb	r0, [r2, #-1]!
   214b8:	sub	r1, r3, #32
   214bc:	lsl	r5, r0, r1
   214c0:	rsb	r1, r3, #32
   214c4:	lsl	r4, r0, r3
   214c8:	orr	r5, r5, r0, lsr r1
   214cc:	add	r3, r3, #8
   214d0:	cmp	r3, #64	; 0x40
   214d4:	orr	sl, sl, r4
   214d8:	orr	fp, fp, r5
   214dc:	bne	214b4 <__flatcc_fb_gen_c_verifier@@Base+0x554>
   214e0:	cmp	r8, #8
   214e4:	bne	21778 <__flatcc_fb_gen_c_verifier@@Base+0x818>
   214e8:	ldr	r1, [pc, #904]	; 21878 <__flatcc_fb_gen_c_verifier@@Base+0x918>
   214ec:	mov	r3, fp
   214f0:	stm	sp, {r8, r9}
   214f4:	mov	r2, sl
   214f8:	add	r1, pc, r1
   214fc:	mov	r0, r6
   21500:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21504:	ldr	r3, [r6, #220]	; 0xdc
   21508:	add	r3, r3, #1
   2150c:	str	r3, [r6, #220]	; 0xdc
   21510:	ldr	r3, [sp, #24]
   21514:	cmp	r3, r7
   21518:	bne	21630 <__flatcc_fb_gen_c_verifier@@Base+0x6d0>
   2151c:	ldr	r0, [sp, #20]
   21520:	ldr	r3, [sp, #36]	; 0x24
   21524:	ldr	r2, [r0]
   21528:	ldr	r1, [r0, #12]
   2152c:	add	r2, r2, r3
   21530:	ldr	r3, [r2, #12]
   21534:	ldr	r2, [r2, #8]
   21538:	str	r8, [sp]
   2153c:	ldr	r4, [r0, #4]
   21540:	mov	r0, r6
   21544:	blx	r4
   21548:	ldr	r3, [sp, #16]
   2154c:	cmp	r3, #0
   21550:	ble	217c4 <__flatcc_fb_gen_c_verifier@@Base+0x864>
   21554:	ldr	r1, [pc, #800]	; 2187c <__flatcc_fb_gen_c_verifier@@Base+0x91c>
   21558:	mov	r2, r3
   2155c:	add	r1, pc, r1
   21560:	mov	r0, r6
   21564:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21568:	ldr	r3, [r6, #220]	; 0xdc
   2156c:	cmp	r3, #0
   21570:	beq	21818 <__flatcc_fb_gen_c_verifier@@Base+0x8b8>
   21574:	ldr	r1, [pc, #772]	; 21880 <__flatcc_fb_gen_c_verifier@@Base+0x920>
   21578:	sub	r3, r3, #1
   2157c:	str	r3, [r6, #220]	; 0xdc
   21580:	add	r1, pc, r1
   21584:	mov	r0, r6
   21588:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2158c:	ldr	r3, [r6, #220]	; 0xdc
   21590:	cmp	r3, #0
   21594:	beq	21858 <__flatcc_fb_gen_c_verifier@@Base+0x8f8>
   21598:	ldr	r1, [pc, #740]	; 21884 <__flatcc_fb_gen_c_verifier@@Base+0x924>
   2159c:	sub	r3, r3, #1
   215a0:	str	r3, [r6, #220]	; 0xdc
   215a4:	mov	r2, r8
   215a8:	mov	r3, r9
   215ac:	add	r1, pc, r1
   215b0:	mov	r0, r6
   215b4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   215b8:	ldr	r3, [r6, #220]	; 0xdc
   215bc:	ldr	r2, [sp, #16]
   215c0:	add	r3, r3, #1
   215c4:	cmp	r2, #0
   215c8:	str	r3, [r6, #220]	; 0xdc
   215cc:	ble	217b0 <__flatcc_fb_gen_c_verifier@@Base+0x850>
   215d0:	ldr	r1, [pc, #688]	; 21888 <__flatcc_fb_gen_c_verifier@@Base+0x928>
   215d4:	mov	r0, r6
   215d8:	add	r1, pc, r1
   215dc:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   215e0:	b	216bc <__flatcc_fb_gen_c_verifier@@Base+0x75c>
   215e4:	mov	r2, #0
   215e8:	mov	r3, #0
   215ec:	mov	r8, #0
   215f0:	mov	sl, r2
   215f4:	mov	fp, r3
   215f8:	mov	r9, r8
   215fc:	ldr	r1, [pc, #648]	; 2188c <__flatcc_fb_gen_c_verifier@@Base+0x92c>
   21600:	str	r9, [sp, #12]
   21604:	str	r8, [sp, #8]
   21608:	strd	sl, [sp]
   2160c:	add	r1, pc, r1
   21610:	mov	r0, r6
   21614:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21618:	ldr	r3, [r6, #220]	; 0xdc
   2161c:	add	r3, r3, #1
   21620:	str	r3, [r6, #220]	; 0xdc
   21624:	ldr	r3, [sp, #24]
   21628:	cmp	r3, r7
   2162c:	beq	2151c <__flatcc_fb_gen_c_verifier@@Base+0x5bc>
   21630:	ldr	r3, [sp, #28]
   21634:	cmp	r3, r7
   21638:	beq	216f0 <__flatcc_fb_gen_c_verifier@@Base+0x790>
   2163c:	ldr	r3, [sp, #16]
   21640:	mov	r2, r7
   21644:	str	r3, [sp, #4]
   21648:	ldr	r3, [sp, #32]
   2164c:	ldr	r1, [sp, #20]
   21650:	str	r3, [sp]
   21654:	mov	r0, r6
   21658:	ldr	r3, [sp, #28]
   2165c:	bl	21428 <__flatcc_fb_gen_c_verifier@@Base+0x4c8>
   21660:	ldr	r3, [r6, #220]	; 0xdc
   21664:	cmp	r3, #0
   21668:	beq	217d8 <__flatcc_fb_gen_c_verifier@@Base+0x878>
   2166c:	ldr	r1, [pc, #540]	; 21890 <__flatcc_fb_gen_c_verifier@@Base+0x930>
   21670:	sub	r3, r3, #1
   21674:	str	r3, [r6, #220]	; 0xdc
   21678:	mov	r2, r8
   2167c:	mov	r3, r9
   21680:	add	r1, pc, r1
   21684:	mov	r0, r6
   21688:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2168c:	ldr	r3, [sp, #16]
   21690:	ldr	r0, [r6, #220]	; 0xdc
   21694:	str	r3, [sp, #4]
   21698:	ldr	r3, [sp, #32]
   2169c:	add	r0, r0, #1
   216a0:	str	r3, [sp]
   216a4:	ldr	r2, [sp, #24]
   216a8:	str	r0, [r6, #220]	; 0xdc
   216ac:	sub	r3, r7, #1
   216b0:	ldr	r1, [sp, #20]
   216b4:	mov	r0, r6
   216b8:	bl	21428 <__flatcc_fb_gen_c_verifier@@Base+0x4c8>
   216bc:	ldr	r3, [r6, #220]	; 0xdc
   216c0:	cmp	r3, #0
   216c4:	beq	217f8 <__flatcc_fb_gen_c_verifier@@Base+0x898>
   216c8:	ldr	r1, [pc, #452]	; 21894 <__flatcc_fb_gen_c_verifier@@Base+0x934>
   216cc:	sub	r3, r3, #1
   216d0:	str	r3, [r6, #220]	; 0xdc
   216d4:	mov	r2, r8
   216d8:	mov	r3, r9
   216dc:	mov	r0, r6
   216e0:	add	r1, pc, r1
   216e4:	add	sp, sp, #44	; 0x2c
   216e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   216ec:	b	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   216f0:	ldr	r0, [sp, #20]
   216f4:	ldr	r3, [sp, #36]	; 0x24
   216f8:	ldr	r2, [r0]
   216fc:	ldr	r1, [r0, #12]
   21700:	add	r2, r2, r3
   21704:	ldr	r3, [r2, #12]
   21708:	ldr	r2, [r2, #8]
   2170c:	str	r8, [sp]
   21710:	ldr	r4, [r0, #4]
   21714:	mov	r0, r6
   21718:	blx	r4
   2171c:	ldr	r3, [sp, #16]
   21720:	cmp	r3, #0
   21724:	ble	21764 <__flatcc_fb_gen_c_verifier@@Base+0x804>
   21728:	ldr	r1, [pc, #360]	; 21898 <__flatcc_fb_gen_c_verifier@@Base+0x938>
   2172c:	mov	r2, r3
   21730:	add	r1, pc, r1
   21734:	mov	r0, r6
   21738:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2173c:	ldr	r3, [r6, #220]	; 0xdc
   21740:	cmp	r3, #0
   21744:	beq	21838 <__flatcc_fb_gen_c_verifier@@Base+0x8d8>
   21748:	ldr	r1, [pc, #332]	; 2189c <__flatcc_fb_gen_c_verifier@@Base+0x93c>
   2174c:	sub	r3, r3, #1
   21750:	str	r3, [r6, #220]	; 0xdc
   21754:	add	r1, pc, r1
   21758:	mov	r0, r6
   2175c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21760:	b	21660 <__flatcc_fb_gen_c_verifier@@Base+0x700>
   21764:	ldr	r3, [sp, #20]
   21768:	mov	r0, r6
   2176c:	ldr	r3, [r3, #8]
   21770:	blx	r3
   21774:	b	2173c <__flatcc_fb_gen_c_verifier@@Base+0x7dc>
   21778:	mov	r3, #1
   2177c:	sub	r2, ip, #32
   21780:	lsl	r0, r3, ip
   21784:	lsl	r1, r3, r2
   21788:	rsb	r2, ip, #32
   2178c:	orr	r1, r1, r3, lsr r2
   21790:	rsbs	r2, r0, #0
   21794:	rsc	r3, r1, #0
   21798:	b	215fc <__flatcc_fb_gen_c_verifier@@Base+0x69c>
   2179c:	mov	r2, #0
   217a0:	mov	r3, #0
   217a4:	mov	sl, r2
   217a8:	mov	fp, r3
   217ac:	b	215fc <__flatcc_fb_gen_c_verifier@@Base+0x69c>
   217b0:	ldr	r3, [sp, #20]
   217b4:	mov	r0, r6
   217b8:	ldr	r3, [r3, #8]
   217bc:	blx	r3
   217c0:	b	216bc <__flatcc_fb_gen_c_verifier@@Base+0x75c>
   217c4:	ldr	r3, [sp, #20]
   217c8:	mov	r0, r6
   217cc:	ldr	r3, [r3, #8]
   217d0:	blx	r3
   217d4:	b	21568 <__flatcc_fb_gen_c_verifier@@Base+0x608>
   217d8:	ldr	r3, [pc, #192]	; 218a0 <__flatcc_fb_gen_c_verifier@@Base+0x940>
   217dc:	ldr	r1, [pc, #192]	; 218a4 <__flatcc_fb_gen_c_verifier@@Base+0x944>
   217e0:	ldr	r0, [pc, #192]	; 218a8 <__flatcc_fb_gen_c_verifier@@Base+0x948>
   217e4:	add	r3, pc, r3
   217e8:	ldr	r2, [pc, #188]	; 218ac <__flatcc_fb_gen_c_verifier@@Base+0x94c>
   217ec:	add	r1, pc, r1
   217f0:	add	r0, pc, r0
   217f4:	bl	14140 <__assert_fail@plt>
   217f8:	ldr	r3, [pc, #176]	; 218b0 <__flatcc_fb_gen_c_verifier@@Base+0x950>
   217fc:	ldr	r1, [pc, #176]	; 218b4 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   21800:	ldr	r0, [pc, #176]	; 218b8 <__flatcc_fb_gen_c_verifier@@Base+0x958>
   21804:	add	r3, pc, r3
   21808:	ldr	r2, [pc, #172]	; 218bc <__flatcc_fb_gen_c_verifier@@Base+0x95c>
   2180c:	add	r1, pc, r1
   21810:	add	r0, pc, r0
   21814:	bl	14140 <__assert_fail@plt>
   21818:	ldr	r3, [pc, #160]	; 218c0 <__flatcc_fb_gen_c_verifier@@Base+0x960>
   2181c:	ldr	r1, [pc, #160]	; 218c4 <__flatcc_fb_gen_c_verifier@@Base+0x964>
   21820:	ldr	r0, [pc, #160]	; 218c8 <__flatcc_fb_gen_c_verifier@@Base+0x968>
   21824:	add	r3, pc, r3
   21828:	mov	r2, #888	; 0x378
   2182c:	add	r1, pc, r1
   21830:	add	r0, pc, r0
   21834:	bl	14140 <__assert_fail@plt>
   21838:	ldr	r3, [pc, #140]	; 218cc <__flatcc_fb_gen_c_verifier@@Base+0x96c>
   2183c:	ldr	r1, [pc, #140]	; 218d0 <__flatcc_fb_gen_c_verifier@@Base+0x970>
   21840:	ldr	r0, [pc, #140]	; 218d4 <__flatcc_fb_gen_c_verifier@@Base+0x974>
   21844:	add	r3, pc, r3
   21848:	ldr	r2, [pc, #136]	; 218d8 <__flatcc_fb_gen_c_verifier@@Base+0x978>
   2184c:	add	r1, pc, r1
   21850:	add	r0, pc, r0
   21854:	bl	14140 <__assert_fail@plt>
   21858:	ldr	r3, [pc, #124]	; 218dc <__flatcc_fb_gen_c_verifier@@Base+0x97c>
   2185c:	ldr	r1, [pc, #124]	; 218e0 <__flatcc_fb_gen_c_verifier@@Base+0x980>
   21860:	ldr	r0, [pc, #124]	; 218e4 <__flatcc_fb_gen_c_verifier@@Base+0x984>
   21864:	add	r3, pc, r3
   21868:	ldr	r2, [pc, #120]	; 218e8 <__flatcc_fb_gen_c_verifier@@Base+0x988>
   2186c:	add	r1, pc, r1
   21870:	add	r0, pc, r0
   21874:	bl	14140 <__assert_fail@plt>
   21878:	andeq	r2, r3, ip, ror #2
   2187c:	andeq	r2, r3, r4, asr r1
   21880:			; <UNDEFINED> instruction: 0x000321b8
   21884:	muleq	r3, r0, r1
   21888:	ldrdeq	r2, [r3], -r8
   2188c:	andeq	r2, r3, r8, ror r0
   21890:	strheq	r2, [r3], -ip
   21894:	andeq	r2, r3, r4, ror r0
   21898:	andeq	r1, r3, r0, lsl #31
   2189c:	andeq	r1, r3, r4, ror #31
   218a0:	andeq	r1, r3, ip, lsl #25
   218a4:	ldrdeq	r1, [r3], -r4
   218a8:	andeq	r1, r3, ip, lsr pc
   218ac:	andeq	r0, r0, fp, lsl #7
   218b0:	andeq	r1, r3, ip, ror #24
   218b4:			; <UNDEFINED> instruction: 0x00031eb4
   218b8:	andeq	r1, r3, ip, lsl pc
   218bc:	andeq	r0, r0, lr, lsl #7
   218c0:	andeq	r1, r3, ip, asr #24
   218c4:	muleq	r3, r4, lr
   218c8:	strdeq	r1, [r3], -ip
   218cc:	andeq	r1, r3, ip, lsr #24
   218d0:	andeq	r1, r3, r4, ror lr
   218d4:	ldrdeq	r1, [r3], -ip
   218d8:	andeq	r0, r0, r7, lsl #7
   218dc:	andeq	r1, r3, ip, lsl #24
   218e0:	andeq	r1, r3, r4, asr lr
   218e4:			; <UNDEFINED> instruction: 0x00031ebc
   218e8:	andeq	r0, r0, r9, ror r3
   218ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   218f0:	sub	sp, sp, #132	; 0x84
   218f4:	str	r1, [sp, #76]	; 0x4c
   218f8:	ldr	r1, [r1]
   218fc:	str	r2, [sp, #52]	; 0x34
   21900:	add	r2, r1, r2, lsl #4
   21904:	ldr	fp, [sp, #168]	; 0xa8
   21908:	str	r2, [sp, #92]	; 0x5c
   2190c:	ldr	r2, [r2, #4]
   21910:	str	r1, [sp, #80]	; 0x50
   21914:	add	r1, fp, #7
   21918:	cmp	r1, r2
   2191c:	str	r1, [sp, #88]	; 0x58
   21920:	str	r2, [sp, #84]	; 0x54
   21924:	str	r0, [sp, #72]	; 0x48
   21928:	str	r3, [sp, #68]	; 0x44
   2192c:	bge	21e08 <__flatcc_fb_gen_c_verifier@@Base+0xea8>
   21930:	sub	r3, r2, fp
   21934:	cmp	r3, #8
   21938:	beq	21e08 <__flatcc_fb_gen_c_verifier@@Base+0xea8>
   2193c:	ldr	r2, [sp, #52]	; 0x34
   21940:	ldr	r3, [sp, #68]	; 0x44
   21944:	sub	r3, r3, r2
   21948:	add	r3, r3, r3, lsr #31
   2194c:	add	r3, r2, r3, asr #1
   21950:	cmp	r2, r3
   21954:	str	r3, [sp, #64]	; 0x40
   21958:	bge	21b20 <__flatcc_fb_gen_c_verifier@@Base+0xbc0>
   2195c:	mov	r1, #0
   21960:	mov	r0, #0
   21964:	ldr	r2, [sp, #80]	; 0x50
   21968:	strd	r0, [sp, #24]
   2196c:	strd	r0, [sp, #32]
   21970:	mov	lr, fp
   21974:	strd	r8, [sp, #96]	; 0x60
   21978:	add	r1, r2, r3, lsl #4
   2197c:	mov	sl, #0
   21980:	mov	fp, #0
   21984:	mov	r9, r3
   21988:	strd	r4, [sp, #16]
   2198c:	ldr	r3, [r1, #-12]
   21990:	cmp	lr, r3
   21994:	bgt	21a64 <__flatcc_fb_gen_c_verifier@@Base+0xb04>
   21998:	sub	r3, r3, lr
   2199c:	cmp	r3, #8
   219a0:	movge	r3, #8
   219a4:	cmp	r3, #0
   219a8:	beq	21fcc <__flatcc_fb_gen_c_verifier@@Base+0x106c>
   219ac:	rsb	r2, r3, #8
   219b0:	ldr	ip, [r1, #-16]
   219b4:	add	r3, r3, lr
   219b8:	str	r2, [sp, #24]
   219bc:	add	ip, ip, r3
   219c0:	lsl	r0, r2, #3
   219c4:	mov	r3, #0
   219c8:	mov	r2, #0
   219cc:	strd	r6, [sp, #56]	; 0x38
   219d0:	mov	r8, r2
   219d4:	mov	r7, lr
   219d8:	mov	lr, r9
   219dc:	mov	r9, r3
   219e0:	ldrb	r2, [ip, #-1]!
   219e4:	sub	r3, r0, #32
   219e8:	lsl	r5, r2, r3
   219ec:	rsb	r3, r0, #32
   219f0:	lsl	r4, r2, r0
   219f4:	orr	r5, r5, r2, lsr r3
   219f8:	add	r0, r0, #8
   219fc:	cmp	r0, #64	; 0x40
   21a00:	orr	r8, r8, r4
   21a04:	orr	r9, r9, r5
   21a08:	bne	219e0 <__flatcc_fb_gen_c_verifier@@Base+0xa80>
   21a0c:	strd	r8, [sp, #32]
   21a10:	mov	r9, lr
   21a14:	mov	lr, r7
   21a18:	ldrd	r6, [sp, #56]	; 0x38
   21a1c:	strd	r4, [sp, #16]
   21a20:	ldr	r3, [sp, #24]
   21a24:	mov	r0, #1
   21a28:	mov	ip, #1
   21a2c:	lsl	r3, r3, #3
   21a30:	sub	r2, r3, #32
   21a34:	lsl	r2, r0, r2
   21a38:	str	r2, [sp, #12]
   21a3c:	ldr	r0, [sp, #12]
   21a40:	rsb	r2, r3, #32
   21a44:	lsl	r3, ip, r3
   21a48:	orr	r2, r0, ip, lsr r2
   21a4c:	str	r3, [sp, #8]
   21a50:	str	r2, [sp, #12]
   21a54:	ldrd	r2, [sp, #8]
   21a58:	rsbs	r2, r2, #0
   21a5c:	rsc	r3, r3, #0
   21a60:	strd	r2, [sp, #24]
   21a64:	ldr	r3, [r1, #4]
   21a68:	ldr	ip, [r1]
   21a6c:	cmp	lr, r3
   21a70:	str	r3, [sp, #56]	; 0x38
   21a74:	mov	r8, ip
   21a78:	bgt	21adc <__flatcc_fb_gen_c_verifier@@Base+0xb7c>
   21a7c:	sub	r3, r3, lr
   21a80:	cmp	r3, #8
   21a84:	movge	r3, #8
   21a88:	cmp	r3, #0
   21a8c:	beq	21fc0 <__flatcc_fb_gen_c_verifier@@Base+0x1060>
   21a90:	rsb	r2, r3, #8
   21a94:	ldrd	r4, [sp, #16]
   21a98:	add	r3, r3, lr
   21a9c:	lsl	r0, r2, #3
   21aa0:	add	ip, ip, r3
   21aa4:	mov	sl, #0
   21aa8:	mov	fp, #0
   21aac:	ldrb	r2, [ip, #-1]!
   21ab0:	sub	r3, r0, #32
   21ab4:	lsl	r7, r2, r3
   21ab8:	rsb	r3, r0, #32
   21abc:	lsl	r6, r2, r0
   21ac0:	orr	r7, r7, r2, lsr r3
   21ac4:	add	r0, r0, #8
   21ac8:	cmp	r0, #64	; 0x40
   21acc:	orr	sl, sl, r6
   21ad0:	orr	fp, fp, r7
   21ad4:	bne	21aac <__flatcc_fb_gen_c_verifier@@Base+0xb4c>
   21ad8:	strd	r4, [sp, #16]
   21adc:	ldrd	r2, [sp, #32]
   21ae0:	ldrd	r4, [sp, #24]
   21ae4:	eor	r2, r2, sl
   21ae8:	eor	r3, r3, fp
   21aec:	and	r4, r4, r2
   21af0:	and	r5, r5, r3
   21af4:	mov	r2, r4
   21af8:	mov	r3, r5
   21afc:	orrs	r3, r2, r3
   21b00:	bne	21ed4 <__flatcc_fb_gen_c_verifier@@Base+0xf74>
   21b04:	ldr	r3, [sp, #52]	; 0x34
   21b08:	sub	r9, r9, #1
   21b0c:	cmp	r3, r9
   21b10:	sub	r1, r1, #16
   21b14:	bne	2198c <__flatcc_fb_gen_c_verifier@@Base+0xa2c>
   21b18:	ldrd	r8, [sp, #96]	; 0x60
   21b1c:	mov	fp, lr
   21b20:	ldr	r3, [sp, #68]	; 0x44
   21b24:	ldr	r2, [sp, #64]	; 0x40
   21b28:	cmp	r3, r2
   21b2c:	ble	21cb8 <__flatcc_fb_gen_c_verifier@@Base+0xd58>
   21b30:	ldr	r2, [sp, #64]	; 0x40
   21b34:	ldr	r3, [sp, #80]	; 0x50
   21b38:	mov	r0, #0
   21b3c:	mov	r1, #0
   21b40:	mov	r4, r0
   21b44:	mov	r5, r1
   21b48:	add	ip, r3, r2, lsl #4
   21b4c:	strd	r0, [sp, #16]
   21b50:	str	fp, [sp, #8]
   21b54:	ldr	lr, [ip, #4]
   21b58:	ldr	r6, [sp, #8]
   21b5c:	cmp	r6, lr
   21b60:	bgt	21c08 <__flatcc_fb_gen_c_verifier@@Base+0xca8>
   21b64:	sub	lr, lr, r6
   21b68:	cmp	lr, #8
   21b6c:	movge	lr, #8
   21b70:	cmp	lr, #0
   21b74:	mov	r5, r6
   21b78:	beq	22150 <__flatcc_fb_gen_c_verifier@@Base+0x11f0>
   21b7c:	rsb	r6, lr, #8
   21b80:	ldr	r4, [ip]
   21b84:	add	lr, lr, r5
   21b88:	add	fp, r4, lr
   21b8c:	mov	sl, r6
   21b90:	lsl	lr, r6, #3
   21b94:	mov	r4, #0
   21b98:	mov	r5, #0
   21b9c:	ldrb	r6, [fp, #-1]!
   21ba0:	sub	r7, lr, #32
   21ba4:	lsl	r9, r6, r7
   21ba8:	rsb	r7, lr, #32
   21bac:	lsl	r8, r6, lr
   21bb0:	orr	r9, r9, r6, lsr r7
   21bb4:	add	lr, lr, #8
   21bb8:	cmp	lr, #64	; 0x40
   21bbc:	orr	r4, r4, r8
   21bc0:	orr	r5, r5, r9
   21bc4:	bne	21b9c <__flatcc_fb_gen_c_verifier@@Base+0xc3c>
   21bc8:	lsl	lr, sl, #3
   21bcc:	sub	r6, lr, #32
   21bd0:	mov	r7, #1
   21bd4:	mov	sl, #1
   21bd8:	lsl	r6, r7, r6
   21bdc:	str	r6, [sp, #44]	; 0x2c
   21be0:	ldr	r7, [sp, #44]	; 0x2c
   21be4:	rsb	r6, lr, #32
   21be8:	lsl	lr, sl, lr
   21bec:	orr	r6, r7, sl, lsr r6
   21bf0:	str	lr, [sp, #40]	; 0x28
   21bf4:	str	r6, [sp, #44]	; 0x2c
   21bf8:	ldrd	r6, [sp, #40]	; 0x28
   21bfc:	rsbs	r6, r6, #0
   21c00:	rsc	r7, r7, #0
   21c04:	strd	r6, [sp, #16]
   21c08:	ldr	lr, [ip, #20]
   21c0c:	ldr	r6, [sp, #8]
   21c10:	cmp	r6, lr
   21c14:	bgt	21c74 <__flatcc_fb_gen_c_verifier@@Base+0xd14>
   21c18:	sub	r1, lr, r6
   21c1c:	cmp	r1, #8
   21c20:	movge	r1, #8
   21c24:	cmp	r1, #0
   21c28:	beq	22144 <__flatcc_fb_gen_c_verifier@@Base+0x11e4>
   21c2c:	ldr	r0, [ip, #16]
   21c30:	rsb	lr, r1, #8
   21c34:	add	r1, r1, r6
   21c38:	add	fp, r0, r1
   21c3c:	lsl	lr, lr, #3
   21c40:	mov	r0, #0
   21c44:	mov	r1, #0
   21c48:	ldrb	r6, [fp, #-1]!
   21c4c:	sub	r7, lr, #32
   21c50:	lsl	r3, r6, r7
   21c54:	rsb	r7, lr, #32
   21c58:	lsl	r2, r6, lr
   21c5c:	orr	r3, r3, r6, lsr r7
   21c60:	add	lr, lr, #8
   21c64:	cmp	lr, #64	; 0x40
   21c68:	orr	r0, r0, r2
   21c6c:	orr	r1, r1, r3
   21c70:	bne	21c48 <__flatcc_fb_gen_c_verifier@@Base+0xce8>
   21c74:	ldrd	sl, [sp, #16]
   21c78:	eor	r6, r4, r0
   21c7c:	eor	r7, r5, r1
   21c80:	and	sl, sl, r6
   21c84:	and	fp, fp, r7
   21c88:	mov	r6, sl
   21c8c:	mov	r7, fp
   21c90:	orrs	lr, r6, r7
   21c94:	bne	21cb4 <__flatcc_fb_gen_c_verifier@@Base+0xd54>
   21c98:	ldr	lr, [sp, #64]	; 0x40
   21c9c:	ldr	r6, [sp, #68]	; 0x44
   21ca0:	add	lr, lr, #1
   21ca4:	cmp	r6, lr
   21ca8:	str	lr, [sp, #64]	; 0x40
   21cac:	add	ip, ip, #16
   21cb0:	bne	21b54 <__flatcc_fb_gen_c_verifier@@Base+0xbf4>
   21cb4:	ldr	fp, [sp, #8]
   21cb8:	ldr	r3, [sp, #64]	; 0x40
   21cbc:	ldr	r4, [sp, #52]	; 0x34
   21cc0:	add	r5, r3, #1
   21cc4:	cmp	r4, r5
   21cc8:	bge	222ec <__flatcc_fb_gen_c_verifier@@Base+0x138c>
   21ccc:	ldr	r3, [sp, #92]	; 0x5c
   21cd0:	ldr	r1, [sp, #88]	; 0x58
   21cd4:	ldr	r2, [sp, #84]	; 0x54
   21cd8:	b	21ce0 <__flatcc_fb_gen_c_verifier@@Base+0xd80>
   21cdc:	ldr	r2, [r3, #4]
   21ce0:	cmp	r1, r2
   21ce4:	bge	21cf4 <__flatcc_fb_gen_c_verifier@@Base+0xd94>
   21ce8:	sub	r0, r2, fp
   21cec:	cmp	r0, #8
   21cf0:	bgt	22044 <__flatcc_fb_gen_c_verifier@@Base+0x10e4>
   21cf4:	add	r4, r4, #1
   21cf8:	cmp	r4, r5
   21cfc:	add	r3, r3, #16
   21d00:	bne	21cdc <__flatcc_fb_gen_c_verifier@@Base+0xd7c>
   21d04:	ldr	sl, [pc, #1804]	; 22418 <__flatcc_fb_gen_c_verifier@@Base+0x14b8>
   21d08:	mov	r8, r4
   21d0c:	add	sl, pc, sl
   21d10:	mov	r6, #0
   21d14:	ldr	r3, [sp, #52]	; 0x34
   21d18:	ldr	r2, [sp, #68]	; 0x44
   21d1c:	cmp	r2, r5
   21d20:	cmpge	r4, r3
   21d24:	movgt	r9, #1
   21d28:	movle	r9, #0
   21d2c:	ble	21e70 <__flatcc_fb_gen_c_verifier@@Base+0xf10>
   21d30:	ldr	r3, [sp, #76]	; 0x4c
   21d34:	ldr	r7, [r3, #24]
   21d38:	add	r7, r7, #1
   21d3c:	str	r7, [r3, #24]
   21d40:	str	r7, [sp, #4]
   21d44:	str	fp, [sp]
   21d48:	sub	r3, r4, #1
   21d4c:	ldr	r2, [sp, #52]	; 0x34
   21d50:	ldr	r1, [sp, #76]	; 0x4c
   21d54:	ldr	r0, [sp, #72]	; 0x48
   21d58:	bl	21428 <__flatcc_fb_gen_c_verifier@@Base+0x4c8>
   21d5c:	cmp	r9, #0
   21d60:	beq	21e7c <__flatcc_fb_gen_c_verifier@@Base+0xf1c>
   21d64:	ldr	r9, [sp, #72]	; 0x48
   21d68:	ldr	r1, [pc, #1708]	; 2241c <__flatcc_fb_gen_c_verifier@@Base+0x14bc>
   21d6c:	mov	r2, r7
   21d70:	add	r1, pc, r1
   21d74:	mov	r0, r9
   21d78:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21d7c:	ldr	r3, [r9, #220]	; 0xdc
   21d80:	ldr	r1, [pc, #1688]	; 22420 <__flatcc_fb_gen_c_verifier@@Base+0x14c0>
   21d84:	mov	r4, #0
   21d88:	str	r3, [r9, #228]	; 0xe4
   21d8c:	mov	r2, r7
   21d90:	add	r1, pc, r1
   21d94:	mov	r0, r9
   21d98:	str	r4, [r9, #220]	; 0xdc
   21d9c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21da0:	ldr	r2, [r9, #228]	; 0xe4
   21da4:	ldr	r3, [sp, #68]	; 0x44
   21da8:	str	fp, [sp]
   21dac:	ldr	r1, [sp, #76]	; 0x4c
   21db0:	mov	r0, r9
   21db4:	str	r2, [r9, #220]	; 0xdc
   21db8:	mov	r2, r5
   21dbc:	bl	218ec <__flatcc_fb_gen_c_verifier@@Base+0x98c>
   21dc0:	ldr	r3, [r9, #220]	; 0xdc
   21dc4:	ldr	r1, [pc, #1624]	; 22424 <__flatcc_fb_gen_c_verifier@@Base+0x14c4>
   21dc8:	mov	r2, r7
   21dcc:	mov	r0, r9
   21dd0:	str	r3, [r9, #228]	; 0xe4
   21dd4:	add	r1, pc, r1
   21dd8:	str	r4, [r9, #220]	; 0xdc
   21ddc:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21de0:	ldr	r3, [r9, #228]	; 0xe4
   21de4:	ldr	r1, [pc, #1596]	; 22428 <__flatcc_fb_gen_c_verifier@@Base+0x14c8>
   21de8:	mov	r0, r9
   21dec:	add	r1, pc, r1
   21df0:	str	r3, [r9, #220]	; 0xdc
   21df4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21df8:	cmp	r5, r8
   21dfc:	bgt	21e9c <__flatcc_fb_gen_c_verifier@@Base+0xf3c>
   21e00:	add	sp, sp, #132	; 0x84
   21e04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21e08:	ldr	r3, [sp, #52]	; 0x34
   21e0c:	ldr	r2, [sp, #68]	; 0x44
   21e10:	cmp	r3, r2
   21e14:	beq	21e48 <__flatcc_fb_gen_c_verifier@@Base+0xee8>
   21e18:	add	r3, r3, #1
   21e1c:	cmp	r2, r3
   21e20:	bne	2193c <__flatcc_fb_gen_c_verifier@@Base+0x9dc>
   21e24:	ldr	r3, [sp, #80]	; 0x50
   21e28:	add	r3, r3, r2, lsl #4
   21e2c:	ldr	r2, [sp, #88]	; 0x58
   21e30:	ldr	r3, [r3, #4]
   21e34:	cmp	r2, r3
   21e38:	bge	21e48 <__flatcc_fb_gen_c_verifier@@Base+0xee8>
   21e3c:	sub	r3, r3, fp
   21e40:	cmp	r3, #8
   21e44:	bne	2193c <__flatcc_fb_gen_c_verifier@@Base+0x9dc>
   21e48:	mov	ip, #0
   21e4c:	str	fp, [sp]
   21e50:	ldr	r3, [sp, #68]	; 0x44
   21e54:	ldr	r2, [sp, #52]	; 0x34
   21e58:	ldr	r1, [sp, #76]	; 0x4c
   21e5c:	ldr	r0, [sp, #72]	; 0x48
   21e60:	str	ip, [sp, #4]
   21e64:	bl	21428 <__flatcc_fb_gen_c_verifier@@Base+0x4c8>
   21e68:	add	sp, sp, #132	; 0x84
   21e6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21e70:	ldr	r3, [sp, #52]	; 0x34
   21e74:	cmp	r4, r3
   21e78:	bgt	223a4 <__flatcc_fb_gen_c_verifier@@Base+0x1444>
   21e7c:	ldr	r3, [sp, #68]	; 0x44
   21e80:	cmp	r3, r5
   21e84:	bge	22364 <__flatcc_fb_gen_c_verifier@@Base+0x1404>
   21e88:	ldr	r3, [sp, #52]	; 0x34
   21e8c:	cmp	r4, r3
   21e90:	ble	22308 <__flatcc_fb_gen_c_verifier@@Base+0x13a8>
   21e94:	cmp	r5, r8
   21e98:	ble	21e00 <__flatcc_fb_gen_c_verifier@@Base+0xea0>
   21e9c:	ldr	r3, [sp, #72]	; 0x48
   21ea0:	ldr	r3, [r3, #220]	; 0xdc
   21ea4:	cmp	r3, #0
   21ea8:	beq	22380 <__flatcc_fb_gen_c_verifier@@Base+0x1420>
   21eac:	ldr	r0, [sp, #72]	; 0x48
   21eb0:	ldr	r1, [pc, #1396]	; 2242c <__flatcc_fb_gen_c_verifier@@Base+0x14cc>
   21eb4:	sub	r3, r3, #1
   21eb8:	str	r3, [r0, #220]	; 0xdc
   21ebc:	mov	r2, r6
   21ec0:	mov	r3, sl
   21ec4:	add	r1, pc, r1
   21ec8:	add	sp, sp, #132	; 0x84
   21ecc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21ed0:	b	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21ed4:	ldr	r0, [sp, #56]	; 0x38
   21ed8:	mov	ip, r8
   21edc:	cmp	lr, r0
   21ee0:	mov	r8, r9
   21ee4:	mov	fp, lr
   21ee8:	ble	21fe4 <__flatcc_fb_gen_c_verifier@@Base+0x1084>
   21eec:	mov	r5, #0
   21ef0:	mov	r4, r5
   21ef4:	mov	r2, #0
   21ef8:	mov	r3, #0
   21efc:	ldr	r6, [sp, #72]	; 0x48
   21f00:	ldr	r1, [pc, #1320]	; 22430 <__flatcc_fb_gen_c_verifier@@Base+0x14d0>
   21f04:	mov	r0, r6
   21f08:	add	r1, pc, r1
   21f0c:	stm	sp, {r4, r5}
   21f10:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21f14:	ldr	r3, [r6, #220]	; 0xdc
   21f18:	ldr	r2, [sp, #52]	; 0x34
   21f1c:	add	r3, r3, #1
   21f20:	str	fp, [sp]
   21f24:	ldr	r1, [sp, #76]	; 0x4c
   21f28:	str	r3, [r6, #220]	; 0xdc
   21f2c:	mov	r0, r6
   21f30:	sub	r3, r8, #1
   21f34:	bl	218ec <__flatcc_fb_gen_c_verifier@@Base+0x98c>
   21f38:	ldr	r3, [r6, #220]	; 0xdc
   21f3c:	cmp	r3, #0
   21f40:	beq	223f4 <__flatcc_fb_gen_c_verifier@@Base+0x1494>
   21f44:	ldr	r6, [sp, #72]	; 0x48
   21f48:	ldr	r1, [pc, #1252]	; 22434 <__flatcc_fb_gen_c_verifier@@Base+0x14d4>
   21f4c:	sub	r3, r3, #1
   21f50:	str	r3, [r6, #220]	; 0xdc
   21f54:	mov	r2, r4
   21f58:	mov	r3, r5
   21f5c:	add	r1, pc, r1
   21f60:	mov	r0, r6
   21f64:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21f68:	ldr	r0, [r6, #220]	; 0xdc
   21f6c:	ldr	r3, [sp, #68]	; 0x44
   21f70:	add	r0, r0, #1
   21f74:	str	fp, [sp]
   21f78:	mov	r2, r8
   21f7c:	str	r0, [r6, #220]	; 0xdc
   21f80:	ldr	r1, [sp, #76]	; 0x4c
   21f84:	mov	r0, r6
   21f88:	bl	218ec <__flatcc_fb_gen_c_verifier@@Base+0x98c>
   21f8c:	ldr	r3, [r6, #220]	; 0xdc
   21f90:	cmp	r3, #0
   21f94:	beq	223d0 <__flatcc_fb_gen_c_verifier@@Base+0x1470>
   21f98:	ldr	r0, [sp, #72]	; 0x48
   21f9c:	ldr	r1, [pc, #1172]	; 22438 <__flatcc_fb_gen_c_verifier@@Base+0x14d8>
   21fa0:	sub	r3, r3, #1
   21fa4:	str	r3, [r0, #220]	; 0xdc
   21fa8:	mov	r2, r4
   21fac:	mov	r3, r5
   21fb0:	add	r1, pc, r1
   21fb4:	add	sp, sp, #132	; 0x84
   21fb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21fbc:	b	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21fc0:	mov	sl, #0
   21fc4:	mov	fp, #0
   21fc8:	b	21adc <__flatcc_fb_gen_c_verifier@@Base+0xb7c>
   21fcc:	mov	r3, #0
   21fd0:	mov	r2, #0
   21fd4:	strd	r2, [sp, #32]
   21fd8:	mov	r3, #8
   21fdc:	str	r3, [sp, #24]
   21fe0:	b	21a20 <__flatcc_fb_gen_c_verifier@@Base+0xac0>
   21fe4:	sub	r0, r0, fp
   21fe8:	cmp	r0, #8
   21fec:	movlt	r4, r0
   21ff0:	movge	r4, #8
   21ff4:	cmp	r4, #0
   21ff8:	add	r5, ip, fp
   21ffc:	beq	21ef4 <__flatcc_fb_gen_c_verifier@@Base+0xf94>
   22000:	rsb	ip, r4, #8
   22004:	add	lr, r5, r4
   22008:	lsl	ip, ip, #3
   2200c:	mov	r2, #0
   22010:	mov	r3, #0
   22014:	ldrb	r6, [lr, #-1]!
   22018:	sub	r7, ip, #32
   2201c:	lsl	r1, r6, r7
   22020:	rsb	r7, ip, #32
   22024:	lsl	r0, r6, ip
   22028:	orr	r1, r1, r6, lsr r7
   2202c:	add	ip, ip, #8
   22030:	cmp	ip, #64	; 0x40
   22034:	orr	r2, r2, r0
   22038:	orr	r3, r3, r1
   2203c:	bne	22014 <__flatcc_fb_gen_c_verifier@@Base+0x10b4>
   22040:	b	21efc <__flatcc_fb_gen_c_verifier@@Base+0xf9c>
   22044:	ldr	r3, [sp, #52]	; 0x34
   22048:	lsl	r7, r4, #4
   2204c:	cmp	r3, r4
   22050:	ldr	r3, [sp, #80]	; 0x50
   22054:	str	r2, [sp, #84]	; 0x54
   22058:	add	r3, r3, r7
   2205c:	blt	22160 <__flatcc_fb_gen_c_verifier@@Base+0x1200>
   22060:	add	r8, fp, #8
   22064:	ldr	r3, [sp, #84]	; 0x54
   22068:	cmp	fp, r3
   2206c:	ldr	r3, [sp, #80]	; 0x50
   22070:	movle	r9, #0
   22074:	ldr	sl, [r3, r7]
   22078:	ble	22194 <__flatcc_fb_gen_c_verifier@@Base+0x1234>
   2207c:	ldr	r7, [sp, #72]	; 0x48
   22080:	ldr	r1, [pc, #948]	; 2243c <__flatcc_fb_gen_c_verifier@@Base+0x14dc>
   22084:	mov	r6, #0
   22088:	mov	r3, #0
   2208c:	str	r6, [sp, #4]
   22090:	str	r6, [sp]
   22094:	mov	r2, #0
   22098:	add	r1, pc, r1
   2209c:	mov	r0, r7
   220a0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   220a4:	ldr	r3, [r7, #220]	; 0xdc
   220a8:	mov	sl, r6
   220ac:	add	r3, r3, #1
   220b0:	str	r3, [r7, #220]	; 0xdc
   220b4:	ldr	r7, [sp, #72]	; 0x48
   220b8:	ldr	r1, [pc, #896]	; 22440 <__flatcc_fb_gen_c_verifier@@Base+0x14e0>
   220bc:	mov	r0, r7
   220c0:	add	r1, pc, r1
   220c4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   220c8:	ldr	r1, [pc, #884]	; 22444 <__flatcc_fb_gen_c_verifier@@Base+0x14e4>
   220cc:	mov	r0, r7
   220d0:	add	r1, pc, r1
   220d4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   220d8:	mov	r0, r7
   220dc:	str	r8, [sp]
   220e0:	ldr	r3, [sp, #64]	; 0x40
   220e4:	mov	r2, r4
   220e8:	ldr	r1, [sp, #76]	; 0x4c
   220ec:	bl	218ec <__flatcc_fb_gen_c_verifier@@Base+0x98c>
   220f0:	mov	r7, r4
   220f4:	ldr	r3, [sp, #72]	; 0x48
   220f8:	ldr	r3, [r3, #220]	; 0xdc
   220fc:	cmp	r3, #0
   22100:	beq	223ac <__flatcc_fb_gen_c_verifier@@Base+0x144c>
   22104:	ldr	r8, [sp, #72]	; 0x48
   22108:	ldr	r1, [pc, #824]	; 22448 <__flatcc_fb_gen_c_verifier@@Base+0x14e8>
   2210c:	sub	r3, r3, #1
   22110:	str	r3, [r8, #220]	; 0xdc
   22114:	mov	r2, r6
   22118:	mov	r3, sl
   2211c:	mov	r0, r8
   22120:	add	r1, pc, r1
   22124:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22128:	ldr	r3, [r8, #220]	; 0xdc
   2212c:	mov	r2, r8
   22130:	add	r3, r3, #1
   22134:	mov	r8, r4
   22138:	str	r3, [r2, #220]	; 0xdc
   2213c:	mov	r4, r7
   22140:	b	21d14 <__flatcc_fb_gen_c_verifier@@Base+0xdb4>
   22144:	mov	r0, #0
   22148:	mov	r1, #0
   2214c:	b	21c74 <__flatcc_fb_gen_c_verifier@@Base+0xd14>
   22150:	mov	r4, #0
   22154:	mov	r5, #0
   22158:	mov	sl, #8
   2215c:	b	21bc8 <__flatcc_fb_gen_c_verifier@@Base+0xc68>
   22160:	ldr	r3, [r3, #-12]
   22164:	add	r8, fp, #8
   22168:	cmp	r3, r8
   2216c:	bgt	22064 <__flatcc_fb_gen_c_verifier@@Base+0x1104>
   22170:	sub	r3, r3, fp
   22174:	sub	r9, r3, #8
   22178:	ldr	r3, [sp, #84]	; 0x54
   2217c:	clz	r9, r9
   22180:	cmp	fp, r3
   22184:	ldr	r3, [sp, #80]	; 0x50
   22188:	lsr	r9, r9, #5
   2218c:	ldr	sl, [r3, r7]
   22190:	bgt	2231c <__flatcc_fb_gen_c_verifier@@Base+0x13bc>
   22194:	add	sl, sl, fp
   22198:	str	r8, [sp, #8]
   2219c:	add	lr, sl, #8
   221a0:	mov	r8, r5
   221a4:	mov	ip, #0
   221a8:	mov	r2, #0
   221ac:	mov	r3, #0
   221b0:	mov	r5, r7
   221b4:	ldrb	r6, [lr, #-1]!
   221b8:	sub	r7, ip, #32
   221bc:	lsl	r1, r6, r7
   221c0:	rsb	r7, ip, #32
   221c4:	lsl	r0, r6, ip
   221c8:	orr	r1, r1, r6, lsr r7
   221cc:	add	ip, ip, #8
   221d0:	cmp	ip, #64	; 0x40
   221d4:	orr	r2, r2, r0
   221d8:	orr	r3, r3, r1
   221dc:	bne	221b4 <__flatcc_fb_gen_c_verifier@@Base+0x1254>
   221e0:	mov	r7, r5
   221e4:	mov	r5, r8
   221e8:	ldr	r8, [sp, #8]
   221ec:	mov	r6, #8
   221f0:	ldr	r1, [pc, #596]	; 2244c <__flatcc_fb_gen_c_verifier@@Base+0x14ec>
   221f4:	stm	sp, {r6, sl}
   221f8:	add	r1, pc, r1
   221fc:	ldr	r0, [sp, #72]	; 0x48
   22200:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22204:	ldr	r2, [sp, #72]	; 0x48
   22208:	cmp	r9, #0
   2220c:	mov	r9, r2
   22210:	ldr	r3, [r2, #220]	; 0xdc
   22214:	add	r3, r3, #1
   22218:	str	r3, [r2, #220]	; 0xdc
   2221c:	beq	220b4 <__flatcc_fb_gen_c_verifier@@Base+0x1154>
   22220:	ldr	r1, [pc, #552]	; 22450 <__flatcc_fb_gen_c_verifier@@Base+0x14f0>
   22224:	mov	r3, sl
   22228:	mov	r2, r6
   2222c:	add	r1, pc, r1
   22230:	mov	r0, r9
   22234:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22238:	ldr	ip, [sp, #76]	; 0x4c
   2223c:	sub	r7, r7, #16
   22240:	mov	r0, #8
   22244:	ldr	r2, [ip]
   22248:	ldr	r1, [ip, #12]
   2224c:	add	r2, r2, r7
   22250:	ldr	r3, [r2, #12]
   22254:	ldr	r2, [r2, #8]
   22258:	str	r0, [sp]
   2225c:	mov	r0, r9
   22260:	ldr	r7, [ip, #4]
   22264:	blx	r7
   22268:	ldr	r1, [pc, #484]	; 22454 <__flatcc_fb_gen_c_verifier@@Base+0x14f4>
   2226c:	mov	r3, sl
   22270:	mov	r2, r6
   22274:	add	r1, pc, r1
   22278:	mov	r0, r9
   2227c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22280:	ldr	r1, [pc, #464]	; 22458 <__flatcc_fb_gen_c_verifier@@Base+0x14f8>
   22284:	mov	r0, r9
   22288:	add	r1, pc, r1
   2228c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22290:	ldr	r1, [pc, #452]	; 2245c <__flatcc_fb_gen_c_verifier@@Base+0x14fc>
   22294:	mov	r0, r9
   22298:	add	r1, pc, r1
   2229c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   222a0:	ldr	r3, [sp, #64]	; 0x40
   222a4:	str	r8, [sp]
   222a8:	mov	r2, r4
   222ac:	ldr	r1, [sp, #76]	; 0x4c
   222b0:	mov	r0, r9
   222b4:	bl	218ec <__flatcc_fb_gen_c_verifier@@Base+0x98c>
   222b8:	ldr	r3, [r9, #220]	; 0xdc
   222bc:	cmp	r3, #0
   222c0:	beq	22330 <__flatcc_fb_gen_c_verifier@@Base+0x13d0>
   222c4:	ldr	r0, [sp, #72]	; 0x48
   222c8:	ldr	r1, [pc, #400]	; 22460 <__flatcc_fb_gen_c_verifier@@Base+0x1500>
   222cc:	sub	r3, r3, #1
   222d0:	str	r3, [r0, #220]	; 0xdc
   222d4:	mov	r2, r6
   222d8:	mov	r3, sl
   222dc:	add	r1, pc, r1
   222e0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   222e4:	sub	r7, r4, #1
   222e8:	b	220f4 <__flatcc_fb_gen_c_verifier@@Base+0x1194>
   222ec:	ldr	r3, [sp, #68]	; 0x44
   222f0:	cmp	r3, r5
   222f4:	bge	22354 <__flatcc_fb_gen_c_verifier@@Base+0x13f4>
   222f8:	ldr	sl, [pc, #356]	; 22464 <__flatcc_fb_gen_c_verifier@@Base+0x1504>
   222fc:	ldr	r8, [sp, #52]	; 0x34
   22300:	mov	r6, #0
   22304:	add	sl, pc, sl
   22308:	ldr	r3, [sp, #76]	; 0x4c
   2230c:	ldr	r0, [sp, #72]	; 0x48
   22310:	ldr	r3, [r3, #8]
   22314:	blx	r3
   22318:	b	21e94 <__flatcc_fb_gen_c_verifier@@Base+0xf34>
   2231c:	mov	sl, #0
   22320:	mov	r6, sl
   22324:	mov	r2, #0
   22328:	mov	r3, #0
   2232c:	b	221f0 <__flatcc_fb_gen_c_verifier@@Base+0x1290>
   22330:	ldr	r3, [pc, #304]	; 22468 <__flatcc_fb_gen_c_verifier@@Base+0x1508>
   22334:	ldr	r1, [pc, #304]	; 2246c <__flatcc_fb_gen_c_verifier@@Base+0x150c>
   22338:	ldr	r0, [pc, #304]	; 22470 <__flatcc_fb_gen_c_verifier@@Base+0x1510>
   2233c:	add	r3, pc, r3
   22340:	mov	r2, #1040	; 0x410
   22344:	add	r3, r3, #16
   22348:	add	r1, pc, r1
   2234c:	add	r0, pc, r0
   22350:	bl	14140 <__assert_fail@plt>
   22354:	ldr	sl, [pc, #280]	; 22474 <__flatcc_fb_gen_c_verifier@@Base+0x1514>
   22358:	ldr	r8, [sp, #52]	; 0x34
   2235c:	add	sl, pc, sl
   22360:	mov	r6, #0
   22364:	str	fp, [sp]
   22368:	ldr	r3, [sp, #68]	; 0x44
   2236c:	ldr	r1, [sp, #76]	; 0x4c
   22370:	mov	r2, r5
   22374:	ldr	r0, [sp, #72]	; 0x48
   22378:	bl	218ec <__flatcc_fb_gen_c_verifier@@Base+0x98c>
   2237c:	b	21e94 <__flatcc_fb_gen_c_verifier@@Base+0xf34>
   22380:	ldr	r3, [pc, #240]	; 22478 <__flatcc_fb_gen_c_verifier@@Base+0x1518>
   22384:	ldr	r1, [pc, #240]	; 2247c <__flatcc_fb_gen_c_verifier@@Base+0x151c>
   22388:	ldr	r0, [pc, #240]	; 22480 <__flatcc_fb_gen_c_verifier@@Base+0x1520>
   2238c:	add	r3, pc, r3
   22390:	mov	r2, #1072	; 0x430
   22394:	add	r3, r3, #16
   22398:	add	r1, pc, r1
   2239c:	add	r0, pc, r0
   223a0:	bl	14140 <__assert_fail@plt>
   223a4:	mov	r7, r9
   223a8:	b	21d40 <__flatcc_fb_gen_c_verifier@@Base+0xde0>
   223ac:	ldr	r3, [pc, #208]	; 22484 <__flatcc_fb_gen_c_verifier@@Base+0x1524>
   223b0:	ldr	r1, [pc, #208]	; 22488 <__flatcc_fb_gen_c_verifier@@Base+0x1528>
   223b4:	ldr	r0, [pc, #208]	; 2248c <__flatcc_fb_gen_c_verifier@@Base+0x152c>
   223b8:	add	r3, pc, r3
   223bc:	ldr	r2, [pc, #204]	; 22490 <__flatcc_fb_gen_c_verifier@@Base+0x1530>
   223c0:	add	r3, r3, #16
   223c4:	add	r1, pc, r1
   223c8:	add	r0, pc, r0
   223cc:	bl	14140 <__assert_fail@plt>
   223d0:	ldr	r3, [pc, #188]	; 22494 <__flatcc_fb_gen_c_verifier@@Base+0x1534>
   223d4:	ldr	r1, [pc, #188]	; 22498 <__flatcc_fb_gen_c_verifier@@Base+0x1538>
   223d8:	ldr	r0, [pc, #188]	; 2249c <__flatcc_fb_gen_c_verifier@@Base+0x153c>
   223dc:	add	r3, pc, r3
   223e0:	ldr	r2, [pc, #184]	; 224a0 <__flatcc_fb_gen_c_verifier@@Base+0x1540>
   223e4:	add	r3, r3, #16
   223e8:	add	r1, pc, r1
   223ec:	add	r0, pc, r0
   223f0:	bl	14140 <__assert_fail@plt>
   223f4:	ldr	r3, [pc, #168]	; 224a4 <__flatcc_fb_gen_c_verifier@@Base+0x1544>
   223f8:	ldr	r1, [pc, #168]	; 224a8 <__flatcc_fb_gen_c_verifier@@Base+0x1548>
   223fc:	ldr	r0, [pc, #168]	; 224ac <__flatcc_fb_gen_c_verifier@@Base+0x154c>
   22400:	add	r3, pc, r3
   22404:	ldr	r2, [pc, #164]	; 224b0 <__flatcc_fb_gen_c_verifier@@Base+0x1550>
   22408:	add	r3, r3, #16
   2240c:	add	r1, pc, r1
   22410:	add	r0, pc, r0
   22414:	bl	14140 <__assert_fail@plt>
   22418:	andeq	r8, r2, r4, lsr lr
   2241c:	andeq	r1, r3, r4, lsr fp
   22420:	andeq	r1, r3, r8, lsr #22
   22424:	strdeq	r1, [r3], -r0
   22428:	andeq	r1, r3, r8, ror #21
   2242c:	andeq	r1, r3, ip, lsl sl
   22430:	andeq	r1, r3, ip, asr r8
   22434:	andeq	r1, r3, r0, lsr r8
   22438:	strdeq	r1, [r3], -ip
   2243c:	andeq	r1, r3, ip, lsr #14
   22440:	andeq	r1, r3, r8, ror #14
   22444:	andeq	r1, r3, r4, ror #14
   22448:	andeq	r1, r3, r4, ror #14
   2244c:	andeq	r1, r3, ip, asr #11
   22450:	andeq	r1, r3, r0, asr #11
   22454:	muleq	r3, r8, r5
   22458:	andeq	r1, r3, r0, lsr #11
   2245c:	muleq	r3, ip, r5
   22460:	andeq	r1, r3, r8, lsl #11
   22464:	andeq	r8, r2, ip, lsr r8
   22468:	andeq	r1, r3, r4, lsr r1
   2246c:	andeq	r1, r3, r8, ror r3
   22470:	andeq	r1, r3, r0, ror #7
   22474:	andeq	r8, r2, r4, ror #15
   22478:	andeq	r1, r3, r4, ror #1
   2247c:	andeq	r1, r3, r8, lsr #6
   22480:	muleq	r3, r0, r3
   22484:	strheq	r1, [r3], -r8
   22488:	strdeq	r1, [r3], -ip
   2248c:	andeq	r1, r3, r4, ror #6
   22490:	andeq	r0, r0, r4, lsl r4
   22494:	muleq	r3, r4, r0
   22498:	ldrdeq	r1, [r3], -r8
   2249c:	andeq	r1, r3, r0, asr #6
   224a0:	andeq	r0, r0, pc, asr #7
   224a4:	andeq	r1, r3, r0, ror r0
   224a8:			; <UNDEFINED> instruction: 0x000312b4
   224ac:	andeq	r1, r3, ip, lsl r3
   224b0:	andeq	r0, r0, sp, asr #7
   224b4:	push	{r4, r5, lr}
   224b8:	sub	sp, sp, #212	; 0xd4
   224bc:	mov	r5, r0
   224c0:	add	r4, sp, #4
   224c4:	mov	r0, r1
   224c8:	mov	r1, r4
   224cc:	bl	160b0 <__flatcc_fb_copy_scope@@Base>
   224d0:	ldr	r2, [r5, #208]	; 0xd0
   224d4:	ldr	r1, [pc, #40]	; 22504 <__flatcc_fb_gen_c_verifier@@Base+0x15a4>
   224d8:	mov	r3, r4
   224dc:	mov	r0, r5
   224e0:	ldr	r2, [r2, #160]	; 0xa0
   224e4:	add	r1, pc, r1
   224e8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   224ec:	ldr	r1, [pc, #20]	; 22508 <__flatcc_fb_gen_c_verifier@@Base+0x15a8>
   224f0:	mov	r0, r5
   224f4:	add	r1, pc, r1
   224f8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   224fc:	add	sp, sp, #212	; 0xd4
   22500:	pop	{r4, r5, pc}
   22504:	andeq	r1, r3, r4, lsl r4
   22508:	andeq	r1, r3, r0, ror r4
   2250c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22510:	sub	sp, sp, #468	; 0x1d4
   22514:	add	r5, sp, #24
   22518:	mov	r4, r0
   2251c:	mov	r6, r1
   22520:	mov	r2, #220	; 0xdc
   22524:	mov	r1, #0
   22528:	mov	r0, r5
   2252c:	add	r7, sp, #244	; 0xf4
   22530:	bl	140a4 <memset@plt>
   22534:	mov	r2, #220	; 0xdc
   22538:	mov	r1, #0
   2253c:	mov	r0, r7
   22540:	bl	140a4 <memset@plt>
   22544:	mov	r2, r5
   22548:	mov	r1, r6
   2254c:	ldr	r0, [r6, #12]
   22550:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   22554:	ldr	r1, [pc, #1336]	; 22a94 <__flatcc_fb_gen_c_verifier@@Base+0x1b34>
   22558:	mov	r2, r5
   2255c:	mov	r0, r4
   22560:	add	r1, pc, r1
   22564:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22568:	ldr	r1, [pc, #1320]	; 22a98 <__flatcc_fb_gen_c_verifier@@Base+0x1b38>
   2256c:	mov	r0, r4
   22570:	add	r1, pc, r1
   22574:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22578:	ldr	r3, [r4, #220]	; 0xdc
   2257c:	ldr	r1, [pc, #1304]	; 22a9c <__flatcc_fb_gen_c_verifier@@Base+0x1b3c>
   22580:	add	r3, r3, #1
   22584:	str	r3, [r4, #220]	; 0xdc
   22588:	mov	r0, r4
   2258c:	add	r1, pc, r1
   22590:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22594:	ldr	r1, [pc, #1284]	; 22aa0 <__flatcc_fb_gen_c_verifier@@Base+0x1b40>
   22598:	mov	r0, r4
   2259c:	add	r1, pc, r1
   225a0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   225a4:	ldr	r1, [pc, #1272]	; 22aa4 <__flatcc_fb_gen_c_verifier@@Base+0x1b44>
   225a8:	mov	r0, r4
   225ac:	add	r1, pc, r1
   225b0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   225b4:	ldr	r1, [pc, #1260]	; 22aa8 <__flatcc_fb_gen_c_verifier@@Base+0x1b48>
   225b8:	mov	r0, r4
   225bc:	add	r1, pc, r1
   225c0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   225c4:	ldr	r3, [r4, #220]	; 0xdc
   225c8:	ldr	r1, [pc, #1244]	; 22aac <__flatcc_fb_gen_c_verifier@@Base+0x1b4c>
   225cc:	add	r3, r3, #1
   225d0:	str	r3, [r4, #220]	; 0xdc
   225d4:	mov	r0, r4
   225d8:	add	r1, pc, r1
   225dc:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   225e0:	ldr	r3, [r4, #220]	; 0xdc
   225e4:	ldr	r8, [pc, #1220]	; 22ab0 <__flatcc_fb_gen_c_verifier@@Base+0x1b50>
   225e8:	cmp	r3, #0
   225ec:	add	r8, pc, r8
   225f0:	beq	22998 <__flatcc_fb_gen_c_verifier@@Base+0x1a38>
   225f4:	ldr	r5, [r6, #20]
   225f8:	sub	r3, r3, #1
   225fc:	cmp	r5, #0
   22600:	str	r3, [r4, #220]	; 0xdc
   22604:	beq	22718 <__flatcc_fb_gen_c_verifier@@Base+0x17b8>
   22608:	ldr	r3, [pc, #1188]	; 22ab4 <__flatcc_fb_gen_c_verifier@@Base+0x1b54>
   2260c:	ldr	fp, [pc, #1188]	; 22ab8 <__flatcc_fb_gen_c_verifier@@Base+0x1b58>
   22610:	add	r3, pc, r3
   22614:	str	r3, [sp, #8]
   22618:	ldr	r3, [pc, #1180]	; 22abc <__flatcc_fb_gen_c_verifier@@Base+0x1b5c>
   2261c:	ldr	sl, [pc, #1180]	; 22ac0 <__flatcc_fb_gen_c_verifier@@Base+0x1b60>
   22620:	add	r3, pc, r3
   22624:	ldr	r9, [pc, #1176]	; 22ac4 <__flatcc_fb_gen_c_verifier@@Base+0x1b64>
   22628:	str	r3, [sp, #12]
   2262c:	ldr	r3, [pc, #1172]	; 22ac8 <__flatcc_fb_gen_c_verifier@@Base+0x1b68>
   22630:	add	fp, pc, fp
   22634:	add	sl, pc, sl
   22638:	add	r9, pc, r9
   2263c:	add	r3, pc, r3
   22640:	str	r3, [sp, #20]
   22644:	ldrh	r2, [r5, #24]
   22648:	ldr	r3, [r5, #4]
   2264c:	cmp	r2, #10
   22650:	ldr	r6, [r3]
   22654:	ldr	r3, [r3, #4]
   22658:	beq	226c0 <__flatcc_fb_gen_c_verifier@@Base+0x1760>
   2265c:	cmp	r2, #14
   22660:	beq	22890 <__flatcc_fb_gen_c_verifier@@Base+0x1930>
   22664:	cmp	r2, #0
   22668:	beq	2270c <__flatcc_fb_gen_c_verifier@@Base+0x17ac>
   2266c:	ldr	r2, [pc, #1112]	; 22acc <__flatcc_fb_gen_c_verifier@@Base+0x1b6c>
   22670:	ldr	r3, [pc, #1112]	; 22ad0 <__flatcc_fb_gen_c_verifier@@Base+0x1b70>
   22674:	ldr	r4, [pc, #1112]	; 22ad4 <__flatcc_fb_gen_c_verifier@@Base+0x1b74>
   22678:	ldr	r1, [r8, r2]
   2267c:	add	r3, pc, r3
   22680:	str	r3, [sp]
   22684:	ldr	r0, [r1]
   22688:	ldr	r1, [pc, #1096]	; 22ad8 <__flatcc_fb_gen_c_verifier@@Base+0x1b78>
   2268c:	add	r4, pc, r4
   22690:	mov	r2, r4
   22694:	ldr	r3, [pc, #1088]	; 22adc <__flatcc_fb_gen_c_verifier@@Base+0x1b7c>
   22698:	add	r1, pc, r1
   2269c:	bl	1408c <fprintf@plt>
   226a0:	ldr	r3, [pc, #1080]	; 22ae0 <__flatcc_fb_gen_c_verifier@@Base+0x1b80>
   226a4:	ldr	r0, [pc, #1080]	; 22ae4 <__flatcc_fb_gen_c_verifier@@Base+0x1b84>
   226a8:	add	r3, pc, r3
   226ac:	mov	r1, r4
   226b0:	add	r3, r3, #28
   226b4:	ldr	r2, [pc, #1056]	; 22adc <__flatcc_fb_gen_c_verifier@@Base+0x1b7c>
   226b8:	add	r0, pc, r0
   226bc:	bl	14140 <__assert_fail@plt>
   226c0:	ldr	r2, [r5, #48]	; 0x30
   226c4:	mov	r1, fp
   226c8:	mov	r0, r4
   226cc:	str	r6, [sp]
   226d0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   226d4:	ldr	r3, [r4, #220]	; 0xdc
   226d8:	mov	r1, sl
   226dc:	add	r3, r3, #1
   226e0:	str	r3, [r4, #220]	; 0xdc
   226e4:	mov	r0, r4
   226e8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   226ec:	mov	r1, r9
   226f0:	mov	r0, r4
   226f4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   226f8:	ldr	r3, [r4, #220]	; 0xdc
   226fc:	cmp	r3, #0
   22700:	beq	22a70 <__flatcc_fb_gen_c_verifier@@Base+0x1b10>
   22704:	sub	r3, r3, #1
   22708:	str	r3, [r4, #220]	; 0xdc
   2270c:	ldr	r5, [r5]
   22710:	cmp	r5, #0
   22714:	bne	22644 <__flatcc_fb_gen_c_verifier@@Base+0x16e4>
   22718:	ldr	r1, [pc, #968]	; 22ae8 <__flatcc_fb_gen_c_verifier@@Base+0x1b88>
   2271c:	mov	r0, r4
   22720:	add	r1, pc, r1
   22724:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22728:	ldr	r3, [r4, #220]	; 0xdc
   2272c:	ldr	r1, [pc, #952]	; 22aec <__flatcc_fb_gen_c_verifier@@Base+0x1b8c>
   22730:	add	r3, r3, #1
   22734:	add	r1, pc, r1
   22738:	str	r3, [r4, #220]	; 0xdc
   2273c:	mov	r0, r4
   22740:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22744:	ldr	r3, [r4, #220]	; 0xdc
   22748:	ldr	r1, [pc, #928]	; 22af0 <__flatcc_fb_gen_c_verifier@@Base+0x1b90>
   2274c:	add	r3, r3, #1
   22750:	str	r3, [r4, #220]	; 0xdc
   22754:	add	r1, pc, r1
   22758:	mov	r0, r4
   2275c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22760:	ldr	r3, [r4, #220]	; 0xdc
   22764:	cmp	r3, #0
   22768:	beq	22a4c <__flatcc_fb_gen_c_verifier@@Base+0x1aec>
   2276c:	ldr	r1, [pc, #896]	; 22af4 <__flatcc_fb_gen_c_verifier@@Base+0x1b94>
   22770:	sub	r3, r3, #1
   22774:	str	r3, [r4, #220]	; 0xdc
   22778:	add	r1, pc, r1
   2277c:	mov	r0, r4
   22780:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22784:	ldr	r3, [r4, #220]	; 0xdc
   22788:	ldr	r1, [pc, #872]	; 22af8 <__flatcc_fb_gen_c_verifier@@Base+0x1b98>
   2278c:	add	r3, r3, #1
   22790:	str	r3, [r4, #220]	; 0xdc
   22794:	add	r1, pc, r1
   22798:	mov	r0, r4
   2279c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   227a0:	ldr	r3, [r4, #220]	; 0xdc
   227a4:	cmp	r3, #0
   227a8:	beq	22a28 <__flatcc_fb_gen_c_verifier@@Base+0x1ac8>
   227ac:	ldr	r5, [pc, #840]	; 22afc <__flatcc_fb_gen_c_verifier@@Base+0x1b9c>
   227b0:	sub	r3, r3, #1
   227b4:	add	r5, pc, r5
   227b8:	str	r3, [r4, #220]	; 0xdc
   227bc:	mov	r1, r5
   227c0:	mov	r0, r4
   227c4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   227c8:	ldr	r3, [r4, #220]	; 0xdc
   227cc:	cmp	r3, #0
   227d0:	beq	22a04 <__flatcc_fb_gen_c_verifier@@Base+0x1aa4>
   227d4:	sub	r3, r3, #1
   227d8:	str	r3, [r4, #220]	; 0xdc
   227dc:	mov	r1, r5
   227e0:	mov	r0, r4
   227e4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   227e8:	ldr	r1, [pc, #784]	; 22b00 <__flatcc_fb_gen_c_verifier@@Base+0x1ba0>
   227ec:	mov	r0, r4
   227f0:	add	r1, pc, r1
   227f4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   227f8:	ldr	r1, [pc, #772]	; 22b04 <__flatcc_fb_gen_c_verifier@@Base+0x1ba4>
   227fc:	mov	r0, r4
   22800:	add	r1, pc, r1
   22804:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22808:	ldr	r3, [r4, #220]	; 0xdc
   2280c:	ldr	r1, [pc, #756]	; 22b08 <__flatcc_fb_gen_c_verifier@@Base+0x1ba8>
   22810:	add	r3, r3, #1
   22814:	str	r3, [r4, #220]	; 0xdc
   22818:	add	r1, pc, r1
   2281c:	mov	r0, r4
   22820:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22824:	ldr	r3, [r4, #220]	; 0xdc
   22828:	cmp	r3, #0
   2282c:	beq	229e0 <__flatcc_fb_gen_c_verifier@@Base+0x1a80>
   22830:	sub	r3, r3, #1
   22834:	str	r3, [r4, #220]	; 0xdc
   22838:	mov	r1, r5
   2283c:	mov	r0, r4
   22840:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22844:	ldr	r1, [pc, #704]	; 22b0c <__flatcc_fb_gen_c_verifier@@Base+0x1bac>
   22848:	mov	r0, r4
   2284c:	add	r1, pc, r1
   22850:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22854:	ldr	r3, [r4, #220]	; 0xdc
   22858:	cmp	r3, #0
   2285c:	beq	229bc <__flatcc_fb_gen_c_verifier@@Base+0x1a5c>
   22860:	sub	r3, r3, #1
   22864:	str	r3, [r4, #220]	; 0xdc
   22868:	mov	r1, r5
   2286c:	mov	r0, r4
   22870:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22874:	ldr	r1, [pc, #660]	; 22b10 <__flatcc_fb_gen_c_verifier@@Base+0x1bb0>
   22878:	mov	r0, r4
   2287c:	add	r1, pc, r1
   22880:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22884:	mov	r0, #0
   22888:	add	sp, sp, #468	; 0x1d4
   2288c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22890:	ldr	r1, [r5, #16]
   22894:	mov	r2, r7
   22898:	str	r3, [sp, #16]
   2289c:	ldr	r0, [r1, #12]
   228a0:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   228a4:	ldr	r2, [r5, #48]	; 0x30
   228a8:	ldr	r3, [sp, #16]
   228ac:	str	r6, [sp]
   228b0:	ldr	r1, [sp, #8]
   228b4:	mov	r0, r4
   228b8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   228bc:	ldr	r3, [r4, #220]	; 0xdc
   228c0:	add	r3, r3, #1
   228c4:	str	r3, [r4, #220]	; 0xdc
   228c8:	ldr	r3, [r5, #16]
   228cc:	ldrh	r3, [r3, #8]
   228d0:	cmp	r3, #0
   228d4:	beq	22930 <__flatcc_fb_gen_c_verifier@@Base+0x19d0>
   228d8:	cmp	r3, #1
   228dc:	bne	22944 <__flatcc_fb_gen_c_verifier@@Base+0x19e4>
   228e0:	ldr	r1, [pc, #556]	; 22b14 <__flatcc_fb_gen_c_verifier@@Base+0x1bb4>
   228e4:	mov	r2, r7
   228e8:	add	r1, pc, r1
   228ec:	mov	r0, r4
   228f0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   228f4:	ldr	r1, [sp, #12]
   228f8:	mov	r0, r4
   228fc:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22900:	ldr	r3, [r4, #220]	; 0xdc
   22904:	cmp	r3, #0
   22908:	bne	22704 <__flatcc_fb_gen_c_verifier@@Base+0x17a4>
   2290c:	ldr	r3, [pc, #516]	; 22b18 <__flatcc_fb_gen_c_verifier@@Base+0x1bb8>
   22910:	ldr	r1, [pc, #516]	; 22b1c <__flatcc_fb_gen_c_verifier@@Base+0x1bbc>
   22914:	ldr	r0, [pc, #516]	; 22b20 <__flatcc_fb_gen_c_verifier@@Base+0x1bc0>
   22918:	add	r3, pc, r3
   2291c:	ldr	r2, [pc, #512]	; 22b24 <__flatcc_fb_gen_c_verifier@@Base+0x1bc4>
   22920:	add	r3, r3, #28
   22924:	add	r1, pc, r1
   22928:	add	r0, pc, r0
   2292c:	bl	14140 <__assert_fail@plt>
   22930:	mov	r2, r7
   22934:	ldr	r1, [sp, #20]
   22938:	mov	r0, r4
   2293c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22940:	b	228f4 <__flatcc_fb_gen_c_verifier@@Base+0x1994>
   22944:	ldr	r2, [pc, #384]	; 22acc <__flatcc_fb_gen_c_verifier@@Base+0x1b6c>
   22948:	ldr	r3, [pc, #472]	; 22b28 <__flatcc_fb_gen_c_verifier@@Base+0x1bc8>
   2294c:	ldr	r4, [pc, #472]	; 22b2c <__flatcc_fb_gen_c_verifier@@Base+0x1bcc>
   22950:	ldr	r1, [r8, r2]
   22954:	add	r3, pc, r3
   22958:	str	r3, [sp]
   2295c:	ldr	r0, [r1]
   22960:	ldr	r1, [pc, #456]	; 22b30 <__flatcc_fb_gen_c_verifier@@Base+0x1bd0>
   22964:	add	r4, pc, r4
   22968:	mov	r2, r4
   2296c:	ldr	r3, [pc, #448]	; 22b34 <__flatcc_fb_gen_c_verifier@@Base+0x1bd4>
   22970:	add	r1, pc, r1
   22974:	bl	1408c <fprintf@plt>
   22978:	ldr	r3, [pc, #440]	; 22b38 <__flatcc_fb_gen_c_verifier@@Base+0x1bd8>
   2297c:	ldr	r0, [pc, #440]	; 22b3c <__flatcc_fb_gen_c_verifier@@Base+0x1bdc>
   22980:	add	r3, pc, r3
   22984:	mov	r1, r4
   22988:	add	r3, r3, #28
   2298c:	ldr	r2, [pc, #416]	; 22b34 <__flatcc_fb_gen_c_verifier@@Base+0x1bd4>
   22990:	add	r0, pc, r0
   22994:	bl	14140 <__assert_fail@plt>
   22998:	ldr	r3, [pc, #416]	; 22b40 <__flatcc_fb_gen_c_verifier@@Base+0x1be0>
   2299c:	ldr	r1, [pc, #416]	; 22b44 <__flatcc_fb_gen_c_verifier@@Base+0x1be4>
   229a0:	ldr	r0, [pc, #416]	; 22b48 <__flatcc_fb_gen_c_verifier@@Base+0x1be8>
   229a4:	add	r3, pc, r3
   229a8:	ldr	r2, [pc, #412]	; 22b4c <__flatcc_fb_gen_c_verifier@@Base+0x1bec>
   229ac:	add	r3, r3, #28
   229b0:	add	r1, pc, r1
   229b4:	add	r0, pc, r0
   229b8:	bl	14140 <__assert_fail@plt>
   229bc:	ldr	r3, [pc, #396]	; 22b50 <__flatcc_fb_gen_c_verifier@@Base+0x1bf0>
   229c0:	ldr	r1, [pc, #396]	; 22b54 <__flatcc_fb_gen_c_verifier@@Base+0x1bf4>
   229c4:	ldr	r0, [pc, #396]	; 22b58 <__flatcc_fb_gen_c_verifier@@Base+0x1bf8>
   229c8:	add	r3, pc, r3
   229cc:	mov	r2, #1552	; 0x610
   229d0:	add	r3, r3, #28
   229d4:	add	r1, pc, r1
   229d8:	add	r0, pc, r0
   229dc:	bl	14140 <__assert_fail@plt>
   229e0:	ldr	r3, [pc, #372]	; 22b5c <__flatcc_fb_gen_c_verifier@@Base+0x1bfc>
   229e4:	ldr	r1, [pc, #372]	; 22b60 <__flatcc_fb_gen_c_verifier@@Base+0x1c00>
   229e8:	ldr	r0, [pc, #372]	; 22b64 <__flatcc_fb_gen_c_verifier@@Base+0x1c04>
   229ec:	add	r3, pc, r3
   229f0:	ldr	r2, [pc, #368]	; 22b68 <__flatcc_fb_gen_c_verifier@@Base+0x1c08>
   229f4:	add	r3, r3, #28
   229f8:	add	r1, pc, r1
   229fc:	add	r0, pc, r0
   22a00:	bl	14140 <__assert_fail@plt>
   22a04:	ldr	r3, [pc, #352]	; 22b6c <__flatcc_fb_gen_c_verifier@@Base+0x1c0c>
   22a08:	ldr	r1, [pc, #352]	; 22b70 <__flatcc_fb_gen_c_verifier@@Base+0x1c10>
   22a0c:	ldr	r0, [pc, #352]	; 22b74 <__flatcc_fb_gen_c_verifier@@Base+0x1c14>
   22a10:	add	r3, pc, r3
   22a14:	ldr	r2, [pc, #348]	; 22b78 <__flatcc_fb_gen_c_verifier@@Base+0x1c18>
   22a18:	add	r3, r3, #28
   22a1c:	add	r1, pc, r1
   22a20:	add	r0, pc, r0
   22a24:	bl	14140 <__assert_fail@plt>
   22a28:	ldr	r3, [pc, #332]	; 22b7c <__flatcc_fb_gen_c_verifier@@Base+0x1c1c>
   22a2c:	ldr	r1, [pc, #332]	; 22b80 <__flatcc_fb_gen_c_verifier@@Base+0x1c20>
   22a30:	ldr	r0, [pc, #332]	; 22b84 <__flatcc_fb_gen_c_verifier@@Base+0x1c24>
   22a34:	add	r3, pc, r3
   22a38:	ldr	r2, [pc, #328]	; 22b88 <__flatcc_fb_gen_c_verifier@@Base+0x1c28>
   22a3c:	add	r3, r3, #28
   22a40:	add	r1, pc, r1
   22a44:	add	r0, pc, r0
   22a48:	bl	14140 <__assert_fail@plt>
   22a4c:	ldr	r3, [pc, #312]	; 22b8c <__flatcc_fb_gen_c_verifier@@Base+0x1c2c>
   22a50:	ldr	r1, [pc, #312]	; 22b90 <__flatcc_fb_gen_c_verifier@@Base+0x1c30>
   22a54:	ldr	r0, [pc, #312]	; 22b94 <__flatcc_fb_gen_c_verifier@@Base+0x1c34>
   22a58:	add	r3, pc, r3
   22a5c:	ldr	r2, [pc, #308]	; 22b98 <__flatcc_fb_gen_c_verifier@@Base+0x1c38>
   22a60:	add	r3, r3, #28
   22a64:	add	r1, pc, r1
   22a68:	add	r0, pc, r0
   22a6c:	bl	14140 <__assert_fail@plt>
   22a70:	ldr	r3, [pc, #292]	; 22b9c <__flatcc_fb_gen_c_verifier@@Base+0x1c3c>
   22a74:	ldr	r1, [pc, #292]	; 22ba0 <__flatcc_fb_gen_c_verifier@@Base+0x1c40>
   22a78:	ldr	r0, [pc, #292]	; 22ba4 <__flatcc_fb_gen_c_verifier@@Base+0x1c44>
   22a7c:	add	r3, pc, r3
   22a80:	ldr	r2, [pc, #288]	; 22ba8 <__flatcc_fb_gen_c_verifier@@Base+0x1c48>
   22a84:	add	r3, r3, #28
   22a88:	add	r1, pc, r1
   22a8c:	add	r0, pc, r0
   22a90:	bl	14140 <__assert_fail@plt>
   22a94:	andeq	r1, r3, r8, lsr r4
   22a98:			; <UNDEFINED> instruction: 0x00033dbc
   22a9c:			; <UNDEFINED> instruction: 0x000285b4
   22aa0:	andeq	r1, r3, ip, lsl #9
   22aa4:	andeq	r1, r3, ip, lsl #9
   22aa8:	andeq	r1, r3, ip, lsl #9
   22aac:	andeq	r1, r3, r4, lsl #9
   22ab0:	andeq	r8, r4, ip, lsl #20
   22ab4:	andeq	r1, r3, r0, lsr #10
   22ab8:	andeq	r1, r3, r0, lsl #10
   22abc:	andeq	r1, r3, r4, asr #11
   22ac0:			; <UNDEFINED> instruction: 0x000315b8
   22ac4:	andeq	r1, r3, ip, lsr #11
   22ac8:	andeq	r1, r3, r8, lsl #10
   22acc:	andeq	r0, r0, r0, lsr #1
   22ad0:			; <UNDEFINED> instruction: 0x000315b0
   22ad4:	andeq	r1, r3, r4, lsr r0
   22ad8:	andeq	lr, r1, r4, lsr #16
   22adc:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   22ae0:	andeq	r0, r3, r8, asr #27
   22ae4:	andeq	r6, r2, r4, lsl #24
   22ae8:	andeq	r1, r3, ip, ror #6
   22aec:	andeq	r1, r3, r4, ror #6
   22af0:	andeq	r1, r3, r0, lsl #7
   22af4:	andeq	r1, r3, r4, ror #9
   22af8:	ldrdeq	r1, [r3], -r4
   22afc:	andeq	r0, r3, r4, lsl #31
   22b00:			; <UNDEFINED> instruction: 0x000314b0
   22b04:			; <UNDEFINED> instruction: 0x000314bc
   22b08:			; <UNDEFINED> instruction: 0x000314b4
   22b0c:	andeq	r1, r3, r4, ror #8
   22b10:	andeq	r8, r2, r4, asr #5
   22b14:	muleq	r3, r0, r2
   22b18:	andeq	r0, r3, r8, asr fp
   22b1c:	muleq	r3, ip, sp
   22b20:	andeq	r0, r3, r4, lsl #28
   22b24:	strdeq	r0, [r0], -r6
   22b28:	andeq	r1, r3, r8, asr r2
   22b2c:	andeq	r0, r3, ip, asr sp
   22b30:	andeq	lr, r1, ip, asr #10
   22b34:	strdeq	r0, [r0], -r2
   22b38:	strdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   22b3c:	andeq	r6, r2, ip, lsr #18
   22b40:	andeq	r0, r3, ip, asr #21
   22b44:	andeq	r0, r3, r0, lsl sp
   22b48:	andeq	r0, r3, r8, ror sp
   22b4c:	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   22b50:	andeq	r0, r3, r8, lsr #21
   22b54:	andeq	r0, r3, ip, ror #25
   22b58:	andeq	r0, r3, r4, asr sp
   22b5c:	andeq	r0, r3, r4, lsl #21
   22b60:	andeq	r0, r3, r8, asr #25
   22b64:	andeq	r0, r3, r0, lsr sp
   22b68:	andeq	r0, r0, lr, lsl #12
   22b6c:	andeq	r0, r3, r0, ror #20
   22b70:	andeq	r0, r3, r4, lsr #25
   22b74:	andeq	r0, r3, ip, lsl #26
   22b78:	andeq	r0, r0, sl, lsl #12
   22b7c:	andeq	r0, r3, ip, lsr sl
   22b80:	andeq	r0, r3, r0, lsl #25
   22b84:	andeq	r0, r3, r8, ror #25
   22b88:	andeq	r0, r0, r9, lsl #12
   22b8c:	andeq	r0, r3, r8, lsl sl
   22b90:	andeq	r0, r3, ip, asr ip
   22b94:	andeq	r0, r3, r4, asr #25
   22b98:	andeq	r0, r0, r7, lsl #12
   22b9c:	strdeq	r0, [r3], -r4
   22ba0:	andeq	r0, r3, r8, lsr ip
   22ba4:	andeq	r0, r3, r0, lsr #25
   22ba8:	strdeq	r0, [r0], -ip
   22bac:	push	{r4, r5, r6, r7, lr}
   22bb0:	sub	sp, sp, #452	; 0x1c4
   22bb4:	add	r4, sp, #8
   22bb8:	mov	r5, r0
   22bbc:	mov	r6, r1
   22bc0:	mov	r0, r4
   22bc4:	mov	r2, #220	; 0xdc
   22bc8:	mov	r1, #0
   22bcc:	bl	140a4 <memset@plt>
   22bd0:	mov	r2, #220	; 0xdc
   22bd4:	mov	r1, #0
   22bd8:	add	r0, sp, #228	; 0xe4
   22bdc:	bl	140a4 <memset@plt>
   22be0:	mov	r2, r4
   22be4:	mov	r1, r6
   22be8:	ldr	r0, [r6, #12]
   22bec:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   22bf0:	ldr	r1, [pc, #356]	; 22d5c <__flatcc_fb_gen_c_verifier@@Base+0x1dfc>
   22bf4:	mov	r2, r4
   22bf8:	mov	r0, r5
   22bfc:	add	r1, pc, r1
   22c00:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22c04:	ldr	r1, [pc, #340]	; 22d60 <__flatcc_fb_gen_c_verifier@@Base+0x1e00>
   22c08:	mov	r0, r5
   22c0c:	add	r1, pc, r1
   22c10:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22c14:	ldr	r3, [r5, #220]	; 0xdc
   22c18:	ldr	r1, [pc, #324]	; 22d64 <__flatcc_fb_gen_c_verifier@@Base+0x1e04>
   22c1c:	add	r3, r3, #1
   22c20:	mov	r0, r5
   22c24:	str	r3, [r5, #220]	; 0xdc
   22c28:	add	r1, pc, r1
   22c2c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22c30:	ldr	r4, [r6, #20]
   22c34:	ldr	r7, [pc, #300]	; 22d68 <__flatcc_fb_gen_c_verifier@@Base+0x1e08>
   22c38:	ldr	r6, [pc, #300]	; 22d6c <__flatcc_fb_gen_c_verifier@@Base+0x1e0c>
   22c3c:	cmp	r4, #0
   22c40:	add	r7, pc, r7
   22c44:	add	r6, pc, r6
   22c48:	bne	22c68 <__flatcc_fb_gen_c_verifier@@Base+0x1d08>
   22c4c:	b	22c9c <__flatcc_fb_gen_c_verifier@@Base+0x1d3c>
   22c50:	mov	r1, r6
   22c54:	mov	r0, r5
   22c58:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22c5c:	ldr	r4, [r4]
   22c60:	cmp	r4, #0
   22c64:	beq	22c9c <__flatcc_fb_gen_c_verifier@@Base+0x1d3c>
   22c68:	ldrh	r3, [r4, #24]
   22c6c:	cmp	r3, #0
   22c70:	beq	22c50 <__flatcc_fb_gen_c_verifier@@Base+0x1cf0>
   22c74:	ldr	r0, [r4, #4]
   22c78:	ldr	r2, [r4, #48]	; 0x30
   22c7c:	mov	r1, r7
   22c80:	ldm	r0, {r0, r3}
   22c84:	str	r0, [sp]
   22c88:	mov	r0, r5
   22c8c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22c90:	ldr	r4, [r4]
   22c94:	cmp	r4, #0
   22c98:	bne	22c68 <__flatcc_fb_gen_c_verifier@@Base+0x1d08>
   22c9c:	ldr	r1, [pc, #204]	; 22d70 <__flatcc_fb_gen_c_verifier@@Base+0x1e10>
   22ca0:	mov	r0, r5
   22ca4:	add	r1, pc, r1
   22ca8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22cac:	ldr	r3, [r5, #220]	; 0xdc
   22cb0:	add	r2, r3, #1
   22cb4:	cmp	r2, #0
   22cb8:	str	r2, [r5, #220]	; 0xdc
   22cbc:	beq	22d14 <__flatcc_fb_gen_c_verifier@@Base+0x1db4>
   22cc0:	ldr	r4, [pc, #172]	; 22d74 <__flatcc_fb_gen_c_verifier@@Base+0x1e14>
   22cc4:	str	r3, [r5, #220]	; 0xdc
   22cc8:	add	r4, pc, r4
   22ccc:	mov	r1, r4
   22cd0:	mov	r0, r5
   22cd4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22cd8:	ldr	r3, [r5, #220]	; 0xdc
   22cdc:	cmp	r3, #0
   22ce0:	beq	22d38 <__flatcc_fb_gen_c_verifier@@Base+0x1dd8>
   22ce4:	sub	r3, r3, #1
   22ce8:	str	r3, [r5, #220]	; 0xdc
   22cec:	mov	r1, r4
   22cf0:	mov	r0, r5
   22cf4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22cf8:	ldr	r1, [pc, #120]	; 22d78 <__flatcc_fb_gen_c_verifier@@Base+0x1e18>
   22cfc:	mov	r0, r5
   22d00:	add	r1, pc, r1
   22d04:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22d08:	mov	r0, #0
   22d0c:	add	sp, sp, #452	; 0x1c4
   22d10:	pop	{r4, r5, r6, r7, pc}
   22d14:	ldr	r3, [pc, #96]	; 22d7c <__flatcc_fb_gen_c_verifier@@Base+0x1e1c>
   22d18:	ldr	r1, [pc, #96]	; 22d80 <__flatcc_fb_gen_c_verifier@@Base+0x1e20>
   22d1c:	ldr	r0, [pc, #96]	; 22d84 <__flatcc_fb_gen_c_verifier@@Base+0x1e24>
   22d20:	add	r3, pc, r3
   22d24:	ldr	r2, [pc, #92]	; 22d88 <__flatcc_fb_gen_c_verifier@@Base+0x1e28>
   22d28:	add	r3, r3, #48	; 0x30
   22d2c:	add	r1, pc, r1
   22d30:	add	r0, pc, r0
   22d34:	bl	14140 <__assert_fail@plt>
   22d38:	ldr	r3, [pc, #76]	; 22d8c <__flatcc_fb_gen_c_verifier@@Base+0x1e2c>
   22d3c:	ldr	r1, [pc, #76]	; 22d90 <__flatcc_fb_gen_c_verifier@@Base+0x1e30>
   22d40:	ldr	r0, [pc, #76]	; 22d94 <__flatcc_fb_gen_c_verifier@@Base+0x1e34>
   22d44:	add	r3, pc, r3
   22d48:	ldr	r2, [pc, #72]	; 22d98 <__flatcc_fb_gen_c_verifier@@Base+0x1e38>
   22d4c:	add	r3, r3, #48	; 0x30
   22d50:	add	r1, pc, r1
   22d54:	add	r0, pc, r0
   22d58:	bl	14140 <__assert_fail@plt>
   22d5c:	andeq	r1, r3, r8, lsr #2
   22d60:	andeq	r3, r3, r0, lsr #14
   22d64:	andeq	r0, r3, r0, lsl lr
   22d68:	andeq	r1, r3, ip, asr #2
   22d6c:	andeq	r1, r3, r8, lsr #2
   22d70:	strheq	r1, [r3], -r4
   22d74:	andeq	r0, r3, r0, ror sl
   22d78:	andeq	r7, r2, r0, asr #28
   22d7c:	andeq	r0, r3, r0, asr r7
   22d80:	muleq	r3, r4, r9
   22d84:	strdeq	r0, [r3], -ip
   22d88:	andeq	r0, r0, lr, lsr #12
   22d8c:	andeq	r0, r3, ip, lsr #14
   22d90:	andeq	r0, r3, r0, ror r9
   22d94:	ldrdeq	r0, [r3], -r8
   22d98:	andeq	r0, r0, pc, lsr #12
   22d9c:	add	r3, r1, #4
   22da0:	ldr	r1, [pc, #12]	; 22db4 <__flatcc_fb_gen_c_verifier@@Base+0x1e54>
   22da4:	mov	r2, r0
   22da8:	add	r1, pc, r1
   22dac:	mov	r0, r3
   22db0:	b	2c224 <fb_symbol_table_visit@@Base>
   22db4:	andeq	r0, r0, ip, lsr #12
   22db8:	add	r3, r1, #4
   22dbc:	ldr	r1, [pc, #12]	; 22dd0 <__flatcc_fb_gen_c_verifier@@Base+0x1e70>
   22dc0:	mov	r2, r0
   22dc4:	add	r1, pc, r1
   22dc8:	mov	r0, r3
   22dcc:	b	2c224 <fb_symbol_table_visit@@Base>
   22dd0:	andeq	r0, r0, r8, lsl #2
   22dd4:	ldr	r3, [pc, #56]	; 22e14 <__flatcc_fb_gen_c_verifier@@Base+0x1eb4>
   22dd8:	push	{r4, r5, r6, lr}
   22ddc:	add	r3, pc, r3
   22de0:	mov	r4, r1
   22de4:	mov	r2, #8
   22de8:	mov	r5, r0
   22dec:	bl	14110 <qsort@plt>
   22df0:	cmp	r4, #0
   22df4:	pople	{r4, r5, r6, pc}
   22df8:	mov	r3, #0
   22dfc:	ldr	r2, [r5, r3, lsl #3]
   22e00:	str	r3, [r2, #124]	; 0x7c
   22e04:	add	r3, r3, #1
   22e08:	cmp	r4, r3
   22e0c:	bne	22dfc <__flatcc_fb_gen_c_verifier@@Base+0x1e9c>
   22e10:	pop	{r4, r5, r6, pc}
   22e14:	strdeq	r0, [r0], -ip
   22e18:	push	{r4, r5, r6, lr}
   22e1c:	ldr	r5, [r0, #4]
   22e20:	ldr	r4, [r1, #4]
   22e24:	ldr	r0, [r0]
   22e28:	cmp	r5, r4
   22e2c:	movlt	r2, r5
   22e30:	movge	r2, r4
   22e34:	ldr	r1, [r1]
   22e38:	bl	13ff0 <memcmp@plt>
   22e3c:	cmp	r0, #0
   22e40:	subeq	r0, r5, r4
   22e44:	pop	{r4, r5, r6, pc}
   22e48:	ldrh	r3, [r1, #8]
   22e4c:	sub	r3, r3, #3
   22e50:	cmp	r3, #1
   22e54:	bxhi	lr
   22e58:	push	{r4, r5, r6, lr}
   22e5c:	mov	r5, r0
   22e60:	ldr	r0, [r0, #4]
   22e64:	mov	r4, r1
   22e68:	add	r0, r0, #172	; 0xac
   22e6c:	ldr	r1, [r1, #16]
   22e70:	bl	2bb18 <ptr_set_find_item@@Base>
   22e74:	cmp	r0, #0
   22e78:	popeq	{r4, r5, r6, pc}
   22e7c:	ldr	r2, [r4, #4]
   22e80:	ldr	r3, [r5, #8]
   22e84:	ldm	r2, {r0, r1}
   22e88:	add	r2, r3, #16
   22e8c:	stm	r3, {r0, r1, r4}
   22e90:	str	r2, [r5, #8]
   22e94:	pop	{r4, r5, r6, pc}
   22e98:	ldrh	r3, [r1, #8]
   22e9c:	sub	r3, r3, #3
   22ea0:	cmp	r3, #1
   22ea4:	bxhi	lr
   22ea8:	push	{r4, lr}
   22eac:	mov	r4, r0
   22eb0:	ldr	r0, [r0, #4]
   22eb4:	ldr	r1, [r1, #16]
   22eb8:	add	r0, r0, #172	; 0xac
   22ebc:	bl	2bb18 <ptr_set_find_item@@Base>
   22ec0:	cmp	r0, #0
   22ec4:	ldrne	r3, [r4]
   22ec8:	addne	r3, r3, #1
   22ecc:	strne	r3, [r4]
   22ed0:	pop	{r4, pc}
   22ed4:	ldrh	r3, [r1, #8]
   22ed8:	cmp	r3, #4
   22edc:	bxhi	lr
   22ee0:	push	{r4, r5, r6, lr}
   22ee4:	mov	r4, r0
   22ee8:	ldr	r0, [r0, #40]	; 0x28
   22eec:	mov	r5, r1
   22ef0:	add	r0, r0, #172	; 0xac
   22ef4:	ldr	r1, [r1, #16]
   22ef8:	bl	2bb18 <ptr_set_find_item@@Base>
   22efc:	cmp	r0, #0
   22f00:	beq	22fa4 <__flatcc_fb_gen_c_verifier@@Base+0x2044>
   22f04:	ldr	ip, [r4]
   22f08:	cmp	ip, #0
   22f0c:	beq	22f40 <__flatcc_fb_gen_c_verifier@@Base+0x1fe0>
   22f10:	ldr	r3, [r5, #12]
   22f14:	ldr	r3, [r3]
   22f18:	cmp	r3, #0
   22f1c:	beq	22fa8 <__flatcc_fb_gen_c_verifier@@Base+0x2048>
   22f20:	mov	ip, #0
   22f24:	ldr	r2, [r3, #4]
   22f28:	ldr	r3, [r3]
   22f2c:	ldr	r2, [r2, #4]
   22f30:	cmp	r3, #0
   22f34:	add	r2, r2, #1
   22f38:	add	ip, ip, r2
   22f3c:	bne	22f24 <__flatcc_fb_gen_c_verifier@@Base+0x1fc4>
   22f40:	ldr	r3, [r5, #4]
   22f44:	ldr	r1, [r4, #12]
   22f48:	ldrh	r2, [r5, #8]
   22f4c:	ldr	r3, [r3, #4]
   22f50:	add	r3, r3, r1
   22f54:	add	r3, r3, #1
   22f58:	add	ip, r3, ip
   22f5c:	str	ip, [r4, #12]
   22f60:	cmp	r2, #4
   22f64:	addls	pc, pc, r2, lsl #2
   22f68:	b	22fa0 <__flatcc_fb_gen_c_verifier@@Base+0x2040>
   22f6c:	b	22f90 <__flatcc_fb_gen_c_verifier@@Base+0x2030>
   22f70:	b	22f90 <__flatcc_fb_gen_c_verifier@@Base+0x2030>
   22f74:	b	22fa0 <__flatcc_fb_gen_c_verifier@@Base+0x2040>
   22f78:	b	22f80 <__flatcc_fb_gen_c_verifier@@Base+0x2020>
   22f7c:	b	22f80 <__flatcc_fb_gen_c_verifier@@Base+0x2020>
   22f80:	ldr	r3, [r4, #8]
   22f84:	add	r3, r3, #1
   22f88:	str	r3, [r4, #8]
   22f8c:	pop	{r4, r5, r6, pc}
   22f90:	ldr	r3, [r4, #4]
   22f94:	add	r3, r3, #1
   22f98:	str	r3, [r4, #4]
   22f9c:	pop	{r4, r5, r6, pc}
   22fa0:	pop	{r4, r5, r6, pc}
   22fa4:	pop	{r4, r5, r6, pc}
   22fa8:	mov	ip, r3
   22fac:	b	22f40 <__flatcc_fb_gen_c_verifier@@Base+0x1fe0>
   22fb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22fb4:	sub	sp, sp, #260	; 0x104
   22fb8:	add	r6, sp, #24
   22fbc:	add	r8, sp, #52	; 0x34
   22fc0:	mov	r5, #0
   22fc4:	mov	r4, r0
   22fc8:	mov	r0, r1
   22fcc:	mov	r1, r8
   22fd0:	str	r5, [r6, #4]
   22fd4:	add	sl, r0, #4
   22fd8:	str	r5, [sp, #24]
   22fdc:	add	r7, sp, #12
   22fe0:	str	r5, [r6, #8]
   22fe4:	str	r5, [r6, #12]
   22fe8:	str	r5, [r6, #16]
   22fec:	str	r5, [r6, #20]
   22ff0:	str	r5, [r6, #24]
   22ff4:	bl	160b0 <__flatcc_fb_copy_scope@@Base>
   22ff8:	ldr	r1, [pc, #760]	; 232f8 <__flatcc_fb_gen_c_verifier@@Base+0x2398>
   22ffc:	ldr	r3, [r4, #208]	; 0xd0
   23000:	str	r5, [sp, #12]
   23004:	mov	r0, sl
   23008:	str	r5, [r7, #8]
   2300c:	mov	r2, r7
   23010:	add	r1, pc, r1
   23014:	str	r3, [sp, #16]
   23018:	bl	2c224 <fb_symbol_table_visit@@Base>
   2301c:	ldr	r5, [sp, #12]
   23020:	ldr	fp, [pc, #724]	; 232fc <__flatcc_fb_gen_c_verifier@@Base+0x239c>
   23024:	cmp	r5, #0
   23028:	add	fp, pc, fp
   2302c:	beq	23224 <__flatcc_fb_gen_c_verifier@@Base+0x22c4>
   23030:	lsl	r0, r5, #4
   23034:	bl	14038 <malloc@plt>
   23038:	subs	r9, r0, #0
   2303c:	beq	2322c <__flatcc_fb_gen_c_verifier@@Base+0x22cc>
   23040:	ldr	r1, [pc, #696]	; 23300 <__flatcc_fb_gen_c_verifier@@Base+0x23a0>
   23044:	mov	r2, r7
   23048:	mov	r0, sl
   2304c:	add	r1, pc, r1
   23050:	str	r9, [sp, #20]
   23054:	bl	2c224 <fb_symbol_table_visit@@Base>
   23058:	ldr	r3, [pc, #676]	; 23304 <__flatcc_fb_gen_c_verifier@@Base+0x23a4>
   2305c:	mov	r2, #16
   23060:	add	r3, pc, r3
   23064:	ldr	r1, [sp, #12]
   23068:	mov	r0, r9
   2306c:	bl	14110 <qsort@plt>
   23070:	str	r9, [sp, #24]
   23074:	ldr	r1, [pc, #652]	; 23308 <__flatcc_fb_gen_c_verifier@@Base+0x23a8>
   23078:	ldr	r2, [r4, #208]	; 0xd0
   2307c:	add	r1, pc, r1
   23080:	ldr	r0, [pc, #644]	; 2330c <__flatcc_fb_gen_c_verifier@@Base+0x23ac>
   23084:	str	r1, [sp, #28]
   23088:	ldr	r1, [pc, #640]	; 23310 <__flatcc_fb_gen_c_verifier@@Base+0x23b0>
   2308c:	add	r0, pc, r0
   23090:	mov	ip, #3
   23094:	mov	r3, r8
   23098:	ldr	r2, [r2, #160]	; 0xa0
   2309c:	mov	r7, #0
   230a0:	add	r1, pc, r1
   230a4:	str	r0, [sp, #32]
   230a8:	mov	r0, r4
   230ac:	str	ip, [sp, #40]	; 0x28
   230b0:	str	r7, [sp, #36]	; 0x24
   230b4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   230b8:	ldr	r3, [r4, #220]	; 0xdc
   230bc:	ldr	r1, [pc, #592]	; 23314 <__flatcc_fb_gen_c_verifier@@Base+0x23b4>
   230c0:	add	r3, r3, #2
   230c4:	str	r3, [r4, #220]	; 0xdc
   230c8:	add	r1, pc, r1
   230cc:	mov	r0, r4
   230d0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   230d4:	ldr	r3, [r4, #220]	; 0xdc
   230d8:	cmp	r3, r7
   230dc:	beq	2328c <__flatcc_fb_gen_c_verifier@@Base+0x232c>
   230e0:	cmp	r3, #1
   230e4:	streq	r7, [r4, #220]	; 0xdc
   230e8:	beq	2328c <__flatcc_fb_gen_c_verifier@@Base+0x232c>
   230ec:	ldr	r1, [pc, #548]	; 23318 <__flatcc_fb_gen_c_verifier@@Base+0x23b8>
   230f0:	sub	r3, r3, #2
   230f4:	str	r3, [r4, #220]	; 0xdc
   230f8:	add	r1, pc, r1
   230fc:	mov	r0, r4
   23100:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23104:	ldr	r3, [r4, #220]	; 0xdc
   23108:	cmp	r5, #0
   2310c:	add	r3, r3, #1
   23110:	str	r3, [r4, #220]	; 0xdc
   23114:	beq	231dc <__flatcc_fb_gen_c_verifier@@Base+0x227c>
   23118:	ldr	r1, [pc, #508]	; 2331c <__flatcc_fb_gen_c_verifier@@Base+0x23bc>
   2311c:	mov	r0, r4
   23120:	add	r1, pc, r1
   23124:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23128:	ldr	r1, [pc, #496]	; 23320 <__flatcc_fb_gen_c_verifier@@Base+0x23c0>
   2312c:	mov	r0, r4
   23130:	add	r1, pc, r1
   23134:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23138:	ldr	r1, [pc, #484]	; 23324 <__flatcc_fb_gen_c_verifier@@Base+0x23c4>
   2313c:	mov	r0, r4
   23140:	add	r1, pc, r1
   23144:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23148:	ldr	r1, [pc, #472]	; 23328 <__flatcc_fb_gen_c_verifier@@Base+0x23c8>
   2314c:	mov	r0, r4
   23150:	add	r1, pc, r1
   23154:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23158:	ldr	r1, [pc, #460]	; 2332c <__flatcc_fb_gen_c_verifier@@Base+0x23cc>
   2315c:	mov	r0, r4
   23160:	add	r1, pc, r1
   23164:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23168:	sub	r3, r5, #1
   2316c:	mov	r2, r7
   23170:	mov	r1, r6
   23174:	mov	r0, r4
   23178:	str	r7, [sp]
   2317c:	bl	218ec <__flatcc_fb_gen_c_verifier@@Base+0x98c>
   23180:	ldr	r1, [pc, #424]	; 23330 <__flatcc_fb_gen_c_verifier@@Base+0x23d0>
   23184:	mov	r0, r4
   23188:	add	r1, pc, r1
   2318c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23190:	ldr	r3, [r4, #220]	; 0xdc
   23194:	cmp	r3, #0
   23198:	beq	232b0 <__flatcc_fb_gen_c_verifier@@Base+0x2350>
   2319c:	ldr	r1, [pc, #400]	; 23334 <__flatcc_fb_gen_c_verifier@@Base+0x23d4>
   231a0:	sub	r3, r3, #1
   231a4:	str	r3, [r4, #220]	; 0xdc
   231a8:	add	r1, pc, r1
   231ac:	mov	r0, r4
   231b0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   231b4:	ldr	r1, [pc, #380]	; 23338 <__flatcc_fb_gen_c_verifier@@Base+0x23d8>
   231b8:	mov	r0, r4
   231bc:	add	r1, pc, r1
   231c0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   231c4:	ldr	r0, [sp, #24]
   231c8:	cmp	r0, #0
   231cc:	beq	231d4 <__flatcc_fb_gen_c_verifier@@Base+0x2274>
   231d0:	bl	13fcc <free@plt>
   231d4:	add	sp, sp, #260	; 0x104
   231d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   231dc:	ldr	r1, [pc, #344]	; 2333c <__flatcc_fb_gen_c_verifier@@Base+0x23dc>
   231e0:	mov	r0, r4
   231e4:	add	r1, pc, r1
   231e8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   231ec:	ldr	r1, [pc, #332]	; 23340 <__flatcc_fb_gen_c_verifier@@Base+0x23e0>
   231f0:	mov	r0, r4
   231f4:	add	r1, pc, r1
   231f8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   231fc:	ldr	r3, [r4, #220]	; 0xdc
   23200:	cmp	r3, #0
   23204:	beq	232d4 <__flatcc_fb_gen_c_verifier@@Base+0x2374>
   23208:	ldr	r1, [pc, #308]	; 23344 <__flatcc_fb_gen_c_verifier@@Base+0x23e4>
   2320c:	sub	r3, r3, #1
   23210:	str	r3, [r4, #220]	; 0xdc
   23214:	add	r1, pc, r1
   23218:	mov	r0, r4
   2321c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23220:	b	231b4 <__flatcc_fb_gen_c_verifier@@Base+0x2254>
   23224:	str	r5, [sp, #24]
   23228:	b	23074 <__flatcc_fb_gen_c_verifier@@Base+0x2114>
   2322c:	cmp	r5, #0
   23230:	str	r9, [sp, #24]
   23234:	ble	23074 <__flatcc_fb_gen_c_verifier@@Base+0x2114>
   23238:	ldr	r2, [pc, #264]	; 23348 <__flatcc_fb_gen_c_verifier@@Base+0x23e8>
   2323c:	ldr	r3, [pc, #264]	; 2334c <__flatcc_fb_gen_c_verifier@@Base+0x23ec>
   23240:	ldr	r4, [pc, #264]	; 23350 <__flatcc_fb_gen_c_verifier@@Base+0x23f0>
   23244:	ldr	r1, [fp, r2]
   23248:	add	r3, pc, r3
   2324c:	str	r3, [sp]
   23250:	ldr	r0, [r1]
   23254:	ldr	r1, [pc, #248]	; 23354 <__flatcc_fb_gen_c_verifier@@Base+0x23f4>
   23258:	add	r4, pc, r4
   2325c:	mov	r2, r4
   23260:	ldr	r3, [pc, #240]	; 23358 <__flatcc_fb_gen_c_verifier@@Base+0x23f8>
   23264:	add	r1, pc, r1
   23268:	bl	1408c <fprintf@plt>
   2326c:	ldr	r3, [pc, #232]	; 2335c <__flatcc_fb_gen_c_verifier@@Base+0x23fc>
   23270:	ldr	r0, [pc, #232]	; 23360 <__flatcc_fb_gen_c_verifier@@Base+0x2400>
   23274:	add	r3, pc, r3
   23278:	mov	r1, r4
   2327c:	add	r3, r3, #72	; 0x48
   23280:	ldr	r2, [pc, #208]	; 23358 <__flatcc_fb_gen_c_verifier@@Base+0x23f8>
   23284:	add	r0, pc, r0
   23288:	bl	14140 <__assert_fail@plt>
   2328c:	ldr	r3, [pc, #208]	; 23364 <__flatcc_fb_gen_c_verifier@@Base+0x2404>
   23290:	ldr	r1, [pc, #208]	; 23368 <__flatcc_fb_gen_c_verifier@@Base+0x2408>
   23294:	ldr	r0, [pc, #208]	; 2336c <__flatcc_fb_gen_c_verifier@@Base+0x240c>
   23298:	add	r3, pc, r3
   2329c:	mov	r2, #1152	; 0x480
   232a0:	add	r3, r3, #72	; 0x48
   232a4:	add	r1, pc, r1
   232a8:	add	r0, pc, r0
   232ac:	bl	14140 <__assert_fail@plt>
   232b0:	ldr	r3, [pc, #184]	; 23370 <__flatcc_fb_gen_c_verifier@@Base+0x2410>
   232b4:	ldr	r1, [pc, #184]	; 23374 <__flatcc_fb_gen_c_verifier@@Base+0x2414>
   232b8:	ldr	r0, [pc, #184]	; 23378 <__flatcc_fb_gen_c_verifier@@Base+0x2418>
   232bc:	add	r3, pc, r3
   232c0:	ldr	r2, [pc, #180]	; 2337c <__flatcc_fb_gen_c_verifier@@Base+0x241c>
   232c4:	add	r3, r3, #72	; 0x48
   232c8:	add	r1, pc, r1
   232cc:	add	r0, pc, r0
   232d0:	bl	14140 <__assert_fail@plt>
   232d4:	ldr	r3, [pc, #164]	; 23380 <__flatcc_fb_gen_c_verifier@@Base+0x2420>
   232d8:	ldr	r1, [pc, #164]	; 23384 <__flatcc_fb_gen_c_verifier@@Base+0x2424>
   232dc:	ldr	r0, [pc, #164]	; 23388 <__flatcc_fb_gen_c_verifier@@Base+0x2428>
   232e0:	add	r3, pc, r3
   232e4:	ldr	r2, [pc, #160]	; 2338c <__flatcc_fb_gen_c_verifier@@Base+0x242c>
   232e8:	add	r3, r3, #72	; 0x48
   232ec:	add	r1, pc, r1
   232f0:	add	r0, pc, r0
   232f4:	bl	14140 <__assert_fail@plt>
   232f8:			; <UNDEFINED> instruction: 0xfffffe80
   232fc:	ldrdeq	r7, [r4], -r0
   23300:			; <UNDEFINED> instruction: 0xfffffdf4
   23304:			; <UNDEFINED> instruction: 0xfffffdb0
   23308:	andeq	r0, r0, ip, lsr #12
   2330c:			; <UNDEFINED> instruction: 0xffffe370
   23310:	andeq	r0, r3, r8, asr r8
   23314:	andeq	r0, r3, r0, lsr #26
   23318:	andeq	r3, r3, r4, lsr r2
   2331c:	andeq	r0, r3, r0, asr sp
   23320:	andeq	r0, r3, r0, ror #26
   23324:	andeq	r0, r3, r4, ror #26
   23328:	strdeq	r7, [r2], -r0
   2332c:	ldrdeq	r0, [r3], -r4
   23330:	andeq	r0, r3, r8, lsr #22
   23334:	muleq	r3, r0, r5
   23338:	andeq	r7, r2, r4, lsl #19
   2333c:	andeq	r0, r3, r8, lsr ip
   23340:	andeq	r0, r3, ip, asr ip
   23344:	andeq	r0, r3, r4, lsr #10
   23348:	andeq	r0, r0, r0, lsr #1
   2334c:	andeq	r0, r3, r4, ror #22
   23350:	andeq	r0, r3, r8, ror #8
   23354:	andeq	sp, r1, r8, asr ip
   23358:	andeq	r0, r0, r4, ror r4
   2335c:	strdeq	r0, [r3], -ip
   23360:	andeq	r6, r2, r8, lsr r0
   23364:	ldrdeq	r0, [r3], -r8
   23368:	andeq	r0, r3, ip, lsl r4
   2336c:	andeq	r0, r3, r4, lsl #9
   23370:			; <UNDEFINED> instruction: 0x000301b4
   23374:	strdeq	r0, [r3], -r8
   23378:	andeq	r0, r3, r0, ror #8
   2337c:	andeq	r0, r0, lr, lsl #9
   23380:	muleq	r3, r0, r1
   23384:	ldrdeq	r0, [r3], -r4
   23388:	andeq	r0, r3, ip, lsr r4
   2338c:	andeq	r0, r0, r5, lsl #9
   23390:	push	{r4, lr}
   23394:	mov	r4, r0
   23398:	ldr	r0, [r0, #16]
   2339c:	cmp	r0, #0
   233a0:	beq	233a8 <__flatcc_fb_gen_c_verifier@@Base+0x2448>
   233a4:	bl	13fcc <free@plt>
   233a8:	ldr	r0, [r4, #20]
   233ac:	cmp	r0, #0
   233b0:	beq	233b8 <__flatcc_fb_gen_c_verifier@@Base+0x2458>
   233b4:	bl	13fcc <free@plt>
   233b8:	ldr	r0, [r4, #24]
   233bc:	cmp	r0, #0
   233c0:	beq	233c8 <__flatcc_fb_gen_c_verifier@@Base+0x2468>
   233c4:	bl	13fcc <free@plt>
   233c8:	mov	r0, r4
   233cc:	mov	r2, #44	; 0x2c
   233d0:	mov	r1, #0
   233d4:	pop	{r4, lr}
   233d8:	b	140a4 <memset@plt>
   233dc:	ldrh	r3, [r1, #8]
   233e0:	cmp	r3, #4
   233e4:	bxhi	lr
   233e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   233ec:	mov	r6, r0
   233f0:	ldr	r0, [r0, #40]	; 0x28
   233f4:	mov	r7, r1
   233f8:	add	r0, r0, #172	; 0xac
   233fc:	ldr	r1, [r1, #16]
   23400:	bl	2bb18 <ptr_set_find_item@@Base>
   23404:	cmp	r0, #0
   23408:	beq	234dc <__flatcc_fb_gen_c_verifier@@Base+0x257c>
   2340c:	ldr	r3, [r6]
   23410:	ldr	r9, [r6, #36]	; 0x24
   23414:	cmp	r3, #0
   23418:	moveq	r3, r9
   2341c:	beq	23464 <__flatcc_fb_gen_c_verifier@@Base+0x2504>
   23420:	ldr	r3, [r7, #12]
   23424:	ldr	r5, [r3]
   23428:	mov	r3, r9
   2342c:	cmp	r5, #0
   23430:	beq	23464 <__flatcc_fb_gen_c_verifier@@Base+0x2504>
   23434:	mov	r8, #46	; 0x2e
   23438:	ldr	r2, [r5, #4]
   2343c:	mov	r0, r3
   23440:	ldm	r2, {r1, r4}
   23444:	mov	r2, r4
   23448:	bl	13fd8 <memcpy@plt>
   2344c:	add	r4, r0, r4
   23450:	add	r3, r4, #1
   23454:	strb	r8, [r4]
   23458:	ldr	r5, [r5]
   2345c:	cmp	r5, #0
   23460:	bne	23438 <__flatcc_fb_gen_c_verifier@@Base+0x24d8>
   23464:	ldr	r2, [r7, #4]
   23468:	mov	r0, r3
   2346c:	ldm	r2, {r1, r4}
   23470:	mov	r2, r4
   23474:	bl	13fd8 <memcpy@plt>
   23478:	mov	r2, #0
   2347c:	strb	r2, [r0, r4]
   23480:	ldrh	r2, [r7, #8]
   23484:	add	r3, r0, r4
   23488:	add	r3, r3, #1
   2348c:	str	r3, [r6, #36]	; 0x24
   23490:	cmp	r2, #4
   23494:	addls	pc, pc, r2, lsl #2
   23498:	b	234d8 <__flatcc_fb_gen_c_verifier@@Base+0x2578>
   2349c:	b	234c4 <__flatcc_fb_gen_c_verifier@@Base+0x2564>
   234a0:	b	234c4 <__flatcc_fb_gen_c_verifier@@Base+0x2564>
   234a4:	b	234d8 <__flatcc_fb_gen_c_verifier@@Base+0x2578>
   234a8:	b	234b0 <__flatcc_fb_gen_c_verifier@@Base+0x2550>
   234ac:	b	234b0 <__flatcc_fb_gen_c_verifier@@Base+0x2550>
   234b0:	ldr	r3, [r6, #32]
   234b4:	add	r2, r3, #8
   234b8:	stm	r3, {r7, r9}
   234bc:	str	r2, [r6, #32]
   234c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   234c4:	ldr	r3, [r6, #28]
   234c8:	add	r2, r3, #8
   234cc:	stm	r3, {r7, r9}
   234d0:	str	r2, [r6, #28]
   234d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   234d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   234dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   234e0:	ldr	r1, [r1, #4]
   234e4:	ldr	r0, [r0, #4]
   234e8:	b	13fb4 <strcmp@plt>
   234ec:	push	{r4, r5, r6, lr}
   234f0:	mov	r5, r1
   234f4:	sub	sp, sp, #8
   234f8:	ldr	r1, [pc, #360]	; 23668 <__flatcc_fb_gen_c_verifier@@Base+0x2708>
   234fc:	mov	r6, r2
   23500:	add	r1, pc, r1
   23504:	ldr	r2, [sp, #24]
   23508:	mov	r4, r0
   2350c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23510:	ldr	r1, [pc, #340]	; 2366c <__flatcc_fb_gen_c_verifier@@Base+0x270c>
   23514:	mov	r0, r4
   23518:	add	r1, pc, r1
   2351c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23520:	ldr	r3, [r4, #220]	; 0xdc
   23524:	ldr	r0, [pc, #324]	; 23670 <__flatcc_fb_gen_c_verifier@@Base+0x2710>
   23528:	add	r3, r3, #1
   2352c:	str	r3, [r4, #220]	; 0xdc
   23530:	ldr	r3, [r5, #40]	; 0x28
   23534:	add	r0, pc, r0
   23538:	sub	r3, r3, #1
   2353c:	cmp	r3, #8
   23540:	addls	pc, pc, r3, lsl #2
   23544:	b	235dc <__flatcc_fb_gen_c_verifier@@Base+0x267c>
   23548:	b	235c4 <__flatcc_fb_gen_c_verifier@@Base+0x2664>
   2354c:	b	235c4 <__flatcc_fb_gen_c_verifier@@Base+0x2664>
   23550:	b	235c4 <__flatcc_fb_gen_c_verifier@@Base+0x2664>
   23554:	b	235c4 <__flatcc_fb_gen_c_verifier@@Base+0x2664>
   23558:	b	235c4 <__flatcc_fb_gen_c_verifier@@Base+0x2664>
   2355c:	b	2356c <__flatcc_fb_gen_c_verifier@@Base+0x260c>
   23560:	b	2356c <__flatcc_fb_gen_c_verifier@@Base+0x260c>
   23564:	b	2356c <__flatcc_fb_gen_c_verifier@@Base+0x260c>
   23568:	b	2356c <__flatcc_fb_gen_c_verifier@@Base+0x260c>
   2356c:	ldrd	r2, [r6, #48]	; 0x30
   23570:	cmp	r2, #0
   23574:	sbcs	r1, r3, #0
   23578:	blt	23630 <__flatcc_fb_gen_c_verifier@@Base+0x26d0>
   2357c:	ldr	r1, [pc, #240]	; 23674 <__flatcc_fb_gen_c_verifier@@Base+0x2714>
   23580:	mov	r0, r4
   23584:	add	r1, pc, r1
   23588:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2358c:	ldr	r3, [r4, #220]	; 0xdc
   23590:	cmp	r3, #0
   23594:	beq	23644 <__flatcc_fb_gen_c_verifier@@Base+0x26e4>
   23598:	ldr	r1, [pc, #216]	; 23678 <__flatcc_fb_gen_c_verifier@@Base+0x2718>
   2359c:	sub	r3, r3, #1
   235a0:	str	r3, [r4, #220]	; 0xdc
   235a4:	add	r1, pc, r1
   235a8:	mov	r0, r4
   235ac:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   235b0:	ldr	r3, [r4, #220]	; 0xdc
   235b4:	add	r3, r3, #1
   235b8:	str	r3, [r4, #220]	; 0xdc
   235bc:	add	sp, sp, #8
   235c0:	pop	{r4, r5, r6, pc}
   235c4:	ldr	r1, [pc, #176]	; 2367c <__flatcc_fb_gen_c_verifier@@Base+0x271c>
   235c8:	ldrd	r2, [r6, #48]	; 0x30
   235cc:	add	r1, pc, r1
   235d0:	mov	r0, r4
   235d4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   235d8:	b	2358c <__flatcc_fb_gen_c_verifier@@Base+0x262c>
   235dc:	ldr	r2, [pc, #156]	; 23680 <__flatcc_fb_gen_c_verifier@@Base+0x2720>
   235e0:	ldr	r3, [pc, #156]	; 23684 <__flatcc_fb_gen_c_verifier@@Base+0x2724>
   235e4:	ldr	r4, [pc, #156]	; 23688 <__flatcc_fb_gen_c_verifier@@Base+0x2728>
   235e8:	ldr	r1, [r0, r2]
   235ec:	add	r3, pc, r3
   235f0:	str	r3, [sp]
   235f4:	ldr	r0, [r1]
   235f8:	ldr	r1, [pc, #140]	; 2368c <__flatcc_fb_gen_c_verifier@@Base+0x272c>
   235fc:	add	r4, pc, r4
   23600:	mov	r2, r4
   23604:	ldr	r3, [pc, #132]	; 23690 <__flatcc_fb_gen_c_verifier@@Base+0x2730>
   23608:	add	r1, pc, r1
   2360c:	bl	1408c <fprintf@plt>
   23610:	ldr	r3, [pc, #124]	; 23694 <__flatcc_fb_gen_c_verifier@@Base+0x2734>
   23614:	ldr	r0, [pc, #124]	; 23698 <__flatcc_fb_gen_c_verifier@@Base+0x2738>
   23618:	add	r3, pc, r3
   2361c:	mov	r1, r4
   23620:	add	r3, r3, #96	; 0x60
   23624:	ldr	r2, [pc, #100]	; 23690 <__flatcc_fb_gen_c_verifier@@Base+0x2730>
   23628:	add	r0, pc, r0
   2362c:	bl	14140 <__assert_fail@plt>
   23630:	ldr	r1, [pc, #100]	; 2369c <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   23634:	mov	r0, r4
   23638:	add	r1, pc, r1
   2363c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23640:	b	2358c <__flatcc_fb_gen_c_verifier@@Base+0x262c>
   23644:	ldr	r3, [pc, #84]	; 236a0 <__flatcc_fb_gen_c_verifier@@Base+0x2740>
   23648:	ldr	r1, [pc, #84]	; 236a4 <__flatcc_fb_gen_c_verifier@@Base+0x2744>
   2364c:	ldr	r0, [pc, #84]	; 236a8 <__flatcc_fb_gen_c_verifier@@Base+0x2748>
   23650:	add	r3, pc, r3
   23654:	ldr	r2, [pc, #80]	; 236ac <__flatcc_fb_gen_c_verifier@@Base+0x274c>
   23658:	add	r3, r3, #120	; 0x78
   2365c:	add	r1, pc, r1
   23660:	add	r0, pc, r0
   23664:	bl	14140 <__assert_fail@plt>
   23668:			; <UNDEFINED> instruction: 0x000309b0
   2366c:	andeq	r0, r3, r8, ror #19
   23670:	andeq	r7, r4, r4, asr #21
   23674:	muleq	r3, r0, r9
   23678:			; <UNDEFINED> instruction: 0x000306b8
   2367c:	andeq	r0, r3, r8, asr #18
   23680:	andeq	r0, r0, r0, lsr #1
   23684:	andeq	r0, r3, r0, lsl #19
   23688:	andeq	r0, r3, r4, asr #1
   2368c:			; <UNDEFINED> instruction: 0x0001d8b4
   23690:	andeq	r0, r0, r6, asr #5
   23694:	andeq	pc, r2, r8, asr lr	; <UNPREDICTABLE>
   23698:	muleq	r2, r4, ip
   2369c:	andeq	r0, r3, r8, lsl #18
   236a0:	andeq	pc, r2, r0, lsr #28
   236a4:	andeq	r0, r3, r4, rrx
   236a8:	andeq	r0, r3, ip, asr #1
   236ac:	andeq	r0, r0, pc, asr #5
   236b0:	push	{r4, r5, r6, lr}
   236b4:	sub	sp, sp, #224	; 0xe0
   236b8:	ldr	r1, [pc, #244]	; 237b4 <__flatcc_fb_gen_c_verifier@@Base+0x2854>
   236bc:	mov	r6, r2
   236c0:	add	r1, pc, r1
   236c4:	ldr	r2, [sp, #240]	; 0xf0
   236c8:	mov	r4, r0
   236cc:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   236d0:	ldr	r1, [pc, #224]	; 237b8 <__flatcc_fb_gen_c_verifier@@Base+0x2858>
   236d4:	mov	r0, r4
   236d8:	add	r1, pc, r1
   236dc:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   236e0:	ldrh	r2, [r6, #8]
   236e4:	ldr	r3, [r4, #220]	; 0xdc
   236e8:	sub	r2, r2, #3
   236ec:	add	r3, r3, #1
   236f0:	cmp	r2, #1
   236f4:	str	r3, [r4, #220]	; 0xdc
   236f8:	bhi	2376c <__flatcc_fb_gen_c_verifier@@Base+0x280c>
   236fc:	add	r5, sp, #4
   23700:	mov	r2, #220	; 0xdc
   23704:	mov	r1, #0
   23708:	mov	r0, r5
   2370c:	bl	140a4 <memset@plt>
   23710:	mov	r2, r5
   23714:	mov	r1, r6
   23718:	ldr	r0, [r6, #12]
   2371c:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   23720:	ldr	r1, [pc, #148]	; 237bc <__flatcc_fb_gen_c_verifier@@Base+0x285c>
   23724:	mov	r2, r5
   23728:	add	r1, pc, r1
   2372c:	mov	r0, r4
   23730:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23734:	ldr	r3, [r4, #220]	; 0xdc
   23738:	cmp	r3, #0
   2373c:	beq	23790 <__flatcc_fb_gen_c_verifier@@Base+0x2830>
   23740:	ldr	r1, [pc, #120]	; 237c0 <__flatcc_fb_gen_c_verifier@@Base+0x2860>
   23744:	sub	r3, r3, #1
   23748:	str	r3, [r4, #220]	; 0xdc
   2374c:	add	r1, pc, r1
   23750:	mov	r0, r4
   23754:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23758:	ldr	r3, [r4, #220]	; 0xdc
   2375c:	add	r3, r3, #1
   23760:	str	r3, [r4, #220]	; 0xdc
   23764:	add	sp, sp, #224	; 0xe0
   23768:	pop	{r4, r5, r6, pc}
   2376c:	ldr	r3, [pc, #80]	; 237c4 <__flatcc_fb_gen_c_verifier@@Base+0x2864>
   23770:	ldr	r1, [pc, #80]	; 237c8 <__flatcc_fb_gen_c_verifier@@Base+0x2868>
   23774:	ldr	r0, [pc, #80]	; 237cc <__flatcc_fb_gen_c_verifier@@Base+0x286c>
   23778:	add	r3, pc, r3
   2377c:	ldr	r2, [pc, #76]	; 237d0 <__flatcc_fb_gen_c_verifier@@Base+0x2870>
   23780:	add	r3, r3, #136	; 0x88
   23784:	add	r1, pc, r1
   23788:	add	r0, pc, r0
   2378c:	bl	14140 <__assert_fail@plt>
   23790:	ldr	r3, [pc, #60]	; 237d4 <__flatcc_fb_gen_c_verifier@@Base+0x2874>
   23794:	ldr	r1, [pc, #60]	; 237d8 <__flatcc_fb_gen_c_verifier@@Base+0x2878>
   23798:	ldr	r0, [pc, #60]	; 237dc <__flatcc_fb_gen_c_verifier@@Base+0x287c>
   2379c:	add	r3, pc, r3
   237a0:	ldr	r2, [pc, #56]	; 237e0 <__flatcc_fb_gen_c_verifier@@Base+0x2880>
   237a4:	add	r3, r3, #160	; 0xa0
   237a8:	add	r1, pc, r1
   237ac:	add	r0, pc, r0
   237b0:	bl	14140 <__assert_fail@plt>
   237b4:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   237b8:	andeq	r0, r3, r8, lsr #16
   237bc:	andeq	r0, r3, ip, lsr #17
   237c0:	andeq	r0, r3, r0, lsl r5
   237c4:	strdeq	pc, [r2], -r8
   237c8:	andeq	pc, r2, ip, lsr pc	; <UNPREDICTABLE>
   237cc:	andeq	sp, r1, r4, ror r6
   237d0:	ldrdeq	r0, [r0], -r9
   237d4:	ldrdeq	pc, [r2], -r4
   237d8:	andeq	pc, r2, r8, lsl pc	; <UNPREDICTABLE>
   237dc:	andeq	pc, r2, r0, lsl #31
   237e0:	andeq	r0, r0, r6, ror #5
   237e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   237e8:	sub	sp, sp, #540	; 0x21c
   237ec:	mov	r6, r2
   237f0:	mov	r7, r3
   237f4:	add	r2, sp, #316	; 0x13c
   237f8:	add	r3, sp, #112	; 0x70
   237fc:	mov	r5, r1
   23800:	mov	r8, r3
   23804:	str	r2, [sp, #32]
   23808:	mov	r1, #0
   2380c:	mov	r4, r0
   23810:	mov	r0, r2
   23814:	mov	r2, #220	; 0xdc
   23818:	str	r3, [sp, #60]	; 0x3c
   2381c:	bl	140a4 <memset@plt>
   23820:	mov	r1, r8
   23824:	ldr	r0, [r6]
   23828:	bl	160b0 <__flatcc_fb_copy_scope@@Base>
   2382c:	ldrh	r3, [r5]
   23830:	ldr	r1, [pc, #3772]	; 246f4 <__flatcc_fb_gen_c_verifier@@Base+0x3794>
   23834:	mov	r2, r3
   23838:	str	r3, [sp, #16]
   2383c:	ldrh	r3, [r7, #24]
   23840:	add	r1, pc, r1
   23844:	sub	r2, r2, #1
   23848:	cmp	r3, #15
   2384c:	clz	r2, r2
   23850:	movhi	r5, #0
   23854:	lsr	r2, r2, #5
   23858:	str	r2, [sp, #68]	; 0x44
   2385c:	str	r1, [sp, #104]	; 0x68
   23860:	movhi	r2, r5
   23864:	bhi	23880 <__flatcc_fb_gen_c_verifier@@Base+0x2920>
   23868:	ldr	r2, [pc, #3720]	; 246f8 <__flatcc_fb_gen_c_verifier@@Base+0x3798>
   2386c:	mov	r1, #1
   23870:	ands	r2, r2, r1, lsl r3
   23874:	movne	r2, r1
   23878:	moveq	r2, #0
   2387c:	mov	r5, r2
   23880:	sub	r3, r3, #7
   23884:	cmp	r3, #8
   23888:	addls	pc, pc, r3, lsl #2
   2388c:	b	23e18 <__flatcc_fb_gen_c_verifier@@Base+0x2eb8>
   23890:	b	23cc0 <__flatcc_fb_gen_c_verifier@@Base+0x2d60>
   23894:	b	23c88 <__flatcc_fb_gen_c_verifier@@Base+0x2d28>
   23898:	b	238b4 <__flatcc_fb_gen_c_verifier@@Base+0x2954>
   2389c:	b	238b4 <__flatcc_fb_gen_c_verifier@@Base+0x2954>
   238a0:	b	23e18 <__flatcc_fb_gen_c_verifier@@Base+0x2eb8>
   238a4:	b	23e18 <__flatcc_fb_gen_c_verifier@@Base+0x2eb8>
   238a8:	b	23e18 <__flatcc_fb_gen_c_verifier@@Base+0x2eb8>
   238ac:	b	23da4 <__flatcc_fb_gen_c_verifier@@Base+0x2e44>
   238b0:	b	23da4 <__flatcc_fb_gen_c_verifier@@Base+0x2e44>
   238b4:	mov	r3, #0
   238b8:	str	r3, [sp, #24]
   238bc:	mov	r9, r3
   238c0:	str	r3, [sp, #20]
   238c4:	mov	r6, r3
   238c8:	str	r3, [sp, #56]	; 0x38
   238cc:	mov	r3, #1
   238d0:	str	r3, [sp, #40]	; 0x28
   238d4:	mov	r3, #0
   238d8:	str	r3, [sp, #52]	; 0x34
   238dc:	str	r3, [sp, #64]	; 0x40
   238e0:	str	r3, [sp, #44]	; 0x2c
   238e4:	mov	fp, r3
   238e8:	and	r3, r5, #1
   238ec:	str	r3, [sp, #48]	; 0x30
   238f0:	ldr	r3, [sp, #576]	; 0x240
   238f4:	cmp	r3, #0
   238f8:	beq	23d40 <__flatcc_fb_gen_c_verifier@@Base+0x2de0>
   238fc:	ldr	r3, [sp, #48]	; 0x30
   23900:	cmp	r3, #0
   23904:	beq	24658 <__flatcc_fb_gen_c_verifier@@Base+0x36f8>
   23908:	mov	r6, #0
   2390c:	mov	r5, r6
   23910:	mov	r3, #1
   23914:	str	r6, [sp, #84]	; 0x54
   23918:	str	r6, [sp, #100]	; 0x64
   2391c:	str	r3, [sp, #108]	; 0x6c
   23920:	cmp	fp, #1
   23924:	beq	23d84 <__flatcc_fb_gen_c_verifier@@Base+0x2e24>
   23928:	ldr	r3, [pc, #3532]	; 246fc <__flatcc_fb_gen_c_verifier@@Base+0x379c>
   2392c:	ldr	r8, [pc, #3532]	; 24700 <__flatcc_fb_gen_c_verifier@@Base+0x37a0>
   23930:	add	r3, pc, r3
   23934:	str	r3, [sp, #72]	; 0x48
   23938:	ldr	r3, [pc, #3524]	; 24704 <__flatcc_fb_gen_c_verifier@@Base+0x37a4>
   2393c:	add	r8, pc, r8
   23940:	add	r3, pc, r3
   23944:	str	r3, [sp, #76]	; 0x4c
   23948:	ldr	r3, [pc, #3512]	; 24708 <__flatcc_fb_gen_c_verifier@@Base+0x37a8>
   2394c:	cmp	fp, #2
   23950:	add	r3, pc, r3
   23954:	str	r3, [sp, #80]	; 0x50
   23958:	ldr	r3, [pc, #3500]	; 2470c <__flatcc_fb_gen_c_verifier@@Base+0x37ac>
   2395c:	str	r8, [sp, #36]	; 0x24
   23960:	add	r3, pc, r3
   23964:	str	r3, [sp, #88]	; 0x58
   23968:	ldr	r3, [pc, #3488]	; 24710 <__flatcc_fb_gen_c_verifier@@Base+0x37b0>
   2396c:	add	r3, pc, r3
   23970:	str	r3, [sp, #92]	; 0x5c
   23974:	ldr	r3, [pc, #3480]	; 24714 <__flatcc_fb_gen_c_verifier@@Base+0x37b4>
   23978:	add	r3, pc, r3
   2397c:	str	r3, [sp, #96]	; 0x60
   23980:	beq	23b2c <__flatcc_fb_gen_c_verifier@@Base+0x2bcc>
   23984:	ldr	r3, [sp, #576]	; 0x240
   23988:	orr	sl, r6, r9
   2398c:	cmp	r6, #0
   23990:	orr	sl, sl, r3
   23994:	bne	23e38 <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   23998:	cmp	r5, #0
   2399c:	moveq	r6, r5
   239a0:	beq	23a40 <__flatcc_fb_gen_c_verifier@@Base+0x2ae0>
   239a4:	cmp	sl, #0
   239a8:	beq	23ea0 <__flatcc_fb_gen_c_verifier@@Base+0x2f40>
   239ac:	ldrd	r2, [r7, #88]	; 0x58
   239b0:	ldrsh	r5, [r7, #74]	; 0x4a
   239b4:	mvn	r0, #0
   239b8:	orrs	r1, r2, r3
   239bc:	strd	r2, [sp, #24]
   239c0:	mov	r1, #0
   239c4:	beq	239cc <__flatcc_fb_gen_c_verifier@@Base+0x2a6c>
   239c8:	bl	3ee24 <fb_value_set_visit@@Base+0x668>
   239cc:	strd	r0, [sp, #8]
   239d0:	ldr	r1, [pc, #3392]	; 24718 <__flatcc_fb_gen_c_verifier@@Base+0x37b8>
   239d4:	str	r5, [sp]
   239d8:	ldrd	r2, [sp, #24]
   239dc:	add	r1, pc, r1
   239e0:	mov	r0, r4
   239e4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   239e8:	ldr	r1, [pc, #3372]	; 2471c <__flatcc_fb_gen_c_verifier@@Base+0x37bc>
   239ec:	mov	r0, r4
   239f0:	add	r1, pc, r1
   239f4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   239f8:	ldr	r1, [pc, #3360]	; 24720 <__flatcc_fb_gen_c_verifier@@Base+0x37c0>
   239fc:	mov	r0, r4
   23a00:	add	r1, pc, r1
   23a04:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23a08:	ldr	r3, [r4, #220]	; 0xdc
   23a0c:	cmp	r6, #0
   23a10:	add	r3, r3, #1
   23a14:	str	r3, [r4, #220]	; 0xdc
   23a18:	moveq	r5, #1
   23a1c:	bne	23ed4 <__flatcc_fb_gen_c_verifier@@Base+0x2f74>
   23a20:	cmp	sl, #0
   23a24:	moveq	r3, #0
   23a28:	andne	r3, r5, #1
   23a2c:	cmp	r3, #0
   23a30:	beq	23a40 <__flatcc_fb_gen_c_verifier@@Base+0x2ae0>
   23a34:	ldr	r1, [sp, #72]	; 0x48
   23a38:	mov	r0, r4
   23a3c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23a40:	ldr	r3, [sp, #16]
   23a44:	cmp	r3, #1
   23a48:	beq	23bb4 <__flatcc_fb_gen_c_verifier@@Base+0x2c54>
   23a4c:	eor	r3, r5, #1
   23a50:	tst	r3, r9
   23a54:	bne	240b4 <__flatcc_fb_gen_c_verifier@@Base+0x3154>
   23a58:	cmp	r6, #0
   23a5c:	bne	23bd0 <__flatcc_fb_gen_c_verifier@@Base+0x2c70>
   23a60:	cmp	r9, #0
   23a64:	bne	240dc <__flatcc_fb_gen_c_verifier@@Base+0x317c>
   23a68:	ldr	r3, [sp, #40]	; 0x28
   23a6c:	cmp	r3, #0
   23a70:	bne	240f4 <__flatcc_fb_gen_c_verifier@@Base+0x3194>
   23a74:	ldr	r3, [sp, #52]	; 0x34
   23a78:	cmp	r3, #0
   23a7c:	bne	241a0 <__flatcc_fb_gen_c_verifier@@Base+0x3240>
   23a80:	ldr	r3, [sp, #20]
   23a84:	cmp	r3, #0
   23a88:	bne	24274 <__flatcc_fb_gen_c_verifier@@Base+0x3314>
   23a8c:	ldr	r3, [sp, #84]	; 0x54
   23a90:	cmp	r3, #0
   23a94:	beq	241e4 <__flatcc_fb_gen_c_verifier@@Base+0x3284>
   23a98:	ldr	r3, [sp, #100]	; 0x64
   23a9c:	ldrd	r0, [r7, #96]	; 0x60
   23aa0:	cmp	r3, #0
   23aa4:	ldr	r3, [sp, #32]
   23aa8:	ldr	r2, [r7, #112]	; 0x70
   23aac:	str	r3, [sp, #8]
   23ab0:	strd	r0, [sp]
   23ab4:	beq	242e4 <__flatcc_fb_gen_c_verifier@@Base+0x3384>
   23ab8:	ldr	r1, [pc, #3172]	; 24724 <__flatcc_fb_gen_c_verifier@@Base+0x37c4>
   23abc:	ldr	r3, [sp, #20]
   23ac0:	add	r1, pc, r1
   23ac4:	mov	r0, r4
   23ac8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23acc:	cmp	r5, #0
   23ad0:	beq	23b20 <__flatcc_fb_gen_c_verifier@@Base+0x2bc0>
   23ad4:	cmp	sl, #0
   23ad8:	beq	24138 <__flatcc_fb_gen_c_verifier@@Base+0x31d8>
   23adc:	ldr	r1, [pc, #3140]	; 24728 <__flatcc_fb_gen_c_verifier@@Base+0x37c8>
   23ae0:	mov	r0, r4
   23ae4:	add	r1, pc, r1
   23ae8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23aec:	ldr	r3, [r4, #220]	; 0xdc
   23af0:	cmp	r3, #0
   23af4:	beq	241c0 <__flatcc_fb_gen_c_verifier@@Base+0x3260>
   23af8:	ldr	r1, [pc, #3116]	; 2472c <__flatcc_fb_gen_c_verifier@@Base+0x37cc>
   23afc:	sub	r3, r3, #1
   23b00:	add	r1, pc, r1
   23b04:	mov	r0, r4
   23b08:	str	r3, [r4, #220]	; 0xdc
   23b0c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23b10:	ldr	r1, [pc, #3096]	; 24730 <__flatcc_fb_gen_c_verifier@@Base+0x37d0>
   23b14:	mov	r0, r4
   23b18:	add	r1, pc, r1
   23b1c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23b20:	cmp	fp, #1
   23b24:	bne	24020 <__flatcc_fb_gen_c_verifier@@Base+0x30c0>
   23b28:	mov	fp, #2
   23b2c:	ldr	r3, [r4, #220]	; 0xdc
   23b30:	cmp	r3, #0
   23b34:	beq	245e4 <__flatcc_fb_gen_c_verifier@@Base+0x3684>
   23b38:	ldr	r1, [pc, #3060]	; 24734 <__flatcc_fb_gen_c_verifier@@Base+0x37d4>
   23b3c:	sub	r3, r3, #1
   23b40:	str	r3, [r4, #220]	; 0xdc
   23b44:	add	r1, pc, r1
   23b48:	mov	r0, r4
   23b4c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23b50:	ldr	r1, [r7, #104]	; 0x68
   23b54:	ldr	r3, [r4, #220]	; 0xdc
   23b58:	ldr	r2, [sp, #32]
   23b5c:	add	r3, r3, #1
   23b60:	ldr	r0, [r1, #12]
   23b64:	str	r3, [r4, #220]	; 0xdc
   23b68:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   23b6c:	ldr	r3, [r7, #104]	; 0x68
   23b70:	mov	r5, #0
   23b74:	ldr	r1, [pc, #3004]	; 24738 <__flatcc_fb_gen_c_verifier@@Base+0x37d8>
   23b78:	ldrh	r3, [r3, #8]
   23b7c:	add	r1, pc, r1
   23b80:	mov	r0, r4
   23b84:	cmp	r3, r5
   23b88:	ldr	r3, [sp, #20]
   23b8c:	moveq	r3, #1
   23b90:	str	r3, [sp, #20]
   23b94:	ldr	r3, [sp, #576]	; 0x240
   23b98:	movne	r9, #1
   23b9c:	orr	sl, r3, r9
   23ba0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23ba4:	ldr	r3, [sp, #16]
   23ba8:	mov	r6, r5
   23bac:	cmp	r3, #1
   23bb0:	bne	23a4c <__flatcc_fb_gen_c_verifier@@Base+0x2aec>
   23bb4:	ldr	r1, [pc, #2944]	; 2473c <__flatcc_fb_gen_c_verifier@@Base+0x37dc>
   23bb8:	ldrd	r2, [r7, #80]	; 0x50
   23bbc:	add	r1, pc, r1
   23bc0:	mov	r0, r4
   23bc4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23bc8:	cmp	r6, #0
   23bcc:	beq	23a60 <__flatcc_fb_gen_c_verifier@@Base+0x2b00>
   23bd0:	ldr	r1, [pc, #2920]	; 24740 <__flatcc_fb_gen_c_verifier@@Base+0x37e0>
   23bd4:	mov	r2, r8
   23bd8:	add	r1, pc, r1
   23bdc:	mov	r0, r4
   23be0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23be4:	ldr	r1, [pc, #2904]	; 24744 <__flatcc_fb_gen_c_verifier@@Base+0x37e4>
   23be8:	mov	r0, r4
   23bec:	add	r1, pc, r1
   23bf0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23bf4:	ldr	r3, [r4, #220]	; 0xdc
   23bf8:	ldr	r1, [pc, #2888]	; 24748 <__flatcc_fb_gen_c_verifier@@Base+0x37e8>
   23bfc:	add	r3, r3, #1
   23c00:	str	r3, [r4, #220]	; 0xdc
   23c04:	mov	r2, r8
   23c08:	add	r1, pc, r1
   23c0c:	mov	r0, r4
   23c10:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23c14:	ldr	r1, [pc, #2864]	; 2474c <__flatcc_fb_gen_c_verifier@@Base+0x37ec>
   23c18:	mov	r0, r4
   23c1c:	add	r1, pc, r1
   23c20:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23c24:	ldr	r3, [r4, #220]	; 0xdc
   23c28:	cmp	r3, #0
   23c2c:	beq	245c0 <__flatcc_fb_gen_c_verifier@@Base+0x3660>
   23c30:	ldr	r1, [pc, #2840]	; 24750 <__flatcc_fb_gen_c_verifier@@Base+0x37f0>
   23c34:	sub	r3, r3, #1
   23c38:	str	r3, [r4, #220]	; 0xdc
   23c3c:	add	r1, pc, r1
   23c40:	mov	r0, r4
   23c44:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23c48:	ldr	r3, [sp, #68]	; 0x44
   23c4c:	ldr	r2, [sp, #64]	; 0x40
   23c50:	orr	r6, r3, r5
   23c54:	ldr	r3, [sp, #44]	; 0x2c
   23c58:	orr	r3, r3, r2
   23c5c:	orrs	r3, r3, r6
   23c60:	bne	24250 <__flatcc_fb_gen_c_verifier@@Base+0x32f0>
   23c64:	ldrh	r3, [r7, #56]	; 0x38
   23c68:	sub	r3, r3, #3
   23c6c:	cmp	r3, #3
   23c70:	addls	pc, pc, r3, lsl #2
   23c74:	b	2428c <__flatcc_fb_gen_c_verifier@@Base+0x332c>
   23c78:	b	24090 <__flatcc_fb_gen_c_verifier@@Base+0x3130>
   23c7c:	b	24080 <__flatcc_fb_gen_c_verifier@@Base+0x3120>
   23c80:	b	23f98 <__flatcc_fb_gen_c_verifier@@Base+0x3038>
   23c84:	b	23f98 <__flatcc_fb_gen_c_verifier@@Base+0x3038>
   23c88:	ldr	r3, [r7, #16]
   23c8c:	mov	fp, #0
   23c90:	str	fp, [sp, #64]	; 0x40
   23c94:	str	fp, [sp, #44]	; 0x2c
   23c98:	str	r3, [sp, #24]
   23c9c:	mov	r9, #0
   23ca0:	and	r3, r5, #1
   23ca4:	str	r9, [sp, #20]
   23ca8:	str	r9, [sp, #40]	; 0x28
   23cac:	str	r9, [sp, #56]	; 0x38
   23cb0:	str	r9, [sp, #52]	; 0x34
   23cb4:	str	r3, [sp, #48]	; 0x30
   23cb8:	mov	r6, #1
   23cbc:	b	238f0 <__flatcc_fb_gen_c_verifier@@Base+0x2990>
   23cc0:	ldrh	r3, [r7, #72]	; 0x48
   23cc4:	ldr	r1, [r7, #104]	; 0x68
   23cc8:	ldr	r0, [r7, #16]
   23ccc:	adds	fp, r1, #0
   23cd0:	movne	fp, #1
   23cd4:	ands	r1, r3, #3072	; 0xc00
   23cd8:	str	r1, [sp, #52]	; 0x34
   23cdc:	and	r1, r3, #1024	; 0x400
   23ce0:	and	r3, r3, #2048	; 0x800
   23ce4:	str	r0, [sp, #24]
   23ce8:	str	r1, [sp, #44]	; 0x2c
   23cec:	str	r3, [sp, #64]	; 0x40
   23cf0:	beq	23c9c <__flatcc_fb_gen_c_verifier@@Base+0x2d3c>
   23cf4:	ldr	r3, [sp, #24]
   23cf8:	eor	r2, r2, #1
   23cfc:	cmp	r3, #4
   23d00:	orrne	r2, r2, #1
   23d04:	cmp	r2, #0
   23d08:	str	r2, [sp, #48]	; 0x30
   23d0c:	bne	2469c <__flatcc_fb_gen_c_verifier@@Base+0x373c>
   23d10:	ldr	r3, [sp, #576]	; 0x240
   23d14:	ldr	r5, [sp, #48]	; 0x30
   23d18:	mov	r2, #4
   23d1c:	cmp	r3, #0
   23d20:	mov	r9, r5
   23d24:	str	r5, [sp, #20]
   23d28:	str	r5, [sp, #40]	; 0x28
   23d2c:	str	r5, [sp, #56]	; 0x38
   23d30:	str	r2, [sp, #24]
   23d34:	mov	fp, r5
   23d38:	mov	r6, r5
   23d3c:	bne	238fc <__flatcc_fb_gen_c_verifier@@Base+0x299c>
   23d40:	ldr	r3, [sp, #576]	; 0x240
   23d44:	str	r3, [sp, #84]	; 0x54
   23d48:	ldr	r3, [sp, #48]	; 0x30
   23d4c:	ldr	r2, [sp, #84]	; 0x54
   23d50:	ands	r3, r3, r2
   23d54:	str	r3, [sp, #48]	; 0x30
   23d58:	streq	r3, [sp, #108]	; 0x6c
   23d5c:	streq	r3, [sp, #100]	; 0x64
   23d60:	beq	23920 <__flatcc_fb_gen_c_verifier@@Base+0x29c0>
   23d64:	mov	r3, #0
   23d68:	str	r3, [sp, #48]	; 0x30
   23d6c:	str	r3, [sp, #108]	; 0x6c
   23d70:	mov	r5, r3
   23d74:	cmp	fp, #1
   23d78:	mov	r3, #1
   23d7c:	str	r3, [sp, #100]	; 0x64
   23d80:	bne	23928 <__flatcc_fb_gen_c_verifier@@Base+0x29c8>
   23d84:	ldr	r1, [pc, #2504]	; 24754 <__flatcc_fb_gen_c_verifier@@Base+0x37f4>
   23d88:	mov	r0, r4
   23d8c:	add	r1, pc, r1
   23d90:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23d94:	ldr	r3, [r4, #220]	; 0xdc
   23d98:	add	r3, r3, #1
   23d9c:	str	r3, [r4, #220]	; 0xdc
   23da0:	b	23928 <__flatcc_fb_gen_c_verifier@@Base+0x29c8>
   23da4:	ldr	r1, [r7, #16]
   23da8:	ldr	r2, [sp, #32]
   23dac:	ldr	r0, [r1, #12]
   23db0:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   23db4:	ldr	r2, [r7, #16]
   23db8:	ldrh	r3, [r2, #8]
   23dbc:	clz	r1, r3
   23dc0:	lsr	r1, r1, #5
   23dc4:	str	r1, [sp, #20]
   23dc8:	sub	r1, r3, #3
   23dcc:	clz	r1, r1
   23dd0:	lsr	r1, r1, #5
   23dd4:	str	r1, [sp, #56]	; 0x38
   23dd8:	ldr	r1, [sp, #576]	; 0x240
   23ddc:	sub	r9, r3, #1
   23de0:	cmp	r1, #0
   23de4:	cmpeq	r3, #4
   23de8:	clz	r9, r9
   23dec:	moveq	r1, #1
   23df0:	lsr	r9, r9, #5
   23df4:	movne	r1, #0
   23df8:	beq	24500 <__flatcc_fb_gen_c_verifier@@Base+0x35a0>
   23dfc:	cmp	r3, #3
   23e00:	beq	24534 <__flatcc_fb_gen_c_verifier@@Base+0x35d4>
   23e04:	str	r1, [sp, #24]
   23e08:	mov	r6, r1
   23e0c:	str	r1, [sp, #56]	; 0x38
   23e10:	str	r1, [sp, #40]	; 0x28
   23e14:	b	238d4 <__flatcc_fb_gen_c_verifier@@Base+0x2974>
   23e18:	mov	r3, #0
   23e1c:	str	r3, [sp, #24]
   23e20:	mov	r9, r3
   23e24:	str	r3, [sp, #20]
   23e28:	mov	r6, r3
   23e2c:	str	r3, [sp, #56]	; 0x38
   23e30:	str	r3, [sp, #40]	; 0x28
   23e34:	b	238d4 <__flatcc_fb_gen_c_verifier@@Base+0x2974>
   23e38:	ldr	r3, [sp, #24]
   23e3c:	sub	r3, r3, #1
   23e40:	cmp	r3, #10
   23e44:	addls	pc, pc, r3, lsl #2
   23e48:	b	243d0 <__flatcc_fb_gen_c_verifier@@Base+0x3470>
   23e4c:	b	23f74 <__flatcc_fb_gen_c_verifier@@Base+0x3014>
   23e50:	b	244c8 <__flatcc_fb_gen_c_verifier@@Base+0x3568>
   23e54:	b	23eb4 <__flatcc_fb_gen_c_verifier@@Base+0x2f54>
   23e58:	b	244b0 <__flatcc_fb_gen_c_verifier@@Base+0x3550>
   23e5c:	b	23e78 <__flatcc_fb_gen_c_verifier@@Base+0x2f18>
   23e60:	b	24498 <__flatcc_fb_gen_c_verifier@@Base+0x3538>
   23e64:	b	24480 <__flatcc_fb_gen_c_verifier@@Base+0x3520>
   23e68:	b	24468 <__flatcc_fb_gen_c_verifier@@Base+0x3508>
   23e6c:	b	24450 <__flatcc_fb_gen_c_verifier@@Base+0x34f0>
   23e70:	b	2443c <__flatcc_fb_gen_c_verifier@@Base+0x34dc>
   23e74:	b	24428 <__flatcc_fb_gen_c_verifier@@Base+0x34c8>
   23e78:	cmp	r5, #0
   23e7c:	beq	242fc <__flatcc_fb_gen_c_verifier@@Base+0x339c>
   23e80:	ldr	r3, [pc, #2256]	; 24758 <__flatcc_fb_gen_c_verifier@@Base+0x37f8>
   23e84:	ldr	r8, [pc, #2256]	; 2475c <__flatcc_fb_gen_c_verifier@@Base+0x37fc>
   23e88:	add	r3, pc, r3
   23e8c:	cmp	sl, #0
   23e90:	mov	r6, r5
   23e94:	add	r8, pc, r8
   23e98:	str	r3, [sp, #36]	; 0x24
   23e9c:	bne	239ac <__flatcc_fb_gen_c_verifier@@Base+0x2a4c>
   23ea0:	ldr	r1, [pc, #2232]	; 24760 <__flatcc_fb_gen_c_verifier@@Base+0x3800>
   23ea4:	mov	r0, r4
   23ea8:	add	r1, pc, r1
   23eac:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23eb0:	b	239e8 <__flatcc_fb_gen_c_verifier@@Base+0x2a88>
   23eb4:	ldr	r8, [pc, #2216]	; 24764 <__flatcc_fb_gen_c_verifier@@Base+0x3804>
   23eb8:	ldr	r3, [pc, #2216]	; 24768 <__flatcc_fb_gen_c_verifier@@Base+0x3808>
   23ebc:	add	r8, pc, r8
   23ec0:	add	r3, pc, r3
   23ec4:	str	r3, [sp, #36]	; 0x24
   23ec8:	cmp	r5, #0
   23ecc:	bne	23f90 <__flatcc_fb_gen_c_verifier@@Base+0x3030>
   23ed0:	mov	r6, r5
   23ed4:	ldr	r2, [sp, #36]	; 0x24
   23ed8:	ldr	r1, [sp, #76]	; 0x4c
   23edc:	mov	r0, r4
   23ee0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23ee4:	ldr	r1, [sp, #80]	; 0x50
   23ee8:	mov	r0, r4
   23eec:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23ef0:	ldr	r3, [r4, #220]	; 0xdc
   23ef4:	ldr	r2, [sp, #56]	; 0x38
   23ef8:	add	r3, r3, #2
   23efc:	cmp	r2, #0
   23f00:	str	r3, [r4, #220]	; 0xdc
   23f04:	beq	24108 <__flatcc_fb_gen_c_verifier@@Base+0x31a8>
   23f08:	ldr	r1, [sp, #96]	; 0x60
   23f0c:	ldr	r2, [sp, #32]
   23f10:	mov	r0, r4
   23f14:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23f18:	ldr	r2, [r4, #208]	; 0xd0
   23f1c:	ldr	r1, [pc, #2120]	; 2476c <__flatcc_fb_gen_c_verifier@@Base+0x380c>
   23f20:	ldr	r3, [sp, #60]	; 0x3c
   23f24:	add	r1, pc, r1
   23f28:	ldr	r2, [r2, #160]	; 0xa0
   23f2c:	mov	r0, r4
   23f30:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23f34:	ldr	r3, [r4, #208]	; 0xd0
   23f38:	ldr	r1, [pc, #2096]	; 24770 <__flatcc_fb_gen_c_verifier@@Base+0x3810>
   23f3c:	mov	r0, r4
   23f40:	add	r1, pc, r1
   23f44:	ldr	r2, [r3, #160]	; 0xa0
   23f48:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23f4c:	ldr	r3, [r4, #220]	; 0xdc
   23f50:	cmp	r3, #0
   23f54:	beq	2459c <__flatcc_fb_gen_c_verifier@@Base+0x363c>
   23f58:	cmp	r3, #1
   23f5c:	beq	24594 <__flatcc_fb_gen_c_verifier@@Base+0x3634>
   23f60:	sub	r3, r3, #2
   23f64:	mov	r5, r6
   23f68:	str	r3, [r4, #220]	; 0xdc
   23f6c:	mov	r6, #1
   23f70:	b	23a20 <__flatcc_fb_gen_c_verifier@@Base+0x2ac0>
   23f74:	ldr	r3, [pc, #2040]	; 24774 <__flatcc_fb_gen_c_verifier@@Base+0x3814>
   23f78:	ldr	r8, [pc, #2040]	; 24778 <__flatcc_fb_gen_c_verifier@@Base+0x3818>
   23f7c:	add	r3, pc, r3
   23f80:	cmp	r5, #0
   23f84:	str	r3, [sp, #36]	; 0x24
   23f88:	add	r8, pc, r8
   23f8c:	beq	23ed0 <__flatcc_fb_gen_c_verifier@@Base+0x2f70>
   23f90:	mov	r6, r5
   23f94:	b	239a4 <__flatcc_fb_gen_c_verifier@@Base+0x2a44>
   23f98:	ldr	r1, [pc, #2012]	; 2477c <__flatcc_fb_gen_c_verifier@@Base+0x381c>
   23f9c:	ldrd	r2, [r7, #48]	; 0x30
   23fa0:	add	r1, pc, r1
   23fa4:	mov	r0, r4
   23fa8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23fac:	ldr	r3, [r4, #220]	; 0xdc
   23fb0:	add	r3, r3, #1
   23fb4:	str	r3, [r4, #220]	; 0xdc
   23fb8:	ldrd	r0, [r7, #88]	; 0x58
   23fbc:	ldrsh	ip, [r7, #74]	; 0x4a
   23fc0:	ldrd	r2, [r7, #96]	; 0x60
   23fc4:	strd	r0, [sp]
   23fc8:	ldr	r1, [pc, #1968]	; 24780 <__flatcc_fb_gen_c_verifier@@Base+0x3820>
   23fcc:	mov	r0, r4
   23fd0:	add	r1, pc, r1
   23fd4:	str	ip, [sp, #8]
   23fd8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23fdc:	ldr	r1, [pc, #1952]	; 24784 <__flatcc_fb_gen_c_verifier@@Base+0x3824>
   23fe0:	mov	r3, r8
   23fe4:	mov	r2, r4
   23fe8:	add	r1, pc, r1
   23fec:	mov	r0, r4
   23ff0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23ff4:	ldr	r3, [r4, #220]	; 0xdc
   23ff8:	cmp	r3, #0
   23ffc:	beq	24678 <__flatcc_fb_gen_c_verifier@@Base+0x3718>
   24000:	ldr	r1, [pc, #1920]	; 24788 <__flatcc_fb_gen_c_verifier@@Base+0x3828>
   24004:	sub	r3, r3, #1
   24008:	str	r3, [r4, #220]	; 0xdc
   2400c:	add	r1, pc, r1
   24010:	mov	r0, r4
   24014:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24018:	cmp	fp, #1
   2401c:	beq	23b28 <__flatcc_fb_gen_c_verifier@@Base+0x2bc8>
   24020:	cmp	fp, #2
   24024:	beq	2454c <__flatcc_fb_gen_c_verifier@@Base+0x35ec>
   24028:	ldr	r2, [sp, #64]	; 0x40
   2402c:	ldr	r3, [sp, #44]	; 0x2c
   24030:	orr	r3, r3, r2
   24034:	ldr	r2, [sp, #40]	; 0x28
   24038:	orr	r3, r3, r2
   2403c:	ldr	r2, [sp, #20]
   24040:	orr	r3, r3, fp
   24044:	orr	r3, r3, r2
   24048:	orrs	r3, r3, r5
   2404c:	beq	24074 <__flatcc_fb_gen_c_verifier@@Base+0x3114>
   24050:	ldr	r1, [pc, #1844]	; 2478c <__flatcc_fb_gen_c_verifier@@Base+0x382c>
   24054:	mov	r0, r4
   24058:	add	r1, pc, r1
   2405c:	ldrd	r2, [r7, #96]	; 0x60
   24060:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24064:	ldr	r1, [pc, #1828]	; 24790 <__flatcc_fb_gen_c_verifier@@Base+0x3830>
   24068:	mov	r0, r4
   2406c:	add	r1, pc, r1
   24070:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24074:	mov	r0, #0
   24078:	add	sp, sp, #540	; 0x21c
   2407c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24080:	ldr	r1, [pc, #1804]	; 24794 <__flatcc_fb_gen_c_verifier@@Base+0x3834>
   24084:	ldrd	r2, [r7, #48]	; 0x30
   24088:	add	r1, pc, r1
   2408c:	b	23fa4 <__flatcc_fb_gen_c_verifier@@Base+0x3044>
   24090:	ldr	r1, [pc, #1792]	; 24798 <__flatcc_fb_gen_c_verifier@@Base+0x3838>
   24094:	ldrd	r2, [r7, #48]	; 0x30
   24098:	add	r1, pc, r1
   2409c:	mov	r0, r4
   240a0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   240a4:	ldr	r3, [r4, #220]	; 0xdc
   240a8:	add	r3, r3, #1
   240ac:	str	r3, [r4, #220]	; 0xdc
   240b0:	b	23fb8 <__flatcc_fb_gen_c_verifier@@Base+0x3058>
   240b4:	ldrd	r0, [r7, #88]	; 0x58
   240b8:	ldrh	ip, [r7, #74]	; 0x4a
   240bc:	ldrd	r2, [r7, #96]	; 0x60
   240c0:	strd	r0, [sp]
   240c4:	ldr	r1, [pc, #1744]	; 2479c <__flatcc_fb_gen_c_verifier@@Base+0x383c>
   240c8:	str	ip, [sp, #8]
   240cc:	add	r1, pc, r1
   240d0:	mov	r0, r4
   240d4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   240d8:	b	23a58 <__flatcc_fb_gen_c_verifier@@Base+0x2af8>
   240dc:	ldr	r1, [pc, #1724]	; 247a0 <__flatcc_fb_gen_c_verifier@@Base+0x3840>
   240e0:	ldr	r2, [sp, #32]
   240e4:	add	r1, pc, r1
   240e8:	mov	r0, r4
   240ec:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   240f0:	b	23acc <__flatcc_fb_gen_c_verifier@@Base+0x2b6c>
   240f4:	ldr	r1, [pc, #1704]	; 247a4 <__flatcc_fb_gen_c_verifier@@Base+0x3844>
   240f8:	mov	r0, r4
   240fc:	add	r1, pc, r1
   24100:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24104:	b	23acc <__flatcc_fb_gen_c_verifier@@Base+0x2b6c>
   24108:	ldr	r2, [r4, #208]	; 0xd0
   2410c:	ldr	r1, [sp, #88]	; 0x58
   24110:	ldr	r3, [sp, #60]	; 0x3c
   24114:	mov	r0, r4
   24118:	ldr	r2, [r2, #160]	; 0xa0
   2411c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24120:	ldr	r3, [r4, #208]	; 0xd0
   24124:	ldr	r1, [sp, #92]	; 0x5c
   24128:	mov	r0, r4
   2412c:	ldr	r2, [r3, #160]	; 0xa0
   24130:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24134:	b	23f4c <__flatcc_fb_gen_c_verifier@@Base+0x2fec>
   24138:	ldr	r1, [pc, #1640]	; 247a8 <__flatcc_fb_gen_c_verifier@@Base+0x3848>
   2413c:	mov	r0, r4
   24140:	add	r1, pc, r1
   24144:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24148:	ldr	r1, [pc, #1628]	; 247ac <__flatcc_fb_gen_c_verifier@@Base+0x384c>
   2414c:	mov	r0, r4
   24150:	add	r1, pc, r1
   24154:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24158:	ldr	r1, [pc, #1616]	; 247b0 <__flatcc_fb_gen_c_verifier@@Base+0x3850>
   2415c:	mov	r0, r4
   24160:	add	r1, pc, r1
   24164:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24168:	ldr	r3, [r4, #220]	; 0xdc
   2416c:	cmp	r3, #0
   24170:	beq	241c0 <__flatcc_fb_gen_c_verifier@@Base+0x3260>
   24174:	ldr	r1, [pc, #1592]	; 247b4 <__flatcc_fb_gen_c_verifier@@Base+0x3854>
   24178:	sub	r3, r3, #1
   2417c:	mov	r0, r4
   24180:	str	r3, [r4, #220]	; 0xdc
   24184:	add	r1, pc, r1
   24188:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2418c:	ldr	r1, [pc, #1572]	; 247b8 <__flatcc_fb_gen_c_verifier@@Base+0x3858>
   24190:	mov	r0, r4
   24194:	add	r1, pc, r1
   24198:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2419c:	b	23b20 <__flatcc_fb_gen_c_verifier@@Base+0x2bc0>
   241a0:	ldr	r1, [pc, #1556]	; 247bc <__flatcc_fb_gen_c_verifier@@Base+0x385c>
   241a4:	ldr	r3, [sp, #44]	; 0x2c
   241a8:	add	r1, pc, r1
   241ac:	clz	r2, r3
   241b0:	mov	r0, r4
   241b4:	lsr	r2, r2, #5
   241b8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   241bc:	b	23acc <__flatcc_fb_gen_c_verifier@@Base+0x2b6c>
   241c0:	ldr	r3, [pc, #1528]	; 247c0 <__flatcc_fb_gen_c_verifier@@Base+0x3860>
   241c4:	ldr	r1, [pc, #1528]	; 247c4 <__flatcc_fb_gen_c_verifier@@Base+0x3864>
   241c8:	ldr	r0, [pc, #1528]	; 247c8 <__flatcc_fb_gen_c_verifier@@Base+0x3868>
   241cc:	add	r3, pc, r3
   241d0:	ldr	r2, [pc, #1524]	; 247cc <__flatcc_fb_gen_c_verifier@@Base+0x386c>
   241d4:	add	r3, r3, #176	; 0xb0
   241d8:	add	r1, pc, r1
   241dc:	add	r0, pc, r0
   241e0:	bl	14140 <__assert_fail@plt>
   241e4:	ldr	r3, [sp, #48]	; 0x30
   241e8:	cmp	r3, #0
   241ec:	bne	24314 <__flatcc_fb_gen_c_verifier@@Base+0x33b4>
   241f0:	cmp	r5, #0
   241f4:	bne	23ad4 <__flatcc_fb_gen_c_verifier@@Base+0x2b74>
   241f8:	ldr	r2, [pc, #1488]	; 247d0 <__flatcc_fb_gen_c_verifier@@Base+0x3870>
   241fc:	ldr	r1, [sp, #104]	; 0x68
   24200:	ldr	r3, [pc, #1484]	; 247d4 <__flatcc_fb_gen_c_verifier@@Base+0x3874>
   24204:	ldr	r4, [pc, #1484]	; 247d8 <__flatcc_fb_gen_c_verifier@@Base+0x3878>
   24208:	ldr	r1, [r1, r2]
   2420c:	add	r3, pc, r3
   24210:	str	r3, [sp]
   24214:	ldr	r0, [r1]
   24218:	ldr	r1, [pc, #1468]	; 247dc <__flatcc_fb_gen_c_verifier@@Base+0x387c>
   2421c:	add	r4, pc, r4
   24220:	mov	r2, r4
   24224:	mov	r3, #636	; 0x27c
   24228:	add	r1, pc, r1
   2422c:	bl	1408c <fprintf@plt>
   24230:	ldr	r3, [pc, #1448]	; 247e0 <__flatcc_fb_gen_c_verifier@@Base+0x3880>
   24234:	ldr	r0, [pc, #1448]	; 247e4 <__flatcc_fb_gen_c_verifier@@Base+0x3884>
   24238:	add	r3, pc, r3
   2423c:	mov	r1, r4
   24240:	add	r3, r3, #176	; 0xb0
   24244:	mov	r2, #636	; 0x27c
   24248:	add	r0, pc, r0
   2424c:	bl	14140 <__assert_fail@plt>
   24250:	ldr	r1, [pc, #1424]	; 247e8 <__flatcc_fb_gen_c_verifier@@Base+0x3888>
   24254:	mov	r3, r8
   24258:	mov	r2, r4
   2425c:	add	r1, pc, r1
   24260:	mov	r0, r4
   24264:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24268:	cmp	r6, #0
   2426c:	bne	23acc <__flatcc_fb_gen_c_verifier@@Base+0x2b6c>
   24270:	b	23ff4 <__flatcc_fb_gen_c_verifier@@Base+0x3094>
   24274:	ldr	r1, [pc, #1392]	; 247ec <__flatcc_fb_gen_c_verifier@@Base+0x388c>
   24278:	ldr	r2, [sp, #32]
   2427c:	add	r1, pc, r1
   24280:	mov	r0, r4
   24284:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24288:	b	23acc <__flatcc_fb_gen_c_verifier@@Base+0x2b6c>
   2428c:	ldr	r2, [pc, #1340]	; 247d0 <__flatcc_fb_gen_c_verifier@@Base+0x3870>
   24290:	ldr	r1, [sp, #104]	; 0x68
   24294:	ldr	r3, [pc, #1364]	; 247f0 <__flatcc_fb_gen_c_verifier@@Base+0x3890>
   24298:	ldr	r4, [pc, #1364]	; 247f4 <__flatcc_fb_gen_c_verifier@@Base+0x3894>
   2429c:	ldr	r1, [r1, r2]
   242a0:	add	r3, pc, r3
   242a4:	str	r3, [sp]
   242a8:	ldr	r0, [r1]
   242ac:	ldr	r1, [pc, #1348]	; 247f8 <__flatcc_fb_gen_c_verifier@@Base+0x3898>
   242b0:	add	r4, pc, r4
   242b4:	mov	r2, r4
   242b8:	ldr	r3, [pc, #1340]	; 247fc <__flatcc_fb_gen_c_verifier@@Base+0x389c>
   242bc:	add	r1, pc, r1
   242c0:	bl	1408c <fprintf@plt>
   242c4:	ldr	r3, [pc, #1332]	; 24800 <__flatcc_fb_gen_c_verifier@@Base+0x38a0>
   242c8:	ldr	r0, [pc, #1332]	; 24804 <__flatcc_fb_gen_c_verifier@@Base+0x38a4>
   242cc:	add	r3, pc, r3
   242d0:	mov	r1, r4
   242d4:	add	r3, r3, #176	; 0xb0
   242d8:	ldr	r2, [pc, #1308]	; 247fc <__flatcc_fb_gen_c_verifier@@Base+0x389c>
   242dc:	add	r0, pc, r0
   242e0:	bl	14140 <__assert_fail@plt>
   242e4:	ldr	r1, [pc, #1308]	; 24808 <__flatcc_fb_gen_c_verifier@@Base+0x38a8>
   242e8:	ldr	r3, [sp, #100]	; 0x64
   242ec:	add	r1, pc, r1
   242f0:	mov	r0, r4
   242f4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   242f8:	b	23acc <__flatcc_fb_gen_c_verifier@@Base+0x2b6c>
   242fc:	ldr	r3, [pc, #1288]	; 2480c <__flatcc_fb_gen_c_verifier@@Base+0x38ac>
   24300:	ldr	r8, [pc, #1288]	; 24810 <__flatcc_fb_gen_c_verifier@@Base+0x38b0>
   24304:	add	r3, pc, r3
   24308:	add	r8, pc, r8
   2430c:	str	r3, [sp, #36]	; 0x24
   24310:	b	23ed0 <__flatcc_fb_gen_c_verifier@@Base+0x2f70>
   24314:	ldr	r1, [pc, #1272]	; 24814 <__flatcc_fb_gen_c_verifier@@Base+0x38b4>
   24318:	mov	r0, r4
   2431c:	add	r1, pc, r1
   24320:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24324:	ldr	r3, [r4, #220]	; 0xdc
   24328:	ldr	r1, [pc, #1256]	; 24818 <__flatcc_fb_gen_c_verifier@@Base+0x38b8>
   2432c:	add	r3, r3, #2
   24330:	ldr	r2, [sp, #32]
   24334:	str	r3, [r4, #220]	; 0xdc
   24338:	add	r1, pc, r1
   2433c:	mov	r0, r4
   24340:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24344:	ldr	r2, [r4, #208]	; 0xd0
   24348:	ldr	r1, [pc, #1228]	; 2481c <__flatcc_fb_gen_c_verifier@@Base+0x38bc>
   2434c:	ldr	r3, [sp, #60]	; 0x3c
   24350:	add	r1, pc, r1
   24354:	ldr	r2, [r2, #160]	; 0xa0
   24358:	mov	r0, r4
   2435c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24360:	ldr	r3, [r4, #208]	; 0xd0
   24364:	ldr	r1, [pc, #1204]	; 24820 <__flatcc_fb_gen_c_verifier@@Base+0x38c0>
   24368:	mov	r0, r4
   2436c:	ldr	r2, [r3, #160]	; 0xa0
   24370:	add	r1, pc, r1
   24374:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24378:	ldr	r3, [r4, #220]	; 0xdc
   2437c:	cmp	r3, #0
   24380:	beq	24634 <__flatcc_fb_gen_c_verifier@@Base+0x36d4>
   24384:	cmp	r3, #1
   24388:	beq	2462c <__flatcc_fb_gen_c_verifier@@Base+0x36cc>
   2438c:	ldr	r2, [sp, #108]	; 0x6c
   24390:	sub	r3, r3, #2
   24394:	cmp	r2, #0
   24398:	str	r3, [r4, #220]	; 0xdc
   2439c:	ldrd	r0, [r7, #96]	; 0x60
   243a0:	ldr	r2, [r7, #112]	; 0x70
   243a4:	ldr	r3, [sp, #32]
   243a8:	beq	244e0 <__flatcc_fb_gen_c_verifier@@Base+0x3580>
   243ac:	strd	r0, [sp]
   243b0:	ldr	r1, [pc, #1132]	; 24824 <__flatcc_fb_gen_c_verifier@@Base+0x38c4>
   243b4:	str	r3, [sp, #12]
   243b8:	str	r3, [sp, #8]
   243bc:	add	r1, pc, r1
   243c0:	mov	r3, #0
   243c4:	mov	r0, r4
   243c8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   243cc:	b	23acc <__flatcc_fb_gen_c_verifier@@Base+0x2b6c>
   243d0:	ldr	r2, [pc, #1016]	; 247d0 <__flatcc_fb_gen_c_verifier@@Base+0x3870>
   243d4:	ldr	r1, [sp, #104]	; 0x68
   243d8:	ldr	r3, [pc, #1096]	; 24828 <__flatcc_fb_gen_c_verifier@@Base+0x38c8>
   243dc:	ldr	r4, [pc, #1096]	; 2482c <__flatcc_fb_gen_c_verifier@@Base+0x38cc>
   243e0:	ldr	r1, [r1, r2]
   243e4:	add	r3, pc, r3
   243e8:	str	r3, [sp]
   243ec:	ldr	r0, [r1]
   243f0:	ldr	r1, [pc, #1080]	; 24830 <__flatcc_fb_gen_c_verifier@@Base+0x38d0>
   243f4:	add	r4, pc, r4
   243f8:	mov	r2, r4
   243fc:	mov	r3, #96	; 0x60
   24400:	add	r1, pc, r1
   24404:	bl	1408c <fprintf@plt>
   24408:	ldr	r3, [pc, #1060]	; 24834 <__flatcc_fb_gen_c_verifier@@Base+0x38d4>
   2440c:	ldr	r0, [pc, #1060]	; 24838 <__flatcc_fb_gen_c_verifier@@Base+0x38d8>
   24410:	add	r3, pc, r3
   24414:	mov	r1, r4
   24418:	add	r3, r3, #200	; 0xc8
   2441c:	mov	r2, #96	; 0x60
   24420:	add	r0, pc, r0
   24424:	bl	14140 <__assert_fail@plt>
   24428:	ldr	r3, [pc, #1036]	; 2483c <__flatcc_fb_gen_c_verifier@@Base+0x38dc>
   2442c:	add	r3, pc, r3
   24430:	str	r3, [sp, #36]	; 0x24
   24434:	mov	r8, r3
   24438:	b	23ec8 <__flatcc_fb_gen_c_verifier@@Base+0x2f68>
   2443c:	ldr	r3, [pc, #1020]	; 24840 <__flatcc_fb_gen_c_verifier@@Base+0x38e0>
   24440:	add	r3, pc, r3
   24444:	str	r3, [sp, #36]	; 0x24
   24448:	mov	r8, r3
   2444c:	b	23ec8 <__flatcc_fb_gen_c_verifier@@Base+0x2f68>
   24450:	ldr	r3, [pc, #1004]	; 24844 <__flatcc_fb_gen_c_verifier@@Base+0x38e4>
   24454:	ldr	r8, [pc, #1004]	; 24848 <__flatcc_fb_gen_c_verifier@@Base+0x38e8>
   24458:	add	r3, pc, r3
   2445c:	str	r3, [sp, #36]	; 0x24
   24460:	add	r8, pc, r8
   24464:	b	23ec8 <__flatcc_fb_gen_c_verifier@@Base+0x2f68>
   24468:	ldr	r3, [pc, #988]	; 2484c <__flatcc_fb_gen_c_verifier@@Base+0x38ec>
   2446c:	ldr	r8, [pc, #988]	; 24850 <__flatcc_fb_gen_c_verifier@@Base+0x38f0>
   24470:	add	r3, pc, r3
   24474:	str	r3, [sp, #36]	; 0x24
   24478:	add	r8, pc, r8
   2447c:	b	23ec8 <__flatcc_fb_gen_c_verifier@@Base+0x2f68>
   24480:	ldr	r3, [pc, #972]	; 24854 <__flatcc_fb_gen_c_verifier@@Base+0x38f4>
   24484:	ldr	r8, [pc, #972]	; 24858 <__flatcc_fb_gen_c_verifier@@Base+0x38f8>
   24488:	add	r3, pc, r3
   2448c:	str	r3, [sp, #36]	; 0x24
   24490:	add	r8, pc, r8
   24494:	b	23ec8 <__flatcc_fb_gen_c_verifier@@Base+0x2f68>
   24498:	ldr	r3, [pc, #956]	; 2485c <__flatcc_fb_gen_c_verifier@@Base+0x38fc>
   2449c:	ldr	r8, [pc, #956]	; 24860 <__flatcc_fb_gen_c_verifier@@Base+0x3900>
   244a0:	add	r3, pc, r3
   244a4:	str	r3, [sp, #36]	; 0x24
   244a8:	add	r8, pc, r8
   244ac:	b	23ec8 <__flatcc_fb_gen_c_verifier@@Base+0x2f68>
   244b0:	ldr	r3, [pc, #940]	; 24864 <__flatcc_fb_gen_c_verifier@@Base+0x3904>
   244b4:	ldr	r8, [pc, #940]	; 24868 <__flatcc_fb_gen_c_verifier@@Base+0x3908>
   244b8:	add	r3, pc, r3
   244bc:	str	r3, [sp, #36]	; 0x24
   244c0:	add	r8, pc, r8
   244c4:	b	23ec8 <__flatcc_fb_gen_c_verifier@@Base+0x2f68>
   244c8:	ldr	r3, [pc, #924]	; 2486c <__flatcc_fb_gen_c_verifier@@Base+0x390c>
   244cc:	ldr	r8, [pc, #924]	; 24870 <__flatcc_fb_gen_c_verifier@@Base+0x3910>
   244d0:	add	r3, pc, r3
   244d4:	str	r3, [sp, #36]	; 0x24
   244d8:	add	r8, pc, r8
   244dc:	b	23ec8 <__flatcc_fb_gen_c_verifier@@Base+0x2f68>
   244e0:	strd	r0, [sp]
   244e4:	ldr	r1, [pc, #904]	; 24874 <__flatcc_fb_gen_c_verifier@@Base+0x3914>
   244e8:	str	r3, [sp, #8]
   244ec:	add	r1, pc, r1
   244f0:	mov	r3, #0
   244f4:	mov	r0, r4
   244f8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   244fc:	b	23acc <__flatcc_fb_gen_c_verifier@@Base+0x2b6c>
   24500:	mov	r3, #0
   24504:	str	r3, [sp, #40]	; 0x28
   24508:	str	r3, [sp, #24]
   2450c:	str	r3, [sp, #52]	; 0x34
   24510:	str	r3, [sp, #64]	; 0x40
   24514:	str	r3, [sp, #44]	; 0x2c
   24518:	mov	fp, r3
   2451c:	mov	r6, r3
   24520:	and	r3, r5, #1
   24524:	str	r3, [sp, #48]	; 0x30
   24528:	mov	r3, #1
   2452c:	str	r3, [sp, #84]	; 0x54
   24530:	b	23d48 <__flatcc_fb_gen_c_verifier@@Base+0x2de8>
   24534:	ldr	r3, [r2, #40]	; 0x28
   24538:	mov	r6, #1
   2453c:	str	r3, [sp, #24]
   24540:	str	r1, [sp, #40]	; 0x28
   24544:	str	r6, [sp, #56]	; 0x38
   24548:	b	238d4 <__flatcc_fb_gen_c_verifier@@Base+0x2974>
   2454c:	ldr	r1, [pc, #804]	; 24878 <__flatcc_fb_gen_c_verifier@@Base+0x3918>
   24550:	mov	r0, r4
   24554:	add	r1, pc, r1
   24558:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2455c:	ldr	r1, [pc, #792]	; 2487c <__flatcc_fb_gen_c_verifier@@Base+0x391c>
   24560:	mov	r0, r4
   24564:	add	r1, pc, r1
   24568:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2456c:	ldr	r3, [r4, #220]	; 0xdc
   24570:	cmp	r3, #0
   24574:	beq	24608 <__flatcc_fb_gen_c_verifier@@Base+0x36a8>
   24578:	ldr	r1, [pc, #768]	; 24880 <__flatcc_fb_gen_c_verifier@@Base+0x3920>
   2457c:	sub	r3, r3, #1
   24580:	str	r3, [r4, #220]	; 0xdc
   24584:	add	r1, pc, r1
   24588:	mov	r0, r4
   2458c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24590:	b	24028 <__flatcc_fb_gen_c_verifier@@Base+0x30c8>
   24594:	mov	r3, #0
   24598:	str	r3, [r4, #220]	; 0xdc
   2459c:	ldr	r3, [pc, #736]	; 24884 <__flatcc_fb_gen_c_verifier@@Base+0x3924>
   245a0:	ldr	r1, [pc, #736]	; 24888 <__flatcc_fb_gen_c_verifier@@Base+0x3928>
   245a4:	ldr	r0, [pc, #736]	; 2488c <__flatcc_fb_gen_c_verifier@@Base+0x392c>
   245a8:	add	r3, pc, r3
   245ac:	ldr	r2, [pc, #732]	; 24890 <__flatcc_fb_gen_c_verifier@@Base+0x3930>
   245b0:	add	r3, r3, #176	; 0xb0
   245b4:	add	r1, pc, r1
   245b8:	add	r0, pc, r0
   245bc:	bl	14140 <__assert_fail@plt>
   245c0:	ldr	r3, [pc, #716]	; 24894 <__flatcc_fb_gen_c_verifier@@Base+0x3934>
   245c4:	ldr	r1, [pc, #716]	; 24898 <__flatcc_fb_gen_c_verifier@@Base+0x3938>
   245c8:	ldr	r0, [pc, #716]	; 2489c <__flatcc_fb_gen_c_verifier@@Base+0x393c>
   245cc:	add	r3, pc, r3
   245d0:	ldr	r2, [pc, #712]	; 248a0 <__flatcc_fb_gen_c_verifier@@Base+0x3940>
   245d4:	add	r3, r3, #176	; 0xb0
   245d8:	add	r1, pc, r1
   245dc:	add	r0, pc, r0
   245e0:	bl	14140 <__assert_fail@plt>
   245e4:	ldr	r3, [pc, #696]	; 248a4 <__flatcc_fb_gen_c_verifier@@Base+0x3944>
   245e8:	ldr	r1, [pc, #696]	; 248a8 <__flatcc_fb_gen_c_verifier@@Base+0x3948>
   245ec:	ldr	r0, [pc, #696]	; 248ac <__flatcc_fb_gen_c_verifier@@Base+0x394c>
   245f0:	add	r3, pc, r3
   245f4:	ldr	r2, [pc, #692]	; 248b0 <__flatcc_fb_gen_c_verifier@@Base+0x3950>
   245f8:	add	r3, r3, #176	; 0xb0
   245fc:	add	r1, pc, r1
   24600:	add	r0, pc, r0
   24604:	bl	14140 <__assert_fail@plt>
   24608:	ldr	r3, [pc, #676]	; 248b4 <__flatcc_fb_gen_c_verifier@@Base+0x3954>
   2460c:	ldr	r1, [pc, #676]	; 248b8 <__flatcc_fb_gen_c_verifier@@Base+0x3958>
   24610:	ldr	r0, [pc, #676]	; 248bc <__flatcc_fb_gen_c_verifier@@Base+0x395c>
   24614:	add	r3, pc, r3
   24618:	ldr	r2, [pc, #672]	; 248c0 <__flatcc_fb_gen_c_verifier@@Base+0x3960>
   2461c:	add	r3, r3, #176	; 0xb0
   24620:	add	r1, pc, r1
   24624:	add	r0, pc, r0
   24628:	bl	14140 <__assert_fail@plt>
   2462c:	ldr	r3, [sp, #84]	; 0x54
   24630:	str	r3, [r4, #220]	; 0xdc
   24634:	ldr	r3, [pc, #648]	; 248c4 <__flatcc_fb_gen_c_verifier@@Base+0x3964>
   24638:	ldr	r1, [pc, #648]	; 248c8 <__flatcc_fb_gen_c_verifier@@Base+0x3968>
   2463c:	ldr	r0, [pc, #648]	; 248cc <__flatcc_fb_gen_c_verifier@@Base+0x396c>
   24640:	add	r3, pc, r3
   24644:	ldr	r2, [pc, #644]	; 248d0 <__flatcc_fb_gen_c_verifier@@Base+0x3970>
   24648:	add	r3, r3, #176	; 0xb0
   2464c:	add	r1, pc, r1
   24650:	add	r0, pc, r0
   24654:	bl	14140 <__assert_fail@plt>
   24658:	ldr	r3, [sp, #48]	; 0x30
   2465c:	str	r3, [sp, #84]	; 0x54
   24660:	mov	r6, r3
   24664:	str	r3, [sp, #108]	; 0x6c
   24668:	str	r3, [sp, #100]	; 0x64
   2466c:	mov	r3, #1
   24670:	str	r3, [sp, #48]	; 0x30
   24674:	b	23920 <__flatcc_fb_gen_c_verifier@@Base+0x29c0>
   24678:	ldr	r3, [pc, #596]	; 248d4 <__flatcc_fb_gen_c_verifier@@Base+0x3974>
   2467c:	ldr	r1, [pc, #596]	; 248d8 <__flatcc_fb_gen_c_verifier@@Base+0x3978>
   24680:	ldr	r0, [pc, #596]	; 248dc <__flatcc_fb_gen_c_verifier@@Base+0x397c>
   24684:	add	r3, pc, r3
   24688:	ldr	r2, [pc, #592]	; 248e0 <__flatcc_fb_gen_c_verifier@@Base+0x3980>
   2468c:	add	r3, r3, #176	; 0xb0
   24690:	add	r1, pc, r1
   24694:	add	r0, pc, r0
   24698:	bl	14140 <__assert_fail@plt>
   2469c:	ldr	r2, [pc, #300]	; 247d0 <__flatcc_fb_gen_c_verifier@@Base+0x3870>
   246a0:	ldr	r1, [sp, #104]	; 0x68
   246a4:	ldr	r3, [pc, #568]	; 248e4 <__flatcc_fb_gen_c_verifier@@Base+0x3984>
   246a8:	ldr	r4, [pc, #568]	; 248e8 <__flatcc_fb_gen_c_verifier@@Base+0x3988>
   246ac:	ldr	r1, [r1, r2]
   246b0:	add	r3, pc, r3
   246b4:	str	r3, [sp]
   246b8:	ldr	r0, [r1]
   246bc:	ldr	r1, [pc, #552]	; 248ec <__flatcc_fb_gen_c_verifier@@Base+0x398c>
   246c0:	add	r4, pc, r4
   246c4:	mov	r2, r4
   246c8:	ldr	r3, [pc, #544]	; 248f0 <__flatcc_fb_gen_c_verifier@@Base+0x3990>
   246cc:	add	r1, pc, r1
   246d0:	bl	1408c <fprintf@plt>
   246d4:	ldr	r3, [pc, #536]	; 248f4 <__flatcc_fb_gen_c_verifier@@Base+0x3994>
   246d8:	ldr	r0, [pc, #536]	; 248f8 <__flatcc_fb_gen_c_verifier@@Base+0x3998>
   246dc:	add	r3, pc, r3
   246e0:	mov	r1, r4
   246e4:	add	r3, r3, #176	; 0xb0
   246e8:	ldr	r2, [pc, #512]	; 248f0 <__flatcc_fb_gen_c_verifier@@Base+0x3990>
   246ec:	add	r0, pc, r0
   246f0:	bl	14140 <__assert_fail@plt>
   246f4:			; <UNDEFINED> instruction: 0x000477b8
   246f8:	andeq	r8, r0, r0, lsl #5
   246fc:	andeq	r0, r3, r4, asr #18
   24700:	andeq	r0, r3, r0, ror #13
   24704:	andeq	r0, r3, ip, lsl #17
   24708:	andeq	r0, r3, r8, lsl #17
   2470c:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   24710:	andeq	r0, r3, r4, ror #17
   24714:	andeq	r0, r3, r4, lsr #17
   24718:	andeq	r0, r3, r0, asr r7
   2471c:	muleq	r3, r0, r7
   24720:			; <UNDEFINED> instruction: 0x000307bc
   24724:			; <UNDEFINED> instruction: 0x00030bb0
   24728:	strdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   2472c:	andeq	pc, r2, r8, lsr ip	; <UNPREDICTABLE>
   24730:	ldrdeq	r0, [r3], -ip
   24734:	andeq	r0, r3, ip, asr #10
   24738:	andeq	r0, r3, ip, lsr #10
   2473c:	andeq	r0, r3, r0, lsl #14
   24740:	andeq	r0, r3, r4, ror #14
   24744:	andeq	r0, r3, ip, lsl #15
   24748:	andeq	r0, r3, r4, lsl #15
   2474c:	andeq	r0, r3, r8, asr #15
   24750:	strdeq	pc, [r2], -ip
   24754:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   24758:	ldrdeq	ip, [r1], -r4
   2475c:	andeq	r5, r3, r4, ror r6
   24760:	andeq	r0, r3, r4, asr #4
   24764:	andeq	sp, r1, ip, lsl r3
   24768:	muleq	r1, r0, lr
   2476c:	andeq	r0, r3, ip, lsl #6
   24770:	andeq	r0, r3, r0, lsl r3
   24774:			; <UNDEFINED> instruction: 0x0001cdbc
   24778:	andeq	sp, r1, r0, asr #4
   2477c:	andeq	r0, r3, r0, ror r4
   24780:	andeq	r0, r3, ip, lsr r5
   24784:	andeq	r0, r3, r4, ror r5
   24788:	andeq	pc, r2, ip, lsr #14
   2478c:	andeq	r0, r3, r4, lsl r9
   24790:	andeq	r0, r3, r8, asr r8
   24794:	andeq	r0, r3, ip, asr #7
   24798:	andeq	r0, r3, r0, lsl #8
   2479c:	andeq	r0, r3, r0, lsr #4
   247a0:	muleq	r3, r8, r4
   247a4:			; <UNDEFINED> instruction: 0x000304b8
   247a8:	andeq	r0, r3, ip, lsr #14
   247ac:	andeq	r0, r3, r4, ror r7
   247b0:	andeq	r0, r3, r4, ror r7
   247b4:			; <UNDEFINED> instruction: 0x0002f5b4
   247b8:	andeq	r0, r3, ip, lsr #16
   247bc:	andeq	r0, r3, r8, asr #8
   247c0:	andeq	pc, r2, r4, lsr #5
   247c4:	andeq	pc, r2, r8, ror #9
   247c8:	andeq	pc, r2, r0, asr r5	; <UNPREDICTABLE>
   247cc:	andeq	r0, r0, r7, lsl #5
   247d0:	andeq	r0, r0, r0, lsr #1
   247d4:	andeq	r0, r3, ip, lsr #12
   247d8:	andeq	pc, r2, r4, lsr #9
   247dc:	muleq	r1, r4, ip
   247e0:	andeq	pc, r2, r8, lsr r2	; <UNPREDICTABLE>
   247e4:	andeq	r5, r2, r4, ror r0
   247e8:	andeq	r0, r3, r0, lsl #6
   247ec:	andeq	r0, r3, r4, asr #7
   247f0:	andeq	r0, r3, ip, lsr r2
   247f4:	andeq	pc, r2, r0, lsl r4	; <UNPREDICTABLE>
   247f8:	andeq	ip, r1, r0, lsl #24
   247fc:	andeq	r0, r0, lr, asr #4
   24800:	andeq	pc, r2, r4, lsr #3
   24804:	andeq	r4, r2, r0, ror #31
   24808:	andeq	r0, r3, r8, ror #7
   2480c:	andeq	ip, r1, r8, asr sl
   24810:	andeq	r5, r3, r0, lsl #4
   24814:			; <UNDEFINED> instruction: 0x0002febc
   24818:	andeq	pc, r2, r4, ror #29
   2481c:	andeq	pc, r2, r0, ror #29
   24820:	andeq	pc, r2, r0, ror #29
   24824:	andeq	r0, r3, r4, ror r3
   24828:	andeq	ip, r1, r4, ror #21
   2482c:	andeq	ip, r1, r8, ror #20
   24830:			; <UNDEFINED> instruction: 0x0001cabc
   24834:	andeq	pc, r2, r0, rrx
   24838:	muleq	r2, ip, lr
   2483c:	andeq	ip, r1, r0, ror #18
   24840:	andeq	ip, r1, r4, asr r9
   24844:	andeq	ip, r1, ip, lsr #18
   24848:	andeq	ip, r1, r0, lsr #27
   2484c:	andeq	ip, r1, ip, lsl #18
   24850:	andeq	ip, r1, r0, lsl #27
   24854:	andeq	ip, r1, ip, ror #17
   24858:	andeq	ip, r1, r0, ror #26
   2485c:	andeq	ip, r1, ip, asr #17
   24860:	andeq	ip, r1, r0, asr #26
   24864:	andeq	ip, r1, r4, lsr #17
   24868:	andeq	ip, r1, r0, lsr #26
   2486c:	andeq	ip, r1, r4, ror r8
   24870:	strdeq	ip, [r1], -r8
   24874:	ldrdeq	r0, [r3], -r8
   24878:			; <UNDEFINED> instruction: 0x000303bc
   2487c:	andeq	r0, r3, r4, asr #7
   24880:	ldrdeq	r0, [r3], -r4
   24884:	andeq	lr, r2, r8, asr #29
   24888:	andeq	pc, r2, ip, lsl #2
   2488c:	andeq	pc, r2, r4, ror r1	; <UNPREDICTABLE>
   24890:	andeq	r0, r0, fp, lsl r2
   24894:	andeq	lr, r2, r4, lsr #29
   24898:	andeq	pc, r2, r8, ror #1
   2489c:	andeq	pc, r2, r0, asr r1	; <UNPREDICTABLE>
   248a0:	andeq	r0, r0, pc, lsr #4
   248a4:	andeq	lr, r2, r0, lsl #29
   248a8:	andeq	pc, r2, r4, asr #1
   248ac:	andeq	pc, r2, ip, lsr #2
   248b0:	andeq	r0, r0, sl, ror #3
   248b4:	andeq	lr, r2, ip, asr lr
   248b8:	andeq	pc, r2, r0, lsr #1
   248bc:	andeq	pc, r2, r8, lsl #2
   248c0:	muleq	r0, r5, r2
   248c4:	andeq	lr, r2, r0, lsr lr
   248c8:	andeq	pc, r2, r4, ror r0	; <UNPREDICTABLE>
   248cc:	ldrdeq	pc, [r2], -ip
   248d0:	andeq	r0, r0, r3, ror r2
   248d4:	andeq	lr, r2, ip, ror #27
   248d8:	andeq	pc, r2, r0, lsr r0	; <UNPREDICTABLE>
   248dc:	muleq	r2, r8, r0
   248e0:	andeq	r0, r0, sl, asr r2
   248e4:	andeq	pc, r2, r0, ror r9	; <UNPREDICTABLE>
   248e8:	andeq	pc, r2, r0
   248ec:	strdeq	ip, [r1], -r0
   248f0:	ldrdeq	r0, [r0], -r2
   248f4:	muleq	r2, r4, sp
   248f8:	ldrdeq	r4, [r2], -r0
   248fc:	push	{r4, r5, r6, r7, lr}
   24900:	mov	r5, r1
   24904:	sub	sp, sp, #12
   24908:	ldr	r1, [pc, #164]	; 249b4 <__flatcc_fb_gen_c_verifier@@Base+0x3a54>
   2490c:	mov	r6, r2
   24910:	add	r1, pc, r1
   24914:	ldr	r2, [sp, #32]
   24918:	mov	r4, r0
   2491c:	mov	r7, r3
   24920:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24924:	ldr	r1, [pc, #140]	; 249b8 <__flatcc_fb_gen_c_verifier@@Base+0x3a58>
   24928:	mov	r0, r4
   2492c:	add	r1, pc, r1
   24930:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24934:	ldr	r2, [r4, #220]	; 0xdc
   24938:	mov	r3, r6
   2493c:	add	r2, r2, #1
   24940:	str	r7, [sp]
   24944:	add	r1, r5, #8
   24948:	str	r2, [r4, #220]	; 0xdc
   2494c:	mov	r0, r4
   24950:	add	r2, r5, #12
   24954:	bl	237e4 <__flatcc_fb_gen_c_verifier@@Base+0x2884>
   24958:	ldr	r3, [r4, #220]	; 0xdc
   2495c:	cmp	r3, #0
   24960:	beq	24990 <__flatcc_fb_gen_c_verifier@@Base+0x3a30>
   24964:	ldr	r1, [pc, #80]	; 249bc <__flatcc_fb_gen_c_verifier@@Base+0x3a5c>
   24968:	sub	r3, r3, #1
   2496c:	str	r3, [r4, #220]	; 0xdc
   24970:	add	r1, pc, r1
   24974:	mov	r0, r4
   24978:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2497c:	ldr	r3, [r4, #220]	; 0xdc
   24980:	add	r3, r3, #1
   24984:	str	r3, [r4, #220]	; 0xdc
   24988:	add	sp, sp, #12
   2498c:	pop	{r4, r5, r6, r7, pc}
   24990:	ldr	r3, [pc, #40]	; 249c0 <__flatcc_fb_gen_c_verifier@@Base+0x3a60>
   24994:	ldr	r1, [pc, #40]	; 249c4 <__flatcc_fb_gen_c_verifier@@Base+0x3a64>
   24998:	ldr	r0, [pc, #40]	; 249c8 <__flatcc_fb_gen_c_verifier@@Base+0x3a68>
   2499c:	add	r3, pc, r3
   249a0:	ldr	r2, [pc, #36]	; 249cc <__flatcc_fb_gen_c_verifier@@Base+0x3a6c>
   249a4:	add	r3, r3, #220	; 0xdc
   249a8:	add	r1, pc, r1
   249ac:	add	r0, pc, r0
   249b0:	bl	14140 <__assert_fail@plt>
   249b4:	andeq	r0, r3, r0, lsl r1
   249b8:	andeq	r0, r3, r8, lsr r1
   249bc:	andeq	pc, r2, ip, ror #5
   249c0:	ldrdeq	lr, [r2], -r4
   249c4:	andeq	lr, r2, r8, lsl sp
   249c8:	andeq	lr, r2, r0, lsl #27
   249cc:	andeq	r0, r0, r3, lsr #5
   249d0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   249d4:	subs	r5, r0, #0
   249d8:	beq	24b48 <__flatcc_fb_gen_c_verifier@@Base+0x3be8>
   249dc:	mov	r0, #0
   249e0:	mov	r6, r0
   249e4:	mov	r4, r5
   249e8:	b	249fc <__flatcc_fb_gen_c_verifier@@Base+0x3a9c>
   249ec:	add	r6, r6, #1
   249f0:	ldr	r4, [r4]
   249f4:	cmp	r4, #0
   249f8:	beq	24a40 <__flatcc_fb_gen_c_verifier@@Base+0x3ae0>
   249fc:	ldrh	r3, [r4, #72]	; 0x48
   24a00:	tst	r3, #4
   24a04:	bne	249f0 <__flatcc_fb_gen_c_verifier@@Base+0x3a90>
   24a08:	ldrh	r3, [r4, #24]
   24a0c:	sub	r3, r3, #14
   24a10:	cmp	r3, #1
   24a14:	bhi	249ec <__flatcc_fb_gen_c_verifier@@Base+0x3a8c>
   24a18:	ldr	r3, [r4, #16]
   24a1c:	ldrh	r3, [r3, #8]
   24a20:	cmp	r3, #4
   24a24:	bne	249ec <__flatcc_fb_gen_c_verifier@@Base+0x3a8c>
   24a28:	ldr	r3, [r4, #4]
   24a2c:	add	r6, r6, #1
   24a30:	ldr	r3, [r3, #4]
   24a34:	add	r3, r3, #6
   24a38:	add	r0, r0, r3
   24a3c:	b	249ec <__flatcc_fb_gen_c_verifier@@Base+0x3a8c>
   24a40:	cmp	r6, #0
   24a44:	str	r6, [r1]
   24a48:	beq	24b3c <__flatcc_fb_gen_c_verifier@@Base+0x3bdc>
   24a4c:	lsl	r7, r6, #4
   24a50:	add	r0, r0, r7
   24a54:	bl	14038 <malloc@plt>
   24a58:	subs	r8, r0, #0
   24a5c:	beq	24b3c <__flatcc_fb_gen_c_verifier@@Base+0x3bdc>
   24a60:	ldr	r9, [pc, #236]	; 24b54 <__flatcc_fb_gen_c_verifier@@Base+0x3bf4>
   24a64:	add	r7, r8, r7
   24a68:	add	r9, pc, r9
   24a6c:	mov	fp, r8
   24a70:	mov	sl, #1
   24a74:	b	24a88 <__flatcc_fb_gen_c_verifier@@Base+0x3b28>
   24a78:	mov	fp, ip
   24a7c:	ldr	r5, [r5]
   24a80:	cmp	r5, #0
   24a84:	beq	24b1c <__flatcc_fb_gen_c_verifier@@Base+0x3bbc>
   24a88:	ldrh	r3, [r5, #72]	; 0x48
   24a8c:	add	ip, fp, #16
   24a90:	ands	r3, r3, #4
   24a94:	bne	24a7c <__flatcc_fb_gen_c_verifier@@Base+0x3b1c>
   24a98:	ldr	r2, [r5, #4]
   24a9c:	ldrh	r0, [r5, #24]
   24aa0:	ldm	r2, {r1, r2}
   24aa4:	sub	r0, r0, #14
   24aa8:	cmp	r0, #1
   24aac:	stm	fp, {r1, r2, r5}
   24ab0:	str	r3, [fp, #12]
   24ab4:	bhi	24a78 <__flatcc_fb_gen_c_verifier@@Base+0x3b18>
   24ab8:	ldr	r3, [r5, #16]
   24abc:	ldrh	r3, [r3, #8]
   24ac0:	cmp	r3, #4
   24ac4:	bne	24a78 <__flatcc_fb_gen_c_verifier@@Base+0x3b18>
   24ac8:	add	r3, r2, #5
   24acc:	str	r4, [r5, #112]	; 0x70
   24ad0:	mov	r0, r7
   24ad4:	str	r7, [fp, #16]
   24ad8:	str	r3, [fp, #20]
   24adc:	bl	13fd8 <memcpy@plt>
   24ae0:	ldr	r2, [r5, #4]
   24ae4:	ldrh	r3, [r9, #4]
   24ae8:	ldr	r0, [r9]
   24aec:	ldr	r1, [r2, #4]
   24af0:	add	r4, r4, #1
   24af4:	add	r2, r7, r1
   24af8:	str	r0, [r7, r1]
   24afc:	strh	r3, [r2, #4]
   24b00:	str	r5, [fp, #24]
   24b04:	ldr	r5, [r5]
   24b08:	str	sl, [fp, #28]
   24b0c:	cmp	r5, #0
   24b10:	add	r7, r2, #6
   24b14:	add	fp, fp, #32
   24b18:	bne	24a88 <__flatcc_fb_gen_c_verifier@@Base+0x3b28>
   24b1c:	ldr	r3, [pc, #52]	; 24b58 <__flatcc_fb_gen_c_verifier@@Base+0x3bf8>
   24b20:	mov	r1, r6
   24b24:	add	r3, pc, r3
   24b28:	mov	r2, #16
   24b2c:	mov	r0, r8
   24b30:	bl	14110 <qsort@plt>
   24b34:	mov	r0, r8
   24b38:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24b3c:	mov	r8, #0
   24b40:	mov	r0, r8
   24b44:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24b48:	mov	r8, r5
   24b4c:	str	r5, [r1]
   24b50:	b	24b34 <__flatcc_fb_gen_c_verifier@@Base+0x3bd4>
   24b54:	strdeq	r3, [r3], -r0
   24b58:			; <UNDEFINED> instruction: 0xffffe2ec
   24b5c:	ldrh	r2, [r1, #8]
   24b60:	push	{r4, r5, r6, r7, lr}
   24b64:	sub	sp, sp, #268	; 0x10c
   24b68:	add	r5, sp, #16
   24b6c:	sub	r2, r2, #3
   24b70:	ldr	r7, [pc, #804]	; 24e9c <__flatcc_fb_gen_c_verifier@@Base+0x3f3c>
   24b74:	mov	r3, #0
   24b78:	cmp	r2, #1
   24b7c:	str	r3, [r5, #4]
   24b80:	str	r3, [sp, #12]
   24b84:	str	r3, [sp, #16]
   24b88:	add	r7, pc, r7
   24b8c:	str	r3, [r5, #8]
   24b90:	str	r3, [r5, #12]
   24b94:	str	r3, [r5, #16]
   24b98:	str	r3, [r5, #20]
   24b9c:	str	r3, [r5, #24]
   24ba0:	bhi	24e30 <__flatcc_fb_gen_c_verifier@@Base+0x3ed0>
   24ba4:	mov	r6, r1
   24ba8:	mov	r4, r0
   24bac:	add	r1, sp, #12
   24bb0:	ldr	r0, [r6, #20]
   24bb4:	bl	249d0 <__flatcc_fb_gen_c_verifier@@Base+0x3a70>
   24bb8:	cmp	r0, #0
   24bbc:	str	r0, [sp, #16]
   24bc0:	beq	24dac <__flatcc_fb_gen_c_verifier@@Base+0x3e4c>
   24bc4:	ldr	r2, [pc, #724]	; 24ea0 <__flatcc_fb_gen_c_verifier@@Base+0x3f40>
   24bc8:	ldr	r3, [pc, #724]	; 24ea4 <__flatcc_fb_gen_c_verifier@@Base+0x3f44>
   24bcc:	add	r7, sp, #44	; 0x2c
   24bd0:	add	r2, pc, r2
   24bd4:	add	r3, pc, r3
   24bd8:	mov	ip, #2
   24bdc:	str	r2, [sp, #20]
   24be0:	mov	r1, #0
   24be4:	mov	r2, #220	; 0xdc
   24be8:	mov	r0, r7
   24bec:	str	r3, [sp, #24]
   24bf0:	str	ip, [sp, #32]
   24bf4:	str	r6, [sp, #28]
   24bf8:	bl	140a4 <memset@plt>
   24bfc:	mov	r2, r7
   24c00:	mov	r1, r6
   24c04:	ldr	r0, [r6, #12]
   24c08:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   24c0c:	ldr	r1, [pc, #660]	; 24ea8 <__flatcc_fb_gen_c_verifier@@Base+0x3f48>
   24c10:	mov	r2, r7
   24c14:	add	r1, pc, r1
   24c18:	mov	r0, r4
   24c1c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24c20:	ldr	r3, [r4, #220]	; 0xdc
   24c24:	ldr	r1, [pc, #640]	; 24eac <__flatcc_fb_gen_c_verifier@@Base+0x3f4c>
   24c28:	add	r3, r3, #2
   24c2c:	str	r3, [r4, #220]	; 0xdc
   24c30:	add	r1, pc, r1
   24c34:	mov	r0, r4
   24c38:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24c3c:	ldr	r3, [r4, #220]	; 0xdc
   24c40:	cmp	r3, #0
   24c44:	beq	24e0c <__flatcc_fb_gen_c_verifier@@Base+0x3eac>
   24c48:	cmp	r3, #1
   24c4c:	moveq	r3, #0
   24c50:	streq	r3, [r4, #220]	; 0xdc
   24c54:	beq	24e0c <__flatcc_fb_gen_c_verifier@@Base+0x3eac>
   24c58:	ldr	r1, [pc, #592]	; 24eb0 <__flatcc_fb_gen_c_verifier@@Base+0x3f50>
   24c5c:	sub	r3, r3, #2
   24c60:	str	r3, [r4, #220]	; 0xdc
   24c64:	add	r1, pc, r1
   24c68:	mov	r0, r4
   24c6c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24c70:	ldr	r3, [r4, #220]	; 0xdc
   24c74:	ldr	r2, [sp, #12]
   24c78:	add	r3, r3, #1
   24c7c:	cmp	r2, #0
   24c80:	str	r3, [r4, #220]	; 0xdc
   24c84:	beq	24d54 <__flatcc_fb_gen_c_verifier@@Base+0x3df4>
   24c88:	ldr	r1, [pc, #548]	; 24eb4 <__flatcc_fb_gen_c_verifier@@Base+0x3f54>
   24c8c:	mov	r0, r4
   24c90:	add	r1, pc, r1
   24c94:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24c98:	ldr	r1, [pc, #536]	; 24eb8 <__flatcc_fb_gen_c_verifier@@Base+0x3f58>
   24c9c:	mov	r0, r4
   24ca0:	add	r1, pc, r1
   24ca4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24ca8:	ldr	r1, [pc, #524]	; 24ebc <__flatcc_fb_gen_c_verifier@@Base+0x3f5c>
   24cac:	mov	r0, r4
   24cb0:	add	r1, pc, r1
   24cb4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24cb8:	ldr	r1, [pc, #512]	; 24ec0 <__flatcc_fb_gen_c_verifier@@Base+0x3f60>
   24cbc:	mov	r0, r4
   24cc0:	add	r1, pc, r1
   24cc4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24cc8:	ldr	r1, [pc, #500]	; 24ec4 <__flatcc_fb_gen_c_verifier@@Base+0x3f64>
   24ccc:	mov	r0, r4
   24cd0:	add	r1, pc, r1
   24cd4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24cd8:	ldr	r3, [sp, #12]
   24cdc:	mov	r2, #0
   24ce0:	sub	r3, r3, #1
   24ce4:	mov	r1, r5
   24ce8:	str	r2, [sp]
   24cec:	mov	r0, r4
   24cf0:	bl	218ec <__flatcc_fb_gen_c_verifier@@Base+0x98c>
   24cf4:	ldr	r1, [pc, #460]	; 24ec8 <__flatcc_fb_gen_c_verifier@@Base+0x3f68>
   24cf8:	mov	r0, r4
   24cfc:	add	r1, pc, r1
   24d00:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24d04:	ldr	r3, [r4, #220]	; 0xdc
   24d08:	cmp	r3, #0
   24d0c:	beq	24e54 <__flatcc_fb_gen_c_verifier@@Base+0x3ef4>
   24d10:	ldr	r1, [pc, #436]	; 24ecc <__flatcc_fb_gen_c_verifier@@Base+0x3f6c>
   24d14:	sub	r3, r3, #1
   24d18:	str	r3, [r4, #220]	; 0xdc
   24d1c:	add	r1, pc, r1
   24d20:	mov	r0, r4
   24d24:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24d28:	ldr	r1, [pc, #416]	; 24ed0 <__flatcc_fb_gen_c_verifier@@Base+0x3f70>
   24d2c:	mov	r0, r4
   24d30:	add	r1, pc, r1
   24d34:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24d38:	ldr	r0, [sp, #16]
   24d3c:	cmp	r0, #0
   24d40:	beq	24d48 <__flatcc_fb_gen_c_verifier@@Base+0x3de8>
   24d44:	bl	13fcc <free@plt>
   24d48:	mov	r0, #0
   24d4c:	add	sp, sp, #268	; 0x10c
   24d50:	pop	{r4, r5, r6, r7, pc}
   24d54:	ldr	r1, [pc, #376]	; 24ed4 <__flatcc_fb_gen_c_verifier@@Base+0x3f74>
   24d58:	mov	r0, r4
   24d5c:	add	r1, pc, r1
   24d60:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24d64:	ldr	r1, [pc, #364]	; 24ed8 <__flatcc_fb_gen_c_verifier@@Base+0x3f78>
   24d68:	mov	r0, r4
   24d6c:	add	r1, pc, r1
   24d70:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24d74:	ldr	r1, [pc, #352]	; 24edc <__flatcc_fb_gen_c_verifier@@Base+0x3f7c>
   24d78:	mov	r0, r4
   24d7c:	add	r1, pc, r1
   24d80:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24d84:	ldr	r3, [r4, #220]	; 0xdc
   24d88:	cmp	r3, #0
   24d8c:	beq	24e78 <__flatcc_fb_gen_c_verifier@@Base+0x3f18>
   24d90:	ldr	r1, [pc, #328]	; 24ee0 <__flatcc_fb_gen_c_verifier@@Base+0x3f80>
   24d94:	sub	r3, r3, #1
   24d98:	str	r3, [r4, #220]	; 0xdc
   24d9c:	add	r1, pc, r1
   24da0:	mov	r0, r4
   24da4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24da8:	b	24d28 <__flatcc_fb_gen_c_verifier@@Base+0x3dc8>
   24dac:	ldr	r3, [sp, #12]
   24db0:	cmp	r3, #0
   24db4:	ble	24bc4 <__flatcc_fb_gen_c_verifier@@Base+0x3c64>
   24db8:	ldr	r2, [pc, #292]	; 24ee4 <__flatcc_fb_gen_c_verifier@@Base+0x3f84>
   24dbc:	ldr	r3, [pc, #292]	; 24ee8 <__flatcc_fb_gen_c_verifier@@Base+0x3f88>
   24dc0:	ldr	r4, [pc, #292]	; 24eec <__flatcc_fb_gen_c_verifier@@Base+0x3f8c>
   24dc4:	ldr	r1, [r7, r2]
   24dc8:	add	r3, pc, r3
   24dcc:	str	r3, [sp]
   24dd0:	ldr	r0, [r1]
   24dd4:	ldr	r1, [pc, #276]	; 24ef0 <__flatcc_fb_gen_c_verifier@@Base+0x3f90>
   24dd8:	add	r4, pc, r4
   24ddc:	mov	r2, r4
   24de0:	ldr	r3, [pc, #268]	; 24ef4 <__flatcc_fb_gen_c_verifier@@Base+0x3f94>
   24de4:	add	r1, pc, r1
   24de8:	bl	1408c <fprintf@plt>
   24dec:	ldr	r3, [pc, #260]	; 24ef8 <__flatcc_fb_gen_c_verifier@@Base+0x3f98>
   24df0:	ldr	r0, [pc, #260]	; 24efc <__flatcc_fb_gen_c_verifier@@Base+0x3f9c>
   24df4:	add	r3, pc, r3
   24df8:	mov	r1, r4
   24dfc:	add	r3, r3, #236	; 0xec
   24e00:	ldr	r2, [pc, #236]	; 24ef4 <__flatcc_fb_gen_c_verifier@@Base+0x3f94>
   24e04:	add	r0, pc, r0
   24e08:	bl	14140 <__assert_fail@plt>
   24e0c:	ldr	r3, [pc, #236]	; 24f00 <__flatcc_fb_gen_c_verifier@@Base+0x3fa0>
   24e10:	ldr	r1, [pc, #236]	; 24f04 <__flatcc_fb_gen_c_verifier@@Base+0x3fa4>
   24e14:	ldr	r0, [pc, #236]	; 24f08 <__flatcc_fb_gen_c_verifier@@Base+0x3fa8>
   24e18:	add	r3, pc, r3
   24e1c:	ldr	r2, [pc, #232]	; 24f0c <__flatcc_fb_gen_c_verifier@@Base+0x3fac>
   24e20:	add	r3, r3, #236	; 0xec
   24e24:	add	r1, pc, r1
   24e28:	add	r0, pc, r0
   24e2c:	bl	14140 <__assert_fail@plt>
   24e30:	ldr	r3, [pc, #216]	; 24f10 <__flatcc_fb_gen_c_verifier@@Base+0x3fb0>
   24e34:	ldr	r1, [pc, #216]	; 24f14 <__flatcc_fb_gen_c_verifier@@Base+0x3fb4>
   24e38:	ldr	r0, [pc, #216]	; 24f18 <__flatcc_fb_gen_c_verifier@@Base+0x3fb8>
   24e3c:	add	r3, pc, r3
   24e40:	ldr	r2, [pc, #212]	; 24f1c <__flatcc_fb_gen_c_verifier@@Base+0x3fbc>
   24e44:	add	r3, r3, #236	; 0xec
   24e48:	add	r1, pc, r1
   24e4c:	add	r0, pc, r0
   24e50:	bl	14140 <__assert_fail@plt>
   24e54:	ldr	r3, [pc, #196]	; 24f20 <__flatcc_fb_gen_c_verifier@@Base+0x3fc0>
   24e58:	ldr	r1, [pc, #196]	; 24f24 <__flatcc_fb_gen_c_verifier@@Base+0x3fc4>
   24e5c:	ldr	r0, [pc, #196]	; 24f28 <__flatcc_fb_gen_c_verifier@@Base+0x3fc8>
   24e60:	add	r3, pc, r3
   24e64:	ldr	r2, [pc, #192]	; 24f2c <__flatcc_fb_gen_c_verifier@@Base+0x3fcc>
   24e68:	add	r3, r3, #236	; 0xec
   24e6c:	add	r1, pc, r1
   24e70:	add	r0, pc, r0
   24e74:	bl	14140 <__assert_fail@plt>
   24e78:	ldr	r3, [pc, #176]	; 24f30 <__flatcc_fb_gen_c_verifier@@Base+0x3fd0>
   24e7c:	ldr	r1, [pc, #176]	; 24f34 <__flatcc_fb_gen_c_verifier@@Base+0x3fd4>
   24e80:	ldr	r0, [pc, #176]	; 24f38 <__flatcc_fb_gen_c_verifier@@Base+0x3fd8>
   24e84:	add	r3, pc, r3
   24e88:	ldr	r2, [pc, #172]	; 24f3c <__flatcc_fb_gen_c_verifier@@Base+0x3fdc>
   24e8c:	add	r3, r3, #236	; 0xec
   24e90:	add	r1, pc, r1
   24e94:	add	r0, pc, r0
   24e98:	bl	14140 <__assert_fail@plt>
   24e9c:	andeq	r6, r4, r0, ror r4
   24ea0:			; <UNDEFINED> instruction: 0xffffe914
   24ea4:			; <UNDEFINED> instruction: 0xffffc838
   24ea8:	andeq	pc, r2, r4, ror #28
   24eac:	andeq	pc, r2, ip, lsr #29
   24eb0:	andeq	r1, r3, r8, asr #13
   24eb4:	andeq	pc, r2, r0, ror #3
   24eb8:	strdeq	pc, [r2], -r0
   24ebc:	strdeq	pc, [r2], -r4
   24ec0:	andeq	r5, r2, r0, lsl #29
   24ec4:	andeq	lr, r2, r4, ror #22
   24ec8:			; <UNDEFINED> instruction: 0x0002efb4
   24ecc:	andeq	lr, r2, ip, lsl sl
   24ed0:	andeq	r5, r2, r0, lsl lr
   24ed4:			; <UNDEFINED> instruction: 0x0002fdb4
   24ed8:	andeq	pc, r2, r0, asr #27
   24edc:	ldrdeq	pc, [r2], -r4
   24ee0:	muleq	r2, ip, r9
   24ee4:	andeq	r0, r0, r0, lsr #1
   24ee8:	andeq	lr, r2, r4, ror #31
   24eec:	andeq	lr, r2, r8, ror #17
   24ef0:	ldrdeq	ip, [r1], -r8
   24ef4:	andeq	r0, r0, r1, ror #9
   24ef8:	andeq	lr, r2, ip, ror r6
   24efc:			; <UNDEFINED> instruction: 0x000244b8
   24f00:	andeq	lr, r2, r8, asr r6
   24f04:	muleq	r2, ip, r8
   24f08:	andeq	lr, r2, r4, lsl #18
   24f0c:	andeq	r0, r0, pc, ror #9
   24f10:	andeq	lr, r2, r4, lsr r6
   24f14:	andeq	lr, r2, r8, ror r8
   24f18:			; <UNDEFINED> instruction: 0x0001bfb0
   24f1c:	ldrdeq	r0, [r0], -lr
   24f20:	andeq	lr, r2, r0, lsl r6
   24f24:	andeq	lr, r2, r4, asr r8
   24f28:			; <UNDEFINED> instruction: 0x0002e8bc
   24f2c:	strdeq	r0, [r0], -lr
   24f30:	andeq	lr, r2, ip, ror #11
   24f34:	andeq	lr, r2, r0, lsr r8
   24f38:	muleq	r2, r8, r8
   24f3c:	strdeq	r0, [r0], -r5

00024f40 <__flatcc_fb_gen_c_json_parser@@Base>:
   24f40:	ldr	r3, [r0, #208]	; 0xd0
   24f44:	ldr	r2, [pc, #3964]	; 25ec8 <__flatcc_fb_gen_c_json_parser@@Base+0xf88>
   24f48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24f4c:	sub	sp, sp, #300	; 0x12c
   24f50:	ldr	r1, [pc, #3956]	; 25ecc <__flatcc_fb_gen_c_json_parser@@Base+0xf8c>
   24f54:	mov	r4, r0
   24f58:	add	r2, pc, r2
   24f5c:	add	r1, pc, r1
   24f60:	mov	r6, r2
   24f64:	str	r2, [sp, #36]	; 0x24
   24f68:	ldr	r2, [r3, #164]	; 0xa4
   24f6c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24f70:	ldr	r3, [r4, #208]	; 0xd0
   24f74:	ldr	r5, [pc, #3924]	; 25ed0 <__flatcc_fb_gen_c_json_parser@@Base+0xf90>
   24f78:	ldr	r1, [pc, #3924]	; 25ed4 <__flatcc_fb_gen_c_json_parser@@Base+0xf94>
   24f7c:	ldr	r2, [r3, #164]	; 0xa4
   24f80:	add	r5, pc, r5
   24f84:	mov	r0, r4
   24f88:	add	r1, pc, r1
   24f8c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24f90:	mov	r0, r4
   24f94:	mov	r1, r5
   24f98:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24f9c:	ldr	r1, [pc, #3892]	; 25ed8 <__flatcc_fb_gen_c_json_parser@@Base+0xf98>
   24fa0:	mov	r0, r4
   24fa4:	add	r1, pc, r1
   24fa8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24fac:	mov	r1, r5
   24fb0:	mov	r0, r4
   24fb4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24fb8:	ldr	r1, [pc, #3868]	; 25edc <__flatcc_fb_gen_c_json_parser@@Base+0xf9c>
   24fbc:	mov	r0, r4
   24fc0:	add	r1, pc, r1
   24fc4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24fc8:	ldr	r2, [pc, #3856]	; 25ee0 <__flatcc_fb_gen_c_json_parser@@Base+0xfa0>
   24fcc:	ldr	r1, [pc, #3856]	; 25ee4 <__flatcc_fb_gen_c_json_parser@@Base+0xfa4>
   24fd0:	mov	r0, r4
   24fd4:	add	r2, pc, r2
   24fd8:	add	r1, pc, r1
   24fdc:	bl	15f70 <__flatcc_fb_gen_c_includes@@Base>
   24fe0:	ldr	r3, [r4, #212]	; 0xd4
   24fe4:	ldr	r3, [r3, #140]	; 0x8c
   24fe8:	cmp	r3, #0
   24fec:	beq	25008 <__flatcc_fb_gen_c_json_parser@@Base+0xc8>
   24ff0:	ldr	r0, [pc, #3824]	; 25ee8 <__flatcc_fb_gen_c_json_parser@@Base+0xfa8>
   24ff4:	ldr	r3, [r4, #204]	; 0xcc
   24ff8:	mov	r2, #36	; 0x24
   24ffc:	mov	r1, #1
   25000:	add	r0, pc, r0
   25004:	bl	14014 <fwrite@plt>
   25008:	ldr	r8, [pc, #3804]	; 25eec <__flatcc_fb_gen_c_json_parser@@Base+0xfac>
   2500c:	mov	r0, r4
   25010:	add	r8, pc, r8
   25014:	mov	r1, r8
   25018:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2501c:	ldr	r6, [r4, #208]	; 0xd0
   25020:	add	r5, sp, #76	; 0x4c
   25024:	mov	r0, r5
   25028:	ldr	r7, [r6, #52]	; 0x34
   2502c:	mov	r2, #220	; 0xdc
   25030:	mov	r1, #0
   25034:	bl	140a4 <memset@plt>
   25038:	cmp	r7, #0
   2503c:	beq	2504c <__flatcc_fb_gen_c_json_parser@@Base+0x10c>
   25040:	ldrh	r3, [r7, #8]
   25044:	cmp	r3, #1
   25048:	bls	26934 <__flatcc_fb_gen_c_json_parser@@Base+0x19f4>
   2504c:	ldr	r7, [r6, #40]	; 0x28
   25050:	cmp	r7, #0
   25054:	beq	2514c <__flatcc_fb_gen_c_json_parser@@Base+0x20c>
   25058:	ldr	r3, [pc, #3728]	; 25ef0 <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   2505c:	ldr	r6, [pc, #3728]	; 25ef4 <__flatcc_fb_gen_c_json_parser@@Base+0xfb4>
   25060:	add	r3, pc, r3
   25064:	add	r6, pc, r6
   25068:	ldr	fp, [pc, #3720]	; 25ef8 <__flatcc_fb_gen_c_json_parser@@Base+0xfb8>
   2506c:	ldr	sl, [pc, #3720]	; 25efc <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   25070:	ldr	r9, [pc, #3720]	; 25f00 <__flatcc_fb_gen_c_json_parser@@Base+0xfc0>
   25074:	ldr	r8, [pc, #3720]	; 25f04 <__flatcc_fb_gen_c_json_parser@@Base+0xfc4>
   25078:	str	r3, [sp, #8]
   2507c:	mov	r3, r6
   25080:	add	fp, pc, fp
   25084:	mov	r6, r7
   25088:	add	sl, pc, sl
   2508c:	add	r9, pc, r9
   25090:	add	r8, pc, r8
   25094:	mov	r7, r3
   25098:	ldrh	r2, [r6, #8]
   2509c:	cmp	r2, #4
   250a0:	addls	pc, pc, r2, lsl #2
   250a4:	b	2513c <__flatcc_fb_gen_c_json_parser@@Base+0x1fc>
   250a8:	b	252fc <__flatcc_fb_gen_c_json_parser@@Base+0x3bc>
   250ac:	b	2524c <__flatcc_fb_gen_c_json_parser@@Base+0x30c>
   250b0:	b	2513c <__flatcc_fb_gen_c_json_parser@@Base+0x1fc>
   250b4:	b	25280 <__flatcc_fb_gen_c_json_parser@@Base+0x340>
   250b8:	b	250bc <__flatcc_fb_gen_c_json_parser@@Base+0x17c>
   250bc:	mov	r2, r5
   250c0:	mov	r1, r6
   250c4:	ldr	r0, [r6, #12]
   250c8:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   250cc:	mov	r2, r5
   250d0:	mov	r1, r7
   250d4:	mov	r0, r4
   250d8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   250dc:	ldr	r1, [pc, #3620]	; 25f08 <__flatcc_fb_gen_c_json_parser@@Base+0xfc8>
   250e0:	mov	r2, r5
   250e4:	add	r1, pc, r1
   250e8:	mov	r0, r4
   250ec:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   250f0:	ldr	r1, [pc, #3604]	; 25f0c <__flatcc_fb_gen_c_json_parser@@Base+0xfcc>
   250f4:	mov	r2, r5
   250f8:	add	r1, pc, r1
   250fc:	mov	r0, r4
   25100:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25104:	ldr	r2, [r4, #220]	; 0xdc
   25108:	ldr	r1, [pc, #3584]	; 25f10 <__flatcc_fb_gen_c_json_parser@@Base+0xfd0>
   2510c:	add	r2, r2, #2
   25110:	str	r2, [r4, #220]	; 0xdc
   25114:	add	r1, pc, r1
   25118:	mov	r0, r4
   2511c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25120:	ldr	r2, [r4, #220]	; 0xdc
   25124:	cmp	r2, #0
   25128:	beq	26ae8 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba8>
   2512c:	cmp	r2, #1
   25130:	beq	26ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba0>
   25134:	sub	r2, r2, #2
   25138:	str	r2, [r4, #220]	; 0xdc
   2513c:	ldr	r6, [r6]
   25140:	cmp	r6, #0
   25144:	bne	25098 <__flatcc_fb_gen_c_json_parser@@Base+0x158>
   25148:	ldr	r6, [r4, #208]	; 0xd0
   2514c:	ldr	r1, [pc, #3520]	; 25f14 <__flatcc_fb_gen_c_json_parser@@Base+0xfd4>
   25150:	ldr	r0, [r6, #60]	; 0x3c
   25154:	mov	r2, r4
   25158:	add	r1, pc, r1
   2515c:	bl	2d17c <fb_scope_table_visit@@Base>
   25160:	ldr	r3, [r4, #208]	; 0xd0
   25164:	ldr	r1, [pc, #3500]	; 25f18 <__flatcc_fb_gen_c_json_parser@@Base+0xfd8>
   25168:	mov	r0, r4
   2516c:	ldr	r2, [r3, #160]	; 0xa0
   25170:	add	r1, pc, r1
   25174:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25178:	ldr	r3, [r4, #220]	; 0xdc
   2517c:	ldr	r1, [pc, #3480]	; 25f1c <__flatcc_fb_gen_c_json_parser@@Base+0xfdc>
   25180:	add	r3, r3, #2
   25184:	str	r3, [r4, #220]	; 0xdc
   25188:	add	r1, pc, r1
   2518c:	mov	r0, r4
   25190:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25194:	ldr	r3, [r4, #220]	; 0xdc
   25198:	cmp	r3, #0
   2519c:	beq	26e10 <__flatcc_fb_gen_c_json_parser@@Base+0x1ed0>
   251a0:	cmp	r3, #1
   251a4:	moveq	r3, #0
   251a8:	streq	r3, [r4, #220]	; 0xdc
   251ac:	beq	26e10 <__flatcc_fb_gen_c_json_parser@@Base+0x1ed0>
   251b0:	ldr	r1, [pc, #3432]	; 25f20 <__flatcc_fb_gen_c_json_parser@@Base+0xfe0>
   251b4:	sub	r3, r3, #2
   251b8:	str	r3, [r4, #220]	; 0xdc
   251bc:	add	r1, pc, r1
   251c0:	mov	r0, r4
   251c4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   251c8:	ldr	r3, [r4, #208]	; 0xd0
   251cc:	ldr	fp, [r3, #40]	; 0x28
   251d0:	cmp	fp, #0
   251d4:	addeq	r9, sp, #48	; 0x30
   251d8:	beq	25354 <__flatcc_fb_gen_c_json_parser@@Base+0x414>
   251dc:	ldr	r3, [pc, #3392]	; 25f24 <__flatcc_fb_gen_c_json_parser@@Base+0xfe4>
   251e0:	add	r9, sp, #48	; 0x30
   251e4:	add	r3, pc, r3
   251e8:	str	r3, [sp, #12]
   251ec:	ldr	r3, [pc, #3380]	; 25f28 <__flatcc_fb_gen_c_json_parser@@Base+0xfe8>
   251f0:	add	r3, pc, r3
   251f4:	str	r3, [sp, #16]
   251f8:	ldr	r3, [pc, #3372]	; 25f2c <__flatcc_fb_gen_c_json_parser@@Base+0xfec>
   251fc:	add	r3, pc, r3
   25200:	str	r3, [sp, #20]
   25204:	ldr	r3, [pc, #3364]	; 25f30 <__flatcc_fb_gen_c_json_parser@@Base+0xff0>
   25208:	add	r3, pc, r3
   2520c:	str	r3, [sp, #24]
   25210:	ldr	r3, [pc, #3356]	; 25f34 <__flatcc_fb_gen_c_json_parser@@Base+0xff4>
   25214:	add	r3, pc, r3
   25218:	str	r3, [sp, #28]
   2521c:	ldr	r3, [pc, #3348]	; 25f38 <__flatcc_fb_gen_c_json_parser@@Base+0xff8>
   25220:	add	r3, pc, r3
   25224:	str	r3, [sp, #32]
   25228:	ldrh	r3, [fp, #8]
   2522c:	cmp	r3, #4
   25230:	addls	pc, pc, r3, lsl #2
   25234:	b	25344 <__flatcc_fb_gen_c_json_parser@@Base+0x404>
   25238:	b	25c6c <__flatcc_fb_gen_c_json_parser@@Base+0xd2c>
   2523c:	b	25854 <__flatcc_fb_gen_c_json_parser@@Base+0x914>
   25240:	b	25344 <__flatcc_fb_gen_c_json_parser@@Base+0x404>
   25244:	b	25c5c <__flatcc_fb_gen_c_json_parser@@Base+0xd1c>
   25248:	b	25320 <__flatcc_fb_gen_c_json_parser@@Base+0x3e0>
   2524c:	mov	r2, r5
   25250:	mov	r1, r6
   25254:	ldr	r0, [r6, #12]
   25258:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   2525c:	mov	r2, r5
   25260:	mov	r1, r8
   25264:	mov	r0, r4
   25268:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2526c:	mov	r2, r5
   25270:	ldr	r1, [sp, #8]
   25274:	mov	r0, r4
   25278:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2527c:	b	2513c <__flatcc_fb_gen_c_json_parser@@Base+0x1fc>
   25280:	mov	r2, r5
   25284:	mov	r1, r6
   25288:	ldr	r0, [r6, #12]
   2528c:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   25290:	mov	r2, r5
   25294:	mov	r1, fp
   25298:	mov	r0, r4
   2529c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   252a0:	ldr	r1, [r4, #220]	; 0xdc
   252a4:	mov	r2, r5
   252a8:	add	r1, r1, #2
   252ac:	str	r1, [r4, #220]	; 0xdc
   252b0:	mov	r0, r4
   252b4:	mov	r1, sl
   252b8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   252bc:	ldr	r2, [r4, #220]	; 0xdc
   252c0:	cmp	r2, #0
   252c4:	beq	252d8 <__flatcc_fb_gen_c_json_parser@@Base+0x398>
   252c8:	cmp	r2, #1
   252cc:	bne	25134 <__flatcc_fb_gen_c_json_parser@@Base+0x1f4>
   252d0:	mov	r3, #0
   252d4:	str	r3, [r4, #220]	; 0xdc
   252d8:	ldr	r3, [pc, #3164]	; 25f3c <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   252dc:	ldr	r1, [pc, #3164]	; 25f40 <__flatcc_fb_gen_c_json_parser@@Base+0x1000>
   252e0:	ldr	r0, [pc, #3164]	; 25f44 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   252e4:	add	r3, pc, r3
   252e8:	ldr	r2, [pc, #3160]	; 25f48 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   252ec:	add	r3, r3, #252	; 0xfc
   252f0:	add	r1, pc, r1
   252f4:	add	r0, pc, r0
   252f8:	bl	14140 <__assert_fail@plt>
   252fc:	mov	r2, r5
   25300:	mov	r1, r6
   25304:	ldr	r0, [r6, #12]
   25308:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   2530c:	mov	r2, r5
   25310:	mov	r1, r9
   25314:	mov	r0, r4
   25318:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2531c:	b	2513c <__flatcc_fb_gen_c_json_parser@@Base+0x1fc>
   25320:	mov	r1, fp
   25324:	mov	r0, r4
   25328:	bl	2250c <__flatcc_fb_gen_c_verifier@@Base+0x15ac>
   2532c:	mov	r1, fp
   25330:	mov	r0, r4
   25334:	bl	22bac <__flatcc_fb_gen_c_verifier@@Base+0x1c4c>
   25338:	mov	r1, fp
   2533c:	mov	r0, r4
   25340:	bl	24b5c <__flatcc_fb_gen_c_verifier@@Base+0x3bfc>
   25344:	ldr	fp, [fp]
   25348:	cmp	fp, #0
   2534c:	bne	25228 <__flatcc_fb_gen_c_json_parser@@Base+0x2e8>
   25350:	ldr	r3, [r4, #208]	; 0xd0
   25354:	ldr	r1, [pc, #3056]	; 25f4c <__flatcc_fb_gen_c_json_parser@@Base+0x100c>
   25358:	ldr	r0, [r3, #60]	; 0x3c
   2535c:	mov	r2, r4
   25360:	add	r1, pc, r1
   25364:	bl	2d17c <fb_scope_table_visit@@Base>
   25368:	ldr	r6, [r4, #208]	; 0xd0
   2536c:	mov	r1, #0
   25370:	str	r1, [sp, #48]	; 0x30
   25374:	mov	r2, #44	; 0x2c
   25378:	str	r1, [r9, #4]
   2537c:	str	r1, [r9, #8]
   25380:	str	r1, [r9, #12]
   25384:	str	r1, [r9, #16]
   25388:	str	r1, [r9, #20]
   2538c:	str	r1, [r9, #24]
   25390:	mov	r0, r5
   25394:	ldr	r8, [r6, #60]	; 0x3c
   25398:	bl	140a4 <memset@plt>
   2539c:	ldr	r1, [pc, #2988]	; 25f50 <__flatcc_fb_gen_c_json_parser@@Base+0x1010>
   253a0:	mov	r3, #1
   253a4:	mov	r2, r5
   253a8:	mov	r0, r8
   253ac:	add	r1, pc, r1
   253b0:	str	r3, [sp, #76]	; 0x4c
   253b4:	str	r6, [sp, #116]	; 0x74
   253b8:	bl	2d17c <fb_scope_table_visit@@Base>
   253bc:	ldr	r6, [sp, #80]	; 0x50
   253c0:	mov	r1, #8
   253c4:	mov	r0, r6
   253c8:	bl	13f9c <calloc@plt>
   253cc:	ldr	sl, [sp, #84]	; 0x54
   253d0:	mov	r1, #8
   253d4:	mov	r3, r0
   253d8:	mov	r0, sl
   253dc:	str	r3, [sp, #92]	; 0x5c
   253e0:	str	r3, [sp, #8]
   253e4:	bl	13f9c <calloc@plt>
   253e8:	ldr	fp, [sp, #88]	; 0x58
   253ec:	mov	r7, r0
   253f0:	str	r0, [sp, #96]	; 0x60
   253f4:	mov	r0, fp
   253f8:	bl	14038 <malloc@plt>
   253fc:	ldr	r3, [sp, #8]
   25400:	cmp	r6, #0
   25404:	movle	r6, #0
   25408:	movgt	r6, #1
   2540c:	cmp	r3, #0
   25410:	movne	r6, #0
   25414:	cmp	r6, #0
   25418:	str	r3, [sp, #104]	; 0x68
   2541c:	str	r7, [sp, #108]	; 0x6c
   25420:	str	r0, [sp, #100]	; 0x64
   25424:	str	r0, [sp, #112]	; 0x70
   25428:	bne	25610 <__flatcc_fb_gen_c_json_parser@@Base+0x6d0>
   2542c:	cmp	sl, #0
   25430:	movle	sl, #0
   25434:	movgt	sl, #1
   25438:	cmp	r7, #0
   2543c:	movne	sl, #0
   25440:	cmp	sl, #0
   25444:	bne	25610 <__flatcc_fb_gen_c_json_parser@@Base+0x6d0>
   25448:	cmp	fp, #0
   2544c:	clz	r7, r0
   25450:	lsr	r7, r7, #5
   25454:	moveq	r7, #0
   25458:	cmp	r7, #0
   2545c:	bne	25610 <__flatcc_fb_gen_c_json_parser@@Base+0x6d0>
   25460:	ldr	r1, [pc, #2796]	; 25f54 <__flatcc_fb_gen_c_json_parser@@Base+0x1014>
   25464:	mov	r0, r8
   25468:	mov	r2, r5
   2546c:	add	r1, pc, r1
   25470:	bl	2d17c <fb_scope_table_visit@@Base>
   25474:	ldr	r1, [sp, #80]	; 0x50
   25478:	ldr	r0, [sp, #92]	; 0x5c
   2547c:	bl	22dd4 <__flatcc_fb_gen_c_verifier@@Base+0x1e74>
   25480:	ldr	r1, [sp, #84]	; 0x54
   25484:	ldr	r0, [sp, #96]	; 0x60
   25488:	bl	22dd4 <__flatcc_fb_gen_c_verifier@@Base+0x1e74>
   2548c:	ldr	r8, [sp, #84]	; 0x54
   25490:	cmp	r8, #0
   25494:	beq	26a30 <__flatcc_fb_gen_c_json_parser@@Base+0x1af0>
   25498:	lsl	sl, r8, #4
   2549c:	mov	r0, sl
   254a0:	bl	14038 <malloc@plt>
   254a4:	subs	r3, r0, #0
   254a8:	str	r3, [sp, #8]
   254ac:	beq	26a70 <__flatcc_fb_gen_c_json_parser@@Base+0x1b30>
   254b0:	cmp	r8, #0
   254b4:	ble	254e8 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   254b8:	ldr	r3, [sp, #8]
   254bc:	ldr	fp, [sp, #96]	; 0x60
   254c0:	add	sl, r3, sl
   254c4:	mov	r6, r3
   254c8:	ldr	r0, [fp, #4]
   254cc:	str	r0, [r6]
   254d0:	bl	14074 <strlen@plt>
   254d4:	ldr	r3, [fp], #8
   254d8:	stmib	r6, {r0, r3, r7}
   254dc:	add	r6, r6, #16
   254e0:	cmp	sl, r6
   254e4:	bne	254c8 <__flatcc_fb_gen_c_json_parser@@Base+0x588>
   254e8:	ldr	r6, [sp, #8]
   254ec:	ldr	r3, [pc, #2660]	; 25f58 <__flatcc_fb_gen_c_json_parser@@Base+0x1018>
   254f0:	mov	r1, r8
   254f4:	add	r3, pc, r3
   254f8:	mov	r2, #16
   254fc:	mov	r0, r6
   25500:	bl	14110 <qsort@plt>
   25504:	ldr	r8, [sp, #84]	; 0x54
   25508:	str	r6, [sp, #48]	; 0x30
   2550c:	ldr	r2, [r4, #208]	; 0xd0
   25510:	ldr	r1, [pc, #2628]	; 25f5c <__flatcc_fb_gen_c_json_parser@@Base+0x101c>
   25514:	ldr	r3, [pc, #2628]	; 25f60 <__flatcc_fb_gen_c_json_parser@@Base+0x1020>
   25518:	add	r1, pc, r1
   2551c:	ldr	r2, [r2, #160]	; 0xa0
   25520:	str	r1, [sp, #52]	; 0x34
   25524:	ldr	r1, [pc, #2616]	; 25f64 <__flatcc_fb_gen_c_json_parser@@Base+0x1024>
   25528:	add	r3, pc, r3
   2552c:	mov	ip, #4
   25530:	mov	r6, #0
   25534:	add	r1, pc, r1
   25538:	mov	r0, r4
   2553c:	str	r3, [sp, #56]	; 0x38
   25540:	str	ip, [sp, #64]	; 0x40
   25544:	str	r6, [sp, #60]	; 0x3c
   25548:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2554c:	ldr	r3, [r4, #220]	; 0xdc
   25550:	ldr	r1, [pc, #2576]	; 25f68 <__flatcc_fb_gen_c_json_parser@@Base+0x1028>
   25554:	add	r3, r3, #2
   25558:	str	r3, [r4, #220]	; 0xdc
   2555c:	add	r1, pc, r1
   25560:	mov	r0, r4
   25564:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25568:	ldr	r3, [r4, #220]	; 0xdc
   2556c:	cmp	r3, r6
   25570:	beq	26d80 <__flatcc_fb_gen_c_json_parser@@Base+0x1e40>
   25574:	cmp	r3, #1
   25578:	streq	r6, [r4, #220]	; 0xdc
   2557c:	beq	26d80 <__flatcc_fb_gen_c_json_parser@@Base+0x1e40>
   25580:	ldr	r1, [pc, #2532]	; 25f6c <__flatcc_fb_gen_c_json_parser@@Base+0x102c>
   25584:	sub	r3, r3, #2
   25588:	str	r3, [r4, #220]	; 0xdc
   2558c:	add	r1, pc, r1
   25590:	mov	r0, r4
   25594:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25598:	ldr	r3, [r4, #220]	; 0xdc
   2559c:	cmp	r8, #0
   255a0:	add	r3, r3, #1
   255a4:	str	r3, [r4, #220]	; 0xdc
   255a8:	bne	26694 <__flatcc_fb_gen_c_json_parser@@Base+0x1754>
   255ac:	ldr	r1, [pc, #2492]	; 25f70 <__flatcc_fb_gen_c_json_parser@@Base+0x1030>
   255b0:	mov	r0, r4
   255b4:	add	r1, pc, r1
   255b8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   255bc:	ldr	r1, [pc, #2480]	; 25f74 <__flatcc_fb_gen_c_json_parser@@Base+0x1034>
   255c0:	mov	r0, r4
   255c4:	add	r1, pc, r1
   255c8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   255cc:	ldr	r3, [r4, #220]	; 0xdc
   255d0:	cmp	r3, #0
   255d4:	beq	26da4 <__flatcc_fb_gen_c_json_parser@@Base+0x1e64>
   255d8:	ldr	r1, [pc, #2456]	; 25f78 <__flatcc_fb_gen_c_json_parser@@Base+0x1038>
   255dc:	sub	r3, r3, #1
   255e0:	str	r3, [r4, #220]	; 0xdc
   255e4:	add	r1, pc, r1
   255e8:	mov	r0, r4
   255ec:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   255f0:	ldr	r1, [pc, #2436]	; 25f7c <__flatcc_fb_gen_c_json_parser@@Base+0x103c>
   255f4:	mov	r0, r4
   255f8:	add	r1, pc, r1
   255fc:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25600:	ldr	r0, [sp, #48]	; 0x30
   25604:	cmp	r0, #0
   25608:	beq	25610 <__flatcc_fb_gen_c_json_parser@@Base+0x6d0>
   2560c:	bl	13fcc <free@plt>
   25610:	mov	r0, r5
   25614:	bl	23390 <__flatcc_fb_gen_c_verifier@@Base+0x2430>
   25618:	ldr	r3, [r4, #208]	; 0xd0
   2561c:	ldr	r6, [r3, #52]	; 0x34
   25620:	cmp	r6, #0
   25624:	beq	25808 <__flatcc_fb_gen_c_json_parser@@Base+0x8c8>
   25628:	ldrh	r7, [r6, #8]
   2562c:	cmp	r7, #0
   25630:	beq	26768 <__flatcc_fb_gen_c_json_parser@@Base+0x1828>
   25634:	cmp	r7, #1
   25638:	bne	25808 <__flatcc_fb_gen_c_json_parser@@Base+0x8c8>
   2563c:	mov	r2, #220	; 0xdc
   25640:	mov	r1, #0
   25644:	mov	r0, r5
   25648:	bl	140a4 <memset@plt>
   2564c:	mov	r2, r5
   25650:	mov	r1, r6
   25654:	ldr	r0, [r6, #12]
   25658:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   2565c:	ldr	r3, [r4, #208]	; 0xd0
   25660:	ldr	r1, [pc, #2328]	; 25f80 <__flatcc_fb_gen_c_json_parser@@Base+0x1040>
   25664:	mov	r0, r4
   25668:	ldr	r2, [r3, #160]	; 0xa0
   2566c:	add	r1, pc, r1
   25670:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25674:	ldr	r3, [r4, #220]	; 0xdc
   25678:	ldr	r1, [pc, #2308]	; 25f84 <__flatcc_fb_gen_c_json_parser@@Base+0x1044>
   2567c:	add	r3, r3, #2
   25680:	str	r3, [r4, #220]	; 0xdc
   25684:	add	r1, pc, r1
   25688:	mov	r0, r4
   2568c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25690:	ldr	r3, [r4, #220]	; 0xdc
   25694:	cmp	r3, #0
   25698:	beq	26d14 <__flatcc_fb_gen_c_json_parser@@Base+0x1dd4>
   2569c:	cmp	r3, #1
   256a0:	moveq	r3, #0
   256a4:	streq	r3, [r4, #220]	; 0xdc
   256a8:	beq	26d14 <__flatcc_fb_gen_c_json_parser@@Base+0x1dd4>
   256ac:	ldr	r1, [pc, #2260]	; 25f88 <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   256b0:	sub	r3, r3, #2
   256b4:	str	r3, [r4, #220]	; 0xdc
   256b8:	add	r1, pc, r1
   256bc:	mov	r0, r4
   256c0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   256c4:	ldr	r3, [r4, #220]	; 0xdc
   256c8:	ldr	r1, [pc, #2236]	; 25f8c <__flatcc_fb_gen_c_json_parser@@Base+0x104c>
   256cc:	add	r3, r3, #1
   256d0:	str	r3, [r4, #220]	; 0xdc
   256d4:	add	r1, pc, r1
   256d8:	mov	r0, r4
   256dc:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   256e0:	ldr	r1, [pc, #2216]	; 25f90 <__flatcc_fb_gen_c_json_parser@@Base+0x1050>
   256e4:	mov	r0, r4
   256e8:	add	r1, pc, r1
   256ec:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   256f0:	ldr	r1, [pc, #2204]	; 25f94 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   256f4:	mov	r0, r4
   256f8:	add	r1, pc, r1
   256fc:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25700:	ldr	r1, [pc, #2192]	; 25f98 <__flatcc_fb_gen_c_json_parser@@Base+0x1058>
   25704:	mov	r0, r4
   25708:	add	r1, pc, r1
   2570c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25710:	ldr	r1, [pc, #2180]	; 25f9c <__flatcc_fb_gen_c_json_parser@@Base+0x105c>
   25714:	mov	r0, r4
   25718:	add	r1, pc, r1
   2571c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25720:	ldr	r2, [r4, #208]	; 0xd0
   25724:	ldrh	r3, [r2, #16]
   25728:	cmp	r3, #2
   2572c:	beq	26a54 <__flatcc_fb_gen_c_json_parser@@Base+0x1b14>
   25730:	ldr	r1, [pc, #2152]	; 25fa0 <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   25734:	mov	r0, r4
   25738:	add	r1, pc, r1
   2573c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25740:	ldr	r1, [pc, #2140]	; 25fa4 <__flatcc_fb_gen_c_json_parser@@Base+0x1064>
   25744:	mov	r2, r5
   25748:	add	r1, pc, r1
   2574c:	mov	r0, r4
   25750:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25754:	ldr	r1, [pc, #2124]	; 25fa8 <__flatcc_fb_gen_c_json_parser@@Base+0x1068>
   25758:	mov	r0, r4
   2575c:	add	r1, pc, r1
   25760:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25764:	ldr	r3, [r4, #220]	; 0xdc
   25768:	ldr	r1, [pc, #2108]	; 25fac <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   2576c:	add	r3, r3, #1
   25770:	str	r3, [r4, #220]	; 0xdc
   25774:	add	r1, pc, r1
   25778:	mov	r0, r4
   2577c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25780:	ldr	r3, [r4, #220]	; 0xdc
   25784:	cmp	r3, #0
   25788:	beq	26dec <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   2578c:	ldr	r5, [pc, #2076]	; 25fb0 <__flatcc_fb_gen_c_json_parser@@Base+0x1070>
   25790:	sub	r3, r3, #1
   25794:	add	r5, pc, r5
   25798:	str	r3, [r4, #220]	; 0xdc
   2579c:	mov	r1, r5
   257a0:	mov	r0, r4
   257a4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   257a8:	ldr	r1, [pc, #2052]	; 25fb4 <__flatcc_fb_gen_c_json_parser@@Base+0x1074>
   257ac:	mov	r0, r4
   257b0:	add	r1, pc, r1
   257b4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   257b8:	ldr	r1, [pc, #2040]	; 25fb8 <__flatcc_fb_gen_c_json_parser@@Base+0x1078>
   257bc:	mov	r0, r4
   257c0:	add	r1, pc, r1
   257c4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   257c8:	ldr	r1, [pc, #2028]	; 25fbc <__flatcc_fb_gen_c_json_parser@@Base+0x107c>
   257cc:	mov	r0, r4
   257d0:	add	r1, pc, r1
   257d4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   257d8:	ldr	r3, [r4, #220]	; 0xdc
   257dc:	cmp	r3, #0
   257e0:	beq	26dc8 <__flatcc_fb_gen_c_json_parser@@Base+0x1e88>
   257e4:	sub	r3, r3, #1
   257e8:	mov	r1, r5
   257ec:	mov	r0, r4
   257f0:	str	r3, [r4, #220]	; 0xdc
   257f4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   257f8:	ldr	r1, [pc, #1984]	; 25fc0 <__flatcc_fb_gen_c_json_parser@@Base+0x1080>
   257fc:	mov	r0, r4
   25800:	add	r1, pc, r1
   25804:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25808:	ldr	r3, [r4, #212]	; 0xd4
   2580c:	ldr	r3, [r3, #140]	; 0x8c
   25810:	cmp	r3, #0
   25814:	beq	25830 <__flatcc_fb_gen_c_json_parser@@Base+0x8f0>
   25818:	ldr	r0, [pc, #1956]	; 25fc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1084>
   2581c:	ldr	r3, [r4, #204]	; 0xcc
   25820:	mov	r2, #36	; 0x24
   25824:	mov	r1, #1
   25828:	add	r0, pc, r0
   2582c:	bl	14014 <fwrite@plt>
   25830:	ldr	r3, [r4, #208]	; 0xd0
   25834:	ldr	r1, [pc, #1932]	; 25fc8 <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   25838:	mov	r0, r4
   2583c:	add	r1, pc, r1
   25840:	ldr	r2, [r3, #164]	; 0xa4
   25844:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25848:	mov	r0, #0
   2584c:	add	sp, sp, #300	; 0x12c
   25850:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25854:	mov	r3, #0
   25858:	str	r3, [r9]
   2585c:	str	r3, [r9, #4]
   25860:	str	r3, [r9, #8]
   25864:	str	r3, [r9, #12]
   25868:	str	r3, [r9, #16]
   2586c:	str	r3, [r9, #20]
   25870:	str	r3, [r9, #24]
   25874:	ldrh	r3, [fp, #8]
   25878:	cmp	r3, #1
   2587c:	bne	26b0c <__flatcc_fb_gen_c_json_parser@@Base+0x1bcc>
   25880:	add	r1, sp, #44	; 0x2c
   25884:	ldr	r0, [fp, #20]
   25888:	bl	249d0 <__flatcc_fb_gen_c_verifier@@Base+0x3a70>
   2588c:	cmp	r0, #0
   25890:	str	r0, [sp, #48]	; 0x30
   25894:	beq	265cc <__flatcc_fb_gen_c_json_parser@@Base+0x168c>
   25898:	ldr	r1, [pc, #1836]	; 25fcc <__flatcc_fb_gen_c_json_parser@@Base+0x108c>
   2589c:	ldr	r3, [pc, #1836]	; 25fd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1090>
   258a0:	add	r1, pc, r1
   258a4:	add	r3, pc, r3
   258a8:	mov	ip, #1
   258ac:	mov	r2, #220	; 0xdc
   258b0:	str	r1, [sp, #52]	; 0x34
   258b4:	mov	r0, r5
   258b8:	mov	r1, #0
   258bc:	str	r3, [sp, #56]	; 0x38
   258c0:	str	ip, [sp, #64]	; 0x40
   258c4:	str	fp, [sp, #60]	; 0x3c
   258c8:	bl	140a4 <memset@plt>
   258cc:	mov	r2, r5
   258d0:	mov	r1, fp
   258d4:	ldr	r0, [fp, #12]
   258d8:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   258dc:	ldr	r1, [pc, #1776]	; 25fd4 <__flatcc_fb_gen_c_json_parser@@Base+0x1094>
   258e0:	mov	r2, r5
   258e4:	add	r1, pc, r1
   258e8:	mov	r0, r4
   258ec:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   258f0:	ldr	r1, [pc, #1760]	; 25fd8 <__flatcc_fb_gen_c_json_parser@@Base+0x1098>
   258f4:	mov	r0, r4
   258f8:	add	r1, pc, r1
   258fc:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25900:	ldr	r3, [r4, #220]	; 0xdc
   25904:	ldr	r1, [pc, #1744]	; 25fdc <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   25908:	add	r3, r3, #1
   2590c:	str	r3, [r4, #220]	; 0xdc
   25910:	add	r1, pc, r1
   25914:	mov	r0, r4
   25918:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2591c:	ldr	r3, [sp, #44]	; 0x2c
   25920:	cmp	r3, #0
   25924:	ble	25968 <__flatcc_fb_gen_c_json_parser@@Base+0xa28>
   25928:	ldr	r1, [pc, #1712]	; 25fe0 <__flatcc_fb_gen_c_json_parser@@Base+0x10a0>
   2592c:	mov	r0, r4
   25930:	add	r1, pc, r1
   25934:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25938:	ldr	r1, [pc, #1700]	; 25fe4 <__flatcc_fb_gen_c_json_parser@@Base+0x10a4>
   2593c:	mov	r0, r4
   25940:	add	r1, pc, r1
   25944:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25948:	ldr	r1, [pc, #1688]	; 25fe8 <__flatcc_fb_gen_c_json_parser@@Base+0x10a8>
   2594c:	mov	r0, r4
   25950:	add	r1, pc, r1
   25954:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25958:	ldr	r1, [pc, #1676]	; 25fec <__flatcc_fb_gen_c_json_parser@@Base+0x10ac>
   2595c:	mov	r0, r4
   25960:	add	r1, pc, r1
   25964:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25968:	ldr	r1, [pc, #1664]	; 25ff0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   2596c:	mov	r0, r4
   25970:	add	r1, pc, r1
   25974:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25978:	ldr	r1, [pc, #1652]	; 25ff4 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   2597c:	mov	r0, r4
   25980:	add	r1, pc, r1
   25984:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25988:	ldr	r1, [pc, #1640]	; 25ff8 <__flatcc_fb_gen_c_json_parser@@Base+0x10b8>
   2598c:	mov	r0, r4
   25990:	add	r1, pc, r1
   25994:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25998:	ldr	r3, [r4, #220]	; 0xdc
   2599c:	ldr	r2, [sp, #44]	; 0x2c
   259a0:	add	r3, r3, #1
   259a4:	cmp	r2, #0
   259a8:	str	r3, [r4, #220]	; 0xdc
   259ac:	bne	2658c <__flatcc_fb_gen_c_json_parser@@Base+0x164c>
   259b0:	ldr	r1, [pc, #1604]	; 25ffc <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   259b4:	mov	r0, r4
   259b8:	add	r1, pc, r1
   259bc:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   259c0:	ldr	r1, [pc, #1592]	; 26000 <__flatcc_fb_gen_c_json_parser@@Base+0x10c0>
   259c4:	mov	r0, r4
   259c8:	add	r1, pc, r1
   259cc:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   259d0:	ldr	r1, [pc, #1580]	; 26004 <__flatcc_fb_gen_c_json_parser@@Base+0x10c4>
   259d4:	mov	r0, r4
   259d8:	add	r1, pc, r1
   259dc:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   259e0:	ldr	r3, [r4, #220]	; 0xdc
   259e4:	cmp	r3, #0
   259e8:	beq	26e58 <__flatcc_fb_gen_c_json_parser@@Base+0x1f18>
   259ec:	ldr	r1, [pc, #1556]	; 26008 <__flatcc_fb_gen_c_json_parser@@Base+0x10c8>
   259f0:	sub	r3, r3, #1
   259f4:	str	r3, [r4, #220]	; 0xdc
   259f8:	add	r1, pc, r1
   259fc:	mov	r0, r4
   25a00:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25a04:	ldr	r1, [pc, #1536]	; 2600c <__flatcc_fb_gen_c_json_parser@@Base+0x10cc>
   25a08:	mov	r0, r4
   25a0c:	add	r1, pc, r1
   25a10:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25a14:	ldr	r3, [sp, #44]	; 0x2c
   25a18:	cmp	r3, #0
   25a1c:	ble	25a58 <__flatcc_fb_gen_c_json_parser@@Base+0xb18>
   25a20:	ldr	r2, [r4, #220]	; 0xdc
   25a24:	ldr	r1, [pc, #1508]	; 26010 <__flatcc_fb_gen_c_json_parser@@Base+0x10d0>
   25a28:	mov	r3, #0
   25a2c:	str	r3, [r4, #220]	; 0xdc
   25a30:	add	r1, pc, r1
   25a34:	mov	r0, r4
   25a38:	str	r2, [r4, #228]	; 0xe4
   25a3c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25a40:	ldr	r3, [r4, #228]	; 0xe4
   25a44:	ldr	r1, [pc, #1480]	; 26014 <__flatcc_fb_gen_c_json_parser@@Base+0x10d4>
   25a48:	str	r3, [r4, #220]	; 0xdc
   25a4c:	add	r1, pc, r1
   25a50:	mov	r0, r4
   25a54:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25a58:	ldr	r3, [r4, #220]	; 0xdc
   25a5c:	cmp	r3, #0
   25a60:	beq	26cf0 <__flatcc_fb_gen_c_json_parser@@Base+0x1db0>
   25a64:	ldr	r1, [pc, #1452]	; 26018 <__flatcc_fb_gen_c_json_parser@@Base+0x10d8>
   25a68:	sub	r3, r3, #1
   25a6c:	str	r3, [r4, #220]	; 0xdc
   25a70:	add	r1, pc, r1
   25a74:	mov	r0, r4
   25a78:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25a7c:	ldr	r1, [pc, #1432]	; 2601c <__flatcc_fb_gen_c_json_parser@@Base+0x10dc>
   25a80:	mov	r0, r4
   25a84:	add	r1, pc, r1
   25a88:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25a8c:	ldr	r0, [sp, #48]	; 0x30
   25a90:	cmp	r0, #0
   25a94:	beq	25a9c <__flatcc_fb_gen_c_json_parser@@Base+0xb5c>
   25a98:	bl	13fcc <free@plt>
   25a9c:	ldrh	r3, [fp, #8]
   25aa0:	cmp	r3, #1
   25aa4:	bne	26ccc <__flatcc_fb_gen_c_json_parser@@Base+0x1d8c>
   25aa8:	mov	r2, #220	; 0xdc
   25aac:	mov	r1, #0
   25ab0:	mov	r0, r5
   25ab4:	bl	140a4 <memset@plt>
   25ab8:	mov	r2, r5
   25abc:	mov	r1, fp
   25ac0:	ldr	r0, [fp, #12]
   25ac4:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   25ac8:	ldr	r7, [pc, #1360]	; 26020 <__flatcc_fb_gen_c_json_parser@@Base+0x10e0>
   25acc:	ldr	r1, [pc, #1360]	; 26024 <__flatcc_fb_gen_c_json_parser@@Base+0x10e4>
   25ad0:	mov	r2, r5
   25ad4:	add	r1, pc, r1
   25ad8:	mov	r0, r4
   25adc:	add	r7, pc, r7
   25ae0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25ae4:	mov	r1, r7
   25ae8:	mov	r0, r4
   25aec:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25af0:	ldr	r3, [r4, #220]	; 0xdc
   25af4:	ldr	r6, [pc, #1324]	; 26028 <__flatcc_fb_gen_c_json_parser@@Base+0x10e8>
   25af8:	ldr	r1, [pc, #1324]	; 2602c <__flatcc_fb_gen_c_json_parser@@Base+0x10ec>
   25afc:	add	r3, r3, #1
   25b00:	str	r3, [r4, #220]	; 0xdc
   25b04:	add	r1, pc, r1
   25b08:	mov	r0, r4
   25b0c:	add	r6, pc, r6
   25b10:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25b14:	mov	r1, r6
   25b18:	mov	r0, r4
   25b1c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25b20:	ldr	r1, [pc, #1288]	; 26030 <__flatcc_fb_gen_c_json_parser@@Base+0x10f0>
   25b24:	mov	r0, r4
   25b28:	add	r1, pc, r1
   25b2c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25b30:	ldrh	r0, [fp, #104]	; 0x68
   25b34:	ldr	r1, [pc, #1272]	; 26034 <__flatcc_fb_gen_c_json_parser@@Base+0x10f4>
   25b38:	ldrd	r2, [fp, #112]	; 0x70
   25b3c:	add	r1, pc, r1
   25b40:	str	r0, [sp]
   25b44:	mov	r0, r4
   25b48:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25b4c:	ldr	r1, [pc, #1252]	; 26038 <__flatcc_fb_gen_c_json_parser@@Base+0x10f8>
   25b50:	mov	r2, r5
   25b54:	add	r1, pc, r1
   25b58:	mov	r0, r4
   25b5c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25b60:	ldr	r1, [pc, #1236]	; 2603c <__flatcc_fb_gen_c_json_parser@@Base+0x10fc>
   25b64:	mov	r0, r4
   25b68:	add	r1, pc, r1
   25b6c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25b70:	ldr	r1, [pc, #1224]	; 26040 <__flatcc_fb_gen_c_json_parser@@Base+0x1100>
   25b74:	mov	r0, r4
   25b78:	add	r1, pc, r1
   25b7c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25b80:	ldr	r2, [r4, #220]	; 0xdc
   25b84:	ldr	r1, [pc, #1208]	; 26044 <__flatcc_fb_gen_c_json_parser@@Base+0x1104>
   25b88:	mov	r3, #0
   25b8c:	str	r2, [r4, #228]	; 0xe4
   25b90:	str	r3, [r4, #220]	; 0xdc
   25b94:	add	r1, pc, r1
   25b98:	mov	r0, r4
   25b9c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25ba0:	ldr	r3, [r4, #228]	; 0xe4
   25ba4:	ldr	r1, [pc, #1180]	; 26048 <__flatcc_fb_gen_c_json_parser@@Base+0x1108>
   25ba8:	str	r3, [r4, #220]	; 0xdc
   25bac:	add	r1, pc, r1
   25bb0:	mov	r0, r4
   25bb4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25bb8:	ldr	r3, [r4, #220]	; 0xdc
   25bbc:	cmp	r3, #0
   25bc0:	beq	26ca8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d68>
   25bc4:	ldr	r8, [pc, #1152]	; 2604c <__flatcc_fb_gen_c_json_parser@@Base+0x110c>
   25bc8:	sub	r3, r3, #1
   25bcc:	add	r8, pc, r8
   25bd0:	str	r3, [r4, #220]	; 0xdc
   25bd4:	mov	r1, r8
   25bd8:	mov	r0, r4
   25bdc:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25be0:	mov	r1, r6
   25be4:	mov	r0, r4
   25be8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25bec:	ldr	r1, [pc, #1116]	; 26050 <__flatcc_fb_gen_c_json_parser@@Base+0x1110>
   25bf0:	mov	r2, r5
   25bf4:	add	r1, pc, r1
   25bf8:	mov	r0, r4
   25bfc:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25c00:	mov	r1, r7
   25c04:	mov	r0, r4
   25c08:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25c0c:	ldr	r3, [r4, #220]	; 0xdc
   25c10:	ldr	r1, [pc, #1084]	; 26054 <__flatcc_fb_gen_c_json_parser@@Base+0x1114>
   25c14:	add	r3, r3, #1
   25c18:	str	r3, [r4, #220]	; 0xdc
   25c1c:	mov	r2, r5
   25c20:	add	r1, pc, r1
   25c24:	mov	r0, r4
   25c28:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25c2c:	ldr	r3, [r4, #220]	; 0xdc
   25c30:	cmp	r3, #0
   25c34:	beq	26c84 <__flatcc_fb_gen_c_json_parser@@Base+0x1d44>
   25c38:	sub	r3, r3, #1
   25c3c:	mov	r1, r8
   25c40:	mov	r0, r4
   25c44:	str	r3, [r4, #220]	; 0xdc
   25c48:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25c4c:	mov	r1, r6
   25c50:	mov	r0, r4
   25c54:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25c58:	b	25344 <__flatcc_fb_gen_c_json_parser@@Base+0x404>
   25c5c:	mov	r1, fp
   25c60:	mov	r0, r4
   25c64:	bl	24b5c <__flatcc_fb_gen_c_verifier@@Base+0x3bfc>
   25c68:	b	25344 <__flatcc_fb_gen_c_json_parser@@Base+0x404>
   25c6c:	mov	r3, #0
   25c70:	str	r3, [r9]
   25c74:	str	r3, [r9, #4]
   25c78:	str	r3, [r9, #8]
   25c7c:	str	r3, [r9, #12]
   25c80:	str	r3, [r9, #16]
   25c84:	str	r3, [r9, #20]
   25c88:	str	r3, [r9, #24]
   25c8c:	ldrh	r6, [fp, #8]
   25c90:	cmp	r6, r3
   25c94:	bne	26e34 <__flatcc_fb_gen_c_json_parser@@Base+0x1ef4>
   25c98:	add	r1, sp, #44	; 0x2c
   25c9c:	ldr	r0, [fp, #20]
   25ca0:	bl	249d0 <__flatcc_fb_gen_c_verifier@@Base+0x3a70>
   25ca4:	cmp	r0, #0
   25ca8:	str	r0, [sp, #48]	; 0x30
   25cac:	beq	26734 <__flatcc_fb_gen_c_json_parser@@Base+0x17f4>
   25cb0:	ldr	r2, [sp, #44]	; 0x2c
   25cb4:	ldr	r1, [pc, #924]	; 26058 <__flatcc_fb_gen_c_json_parser@@Base+0x1118>
   25cb8:	ldr	r3, [pc, #924]	; 2605c <__flatcc_fb_gen_c_json_parser@@Base+0x111c>
   25cbc:	add	r1, pc, r1
   25cc0:	add	r3, pc, r3
   25cc4:	cmp	r2, #0
   25cc8:	str	fp, [sp, #60]	; 0x3c
   25ccc:	str	r6, [sp, #64]	; 0x40
   25cd0:	str	r6, [sp, #68]	; 0x44
   25cd4:	str	r1, [sp, #52]	; 0x34
   25cd8:	str	r3, [sp, #56]	; 0x38
   25cdc:	ble	25d00 <__flatcc_fb_gen_c_json_parser@@Base+0xdc0>
   25ce0:	add	r2, r0, r2, lsl #4
   25ce4:	ldr	r3, [r0, #12]
   25ce8:	add	r0, r0, #16
   25cec:	cmp	r3, #0
   25cf0:	addne	r6, r6, #1
   25cf4:	cmp	r2, r0
   25cf8:	bne	25ce4 <__flatcc_fb_gen_c_json_parser@@Base+0xda4>
   25cfc:	str	r6, [sp, #68]	; 0x44
   25d00:	mov	r2, #220	; 0xdc
   25d04:	mov	r1, #0
   25d08:	mov	r0, r5
   25d0c:	bl	140a4 <memset@plt>
   25d10:	mov	r2, r5
   25d14:	mov	r1, fp
   25d18:	ldr	r0, [fp, #12]
   25d1c:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   25d20:	mov	r2, r5
   25d24:	ldr	r1, [sp, #12]
   25d28:	mov	r0, r4
   25d2c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25d30:	ldr	r1, [sp, #16]
   25d34:	mov	r0, r4
   25d38:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25d3c:	ldr	r3, [r4, #220]	; 0xdc
   25d40:	ldr	r1, [sp, #20]
   25d44:	add	r3, r3, #1
   25d48:	str	r3, [r4, #220]	; 0xdc
   25d4c:	mov	r0, r4
   25d50:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25d54:	ldr	r3, [sp, #44]	; 0x2c
   25d58:	cmp	r3, #0
   25d5c:	ble	25da0 <__flatcc_fb_gen_c_json_parser@@Base+0xe60>
   25d60:	ldr	r1, [pc, #760]	; 26060 <__flatcc_fb_gen_c_json_parser@@Base+0x1120>
   25d64:	mov	r0, r4
   25d68:	add	r1, pc, r1
   25d6c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25d70:	ldr	r1, [pc, #748]	; 26064 <__flatcc_fb_gen_c_json_parser@@Base+0x1124>
   25d74:	mov	r0, r4
   25d78:	add	r1, pc, r1
   25d7c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25d80:	ldr	r1, [pc, #736]	; 26068 <__flatcc_fb_gen_c_json_parser@@Base+0x1128>
   25d84:	mov	r0, r4
   25d88:	add	r1, pc, r1
   25d8c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25d90:	ldr	r1, [pc, #724]	; 2606c <__flatcc_fb_gen_c_json_parser@@Base+0x112c>
   25d94:	mov	r0, r4
   25d98:	add	r1, pc, r1
   25d9c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25da0:	ldr	r3, [sp, #68]	; 0x44
   25da4:	cmp	r3, #0
   25da8:	bne	26630 <__flatcc_fb_gen_c_json_parser@@Base+0x16f0>
   25dac:	ldr	r1, [sp, #24]
   25db0:	mov	r0, r4
   25db4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25db8:	ldr	r1, [sp, #28]
   25dbc:	mov	r0, r4
   25dc0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25dc4:	ldrd	r2, [fp, #96]	; 0x60
   25dc8:	ldr	r1, [sp, #32]
   25dcc:	mov	r0, r4
   25dd0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25dd4:	ldr	r2, [sp, #68]	; 0x44
   25dd8:	cmp	r2, #0
   25ddc:	bne	26658 <__flatcc_fb_gen_c_json_parser@@Base+0x1718>
   25de0:	ldr	r1, [pc, #648]	; 26070 <__flatcc_fb_gen_c_json_parser@@Base+0x1130>
   25de4:	mov	r0, r4
   25de8:	add	r1, pc, r1
   25dec:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25df0:	ldr	r1, [pc, #636]	; 26074 <__flatcc_fb_gen_c_json_parser@@Base+0x1134>
   25df4:	mov	r0, r4
   25df8:	add	r1, pc, r1
   25dfc:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25e00:	ldr	r3, [r4, #220]	; 0xdc
   25e04:	ldr	r1, [pc, #620]	; 26078 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   25e08:	add	r3, r3, #1
   25e0c:	str	r3, [r4, #220]	; 0xdc
   25e10:	add	r1, pc, r1
   25e14:	mov	r0, r4
   25e18:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25e1c:	ldr	r3, [sp, #44]	; 0x2c
   25e20:	cmp	r3, #0
   25e24:	ble	26670 <__flatcc_fb_gen_c_json_parser@@Base+0x1730>
   25e28:	ldr	r1, [pc, #588]	; 2607c <__flatcc_fb_gen_c_json_parser@@Base+0x113c>
   25e2c:	mov	r0, r4
   25e30:	add	r1, pc, r1
   25e34:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25e38:	ldr	r3, [sp, #44]	; 0x2c
   25e3c:	mov	r2, #0
   25e40:	sub	r3, r3, #1
   25e44:	str	r2, [sp]
   25e48:	mov	r1, r9
   25e4c:	mov	r0, r4
   25e50:	bl	218ec <__flatcc_fb_gen_c_verifier@@Base+0x98c>
   25e54:	ldr	r1, [pc, #548]	; 26080 <__flatcc_fb_gen_c_json_parser@@Base+0x1140>
   25e58:	mov	r0, r4
   25e5c:	add	r1, pc, r1
   25e60:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25e64:	ldr	r3, [r4, #220]	; 0xdc
   25e68:	cmp	r3, #0
   25e6c:	beq	26c60 <__flatcc_fb_gen_c_json_parser@@Base+0x1d20>
   25e70:	ldr	r1, [pc, #524]	; 26084 <__flatcc_fb_gen_c_json_parser@@Base+0x1144>
   25e74:	sub	r3, r3, #1
   25e78:	str	r3, [r4, #220]	; 0xdc
   25e7c:	add	r1, pc, r1
   25e80:	mov	r0, r4
   25e84:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25e88:	ldr	r1, [pc, #504]	; 26088 <__flatcc_fb_gen_c_json_parser@@Base+0x1148>
   25e8c:	mov	r0, r4
   25e90:	add	r1, pc, r1
   25e94:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25e98:	ldr	r1, [sp, #44]	; 0x2c
   25e9c:	cmp	r1, #0
   25ea0:	ble	26468 <__flatcc_fb_gen_c_json_parser@@Base+0x1528>
   25ea4:	ldr	r3, [pc, #480]	; 2608c <__flatcc_fb_gen_c_json_parser@@Base+0x114c>
   25ea8:	ldr	sl, [pc, #480]	; 26090 <__flatcc_fb_gen_c_json_parser@@Base+0x1150>
   25eac:	mov	r6, #0
   25eb0:	add	r3, pc, r3
   25eb4:	add	sl, pc, sl
   25eb8:	str	r3, [sp, #8]
   25ebc:	mov	r7, r6
   25ec0:	mov	r8, #1
   25ec4:	b	26378 <__flatcc_fb_gen_c_json_parser@@Base+0x1438>
   25ec8:	andeq	r6, r4, r0, lsr #1
   25ecc:	andeq	pc, r2, r0, ror #23
   25ed0:	andeq	r5, r2, r0, asr #23
   25ed4:	ldrdeq	pc, [r2], -r0
   25ed8:	ldrdeq	pc, [r2], -r0
   25edc:	andeq	pc, r2, r4, lsl #24
   25ee0:	andeq	pc, r2, r8, lsl ip	; <UNPREDICTABLE>
   25ee4:	andeq	fp, r1, r8, lsl #21
   25ee8:	andeq	sp, r1, r8, asr #5
   25eec:	andeq	r5, r2, r0, lsr fp
   25ef0:	andeq	pc, r2, r4, ror #29
   25ef4:	muleq	r2, ip, sp
   25ef8:	strdeq	pc, [r2], -r8
   25efc:	ldrdeq	lr, [r2], -ip
   25f00:	andeq	pc, r2, ip, lsr pc	; <UNPREDICTABLE>
   25f04:	andeq	pc, r2, r4, lsr lr	; <UNPREDICTABLE>
   25f08:	andeq	pc, r2, ip, lsr #27
   25f0c:	andeq	pc, r2, r0, lsl #19
   25f10:	andeq	lr, r2, r0, asr r8
   25f14:			; <UNDEFINED> instruction: 0xffffd354
   25f18:	ldrdeq	pc, [r2], -ip
   25f1c:	ldrdeq	lr, [r2], -ip
   25f20:	andeq	r5, r2, r4, lsl #19
   25f24:	andeq	r0, r3, r4, ror r2
   25f28:	andeq	r1, r3, ip, lsr r1
   25f2c:	andeq	pc, r2, ip, lsr pc	; <UNPREDICTABLE>
   25f30:	andeq	r5, r2, r8, lsr r9
   25f34:	andeq	lr, r2, r4, lsl r8
   25f38:	strdeq	r0, [r3], -r4
   25f3c:	andeq	lr, r2, ip, lsl #3
   25f40:	ldrdeq	lr, [r2], -r0
   25f44:	andeq	lr, r2, r8, lsr r4
   25f48:	ldrdeq	r0, [r0], -r3
   25f4c:			; <UNDEFINED> instruction: 0xffffdc48
   25f50:			; <UNDEFINED> instruction: 0xffffda04
   25f54:			; <UNDEFINED> instruction: 0xffffd928
   25f58:			; <UNDEFINED> instruction: 0xffffd91c
   25f5c:			; <UNDEFINED> instruction: 0xffffe190
   25f60:			; <UNDEFINED> instruction: 0xffffbed4
   25f64:	andeq	pc, r2, r8, lsl fp	; <UNPREDICTABLE>
   25f68:	andeq	lr, r2, ip, lsl #17
   25f6c:	andeq	r0, r3, r0, lsr #27
   25f70:	andeq	r0, r3, ip, lsr #4
   25f74:	andeq	lr, r2, ip, lsl #17
   25f78:	andeq	lr, r2, r4, asr r1
   25f7c:	andeq	r5, r2, r8, asr #10
   25f80:	andeq	pc, r2, ip, lsl r7	; <UNPREDICTABLE>
   25f84:	muleq	r3, r8, r1
   25f88:	andeq	r0, r3, r4, ror ip
   25f8c:	andeq	r0, r3, r0, lsr r3
   25f90:	andeq	r0, r3, r0, lsl #3
   25f94:	andeq	r5, r2, r8, asr #8
   25f98:	andeq	r0, r3, r8, lsl r3
   25f9c:	andeq	r0, r3, r8, lsl #3
   25fa0:	andeq	r0, r3, r4, ror #3
   25fa4:	strdeq	r0, [r3], -r4
   25fa8:	andeq	r0, r3, ip, lsr #4
   25fac:	andeq	r0, r3, r8, lsr #4
   25fb0:	andeq	sp, r2, r4, lsr #31
   25fb4:	andeq	r0, r3, r0, lsl #4
   25fb8:	andeq	r0, r3, r4, lsr #4
   25fbc:	andeq	r0, r3, r8, lsr #4
   25fc0:	andeq	r5, r2, r0, asr #6
   25fc4:	andeq	r2, r2, r4, lsl #18
   25fc8:	andeq	r0, r3, ip, lsr r2
   25fcc:			; <UNDEFINED> instruction: 0xfffff054
   25fd0:			; <UNDEFINED> instruction: 0xffffbb6c
   25fd4:	ldrdeq	pc, [r2], -r4
   25fd8:	andeq	r0, r3, r4, lsr sl
   25fdc:	andeq	pc, r2, r8, lsr #16
   25fe0:	andeq	pc, r2, r4, lsl r8	; <UNPREDICTABLE>
   25fe4:	andeq	pc, r2, r0, lsr #16
   25fe8:	andeq	lr, r2, r0, asr #10
   25fec:	andeq	lr, r2, r4, asr #10
   25ff0:	ldrdeq	r5, [r2], -r0
   25ff4:	andeq	pc, r2, ip, ror #15
   25ff8:	andeq	lr, r2, ip, lsr #16
   25ffc:	strdeq	pc, [r2], -r4
   26000:	andeq	sp, r2, r0, ror #24
   26004:	andeq	pc, r2, r0, lsr #16
   26008:	andeq	sp, r2, r0, asr #26
   2600c:	andeq	lr, r2, r4, lsr #5
   26010:	andeq	pc, r2, r4, lsl #16
   26014:	andeq	lr, r2, r0, lsl #5
   26018:	andeq	sp, r2, r8, asr #25
   2601c:	strheq	r5, [r2], -ip
   26020:	andeq	r0, r3, r0, asr r8
   26024:	andeq	pc, r2, r8, ror #14
   26028:	andeq	r5, r2, r4, lsr r0
   2602c:	andeq	pc, r2, ip, asr r6	; <UNPREDICTABLE>
   26030:	andeq	sp, r2, r0, lsl #30
   26034:	andeq	pc, r2, r4, lsl #15
   26038:	andeq	lr, r2, r8, lsr #20
   2603c:	andeq	pc, r2, r4, lsr #15
   26040:	andeq	lr, r2, r8, lsr r1
   26044:	andeq	pc, r2, r0, lsr #13
   26048:	andeq	lr, r2, r0, lsr #2
   2604c:	andeq	sp, r2, ip, ror #22
   26050:	andeq	pc, r2, ip, ror #14
   26054:	ldrdeq	pc, [r2], -r4
   26058:			; <UNDEFINED> instruction: 0xffffec38
   2605c:			; <UNDEFINED> instruction: 0xffffb750
   26060:	strdeq	pc, [r2], -r8
   26064:	andeq	pc, r2, r4, ror #14
   26068:	andeq	lr, r2, r8, lsl #2
   2606c:	andeq	lr, r2, ip, lsl #2
   26070:	andeq	pc, r2, r4, lsl #7
   26074:	andeq	lr, r2, r4, asr #7
   26078:			; <UNDEFINED> instruction: 0x0002f3b0
   2607c:	andeq	sp, r2, r4, lsl #20
   26080:	andeq	pc, r2, r0, ror r7	; <UNPREDICTABLE>
   26084:			; <UNDEFINED> instruction: 0x0002d8bc
   26088:	andeq	pc, r2, r8, ror r7	; <UNPREDICTABLE>
   2608c:	andeq	pc, r2, r8, ror r7	; <UNPREDICTABLE>
   26090:			; <UNDEFINED> instruction: 0x0002f7b0
   26094:	andeq	lr, r2, r8, lsl #1
   26098:	andeq	pc, r2, r8, ror r2	; <UNPREDICTABLE>
   2609c:	andeq	lr, r2, r8, ror r4
   260a0:	ldrdeq	sp, [r2], -ip
   260a4:	andeq	pc, r2, r0, asr #5
   260a8:	andeq	sp, r2, r4, lsr #16
   260ac:	andeq	lr, r2, ip, lsl #27
   260b0:	andeq	sp, r2, ip, lsl #16
   260b4:	andeq	sp, r2, r4, asr r2
   260b8:	andeq	r4, r2, ip, asr #12
   260bc:	andeq	lr, r2, r0, asr lr
   260c0:	andeq	pc, r2, r8, lsl #28
   260c4:	andeq	pc, r2, r0, asr #4
   260c8:	andeq	lr, r2, ip, lsr #24
   260cc:	muleq	r2, r0, r2
   260d0:	andeq	sp, r2, r0, asr #15
   260d4:	andeq	sp, r2, r4, asr #1
   260d8:			; <UNDEFINED> instruction: 0x0001a8b4
   260dc:	andeq	ip, r2, r8, asr lr
   260e0:	muleq	r2, r4, ip
   260e4:	andeq	r0, r0, r7, lsl r5
   260e8:	andeq	lr, r2, r8, asr #29
   260ec:	andeq	pc, r2, ip, lsr #1
   260f0:	strdeq	lr, [r2], -r4
   260f4:	andeq	lr, r2, r8, lsr pc
   260f8:	andeq	ip, r2, r0, lsr #31
   260fc:	ldrdeq	sp, [r2], -r4
   26100:	andeq	sp, r2, r4, ror #15
   26104:	andeq	sp, r2, r8, ror #15
   26108:	andeq	r4, r2, r4, ror r4
   2610c:	andeq	sp, r2, r8, asr r1
   26110:	andeq	sp, r2, ip, lsr #11
   26114:	andeq	sp, r2, r4, lsl r0
   26118:			; <UNDEFINED> instruction: 0xffffe1ac
   2611c:			; <UNDEFINED> instruction: 0xffffacc4
   26120:	strdeq	lr, [r2], -r0
   26124:	andeq	pc, r2, ip, rrx
   26128:	andeq	pc, r2, ip, asr #22
   2612c:	andeq	pc, r2, ip, asr #32
   26130:	andeq	pc, r2, r8, asr r0	; <UNPREDICTABLE>
   26134:	andeq	r4, r2, r0, lsr #6
   26138:	andeq	pc, r2, r4, asr r0	; <UNPREDICTABLE>
   2613c:	andeq	pc, r2, r0, rrx
   26140:	strheq	pc, [r2], -ip	; <UNPREDICTABLE>
   26144:	andeq	pc, r2, r4, ror #1
   26148:	andeq	pc, r2, r4, lsl #2
   2614c:	andeq	pc, r2, r0, lsl #2
   26150:	andeq	ip, r2, ip, ror lr
   26154:	ldrdeq	pc, [r2], -r8
   26158:	strdeq	pc, [r2], -ip
   2615c:	andeq	pc, r2, r0, lsl #2
   26160:	andeq	r4, r2, r8, lsl r2
   26164:	andeq	lr, r2, r0, asr #5
   26168:			; <UNDEFINED> instruction: 0x0002e2b4
   2616c:	strdeq	lr, [r2], -ip
   26170:	strdeq	lr, [r2], -r0
   26174:	andeq	lr, r2, r4, lsr #6
   26178:	andeq	lr, r2, ip, asr #6
   2617c:	andeq	lr, r2, r4, ror #6
   26180:	muleq	r2, ip, r3
   26184:	andeq	ip, r2, r4, asr #25
   26188:			; <UNDEFINED> instruction: 0x0002e3b4
   2618c:	andeq	lr, r2, r8, ror #7
   26190:	muleq	r2, ip, lr
   26194:	andeq	lr, r2, r0, lsl #29
   26198:	andeq	sp, r2, r0, lsl r3
   2619c:	andeq	ip, r2, r4, lsl ip
   261a0:	andeq	sl, r1, r4, lsl #8
   261a4:	andeq	ip, r2, r8, lsr #19
   261a8:	andeq	r2, r2, r4, ror #15
   261ac:	andeq	r0, r0, sl, lsr #9
   261b0:	andeq	ip, r2, ip, ror r9
   261b4:	andeq	ip, r2, r0, asr #23
   261b8:	andeq	ip, r2, r8, lsr #24
   261bc:	andeq	r0, r0, r3, asr #13
   261c0:	andeq	ip, r2, r8, asr r9
   261c4:	muleq	r2, ip, fp
   261c8:	andeq	sl, r1, r0, ror #13
   261cc:	andeq	r0, r0, r5, lsl r5
   261d0:	andeq	ip, r2, r4, lsr r9
   261d4:	andeq	ip, r2, r8, ror fp
   261d8:	andeq	ip, r2, r0, ror #23
   261dc:			; <UNDEFINED> instruction: 0x000005b5
   261e0:	andeq	ip, r2, r0, lsl r9
   261e4:	andeq	ip, r2, r4, asr fp
   261e8:			; <UNDEFINED> instruction: 0x0002cbbc
   261ec:			; <UNDEFINED> instruction: 0x000005b2
   261f0:	andeq	ip, r2, ip, ror #17
   261f4:	andeq	ip, r2, r0, lsr fp
   261f8:	muleq	r2, r8, fp
   261fc:	andeq	r0, r0, r7, asr #11
   26200:	andeq	ip, r2, r8, asr #17
   26204:	andeq	ip, r2, ip, lsl #22
   26208:	andeq	ip, r2, r4, ror fp
   2620c:	andeq	r0, r0, r1, asr #11
   26210:	andeq	r0, r0, r0, lsr #1
   26214:	ldrdeq	sp, [r2], -r8
   26218:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   2621c:	andeq	sl, r1, ip, asr #5
   26220:	andeq	ip, r2, r0, ror r8
   26224:	andeq	r2, r2, ip, lsr #13
   26228:	andeq	ip, r2, ip, asr #16
   2622c:	muleq	r2, r0, sl
   26230:	strdeq	ip, [r2], -r8
   26234:	andeq	r0, r0, sl, asr #12
   26238:	andeq	ip, r2, r8, lsr #16
   2623c:	andeq	ip, r2, ip, ror #20
   26240:	ldrdeq	ip, [r2], -r4
   26244:			; <UNDEFINED> instruction: 0x000006b4
   26248:	andeq	ip, r2, r4, lsl #16
   2624c:	andeq	ip, r2, r8, asr #20
   26250:			; <UNDEFINED> instruction: 0x0002cab0
   26254:	muleq	r0, lr, r5
   26258:	andeq	ip, r2, r0, ror #15
   2625c:	andeq	ip, r2, r4, lsr #20
   26260:	andeq	ip, r2, ip, lsl #21
   26264:			; <UNDEFINED> instruction: 0x0002c7bc
   26268:	andeq	ip, r2, r0, lsl #20
   2626c:	andeq	ip, r2, r8, ror #20
   26270:	andeq	r0, r0, sl, asr r5
   26274:	muleq	r2, r8, r7
   26278:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   2627c:	andeq	sl, r1, r0, lsr #10
   26280:	andeq	r0, r0, r9, asr #10
   26284:	andeq	ip, r2, r4, ror r7
   26288:			; <UNDEFINED> instruction: 0x0002c9b8
   2628c:	andeq	ip, r2, r0, lsr #20
   26290:	andeq	r0, r0, pc, lsr r5
   26294:	andeq	ip, r2, r0, asr r7
   26298:	muleq	r2, r4, r9
   2629c:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   262a0:	andeq	r0, r0, sp, ror #12
   262a4:	andeq	ip, r2, ip, lsr #14
   262a8:	andeq	ip, r2, r0, ror r9
   262ac:	ldrdeq	ip, [r2], -r8
   262b0:	andeq	r0, r0, sl, asr r6
   262b4:	andeq	ip, r2, r8, lsl #14
   262b8:	andeq	ip, r2, ip, asr #18
   262bc:			; <UNDEFINED> instruction: 0x0002c9b4
   262c0:	andeq	r0, r0, lr, asr r6
   262c4:	andeq	ip, r2, r4, ror #13
   262c8:	andeq	ip, r2, r8, lsr #18
   262cc:	muleq	r2, r0, r9
   262d0:			; <UNDEFINED> instruction: 0x000004b5
   262d4:	andeq	ip, r2, r0, asr #13
   262d8:	andeq	ip, r2, r4, lsl #18
   262dc:	andeq	ip, r2, ip, ror #18
   262e0:			; <UNDEFINED> instruction: 0x000004ba
   262e4:	muleq	r2, ip, r6
   262e8:	andeq	ip, r2, r0, ror #17
   262ec:	andeq	ip, r2, r8, asr #18
   262f0:	andeq	r0, r0, r1, lsl #13
   262f4:	andeq	ip, r2, r8, ror r6
   262f8:			; <UNDEFINED> instruction: 0x0002c8bc
   262fc:	andeq	ip, r2, r4, lsr #18
   26300:	andeq	r0, r0, sp, ror r6
   26304:	andeq	ip, r2, r4, asr r6
   26308:	muleq	r2, r8, r8
   2630c:	andeq	ip, r2, r0, lsl #18
   26310:	ldrdeq	r0, [r0], -fp
   26314:	andeq	ip, r2, r0, lsr r6
   26318:	andeq	ip, r2, r4, ror r8
   2631c:	andeq	sl, r1, r4, asr #24
   26320:	andeq	r0, r0, lr, ror #10
   26324:	andeq	ip, r2, ip, lsl #12
   26328:	andeq	ip, r2, r0, asr r8
   2632c:			; <UNDEFINED> instruction: 0x0002c8b8
   26330:	andeq	r0, r0, r6, lsr r5
   26334:	andeq	ip, r2, r8, ror #11
   26338:	andeq	ip, r2, ip, lsr #16
   2633c:	muleq	r2, r4, r8
   26340:	andeq	r0, r0, r3, asr #9
   26344:	subs	r2, r2, ip
   26348:	ldr	r1, [sp, #8]
   2634c:	sbc	r3, r3, ip, asr #31
   26350:	mov	r0, r4
   26354:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26358:	ldr	r3, [r4, #220]	; 0xdc
   2635c:	ldr	r1, [sp, #44]	; 0x2c
   26360:	mov	r8, r7
   26364:	add	r3, r3, #1
   26368:	str	r3, [r4, #220]	; 0xdc
   2636c:	add	r6, r6, #1
   26370:	cmp	r6, r1
   26374:	bge	263ec <__flatcc_fb_gen_c_json_parser@@Base+0x14ac>
   26378:	ldr	r3, [sp, #48]	; 0x30
   2637c:	add	r3, r3, r6, lsl #4
   26380:	ldr	r3, [r3, #8]
   26384:	ldrh	r2, [r3, #72]	; 0x48
   26388:	tst	r2, #4
   2638c:	bne	2636c <__flatcc_fb_gen_c_json_parser@@Base+0x142c>
   26390:	ldrh	r0, [r3, #24]
   26394:	sub	r0, r0, #14
   26398:	cmp	r0, #1
   2639c:	movhi	ip, r7
   263a0:	ldrls	r0, [r3, #16]
   263a4:	ldrhls	ip, [r0, #8]
   263a8:	subls	ip, ip, #4
   263ac:	clzls	ip, ip
   263b0:	lsrls	ip, ip, #5
   263b4:	tst	r2, #256	; 0x100
   263b8:	beq	2636c <__flatcc_fb_gen_c_json_parser@@Base+0x142c>
   263bc:	cmp	r8, #0
   263c0:	ldrd	r2, [r3, #96]	; 0x60
   263c4:	bne	26344 <__flatcc_fb_gen_c_json_parser@@Base+0x1404>
   263c8:	subs	r2, r2, ip
   263cc:	mov	r1, sl
   263d0:	sbc	r3, r3, ip, asr #31
   263d4:	mov	r0, r4
   263d8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   263dc:	ldr	r1, [sp, #44]	; 0x2c
   263e0:	add	r6, r6, #1
   263e4:	cmp	r6, r1
   263e8:	blt	26378 <__flatcc_fb_gen_c_json_parser@@Base+0x1438>
   263ec:	cmp	r8, #0
   263f0:	bne	26468 <__flatcc_fb_gen_c_json_parser@@Base+0x1528>
   263f4:	ldr	r3, [r4, #220]	; 0xdc
   263f8:	cmp	r3, #0
   263fc:	beq	26b54 <__flatcc_fb_gen_c_json_parser@@Base+0x1c14>
   26400:	ldr	r1, [pc, #-884]	; 26094 <__flatcc_fb_gen_c_json_parser@@Base+0x1154>
   26404:	sub	r3, r3, #1
   26408:	str	r3, [r4, #220]	; 0xdc
   2640c:	add	r1, pc, r1
   26410:	mov	r0, r4
   26414:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26418:	ldr	r3, [r4, #220]	; 0xdc
   2641c:	ldr	r1, [pc, #-908]	; 26098 <__flatcc_fb_gen_c_json_parser@@Base+0x1158>
   26420:	add	r3, r3, #1
   26424:	str	r3, [r4, #220]	; 0xdc
   26428:	add	r1, pc, r1
   2642c:	mov	r0, r4
   26430:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26434:	ldr	r1, [pc, #-928]	; 2609c <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   26438:	mov	r0, r4
   2643c:	add	r1, pc, r1
   26440:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26444:	ldr	r3, [r4, #220]	; 0xdc
   26448:	cmp	r3, #0
   2644c:	beq	26b30 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf0>
   26450:	ldr	r1, [pc, #-952]	; 260a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1160>
   26454:	sub	r3, r3, #1
   26458:	str	r3, [r4, #220]	; 0xdc
   2645c:	add	r1, pc, r1
   26460:	mov	r0, r4
   26464:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26468:	ldr	r3, [sp, #68]	; 0x44
   2646c:	cmp	r3, #0
   26470:	bne	26644 <__flatcc_fb_gen_c_json_parser@@Base+0x1704>
   26474:	ldr	r1, [pc, #-984]	; 260a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1164>
   26478:	mov	r0, r4
   2647c:	add	r1, pc, r1
   26480:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26484:	ldr	r1, [pc, #-996]	; 260a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1168>
   26488:	mov	r0, r4
   2648c:	add	r1, pc, r1
   26490:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26494:	ldr	r2, [r4, #220]	; 0xdc
   26498:	ldr	r1, [pc, #-1012]	; 260ac <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   2649c:	mov	r3, #0
   264a0:	str	r2, [r4, #228]	; 0xe4
   264a4:	str	r3, [r4, #220]	; 0xdc
   264a8:	add	r1, pc, r1
   264ac:	mov	r0, r4
   264b0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   264b4:	ldr	r3, [r4, #228]	; 0xe4
   264b8:	ldr	r1, [pc, #-1040]	; 260b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1170>
   264bc:	str	r3, [r4, #220]	; 0xdc
   264c0:	add	r1, pc, r1
   264c4:	mov	r0, r4
   264c8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   264cc:	ldr	r3, [r4, #220]	; 0xdc
   264d0:	cmp	r3, #0
   264d4:	beq	26b9c <__flatcc_fb_gen_c_json_parser@@Base+0x1c5c>
   264d8:	ldr	r7, [pc, #-1068]	; 260b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1174>
   264dc:	ldr	r6, [pc, #-1068]	; 260b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1178>
   264e0:	sub	r3, r3, #1
   264e4:	add	r7, pc, r7
   264e8:	str	r3, [r4, #220]	; 0xdc
   264ec:	mov	r1, r7
   264f0:	mov	r0, r4
   264f4:	add	r6, pc, r6
   264f8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   264fc:	mov	r1, r6
   26500:	mov	r0, r4
   26504:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26508:	ldr	r1, [pc, #-1108]	; 260bc <__flatcc_fb_gen_c_json_parser@@Base+0x117c>
   2650c:	mov	r2, r5
   26510:	add	r1, pc, r1
   26514:	mov	r0, r4
   26518:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2651c:	ldr	r1, [pc, #-1124]	; 260c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1180>
   26520:	mov	r0, r4
   26524:	add	r1, pc, r1
   26528:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2652c:	ldr	r3, [r4, #220]	; 0xdc
   26530:	ldr	r1, [pc, #-1140]	; 260c4 <__flatcc_fb_gen_c_json_parser@@Base+0x1184>
   26534:	add	r3, r3, #1
   26538:	str	r3, [r4, #220]	; 0xdc
   2653c:	mov	r2, r5
   26540:	add	r1, pc, r1
   26544:	mov	r0, r4
   26548:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2654c:	ldr	r3, [r4, #220]	; 0xdc
   26550:	cmp	r3, #0
   26554:	beq	26b78 <__flatcc_fb_gen_c_json_parser@@Base+0x1c38>
   26558:	sub	r3, r3, #1
   2655c:	str	r3, [r4, #220]	; 0xdc
   26560:	mov	r1, r7
   26564:	mov	r0, r4
   26568:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2656c:	mov	r0, r4
   26570:	mov	r1, r6
   26574:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26578:	ldr	r0, [sp, #48]	; 0x30
   2657c:	cmp	r0, #0
   26580:	beq	25344 <__flatcc_fb_gen_c_json_parser@@Base+0x404>
   26584:	bl	13fcc <free@plt>
   26588:	b	25344 <__flatcc_fb_gen_c_json_parser@@Base+0x404>
   2658c:	ldr	r1, [pc, #-1228]	; 260c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1188>
   26590:	mov	r0, r4
   26594:	add	r1, pc, r1
   26598:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2659c:	ldr	r1, [pc, #-1240]	; 260cc <__flatcc_fb_gen_c_json_parser@@Base+0x118c>
   265a0:	mov	r0, r4
   265a4:	add	r1, pc, r1
   265a8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   265ac:	ldr	r3, [sp, #44]	; 0x2c
   265b0:	mov	r2, #0
   265b4:	sub	r3, r3, #1
   265b8:	str	r2, [sp]
   265bc:	mov	r1, r9
   265c0:	mov	r0, r4
   265c4:	bl	218ec <__flatcc_fb_gen_c_verifier@@Base+0x98c>
   265c8:	b	259d0 <__flatcc_fb_gen_c_json_parser@@Base+0xa90>
   265cc:	ldr	r3, [sp, #44]	; 0x2c
   265d0:	cmp	r3, #0
   265d4:	ble	25898 <__flatcc_fb_gen_c_json_parser@@Base+0x958>
   265d8:	ldr	r2, [pc, #-976]	; 26210 <__flatcc_fb_gen_c_json_parser@@Base+0x12d0>
   265dc:	ldr	r1, [sp, #36]	; 0x24
   265e0:	ldr	r3, [pc, #-1304]	; 260d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1190>
   265e4:	ldr	r4, [pc, #-1304]	; 260d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1194>
   265e8:	ldr	r1, [r1, r2]
   265ec:	add	r3, pc, r3
   265f0:	str	r3, [sp]
   265f4:	ldr	r0, [r1]
   265f8:	ldr	r1, [pc, #-1320]	; 260d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1198>
   265fc:	add	r4, pc, r4
   26600:	mov	r2, r4
   26604:	ldr	r3, [pc, #-1320]	; 260e4 <__flatcc_fb_gen_c_json_parser@@Base+0x11a4>
   26608:	add	r1, pc, r1
   2660c:	bl	1408c <fprintf@plt>
   26610:	ldr	r3, [pc, #-1340]	; 260dc <__flatcc_fb_gen_c_json_parser@@Base+0x119c>
   26614:	ldr	r0, [pc, #-1340]	; 260e0 <__flatcc_fb_gen_c_json_parser@@Base+0x11a0>
   26618:	add	r3, pc, r3
   2661c:	mov	r1, r4
   26620:	add	r3, r3, #280	; 0x118
   26624:	ldr	r2, [pc, #-1352]	; 260e4 <__flatcc_fb_gen_c_json_parser@@Base+0x11a4>
   26628:	add	r0, pc, r0
   2662c:	bl	14140 <__assert_fail@plt>
   26630:	ldr	r1, [pc, #-1360]	; 260e8 <__flatcc_fb_gen_c_json_parser@@Base+0x11a8>
   26634:	mov	r0, r4
   26638:	add	r1, pc, r1
   2663c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26640:	b	25dac <__flatcc_fb_gen_c_json_parser@@Base+0xe6c>
   26644:	ldr	r1, [pc, #-1376]	; 260ec <__flatcc_fb_gen_c_json_parser@@Base+0x11ac>
   26648:	mov	r0, r4
   2664c:	add	r1, pc, r1
   26650:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26654:	b	26474 <__flatcc_fb_gen_c_json_parser@@Base+0x1534>
   26658:	ldr	r1, [pc, #-1392]	; 260f0 <__flatcc_fb_gen_c_json_parser@@Base+0x11b0>
   2665c:	asr	r3, r2, #31
   26660:	add	r1, pc, r1
   26664:	mov	r0, r4
   26668:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2666c:	b	25de0 <__flatcc_fb_gen_c_json_parser@@Base+0xea0>
   26670:	ldr	r1, [pc, #-1412]	; 260f4 <__flatcc_fb_gen_c_json_parser@@Base+0x11b4>
   26674:	mov	r0, r4
   26678:	add	r1, pc, r1
   2667c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26680:	ldr	r1, [pc, #-1424]	; 260f8 <__flatcc_fb_gen_c_json_parser@@Base+0x11b8>
   26684:	mov	r0, r4
   26688:	add	r1, pc, r1
   2668c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26690:	b	25e54 <__flatcc_fb_gen_c_json_parser@@Base+0xf14>
   26694:	ldr	r1, [pc, #-1440]	; 260fc <__flatcc_fb_gen_c_json_parser@@Base+0x11bc>
   26698:	mov	r0, r4
   2669c:	add	r1, pc, r1
   266a0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   266a4:	ldr	r1, [pc, #-1452]	; 26100 <__flatcc_fb_gen_c_json_parser@@Base+0x11c0>
   266a8:	mov	r0, r4
   266ac:	add	r1, pc, r1
   266b0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   266b4:	ldr	r1, [pc, #-1464]	; 26104 <__flatcc_fb_gen_c_json_parser@@Base+0x11c4>
   266b8:	mov	r0, r4
   266bc:	add	r1, pc, r1
   266c0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   266c4:	ldr	r1, [pc, #-1476]	; 26108 <__flatcc_fb_gen_c_json_parser@@Base+0x11c8>
   266c8:	mov	r0, r4
   266cc:	add	r1, pc, r1
   266d0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   266d4:	ldr	r1, [pc, #-1488]	; 2610c <__flatcc_fb_gen_c_json_parser@@Base+0x11cc>
   266d8:	mov	r0, r4
   266dc:	add	r1, pc, r1
   266e0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   266e4:	sub	r3, r8, #1
   266e8:	mov	r2, r6
   266ec:	mov	r1, r9
   266f0:	mov	r0, r4
   266f4:	str	r6, [sp]
   266f8:	bl	218ec <__flatcc_fb_gen_c_verifier@@Base+0x98c>
   266fc:	ldr	r1, [pc, #-1524]	; 26110 <__flatcc_fb_gen_c_json_parser@@Base+0x11d0>
   26700:	mov	r0, r4
   26704:	add	r1, pc, r1
   26708:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2670c:	ldr	r3, [r4, #220]	; 0xdc
   26710:	cmp	r3, #0
   26714:	beq	26e7c <__flatcc_fb_gen_c_json_parser@@Base+0x1f3c>
   26718:	ldr	r1, [pc, #-1548]	; 26114 <__flatcc_fb_gen_c_json_parser@@Base+0x11d4>
   2671c:	sub	r3, r3, #1
   26720:	str	r3, [r4, #220]	; 0xdc
   26724:	add	r1, pc, r1
   26728:	mov	r0, r4
   2672c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26730:	b	255f0 <__flatcc_fb_gen_c_json_parser@@Base+0x6b0>
   26734:	ldr	r3, [sp, #44]	; 0x2c
   26738:	cmp	r3, #0
   2673c:	bgt	26bc0 <__flatcc_fb_gen_c_json_parser@@Base+0x1c80>
   26740:	ldr	r2, [pc, #-1584]	; 26118 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   26744:	ldr	r3, [pc, #-1584]	; 2611c <__flatcc_fb_gen_c_json_parser@@Base+0x11dc>
   26748:	add	r2, pc, r2
   2674c:	add	r3, pc, r3
   26750:	str	fp, [sp, #60]	; 0x3c
   26754:	str	r0, [sp, #64]	; 0x40
   26758:	str	r0, [sp, #68]	; 0x44
   2675c:	str	r2, [sp, #52]	; 0x34
   26760:	str	r3, [sp, #56]	; 0x38
   26764:	b	25d00 <__flatcc_fb_gen_c_json_parser@@Base+0xdc0>
   26768:	mov	r2, #220	; 0xdc
   2676c:	mov	r1, r7
   26770:	mov	r0, r5
   26774:	bl	140a4 <memset@plt>
   26778:	mov	r2, r5
   2677c:	mov	r1, r6
   26780:	ldr	r0, [r6, #12]
   26784:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   26788:	ldr	r3, [r4, #208]	; 0xd0
   2678c:	ldr	r1, [pc, #-1652]	; 26120 <__flatcc_fb_gen_c_json_parser@@Base+0x11e0>
   26790:	mov	r0, r4
   26794:	ldr	r2, [r3, #160]	; 0xa0
   26798:	add	r1, pc, r1
   2679c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   267a0:	ldr	r3, [r4, #220]	; 0xdc
   267a4:	ldr	r1, [pc, #-1672]	; 26124 <__flatcc_fb_gen_c_json_parser@@Base+0x11e4>
   267a8:	add	r3, r3, #2
   267ac:	str	r3, [r4, #220]	; 0xdc
   267b0:	add	r1, pc, r1
   267b4:	mov	r0, r4
   267b8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   267bc:	ldr	r3, [r4, #220]	; 0xdc
   267c0:	cmp	r3, #0
   267c4:	beq	26c18 <__flatcc_fb_gen_c_json_parser@@Base+0x1cd8>
   267c8:	cmp	r3, #1
   267cc:	streq	r7, [r4, #220]	; 0xdc
   267d0:	beq	26c18 <__flatcc_fb_gen_c_json_parser@@Base+0x1cd8>
   267d4:	ldr	r1, [pc, #-1716]	; 26128 <__flatcc_fb_gen_c_json_parser@@Base+0x11e8>
   267d8:	sub	r3, r3, #2
   267dc:	str	r3, [r4, #220]	; 0xdc
   267e0:	add	r1, pc, r1
   267e4:	mov	r0, r4
   267e8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   267ec:	ldr	r3, [r4, #220]	; 0xdc
   267f0:	ldr	r1, [pc, #-1740]	; 2612c <__flatcc_fb_gen_c_json_parser@@Base+0x11ec>
   267f4:	add	r3, r3, #1
   267f8:	str	r3, [r4, #220]	; 0xdc
   267fc:	add	r1, pc, r1
   26800:	mov	r0, r4
   26804:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26808:	ldr	r1, [pc, #-1760]	; 26130 <__flatcc_fb_gen_c_json_parser@@Base+0x11f0>
   2680c:	mov	r0, r4
   26810:	add	r1, pc, r1
   26814:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26818:	ldr	r1, [pc, #-1772]	; 26134 <__flatcc_fb_gen_c_json_parser@@Base+0x11f4>
   2681c:	mov	r0, r4
   26820:	add	r1, pc, r1
   26824:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26828:	ldr	r1, [pc, #-1784]	; 26138 <__flatcc_fb_gen_c_json_parser@@Base+0x11f8>
   2682c:	mov	r0, r4
   26830:	add	r1, pc, r1
   26834:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26838:	ldr	r1, [pc, #-1796]	; 2613c <__flatcc_fb_gen_c_json_parser@@Base+0x11fc>
   2683c:	mov	r0, r4
   26840:	add	r1, pc, r1
   26844:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26848:	ldr	r2, [r4, #208]	; 0xd0
   2684c:	ldrh	r3, [r2, #16]
   26850:	cmp	r3, #2
   26854:	beq	26a38 <__flatcc_fb_gen_c_json_parser@@Base+0x1af8>
   26858:	ldr	r1, [pc, #-1824]	; 26140 <__flatcc_fb_gen_c_json_parser@@Base+0x1200>
   2685c:	mov	r0, r4
   26860:	add	r1, pc, r1
   26864:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26868:	ldr	r1, [pc, #-1836]	; 26144 <__flatcc_fb_gen_c_json_parser@@Base+0x1204>
   2686c:	mov	r2, r5
   26870:	add	r1, pc, r1
   26874:	mov	r0, r4
   26878:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2687c:	ldr	r1, [pc, #-1852]	; 26148 <__flatcc_fb_gen_c_json_parser@@Base+0x1208>
   26880:	mov	r0, r4
   26884:	add	r1, pc, r1
   26888:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2688c:	ldr	r3, [r4, #220]	; 0xdc
   26890:	ldr	r1, [pc, #-1868]	; 2614c <__flatcc_fb_gen_c_json_parser@@Base+0x120c>
   26894:	add	r3, r3, #1
   26898:	str	r3, [r4, #220]	; 0xdc
   2689c:	add	r1, pc, r1
   268a0:	mov	r0, r4
   268a4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   268a8:	ldr	r3, [r4, #220]	; 0xdc
   268ac:	cmp	r3, #0
   268b0:	beq	26d38 <__flatcc_fb_gen_c_json_parser@@Base+0x1df8>
   268b4:	ldr	r5, [pc, #-1900]	; 26150 <__flatcc_fb_gen_c_json_parser@@Base+0x1210>
   268b8:	sub	r3, r3, #1
   268bc:	add	r5, pc, r5
   268c0:	str	r3, [r4, #220]	; 0xdc
   268c4:	mov	r1, r5
   268c8:	mov	r0, r4
   268cc:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   268d0:	ldr	r1, [pc, #-1924]	; 26154 <__flatcc_fb_gen_c_json_parser@@Base+0x1214>
   268d4:	mov	r0, r4
   268d8:	add	r1, pc, r1
   268dc:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   268e0:	ldr	r1, [pc, #-1936]	; 26158 <__flatcc_fb_gen_c_json_parser@@Base+0x1218>
   268e4:	mov	r0, r4
   268e8:	add	r1, pc, r1
   268ec:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   268f0:	ldr	r1, [pc, #-1948]	; 2615c <__flatcc_fb_gen_c_json_parser@@Base+0x121c>
   268f4:	mov	r0, r4
   268f8:	add	r1, pc, r1
   268fc:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26900:	ldr	r3, [r4, #220]	; 0xdc
   26904:	cmp	r3, #0
   26908:	beq	26d5c <__flatcc_fb_gen_c_json_parser@@Base+0x1e1c>
   2690c:	sub	r3, r3, #1
   26910:	mov	r1, r5
   26914:	mov	r0, r4
   26918:	str	r3, [r4, #220]	; 0xdc
   2691c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26920:	ldr	r1, [pc, #-1992]	; 26160 <__flatcc_fb_gen_c_json_parser@@Base+0x1220>
   26924:	mov	r0, r4
   26928:	add	r1, pc, r1
   2692c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26930:	b	25808 <__flatcc_fb_gen_c_json_parser@@Base+0x8c8>
   26934:	ldr	r1, [pc, #-2008]	; 26164 <__flatcc_fb_gen_c_json_parser@@Base+0x1224>
   26938:	mov	r0, r4
   2693c:	add	r1, pc, r1
   26940:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26944:	ldr	r1, [pc, #-2020]	; 26168 <__flatcc_fb_gen_c_json_parser@@Base+0x1228>
   26948:	mov	r0, r4
   2694c:	add	r1, pc, r1
   26950:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26954:	ldr	r1, [pc, #-2032]	; 2616c <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   26958:	mov	r0, r4
   2695c:	add	r1, pc, r1
   26960:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26964:	ldr	r1, [pc, #-2044]	; 26170 <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   26968:	mov	r0, r4
   2696c:	add	r1, pc, r1
   26970:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26974:	ldr	r1, [pc, #-2056]	; 26174 <__flatcc_fb_gen_c_json_parser@@Base+0x1234>
   26978:	mov	r0, r4
   2697c:	add	r1, pc, r1
   26980:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26984:	ldr	r1, [pc, #-2068]	; 26178 <__flatcc_fb_gen_c_json_parser@@Base+0x1238>
   26988:	mov	r0, r4
   2698c:	add	r1, pc, r1
   26990:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26994:	ldr	r1, [pc, #-2080]	; 2617c <__flatcc_fb_gen_c_json_parser@@Base+0x123c>
   26998:	mov	r0, r4
   2699c:	add	r1, pc, r1
   269a0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   269a4:	ldr	r1, [pc, #-2092]	; 26180 <__flatcc_fb_gen_c_json_parser@@Base+0x1240>
   269a8:	mov	r0, r4
   269ac:	add	r1, pc, r1
   269b0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   269b4:	ldr	r1, [pc, #-2104]	; 26184 <__flatcc_fb_gen_c_json_parser@@Base+0x1244>
   269b8:	mov	r0, r4
   269bc:	add	r1, pc, r1
   269c0:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   269c4:	ldr	r3, [r4, #208]	; 0xd0
   269c8:	ldr	r1, [pc, #-2120]	; 26188 <__flatcc_fb_gen_c_json_parser@@Base+0x1248>
   269cc:	mov	r0, r4
   269d0:	ldr	r2, [r3, #160]	; 0xa0
   269d4:	add	r1, pc, r1
   269d8:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   269dc:	ldr	r3, [r4, #220]	; 0xdc
   269e0:	ldr	r1, [pc, #-2140]	; 2618c <__flatcc_fb_gen_c_json_parser@@Base+0x124c>
   269e4:	add	r3, r3, #2
   269e8:	str	r3, [r4, #220]	; 0xdc
   269ec:	add	r1, pc, r1
   269f0:	mov	r0, r4
   269f4:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   269f8:	ldr	r3, [r4, #220]	; 0xdc
   269fc:	cmp	r3, #0
   26a00:	beq	26c3c <__flatcc_fb_gen_c_json_parser@@Base+0x1cfc>
   26a04:	cmp	r3, #1
   26a08:	moveq	r3, #0
   26a0c:	streq	r3, [r4, #220]	; 0xdc
   26a10:	beq	26c3c <__flatcc_fb_gen_c_json_parser@@Base+0x1cfc>
   26a14:	sub	r3, r3, #2
   26a18:	str	r3, [r4, #220]	; 0xdc
   26a1c:	mov	r1, r8
   26a20:	mov	r0, r4
   26a24:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26a28:	ldr	r6, [r4, #208]	; 0xd0
   26a2c:	b	2504c <__flatcc_fb_gen_c_json_parser@@Base+0x10c>
   26a30:	str	r8, [sp, #48]	; 0x30
   26a34:	b	2550c <__flatcc_fb_gen_c_json_parser@@Base+0x5cc>
   26a38:	ldr	r1, [pc, #-2224]	; 26190 <__flatcc_fb_gen_c_json_parser@@Base+0x1250>
   26a3c:	ldr	r3, [r2, #8]
   26a40:	add	r1, pc, r1
   26a44:	ldr	r2, [r2, #12]
   26a48:	mov	r0, r4
   26a4c:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26a50:	b	26868 <__flatcc_fb_gen_c_json_parser@@Base+0x1928>
   26a54:	ldr	r1, [pc, #-2248]	; 26194 <__flatcc_fb_gen_c_json_parser@@Base+0x1254>
   26a58:	ldr	r3, [r2, #8]
   26a5c:	add	r1, pc, r1
   26a60:	ldr	r2, [r2, #12]
   26a64:	mov	r0, r4
   26a68:	bl	212f8 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   26a6c:	b	25740 <__flatcc_fb_gen_c_json_parser@@Base+0x800>
   26a70:	ldr	r3, [sp, #8]
   26a74:	cmp	r8, #0
   26a78:	str	r3, [sp, #48]	; 0x30
   26a7c:	ble	2550c <__flatcc_fb_gen_c_json_parser@@Base+0x5cc>
   26a80:	mov	r0, r5
   26a84:	bl	23390 <__flatcc_fb_gen_c_verifier@@Base+0x2430>
   26a88:	ldr	r2, [pc, #-2176]	; 26210 <__flatcc_fb_gen_c_json_parser@@Base+0x12d0>
   26a8c:	ldr	r1, [sp, #36]	; 0x24
   26a90:	ldr	r3, [pc, #-2304]	; 26198 <__flatcc_fb_gen_c_json_parser@@Base+0x1258>
   26a94:	ldr	r4, [pc, #-2304]	; 2619c <__flatcc_fb_gen_c_json_parser@@Base+0x125c>
   26a98:	ldr	r1, [r1, r2]
   26a9c:	add	r3, pc, r3
   26aa0:	str	r3, [sp]
   26aa4:	ldr	r0, [r1]
   26aa8:	ldr	r1, [pc, #-2320]	; 261a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1260>
   26aac:	add	r4, pc, r4
   26ab0:	mov	r2, r4
   26ab4:	ldr	r3, [pc, #-2320]	; 261ac <__flatcc_fb_gen_c_json_parser@@Base+0x126c>
   26ab8:	add	r1, pc, r1
   26abc:	bl	1408c <fprintf@plt>
   26ac0:	ldr	r3, [pc, #-2340]	; 261a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1264>
   26ac4:	ldr	r0, [pc, #-2340]	; 261a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1268>
   26ac8:	add	r3, pc, r3
   26acc:	mov	r1, r4
   26ad0:	add	r3, r3, #348	; 0x15c
   26ad4:	ldr	r2, [pc, #-2352]	; 261ac <__flatcc_fb_gen_c_json_parser@@Base+0x126c>
   26ad8:	add	r0, pc, r0
   26adc:	bl	14140 <__assert_fail@plt>
   26ae0:	mov	r3, #0
   26ae4:	str	r3, [r4, #220]	; 0xdc
   26ae8:	ldr	r3, [pc, #-2368]	; 261b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1270>
   26aec:	ldr	r1, [pc, #-2368]	; 261b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1274>
   26af0:	ldr	r0, [pc, #-2368]	; 261b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1278>
   26af4:	add	r3, pc, r3
   26af8:	ldr	r2, [pc, #-2372]	; 261bc <__flatcc_fb_gen_c_json_parser@@Base+0x127c>
   26afc:	add	r3, r3, #252	; 0xfc
   26b00:	add	r1, pc, r1
   26b04:	add	r0, pc, r0
   26b08:	bl	14140 <__assert_fail@plt>
   26b0c:	ldr	r3, [pc, #-2388]	; 261c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1280>
   26b10:	ldr	r1, [pc, #-2388]	; 261c4 <__flatcc_fb_gen_c_json_parser@@Base+0x1284>
   26b14:	ldr	r0, [pc, #-2388]	; 261c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1288>
   26b18:	add	r3, pc, r3
   26b1c:	ldr	r2, [pc, #-2392]	; 261cc <__flatcc_fb_gen_c_json_parser@@Base+0x128c>
   26b20:	add	r3, r3, #280	; 0x118
   26b24:	add	r1, pc, r1
   26b28:	add	r0, pc, r0
   26b2c:	bl	14140 <__assert_fail@plt>
   26b30:	ldr	r3, [pc, #-2408]	; 261d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1290>
   26b34:	ldr	r1, [pc, #-2408]	; 261d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1294>
   26b38:	ldr	r0, [pc, #-2408]	; 261d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1298>
   26b3c:	add	r3, pc, r3
   26b40:	ldr	r2, [pc, #-2412]	; 261dc <__flatcc_fb_gen_c_json_parser@@Base+0x129c>
   26b44:	add	r3, r3, #328	; 0x148
   26b48:	add	r1, pc, r1
   26b4c:	add	r0, pc, r0
   26b50:	bl	14140 <__assert_fail@plt>
   26b54:	ldr	r3, [pc, #-2428]	; 261e0 <__flatcc_fb_gen_c_json_parser@@Base+0x12a0>
   26b58:	ldr	r1, [pc, #-2428]	; 261e4 <__flatcc_fb_gen_c_json_parser@@Base+0x12a4>
   26b5c:	ldr	r0, [pc, #-2428]	; 261e8 <__flatcc_fb_gen_c_json_parser@@Base+0x12a8>
   26b60:	add	r3, pc, r3
   26b64:	ldr	r2, [pc, #-2432]	; 261ec <__flatcc_fb_gen_c_json_parser@@Base+0x12ac>
   26b68:	add	r3, r3, #328	; 0x148
   26b6c:	add	r1, pc, r1
   26b70:	add	r0, pc, r0
   26b74:	bl	14140 <__assert_fail@plt>
   26b78:	ldr	r3, [pc, #-2448]	; 261f0 <__flatcc_fb_gen_c_json_parser@@Base+0x12b0>
   26b7c:	ldr	r1, [pc, #-2448]	; 261f4 <__flatcc_fb_gen_c_json_parser@@Base+0x12b4>
   26b80:	ldr	r0, [pc, #-2448]	; 261f8 <__flatcc_fb_gen_c_json_parser@@Base+0x12b8>
   26b84:	add	r3, pc, r3
   26b88:	ldr	r2, [pc, #-2452]	; 261fc <__flatcc_fb_gen_c_json_parser@@Base+0x12bc>
   26b8c:	add	r3, r3, #328	; 0x148
   26b90:	add	r1, pc, r1
   26b94:	add	r0, pc, r0
   26b98:	bl	14140 <__assert_fail@plt>
   26b9c:	ldr	r3, [pc, #-2468]	; 26200 <__flatcc_fb_gen_c_json_parser@@Base+0x12c0>
   26ba0:	ldr	r1, [pc, #-2468]	; 26204 <__flatcc_fb_gen_c_json_parser@@Base+0x12c4>
   26ba4:	ldr	r0, [pc, #-2468]	; 26208 <__flatcc_fb_gen_c_json_parser@@Base+0x12c8>
   26ba8:	add	r3, pc, r3
   26bac:	ldr	r2, [pc, #-2472]	; 2620c <__flatcc_fb_gen_c_json_parser@@Base+0x12cc>
   26bb0:	add	r3, r3, #328	; 0x148
   26bb4:	add	r1, pc, r1
   26bb8:	add	r0, pc, r0
   26bbc:	bl	14140 <__assert_fail@plt>
   26bc0:	ldr	r2, [pc, #-2488]	; 26210 <__flatcc_fb_gen_c_json_parser@@Base+0x12d0>
   26bc4:	ldr	r1, [sp, #36]	; 0x24
   26bc8:	ldr	r3, [pc, #-2492]	; 26214 <__flatcc_fb_gen_c_json_parser@@Base+0x12d4>
   26bcc:	ldr	r4, [pc, #-2492]	; 26218 <__flatcc_fb_gen_c_json_parser@@Base+0x12d8>
   26bd0:	ldr	r1, [r1, r2]
   26bd4:	add	r3, pc, r3
   26bd8:	str	r3, [sp]
   26bdc:	ldr	r0, [r1]
   26be0:	ldr	r1, [pc, #-2508]	; 2621c <__flatcc_fb_gen_c_json_parser@@Base+0x12dc>
   26be4:	add	r4, pc, r4
   26be8:	mov	r2, r4
   26bec:	mov	r3, #1392	; 0x570
   26bf0:	add	r1, pc, r1
   26bf4:	bl	1408c <fprintf@plt>
   26bf8:	ldr	r3, [pc, #-2528]	; 26220 <__flatcc_fb_gen_c_json_parser@@Base+0x12e0>
   26bfc:	ldr	r0, [pc, #-2528]	; 26224 <__flatcc_fb_gen_c_json_parser@@Base+0x12e4>
   26c00:	add	r3, pc, r3
   26c04:	mov	r1, r4
   26c08:	add	r3, r3, #328	; 0x148
   26c0c:	mov	r2, #1392	; 0x570
   26c10:	add	r0, pc, r0
   26c14:	bl	14140 <__assert_fail@plt>
   26c18:	ldr	r3, [pc, #-2552]	; 26228 <__flatcc_fb_gen_c_json_parser@@Base+0x12e8>
   26c1c:	ldr	r1, [pc, #-2552]	; 2622c <__flatcc_fb_gen_c_json_parser@@Base+0x12ec>
   26c20:	ldr	r0, [pc, #-2552]	; 26230 <__flatcc_fb_gen_c_json_parser@@Base+0x12f0>
   26c24:	add	r3, pc, r3
   26c28:	ldr	r2, [pc, #-2556]	; 26234 <__flatcc_fb_gen_c_json_parser@@Base+0x12f4>
   26c2c:	add	r3, r3, #372	; 0x174
   26c30:	add	r1, pc, r1
   26c34:	add	r0, pc, r0
   26c38:	bl	14140 <__assert_fail@plt>
   26c3c:	ldr	r3, [pc, #-2572]	; 26238 <__flatcc_fb_gen_c_json_parser@@Base+0x12f8>
   26c40:	ldr	r1, [pc, #-2572]	; 2623c <__flatcc_fb_gen_c_json_parser@@Base+0x12fc>
   26c44:	ldr	r0, [pc, #-2572]	; 26240 <__flatcc_fb_gen_c_json_parser@@Base+0x1300>
   26c48:	add	r3, pc, r3
   26c4c:	ldr	r2, [pc, #-2576]	; 26244 <__flatcc_fb_gen_c_json_parser@@Base+0x1304>
   26c50:	add	r3, r3, #252	; 0xfc
   26c54:	add	r1, pc, r1
   26c58:	add	r0, pc, r0
   26c5c:	bl	14140 <__assert_fail@plt>
   26c60:	ldr	r3, [pc, #-2592]	; 26248 <__flatcc_fb_gen_c_json_parser@@Base+0x1308>
   26c64:	ldr	r1, [pc, #-2592]	; 2624c <__flatcc_fb_gen_c_json_parser@@Base+0x130c>
   26c68:	ldr	r0, [pc, #-2592]	; 26250 <__flatcc_fb_gen_c_json_parser@@Base+0x1310>
   26c6c:	add	r3, pc, r3
   26c70:	ldr	r2, [pc, #-2596]	; 26254 <__flatcc_fb_gen_c_json_parser@@Base+0x1314>
   26c74:	add	r3, r3, #328	; 0x148
   26c78:	add	r1, pc, r1
   26c7c:	add	r0, pc, r0
   26c80:	bl	14140 <__assert_fail@plt>
   26c84:	ldr	r3, [pc, #-2612]	; 26258 <__flatcc_fb_gen_c_json_parser@@Base+0x1318>
   26c88:	ldr	r1, [pc, #-2612]	; 2625c <__flatcc_fb_gen_c_json_parser@@Base+0x131c>
   26c8c:	ldr	r0, [pc, #-2612]	; 26260 <__flatcc_fb_gen_c_json_parser@@Base+0x1320>
   26c90:	add	r3, pc, r3
   26c94:	mov	r2, #1376	; 0x560
   26c98:	add	r3, r3, #308	; 0x134
   26c9c:	add	r1, pc, r1
   26ca0:	add	r0, pc, r0
   26ca4:	bl	14140 <__assert_fail@plt>
   26ca8:	ldr	r3, [pc, #-2636]	; 26264 <__flatcc_fb_gen_c_json_parser@@Base+0x1324>
   26cac:	ldr	r1, [pc, #-2636]	; 26268 <__flatcc_fb_gen_c_json_parser@@Base+0x1328>
   26cb0:	ldr	r0, [pc, #-2636]	; 2626c <__flatcc_fb_gen_c_json_parser@@Base+0x132c>
   26cb4:	add	r3, pc, r3
   26cb8:	ldr	r2, [pc, #-2640]	; 26270 <__flatcc_fb_gen_c_json_parser@@Base+0x1330>
   26cbc:	add	r3, r3, #308	; 0x134
   26cc0:	add	r1, pc, r1
   26cc4:	add	r0, pc, r0
   26cc8:	bl	14140 <__assert_fail@plt>
   26ccc:	ldr	r3, [pc, #-2656]	; 26274 <__flatcc_fb_gen_c_json_parser@@Base+0x1334>
   26cd0:	ldr	r1, [pc, #-2656]	; 26278 <__flatcc_fb_gen_c_json_parser@@Base+0x1338>
   26cd4:	ldr	r0, [pc, #-2656]	; 2627c <__flatcc_fb_gen_c_json_parser@@Base+0x133c>
   26cd8:	add	r3, pc, r3
   26cdc:	ldr	r2, [pc, #-2660]	; 26280 <__flatcc_fb_gen_c_json_parser@@Base+0x1340>
   26ce0:	add	r3, r3, #308	; 0x134
   26ce4:	add	r1, pc, r1
   26ce8:	add	r0, pc, r0
   26cec:	bl	14140 <__assert_fail@plt>
   26cf0:	ldr	r3, [pc, #-2676]	; 26284 <__flatcc_fb_gen_c_json_parser@@Base+0x1344>
   26cf4:	ldr	r1, [pc, #-2676]	; 26288 <__flatcc_fb_gen_c_json_parser@@Base+0x1348>
   26cf8:	ldr	r0, [pc, #-2676]	; 2628c <__flatcc_fb_gen_c_json_parser@@Base+0x134c>
   26cfc:	add	r3, pc, r3
   26d00:	ldr	r2, [pc, #-2680]	; 26290 <__flatcc_fb_gen_c_json_parser@@Base+0x1350>
   26d04:	add	r3, r3, #280	; 0x118
   26d08:	add	r1, pc, r1
   26d0c:	add	r0, pc, r0
   26d10:	bl	14140 <__assert_fail@plt>
   26d14:	ldr	r3, [pc, #-2696]	; 26294 <__flatcc_fb_gen_c_json_parser@@Base+0x1354>
   26d18:	ldr	r1, [pc, #-2696]	; 26298 <__flatcc_fb_gen_c_json_parser@@Base+0x1358>
   26d1c:	ldr	r0, [pc, #-2696]	; 2629c <__flatcc_fb_gen_c_json_parser@@Base+0x135c>
   26d20:	add	r3, pc, r3
   26d24:	ldr	r2, [pc, #-2700]	; 262a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1360>
   26d28:	add	r3, r3, #396	; 0x18c
   26d2c:	add	r1, pc, r1
   26d30:	add	r0, pc, r0
   26d34:	bl	14140 <__assert_fail@plt>
   26d38:	ldr	r3, [pc, #-2716]	; 262a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1364>
   26d3c:	ldr	r1, [pc, #-2716]	; 262a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1368>
   26d40:	ldr	r0, [pc, #-2716]	; 262ac <__flatcc_fb_gen_c_json_parser@@Base+0x136c>
   26d44:	add	r3, pc, r3
   26d48:	ldr	r2, [pc, #-2720]	; 262b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1370>
   26d4c:	add	r3, r3, #372	; 0x174
   26d50:	add	r1, pc, r1
   26d54:	add	r0, pc, r0
   26d58:	bl	14140 <__assert_fail@plt>
   26d5c:	ldr	r3, [pc, #-2736]	; 262b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1374>
   26d60:	ldr	r1, [pc, #-2736]	; 262b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1378>
   26d64:	ldr	r0, [pc, #-2736]	; 262bc <__flatcc_fb_gen_c_json_parser@@Base+0x137c>
   26d68:	add	r3, pc, r3
   26d6c:	ldr	r2, [pc, #-2740]	; 262c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1380>
   26d70:	add	r3, r3, #372	; 0x174
   26d74:	add	r1, pc, r1
   26d78:	add	r0, pc, r0
   26d7c:	bl	14140 <__assert_fail@plt>
   26d80:	ldr	r3, [pc, #-2756]	; 262c4 <__flatcc_fb_gen_c_json_parser@@Base+0x1384>
   26d84:	ldr	r1, [pc, #-2756]	; 262c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1388>
   26d88:	ldr	r0, [pc, #-2756]	; 262cc <__flatcc_fb_gen_c_json_parser@@Base+0x138c>
   26d8c:	add	r3, pc, r3
   26d90:	ldr	r2, [pc, #-2760]	; 262d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1390>
   26d94:	add	r3, r3, #348	; 0x15c
   26d98:	add	r1, pc, r1
   26d9c:	add	r0, pc, r0
   26da0:	bl	14140 <__assert_fail@plt>
   26da4:	ldr	r3, [pc, #-2776]	; 262d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1394>
   26da8:	ldr	r1, [pc, #-2776]	; 262d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1398>
   26dac:	ldr	r0, [pc, #-2776]	; 262dc <__flatcc_fb_gen_c_json_parser@@Base+0x139c>
   26db0:	add	r3, pc, r3
   26db4:	ldr	r2, [pc, #-2780]	; 262e0 <__flatcc_fb_gen_c_json_parser@@Base+0x13a0>
   26db8:	add	r3, r3, #348	; 0x15c
   26dbc:	add	r1, pc, r1
   26dc0:	add	r0, pc, r0
   26dc4:	bl	14140 <__assert_fail@plt>
   26dc8:	ldr	r3, [pc, #-2796]	; 262e4 <__flatcc_fb_gen_c_json_parser@@Base+0x13a4>
   26dcc:	ldr	r1, [pc, #-2796]	; 262e8 <__flatcc_fb_gen_c_json_parser@@Base+0x13a8>
   26dd0:	ldr	r0, [pc, #-2796]	; 262ec <__flatcc_fb_gen_c_json_parser@@Base+0x13ac>
   26dd4:	add	r3, pc, r3
   26dd8:	ldr	r2, [pc, #-2800]	; 262f0 <__flatcc_fb_gen_c_json_parser@@Base+0x13b0>
   26ddc:	add	r3, r3, #396	; 0x18c
   26de0:	add	r1, pc, r1
   26de4:	add	r0, pc, r0
   26de8:	bl	14140 <__assert_fail@plt>
   26dec:	ldr	r3, [pc, #-2816]	; 262f4 <__flatcc_fb_gen_c_json_parser@@Base+0x13b4>
   26df0:	ldr	r1, [pc, #-2816]	; 262f8 <__flatcc_fb_gen_c_json_parser@@Base+0x13b8>
   26df4:	ldr	r0, [pc, #-2816]	; 262fc <__flatcc_fb_gen_c_json_parser@@Base+0x13bc>
   26df8:	add	r3, pc, r3
   26dfc:	ldr	r2, [pc, #-2820]	; 26300 <__flatcc_fb_gen_c_json_parser@@Base+0x13c0>
   26e00:	add	r3, r3, #396	; 0x18c
   26e04:	add	r1, pc, r1
   26e08:	add	r0, pc, r0
   26e0c:	bl	14140 <__assert_fail@plt>
   26e10:	ldr	r3, [pc, #-2836]	; 26304 <__flatcc_fb_gen_c_json_parser@@Base+0x13c4>
   26e14:	ldr	r1, [pc, #-2836]	; 26308 <__flatcc_fb_gen_c_json_parser@@Base+0x13c8>
   26e18:	ldr	r0, [pc, #-2836]	; 2630c <__flatcc_fb_gen_c_json_parser@@Base+0x13cc>
   26e1c:	add	r3, pc, r3
   26e20:	ldr	r2, [pc, #-2840]	; 26310 <__flatcc_fb_gen_c_json_parser@@Base+0x13d0>
   26e24:	add	r3, r3, #252	; 0xfc
   26e28:	add	r1, pc, r1
   26e2c:	add	r0, pc, r0
   26e30:	bl	14140 <__assert_fail@plt>
   26e34:	ldr	r3, [pc, #-2856]	; 26314 <__flatcc_fb_gen_c_json_parser@@Base+0x13d4>
   26e38:	ldr	r1, [pc, #-2856]	; 26318 <__flatcc_fb_gen_c_json_parser@@Base+0x13d8>
   26e3c:	ldr	r0, [pc, #-2856]	; 2631c <__flatcc_fb_gen_c_json_parser@@Base+0x13dc>
   26e40:	add	r3, pc, r3
   26e44:	ldr	r2, [pc, #-2860]	; 26320 <__flatcc_fb_gen_c_json_parser@@Base+0x13e0>
   26e48:	add	r3, r3, #328	; 0x148
   26e4c:	add	r1, pc, r1
   26e50:	add	r0, pc, r0
   26e54:	bl	14140 <__assert_fail@plt>
   26e58:	ldr	r3, [pc, #-2876]	; 26324 <__flatcc_fb_gen_c_json_parser@@Base+0x13e4>
   26e5c:	ldr	r1, [pc, #-2876]	; 26328 <__flatcc_fb_gen_c_json_parser@@Base+0x13e8>
   26e60:	ldr	r0, [pc, #-2876]	; 2632c <__flatcc_fb_gen_c_json_parser@@Base+0x13ec>
   26e64:	add	r3, pc, r3
   26e68:	ldr	r2, [pc, #-2880]	; 26330 <__flatcc_fb_gen_c_json_parser@@Base+0x13f0>
   26e6c:	add	r3, r3, #280	; 0x118
   26e70:	add	r1, pc, r1
   26e74:	add	r0, pc, r0
   26e78:	bl	14140 <__assert_fail@plt>
   26e7c:	ldr	r3, [pc, #-2896]	; 26334 <__flatcc_fb_gen_c_json_parser@@Base+0x13f4>
   26e80:	ldr	r1, [pc, #-2896]	; 26338 <__flatcc_fb_gen_c_json_parser@@Base+0x13f8>
   26e84:	ldr	r0, [pc, #-2896]	; 2633c <__flatcc_fb_gen_c_json_parser@@Base+0x13fc>
   26e88:	add	r3, pc, r3
   26e8c:	ldr	r2, [pc, #-2900]	; 26340 <__flatcc_fb_gen_c_json_parser@@Base+0x1400>
   26e90:	add	r3, r3, #348	; 0x15c
   26e94:	add	r1, pc, r1
   26e98:	add	r0, pc, r0
   26e9c:	bl	14140 <__assert_fail@plt>
   26ea0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   26ea4:	sub	sp, sp, #448	; 0x1c0
   26ea8:	add	r4, sp, #8
   26eac:	mov	r5, r1
   26eb0:	mov	r6, r0
   26eb4:	mov	r2, #220	; 0xdc
   26eb8:	mov	r0, r4
   26ebc:	mov	r1, #0
   26ec0:	add	r7, sp, #228	; 0xe4
   26ec4:	bl	140a4 <memset@plt>
   26ec8:	mov	r2, #220	; 0xdc
   26ecc:	mov	r1, #0
   26ed0:	mov	r0, r7
   26ed4:	bl	140a4 <memset@plt>
   26ed8:	mov	r2, r4
   26edc:	mov	r1, r5
   26ee0:	ldr	r0, [r5, #12]
   26ee4:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   26ee8:	ldr	r1, [pc, #444]	; 270ac <__flatcc_fb_gen_c_json_parser@@Base+0x216c>
   26eec:	mov	r2, r4
   26ef0:	ldr	r0, [r6]
   26ef4:	add	r1, pc, r1
   26ef8:	bl	1408c <fprintf@plt>
   26efc:	ldr	r4, [r5, #20]
   26f00:	ldr	r5, [pc, #424]	; 270b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2170>
   26f04:	cmp	r4, #0
   26f08:	add	r5, pc, r5
   26f0c:	beq	26fdc <__flatcc_fb_gen_c_json_parser@@Base+0x209c>
   26f10:	ldr	r8, [pc, #412]	; 270b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2174>
   26f14:	ldr	sl, [pc, #412]	; 270b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2178>
   26f18:	ldr	r9, [pc, #412]	; 270bc <__flatcc_fb_gen_c_json_parser@@Base+0x217c>
   26f1c:	add	r8, pc, r8
   26f20:	add	sl, pc, sl
   26f24:	add	r9, pc, r9
   26f28:	ldrh	r3, [r4, #24]
   26f2c:	cmp	r3, #10
   26f30:	beq	27018 <__flatcc_fb_gen_c_json_parser@@Base+0x20d8>
   26f34:	cmp	r3, #14
   26f38:	beq	26f94 <__flatcc_fb_gen_c_json_parser@@Base+0x2054>
   26f3c:	cmp	r3, #0
   26f40:	beq	26fd0 <__flatcc_fb_gen_c_json_parser@@Base+0x2090>
   26f44:	ldr	r2, [pc, #372]	; 270c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2180>
   26f48:	ldr	r3, [pc, #372]	; 270c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2184>
   26f4c:	ldr	r4, [pc, #372]	; 270c8 <__flatcc_fb_gen_c_json_parser@@Base+0x2188>
   26f50:	ldr	r1, [r5, r2]
   26f54:	add	r3, pc, r3
   26f58:	str	r3, [sp]
   26f5c:	ldr	r0, [r1]
   26f60:	ldr	r1, [pc, #356]	; 270cc <__flatcc_fb_gen_c_json_parser@@Base+0x218c>
   26f64:	add	r4, pc, r4
   26f68:	mov	r2, r4
   26f6c:	mov	r3, #251	; 0xfb
   26f70:	add	r1, pc, r1
   26f74:	bl	1408c <fprintf@plt>
   26f78:	ldr	r3, [pc, #336]	; 270d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2190>
   26f7c:	ldr	r0, [pc, #336]	; 270d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2194>
   26f80:	mov	r1, r4
   26f84:	add	r3, pc, r3
   26f88:	mov	r2, #251	; 0xfb
   26f8c:	add	r0, pc, r0
   26f90:	bl	14140 <__assert_fail@plt>
   26f94:	ldr	r1, [r4, #16]
   26f98:	mov	r2, r7
   26f9c:	ldr	r0, [r1, #12]
   26fa0:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   26fa4:	ldr	r3, [r4, #16]
   26fa8:	ldrh	r3, [r3, #8]
   26fac:	cmp	r3, #0
   26fb0:	beq	27038 <__flatcc_fb_gen_c_json_parser@@Base+0x20f8>
   26fb4:	cmp	r3, #1
   26fb8:	bne	2705c <__flatcc_fb_gen_c_json_parser@@Base+0x211c>
   26fbc:	mov	r3, r7
   26fc0:	ldr	r2, [r4, #48]	; 0x30
   26fc4:	mov	r1, r9
   26fc8:	ldr	r0, [r6]
   26fcc:	bl	1408c <fprintf@plt>
   26fd0:	ldr	r4, [r4]
   26fd4:	cmp	r4, #0
   26fd8:	bne	26f28 <__flatcc_fb_gen_c_json_parser@@Base+0x1fe8>
   26fdc:	ldr	r0, [pc, #244]	; 270d8 <__flatcc_fb_gen_c_json_parser@@Base+0x2198>
   26fe0:	ldr	r3, [r6]
   26fe4:	mov	r2, #28
   26fe8:	mov	r1, #1
   26fec:	add	r0, pc, r0
   26ff0:	bl	14014 <fwrite@plt>
   26ff4:	ldr	r0, [pc, #224]	; 270dc <__flatcc_fb_gen_c_json_parser@@Base+0x219c>
   26ff8:	ldr	r3, [r6]
   26ffc:	mov	r2, #9
   27000:	mov	r1, #1
   27004:	add	r0, pc, r0
   27008:	bl	14014 <fwrite@plt>
   2700c:	mov	r0, #0
   27010:	add	sp, sp, #448	; 0x1c0
   27014:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   27018:	ldr	r2, [r4, #48]	; 0x30
   2701c:	mov	r1, r8
   27020:	ldr	r0, [r6]
   27024:	bl	1408c <fprintf@plt>
   27028:	ldr	r4, [r4]
   2702c:	cmp	r4, #0
   27030:	bne	26f28 <__flatcc_fb_gen_c_json_parser@@Base+0x1fe8>
   27034:	b	26fdc <__flatcc_fb_gen_c_json_parser@@Base+0x209c>
   27038:	ldr	r2, [r4, #48]	; 0x30
   2703c:	mov	r3, r7
   27040:	mov	r1, sl
   27044:	ldr	r0, [r6]
   27048:	bl	1408c <fprintf@plt>
   2704c:	ldr	r4, [r4]
   27050:	cmp	r4, #0
   27054:	bne	26f28 <__flatcc_fb_gen_c_json_parser@@Base+0x1fe8>
   27058:	b	26fdc <__flatcc_fb_gen_c_json_parser@@Base+0x209c>
   2705c:	ldr	r2, [pc, #92]	; 270c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2180>
   27060:	ldr	r3, [pc, #120]	; 270e0 <__flatcc_fb_gen_c_json_parser@@Base+0x21a0>
   27064:	ldr	r4, [pc, #120]	; 270e4 <__flatcc_fb_gen_c_json_parser@@Base+0x21a4>
   27068:	ldr	r1, [r5, r2]
   2706c:	add	r3, pc, r3
   27070:	str	r3, [sp]
   27074:	ldr	r0, [r1]
   27078:	ldr	r1, [pc, #104]	; 270e8 <__flatcc_fb_gen_c_json_parser@@Base+0x21a8>
   2707c:	add	r4, pc, r4
   27080:	mov	r2, r4
   27084:	mov	r3, #240	; 0xf0
   27088:	add	r1, pc, r1
   2708c:	bl	1408c <fprintf@plt>
   27090:	ldr	r3, [pc, #84]	; 270ec <__flatcc_fb_gen_c_json_parser@@Base+0x21ac>
   27094:	ldr	r0, [pc, #84]	; 270f0 <__flatcc_fb_gen_c_json_parser@@Base+0x21b0>
   27098:	mov	r1, r4
   2709c:	add	r3, pc, r3
   270a0:	mov	r2, #240	; 0xf0
   270a4:	add	r0, pc, r0
   270a8:	bl	14140 <__assert_fail@plt>
   270ac:	andeq	lr, r2, r8, lsl #24
   270b0:	strdeq	r4, [r4], -r0
   270b4:	strdeq	lr, [r2], -r4
   270b8:	andeq	lr, r2, ip, lsl #25
   270bc:	andeq	lr, r2, ip, ror #25
   270c0:	andeq	r0, r0, r0, lsr #1
   270c4:	muleq	r2, r4, sp
   270c8:	andeq	lr, r2, r4, lsl sp
   270cc:	andeq	r9, r1, ip, asr #30
   270d0:	andeq	lr, r2, r4, lsl fp
   270d4:	andeq	r2, r2, r0, lsr r3
   270d8:	muleq	r2, r4, fp
   270dc:	muleq	r2, ip, fp
   270e0:	andeq	lr, r2, ip, ror ip
   270e4:	strdeq	lr, [r2], -ip
   270e8:	andeq	r9, r1, r4, lsr lr
   270ec:	strdeq	lr, [r2], -ip
   270f0:	andeq	r2, r2, r8, lsl r2
   270f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   270f8:	sub	sp, sp, #492	; 0x1ec
   270fc:	add	r7, sp, #48	; 0x30
   27100:	mov	r4, r1
   27104:	mov	r6, r0
   27108:	mov	r2, #220	; 0xdc
   2710c:	mov	r1, #0
   27110:	mov	r0, r7
   27114:	add	r8, sp, #268	; 0x10c
   27118:	bl	140a4 <memset@plt>
   2711c:	mov	r2, #220	; 0xdc
   27120:	mov	r1, #0
   27124:	mov	r0, r8
   27128:	bl	140a4 <memset@plt>
   2712c:	mov	r1, r4
   27130:	ldr	r0, [r4, #12]
   27134:	mov	r2, r7
   27138:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   2713c:	ldr	r1, [pc, #996]	; 27528 <__flatcc_fb_gen_c_json_parser@@Base+0x25e8>
   27140:	mov	r2, r7
   27144:	ldr	r0, [r6]
   27148:	add	r1, pc, r1
   2714c:	bl	1408c <fprintf@plt>
   27150:	ldr	r4, [r4, #20]
   27154:	ldr	sl, [pc, #976]	; 2752c <__flatcc_fb_gen_c_json_parser@@Base+0x25ec>
   27158:	cmp	r4, #0
   2715c:	add	sl, pc, sl
   27160:	beq	2727c <__flatcc_fb_gen_c_json_parser@@Base+0x233c>
   27164:	ldr	r3, [pc, #964]	; 27530 <__flatcc_fb_gen_c_json_parser@@Base+0x25f0>
   27168:	ldr	r9, [pc, #964]	; 27534 <__flatcc_fb_gen_c_json_parser@@Base+0x25f4>
   2716c:	add	r3, pc, r3
   27170:	str	r3, [sp, #32]
   27174:	ldr	r3, [pc, #956]	; 27538 <__flatcc_fb_gen_c_json_parser@@Base+0x25f8>
   27178:	ldr	fp, [pc, #956]	; 2753c <__flatcc_fb_gen_c_json_parser@@Base+0x25fc>
   2717c:	add	r3, pc, r3
   27180:	str	r3, [sp, #36]	; 0x24
   27184:	ldr	r3, [pc, #948]	; 27540 <__flatcc_fb_gen_c_json_parser@@Base+0x2600>
   27188:	add	r9, pc, r9
   2718c:	add	r3, pc, r3
   27190:	str	r3, [sp, #40]	; 0x28
   27194:	ldr	r3, [pc, #936]	; 27544 <__flatcc_fb_gen_c_json_parser@@Base+0x2604>
   27198:	mov	r5, #0
   2719c:	add	fp, pc, fp
   271a0:	add	r3, pc, r3
   271a4:	str	r3, [sp, #44]	; 0x2c
   271a8:	str	sl, [sp, #24]
   271ac:	str	fp, [sp, #28]
   271b0:	ldrh	r3, [r4, #72]	; 0x48
   271b4:	tst	r3, #4
   271b8:	bne	2726c <__flatcc_fb_gen_c_json_parser@@Base+0x232c>
   271bc:	ldrh	r3, [r4, #24]
   271c0:	cmp	r3, #8
   271c4:	beq	272b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2378>
   271c8:	cmp	r3, #14
   271cc:	bne	2726c <__flatcc_fb_gen_c_json_parser@@Base+0x232c>
   271d0:	ldr	r1, [r4, #16]
   271d4:	mov	r2, r8
   271d8:	ldr	r0, [r1, #12]
   271dc:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   271e0:	ldr	r2, [r4, #16]
   271e4:	ldrh	r3, [r2, #8]
   271e8:	cmp	r3, #1
   271ec:	beq	272f8 <__flatcc_fb_gen_c_json_parser@@Base+0x23b8>
   271f0:	cmp	r3, #3
   271f4:	bne	2726c <__flatcc_fb_gen_c_json_parser@@Base+0x232c>
   271f8:	ldr	r3, [r2, #40]	; 0x28
   271fc:	sub	r3, r3, #1
   27200:	cmp	r3, #10
   27204:	addls	pc, pc, r3, lsl #2
   27208:	b	274d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2590>
   2720c:	b	27470 <__flatcc_fb_gen_c_json_parser@@Base+0x2530>
   27210:	b	2747c <__flatcc_fb_gen_c_json_parser@@Base+0x253c>
   27214:	b	27404 <__flatcc_fb_gen_c_json_parser@@Base+0x24c4>
   27218:	b	27488 <__flatcc_fb_gen_c_json_parser@@Base+0x2548>
   2721c:	b	274a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2560>
   27220:	b	274ac <__flatcc_fb_gen_c_json_parser@@Base+0x256c>
   27224:	b	274b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2578>
   27228:	b	274c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2584>
   2722c:	b	27458 <__flatcc_fb_gen_c_json_parser@@Base+0x2518>
   27230:	b	27464 <__flatcc_fb_gen_c_json_parser@@Base+0x2524>
   27234:	b	27494 <__flatcc_fb_gen_c_json_parser@@Base+0x2554>
   27238:	ldr	r2, [sp, #28]
   2723c:	ldr	r1, [r4, #4]
   27240:	ldr	r0, [r6]
   27244:	ldr	r3, [r1, #4]
   27248:	str	r3, [sp, #16]
   2724c:	ldr	r1, [r1]
   27250:	str	r3, [sp, #8]
   27254:	str	r1, [sp, #12]
   27258:	ldrd	sl, [r4, #80]	; 0x50
   2725c:	mov	r3, r5
   27260:	mov	r1, r9
   27264:	strd	sl, [sp]
   27268:	bl	1408c <fprintf@plt>
   2726c:	ldr	r4, [r4]
   27270:	add	r5, r5, #1
   27274:	cmp	r4, #0
   27278:	bne	271b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2270>
   2727c:	ldr	r0, [pc, #708]	; 27548 <__flatcc_fb_gen_c_json_parser@@Base+0x2608>
   27280:	ldr	r3, [r6]
   27284:	mov	r2, #3
   27288:	mov	r1, #1
   2728c:	add	r0, pc, r0
   27290:	bl	14014 <fwrite@plt>
   27294:	ldr	r1, [pc, #688]	; 2754c <__flatcc_fb_gen_c_json_parser@@Base+0x260c>
   27298:	mov	r3, r7
   2729c:	mov	r2, r7
   272a0:	ldr	r0, [r6]
   272a4:	add	r1, pc, r1
   272a8:	bl	1408c <fprintf@plt>
   272ac:	mov	r0, #0
   272b0:	add	sp, sp, #492	; 0x1ec
   272b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   272b8:	ldr	r3, [r4, #16]
   272bc:	sub	r3, r3, #1
   272c0:	cmp	r3, #10
   272c4:	addls	pc, pc, r3, lsl #2
   272c8:	b	273ac <__flatcc_fb_gen_c_json_parser@@Base+0x246c>
   272cc:	b	27374 <__flatcc_fb_gen_c_json_parser@@Base+0x2434>
   272d0:	b	2737c <__flatcc_fb_gen_c_json_parser@@Base+0x243c>
   272d4:	b	27238 <__flatcc_fb_gen_c_json_parser@@Base+0x22f8>
   272d8:	b	27344 <__flatcc_fb_gen_c_json_parser@@Base+0x2404>
   272dc:	b	27350 <__flatcc_fb_gen_c_json_parser@@Base+0x2410>
   272e0:	b	2735c <__flatcc_fb_gen_c_json_parser@@Base+0x241c>
   272e4:	b	27368 <__flatcc_fb_gen_c_json_parser@@Base+0x2428>
   272e8:	b	27388 <__flatcc_fb_gen_c_json_parser@@Base+0x2448>
   272ec:	b	27394 <__flatcc_fb_gen_c_json_parser@@Base+0x2454>
   272f0:	b	2739c <__flatcc_fb_gen_c_json_parser@@Base+0x245c>
   272f4:	b	273a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   272f8:	ldr	r1, [r4, #4]
   272fc:	ldr	r0, [r6]
   27300:	mov	r2, r5
   27304:	ldr	r3, [r1, #4]
   27308:	str	r8, [sp, #20]
   2730c:	str	r3, [sp, #16]
   27310:	ldr	r1, [r1]
   27314:	str	r3, [sp, #8]
   27318:	str	r1, [sp, #12]
   2731c:	ldrd	sl, [r4, #80]	; 0x50
   27320:	ldr	r1, [pc, #552]	; 27550 <__flatcc_fb_gen_c_json_parser@@Base+0x2610>
   27324:	add	r5, r5, #1
   27328:	strd	sl, [sp]
   2732c:	add	r1, pc, r1
   27330:	bl	1408c <fprintf@plt>
   27334:	ldr	r4, [r4]
   27338:	cmp	r4, #0
   2733c:	bne	271b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2270>
   27340:	b	2727c <__flatcc_fb_gen_c_json_parser@@Base+0x233c>
   27344:	ldr	r2, [pc, #520]	; 27554 <__flatcc_fb_gen_c_json_parser@@Base+0x2614>
   27348:	add	r2, pc, r2
   2734c:	b	2723c <__flatcc_fb_gen_c_json_parser@@Base+0x22fc>
   27350:	ldr	r2, [pc, #512]	; 27558 <__flatcc_fb_gen_c_json_parser@@Base+0x2618>
   27354:	add	r2, pc, r2
   27358:	b	2723c <__flatcc_fb_gen_c_json_parser@@Base+0x22fc>
   2735c:	ldr	r2, [pc, #504]	; 2755c <__flatcc_fb_gen_c_json_parser@@Base+0x261c>
   27360:	add	r2, pc, r2
   27364:	b	2723c <__flatcc_fb_gen_c_json_parser@@Base+0x22fc>
   27368:	ldr	r2, [pc, #496]	; 27560 <__flatcc_fb_gen_c_json_parser@@Base+0x2620>
   2736c:	add	r2, pc, r2
   27370:	b	2723c <__flatcc_fb_gen_c_json_parser@@Base+0x22fc>
   27374:	ldr	r2, [sp, #32]
   27378:	b	2723c <__flatcc_fb_gen_c_json_parser@@Base+0x22fc>
   2737c:	ldr	r2, [pc, #480]	; 27564 <__flatcc_fb_gen_c_json_parser@@Base+0x2624>
   27380:	add	r2, pc, r2
   27384:	b	2723c <__flatcc_fb_gen_c_json_parser@@Base+0x22fc>
   27388:	ldr	r2, [pc, #472]	; 27568 <__flatcc_fb_gen_c_json_parser@@Base+0x2628>
   2738c:	add	r2, pc, r2
   27390:	b	2723c <__flatcc_fb_gen_c_json_parser@@Base+0x22fc>
   27394:	ldr	r2, [sp, #44]	; 0x2c
   27398:	b	2723c <__flatcc_fb_gen_c_json_parser@@Base+0x22fc>
   2739c:	ldr	r2, [sp, #36]	; 0x24
   273a0:	b	2723c <__flatcc_fb_gen_c_json_parser@@Base+0x22fc>
   273a4:	ldr	r2, [sp, #40]	; 0x28
   273a8:	b	2723c <__flatcc_fb_gen_c_json_parser@@Base+0x22fc>
   273ac:	ldr	sl, [sp, #24]
   273b0:	ldr	r2, [pc, #436]	; 2756c <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   273b4:	ldr	r3, [pc, #436]	; 27570 <__flatcc_fb_gen_c_json_parser@@Base+0x2630>
   273b8:	ldr	r4, [pc, #436]	; 27574 <__flatcc_fb_gen_c_json_parser@@Base+0x2634>
   273bc:	ldr	r1, [sl, r2]
   273c0:	add	r3, pc, r3
   273c4:	str	r3, [sp]
   273c8:	ldr	r0, [r1]
   273cc:	ldr	r1, [pc, #420]	; 27578 <__flatcc_fb_gen_c_json_parser@@Base+0x2638>
   273d0:	add	r4, pc, r4
   273d4:	mov	r2, r4
   273d8:	mov	r3, #96	; 0x60
   273dc:	add	r1, pc, r1
   273e0:	bl	1408c <fprintf@plt>
   273e4:	ldr	r3, [pc, #400]	; 2757c <__flatcc_fb_gen_c_json_parser@@Base+0x263c>
   273e8:	ldr	r0, [pc, #400]	; 27580 <__flatcc_fb_gen_c_json_parser@@Base+0x2640>
   273ec:	add	r3, pc, r3
   273f0:	mov	r1, r4
   273f4:	add	r3, r3, #32
   273f8:	mov	r2, #96	; 0x60
   273fc:	add	r0, pc, r0
   27400:	bl	14140 <__assert_fail@plt>
   27404:	ldr	r2, [pc, #376]	; 27584 <__flatcc_fb_gen_c_json_parser@@Base+0x2644>
   27408:	add	r2, pc, r2
   2740c:	ldr	r1, [r4, #4]
   27410:	ldr	r0, [r6]
   27414:	ldr	r3, [r1, #4]
   27418:	str	r8, [sp, #20]
   2741c:	str	r3, [sp, #16]
   27420:	ldr	r1, [r1]
   27424:	str	r3, [sp, #8]
   27428:	str	r1, [sp, #12]
   2742c:	ldrd	sl, [r4, #80]	; 0x50
   27430:	ldr	r1, [pc, #336]	; 27588 <__flatcc_fb_gen_c_json_parser@@Base+0x2648>
   27434:	mov	r3, r5
   27438:	strd	sl, [sp]
   2743c:	add	r1, pc, r1
   27440:	bl	1408c <fprintf@plt>
   27444:	ldr	r4, [r4]
   27448:	add	r5, r5, #1
   2744c:	cmp	r4, #0
   27450:	bne	271b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2270>
   27454:	b	2727c <__flatcc_fb_gen_c_json_parser@@Base+0x233c>
   27458:	ldr	r2, [pc, #300]	; 2758c <__flatcc_fb_gen_c_json_parser@@Base+0x264c>
   2745c:	add	r2, pc, r2
   27460:	b	2740c <__flatcc_fb_gen_c_json_parser@@Base+0x24cc>
   27464:	ldr	r2, [pc, #292]	; 27590 <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   27468:	add	r2, pc, r2
   2746c:	b	2740c <__flatcc_fb_gen_c_json_parser@@Base+0x24cc>
   27470:	ldr	r2, [pc, #284]	; 27594 <__flatcc_fb_gen_c_json_parser@@Base+0x2654>
   27474:	add	r2, pc, r2
   27478:	b	2740c <__flatcc_fb_gen_c_json_parser@@Base+0x24cc>
   2747c:	ldr	r2, [pc, #276]	; 27598 <__flatcc_fb_gen_c_json_parser@@Base+0x2658>
   27480:	add	r2, pc, r2
   27484:	b	2740c <__flatcc_fb_gen_c_json_parser@@Base+0x24cc>
   27488:	ldr	r2, [pc, #268]	; 2759c <__flatcc_fb_gen_c_json_parser@@Base+0x265c>
   2748c:	add	r2, pc, r2
   27490:	b	2740c <__flatcc_fb_gen_c_json_parser@@Base+0x24cc>
   27494:	ldr	r2, [pc, #260]	; 275a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2660>
   27498:	add	r2, pc, r2
   2749c:	b	2740c <__flatcc_fb_gen_c_json_parser@@Base+0x24cc>
   274a0:	ldr	r2, [pc, #252]	; 275a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2664>
   274a4:	add	r2, pc, r2
   274a8:	b	2740c <__flatcc_fb_gen_c_json_parser@@Base+0x24cc>
   274ac:	ldr	r2, [pc, #244]	; 275a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2668>
   274b0:	add	r2, pc, r2
   274b4:	b	2740c <__flatcc_fb_gen_c_json_parser@@Base+0x24cc>
   274b8:	ldr	r2, [pc, #236]	; 275ac <__flatcc_fb_gen_c_json_parser@@Base+0x266c>
   274bc:	add	r2, pc, r2
   274c0:	b	2740c <__flatcc_fb_gen_c_json_parser@@Base+0x24cc>
   274c4:	ldr	r2, [pc, #228]	; 275b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2670>
   274c8:	add	r2, pc, r2
   274cc:	b	2740c <__flatcc_fb_gen_c_json_parser@@Base+0x24cc>
   274d0:	ldr	sl, [sp, #24]
   274d4:	ldr	r2, [pc, #144]	; 2756c <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   274d8:	ldr	r3, [pc, #212]	; 275b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2674>
   274dc:	ldr	r4, [pc, #212]	; 275b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2678>
   274e0:	ldr	r1, [sl, r2]
   274e4:	add	r3, pc, r3
   274e8:	str	r3, [sp]
   274ec:	ldr	r0, [r1]
   274f0:	ldr	r1, [pc, #196]	; 275bc <__flatcc_fb_gen_c_json_parser@@Base+0x267c>
   274f4:	add	r4, pc, r4
   274f8:	mov	r2, r4
   274fc:	mov	r3, #96	; 0x60
   27500:	add	r1, pc, r1
   27504:	bl	1408c <fprintf@plt>
   27508:	ldr	r3, [pc, #176]	; 275c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2680>
   2750c:	ldr	r0, [pc, #176]	; 275c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2684>
   27510:	add	r3, pc, r3
   27514:	mov	r1, r4
   27518:	add	r3, r3, #32
   2751c:	mov	r2, #96	; 0x60
   27520:	add	r0, pc, r0
   27524:	bl	14140 <__assert_fail@plt>
   27528:	andeq	lr, r2, r8, lsl ip
   2752c:	muleq	r4, ip, lr
   27530:	andeq	sl, r1, ip, asr r0
   27534:	andeq	lr, r2, r0, lsl #26
   27538:	andeq	r9, r1, r8, lsl ip
   2753c:	andeq	sl, r1, ip, lsr r0
   27540:	andeq	r9, r1, r0, lsl #24
   27544:	andeq	sl, r1, r0, rrx
   27548:	andeq	fp, r2, r0, ror sl
   2754c:	andeq	lr, r2, ip, lsl #22
   27550:	andeq	lr, r2, ip, lsl #24
   27554:	muleq	r1, r8, lr
   27558:			; <UNDEFINED> instruction: 0x000321b4
   2755c:	andeq	r9, r1, r8, lsl #29
   27560:	andeq	r9, r1, r4, lsl #29
   27564:	andeq	r9, r1, r0, asr lr
   27568:	andeq	r9, r1, ip, ror #28
   2756c:	andeq	r0, r0, r0, lsr #1
   27570:	andeq	r9, r1, r8, lsl #22
   27574:	andeq	r9, r1, ip, lsl #21
   27578:	andeq	r9, r1, r0, ror #21
   2757c:	andeq	lr, r2, ip, lsr #13
   27580:	andeq	r1, r2, r0, asr #29
   27584:	ldrdeq	r9, [r1], -r0
   27588:	muleq	r2, r8, sl
   2758c:	andeq	r9, r1, r4, lsr #27
   27590:	andeq	r9, r1, ip, lsr #18
   27594:	andeq	r9, r1, r4, asr sp
   27598:	andeq	r9, r1, r0, asr sp
   2759c:	andeq	r9, r1, r4, asr sp
   275a0:	strdeq	r9, [r1], -r4
   275a4:	andeq	r2, r3, r4, rrx
   275a8:	andeq	r9, r1, r8, lsr sp
   275ac:	andeq	r9, r1, r4, lsr sp
   275b0:	andeq	r9, r1, r0, lsr sp
   275b4:	andeq	r9, r1, r4, ror #19
   275b8:	andeq	r9, r1, r8, ror #18
   275bc:			; <UNDEFINED> instruction: 0x000199bc
   275c0:	andeq	lr, r2, r8, lsl #11
   275c4:	muleq	r2, ip, sp
   275c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   275cc:	sub	sp, sp, #468	; 0x1d4
   275d0:	add	r8, sp, #24
   275d4:	mov	r7, r1
   275d8:	mov	r2, #220	; 0xdc
   275dc:	mov	r1, #0
   275e0:	mov	r6, r0
   275e4:	mov	r0, r8
   275e8:	bl	140a4 <memset@plt>
   275ec:	mov	r2, #220	; 0xdc
   275f0:	mov	r1, #0
   275f4:	add	r0, sp, #244	; 0xf4
   275f8:	bl	140a4 <memset@plt>
   275fc:	mov	r2, r8
   27600:	mov	r1, r7
   27604:	ldr	r0, [r7, #12]
   27608:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   2760c:	ldr	r3, [r7, #40]	; 0x28
   27610:	ldr	sl, [pc, #1660]	; 27c94 <__flatcc_fb_gen_c_json_parser@@Base+0x2d54>
   27614:	sub	r3, r3, #1
   27618:	add	sl, pc, sl
   2761c:	cmp	r3, #10
   27620:	addls	pc, pc, r3, lsl #2
   27624:	b	27c40 <__flatcc_fb_gen_c_json_parser@@Base+0x2d00>
   27628:	b	27850 <__flatcc_fb_gen_c_json_parser@@Base+0x2910>
   2762c:	b	27830 <__flatcc_fb_gen_c_json_parser@@Base+0x28f0>
   27630:	b	27654 <__flatcc_fb_gen_c_json_parser@@Base+0x2714>
   27634:	b	27928 <__flatcc_fb_gen_c_json_parser@@Base+0x29e8>
   27638:	b	27948 <__flatcc_fb_gen_c_json_parser@@Base+0x2a08>
   2763c:	b	278a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2968>
   27640:	b	278c8 <__flatcc_fb_gen_c_json_parser@@Base+0x2988>
   27644:	b	278e8 <__flatcc_fb_gen_c_json_parser@@Base+0x29a8>
   27648:	b	27908 <__flatcc_fb_gen_c_json_parser@@Base+0x29c8>
   2764c:	b	27870 <__flatcc_fb_gen_c_json_parser@@Base+0x2930>
   27650:	b	2788c <__flatcc_fb_gen_c_json_parser@@Base+0x294c>
   27654:	ldr	r9, [pc, #1596]	; 27c98 <__flatcc_fb_gen_c_json_parser@@Base+0x2d58>
   27658:	ldr	ip, [pc, #1596]	; 27c9c <__flatcc_fb_gen_c_json_parser@@Base+0x2d5c>
   2765c:	ldr	r3, [pc, #1596]	; 27ca0 <__flatcc_fb_gen_c_json_parser@@Base+0x2d60>
   27660:	add	r9, pc, r9
   27664:	add	ip, pc, ip
   27668:	add	r3, pc, r3
   2766c:	str	r3, [sp, #20]
   27670:	ldrh	r3, [r7, #92]	; 0x5c
   27674:	tst	r3, #32
   27678:	beq	27a44 <__flatcc_fb_gen_c_json_parser@@Base+0x2b04>
   2767c:	ldrd	r2, [r7, #112]	; 0x70
   27680:	cmp	r3, #0
   27684:	cmpeq	r2, #2
   27688:	beq	27be0 <__flatcc_fb_gen_c_json_parser@@Base+0x2ca0>
   2768c:	cmp	r3, #0
   27690:	cmpeq	r2, #4
   27694:	beq	27c20 <__flatcc_fb_gen_c_json_parser@@Base+0x2ce0>
   27698:	cmp	r3, #0
   2769c:	cmpeq	r2, #1
   276a0:	beq	27c00 <__flatcc_fb_gen_c_json_parser@@Base+0x2cc0>
   276a4:	ldr	fp, [pc, #1528]	; 27ca4 <__flatcc_fb_gen_c_json_parser@@Base+0x2d64>
   276a8:	ldr	r3, [pc, #1528]	; 27ca8 <__flatcc_fb_gen_c_json_parser@@Base+0x2d68>
   276ac:	add	fp, pc, fp
   276b0:	mvn	r4, #0
   276b4:	mvn	r5, #0
   276b8:	add	r3, pc, r3
   276bc:	str	r3, [sp, #16]
   276c0:	ldr	r1, [r7, #20]
   276c4:	cmp	r1, #0
   276c8:	bne	276ec <__flatcc_fb_gen_c_json_parser@@Base+0x27ac>
   276cc:	b	27710 <__flatcc_fb_gen_c_json_parser@@Base+0x27d0>
   276d0:	cmp	r3, #6
   276d4:	beq	27964 <__flatcc_fb_gen_c_json_parser@@Base+0x2a24>
   276d8:	cmp	r3, #4
   276dc:	beq	276f8 <__flatcc_fb_gen_c_json_parser@@Base+0x27b8>
   276e0:	ldr	r1, [r1]
   276e4:	cmp	r1, #0
   276e8:	beq	27710 <__flatcc_fb_gen_c_json_parser@@Base+0x27d0>
   276ec:	ldrh	r3, [r1, #56]	; 0x38
   276f0:	cmp	r3, #5
   276f4:	bne	276d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2790>
   276f8:	ldrd	r2, [r1, #48]	; 0x30
   276fc:	ldr	r1, [r1]
   27700:	cmp	r1, #0
   27704:	bic	r4, r4, r2
   27708:	bic	r5, r5, r3
   2770c:	bne	276ec <__flatcc_fb_gen_c_json_parser@@Base+0x27ac>
   27710:	ldr	r1, [pc, #1428]	; 27cac <__flatcc_fb_gen_c_json_parser@@Base+0x2d6c>
   27714:	ldr	r0, [r6, #204]	; 0xcc
   27718:	mov	r3, ip
   2771c:	mov	r2, r8
   27720:	add	r1, pc, r1
   27724:	str	r9, [sp]
   27728:	bl	1408c <fprintf@plt>
   2772c:	mov	r1, r9
   27730:	ldr	r0, [sp, #16]
   27734:	bl	13fb4 <strcmp@plt>
   27738:	cmp	r0, #0
   2773c:	beq	27b0c <__flatcc_fb_gen_c_json_parser@@Base+0x2bcc>
   27740:	ldr	r3, [sp, #16]
   27744:	ldr	r1, [pc, #1380]	; 27cb0 <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
   27748:	mov	r2, r3
   2774c:	add	r1, pc, r1
   27750:	ldr	r0, [r6, #204]	; 0xcc
   27754:	bl	1408c <fprintf@plt>
   27758:	ldr	r0, [pc, #1364]	; 27cb4 <__flatcc_fb_gen_c_json_parser@@Base+0x2d74>
   2775c:	ldr	r3, [r6, #204]	; 0xcc
   27760:	mov	r2, #54	; 0x36
   27764:	mov	r1, #1
   27768:	add	r0, pc, r0
   2776c:	bl	14014 <fwrite@plt>
   27770:	ldr	r1, [r6, #204]	; 0xcc
   27774:	mov	r0, #10
   27778:	bl	140ec <fputc@plt>
   2777c:	orrs	r3, r4, r5
   27780:	bne	27bbc <__flatcc_fb_gen_c_json_parser@@Base+0x2c7c>
   27784:	ldr	r0, [pc, #1324]	; 27cb8 <__flatcc_fb_gen_c_json_parser@@Base+0x2d78>
   27788:	ldr	r3, [r6, #204]	; 0xcc
   2778c:	mov	r2, #59	; 0x3b
   27790:	mov	r1, #1
   27794:	add	r0, pc, r0
   27798:	bl	14014 <fwrite@plt>
   2779c:	ldr	r4, [r7, #20]
   277a0:	cmp	r4, #0
   277a4:	beq	279ac <__flatcc_fb_gen_c_json_parser@@Base+0x2a6c>
   277a8:	ldr	r8, [pc, #1292]	; 27cbc <__flatcc_fb_gen_c_json_parser@@Base+0x2d7c>
   277ac:	ldr	r7, [pc, #1292]	; 27cc0 <__flatcc_fb_gen_c_json_parser@@Base+0x2d80>
   277b0:	ldr	r5, [pc, #1292]	; 27cc4 <__flatcc_fb_gen_c_json_parser@@Base+0x2d84>
   277b4:	add	r8, pc, r8
   277b8:	add	r7, pc, r7
   277bc:	add	r5, pc, r5
   277c0:	ldrh	r3, [r4, #56]	; 0x38
   277c4:	cmp	r3, #5
   277c8:	beq	27978 <__flatcc_fb_gen_c_json_parser@@Base+0x2a38>
   277cc:	cmp	r3, #6
   277d0:	beq	27a14 <__flatcc_fb_gen_c_json_parser@@Base+0x2ad4>
   277d4:	cmp	r3, #4
   277d8:	beq	279e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2aa8>
   277dc:	ldr	r2, [pc, #1252]	; 27cc8 <__flatcc_fb_gen_c_json_parser@@Base+0x2d88>
   277e0:	ldr	r3, [pc, #1252]	; 27ccc <__flatcc_fb_gen_c_json_parser@@Base+0x2d8c>
   277e4:	ldr	r4, [pc, #1252]	; 27cd0 <__flatcc_fb_gen_c_json_parser@@Base+0x2d90>
   277e8:	ldr	r1, [sl, r2]
   277ec:	add	r3, pc, r3
   277f0:	str	r3, [sp]
   277f4:	ldr	r0, [r1]
   277f8:	ldr	r1, [pc, #1236]	; 27cd4 <__flatcc_fb_gen_c_json_parser@@Base+0x2d94>
   277fc:	add	r4, pc, r4
   27800:	mov	r2, r4
   27804:	mov	r3, #134	; 0x86
   27808:	add	r1, pc, r1
   2780c:	bl	1408c <fprintf@plt>
   27810:	ldr	r3, [pc, #1216]	; 27cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x2d98>
   27814:	ldr	r0, [pc, #1216]	; 27cdc <__flatcc_fb_gen_c_json_parser@@Base+0x2d9c>
   27818:	add	r3, pc, r3
   2781c:	mov	r1, r4
   27820:	add	r3, r3, #52	; 0x34
   27824:	mov	r2, #134	; 0x86
   27828:	add	r0, pc, r0
   2782c:	bl	14140 <__assert_fail@plt>
   27830:	ldr	r3, [pc, #1192]	; 27ce0 <__flatcc_fb_gen_c_json_parser@@Base+0x2da0>
   27834:	ldr	r9, [pc, #1192]	; 27ce4 <__flatcc_fb_gen_c_json_parser@@Base+0x2da4>
   27838:	ldr	ip, [pc, #1192]	; 27ce8 <__flatcc_fb_gen_c_json_parser@@Base+0x2da8>
   2783c:	add	r3, pc, r3
   27840:	str	r3, [sp, #20]
   27844:	add	r9, pc, r9
   27848:	add	ip, pc, ip
   2784c:	b	27670 <__flatcc_fb_gen_c_json_parser@@Base+0x2730>
   27850:	ldr	r3, [pc, #1172]	; 27cec <__flatcc_fb_gen_c_json_parser@@Base+0x2dac>
   27854:	ldr	r9, [pc, #1172]	; 27cf0 <__flatcc_fb_gen_c_json_parser@@Base+0x2db0>
   27858:	ldr	ip, [pc, #1172]	; 27cf4 <__flatcc_fb_gen_c_json_parser@@Base+0x2db4>
   2785c:	add	r3, pc, r3
   27860:	str	r3, [sp, #20]
   27864:	add	r9, pc, r9
   27868:	add	ip, pc, ip
   2786c:	b	27670 <__flatcc_fb_gen_c_json_parser@@Base+0x2730>
   27870:	ldr	r3, [pc, #1152]	; 27cf8 <__flatcc_fb_gen_c_json_parser@@Base+0x2db8>
   27874:	ldr	ip, [pc, #1152]	; 27cfc <__flatcc_fb_gen_c_json_parser@@Base+0x2dbc>
   27878:	add	r3, pc, r3
   2787c:	str	r3, [sp, #20]
   27880:	add	ip, pc, ip
   27884:	mov	r9, r3
   27888:	b	27670 <__flatcc_fb_gen_c_json_parser@@Base+0x2730>
   2788c:	ldr	r3, [pc, #1132]	; 27d00 <__flatcc_fb_gen_c_json_parser@@Base+0x2dc0>
   27890:	ldr	ip, [pc, #1132]	; 27d04 <__flatcc_fb_gen_c_json_parser@@Base+0x2dc4>
   27894:	add	r3, pc, r3
   27898:	str	r3, [sp, #20]
   2789c:	add	ip, pc, ip
   278a0:	mov	r9, r3
   278a4:	b	27670 <__flatcc_fb_gen_c_json_parser@@Base+0x2730>
   278a8:	ldr	r3, [pc, #1112]	; 27d08 <__flatcc_fb_gen_c_json_parser@@Base+0x2dc8>
   278ac:	ldr	r9, [pc, #1112]	; 27d0c <__flatcc_fb_gen_c_json_parser@@Base+0x2dcc>
   278b0:	ldr	ip, [pc, #1112]	; 27d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2dd0>
   278b4:	add	r3, pc, r3
   278b8:	str	r3, [sp, #20]
   278bc:	add	r9, pc, r9
   278c0:	add	ip, pc, ip
   278c4:	b	27670 <__flatcc_fb_gen_c_json_parser@@Base+0x2730>
   278c8:	ldr	r3, [pc, #1092]	; 27d14 <__flatcc_fb_gen_c_json_parser@@Base+0x2dd4>
   278cc:	ldr	r9, [pc, #1092]	; 27d18 <__flatcc_fb_gen_c_json_parser@@Base+0x2dd8>
   278d0:	ldr	ip, [pc, #1092]	; 27d1c <__flatcc_fb_gen_c_json_parser@@Base+0x2ddc>
   278d4:	add	r3, pc, r3
   278d8:	str	r3, [sp, #20]
   278dc:	add	r9, pc, r9
   278e0:	add	ip, pc, ip
   278e4:	b	27670 <__flatcc_fb_gen_c_json_parser@@Base+0x2730>
   278e8:	ldr	r3, [pc, #1072]	; 27d20 <__flatcc_fb_gen_c_json_parser@@Base+0x2de0>
   278ec:	ldr	r9, [pc, #1072]	; 27d24 <__flatcc_fb_gen_c_json_parser@@Base+0x2de4>
   278f0:	ldr	ip, [pc, #1072]	; 27d28 <__flatcc_fb_gen_c_json_parser@@Base+0x2de8>
   278f4:	add	r3, pc, r3
   278f8:	str	r3, [sp, #20]
   278fc:	add	r9, pc, r9
   27900:	add	ip, pc, ip
   27904:	b	27670 <__flatcc_fb_gen_c_json_parser@@Base+0x2730>
   27908:	ldr	r3, [pc, #1052]	; 27d2c <__flatcc_fb_gen_c_json_parser@@Base+0x2dec>
   2790c:	ldr	r9, [pc, #1052]	; 27d30 <__flatcc_fb_gen_c_json_parser@@Base+0x2df0>
   27910:	ldr	ip, [pc, #1052]	; 27d34 <__flatcc_fb_gen_c_json_parser@@Base+0x2df4>
   27914:	add	r3, pc, r3
   27918:	str	r3, [sp, #20]
   2791c:	add	r9, pc, r9
   27920:	add	ip, pc, ip
   27924:	b	27670 <__flatcc_fb_gen_c_json_parser@@Base+0x2730>
   27928:	ldr	r3, [pc, #1032]	; 27d38 <__flatcc_fb_gen_c_json_parser@@Base+0x2df8>
   2792c:	ldr	r9, [pc, #1032]	; 27d3c <__flatcc_fb_gen_c_json_parser@@Base+0x2dfc>
   27930:	ldr	ip, [pc, #1032]	; 27d40 <__flatcc_fb_gen_c_json_parser@@Base+0x2e00>
   27934:	add	r3, pc, r3
   27938:	str	r3, [sp, #20]
   2793c:	add	r9, pc, r9
   27940:	add	ip, pc, ip
   27944:	b	27670 <__flatcc_fb_gen_c_json_parser@@Base+0x2730>
   27948:	ldr	r3, [pc, #1012]	; 27d44 <__flatcc_fb_gen_c_json_parser@@Base+0x2e04>
   2794c:	ldr	r9, [pc, #1012]	; 27d48 <__flatcc_fb_gen_c_json_parser@@Base+0x2e08>
   27950:	add	r3, pc, r3
   27954:	mov	ip, r6
   27958:	str	r3, [sp, #20]
   2795c:	add	r9, pc, r9
   27960:	b	27670 <__flatcc_fb_gen_c_json_parser@@Base+0x2730>
   27964:	ldrb	r2, [r1, #48]	; 0x30
   27968:	mov	r3, #0
   2796c:	bic	r5, r5, r3
   27970:	bic	r4, r4, r2
   27974:	b	276e0 <__flatcc_fb_gen_c_json_parser@@Base+0x27a0>
   27978:	ldr	ip, [r4, #4]
   2797c:	ldrd	r2, [r4, #48]	; 0x30
   27980:	ldr	r0, [r6, #204]	; 0xcc
   27984:	ldr	r1, [ip, #4]
   27988:	str	r1, [sp, #12]
   2798c:	ldr	ip, [ip]
   27990:	str	fp, [sp]
   27994:	stmib	sp, {r1, ip}
   27998:	mov	r1, r8
   2799c:	bl	1408c <fprintf@plt>
   279a0:	ldr	r4, [r4]
   279a4:	cmp	r4, #0
   279a8:	bne	277c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2880>
   279ac:	ldr	r0, [pc, #920]	; 27d4c <__flatcc_fb_gen_c_json_parser@@Base+0x2e0c>
   279b0:	ldr	r3, [r6, #204]	; 0xcc
   279b4:	mov	r2, #59	; 0x3b
   279b8:	mov	r1, #1
   279bc:	add	r0, pc, r0
   279c0:	bl	14014 <fwrite@plt>
   279c4:	ldr	r0, [pc, #900]	; 27d50 <__flatcc_fb_gen_c_json_parser@@Base+0x2e10>
   279c8:	ldr	r3, [r6, #204]	; 0xcc
   279cc:	mov	r2, #3
   279d0:	mov	r1, #1
   279d4:	add	r0, pc, r0
   279d8:	bl	14014 <fwrite@plt>
   279dc:	mov	r0, #0
   279e0:	add	sp, sp, #468	; 0x1d4
   279e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   279e8:	ldr	ip, [r4, #4]
   279ec:	ldrd	r2, [r4, #48]	; 0x30
   279f0:	ldr	r0, [r6, #204]	; 0xcc
   279f4:	ldr	r1, [ip, #4]
   279f8:	str	r1, [sp, #12]
   279fc:	ldr	ip, [ip]
   27a00:	str	fp, [sp]
   27a04:	stmib	sp, {r1, ip}
   27a08:	mov	r1, r5
   27a0c:	bl	1408c <fprintf@plt>
   27a10:	b	279a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2a60>
   27a14:	ldr	ip, [r4, #4]
   27a18:	ldrb	r2, [r4, #48]	; 0x30
   27a1c:	ldr	r0, [r6, #204]	; 0xcc
   27a20:	ldr	r1, [ip, #4]
   27a24:	mov	r3, #0
   27a28:	str	r1, [sp, #12]
   27a2c:	ldr	ip, [ip]
   27a30:	str	fp, [sp]
   27a34:	stmib	sp, {r1, ip}
   27a38:	mov	r1, r7
   27a3c:	bl	1408c <fprintf@plt>
   27a40:	b	279a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2a60>
   27a44:	ldr	r1, [pc, #776]	; 27d54 <__flatcc_fb_gen_c_json_parser@@Base+0x2e14>
   27a48:	mov	r3, ip
   27a4c:	ldr	r0, [r6, #204]	; 0xcc
   27a50:	mov	r2, r8
   27a54:	add	r1, pc, r1
   27a58:	str	r9, [sp]
   27a5c:	bl	1408c <fprintf@plt>
   27a60:	ldr	r0, [pc, #752]	; 27d58 <__flatcc_fb_gen_c_json_parser@@Base+0x2e18>
   27a64:	ldr	r3, [r6, #204]	; 0xcc
   27a68:	mov	r2, #18
   27a6c:	mov	r1, #1
   27a70:	add	r0, pc, r0
   27a74:	bl	14014 <fwrite@plt>
   27a78:	ldr	r4, [r7, #20]
   27a7c:	cmp	r4, #0
   27a80:	beq	27b54 <__flatcc_fb_gen_c_json_parser@@Base+0x2c14>
   27a84:	ldr	r8, [pc, #720]	; 27d5c <__flatcc_fb_gen_c_json_parser@@Base+0x2e1c>
   27a88:	ldr	r7, [pc, #720]	; 27d60 <__flatcc_fb_gen_c_json_parser@@Base+0x2e20>
   27a8c:	ldr	r5, [pc, #720]	; 27d64 <__flatcc_fb_gen_c_json_parser@@Base+0x2e24>
   27a90:	add	r8, pc, r8
   27a94:	add	r7, pc, r7
   27a98:	add	r5, pc, r5
   27a9c:	ldrh	r3, [r4, #56]	; 0x38
   27aa0:	cmp	r3, #5
   27aa4:	beq	27b94 <__flatcc_fb_gen_c_json_parser@@Base+0x2c54>
   27aa8:	cmp	r3, #6
   27aac:	beq	27b6c <__flatcc_fb_gen_c_json_parser@@Base+0x2c2c>
   27ab0:	cmp	r3, #4
   27ab4:	beq	27b24 <__flatcc_fb_gen_c_json_parser@@Base+0x2be4>
   27ab8:	ldr	r2, [pc, #520]	; 27cc8 <__flatcc_fb_gen_c_json_parser@@Base+0x2d88>
   27abc:	ldr	r3, [pc, #676]	; 27d68 <__flatcc_fb_gen_c_json_parser@@Base+0x2e28>
   27ac0:	ldr	r4, [pc, #676]	; 27d6c <__flatcc_fb_gen_c_json_parser@@Base+0x2e2c>
   27ac4:	ldr	r1, [sl, r2]
   27ac8:	add	r3, pc, r3
   27acc:	str	r3, [sp]
   27ad0:	ldr	r0, [r1]
   27ad4:	ldr	r1, [pc, #660]	; 27d70 <__flatcc_fb_gen_c_json_parser@@Base+0x2e30>
   27ad8:	add	r4, pc, r4
   27adc:	mov	r2, r4
   27ae0:	mov	r3, #157	; 0x9d
   27ae4:	add	r1, pc, r1
   27ae8:	bl	1408c <fprintf@plt>
   27aec:	ldr	r3, [pc, #640]	; 27d74 <__flatcc_fb_gen_c_json_parser@@Base+0x2e34>
   27af0:	ldr	r0, [pc, #640]	; 27d78 <__flatcc_fb_gen_c_json_parser@@Base+0x2e38>
   27af4:	add	r3, pc, r3
   27af8:	mov	r1, r4
   27afc:	add	r3, r3, #52	; 0x34
   27b00:	mov	r2, #157	; 0x9d
   27b04:	add	r0, pc, r0
   27b08:	bl	14140 <__assert_fail@plt>
   27b0c:	ldr	r1, [pc, #616]	; 27d7c <__flatcc_fb_gen_c_json_parser@@Base+0x2e3c>
   27b10:	ldr	r2, [sp, #16]
   27b14:	add	r1, pc, r1
   27b18:	ldr	r0, [r6, #204]	; 0xcc
   27b1c:	bl	1408c <fprintf@plt>
   27b20:	b	27758 <__flatcc_fb_gen_c_json_parser@@Base+0x2818>
   27b24:	ldr	ip, [r4, #4]
   27b28:	ldrd	r2, [r4, #48]	; 0x30
   27b2c:	ldr	r0, [r6, #204]	; 0xcc
   27b30:	ldr	r1, [ip, #4]
   27b34:	str	r1, [sp, #8]
   27b38:	ldr	ip, [ip]
   27b3c:	stm	sp, {r1, ip}
   27b40:	mov	r1, r5
   27b44:	bl	1408c <fprintf@plt>
   27b48:	ldr	r4, [r4]
   27b4c:	cmp	r4, #0
   27b50:	bne	27a9c <__flatcc_fb_gen_c_json_parser@@Base+0x2b5c>
   27b54:	ldr	r1, [pc, #548]	; 27d80 <__flatcc_fb_gen_c_json_parser@@Base+0x2e40>
   27b58:	ldr	r2, [sp, #20]
   27b5c:	add	r1, pc, r1
   27b60:	ldr	r0, [r6, #204]	; 0xcc
   27b64:	bl	1408c <fprintf@plt>
   27b68:	b	279c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2a84>
   27b6c:	ldr	r1, [r4, #4]
   27b70:	ldrb	r2, [r4, #48]	; 0x30
   27b74:	ldr	r0, [r6, #204]	; 0xcc
   27b78:	ldr	r3, [r1, #4]
   27b7c:	str	r3, [sp, #4]
   27b80:	ldr	r1, [r1]
   27b84:	str	r1, [sp]
   27b88:	mov	r1, r7
   27b8c:	bl	1408c <fprintf@plt>
   27b90:	b	27b48 <__flatcc_fb_gen_c_json_parser@@Base+0x2c08>
   27b94:	ldr	ip, [r4, #4]
   27b98:	ldrd	r2, [r4, #48]	; 0x30
   27b9c:	ldr	r0, [r6, #204]	; 0xcc
   27ba0:	ldr	r1, [ip, #4]
   27ba4:	str	r1, [sp, #8]
   27ba8:	ldr	ip, [ip]
   27bac:	stm	sp, {r1, ip}
   27bb0:	mov	r1, r8
   27bb4:	bl	1408c <fprintf@plt>
   27bb8:	b	27b48 <__flatcc_fb_gen_c_json_parser@@Base+0x2c08>
   27bbc:	ldr	r3, [sp, #20]
   27bc0:	ldr	r1, [pc, #444]	; 27d84 <__flatcc_fb_gen_c_json_parser@@Base+0x2e44>
   27bc4:	ldr	r0, [r6, #204]	; 0xcc
   27bc8:	mov	r2, r4
   27bcc:	str	r3, [sp]
   27bd0:	add	r1, pc, r1
   27bd4:	mov	r3, r5
   27bd8:	bl	1408c <fprintf@plt>
   27bdc:	b	27784 <__flatcc_fb_gen_c_json_parser@@Base+0x2844>
   27be0:	ldr	r3, [pc, #416]	; 27d88 <__flatcc_fb_gen_c_json_parser@@Base+0x2e48>
   27be4:	ldr	fp, [pc, #416]	; 27d8c <__flatcc_fb_gen_c_json_parser@@Base+0x2e4c>
   27be8:	add	r3, pc, r3
   27bec:	str	r3, [sp, #16]
   27bf0:	add	fp, pc, fp
   27bf4:	ldr	r4, [pc, #404]	; 27d90 <__flatcc_fb_gen_c_json_parser@@Base+0x2e50>
   27bf8:	mov	r5, #0
   27bfc:	b	276c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2780>
   27c00:	ldr	r3, [pc, #396]	; 27d94 <__flatcc_fb_gen_c_json_parser@@Base+0x2e54>
   27c04:	ldr	fp, [pc, #396]	; 27d98 <__flatcc_fb_gen_c_json_parser@@Base+0x2e58>
   27c08:	add	r3, pc, r3
   27c0c:	str	r3, [sp, #16]
   27c10:	add	fp, pc, fp
   27c14:	mov	r4, #255	; 0xff
   27c18:	mov	r5, #0
   27c1c:	b	276c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2780>
   27c20:	ldr	r3, [pc, #372]	; 27d9c <__flatcc_fb_gen_c_json_parser@@Base+0x2e5c>
   27c24:	ldr	fp, [pc, #372]	; 27da0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e60>
   27c28:	add	r3, pc, r3
   27c2c:	str	r3, [sp, #16]
   27c30:	add	fp, pc, fp
   27c34:	mvn	r4, #0
   27c38:	mov	r5, #0
   27c3c:	b	276c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2780>
   27c40:	ldr	r2, [pc, #128]	; 27cc8 <__flatcc_fb_gen_c_json_parser@@Base+0x2d88>
   27c44:	ldr	r3, [pc, #344]	; 27da4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e64>
   27c48:	ldr	r4, [pc, #344]	; 27da8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e68>
   27c4c:	ldr	r1, [sl, r2]
   27c50:	add	r3, pc, r3
   27c54:	str	r3, [sp]
   27c58:	ldr	r0, [r1]
   27c5c:	ldr	r1, [pc, #328]	; 27dac <__flatcc_fb_gen_c_json_parser@@Base+0x2e6c>
   27c60:	add	r4, pc, r4
   27c64:	mov	r2, r4
   27c68:	mov	r3, #96	; 0x60
   27c6c:	add	r1, pc, r1
   27c70:	bl	1408c <fprintf@plt>
   27c74:	ldr	r3, [pc, #308]	; 27db0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e70>
   27c78:	ldr	r0, [pc, #308]	; 27db4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e74>
   27c7c:	add	r3, pc, r3
   27c80:	mov	r1, r4
   27c84:	add	r3, r3, #32
   27c88:	mov	r2, #96	; 0x60
   27c8c:	add	r0, pc, r0
   27c90:	bl	14140 <__assert_fail@plt>
   27c94:	andeq	r3, r4, r0, ror #19
   27c98:	strdeq	r9, [r1], -r0
   27c9c:	ldrdeq	r3, [r2], -ip
   27ca0:	andeq	r9, r1, r0, ror fp
   27ca4:	strdeq	lr, [r2], -ip
   27ca8:	andeq	r9, r1, r0, lsl #13
   27cac:	andeq	lr, r2, ip, lsl fp
   27cb0:	andeq	lr, r2, r0, ror #16
   27cb4:	andeq	lr, r2, r8, ror #16
   27cb8:	ldrdeq	lr, [r2], -r8
   27cbc:	strdeq	lr, [r2], -r4
   27cc0:	strdeq	lr, [r2], -r0
   27cc4:	andeq	lr, r2, ip, ror #17
   27cc8:	andeq	r0, r0, r0, lsr #1
   27ccc:	andeq	lr, r2, ip, lsl #18
   27cd0:	andeq	lr, r2, ip, ror r4
   27cd4:			; <UNDEFINED> instruction: 0x000196b4
   27cd8:	andeq	lr, r2, r0, lsl #5
   27cdc:	muleq	r2, r4, sl
   27ce0:	muleq	r1, r4, r9
   27ce4:	andeq	r9, r1, r0, lsl #10
   27ce8:	strdeq	r3, [r2], -r8
   27cec:	andeq	r9, r1, ip, ror #18
   27cf0:	ldrdeq	r9, [r1], -r4
   27cf4:	ldrdeq	r3, [r2], -r8
   27cf8:	andeq	r9, r1, ip, lsl r5
   27cfc:	andeq	r3, r2, r0, asr #5
   27d00:	strdeq	r9, [r1], -r8
   27d04:	andeq	r3, r2, r4, lsr #5
   27d08:	andeq	r9, r1, r4, lsr r9
   27d0c:			; <UNDEFINED> instruction: 0x000194b0
   27d10:	andeq	r3, r2, r0, lsl #5
   27d14:	andeq	r9, r1, ip, lsl r9
   27d18:	muleq	r1, r8, r4
   27d1c:	andeq	r3, r2, r0, ror #4
   27d20:	andeq	r9, r1, r4, lsl #18
   27d24:	andeq	r9, r1, r0, lsl #9
   27d28:	andeq	r3, r2, r0, asr #4
   27d2c:	andeq	r9, r1, ip, ror #17
   27d30:	andeq	r9, r1, r8, ror #8
   27d34:	andeq	r3, r2, r0, lsr #4
   27d38:	andeq	r9, r1, ip, lsr #17
   27d3c:	andeq	r9, r1, r0, lsr #8
   27d40:	andeq	r3, r2, r0, lsl #4
   27d44:			; <UNDEFINED> instruction: 0x00031bb8
   27d48:	andeq	r9, r1, r8, lsl #8
   27d4c:			; <UNDEFINED> instruction: 0x0002e6b0
   27d50:	andeq	fp, r2, r8, lsr #6
   27d54:	andeq	lr, r2, r8, ror #15
   27d58:	andeq	lr, r2, r4, lsl r8
   27d5c:	andeq	lr, r2, r4, lsr #13
   27d60:	andeq	lr, r2, r8, lsr #14
   27d64:	andeq	lr, r2, r0, ror #13
   27d68:	andeq	lr, r2, r0, lsr r6
   27d6c:	andeq	lr, r2, r0, lsr #3
   27d70:	ldrdeq	r9, [r1], -r8
   27d74:	andeq	sp, r2, r4, lsr #31
   27d78:			; <UNDEFINED> instruction: 0x000217b8
   27d7c:	andeq	lr, r2, ip, lsr #9
   27d80:	andeq	lr, r2, r4, lsr #13
   27d84:	andeq	lr, r2, r8, lsr r4
   27d88:	andeq	r9, r1, r8, ror #2
   27d8c:			; <UNDEFINED> instruction: 0x0002e3b0
   27d90:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   27d94:	andeq	r9, r1, r4, asr r1
   27d98:	muleq	r2, r0, r3
   27d9c:	andeq	r9, r1, ip, lsl r1
   27da0:	andeq	lr, r2, r4, ror r3
   27da4:	andeq	r9, r1, r8, ror r2
   27da8:	strdeq	r9, [r1], -ip
   27dac:	andeq	r9, r1, r0, asr r2
   27db0:	andeq	sp, r2, ip, lsl lr
   27db4:	andeq	r1, r2, r0, lsr r6
   27db8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27dbc:	sub	sp, sp, #524	; 0x20c
   27dc0:	add	r4, sp, #80	; 0x50
   27dc4:	mov	sl, r1
   27dc8:	add	r5, sp, #300	; 0x12c
   27dcc:	mov	r2, #220	; 0xdc
   27dd0:	mov	r1, #0
   27dd4:	mov	r9, r0
   27dd8:	mov	r0, r4
   27ddc:	str	r4, [sp, #48]	; 0x30
   27de0:	str	r5, [sp, #40]	; 0x28
   27de4:	bl	140a4 <memset@plt>
   27de8:	mov	r0, r5
   27dec:	mov	r2, #220	; 0xdc
   27df0:	mov	r1, #0
   27df4:	bl	140a4 <memset@plt>
   27df8:	mov	r2, r4
   27dfc:	mov	r1, sl
   27e00:	ldr	r0, [sl, #12]
   27e04:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   27e08:	ldr	r4, [sl, #96]	; 0x60
   27e0c:	mov	r1, #4
   27e10:	mov	r0, r4
   27e14:	ldr	r5, [sl, #100]	; 0x64
   27e18:	bl	13f9c <calloc@plt>
   27e1c:	orrs	r3, r4, r5
   27e20:	movne	r3, #1
   27e24:	moveq	r3, #0
   27e28:	ldr	r2, [pc, #3280]	; 28b00 <__flatcc_fb_gen_c_json_parser@@Base+0x3bc0>
   27e2c:	add	r2, pc, r2
   27e30:	str	r2, [sp, #52]	; 0x34
   27e34:	cmp	r0, #0
   27e38:	movne	r3, #0
   27e3c:	andeq	r3, r3, #1
   27e40:	cmp	r3, #0
   27e44:	bne	28aa8 <__flatcc_fb_gen_c_json_parser@@Base+0x3b68>
   27e48:	ldr	r3, [sl, #20]
   27e4c:	mov	r8, r0
   27e50:	cmp	r3, #0
   27e54:	beq	27e6c <__flatcc_fb_gen_c_json_parser@@Base+0x2f2c>
   27e58:	ldr	r2, [r3, #96]	; 0x60
   27e5c:	str	r3, [r8, r2, lsl #2]
   27e60:	ldr	r3, [r3]
   27e64:	cmp	r3, #0
   27e68:	bne	27e58 <__flatcc_fb_gen_c_json_parser@@Base+0x2f18>
   27e6c:	ldr	r1, [pc, #3216]	; 28b04 <__flatcc_fb_gen_c_json_parser@@Base+0x3bc4>
   27e70:	ldr	r2, [sp, #48]	; 0x30
   27e74:	add	r1, pc, r1
   27e78:	ldr	r0, [r9]
   27e7c:	bl	1408c <fprintf@plt>
   27e80:	ldrd	r0, [sl, #96]	; 0x60
   27e84:	orrs	r3, r0, r1
   27e88:	beq	2812c <__flatcc_fb_gen_c_json_parser@@Base+0x31ec>
   27e8c:	ldr	r3, [pc, #3188]	; 28b08 <__flatcc_fb_gen_c_json_parser@@Base+0x3bc8>
   27e90:	ldr	fp, [pc, #3188]	; 28b0c <__flatcc_fb_gen_c_json_parser@@Base+0x3bcc>
   27e94:	add	r3, pc, r3
   27e98:	str	r3, [sp, #60]	; 0x3c
   27e9c:	ldr	r3, [pc, #3180]	; 28b10 <__flatcc_fb_gen_c_json_parser@@Base+0x3bd0>
   27ea0:	add	fp, pc, fp
   27ea4:	add	r3, pc, r3
   27ea8:	str	r3, [sp, #64]	; 0x40
   27eac:	ldr	r3, [pc, #3168]	; 28b14 <__flatcc_fb_gen_c_json_parser@@Base+0x3bd4>
   27eb0:	sub	r5, r8, #4
   27eb4:	add	r3, pc, r3
   27eb8:	str	r3, [sp, #68]	; 0x44
   27ebc:	ldr	r3, [pc, #3156]	; 28b18 <__flatcc_fb_gen_c_json_parser@@Base+0x3bd8>
   27ec0:	str	r8, [sp, #56]	; 0x38
   27ec4:	add	r3, pc, r3
   27ec8:	str	r3, [sp, #72]	; 0x48
   27ecc:	ldr	r3, [pc, #3144]	; 28b1c <__flatcc_fb_gen_c_json_parser@@Base+0x3bdc>
   27ed0:	ldr	r8, [sp, #40]	; 0x28
   27ed4:	add	r3, pc, r3
   27ed8:	str	r3, [sp, #76]	; 0x4c
   27edc:	mov	r6, #0
   27ee0:	mov	r7, #0
   27ee4:	str	sl, [sp, #44]	; 0x2c
   27ee8:	str	fp, [sp, #40]	; 0x28
   27eec:	b	27f04 <__flatcc_fb_gen_c_json_parser@@Base+0x2fc4>
   27ef0:	adds	r6, r6, #1
   27ef4:	adc	r7, r7, #0
   27ef8:	cmp	r7, r1
   27efc:	cmpeq	r6, r0
   27f00:	bcs	28128 <__flatcc_fb_gen_c_json_parser@@Base+0x31e8>
   27f04:	ldr	r4, [r5, #4]!
   27f08:	cmp	r4, #0
   27f0c:	beq	27ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   27f10:	ldrh	r3, [r4, #72]	; 0x48
   27f14:	tst	r3, #4
   27f18:	bne	27ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   27f1c:	ldr	r3, [r9]
   27f20:	mov	r2, #5
   27f24:	mov	r1, #1
   27f28:	ldr	r0, [sp, #40]	; 0x28
   27f2c:	bl	14014 <fwrite@plt>
   27f30:	ldrh	r3, [r4, #24]
   27f34:	sub	r3, r3, #7
   27f38:	cmp	r3, #8
   27f3c:	addls	pc, pc, r3, lsl #2
   27f40:	b	2811c <__flatcc_fb_gen_c_json_parser@@Base+0x31dc>
   27f44:	b	28080 <__flatcc_fb_gen_c_json_parser@@Base+0x3140>
   27f48:	b	28040 <__flatcc_fb_gen_c_json_parser@@Base+0x3100>
   27f4c:	b	2800c <__flatcc_fb_gen_c_json_parser@@Base+0x30cc>
   27f50:	b	27fd8 <__flatcc_fb_gen_c_json_parser@@Base+0x3098>
   27f54:	b	2811c <__flatcc_fb_gen_c_json_parser@@Base+0x31dc>
   27f58:	b	2811c <__flatcc_fb_gen_c_json_parser@@Base+0x31dc>
   27f5c:	b	2811c <__flatcc_fb_gen_c_json_parser@@Base+0x31dc>
   27f60:	b	27fa0 <__flatcc_fb_gen_c_json_parser@@Base+0x3060>
   27f64:	b	27f68 <__flatcc_fb_gen_c_json_parser@@Base+0x3028>
   27f68:	ldr	r1, [r4, #16]
   27f6c:	mov	r2, r8
   27f70:	ldr	r0, [r1, #12]
   27f74:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   27f78:	ldr	r2, [r4, #16]
   27f7c:	ldrh	r3, [r2, #8]
   27f80:	cmp	r3, #4
   27f84:	addls	pc, pc, r3, lsl #2
   27f88:	b	283d4 <__flatcc_fb_gen_c_json_parser@@Base+0x3494>
   27f8c:	b	28308 <__flatcc_fb_gen_c_json_parser@@Base+0x33c8>
   27f90:	b	280ec <__flatcc_fb_gen_c_json_parser@@Base+0x31ac>
   27f94:	b	283d4 <__flatcc_fb_gen_c_json_parser@@Base+0x3494>
   27f98:	b	28340 <__flatcc_fb_gen_c_json_parser@@Base+0x3400>
   27f9c:	b	28260 <__flatcc_fb_gen_c_json_parser@@Base+0x3320>
   27fa0:	ldr	r1, [r4, #16]
   27fa4:	mov	r2, r8
   27fa8:	ldr	r0, [r1, #12]
   27fac:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   27fb0:	ldr	r2, [r4, #16]
   27fb4:	ldrh	r3, [r2, #8]
   27fb8:	cmp	r3, #4
   27fbc:	addls	pc, pc, r3, lsl #2
   27fc0:	b	2837c <__flatcc_fb_gen_c_json_parser@@Base+0x343c>
   27fc4:	b	28298 <__flatcc_fb_gen_c_json_parser@@Base+0x3358>
   27fc8:	b	282d0 <__flatcc_fb_gen_c_json_parser@@Base+0x3390>
   27fcc:	b	2837c <__flatcc_fb_gen_c_json_parser@@Base+0x343c>
   27fd0:	b	28220 <__flatcc_fb_gen_c_json_parser@@Base+0x32e0>
   27fd4:	b	281e4 <__flatcc_fb_gen_c_json_parser@@Base+0x32a4>
   27fd8:	ldr	ip, [r4, #4]
   27fdc:	ldrd	r2, [r4, #96]	; 0x60
   27fe0:	ldr	r0, [r9]
   27fe4:	ldr	r1, [ip, #4]
   27fe8:	str	r1, [sp, #8]
   27fec:	ldr	ip, [ip]
   27ff0:	stm	sp, {r1, ip}
   27ff4:	ldr	r1, [pc, #2852]	; 28b20 <__flatcc_fb_gen_c_json_parser@@Base+0x3be0>
   27ff8:	add	r1, pc, r1
   27ffc:	bl	1408c <fprintf@plt>
   28000:	ldr	r3, [sp, #44]	; 0x2c
   28004:	ldrd	r0, [r3, #96]	; 0x60
   28008:	b	27ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   2800c:	ldr	ip, [r4, #4]
   28010:	ldrd	r2, [r4, #96]	; 0x60
   28014:	ldr	r0, [r9]
   28018:	ldr	r1, [ip, #4]
   2801c:	str	r1, [sp, #8]
   28020:	ldr	ip, [ip]
   28024:	stm	sp, {r1, ip}
   28028:	ldr	r1, [pc, #2804]	; 28b24 <__flatcc_fb_gen_c_json_parser@@Base+0x3be4>
   2802c:	add	r1, pc, r1
   28030:	bl	1408c <fprintf@plt>
   28034:	ldr	r3, [sp, #44]	; 0x2c
   28038:	ldrd	r0, [r3, #96]	; 0x60
   2803c:	b	27ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   28040:	ldr	r3, [r4, #16]
   28044:	sub	r3, r3, #1
   28048:	cmp	r3, #10
   2804c:	addls	pc, pc, r3, lsl #2
   28050:	b	28644 <__flatcc_fb_gen_c_json_parser@@Base+0x3704>
   28054:	b	28580 <__flatcc_fb_gen_c_json_parser@@Base+0x3640>
   28058:	b	285a4 <__flatcc_fb_gen_c_json_parser@@Base+0x3664>
   2805c:	b	2846c <__flatcc_fb_gen_c_json_parser@@Base+0x352c>
   28060:	b	285d4 <__flatcc_fb_gen_c_json_parser@@Base+0x3694>
   28064:	b	285e0 <__flatcc_fb_gen_c_json_parser@@Base+0x36a0>
   28068:	b	2858c <__flatcc_fb_gen_c_json_parser@@Base+0x364c>
   2806c:	b	28598 <__flatcc_fb_gen_c_json_parser@@Base+0x3658>
   28070:	b	285bc <__flatcc_fb_gen_c_json_parser@@Base+0x367c>
   28074:	b	285c8 <__flatcc_fb_gen_c_json_parser@@Base+0x3688>
   28078:	b	285b0 <__flatcc_fb_gen_c_json_parser@@Base+0x3670>
   2807c:	b	28574 <__flatcc_fb_gen_c_json_parser@@Base+0x3634>
   28080:	ldrh	r3, [r4, #72]	; 0x48
   28084:	tst	r3, #3072	; 0xc00
   28088:	bne	28190 <__flatcc_fb_gen_c_json_parser@@Base+0x3250>
   2808c:	ldr	r1, [r4, #104]	; 0x68
   28090:	cmp	r1, #0
   28094:	beq	2842c <__flatcc_fb_gen_c_json_parser@@Base+0x34ec>
   28098:	ldr	r0, [r1, #12]
   2809c:	mov	r2, r8
   280a0:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   280a4:	ldr	r3, [r4, #104]	; 0x68
   280a8:	ldr	ip, [r4, #4]
   280ac:	ldr	r0, [r9]
   280b0:	ldrh	r3, [r3, #8]
   280b4:	ldr	r1, [ip, #4]
   280b8:	cmp	r3, #0
   280bc:	ldrd	r2, [r4, #96]	; 0x60
   280c0:	str	r8, [sp, #12]
   280c4:	str	r1, [sp, #8]
   280c8:	ldr	ip, [ip]
   280cc:	stm	sp, {r1, ip}
   280d0:	bne	28178 <__flatcc_fb_gen_c_json_parser@@Base+0x3238>
   280d4:	ldr	r1, [pc, #2636]	; 28b28 <__flatcc_fb_gen_c_json_parser@@Base+0x3be8>
   280d8:	add	r1, pc, r1
   280dc:	bl	1408c <fprintf@plt>
   280e0:	ldr	r3, [sp, #44]	; 0x2c
   280e4:	ldrd	r0, [r3, #96]	; 0x60
   280e8:	b	27ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   280ec:	ldr	ip, [r4, #4]
   280f0:	ldrd	r2, [r4, #96]	; 0x60
   280f4:	ldr	r0, [r9]
   280f8:	ldr	r1, [ip, #4]
   280fc:	str	r8, [sp, #24]
   28100:	ldrd	sl, [r4, #88]	; 0x58
   28104:	str	r1, [sp, #8]
   28108:	strd	sl, [sp, #16]
   2810c:	ldr	ip, [ip]
   28110:	stm	sp, {r1, ip}
   28114:	ldr	r1, [sp, #64]	; 0x40
   28118:	bl	1408c <fprintf@plt>
   2811c:	ldr	r3, [sp, #44]	; 0x2c
   28120:	ldrd	r0, [r3, #96]	; 0x60
   28124:	b	27ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   28128:	ldr	r8, [sp, #56]	; 0x38
   2812c:	ldr	r0, [pc, #2552]	; 28b2c <__flatcc_fb_gen_c_json_parser@@Base+0x3bec>
   28130:	ldr	r3, [r9]
   28134:	mov	r2, #4
   28138:	mov	r1, #1
   2813c:	add	r0, pc, r0
   28140:	bl	14014 <fwrite@plt>
   28144:	ldr	r3, [sp, #48]	; 0x30
   28148:	ldr	r1, [pc, #2528]	; 28b30 <__flatcc_fb_gen_c_json_parser@@Base+0x3bf0>
   2814c:	mov	r2, r3
   28150:	ldr	r0, [r9]
   28154:	add	r1, pc, r1
   28158:	bl	1408c <fprintf@plt>
   2815c:	cmp	r8, #0
   28160:	beq	2816c <__flatcc_fb_gen_c_json_parser@@Base+0x322c>
   28164:	mov	r0, r8
   28168:	bl	13fcc <free@plt>
   2816c:	mov	r0, #0
   28170:	add	sp, sp, #524	; 0x20c
   28174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28178:	ldr	r1, [pc, #2484]	; 28b34 <__flatcc_fb_gen_c_json_parser@@Base+0x3bf4>
   2817c:	add	r1, pc, r1
   28180:	bl	1408c <fprintf@plt>
   28184:	ldr	r3, [sp, #44]	; 0x2c
   28188:	ldrd	r0, [r3, #96]	; 0x60
   2818c:	b	27ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   28190:	ldr	r2, [r4, #4]
   28194:	ldrd	r0, [r4, #96]	; 0x60
   28198:	lsr	r3, r3, #10
   2819c:	ldr	ip, [r2, #4]
   281a0:	eor	r3, r3, #1
   281a4:	and	r3, r3, #1
   281a8:	str	r3, [sp, #12]
   281ac:	str	ip, [sp, #8]
   281b0:	mov	r3, r1
   281b4:	ldr	lr, [r9]
   281b8:	ldr	r4, [r2]
   281bc:	ldr	r1, [pc, #2420]	; 28b38 <__flatcc_fb_gen_c_json_parser@@Base+0x3bf8>
   281c0:	mov	r2, r0
   281c4:	add	r1, pc, r1
   281c8:	str	r4, [sp, #4]
   281cc:	str	ip, [sp]
   281d0:	mov	r0, lr
   281d4:	bl	1408c <fprintf@plt>
   281d8:	ldr	r3, [sp, #44]	; 0x2c
   281dc:	ldrd	r0, [r3, #96]	; 0x60
   281e0:	b	27ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   281e4:	ldr	ip, [r4, #4]
   281e8:	ldrd	r2, [r4, #96]	; 0x60
   281ec:	ldr	r0, [r9]
   281f0:	ldr	r1, [ip, #4]
   281f4:	str	r8, [sp, #16]
   281f8:	str	r1, [sp, #8]
   281fc:	str	r8, [sp, #12]
   28200:	ldr	ip, [ip]
   28204:	stm	sp, {r1, ip}
   28208:	ldr	r1, [pc, #2348]	; 28b3c <__flatcc_fb_gen_c_json_parser@@Base+0x3bfc>
   2820c:	add	r1, pc, r1
   28210:	bl	1408c <fprintf@plt>
   28214:	ldr	r3, [sp, #44]	; 0x2c
   28218:	ldrd	r0, [r3, #96]	; 0x60
   2821c:	b	27ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   28220:	ldr	r3, [r2, #40]	; 0x28
   28224:	sub	r3, r3, #1
   28228:	cmp	r3, #10
   2822c:	addls	pc, pc, r3, lsl #2
   28230:	b	289f8 <__flatcc_fb_gen_c_json_parser@@Base+0x3ab8>
   28234:	b	28838 <__flatcc_fb_gen_c_json_parser@@Base+0x38f8>
   28238:	b	2882c <__flatcc_fb_gen_c_json_parser@@Base+0x38ec>
   2823c:	b	28808 <__flatcc_fb_gen_c_json_parser@@Base+0x38c8>
   28240:	b	287fc <__flatcc_fb_gen_c_json_parser@@Base+0x38bc>
   28244:	b	287f0 <__flatcc_fb_gen_c_json_parser@@Base+0x38b0>
   28248:	b	287e4 <__flatcc_fb_gen_c_json_parser@@Base+0x38a4>
   2824c:	b	28820 <__flatcc_fb_gen_c_json_parser@@Base+0x38e0>
   28250:	b	28814 <__flatcc_fb_gen_c_json_parser@@Base+0x38d4>
   28254:	b	287d8 <__flatcc_fb_gen_c_json_parser@@Base+0x3898>
   28258:	b	287cc <__flatcc_fb_gen_c_json_parser@@Base+0x388c>
   2825c:	b	28764 <__flatcc_fb_gen_c_json_parser@@Base+0x3824>
   28260:	ldr	ip, [r4, #4]
   28264:	ldrd	r2, [r4, #96]	; 0x60
   28268:	ldr	r0, [r9]
   2826c:	ldr	r1, [ip, #4]
   28270:	str	r8, [sp, #16]
   28274:	str	r1, [sp, #8]
   28278:	str	r8, [sp, #12]
   2827c:	ldr	ip, [ip]
   28280:	stm	sp, {r1, ip}
   28284:	ldr	r1, [sp, #60]	; 0x3c
   28288:	bl	1408c <fprintf@plt>
   2828c:	ldr	r3, [sp, #44]	; 0x2c
   28290:	ldrd	r0, [r3, #96]	; 0x60
   28294:	b	27ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   28298:	ldr	ip, [r4, #4]
   2829c:	ldrd	r2, [r4, #96]	; 0x60
   282a0:	ldr	r0, [r9]
   282a4:	ldr	r1, [ip, #4]
   282a8:	str	r8, [sp, #12]
   282ac:	str	r1, [sp, #8]
   282b0:	ldr	ip, [ip]
   282b4:	stm	sp, {r1, ip}
   282b8:	ldr	r1, [pc, #2176]	; 28b40 <__flatcc_fb_gen_c_json_parser@@Base+0x3c00>
   282bc:	add	r1, pc, r1
   282c0:	bl	1408c <fprintf@plt>
   282c4:	ldr	r3, [sp, #44]	; 0x2c
   282c8:	ldrd	r0, [r3, #96]	; 0x60
   282cc:	b	27ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   282d0:	ldr	ip, [r4, #4]
   282d4:	ldrd	r2, [r4, #96]	; 0x60
   282d8:	ldr	r0, [r9]
   282dc:	ldr	r1, [ip, #4]
   282e0:	str	r8, [sp, #12]
   282e4:	str	r1, [sp, #8]
   282e8:	ldr	ip, [ip]
   282ec:	stm	sp, {r1, ip}
   282f0:	ldr	r1, [pc, #2124]	; 28b44 <__flatcc_fb_gen_c_json_parser@@Base+0x3c04>
   282f4:	add	r1, pc, r1
   282f8:	bl	1408c <fprintf@plt>
   282fc:	ldr	r3, [sp, #44]	; 0x2c
   28300:	ldrd	r0, [r3, #96]	; 0x60
   28304:	b	27ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   28308:	ldr	ip, [r4, #4]
   2830c:	ldrd	r2, [r4, #96]	; 0x60
   28310:	ldr	r0, [r9]
   28314:	ldr	r1, [ip, #4]
   28318:	str	r8, [sp, #12]
   2831c:	str	r1, [sp, #8]
   28320:	ldr	ip, [ip]
   28324:	stm	sp, {r1, ip}
   28328:	ldr	r1, [pc, #2072]	; 28b48 <__flatcc_fb_gen_c_json_parser@@Base+0x3c08>
   2832c:	add	r1, pc, r1
   28330:	bl	1408c <fprintf@plt>
   28334:	ldr	r3, [sp, #44]	; 0x2c
   28338:	ldrd	r0, [r3, #96]	; 0x60
   2833c:	b	27ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   28340:	sub	r2, r2, #1
   28344:	cmp	r2, #10
   28348:	addls	pc, pc, r2, lsl #2
   2834c:	b	289a0 <__flatcc_fb_gen_c_json_parser@@Base+0x3a60>
   28350:	b	2875c <__flatcc_fb_gen_c_json_parser@@Base+0x381c>
   28354:	b	28750 <__flatcc_fb_gen_c_json_parser@@Base+0x3810>
   28358:	b	28748 <__flatcc_fb_gen_c_json_parser@@Base+0x3808>
   2835c:	b	2873c <__flatcc_fb_gen_c_json_parser@@Base+0x37fc>
   28360:	b	28730 <__flatcc_fb_gen_c_json_parser@@Base+0x37f0>
   28364:	b	28724 <__flatcc_fb_gen_c_json_parser@@Base+0x37e4>
   28368:	b	28718 <__flatcc_fb_gen_c_json_parser@@Base+0x37d8>
   2836c:	b	2870c <__flatcc_fb_gen_c_json_parser@@Base+0x37cc>
   28370:	b	28700 <__flatcc_fb_gen_c_json_parser@@Base+0x37c0>
   28374:	b	286f4 <__flatcc_fb_gen_c_json_parser@@Base+0x37b4>
   28378:	b	2869c <__flatcc_fb_gen_c_json_parser@@Base+0x375c>
   2837c:	ldr	r2, [pc, #1992]	; 28b4c <__flatcc_fb_gen_c_json_parser@@Base+0x3c0c>
   28380:	ldr	r1, [sp, #52]	; 0x34
   28384:	ldr	r3, [pc, #1988]	; 28b50 <__flatcc_fb_gen_c_json_parser@@Base+0x3c10>
   28388:	ldr	r4, [pc, #1988]	; 28b54 <__flatcc_fb_gen_c_json_parser@@Base+0x3c14>
   2838c:	ldr	r1, [r1, r2]
   28390:	add	r3, pc, r3
   28394:	str	r3, [sp]
   28398:	ldr	r0, [r1]
   2839c:	ldr	r1, [pc, #1972]	; 28b58 <__flatcc_fb_gen_c_json_parser@@Base+0x3c18>
   283a0:	add	r4, pc, r4
   283a4:	mov	r2, r4
   283a8:	mov	r3, #504	; 0x1f8
   283ac:	add	r1, pc, r1
   283b0:	bl	1408c <fprintf@plt>
   283b4:	ldr	r3, [pc, #1952]	; 28b5c <__flatcc_fb_gen_c_json_parser@@Base+0x3c1c>
   283b8:	ldr	r0, [pc, #1952]	; 28b60 <__flatcc_fb_gen_c_json_parser@@Base+0x3c20>
   283bc:	add	r3, pc, r3
   283c0:	mov	r1, r4
   283c4:	add	r3, r3, #76	; 0x4c
   283c8:	mov	r2, #504	; 0x1f8
   283cc:	add	r0, pc, r0
   283d0:	bl	14140 <__assert_fail@plt>
   283d4:	ldr	r2, [pc, #1904]	; 28b4c <__flatcc_fb_gen_c_json_parser@@Base+0x3c0c>
   283d8:	ldr	r1, [sp, #52]	; 0x34
   283dc:	ldr	r3, [pc, #1920]	; 28b64 <__flatcc_fb_gen_c_json_parser@@Base+0x3c24>
   283e0:	ldr	r4, [pc, #1920]	; 28b68 <__flatcc_fb_gen_c_json_parser@@Base+0x3c28>
   283e4:	ldr	r1, [r1, r2]
   283e8:	add	r3, pc, r3
   283ec:	str	r3, [sp]
   283f0:	ldr	r0, [r1]
   283f4:	ldr	r1, [pc, #1904]	; 28b6c <__flatcc_fb_gen_c_json_parser@@Base+0x3c2c>
   283f8:	add	r4, pc, r4
   283fc:	mov	r2, r4
   28400:	ldr	r3, [pc, #1896]	; 28b70 <__flatcc_fb_gen_c_json_parser@@Base+0x3c30>
   28404:	add	r1, pc, r1
   28408:	bl	1408c <fprintf@plt>
   2840c:	ldr	r3, [pc, #1888]	; 28b74 <__flatcc_fb_gen_c_json_parser@@Base+0x3c34>
   28410:	ldr	r0, [pc, #1888]	; 28b78 <__flatcc_fb_gen_c_json_parser@@Base+0x3c38>
   28414:	add	r3, pc, r3
   28418:	mov	r1, r4
   2841c:	add	r3, r3, #76	; 0x4c
   28420:	ldr	r2, [pc, #1864]	; 28b70 <__flatcc_fb_gen_c_json_parser@@Base+0x3c30>
   28424:	add	r0, pc, r0
   28428:	bl	14140 <__assert_fail@plt>
   2842c:	ldr	r3, [r4, #16]
   28430:	sub	r3, r3, #1
   28434:	cmp	r3, #10
   28438:	addls	pc, pc, r3, lsl #2
   2843c:	b	28a50 <__flatcc_fb_gen_c_json_parser@@Base+0x3b10>
   28440:	b	288f4 <__flatcc_fb_gen_c_json_parser@@Base+0x39b4>
   28444:	b	288e8 <__flatcc_fb_gen_c_json_parser@@Base+0x39a8>
   28448:	b	288dc <__flatcc_fb_gen_c_json_parser@@Base+0x399c>
   2844c:	b	288d0 <__flatcc_fb_gen_c_json_parser@@Base+0x3990>
   28450:	b	288c4 <__flatcc_fb_gen_c_json_parser@@Base+0x3984>
   28454:	b	288b8 <__flatcc_fb_gen_c_json_parser@@Base+0x3978>
   28458:	b	288ac <__flatcc_fb_gen_c_json_parser@@Base+0x396c>
   2845c:	b	288a0 <__flatcc_fb_gen_c_json_parser@@Base+0x3960>
   28460:	b	28894 <__flatcc_fb_gen_c_json_parser@@Base+0x3954>
   28464:	b	28888 <__flatcc_fb_gen_c_json_parser@@Base+0x3948>
   28468:	b	28844 <__flatcc_fb_gen_c_json_parser@@Base+0x3904>
   2846c:	ldr	r2, [pc, #1800]	; 28b7c <__flatcc_fb_gen_c_json_parser@@Base+0x3c3c>
   28470:	add	r2, pc, r2
   28474:	ldrh	r3, [r4, #56]	; 0x38
   28478:	sub	r3, r3, #3
   2847c:	cmp	r3, #3
   28480:	addls	pc, pc, r3, lsl #2
   28484:	b	285ec <__flatcc_fb_gen_c_json_parser@@Base+0x36ac>
   28488:	b	28530 <__flatcc_fb_gen_c_json_parser@@Base+0x35f0>
   2848c:	b	284e4 <__flatcc_fb_gen_c_json_parser@@Base+0x35a4>
   28490:	b	28498 <__flatcc_fb_gen_c_json_parser@@Base+0x3558>
   28494:	b	28498 <__flatcc_fb_gen_c_json_parser@@Base+0x3558>
   28498:	ldr	ip, [r4, #4]
   2849c:	ldrd	r0, [r4, #48]	; 0x30
   284a0:	ldr	r3, [ip, #4]
   284a4:	strd	r0, [sp, #24]
   284a8:	str	r3, [sp, #16]
   284ac:	ldr	r1, [ip]
   284b0:	str	r3, [sp, #8]
   284b4:	str	r1, [sp, #12]
   284b8:	ldrd	r0, [r4, #96]	; 0x60
   284bc:	mov	sl, r0
   284c0:	mov	fp, r1
   284c4:	ldr	r1, [pc, #1716]	; 28b80 <__flatcc_fb_gen_c_json_parser@@Base+0x3c40>
   284c8:	ldr	r0, [r9]
   284cc:	add	r1, pc, r1
   284d0:	strd	sl, [sp]
   284d4:	bl	1408c <fprintf@plt>
   284d8:	ldr	r3, [sp, #44]	; 0x2c
   284dc:	ldrd	r0, [r3, #96]	; 0x60
   284e0:	b	27ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   284e4:	ldr	ip, [r4, #4]
   284e8:	ldrd	r0, [r4, #48]	; 0x30
   284ec:	ldr	r3, [ip, #4]
   284f0:	strd	r0, [sp, #24]
   284f4:	str	r3, [sp, #16]
   284f8:	ldr	r1, [ip]
   284fc:	str	r3, [sp, #8]
   28500:	str	r1, [sp, #12]
   28504:	ldrd	r0, [r4, #96]	; 0x60
   28508:	mov	sl, r0
   2850c:	mov	fp, r1
   28510:	ldr	r1, [pc, #1644]	; 28b84 <__flatcc_fb_gen_c_json_parser@@Base+0x3c44>
   28514:	ldr	r0, [r9]
   28518:	add	r1, pc, r1
   2851c:	strd	sl, [sp]
   28520:	bl	1408c <fprintf@plt>
   28524:	ldr	r3, [sp, #44]	; 0x2c
   28528:	ldrd	r0, [r3, #96]	; 0x60
   2852c:	b	27ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   28530:	vldr	d7, [r4, #48]	; 0x30
   28534:	ldr	ip, [r4, #4]
   28538:	ldr	r0, [r9]
   2853c:	ldr	r1, [pc, #1604]	; 28b88 <__flatcc_fb_gen_c_json_parser@@Base+0x3c48>
   28540:	ldr	r3, [ip, #4]
   28544:	vstr	d7, [sp, #24]
   28548:	str	r3, [sp, #16]
   2854c:	add	r1, pc, r1
   28550:	ldr	ip, [ip]
   28554:	str	r3, [sp, #8]
   28558:	str	ip, [sp, #12]
   2855c:	ldrd	sl, [r4, #96]	; 0x60
   28560:	strd	sl, [sp]
   28564:	bl	1408c <fprintf@plt>
   28568:	ldr	r3, [sp, #44]	; 0x2c
   2856c:	ldrd	r0, [r3, #96]	; 0x60
   28570:	b	27ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   28574:	ldr	r2, [pc, #1552]	; 28b8c <__flatcc_fb_gen_c_json_parser@@Base+0x3c4c>
   28578:	add	r2, pc, r2
   2857c:	b	28474 <__flatcc_fb_gen_c_json_parser@@Base+0x3534>
   28580:	ldr	r2, [pc, #1544]	; 28b90 <__flatcc_fb_gen_c_json_parser@@Base+0x3c50>
   28584:	add	r2, pc, r2
   28588:	b	28474 <__flatcc_fb_gen_c_json_parser@@Base+0x3534>
   2858c:	ldr	r2, [pc, #1536]	; 28b94 <__flatcc_fb_gen_c_json_parser@@Base+0x3c54>
   28590:	add	r2, pc, r2
   28594:	b	28474 <__flatcc_fb_gen_c_json_parser@@Base+0x3534>
   28598:	ldr	r2, [pc, #1528]	; 28b98 <__flatcc_fb_gen_c_json_parser@@Base+0x3c58>
   2859c:	add	r2, pc, r2
   285a0:	b	28474 <__flatcc_fb_gen_c_json_parser@@Base+0x3534>
   285a4:	ldr	r2, [pc, #1520]	; 28b9c <__flatcc_fb_gen_c_json_parser@@Base+0x3c5c>
   285a8:	add	r2, pc, r2
   285ac:	b	28474 <__flatcc_fb_gen_c_json_parser@@Base+0x3534>
   285b0:	ldr	r2, [pc, #1512]	; 28ba0 <__flatcc_fb_gen_c_json_parser@@Base+0x3c60>
   285b4:	add	r2, pc, r2
   285b8:	b	28474 <__flatcc_fb_gen_c_json_parser@@Base+0x3534>
   285bc:	ldr	r2, [pc, #1504]	; 28ba4 <__flatcc_fb_gen_c_json_parser@@Base+0x3c64>
   285c0:	add	r2, pc, r2
   285c4:	b	28474 <__flatcc_fb_gen_c_json_parser@@Base+0x3534>
   285c8:	ldr	r2, [pc, #1496]	; 28ba8 <__flatcc_fb_gen_c_json_parser@@Base+0x3c68>
   285cc:	add	r2, pc, r2
   285d0:	b	28474 <__flatcc_fb_gen_c_json_parser@@Base+0x3534>
   285d4:	ldr	r2, [pc, #1488]	; 28bac <__flatcc_fb_gen_c_json_parser@@Base+0x3c6c>
   285d8:	add	r2, pc, r2
   285dc:	b	28474 <__flatcc_fb_gen_c_json_parser@@Base+0x3534>
   285e0:	ldr	r2, [pc, #1480]	; 28bb0 <__flatcc_fb_gen_c_json_parser@@Base+0x3c70>
   285e4:	add	r2, pc, r2
   285e8:	b	28474 <__flatcc_fb_gen_c_json_parser@@Base+0x3534>
   285ec:	ldr	r2, [pc, #1368]	; 28b4c <__flatcc_fb_gen_c_json_parser@@Base+0x3c0c>
   285f0:	ldr	r1, [sp, #52]	; 0x34
   285f4:	ldr	r3, [pc, #1464]	; 28bb4 <__flatcc_fb_gen_c_json_parser@@Base+0x3c74>
   285f8:	ldr	r4, [pc, #1464]	; 28bb8 <__flatcc_fb_gen_c_json_parser@@Base+0x3c78>
   285fc:	ldr	r1, [r1, r2]
   28600:	add	r3, pc, r3
   28604:	str	r3, [sp]
   28608:	ldr	r0, [r1]
   2860c:	ldr	r1, [pc, #1448]	; 28bbc <__flatcc_fb_gen_c_json_parser@@Base+0x3c7c>
   28610:	add	r4, pc, r4
   28614:	mov	r2, r4
   28618:	ldr	r3, [pc, #1440]	; 28bc0 <__flatcc_fb_gen_c_json_parser@@Base+0x3c80>
   2861c:	add	r1, pc, r1
   28620:	bl	1408c <fprintf@plt>
   28624:	ldr	r3, [pc, #1432]	; 28bc4 <__flatcc_fb_gen_c_json_parser@@Base+0x3c84>
   28628:	ldr	r0, [pc, #1432]	; 28bc8 <__flatcc_fb_gen_c_json_parser@@Base+0x3c88>
   2862c:	add	r3, pc, r3
   28630:	mov	r1, r4
   28634:	add	r3, r3, #76	; 0x4c
   28638:	ldr	r2, [pc, #1408]	; 28bc0 <__flatcc_fb_gen_c_json_parser@@Base+0x3c80>
   2863c:	add	r0, pc, r0
   28640:	bl	14140 <__assert_fail@plt>
   28644:	ldr	r2, [pc, #1280]	; 28b4c <__flatcc_fb_gen_c_json_parser@@Base+0x3c0c>
   28648:	ldr	r1, [sp, #52]	; 0x34
   2864c:	ldr	r3, [pc, #1400]	; 28bcc <__flatcc_fb_gen_c_json_parser@@Base+0x3c8c>
   28650:	ldr	r4, [pc, #1400]	; 28bd0 <__flatcc_fb_gen_c_json_parser@@Base+0x3c90>
   28654:	ldr	r1, [r1, r2]
   28658:	add	r3, pc, r3
   2865c:	str	r3, [sp]
   28660:	ldr	r0, [r1]
   28664:	ldr	r1, [pc, #1384]	; 28bd4 <__flatcc_fb_gen_c_json_parser@@Base+0x3c94>
   28668:	add	r4, pc, r4
   2866c:	mov	r2, r4
   28670:	mov	r3, #96	; 0x60
   28674:	add	r1, pc, r1
   28678:	bl	1408c <fprintf@plt>
   2867c:	ldr	r3, [pc, #1364]	; 28bd8 <__flatcc_fb_gen_c_json_parser@@Base+0x3c98>
   28680:	ldr	r0, [pc, #1364]	; 28bdc <__flatcc_fb_gen_c_json_parser@@Base+0x3c9c>
   28684:	add	r3, pc, r3
   28688:	mov	r1, r4
   2868c:	add	r3, r3, #32
   28690:	mov	r2, #96	; 0x60
   28694:	add	r0, pc, r0
   28698:	bl	14140 <__assert_fail@plt>
   2869c:	ldr	r2, [pc, #1340]	; 28be0 <__flatcc_fb_gen_c_json_parser@@Base+0x3ca0>
   286a0:	add	r2, pc, r2
   286a4:	ldr	r3, [sp, #44]	; 0x2c
   286a8:	ldr	ip, [r4, #4]
   286ac:	ldrd	r0, [r3, #112]	; 0x70
   286b0:	ldr	r3, [ip, #4]
   286b4:	str	r8, [sp, #32]
   286b8:	str	r3, [sp, #16]
   286bc:	strd	r0, [sp, #24]
   286c0:	ldr	r1, [ip]
   286c4:	str	r3, [sp, #8]
   286c8:	str	r1, [sp, #12]
   286cc:	ldrd	r0, [r4, #96]	; 0x60
   286d0:	mov	sl, r0
   286d4:	mov	fp, r1
   286d8:	ldr	r0, [r9]
   286dc:	ldr	r1, [sp, #68]	; 0x44
   286e0:	strd	sl, [sp]
   286e4:	bl	1408c <fprintf@plt>
   286e8:	ldr	r3, [sp, #44]	; 0x2c
   286ec:	ldrd	r0, [r3, #96]	; 0x60
   286f0:	b	27ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   286f4:	ldr	r2, [pc, #1256]	; 28be4 <__flatcc_fb_gen_c_json_parser@@Base+0x3ca4>
   286f8:	add	r2, pc, r2
   286fc:	b	286a4 <__flatcc_fb_gen_c_json_parser@@Base+0x3764>
   28700:	ldr	r2, [pc, #1248]	; 28be8 <__flatcc_fb_gen_c_json_parser@@Base+0x3ca8>
   28704:	add	r2, pc, r2
   28708:	b	286a4 <__flatcc_fb_gen_c_json_parser@@Base+0x3764>
   2870c:	ldr	r2, [pc, #1240]	; 28bec <__flatcc_fb_gen_c_json_parser@@Base+0x3cac>
   28710:	add	r2, pc, r2
   28714:	b	286a4 <__flatcc_fb_gen_c_json_parser@@Base+0x3764>
   28718:	ldr	r2, [pc, #1232]	; 28bf0 <__flatcc_fb_gen_c_json_parser@@Base+0x3cb0>
   2871c:	add	r2, pc, r2
   28720:	b	286a4 <__flatcc_fb_gen_c_json_parser@@Base+0x3764>
   28724:	ldr	r2, [pc, #1224]	; 28bf4 <__flatcc_fb_gen_c_json_parser@@Base+0x3cb4>
   28728:	add	r2, pc, r2
   2872c:	b	286a4 <__flatcc_fb_gen_c_json_parser@@Base+0x3764>
   28730:	ldr	r2, [pc, #1216]	; 28bf8 <__flatcc_fb_gen_c_json_parser@@Base+0x3cb8>
   28734:	add	r2, pc, r2
   28738:	b	286a4 <__flatcc_fb_gen_c_json_parser@@Base+0x3764>
   2873c:	ldr	r2, [pc, #1208]	; 28bfc <__flatcc_fb_gen_c_json_parser@@Base+0x3cbc>
   28740:	add	r2, pc, r2
   28744:	b	286a4 <__flatcc_fb_gen_c_json_parser@@Base+0x3764>
   28748:	ldr	r2, [sp, #72]	; 0x48
   2874c:	b	286a4 <__flatcc_fb_gen_c_json_parser@@Base+0x3764>
   28750:	ldr	r2, [pc, #1192]	; 28c00 <__flatcc_fb_gen_c_json_parser@@Base+0x3cc0>
   28754:	add	r2, pc, r2
   28758:	b	286a4 <__flatcc_fb_gen_c_json_parser@@Base+0x3764>
   2875c:	ldr	r2, [sp, #76]	; 0x4c
   28760:	b	286a4 <__flatcc_fb_gen_c_json_parser@@Base+0x3764>
   28764:	ldr	r2, [pc, #1176]	; 28c04 <__flatcc_fb_gen_c_json_parser@@Base+0x3cc4>
   28768:	add	r2, pc, r2
   2876c:	ldrh	r3, [r4, #56]	; 0x38
   28770:	cmp	r3, #4
   28774:	beq	28958 <__flatcc_fb_gen_c_json_parser@@Base+0x3a18>
   28778:	bcc	28900 <__flatcc_fb_gen_c_json_parser@@Base+0x39c0>
   2877c:	cmp	r3, #6
   28780:	bhi	28900 <__flatcc_fb_gen_c_json_parser@@Base+0x39c0>
   28784:	ldr	r3, [r4, #4]
   28788:	ldr	r0, [r9]
   2878c:	ldr	r1, [r3, #4]
   28790:	str	r8, [sp, #32]
   28794:	ldrd	sl, [r4, #48]	; 0x30
   28798:	str	r1, [sp, #16]
   2879c:	strd	sl, [sp, #24]
   287a0:	ldr	r3, [r3]
   287a4:	str	r1, [sp, #8]
   287a8:	str	r3, [sp, #12]
   287ac:	ldrd	sl, [r4, #96]	; 0x60
   287b0:	ldr	r1, [pc, #1104]	; 28c08 <__flatcc_fb_gen_c_json_parser@@Base+0x3cc8>
   287b4:	strd	sl, [sp]
   287b8:	add	r1, pc, r1
   287bc:	bl	1408c <fprintf@plt>
   287c0:	ldr	r3, [sp, #44]	; 0x2c
   287c4:	ldrd	r0, [r3, #96]	; 0x60
   287c8:	b	27ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   287cc:	ldr	r2, [pc, #1080]	; 28c0c <__flatcc_fb_gen_c_json_parser@@Base+0x3ccc>
   287d0:	add	r2, pc, r2
   287d4:	b	2876c <__flatcc_fb_gen_c_json_parser@@Base+0x382c>
   287d8:	ldr	r2, [pc, #1072]	; 28c10 <__flatcc_fb_gen_c_json_parser@@Base+0x3cd0>
   287dc:	add	r2, pc, r2
   287e0:	b	2876c <__flatcc_fb_gen_c_json_parser@@Base+0x382c>
   287e4:	ldr	r2, [pc, #1064]	; 28c14 <__flatcc_fb_gen_c_json_parser@@Base+0x3cd4>
   287e8:	add	r2, pc, r2
   287ec:	b	2876c <__flatcc_fb_gen_c_json_parser@@Base+0x382c>
   287f0:	ldr	r2, [pc, #1056]	; 28c18 <__flatcc_fb_gen_c_json_parser@@Base+0x3cd8>
   287f4:	add	r2, pc, r2
   287f8:	b	2876c <__flatcc_fb_gen_c_json_parser@@Base+0x382c>
   287fc:	ldr	r2, [pc, #1048]	; 28c1c <__flatcc_fb_gen_c_json_parser@@Base+0x3cdc>
   28800:	add	r2, pc, r2
   28804:	b	2876c <__flatcc_fb_gen_c_json_parser@@Base+0x382c>
   28808:	ldr	r2, [pc, #1040]	; 28c20 <__flatcc_fb_gen_c_json_parser@@Base+0x3ce0>
   2880c:	add	r2, pc, r2
   28810:	b	2876c <__flatcc_fb_gen_c_json_parser@@Base+0x382c>
   28814:	ldr	r2, [pc, #1032]	; 28c24 <__flatcc_fb_gen_c_json_parser@@Base+0x3ce4>
   28818:	add	r2, pc, r2
   2881c:	b	2876c <__flatcc_fb_gen_c_json_parser@@Base+0x382c>
   28820:	ldr	r2, [pc, #1024]	; 28c28 <__flatcc_fb_gen_c_json_parser@@Base+0x3ce8>
   28824:	add	r2, pc, r2
   28828:	b	2876c <__flatcc_fb_gen_c_json_parser@@Base+0x382c>
   2882c:	ldr	r2, [pc, #1016]	; 28c2c <__flatcc_fb_gen_c_json_parser@@Base+0x3cec>
   28830:	add	r2, pc, r2
   28834:	b	2876c <__flatcc_fb_gen_c_json_parser@@Base+0x382c>
   28838:	ldr	r2, [pc, #1008]	; 28c30 <__flatcc_fb_gen_c_json_parser@@Base+0x3cf0>
   2883c:	add	r2, pc, r2
   28840:	b	2876c <__flatcc_fb_gen_c_json_parser@@Base+0x382c>
   28844:	ldr	r2, [pc, #1000]	; 28c34 <__flatcc_fb_gen_c_json_parser@@Base+0x3cf4>
   28848:	add	r2, pc, r2
   2884c:	ldr	r1, [r4, #4]
   28850:	ldr	r0, [r9]
   28854:	ldr	r3, [r1, #4]
   28858:	str	r3, [sp, #16]
   2885c:	ldr	r1, [r1]
   28860:	str	r3, [sp, #8]
   28864:	str	r1, [sp, #12]
   28868:	ldrd	sl, [r4, #96]	; 0x60
   2886c:	ldr	r1, [pc, #964]	; 28c38 <__flatcc_fb_gen_c_json_parser@@Base+0x3cf8>
   28870:	strd	sl, [sp]
   28874:	add	r1, pc, r1
   28878:	bl	1408c <fprintf@plt>
   2887c:	ldr	r3, [sp, #44]	; 0x2c
   28880:	ldrd	r0, [r3, #96]	; 0x60
   28884:	b	27ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   28888:	ldr	r2, [pc, #940]	; 28c3c <__flatcc_fb_gen_c_json_parser@@Base+0x3cfc>
   2888c:	add	r2, pc, r2
   28890:	b	2884c <__flatcc_fb_gen_c_json_parser@@Base+0x390c>
   28894:	ldr	r2, [pc, #932]	; 28c40 <__flatcc_fb_gen_c_json_parser@@Base+0x3d00>
   28898:	add	r2, pc, r2
   2889c:	b	2884c <__flatcc_fb_gen_c_json_parser@@Base+0x390c>
   288a0:	ldr	r2, [pc, #924]	; 28c44 <__flatcc_fb_gen_c_json_parser@@Base+0x3d04>
   288a4:	add	r2, pc, r2
   288a8:	b	2884c <__flatcc_fb_gen_c_json_parser@@Base+0x390c>
   288ac:	ldr	r2, [pc, #916]	; 28c48 <__flatcc_fb_gen_c_json_parser@@Base+0x3d08>
   288b0:	add	r2, pc, r2
   288b4:	b	2884c <__flatcc_fb_gen_c_json_parser@@Base+0x390c>
   288b8:	ldr	r2, [pc, #908]	; 28c4c <__flatcc_fb_gen_c_json_parser@@Base+0x3d0c>
   288bc:	add	r2, pc, r2
   288c0:	b	2884c <__flatcc_fb_gen_c_json_parser@@Base+0x390c>
   288c4:	ldr	r2, [pc, #900]	; 28c50 <__flatcc_fb_gen_c_json_parser@@Base+0x3d10>
   288c8:	add	r2, pc, r2
   288cc:	b	2884c <__flatcc_fb_gen_c_json_parser@@Base+0x390c>
   288d0:	ldr	r2, [pc, #892]	; 28c54 <__flatcc_fb_gen_c_json_parser@@Base+0x3d14>
   288d4:	add	r2, pc, r2
   288d8:	b	2884c <__flatcc_fb_gen_c_json_parser@@Base+0x390c>
   288dc:	ldr	r2, [pc, #884]	; 28c58 <__flatcc_fb_gen_c_json_parser@@Base+0x3d18>
   288e0:	add	r2, pc, r2
   288e4:	b	2884c <__flatcc_fb_gen_c_json_parser@@Base+0x390c>
   288e8:	ldr	r2, [pc, #876]	; 28c5c <__flatcc_fb_gen_c_json_parser@@Base+0x3d1c>
   288ec:	add	r2, pc, r2
   288f0:	b	2884c <__flatcc_fb_gen_c_json_parser@@Base+0x390c>
   288f4:	ldr	r2, [pc, #868]	; 28c60 <__flatcc_fb_gen_c_json_parser@@Base+0x3d20>
   288f8:	add	r2, pc, r2
   288fc:	b	2884c <__flatcc_fb_gen_c_json_parser@@Base+0x390c>
   28900:	ldr	r2, [pc, #580]	; 28b4c <__flatcc_fb_gen_c_json_parser@@Base+0x3c0c>
   28904:	ldr	r1, [sp, #52]	; 0x34
   28908:	ldr	r3, [pc, #852]	; 28c64 <__flatcc_fb_gen_c_json_parser@@Base+0x3d24>
   2890c:	ldr	r4, [pc, #852]	; 28c68 <__flatcc_fb_gen_c_json_parser@@Base+0x3d28>
   28910:	ldr	r1, [r1, r2]
   28914:	add	r3, pc, r3
   28918:	str	r3, [sp]
   2891c:	ldr	r0, [r1]
   28920:	ldr	r1, [pc, #836]	; 28c6c <__flatcc_fb_gen_c_json_parser@@Base+0x3d2c>
   28924:	add	r4, pc, r4
   28928:	mov	r2, r4
   2892c:	ldr	r3, [pc, #828]	; 28c70 <__flatcc_fb_gen_c_json_parser@@Base+0x3d30>
   28930:	add	r1, pc, r1
   28934:	bl	1408c <fprintf@plt>
   28938:	ldr	r3, [pc, #820]	; 28c74 <__flatcc_fb_gen_c_json_parser@@Base+0x3d34>
   2893c:	ldr	r0, [pc, #820]	; 28c78 <__flatcc_fb_gen_c_json_parser@@Base+0x3d38>
   28940:	add	r3, pc, r3
   28944:	mov	r1, r4
   28948:	add	r3, r3, #76	; 0x4c
   2894c:	ldr	r2, [pc, #796]	; 28c70 <__flatcc_fb_gen_c_json_parser@@Base+0x3d30>
   28950:	add	r0, pc, r0
   28954:	bl	14140 <__assert_fail@plt>
   28958:	ldr	r3, [r4, #4]
   2895c:	ldr	r0, [r9]
   28960:	ldr	r1, [r3, #4]
   28964:	str	r8, [sp, #32]
   28968:	ldrd	sl, [r4, #48]	; 0x30
   2896c:	str	r1, [sp, #16]
   28970:	strd	sl, [sp, #24]
   28974:	ldr	r3, [r3]
   28978:	str	r1, [sp, #8]
   2897c:	str	r3, [sp, #12]
   28980:	ldrd	sl, [r4, #96]	; 0x60
   28984:	ldr	r1, [pc, #752]	; 28c7c <__flatcc_fb_gen_c_json_parser@@Base+0x3d3c>
   28988:	strd	sl, [sp]
   2898c:	add	r1, pc, r1
   28990:	bl	1408c <fprintf@plt>
   28994:	ldr	r3, [sp, #44]	; 0x2c
   28998:	ldrd	r0, [r3, #96]	; 0x60
   2899c:	b	27ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   289a0:	ldr	r2, [pc, #420]	; 28b4c <__flatcc_fb_gen_c_json_parser@@Base+0x3c0c>
   289a4:	ldr	r1, [sp, #52]	; 0x34
   289a8:	ldr	r3, [pc, #720]	; 28c80 <__flatcc_fb_gen_c_json_parser@@Base+0x3d40>
   289ac:	ldr	r4, [pc, #720]	; 28c84 <__flatcc_fb_gen_c_json_parser@@Base+0x3d44>
   289b0:	ldr	r1, [r1, r2]
   289b4:	add	r3, pc, r3
   289b8:	str	r3, [sp]
   289bc:	ldr	r0, [r1]
   289c0:	ldr	r1, [pc, #704]	; 28c88 <__flatcc_fb_gen_c_json_parser@@Base+0x3d48>
   289c4:	add	r4, pc, r4
   289c8:	mov	r2, r4
   289cc:	mov	r3, #96	; 0x60
   289d0:	add	r1, pc, r1
   289d4:	bl	1408c <fprintf@plt>
   289d8:	ldr	r3, [pc, #684]	; 28c8c <__flatcc_fb_gen_c_json_parser@@Base+0x3d4c>
   289dc:	ldr	r0, [pc, #684]	; 28c90 <__flatcc_fb_gen_c_json_parser@@Base+0x3d50>
   289e0:	add	r3, pc, r3
   289e4:	mov	r1, r4
   289e8:	add	r3, r3, #32
   289ec:	mov	r2, #96	; 0x60
   289f0:	add	r0, pc, r0
   289f4:	bl	14140 <__assert_fail@plt>
   289f8:	ldr	r2, [pc, #332]	; 28b4c <__flatcc_fb_gen_c_json_parser@@Base+0x3c0c>
   289fc:	ldr	r1, [sp, #52]	; 0x34
   28a00:	ldr	r3, [pc, #652]	; 28c94 <__flatcc_fb_gen_c_json_parser@@Base+0x3d54>
   28a04:	ldr	r4, [pc, #652]	; 28c98 <__flatcc_fb_gen_c_json_parser@@Base+0x3d58>
   28a08:	ldr	r1, [r1, r2]
   28a0c:	add	r3, pc, r3
   28a10:	str	r3, [sp]
   28a14:	ldr	r0, [r1]
   28a18:	ldr	r1, [pc, #636]	; 28c9c <__flatcc_fb_gen_c_json_parser@@Base+0x3d5c>
   28a1c:	add	r4, pc, r4
   28a20:	mov	r2, r4
   28a24:	mov	r3, #96	; 0x60
   28a28:	add	r1, pc, r1
   28a2c:	bl	1408c <fprintf@plt>
   28a30:	ldr	r3, [pc, #616]	; 28ca0 <__flatcc_fb_gen_c_json_parser@@Base+0x3d60>
   28a34:	ldr	r0, [pc, #616]	; 28ca4 <__flatcc_fb_gen_c_json_parser@@Base+0x3d64>
   28a38:	add	r3, pc, r3
   28a3c:	mov	r1, r4
   28a40:	add	r3, r3, #32
   28a44:	mov	r2, #96	; 0x60
   28a48:	add	r0, pc, r0
   28a4c:	bl	14140 <__assert_fail@plt>
   28a50:	ldr	r2, [pc, #244]	; 28b4c <__flatcc_fb_gen_c_json_parser@@Base+0x3c0c>
   28a54:	ldr	r1, [sp, #52]	; 0x34
   28a58:	ldr	r3, [pc, #584]	; 28ca8 <__flatcc_fb_gen_c_json_parser@@Base+0x3d68>
   28a5c:	ldr	r4, [pc, #584]	; 28cac <__flatcc_fb_gen_c_json_parser@@Base+0x3d6c>
   28a60:	ldr	r1, [r1, r2]
   28a64:	add	r3, pc, r3
   28a68:	str	r3, [sp]
   28a6c:	ldr	r0, [r1]
   28a70:	ldr	r1, [pc, #568]	; 28cb0 <__flatcc_fb_gen_c_json_parser@@Base+0x3d70>
   28a74:	add	r4, pc, r4
   28a78:	mov	r2, r4
   28a7c:	mov	r3, #96	; 0x60
   28a80:	add	r1, pc, r1
   28a84:	bl	1408c <fprintf@plt>
   28a88:	ldr	r3, [pc, #548]	; 28cb4 <__flatcc_fb_gen_c_json_parser@@Base+0x3d74>
   28a8c:	ldr	r0, [pc, #548]	; 28cb8 <__flatcc_fb_gen_c_json_parser@@Base+0x3d78>
   28a90:	add	r3, pc, r3
   28a94:	mov	r1, r4
   28a98:	add	r3, r3, #32
   28a9c:	mov	r2, #96	; 0x60
   28aa0:	add	r0, pc, r0
   28aa4:	bl	14140 <__assert_fail@plt>
   28aa8:	ldr	r2, [pc, #156]	; 28b4c <__flatcc_fb_gen_c_json_parser@@Base+0x3c0c>
   28aac:	ldr	r1, [sp, #52]	; 0x34
   28ab0:	ldr	r3, [pc, #516]	; 28cbc <__flatcc_fb_gen_c_json_parser@@Base+0x3d7c>
   28ab4:	ldr	r4, [pc, #516]	; 28cc0 <__flatcc_fb_gen_c_json_parser@@Base+0x3d80>
   28ab8:	ldr	r1, [r1, r2]
   28abc:	add	r3, pc, r3
   28ac0:	str	r3, [sp]
   28ac4:	ldr	r0, [r1]
   28ac8:	ldr	r1, [pc, #500]	; 28cc4 <__flatcc_fb_gen_c_json_parser@@Base+0x3d84>
   28acc:	add	r4, pc, r4
   28ad0:	mov	r2, r4
   28ad4:	ldr	r3, [pc, #492]	; 28cc8 <__flatcc_fb_gen_c_json_parser@@Base+0x3d88>
   28ad8:	add	r1, pc, r1
   28adc:	bl	1408c <fprintf@plt>
   28ae0:	ldr	r3, [pc, #484]	; 28ccc <__flatcc_fb_gen_c_json_parser@@Base+0x3d8c>
   28ae4:	ldr	r0, [pc, #484]	; 28cd0 <__flatcc_fb_gen_c_json_parser@@Base+0x3d90>
   28ae8:	add	r3, pc, r3
   28aec:	mov	r1, r4
   28af0:	add	r3, r3, #76	; 0x4c
   28af4:	ldr	r2, [pc, #460]	; 28cc8 <__flatcc_fb_gen_c_json_parser@@Base+0x3d88>
   28af8:	add	r0, pc, r0
   28afc:	bl	14140 <__assert_fail@plt>
   28b00:	andeq	r3, r4, ip, asr #3
   28b04:	andeq	lr, r2, r0, asr r4
   28b08:	andeq	lr, r2, ip, ror fp
   28b0c:	andeq	lr, r2, r8, ror #10
   28b10:	andeq	lr, r2, r8, lsl #22
   28b14:	muleq	r2, r8, sl
   28b18:	andeq	r9, r1, r4, lsl r3
   28b1c:	strdeq	r9, [r1], -r4
   28b20:	andeq	lr, r2, ip, lsr #12
   28b24:	andeq	lr, r2, r8, lsr r6
   28b28:	andeq	lr, r2, r8, asr #8
   28b2c:	andeq	lr, r2, r4, asr #5
   28b30:	ldrdeq	lr, [r2], -ip
   28b34:	andeq	lr, r2, r4, lsl #8
   28b38:	andeq	lr, r2, ip, lsl #6
   28b3c:	andeq	lr, r2, r8, lsr r6
   28b40:	andeq	lr, r2, r4, lsr r5
   28b44:	andeq	lr, r2, r8, lsr #9
   28b48:	andeq	lr, r2, r4, asr #11
   28b4c:	andeq	r0, r0, r0, lsr #1
   28b50:	andeq	lr, r2, r0, lsr #10
   28b54:	ldrdeq	sp, [r2], -r8
   28b58:	andeq	r8, r1, r0, lsl fp
   28b5c:	ldrdeq	sp, [r2], -ip
   28b60:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   28b64:	muleq	r2, ip, r6
   28b68:	andeq	sp, r2, r0, lsl #17
   28b6c:			; <UNDEFINED> instruction: 0x00018ab8
   28b70:	andeq	r0, r0, pc, lsl r2
   28b74:	andeq	sp, r2, r4, lsl #13
   28b78:	muleq	r2, r8, lr
   28b7c:	andeq	r8, r1, r8, ror #26
   28b80:	andeq	sp, r2, r4, asr #30
   28b84:	andeq	sp, r2, r8, lsr pc
   28b88:	andeq	sp, r2, r4, asr #30
   28b8c:	andeq	r8, r1, r4, lsl r8
   28b90:	andeq	r8, r1, r4, asr #24
   28b94:	andeq	r8, r1, r8, asr ip
   28b98:	andeq	r8, r1, r4, asr ip
   28b9c:	andeq	r8, r1, r8, lsr #24
   28ba0:	andeq	r8, r1, r0, ror #15
   28ba4:	andeq	r8, r1, r8, lsr ip
   28ba8:	andeq	r8, r1, r4, lsr ip
   28bac:	andeq	r8, r1, r8, lsl #24
   28bb0:	andeq	r0, r3, r4, lsr #30
   28bb4:	ldrdeq	fp, [r2], -ip
   28bb8:	andeq	sp, r2, r8, ror #12
   28bbc:	andeq	r8, r1, r0, lsr #17
   28bc0:	muleq	r0, r6, r1
   28bc4:	andeq	sp, r2, ip, ror #8
   28bc8:	andeq	r0, r2, r0, lsl #25
   28bcc:	andeq	r8, r1, r0, ror r8
   28bd0:	strdeq	r8, [r1], -r4
   28bd4:	andeq	r8, r1, r8, asr #16
   28bd8:	andeq	sp, r2, r4, lsl r4
   28bdc:	andeq	r0, r2, r8, lsr #24
   28be0:	andeq	r8, r1, ip, ror #13
   28be4:	muleq	r1, ip, r6
   28be8:	strdeq	r8, [r1], -ip
   28bec:	andeq	r8, r1, r8, ror #21
   28bf0:	ldrdeq	r8, [r1], -r4
   28bf4:	andeq	r8, r1, r0, asr #21
   28bf8:	ldrdeq	r0, [r3], -r4
   28bfc:	andeq	r8, r1, r0, lsr #21
   28c00:	andeq	r8, r1, ip, ror sl
   28c04:	andeq	r8, r1, r4, lsr #12
   28c08:	strdeq	sp, [r2], -r4
   28c0c:	andeq	r8, r1, r4, asr #11
   28c10:	andeq	r8, r1, r4, lsr #20
   28c14:	andeq	r8, r1, r0, lsl #20
   28c18:	andeq	r0, r3, r4, lsl sp
   28c1c:	andeq	r8, r1, r0, ror #19
   28c20:	andeq	r8, r1, ip, asr #19
   28c24:	andeq	r8, r1, r0, ror #19
   28c28:	andeq	r8, r1, ip, asr #19
   28c2c:	andeq	r8, r1, r0, lsr #19
   28c30:	andeq	r8, r1, ip, lsl #19
   28c34:	andeq	r8, r1, r4, asr #10
   28c38:	andeq	sp, r2, ip, ror #26
   28c3c:	andeq	r8, r1, r8, lsl #10
   28c40:	andeq	r8, r1, r8, ror #18
   28c44:	andeq	r8, r1, r4, asr r9
   28c48:	andeq	r8, r1, r0, asr #18
   28c4c:	andeq	r8, r1, ip, lsr #18
   28c50:	andeq	r0, r3, r0, asr #24
   28c54:	andeq	r8, r1, ip, lsl #18
   28c58:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   28c5c:	andeq	r8, r1, r4, ror #17
   28c60:	ldrdeq	r8, [r1], -r0
   28c64:	andeq	sp, r2, r0, asr lr
   28c68:	andeq	sp, r2, r4, asr r3
   28c6c:	andeq	r8, r1, ip, lsl #11
   28c70:	andeq	r0, r0, r3, ror #3
   28c74:	andeq	sp, r2, r8, asr r1
   28c78:	andeq	r0, r2, ip, ror #18
   28c7c:	andeq	sp, r2, ip, ror sp
   28c80:	andeq	r8, r1, r4, lsl r5
   28c84:	muleq	r1, r8, r4
   28c88:	andeq	r8, r1, ip, ror #9
   28c8c:	strheq	sp, [r2], -r8
   28c90:	andeq	r0, r2, ip, asr #17
   28c94:			; <UNDEFINED> instruction: 0x000184bc
   28c98:	andeq	r8, r1, r0, asr #8
   28c9c:	muleq	r1, r4, r4
   28ca0:	andeq	sp, r2, r0, rrx
   28ca4:	andeq	r0, r2, r4, ror r8
   28ca8:	andeq	r8, r1, r4, ror #8
   28cac:	andeq	r8, r1, r8, ror #7
   28cb0:	andeq	r8, r1, ip, lsr r4
   28cb4:	andeq	sp, r2, r8
   28cb8:	andeq	r0, r2, ip, lsl r8
   28cbc:	ldrdeq	sp, [r2], -ip
   28cc0:	andeq	sp, r2, ip, lsr #3
   28cc4:	andeq	r8, r1, r4, ror #7
   28cc8:	andeq	r0, r0, r9, ror #2
   28ccc:			; <UNDEFINED> instruction: 0x0002cfb0
   28cd0:	andeq	r0, r2, r4, asr #15

00028cd4 <__flatcc_fb_gen_c_json_printer@@Base>:
   28cd4:	ldr	r3, [r0, #208]	; 0xd0
   28cd8:	ldr	r1, [pc, #1224]	; 291a8 <__flatcc_fb_gen_c_json_printer@@Base+0x4d4>
   28cdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28ce0:	add	r1, pc, r1
   28ce4:	ldr	r3, [r3, #164]	; 0xa4
   28ce8:	mov	r6, r0
   28cec:	sub	sp, sp, #244	; 0xf4
   28cf0:	mov	r2, r3
   28cf4:	ldr	r0, [r0, #204]	; 0xcc
   28cf8:	bl	1408c <fprintf@plt>
   28cfc:	ldr	r0, [pc, #1192]	; 291ac <__flatcc_fb_gen_c_json_printer@@Base+0x4d8>
   28d00:	ldr	r3, [r6, #204]	; 0xcc
   28d04:	mov	r2, #81	; 0x51
   28d08:	mov	r1, #1
   28d0c:	add	r0, pc, r0
   28d10:	bl	14014 <fwrite@plt>
   28d14:	ldr	r0, [pc, #1172]	; 291b0 <__flatcc_fb_gen_c_json_printer@@Base+0x4dc>
   28d18:	ldr	r3, [r6, #204]	; 0xcc
   28d1c:	mov	r2, #40	; 0x28
   28d20:	mov	r1, #1
   28d24:	add	r0, pc, r0
   28d28:	bl	14014 <fwrite@plt>
   28d2c:	ldr	r2, [pc, #1152]	; 291b4 <__flatcc_fb_gen_c_json_printer@@Base+0x4e0>
   28d30:	ldr	r1, [pc, #1152]	; 291b8 <__flatcc_fb_gen_c_json_printer@@Base+0x4e4>
   28d34:	mov	r0, r6
   28d38:	add	r1, pc, r1
   28d3c:	add	r2, pc, r2
   28d40:	bl	15f70 <__flatcc_fb_gen_c_includes@@Base>
   28d44:	ldr	r3, [r6, #212]	; 0xd4
   28d48:	ldr	r1, [r6, #204]	; 0xcc
   28d4c:	ldr	r3, [r3, #140]	; 0x8c
   28d50:	cmp	r3, #0
   28d54:	beq	28d74 <__flatcc_fb_gen_c_json_printer@@Base+0xa0>
   28d58:	ldr	r0, [pc, #1116]	; 291bc <__flatcc_fb_gen_c_json_printer@@Base+0x4e8>
   28d5c:	mov	r3, r1
   28d60:	mov	r2, #36	; 0x24
   28d64:	mov	r1, #1
   28d68:	add	r0, pc, r0
   28d6c:	bl	14014 <fwrite@plt>
   28d70:	ldr	r1, [r6, #204]	; 0xcc
   28d74:	mov	r0, #10
   28d78:	bl	140ec <fputc@plt>
   28d7c:	ldr	r4, [r6, #208]	; 0xd0
   28d80:	add	r7, sp, #20
   28d84:	mov	r0, r7
   28d88:	ldr	r5, [r4, #52]	; 0x34
   28d8c:	mov	r2, #220	; 0xdc
   28d90:	mov	r1, #0
   28d94:	bl	140a4 <memset@plt>
   28d98:	cmp	r5, #0
   28d9c:	beq	28dac <__flatcc_fb_gen_c_json_printer@@Base+0xd8>
   28da0:	ldrh	r3, [r5, #8]
   28da4:	cmp	r3, #1
   28da8:	bls	29154 <__flatcc_fb_gen_c_json_printer@@Base+0x480>
   28dac:	ldr	r4, [r4, #40]	; 0x28
   28db0:	cmp	r4, #0
   28db4:	beq	28e40 <__flatcc_fb_gen_c_json_printer@@Base+0x16c>
   28db8:	ldr	r9, [pc, #1024]	; 291c0 <__flatcc_fb_gen_c_json_printer@@Base+0x4ec>
   28dbc:	ldr	r8, [pc, #1024]	; 291c4 <__flatcc_fb_gen_c_json_printer@@Base+0x4f0>
   28dc0:	ldr	r5, [pc, #1024]	; 291c8 <__flatcc_fb_gen_c_json_printer@@Base+0x4f4>
   28dc4:	add	r9, pc, r9
   28dc8:	add	r8, pc, r8
   28dcc:	add	r5, pc, r5
   28dd0:	b	28e08 <__flatcc_fb_gen_c_json_printer@@Base+0x134>
   28dd4:	bcc	290a8 <__flatcc_fb_gen_c_json_printer@@Base+0x3d4>
   28dd8:	cmp	r3, #4
   28ddc:	bne	28dfc <__flatcc_fb_gen_c_json_printer@@Base+0x128>
   28de0:	ldr	r0, [r4, #12]
   28de4:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   28de8:	mov	r3, r7
   28dec:	mov	r2, r7
   28df0:	mov	r1, r5
   28df4:	ldr	r0, [r6, #204]	; 0xcc
   28df8:	bl	1408c <fprintf@plt>
   28dfc:	ldr	r4, [r4]
   28e00:	cmp	r4, #0
   28e04:	beq	28e40 <__flatcc_fb_gen_c_json_printer@@Base+0x16c>
   28e08:	ldrh	r3, [r4, #8]
   28e0c:	mov	r2, r7
   28e10:	mov	r1, r4
   28e14:	cmp	r3, #1
   28e18:	bne	28dd4 <__flatcc_fb_gen_c_json_printer@@Base+0x100>
   28e1c:	ldr	r0, [r4, #12]
   28e20:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   28e24:	mov	r2, r7
   28e28:	mov	r1, r9
   28e2c:	ldr	r0, [r6, #204]	; 0xcc
   28e30:	bl	1408c <fprintf@plt>
   28e34:	ldr	r4, [r4]
   28e38:	cmp	r4, #0
   28e3c:	bne	28e08 <__flatcc_fb_gen_c_json_printer@@Base+0x134>
   28e40:	ldr	r1, [r6, #204]	; 0xcc
   28e44:	mov	r0, #10
   28e48:	bl	140ec <fputc@plt>
   28e4c:	ldr	r3, [r6, #208]	; 0xd0
   28e50:	ldr	r4, [r3, #40]	; 0x28
   28e54:	cmp	r4, #0
   28e58:	bne	28e6c <__flatcc_fb_gen_c_json_printer@@Base+0x198>
   28e5c:	b	29040 <__flatcc_fb_gen_c_json_printer@@Base+0x36c>
   28e60:	ldr	r4, [r4]
   28e64:	cmp	r4, #0
   28e68:	beq	28e90 <__flatcc_fb_gen_c_json_printer@@Base+0x1bc>
   28e6c:	ldrh	r3, [r4, #8]
   28e70:	cmp	r3, #3
   28e74:	bne	28e60 <__flatcc_fb_gen_c_json_printer@@Base+0x18c>
   28e78:	mov	r1, r4
   28e7c:	mov	r0, r6
   28e80:	bl	275c8 <__flatcc_fb_gen_c_json_parser@@Base+0x2688>
   28e84:	ldr	r4, [r4]
   28e88:	cmp	r4, #0
   28e8c:	bne	28e6c <__flatcc_fb_gen_c_json_printer@@Base+0x198>
   28e90:	ldr	r3, [r6, #208]	; 0xd0
   28e94:	ldr	r5, [r3, #40]	; 0x28
   28e98:	cmp	r5, #0
   28e9c:	beq	29040 <__flatcc_fb_gen_c_json_printer@@Base+0x36c>
   28ea0:	ldr	fp, [pc, #804]	; 291cc <__flatcc_fb_gen_c_json_printer@@Base+0x4f8>
   28ea4:	ldr	r8, [pc, #804]	; 291d0 <__flatcc_fb_gen_c_json_printer@@Base+0x4fc>
   28ea8:	ldr	sl, [pc, #804]	; 291d4 <__flatcc_fb_gen_c_json_printer@@Base+0x500>
   28eac:	ldr	r9, [pc, #804]	; 291d8 <__flatcc_fb_gen_c_json_printer@@Base+0x504>
   28eb0:	add	r3, r6, #204	; 0xcc
   28eb4:	add	fp, pc, fp
   28eb8:	add	r8, pc, r8
   28ebc:	add	sl, pc, sl
   28ec0:	add	r9, pc, r9
   28ec4:	str	r3, [sp, #12]
   28ec8:	b	28ed8 <__flatcc_fb_gen_c_json_printer@@Base+0x204>
   28ecc:	ldr	r5, [r5]
   28ed0:	cmp	r5, #0
   28ed4:	beq	28fac <__flatcc_fb_gen_c_json_printer@@Base+0x2d8>
   28ed8:	ldrh	r3, [r5, #8]
   28edc:	cmp	r3, #4
   28ee0:	bne	28ecc <__flatcc_fb_gen_c_json_printer@@Base+0x1f8>
   28ee4:	mov	r2, #220	; 0xdc
   28ee8:	mov	r1, #0
   28eec:	mov	r0, r7
   28ef0:	bl	140a4 <memset@plt>
   28ef4:	mov	r2, r7
   28ef8:	mov	r1, r5
   28efc:	ldr	r0, [r5, #12]
   28f00:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   28f04:	mov	r2, r7
   28f08:	mov	r1, fp
   28f0c:	ldr	r0, [r6, #204]	; 0xcc
   28f10:	bl	1408c <fprintf@plt>
   28f14:	ldr	r4, [r5, #20]
   28f18:	cmp	r4, #0
   28f1c:	bne	28f30 <__flatcc_fb_gen_c_json_printer@@Base+0x25c>
   28f20:	b	28f6c <__flatcc_fb_gen_c_json_printer@@Base+0x298>
   28f24:	ldr	r4, [r4]
   28f28:	cmp	r4, #0
   28f2c:	beq	28f6c <__flatcc_fb_gen_c_json_printer@@Base+0x298>
   28f30:	ldrh	r3, [r4, #24]
   28f34:	cmp	r3, #0
   28f38:	beq	28f24 <__flatcc_fb_gen_c_json_printer@@Base+0x250>
   28f3c:	ldr	r1, [r4, #4]
   28f40:	ldr	r2, [r4, #48]	; 0x30
   28f44:	ldr	r0, [r6, #204]	; 0xcc
   28f48:	ldr	r3, [r1, #4]
   28f4c:	str	r3, [sp, #4]
   28f50:	ldr	r1, [r1]
   28f54:	str	r1, [sp]
   28f58:	mov	r1, r8
   28f5c:	bl	1408c <fprintf@plt>
   28f60:	ldr	r4, [r4]
   28f64:	cmp	r4, #0
   28f68:	bne	28f30 <__flatcc_fb_gen_c_json_printer@@Base+0x25c>
   28f6c:	ldr	r3, [r6, #204]	; 0xcc
   28f70:	mov	r2, #78	; 0x4e
   28f74:	mov	r1, #1
   28f78:	mov	r0, sl
   28f7c:	bl	14014 <fwrite@plt>
   28f80:	ldr	r3, [r6, #204]	; 0xcc
   28f84:	mov	r2, #9
   28f88:	mov	r1, #1
   28f8c:	mov	r0, r9
   28f90:	bl	14014 <fwrite@plt>
   28f94:	mov	r1, r5
   28f98:	ldr	r0, [sp, #12]
   28f9c:	bl	26ea0 <__flatcc_fb_gen_c_json_parser@@Base+0x1f60>
   28fa0:	ldr	r5, [r5]
   28fa4:	cmp	r5, #0
   28fa8:	bne	28ed8 <__flatcc_fb_gen_c_json_printer@@Base+0x204>
   28fac:	ldr	r3, [r6, #208]	; 0xd0
   28fb0:	ldr	r4, [r3, #40]	; 0x28
   28fb4:	cmp	r4, #0
   28fb8:	beq	29040 <__flatcc_fb_gen_c_json_printer@@Base+0x36c>
   28fbc:	add	r5, r6, #204	; 0xcc
   28fc0:	b	28fd0 <__flatcc_fb_gen_c_json_printer@@Base+0x2fc>
   28fc4:	ldr	r4, [r4]
   28fc8:	cmp	r4, #0
   28fcc:	beq	28ff4 <__flatcc_fb_gen_c_json_printer@@Base+0x320>
   28fd0:	ldrh	r3, [r4, #8]
   28fd4:	cmp	r3, #1
   28fd8:	bne	28fc4 <__flatcc_fb_gen_c_json_printer@@Base+0x2f0>
   28fdc:	mov	r1, r4
   28fe0:	mov	r0, r5
   28fe4:	bl	270f4 <__flatcc_fb_gen_c_json_parser@@Base+0x21b4>
   28fe8:	ldr	r4, [r4]
   28fec:	cmp	r4, #0
   28ff0:	bne	28fd0 <__flatcc_fb_gen_c_json_printer@@Base+0x2fc>
   28ff4:	ldr	r3, [r6, #208]	; 0xd0
   28ff8:	ldr	r4, [r3, #40]	; 0x28
   28ffc:	cmp	r4, #0
   29000:	beq	29040 <__flatcc_fb_gen_c_json_printer@@Base+0x36c>
   29004:	add	r5, r6, #204	; 0xcc
   29008:	b	29018 <__flatcc_fb_gen_c_json_printer@@Base+0x344>
   2900c:	ldr	r4, [r4]
   29010:	cmp	r4, #0
   29014:	beq	2903c <__flatcc_fb_gen_c_json_printer@@Base+0x368>
   29018:	ldrh	r3, [r4, #8]
   2901c:	cmp	r3, #0
   29020:	bne	2900c <__flatcc_fb_gen_c_json_printer@@Base+0x338>
   29024:	mov	r1, r4
   29028:	mov	r0, r5
   2902c:	bl	27db8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e78>
   29030:	ldr	r4, [r4]
   29034:	cmp	r4, #0
   29038:	bne	29018 <__flatcc_fb_gen_c_json_printer@@Base+0x344>
   2903c:	ldr	r3, [r6, #208]	; 0xd0
   29040:	ldr	r4, [r3, #52]	; 0x34
   29044:	cmp	r4, #0
   29048:	beq	29058 <__flatcc_fb_gen_c_json_printer@@Base+0x384>
   2904c:	ldrh	r3, [r4, #8]
   29050:	cmp	r3, #1
   29054:	bls	290c4 <__flatcc_fb_gen_c_json_printer@@Base+0x3f0>
   29058:	ldr	r3, [r6, #212]	; 0xd4
   2905c:	ldr	r0, [r6, #204]	; 0xcc
   29060:	ldr	r3, [r3, #140]	; 0x8c
   29064:	cmp	r3, #0
   29068:	beq	29088 <__flatcc_fb_gen_c_json_printer@@Base+0x3b4>
   2906c:	mov	r3, r0
   29070:	ldr	r0, [pc, #356]	; 291dc <__flatcc_fb_gen_c_json_printer@@Base+0x508>
   29074:	mov	r2, #36	; 0x24
   29078:	mov	r1, #1
   2907c:	add	r0, pc, r0
   29080:	bl	14014 <fwrite@plt>
   29084:	ldr	r0, [r6, #204]	; 0xcc
   29088:	ldr	r3, [r6, #208]	; 0xd0
   2908c:	ldr	r1, [pc, #332]	; 291e0 <__flatcc_fb_gen_c_json_printer@@Base+0x50c>
   29090:	ldr	r2, [r3, #164]	; 0xa4
   29094:	add	r1, pc, r1
   29098:	bl	1408c <fprintf@plt>
   2909c:	mov	r0, #0
   290a0:	add	sp, sp, #244	; 0xf4
   290a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   290a8:	ldr	r0, [r4, #12]
   290ac:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   290b0:	mov	r2, r7
   290b4:	mov	r1, r8
   290b8:	ldr	r0, [r6, #204]	; 0xcc
   290bc:	bl	1408c <fprintf@plt>
   290c0:	b	28dfc <__flatcc_fb_gen_c_json_printer@@Base+0x128>
   290c4:	mov	r2, #220	; 0xdc
   290c8:	mov	r1, #0
   290cc:	mov	r0, r7
   290d0:	bl	140a4 <memset@plt>
   290d4:	mov	r2, r7
   290d8:	mov	r1, r4
   290dc:	ldr	r0, [r4, #12]
   290e0:	bl	16160 <__flatcc_fb_scoped_symbol_name@@Base>
   290e4:	ldr	r3, [r6, #208]	; 0xd0
   290e8:	ldr	r1, [pc, #244]	; 291e4 <__flatcc_fb_gen_c_json_printer@@Base+0x510>
   290ec:	ldr	r0, [r6, #204]	; 0xcc
   290f0:	ldr	r2, [r3, #160]	; 0xa0
   290f4:	add	r1, pc, r1
   290f8:	bl	1408c <fprintf@plt>
   290fc:	ldr	r1, [pc, #228]	; 291e8 <__flatcc_fb_gen_c_json_printer@@Base+0x514>
   29100:	mov	r2, r7
   29104:	add	r1, pc, r1
   29108:	ldr	r0, [r6, #204]	; 0xcc
   2910c:	bl	1408c <fprintf@plt>
   29110:	ldr	r2, [r6, #208]	; 0xd0
   29114:	ldrh	r3, [r2, #16]
   29118:	cmp	r3, #2
   2911c:	beq	2918c <__flatcc_fb_gen_c_json_printer@@Base+0x4b8>
   29120:	ldr	r0, [pc, #196]	; 291ec <__flatcc_fb_gen_c_json_printer@@Base+0x518>
   29124:	ldr	r3, [r6, #204]	; 0xcc
   29128:	mov	r2, #3
   2912c:	mov	r1, #1
   29130:	add	r0, pc, r0
   29134:	bl	14014 <fwrite@plt>
   29138:	ldr	r0, [pc, #176]	; 291f0 <__flatcc_fb_gen_c_json_printer@@Base+0x51c>
   2913c:	ldr	r3, [r6, #204]	; 0xcc
   29140:	mov	r2, #3
   29144:	mov	r1, #1
   29148:	add	r0, pc, r0
   2914c:	bl	14014 <fwrite@plt>
   29150:	b	29058 <__flatcc_fb_gen_c_json_printer@@Base+0x384>
   29154:	ldr	r0, [pc, #152]	; 291f4 <__flatcc_fb_gen_c_json_printer@@Base+0x520>
   29158:	ldr	r3, [r6, #204]	; 0xcc
   2915c:	ldr	r2, [pc, #148]	; 291f8 <__flatcc_fb_gen_c_json_printer@@Base+0x524>
   29160:	mov	r1, #1
   29164:	add	r0, pc, r0
   29168:	bl	14014 <fwrite@plt>
   2916c:	ldr	r3, [r6, #208]	; 0xd0
   29170:	ldr	r1, [pc, #132]	; 291fc <__flatcc_fb_gen_c_json_printer@@Base+0x528>
   29174:	ldr	r0, [r6, #204]	; 0xcc
   29178:	add	r1, pc, r1
   2917c:	ldr	r2, [r3, #160]	; 0xa0
   29180:	bl	1408c <fprintf@plt>
   29184:	ldr	r4, [r6, #208]	; 0xd0
   29188:	b	28dac <__flatcc_fb_gen_c_json_printer@@Base+0xd8>
   2918c:	ldr	r1, [pc, #108]	; 29200 <__flatcc_fb_gen_c_json_printer@@Base+0x52c>
   29190:	ldr	r3, [r2, #8]
   29194:	add	r1, pc, r1
   29198:	ldr	r2, [r2, #12]
   2919c:	ldr	r0, [r6, #204]	; 0xcc
   291a0:	bl	1408c <fprintf@plt>
   291a4:	b	29138 <__flatcc_fb_gen_c_json_printer@@Base+0x464>
   291a8:	andeq	sp, r2, ip, ror #27
   291ac:	andeq	r9, r1, r8, lsr #9
   291b0:	andeq	sp, r2, r0, ror #27
   291b4:	strdeq	sp, [r2], -r4
   291b8:	andeq	r7, r1, r8, lsr sp
   291bc:	andeq	r9, r1, r0, ror #10
   291c0:	andeq	lr, r2, ip, ror #1
   291c4:	andeq	lr, r2, ip, ror r0
   291c8:			; <UNDEFINED> instruction: 0x0002dfb0
   291cc:	andeq	lr, r2, ip, asr #32
   291d0:	andeq	lr, r2, ip, lsl #2
   291d4:	strheq	lr, [r2], -r8
   291d8:	andeq	ip, r2, r0, ror #25
   291dc:	strheq	pc, [r1], -r0	; <UNPREDICTABLE>
   291e0:	andeq	lr, r2, r4, lsr #1
   291e4:	andeq	sp, r2, r4, lsr #30
   291e8:	andeq	sp, r2, ip, ror #30
   291ec:	andeq	lr, r2, r4
   291f0:			; <UNDEFINED> instruction: 0x00029bb4
   291f4:	ldrdeq	sp, [r2], -ip
   291f8:	andeq	r0, r0, r2, ror #3
   291fc:	andeq	sp, r2, ip, lsr #23
   29200:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   29204:	andeq	r0, r0, r0
   29208:	push	{r4, lr}
   2920c:	mov	r4, r0
   29210:	ldr	r0, [r0, #16]
   29214:	cmp	r0, #0
   29218:	beq	29220 <__flatcc_fb_gen_c_json_printer@@Base+0x54c>
   2921c:	bl	13fcc <free@plt>
   29220:	ldr	r0, [r4, #20]
   29224:	cmp	r0, #0
   29228:	beq	29230 <__flatcc_fb_gen_c_json_printer@@Base+0x55c>
   2922c:	bl	13fcc <free@plt>
   29230:	ldr	r0, [r4, #24]
   29234:	cmp	r0, #0
   29238:	beq	29240 <__flatcc_fb_gen_c_json_printer@@Base+0x56c>
   2923c:	bl	13fcc <free@plt>
   29240:	mov	r0, r4
   29244:	mov	r2, #44	; 0x2c
   29248:	mov	r1, #0
   2924c:	pop	{r4, lr}
   29250:	b	140a4 <memset@plt>
   29254:	add	r3, r1, #4
   29258:	ldr	r1, [pc, #12]	; 2926c <__flatcc_fb_gen_c_json_printer@@Base+0x598>
   2925c:	mov	r2, r0
   29260:	add	r1, pc, r1
   29264:	mov	r0, r3
   29268:	b	2c224 <fb_symbol_table_visit@@Base>
   2926c:	andeq	r0, r0, r4, lsr #32
   29270:	add	r3, r1, #4
   29274:	ldr	r1, [pc, #12]	; 29288 <__flatcc_fb_gen_c_json_printer@@Base+0x5b4>
   29278:	mov	r2, r0
   2927c:	add	r1, pc, r1
   29280:	mov	r0, r3
   29284:	b	2c224 <fb_symbol_table_visit@@Base>
   29288:	andeq	r0, r0, ip, lsl #2
   2928c:	ldrh	r3, [r1, #8]
   29290:	cmp	r3, #4
   29294:	bxhi	lr
   29298:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2929c:	mov	r6, r0
   292a0:	ldr	r0, [r0, #40]	; 0x28
   292a4:	mov	r7, r1
   292a8:	add	r0, r0, #172	; 0xac
   292ac:	ldr	r1, [r1, #16]
   292b0:	bl	2bb18 <ptr_set_find_item@@Base>
   292b4:	cmp	r0, #0
   292b8:	beq	2938c <__flatcc_fb_gen_c_json_printer@@Base+0x6b8>
   292bc:	ldr	r3, [r6]
   292c0:	ldr	r9, [r6, #36]	; 0x24
   292c4:	cmp	r3, #0
   292c8:	moveq	r3, r9
   292cc:	beq	29314 <__flatcc_fb_gen_c_json_printer@@Base+0x640>
   292d0:	ldr	r3, [r7, #12]
   292d4:	ldr	r5, [r3]
   292d8:	mov	r3, r9
   292dc:	cmp	r5, #0
   292e0:	beq	29314 <__flatcc_fb_gen_c_json_printer@@Base+0x640>
   292e4:	mov	r8, #46	; 0x2e
   292e8:	ldr	r2, [r5, #4]
   292ec:	mov	r0, r3
   292f0:	ldm	r2, {r1, r4}
   292f4:	mov	r2, r4
   292f8:	bl	13fd8 <memcpy@plt>
   292fc:	add	r4, r0, r4
   29300:	add	r3, r4, #1
   29304:	strb	r8, [r4]
   29308:	ldr	r5, [r5]
   2930c:	cmp	r5, #0
   29310:	bne	292e8 <__flatcc_fb_gen_c_json_printer@@Base+0x614>
   29314:	ldr	r2, [r7, #4]
   29318:	mov	r0, r3
   2931c:	ldm	r2, {r1, r4}
   29320:	mov	r2, r4
   29324:	bl	13fd8 <memcpy@plt>
   29328:	mov	r2, #0
   2932c:	strb	r2, [r0, r4]
   29330:	ldrh	r2, [r7, #8]
   29334:	add	r3, r0, r4
   29338:	add	r3, r3, #1
   2933c:	str	r3, [r6, #36]	; 0x24
   29340:	cmp	r2, #4
   29344:	addls	pc, pc, r2, lsl #2
   29348:	b	29388 <__flatcc_fb_gen_c_json_printer@@Base+0x6b4>
   2934c:	b	29374 <__flatcc_fb_gen_c_json_printer@@Base+0x6a0>
   29350:	b	29374 <__flatcc_fb_gen_c_json_printer@@Base+0x6a0>
   29354:	b	29388 <__flatcc_fb_gen_c_json_printer@@Base+0x6b4>
   29358:	b	29360 <__flatcc_fb_gen_c_json_printer@@Base+0x68c>
   2935c:	b	29360 <__flatcc_fb_gen_c_json_printer@@Base+0x68c>
   29360:	ldr	r3, [r6, #32]
   29364:	add	r2, r3, #8
   29368:	stm	r3, {r7, r9}
   2936c:	str	r2, [r6, #32]
   29370:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   29374:	ldr	r3, [r6, #28]
   29378:	add	r2, r3, #8
   2937c:	stm	r3, {r7, r9}
   29380:	str	r2, [r6, #28]
   29384:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   29388:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2938c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   29390:	ldrh	r3, [r1, #8]
   29394:	cmp	r3, #4
   29398:	bxhi	lr
   2939c:	push	{r4, r5, r6, lr}
   293a0:	mov	r4, r0
   293a4:	ldr	r0, [r0, #40]	; 0x28
   293a8:	mov	r5, r1
   293ac:	add	r0, r0, #172	; 0xac
   293b0:	ldr	r1, [r1, #16]
   293b4:	bl	2bb18 <ptr_set_find_item@@Base>
   293b8:	cmp	r0, #0
   293bc:	beq	29460 <__flatcc_fb_gen_c_json_printer@@Base+0x78c>
   293c0:	ldr	ip, [r4]
   293c4:	cmp	ip, #0
   293c8:	beq	293fc <__flatcc_fb_gen_c_json_printer@@Base+0x728>
   293cc:	ldr	r3, [r5, #12]
   293d0:	ldr	r3, [r3]
   293d4:	cmp	r3, #0
   293d8:	beq	29464 <__flatcc_fb_gen_c_json_printer@@Base+0x790>
   293dc:	mov	ip, #0
   293e0:	ldr	r2, [r3, #4]
   293e4:	ldr	r3, [r3]
   293e8:	ldr	r2, [r2, #4]
   293ec:	cmp	r3, #0
   293f0:	add	r2, r2, #1
   293f4:	add	ip, ip, r2
   293f8:	bne	293e0 <__flatcc_fb_gen_c_json_printer@@Base+0x70c>
   293fc:	ldr	r3, [r5, #4]
   29400:	ldr	r1, [r4, #12]
   29404:	ldrh	r2, [r5, #8]
   29408:	ldr	r3, [r3, #4]
   2940c:	add	r3, r3, r1
   29410:	add	r3, r3, #1
   29414:	add	ip, r3, ip
   29418:	str	ip, [r4, #12]
   2941c:	cmp	r2, #4
   29420:	addls	pc, pc, r2, lsl #2
   29424:	b	2945c <__flatcc_fb_gen_c_json_printer@@Base+0x788>
   29428:	b	2944c <__flatcc_fb_gen_c_json_printer@@Base+0x778>
   2942c:	b	2944c <__flatcc_fb_gen_c_json_printer@@Base+0x778>
   29430:	b	2945c <__flatcc_fb_gen_c_json_printer@@Base+0x788>
   29434:	b	2943c <__flatcc_fb_gen_c_json_printer@@Base+0x768>
   29438:	b	2943c <__flatcc_fb_gen_c_json_printer@@Base+0x768>
   2943c:	ldr	r3, [r4, #8]
   29440:	add	r3, r3, #1
   29444:	str	r3, [r4, #8]
   29448:	pop	{r4, r5, r6, pc}
   2944c:	ldr	r3, [r4, #4]
   29450:	add	r3, r3, #1
   29454:	str	r3, [r4, #4]
   29458:	pop	{r4, r5, r6, pc}
   2945c:	pop	{r4, r5, r6, pc}
   29460:	pop	{r4, r5, r6, pc}
   29464:	mov	ip, r3
   29468:	b	293fc <__flatcc_fb_gen_c_json_printer@@Base+0x728>
   2946c:	ldr	r3, [pc, #56]	; 294ac <__flatcc_fb_gen_c_json_printer@@Base+0x7d8>
   29470:	push	{r4, r5, r6, lr}
   29474:	add	r3, pc, r3
   29478:	mov	r4, r1
   2947c:	mov	r2, #8
   29480:	mov	r5, r0
   29484:	bl	14110 <qsort@plt>
   29488:	cmp	r4, #0
   2948c:	pople	{r4, r5, r6, pc}
   29490:	mov	r3, #0
   29494:	ldr	r2, [r5, r3, lsl #3]
   29498:	str	r3, [r2, #124]	; 0x7c
   2949c:	add	r3, r3, #1
   294a0:	cmp	r4, r3
   294a4:	bne	29494 <__flatcc_fb_gen_c_json_printer@@Base+0x7c0>
   294a8:	pop	{r4, r5, r6, pc}
   294ac:	andeq	r0, r0, r4, lsr r0
   294b0:	ldr	r1, [r1, #4]
   294b4:	ldr	r0, [r0, #4]
   294b8:	b	13fb4 <strcmp@plt>
   294bc:	sub	r2, r2, #2
   294c0:	push	{r4, r5, r6, r7, r8, lr}
   294c4:	mov	r4, r0
   294c8:	cmp	r2, #13
   294cc:	addls	pc, pc, r2, lsl #2
   294d0:	b	29650 <__flatcc_fb_gen_c_json_printer@@Base+0x97c>
   294d4:	b	29640 <__flatcc_fb_gen_c_json_printer@@Base+0x96c>
   294d8:	b	29650 <__flatcc_fb_gen_c_json_printer@@Base+0x97c>
   294dc:	b	29650 <__flatcc_fb_gen_c_json_printer@@Base+0x97c>
   294e0:	b	29650 <__flatcc_fb_gen_c_json_printer@@Base+0x97c>
   294e4:	b	29650 <__flatcc_fb_gen_c_json_printer@@Base+0x97c>
   294e8:	b	29590 <__flatcc_fb_gen_c_json_printer@@Base+0x8bc>
   294ec:	b	295e0 <__flatcc_fb_gen_c_json_printer@@Base+0x90c>
   294f0:	b	2950c <__flatcc_fb_gen_c_json_printer@@Base+0x838>
   294f4:	b	29650 <__flatcc_fb_gen_c_json_printer@@Base+0x97c>
   294f8:	b	29650 <__flatcc_fb_gen_c_json_printer@@Base+0x97c>
   294fc:	b	29650 <__flatcc_fb_gen_c_json_printer@@Base+0x97c>
   29500:	b	29650 <__flatcc_fb_gen_c_json_printer@@Base+0x97c>
   29504:	b	295f8 <__flatcc_fb_gen_c_json_printer@@Base+0x924>
   29508:	b	29620 <__flatcc_fb_gen_c_json_printer@@Base+0x94c>
   2950c:	mvn	r5, #0
   29510:	mov	r7, #13
   29514:	mov	r6, #14
   29518:	mov	r1, #3
   2951c:	mov	r0, r4
   29520:	bl	3a1dc <flatcc_builder_start_table@@Base>
   29524:	cmp	r0, #0
   29528:	bne	29670 <__flatcc_fb_gen_c_json_printer@@Base+0x99c>
   2952c:	cmn	r5, #1
   29530:	beq	29554 <__flatcc_fb_gen_c_json_printer@@Base+0x880>
   29534:	mov	r3, #4
   29538:	mov	r2, r3
   2953c:	mov	r1, #2
   29540:	mov	r0, r4
   29544:	bl	3bc1c <flatcc_builder_table_add@@Base>
   29548:	cmp	r0, #0
   2954c:	strne	r5, [r0]
   29550:	beq	29670 <__flatcc_fb_gen_c_json_printer@@Base+0x99c>
   29554:	cmp	r6, #0
   29558:	bne	29678 <__flatcc_fb_gen_c_json_printer@@Base+0x9a4>
   2955c:	cmp	r7, #0
   29560:	bne	2969c <__flatcc_fb_gen_c_json_printer@@Base+0x9c8>
   29564:	ldr	r5, [pc, #408]	; 29704 <__flatcc_fb_gen_c_json_printer@@Base+0xa30>
   29568:	mov	r2, #0
   2956c:	add	r5, pc, r5
   29570:	add	r1, r5, #56	; 0x38
   29574:	mov	r0, r4
   29578:	bl	3ab28 <flatcc_builder_check_required@@Base>
   2957c:	cmp	r0, #0
   29580:	beq	296e8 <__flatcc_fb_gen_c_json_printer@@Base+0xa14>
   29584:	mov	r0, r4
   29588:	pop	{r4, r5, r6, r7, r8, lr}
   2958c:	b	3abd0 <flatcc_builder_end_table@@Base>
   29590:	mvn	r5, #0
   29594:	sub	r1, r1, #1
   29598:	cmp	r1, #10
   2959c:	movhi	r7, #0
   295a0:	movhi	r6, #14
   295a4:	bhi	29518 <__flatcc_fb_gen_c_json_printer@@Base+0x844>
   295a8:	mov	r2, #14
   295ac:	ldr	r3, [pc, #340]	; 29708 <__flatcc_fb_gen_c_json_printer@@Base+0xa34>
   295b0:	cmp	r2, #0
   295b4:	add	r3, pc, r3
   295b8:	add	r1, r3, r1
   295bc:	ldrsb	r6, [r1, #24]
   295c0:	beq	295d8 <__flatcc_fb_gen_c_json_printer@@Base+0x904>
   295c4:	cmp	r2, #14
   295c8:	moveq	r7, r6
   295cc:	moveq	r6, r2
   295d0:	beq	29518 <__flatcc_fb_gen_c_json_printer@@Base+0x844>
   295d4:	mov	r6, r2
   295d8:	mov	r7, #0
   295dc:	b	29518 <__flatcc_fb_gen_c_json_printer@@Base+0x844>
   295e0:	mvn	r5, #0
   295e4:	sub	r1, r1, #1
   295e8:	cmp	r1, #10
   295ec:	movls	r2, #0
   295f0:	bls	295ac <__flatcc_fb_gen_c_json_printer@@Base+0x8d8>
   295f4:	b	29654 <__flatcc_fb_gen_c_json_printer@@Base+0x980>
   295f8:	ldrh	r3, [r1, #8]
   295fc:	ldr	r5, [r1, #124]	; 0x7c
   29600:	cmp	r3, #4
   29604:	addls	pc, pc, r3, lsl #2
   29608:	b	29660 <__flatcc_fb_gen_c_json_printer@@Base+0x98c>
   2960c:	b	296cc <__flatcc_fb_gen_c_json_printer@@Base+0x9f8>
   29610:	b	296cc <__flatcc_fb_gen_c_json_printer@@Base+0x9f8>
   29614:	b	29660 <__flatcc_fb_gen_c_json_printer@@Base+0x98c>
   29618:	b	296d4 <__flatcc_fb_gen_c_json_printer@@Base+0xa00>
   2961c:	b	296c0 <__flatcc_fb_gen_c_json_printer@@Base+0x9ec>
   29620:	ldrh	r3, [r1, #8]
   29624:	ldr	r5, [r1, #124]	; 0x7c
   29628:	cmp	r3, #1
   2962c:	bls	296dc <__flatcc_fb_gen_c_json_printer@@Base+0xa08>
   29630:	cmp	r3, #3
   29634:	bne	29654 <__flatcc_fb_gen_c_json_printer@@Base+0x980>
   29638:	ldr	r1, [r1, #40]	; 0x28
   2963c:	b	29594 <__flatcc_fb_gen_c_json_printer@@Base+0x8c0>
   29640:	mvn	r5, #0
   29644:	mov	r7, #0
   29648:	mov	r6, #13
   2964c:	b	29518 <__flatcc_fb_gen_c_json_printer@@Base+0x844>
   29650:	mvn	r5, #0
   29654:	mov	r7, #0
   29658:	mov	r6, r7
   2965c:	b	29518 <__flatcc_fb_gen_c_json_printer@@Base+0x844>
   29660:	mov	r1, #3
   29664:	bl	3a1dc <flatcc_builder_start_table@@Base>
   29668:	cmp	r0, #0
   2966c:	beq	29564 <__flatcc_fb_gen_c_json_printer@@Base+0x890>
   29670:	mov	r0, #0
   29674:	pop	{r4, r5, r6, r7, r8, pc}
   29678:	mov	r3, #1
   2967c:	mov	r2, r3
   29680:	mov	r1, #0
   29684:	mov	r0, r4
   29688:	bl	3bc1c <flatcc_builder_table_add@@Base>
   2968c:	cmp	r0, #0
   29690:	strbne	r6, [r0]
   29694:	bne	2955c <__flatcc_fb_gen_c_json_printer@@Base+0x888>
   29698:	b	29670 <__flatcc_fb_gen_c_json_printer@@Base+0x99c>
   2969c:	mov	r3, #1
   296a0:	mov	r2, r3
   296a4:	mov	r1, r3
   296a8:	mov	r0, r4
   296ac:	bl	3bc1c <flatcc_builder_table_add@@Base>
   296b0:	cmp	r0, #0
   296b4:	strbne	r7, [r0]
   296b8:	bne	29564 <__flatcc_fb_gen_c_json_printer@@Base+0x890>
   296bc:	b	29670 <__flatcc_fb_gen_c_json_printer@@Base+0x99c>
   296c0:	mov	r7, #0
   296c4:	mov	r6, #16
   296c8:	b	29518 <__flatcc_fb_gen_c_json_printer@@Base+0x844>
   296cc:	mov	r2, #15
   296d0:	b	295d4 <__flatcc_fb_gen_c_json_printer@@Base+0x900>
   296d4:	ldr	r1, [r1, #40]	; 0x28
   296d8:	b	295e4 <__flatcc_fb_gen_c_json_printer@@Base+0x910>
   296dc:	mov	r7, #15
   296e0:	mov	r6, #14
   296e4:	b	29518 <__flatcc_fb_gen_c_json_printer@@Base+0x844>
   296e8:	ldr	r1, [pc, #28]	; 2970c <__flatcc_fb_gen_c_json_printer@@Base+0xa38>
   296ec:	ldr	r0, [pc, #28]	; 29710 <__flatcc_fb_gen_c_json_printer@@Base+0xa3c>
   296f0:	add	r3, r5, #36	; 0x24
   296f4:	mov	r2, #23
   296f8:	add	r1, pc, r1
   296fc:	add	r0, pc, r0
   29700:	bl	14140 <__assert_fail@plt>
   29704:	andeq	sp, r2, ip, ror #23
   29708:	andeq	sp, r2, r4, lsr #23
   2970c:	andeq	sp, r2, r4, lsr #24
   29710:	muleq	r2, r8, ip
   29714:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29718:	vpush	{d8-d9}
   2971c:	mov	r4, r1
   29720:	mov	fp, r0
   29724:	mov	r1, #0
   29728:	sub	sp, sp, #116	; 0x74
   2972c:	add	ip, sp, #68	; 0x44
   29730:	mov	r0, ip
   29734:	mov	r5, r2
   29738:	mov	r2, #44	; 0x2c
   2973c:	mov	r8, r3
   29740:	mov	r7, ip
   29744:	ldr	r6, [r3, #60]	; 0x3c
   29748:	str	r3, [sp, #48]	; 0x30
   2974c:	str	ip, [sp, #52]	; 0x34
   29750:	bl	140a4 <memset@plt>
   29754:	ldr	r1, [pc, #1236]	; 29c30 <__flatcc_fb_gen_c_json_printer@@Base+0xf5c>
   29758:	mov	r2, r7
   2975c:	mov	r0, r6
   29760:	add	r1, pc, r1
   29764:	str	r4, [sp, #68]	; 0x44
   29768:	str	r8, [sp, #108]	; 0x6c
   2976c:	bl	2d17c <fb_scope_table_visit@@Base>
   29770:	ldr	r7, [sp, #72]	; 0x48
   29774:	mov	r1, #8
   29778:	mov	r0, r7
   2977c:	bl	13f9c <calloc@plt>
   29780:	ldr	r9, [sp, #76]	; 0x4c
   29784:	mov	r1, #8
   29788:	mov	r4, r0
   2978c:	mov	r0, r9
   29790:	str	r4, [sp, #84]	; 0x54
   29794:	bl	13f9c <calloc@plt>
   29798:	ldr	r8, [sp, #80]	; 0x50
   2979c:	mov	sl, r0
   297a0:	str	r0, [sp, #88]	; 0x58
   297a4:	mov	r0, r8
   297a8:	bl	14038 <malloc@plt>
   297ac:	cmp	r7, #0
   297b0:	clz	r3, r4
   297b4:	lsr	r3, r3, #5
   297b8:	movle	r3, #0
   297bc:	cmp	r3, #0
   297c0:	str	r4, [sp, #96]	; 0x60
   297c4:	str	sl, [sp, #100]	; 0x64
   297c8:	str	r0, [sp, #92]	; 0x5c
   297cc:	str	r0, [sp, #104]	; 0x68
   297d0:	bne	2a358 <__flatcc_fb_gen_c_json_printer@@Base+0x1684>
   297d4:	cmp	r9, #0
   297d8:	clz	sl, sl
   297dc:	lsr	sl, sl, #5
   297e0:	movle	sl, #0
   297e4:	cmp	sl, #0
   297e8:	bne	2a358 <__flatcc_fb_gen_c_json_printer@@Base+0x1684>
   297ec:	cmp	r8, #0
   297f0:	clz	r4, r0
   297f4:	lsr	r4, r4, #5
   297f8:	moveq	r4, #0
   297fc:	cmp	r4, #0
   29800:	bne	2a358 <__flatcc_fb_gen_c_json_printer@@Base+0x1684>
   29804:	ldr	r1, [pc, #1064]	; 29c34 <__flatcc_fb_gen_c_json_printer@@Base+0xf60>
   29808:	ldr	r2, [sp, #52]	; 0x34
   2980c:	mov	r0, r6
   29810:	add	r1, pc, r1
   29814:	bl	2d17c <fb_scope_table_visit@@Base>
   29818:	ldr	r1, [sp, #72]	; 0x48
   2981c:	ldr	r0, [sp, #84]	; 0x54
   29820:	bl	2946c <__flatcc_fb_gen_c_json_printer@@Base+0x798>
   29824:	ldr	r0, [sp, #88]	; 0x58
   29828:	ldr	r1, [sp, #76]	; 0x4c
   2982c:	bl	2946c <__flatcc_fb_gen_c_json_printer@@Base+0x798>
   29830:	ldr	r0, [sp, #72]	; 0x48
   29834:	cmp	r0, #0
   29838:	ble	2a350 <__flatcc_fb_gen_c_json_printer@@Base+0x167c>
   2983c:	lsl	r0, r0, #2
   29840:	bl	14038 <malloc@plt>
   29844:	subs	r3, r0, #0
   29848:	str	r3, [sp, #16]
   2984c:	beq	2a358 <__flatcc_fb_gen_c_json_printer@@Base+0x1684>
   29850:	ldr	r3, [r5]
   29854:	cmp	r3, #0
   29858:	beq	2a330 <__flatcc_fb_gen_c_json_printer@@Base+0x165c>
   2985c:	ldr	r1, [pc, #980]	; 29c38 <__flatcc_fb_gen_c_json_printer@@Base+0xf64>
   29860:	mov	r3, #2
   29864:	mov	r2, #0
   29868:	add	r1, pc, r1
   2986c:	mov	r0, fp
   29870:	bl	393a4 <flatcc_builder_start_buffer@@Base>
   29874:	cmp	r0, #0
   29878:	bne	29888 <__flatcc_fb_gen_c_json_printer@@Base+0xbb4>
   2987c:	mov	r1, #5
   29880:	mov	r0, fp
   29884:	bl	3a1dc <flatcc_builder_start_table@@Base>
   29888:	ldr	r3, [sp, #48]	; 0x30
   2988c:	ldrh	r4, [r3, #16]
   29890:	cmp	r4, #2
   29894:	beq	2a39c <__flatcc_fb_gen_c_json_printer@@Base+0x16c8>
   29898:	ldr	r3, [sp, #48]	; 0x30
   2989c:	ldrh	r3, [r3, #32]
   298a0:	cmp	r3, #2
   298a4:	beq	2a368 <__flatcc_fb_gen_c_json_printer@@Base+0x1694>
   298a8:	ldr	r3, [sp, #72]	; 0x48
   298ac:	ldr	r2, [sp, #84]	; 0x54
   298b0:	cmp	r3, #0
   298b4:	str	r3, [sp, #32]
   298b8:	str	r2, [sp, #36]	; 0x24
   298bc:	ble	29ea0 <__flatcc_fb_gen_c_json_printer@@Base+0x11cc>
   298c0:	ldr	r3, [pc, #884]	; 29c3c <__flatcc_fb_gen_c_json_printer@@Base+0xf68>
   298c4:	ldr	r2, [pc, #884]	; 29c40 <__flatcc_fb_gen_c_json_printer@@Base+0xf6c>
   298c8:	add	r3, pc, r3
   298cc:	add	r2, pc, r2
   298d0:	add	r3, r3, #60	; 0x3c
   298d4:	str	r3, [sp, #44]	; 0x2c
   298d8:	add	r3, r2, #56	; 0x38
   298dc:	str	r3, [sp, #56]	; 0x38
   298e0:	ldr	r3, [sp, #36]	; 0x24
   298e4:	vldr	d9, [pc, #828]	; 29c28 <__flatcc_fb_gen_c_json_printer@@Base+0xf54>
   298e8:	str	r3, [sp, #24]
   298ec:	ldr	r3, [sp, #16]
   298f0:	ldr	r1, [pc, #844]	; 29c44 <__flatcc_fb_gen_c_json_printer@@Base+0xf70>
   298f4:	sub	r3, r3, #4
   298f8:	mov	r9, fp
   298fc:	add	r1, pc, r1
   29900:	str	r3, [sp, #28]
   29904:	mov	r3, #0
   29908:	str	r2, [sp, #60]	; 0x3c
   2990c:	str	r1, [sp, #40]	; 0x28
   29910:	str	r3, [sp, #20]
   29914:	ldr	r3, [sp, #36]	; 0x24
   29918:	ldr	r2, [sp, #20]
   2991c:	mov	r1, #5
   29920:	mov	r0, r9
   29924:	ldr	fp, [r3, r2, lsl #3]
   29928:	bl	3a1dc <flatcc_builder_start_table@@Base>
   2992c:	ldr	r3, [sp, #24]
   29930:	mov	r0, r9
   29934:	ldr	r1, [r3, #4]
   29938:	bl	3ba80 <flatcc_builder_create_string_str@@Base>
   2993c:	subs	r4, r0, #0
   29940:	beq	29958 <__flatcc_fb_gen_c_json_printer@@Base+0xc84>
   29944:	mov	r1, #0
   29948:	mov	r0, r9
   2994c:	bl	3be3c <flatcc_builder_table_add_offset@@Base>
   29950:	cmp	r0, #0
   29954:	strne	r4, [r0]
   29958:	mov	r0, r9
   2995c:	bl	39ff4 <flatcc_builder_start_offset_vector@@Base>
   29960:	ldr	r4, [fp, #20]
   29964:	cmp	r4, #0
   29968:	movne	sl, #0
   2996c:	strne	fp, [sp, #4]
   29970:	bne	299dc <__flatcc_fb_gen_c_json_printer@@Base+0xd08>
   29974:	b	29dec <__flatcc_fb_gen_c_json_printer@@Base+0x1118>
   29978:	cmp	r3, #1
   2997c:	bne	2998c <__flatcc_fb_gen_c_json_printer@@Base+0xcb8>
   29980:	ldrh	r5, [r4, #80]	; 0x50
   29984:	cmp	r5, #0
   29988:	bne	2a0b8 <__flatcc_fb_gen_c_json_printer@@Base+0x13e4>
   2998c:	cmp	fp, #0
   29990:	bne	29b3c <__flatcc_fb_gen_c_json_printer@@Base+0xe68>
   29994:	ldr	r1, [pc, #684]	; 29c48 <__flatcc_fb_gen_c_json_printer@@Base+0xf74>
   29998:	mov	r2, #2
   2999c:	add	r1, pc, r1
   299a0:	add	r1, r1, #60	; 0x3c
   299a4:	mov	r0, r9
   299a8:	bl	3ab28 <flatcc_builder_check_required@@Base>
   299ac:	cmp	r0, #0
   299b0:	beq	2a3cc <__flatcc_fb_gen_c_json_printer@@Base+0x16f8>
   299b4:	mov	r0, r9
   299b8:	bl	3abd0 <flatcc_builder_end_table@@Base>
   299bc:	subs	r1, r0, #0
   299c0:	beq	299cc <__flatcc_fb_gen_c_json_printer@@Base+0xcf8>
   299c4:	mov	r0, r9
   299c8:	bl	39a04 <flatcc_builder_offset_vector_push@@Base>
   299cc:	ldr	r4, [r4]
   299d0:	orr	sl, r8, sl
   299d4:	cmp	r4, #0
   299d8:	beq	29de8 <__flatcc_fb_gen_c_json_printer@@Base+0x1114>
   299dc:	cmp	sl, #0
   299e0:	ldrh	r5, [r4, #72]	; 0x48
   299e4:	bne	299f8 <__flatcc_fb_gen_c_json_printer@@Base+0xd24>
   299e8:	tst	r5, #128	; 0x80
   299ec:	movne	r8, #1
   299f0:	movne	r7, r8
   299f4:	bne	29a00 <__flatcc_fb_gen_c_json_printer@@Base+0xd2c>
   299f8:	mov	r8, #0
   299fc:	mov	r7, r8
   29a00:	ldrh	r3, [r4, #24]
   29a04:	ands	fp, r5, #4
   29a08:	movne	r2, #1
   29a0c:	moveq	r2, #0
   29a10:	cmp	r3, #14
   29a14:	str	r2, [sp]
   29a18:	beq	29c94 <__flatcc_fb_gen_c_json_printer@@Base+0xfc0>
   29a1c:	mov	r1, #9
   29a20:	mov	r0, r9
   29a24:	bl	3a1dc <flatcc_builder_start_table@@Base>
   29a28:	ldr	r3, [r4, #4]
   29a2c:	mov	r0, r9
   29a30:	ldm	r3, {r1, r2}
   29a34:	bl	3b97c <flatcc_builder_create_string@@Base>
   29a38:	subs	r6, r0, #0
   29a3c:	beq	29a54 <__flatcc_fb_gen_c_json_printer@@Base+0xd80>
   29a40:	mov	r1, #0
   29a44:	mov	r0, r9
   29a48:	bl	3be3c <flatcc_builder_table_add_offset@@Base>
   29a4c:	cmp	r0, #0
   29a50:	strne	r6, [r0]
   29a54:	ldrh	r2, [r4, #24]
   29a58:	ldr	r1, [r4, #16]
   29a5c:	mov	r0, r9
   29a60:	bl	294bc <__flatcc_fb_gen_c_json_printer@@Base+0x7e8>
   29a64:	subs	r6, r0, #0
   29a68:	bne	29c10 <__flatcc_fb_gen_c_json_printer@@Base+0xf3c>
   29a6c:	ldr	r3, [sp, #4]
   29a70:	ldrh	r3, [r3, #8]
   29a74:	cmp	r3, #0
   29a78:	bne	29978 <__flatcc_fb_gen_c_json_printer@@Base+0xca4>
   29a7c:	ldrh	r3, [r4, #56]	; 0x38
   29a80:	sub	r3, r3, #3
   29a84:	cmp	r3, #3
   29a88:	addls	pc, pc, r3, lsl #2
   29a8c:	b	2a44c <__flatcc_fb_gen_c_json_printer@@Base+0x1778>
   29a90:	b	29b60 <__flatcc_fb_gen_c_json_printer@@Base+0xe8c>
   29a94:	b	29aa0 <__flatcc_fb_gen_c_json_printer@@Base+0xdcc>
   29a98:	b	29aa0 <__flatcc_fb_gen_c_json_printer@@Base+0xdcc>
   29a9c:	b	29bd4 <__flatcc_fb_gen_c_json_printer@@Base+0xf00>
   29aa0:	ldrd	r2, [r4, #48]	; 0x30
   29aa4:	strd	r2, [sp, #8]
   29aa8:	ldrd	r2, [sp, #8]
   29aac:	orrs	r3, r2, r3
   29ab0:	bne	29bec <__flatcc_fb_gen_c_json_printer@@Base+0xf18>
   29ab4:	ldrh	r6, [r4, #96]	; 0x60
   29ab8:	cmp	r6, #0
   29abc:	moveq	r6, #4
   29ac0:	bne	29b9c <__flatcc_fb_gen_c_json_printer@@Base+0xec8>
   29ac4:	mov	r3, #2
   29ac8:	mov	r2, r3
   29acc:	mov	r1, #3
   29ad0:	mov	r0, r9
   29ad4:	bl	3bc1c <flatcc_builder_table_add@@Base>
   29ad8:	cmp	r0, #0
   29adc:	strhne	r6, [r0]
   29ae0:	cmp	r7, #0
   29ae4:	beq	29b08 <__flatcc_fb_gen_c_json_printer@@Base+0xe34>
   29ae8:	mov	r3, #1
   29aec:	mov	r2, r3
   29af0:	mov	r1, #8
   29af4:	mov	r0, r9
   29af8:	bl	3bc1c <flatcc_builder_table_add@@Base>
   29afc:	cmp	r0, #0
   29b00:	movne	r3, #1
   29b04:	strbne	r3, [r0]
   29b08:	tst	r5, #256	; 0x100
   29b0c:	beq	2998c <__flatcc_fb_gen_c_json_printer@@Base+0xcb8>
   29b10:	mov	r3, #1
   29b14:	mov	r2, r3
   29b18:	mov	r1, #7
   29b1c:	mov	r0, r9
   29b20:	bl	3bc1c <flatcc_builder_table_add@@Base>
   29b24:	cmp	r0, #0
   29b28:	beq	2998c <__flatcc_fb_gen_c_json_printer@@Base+0xcb8>
   29b2c:	mov	r3, #1
   29b30:	cmp	fp, #0
   29b34:	strb	r3, [r0]
   29b38:	beq	29994 <__flatcc_fb_gen_c_json_printer@@Base+0xcc0>
   29b3c:	mov	r3, #1
   29b40:	mov	r2, r3
   29b44:	mov	r1, #6
   29b48:	mov	r0, r9
   29b4c:	bl	3bc1c <flatcc_builder_table_add@@Base>
   29b50:	cmp	r0, #0
   29b54:	ldrbne	r3, [sp]
   29b58:	strbne	r3, [r0]
   29b5c:	b	29994 <__flatcc_fb_gen_c_json_printer@@Base+0xcc0>
   29b60:	vldr	d8, [r4, #48]	; 0x30
   29b64:	vcmp.f64	d8, d9
   29b68:	vmrs	APSR_nzcv, fpscr
   29b6c:	beq	29ab4 <__flatcc_fb_gen_c_json_printer@@Base+0xde0>
   29b70:	mov	r3, #8
   29b74:	mov	r2, r3
   29b78:	mov	r1, #5
   29b7c:	mov	r0, r9
   29b80:	bl	3bc1c <flatcc_builder_table_add@@Base>
   29b84:	ldrh	r6, [r4, #96]	; 0x60
   29b88:	cmp	r0, #0
   29b8c:	vstrne	d8, [r0]
   29b90:	cmp	r6, #0
   29b94:	moveq	r6, #4
   29b98:	beq	29ac4 <__flatcc_fb_gen_c_json_printer@@Base+0xdf0>
   29b9c:	mov	r3, #2
   29ba0:	mov	r2, r3
   29ba4:	mov	r1, r3
   29ba8:	mov	r0, r9
   29bac:	bl	3bc1c <flatcc_builder_table_add@@Base>
   29bb0:	cmp	r0, #0
   29bb4:	strhne	r6, [r0]
   29bb8:	ldrh	r6, [r4, #96]	; 0x60
   29bbc:	add	r6, r6, #2
   29bc0:	lsl	r6, r6, #1
   29bc4:	uxth	r6, r6
   29bc8:	cmp	r6, #0
   29bcc:	beq	29ae0 <__flatcc_fb_gen_c_json_printer@@Base+0xe0c>
   29bd0:	b	29ac4 <__flatcc_fb_gen_c_json_printer@@Base+0xdf0>
   29bd4:	ldrb	r2, [r4, #48]	; 0x30
   29bd8:	mov	r3, #0
   29bdc:	strd	r2, [sp, #8]
   29be0:	ldrd	r2, [sp, #8]
   29be4:	orrs	r3, r2, r3
   29be8:	beq	29ab4 <__flatcc_fb_gen_c_json_printer@@Base+0xde0>
   29bec:	mov	r3, #8
   29bf0:	mov	r2, r3
   29bf4:	mov	r1, #4
   29bf8:	mov	r0, r9
   29bfc:	bl	3bc1c <flatcc_builder_table_add@@Base>
   29c00:	cmp	r0, #0
   29c04:	ldrdne	r2, [sp, #8]
   29c08:	strdne	r2, [r0]
   29c0c:	b	29ab4 <__flatcc_fb_gen_c_json_printer@@Base+0xde0>
   29c10:	mov	r1, #1
   29c14:	mov	r0, r9
   29c18:	bl	3be3c <flatcc_builder_table_add_offset@@Base>
   29c1c:	cmp	r0, #0
   29c20:	strne	r6, [r0]
   29c24:	b	29a6c <__flatcc_fb_gen_c_json_printer@@Base+0xd98>
	...
   29c30:			; <UNDEFINED> instruction: 0xfffffb08
   29c34:			; <UNDEFINED> instruction: 0xfffffa3c
   29c38:			; <UNDEFINED> instruction: 0x0002dbbc
   29c3c:	muleq	r2, r0, r8
   29c40:	andeq	sp, r2, ip, lsl #17
   29c44:	andeq	lr, r2, ip, asr r8
   29c48:			; <UNDEFINED> instruction: 0x0002d7bc
   29c4c:	andeq	sp, r2, ip, lsl #6
   29c50:	andeq	sp, r2, r0, ror #4
   29c54:	andeq	sp, r2, ip, asr r2
   29c58:	andeq	ip, r2, r4, asr pc
   29c5c:	andeq	sp, r2, ip, ror #1
   29c60:	andeq	ip, r2, r0, lsl #27
   29c64:	andeq	ip, r2, r8, lsr pc
   29c68:	andeq	sp, r2, r4, asr #32
   29c6c:	andeq	ip, r2, r8, lsl pc
   29c70:	andeq	sp, r2, r8, asr #2
   29c74:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   29c78:	andeq	sp, r2, r4, asr r2
   29c7c:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   29c80:	andeq	ip, r2, r0, asr pc
   29c84:			; <UNDEFINED> instruction: 0x0002ceb4
   29c88:	andeq	sp, r2, ip, ror r1
   29c8c:	muleq	r2, r8, lr
   29c90:	andeq	sp, r2, r4, lsr r0
   29c94:	ldr	r3, [r4, #16]
   29c98:	ldrh	r3, [r3, #8]
   29c9c:	cmp	r3, #4
   29ca0:	bne	29a1c <__flatcc_fb_gen_c_json_printer@@Base+0xd48>
   29ca4:	mov	r1, #9
   29ca8:	mov	r0, r9
   29cac:	bl	3a1dc <flatcc_builder_start_table@@Base>
   29cb0:	mov	r0, r9
   29cb4:	bl	3a05c <flatcc_builder_start_string@@Base>
   29cb8:	ldr	r3, [r4, #4]
   29cbc:	mov	r0, r9
   29cc0:	ldm	r3, {r1, r2}
   29cc4:	bl	39c2c <flatcc_builder_append_string@@Base>
   29cc8:	mov	r2, #5
   29ccc:	ldr	r1, [sp, #40]	; 0x28
   29cd0:	mov	r0, r9
   29cd4:	bl	39c2c <flatcc_builder_append_string@@Base>
   29cd8:	mov	r0, r9
   29cdc:	bl	3bae0 <flatcc_builder_end_string@@Base>
   29ce0:	subs	r6, r0, #0
   29ce4:	beq	29cfc <__flatcc_fb_gen_c_json_printer@@Base+0x1028>
   29ce8:	mov	r1, #0
   29cec:	mov	r0, r9
   29cf0:	bl	3be3c <flatcc_builder_table_add_offset@@Base>
   29cf4:	cmp	r0, #0
   29cf8:	strne	r6, [r0]
   29cfc:	mov	r1, #3
   29d00:	mov	r0, r9
   29d04:	bl	3a1dc <flatcc_builder_start_table@@Base>
   29d08:	subs	r6, r0, #0
   29d0c:	bne	29d80 <__flatcc_fb_gen_c_json_printer@@Base+0x10ac>
   29d10:	mov	r3, #1
   29d14:	mov	r2, r3
   29d18:	mov	r1, r6
   29d1c:	mov	r0, r9
   29d20:	bl	3bc1c <flatcc_builder_table_add@@Base>
   29d24:	cmp	r0, #0
   29d28:	beq	29d80 <__flatcc_fb_gen_c_json_printer@@Base+0x10ac>
   29d2c:	mov	r3, #1
   29d30:	strb	r3, [r0]
   29d34:	mov	r2, r6
   29d38:	ldr	r1, [sp, #56]	; 0x38
   29d3c:	mov	r0, r9
   29d40:	str	r3, [sp, #8]
   29d44:	bl	3ab28 <flatcc_builder_check_required@@Base>
   29d48:	ldr	r3, [sp, #8]
   29d4c:	cmp	r0, #0
   29d50:	beq	2a42c <__flatcc_fb_gen_c_json_printer@@Base+0x1758>
   29d54:	mov	r0, r9
   29d58:	str	r3, [sp, #8]
   29d5c:	bl	3abd0 <flatcc_builder_end_table@@Base>
   29d60:	subs	r6, r0, #0
   29d64:	beq	29d80 <__flatcc_fb_gen_c_json_printer@@Base+0x10ac>
   29d68:	ldr	r3, [sp, #8]
   29d6c:	mov	r0, r9
   29d70:	mov	r1, r3
   29d74:	bl	3be3c <flatcc_builder_table_add_offset@@Base>
   29d78:	cmp	r0, #0
   29d7c:	strne	r6, [r0]
   29d80:	ldrh	r6, [r4, #96]	; 0x60
   29d84:	add	r3, r6, #1
   29d88:	lsl	r3, r3, #1
   29d8c:	uxth	r3, r3
   29d90:	cmp	r3, #0
   29d94:	str	r3, [sp, #8]
   29d98:	bne	2a2e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1614>
   29d9c:	sub	r6, r6, #1
   29da0:	uxth	r6, r6
   29da4:	cmp	r6, #0
   29da8:	bne	2a2c8 <__flatcc_fb_gen_c_json_printer@@Base+0x15f4>
   29dac:	cmp	fp, #0
   29db0:	bne	2a2a4 <__flatcc_fb_gen_c_json_printer@@Base+0x15d0>
   29db4:	mov	r2, #2
   29db8:	ldr	r1, [sp, #44]	; 0x2c
   29dbc:	mov	r0, r9
   29dc0:	bl	3ab28 <flatcc_builder_check_required@@Base>
   29dc4:	cmp	r0, #0
   29dc8:	beq	2a3cc <__flatcc_fb_gen_c_json_printer@@Base+0x16f8>
   29dcc:	mov	r0, r9
   29dd0:	bl	3abd0 <flatcc_builder_end_table@@Base>
   29dd4:	subs	r1, r0, #0
   29dd8:	beq	29a1c <__flatcc_fb_gen_c_json_printer@@Base+0xd48>
   29ddc:	mov	r0, r9
   29de0:	bl	39a04 <flatcc_builder_offset_vector_push@@Base>
   29de4:	b	29a1c <__flatcc_fb_gen_c_json_printer@@Base+0xd48>
   29de8:	ldr	fp, [sp, #4]
   29dec:	mov	r0, r9
   29df0:	bl	3b040 <flatcc_builder_end_offset_vector@@Base>
   29df4:	subs	r4, r0, #0
   29df8:	beq	29e10 <__flatcc_fb_gen_c_json_printer@@Base+0x113c>
   29dfc:	mov	r1, #1
   29e00:	mov	r0, r9
   29e04:	bl	3be3c <flatcc_builder_table_add_offset@@Base>
   29e08:	cmp	r0, #0
   29e0c:	strne	r4, [r0]
   29e10:	ldrh	r3, [fp, #8]
   29e14:	cmp	r3, #1
   29e18:	beq	2a274 <__flatcc_fb_gen_c_json_printer@@Base+0x15a0>
   29e1c:	ldrh	r4, [fp, #104]	; 0x68
   29e20:	cmp	r4, #0
   29e24:	beq	29e44 <__flatcc_fb_gen_c_json_printer@@Base+0x1170>
   29e28:	mov	r3, #4
   29e2c:	mov	r2, r3
   29e30:	mov	r1, #3
   29e34:	mov	r0, r9
   29e38:	bl	3bc1c <flatcc_builder_table_add@@Base>
   29e3c:	cmp	r0, #0
   29e40:	strne	r4, [r0]
   29e44:	ldr	r4, [pc, #-512]	; 29c4c <__flatcc_fb_gen_c_json_printer@@Base+0xf78>
   29e48:	mov	r2, #2
   29e4c:	add	r4, pc, r4
   29e50:	add	r1, r4, #92	; 0x5c
   29e54:	mov	r0, r9
   29e58:	bl	3ab28 <flatcc_builder_check_required@@Base>
   29e5c:	cmp	r0, #0
   29e60:	beq	2a474 <__flatcc_fb_gen_c_json_printer@@Base+0x17a0>
   29e64:	mov	r0, r9
   29e68:	bl	3abd0 <flatcc_builder_end_table@@Base>
   29e6c:	ldr	r3, [sp, #20]
   29e70:	ldr	r2, [sp, #32]
   29e74:	add	r3, r3, #1
   29e78:	str	r3, [sp, #20]
   29e7c:	cmp	r2, r3
   29e80:	ldr	r3, [sp, #24]
   29e84:	add	r3, r3, #8
   29e88:	str	r3, [sp, #24]
   29e8c:	ldr	r3, [sp, #28]
   29e90:	str	r0, [r3, #4]!
   29e94:	str	r3, [sp, #28]
   29e98:	bne	29914 <__flatcc_fb_gen_c_json_printer@@Base+0xc40>
   29e9c:	mov	fp, r9
   29ea0:	ldr	r2, [sp, #32]
   29ea4:	ldr	r1, [sp, #16]
   29ea8:	mov	r0, fp
   29eac:	bl	3b120 <flatcc_builder_create_offset_vector@@Base>
   29eb0:	subs	r4, r0, #0
   29eb4:	beq	29ecc <__flatcc_fb_gen_c_json_printer@@Base+0x11f8>
   29eb8:	mov	r1, #0
   29ebc:	mov	r0, fp
   29ec0:	bl	3be3c <flatcc_builder_table_add_offset@@Base>
   29ec4:	cmp	r0, #0
   29ec8:	strne	r4, [r0]
   29ecc:	ldr	r3, [sp, #76]	; 0x4c
   29ed0:	mov	r0, fp
   29ed4:	mov	r4, r3
   29ed8:	str	r3, [sp, #24]
   29edc:	ldr	r3, [sp, #88]	; 0x58
   29ee0:	str	r3, [sp, #20]
   29ee4:	bl	39ff4 <flatcc_builder_start_offset_vector@@Base>
   29ee8:	cmp	r4, #0
   29eec:	ble	2a194 <__flatcc_fb_gen_c_json_printer@@Base+0x14c0>
   29ef0:	ldr	r3, [pc, #-680]	; 29c50 <__flatcc_fb_gen_c_json_printer@@Base+0xf7c>
   29ef4:	ldr	r2, [pc, #-680]	; 29c54 <__flatcc_fb_gen_c_json_printer@@Base+0xf80>
   29ef8:	add	r3, pc, r3
   29efc:	add	r2, pc, r2
   29f00:	str	r3, [sp, #32]
   29f04:	add	sl, r3, #124	; 0x7c
   29f08:	add	r3, r2, #152	; 0x98
   29f0c:	str	r3, [sp, #28]
   29f10:	ldr	r3, [sp, #20]
   29f14:	mov	r1, #0
   29f18:	str	r2, [sp, #36]	; 0x24
   29f1c:	str	r1, [sp]
   29f20:	str	r3, [sp, #4]
   29f24:	ldr	r2, [sp]
   29f28:	ldr	r3, [sp, #20]
   29f2c:	mov	r1, #4
   29f30:	mov	r0, fp
   29f34:	ldr	r3, [r3, r2, lsl #3]
   29f38:	str	r3, [sp, #8]
   29f3c:	ldrh	r8, [r3, #8]
   29f40:	bl	3a1dc <flatcc_builder_start_table@@Base>
   29f44:	ldr	r3, [sp, #4]
   29f48:	mov	r0, fp
   29f4c:	ldr	r1, [r3, #4]
   29f50:	bl	3ba80 <flatcc_builder_create_string_str@@Base>
   29f54:	subs	r4, r0, #0
   29f58:	beq	29f70 <__flatcc_fb_gen_c_json_printer@@Base+0x129c>
   29f5c:	mov	r1, #0
   29f60:	mov	r0, fp
   29f64:	bl	3be3c <flatcc_builder_table_add_offset@@Base>
   29f68:	cmp	r0, #0
   29f6c:	strne	r4, [r0]
   29f70:	mov	r0, fp
   29f74:	bl	39ff4 <flatcc_builder_start_offset_vector@@Base>
   29f78:	ldr	r3, [sp, #8]
   29f7c:	ldr	r4, [r3, #20]
   29f80:	cmp	r4, #0
   29f84:	movne	r9, #3
   29f88:	movne	r5, #1
   29f8c:	bne	29fd0 <__flatcc_fb_gen_c_json_printer@@Base+0x12fc>
   29f90:	b	2a0d8 <__flatcc_fb_gen_c_json_printer@@Base+0x1404>
   29f94:	mov	r2, r5
   29f98:	mov	r1, sl
   29f9c:	mov	r0, fp
   29fa0:	bl	3ab28 <flatcc_builder_check_required@@Base>
   29fa4:	cmp	r0, #0
   29fa8:	beq	2a3f0 <__flatcc_fb_gen_c_json_printer@@Base+0x171c>
   29fac:	mov	r0, fp
   29fb0:	bl	3abd0 <flatcc_builder_end_table@@Base>
   29fb4:	subs	r1, r0, #0
   29fb8:	beq	29fc4 <__flatcc_fb_gen_c_json_printer@@Base+0x12f0>
   29fbc:	mov	r0, fp
   29fc0:	bl	39a04 <flatcc_builder_offset_vector_push@@Base>
   29fc4:	ldr	r4, [r4]
   29fc8:	cmp	r4, #0
   29fcc:	beq	2a0d8 <__flatcc_fb_gen_c_json_printer@@Base+0x1404>
   29fd0:	cmp	r8, #4
   29fd4:	mov	r1, r9
   29fd8:	mov	r0, fp
   29fdc:	beq	2a040 <__flatcc_fb_gen_c_json_printer@@Base+0x136c>
   29fe0:	bl	3a1dc <flatcc_builder_start_table@@Base>
   29fe4:	ldr	r3, [r4, #4]
   29fe8:	mov	r0, fp
   29fec:	ldm	r3, {r1, r2}
   29ff0:	bl	3b97c <flatcc_builder_create_string@@Base>
   29ff4:	subs	r6, r0, #0
   29ff8:	beq	2a014 <__flatcc_fb_gen_c_json_printer@@Base+0x1340>
   29ffc:	mov	r1, #0
   2a000:	mov	r0, fp
   2a004:	bl	3be3c <flatcc_builder_table_add_offset@@Base>
   2a008:	cmp	r0, #0
   2a00c:	beq	2a014 <__flatcc_fb_gen_c_json_printer@@Base+0x1340>
   2a010:	str	r6, [r0]
   2a014:	ldrd	r6, [r4, #48]	; 0x30
   2a018:	orrs	r3, r6, r7
   2a01c:	beq	29f94 <__flatcc_fb_gen_c_json_printer@@Base+0x12c0>
   2a020:	mov	r3, #8
   2a024:	mov	r2, r3
   2a028:	mov	r1, r5
   2a02c:	mov	r0, fp
   2a030:	bl	3bc1c <flatcc_builder_table_add@@Base>
   2a034:	cmp	r0, #0
   2a038:	strdne	r6, [r0]
   2a03c:	b	29f94 <__flatcc_fb_gen_c_json_printer@@Base+0x12c0>
   2a040:	bl	3a1dc <flatcc_builder_start_table@@Base>
   2a044:	ldr	r3, [r4, #4]
   2a048:	mov	r0, fp
   2a04c:	ldm	r3, {r1, r2}
   2a050:	bl	3b97c <flatcc_builder_create_string@@Base>
   2a054:	subs	r6, r0, #0
   2a058:	beq	2a070 <__flatcc_fb_gen_c_json_printer@@Base+0x139c>
   2a05c:	mov	r1, #0
   2a060:	mov	r0, fp
   2a064:	bl	3be3c <flatcc_builder_table_add_offset@@Base>
   2a068:	cmp	r0, #0
   2a06c:	strne	r6, [r0]
   2a070:	ldr	r3, [sp, #16]
   2a074:	cmp	r3, #0
   2a078:	beq	2a014 <__flatcc_fb_gen_c_json_printer@@Base+0x1340>
   2a07c:	ldrh	r3, [r4, #24]
   2a080:	cmp	r3, #14
   2a084:	bne	2a014 <__flatcc_fb_gen_c_json_printer@@Base+0x1340>
   2a088:	ldr	r3, [r4, #16]
   2a08c:	ldr	r2, [sp, #16]
   2a090:	ldr	r3, [r3, #124]	; 0x7c
   2a094:	ldr	r6, [r2, r3, lsl #2]
   2a098:	cmp	r6, #0
   2a09c:	beq	2a014 <__flatcc_fb_gen_c_json_printer@@Base+0x1340>
   2a0a0:	mov	r1, #2
   2a0a4:	mov	r0, fp
   2a0a8:	bl	3be3c <flatcc_builder_table_add_offset@@Base>
   2a0ac:	cmp	r0, #0
   2a0b0:	bne	2a010 <__flatcc_fb_gen_c_json_printer@@Base+0x133c>
   2a0b4:	b	2a014 <__flatcc_fb_gen_c_json_printer@@Base+0x1340>
   2a0b8:	mov	r3, #2
   2a0bc:	mov	r2, r3
   2a0c0:	mov	r1, #3
   2a0c4:	mov	r0, r9
   2a0c8:	bl	3bc1c <flatcc_builder_table_add@@Base>
   2a0cc:	cmp	r0, #0
   2a0d0:	strhne	r5, [r0]
   2a0d4:	b	2998c <__flatcc_fb_gen_c_json_printer@@Base+0xcb8>
   2a0d8:	mov	r0, fp
   2a0dc:	bl	3b040 <flatcc_builder_end_offset_vector@@Base>
   2a0e0:	subs	r4, r0, #0
   2a0e4:	beq	2a0fc <__flatcc_fb_gen_c_json_printer@@Base+0x1428>
   2a0e8:	mov	r1, #1
   2a0ec:	mov	r0, fp
   2a0f0:	bl	3be3c <flatcc_builder_table_add_offset@@Base>
   2a0f4:	cmp	r0, #0
   2a0f8:	strne	r4, [r0]
   2a0fc:	cmp	r8, #4
   2a100:	bne	2a124 <__flatcc_fb_gen_c_json_printer@@Base+0x1450>
   2a104:	mov	r3, #1
   2a108:	mov	r2, r3
   2a10c:	mov	r1, #2
   2a110:	mov	r0, fp
   2a114:	bl	3bc1c <flatcc_builder_table_add@@Base>
   2a118:	cmp	r0, #0
   2a11c:	movne	r3, #1
   2a120:	strbne	r3, [r0]
   2a124:	ldr	r3, [sp, #8]
   2a128:	mov	r0, fp
   2a12c:	ldrh	r2, [r3, #48]	; 0x30
   2a130:	ldr	r1, [r3, #40]	; 0x28
   2a134:	bl	294bc <__flatcc_fb_gen_c_json_printer@@Base+0x7e8>
   2a138:	subs	r4, r0, #0
   2a13c:	bne	2a25c <__flatcc_fb_gen_c_json_printer@@Base+0x1588>
   2a140:	mov	r2, #3
   2a144:	ldr	r1, [sp, #28]
   2a148:	mov	r0, fp
   2a14c:	bl	3ab28 <flatcc_builder_check_required@@Base>
   2a150:	cmp	r0, #0
   2a154:	beq	2a454 <__flatcc_fb_gen_c_json_printer@@Base+0x1780>
   2a158:	mov	r0, fp
   2a15c:	bl	3abd0 <flatcc_builder_end_table@@Base>
   2a160:	subs	r1, r0, #0
   2a164:	beq	2a170 <__flatcc_fb_gen_c_json_printer@@Base+0x149c>
   2a168:	mov	r0, fp
   2a16c:	bl	39a04 <flatcc_builder_offset_vector_push@@Base>
   2a170:	ldr	r3, [sp]
   2a174:	ldr	r2, [sp, #24]
   2a178:	add	r3, r3, #1
   2a17c:	str	r3, [sp]
   2a180:	cmp	r2, r3
   2a184:	ldr	r3, [sp, #4]
   2a188:	add	r3, r3, #8
   2a18c:	str	r3, [sp, #4]
   2a190:	bne	29f24 <__flatcc_fb_gen_c_json_printer@@Base+0x1250>
   2a194:	mov	r0, fp
   2a198:	bl	3b040 <flatcc_builder_end_offset_vector@@Base>
   2a19c:	subs	r4, r0, #0
   2a1a0:	beq	2a1b8 <__flatcc_fb_gen_c_json_printer@@Base+0x14e4>
   2a1a4:	mov	r1, #1
   2a1a8:	mov	r0, fp
   2a1ac:	bl	3be3c <flatcc_builder_table_add_offset@@Base>
   2a1b0:	cmp	r0, #0
   2a1b4:	strne	r4, [r0]
   2a1b8:	ldr	r3, [sp, #48]	; 0x30
   2a1bc:	ldr	r3, [r3, #52]	; 0x34
   2a1c0:	cmp	r3, #0
   2a1c4:	beq	2a1fc <__flatcc_fb_gen_c_json_printer@@Base+0x1528>
   2a1c8:	ldrh	r2, [r3, #8]
   2a1cc:	cmp	r2, #0
   2a1d0:	bne	2a1fc <__flatcc_fb_gen_c_json_printer@@Base+0x1528>
   2a1d4:	ldr	r3, [r3, #124]	; 0x7c
   2a1d8:	ldr	r2, [sp, #16]
   2a1dc:	ldr	r4, [r2, r3, lsl #2]
   2a1e0:	cmp	r4, #0
   2a1e4:	beq	2a1fc <__flatcc_fb_gen_c_json_printer@@Base+0x1528>
   2a1e8:	mov	r1, #4
   2a1ec:	mov	r0, fp
   2a1f0:	bl	3be3c <flatcc_builder_table_add_offset@@Base>
   2a1f4:	cmp	r0, #0
   2a1f8:	strne	r4, [r0]
   2a1fc:	ldr	r4, [pc, #-1452]	; 29c58 <__flatcc_fb_gen_c_json_printer@@Base+0xf84>
   2a200:	mov	r2, #2
   2a204:	add	r4, pc, r4
   2a208:	add	r1, r4, #180	; 0xb4
   2a20c:	mov	r0, fp
   2a210:	bl	3ab28 <flatcc_builder_check_required@@Base>
   2a214:	cmp	r0, #0
   2a218:	beq	2a410 <__flatcc_fb_gen_c_json_printer@@Base+0x173c>
   2a21c:	mov	r0, fp
   2a220:	bl	3abd0 <flatcc_builder_end_table@@Base>
   2a224:	mov	r1, r0
   2a228:	mov	r0, fp
   2a22c:	bl	3945c <flatcc_builder_end_buffer@@Base>
   2a230:	ldr	r0, [sp, #52]	; 0x34
   2a234:	bl	29208 <__flatcc_fb_gen_c_json_printer@@Base+0x534>
   2a238:	ldr	r3, [sp, #16]
   2a23c:	cmp	r3, #0
   2a240:	beq	2a24c <__flatcc_fb_gen_c_json_printer@@Base+0x1578>
   2a244:	mov	r0, r3
   2a248:	bl	13fcc <free@plt>
   2a24c:	mov	r0, #0
   2a250:	add	sp, sp, #116	; 0x74
   2a254:	vpop	{d8-d9}
   2a258:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a25c:	mov	r1, #3
   2a260:	mov	r0, fp
   2a264:	bl	3be3c <flatcc_builder_table_add_offset@@Base>
   2a268:	cmp	r0, #0
   2a26c:	strne	r4, [r0]
   2a270:	b	2a140 <__flatcc_fb_gen_c_json_printer@@Base+0x146c>
   2a274:	ldr	r4, [fp, #112]	; 0x70
   2a278:	cmp	r4, #0
   2a27c:	bne	2a310 <__flatcc_fb_gen_c_json_printer@@Base+0x163c>
   2a280:	mov	r3, #1
   2a284:	mov	r2, r3
   2a288:	mov	r1, #2
   2a28c:	mov	r0, r9
   2a290:	bl	3bc1c <flatcc_builder_table_add@@Base>
   2a294:	cmp	r0, #0
   2a298:	movne	r3, #1
   2a29c:	strbne	r3, [r0]
   2a2a0:	b	29e1c <__flatcc_fb_gen_c_json_printer@@Base+0x1148>
   2a2a4:	mov	r3, #1
   2a2a8:	mov	r2, r3
   2a2ac:	mov	r1, #6
   2a2b0:	mov	r0, r9
   2a2b4:	bl	3bc1c <flatcc_builder_table_add@@Base>
   2a2b8:	cmp	r0, #0
   2a2bc:	ldrbne	r3, [sp]
   2a2c0:	strbne	r3, [r0]
   2a2c4:	b	29db4 <__flatcc_fb_gen_c_json_printer@@Base+0x10e0>
   2a2c8:	mov	r3, #2
   2a2cc:	mov	r2, r3
   2a2d0:	mov	r1, r3
   2a2d4:	mov	r0, r9
   2a2d8:	bl	3bc1c <flatcc_builder_table_add@@Base>
   2a2dc:	cmp	r0, #0
   2a2e0:	strhne	r6, [r0]
   2a2e4:	b	29dac <__flatcc_fb_gen_c_json_printer@@Base+0x10d8>
   2a2e8:	mov	r3, #2
   2a2ec:	mov	r2, r3
   2a2f0:	mov	r1, #3
   2a2f4:	mov	r0, r9
   2a2f8:	bl	3bc1c <flatcc_builder_table_add@@Base>
   2a2fc:	ldrh	r6, [r4, #96]	; 0x60
   2a300:	cmp	r0, #0
   2a304:	ldrhne	r3, [sp, #8]
   2a308:	strhne	r3, [r0]
   2a30c:	b	29d9c <__flatcc_fb_gen_c_json_printer@@Base+0x10c8>
   2a310:	mov	r3, #4
   2a314:	mov	r2, r3
   2a318:	mov	r1, r3
   2a31c:	mov	r0, r9
   2a320:	bl	3bc1c <flatcc_builder_table_add@@Base>
   2a324:	cmp	r0, #0
   2a328:	strne	r4, [r0]
   2a32c:	b	2a280 <__flatcc_fb_gen_c_json_printer@@Base+0x15ac>
   2a330:	ldr	r1, [pc, #-1756]	; 29c5c <__flatcc_fb_gen_c_json_printer@@Base+0xf88>
   2a334:	mov	r2, r3
   2a338:	add	r1, pc, r1
   2a33c:	mov	r0, fp
   2a340:	bl	393a4 <flatcc_builder_start_buffer@@Base>
   2a344:	cmp	r0, #0
   2a348:	beq	2987c <__flatcc_fb_gen_c_json_printer@@Base+0xba8>
   2a34c:	b	29888 <__flatcc_fb_gen_c_json_printer@@Base+0xbb4>
   2a350:	str	r4, [sp, #16]
   2a354:	b	29850 <__flatcc_fb_gen_c_json_printer@@Base+0xb7c>
   2a358:	ldr	r0, [sp, #52]	; 0x34
   2a35c:	bl	29208 <__flatcc_fb_gen_c_json_printer@@Base+0x534>
   2a360:	mvn	r0, #0
   2a364:	b	2a250 <__flatcc_fb_gen_c_json_printer@@Base+0x157c>
   2a368:	ldr	r3, [sp, #48]	; 0x30
   2a36c:	mov	r0, fp
   2a370:	ldr	r2, [r3, #28]
   2a374:	ldr	r1, [r3, #24]
   2a378:	bl	3b97c <flatcc_builder_create_string@@Base>
   2a37c:	subs	r4, r0, #0
   2a380:	beq	298a8 <__flatcc_fb_gen_c_json_printer@@Base+0xbd4>
   2a384:	mov	r1, #3
   2a388:	mov	r0, fp
   2a38c:	bl	3be3c <flatcc_builder_table_add_offset@@Base>
   2a390:	cmp	r0, #0
   2a394:	strne	r4, [r0]
   2a398:	b	298a8 <__flatcc_fb_gen_c_json_printer@@Base+0xbd4>
   2a39c:	ldr	r2, [r3, #12]
   2a3a0:	ldr	r1, [r3, #8]
   2a3a4:	mov	r0, fp
   2a3a8:	bl	3b97c <flatcc_builder_create_string@@Base>
   2a3ac:	subs	r5, r0, #0
   2a3b0:	beq	29898 <__flatcc_fb_gen_c_json_printer@@Base+0xbc4>
   2a3b4:	mov	r1, r4
   2a3b8:	mov	r0, fp
   2a3bc:	bl	3be3c <flatcc_builder_table_add_offset@@Base>
   2a3c0:	cmp	r0, #0
   2a3c4:	strne	r5, [r0]
   2a3c8:	b	29898 <__flatcc_fb_gen_c_json_printer@@Base+0xbc4>
   2a3cc:	ldr	r3, [pc, #-1908]	; 29c60 <__flatcc_fb_gen_c_json_printer@@Base+0xf8c>
   2a3d0:	ldr	r1, [pc, #-1908]	; 29c64 <__flatcc_fb_gen_c_json_printer@@Base+0xf90>
   2a3d4:	ldr	r0, [pc, #-1908]	; 29c68 <__flatcc_fb_gen_c_json_printer@@Base+0xf94>
   2a3d8:	add	r3, pc, r3
   2a3dc:	mov	r2, #29
   2a3e0:	add	r3, r3, #68	; 0x44
   2a3e4:	add	r1, pc, r1
   2a3e8:	add	r0, pc, r0
   2a3ec:	bl	14140 <__assert_fail@plt>
   2a3f0:	ldr	r3, [sp, #32]
   2a3f4:	ldr	r1, [pc, #-1936]	; 29c6c <__flatcc_fb_gen_c_json_printer@@Base+0xf98>
   2a3f8:	ldr	r0, [pc, #-1936]	; 29c70 <__flatcc_fb_gen_c_json_printer@@Base+0xf9c>
   2a3fc:	add	r3, r3, #128	; 0x80
   2a400:	mov	r2, #25
   2a404:	add	r1, pc, r1
   2a408:	add	r0, pc, r0
   2a40c:	bl	14140 <__assert_fail@plt>
   2a410:	ldr	r1, [pc, #-1956]	; 29c74 <__flatcc_fb_gen_c_json_printer@@Base+0xfa0>
   2a414:	ldr	r0, [pc, #-1956]	; 29c78 <__flatcc_fb_gen_c_json_printer@@Base+0xfa4>
   2a418:	add	r3, r4, #188	; 0xbc
   2a41c:	mov	r2, #33	; 0x21
   2a420:	add	r1, pc, r1
   2a424:	add	r0, pc, r0
   2a428:	bl	14140 <__assert_fail@plt>
   2a42c:	ldr	r3, [sp, #60]	; 0x3c
   2a430:	ldr	r1, [pc, #-1980]	; 29c7c <__flatcc_fb_gen_c_json_printer@@Base+0xfa8>
   2a434:	ldr	r0, [pc, #-1980]	; 29c80 <__flatcc_fb_gen_c_json_printer@@Base+0xfac>
   2a438:	add	r3, r3, #36	; 0x24
   2a43c:	mov	r2, #23
   2a440:	add	r1, pc, r1
   2a444:	add	r0, pc, r0
   2a448:	bl	14140 <__assert_fail@plt>
   2a44c:	vmov.f64	d8, d9
   2a450:	b	29b64 <__flatcc_fb_gen_c_json_printer@@Base+0xe90>
   2a454:	ldr	r3, [sp, #36]	; 0x24
   2a458:	ldr	r1, [pc, #-2012]	; 29c84 <__flatcc_fb_gen_c_json_printer@@Base+0xfb0>
   2a45c:	ldr	r0, [pc, #-2012]	; 29c88 <__flatcc_fb_gen_c_json_printer@@Base+0xfb4>
   2a460:	add	r3, r3, #160	; 0xa0
   2a464:	mov	r2, #27
   2a468:	add	r1, pc, r1
   2a46c:	add	r0, pc, r0
   2a470:	bl	14140 <__assert_fail@plt>
   2a474:	ldr	r1, [pc, #-2032]	; 29c8c <__flatcc_fb_gen_c_json_printer@@Base+0xfb8>
   2a478:	ldr	r0, [pc, #-2032]	; 29c90 <__flatcc_fb_gen_c_json_printer@@Base+0xfbc>
   2a47c:	add	r3, r4, #100	; 0x64
   2a480:	mov	r2, #31
   2a484:	add	r1, pc, r1
   2a488:	add	r0, pc, r0
   2a48c:	bl	14140 <__assert_fail@plt>
   2a490:	cmp	r0, #0
   2a494:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a498:	sub	sp, sp, #36	; 0x24
   2a49c:	beq	2a4b0 <__flatcc_fb_gen_c_json_printer@@Base+0x17dc>
   2a4a0:	ldr	r3, [pc, #1756]	; 2ab84 <__flatcc_fb_gen_c_json_printer@@Base+0x1eb0>
   2a4a4:	ldr	r2, [r0, #4]
   2a4a8:	cmp	r2, r3
   2a4ac:	beq	2a4d4 <__flatcc_fb_gen_c_json_printer@@Base+0x1800>
   2a4b0:	ldr	r3, [pc, #1744]	; 2ab88 <__flatcc_fb_gen_c_json_printer@@Base+0x1eb4>
   2a4b4:	ldr	r1, [pc, #1744]	; 2ab8c <__flatcc_fb_gen_c_json_printer@@Base+0x1eb8>
   2a4b8:	ldr	r0, [pc, #1744]	; 2ab90 <__flatcc_fb_gen_c_json_printer@@Base+0x1ebc>
   2a4bc:	add	r3, pc, r3
   2a4c0:	mov	r2, #237	; 0xed
   2a4c4:	add	r3, r3, #212	; 0xd4
   2a4c8:	add	r1, pc, r1
   2a4cc:	add	r0, pc, r0
   2a4d0:	bl	14140 <__assert_fail@plt>
   2a4d4:	ldr	r3, [r0]
   2a4d8:	adds	r2, r0, r3
   2a4dc:	beq	2a4b0 <__flatcc_fb_gen_c_json_printer@@Base+0x17dc>
   2a4e0:	ldr	r3, [r0, r3]
   2a4e4:	sub	r3, r2, r3
   2a4e8:	ldrh	r1, [r3]
   2a4ec:	cmp	r1, #5
   2a4f0:	bhi	2a518 <__flatcc_fb_gen_c_json_printer@@Base+0x1844>
   2a4f4:	ldr	r3, [pc, #1688]	; 2ab94 <__flatcc_fb_gen_c_json_printer@@Base+0x1ec0>
   2a4f8:	ldr	r1, [pc, #1688]	; 2ab98 <__flatcc_fb_gen_c_json_printer@@Base+0x1ec4>
   2a4fc:	ldr	r0, [pc, #1688]	; 2ab9c <__flatcc_fb_gen_c_json_printer@@Base+0x1ec8>
   2a500:	add	r3, pc, r3
   2a504:	mov	r2, #237	; 0xed
   2a508:	add	r3, r3, #212	; 0xd4
   2a50c:	add	r1, pc, r1
   2a510:	add	r0, pc, r0
   2a514:	bl	14140 <__assert_fail@plt>
   2a518:	ldrh	r3, [r3, #4]
   2a51c:	cmp	r3, #0
   2a520:	beq	2a4f4 <__flatcc_fb_gen_c_json_printer@@Base+0x1820>
   2a524:	ldr	r1, [r2, r3]
   2a528:	add	r2, r2, r3
   2a52c:	add	r1, r1, #4
   2a530:	adds	r3, r2, r1
   2a534:	mov	r0, r3
   2a538:	str	r3, [sp, #20]
   2a53c:	beq	2a8d4 <__flatcc_fb_gen_c_json_printer@@Base+0x1c00>
   2a540:	ldr	r3, [r3, #-4]
   2a544:	cmp	r3, #0
   2a548:	beq	2a8d4 <__flatcc_fb_gen_c_json_printer@@Base+0x1c00>
   2a54c:	ldr	r2, [r2, r1]
   2a550:	adds	r1, r0, r2
   2a554:	beq	2ab60 <__flatcc_fb_gen_c_json_printer@@Base+0x1e8c>
   2a558:	ldr	r0, [sp, #20]
   2a55c:	ldr	r2, [r0, r2]
   2a560:	sub	r2, r1, r2
   2a564:	ldrh	r0, [r2]
   2a568:	cmp	r0, #7
   2a56c:	bls	2a8b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1bdc>
   2a570:	ldrh	r2, [r2, #6]
   2a574:	cmp	r2, #0
   2a578:	beq	2a8b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1bdc>
   2a57c:	mov	r0, #0
   2a580:	str	r0, [sp, #16]
   2a584:	ldr	r0, [sp, #20]
   2a588:	add	r0, r0, #4
   2a58c:	str	r0, [sp, #28]
   2a590:	ldr	r0, [r1, r2]
   2a594:	add	r6, r1, r2
   2a598:	add	r2, r0, #4
   2a59c:	adds	r6, r6, r2
   2a5a0:	beq	2a860 <__flatcc_fb_gen_c_json_printer@@Base+0x1b8c>
   2a5a4:	ldr	r2, [r6, #-4]
   2a5a8:	cmp	r2, #0
   2a5ac:	str	r2, [sp, #24]
   2a5b0:	beq	2a860 <__flatcc_fb_gen_c_json_printer@@Base+0x1b8c>
   2a5b4:	lsr	r3, r2, #1
   2a5b8:	str	r3, [sp, #12]
   2a5bc:	sub	r2, r2, #1
   2a5c0:	lsl	r3, r3, #1
   2a5c4:	str	r2, [sp]
   2a5c8:	str	r3, [sp, #8]
   2a5cc:	b	2a6cc <__flatcc_fb_gen_c_json_printer@@Base+0x19f8>
   2a5d0:	ldr	r8, [r6, #-4]
   2a5d4:	mov	r5, r9
   2a5d8:	lsl	fp, r4, #2
   2a5dc:	cmp	r8, r4
   2a5e0:	add	r2, r6, fp
   2a5e4:	bls	2ab3c <__flatcc_fb_gen_c_json_printer@@Base+0x1e68>
   2a5e8:	ldr	r7, [r6, r4, lsl #2]
   2a5ec:	adds	r3, r2, r7
   2a5f0:	beq	2ab38 <__flatcc_fb_gen_c_json_printer@@Base+0x1e64>
   2a5f4:	ldr	r2, [r2, r7]
   2a5f8:	sub	r2, r3, r2
   2a5fc:	ldrh	r1, [r2]
   2a600:	cmp	r1, #5
   2a604:	bls	2a7c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1af4>
   2a608:	ldrh	r0, [r2, #4]
   2a60c:	cmp	r0, #0
   2a610:	beq	2a7c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1af4>
   2a614:	ldr	r2, [r3, r0]
   2a618:	cmp	r5, r8
   2a61c:	add	r2, r2, #4
   2a620:	add	r0, r3, r0
   2a624:	lsl	r3, r5, #2
   2a628:	add	r0, r0, r2
   2a62c:	add	r2, r6, r3
   2a630:	bcs	2ab3c <__flatcc_fb_gen_c_json_printer@@Base+0x1e68>
   2a634:	ldr	r8, [r6, r5, lsl #2]
   2a638:	adds	r1, r2, r8
   2a63c:	beq	2ab38 <__flatcc_fb_gen_c_json_printer@@Base+0x1e64>
   2a640:	ldr	r2, [r2, r8]
   2a644:	sub	r2, r1, r2
   2a648:	ldrh	ip, [r2]
   2a64c:	cmp	ip, #5
   2a650:	bls	2a7c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1af4>
   2a654:	ldrh	ip, [r2, #4]
   2a658:	cmp	ip, #0
   2a65c:	beq	2a7c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1af4>
   2a660:	ldr	r2, [r1, ip]
   2a664:	add	r1, r1, ip
   2a668:	add	r2, r2, #4
   2a66c:	adds	r1, r1, r2
   2a670:	moveq	sl, #0
   2a674:	ldrne	sl, [r1, #-4]
   2a678:	cmp	r0, #0
   2a67c:	beq	2a82c <__flatcc_fb_gen_c_json_printer@@Base+0x1b58>
   2a680:	ldr	r9, [r0, #-4]
   2a684:	str	r3, [sp, #4]
   2a688:	cmp	sl, r9
   2a68c:	movcc	r2, sl
   2a690:	movcs	r2, r9
   2a694:	bl	14128 <strncmp@plt>
   2a698:	ldr	r3, [sp, #4]
   2a69c:	cmp	r0, #0
   2a6a0:	bne	2a7e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1b14>
   2a6a4:	cmp	sl, r9
   2a6a8:	bhi	2a7ec <__flatcc_fb_gen_c_json_printer@@Base+0x1b18>
   2a6ac:	ldr	r3, [sp, #12]
   2a6b0:	sub	r3, r3, #1
   2a6b4:	str	r3, [sp, #12]
   2a6b8:	cmn	r3, #1
   2a6bc:	ldr	r3, [sp, #8]
   2a6c0:	sub	r3, r3, #2
   2a6c4:	str	r3, [sp, #8]
   2a6c8:	beq	2a8dc <__flatcc_fb_gen_c_json_printer@@Base+0x1c08>
   2a6cc:	ldr	r3, [sp]
   2a6d0:	ldr	r2, [sp, #8]
   2a6d4:	cmp	r3, r2
   2a6d8:	bcc	2a6ac <__flatcc_fb_gen_c_json_printer@@Base+0x19d8>
   2a6dc:	ldr	r4, [sp, #12]
   2a6e0:	ldr	r9, [sp, #8]
   2a6e4:	ldr	r3, [sp]
   2a6e8:	cmp	r3, r9
   2a6ec:	bls	2a5d0 <__flatcc_fb_gen_c_json_printer@@Base+0x18fc>
   2a6f0:	ldr	r8, [r6, #-4]
   2a6f4:	lsl	r3, r9, #2
   2a6f8:	cmp	r8, r9
   2a6fc:	add	r1, r6, r3
   2a700:	bls	2ab3c <__flatcc_fb_gen_c_json_printer@@Base+0x1e68>
   2a704:	ldr	r0, [r6, r9, lsl #2]
   2a708:	adds	r2, r1, r0
   2a70c:	beq	2ab38 <__flatcc_fb_gen_c_json_printer@@Base+0x1e64>
   2a710:	ldr	r1, [r1, r0]
   2a714:	sub	r1, r2, r1
   2a718:	ldrh	r0, [r1]
   2a71c:	cmp	r0, #5
   2a720:	bls	2a7c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1af4>
   2a724:	ldrh	r1, [r1, #4]
   2a728:	cmp	r1, #0
   2a72c:	beq	2a7c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1af4>
   2a730:	ldr	r0, [r2, r1]
   2a734:	add	r5, r9, #1
   2a738:	add	r2, r2, r1
   2a73c:	add	r3, r3, #4
   2a740:	add	r0, r0, #4
   2a744:	cmp	r8, r5
   2a748:	add	r0, r2, r0
   2a74c:	add	r2, r6, r3
   2a750:	bls	2ab3c <__flatcc_fb_gen_c_json_printer@@Base+0x1e68>
   2a754:	ldr	r3, [r6, r3]
   2a758:	adds	r1, r2, r3
   2a75c:	beq	2ab38 <__flatcc_fb_gen_c_json_printer@@Base+0x1e64>
   2a760:	ldr	r3, [r2, r3]
   2a764:	sub	r3, r1, r3
   2a768:	ldrh	r2, [r3]
   2a76c:	cmp	r2, #5
   2a770:	bls	2a7c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1af4>
   2a774:	ldrh	r2, [r3, #4]
   2a778:	cmp	r2, #0
   2a77c:	beq	2a7c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1af4>
   2a780:	ldr	r3, [r1, r2]
   2a784:	add	r1, r1, r2
   2a788:	add	r3, r3, #4
   2a78c:	adds	r1, r1, r3
   2a790:	beq	2a7c0 <__flatcc_fb_gen_c_json_printer@@Base+0x1aec>
   2a794:	cmp	r0, #0
   2a798:	ldr	sl, [r1, #-4]
   2a79c:	beq	2a81c <__flatcc_fb_gen_c_json_printer@@Base+0x1b48>
   2a7a0:	ldr	r7, [r0, #-4]
   2a7a4:	cmp	sl, r7
   2a7a8:	movcc	r2, sl
   2a7ac:	movcs	r2, r7
   2a7b0:	bl	14128 <strncmp@plt>
   2a7b4:	cmp	r0, #0
   2a7b8:	beq	2a820 <__flatcc_fb_gen_c_json_printer@@Base+0x1b4c>
   2a7bc:	blt	2a5d8 <__flatcc_fb_gen_c_json_printer@@Base+0x1904>
   2a7c0:	mov	r5, r9
   2a7c4:	b	2a5d8 <__flatcc_fb_gen_c_json_printer@@Base+0x1904>
   2a7c8:	ldr	r3, [pc, #976]	; 2aba0 <__flatcc_fb_gen_c_json_printer@@Base+0x1ecc>
   2a7cc:	ldr	r1, [pc, #976]	; 2aba4 <__flatcc_fb_gen_c_json_printer@@Base+0x1ed0>
   2a7d0:	ldr	r0, [pc, #976]	; 2aba8 <__flatcc_fb_gen_c_json_printer@@Base+0x1ed4>
   2a7d4:	add	r3, pc, r3
   2a7d8:	mov	r2, #195	; 0xc3
   2a7dc:	add	r1, pc, r1
   2a7e0:	add	r0, pc, r0
   2a7e4:	bl	14140 <__assert_fail@plt>
   2a7e8:	bge	2a6ac <__flatcc_fb_gen_c_json_printer@@Base+0x19d8>
   2a7ec:	sub	r4, r4, r5
   2a7f0:	ldr	r2, [sp]
   2a7f4:	lsl	r4, r4, #2
   2a7f8:	lsl	r9, r5, #1
   2a7fc:	sub	r8, r8, r4
   2a800:	add	r7, r7, r4
   2a804:	cmp	r2, r9
   2a808:	str	r8, [r6, fp]
   2a80c:	mov	r4, r5
   2a810:	str	r7, [r6, r3]
   2a814:	bcs	2a6e4 <__flatcc_fb_gen_c_json_printer@@Base+0x1a10>
   2a818:	b	2a6ac <__flatcc_fb_gen_c_json_printer@@Base+0x19d8>
   2a81c:	mov	r7, #0
   2a820:	cmp	sl, r7
   2a824:	movls	r5, r9
   2a828:	b	2a5d8 <__flatcc_fb_gen_c_json_printer@@Base+0x1904>
   2a82c:	mov	r9, #0
   2a830:	b	2a6a4 <__flatcc_fb_gen_c_json_printer@@Base+0x19d0>
   2a834:	ldr	r3, [sp, #8]
   2a838:	cmp	fp, r3
   2a83c:	bhi	2aad8 <__flatcc_fb_gen_c_json_printer@@Base+0x1e04>
   2a840:	ldr	r3, [sp]
   2a844:	cmp	r3, #0
   2a848:	ldr	r3, [sp, #4]
   2a84c:	add	r3, r3, #4
   2a850:	str	r3, [sp, #4]
   2a854:	bne	2a904 <__flatcc_fb_gen_c_json_printer@@Base+0x1c30>
   2a858:	ldr	r3, [sp, #20]
   2a85c:	ldr	r3, [r3, #-4]
   2a860:	ldr	r2, [sp, #16]
   2a864:	add	r2, r2, #1
   2a868:	cmp	r2, r3
   2a86c:	str	r2, [sp, #16]
   2a870:	bcs	2a8d4 <__flatcc_fb_gen_c_json_printer@@Base+0x1c00>
   2a874:	ldr	r1, [sp, #28]
   2a878:	mov	r2, r1
   2a87c:	add	r1, r1, #4
   2a880:	ldr	r0, [r2]
   2a884:	str	r1, [sp, #28]
   2a888:	adds	r1, r2, r0
   2a88c:	beq	2ab60 <__flatcc_fb_gen_c_json_printer@@Base+0x1e8c>
   2a890:	ldr	r2, [r2, r0]
   2a894:	sub	r2, r1, r2
   2a898:	ldrh	r0, [r2]
   2a89c:	cmp	r0, #7
   2a8a0:	bls	2a8b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1bdc>
   2a8a4:	ldrh	r2, [r2, #6]
   2a8a8:	cmp	r2, #0
   2a8ac:	bne	2a590 <__flatcc_fb_gen_c_json_printer@@Base+0x18bc>
   2a8b0:	ldr	r3, [pc, #756]	; 2abac <__flatcc_fb_gen_c_json_printer@@Base+0x1ed8>
   2a8b4:	ldr	r1, [pc, #756]	; 2abb0 <__flatcc_fb_gen_c_json_printer@@Base+0x1edc>
   2a8b8:	ldr	r0, [pc, #756]	; 2abb4 <__flatcc_fb_gen_c_json_printer@@Base+0x1ee0>
   2a8bc:	add	r3, pc, r3
   2a8c0:	mov	r2, #224	; 0xe0
   2a8c4:	add	r3, r3, #240	; 0xf0
   2a8c8:	add	r1, pc, r1
   2a8cc:	add	r0, pc, r0
   2a8d0:	bl	14140 <__assert_fail@plt>
   2a8d4:	add	sp, sp, #36	; 0x24
   2a8d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a8dc:	ldr	r3, [sp]
   2a8e0:	cmp	r3, #0
   2a8e4:	beq	2a858 <__flatcc_fb_gen_c_json_printer@@Base+0x1b84>
   2a8e8:	ldr	r2, [sp, #24]
   2a8ec:	rsb	r3, r2, r2, lsl #30
   2a8f0:	add	r2, r6, r2, lsl #2
   2a8f4:	lsl	r3, r3, #2
   2a8f8:	add	r3, r3, #4
   2a8fc:	str	r2, [sp, #12]
   2a900:	str	r3, [sp, #4]
   2a904:	ldr	r1, [sp, #12]
   2a908:	ldr	r0, [sp]
   2a90c:	ldr	r3, [r6]
   2a910:	sub	r0, r0, #1
   2a914:	ldr	r2, [r1, #-4]
   2a918:	str	r0, [sp]
   2a91c:	ldr	r0, [sp, #4]
   2a920:	mov	r5, #0
   2a924:	sub	r2, r2, r0
   2a928:	str	r2, [r6]
   2a92c:	mov	r2, r1
   2a930:	add	r3, r0, r3
   2a934:	str	r3, [r2, #-4]!
   2a938:	mov	fp, r5
   2a93c:	str	r2, [sp, #12]
   2a940:	b	2ab04 <__flatcc_fb_gen_c_json_printer@@Base+0x1e30>
   2a944:	lsl	r3, fp, #2
   2a948:	cmp	r8, fp
   2a94c:	add	r0, r6, r3
   2a950:	bls	2ab3c <__flatcc_fb_gen_c_json_printer@@Base+0x1e68>
   2a954:	ldr	r1, [r6, fp, lsl #2]
   2a958:	adds	r2, r0, r1
   2a95c:	beq	2ab38 <__flatcc_fb_gen_c_json_printer@@Base+0x1e64>
   2a960:	ldr	r1, [r0, r1]
   2a964:	sub	r1, r2, r1
   2a968:	ldrh	r0, [r1]
   2a96c:	cmp	r0, #5
   2a970:	bls	2a7c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1af4>
   2a974:	ldrh	r1, [r1, #4]
   2a978:	cmp	r1, #0
   2a97c:	beq	2a7c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1af4>
   2a980:	ldr	r0, [r2, r1]
   2a984:	add	r4, fp, #1
   2a988:	add	r2, r2, r1
   2a98c:	add	r3, r3, #4
   2a990:	add	r0, r0, #4
   2a994:	cmp	r8, r4
   2a998:	add	r0, r2, r0
   2a99c:	add	r2, r6, r3
   2a9a0:	bls	2ab3c <__flatcc_fb_gen_c_json_printer@@Base+0x1e68>
   2a9a4:	ldr	r3, [r6, r3]
   2a9a8:	adds	r1, r2, r3
   2a9ac:	beq	2ab38 <__flatcc_fb_gen_c_json_printer@@Base+0x1e64>
   2a9b0:	ldr	r3, [r2, r3]
   2a9b4:	sub	r3, r1, r3
   2a9b8:	ldrh	r2, [r3]
   2a9bc:	cmp	r2, #5
   2a9c0:	bls	2a7c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1af4>
   2a9c4:	ldrh	r2, [r3, #4]
   2a9c8:	cmp	r2, #0
   2a9cc:	beq	2a7c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1af4>
   2a9d0:	ldr	r3, [r1, r2]
   2a9d4:	add	r1, r1, r2
   2a9d8:	add	r3, r3, #4
   2a9dc:	adds	r1, r1, r3
   2a9e0:	beq	2ab14 <__flatcc_fb_gen_c_json_printer@@Base+0x1e40>
   2a9e4:	cmp	r0, #0
   2a9e8:	ldr	r7, [r1, #-4]
   2a9ec:	beq	2ab1c <__flatcc_fb_gen_c_json_printer@@Base+0x1e48>
   2a9f0:	ldr	r9, [r0, #-4]
   2a9f4:	cmp	r7, r9
   2a9f8:	movcc	r2, r7
   2a9fc:	movcs	r2, r9
   2aa00:	bl	14128 <strncmp@plt>
   2aa04:	cmp	r0, #0
   2aa08:	beq	2ab20 <__flatcc_fb_gen_c_json_printer@@Base+0x1e4c>
   2aa0c:	bge	2ab14 <__flatcc_fb_gen_c_json_printer@@Base+0x1e40>
   2aa10:	cmp	r8, r5
   2aa14:	add	r9, r6, r5, lsl #2
   2aa18:	bls	2ab3c <__flatcc_fb_gen_c_json_printer@@Base+0x1e68>
   2aa1c:	ldr	r7, [r9]
   2aa20:	adds	r3, r9, r7
   2aa24:	beq	2ab38 <__flatcc_fb_gen_c_json_printer@@Base+0x1e64>
   2aa28:	ldr	r2, [r9, r7]
   2aa2c:	sub	r2, r3, r2
   2aa30:	ldrh	r1, [r2]
   2aa34:	cmp	r1, #5
   2aa38:	bls	2a7c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1af4>
   2aa3c:	ldrh	r2, [r2, #4]
   2aa40:	cmp	r2, #0
   2aa44:	beq	2a7c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1af4>
   2aa48:	ldr	r0, [r3, r2]
   2aa4c:	lsl	sl, r4, #2
   2aa50:	add	r3, r3, r2
   2aa54:	add	r0, r0, #4
   2aa58:	cmp	r8, r4
   2aa5c:	add	r0, r3, r0
   2aa60:	add	r3, r6, sl
   2aa64:	bls	2ab3c <__flatcc_fb_gen_c_json_printer@@Base+0x1e68>
   2aa68:	ldr	r8, [r6, r4, lsl #2]
   2aa6c:	adds	r1, r3, r8
   2aa70:	beq	2ab38 <__flatcc_fb_gen_c_json_printer@@Base+0x1e64>
   2aa74:	ldr	r3, [r3, r8]
   2aa78:	sub	r3, r1, r3
   2aa7c:	ldrh	r2, [r3]
   2aa80:	cmp	r2, #5
   2aa84:	bls	2a7c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1af4>
   2aa88:	ldrh	r2, [r3, #4]
   2aa8c:	cmp	r2, #0
   2aa90:	beq	2a7c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1af4>
   2aa94:	ldr	r3, [r1, r2]
   2aa98:	add	r1, r1, r2
   2aa9c:	add	r3, r3, #4
   2aaa0:	adds	r1, r1, r3
   2aaa4:	beq	2a840 <__flatcc_fb_gen_c_json_printer@@Base+0x1b6c>
   2aaa8:	cmp	r0, #0
   2aaac:	ldr	fp, [r1, #-4]
   2aab0:	beq	2ab30 <__flatcc_fb_gen_c_json_printer@@Base+0x1e5c>
   2aab4:	ldr	r3, [r0, #-4]
   2aab8:	cmp	fp, r3
   2aabc:	movcc	r2, fp
   2aac0:	movcs	r2, r3
   2aac4:	str	r3, [sp, #8]
   2aac8:	bl	14128 <strncmp@plt>
   2aacc:	cmp	r0, #0
   2aad0:	beq	2a834 <__flatcc_fb_gen_c_json_printer@@Base+0x1b60>
   2aad4:	bge	2a840 <__flatcc_fb_gen_c_json_printer@@Base+0x1b6c>
   2aad8:	sub	r5, r5, r4
   2aadc:	ldr	r3, [sp]
   2aae0:	lsl	r5, r5, #2
   2aae4:	lsl	fp, r4, #1
   2aae8:	sub	r8, r8, r5
   2aaec:	add	r7, r7, r5
   2aaf0:	cmp	r3, fp
   2aaf4:	str	r8, [r9]
   2aaf8:	mov	r5, r4
   2aafc:	str	r7, [r6, sl]
   2ab00:	bcc	2a840 <__flatcc_fb_gen_c_json_printer@@Base+0x1b6c>
   2ab04:	ldr	r3, [sp]
   2ab08:	ldr	r8, [r6, #-4]
   2ab0c:	cmp	r3, fp
   2ab10:	bhi	2a944 <__flatcc_fb_gen_c_json_printer@@Base+0x1c70>
   2ab14:	mov	r4, fp
   2ab18:	b	2aa10 <__flatcc_fb_gen_c_json_printer@@Base+0x1d3c>
   2ab1c:	mov	r9, #0
   2ab20:	cmp	r7, r9
   2ab24:	movhi	fp, r4
   2ab28:	mov	r4, fp
   2ab2c:	b	2aa10 <__flatcc_fb_gen_c_json_printer@@Base+0x1d3c>
   2ab30:	mov	r3, #0
   2ab34:	b	2a838 <__flatcc_fb_gen_c_json_printer@@Base+0x1b64>
   2ab38:	bl	14190 <__assert_fail@plt+0x50>
   2ab3c:	ldr	r3, [pc, #116]	; 2abb8 <__flatcc_fb_gen_c_json_printer@@Base+0x1ee4>
   2ab40:	ldr	r1, [pc, #116]	; 2abbc <__flatcc_fb_gen_c_json_printer@@Base+0x1ee8>
   2ab44:	ldr	r0, [pc, #116]	; 2abc0 <__flatcc_fb_gen_c_json_printer@@Base+0x1eec>
   2ab48:	add	r3, pc, r3
   2ab4c:	mov	r2, #192	; 0xc0
   2ab50:	add	r3, r3, #268	; 0x10c
   2ab54:	add	r1, pc, r1
   2ab58:	add	r0, pc, r0
   2ab5c:	bl	14140 <__assert_fail@plt>
   2ab60:	ldr	r3, [pc, #92]	; 2abc4 <__flatcc_fb_gen_c_json_printer@@Base+0x1ef0>
   2ab64:	ldr	r1, [pc, #92]	; 2abc8 <__flatcc_fb_gen_c_json_printer@@Base+0x1ef4>
   2ab68:	ldr	r0, [pc, #92]	; 2abcc <__flatcc_fb_gen_c_json_printer@@Base+0x1ef8>
   2ab6c:	add	r3, pc, r3
   2ab70:	mov	r2, #224	; 0xe0
   2ab74:	add	r3, r3, #240	; 0xf0
   2ab78:	add	r1, pc, r1
   2ab7c:	add	r0, pc, r0
   2ab80:	bl	14140 <__assert_fail@plt>
   2ab84:	movtpl	r4, #9794	; 0x2642
   2ab88:	muleq	r2, ip, ip
   2ab8c:			; <UNDEFINED> instruction: 0x0002cdb4
   2ab90:	andeq	ip, r2, r8, lsr #28
   2ab94:	andeq	ip, r2, r8, asr ip
   2ab98:	andeq	ip, r2, r0, ror sp
   2ab9c:	strdeq	sp, [r2], -ip
   2aba0:	andeq	ip, r2, r4, lsl #19
   2aba4:	andeq	ip, r2, r0, lsr #21
   2aba8:	andeq	ip, r2, ip, lsr #30
   2abac:	muleq	r2, ip, r8
   2abb0:			; <UNDEFINED> instruction: 0x0002c9b4
   2abb4:	andeq	ip, r2, r0, asr #28
   2abb8:	andeq	ip, r2, r0, lsl r6
   2abbc:	andeq	ip, r2, r8, lsr #14
   2abc0:	ldrdeq	ip, [r2], -r8
   2abc4:	andeq	ip, r2, ip, ror #11
   2abc8:	andeq	ip, r2, r4, lsl #14
   2abcc:	andeq	ip, r2, r8, ror r7

0002abd0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
   2abd0:	push	{r4, r5, r6, r7, r8, lr}
   2abd4:	mov	r7, r0
   2abd8:	sub	sp, sp, #232	; 0xe8
   2abdc:	mov	r8, r1
   2abe0:	mov	r6, r3
   2abe4:	mov	r0, sp
   2abe8:	mov	r5, r2
   2abec:	bl	38a64 <flatcc_builder_init@@Base>
   2abf0:	mov	r3, r8
   2abf4:	add	r2, r7, #188	; 0xbc
   2abf8:	ldr	r1, [r7, #184]	; 0xb8
   2abfc:	mov	r0, sp
   2ac00:	bl	29714 <__flatcc_fb_gen_c_json_printer@@Base+0xa40>
   2ac04:	ldr	r2, [r6]
   2ac08:	mov	r1, r5
   2ac0c:	mov	r0, sp
   2ac10:	bl	3c3e8 <flatcc_builder_copy_buffer@@Base>
   2ac14:	mov	r4, sp
   2ac18:	cmp	r0, #0
   2ac1c:	beq	2ac28 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x58>
   2ac20:	mov	r0, r5
   2ac24:	bl	2a490 <__flatcc_fb_gen_c_json_printer@@Base+0x17bc>
   2ac28:	mov	r0, r4
   2ac2c:	bl	3c308 <flatcc_builder_get_buffer_size@@Base>
   2ac30:	str	r0, [r6]
   2ac34:	mov	r0, r4
   2ac38:	bl	38bec <flatcc_builder_clear@@Base>
   2ac3c:	mov	r0, r5
   2ac40:	add	sp, sp, #232	; 0xe8
   2ac44:	pop	{r4, r5, r6, r7, r8, pc}

0002ac48 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
   2ac48:	push	{r4, r5, r6, r7, lr}
   2ac4c:	mov	r5, r0
   2ac50:	sub	sp, sp, #236	; 0xec
   2ac54:	mov	r6, r1
   2ac58:	mov	r0, sp
   2ac5c:	mov	r7, r2
   2ac60:	bl	38a64 <flatcc_builder_init@@Base>
   2ac64:	add	r2, r5, #188	; 0xbc
   2ac68:	ldr	r1, [r5, #184]	; 0xb8
   2ac6c:	mov	r3, r6
   2ac70:	mov	r0, sp
   2ac74:	bl	29714 <__flatcc_fb_gen_c_json_printer@@Base+0xa40>
   2ac78:	mov	r4, sp
   2ac7c:	cmp	r0, #0
   2ac80:	movne	r5, #0
   2ac84:	bne	2aca0 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x58>
   2ac88:	mov	r1, r7
   2ac8c:	mov	r0, sp
   2ac90:	bl	3c448 <flatcc_builder_finalize_buffer@@Base>
   2ac94:	subs	r5, r0, #0
   2ac98:	beq	2aca0 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x58>
   2ac9c:	bl	2a490 <__flatcc_fb_gen_c_json_printer@@Base+0x17bc>
   2aca0:	mov	r0, r4
   2aca4:	bl	38bec <flatcc_builder_clear@@Base>
   2aca8:	mov	r0, r5
   2acac:	add	sp, sp, #236	; 0xec
   2acb0:	pop	{r4, r5, r6, r7, pc}

0002acb4 <__flatcc_fb_codegen_bfbs_to_file@@Base>:
   2acb4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2acb8:	mov	r6, r0
   2acbc:	ldr	r4, [r0, #216]	; 0xd8
   2acc0:	ldr	r5, [pc, #408]	; 2ae60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ac>
   2acc4:	cmp	r4, #0
   2acc8:	sub	sp, sp, #16
   2accc:	mov	r7, r1
   2acd0:	ldr	r9, [r0, #108]	; 0x6c
   2acd4:	ldr	r8, [r1, #160]	; 0xa0
   2acd8:	add	r5, pc, r5
   2acdc:	beq	2adec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x138>
   2ace0:	mov	r0, r4
   2ace4:	bl	14074 <strlen@plt>
   2ace8:	mov	sl, r0
   2acec:	mov	r0, r8
   2acf0:	bl	14074 <strlen@plt>
   2acf4:	cmp	r9, #0
   2acf8:	beq	2ad9c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xe8>
   2acfc:	ldr	r3, [pc, #352]	; 2ae64 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b0>
   2ad00:	ldr	r3, [r5, r3]
   2ad04:	ldr	r4, [r3]
   2ad08:	cmp	r4, #0
   2ad0c:	beq	2ae30 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x17c>
   2ad10:	mov	r1, r7
   2ad14:	mov	r0, r6
   2ad18:	add	r2, sp, #12
   2ad1c:	bl	2ac48 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
   2ad20:	subs	r7, r0, #0
   2ad24:	beq	2adfc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x148>
   2ad28:	mov	r3, r4
   2ad2c:	ldr	r2, [sp, #12]
   2ad30:	mov	r1, #1
   2ad34:	bl	14014 <fwrite@plt>
   2ad38:	ldr	r3, [sp, #12]
   2ad3c:	cmp	r0, r3
   2ad40:	moveq	r6, #0
   2ad44:	beq	2ad6c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb8>
   2ad48:	ldr	r3, [pc, #280]	; 2ae68 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b4>
   2ad4c:	ldr	r0, [pc, #280]	; 2ae6c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b8>
   2ad50:	mov	r2, #38	; 0x26
   2ad54:	ldr	r3, [r5, r3]
   2ad58:	mov	r1, #1
   2ad5c:	add	r0, pc, r0
   2ad60:	ldr	r3, [r3]
   2ad64:	mvn	r6, #0
   2ad68:	bl	14014 <fwrite@plt>
   2ad6c:	mov	r0, r7
   2ad70:	bl	13fcc <free@plt>
   2ad74:	ldr	r3, [pc, #232]	; 2ae64 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b0>
   2ad78:	ldr	r3, [r5, r3]
   2ad7c:	ldr	r3, [r3]
   2ad80:	cmp	r3, r4
   2ad84:	beq	2ad90 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdc>
   2ad88:	mov	r0, r4
   2ad8c:	bl	140d4 <fclose@plt>
   2ad90:	mov	r0, r6
   2ad94:	add	sp, sp, #16
   2ad98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ad9c:	ldr	ip, [pc, #204]	; 2ae70 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1bc>
   2ada0:	mov	r9, #1
   2ada4:	add	ip, pc, ip
   2ada8:	mov	r3, r0
   2adac:	mov	r2, r8
   2adb0:	mov	r1, sl
   2adb4:	mov	r0, r4
   2adb8:	str	ip, [sp]
   2adbc:	str	r9, [sp, #4]
   2adc0:	bl	2d990 <__flatcc_fb_create_join_path_n@@Base>
   2adc4:	subs	r8, r0, #0
   2adc8:	beq	2ae38 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x184>
   2adcc:	ldr	r1, [pc, #160]	; 2ae74 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c0>
   2add0:	add	r1, pc, r1
   2add4:	bl	13fc0 <fopen@plt>
   2add8:	subs	r4, r0, #0
   2addc:	beq	2ae10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15c>
   2ade0:	mov	r0, r8
   2ade4:	bl	13fcc <free@plt>
   2ade8:	b	2ad08 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x54>
   2adec:	mov	sl, r4
   2adf0:	ldr	r4, [pc, #128]	; 2ae78 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c4>
   2adf4:	add	r4, pc, r4
   2adf8:	b	2acec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x38>
   2adfc:	ldr	r0, [pc, #120]	; 2ae7c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c8>
   2ae00:	mvn	r6, #0
   2ae04:	add	r0, pc, r0
   2ae08:	bl	1402c <puts@plt>
   2ae0c:	b	2ad74 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc0>
   2ae10:	ldr	r3, [pc, #80]	; 2ae68 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b4>
   2ae14:	ldr	r1, [pc, #100]	; 2ae80 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cc>
   2ae18:	mov	r2, r8
   2ae1c:	ldr	r3, [r5, r3]
   2ae20:	add	r1, pc, r1
   2ae24:	ldr	r0, [r3]
   2ae28:	bl	1408c <fprintf@plt>
   2ae2c:	b	2ade0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12c>
   2ae30:	mvn	r6, #0
   2ae34:	b	2ad90 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdc>
   2ae38:	ldr	r3, [pc, #40]	; 2ae68 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b4>
   2ae3c:	ldr	r0, [pc, #64]	; 2ae84 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d0>
   2ae40:	mov	r2, #34	; 0x22
   2ae44:	ldr	r3, [r5, r3]
   2ae48:	mov	r1, r9
   2ae4c:	add	r0, pc, r0
   2ae50:	ldr	r3, [r3]
   2ae54:	bl	14014 <fwrite@plt>
   2ae58:	mov	r0, r9
   2ae5c:	bl	14068 <exit@plt>
   2ae60:	andeq	r0, r4, r0, lsr #6
   2ae64:	andeq	r0, r0, ip, lsr #1
   2ae68:	andeq	r0, r0, r0, lsr #1
   2ae6c:	andeq	ip, r2, r4, ror #20
   2ae70:	andeq	r5, r1, ip, lsr sl
   2ae74:	andeq	r5, r1, r8, lsr fp
   2ae78:	andeq	pc, r1, ip, asr #26
   2ae7c:	muleq	r2, r8, r9
   2ae80:	andeq	ip, r2, r8, asr #18
   2ae84:	andeq	r5, r1, r8, ror #18
   2ae88:	push	{r4, lr}
   2ae8c:	mov	r4, r0
   2ae90:	ldr	r0, [r0]
   2ae94:	cmp	r0, #0
   2ae98:	beq	2aea0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ec>
   2ae9c:	bl	13fcc <free@plt>
   2aea0:	mov	r3, #0
   2aea4:	str	r3, [r4]
   2aea8:	str	r3, [r4, #4]
   2aeac:	str	r3, [r4, #8]
   2aeb0:	str	r3, [r4, #12]
   2aeb4:	pop	{r4, pc}
   2aeb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2aebc:	sub	sp, sp, #28
   2aec0:	ldr	r4, [pc, #568]	; 2b100 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x44c>
   2aec4:	cmp	r3, #0
   2aec8:	str	r3, [sp, #8]
   2aecc:	str	r0, [sp, #12]
   2aed0:	add	r4, pc, r4
   2aed4:	beq	2b0e0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x42c>
   2aed8:	ldr	r3, [sp, #8]
   2aedc:	cmp	r3, #2
   2aee0:	beq	2b098 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3e4>
   2aee4:	ldr	r3, [sp, #8]
   2aee8:	cmp	r3, #1
   2aeec:	beq	2b078 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c4>
   2aef0:	ldr	r5, [sp, #12]
   2aef4:	mov	r3, #179	; 0xb3
   2aef8:	mov	r8, r1
   2aefc:	ldr	r7, [r5, #12]
   2af00:	ldr	r1, [r5, #8]
   2af04:	mov	r9, r2
   2af08:	mul	r3, r3, r7
   2af0c:	cmp	r1, r3, lsr #8
   2af10:	bcc	2af28 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x274>
   2af14:	lsl	r1, r1, #1
   2af18:	bl	2b138 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x484>
   2af1c:	cmp	r0, #0
   2af20:	bne	2b0b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x404>
   2af24:	ldr	r7, [r5, #12]
   2af28:	ldr	r3, [pc, #468]	; 2b104 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x450>
   2af2c:	ldr	r1, [sp, #12]
   2af30:	str	r3, [sp]
   2af34:	add	r3, sp, #16
   2af38:	str	r3, [sp, #4]
   2af3c:	mov	r2, r9
   2af40:	mov	r3, #0
   2af44:	mov	r0, r8
   2af48:	ldr	r6, [r1]
   2af4c:	bl	3cbc8 <cmetrohash64_1@@Base>
   2af50:	ldr	r2, [sp, #64]	; 0x40
   2af54:	ldr	r3, [sp, #16]
   2af58:	sub	r2, r2, #2
   2af5c:	sub	r7, r7, #1
   2af60:	cmp	r2, #1
   2af64:	and	r4, r7, r3
   2af68:	bls	2b020 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x36c>
   2af6c:	ldr	r5, [r6, r4, lsl #2]
   2af70:	add	r4, r6, r4, lsl #2
   2af74:	cmp	r5, #0
   2af78:	moveq	sl, r4
   2af7c:	beq	2afd8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x324>
   2af80:	add	fp, r3, #1
   2af84:	mov	sl, #0
   2af88:	b	2afbc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x308>
   2af8c:	mov	r2, r9
   2af90:	mov	r1, r5
   2af94:	mov	r0, r8
   2af98:	bl	14128 <strncmp@plt>
   2af9c:	cmp	r0, #0
   2afa0:	beq	2b000 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x34c>
   2afa4:	and	r4, r7, fp
   2afa8:	add	fp, fp, #1
   2afac:	ldr	r5, [r6, r4, lsl #2]
   2afb0:	add	r4, r6, r4, lsl #2
   2afb4:	cmp	r5, #0
   2afb8:	beq	2afd0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x31c>
   2afbc:	cmp	r5, #2
   2afc0:	bne	2af8c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2d8>
   2afc4:	cmp	sl, #0
   2afc8:	moveq	sl, r4
   2afcc:	b	2afa4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2f0>
   2afd0:	cmp	sl, #0
   2afd4:	moveq	sl, r4
   2afd8:	ldr	r2, [sp, #12]
   2afdc:	mov	r5, #0
   2afe0:	ldr	r3, [r2, #8]
   2afe4:	add	r3, r3, #1
   2afe8:	str	r3, [r2, #8]
   2afec:	ldr	r3, [sp, #8]
   2aff0:	str	r3, [sl]
   2aff4:	mov	r0, r5
   2aff8:	add	sp, sp, #28
   2affc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b000:	ldr	r3, [sp, #64]	; 0x40
   2b004:	cmp	r3, #0
   2b008:	bne	2aff4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x340>
   2b00c:	ldr	r3, [sp, #8]
   2b010:	mov	r0, r5
   2b014:	str	r3, [r4]
   2b018:	add	sp, sp, #28
   2b01c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b020:	ldr	r0, [sp, #12]
   2b024:	ldr	r1, [r6, r4, lsl #2]
   2b028:	add	r4, r6, r4, lsl #2
   2b02c:	ldr	r2, [r0, #8]
   2b030:	cmp	r1, #0
   2b034:	cmpne	r1, #2
   2b038:	add	r2, r2, #1
   2b03c:	str	r2, [r0, #8]
   2b040:	beq	2b068 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b4>
   2b044:	add	r3, r3, #1
   2b048:	and	r2, r7, r3
   2b04c:	add	r3, r3, #1
   2b050:	ldr	r1, [r6, r2, lsl #2]
   2b054:	add	r2, r6, r2, lsl #2
   2b058:	cmp	r1, #0
   2b05c:	cmpne	r1, #2
   2b060:	bne	2b048 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x394>
   2b064:	mov	r4, r2
   2b068:	ldr	r3, [sp, #8]
   2b06c:	mov	r5, #0
   2b070:	str	r3, [r4]
   2b074:	b	2aff4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x340>
   2b078:	ldr	r3, [pc, #136]	; 2b108 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x454>
   2b07c:	ldr	r1, [pc, #136]	; 2b10c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x458>
   2b080:	ldr	r0, [pc, #136]	; 2b110 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x45c>
   2b084:	add	r3, pc, r3
   2b088:	mov	r2, #116	; 0x74
   2b08c:	add	r1, pc, r1
   2b090:	add	r0, pc, r0
   2b094:	bl	14140 <__assert_fail@plt>
   2b098:	ldr	r3, [pc, #116]	; 2b114 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x460>
   2b09c:	ldr	r1, [pc, #116]	; 2b118 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x464>
   2b0a0:	ldr	r0, [pc, #116]	; 2b11c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x468>
   2b0a4:	add	r3, pc, r3
   2b0a8:	mov	r2, #115	; 0x73
   2b0ac:	add	r1, pc, r1
   2b0b0:	add	r0, pc, r0
   2b0b4:	bl	14140 <__assert_fail@plt>
   2b0b8:	ldr	r3, [pc, #96]	; 2b120 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x46c>
   2b0bc:	ldr	r2, [pc, #96]	; 2b124 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x470>
   2b0c0:	ldr	r1, [pc, #96]	; 2b128 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x474>
   2b0c4:	ldr	r3, [r4, r3]
   2b0c8:	add	r2, pc, r2
   2b0cc:	add	r1, pc, r1
   2b0d0:	ldr	r0, [r3]
   2b0d4:	bl	1408c <fprintf@plt>
   2b0d8:	mov	r0, #1
   2b0dc:	bl	14068 <exit@plt>
   2b0e0:	ldr	r3, [pc, #68]	; 2b12c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x478>
   2b0e4:	ldr	r1, [pc, #68]	; 2b130 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x47c>
   2b0e8:	ldr	r0, [pc, #68]	; 2b134 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x480>
   2b0ec:	add	r3, pc, r3
   2b0f0:	mov	r2, #114	; 0x72
   2b0f4:	add	r1, pc, r1
   2b0f8:	add	r0, pc, r0
   2b0fc:	bl	14140 <__assert_fail@plt>
   2b100:	andeq	r0, r4, r8, lsr #2
   2b104:	svccs	0x00693b52
   2b108:	andeq	ip, r2, r4, ror #14
   2b10c:	andeq	ip, r2, r4, ror r7
   2b110:	andeq	ip, r2, r8, lsl #16
   2b114:	andeq	ip, r2, r4, asr #14
   2b118:	andeq	ip, r2, r4, asr r7
   2b11c:	ldrdeq	ip, [r2], -r0
   2b120:	andeq	r0, r0, r0, lsr #1
   2b124:	andeq	ip, r2, r8, ror #15
   2b128:	andeq	ip, r2, r8, lsl r8
   2b12c:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   2b130:	andeq	ip, r2, ip, lsl #14
   2b134:	andeq	ip, r2, r0, ror r7
   2b138:	ldr	r3, [r0, #8]
   2b13c:	push	{r4, r5, r6, r7, r8, r9, lr}
   2b140:	cmp	r1, r3
   2b144:	movcc	r1, r3
   2b148:	cmp	r1, #2
   2b14c:	sub	sp, sp, #28
   2b150:	mov	r7, r0
   2b154:	ldr	r6, [r0]
   2b158:	mov	r4, #4
   2b15c:	bls	2b174 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c0>
   2b160:	mov	r2, #179	; 0xb3
   2b164:	lsl	r4, r4, #1
   2b168:	mul	r3, r2, r4
   2b16c:	cmp	r1, r3, lsr #8
   2b170:	bhi	2b164 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4b0>
   2b174:	mov	r1, #4
   2b178:	mov	r0, r4
   2b17c:	bl	13f9c <calloc@plt>
   2b180:	cmp	r0, #0
   2b184:	str	r0, [sp, #8]
   2b188:	beq	2b238 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x584>
   2b18c:	ldr	r3, [r7, #12]
   2b190:	mov	r5, #0
   2b194:	cmp	r3, r5
   2b198:	str	r4, [sp, #20]
   2b19c:	str	r5, [sp, #12]
   2b1a0:	str	r5, [sp, #16]
   2b1a4:	subne	r6, r6, #4
   2b1a8:	addne	r8, sp, #8
   2b1ac:	movne	r9, #3
   2b1b0:	bne	2b1c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x50c>
   2b1b4:	b	2b230 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x57c>
   2b1b8:	cmp	r3, r5
   2b1bc:	bls	2b200 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x54c>
   2b1c0:	ldr	r4, [r6, #4]!
   2b1c4:	add	r5, r5, #1
   2b1c8:	cmp	r4, #0
   2b1cc:	cmpne	r4, #2
   2b1d0:	beq	2b1b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x504>
   2b1d4:	mov	r0, r4
   2b1d8:	bl	14074 <strlen@plt>
   2b1dc:	mov	r3, r4
   2b1e0:	str	r9, [sp]
   2b1e4:	mov	r1, r4
   2b1e8:	mov	r2, r0
   2b1ec:	mov	r0, r8
   2b1f0:	bl	2aeb8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x204>
   2b1f4:	ldr	r3, [r7, #12]
   2b1f8:	cmp	r3, r5
   2b1fc:	bhi	2b1c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x50c>
   2b200:	mov	r0, r7
   2b204:	bl	2ae88 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d4>
   2b208:	mov	ip, r8
   2b20c:	mov	lr, #0
   2b210:	ldm	ip!, {r0, r1, r2, r3}
   2b214:	str	r0, [r7]
   2b218:	str	r1, [r7, #4]
   2b21c:	str	r2, [r7, #8]
   2b220:	str	r3, [r7, #12]
   2b224:	mov	r0, lr
   2b228:	add	sp, sp, #28
   2b22c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2b230:	add	r8, sp, #8
   2b234:	b	2b200 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x54c>
   2b238:	mvn	lr, #0
   2b23c:	b	2b224 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x570>
   2b240:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b244:	sub	sp, sp, #20
   2b248:	ldr	r5, [r0]
   2b24c:	cmp	r5, #0
   2b250:	beq	2b2d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x624>
   2b254:	ldr	r3, [pc, #172]	; 2b308 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x654>
   2b258:	ldr	r7, [r0, #12]
   2b25c:	str	r3, [sp]
   2b260:	add	r3, sp, #8
   2b264:	str	r3, [sp, #4]
   2b268:	mov	r9, r0
   2b26c:	mov	r3, #0
   2b270:	mov	r0, r1
   2b274:	mov	r8, r2
   2b278:	mov	r6, r1
   2b27c:	bl	3cbc8 <cmetrohash64_1@@Base>
   2b280:	ldr	sl, [sp, #8]
   2b284:	sub	r7, r7, #1
   2b288:	and	r3, r7, sl
   2b28c:	ldr	fp, [r5, r3, lsl #2]
   2b290:	add	r4, r5, r3, lsl #2
   2b294:	cmp	fp, #0
   2b298:	beq	2b2d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x624>
   2b29c:	add	sl, sl, #1
   2b2a0:	cmp	fp, #2
   2b2a4:	mov	r1, fp
   2b2a8:	mov	r2, r8
   2b2ac:	mov	r0, r6
   2b2b0:	beq	2b2c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x60c>
   2b2b4:	bl	14128 <strncmp@plt>
   2b2b8:	cmp	r0, #0
   2b2bc:	beq	2b2e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x634>
   2b2c0:	and	r3, sl, r7
   2b2c4:	add	sl, sl, #1
   2b2c8:	ldr	fp, [r5, r3, lsl #2]
   2b2cc:	add	r4, r5, r3, lsl #2
   2b2d0:	cmp	fp, #0
   2b2d4:	bne	2b2a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5ec>
   2b2d8:	mov	fp, #0
   2b2dc:	mov	r0, fp
   2b2e0:	add	sp, sp, #20
   2b2e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b2e8:	ldr	r3, [r9, #8]
   2b2ec:	mov	r2, #2
   2b2f0:	sub	r3, r3, #1
   2b2f4:	str	r2, [r4]
   2b2f8:	mov	r0, fp
   2b2fc:	str	r3, [r9, #8]
   2b300:	add	sp, sp, #20
   2b304:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b308:	svccs	0x00693b52
   2b30c:	push	{r4, r5, r6, r7, r8, r9, lr}
   2b310:	subs	r8, r0, #0
   2b314:	sub	sp, sp, #20
   2b318:	beq	2b398 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6e4>
   2b31c:	mov	r7, r3
   2b320:	ldr	r3, [pc, #128]	; 2b3a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6f4>
   2b324:	ldr	r9, [r1]
   2b328:	mov	r6, r2
   2b32c:	str	r3, [sp]
   2b330:	add	r3, sp, #8
   2b334:	str	r3, [sp, #4]
   2b338:	mov	r2, r7
   2b33c:	mov	r3, #0
   2b340:	mov	r0, r6
   2b344:	bl	3cbc8 <cmetrohash64_1@@Base>
   2b348:	ldr	r5, [sp, #8]
   2b34c:	sub	r9, r9, #1
   2b350:	and	r3, r9, r5
   2b354:	ldr	r4, [r8, r3, lsl #2]
   2b358:	cmp	r4, #0
   2b35c:	beq	2b398 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6e4>
   2b360:	add	r5, r5, #1
   2b364:	cmp	r4, #2
   2b368:	mov	r1, r4
   2b36c:	mov	r2, r7
   2b370:	mov	r0, r6
   2b374:	beq	2b384 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6d0>
   2b378:	bl	14128 <strncmp@plt>
   2b37c:	cmp	r0, #0
   2b380:	beq	2b39c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6e8>
   2b384:	and	r1, r9, r5
   2b388:	add	r5, r5, #1
   2b38c:	ldr	r4, [r8, r1, lsl #2]
   2b390:	cmp	r4, #0
   2b394:	bne	2b364 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6b0>
   2b398:	mov	r4, #0
   2b39c:	mov	r0, r4
   2b3a0:	add	sp, sp, #20
   2b3a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2b3a8:	svccs	0x00693b52

0002b3ac <str_set_clear@@Base>:
   2b3ac:	b	2ae88 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d4>

0002b3b0 <str_set_destroy@@Base>:
   2b3b0:	push	{r4, r5, r6, r7, r8, lr}
   2b3b4:	subs	r7, r1, #0
   2b3b8:	mov	r6, r0
   2b3bc:	beq	2b410 <str_set_destroy@@Base+0x60>
   2b3c0:	ldr	r3, [r0, #12]
   2b3c4:	ldr	r5, [r0]
   2b3c8:	cmp	r3, #0
   2b3cc:	beq	2b410 <str_set_destroy@@Base+0x60>
   2b3d0:	mov	r8, r2
   2b3d4:	sub	r5, r5, #4
   2b3d8:	mov	r4, #0
   2b3dc:	b	2b3e8 <str_set_destroy@@Base+0x38>
   2b3e0:	cmp	r4, r3
   2b3e4:	bcs	2b410 <str_set_destroy@@Base+0x60>
   2b3e8:	ldr	r1, [r5, #4]!
   2b3ec:	add	r4, r4, #1
   2b3f0:	cmp	r1, #0
   2b3f4:	cmpne	r1, #2
   2b3f8:	beq	2b3e0 <str_set_destroy@@Base+0x30>
   2b3fc:	mov	r0, r8
   2b400:	blx	r7
   2b404:	ldr	r3, [r6, #12]
   2b408:	cmp	r4, r3
   2b40c:	bcc	2b3e8 <str_set_destroy@@Base+0x38>
   2b410:	mov	r0, r6
   2b414:	pop	{r4, r5, r6, r7, r8, lr}
   2b418:	b	2ae88 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d4>

0002b41c <str_set_init@@Base>:
   2b41c:	cmp	r1, #2
   2b420:	push	{r4, r5, r6, lr}
   2b424:	mov	r4, #4
   2b428:	mov	r5, r0
   2b42c:	bls	2b444 <str_set_init@@Base+0x28>
   2b430:	mov	r2, #179	; 0xb3
   2b434:	lsl	r4, r4, #1
   2b438:	mul	r3, r2, r4
   2b43c:	cmp	r1, r3, lsr #8
   2b440:	bhi	2b434 <str_set_init@@Base+0x18>
   2b444:	mov	r1, #4
   2b448:	mov	r0, r4
   2b44c:	bl	13f9c <calloc@plt>
   2b450:	cmp	r0, #0
   2b454:	str	r0, [r5]
   2b458:	movne	r0, #0
   2b45c:	strne	r4, [r5, #12]
   2b460:	strne	r0, [r5, #4]
   2b464:	strne	r0, [r5, #8]
   2b468:	mvneq	r0, #0
   2b46c:	pop	{r4, r5, r6, pc}

0002b470 <str_set_resize@@Base>:
   2b470:	b	2b138 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x484>

0002b474 <str_set_insert@@Base>:
   2b474:	b	2aeb8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x204>

0002b478 <str_set_insert_item@@Base>:
   2b478:	push	{r4, r5, r6, lr}
   2b47c:	mov	r5, r0
   2b480:	sub	sp, sp, #8
   2b484:	mov	r0, r1
   2b488:	mov	r4, r1
   2b48c:	mov	r6, r2
   2b490:	bl	14074 <strlen@plt>
   2b494:	str	r6, [sp]
   2b498:	mov	r3, r4
   2b49c:	mov	r1, r4
   2b4a0:	mov	r2, r0
   2b4a4:	mov	r0, r5
   2b4a8:	bl	2aeb8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x204>
   2b4ac:	add	sp, sp, #8
   2b4b0:	pop	{r4, r5, r6, pc}

0002b4b4 <str_set_find@@Base>:
   2b4b4:	mov	ip, r0
   2b4b8:	mov	r3, r2
   2b4bc:	ldr	r0, [r0]
   2b4c0:	mov	r2, r1
   2b4c4:	add	r1, ip, #12
   2b4c8:	b	2b30c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x658>

0002b4cc <str_set_find_item@@Base>:
   2b4cc:	push	{r4, r5, r6, lr}
   2b4d0:	mov	r4, r0
   2b4d4:	mov	r0, r1
   2b4d8:	mov	r5, r1
   2b4dc:	bl	14074 <strlen@plt>
   2b4e0:	mov	r2, r5
   2b4e4:	add	r1, r4, #12
   2b4e8:	mov	r3, r0
   2b4ec:	ldr	r0, [r4]
   2b4f0:	pop	{r4, r5, r6, lr}
   2b4f4:	b	2b30c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x658>

0002b4f8 <str_set_remove@@Base>:
   2b4f8:	b	2b240 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x58c>

0002b4fc <str_set_remove_item@@Base>:
   2b4fc:	push	{r4, r5, r6, lr}
   2b500:	mov	r5, r0
   2b504:	mov	r0, r1
   2b508:	mov	r4, r1
   2b50c:	bl	14074 <strlen@plt>
   2b510:	mov	r1, r4
   2b514:	mov	r2, r0
   2b518:	mov	r0, r5
   2b51c:	pop	{r4, r5, r6, lr}
   2b520:	b	2b240 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x58c>

0002b524 <str_set_visit@@Base>:
   2b524:	ldr	r3, [r0, #12]
   2b528:	push	{r4, r5, r6, r7, r8, lr}
   2b52c:	cmp	r3, #0
   2b530:	ldr	r5, [r0]
   2b534:	popeq	{r4, r5, r6, r7, r8, pc}
   2b538:	mov	r7, r2
   2b53c:	mov	r6, r1
   2b540:	mov	r8, r0
   2b544:	sub	r5, r5, #4
   2b548:	mov	r4, #0
   2b54c:	b	2b558 <str_set_visit@@Base+0x34>
   2b550:	cmp	r4, r3
   2b554:	bcs	2b580 <str_set_visit@@Base+0x5c>
   2b558:	ldr	r1, [r5, #4]!
   2b55c:	add	r4, r4, #1
   2b560:	cmp	r1, #0
   2b564:	cmpne	r1, #2
   2b568:	beq	2b550 <str_set_visit@@Base+0x2c>
   2b56c:	mov	r0, r7
   2b570:	blx	r6
   2b574:	ldr	r3, [r8, #12]
   2b578:	cmp	r4, r3
   2b57c:	bcc	2b558 <str_set_visit@@Base+0x34>
   2b580:	pop	{r4, r5, r6, r7, r8, pc}
   2b584:	push	{r4, lr}
   2b588:	mov	r4, r0
   2b58c:	ldr	r0, [r0]
   2b590:	cmp	r0, #0
   2b594:	beq	2b59c <str_set_visit@@Base+0x78>
   2b598:	bl	13fcc <free@plt>
   2b59c:	mov	r3, #0
   2b5a0:	str	r3, [r4]
   2b5a4:	str	r3, [r4, #4]
   2b5a8:	str	r3, [r4, #8]
   2b5ac:	str	r3, [r4, #12]
   2b5b0:	pop	{r4, pc}
   2b5b4:	push	{r4, r5, r6, r7, r8, r9, lr}
   2b5b8:	subs	r7, r2, #0
   2b5bc:	ldr	r4, [pc, #492]	; 2b7b0 <str_set_visit@@Base+0x28c>
   2b5c0:	sub	sp, sp, #28
   2b5c4:	add	r4, pc, r4
   2b5c8:	beq	2b790 <str_set_visit@@Base+0x26c>
   2b5cc:	cmp	r7, #2
   2b5d0:	beq	2b748 <str_set_visit@@Base+0x224>
   2b5d4:	cmp	r7, #1
   2b5d8:	beq	2b728 <str_set_visit@@Base+0x204>
   2b5dc:	ldr	r9, [r0, #12]
   2b5e0:	mov	r8, r3
   2b5e4:	mov	r3, #179	; 0xb3
   2b5e8:	mov	r5, r1
   2b5ec:	mul	r3, r3, r9
   2b5f0:	ldr	r1, [r0, #8]
   2b5f4:	mov	r6, r0
   2b5f8:	cmp	r1, r3, lsr #8
   2b5fc:	bcc	2b614 <str_set_visit@@Base+0xf0>
   2b600:	lsl	r1, r1, #1
   2b604:	bl	2b7e8 <str_set_visit@@Base+0x2c4>
   2b608:	cmp	r0, #0
   2b60c:	bne	2b768 <str_set_visit@@Base+0x244>
   2b610:	ldr	r9, [r6, #12]
   2b614:	add	r0, sp, #24
   2b618:	ldr	r3, [pc, #404]	; 2b7b4 <str_set_visit@@Base+0x290>
   2b61c:	str	r5, [r0, #-12]!
   2b620:	str	r3, [sp]
   2b624:	add	r3, sp, #16
   2b628:	str	r3, [sp, #4]
   2b62c:	mov	r2, #4
   2b630:	mov	r3, #0
   2b634:	ldr	r4, [r6]
   2b638:	bl	3cbc8 <cmetrohash64_1@@Base>
   2b63c:	sub	r3, r8, #2
   2b640:	ldr	r2, [sp, #16]
   2b644:	sub	r9, r9, #1
   2b648:	cmp	r3, #1
   2b64c:	and	r3, r9, r2
   2b650:	bls	2b6dc <str_set_visit@@Base+0x1b8>
   2b654:	ldr	r0, [r4, r3, lsl #2]
   2b658:	add	r3, r4, r3, lsl #2
   2b65c:	cmp	r0, #0
   2b660:	moveq	r1, r3
   2b664:	beq	2b6b0 <str_set_visit@@Base+0x18c>
   2b668:	add	r2, r2, #1
   2b66c:	mov	r1, #0
   2b670:	b	2b694 <str_set_visit@@Base+0x170>
   2b674:	cmp	r5, r0
   2b678:	beq	2b6cc <str_set_visit@@Base+0x1a8>
   2b67c:	and	r3, r9, r2
   2b680:	add	r2, r2, #1
   2b684:	ldr	r0, [r4, r3, lsl #2]
   2b688:	add	r3, r4, r3, lsl #2
   2b68c:	cmp	r0, #0
   2b690:	beq	2b6a8 <str_set_visit@@Base+0x184>
   2b694:	cmp	r0, #2
   2b698:	bne	2b674 <str_set_visit@@Base+0x150>
   2b69c:	cmp	r1, #0
   2b6a0:	moveq	r1, r3
   2b6a4:	b	2b67c <str_set_visit@@Base+0x158>
   2b6a8:	cmp	r1, #0
   2b6ac:	moveq	r1, r3
   2b6b0:	ldr	r3, [r6, #8]
   2b6b4:	mov	r0, #0
   2b6b8:	add	r3, r3, #1
   2b6bc:	str	r3, [r6, #8]
   2b6c0:	str	r7, [r1]
   2b6c4:	add	sp, sp, #28
   2b6c8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2b6cc:	cmp	r8, #0
   2b6d0:	streq	r7, [r3]
   2b6d4:	add	sp, sp, #28
   2b6d8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2b6dc:	ldr	r0, [r4, r3, lsl #2]
   2b6e0:	ldr	r1, [r6, #8]
   2b6e4:	cmp	r0, #0
   2b6e8:	cmpne	r0, #2
   2b6ec:	add	r1, r1, #1
   2b6f0:	str	r1, [r6, #8]
   2b6f4:	add	r3, r4, r3, lsl #2
   2b6f8:	beq	2b71c <str_set_visit@@Base+0x1f8>
   2b6fc:	add	r2, r2, #1
   2b700:	and	r3, r9, r2
   2b704:	add	r2, r2, #1
   2b708:	ldr	r1, [r4, r3, lsl #2]
   2b70c:	add	r3, r4, r3, lsl #2
   2b710:	cmp	r1, #0
   2b714:	cmpne	r1, #2
   2b718:	bne	2b700 <str_set_visit@@Base+0x1dc>
   2b71c:	str	r7, [r3]
   2b720:	mov	r0, #0
   2b724:	b	2b6c4 <str_set_visit@@Base+0x1a0>
   2b728:	ldr	r3, [pc, #136]	; 2b7b8 <str_set_visit@@Base+0x294>
   2b72c:	ldr	r1, [pc, #136]	; 2b7bc <str_set_visit@@Base+0x298>
   2b730:	ldr	r0, [pc, #136]	; 2b7c0 <str_set_visit@@Base+0x29c>
   2b734:	add	r3, pc, r3
   2b738:	mov	r2, #116	; 0x74
   2b73c:	add	r1, pc, r1
   2b740:	add	r0, pc, r0
   2b744:	bl	14140 <__assert_fail@plt>
   2b748:	ldr	r3, [pc, #116]	; 2b7c4 <str_set_visit@@Base+0x2a0>
   2b74c:	ldr	r1, [pc, #116]	; 2b7c8 <str_set_visit@@Base+0x2a4>
   2b750:	ldr	r0, [pc, #116]	; 2b7cc <str_set_visit@@Base+0x2a8>
   2b754:	add	r3, pc, r3
   2b758:	mov	r2, #115	; 0x73
   2b75c:	add	r1, pc, r1
   2b760:	add	r0, pc, r0
   2b764:	bl	14140 <__assert_fail@plt>
   2b768:	ldr	r3, [pc, #96]	; 2b7d0 <str_set_visit@@Base+0x2ac>
   2b76c:	ldr	r2, [pc, #96]	; 2b7d4 <str_set_visit@@Base+0x2b0>
   2b770:	ldr	r1, [pc, #96]	; 2b7d8 <str_set_visit@@Base+0x2b4>
   2b774:	ldr	r3, [r4, r3]
   2b778:	add	r2, pc, r2
   2b77c:	add	r1, pc, r1
   2b780:	ldr	r0, [r3]
   2b784:	bl	1408c <fprintf@plt>
   2b788:	mov	r0, #1
   2b78c:	bl	14068 <exit@plt>
   2b790:	ldr	r3, [pc, #68]	; 2b7dc <str_set_visit@@Base+0x2b8>
   2b794:	ldr	r1, [pc, #68]	; 2b7e0 <str_set_visit@@Base+0x2bc>
   2b798:	ldr	r0, [pc, #68]	; 2b7e4 <str_set_visit@@Base+0x2c0>
   2b79c:	add	r3, pc, r3
   2b7a0:	mov	r2, #114	; 0x72
   2b7a4:	add	r1, pc, r1
   2b7a8:	add	r0, pc, r0
   2b7ac:	bl	14140 <__assert_fail@plt>
   2b7b0:	andeq	pc, r3, r4, lsr sl	; <UNPREDICTABLE>
   2b7b4:	svccs	0x00693b52
   2b7b8:	andeq	ip, r2, r8, asr #3
   2b7bc:	andeq	ip, r2, r4, asr #1
   2b7c0:	andeq	ip, r2, r8, asr r1
   2b7c4:	andeq	ip, r2, r8, lsr #3
   2b7c8:	andeq	ip, r2, r4, lsr #1
   2b7cc:	andeq	ip, r2, r0, lsr #2
   2b7d0:	andeq	r0, r0, r0, lsr #1
   2b7d4:	andeq	ip, r2, r8, lsr r1
   2b7d8:	andeq	ip, r2, r8, ror #2
   2b7dc:	andeq	ip, r2, r0, ror #2
   2b7e0:	andeq	ip, r2, ip, asr r0
   2b7e4:	andeq	ip, r2, r0, asr #1
   2b7e8:	ldr	r3, [r0, #8]
   2b7ec:	push	{r4, r5, r6, r7, r8, lr}
   2b7f0:	cmp	r1, r3
   2b7f4:	movcc	r1, r3
   2b7f8:	cmp	r1, #2
   2b7fc:	sub	sp, sp, #16
   2b800:	mov	r7, r0
   2b804:	ldr	r6, [r0]
   2b808:	mov	r5, #4
   2b80c:	bls	2b824 <str_set_visit@@Base+0x300>
   2b810:	mov	r2, #179	; 0xb3
   2b814:	lsl	r5, r5, #1
   2b818:	mul	r3, r2, r5
   2b81c:	cmp	r1, r3, lsr #8
   2b820:	bhi	2b814 <str_set_visit@@Base+0x2f0>
   2b824:	mov	r1, #4
   2b828:	mov	r0, r5
   2b82c:	bl	13f9c <calloc@plt>
   2b830:	cmp	r0, #0
   2b834:	str	r0, [sp]
   2b838:	beq	2b8d8 <str_set_visit@@Base+0x3b4>
   2b83c:	ldr	r3, [r7, #12]
   2b840:	mov	r4, #0
   2b844:	cmp	r3, r4
   2b848:	str	r5, [sp, #12]
   2b84c:	str	r4, [sp, #4]
   2b850:	subne	r5, r6, #4
   2b854:	str	r4, [sp, #8]
   2b858:	movne	r6, sp
   2b85c:	movne	r8, #3
   2b860:	bne	2b870 <str_set_visit@@Base+0x34c>
   2b864:	b	2b8d0 <str_set_visit@@Base+0x3ac>
   2b868:	cmp	r3, r4
   2b86c:	bls	2b8a0 <str_set_visit@@Base+0x37c>
   2b870:	ldr	r2, [r5, #4]!
   2b874:	add	r4, r4, #1
   2b878:	cmp	r2, #0
   2b87c:	cmpne	r2, #2
   2b880:	beq	2b868 <str_set_visit@@Base+0x344>
   2b884:	mov	r3, r8
   2b888:	mov	r1, r2
   2b88c:	mov	r0, r6
   2b890:	bl	2b5b4 <str_set_visit@@Base+0x90>
   2b894:	ldr	r3, [r7, #12]
   2b898:	cmp	r3, r4
   2b89c:	bhi	2b870 <str_set_visit@@Base+0x34c>
   2b8a0:	mov	r0, r7
   2b8a4:	bl	2b584 <str_set_visit@@Base+0x60>
   2b8a8:	mov	ip, r6
   2b8ac:	mov	lr, #0
   2b8b0:	ldm	ip!, {r0, r1, r2, r3}
   2b8b4:	str	r0, [r7]
   2b8b8:	str	r1, [r7, #4]
   2b8bc:	str	r2, [r7, #8]
   2b8c0:	str	r3, [r7, #12]
   2b8c4:	mov	r0, lr
   2b8c8:	add	sp, sp, #16
   2b8cc:	pop	{r4, r5, r6, r7, r8, pc}
   2b8d0:	mov	r6, sp
   2b8d4:	b	2b8a0 <str_set_visit@@Base+0x37c>
   2b8d8:	mvn	lr, #0
   2b8dc:	b	2b8c4 <str_set_visit@@Base+0x3a0>
   2b8e0:	push	{r4, r5, r6, lr}
   2b8e4:	subs	r5, r0, #0
   2b8e8:	sub	sp, sp, #24
   2b8ec:	beq	2b95c <str_set_visit@@Base+0x438>
   2b8f0:	add	r0, sp, #24
   2b8f4:	ldr	r3, [pc, #108]	; 2b968 <str_set_visit@@Base+0x444>
   2b8f8:	str	r2, [r0, #-12]!
   2b8fc:	ldr	r4, [r1]
   2b900:	str	r3, [sp]
   2b904:	add	r3, sp, #16
   2b908:	str	r3, [sp, #4]
   2b90c:	mov	r6, r2
   2b910:	mov	r3, #0
   2b914:	mov	r2, #4
   2b918:	bl	3cbc8 <cmetrohash64_1@@Base>
   2b91c:	ldr	r3, [sp, #16]
   2b920:	sub	r4, r4, #1
   2b924:	and	r2, r4, r3
   2b928:	ldr	r0, [r5, r2, lsl #2]
   2b92c:	cmp	r0, #0
   2b930:	beq	2b95c <str_set_visit@@Base+0x438>
   2b934:	add	r3, r3, #1
   2b938:	cmp	r0, #2
   2b93c:	and	r1, r3, r4
   2b940:	beq	2b94c <str_set_visit@@Base+0x428>
   2b944:	cmp	r6, r0
   2b948:	beq	2b960 <str_set_visit@@Base+0x43c>
   2b94c:	ldr	r0, [r5, r1, lsl #2]
   2b950:	add	r3, r3, #1
   2b954:	cmp	r0, #0
   2b958:	bne	2b938 <str_set_visit@@Base+0x414>
   2b95c:	mov	r0, #0
   2b960:	add	sp, sp, #24
   2b964:	pop	{r4, r5, r6, pc}
   2b968:	svccs	0x00693b52
   2b96c:	push	{r4, r5, r6, r7, lr}
   2b970:	sub	sp, sp, #28
   2b974:	ldr	r4, [r0]
   2b978:	cmp	r4, #0
   2b97c:	beq	2b9f8 <str_set_visit@@Base+0x4d4>
   2b980:	mov	r7, r0
   2b984:	ldr	r3, [pc, #148]	; 2ba20 <str_set_visit@@Base+0x4fc>
   2b988:	add	r0, sp, #24
   2b98c:	ldr	r5, [r7, #12]
   2b990:	str	r1, [r0, #-12]!
   2b994:	str	r3, [sp]
   2b998:	add	r3, sp, #16
   2b99c:	str	r3, [sp, #4]
   2b9a0:	mov	r2, #4
   2b9a4:	mov	r3, #0
   2b9a8:	mov	r6, r1
   2b9ac:	bl	3cbc8 <cmetrohash64_1@@Base>
   2b9b0:	ldr	r3, [sp, #16]
   2b9b4:	sub	r5, r5, #1
   2b9b8:	and	ip, r5, r3
   2b9bc:	ldr	r0, [r4, ip, lsl #2]
   2b9c0:	add	ip, r4, ip, lsl #2
   2b9c4:	cmp	r0, #0
   2b9c8:	beq	2b9f8 <str_set_visit@@Base+0x4d4>
   2b9cc:	add	r3, r3, #1
   2b9d0:	cmp	r0, #2
   2b9d4:	and	r2, r5, r3
   2b9d8:	beq	2b9e4 <str_set_visit@@Base+0x4c0>
   2b9dc:	cmp	r6, r0
   2b9e0:	beq	2ba04 <str_set_visit@@Base+0x4e0>
   2b9e4:	ldr	r0, [r4, r2, lsl #2]
   2b9e8:	add	r3, r3, #1
   2b9ec:	cmp	r0, #0
   2b9f0:	add	ip, r4, r2, lsl #2
   2b9f4:	bne	2b9d0 <str_set_visit@@Base+0x4ac>
   2b9f8:	mov	r0, #0
   2b9fc:	add	sp, sp, #28
   2ba00:	pop	{r4, r5, r6, r7, pc}
   2ba04:	ldr	r3, [r7, #8]
   2ba08:	mov	r2, #2
   2ba0c:	sub	r3, r3, #1
   2ba10:	str	r2, [ip]
   2ba14:	str	r3, [r7, #8]
   2ba18:	add	sp, sp, #28
   2ba1c:	pop	{r4, r5, r6, r7, pc}
   2ba20:	svccs	0x00693b52

0002ba24 <ptr_set_clear@@Base>:
   2ba24:	b	2b584 <str_set_visit@@Base+0x60>

0002ba28 <ptr_set_destroy@@Base>:
   2ba28:	push	{r4, r5, r6, r7, r8, lr}
   2ba2c:	subs	r7, r1, #0
   2ba30:	mov	r6, r0
   2ba34:	beq	2ba88 <ptr_set_destroy@@Base+0x60>
   2ba38:	ldr	r3, [r0, #12]
   2ba3c:	ldr	r5, [r0]
   2ba40:	cmp	r3, #0
   2ba44:	beq	2ba88 <ptr_set_destroy@@Base+0x60>
   2ba48:	mov	r8, r2
   2ba4c:	sub	r5, r5, #4
   2ba50:	mov	r4, #0
   2ba54:	b	2ba60 <ptr_set_destroy@@Base+0x38>
   2ba58:	cmp	r4, r3
   2ba5c:	bcs	2ba88 <ptr_set_destroy@@Base+0x60>
   2ba60:	ldr	r1, [r5, #4]!
   2ba64:	add	r4, r4, #1
   2ba68:	cmp	r1, #0
   2ba6c:	cmpne	r1, #2
   2ba70:	beq	2ba58 <ptr_set_destroy@@Base+0x30>
   2ba74:	mov	r0, r8
   2ba78:	blx	r7
   2ba7c:	ldr	r3, [r6, #12]
   2ba80:	cmp	r4, r3
   2ba84:	bcc	2ba60 <ptr_set_destroy@@Base+0x38>
   2ba88:	mov	r0, r6
   2ba8c:	pop	{r4, r5, r6, r7, r8, lr}
   2ba90:	b	2b584 <str_set_visit@@Base+0x60>

0002ba94 <ptr_set_init@@Base>:
   2ba94:	cmp	r1, #2
   2ba98:	push	{r4, r5, r6, lr}
   2ba9c:	mov	r4, #4
   2baa0:	mov	r5, r0
   2baa4:	bls	2babc <ptr_set_init@@Base+0x28>
   2baa8:	mov	r2, #179	; 0xb3
   2baac:	lsl	r4, r4, #1
   2bab0:	mul	r3, r2, r4
   2bab4:	cmp	r1, r3, lsr #8
   2bab8:	bhi	2baac <ptr_set_init@@Base+0x18>
   2babc:	mov	r1, #4
   2bac0:	mov	r0, r4
   2bac4:	bl	13f9c <calloc@plt>
   2bac8:	cmp	r0, #0
   2bacc:	str	r0, [r5]
   2bad0:	movne	r0, #0
   2bad4:	strne	r4, [r5, #12]
   2bad8:	strne	r0, [r5, #4]
   2badc:	strne	r0, [r5, #8]
   2bae0:	mvneq	r0, #0
   2bae4:	pop	{r4, r5, r6, pc}

0002bae8 <ptr_set_resize@@Base>:
   2bae8:	b	2b7e8 <str_set_visit@@Base+0x2c4>

0002baec <ptr_set_insert@@Base>:
   2baec:	mov	r2, r3
   2baf0:	ldr	r3, [sp]
   2baf4:	b	2b5b4 <str_set_visit@@Base+0x90>

0002baf8 <ptr_set_insert_item@@Base>:
   2baf8:	mov	r3, r2
   2bafc:	mov	r2, r1
   2bb00:	b	2b5b4 <str_set_visit@@Base+0x90>

0002bb04 <ptr_set_find@@Base>:
   2bb04:	mov	r3, r0
   2bb08:	mov	r2, r1
   2bb0c:	ldr	r0, [r0]
   2bb10:	add	r1, r3, #12
   2bb14:	b	2b8e0 <str_set_visit@@Base+0x3bc>

0002bb18 <ptr_set_find_item@@Base>:
   2bb18:	mov	r3, r0
   2bb1c:	mov	r2, r1
   2bb20:	ldr	r0, [r0]
   2bb24:	add	r1, r3, #12
   2bb28:	b	2b8e0 <str_set_visit@@Base+0x3bc>

0002bb2c <ptr_set_remove@@Base>:
   2bb2c:	b	2b96c <str_set_visit@@Base+0x448>

0002bb30 <ptr_set_remove_item@@Base>:
   2bb30:	b	2b96c <str_set_visit@@Base+0x448>

0002bb34 <ptr_set_visit@@Base>:
   2bb34:	ldr	r3, [r0, #12]
   2bb38:	push	{r4, r5, r6, r7, r8, lr}
   2bb3c:	cmp	r3, #0
   2bb40:	ldr	r5, [r0]
   2bb44:	popeq	{r4, r5, r6, r7, r8, pc}
   2bb48:	mov	r7, r2
   2bb4c:	mov	r6, r1
   2bb50:	mov	r8, r0
   2bb54:	sub	r5, r5, #4
   2bb58:	mov	r4, #0
   2bb5c:	b	2bb68 <ptr_set_visit@@Base+0x34>
   2bb60:	cmp	r4, r3
   2bb64:	bcs	2bb90 <ptr_set_visit@@Base+0x5c>
   2bb68:	ldr	r1, [r5, #4]!
   2bb6c:	add	r4, r4, #1
   2bb70:	cmp	r1, #0
   2bb74:	cmpne	r1, #2
   2bb78:	beq	2bb60 <ptr_set_visit@@Base+0x2c>
   2bb7c:	mov	r0, r7
   2bb80:	blx	r6
   2bb84:	ldr	r3, [r8, #12]
   2bb88:	cmp	r4, r3
   2bb8c:	bcc	2bb68 <ptr_set_visit@@Base+0x34>
   2bb90:	pop	{r4, r5, r6, r7, r8, pc}
   2bb94:	push	{r4, lr}
   2bb98:	mov	r4, r0
   2bb9c:	ldr	r0, [r0]
   2bba0:	cmp	r0, #0
   2bba4:	beq	2bbac <ptr_set_visit@@Base+0x78>
   2bba8:	bl	13fcc <free@plt>
   2bbac:	mov	r3, #0
   2bbb0:	str	r3, [r4]
   2bbb4:	str	r3, [r4, #4]
   2bbb8:	str	r3, [r4, #8]
   2bbbc:	str	r3, [r4, #12]
   2bbc0:	pop	{r4, pc}
   2bbc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bbc8:	sub	sp, sp, #36	; 0x24
   2bbcc:	ldr	r4, [pc, #588]	; 2be20 <ptr_set_visit@@Base+0x2ec>
   2bbd0:	cmp	r3, #0
   2bbd4:	str	r3, [sp, #12]
   2bbd8:	str	r1, [sp, #16]
   2bbdc:	add	r4, pc, r4
   2bbe0:	beq	2be00 <ptr_set_visit@@Base+0x2cc>
   2bbe4:	ldr	r3, [sp, #12]
   2bbe8:	cmp	r3, #2
   2bbec:	beq	2bdb8 <ptr_set_visit@@Base+0x284>
   2bbf0:	ldr	r3, [sp, #12]
   2bbf4:	cmp	r3, #1
   2bbf8:	beq	2bd98 <ptr_set_visit@@Base+0x264>
   2bbfc:	ldr	r8, [r0, #12]
   2bc00:	mov	r3, #179	; 0xb3
   2bc04:	ldr	r1, [r0, #8]
   2bc08:	mul	r3, r3, r8
   2bc0c:	mov	r9, r2
   2bc10:	mov	sl, r0
   2bc14:	cmp	r1, r3, lsr #8
   2bc18:	bcc	2bc30 <ptr_set_visit@@Base+0xfc>
   2bc1c:	lsl	r1, r1, #1
   2bc20:	bl	2be58 <ptr_set_visit@@Base+0x324>
   2bc24:	cmp	r0, #0
   2bc28:	bne	2bdd8 <ptr_set_visit@@Base+0x2a4>
   2bc2c:	ldr	r8, [sl, #12]
   2bc30:	ldr	r3, [pc, #492]	; 2be24 <ptr_set_visit@@Base+0x2f0>
   2bc34:	mov	r2, r9
   2bc38:	str	r3, [sp]
   2bc3c:	add	r3, sp, #24
   2bc40:	str	r3, [sp, #4]
   2bc44:	ldr	r0, [sp, #16]
   2bc48:	mov	r3, #0
   2bc4c:	ldr	r7, [sl]
   2bc50:	bl	3cbc8 <cmetrohash64_1@@Base>
   2bc54:	ldr	r3, [sp, #72]	; 0x48
   2bc58:	ldr	r6, [sp, #24]
   2bc5c:	sub	r3, r3, #2
   2bc60:	sub	r8, r8, #1
   2bc64:	cmp	r3, #1
   2bc68:	and	r4, r8, r6
   2bc6c:	bls	2bd44 <ptr_set_visit@@Base+0x210>
   2bc70:	ldr	r5, [r7, r4, lsl #2]
   2bc74:	add	r4, r7, r4, lsl #2
   2bc78:	cmp	r5, #0
   2bc7c:	moveq	fp, r4
   2bc80:	beq	2bd20 <ptr_set_visit@@Base+0x1ec>
   2bc84:	str	sl, [sp, #20]
   2bc88:	add	r6, r6, #1
   2bc8c:	mov	sl, r5
   2bc90:	mov	fp, #0
   2bc94:	ldr	r5, [sp, #16]
   2bc98:	b	2bcb4 <ptr_set_visit@@Base+0x180>
   2bc9c:	and	r4, r8, r6
   2bca0:	add	r6, r6, #1
   2bca4:	ldr	sl, [r7, r4, lsl #2]
   2bca8:	add	r4, r7, r4, lsl #2
   2bcac:	cmp	sl, #0
   2bcb0:	beq	2bd14 <ptr_set_visit@@Base+0x1e0>
   2bcb4:	cmp	sl, #2
   2bcb8:	beq	2bd08 <ptr_set_visit@@Base+0x1d4>
   2bcbc:	ldr	r2, [sl, #4]
   2bcc0:	ldr	r1, [r2, #4]
   2bcc4:	cmp	r9, r1
   2bcc8:	bne	2bc9c <ptr_set_visit@@Base+0x168>
   2bccc:	ldr	r1, [r2]
   2bcd0:	mov	r0, r5
   2bcd4:	mov	r2, r9
   2bcd8:	bl	13ff0 <memcmp@plt>
   2bcdc:	cmp	r0, #0
   2bce0:	bne	2bc9c <ptr_set_visit@@Base+0x168>
   2bce4:	ldr	r3, [sp, #72]	; 0x48
   2bce8:	mov	r5, sl
   2bcec:	cmp	r3, #0
   2bcf0:	bne	2bd38 <ptr_set_visit@@Base+0x204>
   2bcf4:	ldr	r3, [sp, #12]
   2bcf8:	mov	r0, r5
   2bcfc:	str	r3, [r4]
   2bd00:	add	sp, sp, #36	; 0x24
   2bd04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bd08:	cmp	fp, #0
   2bd0c:	moveq	fp, r4
   2bd10:	b	2bc9c <ptr_set_visit@@Base+0x168>
   2bd14:	cmp	fp, #0
   2bd18:	ldr	sl, [sp, #20]
   2bd1c:	moveq	fp, r4
   2bd20:	ldr	r2, [sl, #8]
   2bd24:	ldr	r3, [sp, #12]
   2bd28:	mov	r5, #0
   2bd2c:	add	r2, r2, #1
   2bd30:	str	r2, [sl, #8]
   2bd34:	str	r3, [fp]
   2bd38:	mov	r0, r5
   2bd3c:	add	sp, sp, #36	; 0x24
   2bd40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bd44:	ldr	r2, [r7, r4, lsl #2]
   2bd48:	ldr	r3, [sl, #8]
   2bd4c:	cmp	r2, #0
   2bd50:	cmpne	r2, #2
   2bd54:	add	r3, r3, #1
   2bd58:	str	r3, [sl, #8]
   2bd5c:	add	r4, r7, r4, lsl #2
   2bd60:	beq	2bd88 <ptr_set_visit@@Base+0x254>
   2bd64:	add	r6, r6, #1
   2bd68:	and	r3, r8, r6
   2bd6c:	add	r6, r6, #1
   2bd70:	ldr	r2, [r7, r3, lsl #2]
   2bd74:	add	r3, r7, r3, lsl #2
   2bd78:	cmp	r2, #0
   2bd7c:	cmpne	r2, #2
   2bd80:	bne	2bd68 <ptr_set_visit@@Base+0x234>
   2bd84:	mov	r4, r3
   2bd88:	ldr	r3, [sp, #12]
   2bd8c:	mov	r5, #0
   2bd90:	str	r3, [r4]
   2bd94:	b	2bd38 <ptr_set_visit@@Base+0x204>
   2bd98:	ldr	r3, [pc, #136]	; 2be28 <ptr_set_visit@@Base+0x2f4>
   2bd9c:	ldr	r1, [pc, #136]	; 2be2c <ptr_set_visit@@Base+0x2f8>
   2bda0:	ldr	r0, [pc, #136]	; 2be30 <ptr_set_visit@@Base+0x2fc>
   2bda4:	add	r3, pc, r3
   2bda8:	mov	r2, #116	; 0x74
   2bdac:	add	r1, pc, r1
   2bdb0:	add	r0, pc, r0
   2bdb4:	bl	14140 <__assert_fail@plt>
   2bdb8:	ldr	r3, [pc, #116]	; 2be34 <ptr_set_visit@@Base+0x300>
   2bdbc:	ldr	r1, [pc, #116]	; 2be38 <ptr_set_visit@@Base+0x304>
   2bdc0:	ldr	r0, [pc, #116]	; 2be3c <ptr_set_visit@@Base+0x308>
   2bdc4:	add	r3, pc, r3
   2bdc8:	mov	r2, #115	; 0x73
   2bdcc:	add	r1, pc, r1
   2bdd0:	add	r0, pc, r0
   2bdd4:	bl	14140 <__assert_fail@plt>
   2bdd8:	ldr	r3, [pc, #96]	; 2be40 <ptr_set_visit@@Base+0x30c>
   2bddc:	ldr	r2, [pc, #96]	; 2be44 <ptr_set_visit@@Base+0x310>
   2bde0:	ldr	r1, [pc, #96]	; 2be48 <ptr_set_visit@@Base+0x314>
   2bde4:	ldr	r3, [r4, r3]
   2bde8:	add	r2, pc, r2
   2bdec:	add	r1, pc, r1
   2bdf0:	ldr	r0, [r3]
   2bdf4:	bl	1408c <fprintf@plt>
   2bdf8:	mov	r0, #1
   2bdfc:	bl	14068 <exit@plt>
   2be00:	ldr	r3, [pc, #68]	; 2be4c <ptr_set_visit@@Base+0x318>
   2be04:	ldr	r1, [pc, #68]	; 2be50 <ptr_set_visit@@Base+0x31c>
   2be08:	ldr	r0, [pc, #68]	; 2be54 <ptr_set_visit@@Base+0x320>
   2be0c:	add	r3, pc, r3
   2be10:	mov	r2, #114	; 0x72
   2be14:	add	r1, pc, r1
   2be18:	add	r0, pc, r0
   2be1c:	bl	14140 <__assert_fail@plt>
   2be20:	andeq	pc, r3, ip, lsl r4	; <UNPREDICTABLE>
   2be24:	svccs	0x00693b52
   2be28:	andeq	fp, r2, r0, ror fp
   2be2c:	andeq	fp, r2, r4, asr sl
   2be30:	andeq	fp, r2, r8, ror #21
   2be34:	andeq	fp, r2, r0, asr fp
   2be38:	andeq	fp, r2, r4, lsr sl
   2be3c:			; <UNDEFINED> instruction: 0x0002bab0
   2be40:	andeq	r0, r0, r0, lsr #1
   2be44:	andeq	fp, r2, r8, asr #21
   2be48:	strdeq	fp, [r2], -r8
   2be4c:	andeq	fp, r2, r8, lsl #22
   2be50:	andeq	fp, r2, ip, ror #19
   2be54:	andeq	fp, r2, r0, asr sl
   2be58:	ldr	r3, [r0, #8]
   2be5c:	push	{r4, r5, r6, r7, r8, lr}
   2be60:	cmp	r1, r3
   2be64:	movcc	r1, r3
   2be68:	cmp	r1, #2
   2be6c:	sub	sp, sp, #24
   2be70:	mov	r6, r0
   2be74:	ldr	r7, [r0]
   2be78:	mov	r5, #4
   2be7c:	bls	2be94 <ptr_set_visit@@Base+0x360>
   2be80:	mov	r2, #179	; 0xb3
   2be84:	lsl	r5, r5, #1
   2be88:	mul	r3, r2, r5
   2be8c:	cmp	r1, r3, lsr #8
   2be90:	bhi	2be84 <ptr_set_visit@@Base+0x350>
   2be94:	mov	r1, #4
   2be98:	mov	r0, r5
   2be9c:	bl	13f9c <calloc@plt>
   2bea0:	cmp	r0, #0
   2bea4:	str	r0, [sp, #8]
   2bea8:	beq	2bf4c <ptr_set_visit@@Base+0x418>
   2beac:	ldr	r2, [r6, #12]
   2beb0:	mov	r4, #0
   2beb4:	cmp	r2, r4
   2beb8:	str	r5, [sp, #20]
   2bebc:	str	r4, [sp, #12]
   2bec0:	subne	r5, r7, #4
   2bec4:	str	r4, [sp, #16]
   2bec8:	addne	r7, sp, #8
   2becc:	movne	r8, #3
   2bed0:	bne	2bee0 <ptr_set_visit@@Base+0x3ac>
   2bed4:	b	2bf44 <ptr_set_visit@@Base+0x410>
   2bed8:	cmp	r2, r4
   2bedc:	bls	2bf14 <ptr_set_visit@@Base+0x3e0>
   2bee0:	ldr	r3, [r5, #4]!
   2bee4:	add	r4, r4, #1
   2bee8:	cmp	r3, #0
   2beec:	cmpne	r3, #2
   2bef0:	beq	2bed8 <ptr_set_visit@@Base+0x3a4>
   2bef4:	ldr	r1, [r3, #4]
   2bef8:	mov	r0, r7
   2befc:	ldm	r1, {r1, r2}
   2bf00:	str	r8, [sp]
   2bf04:	bl	2bbc4 <ptr_set_visit@@Base+0x90>
   2bf08:	ldr	r2, [r6, #12]
   2bf0c:	cmp	r2, r4
   2bf10:	bhi	2bee0 <ptr_set_visit@@Base+0x3ac>
   2bf14:	mov	r0, r6
   2bf18:	bl	2bb94 <ptr_set_visit@@Base+0x60>
   2bf1c:	mov	ip, r7
   2bf20:	mov	lr, #0
   2bf24:	ldm	ip!, {r0, r1, r2, r3}
   2bf28:	str	r0, [r6]
   2bf2c:	str	r1, [r6, #4]
   2bf30:	str	r2, [r6, #8]
   2bf34:	str	r3, [r6, #12]
   2bf38:	mov	r0, lr
   2bf3c:	add	sp, sp, #24
   2bf40:	pop	{r4, r5, r6, r7, r8, pc}
   2bf44:	add	r7, sp, #8
   2bf48:	b	2bf14 <ptr_set_visit@@Base+0x3e0>
   2bf4c:	mvn	lr, #0
   2bf50:	b	2bf38 <ptr_set_visit@@Base+0x404>
   2bf54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bf58:	sub	sp, sp, #20
   2bf5c:	ldr	r5, [r0]
   2bf60:	cmp	r5, #0
   2bf64:	beq	2c020 <ptr_set_visit@@Base+0x4ec>
   2bf68:	ldr	r3, [pc, #192]	; 2c030 <ptr_set_visit@@Base+0x4fc>
   2bf6c:	ldr	r7, [r0, #12]
   2bf70:	str	r3, [sp]
   2bf74:	add	r3, sp, #8
   2bf78:	str	r3, [sp, #4]
   2bf7c:	mov	r9, r0
   2bf80:	mov	r3, #0
   2bf84:	mov	r0, r1
   2bf88:	mov	r6, r2
   2bf8c:	mov	r8, r1
   2bf90:	bl	3cbc8 <cmetrohash64_1@@Base>
   2bf94:	ldr	sl, [sp, #8]
   2bf98:	sub	r7, r7, #1
   2bf9c:	and	r3, r7, sl
   2bfa0:	ldr	fp, [r5, r3, lsl #2]
   2bfa4:	add	r4, r5, r3, lsl #2
   2bfa8:	cmp	fp, #0
   2bfac:	beq	2c020 <ptr_set_visit@@Base+0x4ec>
   2bfb0:	add	sl, sl, #1
   2bfb4:	b	2bfd0 <ptr_set_visit@@Base+0x49c>
   2bfb8:	and	r3, r7, sl
   2bfbc:	add	sl, sl, #1
   2bfc0:	ldr	fp, [r5, r3, lsl #2]
   2bfc4:	add	r4, r5, r3, lsl #2
   2bfc8:	cmp	fp, #0
   2bfcc:	beq	2c020 <ptr_set_visit@@Base+0x4ec>
   2bfd0:	cmp	fp, #2
   2bfd4:	beq	2bfb8 <ptr_set_visit@@Base+0x484>
   2bfd8:	ldr	r3, [fp, #4]
   2bfdc:	ldr	r2, [r3, #4]
   2bfe0:	cmp	r6, r2
   2bfe4:	bne	2bfb8 <ptr_set_visit@@Base+0x484>
   2bfe8:	ldr	r1, [r3]
   2bfec:	mov	r2, r6
   2bff0:	mov	r0, r8
   2bff4:	bl	13ff0 <memcmp@plt>
   2bff8:	cmp	r0, #0
   2bffc:	bne	2bfb8 <ptr_set_visit@@Base+0x484>
   2c000:	ldr	r3, [r9, #8]
   2c004:	mov	r2, #2
   2c008:	sub	r3, r3, #1
   2c00c:	str	r2, [r4]
   2c010:	mov	r0, fp
   2c014:	str	r3, [r9, #8]
   2c018:	add	sp, sp, #20
   2c01c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c020:	mov	fp, #0
   2c024:	mov	r0, fp
   2c028:	add	sp, sp, #20
   2c02c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c030:	svccs	0x00693b52
   2c034:	push	{r4, r5, r6, r7, r8, r9, lr}
   2c038:	subs	r7, r0, #0
   2c03c:	sub	sp, sp, #20
   2c040:	beq	2c0e0 <ptr_set_visit@@Base+0x5ac>
   2c044:	mov	r6, r3
   2c048:	ldr	r3, [pc, #160]	; 2c0f0 <ptr_set_visit@@Base+0x5bc>
   2c04c:	ldr	r8, [r1]
   2c050:	mov	r9, r2
   2c054:	str	r3, [sp]
   2c058:	add	r3, sp, #8
   2c05c:	str	r3, [sp, #4]
   2c060:	mov	r2, r6
   2c064:	mov	r3, #0
   2c068:	mov	r0, r9
   2c06c:	bl	3cbc8 <cmetrohash64_1@@Base>
   2c070:	ldr	r5, [sp, #8]
   2c074:	sub	r8, r8, #1
   2c078:	and	r3, r8, r5
   2c07c:	ldr	r4, [r7, r3, lsl #2]
   2c080:	cmp	r4, #0
   2c084:	beq	2c0e0 <ptr_set_visit@@Base+0x5ac>
   2c088:	add	r5, r5, #1
   2c08c:	b	2c0a4 <ptr_set_visit@@Base+0x570>
   2c090:	and	r1, r8, r5
   2c094:	add	r5, r5, #1
   2c098:	ldr	r4, [r7, r1, lsl #2]
   2c09c:	cmp	r4, #0
   2c0a0:	beq	2c0e0 <ptr_set_visit@@Base+0x5ac>
   2c0a4:	cmp	r4, #2
   2c0a8:	beq	2c090 <ptr_set_visit@@Base+0x55c>
   2c0ac:	ldr	r3, [r4, #4]
   2c0b0:	ldr	r2, [r3, #4]
   2c0b4:	cmp	r6, r2
   2c0b8:	bne	2c090 <ptr_set_visit@@Base+0x55c>
   2c0bc:	ldr	r1, [r3]
   2c0c0:	mov	r2, r6
   2c0c4:	mov	r0, r9
   2c0c8:	bl	13ff0 <memcmp@plt>
   2c0cc:	cmp	r0, #0
   2c0d0:	bne	2c090 <ptr_set_visit@@Base+0x55c>
   2c0d4:	mov	r0, r4
   2c0d8:	add	sp, sp, #20
   2c0dc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2c0e0:	mov	r4, #0
   2c0e4:	mov	r0, r4
   2c0e8:	add	sp, sp, #20
   2c0ec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2c0f0:	svccs	0x00693b52

0002c0f4 <fb_symbol_table_clear@@Base>:
   2c0f4:	b	2bb94 <ptr_set_visit@@Base+0x60>

0002c0f8 <fb_symbol_table_destroy@@Base>:
   2c0f8:	push	{r4, r5, r6, r7, r8, lr}
   2c0fc:	subs	r7, r1, #0
   2c100:	mov	r6, r0
   2c104:	beq	2c158 <fb_symbol_table_destroy@@Base+0x60>
   2c108:	ldr	r3, [r0, #12]
   2c10c:	ldr	r5, [r0]
   2c110:	cmp	r3, #0
   2c114:	beq	2c158 <fb_symbol_table_destroy@@Base+0x60>
   2c118:	mov	r8, r2
   2c11c:	sub	r5, r5, #4
   2c120:	mov	r4, #0
   2c124:	b	2c130 <fb_symbol_table_destroy@@Base+0x38>
   2c128:	cmp	r4, r3
   2c12c:	bcs	2c158 <fb_symbol_table_destroy@@Base+0x60>
   2c130:	ldr	r1, [r5, #4]!
   2c134:	add	r4, r4, #1
   2c138:	cmp	r1, #0
   2c13c:	cmpne	r1, #2
   2c140:	beq	2c128 <fb_symbol_table_destroy@@Base+0x30>
   2c144:	mov	r0, r8
   2c148:	blx	r7
   2c14c:	ldr	r3, [r6, #12]
   2c150:	cmp	r4, r3
   2c154:	bcc	2c130 <fb_symbol_table_destroy@@Base+0x38>
   2c158:	mov	r0, r6
   2c15c:	pop	{r4, r5, r6, r7, r8, lr}
   2c160:	b	2bb94 <ptr_set_visit@@Base+0x60>

0002c164 <fb_symbol_table_init@@Base>:
   2c164:	cmp	r1, #2
   2c168:	push	{r4, r5, r6, lr}
   2c16c:	mov	r4, #4
   2c170:	mov	r5, r0
   2c174:	bls	2c18c <fb_symbol_table_init@@Base+0x28>
   2c178:	mov	r2, #179	; 0xb3
   2c17c:	lsl	r4, r4, #1
   2c180:	mul	r3, r2, r4
   2c184:	cmp	r1, r3, lsr #8
   2c188:	bhi	2c17c <fb_symbol_table_init@@Base+0x18>
   2c18c:	mov	r1, #4
   2c190:	mov	r0, r4
   2c194:	bl	13f9c <calloc@plt>
   2c198:	cmp	r0, #0
   2c19c:	str	r0, [r5]
   2c1a0:	movne	r0, #0
   2c1a4:	strne	r4, [r5, #12]
   2c1a8:	strne	r0, [r5, #4]
   2c1ac:	strne	r0, [r5, #8]
   2c1b0:	mvneq	r0, #0
   2c1b4:	pop	{r4, r5, r6, pc}

0002c1b8 <fb_symbol_table_resize@@Base>:
   2c1b8:	b	2be58 <ptr_set_visit@@Base+0x324>

0002c1bc <fb_symbol_table_insert@@Base>:
   2c1bc:	b	2bbc4 <ptr_set_visit@@Base+0x90>

0002c1c0 <fb_symbol_table_insert_item@@Base>:
   2c1c0:	mov	r3, r1
   2c1c4:	ldr	r1, [r1, #4]
   2c1c8:	push	{lr}		; (str lr, [sp, #-4]!)
   2c1cc:	sub	sp, sp, #12
   2c1d0:	ldm	r1, {r1, ip}
   2c1d4:	str	r2, [sp]
   2c1d8:	mov	r2, ip
   2c1dc:	bl	2bbc4 <ptr_set_visit@@Base+0x90>
   2c1e0:	add	sp, sp, #12
   2c1e4:	pop	{pc}		; (ldr pc, [sp], #4)

0002c1e8 <fb_symbol_table_find@@Base>:
   2c1e8:	mov	ip, r0
   2c1ec:	mov	r3, r2
   2c1f0:	ldr	r0, [r0]
   2c1f4:	mov	r2, r1
   2c1f8:	add	r1, ip, #12
   2c1fc:	b	2c034 <ptr_set_visit@@Base+0x500>

0002c200 <fb_symbol_table_find_item@@Base>:
   2c200:	ldr	r2, [r1, #4]
   2c204:	add	r1, r0, #12
   2c208:	ldr	r0, [r0]
   2c20c:	ldm	r2, {r2, r3}
   2c210:	b	2c034 <ptr_set_visit@@Base+0x500>

0002c214 <fb_symbol_table_remove@@Base>:
   2c214:	b	2bf54 <ptr_set_visit@@Base+0x420>

0002c218 <fb_symbol_table_remove_item@@Base>:
   2c218:	ldr	r3, [r1, #4]
   2c21c:	ldm	r3, {r1, r2}
   2c220:	b	2bf54 <ptr_set_visit@@Base+0x420>

0002c224 <fb_symbol_table_visit@@Base>:
   2c224:	ldr	r3, [r0, #12]
   2c228:	push	{r4, r5, r6, r7, r8, lr}
   2c22c:	cmp	r3, #0
   2c230:	ldr	r5, [r0]
   2c234:	popeq	{r4, r5, r6, r7, r8, pc}
   2c238:	mov	r7, r2
   2c23c:	mov	r6, r1
   2c240:	mov	r8, r0
   2c244:	sub	r5, r5, #4
   2c248:	mov	r4, #0
   2c24c:	b	2c258 <fb_symbol_table_visit@@Base+0x34>
   2c250:	cmp	r4, r3
   2c254:	bcs	2c280 <fb_symbol_table_visit@@Base+0x5c>
   2c258:	ldr	r1, [r5, #4]!
   2c25c:	add	r4, r4, #1
   2c260:	cmp	r1, #0
   2c264:	cmpne	r1, #2
   2c268:	beq	2c250 <fb_symbol_table_visit@@Base+0x2c>
   2c26c:	mov	r0, r7
   2c270:	blx	r6
   2c274:	ldr	r3, [r8, #12]
   2c278:	cmp	r4, r3
   2c27c:	bcc	2c258 <fb_symbol_table_visit@@Base+0x34>
   2c280:	pop	{r4, r5, r6, r7, r8, pc}
   2c284:	push	{r4, lr}
   2c288:	mov	r4, r0
   2c28c:	ldr	r0, [r0]
   2c290:	cmp	r0, #0
   2c294:	beq	2c29c <fb_symbol_table_visit@@Base+0x78>
   2c298:	bl	13fcc <free@plt>
   2c29c:	mov	r3, #0
   2c2a0:	str	r3, [r4]
   2c2a4:	str	r3, [r4, #4]
   2c2a8:	str	r3, [r4, #8]
   2c2ac:	str	r3, [r4, #12]
   2c2b0:	pop	{r4, pc}
   2c2b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c2b8:	sub	sp, sp, #28
   2c2bc:	ldr	r4, [pc, #1296]	; 2c7d4 <fb_symbol_table_visit@@Base+0x5b0>
   2c2c0:	cmp	r3, #0
   2c2c4:	str	r3, [sp, #12]
   2c2c8:	str	r1, [sp, #4]
   2c2cc:	str	r2, [sp, #20]
   2c2d0:	str	r0, [sp, #16]
   2c2d4:	add	r4, pc, r4
   2c2d8:	beq	2c74c <fb_symbol_table_visit@@Base+0x528>
   2c2dc:	ldr	r3, [sp, #12]
   2c2e0:	cmp	r3, #2
   2c2e4:	beq	2c78c <fb_symbol_table_visit@@Base+0x568>
   2c2e8:	ldr	r3, [sp, #12]
   2c2ec:	cmp	r3, #1
   2c2f0:	beq	2c76c <fb_symbol_table_visit@@Base+0x548>
   2c2f4:	ldr	r5, [sp, #16]
   2c2f8:	mov	r3, #179	; 0xb3
   2c2fc:	ldr	r2, [r5, #12]
   2c300:	ldr	r1, [r5, #8]
   2c304:	mul	r3, r3, r2
   2c308:	cmp	r1, r3, lsr #8
   2c30c:	bcc	2c324 <fb_symbol_table_visit@@Base+0x100>
   2c310:	lsl	r1, r1, #1
   2c314:	bl	2c814 <fb_symbol_table_visit@@Base+0x5f0>
   2c318:	cmp	r0, #0
   2c31c:	bne	2c7ac <fb_symbol_table_visit@@Base+0x588>
   2c320:	ldr	r2, [r5, #12]
   2c324:	sub	r2, r2, #1
   2c328:	ldr	r3, [sp, #20]
   2c32c:	str	r2, [sp]
   2c330:	ldr	r2, [sp, #16]
   2c334:	cmp	r3, #0
   2c338:	ldr	r7, [r2]
   2c33c:	ble	2c648 <fb_symbol_table_visit@@Base+0x424>
   2c340:	mov	r4, #0
   2c344:	ldr	r5, [sp, #4]
   2c348:	ldr	r9, [pc, #1160]	; 2c7d8 <fb_symbol_table_visit@@Base+0x5b4>
   2c34c:	ldr	sl, [pc, #1160]	; 2c7dc <fb_symbol_table_visit@@Base+0x5b8>
   2c350:	ldr	r8, [pc, #1160]	; 2c7e0 <fb_symbol_table_visit@@Base+0x5bc>
   2c354:	mov	r6, r4
   2c358:	mov	lr, r3
   2c35c:	mvn	fp, #0
   2c360:	cmp	lr, #0
   2c364:	ldrb	r1, [r5]
   2c368:	moveq	r2, r6
   2c36c:	moveq	r0, fp
   2c370:	beq	2c3b8 <fb_symbol_table_visit@@Base+0x194>
   2c374:	cmp	r1, #46	; 0x2e
   2c378:	addeq	ip, r5, #1
   2c37c:	moveq	r0, fp
   2c380:	moveq	r2, r6
   2c384:	beq	2c3c4 <fb_symbol_table_visit@@Base+0x1a0>
   2c388:	mov	r3, r5
   2c38c:	mov	r0, r6
   2c390:	b	2c3a4 <fb_symbol_table_visit@@Base+0x180>
   2c394:	ldrb	ip, [r3, #1]!
   2c398:	cmp	ip, #46	; 0x2e
   2c39c:	beq	2c414 <fb_symbol_table_visit@@Base+0x1f0>
   2c3a0:	mov	r0, r2
   2c3a4:	add	r2, r0, #1
   2c3a8:	cmp	r2, lr
   2c3ac:	bne	2c394 <fb_symbol_table_visit@@Base+0x170>
   2c3b0:	cmp	r0, #0
   2c3b4:	beq	2c438 <fb_symbol_table_visit@@Base+0x214>
   2c3b8:	cmp	r1, #0
   2c3bc:	add	ip, r5, #1
   2c3c0:	beq	2c438 <fb_symbol_table_visit@@Base+0x214>
   2c3c4:	add	r0, r5, r0
   2c3c8:	mov	r3, r9
   2c3cc:	b	2c3dc <fb_symbol_table_visit@@Base+0x1b8>
   2c3d0:	ldrb	r1, [ip], #1
   2c3d4:	cmp	r1, #0
   2c3d8:	beq	2c3ec <fb_symbol_table_visit@@Base+0x1c8>
   2c3dc:	add	r3, r3, r3, lsl #5
   2c3e0:	cmp	ip, r0
   2c3e4:	eor	r3, r3, r1
   2c3e8:	bne	2c3d0 <fb_symbol_table_visit@@Base+0x1ac>
   2c3ec:	eor	r4, r4, sl
   2c3f0:	eor	r3, r3, r4
   2c3f4:	cmp	r2, lr
   2c3f8:	mul	r4, r8, r3
   2c3fc:	beq	2c448 <fb_symbol_table_visit@@Base+0x224>
   2c400:	mvn	r3, r2
   2c404:	add	r2, r2, #1
   2c408:	add	lr, lr, r3
   2c40c:	add	r5, r5, r2
   2c410:	b	2c360 <fb_symbol_table_visit@@Base+0x13c>
   2c414:	cmp	r0, #0
   2c418:	beq	2c428 <fb_symbol_table_visit@@Base+0x204>
   2c41c:	cmp	r1, #0
   2c420:	add	ip, r5, #1
   2c424:	bne	2c3c4 <fb_symbol_table_visit@@Base+0x1a0>
   2c428:	eor	r4, r4, #5376	; 0x1500
   2c42c:	eor	r4, r4, #5
   2c430:	mul	r4, r8, r4
   2c434:	b	2c400 <fb_symbol_table_visit@@Base+0x1dc>
   2c438:	eor	r4, r4, #5376	; 0x1500
   2c43c:	ldr	r3, [pc, #924]	; 2c7e0 <fb_symbol_table_visit@@Base+0x5bc>
   2c440:	eor	r4, r4, #5
   2c444:	mul	r4, r3, r4
   2c448:	ldr	r3, [sp]
   2c44c:	and	r5, r3, r4
   2c450:	lsl	r5, r5, #2
   2c454:	ldr	r3, [sp, #64]	; 0x40
   2c458:	sub	r3, r3, #2
   2c45c:	cmp	r3, #1
   2c460:	bls	2c6f4 <fb_symbol_table_visit@@Base+0x4d0>
   2c464:	ldr	r6, [r7, r5]
   2c468:	add	r5, r7, r5
   2c46c:	cmp	r6, #0
   2c470:	moveq	r8, r5
   2c474:	beq	2c564 <fb_symbol_table_visit@@Base+0x340>
   2c478:	mov	r8, #0
   2c47c:	str	r8, [sp, #8]
   2c480:	ldr	r8, [sp, #20]
   2c484:	add	r4, r4, #1
   2c488:	cmp	r6, #2
   2c48c:	beq	2c58c <fb_symbol_table_visit@@Base+0x368>
   2c490:	cmp	r8, #0
   2c494:	ldr	r9, [r6]
   2c498:	ble	2c5a0 <fb_symbol_table_visit@@Base+0x37c>
   2c49c:	cmp	r9, #0
   2c4a0:	beq	2c53c <fb_symbol_table_visit@@Base+0x318>
   2c4a4:	ldr	r3, [r9, #4]
   2c4a8:	ldm	r3, {r2, lr}
   2c4ac:	cmp	r8, lr
   2c4b0:	bcc	2c53c <fb_symbol_table_visit@@Base+0x318>
   2c4b4:	ldr	sl, [sp, #4]
   2c4b8:	mov	fp, r8
   2c4bc:	cmp	lr, #0
   2c4c0:	beq	2c640 <fb_symbol_table_visit@@Base+0x41c>
   2c4c4:	ldrb	r1, [r2]
   2c4c8:	ldrb	r3, [sl]
   2c4cc:	cmp	r1, r3
   2c4d0:	bne	2c53c <fb_symbol_table_visit@@Base+0x318>
   2c4d4:	mov	r1, sl
   2c4d8:	mov	r3, #0
   2c4dc:	b	2c4f0 <fb_symbol_table_visit@@Base+0x2cc>
   2c4e0:	ldrb	ip, [r2, #1]!
   2c4e4:	ldrb	r0, [r1, #1]!
   2c4e8:	cmp	ip, r0
   2c4ec:	bne	2c53c <fb_symbol_table_visit@@Base+0x318>
   2c4f0:	add	r3, r3, #1
   2c4f4:	cmp	r3, lr
   2c4f8:	bne	2c4e0 <fb_symbol_table_visit@@Base+0x2bc>
   2c4fc:	cmp	lr, fp
   2c500:	beq	2c628 <fb_symbol_table_visit@@Base+0x404>
   2c504:	ldrb	r3, [sl, r3]
   2c508:	cmp	r3, #46	; 0x2e
   2c50c:	bne	2c53c <fb_symbol_table_visit@@Base+0x318>
   2c510:	ldr	r9, [r9]
   2c514:	mvn	r3, lr
   2c518:	cmp	r9, #0
   2c51c:	add	lr, lr, #1
   2c520:	add	fp, fp, r3
   2c524:	add	sl, sl, lr
   2c528:	beq	2c53c <fb_symbol_table_visit@@Base+0x318>
   2c52c:	ldr	r3, [r9, #4]
   2c530:	ldm	r3, {r2, lr}
   2c534:	cmp	lr, fp
   2c538:	bls	2c4bc <fb_symbol_table_visit@@Base+0x298>
   2c53c:	ldr	r3, [sp]
   2c540:	and	r5, r3, r4
   2c544:	add	r4, r4, #1
   2c548:	ldr	r6, [r7, r5, lsl #2]
   2c54c:	add	r5, r7, r5, lsl #2
   2c550:	cmp	r6, #0
   2c554:	bne	2c488 <fb_symbol_table_visit@@Base+0x264>
   2c558:	ldr	r8, [sp, #8]
   2c55c:	cmp	r8, #0
   2c560:	moveq	r8, r5
   2c564:	ldr	r2, [sp, #16]
   2c568:	mov	r6, #0
   2c56c:	ldr	r3, [r2, #8]
   2c570:	add	r3, r3, #1
   2c574:	str	r3, [r2, #8]
   2c578:	ldr	r3, [sp, #12]
   2c57c:	str	r3, [r8]
   2c580:	mov	r0, r6
   2c584:	add	sp, sp, #28
   2c588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c58c:	ldr	r2, [sp, #8]
   2c590:	subs	r3, r2, #0
   2c594:	moveq	r3, r5
   2c598:	str	r3, [sp, #8]
   2c59c:	b	2c53c <fb_symbol_table_visit@@Base+0x318>
   2c5a0:	ldr	sl, [sp, #4]
   2c5a4:	mov	fp, r8
   2c5a8:	b	2c5e8 <fb_symbol_table_visit@@Base+0x3c4>
   2c5ac:	ldr	r3, [r9, #4]
   2c5b0:	ldr	r1, [sl, #4]
   2c5b4:	ldr	r2, [r3, #4]
   2c5b8:	ldr	r0, [r1, #4]
   2c5bc:	cmp	r2, r0
   2c5c0:	bne	2c53c <fb_symbol_table_visit@@Base+0x318>
   2c5c4:	ldr	r1, [r1]
   2c5c8:	ldr	r0, [r3]
   2c5cc:	bl	14128 <strncmp@plt>
   2c5d0:	cmp	r0, #0
   2c5d4:	bne	2c53c <fb_symbol_table_visit@@Base+0x318>
   2c5d8:	adds	fp, fp, #1
   2c5dc:	ldr	r9, [r9]
   2c5e0:	ldr	sl, [sl]
   2c5e4:	beq	2c62c <fb_symbol_table_visit@@Base+0x408>
   2c5e8:	adds	r2, r9, #0
   2c5ec:	movne	r2, #1
   2c5f0:	adds	r3, sl, #0
   2c5f4:	movne	r3, #1
   2c5f8:	tst	r2, r3
   2c5fc:	bne	2c5ac <fb_symbol_table_visit@@Base+0x388>
   2c600:	orrs	r3, r2, r3
   2c604:	bne	2c53c <fb_symbol_table_visit@@Base+0x318>
   2c608:	ldr	r3, [sp, #64]	; 0x40
   2c60c:	cmp	r3, #0
   2c610:	bne	2c580 <fb_symbol_table_visit@@Base+0x35c>
   2c614:	ldr	r3, [sp, #12]
   2c618:	mov	r0, r6
   2c61c:	str	r3, [r5]
   2c620:	add	sp, sp, #28
   2c624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c628:	ldr	r9, [r9]
   2c62c:	clz	r9, r9
   2c630:	lsr	r9, r9, #5
   2c634:	cmp	r9, #0
   2c638:	bne	2c608 <fb_symbol_table_visit@@Base+0x3e4>
   2c63c:	b	2c53c <fb_symbol_table_visit@@Base+0x318>
   2c640:	mov	r3, lr
   2c644:	b	2c4fc <fb_symbol_table_visit@@Base+0x2d8>
   2c648:	ldr	r3, [sp, #4]
   2c64c:	cmp	r3, #0
   2c650:	moveq	r4, r3
   2c654:	moveq	r5, r4
   2c658:	beq	2c454 <fb_symbol_table_visit@@Base+0x230>
   2c65c:	ldr	ip, [sp, #4]
   2c660:	ldr	r8, [pc, #368]	; 2c7d8 <fb_symbol_table_visit@@Base+0x5b4>
   2c664:	ldr	r6, [pc, #368]	; 2c7dc <fb_symbol_table_visit@@Base+0x5b8>
   2c668:	ldr	r2, [ip, #4]
   2c66c:	ldr	r5, [pc, #364]	; 2c7e0 <fb_symbol_table_visit@@Base+0x5bc>
   2c670:	ldr	lr, [sp, #20]
   2c674:	ldm	r2, {r0, r3}
   2c678:	mov	r4, #0
   2c67c:	subs	r3, r3, #1
   2c680:	beq	2c6ec <fb_symbol_table_visit@@Base+0x4c8>
   2c684:	ldrb	r2, [r0]
   2c688:	add	r1, r0, #1
   2c68c:	cmp	r2, #0
   2c690:	beq	2c6ec <fb_symbol_table_visit@@Base+0x4c8>
   2c694:	add	r0, r0, r3
   2c698:	mov	r3, r8
   2c69c:	b	2c6ac <fb_symbol_table_visit@@Base+0x488>
   2c6a0:	ldrb	r2, [r1], #1
   2c6a4:	cmp	r2, #0
   2c6a8:	beq	2c6bc <fb_symbol_table_visit@@Base+0x498>
   2c6ac:	add	r3, r3, r3, lsl #5
   2c6b0:	cmp	r1, r0
   2c6b4:	eor	r3, r3, r2
   2c6b8:	bne	2c6a0 <fb_symbol_table_visit@@Base+0x47c>
   2c6bc:	eor	r4, r4, r6
   2c6c0:	eor	r3, r3, r4
   2c6c4:	adds	lr, lr, #1
   2c6c8:	mul	r4, r5, r3
   2c6cc:	ldr	ip, [ip]
   2c6d0:	beq	2c448 <fb_symbol_table_visit@@Base+0x224>
   2c6d4:	cmp	ip, #0
   2c6d8:	beq	2c448 <fb_symbol_table_visit@@Base+0x224>
   2c6dc:	ldr	r2, [ip, #4]
   2c6e0:	ldm	r2, {r0, r3}
   2c6e4:	subs	r3, r3, #1
   2c6e8:	bne	2c684 <fb_symbol_table_visit@@Base+0x460>
   2c6ec:	mov	r3, r8
   2c6f0:	b	2c6bc <fb_symbol_table_visit@@Base+0x498>
   2c6f4:	ldr	r1, [sp, #16]
   2c6f8:	ldr	r2, [r7, r5]
   2c6fc:	add	r5, r7, r5
   2c700:	ldr	r3, [r1, #8]
   2c704:	cmp	r2, #0
   2c708:	cmpne	r2, #2
   2c70c:	add	r3, r3, #1
   2c710:	str	r3, [r1, #8]
   2c714:	beq	2c73c <fb_symbol_table_visit@@Base+0x518>
   2c718:	ldr	r1, [sp]
   2c71c:	add	r4, r4, #1
   2c720:	and	r3, r1, r4
   2c724:	add	r4, r4, #1
   2c728:	ldr	r2, [r7, r3, lsl #2]
   2c72c:	add	r5, r7, r3, lsl #2
   2c730:	cmp	r2, #0
   2c734:	cmpne	r2, #2
   2c738:	bne	2c720 <fb_symbol_table_visit@@Base+0x4fc>
   2c73c:	ldr	r3, [sp, #12]
   2c740:	mov	r6, #0
   2c744:	str	r3, [r5]
   2c748:	b	2c580 <fb_symbol_table_visit@@Base+0x35c>
   2c74c:	ldr	r3, [pc, #144]	; 2c7e4 <fb_symbol_table_visit@@Base+0x5c0>
   2c750:	ldr	r1, [pc, #144]	; 2c7e8 <fb_symbol_table_visit@@Base+0x5c4>
   2c754:	ldr	r0, [pc, #144]	; 2c7ec <fb_symbol_table_visit@@Base+0x5c8>
   2c758:	add	r3, pc, r3
   2c75c:	mov	r2, #114	; 0x72
   2c760:	add	r1, pc, r1
   2c764:	add	r0, pc, r0
   2c768:	bl	14140 <__assert_fail@plt>
   2c76c:	ldr	r3, [pc, #124]	; 2c7f0 <fb_symbol_table_visit@@Base+0x5cc>
   2c770:	ldr	r1, [pc, #124]	; 2c7f4 <fb_symbol_table_visit@@Base+0x5d0>
   2c774:	ldr	r0, [pc, #124]	; 2c7f8 <fb_symbol_table_visit@@Base+0x5d4>
   2c778:	add	r3, pc, r3
   2c77c:	mov	r2, #116	; 0x74
   2c780:	add	r1, pc, r1
   2c784:	add	r0, pc, r0
   2c788:	bl	14140 <__assert_fail@plt>
   2c78c:	ldr	r3, [pc, #104]	; 2c7fc <fb_symbol_table_visit@@Base+0x5d8>
   2c790:	ldr	r1, [pc, #104]	; 2c800 <fb_symbol_table_visit@@Base+0x5dc>
   2c794:	ldr	r0, [pc, #104]	; 2c804 <fb_symbol_table_visit@@Base+0x5e0>
   2c798:	add	r3, pc, r3
   2c79c:	mov	r2, #115	; 0x73
   2c7a0:	add	r1, pc, r1
   2c7a4:	add	r0, pc, r0
   2c7a8:	bl	14140 <__assert_fail@plt>
   2c7ac:	ldr	r3, [pc, #84]	; 2c808 <fb_symbol_table_visit@@Base+0x5e4>
   2c7b0:	ldr	r2, [pc, #84]	; 2c80c <fb_symbol_table_visit@@Base+0x5e8>
   2c7b4:	ldr	r1, [pc, #84]	; 2c810 <fb_symbol_table_visit@@Base+0x5ec>
   2c7b8:	ldr	r3, [r4, r3]
   2c7bc:	add	r2, pc, r2
   2c7c0:	add	r1, pc, r1
   2c7c4:	ldr	r0, [r3]
   2c7c8:	bl	1408c <fprintf@plt>
   2c7cc:	mov	r0, #1
   2c7d0:	bl	14068 <exit@plt>
   2c7d4:	andeq	lr, r3, r4, lsr #26
   2c7d8:	svccs	0x00692e57
   2c7dc:	svccs	0x00693b52
   2c7e0:			; <UNDEFINED> instruction: 0x9e3779b1
   2c7e4:	ldrdeq	fp, [r2], -r4
   2c7e8:	andeq	fp, r2, r0, lsr #1
   2c7ec:	andeq	fp, r2, r4, lsl #2
   2c7f0:			; <UNDEFINED> instruction: 0x0002b1b4
   2c7f4:	andeq	fp, r2, r0, lsl #1
   2c7f8:	andeq	fp, r2, r4, lsl r1
   2c7fc:	muleq	r2, r4, r1
   2c800:	andeq	fp, r2, r0, rrx
   2c804:	ldrdeq	fp, [r2], -ip
   2c808:	andeq	r0, r0, r0, lsr #1
   2c80c:	strdeq	fp, [r2], -r4
   2c810:	andeq	fp, r2, r4, lsr #2
   2c814:	ldr	r3, [r0, #8]
   2c818:	push	{r4, r5, r6, r7, r8, r9, lr}
   2c81c:	cmp	r1, r3
   2c820:	movcc	r1, r3
   2c824:	cmp	r1, #2
   2c828:	sub	sp, sp, #28
   2c82c:	mov	r7, r0
   2c830:	ldr	r6, [r0]
   2c834:	mov	r5, #4
   2c838:	bls	2c850 <fb_symbol_table_visit@@Base+0x62c>
   2c83c:	mov	r2, #179	; 0xb3
   2c840:	lsl	r5, r5, #1
   2c844:	mul	r3, r2, r5
   2c848:	cmp	r1, r3, lsr #8
   2c84c:	bhi	2c840 <fb_symbol_table_visit@@Base+0x61c>
   2c850:	mov	r1, #4
   2c854:	mov	r0, r5
   2c858:	bl	13f9c <calloc@plt>
   2c85c:	cmp	r0, #0
   2c860:	str	r0, [sp, #8]
   2c864:	beq	2c90c <fb_symbol_table_visit@@Base+0x6e8>
   2c868:	ldr	r2, [r7, #12]
   2c86c:	mov	r4, #0
   2c870:	cmp	r2, r4
   2c874:	str	r5, [sp, #20]
   2c878:	str	r4, [sp, #12]
   2c87c:	subne	r5, r6, #4
   2c880:	str	r4, [sp, #16]
   2c884:	movne	r9, r4
   2c888:	addne	r6, sp, #8
   2c88c:	movne	r8, #3
   2c890:	bne	2c8a0 <fb_symbol_table_visit@@Base+0x67c>
   2c894:	b	2c904 <fb_symbol_table_visit@@Base+0x6e0>
   2c898:	cmp	r2, r4
   2c89c:	bls	2c8d4 <fb_symbol_table_visit@@Base+0x6b0>
   2c8a0:	ldr	r3, [r5, #4]!
   2c8a4:	add	r4, r4, #1
   2c8a8:	cmp	r3, #0
   2c8ac:	cmpne	r3, #2
   2c8b0:	beq	2c898 <fb_symbol_table_visit@@Base+0x674>
   2c8b4:	ldr	r1, [r3]
   2c8b8:	mov	r2, r9
   2c8bc:	str	r8, [sp]
   2c8c0:	mov	r0, r6
   2c8c4:	bl	2c2b4 <fb_symbol_table_visit@@Base+0x90>
   2c8c8:	ldr	r2, [r7, #12]
   2c8cc:	cmp	r2, r4
   2c8d0:	bhi	2c8a0 <fb_symbol_table_visit@@Base+0x67c>
   2c8d4:	mov	r0, r7
   2c8d8:	bl	2c284 <fb_symbol_table_visit@@Base+0x60>
   2c8dc:	mov	ip, r6
   2c8e0:	mov	lr, #0
   2c8e4:	ldm	ip!, {r0, r1, r2, r3}
   2c8e8:	str	r0, [r7]
   2c8ec:	str	r1, [r7, #4]
   2c8f0:	str	r2, [r7, #8]
   2c8f4:	str	r3, [r7, #12]
   2c8f8:	mov	r0, lr
   2c8fc:	add	sp, sp, #28
   2c900:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2c904:	add	r6, sp, #8
   2c908:	b	2c8d4 <fb_symbol_table_visit@@Base+0x6b0>
   2c90c:	mvn	lr, #0
   2c910:	b	2c8f8 <fb_symbol_table_visit@@Base+0x6d4>
   2c914:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c918:	sub	sp, sp, #12
   2c91c:	cmp	r0, #0
   2c920:	str	r0, [sp]
   2c924:	beq	2cc80 <fb_symbol_table_visit@@Base+0xa5c>
   2c928:	mov	fp, r2
   2c92c:	ldr	r2, [r1]
   2c930:	cmp	r3, #0
   2c934:	sub	r2, r2, #1
   2c938:	str	r2, [sp, #4]
   2c93c:	ble	2cbe0 <fb_symbol_table_visit@@Base+0x9bc>
   2c940:	mov	r4, #0
   2c944:	ldr	r6, [pc, #828]	; 2cc88 <fb_symbol_table_visit@@Base+0xa64>
   2c948:	ldr	sl, [pc, #828]	; 2cc8c <fb_symbol_table_visit@@Base+0xa68>
   2c94c:	ldr	r9, [pc, #828]	; 2cc90 <fb_symbol_table_visit@@Base+0xa6c>
   2c950:	mov	r8, r4
   2c954:	mov	r7, fp
   2c958:	mov	r5, r3
   2c95c:	cmp	r5, #0
   2c960:	ldrb	r0, [r7]
   2c964:	moveq	r1, r8
   2c968:	mvneq	ip, #0
   2c96c:	beq	2c9b4 <fb_symbol_table_visit@@Base+0x790>
   2c970:	cmp	r0, #46	; 0x2e
   2c974:	addeq	lr, r7, #1
   2c978:	mvneq	ip, #0
   2c97c:	moveq	r1, r8
   2c980:	beq	2c9c0 <fb_symbol_table_visit@@Base+0x79c>
   2c984:	mov	r2, r7
   2c988:	mov	ip, r8
   2c98c:	b	2c9a0 <fb_symbol_table_visit@@Base+0x77c>
   2c990:	ldrb	lr, [r2, #1]!
   2c994:	cmp	lr, #46	; 0x2e
   2c998:	beq	2ca10 <fb_symbol_table_visit@@Base+0x7ec>
   2c99c:	mov	ip, r1
   2c9a0:	add	r1, ip, #1
   2c9a4:	cmp	r1, r5
   2c9a8:	bne	2c990 <fb_symbol_table_visit@@Base+0x76c>
   2c9ac:	cmp	ip, #0
   2c9b0:	beq	2ca34 <fb_symbol_table_visit@@Base+0x810>
   2c9b4:	cmp	r0, #0
   2c9b8:	add	lr, r7, #1
   2c9bc:	beq	2ca34 <fb_symbol_table_visit@@Base+0x810>
   2c9c0:	add	ip, r7, ip
   2c9c4:	mov	r2, r6
   2c9c8:	b	2c9d8 <fb_symbol_table_visit@@Base+0x7b4>
   2c9cc:	ldrb	r0, [lr], #1
   2c9d0:	cmp	r0, #0
   2c9d4:	beq	2c9e8 <fb_symbol_table_visit@@Base+0x7c4>
   2c9d8:	add	r2, r2, r2, lsl #5
   2c9dc:	cmp	lr, ip
   2c9e0:	eor	r2, r2, r0
   2c9e4:	bne	2c9cc <fb_symbol_table_visit@@Base+0x7a8>
   2c9e8:	eor	r4, r4, sl
   2c9ec:	eor	r2, r2, r4
   2c9f0:	cmp	r5, r1
   2c9f4:	mul	r4, r9, r2
   2c9f8:	beq	2ca44 <fb_symbol_table_visit@@Base+0x820>
   2c9fc:	mvn	r2, r1
   2ca00:	add	r1, r1, #1
   2ca04:	add	r5, r5, r2
   2ca08:	add	r7, r7, r1
   2ca0c:	b	2c95c <fb_symbol_table_visit@@Base+0x738>
   2ca10:	cmp	ip, #0
   2ca14:	beq	2ca24 <fb_symbol_table_visit@@Base+0x800>
   2ca18:	cmp	r0, #0
   2ca1c:	add	lr, r7, #1
   2ca20:	bne	2c9c0 <fb_symbol_table_visit@@Base+0x79c>
   2ca24:	eor	r4, r4, #5376	; 0x1500
   2ca28:	eor	r4, r4, #5
   2ca2c:	mul	r4, r9, r4
   2ca30:	b	2c9fc <fb_symbol_table_visit@@Base+0x7d8>
   2ca34:	eor	r4, r4, #5376	; 0x1500
   2ca38:	ldr	r2, [pc, #592]	; 2cc90 <fb_symbol_table_visit@@Base+0xa6c>
   2ca3c:	eor	r4, r4, #5
   2ca40:	mul	r4, r2, r4
   2ca44:	ldr	r2, [sp, #4]
   2ca48:	and	r2, r2, r4
   2ca4c:	lsl	r2, r2, #2
   2ca50:	ldr	r1, [sp]
   2ca54:	ldr	r5, [r1, r2]
   2ca58:	cmp	r5, #0
   2ca5c:	beq	2cb3c <fb_symbol_table_visit@@Base+0x918>
   2ca60:	ldr	r8, [sp, #4]
   2ca64:	mov	r6, r3
   2ca68:	mov	r7, r1
   2ca6c:	add	r4, r4, #1
   2ca70:	str	fp, [sp]
   2ca74:	cmp	r5, #2
   2ca78:	beq	2cb28 <fb_symbol_table_visit@@Base+0x904>
   2ca7c:	cmp	r6, #0
   2ca80:	ldr	r9, [r5]
   2ca84:	ble	2cb48 <fb_symbol_table_visit@@Base+0x924>
   2ca88:	cmp	r9, #0
   2ca8c:	beq	2cb28 <fb_symbol_table_visit@@Base+0x904>
   2ca90:	ldr	r3, [r9, #4]
   2ca94:	ldm	r3, {r2, lr}
   2ca98:	cmp	r6, lr
   2ca9c:	bcc	2cb28 <fb_symbol_table_visit@@Base+0x904>
   2caa0:	ldr	sl, [sp]
   2caa4:	mov	fp, r6
   2caa8:	cmp	lr, #0
   2caac:	beq	2cbd8 <fb_symbol_table_visit@@Base+0x9b4>
   2cab0:	ldrb	r1, [sl]
   2cab4:	ldrb	r3, [r2]
   2cab8:	cmp	r1, r3
   2cabc:	bne	2cb28 <fb_symbol_table_visit@@Base+0x904>
   2cac0:	mov	r1, sl
   2cac4:	mov	r3, #0
   2cac8:	b	2cadc <fb_symbol_table_visit@@Base+0x8b8>
   2cacc:	ldrb	ip, [r2, #1]!
   2cad0:	ldrb	r0, [r1, #1]!
   2cad4:	cmp	ip, r0
   2cad8:	bne	2cb28 <fb_symbol_table_visit@@Base+0x904>
   2cadc:	add	r3, r3, #1
   2cae0:	cmp	r3, lr
   2cae4:	bne	2cacc <fb_symbol_table_visit@@Base+0x8a8>
   2cae8:	cmp	lr, fp
   2caec:	beq	2cbb8 <fb_symbol_table_visit@@Base+0x994>
   2caf0:	ldrb	r3, [sl, r3]
   2caf4:	cmp	r3, #46	; 0x2e
   2caf8:	bne	2cb28 <fb_symbol_table_visit@@Base+0x904>
   2cafc:	ldr	r9, [r9]
   2cb00:	mvn	r3, lr
   2cb04:	cmp	r9, #0
   2cb08:	add	lr, lr, #1
   2cb0c:	add	fp, fp, r3
   2cb10:	add	sl, sl, lr
   2cb14:	beq	2cb28 <fb_symbol_table_visit@@Base+0x904>
   2cb18:	ldr	r3, [r9, #4]
   2cb1c:	ldm	r3, {r2, lr}
   2cb20:	cmp	lr, fp
   2cb24:	bls	2caa8 <fb_symbol_table_visit@@Base+0x884>
   2cb28:	and	r3, r8, r4
   2cb2c:	add	r4, r4, #1
   2cb30:	ldr	r5, [r7, r3, lsl #2]
   2cb34:	cmp	r5, #0
   2cb38:	bne	2ca74 <fb_symbol_table_visit@@Base+0x850>
   2cb3c:	mov	r0, r5
   2cb40:	add	sp, sp, #12
   2cb44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cb48:	ldr	sl, [sp]
   2cb4c:	mov	fp, r6
   2cb50:	b	2cb94 <fb_symbol_table_visit@@Base+0x970>
   2cb54:	ldr	r0, [r9, #4]
   2cb58:	ldr	r1, [sl, #4]
   2cb5c:	ldr	r3, [r0, #4]
   2cb60:	ldr	ip, [r1, #4]
   2cb64:	mov	r2, r3
   2cb68:	cmp	r3, ip
   2cb6c:	bne	2cb28 <fb_symbol_table_visit@@Base+0x904>
   2cb70:	ldr	r1, [r1]
   2cb74:	ldr	r0, [r0]
   2cb78:	bl	14128 <strncmp@plt>
   2cb7c:	cmp	r0, #0
   2cb80:	bne	2cb28 <fb_symbol_table_visit@@Base+0x904>
   2cb84:	adds	fp, fp, #1
   2cb88:	ldr	r9, [r9]
   2cb8c:	ldr	sl, [sl]
   2cb90:	beq	2cbbc <fb_symbol_table_visit@@Base+0x998>
   2cb94:	adds	r2, r9, #0
   2cb98:	movne	r2, #1
   2cb9c:	adds	r3, sl, #0
   2cba0:	movne	r3, #1
   2cba4:	tst	r2, r3
   2cba8:	bne	2cb54 <fb_symbol_table_visit@@Base+0x930>
   2cbac:	orrs	r3, r2, r3
   2cbb0:	bne	2cb28 <fb_symbol_table_visit@@Base+0x904>
   2cbb4:	b	2cb3c <fb_symbol_table_visit@@Base+0x918>
   2cbb8:	ldr	r9, [r9]
   2cbbc:	clz	r9, r9
   2cbc0:	lsr	r9, r9, #5
   2cbc4:	cmp	r9, #0
   2cbc8:	beq	2cb28 <fb_symbol_table_visit@@Base+0x904>
   2cbcc:	mov	r0, r5
   2cbd0:	add	sp, sp, #12
   2cbd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cbd8:	mov	r3, lr
   2cbdc:	b	2cae8 <fb_symbol_table_visit@@Base+0x8c4>
   2cbe0:	cmp	fp, #0
   2cbe4:	moveq	r2, fp
   2cbe8:	moveq	r4, fp
   2cbec:	beq	2ca50 <fb_symbol_table_visit@@Base+0x82c>
   2cbf0:	ldr	lr, [pc, #144]	; 2cc88 <fb_symbol_table_visit@@Base+0xa64>
   2cbf4:	ldr	r6, [pc, #144]	; 2cc8c <fb_symbol_table_visit@@Base+0xa68>
   2cbf8:	ldr	r5, [pc, #144]	; 2cc90 <fb_symbol_table_visit@@Base+0xa6c>
   2cbfc:	mov	ip, r3
   2cc00:	mov	r0, fp
   2cc04:	mov	r4, #0
   2cc08:	ldr	r1, [r0, #4]
   2cc0c:	ldr	r2, [r1, #4]
   2cc10:	ldr	r8, [r1]
   2cc14:	subs	r2, r2, #1
   2cc18:	beq	2cc78 <fb_symbol_table_visit@@Base+0xa54>
   2cc1c:	ldrb	r1, [r8]
   2cc20:	add	r7, r8, #1
   2cc24:	cmp	r1, #0
   2cc28:	beq	2cc78 <fb_symbol_table_visit@@Base+0xa54>
   2cc2c:	add	r8, r8, r2
   2cc30:	mov	r2, lr
   2cc34:	b	2cc44 <fb_symbol_table_visit@@Base+0xa20>
   2cc38:	ldrb	r1, [r7], #1
   2cc3c:	cmp	r1, #0
   2cc40:	beq	2cc54 <fb_symbol_table_visit@@Base+0xa30>
   2cc44:	add	r2, r2, r2, lsl #5
   2cc48:	cmp	r7, r8
   2cc4c:	eor	r2, r2, r1
   2cc50:	bne	2cc38 <fb_symbol_table_visit@@Base+0xa14>
   2cc54:	eor	r4, r4, r6
   2cc58:	eor	r2, r2, r4
   2cc5c:	adds	ip, ip, #1
   2cc60:	mul	r4, r5, r2
   2cc64:	ldr	r0, [r0]
   2cc68:	beq	2ca44 <fb_symbol_table_visit@@Base+0x820>
   2cc6c:	cmp	r0, #0
   2cc70:	bne	2cc08 <fb_symbol_table_visit@@Base+0x9e4>
   2cc74:	b	2ca44 <fb_symbol_table_visit@@Base+0x820>
   2cc78:	mov	r2, lr
   2cc7c:	b	2cc54 <fb_symbol_table_visit@@Base+0xa30>
   2cc80:	ldr	r5, [sp]
   2cc84:	b	2cb3c <fb_symbol_table_visit@@Base+0x918>
   2cc88:	svccs	0x00692e57
   2cc8c:	svccs	0x00693b52
   2cc90:			; <UNDEFINED> instruction: 0x9e3779b1
   2cc94:	ldr	r3, [r0]
   2cc98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cc9c:	sub	sp, sp, #20
   2cca0:	cmp	r3, #0
   2cca4:	str	r1, [sp, #8]
   2cca8:	str	r3, [sp, #12]
   2ccac:	beq	2d038 <fb_symbol_table_visit@@Base+0xe14>
   2ccb0:	ldr	r3, [r0, #12]
   2ccb4:	cmp	r2, #0
   2ccb8:	sub	r3, r3, #1
   2ccbc:	mov	sl, r0
   2ccc0:	mov	fp, r2
   2ccc4:	str	r3, [sp, #4]
   2ccc8:	ble	2cf8c <fb_symbol_table_visit@@Base+0xd68>
   2cccc:	mov	r4, #0
   2ccd0:	ldr	r9, [pc, #872]	; 2d040 <fb_symbol_table_visit@@Base+0xe1c>
   2ccd4:	ldr	r8, [pc, #872]	; 2d044 <fb_symbol_table_visit@@Base+0xe20>
   2ccd8:	ldr	r7, [pc, #872]	; 2d048 <fb_symbol_table_visit@@Base+0xe24>
   2ccdc:	mov	r6, r4
   2cce0:	mov	r5, r1
   2cce4:	mov	lr, r2
   2cce8:	cmp	lr, #0
   2ccec:	ldrb	r1, [r5]
   2ccf0:	moveq	r2, r6
   2ccf4:	mvneq	r0, #0
   2ccf8:	beq	2cd40 <fb_symbol_table_visit@@Base+0xb1c>
   2ccfc:	cmp	r1, #46	; 0x2e
   2cd00:	addeq	ip, r5, #1
   2cd04:	mvneq	r0, #0
   2cd08:	moveq	r2, r6
   2cd0c:	beq	2cd4c <fb_symbol_table_visit@@Base+0xb28>
   2cd10:	mov	r3, r5
   2cd14:	mov	r0, r6
   2cd18:	b	2cd2c <fb_symbol_table_visit@@Base+0xb08>
   2cd1c:	ldrb	ip, [r3, #1]!
   2cd20:	cmp	ip, #46	; 0x2e
   2cd24:	beq	2cd9c <fb_symbol_table_visit@@Base+0xb78>
   2cd28:	mov	r0, r2
   2cd2c:	add	r2, r0, #1
   2cd30:	cmp	r2, lr
   2cd34:	bne	2cd1c <fb_symbol_table_visit@@Base+0xaf8>
   2cd38:	cmp	r0, #0
   2cd3c:	beq	2cdc0 <fb_symbol_table_visit@@Base+0xb9c>
   2cd40:	cmp	r1, #0
   2cd44:	add	ip, r5, #1
   2cd48:	beq	2cdc0 <fb_symbol_table_visit@@Base+0xb9c>
   2cd4c:	add	r0, r5, r0
   2cd50:	mov	r3, r9
   2cd54:	b	2cd64 <fb_symbol_table_visit@@Base+0xb40>
   2cd58:	ldrb	r1, [ip], #1
   2cd5c:	cmp	r1, #0
   2cd60:	beq	2cd74 <fb_symbol_table_visit@@Base+0xb50>
   2cd64:	add	r3, r3, r3, lsl #5
   2cd68:	cmp	ip, r0
   2cd6c:	eor	r3, r3, r1
   2cd70:	bne	2cd58 <fb_symbol_table_visit@@Base+0xb34>
   2cd74:	eor	r4, r4, r8
   2cd78:	eor	r3, r3, r4
   2cd7c:	cmp	lr, r2
   2cd80:	mul	r4, r7, r3
   2cd84:	beq	2cdd0 <fb_symbol_table_visit@@Base+0xbac>
   2cd88:	mvn	r3, r2
   2cd8c:	add	r2, r2, #1
   2cd90:	add	lr, lr, r3
   2cd94:	add	r5, r5, r2
   2cd98:	b	2cce8 <fb_symbol_table_visit@@Base+0xac4>
   2cd9c:	cmp	r0, #0
   2cda0:	beq	2cdb0 <fb_symbol_table_visit@@Base+0xb8c>
   2cda4:	cmp	r1, #0
   2cda8:	add	ip, r5, #1
   2cdac:	bne	2cd4c <fb_symbol_table_visit@@Base+0xb28>
   2cdb0:	eor	r4, r4, #5376	; 0x1500
   2cdb4:	eor	r4, r4, #5
   2cdb8:	mul	r4, r7, r4
   2cdbc:	b	2cd88 <fb_symbol_table_visit@@Base+0xb64>
   2cdc0:	eor	r4, r4, #5376	; 0x1500
   2cdc4:	ldr	r3, [pc, #636]	; 2d048 <fb_symbol_table_visit@@Base+0xe24>
   2cdc8:	eor	r4, r4, #5
   2cdcc:	mul	r4, r3, r4
   2cdd0:	ldr	r3, [sp, #4]
   2cdd4:	and	r5, r3, r4
   2cdd8:	lsl	r5, r5, #2
   2cddc:	ldr	r3, [sp, #12]
   2cde0:	ldr	r6, [r3, r5]
   2cde4:	add	r5, r3, r5
   2cde8:	cmp	r6, #0
   2cdec:	beq	2ced0 <fb_symbol_table_visit@@Base+0xcac>
   2cdf0:	mov	r7, fp
   2cdf4:	add	r4, r4, #1
   2cdf8:	mov	r8, r3
   2cdfc:	str	sl, [sp, #12]
   2ce00:	cmp	r6, #2
   2ce04:	beq	2ceb4 <fb_symbol_table_visit@@Base+0xc90>
   2ce08:	cmp	r7, #0
   2ce0c:	ldr	r9, [r6]
   2ce10:	ble	2cedc <fb_symbol_table_visit@@Base+0xcb8>
   2ce14:	cmp	r9, #0
   2ce18:	beq	2ceb4 <fb_symbol_table_visit@@Base+0xc90>
   2ce1c:	ldr	r3, [r9, #4]
   2ce20:	ldm	r3, {r2, lr}
   2ce24:	cmp	r7, lr
   2ce28:	bcc	2ceb4 <fb_symbol_table_visit@@Base+0xc90>
   2ce2c:	ldr	sl, [sp, #8]
   2ce30:	mov	fp, r7
   2ce34:	cmp	lr, #0
   2ce38:	beq	2cf84 <fb_symbol_table_visit@@Base+0xd60>
   2ce3c:	ldrb	r1, [r2]
   2ce40:	ldrb	r3, [sl]
   2ce44:	cmp	r1, r3
   2ce48:	bne	2ceb4 <fb_symbol_table_visit@@Base+0xc90>
   2ce4c:	mov	r1, sl
   2ce50:	mov	r3, #0
   2ce54:	b	2ce68 <fb_symbol_table_visit@@Base+0xc44>
   2ce58:	ldrb	ip, [r2, #1]!
   2ce5c:	ldrb	r0, [r1, #1]!
   2ce60:	cmp	ip, r0
   2ce64:	bne	2ceb4 <fb_symbol_table_visit@@Base+0xc90>
   2ce68:	add	r3, r3, #1
   2ce6c:	cmp	r3, lr
   2ce70:	bne	2ce58 <fb_symbol_table_visit@@Base+0xc34>
   2ce74:	cmp	lr, fp
   2ce78:	beq	2cf6c <fb_symbol_table_visit@@Base+0xd48>
   2ce7c:	ldrb	r3, [sl, r3]
   2ce80:	cmp	r3, #46	; 0x2e
   2ce84:	bne	2ceb4 <fb_symbol_table_visit@@Base+0xc90>
   2ce88:	ldr	r9, [r9]
   2ce8c:	mvn	r3, lr
   2ce90:	cmp	r9, #0
   2ce94:	add	lr, lr, #1
   2ce98:	add	fp, fp, r3
   2ce9c:	add	sl, sl, lr
   2cea0:	beq	2ceb4 <fb_symbol_table_visit@@Base+0xc90>
   2cea4:	ldr	r3, [r9, #4]
   2cea8:	ldm	r3, {r2, lr}
   2ceac:	cmp	lr, fp
   2ceb0:	bls	2ce34 <fb_symbol_table_visit@@Base+0xc10>
   2ceb4:	ldr	r3, [sp, #4]
   2ceb8:	and	r5, r3, r4
   2cebc:	add	r4, r4, #1
   2cec0:	ldr	r6, [r8, r5, lsl #2]
   2cec4:	add	r5, r8, r5, lsl #2
   2cec8:	cmp	r6, #0
   2cecc:	bne	2ce00 <fb_symbol_table_visit@@Base+0xbdc>
   2ced0:	mov	r0, r6
   2ced4:	add	sp, sp, #20
   2ced8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cedc:	ldr	sl, [sp, #8]
   2cee0:	mov	fp, r7
   2cee4:	b	2cf28 <fb_symbol_table_visit@@Base+0xd04>
   2cee8:	ldr	r0, [r9, #4]
   2ceec:	ldr	r1, [sl, #4]
   2cef0:	ldr	r3, [r0, #4]
   2cef4:	ldr	ip, [r1, #4]
   2cef8:	mov	r2, r3
   2cefc:	cmp	r3, ip
   2cf00:	bne	2ceb4 <fb_symbol_table_visit@@Base+0xc90>
   2cf04:	ldr	r1, [r1]
   2cf08:	ldr	r0, [r0]
   2cf0c:	bl	14128 <strncmp@plt>
   2cf10:	cmp	r0, #0
   2cf14:	bne	2ceb4 <fb_symbol_table_visit@@Base+0xc90>
   2cf18:	adds	fp, fp, #1
   2cf1c:	ldr	r9, [r9]
   2cf20:	ldr	sl, [sl]
   2cf24:	beq	2cf70 <fb_symbol_table_visit@@Base+0xd4c>
   2cf28:	adds	r2, r9, #0
   2cf2c:	movne	r2, #1
   2cf30:	adds	r3, sl, #0
   2cf34:	movne	r3, #1
   2cf38:	tst	r2, r3
   2cf3c:	bne	2cee8 <fb_symbol_table_visit@@Base+0xcc4>
   2cf40:	orrs	r3, r2, r3
   2cf44:	bne	2ceb4 <fb_symbol_table_visit@@Base+0xc90>
   2cf48:	ldr	r1, [sp, #12]
   2cf4c:	mov	r2, #2
   2cf50:	mov	r0, r6
   2cf54:	ldr	r3, [r1, #8]
   2cf58:	str	r2, [r5]
   2cf5c:	sub	r3, r3, #1
   2cf60:	str	r3, [r1, #8]
   2cf64:	add	sp, sp, #20
   2cf68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cf6c:	ldr	r9, [r9]
   2cf70:	clz	r9, r9
   2cf74:	lsr	r9, r9, #5
   2cf78:	cmp	r9, #0
   2cf7c:	bne	2cf48 <fb_symbol_table_visit@@Base+0xd24>
   2cf80:	b	2ceb4 <fb_symbol_table_visit@@Base+0xc90>
   2cf84:	mov	r3, lr
   2cf88:	b	2ce74 <fb_symbol_table_visit@@Base+0xc50>
   2cf8c:	ldr	r3, [sp, #8]
   2cf90:	cmp	r3, #0
   2cf94:	moveq	r4, r3
   2cf98:	moveq	r5, r4
   2cf9c:	beq	2cddc <fb_symbol_table_visit@@Base+0xbb8>
   2cfa0:	ldr	ip, [sp, #8]
   2cfa4:	ldr	r5, [pc, #148]	; 2d040 <fb_symbol_table_visit@@Base+0xe1c>
   2cfa8:	ldr	r7, [pc, #148]	; 2d044 <fb_symbol_table_visit@@Base+0xe20>
   2cfac:	ldr	r2, [ip, #4]
   2cfb0:	ldr	r6, [pc, #144]	; 2d048 <fb_symbol_table_visit@@Base+0xe24>
   2cfb4:	mov	lr, fp
   2cfb8:	ldm	r2, {r0, r3}
   2cfbc:	mov	r4, #0
   2cfc0:	subs	r3, r3, #1
   2cfc4:	beq	2d030 <fb_symbol_table_visit@@Base+0xe0c>
   2cfc8:	ldrb	r2, [r0]
   2cfcc:	add	r1, r0, #1
   2cfd0:	cmp	r2, #0
   2cfd4:	beq	2d030 <fb_symbol_table_visit@@Base+0xe0c>
   2cfd8:	add	r0, r0, r3
   2cfdc:	mov	r3, r5
   2cfe0:	b	2cff0 <fb_symbol_table_visit@@Base+0xdcc>
   2cfe4:	ldrb	r2, [r1], #1
   2cfe8:	cmp	r2, #0
   2cfec:	beq	2d000 <fb_symbol_table_visit@@Base+0xddc>
   2cff0:	add	r3, r3, r3, lsl #5
   2cff4:	cmp	r1, r0
   2cff8:	eor	r3, r3, r2
   2cffc:	bne	2cfe4 <fb_symbol_table_visit@@Base+0xdc0>
   2d000:	eor	r4, r4, r7
   2d004:	eor	r3, r3, r4
   2d008:	adds	lr, lr, #1
   2d00c:	mul	r4, r6, r3
   2d010:	ldr	ip, [ip]
   2d014:	beq	2cdd0 <fb_symbol_table_visit@@Base+0xbac>
   2d018:	cmp	ip, #0
   2d01c:	beq	2cdd0 <fb_symbol_table_visit@@Base+0xbac>
   2d020:	ldr	r2, [ip, #4]
   2d024:	ldm	r2, {r0, r3}
   2d028:	subs	r3, r3, #1
   2d02c:	bne	2cfc8 <fb_symbol_table_visit@@Base+0xda4>
   2d030:	mov	r3, r5
   2d034:	b	2d000 <fb_symbol_table_visit@@Base+0xddc>
   2d038:	ldr	r6, [sp, #12]
   2d03c:	b	2ced0 <fb_symbol_table_visit@@Base+0xcac>
   2d040:	svccs	0x00692e57
   2d044:	svccs	0x00693b52
   2d048:			; <UNDEFINED> instruction: 0x9e3779b1

0002d04c <fb_scope_table_clear@@Base>:
   2d04c:	b	2c284 <fb_symbol_table_visit@@Base+0x60>

0002d050 <fb_scope_table_destroy@@Base>:
   2d050:	push	{r4, r5, r6, r7, r8, lr}
   2d054:	subs	r7, r1, #0
   2d058:	mov	r6, r0
   2d05c:	beq	2d0b0 <fb_scope_table_destroy@@Base+0x60>
   2d060:	ldr	r3, [r0, #12]
   2d064:	ldr	r5, [r0]
   2d068:	cmp	r3, #0
   2d06c:	beq	2d0b0 <fb_scope_table_destroy@@Base+0x60>
   2d070:	mov	r8, r2
   2d074:	sub	r5, r5, #4
   2d078:	mov	r4, #0
   2d07c:	b	2d088 <fb_scope_table_destroy@@Base+0x38>
   2d080:	cmp	r4, r3
   2d084:	bcs	2d0b0 <fb_scope_table_destroy@@Base+0x60>
   2d088:	ldr	r1, [r5, #4]!
   2d08c:	add	r4, r4, #1
   2d090:	cmp	r1, #0
   2d094:	cmpne	r1, #2
   2d098:	beq	2d080 <fb_scope_table_destroy@@Base+0x30>
   2d09c:	mov	r0, r8
   2d0a0:	blx	r7
   2d0a4:	ldr	r3, [r6, #12]
   2d0a8:	cmp	r4, r3
   2d0ac:	bcc	2d088 <fb_scope_table_destroy@@Base+0x38>
   2d0b0:	mov	r0, r6
   2d0b4:	pop	{r4, r5, r6, r7, r8, lr}
   2d0b8:	b	2c284 <fb_symbol_table_visit@@Base+0x60>

0002d0bc <fb_scope_table_init@@Base>:
   2d0bc:	cmp	r1, #2
   2d0c0:	push	{r4, r5, r6, lr}
   2d0c4:	mov	r4, #4
   2d0c8:	mov	r5, r0
   2d0cc:	bls	2d0e4 <fb_scope_table_init@@Base+0x28>
   2d0d0:	mov	r2, #179	; 0xb3
   2d0d4:	lsl	r4, r4, #1
   2d0d8:	mul	r3, r2, r4
   2d0dc:	cmp	r1, r3, lsr #8
   2d0e0:	bhi	2d0d4 <fb_scope_table_init@@Base+0x18>
   2d0e4:	mov	r1, #4
   2d0e8:	mov	r0, r4
   2d0ec:	bl	13f9c <calloc@plt>
   2d0f0:	cmp	r0, #0
   2d0f4:	str	r0, [r5]
   2d0f8:	movne	r0, #0
   2d0fc:	strne	r4, [r5, #12]
   2d100:	strne	r0, [r5, #4]
   2d104:	strne	r0, [r5, #8]
   2d108:	mvneq	r0, #0
   2d10c:	pop	{r4, r5, r6, pc}

0002d110 <fb_scope_table_resize@@Base>:
   2d110:	b	2c814 <fb_symbol_table_visit@@Base+0x5f0>

0002d114 <fb_scope_table_insert@@Base>:
   2d114:	b	2c2b4 <fb_symbol_table_visit@@Base+0x90>

0002d118 <fb_scope_table_insert_item@@Base>:
   2d118:	push	{lr}		; (str lr, [sp, #-4]!)
   2d11c:	sub	sp, sp, #12
   2d120:	mov	r3, r1
   2d124:	str	r2, [sp]
   2d128:	mov	r2, #0
   2d12c:	ldr	r1, [r1]
   2d130:	bl	2c2b4 <fb_symbol_table_visit@@Base+0x90>
   2d134:	add	sp, sp, #12
   2d138:	pop	{pc}		; (ldr pc, [sp], #4)

0002d13c <fb_scope_table_find@@Base>:
   2d13c:	mov	ip, r0
   2d140:	mov	r3, r2
   2d144:	ldr	r0, [r0]
   2d148:	mov	r2, r1
   2d14c:	add	r1, ip, #12
   2d150:	b	2c914 <fb_symbol_table_visit@@Base+0x6f0>

0002d154 <fb_scope_table_find_item@@Base>:
   2d154:	mov	r3, r0
   2d158:	ldr	r2, [r1]
   2d15c:	ldr	r0, [r0]
   2d160:	add	r1, r3, #12
   2d164:	mov	r3, #0
   2d168:	b	2c914 <fb_symbol_table_visit@@Base+0x6f0>

0002d16c <fb_scope_table_remove@@Base>:
   2d16c:	b	2cc94 <fb_symbol_table_visit@@Base+0xa70>

0002d170 <fb_scope_table_remove_item@@Base>:
   2d170:	ldr	r1, [r1]
   2d174:	mov	r2, #0
   2d178:	b	2cc94 <fb_symbol_table_visit@@Base+0xa70>

0002d17c <fb_scope_table_visit@@Base>:
   2d17c:	ldr	r3, [r0, #12]
   2d180:	push	{r4, r5, r6, r7, r8, lr}
   2d184:	cmp	r3, #0
   2d188:	ldr	r5, [r0]
   2d18c:	popeq	{r4, r5, r6, r7, r8, pc}
   2d190:	mov	r7, r2
   2d194:	mov	r6, r1
   2d198:	mov	r8, r0
   2d19c:	sub	r5, r5, #4
   2d1a0:	mov	r4, #0
   2d1a4:	b	2d1b0 <fb_scope_table_visit@@Base+0x34>
   2d1a8:	cmp	r4, r3
   2d1ac:	bcs	2d1d8 <fb_scope_table_visit@@Base+0x5c>
   2d1b0:	ldr	r1, [r5, #4]!
   2d1b4:	add	r4, r4, #1
   2d1b8:	cmp	r1, #0
   2d1bc:	cmpne	r1, #2
   2d1c0:	beq	2d1a8 <fb_scope_table_visit@@Base+0x2c>
   2d1c4:	mov	r0, r7
   2d1c8:	blx	r6
   2d1cc:	ldr	r3, [r8, #12]
   2d1d0:	cmp	r4, r3
   2d1d4:	bcc	2d1b0 <fb_scope_table_visit@@Base+0x34>
   2d1d8:	pop	{r4, r5, r6, r7, r8, pc}
   2d1dc:	push	{r4, lr}
   2d1e0:	mov	r4, r0
   2d1e4:	ldr	r0, [r0]
   2d1e8:	cmp	r0, #0
   2d1ec:	beq	2d1f4 <fb_scope_table_visit@@Base+0x78>
   2d1f0:	bl	13fcc <free@plt>
   2d1f4:	mov	r3, #0
   2d1f8:	str	r3, [r4]
   2d1fc:	str	r3, [r4, #4]
   2d200:	str	r3, [r4, #8]
   2d204:	str	r3, [r4, #12]
   2d208:	pop	{r4, pc}
   2d20c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d210:	sub	sp, sp, #36	; 0x24
   2d214:	ldr	r4, [pc, #584]	; 2d464 <fb_scope_table_visit@@Base+0x2e8>
   2d218:	cmp	r3, #0
   2d21c:	str	r3, [sp, #12]
   2d220:	str	r1, [sp, #16]
   2d224:	add	r4, pc, r4
   2d228:	beq	2d444 <fb_scope_table_visit@@Base+0x2c8>
   2d22c:	ldr	r3, [sp, #12]
   2d230:	cmp	r3, #2
   2d234:	beq	2d3fc <fb_scope_table_visit@@Base+0x280>
   2d238:	ldr	r3, [sp, #12]
   2d23c:	cmp	r3, #1
   2d240:	beq	2d3dc <fb_scope_table_visit@@Base+0x260>
   2d244:	ldr	r8, [r0, #12]
   2d248:	mov	r3, #179	; 0xb3
   2d24c:	ldr	r1, [r0, #8]
   2d250:	mul	r3, r3, r8
   2d254:	mov	r9, r2
   2d258:	mov	sl, r0
   2d25c:	cmp	r1, r3, lsr #8
   2d260:	bcc	2d278 <fb_scope_table_visit@@Base+0xfc>
   2d264:	lsl	r1, r1, #1
   2d268:	bl	2d49c <fb_scope_table_visit@@Base+0x320>
   2d26c:	cmp	r0, #0
   2d270:	bne	2d41c <fb_scope_table_visit@@Base+0x2a0>
   2d274:	ldr	r8, [sl, #12]
   2d278:	ldr	r3, [pc, #488]	; 2d468 <fb_scope_table_visit@@Base+0x2ec>
   2d27c:	mov	r2, r9
   2d280:	str	r3, [sp]
   2d284:	add	r3, sp, #24
   2d288:	str	r3, [sp, #4]
   2d28c:	ldr	r0, [sp, #16]
   2d290:	mov	r3, #0
   2d294:	ldr	r7, [sl]
   2d298:	bl	3cbc8 <cmetrohash64_1@@Base>
   2d29c:	ldr	r3, [sp, #72]	; 0x48
   2d2a0:	ldr	r6, [sp, #24]
   2d2a4:	sub	r3, r3, #2
   2d2a8:	sub	r8, r8, #1
   2d2ac:	cmp	r3, #1
   2d2b0:	and	r4, r8, r6
   2d2b4:	bls	2d388 <fb_scope_table_visit@@Base+0x20c>
   2d2b8:	ldr	r5, [r7, r4, lsl #2]
   2d2bc:	add	r4, r7, r4, lsl #2
   2d2c0:	cmp	r5, #0
   2d2c4:	moveq	fp, r4
   2d2c8:	beq	2d364 <fb_scope_table_visit@@Base+0x1e8>
   2d2cc:	str	sl, [sp, #20]
   2d2d0:	add	r6, r6, #1
   2d2d4:	mov	sl, r5
   2d2d8:	mov	fp, #0
   2d2dc:	ldr	r5, [sp, #16]
   2d2e0:	b	2d2fc <fb_scope_table_visit@@Base+0x180>
   2d2e4:	and	r4, r8, r6
   2d2e8:	add	r6, r6, #1
   2d2ec:	ldr	sl, [r7, r4, lsl #2]
   2d2f0:	add	r4, r7, r4, lsl #2
   2d2f4:	cmp	sl, #0
   2d2f8:	beq	2d358 <fb_scope_table_visit@@Base+0x1dc>
   2d2fc:	cmp	sl, #2
   2d300:	beq	2d34c <fb_scope_table_visit@@Base+0x1d0>
   2d304:	ldr	r2, [sl, #148]	; 0x94
   2d308:	cmp	r9, r2
   2d30c:	bne	2d2e4 <fb_scope_table_visit@@Base+0x168>
   2d310:	mov	r2, r9
   2d314:	ldr	r1, [sl, #144]	; 0x90
   2d318:	mov	r0, r5
   2d31c:	bl	13ff0 <memcmp@plt>
   2d320:	cmp	r0, #0
   2d324:	bne	2d2e4 <fb_scope_table_visit@@Base+0x168>
   2d328:	ldr	r3, [sp, #72]	; 0x48
   2d32c:	mov	r5, sl
   2d330:	cmp	r3, #0
   2d334:	bne	2d37c <fb_scope_table_visit@@Base+0x200>
   2d338:	ldr	r3, [sp, #12]
   2d33c:	mov	r0, r5
   2d340:	str	r3, [r4]
   2d344:	add	sp, sp, #36	; 0x24
   2d348:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d34c:	cmp	fp, #0
   2d350:	moveq	fp, r4
   2d354:	b	2d2e4 <fb_scope_table_visit@@Base+0x168>
   2d358:	cmp	fp, #0
   2d35c:	ldr	sl, [sp, #20]
   2d360:	moveq	fp, r4
   2d364:	ldr	r2, [sl, #8]
   2d368:	ldr	r3, [sp, #12]
   2d36c:	mov	r5, #0
   2d370:	add	r2, r2, #1
   2d374:	str	r2, [sl, #8]
   2d378:	str	r3, [fp]
   2d37c:	mov	r0, r5
   2d380:	add	sp, sp, #36	; 0x24
   2d384:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d388:	ldr	r2, [r7, r4, lsl #2]
   2d38c:	ldr	r3, [sl, #8]
   2d390:	cmp	r2, #0
   2d394:	cmpne	r2, #2
   2d398:	add	r3, r3, #1
   2d39c:	str	r3, [sl, #8]
   2d3a0:	add	r4, r7, r4, lsl #2
   2d3a4:	beq	2d3cc <fb_scope_table_visit@@Base+0x250>
   2d3a8:	add	r6, r6, #1
   2d3ac:	and	r3, r8, r6
   2d3b0:	add	r6, r6, #1
   2d3b4:	ldr	r2, [r7, r3, lsl #2]
   2d3b8:	add	r3, r7, r3, lsl #2
   2d3bc:	cmp	r2, #0
   2d3c0:	cmpne	r2, #2
   2d3c4:	bne	2d3ac <fb_scope_table_visit@@Base+0x230>
   2d3c8:	mov	r4, r3
   2d3cc:	ldr	r3, [sp, #12]
   2d3d0:	mov	r5, #0
   2d3d4:	str	r3, [r4]
   2d3d8:	b	2d37c <fb_scope_table_visit@@Base+0x200>
   2d3dc:	ldr	r3, [pc, #136]	; 2d46c <fb_scope_table_visit@@Base+0x2f0>
   2d3e0:	ldr	r1, [pc, #136]	; 2d470 <fb_scope_table_visit@@Base+0x2f4>
   2d3e4:	ldr	r0, [pc, #136]	; 2d474 <fb_scope_table_visit@@Base+0x2f8>
   2d3e8:	add	r3, pc, r3
   2d3ec:	mov	r2, #116	; 0x74
   2d3f0:	add	r1, pc, r1
   2d3f4:	add	r0, pc, r0
   2d3f8:	bl	14140 <__assert_fail@plt>
   2d3fc:	ldr	r3, [pc, #116]	; 2d478 <fb_scope_table_visit@@Base+0x2fc>
   2d400:	ldr	r1, [pc, #116]	; 2d47c <fb_scope_table_visit@@Base+0x300>
   2d404:	ldr	r0, [pc, #116]	; 2d480 <fb_scope_table_visit@@Base+0x304>
   2d408:	add	r3, pc, r3
   2d40c:	mov	r2, #115	; 0x73
   2d410:	add	r1, pc, r1
   2d414:	add	r0, pc, r0
   2d418:	bl	14140 <__assert_fail@plt>
   2d41c:	ldr	r3, [pc, #96]	; 2d484 <fb_scope_table_visit@@Base+0x308>
   2d420:	ldr	r2, [pc, #96]	; 2d488 <fb_scope_table_visit@@Base+0x30c>
   2d424:	ldr	r1, [pc, #96]	; 2d48c <fb_scope_table_visit@@Base+0x310>
   2d428:	ldr	r3, [r4, r3]
   2d42c:	add	r2, pc, r2
   2d430:	add	r1, pc, r1
   2d434:	ldr	r0, [r3]
   2d438:	bl	1408c <fprintf@plt>
   2d43c:	mov	r0, #1
   2d440:	bl	14068 <exit@plt>
   2d444:	ldr	r3, [pc, #68]	; 2d490 <fb_scope_table_visit@@Base+0x314>
   2d448:	ldr	r1, [pc, #68]	; 2d494 <fb_scope_table_visit@@Base+0x318>
   2d44c:	ldr	r0, [pc, #68]	; 2d498 <fb_scope_table_visit@@Base+0x31c>
   2d450:	add	r3, pc, r3
   2d454:	mov	r2, #114	; 0x72
   2d458:	add	r1, pc, r1
   2d45c:	add	r0, pc, r0
   2d460:	bl	14140 <__assert_fail@plt>
   2d464:	ldrdeq	sp, [r3], -r4
   2d468:	svccs	0x00693b52
   2d46c:	andeq	sl, r2, ip, asr r5
   2d470:	andeq	sl, r2, r0, lsl r4
   2d474:	andeq	sl, r2, r4, lsr #9
   2d478:	andeq	sl, r2, ip, lsr r5
   2d47c:	strdeq	sl, [r2], -r0
   2d480:	andeq	sl, r2, ip, ror #8
   2d484:	andeq	r0, r0, r0, lsr #1
   2d488:	andeq	sl, r2, r4, lsl #9
   2d48c:			; <UNDEFINED> instruction: 0x0002a4b4
   2d490:	strdeq	sl, [r2], -r4
   2d494:	andeq	sl, r2, r8, lsr #7
   2d498:	andeq	sl, r2, ip, lsl #8
   2d49c:	ldr	r3, [r0, #8]
   2d4a0:	push	{r4, r5, r6, r7, r8, lr}
   2d4a4:	cmp	r1, r3
   2d4a8:	movcc	r1, r3
   2d4ac:	cmp	r1, #2
   2d4b0:	sub	sp, sp, #24
   2d4b4:	mov	r6, r0
   2d4b8:	ldr	r7, [r0]
   2d4bc:	mov	r5, #4
   2d4c0:	bls	2d4d8 <fb_scope_table_visit@@Base+0x35c>
   2d4c4:	mov	r2, #179	; 0xb3
   2d4c8:	lsl	r5, r5, #1
   2d4cc:	mul	r3, r2, r5
   2d4d0:	cmp	r1, r3, lsr #8
   2d4d4:	bhi	2d4c8 <fb_scope_table_visit@@Base+0x34c>
   2d4d8:	mov	r1, #4
   2d4dc:	mov	r0, r5
   2d4e0:	bl	13f9c <calloc@plt>
   2d4e4:	cmp	r0, #0
   2d4e8:	str	r0, [sp, #8]
   2d4ec:	beq	2d590 <fb_scope_table_visit@@Base+0x414>
   2d4f0:	ldr	r2, [r6, #12]
   2d4f4:	mov	r4, #0
   2d4f8:	cmp	r2, r4
   2d4fc:	str	r5, [sp, #20]
   2d500:	str	r4, [sp, #12]
   2d504:	subne	r5, r7, #4
   2d508:	str	r4, [sp, #16]
   2d50c:	addne	r7, sp, #8
   2d510:	movne	r8, #3
   2d514:	bne	2d524 <fb_scope_table_visit@@Base+0x3a8>
   2d518:	b	2d588 <fb_scope_table_visit@@Base+0x40c>
   2d51c:	cmp	r2, r4
   2d520:	bls	2d558 <fb_scope_table_visit@@Base+0x3dc>
   2d524:	ldr	r3, [r5, #4]!
   2d528:	add	r4, r4, #1
   2d52c:	cmp	r3, #0
   2d530:	cmpne	r3, #2
   2d534:	beq	2d51c <fb_scope_table_visit@@Base+0x3a0>
   2d538:	ldr	r2, [r3, #148]	; 0x94
   2d53c:	ldr	r1, [r3, #144]	; 0x90
   2d540:	mov	r0, r7
   2d544:	str	r8, [sp]
   2d548:	bl	2d20c <fb_scope_table_visit@@Base+0x90>
   2d54c:	ldr	r2, [r6, #12]
   2d550:	cmp	r2, r4
   2d554:	bhi	2d524 <fb_scope_table_visit@@Base+0x3a8>
   2d558:	mov	r0, r6
   2d55c:	bl	2d1dc <fb_scope_table_visit@@Base+0x60>
   2d560:	mov	ip, r7
   2d564:	mov	lr, #0
   2d568:	ldm	ip!, {r0, r1, r2, r3}
   2d56c:	str	r0, [r6]
   2d570:	str	r1, [r6, #4]
   2d574:	str	r2, [r6, #8]
   2d578:	str	r3, [r6, #12]
   2d57c:	mov	r0, lr
   2d580:	add	sp, sp, #24
   2d584:	pop	{r4, r5, r6, r7, r8, pc}
   2d588:	add	r7, sp, #8
   2d58c:	b	2d558 <fb_scope_table_visit@@Base+0x3dc>
   2d590:	mvn	lr, #0
   2d594:	b	2d57c <fb_scope_table_visit@@Base+0x400>
   2d598:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d59c:	sub	sp, sp, #20
   2d5a0:	ldr	r5, [r0]
   2d5a4:	cmp	r5, #0
   2d5a8:	beq	2d660 <fb_scope_table_visit@@Base+0x4e4>
   2d5ac:	ldr	r3, [pc, #188]	; 2d670 <fb_scope_table_visit@@Base+0x4f4>
   2d5b0:	ldr	r7, [r0, #12]
   2d5b4:	str	r3, [sp]
   2d5b8:	add	r3, sp, #8
   2d5bc:	str	r3, [sp, #4]
   2d5c0:	mov	r9, r0
   2d5c4:	mov	r3, #0
   2d5c8:	mov	r0, r1
   2d5cc:	mov	r6, r2
   2d5d0:	mov	r8, r1
   2d5d4:	bl	3cbc8 <cmetrohash64_1@@Base>
   2d5d8:	ldr	sl, [sp, #8]
   2d5dc:	sub	r7, r7, #1
   2d5e0:	and	r3, r7, sl
   2d5e4:	ldr	fp, [r5, r3, lsl #2]
   2d5e8:	add	r4, r5, r3, lsl #2
   2d5ec:	cmp	fp, #0
   2d5f0:	beq	2d660 <fb_scope_table_visit@@Base+0x4e4>
   2d5f4:	add	sl, sl, #1
   2d5f8:	b	2d614 <fb_scope_table_visit@@Base+0x498>
   2d5fc:	and	r3, sl, r7
   2d600:	add	sl, sl, #1
   2d604:	ldr	fp, [r5, r3, lsl #2]
   2d608:	add	r4, r5, r3, lsl #2
   2d60c:	cmp	fp, #0
   2d610:	beq	2d660 <fb_scope_table_visit@@Base+0x4e4>
   2d614:	cmp	fp, #2
   2d618:	beq	2d5fc <fb_scope_table_visit@@Base+0x480>
   2d61c:	ldr	r3, [fp, #148]	; 0x94
   2d620:	cmp	r6, r3
   2d624:	bne	2d5fc <fb_scope_table_visit@@Base+0x480>
   2d628:	mov	r2, r6
   2d62c:	ldr	r1, [fp, #144]	; 0x90
   2d630:	mov	r0, r8
   2d634:	bl	13ff0 <memcmp@plt>
   2d638:	cmp	r0, #0
   2d63c:	bne	2d5fc <fb_scope_table_visit@@Base+0x480>
   2d640:	ldr	r3, [r9, #8]
   2d644:	mov	r2, #2
   2d648:	sub	r3, r3, #1
   2d64c:	str	r2, [r4]
   2d650:	mov	r0, fp
   2d654:	str	r3, [r9, #8]
   2d658:	add	sp, sp, #20
   2d65c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d660:	mov	fp, #0
   2d664:	mov	r0, fp
   2d668:	add	sp, sp, #20
   2d66c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d670:	svccs	0x00693b52
   2d674:	push	{r4, r5, r6, r7, r8, r9, lr}
   2d678:	subs	r7, r0, #0
   2d67c:	sub	sp, sp, #20
   2d680:	beq	2d71c <fb_scope_table_visit@@Base+0x5a0>
   2d684:	mov	r6, r3
   2d688:	ldr	r3, [pc, #156]	; 2d72c <fb_scope_table_visit@@Base+0x5b0>
   2d68c:	ldr	r8, [r1]
   2d690:	mov	r9, r2
   2d694:	str	r3, [sp]
   2d698:	add	r3, sp, #8
   2d69c:	str	r3, [sp, #4]
   2d6a0:	mov	r2, r6
   2d6a4:	mov	r3, #0
   2d6a8:	mov	r0, r9
   2d6ac:	bl	3cbc8 <cmetrohash64_1@@Base>
   2d6b0:	ldr	r5, [sp, #8]
   2d6b4:	sub	r8, r8, #1
   2d6b8:	and	r3, r8, r5
   2d6bc:	ldr	r4, [r7, r3, lsl #2]
   2d6c0:	cmp	r4, #0
   2d6c4:	beq	2d71c <fb_scope_table_visit@@Base+0x5a0>
   2d6c8:	add	r5, r5, #1
   2d6cc:	b	2d6e4 <fb_scope_table_visit@@Base+0x568>
   2d6d0:	and	r1, r8, r5
   2d6d4:	add	r5, r5, #1
   2d6d8:	ldr	r4, [r7, r1, lsl #2]
   2d6dc:	cmp	r4, #0
   2d6e0:	beq	2d71c <fb_scope_table_visit@@Base+0x5a0>
   2d6e4:	cmp	r4, #2
   2d6e8:	beq	2d6d0 <fb_scope_table_visit@@Base+0x554>
   2d6ec:	ldr	r3, [r4, #148]	; 0x94
   2d6f0:	cmp	r6, r3
   2d6f4:	bne	2d6d0 <fb_scope_table_visit@@Base+0x554>
   2d6f8:	mov	r2, r6
   2d6fc:	ldr	r1, [r4, #144]	; 0x90
   2d700:	mov	r0, r9
   2d704:	bl	13ff0 <memcmp@plt>
   2d708:	cmp	r0, #0
   2d70c:	bne	2d6d0 <fb_scope_table_visit@@Base+0x554>
   2d710:	mov	r0, r4
   2d714:	add	sp, sp, #20
   2d718:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2d71c:	mov	r4, #0
   2d720:	mov	r0, r4
   2d724:	add	sp, sp, #20
   2d728:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2d72c:	svccs	0x00693b52

0002d730 <fb_schema_table_clear@@Base>:
   2d730:	b	2d1dc <fb_scope_table_visit@@Base+0x60>

0002d734 <fb_schema_table_destroy@@Base>:
   2d734:	push	{r4, r5, r6, r7, r8, lr}
   2d738:	subs	r7, r1, #0
   2d73c:	mov	r6, r0
   2d740:	beq	2d794 <fb_schema_table_destroy@@Base+0x60>
   2d744:	ldr	r3, [r0, #12]
   2d748:	ldr	r5, [r0]
   2d74c:	cmp	r3, #0
   2d750:	beq	2d794 <fb_schema_table_destroy@@Base+0x60>
   2d754:	mov	r8, r2
   2d758:	sub	r5, r5, #4
   2d75c:	mov	r4, #0
   2d760:	b	2d76c <fb_schema_table_destroy@@Base+0x38>
   2d764:	cmp	r4, r3
   2d768:	bcs	2d794 <fb_schema_table_destroy@@Base+0x60>
   2d76c:	ldr	r1, [r5, #4]!
   2d770:	add	r4, r4, #1
   2d774:	cmp	r1, #0
   2d778:	cmpne	r1, #2
   2d77c:	beq	2d764 <fb_schema_table_destroy@@Base+0x30>
   2d780:	mov	r0, r8
   2d784:	blx	r7
   2d788:	ldr	r3, [r6, #12]
   2d78c:	cmp	r4, r3
   2d790:	bcc	2d76c <fb_schema_table_destroy@@Base+0x38>
   2d794:	mov	r0, r6
   2d798:	pop	{r4, r5, r6, r7, r8, lr}
   2d79c:	b	2d1dc <fb_scope_table_visit@@Base+0x60>

0002d7a0 <fb_schema_table_init@@Base>:
   2d7a0:	cmp	r1, #2
   2d7a4:	push	{r4, r5, r6, lr}
   2d7a8:	mov	r4, #4
   2d7ac:	mov	r5, r0
   2d7b0:	bls	2d7c8 <fb_schema_table_init@@Base+0x28>
   2d7b4:	mov	r2, #179	; 0xb3
   2d7b8:	lsl	r4, r4, #1
   2d7bc:	mul	r3, r2, r4
   2d7c0:	cmp	r1, r3, lsr #8
   2d7c4:	bhi	2d7b8 <fb_schema_table_init@@Base+0x18>
   2d7c8:	mov	r1, #4
   2d7cc:	mov	r0, r4
   2d7d0:	bl	13f9c <calloc@plt>
   2d7d4:	cmp	r0, #0
   2d7d8:	str	r0, [r5]
   2d7dc:	movne	r0, #0
   2d7e0:	strne	r4, [r5, #12]
   2d7e4:	strne	r0, [r5, #4]
   2d7e8:	strne	r0, [r5, #8]
   2d7ec:	mvneq	r0, #0
   2d7f0:	pop	{r4, r5, r6, pc}

0002d7f4 <fb_schema_table_resize@@Base>:
   2d7f4:	b	2d49c <fb_scope_table_visit@@Base+0x320>

0002d7f8 <fb_schema_table_insert@@Base>:
   2d7f8:	b	2d20c <fb_scope_table_visit@@Base+0x90>

0002d7fc <fb_schema_table_insert_item@@Base>:
   2d7fc:	push	{lr}		; (str lr, [sp, #-4]!)
   2d800:	sub	sp, sp, #12
   2d804:	mov	r3, r1
   2d808:	str	r2, [sp]
   2d80c:	ldr	r2, [r1, #148]	; 0x94
   2d810:	ldr	r1, [r1, #144]	; 0x90
   2d814:	bl	2d20c <fb_scope_table_visit@@Base+0x90>
   2d818:	add	sp, sp, #12
   2d81c:	pop	{pc}		; (ldr pc, [sp], #4)

0002d820 <fb_schema_table_find@@Base>:
   2d820:	mov	ip, r0
   2d824:	mov	r3, r2
   2d828:	ldr	r0, [r0]
   2d82c:	mov	r2, r1
   2d830:	add	r1, ip, #12
   2d834:	b	2d674 <fb_scope_table_visit@@Base+0x4f8>

0002d838 <fb_schema_table_find_item@@Base>:
   2d838:	mov	ip, r0
   2d83c:	ldr	r3, [r1, #148]	; 0x94
   2d840:	ldr	r2, [r1, #144]	; 0x90
   2d844:	ldr	r0, [r0]
   2d848:	add	r1, ip, #12
   2d84c:	b	2d674 <fb_scope_table_visit@@Base+0x4f8>

0002d850 <fb_schema_table_remove@@Base>:
   2d850:	b	2d598 <fb_scope_table_visit@@Base+0x41c>

0002d854 <fb_schema_table_remove_item@@Base>:
   2d854:	ldr	r2, [r1, #148]	; 0x94
   2d858:	ldr	r1, [r1, #144]	; 0x90
   2d85c:	b	2d598 <fb_scope_table_visit@@Base+0x41c>

0002d860 <fb_schema_table_visit@@Base>:
   2d860:	ldr	r3, [r0, #12]
   2d864:	push	{r4, r5, r6, r7, r8, lr}
   2d868:	cmp	r3, #0
   2d86c:	ldr	r5, [r0]
   2d870:	popeq	{r4, r5, r6, r7, r8, pc}
   2d874:	mov	r7, r2
   2d878:	mov	r6, r1
   2d87c:	mov	r8, r0
   2d880:	sub	r5, r5, #4
   2d884:	mov	r4, #0
   2d888:	b	2d894 <fb_schema_table_visit@@Base+0x34>
   2d88c:	cmp	r4, r3
   2d890:	bcs	2d8bc <fb_schema_table_visit@@Base+0x5c>
   2d894:	ldr	r1, [r5, #4]!
   2d898:	add	r4, r4, #1
   2d89c:	cmp	r1, #0
   2d8a0:	cmpne	r1, #2
   2d8a4:	beq	2d88c <fb_schema_table_visit@@Base+0x2c>
   2d8a8:	mov	r0, r7
   2d8ac:	blx	r6
   2d8b0:	ldr	r3, [r8, #12]
   2d8b4:	cmp	r4, r3
   2d8b8:	bcc	2d894 <fb_schema_table_visit@@Base+0x34>
   2d8bc:	pop	{r4, r5, r6, r7, r8, pc}

0002d8c0 <__flatcc_fb_copy_path_n@@Base>:
   2d8c0:	push	{r4, r5, r6, lr}
   2d8c4:	mov	r2, r1
   2d8c8:	mov	r4, r1
   2d8cc:	mov	r1, #0
   2d8d0:	mov	r6, r0
   2d8d4:	bl	140c8 <memchr@plt>
   2d8d8:	cmp	r0, #0
   2d8dc:	subne	r4, r0, r6
   2d8e0:	add	r0, r4, #1
   2d8e4:	bl	14038 <malloc@plt>
   2d8e8:	subs	r5, r0, #0
   2d8ec:	beq	2d904 <__flatcc_fb_copy_path_n@@Base+0x44>
   2d8f0:	mov	r1, r6
   2d8f4:	mov	r2, r4
   2d8f8:	bl	13fd8 <memcpy@plt>
   2d8fc:	mov	r3, #0
   2d900:	strb	r3, [r5, r4]
   2d904:	mov	r0, r5
   2d908:	pop	{r4, r5, r6, pc}

0002d90c <__flatcc_fb_copy_path@@Base>:
   2d90c:	push	{r4, r5, r6, lr}
   2d910:	mov	r6, r0
   2d914:	bl	14074 <strlen@plt>
   2d918:	mov	r4, r0
   2d91c:	add	r0, r0, #1
   2d920:	bl	14038 <malloc@plt>
   2d924:	subs	r5, r0, #0
   2d928:	beq	2d940 <__flatcc_fb_copy_path@@Base+0x34>
   2d92c:	mov	r1, r6
   2d930:	mov	r2, r4
   2d934:	bl	13fd8 <memcpy@plt>
   2d938:	mov	r3, #0
   2d93c:	strb	r3, [r5, r4]
   2d940:	mov	r0, r5
   2d944:	pop	{r4, r5, r6, pc}

0002d948 <__flatcc_fb_chomp@@Base>:
   2d948:	push	{r4, r5, r6, r7, r8, lr}
   2d94c:	subs	r5, r2, #0
   2d950:	mov	r4, r1
   2d954:	beq	2d988 <__flatcc_fb_chomp@@Base+0x40>
   2d958:	mov	r7, r0
   2d95c:	mov	r0, r5
   2d960:	bl	14074 <strlen@plt>
   2d964:	cmp	r0, r4
   2d968:	mov	r2, r0
   2d96c:	bcs	2d988 <__flatcc_fb_chomp@@Base+0x40>
   2d970:	sub	r6, r4, r0
   2d974:	mov	r1, r5
   2d978:	add	r0, r7, r6
   2d97c:	bl	14128 <strncmp@plt>
   2d980:	cmp	r0, #0
   2d984:	moveq	r4, r6
   2d988:	mov	r0, r4
   2d98c:	pop	{r4, r5, r6, r7, r8, pc}

0002d990 <__flatcc_fb_create_join_path_n@@Base>:
   2d990:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2d994:	mov	r9, r0
   2d998:	ldr	r8, [sp, #32]
   2d99c:	mov	r4, r1
   2d9a0:	cmp	r8, #0
   2d9a4:	mov	sl, r2
   2d9a8:	mov	r7, r3
   2d9ac:	moveq	r5, r8
   2d9b0:	beq	2d9c0 <__flatcc_fb_create_join_path_n@@Base+0x30>
   2d9b4:	mov	r0, r8
   2d9b8:	bl	14074 <strlen@plt>
   2d9bc:	mov	r5, r0
   2d9c0:	cmp	r9, #0
   2d9c4:	beq	2da88 <__flatcc_fb_create_join_path_n@@Base+0xf8>
   2d9c8:	cmp	r7, #0
   2d9cc:	beq	2d9fc <__flatcc_fb_create_join_path_n@@Base+0x6c>
   2d9d0:	ldrb	r3, [sl]
   2d9d4:	cmp	r3, #92	; 0x5c
   2d9d8:	cmpne	r3, #47	; 0x2f
   2d9dc:	moveq	r3, #1
   2d9e0:	movne	r3, #0
   2d9e4:	beq	2da88 <__flatcc_fb_create_join_path_n@@Base+0xf8>
   2d9e8:	cmp	r7, #1
   2d9ec:	bls	2d9fc <__flatcc_fb_create_join_path_n@@Base+0x6c>
   2d9f0:	ldrb	r2, [sl, #1]
   2d9f4:	cmp	r2, #58	; 0x3a
   2d9f8:	beq	2dacc <__flatcc_fb_create_join_path_n@@Base+0x13c>
   2d9fc:	ldr	r3, [sp, #36]	; 0x24
   2da00:	cmp	r3, #0
   2da04:	cmpne	r4, #0
   2da08:	beq	2da20 <__flatcc_fb_create_join_path_n@@Base+0x90>
   2da0c:	add	r3, r9, r4
   2da10:	ldrb	r3, [r3, #-1]
   2da14:	cmp	r3, #92	; 0x5c
   2da18:	cmpne	r3, #47	; 0x2f
   2da1c:	bne	2da90 <__flatcc_fb_create_join_path_n@@Base+0x100>
   2da20:	add	r0, r7, #1
   2da24:	add	r0, r0, r5
   2da28:	add	r0, r0, r4
   2da2c:	bl	14038 <malloc@plt>
   2da30:	subs	r6, r0, #0
   2da34:	beq	2da7c <__flatcc_fb_create_join_path_n@@Base+0xec>
   2da38:	mov	r1, r9
   2da3c:	mov	r2, r4
   2da40:	bl	13fd8 <memcpy@plt>
   2da44:	mov	r1, sl
   2da48:	mov	r2, r7
   2da4c:	add	r0, r6, r4
   2da50:	add	r7, r4, r7
   2da54:	bl	13fd8 <memcpy@plt>
   2da58:	mov	r2, r5
   2da5c:	mov	r1, r8
   2da60:	add	r0, r6, r7
   2da64:	add	r5, r6, r5
   2da68:	bl	13fd8 <memcpy@plt>
   2da6c:	mov	r3, #0
   2da70:	strb	r3, [r5, r7]
   2da74:	mov	r0, r6
   2da78:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2da7c:	mov	r6, #0
   2da80:	mov	r0, r6
   2da84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2da88:	mov	r4, #0
   2da8c:	b	2da20 <__flatcc_fb_create_join_path_n@@Base+0x90>
   2da90:	ldr	r3, [sp, #36]	; 0x24
   2da94:	add	r0, r3, r4
   2da98:	add	r0, r0, #1
   2da9c:	add	r0, r0, r7
   2daa0:	add	r0, r0, r5
   2daa4:	bl	14038 <malloc@plt>
   2daa8:	subs	r6, r0, #0
   2daac:	beq	2da7c <__flatcc_fb_create_join_path_n@@Base+0xec>
   2dab0:	mov	r2, r4
   2dab4:	mov	r1, r9
   2dab8:	bl	13fd8 <memcpy@plt>
   2dabc:	mov	r3, #47	; 0x2f
   2dac0:	strb	r3, [r6, r4]
   2dac4:	add	r4, r4, #1
   2dac8:	b	2da44 <__flatcc_fb_create_join_path_n@@Base+0xb4>
   2dacc:	mov	r4, r3
   2dad0:	b	2da20 <__flatcc_fb_create_join_path_n@@Base+0x90>

0002dad4 <__flatcc_fb_create_join_path@@Base>:
   2dad4:	push	{r4, r5, r6, r7, r8, lr}
   2dad8:	subs	r5, r0, #0
   2dadc:	sub	sp, sp, #8
   2dae0:	mov	r4, r1
   2dae4:	mov	r7, r2
   2dae8:	mov	r8, r3
   2daec:	moveq	r6, r5
   2daf0:	beq	2dafc <__flatcc_fb_create_join_path@@Base+0x28>
   2daf4:	bl	14074 <strlen@plt>
   2daf8:	mov	r6, r0
   2dafc:	cmp	r4, #0
   2db00:	beq	2db2c <__flatcc_fb_create_join_path@@Base+0x58>
   2db04:	mov	r0, r4
   2db08:	bl	14074 <strlen@plt>
   2db0c:	mov	r3, r0
   2db10:	stm	sp, {r7, r8}
   2db14:	mov	r2, r4
   2db18:	mov	r1, r6
   2db1c:	mov	r0, r5
   2db20:	bl	2d990 <__flatcc_fb_create_join_path_n@@Base>
   2db24:	add	sp, sp, #8
   2db28:	pop	{r4, r5, r6, r7, r8, pc}
   2db2c:	mov	r3, r4
   2db30:	b	2db10 <__flatcc_fb_create_join_path@@Base+0x3c>

0002db34 <__flatcc_fb_create_path_ext_n@@Base>:
   2db34:	push	{lr}		; (str lr, [sp, #-4]!)
   2db38:	sub	sp, sp, #12
   2db3c:	mov	ip, #0
   2db40:	str	r2, [sp]
   2db44:	mov	r3, r1
   2db48:	mov	r2, r0
   2db4c:	str	ip, [sp, #4]
   2db50:	mov	r1, ip
   2db54:	mov	r0, ip
   2db58:	bl	2d990 <__flatcc_fb_create_join_path_n@@Base>
   2db5c:	add	sp, sp, #12
   2db60:	pop	{pc}		; (ldr pc, [sp], #4)

0002db64 <__flatcc_fb_create_path_ext@@Base>:
   2db64:	mov	r3, #0
   2db68:	mov	r2, r1
   2db6c:	mov	r1, r0
   2db70:	mov	r0, r3
   2db74:	b	2dad4 <__flatcc_fb_create_join_path@@Base>

0002db78 <__flatcc_fb_create_make_path_n@@Base>:
   2db78:	cmp	r1, #1
   2db7c:	push	{r4, r5, r6, r7, r8, lr}
   2db80:	mov	r6, r0
   2db84:	beq	2dc94 <__flatcc_fb_create_make_path_n@@Base+0x11c>
   2db88:	bls	2dca4 <__flatcc_fb_create_make_path_n@@Base+0x12c>
   2db8c:	mov	r4, r0
   2db90:	sub	r5, r1, #1
   2db94:	ldrb	r2, [r4], #1
   2db98:	mov	r3, #1
   2db9c:	mov	ip, r4
   2dba0:	b	2dbc0 <__flatcc_fb_create_make_path_n@@Base+0x48>
   2dba4:	cmp	r2, #32
   2dba8:	addeq	r1, r1, #1
   2dbac:	cmp	lr, r5
   2dbb0:	mov	r2, r0
   2dbb4:	add	r3, r3, #1
   2dbb8:	add	ip, ip, #1
   2dbbc:	bcs	2dbdc <__flatcc_fb_create_make_path_n@@Base+0x64>
   2dbc0:	cmp	r2, #92	; 0x5c
   2dbc4:	ldrb	r0, [ip]
   2dbc8:	mov	lr, r3
   2dbcc:	bne	2dba4 <__flatcc_fb_create_make_path_n@@Base+0x2c>
   2dbd0:	cmp	r0, #32
   2dbd4:	addeq	r1, r1, #1
   2dbd8:	b	2dba4 <__flatcc_fb_create_make_path_n@@Base+0x2c>
   2dbdc:	add	r1, r1, #1
   2dbe0:	cmp	r0, #32
   2dbe4:	movne	r0, r1
   2dbe8:	addeq	r0, r1, #1
   2dbec:	bl	14038 <malloc@plt>
   2dbf0:	cmp	r0, #0
   2dbf4:	popeq	{r4, r5, r6, r7, r8, pc}
   2dbf8:	ldrb	r3, [r6]
   2dbfc:	mov	r2, r4
   2dc00:	mov	r1, #1
   2dc04:	mov	lr, #0
   2dc08:	mov	r7, #92	; 0x5c
   2dc0c:	b	2dc4c <__flatcc_fb_create_make_path_n@@Base+0xd4>
   2dc10:	cmp	r3, #32
   2dc14:	strbeq	r7, [r0, lr]
   2dc18:	ldrbne	r4, [r2]
   2dc1c:	ldrbeq	r4, [r2]
   2dc20:	movne	ip, lr
   2dc24:	movne	r6, r1
   2dc28:	addeq	ip, lr, #1
   2dc2c:	moveq	r6, r1
   2dc30:	cmp	r5, r6
   2dc34:	strb	r3, [r0, ip]
   2dc38:	add	r1, r1, #1
   2dc3c:	mov	r3, r4
   2dc40:	add	r2, r2, #1
   2dc44:	add	lr, ip, #1
   2dc48:	bls	2dc70 <__flatcc_fb_create_make_path_n@@Base+0xf8>
   2dc4c:	cmp	r3, #92	; 0x5c
   2dc50:	bne	2dc10 <__flatcc_fb_create_make_path_n@@Base+0x98>
   2dc54:	ldrb	r4, [r2]
   2dc58:	mov	ip, lr
   2dc5c:	mov	r6, r1
   2dc60:	cmp	r4, #32
   2dc64:	strbeq	r3, [r0, lr]
   2dc68:	addeq	ip, lr, #1
   2dc6c:	b	2dc30 <__flatcc_fb_create_make_path_n@@Base+0xb8>
   2dc70:	cmp	r4, #32
   2dc74:	moveq	r3, #92	; 0x5c
   2dc78:	strbeq	r3, [r0, lr]
   2dc7c:	mov	r3, r0
   2dc80:	addeq	lr, ip, #2
   2dc84:	mov	r2, #0
   2dc88:	strb	r4, [r3, lr]!
   2dc8c:	strb	r2, [r3, #1]
   2dc90:	pop	{r4, r5, r6, r7, r8, pc}
   2dc94:	ldrb	r4, [r0]
   2dc98:	cmp	r4, #92	; 0x5c
   2dc9c:	cmpne	r4, #32
   2dca0:	beq	2dcb0 <__flatcc_fb_create_make_path_n@@Base+0x138>
   2dca4:	mov	r0, r6
   2dca8:	pop	{r4, r5, r6, r7, r8, lr}
   2dcac:	b	2d8c0 <__flatcc_fb_copy_path_n@@Base>
   2dcb0:	mov	r0, #3
   2dcb4:	bl	14038 <malloc@plt>
   2dcb8:	cmp	r0, #0
   2dcbc:	popeq	{r4, r5, r6, r7, r8, pc}
   2dcc0:	mov	r2, #92	; 0x5c
   2dcc4:	mov	r3, #0
   2dcc8:	strb	r4, [r0, #1]
   2dccc:	strb	r2, [r0]
   2dcd0:	strb	r3, [r0, #2]
   2dcd4:	pop	{r4, r5, r6, r7, r8, pc}

0002dcd8 <__flatcc_fb_create_make_path@@Base>:
   2dcd8:	push	{r4, lr}
   2dcdc:	mov	r4, r0
   2dce0:	bl	14074 <strlen@plt>
   2dce4:	mov	r1, r0
   2dce8:	mov	r0, r4
   2dcec:	pop	{r4, lr}
   2dcf0:	b	2db78 <__flatcc_fb_create_make_path_n@@Base>

0002dcf4 <__flatcc_fb_find_basename@@Base>:
   2dcf4:	add	r1, r0, r1
   2dcf8:	cmp	r0, r1
   2dcfc:	beq	2dd40 <__flatcc_fb_find_basename@@Base+0x4c>
   2dd00:	ldrb	r2, [r1, #-1]
   2dd04:	sub	r3, r1, #1
   2dd08:	cmp	r2, #47	; 0x2f
   2dd0c:	cmpne	r2, #92	; 0x5c
   2dd10:	bne	2dd30 <__flatcc_fb_find_basename@@Base+0x3c>
   2dd14:	b	2dd48 <__flatcc_fb_find_basename@@Base+0x54>
   2dd18:	ldrb	r2, [r3, #-1]
   2dd1c:	sub	r1, r3, #1
   2dd20:	cmp	r2, #92	; 0x5c
   2dd24:	cmpne	r2, #47	; 0x2f
   2dd28:	beq	2dd38 <__flatcc_fb_find_basename@@Base+0x44>
   2dd2c:	mov	r3, r1
   2dd30:	cmp	r0, r3
   2dd34:	bne	2dd18 <__flatcc_fb_find_basename@@Base+0x24>
   2dd38:	sub	r0, r3, r0
   2dd3c:	bx	lr
   2dd40:	mov	r3, r0
   2dd44:	b	2dd38 <__flatcc_fb_find_basename@@Base+0x44>
   2dd48:	mov	r3, r1
   2dd4c:	b	2dd38 <__flatcc_fb_find_basename@@Base+0x44>

0002dd50 <__flatcc_fb_create_basename@@Base>:
   2dd50:	push	{r4, r5, r6, lr}
   2dd54:	mov	r6, r2
   2dd58:	mov	r5, r1
   2dd5c:	mov	r4, r0
   2dd60:	bl	2dcf4 <__flatcc_fb_find_basename@@Base>
   2dd64:	mov	r2, r6
   2dd68:	add	r4, r4, r0
   2dd6c:	sub	r1, r5, r0
   2dd70:	mov	r0, r4
   2dd74:	bl	2d948 <__flatcc_fb_chomp@@Base>
   2dd78:	mov	r5, r0
   2dd7c:	add	r0, r0, #1
   2dd80:	bl	14038 <malloc@plt>
   2dd84:	subs	r6, r0, #0
   2dd88:	beq	2dda0 <__flatcc_fb_create_basename@@Base+0x50>
   2dd8c:	mov	r1, r4
   2dd90:	mov	r2, r5
   2dd94:	bl	13fd8 <memcpy@plt>
   2dd98:	mov	r3, #0
   2dd9c:	strb	r3, [r6, r5]
   2dda0:	mov	r0, r6
   2dda4:	pop	{r4, r5, r6, pc}

0002dda8 <__flatcc_fb_read_file@@Base>:
   2dda8:	push	{r4, r5, r6, r7, r8, r9, lr}
   2ddac:	mov	r4, r1
   2ddb0:	ldr	r1, [pc, #228]	; 2de9c <__flatcc_fb_read_file@@Base+0xf4>
   2ddb4:	subs	r8, r2, #0
   2ddb8:	sub	sp, sp, #12
   2ddbc:	add	r1, pc, r1
   2ddc0:	addeq	r8, sp, #4
   2ddc4:	bl	13fc0 <fopen@plt>
   2ddc8:	subs	r6, r0, #0
   2ddcc:	beq	2de94 <__flatcc_fb_read_file@@Base+0xec>
   2ddd0:	mov	r2, #2
   2ddd4:	mov	r1, #0
   2ddd8:	bl	1411c <fseek@plt>
   2dddc:	mov	r0, r6
   2dde0:	bl	13fe4 <ftell@plt>
   2dde4:	cmp	r4, #0
   2dde8:	cmpne	r0, r4
   2ddec:	mov	r5, r0
   2ddf0:	movhi	r4, #1
   2ddf4:	movls	r4, #0
   2ddf8:	str	r0, [r8]
   2ddfc:	bhi	2de88 <__flatcc_fb_read_file@@Base+0xe0>
   2de00:	mov	r0, r6
   2de04:	bl	13ffc <rewind@plt>
   2de08:	cmp	r5, #0
   2de0c:	movne	r0, r5
   2de10:	moveq	r0, #1
   2de14:	bl	14038 <malloc@plt>
   2de18:	subs	r7, r0, #0
   2de1c:	beq	2de88 <__flatcc_fb_read_file@@Base+0xe0>
   2de20:	mov	r9, #1
   2de24:	b	2de2c <__flatcc_fb_read_file@@Base+0x84>
   2de28:	add	r4, r4, r0
   2de2c:	mov	r3, r6
   2de30:	sub	r2, r5, r4
   2de34:	mov	r1, r9
   2de38:	add	r0, r7, r4
   2de3c:	bl	14020 <fread@plt>
   2de40:	cmp	r0, #0
   2de44:	bne	2de28 <__flatcc_fb_read_file@@Base+0x80>
   2de48:	cmp	r4, r5
   2de4c:	mov	r0, r6
   2de50:	bne	2de68 <__flatcc_fb_read_file@@Base+0xc0>
   2de54:	bl	140d4 <fclose@plt>
   2de58:	mov	r0, r7
   2de5c:	str	r4, [r8]
   2de60:	add	sp, sp, #12
   2de64:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2de68:	bl	140d4 <fclose@plt>
   2de6c:	mov	r0, r7
   2de70:	bl	13fcc <free@plt>
   2de74:	mov	r7, #0
   2de78:	mov	r0, r7
   2de7c:	str	r5, [r8]
   2de80:	add	sp, sp, #12
   2de84:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2de88:	mov	r0, r6
   2de8c:	bl	140d4 <fclose@plt>
   2de90:	b	2de74 <__flatcc_fb_read_file@@Base+0xcc>
   2de94:	mov	r5, r6
   2de98:	b	2de74 <__flatcc_fb_read_file@@Base+0xcc>
   2de9c:	andeq	r9, r2, r0, lsr #23

0002dea0 <__flatcc_fb_default_error_out@@Base>:
   2dea0:	ldr	r3, [pc, #24]	; 2dec0 <__flatcc_fb_default_error_out@@Base+0x20>
   2dea4:	ldr	ip, [pc, #24]	; 2dec4 <__flatcc_fb_default_error_out@@Base+0x24>
   2dea8:	add	r3, pc, r3
   2deac:	mov	r0, r1
   2deb0:	ldr	ip, [r3, ip]
   2deb4:	mov	r1, #1
   2deb8:	ldr	r3, [ip]
   2debc:	b	14014 <fwrite@plt>
   2dec0:	andeq	sp, r3, r0, asr r1
   2dec4:	andeq	r0, r0, r0, lsr #1
   2dec8:	add	r0, r1, #4
   2decc:	b	2c0f4 <fb_symbol_table_clear@@Base>
   2ded0:	ldr	ip, [r0, #28]
   2ded4:	push	{r4, r5, r6, r7, r8, lr}
   2ded8:	mov	r4, r0
   2dedc:	add	r5, ip, ip, lsl #2
   2dee0:	ldr	r0, [r0, #20]
   2dee4:	mov	r6, r1
   2dee8:	lsl	r5, r5, #2
   2deec:	ldr	r1, [r4, #40]	; 0x28
   2def0:	mov	r7, r2
   2def4:	add	r2, r0, r5
   2def8:	cmp	r2, r1
   2defc:	mov	r8, r3
   2df00:	str	r2, [r4, #24]
   2df04:	beq	2df3c <__flatcc_fb_default_error_out@@Base+0x9c>
   2df08:	ldr	r0, [r4, #60]	; 0x3c
   2df0c:	ldr	r2, [r4, #64]	; 0x40
   2df10:	sub	r0, r7, r0
   2df14:	sub	r8, r8, r7
   2df18:	add	r0, r0, #1
   2df1c:	add	r3, r1, #20
   2df20:	str	r8, [r1, #4]
   2df24:	str	r6, [r1, #16]
   2df28:	str	r7, [r1]
   2df2c:	str	r0, [r1, #12]
   2df30:	str	r2, [r1, #8]
   2df34:	str	r3, [r4, #40]	; 0x28
   2df38:	pop	{r4, r5, r6, r7, r8, pc}
   2df3c:	cmp	ip, #0
   2df40:	lslne	r3, ip, #1
   2df44:	addne	r1, r3, ip, lsl #3
   2df48:	moveq	r3, #1024	; 0x400
   2df4c:	lslne	r1, r1, #2
   2df50:	moveq	r1, #20480	; 0x5000
   2df54:	str	r3, [r4, #28]
   2df58:	bl	14008 <realloc@plt>
   2df5c:	cmp	r0, #0
   2df60:	str	r0, [r4, #20]
   2df64:	beq	2df80 <__flatcc_fb_default_error_out@@Base+0xe0>
   2df68:	ldr	r3, [r4, #28]
   2df6c:	add	r1, r0, r5
   2df70:	add	r3, r3, r3, lsl #2
   2df74:	add	r0, r0, r3, lsl #2
   2df78:	str	r0, [r4, #24]
   2df7c:	b	2df08 <__flatcc_fb_default_error_out@@Base+0x68>
   2df80:	bl	141c0 <__assert_fail@plt+0x80>
   2df84:	ldr	r2, [r0, #40]	; 0x28
   2df88:	push	{r4, r5, r6, r7, r8, lr}
   2df8c:	add	r5, r2, #20
   2df90:	ldr	r8, [r0, #24]
   2df94:	mov	r4, r0
   2df98:	cmp	r8, r5
   2df9c:	str	r5, [r0, #40]	; 0x28
   2dfa0:	mov	r1, r2
   2dfa4:	beq	2e058 <__flatcc_fb_default_error_out@@Base+0x1b8>
   2dfa8:	ldr	r3, [r2, #36]	; 0x24
   2dfac:	cmn	r3, #964	; 0x3c4
   2dfb0:	bne	2e050 <__flatcc_fb_default_error_out@@Base+0x1b0>
   2dfb4:	mov	r2, r5
   2dfb8:	ldr	r0, [r0, #52]	; 0x34
   2dfbc:	mov	r7, #1
   2dfc0:	mov	r6, #65536	; 0x10000
   2dfc4:	b	2e000 <__flatcc_fb_default_error_out@@Base+0x160>
   2dfc8:	ldr	r1, [r4, #36]	; 0x24
   2dfcc:	str	r0, [r4, #52]	; 0x34
   2dfd0:	str	r5, [r3, #4]
   2dfd4:	add	r5, r2, #20
   2dfd8:	cmp	r5, r8
   2dfdc:	str	r1, [r3]
   2dfe0:	mov	r1, r2
   2dfe4:	str	r3, [r4, #36]	; 0x24
   2dfe8:	str	r5, [r4, #40]	; 0x28
   2dfec:	mov	r2, r5
   2dff0:	beq	2e058 <__flatcc_fb_default_error_out@@Base+0x1b8>
   2dff4:	ldr	r3, [r1, #36]	; 0x24
   2dff8:	cmn	r3, #964	; 0x3c4
   2dffc:	bne	2e050 <__flatcc_fb_default_error_out@@Base+0x1b0>
   2e000:	ldr	r3, [r4, #44]	; 0x2c
   2e004:	add	r1, r0, #16
   2e008:	cmp	r1, r3
   2e00c:	movls	r3, r0
   2e010:	movls	r0, r1
   2e014:	bls	2dfc8 <__flatcc_fb_default_error_out@@Base+0x128>
   2e018:	mov	r1, r7
   2e01c:	mov	r0, r6
   2e020:	bl	13f9c <calloc@plt>
   2e024:	cmp	r0, #0
   2e028:	beq	2e07c <__flatcc_fb_default_error_out@@Base+0x1dc>
   2e02c:	ldr	r2, [r4, #48]	; 0x30
   2e030:	add	r3, r0, #65536	; 0x10000
   2e034:	str	r2, [r0]
   2e038:	str	r0, [r4, #48]	; 0x30
   2e03c:	str	r3, [r4, #44]	; 0x2c
   2e040:	ldr	r2, [r4, #40]	; 0x28
   2e044:	add	r3, r0, #16
   2e048:	add	r0, r0, #32
   2e04c:	b	2dfc8 <__flatcc_fb_default_error_out@@Base+0x128>
   2e050:	mov	r0, r5
   2e054:	pop	{r4, r5, r6, r7, r8, pc}
   2e058:	str	r1, [r4, #40]	; 0x28
   2e05c:	ldr	r3, [pc, #28]	; 2e080 <__flatcc_fb_default_error_out@@Base+0x1e0>
   2e060:	ldr	r1, [pc, #28]	; 2e084 <__flatcc_fb_default_error_out@@Base+0x1e4>
   2e064:	ldr	r0, [pc, #28]	; 2e088 <__flatcc_fb_default_error_out@@Base+0x1e8>
   2e068:	add	r3, pc, r3
   2e06c:	ldr	r2, [pc, #24]	; 2e08c <__flatcc_fb_default_error_out@@Base+0x1ec>
   2e070:	add	r1, pc, r1
   2e074:	add	r0, pc, r0
   2e078:	bl	14140 <__assert_fail@plt>
   2e07c:	bl	141c0 <__assert_fail@plt+0x80>
   2e080:	strdeq	r9, [r2], -r8
   2e084:	andeq	r9, r2, r8, lsl sl
   2e088:	andeq	fp, r1, r8, asr #4
   2e08c:	andeq	r0, r0, r5, asr r1
   2e090:	ldr	r3, [r0, #40]	; 0x28
   2e094:	ldr	r3, [r3, #16]
   2e098:	cmp	r3, #0
   2e09c:	bxeq	lr
   2e0a0:	push	{r4, lr}
   2e0a4:	mov	r4, r0
   2e0a8:	b	2e0cc <__flatcc_fb_default_error_out@@Base+0x22c>
   2e0ac:	cmp	r3, #125	; 0x7d
   2e0b0:	beq	2e0ec <__flatcc_fb_default_error_out@@Base+0x24c>
   2e0b4:	mov	r0, r4
   2e0b8:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2e0bc:	ldr	r3, [r4, #40]	; 0x28
   2e0c0:	ldr	r3, [r3, #16]
   2e0c4:	cmp	r3, #0
   2e0c8:	beq	2e0e8 <__flatcc_fb_default_error_out@@Base+0x248>
   2e0cc:	cmp	r3, #59	; 0x3b
   2e0d0:	bne	2e0ac <__flatcc_fb_default_error_out@@Base+0x20c>
   2e0d4:	mov	r0, r4
   2e0d8:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2e0dc:	mov	r3, #0
   2e0e0:	str	r3, [r4, #36]	; 0x24
   2e0e4:	pop	{r4, pc}
   2e0e8:	pop	{r4, pc}
   2e0ec:	mov	r3, #0
   2e0f0:	str	r3, [r4, #36]	; 0x24
   2e0f4:	pop	{r4, pc}
   2e0f8:	ldr	r3, [r0, #40]	; 0x28
   2e0fc:	ldr	r3, [r3, #16]
   2e100:	cmp	r3, #0
   2e104:	bxeq	lr
   2e108:	push	{r4, r5, r6, lr}
   2e10c:	mov	r5, r1
   2e110:	mov	r4, r0
   2e114:	b	2e12c <__flatcc_fb_default_error_out@@Base+0x28c>
   2e118:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2e11c:	ldr	r3, [r4, #40]	; 0x28
   2e120:	ldr	r3, [r3, #16]
   2e124:	cmp	r3, #0
   2e128:	beq	2e148 <__flatcc_fb_default_error_out@@Base+0x2a8>
   2e12c:	cmp	r5, r3
   2e130:	mov	r0, r4
   2e134:	bne	2e118 <__flatcc_fb_default_error_out@@Base+0x278>
   2e138:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2e13c:	mov	r3, #0
   2e140:	str	r3, [r4, #36]	; 0x24
   2e144:	pop	{r4, r5, r6, pc}
   2e148:	pop	{r4, r5, r6, pc}

0002e14c <__flatcc_fb_print_error@@Base>:
   2e14c:	push	{r1, r2, r3}
   2e150:	mov	r1, #200	; 0xc8
   2e154:	push	{r4, r5, r6, lr}
   2e158:	sub	sp, sp, #212	; 0xd4
   2e15c:	add	ip, sp, #232	; 0xe8
   2e160:	add	r6, sp, #8
   2e164:	mov	r5, r0
   2e168:	mov	r3, ip
   2e16c:	mov	r0, r6
   2e170:	ldr	r2, [sp, #228]	; 0xe4
   2e174:	str	ip, [sp, #4]
   2e178:	bl	14104 <vsnprintf@plt>
   2e17c:	cmp	r0, #199	; 0xc7
   2e180:	movle	r4, r0
   2e184:	ble	2e1a4 <__flatcc_fb_print_error@@Base+0x58>
   2e188:	ldr	r3, [pc, #60]	; 2e1cc <__flatcc_fb_print_error@@Base+0x80>
   2e18c:	mov	r4, #199	; 0xc7
   2e190:	add	r3, pc, r3
   2e194:	ldrb	r2, [r3, #4]
   2e198:	ldr	r0, [r3]
   2e19c:	strb	r2, [sp, #207]	; 0xcf
   2e1a0:	str	r0, [sp, #203]	; 0xcb
   2e1a4:	ldr	r0, [r5, #12]
   2e1a8:	mov	r1, r6
   2e1ac:	ldr	r3, [r5, #8]
   2e1b0:	mov	r2, r4
   2e1b4:	blx	r3
   2e1b8:	mov	r0, r4
   2e1bc:	add	sp, sp, #212	; 0xd4
   2e1c0:	pop	{r4, r5, r6, lr}
   2e1c4:	add	sp, sp, #12
   2e1c8:	bx	lr
   2e1cc:	andeq	r9, r2, r8, asr r9

0002e1d0 <__flatcc_error_find_file_of_token@@Base>:
   2e1d0:	cmp	r0, #0
   2e1d4:	beq	2e210 <__flatcc_error_find_file_of_token@@Base+0x40>
   2e1d8:	ldr	r3, [r0, #20]
   2e1dc:	cmp	r3, r1
   2e1e0:	bhi	2e1f0 <__flatcc_error_find_file_of_token@@Base+0x20>
   2e1e4:	ldr	r3, [r0, #24]
   2e1e8:	cmp	r1, r3
   2e1ec:	bcc	2e208 <__flatcc_error_find_file_of_token@@Base+0x38>
   2e1f0:	ldr	r0, [r0]
   2e1f4:	cmp	r0, #0
   2e1f8:	bne	2e1d8 <__flatcc_error_find_file_of_token@@Base+0x8>
   2e1fc:	ldr	r0, [pc, #24]	; 2e21c <__flatcc_error_find_file_of_token@@Base+0x4c>
   2e200:	add	r0, pc, r0
   2e204:	bx	lr
   2e208:	ldr	r0, [r0, #520]	; 0x208
   2e20c:	bx	lr
   2e210:	ldr	r0, [pc, #8]	; 2e220 <__flatcc_error_find_file_of_token@@Base+0x50>
   2e214:	add	r0, pc, r0
   2e218:	bx	lr
   2e21c:	andeq	ip, r1, r0, asr #18
   2e220:	andeq	ip, r1, ip, lsr #18

0002e224 <__flatcc_error_report@@Base>:
   2e224:	push	{r4, r5, r6, r7, r8, r9, lr}
   2e228:	sub	sp, sp, #44	; 0x2c
   2e22c:	adds	ip, r1, #0
   2e230:	ldr	r6, [sp, #72]	; 0x48
   2e234:	movne	ip, #1
   2e238:	cmp	r6, #0
   2e23c:	movne	lr, #0
   2e240:	andeq	lr, ip, #1
   2e244:	cmp	lr, #0
   2e248:	mov	r4, r3
   2e24c:	ldrne	r3, [r1, #4]
   2e250:	ldrne	r6, [r1]
   2e254:	strne	r3, [sp, #76]	; 0x4c
   2e258:	cmp	r2, #0
   2e25c:	mov	r5, r0
   2e260:	mov	r8, r2
   2e264:	mov	r7, r1
   2e268:	beq	2e3e0 <__flatcc_error_report@@Base+0x1bc>
   2e26c:	cmp	r6, #0
   2e270:	beq	2e3d0 <__flatcc_error_report@@Base+0x1ac>
   2e274:	clz	r1, r4
   2e278:	lsr	r1, r1, #5
   2e27c:	tst	ip, r1
   2e280:	bne	2e304 <__flatcc_error_report@@Base+0xe0>
   2e284:	cmp	r4, #0
   2e288:	moveq	ip, #0
   2e28c:	andne	ip, ip, #1
   2e290:	cmp	ip, #0
   2e294:	bne	2e35c <__flatcc_error_report@@Base+0x138>
   2e298:	cmp	r7, #0
   2e29c:	movne	r1, #0
   2e2a0:	andeq	r1, r1, #1
   2e2a4:	cmp	r1, #0
   2e2a8:	bne	2e344 <__flatcc_error_report@@Base+0x120>
   2e2ac:	cmp	r4, #0
   2e2b0:	beq	2e3ec <__flatcc_error_report@@Base+0x1c8>
   2e2b4:	mov	r1, r4
   2e2b8:	mov	r0, r5
   2e2bc:	bl	2e1d0 <__flatcc_error_find_file_of_token@@Base>
   2e2c0:	ldr	r1, [r4, #12]
   2e2c4:	ldr	lr, [r4]
   2e2c8:	ldr	ip, [r4, #4]
   2e2cc:	ldr	r3, [r4, #8]
   2e2d0:	mov	r2, r8
   2e2d4:	stmib	sp, {r1, ip, lr}
   2e2d8:	ldr	r1, [pc, #288]	; 2e400 <__flatcc_error_report@@Base+0x1dc>
   2e2dc:	str	r3, [sp]
   2e2e0:	add	r1, pc, r1
   2e2e4:	mov	r3, r0
   2e2e8:	mov	r0, r5
   2e2ec:	bl	2e14c <__flatcc_fb_print_error@@Base>
   2e2f0:	ldr	r3, [r5, #108]	; 0x6c
   2e2f4:	add	r3, r3, #1
   2e2f8:	str	r3, [r5, #108]	; 0x6c
   2e2fc:	add	sp, sp, #44	; 0x2c
   2e300:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2e304:	mov	r1, r7
   2e308:	mov	r0, r5
   2e30c:	bl	2e1d0 <__flatcc_error_find_file_of_token@@Base>
   2e310:	ldr	r2, [sp, #76]	; 0x4c
   2e314:	ldr	r3, [r7, #8]
   2e318:	ldr	r1, [pc, #228]	; 2e404 <__flatcc_error_report@@Base+0x1e0>
   2e31c:	str	r8, [sp, #12]
   2e320:	str	r6, [sp, #8]
   2e324:	str	r2, [sp, #4]
   2e328:	ldr	r2, [r7, #12]
   2e32c:	add	r1, pc, r1
   2e330:	str	r2, [sp]
   2e334:	mov	r2, r0
   2e338:	mov	r0, r5
   2e33c:	bl	2e14c <__flatcc_fb_print_error@@Base>
   2e340:	b	2e2f0 <__flatcc_error_report@@Base+0xcc>
   2e344:	ldr	r1, [pc, #188]	; 2e408 <__flatcc_error_report@@Base+0x1e4>
   2e348:	mov	r2, r8
   2e34c:	add	r1, pc, r1
   2e350:	mov	r0, r5
   2e354:	bl	2e14c <__flatcc_fb_print_error@@Base>
   2e358:	b	2e2f0 <__flatcc_error_report@@Base+0xcc>
   2e35c:	mov	r1, r7
   2e360:	mov	r0, r5
   2e364:	bl	2e1d0 <__flatcc_error_find_file_of_token@@Base>
   2e368:	mov	r1, r4
   2e36c:	mov	r9, r0
   2e370:	mov	r0, r5
   2e374:	bl	2e1d0 <__flatcc_error_find_file_of_token@@Base>
   2e378:	ldr	lr, [r4]
   2e37c:	ldr	ip, [r4, #4]
   2e380:	ldr	r3, [r7, #8]
   2e384:	str	r8, [sp, #12]
   2e388:	str	r6, [sp, #8]
   2e38c:	ldr	r1, [r4, #12]
   2e390:	ldr	r2, [r4, #8]
   2e394:	ldr	r4, [sp, #76]	; 0x4c
   2e398:	str	r1, [sp, #24]
   2e39c:	str	r2, [sp, #20]
   2e3a0:	str	r4, [sp, #4]
   2e3a4:	str	lr, [sp, #32]
   2e3a8:	str	ip, [sp, #28]
   2e3ac:	ldr	r1, [pc, #88]	; 2e40c <__flatcc_error_report@@Base+0x1e8>
   2e3b0:	mov	r2, r9
   2e3b4:	add	r1, pc, r1
   2e3b8:	str	r0, [sp, #16]
   2e3bc:	ldr	ip, [r7, #12]
   2e3c0:	mov	r0, r5
   2e3c4:	str	ip, [sp]
   2e3c8:	bl	2e14c <__flatcc_fb_print_error@@Base>
   2e3cc:	b	2e2f0 <__flatcc_error_report@@Base+0xcc>
   2e3d0:	str	r6, [sp, #76]	; 0x4c
   2e3d4:	ldr	r6, [pc, #52]	; 2e410 <__flatcc_error_report@@Base+0x1ec>
   2e3d8:	add	r6, pc, r6
   2e3dc:	b	2e274 <__flatcc_error_report@@Base+0x50>
   2e3e0:	ldr	r8, [pc, #44]	; 2e414 <__flatcc_error_report@@Base+0x1f0>
   2e3e4:	add	r8, pc, r8
   2e3e8:	b	2e26c <__flatcc_error_report@@Base+0x48>
   2e3ec:	ldr	r1, [pc, #36]	; 2e418 <__flatcc_error_report@@Base+0x1f4>
   2e3f0:	mov	r0, r5
   2e3f4:	add	r1, pc, r1
   2e3f8:	bl	2e14c <__flatcc_fb_print_error@@Base>
   2e3fc:	b	2e2f0 <__flatcc_error_report@@Base+0xcc>
   2e400:	andeq	r9, r2, r0, ror r8
   2e404:	andeq	r9, r2, r4, asr #15
   2e408:	strdeq	r9, [r2], -r8
   2e40c:	andeq	r9, r2, ip, asr r7
   2e410:	andeq	ip, r1, r8, ror #14
   2e414:	andeq	ip, r1, ip, asr r7
   2e418:	andeq	r9, r2, ip, ror r7
   2e41c:	ldr	r3, [r0, #52]	; 0x34
   2e420:	push	{r4, r5, r6, r7, r8, lr}
   2e424:	mov	r5, r1
   2e428:	ldr	r1, [r0, #44]	; 0x2c
   2e42c:	add	r2, r3, #16
   2e430:	cmp	r2, r1
   2e434:	sub	sp, sp, #8
   2e438:	mov	r4, r0
   2e43c:	ldr	r6, [r0, #40]	; 0x28
   2e440:	bhi	2e528 <__flatcc_error_report@@Base+0x304>
   2e444:	str	r2, [r4, #52]	; 0x34
   2e448:	mov	r0, r4
   2e44c:	str	r6, [r3, #4]
   2e450:	str	r3, [r5]
   2e454:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2e458:	ldr	r3, [r4, #40]	; 0x28
   2e45c:	ldr	r6, [r5]
   2e460:	ldr	r3, [r3, #16]
   2e464:	cmp	r3, #46	; 0x2e
   2e468:	moveq	r8, #1
   2e46c:	moveq	r7, #65536	; 0x10000
   2e470:	beq	2e4a0 <__flatcc_error_report@@Base+0x27c>
   2e474:	b	2e520 <__flatcc_error_report@@Base+0x2fc>
   2e478:	str	r2, [r4, #52]	; 0x34
   2e47c:	mov	r0, r4
   2e480:	str	r5, [r3, #4]
   2e484:	str	r3, [r6]
   2e488:	mov	r6, r3
   2e48c:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2e490:	ldr	r3, [r4, #40]	; 0x28
   2e494:	ldr	r3, [r3, #16]
   2e498:	cmp	r3, #46	; 0x2e
   2e49c:	bne	2e520 <__flatcc_error_report@@Base+0x2fc>
   2e4a0:	mov	r0, r4
   2e4a4:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2e4a8:	ldr	r5, [r4, #40]	; 0x28
   2e4ac:	ldr	r3, [r5, #16]
   2e4b0:	cmp	r3, #9
   2e4b4:	bne	2e500 <__flatcc_error_report@@Base+0x2dc>
   2e4b8:	ldr	r3, [r4, #52]	; 0x34
   2e4bc:	ldr	r1, [r4, #44]	; 0x2c
   2e4c0:	add	r2, r3, #16
   2e4c4:	cmp	r2, r1
   2e4c8:	bls	2e478 <__flatcc_error_report@@Base+0x254>
   2e4cc:	mov	r1, r8
   2e4d0:	mov	r0, r7
   2e4d4:	bl	13f9c <calloc@plt>
   2e4d8:	cmp	r0, #0
   2e4dc:	beq	2e55c <__flatcc_error_report@@Base+0x338>
   2e4e0:	ldr	ip, [r4, #48]	; 0x30
   2e4e4:	add	r1, r0, #65536	; 0x10000
   2e4e8:	add	r3, r0, #16
   2e4ec:	add	r2, r0, #32
   2e4f0:	str	ip, [r0]
   2e4f4:	str	r0, [r4, #48]	; 0x30
   2e4f8:	str	r1, [r4, #44]	; 0x2c
   2e4fc:	b	2e478 <__flatcc_error_report@@Base+0x254>
   2e500:	ldr	r2, [pc, #88]	; 2e560 <__flatcc_error_report@@Base+0x33c>
   2e504:	mov	r3, #0
   2e508:	mov	r1, r5
   2e50c:	mov	r0, r4
   2e510:	str	r3, [sp, #4]
   2e514:	str	r3, [sp]
   2e518:	add	r2, pc, r2
   2e51c:	bl	2e224 <__flatcc_error_report@@Base>
   2e520:	add	sp, sp, #8
   2e524:	pop	{r4, r5, r6, r7, r8, pc}
   2e528:	mov	r1, #1
   2e52c:	mov	r0, #65536	; 0x10000
   2e530:	bl	13f9c <calloc@plt>
   2e534:	cmp	r0, #0
   2e538:	beq	2e55c <__flatcc_error_report@@Base+0x338>
   2e53c:	ldr	ip, [r4, #48]	; 0x30
   2e540:	add	r1, r0, #65536	; 0x10000
   2e544:	add	r3, r0, #16
   2e548:	add	r2, r0, #32
   2e54c:	str	ip, [r0]
   2e550:	str	r0, [r4, #48]	; 0x30
   2e554:	str	r1, [r4, #44]	; 0x2c
   2e558:	b	2e444 <__flatcc_error_report@@Base+0x220>
   2e55c:	bl	141c0 <__assert_fail@plt+0x80>
   2e560:	andeq	r9, r2, ip, ror r6
   2e564:	push	{r4, r5, lr}
   2e568:	mov	lr, #0
   2e56c:	ldr	r5, [r0, #40]	; 0x28
   2e570:	sub	sp, sp, #12
   2e574:	str	lr, [r0, #36]	; 0x24
   2e578:	ldr	ip, [r5, #16]
   2e57c:	cmp	ip, r1
   2e580:	beq	2e5a4 <__flatcc_error_report@@Base+0x380>
   2e584:	str	lr, [sp, #4]
   2e588:	str	lr, [sp]
   2e58c:	mov	r1, r5
   2e590:	mov	r4, r0
   2e594:	bl	2e224 <__flatcc_error_report@@Base>
   2e598:	ldr	r0, [r4, #40]	; 0x28
   2e59c:	add	sp, sp, #12
   2e5a0:	pop	{r4, r5, pc}
   2e5a4:	add	sp, sp, #12
   2e5a8:	pop	{r4, r5, lr}
   2e5ac:	b	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2e5b0:	push	{r4, r5, r6, r7, lr}
   2e5b4:	mov	r3, #1
   2e5b8:	ldr	r6, [r0, #40]	; 0x28
   2e5bc:	strh	r3, [r1, #8]
   2e5c0:	sub	sp, sp, #12
   2e5c4:	ldr	r3, [r6, #16]
   2e5c8:	mov	r4, r0
   2e5cc:	cmp	r3, #91	; 0x5b
   2e5d0:	mov	r7, r1
   2e5d4:	moveq	r5, #0
   2e5d8:	bne	2e804 <__flatcc_error_report@@Base+0x5e0>
   2e5dc:	mov	r0, r4
   2e5e0:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2e5e4:	ldr	r2, [r4, #40]	; 0x28
   2e5e8:	add	r5, r5, #1
   2e5ec:	ldr	r3, [r2, #16]
   2e5f0:	cmp	r3, #91	; 0x5b
   2e5f4:	beq	2e5dc <__flatcc_error_report@@Base+0x3b8>
   2e5f8:	cmp	r5, #1
   2e5fc:	beq	2e628 <__flatcc_error_report@@Base+0x404>
   2e600:	ldr	r2, [pc, #720]	; 2e8d8 <__flatcc_error_report@@Base+0x6b4>
   2e604:	mov	r3, #0
   2e608:	str	r3, [sp, #4]
   2e60c:	str	r3, [sp]
   2e610:	add	r2, pc, r2
   2e614:	mov	r1, r6
   2e618:	mov	r0, r4
   2e61c:	bl	2e224 <__flatcc_error_report@@Base>
   2e620:	ldr	r2, [r4, #40]	; 0x28
   2e624:	ldr	r3, [r2, #16]
   2e628:	cmn	r3, #984	; 0x3d8
   2e62c:	ble	2e778 <__flatcc_error_report@@Base+0x554>
   2e630:	ldr	r1, [pc, #676]	; 2e8dc <__flatcc_error_report@@Base+0x6b8>
   2e634:	cmp	r3, r1
   2e638:	beq	2e7bc <__flatcc_error_report@@Base+0x598>
   2e63c:	ble	2e734 <__flatcc_error_report@@Base+0x510>
   2e640:	cmp	r3, #9
   2e644:	beq	2e7d4 <__flatcc_error_report@@Base+0x5b0>
   2e648:	cmp	r3, #93	; 0x5d
   2e64c:	bne	2e850 <__flatcc_error_report@@Base+0x62c>
   2e650:	ldr	r2, [pc, #648]	; 2e8e0 <__flatcc_error_report@@Base+0x6bc>
   2e654:	mov	r3, #0
   2e658:	str	r3, [sp, #4]
   2e65c:	str	r3, [sp]
   2e660:	mov	r1, r3
   2e664:	add	r2, pc, r2
   2e668:	mov	r0, r4
   2e66c:	bl	2e224 <__flatcc_error_report@@Base>
   2e670:	b	2e684 <__flatcc_error_report@@Base+0x460>
   2e674:	sub	r5, r5, #1
   2e678:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2e67c:	cmn	r5, #1
   2e680:	beq	2e6a8 <__flatcc_error_report@@Base+0x484>
   2e684:	ldr	r3, [r4, #40]	; 0x28
   2e688:	mov	r0, r4
   2e68c:	ldr	r3, [r3, #16]
   2e690:	cmp	r3, #93	; 0x5d
   2e694:	beq	2e674 <__flatcc_error_report@@Base+0x450>
   2e698:	cmp	r5, #0
   2e69c:	bne	2e6a8 <__flatcc_error_report@@Base+0x484>
   2e6a0:	add	sp, sp, #12
   2e6a4:	pop	{r4, r5, r6, r7, pc}
   2e6a8:	ldr	r2, [pc, #564]	; 2e8e4 <__flatcc_error_report@@Base+0x6c0>
   2e6ac:	mov	r5, #0
   2e6b0:	mov	r3, r6
   2e6b4:	str	r5, [sp, #4]
   2e6b8:	str	r5, [sp]
   2e6bc:	mov	r1, r5
   2e6c0:	add	r2, pc, r2
   2e6c4:	mov	r0, r4
   2e6c8:	bl	2e224 <__flatcc_error_report@@Base>
   2e6cc:	ldr	r7, [r4, #40]	; 0x28
   2e6d0:	ldr	r3, [r7, #16]
   2e6d4:	cmp	r3, #93	; 0x5d
   2e6d8:	bne	2e6a0 <__flatcc_error_report@@Base+0x47c>
   2e6dc:	mov	r0, r4
   2e6e0:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2e6e4:	ldr	r2, [pc, #508]	; 2e8e8 <__flatcc_error_report@@Base+0x6c4>
   2e6e8:	mov	r3, r6
   2e6ec:	str	r5, [sp, #4]
   2e6f0:	str	r5, [sp]
   2e6f4:	mov	r1, r7
   2e6f8:	add	r2, pc, r2
   2e6fc:	mov	r0, r4
   2e700:	bl	2e224 <__flatcc_error_report@@Base>
   2e704:	ldr	r3, [r4, #40]	; 0x28
   2e708:	ldr	r3, [r3, #16]
   2e70c:	cmp	r3, #93	; 0x5d
   2e710:	bne	2e6a0 <__flatcc_error_report@@Base+0x47c>
   2e714:	mov	r0, r4
   2e718:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2e71c:	ldr	r3, [r4, #40]	; 0x28
   2e720:	ldr	r3, [r3, #16]
   2e724:	cmp	r3, #93	; 0x5d
   2e728:	beq	2e714 <__flatcc_error_report@@Base+0x4f0>
   2e72c:	add	sp, sp, #12
   2e730:	pop	{r4, r5, r6, r7, pc}
   2e734:	sub	r1, r1, #8
   2e738:	cmp	r3, r1
   2e73c:	blt	2e754 <__flatcc_error_report@@Base+0x530>
   2e740:	cmn	r3, #976	; 0x3d0
   2e744:	blt	2e7a4 <__flatcc_error_report@@Base+0x580>
   2e748:	add	r1, r1, #7
   2e74c:	cmp	r3, r1
   2e750:	beq	2e7a4 <__flatcc_error_report@@Base+0x580>
   2e754:	ldr	r2, [pc, #400]	; 2e8ec <__flatcc_error_report@@Base+0x6c8>
   2e758:	mov	r3, #0
   2e75c:	str	r3, [sp, #4]
   2e760:	str	r3, [sp]
   2e764:	mov	r1, r3
   2e768:	add	r2, pc, r2
   2e76c:	mov	r0, r4
   2e770:	bl	2e224 <__flatcc_error_report@@Base>
   2e774:	b	2e684 <__flatcc_error_report@@Base+0x460>
   2e778:	mvn	r1, #984	; 0x3d8
   2e77c:	cmp	r3, r1
   2e780:	bge	2e7a4 <__flatcc_error_report@@Base+0x580>
   2e784:	cmn	r3, #988	; 0x3dc
   2e788:	bge	2e840 <__flatcc_error_report@@Base+0x61c>
   2e78c:	cmn	r3, #996	; 0x3e4
   2e790:	bge	2e7a4 <__flatcc_error_report@@Base+0x580>
   2e794:	add	r3, r3, #996	; 0x3e4
   2e798:	add	r3, r3, #3
   2e79c:	cmp	r3, #1
   2e7a0:	bhi	2e754 <__flatcc_error_report@@Base+0x530>
   2e7a4:	mov	r3, #7
   2e7a8:	str	r2, [r7]
   2e7ac:	strh	r3, [r7, #8]
   2e7b0:	mov	r0, r4
   2e7b4:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2e7b8:	b	2e684 <__flatcc_error_report@@Base+0x460>
   2e7bc:	cmp	r5, #0
   2e7c0:	str	r2, [r7]
   2e7c4:	movne	r3, #9
   2e7c8:	bne	2e7ac <__flatcc_error_report@@Base+0x588>
   2e7cc:	mov	r3, #10
   2e7d0:	b	2e7ac <__flatcc_error_report@@Base+0x588>
   2e7d4:	mov	r1, r7
   2e7d8:	mov	r0, r4
   2e7dc:	bl	2e41c <__flatcc_error_report@@Base+0x1f8>
   2e7e0:	cmp	r5, #0
   2e7e4:	movne	r3, #11
   2e7e8:	beq	2e7fc <__flatcc_error_report@@Base+0x5d8>
   2e7ec:	strh	r3, [r7, #8]
   2e7f0:	b	2e684 <__flatcc_error_report@@Base+0x460>
   2e7f4:	bl	2e41c <__flatcc_error_report@@Base+0x1f8>
   2e7f8:	mov	r5, #0
   2e7fc:	mov	r3, #12
   2e800:	b	2e7ec <__flatcc_error_report@@Base+0x5c8>
   2e804:	cmn	r3, #984	; 0x3d8
   2e808:	ble	2e88c <__flatcc_error_report@@Base+0x668>
   2e80c:	ldr	r2, [pc, #200]	; 2e8dc <__flatcc_error_report@@Base+0x6b8>
   2e810:	cmp	r3, r2
   2e814:	beq	2e8bc <__flatcc_error_report@@Base+0x698>
   2e818:	ble	2e85c <__flatcc_error_report@@Base+0x638>
   2e81c:	cmp	r3, #9
   2e820:	beq	2e7f4 <__flatcc_error_report@@Base+0x5d0>
   2e824:	cmp	r3, #93	; 0x5d
   2e828:	moveq	r5, #0
   2e82c:	beq	2e650 <__flatcc_error_report@@Base+0x42c>
   2e830:	cmn	r3, #972	; 0x3cc
   2e834:	beq	2e87c <__flatcc_error_report@@Base+0x658>
   2e838:	mov	r5, #0
   2e83c:	b	2e754 <__flatcc_error_report@@Base+0x530>
   2e840:	ldr	r1, [pc, #168]	; 2e8f0 <__flatcc_error_report@@Base+0x6cc>
   2e844:	cmp	r3, r1
   2e848:	bne	2e754 <__flatcc_error_report@@Base+0x530>
   2e84c:	b	2e7a4 <__flatcc_error_report@@Base+0x580>
   2e850:	cmn	r3, #972	; 0x3cc
   2e854:	bne	2e754 <__flatcc_error_report@@Base+0x530>
   2e858:	b	2e7a4 <__flatcc_error_report@@Base+0x580>
   2e85c:	sub	r2, r2, #8
   2e860:	cmp	r3, r2
   2e864:	blt	2e838 <__flatcc_error_report@@Base+0x614>
   2e868:	cmn	r3, #976	; 0x3d0
   2e86c:	blt	2e87c <__flatcc_error_report@@Base+0x658>
   2e870:	add	r2, r2, #7
   2e874:	cmp	r3, r2
   2e878:	bne	2e838 <__flatcc_error_report@@Base+0x614>
   2e87c:	str	r6, [r7]
   2e880:	mov	r5, #0
   2e884:	mov	r3, #8
   2e888:	b	2e7ac <__flatcc_error_report@@Base+0x588>
   2e88c:	mvn	r2, #984	; 0x3d8
   2e890:	cmp	r3, r2
   2e894:	bge	2e87c <__flatcc_error_report@@Base+0x658>
   2e898:	cmn	r3, #988	; 0x3dc
   2e89c:	bge	2e8c8 <__flatcc_error_report@@Base+0x6a4>
   2e8a0:	cmn	r3, #996	; 0x3e4
   2e8a4:	bge	2e87c <__flatcc_error_report@@Base+0x658>
   2e8a8:	add	r3, r3, #996	; 0x3e4
   2e8ac:	add	r3, r3, #3
   2e8b0:	cmp	r3, #1
   2e8b4:	bhi	2e838 <__flatcc_error_report@@Base+0x614>
   2e8b8:	b	2e87c <__flatcc_error_report@@Base+0x658>
   2e8bc:	str	r6, [r1]
   2e8c0:	mov	r5, #0
   2e8c4:	b	2e7cc <__flatcc_error_report@@Base+0x5a8>
   2e8c8:	ldr	r2, [pc, #32]	; 2e8f0 <__flatcc_error_report@@Base+0x6cc>
   2e8cc:	cmp	r3, r2
   2e8d0:	bne	2e838 <__flatcc_error_report@@Base+0x614>
   2e8d4:	b	2e87c <__flatcc_error_report@@Base+0x658>
   2e8d8:	andeq	r9, r2, ip, lsr #11
   2e8dc:			; <UNDEFINED> instruction: 0xfffffc32
   2e8e0:	andeq	r9, r2, r0, lsl #11
   2e8e4:	andeq	r9, r2, r8, asr r5
   2e8e8:	andeq	r9, r2, r4, asr #10
   2e8ec:	muleq	r2, r8, r4
   2e8f0:			; <UNDEFINED> instruction: 0xfffffc25
   2e8f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e8f8:	mov	r3, #0
   2e8fc:	ldr	fp, [pc, #416]	; 2eaa4 <__flatcc_error_report@@Base+0x880>
   2e900:	ldr	sl, [pc, #416]	; 2eaa8 <__flatcc_error_report@@Base+0x884>
   2e904:	ldr	r9, [pc, #416]	; 2eaac <__flatcc_error_report@@Base+0x888>
   2e908:	ldr	r8, [pc, #416]	; 2eab0 <__flatcc_error_report@@Base+0x88c>
   2e90c:	sub	sp, sp, #12
   2e910:	add	fp, pc, fp
   2e914:	add	sl, pc, sl
   2e918:	add	r9, pc, r9
   2e91c:	add	r8, pc, r8
   2e920:	mov	r5, r1
   2e924:	mov	r4, r0
   2e928:	mov	r6, r3
   2e92c:	mov	r7, #1
   2e930:	mov	r2, #2
   2e934:	strh	r2, [r1, #8]
   2e938:	str	r3, [r1]
   2e93c:	str	r3, [r1, #4]
   2e940:	ldr	r1, [r4, #40]	; 0x28
   2e944:	ldr	r3, [r1, #16]
   2e948:	sub	r3, r3, #6
   2e94c:	cmp	r3, #17
   2e950:	addls	pc, pc, r3, lsl #2
   2e954:	b	2e9a0 <__flatcc_error_report@@Base+0x77c>
   2e958:	b	2ea58 <__flatcc_error_report@@Base+0x834>
   2e95c:	b	2e9a0 <__flatcc_error_report@@Base+0x77c>
   2e960:	b	2e9a0 <__flatcc_error_report@@Base+0x77c>
   2e964:	b	2e9a0 <__flatcc_error_report@@Base+0x77c>
   2e968:	b	2e9a0 <__flatcc_error_report@@Base+0x77c>
   2e96c:	b	2e9a0 <__flatcc_error_report@@Base+0x77c>
   2e970:	b	2e9a0 <__flatcc_error_report@@Base+0x77c>
   2e974:	b	2e9a0 <__flatcc_error_report@@Base+0x77c>
   2e978:	b	2e9a0 <__flatcc_error_report@@Base+0x77c>
   2e97c:	b	2e9a0 <__flatcc_error_report@@Base+0x77c>
   2e980:	b	2e9a0 <__flatcc_error_report@@Base+0x77c>
   2e984:	b	2e9a0 <__flatcc_error_report@@Base+0x77c>
   2e988:	b	2ea38 <__flatcc_error_report@@Base+0x814>
   2e98c:	b	2e9a0 <__flatcc_error_report@@Base+0x77c>
   2e990:	b	2ea24 <__flatcc_error_report@@Base+0x800>
   2e994:	b	2e9fc <__flatcc_error_report@@Base+0x7d8>
   2e998:	b	2e9c8 <__flatcc_error_report@@Base+0x7a4>
   2e99c:	b	2e9c8 <__flatcc_error_report@@Base+0x7a4>
   2e9a0:	ldr	r2, [pc, #268]	; 2eab4 <__flatcc_error_report@@Base+0x890>
   2e9a4:	mov	r3, #0
   2e9a8:	str	r3, [sp, #4]
   2e9ac:	str	r3, [sp]
   2e9b0:	add	r2, pc, r2
   2e9b4:	mov	r0, r4
   2e9b8:	bl	2e224 <__flatcc_error_report@@Base>
   2e9bc:	ldr	r1, [r4, #40]	; 0x28
   2e9c0:	mov	r3, #1
   2e9c4:	strh	r3, [r5, #8]
   2e9c8:	ldr	r2, [r5]
   2e9cc:	cmp	r2, #0
   2e9d0:	ldrne	r3, [r1]
   2e9d4:	subne	r3, r3, r2
   2e9d8:	strne	r3, [r5, #4]
   2e9dc:	ldrne	r1, [r4, #40]	; 0x28
   2e9e0:	ldr	r3, [r1, #16]
   2e9e4:	cmp	r3, #22
   2e9e8:	bne	2ea78 <__flatcc_error_report@@Base+0x854>
   2e9ec:	mov	r0, r4
   2e9f0:	add	sp, sp, #12
   2e9f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e9f8:	b	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2e9fc:	strh	r7, [r5, #8]
   2ea00:	mov	r3, #0
   2ea04:	str	r6, [sp, #4]
   2ea08:	str	r6, [sp]
   2ea0c:	mov	r2, r8
   2ea10:	mov	r0, r4
   2ea14:	bl	2e224 <__flatcc_error_report@@Base>
   2ea18:	mov	r0, r4
   2ea1c:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2ea20:	b	2e940 <__flatcc_error_report@@Base+0x71c>
   2ea24:	ldr	r3, [r5]
   2ea28:	cmp	r3, #0
   2ea2c:	ldreq	r3, [r1]
   2ea30:	streq	r3, [r5]
   2ea34:	b	2ea18 <__flatcc_error_report@@Base+0x7f4>
   2ea38:	strh	r7, [r5, #8]
   2ea3c:	mov	r3, #0
   2ea40:	str	r6, [sp, #4]
   2ea44:	str	r6, [sp]
   2ea48:	mov	r2, fp
   2ea4c:	mov	r0, r4
   2ea50:	bl	2e224 <__flatcc_error_report@@Base>
   2ea54:	b	2ea18 <__flatcc_error_report@@Base+0x7f4>
   2ea58:	strh	r7, [r5, #8]
   2ea5c:	mov	r3, r6
   2ea60:	str	r7, [sp, #4]
   2ea64:	str	r9, [sp]
   2ea68:	mov	r2, sl
   2ea6c:	mov	r0, r4
   2ea70:	bl	2e224 <__flatcc_error_report@@Base>
   2ea74:	b	2ea18 <__flatcc_error_report@@Base+0x7f4>
   2ea78:	ldr	r2, [pc, #56]	; 2eab8 <__flatcc_error_report@@Base+0x894>
   2ea7c:	mov	r3, #0
   2ea80:	str	r3, [sp, #4]
   2ea84:	str	r3, [sp]
   2ea88:	mov	r0, r4
   2ea8c:	add	r2, pc, r2
   2ea90:	bl	2e224 <__flatcc_error_report@@Base>
   2ea94:	mov	r3, #1
   2ea98:	strh	r3, [r5, #8]
   2ea9c:	add	sp, sp, #12
   2eaa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2eaa4:	muleq	r2, r4, r3
   2eaa8:	andeq	r9, r2, r0, ror #6
   2eaac:	andeq	r9, r2, r8, lsl #7
   2eab0:	andeq	r9, r2, r8, lsr r3
   2eab4:	andeq	r9, r2, r4, lsl r3
   2eab8:	andeq	r9, r2, r4, ror #4
   2eabc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2eac0:	mov	r9, r3
   2eac4:	ldr	r5, [r0, #40]	; 0x28
   2eac8:	sub	sp, sp, #60	; 0x3c
   2eacc:	mov	r4, r0
   2ead0:	ldr	r3, [r5, #16]
   2ead4:	mov	r6, r2
   2ead8:	cmp	r3, #45	; 0x2d
   2eadc:	mov	r8, r1
   2eae0:	beq	2ebb4 <__flatcc_error_report@@Base+0x990>
   2eae4:	cmp	r3, #10
   2eae8:	beq	2ec18 <__flatcc_error_report@@Base+0x9f4>
   2eaec:	ble	2eb2c <__flatcc_error_report@@Base+0x908>
   2eaf0:	cmp	r3, #14
   2eaf4:	beq	2eda4 <__flatcc_error_report@@Base+0xb80>
   2eaf8:	cmp	r3, #19
   2eafc:	beq	2eb74 <__flatcc_error_report@@Base+0x950>
   2eb00:	cmp	r3, #11
   2eb04:	beq	2ed0c <__flatcc_error_report@@Base+0xae8>
   2eb08:	mov	r3, #0
   2eb0c:	mov	r2, r9
   2eb10:	mov	r1, r5
   2eb14:	mov	r0, r4
   2eb18:	str	r3, [sp, #4]
   2eb1c:	str	r3, [sp]
   2eb20:	bl	2e224 <__flatcc_error_report@@Base>
   2eb24:	add	sp, sp, #60	; 0x3c
   2eb28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2eb2c:	ldr	r2, [pc, #1528]	; 2f12c <__flatcc_error_report@@Base+0xf08>
   2eb30:	cmp	r3, r2
   2eb34:	beq	2ee3c <__flatcc_error_report@@Base+0xc18>
   2eb38:	cmp	r3, #9
   2eb3c:	beq	2eec4 <__flatcc_error_report@@Base+0xca0>
   2eb40:	cmn	r3, #988	; 0x3dc
   2eb44:	moveq	r3, #0
   2eb48:	bne	2eb08 <__flatcc_error_report@@Base+0x8e4>
   2eb4c:	mov	r1, #1
   2eb50:	mov	r2, #6
   2eb54:	strb	r1, [r8]
   2eb58:	strh	r2, [r8, #8]
   2eb5c:	cmp	r3, #0
   2eb60:	bne	2ed78 <__flatcc_error_report@@Base+0xb54>
   2eb64:	mov	r0, r4
   2eb68:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2eb6c:	add	sp, sp, #60	; 0x3c
   2eb70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2eb74:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2eb78:	mov	r1, r8
   2eb7c:	mov	r0, r4
   2eb80:	bl	2e8f4 <__flatcc_error_report@@Base+0x6d0>
   2eb84:	tst	r6, #1
   2eb88:	bne	2eb6c <__flatcc_error_report@@Base+0x948>
   2eb8c:	mov	r3, #0
   2eb90:	mov	ip, #1
   2eb94:	strh	ip, [r8, #8]
   2eb98:	mov	r2, r9
   2eb9c:	mov	r1, r5
   2eba0:	mov	r0, r4
   2eba4:	str	r3, [sp, #4]
   2eba8:	str	r3, [sp]
   2ebac:	bl	2e224 <__flatcc_error_report@@Base>
   2ebb0:	b	2eb6c <__flatcc_error_report@@Base+0x948>
   2ebb4:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2ebb8:	ldr	r7, [r4, #40]	; 0x28
   2ebbc:	ldr	r3, [r7, #16]
   2ebc0:	cmp	r3, #10
   2ebc4:	beq	2f034 <__flatcc_error_report@@Base+0xe10>
   2ebc8:	bgt	2efd8 <__flatcc_error_report@@Base+0xdb4>
   2ebcc:	ldr	r2, [pc, #1368]	; 2f12c <__flatcc_error_report@@Base+0xf08>
   2ebd0:	cmp	r3, r2
   2ebd4:	beq	2f040 <__flatcc_error_report@@Base+0xe1c>
   2ebd8:	cmp	r3, #9
   2ebdc:	bne	2eff8 <__flatcc_error_report@@Base+0xdd4>
   2ebe0:	mov	r1, r8
   2ebe4:	mov	r0, r4
   2ebe8:	bl	2e41c <__flatcc_error_report@@Base+0x1f8>
   2ebec:	mov	r2, #1
   2ebf0:	strh	r2, [r8, #8]
   2ebf4:	ldr	r2, [pc, #1332]	; 2f130 <__flatcc_error_report@@Base+0xf0c>
   2ebf8:	mov	r3, #0
   2ebfc:	mov	r1, r7
   2ec00:	mov	r0, r4
   2ec04:	str	r3, [sp, #4]
   2ec08:	str	r3, [sp]
   2ec0c:	add	r2, pc, r2
   2ec10:	bl	2e224 <__flatcc_error_report@@Base>
   2ec14:	b	2eb6c <__flatcc_error_report@@Base+0x948>
   2ec18:	mov	r3, #0
   2ec1c:	str	r3, [sp, #8]
   2ec20:	ldr	r9, [r5]
   2ec24:	ldr	r7, [r5, #4]
   2ec28:	mov	r3, #5
   2ec2c:	add	r7, r9, r7
   2ec30:	cmp	r9, r7
   2ec34:	strh	r3, [r8, #8]
   2ec38:	beq	2ece0 <__flatcc_error_report@@Base+0xabc>
   2ec3c:	ldrb	r3, [r9]
   2ec40:	str	r3, [sp, #16]
   2ec44:	sub	r3, r3, #45	; 0x2d
   2ec48:	clz	r3, r3
   2ec4c:	lsr	r3, r3, #5
   2ec50:	add	r2, r9, r3
   2ec54:	cmp	r7, r2
   2ec58:	str	r2, [sp, #12]
   2ec5c:	beq	2ece0 <__flatcc_error_report@@Base+0xabc>
   2ec60:	ldrb	r0, [r9, r3]
   2ec64:	sub	r3, r0, #48	; 0x30
   2ec68:	cmp	r3, #9
   2ec6c:	bhi	2ece0 <__flatcc_error_report@@Base+0xabc>
   2ec70:	uxtb	r0, r0
   2ec74:	mov	r1, #0
   2ec78:	subs	r0, r0, #48	; 0x30
   2ec7c:	sbc	r1, r1, #0
   2ec80:	add	ip, r2, #1
   2ec84:	mov	r6, #10
   2ec88:	b	2ecc0 <__flatcc_error_report@@Base+0xa9c>
   2ec8c:	ldrb	lr, [ip], #1
   2ec90:	sub	sl, lr, #48	; 0x30
   2ec94:	cmp	sl, #9
   2ec98:	bhi	2ee54 <__flatcc_error_report@@Base+0xc30>
   2ec9c:	subs	r2, r2, #48	; 0x30
   2eca0:	sbc	r3, r3, #0
   2eca4:	adds	r2, r2, lr
   2eca8:	adc	r3, r3, #0
   2ecac:	cmp	r3, r1
   2ecb0:	cmpeq	r2, r0
   2ecb4:	mov	r1, r3
   2ecb8:	mov	r0, r2
   2ecbc:	bcc	2ece0 <__flatcc_error_report@@Base+0xabc>
   2ecc0:	umull	r2, r3, r0, r6
   2ecc4:	cmp	ip, r7
   2ecc8:	mla	r3, r6, r1, r3
   2eccc:	mov	fp, ip
   2ecd0:	bne	2ec8c <__flatcc_error_report@@Base+0xa68>
   2ecd4:	ldr	r3, [sp, #12]
   2ecd8:	cmp	r3, ip
   2ecdc:	bne	2ee84 <__flatcc_error_report@@Base+0xc60>
   2ece0:	mov	r2, #1
   2ece4:	strh	r2, [r8, #8]
   2ece8:	ldr	r2, [pc, #1092]	; 2f134 <__flatcc_error_report@@Base+0xf10>
   2ecec:	mov	r3, #0
   2ecf0:	mov	r1, r5
   2ecf4:	str	r3, [sp, #4]
   2ecf8:	str	r3, [sp]
   2ecfc:	add	r2, pc, r2
   2ed00:	mov	r0, r4
   2ed04:	bl	2e224 <__flatcc_error_report@@Base>
   2ed08:	b	2ee94 <__flatcc_error_report@@Base+0xc70>
   2ed0c:	mov	r6, #0
   2ed10:	mov	r3, #3
   2ed14:	strh	r3, [r8, #8]
   2ed18:	add	r1, sp, #52	; 0x34
   2ed1c:	ldr	r0, [r5]
   2ed20:	bl	140bc <strtod@plt>
   2ed24:	ldm	r5, {r2, r3}
   2ed28:	ldr	r1, [sp, #52]	; 0x34
   2ed2c:	add	r3, r2, r3
   2ed30:	cmp	r1, r3
   2ed34:	vstr	d0, [r8]
   2ed38:	beq	2eea4 <__flatcc_error_report@@Base+0xc80>
   2ed3c:	mov	r2, #1
   2ed40:	strh	r2, [r8, #8]
   2ed44:	ldr	r2, [pc, #1004]	; 2f138 <__flatcc_error_report@@Base+0xf14>
   2ed48:	mov	r3, #0
   2ed4c:	str	r3, [sp, #4]
   2ed50:	str	r3, [sp]
   2ed54:	add	r2, pc, r2
   2ed58:	mov	r1, r5
   2ed5c:	mov	r0, r4
   2ed60:	bl	2e224 <__flatcc_error_report@@Base>
   2ed64:	cmp	r6, #0
   2ed68:	beq	2eb64 <__flatcc_error_report@@Base+0x940>
   2ed6c:	ldrh	r3, [r8, #8]
   2ed70:	cmp	r3, #6
   2ed74:	bne	2eb64 <__flatcc_error_report@@Base+0x940>
   2ed78:	mov	r2, #1
   2ed7c:	strh	r2, [r8, #8]
   2ed80:	ldr	r2, [pc, #948]	; 2f13c <__flatcc_error_report@@Base+0xf18>
   2ed84:	mov	r3, #0
   2ed88:	mov	r1, r5
   2ed8c:	str	r3, [sp, #4]
   2ed90:	str	r3, [sp]
   2ed94:	add	r2, pc, r2
   2ed98:	mov	r0, r4
   2ed9c:	bl	2e224 <__flatcc_error_report@@Base>
   2eda0:	b	2eb64 <__flatcc_error_report@@Base+0x940>
   2eda4:	mov	r6, #0
   2eda8:	ldr	r3, [r5]
   2edac:	ldr	r2, [r5, #4]
   2edb0:	mov	r1, #5
   2edb4:	add	ip, r3, r2
   2edb8:	cmp	r3, ip
   2edbc:	strh	r1, [r8, #8]
   2edc0:	beq	2edf0 <__flatcc_error_report@@Base+0xbcc>
   2edc4:	ldrb	lr, [r3]
   2edc8:	sub	r1, lr, #45	; 0x2d
   2edcc:	clz	r1, r1
   2edd0:	lsr	r1, r1, #5
   2edd4:	sub	r2, r2, r1
   2edd8:	cmp	r2, #1
   2eddc:	add	r2, r3, r1
   2ede0:	ble	2edf0 <__flatcc_error_report@@Base+0xbcc>
   2ede4:	ldrb	r3, [r3, r1]
   2ede8:	cmp	r3, #48	; 0x30
   2edec:	beq	2ef00 <__flatcc_error_report@@Base+0xcdc>
   2edf0:	mov	r2, #1
   2edf4:	strh	r2, [r8, #8]
   2edf8:	ldr	r2, [pc, #832]	; 2f140 <__flatcc_error_report@@Base+0xf1c>
   2edfc:	mov	r3, #0
   2ee00:	mov	r1, r5
   2ee04:	str	r3, [sp, #4]
   2ee08:	str	r3, [sp]
   2ee0c:	add	r2, pc, r2
   2ee10:	mov	r0, r4
   2ee14:	bl	2e224 <__flatcc_error_report@@Base>
   2ee18:	cmp	r6, #0
   2ee1c:	beq	2eb64 <__flatcc_error_report@@Base+0x940>
   2ee20:	ldrd	r2, [r8]
   2ee24:	mov	r1, #4
   2ee28:	strh	r1, [r8, #8]
   2ee2c:	rsbs	r2, r2, #0
   2ee30:	rsc	r3, r3, #0
   2ee34:	strd	r2, [r8]
   2ee38:	b	2eb64 <__flatcc_error_report@@Base+0x940>
   2ee3c:	mov	r3, #0
   2ee40:	mov	r1, #0
   2ee44:	mov	r2, #6
   2ee48:	strb	r1, [r8]
   2ee4c:	strh	r2, [r8, #8]
   2ee50:	b	2eb5c <__flatcc_error_report@@Base+0x938>
   2ee54:	cmp	r9, fp
   2ee58:	beq	2ece0 <__flatcc_error_report@@Base+0xabc>
   2ee5c:	ldr	r3, [sp, #12]
   2ee60:	cmp	r3, fp
   2ee64:	beq	2ece0 <__flatcc_error_report@@Base+0xabc>
   2ee68:	cmp	lr, #80	; 0x50
   2ee6c:	beq	2ece0 <__flatcc_error_report@@Base+0xabc>
   2ee70:	bhi	2efc4 <__flatcc_error_report@@Base+0xda0>
   2ee74:	cmp	lr, #46	; 0x2e
   2ee78:	beq	2ece0 <__flatcc_error_report@@Base+0xabc>
   2ee7c:	cmp	lr, #69	; 0x45
   2ee80:	beq	2ece0 <__flatcc_error_report@@Base+0xabc>
   2ee84:	ldr	r3, [sp, #16]
   2ee88:	strd	r0, [r8]
   2ee8c:	cmp	r3, #45	; 0x2d
   2ee90:	beq	2ece0 <__flatcc_error_report@@Base+0xabc>
   2ee94:	ldr	r3, [sp, #8]
   2ee98:	cmp	r3, #0
   2ee9c:	bne	2ee20 <__flatcc_error_report@@Base+0xbfc>
   2eea0:	b	2eb64 <__flatcc_error_report@@Base+0x940>
   2eea4:	ldrb	r3, [r2]
   2eea8:	cmp	r3, #46	; 0x2e
   2eeac:	beq	2eed4 <__flatcc_error_report@@Base+0xcb0>
   2eeb0:	cmp	r6, #0
   2eeb4:	vnegne.f64	d0, d0
   2eeb8:	vstrne	d0, [r8]
   2eebc:	bne	2ed6c <__flatcc_error_report@@Base+0xb48>
   2eec0:	b	2eb64 <__flatcc_error_report@@Base+0x940>
   2eec4:	bl	2e41c <__flatcc_error_report@@Base+0x1f8>
   2eec8:	mov	r3, #13
   2eecc:	strh	r3, [r8, #8]
   2eed0:	b	2eb6c <__flatcc_error_report@@Base+0x948>
   2eed4:	mov	r2, #1
   2eed8:	strh	r2, [r8, #8]
   2eedc:	ldr	r2, [pc, #608]	; 2f144 <__flatcc_error_report@@Base+0xf20>
   2eee0:	mov	r3, #0
   2eee4:	str	r3, [sp, #4]
   2eee8:	str	r3, [sp]
   2eeec:	add	r2, pc, r2
   2eef0:	mov	r1, r5
   2eef4:	mov	r0, r4
   2eef8:	bl	2e224 <__flatcc_error_report@@Base>
   2eefc:	b	2ed64 <__flatcc_error_report@@Base+0xb40>
   2ef00:	ldrb	r3, [r2, #1]
   2ef04:	orr	r3, r3, #32
   2ef08:	cmp	r3, #120	; 0x78
   2ef0c:	bne	2edf0 <__flatcc_error_report@@Base+0xbcc>
   2ef10:	add	r3, r2, #2
   2ef14:	str	r3, [sp, #8]
   2ef18:	sub	r3, ip, r3
   2ef1c:	cmp	r3, #16
   2ef20:	ldr	r3, [sp, #8]
   2ef24:	addgt	fp, r2, #18
   2ef28:	movle	fp, ip
   2ef2c:	cmp	r3, fp
   2ef30:	beq	2edf0 <__flatcc_error_report@@Base+0xbcc>
   2ef34:	mov	r1, r3
   2ef38:	str	ip, [sp, #16]
   2ef3c:	mov	r2, #0
   2ef40:	mov	r3, #0
   2ef44:	str	r5, [sp, #12]
   2ef48:	mov	ip, r1
   2ef4c:	str	lr, [sp, #20]
   2ef50:	str	r6, [sp, #24]
   2ef54:	str	r4, [sp, #28]
   2ef58:	b	2ef80 <__flatcc_error_report@@Base+0xd5c>
   2ef5c:	lsl	r1, r3, #4
   2ef60:	lsl	r0, r2, #4
   2ef64:	orr	r1, r1, r2, lsr #28
   2ef68:	subs	r2, r0, #48	; 0x30
   2ef6c:	sbc	r3, r1, #0
   2ef70:	adds	r2, r2, lr
   2ef74:	adc	r3, r3, #0
   2ef78:	cmp	fp, ip
   2ef7c:	beq	2f00c <__flatcc_error_report@@Base+0xde8>
   2ef80:	mov	r4, ip
   2ef84:	ldrb	lr, [ip], #1
   2ef88:	sub	r9, lr, #48	; 0x30
   2ef8c:	orr	r5, lr, #32
   2ef90:	cmp	r9, #9
   2ef94:	sub	sl, r5, #97	; 0x61
   2ef98:	bls	2ef5c <__flatcc_error_report@@Base+0xd38>
   2ef9c:	lsl	r7, r3, #4
   2efa0:	cmp	sl, #5
   2efa4:	orr	r7, r7, r2, lsr #28
   2efa8:	lsl	r6, r2, #4
   2efac:	bhi	2f0ac <__flatcc_error_report@@Base+0xe88>
   2efb0:	subs	r2, r6, #87	; 0x57
   2efb4:	sbc	r3, r7, #0
   2efb8:	adds	r2, r2, r5
   2efbc:	adc	r3, r3, #0
   2efc0:	b	2ef78 <__flatcc_error_report@@Base+0xd54>
   2efc4:	cmp	lr, #101	; 0x65
   2efc8:	beq	2ece0 <__flatcc_error_report@@Base+0xabc>
   2efcc:	cmp	lr, #112	; 0x70
   2efd0:	bne	2ee84 <__flatcc_error_report@@Base+0xc60>
   2efd4:	b	2ece0 <__flatcc_error_report@@Base+0xabc>
   2efd8:	cmp	r3, #14
   2efdc:	beq	2f0a0 <__flatcc_error_report@@Base+0xe7c>
   2efe0:	cmp	r3, #19
   2efe4:	beq	2f058 <__flatcc_error_report@@Base+0xe34>
   2efe8:	cmp	r3, #11
   2efec:	beq	2f04c <__flatcc_error_report@@Base+0xe28>
   2eff0:	mov	r5, r7
   2eff4:	b	2eb08 <__flatcc_error_report@@Base+0x8e4>
   2eff8:	cmn	r3, #988	; 0x3dc
   2effc:	bne	2eff0 <__flatcc_error_report@@Base+0xdcc>
   2f000:	mov	r3, r5
   2f004:	mov	r5, r7
   2f008:	b	2eb4c <__flatcc_error_report@@Base+0x928>
   2f00c:	add	r5, sp, #12
   2f010:	ldr	r6, [sp, #24]
   2f014:	ldm	r5, {r5, ip, lr}
   2f018:	ldr	r4, [sp, #28]
   2f01c:	cmp	ip, fp
   2f020:	bne	2f0fc <__flatcc_error_report@@Base+0xed8>
   2f024:	cmp	lr, #45	; 0x2d
   2f028:	strd	r2, [r8]
   2f02c:	bne	2ee18 <__flatcc_error_report@@Base+0xbf4>
   2f030:	b	2edf0 <__flatcc_error_report@@Base+0xbcc>
   2f034:	str	r5, [sp, #8]
   2f038:	mov	r5, r7
   2f03c:	b	2ec20 <__flatcc_error_report@@Base+0x9fc>
   2f040:	mov	r3, r5
   2f044:	mov	r5, r7
   2f048:	b	2ee40 <__flatcc_error_report@@Base+0xc1c>
   2f04c:	mov	r6, r5
   2f050:	mov	r5, r7
   2f054:	b	2ed10 <__flatcc_error_report@@Base+0xaec>
   2f058:	mov	r0, r4
   2f05c:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2f060:	mov	r1, r8
   2f064:	mov	r0, r4
   2f068:	bl	2e8f4 <__flatcc_error_report@@Base+0x6d0>
   2f06c:	tst	r6, #1
   2f070:	beq	2f124 <__flatcc_error_report@@Base+0xf00>
   2f074:	mov	r2, #1
   2f078:	strh	r2, [r8, #8]
   2f07c:	ldr	r2, [pc, #196]	; 2f148 <__flatcc_error_report@@Base+0xf24>
   2f080:	mov	r3, #0
   2f084:	mov	r1, r7
   2f088:	mov	r0, r4
   2f08c:	str	r3, [sp, #4]
   2f090:	str	r3, [sp]
   2f094:	add	r2, pc, r2
   2f098:	bl	2e224 <__flatcc_error_report@@Base>
   2f09c:	b	2eb6c <__flatcc_error_report@@Base+0x948>
   2f0a0:	mov	r6, r5
   2f0a4:	mov	r5, r7
   2f0a8:	b	2eda8 <__flatcc_error_report@@Base+0xb84>
   2f0ac:	ldr	r0, [sp, #8]
   2f0b0:	mov	r1, r4
   2f0b4:	add	r5, sp, #12
   2f0b8:	cmp	r0, r1
   2f0bc:	ldm	r5, {r5, ip, lr}
   2f0c0:	ldr	r6, [sp, #24]
   2f0c4:	ldr	r4, [sp, #28]
   2f0c8:	beq	2edf0 <__flatcc_error_report@@Base+0xbcc>
   2f0cc:	cmp	ip, r1
   2f0d0:	beq	2f024 <__flatcc_error_report@@Base+0xe00>
   2f0d4:	cmp	fp, r1
   2f0d8:	ldrb	r1, [r1]
   2f0dc:	beq	2f100 <__flatcc_error_report@@Base+0xedc>
   2f0e0:	cmp	r1, #80	; 0x50
   2f0e4:	beq	2edf0 <__flatcc_error_report@@Base+0xbcc>
   2f0e8:	cmp	r1, #112	; 0x70
   2f0ec:	beq	2edf0 <__flatcc_error_report@@Base+0xbcc>
   2f0f0:	cmp	r1, #46	; 0x2e
   2f0f4:	bne	2f024 <__flatcc_error_report@@Base+0xe00>
   2f0f8:	b	2edf0 <__flatcc_error_report@@Base+0xbcc>
   2f0fc:	ldrb	r1, [fp]
   2f100:	sub	r0, r1, #48	; 0x30
   2f104:	cmp	r0, #9
   2f108:	bls	2edf0 <__flatcc_error_report@@Base+0xbcc>
   2f10c:	orr	r1, r1, #32
   2f110:	sub	r0, r1, #97	; 0x61
   2f114:	uxtb	r0, r0
   2f118:	cmp	r0, #5
   2f11c:	bhi	2f0e0 <__flatcc_error_report@@Base+0xebc>
   2f120:	b	2edf0 <__flatcc_error_report@@Base+0xbcc>
   2f124:	mov	r5, r7
   2f128:	b	2eb8c <__flatcc_error_report@@Base+0x968>
   2f12c:			; <UNDEFINED> instruction: 0xfffffc26
   2f130:	muleq	r2, r0, r1
   2f134:	andeq	r9, r2, r4, lsr #32
   2f138:	andeq	r8, r2, r4, ror #31
   2f13c:	andeq	r9, r2, r8, lsr #32
   2f140:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   2f144:	andeq	r8, r2, r4, ror #28
   2f148:	andeq	r8, r2, r4, ror #25
   2f14c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f150:	sub	sp, sp, #12
   2f154:	ldr	r9, [r0, #40]	; 0x28
   2f158:	ldr	r3, [r9, #16]
   2f15c:	cmp	r3, #40	; 0x28
   2f160:	beq	2f170 <__flatcc_error_report@@Base+0xf4c>
   2f164:	mov	r0, #0
   2f168:	add	sp, sp, #12
   2f16c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f170:	mov	r4, r0
   2f174:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2f178:	ldr	fp, [r4, #40]	; 0x28
   2f17c:	ldr	r3, [fp, #16]
   2f180:	cmp	r3, #9
   2f184:	beq	2f1a4 <__flatcc_error_report@@Base+0xf80>
   2f188:	ldr	r2, [pc, #388]	; 2f314 <__flatcc_error_report@@Base+0x10f0>
   2f18c:	mov	r3, r9
   2f190:	mov	r0, r4
   2f194:	add	r2, pc, r2
   2f198:	mov	r1, #41	; 0x29
   2f19c:	bl	2e564 <__flatcc_error_report@@Base+0x340>
   2f1a0:	b	2f164 <__flatcc_error_report@@Base+0xf40>
   2f1a4:	mov	r0, r4
   2f1a8:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2f1ac:	ldr	r8, [pc, #356]	; 2f318 <__flatcc_error_report@@Base+0x10f4>
   2f1b0:	mov	r6, #0
   2f1b4:	add	r8, pc, r8
   2f1b8:	mov	r7, #1
   2f1bc:	mov	sl, #65536	; 0x10000
   2f1c0:	ldr	r5, [r4, #52]	; 0x34
   2f1c4:	ldr	r2, [r4, #44]	; 0x2c
   2f1c8:	add	r3, r5, #32
   2f1cc:	cmp	r3, r2
   2f1d0:	bhi	2f250 <__flatcc_error_report@@Base+0x102c>
   2f1d4:	ldr	r2, [r4, #40]	; 0x28
   2f1d8:	str	r3, [r4, #52]	; 0x34
   2f1dc:	str	r6, [r5]
   2f1e0:	ldr	r3, [r2, #16]
   2f1e4:	str	fp, [r5, #4]
   2f1e8:	cmp	r3, #58	; 0x3a
   2f1ec:	bne	2f20c <__flatcc_error_report@@Base+0xfe8>
   2f1f0:	mov	r0, r4
   2f1f4:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2f1f8:	mov	r3, r8
   2f1fc:	mov	r2, r7
   2f200:	add	r1, r5, #8
   2f204:	mov	r0, r4
   2f208:	bl	2eabc <__flatcc_error_report@@Base+0x898>
   2f20c:	ldr	r3, [r4, #108]	; 0x6c
   2f210:	cmp	r3, #9
   2f214:	bgt	2f2e8 <__flatcc_error_report@@Base+0x10c4>
   2f218:	ldr	r3, [r4, #40]	; 0x28
   2f21c:	ldr	r3, [r3, #16]
   2f220:	cmp	r3, #44	; 0x2c
   2f224:	bne	2f2f8 <__flatcc_error_report@@Base+0x10d4>
   2f228:	mov	r0, r4
   2f22c:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2f230:	ldr	fp, [r4, #40]	; 0x28
   2f234:	ldr	r3, [fp, #16]
   2f238:	cmp	r3, #9
   2f23c:	bne	2f284 <__flatcc_error_report@@Base+0x1060>
   2f240:	mov	r0, r4
   2f244:	mov	r6, r5
   2f248:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2f24c:	b	2f1c0 <__flatcc_error_report@@Base+0xf9c>
   2f250:	mov	r1, r7
   2f254:	mov	r0, sl
   2f258:	bl	13f9c <calloc@plt>
   2f25c:	cmp	r0, #0
   2f260:	beq	2f2f4 <__flatcc_error_report@@Base+0x10d0>
   2f264:	ldr	r1, [r4, #48]	; 0x30
   2f268:	add	r2, r0, #65536	; 0x10000
   2f26c:	add	r5, r0, #16
   2f270:	add	r3, r0, #48	; 0x30
   2f274:	str	r1, [r0]
   2f278:	str	r0, [r4, #48]	; 0x30
   2f27c:	str	r2, [r4, #44]	; 0x2c
   2f280:	b	2f1d4 <__flatcc_error_report@@Base+0xfb0>
   2f284:	ldr	r2, [pc, #144]	; 2f31c <__flatcc_error_report@@Base+0x10f8>
   2f288:	mov	r3, #0
   2f28c:	mov	r1, fp
   2f290:	str	r3, [sp, #4]
   2f294:	str	r3, [sp]
   2f298:	add	r2, pc, r2
   2f29c:	mov	r0, r4
   2f2a0:	bl	2e224 <__flatcc_error_report@@Base>
   2f2a4:	ldr	r2, [pc, #116]	; 2f320 <__flatcc_error_report@@Base+0x10fc>
   2f2a8:	mov	r3, r9
   2f2ac:	mov	r0, r4
   2f2b0:	add	r2, pc, r2
   2f2b4:	mov	r1, #41	; 0x29
   2f2b8:	bl	2e564 <__flatcc_error_report@@Base+0x340>
   2f2bc:	mov	r0, r5
   2f2c0:	mov	r2, #0
   2f2c4:	b	2f2cc <__flatcc_error_report@@Base+0x10a8>
   2f2c8:	mov	r0, r3
   2f2cc:	ldr	r3, [r0]
   2f2d0:	str	r2, [r0]
   2f2d4:	cmp	r3, #0
   2f2d8:	mov	r2, r0
   2f2dc:	bne	2f2c8 <__flatcc_error_report@@Base+0x10a4>
   2f2e0:	add	sp, sp, #12
   2f2e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f2e8:	mov	r0, r5
   2f2ec:	add	sp, sp, #12
   2f2f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f2f4:	bl	141c0 <__assert_fail@plt+0x80>
   2f2f8:	ldr	r2, [pc, #36]	; 2f324 <__flatcc_error_report@@Base+0x1100>
   2f2fc:	mov	r3, r9
   2f300:	mov	r0, r4
   2f304:	add	r2, pc, r2
   2f308:	mov	r1, #41	; 0x29
   2f30c:	bl	2e564 <__flatcc_error_report@@Base+0x340>
   2f310:	b	2f2bc <__flatcc_error_report@@Base+0x1098>
   2f314:	muleq	r2, ip, ip
   2f318:	andeq	r8, r2, ip, lsr #24
   2f31c:	andeq	r8, r2, r8, ror #22
   2f320:	andeq	r8, r2, r0, lsl #23
   2f324:	andeq	r8, r2, ip, lsr #22
   2f328:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f32c:	mov	r4, r0
   2f330:	ldr	r6, [r0, #40]	; 0x28
   2f334:	sub	sp, sp, #28
   2f338:	ldr	r3, [r6, #16]
   2f33c:	cmp	r3, #9
   2f340:	bne	2f75c <__flatcc_error_report@@Base+0x1538>
   2f344:	mov	r5, r1
   2f348:	mov	r8, r2
   2f34c:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2f350:	str	r6, [r5, #4]
   2f354:	mov	r0, r4
   2f358:	bl	2f14c <__flatcc_error_report@@Base+0xf28>
   2f35c:	ldr	r1, [r4, #40]	; 0x28
   2f360:	ldr	r3, [r1, #16]
   2f364:	cmp	r3, #123	; 0x7b
   2f368:	str	r0, [r5, #28]
   2f36c:	bne	2f79c <__flatcc_error_report@@Base+0x1578>
   2f370:	mov	r0, r4
   2f374:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2f378:	ldr	r3, [pc, #1088]	; 2f7c0 <__flatcc_error_report@@Base+0x159c>
   2f37c:	ldr	r9, [pc, #1088]	; 2f7c4 <__flatcc_error_report@@Base+0x15a0>
   2f380:	add	r3, pc, r3
   2f384:	str	r3, [sp, #8]
   2f388:	ldr	r3, [pc, #1080]	; 2f7c8 <__flatcc_error_report@@Base+0x15a4>
   2f38c:	ldr	sl, [pc, #1080]	; 2f7cc <__flatcc_error_report@@Base+0x15a8>
   2f390:	add	r3, pc, r3
   2f394:	str	r3, [sp, #12]
   2f398:	ldr	r3, [pc, #1072]	; 2f7d0 <__flatcc_error_report@@Base+0x15ac>
   2f39c:	add	r9, pc, r9
   2f3a0:	add	r3, pc, r3
   2f3a4:	str	r3, [sp, #16]
   2f3a8:	ldr	r3, [pc, #1060]	; 2f7d4 <__flatcc_error_report@@Base+0x15b0>
   2f3ac:	add	sl, pc, sl
   2f3b0:	add	r3, pc, r3
   2f3b4:	str	r3, [sp, #20]
   2f3b8:	ldr	fp, [r4, #40]	; 0x28
   2f3bc:	ldr	r7, [fp, #16]
   2f3c0:	cmp	r7, #125	; 0x7d
   2f3c4:	beq	2f6fc <__flatcc_error_report@@Base+0x14d8>
   2f3c8:	ldr	r3, [pc, #1032]	; 2f7d8 <__flatcc_error_report@@Base+0x15b4>
   2f3cc:	ldr	r6, [r4, #52]	; 0x34
   2f3d0:	cmp	r8, r3
   2f3d4:	beq	2f510 <__flatcc_error_report@@Base+0x12ec>
   2f3d8:	ldr	r3, [r4, #44]	; 0x2c
   2f3dc:	add	r0, r6, #128	; 0x80
   2f3e0:	cmp	r0, r3
   2f3e4:	bhi	2f4dc <__flatcc_error_report@@Base+0x12b8>
   2f3e8:	ldr	r1, [r5, #20]
   2f3ec:	mov	r3, #5
   2f3f0:	str	r0, [r4, #52]	; 0x34
   2f3f4:	str	r1, [r6]
   2f3f8:	strh	r3, [r6, #8]
   2f3fc:	str	r6, [r5, #20]
   2f400:	ldr	r1, [r4, #36]	; 0x24
   2f404:	cmp	r1, #0
   2f408:	beq	2f42c <__flatcc_error_report@@Base+0x1208>
   2f40c:	mov	r0, #0
   2f410:	b	2f418 <__flatcc_error_report@@Base+0x11f4>
   2f414:	mov	r1, r3
   2f418:	ldr	r3, [r1]
   2f41c:	str	r0, [r1]
   2f420:	cmp	r3, #0
   2f424:	mov	r0, r1
   2f428:	bne	2f414 <__flatcc_error_report@@Base+0x11f0>
   2f42c:	cmp	r7, #9
   2f430:	mov	r7, #0
   2f434:	str	r1, [r6, #68]	; 0x44
   2f438:	str	r7, [r4, #36]	; 0x24
   2f43c:	bne	2f61c <__flatcc_error_report@@Base+0x13f8>
   2f440:	mov	r0, r4
   2f444:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2f448:	ldr	r1, [r4, #40]	; 0x28
   2f44c:	str	fp, [r6, #4]
   2f450:	ldr	r3, [r1, #16]
   2f454:	cmp	r3, #58	; 0x3a
   2f458:	bne	2f644 <__flatcc_error_report@@Base+0x1420>
   2f45c:	mov	r0, r4
   2f460:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2f464:	add	r1, r6, #16
   2f468:	mov	r0, r4
   2f46c:	bl	2e5b0 <__flatcc_error_report@@Base+0x38c>
   2f470:	ldr	r3, [r4, #40]	; 0x28
   2f474:	ldr	r3, [r3, #16]
   2f478:	cmp	r3, #61	; 0x3d
   2f47c:	bne	2f49c <__flatcc_error_report@@Base+0x1278>
   2f480:	mov	r0, r4
   2f484:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2f488:	mov	r3, sl
   2f48c:	mov	r2, #2
   2f490:	add	r1, r6, #48	; 0x30
   2f494:	mov	r0, r4
   2f498:	bl	2eabc <__flatcc_error_report@@Base+0x898>
   2f49c:	mov	r0, r4
   2f4a0:	bl	2f14c <__flatcc_error_report@@Base+0xf28>
   2f4a4:	mov	r3, #0
   2f4a8:	mov	r2, r9
   2f4ac:	mov	r1, #59	; 0x3b
   2f4b0:	str	r0, [r6, #64]	; 0x40
   2f4b4:	mov	r0, r4
   2f4b8:	bl	2e564 <__flatcc_error_report@@Base+0x340>
   2f4bc:	ldr	r3, [r4, #108]	; 0x6c
   2f4c0:	cmp	r3, #9
   2f4c4:	ble	2f3b8 <__flatcc_error_report@@Base+0x1194>
   2f4c8:	mov	r0, r4
   2f4cc:	mov	r1, #125	; 0x7d
   2f4d0:	add	sp, sp, #28
   2f4d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f4d8:	b	2e0f8 <__flatcc_fb_default_error_out@@Base+0x258>
   2f4dc:	mov	r1, #1
   2f4e0:	mov	r0, #65536	; 0x10000
   2f4e4:	bl	13f9c <calloc@plt>
   2f4e8:	cmp	r0, #0
   2f4ec:	beq	2f7bc <__flatcc_error_report@@Base+0x1598>
   2f4f0:	ldr	r3, [r4, #48]	; 0x30
   2f4f4:	add	r6, r0, #16
   2f4f8:	str	r3, [r0]
   2f4fc:	add	r3, r0, #65536	; 0x10000
   2f500:	str	r0, [r4, #48]	; 0x30
   2f504:	str	r3, [r4, #44]	; 0x2c
   2f508:	add	r0, r0, #144	; 0x90
   2f50c:	b	2f3e8 <__flatcc_error_report@@Base+0x11c4>
   2f510:	ldr	r1, [r4, #44]	; 0x2c
   2f514:	add	r3, r6, #128	; 0x80
   2f518:	cmp	r3, r1
   2f51c:	bhi	2f660 <__flatcc_error_report@@Base+0x143c>
   2f520:	ldr	r1, [r5, #20]
   2f524:	str	r3, [r4, #52]	; 0x34
   2f528:	mov	r3, #5
   2f52c:	str	r1, [r6]
   2f530:	strh	r3, [r6, #8]
   2f534:	str	r6, [r5, #20]
   2f538:	ldr	r3, [r4, #36]	; 0x24
   2f53c:	cmp	r3, #0
   2f540:	beq	2f564 <__flatcc_error_report@@Base+0x1340>
   2f544:	mov	r0, #0
   2f548:	b	2f550 <__flatcc_error_report@@Base+0x132c>
   2f54c:	mov	r3, r2
   2f550:	ldr	r2, [r3]
   2f554:	str	r0, [r3]
   2f558:	cmp	r2, #0
   2f55c:	mov	r0, r3
   2f560:	bne	2f54c <__flatcc_error_report@@Base+0x1328>
   2f564:	cmp	r7, #9
   2f568:	mov	r7, #0
   2f56c:	str	r3, [r6, #68]	; 0x44
   2f570:	str	r7, [r4, #36]	; 0x24
   2f574:	bne	2f6c0 <__flatcc_error_report@@Base+0x149c>
   2f578:	mov	r0, r4
   2f57c:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2f580:	ldr	r1, [r4, #40]	; 0x28
   2f584:	str	fp, [r6, #4]
   2f588:	ldr	r3, [r1, #16]
   2f58c:	cmp	r3, #40	; 0x28
   2f590:	bne	2f6e0 <__flatcc_error_report@@Base+0x14bc>
   2f594:	mov	r0, r4
   2f598:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2f59c:	add	r1, r6, #32
   2f5a0:	mov	r0, r4
   2f5a4:	bl	2e5b0 <__flatcc_error_report@@Base+0x38c>
   2f5a8:	ldr	r1, [r4, #40]	; 0x28
   2f5ac:	ldr	r3, [r1, #16]
   2f5b0:	cmp	r3, #41	; 0x29
   2f5b4:	bne	2f73c <__flatcc_error_report@@Base+0x1518>
   2f5b8:	mov	r0, r4
   2f5bc:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2f5c0:	ldr	r1, [r4, #40]	; 0x28
   2f5c4:	ldr	r3, [r1, #16]
   2f5c8:	cmp	r3, #58	; 0x3a
   2f5cc:	bne	2f77c <__flatcc_error_report@@Base+0x1558>
   2f5d0:	mov	r0, r4
   2f5d4:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2f5d8:	add	r1, r6, #16
   2f5dc:	mov	r0, r4
   2f5e0:	bl	2e5b0 <__flatcc_error_report@@Base+0x38c>
   2f5e4:	ldr	fp, [r4, #40]	; 0x28
   2f5e8:	ldr	r3, [fp, #16]
   2f5ec:	cmp	r3, #61	; 0x3d
   2f5f0:	beq	2f694 <__flatcc_error_report@@Base+0x1470>
   2f5f4:	mov	r0, r4
   2f5f8:	bl	2f14c <__flatcc_error_report@@Base+0xf28>
   2f5fc:	ldr	r2, [pc, #472]	; 2f7dc <__flatcc_error_report@@Base+0x15b8>
   2f600:	mov	r3, r7
   2f604:	add	r2, pc, r2
   2f608:	mov	r1, #59	; 0x3b
   2f60c:	str	r0, [r6, #64]	; 0x40
   2f610:	mov	r0, r4
   2f614:	bl	2e564 <__flatcc_error_report@@Base+0x340>
   2f618:	b	2f4bc <__flatcc_error_report@@Base+0x1298>
   2f61c:	str	r7, [sp, #4]
   2f620:	str	r7, [sp]
   2f624:	mov	r3, r7
   2f628:	mov	r1, fp
   2f62c:	ldr	r2, [sp, #8]
   2f630:	mov	r0, r4
   2f634:	bl	2e224 <__flatcc_error_report@@Base>
   2f638:	mov	r0, r4
   2f63c:	bl	2e090 <__flatcc_fb_default_error_out@@Base+0x1f0>
   2f640:	b	2f4bc <__flatcc_error_report@@Base+0x1298>
   2f644:	str	r7, [sp, #4]
   2f648:	str	r7, [sp]
   2f64c:	mov	r3, r7
   2f650:	ldr	r2, [sp, #12]
   2f654:	mov	r0, r4
   2f658:	bl	2e224 <__flatcc_error_report@@Base>
   2f65c:	b	2f638 <__flatcc_error_report@@Base+0x1414>
   2f660:	mov	r1, #1
   2f664:	mov	r0, #65536	; 0x10000
   2f668:	bl	13f9c <calloc@plt>
   2f66c:	subs	r3, r0, #0
   2f670:	beq	2f7bc <__flatcc_error_report@@Base+0x1598>
   2f674:	ldr	r1, [r4, #48]	; 0x30
   2f678:	add	r6, r3, #16
   2f67c:	str	r1, [r3]
   2f680:	add	r1, r3, #65536	; 0x10000
   2f684:	str	r3, [r4, #48]	; 0x30
   2f688:	str	r1, [r4, #44]	; 0x2c
   2f68c:	add	r3, r3, #144	; 0x90
   2f690:	b	2f520 <__flatcc_error_report@@Base+0x12fc>
   2f694:	mov	r0, r4
   2f698:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2f69c:	ldr	r2, [pc, #316]	; 2f7e0 <__flatcc_error_report@@Base+0x15bc>
   2f6a0:	str	r7, [sp, #4]
   2f6a4:	str	r7, [sp]
   2f6a8:	mov	r3, r7
   2f6ac:	mov	r1, fp
   2f6b0:	add	r2, pc, r2
   2f6b4:	mov	r0, r4
   2f6b8:	bl	2e224 <__flatcc_error_report@@Base>
   2f6bc:	b	2f638 <__flatcc_error_report@@Base+0x1414>
   2f6c0:	str	r7, [sp, #4]
   2f6c4:	str	r7, [sp]
   2f6c8:	mov	r3, r7
   2f6cc:	mov	r1, fp
   2f6d0:	ldr	r2, [sp, #16]
   2f6d4:	mov	r0, r4
   2f6d8:	bl	2e224 <__flatcc_error_report@@Base>
   2f6dc:	b	2f638 <__flatcc_error_report@@Base+0x1414>
   2f6e0:	str	r7, [sp, #4]
   2f6e4:	str	r7, [sp]
   2f6e8:	mov	r3, r7
   2f6ec:	ldr	r2, [sp, #20]
   2f6f0:	mov	r0, r4
   2f6f4:	bl	2e224 <__flatcc_error_report@@Base>
   2f6f8:	b	2f638 <__flatcc_error_report@@Base+0x1414>
   2f6fc:	mov	r0, r4
   2f700:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   2f704:	ldr	r3, [r5, #20]
   2f708:	cmp	r3, #0
   2f70c:	beq	2f730 <__flatcc_error_report@@Base+0x150c>
   2f710:	mov	r1, #0
   2f714:	b	2f71c <__flatcc_error_report@@Base+0x14f8>
   2f718:	mov	r3, r2
   2f71c:	ldr	r2, [r3]
   2f720:	str	r1, [r3]
   2f724:	cmp	r2, #0
   2f728:	mov	r1, r3
   2f72c:	bne	2f718 <__flatcc_error_report@@Base+0x14f4>
   2f730:	str	r3, [r5, #20]
   2f734:	add	sp, sp, #28
   2f738:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f73c:	ldr	r2, [pc, #160]	; 2f7e4 <__flatcc_error_report@@Base+0x15c0>
   2f740:	str	r7, [sp, #4]
   2f744:	str	r7, [sp]
   2f748:	mov	r3, r7
   2f74c:	add	r2, pc, r2
   2f750:	mov	r0, r4
   2f754:	bl	2e224 <__flatcc_error_report@@Base>
   2f758:	b	2f638 <__flatcc_error_report@@Base+0x1414>
   2f75c:	ldr	r2, [pc, #132]	; 2f7e8 <__flatcc_error_report@@Base+0x15c4>
   2f760:	mov	r3, #0
   2f764:	mov	r1, r6
   2f768:	str	r3, [sp, #4]
   2f76c:	str	r3, [sp]
   2f770:	add	r2, pc, r2
   2f774:	bl	2e224 <__flatcc_error_report@@Base>
   2f778:	b	2f4c8 <__flatcc_error_report@@Base+0x12a4>
   2f77c:	ldr	r2, [pc, #104]	; 2f7ec <__flatcc_error_report@@Base+0x15c8>
   2f780:	str	r7, [sp, #4]
   2f784:	str	r7, [sp]
   2f788:	mov	r3, r7
   2f78c:	add	r2, pc, r2
   2f790:	mov	r0, r4
   2f794:	bl	2e224 <__flatcc_error_report@@Base>
   2f798:	b	2f638 <__flatcc_error_report@@Base+0x1414>
   2f79c:	ldr	r2, [pc, #76]	; 2f7f0 <__flatcc_error_report@@Base+0x15cc>
   2f7a0:	mov	r3, #0
   2f7a4:	str	r3, [sp, #4]
   2f7a8:	str	r3, [sp]
   2f7ac:	add	r2, pc, r2
   2f7b0:	mov	r0, r4
   2f7b4:	bl	2e224 <__flatcc_error_report@@Base>
   2f7b8:	b	2f4c8 <__flatcc_error_report@@Base+0x12a4>
   2f7bc:	bl	141c0 <__assert_fail@plt+0x80>
   2f7c0:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   2f7c4:	andeq	r8, r2, r8, lsr #24
   2f7c8:	andeq	r8, r2, r4, ror #23
   2f7cc:	strdeq	r8, [r2], -r4
   2f7d0:	strdeq	r8, [r2], -r0
   2f7d4:	strdeq	r8, [r2], -ip
   2f7d8:			; <UNDEFINED> instruction: 0xfffffc39
   2f7dc:	andeq	r8, r2, r4, ror #19
   2f7e0:	andeq	r8, r2, r0, lsl #17
   2f7e4:	andeq	r8, r2, r8, lsl #15
   2f7e8:	andeq	r8, r2, r0, ror #13
   2f7ec:	andeq	r8, r2, r0, ror r7
   2f7f0:	andeq	r8, r2, r8, asr #13

0002f7f4 <error_ref_sym@@Base>:
   2f7f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f7f8:	sub	sp, sp, #76	; 0x4c
   2f7fc:	subs	sl, r1, #0
   2f800:	str	r0, [sp, #8]
   2f804:	str	r2, [sp, #12]
   2f808:	mov	r9, r3
   2f80c:	beq	2f8d4 <error_ref_sym@@Base+0xe0>
   2f810:	mov	r6, sl
   2f814:	mov	fp, #0
   2f818:	mov	r4, #50	; 0x32
   2f81c:	add	r7, sp, #20
   2f820:	mov	r8, #46	; 0x2e
   2f824:	ldr	r3, [r6, #4]
   2f828:	add	r0, r7, fp
   2f82c:	ldm	r3, {r1, r5}
   2f830:	cmp	r5, r4
   2f834:	movge	r5, r4
   2f838:	mov	r2, r5
   2f83c:	bl	13fd8 <memcpy@plt>
   2f840:	add	r2, r5, fp
   2f844:	add	r3, sp, #72	; 0x48
   2f848:	add	r3, r3, r2
   2f84c:	sub	r5, r4, r5
   2f850:	strb	r8, [r3, #-52]	; 0xffffffcc
   2f854:	ldr	r6, [r6]
   2f858:	sub	r4, r5, #1
   2f85c:	cmp	r6, #0
   2f860:	cmpne	r4, #0
   2f864:	movgt	r1, #1
   2f868:	movle	r1, #0
   2f86c:	add	fp, r2, #1
   2f870:	bgt	2f824 <error_ref_sym@@Base+0x30>
   2f874:	add	r3, sp, #72	; 0x48
   2f878:	cmp	fp, #0
   2f87c:	add	r0, r3, fp
   2f880:	movle	r2, fp
   2f884:	cmp	r4, #0
   2f888:	strb	r1, [r0, #-52]	; 0xffffffcc
   2f88c:	ble	2f8bc <error_ref_sym@@Base+0xc8>
   2f890:	cmp	r9, #0
   2f894:	ldr	r1, [sl, #4]
   2f898:	ldrne	r3, [r9, #4]
   2f89c:	moveq	r3, r9
   2f8a0:	str	r2, [sp, #4]
   2f8a4:	str	r7, [sp]
   2f8a8:	ldr	r2, [sp, #12]
   2f8ac:	ldr	r0, [sp, #8]
   2f8b0:	bl	2e224 <__flatcc_error_report@@Base>
   2f8b4:	add	sp, sp, #76	; 0x4c
   2f8b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f8bc:	ldr	r3, [pc, #32]	; 2f8e4 <error_ref_sym@@Base+0xf0>
   2f8c0:	mov	r2, #50	; 0x32
   2f8c4:	add	r3, pc, r3
   2f8c8:	ldr	r0, [r3, #8]
   2f8cc:	str	r0, [sp, #67]	; 0x43
   2f8d0:	b	2f890 <error_ref_sym@@Base+0x9c>
   2f8d4:	add	r7, sp, #72	; 0x48
   2f8d8:	mov	r2, sl
   2f8dc:	strb	sl, [r7, #-52]!	; 0xffffffcc
   2f8e0:	b	2f890 <error_ref_sym@@Base+0x9c>
   2f8e4:	muleq	r2, ip, r0

0002f8e8 <__flatcc_fb_init_parser@@Base>:
   2f8e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2f8ec:	sub	sp, sp, #8
   2f8f0:	mov	r6, r1
   2f8f4:	mov	r7, r2
   2f8f8:	mov	r1, #0
   2f8fc:	mov	r2, #560	; 0x230
   2f900:	mov	r8, r3
   2f904:	mov	r5, r0
   2f908:	ldr	r4, [sp, #44]	; 0x2c
   2f90c:	bl	140a4 <memset@plt>
   2f910:	ldr	r3, [pc, #676]	; 2fbbc <__flatcc_fb_init_parser@@Base+0x2d4>
   2f914:	cmp	r8, #0
   2f918:	add	r3, pc, r3
   2f91c:	beq	2fa9c <__flatcc_fb_init_parser@@Base+0x1b4>
   2f920:	ldr	r3, [sp, #40]	; 0x28
   2f924:	cmp	r6, #0
   2f928:	str	r8, [r5, #8]
   2f92c:	str	r3, [r5, #12]
   2f930:	beq	2fab0 <__flatcc_fb_init_parser@@Base+0x1c8>
   2f934:	mov	r2, #224	; 0xe0
   2f938:	mov	r1, r6
   2f93c:	add	r0, r5, #128	; 0x80
   2f940:	bl	13fd8 <memcpy@plt>
   2f944:	ldr	r3, [r5, #192]	; 0xc0
   2f948:	cmp	r4, #0
   2f94c:	addeq	r4, r5, #416	; 0x1a0
   2f950:	cmp	r3, #8
   2f954:	str	r4, [r5, #412]	; 0x19c
   2f958:	bhi	2fb10 <__flatcc_fb_init_parser@@Base+0x228>
   2f95c:	mov	r2, #1
   2f960:	lsl	r3, r2, r3
   2f964:	tst	r3, #276	; 0x114
   2f968:	beq	2fb10 <__flatcc_fb_init_parser@@Base+0x228>
   2f96c:	ldr	r3, [r5, #196]	; 0xc4
   2f970:	cmp	r3, #8
   2f974:	bhi	2fb38 <__flatcc_fb_init_parser@@Base+0x250>
   2f978:	lsl	r2, r2, r3
   2f97c:	tst	r2, #276	; 0x114
   2f980:	beq	2fb38 <__flatcc_fb_init_parser@@Base+0x250>
   2f984:	cmp	r7, #0
   2f988:	beq	2fabc <__flatcc_fb_init_parser@@Base+0x1d4>
   2f98c:	mov	r0, r7
   2f990:	bl	14074 <strlen@plt>
   2f994:	mov	r8, r0
   2f998:	ldr	r2, [r6, #96]	; 0x60
   2f99c:	mov	r1, r8
   2f9a0:	mov	r0, r7
   2f9a4:	bl	2dd50 <__flatcc_fb_create_basename@@Base>
   2f9a8:	cmp	r0, #0
   2f9ac:	mov	r4, r0
   2f9b0:	str	r0, [r5, #512]	; 0x200
   2f9b4:	beq	2fbb8 <__flatcc_fb_init_parser@@Base+0x2d0>
   2f9b8:	bl	14074 <strlen@plt>
   2f9bc:	mov	r1, r0
   2f9c0:	mov	r9, r0
   2f9c4:	mov	r0, r4
   2f9c8:	bl	2d8c0 <__flatcc_fb_copy_path_n@@Base>
   2f9cc:	subs	sl, r0, #0
   2f9d0:	beq	2fbb8 <__flatcc_fb_init_parser@@Base+0x2d0>
   2f9d4:	cmp	r9, #0
   2f9d8:	beq	2fa18 <__flatcc_fb_init_parser@@Base+0x130>
   2f9dc:	ldrb	r4, [sl]
   2f9e0:	cmp	r4, #0
   2f9e4:	beq	2fa18 <__flatcc_fb_init_parser@@Base+0x130>
   2f9e8:	bl	14050 <__ctype_toupper_loc@plt>
   2f9ec:	mov	r3, sl
   2f9f0:	add	r1, sl, r9
   2f9f4:	b	2fa04 <__flatcc_fb_init_parser@@Base+0x11c>
   2f9f8:	ldrb	r4, [r3]
   2f9fc:	cmp	r4, #0
   2fa00:	beq	2fa18 <__flatcc_fb_init_parser@@Base+0x130>
   2fa04:	ldr	r2, [r0]
   2fa08:	ldr	r2, [r2, r4, lsl #2]
   2fa0c:	strb	r2, [r3], #1
   2fa10:	cmp	r1, r3
   2fa14:	bne	2f9f8 <__flatcc_fb_init_parser@@Base+0x110>
   2fa18:	ldr	r2, [pc, #416]	; 2fbc0 <__flatcc_fb_init_parser@@Base+0x2d8>
   2fa1c:	str	sl, [r5, #516]	; 0x204
   2fa20:	str	sl, [r5, #496]	; 0x1f0
   2fa24:	str	r9, [r5, #500]	; 0x1f4
   2fa28:	mov	r1, r8
   2fa2c:	mov	r0, r7
   2fa30:	add	r2, pc, r2
   2fa34:	bl	2dd50 <__flatcc_fb_create_basename@@Base>
   2fa38:	cmp	r0, #0
   2fa3c:	str	r0, [r5, #520]	; 0x208
   2fa40:	beq	2fbb8 <__flatcc_fb_init_parser@@Base+0x2d0>
   2fa44:	ldr	r0, [r6, #192]	; 0xc0
   2fa48:	cmp	r0, #0
   2fa4c:	beq	2fa5c <__flatcc_fb_init_parser@@Base+0x174>
   2fa50:	str	r0, [r5, #476]	; 0x1dc
   2fa54:	bl	14074 <strlen@plt>
   2fa58:	str	r0, [r5, #480]	; 0x1e0
   2fa5c:	mov	r2, #0
   2fa60:	mov	r1, r2
   2fa64:	ldr	r0, [r5, #412]	; 0x19c
   2fa68:	bl	2d13c <fb_scope_table_find@@Base>
   2fa6c:	subs	r4, r0, #0
   2fa70:	beq	2facc <__flatcc_fb_init_parser@@Base+0x1e4>
   2fa74:	mov	r2, #0
   2fa78:	str	r4, [r5, #544]	; 0x220
   2fa7c:	ldr	r0, [r5, #412]	; 0x19c
   2fa80:	mov	r1, r2
   2fa84:	bl	2d13c <fb_scope_table_find@@Base>
   2fa88:	cmp	r4, r0
   2fa8c:	moveq	r0, #0
   2fa90:	bne	2fb94 <__flatcc_fb_init_parser@@Base+0x2ac>
   2fa94:	add	sp, sp, #8
   2fa98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2fa9c:	ldr	r2, [pc, #288]	; 2fbc4 <__flatcc_fb_init_parser@@Base+0x2dc>
   2faa0:	cmp	r6, #0
   2faa4:	ldr	r3, [r3, r2]
   2faa8:	str	r3, [r5, #8]
   2faac:	bne	2f934 <__flatcc_fb_init_parser@@Base+0x4c>
   2fab0:	add	r0, r5, #128	; 0x80
   2fab4:	bl	1522c <flatcc_init_options@@Base>
   2fab8:	b	2f944 <__flatcc_fb_init_parser@@Base+0x5c>
   2fabc:	ldr	r7, [pc, #260]	; 2fbc8 <__flatcc_fb_init_parser@@Base+0x2e0>
   2fac0:	mov	r8, #4
   2fac4:	add	r7, pc, r7
   2fac8:	b	2f998 <__flatcc_fb_init_parser@@Base+0xb0>
   2facc:	ldr	r4, [r5, #52]	; 0x34
   2fad0:	ldr	r3, [r5, #44]	; 0x2c
   2fad4:	add	ip, r4, #32
   2fad8:	cmp	ip, r3
   2fadc:	bhi	2fb60 <__flatcc_fb_init_parser@@Base+0x278>
   2fae0:	add	r2, r5, #476	; 0x1dc
   2fae4:	mov	r3, r4
   2fae8:	ldm	r2, {r0, r1}
   2faec:	mov	lr, #0
   2faf0:	str	ip, [r5, #52]	; 0x34
   2faf4:	mov	r2, #1
   2faf8:	str	lr, [r3], #20
   2fafc:	stm	r3, {r0, r1}
   2fb00:	mov	r1, r4
   2fb04:	ldr	r0, [r5, #412]	; 0x19c
   2fb08:	bl	2d118 <fb_scope_table_insert_item@@Base>
   2fb0c:	b	2fa74 <__flatcc_fb_init_parser@@Base+0x18c>
   2fb10:	ldr	r2, [pc, #180]	; 2fbcc <__flatcc_fb_init_parser@@Base+0x2e4>
   2fb14:	mov	r3, #0
   2fb18:	mov	r0, r5
   2fb1c:	str	r3, [sp, #4]
   2fb20:	str	r3, [sp]
   2fb24:	mov	r1, r3
   2fb28:	add	r2, pc, r2
   2fb2c:	bl	2e224 <__flatcc_error_report@@Base>
   2fb30:	mvn	r0, #0
   2fb34:	b	2fa94 <__flatcc_fb_init_parser@@Base+0x1ac>
   2fb38:	ldr	r2, [pc, #144]	; 2fbd0 <__flatcc_fb_init_parser@@Base+0x2e8>
   2fb3c:	mov	r3, #0
   2fb40:	mov	r0, r5
   2fb44:	str	r3, [sp, #4]
   2fb48:	str	r3, [sp]
   2fb4c:	mov	r1, r3
   2fb50:	add	r2, pc, r2
   2fb54:	bl	2e224 <__flatcc_error_report@@Base>
   2fb58:	mvn	r0, #0
   2fb5c:	b	2fa94 <__flatcc_fb_init_parser@@Base+0x1ac>
   2fb60:	mov	r1, #1
   2fb64:	mov	r0, #65536	; 0x10000
   2fb68:	bl	13f9c <calloc@plt>
   2fb6c:	cmp	r0, #0
   2fb70:	beq	2fbb8 <__flatcc_fb_init_parser@@Base+0x2d0>
   2fb74:	ldr	r2, [r5, #48]	; 0x30
   2fb78:	add	r3, r0, #65536	; 0x10000
   2fb7c:	add	r4, r0, #16
   2fb80:	add	ip, r0, #48	; 0x30
   2fb84:	str	r2, [r0]
   2fb88:	str	r0, [r5, #48]	; 0x30
   2fb8c:	str	r3, [r5, #44]	; 0x2c
   2fb90:	b	2fae0 <__flatcc_fb_init_parser@@Base+0x1f8>
   2fb94:	ldr	r3, [pc, #56]	; 2fbd4 <__flatcc_fb_init_parser@@Base+0x2ec>
   2fb98:	ldr	r1, [pc, #56]	; 2fbd8 <__flatcc_fb_init_parser@@Base+0x2f0>
   2fb9c:	ldr	r0, [pc, #56]	; 2fbdc <__flatcc_fb_init_parser@@Base+0x2f4>
   2fba0:	add	r3, pc, r3
   2fba4:	ldr	r2, [pc, #52]	; 2fbe0 <__flatcc_fb_init_parser@@Base+0x2f8>
   2fba8:	add	r3, r3, #16
   2fbac:	add	r1, pc, r1
   2fbb0:	add	r0, pc, r0
   2fbb4:	bl	14140 <__assert_fail@plt>
   2fbb8:	bl	141c0 <__assert_fail@plt+0x80>
   2fbbc:	andeq	fp, r3, r0, ror #13
   2fbc0:	andeq	fp, r1, r0, lsl r1
   2fbc4:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   2fbc8:	andeq	r8, r2, r8, asr #10
   2fbcc:	andeq	r8, r2, ip, ror #9
   2fbd0:	strdeq	r8, [r2], -ip
   2fbd4:	andeq	r7, r2, r0, asr #27
   2fbd8:	ldrdeq	r7, [r2], -ip
   2fbdc:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   2fbe0:	andeq	r0, r0, r3, lsr r5

0002fbe4 <__flatcc_fb_parse@@Base>:
   2fbe4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fbe8:	mov	sl, r0
   2fbec:	mov	r4, r1
   2fbf0:	ldr	r0, [pc, #4060]	; 30bd4 <__flatcc_fb_parse@@Base+0xff0>
   2fbf4:	ldr	ip, [pc, #4060]	; 30bd8 <__flatcc_fb_parse@@Base+0xff4>
   2fbf8:	ldr	fp, [pc, #4060]	; 30bdc <__flatcc_fb_parse@@Base+0xff8>
   2fbfc:	cmp	r3, #0
   2fc00:	mov	r1, #1
   2fc04:	mov	r3, #9
   2fc08:	ldr	r5, [pc, #4048]	; 30be0 <__flatcc_fb_parse@@Base+0xffc>
   2fc0c:	sub	sp, sp, #52	; 0x34
   2fc10:	add	r6, r4, r2
   2fc14:	add	r0, pc, r0
   2fc18:	add	ip, pc, ip
   2fc1c:	str	r1, [sl, #64]	; 0x40
   2fc20:	str	r3, [sl, #84]	; 0x54
   2fc24:	mov	r1, #4
   2fc28:	mov	r3, #0
   2fc2c:	mov	lr, #5
   2fc30:	str	r4, [sl, #60]	; 0x3c
   2fc34:	str	r0, [sl, #68]	; 0x44
   2fc38:	str	r1, [sl, #72]	; 0x48
   2fc3c:	str	r5, [sl, #104]	; 0x68
   2fc40:	str	ip, [sl, #88]	; 0x58
   2fc44:	str	lr, [sl, #92]	; 0x5c
   2fc48:	str	r3, [sl, #80]	; 0x50
   2fc4c:	str	r3, [sl, #76]	; 0x4c
   2fc50:	str	r3, [sl, #100]	; 0x64
   2fc54:	str	r3, [sl, #96]	; 0x60
   2fc58:	strne	r4, [sl, #16]
   2fc5c:	cmp	r6, r4
   2fc60:	beq	32244 <__flatcc_fb_parse@@Base+0x2660>
   2fc64:	ldrb	r1, [r4]
   2fc68:	cmp	r1, #126	; 0x7e
   2fc6c:	addls	pc, pc, r1, lsl #2
   2fc70:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fc74:	b	30200 <__flatcc_fb_parse@@Base+0x61c>
   2fc78:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fc7c:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fc80:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fc84:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fc88:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fc8c:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fc90:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fc94:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fc98:	b	3045c <__flatcc_fb_parse@@Base+0x878>
   2fc9c:	b	304ac <__flatcc_fb_parse@@Base+0x8c8>
   2fca0:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fca4:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fca8:	b	3042c <__flatcc_fb_parse@@Base+0x848>
   2fcac:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fcb0:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fcb4:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fcb8:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fcbc:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fcc0:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fcc4:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fcc8:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fccc:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fcd0:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fcd4:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fcd8:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fcdc:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fce0:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fce4:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fce8:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fcec:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fcf0:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fcf4:	b	3045c <__flatcc_fb_parse@@Base+0x878>
   2fcf8:	b	304cc <__flatcc_fb_parse@@Base+0x8e8>
   2fcfc:	b	2fe70 <__flatcc_fb_parse@@Base+0x28c>
   2fd00:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fd04:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fd08:	b	304cc <__flatcc_fb_parse@@Base+0x8e8>
   2fd0c:	b	2ffe8 <__flatcc_fb_parse@@Base+0x404>
   2fd10:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fd14:	b	30024 <__flatcc_fb_parse@@Base+0x440>
   2fd18:	b	30024 <__flatcc_fb_parse@@Base+0x440>
   2fd1c:	b	3003c <__flatcc_fb_parse@@Base+0x458>
   2fd20:	b	3007c <__flatcc_fb_parse@@Base+0x498>
   2fd24:	b	30024 <__flatcc_fb_parse@@Base+0x440>
   2fd28:	b	300b8 <__flatcc_fb_parse@@Base+0x4d4>
   2fd2c:	b	300f8 <__flatcc_fb_parse@@Base+0x514>
   2fd30:	b	3016c <__flatcc_fb_parse@@Base+0x588>
   2fd34:	b	30658 <__flatcc_fb_parse@@Base+0xa74>
   2fd38:	b	304f8 <__flatcc_fb_parse@@Base+0x914>
   2fd3c:	b	304f8 <__flatcc_fb_parse@@Base+0x914>
   2fd40:	b	304f8 <__flatcc_fb_parse@@Base+0x914>
   2fd44:	b	304f8 <__flatcc_fb_parse@@Base+0x914>
   2fd48:	b	304f8 <__flatcc_fb_parse@@Base+0x914>
   2fd4c:	b	304f8 <__flatcc_fb_parse@@Base+0x914>
   2fd50:	b	304f8 <__flatcc_fb_parse@@Base+0x914>
   2fd54:	b	304f8 <__flatcc_fb_parse@@Base+0x914>
   2fd58:	b	304f8 <__flatcc_fb_parse@@Base+0x914>
   2fd5c:	b	30524 <__flatcc_fb_parse@@Base+0x940>
   2fd60:	b	30024 <__flatcc_fb_parse@@Base+0x440>
   2fd64:	b	30340 <__flatcc_fb_parse@@Base+0x75c>
   2fd68:	b	30380 <__flatcc_fb_parse@@Base+0x79c>
   2fd6c:	b	303bc <__flatcc_fb_parse@@Base+0x7d8>
   2fd70:	b	30024 <__flatcc_fb_parse@@Base+0x440>
   2fd74:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fd78:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fd7c:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fd80:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fd84:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fd88:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fd8c:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fd90:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fd94:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fd98:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fd9c:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fda0:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fda4:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fda8:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fdac:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fdb0:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fdb4:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fdb8:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fdbc:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fdc0:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fdc4:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fdc8:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fdcc:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fdd0:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fdd4:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fdd8:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fddc:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fde0:	b	30024 <__flatcc_fb_parse@@Base+0x440>
   2fde4:	b	30024 <__flatcc_fb_parse@@Base+0x440>
   2fde8:	b	30024 <__flatcc_fb_parse@@Base+0x440>
   2fdec:	b	304cc <__flatcc_fb_parse@@Base+0x8e8>
   2fdf0:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fdf4:	b	306c0 <__flatcc_fb_parse@@Base+0xadc>
   2fdf8:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fdfc:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe00:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe04:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe08:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe0c:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe10:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe14:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe18:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe1c:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe20:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe24:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe28:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe2c:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe30:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe34:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe38:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe3c:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe40:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe44:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe48:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe4c:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe50:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe54:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe58:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe5c:	b	30560 <__flatcc_fb_parse@@Base+0x97c>
   2fe60:	b	30024 <__flatcc_fb_parse@@Base+0x440>
   2fe64:	b	301ac <__flatcc_fb_parse@@Base+0x5c8>
   2fe68:	b	30024 <__flatcc_fb_parse@@Base+0x440>
   2fe6c:	b	304cc <__flatcc_fb_parse@@Base+0x8e8>
   2fe70:	add	r5, r4, #1
   2fe74:	mov	r2, r4
   2fe78:	mov	r3, r5
   2fe7c:	mov	r1, #19
   2fe80:	mov	r0, sl
   2fe84:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   2fe88:	mov	r7, r5
   2fe8c:	mov	r9, #20
   2fe90:	mov	r8, #6
   2fe94:	sub	r5, r5, #1
   2fe98:	b	2febc <__flatcc_fb_parse@@Base+0x2d8>
   2fe9c:	ldrb	r3, [r5, #1]
   2fea0:	cmp	r3, #34	; 0x22
   2fea4:	cmpne	r3, #92	; 0x5c
   2fea8:	beq	2fecc <__flatcc_fb_parse@@Base+0x2e8>
   2feac:	cmp	r3, #127	; 0x7f
   2feb0:	cmpne	r3, #31
   2feb4:	bls	2fecc <__flatcc_fb_parse@@Base+0x2e8>
   2feb8:	mov	r5, r4
   2febc:	add	r4, r5, #1
   2fec0:	cmp	r6, r4
   2fec4:	bne	2fe9c <__flatcc_fb_parse@@Base+0x2b8>
   2fec8:	mov	r4, r6
   2fecc:	cmp	r7, r4
   2fed0:	beq	2fee8 <__flatcc_fb_parse@@Base+0x304>
   2fed4:	mov	r2, r7
   2fed8:	mov	r3, r4
   2fedc:	mov	r1, r9
   2fee0:	mov	r0, sl
   2fee4:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   2fee8:	ldrb	r3, [r4]
   2feec:	cmp	r3, #34	; 0x22
   2fef0:	beq	318b8 <__flatcc_fb_parse@@Base+0x1cd4>
   2fef4:	cmp	r3, #0
   2fef8:	cmpne	r6, r4
   2fefc:	beq	2ffd0 <__flatcc_fb_parse@@Base+0x3ec>
   2ff00:	cmp	r3, #92	; 0x5c
   2ff04:	beq	2ff34 <__flatcc_fb_parse@@Base+0x350>
   2ff08:	cmp	r3, #13
   2ff0c:	cmpne	r3, #10
   2ff10:	beq	2ffd0 <__flatcc_fb_parse@@Base+0x3ec>
   2ff14:	add	r5, r4, #1
   2ff18:	mov	r2, r4
   2ff1c:	mov	r3, r5
   2ff20:	mov	r1, r8
   2ff24:	mov	r0, sl
   2ff28:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   2ff2c:	mov	r7, r5
   2ff30:	b	2fe94 <__flatcc_fb_parse@@Base+0x2b0>
   2ff34:	add	r7, r5, #2
   2ff38:	mov	r3, r7
   2ff3c:	mov	r2, r4
   2ff40:	mov	r1, #21
   2ff44:	mov	r0, sl
   2ff48:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   2ff4c:	cmp	r6, r7
   2ff50:	beq	3223c <__flatcc_fb_parse@@Base+0x2658>
   2ff54:	ldrb	r3, [r4, #1]
   2ff58:	cmp	r3, #0
   2ff5c:	beq	2ffcc <__flatcc_fb_parse@@Base+0x3e8>
   2ff60:	cmp	r3, #34	; 0x22
   2ff64:	cmpne	r3, #92	; 0x5c
   2ff68:	addeq	r5, r4, #2
   2ff6c:	beq	2fe94 <__flatcc_fb_parse@@Base+0x2b0>
   2ff70:	cmp	r3, #10
   2ff74:	beq	306f8 <__flatcc_fb_parse@@Base+0xb14>
   2ff78:	cmp	r3, #13
   2ff7c:	movne	r4, r7
   2ff80:	bne	2ff14 <__flatcc_fb_parse@@Base+0x330>
   2ff84:	add	r5, r4, #2
   2ff88:	cmp	r6, r5
   2ff8c:	beq	2ffa0 <__flatcc_fb_parse@@Base+0x3bc>
   2ff90:	ldrb	r3, [r4, #2]
   2ff94:	cmp	r3, #10
   2ff98:	bne	2ffa0 <__flatcc_fb_parse@@Base+0x3bc>
   2ff9c:	add	r5, r4, #3
   2ffa0:	ldr	r3, [sl, #64]	; 0x40
   2ffa4:	mov	r2, r7
   2ffa8:	add	r3, r3, #1
   2ffac:	str	r3, [sl, #64]	; 0x40
   2ffb0:	str	r5, [sl, #60]	; 0x3c
   2ffb4:	mov	r3, r5
   2ffb8:	mov	r1, #18
   2ffbc:	mov	r0, sl
   2ffc0:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   2ffc4:	mov	r7, r5
   2ffc8:	b	2fe94 <__flatcc_fb_parse@@Base+0x2b0>
   2ffcc:	mov	r4, r7
   2ffd0:	mov	r3, r4
   2ffd4:	mov	r2, r4
   2ffd8:	mov	r1, #23
   2ffdc:	mov	r0, sl
   2ffe0:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   2ffe4:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   2ffe8:	add	r5, r4, #1
   2ffec:	cmp	r6, r5
   2fff0:	beq	3072c <__flatcc_fb_parse@@Base+0xb48>
   2fff4:	ldrb	r3, [r4, #1]
   2fff8:	cmp	r3, #38	; 0x26
   2fffc:	beq	30714 <__flatcc_fb_parse@@Base+0xb30>
   30000:	cmp	r3, #61	; 0x3d
   30004:	bne	3072c <__flatcc_fb_parse@@Base+0xb48>
   30008:	add	r3, r4, #2
   3000c:	mov	r2, r4
   30010:	ldr	r1, [pc, #3020]	; 30be4 <__flatcc_fb_parse@@Base+0x1000>
   30014:	mov	r0, sl
   30018:	mov	r4, r3
   3001c:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   30020:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   30024:	add	r3, r4, #1
   30028:	mov	r2, r4
   3002c:	mov	r0, sl
   30030:	mov	r4, r3
   30034:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   30038:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   3003c:	add	r5, r4, #1
   30040:	cmp	r6, r5
   30044:	beq	31ac4 <__flatcc_fb_parse@@Base+0x1ee0>
   30048:	ldrb	r3, [r4, #1]
   3004c:	cmp	r3, #42	; 0x2a
   30050:	beq	31e20 <__flatcc_fb_parse@@Base+0x223c>
   30054:	cmp	r3, #61	; 0x3d
   30058:	bne	31ac4 <__flatcc_fb_parse@@Base+0x1ee0>
   3005c:	mov	r2, r4
   30060:	ldr	r1, [pc, #2944]	; 30be8 <__flatcc_fb_parse@@Base+0x1004>
   30064:	mov	r3, r5
   30068:	mov	r0, sl
   3006c:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   30070:	ldrb	r1, [r4, #1]
   30074:	mov	r4, r5
   30078:	b	2fc68 <__flatcc_fb_parse@@Base+0x84>
   3007c:	add	r3, r4, #1
   30080:	cmp	r6, r3
   30084:	beq	31aac <__flatcc_fb_parse@@Base+0x1ec8>
   30088:	ldrb	r2, [r4, #1]
   3008c:	cmp	r2, #43	; 0x2b
   30090:	beq	31dd4 <__flatcc_fb_parse@@Base+0x21f0>
   30094:	cmp	r2, #61	; 0x3d
   30098:	bne	31aac <__flatcc_fb_parse@@Base+0x1ec8>
   3009c:	add	r3, r4, #2
   300a0:	mov	r2, r4
   300a4:	ldr	r1, [pc, #2880]	; 30bec <__flatcc_fb_parse@@Base+0x1008>
   300a8:	mov	r0, sl
   300ac:	mov	r4, r3
   300b0:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   300b4:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   300b8:	add	r3, r4, #1
   300bc:	cmp	r6, r3
   300c0:	beq	300e0 <__flatcc_fb_parse@@Base+0x4fc>
   300c4:	ldrb	r2, [r4, #1]
   300c8:	cmp	r2, #61	; 0x3d
   300cc:	beq	3207c <__flatcc_fb_parse@@Base+0x2498>
   300d0:	cmp	r2, #62	; 0x3e
   300d4:	beq	31f18 <__flatcc_fb_parse@@Base+0x2334>
   300d8:	cmp	r2, #45	; 0x2d
   300dc:	beq	31cc4 <__flatcc_fb_parse@@Base+0x20e0>
   300e0:	mov	r2, r4
   300e4:	mov	r1, #45	; 0x2d
   300e8:	mov	r0, sl
   300ec:	mov	r4, r3
   300f0:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   300f4:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   300f8:	add	r3, r4, #1
   300fc:	cmp	r6, r3
   30100:	beq	31ba0 <__flatcc_fb_parse@@Base+0x1fbc>
   30104:	ldrb	r2, [r4, #1]
   30108:	cmp	r2, #46	; 0x2e
   3010c:	beq	31e40 <__flatcc_fb_parse@@Base+0x225c>
   30110:	bcc	31ba0 <__flatcc_fb_parse@@Base+0x1fbc>
   30114:	sub	r2, r2, #48	; 0x30
   30118:	cmp	r2, #9
   3011c:	movls	ip, r4
   30120:	bhi	31ba0 <__flatcc_fb_parse@@Base+0x1fbc>
   30124:	add	r2, r3, #1
   30128:	b	30140 <__flatcc_fb_parse@@Base+0x55c>
   3012c:	ldrb	r1, [r2]
   30130:	add	r2, r2, #1
   30134:	sub	r0, r1, #48	; 0x30
   30138:	cmp	r0, #9
   3013c:	bhi	31a08 <__flatcc_fb_parse@@Base+0x1e24>
   30140:	cmp	r6, r2
   30144:	mov	r3, r2
   30148:	bne	3012c <__flatcc_fb_parse@@Base+0x548>
   3014c:	cmp	r3, ip
   30150:	beq	31ea8 <__flatcc_fb_parse@@Base+0x22c4>
   30154:	mov	r2, r4
   30158:	mov	r1, #11
   3015c:	mov	r0, sl
   30160:	mov	r4, r3
   30164:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   30168:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   3016c:	add	r3, r4, #1
   30170:	cmp	r6, r3
   30174:	beq	30194 <__flatcc_fb_parse@@Base+0x5b0>
   30178:	ldrb	r2, [r4, #1]
   3017c:	cmp	r2, #47	; 0x2f
   30180:	beq	31f50 <__flatcc_fb_parse@@Base+0x236c>
   30184:	cmp	r2, #61	; 0x3d
   30188:	beq	31f34 <__flatcc_fb_parse@@Base+0x2350>
   3018c:	cmp	r2, #42	; 0x2a
   30190:	beq	31bb8 <__flatcc_fb_parse@@Base+0x1fd4>
   30194:	mov	r2, r4
   30198:	mov	r1, #47	; 0x2f
   3019c:	mov	r0, sl
   301a0:	mov	r4, r3
   301a4:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   301a8:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   301ac:	add	r5, r4, #1
   301b0:	cmp	r6, r5
   301b4:	beq	301e4 <__flatcc_fb_parse@@Base+0x600>
   301b8:	ldrb	r3, [r4, #1]
   301bc:	cmp	r3, #61	; 0x3d
   301c0:	beq	31e8c <__flatcc_fb_parse@@Base+0x22a8>
   301c4:	cmp	r3, #124	; 0x7c
   301c8:	bne	301e4 <__flatcc_fb_parse@@Base+0x600>
   301cc:	add	r5, r4, #2
   301d0:	mov	r3, r5
   301d4:	mov	r2, r4
   301d8:	ldr	r1, [pc, #2576]	; 30bf0 <__flatcc_fb_parse@@Base+0x100c>
   301dc:	mov	r0, sl
   301e0:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   301e4:	mov	r2, r4
   301e8:	mov	r3, r5
   301ec:	mov	r1, #124	; 0x7c
   301f0:	mov	r0, sl
   301f4:	mov	r4, r5
   301f8:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   301fc:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   30200:	mov	r3, r4
   30204:	mov	r2, r4
   30208:	mov	r1, #0
   3020c:	mov	r0, sl
   30210:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   30214:	ldr	r3, [sl, #40]	; 0x28
   30218:	ldr	r6, [sl, #20]
   3021c:	str	r3, [sl, #24]
   30220:	str	r6, [sl, #40]	; 0x28
   30224:	ldr	r0, [sl, #216]	; 0xd8
   30228:	bl	14038 <malloc@plt>
   3022c:	cmp	r0, #0
   30230:	str	r0, [sl, #112]	; 0x70
   30234:	beq	32844 <__flatcc_fb_parse@@Base+0x2c60>
   30238:	ldr	r2, [r6, #16]
   3023c:	cmn	r2, #964	; 0x3c4
   30240:	beq	317d4 <__flatcc_fb_parse@@Base+0x1bf0>
   30244:	ldr	r3, [pc, #2472]	; 30bf4 <__flatcc_fb_parse@@Base+0x1010>
   30248:	ldr	r8, [pc, #2472]	; 30bf8 <__flatcc_fb_parse@@Base+0x1014>
   3024c:	add	r3, pc, r3
   30250:	ldr	r7, [pc, #2468]	; 30bfc <__flatcc_fb_parse@@Base+0x1018>
   30254:	mov	r1, r3
   30258:	add	r8, pc, r8
   3025c:	mov	r9, r8
   30260:	ldr	r5, [pc, #2456]	; 30c00 <__flatcc_fb_parse@@Base+0x101c>
   30264:	add	r7, pc, r7
   30268:	mov	r4, #0
   3026c:	mov	fp, #59	; 0x3b
   30270:	mov	r3, r6
   30274:	mov	r8, r1
   30278:	b	302b8 <__flatcc_fb_parse@@Base+0x6d4>
   3027c:	ldr	r0, [sl, #352]	; 0x160
   30280:	add	r1, r3, #8
   30284:	str	r2, [sl, #52]	; 0x34
   30288:	str	r0, [r3]
   3028c:	str	r3, [sl, #352]	; 0x160
   30290:	mov	r0, sl
   30294:	bl	2e8f4 <__flatcc_error_report@@Base+0x6d0>
   30298:	ldr	r1, [sl, #40]	; 0x28
   3029c:	ldr	r3, [r1, #16]
   302a0:	cmp	r3, #59	; 0x3b
   302a4:	bne	307ec <__flatcc_fb_parse@@Base+0xc08>
   302a8:	mov	r0, sl
   302ac:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   302b0:	ldr	r3, [sl, #40]	; 0x28
   302b4:	ldr	r2, [r3, #16]
   302b8:	cmp	r2, r5
   302bc:	bne	30808 <__flatcc_fb_parse@@Base+0xc24>
   302c0:	mov	r0, sl
   302c4:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   302c8:	ldr	r3, [sl, #140]	; 0x8c
   302cc:	cmp	r3, #0
   302d0:	bne	30790 <__flatcc_fb_parse@@Base+0xbac>
   302d4:	ldr	r0, [sl, #108]	; 0x6c
   302d8:	cmp	r0, #9
   302dc:	bgt	307b8 <__flatcc_fb_parse@@Base+0xbd4>
   302e0:	ldr	r1, [sl, #40]	; 0x28
   302e4:	ldr	r3, [r1, #16]
   302e8:	cmp	r3, #19
   302ec:	bne	307c4 <__flatcc_fb_parse@@Base+0xbe0>
   302f0:	mov	r0, sl
   302f4:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   302f8:	ldr	r3, [sl, #52]	; 0x34
   302fc:	ldr	r1, [sl, #44]	; 0x2c
   30300:	add	r2, r3, #32
   30304:	cmp	r2, r1
   30308:	bls	3027c <__flatcc_fb_parse@@Base+0x698>
   3030c:	mov	r1, #1
   30310:	mov	r0, #65536	; 0x10000
   30314:	bl	13f9c <calloc@plt>
   30318:	cmp	r0, #0
   3031c:	beq	32844 <__flatcc_fb_parse@@Base+0x2c60>
   30320:	ldr	r1, [sl, #48]	; 0x30
   30324:	add	r3, r0, #16
   30328:	str	r1, [r0]
   3032c:	add	r1, r0, #65536	; 0x10000
   30330:	add	r2, r0, #48	; 0x30
   30334:	str	r0, [sl, #48]	; 0x30
   30338:	str	r1, [sl, #44]	; 0x2c
   3033c:	b	3027c <__flatcc_fb_parse@@Base+0x698>
   30340:	add	r3, r4, #1
   30344:	cmp	r6, r3
   30348:	beq	30368 <__flatcc_fb_parse@@Base+0x784>
   3034c:	ldrb	r2, [r4, #1]
   30350:	cmp	r2, #60	; 0x3c
   30354:	beq	31edc <__flatcc_fb_parse@@Base+0x22f8>
   30358:	cmp	r2, #61	; 0x3d
   3035c:	beq	31ec0 <__flatcc_fb_parse@@Base+0x22dc>
   30360:	cmp	r2, #45	; 0x2d
   30364:	beq	31ce0 <__flatcc_fb_parse@@Base+0x20fc>
   30368:	mov	r2, r4
   3036c:	mov	r1, #60	; 0x3c
   30370:	mov	r0, sl
   30374:	mov	r4, r3
   30378:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   3037c:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   30380:	add	r5, r4, #1
   30384:	cmp	r6, r5
   30388:	beq	30774 <__flatcc_fb_parse@@Base+0xb90>
   3038c:	ldrb	r3, [r4, #1]
   30390:	cmp	r3, #61	; 0x3d
   30394:	beq	30748 <__flatcc_fb_parse@@Base+0xb64>
   30398:	cmp	r3, #62	; 0x3e
   3039c:	bne	30774 <__flatcc_fb_parse@@Base+0xb90>
   303a0:	add	r3, r4, #2
   303a4:	mov	r2, r4
   303a8:	ldr	r1, [pc, #2132]	; 30c04 <__flatcc_fb_parse@@Base+0x1020>
   303ac:	mov	r0, sl
   303b0:	mov	r4, r3
   303b4:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   303b8:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   303bc:	add	r3, r4, #1
   303c0:	cmp	r6, r3
   303c4:	beq	31a94 <__flatcc_fb_parse@@Base+0x1eb0>
   303c8:	ldrb	r2, [r4, #1]
   303cc:	cmp	r2, #61	; 0x3d
   303d0:	beq	31e70 <__flatcc_fb_parse@@Base+0x228c>
   303d4:	cmp	r2, #62	; 0x3e
   303d8:	bne	31a94 <__flatcc_fb_parse@@Base+0x1eb0>
   303dc:	add	r3, r4, #2
   303e0:	cmp	r6, r3
   303e4:	beq	3212c <__flatcc_fb_parse@@Base+0x2548>
   303e8:	ldrb	r2, [r4, #2]
   303ec:	cmp	r2, #61	; 0x3d
   303f0:	beq	32144 <__flatcc_fb_parse@@Base+0x2560>
   303f4:	cmp	r2, #62	; 0x3e
   303f8:	bne	3212c <__flatcc_fb_parse@@Base+0x2548>
   303fc:	add	r3, r4, #3
   30400:	cmp	r6, r3
   30404:	beq	30414 <__flatcc_fb_parse@@Base+0x830>
   30408:	ldrb	r2, [r4, #3]
   3040c:	cmp	r2, #61	; 0x3d
   30410:	beq	327c8 <__flatcc_fb_parse@@Base+0x2be4>
   30414:	mov	r2, r4
   30418:	ldr	r1, [pc, #2024]	; 30c08 <__flatcc_fb_parse@@Base+0x1024>
   3041c:	mov	r0, sl
   30420:	mov	r4, r3
   30424:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   30428:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   3042c:	add	r3, r4, #1
   30430:	cmp	r6, r3
   30434:	beq	30444 <__flatcc_fb_parse@@Base+0x860>
   30438:	ldrb	r2, [r4, #1]
   3043c:	cmp	r2, #10
   30440:	beq	304c4 <__flatcc_fb_parse@@Base+0x8e0>
   30444:	ldr	r2, [sl, #64]	; 0x40
   30448:	str	r3, [sl, #60]	; 0x3c
   3044c:	add	r2, r2, #1
   30450:	mov	r4, r3
   30454:	str	r2, [sl, #64]	; 0x40
   30458:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   3045c:	add	r3, r4, #1
   30460:	b	30474 <__flatcc_fb_parse@@Base+0x890>
   30464:	ldrb	r1, [r3], #1
   30468:	cmp	r1, #9
   3046c:	cmpne	r1, #32
   30470:	bne	31a00 <__flatcc_fb_parse@@Base+0x1e1c>
   30474:	cmp	r6, r3
   30478:	mov	r7, r3
   3047c:	bne	30464 <__flatcc_fb_parse@@Base+0x880>
   30480:	cmp	r6, r7
   30484:	beq	30494 <__flatcc_fb_parse@@Base+0x8b0>
   30488:	ldrb	r1, [r7]
   3048c:	cmp	r1, #0
   30490:	beq	31964 <__flatcc_fb_parse@@Base+0x1d80>
   30494:	mov	r3, r7
   30498:	mov	r2, r7
   3049c:	mov	r1, #0
   304a0:	mov	r0, sl
   304a4:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   304a8:	b	30214 <__flatcc_fb_parse@@Base+0x630>
   304ac:	add	r3, r4, #1
   304b0:	cmp	r6, r3
   304b4:	beq	30444 <__flatcc_fb_parse@@Base+0x860>
   304b8:	ldrb	r2, [r4, #1]
   304bc:	cmp	r2, #13
   304c0:	bne	30444 <__flatcc_fb_parse@@Base+0x860>
   304c4:	add	r3, r4, #2
   304c8:	b	30444 <__flatcc_fb_parse@@Base+0x860>
   304cc:	add	r3, r4, #1
   304d0:	cmp	r6, r3
   304d4:	beq	304e4 <__flatcc_fb_parse@@Base+0x900>
   304d8:	ldrb	r2, [r4, #1]
   304dc:	cmp	r2, #61	; 0x3d
   304e0:	beq	32110 <__flatcc_fb_parse@@Base+0x252c>
   304e4:	mov	r2, r4
   304e8:	mov	r0, sl
   304ec:	mov	r4, r3
   304f0:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   304f4:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   304f8:	add	r2, r4, #1
   304fc:	b	30514 <__flatcc_fb_parse@@Base+0x930>
   30500:	ldrb	r1, [r2]
   30504:	add	r2, r3, #1
   30508:	sub	r0, r1, #48	; 0x30
   3050c:	cmp	r0, #9
   30510:	bhi	3158c <__flatcc_fb_parse@@Base+0x19a8>
   30514:	subs	r3, r2, #0
   30518:	bne	30500 <__flatcc_fb_parse@@Base+0x91c>
   3051c:	ldrb	r3, [r2]
   30520:	udf	#0
   30524:	add	r3, r4, #1
   30528:	cmp	r6, r3
   3052c:	beq	31a7c <__flatcc_fb_parse@@Base+0x1e98>
   30530:	ldrb	r2, [r4, #1]
   30534:	cmp	r2, #58	; 0x3a
   30538:	beq	31df0 <__flatcc_fb_parse@@Base+0x220c>
   3053c:	cmp	r2, #61	; 0x3d
   30540:	bne	31a7c <__flatcc_fb_parse@@Base+0x1e98>
   30544:	add	r3, r4, #2
   30548:	mov	r2, r4
   3054c:	ldr	r1, [pc, #1720]	; 30c0c <__flatcc_fb_parse@@Base+0x1028>
   30550:	mov	r0, sl
   30554:	mov	r4, r3
   30558:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   3055c:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   30560:	add	r5, r4, #1
   30564:	cmp	r6, r5
   30568:	lsl	r0, r1, #8
   3056c:	beq	305c8 <__flatcc_fb_parse@@Base+0x9e4>
   30570:	ldrb	r2, [r4, #1]
   30574:	ldr	r3, [pc, #1684]	; 30c10 <__flatcc_fb_parse@@Base+0x102c>
   30578:	add	r3, pc, r3
   3057c:	add	r3, r3, r2
   30580:	ldrb	r3, [r3, #40]	; 0x28
   30584:	cmp	r3, #0
   30588:	beq	305c8 <__flatcc_fb_parse@@Base+0x9e4>
   3058c:	ldr	r1, [pc, #1664]	; 30c14 <__flatcc_fb_parse@@Base+0x1030>
   30590:	orr	r0, r0, r2, lsl #16
   30594:	add	r1, pc, r1
   30598:	b	305b4 <__flatcc_fb_parse@@Base+0x9d0>
   3059c:	ldrb	r3, [r5, #1]
   305a0:	add	r3, r1, r3
   305a4:	ldrb	r3, [r3, #40]	; 0x28
   305a8:	cmp	r3, #0
   305ac:	beq	320b4 <__flatcc_fb_parse@@Base+0x24d0>
   305b0:	mov	r5, r2
   305b4:	add	r2, r5, #1
   305b8:	cmp	r6, r2
   305bc:	bne	3059c <__flatcc_fb_parse@@Base+0x9b8>
   305c0:	ldrb	r1, [r5]
   305c4:	mov	r5, r6
   305c8:	sub	r3, r5, r4
   305cc:	orr	r2, r0, r1, lsl #24
   305d0:	uxtb	r3, r3
   305d4:	add	r3, r3, #48	; 0x30
   305d8:	orr	r3, r3, r2
   305dc:	cmp	r3, fp
   305e0:	beq	323e8 <__flatcc_fb_parse@@Base+0x2804>
   305e4:	bhi	31978 <__flatcc_fb_parse@@Base+0x1d94>
   305e8:	ldr	r2, [pc, #1576]	; 30c18 <__flatcc_fb_parse@@Base+0x1034>
   305ec:	cmp	r3, r2
   305f0:	beq	3253c <__flatcc_fb_parse@@Base+0x2958>
   305f4:	bhi	31b3c <__flatcc_fb_parse@@Base+0x1f58>
   305f8:	add	r2, r2, #-67108863	; 0xfc000001
   305fc:	cmp	r3, r2
   30600:	beq	3247c <__flatcc_fb_parse@@Base+0x2898>
   30604:	bls	321a8 <__flatcc_fb_parse@@Base+0x25c4>
   30608:	ldr	r2, [pc, #1548]	; 30c1c <__flatcc_fb_parse@@Base+0x1038>
   3060c:	cmp	r3, r2
   30610:	beq	326ac <__flatcc_fb_parse@@Base+0x2ac8>
   30614:	bls	32678 <__flatcc_fb_parse@@Base+0x2a94>
   30618:	ldr	r2, [pc, #1536]	; 30c20 <__flatcc_fb_parse@@Base+0x103c>
   3061c:	cmp	r3, r2
   30620:	beq	32398 <__flatcc_fb_parse@@Base+0x27b4>
   30624:	ldr	r2, [pc, #1528]	; 30c24 <__flatcc_fb_parse@@Base+0x1040>
   30628:	cmp	r3, r2
   3062c:	bne	32188 <__flatcc_fb_parse@@Base+0x25a4>
   30630:	ldr	r0, [pc, #1520]	; 30c28 <__flatcc_fb_parse@@Base+0x1044>
   30634:	mov	r2, #5
   30638:	mov	r1, r4
   3063c:	add	r0, pc, r0
   30640:	bl	13ff0 <memcmp@plt>
   30644:	ldr	r3, [pc, #1504]	; 30c2c <__flatcc_fb_parse@@Base+0x1048>
   30648:	cmp	r0, #0
   3064c:	moveq	r0, r3
   30650:	movne	r0, #9
   30654:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   30658:	add	r2, r4, #1
   3065c:	cmp	r6, r2
   30660:	beq	30514 <__flatcc_fb_parse@@Base+0x930>
   30664:	ldrb	r3, [r4, #1]
   30668:	cmp	r3, #88	; 0x58
   3066c:	beq	30678 <__flatcc_fb_parse@@Base+0xa94>
   30670:	cmp	r3, #120	; 0x78
   30674:	bne	30514 <__flatcc_fb_parse@@Base+0x930>
   30678:	add	r1, r4, #2
   3067c:	cmp	r1, r6
   30680:	mov	r3, r1
   30684:	beq	306a8 <__flatcc_fb_parse@@Base+0xac4>
   30688:	ldrb	r2, [r1], #1
   3068c:	sub	r0, r2, #48	; 0x30
   30690:	cmp	r0, #9
   30694:	bls	3067c <__flatcc_fb_parse@@Base+0xa98>
   30698:	orr	r2, r2, #32
   3069c:	sub	r2, r2, #97	; 0x61
   306a0:	cmp	r2, #5
   306a4:	bls	3067c <__flatcc_fb_parse@@Base+0xa98>
   306a8:	mov	r2, r4
   306ac:	mov	r1, #14
   306b0:	mov	r0, sl
   306b4:	mov	r4, r3
   306b8:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   306bc:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   306c0:	cmp	r1, #127	; 0x7f
   306c4:	cmpne	r1, #31
   306c8:	add	r5, r4, #1
   306cc:	bhi	306dc <__flatcc_fb_parse@@Base+0xaf8>
   306d0:	cmp	r1, #32
   306d4:	cmpne	r1, #9
   306d8:	bne	32098 <__flatcc_fb_parse@@Base+0x24b4>
   306dc:	mov	r2, r4
   306e0:	mov	r3, r5
   306e4:	mov	r1, #8
   306e8:	mov	r0, sl
   306ec:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   306f0:	mov	r4, r5
   306f4:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   306f8:	add	r5, r4, #2
   306fc:	cmp	r6, r5
   30700:	beq	2ffa0 <__flatcc_fb_parse@@Base+0x3bc>
   30704:	ldrb	r3, [r4, #2]
   30708:	cmp	r3, #13
   3070c:	bne	2ffa0 <__flatcc_fb_parse@@Base+0x3bc>
   30710:	b	2ff9c <__flatcc_fb_parse@@Base+0x3b8>
   30714:	add	r5, r4, #2
   30718:	mov	r3, r5
   3071c:	mov	r2, r4
   30720:	ldr	r1, [pc, #1288]	; 30c30 <__flatcc_fb_parse@@Base+0x104c>
   30724:	mov	r0, sl
   30728:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   3072c:	mov	r2, r4
   30730:	mov	r3, r5
   30734:	mov	r1, #38	; 0x26
   30738:	mov	r0, sl
   3073c:	mov	r4, r5
   30740:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   30744:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   30748:	add	r5, r4, #2
   3074c:	cmp	r6, r5
   30750:	beq	30760 <__flatcc_fb_parse@@Base+0xb7c>
   30754:	ldrb	r3, [r4, #2]
   30758:	cmp	r3, #61	; 0x3d
   3075c:	beq	32460 <__flatcc_fb_parse@@Base+0x287c>
   30760:	mov	r3, r5
   30764:	mov	r2, r4
   30768:	ldr	r1, [pc, #1220]	; 30c34 <__flatcc_fb_parse@@Base+0x1050>
   3076c:	mov	r0, sl
   30770:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   30774:	mov	r2, r4
   30778:	mov	r3, r5
   3077c:	mov	r1, #61	; 0x3d
   30780:	mov	r0, sl
   30784:	mov	r4, r5
   30788:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   3078c:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   30790:	mov	r0, sl
   30794:	str	r4, [sp, #4]
   30798:	str	r4, [sp]
   3079c:	mov	r3, #0
   307a0:	mov	r2, r7
   307a4:	mov	r1, r6
   307a8:	bl	2e224 <__flatcc_error_report@@Base>
   307ac:	ldr	r0, [sl, #108]	; 0x6c
   307b0:	cmp	r0, #9
   307b4:	ble	302e0 <__flatcc_fb_parse@@Base+0x6fc>
   307b8:	ldr	r9, [sl, #40]	; 0x28
   307bc:	ldr	r2, [r9, #16]
   307c0:	b	30810 <__flatcc_fb_parse@@Base+0xc2c>
   307c4:	mov	r0, sl
   307c8:	str	r4, [sp, #4]
   307cc:	str	r4, [sp]
   307d0:	mov	r3, #0
   307d4:	mov	r2, r8
   307d8:	bl	2e224 <__flatcc_error_report@@Base>
   307dc:	mov	r1, fp
   307e0:	mov	r0, sl
   307e4:	bl	2e0f8 <__flatcc_fb_default_error_out@@Base+0x258>
   307e8:	b	302f8 <__flatcc_fb_parse@@Base+0x714>
   307ec:	str	r4, [sp, #4]
   307f0:	str	r4, [sp]
   307f4:	mov	r3, #0
   307f8:	mov	r2, r9
   307fc:	mov	r0, sl
   30800:	bl	2e224 <__flatcc_error_report@@Base>
   30804:	b	302b0 <__flatcc_fb_parse@@Base+0x6cc>
   30808:	ldr	r0, [sl, #108]	; 0x6c
   3080c:	mov	r9, r3
   30810:	ldr	r3, [pc, #1056]	; 30c38 <__flatcc_fb_parse@@Base+0x1054>
   30814:	add	r3, pc, r3
   30818:	str	r3, [sp, #8]
   3081c:	ldr	r3, [pc, #1048]	; 30c3c <__flatcc_fb_parse@@Base+0x1058>
   30820:	add	r3, pc, r3
   30824:	str	r3, [sp, #28]
   30828:	ldr	r3, [pc, #1040]	; 30c40 <__flatcc_fb_parse@@Base+0x105c>
   3082c:	add	r3, pc, r3
   30830:	str	r3, [sp, #12]
   30834:	ldr	r3, [pc, #1032]	; 30c44 <__flatcc_fb_parse@@Base+0x1060>
   30838:	add	r3, pc, r3
   3083c:	str	r3, [sp, #16]
   30840:	ldr	r3, [pc, #1024]	; 30c48 <__flatcc_fb_parse@@Base+0x1064>
   30844:	add	r3, pc, r3
   30848:	str	r3, [sp, #20]
   3084c:	ldr	r3, [pc, #1016]	; 30c4c <__flatcc_fb_parse@@Base+0x1068>
   30850:	add	r3, pc, r3
   30854:	str	r3, [sp, #24]
   30858:	b	308c0 <__flatcc_fb_parse@@Base+0xcdc>
   3085c:	mvn	r2, #972	; 0x3cc
   30860:	cmp	r3, r2
   30864:	beq	30a68 <__flatcc_fb_parse@@Base+0xe84>
   30868:	cmn	r3, #972	; 0x3cc
   3086c:	bge	30a2c <__flatcc_fb_parse@@Base+0xe48>
   30870:	sub	r2, r2, #10
   30874:	cmp	r3, r2
   30878:	beq	31364 <__flatcc_fb_parse@@Base+0x1780>
   3087c:	cmn	r3, #976	; 0x3d0
   30880:	beq	310cc <__flatcc_fb_parse@@Base+0x14e8>
   30884:	mvn	r2, #996	; 0x3e4
   30888:	cmp	r3, r2
   3088c:	beq	30eac <__flatcc_fb_parse@@Base+0x12c8>
   30890:	mov	r3, #0
   30894:	str	r3, [sp, #4]
   30898:	str	r3, [sp]
   3089c:	ldr	r2, [sp, #12]
   308a0:	mov	r0, sl
   308a4:	bl	2e224 <__flatcc_error_report@@Base>
   308a8:	ldr	r3, [sl, #40]	; 0x28
   308ac:	cmp	r9, r3
   308b0:	beq	309b0 <__flatcc_fb_parse@@Base+0xdcc>
   308b4:	ldr	r2, [r3, #16]
   308b8:	ldr	r0, [sl, #108]	; 0x6c
   308bc:	mov	r9, r3
   308c0:	cmp	r2, #0
   308c4:	beq	315f8 <__flatcc_fb_parse@@Base+0x1a14>
   308c8:	cmp	r0, #9
   308cc:	bgt	309e0 <__flatcc_fb_parse@@Base+0xdfc>
   308d0:	ldr	r1, [sl, #40]	; 0x28
   308d4:	ldr	r3, [r1, #16]
   308d8:	cmn	r3, #968	; 0x3c8
   308dc:	beq	30aec <__flatcc_fb_parse@@Base+0xf08>
   308e0:	ble	3085c <__flatcc_fb_parse@@Base+0xc78>
   308e4:	cmp	r3, #5
   308e8:	beq	30d8c <__flatcc_fb_parse@@Base+0x11a8>
   308ec:	bgt	309e8 <__flatcc_fb_parse@@Base+0xe04>
   308f0:	ldr	r2, [pc, #856]	; 30c50 <__flatcc_fb_parse@@Base+0x106c>
   308f4:	cmp	r3, r2
   308f8:	beq	30d20 <__flatcc_fb_parse@@Base+0x113c>
   308fc:	blt	30b50 <__flatcc_fb_parse@@Base+0xf6c>
   30900:	mvn	r2, #964	; 0x3c4
   30904:	cmp	r3, r2
   30908:	bne	30890 <__flatcc_fb_parse@@Base+0xcac>
   3090c:	add	r4, sl, #360	; 0x168
   30910:	mov	r0, sl
   30914:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   30918:	ldrh	r3, [r4, #8]
   3091c:	cmp	r3, #0
   30920:	bne	317e8 <__flatcc_fb_parse@@Base+0x1c04>
   30924:	ldr	r1, [sl, #40]	; 0x28
   30928:	ldr	r3, [r1, #16]
   3092c:	cmp	r3, #19
   30930:	bne	31814 <__flatcc_fb_parse@@Base+0x1c30>
   30934:	mov	r0, sl
   30938:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   3093c:	mov	r1, r4
   30940:	mov	r0, sl
   30944:	ldr	r5, [sl, #40]	; 0x28
   30948:	bl	2e8f4 <__flatcc_error_report@@Base+0x6d0>
   3094c:	ldr	r3, [sl, #360]	; 0x168
   30950:	cmp	r3, #0
   30954:	beq	3098c <__flatcc_fb_parse@@Base+0xda8>
   30958:	ldr	r3, [sl, #364]	; 0x16c
   3095c:	cmp	r3, #4
   30960:	beq	3098c <__flatcc_fb_parse@@Base+0xda8>
   30964:	mov	r2, #1
   30968:	strh	r2, [r4, #8]
   3096c:	ldr	r2, [pc, #736]	; 30c54 <__flatcc_fb_parse@@Base+0x1070>
   30970:	mov	r3, #0
   30974:	mov	r1, r5
   30978:	str	r3, [sp, #4]
   3097c:	str	r3, [sp]
   30980:	add	r2, pc, r2
   30984:	mov	r0, sl
   30988:	bl	2e224 <__flatcc_error_report@@Base>
   3098c:	ldr	r1, [sl, #40]	; 0x28
   30990:	ldr	r3, [r1, #16]
   30994:	cmp	r3, #59	; 0x3b
   30998:	bne	31944 <__flatcc_fb_parse@@Base+0x1d60>
   3099c:	mov	r0, sl
   309a0:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   309a4:	ldr	r3, [sl, #40]	; 0x28
   309a8:	cmp	r9, r3
   309ac:	bne	308b4 <__flatcc_fb_parse@@Base+0xcd0>
   309b0:	ldr	r0, [sl, #108]	; 0x6c
   309b4:	cmp	r0, #0
   309b8:	bne	309e0 <__flatcc_fb_parse@@Base+0xdfc>
   309bc:	ldr	r2, [pc, #660]	; 30c58 <__flatcc_fb_parse@@Base+0x1074>
   309c0:	str	r0, [sp, #4]
   309c4:	str	r0, [sp]
   309c8:	mov	r3, r0
   309cc:	mov	r1, r9
   309d0:	mov	r0, sl
   309d4:	add	r2, pc, r2
   309d8:	bl	2e224 <__flatcc_error_report@@Base>
   309dc:	ldr	r0, [sl, #108]	; 0x6c
   309e0:	add	sp, sp, #52	; 0x34
   309e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   309e8:	cmp	r3, #27
   309ec:	beq	31404 <__flatcc_fb_parse@@Base+0x1820>
   309f0:	cmp	r3, #123	; 0x7b
   309f4:	beq	313e4 <__flatcc_fb_parse@@Base+0x1800>
   309f8:	cmp	r3, #7
   309fc:	bne	30890 <__flatcc_fb_parse@@Base+0xcac>
   30a00:	mov	r2, #1
   30a04:	ldr	r3, [pc, #592]	; 30c5c <__flatcc_fb_parse@@Base+0x1078>
   30a08:	str	r2, [sp, #4]
   30a0c:	ldr	r2, [pc, #588]	; 30c60 <__flatcc_fb_parse@@Base+0x107c>
   30a10:	add	r3, pc, r3
   30a14:	str	r3, [sp]
   30a18:	add	r2, pc, r2
   30a1c:	mov	r3, #0
   30a20:	mov	r0, sl
   30a24:	bl	2e224 <__flatcc_error_report@@Base>
   30a28:	b	308a8 <__flatcc_fb_parse@@Base+0xcc4>
   30a2c:	ldr	r2, [pc, #560]	; 30c64 <__flatcc_fb_parse@@Base+0x1080>
   30a30:	cmp	r3, r2
   30a34:	beq	30e04 <__flatcc_fb_parse@@Base+0x1220>
   30a38:	bgt	30dac <__flatcc_fb_parse@@Base+0x11c8>
   30a3c:	sub	r2, r2, #1
   30a40:	cmp	r3, r2
   30a44:	bne	30890 <__flatcc_fb_parse@@Base+0xcac>
   30a48:	ldr	r2, [pc, #536]	; 30c68 <__flatcc_fb_parse@@Base+0x1084>
   30a4c:	mov	r3, #0
   30a50:	str	r3, [sp, #4]
   30a54:	str	r3, [sp]
   30a58:	add	r2, pc, r2
   30a5c:	mov	r0, sl
   30a60:	bl	2e224 <__flatcc_error_report@@Base>
   30a64:	b	308a8 <__flatcc_fb_parse@@Base+0xcc4>
   30a68:	mov	r0, sl
   30a6c:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   30a70:	ldr	r1, [sl, #52]	; 0x34
   30a74:	ldr	r2, [sl, #44]	; 0x2c
   30a78:	add	r3, r1, #128	; 0x80
   30a7c:	cmp	r3, r2
   30a80:	bhi	31690 <__flatcc_fb_parse@@Base+0x1aac>
   30a84:	ldr	r2, [sl, #392]	; 0x188
   30a88:	str	r3, [sl, #52]	; 0x34
   30a8c:	str	r2, [r1]
   30a90:	ldr	r3, [sl, #36]	; 0x24
   30a94:	ldr	r2, [sl, #544]	; 0x220
   30a98:	mov	r0, #1
   30a9c:	cmp	r3, #0
   30aa0:	strh	r0, [r1, #8]
   30aa4:	str	r1, [sl, #392]	; 0x188
   30aa8:	str	r2, [r1, #12]
   30aac:	beq	30ad0 <__flatcc_fb_parse@@Base+0xeec>
   30ab0:	mov	r0, #0
   30ab4:	b	30abc <__flatcc_fb_parse@@Base+0xed8>
   30ab8:	mov	r3, r2
   30abc:	ldr	r2, [r3]
   30ac0:	str	r0, [r3]
   30ac4:	cmp	r2, #0
   30ac8:	mov	r0, r3
   30acc:	bne	30ab8 <__flatcc_fb_parse@@Base+0xed4>
   30ad0:	mov	r2, #0
   30ad4:	str	r3, [r1, #32]
   30ad8:	mov	r0, sl
   30adc:	str	r2, [sl, #36]	; 0x24
   30ae0:	mvn	r2, #972	; 0x3cc
   30ae4:	bl	2f328 <__flatcc_error_report@@Base+0x1104>
   30ae8:	b	308a8 <__flatcc_fb_parse@@Base+0xcc4>
   30aec:	mov	r0, sl
   30af0:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   30af4:	ldr	r3, [sl, #400]	; 0x190
   30af8:	add	r5, sl, #400	; 0x190
   30afc:	cmp	r3, #0
   30b00:	ldr	r4, [sl, #40]	; 0x28
   30b04:	beq	30b24 <__flatcc_fb_parse@@Base+0xf40>
   30b08:	mov	r3, #0
   30b0c:	str	r3, [sp, #4]
   30b10:	str	r3, [sp]
   30b14:	ldr	r2, [sp, #28]
   30b18:	mov	r1, r4
   30b1c:	mov	r0, sl
   30b20:	bl	2e224 <__flatcc_error_report@@Base>
   30b24:	mov	r1, r5
   30b28:	mov	r0, sl
   30b2c:	bl	2e41c <__flatcc_error_report@@Base+0x1f8>
   30b30:	ldr	r2, [sl, #544]	; 0x220
   30b34:	mov	r3, r4
   30b38:	str	r2, [sl, #408]	; 0x198
   30b3c:	mov	r1, #59	; 0x3b
   30b40:	ldr	r2, [sp, #8]
   30b44:	mov	r0, sl
   30b48:	bl	2e564 <__flatcc_error_report@@Base+0x340>
   30b4c:	b	308a8 <__flatcc_fb_parse@@Base+0xcc4>
   30b50:	mov	r0, sl
   30b54:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   30b58:	ldr	r1, [sl, #52]	; 0x34
   30b5c:	ldr	r2, [sl, #44]	; 0x2c
   30b60:	add	r3, r1, #128	; 0x80
   30b64:	cmp	r3, r2
   30b68:	bhi	3165c <__flatcc_fb_parse@@Base+0x1a78>
   30b6c:	ldr	r2, [sl, #392]	; 0x188
   30b70:	str	r3, [sl, #52]	; 0x34
   30b74:	str	r2, [r1]
   30b78:	ldr	r3, [sl, #36]	; 0x24
   30b7c:	ldr	r2, [sl, #544]	; 0x220
   30b80:	mov	r0, #2
   30b84:	cmp	r3, #0
   30b88:	strh	r0, [r1, #8]
   30b8c:	str	r1, [sl, #392]	; 0x188
   30b90:	str	r2, [r1, #12]
   30b94:	beq	30bb8 <__flatcc_fb_parse@@Base+0xfd4>
   30b98:	mov	r0, #0
   30b9c:	b	30ba4 <__flatcc_fb_parse@@Base+0xfc0>
   30ba0:	mov	r3, r2
   30ba4:	ldr	r2, [r3]
   30ba8:	str	r0, [r3]
   30bac:	cmp	r2, #0
   30bb0:	mov	r0, r3
   30bb4:	bne	30ba0 <__flatcc_fb_parse@@Base+0xfbc>
   30bb8:	mov	r2, #0
   30bbc:	str	r3, [r1, #32]
   30bc0:	mov	r0, sl
   30bc4:	str	r2, [sl, #36]	; 0x24
   30bc8:	ldr	r2, [pc, #156]	; 30c6c <__flatcc_fb_parse@@Base+0x1088>
   30bcc:	bl	2f328 <__flatcc_error_report@@Base+0x1104>
   30bd0:	b	308a8 <__flatcc_fb_parse@@Base+0xcc4>
   30bd4:	andeq	r8, r2, r8, asr #9
   30bd8:	andeq	r8, r2, ip, asr #9
   30bdc:	ldrbvs	r7, [r0, #-571]!	; 0xfffffdc5
   30be0:			; <UNDEFINED> instruction: 0xfffffc2a
   30be4:	andeq	r3, r0, r6, lsr #26
   30be8:	andeq	r3, r0, sl, lsr #26
   30bec:	andeq	r3, r0, fp, lsr #26
   30bf0:	andeq	r7, r0, ip, ror ip
   30bf4:	andeq	r7, r2, r8, ror pc
   30bf8:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   30bfc:	andeq	r7, r2, r8, lsr #30
   30c00:			; <UNDEFINED> instruction: 0xfffffc35
   30c04:	andeq	r3, r0, sp, lsr lr
   30c08:	eorseq	r3, lr, lr, lsr lr
   30c0c:	andeq	r3, r0, sl, lsr sp
   30c10:	andeq	r7, r2, r8, ror #7
   30c14:	andeq	r7, r2, ip, asr #7
   30c18:	stmdacc	r9!, {r0, r2, r4, r5, r8, sl, ip, sp, lr}^
   30c1c:	strbtcc	r6, [lr], #-2357	; 0xfffff6cb
   30c20:			; <UNDEFINED> instruction: 0x36697536
   30c24:			; <UNDEFINED> instruction: 0x366e6935
   30c28:			; <UNDEFINED> instruction: 0x00010bbc
   30c2c:			; <UNDEFINED> instruction: 0xfffffc20
   30c30:	andeq	r2, r0, r6, lsr #12
   30c34:	andeq	r3, r0, sp, lsr sp
   30c38:	andeq	r7, r2, ip, asr #22
   30c3c:	andeq	r7, r2, r8, lsr #22
   30c40:	andeq	r7, r2, r0, asr lr
   30c44:	andeq	r7, r2, r8, asr #27
   30c48:	andeq	r7, r2, ip, asr r4
   30c4c:	andeq	r7, r2, ip, lsl #28
   30c50:			; <UNDEFINED> instruction: 0xfffffc3a
   30c54:	andeq	r7, r2, r0, lsl #19
   30c58:	ldrdeq	r7, [r2], -r0
   30c5c:	muleq	r2, r0, r2
   30c60:	andeq	r7, r2, ip, lsl ip
   30c64:			; <UNDEFINED> instruction: 0xfffffc36
   30c68:	andeq	r7, r2, ip, lsl #22
   30c6c:			; <UNDEFINED> instruction: 0xfffffc39
   30c70:	andeq	r7, r2, r4, lsr #10
   30c74:	andeq	r7, r2, r8, lsr r4
   30c78:	andeq	r7, r2, ip, lsr r5
   30c7c:	andeq	r7, r2, r0, lsr r5
   30c80:	ldrdeq	r7, [r2], -r4
   30c84:	andeq	r7, r2, r8, asr #7
   30c88:	andeq	r7, r2, ip, asr r3
   30c8c:			; <UNDEFINED> instruction: 0x000272b0
   30c90:			; <UNDEFINED> instruction: 0xfffffc29
   30c94:	andeq	r7, r2, r8, lsr #3
   30c98:	andeq	r7, r2, r8, ror #4
   30c9c:	andeq	r7, r2, r8, asr #32
   30ca0:	andeq	r7, r2, r0, asr #1
   30ca4:	muleq	r2, r0, lr
   30ca8:	eoreq	r0, r0, r3, lsl #16
   30cac:	andeq	r6, r2, r8, asr #24
   30cb0:			; <UNDEFINED> instruction: 0x00026abc
   30cb4:			; <UNDEFINED> instruction: 0x00026ab4
   30cb8:	andeq	r6, r2, r4, lsr #23
   30cbc:	andeq	r6, r2, r4, lsl sl
   30cc0:	andeq	r6, r2, r0, lsr #24
   30cc4:	andeq	r6, r2, r0, ror #21
   30cc8:	andeq	r6, r2, ip, lsr fp
   30ccc:	ldrdeq	r6, [r2], -r8
   30cd0:	muleq	r2, r4, fp
   30cd4:	ldrdeq	r6, [r2], -r4
   30cd8:	mcrvs	6, 3, r6, cr9, cr14, {1}
   30cdc:			; <UNDEFINED> instruction: 0x676c7535
   30ce0:			; <UNDEFINED> instruction: 0x67747336
   30ce4:	sfmvs	f6, 2, [pc], #-208	; 30c1c <__flatcc_fb_parse@@Base+0x1038>
   30ce8:	andeq	pc, r0, ip, asr #7
   30cec:	strdeq	r6, [r2], -r4
   30cf0:	strbtvc	r7, [r9], #-1332	; 0xfffffacc
   30cf4:	strbtvc	r6, [lr], #-2355	; 0xfffff6cd
   30cf8:	ldrbtvc	r7, [r3], #-1334	; 0xfffffaca
   30cfc:	andeq	r7, r2, ip, lsr #22
   30d00:	strbvs	r7, [r1, #-1077]!	; 0xfffffbcb
   30d04:	strbvs	r6, [lr, #-2359]!	; 0xfffff6c9
   30d08:	strbvs	r6, [pc, #-1078]!	; 308da <__flatcc_fb_parse@@Base+0xcf6>
   30d0c:	ldrdeq	r6, [r2], -r0
   30d10:			; <UNDEFINED> instruction: 0xfffffc38
   30d14:			; <UNDEFINED> instruction: 0xfffffc3c
   30d18:	andeq	r2, r0, sp, lsr #26
   30d1c:	andeq	r2, r0, ip, lsr sp
   30d20:	add	r4, sl, #376	; 0x178
   30d24:	mov	r0, sl
   30d28:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   30d2c:	ldrh	r3, [r4, #8]
   30d30:	cmp	r3, #2
   30d34:	beq	31a50 <__flatcc_fb_parse@@Base+0x1e6c>
   30d38:	ldr	r1, [sl, #40]	; 0x28
   30d3c:	ldr	r3, [r1, #16]
   30d40:	cmp	r3, #19
   30d44:	bne	31854 <__flatcc_fb_parse@@Base+0x1c70>
   30d48:	mov	r0, sl
   30d4c:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   30d50:	mov	r1, r4
   30d54:	mov	r0, sl
   30d58:	bl	2e8f4 <__flatcc_error_report@@Base+0x6d0>
   30d5c:	ldr	r1, [sl, #40]	; 0x28
   30d60:	ldr	r3, [r1, #16]
   30d64:	cmp	r3, #59	; 0x3b
   30d68:	beq	3099c <__flatcc_fb_parse@@Base+0xdb8>
   30d6c:	ldr	r2, [pc, #-260]	; 30c70 <__flatcc_fb_parse@@Base+0x108c>
   30d70:	mov	r3, #0
   30d74:	str	r3, [sp, #4]
   30d78:	str	r3, [sp]
   30d7c:	add	r2, pc, r2
   30d80:	mov	r0, sl
   30d84:	bl	2e224 <__flatcc_error_report@@Base>
   30d88:	b	308a8 <__flatcc_fb_parse@@Base+0xcc4>
   30d8c:	ldr	r2, [sp, #20]
   30d90:	mov	r3, #1
   30d94:	mov	r0, sl
   30d98:	stm	sp, {r2, r3}
   30d9c:	mov	r3, #0
   30da0:	ldr	r2, [sp, #16]
   30da4:	bl	2e224 <__flatcc_error_report@@Base>
   30da8:	b	308a8 <__flatcc_fb_parse@@Base+0xcc4>
   30dac:	mov	r0, sl
   30db0:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   30db4:	ldr	r5, [sl, #40]	; 0x28
   30db8:	mov	r4, #0
   30dbc:	str	r4, [sp, #40]	; 0x28
   30dc0:	ldr	r2, [r5, #16]
   30dc4:	cmp	r2, #59	; 0x3b
   30dc8:	beq	31530 <__flatcc_fb_parse@@Base+0x194c>
   30dcc:	cmp	r2, #9
   30dd0:	beq	320c0 <__flatcc_fb_parse@@Base+0x24dc>
   30dd4:	ldr	r2, [pc, #-360]	; 30c74 <__flatcc_fb_parse@@Base+0x1090>
   30dd8:	mov	r1, r5
   30ddc:	add	r2, pc, r2
   30de0:	mov	r3, #0
   30de4:	str	r3, [sp, #4]
   30de8:	str	r3, [sp]
   30dec:	mov	r0, sl
   30df0:	bl	2e224 <__flatcc_error_report@@Base>
   30df4:	mov	r1, #59	; 0x3b
   30df8:	mov	r0, sl
   30dfc:	bl	2e0f8 <__flatcc_fb_default_error_out@@Base+0x258>
   30e00:	b	308a8 <__flatcc_fb_parse@@Base+0xcc4>
   30e04:	mov	r0, sl
   30e08:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   30e0c:	ldr	r4, [sl, #52]	; 0x34
   30e10:	ldr	r2, [sl, #44]	; 0x2c
   30e14:	add	r3, r4, #32
   30e18:	cmp	r3, r2
   30e1c:	bhi	3172c <__flatcc_fb_parse@@Base+0x1b48>
   30e20:	ldr	r5, [sl, #40]	; 0x28
   30e24:	str	r3, [sl, #52]	; 0x34
   30e28:	ldr	r2, [sl, #356]	; 0x164
   30e2c:	ldr	r3, [r5, #16]
   30e30:	str	r2, [r4]
   30e34:	cmp	r3, #19
   30e38:	str	r4, [sl, #356]	; 0x164
   30e3c:	bne	31894 <__flatcc_fb_parse@@Base+0x1cb0>
   30e40:	mov	r0, sl
   30e44:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   30e48:	add	r1, r4, #8
   30e4c:	mov	r0, sl
   30e50:	bl	2e8f4 <__flatcc_error_report@@Base+0x6d0>
   30e54:	ldr	r3, [r4, #12]
   30e58:	cmp	r3, #0
   30e5c:	bne	30e7c <__flatcc_fb_parse@@Base+0x1298>
   30e60:	ldr	r2, [pc, #-496]	; 30c78 <__flatcc_fb_parse@@Base+0x1094>
   30e64:	str	r3, [sp, #4]
   30e68:	str	r3, [sp]
   30e6c:	mov	r1, r5
   30e70:	add	r2, pc, r2
   30e74:	mov	r0, sl
   30e78:	bl	2e224 <__flatcc_error_report@@Base>
   30e7c:	ldr	r1, [sl, #40]	; 0x28
   30e80:	ldr	r3, [r1, #16]
   30e84:	cmp	r3, #59	; 0x3b
   30e88:	beq	3099c <__flatcc_fb_parse@@Base+0xdb8>
   30e8c:	ldr	r2, [pc, #-536]	; 30c7c <__flatcc_fb_parse@@Base+0x1098>
   30e90:	mov	r3, #0
   30e94:	str	r3, [sp, #4]
   30e98:	str	r3, [sp]
   30e9c:	add	r2, pc, r2
   30ea0:	mov	r0, sl
   30ea4:	bl	2e224 <__flatcc_error_report@@Base>
   30ea8:	b	308a8 <__flatcc_fb_parse@@Base+0xcc4>
   30eac:	mov	r0, sl
   30eb0:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   30eb4:	ldr	r5, [sl, #52]	; 0x34
   30eb8:	ldr	r2, [sl, #44]	; 0x2c
   30ebc:	add	r3, r5, #128	; 0x80
   30ec0:	cmp	r3, r2
   30ec4:	bhi	316f8 <__flatcc_fb_parse@@Base+0x1b14>
   30ec8:	ldr	r2, [sl, #392]	; 0x188
   30ecc:	str	r3, [sl, #52]	; 0x34
   30ed0:	str	r2, [r5]
   30ed4:	ldr	r3, [sl, #36]	; 0x24
   30ed8:	ldr	r2, [sl, #544]	; 0x220
   30edc:	mov	r1, #3
   30ee0:	cmp	r3, #0
   30ee4:	strh	r1, [r5, #8]
   30ee8:	str	r5, [sl, #392]	; 0x188
   30eec:	str	r2, [r5, #12]
   30ef0:	beq	30f14 <__flatcc_fb_parse@@Base+0x1330>
   30ef4:	mov	r1, #0
   30ef8:	b	30f00 <__flatcc_fb_parse@@Base+0x131c>
   30efc:	mov	r3, r2
   30f00:	ldr	r2, [r3]
   30f04:	str	r1, [r3]
   30f08:	cmp	r2, #0
   30f0c:	mov	r1, r3
   30f10:	bne	30efc <__flatcc_fb_parse@@Base+0x1318>
   30f14:	ldr	r6, [sl, #40]	; 0x28
   30f18:	str	r3, [r5, #32]
   30f1c:	mov	r4, #0
   30f20:	ldr	r3, [r6, #16]
   30f24:	str	r4, [sl, #36]	; 0x24
   30f28:	cmp	r3, #9
   30f2c:	bne	3182c <__flatcc_fb_parse@@Base+0x1c48>
   30f30:	mov	r0, sl
   30f34:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   30f38:	ldr	r3, [sl, #40]	; 0x28
   30f3c:	str	r6, [r5, #4]
   30f40:	ldr	r3, [r3, #16]
   30f44:	cmp	r3, #58	; 0x3a
   30f48:	beq	31548 <__flatcc_fb_parse@@Base+0x1964>
   30f4c:	mov	r0, sl
   30f50:	bl	2f14c <__flatcc_error_report@@Base+0xf28>
   30f54:	ldr	r3, [sl, #40]	; 0x28
   30f58:	str	r3, [sp, #32]
   30f5c:	ldr	r3, [r3, #16]
   30f60:	cmp	r3, #123	; 0x7b
   30f64:	str	r0, [r5, #28]
   30f68:	bne	318d4 <__flatcc_fb_parse@@Base+0x1cf0>
   30f6c:	mov	r0, sl
   30f70:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   30f74:	ldr	r8, [sl, #40]	; 0x28
   30f78:	ldr	r3, [r8, #16]
   30f7c:	cmp	r3, #9
   30f80:	bne	31068 <__flatcc_fb_parse@@Base+0x1484>
   30f84:	ldr	r7, [pc, #-780]	; 30c80 <__flatcc_fb_parse@@Base+0x109c>
   30f88:	mov	r6, #5
   30f8c:	add	r7, pc, r7
   30f90:	mov	r4, #0
   30f94:	mov	r0, sl
   30f98:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   30f9c:	ldr	r3, [sl, #108]	; 0x6c
   30fa0:	cmp	r3, #9
   30fa4:	bgt	31088 <__flatcc_fb_parse@@Base+0x14a4>
   30fa8:	ldr	fp, [sl, #52]	; 0x34
   30fac:	ldr	r3, [sl, #44]	; 0x2c
   30fb0:	add	r0, fp, #128	; 0x80
   30fb4:	cmp	r0, r3
   30fb8:	bhi	31098 <__flatcc_fb_parse@@Base+0x14b4>
   30fbc:	ldr	r3, [r5, #20]
   30fc0:	str	r0, [sl, #52]	; 0x34
   30fc4:	str	r3, [fp]
   30fc8:	strh	r6, [fp, #8]
   30fcc:	str	fp, [r5, #20]
   30fd0:	ldr	r3, [sl, #36]	; 0x24
   30fd4:	cmp	r3, #0
   30fd8:	beq	30ffc <__flatcc_fb_parse@@Base+0x1418>
   30fdc:	mov	r1, r4
   30fe0:	b	30fe8 <__flatcc_fb_parse@@Base+0x1404>
   30fe4:	mov	r3, r2
   30fe8:	ldr	r2, [r3]
   30fec:	str	r1, [r3]
   30ff0:	cmp	r2, #0
   30ff4:	mov	r1, r3
   30ff8:	bne	30fe4 <__flatcc_fb_parse@@Base+0x1400>
   30ffc:	ldr	r2, [sl, #40]	; 0x28
   31000:	str	r3, [fp, #68]	; 0x44
   31004:	str	r4, [sl, #36]	; 0x24
   31008:	ldr	r3, [r2, #16]
   3100c:	str	r8, [fp, #4]
   31010:	cmp	r3, #61	; 0x3d
   31014:	bne	3103c <__flatcc_fb_parse@@Base+0x1458>
   31018:	mov	r0, sl
   3101c:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   31020:	mov	r3, r7
   31024:	mov	r2, r4
   31028:	add	r1, fp, #48	; 0x30
   3102c:	mov	r0, sl
   31030:	bl	2eabc <__flatcc_error_report@@Base+0x898>
   31034:	ldr	r3, [sl, #40]	; 0x28
   31038:	ldr	r3, [r3, #16]
   3103c:	cmp	r3, #44	; 0x2c
   31040:	bne	3142c <__flatcc_fb_parse@@Base+0x1848>
   31044:	mov	r0, sl
   31048:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   3104c:	ldr	r8, [sl, #40]	; 0x28
   31050:	ldr	r3, [r8, #16]
   31054:	cmp	r3, #125	; 0x7d
   31058:	beq	3142c <__flatcc_fb_parse@@Base+0x1848>
   3105c:	cmp	r3, #9
   31060:	str	r4, [sl, #36]	; 0x24
   31064:	beq	30f94 <__flatcc_fb_parse@@Base+0x13b0>
   31068:	ldr	r2, [pc, #-1004]	; 30c84 <__flatcc_fb_parse@@Base+0x10a0>
   3106c:	mov	r3, #0
   31070:	mov	r1, r8
   31074:	str	r3, [sp, #4]
   31078:	str	r3, [sp]
   3107c:	add	r2, pc, r2
   31080:	mov	r0, sl
   31084:	bl	2e224 <__flatcc_error_report@@Base>
   31088:	mov	r1, #125	; 0x7d
   3108c:	mov	r0, sl
   31090:	bl	2e0f8 <__flatcc_fb_default_error_out@@Base+0x258>
   31094:	b	308a8 <__flatcc_fb_parse@@Base+0xcc4>
   31098:	mov	r1, #1
   3109c:	mov	r0, #65536	; 0x10000
   310a0:	bl	13f9c <calloc@plt>
   310a4:	cmp	r0, #0
   310a8:	beq	32844 <__flatcc_fb_parse@@Base+0x2c60>
   310ac:	ldr	r3, [sl, #48]	; 0x30
   310b0:	add	fp, r0, #16
   310b4:	str	r3, [r0]
   310b8:	add	r3, r0, #65536	; 0x10000
   310bc:	str	r0, [sl, #48]	; 0x30
   310c0:	str	r3, [sl, #44]	; 0x2c
   310c4:	add	r0, r0, #144	; 0x90
   310c8:	b	30fbc <__flatcc_fb_parse@@Base+0x13d8>
   310cc:	mov	r0, sl
   310d0:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   310d4:	ldr	r6, [sl, #52]	; 0x34
   310d8:	ldr	r2, [sl, #44]	; 0x2c
   310dc:	add	r3, r6, #128	; 0x80
   310e0:	cmp	r3, r2
   310e4:	bhi	31760 <__flatcc_fb_parse@@Base+0x1b7c>
   310e8:	ldr	r2, [sl, #392]	; 0x188
   310ec:	str	r3, [sl, #52]	; 0x34
   310f0:	str	r2, [r6]
   310f4:	ldr	r3, [sl, #36]	; 0x24
   310f8:	ldr	r2, [sl, #544]	; 0x220
   310fc:	mov	r1, #4
   31100:	cmp	r3, #0
   31104:	strh	r1, [r6, #8]
   31108:	str	r6, [sl, #392]	; 0x188
   3110c:	str	r2, [r6, #12]
   31110:	beq	31134 <__flatcc_fb_parse@@Base+0x1550>
   31114:	mov	r1, #0
   31118:	b	31120 <__flatcc_fb_parse@@Base+0x153c>
   3111c:	mov	r3, r2
   31120:	ldr	r2, [r3]
   31124:	str	r1, [r3]
   31128:	cmp	r2, #0
   3112c:	mov	r1, r3
   31130:	bne	3111c <__flatcc_fb_parse@@Base+0x1538>
   31134:	ldr	r4, [sl, #40]	; 0x28
   31138:	str	r3, [r6, #32]
   3113c:	mov	r5, #0
   31140:	ldr	r3, [r4, #16]
   31144:	str	r5, [sl, #36]	; 0x24
   31148:	cmp	r3, #9
   3114c:	bne	3186c <__flatcc_fb_parse@@Base+0x1c88>
   31150:	mov	r0, sl
   31154:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   31158:	str	r4, [r6, #4]
   3115c:	mov	r0, sl
   31160:	bl	2f14c <__flatcc_error_report@@Base+0xf28>
   31164:	ldr	r3, [sl, #40]	; 0x28
   31168:	str	r3, [sp, #32]
   3116c:	ldr	r3, [r3, #16]
   31170:	cmp	r3, #123	; 0x7b
   31174:	str	r0, [r6, #28]
   31178:	bne	31920 <__flatcc_fb_parse@@Base+0x1d3c>
   3117c:	mov	r0, sl
   31180:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   31184:	ldr	r7, [sl, #40]	; 0x28
   31188:	ldr	r3, [r7, #16]
   3118c:	cmp	r3, #9
   31190:	bne	318fc <__flatcc_fb_parse@@Base+0x1d18>
   31194:	ldr	r3, [sl, #108]	; 0x6c
   31198:	cmp	r3, #9
   3119c:	bgt	312d8 <__flatcc_fb_parse@@Base+0x16f4>
   311a0:	ldr	r3, [pc, #-1312]	; 30c88 <__flatcc_fb_parse@@Base+0x10a4>
   311a4:	ldr	fp, [pc, #-1312]	; 30c8c <__flatcc_fb_parse@@Base+0x10a8>
   311a8:	add	r3, pc, r3
   311ac:	str	r9, [sp, #36]	; 0x24
   311b0:	add	fp, pc, fp
   311b4:	mov	r8, #5
   311b8:	mov	r9, r3
   311bc:	ldr	r4, [sl, #52]	; 0x34
   311c0:	ldr	r3, [sl, #44]	; 0x2c
   311c4:	add	r0, r4, #128	; 0x80
   311c8:	cmp	r0, r3
   311cc:	bhi	31330 <__flatcc_fb_parse@@Base+0x174c>
   311d0:	ldr	r3, [r6, #20]
   311d4:	str	r0, [sl, #52]	; 0x34
   311d8:	str	r3, [r4]
   311dc:	strh	r8, [r4, #8]
   311e0:	str	r4, [r6, #20]
   311e4:	ldr	r3, [sl, #36]	; 0x24
   311e8:	cmp	r3, #0
   311ec:	beq	31210 <__flatcc_fb_parse@@Base+0x162c>
   311f0:	mov	r1, r5
   311f4:	b	311fc <__flatcc_fb_parse@@Base+0x1618>
   311f8:	mov	r3, r2
   311fc:	ldr	r2, [r3]
   31200:	str	r1, [r3]
   31204:	cmp	r2, #0
   31208:	mov	r1, r3
   3120c:	bne	311f8 <__flatcc_fb_parse@@Base+0x1614>
   31210:	str	r3, [r4, #68]	; 0x44
   31214:	add	r1, sp, #44	; 0x2c
   31218:	str	r5, [sl, #36]	; 0x24
   3121c:	mov	r0, sl
   31220:	bl	2e41c <__flatcc_error_report@@Base+0x1f8>
   31224:	ldr	r3, [sp, #44]	; 0x2c
   31228:	mov	r1, #12
   3122c:	str	r3, [r4, #16]
   31230:	ldr	r2, [r3]
   31234:	strh	r1, [r4, #24]
   31238:	cmp	r2, #0
   3123c:	bne	31248 <__flatcc_fb_parse@@Base+0x1664>
   31240:	b	31540 <__flatcc_fb_parse@@Base+0x195c>
   31244:	mov	r2, r3
   31248:	ldr	r3, [r2]
   3124c:	cmp	r3, #0
   31250:	bne	31244 <__flatcc_fb_parse@@Base+0x1660>
   31254:	str	r2, [sp, #44]	; 0x2c
   31258:	ldr	r3, [sl, #40]	; 0x28
   3125c:	ldr	r2, [r2, #4]
   31260:	ldr	r3, [r3, #16]
   31264:	str	r2, [r4, #4]
   31268:	cmp	r3, #58	; 0x3a
   3126c:	beq	312e4 <__flatcc_fb_parse@@Base+0x1700>
   31270:	cmp	r3, #61	; 0x3d
   31274:	bne	3129c <__flatcc_fb_parse@@Base+0x16b8>
   31278:	mov	r0, sl
   3127c:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   31280:	mov	r3, fp
   31284:	mov	r2, r5
   31288:	add	r1, r4, #48	; 0x30
   3128c:	mov	r0, sl
   31290:	bl	2eabc <__flatcc_error_report@@Base+0x898>
   31294:	ldr	r3, [sl, #40]	; 0x28
   31298:	ldr	r3, [r3, #16]
   3129c:	cmp	r3, #44	; 0x2c
   312a0:	bne	31478 <__flatcc_fb_parse@@Base+0x1894>
   312a4:	mov	r0, sl
   312a8:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   312ac:	ldr	r7, [sl, #40]	; 0x28
   312b0:	ldr	r3, [r7, #16]
   312b4:	cmp	r3, #125	; 0x7d
   312b8:	beq	31478 <__flatcc_fb_parse@@Base+0x1894>
   312bc:	cmp	r3, #9
   312c0:	str	r5, [sl, #36]	; 0x24
   312c4:	bne	318f8 <__flatcc_fb_parse@@Base+0x1d14>
   312c8:	ldr	r3, [sl, #108]	; 0x6c
   312cc:	cmp	r3, #9
   312d0:	ble	311bc <__flatcc_fb_parse@@Base+0x15d8>
   312d4:	ldr	r9, [sp, #36]	; 0x24
   312d8:	mov	r0, sl
   312dc:	bl	2e090 <__flatcc_fb_default_error_out@@Base+0x1f0>
   312e0:	b	308a8 <__flatcc_fb_parse@@Base+0xcc4>
   312e4:	mov	r0, sl
   312e8:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   312ec:	ldr	r3, [r4, #16]
   312f0:	ldr	r3, [r3]
   312f4:	cmp	r3, #0
   312f8:	beq	31318 <__flatcc_fb_parse@@Base+0x1734>
   312fc:	str	r5, [sp, #4]
   31300:	str	r5, [sp]
   31304:	mov	r1, r7
   31308:	mov	r3, #0
   3130c:	mov	r2, r9
   31310:	mov	r0, sl
   31314:	bl	2e224 <__flatcc_error_report@@Base>
   31318:	add	r1, r4, #16
   3131c:	mov	r0, sl
   31320:	bl	2e5b0 <__flatcc_error_report@@Base+0x38c>
   31324:	ldr	r3, [sl, #40]	; 0x28
   31328:	ldr	r3, [r3, #16]
   3132c:	b	31270 <__flatcc_fb_parse@@Base+0x168c>
   31330:	mov	r1, #1
   31334:	mov	r0, #65536	; 0x10000
   31338:	bl	13f9c <calloc@plt>
   3133c:	cmp	r0, #0
   31340:	beq	32844 <__flatcc_fb_parse@@Base+0x2c60>
   31344:	ldr	r3, [sl, #48]	; 0x30
   31348:	add	r4, r0, #16
   3134c:	str	r3, [r0]
   31350:	add	r3, r0, #65536	; 0x10000
   31354:	str	r0, [sl, #48]	; 0x30
   31358:	str	r3, [sl, #44]	; 0x2c
   3135c:	add	r0, r0, #144	; 0x90
   31360:	b	311d0 <__flatcc_fb_parse@@Base+0x15ec>
   31364:	mov	r0, sl
   31368:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   3136c:	ldr	r1, [sl, #52]	; 0x34
   31370:	ldr	r2, [sl, #44]	; 0x2c
   31374:	add	r3, r1, #128	; 0x80
   31378:	cmp	r3, r2
   3137c:	bhi	316c4 <__flatcc_fb_parse@@Base+0x1ae0>
   31380:	ldr	r2, [sl, #392]	; 0x188
   31384:	str	r3, [sl, #52]	; 0x34
   31388:	str	r2, [r1]
   3138c:	ldr	r3, [sl, #36]	; 0x24
   31390:	ldr	r2, [sl, #544]	; 0x220
   31394:	mov	r0, #0
   31398:	cmp	r3, #0
   3139c:	strh	r0, [r1, #8]
   313a0:	str	r1, [sl, #392]	; 0x188
   313a4:	str	r2, [r1, #12]
   313a8:	bne	313b4 <__flatcc_fb_parse@@Base+0x17d0>
   313ac:	b	313c8 <__flatcc_fb_parse@@Base+0x17e4>
   313b0:	mov	r3, r2
   313b4:	ldr	r2, [r3]
   313b8:	str	r0, [r3]
   313bc:	cmp	r2, #0
   313c0:	mov	r0, r3
   313c4:	bne	313b0 <__flatcc_fb_parse@@Base+0x17cc>
   313c8:	mov	r2, #0
   313cc:	str	r3, [r1, #32]
   313d0:	mov	r0, sl
   313d4:	str	r2, [sl, #36]	; 0x24
   313d8:	ldr	r2, [pc, #-1872]	; 30c90 <__flatcc_fb_parse@@Base+0x10ac>
   313dc:	bl	2f328 <__flatcc_error_report@@Base+0x1104>
   313e0:	b	308a8 <__flatcc_fb_parse@@Base+0xcc4>
   313e4:	ldr	r2, [pc, #-1880]	; 30c94 <__flatcc_fb_parse@@Base+0x10b0>
   313e8:	mov	r3, #0
   313ec:	str	r3, [sp, #4]
   313f0:	str	r3, [sp]
   313f4:	add	r2, pc, r2
   313f8:	mov	r0, sl
   313fc:	bl	2e224 <__flatcc_error_report@@Base>
   31400:	b	308a8 <__flatcc_fb_parse@@Base+0xcc4>
   31404:	ldr	r3, [pc, #-1908]	; 30c98 <__flatcc_fb_parse@@Base+0x10b4>
   31408:	mov	r2, #5
   3140c:	add	r3, pc, r3
   31410:	str	r3, [sp]
   31414:	str	r2, [sp, #4]
   31418:	mov	r3, #0
   3141c:	ldr	r2, [sp, #24]
   31420:	mov	r0, sl
   31424:	bl	2e224 <__flatcc_error_report@@Base>
   31428:	b	308a8 <__flatcc_fb_parse@@Base+0xcc4>
   3142c:	ldr	r2, [pc, #-1944]	; 30c9c <__flatcc_fb_parse@@Base+0x10b8>
   31430:	ldr	r3, [sp, #32]
   31434:	add	r2, pc, r2
   31438:	mov	r1, #125	; 0x7d
   3143c:	mov	r0, sl
   31440:	bl	2e564 <__flatcc_error_report@@Base+0x340>
   31444:	ldr	r3, [r5, #20]
   31448:	cmp	r3, #0
   3144c:	beq	31470 <__flatcc_fb_parse@@Base+0x188c>
   31450:	mov	r1, #0
   31454:	b	3145c <__flatcc_fb_parse@@Base+0x1878>
   31458:	mov	r3, r2
   3145c:	ldr	r2, [r3]
   31460:	str	r1, [r3]
   31464:	cmp	r2, #0
   31468:	mov	r1, r3
   3146c:	bne	31458 <__flatcc_fb_parse@@Base+0x1874>
   31470:	str	r3, [r5, #20]
   31474:	b	308a8 <__flatcc_fb_parse@@Base+0xcc4>
   31478:	ldr	r2, [pc, #-2016]	; 30ca0 <__flatcc_fb_parse@@Base+0x10bc>
   3147c:	ldr	r3, [sp, #32]
   31480:	add	r2, pc, r2
   31484:	mov	r1, #125	; 0x7d
   31488:	mov	r0, sl
   3148c:	ldr	r9, [sp, #36]	; 0x24
   31490:	bl	2e564 <__flatcc_error_report@@Base+0x340>
   31494:	ldr	r3, [r6, #20]
   31498:	cmp	r3, #0
   3149c:	beq	314c0 <__flatcc_fb_parse@@Base+0x18dc>
   314a0:	mov	r1, #0
   314a4:	b	314ac <__flatcc_fb_parse@@Base+0x18c8>
   314a8:	mov	r3, r2
   314ac:	ldr	r2, [r3]
   314b0:	str	r1, [r3]
   314b4:	cmp	r2, #0
   314b8:	mov	r1, r3
   314bc:	bne	314a8 <__flatcc_fb_parse@@Base+0x18c4>
   314c0:	ldr	ip, [sl, #52]	; 0x34
   314c4:	ldr	r1, [sl, #44]	; 0x2c
   314c8:	add	r2, ip, #128	; 0x80
   314cc:	cmp	r2, r1
   314d0:	str	r3, [r6, #20]
   314d4:	bhi	31a18 <__flatcc_fb_parse@@Base+0x1e34>
   314d8:	mov	r1, #5
   314dc:	str	r2, [sl, #52]	; 0x34
   314e0:	str	r3, [ip]
   314e4:	strh	r1, [ip, #8]
   314e8:	str	ip, [r6, #20]
   314ec:	ldr	r3, [sl, #36]	; 0x24
   314f0:	cmp	r3, #0
   314f4:	beq	31518 <__flatcc_fb_parse@@Base+0x1934>
   314f8:	mov	r1, #0
   314fc:	b	31504 <__flatcc_fb_parse@@Base+0x1920>
   31500:	mov	r3, r2
   31504:	ldr	r2, [r3]
   31508:	str	r1, [r3]
   3150c:	cmp	r2, #0
   31510:	mov	r1, r3
   31514:	bne	31500 <__flatcc_fb_parse@@Base+0x191c>
   31518:	str	r3, [ip, #68]	; 0x44
   3151c:	mov	r2, #0
   31520:	add	r3, sl, #68	; 0x44
   31524:	str	r2, [sl, #36]	; 0x24
   31528:	str	r3, [ip, #4]
   3152c:	b	308a8 <__flatcc_fb_parse@@Base+0xcc4>
   31530:	mov	r0, sl
   31534:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   31538:	str	r4, [sl, #544]	; 0x220
   3153c:	b	308a8 <__flatcc_fb_parse@@Base+0xcc4>
   31540:	mov	r2, r3
   31544:	b	31258 <__flatcc_fb_parse@@Base+0x1674>
   31548:	mov	r0, sl
   3154c:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   31550:	add	r1, r5, #40	; 0x28
   31554:	mov	r0, sl
   31558:	bl	2e5b0 <__flatcc_error_report@@Base+0x38c>
   3155c:	ldrh	r3, [r5, #48]	; 0x30
   31560:	ldr	r1, [r5, #40]	; 0x28
   31564:	cmp	r3, #8
   31568:	beq	31794 <__flatcc_fb_parse@@Base+0x1bb0>
   3156c:	ldr	r2, [pc, #-2256]	; 30ca4 <__flatcc_fb_parse@@Base+0x10c0>
   31570:	mov	r3, r4
   31574:	str	r4, [sp, #4]
   31578:	str	r4, [sp]
   3157c:	add	r2, pc, r2
   31580:	mov	r0, sl
   31584:	bl	2e224 <__flatcc_error_report@@Base>
   31588:	b	30f4c <__flatcc_fb_parse@@Base+0x1368>
   3158c:	cmp	r1, #46	; 0x2e
   31590:	moveq	ip, r3
   31594:	beq	30124 <__flatcc_fb_parse@@Base+0x540>
   31598:	cmp	r6, r3
   3159c:	beq	31ea8 <__flatcc_fb_parse@@Base+0x22c4>
   315a0:	and	r1, r1, #223	; 0xdf
   315a4:	cmp	r1, #69	; 0x45
   315a8:	moveq	ip, r3
   315ac:	bne	31ea8 <__flatcc_fb_parse@@Base+0x22c4>
   315b0:	add	r2, r3, #1
   315b4:	cmp	r6, r2
   315b8:	beq	315cc <__flatcc_fb_parse@@Base+0x19e8>
   315bc:	ldrb	r1, [r3, #1]
   315c0:	sub	r1, r1, #43	; 0x2b
   315c4:	tst	r1, #253	; 0xfd
   315c8:	movne	r2, r3
   315cc:	add	r2, r2, #1
   315d0:	b	315e8 <__flatcc_fb_parse@@Base+0x1a04>
   315d4:	ldrb	r1, [r2]
   315d8:	add	r2, r2, #1
   315dc:	sub	r1, r1, #48	; 0x30
   315e0:	cmp	r1, #9
   315e4:	bhi	3014c <__flatcc_fb_parse@@Base+0x568>
   315e8:	cmp	r2, r6
   315ec:	mov	r3, r2
   315f0:	bne	315d4 <__flatcc_fb_parse@@Base+0x19f0>
   315f4:	b	3014c <__flatcc_fb_parse@@Base+0x568>
   315f8:	ldr	r1, [sl, #356]	; 0x164
   315fc:	cmp	r1, #0
   31600:	bne	3160c <__flatcc_fb_parse@@Base+0x1a28>
   31604:	b	31620 <__flatcc_fb_parse@@Base+0x1a3c>
   31608:	mov	r1, r3
   3160c:	ldr	r3, [r1]
   31610:	str	r2, [r1]
   31614:	cmp	r3, #0
   31618:	mov	r2, r1
   3161c:	bne	31608 <__flatcc_fb_parse@@Base+0x1a24>
   31620:	ldr	r3, [sl, #392]	; 0x188
   31624:	str	r1, [sl, #356]	; 0x164
   31628:	cmp	r3, #0
   3162c:	beq	31650 <__flatcc_fb_parse@@Base+0x1a6c>
   31630:	mov	r1, #0
   31634:	b	3163c <__flatcc_fb_parse@@Base+0x1a58>
   31638:	mov	r3, r2
   3163c:	ldr	r2, [r3]
   31640:	str	r1, [r3]
   31644:	cmp	r2, #0
   31648:	mov	r1, r3
   3164c:	bne	31638 <__flatcc_fb_parse@@Base+0x1a54>
   31650:	str	r3, [sl, #392]	; 0x188
   31654:	add	sp, sp, #52	; 0x34
   31658:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3165c:	mov	r1, #1
   31660:	mov	r0, #65536	; 0x10000
   31664:	bl	13f9c <calloc@plt>
   31668:	subs	r3, r0, #0
   3166c:	beq	32844 <__flatcc_fb_parse@@Base+0x2c60>
   31670:	ldr	r2, [sl, #48]	; 0x30
   31674:	add	r1, r3, #16
   31678:	str	r2, [r3]
   3167c:	add	r2, r3, #65536	; 0x10000
   31680:	str	r3, [sl, #48]	; 0x30
   31684:	str	r2, [sl, #44]	; 0x2c
   31688:	add	r3, r3, #144	; 0x90
   3168c:	b	30b6c <__flatcc_fb_parse@@Base+0xf88>
   31690:	mov	r1, #1
   31694:	mov	r0, #65536	; 0x10000
   31698:	bl	13f9c <calloc@plt>
   3169c:	subs	r3, r0, #0
   316a0:	beq	32844 <__flatcc_fb_parse@@Base+0x2c60>
   316a4:	ldr	r2, [sl, #48]	; 0x30
   316a8:	add	r1, r3, #16
   316ac:	str	r2, [r3]
   316b0:	add	r2, r3, #65536	; 0x10000
   316b4:	str	r3, [sl, #48]	; 0x30
   316b8:	str	r2, [sl, #44]	; 0x2c
   316bc:	add	r3, r3, #144	; 0x90
   316c0:	b	30a84 <__flatcc_fb_parse@@Base+0xea0>
   316c4:	mov	r1, #1
   316c8:	mov	r0, #65536	; 0x10000
   316cc:	bl	13f9c <calloc@plt>
   316d0:	subs	r3, r0, #0
   316d4:	beq	32844 <__flatcc_fb_parse@@Base+0x2c60>
   316d8:	ldr	r2, [sl, #48]	; 0x30
   316dc:	add	r1, r3, #16
   316e0:	str	r2, [r3]
   316e4:	add	r2, r3, #65536	; 0x10000
   316e8:	str	r3, [sl, #48]	; 0x30
   316ec:	str	r2, [sl, #44]	; 0x2c
   316f0:	add	r3, r3, #144	; 0x90
   316f4:	b	31380 <__flatcc_fb_parse@@Base+0x179c>
   316f8:	mov	r1, #1
   316fc:	mov	r0, #65536	; 0x10000
   31700:	bl	13f9c <calloc@plt>
   31704:	subs	r3, r0, #0
   31708:	beq	32844 <__flatcc_fb_parse@@Base+0x2c60>
   3170c:	ldr	r2, [sl, #48]	; 0x30
   31710:	add	r5, r3, #16
   31714:	str	r2, [r3]
   31718:	add	r2, r3, #65536	; 0x10000
   3171c:	str	r3, [sl, #48]	; 0x30
   31720:	str	r2, [sl, #44]	; 0x2c
   31724:	add	r3, r3, #144	; 0x90
   31728:	b	30ec8 <__flatcc_fb_parse@@Base+0x12e4>
   3172c:	mov	r1, #1
   31730:	mov	r0, #65536	; 0x10000
   31734:	bl	13f9c <calloc@plt>
   31738:	subs	r3, r0, #0
   3173c:	beq	32844 <__flatcc_fb_parse@@Base+0x2c60>
   31740:	ldr	r2, [sl, #48]	; 0x30
   31744:	add	r4, r3, #16
   31748:	str	r2, [r3]
   3174c:	add	r2, r3, #65536	; 0x10000
   31750:	str	r3, [sl, #48]	; 0x30
   31754:	str	r2, [sl, #44]	; 0x2c
   31758:	add	r3, r3, #48	; 0x30
   3175c:	b	30e20 <__flatcc_fb_parse@@Base+0x123c>
   31760:	mov	r1, #1
   31764:	mov	r0, #65536	; 0x10000
   31768:	bl	13f9c <calloc@plt>
   3176c:	subs	r3, r0, #0
   31770:	beq	32844 <__flatcc_fb_parse@@Base+0x2c60>
   31774:	ldr	r2, [sl, #48]	; 0x30
   31778:	add	r6, r3, #16
   3177c:	str	r2, [r3]
   31780:	add	r2, r3, #65536	; 0x10000
   31784:	str	r3, [sl, #48]	; 0x30
   31788:	str	r2, [sl, #44]	; 0x2c
   3178c:	add	r3, r3, #144	; 0x90
   31790:	b	310e8 <__flatcc_fb_parse@@Base+0x1504>
   31794:	ldr	r3, [r1, #16]
   31798:	add	r3, r3, #996	; 0x3e4
   3179c:	cmp	r3, #21
   317a0:	bhi	30f4c <__flatcc_fb_parse@@Base+0x1368>
   317a4:	mov	r0, #1
   317a8:	ldr	r2, [pc, #-2824]	; 30ca8 <__flatcc_fb_parse@@Base+0x10c4>
   317ac:	ands	r3, r2, r0, lsl r3
   317b0:	beq	30f4c <__flatcc_fb_parse@@Base+0x1368>
   317b4:	ldr	r2, [pc, #-2832]	; 30cac <__flatcc_fb_parse@@Base+0x10c8>
   317b8:	str	r4, [sp, #4]
   317bc:	str	r4, [sp]
   317c0:	mov	r3, r4
   317c4:	add	r2, pc, r2
   317c8:	mov	r0, sl
   317cc:	bl	2e224 <__flatcc_error_report@@Base>
   317d0:	b	30f4c <__flatcc_fb_parse@@Base+0x1368>
   317d4:	mov	r0, sl
   317d8:	bl	2df84 <__flatcc_fb_default_error_out@@Base+0xe4>
   317dc:	ldr	r6, [sl, #40]	; 0x28
   317e0:	ldr	r2, [r6, #16]
   317e4:	b	30244 <__flatcc_fb_parse@@Base+0x660>
   317e8:	ldr	r2, [sl, #364]	; 0x16c
   317ec:	ldr	r3, [sl, #360]	; 0x168
   317f0:	ldr	r1, [sl, #40]	; 0x28
   317f4:	str	r2, [sp, #4]
   317f8:	ldr	r2, [pc, #-2896]	; 30cb0 <__flatcc_fb_parse@@Base+0x10cc>
   317fc:	str	r3, [sp]
   31800:	add	r2, pc, r2
   31804:	mov	r3, #0
   31808:	mov	r0, sl
   3180c:	bl	2e224 <__flatcc_error_report@@Base>
   31810:	b	30924 <__flatcc_fb_parse@@Base+0xd40>
   31814:	ldr	r2, [pc, #-2920]	; 30cb4 <__flatcc_fb_parse@@Base+0x10d0>
   31818:	mov	r3, #0
   3181c:	str	r3, [sp, #4]
   31820:	str	r3, [sp]
   31824:	add	r2, pc, r2
   31828:	b	30dec <__flatcc_fb_parse@@Base+0x1208>
   3182c:	ldr	r2, [pc, #-2940]	; 30cb8 <__flatcc_fb_parse@@Base+0x10d4>
   31830:	str	r4, [sp, #4]
   31834:	str	r4, [sp]
   31838:	mov	r1, r6
   3183c:	mov	r3, r4
   31840:	add	r2, pc, r2
   31844:	mov	r0, sl
   31848:	bl	2e224 <__flatcc_error_report@@Base>
   3184c:	str	r4, [r5, #4]
   31850:	b	31088 <__flatcc_fb_parse@@Base+0x14a4>
   31854:	ldr	r2, [pc, #-2976]	; 30cbc <__flatcc_fb_parse@@Base+0x10d8>
   31858:	mov	r3, #0
   3185c:	str	r3, [sp, #4]
   31860:	str	r3, [sp]
   31864:	add	r2, pc, r2
   31868:	b	30dec <__flatcc_fb_parse@@Base+0x1208>
   3186c:	ldr	r2, [pc, #-2996]	; 30cc0 <__flatcc_fb_parse@@Base+0x10dc>
   31870:	str	r5, [sp, #4]
   31874:	str	r5, [sp]
   31878:	mov	r1, r4
   3187c:	mov	r3, r5
   31880:	add	r2, pc, r2
   31884:	mov	r0, sl
   31888:	bl	2e224 <__flatcc_error_report@@Base>
   3188c:	str	r5, [r6, #4]
   31890:	b	312d8 <__flatcc_fb_parse@@Base+0x16f4>
   31894:	ldr	r2, [pc, #-3032]	; 30cc4 <__flatcc_fb_parse@@Base+0x10e0>
   31898:	mov	r3, #0
   3189c:	mov	r1, r5
   318a0:	str	r3, [sp, #4]
   318a4:	str	r3, [sp]
   318a8:	add	r2, pc, r2
   318ac:	mov	r0, sl
   318b0:	bl	2e224 <__flatcc_error_report@@Base>
   318b4:	b	30e7c <__flatcc_fb_parse@@Base+0x1298>
   318b8:	add	r3, r5, #2
   318bc:	mov	r2, r4
   318c0:	mov	r1, #22
   318c4:	mov	r0, sl
   318c8:	mov	r4, r3
   318cc:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   318d0:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   318d4:	ldr	r2, [pc, #-3092]	; 30cc8 <__flatcc_fb_parse@@Base+0x10e4>
   318d8:	mov	r3, #0
   318dc:	ldr	r1, [sp, #32]
   318e0:	str	r3, [sp, #4]
   318e4:	str	r3, [sp]
   318e8:	add	r2, pc, r2
   318ec:	mov	r0, sl
   318f0:	bl	2e224 <__flatcc_error_report@@Base>
   318f4:	b	31088 <__flatcc_fb_parse@@Base+0x14a4>
   318f8:	ldr	r9, [sp, #36]	; 0x24
   318fc:	ldr	r2, [pc, #-3128]	; 30ccc <__flatcc_fb_parse@@Base+0x10e8>
   31900:	mov	r3, #0
   31904:	mov	r1, r7
   31908:	str	r3, [sp, #4]
   3190c:	str	r3, [sp]
   31910:	add	r2, pc, r2
   31914:	mov	r0, sl
   31918:	bl	2e224 <__flatcc_error_report@@Base>
   3191c:	b	312d8 <__flatcc_fb_parse@@Base+0x16f4>
   31920:	ldr	r2, [pc, #-3160]	; 30cd0 <__flatcc_fb_parse@@Base+0x10ec>
   31924:	str	r5, [sp, #4]
   31928:	str	r5, [sp]
   3192c:	mov	r3, r5
   31930:	ldr	r1, [sp, #32]
   31934:	add	r2, pc, r2
   31938:	mov	r0, sl
   3193c:	bl	2e224 <__flatcc_error_report@@Base>
   31940:	b	312d8 <__flatcc_fb_parse@@Base+0x16f4>
   31944:	ldr	r2, [pc, #-3192]	; 30cd4 <__flatcc_fb_parse@@Base+0x10f0>
   31948:	mov	r3, #0
   3194c:	str	r3, [sp, #4]
   31950:	str	r3, [sp]
   31954:	add	r2, pc, r2
   31958:	mov	r0, sl
   3195c:	bl	2e224 <__flatcc_error_report@@Base>
   31960:	b	308a8 <__flatcc_fb_parse@@Base+0xcc4>
   31964:	mov	r3, r7
   31968:	mov	r2, r4
   3196c:	mov	r0, sl
   31970:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   31974:	b	30214 <__flatcc_fb_parse@@Base+0x630>
   31978:	ldr	r2, [pc, #-3240]	; 30cd8 <__flatcc_fb_parse@@Base+0x10f4>
   3197c:	cmp	r3, r2
   31980:	beq	32370 <__flatcc_fb_parse@@Base+0x278c>
   31984:	bhi	31ae0 <__flatcc_fb_parse@@Base+0x1efc>
   31988:	ldr	r2, [pc, #-3252]	; 30cdc <__flatcc_fb_parse@@Base+0x10f8>
   3198c:	cmp	r3, r2
   31990:	beq	324c0 <__flatcc_fb_parse@@Base+0x28dc>
   31994:	bls	32160 <__flatcc_fb_parse@@Base+0x257c>
   31998:	ldr	r2, [pc, #-3264]	; 30ce0 <__flatcc_fb_parse@@Base+0x10fc>
   3199c:	cmp	r3, r2
   319a0:	beq	32514 <__flatcc_fb_parse@@Base+0x2930>
   319a4:	bls	324e4 <__flatcc_fb_parse@@Base+0x2900>
   319a8:	ldr	r2, [pc, #-3276]	; 30ce4 <__flatcc_fb_parse@@Base+0x1100>
   319ac:	cmp	r3, r2
   319b0:	beq	32438 <__flatcc_fb_parse@@Base+0x2854>
   319b4:	add	r2, r2, #16711680	; 0xff0000
   319b8:	add	r2, r2, #768	; 0x300
   319bc:	cmp	r3, r2
   319c0:	bne	32188 <__flatcc_fb_parse@@Base+0x25a4>
   319c4:	ldr	r0, [pc, #-3300]	; 30ce8 <__flatcc_fb_parse@@Base+0x1104>
   319c8:	mov	r2, #4
   319cc:	mov	r1, r4
   319d0:	add	r0, pc, r0
   319d4:	bl	13ff0 <memcmp@plt>
   319d8:	cmp	r0, #0
   319dc:	movne	r0, #9
   319e0:	mvneq	r0, #996	; 0x3e4
   319e4:	mov	r2, r4
   319e8:	mov	r1, r0
   319ec:	mov	r3, r5
   319f0:	mov	r0, sl
   319f4:	mov	r4, r5
   319f8:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   319fc:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   31a00:	mov	r4, r7
   31a04:	b	2fc68 <__flatcc_fb_parse@@Base+0x84>
   31a08:	and	r1, r1, #223	; 0xdf
   31a0c:	cmp	r1, #69	; 0x45
   31a10:	bne	3014c <__flatcc_fb_parse@@Base+0x568>
   31a14:	b	315b0 <__flatcc_fb_parse@@Base+0x19cc>
   31a18:	mov	r1, #1
   31a1c:	mov	r0, #65536	; 0x10000
   31a20:	bl	13f9c <calloc@plt>
   31a24:	subs	r2, r0, #0
   31a28:	beq	32844 <__flatcc_fb_parse@@Base+0x2c60>
   31a2c:	ldr	r3, [sl, #48]	; 0x30
   31a30:	add	r1, r2, #65536	; 0x10000
   31a34:	str	r2, [sl, #48]	; 0x30
   31a38:	str	r3, [r2]
   31a3c:	add	ip, r2, #16
   31a40:	ldr	r3, [r6, #20]
   31a44:	add	r2, r2, #144	; 0x90
   31a48:	str	r1, [sl, #44]	; 0x2c
   31a4c:	b	314d8 <__flatcc_fb_parse@@Base+0x18f4>
   31a50:	ldr	r2, [sl, #380]	; 0x17c
   31a54:	ldr	r3, [sl, #376]	; 0x178
   31a58:	ldr	r1, [sl, #40]	; 0x28
   31a5c:	str	r2, [sp, #4]
   31a60:	ldr	r2, [pc, #-3452]	; 30cec <__flatcc_fb_parse@@Base+0x1108>
   31a64:	str	r3, [sp]
   31a68:	add	r2, pc, r2
   31a6c:	mov	r3, #0
   31a70:	mov	r0, sl
   31a74:	bl	2e224 <__flatcc_error_report@@Base>
   31a78:	b	30d38 <__flatcc_fb_parse@@Base+0x1154>
   31a7c:	mov	r2, r4
   31a80:	mov	r1, #58	; 0x3a
   31a84:	mov	r0, sl
   31a88:	mov	r4, r3
   31a8c:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   31a90:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   31a94:	mov	r2, r4
   31a98:	mov	r1, #62	; 0x3e
   31a9c:	mov	r0, sl
   31aa0:	mov	r4, r3
   31aa4:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   31aa8:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   31aac:	mov	r2, r4
   31ab0:	mov	r1, #43	; 0x2b
   31ab4:	mov	r0, sl
   31ab8:	mov	r4, r3
   31abc:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   31ac0:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   31ac4:	mov	r2, r4
   31ac8:	mov	r3, r5
   31acc:	mov	r1, #42	; 0x2a
   31ad0:	mov	r0, sl
   31ad4:	mov	r4, r5
   31ad8:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   31adc:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   31ae0:	ldr	r2, [pc, #-3576]	; 30cf0 <__flatcc_fb_parse@@Base+0x110c>
   31ae4:	cmp	r3, r2
   31ae8:	beq	322fc <__flatcc_fb_parse@@Base+0x2718>
   31aec:	bls	322b0 <__flatcc_fb_parse@@Base+0x26cc>
   31af0:	ldr	r2, [pc, #-3588]	; 30cf4 <__flatcc_fb_parse@@Base+0x1110>
   31af4:	cmp	r3, r2
   31af8:	beq	32754 <__flatcc_fb_parse@@Base+0x2b70>
   31afc:	bls	32724 <__flatcc_fb_parse@@Base+0x2b40>
   31b00:	ldr	r2, [pc, #-3600]	; 30cf8 <__flatcc_fb_parse@@Base+0x1114>
   31b04:	cmp	r3, r2
   31b08:	beq	323c0 <__flatcc_fb_parse@@Base+0x27dc>
   31b0c:	add	r2, r2, #65024	; 0xfe00
   31b10:	cmp	r3, r2
   31b14:	bne	32188 <__flatcc_fb_parse@@Base+0x25a4>
   31b18:	ldr	r0, [pc, #-3620]	; 30cfc <__flatcc_fb_parse@@Base+0x1118>
   31b1c:	mov	r2, #6
   31b20:	mov	r1, r4
   31b24:	add	r0, pc, r0
   31b28:	bl	13ff0 <memcmp@plt>
   31b2c:	cmp	r0, #0
   31b30:	movne	r0, #9
   31b34:	mvneq	r0, #972	; 0x3cc
   31b38:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   31b3c:	ldr	r2, [pc, #-3652]	; 30d00 <__flatcc_fb_parse@@Base+0x111c>
   31b40:	cmp	r3, r2
   31b44:	beq	32560 <__flatcc_fb_parse@@Base+0x297c>
   31b48:	bls	32264 <__flatcc_fb_parse@@Base+0x2680>
   31b4c:	ldr	r2, [pc, #-3664]	; 30d04 <__flatcc_fb_parse@@Base+0x1120>
   31b50:	cmp	r3, r2
   31b54:	beq	325bc <__flatcc_fb_parse@@Base+0x29d8>
   31b58:	bls	32588 <__flatcc_fb_parse@@Base+0x29a4>
   31b5c:	ldr	r2, [pc, #-3676]	; 30d08 <__flatcc_fb_parse@@Base+0x1124>
   31b60:	cmp	r3, r2
   31b64:	beq	32650 <__flatcc_fb_parse@@Base+0x2a6c>
   31b68:	add	r2, r2, #3584	; 0xe00
   31b6c:	add	r2, r2, #3
   31b70:	cmp	r3, r2
   31b74:	bne	32188 <__flatcc_fb_parse@@Base+0x25a4>
   31b78:	ldr	r0, [pc, #-3700]	; 30d0c <__flatcc_fb_parse@@Base+0x1128>
   31b7c:	mov	r2, #9
   31b80:	mov	r1, r4
   31b84:	add	r0, pc, r0
   31b88:	bl	13ff0 <memcmp@plt>
   31b8c:	ldr	r3, [pc, #-3716]	; 30d10 <__flatcc_fb_parse@@Base+0x112c>
   31b90:	cmp	r0, #0
   31b94:	moveq	r0, r3
   31b98:	movne	r0, #9
   31b9c:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   31ba0:	mov	r2, r4
   31ba4:	mov	r1, #46	; 0x2e
   31ba8:	mov	r0, sl
   31bac:	mov	r4, r3
   31bb0:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   31bb4:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   31bb8:	add	r5, r4, #2
   31bbc:	cmp	r6, r5
   31bc0:	moveq	r3, #0
   31bc4:	beq	31bdc <__flatcc_fb_parse@@Base+0x1ff8>
   31bc8:	ldrb	r3, [r4, #2]
   31bcc:	cmp	r3, #33	; 0x21
   31bd0:	cmpne	r3, #42	; 0x2a
   31bd4:	moveq	r3, #1
   31bd8:	movne	r3, #0
   31bdc:	add	r5, r5, r3
   31be0:	sub	r4, r5, r4
   31be4:	cmp	r4, #3
   31be8:	moveq	r3, #1
   31bec:	movne	r3, #0
   31bf0:	str	r3, [sl, #32]
   31bf4:	beq	32224 <__flatcc_fb_parse@@Base+0x2640>
   31bf8:	ldr	r4, [pc, #-3820]	; 30d14 <__flatcc_fb_parse@@Base+0x1130>
   31bfc:	mov	r8, #7
   31c00:	sub	r2, r5, #1
   31c04:	b	31c0c <__flatcc_fb_parse@@Base+0x2028>
   31c08:	mov	r2, r7
   31c0c:	add	r7, r2, #1
   31c10:	cmp	r6, r7
   31c14:	beq	31cfc <__flatcc_fb_parse@@Base+0x2118>
   31c18:	ldrb	r3, [r2, #1]
   31c1c:	cmp	r3, #127	; 0x7f
   31c20:	cmpne	r3, #31
   31c24:	bls	31d2c <__flatcc_fb_parse@@Base+0x2148>
   31c28:	cmp	r3, #47	; 0x2f
   31c2c:	bne	31c08 <__flatcc_fb_parse@@Base+0x2024>
   31c30:	ldrb	r3, [r7, #-1]
   31c34:	cmp	r3, #42	; 0x2a
   31c38:	bne	31c08 <__flatcc_fb_parse@@Base+0x2024>
   31c3c:	cmp	r5, r2
   31c40:	moveq	r7, r5
   31c44:	beq	31c58 <__flatcc_fb_parse@@Base+0x2074>
   31c48:	ldr	r3, [sl, #32]
   31c4c:	mov	r7, r2
   31c50:	cmp	r3, #0
   31c54:	bne	31d14 <__flatcc_fb_parse@@Base+0x2130>
   31c58:	cmp	r7, r6
   31c5c:	beq	31d74 <__flatcc_fb_parse@@Base+0x2190>
   31c60:	ldrb	r3, [r7]
   31c64:	cmp	r3, #0
   31c68:	beq	31d74 <__flatcc_fb_parse@@Base+0x2190>
   31c6c:	cmp	r3, #10
   31c70:	beq	31d44 <__flatcc_fb_parse@@Base+0x2160>
   31c74:	cmp	r3, #13
   31c78:	beq	31d9c <__flatcc_fb_parse@@Base+0x21b8>
   31c7c:	cmp	r3, #127	; 0x7f
   31c80:	cmpne	r3, #31
   31c84:	movls	r2, #1
   31c88:	movhi	r2, #0
   31c8c:	bhi	31d90 <__flatcc_fb_parse@@Base+0x21ac>
   31c90:	cmp	r3, #9
   31c94:	cmpne	r3, #32
   31c98:	add	r5, r7, #1
   31c9c:	bne	31dbc <__flatcc_fb_parse@@Base+0x21d8>
   31ca0:	ldr	r3, [sl, #32]
   31ca4:	cmp	r3, #0
   31ca8:	beq	31c00 <__flatcc_fb_parse@@Base+0x201c>
   31cac:	mov	r2, r7
   31cb0:	mov	r3, r5
   31cb4:	mov	r1, r4
   31cb8:	mov	r0, sl
   31cbc:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   31cc0:	b	31c00 <__flatcc_fb_parse@@Base+0x201c>
   31cc4:	add	r3, r4, #2
   31cc8:	mov	r2, r4
   31ccc:	ldr	r1, [pc, #-4028]	; 30d18 <__flatcc_fb_parse@@Base+0x1134>
   31cd0:	mov	r0, sl
   31cd4:	mov	r4, r3
   31cd8:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   31cdc:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   31ce0:	add	r3, r4, #2
   31ce4:	mov	r2, r4
   31ce8:	ldr	r1, [pc, #-4052]	; 30d1c <__flatcc_fb_parse@@Base+0x1138>
   31cec:	mov	r0, sl
   31cf0:	mov	r4, r3
   31cf4:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   31cf8:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   31cfc:	cmp	r6, r5
   31d00:	beq	32108 <__flatcc_fb_parse@@Base+0x2524>
   31d04:	ldr	r3, [sl, #32]
   31d08:	cmp	r3, #0
   31d0c:	beq	32108 <__flatcc_fb_parse@@Base+0x2524>
   31d10:	mov	r7, r6
   31d14:	mov	r2, r5
   31d18:	mov	r3, r7
   31d1c:	mov	r1, r4
   31d20:	mov	r0, sl
   31d24:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   31d28:	b	31c58 <__flatcc_fb_parse@@Base+0x2074>
   31d2c:	cmp	r5, r7
   31d30:	beq	31c64 <__flatcc_fb_parse@@Base+0x2080>
   31d34:	ldr	r3, [sl, #32]
   31d38:	cmp	r3, #0
   31d3c:	beq	31c60 <__flatcc_fb_parse@@Base+0x207c>
   31d40:	b	31d14 <__flatcc_fb_parse@@Base+0x2130>
   31d44:	add	r5, r7, #1
   31d48:	cmp	r6, r5
   31d4c:	beq	31d5c <__flatcc_fb_parse@@Base+0x2178>
   31d50:	ldrb	r3, [r7, #1]
   31d54:	cmp	r3, #13
   31d58:	beq	31db4 <__flatcc_fb_parse@@Base+0x21d0>
   31d5c:	ldr	r3, [sl, #64]	; 0x40
   31d60:	str	r5, [sl, #60]	; 0x3c
   31d64:	add	r3, r3, #1
   31d68:	str	r3, [sl, #64]	; 0x40
   31d6c:	b	31c00 <__flatcc_fb_parse@@Base+0x201c>
   31d70:	mov	r7, r4
   31d74:	mov	r3, r7
   31d78:	mov	r2, r7
   31d7c:	mov	r1, #27
   31d80:	mov	r0, sl
   31d84:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   31d88:	mov	r4, r7
   31d8c:	b	30480 <__flatcc_fb_parse@@Base+0x89c>
   31d90:	add	r4, r7, #2
   31d94:	str	r2, [sl, #32]
   31d98:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   31d9c:	add	r5, r7, #1
   31da0:	cmp	r6, r5
   31da4:	beq	31d5c <__flatcc_fb_parse@@Base+0x2178>
   31da8:	ldrb	r3, [r7, #1]
   31dac:	cmp	r3, #10
   31db0:	bne	31d5c <__flatcc_fb_parse@@Base+0x2178>
   31db4:	add	r5, r7, #2
   31db8:	b	31d5c <__flatcc_fb_parse@@Base+0x2178>
   31dbc:	mov	r2, r7
   31dc0:	mov	r3, r5
   31dc4:	mov	r1, r8
   31dc8:	mov	r0, sl
   31dcc:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   31dd0:	b	31c00 <__flatcc_fb_parse@@Base+0x201c>
   31dd4:	add	r3, r4, #2
   31dd8:	mov	r2, r4
   31ddc:	ldr	r1, [pc, #2712]	; 3287c <__flatcc_fb_parse@@Base+0x2c98>
   31de0:	mov	r0, sl
   31de4:	mov	r4, r3
   31de8:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   31dec:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   31df0:	add	r3, r4, #2
   31df4:	cmp	r6, r3
   31df8:	beq	31e08 <__flatcc_fb_parse@@Base+0x2224>
   31dfc:	ldrb	r2, [r4, #2]
   31e00:	cmp	r2, #61	; 0x3d
   31e04:	beq	32634 <__flatcc_fb_parse@@Base+0x2a50>
   31e08:	mov	r2, r4
   31e0c:	ldr	r1, [pc, #2668]	; 32880 <__flatcc_fb_parse@@Base+0x2c9c>
   31e10:	mov	r0, sl
   31e14:	mov	r4, r3
   31e18:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   31e1c:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   31e20:	mov	r2, r4
   31e24:	ldr	r1, [pc, #2648]	; 32884 <__flatcc_fb_parse@@Base+0x2ca0>
   31e28:	mov	r3, r5
   31e2c:	mov	r0, sl
   31e30:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   31e34:	ldrb	r1, [r4, #1]
   31e38:	mov	r4, r5
   31e3c:	b	2fc68 <__flatcc_fb_parse@@Base+0x84>
   31e40:	add	r3, r4, #2
   31e44:	cmp	r6, r3
   31e48:	beq	31e58 <__flatcc_fb_parse@@Base+0x2274>
   31e4c:	ldrb	r2, [r4, #2]
   31e50:	cmp	r2, #46	; 0x2e
   31e54:	beq	324a4 <__flatcc_fb_parse@@Base+0x28c0>
   31e58:	mov	r2, r4
   31e5c:	ldr	r1, [pc, #2596]	; 32888 <__flatcc_fb_parse@@Base+0x2ca4>
   31e60:	mov	r0, sl
   31e64:	mov	r4, r3
   31e68:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   31e6c:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   31e70:	add	r3, r4, #2
   31e74:	mov	r2, r4
   31e78:	ldr	r1, [pc, #2572]	; 3288c <__flatcc_fb_parse@@Base+0x2ca8>
   31e7c:	mov	r0, sl
   31e80:	mov	r4, r3
   31e84:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   31e88:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   31e8c:	add	r3, r4, #2
   31e90:	mov	r2, r4
   31e94:	ldr	r1, [pc, #2548]	; 32890 <__flatcc_fb_parse@@Base+0x2cac>
   31e98:	mov	r0, sl
   31e9c:	mov	r4, r3
   31ea0:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   31ea4:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   31ea8:	mov	r2, r4
   31eac:	mov	r1, #10
   31eb0:	mov	r0, sl
   31eb4:	mov	r4, r3
   31eb8:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   31ebc:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   31ec0:	add	r3, r4, #2
   31ec4:	mov	r2, r4
   31ec8:	ldr	r1, [pc, #2500]	; 32894 <__flatcc_fb_parse@@Base+0x2cb0>
   31ecc:	mov	r0, sl
   31ed0:	mov	r4, r3
   31ed4:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   31ed8:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   31edc:	add	r3, r4, #2
   31ee0:	cmp	r6, r3
   31ee4:	beq	32190 <__flatcc_fb_parse@@Base+0x25ac>
   31ee8:	ldrb	r2, [r4, #2]
   31eec:	cmp	r2, #60	; 0x3c
   31ef0:	beq	321f4 <__flatcc_fb_parse@@Base+0x2610>
   31ef4:	cmp	r2, #61	; 0x3d
   31ef8:	bne	32190 <__flatcc_fb_parse@@Base+0x25ac>
   31efc:	add	r3, r4, #3
   31f00:	mov	r2, r4
   31f04:	ldr	r1, [pc, #2444]	; 32898 <__flatcc_fb_parse@@Base+0x2cb4>
   31f08:	mov	r0, sl
   31f0c:	mov	r4, r3
   31f10:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   31f14:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   31f18:	add	r3, r4, #2
   31f1c:	mov	r2, r4
   31f20:	ldr	r1, [pc, #2420]	; 3289c <__flatcc_fb_parse@@Base+0x2cb8>
   31f24:	mov	r0, sl
   31f28:	mov	r4, r3
   31f2c:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   31f30:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   31f34:	add	r3, r4, #2
   31f38:	mov	r2, r4
   31f3c:	ldr	r1, [pc, #2396]	; 328a0 <__flatcc_fb_parse@@Base+0x2cbc>
   31f40:	mov	r0, sl
   31f44:	mov	r4, r3
   31f48:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   31f4c:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   31f50:	add	r7, r4, #2
   31f54:	cmp	r6, r7
   31f58:	moveq	r3, #0
   31f5c:	beq	31f74 <__flatcc_fb_parse@@Base+0x2390>
   31f60:	ldrb	r3, [r4, #2]
   31f64:	cmp	r3, #33	; 0x21
   31f68:	cmpne	r3, #47	; 0x2f
   31f6c:	moveq	r3, #1
   31f70:	movne	r3, #0
   31f74:	add	r7, r7, r3
   31f78:	sub	r4, r7, r4
   31f7c:	cmp	r4, #3
   31f80:	moveq	r3, #1
   31f84:	movne	r3, #0
   31f88:	str	r3, [sl, #32]
   31f8c:	beq	3224c <__flatcc_fb_parse@@Base+0x2668>
   31f90:	ldr	r8, [pc, #2316]	; 328a4 <__flatcc_fb_parse@@Base+0x2cc0>
   31f94:	mov	r9, #7
   31f98:	sub	r5, r7, #1
   31f9c:	b	31fb4 <__flatcc_fb_parse@@Base+0x23d0>
   31fa0:	ldrb	r3, [r5, #1]
   31fa4:	cmp	r3, #127	; 0x7f
   31fa8:	cmpne	r3, #31
   31fac:	bls	32040 <__flatcc_fb_parse@@Base+0x245c>
   31fb0:	mov	r5, r4
   31fb4:	add	r4, r5, #1
   31fb8:	cmp	r6, r4
   31fbc:	bne	31fa0 <__flatcc_fb_parse@@Base+0x23bc>
   31fc0:	cmp	r6, r7
   31fc4:	beq	31d74 <__flatcc_fb_parse@@Base+0x2190>
   31fc8:	ldr	r3, [sl, #32]
   31fcc:	cmp	r3, #0
   31fd0:	beq	32108 <__flatcc_fb_parse@@Base+0x2524>
   31fd4:	mov	r4, r6
   31fd8:	mov	r2, r7
   31fdc:	mov	r3, r4
   31fe0:	mov	r1, r8
   31fe4:	mov	r0, sl
   31fe8:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   31fec:	cmp	r6, r4
   31ff0:	beq	32108 <__flatcc_fb_parse@@Base+0x2524>
   31ff4:	ldrb	r3, [r4]
   31ff8:	cmp	r3, #0
   31ffc:	beq	31d70 <__flatcc_fb_parse@@Base+0x218c>
   32000:	cmp	r3, #13
   32004:	cmpne	r3, #10
   32008:	beq	32070 <__flatcc_fb_parse@@Base+0x248c>
   3200c:	cmp	r3, #9
   32010:	cmpne	r3, #32
   32014:	add	r7, r5, #2
   32018:	bne	32058 <__flatcc_fb_parse@@Base+0x2474>
   3201c:	ldr	r3, [sl, #32]
   32020:	cmp	r3, #0
   32024:	beq	31f98 <__flatcc_fb_parse@@Base+0x23b4>
   32028:	mov	r2, r4
   3202c:	mov	r3, r7
   32030:	mov	r1, r8
   32034:	mov	r0, sl
   32038:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   3203c:	b	31f98 <__flatcc_fb_parse@@Base+0x23b4>
   32040:	cmp	r7, r4
   32044:	beq	31ff4 <__flatcc_fb_parse@@Base+0x2410>
   32048:	ldr	r3, [sl, #32]
   3204c:	cmp	r3, #0
   32050:	beq	31ff4 <__flatcc_fb_parse@@Base+0x2410>
   32054:	b	31fd8 <__flatcc_fb_parse@@Base+0x23f4>
   32058:	mov	r2, r4
   3205c:	mov	r3, r7
   32060:	mov	r1, r9
   32064:	mov	r0, sl
   32068:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   3206c:	b	31f98 <__flatcc_fb_parse@@Base+0x23b4>
   32070:	mov	r3, #0
   32074:	str	r3, [sl, #32]
   32078:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   3207c:	add	r3, r4, #2
   32080:	mov	r2, r4
   32084:	ldr	r1, [pc, #2076]	; 328a8 <__flatcc_fb_parse@@Base+0x2cc4>
   32088:	mov	r0, sl
   3208c:	mov	r4, r3
   32090:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   32094:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   32098:	mov	r2, r4
   3209c:	mov	r3, r5
   320a0:	mov	r1, #5
   320a4:	mov	r0, sl
   320a8:	mov	r4, r5
   320ac:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   320b0:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   320b4:	ldrb	r1, [r5]
   320b8:	mov	r5, r2
   320bc:	b	305c8 <__flatcc_fb_parse@@Base+0x9e4>
   320c0:	add	r1, sp, #40	; 0x28
   320c4:	mov	r0, sl
   320c8:	bl	2e41c <__flatcc_error_report@@Base+0x1f8>
   320cc:	ldr	r2, [pc, #2008]	; 328ac <__flatcc_fb_parse@@Base+0x2cc8>
   320d0:	mov	r3, r5
   320d4:	add	r2, pc, r2
   320d8:	mov	r1, #59	; 0x3b
   320dc:	mov	r0, sl
   320e0:	bl	2e564 <__flatcc_error_report@@Base+0x340>
   320e4:	ldr	r5, [sp, #40]	; 0x28
   320e8:	mov	r2, #0
   320ec:	mov	r1, r5
   320f0:	ldr	r0, [sl, #412]	; 0x19c
   320f4:	bl	2d13c <fb_scope_table_find@@Base>
   320f8:	cmp	r0, #0
   320fc:	beq	32800 <__flatcc_fb_parse@@Base+0x2c1c>
   32100:	str	r0, [sl, #544]	; 0x220
   32104:	b	308a8 <__flatcc_fb_parse@@Base+0xcc4>
   32108:	mov	r7, r6
   3210c:	b	31d74 <__flatcc_fb_parse@@Base+0x2190>
   32110:	add	r3, r4, #2
   32114:	mov	r2, r4
   32118:	orr	r1, r1, #15616	; 0x3d00
   3211c:	mov	r0, sl
   32120:	mov	r4, r3
   32124:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   32128:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   3212c:	mov	r2, r4
   32130:	ldr	r1, [pc, #1912]	; 328b0 <__flatcc_fb_parse@@Base+0x2ccc>
   32134:	mov	r0, sl
   32138:	mov	r4, r3
   3213c:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   32140:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   32144:	add	r3, r4, #3
   32148:	mov	r2, r4
   3214c:	ldr	r1, [pc, #1888]	; 328b4 <__flatcc_fb_parse@@Base+0x2cd0>
   32150:	mov	r0, sl
   32154:	mov	r4, r3
   32158:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   3215c:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   32160:	ldr	r2, [pc, #1872]	; 328b8 <__flatcc_fb_parse@@Base+0x2cd4>
   32164:	cmp	r3, r2
   32168:	beq	32410 <__flatcc_fb_parse@@Base+0x282c>
   3216c:	add	r2, r2, #327680	; 0x50000
   32170:	add	r2, r2, #251	; 0xfb
   32174:	cmp	r3, r2
   32178:	beq	3260c <__flatcc_fb_parse@@Base+0x2a28>
   3217c:	ldr	r2, [pc, #1848]	; 328bc <__flatcc_fb_parse@@Base+0x2cd8>
   32180:	cmp	r3, r2
   32184:	beq	325e4 <__flatcc_fb_parse@@Base+0x2a00>
   32188:	mov	r0, #9
   3218c:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   32190:	mov	r2, r4
   32194:	ldr	r1, [pc, #1828]	; 328c0 <__flatcc_fb_parse@@Base+0x2cdc>
   32198:	mov	r0, sl
   3219c:	mov	r4, r3
   321a0:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   321a4:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   321a8:	ldr	r2, [pc, #1812]	; 328c4 <__flatcc_fb_parse@@Base+0x2ce0>
   321ac:	cmp	r3, r2
   321b0:	beq	326fc <__flatcc_fb_parse@@Base+0x2b18>
   321b4:	ldr	r2, [pc, #1804]	; 328c8 <__flatcc_fb_parse@@Base+0x2ce4>
   321b8:	cmp	r3, r2
   321bc:	beq	326d4 <__flatcc_fb_parse@@Base+0x2af0>
   321c0:	ldr	r2, [pc, #1796]	; 328cc <__flatcc_fb_parse@@Base+0x2ce8>
   321c4:	cmp	r3, r2
   321c8:	bne	32188 <__flatcc_fb_parse@@Base+0x25a4>
   321cc:	ldr	r0, [pc, #1788]	; 328d0 <__flatcc_fb_parse@@Base+0x2cec>
   321d0:	mov	r2, #6
   321d4:	mov	r1, r4
   321d8:	add	r0, pc, r0
   321dc:	bl	13ff0 <memcmp@plt>
   321e0:	ldr	r3, [pc, #1772]	; 328d4 <__flatcc_fb_parse@@Base+0x2cf0>
   321e4:	cmp	r0, #0
   321e8:	moveq	r0, r3
   321ec:	movne	r0, #9
   321f0:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   321f4:	add	r3, r4, #3
   321f8:	cmp	r6, r3
   321fc:	beq	3220c <__flatcc_fb_parse@@Base+0x2628>
   32200:	ldrb	r2, [r4, #3]
   32204:	cmp	r2, #61	; 0x3d
   32208:	beq	327e4 <__flatcc_fb_parse@@Base+0x2c00>
   3220c:	mov	r2, r4
   32210:	ldr	r1, [pc, #1728]	; 328d8 <__flatcc_fb_parse@@Base+0x2cf4>
   32214:	mov	r0, sl
   32218:	mov	r4, r3
   3221c:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   32220:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   32224:	mov	r3, r5
   32228:	mov	r2, r5
   3222c:	ldr	r1, [pc, #1648]	; 328a4 <__flatcc_fb_parse@@Base+0x2cc0>
   32230:	mov	r0, sl
   32234:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   32238:	b	31bf8 <__flatcc_fb_parse@@Base+0x2014>
   3223c:	mov	r4, r6
   32240:	b	2ffd0 <__flatcc_fb_parse@@Base+0x3ec>
   32244:	mov	r7, r6
   32248:	b	30494 <__flatcc_fb_parse@@Base+0x8b0>
   3224c:	mov	r3, r7
   32250:	mov	r2, r7
   32254:	ldr	r1, [pc, #1608]	; 328a4 <__flatcc_fb_parse@@Base+0x2cc0>
   32258:	mov	r0, sl
   3225c:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   32260:	b	31f90 <__flatcc_fb_parse@@Base+0x23ac>
   32264:	sub	r2, r2, #3584	; 0xe00
   32268:	cmp	r3, r2
   3226c:	beq	327a0 <__flatcc_fb_parse@@Base+0x2bbc>
   32270:	add	r2, r2, #2048	; 0x800
   32274:	add	r2, r2, #4
   32278:	cmp	r3, r2
   3227c:	beq	3277c <__flatcc_fb_parse@@Base+0x2b98>
   32280:	ldr	r2, [pc, #1620]	; 328dc <__flatcc_fb_parse@@Base+0x2cf8>
   32284:	cmp	r3, r2
   32288:	bne	32188 <__flatcc_fb_parse@@Base+0x25a4>
   3228c:	ldr	r0, [pc, #1612]	; 328e0 <__flatcc_fb_parse@@Base+0x2cfc>
   32290:	mov	r2, #4
   32294:	mov	r1, r4
   32298:	add	r0, pc, r0
   3229c:	bl	13ff0 <memcmp@plt>
   322a0:	cmp	r0, #0
   322a4:	movne	r0, #9
   322a8:	mvneq	r0, #992	; 0x3e0
   322ac:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   322b0:	ldr	r2, [pc, #1580]	; 328e4 <__flatcc_fb_parse@@Base+0x2d00>
   322b4:	cmp	r3, r2
   322b8:	beq	3234c <__flatcc_fb_parse@@Base+0x2768>
   322bc:	ldr	r2, [pc, #1572]	; 328e8 <__flatcc_fb_parse@@Base+0x2d04>
   322c0:	cmp	r3, r2
   322c4:	beq	32324 <__flatcc_fb_parse@@Base+0x2740>
   322c8:	ldr	r2, [pc, #1564]	; 328ec <__flatcc_fb_parse@@Base+0x2d08>
   322cc:	cmp	r3, r2
   322d0:	bne	32188 <__flatcc_fb_parse@@Base+0x25a4>
   322d4:	ldr	r0, [pc, #1556]	; 328f0 <__flatcc_fb_parse@@Base+0x2d0c>
   322d8:	mov	r2, #5
   322dc:	mov	r1, r4
   322e0:	add	r0, pc, r0
   322e4:	bl	13ff0 <memcmp@plt>
   322e8:	ldr	r3, [pc, #1540]	; 328f4 <__flatcc_fb_parse@@Base+0x2d10>
   322ec:	cmp	r0, #0
   322f0:	moveq	r0, r3
   322f4:	movne	r0, #9
   322f8:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   322fc:	ldr	r0, [pc, #1524]	; 328f8 <__flatcc_fb_parse@@Base+0x2d14>
   32300:	mov	r2, #4
   32304:	mov	r1, r4
   32308:	add	r0, pc, r0
   3230c:	bl	13ff0 <memcmp@plt>
   32310:	ldr	r3, [pc, #1508]	; 328fc <__flatcc_fb_parse@@Base+0x2d18>
   32314:	cmp	r0, #0
   32318:	moveq	r0, r3
   3231c:	movne	r0, #9
   32320:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   32324:	ldr	r0, [pc, #1492]	; 32900 <__flatcc_fb_parse@@Base+0x2d1c>
   32328:	mov	r2, #5
   3232c:	mov	r1, r4
   32330:	add	r0, pc, r0
   32334:	bl	13ff0 <memcmp@plt>
   32338:	ldr	r3, [pc, #1476]	; 32904 <__flatcc_fb_parse@@Base+0x2d20>
   3233c:	cmp	r0, #0
   32340:	moveq	r0, r3
   32344:	movne	r0, #9
   32348:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   3234c:	ldr	r0, [pc, #1460]	; 32908 <__flatcc_fb_parse@@Base+0x2d24>
   32350:	mov	r2, #15
   32354:	mov	r1, r4
   32358:	add	r0, pc, r0
   3235c:	bl	13ff0 <memcmp@plt>
   32360:	cmp	r0, #0
   32364:	movne	r0, #9
   32368:	mvneq	r0, #964	; 0x3c4
   3236c:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   32370:	ldr	r0, [pc, #1428]	; 3290c <__flatcc_fb_parse@@Base+0x2d28>
   32374:	mov	r2, #14
   32378:	mov	r1, r4
   3237c:	add	r0, pc, r0
   32380:	bl	13ff0 <memcmp@plt>
   32384:	ldr	r3, [pc, #1412]	; 32910 <__flatcc_fb_parse@@Base+0x2d2c>
   32388:	cmp	r0, #0
   3238c:	moveq	r0, r3
   32390:	movne	r0, #9
   32394:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   32398:	ldr	r0, [pc, #1396]	; 32914 <__flatcc_fb_parse@@Base+0x2d30>
   3239c:	mov	r2, #6
   323a0:	mov	r1, r4
   323a4:	add	r0, pc, r0
   323a8:	bl	13ff0 <memcmp@plt>
   323ac:	ldr	r3, [pc, #1380]	; 32918 <__flatcc_fb_parse@@Base+0x2d34>
   323b0:	cmp	r0, #0
   323b4:	moveq	r0, r3
   323b8:	movne	r0, #9
   323bc:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   323c0:	ldr	r0, [pc, #1364]	; 3291c <__flatcc_fb_parse@@Base+0x2d38>
   323c4:	mov	r2, #6
   323c8:	mov	r1, r4
   323cc:	add	r0, pc, r0
   323d0:	bl	13ff0 <memcmp@plt>
   323d4:	ldr	r3, [pc, #1348]	; 32920 <__flatcc_fb_parse@@Base+0x2d3c>
   323d8:	cmp	r0, #0
   323dc:	moveq	r0, r3
   323e0:	movne	r0, #9
   323e4:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   323e8:	ldr	r0, [pc, #1332]	; 32924 <__flatcc_fb_parse@@Base+0x2d40>
   323ec:	mov	r2, #11
   323f0:	mov	r1, r4
   323f4:	add	r0, pc, r0
   323f8:	bl	13ff0 <memcmp@plt>
   323fc:	ldr	r3, [pc, #1316]	; 32928 <__flatcc_fb_parse@@Base+0x2d44>
   32400:	cmp	r0, #0
   32404:	moveq	r0, r3
   32408:	movne	r0, #9
   3240c:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   32410:	ldr	r0, [pc, #1300]	; 3292c <__flatcc_fb_parse@@Base+0x2d48>
   32414:	mov	r2, #9
   32418:	mov	r1, r4
   3241c:	add	r0, pc, r0
   32420:	bl	13ff0 <memcmp@plt>
   32424:	ldr	r3, [pc, #1284]	; 32930 <__flatcc_fb_parse@@Base+0x2d4c>
   32428:	cmp	r0, #0
   3242c:	moveq	r0, r3
   32430:	movne	r0, #9
   32434:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   32438:	ldr	r0, [pc, #1268]	; 32934 <__flatcc_fb_parse@@Base+0x2d50>
   3243c:	mov	r2, #4
   32440:	mov	r1, r4
   32444:	add	r0, pc, r0
   32448:	bl	13ff0 <memcmp@plt>
   3244c:	ldr	r3, [pc, #1252]	; 32938 <__flatcc_fb_parse@@Base+0x2d54>
   32450:	cmp	r0, #0
   32454:	moveq	r0, r3
   32458:	movne	r0, #9
   3245c:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   32460:	add	r3, r4, #3
   32464:	mov	r2, r4
   32468:	ldr	r1, [pc, #1228]	; 3293c <__flatcc_fb_parse@@Base+0x2d58>
   3246c:	mov	r0, sl
   32470:	mov	r4, r3
   32474:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   32478:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   3247c:	ldr	r0, [pc, #1212]	; 32940 <__flatcc_fb_parse@@Base+0x2d5c>
   32480:	mov	r2, #6
   32484:	mov	r1, r4
   32488:	add	r0, pc, r0
   3248c:	bl	13ff0 <memcmp@plt>
   32490:	ldr	r3, [pc, #1196]	; 32944 <__flatcc_fb_parse@@Base+0x2d60>
   32494:	cmp	r0, #0
   32498:	moveq	r0, r3
   3249c:	movne	r0, #9
   324a0:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   324a4:	add	r3, r4, #3
   324a8:	mov	r2, r4
   324ac:	ldr	r1, [pc, #1172]	; 32948 <__flatcc_fb_parse@@Base+0x2d64>
   324b0:	mov	r0, sl
   324b4:	mov	r4, r3
   324b8:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   324bc:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   324c0:	ldr	r0, [pc, #1156]	; 3294c <__flatcc_fb_parse@@Base+0x2d68>
   324c4:	mov	r2, #5
   324c8:	mov	r1, r4
   324cc:	add	r0, pc, r0
   324d0:	bl	13ff0 <memcmp@plt>
   324d4:	cmp	r0, #0
   324d8:	movne	r0, #9
   324dc:	mvneq	r0, #976	; 0x3d0
   324e0:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   324e4:	ldr	r2, [pc, #1124]	; 32950 <__flatcc_fb_parse@@Base+0x2d6c>
   324e8:	cmp	r3, r2
   324ec:	bne	32188 <__flatcc_fb_parse@@Base+0x25a4>
   324f0:	ldr	r0, [pc, #1116]	; 32954 <__flatcc_fb_parse@@Base+0x2d70>
   324f4:	mov	r2, #4
   324f8:	mov	r1, r4
   324fc:	add	r0, pc, r0
   32500:	bl	13ff0 <memcmp@plt>
   32504:	cmp	r0, #0
   32508:	movne	r0, #9
   3250c:	mvneq	r0, #988	; 0x3dc
   32510:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   32514:	ldr	r0, [pc, #1084]	; 32958 <__flatcc_fb_parse@@Base+0x2d74>
   32518:	mov	r2, #6
   3251c:	mov	r1, r4
   32520:	add	r0, pc, r0
   32524:	bl	13ff0 <memcmp@plt>
   32528:	ldr	r3, [pc, #1068]	; 3295c <__flatcc_fb_parse@@Base+0x2d78>
   3252c:	cmp	r0, #0
   32530:	moveq	r0, r3
   32534:	movne	r0, #9
   32538:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   3253c:	ldr	r0, [pc, #1052]	; 32960 <__flatcc_fb_parse@@Base+0x2d7c>
   32540:	mov	r2, #5
   32544:	mov	r1, r4
   32548:	add	r0, pc, r0
   3254c:	bl	13ff0 <memcmp@plt>
   32550:	cmp	r0, #0
   32554:	movne	r0, #9
   32558:	mvneq	r0, #980	; 0x3d4
   3255c:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   32560:	ldr	r0, [pc, #1020]	; 32964 <__flatcc_fb_parse@@Base+0x2d80>
   32564:	mov	r2, #5
   32568:	mov	r1, r4
   3256c:	add	r0, pc, r0
   32570:	bl	13ff0 <memcmp@plt>
   32574:	ldr	r3, [pc, #1004]	; 32968 <__flatcc_fb_parse@@Base+0x2d84>
   32578:	cmp	r0, #0
   3257c:	moveq	r0, r3
   32580:	movne	r0, #9
   32584:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   32588:	ldr	r2, [pc, #988]	; 3296c <__flatcc_fb_parse@@Base+0x2d88>
   3258c:	cmp	r3, r2
   32590:	bne	32188 <__flatcc_fb_parse@@Base+0x25a4>
   32594:	ldr	r0, [pc, #980]	; 32970 <__flatcc_fb_parse@@Base+0x2d8c>
   32598:	mov	r2, #5
   3259c:	mov	r1, r4
   325a0:	add	r0, pc, r0
   325a4:	bl	13ff0 <memcmp@plt>
   325a8:	ldr	r3, [pc, #964]	; 32974 <__flatcc_fb_parse@@Base+0x2d90>
   325ac:	cmp	r0, #0
   325b0:	moveq	r0, r3
   325b4:	movne	r0, #9
   325b8:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   325bc:	ldr	r0, [pc, #948]	; 32978 <__flatcc_fb_parse@@Base+0x2d94>
   325c0:	mov	r2, #7
   325c4:	mov	r1, r4
   325c8:	add	r0, pc, r0
   325cc:	bl	13ff0 <memcmp@plt>
   325d0:	ldr	r3, [pc, #932]	; 3297c <__flatcc_fb_parse@@Base+0x2d98>
   325d4:	cmp	r0, #0
   325d8:	moveq	r0, r3
   325dc:	movne	r0, #9
   325e0:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   325e4:	ldr	r0, [pc, #916]	; 32980 <__flatcc_fb_parse@@Base+0x2d9c>
   325e8:	mov	r2, #4
   325ec:	mov	r1, r4
   325f0:	add	r0, pc, r0
   325f4:	bl	13ff0 <memcmp@plt>
   325f8:	ldr	r3, [pc, #900]	; 32984 <__flatcc_fb_parse@@Base+0x2da0>
   325fc:	cmp	r0, #0
   32600:	moveq	r0, r3
   32604:	movne	r0, #9
   32608:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   3260c:	ldr	r0, [pc, #884]	; 32988 <__flatcc_fb_parse@@Base+0x2da4>
   32610:	mov	r2, #4
   32614:	mov	r1, r4
   32618:	add	r0, pc, r0
   3261c:	bl	13ff0 <memcmp@plt>
   32620:	ldr	r3, [pc, #868]	; 3298c <__flatcc_fb_parse@@Base+0x2da8>
   32624:	cmp	r0, #0
   32628:	moveq	r0, r3
   3262c:	movne	r0, #9
   32630:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   32634:	add	r3, r4, #3
   32638:	mov	r2, r4
   3263c:	ldr	r1, [pc, #844]	; 32990 <__flatcc_fb_parse@@Base+0x2dac>
   32640:	mov	r0, sl
   32644:	mov	r4, r3
   32648:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   3264c:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   32650:	ldr	r0, [pc, #828]	; 32994 <__flatcc_fb_parse@@Base+0x2db0>
   32654:	mov	r2, #6
   32658:	mov	r1, r4
   3265c:	add	r0, pc, r0
   32660:	bl	13ff0 <memcmp@plt>
   32664:	ldr	r3, [pc, #812]	; 32998 <__flatcc_fb_parse@@Base+0x2db4>
   32668:	cmp	r0, #0
   3266c:	moveq	r0, r3
   32670:	movne	r0, #9
   32674:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   32678:	ldr	r2, [pc, #796]	; 3299c <__flatcc_fb_parse@@Base+0x2db8>
   3267c:	cmp	r3, r2
   32680:	bne	32188 <__flatcc_fb_parse@@Base+0x25a4>
   32684:	ldr	r0, [pc, #788]	; 329a0 <__flatcc_fb_parse@@Base+0x2dbc>
   32688:	mov	r2, #7
   3268c:	mov	r1, r4
   32690:	add	r0, pc, r0
   32694:	bl	13ff0 <memcmp@plt>
   32698:	ldr	r3, [pc, #772]	; 329a4 <__flatcc_fb_parse@@Base+0x2dc0>
   3269c:	cmp	r0, #0
   326a0:	moveq	r0, r3
   326a4:	movne	r0, #9
   326a8:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   326ac:	ldr	r0, [pc, #756]	; 329a8 <__flatcc_fb_parse@@Base+0x2dc4>
   326b0:	mov	r2, #5
   326b4:	mov	r1, r4
   326b8:	add	r0, pc, r0
   326bc:	bl	13ff0 <memcmp@plt>
   326c0:	ldr	r3, [pc, #740]	; 329ac <__flatcc_fb_parse@@Base+0x2dc8>
   326c4:	cmp	r0, #0
   326c8:	moveq	r0, r3
   326cc:	movne	r0, #9
   326d0:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   326d4:	ldr	r0, [pc, #724]	; 329b0 <__flatcc_fb_parse@@Base+0x2dcc>
   326d8:	mov	r2, #5
   326dc:	mov	r1, r4
   326e0:	add	r0, pc, r0
   326e4:	bl	13ff0 <memcmp@plt>
   326e8:	ldr	r3, [pc, #708]	; 329b4 <__flatcc_fb_parse@@Base+0x2dd0>
   326ec:	cmp	r0, #0
   326f0:	moveq	r0, r3
   326f4:	movne	r0, #9
   326f8:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   326fc:	ldr	r0, [pc, #692]	; 329b8 <__flatcc_fb_parse@@Base+0x2dd4>
   32700:	mov	r2, #7
   32704:	mov	r1, r4
   32708:	add	r0, pc, r0
   3270c:	bl	13ff0 <memcmp@plt>
   32710:	ldr	r3, [pc, #676]	; 329bc <__flatcc_fb_parse@@Base+0x2dd8>
   32714:	cmp	r0, #0
   32718:	moveq	r0, r3
   3271c:	movne	r0, #9
   32720:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   32724:	ldr	r2, [pc, #660]	; 329c0 <__flatcc_fb_parse@@Base+0x2ddc>
   32728:	cmp	r3, r2
   3272c:	bne	32188 <__flatcc_fb_parse@@Base+0x25a4>
   32730:	ldr	r0, [pc, #652]	; 329c4 <__flatcc_fb_parse@@Base+0x2de0>
   32734:	mov	r2, #5
   32738:	mov	r1, r4
   3273c:	add	r0, pc, r0
   32740:	bl	13ff0 <memcmp@plt>
   32744:	cmp	r0, #0
   32748:	movne	r0, #9
   3274c:	mvneq	r0, #984	; 0x3d8
   32750:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   32754:	ldr	r0, [pc, #620]	; 329c8 <__flatcc_fb_parse@@Base+0x2de4>
   32758:	mov	r2, #3
   3275c:	mov	r1, r4
   32760:	add	r0, pc, r0
   32764:	bl	13ff0 <memcmp@plt>
   32768:	ldr	r3, [pc, #604]	; 329cc <__flatcc_fb_parse@@Base+0x2de8>
   3276c:	cmp	r0, #0
   32770:	moveq	r0, r3
   32774:	movne	r0, #9
   32778:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   3277c:	ldr	r0, [pc, #588]	; 329d0 <__flatcc_fb_parse@@Base+0x2dec>
   32780:	mov	r2, #9
   32784:	mov	r1, r4
   32788:	add	r0, pc, r0
   3278c:	bl	13ff0 <memcmp@plt>
   32790:	cmp	r0, #0
   32794:	movne	r0, #9
   32798:	mvneq	r0, #968	; 0x3c8
   3279c:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   327a0:	ldr	r0, [pc, #556]	; 329d4 <__flatcc_fb_parse@@Base+0x2df0>
   327a4:	mov	r2, #5
   327a8:	mov	r1, r4
   327ac:	add	r0, pc, r0
   327b0:	bl	13ff0 <memcmp@plt>
   327b4:	ldr	r3, [pc, #540]	; 329d8 <__flatcc_fb_parse@@Base+0x2df4>
   327b8:	cmp	r0, #0
   327bc:	moveq	r0, r3
   327c0:	movne	r0, #9
   327c4:	b	319e4 <__flatcc_fb_parse@@Base+0x1e00>
   327c8:	add	r3, r4, #4
   327cc:	mov	r2, r4
   327d0:	ldr	r1, [pc, #516]	; 329dc <__flatcc_fb_parse@@Base+0x2df8>
   327d4:	mov	r0, sl
   327d8:	mov	r4, r3
   327dc:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   327e0:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   327e4:	add	r3, r4, #4
   327e8:	mov	r2, r4
   327ec:	ldr	r1, [pc, #492]	; 329e0 <__flatcc_fb_parse@@Base+0x2dfc>
   327f0:	mov	r0, sl
   327f4:	mov	r4, r3
   327f8:	bl	2ded0 <__flatcc_fb_default_error_out@@Base+0x30>
   327fc:	b	2fc5c <__flatcc_fb_parse@@Base+0x78>
   32800:	ldr	r4, [sl, #52]	; 0x34
   32804:	ldr	r2, [sl, #44]	; 0x2c
   32808:	add	r3, r4, #32
   3280c:	cmp	r3, r2
   32810:	bhi	32848 <__flatcc_fb_parse@@Base+0x2c64>
   32814:	add	r2, sl, #476	; 0x1dc
   32818:	mov	ip, r4
   3281c:	ldm	r2, {r0, r1}
   32820:	str	r3, [sl, #52]	; 0x34
   32824:	mov	r2, #1
   32828:	str	r5, [ip], #20
   3282c:	stm	ip, {r0, r1}
   32830:	mov	r1, r4
   32834:	ldr	r0, [sl, #412]	; 0x19c
   32838:	bl	2d118 <fb_scope_table_insert_item@@Base>
   3283c:	mov	r0, r4
   32840:	b	32100 <__flatcc_fb_parse@@Base+0x251c>
   32844:	bl	141c0 <__assert_fail@plt+0x80>
   32848:	mov	r1, #1
   3284c:	mov	r0, #65536	; 0x10000
   32850:	bl	13f9c <calloc@plt>
   32854:	cmp	r0, #0
   32858:	beq	32844 <__flatcc_fb_parse@@Base+0x2c60>
   3285c:	ldr	r3, [sl, #48]	; 0x30
   32860:	add	r2, r0, #65536	; 0x10000
   32864:	str	r3, [r0]
   32868:	add	r4, r0, #16
   3286c:	str	r0, [sl, #48]	; 0x30
   32870:	add	r3, r0, #48	; 0x30
   32874:	str	r2, [sl, #44]	; 0x2c
   32878:	b	32814 <__flatcc_fb_parse@@Base+0x2c30>
   3287c:	andeq	r2, r0, fp, lsr #22
   32880:	andeq	r3, r0, sl, lsr sl
   32884:	andeq	r2, r0, sl, lsr #20
   32888:	andeq	r2, r0, lr, lsr #28
   3288c:	andeq	r3, r0, lr, lsr sp
   32890:	andeq	r3, r0, ip, ror sp
   32894:	andeq	r3, r0, ip, lsr sp
   32898:	eorseq	r3, sp, ip, lsr ip
   3289c:	andeq	r3, r0, sp, lsr #28
   328a0:	andeq	r3, r0, pc, lsr #26
   328a4:			; <UNDEFINED> instruction: 0xfffffc3c
   328a8:	andeq	r3, r0, sp, lsr #26
   328ac:	andeq	r6, r2, r0, ror #2
   328b0:	andeq	r3, r0, lr, lsr lr
   328b4:	eorseq	r3, sp, lr, lsr lr
   328b8:	ldrbvs	r6, [r4, #-313]!	; 0xfffffec7
   328bc:	ldrbvs	r7, [r2, #-1076]!	; 0xfffffbcc
   328c0:	andeq	r3, r0, ip, lsr ip
   328c4:	rsbcc	r6, ip, #57671680	; 0x3700000
   328c8:	rsbcc	r6, lr, #868352	; 0xd4000
   328cc:	rsbcc	r7, r9, #226492416	; 0xd800000
   328d0:	strdeq	lr, [r0], -r8
   328d4:			; <UNDEFINED> instruction: 0xfffffc2d
   328d8:	eorseq	r3, ip, ip, lsr ip
   328dc:	stmdacc	lr!, {r2, r4, r5, r8, fp, sp, lr}^
   328e0:	andeq	lr, r0, r8, ror #30
   328e4:	rsbvc	r6, r9, #66060288	; 0x3f00000
   328e8:	strbtvc	r7, [r8], #-821	; 0xfffffccb
   328ec:	mcrvs	5, 3, r7, cr14, cr5, {1}
   328f0:	andeq	r5, r2, r8, lsr lr
   328f4:			; <UNDEFINED> instruction: 0xfffffc30
   328f8:	strdeq	r5, [r2], -r8
   328fc:			; <UNDEFINED> instruction: 0xfffffc25
   32900:	strdeq	r5, [r2], -r0
   32904:			; <UNDEFINED> instruction: 0xfffffc28
   32908:	andeq	r5, r2, r4, lsr #28
   3290c:	strdeq	r5, [r2], -r0
   32910:			; <UNDEFINED> instruction: 0xfffffc3a
   32914:	andeq	lr, r0, r4, lsr lr
   32918:			; <UNDEFINED> instruction: 0xfffffc2c
   3291c:	andeq	r5, r2, ip, asr sp
   32920:			; <UNDEFINED> instruction: 0xfffffc34
   32924:	andeq	r5, r2, ip, ror #26
   32928:			; <UNDEFINED> instruction: 0xfffffc39
   3292c:	andeq	r5, r2, ip, lsr #26
   32930:			; <UNDEFINED> instruction: 0xfffffc36
   32934:	andeq	r7, r2, r4, asr #1
   32938:			; <UNDEFINED> instruction: 0xfffffc19
   3293c:	eorseq	r3, sp, sp, lsr sp
   32940:	andeq	lr, r0, r0, asr #26
   32944:			; <UNDEFINED> instruction: 0xfffffc2e
   32948:	eoreq	r2, lr, lr, lsr #28
   3294c:	andeq	r5, r2, r4, asr #24
   32950:			; <UNDEFINED> instruction: 0x676f6c34
   32954:	strdeq	r5, [r2], -ip
   32958:	andeq	r5, r2, r8, asr #15
   3295c:			; <UNDEFINED> instruction: 0xfffffc32
   32960:	muleq	r0, r8, ip
   32964:	ldrdeq	r7, [r2], -r4
   32968:			; <UNDEFINED> instruction: 0xfffffc29
   3296c:	strbvs	r7, [r2, #-1333]!	; 0xfffffacb
   32970:	andeq	r5, r2, r4, asr #22
   32974:			; <UNDEFINED> instruction: 0xfffffc2a
   32978:	andeq	r5, r2, r8, ror fp
   3297c:			; <UNDEFINED> instruction: 0xfffffc35
   32980:	andeq	r7, r2, r4, asr #2
   32984:			; <UNDEFINED> instruction: 0xfffffc24
   32988:	ldrdeq	r5, [r2], -r8
   3298c:			; <UNDEFINED> instruction: 0xfffffc1a
   32990:	eorseq	r3, sp, sl, lsr sl
   32994:	andeq	lr, r0, r8, lsr r7
   32998:			; <UNDEFINED> instruction: 0xfffffc31
   3299c:	strbtcc	r6, [ip], #-1591	; 0xfffff9c9
   329a0:	andeq	r5, r2, r8, lsr #21
   329a4:			; <UNDEFINED> instruction: 0xfffffc1d
   329a8:	andeq	lr, r0, r0, lsr fp
   329ac:			; <UNDEFINED> instruction: 0xfffffc22
   329b0:	andeq	lr, r0, r0, lsl fp
   329b4:			; <UNDEFINED> instruction: 0xfffffc21
   329b8:	andeq	r5, r2, r8, lsr #20
   329bc:			; <UNDEFINED> instruction: 0xfffffc1c
   329c0:	strbtvc	r6, [ip], #-1589	; 0xfffff9cb
   329c4:	andeq	lr, r0, r0, asr r6
   329c8:	andeq	r5, r2, ip, lsl #19
   329cc:			; <UNDEFINED> instruction: 0xfffffc1e
   329d0:	andeq	sp, r0, r0, asr #24
   329d4:	andeq	r5, r2, ip, asr r9
   329d8:			; <UNDEFINED> instruction: 0xfffffc26
   329dc:	ldccc	14, cr3, [lr, #-248]!	; 0xffffff08
   329e0:	ldccc	12, cr3, [ip, #-240]!	; 0xffffff10

000329e4 <__flatcc_fb_clear_parser@@Base>:
   329e4:	push	{r4, r5, r6, lr}
   329e8:	mov	r5, r0
   329ec:	ldr	r4, [r0, #392]	; 0x188
   329f0:	cmp	r4, #0
   329f4:	bne	32a08 <__flatcc_fb_clear_parser@@Base+0x24>
   329f8:	b	32a30 <__flatcc_fb_clear_parser@@Base+0x4c>
   329fc:	ldr	r4, [r4]
   32a00:	cmp	r4, #0
   32a04:	beq	32a30 <__flatcc_fb_clear_parser@@Base+0x4c>
   32a08:	ldrh	r3, [r4, #8]
   32a0c:	cmp	r3, #4
   32a10:	bhi	329fc <__flatcc_fb_clear_parser@@Base+0x18>
   32a14:	add	r0, r4, #56	; 0x38
   32a18:	bl	2c0f4 <fb_symbol_table_clear@@Base>
   32a1c:	add	r0, r4, #72	; 0x48
   32a20:	bl	3e6ac <fb_value_set_clear@@Base>
   32a24:	ldr	r4, [r4]
   32a28:	cmp	r4, #0
   32a2c:	bne	32a08 <__flatcc_fb_clear_parser@@Base+0x24>
   32a30:	add	r0, r5, #448	; 0x1c0
   32a34:	bl	2d730 <fb_schema_table_clear@@Base>
   32a38:	add	r0, r5, #432	; 0x1b0
   32a3c:	bl	3df5c <fb_name_table_clear@@Base>
   32a40:	add	r0, r5, #524	; 0x20c
   32a44:	bl	2ba24 <ptr_set_clear@@Base>
   32a48:	ldr	r0, [r5, #112]	; 0x70
   32a4c:	cmp	r0, #0
   32a50:	beq	32a58 <__flatcc_fb_clear_parser@@Base+0x74>
   32a54:	bl	13fcc <free@plt>
   32a58:	ldr	r0, [r5, #20]
   32a5c:	cmp	r0, #0
   32a60:	beq	32a68 <__flatcc_fb_clear_parser@@Base+0x84>
   32a64:	bl	13fcc <free@plt>
   32a68:	ldr	r0, [r5, #512]	; 0x200
   32a6c:	cmp	r0, #0
   32a70:	beq	32a78 <__flatcc_fb_clear_parser@@Base+0x94>
   32a74:	bl	13fcc <free@plt>
   32a78:	ldr	r0, [r5, #516]	; 0x204
   32a7c:	cmp	r0, #0
   32a80:	beq	32a88 <__flatcc_fb_clear_parser@@Base+0xa4>
   32a84:	bl	13fcc <free@plt>
   32a88:	ldr	r0, [r5, #520]	; 0x208
   32a8c:	cmp	r0, #0
   32a90:	beq	32a98 <__flatcc_fb_clear_parser@@Base+0xb4>
   32a94:	bl	13fcc <free@plt>
   32a98:	ldr	r0, [r5, #548]	; 0x224
   32a9c:	cmp	r0, #0
   32aa0:	beq	32aa8 <__flatcc_fb_clear_parser@@Base+0xc4>
   32aa4:	bl	13fcc <free@plt>
   32aa8:	ldr	r1, [pc, #76]	; 32afc <__flatcc_fb_clear_parser@@Base+0x118>
   32aac:	add	r0, r5, #416	; 0x1a0
   32ab0:	mov	r2, #0
   32ab4:	add	r1, pc, r1
   32ab8:	bl	2d050 <fb_scope_table_destroy@@Base>
   32abc:	ldr	r0, [r5, #48]	; 0x30
   32ac0:	cmp	r0, #0
   32ac4:	beq	32ad8 <__flatcc_fb_clear_parser@@Base+0xf4>
   32ac8:	ldr	r4, [r0]
   32acc:	bl	13fcc <free@plt>
   32ad0:	subs	r0, r4, #0
   32ad4:	bne	32ac8 <__flatcc_fb_clear_parser@@Base+0xe4>
   32ad8:	ldr	r0, [r5, #16]
   32adc:	cmp	r0, #0
   32ae0:	beq	32ae8 <__flatcc_fb_clear_parser@@Base+0x104>
   32ae4:	bl	13fcc <free@plt>
   32ae8:	mov	r0, r5
   32aec:	mov	r2, #560	; 0x230
   32af0:	mov	r1, #0
   32af4:	pop	{r4, r5, r6, lr}
   32af8:	b	140a4 <memset@plt>
   32afc:			; <UNDEFINED> instruction: 0xffffb40c
   32b00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32b04:	sub	sp, sp, #28
   32b08:	ldrh	fp, [r1, #8]
   32b0c:	cmp	fp, #1
   32b10:	bne	32fac <__flatcc_fb_clear_parser@@Base+0x5c8>
   32b14:	ldrh	r3, [r1, #10]
   32b18:	mov	sl, r0
   32b1c:	mov	r5, r1
   32b20:	ands	r0, r3, #1
   32b24:	bne	32fd0 <__flatcc_fb_clear_parser@@Base+0x5ec>
   32b28:	tst	r3, #2
   32b2c:	bne	32bc4 <__flatcc_fb_clear_parser@@Base+0x1e0>
   32b30:	ldr	r1, [r1, #120]	; 0x78
   32b34:	cmp	r1, #0
   32b38:	bne	32ff4 <__flatcc_fb_clear_parser@@Base+0x610>
   32b3c:	ldr	r4, [r5, #20]
   32b40:	orr	r3, r3, #1
   32b44:	cmp	r4, #0
   32b48:	strh	r3, [r5, #10]
   32b4c:	beq	32e48 <__flatcc_fb_clear_parser@@Base+0x464>
   32b50:	ldr	r2, [sl, #116]	; 0x74
   32b54:	cmp	r2, #99	; 0x63
   32b58:	bgt	32dfc <__flatcc_fb_clear_parser@@Base+0x418>
   32b5c:	ldr	r3, [pc, #1204]	; 33018 <__flatcc_fb_clear_parser@@Base+0x634>
   32b60:	str	r1, [sp, #8]
   32b64:	add	r3, pc, r3
   32b68:	str	r3, [sp, #16]
   32b6c:	ldr	r3, [pc, #1192]	; 3301c <__flatcc_fb_clear_parser@@Base+0x638>
   32b70:	add	r3, pc, r3
   32b74:	str	r3, [sp, #20]
   32b78:	ldr	r3, [pc, #1184]	; 33020 <__flatcc_fb_clear_parser@@Base+0x63c>
   32b7c:	add	r3, pc, r3
   32b80:	str	r3, [sp, #12]
   32b84:	ldrh	r3, [r4, #24]
   32b88:	cmp	r3, #8
   32b8c:	beq	32c6c <__flatcc_fb_clear_parser@@Base+0x288>
   32b90:	cmp	r3, #14
   32b94:	beq	32bd8 <__flatcc_fb_clear_parser@@Base+0x1f4>
   32b98:	cmp	r3, #1
   32b9c:	beq	32bcc <__flatcc_fb_clear_parser@@Base+0x1e8>
   32ba0:	ldr	r2, [pc, #1148]	; 33024 <__flatcc_fb_clear_parser@@Base+0x640>
   32ba4:	mov	r3, #0
   32ba8:	ldr	r1, [r4, #4]
   32bac:	mov	r0, sl
   32bb0:	str	r3, [sp, #4]
   32bb4:	str	r3, [sp]
   32bb8:	add	r2, pc, r2
   32bbc:	bl	2e224 <__flatcc_error_report@@Base>
   32bc0:	mvn	r0, #0
   32bc4:	add	sp, sp, #28
   32bc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32bcc:	mvn	r0, #0
   32bd0:	add	sp, sp, #28
   32bd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32bd8:	ldr	r6, [r4, #16]
   32bdc:	ldrh	r3, [r6, #8]
   32be0:	cmp	r3, #3
   32be4:	beq	32cec <__flatcc_fb_clear_parser@@Base+0x308>
   32be8:	cmp	r3, #1
   32bec:	bne	32f58 <__flatcc_fb_clear_parser@@Base+0x574>
   32bf0:	ldrh	r3, [r6, #10]
   32bf4:	tst	r3, #1
   32bf8:	bne	32f2c <__flatcc_fb_clear_parser@@Base+0x548>
   32bfc:	ands	r0, r3, #2
   32c00:	bne	32c38 <__flatcc_fb_clear_parser@@Base+0x254>
   32c04:	ldr	r3, [sl, #188]	; 0xbc
   32c08:	cmp	r3, #0
   32c0c:	bne	32e24 <__flatcc_fb_clear_parser@@Base+0x440>
   32c10:	add	r2, r2, #1
   32c14:	str	r2, [sl, #116]	; 0x74
   32c18:	mov	r1, r6
   32c1c:	mov	r0, sl
   32c20:	bl	32b00 <__flatcc_fb_clear_parser@@Base+0x11c>
   32c24:	ldr	r3, [sl, #116]	; 0x74
   32c28:	sub	r3, r3, #1
   32c2c:	str	r3, [sl, #116]	; 0x74
   32c30:	cmp	r0, #0
   32c34:	bne	32bc4 <__flatcc_fb_clear_parser@@Base+0x1e0>
   32c38:	ldrh	ip, [r6, #104]	; 0x68
   32c3c:	ldrd	r2, [r6, #112]	; 0x70
   32c40:	strh	ip, [r4, #74]	; 0x4a
   32c44:	strd	r2, [r4, #88]	; 0x58
   32c48:	uxth	r2, ip
   32c4c:	subs	r0, r2, #1
   32c50:	mov	r3, #0
   32c54:	sbc	r1, r3, #0
   32c58:	cmp	r1, #0
   32c5c:	cmpeq	r0, #255	; 0xff
   32c60:	ldrd	r8, [r5, #112]	; 0x70
   32c64:	bls	32d08 <__flatcc_fb_clear_parser@@Base+0x324>
   32c68:	bl	14200 <__assert_fail@plt+0xc0>
   32c6c:	ldr	r3, [r4, #16]
   32c70:	ldr	r2, [r3, #16]
   32c74:	add	r2, r2, #996	; 0x3e4
   32c78:	add	r2, r2, #3
   32c7c:	cmp	r2, #27
   32c80:	bls	32cb4 <__flatcc_fb_clear_parser@@Base+0x2d0>
   32c84:	mov	r2, #0
   32c88:	str	r2, [r4, #16]
   32c8c:	mov	r2, #0
   32c90:	ldr	r1, [r4, #4]
   32c94:	str	r2, [sp, #4]
   32c98:	str	r2, [sp]
   32c9c:	ldr	r2, [pc, #900]	; 33028 <__flatcc_fb_clear_parser@@Base+0x644>
   32ca0:	mov	r0, sl
   32ca4:	add	r2, pc, r2
   32ca8:	bl	2e224 <__flatcc_error_report@@Base>
   32cac:	mvn	r0, #0
   32cb0:	b	32bc4 <__flatcc_fb_clear_parser@@Base+0x1e0>
   32cb4:	ldr	r1, [sp, #16]
   32cb8:	add	r2, r1, r2, lsl #2
   32cbc:	ldr	r2, [r2, #28]
   32cc0:	str	r2, [r4, #16]
   32cc4:	add	r2, r1, r2, lsl #2
   32cc8:	ldr	r2, [r2, #140]	; 0x8c
   32ccc:	cmp	r2, #0
   32cd0:	beq	32c8c <__flatcc_fb_clear_parser@@Base+0x2a8>
   32cd4:	ldr	r3, [sp, #8]
   32cd8:	uxth	ip, r2
   32cdc:	str	r2, [r4, #88]	; 0x58
   32ce0:	strh	ip, [r4, #74]	; 0x4a
   32ce4:	str	r3, [r4, #92]	; 0x5c
   32ce8:	b	32c48 <__flatcc_fb_clear_parser@@Base+0x264>
   32cec:	ldr	ip, [r6, #112]	; 0x70
   32cf0:	ldr	r3, [r6, #116]	; 0x74
   32cf4:	str	ip, [r4, #88]	; 0x58
   32cf8:	uxth	ip, ip
   32cfc:	strh	ip, [r4, #74]	; 0x4a
   32d00:	str	r3, [r4, #92]	; 0x5c
   32d04:	b	32c48 <__flatcc_fb_clear_parser@@Base+0x264>
   32d08:	cmp	r3, #0
   32d0c:	cmpeq	r2, #1
   32d10:	beq	32d40 <__flatcc_fb_clear_parser@@Base+0x35c>
   32d14:	mov	r0, #2
   32d18:	mov	r1, #0
   32d1c:	b	32d34 <__flatcc_fb_clear_parser@@Base+0x350>
   32d20:	adds	r0, r0, r0
   32d24:	adc	r1, r1, r1
   32d28:	cmp	r3, r1
   32d2c:	cmpeq	r2, r0
   32d30:	bcc	32c68 <__flatcc_fb_clear_parser@@Base+0x284>
   32d34:	cmp	r3, r1
   32d38:	cmpeq	r2, r0
   32d3c:	bne	32d20 <__flatcc_fb_clear_parser@@Base+0x33c>
   32d40:	subs	r0, r8, #1
   32d44:	sbc	r1, r9, #0
   32d48:	adds	r0, r0, r2
   32d4c:	adc	r1, r1, r3
   32d50:	rsbs	r2, r2, #0
   32d54:	rsc	r3, r3, #0
   32d58:	and	r3, r3, r1
   32d5c:	and	r2, r2, r0
   32d60:	cmp	r9, r3
   32d64:	cmpeq	r8, r2
   32d68:	strd	r2, [r4, #80]	; 0x50
   32d6c:	bhi	32f04 <__flatcc_fb_clear_parser@@Base+0x520>
   32d70:	ldrd	r6, [r4, #88]	; 0x58
   32d74:	adds	r6, r6, r2
   32d78:	adc	r7, r7, r3
   32d7c:	cmp	r7, r3
   32d80:	cmpeq	r6, r2
   32d84:	bcc	32f04 <__flatcc_fb_clear_parser@@Base+0x520>
   32d88:	cmp	r9, r7
   32d8c:	cmpeq	r8, r6
   32d90:	ldr	r0, [pc, #660]	; 3302c <__flatcc_fb_clear_parser@@Base+0x648>
   32d94:	mov	r1, #0
   32d98:	movhi	r3, #1
   32d9c:	movls	r3, #0
   32da0:	cmp	r7, r1
   32da4:	cmpeq	r6, r0
   32da8:	orrhi	r3, r3, #1
   32dac:	cmp	r3, #0
   32db0:	beq	32dd8 <__flatcc_fb_clear_parser@@Base+0x3f4>
   32db4:	ldr	r2, [sp, #8]
   32db8:	ldr	r1, [r4, #4]
   32dbc:	mov	r3, #0
   32dc0:	str	r2, [sp, #4]
   32dc4:	str	r2, [sp]
   32dc8:	mov	r0, sl
   32dcc:	ldr	r2, [sp, #12]
   32dd0:	bl	2e224 <__flatcc_error_report@@Base>
   32dd4:	ldrh	ip, [r4, #74]	; 0x4a
   32dd8:	ldr	r4, [r4]
   32ddc:	cmp	ip, fp
   32de0:	movcs	fp, ip
   32de4:	cmp	r4, #0
   32de8:	strd	r6, [r5, #112]	; 0x70
   32dec:	beq	32e48 <__flatcc_fb_clear_parser@@Base+0x464>
   32df0:	ldr	r2, [sl, #116]	; 0x74
   32df4:	cmp	r2, #99	; 0x63
   32df8:	ble	32b84 <__flatcc_fb_clear_parser@@Base+0x1a0>
   32dfc:	ldr	r2, [pc, #556]	; 33030 <__flatcc_fb_clear_parser@@Base+0x64c>
   32e00:	mov	r3, #0
   32e04:	mov	r0, sl
   32e08:	str	r3, [sp, #4]
   32e0c:	str	r3, [sp]
   32e10:	mov	r1, r3
   32e14:	add	r2, pc, r2
   32e18:	bl	2e224 <__flatcc_error_report@@Base>
   32e1c:	mvn	r0, #0
   32e20:	b	32bc4 <__flatcc_fb_clear_parser@@Base+0x1e0>
   32e24:	ldr	r3, [r6, #4]
   32e28:	ldr	r1, [r4, #4]
   32e2c:	ldr	r2, [sp, #20]
   32e30:	str	r0, [sp, #4]
   32e34:	str	r0, [sp]
   32e38:	mov	r0, sl
   32e3c:	bl	2e224 <__flatcc_error_report@@Base>
   32e40:	ldr	r2, [sl, #116]	; 0x74
   32e44:	b	32c10 <__flatcc_fb_clear_parser@@Base+0x22c>
   32e48:	ldrh	r2, [r5, #104]	; 0x68
   32e4c:	cmp	r2, #0
   32e50:	moveq	r2, fp
   32e54:	strheq	fp, [r5, #104]	; 0x68
   32e58:	beq	32e64 <__flatcc_fb_clear_parser@@Base+0x480>
   32e5c:	cmp	r2, fp
   32e60:	bcc	32f80 <__flatcc_fb_clear_parser@@Base+0x59c>
   32e64:	uxth	r2, r2
   32e68:	subs	r0, r2, #1
   32e6c:	mov	r3, #0
   32e70:	sbc	r1, r3, #0
   32e74:	cmp	r1, #0
   32e78:	cmpeq	r0, #255	; 0xff
   32e7c:	ldrd	r6, [r5, #112]	; 0x70
   32e80:	bhi	32c68 <__flatcc_fb_clear_parser@@Base+0x284>
   32e84:	cmp	r3, #0
   32e88:	cmpeq	r2, #1
   32e8c:	beq	32ebc <__flatcc_fb_clear_parser@@Base+0x4d8>
   32e90:	mov	r0, #2
   32e94:	mov	r1, #0
   32e98:	b	32eb0 <__flatcc_fb_clear_parser@@Base+0x4cc>
   32e9c:	adds	r0, r0, r0
   32ea0:	adc	r1, r1, r1
   32ea4:	cmp	r3, r1
   32ea8:	cmpeq	r2, r0
   32eac:	bcc	32c68 <__flatcc_fb_clear_parser@@Base+0x284>
   32eb0:	cmp	r1, r3
   32eb4:	cmpeq	r0, r2
   32eb8:	bne	32e9c <__flatcc_fb_clear_parser@@Base+0x4b8>
   32ebc:	subs	r0, r6, #1
   32ec0:	ldrh	ip, [r5, #10]
   32ec4:	sbc	r1, r7, #0
   32ec8:	adds	r0, r0, r2
   32ecc:	adc	r1, r1, r3
   32ed0:	rsbs	r2, r2, #0
   32ed4:	rsc	r3, r3, #0
   32ed8:	and	r2, r2, r0
   32edc:	and	r3, r3, r1
   32ee0:	bic	r1, ip, #1
   32ee4:	ldr	ip, [sl, #396]	; 0x18c
   32ee8:	orr	r1, r1, #2
   32eec:	strd	r2, [r5, #112]	; 0x70
   32ef0:	strh	r1, [r5, #10]
   32ef4:	str	ip, [r5, #120]	; 0x78
   32ef8:	mov	r0, #0
   32efc:	str	r5, [sl, #396]	; 0x18c
   32f00:	b	32bc4 <__flatcc_fb_clear_parser@@Base+0x1e0>
   32f04:	ldr	r2, [pc, #296]	; 33034 <__flatcc_fb_clear_parser@@Base+0x650>
   32f08:	mov	r3, #0
   32f0c:	ldr	r1, [r4, #4]
   32f10:	mov	r0, sl
   32f14:	str	r3, [sp, #4]
   32f18:	str	r3, [sp]
   32f1c:	add	r2, pc, r2
   32f20:	bl	2e224 <__flatcc_error_report@@Base>
   32f24:	mvn	r0, #0
   32f28:	b	32bc4 <__flatcc_fb_clear_parser@@Base+0x1e0>
   32f2c:	mov	r2, #0
   32f30:	ldr	r3, [r6, #4]
   32f34:	ldr	r1, [r4, #4]
   32f38:	str	r2, [sp, #4]
   32f3c:	str	r2, [sp]
   32f40:	ldr	r2, [pc, #240]	; 33038 <__flatcc_fb_clear_parser@@Base+0x654>
   32f44:	mov	r0, sl
   32f48:	add	r2, pc, r2
   32f4c:	bl	2e224 <__flatcc_error_report@@Base>
   32f50:	mvn	r0, #0
   32f54:	b	32bc4 <__flatcc_fb_clear_parser@@Base+0x1e0>
   32f58:	ldr	r2, [pc, #220]	; 3303c <__flatcc_fb_clear_parser@@Base+0x658>
   32f5c:	mov	r3, #0
   32f60:	ldr	r1, [r4, #4]
   32f64:	mov	r0, sl
   32f68:	str	r3, [sp, #4]
   32f6c:	str	r3, [sp]
   32f70:	add	r2, pc, r2
   32f74:	bl	2e224 <__flatcc_error_report@@Base>
   32f78:	mvn	r0, #0
   32f7c:	b	32bc4 <__flatcc_fb_clear_parser@@Base+0x1e0>
   32f80:	ldr	r2, [pc, #184]	; 33040 <__flatcc_fb_clear_parser@@Base+0x65c>
   32f84:	mov	r3, #0
   32f88:	ldr	r1, [r5, #4]
   32f8c:	add	r2, pc, r2
   32f90:	str	r3, [sp, #4]
   32f94:	str	r3, [sp]
   32f98:	mov	r0, sl
   32f9c:	bl	2e224 <__flatcc_error_report@@Base>
   32fa0:	strh	fp, [r5, #104]	; 0x68
   32fa4:	mov	r2, fp
   32fa8:	b	32e64 <__flatcc_fb_clear_parser@@Base+0x480>
   32fac:	ldr	r3, [pc, #144]	; 33044 <__flatcc_fb_clear_parser@@Base+0x660>
   32fb0:	ldr	r1, [pc, #144]	; 33048 <__flatcc_fb_clear_parser@@Base+0x664>
   32fb4:	ldr	r0, [pc, #144]	; 3304c <__flatcc_fb_clear_parser@@Base+0x668>
   32fb8:	add	r3, pc, r3
   32fbc:	ldr	r2, [pc, #140]	; 33050 <__flatcc_fb_clear_parser@@Base+0x66c>
   32fc0:	add	r3, r3, #12
   32fc4:	add	r1, pc, r1
   32fc8:	add	r0, pc, r0
   32fcc:	bl	14140 <__assert_fail@plt>
   32fd0:	ldr	r3, [pc, #124]	; 33054 <__flatcc_fb_clear_parser@@Base+0x670>
   32fd4:	ldr	r1, [pc, #124]	; 33058 <__flatcc_fb_clear_parser@@Base+0x674>
   32fd8:	ldr	r0, [pc, #124]	; 3305c <__flatcc_fb_clear_parser@@Base+0x678>
   32fdc:	add	r3, pc, r3
   32fe0:	mov	r2, #504	; 0x1f8
   32fe4:	add	r3, r3, #12
   32fe8:	add	r1, pc, r1
   32fec:	add	r0, pc, r0
   32ff0:	bl	14140 <__assert_fail@plt>
   32ff4:	ldr	r3, [pc, #100]	; 33060 <__flatcc_fb_clear_parser@@Base+0x67c>
   32ff8:	ldr	r1, [pc, #100]	; 33064 <__flatcc_fb_clear_parser@@Base+0x680>
   32ffc:	ldr	r0, [pc, #100]	; 33068 <__flatcc_fb_clear_parser@@Base+0x684>
   33000:	add	r3, pc, r3
   33004:	mov	r2, #508	; 0x1fc
   33008:	add	r3, r3, #12
   3300c:	add	r1, pc, r1
   33010:	add	r0, pc, r0
   33014:	bl	14140 <__assert_fail@plt>
   33018:	andeq	r5, r2, r8, asr fp
   3301c:	ldrdeq	r5, [r2], -r8
   33020:	andeq	r5, r2, r0, asr lr
   33024:	andeq	r5, r2, r0, ror #26
   33028:	andeq	r5, r2, r4, ror ip
   3302c:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   33030:			; <UNDEFINED> instruction: 0x00025ab8
   33034:	muleq	r2, r8, sl
   33038:	andeq	r5, r2, r0, ror #19
   3303c:	andeq	r5, r2, r0, lsr #20
   33040:	andeq	r5, r2, r4, ror sl
   33044:	andeq	r5, r2, r4, lsl #14
   33048:	andeq	r5, r2, ip, asr r8
   3304c:	andeq	lr, r0, r0, asr #4
   33050:	strdeq	r0, [r0], -r6
   33054:	andeq	r5, r2, r0, ror #13
   33058:	andeq	r5, r2, r8, lsr r8
   3305c:	andeq	r5, r2, ip, lsr #17
   33060:			; <UNDEFINED> instruction: 0x000256bc
   33064:	andeq	r5, r2, r4, lsl r8
   33068:			; <UNDEFINED> instruction: 0x000258b0
   3306c:	ldrh	r3, [r1, #8]
   33070:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33074:	sub	sp, sp, #268	; 0x10c
   33078:	cmp	r3, #0
   3307c:	str	r1, [sp, #32]
   33080:	bne	34f5c <__flatcc_fb_clear_parser@@Base+0x2578>
   33084:	ldr	r3, [sp, #32]
   33088:	ldrh	r3, [r3, #48]	; 0x30
   3308c:	cmp	r3, #0
   33090:	str	r3, [sp, #40]	; 0x28
   33094:	bne	34f80 <__flatcc_fb_clear_parser@@Base+0x259c>
   33098:	ldr	r2, [sp, #32]
   3309c:	ldr	r6, [sp, #40]	; 0x28
   330a0:	add	r3, sp, #116	; 0x74
   330a4:	ldr	r4, [r2, #28]
   330a8:	mov	r9, r0
   330ac:	mov	r2, #48	; 0x30
   330b0:	mov	r0, r3
   330b4:	mov	r1, r6
   330b8:	str	r3, [sp, #24]
   330bc:	bl	140a4 <memset@plt>
   330c0:	cmp	r4, #0
   330c4:	beq	347f4 <__flatcc_fb_clear_parser@@Base+0x1e10>
   330c8:	ldr	r2, [pc, #3996]	; 3406c <__flatcc_fb_clear_parser@@Base+0x1688>
   330cc:	ldr	r8, [pc, #3996]	; 34070 <__flatcc_fb_clear_parser@@Base+0x168c>
   330d0:	add	r2, pc, r2
   330d4:	str	r2, [sp, #12]
   330d8:	ldr	r2, [pc, #3988]	; 34074 <__flatcc_fb_clear_parser@@Base+0x1690>
   330dc:	ldr	r7, [pc, #3988]	; 34078 <__flatcc_fb_clear_parser@@Base+0x1694>
   330e0:	ldr	sl, [pc, #3988]	; 3407c <__flatcc_fb_clear_parser@@Base+0x1698>
   330e4:	ldr	fp, [pc, #3988]	; 34080 <__flatcc_fb_clear_parser@@Base+0x169c>
   330e8:	add	r8, pc, r8
   330ec:	add	r2, pc, r2
   330f0:	str	r8, [sp, #28]
   330f4:	add	r7, pc, r7
   330f8:	add	sl, pc, sl
   330fc:	add	fp, pc, fp
   33100:	str	r2, [sp, #16]
   33104:	mov	r5, #100	; 0x64
   33108:	ldr	r8, [sp, #24]
   3310c:	b	33170 <__flatcc_fb_clear_parser@@Base+0x78c>
   33110:	mov	r2, #1
   33114:	ldr	r0, [r8, r3, lsl #2]
   33118:	orr	r6, r6, r2, lsl r3
   3311c:	cmp	r0, #0
   33120:	uxth	r6, r6
   33124:	lsl	r2, r3, #2
   33128:	beq	331cc <__flatcc_fb_clear_parser@@Base+0x7e8>
   3312c:	ldr	r2, [pc, #3920]	; 34084 <__flatcc_fb_clear_parser@@Base+0x16a0>
   33130:	mov	r3, #0
   33134:	ldr	r1, [r4, #4]
   33138:	add	r2, pc, r2
   3313c:	str	r3, [sp, #4]
   33140:	str	r3, [sp]
   33144:	mov	r0, r9
   33148:	bl	2e224 <__flatcc_error_report@@Base>
   3314c:	subs	r5, r5, #1
   33150:	ldr	r4, [r4]
   33154:	movne	r2, #1
   33158:	moveq	r2, #0
   3315c:	cmp	r4, #0
   33160:	moveq	r2, #0
   33164:	andne	r2, r2, #1
   33168:	cmp	r2, #0
   3316c:	beq	3320c <__flatcc_fb_clear_parser@@Base+0x828>
   33170:	ldr	r3, [r4, #4]
   33174:	ldr	r0, [r9, #412]	; 0x19c
   33178:	ldm	r3, {r1, r2}
   3317c:	add	r0, r0, #16
   33180:	bl	3e04c <fb_name_table_find@@Base>
   33184:	cmp	r0, #0
   33188:	beq	33978 <__flatcc_fb_clear_parser@@Base+0xf94>
   3318c:	ldr	r3, [r0, #24]
   33190:	cmp	r3, #0
   33194:	beq	3314c <__flatcc_fb_clear_parser@@Base+0x768>
   33198:	mov	r2, #8
   3319c:	asr	r2, r2, r3
   331a0:	ands	r2, r2, #1
   331a4:	bne	33110 <__flatcc_fb_clear_parser@@Base+0x72c>
   331a8:	ldr	r1, [r4, #4]
   331ac:	mov	r3, r2
   331b0:	str	r2, [sp, #4]
   331b4:	str	r2, [sp]
   331b8:	ldr	r2, [pc, #3784]	; 34088 <__flatcc_fb_clear_parser@@Base+0x16a4>
   331bc:	mov	r0, r9
   331c0:	add	r2, pc, r2
   331c4:	bl	2e224 <__flatcc_error_report@@Base>
   331c8:	b	3314c <__flatcc_fb_clear_parser@@Base+0x768>
   331cc:	add	r2, r7, r2
   331d0:	str	r4, [r8, r3, lsl #2]
   331d4:	ldr	r2, [r2, #204]	; 0xcc
   331d8:	cmp	r2, #0
   331dc:	bne	339b8 <__flatcc_fb_clear_parser@@Base+0xfd4>
   331e0:	ldrh	r3, [r4, #16]
   331e4:	cmp	r3, #0
   331e8:	beq	3314c <__flatcc_fb_clear_parser@@Base+0x768>
   331ec:	ldr	r1, [r4, #4]
   331f0:	mov	r3, r2
   331f4:	str	r2, [sp, #4]
   331f8:	str	r2, [sp]
   331fc:	mov	r0, r9
   33200:	ldr	r2, [sp, #16]
   33204:	bl	2e224 <__flatcc_error_report@@Base>
   33208:	b	3314c <__flatcc_fb_clear_parser@@Base+0x768>
   3320c:	cmp	r4, #0
   33210:	beq	33234 <__flatcc_fb_clear_parser@@Base+0x850>
   33214:	ldr	r1, [r4, #4]
   33218:	mov	r3, r2
   3321c:	str	r2, [sp, #4]
   33220:	str	r2, [sp]
   33224:	ldr	r2, [pc, #3680]	; 3408c <__flatcc_fb_clear_parser@@Base+0x16a8>
   33228:	mov	r0, r9
   3322c:	add	r2, pc, r2
   33230:	bl	2e224 <__flatcc_error_report@@Base>
   33234:	ldr	r2, [sp, #32]
   33238:	ldr	r8, [r2, #20]
   3323c:	strh	r6, [r2, #92]	; 0x5c
   33240:	cmp	r8, #0
   33244:	beq	34a04 <__flatcc_fb_clear_parser@@Base+0x2020>
   33248:	ldr	ip, [pc, #3648]	; 34090 <__flatcc_fb_clear_parser@@Base+0x16ac>
   3324c:	mov	r3, #0
   33250:	add	ip, pc, ip
   33254:	str	ip, [sp, #76]	; 0x4c
   33258:	ldr	ip, [pc, #3636]	; 34094 <__flatcc_fb_clear_parser@@Base+0x16b0>
   3325c:	mov	r0, #0
   33260:	add	ip, pc, ip
   33264:	str	ip, [sp, #80]	; 0x50
   33268:	ldr	ip, [pc, #3624]	; 34098 <__flatcc_fb_clear_parser@@Base+0x16b4>
   3326c:	mov	r1, #0
   33270:	add	ip, pc, ip
   33274:	str	ip, [sp, #84]	; 0x54
   33278:	ldr	ip, [pc, #3612]	; 3409c <__flatcc_fb_clear_parser@@Base+0x16b8>
   3327c:	str	r3, [sp, #72]	; 0x48
   33280:	add	ip, pc, ip
   33284:	str	ip, [sp, #88]	; 0x58
   33288:	ldr	ip, [pc, #3600]	; 340a0 <__flatcc_fb_clear_parser@@Base+0x16bc>
   3328c:	str	r3, [sp, #36]	; 0x24
   33290:	add	ip, pc, ip
   33294:	str	ip, [sp, #92]	; 0x5c
   33298:	ldr	ip, [pc, #3588]	; 340a4 <__flatcc_fb_clear_parser@@Base+0x16c0>
   3329c:	str	r3, [sp, #28]
   332a0:	add	ip, pc, ip
   332a4:	str	r3, [sp, #44]	; 0x2c
   332a8:	add	r3, r2, #56	; 0x38
   332ac:	strd	r0, [sp, #48]	; 0x30
   332b0:	str	ip, [sp, #96]	; 0x60
   332b4:	strd	r0, [sp, #16]
   332b8:	str	r3, [sp, #12]
   332bc:	ldr	sl, [sp, #24]
   332c0:	b	332f4 <__flatcc_fb_clear_parser@@Base+0x910>
   332c4:	mov	r2, #0
   332c8:	ldr	r3, [fp, #4]
   332cc:	ldr	r1, [r8, #4]
   332d0:	str	r2, [sp, #4]
   332d4:	str	r2, [sp]
   332d8:	ldr	r2, [pc, #3528]	; 340a8 <__flatcc_fb_clear_parser@@Base+0x16c4>
   332dc:	mov	r0, r9
   332e0:	add	r2, pc, r2
   332e4:	bl	2e224 <__flatcc_error_report@@Base>
   332e8:	ldr	r8, [r8]
   332ec:	cmp	r8, #0
   332f0:	beq	33898 <__flatcc_fb_clear_parser@@Base+0xeb4>
   332f4:	mov	r2, #1
   332f8:	mov	r1, r8
   332fc:	ldr	r0, [sp, #12]
   33300:	bl	2c1c0 <fb_symbol_table_insert_item@@Base>
   33304:	subs	fp, r0, #0
   33308:	bne	332c4 <__flatcc_fb_clear_parser@@Base+0x8e0>
   3330c:	ldrh	r3, [r8, #8]
   33310:	cmp	r3, #5
   33314:	bne	343fc <__flatcc_fb_clear_parser@@Base+0x1a18>
   33318:	ldrh	r3, [r8, #24]
   3331c:	cmp	r3, #1
   33320:	beq	332e8 <__flatcc_fb_clear_parser@@Base+0x904>
   33324:	sub	r3, r3, #7
   33328:	cmp	r3, #1
   3332c:	bls	3382c <__flatcc_fb_clear_parser@@Base+0xe48>
   33330:	ldr	r4, [r8, #64]	; 0x40
   33334:	mov	r2, #48	; 0x30
   33338:	mov	r1, #0
   3333c:	mov	r0, sl
   33340:	bl	140a4 <memset@plt>
   33344:	cmp	r4, #0
   33348:	beq	342cc <__flatcc_fb_clear_parser@@Base+0x18e8>
   3334c:	ldr	r3, [pc, #3416]	; 340ac <__flatcc_fb_clear_parser@@Base+0x16c8>
   33350:	ldr	r7, [pc, #3416]	; 340b0 <__flatcc_fb_clear_parser@@Base+0x16cc>
   33354:	add	r3, pc, r3
   33358:	str	r3, [sp, #64]	; 0x40
   3335c:	ldr	r3, [pc, #3408]	; 340b4 <__flatcc_fb_clear_parser@@Base+0x16d0>
   33360:	add	r7, pc, r7
   33364:	add	r3, pc, r3
   33368:	str	r3, [sp, #68]	; 0x44
   3336c:	ldr	r3, [pc, #3396]	; 340b8 <__flatcc_fb_clear_parser@@Base+0x16d4>
   33370:	ldr	r6, [sp, #40]	; 0x28
   33374:	add	r3, pc, r3
   33378:	str	r3, [sp, #60]	; 0x3c
   3337c:	ldr	r3, [pc, #3384]	; 340bc <__flatcc_fb_clear_parser@@Base+0x16d8>
   33380:	mov	r5, #100	; 0x64
   33384:	add	r3, pc, r3
   33388:	str	r3, [sp, #56]	; 0x38
   3338c:	ldr	r3, [pc, #3372]	; 340c0 <__flatcc_fb_clear_parser@@Base+0x16dc>
   33390:	add	r3, pc, r3
   33394:	str	r3, [sp, #24]
   33398:	b	333fc <__flatcc_fb_clear_parser@@Base+0xa18>
   3339c:	mov	r3, #1
   333a0:	ldr	r0, [sl, r2, lsl #2]
   333a4:	orr	r6, r6, r3, lsl r2
   333a8:	cmp	r0, #0
   333ac:	uxth	r6, r6
   333b0:	lsl	r3, r2, #2
   333b4:	beq	33458 <__flatcc_fb_clear_parser@@Base+0xa74>
   333b8:	ldr	r2, [pc, #3332]	; 340c4 <__flatcc_fb_clear_parser@@Base+0x16e0>
   333bc:	mov	r3, #0
   333c0:	ldr	r1, [r4, #4]
   333c4:	add	r2, pc, r2
   333c8:	str	r3, [sp, #4]
   333cc:	str	r3, [sp]
   333d0:	mov	r0, r9
   333d4:	bl	2e224 <__flatcc_error_report@@Base>
   333d8:	subs	r5, r5, #1
   333dc:	ldr	r4, [r4]
   333e0:	movne	r2, #1
   333e4:	moveq	r2, #0
   333e8:	cmp	r4, #0
   333ec:	moveq	r2, #0
   333f0:	andne	r2, r2, #1
   333f4:	cmp	r2, #0
   333f8:	beq	33498 <__flatcc_fb_clear_parser@@Base+0xab4>
   333fc:	ldr	r3, [r4, #4]
   33400:	ldr	r0, [r9, #412]	; 0x19c
   33404:	ldm	r3, {r1, r2}
   33408:	add	r0, r0, #16
   3340c:	bl	3e04c <fb_name_table_find@@Base>
   33410:	cmp	r0, #0
   33414:	beq	337b0 <__flatcc_fb_clear_parser@@Base+0xdcc>
   33418:	ldr	r2, [r0, #24]
   3341c:	cmp	r2, #0
   33420:	beq	333d8 <__flatcc_fb_clear_parser@@Base+0x9f4>
   33424:	ldr	r3, [pc, #3228]	; 340c8 <__flatcc_fb_clear_parser@@Base+0x16e4>
   33428:	asr	r3, r3, r2
   3342c:	ands	r0, r3, #1
   33430:	bne	3339c <__flatcc_fb_clear_parser@@Base+0x9b8>
   33434:	ldr	r2, [pc, #3216]	; 340cc <__flatcc_fb_clear_parser@@Base+0x16e8>
   33438:	ldr	r1, [r4, #4]
   3343c:	mov	r3, r0
   33440:	str	r0, [sp, #4]
   33444:	str	r0, [sp]
   33448:	add	r2, pc, r2
   3344c:	mov	r0, r9
   33450:	bl	2e224 <__flatcc_error_report@@Base>
   33454:	b	333d8 <__flatcc_fb_clear_parser@@Base+0x9f4>
   33458:	add	r3, r7, r3
   3345c:	str	r4, [sl, r2, lsl #2]
   33460:	ldr	r2, [r3, #204]	; 0xcc
   33464:	cmp	r2, #0
   33468:	bne	337d4 <__flatcc_fb_clear_parser@@Base+0xdf0>
   3346c:	ldrh	r3, [r4, #16]
   33470:	cmp	r3, #0
   33474:	beq	333d8 <__flatcc_fb_clear_parser@@Base+0x9f4>
   33478:	ldr	r1, [r4, #4]
   3347c:	mov	r3, r2
   33480:	str	r2, [sp, #4]
   33484:	str	r2, [sp]
   33488:	mov	r0, r9
   3348c:	ldr	r2, [sp, #24]
   33490:	bl	2e224 <__flatcc_error_report@@Base>
   33494:	b	333d8 <__flatcc_fb_clear_parser@@Base+0x9f4>
   33498:	cmp	r4, #0
   3349c:	beq	334c0 <__flatcc_fb_clear_parser@@Base+0xadc>
   334a0:	ldr	r1, [r4, #4]
   334a4:	mov	r3, r2
   334a8:	str	r2, [sp, #4]
   334ac:	str	r2, [sp]
   334b0:	ldr	r2, [pc, #3096]	; 340d0 <__flatcc_fb_clear_parser@@Base+0x16ec>
   334b4:	mov	r0, r9
   334b8:	add	r2, pc, r2
   334bc:	bl	2e224 <__flatcc_error_report@@Base>
   334c0:	ldr	r7, [sp, #140]	; 0x8c
   334c4:	strh	r6, [r8, #72]	; 0x48
   334c8:	cmp	r7, #0
   334cc:	beq	33630 <__flatcc_fb_clear_parser@@Base+0xc4c>
   334d0:	ldrh	r3, [r8, #24]
   334d4:	cmp	r3, #7
   334d8:	bne	342a4 <__flatcc_fb_clear_parser@@Base+0x18c0>
   334dc:	ldr	r3, [r8, #16]
   334e0:	cmp	r3, #4
   334e4:	bne	342a4 <__flatcc_fb_clear_parser@@Base+0x18c0>
   334e8:	ldrh	r3, [r7, #16]
   334ec:	cmp	r3, #2
   334f0:	bne	34290 <__flatcc_fb_clear_parser@@Base+0x18ac>
   334f4:	ldr	lr, [r7, #12]
   334f8:	ldr	ip, [r7, #8]
   334fc:	cmp	lr, #0
   33500:	ble	34920 <__flatcc_fb_clear_parser@@Base+0x1f3c>
   33504:	sub	r6, lr, #1
   33508:	mov	r0, r6
   3350c:	ldrb	r3, [ip, r6]
   33510:	cmp	r3, #46	; 0x2e
   33514:	addne	r3, ip, r6
   33518:	movne	r2, r6
   3351c:	bne	33538 <__flatcc_fb_clear_parser@@Base+0xb54>
   33520:	b	34914 <__flatcc_fb_clear_parser@@Base+0x1f30>
   33524:	ldrb	r1, [r3, #-1]!
   33528:	sub	r2, r2, #1
   3352c:	mov	r0, r2
   33530:	cmp	r1, #46	; 0x2e
   33534:	beq	33884 <__flatcc_fb_clear_parser@@Base+0xea0>
   33538:	cmp	r2, #0
   3353c:	bne	33524 <__flatcc_fb_clear_parser@@Base+0xb40>
   33540:	mov	r6, lr
   33544:	str	ip, [sp, #24]
   33548:	ldr	r3, [sp, #32]
   3354c:	ldr	r4, [r3, #12]
   33550:	adds	r3, r4, #0
   33554:	movne	r3, #1
   33558:	cmp	r2, #0
   3355c:	movne	r3, #0
   33560:	cmp	r3, #0
   33564:	addne	r3, r9, #524	; 0x20c
   33568:	strne	r3, [sp, #56]	; 0x38
   3356c:	beq	33938 <__flatcc_fb_clear_parser@@Base+0xf54>
   33570:	mov	r2, r6
   33574:	ldr	r1, [sp, #24]
   33578:	add	r0, r4, #4
   3357c:	bl	2c1e8 <fb_symbol_table_find@@Base>
   33580:	subs	r5, r0, #0
   33584:	beq	33594 <__flatcc_fb_clear_parser@@Base+0xbb0>
   33588:	ldrh	r2, [r5, #8]
   3358c:	cmp	r2, #4
   33590:	bls	33764 <__flatcc_fb_clear_parser@@Base+0xd80>
   33594:	ldr	r2, [r4]
   33598:	cmp	r2, #0
   3359c:	beq	33608 <__flatcc_fb_clear_parser@@Base+0xc24>
   335a0:	mov	r3, #0
   335a4:	ldr	r2, [r2]
   335a8:	add	r3, r3, #1
   335ac:	cmp	r2, #0
   335b0:	bne	335a4 <__flatcc_fb_clear_parser@@Base+0xbc0>
   335b4:	rsb	r5, r3, #1
   335b8:	ldr	r0, [r9, #412]	; 0x19c
   335bc:	b	335e4 <__flatcc_fb_clear_parser@@Base+0xc00>
   335c0:	cmp	r0, #0
   335c4:	beq	335e0 <__flatcc_fb_clear_parser@@Base+0xbfc>
   335c8:	mov	r2, r5
   335cc:	ldr	r1, [r4]
   335d0:	bl	2d13c <fb_scope_table_find@@Base>
   335d4:	cmp	r0, #0
   335d8:	bne	337a8 <__flatcc_fb_clear_parser@@Base+0xdc4>
   335dc:	ldr	r0, [r9, #412]	; 0x19c
   335e0:	add	r5, r5, #1
   335e4:	cmp	r5, #0
   335e8:	bne	335c0 <__flatcc_fb_clear_parser@@Base+0xbdc>
   335ec:	cmp	r0, #0
   335f0:	beq	33608 <__flatcc_fb_clear_parser@@Base+0xc24>
   335f4:	mov	r1, r5
   335f8:	mov	r2, #0
   335fc:	bl	2d13c <fb_scope_table_find@@Base>
   33600:	subs	r4, r0, #0
   33604:	bne	33570 <__flatcc_fb_clear_parser@@Base+0xb8c>
   33608:	ldr	ip, [r7, #8]
   3360c:	ldr	lr, [r7, #12]
   33610:	ldr	r2, [pc, #2748]	; 340d4 <__flatcc_fb_clear_parser@@Base+0x16f0>
   33614:	ldr	r1, [r7, #4]
   33618:	mov	r3, #0
   3361c:	stm	sp, {ip, lr}
   33620:	add	r2, pc, r2
   33624:	mov	r0, r9
   33628:	bl	2e224 <__flatcc_error_report@@Base>
   3362c:	ldrh	r6, [r8, #72]	; 0x48
   33630:	tst	r6, #256	; 0x100
   33634:	beq	33644 <__flatcc_fb_clear_parser@@Base+0xc60>
   33638:	ldrh	r3, [r8, #24]
   3363c:	cmp	r3, #8
   33640:	beq	343d4 <__flatcc_fb_clear_parser@@Base+0x19f0>
   33644:	tst	r6, #1024	; 0x400
   33648:	beq	3367c <__flatcc_fb_clear_parser@@Base+0xc98>
   3364c:	ldrh	r3, [r8, #24]
   33650:	cmp	r3, #7
   33654:	beq	3399c <__flatcc_fb_clear_parser@@Base+0xfb8>
   33658:	ldr	r2, [pc, #2680]	; 340d8 <__flatcc_fb_clear_parser@@Base+0x16f4>
   3365c:	mov	r3, #0
   33660:	ldr	r1, [r8, #4]
   33664:	add	r2, pc, r2
   33668:	str	r3, [sp, #4]
   3366c:	str	r3, [sp]
   33670:	mov	r0, r9
   33674:	bl	2e224 <__flatcc_error_report@@Base>
   33678:	ldrh	r6, [r8, #72]	; 0x48
   3367c:	tst	r6, #2048	; 0x800
   33680:	beq	336b4 <__flatcc_fb_clear_parser@@Base+0xcd0>
   33684:	ldrh	r3, [r8, #24]
   33688:	cmp	r3, #7
   3368c:	beq	338f8 <__flatcc_fb_clear_parser@@Base+0xf14>
   33690:	ldr	r2, [pc, #2628]	; 340dc <__flatcc_fb_clear_parser@@Base+0x16f8>
   33694:	mov	r3, #0
   33698:	ldr	r1, [r8, #4]
   3369c:	add	r2, pc, r2
   336a0:	str	r3, [sp, #4]
   336a4:	str	r3, [sp]
   336a8:	mov	r0, r9
   336ac:	bl	2e224 <__flatcc_error_report@@Base>
   336b0:	ldrh	r6, [r8, #72]	; 0x48
   336b4:	and	r6, r6, #3072	; 0xc00
   336b8:	cmp	r6, #3072	; 0xc00
   336bc:	beq	33914 <__flatcc_fb_clear_parser@@Base+0xf30>
   336c0:	ldr	r3, [sp, #120]	; 0x78
   336c4:	adds	r1, r3, #0
   336c8:	str	r3, [sp, #24]
   336cc:	ldrd	r2, [sp, #16]
   336d0:	movne	r1, #1
   336d4:	str	r1, [sp, #56]	; 0x38
   336d8:	mov	r0, r2
   336dc:	orrs	r3, r0, r3
   336e0:	movne	r3, #0
   336e4:	andeq	r3, r1, #1
   336e8:	cmp	r3, #0
   336ec:	bne	33808 <__flatcc_fb_clear_parser@@Base+0xe24>
   336f0:	ldr	r3, [sp, #28]
   336f4:	cmp	r3, #0
   336f8:	bne	33738 <__flatcc_fb_clear_parser@@Base+0xd54>
   336fc:	ldrd	r2, [r9, #216]	; 0xd8
   33700:	ldrd	r0, [sp, #16]
   33704:	cmp	r3, r1
   33708:	cmpeq	r2, r0
   3370c:	bls	34260 <__flatcc_fb_clear_parser@@Base+0x187c>
   33710:	ldr	r1, [sp, #44]	; 0x2c
   33714:	cmp	r1, #0
   33718:	ldrheq	r2, [sp, #16]
   3371c:	moveq	r3, #0
   33720:	streq	r1, [sp, #28]
   33724:	strdeq	r2, [r8, #96]	; 0x60
   33728:	ldrd	r2, [sp, #16]
   3372c:	adds	r2, r2, #1
   33730:	adc	r3, r3, #0
   33734:	strd	r2, [sp, #16]
   33738:	ldrh	r3, [r8, #24]
   3373c:	sub	r3, r3, #7
   33740:	cmp	r3, #5
   33744:	addls	pc, pc, r3, lsl #2
   33748:	b	33f44 <__flatcc_fb_clear_parser@@Base+0x1560>
   3374c:	b	33c04 <__flatcc_fb_clear_parser@@Base+0x1220>
   33750:	b	33d34 <__flatcc_fb_clear_parser@@Base+0x1350>
   33754:	b	33cfc <__flatcc_fb_clear_parser@@Base+0x1318>
   33758:	b	33da4 <__flatcc_fb_clear_parser@@Base+0x13c0>
   3375c:	b	33afc <__flatcc_fb_clear_parser@@Base+0x1118>
   33760:	b	339f4 <__flatcc_fb_clear_parser@@Base+0x1010>
   33764:	ldr	r1, [r5, #16]
   33768:	ldr	r0, [sp, #56]	; 0x38
   3376c:	bl	2bb18 <ptr_set_find_item@@Base>
   33770:	cmp	r0, #0
   33774:	beq	33594 <__flatcc_fb_clear_parser@@Base+0xbb0>
   33778:	mov	r3, r5
   3377c:	ldrh	r2, [r3, #8]
   33780:	cmp	r2, #0
   33784:	beq	3379c <__flatcc_fb_clear_parser@@Base+0xdb8>
   33788:	ldr	r0, [r9, #176]	; 0xb0
   3378c:	cmp	r0, #0
   33790:	beq	34e84 <__flatcc_fb_clear_parser@@Base+0x24a0>
   33794:	cmp	r2, #1
   33798:	bne	34d1c <__flatcc_fb_clear_parser@@Base+0x2338>
   3379c:	ldrh	r6, [r8, #72]	; 0x48
   337a0:	str	r3, [r8, #104]	; 0x68
   337a4:	b	33630 <__flatcc_fb_clear_parser@@Base+0xc4c>
   337a8:	mov	r4, r0
   337ac:	b	33570 <__flatcc_fb_clear_parser@@Base+0xb8c>
   337b0:	ldr	r2, [pc, #2344]	; 340e0 <__flatcc_fb_clear_parser@@Base+0x16fc>
   337b4:	ldr	r1, [r4, #4]
   337b8:	mov	r3, r0
   337bc:	str	r0, [sp, #4]
   337c0:	str	r0, [sp]
   337c4:	add	r2, pc, r2
   337c8:	mov	r0, r9
   337cc:	bl	2e224 <__flatcc_error_report@@Base>
   337d0:	b	333d8 <__flatcc_fb_clear_parser@@Base+0x9f4>
   337d4:	cmp	r2, #2
   337d8:	bne	33850 <__flatcc_fb_clear_parser@@Base+0xe6c>
   337dc:	ldrh	r3, [r4, #16]
   337e0:	cmp	r3, #2
   337e4:	beq	333d8 <__flatcc_fb_clear_parser@@Base+0x9f4>
   337e8:	ldr	r1, [r4, #4]
   337ec:	mov	r3, r0
   337f0:	str	r0, [sp, #4]
   337f4:	str	r0, [sp]
   337f8:	ldr	r2, [sp, #56]	; 0x38
   337fc:	mov	r0, r9
   33800:	bl	2e224 <__flatcc_error_report@@Base>
   33804:	b	333d8 <__flatcc_fb_clear_parser@@Base+0x9f4>
   33808:	ldr	r3, [r9, #112]	; 0x70
   3380c:	ldr	r2, [r9, #216]	; 0xd8
   33810:	mov	r0, r3
   33814:	mov	r1, #0
   33818:	str	r3, [sp, #72]	; 0x48
   3381c:	bl	140a4 <memset@plt>
   33820:	mov	r3, #1
   33824:	str	r3, [sp, #44]	; 0x2c
   33828:	b	336f0 <__flatcc_fb_clear_parser@@Base+0xd0c>
   3382c:	ldr	r3, [r8, #16]
   33830:	ldr	r3, [r3, #16]
   33834:	add	r3, r3, #996	; 0x3e4
   33838:	add	r3, r3, #3
   3383c:	cmp	r3, #27
   33840:	movhi	r3, fp
   33844:	bls	33db8 <__flatcc_fb_clear_parser@@Base+0x13d4>
   33848:	str	r3, [r8, #16]
   3384c:	b	33330 <__flatcc_fb_clear_parser@@Base+0x94c>
   33850:	cmp	r2, #5
   33854:	bne	345bc <__flatcc_fb_clear_parser@@Base+0x1bd8>
   33858:	ldrh	r3, [r4, #16]
   3385c:	cmp	r3, #5
   33860:	beq	333d8 <__flatcc_fb_clear_parser@@Base+0x9f4>
   33864:	ldr	r1, [r4, #4]
   33868:	mov	r3, r0
   3386c:	str	r0, [sp, #4]
   33870:	str	r0, [sp]
   33874:	ldr	r2, [sp, #60]	; 0x3c
   33878:	mov	r0, r9
   3387c:	bl	2e224 <__flatcc_error_report@@Base>
   33880:	b	333d8 <__flatcc_fb_clear_parser@@Base+0x9f4>
   33884:	sub	r6, r6, r2
   33888:	add	r0, r0, #1
   3388c:	add	r3, ip, r0
   33890:	str	r3, [sp, #24]
   33894:	b	33548 <__flatcc_fb_clear_parser@@Base+0xb64>
   33898:	ldr	ip, [sp, #28]
   3389c:	cmp	ip, #0
   338a0:	beq	33dd0 <__flatcc_fb_clear_parser@@Base+0x13ec>
   338a4:	ldr	r3, [sp, #36]	; 0x24
   338a8:	cmp	r3, #0
   338ac:	beq	34d10 <__flatcc_fb_clear_parser@@Base+0x232c>
   338b0:	ldr	r2, [sp, #32]
   338b4:	ldr	r1, [sp, #36]	; 0x24
   338b8:	ldrh	r3, [r2, #10]
   338bc:	cmp	r1, #1
   338c0:	orr	r3, r3, #8
   338c4:	strh	r3, [r2, #10]
   338c8:	beq	34d10 <__flatcc_fb_clear_parser@@Base+0x232c>
   338cc:	ldr	r3, [r9, #156]	; 0x9c
   338d0:	cmp	r3, #0
   338d4:	movne	r3, #0
   338d8:	strne	r3, [sp, #36]	; 0x24
   338dc:	beq	33ee8 <__flatcc_fb_clear_parser@@Base+0x1504>
   338e0:	ldr	r3, [sp, #28]
   338e4:	cmp	r3, #0
   338e8:	bne	34d10 <__flatcc_fb_clear_parser@@Base+0x232c>
   338ec:	ldr	r0, [sp, #36]	; 0x24
   338f0:	add	sp, sp, #268	; 0x10c
   338f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   338f8:	ldr	r3, [r8, #16]
   338fc:	cmp	r3, #4
   33900:	bne	33690 <__flatcc_fb_clear_parser@@Base+0xcac>
   33904:	ldrh	r6, [r8, #72]	; 0x48
   33908:	and	r6, r6, #3072	; 0xc00
   3390c:	cmp	r6, #3072	; 0xc00
   33910:	bne	336c0 <__flatcc_fb_clear_parser@@Base+0xcdc>
   33914:	ldr	r2, [pc, #1992]	; 340e4 <__flatcc_fb_clear_parser@@Base+0x1700>
   33918:	mov	r3, #0
   3391c:	ldr	r1, [r8, #4]
   33920:	add	r2, pc, r2
   33924:	str	r3, [sp, #4]
   33928:	str	r3, [sp]
   3392c:	mov	r0, r9
   33930:	bl	2e224 <__flatcc_error_report@@Base>
   33934:	b	336c0 <__flatcc_fb_clear_parser@@Base+0xcdc>
   33938:	ldr	r0, [r9, #412]	; 0x19c
   3393c:	cmp	r0, #0
   33940:	beq	33610 <__flatcc_fb_clear_parser@@Base+0xc2c>
   33944:	cmp	r2, #0
   33948:	movne	r1, ip
   3394c:	moveq	r1, #0
   33950:	bl	2d13c <fb_scope_table_find@@Base>
   33954:	cmp	r0, #0
   33958:	beq	33608 <__flatcc_fb_clear_parser@@Base+0xc24>
   3395c:	mov	r2, r6
   33960:	ldr	r1, [sp, #24]
   33964:	add	r0, r0, #4
   33968:	bl	2c1e8 <fb_symbol_table_find@@Base>
   3396c:	subs	r3, r0, #0
   33970:	bne	3377c <__flatcc_fb_clear_parser@@Base+0xd98>
   33974:	b	33608 <__flatcc_fb_clear_parser@@Base+0xc24>
   33978:	ldr	r2, [pc, #1896]	; 340e8 <__flatcc_fb_clear_parser@@Base+0x1704>
   3397c:	ldr	r1, [r4, #4]
   33980:	mov	r3, r0
   33984:	str	r0, [sp, #4]
   33988:	str	r0, [sp]
   3398c:	add	r2, pc, r2
   33990:	mov	r0, r9
   33994:	bl	2e224 <__flatcc_error_report@@Base>
   33998:	b	3314c <__flatcc_fb_clear_parser@@Base+0x768>
   3399c:	ldr	r3, [r8, #16]
   339a0:	cmp	r3, #4
   339a4:	bne	33658 <__flatcc_fb_clear_parser@@Base+0xc74>
   339a8:	tst	r6, #2048	; 0x800
   339ac:	beq	336b4 <__flatcc_fb_clear_parser@@Base+0xcd0>
   339b0:	ldrh	r6, [r8, #72]	; 0x48
   339b4:	b	33908 <__flatcc_fb_clear_parser@@Base+0xf24>
   339b8:	cmp	r2, #2
   339bc:	beq	33f18 <__flatcc_fb_clear_parser@@Base+0x1534>
   339c0:	cmp	r2, #5
   339c4:	bne	34568 <__flatcc_fb_clear_parser@@Base+0x1b84>
   339c8:	ldrh	r3, [r4, #16]
   339cc:	cmp	r3, #5
   339d0:	beq	3314c <__flatcc_fb_clear_parser@@Base+0x768>
   339d4:	ldr	r1, [r4, #4]
   339d8:	mov	r3, r0
   339dc:	str	r0, [sp, #4]
   339e0:	str	r0, [sp]
   339e4:	mov	r2, sl
   339e8:	mov	r0, r9
   339ec:	bl	2e224 <__flatcc_error_report@@Base>
   339f0:	b	3314c <__flatcc_fb_clear_parser@@Base+0x768>
   339f4:	ldr	r1, [r8, #16]
   339f8:	ldr	r3, [sp, #32]
   339fc:	cmp	r1, #0
   33a00:	ldr	r5, [r3, #12]
   33a04:	beq	34334 <__flatcc_fb_clear_parser@@Base+0x1950>
   33a08:	mov	r7, r1
   33a0c:	mov	r2, #0
   33a10:	b	33a1c <__flatcc_fb_clear_parser@@Base+0x1038>
   33a14:	mov	r2, r3
   33a18:	mov	r7, r6
   33a1c:	ldr	r6, [r7]
   33a20:	add	r3, r2, #1
   33a24:	cmp	r6, #0
   33a28:	bne	33a14 <__flatcc_fb_clear_parser@@Base+0x1030>
   33a2c:	adds	r0, r5, #0
   33a30:	movne	r0, #1
   33a34:	cmp	r3, #1
   33a38:	movne	r0, #0
   33a3c:	cmp	r0, #0
   33a40:	beq	342d8 <__flatcc_fb_clear_parser@@Base+0x18f4>
   33a44:	add	r4, r9, #352	; 0x160
   33a48:	add	r3, r9, #524	; 0x20c
   33a4c:	str	r3, [sp, #60]	; 0x3c
   33a50:	ldr	r3, [r7, #4]
   33a54:	add	r0, r5, #4
   33a58:	ldm	r3, {r1, r2}
   33a5c:	bl	2c1e8 <fb_symbol_table_find@@Base>
   33a60:	subs	fp, r0, #0
   33a64:	beq	33a74 <__flatcc_fb_clear_parser@@Base+0x1090>
   33a68:	ldrh	r3, [fp, #8]
   33a6c:	cmp	r3, #4
   33a70:	bls	3402c <__flatcc_fb_clear_parser@@Base+0x1648>
   33a74:	ldr	r3, [r5]
   33a78:	cmp	r3, #0
   33a7c:	beq	34330 <__flatcc_fb_clear_parser@@Base+0x194c>
   33a80:	mov	fp, #0
   33a84:	ldr	r3, [r3]
   33a88:	add	fp, fp, #1
   33a8c:	cmp	r3, #0
   33a90:	bne	33a84 <__flatcc_fb_clear_parser@@Base+0x10a0>
   33a94:	rsb	fp, fp, #1
   33a98:	b	33ac8 <__flatcc_fb_clear_parser@@Base+0x10e4>
   33a9c:	cmp	r4, #0
   33aa0:	beq	33ac4 <__flatcc_fb_clear_parser@@Base+0x10e0>
   33aa4:	ldr	r0, [r9, #412]	; 0x19c
   33aa8:	cmp	r0, #0
   33aac:	beq	33ac4 <__flatcc_fb_clear_parser@@Base+0x10e0>
   33ab0:	mov	r2, fp
   33ab4:	ldr	r1, [r5]
   33ab8:	bl	2d13c <fb_scope_table_find@@Base>
   33abc:	cmp	r0, #0
   33ac0:	bne	34258 <__flatcc_fb_clear_parser@@Base+0x1874>
   33ac4:	add	fp, fp, #1
   33ac8:	cmp	fp, #0
   33acc:	bne	33a9c <__flatcc_fb_clear_parser@@Base+0x10b8>
   33ad0:	cmp	r4, #0
   33ad4:	beq	34330 <__flatcc_fb_clear_parser@@Base+0x194c>
   33ad8:	ldr	r0, [r9, #412]	; 0x19c
   33adc:	cmp	r0, #0
   33ae0:	beq	34330 <__flatcc_fb_clear_parser@@Base+0x194c>
   33ae4:	mov	r1, fp
   33ae8:	mov	r2, #0
   33aec:	bl	2d13c <fb_scope_table_find@@Base>
   33af0:	subs	r5, r0, #0
   33af4:	bne	33a50 <__flatcc_fb_clear_parser@@Base+0x106c>
   33af8:	b	34330 <__flatcc_fb_clear_parser@@Base+0x194c>
   33afc:	ldr	r1, [r8, #16]
   33b00:	ldr	r3, [sp, #32]
   33b04:	cmp	r1, #0
   33b08:	ldr	r5, [r3, #12]
   33b0c:	beq	343b4 <__flatcc_fb_clear_parser@@Base+0x19d0>
   33b10:	mov	r6, r1
   33b14:	mov	r2, #0
   33b18:	b	33b24 <__flatcc_fb_clear_parser@@Base+0x1140>
   33b1c:	mov	r2, r3
   33b20:	mov	r6, r7
   33b24:	ldr	r7, [r6]
   33b28:	add	r3, r2, #1
   33b2c:	cmp	r7, #0
   33b30:	bne	33b1c <__flatcc_fb_clear_parser@@Base+0x1138>
   33b34:	adds	r0, r5, #0
   33b38:	movne	r0, #1
   33b3c:	cmp	r3, #1
   33b40:	movne	r0, #0
   33b44:	cmp	r0, #0
   33b48:	beq	34358 <__flatcc_fb_clear_parser@@Base+0x1974>
   33b4c:	add	r4, r9, #352	; 0x160
   33b50:	add	r3, r9, #524	; 0x20c
   33b54:	str	r3, [sp, #60]	; 0x3c
   33b58:	ldr	r3, [r6, #4]
   33b5c:	add	r0, r5, #4
   33b60:	ldm	r3, {r1, r2}
   33b64:	bl	2c1e8 <fb_symbol_table_find@@Base>
   33b68:	subs	fp, r0, #0
   33b6c:	beq	33b7c <__flatcc_fb_clear_parser@@Base+0x1198>
   33b70:	ldrh	r3, [fp, #8]
   33b74:	cmp	r3, #4
   33b78:	bls	33f70 <__flatcc_fb_clear_parser@@Base+0x158c>
   33b7c:	ldr	r3, [r5]
   33b80:	cmp	r3, #0
   33b84:	beq	343b0 <__flatcc_fb_clear_parser@@Base+0x19cc>
   33b88:	mov	fp, #0
   33b8c:	ldr	r3, [r3]
   33b90:	add	fp, fp, #1
   33b94:	cmp	r3, #0
   33b98:	bne	33b8c <__flatcc_fb_clear_parser@@Base+0x11a8>
   33b9c:	rsb	fp, fp, #1
   33ba0:	b	33bd0 <__flatcc_fb_clear_parser@@Base+0x11ec>
   33ba4:	cmp	r4, #0
   33ba8:	beq	33bcc <__flatcc_fb_clear_parser@@Base+0x11e8>
   33bac:	ldr	r0, [r9, #412]	; 0x19c
   33bb0:	cmp	r0, #0
   33bb4:	beq	33bcc <__flatcc_fb_clear_parser@@Base+0x11e8>
   33bb8:	mov	r2, fp
   33bbc:	ldr	r1, [r5]
   33bc0:	bl	2d13c <fb_scope_table_find@@Base>
   33bc4:	cmp	r0, #0
   33bc8:	bne	34250 <__flatcc_fb_clear_parser@@Base+0x186c>
   33bcc:	add	fp, fp, #1
   33bd0:	cmp	fp, #0
   33bd4:	bne	33ba4 <__flatcc_fb_clear_parser@@Base+0x11c0>
   33bd8:	cmp	r4, #0
   33bdc:	beq	343b0 <__flatcc_fb_clear_parser@@Base+0x19cc>
   33be0:	ldr	r0, [r9, #412]	; 0x19c
   33be4:	cmp	r0, #0
   33be8:	beq	343b0 <__flatcc_fb_clear_parser@@Base+0x19cc>
   33bec:	mov	r1, fp
   33bf0:	mov	r2, r7
   33bf4:	bl	2d13c <fb_scope_table_find@@Base>
   33bf8:	subs	r5, r0, #0
   33bfc:	bne	33b58 <__flatcc_fb_clear_parser@@Base+0x1174>
   33c00:	b	343b0 <__flatcc_fb_clear_parser@@Base+0x19cc>
   33c04:	ldr	r2, [r8, #16]
   33c08:	ldr	r3, [pc, #1244]	; 340ec <__flatcc_fb_clear_parser@@Base+0x1708>
   33c0c:	ldrh	r5, [r8, #56]	; 0x38
   33c10:	add	r3, pc, r3
   33c14:	add	r3, r3, r2, lsl #2
   33c18:	mov	r2, #0
   33c1c:	ldr	r3, [r3, #140]	; 0x8c
   33c20:	cmp	r5, r2
   33c24:	str	r3, [r8, #88]	; 0x58
   33c28:	strh	r3, [r8, #74]	; 0x4a
   33c2c:	str	r2, [r8, #92]	; 0x5c
   33c30:	bne	3464c <__flatcc_fb_clear_parser@@Base+0x1c68>
   33c34:	ldr	r3, [sp, #28]
   33c38:	cmp	r3, #0
   33c3c:	bne	33cbc <__flatcc_fb_clear_parser@@Base+0x12d8>
   33c40:	ldr	r3, [sp, #44]	; 0x2c
   33c44:	ldr	r2, [sp, #56]	; 0x38
   33c48:	eor	r3, r3, #1
   33c4c:	ands	r2, r2, r3
   33c50:	bne	34430 <__flatcc_fb_clear_parser@@Base+0x1a4c>
   33c54:	ldr	ip, [sp, #44]	; 0x2c
   33c58:	ldr	r3, [sp, #24]
   33c5c:	cmp	r3, #0
   33c60:	movne	ip, #0
   33c64:	andeq	ip, ip, #1
   33c68:	cmp	ip, #0
   33c6c:	bne	345f4 <__flatcc_fb_clear_parser@@Base+0x1c10>
   33c70:	ldr	r3, [sp, #24]
   33c74:	cmp	r3, #0
   33c78:	beq	346dc <__flatcc_fb_clear_parser@@Base+0x1cf8>
   33c7c:	ldrh	r3, [r3, #16]
   33c80:	cmp	r3, #5
   33c84:	beq	346a8 <__flatcc_fb_clear_parser@@Base+0x1cc4>
   33c88:	cmp	r3, #4
   33c8c:	ldr	r3, [sp, #24]
   33c90:	ldr	r1, [r3, #4]
   33c94:	mov	r3, ip
   33c98:	str	ip, [sp, #4]
   33c9c:	str	ip, [sp]
   33ca0:	beq	345a0 <__flatcc_fb_clear_parser@@Base+0x1bbc>
   33ca4:	ldr	r2, [pc, #1092]	; 340f0 <__flatcc_fb_clear_parser@@Base+0x170c>
   33ca8:	mov	r0, r9
   33cac:	add	r2, pc, r2
   33cb0:	bl	2e224 <__flatcc_error_report@@Base>
   33cb4:	mov	r3, #1
   33cb8:	str	r3, [sp, #28]
   33cbc:	ldrh	r3, [r8, #72]	; 0x48
   33cc0:	tst	r3, #128	; 0x80
   33cc4:	beq	332e8 <__flatcc_fb_clear_parser@@Base+0x904>
   33cc8:	ldr	r3, [sp, #36]	; 0x24
   33ccc:	cmp	r5, #0
   33cd0:	add	r3, r3, #1
   33cd4:	str	r3, [sp, #36]	; 0x24
   33cd8:	bne	332e8 <__flatcc_fb_clear_parser@@Base+0x904>
   33cdc:	mov	r3, #0
   33ce0:	ldr	r1, [r8, #4]
   33ce4:	ldr	r2, [sp, #76]	; 0x4c
   33ce8:	str	r3, [sp, #4]
   33cec:	str	r3, [sp]
   33cf0:	mov	r0, r9
   33cf4:	bl	2e224 <__flatcc_error_report@@Base>
   33cf8:	b	332e8 <__flatcc_fb_clear_parser@@Base+0x904>
   33cfc:	ldrh	r5, [r8, #56]	; 0x38
   33d00:	cmp	r5, #0
   33d04:	beq	33c34 <__flatcc_fb_clear_parser@@Base+0x1250>
   33d08:	ldr	r2, [pc, #996]	; 340f4 <__flatcc_fb_clear_parser@@Base+0x1710>
   33d0c:	mov	r3, #0
   33d10:	ldr	r1, [r8, #4]
   33d14:	add	r2, pc, r2
   33d18:	str	r3, [sp, #4]
   33d1c:	str	r3, [sp]
   33d20:	mov	r0, r9
   33d24:	bl	2e224 <__flatcc_error_report@@Base>
   33d28:	mov	r3, #1
   33d2c:	strh	r3, [r8, #24]
   33d30:	b	332e8 <__flatcc_fb_clear_parser@@Base+0x904>
   33d34:	ldrh	r3, [r8, #56]	; 0x38
   33d38:	cmp	r3, #13
   33d3c:	addne	ip, r8, #48	; 0x30
   33d40:	beq	347fc <__flatcc_fb_clear_parser@@Base+0x1e18>
   33d44:	cmp	r3, #0
   33d48:	bne	33d60 <__flatcc_fb_clear_parser@@Base+0x137c>
   33d4c:	mov	r2, #0
   33d50:	mov	r3, #0
   33d54:	mov	r1, #5
   33d58:	strd	r2, [r8, #48]	; 0x30
   33d5c:	strh	r1, [r8, #56]	; 0x38
   33d60:	mov	r3, ip
   33d64:	ldr	r2, [r8, #16]
   33d68:	mov	r1, r8
   33d6c:	mov	r0, r9
   33d70:	bl	37ab4 <__flatcc_fb_coerce_scalar_type@@Base>
   33d74:	cmp	r0, #0
   33d78:	bne	33f64 <__flatcc_fb_clear_parser@@Base+0x1580>
   33d7c:	ldr	r2, [r8, #16]
   33d80:	ldr	r3, [pc, #880]	; 340f8 <__flatcc_fb_clear_parser@@Base+0x1714>
   33d84:	str	r0, [r8, #92]	; 0x5c
   33d88:	add	r3, pc, r3
   33d8c:	add	r3, r3, r2, lsl #2
   33d90:	mov	r5, #1
   33d94:	ldr	r3, [r3, #140]	; 0x8c
   33d98:	str	r3, [r8, #88]	; 0x58
   33d9c:	strh	r3, [r8, #74]	; 0x4a
   33da0:	b	33c34 <__flatcc_fb_clear_parser@@Base+0x1250>
   33da4:	ldrh	r3, [r8, #56]	; 0x38
   33da8:	cmp	r3, #0
   33dac:	bne	34620 <__flatcc_fb_clear_parser@@Base+0x1c3c>
   33db0:	ldr	r5, [r9, #164]	; 0xa4
   33db4:	b	33c34 <__flatcc_fb_clear_parser@@Base+0x1250>
   33db8:	ldr	r2, [pc, #828]	; 340fc <__flatcc_fb_clear_parser@@Base+0x1718>
   33dbc:	add	r2, pc, r2
   33dc0:	add	r3, r2, r3, lsl #2
   33dc4:	ldr	r3, [r3, #28]
   33dc8:	str	r3, [r8, #16]
   33dcc:	b	33330 <__flatcc_fb_clear_parser@@Base+0x94c>
   33dd0:	ldrd	r0, [sp, #16]
   33dd4:	ldr	r3, [sp, #44]	; 0x2c
   33dd8:	ldr	lr, [sp, #32]
   33ddc:	cmp	r3, #0
   33de0:	mov	r2, r0
   33de4:	mov	r3, r1
   33de8:	strd	r2, [lr, #96]	; 0x60
   33dec:	beq	34f28 <__flatcc_fb_clear_parser@@Base+0x2544>
   33df0:	ldrd	r4, [sp, #48]	; 0x30
   33df4:	mov	r3, r0
   33df8:	orrs	r3, r3, r1
   33dfc:	movne	r3, #1
   33e00:	moveq	r3, #0
   33e04:	cmp	r1, r5
   33e08:	cmpeq	r0, r4
   33e0c:	movhi	r3, #0
   33e10:	andls	r3, r3, #1
   33e14:	cmp	r3, #0
   33e18:	beq	34460 <__flatcc_fb_clear_parser@@Base+0x1a7c>
   33e1c:	orrs	r3, r4, r5
   33e20:	beq	33eac <__flatcc_fb_clear_parser@@Base+0x14c8>
   33e24:	ldr	fp, [pc, #724]	; 34100 <__flatcc_fb_clear_parser@@Base+0x171c>
   33e28:	ldr	r4, [sp, #72]	; 0x48
   33e2c:	add	fp, pc, fp
   33e30:	mov	r3, #10
   33e34:	mov	r6, #0
   33e38:	mov	r7, #0
   33e3c:	add	r8, sp, #164	; 0xa4
   33e40:	str	ip, [sp, #12]
   33e44:	ldrb	r5, [r4], #1
   33e48:	cmp	r5, #0
   33e4c:	bne	33e94 <__flatcc_fb_clear_parser@@Base+0x14b0>
   33e50:	cmp	r3, #0
   33e54:	sub	sl, r3, #1
   33e58:	beq	34948 <__flatcc_fb_clear_parser@@Base+0x1f64>
   33e5c:	mov	r2, r6
   33e60:	mov	r3, r7
   33e64:	mov	r1, fp
   33e68:	mov	r0, r8
   33e6c:	bl	140f8 <sprintf@plt>
   33e70:	ldr	r3, [sp, #32]
   33e74:	mov	r2, r8
   33e78:	mov	r0, r9
   33e7c:	ldr	r1, [r3, #4]
   33e80:	ldr	r3, [sp, #12]
   33e84:	str	r5, [sp, #4]
   33e88:	str	r5, [sp]
   33e8c:	bl	2e224 <__flatcc_error_report@@Base>
   33e90:	mov	r3, sl
   33e94:	ldrd	r0, [sp, #48]	; 0x30
   33e98:	adds	r6, r6, #1
   33e9c:	adc	r7, r7, #0
   33ea0:	cmp	r1, r7
   33ea4:	cmpeq	r0, r6
   33ea8:	bne	33e44 <__flatcc_fb_clear_parser@@Base+0x1460>
   33eac:	ldr	r3, [sp, #36]	; 0x24
   33eb0:	cmp	r3, #0
   33eb4:	beq	34d10 <__flatcc_fb_clear_parser@@Base+0x232c>
   33eb8:	ldr	r2, [sp, #32]
   33ebc:	ldr	r1, [sp, #36]	; 0x24
   33ec0:	ldrh	r3, [r2, #10]
   33ec4:	cmp	r1, #1
   33ec8:	orr	r3, r3, #8
   33ecc:	strh	r3, [r2, #10]
   33ed0:	beq	34d10 <__flatcc_fb_clear_parser@@Base+0x232c>
   33ed4:	ldr	r3, [r9, #156]	; 0x9c
   33ed8:	cmp	r3, #0
   33edc:	moveq	r3, #1
   33ee0:	streq	r3, [sp, #28]
   33ee4:	bne	34d10 <__flatcc_fb_clear_parser@@Base+0x232c>
   33ee8:	ldr	r3, [sp, #32]
   33eec:	ldr	r2, [pc, #528]	; 34104 <__flatcc_fb_clear_parser@@Base+0x1720>
   33ef0:	mov	r0, r9
   33ef4:	ldr	r1, [r3, #4]
   33ef8:	mov	r3, #0
   33efc:	str	r3, [sp, #4]
   33f00:	str	r3, [sp]
   33f04:	add	r2, pc, r2
   33f08:	bl	2e224 <__flatcc_error_report@@Base>
   33f0c:	mvn	r3, #0
   33f10:	str	r3, [sp, #36]	; 0x24
   33f14:	b	338e0 <__flatcc_fb_clear_parser@@Base+0xefc>
   33f18:	ldrh	r3, [r4, #16]
   33f1c:	cmp	r3, #2
   33f20:	beq	3314c <__flatcc_fb_clear_parser@@Base+0x768>
   33f24:	ldr	r1, [r4, #4]
   33f28:	mov	r3, r0
   33f2c:	str	r0, [sp, #4]
   33f30:	str	r0, [sp]
   33f34:	mov	r2, fp
   33f38:	mov	r0, r9
   33f3c:	bl	2e224 <__flatcc_error_report@@Base>
   33f40:	b	3314c <__flatcc_fb_clear_parser@@Base+0x768>
   33f44:	ldr	r2, [pc, #444]	; 34108 <__flatcc_fb_clear_parser@@Base+0x1724>
   33f48:	mov	r3, #0
   33f4c:	ldr	r1, [r8, #4]
   33f50:	add	r2, pc, r2
   33f54:	str	r3, [sp, #4]
   33f58:	str	r3, [sp]
   33f5c:	mov	r0, r9
   33f60:	bl	2e224 <__flatcc_error_report@@Base>
   33f64:	mov	r3, #1
   33f68:	strh	r3, [r8, #24]
   33f6c:	b	332e8 <__flatcc_fb_clear_parser@@Base+0x904>
   33f70:	ldr	r1, [fp, #16]
   33f74:	ldr	r0, [sp, #60]	; 0x3c
   33f78:	bl	2bb18 <ptr_set_find_item@@Base>
   33f7c:	cmp	r0, #0
   33f80:	beq	33b7c <__flatcc_fb_clear_parser@@Base+0x1198>
   33f84:	ldrh	r3, [fp, #8]
   33f88:	cmp	r3, #4
   33f8c:	bhi	33ffc <__flatcc_fb_clear_parser@@Base+0x1618>
   33f90:	mov	r4, #1
   33f94:	lsl	r3, r4, r3
   33f98:	tst	r3, #27
   33f9c:	beq	33ffc <__flatcc_fb_clear_parser@@Base+0x1618>
   33fa0:	ldrh	r5, [r8, #56]	; 0x38
   33fa4:	cmp	r5, #0
   33fa8:	bne	34d6c <__flatcc_fb_clear_parser@@Base+0x2388>
   33fac:	str	fp, [r8, #16]
   33fb0:	ldrd	r2, [fp, #112]	; 0x70
   33fb4:	ldrh	r0, [fp, #8]
   33fb8:	ldrh	r1, [fp, #104]	; 0x68
   33fbc:	strd	r2, [r8, #88]	; 0x58
   33fc0:	cmp	r0, #4
   33fc4:	mov	r3, #15
   33fc8:	strh	r1, [r8, #74]	; 0x4a
   33fcc:	strh	r3, [r8, #24]
   33fd0:	bne	33c34 <__flatcc_fb_clear_parser@@Base+0x1250>
   33fd4:	ldr	r3, [sp, #28]
   33fd8:	cmp	r3, #0
   33fdc:	beq	34e58 <__flatcc_fb_clear_parser@@Base+0x2474>
   33fe0:	ldrh	r3, [r8, #72]	; 0x48
   33fe4:	tst	r3, #128	; 0x80
   33fe8:	beq	332e8 <__flatcc_fb_clear_parser@@Base+0x904>
   33fec:	ldr	r3, [sp, #36]	; 0x24
   33ff0:	add	r3, r3, #1
   33ff4:	str	r3, [sp, #36]	; 0x24
   33ff8:	b	33cdc <__flatcc_fb_clear_parser@@Base+0x12f8>
   33ffc:	mov	r2, #0
   34000:	ldr	r3, [r8, #16]
   34004:	ldr	r1, [r8, #4]
   34008:	str	r2, [sp, #4]
   3400c:	str	r2, [sp]
   34010:	ldr	r2, [pc, #244]	; 3410c <__flatcc_fb_clear_parser@@Base+0x1728>
   34014:	mov	r0, r9
   34018:	add	r2, pc, r2
   3401c:	bl	2e224 <__flatcc_error_report@@Base>
   34020:	mov	r3, #1
   34024:	strh	r3, [r8, #24]
   34028:	b	332e8 <__flatcc_fb_clear_parser@@Base+0x904>
   3402c:	ldr	r1, [fp, #16]
   34030:	ldr	r0, [sp, #60]	; 0x3c
   34034:	bl	2bb18 <ptr_set_find_item@@Base>
   34038:	ldr	r3, [sp, #60]	; 0x3c
   3403c:	cmp	r0, #0
   34040:	beq	33a74 <__flatcc_fb_clear_parser@@Base+0x1090>
   34044:	str	r3, [sp, #60]	; 0x3c
   34048:	ldrh	r3, [fp, #8]
   3404c:	cmp	r3, #4
   34050:	addls	pc, pc, r3, lsl #2
   34054:	b	34678 <__flatcc_fb_clear_parser@@Base+0x1c94>
   34058:	b	341ac <__flatcc_fb_clear_parser@@Base+0x17c8>
   3405c:	b	341ac <__flatcc_fb_clear_parser@@Base+0x17c8>
   34060:	b	344ac <__flatcc_fb_clear_parser@@Base+0x1ac8>
   34064:	b	34498 <__flatcc_fb_clear_parser@@Base+0x1ab4>
   34068:	b	341ac <__flatcc_fb_clear_parser@@Base+0x17c8>
   3406c:	andeq	r5, r2, r0, ror ip
   34070:	andeq	r5, r2, ip, ror ip
   34074:	ldrdeq	r5, [r2], -ip
   34078:	andeq	r5, r2, r8, asr #11
   3407c:	andeq	r5, r2, ip, lsl ip
   34080:	strdeq	r5, [r2], -r4
   34084:	andeq	r5, r2, r8, ror #22
   34088:			; <UNDEFINED> instruction: 0x00025ab0
   3408c:	andeq	r5, r2, r4, ror #22
   34090:	muleq	r2, r8, r1
   34094:	muleq	r2, r0, r9
   34098:	andeq	r5, r2, r8, lsr #18
   3409c:			; <UNDEFINED> instruction: 0x000258bc
   340a0:	andeq	r5, r2, r8, asr #16
   340a4:	andeq	r5, r2, ip, ror #15
   340a8:	andeq	r5, r2, r4, asr #21
   340ac:	andeq	r5, r2, r0, lsl sl
   340b0:	andeq	r5, r2, ip, asr r3
   340b4:	ldrdeq	r5, [r2], -ip
   340b8:	andeq	r5, r2, r0, lsr #19
   340bc:	andeq	r5, r2, ip, ror #18
   340c0:	andeq	r5, r2, r8, lsr r9
   340c4:	ldrdeq	r5, [r2], -ip
   340c8:	andeq	r0, r0, r6, asr #31
   340cc:	andeq	r5, r2, r8, lsr #16
   340d0:	ldrdeq	r5, [r2], -r8
   340d4:	andeq	r5, r2, r0, lsl r8
   340d8:	andeq	r5, r2, r4, lsl #17
   340dc:	andeq	r5, r2, r8, lsl #17
   340e0:	andeq	r5, r2, ip, lsl #9
   340e4:	andeq	r5, r2, r4, asr #12
   340e8:	andeq	r5, r2, r4, asr #5
   340ec:	andeq	r4, r2, ip, lsr #21
   340f0:			; <UNDEFINED> instruction: 0x000256b8
   340f4:	andeq	r5, r2, r0, lsr r3
   340f8:	andeq	r4, r2, r4, lsr r9
   340fc:	andeq	r4, r2, r0, lsl #18
   34100:	andeq	r5, r2, r8, lsl #12
   34104:	andeq	r5, r2, r4, ror #10
   34108:	andeq	r5, r2, r0, lsr r3
   3410c:	andeq	r5, r2, ip, lsl r2
   34110:	strdeq	r4, [r2], -ip
   34114:	andeq	r4, r2, r0, lsr #26
   34118:	andeq	r4, r2, r0, asr #22
   3411c:	andeq	r4, r2, r4, lsr sp
   34120:	andeq	r4, r2, r4, asr #28
   34124:	ldrdeq	r4, [r2], -r0
   34128:			; <UNDEFINED> instruction: 0x000249b4
   3412c:	andeq	r4, r2, ip, asr lr
   34130:	andeq	r4, r2, r0, lsl ip
   34134:	andeq	r4, r2, r0, ror ip
   34138:	muleq	r2, ip, sp
   3413c:	ldrdeq	r4, [r2], -ip
   34140:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   34144:	muleq	r2, r0, r9
   34148:	andeq	r4, r2, r0, ror sl
   3414c:	andeq	r4, r2, r0, lsl #24
   34150:	andeq	r4, r2, r0, lsr #23
   34154:			; <UNDEFINED> instruction: 0x00024abc
   34158:			; <UNDEFINED> instruction: 0x000247bc
   3415c:	ldrdeq	r4, [r2], -ip
   34160:	andeq	r4, r2, r8, asr #12
   34164:	andeq	r3, r2, ip, lsr sp
   34168:	andeq	r4, r2, r0, asr #2
   3416c:	andeq	r4, r2, ip, asr #6
   34170:			; <UNDEFINED> instruction: 0x000243b4
   34174:			; <UNDEFINED> instruction: 0x00023fbc
   34178:	andeq	r4, r2, r0, ror r2
   3417c:	andeq	r3, r2, ip, lsr #15
   34180:	andeq	r3, r2, r4, lsl #18
   34184:	muleq	r2, ip, r0
   34188:	andeq	r0, r0, fp, asr r1
   3418c:	andeq	r3, r2, r4, asr r7
   34190:	andeq	r3, r2, ip, lsr #17
   34194:	andeq	ip, r0, ip, lsl fp
   34198:	andeq	r0, r0, r1, lsl #6
   3419c:	andeq	r3, r2, r0, lsr r7
   341a0:	andeq	r3, r2, r8, lsl #17
   341a4:	andeq	r3, r2, r4, lsr #25
   341a8:	andeq	r0, r0, r2, lsl #6
   341ac:	mov	r5, #0
   341b0:	str	fp, [r8, #16]
   341b4:	ldr	r3, [sp, #28]
   341b8:	ldrh	r0, [fp, #8]
   341bc:	eor	r1, r3, #1
   341c0:	ldrd	r2, [fp, #112]	; 0x70
   341c4:	cmp	r0, #4
   341c8:	movne	r1, #0
   341cc:	andeq	r1, r1, #1
   341d0:	cmp	r1, #0
   341d4:	ldrh	r1, [fp, #104]	; 0x68
   341d8:	strd	r2, [r8, #88]	; 0x58
   341dc:	mov	r3, #14
   341e0:	strh	r1, [r8, #74]	; 0x4a
   341e4:	strh	r3, [r8, #24]
   341e8:	beq	34210 <__flatcc_fb_clear_parser@@Base+0x182c>
   341ec:	ldr	r3, [sp, #44]	; 0x2c
   341f0:	cmp	r3, #0
   341f4:	ldrheq	r2, [sp, #16]
   341f8:	moveq	r3, #0
   341fc:	strdeq	r2, [r8, #96]	; 0x60
   34200:	ldrd	r2, [sp, #16]
   34204:	adds	r2, r2, #1
   34208:	adc	r3, r3, #0
   3420c:	strd	r2, [sp, #16]
   34210:	ldrh	r3, [r8, #56]	; 0x38
   34214:	cmp	r3, #0
   34218:	beq	344dc <__flatcc_fb_clear_parser@@Base+0x1af8>
   3421c:	cmp	r0, #3
   34220:	beq	3496c <__flatcc_fb_clear_parser@@Base+0x1f88>
   34224:	ldr	r2, [pc, #-284]	; 34110 <__flatcc_fb_clear_parser@@Base+0x172c>
   34228:	mov	r3, #0
   3422c:	ldr	r1, [r8, #4]
   34230:	add	r2, pc, r2
   34234:	str	r3, [sp, #4]
   34238:	str	r3, [sp]
   3423c:	mov	r0, r9
   34240:	bl	2e224 <__flatcc_error_report@@Base>
   34244:	mov	r3, #1
   34248:	strh	r3, [r8, #24]
   3424c:	b	332e8 <__flatcc_fb_clear_parser@@Base+0x904>
   34250:	mov	r5, r0
   34254:	b	33b58 <__flatcc_fb_clear_parser@@Base+0x1174>
   34258:	mov	r5, r0
   3425c:	b	33a50 <__flatcc_fb_clear_parser@@Base+0x106c>
   34260:	ldr	r2, [sp, #28]
   34264:	ldr	r1, [r8, #4]
   34268:	mov	r3, r2
   3426c:	str	r2, [sp, #4]
   34270:	str	r2, [sp]
   34274:	ldr	r2, [pc, #-360]	; 34114 <__flatcc_fb_clear_parser@@Base+0x1730>
   34278:	mov	r0, r9
   3427c:	add	r2, pc, r2
   34280:	bl	2e224 <__flatcc_error_report@@Base>
   34284:	mov	r3, #1
   34288:	str	r3, [sp, #28]
   3428c:	b	33728 <__flatcc_fb_clear_parser@@Base+0xd44>
   34290:	tst	r6, #1024	; 0x400
   34294:	beq	3367c <__flatcc_fb_clear_parser@@Base+0xc98>
   34298:	tst	r6, #2048	; 0x800
   3429c:	bne	339b0 <__flatcc_fb_clear_parser@@Base+0xfcc>
   342a0:	b	336b4 <__flatcc_fb_clear_parser@@Base+0xcd0>
   342a4:	ldr	r2, [pc, #-404]	; 34118 <__flatcc_fb_clear_parser@@Base+0x1734>
   342a8:	mov	r3, #0
   342ac:	ldr	r1, [r7, #4]
   342b0:	add	r2, pc, r2
   342b4:	str	r3, [sp, #4]
   342b8:	str	r3, [sp]
   342bc:	mov	r0, r9
   342c0:	bl	2e224 <__flatcc_error_report@@Base>
   342c4:	ldrh	r6, [r8, #72]	; 0x48
   342c8:	b	33630 <__flatcc_fb_clear_parser@@Base+0xc4c>
   342cc:	strh	r4, [r8, #72]	; 0x48
   342d0:	ldr	r6, [sp, #40]	; 0x28
   342d4:	b	33644 <__flatcc_fb_clear_parser@@Base+0xc60>
   342d8:	cmp	r3, #1
   342dc:	movne	r3, r1
   342e0:	moveq	r3, #0
   342e4:	cmn	r9, #352	; 0x160
   342e8:	beq	34334 <__flatcc_fb_clear_parser@@Base+0x1950>
   342ec:	ldr	r0, [r9, #412]	; 0x19c
   342f0:	cmp	r0, #0
   342f4:	beq	34334 <__flatcc_fb_clear_parser@@Base+0x1950>
   342f8:	rsb	r2, r2, #0
   342fc:	mov	r1, r3
   34300:	bl	2d13c <fb_scope_table_find@@Base>
   34304:	cmp	r0, #0
   34308:	beq	34330 <__flatcc_fb_clear_parser@@Base+0x194c>
   3430c:	ldr	r3, [r7, #4]
   34310:	add	r0, r0, #4
   34314:	ldm	r3, {r1, r2}
   34318:	bl	2c1e8 <fb_symbol_table_find@@Base>
   3431c:	subs	fp, r0, #0
   34320:	beq	34330 <__flatcc_fb_clear_parser@@Base+0x194c>
   34324:	ldrh	r3, [fp, #8]
   34328:	cmp	r3, #4
   3432c:	bls	349e4 <__flatcc_fb_clear_parser@@Base+0x2000>
   34330:	ldr	r1, [r8, #16]
   34334:	ldr	r2, [pc, #-544]	; 3411c <__flatcc_fb_clear_parser@@Base+0x1738>
   34338:	mov	r3, r8
   3433c:	add	r2, pc, r2
   34340:	mov	r0, r9
   34344:	bl	2f7f4 <error_ref_sym@@Base>
   34348:	mov	r3, #1
   3434c:	strh	r3, [r8, #24]
   34350:	str	r3, [sp, #28]
   34354:	b	332e8 <__flatcc_fb_clear_parser@@Base+0x904>
   34358:	cmp	r3, #1
   3435c:	moveq	r7, r0
   34360:	movne	r7, r1
   34364:	cmn	r9, #352	; 0x160
   34368:	beq	343b4 <__flatcc_fb_clear_parser@@Base+0x19d0>
   3436c:	ldr	r0, [r9, #412]	; 0x19c
   34370:	cmp	r0, #0
   34374:	beq	343b4 <__flatcc_fb_clear_parser@@Base+0x19d0>
   34378:	rsb	r2, r2, #0
   3437c:	mov	r1, r7
   34380:	bl	2d13c <fb_scope_table_find@@Base>
   34384:	cmp	r0, #0
   34388:	beq	343b0 <__flatcc_fb_clear_parser@@Base+0x19cc>
   3438c:	ldr	r3, [r6, #4]
   34390:	add	r0, r0, #4
   34394:	ldm	r3, {r1, r2}
   34398:	bl	2c1e8 <fb_symbol_table_find@@Base>
   3439c:	subs	fp, r0, #0
   343a0:	beq	343b0 <__flatcc_fb_clear_parser@@Base+0x19cc>
   343a4:	ldrh	r3, [fp, #8]
   343a8:	cmp	r3, #4
   343ac:	bls	34930 <__flatcc_fb_clear_parser@@Base+0x1f4c>
   343b0:	ldr	r1, [r8, #16]
   343b4:	ldr	r2, [pc, #-668]	; 34120 <__flatcc_fb_clear_parser@@Base+0x173c>
   343b8:	mov	r3, r8
   343bc:	add	r2, pc, r2
   343c0:	mov	r0, r9
   343c4:	bl	2f7f4 <error_ref_sym@@Base>
   343c8:	mov	r3, #1
   343cc:	strh	r3, [r8, #24]
   343d0:	b	332e8 <__flatcc_fb_clear_parser@@Base+0x904>
   343d4:	ldr	r2, [pc, #-696]	; 34124 <__flatcc_fb_clear_parser@@Base+0x1740>
   343d8:	mov	r3, #0
   343dc:	ldr	r1, [r8, #4]
   343e0:	add	r2, pc, r2
   343e4:	str	r3, [sp, #4]
   343e8:	str	r3, [sp]
   343ec:	mov	r0, r9
   343f0:	bl	2e224 <__flatcc_error_report@@Base>
   343f4:	ldrh	r6, [r8, #72]	; 0x48
   343f8:	b	33644 <__flatcc_fb_clear_parser@@Base+0xc60>
   343fc:	ldr	r2, [pc, #-732]	; 34128 <__flatcc_fb_clear_parser@@Base+0x1744>
   34400:	ldr	r1, [r8, #4]
   34404:	mov	r3, fp
   34408:	mov	r0, r9
   3440c:	str	fp, [sp, #4]
   34410:	str	fp, [sp]
   34414:	add	r2, pc, r2
   34418:	bl	2e224 <__flatcc_error_report@@Base>
   3441c:	mvn	r3, #0
   34420:	str	r3, [sp, #36]	; 0x24
   34424:	ldr	r0, [sp, #36]	; 0x24
   34428:	add	sp, sp, #268	; 0x10c
   3442c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34430:	ldr	r3, [sp, #24]
   34434:	ldr	r2, [pc, #-784]	; 3412c <__flatcc_fb_clear_parser@@Base+0x1748>
   34438:	mov	r0, r9
   3443c:	ldr	r1, [r3, #4]
   34440:	mov	r3, #0
   34444:	str	r3, [sp, #4]
   34448:	str	r3, [sp]
   3444c:	add	r2, pc, r2
   34450:	bl	2e224 <__flatcc_error_report@@Base>
   34454:	mov	r3, #1
   34458:	str	r3, [sp, #28]
   3445c:	b	33cbc <__flatcc_fb_clear_parser@@Base+0x12d8>
   34460:	ldr	r3, [sp, #36]	; 0x24
   34464:	cmp	r3, #0
   34468:	beq	338ec <__flatcc_fb_clear_parser@@Base+0xf08>
   3446c:	ldr	r2, [sp, #32]
   34470:	ldr	r1, [sp, #36]	; 0x24
   34474:	ldrh	r3, [r2, #10]
   34478:	cmp	r1, #1
   3447c:	orr	r3, r3, #8
   34480:	strh	r3, [r2, #10]
   34484:	beq	34f50 <__flatcc_fb_clear_parser@@Base+0x256c>
   34488:	ldr	r3, [r9, #156]	; 0x9c
   3448c:	cmp	r3, #0
   34490:	bne	34f50 <__flatcc_fb_clear_parser@@Base+0x256c>
   34494:	b	33ee8 <__flatcc_fb_clear_parser@@Base+0x1504>
   34498:	ldrh	r3, [r8, #72]	; 0x48
   3449c:	tst	r3, #256	; 0x100
   344a0:	bne	34d48 <__flatcc_fb_clear_parser@@Base+0x2364>
   344a4:	ldr	r5, [r9, #148]	; 0x94
   344a8:	b	341b0 <__flatcc_fb_clear_parser@@Base+0x17cc>
   344ac:	mov	r2, #0
   344b0:	ldr	r3, [fp, #4]
   344b4:	ldr	r1, [r8, #4]
   344b8:	str	r2, [sp, #4]
   344bc:	str	r2, [sp]
   344c0:	ldr	r2, [pc, #-920]	; 34130 <__flatcc_fb_clear_parser@@Base+0x174c>
   344c4:	mov	r0, r9
   344c8:	add	r2, pc, r2
   344cc:	bl	2e224 <__flatcc_error_report@@Base>
   344d0:	mov	r3, #1
   344d4:	strh	r3, [r8, #24]
   344d8:	b	332e8 <__flatcc_fb_clear_parser@@Base+0x904>
   344dc:	cmp	r0, #3
   344e0:	bne	33c34 <__flatcc_fb_clear_parser@@Base+0x1250>
   344e4:	mov	r2, #0
   344e8:	mov	r3, #0
   344ec:	mov	r4, r8
   344f0:	mov	r1, #5
   344f4:	strh	r1, [r8, #56]	; 0x38
   344f8:	strd	r2, [r4, #48]!	; 0x30
   344fc:	mov	r1, fp
   34500:	mov	r0, r9
   34504:	ldr	r2, [fp, #40]	; 0x28
   34508:	mov	r3, r4
   3450c:	bl	37ab4 <__flatcc_fb_coerce_scalar_type@@Base>
   34510:	cmp	r0, #0
   34514:	bne	33f64 <__flatcc_fb_clear_parser@@Base+0x1580>
   34518:	ldr	r3, [r9, #212]	; 0xd4
   3451c:	cmp	r3, #0
   34520:	beq	33c34 <__flatcc_fb_clear_parser@@Base+0x1250>
   34524:	ldr	r0, [r8, #16]
   34528:	mov	r1, r4
   3452c:	add	r0, r0, #72	; 0x48
   34530:	bl	3e7a0 <fb_value_set_find_item@@Base>
   34534:	cmp	r0, #0
   34538:	bne	33c34 <__flatcc_fb_clear_parser@@Base+0x1250>
   3453c:	ldr	r2, [pc, #-1040]	; 34134 <__flatcc_fb_clear_parser@@Base+0x1750>
   34540:	ldr	r3, [fp, #4]
   34544:	ldr	r1, [r8, #4]
   34548:	add	r2, pc, r2
   3454c:	str	r0, [sp, #4]
   34550:	str	r0, [sp]
   34554:	mov	r0, r9
   34558:	bl	2e224 <__flatcc_error_report@@Base>
   3455c:	mov	r3, #1
   34560:	strh	r3, [r8, #24]
   34564:	b	332e8 <__flatcc_fb_clear_parser@@Base+0x904>
   34568:	cmp	r2, #4
   3456c:	bne	34c68 <__flatcc_fb_clear_parser@@Base+0x2284>
   34570:	ldrh	r3, [r4, #16]
   34574:	sub	r3, r3, #4
   34578:	cmp	r3, #1
   3457c:	bls	3314c <__flatcc_fb_clear_parser@@Base+0x768>
   34580:	ldr	r1, [r4, #4]
   34584:	mov	r3, r0
   34588:	str	r0, [sp, #4]
   3458c:	str	r0, [sp]
   34590:	ldr	r2, [sp, #12]
   34594:	mov	r0, r9
   34598:	bl	2e224 <__flatcc_error_report@@Base>
   3459c:	b	3314c <__flatcc_fb_clear_parser@@Base+0x768>
   345a0:	ldr	r2, [pc, #-1136]	; 34138 <__flatcc_fb_clear_parser@@Base+0x1754>
   345a4:	mov	r0, r9
   345a8:	add	r2, pc, r2
   345ac:	bl	2e224 <__flatcc_error_report@@Base>
   345b0:	mov	r3, #1
   345b4:	str	r3, [sp, #28]
   345b8:	b	33cbc <__flatcc_fb_clear_parser@@Base+0x12d8>
   345bc:	cmp	r2, #4
   345c0:	bne	34eac <__flatcc_fb_clear_parser@@Base+0x24c8>
   345c4:	ldrh	r3, [r4, #16]
   345c8:	sub	r3, r3, #4
   345cc:	cmp	r3, #1
   345d0:	bls	333d8 <__flatcc_fb_clear_parser@@Base+0x9f4>
   345d4:	ldr	r1, [r4, #4]
   345d8:	mov	r3, r0
   345dc:	str	r0, [sp, #4]
   345e0:	str	r0, [sp]
   345e4:	ldr	r2, [sp, #68]	; 0x44
   345e8:	mov	r0, r9
   345ec:	bl	2e224 <__flatcc_error_report@@Base>
   345f0:	b	333d8 <__flatcc_fb_clear_parser@@Base+0x9f4>
   345f4:	ldr	r1, [r8, #4]
   345f8:	mov	r3, r2
   345fc:	str	r2, [sp, #4]
   34600:	str	r2, [sp]
   34604:	ldr	r2, [pc, #-1232]	; 3413c <__flatcc_fb_clear_parser@@Base+0x1758>
   34608:	mov	r0, r9
   3460c:	add	r2, pc, r2
   34610:	bl	2e224 <__flatcc_error_report@@Base>
   34614:	mov	r3, #1
   34618:	str	r3, [sp, #28]
   3461c:	b	33cbc <__flatcc_fb_clear_parser@@Base+0x12d8>
   34620:	ldr	r2, [pc, #-1256]	; 34140 <__flatcc_fb_clear_parser@@Base+0x175c>
   34624:	mov	r3, #0
   34628:	ldr	r1, [r8, #4]
   3462c:	add	r2, pc, r2
   34630:	str	r3, [sp, #4]
   34634:	str	r3, [sp]
   34638:	mov	r0, r9
   3463c:	bl	2e224 <__flatcc_error_report@@Base>
   34640:	mov	r3, #1
   34644:	strh	r3, [r8, #24]
   34648:	b	332e8 <__flatcc_fb_clear_parser@@Base+0x904>
   3464c:	ldr	r1, [r8, #4]
   34650:	mov	r3, r2
   34654:	str	r2, [sp, #4]
   34658:	str	r2, [sp]
   3465c:	ldr	r2, [pc, #-1312]	; 34144 <__flatcc_fb_clear_parser@@Base+0x1760>
   34660:	mov	r0, r9
   34664:	add	r2, pc, r2
   34668:	bl	2e224 <__flatcc_error_report@@Base>
   3466c:	mov	r3, #1
   34670:	strh	r3, [r8, #24]
   34674:	b	332e8 <__flatcc_fb_clear_parser@@Base+0x904>
   34678:	mov	r2, #0
   3467c:	ldr	r3, [fp, #4]
   34680:	ldr	r1, [r8, #4]
   34684:	str	r2, [sp, #4]
   34688:	str	r2, [sp]
   3468c:	ldr	r2, [pc, #-1356]	; 34148 <__flatcc_fb_clear_parser@@Base+0x1764>
   34690:	mov	r0, r9
   34694:	add	r2, pc, r2
   34698:	bl	2e224 <__flatcc_error_report@@Base>
   3469c:	mov	r3, #1
   346a0:	strh	r3, [r8, #24]
   346a4:	b	332e8 <__flatcc_fb_clear_parser@@Base+0x904>
   346a8:	ldr	r3, [sp, #24]
   346ac:	ldrd	r0, [r3, #8]
   346b0:	ldrd	r2, [r9, #216]	; 0xd8
   346b4:	cmp	r1, r3
   346b8:	cmpeq	r0, r2
   346bc:	bcs	34cc8 <__flatcc_fb_clear_parser@@Base+0x22e4>
   346c0:	ldrd	r2, [sp, #48]	; 0x30
   346c4:	mov	r1, #0
   346c8:	uxth	r0, r0
   346cc:	cmp	r3, r1
   346d0:	cmpeq	r2, r0
   346d4:	strd	r0, [r8, #96]	; 0x60
   346d8:	strdcc	r0, [sp, #48]	; 0x30
   346dc:	ldr	r3, [sp, #44]	; 0x2c
   346e0:	cmp	r3, #0
   346e4:	beq	34790 <__flatcc_fb_clear_parser@@Base+0x1dac>
   346e8:	ldr	r3, [r8, #96]	; 0x60
   346ec:	ldr	r1, [sp, #72]	; 0x48
   346f0:	add	r2, r1, r3
   346f4:	ldrb	r3, [r1, r3]
   346f8:	cmp	r3, #2
   346fc:	beq	347c4 <__flatcc_fb_clear_parser@@Base+0x1de0>
   34700:	cmp	r3, #0
   34704:	moveq	r3, #1
   34708:	strbeq	r3, [r2]
   3470c:	bne	3479c <__flatcc_fb_clear_parser@@Base+0x1db8>
   34710:	cmp	fp, #0
   34714:	streq	fp, [sp, #28]
   34718:	beq	33cbc <__flatcc_fb_clear_parser@@Base+0x12d8>
   3471c:	ldrh	r3, [fp, #8]
   34720:	cmp	r3, #4
   34724:	movne	r3, #0
   34728:	strne	r3, [sp, #28]
   3472c:	bne	33cbc <__flatcc_fb_clear_parser@@Base+0x12d8>
   34730:	ldrd	r2, [r8, #96]	; 0x60
   34734:	ldrh	r0, [r8, #24]
   34738:	cmp	r3, #0
   3473c:	cmpeq	r2, #1
   34740:	bls	34cf4 <__flatcc_fb_clear_parser@@Base+0x2310>
   34744:	ldr	r3, [sp, #72]	; 0x48
   34748:	sub	r2, r2, #1
   3474c:	add	r1, r3, r2
   34750:	ldrb	r3, [r3, r2]
   34754:	cmp	r3, #2
   34758:	beq	34d94 <__flatcc_fb_clear_parser@@Base+0x23b0>
   3475c:	cmp	r3, #0
   34760:	beq	34afc <__flatcc_fb_clear_parser@@Base+0x2118>
   34764:	ldr	r3, [sp, #24]
   34768:	ldr	r2, [sp, #84]	; 0x54
   3476c:	cmp	r0, #11
   34770:	ldr	r1, [r3, #4]
   34774:	ldr	r3, [sp, #80]	; 0x50
   34778:	movne	r2, r3
   3477c:	mov	r3, #0
   34780:	str	r3, [sp, #4]
   34784:	str	r3, [sp]
   34788:	mov	r0, r9
   3478c:	bl	2e224 <__flatcc_error_report@@Base>
   34790:	ldr	r3, [sp, #44]	; 0x2c
   34794:	str	r3, [sp, #28]
   34798:	b	33cbc <__flatcc_fb_clear_parser@@Base+0x12d8>
   3479c:	ldr	r3, [sp, #24]
   347a0:	ldr	r2, [pc, #-1628]	; 3414c <__flatcc_fb_clear_parser@@Base+0x1768>
   347a4:	mov	r0, r9
   347a8:	ldr	r1, [r3, #4]
   347ac:	mov	r3, #0
   347b0:	str	r3, [sp, #4]
   347b4:	str	r3, [sp]
   347b8:	add	r2, pc, r2
   347bc:	bl	2e224 <__flatcc_error_report@@Base>
   347c0:	b	34710 <__flatcc_fb_clear_parser@@Base+0x1d2c>
   347c4:	ldr	r3, [sp, #24]
   347c8:	ldr	r2, [pc, #-1664]	; 34150 <__flatcc_fb_clear_parser@@Base+0x176c>
   347cc:	mov	r0, r9
   347d0:	ldr	r1, [r3, #4]
   347d4:	mov	r3, #0
   347d8:	str	r3, [sp, #4]
   347dc:	str	r3, [sp]
   347e0:	add	r2, pc, r2
   347e4:	bl	2e224 <__flatcc_error_report@@Base>
   347e8:	ldr	r3, [sp, #44]	; 0x2c
   347ec:	str	r3, [sp, #28]
   347f0:	b	33cbc <__flatcc_fb_clear_parser@@Base+0x12d8>
   347f4:	ldr	r6, [sp, #40]	; 0x28
   347f8:	b	33234 <__flatcc_fb_clear_parser@@Base+0x850>
   347fc:	ldr	r1, [r8, #48]	; 0x30
   34800:	ldr	r3, [sp, #32]
   34804:	cmp	r1, #0
   34808:	ldr	r5, [r3, #12]
   3480c:	beq	34f04 <__flatcc_fb_clear_parser@@Base+0x2520>
   34810:	mov	r3, #0
   34814:	mov	r2, r3
   34818:	mov	r6, r1
   3481c:	mov	r0, r3
   34820:	b	34830 <__flatcc_fb_clear_parser@@Base+0x1e4c>
   34824:	mov	r0, r6
   34828:	mov	r2, r3
   3482c:	mov	r6, ip
   34830:	ldr	ip, [r6]
   34834:	add	r3, r2, #1
   34838:	cmp	ip, #0
   3483c:	bne	34824 <__flatcc_fb_clear_parser@@Base+0x1e40>
   34840:	cmp	r0, #0
   34844:	mov	r7, r0
   34848:	beq	34adc <__flatcc_fb_clear_parser@@Base+0x20f8>
   3484c:	adds	r3, r5, #0
   34850:	movne	r3, #1
   34854:	cmp	r2, #1
   34858:	movne	r3, #0
   3485c:	cmp	r3, #0
   34860:	bne	34a1c <__flatcc_fb_clear_parser@@Base+0x2038>
   34864:	cmp	r2, #1
   34868:	moveq	ip, r3
   3486c:	movne	ip, r1
   34870:	cmn	r9, #352	; 0x160
   34874:	beq	34adc <__flatcc_fb_clear_parser@@Base+0x20f8>
   34878:	ldr	r0, [r9, #412]	; 0x19c
   3487c:	cmp	r0, #0
   34880:	beq	34adc <__flatcc_fb_clear_parser@@Base+0x20f8>
   34884:	rsb	r2, r2, #1
   34888:	mov	r1, ip
   3488c:	bl	2d13c <fb_scope_table_find@@Base>
   34890:	cmp	r0, #0
   34894:	beq	34ad8 <__flatcc_fb_clear_parser@@Base+0x20f4>
   34898:	ldr	r3, [r7, #4]
   3489c:	add	r0, r0, #4
   348a0:	ldm	r3, {r1, r2}
   348a4:	bl	2c1e8 <fb_symbol_table_find@@Base>
   348a8:	subs	r3, r0, #0
   348ac:	beq	34ad8 <__flatcc_fb_clear_parser@@Base+0x20f4>
   348b0:	ldrh	r2, [r3, #8]
   348b4:	cmp	r2, #4
   348b8:	bhi	34ad8 <__flatcc_fb_clear_parser@@Base+0x20f4>
   348bc:	ldr	r1, [r3, #16]
   348c0:	add	r0, r9, #524	; 0x20c
   348c4:	str	r3, [sp, #60]	; 0x3c
   348c8:	bl	2bb18 <ptr_set_find_item@@Base>
   348cc:	ldr	r3, [sp, #60]	; 0x3c
   348d0:	cmp	r0, #0
   348d4:	beq	34ad8 <__flatcc_fb_clear_parser@@Base+0x20f4>
   348d8:	ldrh	r2, [r3, #8]
   348dc:	cmp	r2, #3
   348e0:	bne	34ad8 <__flatcc_fb_clear_parser@@Base+0x20f4>
   348e4:	ldr	r1, [r6, #4]
   348e8:	add	r0, r3, #56	; 0x38
   348ec:	ldm	r1, {r1, r2}
   348f0:	bl	2c1e8 <fb_symbol_table_find@@Base>
   348f4:	subs	r3, r0, #0
   348f8:	beq	34ad8 <__flatcc_fb_clear_parser@@Base+0x20f4>
   348fc:	add	r3, r3, #48	; 0x30
   34900:	add	ip, r8, #48	; 0x30
   34904:	ldm	r3, {r0, r1, r2, r3}
   34908:	stm	ip, {r0, r1, r2, r3}
   3490c:	ldrh	r3, [r8, #56]	; 0x38
   34910:	b	33d44 <__flatcc_fb_clear_parser@@Base+0x1360>
   34914:	mov	r2, r6
   34918:	mov	r6, #0
   3491c:	b	33888 <__flatcc_fb_clear_parser@@Base+0xea4>
   34920:	mov	r2, lr
   34924:	str	ip, [sp, #24]
   34928:	mov	r6, #0
   3492c:	b	33548 <__flatcc_fb_clear_parser@@Base+0xb64>
   34930:	ldr	r1, [fp, #16]
   34934:	add	r0, r9, #524	; 0x20c
   34938:	bl	2bb18 <ptr_set_find_item@@Base>
   3493c:	cmp	r0, #0
   34940:	bne	33f84 <__flatcc_fb_clear_parser@@Base+0x15a0>
   34944:	b	343b0 <__flatcc_fb_clear_parser@@Base+0x19cc>
   34948:	ldr	r2, [sp, #32]
   3494c:	mov	r0, r9
   34950:	ldr	r1, [r2, #4]
   34954:	ldr	r2, [pc, #-2056]	; 34154 <__flatcc_fb_clear_parser@@Base+0x1770>
   34958:	str	r3, [sp, #4]
   3495c:	str	r3, [sp]
   34960:	add	r2, pc, r2
   34964:	bl	2e224 <__flatcc_error_report@@Base>
   34968:	b	33eac <__flatcc_fb_clear_parser@@Base+0x14c8>
   3496c:	cmp	r3, #13
   34970:	beq	34b0c <__flatcc_fb_clear_parser@@Base+0x2128>
   34974:	add	r4, r8, #48	; 0x30
   34978:	mov	r3, r4
   3497c:	ldr	r2, [fp, #40]	; 0x28
   34980:	mov	r1, r8
   34984:	mov	r0, r9
   34988:	bl	37ab4 <__flatcc_fb_coerce_scalar_type@@Base>
   3498c:	cmp	r0, #0
   34990:	bne	33f64 <__flatcc_fb_clear_parser@@Base+0x1580>
   34994:	ldr	r3, [r9, #212]	; 0xd4
   34998:	cmp	r3, #0
   3499c:	beq	33c34 <__flatcc_fb_clear_parser@@Base+0x1250>
   349a0:	ldr	r0, [r8, #16]
   349a4:	mov	r1, r4
   349a8:	add	r0, r0, #72	; 0x48
   349ac:	bl	3e7a0 <fb_value_set_find_item@@Base>
   349b0:	cmp	r0, #0
   349b4:	bne	33c34 <__flatcc_fb_clear_parser@@Base+0x1250>
   349b8:	ldr	r2, [pc, #-2152]	; 34158 <__flatcc_fb_clear_parser@@Base+0x1774>
   349bc:	ldr	r1, [r8, #4]
   349c0:	mov	r3, r0
   349c4:	str	r0, [sp, #4]
   349c8:	str	r0, [sp]
   349cc:	add	r2, pc, r2
   349d0:	mov	r0, r9
   349d4:	bl	2e224 <__flatcc_error_report@@Base>
   349d8:	mov	r3, #1
   349dc:	strh	r3, [r8, #24]
   349e0:	b	332e8 <__flatcc_fb_clear_parser@@Base+0x904>
   349e4:	add	r3, r9, #524	; 0x20c
   349e8:	mov	r0, r3
   349ec:	ldr	r1, [fp, #16]
   349f0:	str	r3, [sp, #60]	; 0x3c
   349f4:	bl	2bb18 <ptr_set_find_item@@Base>
   349f8:	cmp	r0, #0
   349fc:	bne	34048 <__flatcc_fb_clear_parser@@Base+0x1664>
   34a00:	b	34330 <__flatcc_fb_clear_parser@@Base+0x194c>
   34a04:	ldr	r1, [sp, #32]
   34a08:	mov	r2, #0
   34a0c:	mov	r3, #0
   34a10:	str	r8, [sp, #36]	; 0x24
   34a14:	strd	r2, [r1, #96]	; 0x60
   34a18:	b	338ec <__flatcc_fb_clear_parser@@Base+0xf08>
   34a1c:	add	r4, r9, #352	; 0x160
   34a20:	add	r3, r9, #524	; 0x20c
   34a24:	str	ip, [sp, #64]	; 0x40
   34a28:	str	r3, [sp, #60]	; 0x3c
   34a2c:	str	r6, [sp, #68]	; 0x44
   34a30:	ldr	r3, [r7, #4]
   34a34:	add	r0, r5, #4
   34a38:	ldm	r3, {r1, r2}
   34a3c:	bl	2c1e8 <fb_symbol_table_find@@Base>
   34a40:	subs	r3, r0, #0
   34a44:	beq	34a54 <__flatcc_fb_clear_parser@@Base+0x2070>
   34a48:	ldrh	r2, [r3, #8]
   34a4c:	cmp	r2, #4
   34a50:	bls	34c9c <__flatcc_fb_clear_parser@@Base+0x22b8>
   34a54:	ldr	r2, [r5]
   34a58:	cmp	r2, #0
   34a5c:	beq	34ad8 <__flatcc_fb_clear_parser@@Base+0x20f4>
   34a60:	mov	r3, #0
   34a64:	ldr	r2, [r2]
   34a68:	add	r3, r3, #1
   34a6c:	cmp	r2, #0
   34a70:	bne	34a64 <__flatcc_fb_clear_parser@@Base+0x2080>
   34a74:	rsb	r6, r3, #1
   34a78:	b	34aa8 <__flatcc_fb_clear_parser@@Base+0x20c4>
   34a7c:	cmp	r4, #0
   34a80:	beq	34aa4 <__flatcc_fb_clear_parser@@Base+0x20c0>
   34a84:	ldr	r0, [r9, #412]	; 0x19c
   34a88:	cmp	r0, #0
   34a8c:	beq	34aa4 <__flatcc_fb_clear_parser@@Base+0x20c0>
   34a90:	mov	r2, r6
   34a94:	ldr	r1, [r5]
   34a98:	bl	2d13c <fb_scope_table_find@@Base>
   34a9c:	cmp	r0, #0
   34aa0:	bne	34cc0 <__flatcc_fb_clear_parser@@Base+0x22dc>
   34aa4:	add	r6, r6, #1
   34aa8:	cmp	r6, #0
   34aac:	bne	34a7c <__flatcc_fb_clear_parser@@Base+0x2098>
   34ab0:	cmp	r4, #0
   34ab4:	beq	34ad8 <__flatcc_fb_clear_parser@@Base+0x20f4>
   34ab8:	ldr	r0, [r9, #412]	; 0x19c
   34abc:	cmp	r0, #0
   34ac0:	beq	34ad8 <__flatcc_fb_clear_parser@@Base+0x20f4>
   34ac4:	mov	r1, r6
   34ac8:	ldr	r2, [sp, #64]	; 0x40
   34acc:	bl	2d13c <fb_scope_table_find@@Base>
   34ad0:	subs	r5, r0, #0
   34ad4:	bne	34a30 <__flatcc_fb_clear_parser@@Base+0x204c>
   34ad8:	ldr	r1, [r8, #48]	; 0x30
   34adc:	ldr	r2, [pc, #-2440]	; 3415c <__flatcc_fb_clear_parser@@Base+0x1778>
   34ae0:	mov	r3, r8
   34ae4:	add	r2, pc, r2
   34ae8:	mov	r0, r9
   34aec:	bl	2f7f4 <error_ref_sym@@Base>
   34af0:	mov	r3, #1
   34af4:	strh	r3, [r8, #24]
   34af8:	b	332e8 <__flatcc_fb_clear_parser@@Base+0x904>
   34afc:	mov	r2, #2
   34b00:	str	r3, [sp, #28]
   34b04:	strb	r2, [r1]
   34b08:	b	33cbc <__flatcc_fb_clear_parser@@Base+0x12d8>
   34b0c:	ldr	r3, [r8, #48]	; 0x30
   34b10:	ldr	r2, [sp, #32]
   34b14:	cmp	r3, #0
   34b18:	str	r3, [sp, #68]	; 0x44
   34b1c:	ldr	r4, [r2, #12]
   34b20:	beq	34f04 <__flatcc_fb_clear_parser@@Base+0x2520>
   34b24:	mov	r2, #0
   34b28:	b	34b38 <__flatcc_fb_clear_parser@@Base+0x2154>
   34b2c:	mov	r6, r3
   34b30:	mov	r2, r0
   34b34:	mov	r3, r1
   34b38:	ldr	r1, [r3]
   34b3c:	add	r0, r2, #1
   34b40:	cmp	r1, #0
   34b44:	bne	34b2c <__flatcc_fb_clear_parser@@Base+0x2148>
   34b48:	cmp	r6, #0
   34b4c:	str	r3, [sp, #100]	; 0x64
   34b50:	beq	34c24 <__flatcc_fb_clear_parser@@Base+0x2240>
   34b54:	adds	r3, r4, #0
   34b58:	movne	r3, #1
   34b5c:	cmp	r2, #1
   34b60:	movne	r3, #0
   34b64:	cmp	r3, #0
   34b68:	beq	34de4 <__flatcc_fb_clear_parser@@Base+0x2400>
   34b6c:	add	r7, r9, #352	; 0x160
   34b70:	str	r1, [sp, #104]	; 0x68
   34b74:	str	r5, [sp, #64]	; 0x40
   34b78:	ldr	r3, [r6, #4]
   34b7c:	add	r0, r4, #4
   34b80:	ldm	r3, {r1, r2}
   34b84:	bl	2c1e8 <fb_symbol_table_find@@Base>
   34b88:	subs	r3, r0, #0
   34b8c:	beq	34b9c <__flatcc_fb_clear_parser@@Base+0x21b8>
   34b90:	ldrh	r2, [r3, #8]
   34b94:	cmp	r2, #4
   34b98:	bls	34db4 <__flatcc_fb_clear_parser@@Base+0x23d0>
   34b9c:	ldr	r2, [r4]
   34ba0:	cmp	r2, #0
   34ba4:	beq	34c20 <__flatcc_fb_clear_parser@@Base+0x223c>
   34ba8:	mov	r3, #0
   34bac:	ldr	r2, [r2]
   34bb0:	add	r3, r3, #1
   34bb4:	cmp	r2, #0
   34bb8:	bne	34bac <__flatcc_fb_clear_parser@@Base+0x21c8>
   34bbc:	rsb	r5, r3, #1
   34bc0:	b	34bf0 <__flatcc_fb_clear_parser@@Base+0x220c>
   34bc4:	cmp	r7, #0
   34bc8:	beq	34bec <__flatcc_fb_clear_parser@@Base+0x2208>
   34bcc:	ldr	r0, [r9, #412]	; 0x19c
   34bd0:	cmp	r0, #0
   34bd4:	beq	34bec <__flatcc_fb_clear_parser@@Base+0x2208>
   34bd8:	mov	r2, r5
   34bdc:	ldr	r1, [r4]
   34be0:	bl	2d13c <fb_scope_table_find@@Base>
   34be4:	cmp	r0, #0
   34be8:	bne	34dac <__flatcc_fb_clear_parser@@Base+0x23c8>
   34bec:	add	r5, r5, #1
   34bf0:	cmp	r5, #0
   34bf4:	bne	34bc4 <__flatcc_fb_clear_parser@@Base+0x21e0>
   34bf8:	cmp	r7, #0
   34bfc:	beq	34c20 <__flatcc_fb_clear_parser@@Base+0x223c>
   34c00:	ldr	r0, [r9, #412]	; 0x19c
   34c04:	cmp	r0, #0
   34c08:	beq	34c20 <__flatcc_fb_clear_parser@@Base+0x223c>
   34c0c:	mov	r1, r5
   34c10:	ldr	r2, [sp, #104]	; 0x68
   34c14:	bl	2d13c <fb_scope_table_find@@Base>
   34c18:	subs	r4, r0, #0
   34c1c:	bne	34b78 <__flatcc_fb_clear_parser@@Base+0x2194>
   34c20:	ldr	r5, [sp, #64]	; 0x40
   34c24:	ldr	r3, [sp, #68]	; 0x44
   34c28:	ldr	r3, [r3]
   34c2c:	cmp	r3, #0
   34c30:	moveq	r3, fp
   34c34:	bne	34ee0 <__flatcc_fb_clear_parser@@Base+0x24fc>
   34c38:	ldr	r2, [sp, #100]	; 0x64
   34c3c:	add	r0, r3, #56	; 0x38
   34c40:	ldr	r1, [r2, #4]
   34c44:	ldm	r1, {r1, r2}
   34c48:	bl	2c1e8 <fb_symbol_table_find@@Base>
   34c4c:	subs	r3, r0, #0
   34c50:	beq	34ee0 <__flatcc_fb_clear_parser@@Base+0x24fc>
   34c54:	add	r3, r3, #48	; 0x30
   34c58:	add	ip, r8, #48	; 0x30
   34c5c:	ldm	r3, {r0, r1, r2, r3}
   34c60:	stm	ip, {r0, r1, r2, r3}
   34c64:	b	33c34 <__flatcc_fb_clear_parser@@Base+0x1250>
   34c68:	cmp	r2, #6
   34c6c:	bne	3314c <__flatcc_fb_clear_parser@@Base+0x768>
   34c70:	ldrh	r3, [r4, #16]
   34c74:	cmp	r3, #6
   34c78:	beq	3314c <__flatcc_fb_clear_parser@@Base+0x768>
   34c7c:	mov	r3, #0
   34c80:	ldr	r1, [r4, #4]
   34c84:	ldr	r2, [sp, #28]
   34c88:	str	r3, [sp, #4]
   34c8c:	str	r3, [sp]
   34c90:	mov	r0, r9
   34c94:	bl	2e224 <__flatcc_error_report@@Base>
   34c98:	b	3314c <__flatcc_fb_clear_parser@@Base+0x768>
   34c9c:	ldr	r1, [r3, #16]
   34ca0:	ldr	r0, [sp, #60]	; 0x3c
   34ca4:	str	r3, [sp, #100]	; 0x64
   34ca8:	bl	2bb18 <ptr_set_find_item@@Base>
   34cac:	ldr	r3, [sp, #100]	; 0x64
   34cb0:	cmp	r0, #0
   34cb4:	beq	34a54 <__flatcc_fb_clear_parser@@Base+0x2070>
   34cb8:	ldr	r6, [sp, #68]	; 0x44
   34cbc:	b	348d8 <__flatcc_fb_clear_parser@@Base+0x1ef4>
   34cc0:	mov	r5, r0
   34cc4:	b	34a30 <__flatcc_fb_clear_parser@@Base+0x204c>
   34cc8:	ldr	r2, [pc, #-2928]	; 34160 <__flatcc_fb_clear_parser@@Base+0x177c>
   34ccc:	ldr	r1, [r8, #4]
   34cd0:	mov	r3, ip
   34cd4:	str	ip, [sp, #4]
   34cd8:	str	ip, [sp]
   34cdc:	add	r2, pc, r2
   34ce0:	mov	r0, r9
   34ce4:	bl	2e224 <__flatcc_error_report@@Base>
   34ce8:	mov	r3, #1
   34cec:	str	r3, [sp, #28]
   34cf0:	b	33cbc <__flatcc_fb_clear_parser@@Base+0x12d8>
   34cf4:	ldr	r3, [sp, #24]
   34cf8:	ldr	r2, [pc, #-2972]	; 34164 <__flatcc_fb_clear_parser@@Base+0x1780>
   34cfc:	cmp	r0, #11
   34d00:	add	r2, pc, r2
   34d04:	ldr	r1, [r3, #4]
   34d08:	ldrne	r2, [sp, #96]	; 0x60
   34d0c:	b	3477c <__flatcc_fb_clear_parser@@Base+0x1d98>
   34d10:	mvn	r3, #0
   34d14:	str	r3, [sp, #36]	; 0x24
   34d18:	b	338ec <__flatcc_fb_clear_parser@@Base+0xf08>
   34d1c:	mov	r2, #0
   34d20:	ldr	r3, [r3, #4]
   34d24:	ldr	r1, [r7, #4]
   34d28:	str	r2, [sp, #4]
   34d2c:	str	r2, [sp]
   34d30:	ldr	r2, [pc, #-3024]	; 34168 <__flatcc_fb_clear_parser@@Base+0x1784>
   34d34:	mov	r0, r9
   34d38:	add	r2, pc, r2
   34d3c:	bl	2e224 <__flatcc_error_report@@Base>
   34d40:	ldrh	r6, [r8, #72]	; 0x48
   34d44:	b	33630 <__flatcc_fb_clear_parser@@Base+0xc4c>
   34d48:	ldr	r2, [pc, #-3044]	; 3416c <__flatcc_fb_clear_parser@@Base+0x1788>
   34d4c:	mov	r3, #0
   34d50:	ldr	r1, [r8, #4]
   34d54:	add	r2, pc, r2
   34d58:	str	r3, [sp, #4]
   34d5c:	str	r3, [sp]
   34d60:	mov	r0, r9
   34d64:	bl	2e224 <__flatcc_error_report@@Base>
   34d68:	b	344a4 <__flatcc_fb_clear_parser@@Base+0x1ac0>
   34d6c:	ldr	r2, [pc, #-3076]	; 34170 <__flatcc_fb_clear_parser@@Base+0x178c>
   34d70:	mov	r3, #0
   34d74:	ldr	r1, [r8, #4]
   34d78:	add	r2, pc, r2
   34d7c:	str	r3, [sp, #4]
   34d80:	str	r3, [sp]
   34d84:	mov	r0, r9
   34d88:	bl	2e224 <__flatcc_error_report@@Base>
   34d8c:	strh	r4, [r8, #24]
   34d90:	b	332e8 <__flatcc_fb_clear_parser@@Base+0x904>
   34d94:	ldr	r3, [sp, #24]
   34d98:	cmp	r0, #11
   34d9c:	ldr	r2, [sp, #92]	; 0x5c
   34da0:	ldr	r1, [r3, #4]
   34da4:	ldr	r3, [sp, #88]	; 0x58
   34da8:	b	34778 <__flatcc_fb_clear_parser@@Base+0x1d94>
   34dac:	mov	r4, r0
   34db0:	b	34b78 <__flatcc_fb_clear_parser@@Base+0x2194>
   34db4:	ldr	r1, [r3, #16]
   34db8:	ldr	r0, [sp, #60]	; 0x3c
   34dbc:	str	r3, [sp, #108]	; 0x6c
   34dc0:	bl	2bb18 <ptr_set_find_item@@Base>
   34dc4:	ldr	r3, [sp, #108]	; 0x6c
   34dc8:	cmp	r0, #0
   34dcc:	beq	34b9c <__flatcc_fb_clear_parser@@Base+0x21b8>
   34dd0:	ldr	r5, [sp, #64]	; 0x40
   34dd4:	ldrh	r2, [r3, #8]
   34dd8:	cmp	r2, #3
   34ddc:	bne	34c24 <__flatcc_fb_clear_parser@@Base+0x2240>
   34de0:	b	34c38 <__flatcc_fb_clear_parser@@Base+0x2254>
   34de4:	cmp	r2, #1
   34de8:	ldr	r1, [sp, #68]	; 0x44
   34dec:	moveq	r1, r3
   34df0:	cmn	r9, #352	; 0x160
   34df4:	beq	34c24 <__flatcc_fb_clear_parser@@Base+0x2240>
   34df8:	ldr	r0, [r9, #412]	; 0x19c
   34dfc:	cmp	r0, #0
   34e00:	beq	34c24 <__flatcc_fb_clear_parser@@Base+0x2240>
   34e04:	rsb	r2, r2, #1
   34e08:	bl	2d13c <fb_scope_table_find@@Base>
   34e0c:	cmp	r0, #0
   34e10:	beq	34c24 <__flatcc_fb_clear_parser@@Base+0x2240>
   34e14:	ldr	r3, [r6, #4]
   34e18:	add	r0, r0, #4
   34e1c:	ldm	r3, {r1, r2}
   34e20:	bl	2c1e8 <fb_symbol_table_find@@Base>
   34e24:	subs	r3, r0, #0
   34e28:	beq	34c24 <__flatcc_fb_clear_parser@@Base+0x2240>
   34e2c:	ldrh	r2, [r3, #8]
   34e30:	cmp	r2, #4
   34e34:	bhi	34c24 <__flatcc_fb_clear_parser@@Base+0x2240>
   34e38:	ldr	r0, [sp, #60]	; 0x3c
   34e3c:	ldr	r1, [r3, #16]
   34e40:	str	r3, [sp, #60]	; 0x3c
   34e44:	bl	2bb18 <ptr_set_find_item@@Base>
   34e48:	ldr	r3, [sp, #60]	; 0x3c
   34e4c:	cmp	r0, #0
   34e50:	bne	34dd4 <__flatcc_fb_clear_parser@@Base+0x23f0>
   34e54:	b	34c24 <__flatcc_fb_clear_parser@@Base+0x2240>
   34e58:	ldr	r3, [sp, #44]	; 0x2c
   34e5c:	cmp	r3, #0
   34e60:	ldrheq	r2, [sp, #16]
   34e64:	moveq	r3, #0
   34e68:	strdeq	r2, [r8, #96]	; 0x60
   34e6c:	ldrd	r2, [sp, #16]
   34e70:	ldr	r5, [sp, #28]
   34e74:	adds	r2, r2, #1
   34e78:	adc	r3, r3, #0
   34e7c:	strd	r2, [sp, #16]
   34e80:	b	33c40 <__flatcc_fb_clear_parser@@Base+0x125c>
   34e84:	ldr	r2, [pc, #-3352]	; 34174 <__flatcc_fb_clear_parser@@Base+0x1790>
   34e88:	ldr	r3, [r3, #4]
   34e8c:	ldr	r1, [r7, #4]
   34e90:	add	r2, pc, r2
   34e94:	str	r0, [sp, #4]
   34e98:	str	r0, [sp]
   34e9c:	mov	r0, r9
   34ea0:	bl	2e224 <__flatcc_error_report@@Base>
   34ea4:	ldrh	r6, [r8, #72]	; 0x48
   34ea8:	b	33630 <__flatcc_fb_clear_parser@@Base+0xc4c>
   34eac:	cmp	r2, #6
   34eb0:	bne	333d8 <__flatcc_fb_clear_parser@@Base+0x9f4>
   34eb4:	ldrh	r3, [r4, #16]
   34eb8:	cmp	r3, #6
   34ebc:	beq	333d8 <__flatcc_fb_clear_parser@@Base+0x9f4>
   34ec0:	mov	r3, #0
   34ec4:	ldr	r1, [r4, #4]
   34ec8:	ldr	r2, [sp, #64]	; 0x40
   34ecc:	str	r3, [sp, #4]
   34ed0:	str	r3, [sp]
   34ed4:	mov	r0, r9
   34ed8:	bl	2e224 <__flatcc_error_report@@Base>
   34edc:	b	333d8 <__flatcc_fb_clear_parser@@Base+0x9f4>
   34ee0:	ldr	r2, [pc, #-3440]	; 34178 <__flatcc_fb_clear_parser@@Base+0x1794>
   34ee4:	mov	r3, r8
   34ee8:	add	r2, pc, r2
   34eec:	ldr	r1, [r8, #48]	; 0x30
   34ef0:	mov	r0, r9
   34ef4:	bl	2f7f4 <error_ref_sym@@Base>
   34ef8:	mov	r3, #1
   34efc:	strh	r3, [r8, #24]
   34f00:	b	332e8 <__flatcc_fb_clear_parser@@Base+0x904>
   34f04:	ldr	r3, [pc, #-3472]	; 3417c <__flatcc_fb_clear_parser@@Base+0x1798>
   34f08:	ldr	r1, [pc, #-3472]	; 34180 <__flatcc_fb_clear_parser@@Base+0x179c>
   34f0c:	ldr	r0, [pc, #-3472]	; 34184 <__flatcc_fb_clear_parser@@Base+0x17a0>
   34f10:	add	r3, pc, r3
   34f14:	ldr	r2, [pc, #-3476]	; 34188 <__flatcc_fb_clear_parser@@Base+0x17a4>
   34f18:	add	r3, r3, #252	; 0xfc
   34f1c:	add	r1, pc, r1
   34f20:	add	r0, pc, r0
   34f24:	bl	14140 <__assert_fail@plt>
   34f28:	ldr	r3, [sp, #36]	; 0x24
   34f2c:	cmp	r3, #0
   34f30:	beq	338ec <__flatcc_fb_clear_parser@@Base+0xf08>
   34f34:	ldr	r2, [sp, #32]
   34f38:	ldr	r1, [sp, #36]	; 0x24
   34f3c:	ldrh	r3, [r2, #10]
   34f40:	cmp	r1, #1
   34f44:	orr	r3, r3, #8
   34f48:	strh	r3, [r2, #10]
   34f4c:	bne	338cc <__flatcc_fb_clear_parser@@Base+0xee8>
   34f50:	ldr	r3, [sp, #28]
   34f54:	str	r3, [sp, #36]	; 0x24
   34f58:	b	338ec <__flatcc_fb_clear_parser@@Base+0xf08>
   34f5c:	ldr	r3, [pc, #-3544]	; 3418c <__flatcc_fb_clear_parser@@Base+0x17a8>
   34f60:	ldr	r1, [pc, #-3544]	; 34190 <__flatcc_fb_clear_parser@@Base+0x17ac>
   34f64:	ldr	r0, [pc, #-3544]	; 34194 <__flatcc_fb_clear_parser@@Base+0x17b0>
   34f68:	add	r3, pc, r3
   34f6c:	ldr	r2, [pc, #-3548]	; 34198 <__flatcc_fb_clear_parser@@Base+0x17b4>
   34f70:	add	r3, r3, #188	; 0xbc
   34f74:	add	r1, pc, r1
   34f78:	add	r0, pc, r0
   34f7c:	bl	14140 <__assert_fail@plt>
   34f80:	ldr	r3, [pc, #-3564]	; 3419c <__flatcc_fb_clear_parser@@Base+0x17b8>
   34f84:	ldr	r1, [pc, #-3564]	; 341a0 <__flatcc_fb_clear_parser@@Base+0x17bc>
   34f88:	ldr	r0, [pc, #-3564]	; 341a4 <__flatcc_fb_clear_parser@@Base+0x17c0>
   34f8c:	add	r3, pc, r3
   34f90:	ldr	r2, [pc, #-3568]	; 341a8 <__flatcc_fb_clear_parser@@Base+0x17c4>
   34f94:	add	r3, r3, #188	; 0xbc
   34f98:	add	r1, pc, r1
   34f9c:	add	r0, pc, r0
   34fa0:	bl	14140 <__assert_fail@plt>
   34fa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34fa8:	mov	sl, r1
   34fac:	ldrh	r9, [r1, #8]
   34fb0:	sub	sp, sp, #148	; 0x94
   34fb4:	mov	r6, r0
   34fb8:	cmp	r9, #4
   34fbc:	beq	356a8 <__flatcc_fb_clear_parser@@Base+0x2cc4>
   34fc0:	cmp	r9, #3
   34fc4:	bne	35c40 <__flatcc_fb_clear_parser@@Base+0x325c>
   34fc8:	ldrh	r3, [r1, #48]	; 0x30
   34fcc:	cmp	r3, #0
   34fd0:	beq	35b4c <__flatcc_fb_clear_parser@@Base+0x3168>
   34fd4:	cmp	r3, #8
   34fd8:	bne	35b00 <__flatcc_fb_clear_parser@@Base+0x311c>
   34fdc:	ldr	r3, [r1, #40]	; 0x28
   34fe0:	ldr	r3, [r3, #16]
   34fe4:	add	r3, r3, #996	; 0x3e4
   34fe8:	add	r3, r3, #3
   34fec:	cmp	r3, #27
   34ff0:	bhi	35150 <__flatcc_fb_clear_parser@@Base+0x276c>
   34ff4:	ldr	r2, [pc, #3232]	; 35c9c <__flatcc_fb_clear_parser@@Base+0x32b8>
   34ff8:	mov	r0, #0
   34ffc:	add	r2, pc, r2
   35000:	add	r3, r2, r3, lsl #2
   35004:	ldr	r1, [r3, #28]
   35008:	add	r2, r2, r1, lsl #2
   3500c:	ldr	r2, [r2, #140]	; 0x8c
   35010:	uxth	r3, r2
   35014:	str	r1, [sl, #40]	; 0x28
   35018:	str	r2, [sl, #112]	; 0x70
   3501c:	str	r0, [sl, #116]	; 0x74
   35020:	strh	r3, [sl, #104]	; 0x68
   35024:	ldr	r4, [sl, #28]
   35028:	add	r8, sp, #96	; 0x60
   3502c:	mov	r0, r8
   35030:	mov	r2, #48	; 0x30
   35034:	mov	r1, #0
   35038:	bl	140a4 <memset@plt>
   3503c:	cmp	r4, #0
   35040:	beq	35978 <__flatcc_fb_clear_parser@@Base+0x2f94>
   35044:	ldr	r3, [pc, #3156]	; 35ca0 <__flatcc_fb_clear_parser@@Base+0x32bc>
   35048:	ldr	fp, [pc, #3156]	; 35ca4 <__flatcc_fb_clear_parser@@Base+0x32c0>
   3504c:	add	r3, pc, r3
   35050:	str	r3, [sp, #20]
   35054:	ldr	r3, [pc, #3148]	; 35ca8 <__flatcc_fb_clear_parser@@Base+0x32c4>
   35058:	add	fp, pc, fp
   3505c:	add	r3, pc, r3
   35060:	str	r3, [sp, #24]
   35064:	ldr	r3, [pc, #3136]	; 35cac <__flatcc_fb_clear_parser@@Base+0x32c8>
   35068:	mov	r5, #100	; 0x64
   3506c:	add	r3, pc, r3
   35070:	str	r3, [sp, #12]
   35074:	ldr	r3, [pc, #3124]	; 35cb0 <__flatcc_fb_clear_parser@@Base+0x32cc>
   35078:	mov	r7, #0
   3507c:	add	r3, pc, r3
   35080:	str	r3, [sp, #16]
   35084:	ldr	r3, [pc, #3112]	; 35cb4 <__flatcc_fb_clear_parser@@Base+0x32d0>
   35088:	add	r3, pc, r3
   3508c:	str	r3, [sp, #8]
   35090:	b	350f4 <__flatcc_fb_clear_parser@@Base+0x2710>
   35094:	mov	r3, #1
   35098:	ldr	r0, [r8, r2, lsl #2]
   3509c:	orr	r7, r7, r3, lsl r2
   350a0:	cmp	r0, #0
   350a4:	uxth	r7, r7
   350a8:	lsl	r3, r2, #2
   350ac:	beq	35164 <__flatcc_fb_clear_parser@@Base+0x2780>
   350b0:	ldr	r2, [pc, #3072]	; 35cb8 <__flatcc_fb_clear_parser@@Base+0x32d4>
   350b4:	mov	r3, #0
   350b8:	ldr	r1, [r4, #4]
   350bc:	add	r2, pc, r2
   350c0:	str	r3, [sp, #4]
   350c4:	str	r3, [sp]
   350c8:	mov	r0, r6
   350cc:	bl	2e224 <__flatcc_error_report@@Base>
   350d0:	subs	r5, r5, #1
   350d4:	ldr	r4, [r4]
   350d8:	movne	r2, #1
   350dc:	moveq	r2, #0
   350e0:	cmp	r4, #0
   350e4:	moveq	r2, #0
   350e8:	andne	r2, r2, #1
   350ec:	cmp	r2, #0
   350f0:	beq	351a4 <__flatcc_fb_clear_parser@@Base+0x27c0>
   350f4:	ldr	r3, [r4, #4]
   350f8:	ldr	r0, [r6, #412]	; 0x19c
   350fc:	ldm	r3, {r1, r2}
   35100:	add	r0, r0, #16
   35104:	bl	3e04c <fb_name_table_find@@Base>
   35108:	cmp	r0, #0
   3510c:	beq	35578 <__flatcc_fb_clear_parser@@Base+0x2b94>
   35110:	ldr	r2, [r0, #24]
   35114:	cmp	r2, #0
   35118:	beq	350d0 <__flatcc_fb_clear_parser@@Base+0x26ec>
   3511c:	mov	r3, #32
   35120:	asr	r3, r3, r2
   35124:	ands	r0, r3, #1
   35128:	bne	35094 <__flatcc_fb_clear_parser@@Base+0x26b0>
   3512c:	ldr	r2, [pc, #2952]	; 35cbc <__flatcc_fb_clear_parser@@Base+0x32d8>
   35130:	ldr	r1, [r4, #4]
   35134:	mov	r3, r0
   35138:	str	r0, [sp, #4]
   3513c:	str	r0, [sp]
   35140:	add	r2, pc, r2
   35144:	mov	r0, r6
   35148:	bl	2e224 <__flatcc_error_report@@Base>
   3514c:	b	350d0 <__flatcc_fb_clear_parser@@Base+0x26ec>
   35150:	mov	r3, #0
   35154:	mov	r2, r3
   35158:	mov	r0, r3
   3515c:	mov	r1, r3
   35160:	b	35014 <__flatcc_fb_clear_parser@@Base+0x2630>
   35164:	add	r3, fp, r3
   35168:	str	r4, [r8, r2, lsl #2]
   3516c:	ldr	r2, [r3, #204]	; 0xcc
   35170:	cmp	r2, #0
   35174:	bne	355f4 <__flatcc_fb_clear_parser@@Base+0x2c10>
   35178:	ldrh	r3, [r4, #16]
   3517c:	cmp	r3, #0
   35180:	beq	350d0 <__flatcc_fb_clear_parser@@Base+0x26ec>
   35184:	ldr	r1, [r4, #4]
   35188:	mov	r3, r2
   3518c:	str	r2, [sp, #4]
   35190:	str	r2, [sp]
   35194:	mov	r0, r6
   35198:	ldr	r2, [sp, #8]
   3519c:	bl	2e224 <__flatcc_error_report@@Base>
   351a0:	b	350d0 <__flatcc_fb_clear_parser@@Base+0x26ec>
   351a4:	cmp	r4, #0
   351a8:	beq	351cc <__flatcc_fb_clear_parser@@Base+0x27e8>
   351ac:	ldr	r1, [r4, #4]
   351b0:	mov	r3, r2
   351b4:	str	r2, [sp, #4]
   351b8:	str	r2, [sp]
   351bc:	ldr	r2, [pc, #2812]	; 35cc0 <__flatcc_fb_clear_parser@@Base+0x32dc>
   351c0:	mov	r0, r6
   351c4:	add	r2, pc, r2
   351c8:	bl	2e224 <__flatcc_error_report@@Base>
   351cc:	and	r3, r7, #32
   351d0:	cmp	r3, #0
   351d4:	strh	r7, [sl, #92]	; 0x5c
   351d8:	streq	r3, [sp, #8]
   351dc:	beq	351f4 <__flatcc_fb_clear_parser@@Base+0x2810>
   351e0:	mov	r2, #0
   351e4:	mov	r3, #0
   351e8:	mov	r1, #1
   351ec:	str	r1, [sp, #8]
   351f0:	strd	r2, [sp, #64]	; 0x40
   351f4:	ldr	r2, [sl, #40]	; 0x28
   351f8:	cmp	r2, #5
   351fc:	bne	3559c <__flatcc_fb_clear_parser@@Base+0x2bb8>
   35200:	add	r8, sp, #64	; 0x40
   35204:	mov	r2, #0
   35208:	mov	r3, #6
   3520c:	strb	r2, [sp, #64]	; 0x40
   35210:	strh	r3, [sp, #72]	; 0x48
   35214:	ldm	r8, {r0, r1, r2, r3}
   35218:	add	ip, sp, #80	; 0x50
   3521c:	ldr	r5, [sl, #20]
   35220:	str	ip, [sp, #12]
   35224:	cmp	r5, #0
   35228:	stm	ip, {r0, r1, r2, r3}
   3522c:	beq	35388 <__flatcc_fb_clear_parser@@Base+0x29a4>
   35230:	ldr	r3, [pc, #2700]	; 35cc4 <__flatcc_fb_clear_parser@@Base+0x32e0>
   35234:	add	fp, sl, #56	; 0x38
   35238:	add	r3, pc, r3
   3523c:	str	r3, [sp, #16]
   35240:	ldr	r3, [pc, #2688]	; 35cc8 <__flatcc_fb_clear_parser@@Base+0x32e4>
   35244:	mov	r4, #1
   35248:	add	r3, pc, r3
   3524c:	str	r3, [sp, #20]
   35250:	ldr	r3, [pc, #2676]	; 35ccc <__flatcc_fb_clear_parser@@Base+0x32e8>
   35254:	add	r3, pc, r3
   35258:	str	r3, [sp, #24]
   3525c:	ldr	r3, [pc, #2668]	; 35cd0 <__flatcc_fb_clear_parser@@Base+0x32ec>
   35260:	add	r3, pc, r3
   35264:	str	r3, [sp, #28]
   35268:	ldr	r3, [pc, #2660]	; 35cd4 <__flatcc_fb_clear_parser@@Base+0x32f0>
   3526c:	add	r3, pc, r3
   35270:	str	r3, [sp, #32]
   35274:	ldr	r3, [pc, #2652]	; 35cd8 <__flatcc_fb_clear_parser@@Base+0x32f4>
   35278:	add	r3, pc, r3
   3527c:	str	r3, [sp, #36]	; 0x24
   35280:	b	352cc <__flatcc_fb_clear_parser@@Base+0x28e8>
   35284:	ldr	r3, [r0, #4]
   35288:	add	r2, r6, #68	; 0x44
   3528c:	cmp	r3, r2
   35290:	ldr	r1, [r5, #4]
   35294:	beq	35354 <__flatcc_fb_clear_parser@@Base+0x2970>
   35298:	mov	r2, #0
   3529c:	str	r2, [sp, #4]
   352a0:	str	r2, [sp]
   352a4:	ldr	r2, [pc, #2608]	; 35cdc <__flatcc_fb_clear_parser@@Base+0x32f8>
   352a8:	mov	r0, r6
   352ac:	add	r2, pc, r2
   352b0:	bl	2e224 <__flatcc_error_report@@Base>
   352b4:	mov	r3, #1
   352b8:	strh	r3, [r5, #24]
   352bc:	ldr	r5, [r5]
   352c0:	mov	r4, #0
   352c4:	cmp	r5, r4
   352c8:	beq	35388 <__flatcc_fb_clear_parser@@Base+0x29a4>
   352cc:	mov	r2, #1
   352d0:	mov	r1, r5
   352d4:	mov	r0, fp
   352d8:	bl	2c1c0 <fb_symbol_table_insert_item@@Base>
   352dc:	cmp	r0, #0
   352e0:	bne	35284 <__flatcc_fb_clear_parser@@Base+0x28a0>
   352e4:	ldrh	r3, [r5, #8]
   352e8:	cmp	r3, #5
   352ec:	bne	35950 <__flatcc_fb_clear_parser@@Base+0x2f6c>
   352f0:	ldr	r3, [r5, #64]	; 0x40
   352f4:	cmp	r3, #0
   352f8:	bne	35c1c <__flatcc_fb_clear_parser@@Base+0x3238>
   352fc:	cmp	r9, #4
   35300:	beq	35394 <__flatcc_fb_clear_parser@@Base+0x29b0>
   35304:	ldrh	r1, [r5, #56]	; 0x38
   35308:	eor	r7, r4, #1
   3530c:	cmp	r1, #0
   35310:	movne	r3, #0
   35314:	andeq	r3, r7, #1
   35318:	cmp	r3, #0
   3531c:	bne	353e4 <__flatcc_fb_clear_parser@@Base+0x2a00>
   35320:	ldr	r3, [sp, #8]
   35324:	cmp	r3, #0
   35328:	beq	35c64 <__flatcc_fb_clear_parser@@Base+0x3280>
   3532c:	cmp	r1, #0
   35330:	beq	354dc <__flatcc_fb_clear_parser@@Base+0x2af8>
   35334:	cmp	r1, #5
   35338:	bne	35b74 <__flatcc_fb_clear_parser@@Base+0x3190>
   3533c:	add	r3, r5, #48	; 0x30
   35340:	ldr	ip, [sl, #40]	; 0x28
   35344:	ldm	r3, {r0, r1, r2, r3}
   35348:	stm	r8, {r0, r1, r2, r3}
   3534c:	ldrd	r2, [sp, #64]	; 0x40
   35350:	b	354e4 <__flatcc_fb_clear_parser@@Base+0x2b00>
   35354:	ldr	r2, [pc, #2436]	; 35ce0 <__flatcc_fb_clear_parser@@Base+0x32fc>
   35358:	mov	r3, #0
   3535c:	str	r3, [sp, #4]
   35360:	str	r3, [sp]
   35364:	add	r2, pc, r2
   35368:	mov	r0, r6
   3536c:	bl	2e224 <__flatcc_error_report@@Base>
   35370:	mov	r3, #1
   35374:	strh	r3, [r5, #24]
   35378:	ldr	r5, [r5]
   3537c:	mov	r4, #0
   35380:	cmp	r5, r4
   35384:	bne	352cc <__flatcc_fb_clear_parser@@Base+0x28e8>
   35388:	mov	r0, #0
   3538c:	add	sp, sp, #148	; 0x94
   35390:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35394:	ldr	r1, [r5, #4]
   35398:	add	r2, r6, #68	; 0x44
   3539c:	cmp	r1, r2
   353a0:	beq	35780 <__flatcc_fb_clear_parser@@Base+0x2d9c>
   353a4:	ldrh	r2, [r5, #24]
   353a8:	cmp	r2, #10
   353ac:	beq	35698 <__flatcc_fb_clear_parser@@Base+0x2cb4>
   353b0:	cmp	r2, #12
   353b4:	beq	357fc <__flatcc_fb_clear_parser@@Base+0x2e18>
   353b8:	cmp	r2, #1
   353bc:	beq	352bc <__flatcc_fb_clear_parser@@Base+0x28d8>
   353c0:	ldr	r2, [pc, #2332]	; 35ce4 <__flatcc_fb_clear_parser@@Base+0x3300>
   353c4:	str	r3, [sp, #4]
   353c8:	str	r3, [sp]
   353cc:	add	r2, pc, r2
   353d0:	mov	r0, r6
   353d4:	bl	2e224 <__flatcc_error_report@@Base>
   353d8:	mov	r3, #1
   353dc:	strh	r3, [r5, #24]
   353e0:	b	352bc <__flatcc_fb_clear_parser@@Base+0x28d8>
   353e4:	ldrh	r3, [sp, #72]	; 0x48
   353e8:	cmp	r3, #5
   353ec:	beq	356d8 <__flatcc_fb_clear_parser@@Base+0x2cf4>
   353f0:	cmp	r3, #4
   353f4:	beq	35788 <__flatcc_fb_clear_parser@@Base+0x2da4>
   353f8:	cmp	r3, #6
   353fc:	beq	354bc <__flatcc_fb_clear_parser@@Base+0x2ad8>
   35400:	ldr	r3, [sp, #8]
   35404:	cmp	r3, #0
   35408:	bne	354dc <__flatcc_fb_clear_parser@@Base+0x2af8>
   3540c:	add	r4, r5, #48	; 0x30
   35410:	ldm	r8, {r0, r1, r2, r3}
   35414:	stm	r4, {r0, r1, r2, r3}
   35418:	cmp	r7, #0
   3541c:	beq	35458 <__flatcc_fb_clear_parser@@Base+0x2a74>
   35420:	ldr	r3, [r6, #180]	; 0xb4
   35424:	cmp	r3, #0
   35428:	beq	35458 <__flatcc_fb_clear_parser@@Base+0x2a74>
   3542c:	ldrh	r3, [sp, #72]	; 0x48
   35430:	cmp	r3, #5
   35434:	beq	35628 <__flatcc_fb_clear_parser@@Base+0x2c44>
   35438:	cmp	r3, #4
   3543c:	beq	35680 <__flatcc_fb_clear_parser@@Base+0x2c9c>
   35440:	cmp	r3, #6
   35444:	bne	35458 <__flatcc_fb_clear_parser@@Base+0x2a74>
   35448:	ldrb	r2, [sp, #64]	; 0x40
   3544c:	ldrb	r3, [sp, #80]	; 0x50
   35450:	cmp	r2, r3
   35454:	bls	35b9c <__flatcc_fb_clear_parser@@Base+0x31b8>
   35458:	ldm	r8, {r0, r1, r2, r3}
   3545c:	ldr	ip, [sp, #12]
   35460:	stm	ip, {r0, r1, r2, r3}
   35464:	mov	r1, r4
   35468:	mov	r2, #1
   3546c:	add	r0, sl, #72	; 0x48
   35470:	bl	3e780 <fb_value_set_insert_item@@Base>
   35474:	cmp	r0, #0
   35478:	beq	35490 <__flatcc_fb_clear_parser@@Base+0x2aac>
   3547c:	cmp	r9, #4
   35480:	beq	359cc <__flatcc_fb_clear_parser@@Base+0x2fe8>
   35484:	ldrh	r3, [r5, #10]
   35488:	orr	r3, r3, #4
   3548c:	strh	r3, [r5, #10]
   35490:	ldr	r3, [r5, #64]	; 0x40
   35494:	cmp	r3, #0
   35498:	beq	352bc <__flatcc_fb_clear_parser@@Base+0x28d8>
   3549c:	mov	r3, #0
   354a0:	ldr	r1, [r5, #4]
   354a4:	ldr	r2, [sp, #16]
   354a8:	str	r3, [sp, #4]
   354ac:	str	r3, [sp]
   354b0:	mov	r0, r6
   354b4:	bl	2e224 <__flatcc_error_report@@Base>
   354b8:	b	352bc <__flatcc_fb_clear_parser@@Base+0x28d8>
   354bc:	ldrb	r4, [sp, #64]	; 0x40
   354c0:	cmp	r4, #1
   354c4:	beq	35b24 <__flatcc_fb_clear_parser@@Base+0x3140>
   354c8:	ldr	r3, [sp, #8]
   354cc:	cmp	r3, #0
   354d0:	mov	r3, #1
   354d4:	strb	r3, [sp, #64]	; 0x40
   354d8:	beq	3540c <__flatcc_fb_clear_parser@@Base+0x2a28>
   354dc:	ldr	ip, [sl, #40]	; 0x28
   354e0:	ldrd	r2, [sp, #64]	; 0x40
   354e4:	ldr	r1, [sp, #20]
   354e8:	add	r1, r1, ip, lsl #2
   354ec:	ldr	r0, [r1, #140]	; 0x8c
   354f0:	mov	r1, #0
   354f4:	cmp	r3, r1
   354f8:	lsl	r0, r0, #3
   354fc:	cmpeq	r2, r0
   35500:	bcs	35ad8 <__flatcc_fb_clear_parser@@Base+0x30f4>
   35504:	mov	r1, #1
   35508:	sub	r3, r2, #32
   3550c:	rsb	lr, r2, #32
   35510:	lsl	r3, r1, r3
   35514:	lsl	r0, r1, r2
   35518:	orr	r3, r3, r1, lsr lr
   3551c:	add	r4, r5, #48	; 0x30
   35520:	mov	r1, #5
   35524:	mov	r2, ip
   35528:	str	r3, [r5, #52]	; 0x34
   3552c:	str	r0, [r5, #48]	; 0x30
   35530:	strh	r1, [r5, #56]	; 0x38
   35534:	mov	r3, r4
   35538:	mov	r1, r5
   3553c:	mov	r0, r6
   35540:	bl	37ab4 <__flatcc_fb_coerce_scalar_type@@Base>
   35544:	mov	r2, #0
   35548:	cmp	r0, r2
   3554c:	beq	35418 <__flatcc_fb_clear_parser@@Base+0x2a34>
   35550:	ldr	r1, [r5, #4]
   35554:	mov	r3, r2
   35558:	str	r2, [sp, #4]
   3555c:	str	r2, [sp]
   35560:	ldr	r2, [pc, #1920]	; 35ce8 <__flatcc_fb_clear_parser@@Base+0x3304>
   35564:	mov	r0, r6
   35568:	add	r2, pc, r2
   3556c:	bl	2e224 <__flatcc_error_report@@Base>
   35570:	mvn	r0, #0
   35574:	b	3538c <__flatcc_fb_clear_parser@@Base+0x29a8>
   35578:	ldr	r2, [pc, #1900]	; 35cec <__flatcc_fb_clear_parser@@Base+0x3308>
   3557c:	ldr	r1, [r4, #4]
   35580:	mov	r3, r0
   35584:	str	r0, [sp, #4]
   35588:	str	r0, [sp]
   3558c:	add	r2, pc, r2
   35590:	mov	r0, r6
   35594:	bl	2e224 <__flatcc_error_report@@Base>
   35598:	b	350d0 <__flatcc_fb_clear_parser@@Base+0x26ec>
   3559c:	mov	r0, #0
   355a0:	mov	r1, #0
   355a4:	add	r8, sp, #64	; 0x40
   355a8:	strd	r0, [sp, #64]	; 0x40
   355ac:	mov	ip, #4
   355b0:	mov	r3, r8
   355b4:	mov	r1, sl
   355b8:	mov	r0, r6
   355bc:	strh	ip, [sp, #72]	; 0x48
   355c0:	bl	37ab4 <__flatcc_fb_coerce_scalar_type@@Base>
   355c4:	cmp	r0, #0
   355c8:	beq	35214 <__flatcc_fb_clear_parser@@Base+0x2830>
   355cc:	ldr	r2, [pc, #1820]	; 35cf0 <__flatcc_fb_clear_parser@@Base+0x330c>
   355d0:	mov	r3, #0
   355d4:	mov	r0, r6
   355d8:	str	r3, [sp, #4]
   355dc:	str	r3, [sp]
   355e0:	mov	r1, r3
   355e4:	add	r2, pc, r2
   355e8:	bl	2e224 <__flatcc_error_report@@Base>
   355ec:	mvn	r0, #0
   355f0:	b	3538c <__flatcc_fb_clear_parser@@Base+0x29a8>
   355f4:	cmp	r2, #2
   355f8:	bne	35704 <__flatcc_fb_clear_parser@@Base+0x2d20>
   355fc:	ldrh	r3, [r4, #16]
   35600:	cmp	r3, #2
   35604:	beq	350d0 <__flatcc_fb_clear_parser@@Base+0x26ec>
   35608:	ldr	r1, [r4, #4]
   3560c:	mov	r3, r0
   35610:	str	r0, [sp, #4]
   35614:	str	r0, [sp]
   35618:	ldr	r2, [sp, #16]
   3561c:	mov	r0, r6
   35620:	bl	2e224 <__flatcc_error_report@@Base>
   35624:	b	350d0 <__flatcc_fb_clear_parser@@Base+0x26ec>
   35628:	ldrd	r0, [sp, #64]	; 0x40
   3562c:	ldrd	r2, [sp, #80]	; 0x50
   35630:	cmp	r1, r3
   35634:	cmpeq	r0, r2
   35638:	bhi	35458 <__flatcc_fb_clear_parser@@Base+0x2a74>
   3563c:	cmp	r9, #4
   35640:	ldr	r1, [r5, #4]
   35644:	bne	35654 <__flatcc_fb_clear_parser@@Base+0x2c70>
   35648:	ldrd	r2, [sp, #80]	; 0x50
   3564c:	orrs	r3, r2, r3
   35650:	beq	35bf0 <__flatcc_fb_clear_parser@@Base+0x320c>
   35654:	ldr	r2, [pc, #1688]	; 35cf4 <__flatcc_fb_clear_parser@@Base+0x3310>
   35658:	mov	r3, #0
   3565c:	mov	r0, r6
   35660:	str	r3, [sp, #4]
   35664:	str	r3, [sp]
   35668:	add	r2, pc, r2
   3566c:	bl	2e224 <__flatcc_error_report@@Base>
   35670:	mov	r3, #1
   35674:	strh	r3, [r5, #56]	; 0x38
   35678:	mvn	r0, #0
   3567c:	b	3538c <__flatcc_fb_clear_parser@@Base+0x29a8>
   35680:	ldrd	r2, [sp, #64]	; 0x40
   35684:	ldrd	r0, [sp, #80]	; 0x50
   35688:	cmp	r0, r2
   3568c:	sbcs	r3, r1, r3
   35690:	blt	35458 <__flatcc_fb_clear_parser@@Base+0x2a74>
   35694:	b	3563c <__flatcc_fb_clear_parser@@Base+0x2c58>
   35698:	mov	r2, #0
   3569c:	mov	r3, #0
   356a0:	strd	r2, [r5, #88]	; 0x58
   356a4:	b	35304 <__flatcc_fb_clear_parser@@Base+0x2920>
   356a8:	ldrh	r3, [r1, #48]	; 0x30
   356ac:	cmp	r3, #0
   356b0:	bne	35bcc <__flatcc_fb_clear_parser@@Base+0x31e8>
   356b4:	mov	r0, #1
   356b8:	mov	r1, #0
   356bc:	mov	r2, #8
   356c0:	mov	r3, #1
   356c4:	str	r9, [sl, #40]	; 0x28
   356c8:	strd	r0, [sl, #112]	; 0x70
   356cc:	strh	r2, [sl, #48]	; 0x30
   356d0:	strh	r3, [sl, #104]	; 0x68
   356d4:	b	35024 <__flatcc_fb_clear_parser@@Base+0x2640>
   356d8:	ldr	ip, [sl, #40]	; 0x28
   356dc:	ldrd	r2, [sp, #64]	; 0x40
   356e0:	cmp	ip, #6
   356e4:	beq	35984 <__flatcc_fb_clear_parser@@Base+0x2fa0>
   356e8:	adds	r2, r2, #1
   356ec:	ldr	r1, [sp, #8]
   356f0:	adc	r3, r3, #0
   356f4:	cmp	r1, #0
   356f8:	strd	r2, [sp, #64]	; 0x40
   356fc:	bne	354e4 <__flatcc_fb_clear_parser@@Base+0x2b00>
   35700:	b	3540c <__flatcc_fb_clear_parser@@Base+0x2a28>
   35704:	cmp	r2, #5
   35708:	bne	357c4 <__flatcc_fb_clear_parser@@Base+0x2de0>
   3570c:	ldrh	r3, [r4, #16]
   35710:	cmp	r3, #5
   35714:	beq	350d0 <__flatcc_fb_clear_parser@@Base+0x26ec>
   35718:	ldr	r1, [r4, #4]
   3571c:	mov	r3, r0
   35720:	str	r0, [sp, #4]
   35724:	str	r0, [sp]
   35728:	ldr	r2, [sp, #12]
   3572c:	mov	r0, r6
   35730:	bl	2e224 <__flatcc_error_report@@Base>
   35734:	b	350d0 <__flatcc_fb_clear_parser@@Base+0x26ec>
   35738:	ldr	r1, [r3, #16]
   3573c:	ldr	r0, [sp, #56]	; 0x38
   35740:	str	r3, [sp, #40]	; 0x28
   35744:	bl	2bb18 <ptr_set_find_item@@Base>
   35748:	ldr	r3, [sp, #40]	; 0x28
   3574c:	cmp	r0, #0
   35750:	beq	35898 <__flatcc_fb_clear_parser@@Base+0x2eb4>
   35754:	ldr	r5, [sp, #44]	; 0x2c
   35758:	ldr	r4, [sp, #60]	; 0x3c
   3575c:	ldr	r8, [sp, #48]	; 0x30
   35760:	ldrh	r2, [r3, #8]
   35764:	cmp	r2, #1
   35768:	bhi	35a74 <__flatcc_fb_clear_parser@@Base+0x3090>
   3576c:	mov	r0, #0
   35770:	mov	r1, #0
   35774:	str	r3, [r5, #16]
   35778:	mov	r3, #14
   3577c:	strd	r0, [r5, #88]	; 0x58
   35780:	strh	r3, [r5, #24]
   35784:	b	35304 <__flatcc_fb_clear_parser@@Base+0x2920>
   35788:	ldr	ip, [sl, #40]	; 0x28
   3578c:	ldrd	r2, [sp, #64]	; 0x40
   35790:	cmp	ip, #6
   35794:	bne	356e8 <__flatcc_fb_clear_parser@@Base+0x2d04>
   35798:	mvn	r1, #-2147483648	; 0x80000000
   3579c:	mvn	r0, #0
   357a0:	cmp	r3, r1
   357a4:	cmpeq	r2, r0
   357a8:	bne	356e8 <__flatcc_fb_clear_parser@@Base+0x2d04>
   357ac:	mov	r3, #0
   357b0:	ldr	r1, [r5, #4]
   357b4:	ldr	r2, [sp, #28]
   357b8:	str	r3, [sp, #4]
   357bc:	str	r3, [sp]
   357c0:	b	359ac <__flatcc_fb_clear_parser@@Base+0x2fc8>
   357c4:	cmp	r2, #4
   357c8:	bne	35aa4 <__flatcc_fb_clear_parser@@Base+0x30c0>
   357cc:	ldrh	r3, [r4, #16]
   357d0:	sub	r3, r3, #4
   357d4:	cmp	r3, #1
   357d8:	bls	350d0 <__flatcc_fb_clear_parser@@Base+0x26ec>
   357dc:	ldr	r1, [r4, #4]
   357e0:	mov	r3, r0
   357e4:	str	r0, [sp, #4]
   357e8:	str	r0, [sp]
   357ec:	ldr	r2, [sp, #24]
   357f0:	mov	r0, r6
   357f4:	bl	2e224 <__flatcc_error_report@@Base>
   357f8:	b	350d0 <__flatcc_fb_clear_parser@@Base+0x26ec>
   357fc:	ldr	ip, [r5, #16]
   35800:	ldr	r2, [sl, #12]
   35804:	cmp	ip, #0
   35808:	mov	r7, r2
   3580c:	beq	35928 <__flatcc_fb_clear_parser@@Base+0x2f44>
   35810:	mov	r0, ip
   35814:	b	35820 <__flatcc_fb_clear_parser@@Base+0x2e3c>
   35818:	mov	r3, r2
   3581c:	mov	r0, r1
   35820:	ldr	r1, [r0]
   35824:	add	r2, r3, #1
   35828:	cmp	r1, #0
   3582c:	bne	35818 <__flatcc_fb_clear_parser@@Base+0x2e34>
   35830:	mov	lr, r0
   35834:	str	r0, [sp, #40]	; 0x28
   35838:	adds	r0, r7, #0
   3583c:	movne	r0, #1
   35840:	cmp	r2, #1
   35844:	movne	r0, #0
   35848:	cmp	r0, #0
   3584c:	beq	359fc <__flatcc_fb_clear_parser@@Base+0x3018>
   35850:	add	r3, r6, #524	; 0x20c
   35854:	str	r3, [sp, #56]	; 0x38
   35858:	add	r3, r6, #352	; 0x160
   3585c:	str	r5, [sp, #44]	; 0x2c
   35860:	str	r4, [sp, #60]	; 0x3c
   35864:	mov	r5, lr
   35868:	mov	r4, r3
   3586c:	str	r1, [sp, #52]	; 0x34
   35870:	str	r8, [sp, #48]	; 0x30
   35874:	ldr	r3, [r5, #4]
   35878:	add	r0, r7, #4
   3587c:	ldm	r3, {r1, r2}
   35880:	bl	2c1e8 <fb_symbol_table_find@@Base>
   35884:	subs	r3, r0, #0
   35888:	beq	35898 <__flatcc_fb_clear_parser@@Base+0x2eb4>
   3588c:	ldrh	r2, [r3, #8]
   35890:	cmp	r2, #4
   35894:	bls	35738 <__flatcc_fb_clear_parser@@Base+0x2d54>
   35898:	ldr	r2, [r7]
   3589c:	cmp	r2, #0
   358a0:	beq	3591c <__flatcc_fb_clear_parser@@Base+0x2f38>
   358a4:	mov	r3, #0
   358a8:	ldr	r2, [r2]
   358ac:	add	r3, r3, #1
   358b0:	cmp	r2, #0
   358b4:	bne	358a8 <__flatcc_fb_clear_parser@@Base+0x2ec4>
   358b8:	rsb	r8, r3, #1
   358bc:	b	358ec <__flatcc_fb_clear_parser@@Base+0x2f08>
   358c0:	cmp	r4, #0
   358c4:	beq	358e8 <__flatcc_fb_clear_parser@@Base+0x2f04>
   358c8:	ldr	r0, [r6, #412]	; 0x19c
   358cc:	cmp	r0, #0
   358d0:	beq	358e8 <__flatcc_fb_clear_parser@@Base+0x2f04>
   358d4:	mov	r2, r8
   358d8:	ldr	r1, [r7]
   358dc:	bl	2d13c <fb_scope_table_find@@Base>
   358e0:	cmp	r0, #0
   358e4:	bne	35948 <__flatcc_fb_clear_parser@@Base+0x2f64>
   358e8:	add	r8, r8, #1
   358ec:	cmp	r8, #0
   358f0:	bne	358c0 <__flatcc_fb_clear_parser@@Base+0x2edc>
   358f4:	cmp	r4, #0
   358f8:	beq	3591c <__flatcc_fb_clear_parser@@Base+0x2f38>
   358fc:	ldr	r0, [r6, #412]	; 0x19c
   35900:	cmp	r0, #0
   35904:	beq	3591c <__flatcc_fb_clear_parser@@Base+0x2f38>
   35908:	mov	r1, r8
   3590c:	ldr	r2, [sp, #52]	; 0x34
   35910:	bl	2d13c <fb_scope_table_find@@Base>
   35914:	subs	r7, r0, #0
   35918:	bne	35874 <__flatcc_fb_clear_parser@@Base+0x2e90>
   3591c:	ldr	r5, [sp, #44]	; 0x2c
   35920:	ldr	r8, [sp, #48]	; 0x30
   35924:	ldr	ip, [r5, #16]
   35928:	mov	r3, r5
   3592c:	mov	r1, ip
   35930:	ldr	r2, [sp, #36]	; 0x24
   35934:	mov	r0, r6
   35938:	bl	2f7f4 <error_ref_sym@@Base>
   3593c:	mov	r3, #1
   35940:	strh	r3, [r5, #24]
   35944:	b	352bc <__flatcc_fb_clear_parser@@Base+0x28d8>
   35948:	mov	r7, r0
   3594c:	b	35874 <__flatcc_fb_clear_parser@@Base+0x2e90>
   35950:	ldr	r2, [pc, #928]	; 35cf8 <__flatcc_fb_clear_parser@@Base+0x3314>
   35954:	ldr	r1, [r5, #4]
   35958:	mov	r3, r0
   3595c:	str	r0, [sp, #4]
   35960:	str	r0, [sp]
   35964:	add	r2, pc, r2
   35968:	mov	r0, r6
   3596c:	bl	2e224 <__flatcc_error_report@@Base>
   35970:	mvn	r0, #0
   35974:	b	3538c <__flatcc_fb_clear_parser@@Base+0x29a8>
   35978:	strh	r4, [sl, #92]	; 0x5c
   3597c:	str	r4, [sp, #8]
   35980:	b	351f4 <__flatcc_fb_clear_parser@@Base+0x2810>
   35984:	mvn	r1, #0
   35988:	mvn	r0, #0
   3598c:	cmp	r3, r1
   35990:	cmpeq	r2, r0
   35994:	bne	356e8 <__flatcc_fb_clear_parser@@Base+0x2d04>
   35998:	ldr	r2, [sp, #32]
   3599c:	mov	r3, #0
   359a0:	ldr	r1, [r5, #4]
   359a4:	str	r3, [sp, #4]
   359a8:	str	r3, [sp]
   359ac:	mov	r0, r6
   359b0:	bl	2e224 <__flatcc_error_report@@Base>
   359b4:	ldrd	r2, [sp, #64]	; 0x40
   359b8:	ldrh	r1, [r5, #56]	; 0x38
   359bc:	adds	r2, r2, #1
   359c0:	adc	r3, r3, #0
   359c4:	strd	r2, [sp, #64]	; 0x40
   359c8:	b	35320 <__flatcc_fb_clear_parser@@Base+0x293c>
   359cc:	ldr	r2, [pc, #808]	; 35cfc <__flatcc_fb_clear_parser@@Base+0x3318>
   359d0:	mov	r3, #0
   359d4:	ldr	r1, [r5, #4]
   359d8:	mov	r0, r6
   359dc:	str	r3, [sp, #4]
   359e0:	str	r3, [sp]
   359e4:	add	r2, pc, r2
   359e8:	bl	2e224 <__flatcc_error_report@@Base>
   359ec:	mov	r3, #1
   359f0:	strh	r3, [r5, #56]	; 0x38
   359f4:	mvn	r0, #0
   359f8:	b	3538c <__flatcc_fb_clear_parser@@Base+0x29a8>
   359fc:	cmp	r2, #1
   35a00:	moveq	r1, r0
   35a04:	movne	r1, ip
   35a08:	cmn	r6, #352	; 0x160
   35a0c:	beq	35928 <__flatcc_fb_clear_parser@@Base+0x2f44>
   35a10:	ldr	r0, [r6, #412]	; 0x19c
   35a14:	cmp	r0, #0
   35a18:	beq	35928 <__flatcc_fb_clear_parser@@Base+0x2f44>
   35a1c:	rsb	r2, r3, #0
   35a20:	bl	2d13c <fb_scope_table_find@@Base>
   35a24:	cmp	r0, #0
   35a28:	beq	35924 <__flatcc_fb_clear_parser@@Base+0x2f40>
   35a2c:	ldr	r3, [sp, #40]	; 0x28
   35a30:	add	r0, r0, #4
   35a34:	ldr	r3, [r3, #4]
   35a38:	ldm	r3, {r1, r2}
   35a3c:	bl	2c1e8 <fb_symbol_table_find@@Base>
   35a40:	subs	r3, r0, #0
   35a44:	beq	35924 <__flatcc_fb_clear_parser@@Base+0x2f40>
   35a48:	ldrh	r2, [r3, #8]
   35a4c:	cmp	r2, #4
   35a50:	bhi	35924 <__flatcc_fb_clear_parser@@Base+0x2f40>
   35a54:	ldr	r1, [r3, #16]
   35a58:	add	r0, r6, #524	; 0x20c
   35a5c:	str	r3, [sp, #40]	; 0x28
   35a60:	bl	2bb18 <ptr_set_find_item@@Base>
   35a64:	ldr	r3, [sp, #40]	; 0x28
   35a68:	cmp	r0, #0
   35a6c:	bne	35760 <__flatcc_fb_clear_parser@@Base+0x2d7c>
   35a70:	b	35924 <__flatcc_fb_clear_parser@@Base+0x2f40>
   35a74:	mov	r2, #0
   35a78:	ldr	r3, [r3, #4]
   35a7c:	ldr	r1, [r5, #4]
   35a80:	str	r2, [sp, #4]
   35a84:	str	r2, [sp]
   35a88:	ldr	r2, [pc, #624]	; 35d00 <__flatcc_fb_clear_parser@@Base+0x331c>
   35a8c:	mov	r0, r6
   35a90:	add	r2, pc, r2
   35a94:	bl	2e224 <__flatcc_error_report@@Base>
   35a98:	mov	r3, #1
   35a9c:	strh	r3, [r5, #24]
   35aa0:	b	352bc <__flatcc_fb_clear_parser@@Base+0x28d8>
   35aa4:	cmp	r2, #6
   35aa8:	bne	350d0 <__flatcc_fb_clear_parser@@Base+0x26ec>
   35aac:	ldrh	r3, [r4, #16]
   35ab0:	cmp	r3, #6
   35ab4:	beq	350d0 <__flatcc_fb_clear_parser@@Base+0x26ec>
   35ab8:	mov	r3, #0
   35abc:	ldr	r1, [r4, #4]
   35ac0:	ldr	r2, [sp, #20]
   35ac4:	str	r3, [sp, #4]
   35ac8:	str	r3, [sp]
   35acc:	mov	r0, r6
   35ad0:	bl	2e224 <__flatcc_error_report@@Base>
   35ad4:	b	350d0 <__flatcc_fb_clear_parser@@Base+0x26ec>
   35ad8:	ldr	r2, [pc, #548]	; 35d04 <__flatcc_fb_clear_parser@@Base+0x3320>
   35adc:	mov	r3, #0
   35ae0:	ldr	r1, [r5, #4]
   35ae4:	mov	r0, r6
   35ae8:	str	r3, [sp, #4]
   35aec:	str	r3, [sp]
   35af0:	add	r2, pc, r2
   35af4:	bl	2e224 <__flatcc_error_report@@Base>
   35af8:	mvn	r0, #0
   35afc:	b	3538c <__flatcc_fb_clear_parser@@Base+0x29a8>
   35b00:	ldr	r2, [pc, #512]	; 35d08 <__flatcc_fb_clear_parser@@Base+0x3324>
   35b04:	mov	r3, #0
   35b08:	ldr	r1, [r1, #4]
   35b0c:	add	r2, pc, r2
   35b10:	str	r3, [sp, #4]
   35b14:	str	r3, [sp]
   35b18:	bl	2e224 <__flatcc_error_report@@Base>
   35b1c:	mvn	r0, #0
   35b20:	b	3538c <__flatcc_fb_clear_parser@@Base+0x29a8>
   35b24:	mov	r3, #0
   35b28:	ldr	r1, [r5, #4]
   35b2c:	ldr	r2, [sp, #24]
   35b30:	str	r3, [sp, #4]
   35b34:	str	r3, [sp]
   35b38:	mov	r0, r6
   35b3c:	bl	2e224 <__flatcc_error_report@@Base>
   35b40:	ldrh	r1, [r5, #56]	; 0x38
   35b44:	strb	r4, [sp, #64]	; 0x40
   35b48:	b	35320 <__flatcc_fb_clear_parser@@Base+0x293c>
   35b4c:	mov	r2, #1
   35b50:	ldr	r1, [r1, #4]
   35b54:	str	r3, [sp, #4]
   35b58:	str	r3, [sp]
   35b5c:	strh	r2, [sl, #48]	; 0x30
   35b60:	ldr	r2, [pc, #420]	; 35d0c <__flatcc_fb_clear_parser@@Base+0x3328>
   35b64:	add	r2, pc, r2
   35b68:	bl	2e224 <__flatcc_error_report@@Base>
   35b6c:	mvn	r0, #0
   35b70:	b	3538c <__flatcc_fb_clear_parser@@Base+0x29a8>
   35b74:	ldr	r2, [pc, #404]	; 35d10 <__flatcc_fb_clear_parser@@Base+0x332c>
   35b78:	mov	r3, #0
   35b7c:	ldr	r1, [r5, #4]
   35b80:	mov	r0, r6
   35b84:	str	r3, [sp, #4]
   35b88:	str	r3, [sp]
   35b8c:	add	r2, pc, r2
   35b90:	bl	2e224 <__flatcc_error_report@@Base>
   35b94:	mvn	r0, #0
   35b98:	b	3538c <__flatcc_fb_clear_parser@@Base+0x29a8>
   35b9c:	ldr	r2, [pc, #368]	; 35d14 <__flatcc_fb_clear_parser@@Base+0x3330>
   35ba0:	mov	r3, #0
   35ba4:	ldr	r1, [r5, #4]
   35ba8:	mov	r0, r6
   35bac:	str	r3, [sp, #4]
   35bb0:	str	r3, [sp]
   35bb4:	add	r2, pc, r2
   35bb8:	bl	2e224 <__flatcc_error_report@@Base>
   35bbc:	mov	r3, #1
   35bc0:	strh	r3, [r5, #56]	; 0x38
   35bc4:	mvn	r0, #0
   35bc8:	b	3538c <__flatcc_fb_clear_parser@@Base+0x29a8>
   35bcc:	ldr	r2, [pc, #324]	; 35d18 <__flatcc_fb_clear_parser@@Base+0x3334>
   35bd0:	mov	r3, #0
   35bd4:	ldr	r1, [r1, #4]
   35bd8:	add	r2, pc, r2
   35bdc:	str	r3, [sp, #4]
   35be0:	str	r3, [sp]
   35be4:	bl	2e224 <__flatcc_error_report@@Base>
   35be8:	mvn	r0, #0
   35bec:	b	3538c <__flatcc_fb_clear_parser@@Base+0x29a8>
   35bf0:	ldr	r2, [pc, #292]	; 35d1c <__flatcc_fb_clear_parser@@Base+0x3338>
   35bf4:	mov	r3, #0
   35bf8:	mov	r0, r6
   35bfc:	str	r3, [sp, #4]
   35c00:	str	r3, [sp]
   35c04:	add	r2, pc, r2
   35c08:	bl	2e224 <__flatcc_error_report@@Base>
   35c0c:	mov	r3, #1
   35c10:	strh	r3, [r5, #56]	; 0x38
   35c14:	mvn	r0, #0
   35c18:	b	3538c <__flatcc_fb_clear_parser@@Base+0x29a8>
   35c1c:	ldr	r3, [pc, #252]	; 35d20 <__flatcc_fb_clear_parser@@Base+0x333c>
   35c20:	ldr	r1, [pc, #252]	; 35d24 <__flatcc_fb_clear_parser@@Base+0x3340>
   35c24:	ldr	r0, [pc, #252]	; 35d28 <__flatcc_fb_clear_parser@@Base+0x3344>
   35c28:	add	r3, pc, r3
   35c2c:	ldr	r2, [pc, #248]	; 35d2c <__flatcc_fb_clear_parser@@Base+0x3348>
   35c30:	add	r3, r3, #272	; 0x110
   35c34:	add	r1, pc, r1
   35c38:	add	r0, pc, r0
   35c3c:	bl	14140 <__assert_fail@plt>
   35c40:	ldr	r3, [pc, #232]	; 35d30 <__flatcc_fb_clear_parser@@Base+0x334c>
   35c44:	ldr	r1, [pc, #232]	; 35d34 <__flatcc_fb_clear_parser@@Base+0x3350>
   35c48:	ldr	r0, [pc, #232]	; 35d38 <__flatcc_fb_clear_parser@@Base+0x3354>
   35c4c:	add	r3, pc, r3
   35c50:	ldr	r2, [pc, #228]	; 35d3c <__flatcc_fb_clear_parser@@Base+0x3358>
   35c54:	add	r3, r3, #272	; 0x110
   35c58:	add	r1, pc, r1
   35c5c:	add	r0, pc, r0
   35c60:	bl	14140 <__assert_fail@plt>
   35c64:	cmp	r1, #0
   35c68:	add	r4, r5, #48	; 0x30
   35c6c:	beq	35410 <__flatcc_fb_clear_parser@@Base+0x2a2c>
   35c70:	ldm	r4, {r0, r1, r2, r3}
   35c74:	stm	r8, {r0, r1, r2, r3}
   35c78:	mov	r3, r8
   35c7c:	ldr	r2, [sl, #40]	; 0x28
   35c80:	mov	r1, r5
   35c84:	mov	r0, r6
   35c88:	bl	37ab4 <__flatcc_fb_coerce_scalar_type@@Base>
   35c8c:	cmp	r0, #0
   35c90:	beq	35410 <__flatcc_fb_clear_parser@@Base+0x2a2c>
   35c94:	mvn	r0, #0
   35c98:	b	3538c <__flatcc_fb_clear_parser@@Base+0x29a8>
   35c9c:	andeq	r3, r2, r0, asr #13
   35ca0:	andeq	r3, r2, r8, lsl sp
   35ca4:	andeq	r3, r2, r4, ror #12
   35ca8:	andeq	r3, r2, r4, ror #25
   35cac:	andeq	r3, r2, r8, lsr #25
   35cb0:	andeq	r3, r2, r4, ror ip
   35cb4:	andeq	r3, r2, r0, asr #24
   35cb8:	andeq	r3, r2, r4, ror #23
   35cbc:	andeq	r3, r2, r0, lsr fp
   35cc0:	andeq	r3, r2, ip, asr #23
   35cc4:	andeq	r4, r2, ip, ror #12
   35cc8:	andeq	r3, r2, r4, ror r4
   35ccc:			; <UNDEFINED> instruction: 0x000244b8
   35cd0:	muleq	r2, r0, r4
   35cd4:	andeq	r4, r2, r4, ror #8
   35cd8:	andeq	r4, r2, r0, ror #7
   35cdc:	andeq	r4, r2, r4, lsl #6
   35ce0:	andeq	r4, r2, ip, lsr #4
   35ce4:	andeq	r4, r2, r4, asr #4
   35ce8:	andeq	r4, r2, r0, lsl r2
   35cec:	andeq	r3, r2, r4, asr #13
   35cf0:	andeq	r3, r2, ip, ror #30
   35cf4:	andeq	r4, r2, r8, lsl #3
   35cf8:	andeq	r3, r2, r8, ror #24
   35cfc:	andeq	r3, r2, r4, ror lr
   35d00:	strdeq	r3, [r2], -r8
   35d04:	andeq	r3, r2, r8, lsl #25
   35d08:	ldrdeq	r3, [r2], -r0
   35d0c:	andeq	r3, r2, r0, ror #18
   35d10:			; <UNDEFINED> instruction: 0x00023bb0
   35d14:	andeq	r3, r2, r4, ror #24
   35d18:	andeq	r3, r2, r8, lsr r9
   35d1c:	andeq	r3, r2, r8, lsr #23
   35d20:	muleq	r2, r4, sl
   35d24:	andeq	r2, r2, ip, ror #23
   35d28:	andeq	r3, r2, r0, asr #19
   35d2c:	andeq	r0, r0, r3, lsr #10
   35d30:	andeq	r2, r2, r0, ror sl
   35d34:	andeq	r2, r2, r8, asr #23
   35d38:	andeq	r3, r2, r8, asr #16
   35d3c:	andeq	r0, r0, sp, asr #9

00035d40 <__flatcc_fb_build_schema@@Base>:
   35d40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35d44:	add	r3, r0, #524	; 0x20c
   35d48:	sub	sp, sp, #156	; 0x9c
   35d4c:	add	r9, r0, #352	; 0x160
   35d50:	mov	fp, r0
   35d54:	mov	r1, r9
   35d58:	mov	r0, r3
   35d5c:	str	r3, [sp, #12]
   35d60:	bl	2bb18 <ptr_set_find_item@@Base>
   35d64:	ldr	r3, [pc, #4040]	; 36d34 <__flatcc_fb_build_schema@@Base+0xff4>
   35d68:	add	r3, pc, r3
   35d6c:	str	r3, [sp, #8]
   35d70:	cmp	r0, #0
   35d74:	beq	3797c <__flatcc_fb_build_schema@@Base+0x1c3c>
   35d78:	ldr	r5, [fp, #392]	; 0x188
   35d7c:	cmp	r5, #0
   35d80:	beq	35e9c <__flatcc_fb_build_schema@@Base+0x15c>
   35d84:	ldr	sl, [pc, #4012]	; 36d38 <__flatcc_fb_build_schema@@Base+0xff8>
   35d88:	ldr	r4, [pc, #4012]	; 36d3c <__flatcc_fb_build_schema@@Base+0xffc>
   35d8c:	add	sl, pc, sl
   35d90:	ldr	r6, [pc, #4008]	; 36d40 <__flatcc_fb_build_schema@@Base+0x1000>
   35d94:	mov	r8, #1
   35d98:	mov	r7, #0
   35d9c:	b	35dac <__flatcc_fb_build_schema@@Base+0x6c>
   35da0:	ldr	r5, [r5]
   35da4:	cmp	r5, #0
   35da8:	beq	35e9c <__flatcc_fb_build_schema@@Base+0x15c>
   35dac:	ldrh	r3, [r5, #8]
   35db0:	cmp	r3, #4
   35db4:	bhi	35da0 <__flatcc_fb_build_schema@@Base+0x60>
   35db8:	ldr	r0, [r5, #12]
   35dbc:	cmp	r0, #0
   35dc0:	beq	36ce4 <__flatcc_fb_build_schema@@Base+0xfa4>
   35dc4:	ldr	ip, [r0]
   35dc8:	cmp	ip, #0
   35dcc:	beq	36d00 <__flatcc_fb_build_schema@@Base+0xfc0>
   35dd0:	ldr	r3, [pc, #3944]	; 36d40 <__flatcc_fb_build_schema@@Base+0x1000>
   35dd4:	ldr	r2, [ip, #4]
   35dd8:	ldr	r1, [r2, #4]
   35ddc:	ldr	r2, [r2]
   35de0:	cmp	r1, #0
   35de4:	beq	35e00 <__flatcc_fb_build_schema@@Base+0xc0>
   35de8:	add	r1, r2, r1
   35dec:	ldrb	lr, [r2], #1
   35df0:	eor	r3, r3, lr
   35df4:	cmp	r2, r1
   35df8:	mul	r3, r4, r3
   35dfc:	bne	35dec <__flatcc_fb_build_schema@@Base+0xac>
   35e00:	ldr	ip, [ip]
   35e04:	eor	r3, r3, #46	; 0x2e
   35e08:	cmp	ip, #0
   35e0c:	mul	r3, r4, r3
   35e10:	bne	35dd4 <__flatcc_fb_build_schema@@Base+0x94>
   35e14:	ldr	r1, [r5, #4]
   35e18:	ldm	r1, {r1, r2}
   35e1c:	cmp	r2, #0
   35e20:	sub	r2, r2, #1
   35e24:	beq	36d20 <__flatcc_fb_build_schema@@Base+0xfe0>
   35e28:	add	ip, r1, r2
   35e2c:	sub	r1, r1, #1
   35e30:	ldrb	r2, [r1, #1]!
   35e34:	eor	r3, r3, r2
   35e38:	cmp	ip, r1
   35e3c:	mul	r3, r4, r3
   35e40:	bne	35e30 <__flatcc_fb_build_schema@@Base+0xf0>
   35e44:	cmp	r3, #0
   35e48:	moveq	r3, r6
   35e4c:	cmp	r0, #0
   35e50:	str	r3, [r5, #88]	; 0x58
   35e54:	str	r9, [r5, #16]
   35e58:	beq	35da0 <__flatcc_fb_build_schema@@Base+0x60>
   35e5c:	add	r0, r0, #4
   35e60:	mov	r2, r8
   35e64:	mov	r1, r5
   35e68:	bl	2c1c0 <fb_symbol_table_insert_item@@Base>
   35e6c:	cmp	r0, #0
   35e70:	beq	35da0 <__flatcc_fb_build_schema@@Base+0x60>
   35e74:	ldr	r3, [r0, #4]
   35e78:	ldr	r1, [r5, #4]
   35e7c:	mov	r2, sl
   35e80:	str	r7, [sp, #4]
   35e84:	str	r7, [sp]
   35e88:	mov	r0, fp
   35e8c:	bl	2e224 <__flatcc_error_report@@Base>
   35e90:	ldr	r5, [r5]
   35e94:	cmp	r5, #0
   35e98:	bne	35dac <__flatcc_fb_build_schema@@Base+0x6c>
   35e9c:	ldr	r4, [fp, #356]	; 0x164
   35ea0:	ldr	r7, [pc, #3740]	; 36d44 <__flatcc_fb_build_schema@@Base+0x1004>
   35ea4:	cmp	r4, #0
   35ea8:	add	r7, pc, r7
   35eac:	mov	r5, #1
   35eb0:	mov	r6, #0
   35eb4:	beq	35f04 <__flatcc_fb_build_schema@@Base+0x1c4>
   35eb8:	ldr	r0, [fp, #412]	; 0x19c
   35ebc:	mov	r2, r5
   35ec0:	add	r0, r0, #16
   35ec4:	mov	r1, r4
   35ec8:	bl	3e028 <fb_name_table_insert_item@@Base>
   35ecc:	cmp	r0, #0
   35ed0:	beq	35ef8 <__flatcc_fb_build_schema@@Base+0x1b8>
   35ed4:	ldr	r2, [r4, #12]
   35ed8:	mov	r3, r6
   35edc:	str	r2, [sp, #4]
   35ee0:	ldr	r1, [r4, #8]
   35ee4:	mov	r2, r7
   35ee8:	str	r1, [sp]
   35eec:	mov	r0, fp
   35ef0:	mov	r1, #0
   35ef4:	bl	2e224 <__flatcc_error_report@@Base>
   35ef8:	ldr	r4, [r4]
   35efc:	cmp	r4, #0
   35f00:	bne	35eb8 <__flatcc_fb_build_schema@@Base+0x178>
   35f04:	ldr	r5, [pc, #3644]	; 36d48 <__flatcc_fb_build_schema@@Base+0x1008>
   35f08:	mov	sl, #0
   35f0c:	add	r5, pc, r5
   35f10:	sub	r5, r5, #4
   35f14:	mov	r8, sl
   35f18:	mov	r6, #1
   35f1c:	mov	r7, #2
   35f20:	b	35f70 <__flatcc_fb_build_schema@@Base+0x230>
   35f24:	ldr	r3, [r5, #4]!
   35f28:	str	r0, [fp, #52]	; 0x34
   35f2c:	mov	r0, r3
   35f30:	str	sl, [r4, #24]
   35f34:	str	r3, [r4, #8]
   35f38:	bl	14074 <strlen@plt>
   35f3c:	strh	r7, [r4, #16]
   35f40:	str	r8, [r4]
   35f44:	mov	r1, r4
   35f48:	mov	r2, r6
   35f4c:	str	r0, [r4, #12]
   35f50:	ldr	r0, [fp, #412]	; 0x19c
   35f54:	add	r0, r0, #16
   35f58:	bl	3e028 <fb_name_table_insert_item@@Base>
   35f5c:	cmp	r0, #0
   35f60:	strne	sl, [r0, #24]
   35f64:	add	sl, sl, #1
   35f68:	cmp	sl, #12
   35f6c:	beq	35fb8 <__flatcc_fb_build_schema@@Base+0x278>
   35f70:	ldr	r4, [fp, #52]	; 0x34
   35f74:	ldr	r3, [fp, #44]	; 0x2c
   35f78:	add	r0, r4, #32
   35f7c:	cmp	r0, r3
   35f80:	bls	35f24 <__flatcc_fb_build_schema@@Base+0x1e4>
   35f84:	mov	r1, r6
   35f88:	mov	r0, #65536	; 0x10000
   35f8c:	bl	13f9c <calloc@plt>
   35f90:	cmp	r0, #0
   35f94:	beq	379a0 <__flatcc_fb_build_schema@@Base+0x1c60>
   35f98:	ldr	r3, [fp, #48]	; 0x30
   35f9c:	add	r4, r0, #16
   35fa0:	str	r3, [r0]
   35fa4:	add	r3, r0, #65536	; 0x10000
   35fa8:	str	r0, [fp, #48]	; 0x30
   35fac:	str	r3, [fp, #44]	; 0x2c
   35fb0:	add	r0, r0, #48	; 0x30
   35fb4:	b	35f24 <__flatcc_fb_build_schema@@Base+0x1e4>
   35fb8:	ldr	r3, [fp, #184]	; 0xb8
   35fbc:	cmp	r3, #0
   35fc0:	bne	36010 <__flatcc_fb_build_schema@@Base+0x2d0>
   35fc4:	ldr	r4, [fp, #392]	; 0x188
   35fc8:	cmp	r4, #0
   35fcc:	beq	36f50 <__flatcc_fb_build_schema@@Base+0x1210>
   35fd0:	mov	r5, #1
   35fd4:	b	35fe4 <__flatcc_fb_build_schema@@Base+0x2a4>
   35fd8:	ldr	r4, [r4]
   35fdc:	cmp	r4, #0
   35fe0:	beq	36010 <__flatcc_fb_build_schema@@Base+0x2d0>
   35fe4:	ldrh	r3, [r4, #8]
   35fe8:	cmp	r3, #3
   35fec:	bne	35fd8 <__flatcc_fb_build_schema@@Base+0x298>
   35ff0:	mov	r1, r4
   35ff4:	mov	r0, fp
   35ff8:	bl	34fa4 <__flatcc_fb_clear_parser@@Base+0x25c0>
   35ffc:	cmp	r0, #0
   36000:	strhne	r5, [r4, #48]	; 0x30
   36004:	ldr	r4, [r4]
   36008:	cmp	r4, #0
   3600c:	bne	35fe4 <__flatcc_fb_build_schema@@Base+0x2a4>
   36010:	ldr	sl, [fp, #392]	; 0x188
   36014:	cmp	sl, #0
   36018:	beq	36f50 <__flatcc_fb_build_schema@@Base+0x1210>
   3601c:	ldr	r3, [pc, #3368]	; 36d4c <__flatcc_fb_build_schema@@Base+0x100c>
   36020:	add	r3, pc, r3
   36024:	str	r3, [sp, #40]	; 0x28
   36028:	ldr	r3, [pc, #3360]	; 36d50 <__flatcc_fb_build_schema@@Base+0x1010>
   3602c:	add	r3, pc, r3
   36030:	str	r3, [sp, #44]	; 0x2c
   36034:	ldr	r3, [pc, #3352]	; 36d54 <__flatcc_fb_build_schema@@Base+0x1014>
   36038:	add	r3, pc, r3
   3603c:	str	r3, [sp, #24]
   36040:	ldr	r3, [pc, #3344]	; 36d58 <__flatcc_fb_build_schema@@Base+0x1018>
   36044:	add	r3, pc, r3
   36048:	str	r3, [sp, #48]	; 0x30
   3604c:	ldr	r3, [pc, #3336]	; 36d5c <__flatcc_fb_build_schema@@Base+0x101c>
   36050:	add	r3, pc, r3
   36054:	str	r3, [sp, #52]	; 0x34
   36058:	ldr	r3, [pc, #3328]	; 36d60 <__flatcc_fb_build_schema@@Base+0x1020>
   3605c:	add	r3, pc, r3
   36060:	str	r3, [sp, #56]	; 0x38
   36064:	ldrh	r3, [sl, #8]
   36068:	cmp	r3, #4
   3606c:	addls	pc, pc, r3, lsl #2
   36070:	b	36afc <__flatcc_fb_build_schema@@Base+0xdbc>
   36074:	b	360b0 <__flatcc_fb_build_schema@@Base+0x370>
   36078:	b	364c0 <__flatcc_fb_build_schema@@Base+0x780>
   3607c:	b	360b0 <__flatcc_fb_build_schema@@Base+0x370>
   36080:	b	36088 <__flatcc_fb_build_schema@@Base+0x348>
   36084:	b	36094 <__flatcc_fb_build_schema@@Base+0x354>
   36088:	ldr	r3, [fp, #184]	; 0xb8
   3608c:	cmp	r3, #0
   36090:	beq	360b0 <__flatcc_fb_build_schema@@Base+0x370>
   36094:	mov	r1, sl
   36098:	mov	r0, fp
   3609c:	bl	34fa4 <__flatcc_fb_clear_parser@@Base+0x25c0>
   360a0:	cmp	r0, #0
   360a4:	beq	360b0 <__flatcc_fb_build_schema@@Base+0x370>
   360a8:	mov	r3, #1
   360ac:	strh	r3, [sl, #48]	; 0x30
   360b0:	ldr	sl, [sl]
   360b4:	cmp	sl, #0
   360b8:	bne	36064 <__flatcc_fb_build_schema@@Base+0x324>
   360bc:	ldr	r4, [fp, #392]	; 0x188
   360c0:	cmp	r4, #0
   360c4:	beq	37898 <__flatcc_fb_build_schema@@Base+0x1b58>
   360c8:	ldrh	r5, [r4, #8]
   360cc:	cmp	r5, #1
   360d0:	bne	360f4 <__flatcc_fb_build_schema@@Base+0x3b4>
   360d4:	ldrh	r3, [r4, #48]	; 0x30
   360d8:	cmp	r3, #1
   360dc:	beq	360f4 <__flatcc_fb_build_schema@@Base+0x3b4>
   360e0:	mov	r1, r4
   360e4:	mov	r0, fp
   360e8:	bl	32b00 <__flatcc_fb_clear_parser@@Base+0x11c>
   360ec:	cmp	r0, #0
   360f0:	strhne	r5, [r4, #48]	; 0x30
   360f4:	ldr	r4, [r4]
   360f8:	cmp	r4, #0
   360fc:	bne	360c8 <__flatcc_fb_build_schema@@Base+0x388>
   36100:	ldr	r7, [fp, #392]	; 0x188
   36104:	cmp	r7, #0
   36108:	beq	37898 <__flatcc_fb_build_schema@@Base+0x1b58>
   3610c:	ldr	r3, [pc, #3152]	; 36d64 <__flatcc_fb_build_schema@@Base+0x1024>
   36110:	mov	sl, r7
   36114:	add	r3, pc, r3
   36118:	str	r3, [sp, #28]
   3611c:	ldr	r3, [pc, #3140]	; 36d68 <__flatcc_fb_build_schema@@Base+0x1028>
   36120:	add	r3, pc, r3
   36124:	str	r3, [sp, #32]
   36128:	ldr	r3, [pc, #3132]	; 36d6c <__flatcc_fb_build_schema@@Base+0x102c>
   3612c:	add	r3, pc, r3
   36130:	str	r3, [sp, #36]	; 0x24
   36134:	ldr	r3, [pc, #3124]	; 36d70 <__flatcc_fb_build_schema@@Base+0x1030>
   36138:	add	r3, pc, r3
   3613c:	str	r3, [sp, #40]	; 0x28
   36140:	ldr	r3, [pc, #3116]	; 36d74 <__flatcc_fb_build_schema@@Base+0x1034>
   36144:	add	r3, pc, r3
   36148:	str	r3, [sp, #44]	; 0x2c
   3614c:	ldr	r3, [pc, #3108]	; 36d78 <__flatcc_fb_build_schema@@Base+0x1038>
   36150:	add	r3, pc, r3
   36154:	str	r3, [sp, #48]	; 0x30
   36158:	ldrh	r3, [sl, #8]
   3615c:	cmp	r3, #0
   36160:	beq	37084 <__flatcc_fb_build_schema@@Base+0x1344>
   36164:	cmp	r3, #2
   36168:	bne	36338 <__flatcc_fb_build_schema@@Base+0x5f8>
   3616c:	ldrh	r3, [sl, #48]	; 0x30
   36170:	cmp	r3, #1
   36174:	str	r3, [sp, #16]
   36178:	beq	36338 <__flatcc_fb_build_schema@@Base+0x5f8>
   3617c:	cmp	r3, #0
   36180:	bne	37a90 <__flatcc_fb_build_schema@@Base+0x1d50>
   36184:	ldr	r3, [sl, #28]
   36188:	cmp	r3, #0
   3618c:	beq	361b4 <__flatcc_fb_build_schema@@Base+0x474>
   36190:	ldr	r2, [sp, #16]
   36194:	ldr	r1, [sl, #4]
   36198:	mov	r3, r2
   3619c:	str	r2, [sp, #4]
   361a0:	str	r2, [sp]
   361a4:	ldr	r2, [pc, #3024]	; 36d7c <__flatcc_fb_build_schema@@Base+0x103c>
   361a8:	mov	r0, fp
   361ac:	add	r2, pc, r2
   361b0:	bl	2e224 <__flatcc_error_report@@Base>
   361b4:	ldr	r8, [sl, #20]
   361b8:	cmp	r8, #0
   361bc:	beq	36338 <__flatcc_fb_build_schema@@Base+0x5f8>
   361c0:	add	r3, sl, #56	; 0x38
   361c4:	str	sl, [sp, #8]
   361c8:	mov	r7, r3
   361cc:	b	36200 <__flatcc_fb_build_schema@@Base+0x4c0>
   361d0:	mov	r2, #0
   361d4:	ldr	r3, [r0, #4]
   361d8:	ldr	r1, [r8, #4]
   361dc:	str	r2, [sp, #4]
   361e0:	str	r2, [sp]
   361e4:	ldr	r2, [pc, #2964]	; 36d80 <__flatcc_fb_build_schema@@Base+0x1040>
   361e8:	mov	r0, fp
   361ec:	add	r2, pc, r2
   361f0:	bl	2e224 <__flatcc_error_report@@Base>
   361f4:	ldr	r8, [r8]
   361f8:	cmp	r8, #0
   361fc:	beq	36334 <__flatcc_fb_build_schema@@Base+0x5f4>
   36200:	mov	r2, #1
   36204:	mov	r1, r8
   36208:	mov	r0, r7
   3620c:	bl	2c1c0 <fb_symbol_table_insert_item@@Base>
   36210:	cmp	r0, #0
   36214:	bne	361d0 <__flatcc_fb_build_schema@@Base+0x490>
   36218:	ldrh	r3, [r8, #8]
   3621c:	cmp	r3, #5
   36220:	bne	3760c <__flatcc_fb_build_schema@@Base+0x18cc>
   36224:	ldrh	r3, [r8, #56]	; 0x38
   36228:	cmp	r3, #0
   3622c:	bne	37290 <__flatcc_fb_build_schema@@Base+0x1550>
   36230:	ldrh	r3, [r8, #24]
   36234:	cmp	r3, #1
   36238:	beq	361f4 <__flatcc_fb_build_schema@@Base+0x4b4>
   3623c:	cmp	r3, #12
   36240:	beq	36264 <__flatcc_fb_build_schema@@Base+0x524>
   36244:	ldr	r2, [pc, #2872]	; 36d84 <__flatcc_fb_build_schema@@Base+0x1044>
   36248:	mov	r3, #0
   3624c:	ldr	r1, [r8, #4]
   36250:	add	r2, pc, r2
   36254:	str	r3, [sp, #4]
   36258:	str	r3, [sp]
   3625c:	mov	r0, fp
   36260:	bl	2e224 <__flatcc_error_report@@Base>
   36264:	ldr	r1, [r8, #32]
   36268:	ldr	r3, [sp, #8]
   3626c:	cmp	r1, #0
   36270:	ldr	r4, [r3, #12]
   36274:	beq	36310 <__flatcc_fb_build_schema@@Base+0x5d0>
   36278:	mov	r6, r1
   3627c:	mov	r2, #0
   36280:	b	3628c <__flatcc_fb_build_schema@@Base+0x54c>
   36284:	mov	r2, r3
   36288:	mov	r6, r5
   3628c:	ldr	r5, [r6]
   36290:	add	r3, r2, #1
   36294:	cmp	r5, #0
   36298:	bne	36284 <__flatcc_fb_build_schema@@Base+0x544>
   3629c:	adds	r0, r4, #0
   362a0:	movne	r0, #1
   362a4:	cmp	r3, #1
   362a8:	movne	r0, #0
   362ac:	cmp	r0, #0
   362b0:	bne	36e6c <__flatcc_fb_build_schema@@Base+0x112c>
   362b4:	cmp	r3, #1
   362b8:	moveq	r5, r0
   362bc:	movne	r5, r1
   362c0:	cmp	r9, #0
   362c4:	beq	36310 <__flatcc_fb_build_schema@@Base+0x5d0>
   362c8:	ldr	r0, [fp, #412]	; 0x19c
   362cc:	cmp	r0, #0
   362d0:	beq	36310 <__flatcc_fb_build_schema@@Base+0x5d0>
   362d4:	rsb	r2, r2, #0
   362d8:	mov	r1, r5
   362dc:	bl	2d13c <fb_scope_table_find@@Base>
   362e0:	cmp	r0, #0
   362e4:	beq	3630c <__flatcc_fb_build_schema@@Base+0x5cc>
   362e8:	ldr	r3, [r6, #4]
   362ec:	add	r0, r0, #4
   362f0:	ldm	r3, {r1, r2}
   362f4:	bl	2c1e8 <fb_symbol_table_find@@Base>
   362f8:	subs	sl, r0, #0
   362fc:	beq	3630c <__flatcc_fb_build_schema@@Base+0x5cc>
   36300:	ldrh	r2, [sl, #8]
   36304:	cmp	r2, #4
   36308:	bls	37658 <__flatcc_fb_build_schema@@Base+0x1918>
   3630c:	ldr	r1, [r8, #32]
   36310:	mov	r3, r8
   36314:	ldr	r2, [sp, #28]
   36318:	mov	r0, fp
   3631c:	bl	2f7f4 <error_ref_sym@@Base>
   36320:	mov	r3, #1
   36324:	strh	r3, [r8, #24]
   36328:	ldr	r8, [r8]
   3632c:	cmp	r8, #0
   36330:	bne	36200 <__flatcc_fb_build_schema@@Base+0x4c0>
   36334:	ldr	sl, [sp, #8]
   36338:	ldr	sl, [sl]
   3633c:	cmp	sl, #0
   36340:	bne	36158 <__flatcc_fb_build_schema@@Base+0x418>
   36344:	ldr	r3, [fp, #396]	; 0x18c
   36348:	ldr	sl, [fp, #392]	; 0x188
   3634c:	cmp	r3, #0
   36350:	bne	36f60 <__flatcc_fb_build_schema@@Base+0x1220>
   36354:	cmp	sl, #0
   36358:	str	r3, [fp, #396]	; 0x18c
   3635c:	beq	363d8 <__flatcc_fb_build_schema@@Base+0x698>
   36360:	ldr	r5, [pc, #2592]	; 36d88 <__flatcc_fb_build_schema@@Base+0x1048>
   36364:	add	r3, sp, #68	; 0x44
   36368:	mov	r7, #36	; 0x24
   3636c:	mov	r4, #0
   36370:	add	r8, sp, #104	; 0x68
   36374:	str	r3, [sp, #8]
   36378:	add	r3, sp, #100	; 0x64
   3637c:	str	r3, [sp, #16]
   36380:	ldrh	r2, [sl, #8]
   36384:	cmp	r2, #0
   36388:	bne	363cc <__flatcc_fb_build_schema@@Base+0x68c>
   3638c:	ldrh	r3, [sl, #92]	; 0x5c
   36390:	tst	r3, #8
   36394:	beq	372b4 <__flatcc_fb_build_schema@@Base+0x1574>
   36398:	ldr	r3, [sl, #20]
   3639c:	str	r2, [sp, #104]	; 0x68
   363a0:	cmp	r3, #0
   363a4:	mov	r2, r8
   363a8:	beq	363c0 <__flatcc_fb_build_schema@@Base+0x680>
   363ac:	str	r3, [r2]
   363b0:	add	r2, r3, #108	; 0x6c
   363b4:	ldr	r3, [r3]
   363b8:	cmp	r3, #0
   363bc:	bne	363ac <__flatcc_fb_build_schema@@Base+0x66c>
   363c0:	str	r4, [r2]
   363c4:	ldr	r3, [sp, #104]	; 0x68
   363c8:	str	r3, [sl, #24]
   363cc:	ldr	sl, [sl]
   363d0:	cmp	sl, #0
   363d4:	bne	36380 <__flatcc_fb_build_schema@@Base+0x640>
   363d8:	ldr	r3, [fp, #400]	; 0x190
   363dc:	cmp	r3, #0
   363e0:	beq	377c8 <__flatcc_fb_build_schema@@Base+0x1a88>
   363e4:	ldr	r5, [fp, #408]	; 0x198
   363e8:	mov	r7, r3
   363ec:	mov	r2, #0
   363f0:	b	363fc <__flatcc_fb_build_schema@@Base+0x6bc>
   363f4:	mov	r2, r1
   363f8:	mov	r7, r6
   363fc:	ldr	r6, [r7]
   36400:	add	r1, r2, #1
   36404:	cmp	r6, #0
   36408:	bne	363f4 <__flatcc_fb_build_schema@@Base+0x6b4>
   3640c:	adds	r0, r5, #0
   36410:	movne	r0, #1
   36414:	cmp	r1, #1
   36418:	movne	r0, #0
   3641c:	cmp	r0, #0
   36420:	bne	36f88 <__flatcc_fb_build_schema@@Base+0x1248>
   36424:	cmp	r1, #1
   36428:	moveq	r6, r0
   3642c:	movne	r6, r3
   36430:	cmp	r9, #0
   36434:	beq	36480 <__flatcc_fb_build_schema@@Base+0x740>
   36438:	ldr	r0, [fp, #412]	; 0x19c
   3643c:	cmp	r0, #0
   36440:	beq	36480 <__flatcc_fb_build_schema@@Base+0x740>
   36444:	rsb	r2, r2, #0
   36448:	mov	r1, r6
   3644c:	bl	2d13c <fb_scope_table_find@@Base>
   36450:	cmp	r0, #0
   36454:	beq	3647c <__flatcc_fb_build_schema@@Base+0x73c>
   36458:	ldr	r3, [r7, #4]
   3645c:	add	r0, r0, #4
   36460:	ldm	r3, {r1, r2}
   36464:	bl	2c1e8 <fb_symbol_table_find@@Base>
   36468:	subs	r4, r0, #0
   3646c:	beq	3647c <__flatcc_fb_build_schema@@Base+0x73c>
   36470:	ldrh	r3, [r4, #8]
   36474:	cmp	r3, #4
   36478:	bls	37828 <__flatcc_fb_build_schema@@Base+0x1ae8>
   3647c:	ldr	r3, [fp, #400]	; 0x190
   36480:	mov	r2, #0
   36484:	str	r2, [fp, #404]	; 0x194
   36488:	ldr	r2, [pc, #2300]	; 36d8c <__flatcc_fb_build_schema@@Base+0x104c>
   3648c:	mov	r1, r3
   36490:	add	r2, pc, r2
   36494:	mov	r3, #0
   36498:	mov	r0, fp
   3649c:	bl	2f7f4 <error_ref_sym@@Base>
   364a0:	mov	r3, #0
   364a4:	str	r3, [fp, #400]	; 0x190
   364a8:	ldr	r0, [fp, #108]	; 0x6c
   364ac:	clz	r3, r0
   364b0:	lsr	r3, r3, #5
   364b4:	str	r3, [fp, #120]	; 0x78
   364b8:	add	sp, sp, #156	; 0x9c
   364bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   364c0:	ldrh	r3, [sl, #48]	; 0x30
   364c4:	cmp	r3, #0
   364c8:	str	r3, [sp, #20]
   364cc:	bne	3784c <__flatcc_fb_build_schema@@Base+0x1b0c>
   364d0:	add	r3, sp, #104	; 0x68
   364d4:	mov	r0, r3
   364d8:	mov	r2, #48	; 0x30
   364dc:	ldr	r1, [sp, #20]
   364e0:	str	r3, [sp, #32]
   364e4:	ldr	r4, [sl, #28]
   364e8:	bl	140a4 <memset@plt>
   364ec:	cmp	r4, #0
   364f0:	ldrheq	r3, [sp, #20]
   364f4:	strheq	r3, [sl, #92]	; 0x5c
   364f8:	beq	3667c <__flatcc_fb_build_schema@@Base+0x93c>
   364fc:	ldr	r3, [pc, #2188]	; 36d90 <__flatcc_fb_build_schema@@Base+0x1050>
   36500:	ldr	r8, [pc, #2188]	; 36d94 <__flatcc_fb_build_schema@@Base+0x1054>
   36504:	add	r3, pc, r3
   36508:	str	r3, [sp, #8]
   3650c:	ldr	r3, [pc, #2180]	; 36d98 <__flatcc_fb_build_schema@@Base+0x1058>
   36510:	ldr	r7, [pc, #2180]	; 36d9c <__flatcc_fb_build_schema@@Base+0x105c>
   36514:	add	r3, pc, r3
   36518:	str	r3, [sp, #16]
   3651c:	ldr	r3, [pc, #2172]	; 36da0 <__flatcc_fb_build_schema@@Base+0x1060>
   36520:	add	r8, pc, r8
   36524:	add	r3, pc, r3
   36528:	str	r3, [sp, #28]
   3652c:	ldr	r3, [pc, #2160]	; 36da4 <__flatcc_fb_build_schema@@Base+0x1064>
   36530:	str	r8, [sp, #60]	; 0x3c
   36534:	add	r3, pc, r3
   36538:	add	r7, pc, r7
   3653c:	str	r3, [sp, #36]	; 0x24
   36540:	ldr	r6, [sp, #20]
   36544:	mov	r5, #100	; 0x64
   36548:	ldr	r8, [sp, #32]
   3654c:	b	365b0 <__flatcc_fb_build_schema@@Base+0x870>
   36550:	mov	r2, #1
   36554:	ldr	r0, [r8, r3, lsl #2]
   36558:	orr	r6, r6, r2, lsl r3
   3655c:	cmp	r0, #0
   36560:	uxth	r6, r6
   36564:	lsl	r2, r3, #2
   36568:	beq	36b28 <__flatcc_fb_build_schema@@Base+0xde8>
   3656c:	ldr	r2, [pc, #2100]	; 36da8 <__flatcc_fb_build_schema@@Base+0x1068>
   36570:	mov	r3, #0
   36574:	ldr	r1, [r4, #4]
   36578:	add	r2, pc, r2
   3657c:	str	r3, [sp, #4]
   36580:	str	r3, [sp]
   36584:	mov	r0, fp
   36588:	bl	2e224 <__flatcc_error_report@@Base>
   3658c:	subs	r5, r5, #1
   36590:	ldr	r4, [r4]
   36594:	movne	r2, #1
   36598:	moveq	r2, #0
   3659c:	cmp	r4, #0
   365a0:	moveq	r2, #0
   365a4:	andne	r2, r2, #1
   365a8:	cmp	r2, #0
   365ac:	beq	3660c <__flatcc_fb_build_schema@@Base+0x8cc>
   365b0:	ldr	r3, [r4, #4]
   365b4:	ldr	r0, [fp, #412]	; 0x19c
   365b8:	ldm	r3, {r1, r2}
   365bc:	add	r0, r0, #16
   365c0:	bl	3e04c <fb_name_table_find@@Base>
   365c4:	cmp	r0, #0
   365c8:	beq	36ba0 <__flatcc_fb_build_schema@@Base+0xe60>
   365cc:	ldr	r3, [r0, #24]
   365d0:	cmp	r3, #0
   365d4:	beq	3658c <__flatcc_fb_build_schema@@Base+0x84c>
   365d8:	mov	r2, #16
   365dc:	asr	r2, r2, r3
   365e0:	ands	r2, r2, #1
   365e4:	bne	36550 <__flatcc_fb_build_schema@@Base+0x810>
   365e8:	ldr	r1, [r4, #4]
   365ec:	mov	r3, r2
   365f0:	str	r2, [sp, #4]
   365f4:	str	r2, [sp]
   365f8:	ldr	r2, [pc, #1964]	; 36dac <__flatcc_fb_build_schema@@Base+0x106c>
   365fc:	mov	r0, fp
   36600:	add	r2, pc, r2
   36604:	bl	2e224 <__flatcc_error_report@@Base>
   36608:	b	3658c <__flatcc_fb_build_schema@@Base+0x84c>
   3660c:	cmp	r4, #0
   36610:	beq	36634 <__flatcc_fb_build_schema@@Base+0x8f4>
   36614:	ldr	r1, [r4, #4]
   36618:	mov	r3, r2
   3661c:	str	r2, [sp, #4]
   36620:	str	r2, [sp]
   36624:	ldr	r2, [pc, #1924]	; 36db0 <__flatcc_fb_build_schema@@Base+0x1070>
   36628:	mov	r0, fp
   3662c:	add	r2, pc, r2
   36630:	bl	2e224 <__flatcc_error_report@@Base>
   36634:	ldr	r3, [sp, #120]	; 0x78
   36638:	strh	r6, [sl, #92]	; 0x5c
   3663c:	cmp	r3, #0
   36640:	beq	3667c <__flatcc_fb_build_schema@@Base+0x93c>
   36644:	ldrd	r0, [r3, #8]
   36648:	subs	r2, r0, #1
   3664c:	sbc	r3, r1, #0
   36650:	cmp	r3, #0
   36654:	cmpeq	r2, #255	; 0xff
   36658:	bls	36ca4 <__flatcc_fb_build_schema@@Base+0xf64>
   3665c:	ldr	r2, [pc, #1872]	; 36db4 <__flatcc_fb_build_schema@@Base+0x1074>
   36660:	mov	r3, #0
   36664:	ldr	r1, [sl, #4]
   36668:	add	r2, pc, r2
   3666c:	str	r3, [sp, #4]
   36670:	str	r3, [sp]
   36674:	mov	r0, fp
   36678:	bl	2e224 <__flatcc_error_report@@Base>
   3667c:	ldr	r6, [sl, #20]
   36680:	cmp	r6, #0
   36684:	beq	360b0 <__flatcc_fb_build_schema@@Base+0x370>
   36688:	add	r3, sl, #56	; 0x38
   3668c:	str	r3, [sp, #8]
   36690:	mov	r3, #0
   36694:	str	sl, [sp, #16]
   36698:	str	r3, [sp, #28]
   3669c:	ldr	sl, [sp, #32]
   366a0:	b	366d4 <__flatcc_fb_build_schema@@Base+0x994>
   366a4:	mov	r2, #0
   366a8:	ldr	r3, [r0, #4]
   366ac:	ldr	r1, [r6, #4]
   366b0:	str	r2, [sp, #4]
   366b4:	str	r2, [sp]
   366b8:	ldr	r2, [pc, #1784]	; 36db8 <__flatcc_fb_build_schema@@Base+0x1078>
   366bc:	mov	r0, fp
   366c0:	add	r2, pc, r2
   366c4:	bl	2e224 <__flatcc_error_report@@Base>
   366c8:	ldr	r6, [r6]
   366cc:	cmp	r6, #0
   366d0:	beq	36a64 <__flatcc_fb_build_schema@@Base+0xd24>
   366d4:	mov	r2, #1
   366d8:	mov	r1, r6
   366dc:	ldr	r0, [sp, #8]
   366e0:	bl	2c1c0 <fb_symbol_table_insert_item@@Base>
   366e4:	cmp	r0, #0
   366e8:	bne	366a4 <__flatcc_fb_build_schema@@Base+0x964>
   366ec:	ldrh	r3, [r6, #8]
   366f0:	cmp	r3, #5
   366f4:	bne	37870 <__flatcc_fb_build_schema@@Base+0x1b30>
   366f8:	ldr	r8, [fp, #172]	; 0xac
   366fc:	ldr	r3, [fp, #168]	; 0xa8
   36700:	cmp	r8, #0
   36704:	ldr	r4, [r6, #64]	; 0x40
   36708:	movne	r8, #128	; 0x80
   3670c:	moveq	r8, #0
   36710:	mov	r2, #48	; 0x30
   36714:	cmp	r3, #0
   36718:	mov	r1, #0
   3671c:	mov	r0, sl
   36720:	orrne	r8, r8, #4
   36724:	bl	140a4 <memset@plt>
   36728:	cmp	r4, #0
   3672c:	beq	3769c <__flatcc_fb_build_schema@@Base+0x195c>
   36730:	ldr	r3, [pc, #1668]	; 36dbc <__flatcc_fb_build_schema@@Base+0x107c>
   36734:	ldr	r7, [sp, #20]
   36738:	add	r3, pc, r3
   3673c:	str	r3, [sp, #32]
   36740:	ldr	r3, [pc, #1656]	; 36dc0 <__flatcc_fb_build_schema@@Base+0x1080>
   36744:	mov	r5, #100	; 0x64
   36748:	add	r3, pc, r3
   3674c:	str	r3, [sp, #36]	; 0x24
   36750:	b	367b4 <__flatcc_fb_build_schema@@Base+0xa74>
   36754:	mov	r2, #1
   36758:	ldr	r0, [sl, r3, lsl #2]
   3675c:	orr	r7, r7, r2, lsl r3
   36760:	cmp	r0, #0
   36764:	uxth	r7, r7
   36768:	lsl	r2, r3, #2
   3676c:	beq	3680c <__flatcc_fb_build_schema@@Base+0xacc>
   36770:	ldr	r2, [pc, #1612]	; 36dc4 <__flatcc_fb_build_schema@@Base+0x1084>
   36774:	mov	r3, #0
   36778:	ldr	r1, [r4, #4]
   3677c:	add	r2, pc, r2
   36780:	str	r3, [sp, #4]
   36784:	str	r3, [sp]
   36788:	mov	r0, fp
   3678c:	bl	2e224 <__flatcc_error_report@@Base>
   36790:	subs	r5, r5, #1
   36794:	ldr	r4, [r4]
   36798:	movne	r2, #1
   3679c:	moveq	r2, #0
   367a0:	cmp	r4, #0
   367a4:	moveq	r2, #0
   367a8:	andne	r2, r2, #1
   367ac:	cmp	r2, #0
   367b0:	beq	36850 <__flatcc_fb_build_schema@@Base+0xb10>
   367b4:	ldr	r3, [r4, #4]
   367b8:	ldr	r0, [fp, #412]	; 0x19c
   367bc:	ldm	r3, {r1, r2}
   367c0:	add	r0, r0, #16
   367c4:	bl	3e04c <fb_name_table_find@@Base>
   367c8:	cmp	r0, #0
   367cc:	beq	369a8 <__flatcc_fb_build_schema@@Base+0xc68>
   367d0:	ldr	r3, [r0, #24]
   367d4:	cmp	r3, #0
   367d8:	beq	36790 <__flatcc_fb_build_schema@@Base+0xa50>
   367dc:	asr	r2, r8, r3
   367e0:	ands	r2, r2, #1
   367e4:	bne	36754 <__flatcc_fb_build_schema@@Base+0xa14>
   367e8:	ldr	r1, [r4, #4]
   367ec:	mov	r3, r2
   367f0:	str	r2, [sp, #4]
   367f4:	str	r2, [sp]
   367f8:	ldr	r2, [pc, #1480]	; 36dc8 <__flatcc_fb_build_schema@@Base+0x1088>
   367fc:	mov	r0, fp
   36800:	add	r2, pc, r2
   36804:	bl	2e224 <__flatcc_error_report@@Base>
   36808:	b	36790 <__flatcc_fb_build_schema@@Base+0xa50>
   3680c:	ldr	r1, [sp, #24]
   36810:	str	r4, [sl, r3, lsl #2]
   36814:	add	r2, r1, r2
   36818:	ldr	r2, [r2, #204]	; 0xcc
   3681c:	cmp	r2, #0
   36820:	bne	36ab8 <__flatcc_fb_build_schema@@Base+0xd78>
   36824:	ldrh	r3, [r4, #16]
   36828:	cmp	r3, #0
   3682c:	beq	36790 <__flatcc_fb_build_schema@@Base+0xa50>
   36830:	ldr	r1, [r4, #4]
   36834:	mov	r3, r2
   36838:	str	r2, [sp, #4]
   3683c:	str	r2, [sp]
   36840:	mov	r0, fp
   36844:	ldr	r2, [sp, #36]	; 0x24
   36848:	bl	2e224 <__flatcc_error_report@@Base>
   3684c:	b	36790 <__flatcc_fb_build_schema@@Base+0xa50>
   36850:	cmp	r4, #0
   36854:	beq	36878 <__flatcc_fb_build_schema@@Base+0xb38>
   36858:	ldr	r1, [r4, #4]
   3685c:	mov	r3, r2
   36860:	str	r2, [sp, #4]
   36864:	str	r2, [sp]
   36868:	ldr	r2, [pc, #1372]	; 36dcc <__flatcc_fb_build_schema@@Base+0x108c>
   3686c:	mov	r0, fp
   36870:	add	r2, pc, r2
   36874:	bl	2e224 <__flatcc_error_report@@Base>
   36878:	ldrh	r3, [r6, #24]
   3687c:	strh	r7, [r6, #72]	; 0x48
   36880:	cmp	r3, #8
   36884:	beq	36bc4 <__flatcc_fb_build_schema@@Base+0xe84>
   36888:	cmp	r3, #12
   3688c:	bne	36b78 <__flatcc_fb_build_schema@@Base+0xe38>
   36890:	ldr	r1, [r6, #16]
   36894:	ldr	r3, [sp, #16]
   36898:	cmp	r1, #0
   3689c:	ldr	r4, [r3, #12]
   368a0:	beq	3698c <__flatcc_fb_build_schema@@Base+0xc4c>
   368a4:	mov	r5, r1
   368a8:	mov	r2, #0
   368ac:	b	368b8 <__flatcc_fb_build_schema@@Base+0xb78>
   368b0:	mov	r2, r3
   368b4:	mov	r5, r7
   368b8:	ldr	r7, [r5]
   368bc:	add	r3, r2, #1
   368c0:	cmp	r7, #0
   368c4:	bne	368b0 <__flatcc_fb_build_schema@@Base+0xb70>
   368c8:	adds	r0, r4, #0
   368cc:	movne	r0, #1
   368d0:	cmp	r3, #1
   368d4:	movne	r0, #0
   368d8:	cmp	r0, #0
   368dc:	beq	36c34 <__flatcc_fb_build_schema@@Base+0xef4>
   368e0:	ldr	r3, [r5, #4]
   368e4:	add	r0, r4, #4
   368e8:	ldm	r3, {r1, r2}
   368ec:	bl	2c1e8 <fb_symbol_table_find@@Base>
   368f0:	subs	r8, r0, #0
   368f4:	beq	36904 <__flatcc_fb_build_schema@@Base+0xbc4>
   368f8:	ldrh	r3, [r8, #8]
   368fc:	cmp	r3, #4
   36900:	bls	369cc <__flatcc_fb_build_schema@@Base+0xc8c>
   36904:	ldr	r3, [r4]
   36908:	cmp	r3, #0
   3690c:	beq	36988 <__flatcc_fb_build_schema@@Base+0xc48>
   36910:	mov	r8, #0
   36914:	ldr	r3, [r3]
   36918:	add	r8, r8, #1
   3691c:	cmp	r3, #0
   36920:	bne	36914 <__flatcc_fb_build_schema@@Base+0xbd4>
   36924:	rsb	r8, r8, #1
   36928:	b	36958 <__flatcc_fb_build_schema@@Base+0xc18>
   3692c:	cmp	r9, #0
   36930:	beq	36954 <__flatcc_fb_build_schema@@Base+0xc14>
   36934:	ldr	r0, [fp, #412]	; 0x19c
   36938:	cmp	r0, #0
   3693c:	beq	36954 <__flatcc_fb_build_schema@@Base+0xc14>
   36940:	mov	r2, r8
   36944:	ldr	r1, [r4]
   36948:	bl	2d13c <fb_scope_table_find@@Base>
   3694c:	cmp	r0, #0
   36950:	bne	36af4 <__flatcc_fb_build_schema@@Base+0xdb4>
   36954:	add	r8, r8, #1
   36958:	cmp	r8, #0
   3695c:	bne	3692c <__flatcc_fb_build_schema@@Base+0xbec>
   36960:	cmp	r9, #0
   36964:	beq	36988 <__flatcc_fb_build_schema@@Base+0xc48>
   36968:	ldr	r0, [fp, #412]	; 0x19c
   3696c:	cmp	r0, #0
   36970:	beq	36988 <__flatcc_fb_build_schema@@Base+0xc48>
   36974:	mov	r1, r8
   36978:	mov	r2, r7
   3697c:	bl	2d13c <fb_scope_table_find@@Base>
   36980:	subs	r4, r0, #0
   36984:	bne	368e0 <__flatcc_fb_build_schema@@Base+0xba0>
   36988:	ldr	r1, [r6, #16]
   3698c:	mov	r3, r6
   36990:	ldr	r2, [sp, #44]	; 0x2c
   36994:	mov	r0, fp
   36998:	bl	2f7f4 <error_ref_sym@@Base>
   3699c:	mov	r3, #1
   369a0:	strh	r3, [r6, #24]
   369a4:	b	366c8 <__flatcc_fb_build_schema@@Base+0x988>
   369a8:	ldr	r2, [pc, #1056]	; 36dd0 <__flatcc_fb_build_schema@@Base+0x1090>
   369ac:	ldr	r1, [r4, #4]
   369b0:	mov	r3, r0
   369b4:	str	r0, [sp, #4]
   369b8:	str	r0, [sp]
   369bc:	add	r2, pc, r2
   369c0:	mov	r0, fp
   369c4:	bl	2e224 <__flatcc_error_report@@Base>
   369c8:	b	36790 <__flatcc_fb_build_schema@@Base+0xa50>
   369cc:	ldr	r1, [r8, #16]
   369d0:	ldr	r0, [sp, #12]
   369d4:	bl	2bb18 <ptr_set_find_item@@Base>
   369d8:	cmp	r0, #0
   369dc:	beq	36904 <__flatcc_fb_build_schema@@Base+0xbc4>
   369e0:	str	r8, [r6, #16]
   369e4:	ldrh	r4, [r8, #8]
   369e8:	mov	r3, #14
   369ec:	strh	r3, [r6, #24]
   369f0:	cmp	r4, #1
   369f4:	beq	376b0 <__flatcc_fb_build_schema@@Base+0x1970>
   369f8:	ldr	r2, [fp, #152]	; 0x98
   369fc:	cmp	r2, #0
   36a00:	beq	379cc <__flatcc_fb_build_schema@@Base+0x1c8c>
   36a04:	cmp	r4, #3
   36a08:	bne	379fc <__flatcc_fb_build_schema@@Base+0x1cbc>
   36a0c:	ldrh	r3, [r6, #72]	; 0x48
   36a10:	tst	r3, #128	; 0x80
   36a14:	beq	36a30 <__flatcc_fb_build_schema@@Base+0xcf0>
   36a18:	ldr	r2, [fp, #148]	; 0x94
   36a1c:	cmp	r2, #0
   36a20:	beq	3794c <__flatcc_fb_build_schema@@Base+0x1c0c>
   36a24:	ldr	r3, [sp, #28]
   36a28:	add	r3, r3, #1
   36a2c:	str	r3, [sp, #28]
   36a30:	ldrh	r3, [r6, #56]	; 0x38
   36a34:	cmp	r3, #0
   36a38:	beq	366c8 <__flatcc_fb_build_schema@@Base+0x988>
   36a3c:	mov	r3, #0
   36a40:	ldr	r1, [r6, #4]
   36a44:	ldr	r2, [sp, #40]	; 0x28
   36a48:	str	r3, [sp, #4]
   36a4c:	str	r3, [sp]
   36a50:	mov	r0, fp
   36a54:	bl	2e224 <__flatcc_error_report@@Base>
   36a58:	ldr	r6, [r6]
   36a5c:	cmp	r6, #0
   36a60:	bne	366d4 <__flatcc_fb_build_schema@@Base+0x994>
   36a64:	ldr	r2, [sp, #28]
   36a68:	ldr	sl, [sp, #16]
   36a6c:	cmp	r2, #0
   36a70:	beq	360b0 <__flatcc_fb_build_schema@@Base+0x370>
   36a74:	ldrh	r3, [sl, #10]
   36a78:	cmp	r2, #1
   36a7c:	orr	r3, r3, #8
   36a80:	strh	r3, [sl, #10]
   36a84:	beq	360b0 <__flatcc_fb_build_schema@@Base+0x370>
   36a88:	ldr	r3, [fp, #156]	; 0x9c
   36a8c:	cmp	r3, #0
   36a90:	bne	360b0 <__flatcc_fb_build_schema@@Base+0x370>
   36a94:	ldr	r2, [pc, #824]	; 36dd4 <__flatcc_fb_build_schema@@Base+0x1094>
   36a98:	ldr	r1, [sl, #4]
   36a9c:	mov	r3, r6
   36aa0:	str	r6, [sp, #4]
   36aa4:	str	r6, [sp]
   36aa8:	add	r2, pc, r2
   36aac:	mov	r0, fp
   36ab0:	bl	2e224 <__flatcc_error_report@@Base>
   36ab4:	b	360a8 <__flatcc_fb_build_schema@@Base+0x368>
   36ab8:	cmp	r2, #2
   36abc:	beq	36bdc <__flatcc_fb_build_schema@@Base+0xe9c>
   36ac0:	cmp	r2, #5
   36ac4:	bne	37724 <__flatcc_fb_build_schema@@Base+0x19e4>
   36ac8:	ldrh	r3, [r4, #16]
   36acc:	cmp	r3, #5
   36ad0:	beq	36790 <__flatcc_fb_build_schema@@Base+0xa50>
   36ad4:	ldr	r1, [r4, #4]
   36ad8:	mov	r3, r0
   36adc:	str	r0, [sp, #4]
   36ae0:	str	r0, [sp]
   36ae4:	ldr	r2, [sp, #56]	; 0x38
   36ae8:	mov	r0, fp
   36aec:	bl	2e224 <__flatcc_error_report@@Base>
   36af0:	b	36790 <__flatcc_fb_build_schema@@Base+0xa50>
   36af4:	mov	r4, r0
   36af8:	b	368e0 <__flatcc_fb_build_schema@@Base+0xba0>
   36afc:	ldr	r2, [pc, #724]	; 36dd8 <__flatcc_fb_build_schema@@Base+0x1098>
   36b00:	mov	r3, #0
   36b04:	ldr	r1, [sl, #4]
   36b08:	mov	r0, fp
   36b0c:	str	r3, [sp, #4]
   36b10:	str	r3, [sp]
   36b14:	add	r2, pc, r2
   36b18:	bl	2e224 <__flatcc_error_report@@Base>
   36b1c:	mvn	r0, #0
   36b20:	add	sp, sp, #156	; 0x9c
   36b24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36b28:	add	r2, r7, r2
   36b2c:	str	r4, [r8, r3, lsl #2]
   36b30:	ldr	r2, [r2, #204]	; 0xcc
   36b34:	cmp	r2, #0
   36b38:	beq	36c08 <__flatcc_fb_build_schema@@Base+0xec8>
   36b3c:	cmp	r2, #2
   36b40:	beq	37670 <__flatcc_fb_build_schema@@Base+0x1930>
   36b44:	cmp	r2, #5
   36b48:	bne	36f18 <__flatcc_fb_build_schema@@Base+0x11d8>
   36b4c:	ldrh	r3, [r4, #16]
   36b50:	cmp	r3, #5
   36b54:	beq	3658c <__flatcc_fb_build_schema@@Base+0x84c>
   36b58:	ldr	r1, [r4, #4]
   36b5c:	mov	r3, r0
   36b60:	str	r0, [sp, #4]
   36b64:	str	r0, [sp]
   36b68:	ldr	r2, [sp, #16]
   36b6c:	mov	r0, fp
   36b70:	bl	2e224 <__flatcc_error_report@@Base>
   36b74:	b	3658c <__flatcc_fb_build_schema@@Base+0x84c>
   36b78:	ldr	r2, [pc, #604]	; 36ddc <__flatcc_fb_build_schema@@Base+0x109c>
   36b7c:	mov	r3, #0
   36b80:	ldr	r1, [r6, #4]
   36b84:	add	r2, pc, r2
   36b88:	str	r3, [sp, #4]
   36b8c:	str	r3, [sp]
   36b90:	mov	r0, fp
   36b94:	ldr	sl, [sp, #16]
   36b98:	bl	2e224 <__flatcc_error_report@@Base>
   36b9c:	b	360a8 <__flatcc_fb_build_schema@@Base+0x368>
   36ba0:	ldr	r2, [pc, #568]	; 36de0 <__flatcc_fb_build_schema@@Base+0x10a0>
   36ba4:	ldr	r1, [r4, #4]
   36ba8:	mov	r3, r0
   36bac:	str	r0, [sp, #4]
   36bb0:	str	r0, [sp]
   36bb4:	add	r2, pc, r2
   36bb8:	mov	r0, fp
   36bbc:	bl	2e224 <__flatcc_error_report@@Base>
   36bc0:	b	3658c <__flatcc_fb_build_schema@@Base+0x84c>
   36bc4:	tst	r7, #128	; 0x80
   36bc8:	bne	36a24 <__flatcc_fb_build_schema@@Base+0xce4>
   36bcc:	ldrh	r3, [r6, #56]	; 0x38
   36bd0:	cmp	r3, #0
   36bd4:	beq	366c8 <__flatcc_fb_build_schema@@Base+0x988>
   36bd8:	b	36a3c <__flatcc_fb_build_schema@@Base+0xcfc>
   36bdc:	ldrh	r3, [r4, #16]
   36be0:	cmp	r3, #2
   36be4:	beq	36790 <__flatcc_fb_build_schema@@Base+0xa50>
   36be8:	ldr	r1, [r4, #4]
   36bec:	mov	r3, r0
   36bf0:	str	r0, [sp, #4]
   36bf4:	str	r0, [sp]
   36bf8:	ldr	r2, [sp, #32]
   36bfc:	mov	r0, fp
   36c00:	bl	2e224 <__flatcc_error_report@@Base>
   36c04:	b	36790 <__flatcc_fb_build_schema@@Base+0xa50>
   36c08:	ldrh	r3, [r4, #16]
   36c0c:	cmp	r3, #0
   36c10:	beq	3658c <__flatcc_fb_build_schema@@Base+0x84c>
   36c14:	ldr	r1, [r4, #4]
   36c18:	mov	r3, r2
   36c1c:	str	r2, [sp, #4]
   36c20:	str	r2, [sp]
   36c24:	mov	r0, fp
   36c28:	ldr	r2, [sp, #36]	; 0x24
   36c2c:	bl	2e224 <__flatcc_error_report@@Base>
   36c30:	b	3658c <__flatcc_fb_build_schema@@Base+0x84c>
   36c34:	cmp	r3, #1
   36c38:	moveq	r7, r0
   36c3c:	movne	r7, r1
   36c40:	cmp	r9, #0
   36c44:	beq	3698c <__flatcc_fb_build_schema@@Base+0xc4c>
   36c48:	ldr	r0, [fp, #412]	; 0x19c
   36c4c:	cmp	r0, #0
   36c50:	beq	3698c <__flatcc_fb_build_schema@@Base+0xc4c>
   36c54:	rsb	r2, r2, #0
   36c58:	mov	r1, r7
   36c5c:	bl	2d13c <fb_scope_table_find@@Base>
   36c60:	cmp	r0, #0
   36c64:	beq	36988 <__flatcc_fb_build_schema@@Base+0xc48>
   36c68:	ldr	r3, [r5, #4]
   36c6c:	add	r0, r0, #4
   36c70:	ldm	r3, {r1, r2}
   36c74:	bl	2c1e8 <fb_symbol_table_find@@Base>
   36c78:	subs	r8, r0, #0
   36c7c:	beq	36988 <__flatcc_fb_build_schema@@Base+0xc48>
   36c80:	ldrh	r3, [r8, #8]
   36c84:	cmp	r3, #4
   36c88:	bhi	36988 <__flatcc_fb_build_schema@@Base+0xc48>
   36c8c:	ldr	r1, [r8, #16]
   36c90:	ldr	r0, [sp, #12]
   36c94:	bl	2bb18 <ptr_set_find_item@@Base>
   36c98:	cmp	r0, #0
   36c9c:	bne	369e0 <__flatcc_fb_build_schema@@Base+0xca0>
   36ca0:	b	36988 <__flatcc_fb_build_schema@@Base+0xc48>
   36ca4:	cmp	r1, #0
   36ca8:	cmpeq	r0, #1
   36cac:	beq	36cdc <__flatcc_fb_build_schema@@Base+0xf9c>
   36cb0:	mov	r2, #2
   36cb4:	mov	r3, #0
   36cb8:	b	36cd0 <__flatcc_fb_build_schema@@Base+0xf90>
   36cbc:	adds	r2, r2, r2
   36cc0:	adc	r3, r3, r3
   36cc4:	cmp	r1, r3
   36cc8:	cmpeq	r0, r2
   36ccc:	bcc	3665c <__flatcc_fb_build_schema@@Base+0x91c>
   36cd0:	cmp	r1, r3
   36cd4:	cmpeq	r0, r2
   36cd8:	bne	36cbc <__flatcc_fb_build_schema@@Base+0xf7c>
   36cdc:	strh	r0, [sl, #104]	; 0x68
   36ce0:	b	3667c <__flatcc_fb_build_schema@@Base+0x93c>
   36ce4:	ldr	r3, [r5, #4]
   36ce8:	ldm	r3, {r1, r2}
   36cec:	cmp	r2, #0
   36cf0:	sub	r2, r2, #1
   36cf4:	beq	37840 <__flatcc_fb_build_schema@@Base+0x1b00>
   36cf8:	ldr	r3, [pc, #64]	; 36d40 <__flatcc_fb_build_schema@@Base+0x1000>
   36cfc:	b	35e28 <__flatcc_fb_build_schema@@Base+0xe8>
   36d00:	ldr	r3, [r5, #4]
   36d04:	ldm	r3, {r1, r2}
   36d08:	cmp	r2, #0
   36d0c:	sub	r2, r2, #1
   36d10:	bne	36cf8 <__flatcc_fb_build_schema@@Base+0xfb8>
   36d14:	str	r6, [r5, #88]	; 0x58
   36d18:	str	r9, [r5, #16]
   36d1c:	b	35e5c <__flatcc_fb_build_schema@@Base+0x11c>
   36d20:	cmp	r3, #0
   36d24:	bne	35e4c <__flatcc_fb_build_schema@@Base+0x10c>
   36d28:	str	r6, [r5, #88]	; 0x58
   36d2c:	str	r9, [r5, #16]
   36d30:	b	35e5c <__flatcc_fb_build_schema@@Base+0x11c>
   36d34:	muleq	r3, r0, r2
   36d38:	andeq	r3, r2, r4, ror fp
   36d3c:			; <UNDEFINED> instruction: 0x01000193
   36d40:	tsthi	ip, r5, asr #27
   36d44:	andeq	r3, r2, r4, ror sl
   36d48:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   36d4c:	andeq	r3, r2, ip, lsr #21
   36d50:	andeq	r3, r2, r0, lsl #19
   36d54:	andeq	r2, r2, r4, lsl #13
   36d58:	andeq	r2, r2, r0, lsr #26
   36d5c:	strdeq	r2, [r2], -r0
   36d60:			; <UNDEFINED> instruction: 0x00022cb8
   36d64:	andeq	r3, r2, r4, ror #21
   36d68:	andeq	r3, r2, r4, asr #22
   36d6c:	muleq	r2, r0, r5
   36d70:	andeq	r2, r2, ip, lsr #24
   36d74:	strdeq	r2, [r2], -ip
   36d78:	andeq	r2, r2, r4, asr #23
   36d7c:	andeq	r3, r2, r8, lsl #19
   36d80:	andeq	r3, r2, ip, ror #18
   36d84:	andeq	r3, r2, r8, ror #18
   36d88:	andeq	r8, r0, r0, lsl #13
   36d8c:	andeq	r3, r2, r0, ror #16
   36d90:	andeq	r2, r2, ip, lsr r8
   36d94:	andeq	r2, r2, r4, asr #16
   36d98:	andeq	r2, r2, r0, lsl #16
   36d9c:	andeq	r2, r2, r4, lsl #3
   36da0:	andeq	r2, r2, ip, asr #15
   36da4:	muleq	r2, r4, r7
   36da8:	andeq	r2, r2, r8, lsr #14
   36dac:	andeq	r2, r2, r0, ror r6
   36db0:	andeq	r2, r2, r4, ror #14
   36db4:	andeq	r3, r2, r0, ror #13
   36db8:	andeq	r3, r2, r4, lsr #5
   36dbc:			; <UNDEFINED> instruction: 0x000225b8
   36dc0:	andeq	r2, r2, r0, lsl #11
   36dc4:	andeq	r2, r2, r4, lsr #10
   36dc8:	andeq	r2, r2, r0, ror r4
   36dcc:	andeq	r2, r2, r0, lsr #10
   36dd0:	muleq	r2, r4, r2
   36dd4:	andeq	r2, r2, r0, asr #19
   36dd8:	andeq	r2, r2, ip, ror #31
   36ddc:	andeq	r2, r2, ip, lsl #30
   36de0:	muleq	r2, ip, r0
   36de4:			; <UNDEFINED> instruction: 0x00022bbc
   36de8:	andeq	r2, r2, ip, lsl sl
   36dec:	ldrdeq	r2, [r2], -r4
   36df0:	andeq	r1, r2, ip, ror r8
   36df4:	andeq	r1, r2, r4, asr #16
   36df8:	andeq	r1, r2, r8, ror #15
   36dfc:	andeq	r1, r2, r0, lsr r7
   36e00:	andeq	r1, r2, r0, ror #15
   36e04:	andeq	r2, r2, ip, lsl #14
   36e08:	andeq	r1, r2, r8, lsr #15
   36e0c:	andeq	r1, r2, r8, lsl #12
   36e10:	andeq	r2, r2, r8, asr r3
   36e14:			; <UNDEFINED> instruction: 0x000225bc
   36e18:	strdeq	r2, [r2], -r4
   36e1c:	andeq	r2, r2, r0, ror #1
   36e20:	andeq	r2, r2, r4, lsl #2
   36e24:	strheq	r2, [r2], -ip
   36e28:	andeq	r0, r2, r4, lsr sp
   36e2c:	andeq	r0, r2, ip, lsl #29
   36e30:	andeq	r1, r2, r0, lsr pc
   36e34:	andeq	r0, r0, r6, lsl r6
   36e38:	andeq	r0, r0, r0, lsr #1
   36e3c:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   36e40:	andeq	r2, r2, r0, ror r0
   36e44:	andeq	r1, r2, r4, asr #31
   36e48:	andeq	r0, r2, r8, ror ip
   36e4c:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   36e50:	andeq	r2, r2, ip, ror r2
   36e54:	strdeq	r0, [r0], -r1
   36e58:	andeq	r0, r2, r0, lsr #24
   36e5c:	andeq	r0, r2, r8, ror sp
   36e60:	muleq	r2, r4, r1
   36e64:	andeq	r0, r0, r9, ror #8
   36e68:	mov	r4, r0
   36e6c:	ldr	r3, [r6, #4]
   36e70:	add	r0, r4, #4
   36e74:	ldm	r3, {r1, r2}
   36e78:	bl	2c1e8 <fb_symbol_table_find@@Base>
   36e7c:	subs	sl, r0, #0
   36e80:	beq	36e90 <__flatcc_fb_build_schema@@Base+0x1150>
   36e84:	ldrh	r3, [sl, #8]
   36e88:	cmp	r3, #4
   36e8c:	bls	37034 <__flatcc_fb_build_schema@@Base+0x12f4>
   36e90:	ldr	r3, [r4]
   36e94:	cmp	r3, #0
   36e98:	beq	3630c <__flatcc_fb_build_schema@@Base+0x5cc>
   36e9c:	mov	sl, #0
   36ea0:	ldr	r3, [r3]
   36ea4:	add	sl, sl, #1
   36ea8:	cmp	r3, #0
   36eac:	bne	36ea0 <__flatcc_fb_build_schema@@Base+0x1160>
   36eb0:	rsb	sl, sl, #1
   36eb4:	b	36ee4 <__flatcc_fb_build_schema@@Base+0x11a4>
   36eb8:	cmp	r9, #0
   36ebc:	beq	36ee0 <__flatcc_fb_build_schema@@Base+0x11a0>
   36ec0:	ldr	r0, [fp, #412]	; 0x19c
   36ec4:	cmp	r0, #0
   36ec8:	beq	36ee0 <__flatcc_fb_build_schema@@Base+0x11a0>
   36ecc:	mov	r2, sl
   36ed0:	ldr	r1, [r4]
   36ed4:	bl	2d13c <fb_scope_table_find@@Base>
   36ed8:	cmp	r0, #0
   36edc:	bne	36e68 <__flatcc_fb_build_schema@@Base+0x1128>
   36ee0:	add	sl, sl, #1
   36ee4:	cmp	sl, #0
   36ee8:	bne	36eb8 <__flatcc_fb_build_schema@@Base+0x1178>
   36eec:	cmp	r9, #0
   36ef0:	beq	3630c <__flatcc_fb_build_schema@@Base+0x5cc>
   36ef4:	ldr	r0, [fp, #412]	; 0x19c
   36ef8:	cmp	r0, #0
   36efc:	beq	3630c <__flatcc_fb_build_schema@@Base+0x5cc>
   36f00:	mov	r1, sl
   36f04:	mov	r2, r5
   36f08:	bl	2d13c <fb_scope_table_find@@Base>
   36f0c:	subs	r4, r0, #0
   36f10:	bne	36e6c <__flatcc_fb_build_schema@@Base+0x112c>
   36f14:	b	3630c <__flatcc_fb_build_schema@@Base+0x5cc>
   36f18:	cmp	r2, #4
   36f1c:	bne	37a5c <__flatcc_fb_build_schema@@Base+0x1d1c>
   36f20:	ldrh	r3, [r4, #16]
   36f24:	sub	r3, r3, #4
   36f28:	cmp	r3, #1
   36f2c:	bls	3658c <__flatcc_fb_build_schema@@Base+0x84c>
   36f30:	ldr	r1, [r4, #4]
   36f34:	mov	r3, r0
   36f38:	str	r0, [sp, #4]
   36f3c:	str	r0, [sp]
   36f40:	ldr	r2, [sp, #8]
   36f44:	mov	r0, fp
   36f48:	bl	2e224 <__flatcc_error_report@@Base>
   36f4c:	b	3658c <__flatcc_fb_build_schema@@Base+0x84c>
   36f50:	ldr	r3, [fp, #396]	; 0x18c
   36f54:	cmp	r3, #0
   36f58:	movne	sl, #0
   36f5c:	beq	378a4 <__flatcc_fb_build_schema@@Base+0x1b64>
   36f60:	mov	r1, #0
   36f64:	b	36f6c <__flatcc_fb_build_schema@@Base+0x122c>
   36f68:	mov	r3, r2
   36f6c:	ldr	r2, [r3, #120]	; 0x78
   36f70:	str	r1, [r3, #120]	; 0x78
   36f74:	cmp	r2, #0
   36f78:	mov	r1, r3
   36f7c:	bne	36f68 <__flatcc_fb_build_schema@@Base+0x1228>
   36f80:	b	36354 <__flatcc_fb_build_schema@@Base+0x614>
   36f84:	mov	r5, r0
   36f88:	ldr	r3, [r7, #4]
   36f8c:	add	r0, r5, #4
   36f90:	ldm	r3, {r1, r2}
   36f94:	bl	2c1e8 <fb_symbol_table_find@@Base>
   36f98:	subs	r4, r0, #0
   36f9c:	beq	36fac <__flatcc_fb_build_schema@@Base+0x126c>
   36fa0:	ldrh	r3, [r4, #8]
   36fa4:	cmp	r3, #4
   36fa8:	bls	375c0 <__flatcc_fb_build_schema@@Base+0x1880>
   36fac:	ldr	r3, [r5]
   36fb0:	cmp	r3, #0
   36fb4:	beq	3647c <__flatcc_fb_build_schema@@Base+0x73c>
   36fb8:	mov	r4, #0
   36fbc:	ldr	r3, [r3]
   36fc0:	add	r4, r4, #1
   36fc4:	cmp	r3, #0
   36fc8:	bne	36fbc <__flatcc_fb_build_schema@@Base+0x127c>
   36fcc:	rsb	r4, r4, #1
   36fd0:	b	37000 <__flatcc_fb_build_schema@@Base+0x12c0>
   36fd4:	cmp	r9, #0
   36fd8:	beq	36ffc <__flatcc_fb_build_schema@@Base+0x12bc>
   36fdc:	ldr	r0, [fp, #412]	; 0x19c
   36fe0:	cmp	r0, #0
   36fe4:	beq	36ffc <__flatcc_fb_build_schema@@Base+0x12bc>
   36fe8:	mov	r2, r4
   36fec:	ldr	r1, [r5]
   36ff0:	bl	2d13c <fb_scope_table_find@@Base>
   36ff4:	cmp	r0, #0
   36ff8:	bne	36f84 <__flatcc_fb_build_schema@@Base+0x1244>
   36ffc:	add	r4, r4, #1
   37000:	cmp	r4, #0
   37004:	bne	36fd4 <__flatcc_fb_build_schema@@Base+0x1294>
   37008:	cmp	r9, #0
   3700c:	beq	3647c <__flatcc_fb_build_schema@@Base+0x73c>
   37010:	ldr	r0, [fp, #412]	; 0x19c
   37014:	cmp	r0, #0
   37018:	beq	3647c <__flatcc_fb_build_schema@@Base+0x73c>
   3701c:	mov	r1, r4
   37020:	mov	r2, r6
   37024:	bl	2d13c <fb_scope_table_find@@Base>
   37028:	subs	r5, r0, #0
   3702c:	bne	36f88 <__flatcc_fb_build_schema@@Base+0x1248>
   37030:	b	3647c <__flatcc_fb_build_schema@@Base+0x73c>
   37034:	ldr	r1, [sl, #16]
   37038:	ldr	r0, [sp, #12]
   3703c:	bl	2bb18 <ptr_set_find_item@@Base>
   37040:	cmp	r0, #0
   37044:	beq	36e90 <__flatcc_fb_build_schema@@Base+0x1150>
   37048:	ldrh	r2, [sl, #8]
   3704c:	cmp	r2, #0
   37050:	beq	370bc <__flatcc_fb_build_schema@@Base+0x137c>
   37054:	mov	r2, #0
   37058:	ldr	r3, [sl, #4]
   3705c:	ldr	r1, [r8, #4]
   37060:	str	r2, [sp, #4]
   37064:	str	r2, [sp]
   37068:	ldr	r2, [pc, #-652]	; 36de4 <__flatcc_fb_build_schema@@Base+0x10a4>
   3706c:	mov	r0, fp
   37070:	add	r2, pc, r2
   37074:	bl	2e224 <__flatcc_error_report@@Base>
   37078:	mov	r3, #1
   3707c:	strh	r3, [r8, #24]
   37080:	b	361f4 <__flatcc_fb_build_schema@@Base+0x4b4>
   37084:	ldrh	r3, [sl, #48]	; 0x30
   37088:	cmp	r3, #1
   3708c:	beq	36338 <__flatcc_fb_build_schema@@Base+0x5f8>
   37090:	mov	r1, sl
   37094:	mov	r0, fp
   37098:	bl	3306c <__flatcc_fb_clear_parser@@Base+0x688>
   3709c:	cmp	r0, #0
   370a0:	beq	36338 <__flatcc_fb_build_schema@@Base+0x5f8>
   370a4:	mov	r3, #1
   370a8:	strh	r3, [sl, #48]	; 0x30
   370ac:	ldr	sl, [sl]
   370b0:	cmp	sl, #0
   370b4:	bne	36158 <__flatcc_fb_build_schema@@Base+0x418>
   370b8:	b	36344 <__flatcc_fb_build_schema@@Base+0x604>
   370bc:	ldr	r1, [r8, #16]
   370c0:	ldr	r3, [sp, #8]
   370c4:	mov	r0, #14
   370c8:	cmp	r1, #0
   370cc:	str	sl, [r8, #32]
   370d0:	strh	r0, [r8, #40]	; 0x28
   370d4:	ldr	r4, [r3, #12]
   370d8:	beq	37174 <__flatcc_fb_build_schema@@Base+0x1434>
   370dc:	mov	r5, r1
   370e0:	b	370ec <__flatcc_fb_build_schema@@Base+0x13ac>
   370e4:	mov	r2, r3
   370e8:	mov	r5, r6
   370ec:	ldr	r6, [r5]
   370f0:	add	r3, r2, #1
   370f4:	cmp	r6, #0
   370f8:	bne	370e4 <__flatcc_fb_build_schema@@Base+0x13a4>
   370fc:	adds	r0, r4, #0
   37100:	movne	r0, #1
   37104:	cmp	r3, #1
   37108:	movne	r0, #0
   3710c:	cmp	r0, #0
   37110:	movne	sl, r6
   37114:	bne	37194 <__flatcc_fb_build_schema@@Base+0x1454>
   37118:	cmp	r3, #1
   3711c:	moveq	r6, r0
   37120:	movne	r6, r1
   37124:	cmp	r9, #0
   37128:	beq	37174 <__flatcc_fb_build_schema@@Base+0x1434>
   3712c:	ldr	r0, [fp, #412]	; 0x19c
   37130:	cmp	r0, #0
   37134:	beq	37174 <__flatcc_fb_build_schema@@Base+0x1434>
   37138:	rsb	r2, r2, #0
   3713c:	mov	r1, r6
   37140:	bl	2d13c <fb_scope_table_find@@Base>
   37144:	cmp	r0, #0
   37148:	beq	37170 <__flatcc_fb_build_schema@@Base+0x1430>
   3714c:	ldr	r3, [r5, #4]
   37150:	add	r0, r0, #4
   37154:	ldm	r3, {r1, r2}
   37158:	bl	2c1e8 <fb_symbol_table_find@@Base>
   3715c:	subs	r6, r0, #0
   37160:	beq	37170 <__flatcc_fb_build_schema@@Base+0x1430>
   37164:	ldrh	r2, [r6, #8]
   37168:	cmp	r2, #4
   3716c:	bls	37780 <__flatcc_fb_build_schema@@Base+0x1a40>
   37170:	ldr	r1, [r8, #16]
   37174:	mov	r3, r8
   37178:	ldr	r2, [sp, #32]
   3717c:	mov	r0, fp
   37180:	bl	2f7f4 <error_ref_sym@@Base>
   37184:	mov	r3, #1
   37188:	strh	r3, [r8, #24]
   3718c:	b	361f4 <__flatcc_fb_build_schema@@Base+0x4b4>
   37190:	mov	r4, r0
   37194:	ldr	r3, [r5, #4]
   37198:	add	r0, r4, #4
   3719c:	ldm	r3, {r1, r2}
   371a0:	bl	2c1e8 <fb_symbol_table_find@@Base>
   371a4:	subs	r6, r0, #0
   371a8:	beq	371b8 <__flatcc_fb_build_schema@@Base+0x1478>
   371ac:	ldrh	r3, [r6, #8]
   371b0:	cmp	r3, #4
   371b4:	bls	37240 <__flatcc_fb_build_schema@@Base+0x1500>
   371b8:	ldr	r3, [r4]
   371bc:	cmp	r3, #0
   371c0:	beq	37170 <__flatcc_fb_build_schema@@Base+0x1430>
   371c4:	mov	r6, #0
   371c8:	ldr	r3, [r3]
   371cc:	add	r6, r6, #1
   371d0:	cmp	r3, #0
   371d4:	bne	371c8 <__flatcc_fb_build_schema@@Base+0x1488>
   371d8:	rsb	r6, r6, #1
   371dc:	b	3720c <__flatcc_fb_build_schema@@Base+0x14cc>
   371e0:	cmp	r9, #0
   371e4:	beq	37208 <__flatcc_fb_build_schema@@Base+0x14c8>
   371e8:	ldr	r0, [fp, #412]	; 0x19c
   371ec:	cmp	r0, #0
   371f0:	beq	37208 <__flatcc_fb_build_schema@@Base+0x14c8>
   371f4:	mov	r2, r6
   371f8:	ldr	r1, [r4]
   371fc:	bl	2d13c <fb_scope_table_find@@Base>
   37200:	cmp	r0, #0
   37204:	bne	37190 <__flatcc_fb_build_schema@@Base+0x1450>
   37208:	add	r6, r6, #1
   3720c:	cmp	r6, #0
   37210:	bne	371e0 <__flatcc_fb_build_schema@@Base+0x14a0>
   37214:	cmp	r9, #0
   37218:	beq	37170 <__flatcc_fb_build_schema@@Base+0x1430>
   3721c:	ldr	r0, [fp, #412]	; 0x19c
   37220:	cmp	r0, #0
   37224:	beq	37170 <__flatcc_fb_build_schema@@Base+0x1430>
   37228:	mov	r1, r6
   3722c:	mov	r2, sl
   37230:	bl	2d13c <fb_scope_table_find@@Base>
   37234:	subs	r4, r0, #0
   37238:	bne	37194 <__flatcc_fb_build_schema@@Base+0x1454>
   3723c:	b	37170 <__flatcc_fb_build_schema@@Base+0x1430>
   37240:	ldr	r1, [r6, #16]
   37244:	ldr	r0, [sp, #12]
   37248:	bl	2bb18 <ptr_set_find_item@@Base>
   3724c:	cmp	r0, #0
   37250:	beq	371b8 <__flatcc_fb_build_schema@@Base+0x1478>
   37254:	ldrh	r1, [r6, #8]
   37258:	cmp	r1, #0
   3725c:	beq	37438 <__flatcc_fb_build_schema@@Base+0x16f8>
   37260:	mov	r2, #0
   37264:	ldr	r3, [r6, #4]
   37268:	ldr	r1, [r8, #4]
   3726c:	str	r2, [sp, #4]
   37270:	str	r2, [sp]
   37274:	ldr	r2, [pc, #-1172]	; 36de8 <__flatcc_fb_build_schema@@Base+0x10a8>
   37278:	mov	r0, fp
   3727c:	add	r2, pc, r2
   37280:	bl	2e224 <__flatcc_error_report@@Base>
   37284:	mov	r3, #1
   37288:	strh	r3, [r8, #24]
   3728c:	b	361f4 <__flatcc_fb_build_schema@@Base+0x4b4>
   37290:	ldr	r2, [pc, #-1196]	; 36dec <__flatcc_fb_build_schema@@Base+0x10ac>
   37294:	ldr	r1, [r8, #4]
   37298:	mov	r3, r0
   3729c:	str	r0, [sp, #4]
   372a0:	str	r0, [sp]
   372a4:	add	r2, pc, r2
   372a8:	mov	r0, fp
   372ac:	bl	2e224 <__flatcc_error_report@@Base>
   372b0:	b	36230 <__flatcc_fb_build_schema@@Base+0x4f0>
   372b4:	ldr	r6, [sl, #20]
   372b8:	mov	r2, r7
   372bc:	mov	r1, r4
   372c0:	ldr	r0, [sp, #8]
   372c4:	bl	140a4 <memset@plt>
   372c8:	mov	r2, r7
   372cc:	mov	r1, r4
   372d0:	mov	r0, r8
   372d4:	bl	140a4 <memset@plt>
   372d8:	cmp	r6, #0
   372dc:	beq	37a30 <__flatcc_fb_build_schema@@Base+0x1cf0>
   372e0:	mov	r2, r6
   372e4:	mov	r1, #1
   372e8:	ldrh	r3, [r2, #24]
   372ec:	ldrh	r0, [r2, #74]	; 0x4a
   372f0:	cmp	r3, #15
   372f4:	bhi	37338 <__flatcc_fb_build_schema@@Base+0x15f8>
   372f8:	lsl	r3, r1, r3
   372fc:	ands	ip, r3, r5
   37300:	bne	37334 <__flatcc_fb_build_schema@@Base+0x15f4>
   37304:	tst	r3, #2
   37308:	bne	37798 <__flatcc_fb_build_schema@@Base+0x1a58>
   3730c:	tst	r3, #16384	; 0x4000
   37310:	beq	37338 <__flatcc_fb_build_schema@@Base+0x15f8>
   37314:	ldr	r0, [r2, #16]
   37318:	ldrh	r3, [r0, #8]
   3731c:	cmp	r3, #3
   37320:	beq	37430 <__flatcc_fb_build_schema@@Base+0x16f0>
   37324:	cmp	r3, #4
   37328:	beq	37334 <__flatcc_fb_build_schema@@Base+0x15f4>
   3732c:	cmp	r3, #1
   37330:	beq	37430 <__flatcc_fb_build_schema@@Base+0x16f0>
   37334:	ldrh	r0, [fp, #192]	; 0xc0
   37338:	cmp	r0, #0
   3733c:	beq	37a38 <__flatcc_fb_build_schema@@Base+0x1cf8>
   37340:	lsrs	r0, r0, #1
   37344:	mov	r3, r4
   37348:	beq	37364 <__flatcc_fb_build_schema@@Base+0x1624>
   3734c:	add	r3, r3, #1
   37350:	lsrs	r0, r0, #1
   37354:	uxth	r3, r3
   37358:	bne	3734c <__flatcc_fb_build_schema@@Base+0x160c>
   3735c:	cmp	r3, #7
   37360:	movcs	r3, #7
   37364:	lsl	r3, r3, #2
   37368:	add	r0, sp, #152	; 0x98
   3736c:	add	r0, r0, r3
   37370:	ldr	ip, [r0, #-84]	; 0xffffffac
   37374:	cmp	ip, #0
   37378:	streq	r2, [r0, #-84]	; 0xffffffac
   3737c:	ldrne	r0, [r0, #-48]	; 0xffffffd0
   37380:	add	ip, sp, #152	; 0x98
   37384:	add	r3, ip, r3
   37388:	strne	r2, [r0]
   3738c:	add	r0, r2, #108	; 0x6c
   37390:	ldr	r2, [r2]
   37394:	str	r0, [r3, #-48]	; 0xffffffd0
   37398:	cmp	r2, #0
   3739c:	bne	372e8 <__flatcc_fb_build_schema@@Base+0x15a8>
   373a0:	ldr	r2, [sp, #96]	; 0x60
   373a4:	ldr	r3, [sp, #16]
   373a8:	mov	r1, #8
   373ac:	str	r3, [sp, #136]	; 0x88
   373b0:	mov	r0, r3
   373b4:	b	373d0 <__flatcc_fb_build_schema@@Base+0x1690>
   373b8:	sub	r2, r1, #2
   373bc:	mov	r1, r3
   373c0:	uxth	r3, r2
   373c4:	add	r2, sp, #152	; 0x98
   373c8:	add	r3, r2, r3, lsl #2
   373cc:	ldr	r2, [r3, #-84]	; 0xffffffac
   373d0:	sub	r3, r1, #1
   373d4:	cmp	r2, #0
   373d8:	uxth	r3, r3
   373dc:	bne	373fc <__flatcc_fb_build_schema@@Base+0x16bc>
   373e0:	cmp	r3, #0
   373e4:	bne	373b8 <__flatcc_fb_build_schema@@Base+0x1678>
   373e8:	ldr	r3, [sp, #68]	; 0x44
   373ec:	str	r3, [r0]
   373f0:	ldr	r3, [sp, #100]	; 0x64
   373f4:	str	r3, [sl, #24]
   373f8:	b	363cc <__flatcc_fb_build_schema@@Base+0x68c>
   373fc:	cmp	r3, #0
   37400:	str	r2, [r0]
   37404:	beq	373f0 <__flatcc_fb_build_schema@@Base+0x16b0>
   37408:	sub	r2, r1, #2
   3740c:	add	r1, sp, #152	; 0x98
   37410:	add	r1, r1, r3, lsl #2
   37414:	uxth	r2, r2
   37418:	ldr	r0, [r1, #-48]	; 0xffffffd0
   3741c:	add	r1, sp, #152	; 0x98
   37420:	add	r2, r1, r2, lsl #2
   37424:	mov	r1, r3
   37428:	ldr	r2, [r2, #-84]	; 0xffffffac
   3742c:	b	373d0 <__flatcc_fb_build_schema@@Base+0x1690>
   37430:	ldrh	r0, [r0, #104]	; 0x68
   37434:	b	37338 <__flatcc_fb_build_schema@@Base+0x15f8>
   37438:	mov	r2, #0
   3743c:	mov	r3, #0
   37440:	mov	r0, #14
   37444:	ldr	r4, [r8, #64]	; 0x40
   37448:	add	sl, sp, #104	; 0x68
   3744c:	strd	r2, [r8, #88]	; 0x58
   37450:	strh	r0, [r8, #24]
   37454:	str	r6, [r8, #16]
   37458:	mov	r0, sl
   3745c:	mov	r2, #48	; 0x30
   37460:	bl	140a4 <memset@plt>
   37464:	cmp	r4, #0
   37468:	beq	37820 <__flatcc_fb_build_schema@@Base+0x1ae0>
   3746c:	ldr	r3, [pc, #-1668]	; 36df0 <__flatcc_fb_build_schema@@Base+0x10b0>
   37470:	ldr	r6, [sp, #16]
   37474:	add	r3, pc, r3
   37478:	str	r3, [sp, #20]
   3747c:	ldr	r3, [pc, #-1680]	; 36df4 <__flatcc_fb_build_schema@@Base+0x10b4>
   37480:	mov	r5, #100	; 0x64
   37484:	add	r3, pc, r3
   37488:	str	r3, [sp, #24]
   3748c:	b	374f0 <__flatcc_fb_build_schema@@Base+0x17b0>
   37490:	mov	r1, #1
   37494:	ldr	r2, [sl, r3, lsl #2]
   37498:	orr	r6, r6, r1, lsl r3
   3749c:	cmp	r2, #0
   374a0:	uxth	r6, r6
   374a4:	lsl	r1, r3, #2
   374a8:	beq	3754c <__flatcc_fb_build_schema@@Base+0x180c>
   374ac:	ldr	r2, [pc, #-1724]	; 36df8 <__flatcc_fb_build_schema@@Base+0x10b8>
   374b0:	mov	r3, #0
   374b4:	ldr	r1, [r4, #4]
   374b8:	add	r2, pc, r2
   374bc:	str	r3, [sp, #4]
   374c0:	str	r3, [sp]
   374c4:	mov	r0, fp
   374c8:	bl	2e224 <__flatcc_error_report@@Base>
   374cc:	subs	r5, r5, #1
   374d0:	ldr	r4, [r4]
   374d4:	movne	r2, #1
   374d8:	moveq	r2, #0
   374dc:	cmp	r4, #0
   374e0:	moveq	r2, #0
   374e4:	andne	r2, r2, #1
   374e8:	cmp	r2, #0
   374ec:	beq	37590 <__flatcc_fb_build_schema@@Base+0x1850>
   374f0:	ldr	r3, [r4, #4]
   374f4:	ldr	r0, [fp, #412]	; 0x19c
   374f8:	ldm	r3, {r1, r2}
   374fc:	add	r0, r0, #16
   37500:	bl	3e04c <fb_name_table_find@@Base>
   37504:	cmp	r0, #0
   37508:	beq	37634 <__flatcc_fb_build_schema@@Base+0x18f4>
   3750c:	ldr	r3, [r0, #24]
   37510:	cmp	r3, #0
   37514:	beq	374cc <__flatcc_fb_build_schema@@Base+0x178c>
   37518:	mov	r2, #4
   3751c:	asr	r2, r2, r3
   37520:	ands	r2, r2, #1
   37524:	bne	37490 <__flatcc_fb_build_schema@@Base+0x1750>
   37528:	ldr	r1, [r4, #4]
   3752c:	mov	r3, r2
   37530:	str	r2, [sp, #4]
   37534:	str	r2, [sp]
   37538:	ldr	r2, [pc, #-1860]	; 36dfc <__flatcc_fb_build_schema@@Base+0x10bc>
   3753c:	mov	r0, fp
   37540:	add	r2, pc, r2
   37544:	bl	2e224 <__flatcc_error_report@@Base>
   37548:	b	374cc <__flatcc_fb_build_schema@@Base+0x178c>
   3754c:	ldr	r0, [sp, #36]	; 0x24
   37550:	str	r4, [sl, r3, lsl #2]
   37554:	add	r1, r0, r1
   37558:	ldr	r0, [r1, #204]	; 0xcc
   3755c:	cmp	r0, #0
   37560:	bne	376e8 <__flatcc_fb_build_schema@@Base+0x19a8>
   37564:	ldrh	r3, [r4, #16]
   37568:	cmp	r3, #0
   3756c:	beq	374cc <__flatcc_fb_build_schema@@Base+0x178c>
   37570:	ldr	r1, [r4, #4]
   37574:	mov	r3, r0
   37578:	str	r0, [sp, #4]
   3757c:	str	r0, [sp]
   37580:	ldr	r2, [sp, #24]
   37584:	mov	r0, fp
   37588:	bl	2e224 <__flatcc_error_report@@Base>
   3758c:	b	374cc <__flatcc_fb_build_schema@@Base+0x178c>
   37590:	cmp	r4, #0
   37594:	beq	375b8 <__flatcc_fb_build_schema@@Base+0x1878>
   37598:	ldr	r1, [r4, #4]
   3759c:	mov	r3, r2
   375a0:	str	r2, [sp, #4]
   375a4:	str	r2, [sp]
   375a8:	ldr	r2, [pc, #-1968]	; 36e00 <__flatcc_fb_build_schema@@Base+0x10c0>
   375ac:	mov	r0, fp
   375b0:	add	r2, pc, r2
   375b4:	bl	2e224 <__flatcc_error_report@@Base>
   375b8:	strh	r6, [r8, #72]	; 0x48
   375bc:	b	361f4 <__flatcc_fb_build_schema@@Base+0x4b4>
   375c0:	ldr	r1, [r4, #16]
   375c4:	ldr	r0, [sp, #12]
   375c8:	bl	2bb18 <ptr_set_find_item@@Base>
   375cc:	cmp	r0, #0
   375d0:	beq	36fac <__flatcc_fb_build_schema@@Base+0x126c>
   375d4:	ldr	r3, [fp, #176]	; 0xb0
   375d8:	str	r4, [fp, #404]	; 0x194
   375dc:	cmp	r3, #0
   375e0:	beq	3775c <__flatcc_fb_build_schema@@Base+0x1a1c>
   375e4:	ldrh	r3, [r4, #8]
   375e8:	cmp	r3, #1
   375ec:	bls	364a0 <__flatcc_fb_build_schema@@Base+0x760>
   375f0:	ldr	r2, [pc, #-2036]	; 36e04 <__flatcc_fb_build_schema@@Base+0x10c4>
   375f4:	mov	r3, #0
   375f8:	add	r2, pc, r2
   375fc:	ldr	r1, [fp, #400]	; 0x190
   37600:	mov	r0, fp
   37604:	bl	2f7f4 <error_ref_sym@@Base>
   37608:	b	364a0 <__flatcc_fb_build_schema@@Base+0x760>
   3760c:	ldr	r2, [pc, #-2060]	; 36e08 <__flatcc_fb_build_schema@@Base+0x10c8>
   37610:	ldr	r1, [r8, #4]
   37614:	mov	r3, r0
   37618:	str	r0, [sp, #4]
   3761c:	str	r0, [sp]
   37620:	add	r2, pc, r2
   37624:	mov	r0, fp
   37628:	ldr	sl, [sp, #8]
   3762c:	bl	2e224 <__flatcc_error_report@@Base>
   37630:	b	370a4 <__flatcc_fb_build_schema@@Base+0x1364>
   37634:	ldr	r2, [pc, #-2096]	; 36e0c <__flatcc_fb_build_schema@@Base+0x10cc>
   37638:	ldr	r1, [r4, #4]
   3763c:	mov	r3, r0
   37640:	str	r0, [sp, #4]
   37644:	str	r0, [sp]
   37648:	add	r2, pc, r2
   3764c:	mov	r0, fp
   37650:	bl	2e224 <__flatcc_error_report@@Base>
   37654:	b	374cc <__flatcc_fb_build_schema@@Base+0x178c>
   37658:	ldr	r1, [sl, #16]
   3765c:	ldr	r0, [sp, #12]
   37660:	bl	2bb18 <ptr_set_find_item@@Base>
   37664:	cmp	r0, #0
   37668:	bne	37048 <__flatcc_fb_build_schema@@Base+0x1308>
   3766c:	b	3630c <__flatcc_fb_build_schema@@Base+0x5cc>
   37670:	ldrh	r3, [r4, #16]
   37674:	cmp	r3, #2
   37678:	beq	3658c <__flatcc_fb_build_schema@@Base+0x84c>
   3767c:	ldr	r1, [r4, #4]
   37680:	mov	r3, r0
   37684:	str	r0, [sp, #4]
   37688:	str	r0, [sp]
   3768c:	ldr	r2, [sp, #28]
   37690:	mov	r0, fp
   37694:	bl	2e224 <__flatcc_error_report@@Base>
   37698:	b	3658c <__flatcc_fb_build_schema@@Base+0x84c>
   3769c:	ldrh	r3, [r6, #24]
   376a0:	strh	r4, [r6, #72]	; 0x48
   376a4:	cmp	r3, #8
   376a8:	bne	36888 <__flatcc_fb_build_schema@@Base+0xb48>
   376ac:	b	36a30 <__flatcc_fb_build_schema@@Base+0xcf0>
   376b0:	ldrh	r3, [r6, #72]	; 0x48
   376b4:	tst	r3, #128	; 0x80
   376b8:	beq	36a30 <__flatcc_fb_build_schema@@Base+0xcf0>
   376bc:	ldr	r2, [pc, #-2228]	; 36e10 <__flatcc_fb_build_schema@@Base+0x10d0>
   376c0:	mov	r3, #0
   376c4:	ldr	r1, [r6, #4]
   376c8:	add	r2, pc, r2
   376cc:	str	r3, [sp, #4]
   376d0:	str	r3, [sp]
   376d4:	mov	r0, fp
   376d8:	ldr	sl, [sp, #16]
   376dc:	bl	2e224 <__flatcc_error_report@@Base>
   376e0:	strh	r4, [r6, #24]
   376e4:	b	360a8 <__flatcc_fb_build_schema@@Base+0x368>
   376e8:	cmp	r0, #2
   376ec:	beq	377f4 <__flatcc_fb_build_schema@@Base+0x1ab4>
   376f0:	cmp	r0, #5
   376f4:	bne	378ac <__flatcc_fb_build_schema@@Base+0x1b6c>
   376f8:	ldrh	r3, [r4, #16]
   376fc:	cmp	r3, #5
   37700:	beq	374cc <__flatcc_fb_build_schema@@Base+0x178c>
   37704:	ldr	r1, [r4, #4]
   37708:	mov	r3, r2
   3770c:	str	r2, [sp, #4]
   37710:	str	r2, [sp]
   37714:	mov	r0, fp
   37718:	ldr	r2, [sp, #48]	; 0x30
   3771c:	bl	2e224 <__flatcc_error_report@@Base>
   37720:	b	374cc <__flatcc_fb_build_schema@@Base+0x178c>
   37724:	cmp	r2, #4
   37728:	bne	378e4 <__flatcc_fb_build_schema@@Base+0x1ba4>
   3772c:	ldrh	r3, [r4, #16]
   37730:	sub	r3, r3, #4
   37734:	cmp	r3, #1
   37738:	bls	36790 <__flatcc_fb_build_schema@@Base+0xa50>
   3773c:	ldr	r1, [r4, #4]
   37740:	mov	r3, r0
   37744:	str	r0, [sp, #4]
   37748:	str	r0, [sp]
   3774c:	ldr	r2, [sp, #52]	; 0x34
   37750:	mov	r0, fp
   37754:	bl	2e224 <__flatcc_error_report@@Base>
   37758:	b	36790 <__flatcc_fb_build_schema@@Base+0xa50>
   3775c:	ldrh	r2, [r4, #8]
   37760:	cmp	r2, #0
   37764:	beq	364a0 <__flatcc_fb_build_schema@@Base+0x760>
   37768:	ldr	r2, [pc, #-2396]	; 36e14 <__flatcc_fb_build_schema@@Base+0x10d4>
   3776c:	ldr	r1, [fp, #400]	; 0x190
   37770:	add	r2, pc, r2
   37774:	mov	r0, fp
   37778:	bl	2f7f4 <error_ref_sym@@Base>
   3777c:	b	364a0 <__flatcc_fb_build_schema@@Base+0x760>
   37780:	ldr	r1, [r6, #16]
   37784:	ldr	r0, [sp, #12]
   37788:	bl	2bb18 <ptr_set_find_item@@Base>
   3778c:	cmp	r0, #0
   37790:	bne	37254 <__flatcc_fb_build_schema@@Base+0x1514>
   37794:	b	37170 <__flatcc_fb_build_schema@@Base+0x1430>
   37798:	add	r2, sp, #152	; 0x98
   3779c:	str	ip, [r2, #-88]!	; 0xffffffa8
   377a0:	b	377a8 <__flatcc_fb_build_schema@@Base+0x1a68>
   377a4:	mov	r6, r3
   377a8:	ldr	r3, [r6]
   377ac:	str	r6, [r2]
   377b0:	cmp	r3, #0
   377b4:	add	r2, r6, #108	; 0x6c
   377b8:	bne	377a4 <__flatcc_fb_build_schema@@Base+0x1a64>
   377bc:	str	r3, [r6, #108]	; 0x6c
   377c0:	ldr	r3, [sp, #64]	; 0x40
   377c4:	b	373f4 <__flatcc_fb_build_schema@@Base+0x16b4>
   377c8:	ldr	r2, [fp, #208]	; 0xd0
   377cc:	cmp	r2, #0
   377d0:	beq	364a8 <__flatcc_fb_build_schema@@Base+0x768>
   377d4:	ldr	r2, [pc, #-2500]	; 36e18 <__flatcc_fb_build_schema@@Base+0x10d8>
   377d8:	str	r3, [sp, #4]
   377dc:	str	r3, [sp]
   377e0:	mov	r1, r3
   377e4:	add	r2, pc, r2
   377e8:	mov	r0, fp
   377ec:	bl	2e224 <__flatcc_error_report@@Base>
   377f0:	b	364a8 <__flatcc_fb_build_schema@@Base+0x768>
   377f4:	ldrh	r3, [r4, #16]
   377f8:	cmp	r3, #2
   377fc:	beq	374cc <__flatcc_fb_build_schema@@Base+0x178c>
   37800:	ldr	r1, [r4, #4]
   37804:	mov	r3, r2
   37808:	str	r2, [sp, #4]
   3780c:	str	r2, [sp]
   37810:	mov	r0, fp
   37814:	ldr	r2, [sp, #20]
   37818:	bl	2e224 <__flatcc_error_report@@Base>
   3781c:	b	374cc <__flatcc_fb_build_schema@@Base+0x178c>
   37820:	ldr	r6, [sp, #16]
   37824:	b	375b8 <__flatcc_fb_build_schema@@Base+0x1878>
   37828:	ldr	r0, [sp, #12]
   3782c:	ldr	r1, [r4, #16]
   37830:	bl	2bb18 <ptr_set_find_item@@Base>
   37834:	cmp	r0, #0
   37838:	bne	375d4 <__flatcc_fb_build_schema@@Base+0x1894>
   3783c:	b	3647c <__flatcc_fb_build_schema@@Base+0x73c>
   37840:	str	r6, [r5, #88]	; 0x58
   37844:	str	r9, [r5, #16]
   37848:	b	35da0 <__flatcc_fb_build_schema@@Base+0x60>
   3784c:	ldr	r2, [pc, #-2616]	; 36e1c <__flatcc_fb_build_schema@@Base+0x10dc>
   37850:	mov	r3, #0
   37854:	ldr	r1, [sl, #4]
   37858:	add	r2, pc, r2
   3785c:	str	r3, [sp, #4]
   37860:	str	r3, [sp]
   37864:	mov	r0, fp
   37868:	bl	2e224 <__flatcc_error_report@@Base>
   3786c:	b	360a8 <__flatcc_fb_build_schema@@Base+0x368>
   37870:	ldr	r2, [pc, #-2648]	; 36e20 <__flatcc_fb_build_schema@@Base+0x10e0>
   37874:	ldr	r1, [r6, #4]
   37878:	mov	r3, r0
   3787c:	str	r0, [sp, #4]
   37880:	str	r0, [sp]
   37884:	add	r2, pc, r2
   37888:	mov	r0, fp
   3788c:	ldr	sl, [sp, #16]
   37890:	bl	2e224 <__flatcc_error_report@@Base>
   37894:	b	360a8 <__flatcc_fb_build_schema@@Base+0x368>
   37898:	ldr	r3, [fp, #396]	; 0x18c
   3789c:	cmp	r3, #0
   378a0:	bne	36f60 <__flatcc_fb_build_schema@@Base+0x1220>
   378a4:	str	r3, [fp, #396]	; 0x18c
   378a8:	b	363d8 <__flatcc_fb_build_schema@@Base+0x698>
   378ac:	cmp	r0, #4
   378b0:	bne	37918 <__flatcc_fb_build_schema@@Base+0x1bd8>
   378b4:	ldrh	r3, [r4, #16]
   378b8:	sub	r3, r3, #4
   378bc:	cmp	r3, #1
   378c0:	bls	374cc <__flatcc_fb_build_schema@@Base+0x178c>
   378c4:	ldr	r1, [r4, #4]
   378c8:	mov	r3, r2
   378cc:	str	r2, [sp, #4]
   378d0:	str	r2, [sp]
   378d4:	mov	r0, fp
   378d8:	ldr	r2, [sp, #44]	; 0x2c
   378dc:	bl	2e224 <__flatcc_error_report@@Base>
   378e0:	b	374cc <__flatcc_fb_build_schema@@Base+0x178c>
   378e4:	cmp	r2, #6
   378e8:	bne	36790 <__flatcc_fb_build_schema@@Base+0xa50>
   378ec:	ldrh	r3, [r4, #16]
   378f0:	cmp	r3, #6
   378f4:	beq	36790 <__flatcc_fb_build_schema@@Base+0xa50>
   378f8:	mov	r3, #0
   378fc:	ldr	r1, [r4, #4]
   37900:	ldr	r2, [sp, #48]	; 0x30
   37904:	str	r3, [sp, #4]
   37908:	str	r3, [sp]
   3790c:	mov	r0, fp
   37910:	bl	2e224 <__flatcc_error_report@@Base>
   37914:	b	36790 <__flatcc_fb_build_schema@@Base+0xa50>
   37918:	cmp	r0, #6
   3791c:	bne	374cc <__flatcc_fb_build_schema@@Base+0x178c>
   37920:	ldrh	r3, [r4, #16]
   37924:	cmp	r3, #6
   37928:	beq	374cc <__flatcc_fb_build_schema@@Base+0x178c>
   3792c:	mov	r3, #0
   37930:	ldr	r1, [r4, #4]
   37934:	ldr	r2, [sp, #40]	; 0x28
   37938:	str	r3, [sp, #4]
   3793c:	str	r3, [sp]
   37940:	mov	r0, fp
   37944:	bl	2e224 <__flatcc_error_report@@Base>
   37948:	b	374cc <__flatcc_fb_build_schema@@Base+0x178c>
   3794c:	ldr	r1, [r6, #4]
   37950:	mov	r3, r2
   37954:	str	r2, [sp, #4]
   37958:	str	r2, [sp]
   3795c:	ldr	r2, [pc, #-2880]	; 36e24 <__flatcc_fb_build_schema@@Base+0x10e4>
   37960:	mov	r0, fp
   37964:	add	r2, pc, r2
   37968:	ldr	sl, [sp, #16]
   3796c:	bl	2e224 <__flatcc_error_report@@Base>
   37970:	mov	r3, #1
   37974:	strh	r3, [r6, #24]
   37978:	b	360a8 <__flatcc_fb_build_schema@@Base+0x368>
   3797c:	ldr	r3, [pc, #-2908]	; 36e28 <__flatcc_fb_build_schema@@Base+0x10e8>
   37980:	ldr	r1, [pc, #-2908]	; 36e2c <__flatcc_fb_build_schema@@Base+0x10ec>
   37984:	ldr	r0, [pc, #-2908]	; 36e30 <__flatcc_fb_build_schema@@Base+0x10f0>
   37988:	add	r3, pc, r3
   3798c:	ldr	r2, [pc, #-2912]	; 36e34 <__flatcc_fb_build_schema@@Base+0x10f4>
   37990:	add	r3, r3, #288	; 0x120
   37994:	add	r1, pc, r1
   37998:	add	r0, pc, r0
   3799c:	bl	14140 <__assert_fail@plt>
   379a0:	ldr	r0, [sp, #8]
   379a4:	ldr	r3, [pc, #-2932]	; 36e38 <__flatcc_fb_build_schema@@Base+0x10f8>
   379a8:	mov	r2, #34	; 0x22
   379ac:	mov	r1, #1
   379b0:	ldr	r3, [r0, r3]
   379b4:	ldr	r0, [pc, #-2944]	; 36e3c <__flatcc_fb_build_schema@@Base+0x10fc>
   379b8:	ldr	r3, [r3]
   379bc:	add	r0, pc, r0
   379c0:	bl	14014 <fwrite@plt>
   379c4:	mov	r0, #1
   379c8:	bl	14068 <exit@plt>
   379cc:	ldr	r3, [r8, #4]
   379d0:	ldr	r1, [r6, #4]
   379d4:	str	r2, [sp, #4]
   379d8:	str	r2, [sp]
   379dc:	ldr	r2, [pc, #-2980]	; 36e40 <__flatcc_fb_build_schema@@Base+0x1100>
   379e0:	mov	r0, fp
   379e4:	add	r2, pc, r2
   379e8:	ldr	sl, [sp, #16]
   379ec:	bl	2e224 <__flatcc_error_report@@Base>
   379f0:	mov	r3, #1
   379f4:	strh	r3, [r6, #24]
   379f8:	b	360a8 <__flatcc_fb_build_schema@@Base+0x368>
   379fc:	mov	r2, #0
   37a00:	ldr	r3, [r8, #4]
   37a04:	ldr	r1, [r6, #4]
   37a08:	str	r2, [sp, #4]
   37a0c:	str	r2, [sp]
   37a10:	ldr	r2, [pc, #-3028]	; 36e44 <__flatcc_fb_build_schema@@Base+0x1104>
   37a14:	mov	r0, fp
   37a18:	add	r2, pc, r2
   37a1c:	ldr	sl, [sp, #16]
   37a20:	bl	2e224 <__flatcc_error_report@@Base>
   37a24:	mov	r3, #1
   37a28:	strh	r3, [r6, #24]
   37a2c:	b	360a8 <__flatcc_fb_build_schema@@Base+0x368>
   37a30:	mov	r2, r4
   37a34:	b	373a4 <__flatcc_fb_build_schema@@Base+0x1664>
   37a38:	ldr	r3, [pc, #-3064]	; 36e48 <__flatcc_fb_build_schema@@Base+0x1108>
   37a3c:	ldr	r1, [pc, #-3064]	; 36e4c <__flatcc_fb_build_schema@@Base+0x110c>
   37a40:	ldr	r0, [pc, #-3064]	; 36e50 <__flatcc_fb_build_schema@@Base+0x1110>
   37a44:	add	r3, pc, r3
   37a48:	ldr	r2, [pc, #-3068]	; 36e54 <__flatcc_fb_build_schema@@Base+0x1114>
   37a4c:	add	r3, r3, #336	; 0x150
   37a50:	add	r1, pc, r1
   37a54:	add	r0, pc, r0
   37a58:	bl	14140 <__assert_fail@plt>
   37a5c:	cmp	r2, #6
   37a60:	bne	3658c <__flatcc_fb_build_schema@@Base+0x84c>
   37a64:	ldrh	r3, [r4, #16]
   37a68:	cmp	r3, #6
   37a6c:	beq	3658c <__flatcc_fb_build_schema@@Base+0x84c>
   37a70:	mov	r3, #0
   37a74:	ldr	r1, [r4, #4]
   37a78:	ldr	r2, [sp, #60]	; 0x3c
   37a7c:	str	r3, [sp, #4]
   37a80:	str	r3, [sp]
   37a84:	mov	r0, fp
   37a88:	bl	2e224 <__flatcc_error_report@@Base>
   37a8c:	b	3658c <__flatcc_fb_build_schema@@Base+0x84c>
   37a90:	ldr	r3, [pc, #-3136]	; 36e58 <__flatcc_fb_build_schema@@Base+0x1118>
   37a94:	ldr	r1, [pc, #-3136]	; 36e5c <__flatcc_fb_build_schema@@Base+0x111c>
   37a98:	ldr	r0, [pc, #-3136]	; 36e60 <__flatcc_fb_build_schema@@Base+0x1120>
   37a9c:	add	r3, pc, r3
   37aa0:	ldr	r2, [pc, #-3140]	; 36e64 <__flatcc_fb_build_schema@@Base+0x1124>
   37aa4:	add	r3, r3, #316	; 0x13c
   37aa8:	add	r1, pc, r1
   37aac:	add	r0, pc, r0
   37ab0:	bl	14140 <__assert_fail@plt>

00037ab4 <__flatcc_fb_coerce_scalar_type@@Base>:
   37ab4:	ldrh	ip, [r3, #8]
   37ab8:	cmp	ip, #0
   37abc:	beq	37bcc <__flatcc_fb_coerce_scalar_type@@Base+0x118>
   37ac0:	push	{r4, r5, r6, r8, r9, sl, fp, lr}
   37ac4:	vpush	{d8}
   37ac8:	cmp	ip, #4
   37acc:	mov	r6, r1
   37ad0:	mov	r5, r0
   37ad4:	sub	sp, sp, #8
   37ad8:	mov	r4, r3
   37adc:	beq	37b6c <__flatcc_fb_coerce_scalar_type@@Base+0xb8>
   37ae0:	cmp	ip, #1
   37ae4:	beq	37bbc <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37ae8:	cmp	r2, #5
   37aec:	sub	ip, ip, #6
   37af0:	clz	ip, ip
   37af4:	lsr	ip, ip, #5
   37af8:	moveq	ip, #0
   37afc:	cmp	ip, #0
   37b00:	beq	37b80 <__flatcc_fb_coerce_scalar_type@@Base+0xcc>
   37b04:	ldr	r3, [r0, #144]	; 0x90
   37b08:	cmp	r3, #0
   37b0c:	beq	37b80 <__flatcc_fb_coerce_scalar_type@@Base+0xcc>
   37b10:	ldrb	r0, [r4]
   37b14:	mov	r1, #0
   37b18:	cmp	r1, #0
   37b1c:	mov	r3, #5
   37b20:	cmpeq	r0, #1
   37b24:	strd	r0, [r4]
   37b28:	strh	r3, [r4, #8]
   37b2c:	bhi	3831c <__flatcc_fb_coerce_scalar_type@@Base+0x868>
   37b30:	sub	r2, r2, #1
   37b34:	cmp	r2, #10
   37b38:	addls	pc, pc, r2, lsl #2
   37b3c:	b	37fb8 <__flatcc_fb_coerce_scalar_type@@Base+0x504>
   37b40:	b	37bbc <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37b44:	b	37c1c <__flatcc_fb_coerce_scalar_type@@Base+0x168>
   37b48:	b	37c70 <__flatcc_fb_coerce_scalar_type@@Base+0x1bc>
   37b4c:	b	37cc4 <__flatcc_fb_coerce_scalar_type@@Base+0x210>
   37b50:	b	37ef4 <__flatcc_fb_coerce_scalar_type@@Base+0x440>
   37b54:	b	37d5c <__flatcc_fb_coerce_scalar_type@@Base+0x2a8>
   37b58:	b	37dc8 <__flatcc_fb_coerce_scalar_type@@Base+0x314>
   37b5c:	b	37d94 <__flatcc_fb_coerce_scalar_type@@Base+0x2e0>
   37b60:	b	37eb4 <__flatcc_fb_coerce_scalar_type@@Base+0x400>
   37b64:	b	37f40 <__flatcc_fb_coerce_scalar_type@@Base+0x48c>
   37b68:	b	37f7c <__flatcc_fb_coerce_scalar_type@@Base+0x4c8>
   37b6c:	ldrd	r0, [r3]
   37b70:	cmp	r0, #0
   37b74:	sbcs	r3, r1, #0
   37b78:	movge	r3, #5
   37b7c:	strhge	r3, [r4, #8]
   37b80:	sub	r2, r2, #1
   37b84:	cmp	r2, #10
   37b88:	addls	pc, pc, r2, lsl #2
   37b8c:	b	37fb8 <__flatcc_fb_coerce_scalar_type@@Base+0x504>
   37b90:	b	37bd4 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   37b94:	b	37c10 <__flatcc_fb_coerce_scalar_type@@Base+0x15c>
   37b98:	b	37c64 <__flatcc_fb_coerce_scalar_type@@Base+0x1b0>
   37b9c:	b	37cb8 <__flatcc_fb_coerce_scalar_type@@Base+0x204>
   37ba0:	b	37d04 <__flatcc_fb_coerce_scalar_type@@Base+0x250>
   37ba4:	b	37d48 <__flatcc_fb_coerce_scalar_type@@Base+0x294>
   37ba8:	b	37db4 <__flatcc_fb_coerce_scalar_type@@Base+0x300>
   37bac:	b	37d80 <__flatcc_fb_coerce_scalar_type@@Base+0x2cc>
   37bb0:	b	37ea0 <__flatcc_fb_coerce_scalar_type@@Base+0x3ec>
   37bb4:	b	37e08 <__flatcc_fb_coerce_scalar_type@@Base+0x354>
   37bb8:	b	37e54 <__flatcc_fb_coerce_scalar_type@@Base+0x3a0>
   37bbc:	mov	r0, #0
   37bc0:	add	sp, sp, #8
   37bc4:	vpop	{d8}
   37bc8:	pop	{r4, r5, r6, r8, r9, sl, fp, pc}
   37bcc:	mov	r0, #0
   37bd0:	bx	lr
   37bd4:	ldrh	r3, [r4, #8]
   37bd8:	cmp	r3, #5
   37bdc:	beq	37bbc <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37be0:	ldr	r2, [pc, #1876]	; 3833c <__flatcc_fb_coerce_scalar_type@@Base+0x888>
   37be4:	mov	r3, #0
   37be8:	ldr	r1, [r6, #4]
   37bec:	mov	r0, r5
   37bf0:	str	r3, [sp, #4]
   37bf4:	str	r3, [sp]
   37bf8:	add	r2, pc, r2
   37bfc:	bl	2e224 <__flatcc_error_report@@Base>
   37c00:	mov	r3, #1
   37c04:	strh	r3, [r4, #8]
   37c08:	mvn	r0, #0
   37c0c:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37c10:	ldrh	r3, [r4, #8]
   37c14:	cmp	r3, #5
   37c18:	bne	3816c <__flatcc_fb_coerce_scalar_type@@Base+0x6b8>
   37c1c:	ldrd	r2, [r4]
   37c20:	mov	r1, #0
   37c24:	mvn	r0, #0
   37c28:	cmp	r3, r1
   37c2c:	cmpeq	r2, r0
   37c30:	bls	37bbc <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37c34:	ldr	r2, [pc, #1796]	; 38340 <__flatcc_fb_coerce_scalar_type@@Base+0x88c>
   37c38:	mov	r3, #0
   37c3c:	ldr	r1, [r6, #4]
   37c40:	mov	r0, r5
   37c44:	str	r3, [sp, #4]
   37c48:	str	r3, [sp]
   37c4c:	add	r2, pc, r2
   37c50:	bl	2e224 <__flatcc_error_report@@Base>
   37c54:	mov	r3, #1
   37c58:	strh	r3, [r4, #8]
   37c5c:	mvn	r0, #0
   37c60:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37c64:	ldrh	r3, [r4, #8]
   37c68:	cmp	r3, #5
   37c6c:	bne	381cc <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   37c70:	ldrd	r2, [r4]
   37c74:	ldr	r0, [pc, #1736]	; 38344 <__flatcc_fb_coerce_scalar_type@@Base+0x890>
   37c78:	mov	r1, #0
   37c7c:	cmp	r3, r1
   37c80:	cmpeq	r2, r0
   37c84:	bls	37bbc <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37c88:	ldr	r2, [pc, #1720]	; 38348 <__flatcc_fb_coerce_scalar_type@@Base+0x894>
   37c8c:	mov	r3, #0
   37c90:	ldr	r1, [r6, #4]
   37c94:	mov	r0, r5
   37c98:	str	r3, [sp, #4]
   37c9c:	str	r3, [sp]
   37ca0:	add	r2, pc, r2
   37ca4:	bl	2e224 <__flatcc_error_report@@Base>
   37ca8:	mov	r3, #1
   37cac:	strh	r3, [r4, #8]
   37cb0:	mvn	r0, #0
   37cb4:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37cb8:	ldrh	r3, [r4, #8]
   37cbc:	cmp	r3, #5
   37cc0:	bne	3819c <__flatcc_fb_coerce_scalar_type@@Base+0x6e8>
   37cc4:	ldrd	r2, [r4]
   37cc8:	cmp	r3, #0
   37ccc:	cmpeq	r2, #255	; 0xff
   37cd0:	bls	37bbc <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37cd4:	ldr	r2, [pc, #1648]	; 3834c <__flatcc_fb_coerce_scalar_type@@Base+0x898>
   37cd8:	mov	r3, #0
   37cdc:	ldr	r1, [r6, #4]
   37ce0:	mov	r0, r5
   37ce4:	str	r3, [sp, #4]
   37ce8:	str	r3, [sp]
   37cec:	add	r2, pc, r2
   37cf0:	bl	2e224 <__flatcc_error_report@@Base>
   37cf4:	mov	r3, #1
   37cf8:	strh	r3, [r4, #8]
   37cfc:	mvn	r0, #0
   37d00:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37d04:	ldrh	r3, [r4, #8]
   37d08:	cmp	r3, #5
   37d0c:	beq	37ef4 <__flatcc_fb_coerce_scalar_type@@Base+0x440>
   37d10:	cmp	r3, #6
   37d14:	beq	37bbc <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37d18:	ldr	r2, [pc, #1584]	; 38350 <__flatcc_fb_coerce_scalar_type@@Base+0x89c>
   37d1c:	mov	r3, #0
   37d20:	ldr	r1, [r6, #4]
   37d24:	mov	r0, r5
   37d28:	str	r3, [sp, #4]
   37d2c:	str	r3, [sp]
   37d30:	add	r2, pc, r2
   37d34:	bl	2e224 <__flatcc_error_report@@Base>
   37d38:	mov	r3, #1
   37d3c:	strh	r3, [r4, #8]
   37d40:	mvn	r0, #0
   37d44:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37d48:	ldrh	r3, [r4, #8]
   37d4c:	cmp	r3, #4
   37d50:	beq	37bbc <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37d54:	cmp	r3, #5
   37d58:	bne	381fc <__flatcc_fb_coerce_scalar_type@@Base+0x748>
   37d5c:	ldrd	r2, [r4]
   37d60:	cmp	r2, #0
   37d64:	sbcs	r1, r3, #0
   37d68:	blt	382ec <__flatcc_fb_coerce_scalar_type@@Base+0x838>
   37d6c:	mov	r1, #4
   37d70:	strd	r2, [r4]
   37d74:	strh	r1, [r4, #8]
   37d78:	mov	r0, #0
   37d7c:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37d80:	ldrh	r3, [r4, #8]
   37d84:	cmp	r3, #4
   37d88:	beq	38030 <__flatcc_fb_coerce_scalar_type@@Base+0x57c>
   37d8c:	cmp	r3, #5
   37d90:	bne	3822c <__flatcc_fb_coerce_scalar_type@@Base+0x778>
   37d94:	ldrd	r2, [r4]
   37d98:	cmp	r2, #32768	; 0x8000
   37d9c:	sbcs	r3, r3, #0
   37da0:	bge	382bc <__flatcc_fb_coerce_scalar_type@@Base+0x808>
   37da4:	mov	r3, #4
   37da8:	strh	r3, [r4, #8]
   37dac:	mov	r0, #0
   37db0:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37db4:	ldrh	r3, [r4, #8]
   37db8:	cmp	r3, #4
   37dbc:	beq	37fe8 <__flatcc_fb_coerce_scalar_type@@Base+0x534>
   37dc0:	cmp	r3, #5
   37dc4:	bne	3825c <__flatcc_fb_coerce_scalar_type@@Base+0x7a8>
   37dc8:	ldrd	r2, [r4]
   37dcc:	cmp	r2, #-2147483648	; 0x80000000
   37dd0:	sbcs	r3, r3, #0
   37dd4:	blt	37da4 <__flatcc_fb_coerce_scalar_type@@Base+0x2f0>
   37dd8:	ldr	r2, [pc, #1396]	; 38354 <__flatcc_fb_coerce_scalar_type@@Base+0x8a0>
   37ddc:	mov	r3, #0
   37de0:	ldr	r1, [r6, #4]
   37de4:	mov	r0, r5
   37de8:	str	r3, [sp, #4]
   37dec:	str	r3, [sp]
   37df0:	add	r2, pc, r2
   37df4:	bl	2e224 <__flatcc_error_report@@Base>
   37df8:	mov	r3, #1
   37dfc:	strh	r3, [r4, #8]
   37e00:	mvn	r0, #0
   37e04:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37e08:	ldrh	r3, [r4, #8]
   37e0c:	cmp	r3, #4
   37e10:	beq	380c0 <__flatcc_fb_coerce_scalar_type@@Base+0x60c>
   37e14:	cmp	r3, #5
   37e18:	beq	37f40 <__flatcc_fb_coerce_scalar_type@@Base+0x48c>
   37e1c:	cmp	r3, #3
   37e20:	beq	37bbc <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37e24:	ldr	r2, [pc, #1324]	; 38358 <__flatcc_fb_coerce_scalar_type@@Base+0x8a4>
   37e28:	mov	r3, #0
   37e2c:	ldr	r1, [r6, #4]
   37e30:	mov	r0, r5
   37e34:	str	r3, [sp, #4]
   37e38:	str	r3, [sp]
   37e3c:	add	r2, pc, r2
   37e40:	bl	2e224 <__flatcc_error_report@@Base>
   37e44:	mov	r3, #1
   37e48:	strh	r3, [r4, #8]
   37e4c:	mvn	r0, #0
   37e50:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37e54:	ldrh	r3, [r4, #8]
   37e58:	cmp	r3, #4
   37e5c:	beq	38118 <__flatcc_fb_coerce_scalar_type@@Base+0x664>
   37e60:	cmp	r3, #5
   37e64:	beq	37f7c <__flatcc_fb_coerce_scalar_type@@Base+0x4c8>
   37e68:	cmp	r3, #3
   37e6c:	beq	37bbc <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37e70:	ldr	r2, [pc, #1252]	; 3835c <__flatcc_fb_coerce_scalar_type@@Base+0x8a8>
   37e74:	mov	r3, #0
   37e78:	ldr	r1, [r6, #4]
   37e7c:	mov	r0, r5
   37e80:	str	r3, [sp, #4]
   37e84:	str	r3, [sp]
   37e88:	add	r2, pc, r2
   37e8c:	bl	2e224 <__flatcc_error_report@@Base>
   37e90:	mov	r3, #1
   37e94:	strh	r3, [r4, #8]
   37e98:	mvn	r0, #0
   37e9c:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37ea0:	ldrh	r3, [r4, #8]
   37ea4:	cmp	r3, #4
   37ea8:	beq	38078 <__flatcc_fb_coerce_scalar_type@@Base+0x5c4>
   37eac:	cmp	r3, #5
   37eb0:	bne	3828c <__flatcc_fb_coerce_scalar_type@@Base+0x7d8>
   37eb4:	ldrd	r2, [r4]
   37eb8:	cmp	r2, #128	; 0x80
   37ebc:	sbcs	r3, r3, #0
   37ec0:	blt	37da4 <__flatcc_fb_coerce_scalar_type@@Base+0x2f0>
   37ec4:	ldr	r2, [pc, #1172]	; 38360 <__flatcc_fb_coerce_scalar_type@@Base+0x8ac>
   37ec8:	mov	r3, #0
   37ecc:	ldr	r1, [r6, #4]
   37ed0:	mov	r0, r5
   37ed4:	str	r3, [sp, #4]
   37ed8:	str	r3, [sp]
   37edc:	add	r2, pc, r2
   37ee0:	bl	2e224 <__flatcc_error_report@@Base>
   37ee4:	mov	r3, #1
   37ee8:	strh	r3, [r4, #8]
   37eec:	mvn	r0, #0
   37ef0:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37ef4:	ldr	r3, [r5, #144]	; 0x90
   37ef8:	cmp	r3, #0
   37efc:	beq	37d18 <__flatcc_fb_coerce_scalar_type@@Base+0x264>
   37f00:	ldrd	r2, [r4]
   37f04:	cmp	r3, #0
   37f08:	cmpeq	r2, #1
   37f0c:	bls	37bbc <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37f10:	ldr	r2, [pc, #1100]	; 38364 <__flatcc_fb_coerce_scalar_type@@Base+0x8b0>
   37f14:	mov	r3, #0
   37f18:	ldr	r1, [r6, #4]
   37f1c:	mov	r0, r5
   37f20:	str	r3, [sp, #4]
   37f24:	str	r3, [sp]
   37f28:	add	r2, pc, r2
   37f2c:	bl	2e224 <__flatcc_error_report@@Base>
   37f30:	mov	r3, #1
   37f34:	strh	r3, [r4, #8]
   37f38:	mvn	r0, #0
   37f3c:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37f40:	ldrd	r8, [r4]
   37f44:	mov	r0, r8
   37f48:	mov	r1, r9
   37f4c:	bl	3eb60 <fb_value_set_visit@@Base+0x3a4>
   37f50:	mov	sl, r0
   37f54:	mov	fp, r1
   37f58:	bl	3ef10 <fb_value_set_visit@@Base+0x754>
   37f5c:	cmp	r9, r1
   37f60:	cmpeq	r8, r0
   37f64:	bne	380e8 <__flatcc_fb_coerce_scalar_type@@Base+0x634>
   37f68:	mov	r3, #3
   37f6c:	strd	sl, [r4]
   37f70:	strh	r3, [r4, #8]
   37f74:	mov	r0, #0
   37f78:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37f7c:	ldrd	r8, [r4]
   37f80:	mov	r1, r9
   37f84:	mov	r0, r8
   37f88:	bl	3ed98 <fb_value_set_visit@@Base+0x5dc>
   37f8c:	vmov	s16, r0
   37f90:	bl	3eec8 <fb_value_set_visit@@Base+0x70c>
   37f94:	cmp	r9, r1
   37f98:	cmpeq	r8, r0
   37f9c:	bne	3813c <__flatcc_fb_coerce_scalar_type@@Base+0x688>
   37fa0:	vcvt.f64.f32	d8, s16
   37fa4:	mov	r3, #3
   37fa8:	strh	r3, [r4, #8]
   37fac:	mov	r0, #0
   37fb0:	vstr	d8, [r4]
   37fb4:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37fb8:	ldr	r2, [pc, #936]	; 38368 <__flatcc_fb_coerce_scalar_type@@Base+0x8b4>
   37fbc:	mov	r3, #0
   37fc0:	ldr	r1, [r6, #4]
   37fc4:	mov	r0, r5
   37fc8:	str	r3, [sp, #4]
   37fcc:	str	r3, [sp]
   37fd0:	add	r2, pc, r2
   37fd4:	bl	2e224 <__flatcc_error_report@@Base>
   37fd8:	mov	r3, #1
   37fdc:	strh	r3, [r4, #8]
   37fe0:	mvn	r0, #0
   37fe4:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37fe8:	ldrd	r2, [r4]
   37fec:	mov	r0, #-2147483648	; 0x80000000
   37ff0:	mvn	r1, #0
   37ff4:	cmp	r2, r0
   37ff8:	sbcs	r3, r3, r1
   37ffc:	bge	37bbc <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   38000:	ldr	r2, [pc, #868]	; 3836c <__flatcc_fb_coerce_scalar_type@@Base+0x8b8>
   38004:	mov	r3, #0
   38008:	ldr	r1, [r6, #4]
   3800c:	mov	r0, r5
   38010:	str	r3, [sp, #4]
   38014:	str	r3, [sp]
   38018:	add	r2, pc, r2
   3801c:	bl	2e224 <__flatcc_error_report@@Base>
   38020:	mov	r3, #1
   38024:	strh	r3, [r4, #8]
   38028:	mvn	r0, #0
   3802c:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   38030:	ldrd	r2, [r4]
   38034:	ldr	r0, [pc, #820]	; 38370 <__flatcc_fb_coerce_scalar_type@@Base+0x8bc>
   38038:	mvn	r1, #0
   3803c:	cmp	r2, r0
   38040:	sbcs	r3, r3, r1
   38044:	bge	37bbc <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   38048:	ldr	r2, [pc, #804]	; 38374 <__flatcc_fb_coerce_scalar_type@@Base+0x8c0>
   3804c:	mov	r3, #0
   38050:	ldr	r1, [r6, #4]
   38054:	mov	r0, r5
   38058:	str	r3, [sp, #4]
   3805c:	str	r3, [sp]
   38060:	add	r2, pc, r2
   38064:	bl	2e224 <__flatcc_error_report@@Base>
   38068:	mov	r3, #1
   3806c:	strh	r3, [r4, #8]
   38070:	mvn	r0, #0
   38074:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   38078:	ldrd	r2, [r4]
   3807c:	mvn	r0, #127	; 0x7f
   38080:	mvn	r1, #0
   38084:	cmp	r2, r0
   38088:	sbcs	r3, r3, r1
   3808c:	bge	37bbc <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   38090:	ldr	r2, [pc, #736]	; 38378 <__flatcc_fb_coerce_scalar_type@@Base+0x8c4>
   38094:	mov	r3, #0
   38098:	ldr	r1, [r6, #4]
   3809c:	mov	r0, r5
   380a0:	str	r3, [sp, #4]
   380a4:	str	r3, [sp]
   380a8:	add	r2, pc, r2
   380ac:	bl	2e224 <__flatcc_error_report@@Base>
   380b0:	mov	r3, #1
   380b4:	strh	r3, [r4, #8]
   380b8:	mvn	r0, #0
   380bc:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   380c0:	ldrd	r8, [r4]
   380c4:	mov	r0, r8
   380c8:	mov	r1, r9
   380cc:	bl	3eb74 <fb_value_set_visit@@Base+0x3b8>
   380d0:	mov	sl, r0
   380d4:	mov	fp, r1
   380d8:	bl	3ee9c <fb_value_set_visit@@Base+0x6e0>
   380dc:	cmp	r9, r1
   380e0:	cmpeq	r8, r0
   380e4:	beq	37f68 <__flatcc_fb_coerce_scalar_type@@Base+0x4b4>
   380e8:	ldr	r2, [pc, #652]	; 3837c <__flatcc_fb_coerce_scalar_type@@Base+0x8c8>
   380ec:	mov	r3, #0
   380f0:	ldr	r1, [r6, #4]
   380f4:	mov	r0, r5
   380f8:	str	r3, [sp, #4]
   380fc:	str	r3, [sp]
   38100:	add	r2, pc, r2
   38104:	bl	2e224 <__flatcc_error_report@@Base>
   38108:	mov	r3, #1
   3810c:	strh	r3, [r4, #8]
   38110:	mvn	r0, #0
   38114:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   38118:	ldrd	r8, [r4]
   3811c:	mov	r1, r9
   38120:	mov	r0, r8
   38124:	bl	3eda8 <fb_value_set_visit@@Base+0x5ec>
   38128:	vmov	s16, r0
   3812c:	bl	3ee70 <fb_value_set_visit@@Base+0x6b4>
   38130:	cmp	r9, r1
   38134:	cmpeq	r8, r0
   38138:	beq	37fa0 <__flatcc_fb_coerce_scalar_type@@Base+0x4ec>
   3813c:	ldr	r2, [pc, #572]	; 38380 <__flatcc_fb_coerce_scalar_type@@Base+0x8cc>
   38140:	mov	r3, #0
   38144:	ldr	r1, [r6, #4]
   38148:	mov	r0, r5
   3814c:	str	r3, [sp, #4]
   38150:	str	r3, [sp]
   38154:	add	r2, pc, r2
   38158:	bl	2e224 <__flatcc_error_report@@Base>
   3815c:	mov	r3, #1
   38160:	strh	r3, [r4, #8]
   38164:	mvn	r0, #0
   38168:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   3816c:	ldr	r2, [pc, #528]	; 38384 <__flatcc_fb_coerce_scalar_type@@Base+0x8d0>
   38170:	mov	r3, #0
   38174:	ldr	r1, [r6, #4]
   38178:	mov	r0, r5
   3817c:	str	r3, [sp, #4]
   38180:	str	r3, [sp]
   38184:	add	r2, pc, r2
   38188:	bl	2e224 <__flatcc_error_report@@Base>
   3818c:	mov	r3, #1
   38190:	strh	r3, [r4, #8]
   38194:	mvn	r0, #0
   38198:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   3819c:	ldr	r2, [pc, #484]	; 38388 <__flatcc_fb_coerce_scalar_type@@Base+0x8d4>
   381a0:	mov	r3, #0
   381a4:	ldr	r1, [r6, #4]
   381a8:	mov	r0, r5
   381ac:	str	r3, [sp, #4]
   381b0:	str	r3, [sp]
   381b4:	add	r2, pc, r2
   381b8:	bl	2e224 <__flatcc_error_report@@Base>
   381bc:	mov	r3, #1
   381c0:	strh	r3, [r4, #8]
   381c4:	mvn	r0, #0
   381c8:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   381cc:	ldr	r2, [pc, #440]	; 3838c <__flatcc_fb_coerce_scalar_type@@Base+0x8d8>
   381d0:	mov	r3, #0
   381d4:	ldr	r1, [r6, #4]
   381d8:	mov	r0, r5
   381dc:	str	r3, [sp, #4]
   381e0:	str	r3, [sp]
   381e4:	add	r2, pc, r2
   381e8:	bl	2e224 <__flatcc_error_report@@Base>
   381ec:	mov	r3, #1
   381f0:	strh	r3, [r4, #8]
   381f4:	mvn	r0, #0
   381f8:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   381fc:	ldr	r2, [pc, #396]	; 38390 <__flatcc_fb_coerce_scalar_type@@Base+0x8dc>
   38200:	mov	r3, #0
   38204:	ldr	r1, [r6, #4]
   38208:	mov	r0, r5
   3820c:	str	r3, [sp, #4]
   38210:	str	r3, [sp]
   38214:	add	r2, pc, r2
   38218:	bl	2e224 <__flatcc_error_report@@Base>
   3821c:	mov	r3, #1
   38220:	strh	r3, [r4, #8]
   38224:	mvn	r0, #0
   38228:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   3822c:	ldr	r2, [pc, #352]	; 38394 <__flatcc_fb_coerce_scalar_type@@Base+0x8e0>
   38230:	mov	r3, #0
   38234:	ldr	r1, [r6, #4]
   38238:	mov	r0, r5
   3823c:	str	r3, [sp, #4]
   38240:	str	r3, [sp]
   38244:	add	r2, pc, r2
   38248:	bl	2e224 <__flatcc_error_report@@Base>
   3824c:	mov	r3, #1
   38250:	strh	r3, [r4, #8]
   38254:	mvn	r0, #0
   38258:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   3825c:	ldr	r2, [pc, #308]	; 38398 <__flatcc_fb_coerce_scalar_type@@Base+0x8e4>
   38260:	mov	r3, #0
   38264:	ldr	r1, [r6, #4]
   38268:	mov	r0, r5
   3826c:	str	r3, [sp, #4]
   38270:	str	r3, [sp]
   38274:	add	r2, pc, r2
   38278:	bl	2e224 <__flatcc_error_report@@Base>
   3827c:	mov	r3, #1
   38280:	strh	r3, [r4, #8]
   38284:	mvn	r0, #0
   38288:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   3828c:	ldr	r2, [pc, #264]	; 3839c <__flatcc_fb_coerce_scalar_type@@Base+0x8e8>
   38290:	mov	r3, #0
   38294:	ldr	r1, [r6, #4]
   38298:	mov	r0, r5
   3829c:	str	r3, [sp, #4]
   382a0:	str	r3, [sp]
   382a4:	add	r2, pc, r2
   382a8:	bl	2e224 <__flatcc_error_report@@Base>
   382ac:	mov	r3, #1
   382b0:	strh	r3, [r4, #8]
   382b4:	mvn	r0, #0
   382b8:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   382bc:	ldr	r2, [pc, #220]	; 383a0 <__flatcc_fb_coerce_scalar_type@@Base+0x8ec>
   382c0:	mov	r3, #0
   382c4:	ldr	r1, [r6, #4]
   382c8:	mov	r0, r5
   382cc:	str	r3, [sp, #4]
   382d0:	str	r3, [sp]
   382d4:	add	r2, pc, r2
   382d8:	bl	2e224 <__flatcc_error_report@@Base>
   382dc:	mov	r3, #1
   382e0:	strh	r3, [r4, #8]
   382e4:	mvn	r0, #0
   382e8:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   382ec:	ldr	r2, [pc, #176]	; 383a4 <__flatcc_fb_coerce_scalar_type@@Base+0x8f0>
   382f0:	mov	r3, #0
   382f4:	ldr	r1, [r6, #4]
   382f8:	mov	r0, r5
   382fc:	str	r3, [sp, #4]
   38300:	str	r3, [sp]
   38304:	add	r2, pc, r2
   38308:	bl	2e224 <__flatcc_error_report@@Base>
   3830c:	mov	r3, #1
   38310:	strh	r3, [r4, #8]
   38314:	mvn	r0, #0
   38318:	b	37bc0 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   3831c:	ldr	r3, [pc, #132]	; 383a8 <__flatcc_fb_coerce_scalar_type@@Base+0x8f4>
   38320:	ldr	r1, [pc, #132]	; 383ac <__flatcc_fb_coerce_scalar_type@@Base+0x8f8>
   38324:	ldr	r0, [pc, #132]	; 383b0 <__flatcc_fb_coerce_scalar_type@@Base+0x8fc>
   38328:	add	r3, pc, r3
   3832c:	mov	r2, #52	; 0x34
   38330:	add	r1, pc, r1
   38334:	add	r0, pc, r0
   38338:	bl	14140 <__assert_fail@plt>
   3833c:			; <UNDEFINED> instruction: 0x000222b4
   38340:	andeq	r2, r2, ip, asr #5
   38344:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   38348:	ldrdeq	r2, [r2], -r4
   3834c:	andeq	r2, r2, r0, ror #5
   38350:	andeq	r2, r2, r8, lsl #9
   38354:	andeq	r2, r2, r4, ror #4
   38358:	andeq	r2, r2, r4, ror #7
   3835c:	andeq	r2, r2, r4, lsl #8
   38360:	andeq	r2, r2, r0, asr r2
   38364:	andeq	r2, r2, r0, asr r2
   38368:	strdeq	r2, [r2], -r4
   3836c:	andeq	r2, r2, r0, lsr #32
   38370:			; <UNDEFINED> instruction: 0xffff8000
   38374:	andeq	r2, r2, r0, asr #32
   38378:	andeq	r2, r2, r8, rrx
   3837c:	strdeq	r2, [r2], -r0
   38380:	andeq	r2, r2, r8, lsl #2
   38384:	andeq	r1, r2, ip, asr sp
   38388:	andeq	r1, r2, r0, ror #27
   3838c:	andeq	r1, r2, r4, asr sp
   38390:	strdeq	r1, [r2], -r8
   38394:	muleq	r2, ip, lr
   38398:	strdeq	r1, [r2], -ip
   3839c:	andeq	r1, r2, r4, lsr #29
   383a0:	andeq	r1, r2, ip, ror #27
   383a4:	andeq	r1, r2, r8, ror #25
   383a8:	andeq	r1, r2, r4, ror #21
   383ac:	strdeq	r1, [r2], -ip
   383b0:	andeq	r1, r2, r8, asr fp
   383b4:	push	{r4, r5, r6, lr}
   383b8:	mov	r4, r0
   383bc:	ldr	ip, [r0, #28]
   383c0:	sub	sp, sp, #8
   383c4:	mov	r3, #1
   383c8:	ldr	r0, [r0, #40]	; 0x28
   383cc:	ldr	r6, [r4, #48]	; 0x30
   383d0:	mov	r5, r2
   383d4:	str	r3, [sp]
   383d8:	add	r2, r1, ip
   383dc:	add	r1, r4, #60	; 0x3c
   383e0:	blx	r6
   383e4:	cmp	r0, #0
   383e8:	bne	38420 <__flatcc_fb_coerce_scalar_type@@Base+0x96c>
   383ec:	ldr	r1, [r4, #28]
   383f0:	ldr	r3, [r4, #64]	; 0x40
   383f4:	ldr	r2, [r4, #60]	; 0x3c
   383f8:	sub	r3, r3, r1
   383fc:	ldr	ip, [r4, #32]
   38400:	cmp	r3, r5
   38404:	movcs	r3, r5
   38408:	add	r2, r2, r1
   3840c:	str	r3, [r4, #24]
   38410:	str	r2, [r4, #16]
   38414:	str	r5, [ip, #4]
   38418:	add	sp, sp, #8
   3841c:	pop	{r4, r5, r6, pc}
   38420:	mvn	r0, #0
   38424:	b	38418 <__flatcc_fb_coerce_scalar_type@@Base+0x964>

00038428 <flatcc_builder_default_alloc@@Base>:
   38428:	push	{r4, r5, r6, r7, r8, lr}
   3842c:	subs	r5, r2, #0
   38430:	mov	r6, r1
   38434:	bne	38458 <flatcc_builder_default_alloc@@Base+0x30>
   38438:	ldr	r0, [r1]
   3843c:	cmp	r0, #0
   38440:	popeq	{r4, r5, r6, r7, r8, pc}
   38444:	bl	13fcc <free@plt>
   38448:	str	r5, [r6]
   3844c:	str	r5, [r6, #4]
   38450:	mov	r0, r5
   38454:	pop	{r4, r5, r6, r7, r8, pc}
   38458:	mov	r7, r3
   3845c:	ldr	r3, [sp, #24]
   38460:	sub	r2, r3, #1
   38464:	cmp	r2, #6
   38468:	addls	pc, pc, r2, lsl #2
   3846c:	b	38508 <flatcc_builder_default_alloc@@Base+0xe0>
   38470:	b	384dc <flatcc_builder_default_alloc@@Base+0xb4>
   38474:	b	38508 <flatcc_builder_default_alloc@@Base+0xe0>
   38478:	b	38508 <flatcc_builder_default_alloc@@Base+0xe0>
   3847c:	b	38500 <flatcc_builder_default_alloc@@Base+0xd8>
   38480:	b	3848c <flatcc_builder_default_alloc@@Base+0x64>
   38484:	b	38508 <flatcc_builder_default_alloc@@Base+0xe0>
   38488:	b	384f8 <flatcc_builder_default_alloc@@Base+0xd0>
   3848c:	mov	r4, r5
   38490:	ldr	r3, [r6, #4]
   38494:	cmp	r5, r3
   38498:	bhi	384a4 <flatcc_builder_default_alloc@@Base+0x7c>
   3849c:	cmp	r4, r3, lsr #1
   384a0:	bls	38510 <flatcc_builder_default_alloc@@Base+0xe8>
   384a4:	mov	r1, r4
   384a8:	ldr	r0, [r6]
   384ac:	bl	14008 <realloc@plt>
   384b0:	subs	r5, r0, #0
   384b4:	beq	3852c <flatcc_builder_default_alloc@@Base+0x104>
   384b8:	cmp	r7, #0
   384bc:	beq	384cc <flatcc_builder_default_alloc@@Base+0xa4>
   384c0:	ldr	r0, [r6, #4]
   384c4:	cmp	r0, r4
   384c8:	bcc	38518 <flatcc_builder_default_alloc@@Base+0xf0>
   384cc:	str	r5, [r6]
   384d0:	str	r4, [r6, #4]
   384d4:	mov	r0, #0
   384d8:	pop	{r4, r5, r6, r7, r8, pc}
   384dc:	mov	r4, #256	; 0x100
   384e0:	cmp	r5, r4
   384e4:	bls	38490 <flatcc_builder_default_alloc@@Base+0x68>
   384e8:	lsl	r4, r4, #1
   384ec:	cmp	r5, r4
   384f0:	bhi	384e8 <flatcc_builder_default_alloc@@Base+0xc0>
   384f4:	b	38490 <flatcc_builder_default_alloc@@Base+0x68>
   384f8:	mov	r4, #64	; 0x40
   384fc:	b	384e0 <flatcc_builder_default_alloc@@Base+0xb8>
   38500:	mov	r4, #288	; 0x120
   38504:	b	384e0 <flatcc_builder_default_alloc@@Base+0xb8>
   38508:	mov	r4, #32
   3850c:	b	384e0 <flatcc_builder_default_alloc@@Base+0xb8>
   38510:	mov	r0, #0
   38514:	pop	{r4, r5, r6, r7, r8, pc}
   38518:	sub	r2, r4, r0
   3851c:	mov	r1, #0
   38520:	add	r0, r5, r0
   38524:	bl	140a4 <memset@plt>
   38528:	b	384cc <flatcc_builder_default_alloc@@Base+0xa4>
   3852c:	mvn	r0, #0
   38530:	pop	{r4, r5, r6, r7, r8, pc}
   38534:	push	{r4, r5, lr}
   38538:	cmp	r2, #0
   3853c:	ldr	lr, [pc, #248]	; 3863c <flatcc_builder_default_alloc@@Base+0x214>
   38540:	sub	sp, sp, #84	; 0x54
   38544:	mov	ip, r0
   38548:	add	lr, pc, lr
   3854c:	bne	3855c <flatcc_builder_default_alloc@@Base+0x134>
   38550:	ldrh	r2, [r0, #132]	; 0x84
   38554:	cmp	r2, #0
   38558:	moveq	r2, #1
   3855c:	ldrh	r0, [r1]
   38560:	cmp	r0, #3
   38564:	movls	r4, #4
   38568:	movls	r0, r4
   3856c:	strhls	r4, [r1]
   38570:	cmp	r2, r0
   38574:	strhhi	r2, [r1]
   38578:	cmp	r3, #0
   3857c:	bne	38590 <flatcc_builder_default_alloc@@Base+0x168>
   38580:	ldr	r4, [ip, #140]	; 0x8c
   38584:	sub	r2, r2, #1
   38588:	ands	r3, r2, r4
   3858c:	bne	3859c <flatcc_builder_default_alloc@@Base+0x174>
   38590:	mov	r0, #0
   38594:	add	sp, sp, #84	; 0x54
   38598:	pop	{r4, r5, pc}
   3859c:	ldr	r2, [pc, #156]	; 38640 <flatcc_builder_default_alloc@@Base+0x218>
   385a0:	add	r1, r4, r3
   385a4:	str	r3, [sp, #8]
   385a8:	ldr	r0, [lr, r2]
   385ac:	cmp	r4, r1
   385b0:	mov	r2, #1
   385b4:	str	r0, [sp, #16]
   385b8:	str	r3, [sp, #20]
   385bc:	str	r1, [ip, #140]	; 0x8c
   385c0:	str	r2, [sp, #12]
   385c4:	bgt	38614 <flatcc_builder_default_alloc@@Base+0x1ec>
   385c8:	ldr	r0, [ip, #36]	; 0x24
   385cc:	add	r1, sp, #16
   385d0:	str	r3, [sp]
   385d4:	mov	r3, r4
   385d8:	ldr	r5, [ip, #44]	; 0x2c
   385dc:	blx	r5
   385e0:	cmp	r0, #0
   385e4:	bne	38618 <flatcc_builder_default_alloc@@Base+0x1f0>
   385e8:	cmn	r4, #1
   385ec:	bne	38590 <flatcc_builder_default_alloc@@Base+0x168>
   385f0:	ldr	r3, [pc, #76]	; 38644 <flatcc_builder_default_alloc@@Base+0x21c>
   385f4:	ldr	r1, [pc, #76]	; 38648 <flatcc_builder_default_alloc@@Base+0x220>
   385f8:	ldr	r0, [pc, #76]	; 3864c <flatcc_builder_default_alloc@@Base+0x224>
   385fc:	add	r3, pc, r3
   38600:	ldr	r2, [pc, #72]	; 38650 <flatcc_builder_default_alloc@@Base+0x228>
   38604:	add	r3, r3, #60	; 0x3c
   38608:	add	r1, pc, r1
   3860c:	add	r0, pc, r0
   38610:	bl	14140 <__assert_fail@plt>
   38614:	bl	14260 <__assert_fail@plt+0x120>
   38618:	ldr	r3, [pc, #52]	; 38654 <flatcc_builder_default_alloc@@Base+0x22c>
   3861c:	ldr	r1, [pc, #52]	; 38658 <flatcc_builder_default_alloc@@Base+0x230>
   38620:	ldr	r0, [pc, #52]	; 3865c <flatcc_builder_default_alloc@@Base+0x234>
   38624:	add	r3, pc, r3
   38628:	ldr	r2, [pc, #48]	; 38660 <flatcc_builder_default_alloc@@Base+0x238>
   3862c:	add	r3, r3, #16
   38630:	add	r1, pc, r1
   38634:	add	r0, pc, r0
   38638:	bl	14140 <__assert_fail@plt>
   3863c:			; <UNDEFINED> instruction: 0x00032ab0
   38640:	muleq	r0, ip, r0
   38644:	andeq	r1, r2, r0, ror #25
   38648:	andeq	r2, r2, r4, lsr #8
   3864c:			; <UNDEFINED> instruction: 0x00010cb0
   38650:			; <UNDEFINED> instruction: 0x000002be
   38654:			; <UNDEFINED> instruction: 0x00021cb8
   38658:	strdeq	r2, [r2], -ip
   3865c:	andeq	r0, r1, r8, lsl #25
   38660:	andeq	r0, r0, r5, lsr #5
   38664:	push	{r4, r5, r6, r7, lr}
   38668:	mov	r5, r1
   3866c:	ldr	r1, [r0, #156]	; 0x9c
   38670:	ldr	r3, [r0, #160]	; 0xa0
   38674:	add	r2, r1, #1
   38678:	cmp	r2, r3
   3867c:	sub	sp, sp, #12
   38680:	mov	r4, r0
   38684:	str	r2, [r0, #156]	; 0x9c
   38688:	ble	386f8 <flatcc_builder_default_alloc@@Base+0x2d0>
   3868c:	ldr	r3, [r0, #176]	; 0xb0
   38690:	cmp	r3, #0
   38694:	cmpgt	r2, r3
   38698:	movgt	r3, #1
   3869c:	movle	r3, #0
   386a0:	bgt	3876c <flatcc_builder_default_alloc@@Base+0x344>
   386a4:	add	r1, r1, r1, lsl #3
   386a8:	ldr	r0, [r0, #88]	; 0x58
   386ac:	lsl	r6, r1, #2
   386b0:	add	r2, r6, #36	; 0x24
   386b4:	cmp	r2, r0
   386b8:	bhi	38748 <flatcc_builder_default_alloc@@Base+0x320>
   386bc:	ldr	r3, [r4, #84]	; 0x54
   386c0:	add	r3, r3, r6
   386c4:	cmp	r3, #0
   386c8:	str	r3, [r4, #32]
   386cc:	beq	3876c <flatcc_builder_default_alloc@@Base+0x344>
   386d0:	ldr	r2, [r4, #88]	; 0x58
   386d4:	ldr	r0, [pc, #152]	; 38774 <flatcc_builder_default_alloc@@Base+0x34c>
   386d8:	ldr	r1, [r4, #176]	; 0xb0
   386dc:	umull	r0, r2, r0, r2
   386e0:	lsr	r2, r2, #3
   386e4:	cmp	r1, #0
   386e8:	cmpgt	r2, r1
   386ec:	str	r2, [r4, #160]	; 0xa0
   386f0:	strgt	r1, [r4, #160]	; 0xa0
   386f4:	b	38704 <flatcc_builder_default_alloc@@Base+0x2dc>
   386f8:	ldr	r3, [r0, #32]
   386fc:	add	r3, r3, #36	; 0x24
   38700:	str	r3, [r0, #32]
   38704:	ldr	r0, [r4, #20]
   38708:	ldr	ip, [r4, #28]
   3870c:	ldrh	lr, [r4, #130]	; 0x82
   38710:	add	r2, r0, ip
   38714:	mov	r1, #0
   38718:	str	r0, [r3, #8]
   3871c:	strh	lr, [r3, #12]
   38720:	add	r2, r2, #7
   38724:	mvn	lr, #3
   38728:	mov	r0, r1
   3872c:	bic	r2, r2, #7
   38730:	strh	r5, [r4, #130]	; 0x82
   38734:	stm	r3, {ip, lr}
   38738:	str	r2, [r4, #28]
   3873c:	str	r1, [r4, #20]
   38740:	add	sp, sp, #12
   38744:	pop	{r4, r5, r6, r7, pc}
   38748:	mov	r1, #4
   3874c:	ldr	r0, [r4, #40]	; 0x28
   38750:	str	r1, [sp]
   38754:	add	r1, r4, #84	; 0x54
   38758:	ldr	r7, [r4, #48]	; 0x30
   3875c:	blx	r7
   38760:	cmp	r0, #0
   38764:	beq	386bc <flatcc_builder_default_alloc@@Base+0x294>
   38768:	bl	14230 <__assert_fail@plt+0xf0>
   3876c:	mvn	r0, #0
   38770:	b	38740 <flatcc_builder_default_alloc@@Base+0x318>
   38774:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   38778:	push	{r4, r5, r6, r7, lr}
   3877c:	mov	r5, r0
   38780:	ldrh	r0, [r0, #128]	; 0x80
   38784:	sub	sp, sp, #92	; 0x5c
   38788:	add	ip, sp, #12
   3878c:	cmp	r0, #3
   38790:	movls	r0, #4
   38794:	strhls	r0, [r5, #128]	; 0x80
   38798:	ldr	r4, [pc, #448]	; 38960 <flatcc_builder_default_alloc@@Base+0x538>
   3879c:	ldr	r0, [r5, #136]	; 0x88
   387a0:	mov	r7, #4
   387a4:	mov	r6, #1
   387a8:	str	ip, [sp, #24]
   387ac:	lsls	ip, r2, #2
   387b0:	add	r4, pc, r4
   387b4:	str	r2, [sp, #12]
   387b8:	and	lr, r0, #3
   387bc:	str	r7, [sp, #16]
   387c0:	str	r7, [sp, #28]
   387c4:	str	r6, [sp, #20]
   387c8:	beq	387e4 <flatcc_builder_default_alloc@@Base+0x3bc>
   387cc:	add	r7, ip, r7
   387d0:	mov	r6, #2
   387d4:	str	r1, [sp, #32]
   387d8:	str	ip, [sp, #36]	; 0x24
   387dc:	str	r7, [sp, #16]
   387e0:	str	r6, [sp, #20]
   387e4:	cmp	lr, #0
   387e8:	beq	38818 <flatcc_builder_default_alloc@@Base+0x3f0>
   387ec:	ldr	ip, [sp, #20]
   387f0:	ldr	r6, [pc, #364]	; 38964 <flatcc_builder_default_alloc@@Base+0x53c>
   387f4:	add	ip, ip, #1
   387f8:	add	r7, r7, lr
   387fc:	str	r7, [sp, #16]
   38800:	ldr	r6, [r4, r6]
   38804:	add	r4, sp, #88	; 0x58
   38808:	add	r4, r4, ip, lsl #3
   3880c:	str	ip, [sp, #20]
   38810:	str	r6, [r4, #-72]	; 0xffffffb8
   38814:	str	lr, [r4, #-68]	; 0xffffffbc
   38818:	cmp	r2, #0
   3881c:	sub	r4, r0, r7
   38820:	beq	388b4 <flatcc_builder_default_alloc@@Base+0x48c>
   38824:	add	r6, r3, r2
   38828:	mvn	ip, #3
   3882c:	mov	r2, r3
   38830:	b	38868 <flatcc_builder_default_alloc@@Base+0x440>
   38834:	sub	r0, ip, r4
   38838:	add	r0, r0, lr
   3883c:	cmp	r3, #0
   38840:	str	r0, [r1]
   38844:	beq	38854 <flatcc_builder_default_alloc@@Base+0x42c>
   38848:	ldrb	r0, [r2]
   3884c:	cmp	r0, #0
   38850:	beq	38914 <flatcc_builder_default_alloc@@Base+0x4ec>
   38854:	add	r2, r2, #1
   38858:	cmp	r2, r6
   3885c:	add	r1, r1, #4
   38860:	sub	ip, ip, #4
   38864:	beq	388ac <flatcc_builder_default_alloc@@Base+0x484>
   38868:	ldr	lr, [r1]
   3886c:	cmp	lr, #0
   38870:	bne	38834 <flatcc_builder_default_alloc@@Base+0x40c>
   38874:	cmp	r3, #0
   38878:	beq	388f0 <flatcc_builder_default_alloc@@Base+0x4c8>
   3887c:	ldrb	r0, [r2]
   38880:	cmp	r0, #0
   38884:	beq	38854 <flatcc_builder_default_alloc@@Base+0x42c>
   38888:	ldr	r3, [pc, #216]	; 38968 <flatcc_builder_default_alloc@@Base+0x540>
   3888c:	ldr	r1, [pc, #216]	; 3896c <flatcc_builder_default_alloc@@Base+0x544>
   38890:	ldr	r0, [pc, #216]	; 38970 <flatcc_builder_default_alloc@@Base+0x548>
   38894:	add	r3, pc, r3
   38898:	ldr	r2, [pc, #212]	; 38974 <flatcc_builder_default_alloc@@Base+0x54c>
   3889c:	add	r3, r3, #76	; 0x4c
   388a0:	add	r1, pc, r1
   388a4:	add	r0, pc, r0
   388a8:	bl	14140 <__assert_fail@plt>
   388ac:	ldr	r0, [r5, #136]	; 0x88
   388b0:	sub	r4, r0, r7
   388b4:	cmp	r4, r0
   388b8:	bge	3895c <flatcc_builder_default_alloc@@Base+0x534>
   388bc:	ldr	r0, [r5, #36]	; 0x24
   388c0:	ldr	r2, [sp, #20]
   388c4:	str	r7, [sp]
   388c8:	mov	r3, r4
   388cc:	ldr	r6, [r5, #44]	; 0x2c
   388d0:	add	r1, sp, #24
   388d4:	blx	r6
   388d8:	cmp	r0, #0
   388dc:	bne	38938 <flatcc_builder_default_alloc@@Base+0x510>
   388e0:	mov	r0, r4
   388e4:	str	r4, [r5, #136]	; 0x88
   388e8:	add	sp, sp, #92	; 0x5c
   388ec:	pop	{r4, r5, r6, r7, pc}
   388f0:	ldr	r3, [pc, #128]	; 38978 <flatcc_builder_default_alloc@@Base+0x550>
   388f4:	ldr	r1, [pc, #128]	; 3897c <flatcc_builder_default_alloc@@Base+0x554>
   388f8:	ldr	r0, [pc, #128]	; 38980 <flatcc_builder_default_alloc@@Base+0x558>
   388fc:	add	r3, pc, r3
   38900:	ldr	r2, [pc, #124]	; 38984 <flatcc_builder_default_alloc@@Base+0x55c>
   38904:	add	r3, r3, #76	; 0x4c
   38908:	add	r1, pc, r1
   3890c:	add	r0, pc, r0
   38910:	bl	14140 <__assert_fail@plt>
   38914:	ldr	r3, [pc, #108]	; 38988 <flatcc_builder_default_alloc@@Base+0x560>
   38918:	ldr	r1, [pc, #108]	; 3898c <flatcc_builder_default_alloc@@Base+0x564>
   3891c:	ldr	r0, [pc, #108]	; 38990 <flatcc_builder_default_alloc@@Base+0x568>
   38920:	add	r3, pc, r3
   38924:	ldr	r2, [pc, #104]	; 38994 <flatcc_builder_default_alloc@@Base+0x56c>
   38928:	add	r3, r3, #76	; 0x4c
   3892c:	add	r1, pc, r1
   38930:	add	r0, pc, r0
   38934:	bl	14140 <__assert_fail@plt>
   38938:	ldr	r3, [pc, #88]	; 38998 <flatcc_builder_default_alloc@@Base+0x570>
   3893c:	ldr	r1, [pc, #88]	; 3899c <flatcc_builder_default_alloc@@Base+0x574>
   38940:	ldr	r0, [pc, #88]	; 389a0 <flatcc_builder_default_alloc@@Base+0x578>
   38944:	add	r3, pc, r3
   38948:	ldr	r2, [pc, #84]	; 389a4 <flatcc_builder_default_alloc@@Base+0x57c>
   3894c:	add	r3, r3, #28
   38950:	add	r1, pc, r1
   38954:	add	r0, pc, r0
   38958:	bl	14140 <__assert_fail@plt>
   3895c:	bl	14298 <__assert_fail@plt+0x158>
   38960:	andeq	r2, r3, r8, asr #16
   38964:	muleq	r0, ip, r0
   38968:	andeq	r1, r2, r8, asr #20
   3896c:	andeq	r2, r2, ip, lsl #3
   38970:	andeq	r2, r2, r4, lsl r2
   38974:			; <UNDEFINED> instruction: 0x000005b5
   38978:	andeq	r1, r2, r0, ror #19
   3897c:	andeq	r2, r2, r4, lsr #2
   38980:			; <UNDEFINED> instruction: 0x000109b0
   38984:			; <UNDEFINED> instruction: 0x000005b7
   38988:			; <UNDEFINED> instruction: 0x000219bc
   3898c:	andeq	r2, r2, r0, lsl #2
   38990:	andeq	r2, r2, r8, ror r1
   38994:			; <UNDEFINED> instruction: 0x000005b1
   38998:	muleq	r2, r8, r9
   3899c:	ldrdeq	r2, [r2], -ip
   389a0:	andeq	r0, r1, r8, ror #18
   389a4:	andeq	r0, r0, fp, lsl #5

000389a8 <flatcc_builder_flush_vtable_cache@@Base>:
   389a8:	ldr	r3, [r0, #116]	; 0x74
   389ac:	cmp	r3, #0
   389b0:	bxeq	lr
   389b4:	ldr	r2, [r0, #96]	; 0x60
   389b8:	push	{r4, lr}
   389bc:	mov	r1, #0
   389c0:	mov	r4, r0
   389c4:	ldr	r0, [r0, #92]	; 0x5c
   389c8:	bl	140a4 <memset@plt>
   389cc:	mov	r2, #16
   389d0:	mov	r3, #0
   389d4:	str	r2, [r4, #124]	; 0x7c
   389d8:	str	r3, [r4, #120]	; 0x78
   389dc:	pop	{r4, pc}

000389e0 <flatcc_builder_custom_init@@Base>:
   389e0:	push	{r4, r5, r6, r7, r8, lr}
   389e4:	mov	r6, r1
   389e8:	mov	r7, r2
   389ec:	mov	r1, #0
   389f0:	mov	r2, #232	; 0xe8
   389f4:	mov	r5, r3
   389f8:	mov	r4, r0
   389fc:	ldr	r8, [sp, #24]
   38a00:	bl	140a4 <memset@plt>
   38a04:	ldr	r3, [pc, #76]	; 38a58 <flatcc_builder_custom_init@@Base+0x78>
   38a08:	cmp	r6, #0
   38a0c:	add	r3, pc, r3
   38a10:	beq	38a40 <flatcc_builder_custom_init@@Base+0x60>
   38a14:	cmp	r5, #0
   38a18:	beq	38a34 <flatcc_builder_custom_init@@Base+0x54>
   38a1c:	str	r8, [r4, #40]	; 0x28
   38a20:	str	r5, [r4, #48]	; 0x30
   38a24:	str	r7, [r4, #36]	; 0x24
   38a28:	str	r6, [r4, #44]	; 0x2c
   38a2c:	mov	r0, #0
   38a30:	pop	{r4, r5, r6, r7, r8, pc}
   38a34:	ldr	r2, [pc, #32]	; 38a5c <flatcc_builder_custom_init@@Base+0x7c>
   38a38:	ldr	r5, [r3, r2]
   38a3c:	b	38a1c <flatcc_builder_custom_init@@Base+0x3c>
   38a40:	ldr	r2, [pc, #24]	; 38a60 <flatcc_builder_custom_init@@Base+0x80>
   38a44:	mov	r1, #1
   38a48:	str	r1, [r4, #184]	; 0xb8
   38a4c:	add	r7, r4, #188	; 0xbc
   38a50:	ldr	r6, [r3, r2]
   38a54:	b	38a14 <flatcc_builder_custom_init@@Base+0x34>
   38a58:	andeq	r2, r3, ip, ror #11
   38a5c:	andeq	r0, r0, r8, lsr #1
   38a60:	strheq	r0, [r0], -r4

00038a64 <flatcc_builder_init@@Base>:
   38a64:	push	{lr}		; (str lr, [sp, #-4]!)
   38a68:	sub	sp, sp, #12
   38a6c:	mov	r3, #0
   38a70:	str	r3, [sp]
   38a74:	mov	r2, r3
   38a78:	mov	r1, r3
   38a7c:	bl	389e0 <flatcc_builder_custom_init@@Base>
   38a80:	add	sp, sp, #12
   38a84:	pop	{pc}		; (ldr pc, [sp], #4)

00038a88 <flatcc_builder_custom_reset@@Base>:
   38a88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38a8c:	add	r7, r0, #52	; 0x34
   38a90:	mov	r4, #0
   38a94:	sub	sp, sp, #12
   38a98:	mov	r5, r0
   38a9c:	mov	sl, r1
   38aa0:	mov	r8, r2
   38aa4:	mov	r6, r7
   38aa8:	mov	r9, r4
   38aac:	mov	fp, #1
   38ab0:	b	38b04 <flatcc_builder_custom_reset@@Base+0x7c>
   38ab4:	cmp	r4, #5
   38ab8:	cmpne	r8, #0
   38abc:	beq	38ae8 <flatcc_builder_custom_reset@@Base+0x60>
   38ac0:	ldr	r0, [r5, #40]	; 0x28
   38ac4:	mov	r3, fp
   38ac8:	str	r4, [sp]
   38acc:	mov	r2, #1
   38ad0:	mov	r1, r6
   38ad4:	ldr	ip, [r5, #48]	; 0x30
   38ad8:	blx	ip
   38adc:	cmp	r0, #0
   38ae0:	bne	38bc8 <flatcc_builder_custom_reset@@Base+0x140>
   38ae4:	ldr	r0, [r7, r4, lsl #3]
   38ae8:	ldr	r2, [r6, #4]
   38aec:	mov	r1, r9
   38af0:	bl	140a4 <memset@plt>
   38af4:	add	r4, r4, #1
   38af8:	cmp	r4, #8
   38afc:	add	r6, r6, #8
   38b00:	beq	38b40 <flatcc_builder_custom_reset@@Base+0xb8>
   38b04:	ldr	r0, [r7, r4, lsl #3]
   38b08:	cmp	r0, #0
   38b0c:	bne	38ab4 <flatcc_builder_custom_reset@@Base+0x2c>
   38b10:	ldr	r3, [r6, #4]
   38b14:	cmp	r3, #0
   38b18:	beq	38af4 <flatcc_builder_custom_reset@@Base+0x6c>
   38b1c:	ldr	r3, [pc, #172]	; 38bd0 <flatcc_builder_custom_reset@@Base+0x148>
   38b20:	ldr	r1, [pc, #172]	; 38bd4 <flatcc_builder_custom_reset@@Base+0x14c>
   38b24:	ldr	r0, [pc, #172]	; 38bd8 <flatcc_builder_custom_reset@@Base+0x150>
   38b28:	add	r3, pc, r3
   38b2c:	ldr	r2, [pc, #168]	; 38bdc <flatcc_builder_custom_reset@@Base+0x154>
   38b30:	add	r3, r3, #108	; 0x6c
   38b34:	add	r1, pc, r1
   38b38:	add	r0, pc, r0
   38b3c:	bl	14140 <__assert_fail@plt>
   38b40:	ldr	r2, [r5, #124]	; 0x7c
   38b44:	mov	r3, #0
   38b48:	ldr	r0, [r5, #60]	; 0x3c
   38b4c:	cmp	r2, r3
   38b50:	str	r3, [r5, #120]	; 0x78
   38b54:	ldr	r1, [r5, #76]	; 0x4c
   38b58:	movne	r3, #16
   38b5c:	ldr	r2, [r5, #52]	; 0x34
   38b60:	str	r0, [r5, #16]
   38b64:	ldr	r0, [r5, #184]	; 0xb8
   38b68:	strne	r3, [r5, #124]	; 0x7c
   38b6c:	mov	r3, #0
   38b70:	cmp	sl, #0
   38b74:	strne	r3, [r5, #172]	; 0xac
   38b78:	strne	r3, [r5, #176]	; 0xb0
   38b7c:	strne	r3, [r5, #180]	; 0xb4
   38b80:	cmp	r0, #0
   38b84:	stm	r5, {r1, r2}
   38b88:	strh	r3, [r5, #128]	; 0x80
   38b8c:	str	r3, [r5, #136]	; 0x88
   38b90:	str	r3, [r5, #140]	; 0x8c
   38b94:	str	r3, [r5, #156]	; 0x9c
   38b98:	str	r3, [r5, #160]	; 0xa0
   38b9c:	str	r3, [r5, #20]
   38ba0:	str	r3, [r5, #24]
   38ba4:	str	r3, [r5, #148]	; 0x94
   38ba8:	str	r3, [r5, #152]	; 0x98
   38bac:	str	r3, [r5, #32]
   38bb0:	beq	38bc0 <flatcc_builder_custom_reset@@Base+0x138>
   38bb4:	add	r0, r5, #188	; 0xbc
   38bb8:	bl	3c664 <flatcc_emitter_reset@@Base>
   38bbc:	mov	r0, #0
   38bc0:	add	sp, sp, #12
   38bc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38bc8:	mvn	r0, #0
   38bcc:	b	38bc0 <flatcc_builder_custom_reset@@Base+0x138>
   38bd0:			; <UNDEFINED> instruction: 0x000217b4
   38bd4:	strdeq	r1, [r2], -r8
   38bd8:	muleq	r2, r0, pc	; <UNPREDICTABLE>
   38bdc:			; <UNDEFINED> instruction: 0x000001b2

00038be0 <flatcc_builder_reset@@Base>:
   38be0:	mov	r2, #0
   38be4:	mov	r1, r2
   38be8:	b	38a88 <flatcc_builder_custom_reset@@Base>

00038bec <flatcc_builder_clear@@Base>:
   38bec:	push	{r4, r5, r6, r7, r8, lr}
   38bf0:	mov	r4, #0
   38bf4:	sub	sp, sp, #8
   38bf8:	mov	r6, r0
   38bfc:	add	r5, r0, #52	; 0x34
   38c00:	mov	r8, r4
   38c04:	ldr	r0, [r6, #40]	; 0x28
   38c08:	mov	r1, r5
   38c0c:	str	r4, [sp]
   38c10:	mov	r3, r8
   38c14:	add	r4, r4, #1
   38c18:	ldr	r7, [r6, #48]	; 0x30
   38c1c:	mov	r2, #0
   38c20:	blx	r7
   38c24:	cmp	r4, #8
   38c28:	add	r5, r5, #8
   38c2c:	bne	38c04 <flatcc_builder_clear@@Base+0x18>
   38c30:	ldr	r3, [r6, #184]	; 0xb8
   38c34:	cmp	r3, #0
   38c38:	beq	38c44 <flatcc_builder_clear@@Base+0x58>
   38c3c:	add	r0, r6, #188	; 0xbc
   38c40:	bl	3c720 <flatcc_emitter_clear@@Base>
   38c44:	mov	r0, r6
   38c48:	mov	r2, #232	; 0xe8
   38c4c:	mov	r1, #0
   38c50:	add	sp, sp, #8
   38c54:	pop	{r4, r5, r6, r7, r8, lr}
   38c58:	b	140a4 <memset@plt>

00038c5c <flatcc_builder_enter_user_frame_ptr@@Base>:
   38c5c:	push	{r4, r5, r6, r7, r8, lr}
   38c60:	add	r4, r1, #3
   38c64:	bic	r4, r4, #3
   38c68:	ldr	r7, [r0, #228]	; 0xe4
   38c6c:	add	r4, r4, #4
   38c70:	ldr	r3, [r0, #112]	; 0x70
   38c74:	add	r2, r4, r7
   38c78:	cmp	r2, r3
   38c7c:	sub	sp, sp, #8
   38c80:	mov	r6, r0
   38c84:	bhi	38ccc <flatcc_builder_enter_user_frame_ptr@@Base+0x70>
   38c88:	ldr	r8, [r6, #108]	; 0x6c
   38c8c:	adds	r5, r8, r7
   38c90:	beq	38cf4 <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
   38c94:	mov	r2, r4
   38c98:	mov	r1, #0
   38c9c:	mov	r0, r5
   38ca0:	bl	140a4 <memset@plt>
   38ca4:	ldr	r3, [r6, #224]	; 0xe0
   38ca8:	add	r0, r5, #4
   38cac:	str	r3, [r8, r7]
   38cb0:	ldr	r3, [r6, #228]	; 0xe4
   38cb4:	add	r4, r4, r3
   38cb8:	add	r3, r3, #4
   38cbc:	str	r4, [r6, #228]	; 0xe4
   38cc0:	str	r3, [r6, #224]	; 0xe0
   38cc4:	add	sp, sp, #8
   38cc8:	pop	{r4, r5, r6, r7, r8, pc}
   38ccc:	mov	r3, #7
   38cd0:	ldr	r0, [r0, #40]	; 0x28
   38cd4:	add	r1, r6, #108	; 0x6c
   38cd8:	str	r3, [sp]
   38cdc:	mov	r3, #0
   38ce0:	ldr	r5, [r6, #48]	; 0x30
   38ce4:	blx	r5
   38ce8:	cmp	r0, #0
   38cec:	beq	38c88 <flatcc_builder_enter_user_frame_ptr@@Base+0x2c>
   38cf0:	bl	14230 <__assert_fail@plt+0xf0>
   38cf4:	mov	r0, r5
   38cf8:	b	38cc4 <flatcc_builder_enter_user_frame_ptr@@Base+0x68>

00038cfc <flatcc_builder_enter_user_frame@@Base>:
   38cfc:	push	{r4, r5, r6, r7, lr}
   38d00:	add	r4, r1, #3
   38d04:	bic	r4, r4, #3
   38d08:	ldr	r6, [r0, #228]	; 0xe4
   38d0c:	add	r4, r4, #4
   38d10:	ldr	r3, [r0, #112]	; 0x70
   38d14:	add	r2, r4, r6
   38d18:	cmp	r2, r3
   38d1c:	sub	sp, sp, #12
   38d20:	mov	r5, r0
   38d24:	bhi	38d64 <flatcc_builder_enter_user_frame@@Base+0x68>
   38d28:	ldr	r7, [r5, #108]	; 0x6c
   38d2c:	adds	r0, r7, r6
   38d30:	beq	38d5c <flatcc_builder_enter_user_frame@@Base+0x60>
   38d34:	mov	r2, r4
   38d38:	mov	r1, #0
   38d3c:	bl	140a4 <memset@plt>
   38d40:	ldr	r3, [r5, #224]	; 0xe0
   38d44:	str	r3, [r7, r6]
   38d48:	ldr	r0, [r5, #228]	; 0xe4
   38d4c:	add	r4, r4, r0
   38d50:	add	r0, r0, #4
   38d54:	str	r4, [r5, #228]	; 0xe4
   38d58:	str	r0, [r5, #224]	; 0xe0
   38d5c:	add	sp, sp, #12
   38d60:	pop	{r4, r5, r6, r7, pc}
   38d64:	mov	r3, #7
   38d68:	ldr	r0, [r0, #40]	; 0x28
   38d6c:	add	r1, r5, #108	; 0x6c
   38d70:	str	r3, [sp]
   38d74:	mov	r3, #0
   38d78:	ldr	r7, [r5, #48]	; 0x30
   38d7c:	blx	r7
   38d80:	cmp	r0, #0
   38d84:	beq	38d28 <flatcc_builder_enter_user_frame@@Base+0x2c>
   38d88:	bl	14230 <__assert_fail@plt+0xf0>

00038d8c <flatcc_builder_exit_user_frame@@Base>:
   38d8c:	ldr	r3, [r0, #224]	; 0xe0
   38d90:	cmp	r3, #0
   38d94:	beq	38db8 <flatcc_builder_exit_user_frame@@Base+0x2c>
   38d98:	ldr	r2, [r0, #108]	; 0x6c
   38d9c:	sub	r1, r3, #4
   38da0:	add	r3, r2, r3
   38da4:	str	r1, [r0, #228]	; 0xe4
   38da8:	ldr	r3, [r3, #-4]
   38dac:	str	r3, [r0, #224]	; 0xe0
   38db0:	mov	r0, r3
   38db4:	bx	lr
   38db8:	ldr	r3, [pc, #32]	; 38de0 <flatcc_builder_exit_user_frame@@Base+0x54>
   38dbc:	ldr	r1, [pc, #32]	; 38de4 <flatcc_builder_exit_user_frame@@Base+0x58>
   38dc0:	ldr	r0, [pc, #32]	; 38de8 <flatcc_builder_exit_user_frame@@Base+0x5c>
   38dc4:	add	r3, pc, r3
   38dc8:	push	{r4, lr}
   38dcc:	add	r3, r3, #136	; 0x88
   38dd0:	ldr	r2, [pc, #20]	; 38dec <flatcc_builder_exit_user_frame@@Base+0x60>
   38dd4:	add	r1, pc, r1
   38dd8:	add	r0, pc, r0
   38ddc:	bl	14140 <__assert_fail@plt>
   38de0:	andeq	r1, r2, r8, lsl r5
   38de4:	andeq	r1, r2, r8, asr ip
   38de8:	andeq	r1, r2, r4, lsl #26
   38dec:	andeq	r0, r0, lr, lsl r2

00038df0 <flatcc_builder_exit_user_frame_at@@Base>:
   38df0:	ldr	r2, [r0, #224]	; 0xe0
   38df4:	cmp	r2, r1
   38df8:	bcc	38e04 <flatcc_builder_exit_user_frame_at@@Base+0x14>
   38dfc:	str	r1, [r0, #224]	; 0xe0
   38e00:	b	38d8c <flatcc_builder_exit_user_frame@@Base>
   38e04:	ldr	r3, [pc, #32]	; 38e2c <flatcc_builder_exit_user_frame_at@@Base+0x3c>
   38e08:	ldr	r1, [pc, #32]	; 38e30 <flatcc_builder_exit_user_frame_at@@Base+0x40>
   38e0c:	ldr	r0, [pc, #32]	; 38e34 <flatcc_builder_exit_user_frame_at@@Base+0x44>
   38e10:	add	r3, pc, r3
   38e14:	push	{r4, lr}
   38e18:	add	r3, r3, #168	; 0xa8
   38e1c:	ldr	r2, [pc, #20]	; 38e38 <flatcc_builder_exit_user_frame_at@@Base+0x48>
   38e20:	add	r1, pc, r1
   38e24:	add	r0, pc, r0
   38e28:	bl	14140 <__assert_fail@plt>
   38e2c:	andeq	r1, r2, ip, asr #9
   38e30:	andeq	r1, r2, ip, lsl #24
   38e34:	ldrdeq	r1, [r2], -r4
   38e38:	andeq	r0, r0, r7, lsr #4

00038e3c <flatcc_builder_get_current_user_frame@@Base>:
   38e3c:	ldr	r0, [r0, #224]	; 0xe0
   38e40:	bx	lr

00038e44 <flatcc_builder_get_user_frame_ptr@@Base>:
   38e44:	ldr	r0, [r0, #108]	; 0x6c
   38e48:	add	r0, r0, r1
   38e4c:	bx	lr

00038e50 <flatcc_builder_embed_buffer@@Base>:
   38e50:	ldr	ip, [r0, #152]	; 0x98
   38e54:	push	{r4, r5, r6, lr}
   38e58:	mov	r5, r3
   38e5c:	sub	sp, sp, #88	; 0x58
   38e60:	adds	r3, ip, #0
   38e64:	movne	r3, #1
   38e68:	mov	r6, r2
   38e6c:	mov	r2, r1
   38e70:	add	r1, sp, #104	; 0x68
   38e74:	mov	r4, r0
   38e78:	bl	38534 <flatcc_builder_default_alloc@@Base+0x10c>
   38e7c:	ldr	ip, [pc, #324]	; 38fc8 <flatcc_builder_embed_buffer@@Base+0x178>
   38e80:	add	ip, pc, ip
   38e84:	cmp	r0, #0
   38e88:	bne	38f90 <flatcc_builder_embed_buffer@@Base+0x140>
   38e8c:	ldr	r2, [sp, #108]	; 0x6c
   38e90:	ldr	r1, [r4, #136]	; 0x88
   38e94:	ldrh	r3, [sp, #104]	; 0x68
   38e98:	tst	r2, #2
   38e9c:	moveq	lr, #0
   38ea0:	movne	lr, #4
   38ea4:	sub	r2, r1, r5
   38ea8:	sub	r3, r3, #1
   38eac:	sub	r2, r2, lr
   38eb0:	and	r2, r2, r3
   38eb4:	ldr	r3, [r4, #152]	; 0x98
   38eb8:	str	r0, [sp, #16]
   38ebc:	str	r0, [sp, #20]
   38ec0:	cmp	r3, #0
   38ec4:	add	r0, r5, r2
   38ec8:	str	r0, [sp, #12]
   38ecc:	beq	38eec <flatcc_builder_embed_buffer@@Base+0x9c>
   38ed0:	mov	r3, #4
   38ed4:	mov	lr, #1
   38ed8:	add	r0, sp, #12
   38edc:	str	r3, [sp, #16]
   38ee0:	str	r3, [sp, #28]
   38ee4:	str	r0, [sp, #24]
   38ee8:	str	lr, [sp, #20]
   38eec:	cmp	r5, #0
   38ef0:	beq	38f18 <flatcc_builder_embed_buffer@@Base+0xc8>
   38ef4:	ldr	r0, [sp, #20]
   38ef8:	add	lr, sp, #88	; 0x58
   38efc:	add	r0, r0, #1
   38f00:	add	r3, r3, r5
   38f04:	add	lr, lr, r0, lsl #3
   38f08:	str	r3, [sp, #16]
   38f0c:	str	r0, [sp, #20]
   38f10:	str	r6, [lr, #-72]	; 0xffffffb8
   38f14:	str	r5, [lr, #-68]	; 0xffffffbc
   38f18:	cmp	r2, #0
   38f1c:	bne	38f60 <flatcc_builder_embed_buffer@@Base+0x110>
   38f20:	sub	r5, r1, r3
   38f24:	cmp	r1, r5
   38f28:	ble	38fc4 <flatcc_builder_embed_buffer@@Base+0x174>
   38f2c:	ldr	r0, [r4, #36]	; 0x24
   38f30:	ldr	r2, [sp, #20]
   38f34:	str	r3, [sp]
   38f38:	add	r1, sp, #24
   38f3c:	ldr	r6, [r4, #44]	; 0x2c
   38f40:	mov	r3, r5
   38f44:	blx	r6
   38f48:	cmp	r0, #0
   38f4c:	streq	r5, [r4, #136]	; 0x88
   38f50:	bne	38fa0 <flatcc_builder_embed_buffer@@Base+0x150>
   38f54:	mov	r0, r5
   38f58:	add	sp, sp, #88	; 0x58
   38f5c:	pop	{r4, r5, r6, pc}
   38f60:	ldr	r0, [sp, #20]
   38f64:	ldr	lr, [pc, #96]	; 38fcc <flatcc_builder_embed_buffer@@Base+0x17c>
   38f68:	add	r0, r0, #1
   38f6c:	add	r3, r3, r2
   38f70:	str	r3, [sp, #16]
   38f74:	ldr	lr, [ip, lr]
   38f78:	add	ip, sp, #88	; 0x58
   38f7c:	add	ip, ip, r0, lsl #3
   38f80:	str	r0, [sp, #20]
   38f84:	str	lr, [ip, #-72]	; 0xffffffb8
   38f88:	str	r2, [ip, #-68]	; 0xffffffbc
   38f8c:	b	38f20 <flatcc_builder_embed_buffer@@Base+0xd0>
   38f90:	mov	r5, #0
   38f94:	mov	r0, r5
   38f98:	add	sp, sp, #88	; 0x58
   38f9c:	pop	{r4, r5, r6, pc}
   38fa0:	ldr	r3, [pc, #40]	; 38fd0 <flatcc_builder_embed_buffer@@Base+0x180>
   38fa4:	ldr	r1, [pc, #40]	; 38fd4 <flatcc_builder_embed_buffer@@Base+0x184>
   38fa8:	ldr	r0, [pc, #40]	; 38fd8 <flatcc_builder_embed_buffer@@Base+0x188>
   38fac:	add	r3, pc, r3
   38fb0:	ldr	r2, [pc, #36]	; 38fdc <flatcc_builder_embed_buffer@@Base+0x18c>
   38fb4:	add	r3, r3, #28
   38fb8:	add	r1, pc, r1
   38fbc:	add	r0, pc, r0
   38fc0:	bl	14140 <__assert_fail@plt>
   38fc4:	bl	14298 <__assert_fail@plt+0x158>
   38fc8:	andeq	r2, r3, r8, ror r1
   38fcc:	muleq	r0, ip, r0
   38fd0:	andeq	r1, r2, r0, lsr r3
   38fd4:	andeq	r1, r2, r4, ror sl
   38fd8:	andeq	r0, r1, r0, lsl #6
   38fdc:	andeq	r0, r0, fp, lsl #5

00038fe0 <flatcc_builder_create_buffer@@Base>:
   38fe0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38fe4:	sub	sp, sp, #100	; 0x64
   38fe8:	mov	r5, #0
   38fec:	ldr	r8, [sp, #140]	; 0x8c
   38ff0:	mov	r9, r1
   38ff4:	and	r6, r8, #1
   38ff8:	mov	r7, r3
   38ffc:	add	r1, sp, #136	; 0x88
   39000:	mov	r3, r6
   39004:	str	r5, [sp, #20]
   39008:	mov	r4, r0
   3900c:	bl	38534 <flatcc_builder_default_alloc@@Base+0x10c>
   39010:	ldr	lr, [pc, #516]	; 3921c <flatcc_builder_create_buffer@@Base+0x23c>
   39014:	add	lr, pc, lr
   39018:	cmp	r0, r5
   3901c:	bne	391b0 <flatcc_builder_create_buffer@@Base+0x1d0>
   39020:	ldrh	r3, [r4, #128]	; 0x80
   39024:	ldrh	r2, [sp, #136]	; 0x88
   39028:	uxtb	r5, r6
   3902c:	cmp	r3, r2
   39030:	strhcc	r2, [r4, #128]	; 0x80
   39034:	cmp	r9, #0
   39038:	sub	r2, r2, #1
   3903c:	ldrne	r3, [r9]
   39040:	ldreq	r0, [sp, #20]
   39044:	ldrne	r0, [r9]
   39048:	strne	r3, [sp, #20]
   3904c:	cmp	r0, #0
   39050:	movne	r0, #4
   39054:	moveq	r0, #0
   39058:	ands	r3, r8, #2
   3905c:	ldr	r8, [r4, #136]	; 0x88
   39060:	bne	39180 <flatcc_builder_create_buffer@@Base+0x1a0>
   39064:	sub	r1, r8, #4
   39068:	cmp	r5, #0
   3906c:	sub	r1, r1, r0
   39070:	and	r2, r2, r1
   39074:	moveq	r9, #1
   39078:	moveq	ip, #4
   3907c:	bne	3918c <flatcc_builder_create_buffer@@Base+0x1ac>
   39080:	add	r1, r3, #1
   39084:	add	sl, sp, #96	; 0x60
   39088:	add	r1, sl, r1, lsl #3
   3908c:	mov	fp, #4
   39090:	add	sl, sp, #12
   39094:	cmp	r0, #0
   39098:	str	ip, [sp, #24]
   3909c:	str	r9, [sp, #28]
   390a0:	str	sl, [r1, #-72]	; 0xffffffb8
   390a4:	str	fp, [r1, #-68]	; 0xffffffbc
   390a8:	beq	390d4 <flatcc_builder_create_buffer@@Base+0xf4>
   390ac:	add	r9, r9, #1
   390b0:	add	r1, sp, #96	; 0x60
   390b4:	add	r9, r1, r9, lsl #3
   390b8:	add	r3, r3, #2
   390bc:	add	ip, ip, r0
   390c0:	str	r3, [sp, #28]
   390c4:	add	r3, sp, #20
   390c8:	str	r0, [r9, #-68]	; 0xffffffbc
   390cc:	str	ip, [sp, #24]
   390d0:	str	r3, [r9, #-72]	; 0xffffffb8
   390d4:	cmp	r2, #0
   390d8:	beq	39108 <flatcc_builder_create_buffer@@Base+0x128>
   390dc:	ldr	r3, [sp, #28]
   390e0:	ldr	r1, [pc, #312]	; 39220 <flatcc_builder_create_buffer@@Base+0x240>
   390e4:	add	r3, r3, #1
   390e8:	add	ip, ip, r2
   390ec:	str	ip, [sp, #24]
   390f0:	ldr	r0, [lr, r1]
   390f4:	add	r1, sp, #96	; 0x60
   390f8:	add	r1, r1, r3, lsl #3
   390fc:	str	r3, [sp, #28]
   39100:	str	r0, [r1, #-72]	; 0xffffffb8
   39104:	str	r2, [r1, #-68]	; 0xffffffbc
   39108:	cmp	r5, #0
   3910c:	sub	r5, r8, ip
   39110:	mov	r3, r5
   39114:	beq	391c0 <flatcc_builder_create_buffer@@Base+0x1e0>
   39118:	cmp	r6, #0
   3911c:	add	r3, r5, #4
   39120:	beq	391c0 <flatcc_builder_create_buffer@@Base+0x1e0>
   39124:	ldr	r2, [r4, #144]	; 0x90
   39128:	sub	r2, r2, r3
   3912c:	str	r2, [sp, #16]
   39130:	sub	r7, r7, r3
   39134:	cmp	r5, r8
   39138:	str	r7, [sp, #12]
   3913c:	mov	r6, r5
   39140:	bge	391d0 <flatcc_builder_create_buffer@@Base+0x1f0>
   39144:	ldr	r0, [r4, #36]	; 0x24
   39148:	ldr	r2, [sp, #28]
   3914c:	str	ip, [sp]
   39150:	mov	r3, r5
   39154:	ldr	r7, [r4, #44]	; 0x2c
   39158:	add	r1, sp, #32
   3915c:	blx	r7
   39160:	cmp	r0, #0
   39164:	bne	391d4 <flatcc_builder_create_buffer@@Base+0x1f4>
   39168:	cmp	r5, #0
   3916c:	str	r5, [r4, #136]	; 0x88
   39170:	beq	391f8 <flatcc_builder_create_buffer@@Base+0x218>
   39174:	mov	r0, r6
   39178:	add	sp, sp, #100	; 0x64
   3917c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39180:	sub	r3, r8, #8
   39184:	sub	r3, r3, r0
   39188:	and	r2, r2, r3
   3918c:	mov	ip, #4
   39190:	mov	r3, #1
   39194:	add	r1, sp, #16
   39198:	str	ip, [sp, #36]	; 0x24
   3919c:	str	r1, [sp, #32]
   391a0:	mov	r5, r3
   391a4:	mov	r9, #2
   391a8:	mov	ip, #8
   391ac:	b	39080 <flatcc_builder_create_buffer@@Base+0xa0>
   391b0:	mov	r6, r5
   391b4:	mov	r0, r6
   391b8:	add	sp, sp, #100	; 0x64
   391bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   391c0:	ldr	r2, [r4, #140]	; 0x8c
   391c4:	sub	r2, r2, r3
   391c8:	str	r2, [sp, #16]
   391cc:	b	39130 <flatcc_builder_create_buffer@@Base+0x150>
   391d0:	bl	14298 <__assert_fail@plt+0x158>
   391d4:	ldr	r3, [pc, #72]	; 39224 <flatcc_builder_create_buffer@@Base+0x244>
   391d8:	ldr	r1, [pc, #72]	; 39228 <flatcc_builder_create_buffer@@Base+0x248>
   391dc:	ldr	r0, [pc, #72]	; 3922c <flatcc_builder_create_buffer@@Base+0x24c>
   391e0:	add	r3, pc, r3
   391e4:	ldr	r2, [pc, #68]	; 39230 <flatcc_builder_create_buffer@@Base+0x250>
   391e8:	add	r3, r3, #28
   391ec:	add	r1, pc, r1
   391f0:	add	r0, pc, r0
   391f4:	bl	14140 <__assert_fail@plt>
   391f8:	ldr	r3, [pc, #52]	; 39234 <flatcc_builder_create_buffer@@Base+0x254>
   391fc:	ldr	r1, [pc, #52]	; 39238 <flatcc_builder_create_buffer@@Base+0x258>
   39200:	ldr	r0, [pc, #52]	; 3923c <flatcc_builder_create_buffer@@Base+0x25c>
   39204:	add	r3, pc, r3
   39208:	mov	r2, #772	; 0x304
   3920c:	add	r3, r3, #204	; 0xcc
   39210:	add	r1, pc, r1
   39214:	add	r0, pc, r0
   39218:	bl	14140 <__assert_fail@plt>
   3921c:	andeq	r1, r3, r4, ror #31
   39220:	muleq	r0, ip, r0
   39224:	strdeq	r1, [r2], -ip
   39228:	andeq	r1, r2, r0, asr #16
   3922c:	andeq	r0, r1, ip, asr #1
   39230:	andeq	r0, r0, fp, lsl #5
   39234:	ldrdeq	r1, [r2], -r8
   39238:	andeq	r1, r2, ip, lsl r8
   3923c:	andeq	r0, r1, r8, lsr #1

00039240 <flatcc_builder_create_struct@@Base>:
   39240:	push	{r4, r5, r6, lr}
   39244:	cmp	r3, #0
   39248:	ldr	lr, [pc, #300]	; 3937c <flatcc_builder_create_struct@@Base+0x13c>
   3924c:	sub	sp, sp, #80	; 0x50
   39250:	add	lr, pc, lr
   39254:	beq	39358 <flatcc_builder_create_struct@@Base+0x118>
   39258:	mov	r5, r0
   3925c:	ldrh	r0, [r0, #128]	; 0x80
   39260:	ldr	ip, [r5, #136]	; 0x88
   39264:	cmp	r0, r3
   39268:	strhcc	r3, [r5, #128]	; 0x80
   3926c:	mov	r0, #0
   39270:	sub	r3, r3, #1
   39274:	sub	r4, ip, r2
   39278:	cmp	r2, #0
   3927c:	and	r3, r3, r4
   39280:	str	r0, [sp, #8]
   39284:	str	r0, [sp, #12]
   39288:	bne	39308 <flatcc_builder_create_struct@@Base+0xc8>
   3928c:	cmp	r3, #0
   39290:	movne	r6, #1
   39294:	movne	r1, r2
   39298:	beq	39330 <flatcc_builder_create_struct@@Base+0xf0>
   3929c:	ldr	r0, [pc, #220]	; 39380 <flatcc_builder_create_struct@@Base+0x140>
   392a0:	add	r1, r1, #1
   392a4:	add	r2, r2, r3
   392a8:	add	r4, sp, #80	; 0x50
   392ac:	add	r1, r4, r1, lsl #3
   392b0:	str	r2, [sp, #8]
   392b4:	sub	r4, ip, r2
   392b8:	ldr	r0, [lr, r0]
   392bc:	str	r3, [r1, #-68]	; 0xffffffbc
   392c0:	str	r0, [r1, #-72]	; 0xffffffb8
   392c4:	str	r6, [sp, #12]
   392c8:	cmp	ip, r4
   392cc:	ble	39330 <flatcc_builder_create_struct@@Base+0xf0>
   392d0:	ldr	r3, [sp, #12]
   392d4:	ldr	r0, [r5, #36]	; 0x24
   392d8:	add	r1, sp, #16
   392dc:	str	r2, [sp]
   392e0:	mov	r2, r3
   392e4:	ldr	r6, [r5, #44]	; 0x2c
   392e8:	mov	r3, r4
   392ec:	blx	r6
   392f0:	cmp	r0, #0
   392f4:	bne	39334 <flatcc_builder_create_struct@@Base+0xf4>
   392f8:	mov	r0, r4
   392fc:	str	r4, [r5, #136]	; 0x88
   39300:	add	sp, sp, #80	; 0x50
   39304:	pop	{r4, r5, r6, pc}
   39308:	cmp	r3, r0
   3930c:	mov	r0, #1
   39310:	str	r1, [sp, #16]
   39314:	str	r2, [sp, #8]
   39318:	str	r2, [sp, #20]
   3931c:	str	r0, [sp, #12]
   39320:	movne	r1, r0
   39324:	movne	r6, #2
   39328:	beq	392c8 <flatcc_builder_create_struct@@Base+0x88>
   3932c:	b	3929c <flatcc_builder_create_struct@@Base+0x5c>
   39330:	bl	14298 <__assert_fail@plt+0x158>
   39334:	ldr	r3, [pc, #72]	; 39384 <flatcc_builder_create_struct@@Base+0x144>
   39338:	ldr	r1, [pc, #72]	; 39388 <flatcc_builder_create_struct@@Base+0x148>
   3933c:	ldr	r0, [pc, #72]	; 3938c <flatcc_builder_create_struct@@Base+0x14c>
   39340:	add	r3, pc, r3
   39344:	ldr	r2, [pc, #68]	; 39390 <flatcc_builder_create_struct@@Base+0x150>
   39348:	add	r3, r3, #28
   3934c:	add	r1, pc, r1
   39350:	add	r0, pc, r0
   39354:	bl	14140 <__assert_fail@plt>
   39358:	ldr	r3, [pc, #52]	; 39394 <flatcc_builder_create_struct@@Base+0x154>
   3935c:	ldr	r1, [pc, #52]	; 39398 <flatcc_builder_create_struct@@Base+0x158>
   39360:	ldr	r0, [pc, #52]	; 3939c <flatcc_builder_create_struct@@Base+0x15c>
   39364:	add	r3, pc, r3
   39368:	ldr	r2, [pc, #48]	; 393a0 <flatcc_builder_create_struct@@Base+0x160>
   3936c:	add	r3, r3, #236	; 0xec
   39370:	add	r1, pc, r1
   39374:	add	r0, pc, r0
   39378:	bl	14140 <__assert_fail@plt>
   3937c:	andeq	r1, r3, r8, lsr #27
   39380:	muleq	r0, ip, r0
   39384:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   39388:	andeq	r1, r2, r0, ror #13
   3938c:	andeq	pc, r0, ip, ror #30
   39390:	andeq	r0, r0, fp, lsl #5
   39394:	andeq	r0, r2, r8, ror pc
   39398:			; <UNDEFINED> instruction: 0x000216bc
   3939c:	andeq	r1, r2, r4, lsr #15
   393a0:	andeq	r0, r0, pc, lsl #6

000393a4 <flatcc_builder_start_buffer@@Base>:
   393a4:	push	{r4, r5, r6, r7, r8, lr}
   393a8:	mov	r5, r1
   393ac:	ldrh	r1, [r0, #128]	; 0x80
   393b0:	mov	r4, r0
   393b4:	mov	r7, r2
   393b8:	mov	r6, r3
   393bc:	bl	38664 <flatcc_builder_default_alloc@@Base+0x23c>
   393c0:	ldr	r1, [pc, #140]	; 39454 <flatcc_builder_start_buffer@@Base+0xb0>
   393c4:	add	r1, pc, r1
   393c8:	cmp	r0, #0
   393cc:	bne	3944c <flatcc_builder_start_buffer@@Base+0xa8>
   393d0:	ldrh	r3, [r4, #132]	; 0x84
   393d4:	ldr	ip, [r4, #32]
   393d8:	mov	r2, #1
   393dc:	strh	r2, [r4, #128]	; 0x80
   393e0:	strh	r3, [ip, #34]	; 0x22
   393e4:	ldrh	r3, [r4, #164]	; 0xa4
   393e8:	strh	r7, [r4, #132]	; 0x84
   393ec:	cmp	r5, #0
   393f0:	strh	r3, [ip, #32]
   393f4:	ldr	r3, [r4, #144]	; 0x90
   393f8:	strh	r6, [r4, #164]	; 0xa4
   393fc:	str	r3, [ip, #20]
   39400:	ldr	r3, [r4, #152]	; 0x98
   39404:	str	r3, [ip, #28]
   39408:	ldr	r3, [r4, #148]	; 0x94
   3940c:	ldr	lr, [r4, #136]	; 0x88
   39410:	ldr	r2, [r4, #168]	; 0xa8
   39414:	add	r6, r3, #1
   39418:	str	r3, [r4, #152]	; 0x98
   3941c:	str	r6, [r4, #148]	; 0x94
   39420:	str	lr, [r4, #144]	; 0x90
   39424:	str	r2, [ip, #16]
   39428:	beq	39440 <flatcc_builder_start_buffer@@Base+0x9c>
   3942c:	ldr	r2, [r5]
   39430:	mov	r3, #1
   39434:	str	r2, [r4, #168]	; 0xa8
   39438:	strh	r3, [ip, #14]
   3943c:	pop	{r4, r5, r6, r7, r8, pc}
   39440:	ldr	r3, [pc, #16]	; 39458 <flatcc_builder_start_buffer@@Base+0xb4>
   39444:	ldr	r5, [r1, r3]
   39448:	b	3942c <flatcc_builder_start_buffer@@Base+0x88>
   3944c:	mvn	r0, #0
   39450:	pop	{r4, r5, r6, r7, r8, pc}
   39454:	andeq	r1, r3, r4, lsr ip
   39458:	muleq	r0, ip, r0

0003945c <flatcc_builder_end_buffer@@Base>:
   3945c:	ldr	ip, [r0, #32]
   39460:	ldrh	r2, [r0, #164]	; 0xa4
   39464:	push	{r4, r5, r6, lr}
   39468:	mov	r4, r0
   3946c:	ldrh	ip, [ip, #14]
   39470:	ldr	r0, [r0, #152]	; 0x98
   39474:	and	r2, r2, #2
   39478:	cmp	r0, #0
   3947c:	moveq	r0, r2
   39480:	orrne	r0, r2, #1
   39484:	cmp	ip, #1
   39488:	sub	sp, sp, #8
   3948c:	bne	3956c <flatcc_builder_end_buffer@@Base+0x110>
   39490:	ldrh	r2, [r4, #132]	; 0x84
   39494:	ldrh	ip, [r4, #128]	; 0x80
   39498:	mov	r3, r1
   3949c:	add	r1, r4, #168	; 0xa8
   394a0:	cmp	r2, ip
   394a4:	movhi	ip, r2
   394a8:	strhhi	r2, [r4, #128]	; 0x80
   394ac:	str	r0, [sp, #4]
   394b0:	str	ip, [sp]
   394b4:	mov	r0, r4
   394b8:	bl	38fe0 <flatcc_builder_create_buffer@@Base>
   394bc:	subs	r5, r0, #0
   394c0:	beq	39560 <flatcc_builder_end_buffer@@Base+0x104>
   394c4:	ldr	r3, [r4, #32]
   394c8:	ldr	r2, [r4, #20]
   394cc:	mov	r1, #0
   394d0:	ldr	ip, [r3, #20]
   394d4:	ldr	r0, [r4, #16]
   394d8:	str	ip, [r4, #144]	; 0x90
   394dc:	ldr	ip, [r3, #28]
   394e0:	str	ip, [r4, #152]	; 0x98
   394e4:	ldr	ip, [r3, #16]
   394e8:	str	ip, [r4, #168]	; 0xa8
   394ec:	ldrh	r3, [r3, #32]
   394f0:	strh	r3, [r4, #164]	; 0xa4
   394f4:	bl	140a4 <memset@plt>
   394f8:	ldr	r3, [r4, #32]
   394fc:	ldr	r2, [r4, #64]	; 0x40
   39500:	ldrh	lr, [r4, #130]	; 0x82
   39504:	ldr	ip, [r3]
   39508:	ldr	r1, [r3, #4]
   3950c:	ldrh	r0, [r4, #128]	; 0x80
   39510:	sub	r2, r2, ip
   39514:	cmp	r2, r1
   39518:	movcs	r2, r1
   3951c:	cmp	r0, lr
   39520:	ldr	r0, [r4, #60]	; 0x3c
   39524:	ldr	r6, [r3, #8]
   39528:	str	r2, [r4, #24]
   3952c:	add	r2, r0, ip
   39530:	str	r2, [r4, #16]
   39534:	str	r6, [r4, #20]
   39538:	ldr	r2, [r4, #156]	; 0x9c
   3953c:	str	ip, [r4, #28]
   39540:	str	r1, [r3, #4]
   39544:	strhcc	lr, [r4, #128]	; 0x80
   39548:	ldrh	r1, [r3, #12]
   3954c:	sub	r2, r2, #1
   39550:	sub	r3, r3, #36	; 0x24
   39554:	str	r2, [r4, #156]	; 0x9c
   39558:	strh	r1, [r4, #130]	; 0x82
   3955c:	str	r3, [r4, #32]
   39560:	mov	r0, r5
   39564:	add	sp, sp, #8
   39568:	pop	{r4, r5, r6, pc}
   3956c:	ldr	r3, [pc, #28]	; 39590 <flatcc_builder_end_buffer@@Base+0x134>
   39570:	ldr	r1, [pc, #28]	; 39594 <flatcc_builder_end_buffer@@Base+0x138>
   39574:	ldr	r0, [pc, #28]	; 39598 <flatcc_builder_end_buffer@@Base+0x13c>
   39578:	add	r3, pc, r3
   3957c:	ldr	r2, [pc, #24]	; 3959c <flatcc_builder_end_buffer@@Base+0x140>
   39580:	add	r3, r3, #268	; 0x10c
   39584:	add	r1, pc, r1
   39588:	add	r0, pc, r0
   3958c:	bl	14140 <__assert_fail@plt>
   39590:	andeq	r0, r2, r4, ror #26
   39594:	andeq	r1, r2, r8, lsr #9
   39598:	muleq	r2, ip, r5
   3959c:	andeq	r0, r0, r6, asr #6

000395a0 <flatcc_builder_start_struct@@Base>:
   395a0:	push	{r4, r5, r6, lr}
   395a4:	mov	r5, r1
   395a8:	mov	r1, r2
   395ac:	mov	r4, r0
   395b0:	bl	38664 <flatcc_builder_default_alloc@@Base+0x23c>
   395b4:	cmp	r0, #0
   395b8:	bne	39638 <flatcc_builder_start_struct@@Base+0x98>
   395bc:	ldr	r2, [r4, #28]
   395c0:	ldr	r3, [r4, #64]	; 0x40
   395c4:	ldr	r0, [r4, #60]	; 0x3c
   395c8:	ldr	ip, [r4, #32]
   395cc:	sub	r3, r3, r2
   395d0:	cmn	r3, #4
   395d4:	ldr	r6, [r4, #20]
   395d8:	add	r0, r0, r2
   395dc:	mov	r2, #2
   395e0:	strh	r2, [ip, #14]
   395e4:	mvnhi	r2, #3
   395e8:	movhi	r3, r2
   395ec:	add	r5, r5, r6
   395f0:	strhi	r2, [r4, #24]
   395f4:	strls	r3, [r4, #24]
   395f8:	mvn	r2, #3
   395fc:	cmp	r5, r3
   39600:	str	r0, [r4, #16]
   39604:	str	r2, [ip, #4]
   39608:	str	r5, [r4, #20]
   3960c:	bcs	39618 <flatcc_builder_start_struct@@Base+0x78>
   39610:	add	r0, r0, r6
   39614:	pop	{r4, r5, r6, pc}
   39618:	add	r1, r5, #1
   3961c:	mov	r0, r4
   39620:	bl	383b4 <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   39624:	cmp	r0, #0
   39628:	bne	39638 <flatcc_builder_start_struct@@Base+0x98>
   3962c:	ldr	r0, [r4, #16]
   39630:	add	r0, r0, r6
   39634:	pop	{r4, r5, r6, pc}
   39638:	mov	r0, #0
   3963c:	pop	{r4, r5, r6, pc}

00039640 <flatcc_builder_struct_edit@@Base>:
   39640:	ldr	r0, [r0, #16]
   39644:	bx	lr

00039648 <flatcc_builder_end_struct@@Base>:
   39648:	ldr	r3, [r0, #32]
   3964c:	push	{r4, r5, r6, lr}
   39650:	ldrh	r3, [r3, #14]
   39654:	cmp	r3, #2
   39658:	bne	396f8 <flatcc_builder_end_struct@@Base+0xb0>
   3965c:	ldrh	r3, [r0, #130]	; 0x82
   39660:	ldr	r2, [r0, #20]
   39664:	ldr	r1, [r0, #16]
   39668:	mov	r4, r0
   3966c:	bl	39240 <flatcc_builder_create_struct@@Base>
   39670:	subs	r5, r0, #0
   39674:	beq	396f0 <flatcc_builder_end_struct@@Base+0xa8>
   39678:	ldr	r2, [r4, #20]
   3967c:	mov	r1, #0
   39680:	ldr	r0, [r4, #16]
   39684:	bl	140a4 <memset@plt>
   39688:	ldr	r3, [r4, #32]
   3968c:	ldr	r2, [r4, #64]	; 0x40
   39690:	ldrh	lr, [r4, #130]	; 0x82
   39694:	ldr	ip, [r3]
   39698:	ldr	r1, [r3, #4]
   3969c:	ldrh	r0, [r4, #128]	; 0x80
   396a0:	sub	r2, r2, ip
   396a4:	cmp	r2, r1
   396a8:	movcs	r2, r1
   396ac:	cmp	r0, lr
   396b0:	ldr	r0, [r4, #60]	; 0x3c
   396b4:	ldr	r6, [r3, #8]
   396b8:	str	r2, [r4, #24]
   396bc:	add	r2, r0, ip
   396c0:	str	r2, [r4, #16]
   396c4:	str	r6, [r4, #20]
   396c8:	ldr	r2, [r4, #156]	; 0x9c
   396cc:	str	ip, [r4, #28]
   396d0:	str	r1, [r3, #4]
   396d4:	strhcc	lr, [r4, #128]	; 0x80
   396d8:	ldrh	r1, [r3, #12]
   396dc:	sub	r2, r2, #1
   396e0:	sub	r3, r3, #36	; 0x24
   396e4:	str	r2, [r4, #156]	; 0x9c
   396e8:	strh	r1, [r4, #130]	; 0x82
   396ec:	str	r3, [r4, #32]
   396f0:	mov	r0, r5
   396f4:	pop	{r4, r5, r6, pc}
   396f8:	ldr	r3, [pc, #28]	; 3971c <flatcc_builder_end_struct@@Base+0xd4>
   396fc:	ldr	r1, [pc, #28]	; 39720 <flatcc_builder_end_struct@@Base+0xd8>
   39700:	ldr	r0, [pc, #28]	; 39724 <flatcc_builder_end_struct@@Base+0xdc>
   39704:	add	r3, pc, r3
   39708:	mov	r2, #872	; 0x368
   3970c:	add	r3, r3, #296	; 0x128
   39710:	add	r1, pc, r1
   39714:	add	r0, pc, r0
   39718:	bl	14140 <__assert_fail@plt>
   3971c:	ldrdeq	r0, [r2], -r8
   39720:	andeq	r1, r2, ip, lsl r3
   39724:	andeq	r1, r2, ip, lsr r4

00039728 <flatcc_builder_extend_vector@@Base>:
   39728:	ldr	r2, [r0, #32]
   3972c:	push	{r4, r5, r6, lr}
   39730:	ldr	r3, [r2, #20]
   39734:	ldr	r4, [r2, #24]
   39738:	add	ip, r1, r3
   3973c:	cmp	r3, ip
   39740:	movls	r3, #0
   39744:	movhi	r3, #1
   39748:	cmp	r4, ip
   3974c:	movcs	r4, r3
   39750:	orrcc	r4, r3, #1
   39754:	cmp	r4, #0
   39758:	bne	397a8 <flatcc_builder_extend_vector@@Base+0x80>
   3975c:	ldr	lr, [r2, #16]
   39760:	str	ip, [r2, #20]
   39764:	ldr	r6, [r0, #20]
   39768:	ldr	r3, [r0, #24]
   3976c:	mla	r1, lr, r1, r6
   39770:	mov	r5, r0
   39774:	cmp	r1, r3
   39778:	str	r1, [r0, #20]
   3977c:	bcs	3978c <flatcc_builder_extend_vector@@Base+0x64>
   39780:	ldr	r0, [r5, #16]
   39784:	add	r0, r0, r6
   39788:	pop	{r4, r5, r6, pc}
   3978c:	add	r1, r1, #1
   39790:	mvn	r2, #3
   39794:	bl	383b4 <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   39798:	cmp	r0, #0
   3979c:	beq	39780 <flatcc_builder_extend_vector@@Base+0x58>
   397a0:	mov	r0, r4
   397a4:	pop	{r4, r5, r6, pc}
   397a8:	bl	142d0 <__assert_fail@plt+0x190>

000397ac <flatcc_builder_vector_push@@Base>:
   397ac:	ldr	r3, [r0, #32]
   397b0:	push	{r4, r5, r6, r7, r8, lr}
   397b4:	ldrh	r2, [r3, #14]
   397b8:	cmp	r2, #4
   397bc:	bne	39864 <flatcc_builder_vector_push@@Base+0xb8>
   397c0:	mov	r6, r1
   397c4:	ldr	r2, [r3, #20]
   397c8:	ldr	r1, [r3, #24]
   397cc:	cmp	r2, r1
   397d0:	bhi	39840 <flatcc_builder_vector_push@@Base+0x94>
   397d4:	add	r2, r2, #1
   397d8:	str	r2, [r3, #20]
   397dc:	ldr	r7, [r3, #16]
   397e0:	ldr	r5, [r0, #20]
   397e4:	ldr	r3, [r0, #24]
   397e8:	add	r1, r7, r5
   397ec:	cmp	r1, r3
   397f0:	mov	r4, r0
   397f4:	str	r1, [r0, #20]
   397f8:	bcs	39824 <flatcc_builder_vector_push@@Base+0x78>
   397fc:	ldr	r3, [r4, #16]
   39800:	adds	r3, r3, r5
   39804:	beq	3981c <flatcc_builder_vector_push@@Base+0x70>
   39808:	mov	r0, r3
   3980c:	mov	r2, r7
   39810:	mov	r1, r6
   39814:	bl	13fd8 <memcpy@plt>
   39818:	mov	r3, r0
   3981c:	mov	r0, r3
   39820:	pop	{r4, r5, r6, r7, r8, pc}
   39824:	add	r1, r1, #1
   39828:	mvn	r2, #3
   3982c:	bl	383b4 <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   39830:	cmp	r0, #0
   39834:	beq	397fc <flatcc_builder_vector_push@@Base+0x50>
   39838:	mov	r3, #0
   3983c:	b	3981c <flatcc_builder_vector_push@@Base+0x70>
   39840:	ldr	r3, [pc, #64]	; 39888 <flatcc_builder_vector_push@@Base+0xdc>
   39844:	ldr	r1, [pc, #64]	; 3988c <flatcc_builder_vector_push@@Base+0xe0>
   39848:	ldr	r0, [pc, #64]	; 39890 <flatcc_builder_vector_push@@Base+0xe4>
   3984c:	add	r3, pc, r3
   39850:	mov	r2, #908	; 0x38c
   39854:	add	r3, r3, #324	; 0x144
   39858:	add	r1, pc, r1
   3985c:	add	r0, pc, r0
   39860:	bl	14140 <__assert_fail@plt>
   39864:	ldr	r3, [pc, #40]	; 39894 <flatcc_builder_vector_push@@Base+0xe8>
   39868:	ldr	r1, [pc, #40]	; 39898 <flatcc_builder_vector_push@@Base+0xec>
   3986c:	ldr	r0, [pc, #40]	; 3989c <flatcc_builder_vector_push@@Base+0xf0>
   39870:	add	r3, pc, r3
   39874:	ldr	r2, [pc, #36]	; 398a0 <flatcc_builder_vector_push@@Base+0xf4>
   39878:	add	r3, r3, #324	; 0x144
   3987c:	add	r1, pc, r1
   39880:	add	r0, pc, r0
   39884:	bl	14140 <__assert_fail@plt>
   39888:	muleq	r2, r0, sl
   3988c:	ldrdeq	r1, [r2], -r4
   39890:	andeq	r1, r2, ip, asr #6
   39894:	andeq	r0, r2, ip, ror #20
   39898:			; <UNDEFINED> instruction: 0x000211b0
   3989c:	strdeq	r1, [r2], -ip
   398a0:	andeq	r0, r0, fp, lsl #7

000398a4 <flatcc_builder_append_vector@@Base>:
   398a4:	push	{r4, r5, r6, r7, r8, lr}
   398a8:	mov	r7, r1
   398ac:	ldr	r1, [r0, #32]
   398b0:	ldrh	r3, [r1, #14]
   398b4:	cmp	r3, #4
   398b8:	bne	39958 <flatcc_builder_append_vector@@Base+0xb4>
   398bc:	ldr	r3, [r1, #20]
   398c0:	ldr	r4, [r1, #24]
   398c4:	add	ip, r2, r3
   398c8:	cmp	r3, ip
   398cc:	movls	r3, #0
   398d0:	movhi	r3, #1
   398d4:	cmp	r4, ip
   398d8:	movcs	r4, r3
   398dc:	orrcc	r4, r3, #1
   398e0:	cmp	r4, #0
   398e4:	bne	39954 <flatcc_builder_append_vector@@Base+0xb0>
   398e8:	ldr	r6, [r1, #16]
   398ec:	str	ip, [r1, #20]
   398f0:	ldr	r8, [r0, #20]
   398f4:	mul	r6, r6, r2
   398f8:	ldr	r3, [r0, #24]
   398fc:	add	r1, r6, r8
   39900:	cmp	r1, r3
   39904:	mov	r5, r0
   39908:	str	r1, [r0, #20]
   3990c:	bcs	39938 <flatcc_builder_append_vector@@Base+0x94>
   39910:	ldr	r3, [r5, #16]
   39914:	adds	r3, r3, r8
   39918:	beq	39930 <flatcc_builder_append_vector@@Base+0x8c>
   3991c:	mov	r0, r3
   39920:	mov	r2, r6
   39924:	mov	r1, r7
   39928:	bl	13fd8 <memcpy@plt>
   3992c:	mov	r3, r0
   39930:	mov	r0, r3
   39934:	pop	{r4, r5, r6, r7, r8, pc}
   39938:	add	r1, r1, #1
   3993c:	mvn	r2, #3
   39940:	bl	383b4 <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   39944:	cmp	r0, #0
   39948:	beq	39910 <flatcc_builder_append_vector@@Base+0x6c>
   3994c:	mov	r3, r4
   39950:	b	39930 <flatcc_builder_append_vector@@Base+0x8c>
   39954:	bl	142d0 <__assert_fail@plt+0x190>
   39958:	ldr	r3, [pc, #28]	; 3997c <flatcc_builder_append_vector@@Base+0xd8>
   3995c:	ldr	r1, [pc, #28]	; 39980 <flatcc_builder_append_vector@@Base+0xdc>
   39960:	ldr	r0, [pc, #28]	; 39984 <flatcc_builder_append_vector@@Base+0xe0>
   39964:	add	r3, pc, r3
   39968:	ldr	r2, [pc, #24]	; 39988 <flatcc_builder_append_vector@@Base+0xe4>
   3996c:	add	r3, r3, #352	; 0x160
   39970:	add	r1, pc, r1
   39974:	add	r0, pc, r0
   39978:	bl	14140 <__assert_fail@plt>
   3997c:	andeq	r0, r2, r8, ror r9
   39980:	strheq	r1, [r2], -ip
   39984:	andeq	r1, r2, r8, lsl #4
   39988:	muleq	r0, r3, r3

0003998c <flatcc_builder_extend_offset_vector@@Base>:
   3998c:	ldr	ip, [r0, #32]
   39990:	push	{r4, r5, r6, lr}
   39994:	ldr	r3, [ip, #20]
   39998:	adds	r2, r1, r3
   3999c:	movcs	r3, #1
   399a0:	movcc	r3, #0
   399a4:	cmn	r2, #-1073741823	; 0xc0000001
   399a8:	movls	r4, #0
   399ac:	movhi	r4, #1
   399b0:	orrs	r4, r3, r4
   399b4:	bne	39a00 <flatcc_builder_extend_offset_vector@@Base+0x74>
   399b8:	str	r2, [ip, #20]
   399bc:	ldr	r6, [r0, #20]
   399c0:	ldr	r3, [r0, #24]
   399c4:	add	r1, r6, r1, lsl #2
   399c8:	cmp	r1, r3
   399cc:	mov	r5, r0
   399d0:	str	r1, [r0, #20]
   399d4:	bcs	399e4 <flatcc_builder_extend_offset_vector@@Base+0x58>
   399d8:	ldr	r0, [r5, #16]
   399dc:	add	r0, r0, r6
   399e0:	pop	{r4, r5, r6, pc}
   399e4:	add	r1, r1, #1
   399e8:	mvn	r2, #3
   399ec:	bl	383b4 <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   399f0:	cmp	r0, #0
   399f4:	beq	399d8 <flatcc_builder_extend_offset_vector@@Base+0x4c>
   399f8:	mov	r0, r4
   399fc:	pop	{r4, r5, r6, pc}
   39a00:	bl	142d0 <__assert_fail@plt+0x190>

00039a04 <flatcc_builder_offset_vector_push@@Base>:
   39a04:	ldr	r2, [r0, #32]
   39a08:	push	{r4, r5, r6, lr}
   39a0c:	ldrh	r3, [r2, #14]
   39a10:	cmp	r3, #5
   39a14:	bne	39a7c <flatcc_builder_offset_vector_push@@Base+0x78>
   39a18:	ldr	r3, [r2, #20]
   39a1c:	cmn	r3, #-1073741823	; 0xc0000001
   39a20:	beq	39a74 <flatcc_builder_offset_vector_push@@Base+0x70>
   39a24:	add	r3, r3, #1
   39a28:	str	r3, [r2, #20]
   39a2c:	ldr	r5, [r0, #20]
   39a30:	ldr	r2, [r0, #24]
   39a34:	add	r3, r5, #4
   39a38:	cmp	r3, r2
   39a3c:	mov	r4, r0
   39a40:	mov	r6, r1
   39a44:	str	r3, [r0, #20]
   39a48:	bcs	39a60 <flatcc_builder_offset_vector_push@@Base+0x5c>
   39a4c:	ldr	r3, [r4, #16]
   39a50:	adds	r0, r3, r5
   39a54:	beq	39aa0 <flatcc_builder_offset_vector_push@@Base+0x9c>
   39a58:	str	r6, [r3, r5]
   39a5c:	pop	{r4, r5, r6, pc}
   39a60:	mvn	r2, #3
   39a64:	add	r1, r5, #5
   39a68:	bl	383b4 <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   39a6c:	cmp	r0, #0
   39a70:	beq	39a4c <flatcc_builder_offset_vector_push@@Base+0x48>
   39a74:	mov	r0, #0
   39a78:	pop	{r4, r5, r6, pc}
   39a7c:	ldr	r3, [pc, #32]	; 39aa4 <flatcc_builder_offset_vector_push@@Base+0xa0>
   39a80:	ldr	r1, [pc, #32]	; 39aa8 <flatcc_builder_offset_vector_push@@Base+0xa4>
   39a84:	ldr	r0, [pc, #32]	; 39aac <flatcc_builder_offset_vector_push@@Base+0xa8>
   39a88:	add	r3, pc, r3
   39a8c:	ldr	r2, [pc, #28]	; 39ab0 <flatcc_builder_offset_vector_push@@Base+0xac>
   39a90:	add	r3, r3, #384	; 0x180
   39a94:	add	r1, pc, r1
   39a98:	add	r0, pc, r0
   39a9c:	bl	14140 <__assert_fail@plt>
   39aa0:	pop	{r4, r5, r6, pc}
   39aa4:	andeq	r0, r2, r4, asr r8
   39aa8:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   39aac:	andeq	r1, r2, r0, asr r1
   39ab0:	andeq	r0, r0, r6, lsr #7

00039ab4 <flatcc_builder_append_offset_vector@@Base>:
   39ab4:	ldr	ip, [r0, #32]
   39ab8:	push	{r4, r5, r6, r7, r8, lr}
   39abc:	ldrh	r3, [ip, #14]
   39ac0:	cmp	r3, #5
   39ac4:	bne	39b5c <flatcc_builder_append_offset_vector@@Base+0xa8>
   39ac8:	mov	r6, r1
   39acc:	ldr	r1, [ip, #20]
   39ad0:	adds	r1, r2, r1
   39ad4:	movcs	lr, #1
   39ad8:	movcc	lr, #0
   39adc:	cmn	r1, #-1073741823	; 0xc0000001
   39ae0:	movls	r3, #0
   39ae4:	movhi	r3, #1
   39ae8:	orrs	r8, lr, r3
   39aec:	bne	39b58 <flatcc_builder_append_offset_vector@@Base+0xa4>
   39af0:	str	r1, [ip, #20]
   39af4:	ldr	r7, [r0, #20]
   39af8:	lsl	r4, r2, #2
   39afc:	ldr	r3, [r0, #24]
   39b00:	add	r1, r4, r7
   39b04:	cmp	r1, r3
   39b08:	mov	r5, r0
   39b0c:	str	r1, [r0, #20]
   39b10:	bcs	39b3c <flatcc_builder_append_offset_vector@@Base+0x88>
   39b14:	ldr	r3, [r5, #16]
   39b18:	adds	r3, r3, r7
   39b1c:	beq	39b34 <flatcc_builder_append_offset_vector@@Base+0x80>
   39b20:	mov	r0, r3
   39b24:	mov	r2, r4
   39b28:	mov	r1, r6
   39b2c:	bl	13fd8 <memcpy@plt>
   39b30:	mov	r3, r0
   39b34:	mov	r0, r3
   39b38:	pop	{r4, r5, r6, r7, r8, pc}
   39b3c:	add	r1, r1, #1
   39b40:	mvn	r2, #3
   39b44:	bl	383b4 <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   39b48:	cmp	r0, #0
   39b4c:	beq	39b14 <flatcc_builder_append_offset_vector@@Base+0x60>
   39b50:	mov	r3, r8
   39b54:	b	39b34 <flatcc_builder_append_offset_vector@@Base+0x80>
   39b58:	bl	142d0 <__assert_fail@plt+0x190>
   39b5c:	ldr	r3, [pc, #28]	; 39b80 <flatcc_builder_append_offset_vector@@Base+0xcc>
   39b60:	ldr	r1, [pc, #28]	; 39b84 <flatcc_builder_append_offset_vector@@Base+0xd0>
   39b64:	ldr	r0, [pc, #28]	; 39b88 <flatcc_builder_append_offset_vector@@Base+0xd4>
   39b68:	add	r3, pc, r3
   39b6c:	mov	r2, #948	; 0x3b4
   39b70:	add	r3, r3, #420	; 0x1a4
   39b74:	add	r1, pc, r1
   39b78:	add	r0, pc, r0
   39b7c:	bl	14140 <__assert_fail@plt>
   39b80:	andeq	r0, r2, r4, ror r7
   39b84:			; <UNDEFINED> instruction: 0x00020eb8
   39b88:	andeq	r1, r2, r0, ror r0

00039b8c <flatcc_builder_extend_string@@Base>:
   39b8c:	ldr	r2, [r0, #32]
   39b90:	push	{r4, r5, r6, lr}
   39b94:	ldrh	r3, [r2, #14]
   39b98:	cmp	r3, #6
   39b9c:	bne	39bf8 <flatcc_builder_extend_string@@Base+0x6c>
   39ba0:	ldr	r3, [r2, #20]
   39ba4:	adds	r3, r1, r3
   39ba8:	bcs	39bf4 <flatcc_builder_extend_string@@Base+0x68>
   39bac:	str	r3, [r2, #20]
   39bb0:	ldr	r5, [r0, #20]
   39bb4:	ldr	r3, [r0, #24]
   39bb8:	add	r1, r1, r5
   39bbc:	cmp	r1, r3
   39bc0:	mov	r4, r0
   39bc4:	str	r1, [r0, #20]
   39bc8:	bcs	39bd8 <flatcc_builder_extend_string@@Base+0x4c>
   39bcc:	ldr	r0, [r4, #16]
   39bd0:	add	r0, r0, r5
   39bd4:	pop	{r4, r5, r6, pc}
   39bd8:	add	r1, r1, #1
   39bdc:	mvn	r2, #3
   39be0:	bl	383b4 <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   39be4:	cmp	r0, #0
   39be8:	beq	39bcc <flatcc_builder_extend_string@@Base+0x40>
   39bec:	mov	r0, #0
   39bf0:	pop	{r4, r5, r6, pc}
   39bf4:	bl	142d0 <__assert_fail@plt+0x190>
   39bf8:	ldr	r3, [pc, #28]	; 39c1c <flatcc_builder_extend_string@@Base+0x90>
   39bfc:	ldr	r1, [pc, #28]	; 39c20 <flatcc_builder_extend_string@@Base+0x94>
   39c00:	ldr	r0, [pc, #28]	; 39c24 <flatcc_builder_extend_string@@Base+0x98>
   39c04:	add	r3, pc, r3
   39c08:	ldr	r2, [pc, #24]	; 39c28 <flatcc_builder_extend_string@@Base+0x9c>
   39c0c:	add	r3, r3, #456	; 0x1c8
   39c10:	add	r1, pc, r1
   39c14:	add	r0, pc, r0
   39c18:	bl	14140 <__assert_fail@plt>
   39c1c:	ldrdeq	r0, [r2], -r8
   39c20:	andeq	r0, r2, ip, lsl lr
   39c24:	andeq	r1, r2, r8
   39c28:			; <UNDEFINED> instruction: 0x000003bd

00039c2c <flatcc_builder_append_string@@Base>:
   39c2c:	push	{r4, r5, r6, r7, r8, lr}
   39c30:	mov	r7, r1
   39c34:	ldr	r1, [r0, #32]
   39c38:	ldrh	r3, [r1, #14]
   39c3c:	cmp	r3, #6
   39c40:	bne	39cbc <flatcc_builder_append_string@@Base+0x90>
   39c44:	ldr	r3, [r1, #20]
   39c48:	mov	r5, r2
   39c4c:	adds	r3, r2, r3
   39c50:	bcs	39cb8 <flatcc_builder_append_string@@Base+0x8c>
   39c54:	str	r3, [r1, #20]
   39c58:	ldr	r6, [r0, #20]
   39c5c:	ldr	r3, [r0, #24]
   39c60:	add	r1, r2, r6
   39c64:	cmp	r1, r3
   39c68:	mov	r4, r0
   39c6c:	str	r1, [r0, #20]
   39c70:	bcs	39c9c <flatcc_builder_append_string@@Base+0x70>
   39c74:	ldr	r3, [r4, #16]
   39c78:	adds	r3, r3, r6
   39c7c:	beq	39c94 <flatcc_builder_append_string@@Base+0x68>
   39c80:	mov	r0, r3
   39c84:	mov	r2, r5
   39c88:	mov	r1, r7
   39c8c:	bl	13fd8 <memcpy@plt>
   39c90:	mov	r3, r0
   39c94:	mov	r0, r3
   39c98:	pop	{r4, r5, r6, r7, r8, pc}
   39c9c:	add	r1, r1, #1
   39ca0:	mvn	r2, #3
   39ca4:	bl	383b4 <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   39ca8:	cmp	r0, #0
   39cac:	beq	39c74 <flatcc_builder_append_string@@Base+0x48>
   39cb0:	mov	r3, #0
   39cb4:	b	39c94 <flatcc_builder_append_string@@Base+0x68>
   39cb8:	bl	142d0 <__assert_fail@plt+0x190>
   39cbc:	ldr	r3, [pc, #28]	; 39ce0 <flatcc_builder_append_string@@Base+0xb4>
   39cc0:	ldr	r1, [pc, #28]	; 39ce4 <flatcc_builder_append_string@@Base+0xb8>
   39cc4:	ldr	r0, [pc, #28]	; 39ce8 <flatcc_builder_append_string@@Base+0xbc>
   39cc8:	add	r3, pc, r3
   39ccc:	ldr	r2, [pc, #24]	; 39cec <flatcc_builder_append_string@@Base+0xc0>
   39cd0:	add	r3, r3, #488	; 0x1e8
   39cd4:	add	r1, pc, r1
   39cd8:	add	r0, pc, r0
   39cdc:	bl	14140 <__assert_fail@plt>
   39ce0:	andeq	r0, r2, r4, lsl r6
   39ce4:	andeq	r0, r2, r8, asr sp
   39ce8:	andeq	r0, r2, r4, asr #30
   39cec:	andeq	r0, r0, r6, asr #7

00039cf0 <flatcc_builder_append_string_str@@Base>:
   39cf0:	push	{r4, r5, r6, lr}
   39cf4:	mov	r5, r0
   39cf8:	mov	r0, r1
   39cfc:	mov	r4, r1
   39d00:	bl	14074 <strlen@plt>
   39d04:	mov	r1, r4
   39d08:	mov	r2, r0
   39d0c:	mov	r0, r5
   39d10:	pop	{r4, r5, r6, lr}
   39d14:	b	39c2c <flatcc_builder_append_string@@Base>

00039d18 <flatcc_builder_append_string_strn@@Base>:
   39d18:	push	{r4, r5, r6, lr}
   39d1c:	mov	r4, r1
   39d20:	mov	r6, r0
   39d24:	mov	r1, #0
   39d28:	mov	r0, r4
   39d2c:	mov	r5, r2
   39d30:	bl	140c8 <memchr@plt>
   39d34:	mov	r1, r4
   39d38:	cmp	r0, #0
   39d3c:	subne	r5, r0, r4
   39d40:	mov	r2, r5
   39d44:	mov	r0, r6
   39d48:	pop	{r4, r5, r6, lr}
   39d4c:	b	39c2c <flatcc_builder_append_string@@Base>

00039d50 <flatcc_builder_truncate_vector@@Base>:
   39d50:	ldr	r3, [r0, #32]
   39d54:	push	{r4, lr}
   39d58:	ldrh	r2, [r3, #14]
   39d5c:	cmp	r2, #4
   39d60:	bne	39da4 <flatcc_builder_truncate_vector@@Base+0x54>
   39d64:	ldr	ip, [r3, #20]
   39d68:	cmp	ip, r1
   39d6c:	bcc	39dc8 <flatcc_builder_truncate_vector@@Base+0x78>
   39d70:	ldr	r2, [r3, #16]
   39d74:	sub	ip, ip, r1
   39d78:	str	ip, [r3, #20]
   39d7c:	mul	r2, r2, r1
   39d80:	ldr	r3, [r0, #20]
   39d84:	ldr	r1, [r0, #16]
   39d88:	sub	r3, r3, r2
   39d8c:	str	r3, [r0, #20]
   39d90:	add	r0, r1, r3
   39d94:	mov	r1, #0
   39d98:	bl	140a4 <memset@plt>
   39d9c:	mov	r0, #0
   39da0:	pop	{r4, pc}
   39da4:	ldr	r3, [pc, #64]	; 39dec <flatcc_builder_truncate_vector@@Base+0x9c>
   39da8:	ldr	r1, [pc, #64]	; 39df0 <flatcc_builder_truncate_vector@@Base+0xa0>
   39dac:	ldr	r0, [pc, #64]	; 39df4 <flatcc_builder_truncate_vector@@Base+0xa4>
   39db0:	add	r3, pc, r3
   39db4:	ldr	r2, [pc, #60]	; 39df8 <flatcc_builder_truncate_vector@@Base+0xa8>
   39db8:	add	r3, r3, #520	; 0x208
   39dbc:	add	r1, pc, r1
   39dc0:	add	r0, pc, r0
   39dc4:	bl	14140 <__assert_fail@plt>
   39dc8:	ldr	r3, [pc, #44]	; 39dfc <flatcc_builder_truncate_vector@@Base+0xac>
   39dcc:	ldr	r1, [pc, #44]	; 39e00 <flatcc_builder_truncate_vector@@Base+0xb0>
   39dd0:	ldr	r0, [pc, #44]	; 39e04 <flatcc_builder_truncate_vector@@Base+0xb4>
   39dd4:	add	r3, pc, r3
   39dd8:	ldr	r2, [pc, #40]	; 39e08 <flatcc_builder_truncate_vector@@Base+0xb8>
   39ddc:	add	r3, r3, #520	; 0x208
   39de0:	add	r1, pc, r1
   39de4:	add	r0, pc, r0
   39de8:	bl	14140 <__assert_fail@plt>
   39dec:	andeq	r0, r2, ip, lsr #10
   39df0:	andeq	r0, r2, r0, ror ip
   39df4:			; <UNDEFINED> instruction: 0x00020dbc
   39df8:	ldrdeq	r0, [r0], -r9
   39dfc:	andeq	r0, r2, r8, lsl #10
   39e00:	andeq	r0, r2, ip, asr #24
   39e04:	andeq	r0, r2, r4, ror #28
   39e08:	ldrdeq	r0, [r0], -sl

00039e0c <flatcc_builder_truncate_offset_vector@@Base>:
   39e0c:	ldr	r3, [r0, #32]
   39e10:	push	{r4, lr}
   39e14:	ldrh	r2, [r3, #14]
   39e18:	cmp	r2, #5
   39e1c:	bne	39e60 <flatcc_builder_truncate_offset_vector@@Base+0x54>
   39e20:	ldr	ip, [r3, #20]
   39e24:	cmp	ip, r1
   39e28:	bcc	39e84 <flatcc_builder_truncate_offset_vector@@Base+0x78>
   39e2c:	ldr	r2, [r3, #16]
   39e30:	sub	ip, ip, r1
   39e34:	str	ip, [r3, #20]
   39e38:	mul	r2, r2, r1
   39e3c:	ldr	r3, [r0, #20]
   39e40:	ldr	r1, [r0, #16]
   39e44:	sub	r3, r3, r2
   39e48:	str	r3, [r0, #20]
   39e4c:	add	r0, r1, r3
   39e50:	mov	r1, #0
   39e54:	bl	140a4 <memset@plt>
   39e58:	mov	r0, #0
   39e5c:	pop	{r4, pc}
   39e60:	ldr	r3, [pc, #64]	; 39ea8 <flatcc_builder_truncate_offset_vector@@Base+0x9c>
   39e64:	ldr	r1, [pc, #64]	; 39eac <flatcc_builder_truncate_offset_vector@@Base+0xa0>
   39e68:	ldr	r0, [pc, #64]	; 39eb0 <flatcc_builder_truncate_offset_vector@@Base+0xa4>
   39e6c:	add	r3, pc, r3
   39e70:	ldr	r2, [pc, #60]	; 39eb4 <flatcc_builder_truncate_offset_vector@@Base+0xa8>
   39e74:	add	r3, r3, #552	; 0x228
   39e78:	add	r1, pc, r1
   39e7c:	add	r0, pc, r0
   39e80:	bl	14140 <__assert_fail@plt>
   39e84:	ldr	r3, [pc, #44]	; 39eb8 <flatcc_builder_truncate_offset_vector@@Base+0xac>
   39e88:	ldr	r1, [pc, #44]	; 39ebc <flatcc_builder_truncate_offset_vector@@Base+0xb0>
   39e8c:	ldr	r0, [pc, #44]	; 39ec0 <flatcc_builder_truncate_offset_vector@@Base+0xb4>
   39e90:	add	r3, pc, r3
   39e94:	ldr	r2, [pc, #40]	; 39ec4 <flatcc_builder_truncate_offset_vector@@Base+0xb8>
   39e98:	add	r3, r3, #552	; 0x228
   39e9c:	add	r1, pc, r1
   39ea0:	add	r0, pc, r0
   39ea4:	bl	14140 <__assert_fail@plt>
   39ea8:	andeq	r0, r2, r0, ror r4
   39eac:			; <UNDEFINED> instruction: 0x00020bb4
   39eb0:	andeq	r0, r2, ip, ror #26
   39eb4:	andeq	r0, r0, r2, ror #7
   39eb8:	andeq	r0, r2, ip, asr #8
   39ebc:	muleq	r2, r0, fp
   39ec0:	andeq	r0, r2, ip, asr #27
   39ec4:	andeq	r0, r0, r3, ror #7

00039ec8 <flatcc_builder_truncate_string@@Base>:
   39ec8:	ldr	r2, [r0, #32]
   39ecc:	push	{r4, lr}
   39ed0:	ldrh	r3, [r2, #14]
   39ed4:	cmp	r3, #6
   39ed8:	bne	39f18 <flatcc_builder_truncate_string@@Base+0x50>
   39edc:	ldr	r3, [r2, #20]
   39ee0:	cmp	r3, r1
   39ee4:	bcc	39f3c <flatcc_builder_truncate_string@@Base+0x74>
   39ee8:	sub	r3, r3, r1
   39eec:	str	r3, [r2, #20]
   39ef0:	ldr	r3, [r0, #20]
   39ef4:	ldr	r2, [r0, #16]
   39ef8:	sub	r3, r3, r1
   39efc:	str	r3, [r0, #20]
   39f00:	add	r0, r2, r3
   39f04:	mov	r2, r1
   39f08:	mov	r1, #0
   39f0c:	bl	140a4 <memset@plt>
   39f10:	mov	r0, #0
   39f14:	pop	{r4, pc}
   39f18:	ldr	r3, [pc, #64]	; 39f60 <flatcc_builder_truncate_string@@Base+0x98>
   39f1c:	ldr	r1, [pc, #64]	; 39f64 <flatcc_builder_truncate_string@@Base+0x9c>
   39f20:	ldr	r0, [pc, #64]	; 39f68 <flatcc_builder_truncate_string@@Base+0xa0>
   39f24:	add	r3, pc, r3
   39f28:	ldr	r2, [pc, #60]	; 39f6c <flatcc_builder_truncate_string@@Base+0xa4>
   39f2c:	add	r3, r3, #592	; 0x250
   39f30:	add	r1, pc, r1
   39f34:	add	r0, pc, r0
   39f38:	bl	14140 <__assert_fail@plt>
   39f3c:	ldr	r3, [pc, #44]	; 39f70 <flatcc_builder_truncate_string@@Base+0xa8>
   39f40:	ldr	r1, [pc, #44]	; 39f74 <flatcc_builder_truncate_string@@Base+0xac>
   39f44:	ldr	r0, [pc, #44]	; 39f78 <flatcc_builder_truncate_string@@Base+0xb0>
   39f48:	add	r3, pc, r3
   39f4c:	mov	r2, #1004	; 0x3ec
   39f50:	add	r3, r3, #592	; 0x250
   39f54:	add	r1, pc, r1
   39f58:	add	r0, pc, r0
   39f5c:	bl	14140 <__assert_fail@plt>
   39f60:			; <UNDEFINED> instruction: 0x000203b8
   39f64:	strdeq	r0, [r2], -ip
   39f68:	andeq	r0, r2, r8, ror #25
   39f6c:	andeq	r0, r0, fp, ror #7
   39f70:	muleq	r2, r4, r3
   39f74:	ldrdeq	r0, [r2], -r8
   39f78:	andeq	r0, r2, r0, asr sp

00039f7c <flatcc_builder_start_vector@@Base>:
   39f7c:	cmp	r2, #4
   39f80:	push	{r4, r5, r6, lr}
   39f84:	mov	r6, r1
   39f88:	movcs	r1, r2
   39f8c:	movcc	r1, #4
   39f90:	mov	r5, r3
   39f94:	mov	r4, r0
   39f98:	bl	38664 <flatcc_builder_default_alloc@@Base+0x23c>
   39f9c:	cmp	r0, #0
   39fa0:	bne	39fec <flatcc_builder_start_vector@@Base+0x70>
   39fa4:	ldr	r2, [r4, #32]
   39fa8:	mov	lr, #4
   39fac:	str	r6, [r2, #16]
   39fb0:	str	r0, [r2, #20]
   39fb4:	str	r5, [r2, #24]
   39fb8:	ldr	ip, [r4, #28]
   39fbc:	ldr	r3, [r4, #64]	; 0x40
   39fc0:	ldr	r1, [r4, #60]	; 0x3c
   39fc4:	sub	r3, r3, ip
   39fc8:	cmn	r3, #4
   39fcc:	mvnhi	r3, #3
   39fd0:	strh	lr, [r2, #14]
   39fd4:	add	r1, r1, ip
   39fd8:	str	r3, [r4, #24]
   39fdc:	mvn	r3, #3
   39fe0:	str	r1, [r4, #16]
   39fe4:	str	r3, [r2, #4]
   39fe8:	pop	{r4, r5, r6, pc}
   39fec:	mvn	r0, #0
   39ff0:	pop	{r4, r5, r6, pc}

00039ff4 <flatcc_builder_start_offset_vector@@Base>:
   39ff4:	push	{r4, lr}
   39ff8:	mov	r1, #4
   39ffc:	mov	r4, r0
   3a000:	bl	38664 <flatcc_builder_default_alloc@@Base+0x23c>
   3a004:	cmp	r0, #0
   3a008:	bne	3a054 <flatcc_builder_start_offset_vector@@Base+0x60>
   3a00c:	ldr	r3, [r4, #32]
   3a010:	mov	r2, #4
   3a014:	mov	lr, #5
   3a018:	str	r0, [r3, #20]
   3a01c:	str	r2, [r3, #16]
   3a020:	ldr	ip, [r4, #28]
   3a024:	ldr	r2, [r4, #64]	; 0x40
   3a028:	ldr	r1, [r4, #60]	; 0x3c
   3a02c:	sub	r2, r2, ip
   3a030:	cmn	r2, #4
   3a034:	mvnhi	r2, #3
   3a038:	strh	lr, [r3, #14]
   3a03c:	add	r1, r1, ip
   3a040:	str	r2, [r4, #24]
   3a044:	mvn	r2, #3
   3a048:	str	r1, [r4, #16]
   3a04c:	str	r2, [r3, #4]
   3a050:	pop	{r4, pc}
   3a054:	mvn	r0, #0
   3a058:	pop	{r4, pc}

0003a05c <flatcc_builder_start_string@@Base>:
   3a05c:	push	{r4, lr}
   3a060:	mov	r1, #1
   3a064:	mov	r4, r0
   3a068:	bl	38664 <flatcc_builder_default_alloc@@Base+0x23c>
   3a06c:	cmp	r0, #0
   3a070:	bne	3a0bc <flatcc_builder_start_string@@Base+0x60>
   3a074:	ldr	r3, [r4, #32]
   3a078:	mov	r2, #1
   3a07c:	mov	lr, #6
   3a080:	str	r0, [r3, #20]
   3a084:	str	r2, [r3, #16]
   3a088:	ldr	ip, [r4, #28]
   3a08c:	ldr	r2, [r4, #64]	; 0x40
   3a090:	ldr	r1, [r4, #60]	; 0x3c
   3a094:	sub	r2, r2, ip
   3a098:	cmn	r2, #4
   3a09c:	mvnhi	r2, #3
   3a0a0:	strh	lr, [r3, #14]
   3a0a4:	add	r1, r1, ip
   3a0a8:	str	r2, [r4, #24]
   3a0ac:	mvn	r2, #3
   3a0b0:	str	r1, [r4, #16]
   3a0b4:	str	r2, [r3, #4]
   3a0b8:	pop	{r4, pc}
   3a0bc:	mvn	r0, #0
   3a0c0:	pop	{r4, pc}

0003a0c4 <flatcc_builder_reserve_table@@Base>:
   3a0c4:	cmp	r1, #0
   3a0c8:	push	{r4, r5, r6, r7, lr}
   3a0cc:	sub	sp, sp, #12
   3a0d0:	blt	3a1a8 <flatcc_builder_reserve_table@@Base+0xe4>
   3a0d4:	ldr	r2, [r0, #32]
   3a0d8:	add	r1, r1, #2
   3a0dc:	mov	r5, r0
   3a0e0:	ldrh	r6, [r2, #28]
   3a0e4:	ldr	r3, [r2, #16]
   3a0e8:	ldr	r0, [r0, #56]	; 0x38
   3a0ec:	lsl	r4, r1, #1
   3a0f0:	add	r6, r3, r6, lsl #1
   3a0f4:	add	r2, r6, r4
   3a0f8:	cmp	r2, r0
   3a0fc:	bhi	3a158 <flatcc_builder_reserve_table@@Base+0x94>
   3a100:	ldr	r3, [r5, #52]	; 0x34
   3a104:	adds	r3, r3, r6
   3a108:	streq	r3, [r5, #4]
   3a10c:	mvneq	r0, #0
   3a110:	beq	3a150 <flatcc_builder_reserve_table@@Base+0x8c>
   3a114:	ldr	r2, [r5, #32]
   3a118:	add	r3, r3, #4
   3a11c:	str	r3, [r5, #4]
   3a120:	ldr	r6, [r2, #20]
   3a124:	ldr	r3, [r5, #80]	; 0x50
   3a128:	add	r2, r4, r6
   3a12c:	sub	r2, r2, #3
   3a130:	cmp	r2, r3
   3a134:	bhi	3a180 <flatcc_builder_reserve_table@@Base+0xbc>
   3a138:	ldr	r3, [r5, #76]	; 0x4c
   3a13c:	add	r3, r3, r6
   3a140:	cmp	r3, #0
   3a144:	movne	r0, #0
   3a148:	mvneq	r0, #0
   3a14c:	str	r3, [r5]
   3a150:	add	sp, sp, #12
   3a154:	pop	{r4, r5, r6, r7, pc}
   3a158:	mov	r3, #0
   3a15c:	ldr	r0, [r5, #40]	; 0x28
   3a160:	add	r1, r5, #52	; 0x34
   3a164:	str	r3, [sp]
   3a168:	mov	r3, #1
   3a16c:	ldr	r7, [r5, #48]	; 0x30
   3a170:	blx	r7
   3a174:	cmp	r0, #0
   3a178:	beq	3a100 <flatcc_builder_reserve_table@@Base+0x3c>
   3a17c:	bl	14230 <__assert_fail@plt+0xf0>
   3a180:	mov	r3, #3
   3a184:	ldr	r0, [r5, #40]	; 0x28
   3a188:	add	r1, r5, #76	; 0x4c
   3a18c:	str	r3, [sp]
   3a190:	mov	r3, #0
   3a194:	ldr	r4, [r5, #48]	; 0x30
   3a198:	blx	r4
   3a19c:	cmp	r0, #0
   3a1a0:	beq	3a138 <flatcc_builder_reserve_table@@Base+0x74>
   3a1a4:	b	3a17c <flatcc_builder_reserve_table@@Base+0xb8>
   3a1a8:	ldr	r3, [pc, #28]	; 3a1cc <flatcc_builder_reserve_table@@Base+0x108>
   3a1ac:	ldr	r1, [pc, #28]	; 3a1d0 <flatcc_builder_reserve_table@@Base+0x10c>
   3a1b0:	ldr	r0, [pc, #28]	; 3a1d4 <flatcc_builder_reserve_table@@Base+0x110>
   3a1b4:	add	r3, pc, r3
   3a1b8:	ldr	r2, [pc, #24]	; 3a1d8 <flatcc_builder_reserve_table@@Base+0x114>
   3a1bc:	add	r3, r3, #624	; 0x270
   3a1c0:	add	r1, pc, r1
   3a1c4:	add	r0, pc, r0
   3a1c8:	bl	14140 <__assert_fail@plt>
   3a1cc:	andeq	r0, r2, r8, lsr #2
   3a1d0:	andeq	r0, r2, ip, ror #16
   3a1d4:	andeq	r0, r2, r8, lsl #22
   3a1d8:	andeq	r0, r0, r9, lsr #8

0003a1dc <flatcc_builder_start_table@@Base>:
   3a1dc:	push	{r4, r5, r6, r7, r8, lr}
   3a1e0:	mov	r5, r1
   3a1e4:	sub	sp, sp, #8
   3a1e8:	mov	r1, #4
   3a1ec:	mov	r4, r0
   3a1f0:	bl	38664 <flatcc_builder_default_alloc@@Base+0x23c>
   3a1f4:	subs	r7, r0, #0
   3a1f8:	bne	3a330 <flatcc_builder_start_table@@Base+0x154>
   3a1fc:	ldr	r3, [r4, #52]	; 0x34
   3a200:	ldr	r6, [r4, #4]
   3a204:	ldr	r0, [r4, #32]
   3a208:	sub	r6, r6, r3
   3a20c:	add	r5, r5, #2
   3a210:	str	r6, [r0, #16]
   3a214:	ldr	r1, [r4, #76]	; 0x4c
   3a218:	ldr	r2, [r4]
   3a21c:	lsl	r5, r5, #1
   3a220:	sub	r2, r2, r1
   3a224:	str	r2, [r0, #20]
   3a228:	ldr	r2, [r4, #12]
   3a22c:	ldr	lr, [pc, #268]	; 3a340 <flatcc_builder_start_table@@Base+0x164>
   3a230:	str	r2, [r0, #24]
   3a234:	ldrh	r2, [r4, #8]
   3a238:	mov	r1, #3
   3a23c:	strh	r2, [r0, #28]
   3a240:	add	r6, r6, r2, lsl #1
   3a244:	ldr	ip, [r4, #56]	; 0x38
   3a248:	add	r2, r6, r5
   3a24c:	cmp	r2, ip
   3a250:	strh	r7, [r4, #8]
   3a254:	str	lr, [r4, #12]
   3a258:	strh	r1, [r0, #14]
   3a25c:	bhi	3a2e0 <flatcc_builder_start_table@@Base+0x104>
   3a260:	adds	r6, r3, r6
   3a264:	streq	r6, [r4, #4]
   3a268:	beq	3a330 <flatcc_builder_start_table@@Base+0x154>
   3a26c:	ldr	r3, [r4, #32]
   3a270:	add	r6, r6, #4
   3a274:	str	r6, [r4, #4]
   3a278:	ldr	r6, [r3, #20]
   3a27c:	sub	r2, r5, #3
   3a280:	ldr	r3, [r4, #80]	; 0x50
   3a284:	add	r2, r2, r6
   3a288:	cmp	r2, r3
   3a28c:	bhi	3a308 <flatcc_builder_start_table@@Base+0x12c>
   3a290:	ldr	r3, [r4, #76]	; 0x4c
   3a294:	add	r3, r3, r6
   3a298:	cmp	r3, #0
   3a29c:	str	r3, [r4]
   3a2a0:	beq	3a330 <flatcc_builder_start_table@@Base+0x154>
   3a2a4:	ldr	r0, [r4, #28]
   3a2a8:	ldr	r3, [r4, #64]	; 0x40
   3a2ac:	ldr	r2, [pc, #144]	; 3a344 <flatcc_builder_start_table@@Base+0x168>
   3a2b0:	sub	r3, r3, r0
   3a2b4:	ldr	r1, [r4, #60]	; 0x3c
   3a2b8:	ldr	ip, [r4, #32]
   3a2bc:	cmp	r3, r2
   3a2c0:	add	r1, r1, r0
   3a2c4:	movcs	r3, r2
   3a2c8:	str	r1, [r4, #16]
   3a2cc:	str	r3, [r4, #24]
   3a2d0:	mov	r0, r7
   3a2d4:	str	r2, [ip, #4]
   3a2d8:	add	sp, sp, #8
   3a2dc:	pop	{r4, r5, r6, r7, r8, pc}
   3a2e0:	ldr	r0, [r4, #40]	; 0x28
   3a2e4:	mov	r3, #1
   3a2e8:	str	r7, [sp]
   3a2ec:	add	r1, r4, #52	; 0x34
   3a2f0:	ldr	r8, [r4, #48]	; 0x30
   3a2f4:	blx	r8
   3a2f8:	cmp	r0, #0
   3a2fc:	bne	3a32c <flatcc_builder_start_table@@Base+0x150>
   3a300:	ldr	r3, [r4, #52]	; 0x34
   3a304:	b	3a260 <flatcc_builder_start_table@@Base+0x84>
   3a308:	mov	r3, #3
   3a30c:	ldr	r0, [r4, #40]	; 0x28
   3a310:	add	r1, r4, #76	; 0x4c
   3a314:	str	r3, [sp]
   3a318:	mov	r3, #0
   3a31c:	ldr	r5, [r4, #48]	; 0x30
   3a320:	blx	r5
   3a324:	cmp	r0, #0
   3a328:	beq	3a290 <flatcc_builder_start_table@@Base+0xb4>
   3a32c:	bl	14230 <__assert_fail@plt+0xf0>
   3a330:	mvn	r7, #0
   3a334:	mov	r0, r7
   3a338:	add	sp, sp, #8
   3a33c:	pop	{r4, r5, r6, r7, r8, pc}
   3a340:	svccs	0x00693b52
   3a344:	strdeq	pc, [r0], -ip

0003a348 <flatcc_builder_create_vtable@@Base>:
   3a348:	push	{r4, r5, r6, lr}
   3a34c:	sub	sp, sp, #80	; 0x50
   3a350:	subs	r3, r2, #0
   3a354:	mov	r2, #0
   3a358:	mov	r4, r0
   3a35c:	str	r2, [sp, #8]
   3a360:	str	r2, [sp, #12]
   3a364:	beq	3a3dc <flatcc_builder_create_vtable@@Base+0x94>
   3a368:	ldr	r0, [r0, #152]	; 0x98
   3a36c:	mov	r2, #1
   3a370:	cmp	r0, #0
   3a374:	str	r1, [sp, #16]
   3a378:	str	r3, [sp, #8]
   3a37c:	str	r3, [sp, #20]
   3a380:	str	r2, [sp, #12]
   3a384:	mov	r1, r3
   3a388:	beq	3a3f8 <flatcc_builder_create_vtable@@Base+0xb0>
   3a38c:	ldr	r2, [r4, #136]	; 0x88
   3a390:	sub	r5, r2, r3
   3a394:	cmp	r2, r5
   3a398:	ble	3a3f4 <flatcc_builder_create_vtable@@Base+0xac>
   3a39c:	ldr	r0, [r4, #36]	; 0x24
   3a3a0:	ldr	r2, [sp, #12]
   3a3a4:	str	r3, [sp]
   3a3a8:	add	r1, sp, #16
   3a3ac:	ldr	r6, [r4, #44]	; 0x2c
   3a3b0:	mov	r3, r5
   3a3b4:	blx	r6
   3a3b8:	cmp	r0, #0
   3a3bc:	bne	3a46c <flatcc_builder_create_vtable@@Base+0x124>
   3a3c0:	cmp	r5, #0
   3a3c4:	str	r5, [r4, #136]	; 0x88
   3a3c8:	beq	3a3d0 <flatcc_builder_create_vtable@@Base+0x88>
   3a3cc:	add	r5, r5, #1
   3a3d0:	mov	r0, r5
   3a3d4:	add	sp, sp, #80	; 0x50
   3a3d8:	pop	{r4, r5, r6, pc}
   3a3dc:	ldr	r3, [r0, #152]	; 0x98
   3a3e0:	cmp	r3, #0
   3a3e4:	bne	3a3f4 <flatcc_builder_create_vtable@@Base+0xac>
   3a3e8:	ldr	r3, [r0, #180]	; 0xb4
   3a3ec:	cmp	r3, #0
   3a3f0:	beq	3a460 <flatcc_builder_create_vtable@@Base+0x118>
   3a3f4:	bl	14298 <__assert_fail@plt+0x158>
   3a3f8:	ldr	r2, [r4, #180]	; 0xb4
   3a3fc:	cmp	r2, #0
   3a400:	bne	3a38c <flatcc_builder_create_vtable@@Base+0x44>
   3a404:	ldr	r5, [r4, #140]	; 0x8c
   3a408:	add	r3, r5, r3
   3a40c:	cmp	r5, r3
   3a410:	str	r3, [r4, #140]	; 0x8c
   3a414:	bgt	3a490 <flatcc_builder_create_vtable@@Base+0x148>
   3a418:	ldr	r0, [r4, #36]	; 0x24
   3a41c:	ldr	r2, [sp, #12]
   3a420:	str	r1, [sp]
   3a424:	mov	r3, r5
   3a428:	ldr	r4, [r4, #44]	; 0x2c
   3a42c:	add	r1, sp, #16
   3a430:	blx	r4
   3a434:	cmp	r0, #0
   3a438:	beq	3a3cc <flatcc_builder_create_vtable@@Base+0x84>
   3a43c:	ldr	r3, [pc, #80]	; 3a494 <flatcc_builder_create_vtable@@Base+0x14c>
   3a440:	ldr	r1, [pc, #80]	; 3a498 <flatcc_builder_create_vtable@@Base+0x150>
   3a444:	ldr	r0, [pc, #80]	; 3a49c <flatcc_builder_create_vtable@@Base+0x154>
   3a448:	add	r3, pc, r3
   3a44c:	ldr	r2, [pc, #76]	; 3a4a0 <flatcc_builder_create_vtable@@Base+0x158>
   3a450:	add	r3, r3, #16
   3a454:	add	r1, pc, r1
   3a458:	add	r0, pc, r0
   3a45c:	bl	14140 <__assert_fail@plt>
   3a460:	ldr	r5, [r4, #140]	; 0x8c
   3a464:	mov	r1, r3
   3a468:	b	3a418 <flatcc_builder_create_vtable@@Base+0xd0>
   3a46c:	ldr	r3, [pc, #48]	; 3a4a4 <flatcc_builder_create_vtable@@Base+0x15c>
   3a470:	ldr	r1, [pc, #48]	; 3a4a8 <flatcc_builder_create_vtable@@Base+0x160>
   3a474:	ldr	r0, [pc, #48]	; 3a4ac <flatcc_builder_create_vtable@@Base+0x164>
   3a478:	add	r3, pc, r3
   3a47c:	ldr	r2, [pc, #44]	; 3a4b0 <flatcc_builder_create_vtable@@Base+0x168>
   3a480:	add	r3, r3, #28
   3a484:	add	r1, pc, r1
   3a488:	add	r0, pc, r0
   3a48c:	bl	14140 <__assert_fail@plt>
   3a490:	bl	14260 <__assert_fail@plt+0x120>
   3a494:	muleq	r1, r4, lr
   3a498:	ldrdeq	r0, [r2], -r8
   3a49c:	andeq	lr, r0, r4, ror #28
   3a4a0:	andeq	r0, r0, r5, lsr #5
   3a4a4:	andeq	pc, r1, r4, ror #28
   3a4a8:	andeq	r0, r2, r8, lsr #11
   3a4ac:	andeq	lr, r0, r4, lsr lr
   3a4b0:	andeq	r0, r0, fp, lsl #5

0003a4b4 <flatcc_builder_create_cached_vtable@@Base>:
   3a4b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a4b8:	sub	sp, sp, #28
   3a4bc:	ldr	r4, [r0, #116]	; 0x74
   3a4c0:	mov	sl, r3
   3a4c4:	cmp	r4, #0
   3a4c8:	mov	r8, r0
   3a4cc:	str	r1, [sp, #8]
   3a4d0:	mov	r7, r2
   3a4d4:	rsbne	r3, r4, #32
   3a4d8:	beq	3a630 <flatcc_builder_create_cached_vtable@@Base+0x17c>
   3a4dc:	lsr	sl, sl, r3
   3a4e0:	ldr	r3, [r8, #92]	; 0x5c
   3a4e4:	adds	r2, r3, sl, lsl #2
   3a4e8:	str	r3, [sp, #16]
   3a4ec:	str	r2, [sp, #20]
   3a4f0:	beq	3a624 <flatcc_builder_create_cached_vtable@@Base+0x170>
   3a4f4:	ldr	r5, [r3, sl, lsl #2]
   3a4f8:	cmp	r5, #0
   3a4fc:	beq	3a720 <flatcc_builder_create_cached_vtable@@Base+0x26c>
   3a500:	mov	r3, #0
   3a504:	ldr	fp, [r8, #100]	; 0x64
   3a508:	ldr	r6, [r8, #68]	; 0x44
   3a50c:	mov	r9, r2
   3a510:	str	r3, [sp, #12]
   3a514:	b	3a528 <flatcc_builder_create_cached_vtable@@Base+0x74>
   3a518:	ldr	r5, [r4, #12]
   3a51c:	add	r9, r4, #12
   3a520:	cmp	r5, #0
   3a524:	beq	3a578 <flatcc_builder_create_cached_vtable@@Base+0xc4>
   3a528:	add	r4, fp, r5
   3a52c:	ldr	r2, [r4, #8]
   3a530:	add	r1, r6, r2
   3a534:	ldrh	r2, [r6, r2]
   3a538:	cmp	r2, r7
   3a53c:	bne	3a518 <flatcc_builder_create_cached_vtable@@Base+0x64>
   3a540:	mov	r2, r7
   3a544:	ldr	r0, [sp, #8]
   3a548:	bl	13ff0 <memcmp@plt>
   3a54c:	cmp	r0, #0
   3a550:	bne	3a518 <flatcc_builder_create_cached_vtable@@Base+0x64>
   3a554:	ldr	r1, [r4, #4]
   3a558:	ldr	r2, [r8, #152]	; 0x98
   3a55c:	cmp	r1, r2
   3a560:	beq	3a5f4 <flatcc_builder_create_cached_vtable@@Base+0x140>
   3a564:	ldr	r5, [r4, #12]
   3a568:	add	r9, r4, #12
   3a56c:	cmp	r5, #0
   3a570:	str	r4, [sp, #12]
   3a574:	bne	3a528 <flatcc_builder_create_cached_vtable@@Base+0x74>
   3a578:	ldr	r4, [r8, #124]	; 0x7c
   3a57c:	ldr	r3, [r8, #104]	; 0x68
   3a580:	add	r2, r4, #16
   3a584:	cmp	r2, r3
   3a588:	bhi	3a6f8 <flatcc_builder_create_cached_vtable@@Base+0x244>
   3a58c:	ldr	r5, [r8, #100]	; 0x64
   3a590:	adds	r6, r5, r4
   3a594:	beq	3a624 <flatcc_builder_create_cached_vtable@@Base+0x170>
   3a598:	ldr	r3, [r8, #124]	; 0x7c
   3a59c:	ldr	r0, [sp, #16]
   3a5a0:	ldr	r2, [r8, #152]	; 0x98
   3a5a4:	add	r1, r3, #16
   3a5a8:	str	r1, [r8, #124]	; 0x7c
   3a5ac:	str	r2, [r6, #4]
   3a5b0:	ldr	r1, [r0, sl, lsl #2]
   3a5b4:	mov	r2, r7
   3a5b8:	str	r1, [r6, #12]
   3a5bc:	str	r3, [r0, sl, lsl #2]
   3a5c0:	ldr	r1, [sp, #8]
   3a5c4:	mov	r0, r8
   3a5c8:	bl	3a348 <flatcc_builder_create_vtable@@Base>
   3a5cc:	cmp	r0, #0
   3a5d0:	str	r0, [r5, r4]
   3a5d4:	beq	3a624 <flatcc_builder_create_cached_vtable@@Base+0x170>
   3a5d8:	ldr	r3, [sp, #12]
   3a5dc:	cmp	r3, #0
   3a5e0:	beq	3a728 <flatcc_builder_create_cached_vtable@@Base+0x274>
   3a5e4:	ldr	r3, [r3, #8]
   3a5e8:	str	r3, [r6, #8]
   3a5ec:	add	sp, sp, #28
   3a5f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a5f4:	ldr	r3, [sp, #20]
   3a5f8:	cmp	r3, r9
   3a5fc:	beq	3a618 <flatcc_builder_create_cached_vtable@@Base+0x164>
   3a600:	ldr	r2, [sp, #16]
   3a604:	ldr	r3, [r4, #12]
   3a608:	str	r3, [r9]
   3a60c:	ldr	r3, [r2, sl, lsl #2]
   3a610:	str	r3, [r4, #12]
   3a614:	str	r5, [r2, sl, lsl #2]
   3a618:	ldr	r0, [r4]
   3a61c:	add	sp, sp, #28
   3a620:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a624:	mov	r0, #0
   3a628:	add	sp, sp, #28
   3a62c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a630:	ldr	r3, [r0, #124]	; 0x7c
   3a634:	add	r5, r0, #92	; 0x5c
   3a638:	cmp	r3, #0
   3a63c:	bne	3a7c0 <flatcc_builder_create_cached_vtable@@Base+0x30c>
   3a640:	ldr	r3, [r0, #104]	; 0x68
   3a644:	cmp	r3, #15
   3a648:	bls	3a6cc <flatcc_builder_create_cached_vtable@@Base+0x218>
   3a64c:	ldr	r3, [r8, #100]	; 0x64
   3a650:	cmp	r3, #0
   3a654:	beq	3a624 <flatcc_builder_create_cached_vtable@@Base+0x170>
   3a658:	mov	r2, #16
   3a65c:	mov	r3, #5
   3a660:	str	r2, [r8, #124]	; 0x7c
   3a664:	ldr	r0, [r8, #40]	; 0x28
   3a668:	mov	r1, r5
   3a66c:	str	r3, [sp]
   3a670:	mov	r2, #256	; 0x100
   3a674:	ldr	r5, [r8, #48]	; 0x30
   3a678:	mov	r3, #1
   3a67c:	blx	r5
   3a680:	cmp	r0, #0
   3a684:	bne	3a624 <flatcc_builder_create_cached_vtable@@Base+0x170>
   3a688:	ldr	r1, [r8, #96]	; 0x60
   3a68c:	mov	r3, #256	; 0x100
   3a690:	b	3a698 <flatcc_builder_create_cached_vtable@@Base+0x1e4>
   3a694:	mov	r3, r2
   3a698:	lsl	r2, r3, #1
   3a69c:	cmp	r2, r1
   3a6a0:	bls	3a694 <flatcc_builder_create_cached_vtable@@Base+0x1e0>
   3a6a4:	lsr	r3, r3, #2
   3a6a8:	cmp	r3, #1
   3a6ac:	bls	3a780 <flatcc_builder_create_cached_vtable@@Base+0x2cc>
   3a6b0:	mov	r2, #1
   3a6b4:	add	r4, r4, #1
   3a6b8:	cmp	r3, r2, lsl r4
   3a6bc:	bhi	3a6b4 <flatcc_builder_create_cached_vtable@@Base+0x200>
   3a6c0:	rsb	r3, r4, #32
   3a6c4:	str	r4, [r8, #116]	; 0x74
   3a6c8:	b	3a4dc <flatcc_builder_create_cached_vtable@@Base+0x28>
   3a6cc:	mov	r3, #6
   3a6d0:	ldr	r0, [r0, #40]	; 0x28
   3a6d4:	mov	r2, #16
   3a6d8:	str	r3, [sp]
   3a6dc:	add	r1, r8, #100	; 0x64
   3a6e0:	ldr	r6, [r8, #48]	; 0x30
   3a6e4:	mov	r3, r4
   3a6e8:	blx	r6
   3a6ec:	cmp	r0, #0
   3a6f0:	beq	3a64c <flatcc_builder_create_cached_vtable@@Base+0x198>
   3a6f4:	b	3a7ac <flatcc_builder_create_cached_vtable@@Base+0x2f8>
   3a6f8:	mov	r3, #6
   3a6fc:	ldr	r0, [r8, #40]	; 0x28
   3a700:	add	r1, r8, #100	; 0x64
   3a704:	str	r3, [sp]
   3a708:	mov	r3, #0
   3a70c:	ldr	r5, [r8, #48]	; 0x30
   3a710:	blx	r5
   3a714:	cmp	r0, #0
   3a718:	beq	3a58c <flatcc_builder_create_cached_vtable@@Base+0xd8>
   3a71c:	b	3a7ac <flatcc_builder_create_cached_vtable@@Base+0x2f8>
   3a720:	str	r5, [sp, #12]
   3a724:	b	3a578 <flatcc_builder_create_cached_vtable@@Base+0xc4>
   3a728:	ldr	r3, [r8, #172]	; 0xac
   3a72c:	ldr	r9, [r8, #120]	; 0x78
   3a730:	cmp	r3, #0
   3a734:	add	r2, r9, r7
   3a738:	beq	3a744 <flatcc_builder_create_cached_vtable@@Base+0x290>
   3a73c:	cmp	r3, r2
   3a740:	bcc	3a7b0 <flatcc_builder_create_cached_vtable@@Base+0x2fc>
   3a744:	ldr	r3, [r8, #72]	; 0x48
   3a748:	cmp	r3, r2
   3a74c:	bcc	3a788 <flatcc_builder_create_cached_vtable@@Base+0x2d4>
   3a750:	ldr	r3, [r8, #68]	; 0x44
   3a754:	adds	r0, r3, r9
   3a758:	beq	3a7e4 <flatcc_builder_create_cached_vtable@@Base+0x330>
   3a75c:	ldr	r3, [r8, #120]	; 0x78
   3a760:	ldr	r1, [sp, #8]
   3a764:	add	ip, r3, r7
   3a768:	str	r3, [r6, #8]
   3a76c:	mov	r2, r7
   3a770:	str	ip, [r8, #120]	; 0x78
   3a774:	bl	13fd8 <memcpy@plt>
   3a778:	ldr	r0, [r5, r4]
   3a77c:	b	3a5ec <flatcc_builder_create_cached_vtable@@Base+0x138>
   3a780:	mov	r3, #32
   3a784:	b	3a6c4 <flatcc_builder_create_cached_vtable@@Base+0x210>
   3a788:	mov	r3, #2
   3a78c:	ldr	r0, [r8, #40]	; 0x28
   3a790:	add	r1, r8, #68	; 0x44
   3a794:	str	r3, [sp]
   3a798:	mov	r3, #0
   3a79c:	ldr	sl, [r8, #48]	; 0x30
   3a7a0:	blx	sl
   3a7a4:	cmp	r0, #0
   3a7a8:	beq	3a750 <flatcc_builder_create_cached_vtable@@Base+0x29c>
   3a7ac:	bl	14230 <__assert_fail@plt+0xf0>
   3a7b0:	mov	r0, r8
   3a7b4:	bl	389a8 <flatcc_builder_flush_vtable_cache@@Base>
   3a7b8:	ldr	r0, [r5, r4]
   3a7bc:	b	3a5ec <flatcc_builder_create_cached_vtable@@Base+0x138>
   3a7c0:	ldr	r3, [pc, #36]	; 3a7ec <flatcc_builder_create_cached_vtable@@Base+0x338>
   3a7c4:	ldr	r1, [pc, #36]	; 3a7f0 <flatcc_builder_create_cached_vtable@@Base+0x33c>
   3a7c8:	ldr	r0, [pc, #36]	; 3a7f4 <flatcc_builder_create_cached_vtable@@Base+0x340>
   3a7cc:	add	r3, pc, r3
   3a7d0:	ldr	r2, [pc, #32]	; 3a7f8 <flatcc_builder_create_cached_vtable@@Base+0x344>
   3a7d4:	add	r3, r3, #656	; 0x290
   3a7d8:	add	r1, pc, r1
   3a7dc:	add	r0, pc, r0
   3a7e0:	bl	14140 <__assert_fail@plt>
   3a7e4:	mvn	r0, #0
   3a7e8:	b	3a5ec <flatcc_builder_create_cached_vtable@@Base+0x138>
   3a7ec:	andeq	pc, r1, r0, lsl fp	; <UNPREDICTABLE>
   3a7f0:	andeq	r0, r2, r4, asr r2
   3a7f4:	strdeq	r0, [r2], -ip
   3a7f8:	andeq	r0, r0, r6, asr r1

0003a7fc <flatcc_builder_create_table@@Base>:
   3a7fc:	push	{r4, r5, r6, r7, r8, lr}
   3a800:	sub	sp, sp, #88	; 0x58
   3a804:	ldr	r8, [pc, #436]	; 3a9c0 <flatcc_builder_create_table@@Base+0x1c4>
   3a808:	ldr	r4, [sp, #116]	; 0x74
   3a80c:	add	r8, pc, r8
   3a810:	cmp	r4, #0
   3a814:	ldr	lr, [sp, #120]	; 0x78
   3a818:	blt	3a950 <flatcc_builder_create_table@@Base+0x154>
   3a81c:	tst	lr, #1
   3a820:	beq	3a99c <flatcc_builder_create_table@@Base+0x1a0>
   3a824:	mov	r5, r0
   3a828:	ldrh	r0, [r0, #128]	; 0x80
   3a82c:	cmp	r3, #4
   3a830:	movcc	r3, #4
   3a834:	ldr	ip, [r5, #136]	; 0x88
   3a838:	cmp	r0, r3
   3a83c:	mvn	r0, #3
   3a840:	strhcc	r3, [r5, #128]	; 0x80
   3a844:	sub	r7, ip, r2
   3a848:	sub	r3, r3, #1
   3a84c:	sub	r0, r0, r2
   3a850:	and	r7, r7, r3
   3a854:	add	r0, r0, ip
   3a858:	sub	r3, lr, #1
   3a85c:	sub	r0, r0, r7
   3a860:	sub	r3, r0, r3
   3a864:	cmp	r4, #0
   3a868:	str	r3, [sp, #12]
   3a86c:	beq	3a8a0 <flatcc_builder_create_table@@Base+0xa4>
   3a870:	ldr	ip, [sp, #112]	; 0x70
   3a874:	mvn	r6, #3
   3a878:	add	r4, ip, r4, lsl #1
   3a87c:	sub	r6, r6, r0
   3a880:	ldrh	r3, [ip], #2
   3a884:	sub	lr, r6, r3
   3a888:	ldr	r0, [r1, r3]
   3a88c:	cmp	r4, ip
   3a890:	add	r0, r0, lr
   3a894:	str	r0, [r1, r3]
   3a898:	bne	3a880 <flatcc_builder_create_table@@Base+0x84>
   3a89c:	ldr	ip, [r5, #136]	; 0x88
   3a8a0:	mov	r3, #4
   3a8a4:	mov	lr, #1
   3a8a8:	add	r0, sp, #12
   3a8ac:	cmp	r2, #0
   3a8b0:	str	r3, [sp, #16]
   3a8b4:	str	r3, [sp, #28]
   3a8b8:	str	r0, [sp, #24]
   3a8bc:	str	lr, [sp, #20]
   3a8c0:	beq	3a8dc <flatcc_builder_create_table@@Base+0xe0>
   3a8c4:	add	r3, r2, r3
   3a8c8:	mov	r0, #2
   3a8cc:	str	r1, [sp, #32]
   3a8d0:	str	r2, [sp, #36]	; 0x24
   3a8d4:	str	r3, [sp, #16]
   3a8d8:	str	r0, [sp, #20]
   3a8dc:	cmp	r7, #0
   3a8e0:	beq	3a910 <flatcc_builder_create_table@@Base+0x114>
   3a8e4:	ldr	r2, [sp, #20]
   3a8e8:	ldr	r1, [pc, #212]	; 3a9c4 <flatcc_builder_create_table@@Base+0x1c8>
   3a8ec:	add	r2, r2, #1
   3a8f0:	add	r3, r3, r7
   3a8f4:	str	r3, [sp, #16]
   3a8f8:	ldr	r0, [r8, r1]
   3a8fc:	add	r1, sp, #88	; 0x58
   3a900:	add	r1, r1, r2, lsl #3
   3a904:	str	r2, [sp, #20]
   3a908:	str	r0, [r1, #-72]	; 0xffffffb8
   3a90c:	str	r7, [r1, #-68]	; 0xffffffbc
   3a910:	sub	r4, ip, r3
   3a914:	cmp	r4, ip
   3a918:	bge	3a998 <flatcc_builder_create_table@@Base+0x19c>
   3a91c:	ldr	r0, [r5, #36]	; 0x24
   3a920:	ldr	r2, [sp, #20]
   3a924:	str	r3, [sp]
   3a928:	add	r1, sp, #24
   3a92c:	ldr	r6, [r5, #44]	; 0x2c
   3a930:	mov	r3, r4
   3a934:	blx	r6
   3a938:	cmp	r0, #0
   3a93c:	bne	3a974 <flatcc_builder_create_table@@Base+0x178>
   3a940:	mov	r0, r4
   3a944:	str	r4, [r5, #136]	; 0x88
   3a948:	add	sp, sp, #88	; 0x58
   3a94c:	pop	{r4, r5, r6, r7, r8, pc}
   3a950:	ldr	r3, [pc, #112]	; 3a9c8 <flatcc_builder_create_table@@Base+0x1cc>
   3a954:	ldr	r1, [pc, #112]	; 3a9cc <flatcc_builder_create_table@@Base+0x1d0>
   3a958:	ldr	r0, [pc, #112]	; 3a9d0 <flatcc_builder_create_table@@Base+0x1d4>
   3a95c:	add	r3, pc, r3
   3a960:	ldr	r2, [pc, #108]	; 3a9d4 <flatcc_builder_create_table@@Base+0x1d8>
   3a964:	add	r3, r3, #668	; 0x29c
   3a968:	add	r1, pc, r1
   3a96c:	add	r0, pc, r0
   3a970:	bl	14140 <__assert_fail@plt>
   3a974:	ldr	r3, [pc, #92]	; 3a9d8 <flatcc_builder_create_table@@Base+0x1dc>
   3a978:	ldr	r1, [pc, #92]	; 3a9dc <flatcc_builder_create_table@@Base+0x1e0>
   3a97c:	ldr	r0, [pc, #92]	; 3a9e0 <flatcc_builder_create_table@@Base+0x1e4>
   3a980:	add	r3, pc, r3
   3a984:	ldr	r2, [pc, #88]	; 3a9e4 <flatcc_builder_create_table@@Base+0x1e8>
   3a988:	add	r3, r3, #28
   3a98c:	add	r1, pc, r1
   3a990:	add	r0, pc, r0
   3a994:	bl	14140 <__assert_fail@plt>
   3a998:	bl	14298 <__assert_fail@plt+0x158>
   3a99c:	ldr	r3, [pc, #68]	; 3a9e8 <flatcc_builder_create_table@@Base+0x1ec>
   3a9a0:	ldr	r1, [pc, #68]	; 3a9ec <flatcc_builder_create_table@@Base+0x1f0>
   3a9a4:	ldr	r0, [pc, #68]	; 3a9f0 <flatcc_builder_create_table@@Base+0x1f4>
   3a9a8:	add	r3, pc, r3
   3a9ac:	ldr	r2, [pc, #64]	; 3a9f4 <flatcc_builder_create_table@@Base+0x1f8>
   3a9b0:	add	r3, r3, #668	; 0x29c
   3a9b4:	add	r1, pc, r1
   3a9b8:	add	r0, pc, r0
   3a9bc:	bl	14140 <__assert_fail@plt>
   3a9c0:	andeq	r0, r3, ip, ror #15
   3a9c4:	muleq	r0, ip, r0
   3a9c8:	andeq	pc, r1, r0, lsl #19
   3a9cc:	andeq	r0, r2, r4, asr #1
   3a9d0:	andeq	r0, r2, ip, ror r3
   3a9d4:	ldrdeq	r0, [r0], -r5
   3a9d8:	andeq	pc, r1, ip, asr r9	; <UNPREDICTABLE>
   3a9dc:	andeq	r0, r2, r0, lsr #1
   3a9e0:	andeq	lr, r0, ip, lsr #18
   3a9e4:	andeq	r0, r0, fp, lsl #5
   3a9e8:	andeq	pc, r1, r4, lsr r9	; <UNPREDICTABLE>
   3a9ec:	andeq	r0, r2, r8, ror r0
   3a9f0:	andeq	r0, r2, r4, asr #6
   3a9f4:	ldrdeq	r0, [r0], -fp

0003a9f8 <flatcc_builder_check_required_field@@Base>:
   3a9f8:	ldr	r3, [r0, #32]
   3a9fc:	ldrh	r3, [r3, #14]
   3aa00:	cmp	r3, #3
   3aa04:	bne	3aa30 <flatcc_builder_check_required_field@@Base+0x38>
   3aa08:	ldrh	r3, [r0, #8]
   3aa0c:	cmp	r3, r1
   3aa10:	movls	r0, #0
   3aa14:	bls	3aa2c <flatcc_builder_check_required_field@@Base+0x34>
   3aa18:	ldr	r3, [r0, #4]
   3aa1c:	lsl	r1, r1, #1
   3aa20:	ldrh	r0, [r3, r1]
   3aa24:	adds	r0, r0, #0
   3aa28:	movne	r0, #1
   3aa2c:	bx	lr
   3aa30:	ldr	r3, [pc, #32]	; 3aa58 <flatcc_builder_check_required_field@@Base+0x60>
   3aa34:	ldr	r1, [pc, #32]	; 3aa5c <flatcc_builder_check_required_field@@Base+0x64>
   3aa38:	ldr	r0, [pc, #32]	; 3aa60 <flatcc_builder_check_required_field@@Base+0x68>
   3aa3c:	add	r3, pc, r3
   3aa40:	push	{r4, lr}
   3aa44:	add	r3, r3, #696	; 0x2b8
   3aa48:	ldr	r2, [pc, #20]	; 3aa64 <flatcc_builder_check_required_field@@Base+0x6c>
   3aa4c:	add	r1, pc, r1
   3aa50:	add	r0, pc, r0
   3aa54:	bl	14140 <__assert_fail@plt>
   3aa58:	andeq	pc, r1, r0, lsr #17
   3aa5c:	andeq	pc, r1, r0, ror #31
   3aa60:			; <UNDEFINED> instruction: 0x000202b8
   3aa64:	strdeq	r0, [r0], -r8

0003aa68 <flatcc_builder_check_union_field@@Base>:
   3aa68:	ldr	r3, [r0, #32]
   3aa6c:	ldrh	r3, [r3, #14]
   3aa70:	cmp	r3, #3
   3aa74:	bne	3aaf0 <flatcc_builder_check_union_field@@Base+0x88>
   3aa78:	cmp	r1, #0
   3aa7c:	beq	3aac8 <flatcc_builder_check_union_field@@Base+0x60>
   3aa80:	ldrh	r3, [r0, #8]
   3aa84:	cmp	r3, r1
   3aa88:	bls	3aac8 <flatcc_builder_check_union_field@@Base+0x60>
   3aa8c:	sub	r1, r1, #-2147483647	; 0x80000001
   3aa90:	ldr	r3, [r0, #4]
   3aa94:	lsl	r1, r1, #1
   3aa98:	ldrh	r2, [r3, r1]
   3aa9c:	cmp	r2, #0
   3aaa0:	beq	3aadc <flatcc_builder_check_union_field@@Base+0x74>
   3aaa4:	ldr	r0, [r0, #16]
   3aaa8:	add	r1, r3, r1
   3aaac:	ldrb	r2, [r0, r2]
   3aab0:	ldrh	r1, [r1, #2]
   3aab4:	cmp	r2, #0
   3aab8:	bne	3aad0 <flatcc_builder_check_union_field@@Base+0x68>
   3aabc:	clz	r0, r1
   3aac0:	lsr	r0, r0, #5
   3aac4:	bx	lr
   3aac8:	mov	r0, #0
   3aacc:	bx	lr
   3aad0:	adds	r0, r1, #0
   3aad4:	movne	r0, #1
   3aad8:	b	3aacc <flatcc_builder_check_union_field@@Base+0x64>
   3aadc:	add	r1, r3, r1
   3aae0:	ldrh	r1, [r1, #2]
   3aae4:	clz	r0, r1
   3aae8:	lsr	r0, r0, #5
   3aaec:	bx	lr
   3aaf0:	ldr	r3, [pc, #32]	; 3ab18 <flatcc_builder_check_union_field@@Base+0xb0>
   3aaf4:	ldr	r1, [pc, #32]	; 3ab1c <flatcc_builder_check_union_field@@Base+0xb4>
   3aaf8:	ldr	r0, [pc, #32]	; 3ab20 <flatcc_builder_check_union_field@@Base+0xb8>
   3aafc:	add	r3, pc, r3
   3ab00:	push	{r4, lr}
   3ab04:	add	r3, r3, #732	; 0x2dc
   3ab08:	ldr	r2, [pc, #20]	; 3ab24 <flatcc_builder_check_union_field@@Base+0xbc>
   3ab0c:	add	r1, pc, r1
   3ab10:	add	r0, pc, r0
   3ab14:	bl	14140 <__assert_fail@plt>
   3ab18:	andeq	pc, r1, r0, ror #15
   3ab1c:	andeq	pc, r1, r0, lsr #30
   3ab20:	strdeq	r0, [r2], -r8
   3ab24:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

0003ab28 <flatcc_builder_check_required@@Base>:
   3ab28:	ldr	r3, [r0, #32]
   3ab2c:	ldrh	r3, [r3, #14]
   3ab30:	cmp	r3, #3
   3ab34:	bne	3ab98 <flatcc_builder_check_required@@Base+0x70>
   3ab38:	ldrh	r3, [r0, #8]
   3ab3c:	cmp	r3, r2
   3ab40:	movlt	r0, #0
   3ab44:	blt	3ab94 <flatcc_builder_check_required@@Base+0x6c>
   3ab48:	cmp	r2, #0
   3ab4c:	ble	3ab90 <flatcc_builder_check_required@@Base+0x68>
   3ab50:	ldrh	r3, [r1]
   3ab54:	ldr	ip, [r0, #4]
   3ab58:	lsl	r3, r3, #1
   3ab5c:	ldrh	r0, [ip, r3]
   3ab60:	cmp	r0, #0
   3ab64:	beq	3ab94 <flatcc_builder_check_required@@Base+0x6c>
   3ab68:	add	r2, r1, r2, lsl #1
   3ab6c:	add	r1, r1, #2
   3ab70:	b	3ab88 <flatcc_builder_check_required@@Base+0x60>
   3ab74:	ldrh	r3, [r1], #2
   3ab78:	lsl	r3, r3, #1
   3ab7c:	ldrh	r0, [ip, r3]
   3ab80:	cmp	r0, #0
   3ab84:	beq	3ab94 <flatcc_builder_check_required@@Base+0x6c>
   3ab88:	cmp	r1, r2
   3ab8c:	bne	3ab74 <flatcc_builder_check_required@@Base+0x4c>
   3ab90:	mov	r0, #1
   3ab94:	bx	lr
   3ab98:	ldr	r3, [pc, #32]	; 3abc0 <flatcc_builder_check_required@@Base+0x98>
   3ab9c:	ldr	r1, [pc, #32]	; 3abc4 <flatcc_builder_check_required@@Base+0x9c>
   3aba0:	ldr	r0, [pc, #32]	; 3abc8 <flatcc_builder_check_required@@Base+0xa0>
   3aba4:	add	r3, pc, r3
   3aba8:	push	{r4, lr}
   3abac:	add	r3, r3, #768	; 0x300
   3abb0:	ldr	r2, [pc, #20]	; 3abcc <flatcc_builder_check_required@@Base+0xa4>
   3abb4:	add	r1, pc, r1
   3abb8:	add	r0, pc, r0
   3abbc:	bl	14140 <__assert_fail@plt>
   3abc0:	andeq	pc, r1, r8, lsr r7	; <UNPREDICTABLE>
   3abc4:	andeq	pc, r1, r8, ror lr	; <UNPREDICTABLE>
   3abc8:	andeq	r0, r2, r0, asr r1
   3abcc:	andeq	r0, r0, r1, lsl r5

0003abd0 <flatcc_builder_end_table@@Base>:
   3abd0:	ldr	r3, [r0, #32]
   3abd4:	push	{r4, r5, r6, r7, lr}
   3abd8:	sub	sp, sp, #20
   3abdc:	ldrh	r3, [r3, #14]
   3abe0:	cmp	r3, #3
   3abe4:	bne	3ad68 <flatcc_builder_end_table@@Base+0x198>
   3abe8:	ldrh	r5, [r0, #8]
   3abec:	ldr	r3, [r0, #12]
   3abf0:	ldr	r1, [pc, #404]	; 3ad8c <flatcc_builder_end_table@@Base+0x1bc>
   3abf4:	add	r5, r5, #2
   3abf8:	ldr	r2, [r0, #20]
   3abfc:	lsl	r5, r5, #1
   3ac00:	add	r2, r2, #4
   3ac04:	uxth	r5, r5
   3ac08:	eor	r3, r3, r5
   3ac0c:	uxth	r2, r2
   3ac10:	mul	r3, r1, r3
   3ac14:	ldr	ip, [r0, #4]
   3ac18:	eor	r3, r3, r2
   3ac1c:	sub	r6, ip, #4
   3ac20:	mul	r1, r1, r3
   3ac24:	strh	r2, [ip, #-2]
   3ac28:	strh	r5, [ip, #-4]
   3ac2c:	mov	r3, r1
   3ac30:	str	r1, [r0, #12]
   3ac34:	mov	r2, r5
   3ac38:	mov	r1, r6
   3ac3c:	mov	r4, r0
   3ac40:	bl	3a4b4 <flatcc_builder_create_cached_vtable@@Base>
   3ac44:	subs	r7, r0, #0
   3ac48:	bne	3ac5c <flatcc_builder_end_table@@Base+0x8c>
   3ac4c:	mov	r5, #0
   3ac50:	mov	r0, r5
   3ac54:	add	sp, sp, #20
   3ac58:	pop	{r4, r5, r6, r7, pc}
   3ac5c:	mov	r2, r5
   3ac60:	mov	r1, #0
   3ac64:	mov	r0, r6
   3ac68:	bl	140a4 <memset@plt>
   3ac6c:	ldr	r3, [r4, #32]
   3ac70:	ldr	ip, [r4, #76]	; 0x4c
   3ac74:	ldr	r0, [r4]
   3ac78:	ldr	r2, [r3, #20]
   3ac7c:	ldr	r1, [r4, #16]
   3ac80:	add	ip, ip, r2
   3ac84:	sub	r0, r0, ip
   3ac88:	ldrh	r3, [r4, #130]	; 0x82
   3ac8c:	asr	r0, r0, #1
   3ac90:	ldr	r2, [r4, #20]
   3ac94:	str	r0, [sp, #4]
   3ac98:	str	r7, [sp, #8]
   3ac9c:	str	ip, [sp]
   3aca0:	mov	r0, r4
   3aca4:	bl	3a7fc <flatcc_builder_create_table@@Base>
   3aca8:	subs	r5, r0, #0
   3acac:	beq	3ac4c <flatcc_builder_end_table@@Base+0x7c>
   3acb0:	ldr	r3, [r4, #32]
   3acb4:	ldr	r0, [r4, #52]	; 0x34
   3acb8:	ldr	ip, [r4, #76]	; 0x4c
   3acbc:	ldr	r1, [r3, #24]
   3acc0:	ldr	r2, [r4, #20]
   3acc4:	str	r1, [r4, #12]
   3acc8:	ldrh	lr, [r3, #28]
   3accc:	mov	r1, #0
   3acd0:	strh	lr, [r4, #8]
   3acd4:	ldr	lr, [r3, #16]
   3acd8:	add	r0, r0, lr
   3acdc:	str	r0, [r4, #4]
   3ace0:	ldr	r3, [r3, #20]
   3ace4:	ldr	r0, [r4, #16]
   3ace8:	add	r3, ip, r3
   3acec:	str	r3, [r4]
   3acf0:	bl	140a4 <memset@plt>
   3acf4:	ldr	r3, [r4, #32]
   3acf8:	ldr	r2, [r4, #64]	; 0x40
   3acfc:	ldrh	lr, [r4, #130]	; 0x82
   3ad00:	ldr	ip, [r3]
   3ad04:	ldr	r1, [r3, #4]
   3ad08:	ldrh	r0, [r4, #128]	; 0x80
   3ad0c:	sub	r2, r2, ip
   3ad10:	cmp	r2, r1
   3ad14:	movcs	r2, r1
   3ad18:	cmp	r0, lr
   3ad1c:	ldr	r0, [r4, #60]	; 0x3c
   3ad20:	ldr	r6, [r3, #8]
   3ad24:	str	r2, [r4, #24]
   3ad28:	add	r2, r0, ip
   3ad2c:	str	r2, [r4, #16]
   3ad30:	str	r6, [r4, #20]
   3ad34:	ldr	r2, [r4, #156]	; 0x9c
   3ad38:	str	ip, [r4, #28]
   3ad3c:	str	r1, [r3, #4]
   3ad40:	strhcc	lr, [r4, #128]	; 0x80
   3ad44:	ldrh	r1, [r3, #12]
   3ad48:	sub	r2, r2, #1
   3ad4c:	sub	r3, r3, #36	; 0x24
   3ad50:	mov	r0, r5
   3ad54:	str	r2, [r4, #156]	; 0x9c
   3ad58:	strh	r1, [r4, #130]	; 0x82
   3ad5c:	str	r3, [r4, #32]
   3ad60:	add	sp, sp, #20
   3ad64:	pop	{r4, r5, r6, r7, pc}
   3ad68:	ldr	r3, [pc, #32]	; 3ad90 <flatcc_builder_end_table@@Base+0x1c0>
   3ad6c:	ldr	r1, [pc, #32]	; 3ad94 <flatcc_builder_end_table@@Base+0x1c4>
   3ad70:	ldr	r0, [pc, #32]	; 3ad98 <flatcc_builder_end_table@@Base+0x1c8>
   3ad74:	add	r3, pc, r3
   3ad78:	ldr	r2, [pc, #28]	; 3ad9c <flatcc_builder_end_table@@Base+0x1cc>
   3ad7c:	add	r3, r3, #800	; 0x320
   3ad80:	add	r1, pc, r1
   3ad84:	add	r0, pc, r0
   3ad88:	bl	14140 <__assert_fail@plt>
   3ad8c:			; <UNDEFINED> instruction: 0x9e3779b1
   3ad90:	andeq	pc, r1, r8, ror #10
   3ad94:	andeq	pc, r1, ip, lsr #25
   3ad98:	andeq	pc, r1, r4, lsl #31
   3ad9c:	andeq	r0, r0, r5, lsr #10

0003ada0 <flatcc_builder_create_vector@@Base>:
   3ada0:	push	{r4, r5, r6, lr}
   3ada4:	sub	sp, sp, #88	; 0x58
   3ada8:	ldr	lr, [pc, #320]	; 3aef0 <flatcc_builder_create_vector@@Base+0x150>
   3adac:	ldr	ip, [sp, #108]	; 0x6c
   3adb0:	mov	r4, r0
   3adb4:	cmp	r2, ip
   3adb8:	add	lr, pc, lr
   3adbc:	ldrh	r0, [sp, #104]	; 0x68
   3adc0:	bhi	3aea4 <flatcc_builder_create_vector@@Base+0x104>
   3adc4:	ldrh	ip, [r4, #128]	; 0x80
   3adc8:	cmp	r0, #4
   3adcc:	mul	r3, r3, r2
   3add0:	movcc	r0, #4
   3add4:	ldr	r6, [r4, #136]	; 0x88
   3add8:	cmp	ip, r0
   3addc:	strhcc	r0, [r4, #128]	; 0x80
   3ade0:	sub	r5, r6, r3
   3ade4:	sub	r0, r0, #1
   3ade8:	mov	ip, #4
   3adec:	str	r2, [sp, #12]
   3adf0:	and	r0, r0, r5
   3adf4:	add	r2, sp, #12
   3adf8:	mov	r5, #1
   3adfc:	cmp	r3, #0
   3ae00:	str	ip, [sp, #16]
   3ae04:	str	ip, [sp, #28]
   3ae08:	str	r2, [sp, #24]
   3ae0c:	str	r5, [sp, #20]
   3ae10:	bne	3ae88 <flatcc_builder_create_vector@@Base+0xe8>
   3ae14:	cmp	r0, #0
   3ae18:	beq	3ae48 <flatcc_builder_create_vector@@Base+0xa8>
   3ae1c:	ldr	r3, [sp, #20]
   3ae20:	ldr	r2, [pc, #204]	; 3aef4 <flatcc_builder_create_vector@@Base+0x154>
   3ae24:	add	r3, r3, #1
   3ae28:	add	ip, ip, r0
   3ae2c:	str	ip, [sp, #16]
   3ae30:	ldr	r1, [lr, r2]
   3ae34:	add	r2, sp, #88	; 0x58
   3ae38:	add	r2, r2, r3, lsl #3
   3ae3c:	str	r3, [sp, #20]
   3ae40:	str	r1, [r2, #-72]	; 0xffffffb8
   3ae44:	str	r0, [r2, #-68]	; 0xffffffbc
   3ae48:	sub	r5, r6, ip
   3ae4c:	cmp	r6, r5
   3ae50:	ble	3aeec <flatcc_builder_create_vector@@Base+0x14c>
   3ae54:	ldr	r0, [r4, #36]	; 0x24
   3ae58:	ldr	r2, [sp, #20]
   3ae5c:	str	ip, [sp]
   3ae60:	mov	r3, r5
   3ae64:	ldr	r6, [r4, #44]	; 0x2c
   3ae68:	add	r1, sp, #24
   3ae6c:	blx	r6
   3ae70:	cmp	r0, #0
   3ae74:	bne	3aec8 <flatcc_builder_create_vector@@Base+0x128>
   3ae78:	mov	r0, r5
   3ae7c:	str	r5, [r4, #136]	; 0x88
   3ae80:	add	sp, sp, #88	; 0x58
   3ae84:	pop	{r4, r5, r6, pc}
   3ae88:	add	ip, r3, ip
   3ae8c:	mov	r2, #2
   3ae90:	str	r1, [sp, #32]
   3ae94:	str	r3, [sp, #36]	; 0x24
   3ae98:	str	ip, [sp, #16]
   3ae9c:	str	r2, [sp, #20]
   3aea0:	b	3ae14 <flatcc_builder_create_vector@@Base+0x74>
   3aea4:	ldr	r3, [pc, #76]	; 3aef8 <flatcc_builder_create_vector@@Base+0x158>
   3aea8:	ldr	r1, [pc, #76]	; 3aefc <flatcc_builder_create_vector@@Base+0x15c>
   3aeac:	ldr	r0, [pc, #76]	; 3af00 <flatcc_builder_create_vector@@Base+0x160>
   3aeb0:	add	r3, pc, r3
   3aeb4:	ldr	r2, [pc, #72]	; 3af04 <flatcc_builder_create_vector@@Base+0x164>
   3aeb8:	add	r3, r3, #828	; 0x33c
   3aebc:	add	r1, pc, r1
   3aec0:	add	r0, pc, r0
   3aec4:	bl	14140 <__assert_fail@plt>
   3aec8:	ldr	r3, [pc, #56]	; 3af08 <flatcc_builder_create_vector@@Base+0x168>
   3aecc:	ldr	r1, [pc, #56]	; 3af0c <flatcc_builder_create_vector@@Base+0x16c>
   3aed0:	ldr	r0, [pc, #56]	; 3af10 <flatcc_builder_create_vector@@Base+0x170>
   3aed4:	add	r3, pc, r3
   3aed8:	ldr	r2, [pc, #52]	; 3af14 <flatcc_builder_create_vector@@Base+0x174>
   3aedc:	add	r3, r3, #28
   3aee0:	add	r1, pc, r1
   3aee4:	add	r0, pc, r0
   3aee8:	bl	14140 <__assert_fail@plt>
   3aeec:	bl	14298 <__assert_fail@plt+0x158>
   3aef0:	andeq	r0, r3, r0, asr #4
   3aef4:	muleq	r0, ip, r0
   3aef8:	andeq	pc, r1, ip, lsr #8
   3aefc:	andeq	pc, r1, r0, ror fp	; <UNPREDICTABLE>
   3af00:	andeq	pc, r1, r4, ror lr	; <UNPREDICTABLE>
   3af04:	andeq	r0, r0, r5, asr r5
   3af08:	andeq	pc, r1, r8, lsl #8
   3af0c:	andeq	pc, r1, ip, asr #22
   3af10:	ldrdeq	lr, [r0], -r8
   3af14:	andeq	r0, r0, fp, lsl #5

0003af18 <flatcc_builder_end_vector@@Base>:
   3af18:	ldr	r1, [r0, #32]
   3af1c:	push	{r4, r5, r6, lr}
   3af20:	sub	sp, sp, #8
   3af24:	ldrh	r3, [r1, #14]
   3af28:	cmp	r3, #4
   3af2c:	bne	3afe0 <flatcc_builder_end_vector@@Base+0xc8>
   3af30:	ldrh	lr, [r0, #130]	; 0x82
   3af34:	ldr	ip, [r1, #24]
   3af38:	ldr	r3, [r1, #16]
   3af3c:	ldr	r2, [r1, #20]
   3af40:	ldr	r1, [r0, #16]
   3af44:	str	lr, [sp]
   3af48:	str	ip, [sp, #4]
   3af4c:	mov	r4, r0
   3af50:	bl	3ada0 <flatcc_builder_create_vector@@Base>
   3af54:	subs	r5, r0, #0
   3af58:	beq	3afd4 <flatcc_builder_end_vector@@Base+0xbc>
   3af5c:	ldr	r2, [r4, #20]
   3af60:	mov	r1, #0
   3af64:	ldr	r0, [r4, #16]
   3af68:	bl	140a4 <memset@plt>
   3af6c:	ldr	r3, [r4, #32]
   3af70:	ldr	r2, [r4, #64]	; 0x40
   3af74:	ldrh	lr, [r4, #130]	; 0x82
   3af78:	ldr	ip, [r3]
   3af7c:	ldr	r1, [r3, #4]
   3af80:	ldrh	r0, [r4, #128]	; 0x80
   3af84:	sub	r2, r2, ip
   3af88:	cmp	r2, r1
   3af8c:	movcs	r2, r1
   3af90:	cmp	r0, lr
   3af94:	ldr	r0, [r4, #60]	; 0x3c
   3af98:	ldr	r6, [r3, #8]
   3af9c:	str	r2, [r4, #24]
   3afa0:	add	r2, r0, ip
   3afa4:	str	r2, [r4, #16]
   3afa8:	str	r6, [r4, #20]
   3afac:	ldr	r2, [r4, #156]	; 0x9c
   3afb0:	str	ip, [r4, #28]
   3afb4:	str	r1, [r3, #4]
   3afb8:	strhcc	lr, [r4, #128]	; 0x80
   3afbc:	ldrh	r1, [r3, #12]
   3afc0:	sub	r2, r2, #1
   3afc4:	sub	r3, r3, #36	; 0x24
   3afc8:	str	r2, [r4, #156]	; 0x9c
   3afcc:	strh	r1, [r4, #130]	; 0x82
   3afd0:	str	r3, [r4, #32]
   3afd4:	mov	r0, r5
   3afd8:	add	sp, sp, #8
   3afdc:	pop	{r4, r5, r6, pc}
   3afe0:	ldr	r3, [pc, #28]	; 3b004 <flatcc_builder_end_vector@@Base+0xec>
   3afe4:	ldr	r1, [pc, #28]	; 3b008 <flatcc_builder_end_vector@@Base+0xf0>
   3afe8:	ldr	r0, [pc, #28]	; 3b00c <flatcc_builder_end_vector@@Base+0xf4>
   3afec:	add	r3, pc, r3
   3aff0:	ldr	r2, [pc, #24]	; 3b010 <flatcc_builder_end_vector@@Base+0xf8>
   3aff4:	add	r3, r3, #860	; 0x35c
   3aff8:	add	r1, pc, r1
   3affc:	add	r0, pc, r0
   3b000:	bl	14140 <__assert_fail@plt>
   3b004:	strdeq	pc, [r1], -r0
   3b008:	andeq	pc, r1, r4, lsr sl	; <UNPREDICTABLE>
   3b00c:	andeq	pc, r1, r0, lsl #23
   3b010:	andeq	r0, r0, r8, ror r5

0003b014 <flatcc_builder_vector_count@@Base>:
   3b014:	ldr	r3, [r0, #32]
   3b018:	ldr	r0, [r3, #20]
   3b01c:	bx	lr

0003b020 <flatcc_builder_vector_edit@@Base>:
   3b020:	ldr	r0, [r0, #16]
   3b024:	bx	lr

0003b028 <flatcc_builder_create_offset_vector_direct@@Base>:
   3b028:	cmn	r2, #-1073741823	; 0xc0000001
   3b02c:	bls	3b038 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
   3b030:	mov	r0, #0
   3b034:	bx	lr
   3b038:	mov	r3, #0
   3b03c:	b	38778 <flatcc_builder_default_alloc@@Base+0x350>

0003b040 <flatcc_builder_end_offset_vector@@Base>:
   3b040:	ldr	r3, [r0, #32]
   3b044:	push	{r4, r5, r6, lr}
   3b048:	ldrh	r2, [r3, #14]
   3b04c:	cmp	r2, #5
   3b050:	bne	3b0ec <flatcc_builder_end_offset_vector@@Base+0xac>
   3b054:	ldr	r2, [r3, #20]
   3b058:	ldr	r1, [r0, #16]
   3b05c:	mov	r4, r0
   3b060:	bl	3b028 <flatcc_builder_create_offset_vector_direct@@Base>
   3b064:	subs	r5, r0, #0
   3b068:	beq	3b0e4 <flatcc_builder_end_offset_vector@@Base+0xa4>
   3b06c:	ldr	r2, [r4, #20]
   3b070:	mov	r1, #0
   3b074:	ldr	r0, [r4, #16]
   3b078:	bl	140a4 <memset@plt>
   3b07c:	ldr	r3, [r4, #32]
   3b080:	ldr	r2, [r4, #64]	; 0x40
   3b084:	ldrh	lr, [r4, #130]	; 0x82
   3b088:	ldr	ip, [r3]
   3b08c:	ldr	r1, [r3, #4]
   3b090:	ldrh	r0, [r4, #128]	; 0x80
   3b094:	sub	r2, r2, ip
   3b098:	cmp	r2, r1
   3b09c:	movcs	r2, r1
   3b0a0:	cmp	r0, lr
   3b0a4:	ldr	r0, [r4, #60]	; 0x3c
   3b0a8:	ldr	r6, [r3, #8]
   3b0ac:	str	r2, [r4, #24]
   3b0b0:	add	r2, r0, ip
   3b0b4:	str	r2, [r4, #16]
   3b0b8:	str	r6, [r4, #20]
   3b0bc:	ldr	r2, [r4, #156]	; 0x9c
   3b0c0:	str	ip, [r4, #28]
   3b0c4:	str	r1, [r3, #4]
   3b0c8:	strhcc	lr, [r4, #128]	; 0x80
   3b0cc:	ldrh	r1, [r3, #12]
   3b0d0:	sub	r2, r2, #1
   3b0d4:	sub	r3, r3, #36	; 0x24
   3b0d8:	str	r2, [r4, #156]	; 0x9c
   3b0dc:	strh	r1, [r4, #130]	; 0x82
   3b0e0:	str	r3, [r4, #32]
   3b0e4:	mov	r0, r5
   3b0e8:	pop	{r4, r5, r6, pc}
   3b0ec:	ldr	r3, [pc, #28]	; 3b110 <flatcc_builder_end_offset_vector@@Base+0xd0>
   3b0f0:	ldr	r1, [pc, #28]	; 3b114 <flatcc_builder_end_offset_vector@@Base+0xd4>
   3b0f4:	ldr	r0, [pc, #28]	; 3b118 <flatcc_builder_end_offset_vector@@Base+0xd8>
   3b0f8:	add	r3, pc, r3
   3b0fc:	ldr	r2, [pc, #24]	; 3b11c <flatcc_builder_end_offset_vector@@Base+0xdc>
   3b100:	add	r3, r3, #888	; 0x378
   3b104:	add	r1, pc, r1
   3b108:	add	r0, pc, r0
   3b10c:	bl	14140 <__assert_fail@plt>
   3b110:	andeq	pc, r1, r4, ror #3
   3b114:	andeq	pc, r1, r8, lsr #18
   3b118:	andeq	pc, r1, r0, ror #21
   3b11c:	andeq	r0, r0, r8, asr #11

0003b120 <flatcc_builder_create_offset_vector@@Base>:
   3b120:	push	{r4, r5, r6, lr}
   3b124:	mov	r6, r1
   3b128:	mov	r5, r2
   3b12c:	mov	r4, r0
   3b130:	bl	39ff4 <flatcc_builder_start_offset_vector@@Base>
   3b134:	cmp	r0, #0
   3b138:	beq	3b144 <flatcc_builder_create_offset_vector@@Base+0x24>
   3b13c:	mov	r0, #0
   3b140:	pop	{r4, r5, r6, pc}
   3b144:	mov	r1, r5
   3b148:	mov	r0, r4
   3b14c:	bl	3998c <flatcc_builder_extend_offset_vector@@Base>
   3b150:	cmp	r0, #0
   3b154:	beq	3b13c <flatcc_builder_create_offset_vector@@Base+0x1c>
   3b158:	lsl	r2, r5, #2
   3b15c:	mov	r1, r6
   3b160:	bl	13fd8 <memcpy@plt>
   3b164:	mov	r0, r4
   3b168:	pop	{r4, r5, r6, lr}
   3b16c:	b	3b040 <flatcc_builder_end_offset_vector@@Base>

0003b170 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   3b170:	ldr	r2, [r0, #32]
   3b174:	push	{r4, r5, r6, lr}
   3b178:	ldrh	ip, [r2, #14]
   3b17c:	cmp	ip, #5
   3b180:	bne	3b234 <flatcc_builder_end_offset_vector_for_unions@@Base+0xc4>
   3b184:	ldr	r2, [r2, #20]
   3b188:	cmn	r2, #-1073741823	; 0xc0000001
   3b18c:	bls	3b19c <flatcc_builder_end_offset_vector_for_unions@@Base+0x2c>
   3b190:	mov	r5, #0
   3b194:	mov	r0, r5
   3b198:	pop	{r4, r5, r6, pc}
   3b19c:	mov	r3, r1
   3b1a0:	ldr	r1, [r0, #16]
   3b1a4:	mov	r4, r0
   3b1a8:	bl	38778 <flatcc_builder_default_alloc@@Base+0x350>
   3b1ac:	subs	r5, r0, #0
   3b1b0:	beq	3b190 <flatcc_builder_end_offset_vector_for_unions@@Base+0x20>
   3b1b4:	ldr	r2, [r4, #20]
   3b1b8:	mov	r1, #0
   3b1bc:	ldr	r0, [r4, #16]
   3b1c0:	bl	140a4 <memset@plt>
   3b1c4:	ldr	r3, [r4, #32]
   3b1c8:	ldr	r2, [r4, #64]	; 0x40
   3b1cc:	ldrh	lr, [r4, #130]	; 0x82
   3b1d0:	ldr	ip, [r3]
   3b1d4:	ldr	r1, [r3, #4]
   3b1d8:	ldrh	r0, [r4, #128]	; 0x80
   3b1dc:	sub	r2, r2, ip
   3b1e0:	cmp	r2, r1
   3b1e4:	movcs	r2, r1
   3b1e8:	cmp	r0, lr
   3b1ec:	ldr	r0, [r4, #60]	; 0x3c
   3b1f0:	ldr	r6, [r3, #8]
   3b1f4:	str	r2, [r4, #24]
   3b1f8:	add	r2, r0, ip
   3b1fc:	str	r2, [r4, #16]
   3b200:	str	r6, [r4, #20]
   3b204:	ldr	r2, [r4, #156]	; 0x9c
   3b208:	str	ip, [r4, #28]
   3b20c:	str	r1, [r3, #4]
   3b210:	strhcc	lr, [r4, #128]	; 0x80
   3b214:	ldrh	r1, [r3, #12]
   3b218:	sub	r2, r2, #1
   3b21c:	sub	r3, r3, #36	; 0x24
   3b220:	str	r2, [r4, #156]	; 0x9c
   3b224:	strh	r1, [r4, #130]	; 0x82
   3b228:	str	r3, [r4, #32]
   3b22c:	mov	r0, r5
   3b230:	pop	{r4, r5, r6, pc}
   3b234:	ldr	r3, [pc, #28]	; 3b258 <flatcc_builder_end_offset_vector_for_unions@@Base+0xe8>
   3b238:	ldr	r1, [pc, #28]	; 3b25c <flatcc_builder_end_offset_vector_for_unions@@Base+0xec>
   3b23c:	ldr	r0, [pc, #28]	; 3b260 <flatcc_builder_end_offset_vector_for_unions@@Base+0xf0>
   3b240:	add	r3, pc, r3
   3b244:	ldr	r2, [pc, #24]	; 3b264 <flatcc_builder_end_offset_vector_for_unions@@Base+0xf4>
   3b248:	add	r3, r3, #924	; 0x39c
   3b24c:	add	r1, pc, r1
   3b250:	add	r0, pc, r0
   3b254:	bl	14140 <__assert_fail@plt>
   3b258:	muleq	r1, ip, r0
   3b25c:	andeq	pc, r1, r0, ror #15
   3b260:	muleq	r1, r8, r9
   3b264:	ldrdeq	r0, [r0], -r5

0003b268 <flatcc_builder_offset_vector_edit@@Base>:
   3b268:	ldr	r0, [r0, #16]
   3b26c:	bx	lr

0003b270 <flatcc_builder_offset_vector_count@@Base>:
   3b270:	ldr	r3, [r0, #32]
   3b274:	ldr	r0, [r3, #20]
   3b278:	bx	lr

0003b27c <flatcc_builder_create_union_vector_direct@@Base>:
   3b27c:	push	{r4, r5, r6, r7, r8, lr}
   3b280:	sub	sp, sp, #8
   3b284:	mov	r4, r0
   3b288:	ldr	r5, [sp, #32]
   3b28c:	cmn	r5, #-1073741823	; 0xc0000001
   3b290:	bls	3b2ac <flatcc_builder_create_union_vector_direct@@Base+0x30>
   3b294:	mov	r3, #0
   3b298:	mov	r0, r4
   3b29c:	str	r3, [r4]
   3b2a0:	str	r3, [r4, #4]
   3b2a4:	add	sp, sp, #8
   3b2a8:	pop	{r4, r5, r6, r7, r8, pc}
   3b2ac:	mov	r6, r1
   3b2b0:	mov	r7, r2
   3b2b4:	mov	r1, r3
   3b2b8:	mov	r0, r6
   3b2bc:	mov	r3, r2
   3b2c0:	mov	r2, r5
   3b2c4:	bl	38778 <flatcc_builder_default_alloc@@Base+0x350>
   3b2c8:	subs	r8, r0, #0
   3b2cc:	beq	3b294 <flatcc_builder_create_union_vector_direct@@Base+0x18>
   3b2d0:	mvn	ip, #0
   3b2d4:	mov	r3, #1
   3b2d8:	mov	r2, r5
   3b2dc:	mov	r1, r7
   3b2e0:	mov	r0, r6
   3b2e4:	stm	sp, {r3, ip}
   3b2e8:	bl	3ada0 <flatcc_builder_create_vector@@Base>
   3b2ec:	stm	r4, {r0, r8}
   3b2f0:	mov	r0, r4
   3b2f4:	add	sp, sp, #8
   3b2f8:	pop	{r4, r5, r6, r7, r8, pc}

0003b2fc <flatcc_builder_create_union_vector@@Base>:
   3b2fc:	push	{r4, r5, r6, r7, r8, lr}
   3b300:	mov	r6, r0
   3b304:	sub	sp, sp, #16
   3b308:	mov	r0, r1
   3b30c:	mov	r5, r1
   3b310:	mov	r4, r2
   3b314:	mov	r7, r3
   3b318:	bl	39ff4 <flatcc_builder_start_offset_vector@@Base>
   3b31c:	cmp	r0, #0
   3b320:	beq	3b33c <flatcc_builder_create_union_vector@@Base+0x40>
   3b324:	mov	r3, #0
   3b328:	mov	r0, r6
   3b32c:	str	r3, [r6]
   3b330:	str	r3, [r6, #4]
   3b334:	add	sp, sp, #16
   3b338:	pop	{r4, r5, r6, r7, r8, pc}
   3b33c:	mov	r1, r7
   3b340:	mov	r0, r5
   3b344:	bl	3998c <flatcc_builder_extend_offset_vector@@Base>
   3b348:	cmp	r0, #0
   3b34c:	beq	3b324 <flatcc_builder_create_union_vector@@Base+0x28>
   3b350:	ldr	r8, [r5, #20]
   3b354:	ldr	r3, [r5, #24]
   3b358:	add	r1, r7, r8
   3b35c:	cmp	r1, r3
   3b360:	str	r1, [r5, #20]
   3b364:	bcs	3b45c <flatcc_builder_create_union_vector@@Base+0x160>
   3b368:	ldr	r2, [r5, #16]
   3b36c:	adds	r8, r2, r8
   3b370:	beq	3b324 <flatcc_builder_create_union_vector@@Base+0x28>
   3b374:	mov	r0, r5
   3b378:	bl	3b268 <flatcc_builder_offset_vector_edit@@Base>
   3b37c:	cmp	r7, #0
   3b380:	movne	r1, r4
   3b384:	subne	lr, r8, #1
   3b388:	mov	r3, r0
   3b38c:	addne	r2, r1, r7, lsl #3
   3b390:	subne	ip, r0, #4
   3b394:	beq	3b3b4 <flatcc_builder_create_union_vector@@Base+0xb8>
   3b398:	ldrb	r4, [r1]
   3b39c:	add	r1, r1, #8
   3b3a0:	strb	r4, [lr, #1]!
   3b3a4:	ldr	r4, [r1, #-4]
   3b3a8:	cmp	r2, r1
   3b3ac:	str	r4, [ip, #4]!
   3b3b0:	bne	3b398 <flatcc_builder_create_union_vector@@Base+0x9c>
   3b3b4:	str	r7, [sp]
   3b3b8:	mov	r2, r8
   3b3bc:	mov	r1, r5
   3b3c0:	add	r0, sp, #8
   3b3c4:	bl	3b27c <flatcc_builder_create_union_vector_direct@@Base>
   3b3c8:	ldr	r2, [r5, #20]
   3b3cc:	mov	r1, #0
   3b3d0:	ldr	r0, [r5, #16]
   3b3d4:	ldr	r7, [sp, #8]
   3b3d8:	ldr	r4, [sp, #12]
   3b3dc:	bl	140a4 <memset@plt>
   3b3e0:	ldr	r3, [r5, #32]
   3b3e4:	ldr	r2, [r5, #64]	; 0x40
   3b3e8:	ldrh	lr, [r5, #130]	; 0x82
   3b3ec:	ldr	ip, [r3]
   3b3f0:	ldr	r1, [r3, #4]
   3b3f4:	ldrh	r0, [r5, #128]	; 0x80
   3b3f8:	sub	r2, r2, ip
   3b3fc:	cmp	r2, r1
   3b400:	movcs	r2, r1
   3b404:	cmp	r0, lr
   3b408:	ldr	r0, [r5, #60]	; 0x3c
   3b40c:	ldr	r8, [r3, #8]
   3b410:	str	r2, [r5, #24]
   3b414:	add	r2, r0, ip
   3b418:	str	r2, [r5, #16]
   3b41c:	str	r8, [r5, #20]
   3b420:	ldr	r2, [r5, #156]	; 0x9c
   3b424:	str	ip, [r5, #28]
   3b428:	str	r1, [r3, #4]
   3b42c:	strhcc	lr, [r5, #128]	; 0x80
   3b430:	ldrh	r1, [r3, #12]
   3b434:	sub	r2, r2, #1
   3b438:	sub	r3, r3, #36	; 0x24
   3b43c:	mov	r0, r6
   3b440:	str	r7, [r6]
   3b444:	str	r4, [r6, #4]
   3b448:	str	r2, [r5, #156]	; 0x9c
   3b44c:	strh	r1, [r5, #130]	; 0x82
   3b450:	str	r3, [r5, #32]
   3b454:	add	sp, sp, #16
   3b458:	pop	{r4, r5, r6, r7, r8, pc}
   3b45c:	add	r1, r1, #1
   3b460:	mvn	r2, #3
   3b464:	mov	r0, r5
   3b468:	bl	383b4 <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   3b46c:	cmp	r0, #0
   3b470:	beq	3b368 <flatcc_builder_create_union_vector@@Base+0x6c>
   3b474:	b	3b324 <flatcc_builder_create_union_vector@@Base+0x28>

0003b478 <flatcc_builder_start_union_vector@@Base>:
   3b478:	push	{r4, lr}
   3b47c:	mov	r1, #4
   3b480:	mov	r4, r0
   3b484:	bl	38664 <flatcc_builder_default_alloc@@Base+0x23c>
   3b488:	cmp	r0, #0
   3b48c:	bne	3b4d8 <flatcc_builder_start_union_vector@@Base+0x60>
   3b490:	ldr	r3, [r4, #32]
   3b494:	mov	r2, #8
   3b498:	mov	lr, #7
   3b49c:	str	r0, [r3, #20]
   3b4a0:	str	r2, [r3, #16]
   3b4a4:	ldr	ip, [r4, #28]
   3b4a8:	ldr	r2, [r4, #64]	; 0x40
   3b4ac:	ldr	r1, [r4, #60]	; 0x3c
   3b4b0:	sub	r2, r2, ip
   3b4b4:	cmn	r2, #4
   3b4b8:	mvnhi	r2, #3
   3b4bc:	strh	lr, [r3, #14]
   3b4c0:	add	r1, r1, ip
   3b4c4:	str	r2, [r4, #24]
   3b4c8:	mvn	r2, #3
   3b4cc:	str	r1, [r4, #16]
   3b4d0:	str	r2, [r3, #4]
   3b4d4:	pop	{r4, pc}
   3b4d8:	mvn	r0, #0
   3b4dc:	pop	{r4, pc}

0003b4e0 <flatcc_builder_union_vector_edit@@Base>:
   3b4e0:	ldr	r0, [r0, #16]
   3b4e4:	bx	lr

0003b4e8 <flatcc_builder_union_vector_count@@Base>:
   3b4e8:	ldr	r3, [r0, #32]
   3b4ec:	ldr	r0, [r3, #20]
   3b4f0:	bx	lr

0003b4f4 <flatcc_builder_end_union_vector@@Base>:
   3b4f4:	ldr	r3, [r1, #32]
   3b4f8:	push	{r4, r5, r6, r7, r8, lr}
   3b4fc:	sub	sp, sp, #16
   3b500:	ldrh	r3, [r3, #14]
   3b504:	cmp	r3, #7
   3b508:	bne	3b660 <flatcc_builder_end_union_vector@@Base+0x16c>
   3b50c:	mov	r5, r0
   3b510:	mov	r0, r1
   3b514:	mov	r4, r1
   3b518:	bl	3b4e8 <flatcc_builder_union_vector_count@@Base>
   3b51c:	ldr	r8, [r4, #20]
   3b520:	ldr	r3, [r4, #24]
   3b524:	lsl	r7, r0, #2
   3b528:	add	r1, r7, r0
   3b52c:	add	r1, r1, r8
   3b530:	cmp	r1, r3
   3b534:	mov	r6, r0
   3b538:	str	r1, [r4, #20]
   3b53c:	bcs	3b630 <flatcc_builder_end_union_vector@@Base+0x13c>
   3b540:	ldr	r3, [r4, #16]
   3b544:	adds	r8, r3, r8
   3b548:	beq	3b648 <flatcc_builder_end_union_vector@@Base+0x154>
   3b54c:	mov	r0, r4
   3b550:	bl	3b4e0 <flatcc_builder_union_vector_edit@@Base>
   3b554:	cmp	r6, #0
   3b558:	add	r2, r8, r7
   3b55c:	subne	ip, r2, #1
   3b560:	subne	r1, r8, #4
   3b564:	addne	r7, r0, r6, lsl #3
   3b568:	beq	3b588 <flatcc_builder_end_union_vector@@Base+0x94>
   3b56c:	ldrb	lr, [r0]
   3b570:	add	r0, r0, #8
   3b574:	strb	lr, [ip, #1]!
   3b578:	ldr	lr, [r0, #-4]
   3b57c:	cmp	r0, r7
   3b580:	str	lr, [r1, #4]!
   3b584:	bne	3b56c <flatcc_builder_end_union_vector@@Base+0x78>
   3b588:	mov	r3, r8
   3b58c:	str	r6, [sp]
   3b590:	mov	r1, r4
   3b594:	add	r0, sp, #8
   3b598:	bl	3b27c <flatcc_builder_create_union_vector_direct@@Base>
   3b59c:	ldr	r2, [r4, #20]
   3b5a0:	mov	r1, #0
   3b5a4:	ldr	r0, [r4, #16]
   3b5a8:	ldr	r7, [sp, #8]
   3b5ac:	ldr	r6, [sp, #12]
   3b5b0:	bl	140a4 <memset@plt>
   3b5b4:	ldr	r3, [r4, #32]
   3b5b8:	ldr	r2, [r4, #64]	; 0x40
   3b5bc:	ldrh	lr, [r4, #130]	; 0x82
   3b5c0:	ldr	ip, [r3]
   3b5c4:	ldr	r1, [r3, #4]
   3b5c8:	ldrh	r0, [r4, #128]	; 0x80
   3b5cc:	sub	r2, r2, ip
   3b5d0:	cmp	r2, r1
   3b5d4:	movcs	r2, r1
   3b5d8:	cmp	r0, lr
   3b5dc:	ldr	r0, [r4, #60]	; 0x3c
   3b5e0:	ldr	r8, [r3, #8]
   3b5e4:	str	r2, [r4, #24]
   3b5e8:	add	r2, r0, ip
   3b5ec:	str	r2, [r4, #16]
   3b5f0:	str	r8, [r4, #20]
   3b5f4:	ldr	r2, [r4, #156]	; 0x9c
   3b5f8:	str	ip, [r4, #28]
   3b5fc:	str	r1, [r3, #4]
   3b600:	strhcc	lr, [r4, #128]	; 0x80
   3b604:	ldrh	r1, [r3, #12]
   3b608:	sub	r2, r2, #1
   3b60c:	sub	r3, r3, #36	; 0x24
   3b610:	mov	r0, r5
   3b614:	str	r7, [r5]
   3b618:	str	r6, [r5, #4]
   3b61c:	str	r2, [r4, #156]	; 0x9c
   3b620:	strh	r1, [r4, #130]	; 0x82
   3b624:	str	r3, [r4, #32]
   3b628:	add	sp, sp, #16
   3b62c:	pop	{r4, r5, r6, r7, r8, pc}
   3b630:	add	r1, r1, #1
   3b634:	mvn	r2, #3
   3b638:	mov	r0, r4
   3b63c:	bl	383b4 <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   3b640:	cmp	r0, #0
   3b644:	beq	3b540 <flatcc_builder_end_union_vector@@Base+0x4c>
   3b648:	mov	r3, #0
   3b64c:	mov	r0, r5
   3b650:	str	r3, [r5]
   3b654:	str	r3, [r5, #4]
   3b658:	add	sp, sp, #16
   3b65c:	pop	{r4, r5, r6, r7, r8, pc}
   3b660:	ldr	r3, [pc, #28]	; 3b684 <flatcc_builder_end_union_vector@@Base+0x190>
   3b664:	ldr	r1, [pc, #28]	; 3b688 <flatcc_builder_end_union_vector@@Base+0x194>
   3b668:	ldr	r0, [pc, #28]	; 3b68c <flatcc_builder_end_union_vector@@Base+0x198>
   3b66c:	add	r3, pc, r3
   3b670:	ldr	r2, [pc, #24]	; 3b690 <flatcc_builder_end_union_vector@@Base+0x19c>
   3b674:	add	r3, r3, #968	; 0x3c8
   3b678:	add	r1, pc, r1
   3b67c:	add	r0, pc, r0
   3b680:	bl	14140 <__assert_fail@plt>
   3b684:	andeq	lr, r1, r0, ror ip
   3b688:			; <UNDEFINED> instruction: 0x0001f3b4
   3b68c:	andeq	pc, r1, ip, asr #13
   3b690:	andeq	r0, r0, r1, asr r6

0003b694 <flatcc_builder_extend_union_vector@@Base>:
   3b694:	ldr	ip, [r0, #32]
   3b698:	push	{r4, r5, r6, lr}
   3b69c:	ldr	r3, [ip, #20]
   3b6a0:	adds	r2, r1, r3
   3b6a4:	movcs	r3, #1
   3b6a8:	movcc	r3, #0
   3b6ac:	cmn	r2, #-536870911	; 0xe0000001
   3b6b0:	movls	r4, #0
   3b6b4:	movhi	r4, #1
   3b6b8:	orrs	r4, r3, r4
   3b6bc:	bne	3b708 <flatcc_builder_extend_union_vector@@Base+0x74>
   3b6c0:	str	r2, [ip, #20]
   3b6c4:	ldr	r6, [r0, #20]
   3b6c8:	ldr	r3, [r0, #24]
   3b6cc:	add	r1, r6, r1, lsl #3
   3b6d0:	cmp	r1, r3
   3b6d4:	mov	r5, r0
   3b6d8:	str	r1, [r0, #20]
   3b6dc:	bcs	3b6ec <flatcc_builder_extend_union_vector@@Base+0x58>
   3b6e0:	ldr	r0, [r5, #16]
   3b6e4:	add	r0, r0, r6
   3b6e8:	pop	{r4, r5, r6, pc}
   3b6ec:	add	r1, r1, #1
   3b6f0:	mvn	r2, #3
   3b6f4:	bl	383b4 <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   3b6f8:	cmp	r0, #0
   3b6fc:	beq	3b6e0 <flatcc_builder_extend_union_vector@@Base+0x4c>
   3b700:	mov	r0, r4
   3b704:	pop	{r4, r5, r6, pc}
   3b708:	bl	142d0 <__assert_fail@plt+0x190>

0003b70c <flatcc_builder_truncate_union_vector@@Base>:
   3b70c:	ldr	r3, [r0, #32]
   3b710:	push	{r4, lr}
   3b714:	ldrh	r2, [r3, #14]
   3b718:	cmp	r2, #7
   3b71c:	bne	3b760 <flatcc_builder_truncate_union_vector@@Base+0x54>
   3b720:	ldr	ip, [r3, #20]
   3b724:	cmp	ip, r1
   3b728:	bcc	3b784 <flatcc_builder_truncate_union_vector@@Base+0x78>
   3b72c:	ldr	r2, [r3, #16]
   3b730:	sub	ip, ip, r1
   3b734:	str	ip, [r3, #20]
   3b738:	mul	r2, r2, r1
   3b73c:	ldr	r3, [r0, #20]
   3b740:	ldr	r1, [r0, #16]
   3b744:	sub	r3, r3, r2
   3b748:	str	r3, [r0, #20]
   3b74c:	add	r0, r1, r3
   3b750:	mov	r1, #0
   3b754:	bl	140a4 <memset@plt>
   3b758:	mov	r0, #0
   3b75c:	pop	{r4, pc}
   3b760:	ldr	r3, [pc, #64]	; 3b7a8 <flatcc_builder_truncate_union_vector@@Base+0x9c>
   3b764:	ldr	r1, [pc, #64]	; 3b7ac <flatcc_builder_truncate_union_vector@@Base+0xa0>
   3b768:	ldr	r0, [pc, #64]	; 3b7b0 <flatcc_builder_truncate_union_vector@@Base+0xa4>
   3b76c:	add	r3, pc, r3
   3b770:	ldr	r2, [pc, #60]	; 3b7b4 <flatcc_builder_truncate_union_vector@@Base+0xa8>
   3b774:	add	r3, r3, #1000	; 0x3e8
   3b778:	add	r1, pc, r1
   3b77c:	add	r0, pc, r0
   3b780:	bl	14140 <__assert_fail@plt>
   3b784:	ldr	r3, [pc, #44]	; 3b7b8 <flatcc_builder_truncate_union_vector@@Base+0xac>
   3b788:	ldr	r1, [pc, #44]	; 3b7bc <flatcc_builder_truncate_union_vector@@Base+0xb0>
   3b78c:	ldr	r0, [pc, #44]	; 3b7c0 <flatcc_builder_truncate_union_vector@@Base+0xb4>
   3b790:	add	r3, pc, r3
   3b794:	ldr	r2, [pc, #40]	; 3b7c4 <flatcc_builder_truncate_union_vector@@Base+0xb8>
   3b798:	add	r3, r3, #1000	; 0x3e8
   3b79c:	add	r1, pc, r1
   3b7a0:	add	r0, pc, r0
   3b7a4:	bl	14140 <__assert_fail@plt>
   3b7a8:	andeq	lr, r1, r0, ror fp
   3b7ac:			; <UNDEFINED> instruction: 0x0001f2b4
   3b7b0:	andeq	pc, r1, ip, asr #11
   3b7b4:	andeq	r0, r0, r1, lsl #13
   3b7b8:	andeq	lr, r1, ip, asr #22
   3b7bc:	muleq	r1, r0, r2
   3b7c0:	andeq	pc, r1, ip, asr #9
   3b7c4:	andeq	r0, r0, r2, lsl #13

0003b7c8 <flatcc_builder_union_vector_push@@Base>:
   3b7c8:	ldr	ip, [r0, #32]
   3b7cc:	push	{r4, r5, r6, lr}
   3b7d0:	sub	sp, sp, #8
   3b7d4:	ldrh	r3, [ip, #14]
   3b7d8:	stm	sp, {r1, r2}
   3b7dc:	cmp	r3, #7
   3b7e0:	bne	3b860 <flatcc_builder_union_vector_push@@Base+0x98>
   3b7e4:	ldr	r3, [ip, #20]
   3b7e8:	cmn	r3, #-536870911	; 0xe0000001
   3b7ec:	beq	3b850 <flatcc_builder_union_vector_push@@Base+0x88>
   3b7f0:	add	r3, r3, #1
   3b7f4:	str	r3, [ip, #20]
   3b7f8:	ldr	r6, [r0, #20]
   3b7fc:	ldr	r2, [r0, #24]
   3b800:	add	r3, r6, #8
   3b804:	cmp	r3, r2
   3b808:	mov	r4, r0
   3b80c:	mov	r5, sp
   3b810:	str	r3, [r0, #20]
   3b814:	bcs	3b83c <flatcc_builder_union_vector_push@@Base+0x74>
   3b818:	ldr	r3, [r4, #16]
   3b81c:	adds	r3, r3, r6
   3b820:	beq	3b884 <flatcc_builder_union_vector_push@@Base+0xbc>
   3b824:	ldm	r5, {r0, r1}
   3b828:	mov	r2, r3
   3b82c:	stm	r3, {r0, r1}
   3b830:	mov	r0, r2
   3b834:	add	sp, sp, #8
   3b838:	pop	{r4, r5, r6, pc}
   3b83c:	mvn	r2, #3
   3b840:	add	r1, r6, #9
   3b844:	bl	383b4 <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   3b848:	cmp	r0, #0
   3b84c:	beq	3b818 <flatcc_builder_union_vector_push@@Base+0x50>
   3b850:	mov	r2, #0
   3b854:	mov	r0, r2
   3b858:	add	sp, sp, #8
   3b85c:	pop	{r4, r5, r6, pc}
   3b860:	ldr	r3, [pc, #36]	; 3b88c <flatcc_builder_union_vector_push@@Base+0xc4>
   3b864:	ldr	r1, [pc, #36]	; 3b890 <flatcc_builder_union_vector_push@@Base+0xc8>
   3b868:	ldr	r0, [pc, #36]	; 3b894 <flatcc_builder_union_vector_push@@Base+0xcc>
   3b86c:	add	r3, pc, r3
   3b870:	ldr	r2, [pc, #32]	; 3b898 <flatcc_builder_union_vector_push@@Base+0xd0>
   3b874:	add	r3, r3, #1040	; 0x410
   3b878:	add	r1, pc, r1
   3b87c:	add	r0, pc, r0
   3b880:	bl	14140 <__assert_fail@plt>
   3b884:	mov	r2, r3
   3b888:	b	3b830 <flatcc_builder_union_vector_push@@Base+0x68>
   3b88c:	andeq	lr, r1, r0, ror sl
   3b890:			; <UNDEFINED> instruction: 0x0001f1b4
   3b894:	andeq	pc, r1, ip, asr #9
   3b898:	andeq	r0, r0, sp, lsl #13

0003b89c <flatcc_builder_append_union_vector@@Base>:
   3b89c:	ldr	ip, [r0, #32]
   3b8a0:	push	{r4, r5, r6, r7, r8, lr}
   3b8a4:	ldrh	r3, [ip, #14]
   3b8a8:	cmp	r3, #7
   3b8ac:	bne	3b944 <flatcc_builder_append_union_vector@@Base+0xa8>
   3b8b0:	mov	r6, r1
   3b8b4:	ldr	r1, [ip, #20]
   3b8b8:	adds	r1, r2, r1
   3b8bc:	movcs	lr, #1
   3b8c0:	movcc	lr, #0
   3b8c4:	cmn	r1, #-536870911	; 0xe0000001
   3b8c8:	movls	r3, #0
   3b8cc:	movhi	r3, #1
   3b8d0:	orrs	r8, lr, r3
   3b8d4:	bne	3b940 <flatcc_builder_append_union_vector@@Base+0xa4>
   3b8d8:	str	r1, [ip, #20]
   3b8dc:	ldr	r7, [r0, #20]
   3b8e0:	lsl	r4, r2, #3
   3b8e4:	ldr	r3, [r0, #24]
   3b8e8:	add	r1, r4, r7
   3b8ec:	cmp	r1, r3
   3b8f0:	mov	r5, r0
   3b8f4:	str	r1, [r0, #20]
   3b8f8:	bcs	3b924 <flatcc_builder_append_union_vector@@Base+0x88>
   3b8fc:	ldr	r3, [r5, #16]
   3b900:	adds	r3, r3, r7
   3b904:	beq	3b91c <flatcc_builder_append_union_vector@@Base+0x80>
   3b908:	mov	r0, r3
   3b90c:	mov	r2, r4
   3b910:	mov	r1, r6
   3b914:	bl	13fd8 <memcpy@plt>
   3b918:	mov	r3, r0
   3b91c:	mov	r0, r3
   3b920:	pop	{r4, r5, r6, r7, r8, pc}
   3b924:	add	r1, r1, #1
   3b928:	mvn	r2, #3
   3b92c:	bl	383b4 <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   3b930:	cmp	r0, #0
   3b934:	beq	3b8fc <flatcc_builder_append_union_vector@@Base+0x60>
   3b938:	mov	r3, r8
   3b93c:	b	3b91c <flatcc_builder_append_union_vector@@Base+0x80>
   3b940:	bl	142d0 <__assert_fail@plt+0x190>
   3b944:	ldr	r3, [pc, #32]	; 3b96c <flatcc_builder_append_union_vector@@Base+0xd0>
   3b948:	ldr	r1, [pc, #32]	; 3b970 <flatcc_builder_append_union_vector@@Base+0xd4>
   3b94c:	add	r3, pc, r3
   3b950:	ldr	r0, [pc, #28]	; 3b974 <flatcc_builder_append_union_vector@@Base+0xd8>
   3b954:	add	r3, r3, #1072	; 0x430
   3b958:	ldr	r2, [pc, #24]	; 3b978 <flatcc_builder_append_union_vector@@Base+0xdc>
   3b95c:	add	r3, r3, #4
   3b960:	add	r1, pc, r1
   3b964:	add	r0, pc, r0
   3b968:	bl	14140 <__assert_fail@plt>
   3b96c:	muleq	r1, r0, r9
   3b970:	andeq	pc, r1, ip, asr #1
   3b974:	andeq	pc, r1, r4, ror #7
   3b978:	muleq	r0, ip, r6

0003b97c <flatcc_builder_create_string@@Base>:
   3b97c:	push	{r4, r5, r6, lr}
   3b980:	sub	sp, sp, #88	; 0x58
   3b984:	ldr	lr, [r0, #136]	; 0x88
   3b988:	mov	r4, r0
   3b98c:	add	r0, sp, #88	; 0x58
   3b990:	cmp	r2, #0
   3b994:	sub	r3, lr, r2
   3b998:	str	r2, [r0, #-76]!	; 0xffffffb4
   3b99c:	sub	r3, r3, #1
   3b9a0:	str	r0, [sp, #24]
   3b9a4:	ldr	r5, [pc, #188]	; 3ba68 <flatcc_builder_create_string@@Base+0xec>
   3b9a8:	moveq	r0, #1
   3b9ac:	strne	r1, [sp, #32]
   3b9b0:	mov	ip, #4
   3b9b4:	moveq	r1, r0
   3b9b8:	movne	r1, #2
   3b9bc:	and	r3, r3, #3
   3b9c0:	ldr	r0, [pc, #164]	; 3ba6c <flatcc_builder_create_string@@Base+0xf0>
   3b9c4:	str	ip, [sp, #28]
   3b9c8:	add	r5, pc, r5
   3b9cc:	addne	ip, r2, ip
   3b9d0:	add	r3, r3, #1
   3b9d4:	add	r1, r1, #1
   3b9d8:	add	ip, ip, r3
   3b9dc:	add	r6, sp, #88	; 0x58
   3b9e0:	strne	r2, [sp, #36]	; 0x24
   3b9e4:	add	r1, r6, r1, lsl #3
   3b9e8:	str	ip, [sp, #16]
   3b9ec:	ldr	r0, [r5, r0]
   3b9f0:	sub	r5, lr, ip
   3b9f4:	movne	r2, #3
   3b9f8:	moveq	r2, #2
   3b9fc:	cmp	lr, r5
   3ba00:	str	r0, [r1, #-72]	; 0xffffffb8
   3ba04:	str	r3, [r1, #-68]	; 0xffffffbc
   3ba08:	str	r2, [sp, #20]
   3ba0c:	ble	3ba40 <flatcc_builder_create_string@@Base+0xc4>
   3ba10:	ldr	r0, [r4, #36]	; 0x24
   3ba14:	mov	r3, r5
   3ba18:	str	ip, [sp]
   3ba1c:	add	r1, sp, #24
   3ba20:	ldr	r6, [r4, #44]	; 0x2c
   3ba24:	blx	r6
   3ba28:	cmp	r0, #0
   3ba2c:	bne	3ba44 <flatcc_builder_create_string@@Base+0xc8>
   3ba30:	mov	r0, r5
   3ba34:	str	r5, [r4, #136]	; 0x88
   3ba38:	add	sp, sp, #88	; 0x58
   3ba3c:	pop	{r4, r5, r6, pc}
   3ba40:	bl	14298 <__assert_fail@plt+0x158>
   3ba44:	ldr	r3, [pc, #36]	; 3ba70 <flatcc_builder_create_string@@Base+0xf4>
   3ba48:	ldr	r1, [pc, #36]	; 3ba74 <flatcc_builder_create_string@@Base+0xf8>
   3ba4c:	ldr	r0, [pc, #36]	; 3ba78 <flatcc_builder_create_string@@Base+0xfc>
   3ba50:	add	r3, pc, r3
   3ba54:	ldr	r2, [pc, #32]	; 3ba7c <flatcc_builder_create_string@@Base+0x100>
   3ba58:	add	r3, r3, #28
   3ba5c:	add	r1, pc, r1
   3ba60:	add	r0, pc, r0
   3ba64:	bl	14140 <__assert_fail@plt>
   3ba68:	andeq	pc, r2, r0, lsr r6	; <UNPREDICTABLE>
   3ba6c:	muleq	r0, ip, r0
   3ba70:	andeq	lr, r1, ip, lsl #17
   3ba74:	ldrdeq	lr, [r1], -r0
   3ba78:	andeq	sp, r0, ip, asr r8
   3ba7c:	andeq	r0, r0, fp, lsl #5

0003ba80 <flatcc_builder_create_string_str@@Base>:
   3ba80:	push	{r4, r5, r6, lr}
   3ba84:	mov	r5, r0
   3ba88:	mov	r0, r1
   3ba8c:	mov	r4, r1
   3ba90:	bl	14074 <strlen@plt>
   3ba94:	mov	r1, r4
   3ba98:	mov	r2, r0
   3ba9c:	mov	r0, r5
   3baa0:	pop	{r4, r5, r6, lr}
   3baa4:	b	3b97c <flatcc_builder_create_string@@Base>

0003baa8 <flatcc_builder_create_string_strn@@Base>:
   3baa8:	push	{r4, r5, r6, lr}
   3baac:	mov	r4, r1
   3bab0:	mov	r6, r0
   3bab4:	mov	r1, #0
   3bab8:	mov	r0, r4
   3babc:	mov	r5, r2
   3bac0:	bl	140c8 <memchr@plt>
   3bac4:	mov	r1, r4
   3bac8:	cmp	r0, #0
   3bacc:	subne	r5, r0, r4
   3bad0:	mov	r2, r5
   3bad4:	mov	r0, r6
   3bad8:	pop	{r4, r5, r6, lr}
   3badc:	b	3b97c <flatcc_builder_create_string@@Base>

0003bae0 <flatcc_builder_end_string@@Base>:
   3bae0:	ldr	r3, [r0, #32]
   3bae4:	push	{r4, r5, r6, lr}
   3bae8:	ldrh	r2, [r3, #14]
   3baec:	cmp	r2, #6
   3baf0:	bne	3bbc0 <flatcc_builder_end_string@@Base+0xe0>
   3baf4:	ldr	r2, [r3, #20]
   3baf8:	ldr	r3, [r0, #20]
   3bafc:	mov	r4, r0
   3bb00:	cmp	r2, r3
   3bb04:	bne	3bb98 <flatcc_builder_end_string@@Base+0xb8>
   3bb08:	ldr	r1, [r0, #16]
   3bb0c:	bl	3b97c <flatcc_builder_create_string@@Base>
   3bb10:	subs	r5, r0, #0
   3bb14:	beq	3bb90 <flatcc_builder_end_string@@Base+0xb0>
   3bb18:	ldr	r2, [r4, #20]
   3bb1c:	mov	r1, #0
   3bb20:	ldr	r0, [r4, #16]
   3bb24:	bl	140a4 <memset@plt>
   3bb28:	ldr	r3, [r4, #32]
   3bb2c:	ldr	r2, [r4, #64]	; 0x40
   3bb30:	ldrh	lr, [r4, #130]	; 0x82
   3bb34:	ldr	ip, [r3]
   3bb38:	ldr	r1, [r3, #4]
   3bb3c:	ldrh	r0, [r4, #128]	; 0x80
   3bb40:	sub	r2, r2, ip
   3bb44:	cmp	r2, r1
   3bb48:	movcs	r2, r1
   3bb4c:	cmp	r0, lr
   3bb50:	ldr	r0, [r4, #60]	; 0x3c
   3bb54:	ldr	r6, [r3, #8]
   3bb58:	str	r2, [r4, #24]
   3bb5c:	add	r2, r0, ip
   3bb60:	str	r2, [r4, #16]
   3bb64:	str	r6, [r4, #20]
   3bb68:	ldr	r2, [r4, #156]	; 0x9c
   3bb6c:	str	ip, [r4, #28]
   3bb70:	str	r1, [r3, #4]
   3bb74:	strhcc	lr, [r4, #128]	; 0x80
   3bb78:	ldrh	r1, [r3, #12]
   3bb7c:	sub	r2, r2, #1
   3bb80:	sub	r3, r3, #36	; 0x24
   3bb84:	str	r2, [r4, #156]	; 0x9c
   3bb88:	strh	r1, [r4, #130]	; 0x82
   3bb8c:	str	r3, [r4, #32]
   3bb90:	mov	r0, r5
   3bb94:	pop	{r4, r5, r6, pc}
   3bb98:	ldr	r3, [pc, #72]	; 3bbe8 <flatcc_builder_end_string@@Base+0x108>
   3bb9c:	ldr	r1, [pc, #72]	; 3bbec <flatcc_builder_end_string@@Base+0x10c>
   3bba0:	add	r3, pc, r3
   3bba4:	ldr	r0, [pc, #68]	; 3bbf0 <flatcc_builder_end_string@@Base+0x110>
   3bba8:	add	r3, r3, #1104	; 0x450
   3bbac:	ldr	r2, [pc, #64]	; 3bbf4 <flatcc_builder_end_string@@Base+0x114>
   3bbb0:	add	r3, r3, #8
   3bbb4:	add	r1, pc, r1
   3bbb8:	add	r0, pc, r0
   3bbbc:	bl	14140 <__assert_fail@plt>
   3bbc0:	ldr	r3, [pc, #48]	; 3bbf8 <flatcc_builder_end_string@@Base+0x118>
   3bbc4:	ldr	r1, [pc, #48]	; 3bbfc <flatcc_builder_end_string@@Base+0x11c>
   3bbc8:	add	r3, pc, r3
   3bbcc:	ldr	r0, [pc, #44]	; 3bc00 <flatcc_builder_end_string@@Base+0x120>
   3bbd0:	add	r3, r3, #1104	; 0x450
   3bbd4:	ldr	r2, [pc, #40]	; 3bc04 <flatcc_builder_end_string@@Base+0x124>
   3bbd8:	add	r3, r3, #8
   3bbdc:	add	r1, pc, r1
   3bbe0:	add	r0, pc, r0
   3bbe4:	bl	14140 <__assert_fail@plt>
   3bbe8:	andeq	lr, r1, ip, lsr r7
   3bbec:	andeq	lr, r1, r8, ror lr
   3bbf0:	andeq	pc, r1, r4, asr #3
   3bbf4:	andeq	r0, r0, r5, asr #13
   3bbf8:	andeq	lr, r1, r4, lsl r7
   3bbfc:	andeq	lr, r1, r0, asr lr
   3bc00:	andeq	pc, r1, ip, lsr r0	; <UNPREDICTABLE>
   3bc04:	andeq	r0, r0, r4, asr #13

0003bc08 <flatcc_builder_string_edit@@Base>:
   3bc08:	ldr	r0, [r0, #16]
   3bc0c:	bx	lr

0003bc10 <flatcc_builder_string_len@@Base>:
   3bc10:	ldr	r3, [r0, #32]
   3bc14:	ldr	r0, [r3, #20]
   3bc18:	bx	lr

0003bc1c <flatcc_builder_table_add@@Base>:
   3bc1c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3bc20:	mov	r4, r0
   3bc24:	ldr	r0, [r0, #32]
   3bc28:	ldrh	r0, [r0, #14]
   3bc2c:	cmp	r0, #3
   3bc30:	bne	3bd48 <flatcc_builder_table_add@@Base+0x12c>
   3bc34:	ldr	r0, [pc, #308]	; 3bd70 <flatcc_builder_table_add@@Base+0x154>
   3bc38:	cmp	r1, r0
   3bc3c:	bhi	3bd20 <flatcc_builder_table_add@@Base+0x104>
   3bc40:	ldrh	r0, [r4, #130]	; 0x82
   3bc44:	lsl	r8, r1, #1
   3bc48:	cmp	r0, r3
   3bc4c:	ldr	r0, [r4, #4]
   3bc50:	strhcc	r3, [r4, #130]	; 0x82
   3bc54:	add	lr, r0, r8
   3bc58:	ldrh	r7, [r0, r8]
   3bc5c:	cmp	r7, #0
   3bc60:	bne	3bcf8 <flatcc_builder_table_add@@Base+0xdc>
   3bc64:	ldr	ip, [r4, #12]
   3bc68:	ldr	r9, [pc, #260]	; 3bd74 <flatcc_builder_table_add@@Base+0x158>
   3bc6c:	eor	ip, ip, r1
   3bc70:	ldr	r0, [r4, #20]
   3bc74:	mul	ip, r9, ip
   3bc78:	sub	r6, r3, #1
   3bc7c:	eor	ip, ip, r2
   3bc80:	rsb	r3, r3, #0
   3bc84:	add	r6, r6, r0
   3bc88:	and	r6, r6, r3
   3bc8c:	mul	ip, r9, ip
   3bc90:	ldr	r3, [r4, #24]
   3bc94:	add	r2, r2, r6
   3bc98:	cmp	r2, r3
   3bc9c:	uxth	r5, r1
   3bca0:	str	ip, [r4, #12]
   3bca4:	str	r2, [r4, #20]
   3bca8:	bcs	3bcd0 <flatcc_builder_table_add@@Base+0xb4>
   3bcac:	add	r3, r6, #4
   3bcb0:	strh	r3, [lr]
   3bcb4:	ldrh	r3, [r4, #8]
   3bcb8:	ldr	r0, [r4, #16]
   3bcbc:	cmp	r3, r5
   3bcc0:	addls	r5, r5, #1
   3bcc4:	strhls	r5, [r4, #8]
   3bcc8:	add	r0, r0, r6
   3bccc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3bcd0:	add	r1, r2, #1
   3bcd4:	mov	r0, r4
   3bcd8:	ldr	r2, [pc, #152]	; 3bd78 <flatcc_builder_table_add@@Base+0x15c>
   3bcdc:	bl	383b4 <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   3bce0:	cmp	r0, #0
   3bce4:	ldreq	lr, [r4, #4]
   3bce8:	addeq	lr, lr, r8
   3bcec:	beq	3bcac <flatcc_builder_table_add@@Base+0x90>
   3bcf0:	mov	r0, r7
   3bcf4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3bcf8:	ldr	r3, [pc, #124]	; 3bd7c <flatcc_builder_table_add@@Base+0x160>
   3bcfc:	ldr	r1, [pc, #124]	; 3bd80 <flatcc_builder_table_add@@Base+0x164>
   3bd00:	add	r3, pc, r3
   3bd04:	ldr	r0, [pc, #120]	; 3bd84 <flatcc_builder_table_add@@Base+0x168>
   3bd08:	add	r3, r3, #1136	; 0x470
   3bd0c:	ldr	r2, [pc, #116]	; 3bd88 <flatcc_builder_table_add@@Base+0x16c>
   3bd10:	add	r3, r3, #4
   3bd14:	add	r1, pc, r1
   3bd18:	add	r0, pc, r0
   3bd1c:	bl	14140 <__assert_fail@plt>
   3bd20:	ldr	r3, [pc, #100]	; 3bd8c <flatcc_builder_table_add@@Base+0x170>
   3bd24:	ldr	r1, [pc, #100]	; 3bd90 <flatcc_builder_table_add@@Base+0x174>
   3bd28:	add	r3, pc, r3
   3bd2c:	ldr	r0, [pc, #96]	; 3bd94 <flatcc_builder_table_add@@Base+0x178>
   3bd30:	add	r3, r3, #1136	; 0x470
   3bd34:	ldr	r2, [pc, #92]	; 3bd98 <flatcc_builder_table_add@@Base+0x17c>
   3bd38:	add	r3, r3, #4
   3bd3c:	add	r1, pc, r1
   3bd40:	add	r0, pc, r0
   3bd44:	bl	14140 <__assert_fail@plt>
   3bd48:	ldr	r3, [pc, #76]	; 3bd9c <flatcc_builder_table_add@@Base+0x180>
   3bd4c:	ldr	r1, [pc, #76]	; 3bda0 <flatcc_builder_table_add@@Base+0x184>
   3bd50:	add	r3, pc, r3
   3bd54:	ldr	r0, [pc, #72]	; 3bda4 <flatcc_builder_table_add@@Base+0x188>
   3bd58:	add	r3, r3, #1136	; 0x470
   3bd5c:	ldr	r2, [pc, #68]	; 3bda8 <flatcc_builder_table_add@@Base+0x18c>
   3bd60:	add	r3, r3, #4
   3bd64:	add	r1, pc, r1
   3bd68:	add	r0, pc, r0
   3bd6c:	bl	14140 <__assert_fail@plt>
   3bd70:	strdeq	r7, [r0], -ip
   3bd74:			; <UNDEFINED> instruction: 0x9e3779b1
   3bd78:	strdeq	pc, [r0], -ip
   3bd7c:	ldrdeq	lr, [r1], -ip
   3bd80:	andeq	lr, r1, r8, lsl sp
   3bd84:	andeq	sp, r0, r4, lsr #11
   3bd88:	strdeq	r0, [r0], -r8
   3bd8c:			; <UNDEFINED> instruction: 0x0001e5b4
   3bd90:	strdeq	lr, [r1], -r0
   3bd94:	andeq	pc, r1, r0, rrx
   3bd98:	andeq	r0, r0, lr, ror #13
   3bd9c:	andeq	lr, r1, ip, lsl #11
   3bda0:	andeq	lr, r1, r8, asr #25
   3bda4:	andeq	lr, r1, r0, lsr #31
   3bda8:	andeq	r0, r0, sp, ror #13

0003bdac <flatcc_builder_table_edit@@Base>:
   3bdac:	ldr	r3, [r0, #32]
   3bdb0:	ldrh	r3, [r3, #14]
   3bdb4:	cmp	r3, #3
   3bdb8:	bne	3bdd0 <flatcc_builder_table_edit@@Base+0x24>
   3bdbc:	ldr	r3, [r0, #20]
   3bdc0:	ldr	r0, [r0, #16]
   3bdc4:	sub	r1, r3, r1
   3bdc8:	add	r0, r0, r1
   3bdcc:	bx	lr
   3bdd0:	ldr	r3, [pc, #32]	; 3bdf8 <flatcc_builder_table_edit@@Base+0x4c>
   3bdd4:	ldr	r1, [pc, #32]	; 3bdfc <flatcc_builder_table_edit@@Base+0x50>
   3bdd8:	ldr	r0, [pc, #32]	; 3be00 <flatcc_builder_table_edit@@Base+0x54>
   3bddc:	add	r3, pc, r3
   3bde0:	push	{r4, lr}
   3bde4:	add	r3, r3, #1168	; 0x490
   3bde8:	ldr	r2, [pc, #20]	; 3be04 <flatcc_builder_table_edit@@Base+0x58>
   3bdec:	add	r1, pc, r1
   3bdf0:	add	r0, pc, r0
   3bdf4:	bl	14140 <__assert_fail@plt>
   3bdf8:	andeq	lr, r1, r0, lsl #10
   3bdfc:	andeq	lr, r1, r0, asr #24
   3be00:	andeq	lr, r1, r8, lsl pc
   3be04:	andeq	r0, r0, r2, lsl #14

0003be08 <flatcc_builder_table_add_copy@@Base>:
   3be08:	push	{r4, r5, r6, lr}
   3be0c:	mov	r4, r3
   3be10:	mov	r6, r2
   3be14:	ldrh	r3, [sp, #16]
   3be18:	mov	r2, r4
   3be1c:	bl	3bc1c <flatcc_builder_table_add@@Base>
   3be20:	subs	r5, r0, #0
   3be24:	beq	3be34 <flatcc_builder_table_add_copy@@Base+0x2c>
   3be28:	mov	r2, r4
   3be2c:	mov	r1, r6
   3be30:	bl	13fd8 <memcpy@plt>
   3be34:	mov	r0, r5
   3be38:	pop	{r4, r5, r6, pc}

0003be3c <flatcc_builder_table_add_offset@@Base>:
   3be3c:	ldr	r3, [r0, #32]
   3be40:	push	{r4, r5, r6, r7, r8, lr}
   3be44:	ldrh	r3, [r3, #14]
   3be48:	cmp	r3, #3
   3be4c:	bne	3bf64 <flatcc_builder_table_add_offset@@Base+0x128>
   3be50:	ldr	r3, [pc, #308]	; 3bf8c <flatcc_builder_table_add_offset@@Base+0x150>
   3be54:	cmp	r1, r3
   3be58:	bhi	3bf3c <flatcc_builder_table_add_offset@@Base+0x100>
   3be5c:	ldr	r3, [r0, #4]
   3be60:	lsl	r7, r1, #1
   3be64:	mov	r4, r0
   3be68:	ldrh	r6, [r3, r7]
   3be6c:	add	ip, r3, r7
   3be70:	cmp	r6, #0
   3be74:	bne	3bf14 <flatcc_builder_table_add_offset@@Base+0xd8>
   3be78:	ldr	r3, [r0, #12]
   3be7c:	ldr	r2, [pc, #268]	; 3bf90 <flatcc_builder_table_add_offset@@Base+0x154>
   3be80:	eor	r3, r3, r1
   3be84:	ldr	r5, [r0, #20]
   3be88:	mul	r3, r2, r3
   3be8c:	add	r5, r5, #3
   3be90:	eor	r3, r3, #4
   3be94:	bic	r5, r5, #3
   3be98:	mul	r3, r2, r3
   3be9c:	ldr	lr, [r0, #24]
   3bea0:	add	r2, r5, #4
   3bea4:	cmp	r2, lr
   3bea8:	uxth	r8, r1
   3beac:	str	r3, [r0, #12]
   3beb0:	str	r2, [r0, #20]
   3beb4:	bhi	3bef0 <flatcc_builder_table_add_offset@@Base+0xb4>
   3beb8:	uxth	r2, r5
   3bebc:	add	r3, r2, #4
   3bec0:	strh	r3, [ip]
   3bec4:	ldrh	r3, [r4, #8]
   3bec8:	ldr	r0, [r4, #16]
   3becc:	cmp	r3, r8
   3bed0:	ldr	r3, [r4]
   3bed4:	addls	r1, r8, #1
   3bed8:	strhls	r1, [r4, #8]
   3bedc:	add	r1, r3, #2
   3bee0:	str	r1, [r4]
   3bee4:	add	r0, r0, r5
   3bee8:	strh	r2, [r3]
   3beec:	pop	{r4, r5, r6, r7, r8, pc}
   3bef0:	mov	r1, r2
   3bef4:	ldr	r2, [pc, #152]	; 3bf94 <flatcc_builder_table_add_offset@@Base+0x158>
   3bef8:	bl	383b4 <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   3befc:	cmp	r0, #0
   3bf00:	ldreq	ip, [r4, #4]
   3bf04:	addeq	ip, ip, r7
   3bf08:	beq	3beb8 <flatcc_builder_table_add_offset@@Base+0x7c>
   3bf0c:	mov	r0, r6
   3bf10:	pop	{r4, r5, r6, r7, r8, pc}
   3bf14:	ldr	r3, [pc, #124]	; 3bf98 <flatcc_builder_table_add_offset@@Base+0x15c>
   3bf18:	ldr	r1, [pc, #124]	; 3bf9c <flatcc_builder_table_add_offset@@Base+0x160>
   3bf1c:	add	r3, pc, r3
   3bf20:	ldr	r0, [pc, #120]	; 3bfa0 <flatcc_builder_table_add_offset@@Base+0x164>
   3bf24:	add	r3, r3, #1184	; 0x4a0
   3bf28:	ldr	r2, [pc, #116]	; 3bfa4 <flatcc_builder_table_add_offset@@Base+0x168>
   3bf2c:	add	r3, r3, #12
   3bf30:	add	r1, pc, r1
   3bf34:	add	r0, pc, r0
   3bf38:	bl	14140 <__assert_fail@plt>
   3bf3c:	ldr	r3, [pc, #100]	; 3bfa8 <flatcc_builder_table_add_offset@@Base+0x16c>
   3bf40:	ldr	r1, [pc, #100]	; 3bfac <flatcc_builder_table_add_offset@@Base+0x170>
   3bf44:	add	r3, pc, r3
   3bf48:	ldr	r0, [pc, #96]	; 3bfb0 <flatcc_builder_table_add_offset@@Base+0x174>
   3bf4c:	add	r3, r3, #1184	; 0x4a0
   3bf50:	ldr	r2, [pc, #92]	; 3bfb4 <flatcc_builder_table_add_offset@@Base+0x178>
   3bf54:	add	r3, r3, #12
   3bf58:	add	r1, pc, r1
   3bf5c:	add	r0, pc, r0
   3bf60:	bl	14140 <__assert_fail@plt>
   3bf64:	ldr	r3, [pc, #76]	; 3bfb8 <flatcc_builder_table_add_offset@@Base+0x17c>
   3bf68:	ldr	r1, [pc, #76]	; 3bfbc <flatcc_builder_table_add_offset@@Base+0x180>
   3bf6c:	add	r3, pc, r3
   3bf70:	ldr	r0, [pc, #72]	; 3bfc0 <flatcc_builder_table_add_offset@@Base+0x184>
   3bf74:	add	r3, r3, #1184	; 0x4a0
   3bf78:	ldr	r2, [pc, #68]	; 3bfc4 <flatcc_builder_table_add_offset@@Base+0x188>
   3bf7c:	add	r3, r3, #12
   3bf80:	add	r1, pc, r1
   3bf84:	add	r0, pc, r0
   3bf88:	bl	14140 <__assert_fail@plt>
   3bf8c:	strdeq	r7, [r0], -ip
   3bf90:			; <UNDEFINED> instruction: 0x9e3779b1
   3bf94:	strdeq	pc, [r0], -ip
   3bf98:	andeq	lr, r1, r0, asr #7
   3bf9c:	strdeq	lr, [r1], -ip
   3bfa0:	andeq	sp, r0, r8, lsl #7
   3bfa4:	andeq	r0, r0, fp, lsl r7
   3bfa8:	muleq	r1, r8, r3
   3bfac:	ldrdeq	lr, [r1], -r4
   3bfb0:	andeq	lr, r1, r4, asr #28
   3bfb4:	andeq	r0, r0, r4, lsl r7
   3bfb8:	andeq	lr, r1, r0, ror r3
   3bfbc:	andeq	lr, r1, ip, lsr #21
   3bfc0:	andeq	lr, r1, r4, lsl #27
   3bfc4:	andeq	r0, r0, r3, lsl r7

0003bfc8 <flatcc_builder_table_add_union@@Base>:
   3bfc8:	push	{r4, r5, r6, r7, lr}
   3bfcc:	sub	sp, sp, #12
   3bfd0:	add	ip, sp, #8
   3bfd4:	stmdb	ip, {r2, r3}
   3bfd8:	ldr	r3, [r0, #32]
   3bfdc:	ldrb	r5, [sp]
   3bfe0:	ldr	r6, [sp, #4]
   3bfe4:	ldrh	r3, [r3, #14]
   3bfe8:	cmp	r3, #3
   3bfec:	bne	3c074 <flatcc_builder_table_add_union@@Base+0xac>
   3bff0:	cmp	r5, #0
   3bff4:	mov	r4, r0
   3bff8:	mov	r7, r1
   3bffc:	beq	3c044 <flatcc_builder_table_add_union@@Base+0x7c>
   3c000:	cmp	r6, #0
   3c004:	beq	3c018 <flatcc_builder_table_add_union@@Base+0x50>
   3c008:	bl	3be3c <flatcc_builder_table_add_offset@@Base>
   3c00c:	cmp	r0, #0
   3c010:	strne	r6, [r0]
   3c014:	beq	3c0c4 <flatcc_builder_table_add_union@@Base+0xfc>
   3c018:	mov	r3, #1
   3c01c:	sub	r1, r7, #1
   3c020:	mov	r0, r4
   3c024:	mov	r2, r3
   3c028:	bl	3bc1c <flatcc_builder_table_add@@Base>
   3c02c:	cmp	r0, #0
   3c030:	beq	3c09c <flatcc_builder_table_add_union@@Base+0xd4>
   3c034:	strb	r5, [r0]
   3c038:	mov	r0, #0
   3c03c:	add	sp, sp, #12
   3c040:	pop	{r4, r5, r6, r7, pc}
   3c044:	cmp	r6, #0
   3c048:	beq	3c018 <flatcc_builder_table_add_union@@Base+0x50>
   3c04c:	ldr	r3, [pc, #152]	; 3c0ec <flatcc_builder_table_add_union@@Base+0x124>
   3c050:	ldr	r1, [pc, #152]	; 3c0f0 <flatcc_builder_table_add_union@@Base+0x128>
   3c054:	add	r3, pc, r3
   3c058:	ldr	r0, [pc, #148]	; 3c0f4 <flatcc_builder_table_add_union@@Base+0x12c>
   3c05c:	add	r3, r3, #1216	; 0x4c0
   3c060:	ldr	r2, [pc, #144]	; 3c0f8 <flatcc_builder_table_add_union@@Base+0x130>
   3c064:	add	r3, r3, #12
   3c068:	add	r1, pc, r1
   3c06c:	add	r0, pc, r0
   3c070:	bl	14140 <__assert_fail@plt>
   3c074:	ldr	r3, [pc, #128]	; 3c0fc <flatcc_builder_table_add_union@@Base+0x134>
   3c078:	ldr	r1, [pc, #128]	; 3c100 <flatcc_builder_table_add_union@@Base+0x138>
   3c07c:	add	r3, pc, r3
   3c080:	ldr	r0, [pc, #124]	; 3c104 <flatcc_builder_table_add_union@@Base+0x13c>
   3c084:	add	r3, r3, #1216	; 0x4c0
   3c088:	ldr	r2, [pc, #120]	; 3c108 <flatcc_builder_table_add_union@@Base+0x140>
   3c08c:	add	r3, r3, #12
   3c090:	add	r1, pc, r1
   3c094:	add	r0, pc, r0
   3c098:	bl	14140 <__assert_fail@plt>
   3c09c:	ldr	r3, [pc, #104]	; 3c10c <flatcc_builder_table_add_union@@Base+0x144>
   3c0a0:	ldr	r1, [pc, #104]	; 3c110 <flatcc_builder_table_add_union@@Base+0x148>
   3c0a4:	add	r3, pc, r3
   3c0a8:	ldr	r0, [pc, #100]	; 3c114 <flatcc_builder_table_add_union@@Base+0x14c>
   3c0ac:	add	r3, r3, #1216	; 0x4c0
   3c0b0:	ldr	r2, [pc, #96]	; 3c118 <flatcc_builder_table_add_union@@Base+0x150>
   3c0b4:	add	r3, r3, #12
   3c0b8:	add	r1, pc, r1
   3c0bc:	add	r0, pc, r0
   3c0c0:	bl	14140 <__assert_fail@plt>
   3c0c4:	ldr	r3, [pc, #80]	; 3c11c <flatcc_builder_table_add_union@@Base+0x154>
   3c0c8:	ldr	r1, [pc, #80]	; 3c120 <flatcc_builder_table_add_union@@Base+0x158>
   3c0cc:	add	r3, pc, r3
   3c0d0:	ldr	r0, [pc, #76]	; 3c124 <flatcc_builder_table_add_union@@Base+0x15c>
   3c0d4:	add	r3, r3, #1216	; 0x4c0
   3c0d8:	ldr	r2, [pc, #72]	; 3c128 <flatcc_builder_table_add_union@@Base+0x160>
   3c0dc:	add	r3, r3, #12
   3c0e0:	add	r1, pc, r1
   3c0e4:	add	r0, pc, r0
   3c0e8:	bl	14140 <__assert_fail@plt>
   3c0ec:	andeq	lr, r1, r8, lsl #5
   3c0f0:	andeq	lr, r1, r4, asr #19
   3c0f4:	andeq	lr, r1, r8, ror sp
   3c0f8:	andeq	r0, r0, pc, ror #11
   3c0fc:	andeq	lr, r1, r0, ror #4
   3c100:	muleq	r1, ip, r9
   3c104:	andeq	lr, r1, r4, ror ip
   3c108:	andeq	r0, r0, lr, ror #11
   3c10c:	andeq	lr, r1, r8, lsr r2
   3c110:	andeq	lr, r1, r4, ror r9
   3c114:	andeq	lr, r1, r8, asr sp
   3c118:	strdeq	r0, [r0], -r6
   3c11c:	andeq	lr, r1, r0, lsl r2
   3c120:	andeq	lr, r1, ip, asr #18
   3c124:	andeq	lr, r1, r4, lsr #26
   3c128:	strdeq	r0, [r0], -r2

0003c12c <flatcc_builder_table_add_union_vector@@Base>:
   3c12c:	push	{r4, r5, r6, r7, lr}
   3c130:	sub	sp, sp, #12
   3c134:	add	ip, sp, #8
   3c138:	stmdb	ip, {r2, r3}
   3c13c:	ldr	r3, [r0, #32]
   3c140:	ldr	r4, [sp]
   3c144:	ldr	r6, [sp, #4]
   3c148:	ldrh	r3, [r3, #14]
   3c14c:	cmp	r3, #3
   3c150:	bne	3c1f4 <flatcc_builder_table_add_union_vector@@Base+0xc8>
   3c154:	clz	r3, r6
   3c158:	clz	r2, r4
   3c15c:	lsr	r3, r3, #5
   3c160:	lsr	r2, r2, #5
   3c164:	cmp	r2, r3
   3c168:	beq	3c188 <flatcc_builder_table_add_union_vector@@Base+0x5c>
   3c16c:	adds	r4, r4, #0
   3c170:	movne	r4, #1
   3c174:	cmp	r4, r3
   3c178:	mvnne	r0, #0
   3c17c:	beq	3c21c <flatcc_builder_table_add_union_vector@@Base+0xf0>
   3c180:	add	sp, sp, #12
   3c184:	pop	{r4, r5, r6, r7, pc}
   3c188:	cmp	r4, #0
   3c18c:	moveq	r0, r4
   3c190:	beq	3c180 <flatcc_builder_table_add_union_vector@@Base+0x54>
   3c194:	mov	r7, r1
   3c198:	sub	r1, r1, #1
   3c19c:	mov	r5, r0
   3c1a0:	bl	3be3c <flatcc_builder_table_add_offset@@Base>
   3c1a4:	cmp	r0, #0
   3c1a8:	beq	3c244 <flatcc_builder_table_add_union_vector@@Base+0x118>
   3c1ac:	str	r4, [r0]
   3c1b0:	mov	r1, r7
   3c1b4:	mov	r0, r5
   3c1b8:	bl	3be3c <flatcc_builder_table_add_offset@@Base>
   3c1bc:	cmp	r0, #0
   3c1c0:	strne	r6, [r0]
   3c1c4:	movne	r0, #0
   3c1c8:	bne	3c180 <flatcc_builder_table_add_union_vector@@Base+0x54>
   3c1cc:	ldr	r3, [pc, #152]	; 3c26c <flatcc_builder_table_add_union_vector@@Base+0x140>
   3c1d0:	ldr	r1, [pc, #152]	; 3c270 <flatcc_builder_table_add_union_vector@@Base+0x144>
   3c1d4:	add	r3, pc, r3
   3c1d8:	ldr	r0, [pc, #148]	; 3c274 <flatcc_builder_table_add_union_vector@@Base+0x148>
   3c1dc:	add	r3, r3, #1248	; 0x4e0
   3c1e0:	ldr	r2, [pc, #144]	; 3c278 <flatcc_builder_table_add_union_vector@@Base+0x14c>
   3c1e4:	add	r3, r3, #12
   3c1e8:	add	r1, pc, r1
   3c1ec:	add	r0, pc, r0
   3c1f0:	bl	14140 <__assert_fail@plt>
   3c1f4:	ldr	r3, [pc, #128]	; 3c27c <flatcc_builder_table_add_union_vector@@Base+0x150>
   3c1f8:	ldr	r1, [pc, #128]	; 3c280 <flatcc_builder_table_add_union_vector@@Base+0x154>
   3c1fc:	add	r3, pc, r3
   3c200:	ldr	r0, [pc, #124]	; 3c284 <flatcc_builder_table_add_union_vector@@Base+0x158>
   3c204:	add	r3, r3, #1248	; 0x4e0
   3c208:	mov	r2, #1536	; 0x600
   3c20c:	add	r3, r3, #12
   3c210:	add	r1, pc, r1
   3c214:	add	r0, pc, r0
   3c218:	bl	14140 <__assert_fail@plt>
   3c21c:	ldr	r3, [pc, #100]	; 3c288 <flatcc_builder_table_add_union_vector@@Base+0x15c>
   3c220:	ldr	r1, [pc, #100]	; 3c28c <flatcc_builder_table_add_union_vector@@Base+0x160>
   3c224:	add	r3, pc, r3
   3c228:	ldr	r0, [pc, #96]	; 3c290 <flatcc_builder_table_add_union_vector@@Base+0x164>
   3c22c:	add	r3, r3, #1248	; 0x4e0
   3c230:	ldr	r2, [pc, #92]	; 3c294 <flatcc_builder_table_add_union_vector@@Base+0x168>
   3c234:	add	r3, r3, #12
   3c238:	add	r1, pc, r1
   3c23c:	add	r0, pc, r0
   3c240:	bl	14140 <__assert_fail@plt>
   3c244:	ldr	r3, [pc, #76]	; 3c298 <flatcc_builder_table_add_union_vector@@Base+0x16c>
   3c248:	ldr	r1, [pc, #76]	; 3c29c <flatcc_builder_table_add_union_vector@@Base+0x170>
   3c24c:	add	r3, pc, r3
   3c250:	ldr	r0, [pc, #72]	; 3c2a0 <flatcc_builder_table_add_union_vector@@Base+0x174>
   3c254:	add	r3, r3, #1248	; 0x4e0
   3c258:	ldr	r2, [pc, #68]	; 3c2a4 <flatcc_builder_table_add_union_vector@@Base+0x178>
   3c25c:	add	r3, r3, #12
   3c260:	add	r1, pc, r1
   3c264:	add	r0, pc, r0
   3c268:	bl	14140 <__assert_fail@plt>
   3c26c:	andeq	lr, r1, r8, lsl #2
   3c270:	andeq	lr, r1, r4, asr #16
   3c274:	andeq	lr, r1, ip, lsl ip
   3c278:	andeq	r0, r0, r8, lsl #12
   3c27c:	andeq	lr, r1, r0, ror #1
   3c280:	andeq	lr, r1, ip, lsl r8
   3c284:	strdeq	lr, [r1], -r4
   3c288:	strheq	lr, [r1], -r8
   3c28c:	strdeq	lr, [r1], -r4
   3c290:	andeq	lr, r1, r4, ror #23
   3c294:	andeq	r0, r0, r1, lsl #12
   3c298:	muleq	r1, r0, r0
   3c29c:	andeq	lr, r1, ip, asr #15
   3c2a0:	andeq	lr, r1, r4, lsr #23
   3c2a4:	andeq	r0, r0, r4, lsl #12

0003c2a8 <flatcc_builder_push_buffer_alignment@@Base>:
   3c2a8:	mov	r3, r0
   3c2ac:	mov	r2, #4
   3c2b0:	ldrh	r0, [r0, #128]	; 0x80
   3c2b4:	strh	r2, [r3, #128]	; 0x80
   3c2b8:	bx	lr

0003c2bc <flatcc_builder_pop_buffer_alignment@@Base>:
   3c2bc:	ldrh	r3, [r0, #128]	; 0x80
   3c2c0:	cmp	r3, r1
   3c2c4:	strhcc	r1, [r0, #128]	; 0x80
   3c2c8:	bx	lr

0003c2cc <flatcc_builder_get_buffer_alignment@@Base>:
   3c2cc:	ldrh	r0, [r0, #128]	; 0x80
   3c2d0:	bx	lr

0003c2d4 <flatcc_builder_set_vtable_clustering@@Base>:
   3c2d4:	clz	r1, r1
   3c2d8:	lsr	r1, r1, #5
   3c2dc:	str	r1, [r0, #180]	; 0xb4
   3c2e0:	bx	lr

0003c2e4 <flatcc_builder_set_block_align@@Base>:
   3c2e4:	strh	r1, [r0, #132]	; 0x84
   3c2e8:	bx	lr

0003c2ec <flatcc_builder_get_level@@Base>:
   3c2ec:	ldr	r0, [r0, #156]	; 0x9c
   3c2f0:	bx	lr

0003c2f4 <flatcc_builder_set_max_level@@Base>:
   3c2f4:	ldr	r3, [r0, #160]	; 0xa0
   3c2f8:	str	r1, [r0, #176]	; 0xb0
   3c2fc:	cmp	r1, r3
   3c300:	strgt	r1, [r0, #160]	; 0xa0
   3c304:	bx	lr

0003c308 <flatcc_builder_get_buffer_size@@Base>:
   3c308:	ldr	r2, [r0, #140]	; 0x8c
   3c30c:	ldr	r0, [r0, #136]	; 0x88
   3c310:	sub	r0, r2, r0
   3c314:	bx	lr

0003c318 <flatcc_builder_get_buffer_start@@Base>:
   3c318:	ldr	r0, [r0, #136]	; 0x88
   3c31c:	bx	lr

0003c320 <flatcc_builder_get_buffer_end@@Base>:
   3c320:	ldr	r0, [r0, #140]	; 0x8c
   3c324:	bx	lr

0003c328 <flatcc_builder_set_vtable_cache_limit@@Base>:
   3c328:	str	r1, [r0, #172]	; 0xac
   3c32c:	bx	lr

0003c330 <flatcc_builder_set_identifier@@Base>:
   3c330:	ldr	r3, [pc, #32]	; 3c358 <flatcc_builder_set_identifier@@Base+0x28>
   3c334:	cmp	r1, #0
   3c338:	add	r3, pc, r3
   3c33c:	beq	3c34c <flatcc_builder_set_identifier@@Base+0x1c>
   3c340:	ldr	r3, [r1]
   3c344:	str	r3, [r0, #168]	; 0xa8
   3c348:	bx	lr
   3c34c:	ldr	r2, [pc, #8]	; 3c35c <flatcc_builder_set_identifier@@Base+0x2c>
   3c350:	ldr	r1, [r3, r2]
   3c354:	b	3c340 <flatcc_builder_set_identifier@@Base+0x10>
   3c358:	andeq	lr, r2, r0, asr #25
   3c35c:	muleq	r0, ip, r0

0003c360 <flatcc_builder_get_type@@Base>:
   3c360:	ldr	r0, [r0, #32]
   3c364:	cmp	r0, #0
   3c368:	ldrhne	r0, [r0, #14]
   3c36c:	bx	lr

0003c370 <flatcc_builder_get_type_at@@Base>:
   3c370:	cmp	r1, #0
   3c374:	ble	3c39c <flatcc_builder_get_type_at@@Base+0x2c>
   3c378:	ldr	r3, [r0, #156]	; 0x9c
   3c37c:	cmp	r1, r3
   3c380:	bgt	3c39c <flatcc_builder_get_type_at@@Base+0x2c>
   3c384:	sub	r1, r1, r3
   3c388:	ldr	r3, [r0, #32]
   3c38c:	add	r1, r1, r1, lsl #3
   3c390:	add	r1, r3, r1, lsl #2
   3c394:	ldrh	r0, [r1, #14]
   3c398:	bx	lr
   3c39c:	mov	r0, #0
   3c3a0:	bx	lr

0003c3a4 <flatcc_builder_get_direct_buffer@@Base>:
   3c3a4:	ldr	r3, [r0, #184]	; 0xb8
   3c3a8:	cmp	r3, #0
   3c3ac:	beq	3c3c0 <flatcc_builder_get_direct_buffer@@Base+0x1c>
   3c3b0:	ldr	r2, [r0, #188]	; 0xbc
   3c3b4:	ldr	r3, [r0, #192]	; 0xc0
   3c3b8:	cmp	r2, r3
   3c3bc:	beq	3c3d4 <flatcc_builder_get_direct_buffer@@Base+0x30>
   3c3c0:	cmp	r1, #0
   3c3c4:	movne	r0, #0
   3c3c8:	strne	r0, [r1]
   3c3cc:	moveq	r0, r1
   3c3d0:	bx	lr
   3c3d4:	cmp	r1, #0
   3c3d8:	ldrne	r3, [r0, #212]	; 0xd4
   3c3dc:	ldr	r0, [r0, #196]	; 0xc4
   3c3e0:	strne	r3, [r1]
   3c3e4:	bx	lr

0003c3e8 <flatcc_builder_copy_buffer@@Base>:
   3c3e8:	ldr	r3, [r0, #184]	; 0xb8
   3c3ec:	cmp	r3, #0
   3c3f0:	beq	3c430 <flatcc_builder_copy_buffer@@Base+0x48>
   3c3f4:	push	{r4, lr}
   3c3f8:	add	r0, r0, #188	; 0xbc
   3c3fc:	bl	3cb00 <flatcc_emitter_copy_buffer@@Base>
   3c400:	cmp	r0, #0
   3c404:	popne	{r4, pc}
   3c408:	ldr	r3, [pc, #40]	; 3c438 <flatcc_builder_copy_buffer@@Base+0x50>
   3c40c:	ldr	r1, [pc, #40]	; 3c43c <flatcc_builder_copy_buffer@@Base+0x54>
   3c410:	add	r3, pc, r3
   3c414:	ldr	r0, [pc, #36]	; 3c440 <flatcc_builder_copy_buffer@@Base+0x58>
   3c418:	add	r3, r3, #1296	; 0x510
   3c41c:	ldr	r2, [pc, #32]	; 3c444 <flatcc_builder_copy_buffer@@Base+0x5c>
   3c420:	add	r3, r3, #4
   3c424:	add	r1, pc, r1
   3c428:	add	r0, pc, r0
   3c42c:	bl	14140 <__assert_fail@plt>
   3c430:	mov	r0, r3
   3c434:	bx	lr
   3c438:	andeq	sp, r1, ip, asr #29
   3c43c:	andeq	lr, r1, r8, lsl #12
   3c440:	andeq	lr, r1, r0, lsr #20
   3c444:	andeq	r0, r0, r6, lsl #15

0003c448 <flatcc_builder_finalize_buffer@@Base>:
   3c448:	push	{r4, r5, r6, lr}
   3c44c:	mov	r5, r1
   3c450:	mov	r6, r0
   3c454:	bl	3c308 <flatcc_builder_get_buffer_size@@Base>
   3c458:	cmp	r5, #0
   3c45c:	strne	r0, [r5]
   3c460:	mov	r4, r0
   3c464:	bl	14038 <malloc@plt>
   3c468:	subs	r5, r0, #0
   3c46c:	beq	3c490 <flatcc_builder_finalize_buffer@@Base+0x48>
   3c470:	mov	r2, r4
   3c474:	mov	r0, r6
   3c478:	mov	r1, r5
   3c47c:	bl	3c3e8 <flatcc_builder_copy_buffer@@Base>
   3c480:	cmp	r0, #0
   3c484:	beq	3c4b4 <flatcc_builder_finalize_buffer@@Base+0x6c>
   3c488:	mov	r0, r5
   3c48c:	pop	{r4, r5, r6, pc}
   3c490:	ldr	r3, [pc, #64]	; 3c4d8 <flatcc_builder_finalize_buffer@@Base+0x90>
   3c494:	ldr	r1, [pc, #64]	; 3c4dc <flatcc_builder_finalize_buffer@@Base+0x94>
   3c498:	ldr	r0, [pc, #64]	; 3c4e0 <flatcc_builder_finalize_buffer@@Base+0x98>
   3c49c:	add	r3, pc, r3
   3c4a0:	ldr	r2, [pc, #60]	; 3c4e4 <flatcc_builder_finalize_buffer@@Base+0x9c>
   3c4a4:	add	r3, r3, #1328	; 0x530
   3c4a8:	add	r1, pc, r1
   3c4ac:	add	r0, pc, r0
   3c4b0:	bl	14140 <__assert_fail@plt>
   3c4b4:	ldr	r3, [pc, #44]	; 3c4e8 <flatcc_builder_finalize_buffer@@Base+0xa0>
   3c4b8:	ldr	r1, [pc, #44]	; 3c4ec <flatcc_builder_finalize_buffer@@Base+0xa4>
   3c4bc:	ldr	r0, [pc, #44]	; 3c4f0 <flatcc_builder_finalize_buffer@@Base+0xa8>
   3c4c0:	add	r3, pc, r3
   3c4c4:	ldr	r2, [pc, #40]	; 3c4f4 <flatcc_builder_finalize_buffer@@Base+0xac>
   3c4c8:	add	r3, r3, #1328	; 0x530
   3c4cc:	add	r1, pc, r1
   3c4d0:	add	r0, pc, r0
   3c4d4:	bl	14140 <__assert_fail@plt>
   3c4d8:	andeq	sp, r1, r0, asr #28
   3c4dc:	andeq	lr, r1, r4, lsl #11
   3c4e0:	andeq	ip, r0, r0, lsl lr
   3c4e4:	muleq	r0, r8, r7
   3c4e8:	andeq	sp, r1, ip, lsl lr
   3c4ec:	andeq	lr, r1, r0, ror #10
   3c4f0:	andeq	ip, r0, ip, ror #27
   3c4f4:	muleq	r0, ip, r7

0003c4f8 <flatcc_builder_finalize_aligned_buffer@@Base>:
   3c4f8:	push	{r4, r5, r6, r7, lr}
   3c4fc:	sub	sp, sp, #12
   3c500:	mov	r6, r1
   3c504:	mov	r7, r0
   3c508:	bl	3c308 <flatcc_builder_get_buffer_size@@Base>
   3c50c:	cmp	r6, #0
   3c510:	strne	r0, [r6]
   3c514:	mov	r4, r0
   3c518:	mov	r0, r7
   3c51c:	bl	3c2cc <flatcc_builder_get_buffer_alignment@@Base>
   3c520:	sub	r4, r4, #1
   3c524:	mov	r1, r0
   3c528:	rsb	r3, r0, #0
   3c52c:	add	r4, r4, r0
   3c530:	add	r0, sp, #8
   3c534:	cmp	r1, #4
   3c538:	and	r4, r4, r3
   3c53c:	mov	r3, #0
   3c540:	movcc	r1, #4
   3c544:	mov	r2, r4
   3c548:	str	r3, [r0, #-4]!
   3c54c:	bl	14098 <posix_memalign@plt>
   3c550:	cmp	r0, #0
   3c554:	beq	3c584 <flatcc_builder_finalize_aligned_buffer@@Base+0x8c>
   3c558:	ldr	r0, [sp, #4]
   3c55c:	cmp	r0, #0
   3c560:	beq	3c568 <flatcc_builder_finalize_aligned_buffer@@Base+0x70>
   3c564:	bl	13fcc <free@plt>
   3c568:	cmp	r6, #0
   3c56c:	moveq	r5, r6
   3c570:	movne	r5, #0
   3c574:	strne	r5, [r6]
   3c578:	mov	r0, r5
   3c57c:	add	sp, sp, #12
   3c580:	pop	{r4, r5, r6, r7, pc}
   3c584:	ldr	r5, [sp, #4]
   3c588:	cmp	r5, #0
   3c58c:	beq	3c568 <flatcc_builder_finalize_aligned_buffer@@Base+0x70>
   3c590:	mov	r2, r4
   3c594:	mov	r0, r7
   3c598:	mov	r1, r5
   3c59c:	bl	3c3e8 <flatcc_builder_copy_buffer@@Base>
   3c5a0:	cmp	r0, #0
   3c5a4:	bne	3c578 <flatcc_builder_finalize_aligned_buffer@@Base+0x80>
   3c5a8:	mov	r0, r5
   3c5ac:	b	3c564 <flatcc_builder_finalize_aligned_buffer@@Base+0x6c>

0003c5b0 <flatcc_builder_aligned_alloc@@Base>:
   3c5b0:	push	{r4, lr}
   3c5b4:	sub	sp, sp, #8
   3c5b8:	add	r3, sp, #8
   3c5bc:	cmp	r0, #4
   3c5c0:	mov	r4, #0
   3c5c4:	mov	r2, r1
   3c5c8:	str	r4, [r3, #-4]!
   3c5cc:	movcs	r1, r0
   3c5d0:	movcc	r1, #4
   3c5d4:	mov	r0, r3
   3c5d8:	bl	14098 <posix_memalign@plt>
   3c5dc:	cmp	r0, r4
   3c5e0:	ldr	r0, [sp, #4]
   3c5e4:	beq	3c5f8 <flatcc_builder_aligned_alloc@@Base+0x48>
   3c5e8:	cmp	r0, #0
   3c5ec:	beq	3c5f8 <flatcc_builder_aligned_alloc@@Base+0x48>
   3c5f0:	bl	13fcc <free@plt>
   3c5f4:	mov	r0, r4
   3c5f8:	add	sp, sp, #8
   3c5fc:	pop	{r4, pc}

0003c600 <flatcc_builder_aligned_free@@Base>:
   3c600:	b	13fcc <free@plt>

0003c604 <flatcc_builder_get_emit_context@@Base>:
   3c604:	ldr	r0, [r0, #36]	; 0x24
   3c608:	bx	lr

0003c60c <flatcc_emitter_recycle_page@@Base>:
   3c60c:	ldr	r3, [r0]
   3c610:	cmp	r3, r1
   3c614:	beq	3c65c <flatcc_emitter_recycle_page@@Base+0x50>
   3c618:	ldr	r2, [r0, #4]
   3c61c:	cmp	r1, r2
   3c620:	beq	3c65c <flatcc_emitter_recycle_page@@Base+0x50>
   3c624:	ldr	ip, [r1, #2944]	; 0xb80
   3c628:	ldr	r2, [r1, #2948]	; 0xb84
   3c62c:	push	{lr}		; (str lr, [sp, #-4]!)
   3c630:	mov	r0, #0
   3c634:	str	r2, [ip, #2948]	; 0xb84
   3c638:	ldr	r2, [r3, #2948]	; 0xb84
   3c63c:	ldr	lr, [r1, #2948]	; 0xb84
   3c640:	str	ip, [lr, #2944]	; 0xb80
   3c644:	str	r3, [r1, #2944]	; 0xb80
   3c648:	str	r2, [r1, #2948]	; 0xb84
   3c64c:	str	r1, [r2, #2944]	; 0xb80
   3c650:	ldr	r3, [r1, #2944]	; 0xb80
   3c654:	str	r1, [r3, #2948]	; 0xb84
   3c658:	pop	{pc}		; (ldr pc, [sp], #4)
   3c65c:	mvn	r0, #0
   3c660:	bx	lr

0003c664 <flatcc_emitter_reset@@Base>:
   3c664:	ldr	r2, [r0]
   3c668:	cmp	r2, #0
   3c66c:	bxeq	lr
   3c670:	ldr	r3, [r0, #32]
   3c674:	mov	r1, #1472	; 0x5c0
   3c678:	push	{r4, lr}
   3c67c:	cmp	r3, #0
   3c680:	str	r1, [r0, #12]
   3c684:	str	r1, [r0, #20]
   3c688:	ldr	r1, [r0, #24]
   3c68c:	add	ip, r2, #1472	; 0x5c0
   3c690:	moveq	r3, r1
   3c694:	stmib	r0, {r2, ip}
   3c698:	str	ip, [r0, #16]
   3c69c:	add	ip, r3, r3, lsl #1
   3c6a0:	lsr	r3, r1, #2
   3c6a4:	add	r3, r3, ip, lsr #2
   3c6a8:	ldr	ip, [r0, #28]
   3c6ac:	ldr	lr, [pc, #104]	; 3c71c <flatcc_emitter_reset@@Base+0xb8>
   3c6b0:	cmp	ip, r3, lsl #1
   3c6b4:	mov	r1, #0
   3c6b8:	str	lr, [r2, #2952]	; 0xb88
   3c6bc:	str	r3, [r0, #32]
   3c6c0:	str	r1, [r0, #24]
   3c6c4:	popls	{r4, pc}
   3c6c8:	ldr	r3, [r2, #2944]	; 0xb80
   3c6cc:	mov	r4, r0
   3c6d0:	cmp	r2, r3
   3c6d4:	popeq	{r4, pc}
   3c6d8:	ldr	r1, [r3, #2944]	; 0xb80
   3c6dc:	mov	r0, r3
   3c6e0:	str	r1, [r2, #2944]	; 0xb80
   3c6e4:	ldr	r3, [r3, #2944]	; 0xb80
   3c6e8:	str	r2, [r3, #2948]	; 0xb84
   3c6ec:	bl	13fcc <free@plt>
   3c6f0:	ldr	r3, [r4, #28]
   3c6f4:	ldr	r2, [r4, #32]
   3c6f8:	sub	r3, r3, #2944	; 0xb80
   3c6fc:	str	r3, [r4, #28]
   3c700:	cmp	r3, r2, lsl #1
   3c704:	popls	{r4, pc}
   3c708:	ldm	r4, {r1, r2}
   3c70c:	ldr	r3, [r2, #2944]	; 0xb80
   3c710:	cmp	r3, r1
   3c714:	bne	3c6d8 <flatcc_emitter_reset@@Base+0x74>
   3c718:	pop	{r4, pc}
   3c71c:			; <UNDEFINED> instruction: 0xfffffa40

0003c720 <flatcc_emitter_clear@@Base>:
   3c720:	ldr	r3, [r0]
   3c724:	cmp	r3, #0
   3c728:	bxeq	lr
   3c72c:	ldr	r2, [r3, #2948]	; 0xb84
   3c730:	mov	r1, #0
   3c734:	push	{r4, r5, r6, lr}
   3c738:	mov	r5, r0
   3c73c:	str	r1, [r2, #2944]	; 0xb80
   3c740:	ldr	r4, [r3, #2944]	; 0xb80
   3c744:	cmp	r4, r1
   3c748:	bne	3c754 <flatcc_emitter_clear@@Base+0x34>
   3c74c:	b	3c784 <flatcc_emitter_clear@@Base+0x64>
   3c750:	mov	r4, r3
   3c754:	ldr	r0, [r4, #2948]	; 0xb84
   3c758:	bl	13fcc <free@plt>
   3c75c:	ldr	r3, [r4, #2944]	; 0xb80
   3c760:	cmp	r3, #0
   3c764:	bne	3c750 <flatcc_emitter_clear@@Base+0x30>
   3c768:	mov	r0, r4
   3c76c:	bl	13fcc <free@plt>
   3c770:	mov	r0, r5
   3c774:	mov	r2, #36	; 0x24
   3c778:	mov	r1, #0
   3c77c:	pop	{r4, r5, r6, lr}
   3c780:	b	140a4 <memset@plt>
   3c784:	mov	r4, r3
   3c788:	b	3c768 <flatcc_emitter_clear@@Base+0x48>

0003c78c <flatcc_emitter@@Base>:
   3c78c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c790:	sub	sp, sp, #12
   3c794:	mov	r4, r0
   3c798:	ldr	ip, [sp, #48]	; 0x30
   3c79c:	ldr	r0, [r0, #24]
   3c7a0:	cmp	r3, #0
   3c7a4:	add	r0, r0, ip
   3c7a8:	str	r0, [r4, #24]
   3c7ac:	blt	3c970 <flatcc_emitter@@Base+0x1e4>
   3c7b0:	ldr	r0, [r4, #20]
   3c7b4:	cmp	ip, r0
   3c7b8:	bls	3c844 <flatcc_emitter@@Base+0xb8>
   3c7bc:	cmp	r2, #0
   3c7c0:	addne	r7, r1, #8
   3c7c4:	movne	r8, r2
   3c7c8:	movne	r9, #2944	; 0xb80
   3c7cc:	beq	3c838 <flatcc_emitter@@Base+0xac>
   3c7d0:	ldr	r6, [r7, #-4]
   3c7d4:	ldr	sl, [r7, #-8]
   3c7d8:	cmp	r6, #0
   3c7dc:	beq	3c82c <flatcc_emitter@@Base+0xa0>
   3c7e0:	cmp	r0, r6
   3c7e4:	mov	r5, r0
   3c7e8:	bcs	3c88c <flatcc_emitter@@Base+0x100>
   3c7ec:	cmp	r0, #0
   3c7f0:	beq	3c898 <flatcc_emitter@@Base+0x10c>
   3c7f4:	sub	r6, r6, r0
   3c7f8:	mov	r1, sl
   3c7fc:	mov	r2, r5
   3c800:	ldr	r0, [r4, #16]
   3c804:	bl	13fd8 <memcpy@plt>
   3c808:	ldr	r3, [r4, #16]
   3c80c:	ldr	r0, [r4, #20]
   3c810:	add	r3, r3, r5
   3c814:	sub	r0, r0, r5
   3c818:	cmp	r6, #0
   3c81c:	add	sl, sl, r5
   3c820:	str	r3, [r4, #16]
   3c824:	str	r0, [r4, #20]
   3c828:	bne	3c7e0 <flatcc_emitter@@Base+0x54>
   3c82c:	subs	r8, r8, #1
   3c830:	add	r7, r7, #8
   3c834:	bne	3c7d0 <flatcc_emitter@@Base+0x44>
   3c838:	mov	r0, #0
   3c83c:	add	sp, sp, #12
   3c840:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3c844:	ldr	r3, [r4, #16]
   3c848:	sub	r0, r0, ip
   3c84c:	add	ip, r3, ip
   3c850:	str	r0, [r4, #20]
   3c854:	str	ip, [r4, #16]
   3c858:	cmp	r2, #0
   3c85c:	addne	r4, r1, #8
   3c860:	movne	r7, r2
   3c864:	beq	3c838 <flatcc_emitter@@Base+0xac>
   3c868:	ldmdb	r4, {r1, r2}
   3c86c:	mov	r0, r3
   3c870:	bl	13fd8 <memcpy@plt>
   3c874:	ldr	r2, [r4, #-4]
   3c878:	subs	r7, r7, #1
   3c87c:	add	r4, r4, #8
   3c880:	add	r3, r0, r2
   3c884:	bne	3c868 <flatcc_emitter@@Base+0xdc>
   3c888:	b	3c838 <flatcc_emitter@@Base+0xac>
   3c88c:	mov	r5, r6
   3c890:	mov	r6, #0
   3c894:	b	3c7f8 <flatcc_emitter@@Base+0x6c>
   3c898:	ldr	fp, [r4, #4]
   3c89c:	cmp	fp, #0
   3c8a0:	beq	3c910 <flatcc_emitter@@Base+0x184>
   3c8a4:	ldr	r5, [fp, #2944]	; 0xb80
   3c8a8:	ldr	r3, [r4]
   3c8ac:	cmp	r5, r3
   3c8b0:	beq	3c8d8 <flatcc_emitter@@Base+0x14c>
   3c8b4:	str	r5, [r4, #4]
   3c8b8:	ldr	r3, [r5, #2948]	; 0xb84
   3c8bc:	mov	r0, r9
   3c8c0:	str	r5, [r4, #16]
   3c8c4:	ldr	r3, [r3, #2952]	; 0xb88
   3c8c8:	str	r9, [r4, #20]
   3c8cc:	add	r3, r3, #2944	; 0xb80
   3c8d0:	str	r3, [r5, #2952]	; 0xb88
   3c8d4:	b	3c7e0 <flatcc_emitter@@Base+0x54>
   3c8d8:	ldr	r0, [pc, #540]	; 3cafc <flatcc_emitter@@Base+0x370>
   3c8dc:	bl	14038 <malloc@plt>
   3c8e0:	cmp	r0, #0
   3c8e4:	beq	3c920 <flatcc_emitter@@Base+0x194>
   3c8e8:	ldr	r3, [r4, #28]
   3c8ec:	str	r5, [r0, #2944]	; 0xb80
   3c8f0:	add	r3, r3, #2944	; 0xb80
   3c8f4:	str	fp, [r0, #2948]	; 0xb84
   3c8f8:	str	r3, [r4, #28]
   3c8fc:	str	r0, [r5, #2948]	; 0xb84
   3c900:	str	r0, [fp, #2944]	; 0xb80
   3c904:	mov	r5, r0
   3c908:	str	r0, [r4, #4]
   3c90c:	b	3c8b8 <flatcc_emitter@@Base+0x12c>
   3c910:	ldr	r0, [pc, #484]	; 3cafc <flatcc_emitter@@Base+0x370>
   3c914:	bl	14038 <malloc@plt>
   3c918:	cmp	r0, #0
   3c91c:	bne	3c92c <flatcc_emitter@@Base+0x1a0>
   3c920:	mvn	r0, #0
   3c924:	add	sp, sp, #12
   3c928:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3c92c:	mov	r2, #1472	; 0x5c0
   3c930:	ldr	r3, [r4, #28]
   3c934:	str	r2, [r4, #12]
   3c938:	str	r2, [r4, #20]
   3c93c:	sub	r2, r2, #2944	; 0xb80
   3c940:	str	r2, [r0, #2952]	; 0xb88
   3c944:	str	r0, [r4]
   3c948:	add	r3, r3, #2944	; 0xb80
   3c94c:	str	r0, [r4, #4]
   3c950:	str	r0, [r0, #2944]	; 0xb80
   3c954:	str	r0, [r0, #2948]	; 0xb84
   3c958:	add	r0, r0, #1472	; 0x5c0
   3c95c:	str	r0, [r4, #8]
   3c960:	str	r0, [r4, #16]
   3c964:	str	r3, [r4, #28]
   3c968:	mov	r0, #1472	; 0x5c0
   3c96c:	b	3c7e0 <flatcc_emitter@@Base+0x54>
   3c970:	ldr	r0, [r4, #12]
   3c974:	cmp	ip, r0
   3c978:	bls	3c9f8 <flatcc_emitter@@Base+0x26c>
   3c97c:	add	r6, r1, r2, lsl #3
   3c980:	mov	r7, r2
   3c984:	mov	r9, #2944	; 0xb80
   3c988:	mov	r8, #0
   3c98c:	cmp	r7, #0
   3c990:	beq	3c838 <flatcc_emitter@@Base+0xac>
   3c994:	ldr	r5, [r6, #-4]
   3c998:	ldr	sl, [r6, #-8]
   3c99c:	cmp	r5, #0
   3c9a0:	add	sl, sl, r5
   3c9a4:	beq	3c9ec <flatcc_emitter@@Base+0x260>
   3c9a8:	ldr	r2, [r4, #12]
   3c9ac:	cmp	r2, r5
   3c9b0:	bcs	3ca10 <flatcc_emitter@@Base+0x284>
   3c9b4:	cmp	r2, #0
   3c9b8:	beq	3ca20 <flatcc_emitter@@Base+0x294>
   3c9bc:	sub	r5, r5, r2
   3c9c0:	mov	r1, r8
   3c9c4:	ldr	r0, [r4, #8]
   3c9c8:	rsb	r3, r2, #0
   3c9cc:	add	r0, r0, r3
   3c9d0:	add	sl, sl, r3
   3c9d4:	str	r1, [r4, #12]
   3c9d8:	str	r0, [r4, #8]
   3c9dc:	mov	r1, sl
   3c9e0:	bl	13fd8 <memcpy@plt>
   3c9e4:	cmp	r5, #0
   3c9e8:	bne	3c9a8 <flatcc_emitter@@Base+0x21c>
   3c9ec:	sub	r6, r6, #8
   3c9f0:	sub	r7, r7, #1
   3c9f4:	b	3c98c <flatcc_emitter@@Base+0x200>
   3c9f8:	ldr	r3, [r4, #8]
   3c9fc:	sub	r0, r0, ip
   3ca00:	sub	r3, r3, ip
   3ca04:	str	r0, [r4, #12]
   3ca08:	str	r3, [r4, #8]
   3ca0c:	b	3c858 <flatcc_emitter@@Base+0xcc>
   3ca10:	sub	r1, r2, r5
   3ca14:	mov	r2, r5
   3ca18:	mov	r5, #0
   3ca1c:	b	3c9c4 <flatcc_emitter@@Base+0x238>
   3ca20:	ldr	r3, [r4]
   3ca24:	cmp	r3, #0
   3ca28:	beq	3caac <flatcc_emitter@@Base+0x320>
   3ca2c:	ldr	fp, [r3, #2948]	; 0xb84
   3ca30:	ldr	r2, [r4, #4]
   3ca34:	cmp	fp, r2
   3ca38:	beq	3ca6c <flatcc_emitter@@Base+0x2e0>
   3ca3c:	ldr	r3, [r3, #2952]	; 0xb88
   3ca40:	sub	r3, r3, #2944	; 0xb80
   3ca44:	str	r3, [fp, #2952]	; 0xb88
   3ca48:	str	fp, [r4]
   3ca4c:	ldr	r3, [fp, #2944]	; 0xb80
   3ca50:	add	r2, fp, #2944	; 0xb80
   3ca54:	str	r9, [r4, #12]
   3ca58:	ldr	r3, [r3, #2952]	; 0xb88
   3ca5c:	str	r2, [r4, #8]
   3ca60:	sub	r3, r3, #2944	; 0xb80
   3ca64:	str	r3, [fp, #2952]	; 0xb88
   3ca68:	b	3c9a8 <flatcc_emitter@@Base+0x21c>
   3ca6c:	ldr	r0, [pc, #136]	; 3cafc <flatcc_emitter@@Base+0x370>
   3ca70:	str	r3, [sp, #4]
   3ca74:	bl	14038 <malloc@plt>
   3ca78:	ldr	r3, [sp, #4]
   3ca7c:	cmp	r0, #0
   3ca80:	beq	3c920 <flatcc_emitter@@Base+0x194>
   3ca84:	ldr	r2, [r4, #28]
   3ca88:	str	fp, [r0, #2948]	; 0xb84
   3ca8c:	add	r2, r2, #2944	; 0xb80
   3ca90:	str	r3, [r0, #2944]	; 0xb80
   3ca94:	str	r2, [r4, #28]
   3ca98:	str	r0, [r3, #2948]	; 0xb84
   3ca9c:	str	r0, [fp, #2944]	; 0xb80
   3caa0:	str	r0, [r4]
   3caa4:	mov	fp, r0
   3caa8:	b	3ca4c <flatcc_emitter@@Base+0x2c0>
   3caac:	ldr	r0, [pc, #72]	; 3cafc <flatcc_emitter@@Base+0x370>
   3cab0:	bl	14038 <malloc@plt>
   3cab4:	cmp	r0, #0
   3cab8:	beq	3c920 <flatcc_emitter@@Base+0x194>
   3cabc:	mov	r2, #1472	; 0x5c0
   3cac0:	ldr	r3, [r4, #28]
   3cac4:	str	r2, [r4, #12]
   3cac8:	str	r2, [r4, #20]
   3cacc:	sub	r2, r2, #2944	; 0xb80
   3cad0:	str	r2, [r0, #2952]	; 0xb88
   3cad4:	str	r0, [r4]
   3cad8:	add	r3, r3, #2944	; 0xb80
   3cadc:	str	r0, [r4, #4]
   3cae0:	str	r0, [r0, #2944]	; 0xb80
   3cae4:	str	r0, [r0, #2948]	; 0xb84
   3cae8:	add	r0, r0, #1472	; 0x5c0
   3caec:	str	r0, [r4, #8]
   3caf0:	str	r0, [r4, #16]
   3caf4:	str	r3, [r4, #28]
   3caf8:	b	3c9a8 <flatcc_emitter@@Base+0x21c>
   3cafc:	andeq	r0, r0, ip, lsl #23

0003cb00 <flatcc_emitter_copy_buffer@@Base>:
   3cb00:	ldr	ip, [r0, #24]
   3cb04:	cmp	ip, r2
   3cb08:	bhi	3cba4 <flatcc_emitter_copy_buffer@@Base+0xa4>
   3cb0c:	ldr	r2, [r0]
   3cb10:	cmp	r2, #0
   3cb14:	beq	3cba4 <flatcc_emitter_copy_buffer@@Base+0xa4>
   3cb18:	mov	r3, r1
   3cb1c:	ldr	r1, [r0, #4]
   3cb20:	push	{r4, r5, r6, lr}
   3cb24:	cmp	r2, r1
   3cb28:	mov	r5, r0
   3cb2c:	beq	3cbb0 <flatcc_emitter_copy_buffer@@Base+0xb0>
   3cb30:	ldr	r4, [r0, #12]
   3cb34:	ldr	r1, [r5, #8]
   3cb38:	rsb	r4, r4, #2944	; 0xb80
   3cb3c:	mov	r2, r4
   3cb40:	mov	r0, r3
   3cb44:	bl	13fd8 <memcpy@plt>
   3cb48:	ldr	r2, [r5]
   3cb4c:	ldr	r1, [r5, #4]
   3cb50:	add	r3, r0, r4
   3cb54:	ldr	r4, [r2, #2944]	; 0xb80
   3cb58:	cmp	r4, r1
   3cb5c:	beq	3cb88 <flatcc_emitter_copy_buffer@@Base+0x88>
   3cb60:	mov	r6, #2944	; 0xb80
   3cb64:	mov	r1, r4
   3cb68:	mov	r0, r3
   3cb6c:	mov	r2, r6
   3cb70:	bl	13fd8 <memcpy@plt>
   3cb74:	ldr	r4, [r4, #2944]	; 0xb80
   3cb78:	ldr	r1, [r5, #4]
   3cb7c:	cmp	r1, r4
   3cb80:	add	r3, r0, #2944	; 0xb80
   3cb84:	bne	3cb64 <flatcc_emitter_copy_buffer@@Base+0x64>
   3cb88:	ldr	r2, [r5, #20]
   3cb8c:	mov	r0, r3
   3cb90:	rsb	r2, r2, #2944	; 0xb80
   3cb94:	bl	13fd8 <memcpy@plt>
   3cb98:	mov	r3, r0
   3cb9c:	mov	r0, r3
   3cba0:	pop	{r4, r5, r6, pc}
   3cba4:	mov	r3, #0
   3cba8:	mov	r0, r3
   3cbac:	bx	lr
   3cbb0:	ldr	r1, [r0, #8]
   3cbb4:	mov	r2, ip
   3cbb8:	mov	r0, r3
   3cbbc:	bl	13fd8 <memcpy@plt>
   3cbc0:	mov	r3, r0
   3cbc4:	b	3cb9c <flatcc_emitter_copy_buffer@@Base+0x9c>

0003cbc8 <cmetrohash64_1@@Base>:
   3cbc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3cbcc:	sub	sp, sp, #92	; 0x5c
   3cbd0:	add	r5, pc, #616	; 0x268
   3cbd4:	ldrd	r4, [r5]
   3cbd8:	ldr	ip, [sp, #128]	; 0x80
   3cbdc:	ldr	r1, [pc, #624]	; 3ce54 <cmetrohash64_1@@Base+0x28c>
   3cbe0:	adds	r4, r4, r2
   3cbe4:	adc	r5, r5, r3
   3cbe8:	umlal	r4, r5, r1, ip
   3cbec:	cmp	r3, #0
   3cbf0:	cmpeq	r2, #31
   3cbf4:	add	r3, r0, r2
   3cbf8:	str	r3, [sp, #76]	; 0x4c
   3cbfc:	strd	r4, [sp, #56]	; 0x38
   3cc00:	bls	3cfb8 <cmetrohash64_1@@Base+0x3f0>
   3cc04:	ldr	fp, [pc, #580]	; 3ce50 <cmetrohash64_1@@Base+0x288>
   3cc08:	mov	lr, r1
   3cc0c:	str	fp, [sp, #68]	; 0x44
   3cc10:	mov	sl, r4
   3cc14:	mov	fp, r5
   3cc18:	sub	r3, r3, #32
   3cc1c:	str	r3, [sp, #72]	; 0x48
   3cc20:	strd	r4, [sp]
   3cc24:	strd	r4, [sp, #8]
   3cc28:	strd	r4, [sp, #48]	; 0x30
   3cc2c:	ldrb	r1, [r0, #1]
   3cc30:	ldrb	r6, [r0]
   3cc34:	ldrb	r2, [r0, #9]
   3cc38:	ldrb	r4, [r0, #10]
   3cc3c:	orr	r6, r6, r1, lsl #8
   3cc40:	ldrb	r1, [r0, #8]
   3cc44:	ldrb	r3, [r0, #17]
   3cc48:	ldrb	r5, [r0, #5]
   3cc4c:	orr	r1, r1, r2, lsl #8
   3cc50:	orr	r1, r1, r4, lsl #16
   3cc54:	ldrb	r4, [r0, #16]
   3cc58:	ldrb	r2, [r0, #4]
   3cc5c:	ldrb	ip, [r0, #2]
   3cc60:	orr	r4, r4, r3, lsl #8
   3cc64:	ldrb	r3, [r0, #11]
   3cc68:	ldrb	r7, [r0, #3]
   3cc6c:	orr	r2, r2, r5, lsl #8
   3cc70:	ldrb	r5, [r0, #6]
   3cc74:	orr	r3, r1, r3, lsl #24
   3cc78:	orr	r6, r6, ip, lsl #16
   3cc7c:	ldrb	ip, [r0, #25]
   3cc80:	ldrb	r8, [r0, #18]
   3cc84:	str	r3, [sp, #64]	; 0x40
   3cc88:	orr	r2, r2, r5, lsl #16
   3cc8c:	ldrb	r3, [r0, #24]
   3cc90:	ldrb	r5, [r0, #7]
   3cc94:	orr	r6, r6, r7, lsl #24
   3cc98:	ldrb	r1, [r0, #19]
   3cc9c:	umull	r6, r7, r6, lr
   3cca0:	ldrb	r9, [r0, #23]
   3cca4:	orr	r3, r3, ip, lsl #8
   3cca8:	ldrb	ip, [r0, #26]
   3ccac:	orr	r2, r2, r5, lsl #24
   3ccb0:	orr	r4, r4, r8, lsl #16
   3ccb4:	orr	r4, r4, r1, lsl #24
   3ccb8:	ldrb	r1, [r0, #27]
   3ccbc:	mla	r7, lr, r2, r7
   3ccc0:	ldrb	r2, [r0, #21]
   3ccc4:	orr	r3, r3, ip, lsl #16
   3ccc8:	ldrb	ip, [r0, #20]
   3cccc:	ldrb	r5, [r0, #13]
   3ccd0:	orr	r3, r3, r1, lsl #24
   3ccd4:	ldrb	r1, [r0, #12]
   3ccd8:	orr	ip, ip, r2, lsl #8
   3ccdc:	ldrb	r2, [r0, #22]
   3cce0:	adds	r6, r6, sl
   3cce4:	orr	r1, r1, r5, lsl #8
   3cce8:	ldrb	r5, [r0, #14]
   3ccec:	adc	r7, r7, fp
   3ccf0:	ldrb	r8, [r0, #29]
   3ccf4:	lsr	sl, r6, #29
   3ccf8:	orr	ip, ip, r2, lsl #16
   3ccfc:	ldrb	r2, [r0, #28]
   3cd00:	orr	sl, sl, r7, lsl #3
   3cd04:	orr	r1, r1, r5, lsl #16
   3cd08:	str	sl, [sp, #16]
   3cd0c:	ldrb	r5, [r0, #15]
   3cd10:	orr	ip, ip, r9, lsl #24
   3cd14:	ldrb	r9, [r0, #30]
   3cd18:	orr	r2, r2, r8, lsl #8
   3cd1c:	ldrb	r8, [r0, #31]
   3cd20:	orr	r1, r1, r5, lsl #24
   3cd24:	orr	r2, r2, r9, lsl #16
   3cd28:	lsr	r5, r7, #29
   3cd2c:	orr	r5, r5, r6, lsl #3
   3cd30:	orr	r2, r2, r8, lsl #24
   3cd34:	ldr	r6, [sp, #64]	; 0x40
   3cd38:	ldr	r8, [sp, #68]	; 0x44
   3cd3c:	str	r5, [sp, #20]
   3cd40:	ldr	r5, [pc, #256]	; 3ce48 <cmetrohash64_1@@Base+0x280>
   3cd44:	umull	r6, r7, r6, r8
   3cd48:	umull	r4, r5, r4, r5
   3cd4c:	mla	r7, r8, r1, r7
   3cd50:	ldr	r9, [pc, #240]	; 3ce48 <cmetrohash64_1@@Base+0x280>
   3cd54:	ldr	r1, [pc, #240]	; 3ce4c <cmetrohash64_1@@Base+0x284>
   3cd58:	ldrd	sl, [sp, #16]
   3cd5c:	mla	r5, r9, ip, r5
   3cd60:	umull	r8, r9, r3, r1
   3cd64:	mla	r9, r1, r2, r9
   3cd68:	ldrd	r2, [sp, #48]	; 0x30
   3cd6c:	add	r0, r0, #32
   3cd70:	adds	r2, r2, r6
   3cd74:	adc	r3, r3, r7
   3cd78:	mov	r6, r2
   3cd7c:	mov	r7, r3
   3cd80:	ldrd	r2, [sp, #8]
   3cd84:	adds	r2, r2, r4
   3cd88:	adc	r3, r3, r5
   3cd8c:	mov	r4, r2
   3cd90:	mov	r5, r3
   3cd94:	ldrd	r2, [sp]
   3cd98:	adds	r2, r2, r8
   3cd9c:	mov	r8, r2
   3cda0:	lsr	r2, r6, #29
   3cda4:	orr	r1, r2, r7, lsl #3
   3cda8:	adc	r3, r3, r9
   3cdac:	str	r1, [sp, #24]
   3cdb0:	lsr	r1, r7, #29
   3cdb4:	mov	r9, r3
   3cdb8:	orr	r1, r1, r6, lsl #3
   3cdbc:	lsr	r3, r4, #29
   3cdc0:	ldrd	r6, [sp, #8]
   3cdc4:	orr	r3, r3, r5, lsl #3
   3cdc8:	lsr	r2, r8, #29
   3cdcc:	str	r3, [sp, #32]
   3cdd0:	lsr	r3, r5, #29
   3cdd4:	adds	sl, sl, r6
   3cdd8:	orr	r3, r3, r4, lsl #3
   3cddc:	str	r1, [sp, #28]
   3cde0:	orr	r1, r2, r9, lsl #3
   3cde4:	lsr	r2, r9, #29
   3cde8:	adc	fp, fp, r7
   3cdec:	ldrd	r4, [sp]
   3cdf0:	str	r3, [sp, #36]	; 0x24
   3cdf4:	ldrd	r6, [sp, #24]
   3cdf8:	orr	r3, r2, r8, lsl #3
   3cdfc:	str	r3, [sp, #44]	; 0x2c
   3ce00:	ldrd	r2, [sp, #32]
   3ce04:	adds	r6, r6, r4
   3ce08:	adc	r7, r7, r5
   3ce0c:	adds	r2, r2, sl
   3ce10:	adc	r3, r3, fp
   3ce14:	str	r1, [sp, #40]	; 0x28
   3ce18:	strd	r2, [sp, #8]
   3ce1c:	ldrd	r2, [sp, #40]	; 0x28
   3ce20:	strd	r6, [sp, #48]	; 0x30
   3ce24:	adds	r2, r2, r6
   3ce28:	adc	r3, r3, r7
   3ce2c:	strd	r2, [sp]
   3ce30:	ldr	r3, [sp, #72]	; 0x48
   3ce34:	cmp	r3, r0
   3ce38:	bcs	3cc2c <cmetrohash64_1@@Base+0x64>
   3ce3c:	b	3ce58 <cmetrohash64_1@@Base+0x290>
   3ce40:	svcge	0x00065edb
   3ce44:	rscvs	r5, r2, fp, lsr sp
   3ce48:	blvc	ff7ecf3c <__bss_end__@@Base+0xff781e38>
   3ce4c:	svccs	0x005870a5
   3ce50:			; <UNDEFINED> instruction: 0x8648dbdb
   3ce54:	ldmdagt	sl!, {r0, r5, r6, r7, r8, ip, pc}
   3ce58:	ldrd	r4, [sp]
   3ce5c:	mov	r7, fp
   3ce60:	ldr	fp, [sp, #68]	; 0x44
   3ce64:	adds	r2, sl, r4
   3ce68:	adc	r3, r7, r5
   3ce6c:	umull	r4, r5, r2, lr
   3ce70:	ldrd	r8, [sp, #8]
   3ce74:	mla	r5, lr, r3, r5
   3ce78:	ldrd	r2, [sp, #48]	; 0x30
   3ce7c:	mov	r6, sl
   3ce80:	adds	r2, r2, r4
   3ce84:	adc	r3, r3, r5
   3ce88:	mov	r4, r2
   3ce8c:	lsl	r2, r2, #31
   3ce90:	orr	r2, r2, r3, lsr #1
   3ce94:	lsl	r1, r3, #31
   3ce98:	umull	r2, r3, r2, fp
   3ce9c:	strd	r6, [sp, #8]
   3cea0:	orr	r4, r1, r4, lsr #1
   3cea4:	eor	r8, r8, r2
   3cea8:	mla	r3, fp, r4, r3
   3ceac:	ldrd	r4, [sp, #48]	; 0x30
   3ceb0:	eor	r9, r9, r3
   3ceb4:	adds	r4, r4, r8
   3ceb8:	adc	r5, r5, r9
   3cebc:	umull	r2, r3, r4, fp
   3cec0:	mla	r3, fp, r5, r3
   3cec4:	adds	r4, sl, r2
   3cec8:	adc	r5, r7, r3
   3cecc:	lsl	r6, r4, #31
   3ced0:	lsl	r3, r5, #31
   3ced4:	orr	r2, r3, r4, lsr #1
   3ced8:	orr	r6, r6, r5, lsr #1
   3cedc:	ldrd	r4, [sp, #8]
   3cee0:	umull	r6, r7, r6, lr
   3cee4:	adds	r4, r4, r8
   3cee8:	adc	r5, r5, r9
   3ceec:	mla	r7, lr, r2, r7
   3cef0:	strd	r4, [sp, #16]
   3cef4:	ldrd	r2, [sp, #8]
   3cef8:	ldrd	r4, [sp, #48]	; 0x30
   3cefc:	ldr	r1, [sp, #20]
   3cf00:	eor	r2, r2, r4
   3cf04:	eor	r3, r3, r5
   3cf08:	strd	r2, [sp, #8]
   3cf0c:	ldrd	r2, [sp]
   3cf10:	eor	r2, r2, r6
   3cf14:	adds	r4, r4, r2
   3cf18:	eor	r3, r3, r7
   3cf1c:	adc	r5, r5, r3
   3cf20:	mov	r7, r3
   3cf24:	ldr	r3, [sp, #16]
   3cf28:	mov	r6, r2
   3cf2c:	strd	r6, [sp]
   3cf30:	umull	r6, r7, r3, lr
   3cf34:	umull	r2, r3, r4, fp
   3cf38:	mla	r7, lr, r1, r7
   3cf3c:	mla	r3, fp, r5, r3
   3cf40:	ldrd	r4, [sp]
   3cf44:	adds	r4, r4, r6
   3cf48:	adc	r5, r5, r7
   3cf4c:	adds	r2, r2, r8
   3cf50:	adc	r3, r3, r9
   3cf54:	mov	r6, r4
   3cf58:	lsl	r8, r4, #31
   3cf5c:	lsl	r4, r2, #31
   3cf60:	orr	r8, r8, r5, lsr #1
   3cf64:	orr	r4, r4, r3, lsr #1
   3cf68:	mov	r7, r5
   3cf6c:	umull	r8, r9, r8, fp
   3cf70:	umull	r4, r5, r4, lr
   3cf74:	lsl	r3, r3, #31
   3cf78:	lsl	r1, r7, #31
   3cf7c:	orr	r2, r3, r2, lsr #1
   3cf80:	orr	r6, r1, r6, lsr #1
   3cf84:	mla	r5, lr, r2, r5
   3cf88:	mla	r9, fp, r6, r9
   3cf8c:	ldrd	r2, [sp, #8]
   3cf90:	eor	r2, r2, r8
   3cf94:	eor	r3, r3, r9
   3cf98:	mov	r8, r2
   3cf9c:	mov	r9, r3
   3cfa0:	ldrd	r2, [sp, #56]	; 0x38
   3cfa4:	eor	r8, r8, r4
   3cfa8:	eor	r9, r9, r5
   3cfac:	adds	r2, r2, r8
   3cfb0:	adc	r3, r3, r9
   3cfb4:	strd	r2, [sp, #56]	; 0x38
   3cfb8:	ldr	r3, [sp, #76]	; 0x4c
   3cfbc:	sub	r3, r3, r0
   3cfc0:	cmp	r3, #15
   3cfc4:	ble	3d114 <cmetrohash64_1@@Base+0x54c>
   3cfc8:	ldrb	r1, [r0, #1]
   3cfcc:	ldrb	r2, [r0, #2]
   3cfd0:	ldrb	r6, [r0]
   3cfd4:	ldrb	r4, [r0, #9]
   3cfd8:	ldrb	r3, [r0, #8]
   3cfdc:	ldrb	lr, [r0, #10]
   3cfe0:	ldrb	r7, [r0, #3]
   3cfe4:	ldrb	r5, [r0, #11]
   3cfe8:	ldrb	sl, [r0, #5]
   3cfec:	orr	r6, r6, r1, lsl #8
   3cff0:	ldrb	ip, [r0, #6]
   3cff4:	orr	r6, r6, r2, lsl #16
   3cff8:	orr	r4, r3, r4, lsl #8
   3cffc:	ldrb	r2, [r0, #4]
   3d000:	ldr	r1, [pc, #-436]	; 3ce54 <cmetrohash64_1@@Base+0x28c>
   3d004:	ldrb	r8, [r0, #13]
   3d008:	orr	r4, r4, lr, lsl #16
   3d00c:	ldrb	r9, [r0, #7]
   3d010:	ldrb	r3, [r0, #12]
   3d014:	orr	r4, r4, r5, lsl #24
   3d018:	orr	r6, r6, r7, lsl #24
   3d01c:	ldrb	r5, [r0, #14]
   3d020:	ldr	lr, [pc, #-472]	; 3ce50 <cmetrohash64_1@@Base+0x288>
   3d024:	orr	r2, r2, sl, lsl #8
   3d028:	umull	r6, r7, r6, r1
   3d02c:	orr	r2, r2, ip, lsl #16
   3d030:	ldrb	ip, [r0, #15]
   3d034:	orr	r3, r3, r8, lsl #8
   3d038:	orr	r2, r2, r9, lsl #24
   3d03c:	orr	r3, r3, r5, lsl #16
   3d040:	umull	r4, r5, r4, lr
   3d044:	ldrd	r8, [sp, #56]	; 0x38
   3d048:	mla	r7, r1, r2, r7
   3d04c:	orr	r3, r3, ip, lsl #24
   3d050:	adds	r8, r8, r6
   3d054:	mla	r5, lr, r3, r5
   3d058:	ldrd	r2, [sp, #56]	; 0x38
   3d05c:	adc	r9, r9, r7
   3d060:	lsl	sl, r8, #31
   3d064:	adds	r2, r2, r4
   3d068:	orr	sl, sl, r9, lsr #1
   3d06c:	adc	r3, r3, r5
   3d070:	umull	sl, fp, sl, lr
   3d074:	ldr	ip, [pc, #-564]	; 3ce48 <cmetrohash64_1@@Base+0x280>
   3d078:	mov	r4, r2
   3d07c:	lsl	r2, r2, #31
   3d080:	mov	r5, r3
   3d084:	orr	r2, r2, r3, lsr #1
   3d088:	lsl	r3, r9, #31
   3d08c:	orr	r6, r3, r8, lsr #1
   3d090:	umull	r2, r3, r2, ip
   3d094:	mla	fp, lr, r6, fp
   3d098:	lsl	lr, r5, #31
   3d09c:	orr	r4, lr, r4, lsr #1
   3d0a0:	umull	r6, r7, sl, r1
   3d0a4:	mla	r3, ip, r4, r3
   3d0a8:	ldr	ip, [pc, #-612]	; 3ce4c <cmetrohash64_1@@Base+0x284>
   3d0ac:	mla	r7, r1, fp, r7
   3d0b0:	umull	r4, r5, r2, ip
   3d0b4:	mla	r5, ip, r3, r5
   3d0b8:	lsl	r1, r7, #29
   3d0bc:	orr	r9, r1, r6, lsr #3
   3d0c0:	lsl	r1, r6, #29
   3d0c4:	orr	r8, r1, r7, lsr #3
   3d0c8:	lsl	r1, r5, #29
   3d0cc:	adds	r8, r8, r2
   3d0d0:	orr	r7, r1, r4, lsr #3
   3d0d4:	lsl	r1, r4, #29
   3d0d8:	adc	r9, r9, r3
   3d0dc:	eor	r8, r8, sl
   3d0e0:	orr	r6, r1, r5, lsr #3
   3d0e4:	adds	r8, r8, r6
   3d0e8:	eor	r9, r9, fp
   3d0ec:	adc	r9, r9, r7
   3d0f0:	eor	r8, r8, r2
   3d0f4:	eor	r9, r9, r3
   3d0f8:	ldrd	r2, [sp, #56]	; 0x38
   3d0fc:	add	r0, r0, #16
   3d100:	adds	r2, r2, r8
   3d104:	adc	r3, r3, r9
   3d108:	strd	r2, [sp, #56]	; 0x38
   3d10c:	ldr	r3, [sp, #76]	; 0x4c
   3d110:	sub	r3, r3, r0
   3d114:	cmp	r3, #7
   3d118:	ble	3d1a8 <cmetrohash64_1@@Base+0x5e0>
   3d11c:	ldrb	r1, [r0, #1]
   3d120:	ldrb	r3, [r0, #2]
   3d124:	ldrb	r4, [r0]
   3d128:	ldrb	r2, [r0, #3]
   3d12c:	ldrb	lr, [r0, #5]
   3d130:	orr	r4, r4, r1, lsl #8
   3d134:	ldrb	ip, [r0, #6]
   3d138:	ldr	r1, [pc, #-756]	; 3ce4c <cmetrohash64_1@@Base+0x284>
   3d13c:	orr	r4, r4, r3, lsl #16
   3d140:	ldrb	r3, [r0, #4]
   3d144:	orr	r4, r4, r2, lsl #24
   3d148:	ldrb	r2, [r0, #7]
   3d14c:	umull	r4, r5, r4, r1
   3d150:	ldrd	r6, [sp, #56]	; 0x38
   3d154:	orr	r3, r3, lr, lsl #8
   3d158:	orr	r3, r3, ip, lsl #16
   3d15c:	orr	r3, r3, r2, lsl #24
   3d160:	adds	r6, r6, r4
   3d164:	mla	r5, r1, r3, r5
   3d168:	mov	r4, r6
   3d16c:	adc	r7, r7, r5
   3d170:	ldr	r2, [pc, #-808]	; 3ce50 <cmetrohash64_1@@Base+0x288>
   3d174:	lsl	r6, r6, #31
   3d178:	orr	r6, r6, r7, lsr #1
   3d17c:	mov	r5, r7
   3d180:	lsl	r1, r7, #31
   3d184:	umull	r6, r7, r6, r2
   3d188:	ldr	r3, [sp, #76]	; 0x4c
   3d18c:	orr	r1, r1, r4, lsr #1
   3d190:	add	r0, r0, #8
   3d194:	mla	r7, r2, r1, r7
   3d198:	eor	r8, r6, r4
   3d19c:	eor	r9, r7, r5
   3d1a0:	sub	r3, r3, r0
   3d1a4:	strd	r8, [sp, #56]	; 0x38
   3d1a8:	cmp	r3, #3
   3d1ac:	ble	3d1f0 <cmetrohash64_1@@Base+0x628>
   3d1b0:	ldr	ip, [r0], #4
   3d1b4:	ldr	r2, [pc, #-880]	; 3ce4c <cmetrohash64_1@@Base+0x284>
   3d1b8:	ldrd	r4, [sp, #56]	; 0x38
   3d1bc:	ldr	r1, [pc, #-884]	; 3ce50 <cmetrohash64_1@@Base+0x288>
   3d1c0:	ldr	r3, [sp, #76]	; 0x4c
   3d1c4:	umlal	r4, r5, r2, ip
   3d1c8:	sub	r3, r3, r0
   3d1cc:	lsr	r6, r4, #15
   3d1d0:	orr	r6, r6, r5, lsl #17
   3d1d4:	lsr	r2, r5, #15
   3d1d8:	umull	r6, r7, r6, r1
   3d1dc:	orr	r2, r2, r4, lsl #17
   3d1e0:	eor	r8, r6, r4
   3d1e4:	mla	r7, r1, r2, r7
   3d1e8:	eor	r9, r7, r5
   3d1ec:	strd	r8, [sp, #56]	; 0x38
   3d1f0:	cmp	r3, #1
   3d1f4:	ble	3d238 <cmetrohash64_1@@Base+0x670>
   3d1f8:	ldrh	ip, [r0], #2
   3d1fc:	ldr	r2, [pc, #-952]	; 3ce4c <cmetrohash64_1@@Base+0x284>
   3d200:	ldrd	r4, [sp, #56]	; 0x38
   3d204:	ldr	r1, [pc, #-956]	; 3ce50 <cmetrohash64_1@@Base+0x288>
   3d208:	ldr	r3, [sp, #76]	; 0x4c
   3d20c:	umlal	r4, r5, r2, ip
   3d210:	sub	r3, r3, r0
   3d214:	lsr	r6, r4, #13
   3d218:	orr	r6, r6, r5, lsl #19
   3d21c:	lsr	r2, r5, #13
   3d220:	umull	r6, r7, r6, r1
   3d224:	orr	r2, r2, r4, lsl #19
   3d228:	eor	r8, r6, r4
   3d22c:	mla	r7, r1, r2, r7
   3d230:	eor	r9, r7, r5
   3d234:	strd	r8, [sp, #56]	; 0x38
   3d238:	cmp	r3, #0
   3d23c:	ble	3d288 <cmetrohash64_1@@Base+0x6c0>
   3d240:	ldrb	r4, [r0]
   3d244:	ldr	r3, [pc, #-1024]	; 3ce4c <cmetrohash64_1@@Base+0x284>
   3d248:	ldr	r0, [pc, #-1024]	; 3ce50 <cmetrohash64_1@@Base+0x288>
   3d24c:	umull	r4, r5, r4, r3
   3d250:	ldrd	r2, [sp, #56]	; 0x38
   3d254:	adds	r2, r2, r4
   3d258:	adc	r3, r3, r5
   3d25c:	mov	r4, r2
   3d260:	lsr	r2, r2, #25
   3d264:	orr	r2, r2, r3, lsl #7
   3d268:	mov	r5, r3
   3d26c:	lsr	r1, r3, #25
   3d270:	umull	r2, r3, r2, r0
   3d274:	orr	r1, r1, r4, lsl #7
   3d278:	mla	r3, r0, r1, r3
   3d27c:	eor	r0, r2, r4
   3d280:	eor	r1, r3, r5
   3d284:	strd	r0, [sp, #56]	; 0x38
   3d288:	ldrd	r0, [sp, #56]	; 0x38
   3d28c:	ldr	r2, [pc, #-1088]	; 3ce54 <cmetrohash64_1@@Base+0x28c>
   3d290:	lsl	r3, r1, #31
   3d294:	orr	r5, r3, r0, lsr #1
   3d298:	lsl	r3, r0, #31
   3d29c:	orr	r4, r3, r1, lsr #1
   3d2a0:	eor	r0, r0, r4
   3d2a4:	eor	r1, r1, r5
   3d2a8:	mov	r5, r1
   3d2ac:	umull	r0, r1, r0, r2
   3d2b0:	mla	r1, r2, r5, r1
   3d2b4:	add	r3, sp, #88	; 0x58
   3d2b8:	lsl	r2, r1, #31
   3d2bc:	orr	r5, r2, r0, lsr #1
   3d2c0:	lsl	r2, r0, #31
   3d2c4:	orr	r4, r2, r1, lsr #1
   3d2c8:	eor	r0, r0, r4
   3d2cc:	eor	r1, r1, r5
   3d2d0:	strd	r0, [r3, #-8]!
   3d2d4:	ldm	r3!, {r0, r1}
   3d2d8:	ldr	r3, [sp, #132]	; 0x84
   3d2dc:	str	r0, [r3]
   3d2e0:	str	r1, [r3, #4]
   3d2e4:	add	sp, sp, #92	; 0x5c
   3d2e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003d2ec <cmetrohash64_2@@Base>:
   3d2ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d2f0:	sub	sp, sp, #92	; 0x5c
   3d2f4:	add	r5, pc, #620	; 0x26c
   3d2f8:	ldrd	r4, [r5]
   3d2fc:	ldr	ip, [sp, #128]	; 0x80
   3d300:	ldr	r1, [pc, #628]	; 3d57c <cmetrohash64_2@@Base+0x290>
   3d304:	adds	r4, r4, r2
   3d308:	adc	r5, r5, r3
   3d30c:	umlal	r4, r5, r1, ip
   3d310:	cmp	r3, #0
   3d314:	cmpeq	r2, #31
   3d318:	add	r3, r0, r2
   3d31c:	str	r3, [sp, #76]	; 0x4c
   3d320:	strd	r4, [sp, #56]	; 0x38
   3d324:	bls	3d6e0 <cmetrohash64_2@@Base+0x3f4>
   3d328:	ldr	fp, [pc, #584]	; 3d578 <cmetrohash64_2@@Base+0x28c>
   3d32c:	mov	lr, r1
   3d330:	str	fp, [sp, #68]	; 0x44
   3d334:	mov	sl, r4
   3d338:	mov	fp, r5
   3d33c:	sub	r3, r3, #32
   3d340:	str	r3, [sp, #72]	; 0x48
   3d344:	strd	r4, [sp]
   3d348:	strd	r4, [sp, #8]
   3d34c:	strd	r4, [sp, #48]	; 0x30
   3d350:	ldrb	r1, [r0, #1]
   3d354:	ldrb	r6, [r0]
   3d358:	ldrb	r2, [r0, #9]
   3d35c:	ldrb	r4, [r0, #10]
   3d360:	orr	r6, r6, r1, lsl #8
   3d364:	ldrb	r1, [r0, #8]
   3d368:	ldrb	r3, [r0, #17]
   3d36c:	ldrb	r5, [r0, #5]
   3d370:	orr	r1, r1, r2, lsl #8
   3d374:	orr	r1, r1, r4, lsl #16
   3d378:	ldrb	r4, [r0, #16]
   3d37c:	ldrb	r2, [r0, #4]
   3d380:	ldrb	ip, [r0, #2]
   3d384:	orr	r4, r4, r3, lsl #8
   3d388:	ldrb	r3, [r0, #11]
   3d38c:	ldrb	r7, [r0, #3]
   3d390:	orr	r2, r2, r5, lsl #8
   3d394:	ldrb	r5, [r0, #6]
   3d398:	orr	r3, r1, r3, lsl #24
   3d39c:	orr	r6, r6, ip, lsl #16
   3d3a0:	ldrb	ip, [r0, #25]
   3d3a4:	ldrb	r8, [r0, #18]
   3d3a8:	str	r3, [sp, #64]	; 0x40
   3d3ac:	orr	r2, r2, r5, lsl #16
   3d3b0:	ldrb	r3, [r0, #24]
   3d3b4:	ldrb	r5, [r0, #7]
   3d3b8:	orr	r6, r6, r7, lsl #24
   3d3bc:	ldrb	r1, [r0, #19]
   3d3c0:	umull	r6, r7, r6, lr
   3d3c4:	ldrb	r9, [r0, #23]
   3d3c8:	orr	r3, r3, ip, lsl #8
   3d3cc:	ldrb	ip, [r0, #26]
   3d3d0:	orr	r2, r2, r5, lsl #24
   3d3d4:	orr	r4, r4, r8, lsl #16
   3d3d8:	orr	r4, r4, r1, lsl #24
   3d3dc:	ldrb	r1, [r0, #27]
   3d3e0:	mla	r7, lr, r2, r7
   3d3e4:	ldrb	r2, [r0, #21]
   3d3e8:	orr	r3, r3, ip, lsl #16
   3d3ec:	ldrb	ip, [r0, #20]
   3d3f0:	ldrb	r5, [r0, #13]
   3d3f4:	orr	r3, r3, r1, lsl #24
   3d3f8:	ldrb	r1, [r0, #12]
   3d3fc:	orr	ip, ip, r2, lsl #8
   3d400:	ldrb	r2, [r0, #22]
   3d404:	adds	r6, r6, sl
   3d408:	orr	r1, r1, r5, lsl #8
   3d40c:	ldrb	r5, [r0, #14]
   3d410:	adc	r7, r7, fp
   3d414:	ldrb	r8, [r0, #29]
   3d418:	lsr	sl, r6, #29
   3d41c:	orr	ip, ip, r2, lsl #16
   3d420:	ldrb	r2, [r0, #28]
   3d424:	orr	sl, sl, r7, lsl #3
   3d428:	orr	r1, r1, r5, lsl #16
   3d42c:	str	sl, [sp, #16]
   3d430:	ldrb	r5, [r0, #15]
   3d434:	orr	ip, ip, r9, lsl #24
   3d438:	ldrb	r9, [r0, #30]
   3d43c:	orr	r2, r2, r8, lsl #8
   3d440:	ldrb	r8, [r0, #31]
   3d444:	orr	r1, r1, r5, lsl #24
   3d448:	orr	r2, r2, r9, lsl #16
   3d44c:	lsr	r5, r7, #29
   3d450:	orr	r5, r5, r6, lsl #3
   3d454:	orr	r2, r2, r8, lsl #24
   3d458:	ldr	r6, [sp, #64]	; 0x40
   3d45c:	ldr	r8, [sp, #68]	; 0x44
   3d460:	str	r5, [sp, #20]
   3d464:	ldr	r5, [pc, #260]	; 3d570 <cmetrohash64_2@@Base+0x284>
   3d468:	umull	r6, r7, r6, r8
   3d46c:	umull	r4, r5, r4, r5
   3d470:	mla	r7, r8, r1, r7
   3d474:	ldr	r9, [pc, #244]	; 3d570 <cmetrohash64_2@@Base+0x284>
   3d478:	ldr	r1, [pc, #244]	; 3d574 <cmetrohash64_2@@Base+0x288>
   3d47c:	ldrd	sl, [sp, #16]
   3d480:	mla	r5, r9, ip, r5
   3d484:	umull	r8, r9, r3, r1
   3d488:	mla	r9, r1, r2, r9
   3d48c:	ldrd	r2, [sp, #48]	; 0x30
   3d490:	add	r0, r0, #32
   3d494:	adds	r2, r2, r6
   3d498:	adc	r3, r3, r7
   3d49c:	mov	r6, r2
   3d4a0:	mov	r7, r3
   3d4a4:	ldrd	r2, [sp, #8]
   3d4a8:	adds	r2, r2, r4
   3d4ac:	adc	r3, r3, r5
   3d4b0:	mov	r4, r2
   3d4b4:	mov	r5, r3
   3d4b8:	ldrd	r2, [sp]
   3d4bc:	adds	r2, r2, r8
   3d4c0:	mov	r8, r2
   3d4c4:	lsr	r2, r6, #29
   3d4c8:	orr	r1, r2, r7, lsl #3
   3d4cc:	adc	r3, r3, r9
   3d4d0:	str	r1, [sp, #24]
   3d4d4:	lsr	r1, r7, #29
   3d4d8:	mov	r9, r3
   3d4dc:	orr	r1, r1, r6, lsl #3
   3d4e0:	lsr	r3, r4, #29
   3d4e4:	ldrd	r6, [sp, #8]
   3d4e8:	orr	r3, r3, r5, lsl #3
   3d4ec:	lsr	r2, r8, #29
   3d4f0:	str	r3, [sp, #32]
   3d4f4:	lsr	r3, r5, #29
   3d4f8:	adds	sl, sl, r6
   3d4fc:	orr	r3, r3, r4, lsl #3
   3d500:	str	r1, [sp, #28]
   3d504:	orr	r1, r2, r9, lsl #3
   3d508:	lsr	r2, r9, #29
   3d50c:	adc	fp, fp, r7
   3d510:	ldrd	r4, [sp]
   3d514:	str	r3, [sp, #36]	; 0x24
   3d518:	ldrd	r6, [sp, #24]
   3d51c:	orr	r3, r2, r8, lsl #3
   3d520:	str	r3, [sp, #44]	; 0x2c
   3d524:	ldrd	r2, [sp, #32]
   3d528:	adds	r6, r6, r4
   3d52c:	adc	r7, r7, r5
   3d530:	adds	r2, r2, sl
   3d534:	adc	r3, r3, fp
   3d538:	str	r1, [sp, #40]	; 0x28
   3d53c:	strd	r2, [sp, #8]
   3d540:	ldrd	r2, [sp, #40]	; 0x28
   3d544:	strd	r6, [sp, #48]	; 0x30
   3d548:	adds	r2, r2, r6
   3d54c:	adc	r3, r3, r7
   3d550:	strd	r2, [sp]
   3d554:	ldr	r3, [sp, #72]	; 0x48
   3d558:	cmp	r3, r0
   3d55c:	bcs	3d350 <cmetrohash64_2@@Base+0x64>
   3d560:	b	3d580 <cmetrohash64_2@@Base+0x294>
   3d564:	nop			; (mov r0, r0)
   3d568:	blle	ff970444 <__bss_end__@@Base+0xff905340>
   3d56c:	adcspl	r3, ip, #-134217725	; 0xf8000003
   3d570:	addsvs	r2, r9, #772	; 0x304
   3d574:	adcscc	r5, ip, r9, lsr #22
   3d578:	adcge	r0, sl, #-335544320	; 0xec000000
   3d57c:			; <UNDEFINED> instruction: 0xd6d018f5
   3d580:	ldrd	r4, [sp]
   3d584:	mov	r7, fp
   3d588:	ldr	fp, [sp, #68]	; 0x44
   3d58c:	adds	r2, sl, r4
   3d590:	adc	r3, r7, r5
   3d594:	umull	r4, r5, r2, lr
   3d598:	ldrd	r8, [sp, #8]
   3d59c:	mla	r5, lr, r3, r5
   3d5a0:	ldrd	r2, [sp, #48]	; 0x30
   3d5a4:	mov	r6, sl
   3d5a8:	adds	r2, r2, r4
   3d5ac:	adc	r3, r3, r5
   3d5b0:	mov	r4, r2
   3d5b4:	lsr	r2, r2, #30
   3d5b8:	orr	r2, r2, r3, lsl #2
   3d5bc:	lsr	r1, r3, #30
   3d5c0:	umull	r2, r3, r2, fp
   3d5c4:	strd	r6, [sp, #8]
   3d5c8:	orr	r4, r1, r4, lsl #2
   3d5cc:	eor	r8, r8, r2
   3d5d0:	mla	r3, fp, r4, r3
   3d5d4:	ldrd	r4, [sp, #48]	; 0x30
   3d5d8:	eor	r9, r9, r3
   3d5dc:	adds	r4, r4, r8
   3d5e0:	adc	r5, r5, r9
   3d5e4:	umull	r2, r3, r4, fp
   3d5e8:	mla	r3, fp, r5, r3
   3d5ec:	adds	r4, sl, r2
   3d5f0:	adc	r5, r7, r3
   3d5f4:	lsr	r6, r4, #30
   3d5f8:	lsr	r3, r5, #30
   3d5fc:	orr	r2, r3, r4, lsl #2
   3d600:	orr	r6, r6, r5, lsl #2
   3d604:	ldrd	r4, [sp, #8]
   3d608:	umull	r6, r7, r6, lr
   3d60c:	adds	r4, r4, r8
   3d610:	adc	r5, r5, r9
   3d614:	mla	r7, lr, r2, r7
   3d618:	strd	r4, [sp, #16]
   3d61c:	ldrd	r2, [sp, #8]
   3d620:	ldrd	r4, [sp, #48]	; 0x30
   3d624:	ldr	r1, [sp, #20]
   3d628:	eor	r2, r2, r4
   3d62c:	eor	r3, r3, r5
   3d630:	strd	r2, [sp, #8]
   3d634:	ldrd	r2, [sp]
   3d638:	eor	r2, r2, r6
   3d63c:	adds	r4, r4, r2
   3d640:	eor	r3, r3, r7
   3d644:	adc	r5, r5, r3
   3d648:	mov	r7, r3
   3d64c:	ldr	r3, [sp, #16]
   3d650:	mov	r6, r2
   3d654:	strd	r6, [sp]
   3d658:	umull	r6, r7, r3, lr
   3d65c:	umull	r2, r3, r4, fp
   3d660:	mla	r7, lr, r1, r7
   3d664:	mla	r3, fp, r5, r3
   3d668:	ldrd	r4, [sp]
   3d66c:	adds	r4, r4, r6
   3d670:	adc	r5, r5, r7
   3d674:	adds	r2, r2, r8
   3d678:	adc	r3, r3, r9
   3d67c:	mov	r6, r4
   3d680:	lsr	r8, r4, #30
   3d684:	lsr	r4, r2, #30
   3d688:	orr	r8, r8, r5, lsl #2
   3d68c:	orr	r4, r4, r3, lsl #2
   3d690:	mov	r7, r5
   3d694:	umull	r8, r9, r8, fp
   3d698:	umull	r4, r5, r4, lr
   3d69c:	lsr	r3, r3, #30
   3d6a0:	lsr	r1, r7, #30
   3d6a4:	orr	r2, r3, r2, lsl #2
   3d6a8:	orr	r6, r1, r6, lsl #2
   3d6ac:	mla	r5, lr, r2, r5
   3d6b0:	mla	r9, fp, r6, r9
   3d6b4:	ldrd	r2, [sp, #8]
   3d6b8:	eor	r2, r2, r8
   3d6bc:	eor	r3, r3, r9
   3d6c0:	mov	r8, r2
   3d6c4:	mov	r9, r3
   3d6c8:	ldrd	r2, [sp, #56]	; 0x38
   3d6cc:	eor	r8, r8, r4
   3d6d0:	eor	r9, r9, r5
   3d6d4:	adds	r2, r2, r8
   3d6d8:	adc	r3, r3, r9
   3d6dc:	strd	r2, [sp, #56]	; 0x38
   3d6e0:	ldr	r3, [sp, #76]	; 0x4c
   3d6e4:	sub	r3, r3, r0
   3d6e8:	cmp	r3, #15
   3d6ec:	ble	3d830 <cmetrohash64_2@@Base+0x544>
   3d6f0:	ldrb	r2, [r0, #1]
   3d6f4:	ldrb	r1, [r0, #2]
   3d6f8:	ldrb	r6, [r0]
   3d6fc:	ldrb	r7, [r0, #3]
   3d700:	ldrb	r5, [r0, #9]
   3d704:	ldrb	r3, [r0, #10]
   3d708:	ldrb	r4, [r0, #8]
   3d70c:	ldrb	lr, [r0, #11]
   3d710:	orr	r6, r6, r2, lsl #8
   3d714:	ldrb	r2, [r0, #5]
   3d718:	ldr	ip, [pc, #-432]	; 3d570 <cmetrohash64_2@@Base+0x284>
   3d71c:	ldrb	sl, [r0, #6]
   3d720:	orr	r6, r6, r1, lsl #16
   3d724:	ldrb	r1, [r0, #4]
   3d728:	ldrb	r9, [r0, #7]
   3d72c:	orr	r4, r4, r5, lsl #8
   3d730:	orr	r6, r6, r7, lsl #24
   3d734:	ldrb	r5, [r0, #13]
   3d738:	ldrb	r8, [r0, #14]
   3d73c:	orr	r4, r4, r3, lsl #16
   3d740:	ldrb	r3, [r0, #12]
   3d744:	umull	r6, r7, r6, ip
   3d748:	orr	r1, r1, r2, lsl #8
   3d74c:	orr	r4, r4, lr, lsl #24
   3d750:	ldrb	lr, [r0, #15]
   3d754:	orr	r2, r1, sl, lsl #16
   3d758:	orr	r2, r2, r9, lsl #24
   3d75c:	orr	r3, r3, r5, lsl #8
   3d760:	umull	r4, r5, r4, ip
   3d764:	mla	r7, ip, r2, r7
   3d768:	orr	r3, r3, r8, lsl #16
   3d76c:	ldrd	r8, [sp, #56]	; 0x38
   3d770:	orr	lr, r3, lr, lsl #24
   3d774:	ldr	r1, [pc, #-520]	; 3d574 <cmetrohash64_2@@Base+0x288>
   3d778:	adds	r2, r8, r6
   3d77c:	mla	r5, ip, lr, r5
   3d780:	adc	r3, r9, r7
   3d784:	lsr	sl, r2, #29
   3d788:	adds	r8, r8, r4
   3d78c:	adc	r9, r9, r5
   3d790:	orr	sl, sl, r3, lsl #3
   3d794:	mov	r6, r2
   3d798:	lsr	r2, r8, #29
   3d79c:	umull	sl, fp, sl, r1
   3d7a0:	ldr	ip, [pc, #-556]	; 3d57c <cmetrohash64_2@@Base+0x290>
   3d7a4:	orr	r2, r2, r9, lsl #3
   3d7a8:	lsr	r3, r3, #29
   3d7ac:	orr	r6, r3, r6, lsl #3
   3d7b0:	umull	r2, r3, r2, r1
   3d7b4:	mla	fp, r1, r6, fp
   3d7b8:	lsr	lr, r9, #29
   3d7bc:	umull	r6, r7, sl, ip
   3d7c0:	orr	r4, lr, r8, lsl #3
   3d7c4:	mla	r7, ip, fp, r7
   3d7c8:	mla	r3, r1, r4, r3
   3d7cc:	umull	r4, r5, r2, r1
   3d7d0:	mla	r5, r1, r3, r5
   3d7d4:	lsl	r1, r7, #30
   3d7d8:	orr	r9, r1, r6, lsr #2
   3d7dc:	lsl	r1, r6, #30
   3d7e0:	orr	r8, r1, r7, lsr #2
   3d7e4:	lsl	r1, r5, #30
   3d7e8:	adds	r8, r8, r2
   3d7ec:	orr	r7, r1, r4, lsr #2
   3d7f0:	lsl	r1, r4, #30
   3d7f4:	adc	r9, r9, r3
   3d7f8:	eor	r8, r8, sl
   3d7fc:	orr	r6, r1, r5, lsr #2
   3d800:	adds	r8, r8, r6
   3d804:	eor	r9, r9, fp
   3d808:	adc	r9, r9, r7
   3d80c:	eor	r8, r8, r2
   3d810:	eor	r9, r9, r3
   3d814:	ldrd	r2, [sp, #56]	; 0x38
   3d818:	add	r0, r0, #16
   3d81c:	adds	r2, r2, r8
   3d820:	adc	r3, r3, r9
   3d824:	strd	r2, [sp, #56]	; 0x38
   3d828:	ldr	r3, [sp, #76]	; 0x4c
   3d82c:	sub	r3, r3, r0
   3d830:	cmp	r3, #7
   3d834:	ble	3d8c4 <cmetrohash64_2@@Base+0x5d8>
   3d838:	ldrb	r1, [r0, #1]
   3d83c:	ldrb	r3, [r0, #2]
   3d840:	ldrb	r4, [r0]
   3d844:	ldrb	r2, [r0, #3]
   3d848:	ldrb	lr, [r0, #5]
   3d84c:	orr	r4, r4, r1, lsl #8
   3d850:	ldrb	ip, [r0, #6]
   3d854:	ldr	r1, [pc, #-744]	; 3d574 <cmetrohash64_2@@Base+0x288>
   3d858:	orr	r4, r4, r3, lsl #16
   3d85c:	ldrb	r3, [r0, #4]
   3d860:	orr	r4, r4, r2, lsl #24
   3d864:	ldrb	r2, [r0, #7]
   3d868:	umull	r4, r5, r4, r1
   3d86c:	ldrd	r6, [sp, #56]	; 0x38
   3d870:	orr	r3, r3, lr, lsl #8
   3d874:	orr	r3, r3, ip, lsl #16
   3d878:	orr	r3, r3, r2, lsl #24
   3d87c:	adds	r6, r6, r4
   3d880:	mla	r5, r1, r3, r5
   3d884:	mov	r4, r6
   3d888:	adc	r7, r7, r5
   3d88c:	ldr	r2, [pc, #-796]	; 3d578 <cmetrohash64_2@@Base+0x28c>
   3d890:	lsl	r6, r6, #28
   3d894:	orr	r6, r6, r7, lsr #4
   3d898:	mov	r5, r7
   3d89c:	lsl	r1, r7, #28
   3d8a0:	umull	r6, r7, r6, r2
   3d8a4:	ldr	r3, [sp, #76]	; 0x4c
   3d8a8:	orr	r1, r1, r4, lsr #4
   3d8ac:	add	r0, r0, #8
   3d8b0:	mla	r7, r2, r1, r7
   3d8b4:	eor	r8, r6, r4
   3d8b8:	eor	r9, r7, r5
   3d8bc:	sub	r3, r3, r0
   3d8c0:	strd	r8, [sp, #56]	; 0x38
   3d8c4:	cmp	r3, #3
   3d8c8:	ble	3d90c <cmetrohash64_2@@Base+0x620>
   3d8cc:	ldr	ip, [r0], #4
   3d8d0:	ldr	r2, [pc, #-868]	; 3d574 <cmetrohash64_2@@Base+0x288>
   3d8d4:	ldrd	r4, [sp, #56]	; 0x38
   3d8d8:	ldr	r1, [pc, #-872]	; 3d578 <cmetrohash64_2@@Base+0x28c>
   3d8dc:	ldr	r3, [sp, #76]	; 0x4c
   3d8e0:	umlal	r4, r5, r2, ip
   3d8e4:	sub	r3, r3, r0
   3d8e8:	lsr	r6, r4, #15
   3d8ec:	orr	r6, r6, r5, lsl #17
   3d8f0:	lsr	r2, r5, #15
   3d8f4:	umull	r6, r7, r6, r1
   3d8f8:	orr	r2, r2, r4, lsl #17
   3d8fc:	eor	r8, r6, r4
   3d900:	mla	r7, r1, r2, r7
   3d904:	eor	r9, r7, r5
   3d908:	strd	r8, [sp, #56]	; 0x38
   3d90c:	cmp	r3, #1
   3d910:	ble	3d954 <cmetrohash64_2@@Base+0x668>
   3d914:	ldrh	ip, [r0], #2
   3d918:	ldr	r2, [pc, #-940]	; 3d574 <cmetrohash64_2@@Base+0x288>
   3d91c:	ldrd	r4, [sp, #56]	; 0x38
   3d920:	ldr	r1, [pc, #-944]	; 3d578 <cmetrohash64_2@@Base+0x28c>
   3d924:	ldr	r3, [sp, #76]	; 0x4c
   3d928:	umlal	r4, r5, r2, ip
   3d92c:	sub	r3, r3, r0
   3d930:	lsr	r6, r4, #15
   3d934:	orr	r6, r6, r5, lsl #17
   3d938:	lsr	r2, r5, #15
   3d93c:	umull	r6, r7, r6, r1
   3d940:	orr	r2, r2, r4, lsl #17
   3d944:	eor	r8, r6, r4
   3d948:	mla	r7, r1, r2, r7
   3d94c:	eor	r9, r7, r5
   3d950:	strd	r8, [sp, #56]	; 0x38
   3d954:	cmp	r3, #0
   3d958:	ble	3d9a4 <cmetrohash64_2@@Base+0x6b8>
   3d95c:	ldrb	r4, [r0]
   3d960:	ldr	r3, [pc, #-1012]	; 3d574 <cmetrohash64_2@@Base+0x288>
   3d964:	ldr	r0, [pc, #-1012]	; 3d578 <cmetrohash64_2@@Base+0x28c>
   3d968:	umull	r4, r5, r4, r3
   3d96c:	ldrd	r2, [sp, #56]	; 0x38
   3d970:	adds	r2, r2, r4
   3d974:	adc	r3, r3, r5
   3d978:	mov	r4, r2
   3d97c:	lsr	r2, r2, #23
   3d980:	orr	r2, r2, r3, lsl #9
   3d984:	mov	r5, r3
   3d988:	lsr	r1, r3, #23
   3d98c:	umull	r2, r3, r2, r0
   3d990:	orr	r1, r1, r4, lsl #9
   3d994:	mla	r3, r0, r1, r3
   3d998:	eor	r0, r2, r4
   3d99c:	eor	r1, r3, r5
   3d9a0:	strd	r0, [sp, #56]	; 0x38
   3d9a4:	ldrd	r0, [sp, #56]	; 0x38
   3d9a8:	ldr	r2, [pc, #-1076]	; 3d57c <cmetrohash64_2@@Base+0x290>
   3d9ac:	lsr	r3, r0, #28
   3d9b0:	orr	r4, r3, r1, lsl #4
   3d9b4:	lsr	r3, r1, #28
   3d9b8:	orr	r5, r3, r0, lsl #4
   3d9bc:	eor	r0, r0, r4
   3d9c0:	eor	r1, r1, r5
   3d9c4:	mov	r5, r1
   3d9c8:	umull	r0, r1, r0, r2
   3d9cc:	mla	r1, r2, r5, r1
   3d9d0:	lsr	r2, r0, #29
   3d9d4:	add	r3, sp, #88	; 0x58
   3d9d8:	orr	r4, r2, r1, lsl #3
   3d9dc:	lsr	r2, r1, #29
   3d9e0:	orr	r5, r2, r0, lsl #3
   3d9e4:	eor	r1, r1, r5
   3d9e8:	eor	r0, r0, r4
   3d9ec:	strd	r0, [r3, #-8]!
   3d9f0:	ldm	r3!, {r0, r1}
   3d9f4:	ldr	r3, [sp, #132]	; 0x84
   3d9f8:	str	r0, [r3]
   3d9fc:	str	r1, [r3, #4]
   3da00:	add	sp, sp, #92	; 0x5c
   3da04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3da08:	push	{r4, lr}
   3da0c:	mov	r4, r0
   3da10:	ldr	r0, [r0]
   3da14:	cmp	r0, #0
   3da18:	beq	3da20 <cmetrohash64_2@@Base+0x734>
   3da1c:	bl	13fcc <free@plt>
   3da20:	mov	r3, #0
   3da24:	str	r3, [r4]
   3da28:	str	r3, [r4, #4]
   3da2c:	str	r3, [r4, #8]
   3da30:	str	r3, [r4, #12]
   3da34:	pop	{r4, pc}
   3da38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3da3c:	sub	sp, sp, #36	; 0x24
   3da40:	ldr	r4, [pc, #584]	; 3dc90 <cmetrohash64_2@@Base+0x9a4>
   3da44:	cmp	r3, #0
   3da48:	str	r3, [sp, #12]
   3da4c:	str	r1, [sp, #16]
   3da50:	add	r4, pc, r4
   3da54:	beq	3dc70 <cmetrohash64_2@@Base+0x984>
   3da58:	ldr	r3, [sp, #12]
   3da5c:	cmp	r3, #2
   3da60:	beq	3dc28 <cmetrohash64_2@@Base+0x93c>
   3da64:	ldr	r3, [sp, #12]
   3da68:	cmp	r3, #1
   3da6c:	beq	3dc08 <cmetrohash64_2@@Base+0x91c>
   3da70:	ldr	r8, [r0, #12]
   3da74:	mov	r3, #179	; 0xb3
   3da78:	ldr	r1, [r0, #8]
   3da7c:	mul	r3, r3, r8
   3da80:	mov	r9, r2
   3da84:	mov	sl, r0
   3da88:	cmp	r1, r3, lsr #8
   3da8c:	bcc	3daa4 <cmetrohash64_2@@Base+0x7b8>
   3da90:	lsl	r1, r1, #1
   3da94:	bl	3dcc8 <cmetrohash64_2@@Base+0x9dc>
   3da98:	cmp	r0, #0
   3da9c:	bne	3dc48 <cmetrohash64_2@@Base+0x95c>
   3daa0:	ldr	r8, [sl, #12]
   3daa4:	ldr	r3, [pc, #488]	; 3dc94 <cmetrohash64_2@@Base+0x9a8>
   3daa8:	mov	r2, r9
   3daac:	str	r3, [sp]
   3dab0:	add	r3, sp, #24
   3dab4:	str	r3, [sp, #4]
   3dab8:	ldr	r0, [sp, #16]
   3dabc:	mov	r3, #0
   3dac0:	ldr	r7, [sl]
   3dac4:	bl	3cbc8 <cmetrohash64_1@@Base>
   3dac8:	ldr	r3, [sp, #72]	; 0x48
   3dacc:	ldr	r6, [sp, #24]
   3dad0:	sub	r3, r3, #2
   3dad4:	sub	r8, r8, #1
   3dad8:	cmp	r3, #1
   3dadc:	and	r4, r8, r6
   3dae0:	bls	3dbb4 <cmetrohash64_2@@Base+0x8c8>
   3dae4:	ldr	r5, [r7, r4, lsl #2]
   3dae8:	add	r4, r7, r4, lsl #2
   3daec:	cmp	r5, #0
   3daf0:	moveq	fp, r4
   3daf4:	beq	3db90 <cmetrohash64_2@@Base+0x8a4>
   3daf8:	str	sl, [sp, #20]
   3dafc:	add	r6, r6, #1
   3db00:	mov	sl, r5
   3db04:	mov	fp, #0
   3db08:	ldr	r5, [sp, #16]
   3db0c:	b	3db28 <cmetrohash64_2@@Base+0x83c>
   3db10:	and	r4, r8, r6
   3db14:	add	r6, r6, #1
   3db18:	ldr	sl, [r7, r4, lsl #2]
   3db1c:	add	r4, r7, r4, lsl #2
   3db20:	cmp	sl, #0
   3db24:	beq	3db84 <cmetrohash64_2@@Base+0x898>
   3db28:	cmp	sl, #2
   3db2c:	beq	3db78 <cmetrohash64_2@@Base+0x88c>
   3db30:	ldr	r2, [sl, #12]
   3db34:	cmp	r9, r2
   3db38:	bne	3db10 <cmetrohash64_2@@Base+0x824>
   3db3c:	mov	r2, r9
   3db40:	ldr	r1, [sl, #8]
   3db44:	mov	r0, r5
   3db48:	bl	13ff0 <memcmp@plt>
   3db4c:	cmp	r0, #0
   3db50:	bne	3db10 <cmetrohash64_2@@Base+0x824>
   3db54:	ldr	r3, [sp, #72]	; 0x48
   3db58:	mov	r5, sl
   3db5c:	cmp	r3, #0
   3db60:	bne	3dba8 <cmetrohash64_2@@Base+0x8bc>
   3db64:	ldr	r3, [sp, #12]
   3db68:	mov	r0, r5
   3db6c:	str	r3, [r4]
   3db70:	add	sp, sp, #36	; 0x24
   3db74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3db78:	cmp	fp, #0
   3db7c:	moveq	fp, r4
   3db80:	b	3db10 <cmetrohash64_2@@Base+0x824>
   3db84:	cmp	fp, #0
   3db88:	ldr	sl, [sp, #20]
   3db8c:	moveq	fp, r4
   3db90:	ldr	r2, [sl, #8]
   3db94:	ldr	r3, [sp, #12]
   3db98:	mov	r5, #0
   3db9c:	add	r2, r2, #1
   3dba0:	str	r2, [sl, #8]
   3dba4:	str	r3, [fp]
   3dba8:	mov	r0, r5
   3dbac:	add	sp, sp, #36	; 0x24
   3dbb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3dbb4:	ldr	r2, [r7, r4, lsl #2]
   3dbb8:	ldr	r3, [sl, #8]
   3dbbc:	cmp	r2, #0
   3dbc0:	cmpne	r2, #2
   3dbc4:	add	r3, r3, #1
   3dbc8:	str	r3, [sl, #8]
   3dbcc:	add	r4, r7, r4, lsl #2
   3dbd0:	beq	3dbf8 <cmetrohash64_2@@Base+0x90c>
   3dbd4:	add	r6, r6, #1
   3dbd8:	and	r3, r8, r6
   3dbdc:	add	r6, r6, #1
   3dbe0:	ldr	r2, [r7, r3, lsl #2]
   3dbe4:	add	r3, r7, r3, lsl #2
   3dbe8:	cmp	r2, #0
   3dbec:	cmpne	r2, #2
   3dbf0:	bne	3dbd8 <cmetrohash64_2@@Base+0x8ec>
   3dbf4:	mov	r4, r3
   3dbf8:	ldr	r3, [sp, #12]
   3dbfc:	mov	r5, #0
   3dc00:	str	r3, [r4]
   3dc04:	b	3dba8 <cmetrohash64_2@@Base+0x8bc>
   3dc08:	ldr	r3, [pc, #136]	; 3dc98 <cmetrohash64_2@@Base+0x9ac>
   3dc0c:	ldr	r1, [pc, #136]	; 3dc9c <cmetrohash64_2@@Base+0x9b0>
   3dc10:	ldr	r0, [pc, #136]	; 3dca0 <cmetrohash64_2@@Base+0x9b4>
   3dc14:	add	r3, pc, r3
   3dc18:	mov	r2, #116	; 0x74
   3dc1c:	add	r1, pc, r1
   3dc20:	add	r0, pc, r0
   3dc24:	bl	14140 <__assert_fail@plt>
   3dc28:	ldr	r3, [pc, #116]	; 3dca4 <cmetrohash64_2@@Base+0x9b8>
   3dc2c:	ldr	r1, [pc, #116]	; 3dca8 <cmetrohash64_2@@Base+0x9bc>
   3dc30:	ldr	r0, [pc, #116]	; 3dcac <cmetrohash64_2@@Base+0x9c0>
   3dc34:	add	r3, pc, r3
   3dc38:	mov	r2, #115	; 0x73
   3dc3c:	add	r1, pc, r1
   3dc40:	add	r0, pc, r0
   3dc44:	bl	14140 <__assert_fail@plt>
   3dc48:	ldr	r3, [pc, #96]	; 3dcb0 <cmetrohash64_2@@Base+0x9c4>
   3dc4c:	ldr	r2, [pc, #96]	; 3dcb4 <cmetrohash64_2@@Base+0x9c8>
   3dc50:	ldr	r1, [pc, #96]	; 3dcb8 <cmetrohash64_2@@Base+0x9cc>
   3dc54:	ldr	r3, [r4, r3]
   3dc58:	add	r2, pc, r2
   3dc5c:	add	r1, pc, r1
   3dc60:	ldr	r0, [r3]
   3dc64:	bl	1408c <fprintf@plt>
   3dc68:	mov	r0, #1
   3dc6c:	bl	14068 <exit@plt>
   3dc70:	ldr	r3, [pc, #68]	; 3dcbc <cmetrohash64_2@@Base+0x9d0>
   3dc74:	ldr	r1, [pc, #68]	; 3dcc0 <cmetrohash64_2@@Base+0x9d4>
   3dc78:	ldr	r0, [pc, #68]	; 3dcc4 <cmetrohash64_2@@Base+0x9d8>
   3dc7c:	add	r3, pc, r3
   3dc80:	mov	r2, #114	; 0x72
   3dc84:	add	r1, pc, r1
   3dc88:	add	r0, pc, r0
   3dc8c:	bl	14140 <__assert_fail@plt>
   3dc90:	andeq	sp, r2, r8, lsr #11
   3dc94:	svccs	0x00693b52
   3dc98:	andeq	sp, r1, ip, lsr r2
   3dc9c:	andeq	r9, r1, r4, ror #23
   3dca0:	andeq	r9, r1, r8, ror ip
   3dca4:	andeq	sp, r1, ip, lsl r2
   3dca8:	andeq	r9, r1, r4, asr #23
   3dcac:	andeq	r9, r1, r0, asr #24
   3dcb0:	andeq	r0, r0, r0, lsr #1
   3dcb4:	andeq	r9, r1, r8, asr ip
   3dcb8:	andeq	r9, r1, r8, lsl #25
   3dcbc:	ldrdeq	sp, [r1], -r4
   3dcc0:	andeq	r9, r1, ip, ror fp
   3dcc4:	andeq	r9, r1, r0, ror #23
   3dcc8:	ldr	r3, [r0, #8]
   3dccc:	push	{r4, r5, r6, r7, r8, lr}
   3dcd0:	cmp	r1, r3
   3dcd4:	movcc	r1, r3
   3dcd8:	cmp	r1, #2
   3dcdc:	sub	sp, sp, #24
   3dce0:	mov	r6, r0
   3dce4:	ldr	r7, [r0]
   3dce8:	mov	r5, #4
   3dcec:	bls	3dd04 <cmetrohash64_2@@Base+0xa18>
   3dcf0:	mov	r2, #179	; 0xb3
   3dcf4:	lsl	r5, r5, #1
   3dcf8:	mul	r3, r2, r5
   3dcfc:	cmp	r1, r3, lsr #8
   3dd00:	bhi	3dcf4 <cmetrohash64_2@@Base+0xa08>
   3dd04:	mov	r1, #4
   3dd08:	mov	r0, r5
   3dd0c:	bl	13f9c <calloc@plt>
   3dd10:	cmp	r0, #0
   3dd14:	str	r0, [sp, #8]
   3dd18:	beq	3ddbc <cmetrohash64_2@@Base+0xad0>
   3dd1c:	ldr	r2, [r6, #12]
   3dd20:	mov	r4, #0
   3dd24:	cmp	r2, r4
   3dd28:	str	r5, [sp, #20]
   3dd2c:	str	r4, [sp, #12]
   3dd30:	subne	r5, r7, #4
   3dd34:	str	r4, [sp, #16]
   3dd38:	addne	r7, sp, #8
   3dd3c:	movne	r8, #3
   3dd40:	bne	3dd50 <cmetrohash64_2@@Base+0xa64>
   3dd44:	b	3ddb4 <cmetrohash64_2@@Base+0xac8>
   3dd48:	cmp	r2, r4
   3dd4c:	bls	3dd84 <cmetrohash64_2@@Base+0xa98>
   3dd50:	ldr	r3, [r5, #4]!
   3dd54:	add	r4, r4, #1
   3dd58:	cmp	r3, #0
   3dd5c:	cmpne	r3, #2
   3dd60:	beq	3dd48 <cmetrohash64_2@@Base+0xa5c>
   3dd64:	ldr	r2, [r3, #12]
   3dd68:	ldr	r1, [r3, #8]
   3dd6c:	mov	r0, r7
   3dd70:	str	r8, [sp]
   3dd74:	bl	3da38 <cmetrohash64_2@@Base+0x74c>
   3dd78:	ldr	r2, [r6, #12]
   3dd7c:	cmp	r2, r4
   3dd80:	bhi	3dd50 <cmetrohash64_2@@Base+0xa64>
   3dd84:	mov	r0, r6
   3dd88:	bl	3da08 <cmetrohash64_2@@Base+0x71c>
   3dd8c:	mov	ip, r7
   3dd90:	mov	lr, #0
   3dd94:	ldm	ip!, {r0, r1, r2, r3}
   3dd98:	str	r0, [r6]
   3dd9c:	str	r1, [r6, #4]
   3dda0:	str	r2, [r6, #8]
   3dda4:	str	r3, [r6, #12]
   3dda8:	mov	r0, lr
   3ddac:	add	sp, sp, #24
   3ddb0:	pop	{r4, r5, r6, r7, r8, pc}
   3ddb4:	add	r7, sp, #8
   3ddb8:	b	3dd84 <cmetrohash64_2@@Base+0xa98>
   3ddbc:	mvn	lr, #0
   3ddc0:	b	3dda8 <cmetrohash64_2@@Base+0xabc>
   3ddc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ddc8:	sub	sp, sp, #20
   3ddcc:	ldr	r5, [r0]
   3ddd0:	cmp	r5, #0
   3ddd4:	beq	3de8c <cmetrohash64_2@@Base+0xba0>
   3ddd8:	ldr	r3, [pc, #188]	; 3de9c <cmetrohash64_2@@Base+0xbb0>
   3dddc:	ldr	r7, [r0, #12]
   3dde0:	str	r3, [sp]
   3dde4:	add	r3, sp, #8
   3dde8:	str	r3, [sp, #4]
   3ddec:	mov	r9, r0
   3ddf0:	mov	r3, #0
   3ddf4:	mov	r0, r1
   3ddf8:	mov	r6, r2
   3ddfc:	mov	r8, r1
   3de00:	bl	3cbc8 <cmetrohash64_1@@Base>
   3de04:	ldr	sl, [sp, #8]
   3de08:	sub	r7, r7, #1
   3de0c:	and	r3, r7, sl
   3de10:	ldr	fp, [r5, r3, lsl #2]
   3de14:	add	r4, r5, r3, lsl #2
   3de18:	cmp	fp, #0
   3de1c:	beq	3de8c <cmetrohash64_2@@Base+0xba0>
   3de20:	add	sl, sl, #1
   3de24:	b	3de40 <cmetrohash64_2@@Base+0xb54>
   3de28:	and	r3, sl, r7
   3de2c:	add	sl, sl, #1
   3de30:	ldr	fp, [r5, r3, lsl #2]
   3de34:	add	r4, r5, r3, lsl #2
   3de38:	cmp	fp, #0
   3de3c:	beq	3de8c <cmetrohash64_2@@Base+0xba0>
   3de40:	cmp	fp, #2
   3de44:	beq	3de28 <cmetrohash64_2@@Base+0xb3c>
   3de48:	ldr	r3, [fp, #12]
   3de4c:	cmp	r6, r3
   3de50:	bne	3de28 <cmetrohash64_2@@Base+0xb3c>
   3de54:	mov	r2, r6
   3de58:	ldr	r1, [fp, #8]
   3de5c:	mov	r0, r8
   3de60:	bl	13ff0 <memcmp@plt>
   3de64:	cmp	r0, #0
   3de68:	bne	3de28 <cmetrohash64_2@@Base+0xb3c>
   3de6c:	ldr	r3, [r9, #8]
   3de70:	mov	r2, #2
   3de74:	sub	r3, r3, #1
   3de78:	str	r2, [r4]
   3de7c:	mov	r0, fp
   3de80:	str	r3, [r9, #8]
   3de84:	add	sp, sp, #20
   3de88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3de8c:	mov	fp, #0
   3de90:	mov	r0, fp
   3de94:	add	sp, sp, #20
   3de98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3de9c:	svccs	0x00693b52
   3dea0:	push	{r4, r5, r6, r7, r8, r9, lr}
   3dea4:	subs	r7, r0, #0
   3dea8:	sub	sp, sp, #20
   3deac:	beq	3df48 <cmetrohash64_2@@Base+0xc5c>
   3deb0:	mov	r6, r3
   3deb4:	ldr	r3, [pc, #156]	; 3df58 <cmetrohash64_2@@Base+0xc6c>
   3deb8:	ldr	r8, [r1]
   3debc:	mov	r9, r2
   3dec0:	str	r3, [sp]
   3dec4:	add	r3, sp, #8
   3dec8:	str	r3, [sp, #4]
   3decc:	mov	r2, r6
   3ded0:	mov	r3, #0
   3ded4:	mov	r0, r9
   3ded8:	bl	3cbc8 <cmetrohash64_1@@Base>
   3dedc:	ldr	r5, [sp, #8]
   3dee0:	sub	r8, r8, #1
   3dee4:	and	r3, r8, r5
   3dee8:	ldr	r4, [r7, r3, lsl #2]
   3deec:	cmp	r4, #0
   3def0:	beq	3df48 <cmetrohash64_2@@Base+0xc5c>
   3def4:	add	r5, r5, #1
   3def8:	b	3df10 <cmetrohash64_2@@Base+0xc24>
   3defc:	and	r1, r8, r5
   3df00:	add	r5, r5, #1
   3df04:	ldr	r4, [r7, r1, lsl #2]
   3df08:	cmp	r4, #0
   3df0c:	beq	3df48 <cmetrohash64_2@@Base+0xc5c>
   3df10:	cmp	r4, #2
   3df14:	beq	3defc <cmetrohash64_2@@Base+0xc10>
   3df18:	ldr	r3, [r4, #12]
   3df1c:	cmp	r6, r3
   3df20:	bne	3defc <cmetrohash64_2@@Base+0xc10>
   3df24:	mov	r2, r6
   3df28:	ldr	r1, [r4, #8]
   3df2c:	mov	r0, r9
   3df30:	bl	13ff0 <memcmp@plt>
   3df34:	cmp	r0, #0
   3df38:	bne	3defc <cmetrohash64_2@@Base+0xc10>
   3df3c:	mov	r0, r4
   3df40:	add	sp, sp, #20
   3df44:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3df48:	mov	r4, #0
   3df4c:	mov	r0, r4
   3df50:	add	sp, sp, #20
   3df54:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3df58:	svccs	0x00693b52

0003df5c <fb_name_table_clear@@Base>:
   3df5c:	b	3da08 <cmetrohash64_2@@Base+0x71c>

0003df60 <fb_name_table_destroy@@Base>:
   3df60:	push	{r4, r5, r6, r7, r8, lr}
   3df64:	subs	r7, r1, #0
   3df68:	mov	r6, r0
   3df6c:	beq	3dfc0 <fb_name_table_destroy@@Base+0x60>
   3df70:	ldr	r3, [r0, #12]
   3df74:	ldr	r5, [r0]
   3df78:	cmp	r3, #0
   3df7c:	beq	3dfc0 <fb_name_table_destroy@@Base+0x60>
   3df80:	mov	r8, r2
   3df84:	sub	r5, r5, #4
   3df88:	mov	r4, #0
   3df8c:	b	3df98 <fb_name_table_destroy@@Base+0x38>
   3df90:	cmp	r4, r3
   3df94:	bcs	3dfc0 <fb_name_table_destroy@@Base+0x60>
   3df98:	ldr	r1, [r5, #4]!
   3df9c:	add	r4, r4, #1
   3dfa0:	cmp	r1, #0
   3dfa4:	cmpne	r1, #2
   3dfa8:	beq	3df90 <fb_name_table_destroy@@Base+0x30>
   3dfac:	mov	r0, r8
   3dfb0:	blx	r7
   3dfb4:	ldr	r3, [r6, #12]
   3dfb8:	cmp	r4, r3
   3dfbc:	bcc	3df98 <fb_name_table_destroy@@Base+0x38>
   3dfc0:	mov	r0, r6
   3dfc4:	pop	{r4, r5, r6, r7, r8, lr}
   3dfc8:	b	3da08 <cmetrohash64_2@@Base+0x71c>

0003dfcc <fb_name_table_init@@Base>:
   3dfcc:	cmp	r1, #2
   3dfd0:	push	{r4, r5, r6, lr}
   3dfd4:	mov	r4, #4
   3dfd8:	mov	r5, r0
   3dfdc:	bls	3dff4 <fb_name_table_init@@Base+0x28>
   3dfe0:	mov	r2, #179	; 0xb3
   3dfe4:	lsl	r4, r4, #1
   3dfe8:	mul	r3, r2, r4
   3dfec:	cmp	r1, r3, lsr #8
   3dff0:	bhi	3dfe4 <fb_name_table_init@@Base+0x18>
   3dff4:	mov	r1, #4
   3dff8:	mov	r0, r4
   3dffc:	bl	13f9c <calloc@plt>
   3e000:	cmp	r0, #0
   3e004:	str	r0, [r5]
   3e008:	movne	r0, #0
   3e00c:	strne	r4, [r5, #12]
   3e010:	strne	r0, [r5, #4]
   3e014:	strne	r0, [r5, #8]
   3e018:	mvneq	r0, #0
   3e01c:	pop	{r4, r5, r6, pc}

0003e020 <fb_name_table_resize@@Base>:
   3e020:	b	3dcc8 <cmetrohash64_2@@Base+0x9dc>

0003e024 <fb_name_table_insert@@Base>:
   3e024:	b	3da38 <cmetrohash64_2@@Base+0x74c>

0003e028 <fb_name_table_insert_item@@Base>:
   3e028:	push	{lr}		; (str lr, [sp, #-4]!)
   3e02c:	sub	sp, sp, #12
   3e030:	mov	r3, r1
   3e034:	str	r2, [sp]
   3e038:	ldr	r2, [r1, #12]
   3e03c:	ldr	r1, [r1, #8]
   3e040:	bl	3da38 <cmetrohash64_2@@Base+0x74c>
   3e044:	add	sp, sp, #12
   3e048:	pop	{pc}		; (ldr pc, [sp], #4)

0003e04c <fb_name_table_find@@Base>:
   3e04c:	mov	ip, r0
   3e050:	mov	r3, r2
   3e054:	ldr	r0, [r0]
   3e058:	mov	r2, r1
   3e05c:	add	r1, ip, #12
   3e060:	b	3dea0 <cmetrohash64_2@@Base+0xbb4>

0003e064 <fb_name_table_find_item@@Base>:
   3e064:	mov	ip, r0
   3e068:	ldr	r3, [r1, #12]
   3e06c:	ldr	r2, [r1, #8]
   3e070:	ldr	r0, [r0]
   3e074:	add	r1, ip, #12
   3e078:	b	3dea0 <cmetrohash64_2@@Base+0xbb4>

0003e07c <fb_name_table_remove@@Base>:
   3e07c:	b	3ddc4 <cmetrohash64_2@@Base+0xad8>

0003e080 <fb_name_table_remove_item@@Base>:
   3e080:	ldr	r2, [r1, #12]
   3e084:	ldr	r1, [r1, #8]
   3e088:	b	3ddc4 <cmetrohash64_2@@Base+0xad8>

0003e08c <fb_name_table_visit@@Base>:
   3e08c:	ldr	r3, [r0, #12]
   3e090:	push	{r4, r5, r6, r7, r8, lr}
   3e094:	cmp	r3, #0
   3e098:	ldr	r5, [r0]
   3e09c:	popeq	{r4, r5, r6, r7, r8, pc}
   3e0a0:	mov	r7, r2
   3e0a4:	mov	r6, r1
   3e0a8:	mov	r8, r0
   3e0ac:	sub	r5, r5, #4
   3e0b0:	mov	r4, #0
   3e0b4:	b	3e0c0 <fb_name_table_visit@@Base+0x34>
   3e0b8:	cmp	r4, r3
   3e0bc:	bcs	3e0e8 <fb_name_table_visit@@Base+0x5c>
   3e0c0:	ldr	r1, [r5, #4]!
   3e0c4:	add	r4, r4, #1
   3e0c8:	cmp	r1, #0
   3e0cc:	cmpne	r1, #2
   3e0d0:	beq	3e0b8 <fb_name_table_visit@@Base+0x2c>
   3e0d4:	mov	r0, r7
   3e0d8:	blx	r6
   3e0dc:	ldr	r3, [r8, #12]
   3e0e0:	cmp	r4, r3
   3e0e4:	bcc	3e0c0 <fb_name_table_visit@@Base+0x34>
   3e0e8:	pop	{r4, r5, r6, r7, r8, pc}
   3e0ec:	push	{r4, lr}
   3e0f0:	mov	r4, r0
   3e0f4:	ldr	r0, [r0]
   3e0f8:	cmp	r0, #0
   3e0fc:	beq	3e104 <fb_name_table_visit@@Base+0x78>
   3e100:	bl	13fcc <free@plt>
   3e104:	mov	r3, #0
   3e108:	str	r3, [r4]
   3e10c:	str	r3, [r4, #4]
   3e110:	str	r3, [r4, #8]
   3e114:	str	r3, [r4, #12]
   3e118:	pop	{r4, pc}
   3e11c:	ldrh	r3, [r0, #8]
   3e120:	cmp	r3, #5
   3e124:	beq	3e170 <fb_name_table_visit@@Base+0xe4>
   3e128:	cmp	r3, #6
   3e12c:	beq	3e158 <fb_name_table_visit@@Base+0xcc>
   3e130:	cmp	r3, #4
   3e134:	beq	3e140 <fb_name_table_visit@@Base+0xb4>
   3e138:	mov	r0, #0
   3e13c:	bx	lr
   3e140:	ldr	r2, [r0]
   3e144:	ldr	r3, [pc, #60]	; 3e188 <fb_name_table_visit@@Base+0xfc>
   3e148:	ldr	r0, [pc, #60]	; 3e18c <fb_name_table_visit@@Base+0x100>
   3e14c:	eor	r3, r3, r2
   3e150:	mul	r0, r0, r3
   3e154:	bx	lr
   3e158:	ldrb	r2, [r0]
   3e15c:	ldr	r3, [pc, #44]	; 3e190 <fb_name_table_visit@@Base+0x104>
   3e160:	ldr	r0, [pc, #36]	; 3e18c <fb_name_table_visit@@Base+0x100>
   3e164:	eor	r3, r3, r2
   3e168:	mul	r0, r0, r3
   3e16c:	bx	lr
   3e170:	ldr	r2, [r0]
   3e174:	ldr	r3, [pc, #24]	; 3e194 <fb_name_table_visit@@Base+0x108>
   3e178:	ldr	r0, [pc, #12]	; 3e18c <fb_name_table_visit@@Base+0x100>
   3e17c:	eor	r3, r3, r2
   3e180:	mul	r0, r0, r3
   3e184:	bx	lr
   3e188:	svccs	0x00693b56
   3e18c:			; <UNDEFINED> instruction: 0x9e3779b1
   3e190:	svccs	0x00693b54
   3e194:	svccs	0x00693b57
   3e198:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e19c:	subs	sl, r2, #0
   3e1a0:	ldr	r6, [pc, #544]	; 3e3c8 <fb_name_table_visit@@Base+0x33c>
   3e1a4:	add	r6, pc, r6
   3e1a8:	beq	3e380 <fb_name_table_visit@@Base+0x2f4>
   3e1ac:	cmp	sl, #2
   3e1b0:	beq	3e360 <fb_name_table_visit@@Base+0x2d4>
   3e1b4:	cmp	sl, #1
   3e1b8:	beq	3e340 <fb_name_table_visit@@Base+0x2b4>
   3e1bc:	ldr	r5, [r0, #12]
   3e1c0:	mov	fp, r3
   3e1c4:	mov	r3, #179	; 0xb3
   3e1c8:	mov	r4, r1
   3e1cc:	mul	r3, r3, r5
   3e1d0:	ldr	r1, [r0, #8]
   3e1d4:	mov	r9, r0
   3e1d8:	cmp	r1, r3, lsr #8
   3e1dc:	bcs	3e2dc <fb_name_table_visit@@Base+0x250>
   3e1e0:	mov	r0, r4
   3e1e4:	bl	3e11c <fb_name_table_visit@@Base+0x90>
   3e1e8:	sub	r3, fp, #2
   3e1ec:	sub	r5, r5, #1
   3e1f0:	cmp	r3, #1
   3e1f4:	ldr	lr, [r9]
   3e1f8:	mov	ip, r0
   3e1fc:	and	r1, r5, r0
   3e200:	bls	3e2f4 <fb_name_table_visit@@Base+0x268>
   3e204:	ldr	r0, [lr, r1, lsl #2]
   3e208:	add	r1, lr, r1, lsl #2
   3e20c:	cmp	r0, #0
   3e210:	moveq	r8, r1
   3e214:	beq	3e2c4 <fb_name_table_visit@@Base+0x238>
   3e218:	add	ip, ip, #1
   3e21c:	mov	r8, #0
   3e220:	b	3e23c <fb_name_table_visit@@Base+0x1b0>
   3e224:	and	r1, r5, ip
   3e228:	add	ip, ip, #1
   3e22c:	ldr	r0, [lr, r1, lsl #2]
   3e230:	add	r1, lr, r1, lsl #2
   3e234:	cmp	r0, #0
   3e238:	beq	3e2bc <fb_name_table_visit@@Base+0x230>
   3e23c:	cmp	r0, #2
   3e240:	beq	3e298 <fb_name_table_visit@@Base+0x20c>
   3e244:	ldrh	r2, [r4, #8]
   3e248:	ldrh	r3, [r0, #8]
   3e24c:	cmp	r3, r2
   3e250:	bne	3e224 <fb_name_table_visit@@Base+0x198>
   3e254:	cmp	r3, #5
   3e258:	beq	3e26c <fb_name_table_visit@@Base+0x1e0>
   3e25c:	cmp	r3, #6
   3e260:	beq	3e2a4 <fb_name_table_visit@@Base+0x218>
   3e264:	cmp	r3, #4
   3e268:	bne	3e224 <fb_name_table_visit@@Base+0x198>
   3e26c:	ldrd	r2, [r0]
   3e270:	ldrd	r6, [r4]
   3e274:	cmp	r7, r3
   3e278:	cmpeq	r6, r2
   3e27c:	moveq	r3, #1
   3e280:	movne	r3, #0
   3e284:	cmp	r3, #0
   3e288:	beq	3e224 <fb_name_table_visit@@Base+0x198>
   3e28c:	cmp	fp, #0
   3e290:	streq	sl, [r1]
   3e294:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e298:	cmp	r8, #0
   3e29c:	moveq	r8, r1
   3e2a0:	b	3e224 <fb_name_table_visit@@Base+0x198>
   3e2a4:	ldrb	r3, [r4]
   3e2a8:	ldrb	r2, [r0]
   3e2ac:	sub	r3, r3, r2
   3e2b0:	clz	r3, r3
   3e2b4:	lsr	r3, r3, #5
   3e2b8:	b	3e284 <fb_name_table_visit@@Base+0x1f8>
   3e2bc:	cmp	r8, #0
   3e2c0:	moveq	r8, r1
   3e2c4:	ldr	r3, [r9, #8]
   3e2c8:	mov	r0, #0
   3e2cc:	add	r3, r3, #1
   3e2d0:	str	r3, [r9, #8]
   3e2d4:	str	sl, [r8]
   3e2d8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e2dc:	lsl	r1, r1, #1
   3e2e0:	bl	3e3fc <fb_name_table_visit@@Base+0x370>
   3e2e4:	cmp	r0, #0
   3e2e8:	bne	3e3a0 <fb_name_table_visit@@Base+0x314>
   3e2ec:	ldr	r5, [r9, #12]
   3e2f0:	b	3e1e0 <fb_name_table_visit@@Base+0x154>
   3e2f4:	ldr	r2, [lr, r1, lsl #2]
   3e2f8:	ldr	r3, [r9, #8]
   3e2fc:	cmp	r2, #0
   3e300:	cmpne	r2, #2
   3e304:	add	r3, r3, #1
   3e308:	str	r3, [r9, #8]
   3e30c:	add	r1, lr, r1, lsl #2
   3e310:	beq	3e334 <fb_name_table_visit@@Base+0x2a8>
   3e314:	add	ip, r0, #1
   3e318:	and	r1, r5, ip
   3e31c:	add	ip, ip, #1
   3e320:	ldr	r3, [lr, r1, lsl #2]
   3e324:	add	r1, lr, r1, lsl #2
   3e328:	cmp	r3, #0
   3e32c:	cmpne	r3, #2
   3e330:	bne	3e318 <fb_name_table_visit@@Base+0x28c>
   3e334:	str	sl, [r1]
   3e338:	mov	r0, #0
   3e33c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e340:	ldr	r3, [pc, #132]	; 3e3cc <fb_name_table_visit@@Base+0x340>
   3e344:	ldr	r1, [pc, #132]	; 3e3d0 <fb_name_table_visit@@Base+0x344>
   3e348:	ldr	r0, [pc, #132]	; 3e3d4 <fb_name_table_visit@@Base+0x348>
   3e34c:	add	r3, pc, r3
   3e350:	mov	r2, #116	; 0x74
   3e354:	add	r1, pc, r1
   3e358:	add	r0, pc, r0
   3e35c:	bl	14140 <__assert_fail@plt>
   3e360:	ldr	r3, [pc, #112]	; 3e3d8 <fb_name_table_visit@@Base+0x34c>
   3e364:	ldr	r1, [pc, #112]	; 3e3dc <fb_name_table_visit@@Base+0x350>
   3e368:	ldr	r0, [pc, #112]	; 3e3e0 <fb_name_table_visit@@Base+0x354>
   3e36c:	add	r3, pc, r3
   3e370:	mov	r2, #115	; 0x73
   3e374:	add	r1, pc, r1
   3e378:	add	r0, pc, r0
   3e37c:	bl	14140 <__assert_fail@plt>
   3e380:	ldr	r3, [pc, #92]	; 3e3e4 <fb_name_table_visit@@Base+0x358>
   3e384:	ldr	r1, [pc, #92]	; 3e3e8 <fb_name_table_visit@@Base+0x35c>
   3e388:	ldr	r0, [pc, #92]	; 3e3ec <fb_name_table_visit@@Base+0x360>
   3e38c:	add	r3, pc, r3
   3e390:	mov	r2, #114	; 0x72
   3e394:	add	r1, pc, r1
   3e398:	add	r0, pc, r0
   3e39c:	bl	14140 <__assert_fail@plt>
   3e3a0:	ldr	r3, [pc, #72]	; 3e3f0 <fb_name_table_visit@@Base+0x364>
   3e3a4:	ldr	r2, [pc, #72]	; 3e3f4 <fb_name_table_visit@@Base+0x368>
   3e3a8:	ldr	r1, [pc, #72]	; 3e3f8 <fb_name_table_visit@@Base+0x36c>
   3e3ac:	ldr	r3, [r6, r3]
   3e3b0:	add	r2, pc, r2
   3e3b4:	add	r1, pc, r1
   3e3b8:	ldr	r0, [r3]
   3e3bc:	bl	1408c <fprintf@plt>
   3e3c0:	mov	r0, #1
   3e3c4:	bl	14068 <exit@plt>
   3e3c8:	andeq	ip, r2, r4, asr lr
   3e3cc:	andeq	ip, r1, ip, lsl fp
   3e3d0:	andeq	r9, r1, ip, lsr #9
   3e3d4:	andeq	r9, r1, r0, asr #10
   3e3d8:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   3e3dc:	andeq	r9, r1, ip, lsl #9
   3e3e0:	andeq	r9, r1, r8, lsl #10
   3e3e4:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   3e3e8:	andeq	r9, r1, ip, ror #8
   3e3ec:	ldrdeq	r9, [r1], -r0
   3e3f0:	andeq	r0, r0, r0, lsr #1
   3e3f4:	andeq	r9, r1, r0, lsl #10
   3e3f8:	andeq	r9, r1, r0, lsr r5
   3e3fc:	ldr	r3, [r0, #8]
   3e400:	push	{r4, r5, r6, r7, r8, lr}
   3e404:	cmp	r1, r3
   3e408:	movcc	r1, r3
   3e40c:	cmp	r1, #2
   3e410:	sub	sp, sp, #16
   3e414:	mov	r7, r0
   3e418:	ldr	r6, [r0]
   3e41c:	mov	r5, #4
   3e420:	bls	3e438 <fb_name_table_visit@@Base+0x3ac>
   3e424:	mov	r2, #179	; 0xb3
   3e428:	lsl	r5, r5, #1
   3e42c:	mul	r3, r2, r5
   3e430:	cmp	r1, r3, lsr #8
   3e434:	bhi	3e428 <fb_name_table_visit@@Base+0x39c>
   3e438:	mov	r1, #4
   3e43c:	mov	r0, r5
   3e440:	bl	13f9c <calloc@plt>
   3e444:	cmp	r0, #0
   3e448:	str	r0, [sp]
   3e44c:	beq	3e4ec <fb_name_table_visit@@Base+0x460>
   3e450:	ldr	r3, [r7, #12]
   3e454:	mov	r4, #0
   3e458:	cmp	r3, r4
   3e45c:	str	r5, [sp, #12]
   3e460:	str	r4, [sp, #4]
   3e464:	subne	r5, r6, #4
   3e468:	str	r4, [sp, #8]
   3e46c:	movne	r6, sp
   3e470:	movne	r8, #3
   3e474:	bne	3e484 <fb_name_table_visit@@Base+0x3f8>
   3e478:	b	3e4e4 <fb_name_table_visit@@Base+0x458>
   3e47c:	cmp	r3, r4
   3e480:	bls	3e4b4 <fb_name_table_visit@@Base+0x428>
   3e484:	ldr	r2, [r5, #4]!
   3e488:	add	r4, r4, #1
   3e48c:	cmp	r2, #0
   3e490:	cmpne	r2, #2
   3e494:	beq	3e47c <fb_name_table_visit@@Base+0x3f0>
   3e498:	mov	r3, r8
   3e49c:	mov	r1, r2
   3e4a0:	mov	r0, r6
   3e4a4:	bl	3e198 <fb_name_table_visit@@Base+0x10c>
   3e4a8:	ldr	r3, [r7, #12]
   3e4ac:	cmp	r3, r4
   3e4b0:	bhi	3e484 <fb_name_table_visit@@Base+0x3f8>
   3e4b4:	mov	r0, r7
   3e4b8:	bl	3e0ec <fb_name_table_visit@@Base+0x60>
   3e4bc:	mov	ip, r6
   3e4c0:	mov	lr, #0
   3e4c4:	ldm	ip!, {r0, r1, r2, r3}
   3e4c8:	str	r0, [r7]
   3e4cc:	str	r1, [r7, #4]
   3e4d0:	str	r2, [r7, #8]
   3e4d4:	str	r3, [r7, #12]
   3e4d8:	mov	r0, lr
   3e4dc:	add	sp, sp, #16
   3e4e0:	pop	{r4, r5, r6, r7, r8, pc}
   3e4e4:	mov	r6, sp
   3e4e8:	b	3e4b4 <fb_name_table_visit@@Base+0x428>
   3e4ec:	mvn	lr, #0
   3e4f0:	b	3e4d8 <fb_name_table_visit@@Base+0x44c>
   3e4f4:	push	{r4, r5, r6, r7, r8, lr}
   3e4f8:	subs	r5, r0, #0
   3e4fc:	beq	3e5bc <fb_name_table_visit@@Base+0x530>
   3e500:	ldr	r1, [r1]
   3e504:	mov	r0, r2
   3e508:	sub	r1, r1, #1
   3e50c:	mov	r4, r2
   3e510:	bl	3e11c <fb_name_table_visit@@Base+0x90>
   3e514:	and	r3, r1, r0
   3e518:	mov	ip, r0
   3e51c:	ldr	r0, [r5, r3, lsl #2]
   3e520:	cmp	r0, #0
   3e524:	popeq	{r4, r5, r6, r7, r8, pc}
   3e528:	add	ip, ip, #1
   3e52c:	b	3e544 <fb_name_table_visit@@Base+0x4b8>
   3e530:	and	r3, r1, ip
   3e534:	add	ip, ip, #1
   3e538:	ldr	r0, [r5, r3, lsl #2]
   3e53c:	cmp	r0, #0
   3e540:	beq	3e5b8 <fb_name_table_visit@@Base+0x52c>
   3e544:	cmp	r0, #2
   3e548:	beq	3e530 <fb_name_table_visit@@Base+0x4a4>
   3e54c:	ldrh	r2, [r4, #8]
   3e550:	ldrh	r3, [r0, #8]
   3e554:	cmp	r3, r2
   3e558:	bne	3e530 <fb_name_table_visit@@Base+0x4a4>
   3e55c:	cmp	r3, #5
   3e560:	beq	3e574 <fb_name_table_visit@@Base+0x4e8>
   3e564:	cmp	r3, #6
   3e568:	beq	3e598 <fb_name_table_visit@@Base+0x50c>
   3e56c:	cmp	r3, #4
   3e570:	bne	3e530 <fb_name_table_visit@@Base+0x4a4>
   3e574:	ldrd	r2, [r0]
   3e578:	ldrd	r6, [r4]
   3e57c:	cmp	r7, r3
   3e580:	cmpeq	r6, r2
   3e584:	moveq	r3, #1
   3e588:	movne	r3, #0
   3e58c:	cmp	r3, #0
   3e590:	beq	3e530 <fb_name_table_visit@@Base+0x4a4>
   3e594:	pop	{r4, r5, r6, r7, r8, pc}
   3e598:	ldrb	r3, [r4]
   3e59c:	ldrb	r2, [r0]
   3e5a0:	sub	r3, r3, r2
   3e5a4:	clz	r3, r3
   3e5a8:	lsr	r3, r3, #5
   3e5ac:	cmp	r3, #0
   3e5b0:	beq	3e530 <fb_name_table_visit@@Base+0x4a4>
   3e5b4:	pop	{r4, r5, r6, r7, r8, pc}
   3e5b8:	pop	{r4, r5, r6, r7, r8, pc}
   3e5bc:	mov	r0, r5
   3e5c0:	pop	{r4, r5, r6, r7, r8, pc}
   3e5c4:	push	{r4, r5, r6, r7, r8, lr}
   3e5c8:	ldr	r4, [r0]
   3e5cc:	cmp	r4, #0
   3e5d0:	beq	3e6a4 <fb_name_table_visit@@Base+0x618>
   3e5d4:	ldr	r5, [r0, #12]
   3e5d8:	mov	r8, r0
   3e5dc:	mov	r0, r1
   3e5e0:	bl	3e11c <fb_name_table_visit@@Base+0x90>
   3e5e4:	sub	r5, r5, #1
   3e5e8:	and	ip, r5, r0
   3e5ec:	mov	lr, r0
   3e5f0:	ldr	r0, [r4, ip, lsl #2]
   3e5f4:	add	ip, r4, ip, lsl #2
   3e5f8:	cmp	r0, #0
   3e5fc:	popeq	{r4, r5, r6, r7, r8, pc}
   3e600:	add	lr, lr, #1
   3e604:	b	3e620 <fb_name_table_visit@@Base+0x594>
   3e608:	and	ip, r5, lr
   3e60c:	add	lr, lr, #1
   3e610:	ldr	r0, [r4, ip, lsl #2]
   3e614:	add	ip, r4, ip, lsl #2
   3e618:	cmp	r0, #0
   3e61c:	beq	3e6a0 <fb_name_table_visit@@Base+0x614>
   3e620:	cmp	r0, #2
   3e624:	beq	3e608 <fb_name_table_visit@@Base+0x57c>
   3e628:	ldrh	r2, [r1, #8]
   3e62c:	ldrh	r3, [r0, #8]
   3e630:	cmp	r3, r2
   3e634:	bne	3e608 <fb_name_table_visit@@Base+0x57c>
   3e638:	cmp	r3, #5
   3e63c:	beq	3e650 <fb_name_table_visit@@Base+0x5c4>
   3e640:	cmp	r3, #6
   3e644:	beq	3e688 <fb_name_table_visit@@Base+0x5fc>
   3e648:	cmp	r3, #4
   3e64c:	bne	3e608 <fb_name_table_visit@@Base+0x57c>
   3e650:	ldrd	r2, [r0]
   3e654:	ldrd	r6, [r1]
   3e658:	cmp	r7, r3
   3e65c:	cmpeq	r6, r2
   3e660:	moveq	r3, #1
   3e664:	movne	r3, #0
   3e668:	cmp	r3, #0
   3e66c:	beq	3e608 <fb_name_table_visit@@Base+0x57c>
   3e670:	ldr	r3, [r8, #8]
   3e674:	mov	r2, #2
   3e678:	sub	r3, r3, #1
   3e67c:	str	r2, [ip]
   3e680:	str	r3, [r8, #8]
   3e684:	pop	{r4, r5, r6, r7, r8, pc}
   3e688:	ldrb	r3, [r1]
   3e68c:	ldrb	r2, [r0]
   3e690:	sub	r3, r3, r2
   3e694:	clz	r3, r3
   3e698:	lsr	r3, r3, #5
   3e69c:	b	3e668 <fb_name_table_visit@@Base+0x5dc>
   3e6a0:	pop	{r4, r5, r6, r7, r8, pc}
   3e6a4:	mov	r0, r4
   3e6a8:	pop	{r4, r5, r6, r7, r8, pc}

0003e6ac <fb_value_set_clear@@Base>:
   3e6ac:	b	3e0ec <fb_name_table_visit@@Base+0x60>

0003e6b0 <fb_value_set_destroy@@Base>:
   3e6b0:	push	{r4, r5, r6, r7, r8, lr}
   3e6b4:	subs	r7, r1, #0
   3e6b8:	mov	r6, r0
   3e6bc:	beq	3e710 <fb_value_set_destroy@@Base+0x60>
   3e6c0:	ldr	r3, [r0, #12]
   3e6c4:	ldr	r5, [r0]
   3e6c8:	cmp	r3, #0
   3e6cc:	beq	3e710 <fb_value_set_destroy@@Base+0x60>
   3e6d0:	mov	r8, r2
   3e6d4:	sub	r5, r5, #4
   3e6d8:	mov	r4, #0
   3e6dc:	b	3e6e8 <fb_value_set_destroy@@Base+0x38>
   3e6e0:	cmp	r4, r3
   3e6e4:	bcs	3e710 <fb_value_set_destroy@@Base+0x60>
   3e6e8:	ldr	r1, [r5, #4]!
   3e6ec:	add	r4, r4, #1
   3e6f0:	cmp	r1, #0
   3e6f4:	cmpne	r1, #2
   3e6f8:	beq	3e6e0 <fb_value_set_destroy@@Base+0x30>
   3e6fc:	mov	r0, r8
   3e700:	blx	r7
   3e704:	ldr	r3, [r6, #12]
   3e708:	cmp	r4, r3
   3e70c:	bcc	3e6e8 <fb_value_set_destroy@@Base+0x38>
   3e710:	mov	r0, r6
   3e714:	pop	{r4, r5, r6, r7, r8, lr}
   3e718:	b	3e0ec <fb_name_table_visit@@Base+0x60>

0003e71c <fb_value_set_init@@Base>:
   3e71c:	cmp	r1, #2
   3e720:	push	{r4, r5, r6, lr}
   3e724:	mov	r4, #4
   3e728:	mov	r5, r0
   3e72c:	bls	3e744 <fb_value_set_init@@Base+0x28>
   3e730:	mov	r2, #179	; 0xb3
   3e734:	lsl	r4, r4, #1
   3e738:	mul	r3, r2, r4
   3e73c:	cmp	r1, r3, lsr #8
   3e740:	bhi	3e734 <fb_value_set_init@@Base+0x18>
   3e744:	mov	r1, #4
   3e748:	mov	r0, r4
   3e74c:	bl	13f9c <calloc@plt>
   3e750:	cmp	r0, #0
   3e754:	str	r0, [r5]
   3e758:	movne	r0, #0
   3e75c:	strne	r4, [r5, #12]
   3e760:	strne	r0, [r5, #4]
   3e764:	strne	r0, [r5, #8]
   3e768:	mvneq	r0, #0
   3e76c:	pop	{r4, r5, r6, pc}

0003e770 <fb_value_set_resize@@Base>:
   3e770:	b	3e3fc <fb_name_table_visit@@Base+0x370>

0003e774 <fb_value_set_insert@@Base>:
   3e774:	mov	r2, r3
   3e778:	ldr	r3, [sp]
   3e77c:	b	3e198 <fb_name_table_visit@@Base+0x10c>

0003e780 <fb_value_set_insert_item@@Base>:
   3e780:	mov	r3, r2
   3e784:	mov	r2, r1
   3e788:	b	3e198 <fb_name_table_visit@@Base+0x10c>

0003e78c <fb_value_set_find@@Base>:
   3e78c:	mov	r3, r0
   3e790:	mov	r2, r1
   3e794:	ldr	r0, [r0]
   3e798:	add	r1, r3, #12
   3e79c:	b	3e4f4 <fb_name_table_visit@@Base+0x468>

0003e7a0 <fb_value_set_find_item@@Base>:
   3e7a0:	mov	r3, r0
   3e7a4:	mov	r2, r1
   3e7a8:	ldr	r0, [r0]
   3e7ac:	add	r1, r3, #12
   3e7b0:	b	3e4f4 <fb_name_table_visit@@Base+0x468>

0003e7b4 <fb_value_set_remove@@Base>:
   3e7b4:	b	3e5c4 <fb_name_table_visit@@Base+0x538>

0003e7b8 <fb_value_set_remove_item@@Base>:
   3e7b8:	b	3e5c4 <fb_name_table_visit@@Base+0x538>

0003e7bc <fb_value_set_visit@@Base>:
   3e7bc:	ldr	r3, [r0, #12]
   3e7c0:	push	{r4, r5, r6, r7, r8, lr}
   3e7c4:	cmp	r3, #0
   3e7c8:	ldr	r5, [r0]
   3e7cc:	popeq	{r4, r5, r6, r7, r8, pc}
   3e7d0:	mov	r7, r2
   3e7d4:	mov	r6, r1
   3e7d8:	mov	r8, r0
   3e7dc:	sub	r5, r5, #4
   3e7e0:	mov	r4, #0
   3e7e4:	b	3e7f0 <fb_value_set_visit@@Base+0x34>
   3e7e8:	cmp	r4, r3
   3e7ec:	bcs	3e818 <fb_value_set_visit@@Base+0x5c>
   3e7f0:	ldr	r1, [r5, #4]!
   3e7f4:	add	r4, r4, #1
   3e7f8:	cmp	r1, #0
   3e7fc:	cmpne	r1, #2
   3e800:	beq	3e7e8 <fb_value_set_visit@@Base+0x2c>
   3e804:	mov	r0, r7
   3e808:	blx	r6
   3e80c:	ldr	r3, [r8, #12]
   3e810:	cmp	r4, r3
   3e814:	bcc	3e7f0 <fb_value_set_visit@@Base+0x34>
   3e818:	pop	{r4, r5, r6, r7, r8, pc}
   3e81c:	eor	r1, r1, #-2147483648	; 0x80000000
   3e820:	b	3e828 <fb_value_set_visit@@Base+0x6c>
   3e824:	eor	r3, r3, #-2147483648	; 0x80000000
   3e828:	push	{r4, r5, lr}
   3e82c:	lsl	r4, r1, #1
   3e830:	lsl	r5, r3, #1
   3e834:	teq	r4, r5
   3e838:	teqeq	r0, r2
   3e83c:	orrsne	ip, r4, r0
   3e840:	orrsne	ip, r5, r2
   3e844:	mvnsne	ip, r4, asr #21
   3e848:	mvnsne	ip, r5, asr #21
   3e84c:	beq	3ea38 <fb_value_set_visit@@Base+0x27c>
   3e850:	lsr	r4, r4, #21
   3e854:	rsbs	r5, r4, r5, lsr #21
   3e858:	rsblt	r5, r5, #0
   3e85c:	ble	3e87c <fb_value_set_visit@@Base+0xc0>
   3e860:	add	r4, r4, r5
   3e864:	eor	r2, r0, r2
   3e868:	eor	r3, r1, r3
   3e86c:	eor	r0, r2, r0
   3e870:	eor	r1, r3, r1
   3e874:	eor	r2, r0, r2
   3e878:	eor	r3, r1, r3
   3e87c:	cmp	r5, #54	; 0x36
   3e880:	pophi	{r4, r5, pc}
   3e884:	tst	r1, #-2147483648	; 0x80000000
   3e888:	lsl	r1, r1, #12
   3e88c:	mov	ip, #1048576	; 0x100000
   3e890:	orr	r1, ip, r1, lsr #12
   3e894:	beq	3e8a0 <fb_value_set_visit@@Base+0xe4>
   3e898:	rsbs	r0, r0, #0
   3e89c:	rsc	r1, r1, #0
   3e8a0:	tst	r3, #-2147483648	; 0x80000000
   3e8a4:	lsl	r3, r3, #12
   3e8a8:	orr	r3, ip, r3, lsr #12
   3e8ac:	beq	3e8b8 <fb_value_set_visit@@Base+0xfc>
   3e8b0:	rsbs	r2, r2, #0
   3e8b4:	rsc	r3, r3, #0
   3e8b8:	teq	r4, r5
   3e8bc:	beq	3ea20 <fb_value_set_visit@@Base+0x264>
   3e8c0:	sub	r4, r4, #1
   3e8c4:	rsbs	lr, r5, #32
   3e8c8:	blt	3e8e4 <fb_value_set_visit@@Base+0x128>
   3e8cc:	lsl	ip, r2, lr
   3e8d0:	adds	r0, r0, r2, lsr r5
   3e8d4:	adc	r1, r1, #0
   3e8d8:	adds	r0, r0, r3, lsl lr
   3e8dc:	adcs	r1, r1, r3, asr r5
   3e8e0:	b	3e900 <fb_value_set_visit@@Base+0x144>
   3e8e4:	sub	r5, r5, #32
   3e8e8:	add	lr, lr, #32
   3e8ec:	cmp	r2, #1
   3e8f0:	lsl	ip, r3, lr
   3e8f4:	orrcs	ip, ip, #2
   3e8f8:	adds	r0, r0, r3, asr r5
   3e8fc:	adcs	r1, r1, r3, asr #31
   3e900:	and	r5, r1, #-2147483648	; 0x80000000
   3e904:	bpl	3e914 <fb_value_set_visit@@Base+0x158>
   3e908:	rsbs	ip, ip, #0
   3e90c:	rscs	r0, r0, #0
   3e910:	rsc	r1, r1, #0
   3e914:	cmp	r1, #1048576	; 0x100000
   3e918:	bcc	3e958 <fb_value_set_visit@@Base+0x19c>
   3e91c:	cmp	r1, #2097152	; 0x200000
   3e920:	bcc	3e940 <fb_value_set_visit@@Base+0x184>
   3e924:	lsrs	r1, r1, #1
   3e928:	rrxs	r0, r0
   3e92c:	rrx	ip, ip
   3e930:	add	r4, r4, #1
   3e934:	lsl	r2, r4, #21
   3e938:	cmn	r2, #4194304	; 0x400000
   3e93c:	bcs	3ea98 <fb_value_set_visit@@Base+0x2dc>
   3e940:	cmp	ip, #-2147483648	; 0x80000000
   3e944:	lsrseq	ip, r0, #1
   3e948:	adcs	r0, r0, #0
   3e94c:	adc	r1, r1, r4, lsl #20
   3e950:	orr	r1, r1, r5
   3e954:	pop	{r4, r5, pc}
   3e958:	lsls	ip, ip, #1
   3e95c:	adcs	r0, r0, r0
   3e960:	adc	r1, r1, r1
   3e964:	tst	r1, #1048576	; 0x100000
   3e968:	sub	r4, r4, #1
   3e96c:	bne	3e940 <fb_value_set_visit@@Base+0x184>
   3e970:	teq	r1, #0
   3e974:	moveq	r1, r0
   3e978:	moveq	r0, #0
   3e97c:	clz	r3, r1
   3e980:	addeq	r3, r3, #32
   3e984:	sub	r3, r3, #11
   3e988:	subs	r2, r3, #32
   3e98c:	bge	3e9b0 <fb_value_set_visit@@Base+0x1f4>
   3e990:	adds	r2, r2, #12
   3e994:	ble	3e9ac <fb_value_set_visit@@Base+0x1f0>
   3e998:	add	ip, r2, #20
   3e99c:	rsb	r2, r2, #12
   3e9a0:	lsl	r0, r1, ip
   3e9a4:	lsr	r1, r1, r2
   3e9a8:	b	3e9c0 <fb_value_set_visit@@Base+0x204>
   3e9ac:	add	r2, r2, #20
   3e9b0:	rsble	ip, r2, #32
   3e9b4:	lsl	r1, r1, r2
   3e9b8:	orrle	r1, r1, r0, lsr ip
   3e9bc:	lslle	r0, r0, r2
   3e9c0:	subs	r4, r4, r3
   3e9c4:	addge	r1, r1, r4, lsl #20
   3e9c8:	orrge	r1, r1, r5
   3e9cc:	popge	{r4, r5, pc}
   3e9d0:	mvn	r4, r4
   3e9d4:	subs	r4, r4, #31
   3e9d8:	bge	3ea14 <fb_value_set_visit@@Base+0x258>
   3e9dc:	adds	r4, r4, #12
   3e9e0:	bgt	3e9fc <fb_value_set_visit@@Base+0x240>
   3e9e4:	add	r4, r4, #20
   3e9e8:	rsb	r2, r4, #32
   3e9ec:	lsr	r0, r0, r4
   3e9f0:	orr	r0, r0, r1, lsl r2
   3e9f4:	orr	r1, r5, r1, lsr r4
   3e9f8:	pop	{r4, r5, pc}
   3e9fc:	rsb	r4, r4, #12
   3ea00:	rsb	r2, r4, #32
   3ea04:	lsr	r0, r0, r2
   3ea08:	orr	r0, r0, r1, lsl r4
   3ea0c:	mov	r1, r5
   3ea10:	pop	{r4, r5, pc}
   3ea14:	lsr	r0, r1, r4
   3ea18:	mov	r1, r5
   3ea1c:	pop	{r4, r5, pc}
   3ea20:	teq	r4, #0
   3ea24:	eor	r3, r3, #1048576	; 0x100000
   3ea28:	eoreq	r1, r1, #1048576	; 0x100000
   3ea2c:	addeq	r4, r4, #1
   3ea30:	subne	r5, r5, #1
   3ea34:	b	3e8c0 <fb_value_set_visit@@Base+0x104>
   3ea38:	mvns	ip, r4, asr #21
   3ea3c:	mvnsne	ip, r5, asr #21
   3ea40:	beq	3eaa8 <fb_value_set_visit@@Base+0x2ec>
   3ea44:	teq	r4, r5
   3ea48:	teqeq	r0, r2
   3ea4c:	beq	3ea60 <fb_value_set_visit@@Base+0x2a4>
   3ea50:	orrs	ip, r4, r0
   3ea54:	moveq	r1, r3
   3ea58:	moveq	r0, r2
   3ea5c:	pop	{r4, r5, pc}
   3ea60:	teq	r1, r3
   3ea64:	movne	r1, #0
   3ea68:	movne	r0, #0
   3ea6c:	popne	{r4, r5, pc}
   3ea70:	lsrs	ip, r4, #21
   3ea74:	bne	3ea88 <fb_value_set_visit@@Base+0x2cc>
   3ea78:	lsls	r0, r0, #1
   3ea7c:	adcs	r1, r1, r1
   3ea80:	orrcs	r1, r1, #-2147483648	; 0x80000000
   3ea84:	pop	{r4, r5, pc}
   3ea88:	adds	r4, r4, #4194304	; 0x400000
   3ea8c:	addcc	r1, r1, #1048576	; 0x100000
   3ea90:	popcc	{r4, r5, pc}
   3ea94:	and	r5, r1, #-2147483648	; 0x80000000
   3ea98:	orr	r1, r5, #2130706432	; 0x7f000000
   3ea9c:	orr	r1, r1, #15728640	; 0xf00000
   3eaa0:	mov	r0, #0
   3eaa4:	pop	{r4, r5, pc}
   3eaa8:	mvns	ip, r4, asr #21
   3eaac:	movne	r1, r3
   3eab0:	movne	r0, r2
   3eab4:	mvnseq	ip, r5, asr #21
   3eab8:	movne	r3, r1
   3eabc:	movne	r2, r0
   3eac0:	orrs	r4, r0, r1, lsl #12
   3eac4:	orrseq	r5, r2, r3, lsl #12
   3eac8:	teqeq	r1, r3
   3eacc:	orrne	r1, r1, #524288	; 0x80000
   3ead0:	pop	{r4, r5, pc}
   3ead4:	teq	r0, #0
   3ead8:	moveq	r1, #0
   3eadc:	bxeq	lr
   3eae0:	push	{r4, r5, lr}
   3eae4:	mov	r4, #1024	; 0x400
   3eae8:	add	r4, r4, #50	; 0x32
   3eaec:	mov	r5, #0
   3eaf0:	mov	r1, #0
   3eaf4:	b	3e970 <fb_value_set_visit@@Base+0x1b4>
   3eaf8:	teq	r0, #0
   3eafc:	moveq	r1, #0
   3eb00:	bxeq	lr
   3eb04:	push	{r4, r5, lr}
   3eb08:	mov	r4, #1024	; 0x400
   3eb0c:	add	r4, r4, #50	; 0x32
   3eb10:	ands	r5, r0, #-2147483648	; 0x80000000
   3eb14:	rsbmi	r0, r0, #0
   3eb18:	mov	r1, #0
   3eb1c:	b	3e970 <fb_value_set_visit@@Base+0x1b4>
   3eb20:	lsls	r2, r0, #1
   3eb24:	asr	r1, r2, #3
   3eb28:	rrx	r1, r1
   3eb2c:	lsl	r0, r2, #28
   3eb30:	andsne	r3, r2, #-16777216	; 0xff000000
   3eb34:	teqne	r3, #-16777216	; 0xff000000
   3eb38:	eorne	r1, r1, #939524096	; 0x38000000
   3eb3c:	bxne	lr
   3eb40:	teq	r2, #0
   3eb44:	teqne	r3, #-16777216	; 0xff000000
   3eb48:	bxeq	lr
   3eb4c:	push	{r4, r5, lr}
   3eb50:	mov	r4, #896	; 0x380
   3eb54:	and	r5, r1, #-2147483648	; 0x80000000
   3eb58:	bic	r1, r1, #-2147483648	; 0x80000000
   3eb5c:	b	3e970 <fb_value_set_visit@@Base+0x1b4>
   3eb60:	orrs	r2, r0, r1
   3eb64:	bxeq	lr
   3eb68:	push	{r4, r5, lr}
   3eb6c:	mov	r5, #0
   3eb70:	b	3eb90 <fb_value_set_visit@@Base+0x3d4>
   3eb74:	orrs	r2, r0, r1
   3eb78:	bxeq	lr
   3eb7c:	push	{r4, r5, lr}
   3eb80:	ands	r5, r1, #-2147483648	; 0x80000000
   3eb84:	bpl	3eb90 <fb_value_set_visit@@Base+0x3d4>
   3eb88:	rsbs	r0, r0, #0
   3eb8c:	rsc	r1, r1, #0
   3eb90:	mov	r4, #1024	; 0x400
   3eb94:	add	r4, r4, #50	; 0x32
   3eb98:	lsrs	ip, r1, #22
   3eb9c:	beq	3e914 <fb_value_set_visit@@Base+0x158>
   3eba0:	mov	r2, #3
   3eba4:	lsrs	ip, ip, #3
   3eba8:	addne	r2, r2, #3
   3ebac:	lsrs	ip, ip, #3
   3ebb0:	addne	r2, r2, #3
   3ebb4:	add	r2, r2, ip, lsr #3
   3ebb8:	rsb	r3, r2, #32
   3ebbc:	lsl	ip, r0, r3
   3ebc0:	lsr	r0, r0, r2
   3ebc4:	orr	r0, r0, r1, lsl r3
   3ebc8:	lsr	r1, r1, r2
   3ebcc:	add	r4, r4, r2
   3ebd0:	b	3e914 <fb_value_set_visit@@Base+0x158>
   3ebd4:	eor	r0, r0, #-2147483648	; 0x80000000
   3ebd8:	b	3ebe0 <fb_value_set_visit@@Base+0x424>
   3ebdc:	eor	r1, r1, #-2147483648	; 0x80000000
   3ebe0:	lsls	r2, r0, #1
   3ebe4:	lslsne	r3, r1, #1
   3ebe8:	teqne	r2, r3
   3ebec:	mvnsne	ip, r2, asr #24
   3ebf0:	mvnsne	ip, r3, asr #24
   3ebf4:	beq	3ecec <fb_value_set_visit@@Base+0x530>
   3ebf8:	lsr	r2, r2, #24
   3ebfc:	rsbs	r3, r2, r3, lsr #24
   3ec00:	addgt	r2, r2, r3
   3ec04:	eorgt	r1, r0, r1
   3ec08:	eorgt	r0, r1, r0
   3ec0c:	eorgt	r1, r0, r1
   3ec10:	rsblt	r3, r3, #0
   3ec14:	cmp	r3, #25
   3ec18:	bxhi	lr
   3ec1c:	tst	r0, #-2147483648	; 0x80000000
   3ec20:	orr	r0, r0, #8388608	; 0x800000
   3ec24:	bic	r0, r0, #-16777216	; 0xff000000
   3ec28:	rsbne	r0, r0, #0
   3ec2c:	tst	r1, #-2147483648	; 0x80000000
   3ec30:	orr	r1, r1, #8388608	; 0x800000
   3ec34:	bic	r1, r1, #-16777216	; 0xff000000
   3ec38:	rsbne	r1, r1, #0
   3ec3c:	teq	r2, r3
   3ec40:	beq	3ecd4 <fb_value_set_visit@@Base+0x518>
   3ec44:	sub	r2, r2, #1
   3ec48:	adds	r0, r0, r1, asr r3
   3ec4c:	rsb	r3, r3, #32
   3ec50:	lsl	r1, r1, r3
   3ec54:	and	r3, r0, #-2147483648	; 0x80000000
   3ec58:	bpl	3ec64 <fb_value_set_visit@@Base+0x4a8>
   3ec5c:	rsbs	r1, r1, #0
   3ec60:	rsc	r0, r0, #0
   3ec64:	cmp	r0, #8388608	; 0x800000
   3ec68:	bcc	3ec9c <fb_value_set_visit@@Base+0x4e0>
   3ec6c:	cmp	r0, #16777216	; 0x1000000
   3ec70:	bcc	3ec88 <fb_value_set_visit@@Base+0x4cc>
   3ec74:	lsrs	r0, r0, #1
   3ec78:	rrx	r1, r1
   3ec7c:	add	r2, r2, #1
   3ec80:	cmp	r2, #254	; 0xfe
   3ec84:	bcs	3ed40 <fb_value_set_visit@@Base+0x584>
   3ec88:	cmp	r1, #-2147483648	; 0x80000000
   3ec8c:	adc	r0, r0, r2, lsl #23
   3ec90:	biceq	r0, r0, #1
   3ec94:	orr	r0, r0, r3
   3ec98:	bx	lr
   3ec9c:	lsls	r1, r1, #1
   3eca0:	adc	r0, r0, r0
   3eca4:	tst	r0, #8388608	; 0x800000
   3eca8:	sub	r2, r2, #1
   3ecac:	bne	3ec88 <fb_value_set_visit@@Base+0x4cc>
   3ecb0:	clz	ip, r0
   3ecb4:	sub	ip, ip, #8
   3ecb8:	subs	r2, r2, ip
   3ecbc:	lsl	r0, r0, ip
   3ecc0:	addge	r0, r0, r2, lsl #23
   3ecc4:	rsblt	r2, r2, #0
   3ecc8:	orrge	r0, r0, r3
   3eccc:	orrlt	r0, r3, r0, lsr r2
   3ecd0:	bx	lr
   3ecd4:	teq	r2, #0
   3ecd8:	eor	r1, r1, #8388608	; 0x800000
   3ecdc:	eoreq	r0, r0, #8388608	; 0x800000
   3ece0:	addeq	r2, r2, #1
   3ece4:	subne	r3, r3, #1
   3ece8:	b	3ec44 <fb_value_set_visit@@Base+0x488>
   3ecec:	lsl	r3, r1, #1
   3ecf0:	mvns	ip, r2, asr #24
   3ecf4:	mvnsne	ip, r3, asr #24
   3ecf8:	beq	3ed4c <fb_value_set_visit@@Base+0x590>
   3ecfc:	teq	r2, r3
   3ed00:	beq	3ed10 <fb_value_set_visit@@Base+0x554>
   3ed04:	teq	r2, #0
   3ed08:	moveq	r0, r1
   3ed0c:	bx	lr
   3ed10:	teq	r0, r1
   3ed14:	movne	r0, #0
   3ed18:	bxne	lr
   3ed1c:	tst	r2, #-16777216	; 0xff000000
   3ed20:	bne	3ed30 <fb_value_set_visit@@Base+0x574>
   3ed24:	lsls	r0, r0, #1
   3ed28:	orrcs	r0, r0, #-2147483648	; 0x80000000
   3ed2c:	bx	lr
   3ed30:	adds	r2, r2, #33554432	; 0x2000000
   3ed34:	addcc	r0, r0, #8388608	; 0x800000
   3ed38:	bxcc	lr
   3ed3c:	and	r3, r0, #-2147483648	; 0x80000000
   3ed40:	orr	r0, r3, #2130706432	; 0x7f000000
   3ed44:	orr	r0, r0, #8388608	; 0x800000
   3ed48:	bx	lr
   3ed4c:	mvns	r2, r2, asr #24
   3ed50:	movne	r0, r1
   3ed54:	mvnseq	r3, r3, asr #24
   3ed58:	movne	r1, r0
   3ed5c:	lsls	r2, r0, #9
   3ed60:	lslseq	r3, r1, #9
   3ed64:	teqeq	r0, r1
   3ed68:	orrne	r0, r0, #4194304	; 0x400000
   3ed6c:	bx	lr
   3ed70:	mov	r3, #0
   3ed74:	b	3ed80 <fb_value_set_visit@@Base+0x5c4>
   3ed78:	ands	r3, r0, #-2147483648	; 0x80000000
   3ed7c:	rsbmi	r0, r0, #0
   3ed80:	movs	ip, r0
   3ed84:	bxeq	lr
   3ed88:	orr	r3, r3, #1258291200	; 0x4b000000
   3ed8c:	mov	r1, r0
   3ed90:	mov	r0, #0
   3ed94:	b	3edd8 <fb_value_set_visit@@Base+0x61c>
   3ed98:	orrs	r2, r0, r1
   3ed9c:	bxeq	lr
   3eda0:	mov	r3, #0
   3eda4:	b	3edc0 <fb_value_set_visit@@Base+0x604>
   3eda8:	orrs	r2, r0, r1
   3edac:	bxeq	lr
   3edb0:	ands	r3, r1, #-2147483648	; 0x80000000
   3edb4:	bpl	3edc0 <fb_value_set_visit@@Base+0x604>
   3edb8:	rsbs	r0, r0, #0
   3edbc:	rsc	r1, r1, #0
   3edc0:	movs	ip, r1
   3edc4:	moveq	ip, r0
   3edc8:	moveq	r1, r0
   3edcc:	moveq	r0, #0
   3edd0:	orr	r3, r3, #1526726656	; 0x5b000000
   3edd4:	subeq	r3, r3, #268435456	; 0x10000000
   3edd8:	sub	r3, r3, #8388608	; 0x800000
   3eddc:	clz	r2, ip
   3ede0:	subs	r2, r2, #8
   3ede4:	sub	r3, r3, r2, lsl #23
   3ede8:	blt	3ee08 <fb_value_set_visit@@Base+0x64c>
   3edec:	add	r3, r3, r1, lsl r2
   3edf0:	lsl	ip, r0, r2
   3edf4:	rsb	r2, r2, #32
   3edf8:	cmp	ip, #-2147483648	; 0x80000000
   3edfc:	adc	r0, r3, r0, lsr r2
   3ee00:	biceq	r0, r0, #1
   3ee04:	bx	lr
   3ee08:	add	r2, r2, #32
   3ee0c:	lsl	ip, r1, r2
   3ee10:	rsb	r2, r2, #32
   3ee14:	orrs	r0, r0, ip, lsl #1
   3ee18:	adc	r0, r3, r1, lsr r2
   3ee1c:	biceq	r0, r0, ip, lsr #31
   3ee20:	bx	lr
   3ee24:	cmp	r3, #0
   3ee28:	cmpeq	r2, #0
   3ee2c:	bne	3ee44 <fb_value_set_visit@@Base+0x688>
   3ee30:	cmp	r1, #0
   3ee34:	cmpeq	r0, #0
   3ee38:	mvnne	r1, #0
   3ee3c:	mvnne	r0, #0
   3ee40:	b	3ee60 <fb_value_set_visit@@Base+0x6a4>
   3ee44:	sub	sp, sp, #8
   3ee48:	push	{sp, lr}
   3ee4c:	bl	3ef58 <fb_value_set_visit@@Base+0x79c>
   3ee50:	ldr	lr, [sp, #4]
   3ee54:	add	sp, sp, #8
   3ee58:	pop	{r2, r3}
   3ee5c:	bx	lr
   3ee60:	push	{r1, lr}
   3ee64:	mov	r0, #8
   3ee68:	bl	13fa8 <raise@plt>
   3ee6c:	pop	{r1, pc}
   3ee70:	vmov	s15, r0
   3ee74:	vcmpe.f32	s15, #0.0
   3ee78:	vmrs	APSR_nzcv, fpscr
   3ee7c:	bmi	3ee84 <fb_value_set_visit@@Base+0x6c8>
   3ee80:	b	3eec8 <fb_value_set_visit@@Base+0x70c>
   3ee84:	push	{r4, lr}
   3ee88:	eor	r0, r0, #-2147483648	; 0x80000000
   3ee8c:	bl	3eec8 <fb_value_set_visit@@Base+0x70c>
   3ee90:	rsbs	r0, r0, #0
   3ee94:	rsc	r1, r1, #0
   3ee98:	pop	{r4, pc}
   3ee9c:	vmov	d7, r0, r1
   3eea0:	vcmpe.f64	d7, #0.0
   3eea4:	vmrs	APSR_nzcv, fpscr
   3eea8:	bmi	3eeb0 <fb_value_set_visit@@Base+0x6f4>
   3eeac:	b	3ef10 <fb_value_set_visit@@Base+0x754>
   3eeb0:	push	{r4, lr}
   3eeb4:	eor	r1, r1, #-2147483648	; 0x80000000
   3eeb8:	bl	3ef10 <fb_value_set_visit@@Base+0x754>
   3eebc:	rsbs	r0, r0, #0
   3eec0:	rsc	r1, r1, #0
   3eec4:	pop	{r4, pc}
   3eec8:	vmov	s15, r0
   3eecc:	vldr	d6, [pc, #44]	; 3ef00 <fb_value_set_visit@@Base+0x744>
   3eed0:	vldr	d5, [pc, #48]	; 3ef08 <fb_value_set_visit@@Base+0x74c>
   3eed4:	mov	r0, #0
   3eed8:	vcvt.f64.f32	d7, s15
   3eedc:	vmul.f64	d6, d7, d6
   3eee0:	vcvt.u32.f64	s12, d6
   3eee4:	vcvt.f64.u32	d4, s12
   3eee8:	vmov	r1, s12
   3eeec:	vmls.f64	d7, d4, d5
   3eef0:	vcvt.u32.f64	s14, d7
   3eef4:	vmov	r3, s14
   3eef8:	orr	r0, r0, r3
   3eefc:	bx	lr
   3ef00:	andeq	r0, r0, r0
   3ef04:	ldclcc	0, cr0, [r0]
   3ef08:	andeq	r0, r0, r0
   3ef0c:	mvnsmi	r0, r0
   3ef10:	vmov	d7, r0, r1
   3ef14:	vldr	d6, [pc, #44]	; 3ef48 <fb_value_set_visit@@Base+0x78c>
   3ef18:	vldr	d5, [pc, #48]	; 3ef50 <fb_value_set_visit@@Base+0x794>
   3ef1c:	mov	r0, #0
   3ef20:	vmul.f64	d6, d7, d6
   3ef24:	vcvt.u32.f64	s12, d6
   3ef28:	vcvt.f64.u32	d4, s12
   3ef2c:	vmov	r1, s12
   3ef30:	vmls.f64	d7, d4, d5
   3ef34:	vcvt.u32.f64	s14, d7
   3ef38:	vmov	r3, s14
   3ef3c:	orr	r0, r0, r3
   3ef40:	bx	lr
   3ef44:	nop			; (mov r0, r0)
   3ef48:	andeq	r0, r0, r0
   3ef4c:	ldclcc	0, cr0, [r0]
   3ef50:	andeq	r0, r0, r0
   3ef54:	mvnsmi	r0, r0
   3ef58:	cmp	r1, r3
   3ef5c:	push	{r4, r5, r6, r7, r8, r9, lr}
   3ef60:	cmpeq	r0, r2
   3ef64:	mov	r4, r0
   3ef68:	mov	r5, r1
   3ef6c:	ldr	r9, [sp, #28]
   3ef70:	movcc	r0, #0
   3ef74:	movcc	r1, #0
   3ef78:	bcc	3f070 <fb_value_set_visit@@Base+0x8b4>
   3ef7c:	cmp	r3, #0
   3ef80:	clzeq	ip, r2
   3ef84:	clzne	ip, r3
   3ef88:	addeq	ip, ip, #32
   3ef8c:	cmp	r5, #0
   3ef90:	clzeq	r1, r4
   3ef94:	addeq	r1, r1, #32
   3ef98:	clzne	r1, r5
   3ef9c:	sub	ip, ip, r1
   3efa0:	sub	lr, ip, #32
   3efa4:	lsl	r7, r3, ip
   3efa8:	rsb	r8, ip, #32
   3efac:	orr	r7, r7, r2, lsl lr
   3efb0:	orr	r7, r7, r2, lsr r8
   3efb4:	lsl	r6, r2, ip
   3efb8:	cmp	r5, r7
   3efbc:	cmpeq	r4, r6
   3efc0:	movcc	r0, #0
   3efc4:	movcc	r1, #0
   3efc8:	bcc	3efe4 <fb_value_set_visit@@Base+0x828>
   3efcc:	mov	r3, #1
   3efd0:	subs	r4, r4, r6
   3efd4:	lsl	r1, r3, lr
   3efd8:	lsl	r0, r3, ip
   3efdc:	orr	r1, r1, r3, lsr r8
   3efe0:	sbc	r5, r5, r7
   3efe4:	cmp	ip, #0
   3efe8:	beq	3f070 <fb_value_set_visit@@Base+0x8b4>
   3efec:	lsrs	r3, r7, #1
   3eff0:	rrx	r2, r6
   3eff4:	mov	r6, ip
   3eff8:	b	3f01c <fb_value_set_visit@@Base+0x860>
   3effc:	subs	r4, r4, r2
   3f000:	sbc	r5, r5, r3
   3f004:	adds	r4, r4, r4
   3f008:	adc	r5, r5, r5
   3f00c:	adds	r4, r4, #1
   3f010:	adc	r5, r5, #0
   3f014:	subs	r6, r6, #1
   3f018:	beq	3f038 <fb_value_set_visit@@Base+0x87c>
   3f01c:	cmp	r5, r3
   3f020:	cmpeq	r4, r2
   3f024:	bcs	3effc <fb_value_set_visit@@Base+0x840>
   3f028:	adds	r4, r4, r4
   3f02c:	adc	r5, r5, r5
   3f030:	subs	r6, r6, #1
   3f034:	bne	3f01c <fb_value_set_visit@@Base+0x860>
   3f038:	lsr	r6, r4, ip
   3f03c:	lsr	r7, r5, ip
   3f040:	orr	r6, r6, r5, lsl r8
   3f044:	adds	r2, r0, r4
   3f048:	orr	r6, r6, r5, lsr lr
   3f04c:	adc	r3, r1, r5
   3f050:	lsl	r1, r7, ip
   3f054:	orr	r1, r1, r6, lsl lr
   3f058:	lsl	r0, r6, ip
   3f05c:	orr	r1, r1, r6, lsr r8
   3f060:	subs	r0, r2, r0
   3f064:	mov	r4, r6
   3f068:	mov	r5, r7
   3f06c:	sbc	r1, r3, r1
   3f070:	cmp	r9, #0
   3f074:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   3f078:	strd	r4, [r9]
   3f07c:	pop	{r4, r5, r6, r7, r8, r9, pc}

0003f080 <__libc_csu_init@@Base>:
   3f080:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3f084:	mov	r7, r0
   3f088:	ldr	r6, [pc, #72]	; 3f0d8 <__libc_csu_init@@Base+0x58>
   3f08c:	ldr	r5, [pc, #72]	; 3f0dc <__libc_csu_init@@Base+0x5c>
   3f090:	add	r6, pc, r6
   3f094:	add	r5, pc, r5
   3f098:	sub	r6, r6, r5
   3f09c:	mov	r8, r1
   3f0a0:	mov	r9, r2
   3f0a4:	bl	13f7c <calloc@plt-0x20>
   3f0a8:	asrs	r6, r6, #2
   3f0ac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   3f0b0:	mov	r4, #0
   3f0b4:	add	r4, r4, #1
   3f0b8:	ldr	r3, [r5], #4
   3f0bc:	mov	r2, r9
   3f0c0:	mov	r1, r8
   3f0c4:	mov	r0, r7
   3f0c8:	blx	r3
   3f0cc:	cmp	r6, r4
   3f0d0:	bne	3f0b4 <__libc_csu_init@@Base+0x34>
   3f0d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3f0d8:	andeq	fp, r2, r8, asr #28
   3f0dc:	andeq	fp, r2, r0, asr #28

0003f0e0 <__libc_csu_fini@@Base>:
   3f0e0:	bx	lr

Disassembly of section .fini:

0003f0e4 <.fini>:
   3f0e4:	push	{r3, lr}
   3f0e8:	pop	{r3, pc}
