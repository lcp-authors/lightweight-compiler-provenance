
../repos/charybdis/modules/.libs/m_oper.so:     file format elf32-littlearm


Disassembly of section .init:

000007fc <_init>:
 7fc:	push	{r3, lr}
 800:	bl	924 <call_weak_fn>
 804:	pop	{r3, pc}

Disassembly of section .plt:

00000808 <.plt>:
 808:	push	{lr}		; (str lr, [sp, #-4]!)
 80c:	ldr	lr, [pc, #4]	; 818 <.plt+0x10>
 810:	add	lr, pc, lr
 814:	ldr	pc, [lr, #8]!
 818:	.word	0x000117e8

0000081c <strcmp@plt>:
 81c:	add	ip, pc, #0, 12
 820:	add	ip, ip, #69632	; 0x11000
 824:	ldr	pc, [ip, #2024]!	; 0x7e8

00000828 <__cxa_finalize@plt>:
 828:	add	ip, pc, #0, 12
 82c:	add	ip, ip, #69632	; 0x11000
 830:	ldr	pc, [ip, #2016]!	; 0x7e0

00000834 <sendto_one@plt>:
 834:	add	ip, pc, #0, 12
 838:	add	ip, ip, #69632	; 0x11000
 83c:	ldr	pc, [ip, #2008]!	; 0x7d8

00000840 <rb_strcasecmp@plt>:
 840:	add	ip, pc, #0, 12
 844:	add	ip, ip, #69632	; 0x11000
 848:	ldr	pc, [ip, #2000]!	; 0x7d0

0000084c <privilegeset_get@plt>:
 84c:	add	ip, pc, #0, 12
 850:	add	ip, ip, #69632	; 0x11000
 854:	ldr	pc, [ip, #1992]!	; 0x7c8

00000858 <rb_outofmemory@plt>:
 858:	add	ip, pc, #0, 12
 85c:	add	ip, ip, #69632	; 0x11000
 860:	ldr	pc, [ip, #1984]!	; 0x7c0

00000864 <sendto_realops_snomask@plt>:
 864:	add	ip, pc, #0, 12
 868:	add	ip, ip, #69632	; 0x11000
 86c:	ldr	pc, [ip, #1976]!	; 0x7b8

00000870 <privilegeset_set_new@plt>:
 870:	add	ip, pc, #0, 12
 874:	add	ip, ip, #69632	; 0x11000
 878:	ldr	pc, [ip, #1968]!	; 0x7b0

0000087c <strcpy@plt>:
 87c:	add	ip, pc, #0, 12
 880:	add	ip, ip, #69632	; 0x11000
 884:	ldr	pc, [ip, #1960]!	; 0x7a8

00000888 <rb_crypt@plt>:
 888:	add	ip, pc, #0, 12
 88c:	add	ip, ip, #69632	; 0x11000
 890:	ldr	pc, [ip, #1952]!	; 0x7a0

00000894 <sendto_server@plt>:
 894:	add	ip, pc, #0, 12
 898:	add	ip, ip, #69632	; 0x11000
 89c:	ldr	pc, [ip, #1944]!	; 0x798

000008a0 <malloc@plt>:
 8a0:	add	ip, pc, #0, 12
 8a4:	add	ip, ip, #69632	; 0x11000
 8a8:	ldr	pc, [ip, #1936]!	; 0x790

000008ac <privilegeset_ref@plt>:
 8ac:	add	ip, pc, #0, 12
 8b0:	add	ip, ip, #69632	; 0x11000
 8b4:	ldr	pc, [ip, #1928]!	; 0x788

000008b8 <__gmon_start__@plt>:
 8b8:	add	ip, pc, #0, 12
 8bc:	add	ip, ip, #69632	; 0x11000
 8c0:	ldr	pc, [ip, #1920]!	; 0x780

000008c4 <send_oper_motd@plt>:
 8c4:	add	ip, pc, #0, 12
 8c8:	add	ip, ip, #69632	; 0x11000
 8cc:	ldr	pc, [ip, #1912]!	; 0x778

000008d0 <sendto_one_numeric@plt>:
 8d0:	add	ip, pc, #0, 12
 8d4:	add	ip, ip, #69632	; 0x11000
 8d8:	ldr	pc, [ip, #1904]!	; 0x770

000008dc <strlen@plt>:
 8dc:	add	ip, pc, #0, 12
 8e0:	add	ip, ip, #69632	; 0x11000
 8e4:	ldr	pc, [ip, #1896]!	; 0x768

000008e8 <ilog@plt>:
 8e8:	add	ip, pc, #0, 12
 8ec:	add	ip, ip, #69632	; 0x11000
 8f0:	ldr	pc, [ip, #1888]!	; 0x760

000008f4 <flood_endgrace@plt>:
 8f4:	add	ip, pc, #0, 12
 8f8:	add	ip, ip, #69632	; 0x11000
 8fc:	ldr	pc, [ip, #1880]!	; 0x758

00000900 <find_oper_conf@plt>:
 900:	add	ip, pc, #0, 12
 904:	add	ip, ip, #69632	; 0x11000
 908:	ldr	pc, [ip, #1872]!	; 0x750

0000090c <oper_up@plt>:
 90c:	add	ip, pc, #0, 12
 910:	add	ip, ip, #69632	; 0x11000
 914:	ldr	pc, [ip, #1864]!	; 0x748

00000918 <privilegeset_unref@plt>:
 918:	add	ip, pc, #0, 12
 91c:	add	ip, ip, #69632	; 0x11000
 920:	ldr	pc, [ip, #1856]!	; 0x740

Disassembly of section .text:

00000924 <call_weak_fn>:
 924:	ldr	r3, [pc, #20]	; 940 <call_weak_fn+0x1c>
 928:	ldr	r2, [pc, #20]	; 944 <call_weak_fn+0x20>
 92c:	add	r3, pc, r3
 930:	ldr	r2, [r3, r2]
 934:	cmp	r2, #0
 938:	bxeq	lr
 93c:	b	8b8 <__gmon_start__@plt>
 940:	.word	0x000116cc
 944:	.word	0x00000070

00000948 <deregister_tm_clones>:
 948:	ldr	r0, [pc, #44]	; 97c <deregister_tm_clones+0x34>
 94c:	ldr	r3, [pc, #44]	; 980 <deregister_tm_clones+0x38>
 950:	add	r0, pc, r0
 954:	add	r3, pc, r3
 958:	cmp	r3, r0
 95c:	ldr	r3, [pc, #32]	; 984 <deregister_tm_clones+0x3c>
 960:	add	r3, pc, r3
 964:	bxeq	lr
 968:	ldr	r2, [pc, #24]	; 988 <deregister_tm_clones+0x40>
 96c:	ldr	r3, [r3, r2]
 970:	cmp	r3, #0
 974:	bxeq	lr
 978:	bx	r3
 97c:	.word	0x000117a0
 980:	.word	0x0001179c
 984:	.word	0x00011698
 988:	.word	0x00000068

0000098c <register_tm_clones>:
 98c:	ldr	r0, [pc, #56]	; 9cc <register_tm_clones+0x40>
 990:	ldr	r3, [pc, #56]	; 9d0 <register_tm_clones+0x44>
 994:	add	r0, pc, r0
 998:	add	r3, pc, r3
 99c:	sub	r1, r3, r0
 9a0:	ldr	r3, [pc, #44]	; 9d4 <register_tm_clones+0x48>
 9a4:	asr	r1, r1, #2
 9a8:	add	r3, pc, r3
 9ac:	add	r1, r1, r1, lsr #31
 9b0:	asrs	r1, r1, #1
 9b4:	bxeq	lr
 9b8:	ldr	r2, [pc, #24]	; 9d8 <register_tm_clones+0x4c>
 9bc:	ldr	r3, [r3, r2]
 9c0:	cmp	r3, #0
 9c4:	bxeq	lr
 9c8:	bx	r3
 9cc:	.word	0x0001175c
 9d0:	.word	0x00011758
 9d4:	.word	0x00011650
 9d8:	.word	0x00000074

000009dc <__do_global_dtors_aux>:
 9dc:	ldr	r3, [pc, #76]	; a30 <__do_global_dtors_aux+0x54>
 9e0:	ldr	r2, [pc, #76]	; a34 <__do_global_dtors_aux+0x58>
 9e4:	add	r3, pc, r3
 9e8:	add	r2, pc, r2
 9ec:	ldrb	r3, [r3]
 9f0:	cmp	r3, #0
 9f4:	bxne	lr
 9f8:	ldr	r3, [pc, #56]	; a38 <__do_global_dtors_aux+0x5c>
 9fc:	push	{r4, lr}
 a00:	ldr	r3, [r2, r3]
 a04:	cmp	r3, #0
 a08:	beq	a18 <__do_global_dtors_aux+0x3c>
 a0c:	ldr	r3, [pc, #40]	; a3c <__do_global_dtors_aux+0x60>
 a10:	ldr	r0, [pc, r3]
 a14:	bl	828 <__cxa_finalize@plt>
 a18:	bl	948 <deregister_tm_clones>
 a1c:	ldr	r3, [pc, #28]	; a40 <__do_global_dtors_aux+0x64>
 a20:	mov	r2, #1
 a24:	add	r3, pc, r3
 a28:	strb	r2, [r3]
 a2c:	pop	{r4, pc}
 a30:	.word	0x0001170c
 a34:	.word	0x00011610
 a38:	.word	0x00000064
 a3c:	.word	0x00011668
 a40:	.word	0x000116cc

00000a44 <frame_dummy>:
 a44:	b	98c <register_tm_clones>

00000a48 <m_oper>:
 a48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 a4c:	add	fp, sp, #28
 a50:	sub	sp, sp, #12
 a54:	mov	r6, r2
 a58:	ldrb	r0, [r2, #57]	; 0x39
 a5c:	tst	r0, #16
 a60:	bne	b2c <m_oper+0xe4>
 a64:	ldr	r0, [fp, #8]
 a68:	ldr	r9, [r0, #4]
 a6c:	ldr	r8, [r0, #8]
 a70:	ldrb	r0, [r6, #65]	; 0x41
 a74:	tst	r0, #1
 a78:	bne	a84 <m_oper+0x3c>
 a7c:	mov	r0, r6
 a80:	bl	8f4 <flood_endgrace@plt>
 a84:	movw	r0, #291	; 0x123
 a88:	add	r7, r6, r0
 a8c:	add	sl, r6, #152	; 0x98
 a90:	add	r1, r6, #227	; 0xe3
 a94:	mov	r0, sl
 a98:	mov	r2, r7
 a9c:	mov	r3, r9
 aa0:	bl	900 <find_oper_conf@plt>
 aa4:	cmp	r0, #0
 aa8:	beq	bec <m_oper+0x1a4>
 aac:	mov	r5, r0
 ab0:	ldrb	r0, [r0, #22]
 ab4:	tst	r0, #8
 ab8:	beq	b5c <m_oper+0x114>
 abc:	ldrb	r0, [r6, #57]	; 0x39
 ac0:	tst	r0, #64	; 0x40
 ac4:	bne	b5c <m_oper+0x114>
 ac8:	ldr	r2, [pc, #608]	; d30 <m_oper+0x2e8>
 acc:	add	r2, pc, r2
 ad0:	mov	r0, r6
 ad4:	movw	r1, #491	; 0x1eb
 ad8:	bl	8d0 <sendto_one_numeric@plt>
 adc:	add	r4, r6, #163	; 0xa3
 ae0:	str	sl, [sp]
 ae4:	stmib	sp, {r4, r7}
 ae8:	add	r5, r6, #88	; 0x58
 aec:	ldr	r1, [pc, #576]	; d34 <m_oper+0x2ec>
 af0:	add	r1, pc, r1
 af4:	mov	r0, #4
 af8:	mov	r2, r9
 afc:	mov	r3, r5
 b00:	bl	8e8 <ilog@plt>
 b04:	ldr	r0, [pc, #556]	; d38 <m_oper+0x2f0>
 b08:	ldr	r0, [pc, r0]
 b0c:	ldr	r0, [r0, #84]	; 0x54
 b10:	cmp	r0, #0
 b14:	beq	d18 <m_oper+0x2d0>
 b18:	str	sl, [sp]
 b1c:	str	r4, [sp, #4]
 b20:	ldr	r2, [pc, #532]	; d3c <m_oper+0x2f4>
 b24:	add	r2, pc, r2
 b28:	b	be0 <m_oper+0x198>
 b2c:	add	r3, r6, #88	; 0x58
 b30:	ldr	r0, [pc, #556]	; d64 <m_oper+0x31c>
 b34:	ldr	r0, [pc, r0]
 b38:	add	r2, r0, #88	; 0x58
 b3c:	ldr	r1, [pc, #548]	; d68 <m_oper+0x320>
 b40:	add	r1, pc, r1
 b44:	mov	r0, r6
 b48:	bl	834 <sendto_one@plt>
 b4c:	mov	r0, r6
 b50:	sub	sp, fp, #28
 b54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 b58:	b	8c4 <send_oper_motd@plt>
 b5c:	ldr	r1, [r5, #16]
 b60:	cmp	r1, #0
 b64:	beq	c50 <m_oper+0x208>
 b68:	ldr	r0, [r6, #444]	; 0x1bc
 b6c:	cmp	r0, #0
 b70:	beq	b80 <m_oper+0x138>
 b74:	bl	840 <rb_strcasecmp@plt>
 b78:	cmp	r0, #0
 b7c:	beq	c50 <m_oper+0x208>
 b80:	ldr	r2, [pc, #440]	; d40 <m_oper+0x2f8>
 b84:	add	r2, pc, r2
 b88:	mov	r0, r6
 b8c:	movw	r1, #491	; 0x1eb
 b90:	bl	8d0 <sendto_one_numeric@plt>
 b94:	add	r4, r6, #163	; 0xa3
 b98:	str	sl, [sp]
 b9c:	stmib	sp, {r4, r7}
 ba0:	add	r5, r6, #88	; 0x58
 ba4:	ldr	r1, [pc, #408]	; d44 <m_oper+0x2fc>
 ba8:	add	r1, pc, r1
 bac:	mov	r0, #4
 bb0:	mov	r2, r9
 bb4:	mov	r3, r5
 bb8:	bl	8e8 <ilog@plt>
 bbc:	ldr	r0, [pc, #388]	; d48 <m_oper+0x300>
 bc0:	ldr	r0, [pc, r0]
 bc4:	ldr	r0, [r0, #84]	; 0x54
 bc8:	cmp	r0, #0
 bcc:	beq	d18 <m_oper+0x2d0>
 bd0:	str	sl, [sp]
 bd4:	str	r4, [sp, #4]
 bd8:	ldr	r2, [pc, #364]	; d4c <m_oper+0x304>
 bdc:	add	r2, pc, r2
 be0:	mov	r0, #256	; 0x100
 be4:	mov	r1, #0
 be8:	b	d10 <m_oper+0x2c8>
 bec:	ldr	r2, [pc, #300]	; d20 <m_oper+0x2d8>
 bf0:	add	r2, pc, r2
 bf4:	mov	r0, r6
 bf8:	movw	r1, #491	; 0x1eb
 bfc:	bl	8d0 <sendto_one_numeric@plt>
 c00:	add	r4, r6, #163	; 0xa3
 c04:	str	sl, [sp]
 c08:	stmib	sp, {r4, r7}
 c0c:	add	r5, r6, #88	; 0x58
 c10:	ldr	r1, [pc, #268]	; d24 <m_oper+0x2dc>
 c14:	add	r1, pc, r1
 c18:	mov	r0, #4
 c1c:	mov	r2, r9
 c20:	mov	r3, r5
 c24:	bl	8e8 <ilog@plt>
 c28:	ldr	r0, [pc, #248]	; d28 <m_oper+0x2e0>
 c2c:	ldr	r0, [pc, r0]
 c30:	ldr	r0, [r0, #84]	; 0x54
 c34:	cmp	r0, #0
 c38:	beq	d18 <m_oper+0x2d0>
 c3c:	str	sl, [sp]
 c40:	str	r4, [sp, #4]
 c44:	ldr	r2, [pc, #224]	; d2c <m_oper+0x2e4>
 c48:	add	r2, pc, r2
 c4c:	b	d08 <m_oper+0x2c0>
 c50:	mov	r0, r8
 c54:	mov	r1, r5
 c58:	bl	e64 <match_oper_password>
 c5c:	cmp	r0, #0
 c60:	beq	c9c <m_oper+0x254>
 c64:	mov	r0, r6
 c68:	mov	r1, r5
 c6c:	bl	90c <oper_up@plt>
 c70:	add	r0, r6, #163	; 0xa3
 c74:	str	sl, [sp]
 c78:	stmib	sp, {r0, r7}
 c7c:	add	r3, r6, #88	; 0x58
 c80:	ldr	r1, [pc, #228]	; d6c <m_oper+0x324>
 c84:	add	r1, pc, r1
 c88:	mov	r0, #3
 c8c:	mov	r2, r9
 c90:	bl	8e8 <ilog@plt>
 c94:	sub	sp, fp, #28
 c98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c9c:	add	r5, r6, #88	; 0x58
 ca0:	ldr	r0, [pc, #168]	; d50 <m_oper+0x308>
 ca4:	ldr	r0, [pc, r0]
 ca8:	add	r2, r0, #88	; 0x58
 cac:	ldr	r1, [pc, #160]	; d54 <m_oper+0x30c>
 cb0:	add	r1, pc, r1
 cb4:	mov	r0, r6
 cb8:	mov	r3, r5
 cbc:	bl	834 <sendto_one@plt>
 cc0:	add	r4, r6, #163	; 0xa3
 cc4:	str	sl, [sp]
 cc8:	stmib	sp, {r4, r7}
 ccc:	ldr	r1, [pc, #132]	; d58 <m_oper+0x310>
 cd0:	add	r1, pc, r1
 cd4:	mov	r0, #4
 cd8:	mov	r2, r9
 cdc:	mov	r3, r5
 ce0:	bl	8e8 <ilog@plt>
 ce4:	ldr	r0, [pc, #112]	; d5c <m_oper+0x314>
 ce8:	ldr	r0, [pc, r0]
 cec:	ldr	r0, [r0, #84]	; 0x54
 cf0:	cmp	r0, #0
 cf4:	beq	d18 <m_oper+0x2d0>
 cf8:	str	sl, [sp]
 cfc:	str	r4, [sp, #4]
 d00:	ldr	r2, [pc, #88]	; d60 <m_oper+0x318>
 d04:	add	r2, pc, r2
 d08:	mov	r0, #256	; 0x100
 d0c:	mov	r1, #256	; 0x100
 d10:	mov	r3, r5
 d14:	bl	864 <sendto_realops_snomask@plt>
 d18:	sub	sp, fp, #28
 d1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 d20:	.word	0x000003c9
 d24:	.word	0x000003de
 d28:	.word	0x00011448
 d2c:	.word	0x000003ce
 d30:	.word	0x000004ed
 d34:	.word	0x00000558
 d38:	.word	0x0001156c
 d3c:	.word	0x0000055c
 d40:	.word	0x00000435
 d44:	.word	0x0000050c
 d48:	.word	0x000114b4
 d4c:	.word	0x00000527
 d50:	.word	0x000113cc
 d54:	.word	0x000004b8
 d58:	.word	0x00000322
 d5c:	.word	0x0001138c
 d60:	.word	0x00000483
 d64:	.word	0x0001153c
 d68:	.word	0x000003ed
 d6c:	.word	0x000004cb

00000d70 <mc_oper>:
 d70:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 d74:	add	fp, sp, #24
 d78:	sub	sp, sp, #16
 d7c:	mov	r4, r2
 d80:	mov	r0, r1
 d84:	ldr	r1, [pc, #200]	; e54 <mc_oper+0xe4>
 d88:	ldr	r1, [pc, r1]
 d8c:	ldr	r2, [r1]
 d90:	mov	r1, r4
 d94:	ldrb	r3, [r1, #396]!	; 0x18c
 d98:	ldr	r8, [fp, #8]
 d9c:	ldmib	r8, {r6, r7}
 da0:	sub	r5, r1, #308	; 0x134
 da4:	cmp	r3, #0
 da8:	moveq	r1, r5
 dac:	ldr	r3, [pc, #164]	; e58 <mc_oper+0xe8>
 db0:	add	r3, pc, r3
 db4:	str	r3, [sp]
 db8:	stmib	sp, {r1, r6, r7}
 dbc:	mov	r1, #0
 dc0:	mov	r3, #0
 dc4:	bl	894 <sendto_server@plt>
 dc8:	ldr	r0, [r8, #8]
 dcc:	bl	84c <privilegeset_get@plt>
 dd0:	cmp	r0, #0
 dd4:	bne	e18 <mc_oper+0xa8>
 dd8:	ldr	r0, [r8, #8]
 ddc:	str	r0, [sp]
 de0:	ldr	r2, [pc, #116]	; e5c <mc_oper+0xec>
 de4:	add	r2, pc, r2
 de8:	mov	r0, #256	; 0x100
 dec:	mov	r1, #256	; 0x100
 df0:	mov	r3, r5
 df4:	bl	864 <sendto_realops_snomask@plt>
 df8:	ldr	r0, [r8, #8]
 dfc:	ldr	r1, [pc, #92]	; e60 <mc_oper+0xf0>
 e00:	add	r1, pc, r1
 e04:	mov	r2, #0
 e08:	bl	870 <privilegeset_set_new@plt>
 e0c:	ldr	r1, [r0]
 e10:	orr	r1, r1, #-2147483648	; 0x80000000
 e14:	str	r1, [r0]
 e18:	bl	8ac <privilegeset_ref@plt>
 e1c:	mov	r5, r0
 e20:	ldr	r0, [r4, #24]
 e24:	ldr	r0, [r0, #36]	; 0x24
 e28:	cmp	r0, #0
 e2c:	beq	e34 <mc_oper+0xc4>
 e30:	bl	918 <privilegeset_unref@plt>
 e34:	ldr	r0, [r4, #24]
 e38:	str	r5, [r0, #36]	; 0x24
 e3c:	ldr	r0, [r8, #4]
 e40:	bl	ef8 <rb_strdup>
 e44:	ldr	r1, [r4, #24]
 e48:	str	r0, [r1, #32]
 e4c:	sub	sp, fp, #24
 e50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 e54:	.word	0x000112dc
 e58:	.word	0x000003f9
 e5c:	.word	0x000003d4
 e60:	.word	0x00000215

00000e64 <match_oper_password>:
 e64:	push	{r4, r5, fp, lr}
 e68:	add	fp, sp, #8
 e6c:	mov	r5, r1
 e70:	ldr	r1, [r1, #12]
 e74:	mov	r4, #0
 e78:	cmp	r1, #0
 e7c:	beq	ea8 <match_oper_password+0x44>
 e80:	mov	r2, r0
 e84:	ldrb	r0, [r1]
 e88:	cmp	r0, #0
 e8c:	beq	ea8 <match_oper_password+0x44>
 e90:	ldrb	r0, [r5, #20]
 e94:	tst	r0, #1
 e98:	bne	eb0 <match_oper_password+0x4c>
 e9c:	mov	r0, r2
 ea0:	cmp	r0, #0
 ea4:	bne	edc <match_oper_password+0x78>
 ea8:	mov	r0, r4
 eac:	pop	{r4, r5, fp, pc}
 eb0:	ldr	r0, [pc, #60]	; ef4 <match_oper_password+0x90>
 eb4:	add	r0, pc, r0
 eb8:	cmp	r2, #0
 ebc:	beq	edc <match_oper_password+0x78>
 ec0:	ldrb	r3, [r2]
 ec4:	cmp	r3, #0
 ec8:	beq	edc <match_oper_password+0x78>
 ecc:	mov	r0, r2
 ed0:	bl	888 <rb_crypt@plt>
 ed4:	cmp	r0, #0
 ed8:	beq	ea8 <match_oper_password+0x44>
 edc:	ldr	r1, [r5, #12]
 ee0:	bl	81c <strcmp@plt>
 ee4:	cmp	r0, #0
 ee8:	moveq	r4, #1
 eec:	mov	r0, r4
 ef0:	pop	{r4, r5, fp, pc}
 ef4:	.word	0x00000161

00000ef8 <rb_strdup>:
 ef8:	push	{r4, sl, fp, lr}
 efc:	add	fp, sp, #8
 f00:	mov	r4, r0
 f04:	bl	8dc <strlen@plt>
 f08:	add	r0, r0, #1
 f0c:	bl	8a0 <malloc@plt>
 f10:	cmp	r0, #0
 f14:	beq	f24 <rb_strdup+0x2c>
 f18:	mov	r1, r4
 f1c:	pop	{r4, sl, fp, lr}
 f20:	b	87c <strcpy@plt>
 f24:	bl	858 <rb_outofmemory@plt>

Disassembly of section .fini:

00000f28 <_fini>:
 f28:	push	{r3, lr}
 f2c:	pop	{r3, pc}
