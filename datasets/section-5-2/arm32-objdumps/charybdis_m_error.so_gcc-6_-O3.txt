
../repos/charybdis/modules/core/.libs/m_error.so:     file format elf32-littlearm


Disassembly of section .init:

00000560 <_init>:
 560:	push	{r3, lr}
 564:	bl	610 <call_weak_fn>
 568:	pop	{r3, pc}

Disassembly of section .plt:

0000056c <.plt>:
 56c:	push	{lr}		; (str lr, [sp, #-4]!)
 570:	ldr	lr, [pc, #4]	; 57c <.plt+0x10>
 574:	add	lr, pc, lr
 578:	ldr	pc, [lr, #8]!
 57c:	.word	0x00010a84

00000580 <__cxa_finalize@plt>:
 580:	add	ip, pc, #0, 12
 584:	add	ip, ip, #16, 20	; 0x10000
 588:	ldr	pc, [ip, #2692]!	; 0xa84

0000058c <rb_strncasecmp@plt>:
 58c:	add	ip, pc, #0, 12
 590:	add	ip, ip, #16, 20	; 0x10000
 594:	ldr	pc, [ip, #2684]!	; 0xa7c

00000598 <sendto_realops_snomask@plt>:
 598:	add	ip, pc, #0, 12
 59c:	add	ip, ip, #16, 20	; 0x10000
 5a0:	ldr	pc, [ip, #2676]!	; 0xa74

000005a4 <__gmon_start__@plt>:
 5a4:	add	ip, pc, #0, 12
 5a8:	add	ip, ip, #16, 20	; 0x10000
 5ac:	ldr	pc, [ip, #2668]!	; 0xa6c

000005b0 <strlen@plt>:
 5b0:	add	ip, pc, #0, 12
 5b4:	add	ip, ip, #16, 20	; 0x10000
 5b8:	ldr	pc, [ip, #2660]!	; 0xa64

000005bc <strchr@plt>:
 5bc:	add	ip, pc, #0, 12
 5c0:	add	ip, ip, #16, 20	; 0x10000
 5c4:	ldr	pc, [ip, #2652]!	; 0xa5c

000005c8 <snprintf@plt>:
 5c8:	add	ip, pc, #0, 12
 5cc:	add	ip, ip, #16, 20	; 0x10000
 5d0:	ldr	pc, [ip, #2644]!	; 0xa54

000005d4 <is_remote_connect@plt>:
 5d4:	add	ip, pc, #0, 12
 5d8:	add	ip, ip, #16, 20	; 0x10000
 5dc:	ldr	pc, [ip, #2636]!	; 0xa4c

000005e0 <ilog@plt>:
 5e0:	add	ip, pc, #0, 12
 5e4:	add	ip, ip, #16, 20	; 0x10000
 5e8:	ldr	pc, [ip, #2628]!	; 0xa44

000005ec <log_client_name@plt>:
 5ec:	add	ip, pc, #0, 12
 5f0:	add	ip, ip, #16, 20	; 0x10000
 5f4:	ldr	pc, [ip, #2620]!	; 0xa3c

000005f8 <exit_client@plt>:
 5f8:	add	ip, pc, #0, 12
 5fc:	add	ip, ip, #16, 20	; 0x10000
 600:	ldr	pc, [ip, #2612]!	; 0xa34

00000604 <strncmp@plt>:
 604:	add	ip, pc, #0, 12
 608:	add	ip, ip, #16, 20	; 0x10000
 60c:	ldr	pc, [ip, #2604]!	; 0xa2c

Disassembly of section .text:

00000610 <call_weak_fn>:
 610:	ldr	r3, [pc, #20]	; 62c <call_weak_fn+0x1c>
 614:	ldr	r2, [pc, #20]	; 630 <call_weak_fn+0x20>
 618:	add	r3, pc, r3
 61c:	ldr	r2, [r3, r2]
 620:	cmp	r2, #0
 624:	bxeq	lr
 628:	b	5a4 <__gmon_start__@plt>
 62c:	.word	0x000109e0
 630:	.word	0x00000044

00000634 <deregister_tm_clones>:
 634:	ldr	r3, [pc, #52]	; 670 <deregister_tm_clones+0x3c>
 638:	ldr	r0, [pc, #52]	; 674 <deregister_tm_clones+0x40>
 63c:	add	r3, pc, r3
 640:	add	r0, pc, r0
 644:	add	r3, r3, #3
 648:	sub	r3, r3, r0
 64c:	cmp	r3, #6
 650:	ldr	r3, [pc, #32]	; 678 <deregister_tm_clones+0x44>
 654:	add	r3, pc, r3
 658:	bxls	lr
 65c:	ldr	r2, [pc, #24]	; 67c <deregister_tm_clones+0x48>
 660:	ldr	r3, [r3, r2]
 664:	cmp	r3, #0
 668:	bxeq	lr
 66c:	bx	r3
 670:	.word	0x00010a8c
 674:	.word	0x00010a88
 678:	.word	0x000109a4
 67c:	.word	0x00000040

00000680 <register_tm_clones>:
 680:	ldr	r1, [pc, #56]	; 6c0 <register_tm_clones+0x40>
 684:	ldr	r0, [pc, #56]	; 6c4 <register_tm_clones+0x44>
 688:	add	r1, pc, r1
 68c:	add	r0, pc, r0
 690:	sub	r1, r1, r0
 694:	ldr	r3, [pc, #44]	; 6c8 <register_tm_clones+0x48>
 698:	asr	r1, r1, #2
 69c:	add	r3, pc, r3
 6a0:	add	r1, r1, r1, lsr #31
 6a4:	asrs	r1, r1, #1
 6a8:	bxeq	lr
 6ac:	ldr	r2, [pc, #24]	; 6cc <register_tm_clones+0x4c>
 6b0:	ldr	r3, [r3, r2]
 6b4:	cmp	r3, #0
 6b8:	bxeq	lr
 6bc:	bx	r3
 6c0:	.word	0x00010a40
 6c4:	.word	0x00010a3c
 6c8:	.word	0x0001095c
 6cc:	.word	0x0000004c

000006d0 <__do_global_dtors_aux>:
 6d0:	ldr	r3, [pc, #76]	; 724 <__do_global_dtors_aux+0x54>
 6d4:	ldr	r2, [pc, #76]	; 728 <__do_global_dtors_aux+0x58>
 6d8:	add	r3, pc, r3
 6dc:	add	r2, pc, r2
 6e0:	ldrb	r3, [r3]
 6e4:	cmp	r3, #0
 6e8:	bxne	lr
 6ec:	ldr	r3, [pc, #56]	; 72c <__do_global_dtors_aux+0x5c>
 6f0:	push	{r4, lr}
 6f4:	ldr	r3, [r2, r3]
 6f8:	cmp	r3, #0
 6fc:	beq	70c <__do_global_dtors_aux+0x3c>
 700:	ldr	r3, [pc, #40]	; 730 <__do_global_dtors_aux+0x60>
 704:	ldr	r0, [pc, r3]
 708:	bl	580 <__cxa_finalize@plt>
 70c:	bl	634 <deregister_tm_clones>
 710:	ldr	r3, [pc, #28]	; 734 <__do_global_dtors_aux+0x64>
 714:	mov	r2, #1
 718:	add	r3, pc, r3
 71c:	strb	r2, [r3]
 720:	pop	{r4, pc}
 724:	.word	0x000109f0
 728:	.word	0x0001091c
 72c:	.word	0x0000003c
 730:	.word	0x0001094c
 734:	.word	0x000109b0

00000738 <frame_dummy>:
 738:	ldr	r0, [pc, #56]	; 778 <frame_dummy+0x40>
 73c:	ldr	r3, [pc, #56]	; 77c <frame_dummy+0x44>
 740:	add	r0, pc, r0
 744:	ldr	r2, [r0]
 748:	add	r3, pc, r3
 74c:	cmp	r2, #0
 750:	bne	758 <frame_dummy+0x20>
 754:	b	680 <register_tm_clones>
 758:	ldr	r2, [pc, #32]	; 780 <frame_dummy+0x48>
 75c:	ldr	r3, [r3, r2]
 760:	cmp	r3, #0
 764:	beq	754 <frame_dummy+0x1c>
 768:	push	{r4, lr}
 76c:	blx	r3
 770:	pop	{r4, lr}
 774:	b	680 <register_tm_clones>
 778:	.word	0x000107b4
 77c:	.word	0x000108b0
 780:	.word	0x00000048

00000784 <m_error>:
 784:	push	{r4, r5, r6, r7, r8, r9, lr}
 788:	cmp	r3, #1
 78c:	ldr	r7, [pc, #708]	; a58 <m_error+0x2d4>
 790:	ldr	r0, [pc, #708]	; a5c <m_error+0x2d8>
 794:	add	r7, pc, r7
 798:	sub	sp, sp, #116	; 0x74
 79c:	ldr	r3, [r7, r0]
 7a0:	mov	r4, r1
 7a4:	mov	r8, r2
 7a8:	ldr	r6, [r3, #208]	; 0xd0
 7ac:	ble	930 <m_error+0x1ac>
 7b0:	ldr	r3, [sp, #144]	; 0x90
 7b4:	ldr	r5, [r3, #4]
 7b8:	ldrb	r3, [r5]
 7bc:	cmp	r3, #0
 7c0:	beq	930 <m_error+0x1ac>
 7c4:	ldrh	r3, [r1, #80]	; 0x50
 7c8:	sub	r2, r3, #1
 7cc:	cmp	r3, #32
 7d0:	cmpne	r2, #1
 7d4:	bls	9cc <m_error+0x248>
 7d8:	ldr	r1, [pc, #640]	; a60 <m_error+0x2dc>
 7dc:	mov	r2, #25
 7e0:	add	r1, pc, r1
 7e4:	mov	r0, r5
 7e8:	bl	604 <strncmp@plt>
 7ec:	cmp	r0, #0
 7f0:	beq	990 <m_error+0x20c>
 7f4:	ldr	r3, [pc, #616]	; a64 <m_error+0x2e0>
 7f8:	ldr	r2, [pc, #616]	; a68 <m_error+0x2e4>
 7fc:	add	r9, sp, #12
 800:	ldr	r3, [r7, r3]
 804:	add	r2, pc, r2
 808:	add	r3, r3, #88	; 0x58
 80c:	mov	r1, #100	; 0x64
 810:	mov	r0, r9
 814:	bl	5c8 <snprintf@plt>
 818:	mov	r0, r9
 81c:	bl	5b0 <strlen@plt>
 820:	mov	r1, r9
 824:	mov	r2, r0
 828:	mov	r0, r5
 82c:	bl	604 <strncmp@plt>
 830:	cmp	r0, #0
 834:	beq	990 <m_error+0x20c>
 838:	ldr	r1, [pc, #556]	; a6c <m_error+0x2e8>
 83c:	mov	r2, #11
 840:	add	r1, pc, r1
 844:	mov	r0, r5
 848:	bl	604 <strncmp@plt>
 84c:	cmp	r0, #0
 850:	beq	990 <m_error+0x20c>
 854:	ldr	r1, [pc, #532]	; a70 <m_error+0x2ec>
 858:	mov	r2, #14
 85c:	add	r1, pc, r1
 860:	mov	r0, r5
 864:	bl	604 <strncmp@plt>
 868:	cmp	r0, #0
 86c:	beq	990 <m_error+0x20c>
 870:	ldr	r1, [pc, #508]	; a74 <m_error+0x2f0>
 874:	mov	r2, #12
 878:	add	r1, pc, r1
 87c:	mov	r0, r5
 880:	bl	58c <rb_strncasecmp@plt>
 884:	cmp	r0, #0
 888:	beq	8d4 <m_error+0x150>
 88c:	mov	r1, #91	; 0x5b
 890:	mov	r0, r5
 894:	bl	5bc <strchr@plt>
 898:	cmp	r0, #0
 89c:	bne	8d4 <m_error+0x150>
 8a0:	mov	r1, #46	; 0x2e
 8a4:	mov	r0, r5
 8a8:	bl	5bc <strchr@plt>
 8ac:	cmp	r0, #0
 8b0:	beq	8c0 <m_error+0x13c>
 8b4:	ldrb	r3, [r0, #1]
 8b8:	cmp	r3, #0
 8bc:	bne	8d4 <m_error+0x150>
 8c0:	mov	r1, #58	; 0x3a
 8c4:	mov	r0, r5
 8c8:	bl	5bc <strchr@plt>
 8cc:	cmp	r0, #0
 8d0:	beq	990 <m_error+0x20c>
 8d4:	ldrh	r3, [r4, #80]	; 0x50
 8d8:	sub	r2, r3, #1
 8dc:	cmp	r3, #32
 8e0:	cmpne	r2, #1
 8e4:	bhi	9a4 <m_error+0x220>
 8e8:	cmp	r6, #1
 8ec:	ble	9f4 <m_error+0x270>
 8f0:	add	r7, r4, #88	; 0x58
 8f4:	mov	r0, r4
 8f8:	bl	5d4 <is_remote_connect@plt>
 8fc:	ldr	r2, [pc, #372]	; a78 <m_error+0x2f4>
 900:	sub	r6, r6, #1
 904:	clz	r6, r6
 908:	lsr	r6, r6, #5
 90c:	mov	r3, r7
 910:	add	r2, pc, r2
 914:	cmp	r0, #0
 918:	movne	r1, #256	; 0x100
 91c:	moveq	r1, #0
 920:	orr	r1, r1, r6
 924:	mov	r0, #256	; 0x100
 928:	bl	598 <sendto_realops_snomask@plt>
 92c:	b	9a4 <m_error+0x220>
 930:	ldrh	r3, [r4, #80]	; 0x50
 934:	sub	r2, r3, #1
 938:	cmp	r3, #32
 93c:	cmpne	r2, #1
 940:	bls	9c4 <m_error+0x240>
 944:	ldr	r3, [pc, #280]	; a64 <m_error+0x2e0>
 948:	ldr	r2, [pc, #300]	; a7c <m_error+0x2f8>
 94c:	add	r9, sp, #12
 950:	ldr	r3, [r7, r3]
 954:	add	r2, pc, r2
 958:	add	r3, r3, #88	; 0x58
 95c:	mov	r1, #100	; 0x64
 960:	mov	r0, r9
 964:	bl	5c8 <snprintf@plt>
 968:	mov	r0, r9
 96c:	bl	5b0 <strlen@plt>
 970:	ldr	r5, [pc, #264]	; a80 <m_error+0x2fc>
 974:	mov	r1, r9
 978:	add	r5, pc, r5
 97c:	mov	r2, r0
 980:	mov	r0, r5
 984:	bl	604 <strncmp@plt>
 988:	cmp	r0, #0
 98c:	bne	870 <m_error+0xec>
 990:	ldrh	r3, [r4, #80]	; 0x50
 994:	sub	r2, r3, #1
 998:	cmp	r3, #32
 99c:	cmpne	r2, #1
 9a0:	bls	a28 <m_error+0x2a4>
 9a4:	ldr	r3, [pc, #216]	; a84 <m_error+0x300>
 9a8:	mov	r0, r4
 9ac:	add	r3, pc, r3
 9b0:	mov	r2, r8
 9b4:	mov	r1, r8
 9b8:	bl	5f8 <exit_client@plt>
 9bc:	add	sp, sp, #116	; 0x74
 9c0:	pop	{r4, r5, r6, r7, r8, r9, pc}
 9c4:	ldr	r5, [pc, #188]	; a88 <m_error+0x304>
 9c8:	add	r5, pc, r5
 9cc:	mov	r1, #1
 9d0:	mov	r0, r8
 9d4:	bl	5ec <log_client_name@plt>
 9d8:	ldr	r1, [pc, #172]	; a8c <m_error+0x308>
 9dc:	mov	r3, r5
 9e0:	add	r1, pc, r1
 9e4:	mov	r2, r0
 9e8:	mov	r0, #5
 9ec:	bl	5e0 <ilog@plt>
 9f0:	b	7d8 <m_error+0x54>
 9f4:	cmp	r6, #0
 9f8:	beq	a28 <m_error+0x2a4>
 9fc:	ldr	r2, [pc, #140]	; a90 <m_error+0x30c>
 a00:	add	r7, r4, #88	; 0x58
 a04:	str	r5, [sp]
 a08:	mov	r3, r7
 a0c:	add	r2, pc, r2
 a10:	mov	r1, #2
 a14:	mov	r0, #256	; 0x100
 a18:	bl	598 <sendto_realops_snomask@plt>
 a1c:	cmp	r6, #1
 a20:	bne	9a4 <m_error+0x220>
 a24:	b	8f4 <m_error+0x170>
 a28:	mov	r0, r4
 a2c:	bl	5d4 <is_remote_connect@plt>
 a30:	ldr	r2, [pc, #92]	; a94 <m_error+0x310>
 a34:	str	r5, [sp]
 a38:	add	r3, r4, #88	; 0x58
 a3c:	add	r2, pc, r2
 a40:	cmp	r0, #0
 a44:	movne	r1, #256	; 0x100
 a48:	moveq	r1, #0
 a4c:	mov	r0, #256	; 0x100
 a50:	bl	598 <sendto_realops_snomask@plt>
 a54:	b	9a4 <m_error+0x220>
 a58:	.word	0x00010864
 a5c:	.word	0x00000054
 a60:	.word	0x000005ac
 a64:	.word	0x00000050
 a68:	.word	0x000005a4
 a6c:	.word	0x00000588
 a70:	.word	0x00000578
 a74:	.word	0x0000056c
 a78:	.word	0x000004fc
 a7c:	.word	0x00000454
 a80:	.word	0x000003ec
 a84:	.word	0x0000047c
 a88:	.word	0x0000039c
 a8c:	.word	0x00000388
 a90:	.word	0x000003e8
 a94:	.word	0x000003b8

00000a98 <ms_error>:
 a98:	push	{r4, r5, r6, r7, r8, r9, lr}
 a9c:	cmp	r3, #1
 aa0:	ldr	r7, [pc, #588]	; cf4 <ms_error+0x25c>
 aa4:	ldr	r0, [pc, #588]	; cf8 <ms_error+0x260>
 aa8:	add	r7, pc, r7
 aac:	mov	r5, r1
 ab0:	ldr	r3, [r7, r0]
 ab4:	sub	sp, sp, #116	; 0x74
 ab8:	mov	r8, r2
 abc:	ldr	r9, [r3, #208]	; 0xd0
 ac0:	mov	r1, #1
 ac4:	mov	r0, r2
 ac8:	ble	b50 <ms_error+0xb8>
 acc:	ldr	r3, [sp, #144]	; 0x90
 ad0:	ldr	r4, [r3, #4]
 ad4:	ldrb	r3, [r4]
 ad8:	cmp	r3, #0
 adc:	beq	b50 <ms_error+0xb8>
 ae0:	bl	5ec <log_client_name@plt>
 ae4:	ldr	r1, [pc, #528]	; cfc <ms_error+0x264>
 ae8:	mov	r3, r4
 aec:	add	r1, pc, r1
 af0:	mov	r2, r0
 af4:	mov	r0, #5
 af8:	bl	5e0 <ilog@plt>
 afc:	ldr	r1, [pc, #508]	; d00 <ms_error+0x268>
 b00:	mov	r2, #25
 b04:	add	r1, pc, r1
 b08:	mov	r0, r4
 b0c:	bl	604 <strncmp@plt>
 b10:	cmp	r0, #0
 b14:	bne	c10 <ms_error+0x178>
 b18:	cmp	r8, r5
 b1c:	mov	r9, #0
 b20:	beq	bec <ms_error+0x154>
 b24:	ldr	r2, [pc, #472]	; d04 <ms_error+0x26c>
 b28:	add	r5, r5, #88	; 0x58
 b2c:	str	r5, [sp]
 b30:	str	r4, [sp, #4]
 b34:	add	r3, r8, #88	; 0x58
 b38:	mov	r1, r9
 b3c:	add	r2, pc, r2
 b40:	mov	r0, #256	; 0x100
 b44:	bl	598 <sendto_realops_snomask@plt>
 b48:	add	sp, sp, #116	; 0x74
 b4c:	pop	{r4, r5, r6, r7, r8, r9, pc}
 b50:	bl	5ec <log_client_name@plt>
 b54:	ldr	r4, [pc, #428]	; d08 <ms_error+0x270>
 b58:	ldr	r1, [pc, #428]	; d0c <ms_error+0x274>
 b5c:	add	r4, pc, r4
 b60:	add	r1, pc, r1
 b64:	mov	r3, r4
 b68:	add	r6, sp, #12
 b6c:	mov	r2, r0
 b70:	mov	r0, #5
 b74:	bl	5e0 <ilog@plt>
 b78:	ldr	r3, [pc, #400]	; d10 <ms_error+0x278>
 b7c:	ldr	r2, [pc, #400]	; d14 <ms_error+0x27c>
 b80:	mov	r1, #100	; 0x64
 b84:	ldr	r3, [r7, r3]
 b88:	add	r2, pc, r2
 b8c:	add	r3, r3, #88	; 0x58
 b90:	mov	r0, r6
 b94:	bl	5c8 <snprintf@plt>
 b98:	mov	r0, r6
 b9c:	bl	5b0 <strlen@plt>
 ba0:	mov	r1, r6
 ba4:	mov	r2, r0
 ba8:	mov	r0, r4
 bac:	bl	604 <strncmp@plt>
 bb0:	cmp	r0, #0
 bb4:	beq	b18 <ms_error+0x80>
 bb8:	ldr	r1, [pc, #344]	; d18 <ms_error+0x280>
 bbc:	mov	r2, #12
 bc0:	add	r1, pc, r1
 bc4:	mov	r0, r4
 bc8:	bl	58c <rb_strncasecmp@plt>
 bcc:	cmp	r0, #0
 bd0:	bne	cbc <ms_error+0x224>
 bd4:	cmp	r9, #2
 bd8:	beq	b48 <ms_error+0xb0>
 bdc:	cmp	r9, #0
 be0:	movne	r9, #2
 be4:	cmp	r8, r5
 be8:	bne	b24 <ms_error+0x8c>
 bec:	ldr	r2, [pc, #296]	; d1c <ms_error+0x284>
 bf0:	str	r4, [sp]
 bf4:	add	r3, r5, #88	; 0x58
 bf8:	mov	r1, r9
 bfc:	add	r2, pc, r2
 c00:	mov	r0, #256	; 0x100
 c04:	bl	598 <sendto_realops_snomask@plt>
 c08:	add	sp, sp, #116	; 0x74
 c0c:	pop	{r4, r5, r6, r7, r8, r9, pc}
 c10:	ldr	r3, [pc, #248]	; d10 <ms_error+0x278>
 c14:	ldr	r2, [pc, #260]	; d20 <ms_error+0x288>
 c18:	add	r6, sp, #12
 c1c:	ldr	r3, [r7, r3]
 c20:	add	r2, pc, r2
 c24:	add	r3, r3, #88	; 0x58
 c28:	mov	r1, #100	; 0x64
 c2c:	mov	r0, r6
 c30:	bl	5c8 <snprintf@plt>
 c34:	mov	r0, r6
 c38:	bl	5b0 <strlen@plt>
 c3c:	mov	r1, r6
 c40:	mov	r2, r0
 c44:	mov	r0, r4
 c48:	bl	604 <strncmp@plt>
 c4c:	cmp	r0, #0
 c50:	beq	b18 <ms_error+0x80>
 c54:	ldr	r1, [pc, #200]	; d24 <ms_error+0x28c>
 c58:	mov	r2, #11
 c5c:	add	r1, pc, r1
 c60:	mov	r0, r4
 c64:	bl	604 <strncmp@plt>
 c68:	cmp	r0, #0
 c6c:	beq	b18 <ms_error+0x80>
 c70:	ldr	r1, [pc, #176]	; d28 <ms_error+0x290>
 c74:	mov	r2, #14
 c78:	add	r1, pc, r1
 c7c:	mov	r0, r4
 c80:	bl	604 <strncmp@plt>
 c84:	cmp	r0, #0
 c88:	beq	b18 <ms_error+0x80>
 c8c:	ldr	r1, [pc, #152]	; d2c <ms_error+0x294>
 c90:	mov	r2, #12
 c94:	add	r1, pc, r1
 c98:	mov	r0, r4
 c9c:	bl	58c <rb_strncasecmp@plt>
 ca0:	cmp	r0, #0
 ca4:	beq	bd4 <ms_error+0x13c>
 ca8:	mov	r1, #91	; 0x5b
 cac:	mov	r0, r4
 cb0:	bl	5bc <strchr@plt>
 cb4:	cmp	r0, #0
 cb8:	bne	bd4 <ms_error+0x13c>
 cbc:	mov	r1, #46	; 0x2e
 cc0:	mov	r0, r4
 cc4:	bl	5bc <strchr@plt>
 cc8:	cmp	r0, #0
 ccc:	beq	cdc <ms_error+0x244>
 cd0:	ldrb	r3, [r0, #1]
 cd4:	cmp	r3, #0
 cd8:	bne	bd4 <ms_error+0x13c>
 cdc:	mov	r1, #58	; 0x3a
 ce0:	mov	r0, r4
 ce4:	bl	5bc <strchr@plt>
 ce8:	cmp	r0, #0
 cec:	bne	bd4 <ms_error+0x13c>
 cf0:	b	b18 <ms_error+0x80>
 cf4:	.word	0x00010550
 cf8:	.word	0x00000054
 cfc:	.word	0x0000027c
 d00:	.word	0x00000288
 d04:	.word	0x000002f4
 d08:	.word	0x00000208
 d0c:	.word	0x00000208
 d10:	.word	0x00000050
 d14:	.word	0x00000220
 d18:	.word	0x00000224
 d1c:	.word	0x000001f8
 d20:	.word	0x00000188
 d24:	.word	0x0000016c
 d28:	.word	0x0000015c
 d2c:	.word	0x00000150

Disassembly of section .fini:

00000d30 <_fini>:
 d30:	push	{r3, lr}
 d34:	pop	{r3, pc}
