
../repos/dvidelabs-flatcc-3b39ef7/samples/reflection/bfbs2json:     file format elf32-littlearm


Disassembly of section .init:

00010844 <.init>:
   10844:	push	{r3, lr}
   10848:	bl	10978 <_start@@Base+0x3c>
   1084c:	pop	{r3, pc}

Disassembly of section .plt:

00010850 <printf@plt-0x14>:
   10850:	push	{lr}		; (str lr, [sp, #-4]!)
   10854:	ldr	lr, [pc, #4]	; 10860 <printf@plt-0x4>
   10858:	add	lr, pc, lr
   1085c:	ldr	pc, [lr, #8]!
   10860:	andeq	r2, r1, r0, lsr #15

00010864 <printf@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #73728	; 0x12000
   1086c:	ldr	pc, [ip, #1952]!	; 0x7a0

00010870 <fopen@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #73728	; 0x12000
   10878:	ldr	pc, [ip, #1944]!	; 0x798

0001087c <free@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #73728	; 0x12000
   10884:	ldr	pc, [ip, #1936]!	; 0x790

00010888 <ftell@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #73728	; 0x12000
   10890:	ldr	pc, [ip, #1928]!	; 0x788

00010894 <rewind@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #73728	; 0x12000
   1089c:	ldr	pc, [ip, #1920]!	; 0x780

000108a0 <fwrite@plt>:
   108a0:	add	ip, pc, #0, 12
   108a4:	add	ip, ip, #73728	; 0x12000
   108a8:	ldr	pc, [ip, #1912]!	; 0x778

000108ac <fread@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #73728	; 0x12000
   108b4:	ldr	pc, [ip, #1904]!	; 0x770

000108b8 <puts@plt>:
   108b8:	add	ip, pc, #0, 12
   108bc:	add	ip, ip, #73728	; 0x12000
   108c0:	ldr	pc, [ip, #1896]!	; 0x768

000108c4 <malloc@plt>:
   108c4:	add	ip, pc, #0, 12
   108c8:	add	ip, ip, #73728	; 0x12000
   108cc:	ldr	pc, [ip, #1888]!	; 0x760

000108d0 <__libc_start_main@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #73728	; 0x12000
   108d8:	ldr	pc, [ip, #1880]!	; 0x758

000108dc <__gmon_start__@plt>:
   108dc:	add	ip, pc, #0, 12
   108e0:	add	ip, ip, #73728	; 0x12000
   108e4:	ldr	pc, [ip, #1872]!	; 0x750

000108e8 <exit@plt>:
   108e8:	add	ip, pc, #0, 12
   108ec:	add	ip, ip, #73728	; 0x12000
   108f0:	ldr	pc, [ip, #1864]!	; 0x748

000108f4 <fprintf@plt>:
   108f4:	add	ip, pc, #0, 12
   108f8:	add	ip, ip, #73728	; 0x12000
   108fc:	ldr	pc, [ip, #1856]!	; 0x740

00010900 <putchar@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #73728	; 0x12000
   10908:	ldr	pc, [ip, #1848]!	; 0x738

0001090c <fclose@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #73728	; 0x12000
   10914:	ldr	pc, [ip, #1840]!	; 0x730

00010918 <fseek@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #73728	; 0x12000
   10920:	ldr	pc, [ip, #1832]!	; 0x728

00010924 <abort@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #73728	; 0x12000
   1092c:	ldr	pc, [ip, #1824]!	; 0x720

00010930 <__assert_fail@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #73728	; 0x12000
   10938:	ldr	pc, [ip, #1816]!	; 0x718

Disassembly of section .text:

0001093c <_start@@Base>:
   1093c:	mov	fp, #0
   10940:	mov	lr, #0
   10944:	pop	{r1}		; (ldr r1, [sp], #4)
   10948:	mov	r2, sp
   1094c:	push	{r2}		; (str r2, [sp, #-4]!)
   10950:	push	{r0}		; (str r0, [sp, #-4]!)
   10954:	ldr	ip, [pc, #16]	; 1096c <_start@@Base+0x30>
   10958:	push	{ip}		; (str ip, [sp, #-4]!)
   1095c:	ldr	r0, [pc, #12]	; 10970 <_start@@Base+0x34>
   10960:	ldr	r3, [pc, #12]	; 10974 <_start@@Base+0x38>
   10964:	bl	108d0 <__libc_start_main@plt>
   10968:	bl	10924 <abort@plt>
   1096c:	andeq	r1, r1, r8, lsr #22
   10970:	andeq	r1, r1, ip, asr #20
   10974:	andeq	r1, r1, r8, asr #21
   10978:	ldr	r3, [pc, #20]	; 10994 <_start@@Base+0x58>
   1097c:	ldr	r2, [pc, #20]	; 10998 <_start@@Base+0x5c>
   10980:	add	r3, pc, r3
   10984:	ldr	r2, [r3, r2]
   10988:	cmp	r2, #0
   1098c:	bxeq	lr
   10990:	b	108dc <__gmon_start__@plt>
   10994:	andeq	r2, r1, r8, ror r6
   10998:	andeq	r0, r0, r4, asr r0
   1099c:	ldr	r0, [pc, #24]	; 109bc <_start@@Base+0x80>
   109a0:	ldr	r3, [pc, #24]	; 109c0 <_start@@Base+0x84>
   109a4:	cmp	r3, r0
   109a8:	bxeq	lr
   109ac:	ldr	r3, [pc, #16]	; 109c4 <_start@@Base+0x88>
   109b0:	cmp	r3, #0
   109b4:	bxeq	lr
   109b8:	bx	r3
   109bc:	andeq	r3, r2, r0, rrx
   109c0:	andeq	r3, r2, r0, rrx
   109c4:	andeq	r0, r0, r0
   109c8:	ldr	r0, [pc, #36]	; 109f4 <_start@@Base+0xb8>
   109cc:	ldr	r1, [pc, #36]	; 109f8 <_start@@Base+0xbc>
   109d0:	sub	r1, r1, r0
   109d4:	asr	r1, r1, #2
   109d8:	add	r1, r1, r1, lsr #31
   109dc:	asrs	r1, r1, #1
   109e0:	bxeq	lr
   109e4:	ldr	r3, [pc, #16]	; 109fc <_start@@Base+0xc0>
   109e8:	cmp	r3, #0
   109ec:	bxeq	lr
   109f0:	bx	r3
   109f4:	andeq	r3, r2, r0, rrx
   109f8:	andeq	r3, r2, r0, rrx
   109fc:	andeq	r0, r0, r0
   10a00:	push	{r4, lr}
   10a04:	ldr	r4, [pc, #24]	; 10a24 <_start@@Base+0xe8>
   10a08:	ldrb	r3, [r4]
   10a0c:	cmp	r3, #0
   10a10:	popne	{r4, pc}
   10a14:	bl	1099c <_start@@Base+0x60>
   10a18:	mov	r3, #1
   10a1c:	strb	r3, [r4]
   10a20:	pop	{r4, pc}
   10a24:	andeq	r3, r2, r4, rrx
   10a28:	b	109c8 <_start@@Base+0x8c>

00010a2c <print_type@@Base>:
   10a2c:	str	r4, [sp, #-8]!
   10a30:	str	lr, [sp, #4]
   10a34:	mov	r4, r0
   10a38:	mov	r0, #123	; 0x7b
   10a3c:	bl	10900 <putchar@plt>
   10a40:	cmp	r4, #0
   10a44:	beq	10b08 <print_type@@Base+0xdc>
   10a48:	ldr	r3, [r4]
   10a4c:	sub	r3, r4, r3
   10a50:	ldrh	r2, [r3]
   10a54:	cmp	r2, #5
   10a58:	movls	r2, #1
   10a5c:	bls	10a70 <print_type@@Base+0x44>
   10a60:	ldrh	r3, [r3, #4]
   10a64:	cmp	r3, #0
   10a68:	moveq	r2, #1
   10a6c:	bne	10b28 <print_type@@Base+0xfc>
   10a70:	ldr	r3, [r4]
   10a74:	sub	r3, r4, r3
   10a78:	ldrh	r1, [r3]
   10a7c:	cmp	r1, #7
   10a80:	bls	10c98 <print_type@@Base+0x26c>
   10a84:	ldrh	r3, [r3, #6]
   10a88:	cmp	r3, #0
   10a8c:	beq	10c98 <print_type@@Base+0x26c>
   10a90:	cmp	r2, #0
   10a94:	beq	10c64 <print_type@@Base+0x238>
   10a98:	ldr	r3, [r4]
   10a9c:	sub	r3, r4, r3
   10aa0:	ldrh	r3, [r3, #4]
   10aa4:	cmp	r3, #0
   10aa8:	movweq	r1, #7340	; 0x1cac
   10aac:	movteq	r1, #1
   10ab0:	beq	10c88 <print_type@@Base+0x25c>
   10ab4:	ldrsb	r3, [r4, r3]
   10ab8:	cmp	r3, #16
   10abc:	ldrls	pc, [pc, r3, lsl #2]
   10ac0:	b	10db8 <print_type@@Base+0x38c>
   10ac4:	andeq	r0, r1, r4, asr #27
   10ac8:	strdeq	r0, [r1], -r8
   10acc:	andeq	r0, r1, r4, lsl #26
   10ad0:	andeq	r0, r1, r0, lsl sp
   10ad4:	andeq	r0, r1, ip, lsl sp
   10ad8:	andeq	r0, r1, r8, lsr #26
   10adc:	andeq	r0, r1, r4, lsr sp
   10ae0:	andeq	r0, r1, r0, asr #26
   10ae4:	andeq	r0, r1, ip, asr #26
   10ae8:	andeq	r0, r1, r8, asr sp
   10aec:	andeq	r0, r1, r4, ror #26
   10af0:	andeq	r0, r1, r0, ror sp
   10af4:	andeq	r0, r1, ip, ror sp
   10af8:	andeq	r0, r1, r8, lsl #27
   10afc:	muleq	r1, r4, sp
   10b00:	andeq	r0, r1, r0, lsr #27
   10b04:	andeq	r0, r1, ip, lsr #27
   10b08:	movw	r3, #6968	; 0x1b38
   10b0c:	movt	r3, #1
   10b10:	mov	r2, #147	; 0x93
   10b14:	movw	r1, #7468	; 0x1d2c
   10b18:	movt	r1, #1
   10b1c:	movw	r0, #7564	; 0x1d8c
   10b20:	movt	r0, #1
   10b24:	bl	10930 <__assert_fail@plt>
   10b28:	ldrsb	r3, [r4, r3]
   10b2c:	cmp	r3, #16
   10b30:	ldrls	pc, [pc, r3, lsl #2]
   10b34:	b	10c4c <print_type@@Base+0x220>
   10b38:	andeq	r0, r1, r8, asr ip
   10b3c:	andeq	r0, r1, ip, ror fp
   10b40:	andeq	r0, r1, r8, lsl #23
   10b44:	andeq	r0, r1, r4, lsr #23
   10b48:			; <UNDEFINED> instruction: 0x00010bb0
   10b4c:			; <UNDEFINED> instruction: 0x00010bbc
   10b50:	andeq	r0, r1, r8, asr #23
   10b54:	ldrdeq	r0, [r1], -r4
   10b58:	andeq	r0, r1, r0, ror #23
   10b5c:	andeq	r0, r1, ip, ror #23
   10b60:	strdeq	r0, [r1], -r8
   10b64:	andeq	r0, r1, r4, lsl #24
   10b68:	andeq	r0, r1, r0, lsl ip
   10b6c:	andeq	r0, r1, ip, lsl ip
   10b70:	andeq	r0, r1, r8, lsr #24
   10b74:	andeq	r0, r1, r4, lsr ip
   10b78:	andeq	r0, r1, r0, asr #24
   10b7c:	movw	r1, #7460	; 0x1d24
   10b80:	movt	r1, #1
   10b84:	b	10b90 <print_type@@Base+0x164>
   10b88:	movw	r1, #7348	; 0x1cb4
   10b8c:	movt	r1, #1
   10b90:	movw	r0, #7604	; 0x1db4
   10b94:	movt	r0, #1
   10b98:	bl	10864 <printf@plt>
   10b9c:	mov	r2, #0
   10ba0:	b	10a70 <print_type@@Base+0x44>
   10ba4:	movw	r1, #7356	; 0x1cbc
   10ba8:	movt	r1, #1
   10bac:	b	10b90 <print_type@@Base+0x164>
   10bb0:	movw	r1, #7364	; 0x1cc4
   10bb4:	movt	r1, #1
   10bb8:	b	10b90 <print_type@@Base+0x164>
   10bbc:	movw	r1, #7372	; 0x1ccc
   10bc0:	movt	r1, #1
   10bc4:	b	10b90 <print_type@@Base+0x164>
   10bc8:	movw	r1, #7380	; 0x1cd4
   10bcc:	movt	r1, #1
   10bd0:	b	10b90 <print_type@@Base+0x164>
   10bd4:	movw	r1, #7388	; 0x1cdc
   10bd8:	movt	r1, #1
   10bdc:	b	10b90 <print_type@@Base+0x164>
   10be0:	movw	r1, #7392	; 0x1ce0
   10be4:	movt	r1, #1
   10be8:	b	10b90 <print_type@@Base+0x164>
   10bec:	movw	r1, #7400	; 0x1ce8
   10bf0:	movt	r1, #1
   10bf4:	b	10b90 <print_type@@Base+0x164>
   10bf8:	movw	r1, #7408	; 0x1cf0
   10bfc:	movt	r1, #1
   10c00:	b	10b90 <print_type@@Base+0x164>
   10c04:	movw	r1, #7416	; 0x1cf8
   10c08:	movt	r1, #1
   10c0c:	b	10b90 <print_type@@Base+0x164>
   10c10:	movw	r1, #7424	; 0x1d00
   10c14:	movt	r1, #1
   10c18:	b	10b90 <print_type@@Base+0x164>
   10c1c:	movw	r1, #7432	; 0x1d08
   10c20:	movt	r1, #1
   10c24:	b	10b90 <print_type@@Base+0x164>
   10c28:	movw	r1, #7440	; 0x1d10
   10c2c:	movt	r1, #1
   10c30:	b	10b90 <print_type@@Base+0x164>
   10c34:	movw	r1, #7448	; 0x1d18
   10c38:	movt	r1, #1
   10c3c:	b	10b90 <print_type@@Base+0x164>
   10c40:	movw	r1, #7452	; 0x1d1c
   10c44:	movt	r1, #1
   10c48:	b	10b90 <print_type@@Base+0x164>
   10c4c:	movw	r1, #8256	; 0x2040
   10c50:	movt	r1, #1
   10c54:	b	10b90 <print_type@@Base+0x164>
   10c58:	movw	r1, #7340	; 0x1cac
   10c5c:	movt	r1, #1
   10c60:	b	10b90 <print_type@@Base+0x164>
   10c64:	mov	r0, #44	; 0x2c
   10c68:	bl	10900 <putchar@plt>
   10c6c:	ldr	r3, [r4]
   10c70:	sub	r3, r4, r3
   10c74:	ldrh	r2, [r3]
   10c78:	cmp	r2, #5
   10c7c:	movwls	r1, #7340	; 0x1cac
   10c80:	movtls	r1, #1
   10c84:	bhi	10aa0 <print_type@@Base+0x74>
   10c88:	movw	r0, #7624	; 0x1dc8
   10c8c:	movt	r0, #1
   10c90:	bl	10864 <printf@plt>
   10c94:	mov	r2, #0
   10c98:	ldr	r3, [r4]
   10c9c:	sub	r3, r4, r3
   10ca0:	ldrh	r1, [r3]
   10ca4:	cmp	r1, #9
   10ca8:	bls	10ce4 <print_type@@Base+0x2b8>
   10cac:	ldrh	r3, [r3, #8]
   10cb0:	cmp	r3, #0
   10cb4:	beq	10ce4 <print_type@@Base+0x2b8>
   10cb8:	cmp	r2, #0
   10cbc:	beq	10dd0 <print_type@@Base+0x3a4>
   10cc0:	ldr	r3, [r4]
   10cc4:	sub	r3, r4, r3
   10cc8:	ldrh	r3, [r3, #8]
   10ccc:	cmp	r3, #0
   10cd0:	beq	10df4 <print_type@@Base+0x3c8>
   10cd4:	ldr	r1, [r4, r3]
   10cd8:	movw	r0, #7640	; 0x1dd8
   10cdc:	movt	r0, #1
   10ce0:	bl	10864 <printf@plt>
   10ce4:	mov	r0, #125	; 0x7d
   10ce8:	bl	10900 <putchar@plt>
   10cec:	ldr	r4, [sp]
   10cf0:	add	sp, sp, #4
   10cf4:	pop	{pc}		; (ldr pc, [sp], #4)
   10cf8:	movw	r1, #7460	; 0x1d24
   10cfc:	movt	r1, #1
   10d00:	b	10c88 <print_type@@Base+0x25c>
   10d04:	movw	r1, #7348	; 0x1cb4
   10d08:	movt	r1, #1
   10d0c:	b	10c88 <print_type@@Base+0x25c>
   10d10:	movw	r1, #7356	; 0x1cbc
   10d14:	movt	r1, #1
   10d18:	b	10c88 <print_type@@Base+0x25c>
   10d1c:	movw	r1, #7364	; 0x1cc4
   10d20:	movt	r1, #1
   10d24:	b	10c88 <print_type@@Base+0x25c>
   10d28:	movw	r1, #7372	; 0x1ccc
   10d2c:	movt	r1, #1
   10d30:	b	10c88 <print_type@@Base+0x25c>
   10d34:	movw	r1, #7380	; 0x1cd4
   10d38:	movt	r1, #1
   10d3c:	b	10c88 <print_type@@Base+0x25c>
   10d40:	movw	r1, #7388	; 0x1cdc
   10d44:	movt	r1, #1
   10d48:	b	10c88 <print_type@@Base+0x25c>
   10d4c:	movw	r1, #7392	; 0x1ce0
   10d50:	movt	r1, #1
   10d54:	b	10c88 <print_type@@Base+0x25c>
   10d58:	movw	r1, #7400	; 0x1ce8
   10d5c:	movt	r1, #1
   10d60:	b	10c88 <print_type@@Base+0x25c>
   10d64:	movw	r1, #7408	; 0x1cf0
   10d68:	movt	r1, #1
   10d6c:	b	10c88 <print_type@@Base+0x25c>
   10d70:	movw	r1, #7416	; 0x1cf8
   10d74:	movt	r1, #1
   10d78:	b	10c88 <print_type@@Base+0x25c>
   10d7c:	movw	r1, #7424	; 0x1d00
   10d80:	movt	r1, #1
   10d84:	b	10c88 <print_type@@Base+0x25c>
   10d88:	movw	r1, #7432	; 0x1d08
   10d8c:	movt	r1, #1
   10d90:	b	10c88 <print_type@@Base+0x25c>
   10d94:	movw	r1, #7440	; 0x1d10
   10d98:	movt	r1, #1
   10d9c:	b	10c88 <print_type@@Base+0x25c>
   10da0:	movw	r1, #7448	; 0x1d18
   10da4:	movt	r1, #1
   10da8:	b	10c88 <print_type@@Base+0x25c>
   10dac:	movw	r1, #7452	; 0x1d1c
   10db0:	movt	r1, #1
   10db4:	b	10c88 <print_type@@Base+0x25c>
   10db8:	movw	r1, #8256	; 0x2040
   10dbc:	movt	r1, #1
   10dc0:	b	10c88 <print_type@@Base+0x25c>
   10dc4:	movw	r1, #7340	; 0x1cac
   10dc8:	movt	r1, #1
   10dcc:	b	10c88 <print_type@@Base+0x25c>
   10dd0:	mov	r0, #44	; 0x2c
   10dd4:	bl	10900 <putchar@plt>
   10dd8:	ldr	r3, [r4]
   10ddc:	sub	r3, r4, r3
   10de0:	ldrh	r2, [r3]
   10de4:	cmp	r2, #9
   10de8:	bhi	10cc8 <print_type@@Base+0x29c>
   10dec:	mvn	r1, #0
   10df0:	b	10cd8 <print_type@@Base+0x2ac>
   10df4:	mvn	r1, #0
   10df8:	b	10cd8 <print_type@@Base+0x2ac>

00010dfc <print_object@@Base>:
   10dfc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10e00:	strd	r6, [sp, #8]
   10e04:	strd	r8, [sp, #16]
   10e08:	strd	sl, [sp, #24]
   10e0c:	str	lr, [sp, #32]
   10e10:	sub	sp, sp, #4
   10e14:	subs	r8, r0, #0
   10e18:	beq	10ea4 <print_object@@Base+0xa8>
   10e1c:	ldr	r3, [r8]
   10e20:	sub	r3, r8, r3
   10e24:	ldrh	r2, [r3]
   10e28:	cmp	r2, #7
   10e2c:	bls	10ec0 <print_object@@Base+0xc4>
   10e30:	ldrh	r2, [r3, #6]
   10e34:	cmp	r2, #0
   10e38:	beq	10ec0 <print_object@@Base+0xc4>
   10e3c:	add	r5, r8, r2
   10e40:	ldr	r4, [r8, r2]
   10e44:	add	r7, r4, #4
   10e48:	add	r7, r5, r7
   10e4c:	ldrh	r3, [r3, #4]
   10e50:	cmp	r3, #0
   10e54:	beq	10edc <print_object@@Base+0xe0>
   10e58:	add	r1, r8, r3
   10e5c:	ldr	r3, [r8, r3]
   10e60:	add	r3, r3, #4
   10e64:	add	r1, r1, r3
   10e68:	movw	r0, #7704	; 0x1e18
   10e6c:	movt	r0, #1
   10e70:	bl	10864 <printf@plt>
   10e74:	movw	r0, #7720	; 0x1e28
   10e78:	movt	r0, #1
   10e7c:	bl	10864 <printf@plt>
   10e80:	add	r5, r5, r4
   10e84:	mov	r6, #0
   10e88:	movw	r9, #7788	; 0x1e6c
   10e8c:	movt	r9, #1
   10e90:	movw	fp, #7812	; 0x1e84
   10e94:	movt	fp, #1
   10e98:	movw	sl, #7824	; 0x1e90
   10e9c:	movt	sl, #1
   10ea0:	b	10ff4 <print_object@@Base+0x1f8>
   10ea4:	ldr	r3, [pc, #912]	; 1123c <print_object@@Base+0x440>
   10ea8:	mov	r2, #224	; 0xe0
   10eac:	movw	r1, #7468	; 0x1d2c
   10eb0:	movt	r1, #1
   10eb4:	movw	r0, #7564	; 0x1d8c
   10eb8:	movt	r0, #1
   10ebc:	bl	10930 <__assert_fail@plt>
   10ec0:	ldr	r3, [pc, #884]	; 1123c <print_object@@Base+0x440>
   10ec4:	mov	r2, #224	; 0xe0
   10ec8:	movw	r1, #7468	; 0x1d2c
   10ecc:	movt	r1, #1
   10ed0:	movw	r0, #7668	; 0x1df4
   10ed4:	movt	r0, #1
   10ed8:	bl	10930 <__assert_fail@plt>
   10edc:	ldr	r3, [pc, #860]	; 11240 <print_object@@Base+0x444>
   10ee0:	mov	r2, #218	; 0xda
   10ee4:	movw	r1, #7468	; 0x1d2c
   10ee8:	movt	r1, #1
   10eec:	movw	r0, #7668	; 0x1df4
   10ef0:	movt	r0, #1
   10ef4:	bl	10930 <__assert_fail@plt>
   10ef8:	mov	r0, #44	; 0x2c
   10efc:	bl	10900 <putchar@plt>
   10f00:	b	11010 <print_object@@Base+0x214>
   10f04:	ldr	r3, [pc, #824]	; 11244 <print_object@@Base+0x448>
   10f08:	mov	r2, #192	; 0xc0
   10f0c:	movw	r1, #7468	; 0x1d2c
   10f10:	movt	r1, #1
   10f14:	movw	r0, #7732	; 0x1e34
   10f18:	movt	r0, #1
   10f1c:	bl	10930 <__assert_fail@plt>
   10f20:	ldr	r3, [pc, #800]	; 11248 <print_object@@Base+0x44c>
   10f24:	mov	r2, #195	; 0xc3
   10f28:	movw	r1, #7468	; 0x1d2c
   10f2c:	movt	r1, #1
   10f30:	movw	r0, #7564	; 0x1d8c
   10f34:	movt	r0, #1
   10f38:	bl	10930 <__assert_fail@plt>
   10f3c:	ldr	r3, [pc, #772]	; 11248 <print_object@@Base+0x44c>
   10f40:	mov	r2, #195	; 0xc3
   10f44:	movw	r1, #7468	; 0x1d2c
   10f48:	movt	r1, #1
   10f4c:	movw	r0, #7668	; 0x1df4
   10f50:	movt	r0, #1
   10f54:	bl	10930 <__assert_fail@plt>
   10f58:	ldr	r3, [pc, #748]	; 1124c <print_object@@Base+0x450>
   10f5c:	mov	r2, #201	; 0xc9
   10f60:	movw	r1, #7468	; 0x1d2c
   10f64:	movt	r1, #1
   10f68:	movw	r0, #7668	; 0x1df4
   10f6c:	movt	r0, #1
   10f70:	bl	10930 <__assert_fail@plt>
   10f74:	ldrh	r3, [r3, #8]
   10f78:	cmp	r3, #0
   10f7c:	beq	110a8 <print_object@@Base+0x2ac>
   10f80:	ldrh	r1, [r4, r3]
   10f84:	mov	r0, fp
   10f88:	bl	10864 <printf@plt>
   10f8c:	b	110a8 <print_object@@Base+0x2ac>
   10f90:	ldrd	r2, [r3, r4]
   10f94:	mov	r0, sl
   10f98:	bl	10864 <printf@plt>
   10f9c:	b	110c8 <print_object@@Base+0x2cc>
   10fa0:	add	r3, r4, r3
   10fa4:	ldrd	r2, [r3]
   10fa8:	movw	r0, #7848	; 0x1ea8
   10fac:	movt	r0, #1
   10fb0:	bl	10864 <printf@plt>
   10fb4:	b	110e8 <print_object@@Base+0x2ec>
   10fb8:	ldrb	r1, [r4, r3]
   10fbc:	movw	r2, #7652	; 0x1de4
   10fc0:	movt	r2, #1
   10fc4:	movw	r3, #7660	; 0x1dec
   10fc8:	movt	r3, #1
   10fcc:	cmp	r1, #0
   10fd0:	movne	r1, r2
   10fd4:	moveq	r1, r3
   10fd8:	movw	r0, #7872	; 0x1ec0
   10fdc:	movt	r0, #1
   10fe0:	bl	10864 <printf@plt>
   10fe4:	b	11108 <print_object@@Base+0x30c>
   10fe8:	mov	r0, #125	; 0x7d
   10fec:	bl	10900 <putchar@plt>
   10ff0:	add	r6, r6, #1
   10ff4:	cmp	r7, #0
   10ff8:	beq	11158 <print_object@@Base+0x35c>
   10ffc:	ldr	r3, [r7, #-4]
   11000:	cmp	r6, r3
   11004:	bcs	11158 <print_object@@Base+0x35c>
   11008:	cmp	r6, #0
   1100c:	bne	10ef8 <print_object@@Base+0xfc>
   11010:	add	r5, r5, #4
   11014:	ldr	r3, [r7, #-4]
   11018:	cmp	r6, r3
   1101c:	bcs	10f04 <print_object@@Base+0x108>
   11020:	ldr	r3, [r5]
   11024:	adds	r4, r5, r3
   11028:	beq	10f20 <print_object@@Base+0x124>
   1102c:	ldr	r3, [r5, r3]
   11030:	sub	r3, r4, r3
   11034:	ldrh	r2, [r3]
   11038:	cmp	r2, #5
   1103c:	bls	10f3c <print_object@@Base+0x140>
   11040:	ldrh	r3, [r3, #4]
   11044:	cmp	r3, #0
   11048:	beq	10f3c <print_object@@Base+0x140>
   1104c:	add	r1, r4, r3
   11050:	ldr	r3, [r4, r3]
   11054:	add	r3, r3, #4
   11058:	add	r1, r1, r3
   1105c:	mov	r0, r9
   11060:	bl	10864 <printf@plt>
   11064:	ldr	r3, [r4]
   11068:	sub	r3, r4, r3
   1106c:	ldrh	r2, [r3]
   11070:	cmp	r2, #7
   11074:	bls	10f58 <print_object@@Base+0x15c>
   11078:	ldrh	r3, [r3, #6]
   1107c:	cmp	r3, #0
   11080:	beq	10f58 <print_object@@Base+0x15c>
   11084:	add	r0, r4, r3
   11088:	ldr	r3, [r4, r3]
   1108c:	add	r0, r0, r3
   11090:	bl	10a2c <print_type@@Base>
   11094:	ldr	r3, [r4]
   11098:	sub	r3, r4, r3
   1109c:	ldrh	r2, [r3]
   110a0:	cmp	r2, #9
   110a4:	bhi	10f74 <print_object@@Base+0x178>
   110a8:	ldr	r3, [r4]
   110ac:	sub	r3, r4, r3
   110b0:	ldrh	r2, [r3]
   110b4:	cmp	r2, #13
   110b8:	bls	110c8 <print_object@@Base+0x2cc>
   110bc:	ldrh	r3, [r3, #12]
   110c0:	cmp	r3, #0
   110c4:	bne	10f90 <print_object@@Base+0x194>
   110c8:	ldr	r3, [r4]
   110cc:	sub	r3, r4, r3
   110d0:	ldrh	r2, [r3]
   110d4:	cmp	r2, #15
   110d8:	bls	110e8 <print_object@@Base+0x2ec>
   110dc:	ldrh	r3, [r3, #14]
   110e0:	cmp	r3, #0
   110e4:	bne	10fa0 <print_object@@Base+0x1a4>
   110e8:	ldr	r3, [r4]
   110ec:	sub	r3, r4, r3
   110f0:	ldrh	r2, [r3]
   110f4:	cmp	r2, #19
   110f8:	bls	11108 <print_object@@Base+0x30c>
   110fc:	ldrh	r3, [r3, #18]
   11100:	cmp	r3, #0
   11104:	bne	10fb8 <print_object@@Base+0x1bc>
   11108:	ldr	r3, [r4]
   1110c:	sub	r3, r4, r3
   11110:	ldrh	r2, [r3]
   11114:	cmp	r2, #21
   11118:	bls	10fe8 <print_object@@Base+0x1ec>
   1111c:	ldrh	r3, [r3, #20]
   11120:	cmp	r3, #0
   11124:	beq	10fe8 <print_object@@Base+0x1ec>
   11128:	ldrb	r1, [r4, r3]
   1112c:	movw	r2, #7652	; 0x1de4
   11130:	movt	r2, #1
   11134:	movw	r3, #7660	; 0x1dec
   11138:	movt	r3, #1
   1113c:	cmp	r1, #0
   11140:	movne	r1, r2
   11144:	moveq	r1, r3
   11148:	movw	r0, #7888	; 0x1ed0
   1114c:	movt	r0, #1
   11150:	bl	10864 <printf@plt>
   11154:	b	10fe8 <print_object@@Base+0x1ec>
   11158:	mov	r0, #93	; 0x5d
   1115c:	bl	10900 <putchar@plt>
   11160:	ldr	r3, [r8]
   11164:	sub	r3, r8, r3
   11168:	ldrh	r2, [r3]
   1116c:	cmp	r2, #9
   11170:	bls	11180 <print_object@@Base+0x384>
   11174:	ldrh	r3, [r3, #8]
   11178:	cmp	r3, #0
   1117c:	bne	111e4 <print_object@@Base+0x3e8>
   11180:	ldr	r3, [r8]
   11184:	sub	r3, r8, r3
   11188:	ldrh	r2, [r3]
   1118c:	cmp	r2, #11
   11190:	bls	111a0 <print_object@@Base+0x3a4>
   11194:	ldrh	r3, [r3, #10]
   11198:	cmp	r3, #0
   1119c:	bne	11214 <print_object@@Base+0x418>
   111a0:	ldr	r3, [r8]
   111a4:	sub	r3, r8, r3
   111a8:	ldrh	r2, [r3]
   111ac:	cmp	r2, #13
   111b0:	bls	111c0 <print_object@@Base+0x3c4>
   111b4:	ldrh	r3, [r3, #12]
   111b8:	cmp	r3, #0
   111bc:	bne	11228 <print_object@@Base+0x42c>
   111c0:	mov	r0, #125	; 0x7d
   111c4:	bl	10900 <putchar@plt>
   111c8:	add	sp, sp, #4
   111cc:	ldrd	r4, [sp]
   111d0:	ldrd	r6, [sp, #8]
   111d4:	ldrd	r8, [sp, #16]
   111d8:	ldrd	sl, [sp, #24]
   111dc:	add	sp, sp, #32
   111e0:	pop	{pc}		; (ldr pc, [sp], #4)
   111e4:	ldrb	r1, [r8, r3]
   111e8:	movw	r2, #7652	; 0x1de4
   111ec:	movt	r2, #1
   111f0:	movw	r3, #7660	; 0x1dec
   111f4:	movt	r3, #1
   111f8:	cmp	r1, #0
   111fc:	movne	r1, r2
   11200:	moveq	r1, r3
   11204:	movw	r0, #7900	; 0x1edc
   11208:	movt	r0, #1
   1120c:	bl	10864 <printf@plt>
   11210:	b	11180 <print_object@@Base+0x384>
   11214:	ldr	r1, [r8, r3]
   11218:	movw	r0, #7916	; 0x1eec
   1121c:	movt	r0, #1
   11220:	bl	10864 <printf@plt>
   11224:	b	111a0 <print_object@@Base+0x3a4>
   11228:	ldr	r1, [r8, r3]
   1122c:	movw	r0, #7932	; 0x1efc
   11230:	movt	r0, #1
   11234:	bl	10864 <printf@plt>
   11238:	b	111c0 <print_object@@Base+0x3c4>
   1123c:	andeq	r1, r1, r0, ror #22
   11240:	andeq	r1, r1, ip, ror fp
   11244:	muleq	r1, r4, fp
   11248:	andeq	r1, r1, ip, lsr #23
   1124c:	andeq	r1, r1, r4, asr #23

00011250 <print_enum@@Base>:
   11250:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11254:	strd	r6, [sp, #8]
   11258:	strd	r8, [sp, #16]
   1125c:	strd	sl, [sp, #24]
   11260:	str	lr, [sp, #32]
   11264:	sub	sp, sp, #4
   11268:	subs	r8, r0, #0
   1126c:	beq	1130c <print_enum@@Base+0xbc>
   11270:	ldr	r3, [r8]
   11274:	sub	r3, r8, r3
   11278:	ldrh	r2, [r3]
   1127c:	cmp	r2, #5
   11280:	bls	11328 <print_enum@@Base+0xd8>
   11284:	ldrh	r3, [r3, #4]
   11288:	cmp	r3, #0
   1128c:	beq	11328 <print_enum@@Base+0xd8>
   11290:	add	r1, r8, r3
   11294:	ldr	r3, [r8, r3]
   11298:	add	r3, r3, #4
   1129c:	add	r1, r1, r3
   112a0:	movw	r0, #7704	; 0x1e18
   112a4:	movt	r0, #1
   112a8:	bl	10864 <printf@plt>
   112ac:	ldr	r3, [r8]
   112b0:	sub	r3, r8, r3
   112b4:	ldrh	r2, [r3]
   112b8:	cmp	r2, #7
   112bc:	bls	11344 <print_enum@@Base+0xf4>
   112c0:	ldrh	r3, [r3, #6]
   112c4:	cmp	r3, #0
   112c8:	beq	11344 <print_enum@@Base+0xf4>
   112cc:	add	r6, r8, r3
   112d0:	ldr	r4, [r8, r3]
   112d4:	add	r7, r4, #4
   112d8:	add	r7, r6, r7
   112dc:	movw	r0, #7948	; 0x1f0c
   112e0:	movt	r0, #1
   112e4:	bl	10864 <printf@plt>
   112e8:	add	r6, r6, r4
   112ec:	mov	r5, #0
   112f0:	movw	r9, #7704	; 0x1e18
   112f4:	movt	r9, #1
   112f8:	movw	fp, #7960	; 0x1f18
   112fc:	movt	fp, #1
   11300:	movw	sl, #7976	; 0x1f28
   11304:	movt	sl, #1
   11308:	b	113d0 <print_enum@@Base+0x180>
   1130c:	ldr	r3, [pc, #612]	; 11578 <print_enum@@Base+0x328>
   11310:	mov	r2, #177	; 0xb1
   11314:	movw	r1, #7468	; 0x1d2c
   11318:	movt	r1, #1
   1131c:	movw	r0, #7564	; 0x1d8c
   11320:	movt	r0, #1
   11324:	bl	10930 <__assert_fail@plt>
   11328:	ldr	r3, [pc, #584]	; 11578 <print_enum@@Base+0x328>
   1132c:	mov	r2, #177	; 0xb1
   11330:	movw	r1, #7468	; 0x1d2c
   11334:	movt	r1, #1
   11338:	movw	r0, #7668	; 0x1df4
   1133c:	movt	r0, #1
   11340:	bl	10930 <__assert_fail@plt>
   11344:	ldr	r3, [pc, #560]	; 1157c <print_enum@@Base+0x32c>
   11348:	mov	r2, #183	; 0xb7
   1134c:	movw	r1, #7468	; 0x1d2c
   11350:	movt	r1, #1
   11354:	movw	r0, #7668	; 0x1df4
   11358:	movt	r0, #1
   1135c:	bl	10930 <__assert_fail@plt>
   11360:	mov	r0, #44	; 0x2c
   11364:	bl	10900 <putchar@plt>
   11368:	b	113f4 <print_enum@@Base+0x1a4>
   1136c:	ldr	r3, [pc, #524]	; 11580 <print_enum@@Base+0x330>
   11370:	mov	r2, #159	; 0x9f
   11374:	movw	r1, #7468	; 0x1d2c
   11378:	movt	r1, #1
   1137c:	movw	r0, #7564	; 0x1d8c
   11380:	movt	r0, #1
   11384:	bl	10930 <__assert_fail@plt>
   11388:	ldr	r3, [pc, #496]	; 11580 <print_enum@@Base+0x330>
   1138c:	mov	r2, #159	; 0x9f
   11390:	movw	r1, #7468	; 0x1d2c
   11394:	movt	r1, #1
   11398:	movw	r0, #7668	; 0x1df4
   1139c:	movt	r0, #1
   113a0:	bl	10930 <__assert_fail@plt>
   113a4:	ldrh	r3, [r3, #6]
   113a8:	cmp	r3, #0
   113ac:	beq	11448 <print_enum@@Base+0x1f8>
   113b0:	ldrd	r2, [r3, r4]
   113b4:	mov	r0, fp
   113b8:	bl	10864 <printf@plt>
   113bc:	b	11448 <print_enum@@Base+0x1f8>
   113c0:	bl	10dfc <print_object@@Base>
   113c4:	mov	r0, #125	; 0x7d
   113c8:	bl	10900 <putchar@plt>
   113cc:	add	r5, r5, #1
   113d0:	cmp	r7, #0
   113d4:	beq	114a4 <print_enum@@Base+0x254>
   113d8:	ldr	r3, [r7, #-4]
   113dc:	cmp	r5, r3
   113e0:	bcs	114a4 <print_enum@@Base+0x254>
   113e4:	ldr	r4, [r6, #4]!
   113e8:	add	r4, r6, r4
   113ec:	cmp	r5, #0
   113f0:	bne	11360 <print_enum@@Base+0x110>
   113f4:	cmp	r4, #0
   113f8:	beq	1136c <print_enum@@Base+0x11c>
   113fc:	ldr	r3, [r4]
   11400:	sub	r3, r4, r3
   11404:	ldrh	r2, [r3]
   11408:	cmp	r2, #5
   1140c:	bls	11388 <print_enum@@Base+0x138>
   11410:	ldrh	r3, [r3, #4]
   11414:	cmp	r3, #0
   11418:	beq	11388 <print_enum@@Base+0x138>
   1141c:	add	r1, r4, r3
   11420:	ldr	r3, [r4, r3]
   11424:	add	r3, r3, #4
   11428:	add	r1, r1, r3
   1142c:	mov	r0, r9
   11430:	bl	10864 <printf@plt>
   11434:	ldr	r3, [r4]
   11438:	sub	r3, r4, r3
   1143c:	ldrh	r2, [r3]
   11440:	cmp	r2, #7
   11444:	bhi	113a4 <print_enum@@Base+0x154>
   11448:	ldr	r3, [r4]
   1144c:	sub	r3, r4, r3
   11450:	ldrh	r2, [r3]
   11454:	cmp	r2, #9
   11458:	bls	113c4 <print_enum@@Base+0x174>
   1145c:	ldrh	r3, [r3, #8]
   11460:	cmp	r3, #0
   11464:	beq	113c4 <print_enum@@Base+0x174>
   11468:	mov	r0, sl
   1146c:	bl	10864 <printf@plt>
   11470:	ldr	r3, [r4]
   11474:	sub	r3, r4, r3
   11478:	ldrh	r2, [r3]
   1147c:	cmp	r2, #9
   11480:	movls	r0, #0
   11484:	bls	113c0 <print_enum@@Base+0x170>
   11488:	ldrh	r3, [r3, #8]
   1148c:	cmp	r3, #0
   11490:	addne	r0, r4, r3
   11494:	ldrne	r3, [r4, r3]
   11498:	addne	r0, r0, r3
   1149c:	moveq	r0, #0
   114a0:	b	113c0 <print_enum@@Base+0x170>
   114a4:	mov	r0, #93	; 0x5d
   114a8:	bl	10900 <putchar@plt>
   114ac:	ldr	r3, [r8]
   114b0:	sub	r3, r8, r3
   114b4:	ldrh	r2, [r3]
   114b8:	cmp	r2, #9
   114bc:	bls	114cc <print_enum@@Base+0x27c>
   114c0:	ldrh	r3, [r3, #8]
   114c4:	cmp	r3, #0
   114c8:	bne	1152c <print_enum@@Base+0x2dc>
   114cc:	movw	r0, #8004	; 0x1f44
   114d0:	movt	r0, #1
   114d4:	bl	10864 <printf@plt>
   114d8:	ldr	r3, [r8]
   114dc:	sub	r3, r8, r3
   114e0:	ldrh	r2, [r3]
   114e4:	cmp	r2, #11
   114e8:	bls	1155c <print_enum@@Base+0x30c>
   114ec:	ldrh	r3, [r3, #10]
   114f0:	cmp	r3, #0
   114f4:	beq	1155c <print_enum@@Base+0x30c>
   114f8:	add	r0, r8, r3
   114fc:	ldr	r3, [r8, r3]
   11500:	add	r0, r0, r3
   11504:	bl	10a2c <print_type@@Base>
   11508:	mov	r0, #125	; 0x7d
   1150c:	bl	10900 <putchar@plt>
   11510:	add	sp, sp, #4
   11514:	ldrd	r4, [sp]
   11518:	ldrd	r6, [sp, #8]
   1151c:	ldrd	r8, [sp, #16]
   11520:	ldrd	sl, [sp, #24]
   11524:	add	sp, sp, #32
   11528:	pop	{pc}		; (ldr pc, [sp], #4)
   1152c:	ldrb	r1, [r8, r3]
   11530:	movw	r2, #7652	; 0x1de4
   11534:	movt	r2, #1
   11538:	movw	r3, #7660	; 0x1dec
   1153c:	movt	r3, #1
   11540:	cmp	r1, #0
   11544:	movne	r1, r2
   11548:	moveq	r1, r3
   1154c:	movw	r0, #7988	; 0x1f34
   11550:	movt	r0, #1
   11554:	bl	10864 <printf@plt>
   11558:	b	114cc <print_enum@@Base+0x27c>
   1155c:	ldr	r3, [pc, #32]	; 11584 <print_enum@@Base+0x334>
   11560:	mov	r2, #185	; 0xb9
   11564:	movw	r1, #7468	; 0x1d2c
   11568:	movt	r1, #1
   1156c:	movw	r0, #7668	; 0x1df4
   11570:	movt	r0, #1
   11574:	bl	10930 <__assert_fail@plt>
   11578:	ldrdeq	r1, [r1], -ip
   1157c:	strdeq	r1, [r1], -r4
   11580:	andeq	r1, r1, ip, lsl #24
   11584:	andeq	r1, r1, r4, lsr #24

00011588 <print_schema@@Base>:
   11588:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1158c:	strd	r6, [sp, #8]
   11590:	str	r8, [sp, #16]
   11594:	str	lr, [sp, #20]
   11598:	subs	r7, r0, #0
   1159c:	beq	115f4 <print_schema@@Base+0x6c>
   115a0:	ldr	r3, [r7]
   115a4:	sub	r3, r7, r3
   115a8:	ldrh	r2, [r3]
   115ac:	cmp	r2, #5
   115b0:	bls	11610 <print_schema@@Base+0x88>
   115b4:	ldrh	r3, [r3, #4]
   115b8:	cmp	r3, #0
   115bc:	beq	11610 <print_schema@@Base+0x88>
   115c0:	add	r5, r7, r3
   115c4:	ldr	r4, [r7, r3]
   115c8:	add	r6, r4, #4
   115cc:	add	r6, r5, r6
   115d0:	mov	r0, #123	; 0x7b
   115d4:	bl	10900 <putchar@plt>
   115d8:	movw	r0, #8024	; 0x1f58
   115dc:	movt	r0, #1
   115e0:	bl	10864 <printf@plt>
   115e4:	add	r5, r5, r4
   115e8:	mov	r4, #0
   115ec:	mov	r8, #44	; 0x2c
   115f0:	b	11654 <print_schema@@Base+0xcc>
   115f4:	ldr	r3, [pc, #616]	; 11864 <print_schema@@Base+0x2dc>
   115f8:	mov	r2, #237	; 0xed
   115fc:	movw	r1, #7468	; 0x1d2c
   11600:	movt	r1, #1
   11604:	movw	r0, #7564	; 0x1d8c
   11608:	movt	r0, #1
   1160c:	bl	10930 <__assert_fail@plt>
   11610:	ldr	r3, [pc, #588]	; 11864 <print_schema@@Base+0x2dc>
   11614:	mov	r2, #237	; 0xed
   11618:	movw	r1, #7468	; 0x1d2c
   1161c:	movt	r1, #1
   11620:	movw	r0, #7668	; 0x1df4
   11624:	movt	r0, #1
   11628:	bl	10930 <__assert_fail@plt>
   1162c:	mov	r0, r8
   11630:	bl	10900 <putchar@plt>
   11634:	add	r5, r5, #4
   11638:	ldr	r3, [r6, #-4]
   1163c:	cmp	r4, r3
   11640:	bcs	11674 <print_schema@@Base+0xec>
   11644:	ldr	r0, [r5]
   11648:	add	r0, r5, r0
   1164c:	bl	10dfc <print_object@@Base>
   11650:	add	r4, r4, #1
   11654:	cmp	r6, #0
   11658:	beq	11690 <print_schema@@Base+0x108>
   1165c:	ldr	r3, [r6, #-4]
   11660:	cmp	r4, r3
   11664:	bcs	11690 <print_schema@@Base+0x108>
   11668:	cmp	r4, #0
   1166c:	beq	11634 <print_schema@@Base+0xac>
   11670:	b	1162c <print_schema@@Base+0xa4>
   11674:	ldr	r3, [pc, #492]	; 11868 <print_schema@@Base+0x2e0>
   11678:	mov	r2, #215	; 0xd7
   1167c:	movw	r1, #7468	; 0x1d2c
   11680:	movt	r1, #1
   11684:	movw	r0, #7732	; 0x1e34
   11688:	movt	r0, #1
   1168c:	bl	10930 <__assert_fail@plt>
   11690:	mov	r0, #93	; 0x5d
   11694:	bl	10900 <putchar@plt>
   11698:	ldr	r3, [r7]
   1169c:	sub	r3, r7, r3
   116a0:	ldrh	r2, [r3]
   116a4:	cmp	r2, #7
   116a8:	bls	116e4 <print_schema@@Base+0x15c>
   116ac:	ldrh	r3, [r3, #6]
   116b0:	cmp	r3, #0
   116b4:	beq	116e4 <print_schema@@Base+0x15c>
   116b8:	add	r5, r7, r3
   116bc:	ldr	r4, [r7, r3]
   116c0:	add	r6, r4, #4
   116c4:	add	r6, r5, r6
   116c8:	movw	r0, #8036	; 0x1f64
   116cc:	movt	r0, #1
   116d0:	bl	10864 <printf@plt>
   116d4:	add	r5, r5, r4
   116d8:	mov	r4, #0
   116dc:	mov	r8, #44	; 0x2c
   116e0:	b	11728 <print_schema@@Base+0x1a0>
   116e4:	ldr	r3, [pc, #384]	; 1186c <print_schema@@Base+0x2e4>
   116e8:	mov	r2, #238	; 0xee
   116ec:	movw	r1, #7468	; 0x1d2c
   116f0:	movt	r1, #1
   116f4:	movw	r0, #7668	; 0x1df4
   116f8:	movt	r0, #1
   116fc:	bl	10930 <__assert_fail@plt>
   11700:	mov	r0, r8
   11704:	bl	10900 <putchar@plt>
   11708:	add	r5, r5, #4
   1170c:	ldr	r3, [r6, #-4]
   11710:	cmp	r4, r3
   11714:	bcs	11748 <print_schema@@Base+0x1c0>
   11718:	ldr	r0, [r5]
   1171c:	add	r0, r5, r0
   11720:	bl	11250 <print_enum@@Base>
   11724:	add	r4, r4, #1
   11728:	cmp	r6, #0
   1172c:	beq	11764 <print_schema@@Base+0x1dc>
   11730:	ldr	r3, [r6, #-4]
   11734:	cmp	r4, r3
   11738:	bcs	11764 <print_schema@@Base+0x1dc>
   1173c:	cmp	r4, #0
   11740:	beq	11708 <print_schema@@Base+0x180>
   11744:	b	11700 <print_schema@@Base+0x178>
   11748:	ldr	r3, [pc, #288]	; 11870 <print_schema@@Base+0x2e8>
   1174c:	mov	r2, #174	; 0xae
   11750:	movw	r1, #7468	; 0x1d2c
   11754:	movt	r1, #1
   11758:	movw	r0, #7732	; 0x1e34
   1175c:	movt	r0, #1
   11760:	bl	10930 <__assert_fail@plt>
   11764:	mov	r0, #93	; 0x5d
   11768:	bl	10900 <putchar@plt>
   1176c:	ldr	r3, [r7]
   11770:	sub	r3, r7, r3
   11774:	ldrh	r2, [r3]
   11778:	cmp	r2, #9
   1177c:	bls	117a8 <print_schema@@Base+0x220>
   11780:	ldrh	r3, [r3, #8]
   11784:	cmp	r3, #0
   11788:	beq	117a8 <print_schema@@Base+0x220>
   1178c:	add	r1, r7, r3
   11790:	ldr	r3, [r7, r3]
   11794:	add	r3, r3, #4
   11798:	add	r1, r1, r3
   1179c:	movw	r0, #8048	; 0x1f70
   117a0:	movt	r0, #1
   117a4:	bl	10864 <printf@plt>
   117a8:	ldr	r3, [r7]
   117ac:	sub	r3, r7, r3
   117b0:	ldrh	r2, [r3]
   117b4:	cmp	r2, #11
   117b8:	bls	117e4 <print_schema@@Base+0x25c>
   117bc:	ldrh	r3, [r3, #10]
   117c0:	cmp	r3, #0
   117c4:	beq	117e4 <print_schema@@Base+0x25c>
   117c8:	add	r1, r7, r3
   117cc:	ldr	r3, [r7, r3]
   117d0:	add	r3, r3, #4
   117d4:	add	r1, r1, r3
   117d8:	movw	r0, #8068	; 0x1f84
   117dc:	movt	r0, #1
   117e0:	bl	10864 <printf@plt>
   117e4:	ldr	r3, [r7]
   117e8:	sub	r3, r7, r3
   117ec:	ldrh	r2, [r3]
   117f0:	cmp	r2, #13
   117f4:	bls	11844 <print_schema@@Base+0x2bc>
   117f8:	ldrh	r3, [r3, #12]
   117fc:	cmp	r3, #0
   11800:	beq	11844 <print_schema@@Base+0x2bc>
   11804:	movw	r0, #8088	; 0x1f98
   11808:	movt	r0, #1
   1180c:	bl	10864 <printf@plt>
   11810:	ldr	r3, [r7]
   11814:	sub	r3, r7, r3
   11818:	ldrh	r2, [r3]
   1181c:	cmp	r2, #13
   11820:	movls	r0, #0
   11824:	bls	11840 <print_schema@@Base+0x2b8>
   11828:	ldrh	r3, [r3, #12]
   1182c:	cmp	r3, #0
   11830:	addne	r0, r7, r3
   11834:	ldrne	r3, [r7, r3]
   11838:	addne	r0, r0, r3
   1183c:	moveq	r0, #0
   11840:	bl	10dfc <print_object@@Base>
   11844:	movw	r0, #8104	; 0x1fa8
   11848:	movt	r0, #1
   1184c:	bl	108b8 <puts@plt>
   11850:	ldrd	r4, [sp]
   11854:	ldrd	r6, [sp, #8]
   11858:	ldr	r8, [sp, #16]
   1185c:	add	sp, sp, #20
   11860:	pop	{pc}		; (ldr pc, [sp], #4)
   11864:	andeq	r1, r1, r4, asr #24
   11868:	andeq	r1, r1, r0, ror #24
   1186c:	andeq	r1, r1, ip, ror ip
   11870:	muleq	r1, r4, ip

00011874 <load_and_dump_schema@@Base>:
   11874:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11878:	strd	r6, [sp, #8]
   1187c:	strd	r8, [sp, #16]
   11880:	str	sl, [sp, #24]
   11884:	str	lr, [sp, #28]
   11888:	mov	r9, r0
   1188c:	movw	r1, #8108	; 0x1fac
   11890:	movt	r1, #1
   11894:	bl	10870 <fopen@plt>
   11898:	subs	r5, r0, #0
   1189c:	beq	11a28 <load_and_dump_schema@@Base+0x1b4>
   118a0:	mov	r2, #2
   118a4:	mov	r1, #0
   118a8:	mov	r0, r5
   118ac:	bl	10918 <fseek@plt>
   118b0:	mov	r0, r5
   118b4:	bl	10888 <ftell@plt>
   118b8:	mov	r6, r0
   118bc:	movw	r3, #10000	; 0x2710
   118c0:	cmp	r0, r3
   118c4:	bhi	11a0c <load_and_dump_schema@@Base+0x198>
   118c8:	mov	r0, r5
   118cc:	bl	10894 <rewind@plt>
   118d0:	cmp	r6, #0
   118d4:	movne	r0, r6
   118d8:	moveq	r0, #1
   118dc:	bl	108c4 <malloc@plt>
   118e0:	subs	r4, r0, #0
   118e4:	beq	11a10 <load_and_dump_schema@@Base+0x19c>
   118e8:	mov	r7, #0
   118ec:	mov	r8, #1
   118f0:	mov	r3, r5
   118f4:	sub	r2, r6, r7
   118f8:	mov	r1, r8
   118fc:	add	r0, r4, r7
   11900:	bl	108ac <fread@plt>
   11904:	cmp	r0, #0
   11908:	beq	11914 <load_and_dump_schema@@Base+0xa0>
   1190c:	add	r7, r7, r0
   11910:	b	118f0 <load_and_dump_schema@@Base+0x7c>
   11914:	cmp	r6, r7
   11918:	bne	11a10 <load_and_dump_schema@@Base+0x19c>
   1191c:	mov	r0, r5
   11920:	bl	1090c <fclose@plt>
   11924:	cmp	r6, #11
   11928:	bls	1197c <load_and_dump_schema@@Base+0x108>
   1192c:	ldr	r3, [r4, #4]
   11930:	movw	r2, #17986	; 0x4642
   11934:	movt	r2, #21314	; 0x5342
   11938:	cmp	r3, r2
   1193c:	bne	119a0 <load_and_dump_schema@@Base+0x12c>
   11940:	ldr	r0, [r4]
   11944:	adds	r5, r4, r0
   11948:	beq	119a0 <load_and_dump_schema@@Base+0x12c>
   1194c:	mov	r0, r5
   11950:	bl	11588 <print_schema@@Base>
   11954:	mov	r5, #0
   11958:	mov	r0, r4
   1195c:	bl	1087c <free@plt>
   11960:	mov	r0, r5
   11964:	ldrd	r4, [sp]
   11968:	ldrd	r6, [sp, #8]
   1196c:	ldrd	r8, [sp, #16]
   11970:	ldr	sl, [sp, #24]
   11974:	add	sp, sp, #28
   11978:	pop	{pc}		; (ldr pc, [sp], #4)
   1197c:	movw	r3, #12384	; 0x3060
   11980:	movt	r3, #2
   11984:	mov	r2, r9
   11988:	movw	r1, #8112	; 0x1fb0
   1198c:	movt	r1, #1
   11990:	ldr	r0, [r3]
   11994:	bl	108f4 <fprintf@plt>
   11998:	mvn	r5, #0
   1199c:	b	11958 <load_and_dump_schema@@Base+0xe4>
   119a0:	movw	r2, #17986	; 0x4642
   119a4:	movt	r2, #21314	; 0x5342
   119a8:	ldr	r1, [r4, #8]
   119ac:	cmp	r1, r2
   119b0:	bne	119e4 <load_and_dump_schema@@Base+0x170>
   119b4:	add	r0, r3, #4
   119b8:	adds	r5, r4, r0
   119bc:	beq	119e4 <load_and_dump_schema@@Base+0x170>
   119c0:	movw	r3, #12384	; 0x3060
   119c4:	movt	r3, #2
   119c8:	ldr	r3, [r3]
   119cc:	mov	r2, #40	; 0x28
   119d0:	mov	r1, #1
   119d4:	movw	r0, #8144	; 0x1fd0
   119d8:	movt	r0, #1
   119dc:	bl	108a0 <fwrite@plt>
   119e0:	b	1194c <load_and_dump_schema@@Base+0xd8>
   119e4:	movw	r3, #12384	; 0x3060
   119e8:	movt	r3, #2
   119ec:	ldr	r3, [r3]
   119f0:	mov	r2, #27
   119f4:	mov	r1, #1
   119f8:	movw	r0, #8188	; 0x1ffc
   119fc:	movt	r0, #1
   11a00:	bl	108a0 <fwrite@plt>
   11a04:	mvn	r5, #0
   11a08:	b	11958 <load_and_dump_schema@@Base+0xe4>
   11a0c:	mov	r4, #0
   11a10:	mov	r0, r5
   11a14:	bl	1090c <fclose@plt>
   11a18:	cmp	r4, #0
   11a1c:	beq	11a28 <load_and_dump_schema@@Base+0x1b4>
   11a20:	mov	r0, r4
   11a24:	bl	1087c <free@plt>
   11a28:	movw	r3, #12384	; 0x3060
   11a2c:	movt	r3, #2
   11a30:	mov	r2, r9
   11a34:	movw	r1, #8216	; 0x2018
   11a38:	movt	r1, #1
   11a3c:	ldr	r0, [r3]
   11a40:	bl	108f4 <fprintf@plt>
   11a44:	mvn	r5, #0
   11a48:	b	11960 <load_and_dump_schema@@Base+0xec>

00011a4c <main@@Base>:
   11a4c:	str	r4, [sp, #-8]!
   11a50:	str	lr, [sp, #4]
   11a54:	cmp	r0, #2
   11a58:	bne	11a70 <main@@Base+0x24>
   11a5c:	ldr	r0, [r1, #4]
   11a60:	bl	11874 <load_and_dump_schema@@Base>
   11a64:	ldr	r4, [sp]
   11a68:	add	sp, sp, #4
   11a6c:	pop	{pc}		; (ldr pc, [sp], #4)
   11a70:	movw	r4, #12384	; 0x3060
   11a74:	movt	r4, #2
   11a78:	ldr	r3, [r4]
   11a7c:	mov	r2, #28
   11a80:	mov	r1, #1
   11a84:	movw	r0, #8260	; 0x2044
   11a88:	movt	r0, #1
   11a8c:	bl	108a0 <fwrite@plt>
   11a90:	ldr	r3, [r4]
   11a94:	mov	r2, #74	; 0x4a
   11a98:	mov	r1, #1
   11a9c:	movw	r0, #8292	; 0x2064
   11aa0:	movt	r0, #1
   11aa4:	bl	108a0 <fwrite@plt>
   11aa8:	ldr	r3, [r4]
   11aac:	mov	r2, #180	; 0xb4
   11ab0:	mov	r1, #1
   11ab4:	movw	r0, #8368	; 0x20b0
   11ab8:	movt	r0, #1
   11abc:	bl	108a0 <fwrite@plt>
   11ac0:	mvn	r0, #0
   11ac4:	bl	108e8 <exit@plt>

00011ac8 <__libc_csu_init@@Base>:
   11ac8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11acc:	mov	r7, r0
   11ad0:	ldr	r6, [pc, #72]	; 11b20 <__libc_csu_init@@Base+0x58>
   11ad4:	ldr	r5, [pc, #72]	; 11b24 <__libc_csu_init@@Base+0x5c>
   11ad8:	add	r6, pc, r6
   11adc:	add	r5, pc, r5
   11ae0:	sub	r6, r6, r5
   11ae4:	mov	r8, r1
   11ae8:	mov	r9, r2
   11aec:	bl	10844 <printf@plt-0x20>
   11af0:	asrs	r6, r6, #2
   11af4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11af8:	mov	r4, #0
   11afc:	add	r4, r4, #1
   11b00:	ldr	r3, [r5], #4
   11b04:	mov	r2, r9
   11b08:	mov	r1, r8
   11b0c:	mov	r0, r7
   11b10:	blx	r3
   11b14:	cmp	r6, r4
   11b18:	bne	11afc <__libc_csu_init@@Base+0x34>
   11b1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b20:	andeq	r1, r1, r4, lsr r4
   11b24:	andeq	r1, r1, ip, lsr #8

00011b28 <__libc_csu_fini@@Base>:
   11b28:	bx	lr

Disassembly of section .fini:

00011b2c <.fini>:
   11b2c:	push	{r3, lr}
   11b30:	pop	{r3, pc}
