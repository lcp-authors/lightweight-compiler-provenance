
../repos/charybdis/extensions/.libs/ip_cloaking_3.0.so:     file format elf32-littlearm


Disassembly of section .init:

00000640 <_init>:
 640:	push	{r3, lr}
 644:	bl	72c <call_weak_fn>
 648:	pop	{r3, pc}

Disassembly of section .plt:

0000064c <.plt>:
 64c:	push	{lr}		; (str lr, [sp, #-4]!)
 650:	ldr	lr, [pc, #4]	; 65c <.plt+0x10>
 654:	add	lr, pc, lr
 658:	ldr	pc, [lr, #8]!
 65c:	.word	0x000119a4

00000660 <calloc@plt>:
 660:	add	ip, pc, #0, 12
 664:	add	ip, ip, #69632	; 0x11000
 668:	ldr	pc, [ip, #2468]!	; 0x9a4

0000066c <strcmp@plt>:
 66c:	add	ip, pc, #0, 12
 670:	add	ip, ip, #69632	; 0x11000
 674:	ldr	pc, [ip, #2460]!	; 0x99c

00000678 <__cxa_finalize@plt>:
 678:	add	ip, pc, #0, 12
 67c:	add	ip, ip, #69632	; 0x11000
 680:	ldr	pc, [ip, #2452]!	; 0x994

00000684 <rb_outofmemory@plt>:
 684:	add	ip, pc, #0, 12
 688:	add	ip, ip, #69632	; 0x11000
 68c:	ldr	pc, [ip, #2444]!	; 0x98c

00000690 <find_umode_slot@plt>:
 690:	add	ip, pc, #0, 12
 694:	add	ip, ip, #69632	; 0x11000
 698:	ldr	pc, [ip, #2436]!	; 0x984

0000069c <sendto_server@plt>:
 69c:	add	ip, pc, #0, 12
 6a0:	add	ip, ip, #69632	; 0x11000
 6a4:	ldr	pc, [ip, #2428]!	; 0x97c

000006a8 <__gmon_start__@plt>:
 6a8:	add	ip, pc, #0, 12
 6ac:	add	ip, ip, #69632	; 0x11000
 6b0:	ldr	pc, [ip, #2420]!	; 0x974

000006b4 <__ctype_b_loc@plt>:
 6b4:	add	ip, pc, #0, 12
 6b8:	add	ip, ip, #69632	; 0x11000
 6bc:	ldr	pc, [ip, #2412]!	; 0x96c

000006c0 <sendto_one_numeric@plt>:
 6c0:	add	ip, pc, #0, 12
 6c4:	add	ip, ip, #69632	; 0x11000
 6c8:	ldr	pc, [ip, #2404]!	; 0x964

000006cc <snprintf@plt>:
 6cc:	add	ip, pc, #0, 12
 6d0:	add	ip, ip, #69632	; 0x11000
 6d4:	ldr	pc, [ip, #2396]!	; 0x95c

000006d8 <memset@plt>:
 6d8:	add	ip, pc, #0, 12
 6dc:	add	ip, ip, #69632	; 0x11000
 6e0:	ldr	pc, [ip, #2388]!	; 0x954

000006e4 <strncpy@plt>:
 6e4:	add	ip, pc, #0, 12
 6e8:	add	ip, ip, #69632	; 0x11000
 6ec:	ldr	pc, [ip, #2380]!	; 0x94c

000006f0 <strrchr@plt>:
 6f0:	add	ip, pc, #0, 12
 6f4:	add	ip, ip, #69632	; 0x11000
 6f8:	ldr	pc, [ip, #2372]!	; 0x944

000006fc <change_nick_user_host@plt>:
 6fc:	add	ip, pc, #0, 12
 700:	add	ip, ip, #69632	; 0x11000
 704:	ldr	pc, [ip, #2364]!	; 0x93c

00000708 <rb_strlcpy@plt>:
 708:	add	ip, pc, #0, 12
 70c:	add	ip, ip, #69632	; 0x11000
 710:	ldr	pc, [ip, #2356]!	; 0x934

00000714 <irccmp@plt>:
 714:	add	ip, pc, #0, 12
 718:	add	ip, ip, #69632	; 0x11000
 71c:	ldr	pc, [ip, #2348]!	; 0x92c

00000720 <construct_umodebuf@plt>:
 720:	add	ip, pc, #0, 12
 724:	add	ip, ip, #69632	; 0x11000
 728:	ldr	pc, [ip, #2340]!	; 0x924

Disassembly of section .text:

0000072c <call_weak_fn>:
     72c:	ldr	r3, [pc, #20]	; 748 <call_weak_fn+0x1c>
     730:	ldr	r2, [pc, #20]	; 74c <call_weak_fn+0x20>
     734:	add	r3, pc, r3
     738:	ldr	r2, [r3, r2]
     73c:	cmp	r2, #0
     740:	bxeq	lr
     744:	b	6a8 <__gmon_start__@plt>
     748:	.word	0x000118c4
     74c:	.word	0x00000060

00000750 <deregister_tm_clones>:
     750:	ldr	r3, [pc, #52]	; 78c <deregister_tm_clones+0x3c>
     754:	ldr	r0, [pc, #52]	; 790 <deregister_tm_clones+0x40>
     758:	add	r3, pc, r3
     75c:	add	r0, pc, r0
     760:	add	r3, r3, #3
     764:	sub	r3, r3, r0
     768:	cmp	r3, #6
     76c:	ldr	r3, [pc, #32]	; 794 <deregister_tm_clones+0x44>
     770:	add	r3, pc, r3
     774:	bxls	lr
     778:	ldr	r2, [pc, #24]	; 798 <deregister_tm_clones+0x48>
     77c:	ldr	r3, [r3, r2]
     780:	cmp	r3, #0
     784:	bxeq	lr
     788:	bx	r3
     78c:	.word	0x00011964
     790:	.word	0x00011960
     794:	.word	0x00011888
     798:	.word	0x00000054

0000079c <register_tm_clones>:
     79c:	ldr	r1, [pc, #56]	; 7dc <register_tm_clones+0x40>
     7a0:	ldr	r0, [pc, #56]	; 7e0 <register_tm_clones+0x44>
     7a4:	add	r1, pc, r1
     7a8:	add	r0, pc, r0
     7ac:	sub	r1, r1, r0
     7b0:	ldr	r3, [pc, #44]	; 7e4 <register_tm_clones+0x48>
     7b4:	asr	r1, r1, #2
     7b8:	add	r3, pc, r3
     7bc:	add	r1, r1, r1, lsr #31
     7c0:	asrs	r1, r1, #1
     7c4:	bxeq	lr
     7c8:	ldr	r2, [pc, #24]	; 7e8 <register_tm_clones+0x4c>
     7cc:	ldr	r3, [r3, r2]
     7d0:	cmp	r3, #0
     7d4:	bxeq	lr
     7d8:	bx	r3
     7dc:	.word	0x00011918
     7e0:	.word	0x00011914
     7e4:	.word	0x00011840
     7e8:	.word	0x0000006c

000007ec <__do_global_dtors_aux>:
     7ec:	ldr	r3, [pc, #76]	; 840 <__do_global_dtors_aux+0x54>
     7f0:	ldr	r2, [pc, #76]	; 844 <__do_global_dtors_aux+0x58>
     7f4:	add	r3, pc, r3
     7f8:	add	r2, pc, r2
     7fc:	ldrb	r3, [r3]
     800:	cmp	r3, #0
     804:	bxne	lr
     808:	ldr	r3, [pc, #56]	; 848 <__do_global_dtors_aux+0x5c>
     80c:	push	{r4, lr}
     810:	ldr	r3, [r2, r3]
     814:	cmp	r3, #0
     818:	beq	828 <__do_global_dtors_aux+0x3c>
     81c:	ldr	r3, [pc, #40]	; 84c <__do_global_dtors_aux+0x60>
     820:	ldr	r0, [pc, r3]
     824:	bl	678 <__cxa_finalize@plt>
     828:	bl	750 <deregister_tm_clones>
     82c:	ldr	r3, [pc, #28]	; 850 <__do_global_dtors_aux+0x64>
     830:	mov	r2, #1
     834:	add	r3, pc, r3
     838:	strb	r2, [r3]
     83c:	pop	{r4, pc}
     840:	.word	0x000118c8
     844:	.word	0x00011800
     848:	.word	0x00000050
     84c:	.word	0x0001184c
     850:	.word	0x00011888

00000854 <frame_dummy>:
     854:	ldr	r0, [pc, #56]	; 894 <frame_dummy+0x40>
     858:	ldr	r3, [pc, #56]	; 898 <frame_dummy+0x44>
     85c:	add	r0, pc, r0
     860:	ldr	r2, [r0]
     864:	add	r3, pc, r3
     868:	cmp	r2, #0
     86c:	bne	874 <frame_dummy+0x20>
     870:	b	79c <register_tm_clones>
     874:	ldr	r2, [pc, #32]	; 89c <frame_dummy+0x48>
     878:	ldr	r3, [r3, r2]
     87c:	cmp	r3, #0
     880:	beq	870 <frame_dummy+0x1c>
     884:	push	{r4, lr}
     888:	blx	r3
     88c:	pop	{r4, lr}
     890:	b	79c <register_tm_clones>
     894:	.word	0x00011698
     898:	.word	0x00011794
     89c:	.word	0x00000068

000008a0 <rb_malloc>:
     8a0:	push	{fp, lr}
     8a4:	add	fp, sp, #4
     8a8:	sub	sp, sp, #16
     8ac:	str	r0, [fp, #-16]
     8b0:	ldr	r1, [fp, #-16]
     8b4:	mov	r0, #1
     8b8:	bl	660 <calloc@plt>
     8bc:	mov	r3, r0
     8c0:	str	r3, [fp, #-8]
     8c4:	ldr	r3, [fp, #-8]
     8c8:	cmp	r3, #0
     8cc:	moveq	r3, #1
     8d0:	movne	r3, #0
     8d4:	uxtb	r3, r3
     8d8:	cmp	r3, #0
     8dc:	beq	8e4 <rb_malloc+0x44>
     8e0:	bl	684 <rb_outofmemory@plt>
     8e4:	ldr	r3, [fp, #-8]
     8e8:	mov	r0, r3
     8ec:	sub	sp, fp, #4
     8f0:	pop	{fp, pc}

000008f4 <_modinit>:
     8f4:	push	{r4, r5, fp, lr}
     8f8:	add	fp, sp, #12
     8fc:	ldr	r4, [pc, #40]	; 92c <_modinit+0x38>
     900:	add	r4, pc, r4
     904:	bl	690 <find_umode_slot@plt>
     908:	mov	r3, r0
     90c:	mov	r2, r3
     910:	ldr	r3, [pc, #24]	; 930 <_modinit+0x3c>
     914:	ldr	r3, [r4, r3]
     918:	str	r2, [r3, #416]	; 0x1a0
     91c:	bl	720 <construct_umodebuf@plt>
     920:	mov	r3, #0
     924:	mov	r0, r3
     928:	pop	{r4, r5, fp, pc}
     92c:	.word	0x000116f8
     930:	.word	0x0000005c

00000934 <_moddeinit>:
     934:	push	{fp, lr}
     938:	add	fp, sp, #4
     93c:	ldr	r2, [pc, #28]	; 960 <_moddeinit+0x2c>
     940:	add	r2, pc, r2
     944:	ldr	r3, [pc, #24]	; 964 <_moddeinit+0x30>
     948:	ldr	r3, [r2, r3]
     94c:	mov	r2, #0
     950:	str	r2, [r3, #416]	; 0x1a0
     954:	bl	720 <construct_umodebuf@plt>
     958:	nop			; (mov r0, r0)
     95c:	pop	{fp, pc}
     960:	.word	0x000116b8
     964:	.word	0x0000005c

00000968 <distribute_hostchange>:
     968:	push	{r4, fp, lr}
     96c:	add	fp, sp, #8
     970:	sub	sp, sp, #28
     974:	str	r0, [fp, #-16]
     978:	str	r1, [fp, #-20]	; 0xffffffec
     97c:	ldr	r4, [pc, #536]	; b9c <distribute_hostchange+0x234>
     980:	add	r4, pc, r4
     984:	ldr	r3, [fp, #-16]
     988:	add	r2, r3, #227	; 0xe3
     98c:	ldr	r3, [fp, #-20]	; 0xffffffec
     990:	cmp	r2, r3
     994:	beq	9b4 <distribute_hostchange+0x4c>
     998:	ldr	r3, [fp, #-20]	; 0xffffffec
     99c:	ldr	r2, [pc, #508]	; ba0 <distribute_hostchange+0x238>
     9a0:	add	r2, pc, r2
     9a4:	mov	r1, #396	; 0x18c
     9a8:	ldr	r0, [fp, #-16]
     9ac:	bl	6c0 <sendto_one_numeric@plt>
     9b0:	b	9cc <distribute_hostchange+0x64>
     9b4:	ldr	r3, [fp, #-20]	; 0xffffffec
     9b8:	ldr	r2, [pc, #484]	; ba4 <distribute_hostchange+0x23c>
     9bc:	add	r2, pc, r2
     9c0:	mov	r1, #396	; 0x18c
     9c4:	ldr	r0, [fp, #-16]
     9c8:	bl	6c0 <sendto_one_numeric@plt>
     9cc:	ldr	r3, [pc, #468]	; ba8 <distribute_hostchange+0x240>
     9d0:	ldr	r3, [r4, r3]
     9d4:	ldr	r2, [r3]
     9d8:	ldr	r3, [pc, #460]	; bac <distribute_hostchange+0x244>
     9dc:	ldr	r3, [r4, r3]
     9e0:	ldr	r3, [r3]
     9e4:	orr	r0, r2, r3
     9e8:	ldr	r3, [pc, #448]	; bb0 <distribute_hostchange+0x248>
     9ec:	ldr	r3, [r4, r3]
     9f0:	ldrb	r3, [r3, #396]	; 0x18c
     9f4:	cmp	r3, #0
     9f8:	beq	a0c <distribute_hostchange+0xa4>
     9fc:	ldr	r3, [pc, #428]	; bb0 <distribute_hostchange+0x248>
     a00:	ldr	r3, [r4, r3]
     a04:	add	r3, r3, #396	; 0x18c
     a08:	b	a18 <distribute_hostchange+0xb0>
     a0c:	ldr	r3, [pc, #412]	; bb0 <distribute_hostchange+0x248>
     a10:	ldr	r3, [r4, r3]
     a14:	add	r3, r3, #88	; 0x58
     a18:	ldr	r2, [fp, #-16]
     a1c:	ldrb	r2, [r2, #396]	; 0x18c
     a20:	cmp	r2, #0
     a24:	beq	a34 <distribute_hostchange+0xcc>
     a28:	ldr	r2, [fp, #-16]
     a2c:	add	r2, r2, #396	; 0x18c
     a30:	b	a3c <distribute_hostchange+0xd4>
     a34:	ldr	r2, [fp, #-16]
     a38:	add	r2, r2, #88	; 0x58
     a3c:	ldr	r1, [fp, #-20]	; 0xffffffec
     a40:	str	r1, [sp, #12]
     a44:	str	r2, [sp, #8]
     a48:	str	r3, [sp, #4]
     a4c:	ldr	r3, [pc, #352]	; bb4 <distribute_hostchange+0x24c>
     a50:	add	r3, pc, r3
     a54:	str	r3, [sp]
     a58:	mov	r3, #0
     a5c:	mov	r2, r0
     a60:	mov	r1, #0
     a64:	mov	r0, #0
     a68:	bl	69c <sendto_server@plt>
     a6c:	ldr	r3, [pc, #312]	; bac <distribute_hostchange+0x244>
     a70:	ldr	r3, [r4, r3]
     a74:	ldr	r0, [r3]
     a78:	ldr	r3, [pc, #296]	; ba8 <distribute_hostchange+0x240>
     a7c:	ldr	r3, [r4, r3]
     a80:	ldr	ip, [r3]
     a84:	ldr	r3, [pc, #292]	; bb0 <distribute_hostchange+0x248>
     a88:	ldr	r3, [r4, r3]
     a8c:	ldrb	r3, [r3, #396]	; 0x18c
     a90:	cmp	r3, #0
     a94:	beq	aa8 <distribute_hostchange+0x140>
     a98:	ldr	r3, [pc, #272]	; bb0 <distribute_hostchange+0x248>
     a9c:	ldr	r3, [r4, r3]
     aa0:	add	r3, r3, #396	; 0x18c
     aa4:	b	ab4 <distribute_hostchange+0x14c>
     aa8:	ldr	r3, [pc, #256]	; bb0 <distribute_hostchange+0x248>
     aac:	ldr	r3, [r4, r3]
     ab0:	add	r3, r3, #88	; 0x58
     ab4:	ldr	r2, [fp, #-16]
     ab8:	ldrb	r2, [r2, #396]	; 0x18c
     abc:	cmp	r2, #0
     ac0:	beq	ad0 <distribute_hostchange+0x168>
     ac4:	ldr	r2, [fp, #-16]
     ac8:	add	r2, r2, #396	; 0x18c
     acc:	b	ad8 <distribute_hostchange+0x170>
     ad0:	ldr	r2, [fp, #-16]
     ad4:	add	r2, r2, #88	; 0x58
     ad8:	ldr	r1, [fp, #-20]	; 0xffffffec
     adc:	str	r1, [sp, #12]
     ae0:	str	r2, [sp, #8]
     ae4:	str	r3, [sp, #4]
     ae8:	ldr	r3, [pc, #200]	; bb8 <distribute_hostchange+0x250>
     aec:	add	r3, pc, r3
     af0:	str	r3, [sp]
     af4:	mov	r3, ip
     af8:	mov	r2, r0
     afc:	mov	r1, #0
     b00:	mov	r0, #0
     b04:	bl	69c <sendto_server@plt>
     b08:	ldr	r3, [fp, #-16]
     b0c:	add	r1, r3, #88	; 0x58
     b10:	ldr	r3, [fp, #-16]
     b14:	add	r2, r3, #152	; 0x98
     b18:	ldr	r3, [pc, #156]	; bbc <distribute_hostchange+0x254>
     b1c:	add	r3, pc, r3
     b20:	str	r3, [sp, #4]
     b24:	mov	r3, #0
     b28:	str	r3, [sp]
     b2c:	ldr	r3, [fp, #-20]	; 0xffffffec
     b30:	ldr	r0, [fp, #-16]
     b34:	bl	6fc <change_nick_user_host@plt>
     b38:	ldr	r3, [fp, #-16]
     b3c:	add	r2, r3, #227	; 0xe3
     b40:	ldr	r3, [fp, #-20]	; 0xffffffec
     b44:	cmp	r2, r3
     b48:	beq	b70 <distribute_hostchange+0x208>
     b4c:	ldr	r3, [fp, #-16]
     b50:	ldrd	r2, [r3, #64]	; 0x40
     b54:	mov	r0, #131072	; 0x20000
     b58:	mov	r1, #0
     b5c:	orr	r2, r2, r0
     b60:	orr	r3, r3, r1
     b64:	ldr	r1, [fp, #-16]
     b68:	strd	r2, [r1, #64]	; 0x40
     b6c:	b	b90 <distribute_hostchange+0x228>
     b70:	ldr	r3, [fp, #-16]
     b74:	ldrd	r2, [r3, #64]	; 0x40
     b78:	mvn	r0, #131072	; 0x20000
     b7c:	mvn	r1, #0
     b80:	and	r2, r2, r0
     b84:	and	r3, r3, r1
     b88:	ldr	r1, [fp, #-16]
     b8c:	strd	r2, [r1, #64]	; 0x40
     b90:	nop			; (mov r0, r0)
     b94:	sub	sp, fp, #8
     b98:	pop	{r4, fp, pc}
     b9c:	.word	0x00011678
     ba0:	.word	0x00000a78
     ba4:	.word	0x00000a78
     ba8:	.word	0x00000064
     bac:	.word	0x00000058
     bb0:	.word	0x00000070
     bb4:	.word	0x000009f8
     bb8:	.word	0x00000970
     bbc:	.word	0x0000095c

00000bc0 <get_string_entropy>:
     bc0:	push	{fp}		; (str fp, [sp, #-4]!)
     bc4:	add	fp, sp, #0
     bc8:	sub	sp, sp, #20
     bcc:	str	r0, [fp, #-16]
     bd0:	mov	r3, #1
     bd4:	str	r3, [fp, #-8]
     bd8:	b	bfc <get_string_entropy+0x3c>
     bdc:	ldr	r3, [fp, #-16]
     be0:	add	r2, r3, #1
     be4:	str	r2, [fp, #-16]
     be8:	ldrb	r3, [r3]
     bec:	mov	r2, r3
     bf0:	ldr	r3, [fp, #-8]
     bf4:	add	r3, r3, r2
     bf8:	str	r3, [fp, #-8]
     bfc:	ldr	r3, [fp, #-16]
     c00:	ldrb	r3, [r3]
     c04:	cmp	r3, #0
     c08:	bne	bdc <get_string_entropy+0x1c>
     c0c:	ldr	r3, [fp, #-8]
     c10:	mov	r0, r3
     c14:	add	sp, fp, #0
     c18:	pop	{fp}		; (ldr fp, [sp], #4)
     c1c:	bx	lr

00000c20 <get_string_weighted_entropy>:
     c20:	push	{fp, lr}
     c24:	add	fp, sp, #4
     c28:	sub	sp, sp, #16
     c2c:	str	r0, [fp, #-16]
     c30:	ldr	r0, [fp, #-16]
     c34:	bl	bc0 <get_string_entropy>
     c38:	str	r0, [fp, #-8]
     c3c:	ldr	r3, [pc, #88]	; c9c <get_string_weighted_entropy+0x7c>
     c40:	add	r3, pc, r3
     c44:	ldr	r3, [r3]
     c48:	cmp	r3, #0
     c4c:	bne	c74 <get_string_weighted_entropy+0x54>
     c50:	ldr	r3, [pc, #72]	; ca0 <get_string_weighted_entropy+0x80>
     c54:	add	r3, pc, r3
     c58:	mov	r0, r3
     c5c:	bl	bc0 <get_string_entropy>
     c60:	mov	r3, r0
     c64:	mov	r2, r3
     c68:	ldr	r3, [pc, #52]	; ca4 <get_string_weighted_entropy+0x84>
     c6c:	add	r3, pc, r3
     c70:	str	r2, [r3]
     c74:	ldr	r3, [fp, #-8]
     c78:	ldr	r2, [pc, #40]	; ca8 <get_string_weighted_entropy+0x88>
     c7c:	mul	r3, r2, r3
     c80:	ldr	r2, [pc, #36]	; cac <get_string_weighted_entropy+0x8c>
     c84:	add	r2, pc, r2
     c88:	ldr	r2, [r2]
     c8c:	eor	r3, r3, r2
     c90:	mov	r0, r3
     c94:	sub	sp, fp, #4
     c98:	pop	{fp, pc}
     c9c:	.word	0x00011480
     ca0:	.word	0x00000834
     ca4:	.word	0x00011454
     ca8:	.word	0x8c3a48ac
     cac:	.word	0x0001143c

00000cb0 <do_host_cloak_ip>:
     cb0:	push	{fp, lr}
     cb4:	add	fp, sp, #4
     cb8:	sub	sp, sp, #96	; 0x60
     cbc:	str	r0, [fp, #-88]	; 0xffffffa8
     cc0:	str	r1, [fp, #-92]	; 0xffffffa4
     cc4:	ldr	r0, [fp, #-88]	; 0xffffffa8
     cc8:	bl	c20 <get_string_weighted_entropy>
     ccc:	str	r0, [fp, #-16]
     cd0:	sub	r3, fp, #80	; 0x50
     cd4:	mov	r2, #64	; 0x40
     cd8:	mov	r1, #0
     cdc:	mov	r0, r3
     ce0:	bl	6d8 <memset@plt>
     ce4:	mov	r3, #0
     ce8:	str	r3, [fp, #-12]
     cec:	sub	r3, fp, #80	; 0x50
     cf0:	mov	r2, #63	; 0x3f
     cf4:	ldr	r1, [fp, #-88]	; 0xffffffa8
     cf8:	mov	r0, r3
     cfc:	bl	6e4 <strncpy@plt>
     d00:	sub	r3, fp, #80	; 0x50
     d04:	mov	r1, #46	; 0x2e
     d08:	mov	r0, r3
     d0c:	bl	6f0 <strrchr@plt>
     d10:	str	r0, [fp, #-8]
     d14:	ldr	r3, [fp, #-8]
     d18:	cmp	r3, #0
     d1c:	bne	d3c <do_host_cloak_ip+0x8c>
     d20:	sub	r3, fp, #80	; 0x50
     d24:	mov	r1, #58	; 0x3a
     d28:	mov	r0, r3
     d2c:	bl	6f0 <strrchr@plt>
     d30:	str	r0, [fp, #-8]
     d34:	mov	r3, #1
     d38:	str	r3, [fp, #-12]
     d3c:	ldr	r3, [fp, #-8]
     d40:	cmp	r3, #0
     d44:	bne	d5c <do_host_cloak_ip+0xac>
     d48:	mov	r2, #63	; 0x3f
     d4c:	ldr	r1, [fp, #-88]	; 0xffffffa8
     d50:	ldr	r0, [fp, #-92]	; 0xffffffa4
     d54:	bl	6e4 <strncpy@plt>
     d58:	b	dc8 <do_host_cloak_ip+0x118>
     d5c:	ldr	r3, [fp, #-8]
     d60:	add	r2, r3, #1
     d64:	str	r2, [fp, #-8]
     d68:	mov	r2, #0
     d6c:	strb	r2, [r3]
     d70:	ldr	r3, [fp, #-12]
     d74:	cmp	r3, #0
     d78:	beq	da4 <do_host_cloak_ip+0xf4>
     d7c:	sub	r2, fp, #80	; 0x50
     d80:	ldr	r3, [fp, #-16]
     d84:	str	r3, [sp]
     d88:	mov	r3, r2
     d8c:	ldr	r2, [pc, #60]	; dd0 <do_host_cloak_ip+0x120>
     d90:	add	r2, pc, r2
     d94:	mov	r1, #63	; 0x3f
     d98:	ldr	r0, [fp, #-92]	; 0xffffffa4
     d9c:	bl	6cc <snprintf@plt>
     da0:	b	dc8 <do_host_cloak_ip+0x118>
     da4:	sub	r2, fp, #80	; 0x50
     da8:	ldr	r3, [fp, #-16]
     dac:	str	r3, [sp]
     db0:	mov	r3, r2
     db4:	ldr	r2, [pc, #24]	; dd4 <do_host_cloak_ip+0x124>
     db8:	add	r2, pc, r2
     dbc:	mov	r1, #63	; 0x3f
     dc0:	ldr	r0, [fp, #-92]	; 0xffffffa4
     dc4:	bl	6cc <snprintf@plt>
     dc8:	sub	sp, fp, #4
     dcc:	pop	{fp, pc}
     dd0:	.word	0x00000724
     dd4:	.word	0x00000708

00000dd8 <do_host_cloak_host>:
     dd8:	push	{fp, lr}
     ddc:	add	fp, sp, #4
     de0:	sub	sp, sp, #48	; 0x30
     de4:	str	r0, [fp, #-48]	; 0xffffffd0
     de8:	str	r1, [fp, #-52]	; 0xffffffcc
     dec:	ldr	r3, [pc, #432]	; fa4 <do_host_cloak_host+0x1cc>
     df0:	add	r3, pc, r3
     df4:	sub	ip, fp, #40	; 0x28
     df8:	mov	lr, r3
     dfc:	ldm	lr!, {r0, r1, r2, r3}
     e00:	stmia	ip!, {r0, r1, r2, r3}
     e04:	ldm	lr, {r0, r1, r2}
     e08:	stmia	ip!, {r0, r1}
     e0c:	strh	r2, [ip]
     e10:	add	ip, ip, #2
     e14:	lsr	r3, r2, #16
     e18:	strb	r3, [ip]
     e1c:	ldr	r0, [fp, #-48]	; 0xffffffd0
     e20:	bl	c20 <get_string_weighted_entropy>
     e24:	str	r0, [fp, #-12]
     e28:	mov	r2, #63	; 0x3f
     e2c:	ldr	r1, [fp, #-48]	; 0xffffffd0
     e30:	ldr	r0, [fp, #-52]	; 0xffffffcc
     e34:	bl	6e4 <strncpy@plt>
     e38:	ldr	r3, [fp, #-52]	; 0xffffffcc
     e3c:	str	r3, [fp, #-8]
     e40:	b	ee4 <do_host_cloak_host+0x10c>
     e44:	ldr	r3, [fp, #-8]
     e48:	ldrb	r3, [r3]
     e4c:	cmp	r3, #46	; 0x2e
     e50:	beq	ef8 <do_host_cloak_host+0x120>
     e54:	bl	6b4 <__ctype_b_loc@plt>
     e58:	mov	r3, r0
     e5c:	ldr	r2, [r3]
     e60:	ldr	r3, [fp, #-8]
     e64:	ldrb	r3, [r3]
     e68:	lsl	r3, r3, #1
     e6c:	add	r3, r2, r3
     e70:	ldrh	r3, [r3]
     e74:	and	r3, r3, #2048	; 0x800
     e78:	cmp	r3, #0
     e7c:	bne	ed4 <do_host_cloak_host+0xfc>
     e80:	ldr	r3, [fp, #-8]
     e84:	ldrb	r3, [r3]
     e88:	cmp	r3, #45	; 0x2d
     e8c:	beq	ed4 <do_host_cloak_host+0xfc>
     e90:	ldr	r3, [fp, #-8]
     e94:	ldrb	r3, [r3]
     e98:	mov	r2, r3
     e9c:	ldr	r3, [fp, #-12]
     ea0:	mul	r2, r3, r2
     ea4:	ldr	r3, [pc, #252]	; fa8 <do_host_cloak_host+0x1d0>
     ea8:	umull	r1, r3, r3, r2
     eac:	lsr	r3, r3, #3
     eb0:	mov	r1, #26
     eb4:	mul	r3, r1, r3
     eb8:	sub	r3, r2, r3
     ebc:	sub	r2, fp, #4
     ec0:	add	r3, r2, r3
     ec4:	ldrb	r2, [r3, #-36]	; 0xffffffdc
     ec8:	ldr	r3, [fp, #-8]
     ecc:	strb	r2, [r3]
     ed0:	b	ed8 <do_host_cloak_host+0x100>
     ed4:	nop			; (mov r0, r0)
     ed8:	ldr	r3, [fp, #-8]
     edc:	add	r3, r3, #1
     ee0:	str	r3, [fp, #-8]
     ee4:	ldr	r3, [fp, #-8]
     ee8:	ldrb	r3, [r3]
     eec:	cmp	r3, #0
     ef0:	bne	e44 <do_host_cloak_host+0x6c>
     ef4:	b	efc <do_host_cloak_host+0x124>
     ef8:	nop			; (mov r0, r0)
     efc:	ldr	r3, [fp, #-52]	; 0xffffffcc
     f00:	str	r3, [fp, #-8]
     f04:	b	f88 <do_host_cloak_host+0x1b0>
     f08:	bl	6b4 <__ctype_b_loc@plt>
     f0c:	mov	r3, r0
     f10:	ldr	r2, [r3]
     f14:	ldr	r3, [fp, #-8]
     f18:	ldrb	r3, [r3]
     f1c:	lsl	r3, r3, #1
     f20:	add	r3, r2, r3
     f24:	ldrh	r3, [r3]
     f28:	and	r3, r3, #2048	; 0x800
     f2c:	cmp	r3, #0
     f30:	beq	f7c <do_host_cloak_host+0x1a4>
     f34:	ldr	r3, [fp, #-8]
     f38:	ldrb	r3, [r3]
     f3c:	mov	r2, r3
     f40:	ldr	r3, [fp, #-12]
     f44:	mul	r1, r3, r2
     f48:	ldr	r3, [pc, #92]	; fac <do_host_cloak_host+0x1d4>
     f4c:	umull	r2, r3, r3, r1
     f50:	lsr	r2, r3, #3
     f54:	mov	r3, r2
     f58:	lsl	r3, r3, #2
     f5c:	add	r3, r3, r2
     f60:	lsl	r3, r3, #1
     f64:	sub	r2, r1, r3
     f68:	uxtb	r3, r2
     f6c:	add	r3, r3, #48	; 0x30
     f70:	uxtb	r2, r3
     f74:	ldr	r3, [fp, #-8]
     f78:	strb	r2, [r3]
     f7c:	ldr	r3, [fp, #-8]
     f80:	add	r3, r3, #1
     f84:	str	r3, [fp, #-8]
     f88:	ldr	r3, [fp, #-8]
     f8c:	ldrb	r3, [r3]
     f90:	cmp	r3, #0
     f94:	bne	f08 <do_host_cloak_host+0x130>
     f98:	nop			; (mov r0, r0)
     f9c:	sub	sp, fp, #4
     fa0:	pop	{fp, pc}
     fa4:	.word	0x000006dc
     fa8:	.word	0x4ec4ec4f
     fac:	.word	0xcccccccd

00000fb0 <check_umode_change>:
     fb0:	push	{r4, fp, lr}
     fb4:	add	fp, sp, #8
     fb8:	sub	sp, sp, #20
     fbc:	str	r0, [fp, #-24]	; 0xffffffe8
     fc0:	ldr	r4, [pc, #556]	; 11f4 <check_umode_change+0x244>
     fc4:	add	r4, pc, r4
     fc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     fcc:	str	r3, [fp, #-16]
     fd0:	ldr	r3, [fp, #-16]
     fd4:	ldr	r3, [r3]
     fd8:	str	r3, [fp, #-20]	; 0xffffffec
     fdc:	ldr	r3, [fp, #-20]	; 0xffffffec
     fe0:	ldrd	r2, [r3, #64]	; 0x40
     fe4:	mov	r0, #8192	; 0x2000
     fe8:	mov	r1, #0
     fec:	and	r2, r2, r0
     ff0:	and	r3, r3, r1
     ff4:	orrs	r3, r2, r3
     ff8:	beq	11e0 <check_umode_change+0x230>
     ffc:	ldr	r3, [fp, #-20]	; 0xffffffec
    1000:	ldrh	r3, [r3, #80]	; 0x50
    1004:	cmp	r3, #64	; 0x40
    1008:	bne	11e0 <check_umode_change+0x230>
    100c:	ldr	r3, [fp, #-16]
    1010:	ldr	r2, [r3, #4]
    1014:	ldr	r3, [fp, #-20]	; 0xffffffec
    1018:	ldr	r3, [r3, #56]	; 0x38
    101c:	eor	r3, r3, r2
    1020:	ldr	r2, [pc, #464]	; 11f8 <check_umode_change+0x248>
    1024:	ldr	r2, [r4, r2]
    1028:	ldr	r2, [r2, #416]	; 0x1a0
    102c:	and	r3, r3, r2
    1030:	cmp	r3, #0
    1034:	beq	11e8 <check_umode_change+0x238>
    1038:	ldr	r3, [fp, #-20]	; 0xffffffec
    103c:	ldr	r3, [r3, #56]	; 0x38
    1040:	ldr	r2, [pc, #432]	; 11f8 <check_umode_change+0x248>
    1044:	ldr	r2, [r4, r2]
    1048:	ldr	r2, [r2, #416]	; 0x1a0
    104c:	and	r3, r3, r2
    1050:	cmp	r3, #0
    1054:	beq	1168 <check_umode_change+0x1b8>
    1058:	ldr	r3, [fp, #-20]	; 0xffffffec
    105c:	ldrd	r2, [r3, #64]	; 0x40
    1060:	mov	r0, #16777216	; 0x1000000
    1064:	mov	r1, #0
    1068:	and	r2, r2, r0
    106c:	and	r3, r3, r1
    1070:	orrs	r3, r2, r3
    1074:	bne	10d8 <check_umode_change+0x128>
    1078:	ldr	r3, [fp, #-20]	; 0xffffffec
    107c:	ldr	r3, [r3, #432]	; 0x1b0
    1080:	ldr	r3, [r3, #432]	; 0x1b0
    1084:	cmp	r3, #0
    1088:	beq	10d8 <check_umode_change+0x128>
    108c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1090:	ldrd	r2, [r3, #64]	; 0x40
    1094:	mov	r0, #131072	; 0x20000
    1098:	mov	r1, #0
    109c:	and	r2, r2, r0
    10a0:	and	r3, r3, r1
    10a4:	orrs	r3, r2, r3
    10a8:	beq	1100 <check_umode_change+0x150>
    10ac:	ldr	r3, [fp, #-20]	; 0xffffffec
    10b0:	add	r2, r3, #163	; 0xa3
    10b4:	ldr	r3, [fp, #-20]	; 0xffffffec
    10b8:	ldr	r3, [r3, #432]	; 0x1b0
    10bc:	ldr	r3, [r3, #432]	; 0x1b0
    10c0:	mov	r1, r3
    10c4:	mov	r0, r2
    10c8:	bl	66c <strcmp@plt>
    10cc:	mov	r3, r0
    10d0:	cmp	r3, #0
    10d4:	beq	1100 <check_umode_change+0x150>
    10d8:	ldr	r3, [fp, #-20]	; 0xffffffec
    10dc:	ldr	r3, [r3, #56]	; 0x38
    10e0:	ldr	r2, [pc, #272]	; 11f8 <check_umode_change+0x248>
    10e4:	ldr	r2, [r4, r2]
    10e8:	ldr	r2, [r2, #416]	; 0x1a0
    10ec:	mvn	r2, r2
    10f0:	and	r2, r2, r3
    10f4:	ldr	r3, [fp, #-20]	; 0xffffffec
    10f8:	str	r2, [r3, #56]	; 0x38
    10fc:	b	11ec <check_umode_change+0x23c>
    1100:	ldr	r3, [fp, #-20]	; 0xffffffec
    1104:	add	r2, r3, #163	; 0xa3
    1108:	ldr	r3, [fp, #-20]	; 0xffffffec
    110c:	ldr	r3, [r3, #432]	; 0x1b0
    1110:	ldr	r3, [r3, #432]	; 0x1b0
    1114:	mov	r1, r3
    1118:	mov	r0, r2
    111c:	bl	66c <strcmp@plt>
    1120:	mov	r3, r0
    1124:	cmp	r3, #0
    1128:	beq	1148 <check_umode_change+0x198>
    112c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1130:	ldr	r3, [r3, #432]	; 0x1b0
    1134:	ldr	r3, [r3, #432]	; 0x1b0
    1138:	mov	r1, r3
    113c:	ldr	r0, [fp, #-20]	; 0xffffffec
    1140:	bl	968 <distribute_hostchange>
    1144:	b	11ec <check_umode_change+0x23c>
    1148:	ldr	r3, [fp, #-20]	; 0xffffffec
    114c:	add	r3, r3, #163	; 0xa3
    1150:	ldr	r2, [pc, #164]	; 11fc <check_umode_change+0x24c>
    1154:	add	r2, pc, r2
    1158:	mov	r1, #396	; 0x18c
    115c:	ldr	r0, [fp, #-20]	; 0xffffffec
    1160:	bl	6c0 <sendto_one_numeric@plt>
    1164:	b	11ec <check_umode_change+0x23c>
    1168:	ldr	r3, [fp, #-20]	; 0xffffffec
    116c:	ldr	r3, [r3, #56]	; 0x38
    1170:	ldr	r2, [pc, #128]	; 11f8 <check_umode_change+0x248>
    1174:	ldr	r2, [r4, r2]
    1178:	ldr	r2, [r2, #416]	; 0x1a0
    117c:	and	r3, r3, r2
    1180:	cmp	r3, #0
    1184:	bne	11ec <check_umode_change+0x23c>
    1188:	ldr	r3, [fp, #-20]	; 0xffffffec
    118c:	ldr	r3, [r3, #432]	; 0x1b0
    1190:	ldr	r3, [r3, #432]	; 0x1b0
    1194:	cmp	r3, #0
    1198:	beq	11ec <check_umode_change+0x23c>
    119c:	ldr	r3, [fp, #-20]	; 0xffffffec
    11a0:	add	r2, r3, #163	; 0xa3
    11a4:	ldr	r3, [fp, #-20]	; 0xffffffec
    11a8:	ldr	r3, [r3, #432]	; 0x1b0
    11ac:	ldr	r3, [r3, #432]	; 0x1b0
    11b0:	mov	r1, r3
    11b4:	mov	r0, r2
    11b8:	bl	66c <strcmp@plt>
    11bc:	mov	r3, r0
    11c0:	cmp	r3, #0
    11c4:	bne	11ec <check_umode_change+0x23c>
    11c8:	ldr	r3, [fp, #-20]	; 0xffffffec
    11cc:	add	r3, r3, #227	; 0xe3
    11d0:	mov	r1, r3
    11d4:	ldr	r0, [fp, #-20]	; 0xffffffec
    11d8:	bl	968 <distribute_hostchange>
    11dc:	b	11ec <check_umode_change+0x23c>
    11e0:	nop			; (mov r0, r0)
    11e4:	b	11ec <check_umode_change+0x23c>
    11e8:	nop			; (mov r0, r0)
    11ec:	sub	sp, fp, #8
    11f0:	pop	{r4, fp, pc}
    11f4:	.word	0x00011034
    11f8:	.word	0x0000005c
    11fc:	.word	0x000002c4

00001200 <check_new_user>:
    1200:	push	{r4, r5, fp, lr}
    1204:	add	fp, sp, #12
    1208:	sub	sp, sp, #16
    120c:	str	r0, [fp, #-24]	; 0xffffffe8
    1210:	ldr	r4, [pc, #428]	; 13c4 <check_new_user+0x1c4>
    1214:	add	r4, pc, r4
    1218:	ldr	r3, [fp, #-24]	; 0xffffffe8
    121c:	str	r3, [fp, #-16]
    1220:	ldr	r3, [fp, #-16]
    1224:	ldrd	r2, [r3, #64]	; 0x40
    1228:	mov	r0, #16777216	; 0x1000000
    122c:	mov	r1, #0
    1230:	and	r2, r2, r0
    1234:	and	r3, r3, r1
    1238:	orrs	r3, r2, r3
    123c:	beq	1268 <check_new_user+0x68>
    1240:	ldr	r3, [fp, #-16]
    1244:	ldr	r3, [r3, #56]	; 0x38
    1248:	ldr	r2, [pc, #376]	; 13c8 <check_new_user+0x1c8>
    124c:	ldr	r2, [r4, r2]
    1250:	ldr	r2, [r2, #416]	; 0x1a0
    1254:	mvn	r2, r2
    1258:	and	r2, r2, r3
    125c:	ldr	r3, [fp, #-16]
    1260:	str	r2, [r3, #56]	; 0x38
    1264:	b	13bc <check_new_user+0x1bc>
    1268:	ldr	r3, [fp, #-16]
    126c:	ldr	r5, [r3, #432]	; 0x1b0
    1270:	mov	r0, #64	; 0x40
    1274:	bl	8a0 <rb_malloc>
    1278:	mov	r3, r0
    127c:	str	r3, [r5, #432]	; 0x1b0
    1280:	ldr	r3, [fp, #-16]
    1284:	add	r2, r3, #227	; 0xe3
    1288:	ldr	r3, [fp, #-16]
    128c:	add	r3, r3, #288	; 0x120
    1290:	add	r3, r3, #3
    1294:	mov	r1, r3
    1298:	mov	r0, r2
    129c:	bl	714 <irccmp@plt>
    12a0:	mov	r3, r0
    12a4:	cmp	r3, #0
    12a8:	bne	12d0 <check_new_user+0xd0>
    12ac:	ldr	r3, [fp, #-16]
    12b0:	add	r2, r3, #227	; 0xe3
    12b4:	ldr	r3, [fp, #-16]
    12b8:	ldr	r3, [r3, #432]	; 0x1b0
    12bc:	ldr	r3, [r3, #432]	; 0x1b0
    12c0:	mov	r1, r3
    12c4:	mov	r0, r2
    12c8:	bl	cb0 <do_host_cloak_ip>
    12cc:	b	12f0 <check_new_user+0xf0>
    12d0:	ldr	r3, [fp, #-16]
    12d4:	add	r2, r3, #227	; 0xe3
    12d8:	ldr	r3, [fp, #-16]
    12dc:	ldr	r3, [r3, #432]	; 0x1b0
    12e0:	ldr	r3, [r3, #432]	; 0x1b0
    12e4:	mov	r1, r3
    12e8:	mov	r0, r2
    12ec:	bl	dd8 <do_host_cloak_host>
    12f0:	ldr	r3, [fp, #-16]
    12f4:	ldrd	r2, [r3, #64]	; 0x40
    12f8:	mov	r0, #131072	; 0x20000
    12fc:	mov	r1, #0
    1300:	and	r2, r2, r0
    1304:	and	r3, r3, r1
    1308:	orrs	r3, r2, r3
    130c:	beq	1334 <check_new_user+0x134>
    1310:	ldr	r3, [fp, #-16]
    1314:	ldr	r3, [r3, #56]	; 0x38
    1318:	ldr	r2, [pc, #168]	; 13c8 <check_new_user+0x1c8>
    131c:	ldr	r2, [r4, r2]
    1320:	ldr	r2, [r2, #416]	; 0x1a0
    1324:	mvn	r2, r2
    1328:	and	r2, r2, r3
    132c:	ldr	r3, [fp, #-16]
    1330:	str	r2, [r3, #56]	; 0x38
    1334:	ldr	r3, [fp, #-16]
    1338:	ldr	r3, [r3, #56]	; 0x38
    133c:	ldr	r2, [pc, #132]	; 13c8 <check_new_user+0x1c8>
    1340:	ldr	r2, [r4, r2]
    1344:	ldr	r2, [r2, #416]	; 0x1a0
    1348:	and	r3, r3, r2
    134c:	cmp	r3, #0
    1350:	beq	13bc <check_new_user+0x1bc>
    1354:	ldr	r3, [fp, #-16]
    1358:	add	r0, r3, #163	; 0xa3
    135c:	ldr	r3, [fp, #-16]
    1360:	ldr	r3, [r3, #432]	; 0x1b0
    1364:	ldr	r3, [r3, #432]	; 0x1b0
    1368:	mov	r2, #64	; 0x40
    136c:	mov	r1, r3
    1370:	bl	708 <rb_strlcpy@plt>
    1374:	ldr	r3, [fp, #-16]
    1378:	add	r2, r3, #163	; 0xa3
    137c:	ldr	r3, [fp, #-16]
    1380:	add	r3, r3, #227	; 0xe3
    1384:	mov	r1, r3
    1388:	mov	r0, r2
    138c:	bl	714 <irccmp@plt>
    1390:	mov	r3, r0
    1394:	cmp	r3, #0
    1398:	beq	13bc <check_new_user+0x1bc>
    139c:	ldr	r3, [fp, #-16]
    13a0:	ldrd	r2, [r3, #64]	; 0x40
    13a4:	mov	r0, #131072	; 0x20000
    13a8:	mov	r1, #0
    13ac:	orr	r2, r2, r0
    13b0:	orr	r3, r3, r1
    13b4:	ldr	r1, [fp, #-16]
    13b8:	strd	r2, [r1, #64]	; 0x40
    13bc:	sub	sp, fp, #12
    13c0:	pop	{r4, r5, fp, pc}
    13c4:	.word	0x00010de4
    13c8:	.word	0x0000005c

Disassembly of section .fini:

000013cc <_fini>:
    13cc:	push	{r3, lr}
    13d0:	pop	{r3, pc}
