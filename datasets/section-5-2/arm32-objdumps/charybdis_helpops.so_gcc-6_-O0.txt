
../repos/charybdis/extensions/.libs/helpops.so:     file format elf32-littlearm


Disassembly of section .init:

000006f4 <_init>:
 6f4:	push	{r3, lr}
 6f8:	bl	7c8 <call_weak_fn>
 6fc:	pop	{r3, pc}

Disassembly of section .plt:

00000700 <.plt>:
 700:	push	{lr}		; (str lr, [sp, #-4]!)
 704:	ldr	lr, [pc, #4]	; 710 <.plt+0x10>
 708:	add	lr, pc, lr
 70c:	ldr	pc, [lr, #8]!
 710:	.word	0x000118f0

00000714 <__cxa_finalize@plt>:
 714:	add	ip, pc, #0, 12
 718:	add	ip, ip, #69632	; 0x11000
 71c:	ldr	pc, [ip, #2288]!	; 0x8f0

00000720 <sendto_one@plt>:
 720:	add	ip, pc, #0, 12
 724:	add	ip, ip, #69632	; 0x11000
 728:	ldr	pc, [ip, #2280]!	; 0x8e8

0000072c <user_mode@plt>:
 72c:	add	ip, pc, #0, 12
 730:	add	ip, ip, #69632	; 0x11000
 734:	ldr	pc, [ip, #2272]!	; 0x8e0

00000738 <sendto_realops_snomask@plt>:
 738:	add	ip, pc, #0, 12
 73c:	add	ip, ip, #69632	; 0x11000
 740:	ldr	pc, [ip, #2264]!	; 0x8d8

00000744 <find_umode_slot@plt>:
 744:	add	ip, pc, #0, 12
 748:	add	ip, ip, #69632	; 0x11000
 74c:	ldr	pc, [ip, #2256]!	; 0x8d0

00000750 <rb_free_rb_dlink_node@plt>:
 750:	add	ip, pc, #0, 12
 754:	add	ip, ip, #69632	; 0x11000
 758:	ldr	pc, [ip, #2248]!	; 0x8c8

0000075c <__gmon_start__@plt>:
 75c:	add	ip, pc, #0, 12
 760:	add	ip, ip, #69632	; 0x11000
 764:	ldr	pc, [ip, #2240]!	; 0x8c0

00000768 <rb_make_rb_dlink_node@plt>:
 768:	add	ip, pc, #0, 12
 76c:	add	ip, ip, #69632	; 0x11000
 770:	ldr	pc, [ip, #2232]!	; 0x8b8

00000774 <sendto_one_numeric@plt>:
 774:	add	ip, pc, #0, 12
 778:	add	ip, ip, #69632	; 0x11000
 77c:	ldr	pc, [ip, #2224]!	; 0x8b0

00000780 <find_person@plt>:
 780:	add	ip, pc, #0, 12
 784:	add	ip, ip, #69632	; 0x11000
 788:	ldr	pc, [ip, #2216]!	; 0x8a8

0000078c <sendto_one_notice@plt>:
 78c:	add	ip, pc, #0, 12
 790:	add	ip, ip, #69632	; 0x11000
 794:	ldr	pc, [ip, #2208]!	; 0x8a0

00000798 <find_named_person@plt>:
 798:	add	ip, pc, #0, 12
 79c:	add	ip, ip, #69632	; 0x11000
 7a0:	ldr	pc, [ip, #2200]!	; 0x898

000007a4 <privilegeset_in_set@plt>:
 7a4:	add	ip, pc, #0, 12
 7a8:	add	ip, ip, #69632	; 0x11000
 7ac:	ldr	pc, [ip, #2192]!	; 0x890

000007b0 <__assert_fail@plt>:
 7b0:	add	ip, pc, #0, 12
 7b4:	add	ip, ip, #69632	; 0x11000
 7b8:	ldr	pc, [ip, #2184]!	; 0x888

000007bc <construct_umodebuf@plt>:
 7bc:	add	ip, pc, #0, 12
 7c0:	add	ip, ip, #69632	; 0x11000
 7c4:	ldr	pc, [ip, #2176]!	; 0x880

Disassembly of section .text:

000007c8 <call_weak_fn>:
     7c8:	ldr	r3, [pc, #20]	; 7e4 <call_weak_fn+0x1c>
     7cc:	ldr	r2, [pc, #20]	; 7e8 <call_weak_fn+0x20>
     7d0:	add	r3, pc, r3
     7d4:	ldr	r2, [r3, r2]
     7d8:	cmp	r2, #0
     7dc:	bxeq	lr
     7e0:	b	75c <__gmon_start__@plt>
     7e4:	.word	0x00011828
     7e8:	.word	0x00000054

000007ec <deregister_tm_clones>:
     7ec:	ldr	r3, [pc, #52]	; 828 <deregister_tm_clones+0x3c>
     7f0:	ldr	r0, [pc, #52]	; 82c <deregister_tm_clones+0x40>
     7f4:	add	r3, pc, r3
     7f8:	add	r0, pc, r0
     7fc:	add	r3, r3, #3
     800:	sub	r3, r3, r0
     804:	cmp	r3, #6
     808:	ldr	r3, [pc, #32]	; 830 <deregister_tm_clones+0x44>
     80c:	add	r3, pc, r3
     810:	bxls	lr
     814:	ldr	r2, [pc, #24]	; 834 <deregister_tm_clones+0x48>
     818:	ldr	r3, [r3, r2]
     81c:	cmp	r3, #0
     820:	bxeq	lr
     824:	bx	r3
     828:	.word	0x00011938
     82c:	.word	0x00011934
     830:	.word	0x000117ec
     834:	.word	0x0000004c

00000838 <register_tm_clones>:
     838:	ldr	r1, [pc, #56]	; 878 <register_tm_clones+0x40>
     83c:	ldr	r0, [pc, #56]	; 87c <register_tm_clones+0x44>
     840:	add	r1, pc, r1
     844:	add	r0, pc, r0
     848:	sub	r1, r1, r0
     84c:	ldr	r3, [pc, #44]	; 880 <register_tm_clones+0x48>
     850:	asr	r1, r1, #2
     854:	add	r3, pc, r3
     858:	add	r1, r1, r1, lsr #31
     85c:	asrs	r1, r1, #1
     860:	bxeq	lr
     864:	ldr	r2, [pc, #24]	; 884 <register_tm_clones+0x4c>
     868:	ldr	r3, [r3, r2]
     86c:	cmp	r3, #0
     870:	bxeq	lr
     874:	bx	r3
     878:	.word	0x000118ec
     87c:	.word	0x000118e8
     880:	.word	0x000117a4
     884:	.word	0x00000060

00000888 <__do_global_dtors_aux>:
     888:	ldr	r3, [pc, #76]	; 8dc <__do_global_dtors_aux+0x54>
     88c:	ldr	r2, [pc, #76]	; 8e0 <__do_global_dtors_aux+0x58>
     890:	add	r3, pc, r3
     894:	add	r2, pc, r2
     898:	ldrb	r3, [r3]
     89c:	cmp	r3, #0
     8a0:	bxne	lr
     8a4:	ldr	r3, [pc, #56]	; 8e4 <__do_global_dtors_aux+0x5c>
     8a8:	push	{r4, lr}
     8ac:	ldr	r3, [r2, r3]
     8b0:	cmp	r3, #0
     8b4:	beq	8c4 <__do_global_dtors_aux+0x3c>
     8b8:	ldr	r3, [pc, #40]	; 8e8 <__do_global_dtors_aux+0x60>
     8bc:	ldr	r0, [pc, r3]
     8c0:	bl	714 <__cxa_finalize@plt>
     8c4:	bl	7ec <deregister_tm_clones>
     8c8:	ldr	r3, [pc, #28]	; 8ec <__do_global_dtors_aux+0x64>
     8cc:	mov	r2, #1
     8d0:	add	r3, pc, r3
     8d4:	strb	r2, [r3]
     8d8:	pop	{r4, pc}
     8dc:	.word	0x0001189c
     8e0:	.word	0x00011764
     8e4:	.word	0x00000048
     8e8:	.word	0x000117a4
     8ec:	.word	0x0001185c

000008f0 <frame_dummy>:
     8f0:	ldr	r0, [pc, #56]	; 930 <frame_dummy+0x40>
     8f4:	ldr	r3, [pc, #56]	; 934 <frame_dummy+0x44>
     8f8:	add	r0, pc, r0
     8fc:	ldr	r2, [r0]
     900:	add	r3, pc, r3
     904:	cmp	r2, #0
     908:	bne	910 <frame_dummy+0x20>
     90c:	b	838 <register_tm_clones>
     910:	ldr	r2, [pc, #32]	; 938 <frame_dummy+0x48>
     914:	ldr	r3, [r3, r2]
     918:	cmp	r3, #0
     91c:	beq	90c <frame_dummy+0x1c>
     920:	push	{r4, lr}
     924:	blx	r3
     928:	pop	{r4, lr}
     92c:	b	838 <register_tm_clones>
     930:	.word	0x000115fc
     934:	.word	0x000116f8
     938:	.word	0x0000005c

0000093c <rb_dlinkAdd>:
     93c:	push	{fp, lr}
     940:	add	fp, sp, #4
     944:	sub	sp, sp, #16
     948:	str	r0, [fp, #-8]
     94c:	str	r1, [fp, #-12]
     950:	str	r2, [fp, #-16]
     954:	ldr	r3, [fp, #-8]
     958:	cmp	r3, #0
     95c:	bne	980 <rb_dlinkAdd+0x44>
     960:	ldr	r3, [pc, #260]	; a6c <rb_dlinkAdd+0x130>
     964:	add	r3, pc, r3
     968:	mov	r2, #143	; 0x8f
     96c:	ldr	r1, [pc, #252]	; a70 <rb_dlinkAdd+0x134>
     970:	add	r1, pc, r1
     974:	ldr	r0, [pc, #248]	; a74 <rb_dlinkAdd+0x138>
     978:	add	r0, pc, r0
     97c:	bl	7b0 <__assert_fail@plt>
     980:	ldr	r3, [fp, #-12]
     984:	cmp	r3, #0
     988:	bne	9ac <rb_dlinkAdd+0x70>
     98c:	ldr	r3, [pc, #228]	; a78 <rb_dlinkAdd+0x13c>
     990:	add	r3, pc, r3
     994:	mov	r2, #144	; 0x90
     998:	ldr	r1, [pc, #220]	; a7c <rb_dlinkAdd+0x140>
     99c:	add	r1, pc, r1
     9a0:	ldr	r0, [pc, #216]	; a80 <rb_dlinkAdd+0x144>
     9a4:	add	r0, pc, r0
     9a8:	bl	7b0 <__assert_fail@plt>
     9ac:	ldr	r3, [fp, #-16]
     9b0:	cmp	r3, #0
     9b4:	bne	9d8 <rb_dlinkAdd+0x9c>
     9b8:	ldr	r3, [pc, #196]	; a84 <rb_dlinkAdd+0x148>
     9bc:	add	r3, pc, r3
     9c0:	mov	r2, #145	; 0x91
     9c4:	ldr	r1, [pc, #188]	; a88 <rb_dlinkAdd+0x14c>
     9c8:	add	r1, pc, r1
     9cc:	ldr	r0, [pc, #184]	; a8c <rb_dlinkAdd+0x150>
     9d0:	add	r0, pc, r0
     9d4:	bl	7b0 <__assert_fail@plt>
     9d8:	ldr	r3, [fp, #-12]
     9dc:	ldr	r2, [fp, #-8]
     9e0:	str	r2, [r3]
     9e4:	ldr	r3, [fp, #-12]
     9e8:	mov	r2, #0
     9ec:	str	r2, [r3, #4]
     9f0:	ldr	r3, [fp, #-16]
     9f4:	ldr	r2, [r3]
     9f8:	ldr	r3, [fp, #-12]
     9fc:	str	r2, [r3, #8]
     a00:	ldr	r3, [fp, #-16]
     a04:	ldr	r3, [r3]
     a08:	cmp	r3, #0
     a0c:	beq	a24 <rb_dlinkAdd+0xe8>
     a10:	ldr	r3, [fp, #-16]
     a14:	ldr	r3, [r3]
     a18:	ldr	r2, [fp, #-12]
     a1c:	str	r2, [r3, #4]
     a20:	b	a40 <rb_dlinkAdd+0x104>
     a24:	ldr	r3, [fp, #-16]
     a28:	ldr	r3, [r3, #4]
     a2c:	cmp	r3, #0
     a30:	bne	a40 <rb_dlinkAdd+0x104>
     a34:	ldr	r3, [fp, #-16]
     a38:	ldr	r2, [fp, #-12]
     a3c:	str	r2, [r3, #4]
     a40:	ldr	r3, [fp, #-16]
     a44:	ldr	r2, [fp, #-12]
     a48:	str	r2, [r3]
     a4c:	ldr	r3, [fp, #-16]
     a50:	ldr	r3, [r3, #8]
     a54:	add	r2, r3, #1
     a58:	ldr	r3, [fp, #-16]
     a5c:	str	r2, [r3, #8]
     a60:	nop			; (mov r0, r0)
     a64:	sub	sp, fp, #4
     a68:	pop	{fp, pc}
     a6c:	.word	0x0000121c
     a70:	.word	0x00001008
     a74:	.word	0x0000101c
     a78:	.word	0x000011f0
     a7c:	.word	0x00000fdc
     a80:	.word	0x00001000
     a84:	.word	0x000011c4
     a88:	.word	0x00000fb0
     a8c:	.word	0x00000fe0

00000a90 <rb_dlinkDelete>:
     a90:	push	{fp, lr}
     a94:	add	fp, sp, #4
     a98:	sub	sp, sp, #8
     a9c:	str	r0, [fp, #-8]
     aa0:	str	r1, [fp, #-12]
     aa4:	ldr	r3, [fp, #-8]
     aa8:	cmp	r3, #0
     aac:	bne	ad0 <rb_dlinkDelete+0x40>
     ab0:	ldr	r3, [pc, #240]	; ba8 <rb_dlinkDelete+0x118>
     ab4:	add	r3, pc, r3
     ab8:	mov	r2, #235	; 0xeb
     abc:	ldr	r1, [pc, #232]	; bac <rb_dlinkDelete+0x11c>
     ac0:	add	r1, pc, r1
     ac4:	ldr	r0, [pc, #228]	; bb0 <rb_dlinkDelete+0x120>
     ac8:	add	r0, pc, r0
     acc:	bl	7b0 <__assert_fail@plt>
     ad0:	ldr	r3, [fp, #-12]
     ad4:	cmp	r3, #0
     ad8:	bne	afc <rb_dlinkDelete+0x6c>
     adc:	ldr	r3, [pc, #208]	; bb4 <rb_dlinkDelete+0x124>
     ae0:	add	r3, pc, r3
     ae4:	mov	r2, #236	; 0xec
     ae8:	ldr	r1, [pc, #200]	; bb8 <rb_dlinkDelete+0x128>
     aec:	add	r1, pc, r1
     af0:	ldr	r0, [pc, #196]	; bbc <rb_dlinkDelete+0x12c>
     af4:	add	r0, pc, r0
     af8:	bl	7b0 <__assert_fail@plt>
     afc:	ldr	r3, [fp, #-8]
     b00:	ldr	r3, [r3, #8]
     b04:	cmp	r3, #0
     b08:	beq	b24 <rb_dlinkDelete+0x94>
     b0c:	ldr	r3, [fp, #-8]
     b10:	ldr	r3, [r3, #8]
     b14:	ldr	r2, [fp, #-8]
     b18:	ldr	r2, [r2, #4]
     b1c:	str	r2, [r3, #4]
     b20:	b	b34 <rb_dlinkDelete+0xa4>
     b24:	ldr	r3, [fp, #-8]
     b28:	ldr	r2, [r3, #4]
     b2c:	ldr	r3, [fp, #-12]
     b30:	str	r2, [r3, #4]
     b34:	ldr	r3, [fp, #-8]
     b38:	ldr	r3, [r3, #4]
     b3c:	cmp	r3, #0
     b40:	beq	b5c <rb_dlinkDelete+0xcc>
     b44:	ldr	r3, [fp, #-8]
     b48:	ldr	r3, [r3, #4]
     b4c:	ldr	r2, [fp, #-8]
     b50:	ldr	r2, [r2, #8]
     b54:	str	r2, [r3, #8]
     b58:	b	b6c <rb_dlinkDelete+0xdc>
     b5c:	ldr	r3, [fp, #-8]
     b60:	ldr	r2, [r3, #8]
     b64:	ldr	r3, [fp, #-12]
     b68:	str	r2, [r3]
     b6c:	ldr	r3, [fp, #-8]
     b70:	mov	r2, #0
     b74:	str	r2, [r3, #4]
     b78:	ldr	r3, [fp, #-8]
     b7c:	ldr	r2, [r3, #4]
     b80:	ldr	r3, [fp, #-8]
     b84:	str	r2, [r3, #8]
     b88:	ldr	r3, [fp, #-12]
     b8c:	ldr	r3, [r3, #8]
     b90:	sub	r2, r3, #1
     b94:	ldr	r3, [fp, #-12]
     b98:	str	r2, [r3, #8]
     b9c:	nop			; (mov r0, r0)
     ba0:	sub	sp, fp, #4
     ba4:	pop	{fp, pc}
     ba8:	.word	0x000010ac
     bac:	.word	0x00000eb8
     bb0:	.word	0x00000edc
     bb4:	.word	0x00001080
     bb8:	.word	0x00000e8c
     bbc:	.word	0x00000ebc

00000bc0 <rb_dlinkFindDelete>:
     bc0:	push	{fp, lr}
     bc4:	add	fp, sp, #4
     bc8:	sub	sp, sp, #16
     bcc:	str	r0, [fp, #-16]
     bd0:	str	r1, [fp, #-20]	; 0xffffffec
     bd4:	ldr	r3, [fp, #-20]	; 0xffffffec
     bd8:	cmp	r3, #0
     bdc:	bne	c00 <rb_dlinkFindDelete+0x40>
     be0:	ldr	r3, [pc, #316]	; d24 <rb_dlinkFindDelete+0x164>
     be4:	add	r3, pc, r3
     be8:	ldr	r2, [pc, #312]	; d28 <rb_dlinkFindDelete+0x168>
     bec:	ldr	r1, [pc, #312]	; d2c <rb_dlinkFindDelete+0x16c>
     bf0:	add	r1, pc, r1
     bf4:	ldr	r0, [pc, #308]	; d30 <rb_dlinkFindDelete+0x170>
     bf8:	add	r0, pc, r0
     bfc:	bl	7b0 <__assert_fail@plt>
     c00:	ldr	r3, [fp, #-16]
     c04:	cmp	r3, #0
     c08:	bne	c2c <rb_dlinkFindDelete+0x6c>
     c0c:	ldr	r3, [pc, #288]	; d34 <rb_dlinkFindDelete+0x174>
     c10:	add	r3, pc, r3
     c14:	ldr	r2, [pc, #284]	; d38 <rb_dlinkFindDelete+0x178>
     c18:	ldr	r1, [pc, #284]	; d3c <rb_dlinkFindDelete+0x17c>
     c1c:	add	r1, pc, r1
     c20:	ldr	r0, [pc, #280]	; d40 <rb_dlinkFindDelete+0x180>
     c24:	add	r0, pc, r0
     c28:	bl	7b0 <__assert_fail@plt>
     c2c:	ldr	r3, [fp, #-20]	; 0xffffffec
     c30:	ldr	r3, [r3]
     c34:	str	r3, [fp, #-8]
     c38:	b	d08 <rb_dlinkFindDelete+0x148>
     c3c:	ldr	r3, [fp, #-8]
     c40:	ldr	r2, [r3]
     c44:	ldr	r3, [fp, #-16]
     c48:	cmp	r2, r3
     c4c:	beq	c60 <rb_dlinkFindDelete+0xa0>
     c50:	ldr	r3, [fp, #-8]
     c54:	ldr	r3, [r3, #8]
     c58:	str	r3, [fp, #-8]
     c5c:	b	d08 <rb_dlinkFindDelete+0x148>
     c60:	ldr	r3, [fp, #-8]
     c64:	ldr	r3, [r3, #8]
     c68:	cmp	r3, #0
     c6c:	beq	c88 <rb_dlinkFindDelete+0xc8>
     c70:	ldr	r3, [fp, #-8]
     c74:	ldr	r3, [r3, #8]
     c78:	ldr	r2, [fp, #-8]
     c7c:	ldr	r2, [r2, #4]
     c80:	str	r2, [r3, #4]
     c84:	b	c98 <rb_dlinkFindDelete+0xd8>
     c88:	ldr	r3, [fp, #-8]
     c8c:	ldr	r2, [r3, #4]
     c90:	ldr	r3, [fp, #-20]	; 0xffffffec
     c94:	str	r2, [r3, #4]
     c98:	ldr	r3, [fp, #-8]
     c9c:	ldr	r3, [r3, #4]
     ca0:	cmp	r3, #0
     ca4:	beq	cc0 <rb_dlinkFindDelete+0x100>
     ca8:	ldr	r3, [fp, #-8]
     cac:	ldr	r3, [r3, #4]
     cb0:	ldr	r2, [fp, #-8]
     cb4:	ldr	r2, [r2, #8]
     cb8:	str	r2, [r3, #8]
     cbc:	b	cd0 <rb_dlinkFindDelete+0x110>
     cc0:	ldr	r3, [fp, #-8]
     cc4:	ldr	r2, [r3, #8]
     cc8:	ldr	r3, [fp, #-20]	; 0xffffffec
     ccc:	str	r2, [r3]
     cd0:	ldr	r3, [fp, #-8]
     cd4:	mov	r2, #0
     cd8:	str	r2, [r3, #4]
     cdc:	ldr	r3, [fp, #-8]
     ce0:	ldr	r2, [r3, #4]
     ce4:	ldr	r3, [fp, #-8]
     ce8:	str	r2, [r3, #8]
     cec:	ldr	r3, [fp, #-20]	; 0xffffffec
     cf0:	ldr	r3, [r3, #8]
     cf4:	sub	r2, r3, #1
     cf8:	ldr	r3, [fp, #-20]	; 0xffffffec
     cfc:	str	r2, [r3, #8]
     d00:	ldr	r3, [fp, #-8]
     d04:	b	d18 <rb_dlinkFindDelete+0x158>
     d08:	ldr	r3, [fp, #-8]
     d0c:	cmp	r3, #0
     d10:	bne	c3c <rb_dlinkFindDelete+0x7c>
     d14:	mov	r3, #0
     d18:	mov	r0, r3
     d1c:	sub	sp, fp, #4
     d20:	pop	{fp, pc}
     d24:	.word	0x00000fbc
     d28:	.word	0x00000102
     d2c:	.word	0x00000d88
     d30:	.word	0x00000db8
     d34:	.word	0x00000f90
     d38:	.word	0x00000103
     d3c:	.word	0x00000d5c
     d40:	.word	0x00000d70

00000d44 <rb_dlinkFindDestroy>:
     d44:	push	{fp, lr}
     d48:	add	fp, sp, #4
     d4c:	sub	sp, sp, #16
     d50:	str	r0, [fp, #-16]
     d54:	str	r1, [fp, #-20]	; 0xffffffec
     d58:	ldr	r3, [fp, #-20]	; 0xffffffec
     d5c:	cmp	r3, #0
     d60:	bne	d84 <rb_dlinkFindDestroy+0x40>
     d64:	ldr	r3, [pc, #128]	; dec <rb_dlinkFindDestroy+0xa8>
     d68:	add	r3, pc, r3
     d6c:	ldr	r2, [pc, #124]	; df0 <rb_dlinkFindDestroy+0xac>
     d70:	ldr	r1, [pc, #124]	; df4 <rb_dlinkFindDestroy+0xb0>
     d74:	add	r1, pc, r1
     d78:	ldr	r0, [pc, #120]	; df8 <rb_dlinkFindDestroy+0xb4>
     d7c:	add	r0, pc, r0
     d80:	bl	7b0 <__assert_fail@plt>
     d84:	ldr	r3, [fp, #-16]
     d88:	cmp	r3, #0
     d8c:	bne	db0 <rb_dlinkFindDestroy+0x6c>
     d90:	ldr	r3, [pc, #100]	; dfc <rb_dlinkFindDestroy+0xb8>
     d94:	add	r3, pc, r3
     d98:	mov	r2, #288	; 0x120
     d9c:	ldr	r1, [pc, #92]	; e00 <rb_dlinkFindDestroy+0xbc>
     da0:	add	r1, pc, r1
     da4:	ldr	r0, [pc, #88]	; e04 <rb_dlinkFindDestroy+0xc0>
     da8:	add	r0, pc, r0
     dac:	bl	7b0 <__assert_fail@plt>
     db0:	ldr	r1, [fp, #-20]	; 0xffffffec
     db4:	ldr	r0, [fp, #-16]
     db8:	bl	bc0 <rb_dlinkFindDelete>
     dbc:	str	r0, [fp, #-8]
     dc0:	ldr	r3, [fp, #-8]
     dc4:	cmp	r3, #0
     dc8:	beq	ddc <rb_dlinkFindDestroy+0x98>
     dcc:	ldr	r0, [fp, #-8]
     dd0:	bl	750 <rb_free_rb_dlink_node@plt>
     dd4:	mov	r3, #1
     dd8:	b	de0 <rb_dlinkFindDestroy+0x9c>
     ddc:	mov	r3, #0
     de0:	mov	r0, r3
     de4:	sub	sp, fp, #4
     de8:	pop	{fp, pc}
     dec:	.word	0x00000e24
     df0:	.word	0x0000011f
     df4:	.word	0x00000c04
     df8:	.word	0x00000c34
     dfc:	.word	0x00000df8
     e00:	.word	0x00000bd8
     e04:	.word	0x00000bec

00000e08 <rb_dlinkFind>:
     e08:	push	{fp, lr}
     e0c:	add	fp, sp, #4
     e10:	sub	sp, sp, #16
     e14:	str	r0, [fp, #-16]
     e18:	str	r1, [fp, #-20]	; 0xffffffec
     e1c:	ldr	r3, [fp, #-20]	; 0xffffffec
     e20:	cmp	r3, #0
     e24:	bne	e48 <rb_dlinkFind+0x40>
     e28:	ldr	r3, [pc, #152]	; ec8 <rb_dlinkFind+0xc0>
     e2c:	add	r3, pc, r3
     e30:	ldr	r2, [pc, #148]	; ecc <rb_dlinkFind+0xc4>
     e34:	ldr	r1, [pc, #148]	; ed0 <rb_dlinkFind+0xc8>
     e38:	add	r1, pc, r1
     e3c:	ldr	r0, [pc, #144]	; ed4 <rb_dlinkFind+0xcc>
     e40:	add	r0, pc, r0
     e44:	bl	7b0 <__assert_fail@plt>
     e48:	ldr	r3, [fp, #-16]
     e4c:	cmp	r3, #0
     e50:	bne	e74 <rb_dlinkFind+0x6c>
     e54:	ldr	r3, [pc, #124]	; ed8 <rb_dlinkFind+0xd0>
     e58:	add	r3, pc, r3
     e5c:	ldr	r2, [pc, #120]	; edc <rb_dlinkFind+0xd4>
     e60:	ldr	r1, [pc, #120]	; ee0 <rb_dlinkFind+0xd8>
     e64:	add	r1, pc, r1
     e68:	ldr	r0, [pc, #116]	; ee4 <rb_dlinkFind+0xdc>
     e6c:	add	r0, pc, r0
     e70:	bl	7b0 <__assert_fail@plt>
     e74:	ldr	r3, [fp, #-20]	; 0xffffffec
     e78:	ldr	r3, [r3]
     e7c:	str	r3, [fp, #-8]
     e80:	b	eac <rb_dlinkFind+0xa4>
     e84:	ldr	r3, [fp, #-8]
     e88:	ldr	r2, [r3]
     e8c:	ldr	r3, [fp, #-16]
     e90:	cmp	r2, r3
     e94:	bne	ea0 <rb_dlinkFind+0x98>
     e98:	ldr	r3, [fp, #-8]
     e9c:	b	ebc <rb_dlinkFind+0xb4>
     ea0:	ldr	r3, [fp, #-8]
     ea4:	ldr	r3, [r3, #8]
     ea8:	str	r3, [fp, #-8]
     eac:	ldr	r3, [fp, #-8]
     eb0:	cmp	r3, #0
     eb4:	bne	e84 <rb_dlinkFind+0x7c>
     eb8:	mov	r3, #0
     ebc:	mov	r0, r3
     ec0:	sub	sp, fp, #4
     ec4:	pop	{fp, pc}
     ec8:	.word	0x00000d44
     ecc:	.word	0x00000136
     ed0:	.word	0x00000b40
     ed4:	.word	0x00000b70
     ed8:	.word	0x00000d18
     edc:	.word	0x00000137
     ee0:	.word	0x00000b14
     ee4:	.word	0x00000b28

00000ee8 <mo_dehelper>:
     ee8:	push	{r4, fp, lr}
     eec:	add	fp, sp, #8
     ef0:	sub	sp, sp, #36	; 0x24
     ef4:	str	r0, [fp, #-24]	; 0xffffffe8
     ef8:	str	r1, [fp, #-28]	; 0xffffffe4
     efc:	str	r2, [fp, #-32]	; 0xffffffe0
     f00:	str	r3, [fp, #-36]	; 0xffffffdc
     f04:	ldr	r4, [pc, #384]	; 108c <mo_dehelper+0x1a4>
     f08:	add	r4, pc, r4
     f0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f10:	ldr	r3, [r3, #24]
     f14:	cmp	r3, #0
     f18:	beq	f5c <mo_dehelper+0x74>
     f1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f20:	ldr	r3, [r3, #24]
     f24:	ldr	r3, [r3, #36]	; 0x24
     f28:	cmp	r3, #0
     f2c:	beq	f5c <mo_dehelper+0x74>
     f30:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f34:	ldr	r3, [r3, #24]
     f38:	ldr	r3, [r3, #36]	; 0x24
     f3c:	ldr	r2, [pc, #332]	; 1090 <mo_dehelper+0x1a8>
     f40:	add	r2, pc, r2
     f44:	mov	r1, r2
     f48:	mov	r0, r3
     f4c:	bl	7a4 <privilegeset_in_set@plt>
     f50:	mov	r3, r0
     f54:	cmp	r3, #0
     f58:	bne	f90 <mo_dehelper+0xa8>
     f5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f60:	add	r3, r3, #88	; 0x58
     f64:	ldr	r2, [pc, #296]	; 1094 <mo_dehelper+0x1ac>
     f68:	add	r2, pc, r2
     f6c:	str	r2, [sp]
     f70:	ldr	r2, [pc, #288]	; 1098 <mo_dehelper+0x1b0>
     f74:	ldr	r2, [r4, r2]
     f78:	add	r2, r2, #88	; 0x58
     f7c:	ldr	r1, [pc, #280]	; 109c <mo_dehelper+0x1b4>
     f80:	add	r1, pc, r1
     f84:	ldr	r0, [fp, #-32]	; 0xffffffe0
     f88:	bl	720 <sendto_one@plt>
     f8c:	b	1084 <mo_dehelper+0x19c>
     f90:	ldr	r3, [fp, #4]
     f94:	add	r3, r3, #4
     f98:	ldr	r3, [r3]
     f9c:	mov	r0, r3
     fa0:	bl	798 <find_named_person@plt>
     fa4:	str	r0, [fp, #-16]
     fa8:	ldr	r3, [fp, #-16]
     fac:	cmp	r3, #0
     fb0:	bne	fd8 <mo_dehelper+0xf0>
     fb4:	ldr	r3, [fp, #4]
     fb8:	add	r3, r3, #4
     fbc:	ldr	r3, [r3]
     fc0:	ldr	r2, [pc, #216]	; 10a0 <mo_dehelper+0x1b8>
     fc4:	add	r2, pc, r2
     fc8:	ldr	r1, [pc, #212]	; 10a4 <mo_dehelper+0x1bc>
     fcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
     fd0:	bl	774 <sendto_one_numeric@plt>
     fd4:	b	1084 <mo_dehelper+0x19c>
     fd8:	ldr	r3, [fp, #-16]
     fdc:	ldrd	r2, [r3, #64]	; 0x40
     fe0:	mov	r0, #8192	; 0x2000
     fe4:	mov	r1, #0
     fe8:	and	r2, r2, r0
     fec:	and	r3, r3, r1
     ff0:	orrs	r3, r2, r3
     ff4:	beq	1018 <mo_dehelper+0x130>
     ff8:	ldr	r3, [fp, #-16]
     ffc:	ldrh	r3, [r3, #80]	; 0x50
    1000:	cmp	r3, #64	; 0x40
    1004:	bne	1018 <mo_dehelper+0x130>
    1008:	ldr	r1, [fp, #-16]
    100c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1010:	bl	1164 <do_dehelper>
    1014:	b	1084 <mo_dehelper+0x19c>
    1018:	ldr	r3, [fp, #-32]	; 0xffffffe0
    101c:	ldrb	r3, [r3, #396]	; 0x18c
    1020:	cmp	r3, #0
    1024:	beq	1034 <mo_dehelper+0x14c>
    1028:	ldr	r3, [fp, #-32]	; 0xffffffe0
    102c:	add	r2, r3, #396	; 0x18c
    1030:	b	103c <mo_dehelper+0x154>
    1034:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1038:	add	r2, r3, #88	; 0x58
    103c:	ldr	r3, [fp, #-16]
    1040:	ldr	r3, [r3, #32]
    1044:	add	r1, r3, #88	; 0x58
    1048:	ldr	r3, [fp, #-16]
    104c:	ldrb	r3, [r3, #396]	; 0x18c
    1050:	cmp	r3, #0
    1054:	beq	1064 <mo_dehelper+0x17c>
    1058:	ldr	r3, [fp, #-16]
    105c:	add	r3, r3, #396	; 0x18c
    1060:	b	106c <mo_dehelper+0x184>
    1064:	ldr	r3, [fp, #-16]
    1068:	add	r3, r3, #88	; 0x58
    106c:	str	r3, [sp]
    1070:	mov	r3, r1
    1074:	ldr	r1, [pc, #44]	; 10a8 <mo_dehelper+0x1c0>
    1078:	add	r1, pc, r1
    107c:	ldr	r0, [fp, #-16]
    1080:	bl	720 <sendto_one@plt>
    1084:	sub	sp, fp, #8
    1088:	pop	{r4, fp, pc}
    108c:	.word	0x000110f0
    1090:	.word	0x00000b0c
    1094:	.word	0x00000b1c
    1098:	.word	0x00000064
    109c:	.word	0x00000adc
    10a0:	.word	0x00000acc
    10a4:	.word	0x00000191
    10a8:	.word	0x00000a34

000010ac <me_dehelper>:
    10ac:	push	{fp, lr}
    10b0:	add	fp, sp, #4
    10b4:	sub	sp, sp, #24
    10b8:	str	r0, [fp, #-16]
    10bc:	str	r1, [fp, #-20]	; 0xffffffec
    10c0:	str	r2, [fp, #-24]	; 0xffffffe8
    10c4:	str	r3, [fp, #-28]	; 0xffffffe4
    10c8:	ldr	r3, [fp, #4]
    10cc:	add	r3, r3, #4
    10d0:	ldr	r3, [r3]
    10d4:	mov	r0, r3
    10d8:	bl	780 <find_person@plt>
    10dc:	str	r0, [fp, #-8]
    10e0:	ldr	r3, [fp, #-8]
    10e4:	cmp	r3, #0
    10e8:	bne	1110 <me_dehelper+0x64>
    10ec:	ldr	r3, [fp, #4]
    10f0:	add	r3, r3, #4
    10f4:	ldr	r3, [r3]
    10f8:	ldr	r2, [pc, #92]	; 115c <me_dehelper+0xb0>
    10fc:	add	r2, pc, r2
    1100:	ldr	r1, [pc, #88]	; 1160 <me_dehelper+0xb4>
    1104:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1108:	bl	774 <sendto_one_numeric@plt>
    110c:	b	1154 <me_dehelper+0xa8>
    1110:	ldr	r3, [fp, #-8]
    1114:	ldrd	r2, [r3, #64]	; 0x40
    1118:	mov	r0, #8192	; 0x2000
    111c:	mov	r1, #0
    1120:	and	r2, r2, r0
    1124:	and	r3, r3, r1
    1128:	orrs	r3, r2, r3
    112c:	beq	1150 <me_dehelper+0xa4>
    1130:	ldr	r3, [fp, #-8]
    1134:	ldrh	r3, [r3, #80]	; 0x50
    1138:	cmp	r3, #64	; 0x40
    113c:	bne	1150 <me_dehelper+0xa4>
    1140:	ldr	r1, [fp, #-8]
    1144:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1148:	bl	1164 <do_dehelper>
    114c:	b	1154 <me_dehelper+0xa8>
    1150:	nop			; (mov r0, r0)
    1154:	sub	sp, fp, #4
    1158:	pop	{fp, pc}
    115c:	.word	0x00000994
    1160:	.word	0x00000191

00001164 <do_dehelper>:
    1164:	push	{fp, lr}
    1168:	add	fp, sp, #4
    116c:	sub	sp, sp, #32
    1170:	str	r0, [fp, #-24]	; 0xffffffe8
    1174:	str	r1, [fp, #-28]	; 0xffffffe4
    1178:	ldr	r1, [pc, #184]	; 1238 <do_dehelper+0xd4>
    117c:	add	r1, pc, r1
    1180:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1184:	ldr	r3, [r3, #56]	; 0x38
    1188:	ldr	r2, [pc, #172]	; 123c <do_dehelper+0xd8>
    118c:	ldr	r2, [r1, r2]
    1190:	ldr	r2, [r2, #288]	; 0x120
    1194:	and	r3, r3, r2
    1198:	cmp	r3, #0
    119c:	beq	122c <do_dehelper+0xc8>
    11a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    11a4:	add	r2, r3, #88	; 0x58
    11a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    11ac:	add	r3, r3, #88	; 0x58
    11b0:	str	r3, [sp]
    11b4:	mov	r3, r2
    11b8:	ldr	r2, [pc, #128]	; 1240 <do_dehelper+0xdc>
    11bc:	add	r2, pc, r2
    11c0:	mov	r1, #256	; 0x100
    11c4:	mov	r0, #256	; 0x100
    11c8:	bl	738 <sendto_realops_snomask@plt>
    11cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    11d0:	add	r3, r3, #88	; 0x58
    11d4:	mov	r2, r3
    11d8:	ldr	r3, [pc, #100]	; 1244 <do_dehelper+0xe0>
    11dc:	add	r3, pc, r3
    11e0:	mov	r1, r3
    11e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    11e8:	bl	78c <sendto_one_notice@plt>
    11ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
    11f0:	add	r3, r3, #88	; 0x58
    11f4:	str	r3, [fp, #-16]
    11f8:	ldr	r3, [fp, #-16]
    11fc:	str	r3, [fp, #-20]	; 0xffffffec
    1200:	ldr	r3, [pc, #64]	; 1248 <do_dehelper+0xe4>
    1204:	add	r3, pc, r3
    1208:	str	r3, [fp, #-12]
    120c:	mov	r3, #0
    1210:	str	r3, [fp, #-8]
    1214:	sub	r3, fp, #20
    1218:	mov	r2, #3
    121c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1220:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1224:	bl	72c <user_mode@plt>
    1228:	b	1230 <do_dehelper+0xcc>
    122c:	nop			; (mov r0, r0)
    1230:	sub	sp, fp, #4
    1234:	pop	{fp, pc}
    1238:	.word	0x00010e7c
    123c:	.word	0x00000050
    1240:	.word	0x0000090c
    1244:	.word	0x00000908
    1248:	.word	0x00000904

0000124c <_modinit>:
    124c:	push	{r4, fp, lr}
    1250:	add	fp, sp, #8
    1254:	sub	sp, sp, #12
    1258:	ldr	r4, [pc, #172]	; 130c <_modinit+0xc0>
    125c:	add	r4, pc, r4
    1260:	bl	744 <find_umode_slot@plt>
    1264:	mov	r3, r0
    1268:	mov	r2, r3
    126c:	ldr	r3, [pc, #156]	; 1310 <_modinit+0xc4>
    1270:	ldr	r3, [r4, r3]
    1274:	str	r2, [r3, #288]	; 0x120
    1278:	bl	7bc <construct_umodebuf@plt>
    127c:	ldr	r3, [pc, #144]	; 1314 <_modinit+0xc8>
    1280:	ldr	r3, [r4, r3]
    1284:	ldr	r3, [r3]
    1288:	str	r3, [fp, #-16]
    128c:	b	12f0 <_modinit+0xa4>
    1290:	ldr	r3, [fp, #-16]
    1294:	ldr	r3, [r3]
    1298:	str	r3, [fp, #-20]	; 0xffffffec
    129c:	ldr	r3, [fp, #-20]	; 0xffffffec
    12a0:	ldrh	r3, [r3, #80]	; 0x50
    12a4:	cmp	r3, #64	; 0x40
    12a8:	bne	12e4 <_modinit+0x98>
    12ac:	ldr	r3, [fp, #-20]	; 0xffffffec
    12b0:	ldr	r3, [r3, #24]
    12b4:	cmp	r3, #0
    12b8:	beq	12e4 <_modinit+0x98>
    12bc:	ldr	r3, [fp, #-20]	; 0xffffffec
    12c0:	ldr	r3, [r3, #56]	; 0x38
    12c4:	ldr	r2, [pc, #68]	; 1310 <_modinit+0xc4>
    12c8:	ldr	r2, [r4, r2]
    12cc:	ldr	r2, [r2, #288]	; 0x120
    12d0:	and	r3, r3, r2
    12d4:	cmp	r3, #0
    12d8:	beq	12e4 <_modinit+0x98>
    12dc:	ldr	r0, [fp, #-20]	; 0xffffffec
    12e0:	bl	14e8 <helper_add>
    12e4:	ldr	r3, [fp, #-16]
    12e8:	ldr	r3, [r3, #8]
    12ec:	str	r3, [fp, #-16]
    12f0:	ldr	r3, [fp, #-16]
    12f4:	cmp	r3, #0
    12f8:	bne	1290 <_modinit+0x44>
    12fc:	mov	r3, #0
    1300:	mov	r0, r3
    1304:	sub	sp, fp, #8
    1308:	pop	{r4, fp, pc}
    130c:	.word	0x00010d9c
    1310:	.word	0x00000050
    1314:	.word	0x00000058

00001318 <_moddeinit>:
    1318:	push	{fp, lr}
    131c:	add	fp, sp, #4
    1320:	sub	sp, sp, #8
    1324:	ldr	r2, [pc, #164]	; 13d0 <_moddeinit+0xb8>
    1328:	add	r2, pc, r2
    132c:	ldr	r3, [pc, #160]	; 13d4 <_moddeinit+0xbc>
    1330:	ldr	r3, [r2, r3]
    1334:	mov	r2, #0
    1338:	str	r2, [r3, #288]	; 0x120
    133c:	bl	7bc <construct_umodebuf@plt>
    1340:	ldr	r3, [pc, #144]	; 13d8 <_moddeinit+0xc0>
    1344:	add	r3, pc, r3
    1348:	ldr	r3, [r3]
    134c:	str	r3, [fp, #-8]
    1350:	ldr	r3, [fp, #-8]
    1354:	cmp	r3, #0
    1358:	beq	1368 <_moddeinit+0x50>
    135c:	ldr	r3, [fp, #-8]
    1360:	ldr	r3, [r3, #8]
    1364:	b	136c <_moddeinit+0x54>
    1368:	mov	r3, #0
    136c:	str	r3, [fp, #-12]
    1370:	b	13b8 <_moddeinit+0xa0>
    1374:	ldr	r3, [pc, #96]	; 13dc <_moddeinit+0xc4>
    1378:	add	r3, pc, r3
    137c:	mov	r1, r3
    1380:	ldr	r0, [fp, #-8]
    1384:	bl	a90 <rb_dlinkDelete>
    1388:	ldr	r0, [fp, #-8]
    138c:	bl	750 <rb_free_rb_dlink_node@plt>
    1390:	ldr	r3, [fp, #-12]
    1394:	str	r3, [fp, #-8]
    1398:	ldr	r3, [fp, #-8]
    139c:	cmp	r3, #0
    13a0:	beq	13b0 <_moddeinit+0x98>
    13a4:	ldr	r3, [fp, #-8]
    13a8:	ldr	r3, [r3, #8]
    13ac:	b	13b4 <_moddeinit+0x9c>
    13b0:	mov	r3, #0
    13b4:	str	r3, [fp, #-12]
    13b8:	ldr	r3, [fp, #-8]
    13bc:	cmp	r3, #0
    13c0:	bne	1374 <_moddeinit+0x5c>
    13c4:	nop			; (mov r0, r0)
    13c8:	sub	sp, fp, #4
    13cc:	pop	{fp, pc}
    13d0:	.word	0x00010cd0
    13d4:	.word	0x00000050
    13d8:	.word	0x00010dec
    13dc:	.word	0x00010db8

000013e0 <h_hdl_stats_request>:
    13e0:	push	{fp, lr}
    13e4:	add	fp, sp, #4
    13e8:	sub	sp, sp, #32
    13ec:	str	r0, [fp, #-24]	; 0xffffffe8
    13f0:	mov	r3, #0
    13f4:	str	r3, [fp, #-12]
    13f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    13fc:	ldr	r3, [r3, #8]
    1400:	cmp	r3, #112	; 0x70
    1404:	bne	14d0 <h_hdl_stats_request+0xf0>
    1408:	ldr	r3, [pc, #204]	; 14dc <h_hdl_stats_request+0xfc>
    140c:	add	r3, pc, r3
    1410:	ldr	r3, [r3]
    1414:	str	r3, [fp, #-8]
    1418:	b	1498 <h_hdl_stats_request+0xb8>
    141c:	ldr	r3, [fp, #-8]
    1420:	ldr	r3, [r3]
    1424:	str	r3, [fp, #-16]
    1428:	ldr	r3, [fp, #-16]
    142c:	ldr	r3, [r3, #24]
    1430:	ldr	r3, [r3, #24]
    1434:	cmp	r3, #0
    1438:	bne	1488 <h_hdl_stats_request+0xa8>
    143c:	ldr	r3, [fp, #-12]
    1440:	add	r3, r3, #1
    1444:	str	r3, [fp, #-12]
    1448:	ldr	r3, [fp, #-24]	; 0xffffffe8
    144c:	ldr	r0, [r3]
    1450:	ldr	r3, [fp, #-16]
    1454:	add	r1, r3, #88	; 0x58
    1458:	ldr	r3, [fp, #-16]
    145c:	add	r3, r3, #152	; 0x98
    1460:	ldr	r2, [fp, #-16]
    1464:	add	r2, r2, #163	; 0xa3
    1468:	str	r2, [sp, #4]
    146c:	str	r3, [sp]
    1470:	mov	r3, r1
    1474:	ldr	r2, [pc, #100]	; 14e0 <h_hdl_stats_request+0x100>
    1478:	add	r2, pc, r2
    147c:	mov	r1, #249	; 0xf9
    1480:	bl	774 <sendto_one_numeric@plt>
    1484:	b	148c <h_hdl_stats_request+0xac>
    1488:	nop			; (mov r0, r0)
    148c:	ldr	r3, [fp, #-8]
    1490:	ldr	r3, [r3, #8]
    1494:	str	r3, [fp, #-8]
    1498:	ldr	r3, [fp, #-8]
    149c:	cmp	r3, #0
    14a0:	bne	141c <h_hdl_stats_request+0x3c>
    14a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    14a8:	ldr	r0, [r3]
    14ac:	ldr	r3, [fp, #-12]
    14b0:	ldr	r2, [pc, #44]	; 14e4 <h_hdl_stats_request+0x104>
    14b4:	add	r2, pc, r2
    14b8:	mov	r1, #249	; 0xf9
    14bc:	bl	774 <sendto_one_numeric@plt>
    14c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    14c4:	mov	r2, #1
    14c8:	str	r2, [r3, #12]
    14cc:	b	14d4 <h_hdl_stats_request+0xf4>
    14d0:	nop			; (mov r0, r0)
    14d4:	sub	sp, fp, #4
    14d8:	pop	{fp, pc}
    14dc:	.word	0x00010d24
    14e0:	.word	0x00000694
    14e4:	.word	0x00000668

000014e8 <helper_add>:
    14e8:	push	{fp, lr}
    14ec:	add	fp, sp, #4
    14f0:	sub	sp, sp, #8
    14f4:	str	r0, [fp, #-8]
    14f8:	ldr	r3, [pc, #68]	; 1544 <helper_add+0x5c>
    14fc:	add	r3, pc, r3
    1500:	mov	r1, r3
    1504:	ldr	r0, [fp, #-8]
    1508:	bl	e08 <rb_dlinkFind>
    150c:	mov	r3, r0
    1510:	cmp	r3, #0
    1514:	bne	1538 <helper_add+0x50>
    1518:	bl	768 <rb_make_rb_dlink_node@plt>
    151c:	mov	r1, r0
    1520:	ldr	r3, [pc, #32]	; 1548 <helper_add+0x60>
    1524:	add	r3, pc, r3
    1528:	mov	r2, r3
    152c:	ldr	r0, [fp, #-8]
    1530:	bl	93c <rb_dlinkAdd>
    1534:	b	153c <helper_add+0x54>
    1538:	nop			; (mov r0, r0)
    153c:	sub	sp, fp, #4
    1540:	pop	{fp, pc}
    1544:	.word	0x00010c34
    1548:	.word	0x00010c0c

0000154c <helper_delete>:
    154c:	push	{fp, lr}
    1550:	add	fp, sp, #4
    1554:	sub	sp, sp, #8
    1558:	str	r0, [fp, #-8]
    155c:	ldr	r3, [pc, #24]	; 157c <helper_delete+0x30>
    1560:	add	r3, pc, r3
    1564:	mov	r1, r3
    1568:	ldr	r0, [fp, #-8]
    156c:	bl	d44 <rb_dlinkFindDestroy>
    1570:	nop			; (mov r0, r0)
    1574:	sub	sp, fp, #4
    1578:	pop	{fp, pc}
    157c:	.word	0x00010bd0

00001580 <h_hdl_new_remote_user>:
    1580:	push	{fp, lr}
    1584:	add	fp, sp, #4
    1588:	sub	sp, sp, #8
    158c:	str	r0, [fp, #-8]
    1590:	ldr	r1, [pc, #52]	; 15cc <h_hdl_new_remote_user+0x4c>
    1594:	add	r1, pc, r1
    1598:	ldr	r3, [fp, #-8]
    159c:	ldr	r3, [r3, #56]	; 0x38
    15a0:	ldr	r2, [pc, #40]	; 15d0 <h_hdl_new_remote_user+0x50>
    15a4:	ldr	r2, [r1, r2]
    15a8:	ldr	r2, [r2, #288]	; 0x120
    15ac:	and	r3, r3, r2
    15b0:	cmp	r3, #0
    15b4:	beq	15c0 <h_hdl_new_remote_user+0x40>
    15b8:	ldr	r0, [fp, #-8]
    15bc:	bl	14e8 <helper_add>
    15c0:	nop			; (mov r0, r0)
    15c4:	sub	sp, fp, #4
    15c8:	pop	{fp, pc}
    15cc:	.word	0x00010a64
    15d0:	.word	0x00000050

000015d4 <recurse_client_exit>:
    15d4:	push	{fp, lr}
    15d8:	add	fp, sp, #4
    15dc:	sub	sp, sp, #16
    15e0:	str	r0, [fp, #-16]
    15e4:	ldr	r1, [pc, #228]	; 16d0 <recurse_client_exit+0xfc>
    15e8:	add	r1, pc, r1
    15ec:	ldr	r3, [fp, #-16]
    15f0:	ldrh	r3, [r3, #80]	; 0x50
    15f4:	cmp	r3, #64	; 0x40
    15f8:	bne	1638 <recurse_client_exit+0x64>
    15fc:	ldr	r3, [fp, #-16]
    1600:	ldr	r3, [r3, #24]
    1604:	cmp	r3, #0
    1608:	beq	1638 <recurse_client_exit+0x64>
    160c:	ldr	r3, [fp, #-16]
    1610:	ldr	r3, [r3, #56]	; 0x38
    1614:	ldr	r2, [pc, #184]	; 16d4 <recurse_client_exit+0x100>
    1618:	ldr	r2, [r1, r2]
    161c:	ldr	r2, [r2, #288]	; 0x120
    1620:	and	r3, r3, r2
    1624:	cmp	r3, #0
    1628:	beq	16c4 <recurse_client_exit+0xf0>
    162c:	ldr	r0, [fp, #-16]
    1630:	bl	154c <helper_delete>
    1634:	b	16c4 <recurse_client_exit+0xf0>
    1638:	ldr	r3, [fp, #-16]
    163c:	ldrh	r3, [r3, #80]	; 0x50
    1640:	cmp	r3, #32
    1644:	bne	16c4 <recurse_client_exit+0xf0>
    1648:	ldr	r3, [fp, #-16]
    164c:	ldr	r3, [r3, #28]
    1650:	ldr	r3, [r3, #48]	; 0x30
    1654:	str	r3, [fp, #-8]
    1658:	b	1678 <recurse_client_exit+0xa4>
    165c:	ldr	r3, [fp, #-8]
    1660:	ldr	r3, [r3]
    1664:	mov	r0, r3
    1668:	bl	15d4 <recurse_client_exit>
    166c:	ldr	r3, [fp, #-8]
    1670:	ldr	r3, [r3, #8]
    1674:	str	r3, [fp, #-8]
    1678:	ldr	r3, [fp, #-8]
    167c:	cmp	r3, #0
    1680:	bne	165c <recurse_client_exit+0x88>
    1684:	ldr	r3, [fp, #-16]
    1688:	ldr	r3, [r3, #28]
    168c:	ldr	r3, [r3, #36]	; 0x24
    1690:	str	r3, [fp, #-8]
    1694:	b	16b4 <recurse_client_exit+0xe0>
    1698:	ldr	r3, [fp, #-8]
    169c:	ldr	r3, [r3]
    16a0:	mov	r0, r3
    16a4:	bl	15d4 <recurse_client_exit>
    16a8:	ldr	r3, [fp, #-8]
    16ac:	ldr	r3, [r3, #8]
    16b0:	str	r3, [fp, #-8]
    16b4:	ldr	r3, [fp, #-8]
    16b8:	cmp	r3, #0
    16bc:	bne	1698 <recurse_client_exit+0xc4>
    16c0:	b	16c4 <recurse_client_exit+0xf0>
    16c4:	nop			; (mov r0, r0)
    16c8:	sub	sp, fp, #4
    16cc:	pop	{fp, pc}
    16d0:	.word	0x00010a10
    16d4:	.word	0x00000050

000016d8 <h_hdl_client_exit>:
    16d8:	push	{fp, lr}
    16dc:	add	fp, sp, #4
    16e0:	sub	sp, sp, #8
    16e4:	str	r0, [fp, #-8]
    16e8:	ldr	r3, [fp, #-8]
    16ec:	ldr	r3, [r3, #4]
    16f0:	mov	r0, r3
    16f4:	bl	15d4 <recurse_client_exit>
    16f8:	nop			; (mov r0, r0)
    16fc:	sub	sp, fp, #4
    1700:	pop	{fp, pc}

00001704 <h_hdl_umode_changed>:
    1704:	push	{r4, fp, lr}
    1708:	add	fp, sp, #8
    170c:	sub	sp, sp, #28
    1710:	str	r0, [fp, #-24]	; 0xffffffe8
    1714:	ldr	r4, [pc, #400]	; 18ac <h_hdl_umode_changed+0x1a8>
    1718:	add	r4, pc, r4
    171c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1720:	ldr	r3, [r3]
    1724:	str	r3, [fp, #-16]
    1728:	ldr	r3, [fp, #-24]	; 0xffffffe8
    172c:	ldr	r2, [r3, #4]
    1730:	ldr	r3, [fp, #-16]
    1734:	ldr	r3, [r3, #56]	; 0x38
    1738:	eor	r3, r3, r2
    173c:	ldr	r2, [pc, #364]	; 18b0 <h_hdl_umode_changed+0x1ac>
    1740:	ldr	r2, [r4, r2]
    1744:	ldr	r2, [r2, #288]	; 0x120
    1748:	and	r3, r3, r2
    174c:	cmp	r3, #0
    1750:	movne	r3, #1
    1754:	moveq	r3, #0
    1758:	strb	r3, [fp, #-17]	; 0xffffffef
    175c:	ldr	r3, [fp, #-16]
    1760:	ldr	r3, [r3, #56]	; 0x38
    1764:	ldr	r2, [pc, #324]	; 18b0 <h_hdl_umode_changed+0x1ac>
    1768:	ldr	r2, [r4, r2]
    176c:	ldr	r2, [r2, #288]	; 0x120
    1770:	and	r3, r3, r2
    1774:	cmp	r3, #0
    1778:	beq	1888 <h_hdl_umode_changed+0x184>
    177c:	ldr	r3, [fp, #-16]
    1780:	ldrd	r2, [r3, #64]	; 0x40
    1784:	mov	r0, #8192	; 0x2000
    1788:	mov	r1, #0
    178c:	and	r2, r2, r0
    1790:	and	r3, r3, r1
    1794:	orrs	r3, r2, r3
    1798:	beq	1870 <h_hdl_umode_changed+0x16c>
    179c:	ldr	r3, [fp, #-16]
    17a0:	ldrh	r3, [r3, #80]	; 0x50
    17a4:	cmp	r3, #64	; 0x40
    17a8:	bne	1870 <h_hdl_umode_changed+0x16c>
    17ac:	ldr	r3, [fp, #-16]
    17b0:	ldr	r3, [r3, #24]
    17b4:	cmp	r3, #0
    17b8:	beq	17fc <h_hdl_umode_changed+0xf8>
    17bc:	ldr	r3, [fp, #-16]
    17c0:	ldr	r3, [r3, #24]
    17c4:	ldr	r3, [r3, #36]	; 0x24
    17c8:	cmp	r3, #0
    17cc:	beq	17fc <h_hdl_umode_changed+0xf8>
    17d0:	ldr	r3, [fp, #-16]
    17d4:	ldr	r3, [r3, #24]
    17d8:	ldr	r3, [r3, #36]	; 0x24
    17dc:	ldr	r2, [pc, #208]	; 18b4 <h_hdl_umode_changed+0x1b0>
    17e0:	add	r2, pc, r2
    17e4:	mov	r1, r2
    17e8:	mov	r0, r3
    17ec:	bl	7a4 <privilegeset_in_set@plt>
    17f0:	mov	r3, r0
    17f4:	cmp	r3, #0
    17f8:	bne	1870 <h_hdl_umode_changed+0x16c>
    17fc:	ldr	r3, [fp, #-16]
    1800:	ldr	r3, [r3, #56]	; 0x38
    1804:	ldr	r2, [pc, #164]	; 18b0 <h_hdl_umode_changed+0x1ac>
    1808:	ldr	r2, [r4, r2]
    180c:	ldr	r2, [r2, #288]	; 0x120
    1810:	mvn	r2, r2
    1814:	and	r2, r2, r3
    1818:	ldr	r3, [fp, #-16]
    181c:	str	r2, [r3, #56]	; 0x38
    1820:	ldr	r3, [fp, #-16]
    1824:	add	r3, r3, #88	; 0x58
    1828:	ldr	r2, [pc, #136]	; 18b8 <h_hdl_umode_changed+0x1b4>
    182c:	add	r2, pc, r2
    1830:	str	r2, [sp]
    1834:	ldr	r2, [pc, #128]	; 18bc <h_hdl_umode_changed+0x1b8>
    1838:	ldr	r2, [r4, r2]
    183c:	add	r2, r2, #88	; 0x58
    1840:	ldr	r1, [pc, #120]	; 18c0 <h_hdl_umode_changed+0x1bc>
    1844:	add	r1, pc, r1
    1848:	ldr	r0, [fp, #-16]
    184c:	bl	720 <sendto_one@plt>
    1850:	ldrb	r3, [fp, #-17]	; 0xffffffef
    1854:	eor	r3, r3, #1
    1858:	uxtb	r3, r3
    185c:	cmp	r3, #0
    1860:	beq	18a0 <h_hdl_umode_changed+0x19c>
    1864:	ldr	r0, [fp, #-16]
    1868:	bl	154c <helper_delete>
    186c:	b	18a0 <h_hdl_umode_changed+0x19c>
    1870:	ldrb	r3, [fp, #-17]	; 0xffffffef
    1874:	cmp	r3, #0
    1878:	beq	18a4 <h_hdl_umode_changed+0x1a0>
    187c:	ldr	r0, [fp, #-16]
    1880:	bl	14e8 <helper_add>
    1884:	b	18a4 <h_hdl_umode_changed+0x1a0>
    1888:	ldrb	r3, [fp, #-17]	; 0xffffffef
    188c:	cmp	r3, #0
    1890:	beq	18a4 <h_hdl_umode_changed+0x1a0>
    1894:	ldr	r0, [fp, #-16]
    1898:	bl	154c <helper_delete>
    189c:	b	18a4 <h_hdl_umode_changed+0x1a0>
    18a0:	nop			; (mov r0, r0)
    18a4:	sub	sp, fp, #8
    18a8:	pop	{r4, fp, pc}
    18ac:	.word	0x000108e0
    18b0:	.word	0x00000050
    18b4:	.word	0x00000350
    18b8:	.word	0x00000304
    18bc:	.word	0x00000064
    18c0:	.word	0x00000218

000018c4 <h_hdl_whois>:
    18c4:	push	{fp, lr}
    18c8:	add	fp, sp, #4
    18cc:	sub	sp, sp, #16
    18d0:	str	r0, [fp, #-16]
    18d4:	ldr	r1, [pc, #140]	; 1968 <h_hdl_whois+0xa4>
    18d8:	add	r1, pc, r1
    18dc:	ldr	r3, [fp, #-16]
    18e0:	ldr	r3, [r3]
    18e4:	str	r3, [fp, #-8]
    18e8:	ldr	r3, [fp, #-16]
    18ec:	ldr	r3, [r3, #4]
    18f0:	str	r3, [fp, #-12]
    18f4:	ldr	r3, [fp, #-12]
    18f8:	ldr	r3, [r3, #56]	; 0x38
    18fc:	ldr	r2, [pc, #104]	; 196c <h_hdl_whois+0xa8>
    1900:	ldr	r2, [r1, r2]
    1904:	ldr	r2, [r2, #288]	; 0x120
    1908:	and	r3, r3, r2
    190c:	cmp	r3, #0
    1910:	beq	195c <h_hdl_whois+0x98>
    1914:	ldr	r3, [fp, #-12]
    1918:	ldr	r3, [r3, #24]
    191c:	ldr	r3, [r3, #24]
    1920:	cmp	r3, #0
    1924:	beq	1940 <h_hdl_whois+0x7c>
    1928:	ldr	r3, [fp, #-12]
    192c:	ldr	r3, [r3, #24]
    1930:	ldr	r3, [r3, #24]
    1934:	ldrb	r3, [r3]
    1938:	cmp	r3, #0
    193c:	bne	195c <h_hdl_whois+0x98>
    1940:	ldr	r3, [fp, #-12]
    1944:	add	r3, r3, #88	; 0x58
    1948:	ldr	r2, [pc, #32]	; 1970 <h_hdl_whois+0xac>
    194c:	add	r2, pc, r2
    1950:	ldr	r1, [pc, #28]	; 1974 <h_hdl_whois+0xb0>
    1954:	ldr	r0, [fp, #-8]
    1958:	bl	774 <sendto_one_numeric@plt>
    195c:	nop			; (mov r0, r0)
    1960:	sub	sp, fp, #4
    1964:	pop	{fp, pc}
    1968:	.word	0x00010720
    196c:	.word	0x00000050
    1970:	.word	0x000001f8
    1974:	.word	0x00000136

Disassembly of section .fini:

00001978 <_fini>:
    1978:	push	{r3, lr}
    197c:	pop	{r3, pc}
