
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_parser:     file format elf32-littlearm


Disassembly of section .init:

00012a78 <.init>:
   12a78:	push	{r3, lr}
   12a7c:	bl	12c0c <_start@@Base+0x3c>
   12a80:	pop	{r3, pc}

Disassembly of section .plt:

00012a84 <fopen@plt-0x14>:
   12a84:	push	{lr}		; (str lr, [sp, #-4]!)
   12a88:	ldr	lr, [pc, #4]	; 12a94 <fopen@plt-0x4>
   12a8c:	add	lr, pc, lr
   12a90:	ldr	pc, [lr, #8]!
   12a94:	andeq	r1, r3, ip, ror #10

00012a98 <fopen@plt>:
   12a98:	add	ip, pc, #0, 12
   12a9c:	add	ip, ip, #200704	; 0x31000
   12aa0:	ldr	pc, [ip, #1388]!	; 0x56c

00012aa4 <free@plt>:
   12aa4:	add	ip, pc, #0, 12
   12aa8:	add	ip, ip, #200704	; 0x31000
   12aac:	ldr	pc, [ip, #1380]!	; 0x564

00012ab0 <memcpy@plt>:
   12ab0:	add	ip, pc, #0, 12
   12ab4:	add	ip, ip, #200704	; 0x31000
   12ab8:	ldr	pc, [ip, #1372]!	; 0x55c

00012abc <ftell@plt>:
   12abc:	add	ip, pc, #0, 12
   12ac0:	add	ip, ip, #200704	; 0x31000
   12ac4:	ldr	pc, [ip, #1364]!	; 0x554

00012ac8 <rewind@plt>:
   12ac8:	add	ip, pc, #0, 12
   12acc:	add	ip, ip, #200704	; 0x31000
   12ad0:	ldr	pc, [ip, #1356]!	; 0x54c

00012ad4 <__isinff@plt>:
   12ad4:	add	ip, pc, #0, 12
   12ad8:	add	ip, ip, #200704	; 0x31000
   12adc:	ldr	pc, [ip, #1348]!	; 0x544

00012ae0 <__isinf@plt>:
   12ae0:	add	ip, pc, #0, 12
   12ae4:	add	ip, ip, #200704	; 0x31000
   12ae8:	ldr	pc, [ip, #1340]!	; 0x53c

00012aec <realloc@plt>:
   12aec:	add	ip, pc, #0, 12
   12af0:	add	ip, ip, #200704	; 0x31000
   12af4:	ldr	pc, [ip, #1332]!	; 0x534

00012af8 <fwrite@plt>:
   12af8:	add	ip, pc, #0, 12
   12afc:	add	ip, ip, #200704	; 0x31000
   12b00:	ldr	pc, [ip, #1324]!	; 0x52c

00012b04 <malloc@plt>:
   12b04:	add	ip, pc, #0, 12
   12b08:	add	ip, ip, #200704	; 0x31000
   12b0c:	ldr	pc, [ip, #1316]!	; 0x524

00012b10 <__libc_start_main@plt>:
   12b10:	add	ip, pc, #0, 12
   12b14:	add	ip, ip, #200704	; 0x31000
   12b18:	ldr	pc, [ip, #1308]!	; 0x51c

00012b1c <__gmon_start__@plt>:
   12b1c:	add	ip, pc, #0, 12
   12b20:	add	ip, ip, #200704	; 0x31000
   12b24:	ldr	pc, [ip, #1300]!	; 0x514

00012b28 <exit@plt>:
   12b28:	add	ip, pc, #0, 12
   12b2c:	add	ip, ip, #200704	; 0x31000
   12b30:	ldr	pc, [ip, #1292]!	; 0x50c

00012b34 <bcmp@plt>:
   12b34:	add	ip, pc, #0, 12
   12b38:	add	ip, ip, #200704	; 0x31000
   12b3c:	ldr	pc, [ip, #1284]!	; 0x504

00012b40 <strlen@plt>:
   12b40:	add	ip, pc, #0, 12
   12b44:	add	ip, ip, #200704	; 0x31000
   12b48:	ldr	pc, [ip, #1276]!	; 0x4fc

00012b4c <fprintf@plt>:
   12b4c:	add	ip, pc, #0, 12
   12b50:	add	ip, ip, #200704	; 0x31000
   12b54:	ldr	pc, [ip, #1268]!	; 0x4f4

00012b58 <posix_memalign@plt>:
   12b58:	add	ip, pc, #0, 12
   12b5c:	add	ip, ip, #200704	; 0x31000
   12b60:	ldr	pc, [ip, #1260]!	; 0x4ec

00012b64 <memset@plt>:
   12b64:	add	ip, pc, #0, 12
   12b68:	add	ip, ip, #200704	; 0x31000
   12b6c:	ldr	pc, [ip, #1252]!	; 0x4e4

00012b70 <strtod@plt>:
   12b70:	add	ip, pc, #0, 12
   12b74:	add	ip, ip, #200704	; 0x31000
   12b78:	ldr	pc, [ip, #1244]!	; 0x4dc

00012b7c <memchr@plt>:
   12b7c:	add	ip, pc, #0, 12
   12b80:	add	ip, ip, #200704	; 0x31000
   12b84:	ldr	pc, [ip, #1236]!	; 0x4d4

00012b88 <fclose@plt>:
   12b88:	add	ip, pc, #0, 12
   12b8c:	add	ip, ip, #200704	; 0x31000
   12b90:	ldr	pc, [ip, #1228]!	; 0x4cc

00012b94 <fputc@plt>:
   12b94:	add	ip, pc, #0, 12
   12b98:	add	ip, ip, #200704	; 0x31000
   12b9c:	ldr	pc, [ip, #1220]!	; 0x4c4

00012ba0 <fread_unlocked@plt>:
   12ba0:	add	ip, pc, #0, 12
   12ba4:	add	ip, ip, #200704	; 0x31000
   12ba8:	ldr	pc, [ip, #1212]!	; 0x4bc

00012bac <fseek@plt>:
   12bac:	add	ip, pc, #0, 12
   12bb0:	add	ip, ip, #200704	; 0x31000
   12bb4:	ldr	pc, [ip, #1204]!	; 0x4b4

00012bb8 <abort@plt>:
   12bb8:	add	ip, pc, #0, 12
   12bbc:	add	ip, ip, #200704	; 0x31000
   12bc0:	ldr	pc, [ip, #1196]!	; 0x4ac

00012bc4 <__assert_fail@plt>:
   12bc4:	add	ip, pc, #0, 12
   12bc8:	add	ip, ip, #200704	; 0x31000
   12bcc:	ldr	pc, [ip, #1188]!	; 0x4a4

Disassembly of section .text:

00012bd0 <_start@@Base>:
   12bd0:	mov	fp, #0
   12bd4:	mov	lr, #0
   12bd8:	pop	{r1}		; (ldr r1, [sp], #4)
   12bdc:	mov	r2, sp
   12be0:	push	{r2}		; (str r2, [sp, #-4]!)
   12be4:	push	{r0}		; (str r0, [sp, #-4]!)
   12be8:	ldr	ip, [pc, #16]	; 12c00 <_start@@Base+0x30>
   12bec:	push	{ip}		; (str ip, [sp, #-4]!)
   12bf0:	ldr	r0, [pc, #12]	; 12c04 <_start@@Base+0x34>
   12bf4:	ldr	r3, [pc, #12]	; 12c08 <_start@@Base+0x38>
   12bf8:	bl	12b10 <__libc_start_main@plt>
   12bfc:	bl	12bb8 <abort@plt>
   12c00:	andeq	r0, r3, r8, lsl #28
   12c04:	andeq	r3, r1, r4, lsl #5
   12c08:	andeq	r0, r3, r8, lsr #27
   12c0c:	ldr	r3, [pc, #20]	; 12c28 <_start@@Base+0x58>
   12c10:	ldr	r2, [pc, #20]	; 12c2c <_start@@Base+0x5c>
   12c14:	add	r3, pc, r3
   12c18:	ldr	r2, [r3, r2]
   12c1c:	cmp	r2, #0
   12c20:	bxeq	lr
   12c24:	b	12b1c <__gmon_start__@plt>
   12c28:	andeq	r1, r3, r4, ror #7
   12c2c:	andeq	r0, r0, r4, ror r0
   12c30:	ldr	r0, [pc, #24]	; 12c50 <_start@@Base+0x80>
   12c34:	ldr	r3, [pc, #24]	; 12c54 <_start@@Base+0x84>
   12c38:	cmp	r3, r0
   12c3c:	bxeq	lr
   12c40:	ldr	r3, [pc, #16]	; 12c58 <_start@@Base+0x88>
   12c44:	cmp	r3, #0
   12c48:	bxeq	lr
   12c4c:	bx	r3
   12c50:	andeq	r4, r4, r0, asr r3
   12c54:	andeq	r4, r4, r0, asr r3
   12c58:	andeq	r0, r0, r0
   12c5c:	ldr	r0, [pc, #36]	; 12c88 <_start@@Base+0xb8>
   12c60:	ldr	r1, [pc, #36]	; 12c8c <_start@@Base+0xbc>
   12c64:	sub	r1, r1, r0
   12c68:	asr	r1, r1, #2
   12c6c:	add	r1, r1, r1, lsr #31
   12c70:	asrs	r1, r1, #1
   12c74:	bxeq	lr
   12c78:	ldr	r3, [pc, #16]	; 12c90 <_start@@Base+0xc0>
   12c7c:	cmp	r3, #0
   12c80:	bxeq	lr
   12c84:	bx	r3
   12c88:	andeq	r4, r4, r0, asr r3
   12c8c:	andeq	r4, r4, r0, asr r3
   12c90:	andeq	r0, r0, r0
   12c94:	push	{r4, lr}
   12c98:	ldr	r4, [pc, #24]	; 12cb8 <_start@@Base+0xe8>
   12c9c:	ldrb	r3, [r4]
   12ca0:	cmp	r3, #0
   12ca4:	popne	{r4, pc}
   12ca8:	bl	12c30 <_start@@Base+0x60>
   12cac:	mov	r3, #1
   12cb0:	strb	r3, [r4]
   12cb4:	pop	{r4, pc}
   12cb8:	andeq	r4, r4, r8, asr r3
   12cbc:	b	12c5c <_start@@Base+0x8c>

00012cc0 <verify_parse@@Base>:
   12cc0:	push	{fp, lr}
   12cc4:	mov	fp, sp
   12cc8:	cmp	r0, #0
   12ccc:	beq	12da4 <verify_parse@@Base+0xe4>
   12cd0:	ldr	r1, [r0, #4]
   12cd4:	movw	r2, #20301	; 0x4f4d
   12cd8:	movt	r2, #21326	; 0x534e
   12cdc:	cmp	r1, r2
   12ce0:	bne	12da4 <verify_parse@@Base+0xe4>
   12ce4:	ldr	r1, [r0]
   12ce8:	ldr	r2, [r0, r1]!
   12cec:	mov	r1, r0
   12cf0:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   12cf4:	cmp	r2, #5
   12cf8:	bls	12dc4 <verify_parse@@Base+0x104>
   12cfc:	ldrh	r1, [r1, #4]
   12d00:	cmp	r1, #0
   12d04:	beq	12dc4 <verify_parse@@Base+0x104>
   12d08:	add	r0, r0, r1
   12d0c:	vmov.f32	s2, #112	; 0x3f800000  1.0
   12d10:	vldr	s0, [r0]
   12d14:	vcmp.f32	s0, s2
   12d18:	vmrs	APSR_nzcv, fpscr
   12d1c:	bne	12dd8 <verify_parse@@Base+0x118>
   12d20:	vldr	s0, [r0, #4]
   12d24:	vmov.f32	s2, #0	; 0x40000000  2.0
   12d28:	vcmp.f32	s0, s2
   12d2c:	vmrs	APSR_nzcv, fpscr
   12d30:	bne	12dec <verify_parse@@Base+0x12c>
   12d34:	vldr	s0, [r0, #8]
   12d38:	vmov.f32	s2, #8	; 0x40400000  3.0
   12d3c:	vcmp.f32	s0, s2
   12d40:	vmrs	APSR_nzcv, fpscr
   12d44:	bne	12e00 <verify_parse@@Base+0x140>
   12d48:	vldr	d16, [r0, #16]
   12d4c:	vmov.f64	d17, #8	; 0x40400000  3.0
   12d50:	vcmp.f64	d16, d17
   12d54:	vmrs	APSR_nzcv, fpscr
   12d58:	bne	12e14 <verify_parse@@Base+0x154>
   12d5c:	ldrb	r1, [r0, #24]
   12d60:	cmp	r1, #2
   12d64:	bne	12e28 <verify_parse@@Base+0x168>
   12d68:	ldrh	r1, [r0, #26]
   12d6c:	cmp	r1, #5
   12d70:	bne	12e3c <verify_parse@@Base+0x17c>
   12d74:	ldrb	r0, [r0, #28]
   12d78:	cmp	r0, #6
   12d7c:	moveq	r0, #0
   12d80:	popeq	{fp, pc}
   12d84:	movw	r0, #9364	; 0x2494
   12d88:	movw	r1, #3617	; 0xe21
   12d8c:	movw	r3, #3699	; 0xe73
   12d90:	mov	r2, #54	; 0x36
   12d94:	movt	r0, #3
   12d98:	movt	r1, #3
   12d9c:	movt	r3, #3
   12da0:	bl	12bc4 <__assert_fail@plt>
   12da4:	movw	r0, #3955	; 0xf73
   12da8:	movw	r1, #3993	; 0xf99
   12dac:	movw	r3, #4088	; 0xff8
   12db0:	mov	r2, #696	; 0x2b8
   12db4:	movt	r0, #3
   12db8:	movt	r1, #3
   12dbc:	movt	r3, #3
   12dc0:	bl	12bc4 <__assert_fail@plt>
   12dc4:	movw	r0, #9364	; 0x2494
   12dc8:	movw	r1, #3617	; 0xe21
   12dcc:	movw	r3, #3699	; 0xe73
   12dd0:	mov	r2, #45	; 0x2d
   12dd4:	b	12d94 <verify_parse@@Base+0xd4>
   12dd8:	movw	r0, #9364	; 0x2494
   12ddc:	movw	r1, #3617	; 0xe21
   12de0:	movw	r3, #3699	; 0xe73
   12de4:	mov	r2, #46	; 0x2e
   12de8:	b	12d94 <verify_parse@@Base+0xd4>
   12dec:	movw	r0, #9364	; 0x2494
   12df0:	movw	r1, #3617	; 0xe21
   12df4:	movw	r3, #3699	; 0xe73
   12df8:	mov	r2, #47	; 0x2f
   12dfc:	b	12d94 <verify_parse@@Base+0xd4>
   12e00:	movw	r0, #9364	; 0x2494
   12e04:	movw	r1, #3617	; 0xe21
   12e08:	movw	r3, #3699	; 0xe73
   12e0c:	mov	r2, #48	; 0x30
   12e10:	b	12d94 <verify_parse@@Base+0xd4>
   12e14:	movw	r0, #9364	; 0x2494
   12e18:	movw	r1, #3617	; 0xe21
   12e1c:	movw	r3, #3699	; 0xe73
   12e20:	mov	r2, #49	; 0x31
   12e24:	b	12d94 <verify_parse@@Base+0xd4>
   12e28:	movw	r0, #9364	; 0x2494
   12e2c:	movw	r1, #3617	; 0xe21
   12e30:	movw	r3, #3699	; 0xe73
   12e34:	mov	r2, #50	; 0x32
   12e38:	b	12d94 <verify_parse@@Base+0xd4>
   12e3c:	movw	r0, #9364	; 0x2494
   12e40:	movw	r1, #3617	; 0xe21
   12e44:	movw	r3, #3699	; 0xe73
   12e48:	mov	r2, #53	; 0x35
   12e4c:	b	12d94 <verify_parse@@Base+0xd4>

00012e50 <test_parse@@Base>:
   12e50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e54:	add	fp, sp, #28
   12e58:	sub	sp, sp, #316	; 0x13c
   12e5c:	add	r8, sp, #12
   12e60:	mov	r0, r8
   12e64:	bl	28900 <flatcc_builder_init@@Base>
   12e68:	movw	r9, #16512	; 0x4080
   12e6c:	movw	r1, #4176	; 0x1050
   12e70:	movt	r9, #4
   12e74:	movt	r1, #3
   12e78:	ldr	r0, [r9]
   12e7c:	bl	12a98 <fopen@plt>
   12e80:	cmp	r0, #0
   12e84:	beq	13018 <test_parse@@Base+0x1c8>
   12e88:	mov	r1, #0
   12e8c:	mov	r2, #2
   12e90:	mov	r7, r0
   12e94:	bl	12bac <fseek@plt>
   12e98:	mov	r0, r7
   12e9c:	bl	12abc <ftell@plt>
   12ea0:	cmp	r0, #10240	; 0x2800
   12ea4:	bhi	13010 <test_parse@@Base+0x1c0>
   12ea8:	mov	r5, r0
   12eac:	mov	r0, r7
   12eb0:	bl	12ac8 <rewind@plt>
   12eb4:	cmp	r5, #0
   12eb8:	mov	r0, r5
   12ebc:	movweq	r0, #1
   12ec0:	bl	12b04 <malloc@plt>
   12ec4:	cmp	r0, #0
   12ec8:	beq	13010 <test_parse@@Base+0x1c0>
   12ecc:	mov	r4, r0
   12ed0:	mov	r1, #0
   12ed4:	mov	r6, r1
   12ed8:	add	r0, r4, r1
   12edc:	sub	r2, r5, r1
   12ee0:	mov	r1, #1
   12ee4:	mov	r3, r7
   12ee8:	bl	12ba0 <fread_unlocked@plt>
   12eec:	add	r1, r0, r6
   12ef0:	cmp	r0, #0
   12ef4:	bne	12ed4 <test_parse@@Base+0x84>
   12ef8:	mov	r0, r7
   12efc:	bl	12b88 <fclose@plt>
   12f00:	cmp	r5, r6
   12f04:	bne	13004 <test_parse@@Base+0x1b4>
   12f08:	vmov.i32	q8, #0	; 0x00000000
   12f0c:	sub	r0, fp, #100	; 0x64
   12f10:	mov	r7, #0
   12f14:	add	r6, r4, r5
   12f18:	mov	r2, #0
   12f1c:	mov	r3, #0
   12f20:	add	r1, r0, #12
   12f24:	add	r0, r0, #28
   12f28:	vst1.32	{d16-d17}, [r1]
   12f2c:	movw	r1, #3612	; 0xe1c
   12f30:	vst1.32	{d16-d17}, [r0]
   12f34:	mov	r0, #1
   12f38:	str	r4, [fp, #-96]	; 0xffffffa0
   12f3c:	str	r8, [fp, #-100]	; 0xffffff9c
   12f40:	str	r7, [fp, #-92]	; 0xffffffa4
   12f44:	movt	r1, #3
   12f48:	str	r0, [fp, #-84]	; 0xffffffac
   12f4c:	mov	r0, r8
   12f50:	str	r4, [fp, #-64]	; 0xffffffc0
   12f54:	str	r6, [fp, #-68]	; 0xffffffbc
   12f58:	str	r4, [fp, #-72]	; 0xffffffb8
   12f5c:	bl	292cc <flatcc_builder_start_buffer@@Base>
   12f60:	cmp	r0, #0
   12f64:	bne	12fa0 <test_parse@@Base+0x150>
   12f68:	sub	r0, fp, #100	; 0x64
   12f6c:	sub	r3, fp, #52	; 0x34
   12f70:	mov	r1, r4
   12f74:	mov	r2, r6
   12f78:	bl	13300 <main@@Base+0x7c>
   12f7c:	ldr	r7, [fp, #-76]	; 0xffffffb4
   12f80:	cmp	r7, #0
   12f84:	bne	12fa0 <test_parse@@Base+0x150>
   12f88:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12f8c:	add	r0, sp, #12
   12f90:	bl	294bc <flatcc_builder_end_buffer@@Base>
   12f94:	cmp	r0, #0
   12f98:	bne	13044 <test_parse@@Base+0x1f4>
   12f9c:	ldr	r7, [fp, #-76]	; 0xffffffb4
   12fa0:	movw	r0, #17232	; 0x4350
   12fa4:	ldr	r8, [r9]
   12fa8:	ldr	r5, [fp, #-96]	; 0xffffffa0
   12fac:	ldr	r9, [fp, #-84]	; 0xffffffac
   12fb0:	ldr	r6, [fp, #-64]	; 0xffffffc0
   12fb4:	movt	r0, #4
   12fb8:	ldr	sl, [r0]
   12fbc:	mov	r0, r7
   12fc0:	bl	2ce9c <flatcc_json_parser_error_string@@Base>
   12fc4:	sub	r1, r6, r5
   12fc8:	str	r0, [sp, #4]
   12fcc:	mov	r0, sl
   12fd0:	mov	r2, r8
   12fd4:	mov	r3, r9
   12fd8:	add	r1, r1, #1
   12fdc:	str	r1, [sp]
   12fe0:	movw	r1, #3860	; 0xf14
   12fe4:	movt	r1, #3
   12fe8:	bl	12b4c <fprintf@plt>
   12fec:	mvn	r5, #0
   12ff0:	mov	r0, r4
   12ff4:	bl	12aa4 <free@plt>
   12ff8:	add	r0, sp, #12
   12ffc:	bl	28aa0 <flatcc_builder_clear@@Base>
   13000:	b	13038 <test_parse@@Base+0x1e8>
   13004:	mov	r0, r4
   13008:	bl	12aa4 <free@plt>
   1300c:	b	13018 <test_parse@@Base+0x1c8>
   13010:	mov	r0, r7
   13014:	bl	12b88 <fclose@plt>
   13018:	movw	r0, #17232	; 0x4350
   1301c:	ldr	r2, [r9]
   13020:	movw	r1, #3724	; 0xe8c
   13024:	movt	r0, #4
   13028:	movt	r1, #3
   1302c:	ldr	r0, [r0]
   13030:	bl	12b4c <fprintf@plt>
   13034:	mvn	r5, #0
   13038:	mov	r0, r5
   1303c:	sub	sp, fp, #28
   13040:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13044:	movw	r0, #17232	; 0x4350
   13048:	str	r4, [fp, #-60]	; 0xffffffc4
   1304c:	ldr	r2, [r9]
   13050:	movw	r1, #3760	; 0xeb0
   13054:	movt	r0, #4
   13058:	ldr	r3, [fp, #-84]	; 0xffffffac
   1305c:	movt	r1, #3
   13060:	ldr	r0, [r0]
   13064:	bl	12b4c <fprintf@plt>
   13068:	add	r0, sp, #12
   1306c:	sub	r1, fp, #56	; 0x38
   13070:	bl	2c2f0 <flatcc_builder_finalize_aligned_buffer@@Base>
   13074:	movw	r9, #17236	; 0x4354
   13078:	movw	r1, #4190	; 0x105e
   1307c:	movw	r2, #3794	; 0xed2
   13080:	ldr	r6, [fp, #-56]	; 0xffffffc8
   13084:	mov	sl, r0
   13088:	movt	r9, #4
   1308c:	movt	r1, #3
   13090:	movt	r2, #3
   13094:	ldr	r7, [r9]
   13098:	mov	r0, r7
   1309c:	bl	12b4c <fprintf@plt>
   130a0:	cmp	r6, #0
   130a4:	beq	13184 <test_parse@@Base+0x334>
   130a8:	mov	r9, #0
   130ac:	ands	r8, r9, #15
   130b0:	beq	130cc <test_parse@@Base+0x27c>
   130b4:	tst	r9, #7
   130b8:	bne	130fc <test_parse@@Base+0x2ac>
   130bc:	mov	r0, #32
   130c0:	mov	r1, r7
   130c4:	bl	12b94 <fputc@plt>
   130c8:	b	130fc <test_parse@@Base+0x2ac>
   130cc:	cmp	r9, #0
   130d0:	beq	130e8 <test_parse@@Base+0x298>
   130d4:	movw	r1, #4195	; 0x1063
   130d8:	mov	r0, r7
   130dc:	sub	r2, fp, #52	; 0x34
   130e0:	movt	r1, #3
   130e4:	bl	12b4c <fprintf@plt>
   130e8:	movw	r1, #4201	; 0x1069
   130ec:	mov	r0, r7
   130f0:	mov	r2, r9
   130f4:	movt	r1, #3
   130f8:	bl	12b4c <fprintf@plt>
   130fc:	ldrb	r2, [sl, r9]
   13100:	movw	r1, #4209	; 0x1071
   13104:	mov	r0, r7
   13108:	movt	r1, #3
   1310c:	bl	12b4c <fprintf@plt>
   13110:	ldrb	r0, [sl, r9]
   13114:	add	r9, r9, #1
   13118:	sub	r1, r0, #32
   1311c:	uxtb	r1, r1
   13120:	cmp	r1, #94	; 0x5e
   13124:	sub	r1, fp, #52	; 0x34
   13128:	movwhi	r0, #46	; 0x2e
   1312c:	cmp	r6, r9
   13130:	strb	r0, [r1, r8]
   13134:	add	r0, r1, r8
   13138:	mov	r1, #0
   1313c:	strb	r1, [r0, #1]
   13140:	bne	130ac <test_parse@@Base+0x25c>
   13144:	movw	r9, #17236	; 0x4354
   13148:	tst	r6, #15
   1314c:	movt	r9, #4
   13150:	beq	13184 <test_parse@@Base+0x334>
   13154:	movw	r8, #4245	; 0x1095
   13158:	add	r6, r6, #1
   1315c:	movt	r8, #3
   13160:	mov	r0, r8
   13164:	mov	r1, #3
   13168:	mov	r2, #1
   1316c:	mov	r3, r7
   13170:	bl	12af8 <fwrite@plt>
   13174:	add	r0, r6, #1
   13178:	tst	r6, #15
   1317c:	mov	r6, r0
   13180:	bne	13160 <test_parse@@Base+0x310>
   13184:	movw	r1, #4195	; 0x1063
   13188:	sub	r2, fp, #52	; 0x34
   1318c:	mov	r0, r7
   13190:	movt	r1, #3
   13194:	bl	12b4c <fprintf@plt>
   13198:	movw	r0, #17232	; 0x4350
   1319c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   131a0:	movw	r1, #3825	; 0xef1
   131a4:	mov	r2, r5
   131a8:	movt	r0, #4
   131ac:	movt	r1, #3
   131b0:	ldr	r0, [r0]
   131b4:	bl	12b4c <fprintf@plt>
   131b8:	mov	r0, sl
   131bc:	bl	12cc0 <verify_parse@@Base>
   131c0:	ldr	r5, [r9]
   131c4:	movw	r1, #4215	; 0x1077
   131c8:	movw	r2, #3818	; 0xeea
   131cc:	ldr	r7, [fp, #-56]	; 0xffffffc8
   131d0:	movt	r1, #3
   131d4:	movt	r2, #3
   131d8:	mov	r0, r5
   131dc:	bl	12b4c <fprintf@plt>
   131e0:	cmp	r7, #0
   131e4:	beq	1324c <test_parse@@Base+0x3fc>
   131e8:	movw	r8, #4244	; 0x1094
   131ec:	movw	r6, #4249	; 0x1099
   131f0:	mov	r9, #0
   131f4:	movt	r8, #3
   131f8:	movt	r6, #3
   131fc:	tst	r9, #15
   13200:	beq	1321c <test_parse@@Base+0x3cc>
   13204:	tst	r9, #7
   13208:	bne	13230 <test_parse@@Base+0x3e0>
   1320c:	movw	r0, #4245	; 0x1095
   13210:	mov	r1, #3
   13214:	movt	r0, #3
   13218:	b	13224 <test_parse@@Base+0x3d4>
   1321c:	mov	r0, r8
   13220:	mov	r1, #4
   13224:	mov	r2, #1
   13228:	mov	r3, r5
   1322c:	bl	12af8 <fwrite@plt>
   13230:	ldrb	r2, [sl, r9]
   13234:	mov	r0, r5
   13238:	mov	r1, r6
   1323c:	bl	12b4c <fprintf@plt>
   13240:	add	r9, r9, #1
   13244:	cmp	r7, r9
   13248:	bne	131fc <test_parse@@Base+0x3ac>
   1324c:	movw	r0, #4258	; 0x10a2
   13250:	mov	r1, #4
   13254:	mov	r2, #1
   13258:	mov	r3, r5
   1325c:	movt	r0, #3
   13260:	bl	12af8 <fwrite@plt>
   13264:	add	r0, sp, #12
   13268:	bl	28a94 <flatcc_builder_reset@@Base>
   1326c:	mov	r5, #0
   13270:	cmp	sl, #0
   13274:	beq	12ff0 <test_parse@@Base+0x1a0>
   13278:	mov	r0, sl
   1327c:	bl	2c3f0 <flatcc_builder_aligned_free@@Base>
   13280:	b	12ff0 <test_parse@@Base+0x1a0>

00013284 <main@@Base>:
   13284:	push	{r4, r5, r6, sl, fp, lr}
   13288:	add	fp, sp, #16
   1328c:	movw	r6, #17232	; 0x4350
   13290:	mov	r5, r0
   13294:	movw	r0, #3874	; 0xf22
   13298:	mov	r4, r1
   1329c:	mov	r1, #16
   132a0:	mov	r2, #1
   132a4:	movt	r6, #4
   132a8:	movt	r0, #3
   132ac:	ldr	r3, [r6]
   132b0:	bl	12af8 <fwrite@plt>
   132b4:	sub	r0, r5, #1
   132b8:	cmp	r0, #2
   132bc:	bcs	132e0 <main@@Base+0x5c>
   132c0:	cmp	r5, #2
   132c4:	bne	132d8 <main@@Base+0x54>
   132c8:	ldr	r0, [r4, #4]
   132cc:	movw	r1, #16512	; 0x4080
   132d0:	movt	r1, #4
   132d4:	str	r0, [r1]
   132d8:	pop	{r4, r5, r6, sl, fp, lr}
   132dc:	b	12e50 <test_parse@@Base>
   132e0:	ldr	r3, [r6]
   132e4:	movw	r0, #3891	; 0xf33
   132e8:	mov	r1, #63	; 0x3f
   132ec:	mov	r2, #1
   132f0:	movt	r0, #3
   132f4:	bl	12af8 <fwrite@plt>
   132f8:	mov	r0, #1
   132fc:	bl	12b28 <exit@plt>
   13300:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13304:	add	fp, sp, #28
   13308:	sub	sp, sp, #4
   1330c:	vpush	{d8-d9}
   13310:	sub	sp, sp, #80	; 0x50
   13314:	mov	r8, r0
   13318:	mov	r0, #0
   1331c:	mov	r4, r1
   13320:	mov	r1, #36	; 0x24
   13324:	mov	sl, r3
   13328:	mov	r5, r2
   1332c:	str	r0, [r3]
   13330:	ldr	r0, [r8]
   13334:	bl	2a328 <flatcc_builder_start_table@@Base>
   13338:	cmp	r0, #0
   1333c:	beq	1336c <main@@Base+0xe8>
   13340:	mov	r0, r8
   13344:	mov	r1, r4
   13348:	mov	r2, r5
   1334c:	mov	r3, #33	; 0x21
   13350:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   13354:	mov	r7, r0
   13358:	mov	r0, r7
   1335c:	sub	sp, fp, #48	; 0x30
   13360:	vpop	{d8-d9}
   13364:	add	sp, sp, #4
   13368:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1336c:	add	r0, sp, #48	; 0x30
   13370:	mov	r1, r4
   13374:	mov	r2, r5
   13378:	mov	r3, #1
   1337c:	str	r0, [sp]
   13380:	mov	r0, r8
   13384:	bl	2f4ac <flatcc_json_parser_prepare_unions@@Base>
   13388:	cmp	r0, r5
   1338c:	beq	13340 <main@@Base+0xbc>
   13390:	cmp	r4, r5
   13394:	beq	133c8 <main@@Base+0x144>
   13398:	ldrb	r0, [r4]
   1339c:	cmp	r0, #123	; 0x7b
   133a0:	bne	133c8 <main@@Base+0x144>
   133a4:	add	r1, r4, #1
   133a8:	sub	r0, r5, r1
   133ac:	cmp	r0, #2
   133b0:	blt	13460 <main@@Base+0x1dc>
   133b4:	ldrb	r0, [r1]
   133b8:	cmp	r0, #32
   133bc:	bls	13450 <main@@Base+0x1cc>
   133c0:	mov	r4, r1
   133c4:	b	13470 <main@@Base+0x1ec>
   133c8:	mov	r0, r8
   133cc:	mov	r1, r4
   133d0:	mov	r2, r5
   133d4:	mov	r3, #21
   133d8:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   133dc:	mov	r4, r0
   133e0:	ldr	r0, [r8, #24]
   133e4:	cmp	r0, #0
   133e8:	bne	13340 <main@@Base+0xbc>
   133ec:	ldr	r0, [r8]
   133f0:	mov	r1, #3
   133f4:	bl	2ab0c <flatcc_builder_check_required_field@@Base>
   133f8:	cmp	r0, #0
   133fc:	beq	13434 <main@@Base+0x1b0>
   13400:	ldr	r3, [sp, #48]	; 0x30
   13404:	mov	r0, r8
   13408:	mov	r1, r4
   1340c:	mov	r2, r5
   13410:	bl	2f530 <flatcc_json_parser_finalize_unions@@Base>
   13414:	mov	r7, r0
   13418:	ldr	r0, [r8]
   1341c:	bl	2ac88 <flatcc_builder_end_table@@Base>
   13420:	cmp	r0, #0
   13424:	mov	r4, r7
   13428:	str	r0, [sl]
   1342c:	bne	13358 <main@@Base+0xd4>
   13430:	b	13340 <main@@Base+0xbc>
   13434:	mov	r0, r8
   13438:	mov	r1, r4
   1343c:	mov	r2, r5
   13440:	mov	r3, #29
   13444:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   13448:	mov	r4, r0
   1344c:	b	13340 <main@@Base+0xbc>
   13450:	bne	13460 <main@@Base+0x1dc>
   13454:	ldrb	r0, [r4, #2]!
   13458:	cmp	r0, #32
   1345c:	bhi	13470 <main@@Base+0x1ec>
   13460:	mov	r0, r8
   13464:	mov	r2, r5
   13468:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1346c:	mov	r4, r0
   13470:	cmp	r4, r5
   13474:	mov	r2, r5
   13478:	beq	134b4 <main@@Base+0x230>
   1347c:	ldrb	r0, [r4]
   13480:	cmp	r0, #125	; 0x7d
   13484:	bne	134b0 <main@@Base+0x22c>
   13488:	add	r1, r4, #1
   1348c:	sub	r0, r5, r1
   13490:	cmp	r0, #2
   13494:	blt	1cda8 <main@@Base+0x9b24>
   13498:	ldrb	r0, [r1]
   1349c:	cmp	r0, #32
   134a0:	bhi	1cd6c <main@@Base+0x9ae8>
   134a4:	bne	1cda8 <main@@Base+0x9b24>
   134a8:	ldrb	r0, [r4, #2]!
   134ac:	b	1cda0 <main@@Base+0x9b1c>
   134b0:	mov	r2, r4
   134b4:	add	r0, r8, #12
   134b8:	vldr	s18, [pc, #888]	; 13838 <main@@Base+0x5b4>
   134bc:	movw	lr, #29556	; 0x7374
   134c0:	vmov.f32	s16, #8	; 0x40400000  3.0
   134c4:	str	r5, [sp, #44]	; 0x2c
   134c8:	str	r8, [sp, #36]	; 0x24
   134cc:	str	sl, [sp, #40]	; 0x28
   134d0:	str	r0, [sp, #32]
   134d4:	movw	r0, #13407	; 0x345f
   134d8:	movt	lr, #29797	; 0x7465
   134dc:	movt	r0, #29494	; 0x7336
   134e0:	sub	r0, r0, #512	; 0x200
   134e4:	sub	r0, r0, #196608	; 0x30000
   134e8:	str	r0, [sp, #28]
   134ec:	cmp	r2, r5
   134f0:	mov	r9, r5
   134f4:	beq	13550 <main@@Base+0x2cc>
   134f8:	ldrb	r0, [r2]
   134fc:	cmp	r0, #46	; 0x2e
   13500:	beq	1351c <main@@Base+0x298>
   13504:	cmp	r0, #34	; 0x22
   13508:	bne	13540 <main@@Base+0x2bc>
   1350c:	ldr	r0, [sp, #32]
   13510:	mov	r1, #0
   13514:	add	r9, r2, #1
   13518:	b	1354c <main@@Base+0x2c8>
   1351c:	mov	r1, r2
   13520:	mov	r0, r8
   13524:	mov	r2, r5
   13528:	mov	r3, #5
   1352c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   13530:	movw	lr, #29556	; 0x7374
   13534:	mov	r9, r0
   13538:	movt	lr, #29797	; 0x7465
   1353c:	b	13550 <main@@Base+0x2cc>
   13540:	ldr	r0, [sp, #32]
   13544:	mov	r1, #1
   13548:	mov	r9, r2
   1354c:	str	r1, [r0]
   13550:	sub	sl, r5, r9
   13554:	mov	r0, #8
   13558:	cmp	sl, #8
   1355c:	movcc	r0, sl
   13560:	sub	r2, r0, #1
   13564:	cmp	r2, #7
   13568:	bhi	14810 <main@@Base+0x158c>
   1356c:	add	r0, pc, #32
   13570:	mov	r8, #0
   13574:	mov	ip, #0
   13578:	mov	r4, #0
   1357c:	mov	r1, #0
   13580:	mov	r3, #0
   13584:	mov	r6, #0
   13588:	mov	r7, #0
   1358c:	mov	r5, #0
   13590:	ldr	pc, [r0, r2, lsl #2]
   13594:	strdeq	r3, [r1], -r8
   13598:	strdeq	r3, [r1], -r0
   1359c:	andeq	r3, r1, r8, ror #11
   135a0:	andeq	r3, r1, r0, ror #11
   135a4:	ldrdeq	r3, [r1], -r4
   135a8:	andeq	r3, r1, r8, asr #11
   135ac:			; <UNDEFINED> instruction: 0x000135b8
   135b0:			; <UNDEFINED> instruction: 0x000135b4
   135b4:	ldrb	ip, [r9, #7]
   135b8:	ldrb	r0, [r9, #6]
   135bc:	mov	r4, r8
   135c0:	orr	r0, ip, r0, lsl #8
   135c4:	mov	r8, r0
   135c8:	ldrb	r0, [r9, #5]
   135cc:	mov	r1, r4
   135d0:	orr	r8, r8, r0, lsl #16
   135d4:	ldrb	r0, [r9, #4]
   135d8:	mov	r3, r1
   135dc:	orr	r8, r8, r0, lsl #24
   135e0:	ldrb	r0, [r9, #3]
   135e4:	orr	r6, r0, r3
   135e8:	ldrb	r0, [r9, #2]
   135ec:	orr	r7, r6, r0, lsl #8
   135f0:	ldrb	r0, [r9, #1]
   135f4:	orr	r5, r7, r0, lsl #16
   135f8:	ldrb	r0, [r9]
   135fc:	movw	r1, #29281	; 0x7261
   13600:	movt	r1, #24946	; 0x6172
   13604:	subs	r1, r8, r1
   13608:	orr	r0, r5, r0, lsl #24
   1360c:	sbcs	r1, r0, lr
   13610:	bcs	136bc <main@@Base+0x438>
   13614:	movw	r1, #28004	; 0x6d64
   13618:	movt	r1, #28257	; 0x6e61
   1361c:	cmp	r0, r1
   13620:	bhi	1383c <main@@Base+0x5b8>
   13624:	movw	r1, #25975	; 0x6577
   13628:	ldr	r5, [sp, #44]	; 0x2c
   1362c:	movt	r1, #26220	; 0x666c
   13630:	cmp	r0, r1
   13634:	bhi	13948 <main@@Base+0x6c4>
   13638:	movw	r1, #27759	; 0x6c6f
   1363c:	movt	r1, #25455	; 0x636f
   13640:	eor	r2, r0, r1
   13644:	and	r1, r8, #-16777216	; 0xff000000
   13648:	eor	r3, r1, #1912602624	; 0x72000000
   1364c:	orrs	r2, r3, r2
   13650:	beq	141e4 <main@@Base+0xf60>
   13654:	movw	r2, #25965	; 0x656d
   13658:	ldr	r8, [sp, #36]	; 0x24
   1365c:	eor	r1, r1, #2030043136	; 0x79000000
   13660:	movt	r2, #25966	; 0x656e
   13664:	eor	r0, r0, r2
   13668:	orrs	r0, r1, r0
   1366c:	bne	14810 <main@@Base+0x158c>
   13670:	cmp	sl, #6
   13674:	ldr	sl, [sp, #40]	; 0x28
   13678:	mov	r1, r9
   1367c:	blt	156ec <main@@Base+0x2468>
   13680:	ldr	r1, [sp, #32]
   13684:	mov	r2, r9
   13688:	ldrb	r0, [r2, #5]!
   1368c:	ldr	r1, [r1]
   13690:	cmp	r1, #0
   13694:	beq	14934 <main@@Base+0x16b0>
   13698:	cmp	r0, #33	; 0x21
   1369c:	bcc	136ac <main@@Base+0x428>
   136a0:	cmp	r0, #58	; 0x3a
   136a4:	mov	r1, r9
   136a8:	bne	156ec <main@@Base+0x2468>
   136ac:	ldr	r0, [sp, #32]
   136b0:	mov	r1, #0
   136b4:	str	r1, [r0]
   136b8:	b	14944 <main@@Base+0x16c0>
   136bc:	movw	r1, #0
   136c0:	movt	r1, #26163	; 0x6633
   136c4:	subs	r1, r8, r1
   136c8:	sbcs	r1, r0, lr
   136cc:	bcs	138c8 <main@@Base+0x644>
   136d0:	movw	r1, #29281	; 0x7261
   136d4:	ldr	r5, [sp, #44]	; 0x2c
   136d8:	movt	r1, #24946	; 0x6172
   136dc:	eor	r2, r8, r1
   136e0:	eor	r1, r0, lr
   136e4:	orrs	r2, r2, r1
   136e8:	bne	139c4 <main@@Base+0x740>
   136ec:	add	sl, r9, #8
   136f0:	mov	r0, #8
   136f4:	sub	ip, r5, sl
   136f8:	cmp	ip, #8
   136fc:	movcc	r0, ip
   13700:	sub	r6, r0, #1
   13704:	cmp	r6, #7
   13708:	bhi	167ac <main@@Base+0x3528>
   1370c:	add	r7, pc, #32
   13710:	mov	r1, #0
   13714:	mov	lr, #0
   13718:	mov	r8, #0
   1371c:	mov	r4, #0
   13720:	mov	r3, #0
   13724:	mov	r5, #0
   13728:	mov	r0, #0
   1372c:	mov	r2, #0
   13730:	ldr	pc, [r7, r6, lsl #2]
   13734:	muleq	r1, r8, r7
   13738:	muleq	r1, r0, r7
   1373c:	andeq	r3, r1, r8, lsl #15
   13740:	andeq	r3, r1, r0, lsl #15
   13744:	andeq	r3, r1, r4, ror r7
   13748:	andeq	r3, r1, r8, ror #14
   1374c:	andeq	r3, r1, r8, asr r7
   13750:	andeq	r3, r1, r4, asr r7
   13754:	ldrb	lr, [r9, #15]
   13758:	ldrb	r0, [r9, #14]
   1375c:	mov	r8, r1
   13760:	orr	r0, lr, r0, lsl #8
   13764:	mov	r1, r0
   13768:	ldrb	r0, [r9, #13]
   1376c:	mov	r4, r8
   13770:	orr	r1, r1, r0, lsl #16
   13774:	ldrb	r0, [r9, #12]
   13778:	mov	r3, r4
   1377c:	orr	r1, r1, r0, lsl #24
   13780:	ldrb	r0, [r9, #11]
   13784:	orr	r5, r0, r3
   13788:	ldrb	r0, [r9, #10]
   1378c:	orr	r0, r5, r0, lsl #8
   13790:	ldrb	r2, [r9, #9]
   13794:	orr	r2, r0, r2, lsl #16
   13798:	ldrb	r0, [sl]
   1379c:	movw	r7, #26227	; 0x6673
   137a0:	movt	r7, #31087	; 0x796f
   137a4:	orr	r2, r2, r0, lsl #24
   137a8:	movw	r0, #26989	; 0x696d
   137ac:	movt	r0, #29810	; 0x7472
   137b0:	subs	r0, r0, r1
   137b4:	sbcs	r0, r7, r2
   137b8:	bcc	14118 <main@@Base+0xe94>
   137bc:	movw	r0, #29797	; 0x7465
   137c0:	ldr	r5, [sp, #44]	; 0x2c
   137c4:	eor	r3, r2, r7
   137c8:	movt	r0, #28530	; 0x6f72
   137cc:	eor	r0, r1, r0
   137d0:	orrs	r0, r0, r3
   137d4:	beq	145c4 <main@@Base+0x1340>
   137d8:	movw	r0, #27763	; 0x6c73
   137dc:	movt	r0, #28527	; 0x6f6f
   137e0:	eor	r0, r1, r0
   137e4:	movw	r1, #26210	; 0x6662
   137e8:	movt	r1, #31087	; 0x796f
   137ec:	eor	r1, r2, r1
   137f0:	orrs	r0, r0, r1
   137f4:	bne	167ac <main@@Base+0x3528>
   137f8:	cmp	ip, #9
   137fc:	blt	167ac <main@@Base+0x3528>
   13800:	ldr	r2, [sp, #32]
   13804:	mov	r1, r9
   13808:	ldrb	r0, [r1, #16]!
   1380c:	ldr	r2, [r2]
   13810:	cmp	r2, #0
   13814:	beq	14c18 <main@@Base+0x1994>
   13818:	cmp	r0, #33	; 0x21
   1381c:	bcc	13828 <main@@Base+0x5a4>
   13820:	cmp	r0, #58	; 0x3a
   13824:	bne	167ac <main@@Base+0x3528>
   13828:	ldr	r0, [sp, #32]
   1382c:	mov	r2, #0
   13830:	str	r2, [r0]
   13834:	b	14c24 <main@@Base+0x19a0>
   13838:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   1383c:	movw	r1, #29555	; 0x7373
   13840:	ldr	r5, [sp, #44]	; 0x2c
   13844:	movt	r1, #29797	; 0x7465
   13848:	cmp	r0, r1
   1384c:	bhi	13a90 <main@@Base+0x80c>
   13850:	movw	r3, #24430	; 0x5f6e
   13854:	movw	r2, #29285	; 0x7265
   13858:	movt	r3, #28276	; 0x6e74
   1385c:	movt	r2, #28769	; 0x7061
   13860:	subs	r1, r8, r3
   13864:	sbcs	r1, r0, r2
   13868:	bcs	13c28 <main@@Base+0x9a4>
   1386c:	movw	r1, #28005	; 0x6d65
   13870:	movt	r1, #28257	; 0x6e61
   13874:	teq	r0, r1
   13878:	bne	1480c <main@@Base+0x1588>
   1387c:	ldr	r8, [sp, #36]	; 0x24
   13880:	cmp	sl, #5
   13884:	mov	r1, r9
   13888:	blt	15954 <main@@Base+0x26d0>
   1388c:	ldr	r1, [sp, #32]
   13890:	mov	r2, r9
   13894:	ldrb	r0, [r2, #4]!
   13898:	ldr	r1, [r1]
   1389c:	cmp	r1, #0
   138a0:	beq	14a04 <main@@Base+0x1780>
   138a4:	cmp	r0, #33	; 0x21
   138a8:	bcc	138b8 <main@@Base+0x634>
   138ac:	cmp	r0, #58	; 0x3a
   138b0:	mov	r1, r9
   138b4:	bne	15954 <main@@Base+0x26d0>
   138b8:	ldr	r0, [sp, #32]
   138bc:	mov	r1, #0
   138c0:	str	r1, [r0]
   138c4:	b	14a14 <main@@Base+0x1790>
   138c8:	movw	r2, #29544	; 0x7368
   138cc:	ldr	r5, [sp, #44]	; 0x2c
   138d0:	movt	r2, #26721	; 0x6861
   138d4:	subs	r1, r8, r2
   138d8:	sbcs	r1, r0, lr
   138dc:	bcs	13aec <main@@Base+0x868>
   138e0:	movw	r1, #0
   138e4:	bfc	r8, #0, #16
   138e8:	eor	r0, r0, lr
   138ec:	movt	r1, #26163	; 0x6633
   138f0:	eor	r1, r8, r1
   138f4:	orrs	r0, r1, r0
   138f8:	bne	1480c <main@@Base+0x1588>
   138fc:	ldr	r8, [sp, #36]	; 0x24
   13900:	cmp	sl, #7
   13904:	mov	r7, r9
   13908:	blt	150ec <main@@Base+0x1e68>
   1390c:	ldr	r2, [sp, #32]
   13910:	mov	r1, r9
   13914:	ldrb	r0, [r1, #6]!
   13918:	ldr	r2, [r2]
   1391c:	cmp	r2, #0
   13920:	beq	14888 <main@@Base+0x1604>
   13924:	cmp	r0, #33	; 0x21
   13928:	bcc	13938 <main@@Base+0x6b4>
   1392c:	cmp	r0, #58	; 0x3a
   13930:	mov	r7, r9
   13934:	bne	150ec <main@@Base+0x1e68>
   13938:	ldr	r0, [sp, #32]
   1393c:	mov	r2, #0
   13940:	str	r2, [r0]
   13944:	b	14898 <main@@Base+0x1614>
   13948:	movw	r1, #65535	; 0xffff
   1394c:	movw	r2, #30309	; 0x7665
   13950:	movw	r3, #28530	; 0x6f72
   13954:	movt	r1, #26735	; 0x686f
   13958:	movt	r2, #26990	; 0x696e
   1395c:	movt	r3, #28276	; 0x6e74
   13960:	cmp	r0, r1
   13964:	bhi	13dfc <main@@Base+0xb78>
   13968:	movw	r1, #25976	; 0x6578
   1396c:	movt	r1, #26220	; 0x666c
   13970:	teq	r0, r1
   13974:	bne	1480c <main@@Base+0x1588>
   13978:	ldr	r8, [sp, #36]	; 0x24
   1397c:	cmp	sl, #5
   13980:	mov	r4, r9
   13984:	blt	159ac <main@@Base+0x2728>
   13988:	ldr	r2, [sp, #32]
   1398c:	mov	r1, r9
   13990:	ldrb	r0, [r1, #4]!
   13994:	ldr	r2, [r2]
   13998:	cmp	r2, #0
   1399c:	beq	14a34 <main@@Base+0x17b0>
   139a0:	cmp	r0, #33	; 0x21
   139a4:	bcc	139b4 <main@@Base+0x730>
   139a8:	cmp	r0, #58	; 0x3a
   139ac:	mov	r4, r9
   139b0:	bne	159ac <main@@Base+0x2728>
   139b4:	ldr	r0, [sp, #32]
   139b8:	mov	r2, #0
   139bc:	str	r2, [r0]
   139c0:	b	14a44 <main@@Base+0x17c0>
   139c4:	movw	r2, #28788	; 0x7074
   139c8:	movt	r2, #25965	; 0x656d
   139cc:	subs	r2, r8, r2
   139d0:	sbcs	r2, r0, lr
   139d4:	bcs	13e68 <main@@Base+0xbe4>
   139d8:	movw	r0, #28524	; 0x6f6c
   139dc:	movt	r0, #25199	; 0x626f
   139e0:	eor	r0, r8, r0
   139e4:	orrs	r0, r0, r1
   139e8:	beq	14574 <main@@Base+0x12f0>
   139ec:	movw	r0, #29541	; 0x7365
   139f0:	movt	r0, #25185	; 0x6261
   139f4:	eor	r0, r8, r0
   139f8:	orrs	r0, r0, r1
   139fc:	bne	1480c <main@@Base+0x1588>
   13a00:	add	r7, r9, #8
   13a04:	ldr	r8, [sp, #36]	; 0x24
   13a08:	ldr	sl, [sp, #40]	; 0x28
   13a0c:	mov	r2, #8
   13a10:	sub	r0, r5, r7
   13a14:	cmp	r0, #8
   13a18:	movcc	r2, r0
   13a1c:	sub	r1, r2, #2
   13a20:	cmp	r1, #7
   13a24:	bcs	14a94 <main@@Base+0x1810>
   13a28:	ldrb	r1, [r9, #9]
   13a2c:	lsl	r2, r1, #16
   13a30:	mov	r1, #0
   13a34:	ldrb	r3, [r7]
   13a38:	orr	r2, r2, r3, lsl #24
   13a3c:	movw	r3, #0
   13a40:	movt	r3, #13876	; 0x3634
   13a44:	eor	r2, r2, r3
   13a48:	orrs	r1, r1, r2
   13a4c:	bne	1b160 <main@@Base+0x7edc>
   13a50:	cmp	r0, #3
   13a54:	blt	1b160 <main@@Base+0x7edc>
   13a58:	ldr	r2, [sp, #32]
   13a5c:	mov	r1, r9
   13a60:	ldrb	r0, [r1, #10]!
   13a64:	ldr	r2, [r2]
   13a68:	cmp	r2, #0
   13a6c:	beq	14f48 <main@@Base+0x1cc4>
   13a70:	cmp	r0, #33	; 0x21
   13a74:	bcc	13a80 <main@@Base+0x7fc>
   13a78:	cmp	r0, #58	; 0x3a
   13a7c:	bne	1b160 <main@@Base+0x7edc>
   13a80:	ldr	r0, [sp, #32]
   13a84:	mov	r2, #0
   13a88:	str	r2, [r0]
   13a8c:	b	14f54 <main@@Base+0x1cd0>
   13a90:	and	r6, r8, #-16777216	; 0xff000000
   13a94:	eor	r4, r0, lr
   13a98:	eor	r1, r6, #872415232	; 0x34000000
   13a9c:	orrs	r1, r1, r4
   13aa0:	bne	13f00 <main@@Base+0xc7c>
   13aa4:	cmp	sl, #6
   13aa8:	mov	r7, r9
   13aac:	blt	151b0 <main@@Base+0x1f2c>
   13ab0:	ldr	r2, [sp, #32]
   13ab4:	mov	r1, r9
   13ab8:	ldrb	r0, [r1, #5]!
   13abc:	ldr	r2, [r2]
   13ac0:	cmp	r2, #0
   13ac4:	beq	148b8 <main@@Base+0x1634>
   13ac8:	cmp	r0, #33	; 0x21
   13acc:	bcc	13adc <main@@Base+0x858>
   13ad0:	cmp	r0, #58	; 0x3a
   13ad4:	mov	r7, r9
   13ad8:	bne	151b0 <main@@Base+0x1f2c>
   13adc:	ldr	r0, [sp, #32]
   13ae0:	mov	r2, #0
   13ae4:	str	r2, [r0]
   13ae8:	b	148c8 <main@@Base+0x1644>
   13aec:	eor	r2, r8, r2
   13af0:	eor	r1, r0, lr
   13af4:	orrs	r2, r2, r1
   13af8:	bne	13f50 <main@@Base+0xccc>
   13afc:	add	sl, r9, #8
   13b00:	mov	r0, #8
   13b04:	sub	ip, r5, sl
   13b08:	cmp	ip, #8
   13b0c:	movcc	r0, ip
   13b10:	sub	r7, r0, #1
   13b14:	cmp	r7, #7
   13b18:	bhi	167ac <main@@Base+0x3528>
   13b1c:	add	r4, pc, #32
   13b20:	mov	r1, #0
   13b24:	mov	lr, #0
   13b28:	mov	r8, #0
   13b2c:	mov	r6, #0
   13b30:	mov	r3, #0
   13b34:	mov	r5, #0
   13b38:	mov	r0, #0
   13b3c:	mov	r2, #0
   13b40:	ldr	pc, [r4, r7, lsl #2]
   13b44:	andeq	r3, r1, r8, lsr #23
   13b48:	andeq	r3, r1, r0, lsr #23
   13b4c:	muleq	r1, r8, fp
   13b50:	muleq	r1, r0, fp
   13b54:	andeq	r3, r1, r4, lsl #23
   13b58:	andeq	r3, r1, r8, ror fp
   13b5c:	andeq	r3, r1, r8, ror #22
   13b60:	andeq	r3, r1, r4, ror #22
   13b64:	ldrb	lr, [r9, #15]
   13b68:	ldrb	r0, [r9, #14]
   13b6c:	mov	r8, r1
   13b70:	orr	r0, lr, r0, lsl #8
   13b74:	mov	r1, r0
   13b78:	ldrb	r0, [r9, #13]
   13b7c:	mov	r6, r8
   13b80:	orr	r1, r1, r0, lsl #16
   13b84:	ldrb	r0, [r9, #12]
   13b88:	mov	r3, r6
   13b8c:	orr	r1, r1, r0, lsl #24
   13b90:	ldrb	r0, [r9, #11]
   13b94:	orr	r5, r0, r3
   13b98:	ldrb	r0, [r9, #10]
   13b9c:	orr	r0, r5, r0, lsl #8
   13ba0:	ldrb	r2, [r9, #9]
   13ba4:	orr	r2, r0, r2, lsl #16
   13ba8:	ldrb	r0, [sl]
   13bac:	movw	r3, #30257	; 0x7631
   13bb0:	movt	r3, #26222	; 0x666e
   13bb4:	orr	r2, r2, r0, lsl #24
   13bb8:	subs	r0, r1, r3
   13bbc:	movw	r0, #13407	; 0x345f
   13bc0:	movt	r0, #29494	; 0x7336
   13bc4:	sbcs	r0, r2, r0
   13bc8:	bcs	144ec <main@@Base+0x1268>
   13bcc:	eor	r0, r1, r3
   13bd0:	ldr	r1, [sp, #28]
   13bd4:	ldr	r5, [sp, #44]	; 0x2c
   13bd8:	eor	r1, r2, r1
   13bdc:	orrs	r0, r0, r1
   13be0:	bne	167ac <main@@Base+0x3528>
   13be4:	ldr	r8, [sp, #36]	; 0x24
   13be8:	cmp	ip, #9
   13bec:	blt	17ab0 <main@@Base+0x482c>
   13bf0:	ldr	r2, [sp, #32]
   13bf4:	mov	r1, r9
   13bf8:	ldrb	r0, [r1, #16]!
   13bfc:	ldr	r2, [r2]
   13c00:	cmp	r2, #0
   13c04:	beq	14cd8 <main@@Base+0x1a54>
   13c08:	cmp	r0, #33	; 0x21
   13c0c:	bcc	13c18 <main@@Base+0x994>
   13c10:	cmp	r0, #58	; 0x3a
   13c14:	bne	17ab0 <main@@Base+0x482c>
   13c18:	ldr	r0, [sp, #32]
   13c1c:	mov	r2, #0
   13c20:	str	r2, [r0]
   13c24:	b	14ce4 <main@@Base+0x1a60>
   13c28:	eor	r1, r8, r3
   13c2c:	eor	r2, r0, r2
   13c30:	orrs	r1, r1, r2
   13c34:	bne	14234 <main@@Base+0xfb0>
   13c38:	add	r1, r9, #8
   13c3c:	mov	r2, #8
   13c40:	ldr	sl, [sp, #40]	; 0x28
   13c44:	sub	r0, r5, r1
   13c48:	cmp	r0, #8
   13c4c:	movcs	r0, r2
   13c50:	sub	r7, r0, #1
   13c54:	cmp	r7, #7
   13c58:	bhi	14568 <main@@Base+0x12e4>
   13c5c:	add	r0, pc, #32
   13c60:	mov	r8, #0
   13c64:	mov	ip, #0
   13c68:	mov	lr, #0
   13c6c:	mov	r6, #0
   13c70:	mov	r3, #0
   13c74:	mov	r4, #0
   13c78:	mov	r2, #0
   13c7c:	mov	r5, #0
   13c80:	ldr	pc, [r0, r7, lsl #2]
   13c84:	andeq	r3, r1, r8, ror #25
   13c88:	andeq	r3, r1, r0, ror #25
   13c8c:	ldrdeq	r3, [r1], -r8
   13c90:	ldrdeq	r3, [r1], -r0
   13c94:	andeq	r3, r1, r4, asr #25
   13c98:			; <UNDEFINED> instruction: 0x00013cb8
   13c9c:	andeq	r3, r1, r8, lsr #25
   13ca0:	andeq	r3, r1, r4, lsr #25
   13ca4:	ldrb	ip, [r9, #15]
   13ca8:	ldrb	r0, [r9, #14]
   13cac:	mov	lr, r8
   13cb0:	orr	r0, ip, r0, lsl #8
   13cb4:	mov	r8, r0
   13cb8:	ldrb	r0, [r9, #13]
   13cbc:	mov	r6, lr
   13cc0:	orr	r8, r8, r0, lsl #16
   13cc4:	ldrb	r0, [r9, #12]
   13cc8:	mov	r3, r6
   13ccc:	orr	r8, r8, r0, lsl #24
   13cd0:	ldrb	r0, [r9, #11]
   13cd4:	orr	r4, r0, r3
   13cd8:	ldrb	r0, [r9, #10]
   13cdc:	orr	r2, r4, r0, lsl #8
   13ce0:	ldrb	r0, [r9, #9]
   13ce4:	orr	r5, r2, r0, lsl #16
   13ce8:	ldrb	r2, [r1]
   13cec:	movw	r0, #25445	; 0x6365
   13cf0:	movw	r3, #25971	; 0x6573
   13cf4:	movt	r0, #28769	; 0x7061
   13cf8:	movt	r3, #24941	; 0x616d
   13cfc:	eor	r0, r8, r0
   13d00:	orr	r2, r5, r2, lsl #24
   13d04:	ldr	r5, [sp, #44]	; 0x2c
   13d08:	eor	r2, r2, r3
   13d0c:	orrs	r0, r0, r2
   13d10:	bne	14568 <main@@Base+0x12e4>
   13d14:	add	r8, r9, #16
   13d18:	mov	r1, #8
   13d1c:	sub	r0, r5, r8
   13d20:	cmp	r0, #8
   13d24:	movcc	r1, r0
   13d28:	sub	r3, r1, #1
   13d2c:	cmp	r3, #7
   13d30:	bhi	18908 <main@@Base+0x5684>
   13d34:	add	r7, pc, #20
   13d38:	mov	r1, #0
   13d3c:	mov	r2, #0
   13d40:	mov	r6, #0
   13d44:	mov	r5, #0
   13d48:	mov	r4, #0
   13d4c:	ldr	pc, [r7, r3, lsl #2]
   13d50:	muleq	r1, r4, sp
   13d54:	andeq	r3, r1, ip, lsl #27
   13d58:	andeq	r3, r1, r4, lsl #27
   13d5c:	andeq	r3, r1, r8, ror sp
   13d60:	andeq	r3, r1, r0, ror sp
   13d64:	andeq	r3, r1, r0, ror sp
   13d68:	andeq	r3, r1, r0, ror sp
   13d6c:	andeq	r3, r1, r0, ror sp
   13d70:	ldrb	r2, [r9, #20]
   13d74:	lsl	r2, r2, #24
   13d78:	ldrb	r3, [r9, #19]
   13d7c:	orr	r6, r3, r1
   13d80:	mov	r1, r2
   13d84:	ldrb	r2, [r9, #18]
   13d88:	orr	r5, r6, r2, lsl #8
   13d8c:	ldrb	r2, [r9, #17]
   13d90:	orr	r4, r5, r2, lsl #16
   13d94:	ldrb	r2, [r8]
   13d98:	movw	r3, #25971	; 0x6573
   13d9c:	ldr	r5, [sp, #44]	; 0x2c
   13da0:	and	r1, r1, #-16777216	; 0xff000000
   13da4:	movt	r3, #24436	; 0x5f74
   13da8:	eor	r1, r1, #1946157056	; 0x74000000
   13dac:	orr	r2, r4, r2, lsl #24
   13db0:	eor	r2, r2, r3
   13db4:	orrs	r1, r1, r2
   13db8:	bne	18908 <main@@Base+0x5684>
   13dbc:	cmp	r0, #6
   13dc0:	blt	18908 <main@@Base+0x5684>
   13dc4:	ldr	r2, [sp, #32]
   13dc8:	mov	r1, r9
   13dcc:	ldrb	r0, [r1, #21]!
   13dd0:	ldr	r2, [r2]
   13dd4:	cmp	r2, #0
   13dd8:	beq	153d4 <main@@Base+0x2150>
   13ddc:	cmp	r0, #33	; 0x21
   13de0:	bcc	13dec <main@@Base+0xb68>
   13de4:	cmp	r0, #58	; 0x3a
   13de8:	bne	18908 <main@@Base+0x5684>
   13dec:	ldr	r0, [sp, #32]
   13df0:	mov	r2, #0
   13df4:	str	r2, [r0]
   13df8:	b	153e0 <main@@Base+0x215c>
   13dfc:	subs	r1, r8, r3
   13e00:	sbcs	r1, r0, r2
   13e04:	bcs	14294 <main@@Base+0x1010>
   13e08:	movw	r1, #0
   13e0c:	bfc	r0, #0, #16
   13e10:	movt	r1, #26736	; 0x6870
   13e14:	teq	r0, r1
   13e18:	bne	1480c <main@@Base+0x1588>
   13e1c:	ldr	r8, [sp, #36]	; 0x24
   13e20:	cmp	sl, #3
   13e24:	mov	r7, r9
   13e28:	blt	16850 <main@@Base+0x35cc>
   13e2c:	ldr	r2, [sp, #32]
   13e30:	mov	r1, r9
   13e34:	ldrb	r0, [r1, #2]!
   13e38:	ldr	r2, [r2]
   13e3c:	cmp	r2, #0
   13e40:	beq	14c48 <main@@Base+0x19c4>
   13e44:	cmp	r0, #33	; 0x21
   13e48:	bcc	13e58 <main@@Base+0xbd4>
   13e4c:	cmp	r0, #58	; 0x3a
   13e50:	mov	r7, r9
   13e54:	bne	16850 <main@@Base+0x35cc>
   13e58:	ldr	r0, [sp, #32]
   13e5c:	mov	r2, #0
   13e60:	str	r2, [r0]
   13e64:	b	14c58 <main@@Base+0x19d4>
   13e68:	mvn	r2, #-1711276032	; 0x9a000000
   13e6c:	subs	r2, r2, r8
   13e70:	sbcs	r2, lr, r0
   13e74:	bcc	14318 <main@@Base+0x1094>
   13e78:	movw	r0, #28788	; 0x7074
   13e7c:	movt	r0, #25965	; 0x656d
   13e80:	eor	r0, r8, r0
   13e84:	orrs	r0, r0, r1
   13e88:	bne	1480c <main@@Base+0x1588>
   13e8c:	add	r7, r9, #8
   13e90:	ldr	r8, [sp, #36]	; 0x24
   13e94:	ldr	sl, [sp, #40]	; 0x28
   13e98:	mov	r1, #8
   13e9c:	sub	r0, r5, r7
   13ea0:	cmp	r0, #8
   13ea4:	movcc	r1, r0
   13ea8:	sub	r1, r1, #1
   13eac:	cmp	r1, #7
   13eb0:	bhi	1b160 <main@@Base+0x7edc>
   13eb4:	ldrb	r1, [r7]
   13eb8:	cmp	r1, #121	; 0x79
   13ebc:	bne	1b160 <main@@Base+0x7edc>
   13ec0:	cmp	r0, #2
   13ec4:	blt	1b160 <main@@Base+0x7edc>
   13ec8:	ldr	r2, [sp, #32]
   13ecc:	mov	r1, r9
   13ed0:	ldrb	r0, [r1, #9]!
   13ed4:	ldr	r2, [r2]
   13ed8:	cmp	r2, #0
   13edc:	beq	158ac <main@@Base+0x2628>
   13ee0:	cmp	r0, #33	; 0x21
   13ee4:	bcc	13ef0 <main@@Base+0xc6c>
   13ee8:	cmp	r0, #58	; 0x3a
   13eec:	bne	1b160 <main@@Base+0x7edc>
   13ef0:	ldr	r0, [sp, #32]
   13ef4:	mov	r2, #0
   13ef8:	str	r2, [r0]
   13efc:	b	158b8 <main@@Base+0x2634>
   13f00:	teq	r0, lr
   13f04:	bne	15d2c <main@@Base+0x2aa8>
   13f08:	cmp	sl, #5
   13f0c:	mov	r1, r9
   13f10:	blt	15cf0 <main@@Base+0x2a6c>
   13f14:	ldr	r1, [sp, #32]
   13f18:	mov	r2, r9
   13f1c:	ldrb	r0, [r2, #4]!
   13f20:	ldr	r1, [r1]
   13f24:	cmp	r1, #0
   13f28:	beq	14a64 <main@@Base+0x17e0>
   13f2c:	cmp	r0, #33	; 0x21
   13f30:	bcc	13f40 <main@@Base+0xcbc>
   13f34:	cmp	r0, #58	; 0x3a
   13f38:	mov	r1, r9
   13f3c:	bne	15cf0 <main@@Base+0x2a6c>
   13f40:	ldr	r0, [sp, #32]
   13f44:	mov	r1, #0
   13f48:	str	r1, [r0]
   13f4c:	b	14a74 <main@@Base+0x17f0>
   13f50:	movw	r7, #24431	; 0x5f6f
   13f54:	movw	r3, #25460	; 0x6374
   13f58:	movt	r7, #28530	; 0x6f72
   13f5c:	movt	r3, #30309	; 0x7665
   13f60:	subs	r2, r8, r7
   13f64:	sbcs	r2, r0, r3
   13f68:	bcs	14390 <main@@Base+0x110c>
   13f6c:	movw	r0, #29556	; 0x7374
   13f70:	ldr	sl, [sp, #40]	; 0x28
   13f74:	movt	r0, #28261	; 0x6e65
   13f78:	eor	r0, r8, r0
   13f7c:	orrs	r0, r0, r1
   13f80:	bne	16238 <main@@Base+0x2fb4>
   13f84:	add	r1, r9, #8
   13f88:	mov	r2, #8
   13f8c:	sub	r0, r5, r1
   13f90:	cmp	r0, #8
   13f94:	movcs	r0, r2
   13f98:	sub	r7, r0, #1
   13f9c:	cmp	r7, #7
   13fa0:	bhi	14568 <main@@Base+0x12e4>
   13fa4:	add	r0, pc, #32
   13fa8:	mov	r8, #0
   13fac:	mov	ip, #0
   13fb0:	mov	lr, #0
   13fb4:	mov	r6, #0
   13fb8:	mov	r3, #0
   13fbc:	mov	r5, #0
   13fc0:	mov	r2, #0
   13fc4:	mov	r4, #0
   13fc8:	ldr	pc, [r0, r7, lsl #2]
   13fcc:	andeq	r4, r1, r0, lsr r0
   13fd0:	andeq	r4, r1, r8, lsr #32
   13fd4:	andeq	r4, r1, r0, lsr #32
   13fd8:	andeq	r4, r1, r8, lsl r0
   13fdc:	andeq	r4, r1, ip
   13fe0:	andeq	r4, r1, r0
   13fe4:	strdeq	r3, [r1], -r0
   13fe8:	andeq	r3, r1, ip, ror #31
   13fec:	ldrb	ip, [r9, #15]
   13ff0:	ldrb	r0, [r9, #14]
   13ff4:	mov	lr, r8
   13ff8:	orr	r0, ip, r0, lsl #8
   13ffc:	mov	r8, r0
   14000:	ldrb	r0, [r9, #13]
   14004:	mov	r6, lr
   14008:	orr	r8, r8, r0, lsl #16
   1400c:	ldrb	r0, [r9, #12]
   14010:	mov	r3, r6
   14014:	orr	r8, r8, r0, lsl #24
   14018:	ldrb	r0, [r9, #11]
   1401c:	orr	r5, r0, r3
   14020:	ldrb	r0, [r9, #10]
   14024:	orr	r2, r5, r0, lsl #8
   14028:	ldrb	r0, [r9, #9]
   1402c:	orr	r4, r2, r0, lsl #16
   14030:	ldrb	r2, [r1]
   14034:	movw	r0, #25205	; 0x6275
   14038:	movw	r3, #26220	; 0x666c
   1403c:	ldr	r5, [sp, #44]	; 0x2c
   14040:	movt	r0, #24948	; 0x6174
   14044:	movt	r3, #25956	; 0x6564
   14048:	eor	r0, r8, r0
   1404c:	orr	r2, r4, r2, lsl #24
   14050:	eor	r2, r2, r3
   14054:	orrs	r0, r0, r2
   14058:	bne	14568 <main@@Base+0x12e4>
   1405c:	add	r7, r9, #16
   14060:	ldr	r8, [sp, #36]	; 0x24
   14064:	mov	r1, #8
   14068:	sub	r0, r5, r7
   1406c:	cmp	r0, #8
   14070:	movcc	r1, r0
   14074:	sub	r2, r1, #1
   14078:	cmp	r2, #7
   1407c:	bhi	1b160 <main@@Base+0x7edc>
   14080:	add	r3, pc, #4
   14084:	mov	r1, #0
   14088:	ldr	pc, [r3, r2, lsl #2]
   1408c:	andeq	r4, r1, r0, asr #1
   14090:	strheq	r4, [r1], -r8
   14094:	strheq	r4, [r1], -r0
   14098:	andeq	r4, r1, ip, lsr #1
   1409c:	andeq	r4, r1, ip, lsr #1
   140a0:	andeq	r4, r1, ip, lsr #1
   140a4:	andeq	r4, r1, ip, lsr #1
   140a8:	andeq	r4, r1, ip, lsr #1
   140ac:	ldrb	r1, [r9, #19]
   140b0:	ldrb	r2, [r9, #18]
   140b4:	orr	r1, r1, r2, lsl #8
   140b8:	ldrb	r2, [r9, #17]
   140bc:	orr	r1, r1, r2, lsl #16
   140c0:	ldrb	r2, [r7]
   140c4:	orr	r1, r1, r2, lsl #24
   140c8:	movw	r2, #25970	; 0x6572
   140cc:	movt	r2, #26214	; 0x6666
   140d0:	teq	r1, r2
   140d4:	bne	1b160 <main@@Base+0x7edc>
   140d8:	cmp	r0, #5
   140dc:	blt	1b160 <main@@Base+0x7edc>
   140e0:	ldr	r2, [sp, #32]
   140e4:	mov	r1, r9
   140e8:	ldrb	r0, [r1, #20]!
   140ec:	ldr	r2, [r2]
   140f0:	cmp	r2, #0
   140f4:	beq	15e48 <main@@Base+0x2bc4>
   140f8:	cmp	r0, #33	; 0x21
   140fc:	bcc	14108 <main@@Base+0xe84>
   14100:	cmp	r0, #58	; 0x3a
   14104:	bne	1b160 <main@@Base+0x7edc>
   14108:	ldr	r0, [sp, #32]
   1410c:	mov	r2, #0
   14110:	str	r2, [r0]
   14114:	b	15e54 <main@@Base+0x2bd0>
   14118:	movw	r0, #27749	; 0x6c65
   1411c:	movw	r3, #26228	; 0x6674
   14120:	ldr	r5, [sp, #44]	; 0x2c
   14124:	ldr	r8, [sp, #36]	; 0x24
   14128:	movt	r0, #24930	; 0x6162
   1412c:	movt	r3, #31087	; 0x796f
   14130:	eor	r0, r1, r0
   14134:	eor	r3, r2, r3
   14138:	orrs	r0, r0, r3
   1413c:	beq	146d8 <main@@Base+0x1454>
   14140:	movw	r0, #26990	; 0x696e
   14144:	movt	r0, #29810	; 0x7472
   14148:	eor	r0, r1, r0
   1414c:	eor	r1, r2, r7
   14150:	orrs	r0, r0, r1
   14154:	bne	167b0 <main@@Base+0x352c>
   14158:	add	r7, r9, #16
   1415c:	mov	r2, #8
   14160:	sub	r0, r5, r7
   14164:	cmp	r0, #8
   14168:	movcc	r2, r0
   1416c:	sub	r1, r2, #2
   14170:	cmp	r1, #7
   14174:	bcs	14ae8 <main@@Base+0x1864>
   14178:	ldrb	r1, [r9, #17]
   1417c:	ldr	sl, [sp, #40]	; 0x28
   14180:	lsl	r2, r1, #16
   14184:	mov	r1, #0
   14188:	ldrb	r3, [r7]
   1418c:	orr	r2, r2, r3, lsl #24
   14190:	movw	r3, #0
   14194:	movt	r3, #26418	; 0x6732
   14198:	eor	r3, r2, r3
   1419c:	orrs	r1, r1, r3
   141a0:	bne	148e8 <main@@Base+0x1664>
   141a4:	cmp	r0, #3
   141a8:	blt	1b160 <main@@Base+0x7edc>
   141ac:	ldr	r2, [sp, #32]
   141b0:	mov	r1, r9
   141b4:	ldrb	r0, [r1, #18]!
   141b8:	ldr	r2, [r2]
   141bc:	cmp	r2, #0
   141c0:	beq	14f74 <main@@Base+0x1cf0>
   141c4:	cmp	r0, #33	; 0x21
   141c8:	bcc	141d4 <main@@Base+0xf50>
   141cc:	cmp	r0, #58	; 0x3a
   141d0:	bne	1b160 <main@@Base+0x7edc>
   141d4:	ldr	r0, [sp, #32]
   141d8:	mov	r2, #0
   141dc:	str	r2, [r0]
   141e0:	b	14f80 <main@@Base+0x1cfc>
   141e4:	cmp	sl, #6
   141e8:	ldr	r8, [sp, #36]	; 0x24
   141ec:	ldr	sl, [sp, #40]	; 0x28
   141f0:	mov	r7, r9
   141f4:	blt	15740 <main@@Base+0x24bc>
   141f8:	ldr	r2, [sp, #32]
   141fc:	mov	r1, r9
   14200:	ldrb	r0, [r1, #5]!
   14204:	ldr	r2, [r2]
   14208:	cmp	r2, #0
   1420c:	beq	14964 <main@@Base+0x16e0>
   14210:	cmp	r0, #33	; 0x21
   14214:	bcc	14224 <main@@Base+0xfa0>
   14218:	cmp	r0, #58	; 0x3a
   1421c:	mov	r7, r9
   14220:	bne	15740 <main@@Base+0x24bc>
   14224:	ldr	r0, [sp, #32]
   14228:	mov	r2, #0
   1422c:	str	r2, [r0]
   14230:	b	14974 <main@@Base+0x16f0>
   14234:	movw	r1, #29440	; 0x7300
   14238:	ldr	r8, [sp, #36]	; 0x24
   1423c:	bic	r0, r0, #255	; 0xff
   14240:	movt	r1, #28783	; 0x706f
   14244:	teq	r0, r1
   14248:	bne	14810 <main@@Base+0x158c>
   1424c:	cmp	sl, #4
   14250:	mov	r4, r9
   14254:	blt	169b4 <main@@Base+0x3730>
   14258:	ldr	r2, [sp, #32]
   1425c:	mov	r1, r9
   14260:	ldrb	r0, [r1, #3]!
   14264:	ldr	r2, [r2]
   14268:	cmp	r2, #0
   1426c:	beq	14c78 <main@@Base+0x19f4>
   14270:	cmp	r0, #33	; 0x21
   14274:	bcc	14284 <main@@Base+0x1000>
   14278:	cmp	r0, #58	; 0x3a
   1427c:	mov	r4, r9
   14280:	bne	169b4 <main@@Base+0x3730>
   14284:	ldr	r0, [sp, #32]
   14288:	mov	r2, #0
   1428c:	str	r2, [r0]
   14290:	b	14c88 <main@@Base+0x1a04>
   14294:	eor	r1, r8, r3
   14298:	eor	r2, r0, r2
   1429c:	orrs	r1, r1, r2
   142a0:	bne	14754 <main@@Base+0x14d0>
   142a4:	add	r7, r9, #8
   142a8:	ldr	r8, [sp, #36]	; 0x24
   142ac:	ldr	sl, [sp, #40]	; 0x28
   142b0:	mov	r1, #8
   142b4:	sub	r0, r5, r7
   142b8:	cmp	r0, #8
   142bc:	movcc	r1, r0
   142c0:	sub	r1, r1, #1
   142c4:	cmp	r1, #7
   142c8:	bhi	1b160 <main@@Base+0x7edc>
   142cc:	ldrb	r1, [r7]
   142d0:	cmp	r1, #121	; 0x79
   142d4:	bne	1b160 <main@@Base+0x7edc>
   142d8:	cmp	r0, #2
   142dc:	blt	1b160 <main@@Base+0x7edc>
   142e0:	ldr	r2, [sp, #32]
   142e4:	mov	r1, r9
   142e8:	ldrb	r0, [r1, #9]!
   142ec:	ldr	r2, [r2]
   142f0:	cmp	r2, #0
   142f4:	beq	158d8 <main@@Base+0x2654>
   142f8:	cmp	r0, #33	; 0x21
   142fc:	bcc	14308 <main@@Base+0x1084>
   14300:	cmp	r0, #58	; 0x3a
   14304:	bne	1b160 <main@@Base+0x7edc>
   14308:	ldr	r0, [sp, #32]
   1430c:	mov	r2, #0
   14310:	str	r2, [r0]
   14314:	b	158e4 <main@@Base+0x2660>
   14318:	movw	r3, #0
   1431c:	mov	r2, r8
   14320:	movt	r3, #26163	; 0x6633
   14324:	bfc	r2, #0, #16
   14328:	subs	r3, r3, #65536	; 0x10000
   1432c:	eor	r2, r2, r3
   14330:	sbc	r3, lr, #0
   14334:	eor	r0, r0, r3
   14338:	orrs	r0, r2, r0
   1433c:	bne	147b0 <main@@Base+0x152c>
   14340:	cmp	sl, #7
   14344:	ldr	r8, [sp, #36]	; 0x24
   14348:	ldr	sl, [sp, #40]	; 0x28
   1434c:	mov	r7, r9
   14350:	blt	177f0 <main@@Base+0x456c>
   14354:	ldr	r2, [sp, #32]
   14358:	mov	r1, r9
   1435c:	ldrb	r0, [r1, #6]!
   14360:	ldr	r2, [r2]
   14364:	cmp	r2, #0
   14368:	beq	14ca8 <main@@Base+0x1a24>
   1436c:	cmp	r0, #33	; 0x21
   14370:	bcc	14380 <main@@Base+0x10fc>
   14374:	cmp	r0, #58	; 0x3a
   14378:	mov	r7, r9
   1437c:	bne	177f0 <main@@Base+0x456c>
   14380:	ldr	r0, [sp, #32]
   14384:	mov	r2, #0
   14388:	str	r2, [r0]
   1438c:	b	14cb8 <main@@Base+0x1a34>
   14390:	eor	r1, r8, r7
   14394:	eor	r0, r0, r3
   14398:	orrs	r0, r1, r0
   1439c:	bne	1480c <main@@Base+0x1588>
   143a0:	add	sl, r9, #8
   143a4:	mov	r0, #8
   143a8:	sub	lr, r5, sl
   143ac:	cmp	lr, #8
   143b0:	movcc	r0, lr
   143b4:	sub	r6, r0, #1
   143b8:	cmp	r6, #7
   143bc:	bhi	167ac <main@@Base+0x3528>
   143c0:	add	r7, pc, #32
   143c4:	mov	r1, #0
   143c8:	mov	ip, #0
   143cc:	mov	r8, #0
   143d0:	mov	r4, #0
   143d4:	mov	r3, #0
   143d8:	mov	r5, #0
   143dc:	mov	r2, #0
   143e0:	mov	r0, #0
   143e4:	ldr	pc, [r7, r6, lsl #2]
   143e8:	andeq	r4, r1, ip, asr #8
   143ec:	andeq	r4, r1, r4, asr #8
   143f0:	andeq	r4, r1, ip, lsr r4
   143f4:	andeq	r4, r1, r4, lsr r4
   143f8:	andeq	r4, r1, r8, lsr #8
   143fc:	andeq	r4, r1, ip, lsl r4
   14400:	andeq	r4, r1, ip, lsl #8
   14404:	andeq	r4, r1, r8, lsl #8
   14408:	ldrb	ip, [r9, #15]
   1440c:	ldrb	r0, [r9, #14]
   14410:	mov	r8, r1
   14414:	orr	r0, ip, r0, lsl #8
   14418:	mov	r1, r0
   1441c:	ldrb	r0, [r9, #13]
   14420:	mov	r4, r8
   14424:	orr	r1, r1, r0, lsl #16
   14428:	ldrb	r0, [r9, #12]
   1442c:	mov	r3, r4
   14430:	orr	r1, r1, r0, lsl #24
   14434:	ldrb	r0, [r9, #11]
   14438:	orr	r5, r0, r3
   1443c:	ldrb	r0, [r9, #10]
   14440:	orr	r2, r5, r0, lsl #8
   14444:	ldrb	r0, [r9, #9]
   14448:	orr	r0, r2, r0, lsl #16
   1444c:	ldrb	r3, [sl]
   14450:	movw	r2, #27749	; 0x6c65
   14454:	movt	r2, #30050	; 0x7562
   14458:	eor	r2, r1, r2
   1445c:	orr	r0, r0, r3, lsl #24
   14460:	movw	r3, #25711	; 0x646f
   14464:	movt	r3, #26207	; 0x665f
   14468:	eor	r3, r0, r3
   1446c:	orrs	r2, r2, r3
   14470:	bne	14994 <main@@Base+0x1710>
   14474:	ldr	r5, [sp, #44]	; 0x2c
   14478:	add	r7, r9, #16
   1447c:	ldr	r8, [sp, #36]	; 0x24
   14480:	mov	r1, #8
   14484:	sub	r0, r5, r7
   14488:	cmp	r0, #8
   1448c:	movcc	r1, r0
   14490:	sub	r1, r1, #1
   14494:	cmp	r1, #7
   14498:	bhi	14748 <main@@Base+0x14c4>
   1449c:	ldrb	r1, [r7]
   144a0:	cmp	r1, #115	; 0x73
   144a4:	bne	14748 <main@@Base+0x14c4>
   144a8:	ldr	sl, [sp, #40]	; 0x28
   144ac:	cmp	r0, #2
   144b0:	blt	1b160 <main@@Base+0x7edc>
   144b4:	ldr	r2, [sp, #32]
   144b8:	mov	r1, r9
   144bc:	ldrb	r0, [r1, #17]!
   144c0:	ldr	r2, [r2]
   144c4:	cmp	r2, #0
   144c8:	beq	16804 <main@@Base+0x3580>
   144cc:	cmp	r0, #33	; 0x21
   144d0:	bcc	144dc <main@@Base+0x1258>
   144d4:	cmp	r0, #58	; 0x3a
   144d8:	bne	1b160 <main@@Base+0x7edc>
   144dc:	ldr	r0, [sp, #32]
   144e0:	mov	r2, #0
   144e4:	str	r2, [r0]
   144e8:	b	16810 <main@@Base+0x358c>
   144ec:	movw	r0, #30256	; 0x7630
   144f0:	ldr	r5, [sp, #44]	; 0x2c
   144f4:	movt	r0, #26222	; 0x666e
   144f8:	subs	r0, r0, r1
   144fc:	movw	r0, #12895	; 0x325f
   14500:	movt	r0, #30003	; 0x7533
   14504:	sbcs	r0, r0, r2
   14508:	eor	r0, r1, r3
   1450c:	bcc	1481c <main@@Base+0x1598>
   14510:	movw	r1, #13407	; 0x345f
   14514:	ldr	r8, [sp, #36]	; 0x24
   14518:	movt	r1, #29494	; 0x7336
   1451c:	eor	r1, r2, r1
   14520:	orrs	r0, r0, r1
   14524:	bne	167b0 <main@@Base+0x352c>
   14528:	cmp	ip, #9
   1452c:	blt	186c4 <main@@Base+0x5440>
   14530:	ldr	r2, [sp, #32]
   14534:	mov	r1, r9
   14538:	ldrb	r0, [r1, #16]!
   1453c:	ldr	r2, [r2]
   14540:	cmp	r2, #0
   14544:	beq	1502c <main@@Base+0x1da8>
   14548:	cmp	r0, #33	; 0x21
   1454c:	bcc	14558 <main@@Base+0x12d4>
   14550:	cmp	r0, #58	; 0x3a
   14554:	bne	186c4 <main@@Base+0x5440>
   14558:	ldr	r0, [sp, #32]
   1455c:	mov	r2, #0
   14560:	str	r2, [r0]
   14564:	b	15038 <main@@Base+0x1db4>
   14568:	ldr	r8, [sp, #36]	; 0x24
   1456c:	mov	r0, r8
   14570:	b	1bb9c <main@@Base+0x8918>
   14574:	cmp	sl, #9
   14578:	ldr	r8, [sp, #36]	; 0x24
   1457c:	ldr	sl, [sp, #40]	; 0x28
   14580:	mov	r7, r9
   14584:	blt	16508 <main@@Base+0x3284>
   14588:	ldr	r2, [sp, #32]
   1458c:	mov	r1, r9
   14590:	ldrb	r0, [r1, #8]!
   14594:	ldr	r2, [r2]
   14598:	cmp	r2, #0
   1459c:	beq	14b00 <main@@Base+0x187c>
   145a0:	cmp	r0, #33	; 0x21
   145a4:	bcc	145b4 <main@@Base+0x1330>
   145a8:	cmp	r0, #58	; 0x3a
   145ac:	mov	r7, r9
   145b0:	bne	16508 <main@@Base+0x3284>
   145b4:	ldr	r0, [sp, #32]
   145b8:	mov	r2, #0
   145bc:	str	r2, [r0]
   145c0:	b	14b10 <main@@Base+0x188c>
   145c4:	add	sl, r9, #16
   145c8:	ldr	r8, [sp, #36]	; 0x24
   145cc:	mov	r1, #8
   145d0:	sub	lr, r5, sl
   145d4:	cmp	lr, #8
   145d8:	movcc	r1, lr
   145dc:	sub	r7, r1, #1
   145e0:	cmp	r7, #7
   145e4:	bhi	167b0 <main@@Base+0x352c>
   145e8:	add	r0, pc, #28
   145ec:	mov	r1, #0
   145f0:	mov	ip, #0
   145f4:	mov	r5, #0
   145f8:	mov	r3, #0
   145fc:	mov	r6, #0
   14600:	mov	r4, #0
   14604:	mov	r2, #0
   14608:	ldr	pc, [r0, r7, lsl #2]
   1460c:	andeq	r4, r1, r8, ror #12
   14610:	andeq	r4, r1, r0, ror #12
   14614:	andeq	r4, r1, r8, asr r6
   14618:	andeq	r4, r1, r0, asr r6
   1461c:	andeq	r4, r1, r4, asr #12
   14620:	andeq	r4, r1, r4, lsr r6
   14624:	andeq	r4, r1, ip, lsr #12
   14628:	andeq	r4, r1, ip, lsr #12
   1462c:	ldrb	r0, [r9, #22]
   14630:	lsl	ip, r0, #8
   14634:	ldrb	r0, [r9, #21]
   14638:	mov	r5, r1
   1463c:	orr	r0, ip, r0, lsl #16
   14640:	mov	r1, r0
   14644:	ldrb	r0, [r9, #20]
   14648:	mov	r3, r5
   1464c:	orr	r1, r1, r0, lsl #24
   14650:	ldrb	r0, [r9, #19]
   14654:	orr	r6, r0, r3
   14658:	ldrb	r0, [r9, #18]
   1465c:	orr	r4, r6, r0, lsl #8
   14660:	ldrb	r0, [r9, #17]
   14664:	orr	r2, r4, r0, lsl #16
   14668:	bic	r0, r1, #255	; 0xff
   1466c:	movw	r1, #29696	; 0x7400
   14670:	ldr	r5, [sp, #44]	; 0x2c
   14674:	movt	r1, #30051	; 0x7563
   14678:	eor	r0, r0, r1
   1467c:	ldrb	r1, [sl]
   14680:	orr	r1, r2, r1, lsl #24
   14684:	movw	r2, #29810	; 0x7472
   14688:	movt	r2, #25715	; 0x6473
   1468c:	eor	r1, r1, r2
   14690:	orrs	r0, r0, r1
   14694:	bne	167b0 <main@@Base+0x352c>
   14698:	cmp	lr, #8
   1469c:	blt	167b0 <main@@Base+0x352c>
   146a0:	ldr	r2, [sp, #32]
   146a4:	mov	r1, r9
   146a8:	ldrb	r0, [r1, #23]!
   146ac:	ldr	r2, [r2]
   146b0:	cmp	r2, #0
   146b4:	beq	14fa0 <main@@Base+0x1d1c>
   146b8:	cmp	r0, #33	; 0x21
   146bc:	bcc	146c8 <main@@Base+0x1444>
   146c0:	cmp	r0, #58	; 0x3a
   146c4:	bne	167b0 <main@@Base+0x352c>
   146c8:	ldr	r0, [sp, #32]
   146cc:	mov	r2, #0
   146d0:	str	r2, [r0]
   146d4:	b	14fac <main@@Base+0x1d28>
   146d8:	add	r7, r9, #16
   146dc:	mov	r1, #8
   146e0:	sub	r0, r5, r7
   146e4:	cmp	r0, #8
   146e8:	movcc	r1, r0
   146ec:	sub	r1, r1, #1
   146f0:	cmp	r1, #7
   146f4:	bhi	14748 <main@@Base+0x14c4>
   146f8:	ldrb	r1, [r7]
   146fc:	cmp	r1, #115	; 0x73
   14700:	bne	14748 <main@@Base+0x14c4>
   14704:	ldr	sl, [sp, #40]	; 0x28
   14708:	cmp	r0, #2
   1470c:	blt	1b160 <main@@Base+0x7edc>
   14710:	ldr	r2, [sp, #32]
   14714:	mov	r1, r9
   14718:	ldrb	r0, [r1, #17]!
   1471c:	ldr	r2, [r2]
   14720:	cmp	r2, #0
   14724:	beq	155d0 <main@@Base+0x234c>
   14728:	cmp	r0, #33	; 0x21
   1472c:	bcc	14738 <main@@Base+0x14b4>
   14730:	cmp	r0, #58	; 0x3a
   14734:	bne	1b160 <main@@Base+0x7edc>
   14738:	ldr	r0, [sp, #32]
   1473c:	mov	r2, #0
   14740:	str	r2, [r0]
   14744:	b	155dc <main@@Base+0x2358>
   14748:	mov	r0, r8
   1474c:	mov	r1, r7
   14750:	b	167b8 <main@@Base+0x3534>
   14754:	movw	r1, #28257	; 0x6e61
   14758:	ldr	r8, [sp, #36]	; 0x24
   1475c:	movt	r1, #28001	; 0x6d61
   14760:	teq	r0, r1
   14764:	bne	14810 <main@@Base+0x158c>
   14768:	cmp	sl, #5
   1476c:	mov	r7, r9
   14770:	blt	18430 <main@@Base+0x51ac>
   14774:	ldr	r2, [sp, #32]
   14778:	mov	r1, r9
   1477c:	ldrb	r0, [r1, #4]!
   14780:	ldr	r2, [r2]
   14784:	cmp	r2, #0
   14788:	beq	14fcc <main@@Base+0x1d48>
   1478c:	cmp	r0, #33	; 0x21
   14790:	bcc	147a0 <main@@Base+0x151c>
   14794:	cmp	r0, #58	; 0x3a
   14798:	mov	r7, r9
   1479c:	bne	18430 <main@@Base+0x51ac>
   147a0:	ldr	r0, [sp, #32]
   147a4:	mov	r2, #0
   147a8:	str	r2, [r0]
   147ac:	b	14fdc <main@@Base+0x1d58>
   147b0:	and	r0, r8, #-16777216	; 0xff000000
   147b4:	eor	r0, r0, #1711276032	; 0x66000000
   147b8:	orrs	r0, r0, r1
   147bc:	bne	1480c <main@@Base+0x1588>
   147c0:	ldr	r8, [sp, #36]	; 0x24
   147c4:	cmp	sl, #6
   147c8:	mov	r7, r9
   147cc:	blt	18598 <main@@Base+0x5314>
   147d0:	ldr	r2, [sp, #32]
   147d4:	mov	r1, r9
   147d8:	ldrb	r0, [r1, #5]!
   147dc:	ldr	r2, [r2]
   147e0:	cmp	r2, #0
   147e4:	beq	14ffc <main@@Base+0x1d78>
   147e8:	cmp	r0, #33	; 0x21
   147ec:	bcc	147fc <main@@Base+0x1578>
   147f0:	cmp	r0, #58	; 0x3a
   147f4:	mov	r7, r9
   147f8:	bne	18598 <main@@Base+0x5314>
   147fc:	ldr	r0, [sp, #32]
   14800:	mov	r2, #0
   14804:	str	r2, [r0]
   14808:	b	1500c <main@@Base+0x1d88>
   1480c:	ldr	r8, [sp, #36]	; 0x24
   14810:	mov	r0, r8
   14814:	mov	r1, r9
   14818:	b	167b8 <main@@Base+0x3534>
   1481c:	movw	r1, #13407	; 0x345f
   14820:	ldr	r8, [sp, #36]	; 0x24
   14824:	movt	r1, #30006	; 0x7536
   14828:	eor	r1, r2, r1
   1482c:	orrs	r1, r0, r1
   14830:	beq	14aa8 <main@@Base+0x1824>
   14834:	movw	r1, #12895	; 0x325f
   14838:	movt	r1, #30003	; 0x7533
   1483c:	eor	r1, r2, r1
   14840:	orrs	r0, r0, r1
   14844:	bne	167b0 <main@@Base+0x352c>
   14848:	cmp	ip, #9
   1484c:	blt	19688 <main@@Base+0x6404>
   14850:	ldr	r2, [sp, #32]
   14854:	mov	r1, r9
   14858:	ldrb	r0, [r1, #16]!
   1485c:	ldr	r2, [r2]
   14860:	cmp	r2, #0
   14864:	beq	155fc <main@@Base+0x2378>
   14868:	cmp	r0, #33	; 0x21
   1486c:	bcc	14878 <main@@Base+0x15f4>
   14870:	cmp	r0, #58	; 0x3a
   14874:	bne	19688 <main@@Base+0x6404>
   14878:	ldr	r0, [sp, #32]
   1487c:	mov	r2, #0
   14880:	str	r2, [r0]
   14884:	b	15608 <main@@Base+0x2384>
   14888:	cmp	r0, #34	; 0x22
   1488c:	mov	r7, r9
   14890:	bne	150ec <main@@Base+0x1e68>
   14894:	add	r1, r9, #7
   14898:	sub	r0, r5, r1
   1489c:	cmp	r0, #2
   148a0:	blt	14b44 <main@@Base+0x18c0>
   148a4:	ldrb	r0, [r1]
   148a8:	cmp	r0, #32
   148ac:	bls	14b30 <main@@Base+0x18ac>
   148b0:	mov	r7, r1
   148b4:	b	14b54 <main@@Base+0x18d0>
   148b8:	cmp	r0, #34	; 0x22
   148bc:	mov	r7, r9
   148c0:	bne	151b0 <main@@Base+0x1f2c>
   148c4:	add	r1, r9, #6
   148c8:	sub	r0, r5, r1
   148cc:	cmp	r0, #2
   148d0:	blt	14bb8 <main@@Base+0x1934>
   148d4:	ldrb	r0, [r1]
   148d8:	cmp	r0, #32
   148dc:	bls	14ba4 <main@@Base+0x1920>
   148e0:	mov	r7, r1
   148e4:	b	14bc8 <main@@Base+0x1944>
   148e8:	and	r1, r2, #-16777216	; 0xff000000
   148ec:	teq	r1, #1728053248	; 0x67000000
   148f0:	bne	1b160 <main@@Base+0x7edc>
   148f4:	cmp	r0, #2
   148f8:	blt	1b160 <main@@Base+0x7edc>
   148fc:	ldr	r2, [sp, #32]
   14900:	mov	r1, r9
   14904:	ldrb	r0, [r1, #17]!
   14908:	ldr	r2, [r2]
   1490c:	cmp	r2, #0
   14910:	beq	15880 <main@@Base+0x25fc>
   14914:	cmp	r0, #33	; 0x21
   14918:	bcc	14924 <main@@Base+0x16a0>
   1491c:	cmp	r0, #58	; 0x3a
   14920:	bne	1b160 <main@@Base+0x7edc>
   14924:	ldr	r0, [sp, #32]
   14928:	mov	r2, #0
   1492c:	str	r2, [r0]
   14930:	b	1588c <main@@Base+0x2608>
   14934:	cmp	r0, #34	; 0x22
   14938:	mov	r1, r9
   1493c:	bne	156ec <main@@Base+0x2468>
   14940:	add	r2, r9, #6
   14944:	sub	r0, r5, r2
   14948:	cmp	r0, #2
   1494c:	blt	14d18 <main@@Base+0x1a94>
   14950:	ldrb	r0, [r2]
   14954:	cmp	r0, #32
   14958:	bls	14d04 <main@@Base+0x1a80>
   1495c:	mov	r1, r2
   14960:	b	14d2c <main@@Base+0x1aa8>
   14964:	cmp	r0, #34	; 0x22
   14968:	mov	r7, r9
   1496c:	bne	15740 <main@@Base+0x24bc>
   14970:	add	r1, r9, #6
   14974:	sub	r0, r5, r1
   14978:	cmp	r0, #2
   1497c:	blt	14d8c <main@@Base+0x1b08>
   14980:	ldrb	r0, [r1]
   14984:	cmp	r0, #32
   14988:	bls	14d78 <main@@Base+0x1af4>
   1498c:	mov	r7, r1
   14990:	b	14d9c <main@@Base+0x1b18>
   14994:	movw	r2, #24428	; 0x5f6c
   14998:	lsr	r1, r1, #8
   1499c:	ldr	r5, [sp, #44]	; 0x2c
   149a0:	movt	r2, #102	; 0x66
   149a4:	eor	r2, r2, r0, lsr #8
   149a8:	orr	r0, r1, r0, lsl #24
   149ac:	movw	r1, #26483	; 0x6773
   149b0:	movt	r1, #28526	; 0x6f6e
   149b4:	eor	r0, r0, r1
   149b8:	orrs	r0, r0, r2
   149bc:	bne	167ac <main@@Base+0x3528>
   149c0:	ldr	r8, [sp, #36]	; 0x24
   149c4:	cmp	lr, #8
   149c8:	blt	167b0 <main@@Base+0x352c>
   149cc:	ldr	r2, [sp, #32]
   149d0:	mov	r1, r9
   149d4:	ldrb	r0, [r1, #15]!
   149d8:	ldr	r2, [r2]
   149dc:	cmp	r2, #0
   149e0:	beq	15904 <main@@Base+0x2680>
   149e4:	cmp	r0, #33	; 0x21
   149e8:	bcc	149f4 <main@@Base+0x1770>
   149ec:	cmp	r0, #58	; 0x3a
   149f0:	bne	167b0 <main@@Base+0x352c>
   149f4:	ldr	r0, [sp, #32]
   149f8:	mov	r2, #0
   149fc:	str	r2, [r0]
   14a00:	b	15910 <main@@Base+0x268c>
   14a04:	cmp	r0, #34	; 0x22
   14a08:	mov	r1, r9
   14a0c:	bne	15954 <main@@Base+0x26d0>
   14a10:	add	r2, r9, #5
   14a14:	sub	r0, r5, r2
   14a18:	cmp	r0, #2
   14a1c:	blt	14e00 <main@@Base+0x1b7c>
   14a20:	ldrb	r0, [r2]
   14a24:	cmp	r0, #32
   14a28:	bls	14dec <main@@Base+0x1b68>
   14a2c:	mov	r1, r2
   14a30:	b	14e14 <main@@Base+0x1b90>
   14a34:	cmp	r0, #34	; 0x22
   14a38:	mov	r4, r9
   14a3c:	bne	159ac <main@@Base+0x2728>
   14a40:	add	r1, r9, #5
   14a44:	sub	r0, r5, r1
   14a48:	cmp	r0, #2
   14a4c:	blt	14e74 <main@@Base+0x1bf0>
   14a50:	ldrb	r0, [r1]
   14a54:	cmp	r0, #32
   14a58:	bls	14e60 <main@@Base+0x1bdc>
   14a5c:	mov	r4, r1
   14a60:	b	14e84 <main@@Base+0x1c00>
   14a64:	cmp	r0, #34	; 0x22
   14a68:	mov	r1, r9
   14a6c:	bne	15cf0 <main@@Base+0x2a6c>
   14a70:	add	r2, r9, #5
   14a74:	sub	r0, r5, r2
   14a78:	cmp	r0, #2
   14a7c:	blt	14ee8 <main@@Base+0x1c64>
   14a80:	ldrb	r0, [r2]
   14a84:	cmp	r0, #32
   14a88:	bls	14ed4 <main@@Base+0x1c50>
   14a8c:	mov	r1, r2
   14a90:	b	14efc <main@@Base+0x1c78>
   14a94:	cmp	r2, #1
   14a98:	mov	r1, #0
   14a9c:	mov	r2, #0
   14aa0:	beq	13a34 <main@@Base+0x7b0>
   14aa4:	b	1b160 <main@@Base+0x7edc>
   14aa8:	cmp	ip, #9
   14aac:	blt	1986c <main@@Base+0x65e8>
   14ab0:	ldr	r2, [sp, #32]
   14ab4:	mov	r1, r9
   14ab8:	ldrb	r0, [r1, #16]!
   14abc:	ldr	r2, [r2]
   14ac0:	cmp	r2, #0
   14ac4:	beq	15628 <main@@Base+0x23a4>
   14ac8:	cmp	r0, #33	; 0x21
   14acc:	bcc	14ad8 <main@@Base+0x1854>
   14ad0:	cmp	r0, #58	; 0x3a
   14ad4:	bne	1986c <main@@Base+0x65e8>
   14ad8:	ldr	r0, [sp, #32]
   14adc:	mov	r2, #0
   14ae0:	str	r2, [r0]
   14ae4:	b	15634 <main@@Base+0x23b0>
   14ae8:	ldr	sl, [sp, #40]	; 0x28
   14aec:	cmp	r2, #1
   14af0:	mov	r1, #0
   14af4:	mov	r2, #0
   14af8:	beq	14188 <main@@Base+0xf04>
   14afc:	b	1b160 <main@@Base+0x7edc>
   14b00:	cmp	r0, #34	; 0x22
   14b04:	mov	r7, r9
   14b08:	bne	16508 <main@@Base+0x3284>
   14b0c:	add	r1, r9, #9
   14b10:	sub	r0, r5, r1
   14b14:	cmp	r0, #2
   14b18:	blt	1506c <main@@Base+0x1de8>
   14b1c:	ldrb	r0, [r1]
   14b20:	cmp	r0, #32
   14b24:	bls	15058 <main@@Base+0x1dd4>
   14b28:	mov	r7, r1
   14b2c:	b	1507c <main@@Base+0x1df8>
   14b30:	bne	14b44 <main@@Base+0x18c0>
   14b34:	mov	r7, r1
   14b38:	ldrb	r0, [r7, #1]!
   14b3c:	cmp	r0, #32
   14b40:	bhi	14b54 <main@@Base+0x18d0>
   14b44:	mov	r0, r8
   14b48:	mov	r2, r5
   14b4c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   14b50:	mov	r7, r0
   14b54:	cmp	r7, r5
   14b58:	beq	14b8c <main@@Base+0x1908>
   14b5c:	ldrb	r0, [r7]
   14b60:	cmp	r0, #58	; 0x3a
   14b64:	bne	14b8c <main@@Base+0x1908>
   14b68:	add	r1, r7, #1
   14b6c:	sub	r0, r5, r1
   14b70:	cmp	r0, #2
   14b74:	blt	150dc <main@@Base+0x1e58>
   14b78:	ldrb	r0, [r1]
   14b7c:	cmp	r0, #32
   14b80:	bls	150cc <main@@Base+0x1e48>
   14b84:	mov	r7, r1
   14b88:	b	150ec <main@@Base+0x1e68>
   14b8c:	mov	r0, r8
   14b90:	mov	r1, r7
   14b94:	mov	r2, r5
   14b98:	mov	r3, #4
   14b9c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   14ba0:	b	150e8 <main@@Base+0x1e64>
   14ba4:	bne	14bb8 <main@@Base+0x1934>
   14ba8:	mov	r7, r1
   14bac:	ldrb	r0, [r7, #1]!
   14bb0:	cmp	r0, #32
   14bb4:	bhi	14bc8 <main@@Base+0x1944>
   14bb8:	ldr	r0, [sp, #36]	; 0x24
   14bbc:	mov	r2, r5
   14bc0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   14bc4:	mov	r7, r0
   14bc8:	cmp	r7, r5
   14bcc:	beq	14c00 <main@@Base+0x197c>
   14bd0:	ldrb	r0, [r7]
   14bd4:	cmp	r0, #58	; 0x3a
   14bd8:	bne	14c00 <main@@Base+0x197c>
   14bdc:	add	r1, r7, #1
   14be0:	sub	r0, r5, r1
   14be4:	cmp	r0, #2
   14be8:	blt	151a0 <main@@Base+0x1f1c>
   14bec:	ldrb	r0, [r1]
   14bf0:	cmp	r0, #32
   14bf4:	bls	15190 <main@@Base+0x1f0c>
   14bf8:	mov	r7, r1
   14bfc:	b	151b0 <main@@Base+0x1f2c>
   14c00:	ldr	r0, [sp, #36]	; 0x24
   14c04:	mov	r1, r7
   14c08:	mov	r2, r5
   14c0c:	mov	r3, #4
   14c10:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   14c14:	b	151ac <main@@Base+0x1f28>
   14c18:	cmp	r0, #34	; 0x22
   14c1c:	bne	167ac <main@@Base+0x3528>
   14c20:	add	r1, r9, #17
   14c24:	ldr	r6, [sp, #36]	; 0x24
   14c28:	sub	r0, r5, r1
   14c2c:	cmp	r0, #2
   14c30:	blt	15414 <main@@Base+0x2190>
   14c34:	ldrb	r0, [r1]
   14c38:	cmp	r0, #32
   14c3c:	bls	15400 <main@@Base+0x217c>
   14c40:	mov	r4, r1
   14c44:	b	15424 <main@@Base+0x21a0>
   14c48:	cmp	r0, #34	; 0x22
   14c4c:	mov	r7, r9
   14c50:	bne	16850 <main@@Base+0x35cc>
   14c54:	add	r1, r9, #3
   14c58:	sub	r0, r5, r1
   14c5c:	cmp	r0, #2
   14c60:	blt	15488 <main@@Base+0x2204>
   14c64:	ldrb	r0, [r1]
   14c68:	cmp	r0, #32
   14c6c:	bls	15474 <main@@Base+0x21f0>
   14c70:	mov	r7, r1
   14c74:	b	15498 <main@@Base+0x2214>
   14c78:	cmp	r0, #34	; 0x22
   14c7c:	mov	r4, r9
   14c80:	bne	169b4 <main@@Base+0x3730>
   14c84:	add	r1, r9, #4
   14c88:	sub	r0, r5, r1
   14c8c:	cmp	r0, #2
   14c90:	blt	154fc <main@@Base+0x2278>
   14c94:	ldrb	r0, [r1]
   14c98:	cmp	r0, #32
   14c9c:	bls	154e8 <main@@Base+0x2264>
   14ca0:	mov	r4, r1
   14ca4:	b	1550c <main@@Base+0x2288>
   14ca8:	cmp	r0, #34	; 0x22
   14cac:	mov	r7, r9
   14cb0:	bne	177f0 <main@@Base+0x456c>
   14cb4:	add	r1, r9, #7
   14cb8:	sub	r0, r5, r1
   14cbc:	cmp	r0, #2
   14cc0:	blt	15570 <main@@Base+0x22ec>
   14cc4:	ldrb	r0, [r1]
   14cc8:	cmp	r0, #32
   14ccc:	bls	1555c <main@@Base+0x22d8>
   14cd0:	mov	r7, r1
   14cd4:	b	15580 <main@@Base+0x22fc>
   14cd8:	cmp	r0, #34	; 0x22
   14cdc:	bne	17ab0 <main@@Base+0x482c>
   14ce0:	add	r1, r9, #17
   14ce4:	sub	r0, r5, r1
   14ce8:	cmp	r0, #2
   14cec:	blt	15668 <main@@Base+0x23e4>
   14cf0:	ldrb	r0, [r1]
   14cf4:	cmp	r0, #32
   14cf8:	bls	15654 <main@@Base+0x23d0>
   14cfc:	mov	r7, r1
   14d00:	b	15678 <main@@Base+0x23f4>
   14d04:	bne	14d18 <main@@Base+0x1a94>
   14d08:	mov	r1, r2
   14d0c:	ldrb	r0, [r1, #1]!
   14d10:	cmp	r0, #32
   14d14:	bhi	14d2c <main@@Base+0x1aa8>
   14d18:	mov	r1, r2
   14d1c:	mov	r0, r8
   14d20:	mov	r2, r5
   14d24:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   14d28:	mov	r1, r0
   14d2c:	cmp	r1, r5
   14d30:	beq	14d64 <main@@Base+0x1ae0>
   14d34:	ldrb	r0, [r1]
   14d38:	cmp	r0, #58	; 0x3a
   14d3c:	bne	14d64 <main@@Base+0x1ae0>
   14d40:	add	r2, r1, #1
   14d44:	sub	r0, r5, r2
   14d48:	cmp	r0, #2
   14d4c:	blt	156d8 <main@@Base+0x2454>
   14d50:	ldrb	r0, [r2]
   14d54:	cmp	r0, #32
   14d58:	bls	156c8 <main@@Base+0x2444>
   14d5c:	mov	r1, r2
   14d60:	b	156ec <main@@Base+0x2468>
   14d64:	mov	r0, r8
   14d68:	mov	r2, r5
   14d6c:	mov	r3, #4
   14d70:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   14d74:	b	156e8 <main@@Base+0x2464>
   14d78:	bne	14d8c <main@@Base+0x1b08>
   14d7c:	mov	r7, r1
   14d80:	ldrb	r0, [r7, #1]!
   14d84:	cmp	r0, #32
   14d88:	bhi	14d9c <main@@Base+0x1b18>
   14d8c:	mov	r0, r8
   14d90:	mov	r2, r5
   14d94:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   14d98:	mov	r7, r0
   14d9c:	cmp	r7, r5
   14da0:	beq	14dd4 <main@@Base+0x1b50>
   14da4:	ldrb	r0, [r7]
   14da8:	cmp	r0, #58	; 0x3a
   14dac:	bne	14dd4 <main@@Base+0x1b50>
   14db0:	add	r1, r7, #1
   14db4:	sub	r0, r5, r1
   14db8:	cmp	r0, #2
   14dbc:	blt	15730 <main@@Base+0x24ac>
   14dc0:	ldrb	r0, [r1]
   14dc4:	cmp	r0, #32
   14dc8:	bls	15720 <main@@Base+0x249c>
   14dcc:	mov	r7, r1
   14dd0:	b	15740 <main@@Base+0x24bc>
   14dd4:	mov	r0, r8
   14dd8:	mov	r1, r7
   14ddc:	mov	r2, r5
   14de0:	mov	r3, #4
   14de4:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   14de8:	b	1573c <main@@Base+0x24b8>
   14dec:	bne	14e00 <main@@Base+0x1b7c>
   14df0:	mov	r1, r2
   14df4:	ldrb	r0, [r1, #1]!
   14df8:	cmp	r0, #32
   14dfc:	bhi	14e14 <main@@Base+0x1b90>
   14e00:	mov	r1, r2
   14e04:	mov	r0, r8
   14e08:	mov	r2, r5
   14e0c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   14e10:	mov	r1, r0
   14e14:	cmp	r1, r5
   14e18:	beq	14e4c <main@@Base+0x1bc8>
   14e1c:	ldrb	r0, [r1]
   14e20:	cmp	r0, #58	; 0x3a
   14e24:	bne	14e4c <main@@Base+0x1bc8>
   14e28:	add	r2, r1, #1
   14e2c:	sub	r0, r5, r2
   14e30:	cmp	r0, #2
   14e34:	blt	15940 <main@@Base+0x26bc>
   14e38:	ldrb	r0, [r2]
   14e3c:	cmp	r0, #32
   14e40:	bls	15930 <main@@Base+0x26ac>
   14e44:	mov	r1, r2
   14e48:	b	15954 <main@@Base+0x26d0>
   14e4c:	mov	r0, r8
   14e50:	mov	r2, r5
   14e54:	mov	r3, #4
   14e58:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   14e5c:	b	15950 <main@@Base+0x26cc>
   14e60:	bne	14e74 <main@@Base+0x1bf0>
   14e64:	mov	r4, r1
   14e68:	ldrb	r0, [r4, #1]!
   14e6c:	cmp	r0, #32
   14e70:	bhi	14e84 <main@@Base+0x1c00>
   14e74:	mov	r0, r8
   14e78:	mov	r2, r5
   14e7c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   14e80:	mov	r4, r0
   14e84:	cmp	r4, r5
   14e88:	beq	14ebc <main@@Base+0x1c38>
   14e8c:	ldrb	r0, [r4]
   14e90:	cmp	r0, #58	; 0x3a
   14e94:	bne	14ebc <main@@Base+0x1c38>
   14e98:	add	r1, r4, #1
   14e9c:	sub	r0, r5, r1
   14ea0:	cmp	r0, #2
   14ea4:	blt	1599c <main@@Base+0x2718>
   14ea8:	ldrb	r0, [r1]
   14eac:	cmp	r0, #32
   14eb0:	bls	1598c <main@@Base+0x2708>
   14eb4:	mov	r4, r1
   14eb8:	b	159ac <main@@Base+0x2728>
   14ebc:	mov	r0, r8
   14ec0:	mov	r1, r4
   14ec4:	mov	r2, r5
   14ec8:	mov	r3, #4
   14ecc:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   14ed0:	b	159a8 <main@@Base+0x2724>
   14ed4:	bne	14ee8 <main@@Base+0x1c64>
   14ed8:	mov	r1, r2
   14edc:	ldrb	r0, [r1, #1]!
   14ee0:	cmp	r0, #32
   14ee4:	bhi	14efc <main@@Base+0x1c78>
   14ee8:	ldr	r0, [sp, #36]	; 0x24
   14eec:	mov	r1, r2
   14ef0:	mov	r2, r5
   14ef4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   14ef8:	mov	r1, r0
   14efc:	cmp	r1, r5
   14f00:	beq	14f34 <main@@Base+0x1cb0>
   14f04:	ldrb	r0, [r1]
   14f08:	cmp	r0, #58	; 0x3a
   14f0c:	bne	14f34 <main@@Base+0x1cb0>
   14f10:	add	r2, r1, #1
   14f14:	sub	r0, r5, r2
   14f18:	cmp	r0, #2
   14f1c:	blt	15cdc <main@@Base+0x2a58>
   14f20:	ldrb	r0, [r2]
   14f24:	cmp	r0, #32
   14f28:	bls	15ccc <main@@Base+0x2a48>
   14f2c:	mov	r1, r2
   14f30:	b	15cf0 <main@@Base+0x2a6c>
   14f34:	ldr	r0, [sp, #36]	; 0x24
   14f38:	mov	r2, r5
   14f3c:	mov	r3, #4
   14f40:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   14f44:	b	15cec <main@@Base+0x2a68>
   14f48:	cmp	r0, #34	; 0x22
   14f4c:	bne	1b160 <main@@Base+0x7edc>
   14f50:	add	r1, r9, #11
   14f54:	sub	r0, r5, r1
   14f58:	cmp	r0, #2
   14f5c:	blt	15e88 <main@@Base+0x2c04>
   14f60:	ldrb	r0, [r1]
   14f64:	cmp	r0, #32
   14f68:	bls	15e74 <main@@Base+0x2bf0>
   14f6c:	mov	r4, r1
   14f70:	b	15e98 <main@@Base+0x2c14>
   14f74:	cmp	r0, #34	; 0x22
   14f78:	bne	1b160 <main@@Base+0x7edc>
   14f7c:	add	r1, r9, #19
   14f80:	sub	r0, r5, r1
   14f84:	cmp	r0, #2
   14f88:	blt	15efc <main@@Base+0x2c78>
   14f8c:	ldrb	r0, [r1]
   14f90:	cmp	r0, #32
   14f94:	bls	15ee8 <main@@Base+0x2c64>
   14f98:	mov	r4, r1
   14f9c:	b	15f0c <main@@Base+0x2c88>
   14fa0:	cmp	r0, #34	; 0x22
   14fa4:	bne	167b0 <main@@Base+0x352c>
   14fa8:	add	r1, r9, #24
   14fac:	sub	r0, r5, r1
   14fb0:	cmp	r0, #2
   14fb4:	blt	15f70 <main@@Base+0x2cec>
   14fb8:	ldrb	r0, [r1]
   14fbc:	cmp	r0, #32
   14fc0:	bls	15f5c <main@@Base+0x2cd8>
   14fc4:	mov	r7, r1
   14fc8:	b	15f80 <main@@Base+0x2cfc>
   14fcc:	cmp	r0, #34	; 0x22
   14fd0:	mov	r7, r9
   14fd4:	bne	18430 <main@@Base+0x51ac>
   14fd8:	add	r1, r9, #5
   14fdc:	sub	r0, r5, r1
   14fe0:	cmp	r0, #2
   14fe4:	blt	15fe4 <main@@Base+0x2d60>
   14fe8:	ldrb	r0, [r1]
   14fec:	cmp	r0, #32
   14ff0:	bls	15fd0 <main@@Base+0x2d4c>
   14ff4:	mov	r7, r1
   14ff8:	b	15ff4 <main@@Base+0x2d70>
   14ffc:	cmp	r0, #34	; 0x22
   15000:	mov	r7, r9
   15004:	bne	18598 <main@@Base+0x5314>
   15008:	add	r1, r9, #6
   1500c:	sub	r0, r5, r1
   15010:	cmp	r0, #2
   15014:	blt	16058 <main@@Base+0x2dd4>
   15018:	ldrb	r0, [r1]
   1501c:	cmp	r0, #32
   15020:	bls	16044 <main@@Base+0x2dc0>
   15024:	mov	r7, r1
   15028:	b	16068 <main@@Base+0x2de4>
   1502c:	cmp	r0, #34	; 0x22
   15030:	bne	186c4 <main@@Base+0x5440>
   15034:	add	r1, r9, #17
   15038:	sub	r0, r5, r1
   1503c:	cmp	r0, #2
   15040:	blt	160cc <main@@Base+0x2e48>
   15044:	ldrb	r0, [r1]
   15048:	cmp	r0, #32
   1504c:	bls	160b8 <main@@Base+0x2e34>
   15050:	mov	r7, r1
   15054:	b	160dc <main@@Base+0x2e58>
   15058:	bne	1506c <main@@Base+0x1de8>
   1505c:	mov	r7, r1
   15060:	ldrb	r0, [r7, #1]!
   15064:	cmp	r0, #32
   15068:	bhi	1507c <main@@Base+0x1df8>
   1506c:	mov	r0, r8
   15070:	mov	r2, r5
   15074:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   15078:	mov	r7, r0
   1507c:	cmp	r7, r5
   15080:	beq	150b4 <main@@Base+0x1e30>
   15084:	ldrb	r0, [r7]
   15088:	cmp	r0, #58	; 0x3a
   1508c:	bne	150b4 <main@@Base+0x1e30>
   15090:	add	r1, r7, #1
   15094:	sub	r0, r5, r1
   15098:	cmp	r0, #2
   1509c:	blt	164f8 <main@@Base+0x3274>
   150a0:	ldrb	r0, [r1]
   150a4:	cmp	r0, #32
   150a8:	bls	164e8 <main@@Base+0x3264>
   150ac:	mov	r7, r1
   150b0:	b	16508 <main@@Base+0x3284>
   150b4:	mov	r0, r8
   150b8:	mov	r1, r7
   150bc:	mov	r2, r5
   150c0:	mov	r3, #4
   150c4:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   150c8:	b	16504 <main@@Base+0x3280>
   150cc:	bne	150dc <main@@Base+0x1e58>
   150d0:	ldrb	r0, [r7, #2]!
   150d4:	cmp	r0, #32
   150d8:	bhi	150ec <main@@Base+0x1e68>
   150dc:	mov	r0, r8
   150e0:	mov	r2, r5
   150e4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   150e8:	mov	r7, r0
   150ec:	ldr	sl, [sp, #40]	; 0x28
   150f0:	cmp	r9, r7
   150f4:	beq	1623c <main@@Base+0x2fb8>
   150f8:	mov	r0, #0
   150fc:	mov	r1, r7
   15100:	mov	r2, r5
   15104:	sub	r3, fp, #56	; 0x38
   15108:	str	r0, [fp, #-56]	; 0xffffffc8
   1510c:	mov	r0, r8
   15110:	bl	2ec68 <flatcc_json_parser_float@@Base>
   15114:	mov	r4, r0
   15118:	cmp	r7, r0
   1511c:	bne	15150 <main@@Base+0x1ecc>
   15120:	movw	r3, #16644	; 0x4104
   15124:	sub	r0, fp, #56	; 0x38
   15128:	mov	r1, r7
   1512c:	mov	r2, r5
   15130:	movt	r3, #4
   15134:	str	r0, [sp]
   15138:	mov	r0, r8
   1513c:	bl	2254c <main@@Base+0xf2c8>
   15140:	mov	r4, r0
   15144:	cmp	r0, r7
   15148:	cmpne	r4, r5
   1514c:	beq	13340 <main@@Base+0xbc>
   15150:	vldr	s0, [fp, #-56]	; 0xffffffc8
   15154:	vcmp.f32	s0, #0.0
   15158:	vmrs	APSR_nzcv, fpscr
   1515c:	bne	1516c <main@@Base+0x1ee8>
   15160:	ldrb	r0, [r8, #8]
   15164:	tst	r0, #2
   15168:	beq	1bba8 <main@@Base+0x8924>
   1516c:	ldr	r0, [r8]
   15170:	mov	r1, #27
   15174:	mov	r2, #4
   15178:	mov	r3, #4
   1517c:	bl	2b574 <flatcc_builder_table_add@@Base>
   15180:	cmp	r0, #0
   15184:	beq	13340 <main@@Base+0xbc>
   15188:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1518c:	b	16294 <main@@Base+0x3010>
   15190:	bne	151a0 <main@@Base+0x1f1c>
   15194:	ldrb	r0, [r7, #2]!
   15198:	cmp	r0, #32
   1519c:	bhi	151b0 <main@@Base+0x1f2c>
   151a0:	ldr	r0, [sp, #36]	; 0x24
   151a4:	mov	r2, r5
   151a8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   151ac:	mov	r7, r0
   151b0:	cmp	r9, r7
   151b4:	beq	161b0 <main@@Base+0x2f2c>
   151b8:	ldr	r8, [sp, #36]	; 0x24
   151bc:	mov	r1, #4
   151c0:	mov	r2, #2
   151c4:	mvn	r3, #-1073741824	; 0xc0000000
   151c8:	ldr	r0, [r8]
   151cc:	bl	29f5c <flatcc_builder_start_vector@@Base>
   151d0:	cmp	r0, #0
   151d4:	bne	1cdf0 <main@@Base+0x9b6c>
   151d8:	cmp	r7, r5
   151dc:	beq	15214 <main@@Base+0x1f90>
   151e0:	ldrb	r0, [r7]
   151e4:	cmp	r0, #91	; 0x5b
   151e8:	bne	15214 <main@@Base+0x1f90>
   151ec:	ldr	sl, [sp, #40]	; 0x28
   151f0:	add	r1, r7, #1
   151f4:	sub	r0, r5, r1
   151f8:	cmp	r0, #2
   151fc:	blt	15260 <main@@Base+0x1fdc>
   15200:	ldrb	r0, [r1]
   15204:	cmp	r0, #32
   15208:	bls	15250 <main@@Base+0x1fcc>
   1520c:	mov	r7, r1
   15210:	b	15270 <main@@Base+0x1fec>
   15214:	mov	r0, r8
   15218:	mov	r1, r7
   1521c:	mov	r2, r5
   15220:	mov	r3, #22
   15224:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   15228:	ldr	sl, [sp, #40]	; 0x28
   1522c:	mov	r7, r0
   15230:	ldr	r0, [r8]
   15234:	bl	2af88 <flatcc_builder_end_vector@@Base>
   15238:	cmp	r0, #0
   1523c:	str	r0, [sp, #52]	; 0x34
   15240:	beq	1cdf0 <main@@Base+0x9b6c>
   15244:	ldr	r0, [r8]
   15248:	mov	r1, #9
   1524c:	b	16280 <main@@Base+0x2ffc>
   15250:	bne	15260 <main@@Base+0x1fdc>
   15254:	ldrb	r0, [r7, #2]!
   15258:	cmp	r0, #32
   1525c:	bhi	15270 <main@@Base+0x1fec>
   15260:	mov	r0, r8
   15264:	mov	r2, r5
   15268:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1526c:	mov	r7, r0
   15270:	cmp	r7, r5
   15274:	mov	r4, r5
   15278:	beq	152b4 <main@@Base+0x2030>
   1527c:	ldrb	r0, [r7]
   15280:	cmp	r0, #93	; 0x5d
   15284:	bne	152b0 <main@@Base+0x202c>
   15288:	add	r1, r7, #1
   1528c:	sub	r0, r5, r1
   15290:	cmp	r0, #2
   15294:	blt	15e38 <main@@Base+0x2bb4>
   15298:	ldrb	r0, [r1]
   1529c:	cmp	r0, #32
   152a0:	bhi	153c0 <main@@Base+0x213c>
   152a4:	bne	15e38 <main@@Base+0x2bb4>
   152a8:	ldrb	r0, [r7, #2]!
   152ac:	b	15e30 <main@@Base+0x2bac>
   152b0:	mov	r4, r7
   152b4:	ldr	r0, [r8]
   152b8:	mov	r1, #1
   152bc:	bl	29764 <flatcc_builder_extend_vector@@Base>
   152c0:	mov	r3, r0
   152c4:	cmp	r0, #0
   152c8:	beq	13340 <main@@Base+0xbc>
   152cc:	mov	r0, r8
   152d0:	mov	r1, r4
   152d4:	mov	r2, r5
   152d8:	bl	1e85c <main@@Base+0xb5d8>
   152dc:	mov	r1, r0
   152e0:	sub	r0, r5, r0
   152e4:	cmp	r0, #2
   152e8:	blt	15314 <main@@Base+0x2090>
   152ec:	ldrb	r0, [r1]
   152f0:	cmp	r0, #32
   152f4:	bls	15300 <main@@Base+0x207c>
   152f8:	mov	r4, r1
   152fc:	b	15324 <main@@Base+0x20a0>
   15300:	bne	15314 <main@@Base+0x2090>
   15304:	mov	r4, r1
   15308:	ldrb	r0, [r4, #1]!
   1530c:	cmp	r0, #32
   15310:	bhi	15324 <main@@Base+0x20a0>
   15314:	mov	r0, r8
   15318:	mov	r2, r5
   1531c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   15320:	mov	r4, r0
   15324:	cmp	r4, r5
   15328:	beq	15394 <main@@Base+0x2110>
   1532c:	ldrb	r0, [r4]
   15330:	cmp	r0, #44	; 0x2c
   15334:	bne	1539c <main@@Base+0x2118>
   15338:	add	r1, r4, #1
   1533c:	sub	r0, r5, r1
   15340:	cmp	r0, #2
   15344:	blt	1536c <main@@Base+0x20e8>
   15348:	ldrb	r0, [r1]
   1534c:	cmp	r0, #32
   15350:	bls	1535c <main@@Base+0x20d8>
   15354:	mov	r4, r1
   15358:	b	1537c <main@@Base+0x20f8>
   1535c:	bne	1536c <main@@Base+0x20e8>
   15360:	ldrb	r0, [r4, #2]!
   15364:	cmp	r0, #32
   15368:	bhi	1537c <main@@Base+0x20f8>
   1536c:	mov	r0, r8
   15370:	mov	r2, r5
   15374:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   15378:	mov	r4, r0
   1537c:	cmp	r4, r5
   15380:	beq	153c8 <main@@Base+0x2144>
   15384:	ldrb	r0, [r4]
   15388:	cmp	r0, #93	; 0x5d
   1538c:	bne	152b4 <main@@Base+0x2030>
   15390:	b	153a4 <main@@Base+0x2120>
   15394:	mov	r7, r5
   15398:	b	15230 <main@@Base+0x1fac>
   1539c:	cmp	r0, #93	; 0x5d
   153a0:	bne	15868 <main@@Base+0x25e4>
   153a4:	add	r1, r4, #1
   153a8:	sub	r0, r5, r1
   153ac:	cmp	r0, #2
   153b0:	blt	15e38 <main@@Base+0x2bb4>
   153b4:	ldrb	r0, [r1]
   153b8:	cmp	r0, #32
   153bc:	bls	15e24 <main@@Base+0x2ba0>
   153c0:	mov	r7, r1
   153c4:	b	15230 <main@@Base+0x1fac>
   153c8:	mov	r0, r8
   153cc:	mov	r1, r5
   153d0:	b	15870 <main@@Base+0x25ec>
   153d4:	cmp	r0, #34	; 0x22
   153d8:	bne	18908 <main@@Base+0x5684>
   153dc:	add	r1, r9, #22
   153e0:	sub	r0, r5, r1
   153e4:	cmp	r0, #2
   153e8:	blt	166b4 <main@@Base+0x3430>
   153ec:	ldrb	r0, [r1]
   153f0:	cmp	r0, #32
   153f4:	bls	166a0 <main@@Base+0x341c>
   153f8:	mov	r4, r1
   153fc:	b	166c4 <main@@Base+0x3440>
   15400:	bne	15414 <main@@Base+0x2190>
   15404:	mov	r4, r1
   15408:	ldrb	r0, [r4, #1]!
   1540c:	cmp	r0, #32
   15410:	bhi	15424 <main@@Base+0x21a0>
   15414:	mov	r0, r6
   15418:	mov	r2, r5
   1541c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   15420:	mov	r4, r0
   15424:	cmp	r4, r5
   15428:	beq	1545c <main@@Base+0x21d8>
   1542c:	ldrb	r0, [r4]
   15430:	cmp	r0, #58	; 0x3a
   15434:	bne	1545c <main@@Base+0x21d8>
   15438:	add	r1, r4, #1
   1543c:	sub	r0, r5, r1
   15440:	cmp	r0, #2
   15444:	blt	16738 <main@@Base+0x34b4>
   15448:	ldrb	r0, [r1]
   1544c:	cmp	r0, #32
   15450:	bls	16728 <main@@Base+0x34a4>
   15454:	mov	r4, r1
   15458:	b	16748 <main@@Base+0x34c4>
   1545c:	mov	r0, r6
   15460:	mov	r1, r4
   15464:	mov	r2, r5
   15468:	mov	r3, #4
   1546c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   15470:	b	16744 <main@@Base+0x34c0>
   15474:	bne	15488 <main@@Base+0x2204>
   15478:	mov	r7, r1
   1547c:	ldrb	r0, [r7, #1]!
   15480:	cmp	r0, #32
   15484:	bhi	15498 <main@@Base+0x2214>
   15488:	mov	r0, r8
   1548c:	mov	r2, r5
   15490:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   15494:	mov	r7, r0
   15498:	cmp	r7, r5
   1549c:	beq	154d0 <main@@Base+0x224c>
   154a0:	ldrb	r0, [r7]
   154a4:	cmp	r0, #58	; 0x3a
   154a8:	bne	154d0 <main@@Base+0x224c>
   154ac:	add	r1, r7, #1
   154b0:	sub	r0, r5, r1
   154b4:	cmp	r0, #2
   154b8:	blt	16840 <main@@Base+0x35bc>
   154bc:	ldrb	r0, [r1]
   154c0:	cmp	r0, #32
   154c4:	bls	16830 <main@@Base+0x35ac>
   154c8:	mov	r7, r1
   154cc:	b	16850 <main@@Base+0x35cc>
   154d0:	mov	r0, r8
   154d4:	mov	r1, r7
   154d8:	mov	r2, r5
   154dc:	mov	r3, #4
   154e0:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   154e4:	b	1684c <main@@Base+0x35c8>
   154e8:	bne	154fc <main@@Base+0x2278>
   154ec:	mov	r4, r1
   154f0:	ldrb	r0, [r4, #1]!
   154f4:	cmp	r0, #32
   154f8:	bhi	1550c <main@@Base+0x2288>
   154fc:	mov	r0, r8
   15500:	mov	r2, r5
   15504:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   15508:	mov	r4, r0
   1550c:	cmp	r4, r5
   15510:	beq	15544 <main@@Base+0x22c0>
   15514:	ldrb	r0, [r4]
   15518:	cmp	r0, #58	; 0x3a
   1551c:	bne	15544 <main@@Base+0x22c0>
   15520:	add	r1, r4, #1
   15524:	sub	r0, r5, r1
   15528:	cmp	r0, #2
   1552c:	blt	169a4 <main@@Base+0x3720>
   15530:	ldrb	r0, [r1]
   15534:	cmp	r0, #32
   15538:	bls	16994 <main@@Base+0x3710>
   1553c:	mov	r4, r1
   15540:	b	169b4 <main@@Base+0x3730>
   15544:	mov	r0, r8
   15548:	mov	r1, r4
   1554c:	mov	r2, r5
   15550:	mov	r3, #4
   15554:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   15558:	b	169b0 <main@@Base+0x372c>
   1555c:	bne	15570 <main@@Base+0x22ec>
   15560:	mov	r7, r1
   15564:	ldrb	r0, [r7, #1]!
   15568:	cmp	r0, #32
   1556c:	bhi	15580 <main@@Base+0x22fc>
   15570:	mov	r0, r8
   15574:	mov	r2, r5
   15578:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1557c:	mov	r7, r0
   15580:	cmp	r7, r5
   15584:	beq	155b8 <main@@Base+0x2334>
   15588:	ldrb	r0, [r7]
   1558c:	cmp	r0, #58	; 0x3a
   15590:	bne	155b8 <main@@Base+0x2334>
   15594:	add	r1, r7, #1
   15598:	sub	r0, r5, r1
   1559c:	cmp	r0, #2
   155a0:	blt	177e0 <main@@Base+0x455c>
   155a4:	ldrb	r0, [r1]
   155a8:	cmp	r0, #32
   155ac:	bls	177d0 <main@@Base+0x454c>
   155b0:	mov	r7, r1
   155b4:	b	177f0 <main@@Base+0x456c>
   155b8:	mov	r0, r8
   155bc:	mov	r1, r7
   155c0:	mov	r2, r5
   155c4:	mov	r3, #4
   155c8:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   155cc:	b	177ec <main@@Base+0x4568>
   155d0:	cmp	r0, #34	; 0x22
   155d4:	bne	1b160 <main@@Base+0x7edc>
   155d8:	add	r1, r9, #18
   155dc:	sub	r0, r5, r1
   155e0:	cmp	r0, #2
   155e4:	blt	1788c <main@@Base+0x4608>
   155e8:	ldrb	r0, [r1]
   155ec:	cmp	r0, #32
   155f0:	bls	17878 <main@@Base+0x45f4>
   155f4:	mov	r4, r1
   155f8:	b	1789c <main@@Base+0x4618>
   155fc:	cmp	r0, #34	; 0x22
   15600:	bne	19688 <main@@Base+0x6404>
   15604:	add	r1, r9, #17
   15608:	sub	r0, r5, r1
   1560c:	cmp	r0, #2
   15610:	blt	1790c <main@@Base+0x4688>
   15614:	ldrb	r0, [r1]
   15618:	cmp	r0, #32
   1561c:	bls	178f8 <main@@Base+0x4674>
   15620:	mov	r7, r1
   15624:	b	1791c <main@@Base+0x4698>
   15628:	cmp	r0, #34	; 0x22
   1562c:	bne	1986c <main@@Base+0x65e8>
   15630:	add	r1, r9, #17
   15634:	sub	r0, r5, r1
   15638:	cmp	r0, #2
   1563c:	blt	17988 <main@@Base+0x4704>
   15640:	ldrb	r0, [r1]
   15644:	cmp	r0, #32
   15648:	bls	17974 <main@@Base+0x46f0>
   1564c:	mov	r7, r1
   15650:	b	17998 <main@@Base+0x4714>
   15654:	bne	15668 <main@@Base+0x23e4>
   15658:	mov	r7, r1
   1565c:	ldrb	r0, [r7, #1]!
   15660:	cmp	r0, #32
   15664:	bhi	15678 <main@@Base+0x23f4>
   15668:	mov	r0, r8
   1566c:	mov	r2, r5
   15670:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   15674:	mov	r7, r0
   15678:	cmp	r7, r5
   1567c:	beq	156b0 <main@@Base+0x242c>
   15680:	ldrb	r0, [r7]
   15684:	cmp	r0, #58	; 0x3a
   15688:	bne	156b0 <main@@Base+0x242c>
   1568c:	add	r1, r7, #1
   15690:	sub	r0, r5, r1
   15694:	cmp	r0, #2
   15698:	blt	17a18 <main@@Base+0x4794>
   1569c:	ldrb	r0, [r1]
   156a0:	cmp	r0, #32
   156a4:	bls	17a08 <main@@Base+0x4784>
   156a8:	mov	r7, r1
   156ac:	b	17a28 <main@@Base+0x47a4>
   156b0:	mov	r0, r8
   156b4:	mov	r1, r7
   156b8:	mov	r2, r5
   156bc:	mov	r3, #4
   156c0:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   156c4:	b	17a24 <main@@Base+0x47a0>
   156c8:	bne	156d8 <main@@Base+0x2454>
   156cc:	ldrb	r0, [r1, #2]!
   156d0:	cmp	r0, #32
   156d4:	bhi	156ec <main@@Base+0x2468>
   156d8:	mov	r1, r2
   156dc:	mov	r0, r8
   156e0:	mov	r2, r5
   156e4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   156e8:	mov	r1, r0
   156ec:	cmp	r9, r1
   156f0:	beq	1623c <main@@Base+0x2fb8>
   156f4:	mov	r0, r8
   156f8:	mov	r2, r5
   156fc:	add	r3, sp, #52	; 0x34
   15700:	bl	13300 <main@@Base+0x7c>
   15704:	mov	r4, r0
   15708:	ldr	r0, [sp, #52]	; 0x34
   1570c:	cmp	r0, #0
   15710:	beq	13340 <main@@Base+0xbc>
   15714:	ldr	r0, [r8]
   15718:	mov	r1, #12
   1571c:	b	15a40 <main@@Base+0x27bc>
   15720:	bne	15730 <main@@Base+0x24ac>
   15724:	ldrb	r0, [r7, #2]!
   15728:	cmp	r0, #32
   1572c:	bhi	15740 <main@@Base+0x24bc>
   15730:	mov	r0, r8
   15734:	mov	r2, r5
   15738:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1573c:	mov	r7, r0
   15740:	cmp	r9, r7
   15744:	beq	1623c <main@@Base+0x2fb8>
   15748:	mov	r6, #0
   1574c:	cmp	r7, r5
   15750:	str	r6, [fp, #-52]	; 0xffffffcc
   15754:	str	r6, [fp, #-56]	; 0xffffffc8
   15758:	strb	r6, [fp, #-60]	; 0xffffffc4
   1575c:	str	r6, [sp, #56]	; 0x38
   15760:	beq	157c0 <main@@Base+0x253c>
   15764:	sub	r0, fp, #56	; 0x38
   15768:	mov	r1, r7
   1576c:	mov	r2, r5
   15770:	add	r3, sp, #56	; 0x38
   15774:	str	r0, [sp]
   15778:	mov	r0, r8
   1577c:	bl	2edac <flatcc_json_parser_integer@@Base>
   15780:	cmp	r0, r7
   15784:	beq	157c8 <main@@Base+0x2544>
   15788:	ldr	r2, [sp, #56]	; 0x38
   1578c:	mov	r4, r0
   15790:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15794:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15798:	cmp	r2, #0
   1579c:	beq	157d0 <main@@Base+0x254c>
   157a0:	subs	r2, r0, #129	; 0x81
   157a4:	sbcs	r1, r1, #0
   157a8:	bcc	157f8 <main@@Base+0x2574>
   157ac:	mov	r0, r8
   157b0:	mov	r1, r4
   157b4:	mov	r2, r5
   157b8:	mov	r3, #8
   157bc:	b	157ec <main@@Base+0x2568>
   157c0:	mov	r4, r5
   157c4:	b	15808 <main@@Base+0x2584>
   157c8:	mov	r4, r7
   157cc:	b	15808 <main@@Base+0x2584>
   157d0:	subs	r2, r0, #128	; 0x80
   157d4:	sbcs	r1, r1, #0
   157d8:	bcc	15800 <main@@Base+0x257c>
   157dc:	mov	r0, r8
   157e0:	mov	r1, r4
   157e4:	mov	r2, r5
   157e8:	mov	r3, #7
   157ec:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   157f0:	mov	r4, r0
   157f4:	b	15808 <main@@Base+0x2584>
   157f8:	rsb	r6, r0, #0
   157fc:	b	15804 <main@@Base+0x2580>
   15800:	mov	r6, r0
   15804:	strb	r6, [fp, #-60]	; 0xffffffc4
   15808:	cmp	r7, r4
   1580c:	bne	15844 <main@@Base+0x25c0>
   15810:	movw	r3, #16516	; 0x4084
   15814:	sub	r0, fp, #60	; 0x3c
   15818:	mov	r1, r7
   1581c:	mov	r2, r5
   15820:	movt	r3, #4
   15824:	str	r0, [sp]
   15828:	mov	r0, r8
   1582c:	bl	1e1b4 <main@@Base+0xaf30>
   15830:	mov	r4, r0
   15834:	cmp	r0, r7
   15838:	cmpne	r4, r5
   1583c:	beq	13340 <main@@Base+0xbc>
   15840:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   15844:	uxtb	r0, r6
   15848:	cmp	r0, #8
   1584c:	bne	1585c <main@@Base+0x25d8>
   15850:	ldrb	r0, [r8, #8]
   15854:	tst	r0, #2
   15858:	beq	1bba8 <main@@Base+0x8924>
   1585c:	ldr	r0, [r8]
   15860:	mov	r1, #6
   15864:	b	1666c <main@@Base+0x33e8>
   15868:	mov	r0, r8
   1586c:	mov	r1, r4
   15870:	mov	r2, r5
   15874:	mov	r3, #9
   15878:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1587c:	b	1522c <main@@Base+0x1fa8>
   15880:	cmp	r0, #34	; 0x22
   15884:	bne	1b160 <main@@Base+0x7edc>
   15888:	add	r1, r9, #18
   1588c:	sub	r0, r5, r1
   15890:	cmp	r0, #2
   15894:	blt	17bac <main@@Base+0x4928>
   15898:	ldrb	r0, [r1]
   1589c:	cmp	r0, #32
   158a0:	bls	17b98 <main@@Base+0x4914>
   158a4:	mov	r4, r1
   158a8:	b	17bbc <main@@Base+0x4938>
   158ac:	cmp	r0, #34	; 0x22
   158b0:	bne	1b160 <main@@Base+0x7edc>
   158b4:	add	r1, r9, #10
   158b8:	sub	r0, r5, r1
   158bc:	cmp	r0, #2
   158c0:	blt	17c2c <main@@Base+0x49a8>
   158c4:	ldrb	r0, [r1]
   158c8:	cmp	r0, #32
   158cc:	bls	17c18 <main@@Base+0x4994>
   158d0:	mov	r4, r1
   158d4:	b	17c3c <main@@Base+0x49b8>
   158d8:	cmp	r0, #34	; 0x22
   158dc:	bne	1b160 <main@@Base+0x7edc>
   158e0:	add	r1, r9, #10
   158e4:	sub	r0, r5, r1
   158e8:	cmp	r0, #2
   158ec:	blt	17cac <main@@Base+0x4a28>
   158f0:	ldrb	r0, [r1]
   158f4:	cmp	r0, #32
   158f8:	bls	17c98 <main@@Base+0x4a14>
   158fc:	mov	r4, r1
   15900:	b	17cbc <main@@Base+0x4a38>
   15904:	cmp	r0, #34	; 0x22
   15908:	bne	167b0 <main@@Base+0x352c>
   1590c:	add	r1, r9, #16
   15910:	sub	r0, r5, r1
   15914:	cmp	r0, #2
   15918:	blt	17fe0 <main@@Base+0x4d5c>
   1591c:	ldrb	r0, [r1]
   15920:	cmp	r0, #32
   15924:	bls	17fcc <main@@Base+0x4d48>
   15928:	mov	r4, r1
   1592c:	b	17ff0 <main@@Base+0x4d6c>
   15930:	bne	15940 <main@@Base+0x26bc>
   15934:	ldrb	r0, [r1, #2]!
   15938:	cmp	r0, #32
   1593c:	bhi	15954 <main@@Base+0x26d0>
   15940:	mov	r1, r2
   15944:	mov	r0, r8
   15948:	mov	r2, r5
   1594c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   15950:	mov	r1, r0
   15954:	ldr	sl, [sp, #40]	; 0x28
   15958:	cmp	r9, r1
   1595c:	beq	1623c <main@@Base+0x2fb8>
   15960:	mov	r0, r8
   15964:	mov	r2, r5
   15968:	add	r3, sp, #52	; 0x34
   1596c:	bl	2f2d8 <flatcc_json_parser_build_string@@Base>
   15970:	mov	r4, r0
   15974:	ldr	r0, [sp, #52]	; 0x34
   15978:	cmp	r0, #0
   1597c:	beq	13340 <main@@Base+0xbc>
   15980:	ldr	r0, [r8]
   15984:	mov	r1, #3
   15988:	b	15a40 <main@@Base+0x27bc>
   1598c:	bne	1599c <main@@Base+0x2718>
   15990:	ldrb	r0, [r4, #2]!
   15994:	cmp	r0, #32
   15998:	bhi	159ac <main@@Base+0x2728>
   1599c:	mov	r0, r8
   159a0:	mov	r2, r5
   159a4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   159a8:	mov	r4, r0
   159ac:	ldr	sl, [sp, #40]	; 0x28
   159b0:	cmp	r9, r4
   159b4:	beq	1623c <main@@Base+0x2fb8>
   159b8:	ldr	r0, [r8]
   159bc:	mov	r1, #1
   159c0:	mov	r2, #1
   159c4:	mvn	r3, #0
   159c8:	bl	29f5c <flatcc_builder_start_vector@@Base>
   159cc:	cmp	r0, #0
   159d0:	bne	13340 <main@@Base+0xbc>
   159d4:	cmp	r4, r5
   159d8:	beq	15a0c <main@@Base+0x2788>
   159dc:	ldrb	r0, [r4]
   159e0:	cmp	r0, #91	; 0x5b
   159e4:	bne	15a0c <main@@Base+0x2788>
   159e8:	add	r1, r4, #1
   159ec:	sub	r0, r5, r1
   159f0:	cmp	r0, #2
   159f4:	blt	15a64 <main@@Base+0x27e0>
   159f8:	ldrb	r0, [r1]
   159fc:	cmp	r0, #32
   15a00:	bls	15a54 <main@@Base+0x27d0>
   15a04:	mov	r4, r1
   15a08:	b	15a74 <main@@Base+0x27f0>
   15a0c:	mov	r0, r8
   15a10:	mov	r1, r4
   15a14:	mov	r2, r5
   15a18:	mov	r3, #22
   15a1c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   15a20:	mov	r4, r0
   15a24:	ldr	r0, [r8]
   15a28:	bl	2af88 <flatcc_builder_end_vector@@Base>
   15a2c:	cmp	r0, #0
   15a30:	str	r0, [sp, #52]	; 0x34
   15a34:	beq	13340 <main@@Base+0xbc>
   15a38:	ldr	r0, [r8]
   15a3c:	mov	r1, #30
   15a40:	bl	2b448 <flatcc_builder_table_add_offset@@Base>
   15a44:	cmp	r0, #0
   15a48:	beq	13340 <main@@Base+0xbc>
   15a4c:	ldr	r1, [sp, #52]	; 0x34
   15a50:	b	16294 <main@@Base+0x3010>
   15a54:	bne	15a64 <main@@Base+0x27e0>
   15a58:	ldrb	r0, [r4, #2]!
   15a5c:	cmp	r0, #32
   15a60:	bhi	15a74 <main@@Base+0x27f0>
   15a64:	mov	r0, r8
   15a68:	mov	r2, r5
   15a6c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   15a70:	mov	r4, r0
   15a74:	cmp	r4, r5
   15a78:	mov	r6, r5
   15a7c:	beq	15a90 <main@@Base+0x280c>
   15a80:	ldrb	r0, [r4]
   15a84:	cmp	r0, #93	; 0x5d
   15a88:	beq	15c7c <main@@Base+0x29f8>
   15a8c:	mov	r6, r4
   15a90:	mov	r0, #0
   15a94:	mov	r1, #1
   15a98:	strb	r0, [fp, #-60]	; 0xffffffc4
   15a9c:	ldr	r0, [r8]
   15aa0:	bl	29764 <flatcc_builder_extend_vector@@Base>
   15aa4:	cmp	r0, #0
   15aa8:	beq	1cdb8 <main@@Base+0x9b34>
   15aac:	mov	r7, r0
   15ab0:	mov	r4, r6
   15ab4:	mov	r6, #0
   15ab8:	cmp	r4, r5
   15abc:	str	r6, [fp, #-52]	; 0xffffffcc
   15ac0:	str	r6, [fp, #-56]	; 0xffffffc8
   15ac4:	strb	r6, [fp, #-60]	; 0xffffffc4
   15ac8:	str	r6, [sp, #56]	; 0x38
   15acc:	beq	15b14 <main@@Base+0x2890>
   15ad0:	sub	r0, fp, #56	; 0x38
   15ad4:	mov	r1, r4
   15ad8:	mov	r2, r5
   15adc:	add	r3, sp, #56	; 0x38
   15ae0:	str	r0, [sp]
   15ae4:	mov	r0, r8
   15ae8:	bl	2edac <flatcc_json_parser_integer@@Base>
   15aec:	cmp	r0, r4
   15af0:	beq	15b1c <main@@Base+0x2898>
   15af4:	mov	r1, r0
   15af8:	ldr	r0, [sp, #56]	; 0x38
   15afc:	cmp	r0, #0
   15b00:	beq	15b24 <main@@Base+0x28a0>
   15b04:	mov	r0, r8
   15b08:	mov	r2, r5
   15b0c:	mov	r3, #8
   15b10:	b	15b44 <main@@Base+0x28c0>
   15b14:	mov	r1, r5
   15b18:	b	15b4c <main@@Base+0x28c8>
   15b1c:	mov	r1, r4
   15b20:	b	15b4c <main@@Base+0x28c8>
   15b24:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15b28:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15b2c:	subs	r3, r0, #256	; 0x100
   15b30:	sbcs	r2, r2, #0
   15b34:	bcc	15c60 <main@@Base+0x29dc>
   15b38:	mov	r0, r8
   15b3c:	mov	r2, r5
   15b40:	mov	r3, #7
   15b44:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   15b48:	mov	r1, r0
   15b4c:	cmp	r4, r1
   15b50:	bne	15b88 <main@@Base+0x2904>
   15b54:	movw	r3, #16532	; 0x4094
   15b58:	sub	r0, fp, #60	; 0x3c
   15b5c:	mov	r1, r4
   15b60:	mov	r2, r5
   15b64:	movt	r3, #4
   15b68:	str	r0, [sp]
   15b6c:	mov	r0, r8
   15b70:	bl	1e3f0 <main@@Base+0xb16c>
   15b74:	mov	r1, r0
   15b78:	cmp	r0, r4
   15b7c:	cmpne	r1, r5
   15b80:	beq	1cdc4 <main@@Base+0x9b40>
   15b84:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   15b88:	sub	r0, r5, r1
   15b8c:	strb	r6, [r7]
   15b90:	cmp	r0, #2
   15b94:	blt	15bc0 <main@@Base+0x293c>
   15b98:	ldrb	r0, [r1]
   15b9c:	cmp	r0, #32
   15ba0:	bls	15bac <main@@Base+0x2928>
   15ba4:	mov	r4, r1
   15ba8:	b	15bd0 <main@@Base+0x294c>
   15bac:	bne	15bc0 <main@@Base+0x293c>
   15bb0:	mov	r4, r1
   15bb4:	ldrb	r0, [r4, #1]!
   15bb8:	cmp	r0, #32
   15bbc:	bhi	15bd0 <main@@Base+0x294c>
   15bc0:	mov	r0, r8
   15bc4:	mov	r2, r5
   15bc8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   15bcc:	mov	r4, r0
   15bd0:	cmp	r4, r5
   15bd4:	beq	15c6c <main@@Base+0x29e8>
   15bd8:	ldrb	r0, [r4]
   15bdc:	cmp	r0, #44	; 0x2c
   15be0:	bne	15c74 <main@@Base+0x29f0>
   15be4:	add	r1, r4, #1
   15be8:	sub	r0, r5, r1
   15bec:	cmp	r0, #2
   15bf0:	blt	15c18 <main@@Base+0x2994>
   15bf4:	ldrb	r0, [r1]
   15bf8:	cmp	r0, #32
   15bfc:	bls	15c08 <main@@Base+0x2984>
   15c00:	mov	r4, r1
   15c04:	b	15c28 <main@@Base+0x29a4>
   15c08:	bne	15c18 <main@@Base+0x2994>
   15c0c:	ldrb	r0, [r4, #2]!
   15c10:	cmp	r0, #32
   15c14:	bhi	15c28 <main@@Base+0x29a4>
   15c18:	mov	r0, r8
   15c1c:	mov	r2, r5
   15c20:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   15c24:	mov	r4, r0
   15c28:	cmp	r4, r5
   15c2c:	beq	15cc0 <main@@Base+0x2a3c>
   15c30:	ldrb	r0, [r4]
   15c34:	cmp	r0, #93	; 0x5d
   15c38:	beq	15c7c <main@@Base+0x29f8>
   15c3c:	mov	r0, #0
   15c40:	mov	r1, #1
   15c44:	strb	r0, [fp, #-60]	; 0xffffffc4
   15c48:	ldr	r0, [r8]
   15c4c:	bl	29764 <flatcc_builder_extend_vector@@Base>
   15c50:	mov	r7, r0
   15c54:	cmp	r0, #0
   15c58:	bne	15ab4 <main@@Base+0x2830>
   15c5c:	b	13340 <main@@Base+0xbc>
   15c60:	mov	r6, r0
   15c64:	strb	r0, [fp, #-60]	; 0xffffffc4
   15c68:	b	15b4c <main@@Base+0x28c8>
   15c6c:	mov	r4, r5
   15c70:	b	15a24 <main@@Base+0x27a0>
   15c74:	cmp	r0, #93	; 0x5d
   15c78:	bne	16714 <main@@Base+0x3490>
   15c7c:	add	r1, r4, #1
   15c80:	sub	r0, r5, r1
   15c84:	cmp	r0, #2
   15c88:	blt	15cb0 <main@@Base+0x2a2c>
   15c8c:	ldrb	r0, [r1]
   15c90:	cmp	r0, #32
   15c94:	bls	15ca0 <main@@Base+0x2a1c>
   15c98:	mov	r4, r1
   15c9c:	b	15a24 <main@@Base+0x27a0>
   15ca0:	bne	15cb0 <main@@Base+0x2a2c>
   15ca4:	ldrb	r0, [r4, #2]!
   15ca8:	cmp	r0, #32
   15cac:	bhi	15a24 <main@@Base+0x27a0>
   15cb0:	mov	r0, r8
   15cb4:	mov	r2, r5
   15cb8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   15cbc:	b	15a20 <main@@Base+0x279c>
   15cc0:	mov	r0, r8
   15cc4:	mov	r1, r5
   15cc8:	b	1671c <main@@Base+0x3498>
   15ccc:	bne	15cdc <main@@Base+0x2a58>
   15cd0:	ldrb	r0, [r1, #2]!
   15cd4:	cmp	r0, #32
   15cd8:	bhi	15cf0 <main@@Base+0x2a6c>
   15cdc:	ldr	r0, [sp, #36]	; 0x24
   15ce0:	mov	r1, r2
   15ce4:	mov	r2, r5
   15ce8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   15cec:	mov	r1, r0
   15cf0:	cmp	r9, r1
   15cf4:	beq	15d2c <main@@Base+0x2aa8>
   15cf8:	ldr	r0, [sp, #48]	; 0x30
   15cfc:	ldr	r8, [sp, #36]	; 0x24
   15d00:	mov	r2, #8
   15d04:	mov	r3, #0
   15d08:	str	r2, [sp]
   15d0c:	mov	r2, r5
   15d10:	str	r0, [sp, #4]
   15d14:	movw	r0, #61268	; 0xef54
   15d18:	movt	r0, #1
   15d1c:	str	r0, [sp, #8]
   15d20:	mov	r0, r8
   15d24:	bl	2f5a4 <flatcc_json_parser_union@@Base>
   15d28:	b	167c0 <main@@Base+0x353c>
   15d2c:	eor	r0, r6, #889192448	; 0x35000000
   15d30:	orrs	r0, r0, r4
   15d34:	bne	161b0 <main@@Base+0x2f2c>
   15d38:	cmp	sl, #6
   15d3c:	mov	r7, r9
   15d40:	blt	1614c <main@@Base+0x2ec8>
   15d44:	ldr	r2, [sp, #32]
   15d48:	mov	r1, r9
   15d4c:	ldrb	r0, [r1, #5]!
   15d50:	ldr	r2, [r2]
   15d54:	cmp	r2, #0
   15d58:	beq	15d80 <main@@Base+0x2afc>
   15d5c:	cmp	r0, #33	; 0x21
   15d60:	bcc	15d70 <main@@Base+0x2aec>
   15d64:	cmp	r0, #58	; 0x3a
   15d68:	mov	r7, r9
   15d6c:	bne	1614c <main@@Base+0x2ec8>
   15d70:	ldr	r0, [sp, #32]
   15d74:	mov	r2, #0
   15d78:	str	r2, [r0]
   15d7c:	b	15d90 <main@@Base+0x2b0c>
   15d80:	cmp	r0, #34	; 0x22
   15d84:	mov	r7, r9
   15d88:	bne	1614c <main@@Base+0x2ec8>
   15d8c:	add	r1, r9, #6
   15d90:	sub	r0, r5, r1
   15d94:	cmp	r0, #2
   15d98:	blt	15dc4 <main@@Base+0x2b40>
   15d9c:	ldrb	r0, [r1]
   15da0:	cmp	r0, #32
   15da4:	bls	15db0 <main@@Base+0x2b2c>
   15da8:	mov	r7, r1
   15dac:	b	15dd4 <main@@Base+0x2b50>
   15db0:	bne	15dc4 <main@@Base+0x2b40>
   15db4:	mov	r7, r1
   15db8:	ldrb	r0, [r7, #1]!
   15dbc:	cmp	r0, #32
   15dc0:	bhi	15dd4 <main@@Base+0x2b50>
   15dc4:	ldr	r0, [sp, #36]	; 0x24
   15dc8:	mov	r2, r5
   15dcc:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   15dd0:	mov	r7, r0
   15dd4:	cmp	r7, r5
   15dd8:	beq	15e0c <main@@Base+0x2b88>
   15ddc:	ldrb	r0, [r7]
   15de0:	cmp	r0, #58	; 0x3a
   15de4:	bne	15e0c <main@@Base+0x2b88>
   15de8:	add	r1, r7, #1
   15dec:	sub	r0, r5, r1
   15df0:	cmp	r0, #2
   15df4:	blt	1613c <main@@Base+0x2eb8>
   15df8:	ldrb	r0, [r1]
   15dfc:	cmp	r0, #32
   15e00:	bls	1612c <main@@Base+0x2ea8>
   15e04:	mov	r7, r1
   15e08:	b	1614c <main@@Base+0x2ec8>
   15e0c:	ldr	r0, [sp, #36]	; 0x24
   15e10:	mov	r1, r7
   15e14:	mov	r2, r5
   15e18:	mov	r3, #4
   15e1c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   15e20:	b	16148 <main@@Base+0x2ec4>
   15e24:	bne	15e38 <main@@Base+0x2bb4>
   15e28:	ldrb	r0, [r4, #2]!
   15e2c:	mov	r7, r4
   15e30:	cmp	r0, #32
   15e34:	bhi	15230 <main@@Base+0x1fac>
   15e38:	mov	r0, r8
   15e3c:	mov	r2, r5
   15e40:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   15e44:	b	1522c <main@@Base+0x1fa8>
   15e48:	cmp	r0, #34	; 0x22
   15e4c:	bne	1b160 <main@@Base+0x7edc>
   15e50:	add	r1, r9, #21
   15e54:	sub	r0, r5, r1
   15e58:	cmp	r0, #2
   15e5c:	blt	1805c <main@@Base+0x4dd8>
   15e60:	ldrb	r0, [r1]
   15e64:	cmp	r0, #32
   15e68:	bls	18048 <main@@Base+0x4dc4>
   15e6c:	mov	r4, r1
   15e70:	b	1806c <main@@Base+0x4de8>
   15e74:	bne	15e88 <main@@Base+0x2c04>
   15e78:	mov	r4, r1
   15e7c:	ldrb	r0, [r4, #1]!
   15e80:	cmp	r0, #32
   15e84:	bhi	15e98 <main@@Base+0x2c14>
   15e88:	mov	r0, r8
   15e8c:	mov	r2, r5
   15e90:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   15e94:	mov	r4, r0
   15e98:	cmp	r4, r5
   15e9c:	beq	15ed0 <main@@Base+0x2c4c>
   15ea0:	ldrb	r0, [r4]
   15ea4:	cmp	r0, #58	; 0x3a
   15ea8:	bne	15ed0 <main@@Base+0x2c4c>
   15eac:	add	r1, r4, #1
   15eb0:	sub	r0, r5, r1
   15eb4:	cmp	r0, #2
   15eb8:	blt	18158 <main@@Base+0x4ed4>
   15ebc:	ldrb	r0, [r1]
   15ec0:	cmp	r0, #32
   15ec4:	bls	18148 <main@@Base+0x4ec4>
   15ec8:	mov	r4, r1
   15ecc:	b	18168 <main@@Base+0x4ee4>
   15ed0:	mov	r0, r8
   15ed4:	mov	r1, r4
   15ed8:	mov	r2, r5
   15edc:	mov	r3, #4
   15ee0:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   15ee4:	b	18164 <main@@Base+0x4ee0>
   15ee8:	bne	15efc <main@@Base+0x2c78>
   15eec:	mov	r4, r1
   15ef0:	ldrb	r0, [r4, #1]!
   15ef4:	cmp	r0, #32
   15ef8:	bhi	15f0c <main@@Base+0x2c88>
   15efc:	mov	r0, r8
   15f00:	mov	r2, r5
   15f04:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   15f08:	mov	r4, r0
   15f0c:	cmp	r4, r5
   15f10:	beq	15f44 <main@@Base+0x2cc0>
   15f14:	ldrb	r0, [r4]
   15f18:	cmp	r0, #58	; 0x3a
   15f1c:	bne	15f44 <main@@Base+0x2cc0>
   15f20:	add	r1, r4, #1
   15f24:	sub	r0, r5, r1
   15f28:	cmp	r0, #2
   15f2c:	blt	18258 <main@@Base+0x4fd4>
   15f30:	ldrb	r0, [r1]
   15f34:	cmp	r0, #32
   15f38:	bls	18248 <main@@Base+0x4fc4>
   15f3c:	mov	r4, r1
   15f40:	b	18268 <main@@Base+0x4fe4>
   15f44:	mov	r0, r8
   15f48:	mov	r1, r4
   15f4c:	mov	r2, r5
   15f50:	mov	r3, #4
   15f54:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   15f58:	b	18264 <main@@Base+0x4fe0>
   15f5c:	bne	15f70 <main@@Base+0x2cec>
   15f60:	mov	r7, r1
   15f64:	ldrb	r0, [r7, #1]!
   15f68:	cmp	r0, #32
   15f6c:	bhi	15f80 <main@@Base+0x2cfc>
   15f70:	mov	r0, r8
   15f74:	mov	r2, r5
   15f78:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   15f7c:	mov	r7, r0
   15f80:	cmp	r7, r5
   15f84:	beq	15fb8 <main@@Base+0x2d34>
   15f88:	ldrb	r0, [r7]
   15f8c:	cmp	r0, #58	; 0x3a
   15f90:	bne	15fb8 <main@@Base+0x2d34>
   15f94:	add	r1, r7, #1
   15f98:	sub	r0, r5, r1
   15f9c:	cmp	r0, #2
   15fa0:	blt	18300 <main@@Base+0x507c>
   15fa4:	ldrb	r0, [r1]
   15fa8:	cmp	r0, #32
   15fac:	bls	182f0 <main@@Base+0x506c>
   15fb0:	mov	r7, r1
   15fb4:	b	18310 <main@@Base+0x508c>
   15fb8:	mov	r0, r8
   15fbc:	mov	r1, r7
   15fc0:	mov	r2, r5
   15fc4:	mov	r3, #4
   15fc8:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   15fcc:	b	1830c <main@@Base+0x5088>
   15fd0:	bne	15fe4 <main@@Base+0x2d60>
   15fd4:	mov	r7, r1
   15fd8:	ldrb	r0, [r7, #1]!
   15fdc:	cmp	r0, #32
   15fe0:	bhi	15ff4 <main@@Base+0x2d70>
   15fe4:	mov	r0, r8
   15fe8:	mov	r2, r5
   15fec:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   15ff0:	mov	r7, r0
   15ff4:	cmp	r7, r5
   15ff8:	beq	1602c <main@@Base+0x2da8>
   15ffc:	ldrb	r0, [r7]
   16000:	cmp	r0, #58	; 0x3a
   16004:	bne	1602c <main@@Base+0x2da8>
   16008:	add	r1, r7, #1
   1600c:	sub	r0, r5, r1
   16010:	cmp	r0, #2
   16014:	blt	18420 <main@@Base+0x519c>
   16018:	ldrb	r0, [r1]
   1601c:	cmp	r0, #32
   16020:	bls	18410 <main@@Base+0x518c>
   16024:	mov	r7, r1
   16028:	b	18430 <main@@Base+0x51ac>
   1602c:	mov	r0, r8
   16030:	mov	r1, r7
   16034:	mov	r2, r5
   16038:	mov	r3, #4
   1603c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   16040:	b	1842c <main@@Base+0x51a8>
   16044:	bne	16058 <main@@Base+0x2dd4>
   16048:	mov	r7, r1
   1604c:	ldrb	r0, [r7, #1]!
   16050:	cmp	r0, #32
   16054:	bhi	16068 <main@@Base+0x2de4>
   16058:	mov	r0, r8
   1605c:	mov	r2, r5
   16060:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   16064:	mov	r7, r0
   16068:	cmp	r7, r5
   1606c:	beq	160a0 <main@@Base+0x2e1c>
   16070:	ldrb	r0, [r7]
   16074:	cmp	r0, #58	; 0x3a
   16078:	bne	160a0 <main@@Base+0x2e1c>
   1607c:	add	r1, r7, #1
   16080:	sub	r0, r5, r1
   16084:	cmp	r0, #2
   16088:	blt	18588 <main@@Base+0x5304>
   1608c:	ldrb	r0, [r1]
   16090:	cmp	r0, #32
   16094:	bls	18578 <main@@Base+0x52f4>
   16098:	mov	r7, r1
   1609c:	b	18598 <main@@Base+0x5314>
   160a0:	mov	r0, r8
   160a4:	mov	r1, r7
   160a8:	mov	r2, r5
   160ac:	mov	r3, #4
   160b0:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   160b4:	b	18594 <main@@Base+0x5310>
   160b8:	bne	160cc <main@@Base+0x2e48>
   160bc:	mov	r7, r1
   160c0:	ldrb	r0, [r7, #1]!
   160c4:	cmp	r0, #32
   160c8:	bhi	160dc <main@@Base+0x2e58>
   160cc:	mov	r0, r8
   160d0:	mov	r2, r5
   160d4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   160d8:	mov	r7, r0
   160dc:	cmp	r7, r5
   160e0:	beq	16114 <main@@Base+0x2e90>
   160e4:	ldrb	r0, [r7]
   160e8:	cmp	r0, #58	; 0x3a
   160ec:	bne	16114 <main@@Base+0x2e90>
   160f0:	add	r1, r7, #1
   160f4:	sub	r0, r5, r1
   160f8:	cmp	r0, #2
   160fc:	blt	18634 <main@@Base+0x53b0>
   16100:	ldrb	r0, [r1]
   16104:	cmp	r0, #32
   16108:	bls	18624 <main@@Base+0x53a0>
   1610c:	mov	r7, r1
   16110:	b	18644 <main@@Base+0x53c0>
   16114:	mov	r0, r8
   16118:	mov	r1, r7
   1611c:	mov	r2, r5
   16120:	mov	r3, #4
   16124:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   16128:	b	18640 <main@@Base+0x53bc>
   1612c:	bne	1613c <main@@Base+0x2eb8>
   16130:	ldrb	r0, [r7, #2]!
   16134:	cmp	r0, #32
   16138:	bhi	1614c <main@@Base+0x2ec8>
   1613c:	ldr	r0, [sp, #36]	; 0x24
   16140:	mov	r2, r5
   16144:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   16148:	mov	r7, r0
   1614c:	cmp	r9, r7
   16150:	beq	161b0 <main@@Base+0x2f2c>
   16154:	ldr	r8, [sp, #36]	; 0x24
   16158:	mov	r1, #4
   1615c:	mov	r2, #2
   16160:	mvn	r3, #-1073741824	; 0xc0000000
   16164:	ldr	r0, [r8]
   16168:	bl	29f5c <flatcc_builder_start_vector@@Base>
   1616c:	cmp	r0, #0
   16170:	bne	1cdf0 <main@@Base+0x9b6c>
   16174:	cmp	r7, r5
   16178:	beq	16248 <main@@Base+0x2fc4>
   1617c:	ldrb	r0, [r7]
   16180:	cmp	r0, #91	; 0x5b
   16184:	bne	16248 <main@@Base+0x2fc4>
   16188:	ldr	sl, [sp, #40]	; 0x28
   1618c:	add	r1, r7, #1
   16190:	sub	r0, r5, r1
   16194:	cmp	r0, #2
   16198:	blt	162d8 <main@@Base+0x3054>
   1619c:	ldrb	r0, [r1]
   161a0:	cmp	r0, #32
   161a4:	bls	162c8 <main@@Base+0x3044>
   161a8:	mov	r7, r1
   161ac:	b	162e8 <main@@Base+0x3064>
   161b0:	movw	r0, #31088	; 0x7970
   161b4:	ldr	sl, [sp, #40]	; 0x28
   161b8:	movt	r0, #24436	; 0x5f74
   161bc:	eor	r0, r8, r0
   161c0:	orrs	r0, r0, r4
   161c4:	bne	16238 <main@@Base+0x2fb4>
   161c8:	add	r4, r9, #8
   161cc:	ldr	r8, [sp, #36]	; 0x24
   161d0:	mov	r1, #8
   161d4:	sub	r0, r5, r4
   161d8:	cmp	r0, #8
   161dc:	movcc	r1, r0
   161e0:	sub	r1, r1, #1
   161e4:	cmp	r1, #7
   161e8:	bhi	1bb94 <main@@Base+0x8910>
   161ec:	ldrb	r1, [r4]
   161f0:	cmp	r1, #101	; 0x65
   161f4:	bne	1bb94 <main@@Base+0x8910>
   161f8:	cmp	r0, #2
   161fc:	blt	1bb94 <main@@Base+0x8910>
   16200:	ldr	r2, [sp, #32]
   16204:	mov	r1, r9
   16208:	ldrb	r0, [r1, #9]!
   1620c:	ldr	r2, [r2]
   16210:	cmp	r2, #0
   16214:	beq	1629c <main@@Base+0x3018>
   16218:	cmp	r0, #33	; 0x21
   1621c:	bcc	16228 <main@@Base+0x2fa4>
   16220:	cmp	r0, #58	; 0x3a
   16224:	bne	1bb94 <main@@Base+0x8910>
   16228:	ldr	r0, [sp, #32]
   1622c:	mov	r2, #0
   16230:	str	r2, [r0]
   16234:	b	162a8 <main@@Base+0x3024>
   16238:	ldr	r8, [sp, #36]	; 0x24
   1623c:	mov	r0, r8
   16240:	mov	r1, r9
   16244:	b	1bb9c <main@@Base+0x8918>
   16248:	mov	r0, r8
   1624c:	mov	r1, r7
   16250:	mov	r2, r5
   16254:	mov	r3, #22
   16258:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1625c:	ldr	sl, [sp, #40]	; 0x28
   16260:	mov	r7, r0
   16264:	ldr	r0, [r8]
   16268:	bl	2af88 <flatcc_builder_end_vector@@Base>
   1626c:	cmp	r0, #0
   16270:	str	r0, [sp, #52]	; 0x34
   16274:	beq	1cdf0 <main@@Base+0x9b6c>
   16278:	ldr	r0, [r8]
   1627c:	mov	r1, #31
   16280:	bl	2b448 <flatcc_builder_table_add_offset@@Base>
   16284:	cmp	r0, #0
   16288:	beq	1cdf0 <main@@Base+0x9b6c>
   1628c:	ldr	r1, [sp, #52]	; 0x34
   16290:	mov	r4, r7
   16294:	str	r1, [r0]
   16298:	b	1bba8 <main@@Base+0x8924>
   1629c:	cmp	r0, #34	; 0x22
   162a0:	bne	1bb94 <main@@Base+0x8910>
   162a4:	add	r1, r9, #10
   162a8:	sub	r0, r5, r1
   162ac:	cmp	r0, #2
   162b0:	blt	16488 <main@@Base+0x3204>
   162b4:	ldrb	r0, [r1]
   162b8:	cmp	r0, #32
   162bc:	bls	16474 <main@@Base+0x31f0>
   162c0:	mov	r2, r1
   162c4:	b	16498 <main@@Base+0x3214>
   162c8:	bne	162d8 <main@@Base+0x3054>
   162cc:	ldrb	r0, [r7, #2]!
   162d0:	cmp	r0, #32
   162d4:	bhi	162e8 <main@@Base+0x3064>
   162d8:	mov	r0, r8
   162dc:	mov	r2, r5
   162e0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   162e4:	mov	r7, r0
   162e8:	cmp	r7, r5
   162ec:	mov	r4, r5
   162f0:	beq	1632c <main@@Base+0x30a8>
   162f4:	ldrb	r0, [r7]
   162f8:	cmp	r0, #93	; 0x5d
   162fc:	bne	16328 <main@@Base+0x30a4>
   16300:	add	r1, r7, #1
   16304:	sub	r0, r5, r1
   16308:	cmp	r0, #2
   1630c:	blt	19c6c <main@@Base+0x69e8>
   16310:	ldrb	r0, [r1]
   16314:	cmp	r0, #32
   16318:	bhi	16460 <main@@Base+0x31dc>
   1631c:	bne	19c6c <main@@Base+0x69e8>
   16320:	ldrb	r0, [r7, #2]!
   16324:	b	19c64 <main@@Base+0x69e0>
   16328:	mov	r4, r7
   1632c:	ldr	r0, [r8]
   16330:	mov	r1, #1
   16334:	bl	29764 <flatcc_builder_extend_vector@@Base>
   16338:	mov	r3, r0
   1633c:	cmp	r0, #0
   16340:	beq	13340 <main@@Base+0xbc>
   16344:	mov	r0, r8
   16348:	mov	r1, r4
   1634c:	mov	r2, r5
   16350:	bl	1e85c <main@@Base+0xb5d8>
   16354:	mov	r1, r0
   16358:	sub	r0, r5, r0
   1635c:	cmp	r0, #2
   16360:	blt	1638c <main@@Base+0x3108>
   16364:	ldrb	r0, [r1]
   16368:	cmp	r0, #32
   1636c:	bls	16378 <main@@Base+0x30f4>
   16370:	mov	r4, r1
   16374:	b	1639c <main@@Base+0x3118>
   16378:	bne	1638c <main@@Base+0x3108>
   1637c:	mov	r4, r1
   16380:	ldrb	r0, [r4, #1]!
   16384:	cmp	r0, #32
   16388:	bhi	1639c <main@@Base+0x3118>
   1638c:	mov	r0, r8
   16390:	mov	r2, r5
   16394:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   16398:	mov	r4, r0
   1639c:	cmp	r4, r5
   163a0:	beq	16428 <main@@Base+0x31a4>
   163a4:	ldrb	r0, [r4]
   163a8:	cmp	r0, #44	; 0x2c
   163ac:	bne	16430 <main@@Base+0x31ac>
   163b0:	add	r1, r4, #1
   163b4:	sub	r0, r5, r1
   163b8:	cmp	r0, #2
   163bc:	blt	163e4 <main@@Base+0x3160>
   163c0:	ldrb	r0, [r1]
   163c4:	cmp	r0, #32
   163c8:	bls	163d4 <main@@Base+0x3150>
   163cc:	mov	r4, r1
   163d0:	b	163f4 <main@@Base+0x3170>
   163d4:	bne	163e4 <main@@Base+0x3160>
   163d8:	ldrb	r0, [r4, #2]!
   163dc:	cmp	r0, #32
   163e0:	bhi	163f4 <main@@Base+0x3170>
   163e4:	mov	r0, r8
   163e8:	mov	r2, r5
   163ec:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   163f0:	mov	r4, r0
   163f4:	cmp	r4, r5
   163f8:	beq	16468 <main@@Base+0x31e4>
   163fc:	ldrb	r0, [r4]
   16400:	cmp	r0, #93	; 0x5d
   16404:	bne	1632c <main@@Base+0x30a8>
   16408:	add	r1, r4, #1
   1640c:	sub	r0, r5, r1
   16410:	cmp	r0, #2
   16414:	blt	19c6c <main@@Base+0x69e8>
   16418:	ldrb	r0, [r1]
   1641c:	cmp	r0, #32
   16420:	bls	19c58 <main@@Base+0x69d4>
   16424:	b	16460 <main@@Base+0x31dc>
   16428:	mov	r7, r5
   1642c:	b	16264 <main@@Base+0x2fe0>
   16430:	cmp	r0, #93	; 0x5d
   16434:	bne	179f0 <main@@Base+0x476c>
   16438:	add	r1, r4, #1
   1643c:	sub	r0, r5, r1
   16440:	cmp	r0, #2
   16444:	blt	19c6c <main@@Base+0x69e8>
   16448:	ldrb	r0, [r1]
   1644c:	cmp	r0, #32
   16450:	bls	19c4c <main@@Base+0x69c8>
   16454:	ldr	r5, [sp, #44]	; 0x2c
   16458:	ldr	r8, [sp, #36]	; 0x24
   1645c:	ldr	sl, [sp, #40]	; 0x28
   16460:	mov	r7, r1
   16464:	b	16264 <main@@Base+0x2fe0>
   16468:	mov	r0, r8
   1646c:	mov	r1, r5
   16470:	b	179f8 <main@@Base+0x4774>
   16474:	bne	16488 <main@@Base+0x3204>
   16478:	mov	r2, r1
   1647c:	ldrb	r0, [r2, #1]!
   16480:	cmp	r0, #32
   16484:	bhi	16498 <main@@Base+0x3214>
   16488:	mov	r0, r8
   1648c:	mov	r2, r5
   16490:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   16494:	mov	r2, r0
   16498:	cmp	r2, r5
   1649c:	beq	164d0 <main@@Base+0x324c>
   164a0:	ldrb	r0, [r2]
   164a4:	cmp	r0, #58	; 0x3a
   164a8:	bne	164d0 <main@@Base+0x324c>
   164ac:	add	r1, r2, #1
   164b0:	sub	r0, r5, r1
   164b4:	cmp	r0, #2
   164b8:	blt	1882c <main@@Base+0x55a8>
   164bc:	ldrb	r0, [r1]
   164c0:	cmp	r0, #32
   164c4:	bls	1881c <main@@Base+0x5598>
   164c8:	mov	r2, r1
   164cc:	b	1883c <main@@Base+0x55b8>
   164d0:	mov	r1, r2
   164d4:	mov	r0, r8
   164d8:	mov	r2, r5
   164dc:	mov	r3, #4
   164e0:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   164e4:	b	18838 <main@@Base+0x55b4>
   164e8:	bne	164f8 <main@@Base+0x3274>
   164ec:	ldrb	r0, [r7, #2]!
   164f0:	cmp	r0, #32
   164f4:	bhi	16508 <main@@Base+0x3284>
   164f8:	mov	r0, r8
   164fc:	mov	r2, r5
   16500:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   16504:	mov	r7, r0
   16508:	cmp	r9, r7
   1650c:	beq	1623c <main@@Base+0x2fb8>
   16510:	sub	r4, r5, r7
   16514:	mov	r0, #0
   16518:	cmp	r4, #4
   1651c:	strb	r0, [fp, #-60]	; 0xffffffc4
   16520:	blt	16564 <main@@Base+0x32e0>
   16524:	movw	r1, #4179	; 0x1053
   16528:	mov	r0, r7
   1652c:	mov	r2, #4
   16530:	movt	r1, #3
   16534:	bl	12b34 <bcmp@plt>
   16538:	cmp	r0, #0
   1653c:	beq	165c8 <main@@Base+0x3344>
   16540:	cmp	r4, #5
   16544:	blt	16564 <main@@Base+0x32e0>
   16548:	movw	r1, #4184	; 0x1058
   1654c:	mov	r0, r7
   16550:	mov	r2, #5
   16554:	movt	r1, #3
   16558:	bl	12b34 <bcmp@plt>
   1655c:	cmp	r0, #0
   16560:	beq	16688 <main@@Base+0x3404>
   16564:	mov	r6, #0
   16568:	cmp	r7, r5
   1656c:	str	r6, [fp, #-52]	; 0xffffffcc
   16570:	str	r6, [fp, #-56]	; 0xffffffc8
   16574:	str	r6, [sp, #56]	; 0x38
   16578:	beq	165c0 <main@@Base+0x333c>
   1657c:	sub	r0, fp, #56	; 0x38
   16580:	mov	r1, r7
   16584:	mov	r2, r5
   16588:	add	r3, sp, #56	; 0x38
   1658c:	str	r0, [sp]
   16590:	mov	r0, r8
   16594:	bl	2edac <flatcc_json_parser_integer@@Base>
   16598:	cmp	r0, r7
   1659c:	beq	165d4 <main@@Base+0x3350>
   165a0:	mov	r1, r0
   165a4:	ldr	r0, [sp, #56]	; 0x38
   165a8:	cmp	r0, #0
   165ac:	beq	165dc <main@@Base+0x3358>
   165b0:	mov	r0, r8
   165b4:	mov	r2, r5
   165b8:	mov	r3, #8
   165bc:	b	165fc <main@@Base+0x3378>
   165c0:	mov	r4, r5
   165c4:	b	16604 <main@@Base+0x3380>
   165c8:	mov	r6, #1
   165cc:	add	r4, r7, #4
   165d0:	b	16610 <main@@Base+0x338c>
   165d4:	mov	r4, r7
   165d8:	b	16604 <main@@Base+0x3380>
   165dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   165e0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   165e4:	subs	r3, r0, #256	; 0x100
   165e8:	sbcs	r2, r2, #0
   165ec:	bcc	16694 <main@@Base+0x3410>
   165f0:	mov	r0, r8
   165f4:	mov	r2, r5
   165f8:	mov	r3, #7
   165fc:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   16600:	mov	r4, r0
   16604:	uxtb	r6, r6
   16608:	cmp	r6, #0
   1660c:	movwne	r6, #1
   16610:	strb	r6, [fp, #-60]	; 0xffffffc4
   16614:	cmp	r7, r4
   16618:	bne	16650 <main@@Base+0x33cc>
   1661c:	movw	r3, #16608	; 0x40e0
   16620:	sub	r0, fp, #60	; 0x3c
   16624:	mov	r1, r7
   16628:	mov	r2, r5
   1662c:	movt	r3, #4
   16630:	str	r0, [sp]
   16634:	mov	r0, r8
   16638:	bl	22340 <main@@Base+0xf0bc>
   1663c:	mov	r4, r0
   16640:	cmp	r0, r7
   16644:	cmpne	r4, r5
   16648:	beq	13340 <main@@Base+0xbc>
   1664c:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   16650:	cmp	r6, #1
   16654:	bne	16664 <main@@Base+0x33e0>
   16658:	ldrb	r0, [r8, #8]
   1665c:	tst	r0, #2
   16660:	beq	1bba8 <main@@Base+0x8924>
   16664:	ldr	r0, [r8]
   16668:	mov	r1, #15
   1666c:	mov	r2, #1
   16670:	mov	r3, #1
   16674:	bl	2b574 <flatcc_builder_table_add@@Base>
   16678:	cmp	r0, #0
   1667c:	beq	13340 <main@@Base+0xbc>
   16680:	strb	r6, [r0]
   16684:	b	1bba8 <main@@Base+0x8924>
   16688:	mov	r6, #0
   1668c:	add	r4, r7, #5
   16690:	b	16610 <main@@Base+0x338c>
   16694:	mov	r6, r0
   16698:	mov	r4, r1
   1669c:	b	16604 <main@@Base+0x3380>
   166a0:	bne	166b4 <main@@Base+0x3430>
   166a4:	mov	r4, r1
   166a8:	ldrb	r0, [r4, #1]!
   166ac:	cmp	r0, #32
   166b0:	bhi	166c4 <main@@Base+0x3440>
   166b4:	ldr	r0, [sp, #36]	; 0x24
   166b8:	mov	r2, r5
   166bc:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   166c0:	mov	r4, r0
   166c4:	cmp	r4, r5
   166c8:	beq	166fc <main@@Base+0x3478>
   166cc:	ldrb	r0, [r4]
   166d0:	cmp	r0, #58	; 0x3a
   166d4:	bne	166fc <main@@Base+0x3478>
   166d8:	add	r1, r4, #1
   166dc:	sub	r0, r5, r1
   166e0:	cmp	r0, #2
   166e4:	blt	18894 <main@@Base+0x5610>
   166e8:	ldrb	r0, [r1]
   166ec:	cmp	r0, #32
   166f0:	bls	18884 <main@@Base+0x5600>
   166f4:	mov	r4, r1
   166f8:	b	188a4 <main@@Base+0x5620>
   166fc:	ldr	r0, [sp, #36]	; 0x24
   16700:	mov	r1, r4
   16704:	mov	r2, r5
   16708:	mov	r3, #4
   1670c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   16710:	b	188a0 <main@@Base+0x561c>
   16714:	mov	r0, r8
   16718:	mov	r1, r4
   1671c:	mov	r2, r5
   16720:	mov	r3, #9
   16724:	b	15a1c <main@@Base+0x2798>
   16728:	bne	16738 <main@@Base+0x34b4>
   1672c:	ldrb	r0, [r4, #2]!
   16730:	cmp	r0, #32
   16734:	bhi	16748 <main@@Base+0x34c4>
   16738:	mov	r0, r6
   1673c:	mov	r2, r5
   16740:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   16744:	mov	r4, r0
   16748:	cmp	sl, r4
   1674c:	beq	167ac <main@@Base+0x3528>
   16750:	ldr	r8, [sp, #36]	; 0x24
   16754:	mov	r1, #1
   16758:	mov	r2, #1
   1675c:	mvn	r3, #0
   16760:	ldr	r0, [r8]
   16764:	bl	29f5c <flatcc_builder_start_vector@@Base>
   16768:	cmp	r0, #0
   1676c:	bne	13340 <main@@Base+0xbc>
   16770:	ldr	sl, [sp, #40]	; 0x28
   16774:	cmp	r4, r5
   16778:	beq	167cc <main@@Base+0x3548>
   1677c:	ldrb	r0, [r4]
   16780:	cmp	r0, #91	; 0x5b
   16784:	bne	167cc <main@@Base+0x3548>
   16788:	add	r1, r4, #1
   1678c:	sub	r0, r5, r1
   16790:	cmp	r0, #2
   16794:	blt	17d28 <main@@Base+0x4aa4>
   16798:	ldrb	r0, [r1]
   1679c:	cmp	r0, #32
   167a0:	bls	17d18 <main@@Base+0x4a94>
   167a4:	mov	r4, r1
   167a8:	b	17d38 <main@@Base+0x4ab4>
   167ac:	ldr	r8, [sp, #36]	; 0x24
   167b0:	mov	r0, r8
   167b4:	mov	r1, sl
   167b8:	mov	r2, r5
   167bc:	bl	2d5e0 <flatcc_json_parser_unmatched_symbol@@Base>
   167c0:	mov	r4, r0
   167c4:	ldr	sl, [sp, #40]	; 0x28
   167c8:	b	1bba8 <main@@Base+0x8924>
   167cc:	mov	r0, r8
   167d0:	mov	r1, r4
   167d4:	mov	r2, r5
   167d8:	mov	r3, #22
   167dc:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   167e0:	mov	r4, r0
   167e4:	ldr	r0, [r8]
   167e8:	bl	2af88 <flatcc_builder_end_vector@@Base>
   167ec:	cmp	r0, #0
   167f0:	str	r0, [sp, #52]	; 0x34
   167f4:	beq	13340 <main@@Base+0xbc>
   167f8:	ldr	r0, [r8]
   167fc:	mov	r1, #24
   16800:	b	15a40 <main@@Base+0x27bc>
   16804:	cmp	r0, #34	; 0x22
   16808:	bne	1b160 <main@@Base+0x7edc>
   1680c:	add	r1, r9, #18
   16810:	sub	r0, r5, r1
   16814:	cmp	r0, #2
   16818:	blt	189a0 <main@@Base+0x571c>
   1681c:	ldrb	r0, [r1]
   16820:	cmp	r0, #32
   16824:	bls	1898c <main@@Base+0x5708>
   16828:	mov	r9, r1
   1682c:	b	189b0 <main@@Base+0x572c>
   16830:	bne	16840 <main@@Base+0x35bc>
   16834:	ldrb	r0, [r7, #2]!
   16838:	cmp	r0, #32
   1683c:	bhi	16850 <main@@Base+0x35cc>
   16840:	mov	r0, r8
   16844:	mov	r2, r5
   16848:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1684c:	mov	r7, r0
   16850:	ldr	sl, [sp, #40]	; 0x28
   16854:	cmp	r9, r7
   16858:	beq	1623c <main@@Base+0x2fb8>
   1685c:	mov	r6, #0
   16860:	cmp	r7, r5
   16864:	str	r6, [fp, #-52]	; 0xffffffcc
   16868:	str	r6, [fp, #-56]	; 0xffffffc8
   1686c:	strh	r6, [fp, #-60]	; 0xffffffc4
   16870:	str	r6, [sp, #56]	; 0x38
   16874:	beq	168d8 <main@@Base+0x3654>
   16878:	sub	r0, fp, #56	; 0x38
   1687c:	mov	r1, r7
   16880:	mov	r2, r5
   16884:	add	r3, sp, #56	; 0x38
   16888:	str	r0, [sp]
   1688c:	mov	r0, r8
   16890:	bl	2edac <flatcc_json_parser_integer@@Base>
   16894:	cmp	r0, r7
   16898:	beq	168e0 <main@@Base+0x365c>
   1689c:	ldr	r2, [sp, #56]	; 0x38
   168a0:	mov	r4, r0
   168a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   168a8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   168ac:	cmp	r2, #0
   168b0:	beq	168e8 <main@@Base+0x3664>
   168b4:	movw	r2, #32769	; 0x8001
   168b8:	subs	r2, r0, r2
   168bc:	sbcs	r1, r1, #0
   168c0:	bcc	16910 <main@@Base+0x368c>
   168c4:	mov	r0, r8
   168c8:	mov	r1, r4
   168cc:	mov	r2, r5
   168d0:	mov	r3, #8
   168d4:	b	16904 <main@@Base+0x3680>
   168d8:	mov	r4, r5
   168dc:	b	16920 <main@@Base+0x369c>
   168e0:	mov	r4, r7
   168e4:	b	16920 <main@@Base+0x369c>
   168e8:	subs	r2, r0, #32768	; 0x8000
   168ec:	sbcs	r1, r1, #0
   168f0:	bcc	16918 <main@@Base+0x3694>
   168f4:	mov	r0, r8
   168f8:	mov	r1, r4
   168fc:	mov	r2, r5
   16900:	mov	r3, #7
   16904:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   16908:	mov	r4, r0
   1690c:	b	16920 <main@@Base+0x369c>
   16910:	rsb	r6, r0, #0
   16914:	b	1691c <main@@Base+0x3698>
   16918:	mov	r6, r0
   1691c:	strh	r6, [fp, #-60]	; 0xffffffc4
   16920:	cmp	r7, r4
   16924:	bne	1695c <main@@Base+0x36d8>
   16928:	movw	r3, #16544	; 0x40a0
   1692c:	sub	r0, fp, #60	; 0x3c
   16930:	mov	r1, r7
   16934:	mov	r2, r5
   16938:	movt	r3, #4
   1693c:	str	r0, [sp]
   16940:	mov	r0, r8
   16944:	bl	1e61c <main@@Base+0xb398>
   16948:	mov	r4, r0
   1694c:	cmp	r0, r7
   16950:	cmpne	r4, r5
   16954:	beq	13340 <main@@Base+0xbc>
   16958:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   1695c:	uxth	r0, r6
   16960:	cmp	r0, #100	; 0x64
   16964:	bne	16974 <main@@Base+0x36f0>
   16968:	ldrb	r0, [r8, #8]
   1696c:	tst	r0, #2
   16970:	beq	1bba8 <main@@Base+0x8924>
   16974:	ldr	r0, [r8]
   16978:	mov	r1, #2
   1697c:	mov	r2, #2
   16980:	mov	r3, #2
   16984:	bl	2b574 <flatcc_builder_table_add@@Base>
   16988:	cmp	r0, #0
   1698c:	bne	18570 <main@@Base+0x52ec>
   16990:	b	13340 <main@@Base+0xbc>
   16994:	bne	169a4 <main@@Base+0x3720>
   16998:	ldrb	r0, [r4, #2]!
   1699c:	cmp	r0, #32
   169a0:	bhi	169b4 <main@@Base+0x3730>
   169a4:	mov	r0, r8
   169a8:	mov	r2, r5
   169ac:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   169b0:	mov	r4, r0
   169b4:	ldr	sl, [sp, #40]	; 0x28
   169b8:	cmp	r9, r4
   169bc:	beq	1623c <main@@Base+0x2fb8>
   169c0:	ldr	r0, [r8]
   169c4:	mov	r1, #0
   169c8:	mov	r2, #32
   169cc:	mov	r3, #16
   169d0:	bl	2b574 <flatcc_builder_table_add@@Base>
   169d4:	cmp	r0, #0
   169d8:	str	r0, [sp, #24]
   169dc:	beq	13340 <main@@Base+0xbc>
   169e0:	cmp	r4, r5
   169e4:	beq	16a18 <main@@Base+0x3794>
   169e8:	ldrb	r0, [r4]
   169ec:	cmp	r0, #123	; 0x7b
   169f0:	bne	16a18 <main@@Base+0x3794>
   169f4:	add	r1, r4, #1
   169f8:	sub	r0, r5, r1
   169fc:	cmp	r0, #2
   16a00:	blt	16a40 <main@@Base+0x37bc>
   16a04:	ldrb	r0, [r1]
   16a08:	cmp	r0, #32
   16a0c:	bls	16a30 <main@@Base+0x37ac>
   16a10:	mov	r4, r1
   16a14:	b	16a50 <main@@Base+0x37cc>
   16a18:	mov	r0, r8
   16a1c:	mov	r1, r4
   16a20:	mov	r2, r5
   16a24:	mov	r3, #21
   16a28:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   16a2c:	b	1bba4 <main@@Base+0x8920>
   16a30:	bne	16a40 <main@@Base+0x37bc>
   16a34:	ldrb	r0, [r4, #2]!
   16a38:	cmp	r0, #32
   16a3c:	bhi	16a50 <main@@Base+0x37cc>
   16a40:	mov	r0, r8
   16a44:	mov	r2, r5
   16a48:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   16a4c:	mov	r4, r0
   16a50:	cmp	r4, r5
   16a54:	mov	r2, r5
   16a58:	beq	16a94 <main@@Base+0x3810>
   16a5c:	ldrb	r0, [r4]
   16a60:	cmp	r0, #125	; 0x7d
   16a64:	bne	16a90 <main@@Base+0x380c>
   16a68:	add	r1, r4, #1
   16a6c:	sub	r0, r5, r1
   16a70:	cmp	r0, #2
   16a74:	blt	1a6b4 <main@@Base+0x7430>
   16a78:	ldrb	r0, [r1]
   16a7c:	cmp	r0, #32
   16a80:	bhi	17764 <main@@Base+0x44e0>
   16a84:	bne	1a6b4 <main@@Base+0x7430>
   16a88:	ldrb	r0, [r4, #2]!
   16a8c:	b	1a6ac <main@@Base+0x7428>
   16a90:	mov	r2, r4
   16a94:	ldr	r0, [sp, #24]
   16a98:	add	r0, r0, #26
   16a9c:	str	r0, [sp, #20]
   16aa0:	cmp	r2, r5
   16aa4:	mov	r9, r5
   16aa8:	beq	16afc <main@@Base+0x3878>
   16aac:	ldrb	r0, [r2]
   16ab0:	cmp	r0, #46	; 0x2e
   16ab4:	beq	16ad0 <main@@Base+0x384c>
   16ab8:	cmp	r0, #34	; 0x22
   16abc:	bne	16aec <main@@Base+0x3868>
   16ac0:	ldr	r0, [sp, #32]
   16ac4:	mov	r1, #0
   16ac8:	add	r9, r2, #1
   16acc:	b	16af8 <main@@Base+0x3874>
   16ad0:	mov	r1, r2
   16ad4:	mov	r0, r8
   16ad8:	mov	r2, r5
   16adc:	mov	r3, #5
   16ae0:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   16ae4:	mov	r9, r0
   16ae8:	b	16afc <main@@Base+0x3878>
   16aec:	ldr	r0, [sp, #32]
   16af0:	mov	r1, #1
   16af4:	mov	r9, r2
   16af8:	str	r1, [r0]
   16afc:	sub	ip, r5, r9
   16b00:	mov	r0, #8
   16b04:	cmp	ip, #8
   16b08:	movcc	r0, ip
   16b0c:	sub	r7, r0, #1
   16b10:	cmp	r7, #7
   16b14:	bhi	17684 <main@@Base+0x4400>
   16b18:	add	r5, pc, #32
   16b1c:	mov	r1, #0
   16b20:	mov	lr, #0
   16b24:	mov	r8, #0
   16b28:	mov	r6, #0
   16b2c:	mov	r3, #0
   16b30:	mov	r4, #0
   16b34:	mov	r0, #0
   16b38:	mov	r2, #0
   16b3c:	ldr	pc, [r5, r7, lsl #2]
   16b40:	andeq	r6, r1, r4, lsr #23
   16b44:	muleq	r1, ip, fp
   16b48:	muleq	r1, r4, fp
   16b4c:	andeq	r6, r1, ip, lsl #23
   16b50:	andeq	r6, r1, r0, lsl #23
   16b54:	andeq	r6, r1, r4, ror fp
   16b58:	andeq	r6, r1, r4, ror #22
   16b5c:	andeq	r6, r1, r0, ror #22
   16b60:	ldrb	lr, [r9, #7]
   16b64:	ldrb	r0, [r9, #6]
   16b68:	mov	r8, r1
   16b6c:	orr	r0, lr, r0, lsl #8
   16b70:	mov	r1, r0
   16b74:	ldrb	r0, [r9, #5]
   16b78:	mov	r6, r8
   16b7c:	orr	r1, r1, r0, lsl #16
   16b80:	ldrb	r0, [r9, #4]
   16b84:	mov	r3, r6
   16b88:	orr	r1, r1, r0, lsl #24
   16b8c:	ldrb	r0, [r9, #3]
   16b90:	orr	r4, r0, r3
   16b94:	ldrb	r0, [r9, #2]
   16b98:	orr	r0, r4, r0, lsl #8
   16b9c:	ldrb	r2, [r9, #1]
   16ba0:	orr	r2, r0, r2, lsl #16
   16ba4:	ldrb	r0, [r9]
   16ba8:	movw	r3, #29556	; 0x7374
   16bac:	movt	r3, #29797	; 0x7465
   16bb0:	orr	r2, r2, r0, lsl #24
   16bb4:	mvn	r0, #-855638016	; 0xcd000000
   16bb8:	subs	r0, r0, r1
   16bbc:	sbcs	r0, r3, r2
   16bc0:	bcc	16c34 <main@@Base+0x39b0>
   16bc4:	ldr	r5, [sp, #44]	; 0x2c
   16bc8:	ldr	r8, [sp, #36]	; 0x24
   16bcc:	and	r1, r1, #-16777216	; 0xff000000
   16bd0:	eor	r0, r2, r3
   16bd4:	eor	r2, r1, #822083584	; 0x31000000
   16bd8:	orrs	r2, r2, r0
   16bdc:	beq	16d00 <main@@Base+0x3a7c>
   16be0:	eor	r1, r1, #838860800	; 0x32000000
   16be4:	orrs	r0, r1, r0
   16be8:	bne	17684 <main@@Base+0x4400>
   16bec:	cmp	ip, #6
   16bf0:	mov	r5, r9
   16bf4:	blt	17164 <main@@Base+0x3ee0>
   16bf8:	ldr	r2, [sp, #32]
   16bfc:	mov	r1, r9
   16c00:	ldrb	r0, [r1, #5]!
   16c04:	ldr	r2, [r2]
   16c08:	cmp	r2, #0
   16c0c:	beq	16de8 <main@@Base+0x3b64>
   16c10:	cmp	r0, #33	; 0x21
   16c14:	bcc	16c24 <main@@Base+0x39a0>
   16c18:	cmp	r0, #58	; 0x3a
   16c1c:	mov	r5, r9
   16c20:	bne	17164 <main@@Base+0x3ee0>
   16c24:	ldr	r0, [sp, #32]
   16c28:	mov	r2, #0
   16c2c:	str	r2, [r0]
   16c30:	b	16df8 <main@@Base+0x3b74>
   16c34:	ldr	r5, [sp, #44]	; 0x2c
   16c38:	ldr	r8, [sp, #36]	; 0x24
   16c3c:	cmn	r2, #-2013265919	; 0x88000001
   16c40:	bhi	16ca0 <main@@Base+0x3a1c>
   16c44:	and	r1, r1, #-16777216	; 0xff000000
   16c48:	eor	r0, r2, r3
   16c4c:	eor	r1, r1, #855638016	; 0x33000000
   16c50:	orrs	r0, r1, r0
   16c54:	bne	17684 <main@@Base+0x4400>
   16c58:	cmp	ip, #6
   16c5c:	mov	r1, r9
   16c60:	blt	17484 <main@@Base+0x4200>
   16c64:	ldr	r1, [sp, #32]
   16c68:	mov	r2, r9
   16c6c:	ldrb	r0, [r2, #5]!
   16c70:	ldr	r1, [r1]
   16c74:	cmp	r1, #0
   16c78:	beq	16e50 <main@@Base+0x3bcc>
   16c7c:	cmp	r0, #33	; 0x21
   16c80:	bcc	16c90 <main@@Base+0x3a0c>
   16c84:	cmp	r0, #58	; 0x3a
   16c88:	mov	r1, r9
   16c8c:	bne	17484 <main@@Base+0x4200>
   16c90:	ldr	r0, [sp, #32]
   16c94:	mov	r1, #0
   16c98:	str	r1, [r0]
   16c9c:	b	16e60 <main@@Base+0x3bdc>
   16ca0:	lsr	r1, r2, #24
   16ca4:	and	r0, r2, #-16777216	; 0xff000000
   16ca8:	cmp	r1, #120	; 0x78
   16cac:	bhi	16d48 <main@@Base+0x3ac4>
   16cb0:	teq	r0, #2013265920	; 0x78000000
   16cb4:	bne	17684 <main@@Base+0x4400>
   16cb8:	cmp	ip, #2
   16cbc:	mov	r7, r9
   16cc0:	blt	174cc <main@@Base+0x4248>
   16cc4:	ldr	r2, [sp, #32]
   16cc8:	mov	r1, r9
   16ccc:	ldrb	r0, [r1, #1]!
   16cd0:	ldr	r2, [r2]
   16cd4:	cmp	r2, #0
   16cd8:	beq	16e80 <main@@Base+0x3bfc>
   16cdc:	cmp	r0, #33	; 0x21
   16ce0:	bcc	16cf0 <main@@Base+0x3a6c>
   16ce4:	cmp	r0, #58	; 0x3a
   16ce8:	mov	r7, r9
   16cec:	bne	174cc <main@@Base+0x4248>
   16cf0:	ldr	r0, [sp, #32]
   16cf4:	mov	r2, #0
   16cf8:	str	r2, [r0]
   16cfc:	b	16e90 <main@@Base+0x3c0c>
   16d00:	cmp	ip, #6
   16d04:	mov	r7, r9
   16d08:	blt	172a8 <main@@Base+0x4024>
   16d0c:	ldr	r2, [sp, #32]
   16d10:	mov	r1, r9
   16d14:	ldrb	r0, [r1, #5]!
   16d18:	ldr	r2, [r2]
   16d1c:	cmp	r2, #0
   16d20:	beq	16e20 <main@@Base+0x3b9c>
   16d24:	cmp	r0, #33	; 0x21
   16d28:	bcc	16d38 <main@@Base+0x3ab4>
   16d2c:	cmp	r0, #58	; 0x3a
   16d30:	mov	r7, r9
   16d34:	bne	172a8 <main@@Base+0x4024>
   16d38:	ldr	r0, [sp, #32]
   16d3c:	mov	r2, #0
   16d40:	str	r2, [r0]
   16d44:	b	16e30 <main@@Base+0x3bac>
   16d48:	teq	r0, #2030043136	; 0x79000000
   16d4c:	beq	16da0 <main@@Base+0x3b1c>
   16d50:	teq	r0, #2046820352	; 0x7a000000
   16d54:	bne	17684 <main@@Base+0x4400>
   16d58:	cmp	ip, #2
   16d5c:	mov	r7, r9
   16d60:	blt	17568 <main@@Base+0x42e4>
   16d64:	ldr	r2, [sp, #32]
   16d68:	mov	r1, r9
   16d6c:	ldrb	r0, [r1, #1]!
   16d70:	ldr	r2, [r2]
   16d74:	cmp	r2, #0
   16d78:	beq	16fb8 <main@@Base+0x3d34>
   16d7c:	cmp	r0, #33	; 0x21
   16d80:	bcc	16d90 <main@@Base+0x3b0c>
   16d84:	cmp	r0, #58	; 0x3a
   16d88:	mov	r7, r9
   16d8c:	bne	17568 <main@@Base+0x42e4>
   16d90:	ldr	r0, [sp, #32]
   16d94:	mov	r2, #0
   16d98:	str	r2, [r0]
   16d9c:	b	16fc8 <main@@Base+0x3d44>
   16da0:	cmp	ip, #2
   16da4:	mov	r7, r9
   16da8:	blt	1760c <main@@Base+0x4388>
   16dac:	ldr	r2, [sp, #32]
   16db0:	mov	r1, r9
   16db4:	ldrb	r0, [r1, #1]!
   16db8:	ldr	r2, [r2]
   16dbc:	cmp	r2, #0
   16dc0:	beq	16ff0 <main@@Base+0x3d6c>
   16dc4:	cmp	r0, #33	; 0x21
   16dc8:	bcc	16dd8 <main@@Base+0x3b54>
   16dcc:	cmp	r0, #58	; 0x3a
   16dd0:	mov	r7, r9
   16dd4:	bne	1760c <main@@Base+0x4388>
   16dd8:	ldr	r0, [sp, #32]
   16ddc:	mov	r2, #0
   16de0:	str	r2, [r0]
   16de4:	b	17000 <main@@Base+0x3d7c>
   16de8:	cmp	r0, #34	; 0x22
   16dec:	mov	r5, r9
   16df0:	bne	17164 <main@@Base+0x3ee0>
   16df4:	add	r1, r9, #6
   16df8:	ldr	r4, [sp, #44]	; 0x2c
   16dfc:	sub	r0, r4, r1
   16e00:	cmp	r0, #2
   16e04:	blt	16ecc <main@@Base+0x3c48>
   16e08:	ldrb	r0, [r1]
   16e0c:	cmp	r0, #32
   16e10:	bls	16eb4 <main@@Base+0x3c30>
   16e14:	ldr	r4, [sp, #44]	; 0x2c
   16e18:	mov	r5, r1
   16e1c:	b	16edc <main@@Base+0x3c58>
   16e20:	cmp	r0, #34	; 0x22
   16e24:	mov	r7, r9
   16e28:	bne	172a8 <main@@Base+0x4024>
   16e2c:	add	r1, r9, #6
   16e30:	sub	r0, r5, r1
   16e34:	cmp	r0, #2
   16e38:	blt	16f4c <main@@Base+0x3cc8>
   16e3c:	ldrb	r0, [r1]
   16e40:	cmp	r0, #32
   16e44:	bls	16f38 <main@@Base+0x3cb4>
   16e48:	mov	r7, r1
   16e4c:	b	16f5c <main@@Base+0x3cd8>
   16e50:	cmp	r0, #34	; 0x22
   16e54:	mov	r1, r9
   16e58:	bne	17484 <main@@Base+0x4200>
   16e5c:	add	r2, r9, #6
   16e60:	sub	r0, r5, r2
   16e64:	cmp	r0, #2
   16e68:	blt	1703c <main@@Base+0x3db8>
   16e6c:	ldrb	r0, [r2]
   16e70:	cmp	r0, #32
   16e74:	bls	17028 <main@@Base+0x3da4>
   16e78:	mov	r1, r2
   16e7c:	b	17050 <main@@Base+0x3dcc>
   16e80:	cmp	r0, #34	; 0x22
   16e84:	mov	r7, r9
   16e88:	bne	174cc <main@@Base+0x4248>
   16e8c:	add	r1, r9, #2
   16e90:	sub	r0, r5, r1
   16e94:	cmp	r0, #2
   16e98:	blt	170c0 <main@@Base+0x3e3c>
   16e9c:	ldrb	r0, [r1]
   16ea0:	cmp	r0, #32
   16ea4:	bls	170a8 <main@@Base+0x3e24>
   16ea8:	ldr	r5, [sp, #44]	; 0x2c
   16eac:	mov	r7, r1
   16eb0:	b	170d0 <main@@Base+0x3e4c>
   16eb4:	ldr	r4, [sp, #44]	; 0x2c
   16eb8:	bne	16ecc <main@@Base+0x3c48>
   16ebc:	mov	r5, r1
   16ec0:	ldrb	r0, [r5, #1]!
   16ec4:	cmp	r0, #32
   16ec8:	bhi	16edc <main@@Base+0x3c58>
   16ecc:	mov	r0, r8
   16ed0:	mov	r2, r4
   16ed4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   16ed8:	mov	r5, r0
   16edc:	cmp	r5, r4
   16ee0:	beq	16f20 <main@@Base+0x3c9c>
   16ee4:	ldrb	r0, [r5]
   16ee8:	cmp	r0, #58	; 0x3a
   16eec:	bne	16f20 <main@@Base+0x3c9c>
   16ef0:	ldr	r0, [sp, #44]	; 0x2c
   16ef4:	add	r1, r5, #1
   16ef8:	sub	r0, r0, r1
   16efc:	cmp	r0, #2
   16f00:	blt	17154 <main@@Base+0x3ed0>
   16f04:	ldrb	r0, [r1]
   16f08:	cmp	r0, #32
   16f0c:	bls	1713c <main@@Base+0x3eb8>
   16f10:	ldr	r8, [sp, #36]	; 0x24
   16f14:	ldr	sl, [sp, #40]	; 0x28
   16f18:	mov	r5, r1
   16f1c:	b	17164 <main@@Base+0x3ee0>
   16f20:	ldr	r2, [sp, #44]	; 0x2c
   16f24:	mov	r0, r8
   16f28:	mov	r1, r5
   16f2c:	mov	r3, #4
   16f30:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   16f34:	b	17160 <main@@Base+0x3edc>
   16f38:	bne	16f4c <main@@Base+0x3cc8>
   16f3c:	mov	r7, r1
   16f40:	ldrb	r0, [r7, #1]!
   16f44:	cmp	r0, #32
   16f48:	bhi	16f5c <main@@Base+0x3cd8>
   16f4c:	mov	r0, r8
   16f50:	mov	r2, r5
   16f54:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   16f58:	mov	r7, r0
   16f5c:	cmp	r7, r5
   16f60:	beq	16fa0 <main@@Base+0x3d1c>
   16f64:	ldrb	r0, [r7]
   16f68:	cmp	r0, #58	; 0x3a
   16f6c:	bne	16fa0 <main@@Base+0x3d1c>
   16f70:	add	r1, r7, #1
   16f74:	sub	r0, r5, r1
   16f78:	cmp	r0, #2
   16f7c:	blt	17298 <main@@Base+0x4014>
   16f80:	ldrb	r0, [r1]
   16f84:	cmp	r0, #32
   16f88:	bls	1727c <main@@Base+0x3ff8>
   16f8c:	ldr	r5, [sp, #44]	; 0x2c
   16f90:	ldr	r8, [sp, #36]	; 0x24
   16f94:	ldr	sl, [sp, #40]	; 0x28
   16f98:	mov	r7, r1
   16f9c:	b	172a8 <main@@Base+0x4024>
   16fa0:	mov	r0, r8
   16fa4:	mov	r1, r7
   16fa8:	mov	r2, r5
   16fac:	mov	r3, #4
   16fb0:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   16fb4:	b	172a4 <main@@Base+0x4020>
   16fb8:	cmp	r0, #34	; 0x22
   16fbc:	mov	r7, r9
   16fc0:	bne	17568 <main@@Base+0x42e4>
   16fc4:	add	r1, r9, #2
   16fc8:	ldr	r4, [sp, #44]	; 0x2c
   16fcc:	sub	r0, r4, r1
   16fd0:	cmp	r0, #2
   16fd4:	blt	17334 <main@@Base+0x40b0>
   16fd8:	ldrb	r0, [r1]
   16fdc:	cmp	r0, #32
   16fe0:	bls	1731c <main@@Base+0x4098>
   16fe4:	ldr	r4, [sp, #44]	; 0x2c
   16fe8:	mov	r7, r1
   16fec:	b	17344 <main@@Base+0x40c0>
   16ff0:	cmp	r0, #34	; 0x22
   16ff4:	mov	r7, r9
   16ff8:	bne	1760c <main@@Base+0x4388>
   16ffc:	add	r1, r9, #2
   17000:	ldr	r4, [sp, #44]	; 0x2c
   17004:	sub	r0, r4, r1
   17008:	cmp	r0, #2
   1700c:	blt	173d0 <main@@Base+0x414c>
   17010:	ldrb	r0, [r1]
   17014:	cmp	r0, #32
   17018:	bls	173b8 <main@@Base+0x4134>
   1701c:	ldr	r4, [sp, #44]	; 0x2c
   17020:	mov	r7, r1
   17024:	b	173e0 <main@@Base+0x415c>
   17028:	bne	1703c <main@@Base+0x3db8>
   1702c:	mov	r1, r2
   17030:	ldrb	r0, [r1, #1]!
   17034:	cmp	r0, #32
   17038:	bhi	17050 <main@@Base+0x3dcc>
   1703c:	mov	r1, r2
   17040:	mov	r0, r8
   17044:	mov	r2, r5
   17048:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1704c:	mov	r1, r0
   17050:	cmp	r1, r5
   17054:	beq	17094 <main@@Base+0x3e10>
   17058:	ldrb	r0, [r1]
   1705c:	cmp	r0, #58	; 0x3a
   17060:	bne	17094 <main@@Base+0x3e10>
   17064:	add	r2, r1, #1
   17068:	sub	r0, r5, r2
   1706c:	cmp	r0, #2
   17070:	blt	17470 <main@@Base+0x41ec>
   17074:	ldrb	r0, [r2]
   17078:	cmp	r0, #32
   1707c:	bls	17454 <main@@Base+0x41d0>
   17080:	ldr	r5, [sp, #44]	; 0x2c
   17084:	ldr	r8, [sp, #36]	; 0x24
   17088:	ldr	sl, [sp, #40]	; 0x28
   1708c:	mov	r1, r2
   17090:	b	17484 <main@@Base+0x4200>
   17094:	mov	r0, r8
   17098:	mov	r2, r5
   1709c:	mov	r3, #4
   170a0:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   170a4:	b	17480 <main@@Base+0x41fc>
   170a8:	ldr	r5, [sp, #44]	; 0x2c
   170ac:	bne	170c0 <main@@Base+0x3e3c>
   170b0:	mov	r7, r1
   170b4:	ldrb	r0, [r7, #1]!
   170b8:	cmp	r0, #32
   170bc:	bhi	170d0 <main@@Base+0x3e4c>
   170c0:	ldr	r0, [sp, #36]	; 0x24
   170c4:	mov	r2, r5
   170c8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   170cc:	mov	r7, r0
   170d0:	cmp	r7, r5
   170d4:	beq	17118 <main@@Base+0x3e94>
   170d8:	ldrb	r0, [r7]
   170dc:	cmp	r0, #58	; 0x3a
   170e0:	bne	17118 <main@@Base+0x3e94>
   170e4:	ldr	r8, [sp, #36]	; 0x24
   170e8:	ldr	sl, [sp, #40]	; 0x28
   170ec:	add	r1, r7, #1
   170f0:	sub	r0, r5, r1
   170f4:	cmp	r0, #2
   170f8:	blt	174bc <main@@Base+0x4238>
   170fc:	ldrb	r0, [r1]
   17100:	cmp	r0, #32
   17104:	bls	174a0 <main@@Base+0x421c>
   17108:	ldr	r5, [sp, #44]	; 0x2c
   1710c:	ldr	r8, [sp, #36]	; 0x24
   17110:	mov	r7, r1
   17114:	b	17134 <main@@Base+0x3eb0>
   17118:	ldr	r8, [sp, #36]	; 0x24
   1711c:	mov	r1, r7
   17120:	mov	r2, r5
   17124:	mov	r3, #4
   17128:	mov	r0, r8
   1712c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   17130:	mov	r7, r0
   17134:	ldr	sl, [sp, #40]	; 0x28
   17138:	b	174cc <main@@Base+0x4248>
   1713c:	ldr	r8, [sp, #36]	; 0x24
   17140:	ldr	sl, [sp, #40]	; 0x28
   17144:	bne	17154 <main@@Base+0x3ed0>
   17148:	ldrb	r0, [r5, #2]!
   1714c:	cmp	r0, #32
   17150:	bhi	17164 <main@@Base+0x3ee0>
   17154:	ldr	r2, [sp, #44]	; 0x2c
   17158:	mov	r0, r8
   1715c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   17160:	mov	r5, r0
   17164:	cmp	r9, r5
   17168:	beq	171e0 <main@@Base+0x3f5c>
   1716c:	ldr	r2, [sp, #44]	; 0x2c
   17170:	mov	r4, #0
   17174:	str	r4, [fp, #-52]	; 0xffffffcc
   17178:	str	r4, [fp, #-56]	; 0xffffffc8
   1717c:	strb	r4, [fp, #-60]	; 0xffffffc4
   17180:	str	r4, [sp, #56]	; 0x38
   17184:	cmp	r5, r2
   17188:	beq	171e8 <main@@Base+0x3f64>
   1718c:	sub	r0, fp, #56	; 0x38
   17190:	mov	r1, r5
   17194:	add	r3, sp, #56	; 0x38
   17198:	str	r0, [sp]
   1719c:	mov	r0, r8
   171a0:	bl	2edac <flatcc_json_parser_integer@@Base>
   171a4:	cmp	r0, r5
   171a8:	beq	171f0 <main@@Base+0x3f6c>
   171ac:	ldr	r3, [sp, #56]	; 0x38
   171b0:	mov	r1, r0
   171b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   171b8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   171bc:	cmp	r3, #0
   171c0:	beq	171f8 <main@@Base+0x3f74>
   171c4:	subs	r3, r0, #129	; 0x81
   171c8:	sbcs	r2, r2, #0
   171cc:	bcc	1721c <main@@Base+0x3f98>
   171d0:	ldr	r2, [sp, #44]	; 0x2c
   171d4:	mov	r0, r8
   171d8:	mov	r3, #8
   171dc:	b	17210 <main@@Base+0x3f8c>
   171e0:	ldr	r5, [sp, #44]	; 0x2c
   171e4:	b	17684 <main@@Base+0x4400>
   171e8:	mov	r1, r2
   171ec:	b	1722c <main@@Base+0x3fa8>
   171f0:	mov	r1, r5
   171f4:	b	1722c <main@@Base+0x3fa8>
   171f8:	subs	r3, r0, #128	; 0x80
   171fc:	sbcs	r2, r2, #0
   17200:	bcc	17224 <main@@Base+0x3fa0>
   17204:	ldr	r2, [sp, #44]	; 0x2c
   17208:	mov	r0, r8
   1720c:	mov	r3, #7
   17210:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   17214:	mov	r1, r0
   17218:	b	1722c <main@@Base+0x3fa8>
   1721c:	rsb	r4, r0, #0
   17220:	b	17228 <main@@Base+0x3fa4>
   17224:	mov	r4, r0
   17228:	strb	r4, [fp, #-60]	; 0xffffffc4
   1722c:	cmp	r5, r1
   17230:	bne	1726c <main@@Base+0x3fe8>
   17234:	ldr	r4, [sp, #44]	; 0x2c
   17238:	movw	r3, #16788	; 0x4194
   1723c:	sub	r0, fp, #60	; 0x3c
   17240:	mov	r1, r5
   17244:	movt	r3, #4
   17248:	str	r0, [sp]
   1724c:	mov	r0, r8
   17250:	mov	r2, r4
   17254:	bl	1e1b4 <main@@Base+0xaf30>
   17258:	mov	r1, r0
   1725c:	cmp	r0, r5
   17260:	cmpne	r1, r4
   17264:	beq	1776c <main@@Base+0x44e8>
   17268:	ldrb	r4, [fp, #-60]	; 0xffffffc4
   1726c:	ldr	r0, [sp, #24]
   17270:	ldr	r5, [sp, #44]	; 0x2c
   17274:	strb	r4, [r0, #24]
   17278:	b	17698 <main@@Base+0x4414>
   1727c:	ldr	r5, [sp, #44]	; 0x2c
   17280:	ldr	r8, [sp, #36]	; 0x24
   17284:	ldr	sl, [sp, #40]	; 0x28
   17288:	bne	17298 <main@@Base+0x4014>
   1728c:	ldrb	r0, [r7, #2]!
   17290:	cmp	r0, #32
   17294:	bhi	172a8 <main@@Base+0x4024>
   17298:	mov	r0, r8
   1729c:	mov	r2, r5
   172a0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   172a4:	mov	r7, r0
   172a8:	cmp	r9, r7
   172ac:	beq	17684 <main@@Base+0x4400>
   172b0:	mov	r0, #0
   172b4:	mov	r1, r7
   172b8:	mov	r2, r5
   172bc:	sub	r3, fp, #56	; 0x38
   172c0:	str	r0, [fp, #-52]	; 0xffffffcc
   172c4:	str	r0, [fp, #-56]	; 0xffffffc8
   172c8:	mov	r0, r8
   172cc:	bl	2e30c <flatcc_json_parser_double@@Base>
   172d0:	mov	r1, r0
   172d4:	cmp	r7, r0
   172d8:	bne	1730c <main@@Base+0x4088>
   172dc:	movw	r3, #16804	; 0x41a4
   172e0:	sub	r0, fp, #56	; 0x38
   172e4:	mov	r1, r7
   172e8:	mov	r2, r5
   172ec:	movt	r3, #4
   172f0:	str	r0, [sp]
   172f4:	mov	r0, r8
   172f8:	bl	22fe8 <main@@Base+0xfd64>
   172fc:	mov	r1, r0
   17300:	cmp	r0, r7
   17304:	cmpne	r1, r5
   17308:	beq	1776c <main@@Base+0x44e8>
   1730c:	vldr	d16, [fp, #-56]	; 0xffffffc8
   17310:	ldr	r0, [sp, #24]
   17314:	vstr	d16, [r0, #16]
   17318:	b	17698 <main@@Base+0x4414>
   1731c:	ldr	r4, [sp, #44]	; 0x2c
   17320:	bne	17334 <main@@Base+0x40b0>
   17324:	mov	r7, r1
   17328:	ldrb	r0, [r7, #1]!
   1732c:	cmp	r0, #32
   17330:	bhi	17344 <main@@Base+0x40c0>
   17334:	ldr	r0, [sp, #36]	; 0x24
   17338:	mov	r2, r4
   1733c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   17340:	mov	r7, r0
   17344:	cmp	r7, r4
   17348:	beq	17390 <main@@Base+0x410c>
   1734c:	ldrb	r0, [r7]
   17350:	cmp	r0, #58	; 0x3a
   17354:	bne	17390 <main@@Base+0x410c>
   17358:	ldr	r5, [sp, #44]	; 0x2c
   1735c:	ldr	r8, [sp, #36]	; 0x24
   17360:	ldr	sl, [sp, #40]	; 0x28
   17364:	add	r1, r7, #1
   17368:	sub	r0, r5, r1
   1736c:	cmp	r0, #2
   17370:	blt	17558 <main@@Base+0x42d4>
   17374:	ldrb	r0, [r1]
   17378:	cmp	r0, #32
   1737c:	bls	1753c <main@@Base+0x42b8>
   17380:	ldr	r5, [sp, #44]	; 0x2c
   17384:	ldr	r8, [sp, #36]	; 0x24
   17388:	mov	r7, r1
   1738c:	b	173b0 <main@@Base+0x412c>
   17390:	ldr	r8, [sp, #36]	; 0x24
   17394:	ldr	r5, [sp, #44]	; 0x2c
   17398:	mov	r1, r7
   1739c:	mov	r3, #4
   173a0:	mov	r0, r8
   173a4:	mov	r2, r5
   173a8:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   173ac:	mov	r7, r0
   173b0:	ldr	sl, [sp, #40]	; 0x28
   173b4:	b	17568 <main@@Base+0x42e4>
   173b8:	ldr	r4, [sp, #44]	; 0x2c
   173bc:	bne	173d0 <main@@Base+0x414c>
   173c0:	mov	r7, r1
   173c4:	ldrb	r0, [r7, #1]!
   173c8:	cmp	r0, #32
   173cc:	bhi	173e0 <main@@Base+0x415c>
   173d0:	ldr	r0, [sp, #36]	; 0x24
   173d4:	mov	r2, r4
   173d8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   173dc:	mov	r7, r0
   173e0:	cmp	r7, r4
   173e4:	beq	1742c <main@@Base+0x41a8>
   173e8:	ldrb	r0, [r7]
   173ec:	cmp	r0, #58	; 0x3a
   173f0:	bne	1742c <main@@Base+0x41a8>
   173f4:	ldr	r5, [sp, #44]	; 0x2c
   173f8:	ldr	r8, [sp, #36]	; 0x24
   173fc:	ldr	sl, [sp, #40]	; 0x28
   17400:	add	r1, r7, #1
   17404:	sub	r0, r5, r1
   17408:	cmp	r0, #2
   1740c:	blt	175fc <main@@Base+0x4378>
   17410:	ldrb	r0, [r1]
   17414:	cmp	r0, #32
   17418:	bls	175e0 <main@@Base+0x435c>
   1741c:	ldr	r5, [sp, #44]	; 0x2c
   17420:	ldr	r8, [sp, #36]	; 0x24
   17424:	mov	r7, r1
   17428:	b	1744c <main@@Base+0x41c8>
   1742c:	ldr	r8, [sp, #36]	; 0x24
   17430:	ldr	r5, [sp, #44]	; 0x2c
   17434:	mov	r1, r7
   17438:	mov	r3, #4
   1743c:	mov	r0, r8
   17440:	mov	r2, r5
   17444:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   17448:	mov	r7, r0
   1744c:	ldr	sl, [sp, #40]	; 0x28
   17450:	b	1760c <main@@Base+0x4388>
   17454:	ldr	r5, [sp, #44]	; 0x2c
   17458:	ldr	r8, [sp, #36]	; 0x24
   1745c:	ldr	sl, [sp, #40]	; 0x28
   17460:	bne	17470 <main@@Base+0x41ec>
   17464:	ldrb	r0, [r1, #2]!
   17468:	cmp	r0, #32
   1746c:	bhi	17484 <main@@Base+0x4200>
   17470:	mov	r1, r2
   17474:	mov	r0, r8
   17478:	mov	r2, r5
   1747c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   17480:	mov	r1, r0
   17484:	cmp	r9, r1
   17488:	beq	17684 <main@@Base+0x4400>
   1748c:	ldr	r3, [sp, #20]
   17490:	mov	r0, r8
   17494:	mov	r2, r5
   17498:	bl	1e85c <main@@Base+0xb5d8>
   1749c:	b	17694 <main@@Base+0x4410>
   174a0:	ldr	r5, [sp, #44]	; 0x2c
   174a4:	ldr	r8, [sp, #36]	; 0x24
   174a8:	ldr	sl, [sp, #40]	; 0x28
   174ac:	bne	174bc <main@@Base+0x4238>
   174b0:	ldrb	r0, [r7, #2]!
   174b4:	cmp	r0, #32
   174b8:	bhi	174cc <main@@Base+0x4248>
   174bc:	mov	r0, r8
   174c0:	mov	r2, r5
   174c4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   174c8:	mov	r7, r0
   174cc:	cmp	r9, r7
   174d0:	beq	17684 <main@@Base+0x4400>
   174d4:	mov	r0, #0
   174d8:	mov	r1, r7
   174dc:	mov	r2, r5
   174e0:	sub	r3, fp, #56	; 0x38
   174e4:	str	r0, [fp, #-56]	; 0xffffffc8
   174e8:	mov	r0, r8
   174ec:	bl	2ec68 <flatcc_json_parser_float@@Base>
   174f0:	mov	r1, r0
   174f4:	cmp	r7, r0
   174f8:	bne	1752c <main@@Base+0x42a8>
   174fc:	movw	r3, #16816	; 0x41b0
   17500:	sub	r0, fp, #56	; 0x38
   17504:	mov	r1, r7
   17508:	mov	r2, r5
   1750c:	movt	r3, #4
   17510:	str	r0, [sp]
   17514:	mov	r0, r8
   17518:	bl	2254c <main@@Base+0xf2c8>
   1751c:	mov	r1, r0
   17520:	cmp	r0, r7
   17524:	cmpne	r1, r5
   17528:	beq	1776c <main@@Base+0x44e8>
   1752c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17530:	ldr	r2, [sp, #24]
   17534:	str	r0, [r2]
   17538:	b	17698 <main@@Base+0x4414>
   1753c:	ldr	r5, [sp, #44]	; 0x2c
   17540:	ldr	r8, [sp, #36]	; 0x24
   17544:	ldr	sl, [sp, #40]	; 0x28
   17548:	bne	17558 <main@@Base+0x42d4>
   1754c:	ldrb	r0, [r7, #2]!
   17550:	cmp	r0, #32
   17554:	bhi	17568 <main@@Base+0x42e4>
   17558:	mov	r0, r8
   1755c:	mov	r2, r5
   17560:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   17564:	mov	r7, r0
   17568:	cmp	r9, r7
   1756c:	beq	17684 <main@@Base+0x4400>
   17570:	mov	r0, #0
   17574:	mov	r1, r7
   17578:	mov	r2, r5
   1757c:	sub	r3, fp, #56	; 0x38
   17580:	str	r0, [fp, #-56]	; 0xffffffc8
   17584:	mov	r0, r8
   17588:	bl	2ec68 <flatcc_json_parser_float@@Base>
   1758c:	mov	r1, r0
   17590:	cmp	r7, r0
   17594:	bne	175d0 <main@@Base+0x434c>
   17598:	movw	r3, #16828	; 0x41bc
   1759c:	sub	r0, fp, #56	; 0x38
   175a0:	mov	r1, r7
   175a4:	mov	r2, r5
   175a8:	movt	r3, #4
   175ac:	str	r0, [sp]
   175b0:	mov	r0, r8
   175b4:	bl	2254c <main@@Base+0xf2c8>
   175b8:	mov	r1, r0
   175bc:	cmp	r0, r7
   175c0:	cmpne	r1, r5
   175c4:	beq	1776c <main@@Base+0x44e8>
   175c8:	ldr	r8, [sp, #36]	; 0x24
   175cc:	ldr	sl, [sp, #40]	; 0x28
   175d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   175d4:	ldr	r2, [sp, #24]
   175d8:	str	r0, [r2, #8]
   175dc:	b	17698 <main@@Base+0x4414>
   175e0:	ldr	r5, [sp, #44]	; 0x2c
   175e4:	ldr	r8, [sp, #36]	; 0x24
   175e8:	ldr	sl, [sp, #40]	; 0x28
   175ec:	bne	175fc <main@@Base+0x4378>
   175f0:	ldrb	r0, [r7, #2]!
   175f4:	cmp	r0, #32
   175f8:	bhi	1760c <main@@Base+0x4388>
   175fc:	mov	r0, r8
   17600:	mov	r2, r5
   17604:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   17608:	mov	r7, r0
   1760c:	cmp	r9, r7
   17610:	beq	17684 <main@@Base+0x4400>
   17614:	mov	r0, #0
   17618:	mov	r1, r7
   1761c:	mov	r2, r5
   17620:	sub	r3, fp, #56	; 0x38
   17624:	str	r0, [fp, #-56]	; 0xffffffc8
   17628:	mov	r0, r8
   1762c:	bl	2ec68 <flatcc_json_parser_float@@Base>
   17630:	mov	r1, r0
   17634:	cmp	r7, r0
   17638:	bne	17674 <main@@Base+0x43f0>
   1763c:	movw	r3, #16840	; 0x41c8
   17640:	sub	r0, fp, #56	; 0x38
   17644:	mov	r1, r7
   17648:	mov	r2, r5
   1764c:	movt	r3, #4
   17650:	str	r0, [sp]
   17654:	mov	r0, r8
   17658:	bl	2254c <main@@Base+0xf2c8>
   1765c:	mov	r1, r0
   17660:	cmp	r0, r7
   17664:	cmpne	r1, r5
   17668:	beq	1776c <main@@Base+0x44e8>
   1766c:	ldr	r8, [sp, #36]	; 0x24
   17670:	ldr	sl, [sp, #40]	; 0x28
   17674:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17678:	ldr	r2, [sp, #24]
   1767c:	str	r0, [r2, #4]
   17680:	b	17698 <main@@Base+0x4414>
   17684:	mov	r0, r8
   17688:	mov	r1, r9
   1768c:	mov	r2, r5
   17690:	bl	2d5e0 <flatcc_json_parser_unmatched_symbol@@Base>
   17694:	mov	r1, r0
   17698:	sub	r0, r5, r1
   1769c:	cmp	r0, #2
   176a0:	blt	176cc <main@@Base+0x4448>
   176a4:	ldrb	r0, [r1]
   176a8:	cmp	r0, #32
   176ac:	bls	176b8 <main@@Base+0x4434>
   176b0:	mov	r2, r1
   176b4:	b	176dc <main@@Base+0x4458>
   176b8:	bne	176cc <main@@Base+0x4448>
   176bc:	mov	r2, r1
   176c0:	ldrb	r0, [r2, #1]!
   176c4:	cmp	r0, #32
   176c8:	bhi	176dc <main@@Base+0x4458>
   176cc:	mov	r0, r8
   176d0:	mov	r2, r5
   176d4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   176d8:	mov	r2, r0
   176dc:	cmp	r2, r5
   176e0:	beq	17788 <main@@Base+0x4504>
   176e4:	ldrb	r0, [r2]
   176e8:	cmp	r0, #44	; 0x2c
   176ec:	bne	17790 <main@@Base+0x450c>
   176f0:	add	r1, r2, #1
   176f4:	sub	r0, r5, r1
   176f8:	cmp	r0, #2
   176fc:	blt	17724 <main@@Base+0x44a0>
   17700:	ldrb	r0, [r1]
   17704:	cmp	r0, #32
   17708:	bls	17714 <main@@Base+0x4490>
   1770c:	mov	r2, r1
   17710:	b	17734 <main@@Base+0x44b0>
   17714:	bne	17724 <main@@Base+0x44a0>
   17718:	ldrb	r0, [r2, #2]!
   1771c:	cmp	r0, #32
   17720:	bhi	17734 <main@@Base+0x44b0>
   17724:	mov	r0, r8
   17728:	mov	r2, r5
   1772c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   17730:	mov	r2, r0
   17734:	cmp	r2, r5
   17738:	beq	177c4 <main@@Base+0x4540>
   1773c:	ldrb	r0, [r2]
   17740:	cmp	r0, #125	; 0x7d
   17744:	bne	16aa0 <main@@Base+0x381c>
   17748:	add	r1, r2, #1
   1774c:	sub	r0, r5, r1
   17750:	cmp	r0, #2
   17754:	blt	1a6b4 <main@@Base+0x7430>
   17758:	ldrb	r0, [r1]
   1775c:	cmp	r0, #32
   17760:	bls	1a6a0 <main@@Base+0x741c>
   17764:	mov	r4, r1
   17768:	b	1bba8 <main@@Base+0x8924>
   1776c:	ldr	r8, [sp, #36]	; 0x24
   17770:	ldr	r5, [sp, #44]	; 0x2c
   17774:	mov	r3, #33	; 0x21
   17778:	mov	r0, r8
   1777c:	mov	r2, r5
   17780:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   17784:	b	167c0 <main@@Base+0x353c>
   17788:	mov	r4, r5
   1778c:	b	1bba8 <main@@Base+0x8924>
   17790:	cmp	r0, #125	; 0x7d
   17794:	bne	18234 <main@@Base+0x4fb0>
   17798:	add	r1, r2, #1
   1779c:	sub	r0, r5, r1
   177a0:	cmp	r0, #2
   177a4:	blt	1a6b4 <main@@Base+0x7430>
   177a8:	ldrb	r0, [r1]
   177ac:	cmp	r0, #32
   177b0:	bls	1a694 <main@@Base+0x7410>
   177b4:	ldr	r5, [sp, #44]	; 0x2c
   177b8:	ldr	r8, [sp, #36]	; 0x24
   177bc:	mov	r4, r1
   177c0:	b	167c4 <main@@Base+0x3540>
   177c4:	mov	r0, r8
   177c8:	mov	r1, r5
   177cc:	b	1823c <main@@Base+0x4fb8>
   177d0:	bne	177e0 <main@@Base+0x455c>
   177d4:	ldrb	r0, [r7, #2]!
   177d8:	cmp	r0, #32
   177dc:	bhi	177f0 <main@@Base+0x456c>
   177e0:	mov	r0, r8
   177e4:	mov	r2, r5
   177e8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   177ec:	mov	r7, r0
   177f0:	cmp	r9, r7
   177f4:	beq	1623c <main@@Base+0x2fb8>
   177f8:	mov	r0, #0
   177fc:	mov	r1, r7
   17800:	mov	r2, r5
   17804:	sub	r3, fp, #56	; 0x38
   17808:	str	r0, [fp, #-56]	; 0xffffffc8
   1780c:	mov	r0, r8
   17810:	bl	2ec68 <flatcc_json_parser_float@@Base>
   17814:	mov	r4, r0
   17818:	cmp	r7, r0
   1781c:	bne	17850 <main@@Base+0x45cc>
   17820:	movw	r3, #16620	; 0x40ec
   17824:	sub	r0, fp, #56	; 0x38
   17828:	mov	r1, r7
   1782c:	mov	r2, r5
   17830:	movt	r3, #4
   17834:	str	r0, [sp]
   17838:	mov	r0, r8
   1783c:	bl	2254c <main@@Base+0xf2c8>
   17840:	mov	r4, r0
   17844:	cmp	r0, r7
   17848:	cmpne	r4, r5
   1784c:	beq	13340 <main@@Base+0xbc>
   17850:	vldr	s0, [fp, #-56]	; 0xffffffc8
   17854:	vcmp.f32	s0, s16
   17858:	vmrs	APSR_nzcv, fpscr
   1785c:	bne	1786c <main@@Base+0x45e8>
   17860:	ldrb	r0, [r8, #8]
   17864:	tst	r0, #2
   17868:	beq	1bba8 <main@@Base+0x8924>
   1786c:	ldr	r0, [r8]
   17870:	mov	r1, #26
   17874:	b	15174 <main@@Base+0x1ef0>
   17878:	bne	1788c <main@@Base+0x4608>
   1787c:	mov	r4, r1
   17880:	ldrb	r0, [r4, #1]!
   17884:	cmp	r0, #32
   17888:	bhi	1789c <main@@Base+0x4618>
   1788c:	mov	r0, r8
   17890:	mov	r2, r5
   17894:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   17898:	mov	r4, r0
   1789c:	cmp	r4, r5
   178a0:	beq	178e0 <main@@Base+0x465c>
   178a4:	ldrb	r0, [r4]
   178a8:	cmp	r0, #58	; 0x3a
   178ac:	bne	178e0 <main@@Base+0x465c>
   178b0:	add	r1, r4, #1
   178b4:	sub	r0, r5, r1
   178b8:	cmp	r0, #2
   178bc:	blt	19558 <main@@Base+0x62d4>
   178c0:	ldrb	r0, [r1]
   178c4:	cmp	r0, #32
   178c8:	bls	1953c <main@@Base+0x62b8>
   178cc:	ldr	r5, [sp, #44]	; 0x2c
   178d0:	ldr	r8, [sp, #36]	; 0x24
   178d4:	ldr	sl, [sp, #40]	; 0x28
   178d8:	mov	r4, r1
   178dc:	b	19568 <main@@Base+0x62e4>
   178e0:	mov	r0, r8
   178e4:	mov	r1, r4
   178e8:	mov	r2, r5
   178ec:	mov	r3, #4
   178f0:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   178f4:	b	19564 <main@@Base+0x62e0>
   178f8:	bne	1790c <main@@Base+0x4688>
   178fc:	mov	r7, r1
   17900:	ldrb	r0, [r7, #1]!
   17904:	cmp	r0, #32
   17908:	bhi	1791c <main@@Base+0x4698>
   1790c:	mov	r0, r8
   17910:	mov	r2, r5
   17914:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   17918:	mov	r7, r0
   1791c:	cmp	r7, r5
   17920:	beq	1795c <main@@Base+0x46d8>
   17924:	ldrb	r0, [r7]
   17928:	cmp	r0, #58	; 0x3a
   1792c:	bne	1795c <main@@Base+0x46d8>
   17930:	add	r1, r7, #1
   17934:	sub	r0, r5, r1
   17938:	cmp	r0, #2
   1793c:	blt	19610 <main@@Base+0x638c>
   17940:	ldrb	r0, [r1]
   17944:	cmp	r0, #32
   17948:	bls	195f8 <main@@Base+0x6374>
   1794c:	ldr	r5, [sp, #44]	; 0x2c
   17950:	ldr	r8, [sp, #36]	; 0x24
   17954:	mov	r7, r1
   17958:	b	19620 <main@@Base+0x639c>
   1795c:	mov	r0, r8
   17960:	mov	r1, r7
   17964:	mov	r2, r5
   17968:	mov	r3, #4
   1796c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   17970:	b	1961c <main@@Base+0x6398>
   17974:	bne	17988 <main@@Base+0x4704>
   17978:	mov	r7, r1
   1797c:	ldrb	r0, [r7, #1]!
   17980:	cmp	r0, #32
   17984:	bhi	17998 <main@@Base+0x4714>
   17988:	mov	r0, r8
   1798c:	mov	r2, r5
   17990:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   17994:	mov	r7, r0
   17998:	cmp	r7, r5
   1799c:	beq	179d8 <main@@Base+0x4754>
   179a0:	ldrb	r0, [r7]
   179a4:	cmp	r0, #58	; 0x3a
   179a8:	bne	179d8 <main@@Base+0x4754>
   179ac:	add	r1, r7, #1
   179b0:	sub	r0, r5, r1
   179b4:	cmp	r0, #2
   179b8:	blt	197e0 <main@@Base+0x655c>
   179bc:	ldrb	r0, [r1]
   179c0:	cmp	r0, #32
   179c4:	bls	197c8 <main@@Base+0x6544>
   179c8:	ldr	r5, [sp, #44]	; 0x2c
   179cc:	ldr	r8, [sp, #36]	; 0x24
   179d0:	mov	r7, r1
   179d4:	b	197f0 <main@@Base+0x656c>
   179d8:	mov	r0, r8
   179dc:	mov	r1, r7
   179e0:	mov	r2, r5
   179e4:	mov	r3, #4
   179e8:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   179ec:	b	197ec <main@@Base+0x6568>
   179f0:	mov	r0, r8
   179f4:	mov	r1, r4
   179f8:	mov	r2, r5
   179fc:	mov	r3, #9
   17a00:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   17a04:	b	16260 <main@@Base+0x2fdc>
   17a08:	bne	17a18 <main@@Base+0x4794>
   17a0c:	ldrb	r0, [r7, #2]!
   17a10:	cmp	r0, #32
   17a14:	bhi	17a28 <main@@Base+0x47a4>
   17a18:	mov	r0, r8
   17a1c:	mov	r2, r5
   17a20:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   17a24:	mov	r7, r0
   17a28:	cmp	sl, r7
   17a2c:	beq	17ab0 <main@@Base+0x482c>
   17a30:	mov	r6, #0
   17a34:	cmp	r7, r5
   17a38:	str	r6, [fp, #-52]	; 0xffffffcc
   17a3c:	str	r6, [fp, #-56]	; 0xffffffc8
   17a40:	str	r6, [fp, #-60]	; 0xffffffc4
   17a44:	str	r6, [sp, #56]	; 0x38
   17a48:	beq	17b20 <main@@Base+0x489c>
   17a4c:	sub	r0, fp, #56	; 0x38
   17a50:	mov	r1, r7
   17a54:	mov	r2, r5
   17a58:	add	r3, sp, #56	; 0x38
   17a5c:	str	r0, [sp]
   17a60:	mov	r0, r8
   17a64:	bl	2edac <flatcc_json_parser_integer@@Base>
   17a68:	cmp	r0, r7
   17a6c:	beq	17b58 <main@@Base+0x48d4>
   17a70:	ldr	r2, [sp, #56]	; 0x38
   17a74:	mov	r4, r0
   17a78:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17a7c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17a80:	cmp	r2, #0
   17a84:	beq	17b64 <main@@Base+0x48e0>
   17a88:	ldr	sl, [sp, #40]	; 0x28
   17a8c:	subs	r2, r0, #-2147483647	; 0x80000001
   17a90:	sbcs	r1, r1, #0
   17a94:	bcc	17b90 <main@@Base+0x490c>
   17a98:	mov	r0, r8
   17a9c:	mov	r1, r4
   17aa0:	mov	r2, r5
   17aa4:	mov	r3, #8
   17aa8:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   17aac:	b	17b88 <main@@Base+0x4904>
   17ab0:	add	r4, r9, #16
   17ab4:	mov	r1, #8
   17ab8:	sub	r0, r5, r4
   17abc:	cmp	r0, #8
   17ac0:	movcc	r1, r0
   17ac4:	sub	r1, r1, #1
   17ac8:	cmp	r1, #7
   17acc:	bhi	198dc <main@@Base+0x6658>
   17ad0:	ldrb	r1, [r4]
   17ad4:	cmp	r1, #97	; 0x61
   17ad8:	bne	198dc <main@@Base+0x6658>
   17adc:	ldr	sl, [sp, #40]	; 0x28
   17ae0:	cmp	r0, #2
   17ae4:	blt	1bb94 <main@@Base+0x8910>
   17ae8:	ldr	r2, [sp, #32]
   17aec:	mov	r1, r9
   17af0:	ldrb	r0, [r1, #17]!
   17af4:	ldr	r2, [r2]
   17af8:	cmp	r2, #0
   17afc:	beq	17b2c <main@@Base+0x48a8>
   17b00:	cmp	r0, #33	; 0x21
   17b04:	bcc	17b10 <main@@Base+0x488c>
   17b08:	cmp	r0, #58	; 0x3a
   17b0c:	bne	1bb94 <main@@Base+0x8910>
   17b10:	ldr	r0, [sp, #32]
   17b14:	mov	r2, #0
   17b18:	str	r2, [r0]
   17b1c:	b	17b38 <main@@Base+0x48b4>
   17b20:	ldr	sl, [sp, #40]	; 0x28
   17b24:	mov	r4, r5
   17b28:	b	183b4 <main@@Base+0x5130>
   17b2c:	cmp	r0, #34	; 0x22
   17b30:	bne	1bb94 <main@@Base+0x8910>
   17b34:	add	r1, r9, #18
   17b38:	sub	r0, r5, r1
   17b3c:	cmp	r0, #2
   17b40:	blt	180dc <main@@Base+0x4e58>
   17b44:	ldrb	r0, [r1]
   17b48:	cmp	r0, #32
   17b4c:	bls	180c8 <main@@Base+0x4e44>
   17b50:	mov	r7, r1
   17b54:	b	180ec <main@@Base+0x4e68>
   17b58:	ldr	sl, [sp, #40]	; 0x28
   17b5c:	mov	r4, r7
   17b60:	b	183b4 <main@@Base+0x5130>
   17b64:	subs	r2, r0, #-2147483648	; 0x80000000
   17b68:	sbcs	r1, r1, #0
   17b6c:	bcc	183a8 <main@@Base+0x5124>
   17b70:	mov	r0, r8
   17b74:	mov	r1, r4
   17b78:	mov	r2, r5
   17b7c:	mov	r3, #7
   17b80:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   17b84:	ldr	sl, [sp, #40]	; 0x28
   17b88:	mov	r4, r0
   17b8c:	b	183b4 <main@@Base+0x5130>
   17b90:	rsb	r6, r0, #0
   17b94:	b	183b0 <main@@Base+0x512c>
   17b98:	bne	17bac <main@@Base+0x4928>
   17b9c:	mov	r4, r1
   17ba0:	ldrb	r0, [r4, #1]!
   17ba4:	cmp	r0, #32
   17ba8:	bhi	17bbc <main@@Base+0x4938>
   17bac:	mov	r0, r8
   17bb0:	mov	r2, r5
   17bb4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   17bb8:	mov	r4, r0
   17bbc:	cmp	r4, r5
   17bc0:	beq	17c00 <main@@Base+0x497c>
   17bc4:	ldrb	r0, [r4]
   17bc8:	cmp	r0, #58	; 0x3a
   17bcc:	bne	17c00 <main@@Base+0x497c>
   17bd0:	add	r1, r4, #1
   17bd4:	sub	r0, r5, r1
   17bd8:	cmp	r0, #2
   17bdc:	blt	19a14 <main@@Base+0x6790>
   17be0:	ldrb	r0, [r1]
   17be4:	cmp	r0, #32
   17be8:	bls	199f8 <main@@Base+0x6774>
   17bec:	ldr	r5, [sp, #44]	; 0x2c
   17bf0:	ldr	r8, [sp, #36]	; 0x24
   17bf4:	ldr	sl, [sp, #40]	; 0x28
   17bf8:	mov	r4, r1
   17bfc:	b	19a24 <main@@Base+0x67a0>
   17c00:	mov	r0, r8
   17c04:	mov	r1, r4
   17c08:	mov	r2, r5
   17c0c:	mov	r3, #4
   17c10:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   17c14:	b	19a20 <main@@Base+0x679c>
   17c18:	bne	17c2c <main@@Base+0x49a8>
   17c1c:	mov	r4, r1
   17c20:	ldrb	r0, [r4, #1]!
   17c24:	cmp	r0, #32
   17c28:	bhi	17c3c <main@@Base+0x49b8>
   17c2c:	mov	r0, r8
   17c30:	mov	r2, r5
   17c34:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   17c38:	mov	r4, r0
   17c3c:	cmp	r4, r5
   17c40:	beq	17c80 <main@@Base+0x49fc>
   17c44:	ldrb	r0, [r4]
   17c48:	cmp	r0, #58	; 0x3a
   17c4c:	bne	17c80 <main@@Base+0x49fc>
   17c50:	add	r1, r4, #1
   17c54:	sub	r0, r5, r1
   17c58:	cmp	r0, #2
   17c5c:	blt	19acc <main@@Base+0x6848>
   17c60:	ldrb	r0, [r1]
   17c64:	cmp	r0, #32
   17c68:	bls	19ab0 <main@@Base+0x682c>
   17c6c:	ldr	r5, [sp, #44]	; 0x2c
   17c70:	ldr	r8, [sp, #36]	; 0x24
   17c74:	ldr	sl, [sp, #40]	; 0x28
   17c78:	mov	r4, r1
   17c7c:	b	19adc <main@@Base+0x6858>
   17c80:	mov	r0, r8
   17c84:	mov	r1, r4
   17c88:	mov	r2, r5
   17c8c:	mov	r3, #4
   17c90:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   17c94:	b	19ad8 <main@@Base+0x6854>
   17c98:	bne	17cac <main@@Base+0x4a28>
   17c9c:	mov	r4, r1
   17ca0:	ldrb	r0, [r4, #1]!
   17ca4:	cmp	r0, #32
   17ca8:	bhi	17cbc <main@@Base+0x4a38>
   17cac:	mov	r0, r8
   17cb0:	mov	r2, r5
   17cb4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   17cb8:	mov	r4, r0
   17cbc:	cmp	r4, r5
   17cc0:	beq	17d00 <main@@Base+0x4a7c>
   17cc4:	ldrb	r0, [r4]
   17cc8:	cmp	r0, #58	; 0x3a
   17ccc:	bne	17d00 <main@@Base+0x4a7c>
   17cd0:	add	r1, r4, #1
   17cd4:	sub	r0, r5, r1
   17cd8:	cmp	r0, #2
   17cdc:	blt	19ba4 <main@@Base+0x6920>
   17ce0:	ldrb	r0, [r1]
   17ce4:	cmp	r0, #32
   17ce8:	bls	19b88 <main@@Base+0x6904>
   17cec:	ldr	r5, [sp, #44]	; 0x2c
   17cf0:	ldr	r8, [sp, #36]	; 0x24
   17cf4:	ldr	sl, [sp, #40]	; 0x28
   17cf8:	mov	r4, r1
   17cfc:	b	19bb4 <main@@Base+0x6930>
   17d00:	mov	r0, r8
   17d04:	mov	r1, r4
   17d08:	mov	r2, r5
   17d0c:	mov	r3, #4
   17d10:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   17d14:	b	19bb0 <main@@Base+0x692c>
   17d18:	bne	17d28 <main@@Base+0x4aa4>
   17d1c:	ldrb	r0, [r4, #2]!
   17d20:	cmp	r0, #32
   17d24:	bhi	17d38 <main@@Base+0x4ab4>
   17d28:	mov	r0, r8
   17d2c:	mov	r2, r5
   17d30:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   17d34:	mov	r4, r0
   17d38:	cmp	r4, r5
   17d3c:	mov	r6, r5
   17d40:	beq	17d84 <main@@Base+0x4b00>
   17d44:	ldrb	r0, [r4]
   17d48:	cmp	r0, #93	; 0x5d
   17d4c:	bne	17d80 <main@@Base+0x4afc>
   17d50:	add	r1, r4, #1
   17d54:	sub	r0, r5, r1
   17d58:	cmp	r0, #2
   17d5c:	blt	199e8 <main@@Base+0x6764>
   17d60:	ldrb	r0, [r1]
   17d64:	cmp	r0, #32
   17d68:	bls	199cc <main@@Base+0x6748>
   17d6c:	ldr	r5, [sp, #44]	; 0x2c
   17d70:	ldr	r8, [sp, #36]	; 0x24
   17d74:	ldr	sl, [sp, #40]	; 0x28
   17d78:	mov	r4, r1
   17d7c:	b	167e4 <main@@Base+0x3560>
   17d80:	mov	r6, r4
   17d84:	mov	r0, #0
   17d88:	mov	r1, #1
   17d8c:	strb	r0, [fp, #-60]	; 0xffffffc4
   17d90:	ldr	r0, [r8]
   17d94:	bl	29764 <flatcc_builder_extend_vector@@Base>
   17d98:	cmp	r0, #0
   17d9c:	beq	1cdb8 <main@@Base+0x9b34>
   17da0:	mov	r7, r0
   17da4:	mov	r4, r6
   17da8:	sub	r6, r5, r4
   17dac:	cmp	r6, #4
   17db0:	blt	17df4 <main@@Base+0x4b70>
   17db4:	movw	r1, #4179	; 0x1053
   17db8:	mov	r0, r4
   17dbc:	mov	r2, #4
   17dc0:	movt	r1, #3
   17dc4:	bl	12b34 <bcmp@plt>
   17dc8:	cmp	r0, #0
   17dcc:	beq	17e58 <main@@Base+0x4bd4>
   17dd0:	cmp	r6, #5
   17dd4:	blt	17df4 <main@@Base+0x4b70>
   17dd8:	movw	r1, #4184	; 0x1058
   17ddc:	mov	r0, r4
   17de0:	mov	r2, #5
   17de4:	movt	r1, #3
   17de8:	bl	12b34 <bcmp@plt>
   17dec:	cmp	r0, #0
   17df0:	beq	17fb8 <main@@Base+0x4d34>
   17df4:	mov	r6, #0
   17df8:	cmp	r4, r5
   17dfc:	str	r6, [fp, #-52]	; 0xffffffcc
   17e00:	str	r6, [fp, #-56]	; 0xffffffc8
   17e04:	str	r6, [sp, #56]	; 0x38
   17e08:	beq	17e50 <main@@Base+0x4bcc>
   17e0c:	sub	r0, fp, #56	; 0x38
   17e10:	mov	r1, r4
   17e14:	mov	r2, r5
   17e18:	add	r3, sp, #56	; 0x38
   17e1c:	str	r0, [sp]
   17e20:	mov	r0, r8
   17e24:	bl	2edac <flatcc_json_parser_integer@@Base>
   17e28:	cmp	r0, r4
   17e2c:	beq	17e64 <main@@Base+0x4be0>
   17e30:	mov	r1, r0
   17e34:	ldr	r0, [sp, #56]	; 0x38
   17e38:	cmp	r0, #0
   17e3c:	beq	17e6c <main@@Base+0x4be8>
   17e40:	mov	r0, r8
   17e44:	mov	r2, r5
   17e48:	mov	r3, #8
   17e4c:	b	17e8c <main@@Base+0x4c08>
   17e50:	mov	r1, r5
   17e54:	b	17e94 <main@@Base+0x4c10>
   17e58:	mov	r0, #1
   17e5c:	add	r1, r4, #4
   17e60:	b	17ea0 <main@@Base+0x4c1c>
   17e64:	mov	r1, r4
   17e68:	b	17e94 <main@@Base+0x4c10>
   17e6c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17e70:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17e74:	subs	r3, r0, #256	; 0x100
   17e78:	sbcs	r2, r2, #0
   17e7c:	bcc	17fc4 <main@@Base+0x4d40>
   17e80:	mov	r0, r8
   17e84:	mov	r2, r5
   17e88:	mov	r3, #7
   17e8c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   17e90:	mov	r1, r0
   17e94:	uxtb	r0, r6
   17e98:	cmp	r0, #0
   17e9c:	movwne	r0, #1
   17ea0:	strb	r0, [fp, #-60]	; 0xffffffc4
   17ea4:	cmp	r4, r1
   17ea8:	bne	17ee0 <main@@Base+0x4c5c>
   17eac:	movw	r3, #16596	; 0x40d4
   17eb0:	sub	r0, fp, #60	; 0x3c
   17eb4:	mov	r1, r4
   17eb8:	mov	r2, r5
   17ebc:	movt	r3, #4
   17ec0:	str	r0, [sp]
   17ec4:	mov	r0, r8
   17ec8:	bl	22340 <main@@Base+0xf0bc>
   17ecc:	mov	r1, r0
   17ed0:	cmp	r0, r4
   17ed4:	cmpne	r1, r5
   17ed8:	beq	1cdc4 <main@@Base+0x9b40>
   17edc:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   17ee0:	strb	r0, [r7]
   17ee4:	sub	r0, r5, r1
   17ee8:	cmp	r0, #2
   17eec:	blt	17f18 <main@@Base+0x4c94>
   17ef0:	ldrb	r0, [r1]
   17ef4:	cmp	r0, #32
   17ef8:	bls	17f04 <main@@Base+0x4c80>
   17efc:	mov	r4, r1
   17f00:	b	17f28 <main@@Base+0x4ca4>
   17f04:	bne	17f18 <main@@Base+0x4c94>
   17f08:	mov	r4, r1
   17f0c:	ldrb	r0, [r4, #1]!
   17f10:	cmp	r0, #32
   17f14:	bhi	17f28 <main@@Base+0x4ca4>
   17f18:	mov	r0, r8
   17f1c:	mov	r2, r5
   17f20:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   17f24:	mov	r4, r0
   17f28:	cmp	r4, r5
   17f2c:	beq	1a3c4 <main@@Base+0x7140>
   17f30:	ldrb	r0, [r4]
   17f34:	cmp	r0, #44	; 0x2c
   17f38:	bne	1a3cc <main@@Base+0x7148>
   17f3c:	add	r1, r4, #1
   17f40:	sub	r0, r5, r1
   17f44:	cmp	r0, #2
   17f48:	blt	17f70 <main@@Base+0x4cec>
   17f4c:	ldrb	r0, [r1]
   17f50:	cmp	r0, #32
   17f54:	bls	17f60 <main@@Base+0x4cdc>
   17f58:	mov	r4, r1
   17f5c:	b	17f80 <main@@Base+0x4cfc>
   17f60:	bne	17f70 <main@@Base+0x4cec>
   17f64:	ldrb	r0, [r4, #2]!
   17f68:	cmp	r0, #32
   17f6c:	bhi	17f80 <main@@Base+0x4cfc>
   17f70:	mov	r0, r8
   17f74:	mov	r2, r5
   17f78:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   17f7c:	mov	r4, r0
   17f80:	cmp	r4, r5
   17f84:	beq	1a680 <main@@Base+0x73fc>
   17f88:	ldrb	r0, [r4]
   17f8c:	cmp	r0, #93	; 0x5d
   17f90:	beq	17d50 <main@@Base+0x4acc>
   17f94:	mov	r0, #0
   17f98:	mov	r1, #1
   17f9c:	strb	r0, [fp, #-60]	; 0xffffffc4
   17fa0:	ldr	r0, [r8]
   17fa4:	bl	29764 <flatcc_builder_extend_vector@@Base>
   17fa8:	mov	r7, r0
   17fac:	cmp	r0, #0
   17fb0:	bne	17da8 <main@@Base+0x4b24>
   17fb4:	b	13340 <main@@Base+0xbc>
   17fb8:	mov	r0, #0
   17fbc:	add	r1, r4, #5
   17fc0:	b	17ea0 <main@@Base+0x4c1c>
   17fc4:	mov	r6, r0
   17fc8:	b	17e94 <main@@Base+0x4c10>
   17fcc:	bne	17fe0 <main@@Base+0x4d5c>
   17fd0:	mov	r4, r1
   17fd4:	ldrb	r0, [r4, #1]!
   17fd8:	cmp	r0, #32
   17fdc:	bhi	17ff0 <main@@Base+0x4d6c>
   17fe0:	mov	r0, r8
   17fe4:	mov	r2, r5
   17fe8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   17fec:	mov	r4, r0
   17ff0:	cmp	r4, r5
   17ff4:	beq	18030 <main@@Base+0x4dac>
   17ff8:	ldrb	r0, [r4]
   17ffc:	cmp	r0, #58	; 0x3a
   18000:	bne	18030 <main@@Base+0x4dac>
   18004:	add	r1, r4, #1
   18008:	sub	r0, r5, r1
   1800c:	cmp	r0, #2
   18010:	blt	19c94 <main@@Base+0x6a10>
   18014:	ldrb	r0, [r1]
   18018:	cmp	r0, #32
   1801c:	bls	19c7c <main@@Base+0x69f8>
   18020:	ldr	r5, [sp, #44]	; 0x2c
   18024:	ldr	r8, [sp, #36]	; 0x24
   18028:	mov	r4, r1
   1802c:	b	19ca4 <main@@Base+0x6a20>
   18030:	mov	r0, r8
   18034:	mov	r1, r4
   18038:	mov	r2, r5
   1803c:	mov	r3, #4
   18040:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   18044:	b	19ca0 <main@@Base+0x6a1c>
   18048:	bne	1805c <main@@Base+0x4dd8>
   1804c:	mov	r4, r1
   18050:	ldrb	r0, [r4, #1]!
   18054:	cmp	r0, #32
   18058:	bhi	1806c <main@@Base+0x4de8>
   1805c:	mov	r0, r8
   18060:	mov	r2, r5
   18064:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   18068:	mov	r4, r0
   1806c:	cmp	r4, r5
   18070:	beq	180b0 <main@@Base+0x4e2c>
   18074:	ldrb	r0, [r4]
   18078:	cmp	r0, #58	; 0x3a
   1807c:	bne	180b0 <main@@Base+0x4e2c>
   18080:	add	r1, r4, #1
   18084:	sub	r0, r5, r1
   18088:	cmp	r0, #2
   1808c:	blt	19e6c <main@@Base+0x6be8>
   18090:	ldrb	r0, [r1]
   18094:	cmp	r0, #32
   18098:	bls	19e50 <main@@Base+0x6bcc>
   1809c:	ldr	r5, [sp, #44]	; 0x2c
   180a0:	ldr	r8, [sp, #36]	; 0x24
   180a4:	ldr	sl, [sp, #40]	; 0x28
   180a8:	mov	r4, r1
   180ac:	b	19e7c <main@@Base+0x6bf8>
   180b0:	mov	r0, r8
   180b4:	mov	r1, r4
   180b8:	mov	r2, r5
   180bc:	mov	r3, #4
   180c0:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   180c4:	b	19e78 <main@@Base+0x6bf4>
   180c8:	bne	180dc <main@@Base+0x4e58>
   180cc:	mov	r7, r1
   180d0:	ldrb	r0, [r7, #1]!
   180d4:	cmp	r0, #32
   180d8:	bhi	180ec <main@@Base+0x4e68>
   180dc:	mov	r0, r8
   180e0:	mov	r2, r5
   180e4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   180e8:	mov	r7, r0
   180ec:	cmp	r7, r5
   180f0:	beq	18130 <main@@Base+0x4eac>
   180f4:	ldrb	r0, [r7]
   180f8:	cmp	r0, #58	; 0x3a
   180fc:	bne	18130 <main@@Base+0x4eac>
   18100:	add	r1, r7, #1
   18104:	sub	r0, r5, r1
   18108:	cmp	r0, #2
   1810c:	blt	19f68 <main@@Base+0x6ce4>
   18110:	ldrb	r0, [r1]
   18114:	cmp	r0, #32
   18118:	bls	19f4c <main@@Base+0x6cc8>
   1811c:	ldr	r5, [sp, #44]	; 0x2c
   18120:	ldr	r8, [sp, #36]	; 0x24
   18124:	ldr	sl, [sp, #40]	; 0x28
   18128:	mov	r7, r1
   1812c:	b	19f78 <main@@Base+0x6cf4>
   18130:	mov	r0, r8
   18134:	mov	r1, r7
   18138:	mov	r2, r5
   1813c:	mov	r3, #4
   18140:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   18144:	b	19f74 <main@@Base+0x6cf0>
   18148:	bne	18158 <main@@Base+0x4ed4>
   1814c:	ldrb	r0, [r4, #2]!
   18150:	cmp	r0, #32
   18154:	bhi	18168 <main@@Base+0x4ee4>
   18158:	mov	r0, r8
   1815c:	mov	r2, r5
   18160:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   18164:	mov	r4, r0
   18168:	cmp	r7, r4
   1816c:	beq	1b160 <main@@Base+0x7edc>
   18170:	mov	r0, #0
   18174:	mov	r1, #3
   18178:	str	r0, [sp, #52]	; 0x34
   1817c:	ldr	r0, [r8]
   18180:	bl	2a328 <flatcc_builder_start_table@@Base>
   18184:	cmp	r0, #0
   18188:	bne	181ec <main@@Base+0x4f68>
   1818c:	cmp	r4, r5
   18190:	beq	181c8 <main@@Base+0x4f44>
   18194:	ldrb	r0, [r4]
   18198:	cmp	r0, #123	; 0x7b
   1819c:	bne	181c8 <main@@Base+0x4f44>
   181a0:	add	r1, r4, #1
   181a4:	sub	r0, r5, r1
   181a8:	cmp	r0, #2
   181ac:	blt	1a72c <main@@Base+0x74a8>
   181b0:	ldrb	r0, [r1]
   181b4:	cmp	r0, #32
   181b8:	bls	1a714 <main@@Base+0x7490>
   181bc:	ldr	r5, [sp, #44]	; 0x2c
   181c0:	mov	r4, r1
   181c4:	b	1a73c <main@@Base+0x74b8>
   181c8:	mov	r0, r8
   181cc:	mov	r1, r4
   181d0:	mov	r2, r5
   181d4:	mov	r3, #21
   181d8:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   181dc:	mov	r4, r0
   181e0:	ldr	r0, [r8, #24]
   181e4:	cmp	r0, #0
   181e8:	beq	1821c <main@@Base+0x4f98>
   181ec:	mov	r0, r8
   181f0:	mov	r1, r4
   181f4:	mov	r2, r5
   181f8:	mov	r3, #33	; 0x21
   181fc:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   18200:	mov	r4, r0
   18204:	ldr	r0, [sp, #52]	; 0x34
   18208:	cmp	r0, #0
   1820c:	beq	13340 <main@@Base+0xbc>
   18210:	ldr	r0, [r8]
   18214:	mov	r1, #35	; 0x23
   18218:	b	15a40 <main@@Base+0x27bc>
   1821c:	ldr	r0, [r8]
   18220:	bl	2ac88 <flatcc_builder_end_table@@Base>
   18224:	cmp	r0, #0
   18228:	str	r0, [sp, #52]	; 0x34
   1822c:	bne	18210 <main@@Base+0x4f8c>
   18230:	b	181ec <main@@Base+0x4f68>
   18234:	mov	r0, r8
   18238:	mov	r1, r2
   1823c:	mov	r2, r5
   18240:	mov	r3, #10
   18244:	b	16a28 <main@@Base+0x37a4>
   18248:	bne	18258 <main@@Base+0x4fd4>
   1824c:	ldrb	r0, [r4, #2]!
   18250:	cmp	r0, #32
   18254:	bhi	18268 <main@@Base+0x4fe4>
   18258:	mov	r0, r8
   1825c:	mov	r2, r5
   18260:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   18264:	mov	r4, r0
   18268:	cmp	r7, r4
   1826c:	beq	1b160 <main@@Base+0x7edc>
   18270:	ldr	r0, [r8]
   18274:	bl	29fe8 <flatcc_builder_start_offset_vector@@Base>
   18278:	cmp	r0, #0
   1827c:	bne	13340 <main@@Base+0xbc>
   18280:	cmp	r4, r5
   18284:	beq	182b8 <main@@Base+0x5034>
   18288:	ldrb	r0, [r4]
   1828c:	cmp	r0, #91	; 0x5b
   18290:	bne	182b8 <main@@Base+0x5034>
   18294:	add	r1, r4, #1
   18298:	sub	r0, r5, r1
   1829c:	cmp	r0, #2
   182a0:	blt	18a1c <main@@Base+0x5798>
   182a4:	ldrb	r0, [r1]
   182a8:	cmp	r0, #32
   182ac:	bls	18a0c <main@@Base+0x5788>
   182b0:	mov	r4, r1
   182b4:	b	18a2c <main@@Base+0x57a8>
   182b8:	mov	r0, r8
   182bc:	mov	r1, r4
   182c0:	mov	r2, r5
   182c4:	mov	r3, #22
   182c8:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   182cc:	mov	r4, r0
   182d0:	ldr	r0, [r8]
   182d4:	bl	2a0b4 <flatcc_builder_end_offset_vector@@Base>
   182d8:	cmp	r0, #0
   182dc:	str	r0, [sp, #52]	; 0x34
   182e0:	beq	13340 <main@@Base+0xbc>
   182e4:	ldr	r0, [r8]
   182e8:	mov	r1, #28
   182ec:	b	15a40 <main@@Base+0x27bc>
   182f0:	bne	18300 <main@@Base+0x507c>
   182f4:	ldrb	r0, [r7, #2]!
   182f8:	cmp	r0, #32
   182fc:	bhi	18310 <main@@Base+0x508c>
   18300:	mov	r0, r8
   18304:	mov	r2, r5
   18308:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1830c:	mov	r7, r0
   18310:	cmp	sl, r7
   18314:	beq	167b0 <main@@Base+0x352c>
   18318:	ldr	r0, [r8]
   1831c:	mov	r1, #8
   18320:	mov	r2, #4
   18324:	mvn	r3, #-536870912	; 0xe0000000
   18328:	bl	29f5c <flatcc_builder_start_vector@@Base>
   1832c:	cmp	r0, #0
   18330:	bne	1cdf0 <main@@Base+0x9b6c>
   18334:	ldr	sl, [sp, #40]	; 0x28
   18338:	cmp	r7, r5
   1833c:	beq	18370 <main@@Base+0x50ec>
   18340:	ldrb	r0, [r7]
   18344:	cmp	r0, #91	; 0x5b
   18348:	bne	18370 <main@@Base+0x50ec>
   1834c:	add	r1, r7, #1
   18350:	sub	r0, r5, r1
   18354:	cmp	r0, #2
   18358:	blt	18b84 <main@@Base+0x5900>
   1835c:	ldrb	r0, [r1]
   18360:	cmp	r0, #32
   18364:	bls	18b74 <main@@Base+0x58f0>
   18368:	mov	r7, r1
   1836c:	b	18b94 <main@@Base+0x5910>
   18370:	mov	r0, r8
   18374:	mov	r1, r7
   18378:	mov	r2, r5
   1837c:	mov	r3, #22
   18380:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   18384:	mov	r7, r0
   18388:	ldr	r0, [r8]
   1838c:	bl	2af88 <flatcc_builder_end_vector@@Base>
   18390:	cmp	r0, #0
   18394:	str	r0, [sp, #52]	; 0x34
   18398:	beq	1cdf0 <main@@Base+0x9b6c>
   1839c:	ldr	r0, [r8]
   183a0:	mov	r1, #29
   183a4:	b	16280 <main@@Base+0x2ffc>
   183a8:	ldr	sl, [sp, #40]	; 0x28
   183ac:	mov	r6, r0
   183b0:	str	r6, [fp, #-60]	; 0xffffffc4
   183b4:	cmp	r7, r4
   183b8:	bne	183f0 <main@@Base+0x516c>
   183bc:	movw	r3, #16656	; 0x4110
   183c0:	sub	r0, fp, #60	; 0x3c
   183c4:	mov	r1, r7
   183c8:	mov	r2, r5
   183cc:	movt	r3, #4
   183d0:	str	r0, [sp]
   183d4:	mov	r0, r8
   183d8:	bl	2271c <main@@Base+0xf498>
   183dc:	mov	r4, r0
   183e0:	cmp	r0, r7
   183e4:	cmpne	r4, r5
   183e8:	beq	1ce04 <main@@Base+0x9b80>
   183ec:	ldr	r6, [fp, #-60]	; 0xffffffc4
   183f0:	cmp	r6, #0
   183f4:	bne	18404 <main@@Base+0x5180>
   183f8:	ldrb	r0, [r8, #8]
   183fc:	tst	r0, #2
   18400:	beq	1bba8 <main@@Base+0x8924>
   18404:	ldr	r0, [r8]
   18408:	mov	r1, #16
   1840c:	b	1b23c <main@@Base+0x7fb8>
   18410:	bne	18420 <main@@Base+0x519c>
   18414:	ldrb	r0, [r7, #2]!
   18418:	cmp	r0, #32
   1841c:	bhi	18430 <main@@Base+0x51ac>
   18420:	mov	r0, r8
   18424:	mov	r2, r5
   18428:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1842c:	mov	r7, r0
   18430:	ldr	sl, [sp, #40]	; 0x28
   18434:	cmp	r9, r7
   18438:	beq	1623c <main@@Base+0x2fb8>
   1843c:	mov	r6, #0
   18440:	cmp	r7, r5
   18444:	str	r6, [fp, #-52]	; 0xffffffcc
   18448:	str	r6, [fp, #-56]	; 0xffffffc8
   1844c:	strh	r6, [fp, #-60]	; 0xffffffc4
   18450:	str	r6, [sp, #56]	; 0x38
   18454:	beq	184b8 <main@@Base+0x5234>
   18458:	sub	r0, fp, #56	; 0x38
   1845c:	mov	r1, r7
   18460:	mov	r2, r5
   18464:	add	r3, sp, #56	; 0x38
   18468:	str	r0, [sp]
   1846c:	mov	r0, r8
   18470:	bl	2edac <flatcc_json_parser_integer@@Base>
   18474:	cmp	r0, r7
   18478:	beq	184c0 <main@@Base+0x523c>
   1847c:	ldr	r2, [sp, #56]	; 0x38
   18480:	mov	r4, r0
   18484:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18488:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1848c:	cmp	r2, #0
   18490:	beq	184c8 <main@@Base+0x5244>
   18494:	movw	r2, #32769	; 0x8001
   18498:	subs	r2, r0, r2
   1849c:	sbcs	r1, r1, #0
   184a0:	bcc	184f0 <main@@Base+0x526c>
   184a4:	mov	r0, r8
   184a8:	mov	r1, r4
   184ac:	mov	r2, r5
   184b0:	mov	r3, #8
   184b4:	b	184e4 <main@@Base+0x5260>
   184b8:	mov	r4, r5
   184bc:	b	18500 <main@@Base+0x527c>
   184c0:	mov	r4, r7
   184c4:	b	18500 <main@@Base+0x527c>
   184c8:	subs	r2, r0, #32768	; 0x8000
   184cc:	sbcs	r1, r1, #0
   184d0:	bcc	184f8 <main@@Base+0x5274>
   184d4:	mov	r0, r8
   184d8:	mov	r1, r4
   184dc:	mov	r2, r5
   184e0:	mov	r3, #7
   184e4:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   184e8:	mov	r4, r0
   184ec:	b	18500 <main@@Base+0x527c>
   184f0:	rsb	r6, r0, #0
   184f4:	b	184fc <main@@Base+0x5278>
   184f8:	mov	r6, r0
   184fc:	strh	r6, [fp, #-60]	; 0xffffffc4
   18500:	cmp	r7, r4
   18504:	bne	1853c <main@@Base+0x52b8>
   18508:	movw	r3, #16568	; 0x40b8
   1850c:	sub	r0, fp, #60	; 0x3c
   18510:	mov	r1, r7
   18514:	mov	r2, r5
   18518:	movt	r3, #4
   1851c:	str	r0, [sp]
   18520:	mov	r0, r8
   18524:	bl	1e61c <main@@Base+0xb398>
   18528:	mov	r4, r0
   1852c:	cmp	r0, r7
   18530:	cmpne	r4, r5
   18534:	beq	1ce04 <main@@Base+0x9b80>
   18538:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   1853c:	uxth	r0, r6
   18540:	cmp	r0, #150	; 0x96
   18544:	bne	18554 <main@@Base+0x52d0>
   18548:	ldrb	r0, [r8, #8]
   1854c:	tst	r0, #2
   18550:	beq	1bba8 <main@@Base+0x8924>
   18554:	ldr	r0, [r8]
   18558:	mov	r1, #1
   1855c:	mov	r2, #2
   18560:	mov	r3, #2
   18564:	bl	2b574 <flatcc_builder_table_add@@Base>
   18568:	cmp	r0, #0
   1856c:	beq	1ce04 <main@@Base+0x9b80>
   18570:	strh	r6, [r0]
   18574:	b	1bba8 <main@@Base+0x8924>
   18578:	bne	18588 <main@@Base+0x5304>
   1857c:	ldrb	r0, [r7, #2]!
   18580:	cmp	r0, #32
   18584:	bhi	18598 <main@@Base+0x5314>
   18588:	mov	r0, r8
   1858c:	mov	r2, r5
   18590:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   18594:	mov	r7, r0
   18598:	ldr	sl, [sp, #40]	; 0x28
   1859c:	cmp	r9, r7
   185a0:	beq	1623c <main@@Base+0x2fb8>
   185a4:	mov	r0, #0
   185a8:	mov	r1, r7
   185ac:	mov	r2, r5
   185b0:	sub	r3, fp, #56	; 0x38
   185b4:	str	r0, [fp, #-56]	; 0xffffffc8
   185b8:	mov	r0, r8
   185bc:	bl	2ec68 <flatcc_json_parser_float@@Base>
   185c0:	mov	r4, r0
   185c4:	cmp	r7, r0
   185c8:	bne	185fc <main@@Base+0x5378>
   185cc:	movw	r3, #16632	; 0x40f8
   185d0:	sub	r0, fp, #56	; 0x38
   185d4:	mov	r1, r7
   185d8:	mov	r2, r5
   185dc:	movt	r3, #4
   185e0:	str	r0, [sp]
   185e4:	mov	r0, r8
   185e8:	bl	2254c <main@@Base+0xf2c8>
   185ec:	mov	r4, r0
   185f0:	cmp	r0, r7
   185f4:	cmpne	r4, r5
   185f8:	beq	13340 <main@@Base+0xbc>
   185fc:	vldr	s0, [fp, #-56]	; 0xffffffc8
   18600:	vcmp.f32	s0, s18
   18604:	vmrs	APSR_nzcv, fpscr
   18608:	bne	18618 <main@@Base+0x5394>
   1860c:	ldrb	r0, [r8, #8]
   18610:	tst	r0, #2
   18614:	beq	1bba8 <main@@Base+0x8924>
   18618:	ldr	r0, [r8]
   1861c:	mov	r1, #25
   18620:	b	15174 <main@@Base+0x1ef0>
   18624:	bne	18634 <main@@Base+0x53b0>
   18628:	ldrb	r0, [r7, #2]!
   1862c:	cmp	r0, #32
   18630:	bhi	18644 <main@@Base+0x53c0>
   18634:	mov	r0, r8
   18638:	mov	r2, r5
   1863c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   18640:	mov	r7, r0
   18644:	cmp	sl, r7
   18648:	beq	186c4 <main@@Base+0x5440>
   1864c:	mov	r6, #0
   18650:	cmp	r7, r5
   18654:	str	r6, [fp, #-52]	; 0xffffffcc
   18658:	str	r6, [fp, #-56]	; 0xffffffc8
   1865c:	str	r6, [sp, #60]	; 0x3c
   18660:	str	r6, [sp, #56]	; 0x38
   18664:	str	r6, [fp, #-60]	; 0xffffffc4
   18668:	beq	18734 <main@@Base+0x54b0>
   1866c:	sub	r0, fp, #56	; 0x38
   18670:	mov	r1, r7
   18674:	mov	r2, r5
   18678:	sub	r3, fp, #60	; 0x3c
   1867c:	str	r0, [sp]
   18680:	mov	r0, r8
   18684:	bl	2edac <flatcc_json_parser_integer@@Base>
   18688:	cmp	r0, r7
   1868c:	beq	1876c <main@@Base+0x54e8>
   18690:	sub	r9, fp, #60	; 0x3c
   18694:	mov	r4, r0
   18698:	ldm	r9, {r0, r6, r9}
   1869c:	cmp	r0, #0
   186a0:	beq	1877c <main@@Base+0x54f8>
   186a4:	subs	r0, r6, #1
   186a8:	sbcs	r0, r9, #-2147483648	; 0x80000000
   186ac:	bcc	187a8 <main@@Base+0x5524>
   186b0:	mov	r0, r8
   186b4:	mov	r1, r4
   186b8:	mov	r2, r5
   186bc:	mov	r3, #8
   186c0:	b	18794 <main@@Base+0x5510>
   186c4:	add	r4, r9, #16
   186c8:	mov	r1, #8
   186cc:	sub	r0, r5, r4
   186d0:	cmp	r0, #8
   186d4:	movcc	r1, r0
   186d8:	sub	r1, r1, #1
   186dc:	cmp	r1, #7
   186e0:	bhi	198dc <main@@Base+0x6658>
   186e4:	ldrb	r1, [r4]
   186e8:	cmp	r1, #97	; 0x61
   186ec:	bne	198dc <main@@Base+0x6658>
   186f0:	ldr	sl, [sp, #40]	; 0x28
   186f4:	cmp	r0, #2
   186f8:	blt	1bb94 <main@@Base+0x8910>
   186fc:	ldr	r2, [sp, #32]
   18700:	mov	r1, r9
   18704:	ldrb	r0, [r1, #17]!
   18708:	ldr	r2, [r2]
   1870c:	cmp	r2, #0
   18710:	beq	18740 <main@@Base+0x54bc>
   18714:	cmp	r0, #33	; 0x21
   18718:	bcc	18724 <main@@Base+0x54a0>
   1871c:	cmp	r0, #58	; 0x3a
   18720:	bne	1bb94 <main@@Base+0x8910>
   18724:	ldr	r0, [sp, #32]
   18728:	mov	r2, #0
   1872c:	str	r2, [r0]
   18730:	b	1874c <main@@Base+0x54c8>
   18734:	mov	r9, #0
   18738:	mov	r4, r5
   1873c:	b	187b8 <main@@Base+0x5534>
   18740:	cmp	r0, #34	; 0x22
   18744:	bne	1bb94 <main@@Base+0x8910>
   18748:	add	r1, r9, #18
   1874c:	sub	r0, r5, r1
   18750:	cmp	r0, #2
   18754:	blt	194d0 <main@@Base+0x624c>
   18758:	ldrb	r0, [r1]
   1875c:	cmp	r0, #32
   18760:	bls	194bc <main@@Base+0x6238>
   18764:	mov	r7, r1
   18768:	b	194e0 <main@@Base+0x625c>
   1876c:	mov	r6, #0
   18770:	mov	r9, #0
   18774:	mov	r4, r7
   18778:	b	187b8 <main@@Base+0x5534>
   1877c:	cmn	r9, #1
   18780:	bgt	187b0 <main@@Base+0x552c>
   18784:	mov	r0, r8
   18788:	mov	r1, r4
   1878c:	mov	r2, r5
   18790:	mov	r3, #7
   18794:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   18798:	mov	r4, r0
   1879c:	mov	r6, #0
   187a0:	mov	r9, #0
   187a4:	b	187b8 <main@@Base+0x5534>
   187a8:	rsbs	r6, r6, #0
   187ac:	rsc	r9, r9, #0
   187b0:	str	r6, [sp, #56]	; 0x38
   187b4:	str	r9, [sp, #60]	; 0x3c
   187b8:	ldr	sl, [sp, #40]	; 0x28
   187bc:	cmp	r7, r4
   187c0:	bne	187fc <main@@Base+0x5578>
   187c4:	movw	r3, #16680	; 0x4128
   187c8:	add	r0, sp, #56	; 0x38
   187cc:	mov	r1, r7
   187d0:	mov	r2, r5
   187d4:	movt	r3, #4
   187d8:	str	r0, [sp]
   187dc:	mov	r0, r8
   187e0:	bl	22958 <main@@Base+0xf6d4>
   187e4:	mov	r4, r0
   187e8:	cmp	r0, r7
   187ec:	cmpne	r4, r5
   187f0:	beq	1ce04 <main@@Base+0x9b80>
   187f4:	ldr	r6, [sp, #56]	; 0x38
   187f8:	ldr	r9, [sp, #60]	; 0x3c
   187fc:	orrs	r0, r6, r9
   18800:	bne	18810 <main@@Base+0x558c>
   18804:	ldrb	r0, [r8, #8]
   18808:	tst	r0, #2
   1880c:	beq	1bba8 <main@@Base+0x8924>
   18810:	ldr	r0, [r8]
   18814:	mov	r1, #18
   18818:	b	199b0 <main@@Base+0x672c>
   1881c:	bne	1882c <main@@Base+0x55a8>
   18820:	ldrb	r0, [r2, #2]!
   18824:	cmp	r0, #32
   18828:	bhi	1883c <main@@Base+0x55b8>
   1882c:	mov	r0, r8
   18830:	mov	r2, r5
   18834:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   18838:	mov	r2, r0
   1883c:	cmp	r4, r2
   18840:	beq	1bb94 <main@@Base+0x8910>
   18844:	ldr	r0, [sp, #48]	; 0x30
   18848:	mov	r1, #8
   1884c:	mov	r3, #0
   18850:	str	r1, [sp]
   18854:	mov	r1, r2
   18858:	mov	r2, r5
   1885c:	str	r0, [sp, #4]
   18860:	movw	r0, #16580	; 0x40c4
   18864:	movt	r0, #4
   18868:	str	r0, [sp, #8]
   1886c:	movw	r0, #61268	; 0xef54
   18870:	movt	r0, #1
   18874:	str	r0, [sp, #12]
   18878:	mov	r0, r8
   1887c:	bl	2f6e4 <flatcc_json_parser_union_type@@Base>
   18880:	b	1bba4 <main@@Base+0x8920>
   18884:	bne	18894 <main@@Base+0x5610>
   18888:	ldrb	r0, [r4, #2]!
   1888c:	cmp	r0, #32
   18890:	bhi	188a4 <main@@Base+0x5620>
   18894:	ldr	r0, [sp, #36]	; 0x24
   18898:	mov	r2, r5
   1889c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   188a0:	mov	r4, r0
   188a4:	cmp	r8, r4
   188a8:	beq	18908 <main@@Base+0x5684>
   188ac:	ldr	r8, [sp, #36]	; 0x24
   188b0:	mov	r0, #0
   188b4:	mov	r1, #0
   188b8:	str	r0, [sp, #52]	; 0x34
   188bc:	ldr	r0, [r8]
   188c0:	bl	2a328 <flatcc_builder_start_table@@Base>
   188c4:	cmp	r0, #0
   188c8:	bne	18940 <main@@Base+0x56bc>
   188cc:	cmp	r4, r5
   188d0:	beq	18918 <main@@Base+0x5694>
   188d4:	ldrb	r0, [r4]
   188d8:	cmp	r0, #123	; 0x7b
   188dc:	bne	18918 <main@@Base+0x5694>
   188e0:	add	r1, r4, #1
   188e4:	sub	r0, r5, r1
   188e8:	cmp	r0, #2
   188ec:	blt	1b360 <main@@Base+0x80dc>
   188f0:	ldrb	r0, [r1]
   188f4:	cmp	r0, #32
   188f8:	bls	1b34c <main@@Base+0x80c8>
   188fc:	ldr	r5, [sp, #44]	; 0x2c
   18900:	mov	r4, r1
   18904:	b	1b370 <main@@Base+0x80ec>
   18908:	ldr	r0, [sp, #36]	; 0x24
   1890c:	mov	r1, r8
   18910:	mov	r8, r0
   18914:	b	1bb9c <main@@Base+0x8918>
   18918:	mov	r0, r8
   1891c:	mov	r1, r4
   18920:	mov	r2, r5
   18924:	mov	r3, #21
   18928:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1892c:	mov	r4, r0
   18930:	ldr	r0, [r8, #24]
   18934:	cmp	r0, #0
   18938:	beq	18970 <main@@Base+0x56ec>
   1893c:	ldr	sl, [sp, #40]	; 0x28
   18940:	mov	r0, r8
   18944:	mov	r1, r4
   18948:	mov	r2, r5
   1894c:	mov	r3, #33	; 0x21
   18950:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   18954:	mov	r4, r0
   18958:	ldr	r0, [sp, #52]	; 0x34
   1895c:	cmp	r0, #0
   18960:	beq	13340 <main@@Base+0xbc>
   18964:	ldr	r0, [r8]
   18968:	mov	r1, #34	; 0x22
   1896c:	b	15a40 <main@@Base+0x27bc>
   18970:	ldr	r0, [r8]
   18974:	bl	2ac88 <flatcc_builder_end_table@@Base>
   18978:	ldr	sl, [sp, #40]	; 0x28
   1897c:	cmp	r0, #0
   18980:	str	r0, [sp, #52]	; 0x34
   18984:	bne	18964 <main@@Base+0x56e0>
   18988:	b	18940 <main@@Base+0x56bc>
   1898c:	bne	189a0 <main@@Base+0x571c>
   18990:	mov	r9, r1
   18994:	ldrb	r0, [r9, #1]!
   18998:	cmp	r0, #32
   1899c:	bhi	189b0 <main@@Base+0x572c>
   189a0:	mov	r0, r8
   189a4:	mov	r2, r5
   189a8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   189ac:	mov	r9, r0
   189b0:	cmp	r9, r5
   189b4:	beq	189f4 <main@@Base+0x5770>
   189b8:	ldrb	r0, [r9]
   189bc:	cmp	r0, #58	; 0x3a
   189c0:	bne	189f4 <main@@Base+0x5770>
   189c4:	add	r1, r9, #1
   189c8:	sub	r0, r5, r1
   189cc:	cmp	r0, #2
   189d0:	blt	1b0f4 <main@@Base+0x7e70>
   189d4:	ldrb	r0, [r1]
   189d8:	cmp	r0, #32
   189dc:	bls	1b0d8 <main@@Base+0x7e54>
   189e0:	ldr	r5, [sp, #44]	; 0x2c
   189e4:	ldr	r8, [sp, #36]	; 0x24
   189e8:	ldr	sl, [sp, #40]	; 0x28
   189ec:	mov	r9, r1
   189f0:	b	1b104 <main@@Base+0x7e80>
   189f4:	mov	r0, r8
   189f8:	mov	r1, r9
   189fc:	mov	r2, r5
   18a00:	mov	r3, #4
   18a04:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   18a08:	b	1b100 <main@@Base+0x7e7c>
   18a0c:	bne	18a1c <main@@Base+0x5798>
   18a10:	ldrb	r0, [r4, #2]!
   18a14:	cmp	r0, #32
   18a18:	bhi	18a2c <main@@Base+0x57a8>
   18a1c:	mov	r0, r8
   18a20:	mov	r2, r5
   18a24:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   18a28:	mov	r4, r0
   18a2c:	cmp	r4, r5
   18a30:	mov	r2, r5
   18a34:	beq	18a7c <main@@Base+0x57f8>
   18a38:	ldrb	r0, [r4]
   18a3c:	cmp	r0, #93	; 0x5d
   18a40:	bne	18a78 <main@@Base+0x57f4>
   18a44:	add	r1, r4, #1
   18a48:	sub	r0, r5, r1
   18a4c:	cmp	r0, #2
   18a50:	blt	1c8e4 <main@@Base+0x9660>
   18a54:	ldrb	r0, [r1]
   18a58:	cmp	r0, #32
   18a5c:	bhi	1a6f4 <main@@Base+0x7470>
   18a60:	ldr	r5, [sp, #44]	; 0x2c
   18a64:	ldr	r8, [sp, #36]	; 0x24
   18a68:	ldr	sl, [sp, #40]	; 0x28
   18a6c:	bne	1c8e4 <main@@Base+0x9660>
   18a70:	ldrb	r0, [r4, #2]!
   18a74:	b	1c8dc <main@@Base+0x9658>
   18a78:	mov	r2, r4
   18a7c:	mov	r1, r2
   18a80:	mov	r0, r8
   18a84:	mov	r2, r5
   18a88:	add	r3, sp, #52	; 0x34
   18a8c:	bl	2f2d8 <flatcc_json_parser_build_string@@Base>
   18a90:	mov	r4, r0
   18a94:	ldr	r0, [sp, #52]	; 0x34
   18a98:	cmp	r0, #0
   18a9c:	beq	13340 <main@@Base+0xbc>
   18aa0:	ldr	r0, [r8]
   18aa4:	mov	r1, #1
   18aa8:	bl	299bc <flatcc_builder_extend_offset_vector@@Base>
   18aac:	cmp	r0, #0
   18ab0:	beq	13340 <main@@Base+0xbc>
   18ab4:	ldr	r1, [sp, #52]	; 0x34
   18ab8:	str	r1, [r0]
   18abc:	sub	r0, r5, r4
   18ac0:	cmp	r0, #2
   18ac4:	blt	18af0 <main@@Base+0x586c>
   18ac8:	ldrb	r0, [r4]
   18acc:	cmp	r0, #32
   18ad0:	bls	18adc <main@@Base+0x5858>
   18ad4:	mov	r2, r4
   18ad8:	b	18b04 <main@@Base+0x5880>
   18adc:	bne	18af0 <main@@Base+0x586c>
   18ae0:	mov	r2, r4
   18ae4:	ldrb	r0, [r2, #1]!
   18ae8:	cmp	r0, #32
   18aec:	bhi	18b04 <main@@Base+0x5880>
   18af0:	mov	r0, r8
   18af4:	mov	r1, r4
   18af8:	mov	r2, r5
   18afc:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   18b00:	mov	r2, r0
   18b04:	cmp	r2, r5
   18b08:	beq	1a674 <main@@Base+0x73f0>
   18b0c:	ldrb	r0, [r2]
   18b10:	cmp	r0, #44	; 0x2c
   18b14:	bne	1a6c4 <main@@Base+0x7440>
   18b18:	add	r1, r2, #1
   18b1c:	sub	r0, r5, r1
   18b20:	cmp	r0, #2
   18b24:	blt	18b4c <main@@Base+0x58c8>
   18b28:	ldrb	r0, [r1]
   18b2c:	cmp	r0, #32
   18b30:	bls	18b3c <main@@Base+0x58b8>
   18b34:	mov	r2, r1
   18b38:	b	18b5c <main@@Base+0x58d8>
   18b3c:	bne	18b4c <main@@Base+0x58c8>
   18b40:	ldrb	r0, [r2, #2]!
   18b44:	cmp	r0, #32
   18b48:	bhi	18b5c <main@@Base+0x58d8>
   18b4c:	mov	r0, r8
   18b50:	mov	r2, r5
   18b54:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   18b58:	mov	r2, r0
   18b5c:	cmp	r2, r5
   18b60:	beq	1a708 <main@@Base+0x7484>
   18b64:	ldrb	r0, [r2]
   18b68:	cmp	r0, #93	; 0x5d
   18b6c:	bne	18a7c <main@@Base+0x57f8>
   18b70:	b	1a6d4 <main@@Base+0x7450>
   18b74:	bne	18b84 <main@@Base+0x5900>
   18b78:	ldrb	r0, [r7, #2]!
   18b7c:	cmp	r0, #32
   18b80:	bhi	18b94 <main@@Base+0x5910>
   18b84:	mov	r0, r8
   18b88:	mov	r2, r5
   18b8c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   18b90:	mov	r7, r0
   18b94:	cmp	r7, r5
   18b98:	mov	r4, r5
   18b9c:	beq	18be4 <main@@Base+0x5960>
   18ba0:	ldrb	r0, [r7]
   18ba4:	cmp	r0, #93	; 0x5d
   18ba8:	bne	18be0 <main@@Base+0x595c>
   18bac:	add	r1, r7, #1
   18bb0:	sub	r0, r5, r1
   18bb4:	cmp	r0, #2
   18bb8:	blt	1c944 <main@@Base+0x96c0>
   18bbc:	ldrb	r0, [r1]
   18bc0:	cmp	r0, #32
   18bc4:	bhi	1a22c <main@@Base+0x6fa8>
   18bc8:	ldr	r5, [sp, #44]	; 0x2c
   18bcc:	ldr	r8, [sp, #36]	; 0x24
   18bd0:	ldr	sl, [sp, #40]	; 0x28
   18bd4:	bne	1c944 <main@@Base+0x96c0>
   18bd8:	ldrb	r0, [r7, #2]!
   18bdc:	b	1c93c <main@@Base+0x96b8>
   18be0:	mov	r4, r7
   18be4:	ldr	r0, [r8]
   18be8:	mov	r1, #1
   18bec:	bl	29764 <flatcc_builder_extend_vector@@Base>
   18bf0:	mov	r9, r0
   18bf4:	cmp	r0, #0
   18bf8:	beq	13340 <main@@Base+0xbc>
   18bfc:	cmp	r4, r5
   18c00:	beq	18c34 <main@@Base+0x59b0>
   18c04:	ldrb	r0, [r4]
   18c08:	cmp	r0, #123	; 0x7b
   18c0c:	bne	18c34 <main@@Base+0x59b0>
   18c10:	add	r1, r4, #1
   18c14:	sub	r0, r5, r1
   18c18:	cmp	r0, #2
   18c1c:	blt	18c60 <main@@Base+0x59dc>
   18c20:	ldrb	r0, [r1]
   18c24:	cmp	r0, #32
   18c28:	bls	18c50 <main@@Base+0x59cc>
   18c2c:	mov	r4, r1
   18c30:	b	18c70 <main@@Base+0x59ec>
   18c34:	mov	r0, r8
   18c38:	mov	r1, r4
   18c3c:	mov	r2, r5
   18c40:	mov	r3, #21
   18c44:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   18c48:	mov	r4, r0
   18c4c:	b	193d0 <main@@Base+0x614c>
   18c50:	bne	18c60 <main@@Base+0x59dc>
   18c54:	ldrb	r0, [r4, #2]!
   18c58:	cmp	r0, #32
   18c5c:	bhi	18c70 <main@@Base+0x59ec>
   18c60:	mov	r0, r8
   18c64:	mov	r2, r5
   18c68:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   18c6c:	mov	r4, r0
   18c70:	cmp	r4, r5
   18c74:	mov	r2, r5
   18c78:	beq	18cc0 <main@@Base+0x5a3c>
   18c7c:	ldrb	r0, [r4]
   18c80:	cmp	r0, #125	; 0x7d
   18c84:	bne	18cbc <main@@Base+0x5a38>
   18c88:	add	r1, r4, #1
   18c8c:	sub	r0, r5, r1
   18c90:	cmp	r0, #2
   18c94:	blt	194ac <main@@Base+0x6228>
   18c98:	ldrb	r0, [r1]
   18c9c:	cmp	r0, #32
   18ca0:	bhi	19390 <main@@Base+0x610c>
   18ca4:	ldr	r5, [sp, #44]	; 0x2c
   18ca8:	ldr	r8, [sp, #36]	; 0x24
   18cac:	ldr	sl, [sp, #40]	; 0x28
   18cb0:	bne	194ac <main@@Base+0x6228>
   18cb4:	ldrb	r0, [r4, #2]!
   18cb8:	b	194a4 <main@@Base+0x6220>
   18cbc:	mov	r2, r4
   18cc0:	cmp	r2, r5
   18cc4:	mov	sl, r5
   18cc8:	beq	18d1c <main@@Base+0x5a98>
   18ccc:	ldrb	r0, [r2]
   18cd0:	cmp	r0, #46	; 0x2e
   18cd4:	beq	18cf0 <main@@Base+0x5a6c>
   18cd8:	cmp	r0, #34	; 0x22
   18cdc:	bne	18d0c <main@@Base+0x5a88>
   18ce0:	ldr	r0, [sp, #32]
   18ce4:	mov	r1, #0
   18ce8:	add	sl, r2, #1
   18cec:	b	18d18 <main@@Base+0x5a94>
   18cf0:	mov	r1, r2
   18cf4:	mov	r0, r8
   18cf8:	mov	r2, r5
   18cfc:	mov	r3, #5
   18d00:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   18d04:	mov	sl, r0
   18d08:	b	18d1c <main@@Base+0x5a98>
   18d0c:	ldr	r0, [sp, #32]
   18d10:	mov	r1, #1
   18d14:	mov	sl, r2
   18d18:	str	r1, [r0]
   18d1c:	sub	lr, r5, sl
   18d20:	mov	r0, #8
   18d24:	cmp	lr, #8
   18d28:	movcc	r0, lr
   18d2c:	sub	r7, r0, #1
   18d30:	cmp	r7, #7
   18d34:	bhi	191dc <main@@Base+0x5f58>
   18d38:	add	r4, pc, #32
   18d3c:	mov	r1, #0
   18d40:	mov	ip, #0
   18d44:	mov	r8, #0
   18d48:	mov	r6, #0
   18d4c:	mov	r3, #0
   18d50:	mov	r5, #0
   18d54:	mov	r2, #0
   18d58:	mov	r0, #0
   18d5c:	ldr	pc, [r4, r7, lsl #2]
   18d60:	andeq	r8, r1, r4, asr #27
   18d64:			; <UNDEFINED> instruction: 0x00018dbc
   18d68:			; <UNDEFINED> instruction: 0x00018db4
   18d6c:	andeq	r8, r1, ip, lsr #27
   18d70:	andeq	r8, r1, r0, lsr #27
   18d74:	muleq	r1, r4, sp
   18d78:	andeq	r8, r1, r4, lsl #27
   18d7c:	andeq	r8, r1, r0, lsl #27
   18d80:	ldrb	ip, [sl, #7]
   18d84:	ldrb	r0, [sl, #6]
   18d88:	mov	r8, r1
   18d8c:	orr	r0, ip, r0, lsl #8
   18d90:	mov	r1, r0
   18d94:	ldrb	r0, [sl, #5]
   18d98:	mov	r6, r8
   18d9c:	orr	r1, r1, r0, lsl #16
   18da0:	ldrb	r0, [sl, #4]
   18da4:	mov	r3, r6
   18da8:	orr	r1, r1, r0, lsl #24
   18dac:	ldrb	r0, [sl, #3]
   18db0:	orr	r5, r0, r3
   18db4:	ldrb	r0, [sl, #2]
   18db8:	orr	r2, r5, r0, lsl #8
   18dbc:	ldrb	r0, [sl, #1]
   18dc0:	orr	r0, r2, r0, lsl #16
   18dc4:	ldrb	r2, [sl]
   18dc8:	movw	r3, #0
   18dcc:	movt	r3, #26980	; 0x6964
   18dd0:	orr	r0, r0, r2, lsl #24
   18dd4:	mov	r2, r0
   18dd8:	bfc	r2, #0, #16
   18ddc:	teq	r2, r3
   18de0:	bne	18e34 <main@@Base+0x5bb0>
   18de4:	ldr	r5, [sp, #44]	; 0x2c
   18de8:	ldr	r8, [sp, #36]	; 0x24
   18dec:	cmp	lr, #3
   18df0:	mov	r7, sl
   18df4:	blt	19050 <main@@Base+0x5dcc>
   18df8:	ldr	r2, [sp, #32]
   18dfc:	mov	r1, sl
   18e00:	ldrb	r0, [r1, #2]!
   18e04:	ldr	r2, [r2]
   18e08:	cmp	r2, #0
   18e0c:	beq	18ea4 <main@@Base+0x5c20>
   18e10:	cmp	r0, #33	; 0x21
   18e14:	bcc	18e24 <main@@Base+0x5ba0>
   18e18:	cmp	r0, #58	; 0x3a
   18e1c:	mov	r7, sl
   18e20:	bne	19050 <main@@Base+0x5dcc>
   18e24:	ldr	r0, [sp, #32]
   18e28:	mov	r2, #0
   18e2c:	str	r2, [r0]
   18e30:	b	18eb4 <main@@Base+0x5c30>
   18e34:	movw	r2, #25445	; 0x6365
   18e38:	ldr	r5, [sp, #44]	; 0x2c
   18e3c:	ldr	r8, [sp, #36]	; 0x24
   18e40:	movt	r2, #24942	; 0x616e
   18e44:	eor	r1, r1, r2
   18e48:	movw	r2, #29556	; 0x7374
   18e4c:	movt	r2, #25705	; 0x6469
   18e50:	eor	r0, r0, r2
   18e54:	orrs	r0, r1, r0
   18e58:	bne	191dc <main@@Base+0x5f58>
   18e5c:	cmp	lr, #9
   18e60:	mov	r7, sl
   18e64:	blt	19174 <main@@Base+0x5ef0>
   18e68:	ldr	r2, [sp, #32]
   18e6c:	mov	r1, sl
   18e70:	ldrb	r0, [r1, #8]!
   18e74:	ldr	r2, [r2]
   18e78:	cmp	r2, #0
   18e7c:	beq	18edc <main@@Base+0x5c58>
   18e80:	cmp	r0, #33	; 0x21
   18e84:	bcc	18e94 <main@@Base+0x5c10>
   18e88:	cmp	r0, #58	; 0x3a
   18e8c:	mov	r7, sl
   18e90:	bne	19174 <main@@Base+0x5ef0>
   18e94:	ldr	r0, [sp, #32]
   18e98:	mov	r2, #0
   18e9c:	str	r2, [r0]
   18ea0:	b	18eec <main@@Base+0x5c68>
   18ea4:	cmp	r0, #34	; 0x22
   18ea8:	mov	r7, sl
   18eac:	bne	19050 <main@@Base+0x5dcc>
   18eb0:	add	r1, sl, #3
   18eb4:	sub	r0, r5, r1
   18eb8:	cmp	r0, #2
   18ebc:	blt	18f30 <main@@Base+0x5cac>
   18ec0:	ldrb	r0, [r1]
   18ec4:	cmp	r0, #32
   18ec8:	bls	18f14 <main@@Base+0x5c90>
   18ecc:	ldr	r5, [sp, #44]	; 0x2c
   18ed0:	ldr	r8, [sp, #36]	; 0x24
   18ed4:	mov	r7, r1
   18ed8:	b	18f40 <main@@Base+0x5cbc>
   18edc:	cmp	r0, #34	; 0x22
   18ee0:	mov	r7, sl
   18ee4:	bne	19174 <main@@Base+0x5ef0>
   18ee8:	add	r1, sl, #9
   18eec:	ldr	r4, [sp, #44]	; 0x2c
   18ef0:	sub	r0, r4, r1
   18ef4:	cmp	r0, #2
   18ef8:	blt	18fb0 <main@@Base+0x5d2c>
   18efc:	ldrb	r0, [r1]
   18f00:	cmp	r0, #32
   18f04:	bls	18f98 <main@@Base+0x5d14>
   18f08:	ldr	r4, [sp, #44]	; 0x2c
   18f0c:	mov	r7, r1
   18f10:	b	18fc0 <main@@Base+0x5d3c>
   18f14:	ldr	r5, [sp, #44]	; 0x2c
   18f18:	ldr	r8, [sp, #36]	; 0x24
   18f1c:	bne	18f30 <main@@Base+0x5cac>
   18f20:	mov	r7, r1
   18f24:	ldrb	r0, [r7, #1]!
   18f28:	cmp	r0, #32
   18f2c:	bhi	18f40 <main@@Base+0x5cbc>
   18f30:	mov	r0, r8
   18f34:	mov	r2, r5
   18f38:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   18f3c:	mov	r7, r0
   18f40:	cmp	r7, r5
   18f44:	beq	18f80 <main@@Base+0x5cfc>
   18f48:	ldrb	r0, [r7]
   18f4c:	cmp	r0, #58	; 0x3a
   18f50:	bne	18f80 <main@@Base+0x5cfc>
   18f54:	add	r1, r7, #1
   18f58:	sub	r0, r5, r1
   18f5c:	cmp	r0, #2
   18f60:	blt	19040 <main@@Base+0x5dbc>
   18f64:	ldrb	r0, [r1]
   18f68:	cmp	r0, #32
   18f6c:	bls	19028 <main@@Base+0x5da4>
   18f70:	ldr	r5, [sp, #44]	; 0x2c
   18f74:	ldr	r8, [sp, #36]	; 0x24
   18f78:	mov	r7, r1
   18f7c:	b	19050 <main@@Base+0x5dcc>
   18f80:	mov	r0, r8
   18f84:	mov	r1, r7
   18f88:	mov	r2, r5
   18f8c:	mov	r3, #4
   18f90:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   18f94:	b	1904c <main@@Base+0x5dc8>
   18f98:	ldr	r4, [sp, #44]	; 0x2c
   18f9c:	bne	18fb0 <main@@Base+0x5d2c>
   18fa0:	mov	r7, r1
   18fa4:	ldrb	r0, [r7, #1]!
   18fa8:	cmp	r0, #32
   18fac:	bhi	18fc0 <main@@Base+0x5d3c>
   18fb0:	ldr	r0, [sp, #36]	; 0x24
   18fb4:	mov	r2, r4
   18fb8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   18fbc:	mov	r7, r0
   18fc0:	cmp	r7, r4
   18fc4:	beq	19008 <main@@Base+0x5d84>
   18fc8:	ldrb	r0, [r7]
   18fcc:	cmp	r0, #58	; 0x3a
   18fd0:	bne	19008 <main@@Base+0x5d84>
   18fd4:	ldr	r5, [sp, #44]	; 0x2c
   18fd8:	ldr	r8, [sp, #36]	; 0x24
   18fdc:	add	r1, r7, #1
   18fe0:	sub	r0, r5, r1
   18fe4:	cmp	r0, #2
   18fe8:	blt	19164 <main@@Base+0x5ee0>
   18fec:	ldrb	r0, [r1]
   18ff0:	cmp	r0, #32
   18ff4:	bls	1914c <main@@Base+0x5ec8>
   18ff8:	ldr	r5, [sp, #44]	; 0x2c
   18ffc:	ldr	r8, [sp, #36]	; 0x24
   19000:	mov	r7, r1
   19004:	b	19174 <main@@Base+0x5ef0>
   19008:	ldr	r8, [sp, #36]	; 0x24
   1900c:	ldr	r5, [sp, #44]	; 0x2c
   19010:	mov	r1, r7
   19014:	mov	r3, #4
   19018:	mov	r0, r8
   1901c:	mov	r2, r5
   19020:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   19024:	b	19170 <main@@Base+0x5eec>
   19028:	ldr	r5, [sp, #44]	; 0x2c
   1902c:	ldr	r8, [sp, #36]	; 0x24
   19030:	bne	19040 <main@@Base+0x5dbc>
   19034:	ldrb	r0, [r7, #2]!
   19038:	cmp	r0, #32
   1903c:	bhi	19050 <main@@Base+0x5dcc>
   19040:	mov	r0, r8
   19044:	mov	r2, r5
   19048:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1904c:	mov	r7, r0
   19050:	cmp	sl, r7
   19054:	beq	191dc <main@@Base+0x5f58>
   19058:	mov	r4, #0
   1905c:	cmp	r7, r5
   19060:	str	r4, [fp, #-52]	; 0xffffffcc
   19064:	str	r4, [fp, #-56]	; 0xffffffc8
   19068:	str	r4, [fp, #-60]	; 0xffffffc4
   1906c:	str	r4, [sp, #56]	; 0x38
   19070:	beq	190b8 <main@@Base+0x5e34>
   19074:	sub	r0, fp, #56	; 0x38
   19078:	mov	r1, r7
   1907c:	mov	r2, r5
   19080:	add	r3, sp, #56	; 0x38
   19084:	str	r0, [sp]
   19088:	mov	r0, r8
   1908c:	bl	2edac <flatcc_json_parser_integer@@Base>
   19090:	cmp	r0, r7
   19094:	beq	190c0 <main@@Base+0x5e3c>
   19098:	mov	r1, r0
   1909c:	ldr	r0, [sp, #56]	; 0x38
   190a0:	cmp	r0, #0
   190a4:	beq	190c8 <main@@Base+0x5e44>
   190a8:	mov	r0, r8
   190ac:	mov	r2, r5
   190b0:	mov	r3, #8
   190b4:	b	190e8 <main@@Base+0x5e64>
   190b8:	mov	r1, r5
   190bc:	b	190f0 <main@@Base+0x5e6c>
   190c0:	mov	r1, r7
   190c4:	b	190f0 <main@@Base+0x5e6c>
   190c8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   190cc:	cmp	r0, #0
   190d0:	beq	19138 <main@@Base+0x5eb4>
   190d4:	ldr	r8, [sp, #36]	; 0x24
   190d8:	ldr	r5, [sp, #44]	; 0x2c
   190dc:	mov	r3, #7
   190e0:	mov	r0, r8
   190e4:	mov	r2, r5
   190e8:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   190ec:	mov	r1, r0
   190f0:	cmp	r7, r1
   190f4:	bne	19130 <main@@Base+0x5eac>
   190f8:	movw	r3, #17184	; 0x4320
   190fc:	sub	r0, fp, #60	; 0x3c
   19100:	mov	r1, r7
   19104:	mov	r2, r5
   19108:	movt	r3, #4
   1910c:	str	r0, [sp]
   19110:	mov	r0, r8
   19114:	bl	22ba4 <main@@Base+0xf920>
   19118:	mov	r1, r0
   1911c:	cmp	r0, r7
   19120:	cmpne	r1, r5
   19124:	beq	19340 <main@@Base+0x60bc>
   19128:	ldr	r4, [fp, #-60]	; 0xffffffc4
   1912c:	ldr	r8, [sp, #36]	; 0x24
   19130:	str	r4, [r9]
   19134:	b	191f0 <main@@Base+0x5f6c>
   19138:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1913c:	ldr	r5, [sp, #44]	; 0x2c
   19140:	ldr	r8, [sp, #36]	; 0x24
   19144:	str	r4, [fp, #-60]	; 0xffffffc4
   19148:	b	190f0 <main@@Base+0x5e6c>
   1914c:	ldr	r5, [sp, #44]	; 0x2c
   19150:	ldr	r8, [sp, #36]	; 0x24
   19154:	bne	19164 <main@@Base+0x5ee0>
   19158:	ldrb	r0, [r7, #2]!
   1915c:	cmp	r0, #32
   19160:	bhi	19174 <main@@Base+0x5ef0>
   19164:	mov	r0, r8
   19168:	mov	r2, r5
   1916c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   19170:	mov	r7, r0
   19174:	cmp	sl, r7
   19178:	beq	191dc <main@@Base+0x5f58>
   1917c:	mov	r4, #0
   19180:	cmp	r7, r5
   19184:	str	r4, [fp, #-52]	; 0xffffffcc
   19188:	str	r4, [fp, #-56]	; 0xffffffc8
   1918c:	str	r4, [fp, #-60]	; 0xffffffc4
   19190:	str	r4, [sp, #56]	; 0x38
   19194:	beq	192a4 <main@@Base+0x6020>
   19198:	sub	r0, fp, #56	; 0x38
   1919c:	mov	r1, r7
   191a0:	mov	r2, r5
   191a4:	add	r3, sp, #56	; 0x38
   191a8:	str	r0, [sp]
   191ac:	mov	r0, r8
   191b0:	bl	2edac <flatcc_json_parser_integer@@Base>
   191b4:	cmp	r0, r7
   191b8:	beq	192ac <main@@Base+0x6028>
   191bc:	mov	r1, r0
   191c0:	ldr	r0, [sp, #56]	; 0x38
   191c4:	cmp	r0, #0
   191c8:	beq	192b4 <main@@Base+0x6030>
   191cc:	ldr	r8, [sp, #36]	; 0x24
   191d0:	ldr	r5, [sp, #44]	; 0x2c
   191d4:	mov	r3, #8
   191d8:	b	192cc <main@@Base+0x6048>
   191dc:	mov	r0, r8
   191e0:	mov	r1, sl
   191e4:	mov	r2, r5
   191e8:	bl	2d5e0 <flatcc_json_parser_unmatched_symbol@@Base>
   191ec:	mov	r1, r0
   191f0:	sub	r0, r5, r1
   191f4:	cmp	r0, #2
   191f8:	blt	19224 <main@@Base+0x5fa0>
   191fc:	ldrb	r0, [r1]
   19200:	cmp	r0, #32
   19204:	bls	19210 <main@@Base+0x5f8c>
   19208:	mov	r2, r1
   1920c:	b	19234 <main@@Base+0x5fb0>
   19210:	bne	19224 <main@@Base+0x5fa0>
   19214:	mov	r2, r1
   19218:	ldrb	r0, [r2, #1]!
   1921c:	cmp	r0, #32
   19220:	bhi	19234 <main@@Base+0x5fb0>
   19224:	mov	r0, r8
   19228:	mov	r2, r5
   1922c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   19230:	mov	r2, r0
   19234:	cmp	r2, r5
   19238:	beq	19358 <main@@Base+0x60d4>
   1923c:	ldrb	r0, [r2]
   19240:	cmp	r0, #44	; 0x2c
   19244:	bne	19360 <main@@Base+0x60dc>
   19248:	add	r1, r2, #1
   1924c:	sub	r0, r5, r1
   19250:	cmp	r0, #2
   19254:	blt	1927c <main@@Base+0x5ff8>
   19258:	ldrb	r0, [r1]
   1925c:	cmp	r0, #32
   19260:	bls	1926c <main@@Base+0x5fe8>
   19264:	mov	r2, r1
   19268:	b	1928c <main@@Base+0x6008>
   1926c:	bne	1927c <main@@Base+0x5ff8>
   19270:	ldrb	r0, [r2, #2]!
   19274:	cmp	r0, #32
   19278:	bhi	1928c <main@@Base+0x6008>
   1927c:	mov	r0, r8
   19280:	mov	r2, r5
   19284:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   19288:	mov	r2, r0
   1928c:	cmp	r2, r5
   19290:	beq	193a0 <main@@Base+0x611c>
   19294:	ldrb	r0, [r2]
   19298:	cmp	r0, #125	; 0x7d
   1929c:	bne	18cc0 <main@@Base+0x5a3c>
   192a0:	b	19370 <main@@Base+0x60ec>
   192a4:	mov	r1, r5
   192a8:	b	192dc <main@@Base+0x6058>
   192ac:	mov	r1, r7
   192b0:	b	192dc <main@@Base+0x6058>
   192b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   192b8:	cmp	r0, #0
   192bc:	beq	1932c <main@@Base+0x60a8>
   192c0:	ldr	r8, [sp, #36]	; 0x24
   192c4:	ldr	r5, [sp, #44]	; 0x2c
   192c8:	mov	r3, #7
   192cc:	mov	r0, r8
   192d0:	mov	r2, r5
   192d4:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   192d8:	mov	r1, r0
   192dc:	cmp	r7, r1
   192e0:	bne	19324 <main@@Base+0x60a0>
   192e4:	movw	r3, #17196	; 0x432c
   192e8:	sub	r0, fp, #60	; 0x3c
   192ec:	mov	r1, r7
   192f0:	mov	r2, r5
   192f4:	movt	r3, #4
   192f8:	str	r0, [sp]
   192fc:	mov	r0, r8
   19300:	bl	22ba4 <main@@Base+0xf920>
   19304:	cmp	r0, r7
   19308:	mov	r1, r0
   1930c:	ldrne	r0, [sp, #44]	; 0x2c
   19310:	cmpne	r1, r0
   19314:	beq	19340 <main@@Base+0x60bc>
   19318:	ldr	r4, [fp, #-60]	; 0xffffffc4
   1931c:	ldr	r5, [sp, #44]	; 0x2c
   19320:	ldr	r8, [sp, #36]	; 0x24
   19324:	str	r4, [r9, #4]
   19328:	b	191f0 <main@@Base+0x5f6c>
   1932c:	ldr	r4, [fp, #-56]	; 0xffffffc8
   19330:	ldr	r5, [sp, #44]	; 0x2c
   19334:	ldr	r8, [sp, #36]	; 0x24
   19338:	str	r4, [fp, #-60]	; 0xffffffc4
   1933c:	b	192dc <main@@Base+0x6058>
   19340:	ldr	r8, [sp, #36]	; 0x24
   19344:	ldr	r5, [sp, #44]	; 0x2c
   19348:	mov	r3, #33	; 0x21
   1934c:	mov	r0, r8
   19350:	mov	r2, r5
   19354:	b	193c4 <main@@Base+0x6140>
   19358:	mov	r4, r5
   1935c:	b	193cc <main@@Base+0x6148>
   19360:	cmp	r0, #125	; 0x7d
   19364:	bne	193ac <main@@Base+0x6128>
   19368:	ldr	r5, [sp, #44]	; 0x2c
   1936c:	ldr	r8, [sp, #36]	; 0x24
   19370:	add	r1, r2, #1
   19374:	sub	r0, r5, r1
   19378:	cmp	r0, #2
   1937c:	ldr	sl, [sp, #40]	; 0x28
   19380:	blt	194ac <main@@Base+0x6228>
   19384:	ldrb	r0, [r1]
   19388:	cmp	r0, #32
   1938c:	bls	1948c <main@@Base+0x6208>
   19390:	ldr	r5, [sp, #44]	; 0x2c
   19394:	ldr	r8, [sp, #36]	; 0x24
   19398:	mov	r4, r1
   1939c:	b	193cc <main@@Base+0x6148>
   193a0:	mov	r0, r8
   193a4:	mov	r1, r5
   193a8:	b	193bc <main@@Base+0x6138>
   193ac:	ldr	r8, [sp, #36]	; 0x24
   193b0:	ldr	r5, [sp, #44]	; 0x2c
   193b4:	mov	r1, r2
   193b8:	mov	r0, r8
   193bc:	mov	r2, r5
   193c0:	mov	r3, #10
   193c4:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   193c8:	mov	r4, r0
   193cc:	ldr	sl, [sp, #40]	; 0x28
   193d0:	sub	r0, r5, r4
   193d4:	cmp	r0, #2
   193d8:	blt	19404 <main@@Base+0x6180>
   193dc:	ldrb	r0, [r4]
   193e0:	cmp	r0, #32
   193e4:	bls	193f0 <main@@Base+0x616c>
   193e8:	mov	r7, r4
   193ec:	b	19418 <main@@Base+0x6194>
   193f0:	bne	19404 <main@@Base+0x6180>
   193f4:	mov	r7, r4
   193f8:	ldrb	r0, [r7, #1]!
   193fc:	cmp	r0, #32
   19400:	bhi	19418 <main@@Base+0x6194>
   19404:	mov	r0, r8
   19408:	mov	r1, r4
   1940c:	mov	r2, r5
   19410:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   19414:	mov	r7, r0
   19418:	cmp	r7, r5
   1941c:	beq	1a040 <main@@Base+0x6dbc>
   19420:	ldrb	r0, [r7]
   19424:	cmp	r0, #44	; 0x2c
   19428:	bne	1a1cc <main@@Base+0x6f48>
   1942c:	add	r1, r7, #1
   19430:	sub	r0, r5, r1
   19434:	cmp	r0, #2
   19438:	blt	19464 <main@@Base+0x61e0>
   1943c:	ldrb	r0, [r1]
   19440:	cmp	r0, #32
   19444:	bls	19450 <main@@Base+0x61cc>
   19448:	mov	r4, r1
   1944c:	b	19474 <main@@Base+0x61f0>
   19450:	bne	19464 <main@@Base+0x61e0>
   19454:	ldrb	r0, [r7, #2]!
   19458:	mov	r4, r7
   1945c:	cmp	r0, #32
   19460:	bhi	19474 <main@@Base+0x61f0>
   19464:	mov	r0, r8
   19468:	mov	r2, r5
   1946c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   19470:	mov	r4, r0
   19474:	cmp	r4, r5
   19478:	beq	1a1fc <main@@Base+0x6f78>
   1947c:	ldrb	r0, [r4]
   19480:	cmp	r0, #93	; 0x5d
   19484:	bne	18be4 <main@@Base+0x5960>
   19488:	b	1a210 <main@@Base+0x6f8c>
   1948c:	ldr	r5, [sp, #44]	; 0x2c
   19490:	ldr	r8, [sp, #36]	; 0x24
   19494:	ldr	sl, [sp, #40]	; 0x28
   19498:	bne	194ac <main@@Base+0x6228>
   1949c:	ldrb	r0, [r2, #2]!
   194a0:	mov	r4, r2
   194a4:	cmp	r0, #32
   194a8:	bhi	193d0 <main@@Base+0x614c>
   194ac:	mov	r0, r8
   194b0:	mov	r2, r5
   194b4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   194b8:	b	18c48 <main@@Base+0x59c4>
   194bc:	bne	194d0 <main@@Base+0x624c>
   194c0:	mov	r7, r1
   194c4:	ldrb	r0, [r7, #1]!
   194c8:	cmp	r0, #32
   194cc:	bhi	194e0 <main@@Base+0x625c>
   194d0:	mov	r0, r8
   194d4:	mov	r2, r5
   194d8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   194dc:	mov	r7, r0
   194e0:	cmp	r7, r5
   194e4:	beq	19524 <main@@Base+0x62a0>
   194e8:	ldrb	r0, [r7]
   194ec:	cmp	r0, #58	; 0x3a
   194f0:	bne	19524 <main@@Base+0x62a0>
   194f4:	add	r1, r7, #1
   194f8:	sub	r0, r5, r1
   194fc:	cmp	r0, #2
   19500:	blt	1b274 <main@@Base+0x7ff0>
   19504:	ldrb	r0, [r1]
   19508:	cmp	r0, #32
   1950c:	bls	1b258 <main@@Base+0x7fd4>
   19510:	ldr	r5, [sp, #44]	; 0x2c
   19514:	ldr	r8, [sp, #36]	; 0x24
   19518:	ldr	sl, [sp, #40]	; 0x28
   1951c:	mov	r7, r1
   19520:	b	1b284 <main@@Base+0x8000>
   19524:	mov	r0, r8
   19528:	mov	r1, r7
   1952c:	mov	r2, r5
   19530:	mov	r3, #4
   19534:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   19538:	b	1b280 <main@@Base+0x7ffc>
   1953c:	ldr	r5, [sp, #44]	; 0x2c
   19540:	ldr	r8, [sp, #36]	; 0x24
   19544:	ldr	sl, [sp, #40]	; 0x28
   19548:	bne	19558 <main@@Base+0x62d4>
   1954c:	ldrb	r0, [r4, #2]!
   19550:	cmp	r0, #32
   19554:	bhi	19568 <main@@Base+0x62e4>
   19558:	mov	r0, r8
   1955c:	mov	r2, r5
   19560:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   19564:	mov	r4, r0
   19568:	cmp	r7, r4
   1956c:	beq	1b160 <main@@Base+0x7edc>
   19570:	ldr	r0, [r8]
   19574:	bl	29fe8 <flatcc_builder_start_offset_vector@@Base>
   19578:	cmp	r0, #0
   1957c:	bne	13340 <main@@Base+0xbc>
   19580:	cmp	r4, r5
   19584:	beq	195c0 <main@@Base+0x633c>
   19588:	ldrb	r0, [r4]
   1958c:	cmp	r0, #91	; 0x5b
   19590:	bne	195c0 <main@@Base+0x633c>
   19594:	add	r1, r4, #1
   19598:	sub	r0, r5, r1
   1959c:	cmp	r0, #2
   195a0:	blt	1a060 <main@@Base+0x6ddc>
   195a4:	ldrb	r0, [r1]
   195a8:	cmp	r0, #32
   195ac:	bls	1a048 <main@@Base+0x6dc4>
   195b0:	ldr	r5, [sp, #44]	; 0x2c
   195b4:	ldr	r8, [sp, #36]	; 0x24
   195b8:	mov	r4, r1
   195bc:	b	1a070 <main@@Base+0x6dec>
   195c0:	mov	r0, r8
   195c4:	mov	r1, r4
   195c8:	mov	r2, r5
   195cc:	mov	r3, #22
   195d0:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   195d4:	mov	r4, r0
   195d8:	ldr	r0, [r8]
   195dc:	bl	2a0b4 <flatcc_builder_end_offset_vector@@Base>
   195e0:	cmp	r0, #0
   195e4:	str	r0, [sp, #52]	; 0x34
   195e8:	beq	13340 <main@@Base+0xbc>
   195ec:	ldr	r0, [r8]
   195f0:	mov	r1, #11
   195f4:	b	15a40 <main@@Base+0x27bc>
   195f8:	ldr	r5, [sp, #44]	; 0x2c
   195fc:	ldr	r8, [sp, #36]	; 0x24
   19600:	bne	19610 <main@@Base+0x638c>
   19604:	ldrb	r0, [r7, #2]!
   19608:	cmp	r0, #32
   1960c:	bhi	19620 <main@@Base+0x639c>
   19610:	mov	r0, r8
   19614:	mov	r2, r5
   19618:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1961c:	mov	r7, r0
   19620:	cmp	sl, r7
   19624:	beq	19688 <main@@Base+0x6404>
   19628:	mov	r6, #0
   1962c:	cmp	r7, r5
   19630:	str	r6, [fp, #-52]	; 0xffffffcc
   19634:	str	r6, [fp, #-56]	; 0xffffffc8
   19638:	str	r6, [fp, #-60]	; 0xffffffc4
   1963c:	str	r6, [sp, #56]	; 0x38
   19640:	beq	196f8 <main@@Base+0x6474>
   19644:	sub	r0, fp, #56	; 0x38
   19648:	mov	r1, r7
   1964c:	mov	r2, r5
   19650:	add	r3, sp, #56	; 0x38
   19654:	str	r0, [sp]
   19658:	mov	r0, r8
   1965c:	bl	2edac <flatcc_json_parser_integer@@Base>
   19660:	cmp	r0, r7
   19664:	beq	19730 <main@@Base+0x64ac>
   19668:	mov	r1, r0
   1966c:	ldr	r0, [sp, #56]	; 0x38
   19670:	cmp	r0, #0
   19674:	beq	19738 <main@@Base+0x64b4>
   19678:	mov	r0, r8
   1967c:	mov	r2, r5
   19680:	mov	r3, #8
   19684:	b	19758 <main@@Base+0x64d4>
   19688:	add	r4, r9, #16
   1968c:	mov	r1, #8
   19690:	sub	r0, r5, r4
   19694:	cmp	r0, #8
   19698:	movcc	r1, r0
   1969c:	sub	r1, r1, #1
   196a0:	cmp	r1, #7
   196a4:	bhi	198dc <main@@Base+0x6658>
   196a8:	ldrb	r1, [r4]
   196ac:	cmp	r1, #97	; 0x61
   196b0:	bne	198dc <main@@Base+0x6658>
   196b4:	ldr	sl, [sp, #40]	; 0x28
   196b8:	cmp	r0, #2
   196bc:	blt	1bb94 <main@@Base+0x8910>
   196c0:	ldr	r2, [sp, #32]
   196c4:	mov	r1, r9
   196c8:	ldrb	r0, [r1, #17]!
   196cc:	ldr	r2, [r2]
   196d0:	cmp	r2, #0
   196d4:	beq	19700 <main@@Base+0x647c>
   196d8:	cmp	r0, #33	; 0x21
   196dc:	bcc	196e8 <main@@Base+0x6464>
   196e0:	cmp	r0, #58	; 0x3a
   196e4:	bne	1bb94 <main@@Base+0x8910>
   196e8:	ldr	r0, [sp, #32]
   196ec:	mov	r2, #0
   196f0:	str	r2, [r0]
   196f4:	b	1970c <main@@Base+0x6488>
   196f8:	mov	r4, r5
   196fc:	b	19760 <main@@Base+0x64dc>
   19700:	cmp	r0, #34	; 0x22
   19704:	bne	1bb94 <main@@Base+0x8910>
   19708:	add	r1, r9, #18
   1970c:	sub	r0, r5, r1
   19710:	cmp	r0, #2
   19714:	blt	19d58 <main@@Base+0x6ad4>
   19718:	ldrb	r0, [r1]
   1971c:	cmp	r0, #32
   19720:	bls	19d40 <main@@Base+0x6abc>
   19724:	ldr	r5, [sp, #44]	; 0x2c
   19728:	mov	r7, r1
   1972c:	b	19d68 <main@@Base+0x6ae4>
   19730:	mov	r4, r7
   19734:	b	19760 <main@@Base+0x64dc>
   19738:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1973c:	cmp	r0, #0
   19740:	beq	1a1e4 <main@@Base+0x6f60>
   19744:	ldr	r8, [sp, #36]	; 0x24
   19748:	ldr	r5, [sp, #44]	; 0x2c
   1974c:	mov	r3, #7
   19750:	mov	r0, r8
   19754:	mov	r2, r5
   19758:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1975c:	mov	r4, r0
   19760:	ldr	sl, [sp, #40]	; 0x28
   19764:	cmp	r7, r4
   19768:	bne	197a8 <main@@Base+0x6524>
   1976c:	movw	r3, #16704	; 0x4140
   19770:	sub	r0, fp, #60	; 0x3c
   19774:	mov	r1, r7
   19778:	mov	r2, r5
   1977c:	movt	r3, #4
   19780:	str	r0, [sp]
   19784:	mov	r0, r8
   19788:	bl	22ba4 <main@@Base+0xf920>
   1978c:	mov	r4, r0
   19790:	cmp	r0, r7
   19794:	cmpne	r4, r5
   19798:	beq	1ce04 <main@@Base+0x9b80>
   1979c:	ldr	r6, [fp, #-60]	; 0xffffffc4
   197a0:	ldr	r8, [sp, #36]	; 0x24
   197a4:	ldr	sl, [sp, #40]	; 0x28
   197a8:	cmp	r6, #0
   197ac:	bne	197bc <main@@Base+0x6538>
   197b0:	ldrb	r0, [r8, #8]
   197b4:	tst	r0, #2
   197b8:	beq	1bba8 <main@@Base+0x8924>
   197bc:	ldr	r0, [r8]
   197c0:	mov	r1, #17
   197c4:	b	1b23c <main@@Base+0x7fb8>
   197c8:	ldr	r5, [sp, #44]	; 0x2c
   197cc:	ldr	r8, [sp, #36]	; 0x24
   197d0:	bne	197e0 <main@@Base+0x655c>
   197d4:	ldrb	r0, [r7, #2]!
   197d8:	cmp	r0, #32
   197dc:	bhi	197f0 <main@@Base+0x656c>
   197e0:	mov	r0, r8
   197e4:	mov	r2, r5
   197e8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   197ec:	mov	r7, r0
   197f0:	cmp	sl, r7
   197f4:	beq	1986c <main@@Base+0x65e8>
   197f8:	mov	r6, #0
   197fc:	cmp	r7, r5
   19800:	str	r6, [fp, #-52]	; 0xffffffcc
   19804:	str	r6, [fp, #-56]	; 0xffffffc8
   19808:	str	r6, [sp, #60]	; 0x3c
   1980c:	str	r6, [sp, #56]	; 0x38
   19810:	str	r6, [fp, #-60]	; 0xffffffc4
   19814:	beq	198e8 <main@@Base+0x6664>
   19818:	sub	r0, fp, #56	; 0x38
   1981c:	mov	r1, r7
   19820:	mov	r2, r5
   19824:	sub	r3, fp, #60	; 0x3c
   19828:	str	r0, [sp]
   1982c:	mov	r0, r8
   19830:	bl	2edac <flatcc_json_parser_integer@@Base>
   19834:	cmp	r0, r7
   19838:	beq	19924 <main@@Base+0x66a0>
   1983c:	mov	r1, r0
   19840:	ldr	r0, [fp, #-60]	; 0xffffffc4
   19844:	cmp	r0, #0
   19848:	beq	19934 <main@@Base+0x66b0>
   1984c:	mov	r0, r8
   19850:	mov	r2, r5
   19854:	mov	r3, #8
   19858:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1985c:	mov	r4, r0
   19860:	mov	r6, #0
   19864:	mov	r9, #0
   19868:	b	19948 <main@@Base+0x66c4>
   1986c:	add	r4, r9, #16
   19870:	mov	r1, #8
   19874:	sub	r0, r5, r4
   19878:	cmp	r0, #8
   1987c:	movcc	r1, r0
   19880:	sub	r1, r1, #1
   19884:	cmp	r1, #7
   19888:	bhi	198dc <main@@Base+0x6658>
   1988c:	ldrb	r1, [r4]
   19890:	cmp	r1, #97	; 0x61
   19894:	bne	198dc <main@@Base+0x6658>
   19898:	ldr	sl, [sp, #40]	; 0x28
   1989c:	cmp	r0, #2
   198a0:	blt	1bb94 <main@@Base+0x8910>
   198a4:	ldr	r2, [sp, #32]
   198a8:	mov	r1, r9
   198ac:	ldrb	r0, [r1, #17]!
   198b0:	ldr	r2, [r2]
   198b4:	cmp	r2, #0
   198b8:	beq	198f4 <main@@Base+0x6670>
   198bc:	cmp	r0, #33	; 0x21
   198c0:	bcc	198cc <main@@Base+0x6648>
   198c4:	cmp	r0, #58	; 0x3a
   198c8:	bne	1bb94 <main@@Base+0x8910>
   198cc:	ldr	r0, [sp, #32]
   198d0:	mov	r2, #0
   198d4:	str	r2, [r0]
   198d8:	b	19900 <main@@Base+0x667c>
   198dc:	mov	r0, r8
   198e0:	mov	r1, r4
   198e4:	b	167b8 <main@@Base+0x3534>
   198e8:	mov	r9, #0
   198ec:	mov	r4, r5
   198f0:	b	19948 <main@@Base+0x66c4>
   198f4:	cmp	r0, #34	; 0x22
   198f8:	bne	1bb94 <main@@Base+0x8910>
   198fc:	add	r1, r9, #18
   19900:	sub	r0, r5, r1
   19904:	cmp	r0, #2
   19908:	blt	19de0 <main@@Base+0x6b5c>
   1990c:	ldrb	r0, [r1]
   19910:	cmp	r0, #32
   19914:	bls	19dc8 <main@@Base+0x6b44>
   19918:	ldr	r5, [sp, #44]	; 0x2c
   1991c:	mov	r7, r1
   19920:	b	19df0 <main@@Base+0x6b6c>
   19924:	mov	r6, #0
   19928:	mov	r9, #0
   1992c:	mov	r4, r7
   19930:	b	19948 <main@@Base+0x66c4>
   19934:	ldr	r6, [fp, #-56]	; 0xffffffc8
   19938:	ldr	r9, [fp, #-52]	; 0xffffffcc
   1993c:	mov	r4, r1
   19940:	str	r9, [sp, #60]	; 0x3c
   19944:	str	r6, [sp, #56]	; 0x38
   19948:	ldr	sl, [sp, #40]	; 0x28
   1994c:	cmp	r7, r4
   19950:	bne	19994 <main@@Base+0x6710>
   19954:	movw	r3, #16728	; 0x4158
   19958:	add	r0, sp, #56	; 0x38
   1995c:	mov	r1, r7
   19960:	mov	r2, r5
   19964:	movt	r3, #4
   19968:	str	r0, [sp]
   1996c:	mov	r0, r8
   19970:	bl	22dcc <main@@Base+0xfb48>
   19974:	mov	r4, r0
   19978:	cmp	r0, r7
   1997c:	cmpne	r4, r5
   19980:	beq	1ce04 <main@@Base+0x9b80>
   19984:	ldr	r6, [sp, #56]	; 0x38
   19988:	ldr	r9, [sp, #60]	; 0x3c
   1998c:	ldr	r8, [sp, #36]	; 0x24
   19990:	ldr	sl, [sp, #40]	; 0x28
   19994:	orrs	r0, r6, r9
   19998:	bne	199a8 <main@@Base+0x6724>
   1999c:	ldrb	r0, [r8, #8]
   199a0:	tst	r0, #2
   199a4:	beq	1bba8 <main@@Base+0x8924>
   199a8:	ldr	r0, [r8]
   199ac:	mov	r1, #19
   199b0:	mov	r2, #8
   199b4:	mov	r3, #8
   199b8:	bl	2b574 <flatcc_builder_table_add@@Base>
   199bc:	cmp	r0, #0
   199c0:	beq	1ce04 <main@@Base+0x9b80>
   199c4:	stm	r0, {r6, r9}
   199c8:	b	1bba8 <main@@Base+0x8924>
   199cc:	ldr	r5, [sp, #44]	; 0x2c
   199d0:	ldr	r8, [sp, #36]	; 0x24
   199d4:	ldr	sl, [sp, #40]	; 0x28
   199d8:	bne	199e8 <main@@Base+0x6764>
   199dc:	ldrb	r0, [r4, #2]!
   199e0:	cmp	r0, #32
   199e4:	bhi	167e4 <main@@Base+0x3560>
   199e8:	mov	r0, r8
   199ec:	mov	r2, r5
   199f0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   199f4:	b	167e0 <main@@Base+0x355c>
   199f8:	ldr	r5, [sp, #44]	; 0x2c
   199fc:	ldr	r8, [sp, #36]	; 0x24
   19a00:	ldr	sl, [sp, #40]	; 0x28
   19a04:	bne	19a14 <main@@Base+0x6790>
   19a08:	ldrb	r0, [r4, #2]!
   19a0c:	cmp	r0, #32
   19a10:	bhi	19a24 <main@@Base+0x67a0>
   19a14:	mov	r0, r8
   19a18:	mov	r2, r5
   19a1c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   19a20:	mov	r4, r0
   19a24:	cmp	r7, r4
   19a28:	beq	1b160 <main@@Base+0x7edc>
   19a2c:	ldr	r0, [r8]
   19a30:	bl	29fe8 <flatcc_builder_start_offset_vector@@Base>
   19a34:	cmp	r0, #0
   19a38:	bne	13340 <main@@Base+0xbc>
   19a3c:	cmp	r4, r5
   19a40:	beq	19a78 <main@@Base+0x67f4>
   19a44:	ldrb	r0, [r4]
   19a48:	cmp	r0, #91	; 0x5b
   19a4c:	bne	19a78 <main@@Base+0x67f4>
   19a50:	add	r1, r4, #1
   19a54:	sub	r0, r5, r1
   19a58:	cmp	r0, #2
   19a5c:	blt	1a258 <main@@Base+0x6fd4>
   19a60:	ldrb	r0, [r1]
   19a64:	cmp	r0, #32
   19a68:	bls	1a240 <main@@Base+0x6fbc>
   19a6c:	ldr	r5, [sp, #44]	; 0x2c
   19a70:	mov	r4, r1
   19a74:	b	1a268 <main@@Base+0x6fe4>
   19a78:	mov	r0, r8
   19a7c:	mov	r1, r4
   19a80:	mov	r2, r5
   19a84:	mov	r3, #22
   19a88:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   19a8c:	mov	r4, r0
   19a90:	ldr	r0, [r8]
   19a94:	bl	2a0b4 <flatcc_builder_end_offset_vector@@Base>
   19a98:	cmp	r0, #0
   19a9c:	str	r0, [sp, #52]	; 0x34
   19aa0:	beq	13340 <main@@Base+0xbc>
   19aa4:	ldr	r0, [r8]
   19aa8:	mov	r1, #10
   19aac:	b	15a40 <main@@Base+0x27bc>
   19ab0:	ldr	r5, [sp, #44]	; 0x2c
   19ab4:	ldr	r8, [sp, #36]	; 0x24
   19ab8:	ldr	sl, [sp, #40]	; 0x28
   19abc:	bne	19acc <main@@Base+0x6848>
   19ac0:	ldrb	r0, [r4, #2]!
   19ac4:	cmp	r0, #32
   19ac8:	bhi	19adc <main@@Base+0x6858>
   19acc:	mov	r0, r8
   19ad0:	mov	r2, r5
   19ad4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   19ad8:	mov	r4, r0
   19adc:	cmp	r7, r4
   19ae0:	beq	1b160 <main@@Base+0x7edc>
   19ae4:	mov	r0, #0
   19ae8:	mov	r1, #3
   19aec:	str	r0, [sp, #52]	; 0x34
   19af0:	ldr	r0, [r8]
   19af4:	bl	2a328 <flatcc_builder_start_table@@Base>
   19af8:	cmp	r0, #0
   19afc:	bne	1c894 <main@@Base+0x9610>
   19b00:	cmp	r4, r5
   19b04:	beq	19b38 <main@@Base+0x68b4>
   19b08:	ldrb	r0, [r4]
   19b0c:	cmp	r0, #123	; 0x7b
   19b10:	bne	19b38 <main@@Base+0x68b4>
   19b14:	add	r1, r4, #1
   19b18:	sub	r0, r5, r1
   19b1c:	cmp	r0, #2
   19b20:	blt	1bf9c <main@@Base+0x8d18>
   19b24:	ldrb	r0, [r1]
   19b28:	cmp	r0, #32
   19b2c:	bls	1bf8c <main@@Base+0x8d08>
   19b30:	mov	r4, r1
   19b34:	b	1bfac <main@@Base+0x8d28>
   19b38:	mov	r0, r8
   19b3c:	mov	r1, r4
   19b40:	mov	r2, r5
   19b44:	mov	r3, #21
   19b48:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   19b4c:	mov	r4, r0
   19b50:	ldr	r0, [r8, #24]
   19b54:	cmp	r0, #0
   19b58:	beq	19b64 <main@@Base+0x68e0>
   19b5c:	ldr	r5, [sp, #44]	; 0x2c
   19b60:	b	1c890 <main@@Base+0x960c>
   19b64:	ldr	r0, [r8]
   19b68:	bl	2ac88 <flatcc_builder_end_table@@Base>
   19b6c:	cmp	r0, #0
   19b70:	str	r0, [sp, #52]	; 0x34
   19b74:	beq	1c888 <main@@Base+0x9604>
   19b78:	ldr	r5, [sp, #44]	; 0x2c
   19b7c:	ldr	r8, [sp, #36]	; 0x24
   19b80:	ldr	sl, [sp, #40]	; 0x28
   19b84:	b	1c8b8 <main@@Base+0x9634>
   19b88:	ldr	r5, [sp, #44]	; 0x2c
   19b8c:	ldr	r8, [sp, #36]	; 0x24
   19b90:	ldr	sl, [sp, #40]	; 0x28
   19b94:	bne	19ba4 <main@@Base+0x6920>
   19b98:	ldrb	r0, [r4, #2]!
   19b9c:	cmp	r0, #32
   19ba0:	bhi	19bb4 <main@@Base+0x6930>
   19ba4:	mov	r0, r8
   19ba8:	mov	r2, r5
   19bac:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   19bb0:	mov	r4, r0
   19bb4:	cmp	r7, r4
   19bb8:	beq	1b160 <main@@Base+0x7edc>
   19bbc:	ldr	r0, [r8]
   19bc0:	mov	r1, #1
   19bc4:	mov	r2, #1
   19bc8:	mvn	r3, #0
   19bcc:	bl	29f5c <flatcc_builder_start_vector@@Base>
   19bd0:	cmp	r0, #0
   19bd4:	bne	13340 <main@@Base+0xbc>
   19bd8:	cmp	r4, r5
   19bdc:	beq	19c14 <main@@Base+0x6990>
   19be0:	ldrb	r0, [r4]
   19be4:	cmp	r0, #91	; 0x5b
   19be8:	bne	19c14 <main@@Base+0x6990>
   19bec:	add	r1, r4, #1
   19bf0:	sub	r0, r5, r1
   19bf4:	cmp	r0, #2
   19bf8:	blt	1a3fc <main@@Base+0x7178>
   19bfc:	ldrb	r0, [r1]
   19c00:	cmp	r0, #32
   19c04:	bls	1a3e4 <main@@Base+0x7160>
   19c08:	ldr	r5, [sp, #44]	; 0x2c
   19c0c:	mov	r4, r1
   19c10:	b	1a40c <main@@Base+0x7188>
   19c14:	mov	r0, r8
   19c18:	mov	r1, r4
   19c1c:	mov	r2, r5
   19c20:	mov	r3, #22
   19c24:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   19c28:	mov	r4, r0
   19c2c:	ldr	r0, [r8]
   19c30:	bl	2af88 <flatcc_builder_end_vector@@Base>
   19c34:	cmp	r0, #0
   19c38:	str	r0, [sp, #52]	; 0x34
   19c3c:	beq	13340 <main@@Base+0xbc>
   19c40:	ldr	r0, [r8]
   19c44:	mov	r1, #5
   19c48:	b	15a40 <main@@Base+0x27bc>
   19c4c:	ldr	r5, [sp, #44]	; 0x2c
   19c50:	ldr	r8, [sp, #36]	; 0x24
   19c54:	ldr	sl, [sp, #40]	; 0x28
   19c58:	bne	19c6c <main@@Base+0x69e8>
   19c5c:	ldrb	r0, [r4, #2]!
   19c60:	mov	r7, r4
   19c64:	cmp	r0, #32
   19c68:	bhi	16264 <main@@Base+0x2fe0>
   19c6c:	mov	r0, r8
   19c70:	mov	r2, r5
   19c74:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   19c78:	b	16260 <main@@Base+0x2fdc>
   19c7c:	ldr	r5, [sp, #44]	; 0x2c
   19c80:	ldr	r8, [sp, #36]	; 0x24
   19c84:	bne	19c94 <main@@Base+0x6a10>
   19c88:	ldrb	r0, [r4, #2]!
   19c8c:	cmp	r0, #32
   19c90:	bhi	19ca4 <main@@Base+0x6a20>
   19c94:	mov	r0, r8
   19c98:	mov	r2, r5
   19c9c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   19ca0:	mov	r4, r0
   19ca4:	cmp	sl, r4
   19ca8:	beq	167b0 <main@@Base+0x352c>
   19cac:	ldr	r0, [r8]
   19cb0:	mov	r1, #8
   19cb4:	mov	r2, #8
   19cb8:	mvn	r3, #-536870912	; 0xe0000000
   19cbc:	bl	29f5c <flatcc_builder_start_vector@@Base>
   19cc0:	cmp	r0, #0
   19cc4:	bne	13340 <main@@Base+0xbc>
   19cc8:	cmp	r4, r5
   19ccc:	beq	19d04 <main@@Base+0x6a80>
   19cd0:	ldrb	r0, [r4]
   19cd4:	cmp	r0, #91	; 0x5b
   19cd8:	bne	19d04 <main@@Base+0x6a80>
   19cdc:	add	r1, r4, #1
   19ce0:	sub	r0, r5, r1
   19ce4:	cmp	r0, #2
   19ce8:	blt	1ae4c <main@@Base+0x7bc8>
   19cec:	ldrb	r0, [r1]
   19cf0:	cmp	r0, #32
   19cf4:	bls	1ae34 <main@@Base+0x7bb0>
   19cf8:	ldr	r5, [sp, #44]	; 0x2c
   19cfc:	mov	r4, r1
   19d00:	b	1ae5c <main@@Base+0x7bd8>
   19d04:	mov	r0, r8
   19d08:	mov	r1, r4
   19d0c:	mov	r2, r5
   19d10:	mov	r3, #22
   19d14:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   19d18:	mov	r4, r0
   19d1c:	ldr	sl, [sp, #40]	; 0x28
   19d20:	ldr	r0, [r8]
   19d24:	bl	2af88 <flatcc_builder_end_vector@@Base>
   19d28:	cmp	r0, #0
   19d2c:	str	r0, [sp, #52]	; 0x34
   19d30:	beq	13340 <main@@Base+0xbc>
   19d34:	ldr	r0, [r8]
   19d38:	mov	r1, #32
   19d3c:	b	15a40 <main@@Base+0x27bc>
   19d40:	ldr	r5, [sp, #44]	; 0x2c
   19d44:	bne	19d58 <main@@Base+0x6ad4>
   19d48:	mov	r7, r1
   19d4c:	ldrb	r0, [r7, #1]!
   19d50:	cmp	r0, #32
   19d54:	bhi	19d68 <main@@Base+0x6ae4>
   19d58:	ldr	r0, [sp, #36]	; 0x24
   19d5c:	mov	r2, r5
   19d60:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   19d64:	mov	r7, r0
   19d68:	cmp	r7, r5
   19d6c:	beq	19dac <main@@Base+0x6b28>
   19d70:	ldrb	r0, [r7]
   19d74:	cmp	r0, #58	; 0x3a
   19d78:	bne	19dac <main@@Base+0x6b28>
   19d7c:	ldr	r8, [sp, #36]	; 0x24
   19d80:	add	r1, r7, #1
   19d84:	sub	r0, r5, r1
   19d88:	cmp	r0, #2
   19d8c:	blt	1b9c8 <main@@Base+0x8744>
   19d90:	ldrb	r0, [r1]
   19d94:	cmp	r0, #32
   19d98:	bls	1b9b0 <main@@Base+0x872c>
   19d9c:	ldr	r5, [sp, #44]	; 0x2c
   19da0:	ldr	r8, [sp, #36]	; 0x24
   19da4:	mov	r7, r1
   19da8:	b	1b9d8 <main@@Base+0x8754>
   19dac:	ldr	r8, [sp, #36]	; 0x24
   19db0:	mov	r1, r7
   19db4:	mov	r2, r5
   19db8:	mov	r3, #4
   19dbc:	mov	r0, r8
   19dc0:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   19dc4:	b	1b9d4 <main@@Base+0x8750>
   19dc8:	ldr	r5, [sp, #44]	; 0x2c
   19dcc:	bne	19de0 <main@@Base+0x6b5c>
   19dd0:	mov	r7, r1
   19dd4:	ldrb	r0, [r7, #1]!
   19dd8:	cmp	r0, #32
   19ddc:	bhi	19df0 <main@@Base+0x6b6c>
   19de0:	ldr	r0, [sp, #36]	; 0x24
   19de4:	mov	r2, r5
   19de8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   19dec:	mov	r7, r0
   19df0:	cmp	r7, r5
   19df4:	beq	19e34 <main@@Base+0x6bb0>
   19df8:	ldrb	r0, [r7]
   19dfc:	cmp	r0, #58	; 0x3a
   19e00:	bne	19e34 <main@@Base+0x6bb0>
   19e04:	ldr	r8, [sp, #36]	; 0x24
   19e08:	add	r1, r7, #1
   19e0c:	sub	r0, r5, r1
   19e10:	cmp	r0, #2
   19e14:	blt	1bb08 <main@@Base+0x8884>
   19e18:	ldrb	r0, [r1]
   19e1c:	cmp	r0, #32
   19e20:	bls	1baf0 <main@@Base+0x886c>
   19e24:	ldr	r5, [sp, #44]	; 0x2c
   19e28:	ldr	r8, [sp, #36]	; 0x24
   19e2c:	mov	r7, r1
   19e30:	b	1bb18 <main@@Base+0x8894>
   19e34:	ldr	r8, [sp, #36]	; 0x24
   19e38:	mov	r1, r7
   19e3c:	mov	r2, r5
   19e40:	mov	r3, #4
   19e44:	mov	r0, r8
   19e48:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   19e4c:	b	1bb14 <main@@Base+0x8890>
   19e50:	ldr	r5, [sp, #44]	; 0x2c
   19e54:	ldr	r8, [sp, #36]	; 0x24
   19e58:	ldr	sl, [sp, #40]	; 0x28
   19e5c:	bne	19e6c <main@@Base+0x6be8>
   19e60:	ldrb	r0, [r4, #2]!
   19e64:	cmp	r0, #32
   19e68:	bhi	19e7c <main@@Base+0x6bf8>
   19e6c:	mov	r0, r8
   19e70:	mov	r2, r5
   19e74:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   19e78:	mov	r4, r0
   19e7c:	cmp	r7, r4
   19e80:	beq	1b160 <main@@Base+0x7edc>
   19e84:	cmp	r4, r5
   19e88:	beq	19ee8 <main@@Base+0x6c64>
   19e8c:	ldrb	r0, [r4]
   19e90:	cmp	r0, #91	; 0x5b
   19e94:	bne	19ee8 <main@@Base+0x6c64>
   19e98:	ldr	r0, [r8]
   19e9c:	mov	r1, #1
   19ea0:	mov	r2, #1
   19ea4:	mvn	r3, #0
   19ea8:	bl	29f5c <flatcc_builder_start_vector@@Base>
   19eac:	cmp	r0, #0
   19eb0:	bne	1ce04 <main@@Base+0x9b80>
   19eb4:	ldrb	r0, [r4]
   19eb8:	cmp	r0, #91	; 0x5b
   19ebc:	bne	19f34 <main@@Base+0x6cb0>
   19ec0:	ldr	r0, [sp, #44]	; 0x2c
   19ec4:	add	r1, r4, #1
   19ec8:	sub	r0, r0, r1
   19ecc:	cmp	r0, #2
   19ed0:	blt	1bd30 <main@@Base+0x8aac>
   19ed4:	ldrb	r0, [r1]
   19ed8:	cmp	r0, #32
   19edc:	bls	1bd20 <main@@Base+0x8a9c>
   19ee0:	mov	r4, r1
   19ee4:	b	1bd40 <main@@Base+0x8abc>
   19ee8:	ldr	r0, [r8]
   19eec:	mov	r1, #0
   19ef0:	mov	r2, #0
   19ef4:	mov	r3, #0
   19ef8:	bl	292cc <flatcc_builder_start_buffer@@Base>
   19efc:	cmp	r0, #0
   19f00:	bne	13340 <main@@Base+0xbc>
   19f04:	mov	r0, r8
   19f08:	mov	r1, r4
   19f0c:	mov	r2, r5
   19f10:	add	r3, sp, #52	; 0x34
   19f14:	bl	13300 <main@@Base+0x7c>
   19f18:	ldr	r1, [sp, #52]	; 0x34
   19f1c:	mov	r4, r0
   19f20:	cmp	r1, #0
   19f24:	beq	13340 <main@@Base+0xbc>
   19f28:	ldr	r0, [r8]
   19f2c:	bl	294bc <flatcc_builder_end_buffer@@Base>
   19f30:	b	1cab4 <main@@Base+0x9830>
   19f34:	ldr	r0, [sp, #36]	; 0x24
   19f38:	ldr	r2, [sp, #44]	; 0x2c
   19f3c:	mov	r1, r4
   19f40:	mov	r3, #22
   19f44:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   19f48:	b	1caa0 <main@@Base+0x981c>
   19f4c:	ldr	r5, [sp, #44]	; 0x2c
   19f50:	ldr	r8, [sp, #36]	; 0x24
   19f54:	ldr	sl, [sp, #40]	; 0x28
   19f58:	bne	19f68 <main@@Base+0x6ce4>
   19f5c:	ldrb	r0, [r7, #2]!
   19f60:	cmp	r0, #32
   19f64:	bhi	19f78 <main@@Base+0x6cf4>
   19f68:	mov	r0, r8
   19f6c:	mov	r2, r5
   19f70:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   19f74:	mov	r7, r0
   19f78:	cmp	r4, r7
   19f7c:	beq	1bb94 <main@@Base+0x8910>
   19f80:	mov	r6, #0
   19f84:	cmp	r7, r5
   19f88:	str	r6, [fp, #-52]	; 0xffffffcc
   19f8c:	str	r6, [fp, #-56]	; 0xffffffc8
   19f90:	str	r6, [fp, #-60]	; 0xffffffc4
   19f94:	str	r6, [sp, #56]	; 0x38
   19f98:	beq	19ff8 <main@@Base+0x6d74>
   19f9c:	sub	r0, fp, #56	; 0x38
   19fa0:	mov	r1, r7
   19fa4:	mov	r2, r5
   19fa8:	add	r3, sp, #56	; 0x38
   19fac:	str	r0, [sp]
   19fb0:	mov	r0, r8
   19fb4:	bl	2edac <flatcc_json_parser_integer@@Base>
   19fb8:	cmp	r0, r7
   19fbc:	beq	1a000 <main@@Base+0x6d7c>
   19fc0:	ldr	r2, [sp, #56]	; 0x38
   19fc4:	mov	r4, r0
   19fc8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19fcc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19fd0:	cmp	r2, #0
   19fd4:	beq	1a008 <main@@Base+0x6d84>
   19fd8:	subs	r2, r0, #-2147483647	; 0x80000001
   19fdc:	sbcs	r1, r1, #0
   19fe0:	bcc	1a038 <main@@Base+0x6db4>
   19fe4:	ldr	r8, [sp, #36]	; 0x24
   19fe8:	ldr	r5, [sp, #44]	; 0x2c
   19fec:	mov	r1, r4
   19ff0:	mov	r3, #8
   19ff4:	b	1a024 <main@@Base+0x6da0>
   19ff8:	mov	r4, r5
   19ffc:	b	1b1d4 <main@@Base+0x7f50>
   1a000:	mov	r4, r7
   1a004:	b	1b1d4 <main@@Base+0x7f50>
   1a008:	subs	r2, r0, #-2147483648	; 0x80000000
   1a00c:	sbcs	r1, r1, #0
   1a010:	bcc	1b1c0 <main@@Base+0x7f3c>
   1a014:	ldr	r8, [sp, #36]	; 0x24
   1a018:	ldr	r5, [sp, #44]	; 0x2c
   1a01c:	mov	r1, r4
   1a020:	mov	r3, #7
   1a024:	mov	r0, r8
   1a028:	mov	r2, r5
   1a02c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1a030:	mov	r4, r0
   1a034:	b	1b1d0 <main@@Base+0x7f4c>
   1a038:	rsb	r6, r0, #0
   1a03c:	b	1b1c4 <main@@Base+0x7f40>
   1a040:	mov	r7, r5
   1a044:	b	18388 <main@@Base+0x5104>
   1a048:	ldr	r5, [sp, #44]	; 0x2c
   1a04c:	ldr	r8, [sp, #36]	; 0x24
   1a050:	bne	1a060 <main@@Base+0x6ddc>
   1a054:	ldrb	r0, [r4, #2]!
   1a058:	cmp	r0, #32
   1a05c:	bhi	1a070 <main@@Base+0x6dec>
   1a060:	mov	r0, r8
   1a064:	mov	r2, r5
   1a068:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1a06c:	mov	r4, r0
   1a070:	cmp	r4, r5
   1a074:	mov	r2, r5
   1a078:	beq	1a0d4 <main@@Base+0x6e50>
   1a07c:	ldrb	r0, [r4]
   1a080:	cmp	r0, #93	; 0x5d
   1a084:	bne	1a0c8 <main@@Base+0x6e44>
   1a088:	ldr	r5, [sp, #44]	; 0x2c
   1a08c:	ldr	r8, [sp, #36]	; 0x24
   1a090:	ldr	sl, [sp, #40]	; 0x28
   1a094:	add	r1, r4, #1
   1a098:	sub	r0, r5, r1
   1a09c:	cmp	r0, #2
   1a0a0:	blt	1cb38 <main@@Base+0x98b4>
   1a0a4:	ldrb	r0, [r1]
   1a0a8:	cmp	r0, #32
   1a0ac:	bhi	1b61c <main@@Base+0x8398>
   1a0b0:	ldr	r5, [sp, #44]	; 0x2c
   1a0b4:	ldr	r8, [sp, #36]	; 0x24
   1a0b8:	ldr	sl, [sp, #40]	; 0x28
   1a0bc:	bne	1cb38 <main@@Base+0x98b4>
   1a0c0:	ldrb	r0, [r4, #2]!
   1a0c4:	b	1cb30 <main@@Base+0x98ac>
   1a0c8:	ldr	r5, [sp, #44]	; 0x2c
   1a0cc:	ldr	r8, [sp, #36]	; 0x24
   1a0d0:	mov	r2, r4
   1a0d4:	mov	r1, r2
   1a0d8:	mov	r0, r8
   1a0dc:	mov	r2, r5
   1a0e0:	add	r3, sp, #52	; 0x34
   1a0e4:	bl	13300 <main@@Base+0x7c>
   1a0e8:	mov	r4, r0
   1a0ec:	ldr	r0, [sp, #52]	; 0x34
   1a0f0:	cmp	r0, #0
   1a0f4:	beq	13340 <main@@Base+0xbc>
   1a0f8:	ldr	r0, [r8]
   1a0fc:	mov	r1, #1
   1a100:	bl	299bc <flatcc_builder_extend_offset_vector@@Base>
   1a104:	cmp	r0, #0
   1a108:	beq	13340 <main@@Base+0xbc>
   1a10c:	ldr	r1, [sp, #52]	; 0x34
   1a110:	str	r1, [r0]
   1a114:	sub	r0, r5, r4
   1a118:	cmp	r0, #2
   1a11c:	blt	1a148 <main@@Base+0x6ec4>
   1a120:	ldrb	r0, [r4]
   1a124:	cmp	r0, #32
   1a128:	bls	1a134 <main@@Base+0x6eb0>
   1a12c:	mov	r2, r4
   1a130:	b	1a15c <main@@Base+0x6ed8>
   1a134:	bne	1a148 <main@@Base+0x6ec4>
   1a138:	mov	r2, r4
   1a13c:	ldrb	r0, [r2, #1]!
   1a140:	cmp	r0, #32
   1a144:	bhi	1a15c <main@@Base+0x6ed8>
   1a148:	mov	r0, r8
   1a14c:	mov	r1, r4
   1a150:	mov	r2, r5
   1a154:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1a158:	mov	r2, r0
   1a15c:	cmp	r2, r5
   1a160:	beq	1b59c <main@@Base+0x8318>
   1a164:	ldrb	r0, [r2]
   1a168:	cmp	r0, #44	; 0x2c
   1a16c:	bne	1b5ec <main@@Base+0x8368>
   1a170:	add	r1, r2, #1
   1a174:	sub	r0, r5, r1
   1a178:	cmp	r0, #2
   1a17c:	blt	1a1a4 <main@@Base+0x6f20>
   1a180:	ldrb	r0, [r1]
   1a184:	cmp	r0, #32
   1a188:	bls	1a194 <main@@Base+0x6f10>
   1a18c:	mov	r2, r1
   1a190:	b	1a1b4 <main@@Base+0x6f30>
   1a194:	bne	1a1a4 <main@@Base+0x6f20>
   1a198:	ldrb	r0, [r2, #2]!
   1a19c:	cmp	r0, #32
   1a1a0:	bhi	1a1b4 <main@@Base+0x6f30>
   1a1a4:	mov	r0, r8
   1a1a8:	mov	r2, r5
   1a1ac:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1a1b0:	mov	r2, r0
   1a1b4:	cmp	r2, r5
   1a1b8:	beq	1b644 <main@@Base+0x83c0>
   1a1bc:	ldrb	r0, [r2]
   1a1c0:	cmp	r0, #93	; 0x5d
   1a1c4:	bne	1a0d4 <main@@Base+0x6e50>
   1a1c8:	b	1b5fc <main@@Base+0x8378>
   1a1cc:	cmp	r0, #93	; 0x5d
   1a1d0:	bne	1b56c <main@@Base+0x82e8>
   1a1d4:	ldr	r5, [sp, #44]	; 0x2c
   1a1d8:	ldr	r8, [sp, #36]	; 0x24
   1a1dc:	ldr	sl, [sp, #40]	; 0x28
   1a1e0:	b	18bac <main@@Base+0x5928>
   1a1e4:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1a1e8:	ldr	r5, [sp, #44]	; 0x2c
   1a1ec:	ldr	r8, [sp, #36]	; 0x24
   1a1f0:	mov	r4, r1
   1a1f4:	str	r6, [fp, #-60]	; 0xffffffc4
   1a1f8:	b	19760 <main@@Base+0x64dc>
   1a1fc:	mov	r0, r8
   1a200:	mov	r1, r5
   1a204:	mov	r2, r5
   1a208:	mov	r3, #9
   1a20c:	b	18380 <main@@Base+0x50fc>
   1a210:	add	r1, r4, #1
   1a214:	sub	r0, r5, r1
   1a218:	cmp	r0, #2
   1a21c:	blt	1c944 <main@@Base+0x96c0>
   1a220:	ldrb	r0, [r1]
   1a224:	cmp	r0, #32
   1a228:	bls	1c924 <main@@Base+0x96a0>
   1a22c:	ldr	r5, [sp, #44]	; 0x2c
   1a230:	ldr	r8, [sp, #36]	; 0x24
   1a234:	ldr	sl, [sp, #40]	; 0x28
   1a238:	mov	r7, r1
   1a23c:	b	18388 <main@@Base+0x5104>
   1a240:	ldr	r5, [sp, #44]	; 0x2c
   1a244:	ldr	r8, [sp, #36]	; 0x24
   1a248:	bne	1a258 <main@@Base+0x6fd4>
   1a24c:	ldrb	r0, [r4, #2]!
   1a250:	cmp	r0, #32
   1a254:	bhi	1a268 <main@@Base+0x6fe4>
   1a258:	mov	r0, r8
   1a25c:	mov	r2, r5
   1a260:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1a264:	mov	r4, r0
   1a268:	cmp	r4, r5
   1a26c:	mov	r2, r5
   1a270:	beq	1a2c4 <main@@Base+0x7040>
   1a274:	ldrb	r0, [r4]
   1a278:	cmp	r0, #93	; 0x5d
   1a27c:	bne	1a2c0 <main@@Base+0x703c>
   1a280:	ldr	r5, [sp, #44]	; 0x2c
   1a284:	ldr	r8, [sp, #36]	; 0x24
   1a288:	ldr	sl, [sp, #40]	; 0x28
   1a28c:	add	r1, r4, #1
   1a290:	sub	r0, r5, r1
   1a294:	cmp	r0, #2
   1a298:	blt	1cc3c <main@@Base+0x99b8>
   1a29c:	ldrb	r0, [r1]
   1a2a0:	cmp	r0, #32
   1a2a4:	bhi	1b6fc <main@@Base+0x8478>
   1a2a8:	ldr	r5, [sp, #44]	; 0x2c
   1a2ac:	ldr	r8, [sp, #36]	; 0x24
   1a2b0:	ldr	sl, [sp, #40]	; 0x28
   1a2b4:	bne	1cc3c <main@@Base+0x99b8>
   1a2b8:	ldrb	r0, [r4, #2]!
   1a2bc:	b	1cc34 <main@@Base+0x99b0>
   1a2c0:	mov	r2, r4
   1a2c4:	ldr	r5, [sp, #44]	; 0x2c
   1a2c8:	ldr	r8, [sp, #36]	; 0x24
   1a2cc:	mov	r1, r2
   1a2d0:	mov	r0, r8
   1a2d4:	mov	r2, r5
   1a2d8:	add	r3, sp, #52	; 0x34
   1a2dc:	bl	2f2d8 <flatcc_json_parser_build_string@@Base>
   1a2e0:	mov	r4, r0
   1a2e4:	ldr	r0, [sp, #52]	; 0x34
   1a2e8:	cmp	r0, #0
   1a2ec:	beq	13340 <main@@Base+0xbc>
   1a2f0:	ldr	r0, [r8]
   1a2f4:	mov	r1, #1
   1a2f8:	bl	299bc <flatcc_builder_extend_offset_vector@@Base>
   1a2fc:	cmp	r0, #0
   1a300:	beq	13340 <main@@Base+0xbc>
   1a304:	ldr	r1, [sp, #52]	; 0x34
   1a308:	str	r1, [r0]
   1a30c:	sub	r0, r5, r4
   1a310:	cmp	r0, #2
   1a314:	blt	1a340 <main@@Base+0x70bc>
   1a318:	ldrb	r0, [r4]
   1a31c:	cmp	r0, #32
   1a320:	bls	1a32c <main@@Base+0x70a8>
   1a324:	mov	r2, r4
   1a328:	b	1a354 <main@@Base+0x70d0>
   1a32c:	bne	1a340 <main@@Base+0x70bc>
   1a330:	mov	r2, r4
   1a334:	ldrb	r0, [r2, #1]!
   1a338:	cmp	r0, #32
   1a33c:	bhi	1a354 <main@@Base+0x70d0>
   1a340:	mov	r0, r8
   1a344:	mov	r1, r4
   1a348:	mov	r2, r5
   1a34c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1a350:	mov	r2, r0
   1a354:	cmp	r2, r5
   1a358:	beq	1b69c <main@@Base+0x8418>
   1a35c:	ldrb	r0, [r2]
   1a360:	cmp	r0, #44	; 0x2c
   1a364:	bne	1b6cc <main@@Base+0x8448>
   1a368:	add	r1, r2, #1
   1a36c:	sub	r0, r5, r1
   1a370:	cmp	r0, #2
   1a374:	blt	1a39c <main@@Base+0x7118>
   1a378:	ldrb	r0, [r1]
   1a37c:	cmp	r0, #32
   1a380:	bls	1a38c <main@@Base+0x7108>
   1a384:	mov	r2, r1
   1a388:	b	1a3ac <main@@Base+0x7128>
   1a38c:	bne	1a39c <main@@Base+0x7118>
   1a390:	ldrb	r0, [r2, #2]!
   1a394:	cmp	r0, #32
   1a398:	bhi	1a3ac <main@@Base+0x7128>
   1a39c:	mov	r0, r8
   1a3a0:	mov	r2, r5
   1a3a4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1a3a8:	mov	r2, r0
   1a3ac:	cmp	r2, r5
   1a3b0:	beq	1b734 <main@@Base+0x84b0>
   1a3b4:	ldrb	r0, [r2]
   1a3b8:	cmp	r0, #93	; 0x5d
   1a3bc:	bne	1a2cc <main@@Base+0x7048>
   1a3c0:	b	1b6dc <main@@Base+0x8458>
   1a3c4:	mov	r4, r5
   1a3c8:	b	167e4 <main@@Base+0x3560>
   1a3cc:	cmp	r0, #93	; 0x5d
   1a3d0:	bne	1b668 <main@@Base+0x83e4>
   1a3d4:	ldr	r5, [sp, #44]	; 0x2c
   1a3d8:	ldr	r8, [sp, #36]	; 0x24
   1a3dc:	ldr	sl, [sp, #40]	; 0x28
   1a3e0:	b	17d50 <main@@Base+0x4acc>
   1a3e4:	ldr	r5, [sp, #44]	; 0x2c
   1a3e8:	ldr	r8, [sp, #36]	; 0x24
   1a3ec:	bne	1a3fc <main@@Base+0x7178>
   1a3f0:	ldrb	r0, [r4, #2]!
   1a3f4:	cmp	r0, #32
   1a3f8:	bhi	1a40c <main@@Base+0x7188>
   1a3fc:	mov	r0, r8
   1a400:	mov	r2, r5
   1a404:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1a408:	mov	r4, r0
   1a40c:	cmp	r4, r5
   1a410:	beq	1a478 <main@@Base+0x71f4>
   1a414:	ldrb	r0, [r4]
   1a418:	cmp	r0, #93	; 0x5d
   1a41c:	bne	1a474 <main@@Base+0x71f0>
   1a420:	ldr	r5, [sp, #44]	; 0x2c
   1a424:	ldr	r8, [sp, #36]	; 0x24
   1a428:	ldr	sl, [sp, #40]	; 0x28
   1a42c:	add	r1, r4, #1
   1a430:	sub	r0, r5, r1
   1a434:	cmp	r0, #2
   1a438:	blt	1a464 <main@@Base+0x71e0>
   1a43c:	ldrb	r0, [r1]
   1a440:	cmp	r0, #32
   1a444:	bhi	1b6c4 <main@@Base+0x8440>
   1a448:	ldr	r5, [sp, #44]	; 0x2c
   1a44c:	ldr	r8, [sp, #36]	; 0x24
   1a450:	ldr	sl, [sp, #40]	; 0x28
   1a454:	bne	1a464 <main@@Base+0x71e0>
   1a458:	ldrb	r0, [r4, #2]!
   1a45c:	cmp	r0, #32
   1a460:	bhi	19c2c <main@@Base+0x69a8>
   1a464:	mov	r0, r8
   1a468:	mov	r2, r5
   1a46c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1a470:	b	19c28 <main@@Base+0x69a4>
   1a474:	mov	r5, r4
   1a478:	mov	r0, #0
   1a47c:	mov	r1, #1
   1a480:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a484:	ldr	r0, [sp, #36]	; 0x24
   1a488:	ldr	r0, [r0]
   1a48c:	bl	29764 <flatcc_builder_extend_vector@@Base>
   1a490:	cmp	r0, #0
   1a494:	beq	1cde0 <main@@Base+0x9b5c>
   1a498:	mov	r4, r5
   1a49c:	ldr	r5, [sp, #44]	; 0x2c
   1a4a0:	ldr	r8, [sp, #36]	; 0x24
   1a4a4:	mov	r7, r0
   1a4a8:	mov	r6, #0
   1a4ac:	cmp	r4, r5
   1a4b0:	str	r6, [fp, #-52]	; 0xffffffcc
   1a4b4:	str	r6, [fp, #-56]	; 0xffffffc8
   1a4b8:	strb	r6, [fp, #-60]	; 0xffffffc4
   1a4bc:	str	r6, [sp, #56]	; 0x38
   1a4c0:	beq	1a508 <main@@Base+0x7284>
   1a4c4:	sub	r0, fp, #56	; 0x38
   1a4c8:	mov	r1, r4
   1a4cc:	mov	r2, r5
   1a4d0:	add	r3, sp, #56	; 0x38
   1a4d4:	str	r0, [sp]
   1a4d8:	mov	r0, r8
   1a4dc:	bl	2edac <flatcc_json_parser_integer@@Base>
   1a4e0:	cmp	r0, r4
   1a4e4:	beq	1a510 <main@@Base+0x728c>
   1a4e8:	mov	r1, r0
   1a4ec:	ldr	r0, [sp, #56]	; 0x38
   1a4f0:	cmp	r0, #0
   1a4f4:	beq	1a518 <main@@Base+0x7294>
   1a4f8:	mov	r0, r8
   1a4fc:	mov	r2, r5
   1a500:	mov	r3, #8
   1a504:	b	1a540 <main@@Base+0x72bc>
   1a508:	mov	r1, r5
   1a50c:	b	1a548 <main@@Base+0x72c4>
   1a510:	mov	r1, r4
   1a514:	b	1a548 <main@@Base+0x72c4>
   1a518:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a51c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a520:	subs	r3, r0, #256	; 0x100
   1a524:	sbcs	r2, r2, #0
   1a528:	bcc	1a660 <main@@Base+0x73dc>
   1a52c:	ldr	r8, [sp, #36]	; 0x24
   1a530:	ldr	r5, [sp, #44]	; 0x2c
   1a534:	mov	r3, #7
   1a538:	mov	r0, r8
   1a53c:	mov	r2, r5
   1a540:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1a544:	mov	r1, r0
   1a548:	cmp	r4, r1
   1a54c:	bne	1a588 <main@@Base+0x7304>
   1a550:	movw	r3, #16556	; 0x40ac
   1a554:	sub	r0, fp, #60	; 0x3c
   1a558:	mov	r1, r4
   1a55c:	mov	r2, r5
   1a560:	movt	r3, #4
   1a564:	str	r0, [sp]
   1a568:	mov	r0, r8
   1a56c:	bl	1e3f0 <main@@Base+0xb16c>
   1a570:	mov	r1, r0
   1a574:	cmp	r0, r4
   1a578:	cmpne	r1, r5
   1a57c:	beq	1cdc0 <main@@Base+0x9b3c>
   1a580:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1a584:	ldr	r8, [sp, #36]	; 0x24
   1a588:	sub	r0, r5, r1
   1a58c:	strb	r6, [r7]
   1a590:	cmp	r0, #2
   1a594:	blt	1a5c0 <main@@Base+0x733c>
   1a598:	ldrb	r0, [r1]
   1a59c:	cmp	r0, #32
   1a5a0:	bls	1a5ac <main@@Base+0x7328>
   1a5a4:	mov	r4, r1
   1a5a8:	b	1a5d0 <main@@Base+0x734c>
   1a5ac:	bne	1a5c0 <main@@Base+0x733c>
   1a5b0:	mov	r4, r1
   1a5b4:	ldrb	r0, [r4, #1]!
   1a5b8:	cmp	r0, #32
   1a5bc:	bhi	1a5d0 <main@@Base+0x734c>
   1a5c0:	mov	r0, r8
   1a5c4:	mov	r2, r5
   1a5c8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1a5cc:	mov	r4, r0
   1a5d0:	cmp	r4, r5
   1a5d4:	beq	1b630 <main@@Base+0x83ac>
   1a5d8:	ldrb	r0, [r4]
   1a5dc:	cmp	r0, #44	; 0x2c
   1a5e0:	bne	1b650 <main@@Base+0x83cc>
   1a5e4:	add	r1, r4, #1
   1a5e8:	sub	r0, r5, r1
   1a5ec:	cmp	r0, #2
   1a5f0:	blt	1a618 <main@@Base+0x7394>
   1a5f4:	ldrb	r0, [r1]
   1a5f8:	cmp	r0, #32
   1a5fc:	bls	1a608 <main@@Base+0x7384>
   1a600:	mov	r4, r1
   1a604:	b	1a628 <main@@Base+0x73a4>
   1a608:	bne	1a618 <main@@Base+0x7394>
   1a60c:	ldrb	r0, [r4, #2]!
   1a610:	cmp	r0, #32
   1a614:	bhi	1a628 <main@@Base+0x73a4>
   1a618:	mov	r0, r8
   1a61c:	mov	r2, r5
   1a620:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1a624:	mov	r4, r0
   1a628:	cmp	r4, r5
   1a62c:	beq	1b68c <main@@Base+0x8408>
   1a630:	ldrb	r0, [r4]
   1a634:	cmp	r0, #93	; 0x5d
   1a638:	beq	1b6a8 <main@@Base+0x8424>
   1a63c:	mov	r0, #0
   1a640:	mov	r1, #1
   1a644:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a648:	ldr	r0, [r8]
   1a64c:	bl	29764 <flatcc_builder_extend_vector@@Base>
   1a650:	mov	r7, r0
   1a654:	cmp	r0, #0
   1a658:	bne	1a4a8 <main@@Base+0x7224>
   1a65c:	b	13340 <main@@Base+0xbc>
   1a660:	ldr	r5, [sp, #44]	; 0x2c
   1a664:	ldr	r8, [sp, #36]	; 0x24
   1a668:	mov	r6, r0
   1a66c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a670:	b	1a548 <main@@Base+0x72c4>
   1a674:	ldr	sl, [sp, #40]	; 0x28
   1a678:	mov	r4, r5
   1a67c:	b	182d0 <main@@Base+0x504c>
   1a680:	mov	r0, r8
   1a684:	mov	r1, r5
   1a688:	mov	r2, r5
   1a68c:	mov	r3, #9
   1a690:	b	167dc <main@@Base+0x3558>
   1a694:	ldr	r5, [sp, #44]	; 0x2c
   1a698:	ldr	r8, [sp, #36]	; 0x24
   1a69c:	ldr	sl, [sp, #40]	; 0x28
   1a6a0:	bne	1a6b4 <main@@Base+0x7430>
   1a6a4:	ldrb	r0, [r2, #2]!
   1a6a8:	mov	r4, r2
   1a6ac:	cmp	r0, #32
   1a6b0:	bhi	1bba8 <main@@Base+0x8924>
   1a6b4:	mov	r0, r8
   1a6b8:	mov	r2, r5
   1a6bc:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1a6c0:	b	1bba4 <main@@Base+0x8920>
   1a6c4:	cmp	r0, #93	; 0x5d
   1a6c8:	bne	1b710 <main@@Base+0x848c>
   1a6cc:	ldr	r5, [sp, #44]	; 0x2c
   1a6d0:	ldr	r8, [sp, #36]	; 0x24
   1a6d4:	add	r1, r2, #1
   1a6d8:	sub	r0, r5, r1
   1a6dc:	cmp	r0, #2
   1a6e0:	ldr	sl, [sp, #40]	; 0x28
   1a6e4:	blt	1c8e4 <main@@Base+0x9660>
   1a6e8:	ldrb	r0, [r1]
   1a6ec:	cmp	r0, #32
   1a6f0:	bls	1c8c4 <main@@Base+0x9640>
   1a6f4:	ldr	r5, [sp, #44]	; 0x2c
   1a6f8:	ldr	r8, [sp, #36]	; 0x24
   1a6fc:	ldr	sl, [sp, #40]	; 0x28
   1a700:	mov	r4, r1
   1a704:	b	182d0 <main@@Base+0x504c>
   1a708:	mov	r0, r8
   1a70c:	mov	r1, r5
   1a710:	b	1b720 <main@@Base+0x849c>
   1a714:	ldr	r5, [sp, #44]	; 0x2c
   1a718:	ldr	r8, [sp, #36]	; 0x24
   1a71c:	bne	1a72c <main@@Base+0x74a8>
   1a720:	ldrb	r0, [r4, #2]!
   1a724:	cmp	r0, #32
   1a728:	bhi	1a73c <main@@Base+0x74b8>
   1a72c:	mov	r0, r8
   1a730:	mov	r2, r5
   1a734:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1a738:	mov	r4, r0
   1a73c:	cmp	r4, r5
   1a740:	mov	r2, r5
   1a744:	beq	1a798 <main@@Base+0x7514>
   1a748:	ldrb	r0, [r4]
   1a74c:	cmp	r0, #125	; 0x7d
   1a750:	bne	1a794 <main@@Base+0x7510>
   1a754:	ldr	r5, [sp, #44]	; 0x2c
   1a758:	ldr	r8, [sp, #36]	; 0x24
   1a75c:	ldr	sl, [sp, #40]	; 0x28
   1a760:	add	r1, r4, #1
   1a764:	sub	r0, r5, r1
   1a768:	cmp	r0, #2
   1a76c:	blt	1caf0 <main@@Base+0x986c>
   1a770:	ldrb	r0, [r1]
   1a774:	cmp	r0, #32
   1a778:	bhi	1b5d8 <main@@Base+0x8354>
   1a77c:	ldr	r5, [sp, #44]	; 0x2c
   1a780:	ldr	r8, [sp, #36]	; 0x24
   1a784:	ldr	sl, [sp, #40]	; 0x28
   1a788:	bne	1caf0 <main@@Base+0x986c>
   1a78c:	ldrb	r0, [r4, #2]!
   1a790:	b	1cae8 <main@@Base+0x9864>
   1a794:	mov	r2, r4
   1a798:	ldr	r5, [sp, #44]	; 0x2c
   1a79c:	ldr	r8, [sp, #36]	; 0x24
   1a7a0:	cmp	r2, r5
   1a7a4:	mov	r9, r5
   1a7a8:	beq	1a7fc <main@@Base+0x7578>
   1a7ac:	ldrb	r0, [r2]
   1a7b0:	cmp	r0, #46	; 0x2e
   1a7b4:	beq	1a7d0 <main@@Base+0x754c>
   1a7b8:	cmp	r0, #34	; 0x22
   1a7bc:	bne	1a7ec <main@@Base+0x7568>
   1a7c0:	ldr	r0, [sp, #32]
   1a7c4:	mov	r1, #0
   1a7c8:	add	r9, r2, #1
   1a7cc:	b	1a7f8 <main@@Base+0x7574>
   1a7d0:	mov	r1, r2
   1a7d4:	mov	r0, r8
   1a7d8:	mov	r2, r5
   1a7dc:	mov	r3, #5
   1a7e0:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1a7e4:	mov	r9, r0
   1a7e8:	b	1a7fc <main@@Base+0x7578>
   1a7ec:	ldr	r0, [sp, #32]
   1a7f0:	mov	r1, #1
   1a7f4:	mov	r9, r2
   1a7f8:	str	r1, [r0]
   1a7fc:	sub	lr, r5, r9
   1a800:	mov	r0, #8
   1a804:	cmp	lr, #8
   1a808:	movcc	r0, lr
   1a80c:	sub	r7, r0, #1
   1a810:	cmp	r7, #7
   1a814:	bhi	1a998 <main@@Base+0x7714>
   1a818:	add	r4, pc, #32
   1a81c:	mov	r1, #0
   1a820:	mov	ip, #0
   1a824:	mov	r8, #0
   1a828:	mov	r6, #0
   1a82c:	mov	r3, #0
   1a830:	mov	r5, #0
   1a834:	mov	r2, #0
   1a838:	mov	r0, #0
   1a83c:	ldr	pc, [r4, r7, lsl #2]
   1a840:	andeq	sl, r1, r4, lsr #17
   1a844:	muleq	r1, ip, r8
   1a848:	muleq	r1, r4, r8
   1a84c:	andeq	sl, r1, ip, lsl #17
   1a850:	andeq	sl, r1, r0, lsl #17
   1a854:	andeq	sl, r1, r4, ror r8
   1a858:	andeq	sl, r1, r4, ror #16
   1a85c:	andeq	sl, r1, r0, ror #16
   1a860:	ldrb	ip, [r9, #7]
   1a864:	ldrb	r0, [r9, #6]
   1a868:	mov	r8, r1
   1a86c:	orr	r0, ip, r0, lsl #8
   1a870:	mov	r1, r0
   1a874:	ldrb	r0, [r9, #5]
   1a878:	mov	r6, r8
   1a87c:	orr	r1, r1, r0, lsl #16
   1a880:	ldrb	r0, [r9, #4]
   1a884:	mov	r3, r6
   1a888:	orr	r1, r1, r0, lsl #24
   1a88c:	ldrb	r0, [r9, #3]
   1a890:	orr	r5, r0, r3
   1a894:	ldrb	r0, [r9, #2]
   1a898:	orr	r2, r5, r0, lsl #8
   1a89c:	ldrb	r0, [r9, #1]
   1a8a0:	orr	r0, r2, r0, lsl #16
   1a8a4:	ldrb	r2, [r9]
   1a8a8:	orr	r2, r0, r2, lsl #24
   1a8ac:	movw	r0, #0
   1a8b0:	movt	r0, #25956	; 0x6564
   1a8b4:	subs	r0, r1, r0
   1a8b8:	movw	r0, #29556	; 0x7374
   1a8bc:	movt	r0, #28261	; 0x6e65
   1a8c0:	sbcs	r0, r2, r0
   1a8c4:	bcs	1a928 <main@@Base+0x76a4>
   1a8c8:	movw	r0, #29793	; 0x7461
   1a8cc:	ldr	r5, [sp, #44]	; 0x2c
   1a8d0:	ldr	r8, [sp, #36]	; 0x24
   1a8d4:	movt	r0, #25697	; 0x6461
   1a8d8:	teq	r2, r0
   1a8dc:	bne	1a998 <main@@Base+0x7714>
   1a8e0:	cmp	lr, #5
   1a8e4:	mov	r1, r9
   1a8e8:	blt	1ac44 <main@@Base+0x79c0>
   1a8ec:	ldr	r1, [sp, #32]
   1a8f0:	mov	r2, r9
   1a8f4:	ldrb	r0, [r2, #4]!
   1a8f8:	ldr	r1, [r1]
   1a8fc:	cmp	r1, #0
   1a900:	beq	1aa10 <main@@Base+0x778c>
   1a904:	cmp	r0, #33	; 0x21
   1a908:	bcc	1a918 <main@@Base+0x7694>
   1a90c:	cmp	r0, #58	; 0x3a
   1a910:	mov	r1, r9
   1a914:	bne	1ac44 <main@@Base+0x79c0>
   1a918:	ldr	r0, [sp, #32]
   1a91c:	mov	r1, #0
   1a920:	str	r1, [r0]
   1a924:	b	1aa20 <main@@Base+0x779c>
   1a928:	movw	r0, #29292	; 0x726c
   1a92c:	lsr	r3, r1, #8
   1a930:	movw	r7, #29793	; 0x7461
   1a934:	movt	r0, #117	; 0x75
   1a938:	orr	r3, r3, r2, lsl #24
   1a93c:	movt	r7, #25697	; 0x6461
   1a940:	eor	r0, r0, r2, lsr #8
   1a944:	eor	r3, r3, r7
   1a948:	orrs	r0, r3, r0
   1a94c:	bne	1a9a4 <main@@Base+0x7720>
   1a950:	cmp	lr, #8
   1a954:	mov	r1, r9
   1a958:	blt	1aca4 <main@@Base+0x7a20>
   1a95c:	ldr	r1, [sp, #32]
   1a960:	mov	r2, r9
   1a964:	ldrb	r0, [r2, #7]!
   1a968:	ldr	r1, [r1]
   1a96c:	cmp	r1, #0
   1a970:	beq	1aa44 <main@@Base+0x77c0>
   1a974:	cmp	r0, #33	; 0x21
   1a978:	bcc	1a988 <main@@Base+0x7704>
   1a97c:	cmp	r0, #58	; 0x3a
   1a980:	mov	r1, r9
   1a984:	bne	1aca4 <main@@Base+0x7a20>
   1a988:	ldr	r0, [sp, #32]
   1a98c:	mov	r1, #0
   1a990:	str	r1, [r0]
   1a994:	b	1aa54 <main@@Base+0x77d0>
   1a998:	mov	r0, r8
   1a99c:	mov	r1, r9
   1a9a0:	b	1ad70 <main@@Base+0x7aec>
   1a9a4:	movw	r0, #29556	; 0x7374
   1a9a8:	bfc	r1, #0, #16
   1a9ac:	movt	r0, #28261	; 0x6e65
   1a9b0:	eor	r0, r2, r0
   1a9b4:	movw	r2, #0
   1a9b8:	movt	r2, #25956	; 0x6564
   1a9bc:	eor	r1, r1, r2
   1a9c0:	orrs	r0, r1, r0
   1a9c4:	bne	1ad60 <main@@Base+0x7adc>
   1a9c8:	cmp	lr, #7
   1a9cc:	mov	r1, r9
   1a9d0:	blt	1ad04 <main@@Base+0x7a80>
   1a9d4:	ldr	r1, [sp, #32]
   1a9d8:	mov	r2, r9
   1a9dc:	ldrb	r0, [r2, #6]!
   1a9e0:	ldr	r1, [r1]
   1a9e4:	cmp	r1, #0
   1a9e8:	beq	1aa78 <main@@Base+0x77f4>
   1a9ec:	cmp	r0, #33	; 0x21
   1a9f0:	bcc	1aa00 <main@@Base+0x777c>
   1a9f4:	cmp	r0, #58	; 0x3a
   1a9f8:	mov	r1, r9
   1a9fc:	bne	1ad04 <main@@Base+0x7a80>
   1aa00:	ldr	r0, [sp, #32]
   1aa04:	mov	r1, #0
   1aa08:	str	r1, [r0]
   1aa0c:	b	1aa88 <main@@Base+0x7804>
   1aa10:	cmp	r0, #34	; 0x22
   1aa14:	mov	r1, r9
   1aa18:	bne	1ac44 <main@@Base+0x79c0>
   1aa1c:	add	r2, r9, #5
   1aa20:	ldr	r0, [sp, #44]	; 0x2c
   1aa24:	sub	r0, r0, r2
   1aa28:	cmp	r0, #2
   1aa2c:	blt	1aac0 <main@@Base+0x783c>
   1aa30:	ldrb	r0, [r2]
   1aa34:	cmp	r0, #32
   1aa38:	bls	1aaac <main@@Base+0x7828>
   1aa3c:	mov	r1, r2
   1aa40:	b	1aad4 <main@@Base+0x7850>
   1aa44:	cmp	r0, #34	; 0x22
   1aa48:	mov	r1, r9
   1aa4c:	bne	1aca4 <main@@Base+0x7a20>
   1aa50:	add	r2, r9, #8
   1aa54:	ldr	r0, [sp, #44]	; 0x2c
   1aa58:	sub	r0, r0, r2
   1aa5c:	cmp	r0, #2
   1aa60:	blt	1ab3c <main@@Base+0x78b8>
   1aa64:	ldrb	r0, [r2]
   1aa68:	cmp	r0, #32
   1aa6c:	bls	1ab28 <main@@Base+0x78a4>
   1aa70:	mov	r1, r2
   1aa74:	b	1ab50 <main@@Base+0x78cc>
   1aa78:	cmp	r0, #34	; 0x22
   1aa7c:	mov	r1, r9
   1aa80:	bne	1ad04 <main@@Base+0x7a80>
   1aa84:	add	r2, r9, #7
   1aa88:	ldr	r0, [sp, #44]	; 0x2c
   1aa8c:	sub	r0, r0, r2
   1aa90:	cmp	r0, #2
   1aa94:	blt	1abb8 <main@@Base+0x7934>
   1aa98:	ldrb	r0, [r2]
   1aa9c:	cmp	r0, #32
   1aaa0:	bls	1aba4 <main@@Base+0x7920>
   1aaa4:	mov	r1, r2
   1aaa8:	b	1abcc <main@@Base+0x7948>
   1aaac:	bne	1aac0 <main@@Base+0x783c>
   1aab0:	mov	r1, r2
   1aab4:	ldrb	r0, [r1, #1]!
   1aab8:	cmp	r0, #32
   1aabc:	bhi	1aad4 <main@@Base+0x7850>
   1aac0:	mov	r1, r2
   1aac4:	ldr	r0, [sp, #36]	; 0x24
   1aac8:	ldr	r2, [sp, #44]	; 0x2c
   1aacc:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1aad0:	mov	r1, r0
   1aad4:	ldr	r0, [sp, #44]	; 0x2c
   1aad8:	cmp	r1, r0
   1aadc:	beq	1ab14 <main@@Base+0x7890>
   1aae0:	ldrb	r0, [r1]
   1aae4:	cmp	r0, #58	; 0x3a
   1aae8:	bne	1ab14 <main@@Base+0x7890>
   1aaec:	ldr	r0, [sp, #44]	; 0x2c
   1aaf0:	add	r2, r1, #1
   1aaf4:	sub	r0, r0, r2
   1aaf8:	cmp	r0, #2
   1aafc:	blt	1ac30 <main@@Base+0x79ac>
   1ab00:	ldrb	r0, [r2]
   1ab04:	cmp	r0, #32
   1ab08:	bls	1ac20 <main@@Base+0x799c>
   1ab0c:	mov	r1, r2
   1ab10:	b	1ac44 <main@@Base+0x79c0>
   1ab14:	ldr	r0, [sp, #36]	; 0x24
   1ab18:	ldr	r2, [sp, #44]	; 0x2c
   1ab1c:	mov	r3, #4
   1ab20:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1ab24:	b	1ac40 <main@@Base+0x79bc>
   1ab28:	bne	1ab3c <main@@Base+0x78b8>
   1ab2c:	mov	r1, r2
   1ab30:	ldrb	r0, [r1, #1]!
   1ab34:	cmp	r0, #32
   1ab38:	bhi	1ab50 <main@@Base+0x78cc>
   1ab3c:	mov	r1, r2
   1ab40:	ldr	r0, [sp, #36]	; 0x24
   1ab44:	ldr	r2, [sp, #44]	; 0x2c
   1ab48:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1ab4c:	mov	r1, r0
   1ab50:	ldr	r0, [sp, #44]	; 0x2c
   1ab54:	cmp	r1, r0
   1ab58:	beq	1ab90 <main@@Base+0x790c>
   1ab5c:	ldrb	r0, [r1]
   1ab60:	cmp	r0, #58	; 0x3a
   1ab64:	bne	1ab90 <main@@Base+0x790c>
   1ab68:	ldr	r0, [sp, #44]	; 0x2c
   1ab6c:	add	r2, r1, #1
   1ab70:	sub	r0, r0, r2
   1ab74:	cmp	r0, #2
   1ab78:	blt	1ac90 <main@@Base+0x7a0c>
   1ab7c:	ldrb	r0, [r2]
   1ab80:	cmp	r0, #32
   1ab84:	bls	1ac80 <main@@Base+0x79fc>
   1ab88:	mov	r1, r2
   1ab8c:	b	1aca4 <main@@Base+0x7a20>
   1ab90:	ldr	r0, [sp, #36]	; 0x24
   1ab94:	ldr	r2, [sp, #44]	; 0x2c
   1ab98:	mov	r3, #4
   1ab9c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1aba0:	b	1aca0 <main@@Base+0x7a1c>
   1aba4:	bne	1abb8 <main@@Base+0x7934>
   1aba8:	mov	r1, r2
   1abac:	ldrb	r0, [r1, #1]!
   1abb0:	cmp	r0, #32
   1abb4:	bhi	1abcc <main@@Base+0x7948>
   1abb8:	mov	r1, r2
   1abbc:	ldr	r0, [sp, #36]	; 0x24
   1abc0:	ldr	r2, [sp, #44]	; 0x2c
   1abc4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1abc8:	mov	r1, r0
   1abcc:	ldr	r0, [sp, #44]	; 0x2c
   1abd0:	cmp	r1, r0
   1abd4:	beq	1ac0c <main@@Base+0x7988>
   1abd8:	ldrb	r0, [r1]
   1abdc:	cmp	r0, #58	; 0x3a
   1abe0:	bne	1ac0c <main@@Base+0x7988>
   1abe4:	ldr	r0, [sp, #44]	; 0x2c
   1abe8:	add	r2, r1, #1
   1abec:	sub	r0, r0, r2
   1abf0:	cmp	r0, #2
   1abf4:	blt	1acf0 <main@@Base+0x7a6c>
   1abf8:	ldrb	r0, [r2]
   1abfc:	cmp	r0, #32
   1ac00:	bls	1ace0 <main@@Base+0x7a5c>
   1ac04:	mov	r1, r2
   1ac08:	b	1ad04 <main@@Base+0x7a80>
   1ac0c:	ldr	r0, [sp, #36]	; 0x24
   1ac10:	ldr	r2, [sp, #44]	; 0x2c
   1ac14:	mov	r3, #4
   1ac18:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1ac1c:	b	1ad00 <main@@Base+0x7a7c>
   1ac20:	bne	1ac30 <main@@Base+0x79ac>
   1ac24:	ldrb	r0, [r1, #2]!
   1ac28:	cmp	r0, #32
   1ac2c:	bhi	1ac44 <main@@Base+0x79c0>
   1ac30:	mov	r1, r2
   1ac34:	ldr	r0, [sp, #36]	; 0x24
   1ac38:	ldr	r2, [sp, #44]	; 0x2c
   1ac3c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1ac40:	mov	r1, r0
   1ac44:	cmp	r9, r1
   1ac48:	beq	1ad60 <main@@Base+0x7adc>
   1ac4c:	mov	r0, #0
   1ac50:	ldr	r2, [sp, #44]	; 0x2c
   1ac54:	sub	r3, fp, #56	; 0x38
   1ac58:	str	r0, [sp]
   1ac5c:	ldr	r0, [sp, #36]	; 0x24
   1ac60:	bl	2eefc <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1ac64:	mov	r4, r0
   1ac68:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ac6c:	cmp	r0, #0
   1ac70:	beq	1bf7c <main@@Base+0x8cf8>
   1ac74:	ldr	r0, [sp, #36]	; 0x24
   1ac78:	mov	r1, #0
   1ac7c:	b	1ad3c <main@@Base+0x7ab8>
   1ac80:	bne	1ac90 <main@@Base+0x7a0c>
   1ac84:	ldrb	r0, [r1, #2]!
   1ac88:	cmp	r0, #32
   1ac8c:	bhi	1aca4 <main@@Base+0x7a20>
   1ac90:	mov	r1, r2
   1ac94:	ldr	r0, [sp, #36]	; 0x24
   1ac98:	ldr	r2, [sp, #44]	; 0x2c
   1ac9c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1aca0:	mov	r1, r0
   1aca4:	cmp	r9, r1
   1aca8:	beq	1ad60 <main@@Base+0x7adc>
   1acac:	mov	r0, #1
   1acb0:	ldr	r2, [sp, #44]	; 0x2c
   1acb4:	sub	r3, fp, #56	; 0x38
   1acb8:	str	r0, [sp]
   1acbc:	ldr	r0, [sp, #36]	; 0x24
   1acc0:	bl	2eefc <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1acc4:	mov	r4, r0
   1acc8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1accc:	cmp	r0, #0
   1acd0:	beq	1bf7c <main@@Base+0x8cf8>
   1acd4:	ldr	r0, [sp, #36]	; 0x24
   1acd8:	mov	r1, #1
   1acdc:	b	1ad3c <main@@Base+0x7ab8>
   1ace0:	bne	1acf0 <main@@Base+0x7a6c>
   1ace4:	ldrb	r0, [r1, #2]!
   1ace8:	cmp	r0, #32
   1acec:	bhi	1ad04 <main@@Base+0x7a80>
   1acf0:	mov	r1, r2
   1acf4:	ldr	r0, [sp, #36]	; 0x24
   1acf8:	ldr	r2, [sp, #44]	; 0x2c
   1acfc:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1ad00:	mov	r1, r0
   1ad04:	cmp	r9, r1
   1ad08:	beq	1ad60 <main@@Base+0x7adc>
   1ad0c:	mov	r0, #0
   1ad10:	ldr	r2, [sp, #44]	; 0x2c
   1ad14:	sub	r3, fp, #56	; 0x38
   1ad18:	str	r0, [sp]
   1ad1c:	ldr	r0, [sp, #36]	; 0x24
   1ad20:	bl	2eefc <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1ad24:	mov	r4, r0
   1ad28:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ad2c:	cmp	r0, #0
   1ad30:	beq	1bf7c <main@@Base+0x8cf8>
   1ad34:	ldr	r0, [sp, #36]	; 0x24
   1ad38:	mov	r1, #2
   1ad3c:	ldr	r0, [r0]
   1ad40:	bl	2b448 <flatcc_builder_table_add_offset@@Base>
   1ad44:	cmp	r0, #0
   1ad48:	beq	1bf7c <main@@Base+0x8cf8>
   1ad4c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1ad50:	str	r1, [r0]
   1ad54:	ldr	r5, [sp, #44]	; 0x2c
   1ad58:	ldr	r8, [sp, #36]	; 0x24
   1ad5c:	b	1ad7c <main@@Base+0x7af8>
   1ad60:	ldr	r8, [sp, #36]	; 0x24
   1ad64:	ldr	r5, [sp, #44]	; 0x2c
   1ad68:	mov	r1, r9
   1ad6c:	mov	r0, r8
   1ad70:	mov	r2, r5
   1ad74:	bl	2d5e0 <flatcc_json_parser_unmatched_symbol@@Base>
   1ad78:	mov	r4, r0
   1ad7c:	sub	r0, r5, r4
   1ad80:	cmp	r0, #2
   1ad84:	blt	1adb0 <main@@Base+0x7b2c>
   1ad88:	ldrb	r0, [r4]
   1ad8c:	cmp	r0, #32
   1ad90:	bls	1ad9c <main@@Base+0x7b18>
   1ad94:	mov	r2, r4
   1ad98:	b	1adc4 <main@@Base+0x7b40>
   1ad9c:	bne	1adb0 <main@@Base+0x7b2c>
   1ada0:	mov	r2, r4
   1ada4:	ldrb	r0, [r2, #1]!
   1ada8:	cmp	r0, #32
   1adac:	bhi	1adc4 <main@@Base+0x7b40>
   1adb0:	mov	r0, r8
   1adb4:	mov	r1, r4
   1adb8:	mov	r2, r5
   1adbc:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1adc0:	mov	r2, r0
   1adc4:	cmp	r2, r5
   1adc8:	beq	1b590 <main@@Base+0x830c>
   1adcc:	ldrb	r0, [r2]
   1add0:	cmp	r0, #44	; 0x2c
   1add4:	bne	1b5a8 <main@@Base+0x8324>
   1add8:	add	r1, r2, #1
   1addc:	sub	r0, r5, r1
   1ade0:	cmp	r0, #2
   1ade4:	blt	1ae0c <main@@Base+0x7b88>
   1ade8:	ldrb	r0, [r1]
   1adec:	cmp	r0, #32
   1adf0:	bls	1adfc <main@@Base+0x7b78>
   1adf4:	mov	r2, r1
   1adf8:	b	1ae1c <main@@Base+0x7b98>
   1adfc:	bne	1ae0c <main@@Base+0x7b88>
   1ae00:	ldrb	r0, [r2, #2]!
   1ae04:	cmp	r0, #32
   1ae08:	bhi	1ae1c <main@@Base+0x7b98>
   1ae0c:	mov	r0, r8
   1ae10:	mov	r2, r5
   1ae14:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1ae18:	mov	r2, r0
   1ae1c:	cmp	r2, r5
   1ae20:	beq	1b638 <main@@Base+0x83b4>
   1ae24:	ldrb	r0, [r2]
   1ae28:	cmp	r0, #125	; 0x7d
   1ae2c:	bne	1a7a0 <main@@Base+0x751c>
   1ae30:	b	1b5b8 <main@@Base+0x8334>
   1ae34:	ldr	r5, [sp, #44]	; 0x2c
   1ae38:	ldr	r8, [sp, #36]	; 0x24
   1ae3c:	bne	1ae4c <main@@Base+0x7bc8>
   1ae40:	ldrb	r0, [r4, #2]!
   1ae44:	cmp	r0, #32
   1ae48:	bhi	1ae5c <main@@Base+0x7bd8>
   1ae4c:	mov	r0, r8
   1ae50:	mov	r2, r5
   1ae54:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1ae58:	mov	r4, r0
   1ae5c:	cmp	r4, r5
   1ae60:	beq	1aea4 <main@@Base+0x7c20>
   1ae64:	ldrb	r0, [r4]
   1ae68:	cmp	r0, #93	; 0x5d
   1ae6c:	bne	1aea0 <main@@Base+0x7c1c>
   1ae70:	ldr	r5, [sp, #44]	; 0x2c
   1ae74:	ldr	r8, [sp, #36]	; 0x24
   1ae78:	ldr	sl, [sp, #40]	; 0x28
   1ae7c:	add	r1, r4, #1
   1ae80:	sub	r0, r5, r1
   1ae84:	cmp	r0, #2
   1ae88:	blt	1c910 <main@@Base+0x968c>
   1ae8c:	ldrb	r0, [r1]
   1ae90:	cmp	r0, #32
   1ae94:	bls	1c8f4 <main@@Base+0x9670>
   1ae98:	mov	r4, r1
   1ae9c:	b	1cccc <main@@Base+0x9a48>
   1aea0:	mov	r5, r4
   1aea4:	mov	r0, #0
   1aea8:	mov	r1, #1
   1aeac:	str	r0, [sp, #60]	; 0x3c
   1aeb0:	str	r0, [sp, #56]	; 0x38
   1aeb4:	ldr	r0, [sp, #36]	; 0x24
   1aeb8:	ldr	r0, [r0]
   1aebc:	bl	29764 <flatcc_builder_extend_vector@@Base>
   1aec0:	cmp	r0, #0
   1aec4:	beq	1cde0 <main@@Base+0x9b5c>
   1aec8:	mov	r4, r5
   1aecc:	ldr	r5, [sp, #44]	; 0x2c
   1aed0:	ldr	r8, [sp, #36]	; 0x24
   1aed4:	mov	r7, r0
   1aed8:	mov	r0, #0
   1aedc:	cmp	r4, r5
   1aee0:	str	r0, [fp, #-52]	; 0xffffffcc
   1aee4:	str	r0, [fp, #-56]	; 0xffffffc8
   1aee8:	str	r0, [sp, #60]	; 0x3c
   1aeec:	str	r0, [sp, #56]	; 0x38
   1aef0:	str	r0, [fp, #-60]	; 0xffffffc4
   1aef4:	beq	1af54 <main@@Base+0x7cd0>
   1aef8:	sub	r0, fp, #56	; 0x38
   1aefc:	mov	r1, r4
   1af00:	mov	r2, r5
   1af04:	sub	r3, fp, #60	; 0x3c
   1af08:	str	r0, [sp]
   1af0c:	mov	r0, r8
   1af10:	bl	2edac <flatcc_json_parser_integer@@Base>
   1af14:	cmp	r0, r4
   1af18:	beq	1af60 <main@@Base+0x7cdc>
   1af1c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1af20:	mov	r1, r0
   1af24:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1af28:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1af2c:	cmp	r2, #0
   1af30:	beq	1af70 <main@@Base+0x7cec>
   1af34:	rsbs	r2, r0, #0
   1af38:	mov	r2, #-2147483648	; 0x80000000
   1af3c:	sbcs	r2, r2, r3
   1af40:	bcs	1afa0 <main@@Base+0x7d1c>
   1af44:	ldr	r8, [sp, #36]	; 0x24
   1af48:	ldr	r5, [sp, #44]	; 0x2c
   1af4c:	mov	r3, #8
   1af50:	b	1af84 <main@@Base+0x7d00>
   1af54:	mov	r3, #0
   1af58:	mov	r1, r5
   1af5c:	b	1afb8 <main@@Base+0x7d34>
   1af60:	mov	r0, #0
   1af64:	mov	r3, #0
   1af68:	mov	r1, r4
   1af6c:	b	1afb8 <main@@Base+0x7d34>
   1af70:	cmn	r3, #1
   1af74:	bgt	1afa8 <main@@Base+0x7d24>
   1af78:	ldr	r8, [sp, #36]	; 0x24
   1af7c:	ldr	r5, [sp, #44]	; 0x2c
   1af80:	mov	r3, #7
   1af84:	mov	r0, r8
   1af88:	mov	r2, r5
   1af8c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1af90:	mov	r1, r0
   1af94:	mov	r0, #0
   1af98:	mov	r3, #0
   1af9c:	b	1afb8 <main@@Base+0x7d34>
   1afa0:	rsbs	r0, r0, #0
   1afa4:	rsc	r3, r3, #0
   1afa8:	ldr	r5, [sp, #44]	; 0x2c
   1afac:	ldr	r8, [sp, #36]	; 0x24
   1afb0:	str	r0, [sp, #56]	; 0x38
   1afb4:	str	r3, [sp, #60]	; 0x3c
   1afb8:	cmp	r4, r1
   1afbc:	bne	1affc <main@@Base+0x7d78>
   1afc0:	movw	r3, #16776	; 0x4188
   1afc4:	add	r0, sp, #56	; 0x38
   1afc8:	mov	r1, r4
   1afcc:	mov	r2, r5
   1afd0:	movt	r3, #4
   1afd4:	str	r0, [sp]
   1afd8:	mov	r0, r8
   1afdc:	bl	22958 <main@@Base+0xf6d4>
   1afe0:	mov	r1, r0
   1afe4:	cmp	r0, r4
   1afe8:	cmpne	r1, r5
   1afec:	beq	1cdc0 <main@@Base+0x9b3c>
   1aff0:	ldr	r0, [sp, #56]	; 0x38
   1aff4:	ldr	r3, [sp, #60]	; 0x3c
   1aff8:	ldr	r8, [sp, #36]	; 0x24
   1affc:	stm	r7, {r0, r3}
   1b000:	sub	r0, r5, r1
   1b004:	cmp	r0, #2
   1b008:	blt	1b034 <main@@Base+0x7db0>
   1b00c:	ldrb	r0, [r1]
   1b010:	cmp	r0, #32
   1b014:	bls	1b020 <main@@Base+0x7d9c>
   1b018:	mov	r4, r1
   1b01c:	b	1b044 <main@@Base+0x7dc0>
   1b020:	bne	1b034 <main@@Base+0x7db0>
   1b024:	mov	r4, r1
   1b028:	ldrb	r0, [r4, #1]!
   1b02c:	cmp	r0, #32
   1b030:	bhi	1b044 <main@@Base+0x7dc0>
   1b034:	mov	r0, r8
   1b038:	mov	r2, r5
   1b03c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1b040:	mov	r4, r0
   1b044:	cmp	r4, r5
   1b048:	beq	1cb10 <main@@Base+0x988c>
   1b04c:	ldrb	r0, [r4]
   1b050:	cmp	r0, #44	; 0x2c
   1b054:	bne	1cb48 <main@@Base+0x98c4>
   1b058:	add	r1, r4, #1
   1b05c:	sub	r0, r5, r1
   1b060:	cmp	r0, #2
   1b064:	blt	1b08c <main@@Base+0x7e08>
   1b068:	ldrb	r0, [r1]
   1b06c:	cmp	r0, #32
   1b070:	bls	1b07c <main@@Base+0x7df8>
   1b074:	mov	r4, r1
   1b078:	b	1b09c <main@@Base+0x7e18>
   1b07c:	bne	1b08c <main@@Base+0x7e08>
   1b080:	ldrb	r0, [r4, #2]!
   1b084:	cmp	r0, #32
   1b088:	bhi	1b09c <main@@Base+0x7e18>
   1b08c:	mov	r0, r8
   1b090:	mov	r2, r5
   1b094:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1b098:	mov	r4, r0
   1b09c:	cmp	r4, r5
   1b0a0:	beq	1cb90 <main@@Base+0x990c>
   1b0a4:	ldrb	r0, [r4]
   1b0a8:	cmp	r0, #93	; 0x5d
   1b0ac:	beq	1cba8 <main@@Base+0x9924>
   1b0b0:	mov	r0, #0
   1b0b4:	mov	r1, #1
   1b0b8:	str	r0, [sp, #60]	; 0x3c
   1b0bc:	str	r0, [sp, #56]	; 0x38
   1b0c0:	ldr	r0, [r8]
   1b0c4:	bl	29764 <flatcc_builder_extend_vector@@Base>
   1b0c8:	mov	r7, r0
   1b0cc:	cmp	r0, #0
   1b0d0:	bne	1aed8 <main@@Base+0x7c54>
   1b0d4:	b	13340 <main@@Base+0xbc>
   1b0d8:	ldr	r5, [sp, #44]	; 0x2c
   1b0dc:	ldr	r8, [sp, #36]	; 0x24
   1b0e0:	ldr	sl, [sp, #40]	; 0x28
   1b0e4:	bne	1b0f4 <main@@Base+0x7e70>
   1b0e8:	ldrb	r0, [r9, #2]!
   1b0ec:	cmp	r0, #32
   1b0f0:	bhi	1b104 <main@@Base+0x7e80>
   1b0f4:	mov	r0, r8
   1b0f8:	mov	r2, r5
   1b0fc:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1b100:	mov	r9, r0
   1b104:	cmp	r7, r9
   1b108:	beq	1b160 <main@@Base+0x7edc>
   1b10c:	ldr	r0, [r8]
   1b110:	mov	r1, #8
   1b114:	mov	r2, #8
   1b118:	mvn	r3, #-536870912	; 0xe0000000
   1b11c:	bl	29f5c <flatcc_builder_start_vector@@Base>
   1b120:	cmp	r0, #0
   1b124:	bne	1cdd4 <main@@Base+0x9b50>
   1b128:	cmp	r9, r5
   1b12c:	beq	1b16c <main@@Base+0x7ee8>
   1b130:	ldrb	r0, [r9]
   1b134:	cmp	r0, #91	; 0x5b
   1b138:	bne	1b16c <main@@Base+0x7ee8>
   1b13c:	add	r1, r9, #1
   1b140:	sub	r0, r5, r1
   1b144:	cmp	r0, #2
   1b148:	blt	1b750 <main@@Base+0x84cc>
   1b14c:	ldrb	r0, [r1]
   1b150:	cmp	r0, #32
   1b154:	bls	1b740 <main@@Base+0x84bc>
   1b158:	mov	r9, r1
   1b15c:	b	1b760 <main@@Base+0x84dc>
   1b160:	mov	r0, r8
   1b164:	mov	r1, r7
   1b168:	b	1bb9c <main@@Base+0x8918>
   1b16c:	ldr	r8, [sp, #36]	; 0x24
   1b170:	mov	r1, r9
   1b174:	mov	r2, r5
   1b178:	mov	r3, #22
   1b17c:	mov	r0, r8
   1b180:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1b184:	mov	r9, r0
   1b188:	ldr	r0, [r8]
   1b18c:	bl	2af88 <flatcc_builder_end_vector@@Base>
   1b190:	cmp	r0, #0
   1b194:	str	r0, [sp, #52]	; 0x34
   1b198:	beq	1cdcc <main@@Base+0x9b48>
   1b19c:	ldr	r0, [r8]
   1b1a0:	mov	r1, #33	; 0x21
   1b1a4:	bl	2b448 <flatcc_builder_table_add_offset@@Base>
   1b1a8:	cmp	r0, #0
   1b1ac:	beq	1cdcc <main@@Base+0x9b48>
   1b1b0:	ldr	r1, [sp, #52]	; 0x34
   1b1b4:	mov	r4, r9
   1b1b8:	str	r1, [r0]
   1b1bc:	b	1bd18 <main@@Base+0x8a94>
   1b1c0:	mov	r6, r0
   1b1c4:	ldr	r5, [sp, #44]	; 0x2c
   1b1c8:	ldr	r8, [sp, #36]	; 0x24
   1b1cc:	str	r6, [fp, #-60]	; 0xffffffc4
   1b1d0:	ldr	sl, [sp, #40]	; 0x28
   1b1d4:	cmp	r7, r4
   1b1d8:	bne	1b220 <main@@Base+0x7f9c>
   1b1dc:	movw	r3, #16668	; 0x411c
   1b1e0:	sub	r0, fp, #60	; 0x3c
   1b1e4:	mov	r1, r7
   1b1e8:	mov	r2, r5
   1b1ec:	movt	r3, #4
   1b1f0:	str	r0, [sp]
   1b1f4:	mov	r0, r8
   1b1f8:	bl	2271c <main@@Base+0xf498>
   1b1fc:	cmp	r0, r7
   1b200:	mov	r4, r0
   1b204:	ldrne	r1, [sp, #44]	; 0x2c
   1b208:	cmpne	r4, r1
   1b20c:	beq	1ce04 <main@@Base+0x9b80>
   1b210:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1b214:	ldr	r5, [sp, #44]	; 0x2c
   1b218:	ldr	r8, [sp, #36]	; 0x24
   1b21c:	ldr	sl, [sp, #40]	; 0x28
   1b220:	cmp	r6, #0
   1b224:	bne	1b234 <main@@Base+0x7fb0>
   1b228:	ldrb	r0, [r8, #8]
   1b22c:	tst	r0, #2
   1b230:	beq	1bba8 <main@@Base+0x8924>
   1b234:	ldr	r0, [r8]
   1b238:	mov	r1, #20
   1b23c:	mov	r2, #4
   1b240:	mov	r3, #4
   1b244:	bl	2b574 <flatcc_builder_table_add@@Base>
   1b248:	cmp	r0, #0
   1b24c:	beq	1ce04 <main@@Base+0x9b80>
   1b250:	str	r6, [r0]
   1b254:	b	1bba8 <main@@Base+0x8924>
   1b258:	ldr	r5, [sp, #44]	; 0x2c
   1b25c:	ldr	r8, [sp, #36]	; 0x24
   1b260:	ldr	sl, [sp, #40]	; 0x28
   1b264:	bne	1b274 <main@@Base+0x7ff0>
   1b268:	ldrb	r0, [r7, #2]!
   1b26c:	cmp	r0, #32
   1b270:	bhi	1b284 <main@@Base+0x8000>
   1b274:	mov	r0, r8
   1b278:	mov	r2, r5
   1b27c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1b280:	mov	r7, r0
   1b284:	cmp	r4, r7
   1b288:	beq	1bb94 <main@@Base+0x8910>
   1b28c:	mov	r6, #0
   1b290:	cmp	r7, r5
   1b294:	str	r6, [fp, #-52]	; 0xffffffcc
   1b298:	str	r6, [fp, #-56]	; 0xffffffc8
   1b29c:	str	r6, [sp, #60]	; 0x3c
   1b2a0:	str	r6, [sp, #56]	; 0x38
   1b2a4:	str	r6, [fp, #-60]	; 0xffffffc4
   1b2a8:	beq	1b304 <main@@Base+0x8080>
   1b2ac:	sub	r0, fp, #56	; 0x38
   1b2b0:	mov	r1, r7
   1b2b4:	mov	r2, r5
   1b2b8:	sub	r3, fp, #60	; 0x3c
   1b2bc:	str	r0, [sp]
   1b2c0:	mov	r0, r8
   1b2c4:	bl	2edac <flatcc_json_parser_integer@@Base>
   1b2c8:	cmp	r0, r7
   1b2cc:	beq	1b310 <main@@Base+0x808c>
   1b2d0:	sub	r9, fp, #60	; 0x3c
   1b2d4:	mov	r4, r0
   1b2d8:	ldm	r9, {r0, r6, r9}
   1b2dc:	cmp	r0, #0
   1b2e0:	beq	1b320 <main@@Base+0x809c>
   1b2e4:	subs	r0, r6, #1
   1b2e8:	sbcs	r0, r9, #-2147483648	; 0x80000000
   1b2ec:	bcc	1b4f4 <main@@Base+0x8270>
   1b2f0:	ldr	r0, [sp, #36]	; 0x24
   1b2f4:	ldr	r2, [sp, #44]	; 0x2c
   1b2f8:	mov	r1, r4
   1b2fc:	mov	r3, #8
   1b300:	b	1b338 <main@@Base+0x80b4>
   1b304:	mov	r9, #0
   1b308:	mov	r4, r5
   1b30c:	b	1b504 <main@@Base+0x8280>
   1b310:	mov	r6, #0
   1b314:	mov	r9, #0
   1b318:	mov	r4, r7
   1b31c:	b	1b504 <main@@Base+0x8280>
   1b320:	cmn	r9, #1
   1b324:	bgt	1b4fc <main@@Base+0x8278>
   1b328:	ldr	r0, [sp, #36]	; 0x24
   1b32c:	ldr	r2, [sp, #44]	; 0x2c
   1b330:	mov	r1, r4
   1b334:	mov	r3, #7
   1b338:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1b33c:	mov	r4, r0
   1b340:	mov	r6, #0
   1b344:	mov	r9, #0
   1b348:	b	1b504 <main@@Base+0x8280>
   1b34c:	ldr	r5, [sp, #44]	; 0x2c
   1b350:	bne	1b360 <main@@Base+0x80dc>
   1b354:	ldrb	r0, [r4, #2]!
   1b358:	cmp	r0, #32
   1b35c:	bhi	1b370 <main@@Base+0x80ec>
   1b360:	ldr	r0, [sp, #36]	; 0x24
   1b364:	mov	r2, r5
   1b368:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1b36c:	mov	r4, r0
   1b370:	cmp	r4, r5
   1b374:	mov	r3, r5
   1b378:	beq	1b3c4 <main@@Base+0x8140>
   1b37c:	ldrb	r0, [r4]
   1b380:	cmp	r0, #125	; 0x7d
   1b384:	bne	1b3c0 <main@@Base+0x813c>
   1b388:	ldr	r5, [sp, #44]	; 0x2c
   1b38c:	ldr	r8, [sp, #36]	; 0x24
   1b390:	add	r1, r4, #1
   1b394:	sub	r0, r5, r1
   1b398:	cmp	r0, #2
   1b39c:	blt	1cc78 <main@@Base+0x99f4>
   1b3a0:	ldrb	r0, [r1]
   1b3a4:	cmp	r0, #32
   1b3a8:	bhi	1b994 <main@@Base+0x8710>
   1b3ac:	ldr	r5, [sp, #44]	; 0x2c
   1b3b0:	ldr	r8, [sp, #36]	; 0x24
   1b3b4:	bne	1cc78 <main@@Base+0x99f4>
   1b3b8:	ldrb	r0, [r4, #2]!
   1b3bc:	b	1cc70 <main@@Base+0x99ec>
   1b3c0:	mov	r3, r4
   1b3c4:	ldr	r5, [sp, #44]	; 0x2c
   1b3c8:	ldr	r8, [sp, #36]	; 0x24
   1b3cc:	cmp	r3, r5
   1b3d0:	mov	r1, r5
   1b3d4:	beq	1b42c <main@@Base+0x81a8>
   1b3d8:	ldrb	r0, [r3]
   1b3dc:	cmp	r0, #46	; 0x2e
   1b3e0:	beq	1b400 <main@@Base+0x817c>
   1b3e4:	cmp	r0, #34	; 0x22
   1b3e8:	bne	1b41c <main@@Base+0x8198>
   1b3ec:	ldr	r0, [sp, #32]
   1b3f0:	mov	r1, #0
   1b3f4:	str	r1, [r0]
   1b3f8:	add	r1, r3, #1
   1b3fc:	b	1b42c <main@@Base+0x81a8>
   1b400:	mov	r1, r3
   1b404:	mov	r0, r8
   1b408:	mov	r2, r5
   1b40c:	mov	r3, #5
   1b410:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1b414:	mov	r1, r0
   1b418:	b	1b42c <main@@Base+0x81a8>
   1b41c:	ldr	r0, [sp, #32]
   1b420:	mov	r1, #1
   1b424:	str	r1, [r0]
   1b428:	mov	r1, r3
   1b42c:	mov	r0, r8
   1b430:	mov	r2, r5
   1b434:	bl	2d5e0 <flatcc_json_parser_unmatched_symbol@@Base>
   1b438:	mov	r2, r0
   1b43c:	sub	r0, r5, r0
   1b440:	cmp	r0, #2
   1b444:	blt	1b470 <main@@Base+0x81ec>
   1b448:	ldrb	r0, [r2]
   1b44c:	cmp	r0, #32
   1b450:	bls	1b45c <main@@Base+0x81d8>
   1b454:	mov	r3, r2
   1b458:	b	1b484 <main@@Base+0x8200>
   1b45c:	bne	1b470 <main@@Base+0x81ec>
   1b460:	mov	r3, r2
   1b464:	ldrb	r0, [r3, #1]!
   1b468:	cmp	r0, #32
   1b46c:	bhi	1b484 <main@@Base+0x8200>
   1b470:	mov	r1, r2
   1b474:	mov	r0, r8
   1b478:	mov	r2, r5
   1b47c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1b480:	mov	r3, r0
   1b484:	cmp	r3, r5
   1b488:	beq	1b960 <main@@Base+0x86dc>
   1b48c:	ldrb	r0, [r3]
   1b490:	cmp	r0, #44	; 0x2c
   1b494:	bne	1b968 <main@@Base+0x86e4>
   1b498:	add	r1, r3, #1
   1b49c:	sub	r0, r5, r1
   1b4a0:	cmp	r0, #2
   1b4a4:	blt	1b4cc <main@@Base+0x8248>
   1b4a8:	ldrb	r0, [r1]
   1b4ac:	cmp	r0, #32
   1b4b0:	bls	1b4bc <main@@Base+0x8238>
   1b4b4:	mov	r3, r1
   1b4b8:	b	1b4dc <main@@Base+0x8258>
   1b4bc:	bne	1b4cc <main@@Base+0x8248>
   1b4c0:	ldrb	r0, [r3, #2]!
   1b4c4:	cmp	r0, #32
   1b4c8:	bhi	1b4dc <main@@Base+0x8258>
   1b4cc:	mov	r0, r8
   1b4d0:	mov	r2, r5
   1b4d4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1b4d8:	mov	r3, r0
   1b4dc:	cmp	r3, r5
   1b4e0:	beq	1b9a4 <main@@Base+0x8720>
   1b4e4:	ldrb	r0, [r3]
   1b4e8:	cmp	r0, #125	; 0x7d
   1b4ec:	bne	1b3cc <main@@Base+0x8148>
   1b4f0:	b	1b978 <main@@Base+0x86f4>
   1b4f4:	rsbs	r6, r6, #0
   1b4f8:	rsc	r9, r9, #0
   1b4fc:	str	r6, [sp, #56]	; 0x38
   1b500:	str	r9, [sp, #60]	; 0x3c
   1b504:	cmp	r7, r4
   1b508:	bne	1b548 <main@@Base+0x82c4>
   1b50c:	add	r0, sp, #56	; 0x38
   1b510:	ldr	r2, [sp, #44]	; 0x2c
   1b514:	movw	r3, #16692	; 0x4134
   1b518:	mov	r1, r7
   1b51c:	str	r0, [sp]
   1b520:	ldr	r0, [sp, #36]	; 0x24
   1b524:	movt	r3, #4
   1b528:	bl	22958 <main@@Base+0xf6d4>
   1b52c:	cmp	r0, r7
   1b530:	mov	r4, r0
   1b534:	ldrne	r1, [sp, #44]	; 0x2c
   1b538:	cmpne	r4, r1
   1b53c:	beq	1ce04 <main@@Base+0x9b80>
   1b540:	ldr	r6, [sp, #56]	; 0x38
   1b544:	ldr	r9, [sp, #60]	; 0x3c
   1b548:	ldr	r8, [sp, #36]	; 0x24
   1b54c:	orrs	r0, r6, r9
   1b550:	bne	1b560 <main@@Base+0x82dc>
   1b554:	ldrb	r0, [r8, #8]
   1b558:	tst	r0, #2
   1b55c:	beq	1bd18 <main@@Base+0x8a94>
   1b560:	ldr	r0, [r8]
   1b564:	mov	r1, #22
   1b568:	b	1bcfc <main@@Base+0x8a78>
   1b56c:	ldr	r8, [sp, #36]	; 0x24
   1b570:	ldr	r5, [sp, #44]	; 0x2c
   1b574:	mov	r1, r7
   1b578:	mov	r3, #9
   1b57c:	mov	r0, r8
   1b580:	mov	r2, r5
   1b584:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1b588:	ldr	sl, [sp, #40]	; 0x28
   1b58c:	b	18384 <main@@Base+0x5100>
   1b590:	ldr	sl, [sp, #40]	; 0x28
   1b594:	mov	r4, r5
   1b598:	b	181e0 <main@@Base+0x4f5c>
   1b59c:	ldr	sl, [sp, #40]	; 0x28
   1b5a0:	mov	r4, r5
   1b5a4:	b	195d8 <main@@Base+0x6354>
   1b5a8:	cmp	r0, #125	; 0x7d
   1b5ac:	bne	1c954 <main@@Base+0x96d0>
   1b5b0:	ldr	r5, [sp, #44]	; 0x2c
   1b5b4:	ldr	r8, [sp, #36]	; 0x24
   1b5b8:	add	r1, r2, #1
   1b5bc:	sub	r0, r5, r1
   1b5c0:	cmp	r0, #2
   1b5c4:	ldr	sl, [sp, #40]	; 0x28
   1b5c8:	blt	1caf0 <main@@Base+0x986c>
   1b5cc:	ldrb	r0, [r1]
   1b5d0:	cmp	r0, #32
   1b5d4:	bls	1cad0 <main@@Base+0x984c>
   1b5d8:	ldr	r5, [sp, #44]	; 0x2c
   1b5dc:	ldr	r8, [sp, #36]	; 0x24
   1b5e0:	ldr	sl, [sp, #40]	; 0x28
   1b5e4:	mov	r4, r1
   1b5e8:	b	181e0 <main@@Base+0x4f5c>
   1b5ec:	cmp	r0, #93	; 0x5d
   1b5f0:	bne	1c978 <main@@Base+0x96f4>
   1b5f4:	ldr	r5, [sp, #44]	; 0x2c
   1b5f8:	ldr	r8, [sp, #36]	; 0x24
   1b5fc:	add	r1, r2, #1
   1b600:	sub	r0, r5, r1
   1b604:	cmp	r0, #2
   1b608:	ldr	sl, [sp, #40]	; 0x28
   1b60c:	blt	1cb38 <main@@Base+0x98b4>
   1b610:	ldrb	r0, [r1]
   1b614:	cmp	r0, #32
   1b618:	bls	1cb18 <main@@Base+0x9894>
   1b61c:	ldr	r5, [sp, #44]	; 0x2c
   1b620:	ldr	r8, [sp, #36]	; 0x24
   1b624:	ldr	sl, [sp, #40]	; 0x28
   1b628:	mov	r4, r1
   1b62c:	b	195d8 <main@@Base+0x6354>
   1b630:	mov	r4, r5
   1b634:	b	1cb80 <main@@Base+0x98fc>
   1b638:	mov	r0, r8
   1b63c:	mov	r1, r5
   1b640:	b	1c964 <main@@Base+0x96e0>
   1b644:	mov	r0, r8
   1b648:	mov	r1, r5
   1b64c:	b	1c988 <main@@Base+0x9704>
   1b650:	cmp	r0, #93	; 0x5d
   1b654:	bne	1c99c <main@@Base+0x9718>
   1b658:	ldr	r0, [sp, #44]	; 0x2c
   1b65c:	add	r1, r4, #1
   1b660:	sub	r0, r0, r1
   1b664:	b	1b6b0 <main@@Base+0x842c>
   1b668:	ldr	r8, [sp, #36]	; 0x24
   1b66c:	ldr	r5, [sp, #44]	; 0x2c
   1b670:	mov	r1, r4
   1b674:	mov	r3, #9
   1b678:	mov	r0, r8
   1b67c:	mov	r2, r5
   1b680:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1b684:	ldr	sl, [sp, #40]	; 0x28
   1b688:	b	167e0 <main@@Base+0x355c>
   1b68c:	mov	r0, r8
   1b690:	mov	r1, r5
   1b694:	mov	r2, r5
   1b698:	b	1c9a8 <main@@Base+0x9724>
   1b69c:	ldr	sl, [sp, #40]	; 0x28
   1b6a0:	mov	r4, r5
   1b6a4:	b	19a90 <main@@Base+0x680c>
   1b6a8:	add	r1, r4, #1
   1b6ac:	sub	r0, r5, r1
   1b6b0:	cmp	r0, #2
   1b6b4:	blt	1cb70 <main@@Base+0x98ec>
   1b6b8:	ldrb	r0, [r1]
   1b6bc:	cmp	r0, #32
   1b6c0:	bls	1cb60 <main@@Base+0x98dc>
   1b6c4:	mov	r4, r1
   1b6c8:	b	1cb80 <main@@Base+0x98fc>
   1b6cc:	cmp	r0, #93	; 0x5d
   1b6d0:	bne	1c9c4 <main@@Base+0x9740>
   1b6d4:	ldr	r5, [sp, #44]	; 0x2c
   1b6d8:	ldr	r8, [sp, #36]	; 0x24
   1b6dc:	add	r1, r2, #1
   1b6e0:	sub	r0, r5, r1
   1b6e4:	cmp	r0, #2
   1b6e8:	ldr	sl, [sp, #40]	; 0x28
   1b6ec:	blt	1cc3c <main@@Base+0x99b8>
   1b6f0:	ldrb	r0, [r1]
   1b6f4:	cmp	r0, #32
   1b6f8:	bls	1cc1c <main@@Base+0x9998>
   1b6fc:	ldr	r5, [sp, #44]	; 0x2c
   1b700:	ldr	r8, [sp, #36]	; 0x24
   1b704:	ldr	sl, [sp, #40]	; 0x28
   1b708:	mov	r4, r1
   1b70c:	b	19a90 <main@@Base+0x680c>
   1b710:	ldr	r8, [sp, #36]	; 0x24
   1b714:	ldr	r5, [sp, #44]	; 0x2c
   1b718:	mov	r1, r2
   1b71c:	mov	r0, r8
   1b720:	mov	r2, r5
   1b724:	mov	r3, #9
   1b728:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1b72c:	ldr	sl, [sp, #40]	; 0x28
   1b730:	b	182cc <main@@Base+0x5048>
   1b734:	mov	r0, r8
   1b738:	mov	r1, r5
   1b73c:	b	1c9d4 <main@@Base+0x9750>
   1b740:	bne	1b750 <main@@Base+0x84cc>
   1b744:	ldrb	r0, [r9, #2]!
   1b748:	cmp	r0, #32
   1b74c:	bhi	1b760 <main@@Base+0x84dc>
   1b750:	ldr	r0, [sp, #36]	; 0x24
   1b754:	ldr	r2, [sp, #44]	; 0x2c
   1b758:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1b75c:	mov	r9, r0
   1b760:	ldr	r7, [sp, #44]	; 0x2c
   1b764:	cmp	r9, r7
   1b768:	beq	1b7c4 <main@@Base+0x8540>
   1b76c:	ldrb	r0, [r9]
   1b770:	cmp	r0, #93	; 0x5d
   1b774:	bne	1b7c0 <main@@Base+0x853c>
   1b778:	ldr	r0, [sp, #44]	; 0x2c
   1b77c:	ldr	r8, [sp, #36]	; 0x24
   1b780:	add	r1, r9, #1
   1b784:	sub	r0, r0, r1
   1b788:	cmp	r0, #2
   1b78c:	blt	1b7b0 <main@@Base+0x852c>
   1b790:	ldrb	r0, [r1]
   1b794:	cmp	r0, #32
   1b798:	bhi	1ca18 <main@@Base+0x9794>
   1b79c:	ldr	r8, [sp, #36]	; 0x24
   1b7a0:	bne	1b7b0 <main@@Base+0x852c>
   1b7a4:	ldrb	r0, [r9, #2]!
   1b7a8:	cmp	r0, #32
   1b7ac:	bhi	1b188 <main@@Base+0x7f04>
   1b7b0:	ldr	r2, [sp, #44]	; 0x2c
   1b7b4:	mov	r0, r8
   1b7b8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1b7bc:	b	1b184 <main@@Base+0x7f00>
   1b7c0:	mov	r7, r9
   1b7c4:	mov	r0, #0
   1b7c8:	mov	r1, #1
   1b7cc:	str	r0, [fp, #-52]	; 0xffffffcc
   1b7d0:	str	r0, [fp, #-56]	; 0xffffffc8
   1b7d4:	ldr	r0, [sp, #36]	; 0x24
   1b7d8:	ldr	r0, [r0]
   1b7dc:	bl	29764 <flatcc_builder_extend_vector@@Base>
   1b7e0:	cmp	r0, #0
   1b7e4:	beq	1cde8 <main@@Base+0x9b64>
   1b7e8:	ldr	r5, [sp, #44]	; 0x2c
   1b7ec:	ldr	r8, [sp, #36]	; 0x24
   1b7f0:	mov	r4, r0
   1b7f4:	mov	r9, r7
   1b7f8:	mov	r0, r8
   1b7fc:	mov	r1, r9
   1b800:	mov	r2, r5
   1b804:	sub	r3, fp, #56	; 0x38
   1b808:	bl	2e30c <flatcc_json_parser_double@@Base>
   1b80c:	mov	r7, r0
   1b810:	cmp	r9, r0
   1b814:	bne	1b854 <main@@Base+0x85d0>
   1b818:	movw	r3, #16764	; 0x417c
   1b81c:	sub	r0, fp, #56	; 0x38
   1b820:	mov	r1, r9
   1b824:	mov	r2, r5
   1b828:	movt	r3, #4
   1b82c:	str	r0, [sp]
   1b830:	mov	r0, r8
   1b834:	bl	22fe8 <main@@Base+0xfd64>
   1b838:	mov	r7, r0
   1b83c:	cmp	r0, r9
   1b840:	beq	1cde8 <main@@Base+0x9b64>
   1b844:	ldr	r5, [sp, #44]	; 0x2c
   1b848:	ldr	r8, [sp, #36]	; 0x24
   1b84c:	cmp	r7, r5
   1b850:	beq	1cdf0 <main@@Base+0x9b6c>
   1b854:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1b858:	sub	r0, r5, r7
   1b85c:	cmp	r0, #2
   1b860:	vstr	d16, [r4]
   1b864:	blt	1b89c <main@@Base+0x8618>
   1b868:	ldrb	r0, [r7]
   1b86c:	cmp	r0, #32
   1b870:	bls	1b880 <main@@Base+0x85fc>
   1b874:	ldr	r5, [sp, #44]	; 0x2c
   1b878:	mov	r9, r7
   1b87c:	b	1b8b0 <main@@Base+0x862c>
   1b880:	ldr	r5, [sp, #44]	; 0x2c
   1b884:	ldr	r8, [sp, #36]	; 0x24
   1b888:	bne	1b89c <main@@Base+0x8618>
   1b88c:	mov	r9, r7
   1b890:	ldrb	r0, [r9, #1]!
   1b894:	cmp	r0, #32
   1b898:	bhi	1b8b0 <main@@Base+0x862c>
   1b89c:	mov	r0, r8
   1b8a0:	mov	r1, r7
   1b8a4:	mov	r2, r5
   1b8a8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1b8ac:	mov	r9, r0
   1b8b0:	cmp	r9, r5
   1b8b4:	beq	1c9e8 <main@@Base+0x9764>
   1b8b8:	ldrb	r0, [r9]
   1b8bc:	cmp	r0, #44	; 0x2c
   1b8c0:	bne	1c9f0 <main@@Base+0x976c>
   1b8c4:	ldr	r4, [sp, #44]	; 0x2c
   1b8c8:	add	r1, r9, #1
   1b8cc:	sub	r0, r4, r1
   1b8d0:	cmp	r0, #2
   1b8d4:	ldr	r0, [sp, #36]	; 0x24
   1b8d8:	blt	1b90c <main@@Base+0x8688>
   1b8dc:	ldrb	r0, [r1]
   1b8e0:	cmp	r0, #32
   1b8e4:	bls	1b8f4 <main@@Base+0x8670>
   1b8e8:	ldr	r4, [sp, #44]	; 0x2c
   1b8ec:	mov	r9, r1
   1b8f0:	b	1b918 <main@@Base+0x8694>
   1b8f4:	ldr	r4, [sp, #44]	; 0x2c
   1b8f8:	ldr	r0, [sp, #36]	; 0x24
   1b8fc:	bne	1b90c <main@@Base+0x8688>
   1b900:	ldrb	r2, [r9, #2]!
   1b904:	cmp	r2, #32
   1b908:	bhi	1b918 <main@@Base+0x8694>
   1b90c:	mov	r2, r4
   1b910:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1b914:	mov	r9, r0
   1b918:	cmp	r9, r4
   1b91c:	beq	1ca20 <main@@Base+0x979c>
   1b920:	ldrb	r0, [r9]
   1b924:	cmp	r0, #93	; 0x5d
   1b928:	beq	1c9f8 <main@@Base+0x9774>
   1b92c:	ldr	r8, [sp, #36]	; 0x24
   1b930:	mov	r0, #0
   1b934:	mov	r1, #1
   1b938:	str	r0, [fp, #-52]	; 0xffffffcc
   1b93c:	str	r0, [fp, #-56]	; 0xffffffc8
   1b940:	ldr	r0, [r8]
   1b944:	bl	29764 <flatcc_builder_extend_vector@@Base>
   1b948:	ldr	r5, [sp, #44]	; 0x2c
   1b94c:	mov	r4, r0
   1b950:	cmp	r0, #0
   1b954:	mov	r7, r9
   1b958:	bne	1b7f8 <main@@Base+0x8574>
   1b95c:	b	1cdf0 <main@@Base+0x9b6c>
   1b960:	mov	r4, r5
   1b964:	b	18930 <main@@Base+0x56ac>
   1b968:	cmp	r0, #125	; 0x7d
   1b96c:	bne	1ca30 <main@@Base+0x97ac>
   1b970:	ldr	r5, [sp, #44]	; 0x2c
   1b974:	ldr	r8, [sp, #36]	; 0x24
   1b978:	add	r1, r3, #1
   1b97c:	sub	r0, r5, r1
   1b980:	cmp	r0, #2
   1b984:	blt	1cc78 <main@@Base+0x99f4>
   1b988:	ldrb	r0, [r1]
   1b98c:	cmp	r0, #32
   1b990:	bls	1cc5c <main@@Base+0x99d8>
   1b994:	ldr	r5, [sp, #44]	; 0x2c
   1b998:	ldr	r8, [sp, #36]	; 0x24
   1b99c:	mov	r4, r1
   1b9a0:	b	18930 <main@@Base+0x56ac>
   1b9a4:	mov	r0, r8
   1b9a8:	mov	r1, r5
   1b9ac:	b	1ca40 <main@@Base+0x97bc>
   1b9b0:	ldr	r5, [sp, #44]	; 0x2c
   1b9b4:	ldr	r8, [sp, #36]	; 0x24
   1b9b8:	bne	1b9c8 <main@@Base+0x8744>
   1b9bc:	ldrb	r0, [r7, #2]!
   1b9c0:	cmp	r0, #32
   1b9c4:	bhi	1b9d8 <main@@Base+0x8754>
   1b9c8:	mov	r0, r8
   1b9cc:	mov	r2, r5
   1b9d0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1b9d4:	mov	r7, r0
   1b9d8:	ldr	sl, [sp, #40]	; 0x28
   1b9dc:	cmp	r4, r7
   1b9e0:	beq	1bb94 <main@@Base+0x8910>
   1b9e4:	mov	r6, #0
   1b9e8:	cmp	r7, r5
   1b9ec:	str	r6, [fp, #-52]	; 0xffffffcc
   1b9f0:	str	r6, [fp, #-56]	; 0xffffffc8
   1b9f4:	str	r6, [fp, #-60]	; 0xffffffc4
   1b9f8:	str	r6, [sp, #56]	; 0x38
   1b9fc:	beq	1ba44 <main@@Base+0x87c0>
   1ba00:	sub	r0, fp, #56	; 0x38
   1ba04:	ldr	r2, [sp, #44]	; 0x2c
   1ba08:	mov	r1, r7
   1ba0c:	add	r3, sp, #56	; 0x38
   1ba10:	str	r0, [sp]
   1ba14:	ldr	r0, [sp, #36]	; 0x24
   1ba18:	bl	2edac <flatcc_json_parser_integer@@Base>
   1ba1c:	cmp	r0, r7
   1ba20:	beq	1ba4c <main@@Base+0x87c8>
   1ba24:	mov	r1, r0
   1ba28:	ldr	r0, [sp, #56]	; 0x38
   1ba2c:	cmp	r0, #0
   1ba30:	beq	1ba54 <main@@Base+0x87d0>
   1ba34:	ldr	r0, [sp, #36]	; 0x24
   1ba38:	ldr	r2, [sp, #44]	; 0x2c
   1ba3c:	mov	r3, #8
   1ba40:	b	1ba6c <main@@Base+0x87e8>
   1ba44:	ldr	r4, [sp, #44]	; 0x2c
   1ba48:	b	1ba74 <main@@Base+0x87f0>
   1ba4c:	mov	r4, r7
   1ba50:	b	1ba74 <main@@Base+0x87f0>
   1ba54:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1ba58:	cmp	r0, #0
   1ba5c:	beq	1c9b4 <main@@Base+0x9730>
   1ba60:	ldr	r0, [sp, #36]	; 0x24
   1ba64:	ldr	r2, [sp, #44]	; 0x2c
   1ba68:	mov	r3, #7
   1ba6c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1ba70:	mov	r4, r0
   1ba74:	cmp	r7, r4
   1ba78:	bne	1bab4 <main@@Base+0x8830>
   1ba7c:	sub	r0, fp, #60	; 0x3c
   1ba80:	ldr	r2, [sp, #44]	; 0x2c
   1ba84:	movw	r3, #16716	; 0x414c
   1ba88:	mov	r1, r7
   1ba8c:	str	r0, [sp]
   1ba90:	ldr	r0, [sp, #36]	; 0x24
   1ba94:	movt	r3, #4
   1ba98:	bl	22ba4 <main@@Base+0xf920>
   1ba9c:	cmp	r0, r7
   1baa0:	mov	r4, r0
   1baa4:	ldrne	r1, [sp, #44]	; 0x2c
   1baa8:	cmpne	r4, r1
   1baac:	beq	1ce04 <main@@Base+0x9b80>
   1bab0:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1bab4:	ldr	r8, [sp, #36]	; 0x24
   1bab8:	cmp	r6, #0
   1babc:	bne	1bacc <main@@Base+0x8848>
   1bac0:	ldrb	r0, [r8, #8]
   1bac4:	tst	r0, #2
   1bac8:	beq	1bd18 <main@@Base+0x8a94>
   1bacc:	ldr	r0, [r8]
   1bad0:	mov	r1, #21
   1bad4:	mov	r2, #4
   1bad8:	mov	r3, #4
   1badc:	bl	2b574 <flatcc_builder_table_add@@Base>
   1bae0:	cmp	r0, #0
   1bae4:	beq	1ce04 <main@@Base+0x9b80>
   1bae8:	str	r6, [r0]
   1baec:	b	1bd14 <main@@Base+0x8a90>
   1baf0:	ldr	r5, [sp, #44]	; 0x2c
   1baf4:	ldr	r8, [sp, #36]	; 0x24
   1baf8:	bne	1bb08 <main@@Base+0x8884>
   1bafc:	ldrb	r0, [r7, #2]!
   1bb00:	cmp	r0, #32
   1bb04:	bhi	1bb18 <main@@Base+0x8894>
   1bb08:	mov	r0, r8
   1bb0c:	mov	r2, r5
   1bb10:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1bb14:	mov	r7, r0
   1bb18:	ldr	sl, [sp, #40]	; 0x28
   1bb1c:	cmp	r4, r7
   1bb20:	beq	1bb94 <main@@Base+0x8910>
   1bb24:	mov	r6, #0
   1bb28:	cmp	r7, r5
   1bb2c:	str	r6, [fp, #-52]	; 0xffffffcc
   1bb30:	str	r6, [fp, #-56]	; 0xffffffc8
   1bb34:	str	r6, [sp, #60]	; 0x3c
   1bb38:	str	r6, [sp, #56]	; 0x38
   1bb3c:	str	r6, [fp, #-60]	; 0xffffffc4
   1bb40:	beq	1bc68 <main@@Base+0x89e4>
   1bb44:	sub	r0, fp, #56	; 0x38
   1bb48:	ldr	r2, [sp, #44]	; 0x2c
   1bb4c:	mov	r1, r7
   1bb50:	sub	r3, fp, #60	; 0x3c
   1bb54:	str	r0, [sp]
   1bb58:	ldr	r0, [sp, #36]	; 0x24
   1bb5c:	bl	2edac <flatcc_json_parser_integer@@Base>
   1bb60:	cmp	r0, r7
   1bb64:	beq	1bc74 <main@@Base+0x89f0>
   1bb68:	mov	r1, r0
   1bb6c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1bb70:	cmp	r0, #0
   1bb74:	beq	1bc84 <main@@Base+0x8a00>
   1bb78:	ldr	r0, [sp, #36]	; 0x24
   1bb7c:	ldr	r2, [sp, #44]	; 0x2c
   1bb80:	mov	r3, #8
   1bb84:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1bb88:	mov	r4, r0
   1bb8c:	mov	r6, #0
   1bb90:	b	1bc6c <main@@Base+0x89e8>
   1bb94:	mov	r0, r8
   1bb98:	mov	r1, r4
   1bb9c:	mov	r2, r5
   1bba0:	bl	2d5e0 <flatcc_json_parser_unmatched_symbol@@Base>
   1bba4:	mov	r4, r0
   1bba8:	sub	r0, r5, r4
   1bbac:	cmp	r0, #2
   1bbb0:	blt	1bbdc <main@@Base+0x8958>
   1bbb4:	ldrb	r0, [r4]
   1bbb8:	cmp	r0, #32
   1bbbc:	bls	1bbc8 <main@@Base+0x8944>
   1bbc0:	mov	r2, r4
   1bbc4:	b	1bbf0 <main@@Base+0x896c>
   1bbc8:	bne	1bbdc <main@@Base+0x8958>
   1bbcc:	mov	r2, r4
   1bbd0:	ldrb	r0, [r2, #1]!
   1bbd4:	cmp	r0, #32
   1bbd8:	bhi	1bbf0 <main@@Base+0x896c>
   1bbdc:	mov	r0, r8
   1bbe0:	mov	r1, r4
   1bbe4:	mov	r2, r5
   1bbe8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1bbec:	mov	r2, r0
   1bbf0:	cmp	r2, r5
   1bbf4:	beq	1cd40 <main@@Base+0x9abc>
   1bbf8:	ldrb	r0, [r2]
   1bbfc:	cmp	r0, #44	; 0x2c
   1bc00:	bne	1cd48 <main@@Base+0x9ac4>
   1bc04:	add	r1, r2, #1
   1bc08:	sub	r0, r5, r1
   1bc0c:	cmp	r0, #2
   1bc10:	blt	1bc38 <main@@Base+0x89b4>
   1bc14:	ldrb	r0, [r1]
   1bc18:	cmp	r0, #32
   1bc1c:	bls	1bc28 <main@@Base+0x89a4>
   1bc20:	mov	r2, r1
   1bc24:	b	1bc48 <main@@Base+0x89c4>
   1bc28:	bne	1bc38 <main@@Base+0x89b4>
   1bc2c:	ldrb	r0, [r2, #2]!
   1bc30:	cmp	r0, #32
   1bc34:	bhi	1bc48 <main@@Base+0x89c4>
   1bc38:	mov	r0, r8
   1bc3c:	mov	r2, r5
   1bc40:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1bc44:	mov	r2, r0
   1bc48:	cmp	r2, r5
   1bc4c:	beq	1cd74 <main@@Base+0x9af0>
   1bc50:	ldrb	r0, [r2]
   1bc54:	movw	lr, #29556	; 0x7374
   1bc58:	movt	lr, #29797	; 0x7465
   1bc5c:	cmp	r0, #125	; 0x7d
   1bc60:	bne	134ec <main@@Base+0x268>
   1bc64:	b	1cd50 <main@@Base+0x9acc>
   1bc68:	ldr	r4, [sp, #44]	; 0x2c
   1bc6c:	mov	r9, #0
   1bc70:	b	1bc98 <main@@Base+0x8a14>
   1bc74:	mov	r6, #0
   1bc78:	mov	r9, #0
   1bc7c:	mov	r4, r7
   1bc80:	b	1bc98 <main@@Base+0x8a14>
   1bc84:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1bc88:	ldr	r9, [fp, #-52]	; 0xffffffcc
   1bc8c:	mov	r4, r1
   1bc90:	str	r9, [sp, #60]	; 0x3c
   1bc94:	str	r6, [sp, #56]	; 0x38
   1bc98:	cmp	r7, r4
   1bc9c:	bne	1bcdc <main@@Base+0x8a58>
   1bca0:	add	r0, sp, #56	; 0x38
   1bca4:	ldr	r2, [sp, #44]	; 0x2c
   1bca8:	movw	r3, #16740	; 0x4164
   1bcac:	mov	r1, r7
   1bcb0:	str	r0, [sp]
   1bcb4:	ldr	r0, [sp, #36]	; 0x24
   1bcb8:	movt	r3, #4
   1bcbc:	bl	22dcc <main@@Base+0xfb48>
   1bcc0:	cmp	r0, r7
   1bcc4:	mov	r4, r0
   1bcc8:	ldrne	r1, [sp, #44]	; 0x2c
   1bccc:	cmpne	r4, r1
   1bcd0:	beq	1ce04 <main@@Base+0x9b80>
   1bcd4:	ldr	r6, [sp, #56]	; 0x38
   1bcd8:	ldr	r9, [sp, #60]	; 0x3c
   1bcdc:	ldr	r8, [sp, #36]	; 0x24
   1bce0:	orrs	r0, r6, r9
   1bce4:	bne	1bcf4 <main@@Base+0x8a70>
   1bce8:	ldrb	r0, [r8, #8]
   1bcec:	tst	r0, #2
   1bcf0:	beq	1bd18 <main@@Base+0x8a94>
   1bcf4:	ldr	r0, [r8]
   1bcf8:	mov	r1, #23
   1bcfc:	mov	r2, #8
   1bd00:	mov	r3, #8
   1bd04:	bl	2b574 <flatcc_builder_table_add@@Base>
   1bd08:	cmp	r0, #0
   1bd0c:	beq	1ce04 <main@@Base+0x9b80>
   1bd10:	stm	r0, {r6, r9}
   1bd14:	ldr	r8, [sp, #36]	; 0x24
   1bd18:	ldr	r5, [sp, #44]	; 0x2c
   1bd1c:	b	167c4 <main@@Base+0x3540>
   1bd20:	bne	1bd30 <main@@Base+0x8aac>
   1bd24:	ldrb	r0, [r4, #2]!
   1bd28:	cmp	r0, #32
   1bd2c:	bhi	1bd40 <main@@Base+0x8abc>
   1bd30:	ldr	r0, [sp, #36]	; 0x24
   1bd34:	ldr	r2, [sp, #44]	; 0x2c
   1bd38:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1bd3c:	mov	r4, r0
   1bd40:	ldr	r6, [sp, #44]	; 0x2c
   1bd44:	cmp	r4, r6
   1bd48:	beq	1bd5c <main@@Base+0x8ad8>
   1bd4c:	ldrb	r0, [r4]
   1bd50:	cmp	r0, #93	; 0x5d
   1bd54:	beq	1ca5c <main@@Base+0x97d8>
   1bd58:	mov	r6, r4
   1bd5c:	mov	r0, #0
   1bd60:	mov	r1, #1
   1bd64:	strb	r0, [fp, #-60]	; 0xffffffc4
   1bd68:	ldr	r0, [sp, #36]	; 0x24
   1bd6c:	ldr	r0, [r0]
   1bd70:	bl	29764 <flatcc_builder_extend_vector@@Base>
   1bd74:	cmp	r0, #0
   1bd78:	beq	1ce00 <main@@Base+0x9b7c>
   1bd7c:	mov	r8, r0
   1bd80:	mov	r4, r6
   1bd84:	ldr	r5, [sp, #44]	; 0x2c
   1bd88:	mov	r6, #0
   1bd8c:	str	r6, [fp, #-52]	; 0xffffffcc
   1bd90:	str	r6, [fp, #-56]	; 0xffffffc8
   1bd94:	strb	r6, [fp, #-60]	; 0xffffffc4
   1bd98:	str	r6, [sp, #56]	; 0x38
   1bd9c:	cmp	r4, r5
   1bda0:	beq	1bde8 <main@@Base+0x8b64>
   1bda4:	sub	r0, fp, #56	; 0x38
   1bda8:	mov	r1, r4
   1bdac:	mov	r2, r5
   1bdb0:	add	r3, sp, #56	; 0x38
   1bdb4:	str	r0, [sp]
   1bdb8:	ldr	r0, [sp, #36]	; 0x24
   1bdbc:	bl	2edac <flatcc_json_parser_integer@@Base>
   1bdc0:	cmp	r0, r4
   1bdc4:	beq	1bdf0 <main@@Base+0x8b6c>
   1bdc8:	mov	r1, r0
   1bdcc:	ldr	r0, [sp, #56]	; 0x38
   1bdd0:	cmp	r0, #0
   1bdd4:	beq	1bdf8 <main@@Base+0x8b74>
   1bdd8:	ldr	r7, [sp, #36]	; 0x24
   1bddc:	ldr	r5, [sp, #44]	; 0x2c
   1bde0:	mov	r3, #8
   1bde4:	b	1be18 <main@@Base+0x8b94>
   1bde8:	mov	r1, r5
   1bdec:	b	1be38 <main@@Base+0x8bb4>
   1bdf0:	mov	r1, r4
   1bdf4:	b	1be34 <main@@Base+0x8bb0>
   1bdf8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1bdfc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1be00:	subs	r3, r0, #256	; 0x100
   1be04:	sbcs	r2, r2, #0
   1be08:	bcc	1be2c <main@@Base+0x8ba8>
   1be0c:	ldr	r7, [sp, #36]	; 0x24
   1be10:	ldr	r5, [sp, #44]	; 0x2c
   1be14:	mov	r3, #7
   1be18:	mov	r0, r7
   1be1c:	mov	r2, r5
   1be20:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1be24:	mov	r1, r0
   1be28:	b	1be3c <main@@Base+0x8bb8>
   1be2c:	mov	r6, r0
   1be30:	strb	r0, [fp, #-60]	; 0xffffffc4
   1be34:	ldr	r5, [sp, #44]	; 0x2c
   1be38:	ldr	r7, [sp, #36]	; 0x24
   1be3c:	cmp	r4, r1
   1be40:	bne	1be84 <main@@Base+0x8c00>
   1be44:	movw	r3, #16752	; 0x4170
   1be48:	sub	r0, fp, #60	; 0x3c
   1be4c:	mov	r1, r4
   1be50:	mov	r2, r5
   1be54:	movt	r3, #4
   1be58:	str	r0, [sp]
   1be5c:	mov	r0, r7
   1be60:	bl	1e3f0 <main@@Base+0xb16c>
   1be64:	cmp	r0, r4
   1be68:	mov	r1, r0
   1be6c:	ldrne	r0, [sp, #44]	; 0x2c
   1be70:	cmpne	r1, r0
   1be74:	beq	1cdf8 <main@@Base+0x9b74>
   1be78:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1be7c:	ldr	r5, [sp, #44]	; 0x2c
   1be80:	ldr	r7, [sp, #36]	; 0x24
   1be84:	sub	r0, r5, r1
   1be88:	strb	r6, [r8]
   1be8c:	cmp	r0, #2
   1be90:	blt	1bec8 <main@@Base+0x8c44>
   1be94:	ldrb	r0, [r1]
   1be98:	cmp	r0, #32
   1be9c:	bls	1beac <main@@Base+0x8c28>
   1bea0:	ldr	r5, [sp, #44]	; 0x2c
   1bea4:	mov	r4, r1
   1bea8:	b	1bed8 <main@@Base+0x8c54>
   1beac:	ldr	r5, [sp, #44]	; 0x2c
   1beb0:	ldr	r7, [sp, #36]	; 0x24
   1beb4:	bne	1bec8 <main@@Base+0x8c44>
   1beb8:	mov	r4, r1
   1bebc:	ldrb	r0, [r4, #1]!
   1bec0:	cmp	r0, #32
   1bec4:	bhi	1bed8 <main@@Base+0x8c54>
   1bec8:	mov	r0, r7
   1becc:	mov	r2, r5
   1bed0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1bed4:	mov	r4, r0
   1bed8:	cmp	r4, r5
   1bedc:	beq	1ca4c <main@@Base+0x97c8>
   1bee0:	ldrb	r0, [r4]
   1bee4:	cmp	r0, #44	; 0x2c
   1bee8:	bne	1ca54 <main@@Base+0x97d0>
   1beec:	ldr	r5, [sp, #44]	; 0x2c
   1bef0:	add	r1, r4, #1
   1bef4:	sub	r0, r5, r1
   1bef8:	cmp	r0, #2
   1befc:	ldr	r0, [sp, #36]	; 0x24
   1bf00:	blt	1bf34 <main@@Base+0x8cb0>
   1bf04:	ldrb	r0, [r1]
   1bf08:	cmp	r0, #32
   1bf0c:	bls	1bf1c <main@@Base+0x8c98>
   1bf10:	ldr	r5, [sp, #44]	; 0x2c
   1bf14:	mov	r4, r1
   1bf18:	b	1bf40 <main@@Base+0x8cbc>
   1bf1c:	ldr	r5, [sp, #44]	; 0x2c
   1bf20:	ldr	r0, [sp, #36]	; 0x24
   1bf24:	bne	1bf34 <main@@Base+0x8cb0>
   1bf28:	ldrb	r2, [r4, #2]!
   1bf2c:	cmp	r2, #32
   1bf30:	bhi	1bf40 <main@@Base+0x8cbc>
   1bf34:	mov	r2, r5
   1bf38:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1bf3c:	mov	r4, r0
   1bf40:	cmp	r4, r5
   1bf44:	beq	1cb00 <main@@Base+0x987c>
   1bf48:	ldrb	r0, [r4]
   1bf4c:	cmp	r0, #93	; 0x5d
   1bf50:	beq	1ca5c <main@@Base+0x97d8>
   1bf54:	mov	r0, #0
   1bf58:	mov	r1, #1
   1bf5c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1bf60:	ldr	r0, [sp, #36]	; 0x24
   1bf64:	ldr	r0, [r0]
   1bf68:	bl	29764 <flatcc_builder_extend_vector@@Base>
   1bf6c:	mov	r8, r0
   1bf70:	cmp	r0, #0
   1bf74:	bne	1bd84 <main@@Base+0x8b00>
   1bf78:	b	1ce04 <main@@Base+0x9b80>
   1bf7c:	ldr	r5, [sp, #44]	; 0x2c
   1bf80:	ldr	r8, [sp, #36]	; 0x24
   1bf84:	ldr	sl, [sp, #40]	; 0x28
   1bf88:	b	181ec <main@@Base+0x4f68>
   1bf8c:	bne	1bf9c <main@@Base+0x8d18>
   1bf90:	ldrb	r0, [r4, #2]!
   1bf94:	cmp	r0, #32
   1bf98:	bhi	1bfac <main@@Base+0x8d28>
   1bf9c:	ldr	r0, [sp, #36]	; 0x24
   1bfa0:	ldr	r2, [sp, #44]	; 0x2c
   1bfa4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1bfa8:	mov	r4, r0
   1bfac:	ldr	r2, [sp, #44]	; 0x2c
   1bfb0:	cmp	r4, r2
   1bfb4:	beq	1bffc <main@@Base+0x8d78>
   1bfb8:	ldrb	r0, [r4]
   1bfbc:	cmp	r0, #125	; 0x7d
   1bfc0:	bne	1bff8 <main@@Base+0x8d74>
   1bfc4:	ldr	r0, [sp, #44]	; 0x2c
   1bfc8:	ldr	r8, [sp, #36]	; 0x24
   1bfcc:	add	r1, r4, #1
   1bfd0:	sub	r0, r0, r1
   1bfd4:	cmp	r0, #2
   1bfd8:	blt	1cd30 <main@@Base+0x9aac>
   1bfdc:	ldrb	r0, [r1]
   1bfe0:	cmp	r0, #32
   1bfe4:	bhi	1cc10 <main@@Base+0x998c>
   1bfe8:	ldr	r8, [sp, #36]	; 0x24
   1bfec:	bne	1cd30 <main@@Base+0x9aac>
   1bff0:	ldrb	r0, [r4, #2]!
   1bff4:	b	1cd28 <main@@Base+0x9aa4>
   1bff8:	mov	r2, r4
   1bffc:	ldr	r5, [sp, #44]	; 0x2c
   1c000:	cmp	r2, r5
   1c004:	mov	r9, r5
   1c008:	beq	1c064 <main@@Base+0x8de0>
   1c00c:	ldrb	r0, [r2]
   1c010:	cmp	r0, #46	; 0x2e
   1c014:	beq	1c030 <main@@Base+0x8dac>
   1c018:	cmp	r0, #34	; 0x22
   1c01c:	bne	1c050 <main@@Base+0x8dcc>
   1c020:	ldr	r0, [sp, #32]
   1c024:	mov	r1, #0
   1c028:	add	r9, r2, #1
   1c02c:	b	1c05c <main@@Base+0x8dd8>
   1c030:	ldr	r5, [sp, #44]	; 0x2c
   1c034:	ldr	r0, [sp, #36]	; 0x24
   1c038:	mov	r1, r2
   1c03c:	mov	r3, #5
   1c040:	mov	r2, r5
   1c044:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1c048:	mov	r9, r0
   1c04c:	b	1c064 <main@@Base+0x8de0>
   1c050:	ldr	r0, [sp, #32]
   1c054:	mov	r1, #1
   1c058:	mov	r9, r2
   1c05c:	str	r1, [r0]
   1c060:	ldr	r5, [sp, #44]	; 0x2c
   1c064:	sub	lr, r5, r9
   1c068:	mov	r0, #8
   1c06c:	cmp	lr, #8
   1c070:	movcc	r0, lr
   1c074:	sub	r7, r0, #1
   1c078:	cmp	r7, #7
   1c07c:	bhi	1c7a0 <main@@Base+0x951c>
   1c080:	add	r4, pc, #32
   1c084:	mov	r1, #0
   1c088:	mov	ip, #0
   1c08c:	mov	r8, #0
   1c090:	mov	r6, #0
   1c094:	mov	r3, #0
   1c098:	mov	r5, #0
   1c09c:	mov	r2, #0
   1c0a0:	mov	r0, #0
   1c0a4:	ldr	pc, [r4, r7, lsl #2]
   1c0a8:	andeq	ip, r1, ip, lsl #2
   1c0ac:	andeq	ip, r1, r4, lsl #2
   1c0b0:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1c0b4:	strdeq	ip, [r1], -r4
   1c0b8:	andeq	ip, r1, r8, ror #1
   1c0bc:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1c0c0:	andeq	ip, r1, ip, asr #1
   1c0c4:	andeq	ip, r1, r8, asr #1
   1c0c8:	ldrb	ip, [r9, #7]
   1c0cc:	ldrb	r0, [r9, #6]
   1c0d0:	mov	r8, r1
   1c0d4:	orr	r0, ip, r0, lsl #8
   1c0d8:	mov	r1, r0
   1c0dc:	ldrb	r0, [r9, #5]
   1c0e0:	mov	r6, r8
   1c0e4:	orr	r1, r1, r0, lsl #16
   1c0e8:	ldrb	r0, [r9, #4]
   1c0ec:	mov	r3, r6
   1c0f0:	orr	r1, r1, r0, lsl #24
   1c0f4:	ldrb	r0, [r9, #3]
   1c0f8:	orr	r5, r0, r3
   1c0fc:	ldrb	r0, [r9, #2]
   1c100:	orr	r2, r5, r0, lsl #8
   1c104:	ldrb	r0, [r9, #1]
   1c108:	orr	r0, r2, r0, lsl #16
   1c10c:	ldrb	r2, [r9]
   1c110:	orr	r2, r0, r2, lsl #24
   1c114:	movw	r0, #65535	; 0xffff
   1c118:	movt	r0, #26979	; 0x6963
   1c11c:	cmp	r2, r0
   1c120:	bhi	1c188 <main@@Base+0x8f04>
   1c124:	movw	r0, #30062	; 0x756e
   1c128:	and	r1, r1, #-16777216	; 0xff000000
   1c12c:	movt	r0, #25455	; 0x636f
   1c130:	eor	r1, r1, #1946157056	; 0x74000000
   1c134:	eor	r0, r2, r0
   1c138:	orrs	r0, r1, r0
   1c13c:	bne	1c7a0 <main@@Base+0x951c>
   1c140:	cmp	lr, #6
   1c144:	mov	r7, r9
   1c148:	blt	1c470 <main@@Base+0x91ec>
   1c14c:	ldr	r2, [sp, #32]
   1c150:	mov	r1, r9
   1c154:	ldrb	r0, [r1, #5]!
   1c158:	ldr	r2, [r2]
   1c15c:	cmp	r2, #0
   1c160:	beq	1c240 <main@@Base+0x8fbc>
   1c164:	cmp	r0, #33	; 0x21
   1c168:	bcc	1c178 <main@@Base+0x8ef4>
   1c16c:	cmp	r0, #58	; 0x3a
   1c170:	mov	r7, r9
   1c174:	bne	1c470 <main@@Base+0x91ec>
   1c178:	ldr	r0, [sp, #32]
   1c17c:	mov	r2, #0
   1c180:	str	r2, [r0]
   1c184:	b	1c250 <main@@Base+0x8fcc>
   1c188:	movw	r1, #27648	; 0x6c00
   1c18c:	bic	r0, r2, #255	; 0xff
   1c190:	movt	r1, #30305	; 0x7661
   1c194:	teq	r0, r1
   1c198:	bne	1c1e4 <main@@Base+0x8f60>
   1c19c:	cmp	lr, #4
   1c1a0:	mov	r7, r9
   1c1a4:	blt	1c5cc <main@@Base+0x9348>
   1c1a8:	ldr	r2, [sp, #32]
   1c1ac:	mov	r1, r9
   1c1b0:	ldrb	r0, [r1, #3]!
   1c1b4:	ldr	r2, [r2]
   1c1b8:	cmp	r2, #0
   1c1bc:	beq	1c274 <main@@Base+0x8ff0>
   1c1c0:	cmp	r0, #33	; 0x21
   1c1c4:	bcc	1c1d4 <main@@Base+0x8f50>
   1c1c8:	cmp	r0, #58	; 0x3a
   1c1cc:	mov	r7, r9
   1c1d0:	bne	1c5cc <main@@Base+0x9348>
   1c1d4:	ldr	r0, [sp, #32]
   1c1d8:	mov	r2, #0
   1c1dc:	str	r2, [r0]
   1c1e0:	b	1c284 <main@@Base+0x9000>
   1c1e4:	movw	r0, #0
   1c1e8:	bfc	r2, #0, #16
   1c1ec:	movt	r0, #26980	; 0x6964
   1c1f0:	teq	r2, r0
   1c1f4:	bne	1c7a0 <main@@Base+0x951c>
   1c1f8:	cmp	lr, #3
   1c1fc:	mov	r1, r9
   1c200:	blt	1c74c <main@@Base+0x94c8>
   1c204:	ldr	r1, [sp, #32]
   1c208:	mov	r2, r9
   1c20c:	ldrb	r0, [r2, #2]!
   1c210:	ldr	r1, [r1]
   1c214:	cmp	r1, #0
   1c218:	beq	1c2a8 <main@@Base+0x9024>
   1c21c:	cmp	r0, #33	; 0x21
   1c220:	bcc	1c230 <main@@Base+0x8fac>
   1c224:	cmp	r0, #58	; 0x3a
   1c228:	mov	r1, r9
   1c22c:	bne	1c74c <main@@Base+0x94c8>
   1c230:	ldr	r0, [sp, #32]
   1c234:	mov	r1, #0
   1c238:	str	r1, [r0]
   1c23c:	b	1c2b8 <main@@Base+0x9034>
   1c240:	cmp	r0, #34	; 0x22
   1c244:	mov	r7, r9
   1c248:	bne	1c470 <main@@Base+0x91ec>
   1c24c:	add	r1, r9, #6
   1c250:	ldr	r0, [sp, #44]	; 0x2c
   1c254:	sub	r0, r0, r1
   1c258:	cmp	r0, #2
   1c25c:	blt	1c2f0 <main@@Base+0x906c>
   1c260:	ldrb	r0, [r1]
   1c264:	cmp	r0, #32
   1c268:	bls	1c2dc <main@@Base+0x9058>
   1c26c:	mov	r7, r1
   1c270:	b	1c300 <main@@Base+0x907c>
   1c274:	cmp	r0, #34	; 0x22
   1c278:	mov	r7, r9
   1c27c:	bne	1c5cc <main@@Base+0x9348>
   1c280:	add	r1, r9, #4
   1c284:	ldr	r0, [sp, #44]	; 0x2c
   1c288:	sub	r0, r0, r1
   1c28c:	cmp	r0, #2
   1c290:	blt	1c36c <main@@Base+0x90e8>
   1c294:	ldrb	r0, [r1]
   1c298:	cmp	r0, #32
   1c29c:	bls	1c358 <main@@Base+0x90d4>
   1c2a0:	mov	r7, r1
   1c2a4:	b	1c37c <main@@Base+0x90f8>
   1c2a8:	cmp	r0, #34	; 0x22
   1c2ac:	mov	r1, r9
   1c2b0:	bne	1c74c <main@@Base+0x94c8>
   1c2b4:	add	r2, r9, #3
   1c2b8:	ldr	r0, [sp, #44]	; 0x2c
   1c2bc:	sub	r0, r0, r2
   1c2c0:	cmp	r0, #2
   1c2c4:	blt	1c3e8 <main@@Base+0x9164>
   1c2c8:	ldrb	r0, [r2]
   1c2cc:	cmp	r0, #32
   1c2d0:	bls	1c3d4 <main@@Base+0x9150>
   1c2d4:	mov	r1, r2
   1c2d8:	b	1c3fc <main@@Base+0x9178>
   1c2dc:	bne	1c2f0 <main@@Base+0x906c>
   1c2e0:	mov	r7, r1
   1c2e4:	ldrb	r0, [r7, #1]!
   1c2e8:	cmp	r0, #32
   1c2ec:	bhi	1c300 <main@@Base+0x907c>
   1c2f0:	ldr	r0, [sp, #36]	; 0x24
   1c2f4:	ldr	r2, [sp, #44]	; 0x2c
   1c2f8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1c2fc:	mov	r7, r0
   1c300:	ldr	r0, [sp, #44]	; 0x2c
   1c304:	cmp	r7, r0
   1c308:	beq	1c340 <main@@Base+0x90bc>
   1c30c:	ldrb	r0, [r7]
   1c310:	cmp	r0, #58	; 0x3a
   1c314:	bne	1c340 <main@@Base+0x90bc>
   1c318:	ldr	r0, [sp, #44]	; 0x2c
   1c31c:	add	r1, r7, #1
   1c320:	sub	r0, r0, r1
   1c324:	cmp	r0, #2
   1c328:	blt	1c460 <main@@Base+0x91dc>
   1c32c:	ldrb	r0, [r1]
   1c330:	cmp	r0, #32
   1c334:	bls	1c450 <main@@Base+0x91cc>
   1c338:	mov	r7, r1
   1c33c:	b	1c470 <main@@Base+0x91ec>
   1c340:	ldr	r0, [sp, #36]	; 0x24
   1c344:	ldr	r2, [sp, #44]	; 0x2c
   1c348:	mov	r1, r7
   1c34c:	mov	r3, #4
   1c350:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1c354:	b	1c46c <main@@Base+0x91e8>
   1c358:	bne	1c36c <main@@Base+0x90e8>
   1c35c:	mov	r7, r1
   1c360:	ldrb	r0, [r7, #1]!
   1c364:	cmp	r0, #32
   1c368:	bhi	1c37c <main@@Base+0x90f8>
   1c36c:	ldr	r0, [sp, #36]	; 0x24
   1c370:	ldr	r2, [sp, #44]	; 0x2c
   1c374:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1c378:	mov	r7, r0
   1c37c:	ldr	r0, [sp, #44]	; 0x2c
   1c380:	cmp	r7, r0
   1c384:	beq	1c3bc <main@@Base+0x9138>
   1c388:	ldrb	r0, [r7]
   1c38c:	cmp	r0, #58	; 0x3a
   1c390:	bne	1c3bc <main@@Base+0x9138>
   1c394:	ldr	r0, [sp, #44]	; 0x2c
   1c398:	add	r1, r7, #1
   1c39c:	sub	r0, r0, r1
   1c3a0:	cmp	r0, #2
   1c3a4:	blt	1c5bc <main@@Base+0x9338>
   1c3a8:	ldrb	r0, [r1]
   1c3ac:	cmp	r0, #32
   1c3b0:	bls	1c5ac <main@@Base+0x9328>
   1c3b4:	mov	r7, r1
   1c3b8:	b	1c5cc <main@@Base+0x9348>
   1c3bc:	ldr	r0, [sp, #36]	; 0x24
   1c3c0:	ldr	r2, [sp, #44]	; 0x2c
   1c3c4:	mov	r1, r7
   1c3c8:	mov	r3, #4
   1c3cc:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1c3d0:	b	1c5c8 <main@@Base+0x9344>
   1c3d4:	bne	1c3e8 <main@@Base+0x9164>
   1c3d8:	mov	r1, r2
   1c3dc:	ldrb	r0, [r1, #1]!
   1c3e0:	cmp	r0, #32
   1c3e4:	bhi	1c3fc <main@@Base+0x9178>
   1c3e8:	mov	r1, r2
   1c3ec:	ldr	r0, [sp, #36]	; 0x24
   1c3f0:	ldr	r2, [sp, #44]	; 0x2c
   1c3f4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1c3f8:	mov	r1, r0
   1c3fc:	ldr	r0, [sp, #44]	; 0x2c
   1c400:	cmp	r1, r0
   1c404:	beq	1c43c <main@@Base+0x91b8>
   1c408:	ldrb	r0, [r1]
   1c40c:	cmp	r0, #58	; 0x3a
   1c410:	bne	1c43c <main@@Base+0x91b8>
   1c414:	ldr	r0, [sp, #44]	; 0x2c
   1c418:	add	r2, r1, #1
   1c41c:	sub	r0, r0, r2
   1c420:	cmp	r0, #2
   1c424:	blt	1c738 <main@@Base+0x94b4>
   1c428:	ldrb	r0, [r2]
   1c42c:	cmp	r0, #32
   1c430:	bls	1c728 <main@@Base+0x94a4>
   1c434:	mov	r1, r2
   1c438:	b	1c74c <main@@Base+0x94c8>
   1c43c:	ldr	r0, [sp, #36]	; 0x24
   1c440:	ldr	r2, [sp, #44]	; 0x2c
   1c444:	mov	r3, #4
   1c448:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1c44c:	b	1c748 <main@@Base+0x94c4>
   1c450:	bne	1c460 <main@@Base+0x91dc>
   1c454:	ldrb	r0, [r7, #2]!
   1c458:	cmp	r0, #32
   1c45c:	bhi	1c470 <main@@Base+0x91ec>
   1c460:	ldr	r0, [sp, #36]	; 0x24
   1c464:	ldr	r2, [sp, #44]	; 0x2c
   1c468:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1c46c:	mov	r7, r0
   1c470:	cmp	r9, r7
   1c474:	beq	1c7a0 <main@@Base+0x951c>
   1c478:	ldr	r0, [sp, #44]	; 0x2c
   1c47c:	mov	r6, #0
   1c480:	str	r6, [fp, #-52]	; 0xffffffcc
   1c484:	str	r6, [fp, #-56]	; 0xffffffc8
   1c488:	strh	r6, [fp, #-60]	; 0xffffffc4
   1c48c:	str	r6, [sp, #56]	; 0x38
   1c490:	cmp	r7, r0
   1c494:	beq	1c4e0 <main@@Base+0x925c>
   1c498:	sub	r0, fp, #56	; 0x38
   1c49c:	ldr	r2, [sp, #44]	; 0x2c
   1c4a0:	mov	r1, r7
   1c4a4:	add	r3, sp, #56	; 0x38
   1c4a8:	str	r0, [sp]
   1c4ac:	ldr	r0, [sp, #36]	; 0x24
   1c4b0:	bl	2edac <flatcc_json_parser_integer@@Base>
   1c4b4:	cmp	r0, r7
   1c4b8:	beq	1c4e8 <main@@Base+0x9264>
   1c4bc:	mov	r4, r0
   1c4c0:	ldr	r0, [sp, #56]	; 0x38
   1c4c4:	cmp	r0, #0
   1c4c8:	beq	1c4f0 <main@@Base+0x926c>
   1c4cc:	ldr	r0, [sp, #36]	; 0x24
   1c4d0:	ldr	r2, [sp, #44]	; 0x2c
   1c4d4:	mov	r1, r4
   1c4d8:	mov	r3, #8
   1c4dc:	b	1c514 <main@@Base+0x9290>
   1c4e0:	ldr	r4, [sp, #44]	; 0x2c
   1c4e4:	b	1c51c <main@@Base+0x9298>
   1c4e8:	mov	r4, r7
   1c4ec:	b	1c51c <main@@Base+0x9298>
   1c4f0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c4f4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c4f8:	subs	r2, r0, #65536	; 0x10000
   1c4fc:	sbcs	r1, r1, #0
   1c500:	bcc	1c5a0 <main@@Base+0x931c>
   1c504:	ldr	r0, [sp, #36]	; 0x24
   1c508:	ldr	r2, [sp, #44]	; 0x2c
   1c50c:	mov	r1, r4
   1c510:	mov	r3, #7
   1c514:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1c518:	mov	r4, r0
   1c51c:	cmp	r7, r4
   1c520:	bne	1c55c <main@@Base+0x92d8>
   1c524:	sub	r0, fp, #60	; 0x3c
   1c528:	ldr	r2, [sp, #44]	; 0x2c
   1c52c:	movw	r3, #17208	; 0x4338
   1c530:	mov	r1, r7
   1c534:	str	r0, [sp]
   1c538:	ldr	r0, [sp, #36]	; 0x24
   1c53c:	movt	r3, #4
   1c540:	bl	28520 <main@@Base+0x1529c>
   1c544:	cmp	r0, r7
   1c548:	mov	r4, r0
   1c54c:	ldrne	r0, [sp, #44]	; 0x2c
   1c550:	cmpne	r4, r0
   1c554:	beq	1c888 <main@@Base+0x9604>
   1c558:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   1c55c:	movw	r0, #65535	; 0xffff
   1c560:	tst	r6, r0
   1c564:	bne	1c578 <main@@Base+0x92f4>
   1c568:	ldr	r0, [sp, #36]	; 0x24
   1c56c:	ldrb	r0, [r0, #8]
   1c570:	tst	r0, #2
   1c574:	beq	1c794 <main@@Base+0x9510>
   1c578:	ldr	r0, [sp, #36]	; 0x24
   1c57c:	mov	r1, #2
   1c580:	mov	r2, #2
   1c584:	mov	r3, #2
   1c588:	ldr	r0, [r0]
   1c58c:	bl	2b574 <flatcc_builder_table_add@@Base>
   1c590:	cmp	r0, #0
   1c594:	beq	1c888 <main@@Base+0x9604>
   1c598:	strh	r6, [r0]
   1c59c:	b	1c794 <main@@Base+0x9510>
   1c5a0:	mov	r6, r0
   1c5a4:	strh	r0, [fp, #-60]	; 0xffffffc4
   1c5a8:	b	1c51c <main@@Base+0x9298>
   1c5ac:	bne	1c5bc <main@@Base+0x9338>
   1c5b0:	ldrb	r0, [r7, #2]!
   1c5b4:	cmp	r0, #32
   1c5b8:	bhi	1c5cc <main@@Base+0x9348>
   1c5bc:	ldr	r0, [sp, #36]	; 0x24
   1c5c0:	ldr	r2, [sp, #44]	; 0x2c
   1c5c4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1c5c8:	mov	r7, r0
   1c5cc:	cmp	r9, r7
   1c5d0:	beq	1c7a0 <main@@Base+0x951c>
   1c5d4:	ldr	r0, [sp, #44]	; 0x2c
   1c5d8:	mov	r6, #0
   1c5dc:	str	r6, [fp, #-52]	; 0xffffffcc
   1c5e0:	str	r6, [fp, #-56]	; 0xffffffc8
   1c5e4:	str	r6, [sp, #60]	; 0x3c
   1c5e8:	str	r6, [sp, #56]	; 0x38
   1c5ec:	str	r6, [fp, #-60]	; 0xffffffc4
   1c5f0:	cmp	r7, r0
   1c5f4:	beq	1c650 <main@@Base+0x93cc>
   1c5f8:	sub	r0, fp, #56	; 0x38
   1c5fc:	ldr	r2, [sp, #44]	; 0x2c
   1c600:	mov	r1, r7
   1c604:	sub	r3, fp, #60	; 0x3c
   1c608:	str	r0, [sp]
   1c60c:	ldr	r0, [sp, #36]	; 0x24
   1c610:	bl	2edac <flatcc_json_parser_integer@@Base>
   1c614:	cmp	r0, r7
   1c618:	beq	1c658 <main@@Base+0x93d4>
   1c61c:	sub	r9, fp, #60	; 0x3c
   1c620:	mov	r4, r0
   1c624:	ldm	r9, {r0, r6, r9}
   1c628:	cmp	r0, #0
   1c62c:	beq	1c668 <main@@Base+0x93e4>
   1c630:	subs	r0, r6, #1
   1c634:	sbcs	r0, r9, #-2147483648	; 0x80000000
   1c638:	bcc	1c694 <main@@Base+0x9410>
   1c63c:	ldr	r0, [sp, #36]	; 0x24
   1c640:	ldr	r2, [sp, #44]	; 0x2c
   1c644:	mov	r1, r4
   1c648:	mov	r3, #8
   1c64c:	b	1c680 <main@@Base+0x93fc>
   1c650:	ldr	r4, [sp, #44]	; 0x2c
   1c654:	b	1c68c <main@@Base+0x9408>
   1c658:	mov	r6, #0
   1c65c:	mov	r9, #0
   1c660:	mov	r4, r7
   1c664:	b	1c6a4 <main@@Base+0x9420>
   1c668:	cmn	r9, #1
   1c66c:	bgt	1c69c <main@@Base+0x9418>
   1c670:	ldr	r0, [sp, #36]	; 0x24
   1c674:	ldr	r2, [sp, #44]	; 0x2c
   1c678:	mov	r1, r4
   1c67c:	mov	r3, #7
   1c680:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1c684:	mov	r4, r0
   1c688:	mov	r6, #0
   1c68c:	mov	r9, #0
   1c690:	b	1c6a4 <main@@Base+0x9420>
   1c694:	rsbs	r6, r6, #0
   1c698:	rsc	r9, r9, #0
   1c69c:	str	r6, [sp, #56]	; 0x38
   1c6a0:	str	r9, [sp, #60]	; 0x3c
   1c6a4:	cmp	r7, r4
   1c6a8:	bne	1c6e8 <main@@Base+0x9464>
   1c6ac:	add	r0, sp, #56	; 0x38
   1c6b0:	ldr	r2, [sp, #44]	; 0x2c
   1c6b4:	movw	r3, #17220	; 0x4344
   1c6b8:	mov	r1, r7
   1c6bc:	str	r0, [sp]
   1c6c0:	ldr	r0, [sp, #36]	; 0x24
   1c6c4:	movt	r3, #4
   1c6c8:	bl	22958 <main@@Base+0xf6d4>
   1c6cc:	cmp	r0, r7
   1c6d0:	mov	r4, r0
   1c6d4:	ldrne	r0, [sp, #44]	; 0x2c
   1c6d8:	cmpne	r4, r0
   1c6dc:	beq	1c888 <main@@Base+0x9604>
   1c6e0:	ldr	r6, [sp, #56]	; 0x38
   1c6e4:	ldr	r9, [sp, #60]	; 0x3c
   1c6e8:	orrs	r0, r6, r9
   1c6ec:	bne	1c700 <main@@Base+0x947c>
   1c6f0:	ldr	r0, [sp, #36]	; 0x24
   1c6f4:	ldrb	r0, [r0, #8]
   1c6f8:	tst	r0, #2
   1c6fc:	beq	1c794 <main@@Base+0x9510>
   1c700:	ldr	r0, [sp, #36]	; 0x24
   1c704:	mov	r1, #1
   1c708:	mov	r2, #8
   1c70c:	mov	r3, #8
   1c710:	ldr	r0, [r0]
   1c714:	bl	2b574 <flatcc_builder_table_add@@Base>
   1c718:	cmp	r0, #0
   1c71c:	beq	1c888 <main@@Base+0x9604>
   1c720:	stm	r0, {r6, r9}
   1c724:	b	1c794 <main@@Base+0x9510>
   1c728:	bne	1c738 <main@@Base+0x94b4>
   1c72c:	ldrb	r0, [r1, #2]!
   1c730:	cmp	r0, #32
   1c734:	bhi	1c74c <main@@Base+0x94c8>
   1c738:	mov	r1, r2
   1c73c:	ldr	r0, [sp, #36]	; 0x24
   1c740:	ldr	r2, [sp, #44]	; 0x2c
   1c744:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1c748:	mov	r1, r0
   1c74c:	cmp	r9, r1
   1c750:	beq	1c7a0 <main@@Base+0x951c>
   1c754:	ldr	r0, [sp, #36]	; 0x24
   1c758:	ldr	r2, [sp, #44]	; 0x2c
   1c75c:	add	r3, sp, #64	; 0x40
   1c760:	bl	2f2d8 <flatcc_json_parser_build_string@@Base>
   1c764:	mov	r4, r0
   1c768:	ldr	r0, [sp, #64]	; 0x40
   1c76c:	cmp	r0, #0
   1c770:	beq	1c888 <main@@Base+0x9604>
   1c774:	ldr	r0, [sp, #36]	; 0x24
   1c778:	mov	r1, #0
   1c77c:	ldr	r0, [r0]
   1c780:	bl	2b448 <flatcc_builder_table_add_offset@@Base>
   1c784:	cmp	r0, #0
   1c788:	beq	1c888 <main@@Base+0x9604>
   1c78c:	ldr	r1, [sp, #64]	; 0x40
   1c790:	str	r1, [r0]
   1c794:	ldr	r5, [sp, #44]	; 0x2c
   1c798:	ldr	r8, [sp, #36]	; 0x24
   1c79c:	b	1c7bc <main@@Base+0x9538>
   1c7a0:	ldr	r8, [sp, #36]	; 0x24
   1c7a4:	ldr	r5, [sp, #44]	; 0x2c
   1c7a8:	mov	r1, r9
   1c7ac:	mov	r0, r8
   1c7b0:	mov	r2, r5
   1c7b4:	bl	2d5e0 <flatcc_json_parser_unmatched_symbol@@Base>
   1c7b8:	mov	r4, r0
   1c7bc:	sub	r0, r5, r4
   1c7c0:	cmp	r0, #2
   1c7c4:	blt	1c7f0 <main@@Base+0x956c>
   1c7c8:	ldrb	r0, [r4]
   1c7cc:	cmp	r0, #32
   1c7d0:	bls	1c7dc <main@@Base+0x9558>
   1c7d4:	mov	r2, r4
   1c7d8:	b	1c804 <main@@Base+0x9580>
   1c7dc:	bne	1c7f0 <main@@Base+0x956c>
   1c7e0:	mov	r2, r4
   1c7e4:	ldrb	r0, [r2, #1]!
   1c7e8:	cmp	r0, #32
   1c7ec:	bhi	1c804 <main@@Base+0x9580>
   1c7f0:	mov	r0, r8
   1c7f4:	mov	r1, r4
   1c7f8:	mov	r2, r5
   1c7fc:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1c800:	mov	r2, r0
   1c804:	cmp	r2, r5
   1c808:	beq	1cba0 <main@@Base+0x991c>
   1c80c:	ldrb	r0, [r2]
   1c810:	cmp	r0, #44	; 0x2c
   1c814:	bne	1cbe4 <main@@Base+0x9960>
   1c818:	add	r1, r2, #1
   1c81c:	sub	r0, r5, r1
   1c820:	cmp	r0, #2
   1c824:	blt	1c858 <main@@Base+0x95d4>
   1c828:	ldrb	r0, [r1]
   1c82c:	cmp	r0, #32
   1c830:	bls	1c840 <main@@Base+0x95bc>
   1c834:	ldr	r5, [sp, #44]	; 0x2c
   1c838:	mov	r2, r1
   1c83c:	b	1c868 <main@@Base+0x95e4>
   1c840:	ldr	r5, [sp, #44]	; 0x2c
   1c844:	ldr	r8, [sp, #36]	; 0x24
   1c848:	bne	1c858 <main@@Base+0x95d4>
   1c84c:	ldrb	r0, [r2, #2]!
   1c850:	cmp	r0, #32
   1c854:	bhi	1c868 <main@@Base+0x95e4>
   1c858:	mov	r0, r8
   1c85c:	mov	r2, r5
   1c860:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1c864:	mov	r2, r0
   1c868:	cmp	r2, r5
   1c86c:	beq	1cc4c <main@@Base+0x99c8>
   1c870:	ldrb	r0, [r2]
   1c874:	cmp	r0, #125	; 0x7d
   1c878:	bne	1c000 <main@@Base+0x8d7c>
   1c87c:	add	r1, r2, #1
   1c880:	sub	r0, r5, r1
   1c884:	b	1cbf8 <main@@Base+0x9974>
   1c888:	ldr	r5, [sp, #44]	; 0x2c
   1c88c:	ldr	r8, [sp, #36]	; 0x24
   1c890:	ldr	sl, [sp, #40]	; 0x28
   1c894:	mov	r0, r8
   1c898:	mov	r1, r4
   1c89c:	mov	r2, r5
   1c8a0:	mov	r3, #33	; 0x21
   1c8a4:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1c8a8:	mov	r4, r0
   1c8ac:	ldr	r0, [sp, #52]	; 0x34
   1c8b0:	cmp	r0, #0
   1c8b4:	beq	13340 <main@@Base+0xbc>
   1c8b8:	ldr	r0, [r8]
   1c8bc:	mov	r1, #14
   1c8c0:	b	15a40 <main@@Base+0x27bc>
   1c8c4:	ldr	r5, [sp, #44]	; 0x2c
   1c8c8:	ldr	r8, [sp, #36]	; 0x24
   1c8cc:	ldr	sl, [sp, #40]	; 0x28
   1c8d0:	bne	1c8e4 <main@@Base+0x9660>
   1c8d4:	ldrb	r0, [r2, #2]!
   1c8d8:	mov	r4, r2
   1c8dc:	cmp	r0, #32
   1c8e0:	bhi	182d0 <main@@Base+0x504c>
   1c8e4:	mov	r0, r8
   1c8e8:	mov	r2, r5
   1c8ec:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1c8f0:	b	182cc <main@@Base+0x5048>
   1c8f4:	ldr	r5, [sp, #44]	; 0x2c
   1c8f8:	ldr	r8, [sp, #36]	; 0x24
   1c8fc:	ldr	sl, [sp, #40]	; 0x28
   1c900:	bne	1c910 <main@@Base+0x968c>
   1c904:	ldrb	r0, [r4, #2]!
   1c908:	cmp	r0, #32
   1c90c:	bhi	19d20 <main@@Base+0x6a9c>
   1c910:	mov	r0, r8
   1c914:	mov	r2, r5
   1c918:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1c91c:	mov	r4, r0
   1c920:	b	19d20 <main@@Base+0x6a9c>
   1c924:	ldr	r5, [sp, #44]	; 0x2c
   1c928:	ldr	r8, [sp, #36]	; 0x24
   1c92c:	ldr	sl, [sp, #40]	; 0x28
   1c930:	bne	1c944 <main@@Base+0x96c0>
   1c934:	ldrb	r0, [r4, #2]!
   1c938:	mov	r7, r4
   1c93c:	cmp	r0, #32
   1c940:	bhi	18388 <main@@Base+0x5104>
   1c944:	mov	r0, r8
   1c948:	mov	r2, r5
   1c94c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1c950:	b	18384 <main@@Base+0x5100>
   1c954:	ldr	r8, [sp, #36]	; 0x24
   1c958:	ldr	r5, [sp, #44]	; 0x2c
   1c95c:	mov	r1, r2
   1c960:	mov	r0, r8
   1c964:	mov	r2, r5
   1c968:	mov	r3, #10
   1c96c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1c970:	ldr	sl, [sp, #40]	; 0x28
   1c974:	b	181dc <main@@Base+0x4f58>
   1c978:	ldr	r8, [sp, #36]	; 0x24
   1c97c:	ldr	r5, [sp, #44]	; 0x2c
   1c980:	mov	r1, r2
   1c984:	mov	r0, r8
   1c988:	mov	r2, r5
   1c98c:	mov	r3, #9
   1c990:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1c994:	ldr	sl, [sp, #40]	; 0x28
   1c998:	b	195d4 <main@@Base+0x6350>
   1c99c:	ldr	r0, [sp, #36]	; 0x24
   1c9a0:	ldr	r2, [sp, #44]	; 0x2c
   1c9a4:	mov	r1, r4
   1c9a8:	mov	r3, #9
   1c9ac:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1c9b0:	b	1cb7c <main@@Base+0x98f8>
   1c9b4:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1c9b8:	mov	r4, r1
   1c9bc:	str	r6, [fp, #-60]	; 0xffffffc4
   1c9c0:	b	1ba74 <main@@Base+0x87f0>
   1c9c4:	ldr	r8, [sp, #36]	; 0x24
   1c9c8:	ldr	r5, [sp, #44]	; 0x2c
   1c9cc:	mov	r1, r2
   1c9d0:	mov	r0, r8
   1c9d4:	mov	r2, r5
   1c9d8:	mov	r3, #9
   1c9dc:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1c9e0:	ldr	sl, [sp, #40]	; 0x28
   1c9e4:	b	19a8c <main@@Base+0x6808>
   1c9e8:	ldr	r9, [sp, #44]	; 0x2c
   1c9ec:	b	1cd10 <main@@Base+0x9a8c>
   1c9f0:	cmp	r0, #93	; 0x5d
   1c9f4:	bne	1cc88 <main@@Base+0x9a04>
   1c9f8:	ldr	r0, [sp, #44]	; 0x2c
   1c9fc:	add	r1, r9, #1
   1ca00:	sub	r0, r0, r1
   1ca04:	cmp	r0, #2
   1ca08:	blt	1cd00 <main@@Base+0x9a7c>
   1ca0c:	ldrb	r0, [r1]
   1ca10:	cmp	r0, #32
   1ca14:	bls	1ccf0 <main@@Base+0x9a6c>
   1ca18:	mov	r9, r1
   1ca1c:	b	1cd10 <main@@Base+0x9a8c>
   1ca20:	ldr	r1, [sp, #44]	; 0x2c
   1ca24:	ldr	r0, [sp, #36]	; 0x24
   1ca28:	mov	r2, r1
   1ca2c:	b	1cc94 <main@@Base+0x9a10>
   1ca30:	ldr	r8, [sp, #36]	; 0x24
   1ca34:	ldr	r5, [sp, #44]	; 0x2c
   1ca38:	mov	r1, r3
   1ca3c:	mov	r0, r8
   1ca40:	mov	r2, r5
   1ca44:	mov	r3, #10
   1ca48:	b	18928 <main@@Base+0x56a4>
   1ca4c:	ldr	r4, [sp, #44]	; 0x2c
   1ca50:	b	1caa4 <main@@Base+0x9820>
   1ca54:	cmp	r0, #93	; 0x5d
   1ca58:	bne	1cca0 <main@@Base+0x9a1c>
   1ca5c:	ldr	r0, [sp, #44]	; 0x2c
   1ca60:	add	r1, r4, #1
   1ca64:	sub	r0, r0, r1
   1ca68:	cmp	r0, #2
   1ca6c:	blt	1ca94 <main@@Base+0x9810>
   1ca70:	ldrb	r0, [r1]
   1ca74:	cmp	r0, #32
   1ca78:	bls	1ca84 <main@@Base+0x9800>
   1ca7c:	mov	r4, r1
   1ca80:	b	1caa4 <main@@Base+0x9820>
   1ca84:	bne	1ca94 <main@@Base+0x9810>
   1ca88:	ldrb	r0, [r4, #2]!
   1ca8c:	cmp	r0, #32
   1ca90:	bhi	1caa4 <main@@Base+0x9820>
   1ca94:	ldr	r0, [sp, #36]	; 0x24
   1ca98:	ldr	r2, [sp, #44]	; 0x2c
   1ca9c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1caa0:	mov	r4, r0
   1caa4:	ldr	r8, [sp, #36]	; 0x24
   1caa8:	ldr	r0, [r8]
   1caac:	bl	2af88 <flatcc_builder_end_vector@@Base>
   1cab0:	ldr	r5, [sp, #44]	; 0x2c
   1cab4:	ldr	sl, [sp, #40]	; 0x28
   1cab8:	cmp	r0, #0
   1cabc:	str	r0, [sp, #52]	; 0x34
   1cac0:	beq	13340 <main@@Base+0xbc>
   1cac4:	ldr	r0, [r8]
   1cac8:	mov	r1, #13
   1cacc:	b	15a40 <main@@Base+0x27bc>
   1cad0:	ldr	r5, [sp, #44]	; 0x2c
   1cad4:	ldr	r8, [sp, #36]	; 0x24
   1cad8:	ldr	sl, [sp, #40]	; 0x28
   1cadc:	bne	1caf0 <main@@Base+0x986c>
   1cae0:	ldrb	r0, [r2, #2]!
   1cae4:	mov	r4, r2
   1cae8:	cmp	r0, #32
   1caec:	bhi	181e0 <main@@Base+0x4f5c>
   1caf0:	mov	r0, r8
   1caf4:	mov	r2, r5
   1caf8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1cafc:	b	181dc <main@@Base+0x4f58>
   1cb00:	ldr	r1, [sp, #44]	; 0x2c
   1cb04:	ldr	r0, [sp, #36]	; 0x24
   1cb08:	mov	r2, r1
   1cb0c:	b	1ccac <main@@Base+0x9a28>
   1cb10:	mov	r4, r5
   1cb14:	b	1cccc <main@@Base+0x9a48>
   1cb18:	ldr	r5, [sp, #44]	; 0x2c
   1cb1c:	ldr	r8, [sp, #36]	; 0x24
   1cb20:	ldr	sl, [sp, #40]	; 0x28
   1cb24:	bne	1cb38 <main@@Base+0x98b4>
   1cb28:	ldrb	r0, [r2, #2]!
   1cb2c:	mov	r4, r2
   1cb30:	cmp	r0, #32
   1cb34:	bhi	195d8 <main@@Base+0x6354>
   1cb38:	mov	r0, r8
   1cb3c:	mov	r2, r5
   1cb40:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1cb44:	b	195d4 <main@@Base+0x6350>
   1cb48:	cmp	r0, #93	; 0x5d
   1cb4c:	bne	1ccb4 <main@@Base+0x9a30>
   1cb50:	ldr	r0, [sp, #44]	; 0x2c
   1cb54:	add	r1, r4, #1
   1cb58:	sub	r0, r0, r1
   1cb5c:	b	1cbb0 <main@@Base+0x992c>
   1cb60:	bne	1cb70 <main@@Base+0x98ec>
   1cb64:	ldrb	r0, [r4, #2]!
   1cb68:	cmp	r0, #32
   1cb6c:	bhi	1cb80 <main@@Base+0x98fc>
   1cb70:	ldr	r0, [sp, #36]	; 0x24
   1cb74:	ldr	r2, [sp, #44]	; 0x2c
   1cb78:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1cb7c:	mov	r4, r0
   1cb80:	ldr	r5, [sp, #44]	; 0x2c
   1cb84:	ldr	r8, [sp, #36]	; 0x24
   1cb88:	ldr	sl, [sp, #40]	; 0x28
   1cb8c:	b	19c2c <main@@Base+0x69a8>
   1cb90:	mov	r0, r8
   1cb94:	mov	r1, r5
   1cb98:	mov	r2, r5
   1cb9c:	b	1ccc0 <main@@Base+0x9a3c>
   1cba0:	mov	r4, r5
   1cba4:	b	19b50 <main@@Base+0x68cc>
   1cba8:	add	r1, r4, #1
   1cbac:	sub	r0, r5, r1
   1cbb0:	cmp	r0, #2
   1cbb4:	blt	1cbd4 <main@@Base+0x9950>
   1cbb8:	ldrb	r0, [r1]
   1cbbc:	cmp	r0, #32
   1cbc0:	bhi	1ae98 <main@@Base+0x7c14>
   1cbc4:	bne	1cbd4 <main@@Base+0x9950>
   1cbc8:	ldrb	r0, [r4, #2]!
   1cbcc:	cmp	r0, #32
   1cbd0:	bhi	1cccc <main@@Base+0x9a48>
   1cbd4:	ldr	r0, [sp, #36]	; 0x24
   1cbd8:	ldr	r2, [sp, #44]	; 0x2c
   1cbdc:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1cbe0:	b	1ccc8 <main@@Base+0x9a44>
   1cbe4:	cmp	r0, #125	; 0x7d
   1cbe8:	bne	1ccd8 <main@@Base+0x9a54>
   1cbec:	ldr	r0, [sp, #44]	; 0x2c
   1cbf0:	add	r1, r2, #1
   1cbf4:	sub	r0, r0, r1
   1cbf8:	ldr	r8, [sp, #36]	; 0x24
   1cbfc:	cmp	r0, #2
   1cc00:	blt	1cd30 <main@@Base+0x9aac>
   1cc04:	ldrb	r0, [r1]
   1cc08:	cmp	r0, #32
   1cc0c:	bls	1cd18 <main@@Base+0x9a94>
   1cc10:	ldr	r8, [sp, #36]	; 0x24
   1cc14:	mov	r4, r1
   1cc18:	b	19b50 <main@@Base+0x68cc>
   1cc1c:	ldr	r5, [sp, #44]	; 0x2c
   1cc20:	ldr	r8, [sp, #36]	; 0x24
   1cc24:	ldr	sl, [sp, #40]	; 0x28
   1cc28:	bne	1cc3c <main@@Base+0x99b8>
   1cc2c:	ldrb	r0, [r2, #2]!
   1cc30:	mov	r4, r2
   1cc34:	cmp	r0, #32
   1cc38:	bhi	19a90 <main@@Base+0x680c>
   1cc3c:	mov	r0, r8
   1cc40:	mov	r2, r5
   1cc44:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1cc48:	b	19a8c <main@@Base+0x6808>
   1cc4c:	ldr	r8, [sp, #36]	; 0x24
   1cc50:	mov	r1, r5
   1cc54:	mov	r2, r5
   1cc58:	b	1cce4 <main@@Base+0x9a60>
   1cc5c:	ldr	r5, [sp, #44]	; 0x2c
   1cc60:	ldr	r8, [sp, #36]	; 0x24
   1cc64:	bne	1cc78 <main@@Base+0x99f4>
   1cc68:	ldrb	r0, [r3, #2]!
   1cc6c:	mov	r4, r3
   1cc70:	cmp	r0, #32
   1cc74:	bhi	18930 <main@@Base+0x56ac>
   1cc78:	mov	r0, r8
   1cc7c:	mov	r2, r5
   1cc80:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1cc84:	b	1892c <main@@Base+0x56a8>
   1cc88:	ldr	r0, [sp, #36]	; 0x24
   1cc8c:	ldr	r2, [sp, #44]	; 0x2c
   1cc90:	mov	r1, r9
   1cc94:	mov	r3, #9
   1cc98:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1cc9c:	b	1cd0c <main@@Base+0x9a88>
   1cca0:	ldr	r0, [sp, #36]	; 0x24
   1cca4:	ldr	r2, [sp, #44]	; 0x2c
   1cca8:	mov	r1, r4
   1ccac:	mov	r3, #9
   1ccb0:	b	19f44 <main@@Base+0x6cc0>
   1ccb4:	ldr	r0, [sp, #36]	; 0x24
   1ccb8:	ldr	r2, [sp, #44]	; 0x2c
   1ccbc:	mov	r1, r4
   1ccc0:	mov	r3, #9
   1ccc4:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1ccc8:	mov	r4, r0
   1cccc:	ldr	r5, [sp, #44]	; 0x2c
   1ccd0:	ldr	r8, [sp, #36]	; 0x24
   1ccd4:	b	19d1c <main@@Base+0x6a98>
   1ccd8:	ldr	r8, [sp, #36]	; 0x24
   1ccdc:	mov	r1, r2
   1cce0:	ldr	r2, [sp, #44]	; 0x2c
   1cce4:	mov	r0, r8
   1cce8:	mov	r3, #10
   1ccec:	b	19b48 <main@@Base+0x68c4>
   1ccf0:	bne	1cd00 <main@@Base+0x9a7c>
   1ccf4:	ldrb	r0, [r9, #2]!
   1ccf8:	cmp	r0, #32
   1ccfc:	bhi	1cd10 <main@@Base+0x9a8c>
   1cd00:	ldr	r0, [sp, #36]	; 0x24
   1cd04:	ldr	r2, [sp, #44]	; 0x2c
   1cd08:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1cd0c:	mov	r9, r0
   1cd10:	ldr	r8, [sp, #36]	; 0x24
   1cd14:	b	1b188 <main@@Base+0x7f04>
   1cd18:	ldr	r8, [sp, #36]	; 0x24
   1cd1c:	bne	1cd30 <main@@Base+0x9aac>
   1cd20:	ldrb	r0, [r2, #2]!
   1cd24:	mov	r4, r2
   1cd28:	cmp	r0, #32
   1cd2c:	bhi	19b50 <main@@Base+0x68cc>
   1cd30:	ldr	r2, [sp, #44]	; 0x2c
   1cd34:	mov	r0, r8
   1cd38:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1cd3c:	b	19b4c <main@@Base+0x68c8>
   1cd40:	mov	r4, r5
   1cd44:	b	133e0 <main@@Base+0x15c>
   1cd48:	cmp	r0, #125	; 0x7d
   1cd4c:	bne	1cd80 <main@@Base+0x9afc>
   1cd50:	add	r1, r2, #1
   1cd54:	sub	r0, r5, r1
   1cd58:	cmp	r0, #2
   1cd5c:	blt	1cda8 <main@@Base+0x9b24>
   1cd60:	ldrb	r0, [r1]
   1cd64:	cmp	r0, #32
   1cd68:	bls	1cd94 <main@@Base+0x9b10>
   1cd6c:	mov	r4, r1
   1cd70:	b	133e0 <main@@Base+0x15c>
   1cd74:	mov	r0, r8
   1cd78:	mov	r1, r5
   1cd7c:	b	1cd88 <main@@Base+0x9b04>
   1cd80:	mov	r0, r8
   1cd84:	mov	r1, r2
   1cd88:	mov	r2, r5
   1cd8c:	mov	r3, #10
   1cd90:	b	133d8 <main@@Base+0x154>
   1cd94:	bne	1cda8 <main@@Base+0x9b24>
   1cd98:	ldrb	r0, [r2, #2]!
   1cd9c:	mov	r4, r2
   1cda0:	cmp	r0, #32
   1cda4:	bhi	133e0 <main@@Base+0x15c>
   1cda8:	mov	r0, r8
   1cdac:	mov	r2, r5
   1cdb0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1cdb4:	b	133dc <main@@Base+0x158>
   1cdb8:	mov	r4, r6
   1cdbc:	b	13340 <main@@Base+0xbc>
   1cdc0:	ldr	r8, [sp, #36]	; 0x24
   1cdc4:	mov	r4, r1
   1cdc8:	b	13340 <main@@Base+0xbc>
   1cdcc:	ldr	r5, [sp, #44]	; 0x2c
   1cdd0:	b	1cdd8 <main@@Base+0x9b54>
   1cdd4:	ldr	r8, [sp, #36]	; 0x24
   1cdd8:	mov	r4, r9
   1cddc:	b	13340 <main@@Base+0xbc>
   1cde0:	mov	r4, r5
   1cde4:	b	1ce04 <main@@Base+0x9b80>
   1cde8:	ldr	r5, [sp, #44]	; 0x2c
   1cdec:	ldr	r8, [sp, #36]	; 0x24
   1cdf0:	mov	r4, r7
   1cdf4:	b	13340 <main@@Base+0xbc>
   1cdf8:	mov	r4, r1
   1cdfc:	b	1ce04 <main@@Base+0x9b80>
   1ce00:	mov	r4, r6
   1ce04:	ldr	r5, [sp, #44]	; 0x2c
   1ce08:	ldr	r8, [sp, #36]	; 0x24
   1ce0c:	b	13340 <main@@Base+0xbc>
   1ce10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ce14:	add	fp, sp, #28
   1ce18:	sub	sp, sp, #12
   1ce1c:	mov	r5, r1
   1ce20:	sub	r1, r2, r1
   1ce24:	cmp	r1, #8
   1ce28:	movcs	r1, #8
   1ce2c:	sub	r4, r1, #1
   1ce30:	cmp	r4, #7
   1ce34:	bhi	1cfa4 <main@@Base+0x9d20>
   1ce38:	str	r3, [sp, #8]
   1ce3c:	add	r8, pc, #32
   1ce40:	mov	r9, #0
   1ce44:	mov	ip, #0
   1ce48:	mov	lr, #0
   1ce4c:	mov	sl, #0
   1ce50:	mov	r6, #0
   1ce54:	mov	r3, #0
   1ce58:	mov	r1, #0
   1ce5c:	mov	r7, #0
   1ce60:	ldr	pc, [r8, r4, lsl #2]
   1ce64:	andeq	ip, r1, r8, asr #29
   1ce68:	andeq	ip, r1, r0, asr #29
   1ce6c:			; <UNDEFINED> instruction: 0x0001ceb8
   1ce70:			; <UNDEFINED> instruction: 0x0001ceb0
   1ce74:	andeq	ip, r1, r4, lsr #29
   1ce78:	muleq	r1, r8, lr
   1ce7c:	andeq	ip, r1, r8, lsl #29
   1ce80:	andeq	ip, r1, r4, lsl #29
   1ce84:	ldrb	ip, [r5, #7]
   1ce88:	ldrb	r1, [r5, #6]
   1ce8c:	mov	lr, r9
   1ce90:	orr	r1, ip, r1, lsl #8
   1ce94:	mov	r9, r1
   1ce98:	ldrb	r1, [r5, #5]
   1ce9c:	mov	sl, lr
   1cea0:	orr	r9, r9, r1, lsl #16
   1cea4:	ldrb	r1, [r5, #4]
   1cea8:	mov	r6, sl
   1ceac:	orr	r9, r9, r1, lsl #24
   1ceb0:	ldrb	r1, [r5, #3]
   1ceb4:	orr	r3, r1, r6
   1ceb8:	ldrb	r1, [r5, #2]
   1cebc:	orr	r1, r3, r1, lsl #8
   1cec0:	ldrb	r3, [r5, #1]
   1cec4:	orr	r7, r1, r3, lsl #16
   1cec8:	ldrb	r1, [r5]
   1cecc:	movw	r4, #25957	; 0x6565
   1ced0:	ldr	r3, [fp, #12]
   1ced4:	ldr	r8, [fp, #8]
   1ced8:	movt	r4, #18290	; 0x4772
   1cedc:	orr	r7, r7, r1, lsl #24
   1cee0:	mvn	r1, #-1845493760	; 0x92000000
   1cee4:	subs	r1, r1, r9
   1cee8:	sbcs	r1, r4, r7
   1ceec:	bcc	1cf24 <main@@Base+0x9ca0>
   1cef0:	movw	r1, #30053	; 0x7565
   1cef4:	movt	r1, #17004	; 0x426c
   1cef8:	teq	r7, r1
   1cefc:	bne	1cfa4 <main@@Base+0x9d20>
   1cf00:	str	r3, [sp]
   1cf04:	mov	r1, r5
   1cf08:	mov	r3, #4
   1cf0c:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   1cf10:	cmp	r0, r5
   1cf14:	beq	1cfa4 <main@@Base+0x9d20>
   1cf18:	mov	r1, #0
   1cf1c:	mov	r2, #8
   1cf20:	b	1cf90 <main@@Base+0x9d0c>
   1cf24:	movw	r6, #25600	; 0x6400
   1cf28:	bic	r1, r7, #255	; 0xff
   1cf2c:	movt	r6, #21093	; 0x5265
   1cf30:	teq	r1, r6
   1cf34:	bne	1cf5c <main@@Base+0x9cd8>
   1cf38:	str	r3, [sp]
   1cf3c:	mov	r1, r5
   1cf40:	mov	r3, #3
   1cf44:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   1cf48:	cmp	r0, r5
   1cf4c:	beq	1cfa4 <main@@Base+0x9d20>
   1cf50:	mov	r1, #0
   1cf54:	mov	r2, #1
   1cf58:	b	1cf90 <main@@Base+0x9d0c>
   1cf5c:	eor	r1, r7, r4
   1cf60:	and	r7, r9, #-16777216	; 0xff000000
   1cf64:	eor	r7, r7, #1845493760	; 0x6e000000
   1cf68:	orrs	r1, r7, r1
   1cf6c:	bne	1cfa4 <main@@Base+0x9d20>
   1cf70:	str	r3, [sp]
   1cf74:	mov	r1, r5
   1cf78:	mov	r3, #5
   1cf7c:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   1cf80:	cmp	r0, r5
   1cf84:	beq	1cfa4 <main@@Base+0x9d20>
   1cf88:	mov	r1, #0
   1cf8c:	mov	r2, #2
   1cf90:	str	r2, [r8]
   1cf94:	str	r1, [r8, #4]
   1cf98:	mov	r5, r0
   1cf9c:	ldr	r2, [sp, #8]
   1cfa0:	str	r1, [r2]
   1cfa4:	mov	r0, r5
   1cfa8:	sub	sp, fp, #28
   1cfac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cfb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cfb4:	add	fp, sp, #28
   1cfb8:	push	{r0, r3}
   1cfbc:	sub	r0, r2, r1
   1cfc0:	cmp	r0, #8
   1cfc4:	mov	r3, r0
   1cfc8:	movcs	r3, #8
   1cfcc:	sub	r6, r3, #1
   1cfd0:	cmp	r6, #7
   1cfd4:	bhi	1d364 <main@@Base+0xa0e0>
   1cfd8:	add	r3, pc, #32
   1cfdc:	mov	lr, #0
   1cfe0:	mov	r8, #0
   1cfe4:	mov	r9, #0
   1cfe8:	mov	sl, #0
   1cfec:	mov	r7, #0
   1cff0:	mov	r4, #0
   1cff4:	mov	r5, #0
   1cff8:	mov	ip, #0
   1cffc:	ldr	pc, [r3, r6, lsl #2]
   1d000:	andeq	sp, r1, r4, rrx
   1d004:	andeq	sp, r1, ip, asr r0
   1d008:	andeq	sp, r1, r4, asr r0
   1d00c:	andeq	sp, r1, ip, asr #32
   1d010:	andeq	sp, r1, r0, asr #32
   1d014:	andeq	sp, r1, r4, lsr r0
   1d018:	andeq	sp, r1, r4, lsr #32
   1d01c:	andeq	sp, r1, r0, lsr #32
   1d020:	ldrb	r8, [r1, #7]
   1d024:	ldrb	r3, [r1, #6]
   1d028:	mov	r9, lr
   1d02c:	orr	r3, r8, r3, lsl #8
   1d030:	mov	lr, r3
   1d034:	ldrb	r3, [r1, #5]
   1d038:	mov	sl, r9
   1d03c:	orr	lr, lr, r3, lsl #16
   1d040:	ldrb	r3, [r1, #4]
   1d044:	mov	r7, sl
   1d048:	orr	lr, lr, r3, lsl #24
   1d04c:	ldrb	r3, [r1, #3]
   1d050:	orr	r4, r3, r7
   1d054:	ldrb	r3, [r1, #2]
   1d058:	orr	r5, r4, r3, lsl #8
   1d05c:	ldrb	r3, [r1, #1]
   1d060:	orr	ip, r5, r3, lsl #16
   1d064:	ldrb	r3, [r1]
   1d068:	movw	r4, #30061	; 0x756d
   1d06c:	movw	r6, #30815	; 0x785f
   1d070:	movt	r4, #25966	; 0x656e
   1d074:	movt	r6, #26725	; 0x6865
   1d078:	orr	r5, ip, r3, lsl #24
   1d07c:	subs	r3, lr, r4
   1d080:	sbcs	r3, r5, r6
   1d084:	bcs	1d0ec <main@@Base+0x9e68>
   1d088:	movw	r4, #27759	; 0x6c6f
   1d08c:	mvn	r3, #-1912602624	; 0x8e000000
   1d090:	bic	r6, r5, #255	; 0xff
   1d094:	movt	r4, #17263	; 0x436f
   1d098:	subs	r3, r3, lr
   1d09c:	sbcs	r3, r4, r5
   1d0a0:	bcc	1d148 <main@@Base+0x9ec4>
   1d0a4:	cmp	r0, #4
   1d0a8:	blt	1d364 <main@@Base+0xa0e0>
   1d0ac:	movw	r0, #30976	; 0x7900
   1d0b0:	movt	r0, #16750	; 0x416e
   1d0b4:	teq	r6, r0
   1d0b8:	bne	1d364 <main@@Base+0xa0e0>
   1d0bc:	ldrb	r0, [r1, #3]
   1d0c0:	mov	ip, r1
   1d0c4:	cmp	r0, #46	; 0x2e
   1d0c8:	addeq	ip, ip, #4
   1d0cc:	cmp	ip, r1
   1d0d0:	beq	1d364 <main@@Base+0xa0e0>
   1d0d4:	ldr	r0, [sp]
   1d0d8:	ldr	r3, [sp, #4]
   1d0dc:	mov	r1, ip
   1d0e0:	sub	sp, fp, #28
   1d0e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d0e8:	b	21f10 <main@@Base+0xec8c>
   1d0ec:	add	r3, r6, #64512	; 0xfc00
   1d0f0:	add	r7, r3, #17301504	; 0x1080000
   1d0f4:	subs	r3, lr, r4
   1d0f8:	sbcs	r3, r5, r7
   1d0fc:	bcs	1d190 <main@@Base+0x9f0c>
   1d100:	cmp	r0, #9
   1d104:	blt	1d364 <main@@Base+0xa0e0>
   1d108:	eor	r0, lr, r4
   1d10c:	eor	r3, r5, r6
   1d110:	orrs	r0, r0, r3
   1d114:	bne	1d364 <main@@Base+0xa0e0>
   1d118:	ldrb	r0, [r1, #8]
   1d11c:	mov	ip, r1
   1d120:	cmp	r0, #46	; 0x2e
   1d124:	addeq	ip, ip, #9
   1d128:	cmp	ip, r1
   1d12c:	beq	1d364 <main@@Base+0xa0e0>
   1d130:	ldr	r0, [sp]
   1d134:	ldr	r3, [sp, #4]
   1d138:	mov	r1, ip
   1d13c:	sub	sp, fp, #28
   1d140:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d144:	b	23428 <main@@Base+0x101a4>
   1d148:	movw	r3, #28416	; 0x6f00
   1d14c:	movt	r3, #18031	; 0x466f
   1d150:	teq	r6, r3
   1d154:	bne	1d1ec <main@@Base+0x9f68>
   1d158:	cmp	r0, #4
   1d15c:	blt	1d364 <main@@Base+0xa0e0>
   1d160:	ldrb	r0, [r1, #3]
   1d164:	mov	ip, r1
   1d168:	cmp	r0, #46	; 0x2e
   1d16c:	addeq	ip, ip, #4
   1d170:	cmp	ip, r1
   1d174:	beq	1d364 <main@@Base+0xa0e0>
   1d178:	ldr	r0, [sp]
   1d17c:	ldr	r3, [sp, #4]
   1d180:	mov	r1, ip
   1d184:	sub	sp, fp, #28
   1d188:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d18c:	b	231c8 <main@@Base+0xff44>
   1d190:	sub	r3, r6, #4352	; 0x1100
   1d194:	subs	r6, lr, r4
   1d198:	sub	r3, r3, #-100663296	; 0xfa000000
   1d19c:	sbcs	r3, r5, r3
   1d1a0:	bcs	1d238 <main@@Base+0x9fb4>
   1d1a4:	cmp	r0, #9
   1d1a8:	blt	1d364 <main@@Base+0xa0e0>
   1d1ac:	eor	r0, lr, r4
   1d1b0:	eor	r3, r5, r7
   1d1b4:	orrs	r0, r0, r3
   1d1b8:	bne	1d364 <main@@Base+0xa0e0>
   1d1bc:	ldrb	r0, [r1, #8]
   1d1c0:	mov	ip, r1
   1d1c4:	cmp	r0, #46	; 0x2e
   1d1c8:	addeq	ip, ip, #9
   1d1cc:	cmp	ip, r1
   1d1d0:	beq	1d364 <main@@Base+0xa0e0>
   1d1d4:	ldr	r0, [sp]
   1d1d8:	ldr	r3, [sp, #4]
   1d1dc:	mov	r1, ip
   1d1e0:	sub	sp, fp, #28
   1d1e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d1e8:	b	235d4 <main@@Base+0x10350>
   1d1ec:	cmp	r0, #6
   1d1f0:	blt	1d364 <main@@Base+0xa0e0>
   1d1f4:	and	r0, lr, #-16777216	; 0xff000000
   1d1f8:	eor	r3, r5, r4
   1d1fc:	eor	r0, r0, #1912602624	; 0x72000000
   1d200:	orrs	r0, r0, r3
   1d204:	bne	1d364 <main@@Base+0xa0e0>
   1d208:	ldrb	r0, [r1, #5]
   1d20c:	mov	ip, r1
   1d210:	cmp	r0, #46	; 0x2e
   1d214:	addeq	ip, ip, #6
   1d218:	cmp	ip, r1
   1d21c:	beq	1d364 <main@@Base+0xa0e0>
   1d220:	ldr	r0, [sp]
   1d224:	ldr	r3, [sp, #4]
   1d228:	mov	r1, ip
   1d22c:	sub	sp, fp, #28
   1d230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d234:	b	1ce10 <main@@Base+0x9b8c>
   1d238:	movw	r3, #29817	; 0x7479
   1d23c:	movw	r7, #29797	; 0x7465
   1d240:	movt	r3, #28016	; 0x6d70
   1d244:	movt	r7, #28271	; 0x6e6f
   1d248:	eor	r3, lr, r3
   1d24c:	eor	r7, r5, r7
   1d250:	orrs	r3, r3, r7
   1d254:	beq	1d2a8 <main@@Base+0xa024>
   1d258:	movw	r7, #26463	; 0x675f
   1d25c:	eor	r3, lr, r4
   1d260:	movt	r7, #28261	; 0x6e65
   1d264:	eor	r7, r5, r7
   1d268:	orrs	r3, r3, r7
   1d26c:	bne	1d364 <main@@Base+0xa0e0>
   1d270:	cmp	r0, #9
   1d274:	blt	1d364 <main@@Base+0xa0e0>
   1d278:	ldrb	r0, [r1, #8]
   1d27c:	mov	ip, r1
   1d280:	cmp	r0, #46	; 0x2e
   1d284:	addeq	ip, ip, #9
   1d288:	cmp	ip, r1
   1d28c:	beq	1d364 <main@@Base+0xa0e0>
   1d290:	ldr	r0, [sp]
   1d294:	ldr	r3, [sp, #4]
   1d298:	mov	r1, ip
   1d29c:	sub	sp, fp, #28
   1d2a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d2a4:	b	237c4 <main@@Base+0x10540>
   1d2a8:	add	lr, r1, #8
   1d2ac:	sub	r9, r2, lr
   1d2b0:	cmp	r9, #8
   1d2b4:	mov	r0, r9
   1d2b8:	movcs	r0, #8
   1d2bc:	sub	r6, r0, #1
   1d2c0:	cmp	r6, #7
   1d2c4:	bhi	1d364 <main@@Base+0xa0e0>
   1d2c8:	add	r0, pc, #16
   1d2cc:	mov	ip, #0
   1d2d0:	mov	r8, #0
   1d2d4:	mov	r5, #0
   1d2d8:	mov	r7, #0
   1d2dc:	ldr	pc, [r0, r6, lsl #2]
   1d2e0:	andeq	sp, r1, r8, lsl r3
   1d2e4:	andeq	sp, r1, r0, lsl r3
   1d2e8:	andeq	sp, r1, r8, lsl #6
   1d2ec:	andeq	sp, r1, r0, lsl #6
   1d2f0:	andeq	sp, r1, r0, lsl #6
   1d2f4:	andeq	sp, r1, r0, lsl #6
   1d2f8:	andeq	sp, r1, r0, lsl #6
   1d2fc:	andeq	sp, r1, r0, lsl #6
   1d300:	ldrb	r8, [r1, #11]
   1d304:	mov	ip, #0
   1d308:	ldrb	r0, [r1, #10]
   1d30c:	orr	r5, r8, r0, lsl #8
   1d310:	ldrb	r0, [r1, #9]
   1d314:	orr	r7, r5, r0, lsl #16
   1d318:	cmp	r9, #5
   1d31c:	blt	1d364 <main@@Base+0xa0e0>
   1d320:	ldrb	r0, [lr]
   1d324:	orr	r0, r7, r0, lsl #24
   1d328:	eor	r0, r0, r4
   1d32c:	orrs	r0, ip, r0
   1d330:	bne	1d364 <main@@Base+0xa0e0>
   1d334:	ldrb	r0, [r1, #12]
   1d338:	mov	ip, lr
   1d33c:	cmp	r0, #46	; 0x2e
   1d340:	addeq	ip, r1, #13
   1d344:	cmp	ip, lr
   1d348:	beq	1d364 <main@@Base+0xa0e0>
   1d34c:	ldr	r0, [sp]
   1d350:	ldr	r3, [sp, #4]
   1d354:	mov	r1, ip
   1d358:	sub	sp, fp, #28
   1d35c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d360:	b	2390c <main@@Base+0x10688>
   1d364:	mov	r0, r1
   1d368:	sub	sp, fp, #28
   1d36c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d370:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d374:	add	fp, sp, #28
   1d378:	sub	sp, sp, #20
   1d37c:	mov	r8, r2
   1d380:	sub	r2, r2, r1
   1d384:	cmp	r2, #8
   1d388:	movcs	r2, #8
   1d38c:	sub	r2, r2, #1
   1d390:	cmp	r2, #7
   1d394:	bhi	1e1a8 <main@@Base+0xaf24>
   1d398:	str	r0, [sp, #16]
   1d39c:	mov	sl, #0
   1d3a0:	mov	ip, #0
   1d3a4:	mov	lr, #0
   1d3a8:	mov	r9, #0
   1d3ac:	mov	r6, #0
   1d3b0:	mov	r4, #0
   1d3b4:	mov	r5, #0
   1d3b8:	ldr	r0, [fp, #12]
   1d3bc:	str	r0, [sp, #12]
   1d3c0:	ldr	r0, [fp, #8]
   1d3c4:	str	r0, [sp, #8]
   1d3c8:	add	r7, pc, #4
   1d3cc:	mov	r0, #0
   1d3d0:	ldr	pc, [r7, r2, lsl #2]
   1d3d4:	andeq	sp, r1, r8, lsr r4
   1d3d8:	andeq	sp, r1, r0, lsr r4
   1d3dc:	andeq	sp, r1, r8, lsr #8
   1d3e0:	andeq	sp, r1, r0, lsr #8
   1d3e4:	andeq	sp, r1, r4, lsl r4
   1d3e8:	andeq	sp, r1, r8, lsl #8
   1d3ec:	strdeq	sp, [r1], -r8
   1d3f0:	strdeq	sp, [r1], -r4
   1d3f4:	ldrb	ip, [r1, #7]
   1d3f8:	ldrb	r2, [r1, #6]
   1d3fc:	mov	lr, sl
   1d400:	orr	r2, ip, r2, lsl #8
   1d404:	mov	sl, r2
   1d408:	ldrb	r2, [r1, #5]
   1d40c:	mov	r9, lr
   1d410:	orr	sl, sl, r2, lsl #16
   1d414:	ldrb	r2, [r1, #4]
   1d418:	mov	r6, r9
   1d41c:	orr	sl, sl, r2, lsl #24
   1d420:	ldrb	r2, [r1, #3]
   1d424:	orr	r4, r2, r6
   1d428:	ldrb	r2, [r1, #2]
   1d42c:	orr	r0, r4, r2, lsl #8
   1d430:	ldrb	r2, [r1, #1]
   1d434:	orr	r5, r0, r2, lsl #16
   1d438:	ldrb	r2, [r1]
   1d43c:	movw	r7, #11844	; 0x2e44
   1d440:	movw	r0, #18273	; 0x4761
   1d444:	movt	r7, #28005	; 0x6d65
   1d448:	movt	r0, #19833	; 0x4d79
   1d44c:	subs	r7, r7, sl
   1d450:	orr	r2, r5, r2, lsl #24
   1d454:	sbcs	r7, r0, r2
   1d458:	bcc	1d5b8 <main@@Base+0xa334>
   1d45c:	movw	r0, #31022	; 0x792e
   1d460:	movw	r7, #28276	; 0x6e74
   1d464:	movt	r0, #24947	; 0x6173
   1d468:	movt	r7, #18017	; 0x4661
   1d46c:	eor	r0, sl, r0
   1d470:	eor	r2, r2, r7
   1d474:	orrs	r0, r0, r2
   1d478:	bne	1e1a8 <main@@Base+0xaf24>
   1d47c:	add	lr, r1, #8
   1d480:	sub	r0, r8, lr
   1d484:	cmp	r0, #8
   1d488:	movcs	r0, #8
   1d48c:	sub	r6, r0, #1
   1d490:	cmp	r6, #7
   1d494:	bhi	1e1a8 <main@@Base+0xaf24>
   1d498:	str	r3, [sp, #4]
   1d49c:	add	r2, pc, #32
   1d4a0:	mov	sl, #0
   1d4a4:	mov	ip, #0
   1d4a8:	mov	r9, #0
   1d4ac:	mov	r4, #0
   1d4b0:	mov	r7, #0
   1d4b4:	mov	r5, #0
   1d4b8:	mov	r0, #0
   1d4bc:	mov	r3, #0
   1d4c0:	ldr	pc, [r2, r6, lsl #2]
   1d4c4:	andeq	sp, r1, r8, lsr #10
   1d4c8:	andeq	sp, r1, r0, lsr #10
   1d4cc:	andeq	sp, r1, r8, lsl r5
   1d4d0:	andeq	sp, r1, r0, lsl r5
   1d4d4:	andeq	sp, r1, r4, lsl #10
   1d4d8:	strdeq	sp, [r1], -r8
   1d4dc:	andeq	sp, r1, r8, ror #9
   1d4e0:	andeq	sp, r1, r4, ror #9
   1d4e4:	ldrb	ip, [r1, #15]
   1d4e8:	ldrb	r0, [r1, #14]
   1d4ec:	mov	r9, sl
   1d4f0:	orr	r0, ip, r0, lsl #8
   1d4f4:	mov	sl, r0
   1d4f8:	ldrb	r0, [r1, #13]
   1d4fc:	mov	r4, r9
   1d500:	orr	sl, sl, r0, lsl #16
   1d504:	ldrb	r0, [r1, #12]
   1d508:	mov	r7, r4
   1d50c:	orr	sl, sl, r0, lsl #24
   1d510:	ldrb	r0, [r1, #11]
   1d514:	orr	r5, r0, r7
   1d518:	ldrb	r0, [r1, #10]
   1d51c:	orr	r0, r5, r0, lsl #8
   1d520:	ldrb	r2, [r1, #9]
   1d524:	orr	r3, r0, r2, lsl #16
   1d528:	ldrb	r2, [lr]
   1d52c:	movw	r0, #29797	; 0x7465
   1d530:	movt	r0, #24931	; 0x6163
   1d534:	eor	r0, sl, r0
   1d538:	orr	r2, r3, r2, lsl #24
   1d53c:	movw	r3, #24946	; 0x6172
   1d540:	movt	r3, #17256	; 0x4368
   1d544:	eor	r2, r2, r3
   1d548:	orrs	r0, r0, r2
   1d54c:	bne	1e1a8 <main@@Base+0xaf24>
   1d550:	add	r0, r1, #16
   1d554:	sub	r2, r8, r0
   1d558:	cmp	r2, #8
   1d55c:	mov	r3, r2
   1d560:	movcs	r3, #8
   1d564:	sub	r3, r3, #1
   1d568:	cmp	r3, #7
   1d56c:	bhi	1e1a8 <main@@Base+0xaf24>
   1d570:	cmp	r2, #2
   1d574:	blt	1e1a8 <main@@Base+0xaf24>
   1d578:	ldrb	r2, [r0]
   1d57c:	cmp	r2, #114	; 0x72
   1d580:	bne	1e1a8 <main@@Base+0xaf24>
   1d584:	ldrb	r2, [r1, #17]
   1d588:	ldr	r3, [sp, #4]
   1d58c:	cmp	r2, #46	; 0x2e
   1d590:	mov	r2, r0
   1d594:	addeq	r2, r1, #18
   1d598:	cmp	r2, r0
   1d59c:	beq	1e1a8 <main@@Base+0xaf24>
   1d5a0:	ldr	r0, [sp, #16]
   1d5a4:	mov	r1, r2
   1d5a8:	mov	r2, r8
   1d5ac:	sub	sp, fp, #28
   1d5b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d5b4:	b	23984 <main@@Base+0x10700>
   1d5b8:	movw	r7, #11855	; 0x2e4f
   1d5bc:	eor	r2, r2, r0
   1d5c0:	movt	r7, #28005	; 0x6d65
   1d5c4:	eor	r7, sl, r7
   1d5c8:	orrs	r0, r7, r2
   1d5cc:	beq	1d75c <main@@Base+0xa4d8>
   1d5d0:	movw	r0, #11845	; 0x2e45
   1d5d4:	movt	r0, #28005	; 0x6d65
   1d5d8:	eor	r0, sl, r0
   1d5dc:	orrs	r0, r0, r2
   1d5e0:	bne	1e1a8 <main@@Base+0xaf24>
   1d5e4:	add	lr, r1, #8
   1d5e8:	sub	r0, r8, lr
   1d5ec:	cmp	r0, #8
   1d5f0:	movcs	r0, #8
   1d5f4:	sub	r6, r0, #1
   1d5f8:	cmp	r6, #7
   1d5fc:	bhi	1e1a8 <main@@Base+0xaf24>
   1d600:	str	r3, [sp, #4]
   1d604:	add	r4, pc, #32
   1d608:	mov	r0, #0
   1d60c:	mov	ip, #0
   1d610:	mov	r9, #0
   1d614:	mov	sl, #0
   1d618:	mov	r7, #0
   1d61c:	mov	r5, #0
   1d620:	mov	r2, #0
   1d624:	mov	r3, #0
   1d628:	ldr	pc, [r4, r6, lsl #2]
   1d62c:	muleq	r1, r0, r6
   1d630:	andeq	sp, r1, r8, lsl #13
   1d634:	andeq	sp, r1, r0, lsl #13
   1d638:	andeq	sp, r1, r8, ror r6
   1d63c:	andeq	sp, r1, ip, ror #12
   1d640:	andeq	sp, r1, r0, ror #12
   1d644:	andeq	sp, r1, r0, asr r6
   1d648:	andeq	sp, r1, ip, asr #12
   1d64c:	ldrb	ip, [r1, #15]
   1d650:	ldrb	r2, [r1, #14]
   1d654:	mov	r9, r0
   1d658:	orr	r2, ip, r2, lsl #8
   1d65c:	mov	r0, r2
   1d660:	ldrb	r2, [r1, #13]
   1d664:	mov	sl, r9
   1d668:	orr	r0, r0, r2, lsl #16
   1d66c:	ldrb	r2, [r1, #12]
   1d670:	mov	r7, sl
   1d674:	orr	r0, r0, r2, lsl #24
   1d678:	ldrb	r2, [r1, #11]
   1d67c:	orr	r5, r2, r7
   1d680:	ldrb	r2, [r1, #10]
   1d684:	orr	r2, r5, r2, lsl #8
   1d688:	ldrb	r3, [r1, #9]
   1d68c:	orr	r3, r2, r3, lsl #16
   1d690:	ldrb	r2, [lr]
   1d694:	movw	r7, #28016	; 0x6d70
   1d698:	movt	r7, #30817	; 0x7861
   1d69c:	orr	r2, r3, r2, lsl #24
   1d6a0:	movw	r3, #11841	; 0x2e41
   1d6a4:	movt	r3, #27749	; 0x6c65
   1d6a8:	add	r5, r3, #39	; 0x27
   1d6ac:	subs	r6, r0, r5
   1d6b0:	sbcs	r6, r2, r7
   1d6b4:	bcs	1db14 <main@@Base+0xa890>
   1d6b8:	ldr	lr, [sp, #4]
   1d6bc:	add	r6, r3, #2
   1d6c0:	subs	r6, r0, r6
   1d6c4:	sbcs	r6, r2, r7
   1d6c8:	bcs	1dc2c <main@@Base+0xa9a8>
   1d6cc:	eor	r0, r0, r3
   1d6d0:	eor	r2, r2, r7
   1d6d4:	orrs	r0, r0, r2
   1d6d8:	bne	1e1a8 <main@@Base+0xaf24>
   1d6dc:	add	r0, r1, #16
   1d6e0:	sub	r6, r8, r0
   1d6e4:	cmp	r6, #8
   1d6e8:	mov	r2, r6
   1d6ec:	movcs	r2, #8
   1d6f0:	sub	r3, r2, #2
   1d6f4:	cmp	r3, #7
   1d6f8:	bcs	1e09c <main@@Base+0xae18>
   1d6fc:	ldrb	r2, [r1, #17]
   1d700:	mov	r3, #0
   1d704:	lsl	r7, r2, #16
   1d708:	cmp	r6, #3
   1d70c:	blt	1e1a8 <main@@Base+0xaf24>
   1d710:	ldrb	r2, [r0]
   1d714:	orr	r2, r7, r2, lsl #24
   1d718:	eor	r2, r2, #7929856	; 0x790000
   1d71c:	eor	r2, r2, #1845493760	; 0x6e000000
   1d720:	orrs	r2, r3, r2
   1d724:	bne	1e1a8 <main@@Base+0xaf24>
   1d728:	ldrb	r2, [r1, #18]
   1d72c:	cmp	r2, #46	; 0x2e
   1d730:	mov	r2, r0
   1d734:	addeq	r2, r1, #19
   1d738:	cmp	r2, r0
   1d73c:	beq	1e1a8 <main@@Base+0xaf24>
   1d740:	ldr	r0, [sp, #16]
   1d744:	mov	r1, r2
   1d748:	mov	r2, r8
   1d74c:	mov	r3, lr
   1d750:	sub	sp, fp, #28
   1d754:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d758:	b	21f10 <main@@Base+0xec8c>
   1d75c:	add	lr, r1, #8
   1d760:	sub	r0, r8, lr
   1d764:	cmp	r0, #8
   1d768:	movcs	r0, #8
   1d76c:	sub	r7, r0, #1
   1d770:	cmp	r7, #7
   1d774:	bhi	1e1a8 <main@@Base+0xaf24>
   1d778:	str	r3, [sp, #4]
   1d77c:	add	sl, pc, #32
   1d780:	mov	r2, #0
   1d784:	mov	ip, #0
   1d788:	mov	r3, #0
   1d78c:	mov	r4, #0
   1d790:	mov	r6, #0
   1d794:	mov	r5, #0
   1d798:	mov	r0, #0
   1d79c:	mov	r9, #0
   1d7a0:	ldr	pc, [sl, r7, lsl #2]
   1d7a4:	andeq	sp, r1, r8, lsl #16
   1d7a8:	andeq	sp, r1, r0, lsl #16
   1d7ac:	strdeq	sp, [r1], -r8
   1d7b0:	strdeq	sp, [r1], -r0
   1d7b4:	andeq	sp, r1, r4, ror #15
   1d7b8:	ldrdeq	sp, [r1], -r8
   1d7bc:	andeq	sp, r1, r8, asr #15
   1d7c0:	andeq	sp, r1, r4, asr #15
   1d7c4:	ldrb	ip, [r1, #15]
   1d7c8:	ldrb	r0, [r1, #14]
   1d7cc:	mov	r3, r2
   1d7d0:	orr	r0, ip, r0, lsl #8
   1d7d4:	mov	r2, r0
   1d7d8:	ldrb	r0, [r1, #13]
   1d7dc:	mov	r4, r3
   1d7e0:	orr	r2, r2, r0, lsl #16
   1d7e4:	ldrb	r0, [r1, #12]
   1d7e8:	mov	r6, r4
   1d7ec:	orr	r2, r2, r0, lsl #24
   1d7f0:	ldrb	r0, [r1, #11]
   1d7f4:	orr	r5, r0, r6
   1d7f8:	ldrb	r0, [r1, #10]
   1d7fc:	orr	r0, r5, r0, lsl #8
   1d800:	ldrb	r3, [r1, #9]
   1d804:	orr	r9, r0, r3, lsl #16
   1d808:	movw	r0, #28005	; 0x6d65
   1d80c:	movw	r3, #25970	; 0x6572
   1d810:	movt	r0, #20065	; 0x4e61
   1d814:	movt	r3, #29800	; 0x7468
   1d818:	eor	r0, r2, r0
   1d81c:	ldrb	r2, [lr]
   1d820:	orr	r2, r9, r2, lsl #24
   1d824:	eor	r2, r2, r3
   1d828:	orrs	r0, r0, r2
   1d82c:	bne	1e1a8 <main@@Base+0xaf24>
   1d830:	add	lr, r1, #16
   1d834:	sub	r0, r8, lr
   1d838:	cmp	r0, #8
   1d83c:	movcs	r0, #8
   1d840:	sub	r7, r0, #1
   1d844:	cmp	r7, #7
   1d848:	bhi	1e1a8 <main@@Base+0xaf24>
   1d84c:	add	r2, pc, #32
   1d850:	mov	sl, #0
   1d854:	mov	ip, #0
   1d858:	mov	r9, #0
   1d85c:	mov	r4, #0
   1d860:	mov	r6, #0
   1d864:	mov	r5, #0
   1d868:	mov	r0, #0
   1d86c:	mov	r3, #0
   1d870:	ldr	pc, [r2, r7, lsl #2]
   1d874:	ldrdeq	sp, [r1], -r8
   1d878:	ldrdeq	sp, [r1], -r0
   1d87c:	andeq	sp, r1, r8, asr #17
   1d880:	andeq	sp, r1, r0, asr #17
   1d884:			; <UNDEFINED> instruction: 0x0001d8b4
   1d888:	andeq	sp, r1, r8, lsr #17
   1d88c:	muleq	r1, r8, r8
   1d890:	muleq	r1, r4, r8
   1d894:	ldrb	ip, [r1, #23]
   1d898:	ldrb	r0, [r1, #22]
   1d89c:	mov	r9, sl
   1d8a0:	orr	r0, ip, r0, lsl #8
   1d8a4:	mov	sl, r0
   1d8a8:	ldrb	r0, [r1, #21]
   1d8ac:	mov	r4, r9
   1d8b0:	orr	sl, sl, r0, lsl #16
   1d8b4:	ldrb	r0, [r1, #20]
   1d8b8:	mov	r6, r4
   1d8bc:	orr	sl, sl, r0, lsl #24
   1d8c0:	ldrb	r0, [r1, #19]
   1d8c4:	orr	r5, r0, r6
   1d8c8:	ldrb	r0, [r1, #18]
   1d8cc:	orr	r0, r5, r0, lsl #8
   1d8d0:	ldrb	r2, [r1, #17]
   1d8d4:	orr	r3, r0, r2, lsl #16
   1d8d8:	ldrb	r2, [lr]
   1d8dc:	movw	r0, #18034	; 0x4672
   1d8e0:	movt	r0, #25902	; 0x652e
   1d8e4:	eor	r0, sl, r0
   1d8e8:	orr	r2, r3, r2, lsl #24
   1d8ec:	movw	r3, #24931	; 0x6163
   1d8f0:	movt	r3, #21360	; 0x5370
   1d8f4:	eor	r2, r2, r3
   1d8f8:	orrs	r0, r0, r2
   1d8fc:	bne	1e1a8 <main@@Base+0xaf24>
   1d900:	add	lr, r1, #24
   1d904:	sub	r0, r8, lr
   1d908:	cmp	r0, #8
   1d90c:	movcs	r0, #8
   1d910:	sub	r7, r0, #1
   1d914:	cmp	r7, #7
   1d918:	bhi	1e1a8 <main@@Base+0xaf24>
   1d91c:	add	r2, pc, #32
   1d920:	mov	sl, #0
   1d924:	mov	ip, #0
   1d928:	mov	r9, #0
   1d92c:	mov	r4, #0
   1d930:	mov	r6, #0
   1d934:	mov	r5, #0
   1d938:	mov	r0, #0
   1d93c:	mov	r3, #0
   1d940:	ldr	pc, [r2, r7, lsl #2]
   1d944:	andeq	sp, r1, r8, lsr #19
   1d948:	andeq	sp, r1, r0, lsr #19
   1d94c:	muleq	r1, r8, r9
   1d950:	muleq	r1, r0, r9
   1d954:	andeq	sp, r1, r4, lsl #19
   1d958:	andeq	sp, r1, r8, ror r9
   1d95c:	andeq	sp, r1, r8, ror #18
   1d960:	andeq	sp, r1, r4, ror #18
   1d964:	ldrb	ip, [r1, #31]
   1d968:	ldrb	r0, [r1, #30]
   1d96c:	mov	r9, sl
   1d970:	orr	r0, ip, r0, lsl #8
   1d974:	mov	sl, r0
   1d978:	ldrb	r0, [r1, #29]
   1d97c:	mov	r4, r9
   1d980:	orr	sl, sl, r0, lsl #16
   1d984:	ldrb	r0, [r1, #28]
   1d988:	mov	r6, r4
   1d98c:	orr	sl, sl, r0, lsl #24
   1d990:	ldrb	r0, [r1, #27]
   1d994:	orr	r5, r0, r6
   1d998:	ldrb	r0, [r1, #26]
   1d99c:	orr	r0, r5, r0, lsl #8
   1d9a0:	ldrb	r2, [r1, #25]
   1d9a4:	orr	r3, r0, r2, lsl #16
   1d9a8:	ldrb	r2, [lr]
   1d9ac:	movw	r0, #30052	; 0x7564
   1d9b0:	movt	r0, #25452	; 0x636c
   1d9b4:	eor	r0, sl, r0
   1d9b8:	orr	r2, r3, r2, lsl #24
   1d9bc:	movw	r3, #18798	; 0x496e
   1d9c0:	movt	r3, #28525	; 0x6f6d
   1d9c4:	eor	r2, r2, r3
   1d9c8:	orrs	r0, r0, r2
   1d9cc:	bne	1e1a8 <main@@Base+0xaf24>
   1d9d0:	add	r0, r1, #32
   1d9d4:	sub	r2, r8, r0
   1d9d8:	cmp	r2, #8
   1d9dc:	mov	r3, r2
   1d9e0:	movcs	r3, #8
   1d9e4:	sub	r3, r3, #1
   1d9e8:	cmp	r3, #7
   1d9ec:	bhi	1e1a8 <main@@Base+0xaf24>
   1d9f0:	cmp	r2, #2
   1d9f4:	blt	1e1a8 <main@@Base+0xaf24>
   1d9f8:	ldrb	r2, [r0]
   1d9fc:	cmp	r2, #101	; 0x65
   1da00:	bne	1e1a8 <main@@Base+0xaf24>
   1da04:	ldrb	r2, [r1, #33]	; 0x21
   1da08:	ldr	r9, [sp, #4]
   1da0c:	mov	r7, r0
   1da10:	cmp	r2, #46	; 0x2e
   1da14:	addeq	r7, r1, #34	; 0x22
   1da18:	cmp	r7, r0
   1da1c:	beq	1e1a8 <main@@Base+0xaf24>
   1da20:	sub	r0, r8, r7
   1da24:	cmp	r0, #8
   1da28:	movcs	r0, #8
   1da2c:	sub	r2, r0, #1
   1da30:	cmp	r2, #7
   1da34:	bhi	1e1a4 <main@@Base+0xaf20>
   1da38:	add	r5, pc, #32
   1da3c:	mov	sl, #0
   1da40:	mov	ip, #0
   1da44:	mov	lr, #0
   1da48:	mov	r1, #0
   1da4c:	mov	r3, #0
   1da50:	mov	r6, #0
   1da54:	mov	r4, #0
   1da58:	mov	r0, #0
   1da5c:	ldr	pc, [r5, r2, lsl #2]
   1da60:	andeq	sp, r1, r4, asr #21
   1da64:			; <UNDEFINED> instruction: 0x0001dabc
   1da68:			; <UNDEFINED> instruction: 0x0001dab4
   1da6c:	andeq	sp, r1, ip, lsr #21
   1da70:	andeq	sp, r1, r0, lsr #21
   1da74:	muleq	r1, r4, sl
   1da78:	andeq	sp, r1, r4, lsl #21
   1da7c:	andeq	sp, r1, r0, lsl #21
   1da80:	ldrb	ip, [r7, #7]
   1da84:	ldrb	r0, [r7, #6]
   1da88:	mov	lr, sl
   1da8c:	orr	r0, ip, r0, lsl #8
   1da90:	mov	sl, r0
   1da94:	ldrb	r0, [r7, #5]
   1da98:	mov	r1, lr
   1da9c:	orr	sl, sl, r0, lsl #16
   1daa0:	ldrb	r0, [r7, #4]
   1daa4:	mov	r3, r1
   1daa8:	orr	sl, sl, r0, lsl #24
   1daac:	ldrb	r0, [r7, #3]
   1dab0:	orr	r6, r0, r3
   1dab4:	ldrb	r0, [r7, #2]
   1dab8:	orr	r4, r6, r0, lsl #8
   1dabc:	ldrb	r0, [r7, #1]
   1dac0:	orr	r0, r4, r0, lsl #16
   1dac4:	ldrb	r1, [r7]
   1dac8:	orr	r6, r0, r1, lsl #24
   1dacc:	movw	r1, #28416	; 0x6f00
   1dad0:	movt	r1, #18031	; 0x466f
   1dad4:	bic	r0, r6, #255	; 0xff
   1dad8:	teq	r0, r1
   1dadc:	bne	1e0c4 <main@@Base+0xae40>
   1dae0:	ldr	r0, [sp, #12]
   1dae4:	mov	r1, r7
   1dae8:	mov	r2, r8
   1daec:	mov	r3, #3
   1daf0:	str	r0, [sp]
   1daf4:	ldr	r0, [sp, #16]
   1daf8:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   1dafc:	cmp	r0, r7
   1db00:	beq	1e0c4 <main@@Base+0xae40>
   1db04:	mov	r1, r0
   1db08:	mov	r3, #0
   1db0c:	mov	r2, #17
   1db10:	b	1e158 <main@@Base+0xaed4>
   1db14:	eor	r6, r2, r7
   1db18:	eor	r5, r0, r5
   1db1c:	orrs	r5, r5, r6
   1db20:	bne	1dd20 <main@@Base+0xaa9c>
   1db24:	add	ip, r1, #16
   1db28:	sub	r2, r8, ip
   1db2c:	cmp	r2, #8
   1db30:	mov	r0, r2
   1db34:	movcs	r0, #8
   1db38:	sub	r4, r0, #1
   1db3c:	cmp	r4, #7
   1db40:	bhi	1e1a8 <main@@Base+0xaf24>
   1db44:	add	r6, pc, #28
   1db48:	mov	r9, #0
   1db4c:	mov	lr, #0
   1db50:	mov	sl, #0
   1db54:	mov	r3, #0
   1db58:	mov	r5, #0
   1db5c:	mov	r0, #0
   1db60:	mov	r7, #0
   1db64:	ldr	pc, [r6, r4, lsl #2]
   1db68:	andeq	sp, r1, r4, asr #23
   1db6c:			; <UNDEFINED> instruction: 0x0001dbbc
   1db70:			; <UNDEFINED> instruction: 0x0001dbb4
   1db74:	andeq	sp, r1, ip, lsr #23
   1db78:	andeq	sp, r1, r0, lsr #23
   1db7c:	muleq	r1, r0, fp
   1db80:	andeq	sp, r1, r8, lsl #23
   1db84:	andeq	sp, r1, r8, lsl #23
   1db88:	ldrb	r0, [r1, #22]
   1db8c:	lsl	lr, r0, #8
   1db90:	ldrb	r0, [r1, #21]
   1db94:	mov	sl, r9
   1db98:	orr	r0, lr, r0, lsl #16
   1db9c:	mov	r9, r0
   1dba0:	ldrb	r0, [r1, #20]
   1dba4:	mov	r3, sl
   1dba8:	orr	r9, r9, r0, lsl #24
   1dbac:	ldrb	r0, [r1, #19]
   1dbb0:	orr	r5, r0, r3
   1dbb4:	ldrb	r0, [r1, #18]
   1dbb8:	orr	r0, r5, r0, lsl #8
   1dbbc:	ldrb	r3, [r1, #17]
   1dbc0:	orr	r7, r0, r3, lsl #16
   1dbc4:	cmp	r2, #8
   1dbc8:	blt	1e1a8 <main@@Base+0xaf24>
   1dbcc:	ldrb	r0, [ip]
   1dbd0:	movw	r2, #24421	; 0x5f65
   1dbd4:	movw	r3, #27904	; 0x6d00
   1dbd8:	movt	r2, #25959	; 0x6567
   1dbdc:	movt	r3, #28277	; 0x6e75
   1dbe0:	add	r2, r2, #1114112	; 0x110000
   1dbe4:	eor	r3, r9, r3
   1dbe8:	orr	r0, r7, r0, lsl #24
   1dbec:	eor	r0, r0, r2
   1dbf0:	orrs	r0, r3, r0
   1dbf4:	bne	1e1a8 <main@@Base+0xaf24>
   1dbf8:	ldrb	r0, [r1, #23]
   1dbfc:	ldr	r3, [sp, #4]
   1dc00:	mov	r2, ip
   1dc04:	cmp	r0, #46	; 0x2e
   1dc08:	addeq	r2, r1, #24
   1dc0c:	cmp	r2, ip
   1dc10:	beq	1e1a8 <main@@Base+0xaf24>
   1dc14:	ldr	r0, [sp, #16]
   1dc18:	mov	r1, r2
   1dc1c:	mov	r2, r8
   1dc20:	sub	sp, fp, #28
   1dc24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dc28:	b	23428 <main@@Base+0x101a4>
   1dc2c:	movw	r3, #11846	; 0x2e46
   1dc30:	eor	r2, r2, r7
   1dc34:	movt	r3, #27749	; 0x6c65
   1dc38:	eor	r3, r0, r3
   1dc3c:	orrs	r3, r3, r2
   1dc40:	beq	1df78 <main@@Base+0xacf4>
   1dc44:	movw	r3, #11843	; 0x2e43
   1dc48:	movt	r3, #27749	; 0x6c65
   1dc4c:	eor	r0, r0, r3
   1dc50:	orrs	r0, r0, r2
   1dc54:	bne	1e1a8 <main@@Base+0xaf24>
   1dc58:	add	r0, r1, #16
   1dc5c:	sub	r2, r8, r0
   1dc60:	cmp	r2, #8
   1dc64:	mov	r3, r2
   1dc68:	movcs	r3, #8
   1dc6c:	sub	r6, r3, #1
   1dc70:	cmp	r6, #7
   1dc74:	bhi	1e1a8 <main@@Base+0xaf24>
   1dc78:	add	r3, pc, #16
   1dc7c:	mov	ip, #0
   1dc80:	mov	r7, #0
   1dc84:	mov	r4, #0
   1dc88:	mov	r5, #0
   1dc8c:	ldr	pc, [r3, r6, lsl #2]
   1dc90:	andeq	sp, r1, r8, asr #25
   1dc94:	andeq	sp, r1, r0, asr #25
   1dc98:			; <UNDEFINED> instruction: 0x0001dcb8
   1dc9c:			; <UNDEFINED> instruction: 0x0001dcb0
   1dca0:			; <UNDEFINED> instruction: 0x0001dcb0
   1dca4:			; <UNDEFINED> instruction: 0x0001dcb0
   1dca8:			; <UNDEFINED> instruction: 0x0001dcb0
   1dcac:			; <UNDEFINED> instruction: 0x0001dcb0
   1dcb0:	ldrb	r7, [r1, #19]
   1dcb4:	mov	ip, #0
   1dcb8:	ldrb	r3, [r1, #18]
   1dcbc:	orr	r4, r7, r3, lsl #8
   1dcc0:	ldrb	r3, [r1, #17]
   1dcc4:	orr	r5, r4, r3, lsl #16
   1dcc8:	cmp	r2, #5
   1dccc:	blt	1e1a8 <main@@Base+0xaf24>
   1dcd0:	ldrb	r2, [r0]
   1dcd4:	movw	r3, #28530	; 0x6f72
   1dcd8:	movt	r3, #28524	; 0x6f6c
   1dcdc:	orr	r2, r5, r2, lsl #24
   1dce0:	eor	r2, r2, r3
   1dce4:	orrs	r2, ip, r2
   1dce8:	bne	1e1a8 <main@@Base+0xaf24>
   1dcec:	ldrb	r2, [r1, #20]
   1dcf0:	cmp	r2, #46	; 0x2e
   1dcf4:	mov	r2, r0
   1dcf8:	addeq	r2, r1, #21
   1dcfc:	cmp	r2, r0
   1dd00:	beq	1e1a8 <main@@Base+0xaf24>
   1dd04:	ldr	r0, [sp, #16]
   1dd08:	mov	r1, r2
   1dd0c:	mov	r2, r8
   1dd10:	mov	r3, lr
   1dd14:	sub	sp, fp, #28
   1dd18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dd1c:	b	1ce10 <main@@Base+0x9b8c>
   1dd20:	add	r5, r3, #45	; 0x2d
   1dd24:	subs	r4, r0, r5
   1dd28:	sbcs	r2, r2, r7
   1dd2c:	bcs	1de4c <main@@Base+0xabc8>
   1dd30:	add	r2, r3, #40	; 0x28
   1dd34:	eor	r0, r0, r2
   1dd38:	orrs	r0, r0, r6
   1dd3c:	bne	1e1a8 <main@@Base+0xaf24>
   1dd40:	add	ip, r1, #16
   1dd44:	sub	r2, r8, ip
   1dd48:	cmp	r2, #8
   1dd4c:	mov	r0, r2
   1dd50:	movcs	r0, #8
   1dd54:	sub	r4, r0, #1
   1dd58:	cmp	r4, #7
   1dd5c:	bhi	1e1a8 <main@@Base+0xaf24>
   1dd60:	add	r6, pc, #28
   1dd64:	mov	r9, #0
   1dd68:	mov	lr, #0
   1dd6c:	mov	sl, #0
   1dd70:	mov	r3, #0
   1dd74:	mov	r5, #0
   1dd78:	mov	r7, #0
   1dd7c:	mov	r0, #0
   1dd80:	ldr	pc, [r6, r4, lsl #2]
   1dd84:	andeq	sp, r1, r0, ror #27
   1dd88:	ldrdeq	sp, [r1], -r8
   1dd8c:	ldrdeq	sp, [r1], -r0
   1dd90:	andeq	sp, r1, r8, asr #27
   1dd94:			; <UNDEFINED> instruction: 0x0001ddbc
   1dd98:	andeq	sp, r1, ip, lsr #27
   1dd9c:	andeq	sp, r1, r4, lsr #27
   1dda0:	andeq	sp, r1, r4, lsr #27
   1dda4:	ldrb	r0, [r1, #22]
   1dda8:	lsl	lr, r0, #8
   1ddac:	ldrb	r0, [r1, #21]
   1ddb0:	mov	sl, r9
   1ddb4:	orr	r0, lr, r0, lsl #16
   1ddb8:	mov	r9, r0
   1ddbc:	ldrb	r0, [r1, #20]
   1ddc0:	mov	r3, sl
   1ddc4:	orr	r9, r9, r0, lsl #24
   1ddc8:	ldrb	r0, [r1, #19]
   1ddcc:	orr	r5, r0, r3
   1ddd0:	ldrb	r0, [r1, #18]
   1ddd4:	orr	r7, r5, r0, lsl #8
   1ddd8:	ldrb	r0, [r1, #17]
   1dddc:	orr	r0, r7, r0, lsl #16
   1dde0:	cmp	r2, #8
   1dde4:	blt	1e1a8 <main@@Base+0xaf24>
   1dde8:	ldrb	r3, [ip]
   1ddec:	movw	r2, #24421	; 0x5f65
   1ddf0:	movt	r2, #25959	; 0x6567
   1ddf4:	add	r2, r2, #851968	; 0xd0000
   1ddf8:	orr	r0, r0, r3, lsl #24
   1ddfc:	movw	r3, #27904	; 0x6d00
   1de00:	add	r2, r2, #150994944	; 0x9000000
   1de04:	movt	r3, #28277	; 0x6e75
   1de08:	eor	r0, r0, r2
   1de0c:	eor	r3, r9, r3
   1de10:	orrs	r0, r3, r0
   1de14:	bne	1e1a8 <main@@Base+0xaf24>
   1de18:	ldrb	r0, [r1, #23]
   1de1c:	ldr	r3, [sp, #4]
   1de20:	mov	r2, ip
   1de24:	cmp	r0, #46	; 0x2e
   1de28:	addeq	r2, r1, #24
   1de2c:	cmp	r2, ip
   1de30:	beq	1e1a8 <main@@Base+0xaf24>
   1de34:	ldr	r0, [sp, #16]
   1de38:	mov	r1, r2
   1de3c:	mov	r2, r8
   1de40:	sub	sp, fp, #28
   1de44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1de48:	b	235d4 <main@@Base+0x10350>
   1de4c:	eor	r0, r0, r5
   1de50:	orrs	r0, r0, r6
   1de54:	bne	1e1a8 <main@@Base+0xaf24>
   1de58:	add	lr, r1, #16
   1de5c:	sub	r2, r8, lr
   1de60:	cmp	r2, #8
   1de64:	mov	r0, r2
   1de68:	movcs	r0, #8
   1de6c:	sub	r4, r0, #1
   1de70:	cmp	r4, #7
   1de74:	bhi	1e1a8 <main@@Base+0xaf24>
   1de78:	add	ip, pc, #36	; 0x24
   1de7c:	mov	r0, #0
   1de80:	mov	sl, #0
   1de84:	mov	r9, #0
   1de88:	mov	r7, #0
   1de8c:	mov	r6, #0
   1de90:	mov	r5, #0
   1de94:	mov	r3, #0
   1de98:	str	r0, [sp, #12]
   1de9c:	mov	r0, #0
   1dea0:	ldr	pc, [ip, r4, lsl #2]
   1dea4:	andeq	sp, r1, r0, lsl pc
   1dea8:	andeq	sp, r1, r8, lsl #30
   1deac:	andeq	sp, r1, r0, lsl #30
   1deb0:	strdeq	sp, [r1], -r8
   1deb4:	andeq	sp, r1, ip, ror #29
   1deb8:	andeq	sp, r1, r0, ror #29
   1debc:	andeq	sp, r1, ip, asr #29
   1dec0:	andeq	sp, r1, r4, asr #29
   1dec4:	ldrb	r0, [r1, #23]
   1dec8:	str	r0, [sp, #12]
   1decc:	ldrb	r0, [r1, #22]
   1ded0:	ldr	r3, [sp, #12]
   1ded4:	mov	r9, sl
   1ded8:	orr	r0, r3, r0, lsl #8
   1dedc:	mov	sl, r0
   1dee0:	ldrb	r0, [r1, #21]
   1dee4:	mov	r7, r9
   1dee8:	orr	sl, sl, r0, lsl #16
   1deec:	ldrb	r0, [r1, #20]
   1def0:	mov	r6, r7
   1def4:	orr	sl, sl, r0, lsl #24
   1def8:	ldrb	r0, [r1, #19]
   1defc:	orr	r5, r0, r6
   1df00:	ldrb	r0, [r1, #18]
   1df04:	orr	r0, r5, r0, lsl #8
   1df08:	ldrb	r3, [r1, #17]
   1df0c:	orr	r3, r0, r3, lsl #16
   1df10:	ldrb	r0, [lr]
   1df14:	movw	r7, #27904	; 0x6d00
   1df18:	cmp	r2, #8
   1df1c:	movt	r7, #28277	; 0x6e75
   1df20:	orr	r4, r3, r0, lsl #24
   1df24:	blt	1dff8 <main@@Base+0xad74>
   1df28:	movw	r2, #24421	; 0x5f65
   1df2c:	bic	r0, sl, #255	; 0xff
   1df30:	movt	r2, #25959	; 0x6567
   1df34:	eor	r0, r0, r7
   1df38:	eor	r2, r4, r2
   1df3c:	orrs	r0, r0, r2
   1df40:	bne	1dff8 <main@@Base+0xad74>
   1df44:	ldrb	r0, [r1, #23]
   1df48:	mov	r2, lr
   1df4c:	cmp	r0, #46	; 0x2e
   1df50:	addeq	r2, r1, #24
   1df54:	cmp	r2, lr
   1df58:	beq	1dff8 <main@@Base+0xad74>
   1df5c:	ldr	r0, [sp, #16]
   1df60:	ldr	r3, [sp, #4]
   1df64:	mov	r1, r2
   1df68:	mov	r2, r8
   1df6c:	sub	sp, fp, #28
   1df70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1df74:	b	237c4 <main@@Base+0x10540>
   1df78:	add	r0, r1, #16
   1df7c:	sub	r6, r8, r0
   1df80:	cmp	r6, #8
   1df84:	mov	r2, r6
   1df88:	movcs	r2, #8
   1df8c:	sub	r3, r2, #2
   1df90:	cmp	r3, #7
   1df94:	bcs	1e0b0 <main@@Base+0xae2c>
   1df98:	ldrb	r2, [r1, #17]
   1df9c:	mov	r3, #0
   1dfa0:	lsl	r7, r2, #16
   1dfa4:	cmp	r6, #3
   1dfa8:	blt	1e1a8 <main@@Base+0xaf24>
   1dfac:	ldrb	r2, [r0]
   1dfb0:	orr	r2, r7, r2, lsl #24
   1dfb4:	eor	r2, r2, #7274496	; 0x6f0000
   1dfb8:	eor	r2, r2, #1862270976	; 0x6f000000
   1dfbc:	orrs	r2, r3, r2
   1dfc0:	bne	1e1a8 <main@@Base+0xaf24>
   1dfc4:	ldrb	r2, [r1, #18]
   1dfc8:	cmp	r2, #46	; 0x2e
   1dfcc:	mov	r2, r0
   1dfd0:	addeq	r2, r1, #19
   1dfd4:	cmp	r2, r0
   1dfd8:	beq	1e1a8 <main@@Base+0xaf24>
   1dfdc:	ldr	r0, [sp, #16]
   1dfe0:	mov	r1, r2
   1dfe4:	mov	r2, r8
   1dfe8:	mov	r3, lr
   1dfec:	sub	sp, fp, #28
   1dff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dff4:	b	231c8 <main@@Base+0xff44>
   1dff8:	movw	r0, #31077	; 0x7965
   1dffc:	movw	r2, #25965	; 0x656d
   1e000:	movt	r0, #28788	; 0x7074
   1e004:	movt	r2, #28532	; 0x6f74
   1e008:	eor	r0, sl, r0
   1e00c:	eor	r2, r4, r2
   1e010:	orrs	r0, r0, r2
   1e014:	bne	1e1a8 <main@@Base+0xaf24>
   1e018:	add	r0, r1, #24
   1e01c:	sub	r5, r8, r0
   1e020:	cmp	r5, #8
   1e024:	mov	r2, r5
   1e028:	movcs	r2, #8
   1e02c:	sub	r3, r2, #3
   1e030:	cmp	r3, #6
   1e034:	bcs	1e16c <main@@Base+0xaee8>
   1e038:	ldrb	r2, [r1, #26]
   1e03c:	ldr	r3, [sp, #4]
   1e040:	mov	r4, #0
   1e044:	lsl	r2, r2, #8
   1e048:	ldrb	r6, [r1, #25]
   1e04c:	orr	r6, r2, r6, lsl #16
   1e050:	cmp	r5, #4
   1e054:	blt	1e1a8 <main@@Base+0xaf24>
   1e058:	ldrb	r2, [r0]
   1e05c:	orr	r2, r6, r2, lsl #24
   1e060:	eor	r2, r2, r7
   1e064:	orrs	r2, r4, r2
   1e068:	bne	1e1a8 <main@@Base+0xaf24>
   1e06c:	ldrb	r2, [r1, #27]
   1e070:	cmp	r2, #46	; 0x2e
   1e074:	mov	r2, r0
   1e078:	addeq	r2, r1, #28
   1e07c:	cmp	r2, r0
   1e080:	beq	1e1a8 <main@@Base+0xaf24>
   1e084:	ldr	r0, [sp, #16]
   1e088:	mov	r1, r2
   1e08c:	mov	r2, r8
   1e090:	sub	sp, fp, #28
   1e094:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e098:	b	2390c <main@@Base+0x10688>
   1e09c:	mov	r3, #0
   1e0a0:	cmp	r2, #1
   1e0a4:	mov	r7, #0
   1e0a8:	beq	1d708 <main@@Base+0xa484>
   1e0ac:	b	1e1a8 <main@@Base+0xaf24>
   1e0b0:	mov	r3, #0
   1e0b4:	cmp	r2, #1
   1e0b8:	mov	r7, #0
   1e0bc:	beq	1dfa4 <main@@Base+0xad20>
   1e0c0:	b	1e1a8 <main@@Base+0xaf24>
   1e0c4:	movw	r0, #25942	; 0x6556
   1e0c8:	movw	r1, #25452	; 0x636c
   1e0cc:	movt	r0, #30052	; 0x7564
   1e0d0:	movt	r1, #18798	; 0x496e
   1e0d4:	eor	r0, sl, r0
   1e0d8:	eor	r1, r6, r1
   1e0dc:	orrs	r0, r0, r1
   1e0e0:	bne	1e1a4 <main@@Base+0xaf20>
   1e0e4:	add	r6, r7, #8
   1e0e8:	sub	r1, r8, r6
   1e0ec:	cmp	r1, #8
   1e0f0:	movcs	r1, #8
   1e0f4:	sub	r0, r1, #2
   1e0f8:	cmp	r0, #7
   1e0fc:	bcs	1e194 <main@@Base+0xaf10>
   1e100:	ldrb	r0, [r7, #9]
   1e104:	lsl	r1, r0, #16
   1e108:	mov	r0, #0
   1e10c:	ldrb	r2, [r6]
   1e110:	orr	r1, r1, r2, lsl #24
   1e114:	eor	r1, r1, #23855104	; 0x16c0000
   1e118:	eor	r1, r1, #1610612736	; 0x60000000
   1e11c:	orrs	r0, r0, r1
   1e120:	bne	1e1a4 <main@@Base+0xaf20>
   1e124:	ldr	r0, [sp, #12]
   1e128:	mov	r1, r6
   1e12c:	mov	r2, r8
   1e130:	mov	r3, #2
   1e134:	str	r0, [sp]
   1e138:	ldr	r0, [sp, #16]
   1e13c:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   1e140:	cmp	r0, r6
   1e144:	mov	r1, r7
   1e148:	beq	1e1a8 <main@@Base+0xaf24>
   1e14c:	mov	r2, #0
   1e150:	mov	r3, #0
   1e154:	mov	r1, r0
   1e158:	ldr	r0, [sp, #8]
   1e15c:	strd	r2, [r0]
   1e160:	mov	r0, #0
   1e164:	str	r0, [r9]
   1e168:	b	1e1a8 <main@@Base+0xaf24>
   1e16c:	ldr	r3, [sp, #4]
   1e170:	mov	r4, #0
   1e174:	cmp	r2, #1
   1e178:	beq	1e18c <main@@Base+0xaf08>
   1e17c:	cmp	r2, #2
   1e180:	mov	r2, #0
   1e184:	beq	1e048 <main@@Base+0xadc4>
   1e188:	b	1e1a8 <main@@Base+0xaf24>
   1e18c:	mov	r6, #0
   1e190:	b	1e050 <main@@Base+0xadcc>
   1e194:	cmp	r1, #1
   1e198:	mov	r0, #0
   1e19c:	mov	r1, #0
   1e1a0:	beq	1e10c <main@@Base+0xae88>
   1e1a4:	mov	r1, r7
   1e1a8:	mov	r0, r1
   1e1ac:	sub	sp, fp, #28
   1e1b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e1b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e1b8:	add	fp, sp, #28
   1e1bc:	sub	sp, sp, #44	; 0x2c
   1e1c0:	mov	r6, r2
   1e1c4:	ldr	r2, [fp, #8]
   1e1c8:	mov	r5, r0
   1e1cc:	mov	r0, #0
   1e1d0:	mov	sl, r3
   1e1d4:	cmp	r1, r6
   1e1d8:	strb	r0, [r2]
   1e1dc:	beq	1e220 <main@@Base+0xaf9c>
   1e1e0:	ldrb	r0, [r1]
   1e1e4:	cmp	r0, #46	; 0x2e
   1e1e8:	beq	1e200 <main@@Base+0xaf7c>
   1e1ec:	cmp	r0, #34	; 0x22
   1e1f0:	bne	1e218 <main@@Base+0xaf94>
   1e1f4:	mov	r0, #0
   1e1f8:	add	r1, r1, #1
   1e1fc:	b	1e21c <main@@Base+0xaf98>
   1e200:	mov	r0, r5
   1e204:	mov	r2, r6
   1e208:	mov	r3, #5
   1e20c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1e210:	mov	r1, r0
   1e214:	b	1e220 <main@@Base+0xaf9c>
   1e218:	mov	r0, #1
   1e21c:	str	r0, [r5, #12]
   1e220:	ldr	r0, [r5, #12]
   1e224:	cmp	r0, #0
   1e228:	beq	1e234 <main@@Base+0xafb0>
   1e22c:	mov	r7, r1
   1e230:	b	1e270 <main@@Base+0xafec>
   1e234:	sub	r0, r6, r1
   1e238:	cmp	r0, #2
   1e23c:	blt	1e260 <main@@Base+0xafdc>
   1e240:	ldrb	r0, [r1]
   1e244:	cmp	r0, #32
   1e248:	bhi	1e22c <main@@Base+0xafa8>
   1e24c:	bne	1e260 <main@@Base+0xafdc>
   1e250:	mov	r7, r1
   1e254:	ldrb	r0, [r7, #1]!
   1e258:	cmp	r0, #32
   1e25c:	bhi	1e270 <main@@Base+0xafec>
   1e260:	mov	r0, r5
   1e264:	mov	r2, r6
   1e268:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1e26c:	mov	r7, r0
   1e270:	cmp	r7, r6
   1e274:	beq	1e3b0 <main@@Base+0xb12c>
   1e278:	add	r0, sl, #4
   1e27c:	mov	r1, #0
   1e280:	mov	r2, #0
   1e284:	add	r8, sp, #32
   1e288:	add	r9, sp, #28
   1e28c:	str	sl, [sp, #12]
   1e290:	str	r1, [sp, #20]
   1e294:	str	r0, [sp, #8]
   1e298:	ldr	r4, [sl]
   1e29c:	mov	sl, r0
   1e2a0:	str	r2, [sp, #16]
   1e2a4:	add	r0, sp, #24
   1e2a8:	mov	r1, r7
   1e2ac:	mov	r2, r6
   1e2b0:	mov	r3, r9
   1e2b4:	str	r8, [sp]
   1e2b8:	str	r0, [sp, #4]
   1e2bc:	mov	r0, r5
   1e2c0:	blx	r4
   1e2c4:	cmp	r0, r6
   1e2c8:	beq	1e3b0 <main@@Base+0xb12c>
   1e2cc:	mov	r4, r0
   1e2d0:	cmp	r0, r7
   1e2d4:	bne	1e2e8 <main@@Base+0xb064>
   1e2d8:	ldr	r4, [sl], #4
   1e2dc:	cmp	r4, #0
   1e2e0:	bne	1e2a4 <main@@Base+0xb020>
   1e2e4:	b	1e3b8 <main@@Base+0xb134>
   1e2e8:	ldr	r7, [sp, #20]
   1e2ec:	cmp	r7, #0
   1e2f0:	beq	1e300 <main@@Base+0xb07c>
   1e2f4:	ldr	r0, [r5, #12]
   1e2f8:	cmp	r0, #0
   1e2fc:	bne	1e3dc <main@@Base+0xb158>
   1e300:	ldr	r2, [sp, #28]
   1e304:	ldr	r0, [sp, #32]
   1e308:	ldr	r1, [sp, #36]	; 0x24
   1e30c:	cmp	r2, #0
   1e310:	beq	1e338 <main@@Base+0xb0b4>
   1e314:	ldr	sl, [sp, #12]
   1e318:	subs	r2, r0, #129	; 0x81
   1e31c:	sbcs	r1, r1, #0
   1e320:	bcc	1e364 <main@@Base+0xb0e0>
   1e324:	mov	r0, r5
   1e328:	mov	r1, r4
   1e32c:	mov	r2, r6
   1e330:	mov	r3, #8
   1e334:	b	1e358 <main@@Base+0xb0d4>
   1e338:	ldr	sl, [sp, #12]
   1e33c:	subs	r2, r0, #128	; 0x80
   1e340:	sbcs	r1, r1, #0
   1e344:	bcc	1e36c <main@@Base+0xb0e8>
   1e348:	mov	r0, r5
   1e34c:	mov	r1, r4
   1e350:	mov	r2, r6
   1e354:	mov	r3, #7
   1e358:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1e35c:	ldr	r2, [sp, #16]
   1e360:	b	1e374 <main@@Base+0xb0f0>
   1e364:	rsb	r2, r0, #0
   1e368:	b	1e370 <main@@Base+0xb0ec>
   1e36c:	mov	r2, r0
   1e370:	mov	r0, r4
   1e374:	cmp	r0, r6
   1e378:	beq	1e3b0 <main@@Base+0xb12c>
   1e37c:	ldr	r0, [fp, #8]
   1e380:	add	r7, r7, #1
   1e384:	str	r7, [sp, #20]
   1e388:	mov	r7, r4
   1e38c:	mov	r1, r0
   1e390:	ldrb	r0, [r0]
   1e394:	add	r0, r0, r2
   1e398:	strb	r0, [r1]
   1e39c:	ldr	r0, [sp, #24]
   1e3a0:	cmp	r0, #0
   1e3a4:	ldr	r0, [sp, #8]
   1e3a8:	bne	1e298 <main@@Base+0xb014>
   1e3ac:	b	1e3d0 <main@@Base+0xb14c>
   1e3b0:	mov	r4, r6
   1e3b4:	b	1e3d0 <main@@Base+0xb14c>
   1e3b8:	mov	r0, r5
   1e3bc:	mov	r1, r7
   1e3c0:	mov	r2, r6
   1e3c4:	mov	r3, #23
   1e3c8:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1e3cc:	mov	r4, r0
   1e3d0:	mov	r0, r4
   1e3d4:	sub	sp, fp, #28
   1e3d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e3dc:	mov	r0, r5
   1e3e0:	mov	r1, r4
   1e3e4:	mov	r2, r6
   1e3e8:	mov	r3, #14
   1e3ec:	b	1e3c8 <main@@Base+0xb144>
   1e3f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e3f4:	add	fp, sp, #28
   1e3f8:	sub	sp, sp, #44	; 0x2c
   1e3fc:	mov	r6, r2
   1e400:	ldr	r2, [fp, #8]
   1e404:	mov	r5, r0
   1e408:	mov	r0, #0
   1e40c:	mov	sl, r3
   1e410:	cmp	r1, r6
   1e414:	strb	r0, [r2]
   1e418:	beq	1e45c <main@@Base+0xb1d8>
   1e41c:	ldrb	r0, [r1]
   1e420:	cmp	r0, #46	; 0x2e
   1e424:	beq	1e43c <main@@Base+0xb1b8>
   1e428:	cmp	r0, #34	; 0x22
   1e42c:	bne	1e454 <main@@Base+0xb1d0>
   1e430:	mov	r0, #0
   1e434:	add	r1, r1, #1
   1e438:	b	1e458 <main@@Base+0xb1d4>
   1e43c:	mov	r0, r5
   1e440:	mov	r2, r6
   1e444:	mov	r3, #5
   1e448:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1e44c:	mov	r1, r0
   1e450:	b	1e45c <main@@Base+0xb1d8>
   1e454:	mov	r0, #1
   1e458:	str	r0, [r5, #12]
   1e45c:	ldr	r0, [r5, #12]
   1e460:	cmp	r0, #0
   1e464:	beq	1e470 <main@@Base+0xb1ec>
   1e468:	mov	r7, r1
   1e46c:	b	1e4ac <main@@Base+0xb228>
   1e470:	sub	r0, r6, r1
   1e474:	cmp	r0, #2
   1e478:	blt	1e49c <main@@Base+0xb218>
   1e47c:	ldrb	r0, [r1]
   1e480:	cmp	r0, #32
   1e484:	bhi	1e468 <main@@Base+0xb1e4>
   1e488:	bne	1e49c <main@@Base+0xb218>
   1e48c:	mov	r7, r1
   1e490:	ldrb	r0, [r7, #1]!
   1e494:	cmp	r0, #32
   1e498:	bhi	1e4ac <main@@Base+0xb228>
   1e49c:	mov	r0, r5
   1e4a0:	mov	r2, r6
   1e4a4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1e4a8:	mov	r7, r0
   1e4ac:	cmp	r7, r6
   1e4b0:	beq	1e5dc <main@@Base+0xb358>
   1e4b4:	mov	r1, #0
   1e4b8:	add	r0, sl, #4
   1e4bc:	add	r8, sp, #32
   1e4c0:	add	r9, sp, #28
   1e4c4:	str	sl, [sp, #12]
   1e4c8:	str	r1, [sp, #16]
   1e4cc:	mov	r1, #0
   1e4d0:	str	r0, [sp, #8]
   1e4d4:	str	r1, [sp, #20]
   1e4d8:	ldr	r4, [sl]
   1e4dc:	mov	sl, r0
   1e4e0:	add	r0, sp, #24
   1e4e4:	mov	r1, r7
   1e4e8:	mov	r2, r6
   1e4ec:	mov	r3, r9
   1e4f0:	str	r8, [sp]
   1e4f4:	str	r0, [sp, #4]
   1e4f8:	mov	r0, r5
   1e4fc:	blx	r4
   1e500:	cmp	r0, r6
   1e504:	beq	1e5dc <main@@Base+0xb358>
   1e508:	mov	r4, r0
   1e50c:	cmp	r0, r7
   1e510:	bne	1e524 <main@@Base+0xb2a0>
   1e514:	ldr	r4, [sl], #4
   1e518:	cmp	r4, #0
   1e51c:	bne	1e4e0 <main@@Base+0xb25c>
   1e520:	b	1e5e4 <main@@Base+0xb360>
   1e524:	ldr	r7, [sp, #20]
   1e528:	cmp	r7, #0
   1e52c:	beq	1e53c <main@@Base+0xb2b8>
   1e530:	ldr	r0, [r5, #12]
   1e534:	cmp	r0, #0
   1e538:	bne	1e608 <main@@Base+0xb384>
   1e53c:	ldr	r0, [sp, #28]
   1e540:	cmp	r0, #0
   1e544:	beq	1e564 <main@@Base+0xb2e0>
   1e548:	mov	r0, r5
   1e54c:	mov	r1, r4
   1e550:	mov	r2, r6
   1e554:	mov	r3, #8
   1e558:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1e55c:	ldr	sl, [sp, #12]
   1e560:	b	1e59c <main@@Base+0xb318>
   1e564:	ldr	r0, [sp, #32]
   1e568:	ldr	r1, [sp, #36]	; 0x24
   1e56c:	ldr	sl, [sp, #12]
   1e570:	subs	r2, r0, #256	; 0x100
   1e574:	sbcs	r1, r1, #0
   1e578:	bcc	1e594 <main@@Base+0xb310>
   1e57c:	mov	r0, r5
   1e580:	mov	r1, r4
   1e584:	mov	r2, r6
   1e588:	mov	r3, #7
   1e58c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1e590:	b	1e59c <main@@Base+0xb318>
   1e594:	str	r0, [sp, #16]
   1e598:	mov	r0, r4
   1e59c:	cmp	r0, r6
   1e5a0:	beq	1e5dc <main@@Base+0xb358>
   1e5a4:	ldr	r0, [fp, #8]
   1e5a8:	ldr	r2, [sp, #16]
   1e5ac:	add	r7, r7, #1
   1e5b0:	str	r7, [sp, #20]
   1e5b4:	mov	r7, r4
   1e5b8:	mov	r1, r0
   1e5bc:	ldrb	r0, [r0]
   1e5c0:	add	r0, r0, r2
   1e5c4:	strb	r0, [r1]
   1e5c8:	ldr	r0, [sp, #24]
   1e5cc:	cmp	r0, #0
   1e5d0:	ldr	r0, [sp, #8]
   1e5d4:	bne	1e4d8 <main@@Base+0xb254>
   1e5d8:	b	1e5fc <main@@Base+0xb378>
   1e5dc:	mov	r4, r6
   1e5e0:	b	1e5fc <main@@Base+0xb378>
   1e5e4:	mov	r0, r5
   1e5e8:	mov	r1, r7
   1e5ec:	mov	r2, r6
   1e5f0:	mov	r3, #23
   1e5f4:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1e5f8:	mov	r4, r0
   1e5fc:	mov	r0, r4
   1e600:	sub	sp, fp, #28
   1e604:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e608:	mov	r0, r5
   1e60c:	mov	r1, r4
   1e610:	mov	r2, r6
   1e614:	mov	r3, #14
   1e618:	b	1e5f4 <main@@Base+0xb370>
   1e61c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e620:	add	fp, sp, #28
   1e624:	sub	sp, sp, #44	; 0x2c
   1e628:	mov	r6, r2
   1e62c:	ldr	r2, [fp, #8]
   1e630:	mov	r5, r0
   1e634:	mov	r0, #0
   1e638:	mov	sl, r3
   1e63c:	cmp	r1, r6
   1e640:	strh	r0, [r2]
   1e644:	beq	1e688 <main@@Base+0xb404>
   1e648:	ldrb	r0, [r1]
   1e64c:	cmp	r0, #46	; 0x2e
   1e650:	beq	1e668 <main@@Base+0xb3e4>
   1e654:	cmp	r0, #34	; 0x22
   1e658:	bne	1e680 <main@@Base+0xb3fc>
   1e65c:	mov	r0, #0
   1e660:	add	r1, r1, #1
   1e664:	b	1e684 <main@@Base+0xb400>
   1e668:	mov	r0, r5
   1e66c:	mov	r2, r6
   1e670:	mov	r3, #5
   1e674:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1e678:	mov	r1, r0
   1e67c:	b	1e688 <main@@Base+0xb404>
   1e680:	mov	r0, #1
   1e684:	str	r0, [r5, #12]
   1e688:	ldr	r0, [r5, #12]
   1e68c:	cmp	r0, #0
   1e690:	beq	1e69c <main@@Base+0xb418>
   1e694:	mov	r7, r1
   1e698:	b	1e6d8 <main@@Base+0xb454>
   1e69c:	sub	r0, r6, r1
   1e6a0:	cmp	r0, #2
   1e6a4:	blt	1e6c8 <main@@Base+0xb444>
   1e6a8:	ldrb	r0, [r1]
   1e6ac:	cmp	r0, #32
   1e6b0:	bhi	1e694 <main@@Base+0xb410>
   1e6b4:	bne	1e6c8 <main@@Base+0xb444>
   1e6b8:	mov	r7, r1
   1e6bc:	ldrb	r0, [r7, #1]!
   1e6c0:	cmp	r0, #32
   1e6c4:	bhi	1e6d8 <main@@Base+0xb454>
   1e6c8:	mov	r0, r5
   1e6cc:	mov	r2, r6
   1e6d0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1e6d4:	mov	r7, r0
   1e6d8:	cmp	r7, r6
   1e6dc:	beq	1e81c <main@@Base+0xb598>
   1e6e0:	add	r0, sl, #4
   1e6e4:	mov	r1, #0
   1e6e8:	mov	r2, #0
   1e6ec:	add	r8, sp, #32
   1e6f0:	add	r9, sp, #28
   1e6f4:	str	sl, [sp, #12]
   1e6f8:	str	r1, [sp, #20]
   1e6fc:	str	r0, [sp, #8]
   1e700:	ldr	r4, [sl]
   1e704:	mov	sl, r0
   1e708:	str	r2, [sp, #16]
   1e70c:	add	r0, sp, #24
   1e710:	mov	r1, r7
   1e714:	mov	r2, r6
   1e718:	mov	r3, r9
   1e71c:	str	r8, [sp]
   1e720:	str	r0, [sp, #4]
   1e724:	mov	r0, r5
   1e728:	blx	r4
   1e72c:	cmp	r0, r6
   1e730:	beq	1e81c <main@@Base+0xb598>
   1e734:	mov	r4, r0
   1e738:	cmp	r0, r7
   1e73c:	bne	1e750 <main@@Base+0xb4cc>
   1e740:	ldr	r4, [sl], #4
   1e744:	cmp	r4, #0
   1e748:	bne	1e70c <main@@Base+0xb488>
   1e74c:	b	1e824 <main@@Base+0xb5a0>
   1e750:	ldr	r7, [sp, #20]
   1e754:	cmp	r7, #0
   1e758:	beq	1e768 <main@@Base+0xb4e4>
   1e75c:	ldr	r0, [r5, #12]
   1e760:	cmp	r0, #0
   1e764:	bne	1e848 <main@@Base+0xb5c4>
   1e768:	ldr	r2, [sp, #28]
   1e76c:	ldr	r0, [sp, #32]
   1e770:	ldr	r1, [sp, #36]	; 0x24
   1e774:	cmp	r2, #0
   1e778:	beq	1e7a4 <main@@Base+0xb520>
   1e77c:	ldr	sl, [sp, #12]
   1e780:	movw	r2, #32769	; 0x8001
   1e784:	subs	r2, r0, r2
   1e788:	sbcs	r1, r1, #0
   1e78c:	bcc	1e7d0 <main@@Base+0xb54c>
   1e790:	mov	r0, r5
   1e794:	mov	r1, r4
   1e798:	mov	r2, r6
   1e79c:	mov	r3, #8
   1e7a0:	b	1e7c4 <main@@Base+0xb540>
   1e7a4:	ldr	sl, [sp, #12]
   1e7a8:	subs	r2, r0, #32768	; 0x8000
   1e7ac:	sbcs	r1, r1, #0
   1e7b0:	bcc	1e7d8 <main@@Base+0xb554>
   1e7b4:	mov	r0, r5
   1e7b8:	mov	r1, r4
   1e7bc:	mov	r2, r6
   1e7c0:	mov	r3, #7
   1e7c4:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1e7c8:	ldr	r2, [sp, #16]
   1e7cc:	b	1e7e0 <main@@Base+0xb55c>
   1e7d0:	rsb	r2, r0, #0
   1e7d4:	b	1e7dc <main@@Base+0xb558>
   1e7d8:	mov	r2, r0
   1e7dc:	mov	r0, r4
   1e7e0:	cmp	r0, r6
   1e7e4:	beq	1e81c <main@@Base+0xb598>
   1e7e8:	ldr	r0, [fp, #8]
   1e7ec:	add	r7, r7, #1
   1e7f0:	str	r7, [sp, #20]
   1e7f4:	mov	r7, r4
   1e7f8:	mov	r1, r0
   1e7fc:	ldrh	r0, [r0]
   1e800:	add	r0, r0, r2
   1e804:	strh	r0, [r1]
   1e808:	ldr	r0, [sp, #24]
   1e80c:	cmp	r0, #0
   1e810:	ldr	r0, [sp, #8]
   1e814:	bne	1e700 <main@@Base+0xb47c>
   1e818:	b	1e83c <main@@Base+0xb5b8>
   1e81c:	mov	r4, r6
   1e820:	b	1e83c <main@@Base+0xb5b8>
   1e824:	mov	r0, r5
   1e828:	mov	r1, r7
   1e82c:	mov	r2, r6
   1e830:	mov	r3, #23
   1e834:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1e838:	mov	r4, r0
   1e83c:	mov	r0, r4
   1e840:	sub	sp, fp, #28
   1e844:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e848:	mov	r0, r5
   1e84c:	mov	r1, r4
   1e850:	mov	r2, r6
   1e854:	mov	r3, #14
   1e858:	b	1e834 <main@@Base+0xb5b0>
   1e85c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e860:	add	fp, sp, #28
   1e864:	sub	sp, sp, #28
   1e868:	mov	r7, r2
   1e86c:	mov	r5, r0
   1e870:	cmp	r1, r2
   1e874:	beq	1e8ac <main@@Base+0xb628>
   1e878:	ldrb	r0, [r1]
   1e87c:	cmp	r0, #123	; 0x7b
   1e880:	bne	1e8ac <main@@Base+0xb628>
   1e884:	add	r2, r1, #1
   1e888:	mov	r9, r3
   1e88c:	sub	r0, r7, r2
   1e890:	cmp	r0, #2
   1e894:	blt	1e8d4 <main@@Base+0xb650>
   1e898:	ldrb	r0, [r2]
   1e89c:	cmp	r0, #32
   1e8a0:	bls	1e8c4 <main@@Base+0xb640>
   1e8a4:	mov	r1, r2
   1e8a8:	b	1e8e8 <main@@Base+0xb664>
   1e8ac:	mov	r0, r5
   1e8b0:	mov	r2, r7
   1e8b4:	mov	r3, #21
   1e8b8:	sub	sp, fp, #28
   1e8bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e8c0:	b	2cebc <flatcc_json_parser_set_error@@Base>
   1e8c4:	bne	1e8d4 <main@@Base+0xb650>
   1e8c8:	ldrb	r0, [r1, #2]!
   1e8cc:	cmp	r0, #32
   1e8d0:	bhi	1e8e8 <main@@Base+0xb664>
   1e8d4:	mov	r1, r2
   1e8d8:	mov	r0, r5
   1e8dc:	mov	r2, r7
   1e8e0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1e8e4:	mov	r1, r0
   1e8e8:	cmp	r1, r7
   1e8ec:	mov	r2, r7
   1e8f0:	beq	1e928 <main@@Base+0xb6a4>
   1e8f4:	ldrb	r0, [r1]
   1e8f8:	cmp	r0, #125	; 0x7d
   1e8fc:	bne	1e924 <main@@Base+0xb6a0>
   1e900:	add	r2, r1, #1
   1e904:	sub	r0, r7, r2
   1e908:	cmp	r0, #2
   1e90c:	blt	1eef0 <main@@Base+0xbc6c>
   1e910:	ldrb	r0, [r2]
   1e914:	cmp	r0, #32
   1e918:	bls	1eee0 <main@@Base+0xbc5c>
   1e91c:	mov	r1, r2
   1e920:	b	1ef48 <main@@Base+0xbcc4>
   1e924:	mov	r2, r1
   1e928:	mov	sl, #1627389952	; 0x61000000
   1e92c:	cmp	r2, r7
   1e930:	mov	r4, r7
   1e934:	beq	1e980 <main@@Base+0xb6fc>
   1e938:	ldrb	r0, [r2]
   1e93c:	cmp	r0, #46	; 0x2e
   1e940:	beq	1e958 <main@@Base+0xb6d4>
   1e944:	cmp	r0, #34	; 0x22
   1e948:	bne	1e974 <main@@Base+0xb6f0>
   1e94c:	mov	r0, #0
   1e950:	add	r4, r2, #1
   1e954:	b	1e97c <main@@Base+0xb6f8>
   1e958:	mov	r1, r2
   1e95c:	mov	r0, r5
   1e960:	mov	r2, r7
   1e964:	mov	r3, #5
   1e968:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1e96c:	mov	r4, r0
   1e970:	b	1e980 <main@@Base+0xb6fc>
   1e974:	mov	r0, #1
   1e978:	mov	r4, r2
   1e97c:	str	r0, [r5, #12]
   1e980:	sub	r0, r7, r4
   1e984:	mov	r1, #8
   1e988:	cmp	r0, #8
   1e98c:	movcc	r1, r0
   1e990:	sub	r1, r1, #1
   1e994:	cmp	r1, #7
   1e998:	bhi	1ed40 <main@@Base+0xbabc>
   1e99c:	ldrb	r1, [r4]
   1e9a0:	teq	sl, r1, lsl #24
   1e9a4:	beq	1e9f4 <main@@Base+0xb770>
   1e9a8:	lsl	r1, r1, #24
   1e9ac:	teq	r1, #1644167168	; 0x62000000
   1e9b0:	bne	1ed40 <main@@Base+0xbabc>
   1e9b4:	cmp	r0, #2
   1e9b8:	mov	r8, r4
   1e9bc:	blt	1eb9c <main@@Base+0xb918>
   1e9c0:	mov	r1, r4
   1e9c4:	ldr	r2, [r5, #12]
   1e9c8:	ldrb	r0, [r1, #1]!
   1e9cc:	cmp	r2, #0
   1e9d0:	beq	1ea34 <main@@Base+0xb7b0>
   1e9d4:	cmp	r0, #33	; 0x21
   1e9d8:	bcc	1e9e8 <main@@Base+0xb764>
   1e9dc:	cmp	r0, #58	; 0x3a
   1e9e0:	mov	r8, r4
   1e9e4:	bne	1eb9c <main@@Base+0xb918>
   1e9e8:	mov	r0, #0
   1e9ec:	str	r0, [r5, #12]
   1e9f0:	b	1ea44 <main@@Base+0xb7c0>
   1e9f4:	cmp	r0, #2
   1e9f8:	mov	r6, r4
   1e9fc:	blt	1ecc0 <main@@Base+0xba3c>
   1ea00:	mov	r1, r4
   1ea04:	ldr	r2, [r5, #12]
   1ea08:	ldrb	r0, [r1, #1]!
   1ea0c:	cmp	r2, #0
   1ea10:	beq	1ea64 <main@@Base+0xb7e0>
   1ea14:	cmp	r0, #33	; 0x21
   1ea18:	bcc	1ea28 <main@@Base+0xb7a4>
   1ea1c:	cmp	r0, #58	; 0x3a
   1ea20:	mov	r6, r4
   1ea24:	bne	1ecc0 <main@@Base+0xba3c>
   1ea28:	mov	r0, #0
   1ea2c:	str	r0, [r5, #12]
   1ea30:	b	1ea74 <main@@Base+0xb7f0>
   1ea34:	cmp	r0, #34	; 0x22
   1ea38:	mov	r8, r4
   1ea3c:	bne	1eb9c <main@@Base+0xb918>
   1ea40:	add	r1, r4, #2
   1ea44:	sub	r0, r7, r1
   1ea48:	cmp	r0, #2
   1ea4c:	blt	1eaa8 <main@@Base+0xb824>
   1ea50:	ldrb	r0, [r1]
   1ea54:	cmp	r0, #32
   1ea58:	bls	1ea94 <main@@Base+0xb810>
   1ea5c:	mov	r8, r1
   1ea60:	b	1eab8 <main@@Base+0xb834>
   1ea64:	cmp	r0, #34	; 0x22
   1ea68:	mov	r6, r4
   1ea6c:	bne	1ecc0 <main@@Base+0xba3c>
   1ea70:	add	r1, r4, #2
   1ea74:	sub	r0, r7, r1
   1ea78:	cmp	r0, #2
   1ea7c:	blt	1eb1c <main@@Base+0xb898>
   1ea80:	ldrb	r0, [r1]
   1ea84:	cmp	r0, #32
   1ea88:	bls	1eb08 <main@@Base+0xb884>
   1ea8c:	mov	r6, r1
   1ea90:	b	1eb2c <main@@Base+0xb8a8>
   1ea94:	bne	1eaa8 <main@@Base+0xb824>
   1ea98:	mov	r8, r1
   1ea9c:	ldrb	r0, [r8, #1]!
   1eaa0:	cmp	r0, #32
   1eaa4:	bhi	1eab8 <main@@Base+0xb834>
   1eaa8:	mov	r0, r5
   1eaac:	mov	r2, r7
   1eab0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1eab4:	mov	r8, r0
   1eab8:	cmp	r8, r7
   1eabc:	beq	1eaf0 <main@@Base+0xb86c>
   1eac0:	ldrb	r0, [r8]
   1eac4:	cmp	r0, #58	; 0x3a
   1eac8:	bne	1eaf0 <main@@Base+0xb86c>
   1eacc:	add	r1, r8, #1
   1ead0:	sub	r0, r7, r1
   1ead4:	cmp	r0, #2
   1ead8:	blt	1eb8c <main@@Base+0xb908>
   1eadc:	ldrb	r0, [r1]
   1eae0:	cmp	r0, #32
   1eae4:	bls	1eb7c <main@@Base+0xb8f8>
   1eae8:	mov	r8, r1
   1eaec:	b	1eb9c <main@@Base+0xb918>
   1eaf0:	mov	r0, r5
   1eaf4:	mov	r1, r8
   1eaf8:	mov	r2, r7
   1eafc:	mov	r3, #4
   1eb00:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1eb04:	b	1eb98 <main@@Base+0xb914>
   1eb08:	bne	1eb1c <main@@Base+0xb898>
   1eb0c:	mov	r6, r1
   1eb10:	ldrb	r0, [r6, #1]!
   1eb14:	cmp	r0, #32
   1eb18:	bhi	1eb2c <main@@Base+0xb8a8>
   1eb1c:	mov	r0, r5
   1eb20:	mov	r2, r7
   1eb24:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1eb28:	mov	r6, r0
   1eb2c:	cmp	r6, r7
   1eb30:	beq	1eb64 <main@@Base+0xb8e0>
   1eb34:	ldrb	r0, [r6]
   1eb38:	cmp	r0, #58	; 0x3a
   1eb3c:	bne	1eb64 <main@@Base+0xb8e0>
   1eb40:	add	r1, r6, #1
   1eb44:	sub	r0, r7, r1
   1eb48:	cmp	r0, #2
   1eb4c:	blt	1ecb0 <main@@Base+0xba2c>
   1eb50:	ldrb	r0, [r1]
   1eb54:	cmp	r0, #32
   1eb58:	bls	1eca0 <main@@Base+0xba1c>
   1eb5c:	mov	r6, r1
   1eb60:	b	1ecc0 <main@@Base+0xba3c>
   1eb64:	mov	r0, r5
   1eb68:	mov	r1, r6
   1eb6c:	mov	r2, r7
   1eb70:	mov	r3, #4
   1eb74:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1eb78:	b	1ecbc <main@@Base+0xba38>
   1eb7c:	bne	1eb8c <main@@Base+0xb908>
   1eb80:	ldrb	r0, [r8, #2]!
   1eb84:	cmp	r0, #32
   1eb88:	bhi	1eb9c <main@@Base+0xb918>
   1eb8c:	mov	r0, r5
   1eb90:	mov	r2, r7
   1eb94:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1eb98:	mov	r8, r0
   1eb9c:	cmp	r4, r8
   1eba0:	beq	1ed40 <main@@Base+0xbabc>
   1eba4:	mov	r4, #0
   1eba8:	cmp	r8, r7
   1ebac:	str	r4, [sp, #20]
   1ebb0:	str	r4, [sp, #16]
   1ebb4:	strb	r4, [sp, #10]
   1ebb8:	str	r4, [sp, #12]
   1ebbc:	beq	1ec18 <main@@Base+0xb994>
   1ebc0:	add	r0, sp, #16
   1ebc4:	mov	r1, r8
   1ebc8:	mov	r2, r7
   1ebcc:	add	r3, sp, #12
   1ebd0:	str	r0, [sp]
   1ebd4:	mov	r0, r5
   1ebd8:	bl	2edac <flatcc_json_parser_integer@@Base>
   1ebdc:	cmp	r0, r8
   1ebe0:	beq	1ec20 <main@@Base+0xb99c>
   1ebe4:	ldr	r3, [sp, #12]
   1ebe8:	mov	r1, r0
   1ebec:	ldr	r0, [sp, #16]
   1ebf0:	ldr	r2, [sp, #20]
   1ebf4:	cmp	r3, #0
   1ebf8:	beq	1ec28 <main@@Base+0xb9a4>
   1ebfc:	subs	r3, r0, #129	; 0x81
   1ec00:	sbcs	r2, r2, #0
   1ec04:	bcc	1ec4c <main@@Base+0xb9c8>
   1ec08:	mov	r0, r5
   1ec0c:	mov	r2, r7
   1ec10:	mov	r3, #8
   1ec14:	b	1ec40 <main@@Base+0xb9bc>
   1ec18:	mov	r1, r7
   1ec1c:	b	1ec5c <main@@Base+0xb9d8>
   1ec20:	mov	r1, r8
   1ec24:	b	1ec5c <main@@Base+0xb9d8>
   1ec28:	subs	r3, r0, #128	; 0x80
   1ec2c:	sbcs	r2, r2, #0
   1ec30:	bcc	1ec54 <main@@Base+0xb9d0>
   1ec34:	mov	r0, r5
   1ec38:	mov	r2, r7
   1ec3c:	mov	r3, #7
   1ec40:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1ec44:	mov	r1, r0
   1ec48:	b	1ec5c <main@@Base+0xb9d8>
   1ec4c:	rsb	r4, r0, #0
   1ec50:	b	1ec58 <main@@Base+0xb9d4>
   1ec54:	mov	r4, r0
   1ec58:	strb	r4, [sp, #10]
   1ec5c:	cmp	r8, r1
   1ec60:	bne	1ec98 <main@@Base+0xba14>
   1ec64:	movw	r3, #16852	; 0x41d4
   1ec68:	add	r0, sp, #10
   1ec6c:	mov	r1, r8
   1ec70:	mov	r2, r7
   1ec74:	movt	r3, #4
   1ec78:	str	r0, [sp]
   1ec7c:	mov	r0, r5
   1ec80:	bl	1e1b4 <main@@Base+0xaf30>
   1ec84:	mov	r1, r0
   1ec88:	cmp	r0, r8
   1ec8c:	cmpne	r1, r7
   1ec90:	beq	1ee90 <main@@Base+0xbc0c>
   1ec94:	ldrb	r4, [sp, #10]
   1ec98:	strb	r4, [r9, #2]
   1ec9c:	b	1ed54 <main@@Base+0xbad0>
   1eca0:	bne	1ecb0 <main@@Base+0xba2c>
   1eca4:	ldrb	r0, [r6, #2]!
   1eca8:	cmp	r0, #32
   1ecac:	bhi	1ecc0 <main@@Base+0xba3c>
   1ecb0:	mov	r0, r5
   1ecb4:	mov	r2, r7
   1ecb8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1ecbc:	mov	r6, r0
   1ecc0:	cmp	r4, r6
   1ecc4:	beq	1ed40 <main@@Base+0xbabc>
   1ecc8:	mov	r4, #0
   1eccc:	cmp	r6, r7
   1ecd0:	str	r4, [sp, #20]
   1ecd4:	str	r4, [sp, #16]
   1ecd8:	strh	r4, [sp, #10]
   1ecdc:	str	r4, [sp, #12]
   1ece0:	beq	1ee08 <main@@Base+0xbb84>
   1ece4:	add	r0, sp, #16
   1ece8:	mov	r1, r6
   1ecec:	mov	r2, r7
   1ecf0:	add	r3, sp, #12
   1ecf4:	str	r0, [sp]
   1ecf8:	mov	r0, r5
   1ecfc:	bl	2edac <flatcc_json_parser_integer@@Base>
   1ed00:	cmp	r0, r6
   1ed04:	beq	1ee10 <main@@Base+0xbb8c>
   1ed08:	ldr	r3, [sp, #12]
   1ed0c:	mov	r1, r0
   1ed10:	ldr	r0, [sp, #16]
   1ed14:	ldr	r2, [sp, #20]
   1ed18:	cmp	r3, #0
   1ed1c:	beq	1ee18 <main@@Base+0xbb94>
   1ed20:	movw	r3, #32769	; 0x8001
   1ed24:	subs	r3, r0, r3
   1ed28:	sbcs	r2, r2, #0
   1ed2c:	bcc	1ee3c <main@@Base+0xbbb8>
   1ed30:	mov	r0, r5
   1ed34:	mov	r2, r7
   1ed38:	mov	r3, #8
   1ed3c:	b	1ee30 <main@@Base+0xbbac>
   1ed40:	mov	r0, r5
   1ed44:	mov	r1, r4
   1ed48:	mov	r2, r7
   1ed4c:	bl	2d5e0 <flatcc_json_parser_unmatched_symbol@@Base>
   1ed50:	mov	r1, r0
   1ed54:	sub	r0, r7, r1
   1ed58:	cmp	r0, #2
   1ed5c:	blt	1ed88 <main@@Base+0xbb04>
   1ed60:	ldrb	r0, [r1]
   1ed64:	cmp	r0, #32
   1ed68:	bls	1ed74 <main@@Base+0xbaf0>
   1ed6c:	mov	r2, r1
   1ed70:	b	1ed98 <main@@Base+0xbb14>
   1ed74:	bne	1ed88 <main@@Base+0xbb04>
   1ed78:	mov	r2, r1
   1ed7c:	ldrb	r0, [r2, #1]!
   1ed80:	cmp	r0, #32
   1ed84:	bhi	1ed98 <main@@Base+0xbb14>
   1ed88:	mov	r0, r5
   1ed8c:	mov	r2, r7
   1ed90:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1ed94:	mov	r2, r0
   1ed98:	cmp	r2, r7
   1ed9c:	beq	1eea0 <main@@Base+0xbc1c>
   1eda0:	ldrb	r0, [r2]
   1eda4:	cmp	r0, #44	; 0x2c
   1eda8:	bne	1eea8 <main@@Base+0xbc24>
   1edac:	add	r1, r2, #1
   1edb0:	sub	r0, r7, r1
   1edb4:	cmp	r0, #2
   1edb8:	blt	1ede0 <main@@Base+0xbb5c>
   1edbc:	ldrb	r0, [r1]
   1edc0:	cmp	r0, #32
   1edc4:	bls	1edd0 <main@@Base+0xbb4c>
   1edc8:	mov	r2, r1
   1edcc:	b	1edf0 <main@@Base+0xbb6c>
   1edd0:	bne	1ede0 <main@@Base+0xbb5c>
   1edd4:	ldrb	r0, [r2, #2]!
   1edd8:	cmp	r0, #32
   1eddc:	bhi	1edf0 <main@@Base+0xbb6c>
   1ede0:	mov	r0, r5
   1ede4:	mov	r2, r7
   1ede8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1edec:	mov	r2, r0
   1edf0:	cmp	r2, r7
   1edf4:	beq	1eed4 <main@@Base+0xbc50>
   1edf8:	ldrb	r0, [r2]
   1edfc:	cmp	r0, #125	; 0x7d
   1ee00:	bne	1e92c <main@@Base+0xb6a8>
   1ee04:	b	1eeb0 <main@@Base+0xbc2c>
   1ee08:	mov	r1, r7
   1ee0c:	b	1ee4c <main@@Base+0xbbc8>
   1ee10:	mov	r1, r6
   1ee14:	b	1ee4c <main@@Base+0xbbc8>
   1ee18:	subs	r3, r0, #32768	; 0x8000
   1ee1c:	sbcs	r2, r2, #0
   1ee20:	bcc	1ee44 <main@@Base+0xbbc0>
   1ee24:	mov	r0, r5
   1ee28:	mov	r2, r7
   1ee2c:	mov	r3, #7
   1ee30:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1ee34:	mov	r1, r0
   1ee38:	b	1ee4c <main@@Base+0xbbc8>
   1ee3c:	rsb	r4, r0, #0
   1ee40:	b	1ee48 <main@@Base+0xbbc4>
   1ee44:	mov	r4, r0
   1ee48:	strh	r4, [sp, #10]
   1ee4c:	cmp	r6, r1
   1ee50:	bne	1ee88 <main@@Base+0xbc04>
   1ee54:	movw	r3, #16864	; 0x41e0
   1ee58:	add	r0, sp, #10
   1ee5c:	mov	r1, r6
   1ee60:	mov	r2, r7
   1ee64:	movt	r3, #4
   1ee68:	str	r0, [sp]
   1ee6c:	mov	r0, r5
   1ee70:	bl	1e61c <main@@Base+0xb398>
   1ee74:	mov	r1, r0
   1ee78:	cmp	r0, r6
   1ee7c:	cmpne	r1, r7
   1ee80:	beq	1ee90 <main@@Base+0xbc0c>
   1ee84:	ldrh	r4, [sp, #10]
   1ee88:	strh	r4, [r9]
   1ee8c:	b	1ed54 <main@@Base+0xbad0>
   1ee90:	mov	r0, r5
   1ee94:	mov	r2, r7
   1ee98:	mov	r3, #33	; 0x21
   1ee9c:	b	1ef18 <main@@Base+0xbc94>
   1eea0:	mov	r1, r7
   1eea4:	b	1ef48 <main@@Base+0xbcc4>
   1eea8:	cmp	r0, #125	; 0x7d
   1eeac:	bne	1ef08 <main@@Base+0xbc84>
   1eeb0:	add	r3, r2, #1
   1eeb4:	sub	r0, r7, r3
   1eeb8:	cmp	r0, #2
   1eebc:	blt	1ef34 <main@@Base+0xbcb0>
   1eec0:	ldrb	r0, [r3]
   1eec4:	cmp	r0, #32
   1eec8:	bls	1ef20 <main@@Base+0xbc9c>
   1eecc:	mov	r1, r3
   1eed0:	b	1ef48 <main@@Base+0xbcc4>
   1eed4:	mov	r0, r5
   1eed8:	mov	r1, r7
   1eedc:	b	1ef10 <main@@Base+0xbc8c>
   1eee0:	bne	1eef0 <main@@Base+0xbc6c>
   1eee4:	ldrb	r0, [r1, #2]!
   1eee8:	cmp	r0, #32
   1eeec:	bhi	1ef48 <main@@Base+0xbcc4>
   1eef0:	mov	r1, r2
   1eef4:	mov	r0, r5
   1eef8:	mov	r2, r7
   1eefc:	sub	sp, fp, #28
   1ef00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ef04:	b	2cf64 <flatcc_json_parser_space_ext@@Base>
   1ef08:	mov	r0, r5
   1ef0c:	mov	r1, r2
   1ef10:	mov	r2, r7
   1ef14:	mov	r3, #10
   1ef18:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1ef1c:	b	1ef44 <main@@Base+0xbcc0>
   1ef20:	bne	1ef34 <main@@Base+0xbcb0>
   1ef24:	ldrb	r0, [r2, #2]!
   1ef28:	mov	r1, r2
   1ef2c:	cmp	r0, #32
   1ef30:	bhi	1ef48 <main@@Base+0xbcc4>
   1ef34:	mov	r0, r5
   1ef38:	mov	r1, r3
   1ef3c:	mov	r2, r7
   1ef40:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1ef44:	mov	r1, r0
   1ef48:	mov	r0, r1
   1ef4c:	sub	sp, fp, #28
   1ef50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ef54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ef58:	add	fp, sp, #28
   1ef5c:	sub	sp, sp, #68	; 0x44
   1ef60:	ldr	r9, [fp, #8]
   1ef64:	mov	r5, r0
   1ef68:	mov	r0, #0
   1ef6c:	mov	r8, r2
   1ef70:	mov	r4, r1
   1ef74:	cmp	r3, #4
   1ef78:	str	r0, [r9]
   1ef7c:	bhi	1efd8 <main@@Base+0xbd54>
   1ef80:	add	r0, pc, #0
   1ef84:	ldr	pc, [r0, r3, lsl #2]
   1ef88:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1ef8c:	andeq	pc, r1, r0
   1ef90:	andeq	pc, r1, r8, lsl r0	; <UNPREDICTABLE>
   1ef94:	andeq	pc, r1, ip, rrx
   1ef98:	andeq	pc, r1, r0, asr #1
   1ef9c:	sub	r0, r8, r4
   1efa0:	cmp	r0, #4
   1efa4:	blt	1efc4 <main@@Base+0xbd40>
   1efa8:	movw	r1, #12306	; 0x3012
   1efac:	mov	r0, r4
   1efb0:	mov	r2, #4
   1efb4:	movt	r1, #3
   1efb8:	bl	12b34 <bcmp@plt>
   1efbc:	cmp	r0, #0
   1efc0:	beq	1f178 <main@@Base+0xbef4>
   1efc4:	mov	r0, r5
   1efc8:	mov	r1, r4
   1efcc:	mov	r2, r8
   1efd0:	mov	r3, #26
   1efd4:	b	1eff4 <main@@Base+0xbd70>
   1efd8:	ldrb	r0, [r5, #8]
   1efdc:	tst	r0, #1
   1efe0:	bne	1f160 <main@@Base+0xbedc>
   1efe4:	mov	r0, r5
   1efe8:	mov	r1, r4
   1efec:	mov	r2, r8
   1eff0:	mov	r3, #15
   1eff4:	sub	sp, fp, #28
   1eff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1effc:	b	2cebc <flatcc_json_parser_set_error@@Base>
   1f000:	mov	r0, r5
   1f004:	mov	r1, r4
   1f008:	mov	r2, r8
   1f00c:	mov	r3, r9
   1f010:	bl	13300 <main@@Base+0x7c>
   1f014:	b	21ed0 <main@@Base+0xec4c>
   1f018:	mov	r0, #0
   1f01c:	mov	r1, #4
   1f020:	str	r0, [r9]
   1f024:	ldr	r0, [r5]
   1f028:	bl	2a328 <flatcc_builder_start_table@@Base>
   1f02c:	cmp	r0, #0
   1f030:	bne	21ebc <main@@Base+0xec38>
   1f034:	cmp	r4, r8
   1f038:	beq	1f138 <main@@Base+0xbeb4>
   1f03c:	ldrb	r0, [r4]
   1f040:	cmp	r0, #123	; 0x7b
   1f044:	bne	1f138 <main@@Base+0xbeb4>
   1f048:	add	r1, r4, #1
   1f04c:	sub	r0, r8, r1
   1f050:	cmp	r0, #2
   1f054:	blt	1f1e4 <main@@Base+0xbf60>
   1f058:	ldrb	r0, [r1]
   1f05c:	cmp	r0, #32
   1f060:	bls	1f1d4 <main@@Base+0xbf50>
   1f064:	mov	r4, r1
   1f068:	b	1f1f4 <main@@Base+0xbf70>
   1f06c:	mov	r0, #0
   1f070:	mov	r1, #0
   1f074:	str	r0, [r9]
   1f078:	ldr	r0, [r5]
   1f07c:	bl	2a328 <flatcc_builder_start_table@@Base>
   1f080:	cmp	r0, #0
   1f084:	bne	21ebc <main@@Base+0xec38>
   1f088:	cmp	r4, r8
   1f08c:	beq	1f138 <main@@Base+0xbeb4>
   1f090:	ldrb	r0, [r4]
   1f094:	cmp	r0, #123	; 0x7b
   1f098:	bne	1f138 <main@@Base+0xbeb4>
   1f09c:	add	r1, r4, #1
   1f0a0:	sub	r0, r8, r1
   1f0a4:	cmp	r0, #2
   1f0a8:	blt	1fd4c <main@@Base+0xcac8>
   1f0ac:	ldrb	r0, [r1]
   1f0b0:	cmp	r0, #32
   1f0b4:	bls	1fd3c <main@@Base+0xcab8>
   1f0b8:	mov	r4, r1
   1f0bc:	b	1fd5c <main@@Base+0xcad8>
   1f0c0:	mov	r0, #0
   1f0c4:	mov	r1, #4
   1f0c8:	str	r0, [r9]
   1f0cc:	ldr	r0, [r5]
   1f0d0:	bl	2a328 <flatcc_builder_start_table@@Base>
   1f0d4:	cmp	r0, #0
   1f0d8:	bne	21ebc <main@@Base+0xec38>
   1f0dc:	sub	r0, fp, #36	; 0x24
   1f0e0:	mov	r1, r4
   1f0e4:	mov	r2, r8
   1f0e8:	mov	r3, #1
   1f0ec:	str	r0, [sp]
   1f0f0:	mov	r0, r5
   1f0f4:	bl	2f4ac <flatcc_json_parser_prepare_unions@@Base>
   1f0f8:	cmp	r0, r8
   1f0fc:	beq	21ebc <main@@Base+0xec38>
   1f100:	cmp	r4, r8
   1f104:	beq	1f180 <main@@Base+0xbefc>
   1f108:	ldrb	r0, [r4]
   1f10c:	cmp	r0, #123	; 0x7b
   1f110:	bne	1f180 <main@@Base+0xbefc>
   1f114:	add	r1, r4, #1
   1f118:	sub	r0, r8, r1
   1f11c:	cmp	r0, #2
   1f120:	blt	1ff10 <main@@Base+0xcc8c>
   1f124:	ldrb	r0, [r1]
   1f128:	cmp	r0, #32
   1f12c:	bls	1ff00 <main@@Base+0xcc7c>
   1f130:	mov	r4, r1
   1f134:	b	1ff20 <main@@Base+0xcc9c>
   1f138:	mov	r0, r5
   1f13c:	mov	r1, r4
   1f140:	mov	r2, r8
   1f144:	mov	r3, #21
   1f148:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1f14c:	mov	r4, r0
   1f150:	ldr	r0, [r5, #24]
   1f154:	cmp	r0, #0
   1f158:	bne	21ebc <main@@Base+0xec38>
   1f15c:	b	1f1bc <main@@Base+0xbf38>
   1f160:	mov	r0, r5
   1f164:	mov	r1, r4
   1f168:	mov	r2, r8
   1f16c:	sub	sp, fp, #28
   1f170:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f174:	b	2d828 <flatcc_json_parser_generic_json@@Base>
   1f178:	add	r4, r4, #4
   1f17c:	b	21f04 <main@@Base+0xec80>
   1f180:	mov	r0, r5
   1f184:	mov	r1, r4
   1f188:	mov	r2, r8
   1f18c:	mov	r3, #21
   1f190:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1f194:	mov	r4, r0
   1f198:	ldr	r0, [r5, #24]
   1f19c:	cmp	r0, #0
   1f1a0:	bne	21ebc <main@@Base+0xec38>
   1f1a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f1a8:	mov	r0, r5
   1f1ac:	mov	r1, r4
   1f1b0:	mov	r2, r8
   1f1b4:	bl	2f530 <flatcc_json_parser_finalize_unions@@Base>
   1f1b8:	mov	r4, r0
   1f1bc:	ldr	r0, [r5]
   1f1c0:	bl	2ac88 <flatcc_builder_end_table@@Base>
   1f1c4:	cmp	r0, #0
   1f1c8:	str	r0, [r9]
   1f1cc:	bne	21ed4 <main@@Base+0xec50>
   1f1d0:	b	21ebc <main@@Base+0xec38>
   1f1d4:	bne	1f1e4 <main@@Base+0xbf60>
   1f1d8:	ldrb	r0, [r4, #2]!
   1f1dc:	cmp	r0, #32
   1f1e0:	bhi	1f1f4 <main@@Base+0xbf70>
   1f1e4:	mov	r0, r5
   1f1e8:	mov	r2, r8
   1f1ec:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1f1f0:	mov	r4, r0
   1f1f4:	cmp	r4, r8
   1f1f8:	mov	r2, r8
   1f1fc:	beq	1f210 <main@@Base+0xbf8c>
   1f200:	ldrb	r0, [r4]
   1f204:	cmp	r0, #125	; 0x7d
   1f208:	beq	1fd74 <main@@Base+0xcaf0>
   1f20c:	mov	r2, r4
   1f210:	str	r5, [sp, #44]	; 0x2c
   1f214:	str	r9, [sp, #40]	; 0x28
   1f218:	cmp	r2, r8
   1f21c:	mov	sl, r8
   1f220:	beq	1f26c <main@@Base+0xbfe8>
   1f224:	ldrb	r0, [r2]
   1f228:	cmp	r0, #46	; 0x2e
   1f22c:	beq	1f244 <main@@Base+0xbfc0>
   1f230:	cmp	r0, #34	; 0x22
   1f234:	bne	1f260 <main@@Base+0xbfdc>
   1f238:	mov	r0, #0
   1f23c:	add	sl, r2, #1
   1f240:	b	1f268 <main@@Base+0xbfe4>
   1f244:	mov	r1, r2
   1f248:	mov	r0, r5
   1f24c:	mov	r2, r8
   1f250:	mov	r3, #5
   1f254:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1f258:	mov	sl, r0
   1f25c:	b	1f26c <main@@Base+0xbfe8>
   1f260:	mov	r0, #1
   1f264:	mov	sl, r2
   1f268:	str	r0, [r5, #12]
   1f26c:	sub	lr, r8, sl
   1f270:	mov	r0, #8
   1f274:	cmp	lr, #8
   1f278:	movcc	r0, lr
   1f27c:	sub	r2, r0, #1
   1f280:	cmp	r2, #7
   1f284:	bhi	1fbb0 <main@@Base+0xc92c>
   1f288:	add	r4, pc, #24
   1f28c:	mov	r0, #0
   1f290:	mov	r1, #0
   1f294:	mov	r3, #0
   1f298:	mov	r7, #0
   1f29c:	mov	r6, #0
   1f2a0:	mov	r5, #0
   1f2a4:	ldr	pc, [r4, r2, lsl #2]
   1f2a8:	strdeq	pc, [r1], -r8
   1f2ac:	strdeq	pc, [r1], -r0
   1f2b0:	andeq	pc, r1, r8, ror #5
   1f2b4:	andeq	pc, r1, r0, ror #5
   1f2b8:	ldrdeq	pc, [r1], -r0
   1f2bc:	andeq	pc, r1, r8, asr #5
   1f2c0:	andeq	pc, r1, r8, asr #5
   1f2c4:	andeq	pc, r1, r8, asr #5
   1f2c8:	ldrb	r1, [sl, #5]
   1f2cc:	lsl	r1, r1, #16
   1f2d0:	ldrb	r2, [sl, #4]
   1f2d4:	mov	r3, r0
   1f2d8:	orr	r1, r1, r2, lsl #24
   1f2dc:	mov	r0, r1
   1f2e0:	ldrb	r1, [sl, #3]
   1f2e4:	orr	r7, r1, r3
   1f2e8:	ldrb	r1, [sl, #2]
   1f2ec:	orr	r6, r7, r1, lsl #8
   1f2f0:	ldrb	r1, [sl, #1]
   1f2f4:	orr	r5, r6, r1, lsl #16
   1f2f8:	ldrb	r1, [sl]
   1f2fc:	movw	r3, #29234	; 0x7232
   1f300:	lsr	r2, r0, #16
   1f304:	movt	r3, #27759	; 0x6c6f
   1f308:	orr	r9, r5, r1, lsl #24
   1f30c:	movw	r1, #25455	; 0x636f
   1f310:	orr	r2, r2, r9, lsl #16
   1f314:	eor	r1, r1, r9, lsr #16
   1f318:	eor	r2, r2, r3
   1f31c:	orrs	r1, r2, r1
   1f320:	bne	1f36c <main@@Base+0xc0e8>
   1f324:	cmp	lr, #7
   1f328:	mov	r7, sl
   1f32c:	blt	1f558 <main@@Base+0xc2d4>
   1f330:	ldr	r2, [sp, #44]	; 0x2c
   1f334:	mov	r1, sl
   1f338:	ldrb	r0, [r1, #6]!
   1f33c:	ldr	r2, [r2, #12]
   1f340:	cmp	r2, #0
   1f344:	beq	1f3d0 <main@@Base+0xc14c>
   1f348:	cmp	r0, #33	; 0x21
   1f34c:	bcc	1f35c <main@@Base+0xc0d8>
   1f350:	cmp	r0, #58	; 0x3a
   1f354:	mov	r7, sl
   1f358:	bne	1f558 <main@@Base+0xc2d4>
   1f35c:	ldr	r0, [sp, #44]	; 0x2c
   1f360:	mov	r2, #0
   1f364:	str	r2, [r0, #12]
   1f368:	b	1f3e0 <main@@Base+0xc15c>
   1f36c:	movw	r1, #27759	; 0x6c6f
   1f370:	and	r0, r0, #-16777216	; 0xff000000
   1f374:	movt	r1, #25455	; 0x636f
   1f378:	eor	r0, r0, #1912602624	; 0x72000000
   1f37c:	eor	r1, r9, r1
   1f380:	orrs	r0, r0, r1
   1f384:	bne	1f740 <main@@Base+0xc4bc>
   1f388:	cmp	lr, #6
   1f38c:	mov	r7, sl
   1f390:	blt	1f6b8 <main@@Base+0xc434>
   1f394:	ldr	r2, [sp, #44]	; 0x2c
   1f398:	mov	r1, sl
   1f39c:	ldrb	r0, [r1, #5]!
   1f3a0:	ldr	r2, [r2, #12]
   1f3a4:	cmp	r2, #0
   1f3a8:	beq	1f400 <main@@Base+0xc17c>
   1f3ac:	cmp	r0, #33	; 0x21
   1f3b0:	bcc	1f3c0 <main@@Base+0xc13c>
   1f3b4:	cmp	r0, #58	; 0x3a
   1f3b8:	mov	r7, sl
   1f3bc:	bne	1f6b8 <main@@Base+0xc434>
   1f3c0:	ldr	r0, [sp, #44]	; 0x2c
   1f3c4:	mov	r2, #0
   1f3c8:	str	r2, [r0, #12]
   1f3cc:	b	1f410 <main@@Base+0xc18c>
   1f3d0:	cmp	r0, #34	; 0x22
   1f3d4:	mov	r7, sl
   1f3d8:	bne	1f558 <main@@Base+0xc2d4>
   1f3dc:	add	r1, sl, #7
   1f3e0:	sub	r0, r8, r1
   1f3e4:	cmp	r0, #2
   1f3e8:	blt	1f444 <main@@Base+0xc1c0>
   1f3ec:	ldrb	r0, [r1]
   1f3f0:	cmp	r0, #32
   1f3f4:	bls	1f430 <main@@Base+0xc1ac>
   1f3f8:	mov	r7, r1
   1f3fc:	b	1f45c <main@@Base+0xc1d8>
   1f400:	cmp	r0, #34	; 0x22
   1f404:	mov	r7, sl
   1f408:	bne	1f6b8 <main@@Base+0xc434>
   1f40c:	add	r1, sl, #6
   1f410:	sub	r0, r8, r1
   1f414:	cmp	r0, #2
   1f418:	blt	1f4c4 <main@@Base+0xc240>
   1f41c:	ldrb	r0, [r1]
   1f420:	cmp	r0, #32
   1f424:	bls	1f4b0 <main@@Base+0xc22c>
   1f428:	mov	r7, r1
   1f42c:	b	1f4dc <main@@Base+0xc258>
   1f430:	bne	1f444 <main@@Base+0xc1c0>
   1f434:	mov	r7, r1
   1f438:	ldrb	r0, [r7, #1]!
   1f43c:	cmp	r0, #32
   1f440:	bhi	1f45c <main@@Base+0xc1d8>
   1f444:	ldr	r0, [sp, #44]	; 0x2c
   1f448:	mov	r2, r8
   1f44c:	mov	r4, lr
   1f450:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1f454:	mov	lr, r4
   1f458:	mov	r7, r0
   1f45c:	cmp	r7, r8
   1f460:	beq	1f494 <main@@Base+0xc210>
   1f464:	ldrb	r0, [r7]
   1f468:	cmp	r0, #58	; 0x3a
   1f46c:	bne	1f494 <main@@Base+0xc210>
   1f470:	add	r1, r7, #1
   1f474:	sub	r0, r8, r1
   1f478:	cmp	r0, #2
   1f47c:	blt	1f540 <main@@Base+0xc2bc>
   1f480:	ldrb	r0, [r1]
   1f484:	cmp	r0, #32
   1f488:	bls	1f530 <main@@Base+0xc2ac>
   1f48c:	mov	r7, r1
   1f490:	b	1f558 <main@@Base+0xc2d4>
   1f494:	ldr	r0, [sp, #44]	; 0x2c
   1f498:	mov	r1, r7
   1f49c:	mov	r2, r8
   1f4a0:	mov	r3, #4
   1f4a4:	mov	r4, lr
   1f4a8:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1f4ac:	b	1f550 <main@@Base+0xc2cc>
   1f4b0:	bne	1f4c4 <main@@Base+0xc240>
   1f4b4:	mov	r7, r1
   1f4b8:	ldrb	r0, [r7, #1]!
   1f4bc:	cmp	r0, #32
   1f4c0:	bhi	1f4dc <main@@Base+0xc258>
   1f4c4:	ldr	r0, [sp, #44]	; 0x2c
   1f4c8:	mov	r2, r8
   1f4cc:	mov	r4, lr
   1f4d0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1f4d4:	mov	lr, r4
   1f4d8:	mov	r7, r0
   1f4dc:	cmp	r7, r8
   1f4e0:	beq	1f514 <main@@Base+0xc290>
   1f4e4:	ldrb	r0, [r7]
   1f4e8:	cmp	r0, #58	; 0x3a
   1f4ec:	bne	1f514 <main@@Base+0xc290>
   1f4f0:	add	r1, r7, #1
   1f4f4:	sub	r0, r8, r1
   1f4f8:	cmp	r0, #2
   1f4fc:	blt	1f6a0 <main@@Base+0xc41c>
   1f500:	ldrb	r0, [r1]
   1f504:	cmp	r0, #32
   1f508:	bls	1f690 <main@@Base+0xc40c>
   1f50c:	mov	r7, r1
   1f510:	b	1f6b8 <main@@Base+0xc434>
   1f514:	ldr	r0, [sp, #44]	; 0x2c
   1f518:	mov	r1, r7
   1f51c:	mov	r2, r8
   1f520:	mov	r3, #4
   1f524:	mov	r4, lr
   1f528:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1f52c:	b	1f6b0 <main@@Base+0xc42c>
   1f530:	bne	1f540 <main@@Base+0xc2bc>
   1f534:	ldrb	r0, [r7, #2]!
   1f538:	cmp	r0, #32
   1f53c:	bhi	1f558 <main@@Base+0xc2d4>
   1f540:	ldr	r0, [sp, #44]	; 0x2c
   1f544:	mov	r2, r8
   1f548:	mov	r4, lr
   1f54c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1f550:	mov	lr, r4
   1f554:	mov	r7, r0
   1f558:	cmp	sl, r7
   1f55c:	beq	1f740 <main@@Base+0xc4bc>
   1f560:	mov	r6, #0
   1f564:	cmp	r7, r8
   1f568:	str	r6, [sp, #52]	; 0x34
   1f56c:	str	r6, [sp, #48]	; 0x30
   1f570:	strb	r6, [fp, #-36]	; 0xffffffdc
   1f574:	str	r6, [fp, #-32]	; 0xffffffe0
   1f578:	beq	1f5e0 <main@@Base+0xc35c>
   1f57c:	add	r0, sp, #48	; 0x30
   1f580:	mov	r1, r7
   1f584:	mov	r2, r8
   1f588:	sub	r3, fp, #32
   1f58c:	str	r0, [sp]
   1f590:	ldr	r5, [sp, #44]	; 0x2c
   1f594:	mov	r0, r5
   1f598:	bl	2edac <flatcc_json_parser_integer@@Base>
   1f59c:	ldr	r9, [sp, #40]	; 0x28
   1f5a0:	cmp	r0, r7
   1f5a4:	beq	1f5f0 <main@@Base+0xc36c>
   1f5a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f5ac:	mov	r4, r0
   1f5b0:	ldr	r0, [sp, #48]	; 0x30
   1f5b4:	ldr	r1, [sp, #52]	; 0x34
   1f5b8:	cmp	r2, #0
   1f5bc:	beq	1f5f8 <main@@Base+0xc374>
   1f5c0:	subs	r2, r0, #129	; 0x81
   1f5c4:	sbcs	r1, r1, #0
   1f5c8:	bcc	1f620 <main@@Base+0xc39c>
   1f5cc:	mov	r0, r5
   1f5d0:	mov	r1, r4
   1f5d4:	mov	r2, r8
   1f5d8:	mov	r3, #8
   1f5dc:	b	1f614 <main@@Base+0xc390>
   1f5e0:	ldr	r5, [sp, #44]	; 0x2c
   1f5e4:	ldr	r9, [sp, #40]	; 0x28
   1f5e8:	mov	r4, r8
   1f5ec:	b	1f630 <main@@Base+0xc3ac>
   1f5f0:	mov	r4, r7
   1f5f4:	b	1f630 <main@@Base+0xc3ac>
   1f5f8:	subs	r2, r0, #128	; 0x80
   1f5fc:	sbcs	r1, r1, #0
   1f600:	bcc	1f628 <main@@Base+0xc3a4>
   1f604:	mov	r0, r5
   1f608:	mov	r1, r4
   1f60c:	mov	r2, r8
   1f610:	mov	r3, #7
   1f614:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1f618:	mov	r4, r0
   1f61c:	b	1f630 <main@@Base+0xc3ac>
   1f620:	rsb	r6, r0, #0
   1f624:	b	1f62c <main@@Base+0xc3a8>
   1f628:	mov	r6, r0
   1f62c:	strb	r6, [fp, #-36]	; 0xffffffdc
   1f630:	cmp	r7, r4
   1f634:	bne	1f66c <main@@Base+0xc3e8>
   1f638:	movw	r3, #16876	; 0x41ec
   1f63c:	sub	r0, fp, #36	; 0x24
   1f640:	mov	r1, r7
   1f644:	mov	r2, r8
   1f648:	movt	r3, #4
   1f64c:	str	r0, [sp]
   1f650:	mov	r0, r5
   1f654:	bl	1e1b4 <main@@Base+0xaf30>
   1f658:	mov	r4, r0
   1f65c:	cmp	r0, r7
   1f660:	cmpne	r4, r8
   1f664:	beq	21ebc <main@@Base+0xec38>
   1f668:	ldrb	r6, [fp, #-36]	; 0xffffffdc
   1f66c:	uxtb	r0, r6
   1f670:	cmp	r0, #2
   1f674:	bne	1f684 <main@@Base+0xc400>
   1f678:	ldrb	r0, [r5, #8]
   1f67c:	tst	r0, #2
   1f680:	beq	1fc78 <main@@Base+0xc9f4>
   1f684:	ldr	r0, [r5]
   1f688:	mov	r1, #1
   1f68c:	b	1fc60 <main@@Base+0xc9dc>
   1f690:	bne	1f6a0 <main@@Base+0xc41c>
   1f694:	ldrb	r0, [r7, #2]!
   1f698:	cmp	r0, #32
   1f69c:	bhi	1f6b8 <main@@Base+0xc434>
   1f6a0:	ldr	r0, [sp, #44]	; 0x2c
   1f6a4:	mov	r2, r8
   1f6a8:	mov	r4, lr
   1f6ac:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1f6b0:	mov	lr, r4
   1f6b4:	mov	r7, r0
   1f6b8:	cmp	sl, r7
   1f6bc:	beq	1f740 <main@@Base+0xc4bc>
   1f6c0:	mov	r6, #0
   1f6c4:	cmp	r7, r8
   1f6c8:	str	r6, [sp, #52]	; 0x34
   1f6cc:	str	r6, [sp, #48]	; 0x30
   1f6d0:	strb	r6, [fp, #-36]	; 0xffffffdc
   1f6d4:	str	r6, [fp, #-32]	; 0xffffffe0
   1f6d8:	beq	1f7f8 <main@@Base+0xc574>
   1f6dc:	add	r0, sp, #48	; 0x30
   1f6e0:	mov	r1, r7
   1f6e4:	mov	r2, r8
   1f6e8:	sub	r3, fp, #32
   1f6ec:	str	r0, [sp]
   1f6f0:	ldr	r5, [sp, #44]	; 0x2c
   1f6f4:	mov	r0, r5
   1f6f8:	bl	2edac <flatcc_json_parser_integer@@Base>
   1f6fc:	ldr	r9, [sp, #40]	; 0x28
   1f700:	cmp	r0, r7
   1f704:	beq	1f838 <main@@Base+0xc5b4>
   1f708:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f70c:	mov	r4, r0
   1f710:	ldr	r0, [sp, #48]	; 0x30
   1f714:	ldr	r1, [sp, #52]	; 0x34
   1f718:	cmp	r2, #0
   1f71c:	beq	1f870 <main@@Base+0xc5ec>
   1f720:	subs	r2, r0, #129	; 0x81
   1f724:	sbcs	r1, r1, #0
   1f728:	bcc	1f898 <main@@Base+0xc614>
   1f72c:	mov	r0, r5
   1f730:	mov	r1, r4
   1f734:	mov	r2, r8
   1f738:	mov	r3, #8
   1f73c:	b	1f88c <main@@Base+0xc608>
   1f740:	movw	r1, #12800	; 0x3200
   1f744:	bic	r0, r9, #255	; 0xff
   1f748:	movt	r1, #30051	; 0x7563
   1f74c:	teq	r0, r1
   1f750:	bne	1f79c <main@@Base+0xc518>
   1f754:	ldr	r5, [sp, #44]	; 0x2c
   1f758:	ldr	r9, [sp, #40]	; 0x28
   1f75c:	cmp	lr, #4
   1f760:	mov	r7, sl
   1f764:	blt	1fa10 <main@@Base+0xc78c>
   1f768:	mov	r1, sl
   1f76c:	ldr	r2, [r5, #12]
   1f770:	ldrb	r0, [r1, #3]!
   1f774:	cmp	r2, #0
   1f778:	beq	1f808 <main@@Base+0xc584>
   1f77c:	cmp	r0, #33	; 0x21
   1f780:	bcc	1f790 <main@@Base+0xc50c>
   1f784:	cmp	r0, #58	; 0x3a
   1f788:	mov	r7, sl
   1f78c:	bne	1fa10 <main@@Base+0xc78c>
   1f790:	mov	r0, #0
   1f794:	str	r0, [r5, #12]
   1f798:	b	1f818 <main@@Base+0xc594>
   1f79c:	movw	r0, #0
   1f7a0:	bfc	r9, #0, #16
   1f7a4:	ldr	r5, [sp, #44]	; 0x2c
   1f7a8:	movt	r0, #30051	; 0x7563
   1f7ac:	teq	r9, r0
   1f7b0:	ldr	r9, [sp, #40]	; 0x28
   1f7b4:	bne	1fbb0 <main@@Base+0xc92c>
   1f7b8:	cmp	lr, #3
   1f7bc:	mov	r7, sl
   1f7c0:	blt	1fb44 <main@@Base+0xc8c0>
   1f7c4:	mov	r1, sl
   1f7c8:	ldr	r2, [r5, #12]
   1f7cc:	ldrb	r0, [r1, #2]!
   1f7d0:	cmp	r2, #0
   1f7d4:	beq	1f840 <main@@Base+0xc5bc>
   1f7d8:	cmp	r0, #33	; 0x21
   1f7dc:	bcc	1f7ec <main@@Base+0xc568>
   1f7e0:	cmp	r0, #58	; 0x3a
   1f7e4:	mov	r7, sl
   1f7e8:	bne	1fb44 <main@@Base+0xc8c0>
   1f7ec:	mov	r0, #0
   1f7f0:	str	r0, [r5, #12]
   1f7f4:	b	1f850 <main@@Base+0xc5cc>
   1f7f8:	ldr	r5, [sp, #44]	; 0x2c
   1f7fc:	ldr	r9, [sp, #40]	; 0x28
   1f800:	mov	r4, r8
   1f804:	b	1f91c <main@@Base+0xc698>
   1f808:	cmp	r0, #34	; 0x22
   1f80c:	mov	r7, sl
   1f810:	bne	1fa10 <main@@Base+0xc78c>
   1f814:	add	r1, sl, #4
   1f818:	sub	r0, r8, r1
   1f81c:	cmp	r0, #2
   1f820:	blt	1f8b4 <main@@Base+0xc630>
   1f824:	ldrb	r0, [r1]
   1f828:	cmp	r0, #32
   1f82c:	bls	1f8a0 <main@@Base+0xc61c>
   1f830:	mov	r7, r1
   1f834:	b	1f8c4 <main@@Base+0xc640>
   1f838:	mov	r4, r7
   1f83c:	b	1f91c <main@@Base+0xc698>
   1f840:	cmp	r0, #34	; 0x22
   1f844:	mov	r7, sl
   1f848:	bne	1fb44 <main@@Base+0xc8c0>
   1f84c:	add	r1, sl, #3
   1f850:	sub	r0, r8, r1
   1f854:	cmp	r0, #2
   1f858:	blt	1f990 <main@@Base+0xc70c>
   1f85c:	ldrb	r0, [r1]
   1f860:	cmp	r0, #32
   1f864:	bls	1f97c <main@@Base+0xc6f8>
   1f868:	mov	r7, r1
   1f86c:	b	1f9a0 <main@@Base+0xc71c>
   1f870:	subs	r2, r0, #128	; 0x80
   1f874:	sbcs	r1, r1, #0
   1f878:	bcc	1f914 <main@@Base+0xc690>
   1f87c:	mov	r0, r5
   1f880:	mov	r1, r4
   1f884:	mov	r2, r8
   1f888:	mov	r3, #7
   1f88c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1f890:	mov	r4, r0
   1f894:	b	1f91c <main@@Base+0xc698>
   1f898:	rsb	r6, r0, #0
   1f89c:	b	1f918 <main@@Base+0xc694>
   1f8a0:	bne	1f8b4 <main@@Base+0xc630>
   1f8a4:	mov	r7, r1
   1f8a8:	ldrb	r0, [r7, #1]!
   1f8ac:	cmp	r0, #32
   1f8b0:	bhi	1f8c4 <main@@Base+0xc640>
   1f8b4:	mov	r0, r5
   1f8b8:	mov	r2, r8
   1f8bc:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1f8c0:	mov	r7, r0
   1f8c4:	cmp	r7, r8
   1f8c8:	beq	1f8fc <main@@Base+0xc678>
   1f8cc:	ldrb	r0, [r7]
   1f8d0:	cmp	r0, #58	; 0x3a
   1f8d4:	bne	1f8fc <main@@Base+0xc678>
   1f8d8:	add	r1, r7, #1
   1f8dc:	sub	r0, r8, r1
   1f8e0:	cmp	r0, #2
   1f8e4:	blt	1fa00 <main@@Base+0xc77c>
   1f8e8:	ldrb	r0, [r1]
   1f8ec:	cmp	r0, #32
   1f8f0:	bls	1f9f0 <main@@Base+0xc76c>
   1f8f4:	mov	r7, r1
   1f8f8:	b	1fa10 <main@@Base+0xc78c>
   1f8fc:	mov	r0, r5
   1f900:	mov	r1, r7
   1f904:	mov	r2, r8
   1f908:	mov	r3, #4
   1f90c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1f910:	b	1fa0c <main@@Base+0xc788>
   1f914:	mov	r6, r0
   1f918:	strb	r6, [fp, #-36]	; 0xffffffdc
   1f91c:	cmp	r7, r4
   1f920:	bne	1f958 <main@@Base+0xc6d4>
   1f924:	movw	r3, #16892	; 0x41fc
   1f928:	sub	r0, fp, #36	; 0x24
   1f92c:	mov	r1, r7
   1f930:	mov	r2, r8
   1f934:	movt	r3, #4
   1f938:	str	r0, [sp]
   1f93c:	mov	r0, r5
   1f940:	bl	1e1b4 <main@@Base+0xaf30>
   1f944:	mov	r4, r0
   1f948:	cmp	r0, r7
   1f94c:	cmpne	r4, r8
   1f950:	beq	21ebc <main@@Base+0xec38>
   1f954:	ldrb	r6, [fp, #-36]	; 0xffffffdc
   1f958:	uxtb	r0, r6
   1f95c:	cmp	r0, #2
   1f960:	bne	1f970 <main@@Base+0xc6ec>
   1f964:	ldrb	r0, [r5, #8]
   1f968:	tst	r0, #2
   1f96c:	beq	1fc78 <main@@Base+0xc9f4>
   1f970:	ldr	r0, [r5]
   1f974:	mov	r1, #0
   1f978:	b	1fc60 <main@@Base+0xc9dc>
   1f97c:	bne	1f990 <main@@Base+0xc70c>
   1f980:	mov	r7, r1
   1f984:	ldrb	r0, [r7, #1]!
   1f988:	cmp	r0, #32
   1f98c:	bhi	1f9a0 <main@@Base+0xc71c>
   1f990:	mov	r0, r5
   1f994:	mov	r2, r8
   1f998:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1f99c:	mov	r7, r0
   1f9a0:	cmp	r7, r8
   1f9a4:	beq	1f9d8 <main@@Base+0xc754>
   1f9a8:	ldrb	r0, [r7]
   1f9ac:	cmp	r0, #58	; 0x3a
   1f9b0:	bne	1f9d8 <main@@Base+0xc754>
   1f9b4:	add	r1, r7, #1
   1f9b8:	sub	r0, r8, r1
   1f9bc:	cmp	r0, #2
   1f9c0:	blt	1fb34 <main@@Base+0xc8b0>
   1f9c4:	ldrb	r0, [r1]
   1f9c8:	cmp	r0, #32
   1f9cc:	bls	1fb24 <main@@Base+0xc8a0>
   1f9d0:	mov	r7, r1
   1f9d4:	b	1fb44 <main@@Base+0xc8c0>
   1f9d8:	mov	r0, r5
   1f9dc:	mov	r1, r7
   1f9e0:	mov	r2, r8
   1f9e4:	mov	r3, #4
   1f9e8:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1f9ec:	b	1fb40 <main@@Base+0xc8bc>
   1f9f0:	bne	1fa00 <main@@Base+0xc77c>
   1f9f4:	ldrb	r0, [r7, #2]!
   1f9f8:	cmp	r0, #32
   1f9fc:	bhi	1fa10 <main@@Base+0xc78c>
   1fa00:	mov	r0, r5
   1fa04:	mov	r2, r8
   1fa08:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1fa0c:	mov	r7, r0
   1fa10:	cmp	sl, r7
   1fa14:	beq	1fbb0 <main@@Base+0xc92c>
   1fa18:	mov	r6, #0
   1fa1c:	cmp	r7, r8
   1fa20:	str	r6, [sp, #52]	; 0x34
   1fa24:	str	r6, [sp, #48]	; 0x30
   1fa28:	strb	r6, [fp, #-36]	; 0xffffffdc
   1fa2c:	str	r6, [fp, #-32]	; 0xffffffe0
   1fa30:	beq	1fa7c <main@@Base+0xc7f8>
   1fa34:	add	r0, sp, #48	; 0x30
   1fa38:	mov	r1, r7
   1fa3c:	mov	r2, r8
   1fa40:	sub	r3, fp, #32
   1fa44:	str	r0, [sp]
   1fa48:	mov	r0, r5
   1fa4c:	bl	2edac <flatcc_json_parser_integer@@Base>
   1fa50:	cmp	r0, r7
   1fa54:	beq	1fa84 <main@@Base+0xc800>
   1fa58:	mov	r4, r0
   1fa5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fa60:	cmp	r0, #0
   1fa64:	beq	1fa8c <main@@Base+0xc808>
   1fa68:	mov	r0, r5
   1fa6c:	mov	r1, r4
   1fa70:	mov	r2, r8
   1fa74:	mov	r3, #8
   1fa78:	b	1fab0 <main@@Base+0xc82c>
   1fa7c:	mov	r4, r8
   1fa80:	b	1fab8 <main@@Base+0xc834>
   1fa84:	mov	r4, r7
   1fa88:	b	1fab8 <main@@Base+0xc834>
   1fa8c:	ldr	r0, [sp, #48]	; 0x30
   1fa90:	ldr	r1, [sp, #52]	; 0x34
   1fa94:	subs	r2, r0, #256	; 0x100
   1fa98:	sbcs	r1, r1, #0
   1fa9c:	bcc	1fb18 <main@@Base+0xc894>
   1faa0:	mov	r0, r5
   1faa4:	mov	r1, r4
   1faa8:	mov	r2, r8
   1faac:	mov	r3, #7
   1fab0:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1fab4:	mov	r4, r0
   1fab8:	cmp	r7, r4
   1fabc:	bne	1faf4 <main@@Base+0xc870>
   1fac0:	movw	r3, #16908	; 0x420c
   1fac4:	sub	r0, fp, #36	; 0x24
   1fac8:	mov	r1, r7
   1facc:	mov	r2, r8
   1fad0:	movt	r3, #4
   1fad4:	str	r0, [sp]
   1fad8:	mov	r0, r5
   1fadc:	bl	1e3f0 <main@@Base+0xb16c>
   1fae0:	mov	r4, r0
   1fae4:	cmp	r0, r7
   1fae8:	cmpne	r4, r8
   1faec:	beq	21ebc <main@@Base+0xec38>
   1faf0:	ldrb	r6, [fp, #-36]	; 0xffffffdc
   1faf4:	uxtb	r0, r6
   1faf8:	cmp	r0, #2
   1fafc:	bne	1fb0c <main@@Base+0xc888>
   1fb00:	ldrb	r0, [r5, #8]
   1fb04:	tst	r0, #2
   1fb08:	beq	1fc78 <main@@Base+0xc9f4>
   1fb0c:	ldr	r0, [r5]
   1fb10:	mov	r1, #3
   1fb14:	b	1fc60 <main@@Base+0xc9dc>
   1fb18:	mov	r6, r0
   1fb1c:	strb	r0, [fp, #-36]	; 0xffffffdc
   1fb20:	b	1fab8 <main@@Base+0xc834>
   1fb24:	bne	1fb34 <main@@Base+0xc8b0>
   1fb28:	ldrb	r0, [r7, #2]!
   1fb2c:	cmp	r0, #32
   1fb30:	bhi	1fb44 <main@@Base+0xc8c0>
   1fb34:	mov	r0, r5
   1fb38:	mov	r2, r8
   1fb3c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1fb40:	mov	r7, r0
   1fb44:	cmp	sl, r7
   1fb48:	beq	1fbb0 <main@@Base+0xc92c>
   1fb4c:	mov	r6, #0
   1fb50:	cmp	r7, r8
   1fb54:	str	r6, [sp, #52]	; 0x34
   1fb58:	str	r6, [sp, #48]	; 0x30
   1fb5c:	strb	r6, [fp, #-36]	; 0xffffffdc
   1fb60:	str	r6, [fp, #-32]	; 0xffffffe0
   1fb64:	beq	1fbc8 <main@@Base+0xc944>
   1fb68:	add	r0, sp, #48	; 0x30
   1fb6c:	mov	r1, r7
   1fb70:	mov	r2, r8
   1fb74:	sub	r3, fp, #32
   1fb78:	str	r0, [sp]
   1fb7c:	mov	r0, r5
   1fb80:	bl	2edac <flatcc_json_parser_integer@@Base>
   1fb84:	cmp	r0, r7
   1fb88:	beq	1fbd0 <main@@Base+0xc94c>
   1fb8c:	mov	r4, r0
   1fb90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fb94:	cmp	r0, #0
   1fb98:	beq	1fbd8 <main@@Base+0xc954>
   1fb9c:	mov	r0, r5
   1fba0:	mov	r1, r4
   1fba4:	mov	r2, r8
   1fba8:	mov	r3, #8
   1fbac:	b	1fbfc <main@@Base+0xc978>
   1fbb0:	mov	r0, r5
   1fbb4:	mov	r1, sl
   1fbb8:	mov	r2, r8
   1fbbc:	bl	2d5e0 <flatcc_json_parser_unmatched_symbol@@Base>
   1fbc0:	mov	r4, r0
   1fbc4:	b	1fc78 <main@@Base+0xc9f4>
   1fbc8:	mov	r4, r8
   1fbcc:	b	1fc04 <main@@Base+0xc980>
   1fbd0:	mov	r4, r7
   1fbd4:	b	1fc04 <main@@Base+0xc980>
   1fbd8:	ldr	r0, [sp, #48]	; 0x30
   1fbdc:	ldr	r1, [sp, #52]	; 0x34
   1fbe0:	subs	r2, r0, #256	; 0x100
   1fbe4:	sbcs	r1, r1, #0
   1fbe8:	bcc	1fd30 <main@@Base+0xcaac>
   1fbec:	mov	r0, r5
   1fbf0:	mov	r1, r4
   1fbf4:	mov	r2, r8
   1fbf8:	mov	r3, #7
   1fbfc:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1fc00:	mov	r4, r0
   1fc04:	cmp	r7, r4
   1fc08:	bne	1fc40 <main@@Base+0xc9bc>
   1fc0c:	movw	r3, #16920	; 0x4218
   1fc10:	sub	r0, fp, #36	; 0x24
   1fc14:	mov	r1, r7
   1fc18:	mov	r2, r8
   1fc1c:	movt	r3, #4
   1fc20:	str	r0, [sp]
   1fc24:	mov	r0, r5
   1fc28:	bl	1e3f0 <main@@Base+0xb16c>
   1fc2c:	mov	r4, r0
   1fc30:	cmp	r0, r7
   1fc34:	cmpne	r4, r8
   1fc38:	beq	21ebc <main@@Base+0xec38>
   1fc3c:	ldrb	r6, [fp, #-36]	; 0xffffffdc
   1fc40:	uxtb	r0, r6
   1fc44:	cmp	r0, #2
   1fc48:	bne	1fc58 <main@@Base+0xc9d4>
   1fc4c:	ldrb	r0, [r5, #8]
   1fc50:	tst	r0, #2
   1fc54:	beq	1fc78 <main@@Base+0xc9f4>
   1fc58:	ldr	r0, [r5]
   1fc5c:	mov	r1, #2
   1fc60:	mov	r2, #1
   1fc64:	mov	r3, #1
   1fc68:	bl	2b574 <flatcc_builder_table_add@@Base>
   1fc6c:	cmp	r0, #0
   1fc70:	beq	21ebc <main@@Base+0xec38>
   1fc74:	strb	r6, [r0]
   1fc78:	sub	r0, r8, r4
   1fc7c:	cmp	r0, #2
   1fc80:	blt	1fcac <main@@Base+0xca28>
   1fc84:	ldrb	r0, [r4]
   1fc88:	cmp	r0, #32
   1fc8c:	bls	1fc98 <main@@Base+0xca14>
   1fc90:	mov	r2, r4
   1fc94:	b	1fcc0 <main@@Base+0xca3c>
   1fc98:	bne	1fcac <main@@Base+0xca28>
   1fc9c:	mov	r2, r4
   1fca0:	ldrb	r0, [r2, #1]!
   1fca4:	cmp	r0, #32
   1fca8:	bhi	1fcc0 <main@@Base+0xca3c>
   1fcac:	mov	r0, r5
   1fcb0:	mov	r1, r4
   1fcb4:	mov	r2, r8
   1fcb8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1fcbc:	mov	r2, r0
   1fcc0:	cmp	r2, r8
   1fcc4:	beq	1feb8 <main@@Base+0xcc34>
   1fcc8:	ldrb	r0, [r2]
   1fccc:	cmp	r0, #44	; 0x2c
   1fcd0:	bne	21e08 <main@@Base+0xeb84>
   1fcd4:	add	r1, r2, #1
   1fcd8:	sub	r0, r8, r1
   1fcdc:	cmp	r0, #2
   1fce0:	blt	1fd08 <main@@Base+0xca84>
   1fce4:	ldrb	r0, [r1]
   1fce8:	cmp	r0, #32
   1fcec:	bls	1fcf8 <main@@Base+0xca74>
   1fcf0:	mov	r2, r1
   1fcf4:	b	1fd18 <main@@Base+0xca94>
   1fcf8:	bne	1fd08 <main@@Base+0xca84>
   1fcfc:	ldrb	r0, [r2, #2]!
   1fd00:	cmp	r0, #32
   1fd04:	bhi	1fd18 <main@@Base+0xca94>
   1fd08:	mov	r0, r5
   1fd0c:	mov	r2, r8
   1fd10:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1fd14:	mov	r2, r0
   1fd18:	cmp	r2, r8
   1fd1c:	beq	1fec0 <main@@Base+0xcc3c>
   1fd20:	ldrb	r0, [r2]
   1fd24:	cmp	r0, #125	; 0x7d
   1fd28:	bne	1f218 <main@@Base+0xbf94>
   1fd2c:	b	21e10 <main@@Base+0xeb8c>
   1fd30:	mov	r6, r0
   1fd34:	strb	r0, [fp, #-36]	; 0xffffffdc
   1fd38:	b	1fc04 <main@@Base+0xc980>
   1fd3c:	bne	1fd4c <main@@Base+0xcac8>
   1fd40:	ldrb	r0, [r4, #2]!
   1fd44:	cmp	r0, #32
   1fd48:	bhi	1fd5c <main@@Base+0xcad8>
   1fd4c:	mov	r0, r5
   1fd50:	mov	r2, r8
   1fd54:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1fd58:	mov	r4, r0
   1fd5c:	cmp	r4, r8
   1fd60:	mov	r3, r8
   1fd64:	beq	1fda0 <main@@Base+0xcb1c>
   1fd68:	ldrb	r0, [r4]
   1fd6c:	cmp	r0, #125	; 0x7d
   1fd70:	bne	1fd9c <main@@Base+0xcb18>
   1fd74:	add	r1, r4, #1
   1fd78:	sub	r0, r8, r1
   1fd7c:	cmp	r0, #2
   1fd80:	blt	21e94 <main@@Base+0xec10>
   1fd84:	ldrb	r0, [r1]
   1fd88:	cmp	r0, #32
   1fd8c:	bhi	21e2c <main@@Base+0xeba8>
   1fd90:	bne	21e94 <main@@Base+0xec10>
   1fd94:	ldrb	r0, [r4, #2]!
   1fd98:	b	21e8c <main@@Base+0xec08>
   1fd9c:	mov	r3, r4
   1fda0:	mov	r4, #0
   1fda4:	mov	r7, #1
   1fda8:	cmp	r3, r8
   1fdac:	mov	r1, r8
   1fdb0:	beq	1fdf0 <main@@Base+0xcb6c>
   1fdb4:	ldrb	r0, [r3]
   1fdb8:	cmp	r0, #46	; 0x2e
   1fdbc:	beq	1fdd8 <main@@Base+0xcb54>
   1fdc0:	cmp	r0, #34	; 0x22
   1fdc4:	movne	r1, r3
   1fdc8:	strne	r7, [r5, #12]
   1fdcc:	streq	r4, [r5, #12]
   1fdd0:	addeq	r1, r3, #1
   1fdd4:	b	1fdf0 <main@@Base+0xcb6c>
   1fdd8:	mov	r1, r3
   1fddc:	mov	r0, r5
   1fde0:	mov	r2, r8
   1fde4:	mov	r3, #5
   1fde8:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1fdec:	mov	r1, r0
   1fdf0:	mov	r0, r5
   1fdf4:	mov	r2, r8
   1fdf8:	bl	2d5e0 <flatcc_json_parser_unmatched_symbol@@Base>
   1fdfc:	mov	r2, r0
   1fe00:	sub	r0, r8, r0
   1fe04:	cmp	r0, #2
   1fe08:	blt	1fe34 <main@@Base+0xcbb0>
   1fe0c:	ldrb	r0, [r2]
   1fe10:	cmp	r0, #32
   1fe14:	bls	1fe20 <main@@Base+0xcb9c>
   1fe18:	mov	r3, r2
   1fe1c:	b	1fe48 <main@@Base+0xcbc4>
   1fe20:	bne	1fe34 <main@@Base+0xcbb0>
   1fe24:	mov	r3, r2
   1fe28:	ldrb	r0, [r3, #1]!
   1fe2c:	cmp	r0, #32
   1fe30:	bhi	1fe48 <main@@Base+0xcbc4>
   1fe34:	mov	r1, r2
   1fe38:	mov	r0, r5
   1fe3c:	mov	r2, r8
   1fe40:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1fe44:	mov	r3, r0
   1fe48:	cmp	r3, r8
   1fe4c:	beq	1feb8 <main@@Base+0xcc34>
   1fe50:	ldrb	r0, [r3]
   1fe54:	cmp	r0, #44	; 0x2c
   1fe58:	bne	1fecc <main@@Base+0xcc48>
   1fe5c:	add	r1, r3, #1
   1fe60:	sub	r0, r8, r1
   1fe64:	cmp	r0, #2
   1fe68:	blt	1fe90 <main@@Base+0xcc0c>
   1fe6c:	ldrb	r0, [r1]
   1fe70:	cmp	r0, #32
   1fe74:	bls	1fe80 <main@@Base+0xcbfc>
   1fe78:	mov	r3, r1
   1fe7c:	b	1fea0 <main@@Base+0xcc1c>
   1fe80:	bne	1fe90 <main@@Base+0xcc0c>
   1fe84:	ldrb	r0, [r3, #2]!
   1fe88:	cmp	r0, #32
   1fe8c:	bhi	1fea0 <main@@Base+0xcc1c>
   1fe90:	mov	r0, r5
   1fe94:	mov	r2, r8
   1fe98:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1fe9c:	mov	r3, r0
   1fea0:	cmp	r3, r8
   1fea4:	beq	1fec0 <main@@Base+0xcc3c>
   1fea8:	ldrb	r0, [r3]
   1feac:	cmp	r0, #125	; 0x7d
   1feb0:	bne	1fda8 <main@@Base+0xcb24>
   1feb4:	b	1fed4 <main@@Base+0xcc50>
   1feb8:	mov	r4, r8
   1febc:	b	1f150 <main@@Base+0xbecc>
   1fec0:	mov	r0, r5
   1fec4:	mov	r1, r8
   1fec8:	b	21e50 <main@@Base+0xebcc>
   1fecc:	cmp	r0, #125	; 0x7d
   1fed0:	bne	21dfc <main@@Base+0xeb78>
   1fed4:	add	r1, r3, #1
   1fed8:	sub	r0, r8, r1
   1fedc:	cmp	r0, #2
   1fee0:	blt	21e94 <main@@Base+0xec10>
   1fee4:	ldrb	r0, [r1]
   1fee8:	cmp	r0, #32
   1feec:	bhi	21e2c <main@@Base+0xeba8>
   1fef0:	bne	21e94 <main@@Base+0xec10>
   1fef4:	ldrb	r0, [r3, #2]!
   1fef8:	mov	r4, r3
   1fefc:	b	21e8c <main@@Base+0xec08>
   1ff00:	bne	1ff10 <main@@Base+0xcc8c>
   1ff04:	ldrb	r0, [r4, #2]!
   1ff08:	cmp	r0, #32
   1ff0c:	bhi	1ff20 <main@@Base+0xcc9c>
   1ff10:	mov	r0, r5
   1ff14:	mov	r2, r8
   1ff18:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   1ff1c:	mov	r4, r0
   1ff20:	cmp	r4, r8
   1ff24:	mov	r2, r8
   1ff28:	beq	1ff64 <main@@Base+0xcce0>
   1ff2c:	ldrb	r0, [r4]
   1ff30:	cmp	r0, #125	; 0x7d
   1ff34:	bne	1ff60 <main@@Base+0xccdc>
   1ff38:	add	r1, r4, #1
   1ff3c:	sub	r0, r8, r1
   1ff40:	cmp	r0, #2
   1ff44:	blt	21e70 <main@@Base+0xebec>
   1ff48:	ldrb	r0, [r1]
   1ff4c:	cmp	r0, #32
   1ff50:	bhi	21de8 <main@@Base+0xeb64>
   1ff54:	bne	21e70 <main@@Base+0xebec>
   1ff58:	ldrb	r0, [r4, #2]!
   1ff5c:	b	21e68 <main@@Base+0xebe4>
   1ff60:	mov	r2, r4
   1ff64:	add	r0, r5, #12
   1ff68:	str	r0, [sp, #32]
   1ff6c:	movw	r0, #24436	; 0x5f74
   1ff70:	movt	r0, #29299	; 0x7273
   1ff74:	add	r0, r0, #65536	; 0x10000
   1ff78:	add	r0, r0, #16777216	; 0x1000000
   1ff7c:	str	r0, [sp, #28]
   1ff80:	str	r8, [sp, #36]	; 0x24
   1ff84:	str	r5, [sp, #44]	; 0x2c
   1ff88:	str	r9, [sp, #40]	; 0x28
   1ff8c:	cmp	r2, r8
   1ff90:	mov	sl, r8
   1ff94:	beq	1ffe8 <main@@Base+0xcd64>
   1ff98:	ldrb	r0, [r2]
   1ff9c:	cmp	r0, #46	; 0x2e
   1ffa0:	beq	1ffbc <main@@Base+0xcd38>
   1ffa4:	cmp	r0, #34	; 0x22
   1ffa8:	bne	1ffd8 <main@@Base+0xcd54>
   1ffac:	ldr	r0, [sp, #32]
   1ffb0:	mov	r1, #0
   1ffb4:	add	sl, r2, #1
   1ffb8:	b	1ffe4 <main@@Base+0xcd60>
   1ffbc:	mov	r1, r2
   1ffc0:	mov	r0, r5
   1ffc4:	mov	r2, r8
   1ffc8:	mov	r3, #5
   1ffcc:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   1ffd0:	mov	sl, r0
   1ffd4:	b	1ffe8 <main@@Base+0xcd64>
   1ffd8:	ldr	r0, [sp, #32]
   1ffdc:	mov	r1, #1
   1ffe0:	mov	sl, r2
   1ffe4:	str	r1, [r0]
   1ffe8:	sub	lr, r8, sl
   1ffec:	mov	r0, #8
   1fff0:	cmp	lr, #8
   1fff4:	movcc	r0, lr
   1fff8:	sub	r2, r0, #1
   1fffc:	cmp	r2, #7
   20000:	bhi	20740 <main@@Base+0xd4bc>
   20004:	add	r0, pc, #32
   20008:	mov	r9, #0
   2000c:	mov	ip, #0
   20010:	mov	r5, #0
   20014:	mov	r1, #0
   20018:	mov	r3, #0
   2001c:	mov	r6, #0
   20020:	mov	r4, #0
   20024:	mov	r7, #0
   20028:	ldr	pc, [r0, r2, lsl #2]
   2002c:	muleq	r2, r0, r0
   20030:	andeq	r0, r2, r8, lsl #1
   20034:	andeq	r0, r2, r0, lsl #1
   20038:	andeq	r0, r2, r8, ror r0
   2003c:	andeq	r0, r2, ip, rrx
   20040:	andeq	r0, r2, r0, rrx
   20044:	andeq	r0, r2, r0, asr r0
   20048:	andeq	r0, r2, ip, asr #32
   2004c:	ldrb	ip, [sl, #7]
   20050:	ldrb	r0, [sl, #6]
   20054:	mov	r5, r9
   20058:	orr	r0, ip, r0, lsl #8
   2005c:	mov	r9, r0
   20060:	ldrb	r0, [sl, #5]
   20064:	mov	r1, r5
   20068:	orr	r9, r9, r0, lsl #16
   2006c:	ldrb	r0, [sl, #4]
   20070:	mov	r3, r1
   20074:	orr	r9, r9, r0, lsl #24
   20078:	ldrb	r0, [sl, #3]
   2007c:	orr	r6, r0, r3
   20080:	ldrb	r0, [sl, #2]
   20084:	orr	r4, r6, r0, lsl #8
   20088:	ldrb	r0, [sl, #1]
   2008c:	orr	r7, r4, r0, lsl #16
   20090:	movw	r2, #30976	; 0x7900
   20094:	movt	r2, #24942	; 0x616e
   20098:	add	r0, r2, #95	; 0x5f
   2009c:	eor	r1, r9, r0
   200a0:	ldrb	r0, [sl]
   200a4:	orr	r4, r7, r0, lsl #24
   200a8:	movw	r0, #28281	; 0x6e79
   200ac:	movt	r0, #28001	; 0x6d61
   200b0:	eor	r0, r4, r0
   200b4:	orrs	r1, r1, r0
   200b8:	bne	20180 <main@@Base+0xcefc>
   200bc:	ldr	r8, [sp, #36]	; 0x24
   200c0:	add	r4, sl, #8
   200c4:	ldr	r5, [sp, #44]	; 0x2c
   200c8:	ldr	r9, [sp, #40]	; 0x28
   200cc:	mov	r1, #8
   200d0:	sub	r0, r8, r4
   200d4:	cmp	r0, #8
   200d8:	movcc	r1, r0
   200dc:	sub	r2, r1, #1
   200e0:	cmp	r2, #7
   200e4:	bhi	2062c <main@@Base+0xd3a8>
   200e8:	add	r3, pc, #4
   200ec:	mov	r1, #0
   200f0:	ldr	pc, [r3, r2, lsl #2]
   200f4:	andeq	r0, r2, r8, lsr #2
   200f8:	andeq	r0, r2, r0, lsr #2
   200fc:	andeq	r0, r2, r8, lsl r1
   20100:	andeq	r0, r2, r4, lsl r1
   20104:	andeq	r0, r2, r4, lsl r1
   20108:	andeq	r0, r2, r4, lsl r1
   2010c:	andeq	r0, r2, r4, lsl r1
   20110:	andeq	r0, r2, r4, lsl r1
   20114:	ldrb	r1, [sl, #11]
   20118:	ldrb	r2, [sl, #10]
   2011c:	orr	r1, r1, r2, lsl #8
   20120:	ldrb	r2, [sl, #9]
   20124:	orr	r1, r1, r2, lsl #16
   20128:	ldrb	r2, [r4]
   2012c:	orr	r1, r1, r2, lsl #24
   20130:	movw	r2, #28773	; 0x7065
   20134:	movt	r2, #29817	; 0x7479
   20138:	teq	r1, r2
   2013c:	bne	2062c <main@@Base+0xd3a8>
   20140:	cmp	r0, #5
   20144:	blt	2062c <main@@Base+0xd3a8>
   20148:	ldr	r2, [sp, #32]
   2014c:	mov	r1, sl
   20150:	ldrb	r0, [r1, #12]!
   20154:	ldr	r2, [r2]
   20158:	cmp	r2, #0
   2015c:	beq	20210 <main@@Base+0xcf8c>
   20160:	cmp	r0, #33	; 0x21
   20164:	bcc	20170 <main@@Base+0xceec>
   20168:	cmp	r0, #58	; 0x3a
   2016c:	bne	2062c <main@@Base+0xd3a8>
   20170:	ldr	r0, [sp, #32]
   20174:	mov	r2, #0
   20178:	str	r2, [r0]
   2017c:	b	2021c <main@@Base+0xcf98>
   20180:	ldr	r8, [sp, #36]	; 0x24
   20184:	bic	r1, r9, #255	; 0xff
   20188:	eor	r1, r1, r2
   2018c:	orrs	r0, r1, r0
   20190:	bne	20390 <main@@Base+0xd10c>
   20194:	cmp	lr, #8
   20198:	mov	r1, sl
   2019c:	blt	20350 <main@@Base+0xd0cc>
   201a0:	ldr	r1, [sp, #32]
   201a4:	mov	r2, sl
   201a8:	ldrb	r0, [r2, #7]!
   201ac:	ldr	r1, [r1]
   201b0:	cmp	r1, #0
   201b4:	beq	201dc <main@@Base+0xcf58>
   201b8:	cmp	r0, #33	; 0x21
   201bc:	bcc	201cc <main@@Base+0xcf48>
   201c0:	cmp	r0, #58	; 0x3a
   201c4:	mov	r1, sl
   201c8:	bne	20350 <main@@Base+0xd0cc>
   201cc:	ldr	r0, [sp, #32]
   201d0:	mov	r1, #0
   201d4:	str	r1, [r0]
   201d8:	b	201ec <main@@Base+0xcf68>
   201dc:	cmp	r0, #34	; 0x22
   201e0:	mov	r1, sl
   201e4:	bne	20350 <main@@Base+0xd0cc>
   201e8:	add	r2, sl, #8
   201ec:	sub	r0, r8, r2
   201f0:	mov	r5, lr
   201f4:	cmp	r0, #2
   201f8:	blt	20250 <main@@Base+0xcfcc>
   201fc:	ldrb	r0, [r2]
   20200:	cmp	r0, #32
   20204:	bls	2023c <main@@Base+0xcfb8>
   20208:	mov	r1, r2
   2020c:	b	20268 <main@@Base+0xcfe4>
   20210:	cmp	r0, #34	; 0x22
   20214:	bne	2062c <main@@Base+0xd3a8>
   20218:	add	r1, sl, #13
   2021c:	sub	r0, r8, r1
   20220:	cmp	r0, #2
   20224:	blt	202c8 <main@@Base+0xd044>
   20228:	ldrb	r0, [r1]
   2022c:	cmp	r0, #32
   20230:	bls	202b4 <main@@Base+0xd030>
   20234:	mov	r2, r1
   20238:	b	202d8 <main@@Base+0xd054>
   2023c:	bne	20250 <main@@Base+0xcfcc>
   20240:	mov	r1, r2
   20244:	ldrb	r0, [r1, #1]!
   20248:	cmp	r0, #32
   2024c:	bhi	20268 <main@@Base+0xcfe4>
   20250:	ldr	r0, [sp, #44]	; 0x2c
   20254:	mov	r1, r2
   20258:	mov	r2, r8
   2025c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   20260:	mov	lr, r5
   20264:	mov	r1, r0
   20268:	cmp	r1, r8
   2026c:	beq	202a0 <main@@Base+0xd01c>
   20270:	ldrb	r0, [r1]
   20274:	cmp	r0, #58	; 0x3a
   20278:	bne	202a0 <main@@Base+0xd01c>
   2027c:	add	r2, r1, #1
   20280:	sub	r0, r8, r2
   20284:	cmp	r0, #2
   20288:	blt	20338 <main@@Base+0xd0b4>
   2028c:	ldrb	r0, [r2]
   20290:	cmp	r0, #32
   20294:	bls	20328 <main@@Base+0xd0a4>
   20298:	mov	r1, r2
   2029c:	b	20350 <main@@Base+0xd0cc>
   202a0:	ldr	r0, [sp, #44]	; 0x2c
   202a4:	mov	r2, r8
   202a8:	mov	r3, #4
   202ac:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   202b0:	b	20348 <main@@Base+0xd0c4>
   202b4:	bne	202c8 <main@@Base+0xd044>
   202b8:	mov	r2, r1
   202bc:	ldrb	r0, [r2, #1]!
   202c0:	cmp	r0, #32
   202c4:	bhi	202d8 <main@@Base+0xd054>
   202c8:	mov	r0, r5
   202cc:	mov	r2, r8
   202d0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   202d4:	mov	r2, r0
   202d8:	cmp	r2, r8
   202dc:	beq	20310 <main@@Base+0xd08c>
   202e0:	ldrb	r0, [r2]
   202e4:	cmp	r0, #58	; 0x3a
   202e8:	bne	20310 <main@@Base+0xd08c>
   202ec:	add	r1, r2, #1
   202f0:	sub	r0, r8, r1
   202f4:	cmp	r0, #2
   202f8:	blt	205c8 <main@@Base+0xd344>
   202fc:	ldrb	r0, [r1]
   20300:	cmp	r0, #32
   20304:	bls	205b8 <main@@Base+0xd334>
   20308:	mov	r2, r1
   2030c:	b	205d8 <main@@Base+0xd354>
   20310:	mov	r1, r2
   20314:	mov	r0, r5
   20318:	mov	r2, r8
   2031c:	mov	r3, #4
   20320:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   20324:	b	205d4 <main@@Base+0xd350>
   20328:	bne	20338 <main@@Base+0xd0b4>
   2032c:	ldrb	r0, [r1, #2]!
   20330:	cmp	r0, #32
   20334:	bhi	20350 <main@@Base+0xd0cc>
   20338:	ldr	r0, [sp, #44]	; 0x2c
   2033c:	mov	r1, r2
   20340:	mov	r2, r8
   20344:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   20348:	mov	lr, r5
   2034c:	mov	r1, r0
   20350:	cmp	sl, r1
   20354:	beq	20390 <main@@Base+0xd10c>
   20358:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2035c:	mov	r2, #3
   20360:	mov	r3, #0
   20364:	str	r2, [sp]
   20368:	mov	r2, r8
   2036c:	str	r0, [sp, #4]
   20370:	movw	r0, #61268	; 0xef54
   20374:	movt	r0, #1
   20378:	str	r0, [sp, #8]
   2037c:	ldr	r5, [sp, #44]	; 0x2c
   20380:	mov	r0, r5
   20384:	bl	2fb8c <flatcc_json_parser_union_vector@@Base>
   20388:	ldr	r9, [sp, #40]	; 0x28
   2038c:	b	20750 <main@@Base+0xd4cc>
   20390:	lsr	r1, r9, #16
   20394:	movw	r2, #27000	; 0x6978
   20398:	movw	r0, #28786	; 0x7072
   2039c:	orr	r1, r1, r4, lsl #16
   203a0:	movt	r2, #25958	; 0x6566
   203a4:	eor	r0, r0, r4, lsr #16
   203a8:	eor	r1, r1, r2
   203ac:	orrs	r0, r1, r0
   203b0:	bne	20404 <main@@Base+0xd180>
   203b4:	ldr	r5, [sp, #44]	; 0x2c
   203b8:	ldr	r9, [sp, #40]	; 0x28
   203bc:	cmp	lr, #7
   203c0:	mov	r1, sl
   203c4:	blt	2065c <main@@Base+0xd3d8>
   203c8:	ldr	r1, [sp, #32]
   203cc:	mov	r2, sl
   203d0:	ldrb	r0, [r2, #6]!
   203d4:	ldr	r1, [r1]
   203d8:	cmp	r1, #0
   203dc:	beq	20470 <main@@Base+0xd1ec>
   203e0:	cmp	r0, #33	; 0x21
   203e4:	bcc	203f4 <main@@Base+0xd170>
   203e8:	cmp	r0, #58	; 0x3a
   203ec:	mov	r1, sl
   203f0:	bne	2065c <main@@Base+0xd3d8>
   203f4:	ldr	r0, [sp, #32]
   203f8:	mov	r1, #0
   203fc:	str	r1, [r0]
   20400:	b	20480 <main@@Base+0xd1fc>
   20404:	movw	r0, #30313	; 0x7669
   20408:	and	r1, r9, #-16777216	; 0xff000000
   2040c:	ldr	r5, [sp, #44]	; 0x2c
   20410:	ldr	r9, [sp, #40]	; 0x28
   20414:	movt	r0, #28015	; 0x6d6f
   20418:	eor	r1, r1, #1694498816	; 0x65000000
   2041c:	eor	r0, r4, r0
   20420:	orrs	r0, r1, r0
   20424:	bne	20740 <main@@Base+0xd4bc>
   20428:	cmp	lr, #6
   2042c:	mov	r4, sl
   20430:	blt	206c0 <main@@Base+0xd43c>
   20434:	ldr	r2, [sp, #32]
   20438:	mov	r1, sl
   2043c:	ldrb	r0, [r1, #5]!
   20440:	ldr	r2, [r2]
   20444:	cmp	r2, #0
   20448:	beq	204a0 <main@@Base+0xd21c>
   2044c:	cmp	r0, #33	; 0x21
   20450:	bcc	20460 <main@@Base+0xd1dc>
   20454:	cmp	r0, #58	; 0x3a
   20458:	mov	r4, sl
   2045c:	bne	206c0 <main@@Base+0xd43c>
   20460:	ldr	r0, [sp, #32]
   20464:	mov	r2, #0
   20468:	str	r2, [r0]
   2046c:	b	204b0 <main@@Base+0xd22c>
   20470:	cmp	r0, #34	; 0x22
   20474:	mov	r1, sl
   20478:	bne	2065c <main@@Base+0xd3d8>
   2047c:	add	r2, sl, #7
   20480:	sub	r0, r8, r2
   20484:	cmp	r0, #2
   20488:	blt	204e4 <main@@Base+0xd260>
   2048c:	ldrb	r0, [r2]
   20490:	cmp	r0, #32
   20494:	bls	204d0 <main@@Base+0xd24c>
   20498:	mov	r1, r2
   2049c:	b	204f8 <main@@Base+0xd274>
   204a0:	cmp	r0, #34	; 0x22
   204a4:	mov	r4, sl
   204a8:	bne	206c0 <main@@Base+0xd43c>
   204ac:	add	r1, sl, #6
   204b0:	sub	r0, r8, r1
   204b4:	cmp	r0, #2
   204b8:	blt	20558 <main@@Base+0xd2d4>
   204bc:	ldrb	r0, [r1]
   204c0:	cmp	r0, #32
   204c4:	bls	20544 <main@@Base+0xd2c0>
   204c8:	mov	r4, r1
   204cc:	b	20568 <main@@Base+0xd2e4>
   204d0:	bne	204e4 <main@@Base+0xd260>
   204d4:	mov	r1, r2
   204d8:	ldrb	r0, [r1, #1]!
   204dc:	cmp	r0, #32
   204e0:	bhi	204f8 <main@@Base+0xd274>
   204e4:	mov	r1, r2
   204e8:	mov	r0, r5
   204ec:	mov	r2, r8
   204f0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   204f4:	mov	r1, r0
   204f8:	cmp	r1, r8
   204fc:	beq	20530 <main@@Base+0xd2ac>
   20500:	ldrb	r0, [r1]
   20504:	cmp	r0, #58	; 0x3a
   20508:	bne	20530 <main@@Base+0xd2ac>
   2050c:	add	r2, r1, #1
   20510:	sub	r0, r8, r2
   20514:	cmp	r0, #2
   20518:	blt	20648 <main@@Base+0xd3c4>
   2051c:	ldrb	r0, [r2]
   20520:	cmp	r0, #32
   20524:	bls	20638 <main@@Base+0xd3b4>
   20528:	mov	r1, r2
   2052c:	b	2065c <main@@Base+0xd3d8>
   20530:	mov	r0, r5
   20534:	mov	r2, r8
   20538:	mov	r3, #4
   2053c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   20540:	b	20658 <main@@Base+0xd3d4>
   20544:	bne	20558 <main@@Base+0xd2d4>
   20548:	mov	r4, r1
   2054c:	ldrb	r0, [r4, #1]!
   20550:	cmp	r0, #32
   20554:	bhi	20568 <main@@Base+0xd2e4>
   20558:	mov	r0, r5
   2055c:	mov	r2, r8
   20560:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   20564:	mov	r4, r0
   20568:	cmp	r4, r8
   2056c:	beq	205a0 <main@@Base+0xd31c>
   20570:	ldrb	r0, [r4]
   20574:	cmp	r0, #58	; 0x3a
   20578:	bne	205a0 <main@@Base+0xd31c>
   2057c:	add	r1, r4, #1
   20580:	sub	r0, r8, r1
   20584:	cmp	r0, #2
   20588:	blt	206b0 <main@@Base+0xd42c>
   2058c:	ldrb	r0, [r1]
   20590:	cmp	r0, #32
   20594:	bls	206a0 <main@@Base+0xd41c>
   20598:	mov	r4, r1
   2059c:	b	206c0 <main@@Base+0xd43c>
   205a0:	mov	r0, r5
   205a4:	mov	r1, r4
   205a8:	mov	r2, r8
   205ac:	mov	r3, #4
   205b0:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   205b4:	b	206bc <main@@Base+0xd438>
   205b8:	bne	205c8 <main@@Base+0xd344>
   205bc:	ldrb	r0, [r2, #2]!
   205c0:	cmp	r0, #32
   205c4:	bhi	205d8 <main@@Base+0xd354>
   205c8:	mov	r0, r5
   205cc:	mov	r2, r8
   205d0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   205d4:	mov	r2, r0
   205d8:	cmp	r4, r2
   205dc:	beq	2062c <main@@Base+0xd3a8>
   205e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   205e4:	mov	r1, #3
   205e8:	mov	r3, #0
   205ec:	str	r1, [sp]
   205f0:	mov	r1, r2
   205f4:	mov	r2, r8
   205f8:	str	r0, [sp, #4]
   205fc:	movw	r0, #16932	; 0x4224
   20600:	movt	r0, #4
   20604:	str	r0, [sp, #8]
   20608:	movw	r0, #61268	; 0xef54
   2060c:	movt	r0, #1
   20610:	str	r0, [sp, #12]
   20614:	movw	r0, #15472	; 0x3c70
   20618:	movt	r0, #2
   2061c:	str	r0, [sp, #16]
   20620:	mov	r0, r5
   20624:	bl	30058 <flatcc_json_parser_union_type_vector@@Base>
   20628:	b	20750 <main@@Base+0xd4cc>
   2062c:	mov	r0, r5
   20630:	mov	r1, r4
   20634:	b	20748 <main@@Base+0xd4c4>
   20638:	bne	20648 <main@@Base+0xd3c4>
   2063c:	ldrb	r0, [r1, #2]!
   20640:	cmp	r0, #32
   20644:	bhi	2065c <main@@Base+0xd3d8>
   20648:	mov	r1, r2
   2064c:	mov	r0, r5
   20650:	mov	r2, r8
   20654:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   20658:	mov	r1, r0
   2065c:	cmp	sl, r1
   20660:	beq	20740 <main@@Base+0xd4bc>
   20664:	mov	r0, r5
   20668:	mov	r2, r8
   2066c:	sub	r3, fp, #32
   20670:	bl	23c84 <main@@Base+0x10a00>
   20674:	ldr	r6, [fp, #-32]	; 0xffffffe0
   20678:	mov	r4, r0
   2067c:	cmp	r6, #0
   20680:	beq	21ebc <main@@Base+0xec38>
   20684:	ldr	r0, [r5]
   20688:	mov	r1, #0
   2068c:	bl	2b448 <flatcc_builder_table_add_offset@@Base>
   20690:	cmp	r0, #0
   20694:	beq	21ebc <main@@Base+0xec38>
   20698:	str	r6, [r0]
   2069c:	b	20754 <main@@Base+0xd4d0>
   206a0:	bne	206b0 <main@@Base+0xd42c>
   206a4:	ldrb	r0, [r4, #2]!
   206a8:	cmp	r0, #32
   206ac:	bhi	206c0 <main@@Base+0xd43c>
   206b0:	mov	r0, r5
   206b4:	mov	r2, r8
   206b8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   206bc:	mov	r4, r0
   206c0:	cmp	sl, r4
   206c4:	beq	20740 <main@@Base+0xd4bc>
   206c8:	mov	r0, #0
   206cc:	mov	r1, #10
   206d0:	str	r0, [fp, #-32]	; 0xffffffe0
   206d4:	ldr	r0, [r5]
   206d8:	bl	2a328 <flatcc_builder_start_table@@Base>
   206dc:	cmp	r0, #0
   206e0:	bne	21ea4 <main@@Base+0xec20>
   206e4:	add	r0, sp, #48	; 0x30
   206e8:	mov	r1, r4
   206ec:	mov	r2, r8
   206f0:	mov	r3, #5
   206f4:	str	r0, [sp]
   206f8:	mov	r0, r5
   206fc:	bl	2f4ac <flatcc_json_parser_prepare_unions@@Base>
   20700:	cmp	r0, r8
   20704:	beq	21ea4 <main@@Base+0xec20>
   20708:	cmp	r4, r8
   2070c:	beq	2080c <main@@Base+0xd588>
   20710:	ldrb	r0, [r4]
   20714:	cmp	r0, #123	; 0x7b
   20718:	bne	2080c <main@@Base+0xd588>
   2071c:	add	r1, r4, #1
   20720:	sub	r0, r8, r1
   20724:	cmp	r0, #2
   20728:	blt	2088c <main@@Base+0xd608>
   2072c:	ldrb	r0, [r1]
   20730:	cmp	r0, #32
   20734:	bls	2087c <main@@Base+0xd5f8>
   20738:	mov	r4, r1
   2073c:	b	2089c <main@@Base+0xd618>
   20740:	mov	r0, r5
   20744:	mov	r1, sl
   20748:	mov	r2, r8
   2074c:	bl	2d5e0 <flatcc_json_parser_unmatched_symbol@@Base>
   20750:	mov	r4, r0
   20754:	sub	r0, r8, r4
   20758:	cmp	r0, #2
   2075c:	blt	20788 <main@@Base+0xd504>
   20760:	ldrb	r0, [r4]
   20764:	cmp	r0, #32
   20768:	bls	20774 <main@@Base+0xd4f0>
   2076c:	mov	r2, r4
   20770:	b	2079c <main@@Base+0xd518>
   20774:	bne	20788 <main@@Base+0xd504>
   20778:	mov	r2, r4
   2077c:	ldrb	r0, [r2, #1]!
   20780:	cmp	r0, #32
   20784:	bhi	2079c <main@@Base+0xd518>
   20788:	mov	r0, r5
   2078c:	mov	r1, r4
   20790:	mov	r2, r8
   20794:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   20798:	mov	r2, r0
   2079c:	cmp	r2, r8
   207a0:	beq	21dbc <main@@Base+0xeb38>
   207a4:	ldrb	r0, [r2]
   207a8:	cmp	r0, #44	; 0x2c
   207ac:	bne	21dc4 <main@@Base+0xeb40>
   207b0:	add	r1, r2, #1
   207b4:	sub	r0, r8, r1
   207b8:	cmp	r0, #2
   207bc:	blt	207e4 <main@@Base+0xd560>
   207c0:	ldrb	r0, [r1]
   207c4:	cmp	r0, #32
   207c8:	bls	207d4 <main@@Base+0xd550>
   207cc:	mov	r2, r1
   207d0:	b	207f4 <main@@Base+0xd570>
   207d4:	bne	207e4 <main@@Base+0xd560>
   207d8:	ldrb	r0, [r2, #2]!
   207dc:	cmp	r0, #32
   207e0:	bhi	207f4 <main@@Base+0xd570>
   207e4:	mov	r0, r5
   207e8:	mov	r2, r8
   207ec:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   207f0:	mov	r2, r0
   207f4:	cmp	r2, r8
   207f8:	beq	21df0 <main@@Base+0xeb6c>
   207fc:	ldrb	r0, [r2]
   20800:	cmp	r0, #125	; 0x7d
   20804:	bne	1ff8c <main@@Base+0xcd08>
   20808:	b	21dcc <main@@Base+0xeb48>
   2080c:	mov	r0, r5
   20810:	mov	r1, r4
   20814:	mov	r2, r8
   20818:	mov	r3, #21
   2081c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   20820:	mov	r4, r0
   20824:	ldr	r0, [r5, #24]
   20828:	cmp	r0, #0
   2082c:	bne	21ea4 <main@@Base+0xec20>
   20830:	ldr	r3, [sp, #48]	; 0x30
   20834:	mov	r0, r5
   20838:	mov	r1, r4
   2083c:	mov	r2, r8
   20840:	bl	2f530 <flatcc_json_parser_finalize_unions@@Base>
   20844:	mov	r4, r0
   20848:	ldr	r0, [r5]
   2084c:	bl	2ac88 <flatcc_builder_end_table@@Base>
   20850:	cmp	r0, #0
   20854:	str	r0, [fp, #-32]	; 0xffffffe0
   20858:	beq	21ea4 <main@@Base+0xec20>
   2085c:	mov	r7, r0
   20860:	ldr	r0, [r5]
   20864:	mov	r1, #1
   20868:	bl	2b448 <flatcc_builder_table_add_offset@@Base>
   2086c:	cmp	r0, #0
   20870:	beq	21ebc <main@@Base+0xec38>
   20874:	str	r7, [r0]
   20878:	b	20754 <main@@Base+0xd4d0>
   2087c:	bne	2088c <main@@Base+0xd608>
   20880:	ldrb	r0, [r4, #2]!
   20884:	cmp	r0, #32
   20888:	bhi	2089c <main@@Base+0xd618>
   2088c:	mov	r0, r5
   20890:	mov	r2, r8
   20894:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   20898:	mov	r4, r0
   2089c:	cmp	r4, r8
   208a0:	mov	r2, r8
   208a4:	beq	208e0 <main@@Base+0xd65c>
   208a8:	ldrb	r0, [r4]
   208ac:	cmp	r0, #125	; 0x7d
   208b0:	bne	208dc <main@@Base+0xd658>
   208b4:	add	r1, r4, #1
   208b8:	sub	r0, r8, r1
   208bc:	cmp	r0, #2
   208c0:	blt	21dac <main@@Base+0xeb28>
   208c4:	ldrb	r0, [r1]
   208c8:	cmp	r0, #32
   208cc:	bhi	21d64 <main@@Base+0xeae0>
   208d0:	bne	21dac <main@@Base+0xeb28>
   208d4:	ldrb	r0, [r4, #2]!
   208d8:	b	21da4 <main@@Base+0xeb20>
   208dc:	mov	r2, r4
   208e0:	cmp	r2, r8
   208e4:	mov	r9, r8
   208e8:	beq	2093c <main@@Base+0xd6b8>
   208ec:	ldrb	r0, [r2]
   208f0:	cmp	r0, #46	; 0x2e
   208f4:	beq	20910 <main@@Base+0xd68c>
   208f8:	cmp	r0, #34	; 0x22
   208fc:	bne	2092c <main@@Base+0xd6a8>
   20900:	ldr	r0, [sp, #32]
   20904:	mov	r1, #0
   20908:	add	r9, r2, #1
   2090c:	b	20938 <main@@Base+0xd6b4>
   20910:	ldr	r0, [sp, #44]	; 0x2c
   20914:	mov	r1, r2
   20918:	mov	r2, r8
   2091c:	mov	r3, #5
   20920:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   20924:	mov	r9, r0
   20928:	b	2093c <main@@Base+0xd6b8>
   2092c:	ldr	r0, [sp, #32]
   20930:	mov	r1, #1
   20934:	mov	r9, r2
   20938:	str	r1, [r0]
   2093c:	sub	ip, r8, r9
   20940:	mov	r0, #8
   20944:	cmp	ip, #8
   20948:	movcc	r0, ip
   2094c:	sub	r7, r0, #1
   20950:	cmp	r7, #7
   20954:	bhi	217a8 <main@@Base+0xe524>
   20958:	add	r5, pc, #32
   2095c:	mov	r1, #0
   20960:	mov	lr, #0
   20964:	mov	r8, #0
   20968:	mov	r6, #0
   2096c:	mov	r3, #0
   20970:	mov	r4, #0
   20974:	mov	r0, #0
   20978:	mov	r2, #0
   2097c:	ldr	pc, [r5, r7, lsl #2]
   20980:	andeq	r0, r2, r4, ror #19
   20984:	ldrdeq	r0, [r2], -ip
   20988:	ldrdeq	r0, [r2], -r4
   2098c:	andeq	r0, r2, ip, asr #19
   20990:	andeq	r0, r2, r0, asr #19
   20994:			; <UNDEFINED> instruction: 0x000209b4
   20998:	andeq	r0, r2, r4, lsr #19
   2099c:	andeq	r0, r2, r0, lsr #19
   209a0:	ldrb	lr, [r9, #7]
   209a4:	ldrb	r0, [r9, #6]
   209a8:	mov	r8, r1
   209ac:	orr	r0, lr, r0, lsl #8
   209b0:	mov	r1, r0
   209b4:	ldrb	r0, [r9, #5]
   209b8:	mov	r6, r8
   209bc:	orr	r1, r1, r0, lsl #16
   209c0:	ldrb	r0, [r9, #4]
   209c4:	mov	r3, r6
   209c8:	orr	r1, r1, r0, lsl #24
   209cc:	ldrb	r0, [r9, #3]
   209d0:	orr	r4, r0, r3
   209d4:	ldrb	r0, [r9, #2]
   209d8:	orr	r0, r4, r0, lsl #8
   209dc:	ldrb	r2, [r9, #1]
   209e0:	orr	r2, r0, r2, lsl #16
   209e4:	ldrb	r0, [r9]
   209e8:	orr	r2, r2, r0, lsl #24
   209ec:	movw	r0, #29797	; 0x7465
   209f0:	movt	r0, #24931	; 0x6163
   209f4:	subs	r0, r1, r0
   209f8:	movw	r0, #24946	; 0x6172
   209fc:	movt	r0, #25448	; 0x6368
   20a00:	sbcs	r0, r2, r0
   20a04:	bcs	20b58 <main@@Base+0xd8d4>
   20a08:	movw	r0, #29817	; 0x7479
   20a0c:	movw	r3, #28005	; 0x6d65
   20a10:	ldr	r8, [sp, #36]	; 0x24
   20a14:	movt	r0, #28511	; 0x6f5f
   20a18:	movt	r3, #25441	; 0x6361
   20a1c:	eor	r0, r1, r0
   20a20:	eor	r3, r2, r3
   20a24:	orrs	r0, r0, r3
   20a28:	beq	20e58 <main@@Base+0xdbd4>
   20a2c:	movw	r0, #28265	; 0x6e69
   20a30:	movw	r7, #29793	; 0x7461
   20a34:	movt	r0, #26479	; 0x676f
   20a38:	movt	r7, #24942	; 0x616e
   20a3c:	eor	r0, r1, r0
   20a40:	eor	r2, r2, r7
   20a44:	orrs	r0, r0, r2
   20a48:	bne	20ee0 <main@@Base+0xdc5c>
   20a4c:	add	sl, r9, #8
   20a50:	mov	r1, #8
   20a54:	sub	lr, r8, sl
   20a58:	cmp	lr, #8
   20a5c:	movcc	r1, lr
   20a60:	sub	r6, r1, #1
   20a64:	cmp	r6, #7
   20a68:	bhi	21bc4 <main@@Base+0xe940>
   20a6c:	add	r0, pc, #28
   20a70:	mov	r5, #0
   20a74:	mov	ip, #0
   20a78:	mov	r1, #0
   20a7c:	mov	r3, #0
   20a80:	mov	r4, #0
   20a84:	mov	r7, #0
   20a88:	mov	r2, #0
   20a8c:	ldr	pc, [r0, r6, lsl #2]
   20a90:	andeq	r0, r2, ip, ror #21
   20a94:	andeq	r0, r2, r4, ror #21
   20a98:	ldrdeq	r0, [r2], -ip
   20a9c:	ldrdeq	r0, [r2], -r4
   20aa0:	andeq	r0, r2, r8, asr #21
   20aa4:			; <UNDEFINED> instruction: 0x00020ab8
   20aa8:			; <UNDEFINED> instruction: 0x00020ab0
   20aac:			; <UNDEFINED> instruction: 0x00020ab0
   20ab0:	ldrb	r0, [r9, #14]
   20ab4:	lsl	ip, r0, #8
   20ab8:	ldrb	r0, [r9, #13]
   20abc:	mov	r1, r5
   20ac0:	orr	r0, ip, r0, lsl #16
   20ac4:	mov	r5, r0
   20ac8:	ldrb	r0, [r9, #12]
   20acc:	mov	r3, r1
   20ad0:	orr	r5, r5, r0, lsl #24
   20ad4:	ldrb	r0, [r9, #11]
   20ad8:	orr	r4, r0, r3
   20adc:	ldrb	r0, [r9, #10]
   20ae0:	orr	r7, r4, r0, lsl #8
   20ae4:	ldrb	r0, [r9, #9]
   20ae8:	orr	r2, r7, r0, lsl #16
   20aec:	ldrb	r0, [sl]
   20af0:	movw	r3, #25856	; 0x6500
   20af4:	movt	r3, #31088	; 0x7970
   20af8:	orr	r1, r2, r0, lsl #24
   20afc:	ldr	r0, [sp, #28]
   20b00:	bic	r2, r5, #255	; 0xff
   20b04:	eor	r2, r2, r3
   20b08:	eor	r0, r1, r0
   20b0c:	orrs	r0, r2, r0
   20b10:	bne	21038 <main@@Base+0xddb4>
   20b14:	ldr	r8, [sp, #36]	; 0x24
   20b18:	cmp	lr, #8
   20b1c:	blt	21bc4 <main@@Base+0xe940>
   20b20:	ldr	r2, [sp, #32]
   20b24:	mov	r1, r9
   20b28:	ldrb	r0, [r1, #15]!
   20b2c:	ldr	r2, [r2]
   20b30:	cmp	r2, #0
   20b34:	beq	211f4 <main@@Base+0xdf70>
   20b38:	cmp	r0, #33	; 0x21
   20b3c:	bcc	20b48 <main@@Base+0xd8c4>
   20b40:	cmp	r0, #58	; 0x3a
   20b44:	bne	21bc4 <main@@Base+0xe940>
   20b48:	ldr	r0, [sp, #32]
   20b4c:	mov	r2, #0
   20b50:	str	r2, [r0]
   20b54:	b	21200 <main@@Base+0xdf7c>
   20b58:	movw	r0, #26720	; 0x6860
   20b5c:	ldr	r8, [sp, #36]	; 0x24
   20b60:	movt	r0, #24419	; 0x5f63
   20b64:	subs	r0, r0, r1
   20b68:	movw	r0, #26990	; 0x696e
   20b6c:	movt	r0, #28001	; 0x6d61
   20b70:	sbcs	r0, r0, r2
   20b74:	bcc	20ca8 <main@@Base+0xda24>
   20b78:	movw	r0, #29797	; 0x7465
   20b7c:	movt	r0, #24931	; 0x6163
   20b80:	eor	r0, r1, r0
   20b84:	movw	r1, #24946	; 0x6172
   20b88:	movt	r1, #25448	; 0x6368
   20b8c:	eor	r1, r2, r1
   20b90:	orrs	r0, r0, r1
   20b94:	bne	217a8 <main@@Base+0xe524>
   20b98:	add	sl, r9, #8
   20b9c:	mov	r1, #8
   20ba0:	sub	lr, r8, sl
   20ba4:	cmp	lr, #8
   20ba8:	movcc	r1, lr
   20bac:	sub	r6, r1, #1
   20bb0:	cmp	r6, #7
   20bb4:	bhi	21bc4 <main@@Base+0xe940>
   20bb8:	add	r0, pc, #28
   20bbc:	mov	r1, #0
   20bc0:	mov	ip, #0
   20bc4:	mov	r5, #0
   20bc8:	mov	r3, #0
   20bcc:	mov	r4, #0
   20bd0:	mov	r7, #0
   20bd4:	mov	r2, #0
   20bd8:	ldr	pc, [r0, r6, lsl #2]
   20bdc:	andeq	r0, r2, r8, lsr ip
   20be0:	andeq	r0, r2, r0, lsr ip
   20be4:	andeq	r0, r2, r8, lsr #24
   20be8:	andeq	r0, r2, r0, lsr #24
   20bec:	andeq	r0, r2, r4, lsl ip
   20bf0:	andeq	r0, r2, r4, lsl #24
   20bf4:	strdeq	r0, [r2], -ip
   20bf8:	strdeq	r0, [r2], -ip
   20bfc:	ldrb	r0, [r9, #14]
   20c00:	lsl	ip, r0, #8
   20c04:	ldrb	r0, [r9, #13]
   20c08:	mov	r5, r1
   20c0c:	orr	r0, ip, r0, lsl #16
   20c10:	mov	r1, r0
   20c14:	ldrb	r0, [r9, #12]
   20c18:	mov	r3, r5
   20c1c:	orr	r1, r1, r0, lsl #24
   20c20:	ldrb	r0, [r9, #11]
   20c24:	orr	r4, r0, r3
   20c28:	ldrb	r0, [r9, #10]
   20c2c:	orr	r7, r4, r0, lsl #8
   20c30:	ldrb	r0, [r9, #9]
   20c34:	orr	r2, r7, r0, lsl #16
   20c38:	bic	r0, r1, #255	; 0xff
   20c3c:	movw	r1, #25856	; 0x6500
   20c40:	movt	r1, #31088	; 0x7970
   20c44:	eor	r0, r0, r1
   20c48:	ldrb	r1, [sl]
   20c4c:	orr	r1, r2, r1, lsl #24
   20c50:	movw	r2, #24436	; 0x5f74
   20c54:	movt	r2, #29299	; 0x7273
   20c58:	eor	r2, r1, r2
   20c5c:	orrs	r0, r0, r2
   20c60:	bne	21090 <main@@Base+0xde0c>
   20c64:	ldr	r8, [sp, #36]	; 0x24
   20c68:	cmp	lr, #8
   20c6c:	blt	21bc4 <main@@Base+0xe940>
   20c70:	ldr	r2, [sp, #32]
   20c74:	mov	r1, r9
   20c78:	ldrb	r0, [r1, #15]!
   20c7c:	ldr	r2, [r2]
   20c80:	cmp	r2, #0
   20c84:	beq	21270 <main@@Base+0xdfec>
   20c88:	cmp	r0, #33	; 0x21
   20c8c:	bcc	20c98 <main@@Base+0xda14>
   20c90:	cmp	r0, #58	; 0x3a
   20c94:	bne	21bc4 <main@@Base+0xe940>
   20c98:	ldr	r0, [sp, #32]
   20c9c:	mov	r2, #0
   20ca0:	str	r2, [r0]
   20ca4:	b	2127c <main@@Base+0xdff8>
   20ca8:	movw	r0, #26979	; 0x6963
   20cac:	movw	r3, #25701	; 0x6465
   20cb0:	movt	r0, #24427	; 0x5f6b
   20cb4:	movt	r3, #29545	; 0x7369
   20cb8:	eor	r0, r1, r0
   20cbc:	eor	r3, r2, r3
   20cc0:	orrs	r0, r0, r3
   20cc4:	beq	20f38 <main@@Base+0xdcb4>
   20cc8:	movw	r0, #26721	; 0x6861
   20ccc:	movt	r0, #24419	; 0x5f63
   20cd0:	eor	r0, r1, r0
   20cd4:	movw	r1, #26990	; 0x696e
   20cd8:	movt	r1, #28001	; 0x6d61
   20cdc:	eor	r1, r2, r1
   20ce0:	orrs	r0, r0, r1
   20ce4:	bne	217a8 <main@@Base+0xe524>
   20ce8:	add	r7, r9, #8
   20cec:	mov	r0, #8
   20cf0:	sub	lr, r8, r7
   20cf4:	cmp	lr, #8
   20cf8:	movcc	r0, lr
   20cfc:	sub	r6, r0, #1
   20d00:	cmp	r6, #7
   20d04:	bhi	21c40 <main@@Base+0xe9bc>
   20d08:	str	r7, [sp, #24]
   20d0c:	add	r5, pc, #32
   20d10:	mov	r1, #0
   20d14:	mov	ip, #0
   20d18:	mov	sl, #0
   20d1c:	mov	r7, #0
   20d20:	mov	r3, #0
   20d24:	mov	r4, #0
   20d28:	mov	r2, #0
   20d2c:	mov	r0, #0
   20d30:	ldr	pc, [r5, r6, lsl #2]
   20d34:	muleq	r2, r8, sp
   20d38:	muleq	r2, r0, sp
   20d3c:	andeq	r0, r2, r8, lsl #27
   20d40:	andeq	r0, r2, r0, lsl #27
   20d44:	andeq	r0, r2, r4, ror sp
   20d48:	andeq	r0, r2, r8, ror #26
   20d4c:	andeq	r0, r2, r8, asr sp
   20d50:	andeq	r0, r2, r4, asr sp
   20d54:	ldrb	ip, [r9, #15]
   20d58:	ldrb	r0, [r9, #14]
   20d5c:	mov	sl, r1
   20d60:	orr	r0, ip, r0, lsl #8
   20d64:	mov	r1, r0
   20d68:	ldrb	r0, [r9, #13]
   20d6c:	mov	r7, sl
   20d70:	orr	r1, r1, r0, lsl #16
   20d74:	ldrb	r0, [r9, #12]
   20d78:	mov	r3, r7
   20d7c:	orr	r1, r1, r0, lsl #24
   20d80:	ldrb	r0, [r9, #11]
   20d84:	orr	r4, r0, r3
   20d88:	ldrb	r0, [r9, #10]
   20d8c:	orr	r2, r4, r0, lsl #8
   20d90:	ldrb	r0, [r9, #9]
   20d94:	orr	r0, r2, r0, lsl #16
   20d98:	ldr	r7, [sp, #24]
   20d9c:	movw	r2, #24436	; 0x5f74
   20da0:	movt	r2, #25970	; 0x6572
   20da4:	eor	r2, r1, r2
   20da8:	ldrb	r3, [r7]
   20dac:	orr	r0, r0, r3, lsl #24
   20db0:	movw	r3, #25460	; 0x6374
   20db4:	movt	r3, #29281	; 0x7261
   20db8:	eor	r3, r0, r3
   20dbc:	orrs	r2, r2, r3
   20dc0:	bne	210e8 <main@@Base+0xde64>
   20dc4:	ldr	r8, [sp, #36]	; 0x24
   20dc8:	add	r7, r9, #16
   20dcc:	mov	r2, #8
   20dd0:	sub	r0, r8, r7
   20dd4:	cmp	r0, #8
   20dd8:	movcc	r2, r0
   20ddc:	sub	r1, r2, #3
   20de0:	cmp	r1, #6
   20de4:	bcs	21254 <main@@Base+0xdfd0>
   20de8:	ldrb	r1, [r9, #18]
   20dec:	lsl	r1, r1, #8
   20df0:	ldrb	r2, [r9, #17]
   20df4:	orr	r1, r1, r2, lsl #16
   20df8:	ldrb	r2, [r7]
   20dfc:	bic	r1, r1, #255	; 0xff
   20e00:	orr	r1, r1, r2, lsl #24
   20e04:	movw	r2, #25856	; 0x6500
   20e08:	movt	r2, #31088	; 0x7970
   20e0c:	teq	r1, r2
   20e10:	bne	21c40 <main@@Base+0xe9bc>
   20e14:	cmp	r0, #4
   20e18:	blt	21c40 <main@@Base+0xe9bc>
   20e1c:	ldr	r2, [sp, #32]
   20e20:	mov	r1, r9
   20e24:	ldrb	r0, [r1, #19]!
   20e28:	ldr	r2, [r2]
   20e2c:	cmp	r2, #0
   20e30:	beq	2159c <main@@Base+0xe318>
   20e34:	ldr	r8, [sp, #36]	; 0x24
   20e38:	cmp	r0, #33	; 0x21
   20e3c:	bcc	20e48 <main@@Base+0xdbc4>
   20e40:	cmp	r0, #58	; 0x3a
   20e44:	bne	21c40 <main@@Base+0xe9bc>
   20e48:	ldr	r0, [sp, #32]
   20e4c:	mov	r2, #0
   20e50:	str	r2, [r0]
   20e54:	b	215ac <main@@Base+0xe328>
   20e58:	add	r7, r9, #8
   20e5c:	mov	r2, #8
   20e60:	sub	r0, r8, r7
   20e64:	cmp	r0, #8
   20e68:	movcc	r2, r0
   20e6c:	sub	r1, r2, #2
   20e70:	cmp	r1, #7
   20e74:	bcs	21158 <main@@Base+0xded4>
   20e78:	ldrb	r1, [r9, #9]
   20e7c:	lsl	r2, r1, #16
   20e80:	mov	r1, #0
   20e84:	ldrb	r3, [r7]
   20e88:	orr	r2, r2, r3, lsl #24
   20e8c:	movw	r3, #0
   20e90:	movt	r3, #28773	; 0x7065
   20e94:	eor	r2, r2, r3
   20e98:	orrs	r1, r1, r2
   20e9c:	bne	21c40 <main@@Base+0xe9bc>
   20ea0:	cmp	r0, #3
   20ea4:	blt	21c40 <main@@Base+0xe9bc>
   20ea8:	ldr	r2, [sp, #32]
   20eac:	mov	r1, r9
   20eb0:	ldrb	r0, [r1, #10]!
   20eb4:	ldr	r2, [r2]
   20eb8:	cmp	r2, #0
   20ebc:	beq	21224 <main@@Base+0xdfa0>
   20ec0:	cmp	r0, #33	; 0x21
   20ec4:	bcc	20ed0 <main@@Base+0xdc4c>
   20ec8:	cmp	r0, #58	; 0x3a
   20ecc:	bne	21c40 <main@@Base+0xe9bc>
   20ed0:	ldr	r0, [sp, #32]
   20ed4:	mov	r2, #0
   20ed8:	str	r2, [r0]
   20edc:	b	21230 <main@@Base+0xdfac>
   20ee0:	and	r0, r1, #-16777216	; 0xff000000
   20ee4:	eor	r0, r0, #1862270976	; 0x6f000000
   20ee8:	orrs	r0, r0, r3
   20eec:	bne	217a8 <main@@Base+0xe524>
   20ef0:	cmp	ip, #6
   20ef4:	mov	r1, r9
   20ef8:	blt	2176c <main@@Base+0xe4e8>
   20efc:	ldr	r1, [sp, #32]
   20f00:	mov	r2, r9
   20f04:	ldrb	r0, [r2, #5]!
   20f08:	ldr	r1, [r1]
   20f0c:	cmp	r1, #0
   20f10:	beq	211c0 <main@@Base+0xdf3c>
   20f14:	cmp	r0, #33	; 0x21
   20f18:	bcc	20f28 <main@@Base+0xdca4>
   20f1c:	cmp	r0, #58	; 0x3a
   20f20:	mov	r1, r9
   20f24:	bne	2176c <main@@Base+0xe4e8>
   20f28:	ldr	r0, [sp, #32]
   20f2c:	mov	r1, #0
   20f30:	str	r1, [r0]
   20f34:	b	211d0 <main@@Base+0xdf4c>
   20f38:	add	sl, r9, #8
   20f3c:	mov	r1, #8
   20f40:	sub	r0, r8, sl
   20f44:	cmp	r0, #8
   20f48:	movcc	r1, r0
   20f4c:	sub	r3, r1, #1
   20f50:	cmp	r3, #7
   20f54:	bhi	21bc4 <main@@Base+0xe940>
   20f58:	add	r6, pc, #24
   20f5c:	mov	ip, #0
   20f60:	mov	r2, #0
   20f64:	mov	r1, #0
   20f68:	mov	r4, #0
   20f6c:	mov	r5, #0
   20f70:	mov	r7, #0
   20f74:	ldr	pc, [r6, r3, lsl #2]
   20f78:	andeq	r0, r2, r8, asr #31
   20f7c:	andeq	r0, r2, r0, asr #31
   20f80:			; <UNDEFINED> instruction: 0x00020fb8
   20f84:			; <UNDEFINED> instruction: 0x00020fb0
   20f88:	andeq	r0, r2, r0, lsr #31
   20f8c:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   20f90:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   20f94:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   20f98:	ldrb	r1, [r9, #13]
   20f9c:	lsl	r2, r1, #16
   20fa0:	ldrb	r1, [r9, #12]
   20fa4:	orr	r2, r2, r1, lsl #24
   20fa8:	mov	r1, ip
   20fac:	mov	ip, r2
   20fb0:	ldrb	r2, [r9, #11]
   20fb4:	orr	r4, r2, r1
   20fb8:	ldrb	r1, [r9, #10]
   20fbc:	orr	r5, r4, r1, lsl #8
   20fc0:	ldrb	r1, [r9, #9]
   20fc4:	orr	r7, r5, r1, lsl #16
   20fc8:	ldrb	r1, [sl]
   20fcc:	lsr	r3, ip, #16
   20fd0:	movw	r2, #27487	; 0x6b5f
   20fd4:	orr	r1, r7, r1, lsl #24
   20fd8:	movw	r7, #28773	; 0x7065
   20fdc:	movt	r7, #29817	; 0x7479
   20fe0:	orr	r3, r3, r1, lsl #16
   20fe4:	eor	r2, r2, r1, lsr #16
   20fe8:	eor	r3, r3, r7
   20fec:	orrs	r2, r3, r2
   20ff0:	bne	2116c <main@@Base+0xdee8>
   20ff4:	ldr	r8, [sp, #36]	; 0x24
   20ff8:	cmp	r0, #7
   20ffc:	blt	21bc4 <main@@Base+0xe940>
   21000:	ldr	r2, [sp, #32]
   21004:	mov	r1, r9
   21008:	ldrb	r0, [r1, #14]!
   2100c:	ldr	r2, [r2]
   21010:	cmp	r2, #0
   21014:	beq	212a0 <main@@Base+0xe01c>
   21018:	cmp	r0, #33	; 0x21
   2101c:	bcc	21028 <main@@Base+0xdda4>
   21020:	cmp	r0, #58	; 0x3a
   21024:	bne	21bc4 <main@@Base+0xe940>
   21028:	ldr	r0, [sp, #32]
   2102c:	mov	r2, #0
   21030:	str	r2, [r0]
   21034:	b	212ac <main@@Base+0xe028>
   21038:	movw	r0, #0
   2103c:	ldr	r8, [sp, #36]	; 0x24
   21040:	bfc	r1, #0, #16
   21044:	movt	r0, #29556	; 0x7374
   21048:	teq	r1, r0
   2104c:	bne	21bc4 <main@@Base+0xe940>
   21050:	cmp	lr, #3
   21054:	blt	21bc4 <main@@Base+0xe940>
   21058:	ldr	r2, [sp, #32]
   2105c:	mov	r1, r9
   21060:	ldrb	r0, [r1, #10]!
   21064:	ldr	r2, [r2]
   21068:	cmp	r2, #0
   2106c:	beq	212d4 <main@@Base+0xe050>
   21070:	cmp	r0, #33	; 0x21
   21074:	bcc	21080 <main@@Base+0xddfc>
   21078:	cmp	r0, #58	; 0x3a
   2107c:	bne	21bc4 <main@@Base+0xe940>
   21080:	ldr	r0, [sp, #32]
   21084:	mov	r2, #0
   21088:	str	r2, [r0]
   2108c:	b	212e0 <main@@Base+0xe05c>
   21090:	movw	r0, #0
   21094:	ldr	r8, [sp, #36]	; 0x24
   21098:	bfc	r1, #0, #16
   2109c:	movt	r0, #29299	; 0x7273
   210a0:	teq	r1, r0
   210a4:	bne	21bc4 <main@@Base+0xe940>
   210a8:	cmp	lr, #3
   210ac:	blt	21bc4 <main@@Base+0xe940>
   210b0:	ldr	r2, [sp, #32]
   210b4:	mov	r1, r9
   210b8:	ldrb	r0, [r1, #10]!
   210bc:	ldr	r2, [r2]
   210c0:	cmp	r2, #0
   210c4:	beq	21308 <main@@Base+0xe084>
   210c8:	cmp	r0, #33	; 0x21
   210cc:	bcc	210d8 <main@@Base+0xde54>
   210d0:	cmp	r0, #58	; 0x3a
   210d4:	bne	21bc4 <main@@Base+0xe940>
   210d8:	ldr	r0, [sp, #32]
   210dc:	mov	r2, #0
   210e0:	str	r2, [r0]
   210e4:	b	21314 <main@@Base+0xe090>
   210e8:	movw	r2, #29281	; 0x7261
   210ec:	lsr	r1, r1, #16
   210f0:	ldr	r8, [sp, #36]	; 0x24
   210f4:	eor	r2, r2, r0, lsr #16
   210f8:	orr	r0, r1, r0, lsl #16
   210fc:	movw	r1, #25970	; 0x6572
   21100:	movt	r1, #25460	; 0x6374
   21104:	eor	r0, r0, r1
   21108:	orrs	r0, r0, r2
   2110c:	bne	21c40 <main@@Base+0xe9bc>
   21110:	cmp	lr, #7
   21114:	blt	21c40 <main@@Base+0xe9bc>
   21118:	ldr	r2, [sp, #32]
   2111c:	mov	r1, r9
   21120:	ldrb	r0, [r1, #14]!
   21124:	ldr	r2, [r2]
   21128:	cmp	r2, #0
   2112c:	beq	214b4 <main@@Base+0xe230>
   21130:	ldr	r8, [sp, #36]	; 0x24
   21134:	ldr	r7, [sp, #24]
   21138:	cmp	r0, #33	; 0x21
   2113c:	bcc	21148 <main@@Base+0xdec4>
   21140:	cmp	r0, #58	; 0x3a
   21144:	bne	21c40 <main@@Base+0xe9bc>
   21148:	ldr	r0, [sp, #32]
   2114c:	mov	r2, #0
   21150:	str	r2, [r0]
   21154:	b	214c8 <main@@Base+0xe244>
   21158:	cmp	r2, #1
   2115c:	mov	r1, #0
   21160:	mov	r2, #0
   21164:	beq	20e84 <main@@Base+0xdc00>
   21168:	b	21c40 <main@@Base+0xe9bc>
   2116c:	ldr	r8, [sp, #36]	; 0x24
   21170:	and	r1, r1, #-16777216	; 0xff000000
   21174:	teq	r1, #1795162112	; 0x6b000000
   21178:	bne	21bc4 <main@@Base+0xe940>
   2117c:	cmp	r0, #2
   21180:	blt	21bc4 <main@@Base+0xe940>
   21184:	ldr	r2, [sp, #32]
   21188:	mov	r1, r9
   2118c:	ldrb	r0, [r1, #9]!
   21190:	ldr	r2, [r2]
   21194:	cmp	r2, #0
   21198:	beq	214ec <main@@Base+0xe268>
   2119c:	ldr	r8, [sp, #36]	; 0x24
   211a0:	cmp	r0, #33	; 0x21
   211a4:	bcc	211b0 <main@@Base+0xdf2c>
   211a8:	cmp	r0, #58	; 0x3a
   211ac:	bne	21bc4 <main@@Base+0xe940>
   211b0:	ldr	r0, [sp, #32]
   211b4:	mov	r2, #0
   211b8:	str	r2, [r0]
   211bc:	b	214fc <main@@Base+0xe278>
   211c0:	cmp	r0, #34	; 0x22
   211c4:	mov	r1, r9
   211c8:	bne	2176c <main@@Base+0xe4e8>
   211cc:	add	r2, r9, #6
   211d0:	sub	r0, r8, r2
   211d4:	cmp	r0, #2
   211d8:	blt	21350 <main@@Base+0xe0cc>
   211dc:	ldrb	r0, [r2]
   211e0:	cmp	r0, #32
   211e4:	bls	21338 <main@@Base+0xe0b4>
   211e8:	ldr	r8, [sp, #36]	; 0x24
   211ec:	mov	r1, r2
   211f0:	b	21364 <main@@Base+0xe0e0>
   211f4:	cmp	r0, #34	; 0x22
   211f8:	bne	21bc4 <main@@Base+0xe940>
   211fc:	add	r1, r9, #16
   21200:	sub	r0, r8, r1
   21204:	cmp	r0, #2
   21208:	blt	213cc <main@@Base+0xe148>
   2120c:	ldrb	r0, [r1]
   21210:	cmp	r0, #32
   21214:	bls	213b4 <main@@Base+0xe130>
   21218:	ldr	r8, [sp, #36]	; 0x24
   2121c:	mov	r2, r1
   21220:	b	213dc <main@@Base+0xe158>
   21224:	cmp	r0, #34	; 0x22
   21228:	bne	21c40 <main@@Base+0xe9bc>
   2122c:	add	r1, r9, #11
   21230:	sub	r0, r8, r1
   21234:	cmp	r0, #2
   21238:	blt	21448 <main@@Base+0xe1c4>
   2123c:	ldrb	r0, [r1]
   21240:	cmp	r0, #32
   21244:	bls	21430 <main@@Base+0xe1ac>
   21248:	ldr	r8, [sp, #36]	; 0x24
   2124c:	mov	r2, r1
   21250:	b	21458 <main@@Base+0xe1d4>
   21254:	mov	r1, #0
   21258:	cmp	r2, #1
   2125c:	beq	214ac <main@@Base+0xe228>
   21260:	ldr	r8, [sp, #36]	; 0x24
   21264:	cmp	r2, #2
   21268:	beq	20df0 <main@@Base+0xdb6c>
   2126c:	b	21c40 <main@@Base+0xe9bc>
   21270:	cmp	r0, #34	; 0x22
   21274:	bne	21bc4 <main@@Base+0xe940>
   21278:	add	r1, r9, #16
   2127c:	sub	r0, r8, r1
   21280:	cmp	r0, #2
   21284:	blt	21538 <main@@Base+0xe2b4>
   21288:	ldrb	r0, [r1]
   2128c:	cmp	r0, #32
   21290:	bls	21520 <main@@Base+0xe29c>
   21294:	ldr	r8, [sp, #36]	; 0x24
   21298:	mov	r2, r1
   2129c:	b	21548 <main@@Base+0xe2c4>
   212a0:	cmp	r0, #34	; 0x22
   212a4:	bne	21bc4 <main@@Base+0xe940>
   212a8:	add	r1, r9, #15
   212ac:	ldr	r4, [sp, #36]	; 0x24
   212b0:	sub	r0, r4, r1
   212b4:	cmp	r0, #2
   212b8:	blt	215e8 <main@@Base+0xe364>
   212bc:	ldrb	r0, [r1]
   212c0:	cmp	r0, #32
   212c4:	bls	215d0 <main@@Base+0xe34c>
   212c8:	ldr	r4, [sp, #36]	; 0x24
   212cc:	mov	r2, r1
   212d0:	b	215f8 <main@@Base+0xe374>
   212d4:	cmp	r0, #34	; 0x22
   212d8:	bne	21bc4 <main@@Base+0xe940>
   212dc:	add	r1, r9, #11
   212e0:	ldr	r4, [sp, #36]	; 0x24
   212e4:	sub	r0, r4, r1
   212e8:	cmp	r0, #2
   212ec:	blt	21664 <main@@Base+0xe3e0>
   212f0:	ldrb	r0, [r1]
   212f4:	cmp	r0, #32
   212f8:	bls	2164c <main@@Base+0xe3c8>
   212fc:	ldr	r4, [sp, #36]	; 0x24
   21300:	mov	r2, r1
   21304:	b	21674 <main@@Base+0xe3f0>
   21308:	cmp	r0, #34	; 0x22
   2130c:	bne	21bc4 <main@@Base+0xe940>
   21310:	add	r1, r9, #11
   21314:	ldr	r0, [sp, #36]	; 0x24
   21318:	sub	r0, r0, r1
   2131c:	cmp	r0, #2
   21320:	blt	216dc <main@@Base+0xe458>
   21324:	ldrb	r0, [r1]
   21328:	cmp	r0, #32
   2132c:	bls	216c8 <main@@Base+0xe444>
   21330:	mov	r2, r1
   21334:	b	216ec <main@@Base+0xe468>
   21338:	ldr	r8, [sp, #36]	; 0x24
   2133c:	bne	21350 <main@@Base+0xe0cc>
   21340:	mov	r1, r2
   21344:	ldrb	r0, [r1, #1]!
   21348:	cmp	r0, #32
   2134c:	bhi	21364 <main@@Base+0xe0e0>
   21350:	ldr	r0, [sp, #44]	; 0x2c
   21354:	mov	r1, r2
   21358:	mov	r2, r8
   2135c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   21360:	mov	r1, r0
   21364:	cmp	r1, r8
   21368:	beq	213a0 <main@@Base+0xe11c>
   2136c:	ldrb	r0, [r1]
   21370:	cmp	r0, #58	; 0x3a
   21374:	bne	213a0 <main@@Base+0xe11c>
   21378:	add	r2, r1, #1
   2137c:	sub	r0, r8, r2
   21380:	cmp	r0, #2
   21384:	blt	21758 <main@@Base+0xe4d4>
   21388:	ldrb	r0, [r2]
   2138c:	cmp	r0, #32
   21390:	bls	21744 <main@@Base+0xe4c0>
   21394:	ldr	r8, [sp, #36]	; 0x24
   21398:	mov	r1, r2
   2139c:	b	2176c <main@@Base+0xe4e8>
   213a0:	ldr	r0, [sp, #44]	; 0x2c
   213a4:	mov	r2, r8
   213a8:	mov	r3, #4
   213ac:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   213b0:	b	21768 <main@@Base+0xe4e4>
   213b4:	ldr	r8, [sp, #36]	; 0x24
   213b8:	bne	213cc <main@@Base+0xe148>
   213bc:	mov	r2, r1
   213c0:	ldrb	r0, [r2, #1]!
   213c4:	cmp	r0, #32
   213c8:	bhi	213dc <main@@Base+0xe158>
   213cc:	ldr	r0, [sp, #44]	; 0x2c
   213d0:	mov	r2, r8
   213d4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   213d8:	mov	r2, r0
   213dc:	cmp	r2, r8
   213e0:	beq	21418 <main@@Base+0xe194>
   213e4:	ldrb	r0, [r2]
   213e8:	cmp	r0, #58	; 0x3a
   213ec:	bne	21418 <main@@Base+0xe194>
   213f0:	add	r1, r2, #1
   213f4:	sub	r0, r8, r1
   213f8:	cmp	r0, #2
   213fc:	blt	217c8 <main@@Base+0xe544>
   21400:	ldrb	r0, [r1]
   21404:	cmp	r0, #32
   21408:	bls	217b4 <main@@Base+0xe530>
   2140c:	ldr	r8, [sp, #36]	; 0x24
   21410:	mov	r2, r1
   21414:	b	217d8 <main@@Base+0xe554>
   21418:	ldr	r0, [sp, #44]	; 0x2c
   2141c:	mov	r1, r2
   21420:	mov	r2, r8
   21424:	mov	r3, #4
   21428:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   2142c:	b	217d4 <main@@Base+0xe550>
   21430:	ldr	r8, [sp, #36]	; 0x24
   21434:	bne	21448 <main@@Base+0xe1c4>
   21438:	mov	r2, r1
   2143c:	ldrb	r0, [r2, #1]!
   21440:	cmp	r0, #32
   21444:	bhi	21458 <main@@Base+0xe1d4>
   21448:	ldr	r0, [sp, #44]	; 0x2c
   2144c:	mov	r2, r8
   21450:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   21454:	mov	r2, r0
   21458:	cmp	r2, r8
   2145c:	beq	21494 <main@@Base+0xe210>
   21460:	ldrb	r0, [r2]
   21464:	cmp	r0, #58	; 0x3a
   21468:	bne	21494 <main@@Base+0xe210>
   2146c:	add	r1, r2, #1
   21470:	sub	r0, r8, r1
   21474:	cmp	r0, #2
   21478:	blt	2181c <main@@Base+0xe598>
   2147c:	ldrb	r0, [r1]
   21480:	cmp	r0, #32
   21484:	bls	21808 <main@@Base+0xe584>
   21488:	ldr	r8, [sp, #36]	; 0x24
   2148c:	mov	r2, r1
   21490:	b	2182c <main@@Base+0xe5a8>
   21494:	ldr	r0, [sp, #44]	; 0x2c
   21498:	mov	r1, r2
   2149c:	mov	r2, r8
   214a0:	mov	r3, #4
   214a4:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   214a8:	b	21828 <main@@Base+0xe5a4>
   214ac:	ldr	r8, [sp, #36]	; 0x24
   214b0:	b	20df8 <main@@Base+0xdb74>
   214b4:	ldr	r8, [sp, #36]	; 0x24
   214b8:	ldr	r7, [sp, #24]
   214bc:	cmp	r0, #34	; 0x22
   214c0:	bne	21c40 <main@@Base+0xe9bc>
   214c4:	add	r1, r9, #15
   214c8:	ldr	r0, [sp, #36]	; 0x24
   214cc:	sub	r0, r0, r1
   214d0:	cmp	r0, #2
   214d4:	blt	21870 <main@@Base+0xe5ec>
   214d8:	ldrb	r0, [r1]
   214dc:	cmp	r0, #32
   214e0:	bls	2185c <main@@Base+0xe5d8>
   214e4:	mov	r2, r1
   214e8:	b	21880 <main@@Base+0xe5fc>
   214ec:	ldr	r8, [sp, #36]	; 0x24
   214f0:	cmp	r0, #34	; 0x22
   214f4:	bne	21bc4 <main@@Base+0xe940>
   214f8:	add	r1, r9, #10
   214fc:	ldr	r0, [sp, #36]	; 0x24
   21500:	sub	r0, r0, r1
   21504:	cmp	r0, #2
   21508:	blt	218ec <main@@Base+0xe668>
   2150c:	ldrb	r0, [r1]
   21510:	cmp	r0, #32
   21514:	bls	218d8 <main@@Base+0xe654>
   21518:	mov	r2, r1
   2151c:	b	218fc <main@@Base+0xe678>
   21520:	ldr	r8, [sp, #36]	; 0x24
   21524:	bne	21538 <main@@Base+0xe2b4>
   21528:	mov	r2, r1
   2152c:	ldrb	r0, [r2, #1]!
   21530:	cmp	r0, #32
   21534:	bhi	21548 <main@@Base+0xe2c4>
   21538:	ldr	r0, [sp, #44]	; 0x2c
   2153c:	mov	r2, r8
   21540:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   21544:	mov	r2, r0
   21548:	cmp	r2, r8
   2154c:	beq	21584 <main@@Base+0xe300>
   21550:	ldrb	r0, [r2]
   21554:	cmp	r0, #58	; 0x3a
   21558:	bne	21584 <main@@Base+0xe300>
   2155c:	add	r1, r2, #1
   21560:	sub	r0, r8, r1
   21564:	cmp	r0, #2
   21568:	blt	21968 <main@@Base+0xe6e4>
   2156c:	ldrb	r0, [r1]
   21570:	cmp	r0, #32
   21574:	bls	21954 <main@@Base+0xe6d0>
   21578:	ldr	r8, [sp, #36]	; 0x24
   2157c:	mov	r2, r1
   21580:	b	21978 <main@@Base+0xe6f4>
   21584:	ldr	r0, [sp, #44]	; 0x2c
   21588:	mov	r1, r2
   2158c:	mov	r2, r8
   21590:	mov	r3, #4
   21594:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   21598:	b	21974 <main@@Base+0xe6f0>
   2159c:	ldr	r8, [sp, #36]	; 0x24
   215a0:	cmp	r0, #34	; 0x22
   215a4:	bne	21c40 <main@@Base+0xe9bc>
   215a8:	add	r1, r9, #20
   215ac:	ldr	r0, [sp, #36]	; 0x24
   215b0:	sub	r0, r0, r1
   215b4:	cmp	r0, #2
   215b8:	blt	219e4 <main@@Base+0xe760>
   215bc:	ldrb	r0, [r1]
   215c0:	cmp	r0, #32
   215c4:	bls	219d0 <main@@Base+0xe74c>
   215c8:	mov	r2, r1
   215cc:	b	219f4 <main@@Base+0xe770>
   215d0:	ldr	r4, [sp, #36]	; 0x24
   215d4:	bne	215e8 <main@@Base+0xe364>
   215d8:	mov	r2, r1
   215dc:	ldrb	r0, [r2, #1]!
   215e0:	cmp	r0, #32
   215e4:	bhi	215f8 <main@@Base+0xe374>
   215e8:	ldr	r0, [sp, #44]	; 0x2c
   215ec:	mov	r2, r4
   215f0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   215f4:	mov	r2, r0
   215f8:	cmp	r2, r4
   215fc:	beq	21634 <main@@Base+0xe3b0>
   21600:	ldrb	r0, [r2]
   21604:	cmp	r0, #58	; 0x3a
   21608:	bne	21634 <main@@Base+0xe3b0>
   2160c:	ldr	r0, [sp, #36]	; 0x24
   21610:	add	r1, r2, #1
   21614:	sub	r0, r0, r1
   21618:	cmp	r0, #2
   2161c:	blt	21a98 <main@@Base+0xe814>
   21620:	ldrb	r0, [r1]
   21624:	cmp	r0, #32
   21628:	bls	21a88 <main@@Base+0xe804>
   2162c:	mov	r2, r1
   21630:	b	21aa8 <main@@Base+0xe824>
   21634:	mov	r1, r2
   21638:	ldr	r0, [sp, #44]	; 0x2c
   2163c:	ldr	r2, [sp, #36]	; 0x24
   21640:	mov	r3, #4
   21644:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   21648:	b	21aa4 <main@@Base+0xe820>
   2164c:	ldr	r4, [sp, #36]	; 0x24
   21650:	bne	21664 <main@@Base+0xe3e0>
   21654:	mov	r2, r1
   21658:	ldrb	r0, [r2, #1]!
   2165c:	cmp	r0, #32
   21660:	bhi	21674 <main@@Base+0xe3f0>
   21664:	ldr	r0, [sp, #44]	; 0x2c
   21668:	mov	r2, r4
   2166c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   21670:	mov	r2, r0
   21674:	cmp	r2, r4
   21678:	beq	216b0 <main@@Base+0xe42c>
   2167c:	ldrb	r0, [r2]
   21680:	cmp	r0, #58	; 0x3a
   21684:	bne	216b0 <main@@Base+0xe42c>
   21688:	ldr	r0, [sp, #36]	; 0x24
   2168c:	add	r1, r2, #1
   21690:	sub	r0, r0, r1
   21694:	cmp	r0, #2
   21698:	blt	21a5c <main@@Base+0xe7d8>
   2169c:	ldrb	r0, [r1]
   216a0:	cmp	r0, #32
   216a4:	bls	21a4c <main@@Base+0xe7c8>
   216a8:	mov	r2, r1
   216ac:	b	21a6c <main@@Base+0xe7e8>
   216b0:	mov	r1, r2
   216b4:	ldr	r0, [sp, #44]	; 0x2c
   216b8:	ldr	r2, [sp, #36]	; 0x24
   216bc:	mov	r3, #4
   216c0:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   216c4:	b	21a68 <main@@Base+0xe7e4>
   216c8:	bne	216dc <main@@Base+0xe458>
   216cc:	mov	r2, r1
   216d0:	ldrb	r0, [r2, #1]!
   216d4:	cmp	r0, #32
   216d8:	bhi	216ec <main@@Base+0xe468>
   216dc:	ldr	r0, [sp, #44]	; 0x2c
   216e0:	ldr	r2, [sp, #36]	; 0x24
   216e4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   216e8:	mov	r2, r0
   216ec:	ldr	r0, [sp, #36]	; 0x24
   216f0:	cmp	r2, r0
   216f4:	beq	2172c <main@@Base+0xe4a8>
   216f8:	ldrb	r0, [r2]
   216fc:	cmp	r0, #58	; 0x3a
   21700:	bne	2172c <main@@Base+0xe4a8>
   21704:	ldr	r0, [sp, #36]	; 0x24
   21708:	add	r1, r2, #1
   2170c:	sub	r0, r0, r1
   21710:	cmp	r0, #2
   21714:	blt	21aec <main@@Base+0xe868>
   21718:	ldrb	r0, [r1]
   2171c:	cmp	r0, #32
   21720:	bls	21adc <main@@Base+0xe858>
   21724:	mov	r2, r1
   21728:	b	21afc <main@@Base+0xe878>
   2172c:	mov	r1, r2
   21730:	ldr	r0, [sp, #44]	; 0x2c
   21734:	ldr	r2, [sp, #36]	; 0x24
   21738:	mov	r3, #4
   2173c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   21740:	b	21af8 <main@@Base+0xe874>
   21744:	ldr	r8, [sp, #36]	; 0x24
   21748:	bne	21758 <main@@Base+0xe4d4>
   2174c:	ldrb	r0, [r1, #2]!
   21750:	cmp	r0, #32
   21754:	bhi	2176c <main@@Base+0xe4e8>
   21758:	ldr	r0, [sp, #44]	; 0x2c
   2175c:	mov	r1, r2
   21760:	mov	r2, r8
   21764:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   21768:	mov	r1, r0
   2176c:	cmp	r9, r1
   21770:	beq	217a8 <main@@Base+0xe524>
   21774:	ldr	r0, [sp, #48]	; 0x30
   21778:	mov	r2, #7
   2177c:	mov	r3, #3
   21780:	str	r2, [sp]
   21784:	mov	r2, r8
   21788:	str	r0, [sp, #4]
   2178c:	movw	r0, #28780	; 0x706c
   21790:	movt	r0, #2
   21794:	str	r0, [sp, #8]
   21798:	ldr	r5, [sp, #44]	; 0x2c
   2179c:	mov	r0, r5
   217a0:	bl	2f5a4 <flatcc_json_parser_union@@Base>
   217a4:	b	21c54 <main@@Base+0xe9d0>
   217a8:	ldr	r5, [sp, #44]	; 0x2c
   217ac:	mov	r1, r9
   217b0:	b	21c48 <main@@Base+0xe9c4>
   217b4:	ldr	r8, [sp, #36]	; 0x24
   217b8:	bne	217c8 <main@@Base+0xe544>
   217bc:	ldrb	r0, [r2, #2]!
   217c0:	cmp	r0, #32
   217c4:	bhi	217d8 <main@@Base+0xe554>
   217c8:	ldr	r0, [sp, #44]	; 0x2c
   217cc:	mov	r2, r8
   217d0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   217d4:	mov	r2, r0
   217d8:	cmp	sl, r2
   217dc:	beq	21bc4 <main@@Base+0xe940>
   217e0:	ldr	r0, [sp, #48]	; 0x30
   217e4:	mov	r1, #3
   217e8:	mov	r3, #1
   217ec:	str	r1, [sp]
   217f0:	mov	r1, r2
   217f4:	mov	r2, r8
   217f8:	str	r0, [sp, #4]
   217fc:	movw	r0, #17068	; 0x42ac
   21800:	movt	r0, #4
   21804:	b	21c20 <main@@Base+0xe99c>
   21808:	ldr	r8, [sp, #36]	; 0x24
   2180c:	bne	2181c <main@@Base+0xe598>
   21810:	ldrb	r0, [r2, #2]!
   21814:	cmp	r0, #32
   21818:	bhi	2182c <main@@Base+0xe5a8>
   2181c:	ldr	r0, [sp, #44]	; 0x2c
   21820:	mov	r2, r8
   21824:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   21828:	mov	r2, r0
   2182c:	cmp	r7, r2
   21830:	beq	21c40 <main@@Base+0xe9bc>
   21834:	ldr	r0, [sp, #48]	; 0x30
   21838:	mov	r1, #7
   2183c:	mov	r3, #3
   21840:	str	r1, [sp]
   21844:	mov	r1, r2
   21848:	mov	r2, r8
   2184c:	str	r0, [sp, #4]
   21850:	movw	r0, #17084	; 0x42bc
   21854:	movt	r0, #4
   21858:	b	21c20 <main@@Base+0xe99c>
   2185c:	bne	21870 <main@@Base+0xe5ec>
   21860:	mov	r2, r1
   21864:	ldrb	r0, [r2, #1]!
   21868:	cmp	r0, #32
   2186c:	bhi	21880 <main@@Base+0xe5fc>
   21870:	ldr	r0, [sp, #44]	; 0x2c
   21874:	ldr	r2, [sp, #36]	; 0x24
   21878:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2187c:	mov	r2, r0
   21880:	ldr	r0, [sp, #36]	; 0x24
   21884:	cmp	r2, r0
   21888:	beq	218c0 <main@@Base+0xe63c>
   2188c:	ldrb	r0, [r2]
   21890:	cmp	r0, #58	; 0x3a
   21894:	bne	218c0 <main@@Base+0xe63c>
   21898:	ldr	r0, [sp, #36]	; 0x24
   2189c:	add	r1, r2, #1
   218a0:	sub	r0, r0, r1
   218a4:	cmp	r0, #2
   218a8:	blt	21b50 <main@@Base+0xe8cc>
   218ac:	ldrb	r0, [r1]
   218b0:	cmp	r0, #32
   218b4:	bls	21b40 <main@@Base+0xe8bc>
   218b8:	mov	r2, r1
   218bc:	b	21b60 <main@@Base+0xe8dc>
   218c0:	mov	r1, r2
   218c4:	ldr	r0, [sp, #44]	; 0x2c
   218c8:	ldr	r2, [sp, #36]	; 0x24
   218cc:	mov	r3, #4
   218d0:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   218d4:	b	21b5c <main@@Base+0xe8d8>
   218d8:	bne	218ec <main@@Base+0xe668>
   218dc:	mov	r2, r1
   218e0:	ldrb	r0, [r2, #1]!
   218e4:	cmp	r0, #32
   218e8:	bhi	218fc <main@@Base+0xe678>
   218ec:	ldr	r0, [sp, #44]	; 0x2c
   218f0:	ldr	r2, [sp, #36]	; 0x24
   218f4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   218f8:	mov	r2, r0
   218fc:	ldr	r0, [sp, #36]	; 0x24
   21900:	cmp	r2, r0
   21904:	beq	2193c <main@@Base+0xe6b8>
   21908:	ldrb	r0, [r2]
   2190c:	cmp	r0, #58	; 0x3a
   21910:	bne	2193c <main@@Base+0xe6b8>
   21914:	ldr	r0, [sp, #36]	; 0x24
   21918:	add	r1, r2, #1
   2191c:	sub	r0, r0, r1
   21920:	cmp	r0, #2
   21924:	blt	21b90 <main@@Base+0xe90c>
   21928:	ldrb	r0, [r1]
   2192c:	cmp	r0, #32
   21930:	bls	21b80 <main@@Base+0xe8fc>
   21934:	mov	r2, r1
   21938:	b	21ba0 <main@@Base+0xe91c>
   2193c:	mov	r1, r2
   21940:	ldr	r0, [sp, #44]	; 0x2c
   21944:	ldr	r2, [sp, #36]	; 0x24
   21948:	mov	r3, #4
   2194c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   21950:	b	21b9c <main@@Base+0xe918>
   21954:	ldr	r8, [sp, #36]	; 0x24
   21958:	bne	21968 <main@@Base+0xe6e4>
   2195c:	ldrb	r0, [r2, #2]!
   21960:	cmp	r0, #32
   21964:	bhi	21978 <main@@Base+0xe6f4>
   21968:	ldr	r0, [sp, #44]	; 0x2c
   2196c:	mov	r2, r8
   21970:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   21974:	mov	r2, r0
   21978:	cmp	sl, r2
   2197c:	beq	21bc4 <main@@Base+0xe940>
   21980:	ldr	r0, [sp, #48]	; 0x30
   21984:	mov	r1, #9
   21988:	mov	r3, #4
   2198c:	str	r1, [sp]
   21990:	mov	r1, r2
   21994:	mov	r2, r8
   21998:	str	r0, [sp, #4]
   2199c:	movw	r0, #17100	; 0x42cc
   219a0:	movt	r0, #4
   219a4:	str	r0, [sp, #8]
   219a8:	movw	r0, #28780	; 0x706c
   219ac:	movt	r0, #2
   219b0:	str	r0, [sp, #12]
   219b4:	movw	r0, #32472	; 0x7ed8
   219b8:	movt	r0, #2
   219bc:	str	r0, [sp, #16]
   219c0:	ldr	r5, [sp, #44]	; 0x2c
   219c4:	mov	r0, r5
   219c8:	bl	30058 <flatcc_json_parser_union_type_vector@@Base>
   219cc:	b	21c54 <main@@Base+0xe9d0>
   219d0:	bne	219e4 <main@@Base+0xe760>
   219d4:	mov	r2, r1
   219d8:	ldrb	r0, [r2, #1]!
   219dc:	cmp	r0, #32
   219e0:	bhi	219f4 <main@@Base+0xe770>
   219e4:	ldr	r0, [sp, #44]	; 0x2c
   219e8:	ldr	r2, [sp, #36]	; 0x24
   219ec:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   219f0:	mov	r2, r0
   219f4:	ldr	r0, [sp, #36]	; 0x24
   219f8:	cmp	r2, r0
   219fc:	beq	21a34 <main@@Base+0xe7b0>
   21a00:	ldrb	r0, [r2]
   21a04:	cmp	r0, #58	; 0x3a
   21a08:	bne	21a34 <main@@Base+0xe7b0>
   21a0c:	ldr	r0, [sp, #36]	; 0x24
   21a10:	add	r1, r2, #1
   21a14:	sub	r0, r0, r1
   21a18:	cmp	r0, #2
   21a1c:	blt	21be0 <main@@Base+0xe95c>
   21a20:	ldrb	r0, [r1]
   21a24:	cmp	r0, #32
   21a28:	bls	21bd0 <main@@Base+0xe94c>
   21a2c:	mov	r2, r1
   21a30:	b	21bf0 <main@@Base+0xe96c>
   21a34:	mov	r1, r2
   21a38:	ldr	r0, [sp, #44]	; 0x2c
   21a3c:	ldr	r2, [sp, #36]	; 0x24
   21a40:	mov	r3, #4
   21a44:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   21a48:	b	21bec <main@@Base+0xe968>
   21a4c:	bne	21a5c <main@@Base+0xe7d8>
   21a50:	ldrb	r0, [r2, #2]!
   21a54:	cmp	r0, #32
   21a58:	bhi	21a6c <main@@Base+0xe7e8>
   21a5c:	ldr	r0, [sp, #44]	; 0x2c
   21a60:	ldr	r2, [sp, #36]	; 0x24
   21a64:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   21a68:	mov	r2, r0
   21a6c:	ldr	r8, [sp, #36]	; 0x24
   21a70:	cmp	sl, r2
   21a74:	beq	21bc4 <main@@Base+0xe940>
   21a78:	ldr	r0, [sp, #48]	; 0x30
   21a7c:	mov	r1, #3
   21a80:	mov	r3, #1
   21a84:	b	21bb8 <main@@Base+0xe934>
   21a88:	bne	21a98 <main@@Base+0xe814>
   21a8c:	ldrb	r0, [r2, #2]!
   21a90:	cmp	r0, #32
   21a94:	bhi	21aa8 <main@@Base+0xe824>
   21a98:	ldr	r0, [sp, #44]	; 0x2c
   21a9c:	ldr	r2, [sp, #36]	; 0x24
   21aa0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   21aa4:	mov	r2, r0
   21aa8:	ldr	r8, [sp, #36]	; 0x24
   21aac:	cmp	sl, r2
   21ab0:	beq	21bc4 <main@@Base+0xe940>
   21ab4:	ldr	r0, [sp, #48]	; 0x30
   21ab8:	mov	r1, #5
   21abc:	mov	r3, #2
   21ac0:	str	r1, [sp]
   21ac4:	mov	r1, r2
   21ac8:	mov	r2, r8
   21acc:	str	r0, [sp, #4]
   21ad0:	movw	r0, #17132	; 0x42ec
   21ad4:	movt	r0, #4
   21ad8:	b	21c20 <main@@Base+0xe99c>
   21adc:	bne	21aec <main@@Base+0xe868>
   21ae0:	ldrb	r0, [r2, #2]!
   21ae4:	cmp	r0, #32
   21ae8:	bhi	21afc <main@@Base+0xe878>
   21aec:	ldr	r0, [sp, #44]	; 0x2c
   21af0:	ldr	r2, [sp, #36]	; 0x24
   21af4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   21af8:	mov	r2, r0
   21afc:	ldr	r8, [sp, #36]	; 0x24
   21b00:	cmp	sl, r2
   21b04:	beq	21bc4 <main@@Base+0xe940>
   21b08:	ldr	r0, [sp, #48]	; 0x30
   21b0c:	mov	r1, #9
   21b10:	mov	r3, #4
   21b14:	str	r1, [sp]
   21b18:	mov	r1, r2
   21b1c:	mov	r2, r8
   21b20:	str	r0, [sp, #4]
   21b24:	movw	r0, #28780	; 0x706c
   21b28:	movt	r0, #2
   21b2c:	str	r0, [sp, #8]
   21b30:	ldr	r5, [sp, #44]	; 0x2c
   21b34:	mov	r0, r5
   21b38:	bl	2fb8c <flatcc_json_parser_union_vector@@Base>
   21b3c:	b	21c54 <main@@Base+0xe9d0>
   21b40:	bne	21b50 <main@@Base+0xe8cc>
   21b44:	ldrb	r0, [r2, #2]!
   21b48:	cmp	r0, #32
   21b4c:	bhi	21b60 <main@@Base+0xe8dc>
   21b50:	ldr	r0, [sp, #44]	; 0x2c
   21b54:	ldr	r2, [sp, #36]	; 0x24
   21b58:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   21b5c:	mov	r2, r0
   21b60:	ldr	r7, [sp, #24]
   21b64:	ldr	r8, [sp, #36]	; 0x24
   21b68:	cmp	r7, r2
   21b6c:	beq	21c40 <main@@Base+0xe9bc>
   21b70:	ldr	r0, [sp, #48]	; 0x30
   21b74:	mov	r1, #1
   21b78:	mov	r3, #0
   21b7c:	b	21bb8 <main@@Base+0xe934>
   21b80:	bne	21b90 <main@@Base+0xe90c>
   21b84:	ldrb	r0, [r2, #2]!
   21b88:	cmp	r0, #32
   21b8c:	bhi	21ba0 <main@@Base+0xe91c>
   21b90:	ldr	r0, [sp, #44]	; 0x2c
   21b94:	ldr	r2, [sp, #36]	; 0x24
   21b98:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   21b9c:	mov	r2, r0
   21ba0:	ldr	r8, [sp, #36]	; 0x24
   21ba4:	cmp	sl, r2
   21ba8:	beq	21bc4 <main@@Base+0xe940>
   21bac:	ldr	r0, [sp, #48]	; 0x30
   21bb0:	mov	r1, #5
   21bb4:	mov	r3, #2
   21bb8:	str	r1, [sp]
   21bbc:	mov	r1, r2
   21bc0:	b	21784 <main@@Base+0xe500>
   21bc4:	ldr	r5, [sp, #44]	; 0x2c
   21bc8:	mov	r1, sl
   21bcc:	b	21c48 <main@@Base+0xe9c4>
   21bd0:	bne	21be0 <main@@Base+0xe95c>
   21bd4:	ldrb	r0, [r2, #2]!
   21bd8:	cmp	r0, #32
   21bdc:	bhi	21bf0 <main@@Base+0xe96c>
   21be0:	ldr	r0, [sp, #44]	; 0x2c
   21be4:	ldr	r2, [sp, #36]	; 0x24
   21be8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   21bec:	mov	r2, r0
   21bf0:	ldr	r8, [sp, #36]	; 0x24
   21bf4:	cmp	r7, r2
   21bf8:	beq	21c40 <main@@Base+0xe9bc>
   21bfc:	ldr	r0, [sp, #48]	; 0x30
   21c00:	mov	r1, #1
   21c04:	mov	r3, #0
   21c08:	str	r1, [sp]
   21c0c:	mov	r1, r2
   21c10:	mov	r2, r8
   21c14:	str	r0, [sp, #4]
   21c18:	movw	r0, #17116	; 0x42dc
   21c1c:	movt	r0, #4
   21c20:	str	r0, [sp, #8]
   21c24:	movw	r0, #28780	; 0x706c
   21c28:	movt	r0, #2
   21c2c:	str	r0, [sp, #12]
   21c30:	ldr	r5, [sp, #44]	; 0x2c
   21c34:	mov	r0, r5
   21c38:	bl	2f6e4 <flatcc_json_parser_union_type@@Base>
   21c3c:	b	21c54 <main@@Base+0xe9d0>
   21c40:	ldr	r5, [sp, #44]	; 0x2c
   21c44:	mov	r1, r7
   21c48:	mov	r0, r5
   21c4c:	mov	r2, r8
   21c50:	bl	2d5e0 <flatcc_json_parser_unmatched_symbol@@Base>
   21c54:	ldr	r9, [sp, #40]	; 0x28
   21c58:	mov	r1, r0
   21c5c:	sub	r0, r8, r0
   21c60:	cmp	r0, #2
   21c64:	blt	21c90 <main@@Base+0xea0c>
   21c68:	ldrb	r0, [r1]
   21c6c:	cmp	r0, #32
   21c70:	bls	21c7c <main@@Base+0xe9f8>
   21c74:	mov	r2, r1
   21c78:	b	21ca0 <main@@Base+0xea1c>
   21c7c:	bne	21c90 <main@@Base+0xea0c>
   21c80:	mov	r2, r1
   21c84:	ldrb	r0, [r2, #1]!
   21c88:	cmp	r0, #32
   21c8c:	bhi	21ca0 <main@@Base+0xea1c>
   21c90:	mov	r0, r5
   21c94:	mov	r2, r8
   21c98:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   21c9c:	mov	r2, r0
   21ca0:	cmp	r2, r8
   21ca4:	beq	21d2c <main@@Base+0xeaa8>
   21ca8:	ldrb	r0, [r2]
   21cac:	cmp	r0, #44	; 0x2c
   21cb0:	bne	21d34 <main@@Base+0xeab0>
   21cb4:	add	r1, r2, #1
   21cb8:	sub	r0, r8, r1
   21cbc:	cmp	r0, #2
   21cc0:	blt	21ce8 <main@@Base+0xea64>
   21cc4:	ldrb	r0, [r1]
   21cc8:	cmp	r0, #32
   21ccc:	bls	21cd8 <main@@Base+0xea54>
   21cd0:	mov	r2, r1
   21cd4:	b	21cf8 <main@@Base+0xea74>
   21cd8:	bne	21ce8 <main@@Base+0xea64>
   21cdc:	ldrb	r0, [r2, #2]!
   21ce0:	cmp	r0, #32
   21ce4:	bhi	21cf8 <main@@Base+0xea74>
   21ce8:	mov	r0, r5
   21cec:	mov	r2, r8
   21cf0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   21cf4:	mov	r2, r0
   21cf8:	cmp	r2, r8
   21cfc:	beq	21d6c <main@@Base+0xeae8>
   21d00:	ldrb	r0, [r2]
   21d04:	cmp	r0, #125	; 0x7d
   21d08:	bne	208e0 <main@@Base+0xd65c>
   21d0c:	add	r1, r2, #1
   21d10:	sub	r0, r8, r1
   21d14:	cmp	r0, #2
   21d18:	blt	21dac <main@@Base+0xeb28>
   21d1c:	ldrb	r0, [r1]
   21d20:	cmp	r0, #32
   21d24:	bls	21d98 <main@@Base+0xeb14>
   21d28:	b	21d64 <main@@Base+0xeae0>
   21d2c:	mov	r4, r8
   21d30:	b	20824 <main@@Base+0xd5a0>
   21d34:	cmp	r0, #125	; 0x7d
   21d38:	bne	21d78 <main@@Base+0xeaf4>
   21d3c:	add	r1, r2, #1
   21d40:	sub	r0, r8, r1
   21d44:	cmp	r0, #2
   21d48:	blt	21dac <main@@Base+0xeb28>
   21d4c:	ldrb	r0, [r1]
   21d50:	cmp	r0, #32
   21d54:	bls	21d8c <main@@Base+0xeb08>
   21d58:	ldr	r8, [sp, #36]	; 0x24
   21d5c:	ldr	r5, [sp, #44]	; 0x2c
   21d60:	ldr	r9, [sp, #40]	; 0x28
   21d64:	mov	r4, r1
   21d68:	b	20824 <main@@Base+0xd5a0>
   21d6c:	mov	r0, r5
   21d70:	mov	r1, r8
   21d74:	b	21d80 <main@@Base+0xeafc>
   21d78:	mov	r0, r5
   21d7c:	mov	r1, r2
   21d80:	mov	r2, r8
   21d84:	mov	r3, #10
   21d88:	b	2081c <main@@Base+0xd598>
   21d8c:	ldr	r8, [sp, #36]	; 0x24
   21d90:	ldr	r5, [sp, #44]	; 0x2c
   21d94:	ldr	r9, [sp, #40]	; 0x28
   21d98:	bne	21dac <main@@Base+0xeb28>
   21d9c:	ldrb	r0, [r2, #2]!
   21da0:	mov	r4, r2
   21da4:	cmp	r0, #32
   21da8:	bhi	20824 <main@@Base+0xd5a0>
   21dac:	mov	r0, r5
   21db0:	mov	r2, r8
   21db4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   21db8:	b	20820 <main@@Base+0xd59c>
   21dbc:	mov	r4, r8
   21dc0:	b	1f198 <main@@Base+0xbf14>
   21dc4:	cmp	r0, #125	; 0x7d
   21dc8:	bne	21e34 <main@@Base+0xebb0>
   21dcc:	add	r1, r2, #1
   21dd0:	sub	r0, r8, r1
   21dd4:	cmp	r0, #2
   21dd8:	blt	21e70 <main@@Base+0xebec>
   21ddc:	ldrb	r0, [r1]
   21de0:	cmp	r0, #32
   21de4:	bls	21e5c <main@@Base+0xebd8>
   21de8:	mov	r4, r1
   21dec:	b	1f198 <main@@Base+0xbf14>
   21df0:	mov	r0, r5
   21df4:	mov	r1, r8
   21df8:	b	21e3c <main@@Base+0xebb8>
   21dfc:	mov	r0, r5
   21e00:	mov	r1, r3
   21e04:	b	21e50 <main@@Base+0xebcc>
   21e08:	cmp	r0, #125	; 0x7d
   21e0c:	bne	21e48 <main@@Base+0xebc4>
   21e10:	add	r1, r2, #1
   21e14:	sub	r0, r8, r1
   21e18:	cmp	r0, #2
   21e1c:	blt	21e94 <main@@Base+0xec10>
   21e20:	ldrb	r0, [r1]
   21e24:	cmp	r0, #32
   21e28:	bls	21e80 <main@@Base+0xebfc>
   21e2c:	mov	r4, r1
   21e30:	b	1f150 <main@@Base+0xbecc>
   21e34:	mov	r0, r5
   21e38:	mov	r1, r2
   21e3c:	mov	r2, r8
   21e40:	mov	r3, #10
   21e44:	b	1f190 <main@@Base+0xbf0c>
   21e48:	mov	r0, r5
   21e4c:	mov	r1, r2
   21e50:	mov	r2, r8
   21e54:	mov	r3, #10
   21e58:	b	1f148 <main@@Base+0xbec4>
   21e5c:	bne	21e70 <main@@Base+0xebec>
   21e60:	ldrb	r0, [r2, #2]!
   21e64:	mov	r4, r2
   21e68:	cmp	r0, #32
   21e6c:	bhi	1f198 <main@@Base+0xbf14>
   21e70:	mov	r0, r5
   21e74:	mov	r2, r8
   21e78:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   21e7c:	b	1f194 <main@@Base+0xbf10>
   21e80:	bne	21e94 <main@@Base+0xec10>
   21e84:	ldrb	r0, [r2, #2]!
   21e88:	mov	r4, r2
   21e8c:	cmp	r0, #32
   21e90:	bhi	1f150 <main@@Base+0xbecc>
   21e94:	mov	r0, r5
   21e98:	mov	r2, r8
   21e9c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   21ea0:	b	1f14c <main@@Base+0xbec8>
   21ea4:	mov	r0, r5
   21ea8:	mov	r1, r4
   21eac:	mov	r2, r8
   21eb0:	mov	r3, #33	; 0x21
   21eb4:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   21eb8:	mov	r4, r0
   21ebc:	mov	r0, r5
   21ec0:	mov	r1, r4
   21ec4:	mov	r2, r8
   21ec8:	mov	r3, #33	; 0x21
   21ecc:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   21ed0:	mov	r4, r0
   21ed4:	ldr	r0, [r5, #24]
   21ed8:	cmp	r0, #0
   21edc:	bne	21f04 <main@@Base+0xec80>
   21ee0:	ldr	r0, [r9]
   21ee4:	cmp	r0, #0
   21ee8:	bne	21f04 <main@@Base+0xec80>
   21eec:	mov	r0, r5
   21ef0:	mov	r1, r4
   21ef4:	mov	r2, r8
   21ef8:	mov	r3, #33	; 0x21
   21efc:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   21f00:	mov	r4, r0
   21f04:	mov	r0, r4
   21f08:	sub	sp, fp, #28
   21f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21f10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21f14:	add	fp, sp, #28
   21f18:	sub	sp, sp, #20
   21f1c:	mov	sl, r1
   21f20:	sub	r1, r2, r1
   21f24:	cmp	r1, #8
   21f28:	movcs	r1, #8
   21f2c:	sub	r5, r1, #1
   21f30:	cmp	r5, #7
   21f34:	bhi	22138 <main@@Base+0xeeb4>
   21f38:	str	r2, [sp, #16]
   21f3c:	str	r0, [sp, #12]
   21f40:	add	r0, pc, #36	; 0x24
   21f44:	mov	lr, r3
   21f48:	mov	r8, #0
   21f4c:	mov	ip, #0
   21f50:	mov	r2, #0
   21f54:	mov	r1, #0
   21f58:	mov	r3, #0
   21f5c:	mov	r7, #0
   21f60:	mov	r6, #0
   21f64:	mov	r4, #0
   21f68:	ldr	pc, [r0, r5, lsl #2]
   21f6c:	ldrdeq	r1, [r2], -r0
   21f70:	andeq	r1, r2, r8, asr #31
   21f74:	andeq	r1, r2, r0, asr #31
   21f78:			; <UNDEFINED> instruction: 0x00021fb8
   21f7c:	andeq	r1, r2, ip, lsr #31
   21f80:	andeq	r1, r2, r0, lsr #31
   21f84:	muleq	r2, r0, pc	; <UNPREDICTABLE>
   21f88:	andeq	r1, r2, ip, lsl #31
   21f8c:	ldrb	ip, [sl, #7]
   21f90:	ldrb	r0, [sl, #6]
   21f94:	mov	r2, r8
   21f98:	orr	r0, ip, r0, lsl #8
   21f9c:	mov	r8, r0
   21fa0:	ldrb	r0, [sl, #5]
   21fa4:	mov	r1, r2
   21fa8:	orr	r8, r8, r0, lsl #16
   21fac:	ldrb	r0, [sl, #4]
   21fb0:	mov	r3, r1
   21fb4:	orr	r8, r8, r0, lsl #24
   21fb8:	ldrb	r0, [sl, #3]
   21fbc:	orr	r7, r0, r3
   21fc0:	ldrb	r0, [sl, #2]
   21fc4:	orr	r6, r7, r0, lsl #8
   21fc8:	ldrb	r0, [sl, #1]
   21fcc:	orr	r4, r6, r0, lsl #16
   21fd0:	ldrb	r0, [sl]
   21fd4:	movw	r1, #28275	; 0x6e73
   21fd8:	ldr	r7, [fp, #12]
   21fdc:	ldr	r5, [fp, #8]
   21fe0:	movt	r1, #19823	; 0x4d6f
   21fe4:	orr	r9, r4, r0, lsl #24
   21fe8:	movw	r0, #29184	; 0x7200
   21fec:	movt	r0, #29797	; 0x7465
   21ff0:	subs	r2, r8, r0
   21ff4:	sbcs	r2, r9, r1
   21ff8:	bcs	22040 <main@@Base+0xedbc>
   21ffc:	movw	r1, #29696	; 0x7400
   22000:	bic	r0, r9, #255	; 0xff
   22004:	movt	r1, #16748	; 0x416c
   22008:	teq	r0, r1
   2200c:	bne	22138 <main@@Base+0xeeb4>
   22010:	ldr	r0, [sp, #12]
   22014:	ldr	r2, [sp, #16]
   22018:	mov	r1, sl
   2201c:	mov	r3, #3
   22020:	mov	r4, lr
   22024:	str	r7, [sp]
   22028:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   2202c:	cmp	r0, sl
   22030:	beq	22138 <main@@Base+0xeeb4>
   22034:	mov	r1, #0
   22038:	mov	r2, #4
   2203c:	b	22080 <main@@Base+0xedfc>
   22040:	add	r2, r0, #50	; 0x32
   22044:	eor	r1, r9, r1
   22048:	eor	r2, r8, r2
   2204c:	orrs	r2, r2, r1
   22050:	bne	22090 <main@@Base+0xee0c>
   22054:	ldr	r0, [sp, #12]
   22058:	ldr	r2, [sp, #16]
   2205c:	mov	r1, sl
   22060:	mov	r3, #8
   22064:	mov	r4, lr
   22068:	str	r7, [sp]
   2206c:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   22070:	cmp	r0, sl
   22074:	beq	22138 <main@@Base+0xeeb4>
   22078:	mov	r1, #0
   2207c:	mov	r2, #3
   22080:	str	r2, [r5]
   22084:	str	r1, [r5, #4]
   22088:	str	r1, [r4]
   2208c:	b	22134 <main@@Base+0xeeb0>
   22090:	ldr	r5, [sp, #16]
   22094:	ldr	r6, [sp, #12]
   22098:	bic	r2, r8, #255	; 0xff
   2209c:	eor	r0, r2, r0
   220a0:	orrs	r0, r0, r1
   220a4:	bne	220e8 <main@@Base+0xee64>
   220a8:	mov	r0, r6
   220ac:	mov	r1, sl
   220b0:	mov	r2, r5
   220b4:	mov	r3, #7
   220b8:	str	r7, [sp]
   220bc:	mov	r4, lr
   220c0:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   220c4:	mov	lr, r4
   220c8:	cmp	r0, sl
   220cc:	beq	220e8 <main@@Base+0xee64>
   220d0:	ldr	r3, [fp, #8]
   220d4:	mov	r1, #0
   220d8:	mov	r2, #1
   220dc:	str	r2, [r3]
   220e0:	str	r1, [r3, #4]
   220e4:	b	22130 <main@@Base+0xeeac>
   220e8:	movw	r0, #20037	; 0x4e45
   220ec:	movt	r0, #20047	; 0x4e4f
   220f0:	teq	r9, r0
   220f4:	bne	22144 <main@@Base+0xeec0>
   220f8:	mov	r0, r6
   220fc:	mov	r1, sl
   22100:	mov	r2, r5
   22104:	mov	r3, #4
   22108:	str	r7, [sp]
   2210c:	mov	r4, lr
   22110:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   22114:	mov	lr, r4
   22118:	cmp	r0, sl
   2211c:	beq	22144 <main@@Base+0xeec0>
   22120:	ldr	r2, [fp, #8]
   22124:	mov	r1, #0
   22128:	str	r1, [r2]
   2212c:	str	r1, [r2, #4]
   22130:	str	r1, [lr]
   22134:	mov	sl, r0
   22138:	mov	r0, sl
   2213c:	sub	sp, fp, #28
   22140:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22144:	movw	r0, #28016	; 0x6d70
   22148:	movw	r1, #29556	; 0x7374
   2214c:	movt	r0, #21353	; 0x5369
   22150:	movt	r1, #21605	; 0x5465
   22154:	eor	r0, r8, r0
   22158:	eor	r1, r9, r1
   2215c:	orrs	r0, r0, r1
   22160:	bne	22138 <main@@Base+0xeeb4>
   22164:	str	lr, [sp, #8]
   22168:	add	lr, sl, #8
   2216c:	sub	r0, r5, lr
   22170:	cmp	r0, #8
   22174:	movcs	r0, #8
   22178:	sub	r5, r0, #1
   2217c:	cmp	r5, #7
   22180:	bhi	22138 <main@@Base+0xeeb4>
   22184:	add	r1, pc, #32
   22188:	mov	r9, #0
   2218c:	mov	ip, #0
   22190:	mov	r8, #0
   22194:	mov	r2, #0
   22198:	mov	r3, #0
   2219c:	mov	r0, #0
   221a0:	mov	r4, #0
   221a4:	mov	r6, #0
   221a8:	ldr	pc, [r1, r5, lsl #2]
   221ac:	andeq	r2, r2, r0, lsl r2
   221b0:	andeq	r2, r2, r8, lsl #4
   221b4:	andeq	r2, r2, r0, lsl #4
   221b8:	strdeq	r2, [r2], -r8
   221bc:	andeq	r2, r2, ip, ror #3
   221c0:	andeq	r2, r2, r0, ror #3
   221c4:	ldrdeq	r2, [r2], -r0
   221c8:	andeq	r2, r2, ip, asr #3
   221cc:	ldrb	ip, [sl, #15]
   221d0:	ldrb	r0, [sl, #14]
   221d4:	mov	r8, r9
   221d8:	orr	r0, ip, r0, lsl #8
   221dc:	mov	r9, r0
   221e0:	ldrb	r0, [sl, #13]
   221e4:	mov	r2, r8
   221e8:	orr	r9, r9, r0, lsl #16
   221ec:	ldrb	r0, [sl, #12]
   221f0:	mov	r3, r2
   221f4:	orr	r9, r9, r0, lsl #24
   221f8:	ldrb	r0, [sl, #11]
   221fc:	orr	r0, r0, r3
   22200:	ldrb	r1, [sl, #10]
   22204:	orr	r4, r0, r1, lsl #8
   22208:	ldrb	r0, [sl, #9]
   2220c:	orr	r6, r4, r0, lsl #16
   22210:	ldrb	r1, [lr]
   22214:	movw	r0, #25943	; 0x6557
   22218:	movw	r2, #21601	; 0x5461
   2221c:	movt	r0, #25196	; 0x626c
   22220:	movt	r2, #27749	; 0x6c65
   22224:	eor	r0, r9, r0
   22228:	orr	r1, r6, r1, lsl #24
   2222c:	eor	r1, r1, r2
   22230:	orrs	r0, r0, r1
   22234:	bne	22138 <main@@Base+0xeeb4>
   22238:	ldr	r0, [sp, #16]
   2223c:	add	r8, sl, #16
   22240:	sub	r0, r0, r8
   22244:	cmp	r0, #8
   22248:	movcs	r0, #8
   2224c:	sub	r3, r0, #1
   22250:	cmp	r3, #7
   22254:	bhi	22138 <main@@Base+0xeeb4>
   22258:	add	r5, pc, #28
   2225c:	mov	r0, #0
   22260:	mov	ip, #0
   22264:	mov	lr, #0
   22268:	mov	r2, #0
   2226c:	mov	r1, #0
   22270:	mov	r6, #0
   22274:	mov	r4, #0
   22278:	ldr	pc, [r5, r3, lsl #2]
   2227c:	ldrdeq	r2, [r2], -r8
   22280:	ldrdeq	r2, [r2], -r0
   22284:	andeq	r2, r2, r8, asr #5
   22288:	andeq	r2, r2, r0, asr #5
   2228c:			; <UNDEFINED> instruction: 0x000222b4
   22290:	andeq	r2, r2, r4, lsr #5
   22294:	muleq	r2, ip, r2
   22298:	muleq	r2, ip, r2
   2229c:	ldrb	r1, [sl, #22]
   222a0:	lsl	ip, r1, #8
   222a4:	ldrb	r1, [sl, #21]
   222a8:	mov	lr, r0
   222ac:	orr	r1, ip, r1, lsl #16
   222b0:	mov	r0, r1
   222b4:	ldrb	r1, [sl, #20]
   222b8:	mov	r2, lr
   222bc:	orr	r0, r0, r1, lsl #24
   222c0:	ldrb	r1, [sl, #19]
   222c4:	orr	r1, r1, r2
   222c8:	ldrb	r2, [sl, #18]
   222cc:	orr	r6, r1, r2, lsl #8
   222d0:	ldrb	r1, [sl, #17]
   222d4:	orr	r4, r6, r1, lsl #16
   222d8:	movw	r1, #27904	; 0x6d00
   222dc:	movw	r2, #26693	; 0x6845
   222e0:	movt	r1, #28277	; 0x6e75
   222e4:	movt	r2, #26996	; 0x6974
   222e8:	eor	r0, r0, r1
   222ec:	ldrb	r1, [r8]
   222f0:	orr	r1, r4, r1, lsl #24
   222f4:	eor	r1, r1, r2
   222f8:	orrs	r0, r0, r1
   222fc:	bne	22138 <main@@Base+0xeeb4>
   22300:	ldr	r0, [sp, #12]
   22304:	ldr	r2, [sp, #16]
   22308:	mov	r1, r8
   2230c:	mov	r3, #7
   22310:	str	r7, [sp]
   22314:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   22318:	ldr	r3, [fp, #8]
   2231c:	cmp	r0, r8
   22320:	beq	22138 <main@@Base+0xeeb4>
   22324:	mov	r2, #2
   22328:	mov	r1, #0
   2232c:	str	r2, [r3]
   22330:	str	r1, [r3, #4]
   22334:	ldr	r2, [sp, #8]
   22338:	str	r1, [r2]
   2233c:	b	22134 <main@@Base+0xeeb0>
   22340:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22344:	add	fp, sp, #28
   22348:	sub	sp, sp, #44	; 0x2c
   2234c:	mov	r6, r2
   22350:	ldr	r2, [fp, #8]
   22354:	mov	r5, r0
   22358:	mov	r0, #0
   2235c:	mov	r8, r3
   22360:	cmp	r1, r6
   22364:	strb	r0, [r2]
   22368:	beq	223ac <main@@Base+0xf128>
   2236c:	ldrb	r0, [r1]
   22370:	cmp	r0, #46	; 0x2e
   22374:	beq	2238c <main@@Base+0xf108>
   22378:	cmp	r0, #34	; 0x22
   2237c:	bne	223a4 <main@@Base+0xf120>
   22380:	mov	r0, #0
   22384:	add	r1, r1, #1
   22388:	b	223a8 <main@@Base+0xf124>
   2238c:	mov	r0, r5
   22390:	mov	r2, r6
   22394:	mov	r3, #5
   22398:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   2239c:	mov	r1, r0
   223a0:	b	223ac <main@@Base+0xf128>
   223a4:	mov	r0, #1
   223a8:	str	r0, [r5, #12]
   223ac:	ldr	r0, [r5, #12]
   223b0:	cmp	r0, #0
   223b4:	beq	223c0 <main@@Base+0xf13c>
   223b8:	mov	r7, r1
   223bc:	b	223fc <main@@Base+0xf178>
   223c0:	sub	r0, r6, r1
   223c4:	cmp	r0, #2
   223c8:	blt	223ec <main@@Base+0xf168>
   223cc:	ldrb	r0, [r1]
   223d0:	cmp	r0, #32
   223d4:	bhi	223b8 <main@@Base+0xf134>
   223d8:	bne	223ec <main@@Base+0xf168>
   223dc:	mov	r7, r1
   223e0:	ldrb	r0, [r7, #1]!
   223e4:	cmp	r0, #32
   223e8:	bhi	223fc <main@@Base+0xf178>
   223ec:	mov	r0, r5
   223f0:	mov	r2, r6
   223f4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   223f8:	mov	r7, r0
   223fc:	cmp	r7, r6
   22400:	beq	2250c <main@@Base+0xf288>
   22404:	mov	r1, #0
   22408:	add	r0, r8, #4
   2240c:	add	sl, sp, #32
   22410:	add	r9, sp, #28
   22414:	str	r8, [sp, #12]
   22418:	str	r1, [sp, #16]
   2241c:	mov	r1, #0
   22420:	str	r0, [sp, #8]
   22424:	str	r1, [sp, #20]
   22428:	ldr	r4, [r8]
   2242c:	mov	r8, r0
   22430:	add	r0, sp, #24
   22434:	mov	r1, r7
   22438:	mov	r2, r6
   2243c:	mov	r3, r9
   22440:	str	sl, [sp]
   22444:	str	r0, [sp, #4]
   22448:	mov	r0, r5
   2244c:	blx	r4
   22450:	cmp	r0, r6
   22454:	beq	2250c <main@@Base+0xf288>
   22458:	mov	r4, r0
   2245c:	cmp	r0, r7
   22460:	bne	22474 <main@@Base+0xf1f0>
   22464:	ldr	r4, [r8], #4
   22468:	cmp	r4, #0
   2246c:	bne	22430 <main@@Base+0xf1ac>
   22470:	b	22514 <main@@Base+0xf290>
   22474:	ldr	r7, [sp, #20]
   22478:	cmp	r7, #0
   2247c:	beq	2248c <main@@Base+0xf208>
   22480:	ldr	r0, [r5, #12]
   22484:	cmp	r0, #0
   22488:	bne	22538 <main@@Base+0xf2b4>
   2248c:	ldr	r0, [sp, #28]
   22490:	cmp	r0, #0
   22494:	beq	224b0 <main@@Base+0xf22c>
   22498:	mov	r0, r5
   2249c:	mov	r1, r4
   224a0:	mov	r2, r6
   224a4:	mov	r3, #8
   224a8:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   224ac:	b	224c8 <main@@Base+0xf244>
   224b0:	ldr	r0, [sp, #32]
   224b4:	ldr	r1, [sp, #36]	; 0x24
   224b8:	orrs	r0, r0, r1
   224bc:	movwne	r0, #1
   224c0:	str	r0, [sp, #16]
   224c4:	mov	r0, r4
   224c8:	ldr	r8, [sp, #12]
   224cc:	cmp	r0, r6
   224d0:	beq	2250c <main@@Base+0xf288>
   224d4:	ldr	r0, [fp, #8]
   224d8:	ldr	r2, [sp, #16]
   224dc:	add	r7, r7, #1
   224e0:	str	r7, [sp, #20]
   224e4:	mov	r7, r4
   224e8:	mov	r1, r0
   224ec:	ldrb	r0, [r0]
   224f0:	add	r0, r0, r2
   224f4:	strb	r0, [r1]
   224f8:	ldr	r0, [sp, #24]
   224fc:	cmp	r0, #0
   22500:	ldr	r0, [sp, #8]
   22504:	bne	22428 <main@@Base+0xf1a4>
   22508:	b	2252c <main@@Base+0xf2a8>
   2250c:	mov	r4, r6
   22510:	b	2252c <main@@Base+0xf2a8>
   22514:	mov	r0, r5
   22518:	mov	r1, r7
   2251c:	mov	r2, r6
   22520:	mov	r3, #23
   22524:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   22528:	mov	r4, r0
   2252c:	mov	r0, r4
   22530:	sub	sp, fp, #28
   22534:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22538:	mov	r0, r5
   2253c:	mov	r1, r4
   22540:	mov	r2, r6
   22544:	mov	r3, #14
   22548:	b	22524 <main@@Base+0xf2a0>
   2254c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22550:	add	fp, sp, #28
   22554:	sub	sp, sp, #44	; 0x2c
   22558:	mov	r4, r2
   2255c:	ldr	r2, [fp, #8]
   22560:	mov	r5, r0
   22564:	mov	r0, #0
   22568:	mov	r6, r3
   2256c:	cmp	r1, r4
   22570:	str	r0, [r2]
   22574:	beq	225b8 <main@@Base+0xf334>
   22578:	ldrb	r0, [r1]
   2257c:	cmp	r0, #46	; 0x2e
   22580:	beq	22598 <main@@Base+0xf314>
   22584:	cmp	r0, #34	; 0x22
   22588:	bne	225b0 <main@@Base+0xf32c>
   2258c:	mov	r0, #0
   22590:	add	r1, r1, #1
   22594:	b	225b4 <main@@Base+0xf330>
   22598:	mov	r0, r5
   2259c:	mov	r2, r4
   225a0:	mov	r3, #5
   225a4:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   225a8:	mov	r1, r0
   225ac:	b	225b8 <main@@Base+0xf334>
   225b0:	mov	r0, #1
   225b4:	str	r0, [r5, #12]
   225b8:	ldr	r0, [r5, #12]
   225bc:	cmp	r0, #0
   225c0:	beq	225cc <main@@Base+0xf348>
   225c4:	mov	r7, r1
   225c8:	b	22608 <main@@Base+0xf384>
   225cc:	sub	r0, r4, r1
   225d0:	cmp	r0, #2
   225d4:	blt	225f8 <main@@Base+0xf374>
   225d8:	ldrb	r0, [r1]
   225dc:	cmp	r0, #32
   225e0:	bhi	225c4 <main@@Base+0xf340>
   225e4:	bne	225f8 <main@@Base+0xf374>
   225e8:	mov	r7, r1
   225ec:	ldrb	r0, [r7, #1]!
   225f0:	cmp	r0, #32
   225f4:	bhi	22608 <main@@Base+0xf384>
   225f8:	mov	r0, r5
   225fc:	mov	r2, r4
   22600:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   22604:	mov	r7, r0
   22608:	cmp	r7, r4
   2260c:	beq	226dc <main@@Base+0xf458>
   22610:	add	r9, r6, #4
   22614:	mov	r0, #0
   22618:	add	sl, sp, #32
   2261c:	add	r8, sp, #28
   22620:	str	r6, [sp, #16]
   22624:	str	r0, [sp, #20]
   22628:	str	r9, [sp, #12]
   2262c:	ldr	r6, [r6]
   22630:	add	r0, sp, #24
   22634:	mov	r1, r7
   22638:	mov	r2, r4
   2263c:	mov	r3, r8
   22640:	str	sl, [sp]
   22644:	str	r0, [sp, #4]
   22648:	mov	r0, r5
   2264c:	blx	r6
   22650:	cmp	r0, r4
   22654:	beq	226dc <main@@Base+0xf458>
   22658:	cmp	r0, r7
   2265c:	bne	22670 <main@@Base+0xf3ec>
   22660:	ldr	r6, [r9], #4
   22664:	cmp	r6, #0
   22668:	bne	22630 <main@@Base+0xf3ac>
   2266c:	b	226e4 <main@@Base+0xf460>
   22670:	ldr	r1, [sp, #20]
   22674:	mov	r7, r0
   22678:	cmp	r1, #0
   2267c:	beq	2268c <main@@Base+0xf408>
   22680:	ldr	r0, [r5, #12]
   22684:	cmp	r0, #0
   22688:	bne	22708 <main@@Base+0xf484>
   2268c:	add	r1, r1, #1
   22690:	ldr	r0, [sp, #32]
   22694:	str	r1, [sp, #20]
   22698:	ldr	r1, [sp, #36]	; 0x24
   2269c:	bl	30d1c <flatcc_json_parser_struct_as_root@@Base+0x650>
   226a0:	vmov	s2, r0
   226a4:	ldr	r2, [fp, #8]
   226a8:	ldr	r1, [sp, #28]
   226ac:	ldr	r6, [sp, #16]
   226b0:	ldr	r9, [sp, #12]
   226b4:	vldr	s0, [r2]
   226b8:	cmp	r1, #0
   226bc:	vneg.f32	s4, s2
   226c0:	vseleq.f32	s2, s2, s4
   226c4:	vadd.f32	s0, s0, s2
   226c8:	vstr	s0, [r2]
   226cc:	ldr	r0, [sp, #24]
   226d0:	cmp	r0, #0
   226d4:	bne	2262c <main@@Base+0xf3a8>
   226d8:	b	226fc <main@@Base+0xf478>
   226dc:	mov	r7, r4
   226e0:	b	226fc <main@@Base+0xf478>
   226e4:	mov	r0, r5
   226e8:	mov	r1, r7
   226ec:	mov	r2, r4
   226f0:	mov	r3, #23
   226f4:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   226f8:	mov	r7, r0
   226fc:	mov	r0, r7
   22700:	sub	sp, fp, #28
   22704:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22708:	mov	r0, r5
   2270c:	mov	r1, r7
   22710:	mov	r2, r4
   22714:	mov	r3, #14
   22718:	b	226f4 <main@@Base+0xf470>
   2271c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22720:	add	fp, sp, #28
   22724:	sub	sp, sp, #44	; 0x2c
   22728:	mov	r6, r2
   2272c:	ldr	r2, [fp, #8]
   22730:	mov	r5, r0
   22734:	mov	r0, #0
   22738:	mov	sl, r3
   2273c:	cmp	r1, r6
   22740:	str	r0, [r2]
   22744:	beq	22788 <main@@Base+0xf504>
   22748:	ldrb	r0, [r1]
   2274c:	cmp	r0, #46	; 0x2e
   22750:	beq	22768 <main@@Base+0xf4e4>
   22754:	cmp	r0, #34	; 0x22
   22758:	bne	22780 <main@@Base+0xf4fc>
   2275c:	mov	r0, #0
   22760:	add	r1, r1, #1
   22764:	b	22784 <main@@Base+0xf500>
   22768:	mov	r0, r5
   2276c:	mov	r2, r6
   22770:	mov	r3, #5
   22774:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   22778:	mov	r1, r0
   2277c:	b	22788 <main@@Base+0xf504>
   22780:	mov	r0, #1
   22784:	str	r0, [r5, #12]
   22788:	ldr	r0, [r5, #12]
   2278c:	cmp	r0, #0
   22790:	beq	2279c <main@@Base+0xf518>
   22794:	mov	r7, r1
   22798:	b	227d8 <main@@Base+0xf554>
   2279c:	sub	r0, r6, r1
   227a0:	cmp	r0, #2
   227a4:	blt	227c8 <main@@Base+0xf544>
   227a8:	ldrb	r0, [r1]
   227ac:	cmp	r0, #32
   227b0:	bhi	22794 <main@@Base+0xf510>
   227b4:	bne	227c8 <main@@Base+0xf544>
   227b8:	mov	r7, r1
   227bc:	ldrb	r0, [r7, #1]!
   227c0:	cmp	r0, #32
   227c4:	bhi	227d8 <main@@Base+0xf554>
   227c8:	mov	r0, r5
   227cc:	mov	r2, r6
   227d0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   227d4:	mov	r7, r0
   227d8:	cmp	r7, r6
   227dc:	beq	22918 <main@@Base+0xf694>
   227e0:	add	r0, sl, #4
   227e4:	mov	r1, #0
   227e8:	mov	r2, #0
   227ec:	add	r8, sp, #32
   227f0:	add	r9, sp, #28
   227f4:	str	sl, [sp, #12]
   227f8:	str	r1, [sp, #20]
   227fc:	str	r0, [sp, #8]
   22800:	ldr	r4, [sl]
   22804:	mov	sl, r0
   22808:	str	r2, [sp, #16]
   2280c:	add	r0, sp, #24
   22810:	mov	r1, r7
   22814:	mov	r2, r6
   22818:	mov	r3, r9
   2281c:	str	r8, [sp]
   22820:	str	r0, [sp, #4]
   22824:	mov	r0, r5
   22828:	blx	r4
   2282c:	cmp	r0, r6
   22830:	beq	22918 <main@@Base+0xf694>
   22834:	mov	r4, r0
   22838:	cmp	r0, r7
   2283c:	bne	22850 <main@@Base+0xf5cc>
   22840:	ldr	r4, [sl], #4
   22844:	cmp	r4, #0
   22848:	bne	2280c <main@@Base+0xf588>
   2284c:	b	22920 <main@@Base+0xf69c>
   22850:	ldr	r7, [sp, #20]
   22854:	cmp	r7, #0
   22858:	beq	22868 <main@@Base+0xf5e4>
   2285c:	ldr	r0, [r5, #12]
   22860:	cmp	r0, #0
   22864:	bne	22944 <main@@Base+0xf6c0>
   22868:	ldr	r2, [sp, #28]
   2286c:	ldr	r0, [sp, #32]
   22870:	ldr	r1, [sp, #36]	; 0x24
   22874:	cmp	r2, #0
   22878:	beq	228a0 <main@@Base+0xf61c>
   2287c:	ldr	sl, [sp, #12]
   22880:	subs	r2, r0, #-2147483647	; 0x80000001
   22884:	sbcs	r1, r1, #0
   22888:	bcc	228cc <main@@Base+0xf648>
   2288c:	mov	r0, r5
   22890:	mov	r1, r4
   22894:	mov	r2, r6
   22898:	mov	r3, #8
   2289c:	b	228c0 <main@@Base+0xf63c>
   228a0:	ldr	sl, [sp, #12]
   228a4:	subs	r2, r0, #-2147483648	; 0x80000000
   228a8:	sbcs	r1, r1, #0
   228ac:	bcc	228d4 <main@@Base+0xf650>
   228b0:	mov	r0, r5
   228b4:	mov	r1, r4
   228b8:	mov	r2, r6
   228bc:	mov	r3, #7
   228c0:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   228c4:	ldr	r2, [sp, #16]
   228c8:	b	228dc <main@@Base+0xf658>
   228cc:	rsb	r2, r0, #0
   228d0:	b	228d8 <main@@Base+0xf654>
   228d4:	mov	r2, r0
   228d8:	mov	r0, r4
   228dc:	cmp	r0, r6
   228e0:	beq	22918 <main@@Base+0xf694>
   228e4:	ldr	r0, [fp, #8]
   228e8:	add	r7, r7, #1
   228ec:	str	r7, [sp, #20]
   228f0:	mov	r7, r4
   228f4:	mov	r1, r0
   228f8:	ldr	r0, [r0]
   228fc:	add	r0, r0, r2
   22900:	str	r0, [r1]
   22904:	ldr	r0, [sp, #24]
   22908:	cmp	r0, #0
   2290c:	ldr	r0, [sp, #8]
   22910:	bne	22800 <main@@Base+0xf57c>
   22914:	b	22938 <main@@Base+0xf6b4>
   22918:	mov	r4, r6
   2291c:	b	22938 <main@@Base+0xf6b4>
   22920:	mov	r0, r5
   22924:	mov	r1, r7
   22928:	mov	r2, r6
   2292c:	mov	r3, #23
   22930:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   22934:	mov	r4, r0
   22938:	mov	r0, r4
   2293c:	sub	sp, fp, #28
   22940:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22944:	mov	r0, r5
   22948:	mov	r1, r4
   2294c:	mov	r2, r6
   22950:	mov	r3, #14
   22954:	b	22930 <main@@Base+0xf6ac>
   22958:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2295c:	add	fp, sp, #28
   22960:	sub	sp, sp, #52	; 0x34
   22964:	mov	r6, r2
   22968:	ldr	r2, [fp, #8]
   2296c:	mov	r5, r0
   22970:	mov	r0, #0
   22974:	mov	sl, r3
   22978:	cmp	r1, r6
   2297c:	str	r0, [r2]
   22980:	str	r0, [r2, #4]
   22984:	beq	229c8 <main@@Base+0xf744>
   22988:	ldrb	r0, [r1]
   2298c:	cmp	r0, #46	; 0x2e
   22990:	beq	229a8 <main@@Base+0xf724>
   22994:	cmp	r0, #34	; 0x22
   22998:	bne	229c0 <main@@Base+0xf73c>
   2299c:	mov	r0, #0
   229a0:	add	r1, r1, #1
   229a4:	b	229c4 <main@@Base+0xf740>
   229a8:	mov	r0, r5
   229ac:	mov	r2, r6
   229b0:	mov	r3, #5
   229b4:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   229b8:	mov	r1, r0
   229bc:	b	229c8 <main@@Base+0xf744>
   229c0:	mov	r0, #1
   229c4:	str	r0, [r5, #12]
   229c8:	ldr	r0, [r5, #12]
   229cc:	cmp	r0, #0
   229d0:	beq	229dc <main@@Base+0xf758>
   229d4:	mov	r7, r1
   229d8:	b	22a18 <main@@Base+0xf794>
   229dc:	sub	r0, r6, r1
   229e0:	cmp	r0, #2
   229e4:	blt	22a08 <main@@Base+0xf784>
   229e8:	ldrb	r0, [r1]
   229ec:	cmp	r0, #32
   229f0:	bhi	229d4 <main@@Base+0xf750>
   229f4:	bne	22a08 <main@@Base+0xf784>
   229f8:	mov	r7, r1
   229fc:	ldrb	r0, [r7, #1]!
   22a00:	cmp	r0, #32
   22a04:	bhi	22a18 <main@@Base+0xf794>
   22a08:	mov	r0, r5
   22a0c:	mov	r2, r6
   22a10:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   22a14:	mov	r7, r0
   22a18:	cmp	r7, r6
   22a1c:	beq	22b64 <main@@Base+0xf8e0>
   22a20:	add	r0, sl, #4
   22a24:	mov	r1, #0
   22a28:	mov	r3, #0
   22a2c:	add	r8, sp, #40	; 0x28
   22a30:	add	r9, sp, #36	; 0x24
   22a34:	mov	r2, #0
   22a38:	str	sl, [sp, #16]
   22a3c:	str	r1, [sp, #28]
   22a40:	str	r0, [sp, #12]
   22a44:	ldr	r4, [sl]
   22a48:	mov	sl, r0
   22a4c:	str	r2, [sp, #20]
   22a50:	str	r3, [sp, #24]
   22a54:	add	r0, sp, #32
   22a58:	mov	r1, r7
   22a5c:	mov	r2, r6
   22a60:	mov	r3, r9
   22a64:	str	r8, [sp]
   22a68:	str	r0, [sp, #4]
   22a6c:	mov	r0, r5
   22a70:	blx	r4
   22a74:	cmp	r0, r6
   22a78:	beq	22b64 <main@@Base+0xf8e0>
   22a7c:	mov	r4, r0
   22a80:	cmp	r0, r7
   22a84:	bne	22a98 <main@@Base+0xf814>
   22a88:	ldr	r4, [sl], #4
   22a8c:	cmp	r4, #0
   22a90:	bne	22a54 <main@@Base+0xf7d0>
   22a94:	b	22b6c <main@@Base+0xf8e8>
   22a98:	ldr	r7, [sp, #28]
   22a9c:	cmp	r7, #0
   22aa0:	beq	22ab0 <main@@Base+0xf82c>
   22aa4:	ldr	r0, [r5, #12]
   22aa8:	cmp	r0, #0
   22aac:	bne	22b90 <main@@Base+0xf90c>
   22ab0:	add	r2, sp, #36	; 0x24
   22ab4:	ldm	r2, {r0, r1, r2}
   22ab8:	cmp	r0, #0
   22abc:	beq	22ae4 <main@@Base+0xf860>
   22ac0:	ldr	sl, [sp, #16]
   22ac4:	subs	r0, r1, #1
   22ac8:	sbcs	r0, r2, #-2147483648	; 0x80000000
   22acc:	bcc	22b14 <main@@Base+0xf890>
   22ad0:	mov	r0, r5
   22ad4:	mov	r1, r4
   22ad8:	mov	r2, r6
   22adc:	mov	r3, #8
   22ae0:	b	22b04 <main@@Base+0xf880>
   22ae4:	ldr	sl, [sp, #16]
   22ae8:	cmn	r2, #1
   22aec:	mov	r0, r4
   22af0:	bgt	22b20 <main@@Base+0xf89c>
   22af4:	mov	r0, r5
   22af8:	mov	r1, r4
   22afc:	mov	r2, r6
   22b00:	mov	r3, #7
   22b04:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   22b08:	ldr	r1, [sp, #24]
   22b0c:	ldr	r2, [sp, #20]
   22b10:	b	22b20 <main@@Base+0xf89c>
   22b14:	rsbs	r1, r1, #0
   22b18:	mov	r0, r4
   22b1c:	rsc	r2, r2, #0
   22b20:	cmp	r0, r6
   22b24:	beq	22b64 <main@@Base+0xf8e0>
   22b28:	ldr	r0, [fp, #8]
   22b2c:	add	r7, r7, #1
   22b30:	str	r7, [sp, #28]
   22b34:	mov	r7, r0
   22b38:	ldm	r0, {r0, r3}
   22b3c:	adds	r0, r0, r1
   22b40:	adc	r3, r3, r2
   22b44:	stm	r7, {r0, r3}
   22b48:	mov	r3, r1
   22b4c:	mov	r7, r4
   22b50:	ldr	r0, [sp, #32]
   22b54:	cmp	r0, #0
   22b58:	ldr	r0, [sp, #12]
   22b5c:	bne	22a44 <main@@Base+0xf7c0>
   22b60:	b	22b84 <main@@Base+0xf900>
   22b64:	mov	r4, r6
   22b68:	b	22b84 <main@@Base+0xf900>
   22b6c:	mov	r0, r5
   22b70:	mov	r1, r7
   22b74:	mov	r2, r6
   22b78:	mov	r3, #23
   22b7c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   22b80:	mov	r4, r0
   22b84:	mov	r0, r4
   22b88:	sub	sp, fp, #28
   22b8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22b90:	mov	r0, r5
   22b94:	mov	r1, r4
   22b98:	mov	r2, r6
   22b9c:	mov	r3, #14
   22ba0:	b	22b7c <main@@Base+0xf8f8>
   22ba4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22ba8:	add	fp, sp, #28
   22bac:	sub	sp, sp, #44	; 0x2c
   22bb0:	mov	r6, r2
   22bb4:	ldr	r2, [fp, #8]
   22bb8:	mov	r5, r0
   22bbc:	mov	r0, #0
   22bc0:	mov	sl, r3
   22bc4:	cmp	r1, r6
   22bc8:	str	r0, [r2]
   22bcc:	beq	22c10 <main@@Base+0xf98c>
   22bd0:	ldrb	r0, [r1]
   22bd4:	cmp	r0, #46	; 0x2e
   22bd8:	beq	22bf0 <main@@Base+0xf96c>
   22bdc:	cmp	r0, #34	; 0x22
   22be0:	bne	22c08 <main@@Base+0xf984>
   22be4:	mov	r0, #0
   22be8:	add	r1, r1, #1
   22bec:	b	22c0c <main@@Base+0xf988>
   22bf0:	mov	r0, r5
   22bf4:	mov	r2, r6
   22bf8:	mov	r3, #5
   22bfc:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   22c00:	mov	r1, r0
   22c04:	b	22c10 <main@@Base+0xf98c>
   22c08:	mov	r0, #1
   22c0c:	str	r0, [r5, #12]
   22c10:	ldr	r0, [r5, #12]
   22c14:	cmp	r0, #0
   22c18:	beq	22c24 <main@@Base+0xf9a0>
   22c1c:	mov	r7, r1
   22c20:	b	22c60 <main@@Base+0xf9dc>
   22c24:	sub	r0, r6, r1
   22c28:	cmp	r0, #2
   22c2c:	blt	22c50 <main@@Base+0xf9cc>
   22c30:	ldrb	r0, [r1]
   22c34:	cmp	r0, #32
   22c38:	bhi	22c1c <main@@Base+0xf998>
   22c3c:	bne	22c50 <main@@Base+0xf9cc>
   22c40:	mov	r7, r1
   22c44:	ldrb	r0, [r7, #1]!
   22c48:	cmp	r0, #32
   22c4c:	bhi	22c60 <main@@Base+0xf9dc>
   22c50:	mov	r0, r5
   22c54:	mov	r2, r6
   22c58:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   22c5c:	mov	r7, r0
   22c60:	cmp	r7, r6
   22c64:	beq	22d8c <main@@Base+0xfb08>
   22c68:	mov	r1, #0
   22c6c:	add	r0, sl, #4
   22c70:	add	r8, sp, #32
   22c74:	add	r9, sp, #28
   22c78:	str	sl, [sp, #12]
   22c7c:	str	r1, [sp, #16]
   22c80:	mov	r1, #0
   22c84:	str	r0, [sp, #8]
   22c88:	str	r1, [sp, #20]
   22c8c:	ldr	r4, [sl]
   22c90:	mov	sl, r0
   22c94:	add	r0, sp, #24
   22c98:	mov	r1, r7
   22c9c:	mov	r2, r6
   22ca0:	mov	r3, r9
   22ca4:	str	r8, [sp]
   22ca8:	str	r0, [sp, #4]
   22cac:	mov	r0, r5
   22cb0:	blx	r4
   22cb4:	cmp	r0, r6
   22cb8:	beq	22d8c <main@@Base+0xfb08>
   22cbc:	mov	r4, r0
   22cc0:	cmp	r0, r7
   22cc4:	bne	22cd8 <main@@Base+0xfa54>
   22cc8:	ldr	r4, [sl], #4
   22ccc:	cmp	r4, #0
   22cd0:	bne	22c94 <main@@Base+0xfa10>
   22cd4:	b	22d94 <main@@Base+0xfb10>
   22cd8:	ldr	r7, [sp, #20]
   22cdc:	cmp	r7, #0
   22ce0:	beq	22cf0 <main@@Base+0xfa6c>
   22ce4:	ldr	r0, [r5, #12]
   22ce8:	cmp	r0, #0
   22cec:	bne	22db8 <main@@Base+0xfb34>
   22cf0:	ldr	r0, [sp, #28]
   22cf4:	cmp	r0, #0
   22cf8:	beq	22d18 <main@@Base+0xfa94>
   22cfc:	mov	r0, r5
   22d00:	mov	r1, r4
   22d04:	mov	r2, r6
   22d08:	mov	r3, #8
   22d0c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   22d10:	ldr	sl, [sp, #12]
   22d14:	b	22d4c <main@@Base+0xfac8>
   22d18:	ldr	r0, [sp, #36]	; 0x24
   22d1c:	ldr	sl, [sp, #12]
   22d20:	cmp	r0, #0
   22d24:	beq	22d40 <main@@Base+0xfabc>
   22d28:	mov	r0, r5
   22d2c:	mov	r1, r4
   22d30:	mov	r2, r6
   22d34:	mov	r3, #7
   22d38:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   22d3c:	b	22d4c <main@@Base+0xfac8>
   22d40:	ldr	r0, [sp, #32]
   22d44:	str	r0, [sp, #16]
   22d48:	mov	r0, r4
   22d4c:	cmp	r0, r6
   22d50:	beq	22d8c <main@@Base+0xfb08>
   22d54:	ldr	r0, [fp, #8]
   22d58:	ldr	r2, [sp, #16]
   22d5c:	add	r7, r7, #1
   22d60:	str	r7, [sp, #20]
   22d64:	mov	r7, r4
   22d68:	mov	r1, r0
   22d6c:	ldr	r0, [r0]
   22d70:	add	r0, r0, r2
   22d74:	str	r0, [r1]
   22d78:	ldr	r0, [sp, #24]
   22d7c:	cmp	r0, #0
   22d80:	ldr	r0, [sp, #8]
   22d84:	bne	22c8c <main@@Base+0xfa08>
   22d88:	b	22dac <main@@Base+0xfb28>
   22d8c:	mov	r4, r6
   22d90:	b	22dac <main@@Base+0xfb28>
   22d94:	mov	r0, r5
   22d98:	mov	r1, r7
   22d9c:	mov	r2, r6
   22da0:	mov	r3, #23
   22da4:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   22da8:	mov	r4, r0
   22dac:	mov	r0, r4
   22db0:	sub	sp, fp, #28
   22db4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22db8:	mov	r0, r5
   22dbc:	mov	r1, r4
   22dc0:	mov	r2, r6
   22dc4:	mov	r3, #14
   22dc8:	b	22da4 <main@@Base+0xfb20>
   22dcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22dd0:	add	fp, sp, #28
   22dd4:	sub	sp, sp, #52	; 0x34
   22dd8:	mov	r6, r2
   22ddc:	ldr	r2, [fp, #8]
   22de0:	mov	r5, r0
   22de4:	mov	r0, #0
   22de8:	mov	r8, r3
   22dec:	cmp	r1, r6
   22df0:	str	r0, [r2]
   22df4:	str	r0, [r2, #4]
   22df8:	beq	22e3c <main@@Base+0xfbb8>
   22dfc:	ldrb	r0, [r1]
   22e00:	cmp	r0, #46	; 0x2e
   22e04:	beq	22e1c <main@@Base+0xfb98>
   22e08:	cmp	r0, #34	; 0x22
   22e0c:	bne	22e34 <main@@Base+0xfbb0>
   22e10:	mov	r0, #0
   22e14:	add	r1, r1, #1
   22e18:	b	22e38 <main@@Base+0xfbb4>
   22e1c:	mov	r0, r5
   22e20:	mov	r2, r6
   22e24:	mov	r3, #5
   22e28:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   22e2c:	mov	r1, r0
   22e30:	b	22e3c <main@@Base+0xfbb8>
   22e34:	mov	r0, #1
   22e38:	str	r0, [r5, #12]
   22e3c:	ldr	r0, [r5, #12]
   22e40:	cmp	r0, #0
   22e44:	beq	22e50 <main@@Base+0xfbcc>
   22e48:	mov	r7, r1
   22e4c:	b	22e8c <main@@Base+0xfc08>
   22e50:	sub	r0, r6, r1
   22e54:	cmp	r0, #2
   22e58:	blt	22e7c <main@@Base+0xfbf8>
   22e5c:	ldrb	r0, [r1]
   22e60:	cmp	r0, #32
   22e64:	bhi	22e48 <main@@Base+0xfbc4>
   22e68:	bne	22e7c <main@@Base+0xfbf8>
   22e6c:	mov	r7, r1
   22e70:	ldrb	r0, [r7, #1]!
   22e74:	cmp	r0, #32
   22e78:	bhi	22e8c <main@@Base+0xfc08>
   22e7c:	mov	r0, r5
   22e80:	mov	r2, r6
   22e84:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   22e88:	mov	r7, r0
   22e8c:	cmp	r7, r6
   22e90:	beq	22fa8 <main@@Base+0xfd24>
   22e94:	mov	r1, #0
   22e98:	add	r0, r8, #4
   22e9c:	add	sl, sp, #40	; 0x28
   22ea0:	add	r9, sp, #36	; 0x24
   22ea4:	str	r8, [sp, #16]
   22ea8:	str	r1, [sp, #24]
   22eac:	mov	r1, #0
   22eb0:	str	r0, [sp, #12]
   22eb4:	str	r1, [sp, #20]
   22eb8:	mov	r1, #0
   22ebc:	str	r1, [sp, #28]
   22ec0:	ldr	r4, [r8]
   22ec4:	mov	r8, r0
   22ec8:	add	r0, sp, #32
   22ecc:	mov	r1, r7
   22ed0:	mov	r2, r6
   22ed4:	mov	r3, r9
   22ed8:	str	sl, [sp]
   22edc:	str	r0, [sp, #4]
   22ee0:	mov	r0, r5
   22ee4:	blx	r4
   22ee8:	cmp	r0, r6
   22eec:	beq	22fa8 <main@@Base+0xfd24>
   22ef0:	mov	r4, r0
   22ef4:	cmp	r0, r7
   22ef8:	bne	22f0c <main@@Base+0xfc88>
   22efc:	ldr	r4, [r8], #4
   22f00:	cmp	r4, #0
   22f04:	bne	22ec8 <main@@Base+0xfc44>
   22f08:	b	22fb0 <main@@Base+0xfd2c>
   22f0c:	ldr	r7, [sp, #28]
   22f10:	cmp	r7, #0
   22f14:	beq	22f24 <main@@Base+0xfca0>
   22f18:	ldr	r0, [r5, #12]
   22f1c:	cmp	r0, #0
   22f20:	bne	22fd4 <main@@Base+0xfd50>
   22f24:	ldr	r0, [sp, #36]	; 0x24
   22f28:	cmp	r0, #0
   22f2c:	beq	22f48 <main@@Base+0xfcc4>
   22f30:	mov	r0, r5
   22f34:	mov	r1, r4
   22f38:	mov	r2, r6
   22f3c:	mov	r3, #8
   22f40:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   22f44:	b	22f5c <main@@Base+0xfcd8>
   22f48:	ldr	r0, [sp, #40]	; 0x28
   22f4c:	str	r0, [sp, #24]
   22f50:	ldr	r0, [sp, #44]	; 0x2c
   22f54:	str	r0, [sp, #20]
   22f58:	mov	r0, r4
   22f5c:	ldr	r8, [sp, #16]
   22f60:	cmp	r0, r6
   22f64:	beq	22fa8 <main@@Base+0xfd24>
   22f68:	ldr	r0, [fp, #8]
   22f6c:	add	r7, r7, #1
   22f70:	ldr	r3, [sp, #24]
   22f74:	str	r7, [sp, #28]
   22f78:	mov	r7, r4
   22f7c:	mov	r2, r0
   22f80:	ldrd	r0, [r0]
   22f84:	adds	r0, r0, r3
   22f88:	ldr	r3, [sp, #20]
   22f8c:	adc	r1, r1, r3
   22f90:	strd	r0, [r2]
   22f94:	ldr	r0, [sp, #32]
   22f98:	cmp	r0, #0
   22f9c:	ldr	r0, [sp, #12]
   22fa0:	bne	22ec0 <main@@Base+0xfc3c>
   22fa4:	b	22fc8 <main@@Base+0xfd44>
   22fa8:	mov	r4, r6
   22fac:	b	22fc8 <main@@Base+0xfd44>
   22fb0:	mov	r0, r5
   22fb4:	mov	r1, r7
   22fb8:	mov	r2, r6
   22fbc:	mov	r3, #23
   22fc0:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   22fc4:	mov	r4, r0
   22fc8:	mov	r0, r4
   22fcc:	sub	sp, fp, #28
   22fd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22fd4:	mov	r0, r5
   22fd8:	mov	r1, r4
   22fdc:	mov	r2, r6
   22fe0:	mov	r3, #14
   22fe4:	b	22fc0 <main@@Base+0xfd3c>
   22fe8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22fec:	add	fp, sp, #28
   22ff0:	sub	sp, sp, #44	; 0x2c
   22ff4:	mov	r4, r2
   22ff8:	ldr	r2, [fp, #8]
   22ffc:	mov	r5, r0
   23000:	mov	r0, #0
   23004:	mov	r9, r3
   23008:	cmp	r1, r4
   2300c:	str	r0, [r2]
   23010:	str	r0, [r2, #4]
   23014:	beq	23058 <main@@Base+0xfdd4>
   23018:	ldrb	r0, [r1]
   2301c:	cmp	r0, #46	; 0x2e
   23020:	beq	23038 <main@@Base+0xfdb4>
   23024:	cmp	r0, #34	; 0x22
   23028:	bne	23050 <main@@Base+0xfdcc>
   2302c:	mov	r0, #0
   23030:	add	r1, r1, #1
   23034:	b	23054 <main@@Base+0xfdd0>
   23038:	mov	r0, r5
   2303c:	mov	r2, r4
   23040:	mov	r3, #5
   23044:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   23048:	mov	r1, r0
   2304c:	b	23058 <main@@Base+0xfdd4>
   23050:	mov	r0, #1
   23054:	str	r0, [r5, #12]
   23058:	ldr	r0, [r5, #12]
   2305c:	cmp	r0, #0
   23060:	beq	2306c <main@@Base+0xfde8>
   23064:	mov	r7, r1
   23068:	b	230a8 <main@@Base+0xfe24>
   2306c:	sub	r0, r4, r1
   23070:	cmp	r0, #2
   23074:	blt	23098 <main@@Base+0xfe14>
   23078:	ldrb	r0, [r1]
   2307c:	cmp	r0, #32
   23080:	bhi	23064 <main@@Base+0xfde0>
   23084:	bne	23098 <main@@Base+0xfe14>
   23088:	mov	r7, r1
   2308c:	ldrb	r0, [r7, #1]!
   23090:	cmp	r0, #32
   23094:	bhi	230a8 <main@@Base+0xfe24>
   23098:	mov	r0, r5
   2309c:	mov	r2, r4
   230a0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   230a4:	mov	r7, r0
   230a8:	cmp	r7, r4
   230ac:	beq	23188 <main@@Base+0xff04>
   230b0:	add	r0, r9, #4
   230b4:	mov	r1, #0
   230b8:	add	sl, sp, #32
   230bc:	add	r8, sp, #28
   230c0:	str	r9, [sp, #16]
   230c4:	str	r1, [sp, #20]
   230c8:	str	r0, [sp, #12]
   230cc:	ldr	r6, [r9]
   230d0:	mov	r9, r0
   230d4:	add	r0, sp, #24
   230d8:	mov	r1, r7
   230dc:	mov	r2, r4
   230e0:	mov	r3, r8
   230e4:	str	sl, [sp]
   230e8:	str	r0, [sp, #4]
   230ec:	mov	r0, r5
   230f0:	blx	r6
   230f4:	cmp	r0, r4
   230f8:	beq	23188 <main@@Base+0xff04>
   230fc:	cmp	r0, r7
   23100:	bne	23114 <main@@Base+0xfe90>
   23104:	ldr	r6, [r9], #4
   23108:	cmp	r6, #0
   2310c:	bne	230d4 <main@@Base+0xfe50>
   23110:	b	23190 <main@@Base+0xff0c>
   23114:	ldr	r1, [sp, #20]
   23118:	mov	r7, r0
   2311c:	cmp	r1, #0
   23120:	beq	23130 <main@@Base+0xfeac>
   23124:	ldr	r0, [r5, #12]
   23128:	cmp	r0, #0
   2312c:	bne	231b4 <main@@Base+0xff30>
   23130:	add	r1, r1, #1
   23134:	ldr	r0, [sp, #32]
   23138:	str	r1, [sp, #20]
   2313c:	ldr	r1, [sp, #36]	; 0x24
   23140:	bl	30ae4 <flatcc_json_parser_struct_as_root@@Base+0x418>
   23144:	ldr	r2, [fp, #8]
   23148:	vmov	d17, r0, r1
   2314c:	ldr	r3, [sp, #28]
   23150:	ldr	r9, [sp, #16]
   23154:	mov	r6, r2
   23158:	vldr	d16, [r2]
   2315c:	eor	r2, r1, #-2147483648	; 0x80000000
   23160:	cmp	r3, #0
   23164:	vmov	d18, r0, r2
   23168:	vseleq.f64	d17, d17, d18
   2316c:	vadd.f64	d16, d16, d17
   23170:	vstr	d16, [r6]
   23174:	ldr	r0, [sp, #24]
   23178:	cmp	r0, #0
   2317c:	ldr	r0, [sp, #12]
   23180:	bne	230cc <main@@Base+0xfe48>
   23184:	b	231a8 <main@@Base+0xff24>
   23188:	mov	r7, r4
   2318c:	b	231a8 <main@@Base+0xff24>
   23190:	mov	r0, r5
   23194:	mov	r1, r7
   23198:	mov	r2, r4
   2319c:	mov	r3, #23
   231a0:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   231a4:	mov	r7, r0
   231a8:	mov	r0, r7
   231ac:	sub	sp, fp, #28
   231b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   231b4:	mov	r0, r5
   231b8:	mov	r1, r7
   231bc:	mov	r2, r4
   231c0:	mov	r3, #14
   231c4:	b	231a0 <main@@Base+0xff1c>
   231c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   231cc:	add	fp, sp, #28
   231d0:	sub	sp, sp, #12
   231d4:	mov	sl, r1
   231d8:	sub	r1, r2, r1
   231dc:	cmp	r1, #8
   231e0:	movcs	r1, #8
   231e4:	sub	r5, r1, #1
   231e8:	cmp	r5, #7
   231ec:	bhi	2341c <main@@Base+0x10198>
   231f0:	str	r3, [sp, #8]
   231f4:	add	r7, pc, #32
   231f8:	mov	r8, #0
   231fc:	mov	ip, #0
   23200:	mov	lr, #0
   23204:	mov	r9, #0
   23208:	mov	r6, #0
   2320c:	mov	r1, #0
   23210:	mov	r3, #0
   23214:	mov	r4, #0
   23218:	ldr	pc, [r7, r5, lsl #2]
   2321c:	andeq	r3, r2, r0, lsl #5
   23220:	andeq	r3, r2, r8, ror r2
   23224:	andeq	r3, r2, r0, ror r2
   23228:	andeq	r3, r2, r8, ror #4
   2322c:	andeq	r3, r2, ip, asr r2
   23230:	andeq	r3, r2, r0, asr r2
   23234:	andeq	r3, r2, r0, asr #4
   23238:	andeq	r3, r2, ip, lsr r2
   2323c:	ldrb	ip, [sl, #7]
   23240:	ldrb	r1, [sl, #6]
   23244:	mov	lr, r8
   23248:	orr	r1, ip, r1, lsl #8
   2324c:	mov	r8, r1
   23250:	ldrb	r1, [sl, #5]
   23254:	mov	r9, lr
   23258:	orr	r8, r8, r1, lsl #16
   2325c:	ldrb	r1, [sl, #4]
   23260:	mov	r6, r9
   23264:	orr	r8, r8, r1, lsl #24
   23268:	ldrb	r1, [sl, #3]
   2326c:	orr	r1, r1, r6
   23270:	ldrb	r3, [sl, #2]
   23274:	orr	r3, r1, r3, lsl #8
   23278:	ldrb	r1, [sl, #1]
   2327c:	orr	r4, r3, r1, lsl #16
   23280:	movw	r1, #28276	; 0x6e74
   23284:	movw	r7, #20577	; 0x5061
   23288:	ldr	r6, [fp, #12]
   2328c:	movt	r1, #29285	; 0x7265
   23290:	movt	r7, #18798	; 0x496e
   23294:	eor	r3, r8, r1
   23298:	ldrb	r1, [sl]
   2329c:	orr	r1, r4, r1, lsl #24
   232a0:	eor	r7, r1, r7
   232a4:	orrs	r3, r3, r7
   232a8:	bne	233d0 <main@@Base+0x1014c>
   232ac:	add	r8, sl, #8
   232b0:	sub	r1, r2, r8
   232b4:	cmp	r1, #8
   232b8:	movcs	r1, #8
   232bc:	sub	r7, r1, #1
   232c0:	cmp	r7, #7
   232c4:	bhi	2341c <main@@Base+0x10198>
   232c8:	str	r0, [sp, #4]
   232cc:	add	lr, pc, #32
   232d0:	mov	r6, #0
   232d4:	mov	r0, #0
   232d8:	mov	r1, #0
   232dc:	mov	r5, #0
   232e0:	mov	r4, #0
   232e4:	mov	r3, #0
   232e8:	mov	ip, #0
   232ec:	mov	r9, #0
   232f0:	ldr	pc, [lr, r7, lsl #2]
   232f4:	andeq	r3, r2, r8, asr r3
   232f8:	andeq	r3, r2, r0, asr r3
   232fc:	andeq	r3, r2, r8, asr #6
   23300:	andeq	r3, r2, r0, asr #6
   23304:	andeq	r3, r2, r4, lsr r3
   23308:	andeq	r3, r2, r8, lsr #6
   2330c:	andeq	r3, r2, r8, lsl r3
   23310:	andeq	r3, r2, r4, lsl r3
   23314:	ldrb	r0, [sl, #15]
   23318:	ldrb	r1, [sl, #14]
   2331c:	orr	r0, r0, r1, lsl #8
   23320:	mov	r1, r6
   23324:	mov	r6, r0
   23328:	ldrb	r0, [sl, #13]
   2332c:	mov	r5, r1
   23330:	orr	r6, r6, r0, lsl #16
   23334:	ldrb	r0, [sl, #12]
   23338:	mov	r4, r5
   2333c:	orr	r6, r6, r0, lsl #24
   23340:	ldrb	r0, [sl, #11]
   23344:	orr	r3, r0, r4
   23348:	ldrb	r0, [sl, #10]
   2334c:	orr	ip, r3, r0, lsl #8
   23350:	ldrb	r0, [sl, #9]
   23354:	orr	r9, ip, r0, lsl #16
   23358:	ldrb	r1, [r8]
   2335c:	movw	r0, #24931	; 0x6163
   23360:	movw	r3, #28005	; 0x6d65
   23364:	movt	r0, #29552	; 0x7370
   23368:	movt	r3, #20065	; 0x4e61
   2336c:	eor	r0, r6, r0
   23370:	orr	r1, r9, r1, lsl #24
   23374:	eor	r1, r1, r3
   23378:	orrs	r0, r0, r1
   2337c:	bne	2341c <main@@Base+0x10198>
   23380:	add	r6, sl, #16
   23384:	sub	r0, r2, r6
   23388:	cmp	r0, #8
   2338c:	movcs	r0, #8
   23390:	sub	r0, r0, #1
   23394:	cmp	r0, #7
   23398:	bhi	2341c <main@@Base+0x10198>
   2339c:	ldrb	r0, [r6]
   233a0:	cmp	r0, #101	; 0x65
   233a4:	bne	2341c <main@@Base+0x10198>
   233a8:	ldr	r0, [fp, #12]
   233ac:	mov	r1, r6
   233b0:	mov	r3, #1
   233b4:	mov	r8, #1
   233b8:	str	r0, [sp]
   233bc:	ldr	r0, [sp, #4]
   233c0:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   233c4:	cmp	r0, r6
   233c8:	bne	233fc <main@@Base+0x10178>
   233cc:	b	2341c <main@@Base+0x10198>
   233d0:	movw	r3, #20037	; 0x4e45
   233d4:	movt	r3, #20047	; 0x4e4f
   233d8:	teq	r1, r3
   233dc:	bne	2341c <main@@Base+0x10198>
   233e0:	mov	r1, sl
   233e4:	mov	r3, #4
   233e8:	str	r6, [sp]
   233ec:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   233f0:	cmp	r0, sl
   233f4:	beq	2341c <main@@Base+0x10198>
   233f8:	mov	r8, #0
   233fc:	mov	sl, r0
   23400:	ldr	r0, [fp, #8]
   23404:	mov	r1, #0
   23408:	str	r8, [r0]
   2340c:	str	r1, [r0, #4]
   23410:	mov	r0, #0
   23414:	ldr	r1, [sp, #8]
   23418:	str	r0, [r1]
   2341c:	mov	r0, sl
   23420:	sub	sp, fp, #28
   23424:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23428:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2342c:	add	fp, sp, #28
   23430:	sub	sp, sp, #12
   23434:	mov	r5, r1
   23438:	sub	r1, r2, r1
   2343c:	cmp	r1, #8
   23440:	movcs	r1, #8
   23444:	sub	r7, r1, #1
   23448:	cmp	r7, #7
   2344c:	bhi	235c8 <main@@Base+0x10344>
   23450:	str	r3, [sp, #8]
   23454:	add	r8, pc, #32
   23458:	mov	lr, #0
   2345c:	mov	ip, #0
   23460:	mov	r9, #0
   23464:	mov	sl, #0
   23468:	mov	r1, #0
   2346c:	mov	r3, #0
   23470:	mov	r4, #0
   23474:	mov	r6, #0
   23478:	ldr	pc, [r8, r7, lsl #2]
   2347c:	andeq	r3, r2, r0, ror #9
   23480:	ldrdeq	r3, [r2], -r8
   23484:	ldrdeq	r3, [r2], -r0
   23488:	andeq	r3, r2, r8, asr #9
   2348c:			; <UNDEFINED> instruction: 0x000234bc
   23490:			; <UNDEFINED> instruction: 0x000234b0
   23494:	andeq	r3, r2, r0, lsr #9
   23498:	muleq	r2, ip, r4
   2349c:	ldrb	ip, [r5, #7]
   234a0:	ldrb	r1, [r5, #6]
   234a4:	mov	r9, lr
   234a8:	orr	r1, ip, r1, lsl #8
   234ac:	mov	lr, r1
   234b0:	ldrb	r1, [r5, #5]
   234b4:	mov	sl, r9
   234b8:	orr	lr, lr, r1, lsl #16
   234bc:	ldrb	r1, [r5, #4]
   234c0:	orr	lr, lr, r1, lsl #24
   234c4:	mov	r1, sl
   234c8:	ldrb	r3, [r5, #3]
   234cc:	orr	r3, r3, r1
   234d0:	ldrb	r1, [r5, #2]
   234d4:	orr	r4, r3, r1, lsl #8
   234d8:	ldrb	r1, [r5, #1]
   234dc:	orr	r6, r4, r1, lsl #16
   234e0:	ldrb	r1, [r5]
   234e4:	ldr	r3, [fp, #12]
   234e8:	ldr	r8, [fp, #8]
   234ec:	orr	r1, r6, r1, lsl #24
   234f0:	movw	r6, #30769	; 0x7831
   234f4:	movt	r6, #26725	; 0x6865
   234f8:	cmp	r1, r6
   234fc:	bhi	2352c <main@@Base+0x102a8>
   23500:	teq	r1, r6
   23504:	bne	235c8 <main@@Base+0x10344>
   23508:	str	r3, [sp]
   2350c:	mov	r1, r5
   23510:	mov	r3, #4
   23514:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   23518:	cmp	r0, r5
   2351c:	beq	235c8 <main@@Base+0x10344>
   23520:	mov	r1, #0
   23524:	mov	r2, #3
   23528:	b	235b4 <main@@Base+0x10330>
   2352c:	lsr	r4, lr, #16
   23530:	movw	r7, #25959	; 0x6567
   23534:	movw	r6, #26725	; 0x6865
   23538:	orr	r4, r4, r1, lsl #16
   2353c:	movt	r7, #30830	; 0x786e
   23540:	eor	r6, r6, r1, lsr #16
   23544:	eor	r7, r4, r7
   23548:	orrs	r7, r7, r6
   2354c:	bne	23580 <main@@Base+0x102fc>
   23550:	str	r3, [sp]
   23554:	mov	r1, r5
   23558:	mov	r3, #6
   2355c:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   23560:	cmp	r0, r5
   23564:	beq	235c8 <main@@Base+0x10344>
   23568:	mvn	r2, #1
   2356c:	mvn	r1, #0
   23570:	str	r2, [r8]
   23574:	str	r1, [r8, #4]
   23578:	mov	r1, #1
   2357c:	b	235bc <main@@Base+0x10338>
   23580:	movw	r7, #30770	; 0x7832
   23584:	movt	r7, #26725	; 0x6865
   23588:	teq	r1, r7
   2358c:	bne	235c8 <main@@Base+0x10344>
   23590:	str	r3, [sp]
   23594:	mov	r1, r5
   23598:	mov	r3, #4
   2359c:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   235a0:	cmp	r0, r5
   235a4:	beq	235c8 <main@@Base+0x10344>
   235a8:	movw	r2, #48815	; 0xbeaf
   235ac:	mov	r1, #0
   235b0:	movt	r2, #32431	; 0x7eaf
   235b4:	str	r2, [r8]
   235b8:	str	r1, [r8, #4]
   235bc:	ldr	r2, [sp, #8]
   235c0:	mov	r5, r0
   235c4:	str	r1, [r2]
   235c8:	mov	r0, r5
   235cc:	sub	sp, fp, #28
   235d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   235d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   235d8:	add	fp, sp, #28
   235dc:	sub	sp, sp, #12
   235e0:	mov	sl, r1
   235e4:	sub	r1, r2, r1
   235e8:	cmp	r1, #8
   235ec:	movcs	r1, #8
   235f0:	sub	r4, r1, #1
   235f4:	cmp	r4, #7
   235f8:	bhi	237b8 <main@@Base+0x10534>
   235fc:	str	r3, [sp, #8]
   23600:	add	r8, pc, #32
   23604:	mov	r9, #0
   23608:	mov	ip, #0
   2360c:	mov	lr, #0
   23610:	mov	r7, #0
   23614:	mov	r6, #0
   23618:	mov	r3, #0
   2361c:	mov	r1, #0
   23620:	mov	r5, #0
   23624:	ldr	pc, [r8, r4, lsl #2]
   23628:	andeq	r3, r2, ip, lsl #13
   2362c:	andeq	r3, r2, r4, lsl #13
   23630:	andeq	r3, r2, ip, ror r6
   23634:	andeq	r3, r2, r4, ror r6
   23638:	andeq	r3, r2, r8, ror #12
   2363c:	andeq	r3, r2, ip, asr r6
   23640:	andeq	r3, r2, ip, asr #12
   23644:	andeq	r3, r2, r8, asr #12
   23648:	ldrb	ip, [sl, #7]
   2364c:	ldrb	r1, [sl, #6]
   23650:	mov	lr, r9
   23654:	orr	r1, ip, r1, lsl #8
   23658:	mov	r9, r1
   2365c:	ldrb	r1, [sl, #5]
   23660:	mov	r7, lr
   23664:	orr	r9, r9, r1, lsl #16
   23668:	ldrb	r1, [sl, #4]
   2366c:	mov	r6, r7
   23670:	orr	r9, r9, r1, lsl #24
   23674:	ldrb	r1, [sl, #3]
   23678:	orr	r3, r1, r6
   2367c:	ldrb	r1, [sl, #2]
   23680:	orr	r1, r3, r1, lsl #8
   23684:	ldrb	r3, [sl, #1]
   23688:	orr	r5, r1, r3, lsl #16
   2368c:	ldrb	r1, [sl]
   23690:	ldr	r3, [fp, #12]
   23694:	ldr	r6, [fp, #8]
   23698:	orr	r7, r5, r1, lsl #24
   2369c:	movw	r1, #29745	; 0x7431
   236a0:	movt	r1, #26990	; 0x696e
   236a4:	cmp	r7, r1
   236a8:	bhi	236d8 <main@@Base+0x10454>
   236ac:	teq	r7, r1
   236b0:	bne	237b8 <main@@Base+0x10534>
   236b4:	str	r3, [sp]
   236b8:	mov	r1, sl
   236bc:	mov	r3, #4
   236c0:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   236c4:	cmp	r0, sl
   236c8:	beq	237b8 <main@@Base+0x10534>
   236cc:	mov	r1, #0
   236d0:	mov	r2, #2
   236d4:	b	23724 <main@@Base+0x104a0>
   236d8:	movw	r4, #0
   236dc:	movw	r1, #29806	; 0x746e
   236e0:	movt	r4, #25959	; 0x6567
   236e4:	movt	r1, #26990	; 0x696e
   236e8:	subs	r5, r9, r4
   236ec:	sbcs	r5, r7, r1
   236f0:	bcs	23730 <main@@Base+0x104ac>
   236f4:	movw	r1, #29746	; 0x7432
   236f8:	movt	r1, #26990	; 0x696e
   236fc:	teq	r7, r1
   23700:	bne	237b8 <main@@Base+0x10534>
   23704:	str	r3, [sp]
   23708:	mov	r1, sl
   2370c:	mov	r3, #4
   23710:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   23714:	cmp	r0, sl
   23718:	beq	237b8 <main@@Base+0x10534>
   2371c:	mov	r1, #0
   23720:	mov	r2, #42	; 0x2a
   23724:	str	r2, [r6]
   23728:	str	r1, [r6, #4]
   2372c:	b	237ac <main@@Base+0x10528>
   23730:	eor	r1, r7, r1
   23734:	add	r7, r4, #12800	; 0x3200
   23738:	bic	r5, r9, #255	; 0xff
   2373c:	eor	r7, r5, r7
   23740:	orrs	r7, r7, r1
   23744:	bne	23770 <main@@Base+0x104ec>
   23748:	str	r3, [sp]
   2374c:	mov	r1, sl
   23750:	mov	r3, #7
   23754:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   23758:	cmp	r0, sl
   2375c:	beq	237b8 <main@@Base+0x10534>
   23760:	mvn	r2, #1
   23764:	mvn	r1, #0
   23768:	orr	r2, r2, #1
   2376c:	b	237a0 <main@@Base+0x1051c>
   23770:	bfc	r9, #0, #16
   23774:	eor	r7, r9, r4
   23778:	orrs	r1, r7, r1
   2377c:	bne	237b8 <main@@Base+0x10534>
   23780:	str	r3, [sp]
   23784:	mov	r1, sl
   23788:	mov	r3, #6
   2378c:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   23790:	cmp	r0, sl
   23794:	beq	237b8 <main@@Base+0x10534>
   23798:	mvn	r1, #0
   2379c:	mvn	r2, #1
   237a0:	str	r2, [r6]
   237a4:	str	r1, [r6, #4]
   237a8:	mov	r1, #1
   237ac:	ldr	r2, [sp, #8]
   237b0:	mov	sl, r0
   237b4:	str	r1, [r2]
   237b8:	mov	r0, sl
   237bc:	sub	sp, fp, #28
   237c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   237c4:	push	{r4, r5, r6, r7, fp, lr}
   237c8:	add	fp, sp, #16
   237cc:	sub	sp, sp, #8
   237d0:	mov	r5, r1
   237d4:	sub	r1, r2, r1
   237d8:	mov	r4, r3
   237dc:	cmp	r1, #8
   237e0:	movcs	r1, #8
   237e4:	sub	r3, r1, #1
   237e8:	cmp	r3, #7
   237ec:	bhi	23900 <main@@Base+0x1067c>
   237f0:	add	r7, pc, #4
   237f4:	mov	r1, #0
   237f8:	ldr	pc, [r7, r3, lsl #2]
   237fc:	andeq	r3, r2, r4, lsr r8
   23800:	andeq	r3, r2, ip, lsr #16
   23804:	andeq	r3, r2, r4, lsr #16
   23808:	andeq	r3, r2, ip, lsl r8
   2380c:	andeq	r3, r2, ip, lsl r8
   23810:	andeq	r3, r2, ip, lsl r8
   23814:	andeq	r3, r2, ip, lsl r8
   23818:	andeq	r3, r2, ip, lsl r8
   2381c:	ldrb	r3, [r5, #3]
   23820:	orr	r1, r3, r1
   23824:	ldrb	r3, [r5, #2]
   23828:	orr	r1, r1, r3, lsl #8
   2382c:	ldrb	r3, [r5, #1]
   23830:	orr	r1, r1, r3, lsl #16
   23834:	ldrb	r6, [r5]
   23838:	ldr	r3, [fp, #12]
   2383c:	ldr	r7, [fp, #8]
   23840:	orr	r1, r1, r6, lsl #24
   23844:	movw	r6, #26417	; 0x6731
   23848:	movt	r6, #28261	; 0x6e65
   2384c:	cmp	r1, r6
   23850:	bhi	23880 <main@@Base+0x105fc>
   23854:	teq	r1, r6
   23858:	bne	23900 <main@@Base+0x1067c>
   2385c:	str	r3, [sp]
   23860:	mov	r1, r5
   23864:	mov	r3, #4
   23868:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   2386c:	cmp	r0, r5
   23870:	beq	23900 <main@@Base+0x1067c>
   23874:	mvn	r1, #0
   23878:	mvn	r2, #11
   2387c:	b	238ec <main@@Base+0x10668>
   23880:	movw	r6, #26418	; 0x6732
   23884:	movt	r6, #28261	; 0x6e65
   23888:	teq	r1, r6
   2388c:	beq	238c8 <main@@Base+0x10644>
   23890:	movw	r6, #26419	; 0x6733
   23894:	movt	r6, #28261	; 0x6e65
   23898:	teq	r1, r6
   2389c:	bne	23900 <main@@Base+0x1067c>
   238a0:	str	r3, [sp]
   238a4:	mov	r1, r5
   238a8:	mov	r3, #4
   238ac:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   238b0:	cmp	r0, r5
   238b4:	beq	23900 <main@@Base+0x1067c>
   238b8:	mvn	r2, #11
   238bc:	mvn	r1, #0
   238c0:	orr	r2, r2, #2
   238c4:	b	238ec <main@@Base+0x10668>
   238c8:	str	r3, [sp]
   238cc:	mov	r1, r5
   238d0:	mov	r3, #4
   238d4:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   238d8:	cmp	r0, r5
   238dc:	beq	23900 <main@@Base+0x1067c>
   238e0:	mvn	r2, #11
   238e4:	mvn	r1, #0
   238e8:	orr	r2, r2, #1
   238ec:	str	r2, [r7]
   238f0:	str	r1, [r7, #4]
   238f4:	mov	r1, #1
   238f8:	mov	r5, r0
   238fc:	str	r1, [r4]
   23900:	mov	r0, r5
   23904:	sub	sp, fp, #16
   23908:	pop	{r4, r5, r6, r7, fp, pc}
   2390c:	push	{r4, r5, fp, lr}
   23910:	add	fp, sp, #8
   23914:	sub	sp, sp, #8
   23918:	mov	r4, r1
   2391c:	sub	r1, r2, r1
   23920:	cmp	r1, #8
   23924:	movcs	r1, #8
   23928:	sub	r1, r1, #1
   2392c:	cmp	r1, #7
   23930:	bhi	23978 <main@@Base+0x106f4>
   23934:	ldrb	r1, [r4]
   23938:	cmp	r1, #120	; 0x78
   2393c:	bne	23978 <main@@Base+0x106f4>
   23940:	ldr	r1, [fp, #12]
   23944:	mov	r5, r3
   23948:	mov	r3, #1
   2394c:	str	r1, [sp]
   23950:	mov	r1, r4
   23954:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   23958:	cmp	r0, r4
   2395c:	beq	23978 <main@@Base+0x106f4>
   23960:	ldr	r1, [fp, #8]
   23964:	mov	r2, #0
   23968:	mov	r4, r0
   2396c:	str	r2, [r1]
   23970:	str	r2, [r1, #4]
   23974:	str	r2, [r5]
   23978:	mov	r0, r4
   2397c:	sub	sp, fp, #8
   23980:	pop	{r4, r5, fp, pc}
   23984:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23988:	add	fp, sp, #28
   2398c:	sub	sp, sp, #12
   23990:	mov	sl, r1
   23994:	sub	r1, r2, r1
   23998:	cmp	r1, #8
   2399c:	movcs	r1, #8
   239a0:	sub	r6, r1, #1
   239a4:	cmp	r6, #7
   239a8:	bhi	23c24 <main@@Base+0x109a0>
   239ac:	str	r3, [sp, #8]
   239b0:	add	r9, pc, #32
   239b4:	mov	r1, #0
   239b8:	mov	ip, #0
   239bc:	mov	lr, #0
   239c0:	mov	r4, #0
   239c4:	mov	r7, #0
   239c8:	mov	r3, #0
   239cc:	mov	r5, #0
   239d0:	mov	r8, #0
   239d4:	ldr	pc, [r9, r6, lsl #2]
   239d8:	andeq	r3, r2, ip, lsr sl
   239dc:	andeq	r3, r2, r4, lsr sl
   239e0:	andeq	r3, r2, ip, lsr #20
   239e4:	andeq	r3, r2, r4, lsr #20
   239e8:	andeq	r3, r2, r8, lsl sl
   239ec:	andeq	r3, r2, ip, lsl #20
   239f0:	strdeq	r3, [r2], -ip
   239f4:	strdeq	r3, [r2], -r8
   239f8:	ldrb	ip, [sl, #7]
   239fc:	ldrb	r3, [sl, #6]
   23a00:	mov	lr, r1
   23a04:	orr	r3, ip, r3, lsl #8
   23a08:	mov	r1, r3
   23a0c:	ldrb	r3, [sl, #5]
   23a10:	mov	r4, lr
   23a14:	orr	r1, r1, r3, lsl #16
   23a18:	ldrb	r3, [sl, #4]
   23a1c:	mov	r7, r4
   23a20:	orr	r1, r1, r3, lsl #24
   23a24:	ldrb	r3, [sl, #3]
   23a28:	orr	r3, r3, r7
   23a2c:	ldrb	r7, [sl, #2]
   23a30:	orr	r5, r3, r7, lsl #8
   23a34:	ldrb	r3, [sl, #1]
   23a38:	orr	r8, r5, r3, lsl #16
   23a3c:	ldrb	r3, [sl]
   23a40:	ldr	lr, [fp, #12]
   23a44:	ldr	r9, [fp, #8]
   23a48:	orr	r6, r8, r3, lsl #24
   23a4c:	movw	r3, #20036	; 0x4e44
   23a50:	movt	r3, #20047	; 0x4e4f
   23a54:	cmp	r6, r3
   23a58:	bhi	23ab8 <main@@Base+0x10834>
   23a5c:	movw	r7, #28160	; 0x6e00
   23a60:	movw	r4, #28523	; 0x6f6b
   23a64:	and	r3, r1, #-16777216	; 0xff000000
   23a68:	movt	r7, #18017	; 0x4661
   23a6c:	movt	r4, #17007	; 0x426f
   23a70:	subs	r5, r1, r7
   23a74:	sbcs	r5, r6, r4
   23a78:	bcs	23b04 <main@@Base+0x10880>
   23a7c:	movw	r1, #27756	; 0x6c6c
   23a80:	eor	r3, r3, #1694498816	; 0x65000000
   23a84:	movt	r1, #16997	; 0x4265
   23a88:	eor	r1, r6, r1
   23a8c:	orrs	r1, r3, r1
   23a90:	bne	23c24 <main@@Base+0x109a0>
   23a94:	mov	r1, sl
   23a98:	mov	r3, #5
   23a9c:	str	lr, [sp]
   23aa0:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   23aa4:	cmp	r0, sl
   23aa8:	beq	23c24 <main@@Base+0x109a0>
   23aac:	mov	r1, #0
   23ab0:	mov	r2, #9
   23ab4:	b	23c10 <main@@Base+0x1098c>
   23ab8:	movw	r7, #26725	; 0x6865
   23abc:	mvn	r3, #-1912602624	; 0x8e000000
   23ac0:	movt	r7, #20340	; 0x4f74
   23ac4:	subs	r3, r3, r1
   23ac8:	sbcs	r3, r7, r6
   23acc:	bcc	23b40 <main@@Base+0x108bc>
   23ad0:	movw	r1, #20037	; 0x4e45
   23ad4:	movt	r1, #20047	; 0x4e4f
   23ad8:	teq	r6, r1
   23adc:	bne	23c24 <main@@Base+0x109a0>
   23ae0:	mov	r1, sl
   23ae4:	mov	r3, #4
   23ae8:	str	lr, [sp]
   23aec:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   23af0:	cmp	r0, sl
   23af4:	beq	23c24 <main@@Base+0x109a0>
   23af8:	mov	r1, #0
   23afc:	str	r1, [r9]
   23b00:	b	23c14 <main@@Base+0x10990>
   23b04:	movw	r5, #19553	; 0x4c61
   23b08:	eor	r3, r3, #1845493760	; 0x6e000000
   23b0c:	movt	r5, #19829	; 0x4d75
   23b10:	eor	r5, r6, r5
   23b14:	orrs	r3, r3, r5
   23b18:	bne	23b94 <main@@Base+0x10910>
   23b1c:	mov	r1, sl
   23b20:	mov	r3, #5
   23b24:	str	lr, [sp]
   23b28:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   23b2c:	cmp	r0, sl
   23b30:	beq	23c24 <main@@Base+0x109a0>
   23b34:	mov	r1, #0
   23b38:	mov	r2, #2
   23b3c:	b	23c10 <main@@Base+0x1098c>
   23b40:	movw	r4, #25964	; 0x656c
   23b44:	movw	ip, #28789	; 0x7075
   23b48:	movt	r4, #28282	; 0x6e7a
   23b4c:	movt	ip, #21089	; 0x5261
   23b50:	subs	r3, r1, r4
   23b54:	sbcs	r3, r6, ip
   23b58:	bcs	23bcc <main@@Base+0x10948>
   23b5c:	and	r1, r1, #-16777216	; 0xff000000
   23b60:	eor	r3, r6, r7
   23b64:	eor	r1, r1, #1912602624	; 0x72000000
   23b68:	orrs	r1, r1, r3
   23b6c:	bne	23c24 <main@@Base+0x109a0>
   23b70:	mov	r1, sl
   23b74:	mov	r3, #5
   23b78:	str	lr, [sp]
   23b7c:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   23b80:	cmp	r0, sl
   23b84:	beq	23c24 <main@@Base+0x109a0>
   23b88:	mov	r1, #0
   23b8c:	mov	r2, #11
   23b90:	b	23c10 <main@@Base+0x1098c>
   23b94:	bic	r1, r1, #255	; 0xff
   23b98:	eor	r3, r6, r4
   23b9c:	eor	r1, r1, r7
   23ba0:	orrs	r1, r1, r3
   23ba4:	bne	23c24 <main@@Base+0x109a0>
   23ba8:	mov	r1, sl
   23bac:	mov	r3, #7
   23bb0:	str	lr, [sp]
   23bb4:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   23bb8:	cmp	r0, sl
   23bbc:	beq	23c24 <main@@Base+0x109a0>
   23bc0:	mov	r1, #0
   23bc4:	mov	r2, #10
   23bc8:	b	23c10 <main@@Base+0x1098c>
   23bcc:	lsr	r5, r1, #16
   23bd0:	movw	r7, #25956	; 0x6564
   23bd4:	movw	r3, #21870	; 0x556e
   23bd8:	orr	r5, r5, r6, lsl #16
   23bdc:	movt	r7, #30067	; 0x7573
   23be0:	eor	r3, r3, r6, lsr #16
   23be4:	eor	r5, r5, r7
   23be8:	orrs	r3, r5, r3
   23bec:	bne	23c30 <main@@Base+0x109ac>
   23bf0:	mov	r1, sl
   23bf4:	mov	r3, #6
   23bf8:	str	lr, [sp]
   23bfc:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   23c00:	cmp	r0, sl
   23c04:	beq	23c24 <main@@Base+0x109a0>
   23c08:	mov	r1, #0
   23c0c:	mov	r2, #255	; 0xff
   23c10:	str	r2, [r9]
   23c14:	str	r1, [r9, #4]
   23c18:	ldr	r2, [sp, #8]
   23c1c:	str	r1, [r2]
   23c20:	mov	sl, r0
   23c24:	mov	r0, sl
   23c28:	sub	sp, fp, #28
   23c2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23c30:	eor	r1, r1, r4
   23c34:	eor	r3, r6, ip
   23c38:	orrs	r1, r1, r3
   23c3c:	bne	23c24 <main@@Base+0x109a0>
   23c40:	mov	r1, sl
   23c44:	mov	r3, #8
   23c48:	str	lr, [sp]
   23c4c:	mov	r4, #8
   23c50:	bl	2d418 <flatcc_json_parser_match_constant@@Base>
   23c54:	cmp	r0, sl
   23c58:	beq	23c24 <main@@Base+0x109a0>
   23c5c:	mov	r5, #0
   23c60:	strd	r4, [r9]
   23c64:	ldr	r1, [sp, #8]
   23c68:	str	r5, [r1]
   23c6c:	b	23c20 <main@@Base+0x1099c>
   23c70:	cmp	r0, #5
   23c74:	mov	r1, #0
   23c78:	movwcc	r1, #1
   23c7c:	mov	r0, r1
   23c80:	bx	lr
   23c84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23c88:	add	fp, sp, #28
   23c8c:	sub	sp, sp, #60	; 0x3c
   23c90:	mov	r9, r0
   23c94:	mov	r0, #0
   23c98:	mov	r4, r1
   23c9c:	mov	r1, #3
   23ca0:	mov	r6, r3
   23ca4:	mov	r8, r2
   23ca8:	str	r0, [r3]
   23cac:	ldr	r0, [r9]
   23cb0:	bl	2a328 <flatcc_builder_start_table@@Base>
   23cb4:	cmp	r0, #0
   23cb8:	bne	23d18 <main@@Base+0x10a94>
   23cbc:	cmp	r4, r8
   23cc0:	beq	23cf4 <main@@Base+0x10a70>
   23cc4:	ldrb	r0, [r4]
   23cc8:	cmp	r0, #123	; 0x7b
   23ccc:	bne	23cf4 <main@@Base+0x10a70>
   23cd0:	add	r1, r4, #1
   23cd4:	sub	r0, r8, r1
   23cd8:	cmp	r0, #2
   23cdc:	blt	23d64 <main@@Base+0x10ae0>
   23ce0:	ldrb	r0, [r1]
   23ce4:	cmp	r0, #32
   23ce8:	bls	23d54 <main@@Base+0x10ad0>
   23cec:	mov	r4, r1
   23cf0:	b	23d74 <main@@Base+0x10af0>
   23cf4:	mov	r0, r9
   23cf8:	mov	r1, r4
   23cfc:	mov	r2, r8
   23d00:	mov	r3, #21
   23d04:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   23d08:	mov	r4, r0
   23d0c:	ldr	r0, [r9, #24]
   23d10:	cmp	r0, #0
   23d14:	beq	23d3c <main@@Base+0x10ab8>
   23d18:	mov	r0, r9
   23d1c:	mov	r1, r4
   23d20:	mov	r2, r8
   23d24:	mov	r3, #33	; 0x21
   23d28:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   23d2c:	mov	r4, r0
   23d30:	mov	r0, r4
   23d34:	sub	sp, fp, #28
   23d38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23d3c:	ldr	r0, [r9]
   23d40:	bl	2ac88 <flatcc_builder_end_table@@Base>
   23d44:	cmp	r0, #0
   23d48:	str	r0, [r6]
   23d4c:	bne	23d30 <main@@Base+0x10aac>
   23d50:	b	23d18 <main@@Base+0x10a94>
   23d54:	bne	23d64 <main@@Base+0x10ae0>
   23d58:	ldrb	r0, [r4, #2]!
   23d5c:	cmp	r0, #32
   23d60:	bhi	23d74 <main@@Base+0x10af0>
   23d64:	mov	r0, r9
   23d68:	mov	r2, r8
   23d6c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   23d70:	mov	r4, r0
   23d74:	cmp	r4, r8
   23d78:	mov	r2, r8
   23d7c:	beq	23db8 <main@@Base+0x10b34>
   23d80:	ldrb	r0, [r4]
   23d84:	cmp	r0, #125	; 0x7d
   23d88:	bne	23db4 <main@@Base+0x10b30>
   23d8c:	add	r1, r4, #1
   23d90:	sub	r0, r8, r1
   23d94:	cmp	r0, #2
   23d98:	blt	26ef8 <main@@Base+0x13c74>
   23d9c:	ldrb	r0, [r1]
   23da0:	cmp	r0, #32
   23da4:	bhi	26ebc <main@@Base+0x13c38>
   23da8:	bne	26ef8 <main@@Base+0x13c74>
   23dac:	ldrb	r0, [r4, #2]!
   23db0:	b	26ef0 <main@@Base+0x13c6c>
   23db4:	mov	r2, r4
   23db8:	add	r0, r9, #12
   23dbc:	movw	r1, #25186	; 0x6262
   23dc0:	str	r9, [sp, #16]
   23dc4:	str	r6, [sp, #24]
   23dc8:	str	r0, [sp, #20]
   23dcc:	movw	r0, #257	; 0x101
   23dd0:	movt	r1, #25186	; 0x6262
   23dd4:	movt	r0, #257	; 0x101
   23dd8:	add	r0, r1, r0
   23ddc:	str	r0, [sp, #12]
   23de0:	movw	r0, #514	; 0x202
   23de4:	movt	r0, #514	; 0x202
   23de8:	add	r0, r1, r0
   23dec:	str	r0, [sp, #8]
   23df0:	cmp	r2, r8
   23df4:	mov	sl, r8
   23df8:	beq	23e4c <main@@Base+0x10bc8>
   23dfc:	ldrb	r0, [r2]
   23e00:	cmp	r0, #46	; 0x2e
   23e04:	beq	23e20 <main@@Base+0x10b9c>
   23e08:	cmp	r0, #34	; 0x22
   23e0c:	bne	23e3c <main@@Base+0x10bb8>
   23e10:	ldr	r0, [sp, #20]
   23e14:	mov	r1, #0
   23e18:	add	sl, r2, #1
   23e1c:	b	23e48 <main@@Base+0x10bc4>
   23e20:	mov	r1, r2
   23e24:	mov	r0, r9
   23e28:	mov	r2, r8
   23e2c:	mov	r3, #5
   23e30:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   23e34:	mov	sl, r0
   23e38:	b	23e4c <main@@Base+0x10bc8>
   23e3c:	ldr	r0, [sp, #20]
   23e40:	mov	r1, #1
   23e44:	mov	sl, r2
   23e48:	str	r1, [r0]
   23e4c:	sub	r0, r8, sl
   23e50:	mov	r1, #8
   23e54:	cmp	r0, #8
   23e58:	movcs	r0, r1
   23e5c:	sub	r3, r0, #1
   23e60:	cmp	r3, #7
   23e64:	bhi	240f0 <main@@Base+0x10e6c>
   23e68:	add	r5, pc, #32
   23e6c:	mov	r0, #0
   23e70:	mov	ip, #0
   23e74:	mov	lr, #0
   23e78:	mov	r7, #0
   23e7c:	mov	r2, #0
   23e80:	mov	r6, #0
   23e84:	mov	r4, #0
   23e88:	mov	r1, #0
   23e8c:	ldr	pc, [r5, r3, lsl #2]
   23e90:	strdeq	r3, [r2], -r4
   23e94:	andeq	r3, r2, ip, ror #29
   23e98:	andeq	r3, r2, r4, ror #29
   23e9c:	ldrdeq	r3, [r2], -ip
   23ea0:	ldrdeq	r3, [r2], -r0
   23ea4:	andeq	r3, r2, r4, asr #29
   23ea8:			; <UNDEFINED> instruction: 0x00023eb4
   23eac:			; <UNDEFINED> instruction: 0x00023eb0
   23eb0:	ldrb	ip, [sl, #7]
   23eb4:	ldrb	r1, [sl, #6]
   23eb8:	mov	lr, r0
   23ebc:	orr	r1, ip, r1, lsl #8
   23ec0:	mov	r0, r1
   23ec4:	ldrb	r1, [sl, #5]
   23ec8:	mov	r7, lr
   23ecc:	orr	r0, r0, r1, lsl #16
   23ed0:	ldrb	r1, [sl, #4]
   23ed4:	mov	r2, r7
   23ed8:	orr	r0, r0, r1, lsl #24
   23edc:	ldrb	r1, [sl, #3]
   23ee0:	orr	r6, r1, r2
   23ee4:	ldrb	r1, [sl, #2]
   23ee8:	orr	r4, r6, r1, lsl #8
   23eec:	ldrb	r1, [sl, #1]
   23ef0:	orr	r1, r4, r1, lsl #16
   23ef4:	movw	r2, #28526	; 0x6f6e
   23ef8:	movt	r2, #27251	; 0x6a73
   23efc:	eor	r0, r0, r2
   23f00:	ldrb	r2, [sl]
   23f04:	orr	r1, r1, r2, lsl #24
   23f08:	movw	r2, #29556	; 0x7374
   23f0c:	movt	r2, #29797	; 0x7465
   23f10:	eor	r1, r1, r2
   23f14:	orrs	r0, r0, r1
   23f18:	bne	240f0 <main@@Base+0x10e6c>
   23f1c:	add	r1, sl, #8
   23f20:	mov	r2, #8
   23f24:	sub	r0, r8, r1
   23f28:	cmp	r0, #8
   23f2c:	movcs	r0, r2
   23f30:	sub	r7, r0, #1
   23f34:	cmp	r7, #7
   23f38:	bhi	240fc <main@@Base+0x10e78>
   23f3c:	add	r0, pc, #32
   23f40:	mov	r9, #0
   23f44:	mov	ip, #0
   23f48:	mov	lr, #0
   23f4c:	mov	r6, #0
   23f50:	mov	r3, #0
   23f54:	mov	r5, #0
   23f58:	mov	r2, #0
   23f5c:	mov	r4, #0
   23f60:	ldr	pc, [r0, r7, lsl #2]
   23f64:	andeq	r3, r2, r8, asr #31
   23f68:	andeq	r3, r2, r0, asr #31
   23f6c:			; <UNDEFINED> instruction: 0x00023fb8
   23f70:			; <UNDEFINED> instruction: 0x00023fb0
   23f74:	andeq	r3, r2, r4, lsr #31
   23f78:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   23f7c:	andeq	r3, r2, r8, lsl #31
   23f80:	andeq	r3, r2, r4, lsl #31
   23f84:	ldrb	ip, [sl, #15]
   23f88:	ldrb	r0, [sl, #14]
   23f8c:	mov	lr, r9
   23f90:	orr	r0, ip, r0, lsl #8
   23f94:	mov	r9, r0
   23f98:	ldrb	r0, [sl, #13]
   23f9c:	mov	r6, lr
   23fa0:	orr	r9, r9, r0, lsl #16
   23fa4:	ldrb	r0, [sl, #12]
   23fa8:	mov	r3, r6
   23fac:	orr	r9, r9, r0, lsl #24
   23fb0:	ldrb	r0, [sl, #11]
   23fb4:	orr	r5, r0, r3
   23fb8:	ldrb	r0, [sl, #10]
   23fbc:	orr	r2, r5, r0, lsl #8
   23fc0:	ldrb	r0, [sl, #9]
   23fc4:	orr	r4, r2, r0, lsl #16
   23fc8:	ldrb	r2, [r1]
   23fcc:	movw	r0, #28769	; 0x7061
   23fd0:	movw	r3, #25958	; 0x6566
   23fd4:	movt	r0, #27000	; 0x6978
   23fd8:	movt	r3, #28786	; 0x7072
   23fdc:	eor	r0, r9, r0
   23fe0:	orr	r2, r4, r2, lsl #24
   23fe4:	eor	r2, r2, r3
   23fe8:	orrs	r0, r0, r2
   23fec:	bne	240fc <main@@Base+0x10e78>
   23ff0:	add	ip, sl, #16
   23ff4:	mov	r0, #8
   23ff8:	sub	r9, r8, ip
   23ffc:	cmp	r9, #8
   24000:	movcc	r0, r9
   24004:	sub	r2, r0, #1
   24008:	cmp	r2, #7
   2400c:	bhi	24464 <main@@Base+0x111e0>
   24010:	add	r7, pc, #24
   24014:	mov	r0, #0
   24018:	mov	r1, #0
   2401c:	mov	r3, #0
   24020:	mov	r6, #0
   24024:	mov	r4, #0
   24028:	mov	r5, #0
   2402c:	ldr	pc, [r7, r2, lsl #2]
   24030:	andeq	r4, r2, r0, lsl #1
   24034:	andeq	r4, r2, r8, ror r0
   24038:	andeq	r4, r2, r0, ror r0
   2403c:	andeq	r4, r2, r8, rrx
   24040:	andeq	r4, r2, r8, asr r0
   24044:	andeq	r4, r2, r0, asr r0
   24048:	andeq	r4, r2, r0, asr r0
   2404c:	andeq	r4, r2, r0, asr r0
   24050:	ldrb	r1, [sl, #21]
   24054:	lsl	r1, r1, #16
   24058:	ldrb	r2, [sl, #20]
   2405c:	mov	r3, r0
   24060:	orr	r1, r1, r2, lsl #24
   24064:	mov	r0, r1
   24068:	ldrb	r1, [sl, #19]
   2406c:	orr	r6, r1, r3
   24070:	ldrb	r1, [sl, #18]
   24074:	orr	r4, r6, r1, lsl #8
   24078:	ldrb	r1, [sl, #17]
   2407c:	orr	r5, r4, r1, lsl #16
   24080:	mov	r6, r0
   24084:	movw	r1, #0
   24088:	movw	r3, #26990	; 0x696e
   2408c:	bfc	r6, #0, #16
   24090:	movt	r1, #26418	; 0x6732
   24094:	movt	r3, #29299	; 0x7273
   24098:	eor	r2, r6, r1
   2409c:	ldrb	r1, [ip]
   240a0:	orr	r1, r5, r1, lsl #24
   240a4:	eor	r5, r1, r3
   240a8:	orrs	r2, r2, r5
   240ac:	bne	24108 <main@@Base+0x10e84>
   240b0:	cmp	r9, #7
   240b4:	blt	24464 <main@@Base+0x111e0>
   240b8:	ldr	r2, [sp, #20]
   240bc:	mov	r1, sl
   240c0:	ldrb	r0, [r1, #22]!
   240c4:	ldr	r2, [r2]
   240c8:	cmp	r2, #0
   240cc:	beq	24164 <main@@Base+0x10ee0>
   240d0:	cmp	r0, #33	; 0x21
   240d4:	bcc	240e0 <main@@Base+0x10e5c>
   240d8:	cmp	r0, #58	; 0x3a
   240dc:	bne	24464 <main@@Base+0x111e0>
   240e0:	ldr	r0, [sp, #20]
   240e4:	mov	r2, #0
   240e8:	str	r2, [r0]
   240ec:	b	24170 <main@@Base+0x10eec>
   240f0:	mov	r0, r9
   240f4:	mov	r1, sl
   240f8:	b	24470 <main@@Base+0x111ec>
   240fc:	ldr	r9, [sp, #16]
   24100:	mov	r0, r9
   24104:	b	24470 <main@@Base+0x111ec>
   24108:	cmp	r9, #6
   2410c:	blt	24408 <main@@Base+0x11184>
   24110:	movw	r2, #26990	; 0x696e
   24114:	and	r0, r0, #-16777216	; 0xff000000
   24118:	movt	r2, #29299	; 0x7273
   2411c:	eor	r0, r0, #1728053248	; 0x67000000
   24120:	eor	r1, r1, r2
   24124:	orrs	r0, r0, r1
   24128:	bne	24408 <main@@Base+0x11184>
   2412c:	ldr	r2, [sp, #20]
   24130:	mov	r1, sl
   24134:	ldrb	r0, [r1, #21]!
   24138:	ldr	r2, [r2]
   2413c:	cmp	r2, #0
   24140:	beq	24194 <main@@Base+0x10f10>
   24144:	cmp	r0, #33	; 0x21
   24148:	bcc	24154 <main@@Base+0x10ed0>
   2414c:	cmp	r0, #58	; 0x3a
   24150:	bne	24408 <main@@Base+0x11184>
   24154:	ldr	r0, [sp, #20]
   24158:	mov	r2, #0
   2415c:	str	r2, [r0]
   24160:	b	241a0 <main@@Base+0x10f1c>
   24164:	cmp	r0, #34	; 0x22
   24168:	bne	24464 <main@@Base+0x111e0>
   2416c:	add	r1, sl, #23
   24170:	ldr	r5, [sp, #16]
   24174:	sub	r0, r8, r1
   24178:	cmp	r0, #2
   2417c:	blt	241d4 <main@@Base+0x10f50>
   24180:	ldrb	r0, [r1]
   24184:	cmp	r0, #32
   24188:	bls	241c0 <main@@Base+0x10f3c>
   2418c:	mov	r4, r1
   24190:	b	241ec <main@@Base+0x10f68>
   24194:	cmp	r0, #34	; 0x22
   24198:	bne	24408 <main@@Base+0x11184>
   2419c:	add	r1, sl, #22
   241a0:	sub	r0, r8, r1
   241a4:	cmp	r0, #2
   241a8:	blt	24254 <main@@Base+0x10fd0>
   241ac:	ldrb	r0, [r1]
   241b0:	cmp	r0, #32
   241b4:	bls	24240 <main@@Base+0x10fbc>
   241b8:	mov	r4, r1
   241bc:	b	2426c <main@@Base+0x10fe8>
   241c0:	bne	241d4 <main@@Base+0x10f50>
   241c4:	mov	r4, r1
   241c8:	ldrb	r0, [r4, #1]!
   241cc:	cmp	r0, #32
   241d0:	bhi	241ec <main@@Base+0x10f68>
   241d4:	mov	r0, r5
   241d8:	mov	r2, r8
   241dc:	mov	r4, ip
   241e0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   241e4:	mov	ip, r4
   241e8:	mov	r4, r0
   241ec:	mov	r6, ip
   241f0:	cmp	r4, r8
   241f4:	beq	24228 <main@@Base+0x10fa4>
   241f8:	ldrb	r0, [r4]
   241fc:	cmp	r0, #58	; 0x3a
   24200:	bne	24228 <main@@Base+0x10fa4>
   24204:	add	r1, r4, #1
   24208:	sub	r0, r8, r1
   2420c:	cmp	r0, #2
   24210:	blt	242d0 <main@@Base+0x1104c>
   24214:	ldrb	r0, [r1]
   24218:	cmp	r0, #32
   2421c:	bls	242c0 <main@@Base+0x1103c>
   24220:	mov	r4, r1
   24224:	b	242e0 <main@@Base+0x1105c>
   24228:	mov	r0, r5
   2422c:	mov	r1, r4
   24230:	mov	r2, r8
   24234:	mov	r3, #4
   24238:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   2423c:	b	242dc <main@@Base+0x11058>
   24240:	bne	24254 <main@@Base+0x10fd0>
   24244:	mov	r4, r1
   24248:	ldrb	r0, [r4, #1]!
   2424c:	cmp	r0, #32
   24250:	bhi	2426c <main@@Base+0x10fe8>
   24254:	ldr	r0, [sp, #16]
   24258:	mov	r2, r8
   2425c:	mov	r4, ip
   24260:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   24264:	mov	ip, r4
   24268:	mov	r4, r0
   2426c:	mov	r7, ip
   24270:	cmp	r4, r8
   24274:	beq	242a8 <main@@Base+0x11024>
   24278:	ldrb	r0, [r4]
   2427c:	cmp	r0, #58	; 0x3a
   24280:	bne	242a8 <main@@Base+0x11024>
   24284:	add	r1, r4, #1
   24288:	sub	r0, r8, r1
   2428c:	cmp	r0, #2
   24290:	blt	24398 <main@@Base+0x11114>
   24294:	ldrb	r0, [r1]
   24298:	cmp	r0, #32
   2429c:	bls	24388 <main@@Base+0x11104>
   242a0:	mov	r4, r1
   242a4:	b	243a8 <main@@Base+0x11124>
   242a8:	ldr	r0, [sp, #16]
   242ac:	mov	r1, r4
   242b0:	mov	r2, r8
   242b4:	mov	r3, #4
   242b8:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   242bc:	b	243a4 <main@@Base+0x11120>
   242c0:	bne	242d0 <main@@Base+0x1104c>
   242c4:	ldrb	r0, [r4, #2]!
   242c8:	cmp	r0, #32
   242cc:	bhi	242e0 <main@@Base+0x1105c>
   242d0:	mov	r0, r5
   242d4:	mov	r2, r8
   242d8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   242dc:	mov	r4, r0
   242e0:	mov	ip, r6
   242e4:	cmp	r6, r4
   242e8:	beq	24464 <main@@Base+0x111e0>
   242ec:	ldr	r9, [sp, #16]
   242f0:	mov	r1, #2
   242f4:	ldr	r0, [r9]
   242f8:	bl	2a328 <flatcc_builder_start_table@@Base>
   242fc:	cmp	r0, #0
   24300:	bne	26f0c <main@@Base+0x13c88>
   24304:	cmp	r4, r8
   24308:	beq	24340 <main@@Base+0x110bc>
   2430c:	ldrb	r0, [r4]
   24310:	cmp	r0, #123	; 0x7b
   24314:	bne	24340 <main@@Base+0x110bc>
   24318:	ldr	r6, [sp, #24]
   2431c:	add	r1, r4, #1
   24320:	sub	r0, r8, r1
   24324:	cmp	r0, #2
   24328:	blt	2463c <main@@Base+0x113b8>
   2432c:	ldrb	r0, [r1]
   24330:	cmp	r0, #32
   24334:	bls	2462c <main@@Base+0x113a8>
   24338:	mov	r4, r1
   2433c:	b	2464c <main@@Base+0x113c8>
   24340:	mov	r0, r9
   24344:	mov	r1, r4
   24348:	mov	r2, r8
   2434c:	mov	r3, #21
   24350:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   24354:	ldr	r6, [sp, #24]
   24358:	mov	r4, r0
   2435c:	ldr	r0, [r9, #24]
   24360:	cmp	r0, #0
   24364:	bne	26f0c <main@@Base+0x13c88>
   24368:	ldr	r0, [r9]
   2436c:	bl	2ac88 <flatcc_builder_end_table@@Base>
   24370:	cmp	r0, #0
   24374:	beq	26f0c <main@@Base+0x13c88>
   24378:	mov	r7, r0
   2437c:	ldr	r0, [r9]
   24380:	mov	r1, #1
   24384:	b	26400 <main@@Base+0x1317c>
   24388:	bne	24398 <main@@Base+0x11114>
   2438c:	ldrb	r0, [r4, #2]!
   24390:	cmp	r0, #32
   24394:	bhi	243a8 <main@@Base+0x11124>
   24398:	ldr	r0, [sp, #16]
   2439c:	mov	r2, r8
   243a0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   243a4:	mov	r4, r0
   243a8:	mov	ip, r7
   243ac:	cmp	r7, r4
   243b0:	beq	24408 <main@@Base+0x11184>
   243b4:	ldr	r9, [sp, #16]
   243b8:	mov	r1, #9
   243bc:	ldr	r0, [r9]
   243c0:	bl	2a328 <flatcc_builder_start_table@@Base>
   243c4:	cmp	r0, #0
   243c8:	bne	26f0c <main@@Base+0x13c88>
   243cc:	cmp	r4, r8
   243d0:	beq	24538 <main@@Base+0x112b4>
   243d4:	ldrb	r0, [r4]
   243d8:	cmp	r0, #123	; 0x7b
   243dc:	bne	24538 <main@@Base+0x112b4>
   243e0:	ldr	r6, [sp, #24]
   243e4:	add	r1, r4, #1
   243e8:	sub	r0, r8, r1
   243ec:	cmp	r0, #2
   243f0:	blt	24e5c <main@@Base+0x11bd8>
   243f4:	ldrb	r0, [r1]
   243f8:	cmp	r0, #32
   243fc:	bls	24e4c <main@@Base+0x11bc8>
   24400:	mov	r4, r1
   24404:	b	24e6c <main@@Base+0x11be8>
   24408:	movw	r0, #0
   2440c:	movt	r0, #26418	; 0x6732
   24410:	add	r0, r0, #65536	; 0x10000
   24414:	eor	r0, r6, r0
   24418:	orrs	r0, r0, r5
   2441c:	bne	24464 <main@@Base+0x111e0>
   24420:	cmp	r9, #7
   24424:	ldr	r9, [sp, #16]
   24428:	blt	24468 <main@@Base+0x111e4>
   2442c:	ldr	r2, [sp, #20]
   24430:	mov	r1, sl
   24434:	ldrb	r0, [r1, #22]!
   24438:	ldr	r2, [r2]
   2443c:	cmp	r2, #0
   24440:	beq	24580 <main@@Base+0x112fc>
   24444:	cmp	r0, #33	; 0x21
   24448:	bcc	24454 <main@@Base+0x111d0>
   2444c:	cmp	r0, #58	; 0x3a
   24450:	bne	24468 <main@@Base+0x111e4>
   24454:	ldr	r0, [sp, #20]
   24458:	mov	r2, #0
   2445c:	str	r2, [r0]
   24460:	b	2458c <main@@Base+0x11308>
   24464:	ldr	r9, [sp, #16]
   24468:	mov	r0, r9
   2446c:	mov	r1, ip
   24470:	mov	r2, r8
   24474:	bl	2d5e0 <flatcc_json_parser_unmatched_symbol@@Base>
   24478:	ldr	r6, [sp, #24]
   2447c:	mov	r4, r0
   24480:	sub	r0, r8, r4
   24484:	cmp	r0, #2
   24488:	blt	244b4 <main@@Base+0x11230>
   2448c:	ldrb	r0, [r4]
   24490:	cmp	r0, #32
   24494:	bls	244a0 <main@@Base+0x1121c>
   24498:	mov	r2, r4
   2449c:	b	244c8 <main@@Base+0x11244>
   244a0:	bne	244b4 <main@@Base+0x11230>
   244a4:	mov	r2, r4
   244a8:	ldrb	r0, [r2, #1]!
   244ac:	cmp	r0, #32
   244b0:	bhi	244c8 <main@@Base+0x11244>
   244b4:	mov	r0, r9
   244b8:	mov	r1, r4
   244bc:	mov	r2, r8
   244c0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   244c4:	mov	r2, r0
   244c8:	cmp	r2, r8
   244cc:	beq	26e90 <main@@Base+0x13c0c>
   244d0:	ldrb	r0, [r2]
   244d4:	cmp	r0, #44	; 0x2c
   244d8:	bne	26e98 <main@@Base+0x13c14>
   244dc:	add	r1, r2, #1
   244e0:	sub	r0, r8, r1
   244e4:	cmp	r0, #2
   244e8:	blt	24510 <main@@Base+0x1128c>
   244ec:	ldrb	r0, [r1]
   244f0:	cmp	r0, #32
   244f4:	bls	24500 <main@@Base+0x1127c>
   244f8:	mov	r2, r1
   244fc:	b	24520 <main@@Base+0x1129c>
   24500:	bne	24510 <main@@Base+0x1128c>
   24504:	ldrb	r0, [r2, #2]!
   24508:	cmp	r0, #32
   2450c:	bhi	24520 <main@@Base+0x1129c>
   24510:	mov	r0, r9
   24514:	mov	r2, r8
   24518:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2451c:	mov	r2, r0
   24520:	cmp	r2, r8
   24524:	beq	26ec4 <main@@Base+0x13c40>
   24528:	ldrb	r0, [r2]
   2452c:	cmp	r0, #125	; 0x7d
   24530:	bne	23df0 <main@@Base+0x10b6c>
   24534:	b	26ea0 <main@@Base+0x13c1c>
   24538:	mov	r0, r9
   2453c:	mov	r1, r4
   24540:	mov	r2, r8
   24544:	mov	r3, #21
   24548:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   2454c:	ldr	r6, [sp, #24]
   24550:	mov	r4, r0
   24554:	ldr	r0, [r9, #24]
   24558:	cmp	r0, #0
   2455c:	bne	26f0c <main@@Base+0x13c88>
   24560:	ldr	r0, [r9]
   24564:	bl	2ac88 <flatcc_builder_end_table@@Base>
   24568:	cmp	r0, #0
   2456c:	beq	26f0c <main@@Base+0x13c88>
   24570:	mov	r7, r0
   24574:	ldr	r0, [r9]
   24578:	mov	r1, #0
   2457c:	b	26400 <main@@Base+0x1317c>
   24580:	cmp	r0, #34	; 0x22
   24584:	bne	24468 <main@@Base+0x111e4>
   24588:	add	r1, sl, #23
   2458c:	sub	r0, r8, r1
   24590:	cmp	r0, #2
   24594:	blt	245c0 <main@@Base+0x1133c>
   24598:	ldrb	r0, [r1]
   2459c:	cmp	r0, #32
   245a0:	bls	245ac <main@@Base+0x11328>
   245a4:	mov	r4, r1
   245a8:	b	245d8 <main@@Base+0x11354>
   245ac:	bne	245c0 <main@@Base+0x1133c>
   245b0:	mov	r4, r1
   245b4:	ldrb	r0, [r4, #1]!
   245b8:	cmp	r0, #32
   245bc:	bhi	245d8 <main@@Base+0x11354>
   245c0:	mov	r0, r9
   245c4:	mov	r2, r8
   245c8:	mov	r4, ip
   245cc:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   245d0:	mov	ip, r4
   245d4:	mov	r4, r0
   245d8:	mov	r5, ip
   245dc:	cmp	r4, r8
   245e0:	beq	24614 <main@@Base+0x11390>
   245e4:	ldrb	r0, [r4]
   245e8:	cmp	r0, #58	; 0x3a
   245ec:	bne	24614 <main@@Base+0x11390>
   245f0:	add	r1, r4, #1
   245f4:	sub	r0, r8, r1
   245f8:	cmp	r0, #2
   245fc:	blt	26350 <main@@Base+0x130cc>
   24600:	ldrb	r0, [r1]
   24604:	cmp	r0, #32
   24608:	bls	26340 <main@@Base+0x130bc>
   2460c:	mov	r4, r1
   24610:	b	26360 <main@@Base+0x130dc>
   24614:	mov	r0, r9
   24618:	mov	r1, r4
   2461c:	mov	r2, r8
   24620:	mov	r3, #4
   24624:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   24628:	b	2635c <main@@Base+0x130d8>
   2462c:	bne	2463c <main@@Base+0x113b8>
   24630:	ldrb	r0, [r4, #2]!
   24634:	cmp	r0, #32
   24638:	bhi	2464c <main@@Base+0x113c8>
   2463c:	mov	r0, r9
   24640:	mov	r2, r8
   24644:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   24648:	mov	r4, r0
   2464c:	cmp	r4, r8
   24650:	mov	r2, r8
   24654:	beq	24690 <main@@Base+0x1140c>
   24658:	ldrb	r0, [r4]
   2465c:	cmp	r0, #125	; 0x7d
   24660:	bne	2468c <main@@Base+0x11408>
   24664:	add	r1, r4, #1
   24668:	sub	r0, r8, r1
   2466c:	cmp	r0, #2
   24670:	blt	26e00 <main@@Base+0x13b7c>
   24674:	ldrb	r0, [r1]
   24678:	cmp	r0, #32
   2467c:	bhi	26440 <main@@Base+0x131bc>
   24680:	bne	26e00 <main@@Base+0x13b7c>
   24684:	ldrb	r0, [r4, #2]!
   24688:	b	26df8 <main@@Base+0x13b74>
   2468c:	mov	r2, r4
   24690:	cmp	r2, r8
   24694:	mov	r1, r8
   24698:	beq	246f0 <main@@Base+0x1146c>
   2469c:	ldrb	r0, [r2]
   246a0:	cmp	r0, #46	; 0x2e
   246a4:	beq	246c4 <main@@Base+0x11440>
   246a8:	cmp	r0, #34	; 0x22
   246ac:	bne	246e0 <main@@Base+0x1145c>
   246b0:	ldr	r0, [sp, #20]
   246b4:	mov	r1, #0
   246b8:	str	r1, [r0]
   246bc:	add	r1, r2, #1
   246c0:	b	246f0 <main@@Base+0x1146c>
   246c4:	mov	r1, r2
   246c8:	mov	r0, r9
   246cc:	mov	r2, r8
   246d0:	mov	r3, #5
   246d4:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   246d8:	mov	r1, r0
   246dc:	b	246f0 <main@@Base+0x1146c>
   246e0:	ldr	r0, [sp, #20]
   246e4:	mov	r1, #1
   246e8:	str	r1, [r0]
   246ec:	mov	r1, r2
   246f0:	sub	r0, r8, r1
   246f4:	mov	r2, #8
   246f8:	cmp	r0, #8
   246fc:	movcs	r0, r2
   24700:	sub	r7, r0, #1
   24704:	cmp	r7, #7
   24708:	bhi	248ec <main@@Base+0x11668>
   2470c:	add	r0, pc, #32
   24710:	mov	r9, #0
   24714:	mov	ip, #0
   24718:	mov	lr, #0
   2471c:	mov	sl, #0
   24720:	mov	r3, #0
   24724:	mov	r5, #0
   24728:	mov	r2, #0
   2472c:	mov	r4, #0
   24730:	ldr	pc, [r0, r7, lsl #2]
   24734:	muleq	r2, r8, r7
   24738:	muleq	r2, r0, r7
   2473c:	andeq	r4, r2, r8, lsl #15
   24740:	andeq	r4, r2, r0, lsl #15
   24744:	andeq	r4, r2, r4, ror r7
   24748:	andeq	r4, r2, r8, ror #14
   2474c:	andeq	r4, r2, r8, asr r7
   24750:	andeq	r4, r2, r4, asr r7
   24754:	ldrb	ip, [r1, #7]
   24758:	ldrb	r0, [r1, #6]
   2475c:	mov	lr, r9
   24760:	orr	r0, ip, r0, lsl #8
   24764:	mov	r9, r0
   24768:	ldrb	r0, [r1, #5]
   2476c:	mov	sl, lr
   24770:	orr	r9, r9, r0, lsl #16
   24774:	ldrb	r0, [r1, #4]
   24778:	mov	r3, sl
   2477c:	orr	r9, r9, r0, lsl #24
   24780:	ldrb	r0, [r1, #3]
   24784:	orr	r5, r0, r3
   24788:	ldrb	r0, [r1, #2]
   2478c:	orr	r2, r5, r0, lsl #8
   24790:	ldrb	r0, [r1, #1]
   24794:	orr	r4, r2, r0, lsl #16
   24798:	ldrb	r2, [r1]
   2479c:	movw	r0, #25186	; 0x6262
   247a0:	movw	r3, #24929	; 0x6161
   247a4:	movt	r0, #24418	; 0x5f62
   247a8:	movt	r3, #24929	; 0x6161
   247ac:	eor	r0, r9, r0
   247b0:	ldr	r9, [sp, #16]
   247b4:	orr	r2, r4, r2, lsl #24
   247b8:	eor	r2, r2, r3
   247bc:	orrs	r0, r0, r2
   247c0:	bne	248ec <main@@Base+0x11668>
   247c4:	add	r4, r1, #8
   247c8:	mov	r0, #8
   247cc:	sub	lr, r8, r4
   247d0:	cmp	lr, #8
   247d4:	movcc	r0, lr
   247d8:	sub	ip, r0, #1
   247dc:	cmp	ip, #7
   247e0:	bhi	24cb8 <main@@Base+0x11a34>
   247e4:	str	r4, [sp, #4]
   247e8:	add	r9, pc, #32
   247ec:	mov	r2, #0
   247f0:	mov	r6, #0
   247f4:	mov	sl, #0
   247f8:	mov	r5, #0
   247fc:	mov	r7, #0
   24800:	mov	r4, #0
   24804:	mov	r0, #0
   24808:	mov	r3, #0
   2480c:	ldr	pc, [r9, ip, lsl #2]
   24810:	andeq	r4, r2, r4, ror r8
   24814:	andeq	r4, r2, ip, ror #16
   24818:	andeq	r4, r2, r4, ror #16
   2481c:	andeq	r4, r2, ip, asr r8
   24820:	andeq	r4, r2, r0, asr r8
   24824:	andeq	r4, r2, r4, asr #16
   24828:	andeq	r4, r2, r4, lsr r8
   2482c:	andeq	r4, r2, r0, lsr r8
   24830:	ldrb	r6, [r1, #15]
   24834:	ldrb	r0, [r1, #14]
   24838:	mov	sl, r2
   2483c:	orr	r0, r6, r0, lsl #8
   24840:	mov	r2, r0
   24844:	ldrb	r0, [r1, #13]
   24848:	mov	r5, sl
   2484c:	orr	r2, r2, r0, lsl #16
   24850:	ldrb	r0, [r1, #12]
   24854:	mov	r7, r5
   24858:	orr	r2, r2, r0, lsl #24
   2485c:	ldrb	r0, [r1, #11]
   24860:	orr	r4, r0, r7
   24864:	ldrb	r0, [r1, #10]
   24868:	orr	r0, r4, r0, lsl #8
   2486c:	ldrb	r3, [r1, #9]
   24870:	orr	r3, r0, r3, lsl #16
   24874:	ldr	r4, [sp, #4]
   24878:	movw	r7, #29440	; 0x7300
   2487c:	bic	r0, r2, #255	; 0xff
   24880:	movt	r7, #25968	; 0x6570
   24884:	eor	r7, r0, r7
   24888:	ldrb	r0, [r4]
   2488c:	orr	r0, r3, r0, lsl #24
   24890:	movw	r3, #29556	; 0x7374
   24894:	movt	r3, #25183	; 0x625f
   24898:	eor	r0, r0, r3
   2489c:	orrs	r3, r7, r0
   248a0:	bne	248f4 <main@@Base+0x11670>
   248a4:	ldr	r9, [sp, #16]
   248a8:	ldr	r6, [sp, #24]
   248ac:	cmp	lr, #8
   248b0:	blt	24cb8 <main@@Base+0x11a34>
   248b4:	ldr	r3, [sp, #20]
   248b8:	mov	r2, r1
   248bc:	ldrb	r0, [r2, #15]!
   248c0:	ldr	r3, [r3]
   248c4:	cmp	r3, #0
   248c8:	beq	24950 <main@@Base+0x116cc>
   248cc:	cmp	r0, #33	; 0x21
   248d0:	bcc	248dc <main@@Base+0x11658>
   248d4:	cmp	r0, #58	; 0x3a
   248d8:	bne	24cb8 <main@@Base+0x11a34>
   248dc:	ldr	r0, [sp, #20]
   248e0:	mov	r1, #0
   248e4:	str	r1, [r0]
   248e8:	b	2495c <main@@Base+0x116d8>
   248ec:	mov	r0, r9
   248f0:	b	24cc0 <main@@Base+0x11a3c>
   248f4:	movw	r3, #29791	; 0x745f
   248f8:	ldr	r9, [sp, #16]
   248fc:	ldr	r6, [sp, #24]
   24900:	movt	r3, #24946	; 0x6172
   24904:	eor	r2, r2, r3
   24908:	orrs	r0, r2, r0
   2490c:	bne	24cb8 <main@@Base+0x11a34>
   24910:	cmp	lr, #9
   24914:	blt	24cb8 <main@@Base+0x11a34>
   24918:	ldr	r3, [sp, #20]
   2491c:	mov	r2, r1
   24920:	ldrb	r0, [r2, #16]!
   24924:	ldr	r3, [r3]
   24928:	cmp	r3, #0
   2492c:	beq	2497c <main@@Base+0x116f8>
   24930:	cmp	r0, #33	; 0x21
   24934:	bcc	24940 <main@@Base+0x116bc>
   24938:	cmp	r0, #58	; 0x3a
   2493c:	bne	24cb8 <main@@Base+0x11a34>
   24940:	ldr	r0, [sp, #20]
   24944:	mov	r1, #0
   24948:	str	r1, [r0]
   2494c:	b	24988 <main@@Base+0x11704>
   24950:	cmp	r0, #34	; 0x22
   24954:	bne	24cb8 <main@@Base+0x11a34>
   24958:	add	r2, r1, #16
   2495c:	sub	r0, r8, r2
   24960:	cmp	r0, #2
   24964:	blt	249bc <main@@Base+0x11738>
   24968:	ldrb	r0, [r2]
   2496c:	cmp	r0, #32
   24970:	bls	249a8 <main@@Base+0x11724>
   24974:	mov	r7, r2
   24978:	b	249d0 <main@@Base+0x1174c>
   2497c:	cmp	r0, #34	; 0x22
   24980:	bne	24cb8 <main@@Base+0x11a34>
   24984:	add	r2, r1, #17
   24988:	sub	r0, r8, r2
   2498c:	cmp	r0, #2
   24990:	blt	24a34 <main@@Base+0x117b0>
   24994:	ldrb	r0, [r2]
   24998:	cmp	r0, #32
   2499c:	bls	24a20 <main@@Base+0x1179c>
   249a0:	mov	r7, r2
   249a4:	b	24a48 <main@@Base+0x117c4>
   249a8:	bne	249bc <main@@Base+0x11738>
   249ac:	mov	r7, r2
   249b0:	ldrb	r0, [r7, #1]!
   249b4:	cmp	r0, #32
   249b8:	bhi	249d0 <main@@Base+0x1174c>
   249bc:	mov	r1, r2
   249c0:	mov	r0, r9
   249c4:	mov	r2, r8
   249c8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   249cc:	mov	r7, r0
   249d0:	cmp	r7, r8
   249d4:	beq	24a08 <main@@Base+0x11784>
   249d8:	ldrb	r0, [r7]
   249dc:	cmp	r0, #58	; 0x3a
   249e0:	bne	24a08 <main@@Base+0x11784>
   249e4:	add	r1, r7, #1
   249e8:	sub	r0, r8, r1
   249ec:	cmp	r0, #2
   249f0:	blt	24ab4 <main@@Base+0x11830>
   249f4:	ldrb	r0, [r1]
   249f8:	cmp	r0, #32
   249fc:	bls	24aa4 <main@@Base+0x11820>
   24a00:	mov	r7, r1
   24a04:	b	24ac4 <main@@Base+0x11840>
   24a08:	mov	r0, r9
   24a0c:	mov	r1, r7
   24a10:	mov	r2, r8
   24a14:	mov	r3, #4
   24a18:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   24a1c:	b	24ac0 <main@@Base+0x1183c>
   24a20:	bne	24a34 <main@@Base+0x117b0>
   24a24:	mov	r7, r2
   24a28:	ldrb	r0, [r7, #1]!
   24a2c:	cmp	r0, #32
   24a30:	bhi	24a48 <main@@Base+0x117c4>
   24a34:	mov	r1, r2
   24a38:	mov	r0, r9
   24a3c:	mov	r2, r8
   24a40:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   24a44:	mov	r7, r0
   24a48:	cmp	r7, r8
   24a4c:	beq	24a8c <main@@Base+0x11808>
   24a50:	ldrb	r0, [r7]
   24a54:	cmp	r0, #58	; 0x3a
   24a58:	bne	24a8c <main@@Base+0x11808>
   24a5c:	add	r1, r7, #1
   24a60:	sub	r0, r8, r1
   24a64:	cmp	r0, #2
   24a68:	blt	24c34 <main@@Base+0x119b0>
   24a6c:	ldrb	r0, [r1]
   24a70:	cmp	r0, #32
   24a74:	bls	24c18 <main@@Base+0x11994>
   24a78:	ldr	r9, [sp, #16]
   24a7c:	ldr	r6, [sp, #24]
   24a80:	ldr	r4, [sp, #4]
   24a84:	mov	r7, r1
   24a88:	b	24c44 <main@@Base+0x119c0>
   24a8c:	mov	r0, r9
   24a90:	mov	r1, r7
   24a94:	mov	r2, r8
   24a98:	mov	r3, #4
   24a9c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   24aa0:	b	24c40 <main@@Base+0x119bc>
   24aa4:	bne	24ab4 <main@@Base+0x11830>
   24aa8:	ldrb	r0, [r7, #2]!
   24aac:	cmp	r0, #32
   24ab0:	bhi	24ac4 <main@@Base+0x11840>
   24ab4:	mov	r0, r9
   24ab8:	mov	r2, r8
   24abc:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   24ac0:	mov	r7, r0
   24ac4:	cmp	r4, r7
   24ac8:	beq	24cb8 <main@@Base+0x11a34>
   24acc:	mov	r5, #0
   24ad0:	cmp	r7, r8
   24ad4:	str	r5, [fp, #-36]	; 0xffffffdc
   24ad8:	str	r5, [fp, #-40]	; 0xffffffd8
   24adc:	str	r5, [sp, #36]	; 0x24
   24ae0:	str	r5, [sp, #32]
   24ae4:	str	r5, [sp, #44]	; 0x2c
   24ae8:	beq	24b48 <main@@Base+0x118c4>
   24aec:	sub	r0, fp, #40	; 0x28
   24af0:	mov	r1, r7
   24af4:	mov	r2, r8
   24af8:	add	r3, sp, #44	; 0x2c
   24afc:	str	r0, [sp]
   24b00:	mov	r0, r9
   24b04:	bl	2edac <flatcc_json_parser_integer@@Base>
   24b08:	cmp	r0, r7
   24b0c:	beq	24b54 <main@@Base+0x118d0>
   24b10:	mov	r4, r0
   24b14:	ldr	r0, [sp, #44]	; 0x2c
   24b18:	ldr	r5, [fp, #-40]	; 0xffffffd8
   24b1c:	ldr	sl, [fp, #-36]	; 0xffffffdc
   24b20:	cmp	r0, #0
   24b24:	beq	24b64 <main@@Base+0x118e0>
   24b28:	subs	r0, r5, #1
   24b2c:	sbcs	r0, sl, #-2147483648	; 0x80000000
   24b30:	bcc	24b90 <main@@Base+0x1190c>
   24b34:	mov	r0, r9
   24b38:	mov	r1, r4
   24b3c:	mov	r2, r8
   24b40:	mov	r3, #8
   24b44:	b	24b7c <main@@Base+0x118f8>
   24b48:	mov	sl, #0
   24b4c:	mov	r4, r8
   24b50:	b	24ba0 <main@@Base+0x1191c>
   24b54:	mov	r5, #0
   24b58:	mov	sl, #0
   24b5c:	mov	r4, r7
   24b60:	b	24ba0 <main@@Base+0x1191c>
   24b64:	cmn	sl, #1
   24b68:	bgt	24b98 <main@@Base+0x11914>
   24b6c:	mov	r0, r9
   24b70:	mov	r1, r4
   24b74:	mov	r2, r8
   24b78:	mov	r3, #7
   24b7c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   24b80:	mov	r4, r0
   24b84:	mov	r5, #0
   24b88:	mov	sl, #0
   24b8c:	b	24ba0 <main@@Base+0x1191c>
   24b90:	rsbs	r5, r5, #0
   24b94:	rsc	sl, sl, #0
   24b98:	str	r5, [sp, #32]
   24b9c:	str	sl, [sp, #36]	; 0x24
   24ba0:	cmp	r7, r4
   24ba4:	bne	24be0 <main@@Base+0x1195c>
   24ba8:	movw	r3, #16948	; 0x4234
   24bac:	add	r0, sp, #32
   24bb0:	mov	r1, r7
   24bb4:	mov	r2, r8
   24bb8:	movt	r3, #4
   24bbc:	str	r0, [sp]
   24bc0:	mov	r0, r9
   24bc4:	bl	22958 <main@@Base+0xf6d4>
   24bc8:	mov	r4, r0
   24bcc:	cmp	r0, r7
   24bd0:	cmpne	r4, r8
   24bd4:	beq	26f08 <main@@Base+0x13c84>
   24bd8:	ldr	r5, [sp, #32]
   24bdc:	ldr	sl, [sp, #36]	; 0x24
   24be0:	orrs	r0, r5, sl
   24be4:	bne	24bf4 <main@@Base+0x11970>
   24be8:	ldrb	r0, [r9, #8]
   24bec:	tst	r0, #2
   24bf0:	beq	24ccc <main@@Base+0x11a48>
   24bf4:	ldr	r0, [r9]
   24bf8:	mov	r1, #0
   24bfc:	mov	r2, #8
   24c00:	mov	r3, #8
   24c04:	bl	2b574 <flatcc_builder_table_add@@Base>
   24c08:	cmp	r0, #0
   24c0c:	beq	26f08 <main@@Base+0x13c84>
   24c10:	stm	r0, {r5, sl}
   24c14:	b	24ccc <main@@Base+0x11a48>
   24c18:	ldr	r9, [sp, #16]
   24c1c:	ldr	r6, [sp, #24]
   24c20:	ldr	r4, [sp, #4]
   24c24:	bne	24c34 <main@@Base+0x119b0>
   24c28:	ldrb	r0, [r7, #2]!
   24c2c:	cmp	r0, #32
   24c30:	bhi	24c44 <main@@Base+0x119c0>
   24c34:	mov	r0, r9
   24c38:	mov	r2, r8
   24c3c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   24c40:	mov	r7, r0
   24c44:	cmp	r4, r7
   24c48:	beq	24cb8 <main@@Base+0x11a34>
   24c4c:	mov	r5, #0
   24c50:	cmp	r7, r8
   24c54:	str	r5, [fp, #-36]	; 0xffffffdc
   24c58:	str	r5, [fp, #-40]	; 0xffffffd8
   24c5c:	str	r5, [sp, #44]	; 0x2c
   24c60:	str	r5, [sp, #32]
   24c64:	beq	24d84 <main@@Base+0x11b00>
   24c68:	sub	r0, fp, #40	; 0x28
   24c6c:	mov	r1, r7
   24c70:	mov	r2, r8
   24c74:	add	r3, sp, #32
   24c78:	str	r0, [sp]
   24c7c:	mov	r0, r9
   24c80:	bl	2edac <flatcc_json_parser_integer@@Base>
   24c84:	cmp	r0, r7
   24c88:	beq	24d8c <main@@Base+0x11b08>
   24c8c:	mov	r4, r0
   24c90:	ldr	r0, [sp, #32]
   24c94:	cmp	r0, #0
   24c98:	beq	24d94 <main@@Base+0x11b10>
   24c9c:	mov	r0, r9
   24ca0:	mov	r1, r4
   24ca4:	mov	r2, r8
   24ca8:	mov	r3, #8
   24cac:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   24cb0:	mov	r4, r0
   24cb4:	b	24dd0 <main@@Base+0x11b4c>
   24cb8:	mov	r0, r9
   24cbc:	mov	r1, r4
   24cc0:	mov	r2, r8
   24cc4:	bl	2d5e0 <flatcc_json_parser_unmatched_symbol@@Base>
   24cc8:	mov	r4, r0
   24ccc:	sub	r0, r8, r4
   24cd0:	cmp	r0, #2
   24cd4:	blt	24d00 <main@@Base+0x11a7c>
   24cd8:	ldrb	r0, [r4]
   24cdc:	cmp	r0, #32
   24ce0:	bls	24cec <main@@Base+0x11a68>
   24ce4:	mov	r2, r4
   24ce8:	b	24d14 <main@@Base+0x11a90>
   24cec:	bne	24d00 <main@@Base+0x11a7c>
   24cf0:	mov	r2, r4
   24cf4:	ldrb	r0, [r2, #1]!
   24cf8:	cmp	r0, #32
   24cfc:	bhi	24d14 <main@@Base+0x11a90>
   24d00:	mov	r0, r9
   24d04:	mov	r1, r4
   24d08:	mov	r2, r8
   24d0c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   24d10:	mov	r2, r0
   24d14:	cmp	r2, r8
   24d18:	beq	26414 <main@@Base+0x13190>
   24d1c:	ldrb	r0, [r2]
   24d20:	cmp	r0, #44	; 0x2c
   24d24:	bne	2641c <main@@Base+0x13198>
   24d28:	add	r1, r2, #1
   24d2c:	sub	r0, r8, r1
   24d30:	cmp	r0, #2
   24d34:	blt	24d5c <main@@Base+0x11ad8>
   24d38:	ldrb	r0, [r1]
   24d3c:	cmp	r0, #32
   24d40:	bls	24d4c <main@@Base+0x11ac8>
   24d44:	mov	r2, r1
   24d48:	b	24d6c <main@@Base+0x11ae8>
   24d4c:	bne	24d5c <main@@Base+0x11ad8>
   24d50:	ldrb	r0, [r2, #2]!
   24d54:	cmp	r0, #32
   24d58:	bhi	24d6c <main@@Base+0x11ae8>
   24d5c:	mov	r0, r9
   24d60:	mov	r2, r8
   24d64:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   24d68:	mov	r2, r0
   24d6c:	cmp	r2, r8
   24d70:	beq	26448 <main@@Base+0x131c4>
   24d74:	ldrb	r0, [r2]
   24d78:	cmp	r0, #125	; 0x7d
   24d7c:	bne	24690 <main@@Base+0x1140c>
   24d80:	b	26424 <main@@Base+0x131a0>
   24d84:	mov	r4, r8
   24d88:	b	24dd0 <main@@Base+0x11b4c>
   24d8c:	mov	r4, r7
   24d90:	b	24dd0 <main@@Base+0x11b4c>
   24d94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24d98:	cmp	r0, #0
   24d9c:	beq	24dc0 <main@@Base+0x11b3c>
   24da0:	ldr	r9, [sp, #16]
   24da4:	mov	r1, r4
   24da8:	mov	r2, r8
   24dac:	mov	r3, #7
   24db0:	mov	r0, r9
   24db4:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   24db8:	mov	r4, r0
   24dbc:	b	24dcc <main@@Base+0x11b48>
   24dc0:	ldr	r5, [fp, #-40]	; 0xffffffd8
   24dc4:	ldr	r9, [sp, #16]
   24dc8:	str	r5, [sp, #44]	; 0x2c
   24dcc:	ldr	r6, [sp, #24]
   24dd0:	cmp	r7, r4
   24dd4:	bne	24e14 <main@@Base+0x11b90>
   24dd8:	movw	r3, #16960	; 0x4240
   24ddc:	add	r0, sp, #44	; 0x2c
   24de0:	mov	r1, r7
   24de4:	mov	r2, r8
   24de8:	movt	r3, #4
   24dec:	str	r0, [sp]
   24df0:	mov	r0, r9
   24df4:	bl	22ba4 <main@@Base+0xf920>
   24df8:	mov	r4, r0
   24dfc:	cmp	r0, r7
   24e00:	cmpne	r4, r8
   24e04:	beq	26f08 <main@@Base+0x13c84>
   24e08:	ldr	r5, [sp, #44]	; 0x2c
   24e0c:	ldr	r9, [sp, #16]
   24e10:	ldr	r6, [sp, #24]
   24e14:	cmp	r5, #0
   24e18:	bne	24e28 <main@@Base+0x11ba4>
   24e1c:	ldrb	r0, [r9, #8]
   24e20:	tst	r0, #2
   24e24:	beq	24ccc <main@@Base+0x11a48>
   24e28:	ldr	r0, [r9]
   24e2c:	mov	r1, #1
   24e30:	mov	r2, #4
   24e34:	mov	r3, #4
   24e38:	bl	2b574 <flatcc_builder_table_add@@Base>
   24e3c:	cmp	r0, #0
   24e40:	beq	26f08 <main@@Base+0x13c84>
   24e44:	str	r5, [r0]
   24e48:	b	24ccc <main@@Base+0x11a48>
   24e4c:	bne	24e5c <main@@Base+0x11bd8>
   24e50:	ldrb	r0, [r4, #2]!
   24e54:	cmp	r0, #32
   24e58:	bhi	24e6c <main@@Base+0x11be8>
   24e5c:	mov	r0, r9
   24e60:	mov	r2, r8
   24e64:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   24e68:	mov	r4, r0
   24e6c:	cmp	r4, r8
   24e70:	mov	r2, r8
   24e74:	beq	24eb0 <main@@Base+0x11c2c>
   24e78:	ldrb	r0, [r4]
   24e7c:	cmp	r0, #125	; 0x7d
   24e80:	bne	24eac <main@@Base+0x11c28>
   24e84:	add	r1, r4, #1
   24e88:	sub	r0, r8, r1
   24e8c:	cmp	r0, #2
   24e90:	blt	26e3c <main@@Base+0x13bb8>
   24e94:	ldrb	r0, [r1]
   24e98:	cmp	r0, #32
   24e9c:	bhi	26480 <main@@Base+0x131fc>
   24ea0:	bne	26e3c <main@@Base+0x13bb8>
   24ea4:	ldrb	r0, [r4, #2]!
   24ea8:	b	26e34 <main@@Base+0x13bb0>
   24eac:	mov	r2, r4
   24eb0:	cmp	r2, r8
   24eb4:	mov	sl, r8
   24eb8:	beq	24f0c <main@@Base+0x11c88>
   24ebc:	ldrb	r0, [r2]
   24ec0:	cmp	r0, #46	; 0x2e
   24ec4:	beq	24ee0 <main@@Base+0x11c5c>
   24ec8:	cmp	r0, #34	; 0x22
   24ecc:	bne	24efc <main@@Base+0x11c78>
   24ed0:	ldr	r0, [sp, #20]
   24ed4:	mov	r1, #0
   24ed8:	add	sl, r2, #1
   24edc:	b	24f08 <main@@Base+0x11c84>
   24ee0:	mov	r1, r2
   24ee4:	mov	r0, r9
   24ee8:	mov	r2, r8
   24eec:	mov	r3, #5
   24ef0:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   24ef4:	mov	sl, r0
   24ef8:	b	24f0c <main@@Base+0x11c88>
   24efc:	ldr	r0, [sp, #20]
   24f00:	mov	r1, #1
   24f04:	mov	sl, r2
   24f08:	str	r1, [r0]
   24f0c:	sub	r9, r8, sl
   24f10:	mov	r0, #8
   24f14:	cmp	r9, #8
   24f18:	movcc	r0, r9
   24f1c:	sub	r3, r0, #1
   24f20:	cmp	r3, #7
   24f24:	bhi	2591c <main@@Base+0x12698>
   24f28:	add	r5, pc, #32
   24f2c:	mov	r0, #0
   24f30:	mov	ip, #0
   24f34:	mov	lr, #0
   24f38:	mov	r7, #0
   24f3c:	mov	r2, #0
   24f40:	mov	r6, #0
   24f44:	mov	r4, #0
   24f48:	mov	r1, #0
   24f4c:	ldr	pc, [r5, r3, lsl #2]
   24f50:			; <UNDEFINED> instruction: 0x00024fb4
   24f54:	andeq	r4, r2, ip, lsr #31
   24f58:	andeq	r4, r2, r4, lsr #31
   24f5c:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   24f60:	muleq	r2, r0, pc	; <UNPREDICTABLE>
   24f64:	andeq	r4, r2, r4, lsl #31
   24f68:	andeq	r4, r2, r4, ror pc
   24f6c:	andeq	r4, r2, r0, ror pc
   24f70:	ldrb	ip, [sl, #7]
   24f74:	ldrb	r1, [sl, #6]
   24f78:	mov	lr, r0
   24f7c:	orr	r1, ip, r1, lsl #8
   24f80:	mov	r0, r1
   24f84:	ldrb	r1, [sl, #5]
   24f88:	mov	r7, lr
   24f8c:	orr	r0, r0, r1, lsl #16
   24f90:	ldrb	r1, [sl, #4]
   24f94:	mov	r2, r7
   24f98:	orr	r0, r0, r1, lsl #24
   24f9c:	ldrb	r1, [sl, #3]
   24fa0:	orr	r6, r1, r2
   24fa4:	ldrb	r1, [sl, #2]
   24fa8:	orr	r4, r6, r1, lsl #8
   24fac:	ldrb	r1, [sl, #1]
   24fb0:	orr	r1, r4, r1, lsl #16
   24fb4:	ldrb	r2, [sl]
   24fb8:	orr	r7, r1, r2, lsl #24
   24fbc:	movw	r1, #25442	; 0x6362
   24fc0:	movt	r1, #25443	; 0x6363
   24fc4:	cmp	r7, r1
   24fc8:	bhi	25058 <main@@Base+0x11dd4>
   24fcc:	movw	r1, #13108	; 0x3334
   24fd0:	movt	r1, #12594	; 0x3132
   24fd4:	eor	r5, r0, r1
   24fd8:	movw	r1, #24929	; 0x6161
   24fdc:	movt	r1, #24929	; 0x6161
   24fe0:	eor	r0, r7, r1
   24fe4:	orrs	r0, r5, r0
   24fe8:	bne	250c0 <main@@Base+0x11e3c>
   24fec:	add	r7, sl, #8
   24ff0:	mov	r1, #8
   24ff4:	sub	r0, r8, r7
   24ff8:	cmp	r0, #8
   24ffc:	movcc	r1, r0
   25000:	sub	r1, r1, #1
   25004:	cmp	r1, #7
   25008:	bhi	261ac <main@@Base+0x12f28>
   2500c:	ldrb	r1, [r7]
   25010:	cmp	r1, #53	; 0x35
   25014:	bne	261ac <main@@Base+0x12f28>
   25018:	cmp	r0, #2
   2501c:	blt	261ac <main@@Base+0x12f28>
   25020:	ldr	r2, [sp, #20]
   25024:	mov	r1, sl
   25028:	ldrb	r0, [r1, #9]!
   2502c:	ldr	r2, [r2]
   25030:	cmp	r2, #0
   25034:	beq	2526c <main@@Base+0x11fe8>
   25038:	cmp	r0, #33	; 0x21
   2503c:	bcc	25048 <main@@Base+0x11dc4>
   25040:	cmp	r0, #58	; 0x3a
   25044:	bne	261ac <main@@Base+0x12f28>
   25048:	ldr	r0, [sp, #20]
   2504c:	mov	r2, #0
   25050:	str	r2, [r0]
   25054:	b	25278 <main@@Base+0x11ff4>
   25058:	movw	r1, #13108	; 0x3334
   2505c:	movt	r1, #12594	; 0x3132
   25060:	eor	r5, r0, r1
   25064:	ldr	r0, [sp, #12]
   25068:	eor	r0, r7, r0
   2506c:	orrs	r0, r5, r0
   25070:	bne	25110 <main@@Base+0x11e8c>
   25074:	cmp	r9, #9
   25078:	ldr	r9, [sp, #16]
   2507c:	mov	r7, sl
   25080:	blt	253a0 <main@@Base+0x1211c>
   25084:	ldr	r2, [sp, #20]
   25088:	mov	r1, sl
   2508c:	ldrb	r0, [r1, #8]!
   25090:	ldr	r2, [r2]
   25094:	cmp	r2, #0
   25098:	beq	25168 <main@@Base+0x11ee4>
   2509c:	cmp	r0, #33	; 0x21
   250a0:	bcc	250b0 <main@@Base+0x11e2c>
   250a4:	cmp	r0, #58	; 0x3a
   250a8:	mov	r7, sl
   250ac:	bne	253a0 <main@@Base+0x1211c>
   250b0:	ldr	r0, [sp, #20]
   250b4:	mov	r2, #0
   250b8:	str	r2, [r0]
   250bc:	b	25178 <main@@Base+0x11ef4>
   250c0:	teq	r7, r1
   250c4:	bne	25660 <main@@Base+0x123dc>
   250c8:	cmp	r9, #5
   250cc:	mov	r1, sl
   250d0:	blt	25628 <main@@Base+0x123a4>
   250d4:	ldr	r1, [sp, #20]
   250d8:	mov	r2, sl
   250dc:	ldrb	r0, [r2, #4]!
   250e0:	ldr	r1, [r1]
   250e4:	cmp	r1, #0
   250e8:	beq	25198 <main@@Base+0x11f14>
   250ec:	cmp	r0, #33	; 0x21
   250f0:	bcc	25100 <main@@Base+0x11e7c>
   250f4:	cmp	r0, #58	; 0x3a
   250f8:	mov	r1, sl
   250fc:	bne	25628 <main@@Base+0x123a4>
   25100:	ldr	r0, [sp, #20]
   25104:	mov	r1, #0
   25108:	str	r1, [r0]
   2510c:	b	251a8 <main@@Base+0x11f24>
   25110:	movw	r0, #25443	; 0x6363
   25114:	movt	r0, #25443	; 0x6363
   25118:	teq	r7, r0
   2511c:	bne	258c0 <main@@Base+0x1263c>
   25120:	cmp	r9, #5
   25124:	mov	r1, sl
   25128:	blt	25888 <main@@Base+0x12604>
   2512c:	ldr	r1, [sp, #20]
   25130:	mov	r2, sl
   25134:	ldrb	r0, [r2, #4]!
   25138:	ldr	r1, [r1]
   2513c:	cmp	r1, #0
   25140:	beq	251c8 <main@@Base+0x11f44>
   25144:	cmp	r0, #33	; 0x21
   25148:	bcc	25158 <main@@Base+0x11ed4>
   2514c:	cmp	r0, #58	; 0x3a
   25150:	mov	r1, sl
   25154:	bne	25888 <main@@Base+0x12604>
   25158:	ldr	r0, [sp, #20]
   2515c:	mov	r1, #0
   25160:	str	r1, [r0]
   25164:	b	251d8 <main@@Base+0x11f54>
   25168:	cmp	r0, #34	; 0x22
   2516c:	mov	r7, sl
   25170:	bne	253a0 <main@@Base+0x1211c>
   25174:	add	r1, sl, #9
   25178:	sub	r0, r8, r1
   2517c:	cmp	r0, #2
   25180:	blt	2520c <main@@Base+0x11f88>
   25184:	ldrb	r0, [r1]
   25188:	cmp	r0, #32
   2518c:	bls	251f8 <main@@Base+0x11f74>
   25190:	mov	r7, r1
   25194:	b	2521c <main@@Base+0x11f98>
   25198:	cmp	r0, #34	; 0x22
   2519c:	mov	r1, sl
   251a0:	bne	25628 <main@@Base+0x123a4>
   251a4:	add	r2, sl, #5
   251a8:	sub	r0, r8, r2
   251ac:	cmp	r0, #2
   251b0:	blt	252ac <main@@Base+0x12028>
   251b4:	ldrb	r0, [r2]
   251b8:	cmp	r0, #32
   251bc:	bls	25298 <main@@Base+0x12014>
   251c0:	mov	r1, r2
   251c4:	b	252c0 <main@@Base+0x1203c>
   251c8:	cmp	r0, #34	; 0x22
   251cc:	mov	r1, sl
   251d0:	bne	25888 <main@@Base+0x12604>
   251d4:	add	r2, sl, #5
   251d8:	sub	r0, r8, r2
   251dc:	cmp	r0, #2
   251e0:	blt	25320 <main@@Base+0x1209c>
   251e4:	ldrb	r0, [r2]
   251e8:	cmp	r0, #32
   251ec:	bls	2530c <main@@Base+0x12088>
   251f0:	mov	r1, r2
   251f4:	b	25334 <main@@Base+0x120b0>
   251f8:	bne	2520c <main@@Base+0x11f88>
   251fc:	mov	r7, r1
   25200:	ldrb	r0, [r7, #1]!
   25204:	cmp	r0, #32
   25208:	bhi	2521c <main@@Base+0x11f98>
   2520c:	mov	r0, r9
   25210:	mov	r2, r8
   25214:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   25218:	mov	r7, r0
   2521c:	cmp	r7, r8
   25220:	beq	25254 <main@@Base+0x11fd0>
   25224:	ldrb	r0, [r7]
   25228:	cmp	r0, #58	; 0x3a
   2522c:	bne	25254 <main@@Base+0x11fd0>
   25230:	add	r1, r7, #1
   25234:	sub	r0, r8, r1
   25238:	cmp	r0, #2
   2523c:	blt	25390 <main@@Base+0x1210c>
   25240:	ldrb	r0, [r1]
   25244:	cmp	r0, #32
   25248:	bls	25380 <main@@Base+0x120fc>
   2524c:	mov	r7, r1
   25250:	b	253a0 <main@@Base+0x1211c>
   25254:	mov	r0, r9
   25258:	mov	r1, r7
   2525c:	mov	r2, r8
   25260:	mov	r3, #4
   25264:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   25268:	b	2539c <main@@Base+0x12118>
   2526c:	cmp	r0, #34	; 0x22
   25270:	bne	261ac <main@@Base+0x12f28>
   25274:	add	r1, sl, #10
   25278:	sub	r0, r8, r1
   2527c:	cmp	r0, #2
   25280:	blt	255a4 <main@@Base+0x12320>
   25284:	ldrb	r0, [r1]
   25288:	cmp	r0, #32
   2528c:	bls	25590 <main@@Base+0x1230c>
   25290:	mov	r9, r1
   25294:	b	255b4 <main@@Base+0x12330>
   25298:	bne	252ac <main@@Base+0x12028>
   2529c:	mov	r1, r2
   252a0:	ldrb	r0, [r1, #1]!
   252a4:	cmp	r0, #32
   252a8:	bhi	252c0 <main@@Base+0x1203c>
   252ac:	ldr	r0, [sp, #16]
   252b0:	mov	r1, r2
   252b4:	mov	r2, r8
   252b8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   252bc:	mov	r1, r0
   252c0:	cmp	r1, r8
   252c4:	beq	252f8 <main@@Base+0x12074>
   252c8:	ldrb	r0, [r1]
   252cc:	cmp	r0, #58	; 0x3a
   252d0:	bne	252f8 <main@@Base+0x12074>
   252d4:	add	r2, r1, #1
   252d8:	sub	r0, r8, r2
   252dc:	cmp	r0, #2
   252e0:	blt	25614 <main@@Base+0x12390>
   252e4:	ldrb	r0, [r2]
   252e8:	cmp	r0, #32
   252ec:	bls	25604 <main@@Base+0x12380>
   252f0:	mov	r1, r2
   252f4:	b	25628 <main@@Base+0x123a4>
   252f8:	ldr	r0, [sp, #16]
   252fc:	mov	r2, r8
   25300:	mov	r3, #4
   25304:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   25308:	b	25624 <main@@Base+0x123a0>
   2530c:	bne	25320 <main@@Base+0x1209c>
   25310:	mov	r1, r2
   25314:	ldrb	r0, [r1, #1]!
   25318:	cmp	r0, #32
   2531c:	bhi	25334 <main@@Base+0x120b0>
   25320:	ldr	r0, [sp, #16]
   25324:	mov	r1, r2
   25328:	mov	r2, r8
   2532c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   25330:	mov	r1, r0
   25334:	cmp	r1, r8
   25338:	beq	2536c <main@@Base+0x120e8>
   2533c:	ldrb	r0, [r1]
   25340:	cmp	r0, #58	; 0x3a
   25344:	bne	2536c <main@@Base+0x120e8>
   25348:	add	r2, r1, #1
   2534c:	sub	r0, r8, r2
   25350:	cmp	r0, #2
   25354:	blt	25874 <main@@Base+0x125f0>
   25358:	ldrb	r0, [r2]
   2535c:	cmp	r0, #32
   25360:	bls	25864 <main@@Base+0x125e0>
   25364:	mov	r1, r2
   25368:	b	25888 <main@@Base+0x12604>
   2536c:	ldr	r0, [sp, #16]
   25370:	mov	r2, r8
   25374:	mov	r3, #4
   25378:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   2537c:	b	25884 <main@@Base+0x12600>
   25380:	bne	25390 <main@@Base+0x1210c>
   25384:	ldrb	r0, [r7, #2]!
   25388:	cmp	r0, #32
   2538c:	bhi	253a0 <main@@Base+0x1211c>
   25390:	mov	r0, r9
   25394:	mov	r2, r8
   25398:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2539c:	mov	r7, r0
   253a0:	cmp	sl, r7
   253a4:	beq	25428 <main@@Base+0x121a4>
   253a8:	mov	r5, #0
   253ac:	cmp	r7, r8
   253b0:	str	r5, [fp, #-36]	; 0xffffffdc
   253b4:	str	r5, [fp, #-40]	; 0xffffffd8
   253b8:	str	r5, [sp, #36]	; 0x24
   253bc:	str	r5, [sp, #32]
   253c0:	str	r5, [sp, #44]	; 0x2c
   253c4:	beq	25494 <main@@Base+0x12210>
   253c8:	sub	r0, fp, #40	; 0x28
   253cc:	mov	r1, r7
   253d0:	mov	r2, r8
   253d4:	add	r3, sp, #44	; 0x2c
   253d8:	str	r0, [sp]
   253dc:	mov	r0, r9
   253e0:	bl	2edac <flatcc_json_parser_integer@@Base>
   253e4:	ldr	r6, [sp, #24]
   253e8:	cmp	r0, r7
   253ec:	beq	254a4 <main@@Base+0x12220>
   253f0:	mov	r4, r0
   253f4:	ldr	r0, [sp, #44]	; 0x2c
   253f8:	ldr	r5, [fp, #-40]	; 0xffffffd8
   253fc:	ldr	sl, [fp, #-36]	; 0xffffffdc
   25400:	cmp	r0, #0
   25404:	beq	254b4 <main@@Base+0x12230>
   25408:	subs	r0, r5, #1
   2540c:	sbcs	r0, sl, #-2147483648	; 0x80000000
   25410:	bcc	254e0 <main@@Base+0x1225c>
   25414:	mov	r0, r9
   25418:	mov	r1, r4
   2541c:	mov	r2, r8
   25420:	mov	r3, #8
   25424:	b	254cc <main@@Base+0x12248>
   25428:	add	r7, sl, #8
   2542c:	mov	r1, #8
   25430:	sub	r0, r8, r7
   25434:	cmp	r0, #8
   25438:	movcc	r1, r0
   2543c:	sub	r1, r1, #1
   25440:	cmp	r1, #7
   25444:	bhi	261b0 <main@@Base+0x12f2c>
   25448:	ldrb	r1, [r7]
   2544c:	cmp	r1, #53	; 0x35
   25450:	bne	261b0 <main@@Base+0x12f2c>
   25454:	cmp	r0, #2
   25458:	blt	261ac <main@@Base+0x12f28>
   2545c:	ldr	r2, [sp, #20]
   25460:	mov	r1, sl
   25464:	ldrb	r0, [r1, #9]!
   25468:	ldr	r2, [r2]
   2546c:	cmp	r2, #0
   25470:	beq	25564 <main@@Base+0x122e0>
   25474:	cmp	r0, #33	; 0x21
   25478:	bcc	25484 <main@@Base+0x12200>
   2547c:	cmp	r0, #58	; 0x3a
   25480:	bne	261ac <main@@Base+0x12f28>
   25484:	ldr	r0, [sp, #20]
   25488:	mov	r2, #0
   2548c:	str	r2, [r0]
   25490:	b	25570 <main@@Base+0x122ec>
   25494:	ldr	r6, [sp, #24]
   25498:	mov	sl, #0
   2549c:	mov	r4, r8
   254a0:	b	254f0 <main@@Base+0x1226c>
   254a4:	mov	r5, #0
   254a8:	mov	sl, #0
   254ac:	mov	r4, r7
   254b0:	b	254f0 <main@@Base+0x1226c>
   254b4:	cmn	sl, #1
   254b8:	bgt	254e8 <main@@Base+0x12264>
   254bc:	mov	r0, r9
   254c0:	mov	r1, r4
   254c4:	mov	r2, r8
   254c8:	mov	r3, #7
   254cc:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   254d0:	mov	r4, r0
   254d4:	mov	r5, #0
   254d8:	mov	sl, #0
   254dc:	b	254f0 <main@@Base+0x1226c>
   254e0:	rsbs	r5, r5, #0
   254e4:	rsc	sl, sl, #0
   254e8:	str	r5, [sp, #32]
   254ec:	str	sl, [sp, #36]	; 0x24
   254f0:	cmp	r7, r4
   254f4:	bne	25530 <main@@Base+0x122ac>
   254f8:	movw	r3, #16996	; 0x4264
   254fc:	add	r0, sp, #32
   25500:	mov	r1, r7
   25504:	mov	r2, r8
   25508:	movt	r3, #4
   2550c:	str	r0, [sp]
   25510:	mov	r0, r9
   25514:	bl	22958 <main@@Base+0xf6d4>
   25518:	mov	r4, r0
   2551c:	cmp	r0, r7
   25520:	cmpne	r4, r8
   25524:	beq	26f0c <main@@Base+0x13c88>
   25528:	ldr	r5, [sp, #32]
   2552c:	ldr	sl, [sp, #36]	; 0x24
   25530:	orrs	r0, r5, sl
   25534:	bne	25544 <main@@Base+0x122c0>
   25538:	ldrb	r0, [r9, #8]
   2553c:	tst	r0, #2
   25540:	beq	261c8 <main@@Base+0x12f44>
   25544:	ldr	r0, [r9]
   25548:	mov	r1, #5
   2554c:	mov	r2, #8
   25550:	mov	r3, #8
   25554:	bl	2b574 <flatcc_builder_table_add@@Base>
   25558:	cmp	r0, #0
   2555c:	bne	25d20 <main@@Base+0x12a9c>
   25560:	b	26f0c <main@@Base+0x13c88>
   25564:	cmp	r0, #34	; 0x22
   25568:	bne	261ac <main@@Base+0x12f28>
   2556c:	add	r1, sl, #10
   25570:	sub	r0, r8, r1
   25574:	cmp	r0, #2
   25578:	blt	25d68 <main@@Base+0x12ae4>
   2557c:	ldrb	r0, [r1]
   25580:	cmp	r0, #32
   25584:	bls	25d54 <main@@Base+0x12ad0>
   25588:	mov	r9, r1
   2558c:	b	25d78 <main@@Base+0x12af4>
   25590:	bne	255a4 <main@@Base+0x12320>
   25594:	mov	r9, r1
   25598:	ldrb	r0, [r9, #1]!
   2559c:	cmp	r0, #32
   255a0:	bhi	255b4 <main@@Base+0x12330>
   255a4:	ldr	r0, [sp, #16]
   255a8:	mov	r2, r8
   255ac:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   255b0:	mov	r9, r0
   255b4:	cmp	r9, r8
   255b8:	beq	255ec <main@@Base+0x12368>
   255bc:	ldrb	r0, [r9]
   255c0:	cmp	r0, #58	; 0x3a
   255c4:	bne	255ec <main@@Base+0x12368>
   255c8:	add	r1, r9, #1
   255cc:	sub	r0, r8, r1
   255d0:	cmp	r0, #2
   255d4:	blt	25dd8 <main@@Base+0x12b54>
   255d8:	ldrb	r0, [r1]
   255dc:	cmp	r0, #32
   255e0:	bls	25dc8 <main@@Base+0x12b44>
   255e4:	mov	r9, r1
   255e8:	b	25de8 <main@@Base+0x12b64>
   255ec:	ldr	r0, [sp, #16]
   255f0:	mov	r1, r9
   255f4:	mov	r2, r8
   255f8:	mov	r3, #4
   255fc:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   25600:	b	25de4 <main@@Base+0x12b60>
   25604:	bne	25614 <main@@Base+0x12390>
   25608:	ldrb	r0, [r1, #2]!
   2560c:	cmp	r0, #32
   25610:	bhi	25628 <main@@Base+0x123a4>
   25614:	ldr	r0, [sp, #16]
   25618:	mov	r1, r2
   2561c:	mov	r2, r8
   25620:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   25624:	mov	r1, r0
   25628:	cmp	sl, r1
   2562c:	beq	25660 <main@@Base+0x123dc>
   25630:	ldr	r9, [sp, #16]
   25634:	mov	r2, r8
   25638:	add	r3, sp, #28
   2563c:	mov	r0, r9
   25640:	bl	2f2d8 <flatcc_json_parser_build_string@@Base>
   25644:	mov	r4, r0
   25648:	ldr	r0, [sp, #28]
   2564c:	cmp	r0, #0
   25650:	beq	26f0c <main@@Base+0x13c88>
   25654:	ldr	r0, [r9]
   25658:	mov	r1, #0
   2565c:	b	25f58 <main@@Base+0x12cd4>
   25660:	movw	r1, #25186	; 0x6262
   25664:	movt	r1, #25186	; 0x6262
   25668:	eor	r0, r7, r1
   2566c:	orrs	r0, r5, r0
   25670:	bne	256c0 <main@@Base+0x1243c>
   25674:	cmp	r9, #9
   25678:	ldr	r9, [sp, #16]
   2567c:	mov	r7, sl
   25680:	blt	259f8 <main@@Base+0x12774>
   25684:	ldr	r2, [sp, #20]
   25688:	mov	r1, sl
   2568c:	ldrb	r0, [r1, #8]!
   25690:	ldr	r2, [r2]
   25694:	cmp	r2, #0
   25698:	beq	25714 <main@@Base+0x12490>
   2569c:	cmp	r0, #33	; 0x21
   256a0:	bcc	256b0 <main@@Base+0x1242c>
   256a4:	cmp	r0, #58	; 0x3a
   256a8:	mov	r7, sl
   256ac:	bne	259f8 <main@@Base+0x12774>
   256b0:	ldr	r0, [sp, #20]
   256b4:	mov	r2, #0
   256b8:	str	r2, [r0]
   256bc:	b	25724 <main@@Base+0x124a0>
   256c0:	teq	r7, r1
   256c4:	bne	2591c <main@@Base+0x12698>
   256c8:	cmp	r9, #5
   256cc:	ldr	r9, [sp, #16]
   256d0:	mov	r1, sl
   256d4:	blt	25f28 <main@@Base+0x12ca4>
   256d8:	ldr	r1, [sp, #20]
   256dc:	mov	r2, sl
   256e0:	ldrb	r0, [r2, #4]!
   256e4:	ldr	r1, [r1]
   256e8:	cmp	r1, #0
   256ec:	beq	25744 <main@@Base+0x124c0>
   256f0:	cmp	r0, #33	; 0x21
   256f4:	bcc	25704 <main@@Base+0x12480>
   256f8:	cmp	r0, #58	; 0x3a
   256fc:	mov	r1, sl
   25700:	bne	25f28 <main@@Base+0x12ca4>
   25704:	ldr	r0, [sp, #20]
   25708:	mov	r1, #0
   2570c:	str	r1, [r0]
   25710:	b	25754 <main@@Base+0x124d0>
   25714:	cmp	r0, #34	; 0x22
   25718:	mov	r7, sl
   2571c:	bne	259f8 <main@@Base+0x12774>
   25720:	add	r1, sl, #9
   25724:	sub	r0, r8, r1
   25728:	cmp	r0, #2
   2572c:	blt	25788 <main@@Base+0x12504>
   25730:	ldrb	r0, [r1]
   25734:	cmp	r0, #32
   25738:	bls	25774 <main@@Base+0x124f0>
   2573c:	mov	r7, r1
   25740:	b	25798 <main@@Base+0x12514>
   25744:	cmp	r0, #34	; 0x22
   25748:	mov	r1, sl
   2574c:	bne	25f28 <main@@Base+0x12ca4>
   25750:	add	r2, sl, #5
   25754:	sub	r0, r8, r2
   25758:	cmp	r0, #2
   2575c:	blt	25800 <main@@Base+0x1257c>
   25760:	ldrb	r0, [r2]
   25764:	cmp	r0, #32
   25768:	bls	257ec <main@@Base+0x12568>
   2576c:	mov	r1, r2
   25770:	b	25814 <main@@Base+0x12590>
   25774:	bne	25788 <main@@Base+0x12504>
   25778:	mov	r7, r1
   2577c:	ldrb	r0, [r7, #1]!
   25780:	cmp	r0, #32
   25784:	bhi	25798 <main@@Base+0x12514>
   25788:	mov	r0, r9
   2578c:	mov	r2, r8
   25790:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   25794:	mov	r7, r0
   25798:	cmp	r7, r8
   2579c:	beq	257d4 <main@@Base+0x12550>
   257a0:	ldrb	r0, [r7]
   257a4:	cmp	r0, #58	; 0x3a
   257a8:	bne	257d4 <main@@Base+0x12550>
   257ac:	add	r1, r7, #1
   257b0:	sub	r0, r8, r1
   257b4:	cmp	r0, #2
   257b8:	blt	259e8 <main@@Base+0x12764>
   257bc:	ldrb	r0, [r1]
   257c0:	cmp	r0, #32
   257c4:	bls	259d4 <main@@Base+0x12750>
   257c8:	ldr	r9, [sp, #16]
   257cc:	mov	r7, r1
   257d0:	b	259f8 <main@@Base+0x12774>
   257d4:	mov	r0, r9
   257d8:	mov	r1, r7
   257dc:	mov	r2, r8
   257e0:	mov	r3, #4
   257e4:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   257e8:	b	259f4 <main@@Base+0x12770>
   257ec:	bne	25800 <main@@Base+0x1257c>
   257f0:	mov	r1, r2
   257f4:	ldrb	r0, [r1, #1]!
   257f8:	cmp	r0, #32
   257fc:	bhi	25814 <main@@Base+0x12590>
   25800:	mov	r1, r2
   25804:	mov	r0, r9
   25808:	mov	r2, r8
   2580c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   25810:	mov	r1, r0
   25814:	cmp	r1, r8
   25818:	beq	25850 <main@@Base+0x125cc>
   2581c:	ldrb	r0, [r1]
   25820:	cmp	r0, #58	; 0x3a
   25824:	bne	25850 <main@@Base+0x125cc>
   25828:	add	r2, r1, #1
   2582c:	sub	r0, r8, r2
   25830:	cmp	r0, #2
   25834:	blt	25f14 <main@@Base+0x12c90>
   25838:	ldrb	r0, [r2]
   2583c:	cmp	r0, #32
   25840:	bls	25f00 <main@@Base+0x12c7c>
   25844:	ldr	r9, [sp, #16]
   25848:	mov	r1, r2
   2584c:	b	25f28 <main@@Base+0x12ca4>
   25850:	mov	r0, r9
   25854:	mov	r2, r8
   25858:	mov	r3, #4
   2585c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   25860:	b	25f24 <main@@Base+0x12ca0>
   25864:	bne	25874 <main@@Base+0x125f0>
   25868:	ldrb	r0, [r1, #2]!
   2586c:	cmp	r0, #32
   25870:	bhi	25888 <main@@Base+0x12604>
   25874:	ldr	r0, [sp, #16]
   25878:	mov	r1, r2
   2587c:	mov	r2, r8
   25880:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   25884:	mov	r1, r0
   25888:	cmp	sl, r1
   2588c:	beq	258c0 <main@@Base+0x1263c>
   25890:	ldr	r9, [sp, #16]
   25894:	mov	r2, r8
   25898:	add	r3, sp, #28
   2589c:	mov	r0, r9
   258a0:	bl	2f2d8 <flatcc_json_parser_build_string@@Base>
   258a4:	mov	r4, r0
   258a8:	ldr	r0, [sp, #28]
   258ac:	cmp	r0, #0
   258b0:	beq	26f0c <main@@Base+0x13c88>
   258b4:	ldr	r0, [r9]
   258b8:	mov	r1, #4
   258bc:	b	25f58 <main@@Base+0x12cd4>
   258c0:	ldr	r0, [sp, #8]
   258c4:	eor	r0, r7, r0
   258c8:	orrs	r0, r5, r0
   258cc:	bne	2591c <main@@Base+0x12698>
   258d0:	cmp	r9, #9
   258d4:	ldr	r9, [sp, #16]
   258d8:	mov	r7, sl
   258dc:	blt	25b60 <main@@Base+0x128dc>
   258e0:	ldr	r2, [sp, #20]
   258e4:	mov	r1, sl
   258e8:	ldrb	r0, [r1, #8]!
   258ec:	ldr	r2, [r2]
   258f0:	cmp	r2, #0
   258f4:	beq	2592c <main@@Base+0x126a8>
   258f8:	cmp	r0, #33	; 0x21
   258fc:	bcc	2590c <main@@Base+0x12688>
   25900:	cmp	r0, #58	; 0x3a
   25904:	mov	r7, sl
   25908:	bne	25b60 <main@@Base+0x128dc>
   2590c:	ldr	r0, [sp, #20]
   25910:	mov	r2, #0
   25914:	str	r2, [r0]
   25918:	b	2593c <main@@Base+0x126b8>
   2591c:	ldr	r9, [sp, #16]
   25920:	mov	r0, r9
   25924:	mov	r1, sl
   25928:	b	261b8 <main@@Base+0x12f34>
   2592c:	cmp	r0, #34	; 0x22
   25930:	mov	r7, sl
   25934:	bne	25b60 <main@@Base+0x128dc>
   25938:	add	r1, sl, #9
   2593c:	sub	r0, r8, r1
   25940:	cmp	r0, #2
   25944:	blt	25970 <main@@Base+0x126ec>
   25948:	ldrb	r0, [r1]
   2594c:	cmp	r0, #32
   25950:	bls	2595c <main@@Base+0x126d8>
   25954:	mov	r7, r1
   25958:	b	25980 <main@@Base+0x126fc>
   2595c:	bne	25970 <main@@Base+0x126ec>
   25960:	mov	r7, r1
   25964:	ldrb	r0, [r7, #1]!
   25968:	cmp	r0, #32
   2596c:	bhi	25980 <main@@Base+0x126fc>
   25970:	mov	r0, r9
   25974:	mov	r2, r8
   25978:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2597c:	mov	r7, r0
   25980:	cmp	r7, r8
   25984:	beq	259bc <main@@Base+0x12738>
   25988:	ldrb	r0, [r7]
   2598c:	cmp	r0, #58	; 0x3a
   25990:	bne	259bc <main@@Base+0x12738>
   25994:	add	r1, r7, #1
   25998:	sub	r0, r8, r1
   2599c:	cmp	r0, #2
   259a0:	blt	25b50 <main@@Base+0x128cc>
   259a4:	ldrb	r0, [r1]
   259a8:	cmp	r0, #32
   259ac:	bls	25b3c <main@@Base+0x128b8>
   259b0:	ldr	r9, [sp, #16]
   259b4:	mov	r7, r1
   259b8:	b	25b60 <main@@Base+0x128dc>
   259bc:	mov	r0, r9
   259c0:	mov	r1, r7
   259c4:	mov	r2, r8
   259c8:	mov	r3, #4
   259cc:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   259d0:	b	25b5c <main@@Base+0x128d8>
   259d4:	ldr	r9, [sp, #16]
   259d8:	bne	259e8 <main@@Base+0x12764>
   259dc:	ldrb	r0, [r7, #2]!
   259e0:	cmp	r0, #32
   259e4:	bhi	259f8 <main@@Base+0x12774>
   259e8:	mov	r0, r9
   259ec:	mov	r2, r8
   259f0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   259f4:	mov	r7, r0
   259f8:	cmp	sl, r7
   259fc:	beq	25920 <main@@Base+0x1269c>
   25a00:	mov	r5, #0
   25a04:	cmp	r7, r8
   25a08:	str	r5, [fp, #-36]	; 0xffffffdc
   25a0c:	str	r5, [fp, #-40]	; 0xffffffd8
   25a10:	str	r5, [sp, #36]	; 0x24
   25a14:	str	r5, [sp, #32]
   25a18:	str	r5, [sp, #44]	; 0x2c
   25a1c:	beq	25a80 <main@@Base+0x127fc>
   25a20:	sub	r0, fp, #40	; 0x28
   25a24:	mov	r1, r7
   25a28:	mov	r2, r8
   25a2c:	add	r3, sp, #44	; 0x2c
   25a30:	str	r0, [sp]
   25a34:	mov	r0, r9
   25a38:	bl	2edac <flatcc_json_parser_integer@@Base>
   25a3c:	ldr	r6, [sp, #24]
   25a40:	cmp	r0, r7
   25a44:	beq	25a90 <main@@Base+0x1280c>
   25a48:	mov	r4, r0
   25a4c:	ldr	r0, [sp, #44]	; 0x2c
   25a50:	ldr	r5, [fp, #-40]	; 0xffffffd8
   25a54:	ldr	sl, [fp, #-36]	; 0xffffffdc
   25a58:	cmp	r0, #0
   25a5c:	beq	25aa0 <main@@Base+0x1281c>
   25a60:	subs	r0, r5, #1
   25a64:	sbcs	r0, sl, #-2147483648	; 0x80000000
   25a68:	bcc	25acc <main@@Base+0x12848>
   25a6c:	mov	r0, r9
   25a70:	mov	r1, r4
   25a74:	mov	r2, r8
   25a78:	mov	r3, #8
   25a7c:	b	25ab8 <main@@Base+0x12834>
   25a80:	ldr	r6, [sp, #24]
   25a84:	mov	sl, #0
   25a88:	mov	r4, r8
   25a8c:	b	25adc <main@@Base+0x12858>
   25a90:	mov	r5, #0
   25a94:	mov	sl, #0
   25a98:	mov	r4, r7
   25a9c:	b	25adc <main@@Base+0x12858>
   25aa0:	cmn	sl, #1
   25aa4:	bgt	25ad4 <main@@Base+0x12850>
   25aa8:	mov	r0, r9
   25aac:	mov	r1, r4
   25ab0:	mov	r2, r8
   25ab4:	mov	r3, #7
   25ab8:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   25abc:	mov	r4, r0
   25ac0:	mov	r5, #0
   25ac4:	mov	sl, #0
   25ac8:	b	25adc <main@@Base+0x12858>
   25acc:	rsbs	r5, r5, #0
   25ad0:	rsc	sl, sl, #0
   25ad4:	str	r5, [sp, #32]
   25ad8:	str	sl, [sp, #36]	; 0x24
   25adc:	cmp	r7, r4
   25ae0:	bne	25b1c <main@@Base+0x12898>
   25ae4:	movw	r3, #16984	; 0x4258
   25ae8:	add	r0, sp, #32
   25aec:	mov	r1, r7
   25af0:	mov	r2, r8
   25af4:	movt	r3, #4
   25af8:	str	r0, [sp]
   25afc:	mov	r0, r9
   25b00:	bl	22958 <main@@Base+0xf6d4>
   25b04:	mov	r4, r0
   25b08:	cmp	r0, r7
   25b0c:	cmpne	r4, r8
   25b10:	beq	26f08 <main@@Base+0x13c84>
   25b14:	ldr	r5, [sp, #32]
   25b18:	ldr	sl, [sp, #36]	; 0x24
   25b1c:	orrs	r0, r5, sl
   25b20:	bne	25b30 <main@@Base+0x128ac>
   25b24:	ldrb	r0, [r9, #8]
   25b28:	tst	r0, #2
   25b2c:	beq	261c8 <main@@Base+0x12f44>
   25b30:	ldr	r0, [r9]
   25b34:	mov	r1, #3
   25b38:	b	25d0c <main@@Base+0x12a88>
   25b3c:	ldr	r9, [sp, #16]
   25b40:	bne	25b50 <main@@Base+0x128cc>
   25b44:	ldrb	r0, [r7, #2]!
   25b48:	cmp	r0, #32
   25b4c:	bhi	25b60 <main@@Base+0x128dc>
   25b50:	mov	r0, r9
   25b54:	mov	r2, r8
   25b58:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   25b5c:	mov	r7, r0
   25b60:	cmp	sl, r7
   25b64:	beq	25be8 <main@@Base+0x12964>
   25b68:	mov	r5, #0
   25b6c:	cmp	r7, r8
   25b70:	str	r5, [fp, #-36]	; 0xffffffdc
   25b74:	str	r5, [fp, #-40]	; 0xffffffd8
   25b78:	str	r5, [sp, #36]	; 0x24
   25b7c:	str	r5, [sp, #32]
   25b80:	str	r5, [sp, #44]	; 0x2c
   25b84:	beq	25c54 <main@@Base+0x129d0>
   25b88:	sub	r0, fp, #40	; 0x28
   25b8c:	mov	r1, r7
   25b90:	mov	r2, r8
   25b94:	add	r3, sp, #44	; 0x2c
   25b98:	str	r0, [sp]
   25b9c:	mov	r0, r9
   25ba0:	bl	2edac <flatcc_json_parser_integer@@Base>
   25ba4:	ldr	r6, [sp, #24]
   25ba8:	cmp	r0, r7
   25bac:	beq	25c64 <main@@Base+0x129e0>
   25bb0:	mov	r4, r0
   25bb4:	ldr	r0, [sp, #44]	; 0x2c
   25bb8:	ldr	r5, [fp, #-40]	; 0xffffffd8
   25bbc:	ldr	sl, [fp, #-36]	; 0xffffffdc
   25bc0:	cmp	r0, #0
   25bc4:	beq	25c74 <main@@Base+0x129f0>
   25bc8:	subs	r0, r5, #1
   25bcc:	sbcs	r0, sl, #-2147483648	; 0x80000000
   25bd0:	bcc	25ca0 <main@@Base+0x12a1c>
   25bd4:	mov	r0, r9
   25bd8:	mov	r1, r4
   25bdc:	mov	r2, r8
   25be0:	mov	r3, #8
   25be4:	b	25c8c <main@@Base+0x12a08>
   25be8:	add	r7, sl, #8
   25bec:	mov	r1, #8
   25bf0:	sub	r0, r8, r7
   25bf4:	cmp	r0, #8
   25bf8:	movcc	r1, r0
   25bfc:	sub	r1, r1, #1
   25c00:	cmp	r1, #7
   25c04:	bhi	261b0 <main@@Base+0x12f2c>
   25c08:	ldrb	r1, [r7]
   25c0c:	cmp	r1, #53	; 0x35
   25c10:	bne	261b0 <main@@Base+0x12f2c>
   25c14:	cmp	r0, #2
   25c18:	blt	261ac <main@@Base+0x12f28>
   25c1c:	ldr	r2, [sp, #20]
   25c20:	mov	r1, sl
   25c24:	ldrb	r0, [r1, #9]!
   25c28:	ldr	r2, [r2]
   25c2c:	cmp	r2, #0
   25c30:	beq	25d28 <main@@Base+0x12aa4>
   25c34:	cmp	r0, #33	; 0x21
   25c38:	bcc	25c44 <main@@Base+0x129c0>
   25c3c:	cmp	r0, #58	; 0x3a
   25c40:	bne	261ac <main@@Base+0x12f28>
   25c44:	ldr	r0, [sp, #20]
   25c48:	mov	r2, #0
   25c4c:	str	r2, [r0]
   25c50:	b	25d34 <main@@Base+0x12ab0>
   25c54:	ldr	r6, [sp, #24]
   25c58:	mov	sl, #0
   25c5c:	mov	r4, r8
   25c60:	b	25cb0 <main@@Base+0x12a2c>
   25c64:	mov	r5, #0
   25c68:	mov	sl, #0
   25c6c:	mov	r4, r7
   25c70:	b	25cb0 <main@@Base+0x12a2c>
   25c74:	cmn	sl, #1
   25c78:	bgt	25ca8 <main@@Base+0x12a24>
   25c7c:	mov	r0, r9
   25c80:	mov	r1, r4
   25c84:	mov	r2, r8
   25c88:	mov	r3, #7
   25c8c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   25c90:	mov	r4, r0
   25c94:	mov	r5, #0
   25c98:	mov	sl, #0
   25c9c:	b	25cb0 <main@@Base+0x12a2c>
   25ca0:	rsbs	r5, r5, #0
   25ca4:	rsc	sl, sl, #0
   25ca8:	str	r5, [sp, #32]
   25cac:	str	sl, [sp, #36]	; 0x24
   25cb0:	cmp	r7, r4
   25cb4:	bne	25cf0 <main@@Base+0x12a6c>
   25cb8:	movw	r3, #17020	; 0x427c
   25cbc:	add	r0, sp, #32
   25cc0:	mov	r1, r7
   25cc4:	mov	r2, r8
   25cc8:	movt	r3, #4
   25ccc:	str	r0, [sp]
   25cd0:	mov	r0, r9
   25cd4:	bl	22958 <main@@Base+0xf6d4>
   25cd8:	mov	r4, r0
   25cdc:	cmp	r0, r7
   25ce0:	cmpne	r4, r8
   25ce4:	beq	26f08 <main@@Base+0x13c84>
   25ce8:	ldr	r5, [sp, #32]
   25cec:	ldr	sl, [sp, #36]	; 0x24
   25cf0:	orrs	r0, r5, sl
   25cf4:	bne	25d04 <main@@Base+0x12a80>
   25cf8:	ldrb	r0, [r9, #8]
   25cfc:	tst	r0, #2
   25d00:	beq	261c8 <main@@Base+0x12f44>
   25d04:	ldr	r0, [r9]
   25d08:	mov	r1, #7
   25d0c:	mov	r2, #8
   25d10:	mov	r3, #8
   25d14:	bl	2b574 <flatcc_builder_table_add@@Base>
   25d18:	cmp	r0, #0
   25d1c:	beq	26f08 <main@@Base+0x13c84>
   25d20:	stm	r0, {r5, sl}
   25d24:	b	261c8 <main@@Base+0x12f44>
   25d28:	cmp	r0, #34	; 0x22
   25d2c:	bne	261ac <main@@Base+0x12f28>
   25d30:	add	r1, sl, #10
   25d34:	sub	r0, r8, r1
   25d38:	cmp	r0, #2
   25d3c:	blt	25f94 <main@@Base+0x12d10>
   25d40:	ldrb	r0, [r1]
   25d44:	cmp	r0, #32
   25d48:	bls	25f80 <main@@Base+0x12cfc>
   25d4c:	mov	r9, r1
   25d50:	b	25fa4 <main@@Base+0x12d20>
   25d54:	bne	25d68 <main@@Base+0x12ae4>
   25d58:	mov	r9, r1
   25d5c:	ldrb	r0, [r9, #1]!
   25d60:	cmp	r0, #32
   25d64:	bhi	25d78 <main@@Base+0x12af4>
   25d68:	ldr	r0, [sp, #16]
   25d6c:	mov	r2, r8
   25d70:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   25d74:	mov	r9, r0
   25d78:	cmp	r9, r8
   25d7c:	beq	25db0 <main@@Base+0x12b2c>
   25d80:	ldrb	r0, [r9]
   25d84:	cmp	r0, #58	; 0x3a
   25d88:	bne	25db0 <main@@Base+0x12b2c>
   25d8c:	add	r1, r9, #1
   25d90:	sub	r0, r8, r1
   25d94:	cmp	r0, #2
   25d98:	blt	26004 <main@@Base+0x12d80>
   25d9c:	ldrb	r0, [r1]
   25da0:	cmp	r0, #32
   25da4:	bls	25ff4 <main@@Base+0x12d70>
   25da8:	mov	r9, r1
   25dac:	b	26014 <main@@Base+0x12d90>
   25db0:	ldr	r0, [sp, #16]
   25db4:	mov	r1, r9
   25db8:	mov	r2, r8
   25dbc:	mov	r3, #4
   25dc0:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   25dc4:	b	26010 <main@@Base+0x12d8c>
   25dc8:	bne	25dd8 <main@@Base+0x12b54>
   25dcc:	ldrb	r0, [r9, #2]!
   25dd0:	cmp	r0, #32
   25dd4:	bhi	25de8 <main@@Base+0x12b64>
   25dd8:	ldr	r0, [sp, #16]
   25ddc:	mov	r2, r8
   25de0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   25de4:	mov	r9, r0
   25de8:	cmp	r7, r9
   25dec:	beq	261ac <main@@Base+0x12f28>
   25df0:	mov	r5, #0
   25df4:	cmp	r9, r8
   25df8:	str	r5, [fp, #-36]	; 0xffffffdc
   25dfc:	str	r5, [fp, #-40]	; 0xffffffd8
   25e00:	str	r5, [sp, #44]	; 0x2c
   25e04:	str	r5, [sp, #32]
   25e08:	beq	25e54 <main@@Base+0x12bd0>
   25e0c:	sub	r0, fp, #40	; 0x28
   25e10:	mov	r1, r9
   25e14:	mov	r2, r8
   25e18:	add	r3, sp, #32
   25e1c:	str	r0, [sp]
   25e20:	ldr	r0, [sp, #16]
   25e24:	bl	2edac <flatcc_json_parser_integer@@Base>
   25e28:	cmp	r0, r9
   25e2c:	beq	25e5c <main@@Base+0x12bd8>
   25e30:	mov	r4, r0
   25e34:	ldr	r0, [sp, #32]
   25e38:	cmp	r0, #0
   25e3c:	beq	25e64 <main@@Base+0x12be0>
   25e40:	ldr	r0, [sp, #16]
   25e44:	mov	r1, r4
   25e48:	mov	r2, r8
   25e4c:	mov	r3, #8
   25e50:	b	25e80 <main@@Base+0x12bfc>
   25e54:	mov	r4, r8
   25e58:	b	25e88 <main@@Base+0x12c04>
   25e5c:	mov	r4, r9
   25e60:	b	25e88 <main@@Base+0x12c04>
   25e64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25e68:	cmp	r0, #0
   25e6c:	beq	25f74 <main@@Base+0x12cf0>
   25e70:	ldr	r0, [sp, #16]
   25e74:	mov	r1, r4
   25e78:	mov	r2, r8
   25e7c:	mov	r3, #7
   25e80:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   25e84:	mov	r4, r0
   25e88:	cmp	r9, r4
   25e8c:	bne	25ec4 <main@@Base+0x12c40>
   25e90:	add	r0, sp, #44	; 0x2c
   25e94:	movw	r3, #16972	; 0x424c
   25e98:	mov	r1, r9
   25e9c:	mov	r2, r8
   25ea0:	str	r0, [sp]
   25ea4:	ldr	r0, [sp, #16]
   25ea8:	movt	r3, #4
   25eac:	bl	22ba4 <main@@Base+0xf920>
   25eb0:	mov	r4, r0
   25eb4:	cmp	r0, r9
   25eb8:	cmpne	r4, r8
   25ebc:	beq	26f08 <main@@Base+0x13c84>
   25ec0:	ldr	r5, [sp, #44]	; 0x2c
   25ec4:	ldr	r9, [sp, #16]
   25ec8:	cmp	r5, #0
   25ecc:	bne	25edc <main@@Base+0x12c58>
   25ed0:	ldrb	r0, [r9, #8]
   25ed4:	tst	r0, #2
   25ed8:	beq	261c4 <main@@Base+0x12f40>
   25edc:	ldr	r0, [r9]
   25ee0:	mov	r1, #1
   25ee4:	mov	r2, #4
   25ee8:	mov	r3, #4
   25eec:	bl	2b574 <flatcc_builder_table_add@@Base>
   25ef0:	cmp	r0, #0
   25ef4:	beq	26f08 <main@@Base+0x13c84>
   25ef8:	str	r5, [r0]
   25efc:	b	261c4 <main@@Base+0x12f40>
   25f00:	ldr	r9, [sp, #16]
   25f04:	bne	25f14 <main@@Base+0x12c90>
   25f08:	ldrb	r0, [r1, #2]!
   25f0c:	cmp	r0, #32
   25f10:	bhi	25f28 <main@@Base+0x12ca4>
   25f14:	mov	r1, r2
   25f18:	mov	r0, r9
   25f1c:	mov	r2, r8
   25f20:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   25f24:	mov	r1, r0
   25f28:	cmp	sl, r1
   25f2c:	beq	25920 <main@@Base+0x1269c>
   25f30:	mov	r0, r9
   25f34:	mov	r2, r8
   25f38:	add	r3, sp, #28
   25f3c:	bl	2f2d8 <flatcc_json_parser_build_string@@Base>
   25f40:	mov	r4, r0
   25f44:	ldr	r0, [sp, #28]
   25f48:	cmp	r0, #0
   25f4c:	beq	26f0c <main@@Base+0x13c88>
   25f50:	ldr	r0, [r9]
   25f54:	mov	r1, #2
   25f58:	bl	2b448 <flatcc_builder_table_add_offset@@Base>
   25f5c:	ldr	r6, [sp, #24]
   25f60:	cmp	r0, #0
   25f64:	beq	26f0c <main@@Base+0x13c88>
   25f68:	ldr	r1, [sp, #28]
   25f6c:	str	r1, [r0]
   25f70:	b	261c8 <main@@Base+0x12f44>
   25f74:	ldr	r5, [fp, #-40]	; 0xffffffd8
   25f78:	str	r5, [sp, #44]	; 0x2c
   25f7c:	b	25e88 <main@@Base+0x12c04>
   25f80:	bne	25f94 <main@@Base+0x12d10>
   25f84:	mov	r9, r1
   25f88:	ldrb	r0, [r9, #1]!
   25f8c:	cmp	r0, #32
   25f90:	bhi	25fa4 <main@@Base+0x12d20>
   25f94:	ldr	r0, [sp, #16]
   25f98:	mov	r2, r8
   25f9c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   25fa0:	mov	r9, r0
   25fa4:	cmp	r9, r8
   25fa8:	beq	25fdc <main@@Base+0x12d58>
   25fac:	ldrb	r0, [r9]
   25fb0:	cmp	r0, #58	; 0x3a
   25fb4:	bne	25fdc <main@@Base+0x12d58>
   25fb8:	add	r1, r9, #1
   25fbc:	sub	r0, r8, r1
   25fc0:	cmp	r0, #2
   25fc4:	blt	26130 <main@@Base+0x12eac>
   25fc8:	ldrb	r0, [r1]
   25fcc:	cmp	r0, #32
   25fd0:	bls	26120 <main@@Base+0x12e9c>
   25fd4:	mov	r9, r1
   25fd8:	b	26140 <main@@Base+0x12ebc>
   25fdc:	ldr	r0, [sp, #16]
   25fe0:	mov	r1, r9
   25fe4:	mov	r2, r8
   25fe8:	mov	r3, #4
   25fec:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   25ff0:	b	2613c <main@@Base+0x12eb8>
   25ff4:	bne	26004 <main@@Base+0x12d80>
   25ff8:	ldrb	r0, [r9, #2]!
   25ffc:	cmp	r0, #32
   26000:	bhi	26014 <main@@Base+0x12d90>
   26004:	ldr	r0, [sp, #16]
   26008:	mov	r2, r8
   2600c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   26010:	mov	r9, r0
   26014:	cmp	r7, r9
   26018:	beq	261ac <main@@Base+0x12f28>
   2601c:	mov	r5, #0
   26020:	cmp	r9, r8
   26024:	str	r5, [fp, #-36]	; 0xffffffdc
   26028:	str	r5, [fp, #-40]	; 0xffffffd8
   2602c:	str	r5, [sp, #44]	; 0x2c
   26030:	str	r5, [sp, #32]
   26034:	beq	26080 <main@@Base+0x12dfc>
   26038:	sub	r0, fp, #40	; 0x28
   2603c:	mov	r1, r9
   26040:	mov	r2, r8
   26044:	add	r3, sp, #32
   26048:	str	r0, [sp]
   2604c:	ldr	r0, [sp, #16]
   26050:	bl	2edac <flatcc_json_parser_integer@@Base>
   26054:	cmp	r0, r9
   26058:	beq	26088 <main@@Base+0x12e04>
   2605c:	mov	r4, r0
   26060:	ldr	r0, [sp, #32]
   26064:	cmp	r0, #0
   26068:	beq	26090 <main@@Base+0x12e0c>
   2606c:	ldr	r0, [sp, #16]
   26070:	mov	r1, r4
   26074:	mov	r2, r8
   26078:	mov	r3, #8
   2607c:	b	260ac <main@@Base+0x12e28>
   26080:	mov	r4, r8
   26084:	b	260b4 <main@@Base+0x12e30>
   26088:	mov	r4, r9
   2608c:	b	260b4 <main@@Base+0x12e30>
   26090:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26094:	cmp	r0, #0
   26098:	beq	26114 <main@@Base+0x12e90>
   2609c:	ldr	r0, [sp, #16]
   260a0:	mov	r1, r4
   260a4:	mov	r2, r8
   260a8:	mov	r3, #7
   260ac:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   260b0:	mov	r4, r0
   260b4:	cmp	r9, r4
   260b8:	bne	260f0 <main@@Base+0x12e6c>
   260bc:	add	r0, sp, #44	; 0x2c
   260c0:	movw	r3, #17008	; 0x4270
   260c4:	mov	r1, r9
   260c8:	mov	r2, r8
   260cc:	str	r0, [sp]
   260d0:	ldr	r0, [sp, #16]
   260d4:	movt	r3, #4
   260d8:	bl	22ba4 <main@@Base+0xf920>
   260dc:	mov	r4, r0
   260e0:	cmp	r0, r9
   260e4:	cmpne	r4, r8
   260e8:	beq	26f08 <main@@Base+0x13c84>
   260ec:	ldr	r5, [sp, #44]	; 0x2c
   260f0:	cmp	r5, #0
   260f4:	bne	26108 <main@@Base+0x12e84>
   260f8:	ldr	r0, [sp, #16]
   260fc:	ldrb	r0, [r0, #8]
   26100:	tst	r0, #2
   26104:	beq	2632c <main@@Base+0x130a8>
   26108:	ldr	r0, [sp, #16]
   2610c:	mov	r1, #6
   26110:	b	26310 <main@@Base+0x1308c>
   26114:	ldr	r5, [fp, #-40]	; 0xffffffd8
   26118:	str	r5, [sp, #44]	; 0x2c
   2611c:	b	260b4 <main@@Base+0x12e30>
   26120:	bne	26130 <main@@Base+0x12eac>
   26124:	ldrb	r0, [r9, #2]!
   26128:	cmp	r0, #32
   2612c:	bhi	26140 <main@@Base+0x12ebc>
   26130:	ldr	r0, [sp, #16]
   26134:	mov	r2, r8
   26138:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2613c:	mov	r9, r0
   26140:	cmp	r7, r9
   26144:	beq	261ac <main@@Base+0x12f28>
   26148:	mov	r5, #0
   2614c:	cmp	r9, r8
   26150:	str	r5, [fp, #-36]	; 0xffffffdc
   26154:	str	r5, [fp, #-40]	; 0xffffffd8
   26158:	str	r5, [sp, #44]	; 0x2c
   2615c:	str	r5, [sp, #32]
   26160:	beq	26280 <main@@Base+0x12ffc>
   26164:	sub	r0, fp, #40	; 0x28
   26168:	mov	r1, r9
   2616c:	mov	r2, r8
   26170:	add	r3, sp, #32
   26174:	str	r0, [sp]
   26178:	ldr	r0, [sp, #16]
   2617c:	bl	2edac <flatcc_json_parser_integer@@Base>
   26180:	cmp	r0, r9
   26184:	beq	26288 <main@@Base+0x13004>
   26188:	mov	r4, r0
   2618c:	ldr	r0, [sp, #32]
   26190:	cmp	r0, #0
   26194:	beq	26290 <main@@Base+0x1300c>
   26198:	ldr	r0, [sp, #16]
   2619c:	mov	r1, r4
   261a0:	mov	r2, r8
   261a4:	mov	r3, #8
   261a8:	b	262ac <main@@Base+0x13028>
   261ac:	ldr	r9, [sp, #16]
   261b0:	mov	r0, r9
   261b4:	mov	r1, r7
   261b8:	mov	r2, r8
   261bc:	bl	2d5e0 <flatcc_json_parser_unmatched_symbol@@Base>
   261c0:	mov	r4, r0
   261c4:	ldr	r6, [sp, #24]
   261c8:	sub	r0, r8, r4
   261cc:	cmp	r0, #2
   261d0:	blt	261fc <main@@Base+0x12f78>
   261d4:	ldrb	r0, [r4]
   261d8:	cmp	r0, #32
   261dc:	bls	261e8 <main@@Base+0x12f64>
   261e0:	mov	r2, r4
   261e4:	b	26210 <main@@Base+0x12f8c>
   261e8:	bne	261fc <main@@Base+0x12f78>
   261ec:	mov	r2, r4
   261f0:	ldrb	r0, [r2, #1]!
   261f4:	cmp	r0, #32
   261f8:	bhi	26210 <main@@Base+0x12f8c>
   261fc:	mov	r0, r9
   26200:	mov	r1, r4
   26204:	mov	r2, r8
   26208:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2620c:	mov	r2, r0
   26210:	cmp	r2, r8
   26214:	beq	26454 <main@@Base+0x131d0>
   26218:	ldrb	r0, [r2]
   2621c:	cmp	r0, #44	; 0x2c
   26220:	bne	2645c <main@@Base+0x131d8>
   26224:	add	r1, r2, #1
   26228:	sub	r0, r8, r1
   2622c:	cmp	r0, #2
   26230:	blt	26258 <main@@Base+0x12fd4>
   26234:	ldrb	r0, [r1]
   26238:	cmp	r0, #32
   2623c:	bls	26248 <main@@Base+0x12fc4>
   26240:	mov	r2, r1
   26244:	b	26268 <main@@Base+0x12fe4>
   26248:	bne	26258 <main@@Base+0x12fd4>
   2624c:	ldrb	r0, [r2, #2]!
   26250:	cmp	r0, #32
   26254:	bhi	26268 <main@@Base+0x12fe4>
   26258:	mov	r0, r9
   2625c:	mov	r2, r8
   26260:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   26264:	mov	r2, r0
   26268:	cmp	r2, r8
   2626c:	beq	26488 <main@@Base+0x13204>
   26270:	ldrb	r0, [r2]
   26274:	cmp	r0, #125	; 0x7d
   26278:	bne	24eb0 <main@@Base+0x11c2c>
   2627c:	b	26464 <main@@Base+0x131e0>
   26280:	mov	r4, r8
   26284:	b	262b4 <main@@Base+0x13030>
   26288:	mov	r4, r9
   2628c:	b	262b4 <main@@Base+0x13030>
   26290:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26294:	cmp	r0, #0
   26298:	beq	26334 <main@@Base+0x130b0>
   2629c:	ldr	r0, [sp, #16]
   262a0:	mov	r1, r4
   262a4:	mov	r2, r8
   262a8:	mov	r3, #7
   262ac:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   262b0:	mov	r4, r0
   262b4:	cmp	r9, r4
   262b8:	bne	262f0 <main@@Base+0x1306c>
   262bc:	add	r0, sp, #44	; 0x2c
   262c0:	movw	r3, #17032	; 0x4288
   262c4:	mov	r1, r9
   262c8:	mov	r2, r8
   262cc:	str	r0, [sp]
   262d0:	ldr	r0, [sp, #16]
   262d4:	movt	r3, #4
   262d8:	bl	22ba4 <main@@Base+0xf920>
   262dc:	mov	r4, r0
   262e0:	cmp	r0, r9
   262e4:	cmpne	r4, r8
   262e8:	beq	26f08 <main@@Base+0x13c84>
   262ec:	ldr	r5, [sp, #44]	; 0x2c
   262f0:	cmp	r5, #0
   262f4:	bne	26308 <main@@Base+0x13084>
   262f8:	ldr	r0, [sp, #16]
   262fc:	ldrb	r0, [r0, #8]
   26300:	tst	r0, #2
   26304:	beq	2632c <main@@Base+0x130a8>
   26308:	ldr	r0, [sp, #16]
   2630c:	mov	r1, #8
   26310:	ldr	r0, [r0]
   26314:	mov	r2, #4
   26318:	mov	r3, #4
   2631c:	bl	2b574 <flatcc_builder_table_add@@Base>
   26320:	cmp	r0, #0
   26324:	beq	26f08 <main@@Base+0x13c84>
   26328:	str	r5, [r0]
   2632c:	ldr	r9, [sp, #16]
   26330:	b	261c4 <main@@Base+0x12f40>
   26334:	ldr	r5, [fp, #-40]	; 0xffffffd8
   26338:	str	r5, [sp, #44]	; 0x2c
   2633c:	b	262b4 <main@@Base+0x13030>
   26340:	bne	26350 <main@@Base+0x130cc>
   26344:	ldrb	r0, [r4, #2]!
   26348:	cmp	r0, #32
   2634c:	bhi	26360 <main@@Base+0x130dc>
   26350:	mov	r0, r9
   26354:	mov	r2, r8
   26358:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2635c:	mov	r4, r0
   26360:	mov	ip, r5
   26364:	cmp	r5, r4
   26368:	beq	24468 <main@@Base+0x111e4>
   2636c:	ldr	r0, [r9]
   26370:	mov	r1, #2
   26374:	bl	2a328 <flatcc_builder_start_table@@Base>
   26378:	cmp	r0, #0
   2637c:	bne	26f0c <main@@Base+0x13c88>
   26380:	cmp	r4, r8
   26384:	beq	263bc <main@@Base+0x13138>
   26388:	ldrb	r0, [r4]
   2638c:	cmp	r0, #123	; 0x7b
   26390:	bne	263bc <main@@Base+0x13138>
   26394:	ldr	r6, [sp, #24]
   26398:	add	r1, r4, #1
   2639c:	sub	r0, r8, r1
   263a0:	cmp	r0, #2
   263a4:	blt	264a4 <main@@Base+0x13220>
   263a8:	ldrb	r0, [r1]
   263ac:	cmp	r0, #32
   263b0:	bls	26494 <main@@Base+0x13210>
   263b4:	mov	r4, r1
   263b8:	b	264b4 <main@@Base+0x13230>
   263bc:	mov	r0, r9
   263c0:	mov	r1, r4
   263c4:	mov	r2, r8
   263c8:	mov	r3, #21
   263cc:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   263d0:	ldr	r6, [sp, #24]
   263d4:	mov	r4, r0
   263d8:	ldr	r0, [r9, #24]
   263dc:	cmp	r0, #0
   263e0:	bne	26f0c <main@@Base+0x13c88>
   263e4:	ldr	r0, [r9]
   263e8:	bl	2ac88 <flatcc_builder_end_table@@Base>
   263ec:	cmp	r0, #0
   263f0:	beq	26f0c <main@@Base+0x13c88>
   263f4:	mov	r7, r0
   263f8:	ldr	r0, [r9]
   263fc:	mov	r1, #2
   26400:	bl	2b448 <flatcc_builder_table_add_offset@@Base>
   26404:	cmp	r0, #0
   26408:	beq	23d18 <main@@Base+0x10a94>
   2640c:	str	r7, [r0]
   26410:	b	24480 <main@@Base+0x111fc>
   26414:	mov	r4, r8
   26418:	b	2435c <main@@Base+0x110d8>
   2641c:	cmp	r0, #125	; 0x7d
   26420:	bne	26d6c <main@@Base+0x13ae8>
   26424:	add	r1, r2, #1
   26428:	sub	r0, r8, r1
   2642c:	cmp	r0, #2
   26430:	blt	26e00 <main@@Base+0x13b7c>
   26434:	ldrb	r0, [r1]
   26438:	cmp	r0, #32
   2643c:	bls	26dec <main@@Base+0x13b68>
   26440:	mov	r4, r1
   26444:	b	2435c <main@@Base+0x110d8>
   26448:	mov	r0, r9
   2644c:	mov	r1, r8
   26450:	b	26d74 <main@@Base+0x13af0>
   26454:	mov	r4, r8
   26458:	b	24554 <main@@Base+0x112d0>
   2645c:	cmp	r0, #125	; 0x7d
   26460:	bne	26e10 <main@@Base+0x13b8c>
   26464:	add	r1, r2, #1
   26468:	sub	r0, r8, r1
   2646c:	cmp	r0, #2
   26470:	blt	26e3c <main@@Base+0x13bb8>
   26474:	ldrb	r0, [r1]
   26478:	cmp	r0, #32
   2647c:	bls	26e28 <main@@Base+0x13ba4>
   26480:	mov	r4, r1
   26484:	b	24554 <main@@Base+0x112d0>
   26488:	mov	r0, r9
   2648c:	mov	r1, r8
   26490:	b	26e18 <main@@Base+0x13b94>
   26494:	bne	264a4 <main@@Base+0x13220>
   26498:	ldrb	r0, [r4, #2]!
   2649c:	cmp	r0, #32
   264a0:	bhi	264b4 <main@@Base+0x13230>
   264a4:	mov	r0, r9
   264a8:	mov	r2, r8
   264ac:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   264b0:	mov	r4, r0
   264b4:	cmp	r4, r8
   264b8:	mov	r2, r8
   264bc:	beq	264f8 <main@@Base+0x13274>
   264c0:	ldrb	r0, [r4]
   264c4:	cmp	r0, #125	; 0x7d
   264c8:	bne	264f4 <main@@Base+0x13270>
   264cc:	add	r1, r4, #1
   264d0:	sub	r0, r8, r1
   264d4:	cmp	r0, #2
   264d8:	blt	26e80 <main@@Base+0x13bfc>
   264dc:	ldrb	r0, [r1]
   264e0:	cmp	r0, #32
   264e4:	bhi	26de4 <main@@Base+0x13b60>
   264e8:	bne	26e80 <main@@Base+0x13bfc>
   264ec:	ldrb	r0, [r4, #2]!
   264f0:	b	26e78 <main@@Base+0x13bf4>
   264f4:	mov	r2, r4
   264f8:	cmp	r2, r8
   264fc:	mov	r1, r8
   26500:	beq	26558 <main@@Base+0x132d4>
   26504:	ldrb	r0, [r2]
   26508:	cmp	r0, #46	; 0x2e
   2650c:	beq	2652c <main@@Base+0x132a8>
   26510:	cmp	r0, #34	; 0x22
   26514:	bne	26548 <main@@Base+0x132c4>
   26518:	ldr	r0, [sp, #20]
   2651c:	mov	r1, #0
   26520:	str	r1, [r0]
   26524:	add	r1, r2, #1
   26528:	b	26558 <main@@Base+0x132d4>
   2652c:	mov	r1, r2
   26530:	mov	r0, r9
   26534:	mov	r2, r8
   26538:	mov	r3, #5
   2653c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   26540:	mov	r1, r0
   26544:	b	26558 <main@@Base+0x132d4>
   26548:	ldr	r0, [sp, #20]
   2654c:	mov	r1, #1
   26550:	str	r1, [r0]
   26554:	mov	r1, r2
   26558:	sub	r0, r8, r1
   2655c:	mov	r2, #8
   26560:	cmp	r0, #8
   26564:	movcs	r0, r2
   26568:	sub	r7, r0, #1
   2656c:	cmp	r7, #7
   26570:	bhi	267f0 <main@@Base+0x1356c>
   26574:	add	r0, pc, #32
   26578:	mov	r9, #0
   2657c:	mov	ip, #0
   26580:	mov	lr, #0
   26584:	mov	sl, #0
   26588:	mov	r3, #0
   2658c:	mov	r5, #0
   26590:	mov	r2, #0
   26594:	mov	r4, #0
   26598:	ldr	pc, [r0, r7, lsl #2]
   2659c:	andeq	r6, r2, r0, lsl #12
   265a0:	strdeq	r6, [r2], -r8
   265a4:	strdeq	r6, [r2], -r0
   265a8:	andeq	r6, r2, r8, ror #11
   265ac:	ldrdeq	r6, [r2], -ip
   265b0:	ldrdeq	r6, [r2], -r0
   265b4:	andeq	r6, r2, r0, asr #11
   265b8:			; <UNDEFINED> instruction: 0x000265bc
   265bc:	ldrb	ip, [r1, #7]
   265c0:	ldrb	r0, [r1, #6]
   265c4:	mov	lr, r9
   265c8:	orr	r0, ip, r0, lsl #8
   265cc:	mov	r9, r0
   265d0:	ldrb	r0, [r1, #5]
   265d4:	mov	sl, lr
   265d8:	orr	r9, r9, r0, lsl #16
   265dc:	ldrb	r0, [r1, #4]
   265e0:	mov	r3, sl
   265e4:	orr	r9, r9, r0, lsl #24
   265e8:	ldrb	r0, [r1, #3]
   265ec:	orr	r5, r0, r3
   265f0:	ldrb	r0, [r1, #2]
   265f4:	orr	r2, r5, r0, lsl #8
   265f8:	ldrb	r0, [r1, #1]
   265fc:	orr	r4, r2, r0, lsl #16
   26600:	ldrb	r2, [r1]
   26604:	movw	r0, #25186	; 0x6262
   26608:	movw	r3, #24929	; 0x6161
   2660c:	movt	r0, #24418	; 0x5f62
   26610:	movt	r3, #24929	; 0x6161
   26614:	eor	r0, r9, r0
   26618:	ldr	r9, [sp, #16]
   2661c:	orr	r2, r4, r2, lsl #24
   26620:	eor	r2, r2, r3
   26624:	orrs	r0, r0, r2
   26628:	bne	267f0 <main@@Base+0x1356c>
   2662c:	add	r4, r1, #8
   26630:	mov	r0, #8
   26634:	sub	lr, r8, r4
   26638:	cmp	lr, #8
   2663c:	movcc	r0, lr
   26640:	sub	ip, r0, #1
   26644:	cmp	ip, #7
   26648:	bhi	26a60 <main@@Base+0x137dc>
   2664c:	str	r4, [sp, #4]
   26650:	add	r9, pc, #32
   26654:	mov	r2, #0
   26658:	mov	r6, #0
   2665c:	mov	sl, #0
   26660:	mov	r5, #0
   26664:	mov	r7, #0
   26668:	mov	r4, #0
   2666c:	mov	r0, #0
   26670:	mov	r3, #0
   26674:	ldr	pc, [r9, ip, lsl #2]
   26678:	ldrdeq	r6, [r2], -ip
   2667c:	ldrdeq	r6, [r2], -r4
   26680:	andeq	r6, r2, ip, asr #13
   26684:	andeq	r6, r2, r4, asr #13
   26688:			; <UNDEFINED> instruction: 0x000266b8
   2668c:	andeq	r6, r2, ip, lsr #13
   26690:	muleq	r2, ip, r6
   26694:	muleq	r2, r8, r6
   26698:	ldrb	r6, [r1, #15]
   2669c:	ldrb	r0, [r1, #14]
   266a0:	mov	sl, r2
   266a4:	orr	r0, r6, r0, lsl #8
   266a8:	mov	r2, r0
   266ac:	ldrb	r0, [r1, #13]
   266b0:	mov	r5, sl
   266b4:	orr	r2, r2, r0, lsl #16
   266b8:	ldrb	r0, [r1, #12]
   266bc:	mov	r7, r5
   266c0:	orr	r2, r2, r0, lsl #24
   266c4:	ldrb	r0, [r1, #11]
   266c8:	orr	r4, r0, r7
   266cc:	ldrb	r0, [r1, #10]
   266d0:	orr	r0, r4, r0, lsl #8
   266d4:	ldrb	r3, [r1, #9]
   266d8:	orr	r3, r0, r3, lsl #16
   266dc:	ldr	r4, [sp, #4]
   266e0:	movw	r0, #29791	; 0x745f
   266e4:	movt	r0, #24946	; 0x6172
   266e8:	eor	r7, r2, r0
   266ec:	ldrb	r0, [r4]
   266f0:	orr	r0, r3, r0, lsl #24
   266f4:	movw	r3, #29556	; 0x7374
   266f8:	movt	r3, #25183	; 0x625f
   266fc:	eor	r0, r0, r3
   26700:	orrs	r3, r7, r0
   26704:	bne	267f8 <main@@Base+0x13574>
   26708:	add	r9, r1, #16
   2670c:	ldr	r6, [sp, #24]
   26710:	mov	r2, #8
   26714:	sub	ip, r8, r9
   26718:	cmp	ip, #8
   2671c:	movcc	r2, ip
   26720:	sub	r7, r2, #1
   26724:	cmp	r7, #7
   26728:	bhi	26bdc <main@@Base+0x13958>
   2672c:	add	r0, pc, #20
   26730:	mov	lr, #0
   26734:	mov	r3, #0
   26738:	mov	r2, #0
   2673c:	mov	r5, #0
   26740:	mov	r4, #0
   26744:	ldr	pc, [r0, r7, lsl #2]
   26748:	andeq	r6, r2, ip, lsl #15
   2674c:	andeq	r6, r2, r4, lsl #15
   26750:	andeq	r6, r2, ip, ror r7
   26754:	andeq	r6, r2, r0, ror r7
   26758:	andeq	r6, r2, r8, ror #14
   2675c:	andeq	r6, r2, r8, ror #14
   26760:	andeq	r6, r2, r8, ror #14
   26764:	andeq	r6, r2, r8, ror #14
   26768:	ldrb	r0, [r1, #20]
   2676c:	lsl	r3, r0, #24
   26770:	ldrb	r0, [r1, #19]
   26774:	orr	r2, r0, lr
   26778:	mov	lr, r3
   2677c:	ldrb	r0, [r1, #18]
   26780:	orr	r5, r2, r0, lsl #8
   26784:	ldrb	r0, [r1, #17]
   26788:	orr	r4, r5, r0, lsl #16
   2678c:	ldrb	r0, [r9]
   26790:	movw	r2, #25968	; 0x6570
   26794:	movt	r2, #29556	; 0x7374
   26798:	orr	r0, r4, r0, lsl #24
   2679c:	eor	r0, r0, r2
   267a0:	and	r2, lr, #-16777216	; 0xff000000
   267a4:	eor	r2, r2, #1929379840	; 0x73000000
   267a8:	orrs	r0, r2, r0
   267ac:	bne	26bdc <main@@Base+0x13958>
   267b0:	cmp	ip, #6
   267b4:	blt	26bdc <main@@Base+0x13958>
   267b8:	ldr	r3, [sp, #20]
   267bc:	mov	r2, r1
   267c0:	ldrb	r0, [r2, #21]!
   267c4:	ldr	r3, [r3]
   267c8:	cmp	r3, #0
   267cc:	beq	26884 <main@@Base+0x13600>
   267d0:	cmp	r0, #33	; 0x21
   267d4:	bcc	267e0 <main@@Base+0x1355c>
   267d8:	cmp	r0, #58	; 0x3a
   267dc:	bne	26bdc <main@@Base+0x13958>
   267e0:	ldr	r0, [sp, #20]
   267e4:	mov	r1, #0
   267e8:	str	r1, [r0]
   267ec:	b	26890 <main@@Base+0x1360c>
   267f0:	mov	r0, r9
   267f4:	b	26be8 <main@@Base+0x13964>
   267f8:	movw	r3, #29440	; 0x7300
   267fc:	ldr	r9, [sp, #16]
   26800:	ldr	r6, [sp, #24]
   26804:	bic	r2, r2, #255	; 0xff
   26808:	movt	r3, #25968	; 0x6570
   2680c:	eor	r2, r2, r3
   26810:	orrs	r0, r2, r0
   26814:	bne	26a60 <main@@Base+0x137dc>
   26818:	cmp	lr, #8
   2681c:	blt	26a60 <main@@Base+0x137dc>
   26820:	ldr	r3, [sp, #20]
   26824:	mov	r2, r1
   26828:	ldrb	r0, [r2, #15]!
   2682c:	ldr	r3, [r3]
   26830:	cmp	r3, #0
   26834:	beq	26858 <main@@Base+0x135d4>
   26838:	cmp	r0, #33	; 0x21
   2683c:	bcc	26848 <main@@Base+0x135c4>
   26840:	cmp	r0, #58	; 0x3a
   26844:	bne	26a60 <main@@Base+0x137dc>
   26848:	ldr	r0, [sp, #20]
   2684c:	mov	r1, #0
   26850:	str	r1, [r0]
   26854:	b	26864 <main@@Base+0x135e0>
   26858:	cmp	r0, #34	; 0x22
   2685c:	bne	26a60 <main@@Base+0x137dc>
   26860:	add	r2, r1, #16
   26864:	sub	r0, r8, r2
   26868:	cmp	r0, #2
   2686c:	blt	268c4 <main@@Base+0x13640>
   26870:	ldrb	r0, [r2]
   26874:	cmp	r0, #32
   26878:	bls	268b0 <main@@Base+0x1362c>
   2687c:	mov	r7, r2
   26880:	b	268d8 <main@@Base+0x13654>
   26884:	cmp	r0, #34	; 0x22
   26888:	bne	26bdc <main@@Base+0x13958>
   2688c:	add	r2, r1, #22
   26890:	sub	r0, r8, r2
   26894:	cmp	r0, #2
   26898:	blt	26948 <main@@Base+0x136c4>
   2689c:	ldrb	r0, [r2]
   268a0:	cmp	r0, #32
   268a4:	bls	26934 <main@@Base+0x136b0>
   268a8:	mov	r7, r2
   268ac:	b	2695c <main@@Base+0x136d8>
   268b0:	bne	268c4 <main@@Base+0x13640>
   268b4:	mov	r7, r2
   268b8:	ldrb	r0, [r7, #1]!
   268bc:	cmp	r0, #32
   268c0:	bhi	268d8 <main@@Base+0x13654>
   268c4:	mov	r1, r2
   268c8:	mov	r0, r9
   268cc:	mov	r2, r8
   268d0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   268d4:	mov	r7, r0
   268d8:	cmp	r7, r8
   268dc:	beq	2691c <main@@Base+0x13698>
   268e0:	ldrb	r0, [r7]
   268e4:	cmp	r0, #58	; 0x3a
   268e8:	bne	2691c <main@@Base+0x13698>
   268ec:	add	r1, r7, #1
   268f0:	sub	r0, r8, r1
   268f4:	cmp	r0, #2
   268f8:	blt	269cc <main@@Base+0x13748>
   268fc:	ldrb	r0, [r1]
   26900:	cmp	r0, #32
   26904:	bls	269b0 <main@@Base+0x1372c>
   26908:	ldr	r9, [sp, #16]
   2690c:	ldr	r6, [sp, #24]
   26910:	ldr	r4, [sp, #4]
   26914:	mov	r7, r1
   26918:	b	269dc <main@@Base+0x13758>
   2691c:	mov	r0, r9
   26920:	mov	r1, r7
   26924:	mov	r2, r8
   26928:	mov	r3, #4
   2692c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   26930:	b	269d8 <main@@Base+0x13754>
   26934:	bne	26948 <main@@Base+0x136c4>
   26938:	mov	r7, r2
   2693c:	ldrb	r0, [r7, #1]!
   26940:	cmp	r0, #32
   26944:	bhi	2695c <main@@Base+0x136d8>
   26948:	ldr	r0, [sp, #16]
   2694c:	mov	r1, r2
   26950:	mov	r2, r8
   26954:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   26958:	mov	r7, r0
   2695c:	cmp	r7, r8
   26960:	beq	26998 <main@@Base+0x13714>
   26964:	ldrb	r0, [r7]
   26968:	cmp	r0, #58	; 0x3a
   2696c:	bne	26998 <main@@Base+0x13714>
   26970:	add	r1, r7, #1
   26974:	sub	r0, r8, r1
   26978:	cmp	r0, #2
   2697c:	blt	26b60 <main@@Base+0x138dc>
   26980:	ldrb	r0, [r1]
   26984:	cmp	r0, #32
   26988:	bls	26b4c <main@@Base+0x138c8>
   2698c:	ldr	r6, [sp, #24]
   26990:	mov	r7, r1
   26994:	b	26b70 <main@@Base+0x138ec>
   26998:	ldr	r0, [sp, #16]
   2699c:	mov	r1, r7
   269a0:	mov	r2, r8
   269a4:	mov	r3, #4
   269a8:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   269ac:	b	26b6c <main@@Base+0x138e8>
   269b0:	ldr	r9, [sp, #16]
   269b4:	ldr	r6, [sp, #24]
   269b8:	ldr	r4, [sp, #4]
   269bc:	bne	269cc <main@@Base+0x13748>
   269c0:	ldrb	r0, [r7, #2]!
   269c4:	cmp	r0, #32
   269c8:	bhi	269dc <main@@Base+0x13758>
   269cc:	mov	r0, r9
   269d0:	mov	r2, r8
   269d4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   269d8:	mov	r7, r0
   269dc:	cmp	r4, r7
   269e0:	beq	26a60 <main@@Base+0x137dc>
   269e4:	mov	r6, #0
   269e8:	cmp	r7, r8
   269ec:	str	r6, [fp, #-36]	; 0xffffffdc
   269f0:	str	r6, [fp, #-40]	; 0xffffffd8
   269f4:	str	r6, [sp, #36]	; 0x24
   269f8:	str	r6, [sp, #32]
   269fc:	str	r6, [sp, #44]	; 0x2c
   26a00:	beq	26a6c <main@@Base+0x137e8>
   26a04:	sub	r0, fp, #40	; 0x28
   26a08:	mov	r1, r7
   26a0c:	mov	r2, r8
   26a10:	add	r3, sp, #44	; 0x2c
   26a14:	str	r0, [sp]
   26a18:	mov	r0, r9
   26a1c:	bl	2edac <flatcc_json_parser_integer@@Base>
   26a20:	cmp	r0, r7
   26a24:	beq	26a78 <main@@Base+0x137f4>
   26a28:	mov	r4, r0
   26a2c:	ldr	r0, [sp, #44]	; 0x2c
   26a30:	ldr	r6, [fp, #-40]	; 0xffffffd8
   26a34:	ldr	r5, [fp, #-36]	; 0xffffffdc
   26a38:	cmp	r0, #0
   26a3c:	beq	26a88 <main@@Base+0x13804>
   26a40:	subs	r0, r6, #1
   26a44:	sbcs	r0, r5, #-2147483648	; 0x80000000
   26a48:	bcc	26ab8 <main@@Base+0x13834>
   26a4c:	ldr	r9, [sp, #16]
   26a50:	mov	r1, r4
   26a54:	mov	r2, r8
   26a58:	mov	r3, #8
   26a5c:	b	26aa0 <main@@Base+0x1381c>
   26a60:	mov	r0, r9
   26a64:	mov	r1, r4
   26a68:	b	26be8 <main@@Base+0x13964>
   26a6c:	mov	r5, #0
   26a70:	mov	r4, r8
   26a74:	b	26acc <main@@Base+0x13848>
   26a78:	mov	r6, #0
   26a7c:	mov	r5, #0
   26a80:	mov	r4, r7
   26a84:	b	26ac8 <main@@Base+0x13844>
   26a88:	cmn	r5, #1
   26a8c:	bgt	26ac0 <main@@Base+0x1383c>
   26a90:	ldr	r9, [sp, #16]
   26a94:	mov	r1, r4
   26a98:	mov	r2, r8
   26a9c:	mov	r3, #7
   26aa0:	mov	r0, r9
   26aa4:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   26aa8:	mov	r4, r0
   26aac:	mov	r6, #0
   26ab0:	mov	r5, #0
   26ab4:	b	26acc <main@@Base+0x13848>
   26ab8:	rsbs	r6, r6, #0
   26abc:	rsc	r5, r5, #0
   26ac0:	str	r6, [sp, #32]
   26ac4:	str	r5, [sp, #36]	; 0x24
   26ac8:	ldr	r9, [sp, #16]
   26acc:	cmp	r7, r4
   26ad0:	bne	26b10 <main@@Base+0x1388c>
   26ad4:	movw	r3, #17056	; 0x42a0
   26ad8:	add	r0, sp, #32
   26adc:	mov	r1, r7
   26ae0:	mov	r2, r8
   26ae4:	movt	r3, #4
   26ae8:	str	r0, [sp]
   26aec:	mov	r0, r9
   26af0:	bl	22958 <main@@Base+0xf6d4>
   26af4:	mov	r4, r0
   26af8:	cmp	r0, r7
   26afc:	cmpne	r4, r8
   26b00:	beq	26f08 <main@@Base+0x13c84>
   26b04:	ldr	r6, [sp, #32]
   26b08:	ldr	r5, [sp, #36]	; 0x24
   26b0c:	ldr	r9, [sp, #16]
   26b10:	orrs	r0, r6, r5
   26b14:	bne	26b24 <main@@Base+0x138a0>
   26b18:	ldrb	r0, [r9, #8]
   26b1c:	tst	r0, #2
   26b20:	beq	26d58 <main@@Base+0x13ad4>
   26b24:	ldr	r0, [r9]
   26b28:	mov	r1, #0
   26b2c:	mov	r2, #8
   26b30:	mov	r3, #8
   26b34:	bl	2b574 <flatcc_builder_table_add@@Base>
   26b38:	cmp	r0, #0
   26b3c:	beq	26f08 <main@@Base+0x13c84>
   26b40:	str	r6, [r0]
   26b44:	str	r5, [r0, #4]
   26b48:	b	26d58 <main@@Base+0x13ad4>
   26b4c:	ldr	r6, [sp, #24]
   26b50:	bne	26b60 <main@@Base+0x138dc>
   26b54:	ldrb	r0, [r7, #2]!
   26b58:	cmp	r0, #32
   26b5c:	bhi	26b70 <main@@Base+0x138ec>
   26b60:	ldr	r0, [sp, #16]
   26b64:	mov	r2, r8
   26b68:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   26b6c:	mov	r7, r0
   26b70:	cmp	r9, r7
   26b74:	beq	26bdc <main@@Base+0x13958>
   26b78:	mov	r5, #0
   26b7c:	cmp	r7, r8
   26b80:	str	r5, [fp, #-36]	; 0xffffffdc
   26b84:	str	r5, [fp, #-40]	; 0xffffffd8
   26b88:	str	r5, [sp, #44]	; 0x2c
   26b8c:	str	r5, [sp, #32]
   26b90:	beq	26cac <main@@Base+0x13a28>
   26b94:	sub	r0, fp, #40	; 0x28
   26b98:	mov	r1, r7
   26b9c:	mov	r2, r8
   26ba0:	add	r3, sp, #32
   26ba4:	str	r0, [sp]
   26ba8:	ldr	r0, [sp, #16]
   26bac:	bl	2edac <flatcc_json_parser_integer@@Base>
   26bb0:	cmp	r0, r7
   26bb4:	beq	26cb4 <main@@Base+0x13a30>
   26bb8:	mov	r4, r0
   26bbc:	ldr	r0, [sp, #32]
   26bc0:	cmp	r0, #0
   26bc4:	beq	26cbc <main@@Base+0x13a38>
   26bc8:	ldr	r0, [sp, #16]
   26bcc:	mov	r1, r4
   26bd0:	mov	r2, r8
   26bd4:	mov	r3, #8
   26bd8:	b	26cd8 <main@@Base+0x13a54>
   26bdc:	ldr	r0, [sp, #16]
   26be0:	mov	r1, r9
   26be4:	mov	r9, r0
   26be8:	mov	r2, r8
   26bec:	bl	2d5e0 <flatcc_json_parser_unmatched_symbol@@Base>
   26bf0:	mov	r4, r0
   26bf4:	sub	r0, r8, r4
   26bf8:	cmp	r0, #2
   26bfc:	blt	26c28 <main@@Base+0x139a4>
   26c00:	ldrb	r0, [r4]
   26c04:	cmp	r0, #32
   26c08:	bls	26c14 <main@@Base+0x13990>
   26c0c:	mov	r2, r4
   26c10:	b	26c3c <main@@Base+0x139b8>
   26c14:	bne	26c28 <main@@Base+0x139a4>
   26c18:	mov	r2, r4
   26c1c:	ldrb	r0, [r2, #1]!
   26c20:	cmp	r0, #32
   26c24:	bhi	26c3c <main@@Base+0x139b8>
   26c28:	mov	r0, r9
   26c2c:	mov	r1, r4
   26c30:	mov	r2, r8
   26c34:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   26c38:	mov	r2, r0
   26c3c:	cmp	r2, r8
   26c40:	beq	26d84 <main@@Base+0x13b00>
   26c44:	ldrb	r0, [r2]
   26c48:	cmp	r0, #44	; 0x2c
   26c4c:	bne	26d8c <main@@Base+0x13b08>
   26c50:	add	r1, r2, #1
   26c54:	sub	r0, r8, r1
   26c58:	cmp	r0, #2
   26c5c:	blt	26c84 <main@@Base+0x13a00>
   26c60:	ldrb	r0, [r1]
   26c64:	cmp	r0, #32
   26c68:	bls	26c74 <main@@Base+0x139f0>
   26c6c:	mov	r2, r1
   26c70:	b	26c94 <main@@Base+0x13a10>
   26c74:	bne	26c84 <main@@Base+0x13a00>
   26c78:	ldrb	r0, [r2, #2]!
   26c7c:	cmp	r0, #32
   26c80:	bhi	26c94 <main@@Base+0x13a10>
   26c84:	mov	r0, r9
   26c88:	mov	r2, r8
   26c8c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   26c90:	mov	r2, r0
   26c94:	cmp	r2, r8
   26c98:	beq	26dbc <main@@Base+0x13b38>
   26c9c:	ldrb	r0, [r2]
   26ca0:	cmp	r0, #125	; 0x7d
   26ca4:	bne	264f8 <main@@Base+0x13274>
   26ca8:	b	26dc8 <main@@Base+0x13b44>
   26cac:	mov	r4, r8
   26cb0:	b	26ce0 <main@@Base+0x13a5c>
   26cb4:	mov	r4, r7
   26cb8:	b	26ce0 <main@@Base+0x13a5c>
   26cbc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26cc0:	cmp	r0, #0
   26cc4:	beq	26d60 <main@@Base+0x13adc>
   26cc8:	ldr	r0, [sp, #16]
   26ccc:	mov	r1, r4
   26cd0:	mov	r2, r8
   26cd4:	mov	r3, #7
   26cd8:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   26cdc:	mov	r4, r0
   26ce0:	ldr	r9, [sp, #16]
   26ce4:	cmp	r7, r4
   26ce8:	bne	26d24 <main@@Base+0x13aa0>
   26cec:	movw	r3, #17044	; 0x4294
   26cf0:	add	r0, sp, #44	; 0x2c
   26cf4:	mov	r1, r7
   26cf8:	mov	r2, r8
   26cfc:	movt	r3, #4
   26d00:	str	r0, [sp]
   26d04:	mov	r0, r9
   26d08:	bl	22ba4 <main@@Base+0xf920>
   26d0c:	mov	r4, r0
   26d10:	cmp	r0, r7
   26d14:	cmpne	r4, r8
   26d18:	beq	26f08 <main@@Base+0x13c84>
   26d1c:	ldr	r5, [sp, #44]	; 0x2c
   26d20:	ldr	r9, [sp, #16]
   26d24:	cmp	r5, #0
   26d28:	bne	26d38 <main@@Base+0x13ab4>
   26d2c:	ldrb	r0, [r9, #8]
   26d30:	tst	r0, #2
   26d34:	beq	26d58 <main@@Base+0x13ad4>
   26d38:	ldr	r0, [r9]
   26d3c:	mov	r1, #1
   26d40:	mov	r2, #4
   26d44:	mov	r3, #4
   26d48:	bl	2b574 <flatcc_builder_table_add@@Base>
   26d4c:	cmp	r0, #0
   26d50:	beq	26f08 <main@@Base+0x13c84>
   26d54:	str	r5, [r0]
   26d58:	ldr	r6, [sp, #24]
   26d5c:	b	26bf4 <main@@Base+0x13970>
   26d60:	ldr	r5, [fp, #-40]	; 0xffffffd8
   26d64:	str	r5, [sp, #44]	; 0x2c
   26d68:	b	26ce0 <main@@Base+0x13a5c>
   26d6c:	mov	r0, r9
   26d70:	mov	r1, r2
   26d74:	mov	r2, r8
   26d78:	mov	r3, #10
   26d7c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   26d80:	b	24358 <main@@Base+0x110d4>
   26d84:	mov	r4, r8
   26d88:	b	263d8 <main@@Base+0x13154>
   26d8c:	cmp	r0, #125	; 0x7d
   26d90:	bne	26e4c <main@@Base+0x13bc8>
   26d94:	add	r1, r2, #1
   26d98:	sub	r0, r8, r1
   26d9c:	cmp	r0, #2
   26da0:	blt	26e80 <main@@Base+0x13bfc>
   26da4:	ldrb	r0, [r1]
   26da8:	cmp	r0, #32
   26dac:	bls	26e64 <main@@Base+0x13be0>
   26db0:	ldr	r9, [sp, #16]
   26db4:	ldr	r6, [sp, #24]
   26db8:	b	26de4 <main@@Base+0x13b60>
   26dbc:	mov	r0, r9
   26dc0:	mov	r1, r8
   26dc4:	b	26e54 <main@@Base+0x13bd0>
   26dc8:	add	r1, r2, #1
   26dcc:	sub	r0, r8, r1
   26dd0:	cmp	r0, #2
   26dd4:	blt	26e80 <main@@Base+0x13bfc>
   26dd8:	ldrb	r0, [r1]
   26ddc:	cmp	r0, #32
   26de0:	bls	26e6c <main@@Base+0x13be8>
   26de4:	mov	r4, r1
   26de8:	b	263d8 <main@@Base+0x13154>
   26dec:	bne	26e00 <main@@Base+0x13b7c>
   26df0:	ldrb	r0, [r2, #2]!
   26df4:	mov	r4, r2
   26df8:	cmp	r0, #32
   26dfc:	bhi	2435c <main@@Base+0x110d8>
   26e00:	mov	r0, r9
   26e04:	mov	r2, r8
   26e08:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   26e0c:	b	24358 <main@@Base+0x110d4>
   26e10:	mov	r0, r9
   26e14:	mov	r1, r2
   26e18:	mov	r2, r8
   26e1c:	mov	r3, #10
   26e20:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   26e24:	b	24550 <main@@Base+0x112cc>
   26e28:	bne	26e3c <main@@Base+0x13bb8>
   26e2c:	ldrb	r0, [r2, #2]!
   26e30:	mov	r4, r2
   26e34:	cmp	r0, #32
   26e38:	bhi	24554 <main@@Base+0x112d0>
   26e3c:	mov	r0, r9
   26e40:	mov	r2, r8
   26e44:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   26e48:	b	24550 <main@@Base+0x112cc>
   26e4c:	mov	r0, r9
   26e50:	mov	r1, r2
   26e54:	mov	r2, r8
   26e58:	mov	r3, #10
   26e5c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   26e60:	b	263d4 <main@@Base+0x13150>
   26e64:	ldr	r9, [sp, #16]
   26e68:	ldr	r6, [sp, #24]
   26e6c:	bne	26e80 <main@@Base+0x13bfc>
   26e70:	ldrb	r0, [r2, #2]!
   26e74:	mov	r4, r2
   26e78:	cmp	r0, #32
   26e7c:	bhi	263d8 <main@@Base+0x13154>
   26e80:	mov	r0, r9
   26e84:	mov	r2, r8
   26e88:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   26e8c:	b	263d4 <main@@Base+0x13150>
   26e90:	mov	r4, r8
   26e94:	b	23d0c <main@@Base+0x10a88>
   26e98:	cmp	r0, #125	; 0x7d
   26e9c:	bne	26ed0 <main@@Base+0x13c4c>
   26ea0:	add	r1, r2, #1
   26ea4:	sub	r0, r8, r1
   26ea8:	cmp	r0, #2
   26eac:	blt	26ef8 <main@@Base+0x13c74>
   26eb0:	ldrb	r0, [r1]
   26eb4:	cmp	r0, #32
   26eb8:	bls	26ee4 <main@@Base+0x13c60>
   26ebc:	mov	r4, r1
   26ec0:	b	23d0c <main@@Base+0x10a88>
   26ec4:	mov	r0, r9
   26ec8:	mov	r1, r8
   26ecc:	b	26ed8 <main@@Base+0x13c54>
   26ed0:	mov	r0, r9
   26ed4:	mov	r1, r2
   26ed8:	mov	r2, r8
   26edc:	mov	r3, #10
   26ee0:	b	23d04 <main@@Base+0x10a80>
   26ee4:	bne	26ef8 <main@@Base+0x13c74>
   26ee8:	ldrb	r0, [r2, #2]!
   26eec:	mov	r4, r2
   26ef0:	cmp	r0, #32
   26ef4:	bhi	23d0c <main@@Base+0x10a88>
   26ef8:	mov	r0, r9
   26efc:	mov	r2, r8
   26f00:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   26f04:	b	23d08 <main@@Base+0x10a84>
   26f08:	ldr	r9, [sp, #16]
   26f0c:	mov	r0, r9
   26f10:	mov	r1, r4
   26f14:	mov	r2, r8
   26f18:	mov	r3, #33	; 0x21
   26f1c:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   26f20:	mov	r4, r0
   26f24:	b	23d18 <main@@Base+0x10a94>
   26f28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26f2c:	add	fp, sp, #28
   26f30:	push	{r3}		; (str r3, [sp, #-4]!)
   26f34:	sub	r7, r2, r1
   26f38:	cmp	r7, #8
   26f3c:	movcs	r7, #8
   26f40:	sub	r5, r7, #1
   26f44:	cmp	r5, #7
   26f48:	bhi	27060 <main@@Base+0x13ddc>
   26f4c:	add	lr, pc, #32
   26f50:	mov	ip, #0
   26f54:	mov	r3, #0
   26f58:	mov	r8, #0
   26f5c:	mov	r9, #0
   26f60:	mov	sl, #0
   26f64:	mov	r7, #0
   26f68:	mov	r4, #0
   26f6c:	mov	r6, #0
   26f70:	ldr	pc, [lr, r5, lsl #2]
   26f74:	ldrdeq	r6, [r2], -r8
   26f78:	ldrdeq	r6, [r2], -r0
   26f7c:	andeq	r6, r2, r8, asr #31
   26f80:	andeq	r6, r2, r0, asr #31
   26f84:			; <UNDEFINED> instruction: 0x00026fb4
   26f88:	andeq	r6, r2, r8, lsr #31
   26f8c:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   26f90:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   26f94:	ldrb	r3, [r1, #7]
   26f98:	ldrb	r7, [r1, #6]
   26f9c:	mov	r8, ip
   26fa0:	orr	r3, r3, r7, lsl #8
   26fa4:	mov	ip, r3
   26fa8:	ldrb	r3, [r1, #5]
   26fac:	mov	r9, r8
   26fb0:	orr	ip, ip, r3, lsl #16
   26fb4:	ldrb	r3, [r1, #4]
   26fb8:	mov	sl, r9
   26fbc:	orr	ip, ip, r3, lsl #24
   26fc0:	ldrb	r3, [r1, #3]
   26fc4:	orr	r7, r3, sl
   26fc8:	ldrb	r3, [r1, #2]
   26fcc:	orr	r4, r7, r3, lsl #8
   26fd0:	ldrb	r3, [r1, #1]
   26fd4:	orr	r6, r4, r3, lsl #16
   26fd8:	ldrb	r7, [r1]
   26fdc:	movw	r3, #29797	; 0x7465
   26fe0:	movt	r3, #24931	; 0x6163
   26fe4:	eor	r3, ip, r3
   26fe8:	orr	r7, r6, r7, lsl #24
   26fec:	movw	r6, #24946	; 0x6172
   26ff0:	movt	r6, #17256	; 0x4368
   26ff4:	eor	r7, r7, r6
   26ff8:	orrs	r3, r3, r7
   26ffc:	bne	27060 <main@@Base+0x13ddc>
   27000:	add	lr, r1, #8
   27004:	sub	r7, r2, lr
   27008:	cmp	r7, #8
   2700c:	mov	r3, r7
   27010:	movcs	r3, #8
   27014:	sub	r3, r3, #1
   27018:	cmp	r3, #7
   2701c:	bhi	27060 <main@@Base+0x13ddc>
   27020:	cmp	r7, #2
   27024:	blt	27060 <main@@Base+0x13ddc>
   27028:	ldrb	r3, [lr]
   2702c:	cmp	r3, #114	; 0x72
   27030:	bne	27060 <main@@Base+0x13ddc>
   27034:	ldrb	r3, [r1, #9]
   27038:	mov	ip, lr
   2703c:	cmp	r3, #46	; 0x2e
   27040:	addeq	ip, r1, #10
   27044:	cmp	ip, lr
   27048:	beq	27060 <main@@Base+0x13ddc>
   2704c:	ldr	r3, [sp]
   27050:	mov	r1, ip
   27054:	sub	sp, fp, #28
   27058:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2705c:	b	23984 <main@@Base+0x10700>
   27060:	mov	r0, r1
   27064:	sub	sp, fp, #28
   27068:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2706c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27070:	add	fp, sp, #28
   27074:	sub	sp, sp, #36	; 0x24
   27078:	ldr	r7, [fp, #8]
   2707c:	mov	r9, r0
   27080:	mov	r0, #0
   27084:	mov	r8, r2
   27088:	mov	r4, r1
   2708c:	cmp	r3, #11
   27090:	str	r0, [r7]
   27094:	bhi	270e8 <main@@Base+0x13e64>
   27098:	add	r0, pc, #0
   2709c:	ldr	pc, [r0, r3, lsl #2]
   270a0:	andeq	r7, r2, r8, lsr #2
   270a4:	andeq	r7, r2, r8, lsl #2
   270a8:	andeq	r7, r2, ip, ror #2
   270ac:	andeq	r7, r2, r8, lsl #2
   270b0:	andeq	r7, r2, r8, lsl #2
   270b4:	andeq	r7, r2, r8, lsl #2
   270b8:	andeq	r7, r2, r8, lsl #2
   270bc:	andeq	r7, r2, r8, lsl #2
   270c0:	andeq	r7, r2, r0, asr #3
   270c4:	ldrdeq	r7, [r2], -r0
   270c8:	ldrdeq	r7, [r2], -r0
   270cc:	strdeq	r7, [r2], -r0
   270d0:	mov	r0, r9
   270d4:	mov	r1, r4
   270d8:	mov	r2, r8
   270dc:	mov	r3, r7
   270e0:	bl	27f00 <main@@Base+0x14c7c>
   270e4:	b	272b8 <main@@Base+0x14034>
   270e8:	cmp	r3, #255	; 0xff
   270ec:	bne	27108 <main@@Base+0x13e84>
   270f0:	mov	r0, r9
   270f4:	mov	r1, r4
   270f8:	mov	r2, r8
   270fc:	mov	r3, r7
   27100:	bl	2f2d8 <flatcc_json_parser_build_string@@Base>
   27104:	b	272b8 <main@@Base+0x14034>
   27108:	ldrb	r0, [r9, #8]
   2710c:	tst	r0, #1
   27110:	bne	2721c <main@@Base+0x13f98>
   27114:	mov	r0, r9
   27118:	mov	r1, r4
   2711c:	mov	r2, r8
   27120:	mov	r3, #15
   27124:	b	27160 <main@@Base+0x13edc>
   27128:	sub	r0, r8, r4
   2712c:	cmp	r0, #4
   27130:	blt	27150 <main@@Base+0x13ecc>
   27134:	movw	r1, #12306	; 0x3012
   27138:	mov	r0, r4
   2713c:	mov	r2, #4
   27140:	movt	r1, #3
   27144:	bl	12b34 <bcmp@plt>
   27148:	cmp	r0, #0
   2714c:	beq	272f8 <main@@Base+0x14074>
   27150:	mov	r0, r9
   27154:	mov	r1, r4
   27158:	mov	r2, r8
   2715c:	mov	r3, #26
   27160:	sub	sp, fp, #28
   27164:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27168:	b	2cebc <flatcc_json_parser_set_error@@Base>
   2716c:	mov	r0, #0
   27170:	mov	r1, #1
   27174:	str	r0, [r7]
   27178:	ldr	r0, [r9]
   2717c:	bl	2a328 <flatcc_builder_start_table@@Base>
   27180:	cmp	r0, #0
   27184:	bne	272a4 <main@@Base+0x14020>
   27188:	cmp	r4, r8
   2718c:	beq	27280 <main@@Base+0x13ffc>
   27190:	ldrb	r0, [r4]
   27194:	cmp	r0, #123	; 0x7b
   27198:	bne	27280 <main@@Base+0x13ffc>
   2719c:	add	r1, r4, #1
   271a0:	sub	r0, r8, r1
   271a4:	cmp	r0, #2
   271a8:	blt	27824 <main@@Base+0x145a0>
   271ac:	ldrb	r0, [r1]
   271b0:	cmp	r0, #32
   271b4:	bls	27814 <main@@Base+0x14590>
   271b8:	mov	r4, r1
   271bc:	b	27834 <main@@Base+0x145b0>
   271c0:	mov	r0, #0
   271c4:	mov	r1, #2
   271c8:	mov	r2, #2
   271cc:	str	r0, [r7]
   271d0:	ldr	r0, [r9]
   271d4:	bl	295ec <flatcc_builder_start_struct@@Base>
   271d8:	cmp	r0, #0
   271dc:	beq	27274 <main@@Base+0x13ff0>
   271e0:	cmp	r4, r8
   271e4:	beq	27234 <main@@Base+0x13fb0>
   271e8:	ldrb	r1, [r4]
   271ec:	cmp	r1, #123	; 0x7b
   271f0:	bne	27234 <main@@Base+0x13fb0>
   271f4:	add	r1, r4, #1
   271f8:	str	r0, [sp, #4]
   271fc:	sub	r0, r8, r1
   27200:	cmp	r0, #2
   27204:	blt	27328 <main@@Base+0x140a4>
   27208:	ldrb	r0, [r1]
   2720c:	cmp	r0, #32
   27210:	bls	27318 <main@@Base+0x14094>
   27214:	mov	r4, r1
   27218:	b	27338 <main@@Base+0x140b4>
   2721c:	mov	r0, r9
   27220:	mov	r1, r4
   27224:	mov	r2, r8
   27228:	sub	sp, fp, #28
   2722c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27230:	b	2d828 <flatcc_json_parser_generic_json@@Base>
   27234:	mov	r0, r9
   27238:	mov	r1, r4
   2723c:	mov	r2, r8
   27240:	mov	r3, #21
   27244:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   27248:	mov	r4, r0
   2724c:	cmp	r4, r8
   27250:	mov	r1, r8
   27254:	beq	27278 <main@@Base+0x13ff4>
   27258:	ldr	r0, [r9]
   2725c:	bl	2968c <flatcc_builder_end_struct@@Base>
   27260:	cmp	r0, #0
   27264:	mov	r1, r4
   27268:	str	r0, [r7]
   2726c:	bne	272bc <main@@Base+0x14038>
   27270:	b	27278 <main@@Base+0x13ff4>
   27274:	mov	r1, r4
   27278:	mov	r0, r9
   2727c:	b	272ac <main@@Base+0x14028>
   27280:	mov	r0, r9
   27284:	mov	r1, r4
   27288:	mov	r2, r8
   2728c:	mov	r3, #21
   27290:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   27294:	mov	r4, r0
   27298:	ldr	r0, [r9, #24]
   2729c:	cmp	r0, #0
   272a0:	beq	27300 <main@@Base+0x1407c>
   272a4:	mov	r0, r9
   272a8:	mov	r1, r4
   272ac:	mov	r2, r8
   272b0:	mov	r3, #33	; 0x21
   272b4:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   272b8:	mov	r4, r0
   272bc:	ldr	r0, [r9, #24]
   272c0:	cmp	r0, #0
   272c4:	bne	272ec <main@@Base+0x14068>
   272c8:	ldr	r0, [r7]
   272cc:	cmp	r0, #0
   272d0:	bne	272ec <main@@Base+0x14068>
   272d4:	mov	r0, r9
   272d8:	mov	r1, r4
   272dc:	mov	r2, r8
   272e0:	mov	r3, #33	; 0x21
   272e4:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   272e8:	mov	r4, r0
   272ec:	mov	r0, r4
   272f0:	sub	sp, fp, #28
   272f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   272f8:	add	r4, r4, #4
   272fc:	b	272ec <main@@Base+0x14068>
   27300:	ldr	r0, [r9]
   27304:	bl	2ac88 <flatcc_builder_end_table@@Base>
   27308:	cmp	r0, #0
   2730c:	str	r0, [r7]
   27310:	bne	272bc <main@@Base+0x14038>
   27314:	b	272a4 <main@@Base+0x14020>
   27318:	bne	27328 <main@@Base+0x140a4>
   2731c:	ldrb	r0, [r4, #2]!
   27320:	cmp	r0, #32
   27324:	bhi	27338 <main@@Base+0x140b4>
   27328:	mov	r0, r9
   2732c:	mov	r2, r8
   27330:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   27334:	mov	r4, r0
   27338:	cmp	r4, r8
   2733c:	mov	r2, r8
   27340:	beq	2737c <main@@Base+0x140f8>
   27344:	ldrb	r0, [r4]
   27348:	cmp	r0, #125	; 0x7d
   2734c:	bne	27378 <main@@Base+0x140f4>
   27350:	add	r1, r4, #1
   27354:	sub	r0, r8, r1
   27358:	cmp	r0, #2
   2735c:	blt	27e78 <main@@Base+0x14bf4>
   27360:	ldrb	r0, [r1]
   27364:	cmp	r0, #32
   27368:	bhi	27800 <main@@Base+0x1457c>
   2736c:	bne	27e78 <main@@Base+0x14bf4>
   27370:	ldrb	r0, [r4, #2]!
   27374:	b	27e70 <main@@Base+0x14bec>
   27378:	mov	r2, r4
   2737c:	str	r9, [sp, #12]
   27380:	cmp	r2, r8
   27384:	mov	r1, r8
   27388:	beq	273d4 <main@@Base+0x14150>
   2738c:	ldrb	r0, [r2]
   27390:	cmp	r0, #46	; 0x2e
   27394:	beq	273ac <main@@Base+0x14128>
   27398:	cmp	r0, #34	; 0x22
   2739c:	bne	273c8 <main@@Base+0x14144>
   273a0:	mov	r0, #0
   273a4:	add	r1, r2, #1
   273a8:	b	273d0 <main@@Base+0x1414c>
   273ac:	mov	r1, r2
   273b0:	mov	r0, r9
   273b4:	mov	r2, r8
   273b8:	mov	r3, #5
   273bc:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   273c0:	mov	r1, r0
   273c4:	b	273d4 <main@@Base+0x14150>
   273c8:	mov	r0, #1
   273cc:	mov	r1, r2
   273d0:	str	r0, [r9, #12]
   273d4:	sub	r0, r8, r1
   273d8:	mov	r2, #8
   273dc:	cmp	r0, #8
   273e0:	movcs	r0, r2
   273e4:	sub	r4, r0, #1
   273e8:	cmp	r4, #7
   273ec:	bhi	27534 <main@@Base+0x142b0>
   273f0:	add	r0, pc, #36	; 0x24
   273f4:	mov	r9, r7
   273f8:	mov	sl, #0
   273fc:	mov	ip, #0
   27400:	mov	lr, #0
   27404:	mov	r6, #0
   27408:	mov	r3, #0
   2740c:	mov	r5, #0
   27410:	mov	r2, #0
   27414:	mov	r7, #0
   27418:	ldr	pc, [r0, r4, lsl #2]
   2741c:	andeq	r7, r2, r0, lsl #9
   27420:	andeq	r7, r2, r8, ror r4
   27424:	andeq	r7, r2, r0, ror r4
   27428:	andeq	r7, r2, r8, ror #8
   2742c:	andeq	r7, r2, ip, asr r4
   27430:	andeq	r7, r2, r0, asr r4
   27434:	andeq	r7, r2, r0, asr #8
   27438:	andeq	r7, r2, ip, lsr r4
   2743c:	ldrb	ip, [r1, #7]
   27440:	ldrb	r0, [r1, #6]
   27444:	mov	lr, sl
   27448:	orr	r0, ip, r0, lsl #8
   2744c:	mov	sl, r0
   27450:	ldrb	r0, [r1, #5]
   27454:	mov	r6, lr
   27458:	orr	sl, sl, r0, lsl #16
   2745c:	ldrb	r0, [r1, #4]
   27460:	mov	r3, r6
   27464:	orr	sl, sl, r0, lsl #24
   27468:	ldrb	r0, [r1, #3]
   2746c:	orr	r5, r0, r3
   27470:	ldrb	r0, [r1, #2]
   27474:	orr	r2, r5, r0, lsl #8
   27478:	ldrb	r0, [r1, #1]
   2747c:	orr	r7, r2, r0, lsl #16
   27480:	ldrb	r2, [r1]
   27484:	movw	r0, #25966	; 0x656e
   27488:	movw	r3, #26994	; 0x6972
   2748c:	movt	r0, #24428	; 0x5f6c
   27490:	movt	r3, #26721	; 0x6861
   27494:	eor	r0, sl, r0
   27498:	orr	r2, r7, r2, lsl #24
   2749c:	mov	r7, r9
   274a0:	ldr	r9, [sp, #12]
   274a4:	eor	r2, r2, r3
   274a8:	orrs	r0, r0, r2
   274ac:	bne	27534 <main@@Base+0x142b0>
   274b0:	add	r4, r1, #8
   274b4:	mov	r3, #8
   274b8:	sub	r0, r8, r4
   274bc:	cmp	r0, #8
   274c0:	movcc	r3, r0
   274c4:	sub	r2, r3, #3
   274c8:	cmp	r2, #6
   274cc:	bcs	2753c <main@@Base+0x142b8>
   274d0:	ldrb	r2, [r1, #10]
   274d4:	lsl	r2, r2, #8
   274d8:	ldrb	r3, [r1, #9]
   274dc:	orr	r2, r2, r3, lsl #16
   274e0:	ldrb	r3, [r4]
   274e4:	bic	r2, r2, #255	; 0xff
   274e8:	orr	r2, r2, r3, lsl #24
   274ec:	movw	r3, #26624	; 0x6800
   274f0:	movt	r3, #26484	; 0x6774
   274f4:	teq	r2, r3
   274f8:	bne	27680 <main@@Base+0x143fc>
   274fc:	cmp	r0, #4
   27500:	blt	27680 <main@@Base+0x143fc>
   27504:	mov	r2, r1
   27508:	ldr	r3, [r9, #12]
   2750c:	ldrb	r0, [r2, #11]!
   27510:	cmp	r3, #0
   27514:	beq	27554 <main@@Base+0x142d0>
   27518:	cmp	r0, #33	; 0x21
   2751c:	bcc	27528 <main@@Base+0x142a4>
   27520:	cmp	r0, #58	; 0x3a
   27524:	bne	27680 <main@@Base+0x143fc>
   27528:	mov	r0, #0
   2752c:	str	r0, [r9, #12]
   27530:	b	27560 <main@@Base+0x142dc>
   27534:	mov	r0, r9
   27538:	b	27688 <main@@Base+0x14404>
   2753c:	mov	r2, #0
   27540:	cmp	r3, #1
   27544:	beq	274e0 <main@@Base+0x1425c>
   27548:	cmp	r3, #2
   2754c:	beq	274d8 <main@@Base+0x14254>
   27550:	b	27680 <main@@Base+0x143fc>
   27554:	cmp	r0, #34	; 0x22
   27558:	bne	27680 <main@@Base+0x143fc>
   2755c:	add	r2, r1, #12
   27560:	sub	r0, r8, r2
   27564:	cmp	r0, #2
   27568:	blt	27594 <main@@Base+0x14310>
   2756c:	ldrb	r0, [r2]
   27570:	cmp	r0, #32
   27574:	bls	27580 <main@@Base+0x142fc>
   27578:	mov	r5, r2
   2757c:	b	275a8 <main@@Base+0x14324>
   27580:	bne	27594 <main@@Base+0x14310>
   27584:	mov	r5, r2
   27588:	ldrb	r0, [r5, #1]!
   2758c:	cmp	r0, #32
   27590:	bhi	275a8 <main@@Base+0x14324>
   27594:	mov	r1, r2
   27598:	mov	r0, r9
   2759c:	mov	r2, r8
   275a0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   275a4:	mov	r5, r0
   275a8:	cmp	r5, r8
   275ac:	beq	275e0 <main@@Base+0x1435c>
   275b0:	ldrb	r0, [r5]
   275b4:	cmp	r0, #58	; 0x3a
   275b8:	bne	275e0 <main@@Base+0x1435c>
   275bc:	add	r1, r5, #1
   275c0:	sub	r0, r8, r1
   275c4:	cmp	r0, #2
   275c8:	blt	27608 <main@@Base+0x14384>
   275cc:	ldrb	r0, [r1]
   275d0:	cmp	r0, #32
   275d4:	bls	275f8 <main@@Base+0x14374>
   275d8:	mov	r5, r1
   275dc:	b	27618 <main@@Base+0x14394>
   275e0:	mov	r0, r9
   275e4:	mov	r1, r5
   275e8:	mov	r2, r8
   275ec:	mov	r3, #4
   275f0:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   275f4:	b	27614 <main@@Base+0x14390>
   275f8:	bne	27608 <main@@Base+0x14384>
   275fc:	ldrb	r0, [r5, #2]!
   27600:	cmp	r0, #32
   27604:	bhi	27618 <main@@Base+0x14394>
   27608:	mov	r0, r9
   2760c:	mov	r2, r8
   27610:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   27614:	mov	r5, r0
   27618:	cmp	r4, r5
   2761c:	beq	27680 <main@@Base+0x143fc>
   27620:	mov	r4, #0
   27624:	cmp	r5, r8
   27628:	str	r4, [sp, #28]
   2762c:	str	r4, [sp, #24]
   27630:	strh	r4, [sp, #16]
   27634:	str	r4, [sp, #20]
   27638:	beq	27748 <main@@Base+0x144c4>
   2763c:	add	r0, sp, #24
   27640:	mov	r1, r5
   27644:	mov	r2, r8
   27648:	add	r3, sp, #20
   2764c:	str	r0, [sp]
   27650:	mov	r0, r9
   27654:	bl	2edac <flatcc_json_parser_integer@@Base>
   27658:	cmp	r0, r5
   2765c:	beq	27750 <main@@Base+0x144cc>
   27660:	mov	r1, r0
   27664:	ldr	r0, [sp, #20]
   27668:	cmp	r0, #0
   2766c:	beq	27758 <main@@Base+0x144d4>
   27670:	mov	r0, r9
   27674:	mov	r2, r8
   27678:	mov	r3, #8
   2767c:	b	27778 <main@@Base+0x144f4>
   27680:	mov	r0, r9
   27684:	mov	r1, r4
   27688:	mov	r2, r8
   2768c:	bl	2d5e0 <flatcc_json_parser_unmatched_symbol@@Base>
   27690:	mov	r1, r0
   27694:	sub	r0, r8, r1
   27698:	cmp	r0, #2
   2769c:	blt	276c8 <main@@Base+0x14444>
   276a0:	ldrb	r0, [r1]
   276a4:	cmp	r0, #32
   276a8:	bls	276b4 <main@@Base+0x14430>
   276ac:	mov	r2, r1
   276b0:	b	276d8 <main@@Base+0x14454>
   276b4:	bne	276c8 <main@@Base+0x14444>
   276b8:	mov	r2, r1
   276bc:	ldrb	r0, [r2, #1]!
   276c0:	cmp	r0, #32
   276c4:	bhi	276d8 <main@@Base+0x14454>
   276c8:	mov	r0, r9
   276cc:	mov	r2, r8
   276d0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   276d4:	mov	r2, r0
   276d8:	cmp	r2, r8
   276dc:	beq	277d4 <main@@Base+0x14550>
   276e0:	ldrb	r0, [r2]
   276e4:	cmp	r0, #44	; 0x2c
   276e8:	bne	277dc <main@@Base+0x14558>
   276ec:	add	r1, r2, #1
   276f0:	sub	r0, r8, r1
   276f4:	cmp	r0, #2
   276f8:	blt	27720 <main@@Base+0x1449c>
   276fc:	ldrb	r0, [r1]
   27700:	cmp	r0, #32
   27704:	bls	27710 <main@@Base+0x1448c>
   27708:	mov	r2, r1
   2770c:	b	27730 <main@@Base+0x144ac>
   27710:	bne	27720 <main@@Base+0x1449c>
   27714:	ldrb	r0, [r2, #2]!
   27718:	cmp	r0, #32
   2771c:	bhi	27730 <main@@Base+0x144ac>
   27720:	mov	r0, r9
   27724:	mov	r2, r8
   27728:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2772c:	mov	r2, r0
   27730:	cmp	r2, r8
   27734:	beq	27808 <main@@Base+0x14584>
   27738:	ldrb	r0, [r2]
   2773c:	cmp	r0, #125	; 0x7d
   27740:	bne	27380 <main@@Base+0x140fc>
   27744:	b	277e4 <main@@Base+0x14560>
   27748:	mov	r1, r8
   2774c:	b	27780 <main@@Base+0x144fc>
   27750:	mov	r1, r5
   27754:	b	27780 <main@@Base+0x144fc>
   27758:	ldr	r0, [sp, #24]
   2775c:	ldr	r2, [sp, #28]
   27760:	subs	r3, r0, #65536	; 0x10000
   27764:	sbcs	r2, r2, #0
   27768:	bcc	277c8 <main@@Base+0x14544>
   2776c:	mov	r0, r9
   27770:	mov	r2, r8
   27774:	mov	r3, #7
   27778:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   2777c:	mov	r1, r0
   27780:	cmp	r5, r1
   27784:	bne	277bc <main@@Base+0x14538>
   27788:	movw	r3, #17160	; 0x4308
   2778c:	add	r0, sp, #16
   27790:	mov	r1, r5
   27794:	mov	r2, r8
   27798:	movt	r3, #4
   2779c:	str	r0, [sp]
   277a0:	mov	r0, r9
   277a4:	bl	28520 <main@@Base+0x1529c>
   277a8:	mov	r1, r0
   277ac:	cmp	r0, r5
   277b0:	cmpne	r1, r8
   277b4:	beq	27ec0 <main@@Base+0x14c3c>
   277b8:	ldrh	r4, [sp, #16]
   277bc:	ldr	r0, [sp, #4]
   277c0:	strh	r4, [r0]
   277c4:	b	27694 <main@@Base+0x14410>
   277c8:	mov	r4, r0
   277cc:	strh	r0, [sp, #16]
   277d0:	b	27780 <main@@Base+0x144fc>
   277d4:	mov	r1, r8
   277d8:	b	27278 <main@@Base+0x13ff4>
   277dc:	cmp	r0, #125	; 0x7d
   277e0:	bne	27e50 <main@@Base+0x14bcc>
   277e4:	add	r1, r2, #1
   277e8:	sub	r0, r8, r1
   277ec:	cmp	r0, #2
   277f0:	blt	27e78 <main@@Base+0x14bf4>
   277f4:	ldrb	r0, [r1]
   277f8:	cmp	r0, #32
   277fc:	bls	27e64 <main@@Base+0x14be0>
   27800:	mov	r4, r1
   27804:	b	2724c <main@@Base+0x13fc8>
   27808:	mov	r0, r9
   2780c:	mov	r1, r8
   27810:	b	27e58 <main@@Base+0x14bd4>
   27814:	bne	27824 <main@@Base+0x145a0>
   27818:	ldrb	r0, [r4, #2]!
   2781c:	cmp	r0, #32
   27820:	bhi	27834 <main@@Base+0x145b0>
   27824:	mov	r0, r9
   27828:	mov	r2, r8
   2782c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   27830:	mov	r4, r0
   27834:	cmp	r4, r8
   27838:	mov	r2, r8
   2783c:	beq	27878 <main@@Base+0x145f4>
   27840:	ldrb	r0, [r4]
   27844:	cmp	r0, #125	; 0x7d
   27848:	bne	27874 <main@@Base+0x145f0>
   2784c:	add	r1, r4, #1
   27850:	sub	r0, r8, r1
   27854:	cmp	r0, #2
   27858:	blt	27eb0 <main@@Base+0x14c2c>
   2785c:	ldrb	r0, [r1]
   27860:	cmp	r0, #32
   27864:	bhi	27e3c <main@@Base+0x14bb8>
   27868:	bne	27eb0 <main@@Base+0x14c2c>
   2786c:	ldrb	r0, [r4, #2]!
   27870:	b	27ea8 <main@@Base+0x14c24>
   27874:	mov	r2, r4
   27878:	str	r7, [sp, #8]
   2787c:	cmp	r2, r8
   27880:	mov	r1, r8
   27884:	beq	278d0 <main@@Base+0x1464c>
   27888:	ldrb	r0, [r2]
   2788c:	cmp	r0, #46	; 0x2e
   27890:	beq	278a8 <main@@Base+0x14624>
   27894:	cmp	r0, #34	; 0x22
   27898:	bne	278c4 <main@@Base+0x14640>
   2789c:	mov	r0, #0
   278a0:	add	r1, r2, #1
   278a4:	b	278cc <main@@Base+0x14648>
   278a8:	mov	r1, r2
   278ac:	mov	r0, r9
   278b0:	mov	r2, r8
   278b4:	mov	r3, #5
   278b8:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   278bc:	mov	r1, r0
   278c0:	b	278d0 <main@@Base+0x1464c>
   278c4:	mov	r0, #1
   278c8:	mov	r1, r2
   278cc:	str	r0, [r9, #12]
   278d0:	sub	r0, r8, r1
   278d4:	mov	r2, #8
   278d8:	cmp	r0, #8
   278dc:	movcs	r0, r2
   278e0:	sub	r4, r0, #1
   278e4:	cmp	r4, #7
   278e8:	bhi	27b08 <main@@Base+0x14884>
   278ec:	add	sl, pc, #32
   278f0:	mov	r0, #0
   278f4:	mov	ip, #0
   278f8:	mov	lr, #0
   278fc:	mov	r6, #0
   27900:	mov	r3, #0
   27904:	mov	r2, #0
   27908:	mov	r7, #0
   2790c:	mov	r5, #0
   27910:	ldr	pc, [sl, r4, lsl #2]
   27914:	andeq	r7, r2, r8, ror r9
   27918:	andeq	r7, r2, r0, ror r9
   2791c:	andeq	r7, r2, r8, ror #18
   27920:	andeq	r7, r2, r0, ror #18
   27924:	andeq	r7, r2, r4, asr r9
   27928:	andeq	r7, r2, r8, asr #18
   2792c:	andeq	r7, r2, r8, lsr r9
   27930:	andeq	r7, r2, r4, lsr r9
   27934:	ldrb	ip, [r1, #7]
   27938:	ldrb	r2, [r1, #6]
   2793c:	mov	lr, r0
   27940:	orr	r2, ip, r2, lsl #8
   27944:	mov	r0, r2
   27948:	ldrb	r2, [r1, #5]
   2794c:	mov	r6, lr
   27950:	orr	r0, r0, r2, lsl #16
   27954:	ldrb	r2, [r1, #4]
   27958:	mov	r3, r6
   2795c:	orr	r0, r0, r2, lsl #24
   27960:	ldrb	r2, [r1, #3]
   27964:	orr	r2, r2, r3
   27968:	ldrb	r3, [r1, #2]
   2796c:	orr	r7, r2, r3, lsl #8
   27970:	ldrb	r2, [r1, #1]
   27974:	orr	r5, r7, r2, lsl #16
   27978:	movw	r2, #24948	; 0x6174
   2797c:	movw	r3, #28530	; 0x6f72
   27980:	movt	r2, #25695	; 0x645f
   27984:	movt	r3, #29559	; 0x7377
   27988:	eor	r0, r0, r2
   2798c:	ldrb	r2, [r1]
   27990:	orr	r2, r5, r2, lsl #24
   27994:	eor	r2, r2, r3
   27998:	orrs	r0, r0, r2
   2799c:	bne	27b08 <main@@Base+0x14884>
   279a0:	add	lr, r1, #8
   279a4:	mov	r2, #8
   279a8:	sub	r0, r8, lr
   279ac:	cmp	r0, #8
   279b0:	movcs	r0, r2
   279b4:	sub	r3, r0, #1
   279b8:	cmp	r3, #7
   279bc:	bhi	27b10 <main@@Base+0x1488c>
   279c0:	add	r6, pc, #36	; 0x24
   279c4:	mov	r2, #0
   279c8:	mov	r0, #0
   279cc:	mov	sl, #0
   279d0:	mov	r4, #0
   279d4:	mov	r5, #0
   279d8:	mov	r7, #0
   279dc:	mov	ip, #0
   279e0:	str	r2, [sp, #4]
   279e4:	mov	r2, #0
   279e8:	ldr	pc, [r6, r3, lsl #2]
   279ec:	andeq	r7, r2, r8, asr sl
   279f0:	andeq	r7, r2, r0, asr sl
   279f4:	andeq	r7, r2, r8, asr #20
   279f8:	andeq	r7, r2, r0, asr #20
   279fc:	andeq	r7, r2, r4, lsr sl
   27a00:	andeq	r7, r2, r8, lsr #20
   27a04:	andeq	r7, r2, r4, lsl sl
   27a08:	andeq	r7, r2, ip, lsl #20
   27a0c:	ldrb	r2, [r1, #15]
   27a10:	str	r2, [sp, #4]
   27a14:	ldrb	r2, [r1, #14]
   27a18:	ldr	r3, [sp, #4]
   27a1c:	mov	sl, r0
   27a20:	orr	r2, r3, r2, lsl #8
   27a24:	mov	r0, r2
   27a28:	ldrb	r2, [r1, #13]
   27a2c:	mov	r4, sl
   27a30:	orr	r0, r0, r2, lsl #16
   27a34:	ldrb	r2, [r1, #12]
   27a38:	mov	r5, r4
   27a3c:	orr	r0, r0, r2, lsl #24
   27a40:	ldrb	r2, [r1, #11]
   27a44:	orr	r2, r2, r5
   27a48:	ldrb	r3, [r1, #10]
   27a4c:	orr	r7, r2, r3, lsl #8
   27a50:	ldrb	r2, [r1, #9]
   27a54:	orr	ip, r7, r2, lsl #16
   27a58:	movw	r2, #24941	; 0x616d
   27a5c:	movw	r3, #25451	; 0x636b
   27a60:	movt	r2, #24420	; 0x5f64
   27a64:	movt	r3, #29793	; 0x7461
   27a68:	eor	r0, r0, r2
   27a6c:	ldrb	r2, [lr]
   27a70:	orr	r2, ip, r2, lsl #24
   27a74:	eor	r2, r2, r3
   27a78:	orrs	r0, r0, r2
   27a7c:	bne	27b10 <main@@Base+0x1488c>
   27a80:	add	r4, r1, #16
   27a84:	mov	r3, #8
   27a88:	sub	r0, r8, r4
   27a8c:	cmp	r0, #8
   27a90:	movcc	r3, r0
   27a94:	sub	r2, r3, #3
   27a98:	cmp	r2, #6
   27a9c:	bcs	27be0 <main@@Base+0x1495c>
   27aa0:	ldrb	r2, [r1, #18]
   27aa4:	ldr	r7, [sp, #8]
   27aa8:	lsl	r2, r2, #8
   27aac:	ldrb	r3, [r1, #17]
   27ab0:	orr	r2, r2, r3, lsl #16
   27ab4:	ldrb	r3, [r4]
   27ab8:	bic	r2, r2, #255	; 0xff
   27abc:	orr	r2, r2, r3, lsl #24
   27ac0:	movw	r3, #25856	; 0x6500
   27ac4:	movt	r3, #24935	; 0x6167
   27ac8:	teq	r2, r3
   27acc:	bne	27d40 <main@@Base+0x14abc>
   27ad0:	cmp	r0, #4
   27ad4:	blt	27d40 <main@@Base+0x14abc>
   27ad8:	mov	r2, r1
   27adc:	ldr	r3, [r9, #12]
   27ae0:	ldrb	r0, [r2, #19]!
   27ae4:	cmp	r3, #0
   27ae8:	beq	27bfc <main@@Base+0x14978>
   27aec:	cmp	r0, #33	; 0x21
   27af0:	bcc	27afc <main@@Base+0x14878>
   27af4:	cmp	r0, #58	; 0x3a
   27af8:	bne	27d40 <main@@Base+0x14abc>
   27afc:	mov	r0, #0
   27b00:	str	r0, [r9, #12]
   27b04:	b	27c08 <main@@Base+0x14984>
   27b08:	mov	r0, r9
   27b0c:	b	27b18 <main@@Base+0x14894>
   27b10:	mov	r0, r9
   27b14:	mov	r1, lr
   27b18:	mov	r2, r8
   27b1c:	bl	2d5e0 <flatcc_json_parser_unmatched_symbol@@Base>
   27b20:	ldr	r7, [sp, #8]
   27b24:	mov	r4, r0
   27b28:	sub	r0, r8, r4
   27b2c:	cmp	r0, #2
   27b30:	blt	27b5c <main@@Base+0x148d8>
   27b34:	ldrb	r0, [r4]
   27b38:	cmp	r0, #32
   27b3c:	bls	27b48 <main@@Base+0x148c4>
   27b40:	mov	r2, r4
   27b44:	b	27b70 <main@@Base+0x148ec>
   27b48:	bne	27b5c <main@@Base+0x148d8>
   27b4c:	mov	r2, r4
   27b50:	ldrb	r0, [r2, #1]!
   27b54:	cmp	r0, #32
   27b58:	bhi	27b70 <main@@Base+0x148ec>
   27b5c:	mov	r0, r9
   27b60:	mov	r1, r4
   27b64:	mov	r2, r8
   27b68:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   27b6c:	mov	r2, r0
   27b70:	cmp	r2, r8
   27b74:	beq	27e10 <main@@Base+0x14b8c>
   27b78:	ldrb	r0, [r2]
   27b7c:	cmp	r0, #44	; 0x2c
   27b80:	bne	27e18 <main@@Base+0x14b94>
   27b84:	add	r1, r2, #1
   27b88:	sub	r0, r8, r1
   27b8c:	cmp	r0, #2
   27b90:	blt	27bb8 <main@@Base+0x14934>
   27b94:	ldrb	r0, [r1]
   27b98:	cmp	r0, #32
   27b9c:	bls	27ba8 <main@@Base+0x14924>
   27ba0:	mov	r2, r1
   27ba4:	b	27bc8 <main@@Base+0x14944>
   27ba8:	bne	27bb8 <main@@Base+0x14934>
   27bac:	ldrb	r0, [r2, #2]!
   27bb0:	cmp	r0, #32
   27bb4:	bhi	27bc8 <main@@Base+0x14944>
   27bb8:	mov	r0, r9
   27bbc:	mov	r2, r8
   27bc0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   27bc4:	mov	r2, r0
   27bc8:	cmp	r2, r8
   27bcc:	beq	27e44 <main@@Base+0x14bc0>
   27bd0:	ldrb	r0, [r2]
   27bd4:	cmp	r0, #125	; 0x7d
   27bd8:	bne	2787c <main@@Base+0x145f8>
   27bdc:	b	27e20 <main@@Base+0x14b9c>
   27be0:	ldr	r7, [sp, #8]
   27be4:	mov	r2, #0
   27be8:	cmp	r3, #1
   27bec:	beq	27ab4 <main@@Base+0x14830>
   27bf0:	cmp	r3, #2
   27bf4:	beq	27aac <main@@Base+0x14828>
   27bf8:	b	27d40 <main@@Base+0x14abc>
   27bfc:	cmp	r0, #34	; 0x22
   27c00:	bne	27d40 <main@@Base+0x14abc>
   27c04:	add	r2, r1, #20
   27c08:	sub	r0, r8, r2
   27c0c:	cmp	r0, #2
   27c10:	blt	27c3c <main@@Base+0x149b8>
   27c14:	ldrb	r0, [r2]
   27c18:	cmp	r0, #32
   27c1c:	bls	27c28 <main@@Base+0x149a4>
   27c20:	mov	r6, r2
   27c24:	b	27c50 <main@@Base+0x149cc>
   27c28:	bne	27c3c <main@@Base+0x149b8>
   27c2c:	mov	r6, r2
   27c30:	ldrb	r0, [r6, #1]!
   27c34:	cmp	r0, #32
   27c38:	bhi	27c50 <main@@Base+0x149cc>
   27c3c:	mov	r1, r2
   27c40:	mov	r0, r9
   27c44:	mov	r2, r8
   27c48:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   27c4c:	mov	r6, r0
   27c50:	cmp	r6, r8
   27c54:	beq	27c88 <main@@Base+0x14a04>
   27c58:	ldrb	r0, [r6]
   27c5c:	cmp	r0, #58	; 0x3a
   27c60:	bne	27c88 <main@@Base+0x14a04>
   27c64:	add	r1, r6, #1
   27c68:	sub	r0, r8, r1
   27c6c:	cmp	r0, #2
   27c70:	blt	27cb0 <main@@Base+0x14a2c>
   27c74:	ldrb	r0, [r1]
   27c78:	cmp	r0, #32
   27c7c:	bls	27ca0 <main@@Base+0x14a1c>
   27c80:	mov	r6, r1
   27c84:	b	27cc0 <main@@Base+0x14a3c>
   27c88:	mov	r0, r9
   27c8c:	mov	r1, r6
   27c90:	mov	r2, r8
   27c94:	mov	r3, #4
   27c98:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   27c9c:	b	27cbc <main@@Base+0x14a38>
   27ca0:	bne	27cb0 <main@@Base+0x14a2c>
   27ca4:	ldrb	r0, [r6, #2]!
   27ca8:	cmp	r0, #32
   27cac:	bhi	27cc0 <main@@Base+0x14a3c>
   27cb0:	mov	r0, r9
   27cb4:	mov	r2, r8
   27cb8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   27cbc:	mov	r6, r0
   27cc0:	cmp	r4, r6
   27cc4:	beq	27d40 <main@@Base+0x14abc>
   27cc8:	mov	r5, #0
   27ccc:	cmp	r6, r8
   27cd0:	str	r5, [sp, #28]
   27cd4:	str	r5, [sp, #24]
   27cd8:	str	r5, [sp, #16]
   27cdc:	str	r5, [sp, #20]
   27ce0:	beq	27d54 <main@@Base+0x14ad0>
   27ce4:	add	r0, sp, #24
   27ce8:	mov	r1, r6
   27cec:	mov	r2, r8
   27cf0:	add	r3, sp, #20
   27cf4:	str	r0, [sp]
   27cf8:	mov	r0, r9
   27cfc:	bl	2edac <flatcc_json_parser_integer@@Base>
   27d00:	cmp	r0, r6
   27d04:	beq	27d5c <main@@Base+0x14ad8>
   27d08:	ldr	r2, [sp, #20]
   27d0c:	mov	r4, r0
   27d10:	ldr	r0, [sp, #24]
   27d14:	ldr	r1, [sp, #28]
   27d18:	cmp	r2, #0
   27d1c:	beq	27d64 <main@@Base+0x14ae0>
   27d20:	subs	r2, r0, #-2147483647	; 0x80000001
   27d24:	sbcs	r1, r1, #0
   27d28:	bcc	27d8c <main@@Base+0x14b08>
   27d2c:	mov	r0, r9
   27d30:	mov	r1, r4
   27d34:	mov	r2, r8
   27d38:	mov	r3, #8
   27d3c:	b	27d80 <main@@Base+0x14afc>
   27d40:	mov	r0, r9
   27d44:	mov	r1, r4
   27d48:	mov	r2, r8
   27d4c:	bl	2d5e0 <flatcc_json_parser_unmatched_symbol@@Base>
   27d50:	b	27b24 <main@@Base+0x148a0>
   27d54:	mov	r4, r8
   27d58:	b	27d9c <main@@Base+0x14b18>
   27d5c:	mov	r4, r6
   27d60:	b	27d9c <main@@Base+0x14b18>
   27d64:	subs	r2, r0, #-2147483648	; 0x80000000
   27d68:	sbcs	r1, r1, #0
   27d6c:	bcc	27d94 <main@@Base+0x14b10>
   27d70:	mov	r0, r9
   27d74:	mov	r1, r4
   27d78:	mov	r2, r8
   27d7c:	mov	r3, #7
   27d80:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   27d84:	mov	r4, r0
   27d88:	b	27d9c <main@@Base+0x14b18>
   27d8c:	rsb	r5, r0, #0
   27d90:	b	27d98 <main@@Base+0x14b14>
   27d94:	mov	r5, r0
   27d98:	str	r5, [sp, #16]
   27d9c:	cmp	r6, r4
   27da0:	bne	27dd8 <main@@Base+0x14b54>
   27da4:	movw	r3, #17148	; 0x42fc
   27da8:	add	r0, sp, #16
   27dac:	mov	r1, r6
   27db0:	mov	r2, r8
   27db4:	movt	r3, #4
   27db8:	str	r0, [sp]
   27dbc:	mov	r0, r9
   27dc0:	bl	2271c <main@@Base+0xf498>
   27dc4:	mov	r4, r0
   27dc8:	cmp	r0, r6
   27dcc:	cmpne	r4, r8
   27dd0:	beq	27ed0 <main@@Base+0x14c4c>
   27dd4:	ldr	r5, [sp, #16]
   27dd8:	cmp	r5, #0
   27ddc:	bne	27dec <main@@Base+0x14b68>
   27de0:	ldrb	r0, [r9, #8]
   27de4:	tst	r0, #2
   27de8:	beq	27b28 <main@@Base+0x148a4>
   27dec:	ldr	r0, [r9]
   27df0:	mov	r1, #0
   27df4:	mov	r2, #4
   27df8:	mov	r3, #4
   27dfc:	bl	2b574 <flatcc_builder_table_add@@Base>
   27e00:	cmp	r0, #0
   27e04:	beq	27ed0 <main@@Base+0x14c4c>
   27e08:	str	r5, [r0]
   27e0c:	b	27b28 <main@@Base+0x148a4>
   27e10:	mov	r4, r8
   27e14:	b	27298 <main@@Base+0x14014>
   27e18:	cmp	r0, #125	; 0x7d
   27e1c:	bne	27e88 <main@@Base+0x14c04>
   27e20:	add	r1, r2, #1
   27e24:	sub	r0, r8, r1
   27e28:	cmp	r0, #2
   27e2c:	blt	27eb0 <main@@Base+0x14c2c>
   27e30:	ldrb	r0, [r1]
   27e34:	cmp	r0, #32
   27e38:	bls	27e9c <main@@Base+0x14c18>
   27e3c:	mov	r4, r1
   27e40:	b	27298 <main@@Base+0x14014>
   27e44:	mov	r0, r9
   27e48:	mov	r1, r8
   27e4c:	b	27e90 <main@@Base+0x14c0c>
   27e50:	mov	r0, r9
   27e54:	mov	r1, r2
   27e58:	mov	r2, r8
   27e5c:	mov	r3, #10
   27e60:	b	27244 <main@@Base+0x13fc0>
   27e64:	bne	27e78 <main@@Base+0x14bf4>
   27e68:	ldrb	r0, [r2, #2]!
   27e6c:	mov	r4, r2
   27e70:	cmp	r0, #32
   27e74:	bhi	2724c <main@@Base+0x13fc8>
   27e78:	mov	r0, r9
   27e7c:	mov	r2, r8
   27e80:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   27e84:	b	27248 <main@@Base+0x13fc4>
   27e88:	mov	r0, r9
   27e8c:	mov	r1, r2
   27e90:	mov	r2, r8
   27e94:	mov	r3, #10
   27e98:	b	27290 <main@@Base+0x1400c>
   27e9c:	bne	27eb0 <main@@Base+0x14c2c>
   27ea0:	ldrb	r0, [r2, #2]!
   27ea4:	mov	r4, r2
   27ea8:	cmp	r0, #32
   27eac:	bhi	27298 <main@@Base+0x14014>
   27eb0:	mov	r0, r9
   27eb4:	mov	r2, r8
   27eb8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   27ebc:	b	27294 <main@@Base+0x14010>
   27ec0:	mov	r0, r9
   27ec4:	mov	r2, r8
   27ec8:	mov	r3, #33	; 0x21
   27ecc:	b	27244 <main@@Base+0x13fc0>
   27ed0:	ldr	r7, [sp, #8]
   27ed4:	b	272a4 <main@@Base+0x14020>
   27ed8:	add	r0, r0, #1
   27edc:	uxtb	r1, r0
   27ee0:	cmp	r1, #12
   27ee4:	movhi	r0, #0
   27ee8:	bxhi	lr
   27eec:	movw	r1, #4264	; 0x10a8
   27ef0:	sxtb	r0, r0
   27ef4:	movt	r1, #3
   27ef8:	ldr	r0, [r1, r0, lsl #2]
   27efc:	bx	lr
   27f00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27f04:	add	fp, sp, #28
   27f08:	sub	sp, sp, #36	; 0x24
   27f0c:	mov	r9, r0
   27f10:	mov	r0, #0
   27f14:	mov	sl, r2
   27f18:	mov	r6, r1
   27f1c:	mov	r1, #4
   27f20:	mov	r2, #4
   27f24:	str	r3, [sp, #12]
   27f28:	str	r0, [r3]
   27f2c:	ldr	r0, [r9]
   27f30:	bl	295ec <flatcc_builder_start_struct@@Base>
   27f34:	cmp	r0, #0
   27f38:	beq	27fbc <main@@Base+0x14d38>
   27f3c:	cmp	r6, sl
   27f40:	beq	27f78 <main@@Base+0x14cf4>
   27f44:	ldrb	r1, [r6]
   27f48:	cmp	r1, #123	; 0x7b
   27f4c:	bne	27f78 <main@@Base+0x14cf4>
   27f50:	add	r1, r6, #1
   27f54:	str	r0, [sp, #8]
   27f58:	sub	r0, sl, r1
   27f5c:	cmp	r0, #2
   27f60:	blt	27ff0 <main@@Base+0x14d6c>
   27f64:	ldrb	r0, [r1]
   27f68:	cmp	r0, #32
   27f6c:	bls	27fe0 <main@@Base+0x14d5c>
   27f70:	mov	r6, r1
   27f74:	b	28000 <main@@Base+0x14d7c>
   27f78:	mov	r0, r9
   27f7c:	mov	r1, r6
   27f80:	mov	r2, sl
   27f84:	mov	r3, #21
   27f88:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   27f8c:	mov	r6, r0
   27f90:	cmp	r6, sl
   27f94:	mov	r1, sl
   27f98:	beq	27fc0 <main@@Base+0x14d3c>
   27f9c:	ldr	r0, [r9]
   27fa0:	bl	2968c <flatcc_builder_end_struct@@Base>
   27fa4:	ldr	r1, [sp, #12]
   27fa8:	cmp	r0, #0
   27fac:	str	r0, [r1]
   27fb0:	mov	r1, r6
   27fb4:	bne	27fd4 <main@@Base+0x14d50>
   27fb8:	b	27fc0 <main@@Base+0x14d3c>
   27fbc:	mov	r1, r6
   27fc0:	mov	r0, r9
   27fc4:	mov	r2, sl
   27fc8:	mov	r3, #33	; 0x21
   27fcc:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   27fd0:	mov	r6, r0
   27fd4:	mov	r0, r6
   27fd8:	sub	sp, fp, #28
   27fdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27fe0:	bne	27ff0 <main@@Base+0x14d6c>
   27fe4:	ldrb	r0, [r6, #2]!
   27fe8:	cmp	r0, #32
   27fec:	bhi	28000 <main@@Base+0x14d7c>
   27ff0:	mov	r0, r9
   27ff4:	mov	r2, sl
   27ff8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   27ffc:	mov	r6, r0
   28000:	cmp	r6, sl
   28004:	mov	r2, sl
   28008:	beq	28044 <main@@Base+0x14dc0>
   2800c:	ldrb	r0, [r6]
   28010:	cmp	r0, #125	; 0x7d
   28014:	bne	28040 <main@@Base+0x14dbc>
   28018:	add	r1, r6, #1
   2801c:	sub	r0, sl, r1
   28020:	cmp	r0, #2
   28024:	blt	28500 <main@@Base+0x1527c>
   28028:	ldrb	r0, [r1]
   2802c:	cmp	r0, #32
   28030:	bhi	284c4 <main@@Base+0x15240>
   28034:	bne	28500 <main@@Base+0x1527c>
   28038:	ldrb	r0, [r6, #2]!
   2803c:	b	284f8 <main@@Base+0x15274>
   28040:	mov	r2, r6
   28044:	cmp	r2, sl
   28048:	mov	r1, sl
   2804c:	beq	28098 <main@@Base+0x14e14>
   28050:	ldrb	r0, [r2]
   28054:	cmp	r0, #46	; 0x2e
   28058:	beq	28070 <main@@Base+0x14dec>
   2805c:	cmp	r0, #34	; 0x22
   28060:	bne	2808c <main@@Base+0x14e08>
   28064:	mov	r0, #0
   28068:	add	r1, r2, #1
   2806c:	b	28094 <main@@Base+0x14e10>
   28070:	mov	r1, r2
   28074:	mov	r0, r9
   28078:	mov	r2, sl
   2807c:	mov	r3, #5
   28080:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   28084:	mov	r1, r0
   28088:	b	28098 <main@@Base+0x14e14>
   2808c:	mov	r0, #1
   28090:	mov	r1, r2
   28094:	str	r0, [r9, #12]
   28098:	sub	r0, sl, r1
   2809c:	mov	r2, #8
   280a0:	cmp	r0, #8
   280a4:	movcs	r0, r2
   280a8:	sub	r6, r0, #1
   280ac:	cmp	r6, #7
   280b0:	bhi	281e8 <main@@Base+0x14f64>
   280b4:	add	r0, pc, #32
   280b8:	mov	r8, #0
   280bc:	mov	ip, #0
   280c0:	mov	lr, #0
   280c4:	mov	r7, #0
   280c8:	mov	r3, #0
   280cc:	mov	r5, #0
   280d0:	mov	r2, #0
   280d4:	mov	r4, #0
   280d8:	ldr	pc, [r0, r6, lsl #2]
   280dc:	andeq	r8, r2, r0, asr #2
   280e0:	andeq	r8, r2, r8, lsr r1
   280e4:	andeq	r8, r2, r0, lsr r1
   280e8:	andeq	r8, r2, r8, lsr #2
   280ec:	andeq	r8, r2, ip, lsl r1
   280f0:	andeq	r8, r2, r0, lsl r1
   280f4:	andeq	r8, r2, r0, lsl #2
   280f8:	strdeq	r8, [r2], -ip
   280fc:	ldrb	ip, [r1, #7]
   28100:	ldrb	r0, [r1, #6]
   28104:	mov	lr, r8
   28108:	orr	r0, ip, r0, lsl #8
   2810c:	mov	r8, r0
   28110:	ldrb	r0, [r1, #5]
   28114:	mov	r7, lr
   28118:	orr	r8, r8, r0, lsl #16
   2811c:	ldrb	r0, [r1, #4]
   28120:	mov	r3, r7
   28124:	orr	r8, r8, r0, lsl #24
   28128:	ldrb	r0, [r1, #3]
   2812c:	orr	r5, r0, r3
   28130:	ldrb	r0, [r1, #2]
   28134:	orr	r2, r5, r0, lsl #8
   28138:	ldrb	r0, [r1, #1]
   2813c:	orr	r4, r2, r0, lsl #16
   28140:	ldrb	r2, [r1]
   28144:	movw	r0, #29285	; 0x7265
   28148:	movw	r3, #28523	; 0x6f6b
   2814c:	movt	r0, #29535	; 0x735f
   28150:	movt	r3, #25199	; 0x626f
   28154:	eor	r0, r8, r0
   28158:	orr	r2, r4, r2, lsl #24
   2815c:	eor	r2, r2, r3
   28160:	orrs	r0, r0, r2
   28164:	bne	281e8 <main@@Base+0x14f64>
   28168:	add	r8, r1, #8
   2816c:	mov	r3, #8
   28170:	sub	r0, sl, r8
   28174:	cmp	r0, #8
   28178:	movcc	r3, r0
   2817c:	sub	r2, r3, #2
   28180:	cmp	r2, #7
   28184:	bcs	281f0 <main@@Base+0x14f6c>
   28188:	ldrb	r2, [r1, #9]
   2818c:	lsl	r3, r2, #16
   28190:	mov	r2, #0
   28194:	ldrb	r7, [r8]
   28198:	orr	r3, r3, r7, lsl #24
   2819c:	movw	r7, #0
   281a0:	movt	r7, #24932	; 0x6164
   281a4:	eor	r3, r3, r7
   281a8:	orrs	r2, r2, r3
   281ac:	bne	28344 <main@@Base+0x150c0>
   281b0:	cmp	r0, #3
   281b4:	blt	28344 <main@@Base+0x150c0>
   281b8:	mov	r2, r1
   281bc:	ldr	r3, [r9, #12]
   281c0:	ldrb	r0, [r2, #10]!
   281c4:	cmp	r3, #0
   281c8:	beq	28204 <main@@Base+0x14f80>
   281cc:	cmp	r0, #33	; 0x21
   281d0:	bcc	281dc <main@@Base+0x14f58>
   281d4:	cmp	r0, #58	; 0x3a
   281d8:	bne	28344 <main@@Base+0x150c0>
   281dc:	mov	r0, #0
   281e0:	str	r0, [r9, #12]
   281e4:	b	28210 <main@@Base+0x14f8c>
   281e8:	mov	r0, r9
   281ec:	b	2834c <main@@Base+0x150c8>
   281f0:	cmp	r3, #1
   281f4:	mov	r2, #0
   281f8:	mov	r3, #0
   281fc:	beq	28194 <main@@Base+0x14f10>
   28200:	b	28344 <main@@Base+0x150c0>
   28204:	cmp	r0, #34	; 0x22
   28208:	bne	28344 <main@@Base+0x150c0>
   2820c:	add	r2, r1, #11
   28210:	sub	r0, sl, r2
   28214:	cmp	r0, #2
   28218:	blt	28244 <main@@Base+0x14fc0>
   2821c:	ldrb	r0, [r2]
   28220:	cmp	r0, #32
   28224:	bls	28230 <main@@Base+0x14fac>
   28228:	mov	r7, r2
   2822c:	b	28258 <main@@Base+0x14fd4>
   28230:	bne	28244 <main@@Base+0x14fc0>
   28234:	mov	r7, r2
   28238:	ldrb	r0, [r7, #1]!
   2823c:	cmp	r0, #32
   28240:	bhi	28258 <main@@Base+0x14fd4>
   28244:	mov	r1, r2
   28248:	mov	r0, r9
   2824c:	mov	r2, sl
   28250:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   28254:	mov	r7, r0
   28258:	cmp	r7, sl
   2825c:	beq	28290 <main@@Base+0x1500c>
   28260:	ldrb	r0, [r7]
   28264:	cmp	r0, #58	; 0x3a
   28268:	bne	28290 <main@@Base+0x1500c>
   2826c:	add	r1, r7, #1
   28270:	sub	r0, sl, r1
   28274:	cmp	r0, #2
   28278:	blt	282b8 <main@@Base+0x15034>
   2827c:	ldrb	r0, [r1]
   28280:	cmp	r0, #32
   28284:	bls	282a8 <main@@Base+0x15024>
   28288:	mov	r7, r1
   2828c:	b	282c8 <main@@Base+0x15044>
   28290:	mov	r0, r9
   28294:	mov	r1, r7
   28298:	mov	r2, sl
   2829c:	mov	r3, #4
   282a0:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   282a4:	b	282c4 <main@@Base+0x15040>
   282a8:	bne	282b8 <main@@Base+0x15034>
   282ac:	ldrb	r0, [r7, #2]!
   282b0:	cmp	r0, #32
   282b4:	bhi	282c8 <main@@Base+0x15044>
   282b8:	mov	r0, r9
   282bc:	mov	r2, sl
   282c0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   282c4:	mov	r7, r0
   282c8:	cmp	r8, r7
   282cc:	beq	28344 <main@@Base+0x150c0>
   282d0:	mov	r6, #0
   282d4:	cmp	r7, sl
   282d8:	str	r6, [sp, #28]
   282dc:	str	r6, [sp, #24]
   282e0:	str	r6, [sp, #16]
   282e4:	str	r6, [sp, #20]
   282e8:	beq	2840c <main@@Base+0x15188>
   282ec:	add	r0, sp, #24
   282f0:	mov	r1, r7
   282f4:	mov	r2, sl
   282f8:	add	r3, sp, #20
   282fc:	str	r0, [sp]
   28300:	mov	r0, r9
   28304:	bl	2edac <flatcc_json_parser_integer@@Base>
   28308:	cmp	r0, r7
   2830c:	beq	28414 <main@@Base+0x15190>
   28310:	ldr	r3, [sp, #20]
   28314:	mov	r1, r0
   28318:	ldr	r0, [sp, #24]
   2831c:	ldr	r2, [sp, #28]
   28320:	cmp	r3, #0
   28324:	beq	2841c <main@@Base+0x15198>
   28328:	subs	r3, r0, #-2147483647	; 0x80000001
   2832c:	sbcs	r2, r2, #0
   28330:	bcc	28440 <main@@Base+0x151bc>
   28334:	mov	r0, r9
   28338:	mov	r2, sl
   2833c:	mov	r3, #8
   28340:	b	28434 <main@@Base+0x151b0>
   28344:	mov	r0, r9
   28348:	mov	r1, r8
   2834c:	mov	r2, sl
   28350:	bl	2d5e0 <flatcc_json_parser_unmatched_symbol@@Base>
   28354:	mov	r1, r0
   28358:	sub	r0, sl, r1
   2835c:	cmp	r0, #2
   28360:	blt	2838c <main@@Base+0x15108>
   28364:	ldrb	r0, [r1]
   28368:	cmp	r0, #32
   2836c:	bls	28378 <main@@Base+0x150f4>
   28370:	mov	r2, r1
   28374:	b	2839c <main@@Base+0x15118>
   28378:	bne	2838c <main@@Base+0x15108>
   2837c:	mov	r2, r1
   28380:	ldrb	r0, [r2, #1]!
   28384:	cmp	r0, #32
   28388:	bhi	2839c <main@@Base+0x15118>
   2838c:	mov	r0, r9
   28390:	mov	r2, sl
   28394:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   28398:	mov	r2, r0
   2839c:	cmp	r2, sl
   283a0:	beq	28498 <main@@Base+0x15214>
   283a4:	ldrb	r0, [r2]
   283a8:	cmp	r0, #44	; 0x2c
   283ac:	bne	284a0 <main@@Base+0x1521c>
   283b0:	add	r1, r2, #1
   283b4:	sub	r0, sl, r1
   283b8:	cmp	r0, #2
   283bc:	blt	283e4 <main@@Base+0x15160>
   283c0:	ldrb	r0, [r1]
   283c4:	cmp	r0, #32
   283c8:	bls	283d4 <main@@Base+0x15150>
   283cc:	mov	r2, r1
   283d0:	b	283f4 <main@@Base+0x15170>
   283d4:	bne	283e4 <main@@Base+0x15160>
   283d8:	ldrb	r0, [r2, #2]!
   283dc:	cmp	r0, #32
   283e0:	bhi	283f4 <main@@Base+0x15170>
   283e4:	mov	r0, r9
   283e8:	mov	r2, sl
   283ec:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   283f0:	mov	r2, r0
   283f4:	cmp	r2, sl
   283f8:	beq	284cc <main@@Base+0x15248>
   283fc:	ldrb	r0, [r2]
   28400:	cmp	r0, #125	; 0x7d
   28404:	bne	28044 <main@@Base+0x14dc0>
   28408:	b	284a8 <main@@Base+0x15224>
   2840c:	mov	r1, sl
   28410:	b	28450 <main@@Base+0x151cc>
   28414:	mov	r1, r7
   28418:	b	28450 <main@@Base+0x151cc>
   2841c:	subs	r3, r0, #-2147483648	; 0x80000000
   28420:	sbcs	r2, r2, #0
   28424:	bcc	28448 <main@@Base+0x151c4>
   28428:	mov	r0, r9
   2842c:	mov	r2, sl
   28430:	mov	r3, #7
   28434:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   28438:	mov	r1, r0
   2843c:	b	28450 <main@@Base+0x151cc>
   28440:	rsb	r6, r0, #0
   28444:	b	2844c <main@@Base+0x151c8>
   28448:	mov	r6, r0
   2844c:	str	r6, [sp, #16]
   28450:	cmp	r7, r1
   28454:	bne	2848c <main@@Base+0x15208>
   28458:	movw	r3, #17172	; 0x4314
   2845c:	add	r0, sp, #16
   28460:	mov	r1, r7
   28464:	mov	r2, sl
   28468:	movt	r3, #4
   2846c:	str	r0, [sp]
   28470:	mov	r0, r9
   28474:	bl	2271c <main@@Base+0xf498>
   28478:	mov	r1, r0
   2847c:	cmp	r0, r7
   28480:	cmpne	r1, sl
   28484:	beq	28510 <main@@Base+0x1528c>
   28488:	ldr	r6, [sp, #16]
   2848c:	ldr	r0, [sp, #8]
   28490:	str	r6, [r0]
   28494:	b	28358 <main@@Base+0x150d4>
   28498:	mov	r1, sl
   2849c:	b	27fc0 <main@@Base+0x14d3c>
   284a0:	cmp	r0, #125	; 0x7d
   284a4:	bne	284d8 <main@@Base+0x15254>
   284a8:	add	r1, r2, #1
   284ac:	sub	r0, sl, r1
   284b0:	cmp	r0, #2
   284b4:	blt	28500 <main@@Base+0x1527c>
   284b8:	ldrb	r0, [r1]
   284bc:	cmp	r0, #32
   284c0:	bls	284ec <main@@Base+0x15268>
   284c4:	mov	r6, r1
   284c8:	b	27f90 <main@@Base+0x14d0c>
   284cc:	mov	r0, r9
   284d0:	mov	r1, sl
   284d4:	b	284e0 <main@@Base+0x1525c>
   284d8:	mov	r0, r9
   284dc:	mov	r1, r2
   284e0:	mov	r2, sl
   284e4:	mov	r3, #10
   284e8:	b	27f88 <main@@Base+0x14d04>
   284ec:	bne	28500 <main@@Base+0x1527c>
   284f0:	ldrb	r0, [r2, #2]!
   284f4:	mov	r6, r2
   284f8:	cmp	r0, #32
   284fc:	bhi	27f90 <main@@Base+0x14d0c>
   28500:	mov	r0, r9
   28504:	mov	r2, sl
   28508:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2850c:	b	27f8c <main@@Base+0x14d08>
   28510:	mov	r0, r9
   28514:	mov	r2, sl
   28518:	mov	r3, #33	; 0x21
   2851c:	b	27f88 <main@@Base+0x14d04>
   28520:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28524:	add	fp, sp, #28
   28528:	sub	sp, sp, #44	; 0x2c
   2852c:	mov	r6, r2
   28530:	ldr	r2, [fp, #8]
   28534:	mov	r5, r0
   28538:	mov	r0, #0
   2853c:	mov	sl, r3
   28540:	cmp	r1, r6
   28544:	strh	r0, [r2]
   28548:	beq	2858c <main@@Base+0x15308>
   2854c:	ldrb	r0, [r1]
   28550:	cmp	r0, #46	; 0x2e
   28554:	beq	2856c <main@@Base+0x152e8>
   28558:	cmp	r0, #34	; 0x22
   2855c:	bne	28584 <main@@Base+0x15300>
   28560:	mov	r0, #0
   28564:	add	r1, r1, #1
   28568:	b	28588 <main@@Base+0x15304>
   2856c:	mov	r0, r5
   28570:	mov	r2, r6
   28574:	mov	r3, #5
   28578:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   2857c:	mov	r1, r0
   28580:	b	2858c <main@@Base+0x15308>
   28584:	mov	r0, #1
   28588:	str	r0, [r5, #12]
   2858c:	ldr	r0, [r5, #12]
   28590:	cmp	r0, #0
   28594:	beq	285a0 <main@@Base+0x1531c>
   28598:	mov	r7, r1
   2859c:	b	285dc <main@@Base+0x15358>
   285a0:	sub	r0, r6, r1
   285a4:	cmp	r0, #2
   285a8:	blt	285cc <main@@Base+0x15348>
   285ac:	ldrb	r0, [r1]
   285b0:	cmp	r0, #32
   285b4:	bhi	28598 <main@@Base+0x15314>
   285b8:	bne	285cc <main@@Base+0x15348>
   285bc:	mov	r7, r1
   285c0:	ldrb	r0, [r7, #1]!
   285c4:	cmp	r0, #32
   285c8:	bhi	285dc <main@@Base+0x15358>
   285cc:	mov	r0, r5
   285d0:	mov	r2, r6
   285d4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   285d8:	mov	r7, r0
   285dc:	cmp	r7, r6
   285e0:	beq	2870c <main@@Base+0x15488>
   285e4:	mov	r1, #0
   285e8:	add	r0, sl, #4
   285ec:	add	r8, sp, #32
   285f0:	add	r9, sp, #28
   285f4:	str	sl, [sp, #12]
   285f8:	str	r1, [sp, #16]
   285fc:	mov	r1, #0
   28600:	str	r0, [sp, #8]
   28604:	str	r1, [sp, #20]
   28608:	ldr	r4, [sl]
   2860c:	mov	sl, r0
   28610:	add	r0, sp, #24
   28614:	mov	r1, r7
   28618:	mov	r2, r6
   2861c:	mov	r3, r9
   28620:	str	r8, [sp]
   28624:	str	r0, [sp, #4]
   28628:	mov	r0, r5
   2862c:	blx	r4
   28630:	cmp	r0, r6
   28634:	beq	2870c <main@@Base+0x15488>
   28638:	mov	r4, r0
   2863c:	cmp	r0, r7
   28640:	bne	28654 <main@@Base+0x153d0>
   28644:	ldr	r4, [sl], #4
   28648:	cmp	r4, #0
   2864c:	bne	28610 <main@@Base+0x1538c>
   28650:	b	28714 <main@@Base+0x15490>
   28654:	ldr	r7, [sp, #20]
   28658:	cmp	r7, #0
   2865c:	beq	2866c <main@@Base+0x153e8>
   28660:	ldr	r0, [r5, #12]
   28664:	cmp	r0, #0
   28668:	bne	28738 <main@@Base+0x154b4>
   2866c:	ldr	r0, [sp, #28]
   28670:	cmp	r0, #0
   28674:	beq	28694 <main@@Base+0x15410>
   28678:	mov	r0, r5
   2867c:	mov	r1, r4
   28680:	mov	r2, r6
   28684:	mov	r3, #8
   28688:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   2868c:	ldr	sl, [sp, #12]
   28690:	b	286cc <main@@Base+0x15448>
   28694:	ldr	r0, [sp, #32]
   28698:	ldr	r1, [sp, #36]	; 0x24
   2869c:	ldr	sl, [sp, #12]
   286a0:	subs	r2, r0, #65536	; 0x10000
   286a4:	sbcs	r1, r1, #0
   286a8:	bcc	286c4 <main@@Base+0x15440>
   286ac:	mov	r0, r5
   286b0:	mov	r1, r4
   286b4:	mov	r2, r6
   286b8:	mov	r3, #7
   286bc:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   286c0:	b	286cc <main@@Base+0x15448>
   286c4:	str	r0, [sp, #16]
   286c8:	mov	r0, r4
   286cc:	cmp	r0, r6
   286d0:	beq	2870c <main@@Base+0x15488>
   286d4:	ldr	r0, [fp, #8]
   286d8:	ldr	r2, [sp, #16]
   286dc:	add	r7, r7, #1
   286e0:	str	r7, [sp, #20]
   286e4:	mov	r7, r4
   286e8:	mov	r1, r0
   286ec:	ldrh	r0, [r0]
   286f0:	add	r0, r0, r2
   286f4:	strh	r0, [r1]
   286f8:	ldr	r0, [sp, #24]
   286fc:	cmp	r0, #0
   28700:	ldr	r0, [sp, #8]
   28704:	bne	28608 <main@@Base+0x15384>
   28708:	b	2872c <main@@Base+0x154a8>
   2870c:	mov	r4, r6
   28710:	b	2872c <main@@Base+0x154a8>
   28714:	mov	r0, r5
   28718:	mov	r1, r7
   2871c:	mov	r2, r6
   28720:	mov	r3, #23
   28724:	bl	2cebc <flatcc_json_parser_set_error@@Base>
   28728:	mov	r4, r0
   2872c:	mov	r0, r4
   28730:	sub	sp, fp, #28
   28734:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28738:	mov	r0, r5
   2873c:	mov	r1, r4
   28740:	mov	r2, r6
   28744:	mov	r3, #14
   28748:	b	28724 <main@@Base+0x154a0>

0002874c <flatcc_builder_default_alloc@@Base>:
   2874c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   28750:	add	fp, sp, #24
   28754:	mov	r4, r1
   28758:	cmp	r2, #0
   2875c:	beq	287a4 <flatcc_builder_default_alloc@@Base+0x58>
   28760:	ldr	r0, [fp, #8]
   28764:	mov	r8, r3
   28768:	sub	r1, r0, #1
   2876c:	cmp	r1, #6
   28770:	bhi	287cc <flatcc_builder_default_alloc@@Base+0x80>
   28774:	add	r3, pc, #4
   28778:	mov	r0, #256	; 0x100
   2877c:	ldr	pc, [r3, r1, lsl #2]
   28780:	andeq	r8, r2, r0, ror #15
   28784:	andeq	r8, r2, ip, asr #15
   28788:	andeq	r8, r2, ip, asr #15
   2878c:	muleq	r2, ip, r7
   28790:	ldrdeq	r8, [r2], -r4
   28794:	andeq	r8, r2, ip, asr #15
   28798:	ldrdeq	r8, [r2], -ip
   2879c:	mov	r0, #288	; 0x120
   287a0:	b	287e0 <flatcc_builder_default_alloc@@Base+0x94>
   287a4:	ldr	r0, [r4]
   287a8:	cmp	r0, #0
   287ac:	beq	287c4 <flatcc_builder_default_alloc@@Base+0x78>
   287b0:	bl	12aa4 <free@plt>
   287b4:	mov	r6, #0
   287b8:	str	r6, [r4]
   287bc:	str	r6, [r4, #4]
   287c0:	b	28850 <flatcc_builder_default_alloc@@Base+0x104>
   287c4:	mov	r6, #0
   287c8:	b	28850 <flatcc_builder_default_alloc@@Base+0x104>
   287cc:	mov	r0, #32
   287d0:	b	287e0 <flatcc_builder_default_alloc@@Base+0x94>
   287d4:	mov	r0, r2
   287d8:	b	287e0 <flatcc_builder_default_alloc@@Base+0x94>
   287dc:	mov	r0, #64	; 0x40
   287e0:	mov	r7, r0
   287e4:	lsl	r0, r0, #1
   287e8:	cmp	r7, r2
   287ec:	bcc	287e0 <flatcc_builder_default_alloc@@Base+0x94>
   287f0:	ldr	r0, [r4, #4]
   287f4:	mov	r6, #0
   287f8:	cmp	r0, r2
   287fc:	lsrcs	r0, r0, #1
   28800:	cmpcs	r0, r7
   28804:	bcs	28850 <flatcc_builder_default_alloc@@Base+0x104>
   28808:	ldr	r0, [r4]
   2880c:	mov	r1, r7
   28810:	bl	12aec <realloc@plt>
   28814:	cmp	r0, #0
   28818:	beq	2884c <flatcc_builder_default_alloc@@Base+0x100>
   2881c:	mov	r5, r0
   28820:	cmp	r8, #0
   28824:	beq	28844 <flatcc_builder_default_alloc@@Base+0xf8>
   28828:	ldr	r1, [r4, #4]
   2882c:	cmp	r7, r1
   28830:	bls	28844 <flatcc_builder_default_alloc@@Base+0xf8>
   28834:	add	r0, r5, r1
   28838:	sub	r2, r7, r1
   2883c:	mov	r1, #0
   28840:	bl	12b64 <memset@plt>
   28844:	stm	r4, {r5, r7}
   28848:	b	28850 <flatcc_builder_default_alloc@@Base+0x104>
   2884c:	mvn	r6, #0
   28850:	mov	r0, r6
   28854:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00028858 <flatcc_builder_flush_vtable_cache@@Base>:
   28858:	push	{r4, r5, fp, lr}
   2885c:	add	fp, sp, #8
   28860:	mov	r4, r0
   28864:	ldr	r0, [r0, #116]	; 0x74
   28868:	cmp	r0, #0
   2886c:	popeq	{r4, r5, fp, pc}
   28870:	ldr	r0, [r4, #92]	; 0x5c
   28874:	ldr	r2, [r4, #96]	; 0x60
   28878:	mov	r1, #0
   2887c:	mov	r5, #0
   28880:	bl	12b64 <memset@plt>
   28884:	mov	r0, #16
   28888:	str	r5, [r4, #120]	; 0x78
   2888c:	str	r0, [r4, #124]	; 0x7c
   28890:	pop	{r4, r5, fp, pc}

00028894 <flatcc_builder_custom_init@@Base>:
   28894:	push	{r4, r5, r6, r7, fp, lr}
   28898:	add	fp, sp, #16
   2889c:	mov	r6, r2
   288a0:	mov	r7, r1
   288a4:	mov	r1, #0
   288a8:	mov	r2, #232	; 0xe8
   288ac:	mov	r5, r3
   288b0:	mov	r4, r0
   288b4:	bl	12b64 <memset@plt>
   288b8:	ldr	r0, [fp, #8]
   288bc:	cmp	r7, #0
   288c0:	bne	288d8 <flatcc_builder_custom_init@@Base+0x44>
   288c4:	movw	r7, #50688	; 0xc600
   288c8:	mov	r1, #1
   288cc:	add	r6, r4, #188	; 0xbc
   288d0:	movt	r7, #2
   288d4:	str	r1, [r4, #184]	; 0xb8
   288d8:	movw	r1, #34636	; 0x874c
   288dc:	cmp	r5, #0
   288e0:	str	r6, [r4, #36]	; 0x24
   288e4:	str	r0, [r4, #40]	; 0x28
   288e8:	mov	r0, #0
   288ec:	str	r7, [r4, #44]	; 0x2c
   288f0:	movt	r1, #2
   288f4:	movne	r1, r5
   288f8:	str	r1, [r4, #48]	; 0x30
   288fc:	pop	{r4, r5, r6, r7, fp, pc}

00028900 <flatcc_builder_init@@Base>:
   28900:	push	{r4, r5, fp, lr}
   28904:	add	fp, sp, #8
   28908:	mov	r1, #0
   2890c:	mov	r2, #232	; 0xe8
   28910:	mov	r4, r0
   28914:	mov	r5, #0
   28918:	bl	12b64 <memset@plt>
   2891c:	mov	r0, #1
   28920:	movw	r1, #50688	; 0xc600
   28924:	add	r2, r4, #188	; 0xbc
   28928:	str	r0, [r4, #184]	; 0xb8
   2892c:	movw	r0, #34636	; 0x874c
   28930:	movt	r1, #2
   28934:	str	r2, [r4, #36]	; 0x24
   28938:	str	r5, [r4, #40]	; 0x28
   2893c:	movt	r0, #2
   28940:	str	r1, [r4, #44]	; 0x2c
   28944:	str	r0, [r4, #48]	; 0x30
   28948:	mov	r0, #0
   2894c:	pop	{r4, r5, fp, pc}

00028950 <flatcc_builder_custom_reset@@Base>:
   28950:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28954:	add	fp, sp, #28
   28958:	sub	sp, sp, #4
   2895c:	mov	r9, r2
   28960:	mov	r8, r1
   28964:	mov	sl, r0
   28968:	add	r7, r0, #52	; 0x34
   2896c:	mov	r5, #0
   28970:	add	r6, sl, r5, lsl #3
   28974:	ldr	r0, [r6, #52]	; 0x34
   28978:	cmp	r0, #0
   2897c:	beq	289c4 <flatcc_builder_custom_reset@@Base+0x74>
   28980:	cmp	r9, #0
   28984:	cmpne	r5, #5
   28988:	beq	289b4 <flatcc_builder_custom_reset@@Base+0x64>
   2898c:	ldr	r0, [sl, #40]	; 0x28
   28990:	ldr	r4, [sl, #48]	; 0x30
   28994:	mov	r1, r7
   28998:	mov	r2, #1
   2899c:	mov	r3, #1
   289a0:	str	r5, [sp]
   289a4:	blx	r4
   289a8:	cmp	r0, #0
   289ac:	bne	28a64 <flatcc_builder_custom_reset@@Base+0x114>
   289b0:	ldr	r0, [r6, #52]	; 0x34
   289b4:	ldr	r2, [r6, #56]	; 0x38
   289b8:	mov	r1, #0
   289bc:	bl	12b64 <memset@plt>
   289c0:	b	289d0 <flatcc_builder_custom_reset@@Base+0x80>
   289c4:	ldr	r0, [r6, #56]	; 0x38
   289c8:	cmp	r0, #0
   289cc:	bne	28a74 <flatcc_builder_custom_reset@@Base+0x124>
   289d0:	add	r5, r5, #1
   289d4:	add	r7, r7, #8
   289d8:	cmp	r5, #8
   289dc:	bne	28970 <flatcc_builder_custom_reset@@Base+0x20>
   289e0:	mov	r0, #0
   289e4:	vmov.i32	q8, #0	; 0x00000000
   289e8:	mov	r5, #0
   289ec:	str	r0, [sl, #120]	; 0x78
   289f0:	ldr	r1, [sl, #124]	; 0x7c
   289f4:	cmp	r1, #0
   289f8:	movne	r1, #16
   289fc:	strne	r1, [sl, #124]	; 0x7c
   28a00:	add	r1, sl, #148	; 0x94
   28a04:	str	r0, [sl, #136]	; 0x88
   28a08:	str	r0, [sl, #140]	; 0x8c
   28a0c:	strh	r0, [sl, #128]	; 0x80
   28a10:	str	r0, [sl, #32]
   28a14:	cmp	r8, #0
   28a18:	vst1.32	{d16-d17}, [r1]
   28a1c:	ldr	r2, [sl, #60]	; 0x3c
   28a20:	ldr	r1, [sl, #52]	; 0x34
   28a24:	ldr	r3, [sl, #76]	; 0x4c
   28a28:	str	r2, [sl, #16]
   28a2c:	str	r0, [sl, #20]
   28a30:	str	r0, [sl, #24]
   28a34:	movne	r0, #0
   28a38:	str	r3, [sl]
   28a3c:	str	r1, [sl, #4]
   28a40:	strne	r0, [sl, #172]	; 0xac
   28a44:	strne	r0, [sl, #176]	; 0xb0
   28a48:	strne	r0, [sl, #180]	; 0xb4
   28a4c:	ldr	r0, [sl, #184]	; 0xb8
   28a50:	cmp	r0, #0
   28a54:	beq	28a68 <flatcc_builder_custom_reset@@Base+0x118>
   28a58:	add	r0, sl, #188	; 0xbc
   28a5c:	bl	2c4d0 <flatcc_emitter_reset@@Base>
   28a60:	b	28a68 <flatcc_builder_custom_reset@@Base+0x118>
   28a64:	mvn	r5, #0
   28a68:	mov	r0, r5
   28a6c:	sub	sp, fp, #28
   28a70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28a74:	movw	r0, #4828	; 0x12dc
   28a78:	movw	r1, #4846	; 0x12ee
   28a7c:	movw	r3, #4916	; 0x1334
   28a80:	movw	r2, #434	; 0x1b2
   28a84:	movt	r0, #3
   28a88:	movt	r1, #3
   28a8c:	movt	r3, #3
   28a90:	bl	12bc4 <__assert_fail@plt>

00028a94 <flatcc_builder_reset@@Base>:
   28a94:	mov	r1, #0
   28a98:	mov	r2, #0
   28a9c:	b	28950 <flatcc_builder_custom_reset@@Base>

00028aa0 <flatcc_builder_clear@@Base>:
   28aa0:	push	{r4, r5, r6, r7, fp, lr}
   28aa4:	add	fp, sp, #16
   28aa8:	sub	sp, sp, #8
   28aac:	mov	r7, r0
   28ab0:	add	r5, r0, #52	; 0x34
   28ab4:	mov	r6, #0
   28ab8:	ldr	r0, [r7, #40]	; 0x28
   28abc:	ldr	r4, [r7, #48]	; 0x30
   28ac0:	mov	r1, r5
   28ac4:	mov	r2, #0
   28ac8:	mov	r3, #0
   28acc:	str	r6, [sp]
   28ad0:	blx	r4
   28ad4:	add	r6, r6, #1
   28ad8:	add	r5, r5, #8
   28adc:	cmp	r6, #8
   28ae0:	bne	28ab8 <flatcc_builder_clear@@Base+0x18>
   28ae4:	ldr	r0, [r7, #184]	; 0xb8
   28ae8:	cmp	r0, #0
   28aec:	beq	28af8 <flatcc_builder_clear@@Base+0x58>
   28af0:	add	r0, r7, #188	; 0xbc
   28af4:	bl	2c59c <flatcc_emitter_clear@@Base>
   28af8:	mov	r0, r7
   28afc:	mov	r1, #0
   28b00:	mov	r2, #232	; 0xe8
   28b04:	sub	sp, fp, #16
   28b08:	pop	{r4, r5, r6, r7, fp, lr}
   28b0c:	b	12b64 <memset@plt>

00028b10 <flatcc_builder_enter_user_frame_ptr@@Base>:
   28b10:	push	{r4, r5, r6, r7, fp, lr}
   28b14:	add	fp, sp, #16
   28b18:	sub	sp, sp, #8
   28b1c:	mov	r4, r0
   28b20:	ldr	r0, [r0, #112]	; 0x70
   28b24:	add	r1, r1, #7
   28b28:	ldr	r7, [r4, #228]	; 0xe4
   28b2c:	bic	r5, r1, #3
   28b30:	add	r6, r4, #108	; 0x6c
   28b34:	add	r2, r7, r5
   28b38:	cmp	r2, r0
   28b3c:	bls	28b64 <flatcc_builder_enter_user_frame_ptr@@Base+0x54>
   28b40:	ldr	r0, [r4, #40]	; 0x28
   28b44:	ldr	ip, [r4, #48]	; 0x30
   28b48:	mov	r1, #7
   28b4c:	mov	r3, #0
   28b50:	str	r1, [sp]
   28b54:	mov	r1, r6
   28b58:	blx	ip
   28b5c:	cmp	r0, #0
   28b60:	bne	28bb0 <flatcc_builder_enter_user_frame_ptr@@Base+0xa0>
   28b64:	ldr	r0, [r6]
   28b68:	adds	r6, r0, r7
   28b6c:	beq	28ba0 <flatcc_builder_enter_user_frame_ptr@@Base+0x90>
   28b70:	mov	r0, r6
   28b74:	mov	r1, #0
   28b78:	mov	r2, r5
   28b7c:	bl	12b64 <memset@plt>
   28b80:	ldr	r0, [r4, #224]	; 0xe0
   28b84:	str	r0, [r6], #4
   28b88:	ldr	r0, [r4, #228]	; 0xe4
   28b8c:	add	r1, r0, #4
   28b90:	add	r0, r0, r5
   28b94:	str	r1, [r4, #224]	; 0xe0
   28b98:	str	r0, [r4, #228]	; 0xe4
   28b9c:	b	28ba4 <flatcc_builder_enter_user_frame_ptr@@Base+0x94>
   28ba0:	mov	r6, #0
   28ba4:	mov	r0, r6
   28ba8:	sub	sp, fp, #16
   28bac:	pop	{r4, r5, r6, r7, fp, pc}
   28bb0:	movw	r0, #9364	; 0x2494
   28bb4:	movw	r1, #4846	; 0x12ee
   28bb8:	movw	r3, #8910	; 0x22ce
   28bbc:	mov	r2, #308	; 0x134
   28bc0:	movt	r0, #3
   28bc4:	movt	r1, #3
   28bc8:	movt	r3, #3
   28bcc:	bl	12bc4 <__assert_fail@plt>

00028bd0 <flatcc_builder_enter_user_frame@@Base>:
   28bd0:	push	{r4, r5, r6, r7, fp, lr}
   28bd4:	add	fp, sp, #16
   28bd8:	sub	sp, sp, #8
   28bdc:	mov	r4, r0
   28be0:	ldr	r0, [r0, #112]	; 0x70
   28be4:	add	r1, r1, #7
   28be8:	ldr	r7, [r4, #228]	; 0xe4
   28bec:	bic	r5, r1, #3
   28bf0:	add	r6, r4, #108	; 0x6c
   28bf4:	add	r2, r7, r5
   28bf8:	cmp	r2, r0
   28bfc:	bls	28c24 <flatcc_builder_enter_user_frame@@Base+0x54>
   28c00:	ldr	r0, [r4, #40]	; 0x28
   28c04:	ldr	ip, [r4, #48]	; 0x30
   28c08:	mov	r1, #7
   28c0c:	mov	r3, #0
   28c10:	str	r1, [sp]
   28c14:	mov	r1, r6
   28c18:	blx	ip
   28c1c:	cmp	r0, #0
   28c20:	bne	28c6c <flatcc_builder_enter_user_frame@@Base+0x9c>
   28c24:	ldr	r0, [r6]
   28c28:	adds	r6, r0, r7
   28c2c:	beq	28c60 <flatcc_builder_enter_user_frame@@Base+0x90>
   28c30:	mov	r0, r6
   28c34:	mov	r1, #0
   28c38:	mov	r2, r5
   28c3c:	bl	12b64 <memset@plt>
   28c40:	ldr	r0, [r4, #224]	; 0xe0
   28c44:	str	r0, [r6]
   28c48:	ldr	r1, [r4, #228]	; 0xe4
   28c4c:	add	r0, r1, #4
   28c50:	add	r1, r1, r5
   28c54:	str	r0, [r4, #224]	; 0xe0
   28c58:	str	r1, [r4, #228]	; 0xe4
   28c5c:	b	28c64 <flatcc_builder_enter_user_frame@@Base+0x94>
   28c60:	mov	r0, #0
   28c64:	sub	sp, fp, #16
   28c68:	pop	{r4, r5, r6, r7, fp, pc}
   28c6c:	movw	r0, #9364	; 0x2494
   28c70:	movw	r1, #4846	; 0x12ee
   28c74:	movw	r3, #8910	; 0x22ce
   28c78:	mov	r2, #308	; 0x134
   28c7c:	movt	r0, #3
   28c80:	movt	r1, #3
   28c84:	movt	r3, #3
   28c88:	bl	12bc4 <__assert_fail@plt>

00028c8c <flatcc_builder_exit_user_frame@@Base>:
   28c8c:	push	{fp, lr}
   28c90:	mov	fp, sp
   28c94:	ldr	r1, [r0, #224]	; 0xe0
   28c98:	cmp	r1, #0
   28c9c:	subne	r2, r1, #4
   28ca0:	strne	r2, [r0, #228]	; 0xe4
   28ca4:	ldrne	r2, [r0, #108]	; 0x6c
   28ca8:	addne	r1, r2, r1
   28cac:	ldrne	r1, [r1, #-4]
   28cb0:	strne	r1, [r0, #224]	; 0xe0
   28cb4:	movne	r0, r1
   28cb8:	popne	{fp, pc}
   28cbc:	movw	r0, #4978	; 0x1372
   28cc0:	movw	r1, #4846	; 0x12ee
   28cc4:	movw	r3, #5003	; 0x138b
   28cc8:	movw	r2, #542	; 0x21e
   28ccc:	movt	r0, #3
   28cd0:	movt	r1, #3
   28cd4:	movt	r3, #3
   28cd8:	bl	12bc4 <__assert_fail@plt>

00028cdc <flatcc_builder_exit_user_frame_at@@Base>:
   28cdc:	push	{fp, lr}
   28ce0:	mov	fp, sp
   28ce4:	ldr	r2, [r0, #224]	; 0xe0
   28ce8:	cmp	r2, r1
   28cec:	bcc	28cfc <flatcc_builder_exit_user_frame_at@@Base+0x20>
   28cf0:	str	r1, [r0, #224]	; 0xe0
   28cf4:	pop	{fp, lr}
   28cf8:	b	28c8c <flatcc_builder_exit_user_frame@@Base>
   28cfc:	movw	r0, #5061	; 0x13c5
   28d00:	movw	r1, #4846	; 0x12ee
   28d04:	movw	r3, #5092	; 0x13e4
   28d08:	movw	r2, #551	; 0x227
   28d0c:	movt	r0, #3
   28d10:	movt	r1, #3
   28d14:	movt	r3, #3
   28d18:	bl	12bc4 <__assert_fail@plt>

00028d1c <flatcc_builder_get_current_user_frame@@Base>:
   28d1c:	ldr	r0, [r0, #224]	; 0xe0
   28d20:	bx	lr

00028d24 <flatcc_builder_get_user_frame_ptr@@Base>:
   28d24:	ldr	r0, [r0, #108]	; 0x6c
   28d28:	add	r0, r0, r1
   28d2c:	bx	lr

00028d30 <flatcc_builder_embed_buffer@@Base>:
   28d30:	push	{r4, r5, r6, r7, fp, lr}
   28d34:	add	fp, sp, #16
   28d38:	sub	sp, sp, #88	; 0x58
   28d3c:	mov	r4, r0
   28d40:	ldr	r0, [fp, #8]
   28d44:	mov	r5, r3
   28d48:	mov	r7, r2
   28d4c:	mov	r2, r1
   28d50:	sub	r1, fp, #18
   28d54:	strh	r0, [fp, #-18]	; 0xffffffee
   28d58:	mov	r0, r4
   28d5c:	ldr	r3, [r4, #152]	; 0x98
   28d60:	cmp	r3, #0
   28d64:	movwne	r3, #1
   28d68:	bl	28e94 <flatcc_builder_embed_buffer@@Base+0x164>
   28d6c:	ldr	r1, [fp, #12]
   28d70:	ldrh	r3, [fp, #-18]	; 0xffffffee
   28d74:	ldr	r0, [r4, #136]	; 0x88
   28d78:	mov	r2, #0
   28d7c:	str	r2, [sp, #12]
   28d80:	str	r2, [sp, #8]
   28d84:	and	r1, r1, #2
   28d88:	sub	r3, r3, #1
   28d8c:	add	r1, r5, r1, lsl #1
   28d90:	sub	r1, r0, r1
   28d94:	and	r3, r1, r3
   28d98:	add	r1, r3, r5
   28d9c:	str	r1, [fp, #-24]	; 0xffffffe8
   28da0:	ldr	r1, [r4, #152]	; 0x98
   28da4:	cmp	r1, #0
   28da8:	mov	r1, #0
   28dac:	beq	28dcc <flatcc_builder_embed_buffer@@Base+0x9c>
   28db0:	mov	r1, #4
   28db4:	sub	r2, fp, #24
   28db8:	str	r1, [sp, #20]
   28dbc:	str	r2, [sp, #16]
   28dc0:	mov	r2, #1
   28dc4:	str	r1, [sp, #8]
   28dc8:	str	r2, [sp, #12]
   28dcc:	cmp	r5, #0
   28dd0:	beq	28df4 <flatcc_builder_embed_buffer@@Base+0xc4>
   28dd4:	add	r6, sp, #8
   28dd8:	add	r1, r1, r5
   28ddc:	add	r6, r6, r2, lsl #3
   28de0:	add	r2, r2, #1
   28de4:	str	r1, [sp, #8]
   28de8:	str	r7, [r6, #8]
   28dec:	str	r5, [r6, #12]
   28df0:	str	r2, [sp, #12]
   28df4:	cmp	r3, #0
   28df8:	beq	28e24 <flatcc_builder_embed_buffer@@Base+0xf4>
   28dfc:	add	r7, sp, #8
   28e00:	movw	r6, #4316	; 0x10dc
   28e04:	add	r1, r1, r3
   28e08:	add	r7, r7, r2, lsl #3
   28e0c:	movt	r6, #3
   28e10:	add	r2, r2, #1
   28e14:	str	r1, [sp, #8]
   28e18:	str	r6, [r7, #8]
   28e1c:	str	r3, [r7, #12]
   28e20:	str	r2, [sp, #12]
   28e24:	cmp	r1, #0
   28e28:	ble	28e80 <flatcc_builder_embed_buffer@@Base+0x150>
   28e2c:	sub	r5, r0, r1
   28e30:	ldr	r0, [r4, #36]	; 0x24
   28e34:	ldr	r7, [r4, #44]	; 0x2c
   28e38:	str	r1, [sp]
   28e3c:	add	r1, sp, #8
   28e40:	add	r1, r1, #8
   28e44:	mov	r3, r5
   28e48:	blx	r7
   28e4c:	cmp	r0, #0
   28e50:	streq	r5, [r4, #136]	; 0x88
   28e54:	moveq	r0, r5
   28e58:	subeq	sp, fp, #16
   28e5c:	popeq	{r4, r5, r6, r7, fp, pc}
   28e60:	movw	r0, #9364	; 0x2494
   28e64:	movw	r1, #4846	; 0x12ee
   28e68:	movw	r3, #9043	; 0x2353
   28e6c:	movw	r2, #651	; 0x28b
   28e70:	movt	r0, #3
   28e74:	movt	r1, #3
   28e78:	movt	r3, #3
   28e7c:	bl	12bc4 <__assert_fail@plt>
   28e80:	movw	r0, #9364	; 0x2494
   28e84:	movw	r1, #4846	; 0x12ee
   28e88:	movw	r3, #9043	; 0x2353
   28e8c:	movw	r2, #647	; 0x287
   28e90:	b	28e70 <flatcc_builder_embed_buffer@@Base+0x140>
   28e94:	push	{r4, sl, fp, lr}
   28e98:	add	fp, sp, #8
   28e9c:	sub	sp, sp, #80	; 0x50
   28ea0:	cmp	r2, #0
   28ea4:	bne	28eb4 <flatcc_builder_embed_buffer@@Base+0x184>
   28ea8:	ldrh	r2, [r0, #132]	; 0x84
   28eac:	cmp	r2, #0
   28eb0:	movweq	r2, #1
   28eb4:	ldrh	r4, [r1]
   28eb8:	cmp	r4, #4
   28ebc:	movwcc	r4, #4
   28ec0:	cmpcs	r4, r2
   28ec4:	bcs	28ed4 <flatcc_builder_embed_buffer@@Base+0x1a4>
   28ec8:	cmp	r4, r2
   28ecc:	movcc	r4, r2
   28ed0:	strh	r4, [r1]
   28ed4:	cmp	r3, #0
   28ed8:	bne	28f4c <flatcc_builder_embed_buffer@@Base+0x21c>
   28edc:	ldr	r4, [r0, #140]	; 0x8c
   28ee0:	sub	r1, r2, #1
   28ee4:	ands	r1, r4, r1
   28ee8:	beq	28f4c <flatcc_builder_embed_buffer@@Base+0x21c>
   28eec:	movw	r2, #4316	; 0x10dc
   28ef0:	str	r1, [sp, #20]
   28ef4:	cmn	r1, #1
   28ef8:	movt	r2, #3
   28efc:	str	r2, [sp, #16]
   28f00:	mov	r2, #1
   28f04:	str	r1, [sp, #8]
   28f08:	str	r2, [sp, #12]
   28f0c:	add	r2, r1, r4
   28f10:	str	r2, [r0, #140]	; 0x8c
   28f14:	ble	28f54 <flatcc_builder_embed_buffer@@Base+0x224>
   28f18:	ldr	r2, [r0, #36]	; 0x24
   28f1c:	ldr	ip, [r0, #44]	; 0x2c
   28f20:	add	r0, sp, #8
   28f24:	str	r1, [sp]
   28f28:	mov	r3, r4
   28f2c:	add	r1, r0, #8
   28f30:	mov	r0, r2
   28f34:	mov	r2, #1
   28f38:	blx	ip
   28f3c:	cmp	r0, #0
   28f40:	bne	28f68 <flatcc_builder_embed_buffer@@Base+0x238>
   28f44:	cmn	r4, #1
   28f48:	beq	28f88 <flatcc_builder_embed_buffer@@Base+0x258>
   28f4c:	sub	sp, fp, #8
   28f50:	pop	{r4, sl, fp, pc}
   28f54:	movw	r0, #9364	; 0x2494
   28f58:	movw	r1, #4846	; 0x12ee
   28f5c:	movw	r3, #9231	; 0x240f
   28f60:	movw	r2, #673	; 0x2a1
   28f64:	b	28f78 <flatcc_builder_embed_buffer@@Base+0x248>
   28f68:	movw	r0, #9364	; 0x2494
   28f6c:	movw	r1, #4846	; 0x12ee
   28f70:	movw	r3, #9231	; 0x240f
   28f74:	movw	r2, #677	; 0x2a5
   28f78:	movt	r0, #3
   28f7c:	movt	r1, #3
   28f80:	movt	r3, #3
   28f84:	bl	12bc4 <__assert_fail@plt>
   28f88:	movw	r0, #9364	; 0x2494
   28f8c:	movw	r1, #4846	; 0x12ee
   28f90:	movw	r3, #8977	; 0x2311
   28f94:	movw	r2, #702	; 0x2be
   28f98:	movt	r0, #3
   28f9c:	movt	r1, #3
   28fa0:	movt	r3, #3
   28fa4:	bl	12bc4 <__assert_fail@plt>

00028fa8 <flatcc_builder_create_buffer@@Base>:
   28fa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28fac:	add	fp, sp, #28
   28fb0:	sub	sp, sp, #100	; 0x64
   28fb4:	ldr	sl, [fp, #12]
   28fb8:	mov	r4, r0
   28fbc:	ldr	r0, [fp, #8]
   28fc0:	mov	r7, r1
   28fc4:	mov	r5, #0
   28fc8:	mov	r6, r3
   28fcc:	sub	r1, fp, #30
   28fd0:	str	r5, [sp, #12]
   28fd4:	and	r9, sl, #1
   28fd8:	strh	r0, [fp, #-30]	; 0xffffffe2
   28fdc:	mov	r0, r4
   28fe0:	mov	r3, r9
   28fe4:	bl	28e94 <flatcc_builder_embed_buffer@@Base+0x164>
   28fe8:	ldrh	r0, [r4, #128]	; 0x80
   28fec:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   28ff0:	str	r6, [sp, #8]
   28ff4:	cmp	r0, r1
   28ff8:	strhcc	r1, [r4, #128]	; 0x80
   28ffc:	cmp	r7, #0
   29000:	beq	2901c <flatcc_builder_create_buffer@@Base+0x74>
   29004:	ldr	r5, [r7]
   29008:	cmp	r5, #0
   2900c:	str	r5, [sp, #12]
   29010:	movwne	r5, #1
   29014:	lsl	r7, r5, #2
   29018:	b	29020 <flatcc_builder_create_buffer@@Base+0x78>
   2901c:	mov	r7, #0
   29020:	ldr	r0, [r4, #136]	; 0x88
   29024:	and	r2, sl, #2
   29028:	mov	r3, #0
   2902c:	sub	r6, r1, #1
   29030:	ands	ip, sl, #3
   29034:	mov	sl, #4
   29038:	mov	r1, #4
   2903c:	str	r3, [sp, #20]
   29040:	str	r3, [sp, #16]
   29044:	sub	r2, r0, r2, lsl #1
   29048:	sub	r2, r2, r7
   2904c:	sub	r2, r2, #4
   29050:	beq	29074 <flatcc_builder_create_buffer@@Base+0xcc>
   29054:	mov	r1, #4
   29058:	sub	r3, fp, #40	; 0x28
   2905c:	str	r1, [sp, #28]
   29060:	str	r3, [sp, #24]
   29064:	str	r1, [sp, #16]
   29068:	mov	r3, #1
   2906c:	mov	r1, #8
   29070:	str	r3, [sp, #20]
   29074:	add	lr, sp, #16
   29078:	and	r6, r2, r6
   2907c:	sub	r8, fp, #36	; 0x24
   29080:	str	r1, [sp, #16]
   29084:	cmp	r5, #0
   29088:	add	r2, lr, r3, lsl #3
   2908c:	str	r8, [r2, #8]
   29090:	str	sl, [r2, #12]
   29094:	add	r2, r3, #1
   29098:	str	r2, [sp, #20]
   2909c:	beq	290c0 <flatcc_builder_create_buffer@@Base+0x118>
   290a0:	add	r2, lr, r2, lsl #3
   290a4:	add	r1, r1, r7
   290a8:	add	r5, sp, #12
   290ac:	str	r1, [sp, #16]
   290b0:	str	r5, [r2, #8]
   290b4:	str	r7, [r2, #12]
   290b8:	orr	r2, r3, #2
   290bc:	str	r2, [sp, #20]
   290c0:	cmp	r6, #0
   290c4:	beq	290ec <flatcc_builder_create_buffer@@Base+0x144>
   290c8:	movw	r5, #4316	; 0x10dc
   290cc:	add	r3, lr, r2, lsl #3
   290d0:	add	r1, r1, r6
   290d4:	add	r2, r2, #1
   290d8:	movt	r5, #3
   290dc:	str	r1, [sp, #16]
   290e0:	str	r5, [r3, #8]
   290e4:	str	r6, [r3, #12]
   290e8:	str	r2, [sp, #20]
   290ec:	sub	r7, r0, r1
   290f0:	cmp	ip, #0
   290f4:	mov	r6, #144	; 0x90
   290f8:	ldr	r3, [sp, #8]
   290fc:	mov	r0, r7
   29100:	addne	r0, r0, #4
   29104:	cmp	r9, #0
   29108:	movweq	r6, #140	; 0x8c
   2910c:	cmp	r1, #0
   29110:	ldr	r6, [r4, r6]
   29114:	sub	r3, r3, r0
   29118:	str	r3, [fp, #-36]	; 0xffffffdc
   2911c:	sub	r0, r6, r0
   29120:	str	r0, [fp, #-40]	; 0xffffffd8
   29124:	ble	2917c <flatcc_builder_create_buffer@@Base+0x1d4>
   29128:	ldr	r0, [r4, #36]	; 0x24
   2912c:	ldr	r6, [r4, #44]	; 0x2c
   29130:	str	r1, [sp]
   29134:	add	r1, lr, #8
   29138:	mov	r3, r7
   2913c:	blx	r6
   29140:	cmp	r0, #0
   29144:	bne	29190 <flatcc_builder_create_buffer@@Base+0x1e8>
   29148:	cmp	r7, #0
   2914c:	str	r7, [r4, #136]	; 0x88
   29150:	movne	r0, r7
   29154:	subne	sp, fp, #28
   29158:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2915c:	movw	r0, #9364	; 0x2494
   29160:	movw	r1, #4846	; 0x12ee
   29164:	movw	r3, #5161	; 0x1429
   29168:	mov	r2, #772	; 0x304
   2916c:	movt	r0, #3
   29170:	movt	r1, #3
   29174:	movt	r3, #3
   29178:	bl	12bc4 <__assert_fail@plt>
   2917c:	movw	r0, #9364	; 0x2494
   29180:	movw	r1, #4846	; 0x12ee
   29184:	movw	r3, #9043	; 0x2353
   29188:	movw	r2, #647	; 0x287
   2918c:	b	291a0 <flatcc_builder_create_buffer@@Base+0x1f8>
   29190:	movw	r0, #9364	; 0x2494
   29194:	movw	r1, #4846	; 0x12ee
   29198:	movw	r3, #9043	; 0x2353
   2919c:	movw	r2, #651	; 0x28b
   291a0:	movt	r0, #3
   291a4:	movt	r1, #3
   291a8:	movt	r3, #3
   291ac:	bl	12bc4 <__assert_fail@plt>

000291b0 <flatcc_builder_create_struct@@Base>:
   291b0:	push	{r4, r5, r6, sl, fp, lr}
   291b4:	add	fp, sp, #16
   291b8:	sub	sp, sp, #80	; 0x50
   291bc:	cmp	r3, #0
   291c0:	beq	29298 <flatcc_builder_create_struct@@Base+0xe8>
   291c4:	mov	r5, r0
   291c8:	ldrh	r0, [r0, #128]	; 0x80
   291cc:	mov	r4, #0
   291d0:	cmp	r0, r3
   291d4:	strhcc	r3, [r5, #128]	; 0x80
   291d8:	sub	r3, r3, #1
   291dc:	cmp	r2, #0
   291e0:	ldr	r0, [r5, #136]	; 0x88
   291e4:	str	r4, [sp, #12]
   291e8:	str	r4, [sp, #8]
   291ec:	movne	r4, #1
   291f0:	strne	r2, [sp, #20]
   291f4:	strne	r1, [sp, #16]
   291f8:	strne	r2, [sp, #8]
   291fc:	strne	r4, [sp, #12]
   29200:	sub	r6, r0, r2
   29204:	and	r3, r6, r3
   29208:	cmp	r3, #0
   2920c:	beq	29238 <flatcc_builder_create_struct@@Base+0x88>
   29210:	add	r1, sp, #8
   29214:	movw	r6, #4316	; 0x10dc
   29218:	add	r2, r3, r2
   2921c:	add	r1, r1, r4, lsl #3
   29220:	movt	r6, #3
   29224:	add	r4, r4, #1
   29228:	str	r2, [sp, #8]
   2922c:	str	r6, [r1, #8]
   29230:	str	r3, [r1, #12]
   29234:	str	r4, [sp, #12]
   29238:	cmp	r2, #0
   2923c:	ble	292b8 <flatcc_builder_create_struct@@Base+0x108>
   29240:	sub	r6, r0, r2
   29244:	ldr	r0, [r5, #36]	; 0x24
   29248:	ldr	ip, [r5, #44]	; 0x2c
   2924c:	add	r1, sp, #8
   29250:	str	r2, [sp]
   29254:	mov	r2, r4
   29258:	add	r1, r1, #8
   2925c:	mov	r3, r6
   29260:	blx	ip
   29264:	cmp	r0, #0
   29268:	streq	r6, [r5, #136]	; 0x88
   2926c:	moveq	r0, r6
   29270:	subeq	sp, fp, #16
   29274:	popeq	{r4, r5, r6, sl, fp, pc}
   29278:	movw	r0, #9364	; 0x2494
   2927c:	movw	r1, #4846	; 0x12ee
   29280:	movw	r3, #9043	; 0x2353
   29284:	movw	r2, #651	; 0x28b
   29288:	movt	r0, #3
   2928c:	movt	r1, #3
   29290:	movt	r3, #3
   29294:	bl	12bc4 <__assert_fail@plt>
   29298:	movw	r0, #5292	; 0x14ac
   2929c:	movw	r1, #4846	; 0x12ee
   292a0:	movw	r3, #5303	; 0x14b7
   292a4:	movw	r2, #783	; 0x30f
   292a8:	movt	r0, #3
   292ac:	movt	r1, #3
   292b0:	movt	r3, #3
   292b4:	bl	12bc4 <__assert_fail@plt>
   292b8:	movw	r0, #9364	; 0x2494
   292bc:	movw	r1, #4846	; 0x12ee
   292c0:	movw	r3, #9043	; 0x2353
   292c4:	movw	r2, #647	; 0x287
   292c8:	b	29288 <flatcc_builder_create_struct@@Base+0xd8>

000292cc <flatcc_builder_start_buffer@@Base>:
   292cc:	push	{r4, r5, r6, r7, fp, lr}
   292d0:	add	fp, sp, #16
   292d4:	mov	r5, r1
   292d8:	ldrh	r1, [r0, #128]	; 0x80
   292dc:	mov	r6, r3
   292e0:	mov	r7, r2
   292e4:	mov	r4, r0
   292e8:	bl	29388 <flatcc_builder_start_buffer@@Base+0xbc>
   292ec:	mov	r1, r0
   292f0:	mvn	r0, #0
   292f4:	cmp	r1, #0
   292f8:	popne	{r4, r5, r6, r7, fp, pc}
   292fc:	mov	r0, #1
   29300:	cmp	r5, #0
   29304:	strh	r0, [r4, #128]	; 0x80
   29308:	ldrh	r1, [r4, #132]	; 0x84
   2930c:	ldr	r2, [r4, #32]
   29310:	strh	r1, [r2, #34]	; 0x22
   29314:	strh	r7, [r4, #132]	; 0x84
   29318:	ldrh	r1, [r4, #164]	; 0xa4
   2931c:	ldr	r2, [r4, #32]
   29320:	strh	r1, [r2, #32]
   29324:	strh	r6, [r4, #164]	; 0xa4
   29328:	ldr	r1, [r4, #32]
   2932c:	ldr	r2, [r4, #144]	; 0x90
   29330:	str	r2, [r1, #20]
   29334:	ldr	r1, [r4, #32]
   29338:	ldr	r2, [r4, #152]	; 0x98
   2933c:	str	r2, [r1, #28]
   29340:	ldr	r3, [r4, #148]	; 0x94
   29344:	ldr	r1, [r4, #32]
   29348:	ldr	r2, [r4, #136]	; 0x88
   2934c:	ldr	r7, [r4, #168]	; 0xa8
   29350:	add	r6, r3, #1
   29354:	str	r2, [r4, #144]	; 0x90
   29358:	str	r6, [r4, #148]	; 0x94
   2935c:	str	r3, [r4, #152]	; 0x98
   29360:	str	r7, [r1, #16]
   29364:	movw	r1, #4316	; 0x10dc
   29368:	movt	r1, #3
   2936c:	movne	r1, r5
   29370:	ldr	r1, [r1]
   29374:	str	r1, [r4, #168]	; 0xa8
   29378:	ldr	r1, [r4, #32]
   2937c:	strh	r0, [r1, #14]
   29380:	mov	r0, #0
   29384:	pop	{r4, r5, r6, r7, fp, pc}
   29388:	push	{r4, r5, r6, r7, fp, lr}
   2938c:	add	fp, sp, #16
   29390:	sub	sp, sp, #8
   29394:	mov	r5, r1
   29398:	ldr	r1, [r0, #156]	; 0x9c
   2939c:	ldr	r2, [r0, #160]	; 0xa0
   293a0:	mov	r4, r0
   293a4:	add	r0, r1, #1
   293a8:	cmp	r1, r2
   293ac:	str	r0, [r4, #156]	; 0x9c
   293b0:	bge	293c4 <flatcc_builder_start_buffer@@Base+0xf8>
   293b4:	ldr	r0, [r4, #32]
   293b8:	add	r0, r0, #36	; 0x24
   293bc:	str	r0, [r4, #32]
   293c0:	b	29458 <flatcc_builder_start_buffer@@Base+0x18c>
   293c4:	ldr	r2, [r4, #176]	; 0xb0
   293c8:	mvn	r6, #0
   293cc:	cmp	r2, #1
   293d0:	cmpge	r1, r2
   293d4:	bge	29490 <flatcc_builder_start_buffer@@Base+0x1c4>
   293d8:	add	r7, r0, r0, lsl #3
   293dc:	ldr	r0, [r4, #88]	; 0x58
   293e0:	lsl	r2, r7, #2
   293e4:	cmp	r2, r0
   293e8:	bls	29410 <flatcc_builder_start_buffer@@Base+0x144>
   293ec:	ldr	r0, [r4, #40]	; 0x28
   293f0:	ldr	ip, [r4, #48]	; 0x30
   293f4:	mov	r3, #4
   293f8:	add	r1, r4, #84	; 0x54
   293fc:	str	r3, [sp]
   29400:	mov	r3, #0
   29404:	blx	ip
   29408:	cmp	r0, #0
   2940c:	bne	2949c <flatcc_builder_start_buffer@@Base+0x1d0>
   29410:	ldr	r1, [r4, #84]	; 0x54
   29414:	mvn	r0, #35	; 0x23
   29418:	add	r0, r0, r7, lsl #2
   2941c:	adds	r0, r0, r1
   29420:	str	r0, [r4, #32]
   29424:	beq	29490 <flatcc_builder_start_buffer@@Base+0x1c4>
   29428:	ldr	r1, [r4, #88]	; 0x58
   2942c:	movw	r3, #36409	; 0x8e39
   29430:	ldr	r2, [r4, #176]	; 0xb0
   29434:	movt	r3, #14563	; 0x38e3
   29438:	umull	r1, r3, r1, r3
   2943c:	cmp	r2, r3, lsr #3
   29440:	lsr	r1, r3, #3
   29444:	mov	r3, r1
   29448:	movlt	r3, r2
   2944c:	cmp	r2, #0
   29450:	movle	r3, r1
   29454:	str	r3, [r4, #160]	; 0xa0
   29458:	ldr	r1, [r4, #20]
   2945c:	mvn	r3, #3
   29460:	mov	r6, #0
   29464:	str	r1, [r0, #8]
   29468:	ldrh	r2, [r4, #130]	; 0x82
   2946c:	strh	r2, [r0, #12]
   29470:	strh	r5, [r4, #130]	; 0x82
   29474:	ldr	r2, [r4, #28]
   29478:	stm	r0, {r2, r3}
   2947c:	add	r0, r1, r2
   29480:	str	r6, [r4, #20]
   29484:	add	r0, r0, #7
   29488:	bic	r0, r0, #7
   2948c:	str	r0, [r4, #28]
   29490:	mov	r0, r6
   29494:	sub	sp, fp, #16
   29498:	pop	{r4, r5, r6, r7, fp, pc}
   2949c:	movw	r0, #9364	; 0x2494
   294a0:	movw	r1, #4846	; 0x12ee
   294a4:	movw	r3, #8910	; 0x22ce
   294a8:	mov	r2, #308	; 0x134
   294ac:	movt	r0, #3
   294b0:	movt	r1, #3
   294b4:	movt	r3, #3
   294b8:	bl	12bc4 <__assert_fail@plt>

000294bc <flatcc_builder_end_buffer@@Base>:
   294bc:	push	{r4, r5, r6, sl, fp, lr}
   294c0:	add	fp, sp, #16
   294c4:	sub	sp, sp, #8
   294c8:	mov	r4, r0
   294cc:	ldr	r0, [r0, #32]
   294d0:	ldrh	r0, [r0, #14]
   294d4:	cmp	r0, #1
   294d8:	bne	295cc <flatcc_builder_end_buffer@@Base+0x110>
   294dc:	mov	r3, r1
   294e0:	ldr	r1, [r4, #152]	; 0x98
   294e4:	ldrh	r0, [r4, #164]	; 0xa4
   294e8:	ldrh	r2, [r4, #132]	; 0x84
   294ec:	cmp	r1, #0
   294f0:	ldrh	r1, [r4, #128]	; 0x80
   294f4:	and	r0, r0, #2
   294f8:	orrne	r0, r0, #1
   294fc:	cmp	r1, r2
   29500:	movcc	r1, r2
   29504:	strhcc	r2, [r4, #128]	; 0x80
   29508:	str	r0, [sp, #4]
   2950c:	mov	r0, r4
   29510:	str	r1, [sp]
   29514:	add	r1, r4, #168	; 0xa8
   29518:	bl	28fa8 <flatcc_builder_create_buffer@@Base>
   2951c:	mov	r6, r0
   29520:	cmp	r0, #0
   29524:	beq	295c0 <flatcc_builder_end_buffer@@Base+0x104>
   29528:	ldr	r1, [r4, #32]
   2952c:	ldr	r0, [r4, #16]
   29530:	ldr	r2, [r4, #20]
   29534:	ldr	r3, [r1, #20]
   29538:	str	r3, [r4, #144]	; 0x90
   2953c:	ldr	r3, [r1, #28]
   29540:	str	r3, [r4, #152]	; 0x98
   29544:	ldr	r3, [r1, #16]
   29548:	str	r3, [r4, #168]	; 0xa8
   2954c:	ldrh	r1, [r1, #32]
   29550:	strh	r1, [r4, #164]	; 0xa4
   29554:	mov	r1, #0
   29558:	bl	12b64 <memset@plt>
   2955c:	ldr	r0, [r4, #32]
   29560:	ldr	r1, [r4, #60]	; 0x3c
   29564:	ldr	r2, [r4, #64]	; 0x40
   29568:	ldr	r3, [r0, #8]
   2956c:	str	r3, [r4, #20]
   29570:	ldr	r3, [r0]
   29574:	str	r3, [r4, #28]
   29578:	add	r1, r1, r3
   2957c:	ldr	r5, [r0, #4]
   29580:	str	r1, [r4, #16]
   29584:	sub	r1, r2, r3
   29588:	cmp	r1, r5
   2958c:	movhi	r1, r5
   29590:	str	r1, [r4, #24]
   29594:	ldrh	r1, [r4, #130]	; 0x82
   29598:	ldrh	r2, [r4, #128]	; 0x80
   2959c:	cmp	r2, r1
   295a0:	strhcc	r1, [r4, #128]	; 0x80
   295a4:	ldrh	r1, [r0, #12]
   295a8:	sub	r0, r0, #36	; 0x24
   295ac:	str	r0, [r4, #32]
   295b0:	strh	r1, [r4, #130]	; 0x82
   295b4:	ldr	r0, [r4, #156]	; 0x9c
   295b8:	sub	r0, r0, #1
   295bc:	str	r0, [r4, #156]	; 0x9c
   295c0:	mov	r0, r6
   295c4:	sub	sp, fp, #16
   295c8:	pop	{r4, r5, r6, sl, fp, pc}
   295cc:	movw	r0, #5405	; 0x151d
   295d0:	movw	r1, #4846	; 0x12ee
   295d4:	movw	r3, #5449	; 0x1549
   295d8:	movw	r2, #838	; 0x346
   295dc:	movt	r0, #3
   295e0:	movt	r1, #3
   295e4:	movt	r3, #3
   295e8:	bl	12bc4 <__assert_fail@plt>

000295ec <flatcc_builder_start_struct@@Base>:
   295ec:	push	{r4, r5, r6, r7, fp, lr}
   295f0:	add	fp, sp, #16
   295f4:	mov	r6, r1
   295f8:	mov	r1, r2
   295fc:	mov	r4, r0
   29600:	bl	29388 <flatcc_builder_start_buffer@@Base+0xbc>
   29604:	mov	r5, #0
   29608:	cmp	r0, #0
   2960c:	bne	2967c <flatcc_builder_start_struct@@Base+0x90>
   29610:	ldr	r1, [r4, #32]
   29614:	mov	r0, #2
   29618:	strh	r0, [r1, #14]
   2961c:	ldr	r2, [r4, #28]
   29620:	ldr	r0, [r4, #60]	; 0x3c
   29624:	ldr	r3, [r4, #64]	; 0x40
   29628:	add	r0, r0, r2
   2962c:	sub	r2, r3, r2
   29630:	mvn	r3, #3
   29634:	cmn	r2, #4
   29638:	str	r0, [r4, #16]
   2963c:	movcs	r2, r3
   29640:	str	r2, [r4, #24]
   29644:	str	r3, [r1, #4]
   29648:	ldr	r7, [r4, #20]
   2964c:	add	r1, r7, r6
   29650:	cmp	r1, r2
   29654:	str	r1, [r4, #20]
   29658:	bcc	29678 <flatcc_builder_start_struct@@Base+0x8c>
   2965c:	add	r1, r1, #1
   29660:	mov	r0, r4
   29664:	mvn	r2, #3
   29668:	bl	2c3fc <flatcc_builder_get_emit_context@@Base+0x8>
   2966c:	cmp	r0, #0
   29670:	bne	2967c <flatcc_builder_start_struct@@Base+0x90>
   29674:	ldr	r0, [r4, #16]
   29678:	add	r5, r0, r7
   2967c:	mov	r0, r5
   29680:	pop	{r4, r5, r6, r7, fp, pc}

00029684 <flatcc_builder_struct_edit@@Base>:
   29684:	ldr	r0, [r0, #16]
   29688:	bx	lr

0002968c <flatcc_builder_end_struct@@Base>:
   2968c:	push	{r4, r5, fp, lr}
   29690:	add	fp, sp, #8
   29694:	mov	r4, r0
   29698:	ldr	r0, [r0, #32]
   2969c:	ldrh	r0, [r0, #14]
   296a0:	cmp	r0, #2
   296a4:	bne	29744 <flatcc_builder_end_struct@@Base+0xb8>
   296a8:	ldrh	r3, [r4, #130]	; 0x82
   296ac:	ldr	r1, [r4, #16]
   296b0:	ldr	r2, [r4, #20]
   296b4:	mov	r0, r4
   296b8:	bl	291b0 <flatcc_builder_create_struct@@Base>
   296bc:	mov	r5, r0
   296c0:	cmp	r0, #0
   296c4:	beq	2973c <flatcc_builder_end_struct@@Base+0xb0>
   296c8:	ldr	r0, [r4, #16]
   296cc:	ldr	r2, [r4, #20]
   296d0:	mov	r1, #0
   296d4:	bl	12b64 <memset@plt>
   296d8:	ldr	r0, [r4, #32]
   296dc:	ldr	r1, [r4, #60]	; 0x3c
   296e0:	ldr	ip, [r4, #64]	; 0x40
   296e4:	ldr	r3, [r0, #8]
   296e8:	str	r3, [r4, #20]
   296ec:	ldr	r3, [r0]
   296f0:	str	r3, [r4, #28]
   296f4:	add	r1, r1, r3
   296f8:	ldr	r2, [r0, #4]
   296fc:	str	r1, [r4, #16]
   29700:	sub	r1, ip, r3
   29704:	cmp	r1, r2
   29708:	movhi	r1, r2
   2970c:	str	r1, [r4, #24]
   29710:	ldrh	r1, [r4, #130]	; 0x82
   29714:	ldrh	r2, [r4, #128]	; 0x80
   29718:	cmp	r2, r1
   2971c:	strhcc	r1, [r4, #128]	; 0x80
   29720:	ldrh	r1, [r0, #12]
   29724:	sub	r0, r0, #36	; 0x24
   29728:	str	r0, [r4, #32]
   2972c:	strh	r1, [r4, #130]	; 0x82
   29730:	ldr	r0, [r4, #156]	; 0x9c
   29734:	sub	r0, r0, #1
   29738:	str	r0, [r4, #156]	; 0x9c
   2973c:	mov	r0, r5
   29740:	pop	{r4, r5, fp, pc}
   29744:	movw	r0, #5538	; 0x15a2
   29748:	movw	r1, #4846	; 0x12ee
   2974c:	movw	r3, #5582	; 0x15ce
   29750:	mov	r2, #872	; 0x368
   29754:	movt	r0, #3
   29758:	movt	r1, #3
   2975c:	movt	r3, #3
   29760:	bl	12bc4 <__assert_fail@plt>

00029764 <flatcc_builder_extend_vector@@Base>:
   29764:	push	{r4, r5, fp, lr}
   29768:	add	fp, sp, #8
   2976c:	mov	r4, r0
   29770:	ldr	r0, [r0, #32]
   29774:	ldr	r2, [r0, #20]
   29778:	adds	r2, r2, r1
   2977c:	bcs	297dc <flatcc_builder_extend_vector@@Base+0x78>
   29780:	ldr	r3, [r0, #24]
   29784:	cmp	r2, r3
   29788:	bhi	297dc <flatcc_builder_extend_vector@@Base+0x78>
   2978c:	str	r2, [r0, #20]
   29790:	ldr	r0, [r4, #32]
   29794:	ldr	r5, [r4, #20]
   29798:	ldr	r2, [r4, #24]
   2979c:	ldr	r0, [r0, #16]
   297a0:	mla	r0, r0, r1, r5
   297a4:	cmp	r0, r2
   297a8:	str	r0, [r4, #20]
   297ac:	bcc	297d0 <flatcc_builder_extend_vector@@Base+0x6c>
   297b0:	add	r1, r0, #1
   297b4:	mov	r0, r4
   297b8:	mvn	r2, #3
   297bc:	bl	2c3fc <flatcc_builder_get_emit_context@@Base+0x8>
   297c0:	mov	r1, r0
   297c4:	mov	r0, #0
   297c8:	cmp	r1, #0
   297cc:	popne	{r4, r5, fp, pc}
   297d0:	ldr	r0, [r4, #16]
   297d4:	add	r0, r0, r5
   297d8:	pop	{r4, r5, fp, pc}
   297dc:	movw	r0, #9117	; 0x239d
   297e0:	movw	r1, #4846	; 0x12ee
   297e4:	movw	r3, #9144	; 0x23b8
   297e8:	mov	r2, #892	; 0x37c
   297ec:	movt	r0, #3
   297f0:	movt	r1, #3
   297f4:	movt	r3, #3
   297f8:	bl	12bc4 <__assert_fail@plt>

000297fc <flatcc_builder_vector_push@@Base>:
   297fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29800:	add	fp, sp, #24
   29804:	mov	r5, r0
   29808:	ldr	r0, [r0, #32]
   2980c:	mov	r8, r1
   29810:	ldrh	r1, [r0, #14]
   29814:	cmp	r1, #4
   29818:	bne	2989c <flatcc_builder_vector_push@@Base+0xa0>
   2981c:	ldr	r1, [r0, #20]
   29820:	ldr	r2, [r0, #24]
   29824:	cmp	r1, r2
   29828:	bhi	298b4 <flatcc_builder_vector_push@@Base+0xb8>
   2982c:	add	r1, r1, #1
   29830:	str	r1, [r0, #20]
   29834:	ldr	r0, [r5, #32]
   29838:	ldr	r4, [r5, #20]
   2983c:	ldr	r1, [r5, #24]
   29840:	ldr	r6, [r0, #16]
   29844:	add	r0, r4, r6
   29848:	cmp	r0, r1
   2984c:	str	r0, [r5, #20]
   29850:	bcc	29870 <flatcc_builder_vector_push@@Base+0x74>
   29854:	add	r1, r0, #1
   29858:	mov	r0, r5
   2985c:	mvn	r2, #3
   29860:	bl	2c3fc <flatcc_builder_get_emit_context@@Base+0x8>
   29864:	mov	r7, #0
   29868:	cmp	r0, #0
   2986c:	bne	29894 <flatcc_builder_vector_push@@Base+0x98>
   29870:	ldr	r0, [r5, #16]
   29874:	adds	r7, r0, r4
   29878:	beq	29890 <flatcc_builder_vector_push@@Base+0x94>
   2987c:	mov	r0, r7
   29880:	mov	r1, r8
   29884:	mov	r2, r6
   29888:	bl	12ab0 <memcpy@plt>
   2988c:	b	29894 <flatcc_builder_vector_push@@Base+0x98>
   29890:	mov	r7, #0
   29894:	mov	r0, r7
   29898:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2989c:	movw	r0, #5649	; 0x1611
   298a0:	movw	r1, #4846	; 0x12ee
   298a4:	movw	r3, #5693	; 0x163d
   298a8:	movw	r2, #907	; 0x38b
   298ac:	movt	r0, #3
   298b0:	b	298c8 <flatcc_builder_vector_push@@Base+0xcc>
   298b4:	movw	r0, #5760	; 0x1680
   298b8:	movw	r1, #4846	; 0x12ee
   298bc:	movw	r3, #5693	; 0x163d
   298c0:	mov	r2, #908	; 0x38c
   298c4:	movt	r0, #3
   298c8:	movt	r1, #3
   298cc:	movt	r3, #3
   298d0:	bl	12bc4 <__assert_fail@plt>

000298d4 <flatcc_builder_append_vector@@Base>:
   298d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   298d8:	add	fp, sp, #24
   298dc:	mov	r6, r0
   298e0:	ldr	r0, [r0, #32]
   298e4:	mov	r8, r1
   298e8:	ldrh	r1, [r0, #14]
   298ec:	cmp	r1, #4
   298f0:	bne	2999c <flatcc_builder_append_vector@@Base+0xc8>
   298f4:	ldr	r1, [r0, #20]
   298f8:	mov	r9, r2
   298fc:	adds	r1, r1, r2
   29900:	bcs	2997c <flatcc_builder_append_vector@@Base+0xa8>
   29904:	ldr	r2, [r0, #24]
   29908:	cmp	r1, r2
   2990c:	bhi	2997c <flatcc_builder_append_vector@@Base+0xa8>
   29910:	str	r1, [r0, #20]
   29914:	ldr	r0, [r6, #32]
   29918:	ldr	r4, [r6, #20]
   2991c:	ldr	r1, [r6, #24]
   29920:	ldr	r5, [r0, #16]
   29924:	mla	r0, r5, r9, r4
   29928:	cmp	r0, r1
   2992c:	str	r0, [r6, #20]
   29930:	bcc	29950 <flatcc_builder_append_vector@@Base+0x7c>
   29934:	add	r1, r0, #1
   29938:	mov	r0, r6
   2993c:	mvn	r2, #3
   29940:	bl	2c3fc <flatcc_builder_get_emit_context@@Base+0x8>
   29944:	mov	r7, #0
   29948:	cmp	r0, #0
   2994c:	bne	29974 <flatcc_builder_append_vector@@Base+0xa0>
   29950:	ldr	r0, [r6, #16]
   29954:	adds	r7, r0, r4
   29958:	beq	29970 <flatcc_builder_append_vector@@Base+0x9c>
   2995c:	mul	r2, r5, r9
   29960:	mov	r0, r7
   29964:	mov	r1, r8
   29968:	bl	12ab0 <memcpy@plt>
   2996c:	b	29974 <flatcc_builder_append_vector@@Base+0xa0>
   29970:	mov	r7, #0
   29974:	mov	r0, r7
   29978:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2997c:	movw	r0, #9117	; 0x239d
   29980:	movw	r1, #4846	; 0x12ee
   29984:	movw	r3, #9144	; 0x23b8
   29988:	mov	r2, #892	; 0x37c
   2998c:	movt	r0, #3
   29990:	movt	r1, #3
   29994:	movt	r3, #3
   29998:	bl	12bc4 <__assert_fail@plt>
   2999c:	movw	r0, #5649	; 0x1611
   299a0:	movw	r1, #4846	; 0x12ee
   299a4:	movw	r3, #5821	; 0x16bd
   299a8:	movw	r2, #915	; 0x393
   299ac:	movt	r0, #3
   299b0:	movt	r1, #3
   299b4:	movt	r3, #3
   299b8:	bl	12bc4 <__assert_fail@plt>

000299bc <flatcc_builder_extend_offset_vector@@Base>:
   299bc:	push	{r4, r5, fp, lr}
   299c0:	add	fp, sp, #8
   299c4:	mov	r4, r0
   299c8:	ldr	r0, [r0, #32]
   299cc:	ldr	r2, [r0, #20]
   299d0:	adds	r2, r2, r1
   299d4:	cmpcc	r2, #1073741824	; 0x40000000
   299d8:	bcc	299fc <flatcc_builder_extend_offset_vector@@Base+0x40>
   299dc:	movw	r0, #9117	; 0x239d
   299e0:	movw	r1, #4846	; 0x12ee
   299e4:	movw	r3, #9144	; 0x23b8
   299e8:	mov	r2, #892	; 0x37c
   299ec:	movt	r0, #3
   299f0:	movt	r1, #3
   299f4:	movt	r3, #3
   299f8:	bl	12bc4 <__assert_fail@plt>
   299fc:	str	r2, [r0, #20]
   29a00:	ldr	r5, [r4, #20]
   29a04:	ldr	r2, [r4, #24]
   29a08:	add	r0, r5, r1, lsl #2
   29a0c:	cmp	r0, r2
   29a10:	str	r0, [r4, #20]
   29a14:	bcc	29a38 <flatcc_builder_extend_offset_vector@@Base+0x7c>
   29a18:	add	r1, r0, #1
   29a1c:	mov	r0, r4
   29a20:	mvn	r2, #3
   29a24:	bl	2c3fc <flatcc_builder_get_emit_context@@Base+0x8>
   29a28:	mov	r1, r0
   29a2c:	mov	r0, #0
   29a30:	cmp	r1, #0
   29a34:	popne	{r4, r5, fp, pc}
   29a38:	ldr	r0, [r4, #16]
   29a3c:	add	r0, r0, r5
   29a40:	pop	{r4, r5, fp, pc}

00029a44 <flatcc_builder_offset_vector_push@@Base>:
   29a44:	push	{r4, r5, r6, r7, fp, lr}
   29a48:	add	fp, sp, #16
   29a4c:	mov	r6, r0
   29a50:	ldr	r0, [r0, #32]
   29a54:	mov	r4, r1
   29a58:	ldrh	r1, [r0, #14]
   29a5c:	cmp	r1, #5
   29a60:	bne	29ac4 <flatcc_builder_offset_vector_push@@Base+0x80>
   29a64:	ldr	r1, [r0, #20]
   29a68:	mov	r5, #0
   29a6c:	cmn	r1, #-1073741823	; 0xc0000001
   29a70:	beq	29abc <flatcc_builder_offset_vector_push@@Base+0x78>
   29a74:	add	r1, r1, #1
   29a78:	str	r1, [r0, #20]
   29a7c:	ldr	r7, [r6, #20]
   29a80:	ldr	r0, [r6, #24]
   29a84:	add	r1, r7, #4
   29a88:	cmp	r1, r0
   29a8c:	str	r1, [r6, #20]
   29a90:	bcc	29aac <flatcc_builder_offset_vector_push@@Base+0x68>
   29a94:	add	r1, r7, #5
   29a98:	mov	r0, r6
   29a9c:	mvn	r2, #3
   29aa0:	bl	2c3fc <flatcc_builder_get_emit_context@@Base+0x8>
   29aa4:	cmp	r0, #0
   29aa8:	bne	29abc <flatcc_builder_offset_vector_push@@Base+0x78>
   29aac:	ldr	r0, [r6, #16]
   29ab0:	adds	r0, r0, r7
   29ab4:	movne	r5, r0
   29ab8:	strne	r4, [r0]
   29abc:	mov	r0, r5
   29ac0:	pop	{r4, r5, r6, r7, fp, pc}
   29ac4:	movw	r0, #5898	; 0x170a
   29ac8:	movw	r1, #4846	; 0x12ee
   29acc:	movw	r3, #5949	; 0x173d
   29ad0:	movw	r2, #934	; 0x3a6
   29ad4:	movt	r0, #3
   29ad8:	movt	r1, #3
   29adc:	movt	r3, #3
   29ae0:	bl	12bc4 <__assert_fail@plt>

00029ae4 <flatcc_builder_append_offset_vector@@Base>:
   29ae4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29ae8:	add	fp, sp, #24
   29aec:	mov	r6, r0
   29af0:	ldr	r0, [r0, #32]
   29af4:	mov	r8, r1
   29af8:	ldrh	r1, [r0, #14]
   29afc:	cmp	r1, #5
   29b00:	bne	29b9c <flatcc_builder_append_offset_vector@@Base+0xb8>
   29b04:	ldr	r1, [r0, #20]
   29b08:	mov	r5, r2
   29b0c:	adds	r1, r1, r2
   29b10:	cmpcc	r1, #1073741824	; 0x40000000
   29b14:	bcc	29b38 <flatcc_builder_append_offset_vector@@Base+0x54>
   29b18:	movw	r0, #9117	; 0x239d
   29b1c:	movw	r1, #4846	; 0x12ee
   29b20:	movw	r3, #9144	; 0x23b8
   29b24:	mov	r2, #892	; 0x37c
   29b28:	movt	r0, #3
   29b2c:	movt	r1, #3
   29b30:	movt	r3, #3
   29b34:	bl	12bc4 <__assert_fail@plt>
   29b38:	str	r1, [r0, #20]
   29b3c:	ldr	r4, [r6, #20]
   29b40:	ldr	r1, [r6, #24]
   29b44:	add	r0, r4, r5, lsl #2
   29b48:	cmp	r0, r1
   29b4c:	str	r0, [r6, #20]
   29b50:	bcc	29b70 <flatcc_builder_append_offset_vector@@Base+0x8c>
   29b54:	add	r1, r0, #1
   29b58:	mov	r0, r6
   29b5c:	mvn	r2, #3
   29b60:	bl	2c3fc <flatcc_builder_get_emit_context@@Base+0x8>
   29b64:	mov	r7, #0
   29b68:	cmp	r0, #0
   29b6c:	bne	29b94 <flatcc_builder_append_offset_vector@@Base+0xb0>
   29b70:	ldr	r0, [r6, #16]
   29b74:	adds	r7, r0, r4
   29b78:	beq	29b90 <flatcc_builder_append_offset_vector@@Base+0xac>
   29b7c:	lsl	r2, r5, #2
   29b80:	mov	r0, r7
   29b84:	mov	r1, r8
   29b88:	bl	12ab0 <memcpy@plt>
   29b8c:	b	29b94 <flatcc_builder_append_offset_vector@@Base+0xb0>
   29b90:	mov	r7, #0
   29b94:	mov	r0, r7
   29b98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29b9c:	movw	r0, #5898	; 0x170a
   29ba0:	movw	r1, #4846	; 0x12ee
   29ba4:	movw	r3, #6047	; 0x179f
   29ba8:	mov	r2, #948	; 0x3b4
   29bac:	movt	r0, #3
   29bb0:	movt	r1, #3
   29bb4:	movt	r3, #3
   29bb8:	bl	12bc4 <__assert_fail@plt>

00029bbc <flatcc_builder_extend_string@@Base>:
   29bbc:	push	{r4, r5, fp, lr}
   29bc0:	add	fp, sp, #8
   29bc4:	mov	r4, r0
   29bc8:	ldr	r0, [r0, #32]
   29bcc:	ldrh	r2, [r0, #14]
   29bd0:	cmp	r2, #6
   29bd4:	bne	29c2c <flatcc_builder_extend_string@@Base+0x70>
   29bd8:	ldr	r2, [r0, #20]
   29bdc:	adds	r2, r2, r1
   29be0:	bcs	29c4c <flatcc_builder_extend_string@@Base+0x90>
   29be4:	str	r2, [r0, #20]
   29be8:	ldr	r5, [r4, #20]
   29bec:	ldr	r2, [r4, #24]
   29bf0:	add	r0, r5, r1
   29bf4:	cmp	r0, r2
   29bf8:	str	r0, [r4, #20]
   29bfc:	bcc	29c20 <flatcc_builder_extend_string@@Base+0x64>
   29c00:	add	r1, r0, #1
   29c04:	mov	r0, r4
   29c08:	mvn	r2, #3
   29c0c:	bl	2c3fc <flatcc_builder_get_emit_context@@Base+0x8>
   29c10:	mov	r1, r0
   29c14:	mov	r0, #0
   29c18:	cmp	r1, #0
   29c1c:	popne	{r4, r5, fp, pc}
   29c20:	ldr	r0, [r4, #16]
   29c24:	add	r0, r0, r5
   29c28:	pop	{r4, r5, fp, pc}
   29c2c:	movw	r0, #6163	; 0x1813
   29c30:	movw	r1, #4846	; 0x12ee
   29c34:	movw	r3, #6207	; 0x183f
   29c38:	movw	r2, #957	; 0x3bd
   29c3c:	movt	r0, #3
   29c40:	movt	r1, #3
   29c44:	movt	r3, #3
   29c48:	bl	12bc4 <__assert_fail@plt>
   29c4c:	movw	r0, #9117	; 0x239d
   29c50:	movw	r1, #4846	; 0x12ee
   29c54:	movw	r3, #9144	; 0x23b8
   29c58:	mov	r2, #892	; 0x37c
   29c5c:	movt	r0, #3
   29c60:	movt	r1, #3
   29c64:	movt	r3, #3
   29c68:	bl	12bc4 <__assert_fail@plt>

00029c6c <flatcc_builder_append_string@@Base>:
   29c6c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29c70:	add	fp, sp, #24
   29c74:	mov	r6, r0
   29c78:	ldr	r0, [r0, #32]
   29c7c:	mov	r8, r1
   29c80:	ldrh	r1, [r0, #14]
   29c84:	cmp	r1, #6
   29c88:	bne	29d00 <flatcc_builder_append_string@@Base+0x94>
   29c8c:	ldr	r1, [r0, #20]
   29c90:	mov	r4, r2
   29c94:	adds	r1, r1, r2
   29c98:	bcs	29d20 <flatcc_builder_append_string@@Base+0xb4>
   29c9c:	str	r1, [r0, #20]
   29ca0:	ldr	r5, [r6, #20]
   29ca4:	ldr	r1, [r6, #24]
   29ca8:	add	r0, r5, r4
   29cac:	cmp	r0, r1
   29cb0:	str	r0, [r6, #20]
   29cb4:	bcc	29cd4 <flatcc_builder_append_string@@Base+0x68>
   29cb8:	add	r1, r0, #1
   29cbc:	mov	r0, r6
   29cc0:	mvn	r2, #3
   29cc4:	bl	2c3fc <flatcc_builder_get_emit_context@@Base+0x8>
   29cc8:	mov	r7, #0
   29ccc:	cmp	r0, #0
   29cd0:	bne	29cf8 <flatcc_builder_append_string@@Base+0x8c>
   29cd4:	ldr	r0, [r6, #16]
   29cd8:	adds	r7, r0, r5
   29cdc:	beq	29cf4 <flatcc_builder_append_string@@Base+0x88>
   29ce0:	mov	r0, r7
   29ce4:	mov	r1, r8
   29ce8:	mov	r2, r4
   29cec:	bl	12ab0 <memcpy@plt>
   29cf0:	b	29cf8 <flatcc_builder_append_string@@Base+0x8c>
   29cf4:	mov	r7, #0
   29cf8:	mov	r0, r7
   29cfc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29d00:	movw	r0, #6163	; 0x1813
   29d04:	movw	r1, #4846	; 0x12ee
   29d08:	movw	r3, #6270	; 0x187e
   29d0c:	movw	r2, #966	; 0x3c6
   29d10:	movt	r0, #3
   29d14:	movt	r1, #3
   29d18:	movt	r3, #3
   29d1c:	bl	12bc4 <__assert_fail@plt>
   29d20:	movw	r0, #9117	; 0x239d
   29d24:	movw	r1, #4846	; 0x12ee
   29d28:	movw	r3, #9144	; 0x23b8
   29d2c:	mov	r2, #892	; 0x37c
   29d30:	movt	r0, #3
   29d34:	movt	r1, #3
   29d38:	movt	r3, #3
   29d3c:	bl	12bc4 <__assert_fail@plt>

00029d40 <flatcc_builder_append_string_str@@Base>:
   29d40:	push	{r4, r5, fp, lr}
   29d44:	add	fp, sp, #8
   29d48:	mov	r5, r0
   29d4c:	mov	r0, r1
   29d50:	mov	r4, r1
   29d54:	bl	12b40 <strlen@plt>
   29d58:	mov	r2, r0
   29d5c:	mov	r0, r5
   29d60:	mov	r1, r4
   29d64:	pop	{r4, r5, fp, lr}
   29d68:	b	29c6c <flatcc_builder_append_string@@Base>

00029d6c <flatcc_builder_append_string_strn@@Base>:
   29d6c:	push	{r4, r5, r6, sl, fp, lr}
   29d70:	add	fp, sp, #16
   29d74:	mov	r6, r0
   29d78:	mov	r5, r1
   29d7c:	mov	r0, r1
   29d80:	mov	r1, #0
   29d84:	mov	r4, r2
   29d88:	bl	12b7c <memchr@plt>
   29d8c:	cmp	r0, #0
   29d90:	mov	r1, r5
   29d94:	subne	r4, r0, r5
   29d98:	mov	r0, r6
   29d9c:	mov	r2, r4
   29da0:	pop	{r4, r5, r6, sl, fp, lr}
   29da4:	b	29c6c <flatcc_builder_append_string@@Base>

00029da8 <flatcc_builder_truncate_vector@@Base>:
   29da8:	push	{fp, lr}
   29dac:	mov	fp, sp
   29db0:	ldr	r2, [r0, #32]
   29db4:	ldrh	r3, [r2, #14]
   29db8:	cmp	r3, #4
   29dbc:	bne	29e04 <flatcc_builder_truncate_vector@@Base+0x5c>
   29dc0:	ldr	r3, [r2, #20]
   29dc4:	cmp	r3, r1
   29dc8:	bcc	29e1c <flatcc_builder_truncate_vector@@Base+0x74>
   29dcc:	sub	r3, r3, r1
   29dd0:	str	r3, [r2, #20]
   29dd4:	ldr	r2, [r0, #32]
   29dd8:	ldr	r3, [r0, #20]
   29ddc:	ldr	ip, [r0, #16]
   29de0:	ldr	r2, [r2, #16]
   29de4:	mls	r3, r2, r1, r3
   29de8:	mul	r2, r2, r1
   29dec:	mov	r1, #0
   29df0:	str	r3, [r0, #20]
   29df4:	add	r0, ip, r3
   29df8:	bl	12b64 <memset@plt>
   29dfc:	mov	r0, #0
   29e00:	pop	{fp, pc}
   29e04:	movw	r0, #5649	; 0x1611
   29e08:	movw	r1, #4846	; 0x12ee
   29e0c:	movw	r3, #6347	; 0x18cb
   29e10:	movw	r2, #985	; 0x3d9
   29e14:	movt	r0, #3
   29e18:	b	29e30 <flatcc_builder_truncate_vector@@Base+0x88>
   29e1c:	movw	r0, #6410	; 0x190a
   29e20:	movw	r1, #4846	; 0x12ee
   29e24:	movw	r3, #6347	; 0x18cb
   29e28:	movw	r2, #986	; 0x3da
   29e2c:	movt	r0, #3
   29e30:	movt	r1, #3
   29e34:	movt	r3, #3
   29e38:	bl	12bc4 <__assert_fail@plt>

00029e3c <flatcc_builder_truncate_offset_vector@@Base>:
   29e3c:	push	{fp, lr}
   29e40:	mov	fp, sp
   29e44:	ldr	r2, [r0, #32]
   29e48:	ldrh	r3, [r2, #14]
   29e4c:	cmp	r3, #5
   29e50:	bne	29e98 <flatcc_builder_truncate_offset_vector@@Base+0x5c>
   29e54:	ldr	r3, [r2, #20]
   29e58:	cmp	r3, r1
   29e5c:	bcc	29eb0 <flatcc_builder_truncate_offset_vector@@Base+0x74>
   29e60:	sub	r3, r3, r1
   29e64:	str	r3, [r2, #20]
   29e68:	ldr	r2, [r0, #32]
   29e6c:	ldr	r3, [r0, #20]
   29e70:	ldr	ip, [r0, #16]
   29e74:	ldr	r2, [r2, #16]
   29e78:	mls	r3, r2, r1, r3
   29e7c:	mul	r2, r2, r1
   29e80:	mov	r1, #0
   29e84:	str	r3, [r0, #20]
   29e88:	add	r0, ip, r3
   29e8c:	bl	12b64 <memset@plt>
   29e90:	mov	r0, #0
   29e94:	pop	{fp, pc}
   29e98:	movw	r0, #5898	; 0x170a
   29e9c:	movw	r1, #4846	; 0x12ee
   29ea0:	movw	r3, #6446	; 0x192e
   29ea4:	movw	r2, #994	; 0x3e2
   29ea8:	movt	r0, #3
   29eac:	b	29ec4 <flatcc_builder_truncate_offset_vector@@Base+0x88>
   29eb0:	movw	r0, #6516	; 0x1974
   29eb4:	movw	r1, #4846	; 0x12ee
   29eb8:	movw	r3, #6446	; 0x192e
   29ebc:	movw	r2, #995	; 0x3e3
   29ec0:	movt	r0, #3
   29ec4:	movt	r1, #3
   29ec8:	movt	r3, #3
   29ecc:	bl	12bc4 <__assert_fail@plt>

00029ed0 <flatcc_builder_truncate_string@@Base>:
   29ed0:	push	{fp, lr}
   29ed4:	mov	fp, sp
   29ed8:	mov	r2, r1
   29edc:	ldr	r1, [r0, #32]
   29ee0:	ldrh	r3, [r1, #14]
   29ee4:	cmp	r3, #6
   29ee8:	bne	29f24 <flatcc_builder_truncate_string@@Base+0x54>
   29eec:	ldr	r3, [r1, #20]
   29ef0:	cmp	r3, r2
   29ef4:	bcc	29f3c <flatcc_builder_truncate_string@@Base+0x6c>
   29ef8:	sub	r3, r3, r2
   29efc:	str	r3, [r1, #20]
   29f00:	ldr	r3, [r0, #20]
   29f04:	ldr	r1, [r0, #16]
   29f08:	sub	r3, r3, r2
   29f0c:	str	r3, [r0, #20]
   29f10:	add	r0, r1, r3
   29f14:	mov	r1, #0
   29f18:	bl	12b64 <memset@plt>
   29f1c:	mov	r0, #0
   29f20:	pop	{fp, pc}
   29f24:	movw	r0, #6163	; 0x1813
   29f28:	movw	r1, #4846	; 0x12ee
   29f2c:	movw	r3, #6575	; 0x19af
   29f30:	movw	r2, #1003	; 0x3eb
   29f34:	movt	r0, #3
   29f38:	b	29f50 <flatcc_builder_truncate_string@@Base+0x80>
   29f3c:	movw	r0, #6638	; 0x19ee
   29f40:	movw	r1, #4846	; 0x12ee
   29f44:	movw	r3, #6575	; 0x19af
   29f48:	mov	r2, #1004	; 0x3ec
   29f4c:	movt	r0, #3
   29f50:	movt	r1, #3
   29f54:	movt	r3, #3
   29f58:	bl	12bc4 <__assert_fail@plt>

00029f5c <flatcc_builder_start_vector@@Base>:
   29f5c:	push	{r4, r5, r6, r7, fp, lr}
   29f60:	add	fp, sp, #16
   29f64:	mov	r7, #4
   29f68:	cmp	r2, #4
   29f6c:	mov	r6, r1
   29f70:	mov	r5, r3
   29f74:	mov	r4, r0
   29f78:	movls	r2, r7
   29f7c:	mov	r1, r2
   29f80:	bl	29388 <flatcc_builder_start_buffer@@Base+0xbc>
   29f84:	mov	r1, r0
   29f88:	mvn	r0, #0
   29f8c:	cmp	r1, #0
   29f90:	popne	{r4, r5, r6, r7, fp, pc}
   29f94:	ldr	r0, [r4, #32]
   29f98:	str	r6, [r0, #16]
   29f9c:	mov	r0, #0
   29fa0:	ldr	r1, [r4, #32]
   29fa4:	str	r0, [r1, #20]
   29fa8:	ldr	r1, [r4, #32]
   29fac:	str	r5, [r1, #24]
   29fb0:	ldr	r1, [r4, #32]
   29fb4:	strh	r7, [r1, #14]
   29fb8:	ldr	r2, [r4, #28]
   29fbc:	ldr	r3, [r4, #60]	; 0x3c
   29fc0:	ldr	r7, [r4, #64]	; 0x40
   29fc4:	add	r3, r3, r2
   29fc8:	sub	r2, r7, r2
   29fcc:	str	r3, [r4, #16]
   29fd0:	mvn	r3, #3
   29fd4:	cmn	r2, #4
   29fd8:	movcs	r2, r3
   29fdc:	str	r2, [r4, #24]
   29fe0:	str	r3, [r1, #4]
   29fe4:	pop	{r4, r5, r6, r7, fp, pc}

00029fe8 <flatcc_builder_start_offset_vector@@Base>:
   29fe8:	push	{r4, r5, fp, lr}
   29fec:	add	fp, sp, #8
   29ff0:	mov	r1, #4
   29ff4:	mov	r4, r0
   29ff8:	mov	r5, #4
   29ffc:	bl	29388 <flatcc_builder_start_buffer@@Base+0xbc>
   2a000:	mov	r1, r0
   2a004:	mvn	r0, #0
   2a008:	cmp	r1, #0
   2a00c:	popne	{r4, r5, fp, pc}
   2a010:	ldr	r0, [r4, #32]
   2a014:	mov	r2, #5
   2a018:	str	r5, [r0, #16]
   2a01c:	mov	r0, #0
   2a020:	ldr	r1, [r4, #32]
   2a024:	str	r0, [r1, #20]
   2a028:	ldr	r1, [r4, #32]
   2a02c:	strh	r2, [r1, #14]
   2a030:	ldr	r2, [r4, #28]
   2a034:	ldr	r3, [r4, #60]	; 0x3c
   2a038:	ldr	r5, [r4, #64]	; 0x40
   2a03c:	add	r3, r3, r2
   2a040:	sub	r2, r5, r2
   2a044:	str	r3, [r4, #16]
   2a048:	mvn	r3, #3
   2a04c:	cmn	r2, #4
   2a050:	movcs	r2, r3
   2a054:	str	r2, [r4, #24]
   2a058:	str	r3, [r1, #4]
   2a05c:	pop	{r4, r5, fp, pc}

0002a060 <flatcc_builder_create_offset_vector@@Base>:
   2a060:	push	{r4, r5, r6, sl, fp, lr}
   2a064:	add	fp, sp, #16
   2a068:	mov	r6, r2
   2a06c:	mov	r5, r1
   2a070:	mov	r4, r0
   2a074:	bl	29fe8 <flatcc_builder_start_offset_vector@@Base>
   2a078:	cmp	r0, #0
   2a07c:	beq	2a088 <flatcc_builder_create_offset_vector@@Base+0x28>
   2a080:	mov	r0, #0
   2a084:	pop	{r4, r5, r6, sl, fp, pc}
   2a088:	mov	r0, r4
   2a08c:	mov	r1, r6
   2a090:	bl	299bc <flatcc_builder_extend_offset_vector@@Base>
   2a094:	cmp	r0, #0
   2a098:	beq	2a080 <flatcc_builder_create_offset_vector@@Base+0x20>
   2a09c:	lsl	r2, r6, #2
   2a0a0:	mov	r1, r5
   2a0a4:	bl	12ab0 <memcpy@plt>
   2a0a8:	mov	r0, r4
   2a0ac:	pop	{r4, r5, r6, sl, fp, lr}
   2a0b0:	b	2a0b4 <flatcc_builder_end_offset_vector@@Base>

0002a0b4 <flatcc_builder_end_offset_vector@@Base>:
   2a0b4:	push	{r4, r5, fp, lr}
   2a0b8:	add	fp, sp, #8
   2a0bc:	mov	r4, r0
   2a0c0:	ldr	r0, [r0, #32]
   2a0c4:	ldrh	r1, [r0, #14]
   2a0c8:	cmp	r1, #5
   2a0cc:	bne	2a16c <flatcc_builder_end_offset_vector@@Base+0xb8>
   2a0d0:	ldr	r2, [r0, #20]
   2a0d4:	ldr	r1, [r4, #16]
   2a0d8:	mov	r0, r4
   2a0dc:	mov	r3, #0
   2a0e0:	bl	2b094 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2a0e4:	mov	r5, r0
   2a0e8:	cmp	r0, #0
   2a0ec:	beq	2a164 <flatcc_builder_end_offset_vector@@Base+0xb0>
   2a0f0:	ldr	r0, [r4, #16]
   2a0f4:	ldr	r2, [r4, #20]
   2a0f8:	mov	r1, #0
   2a0fc:	bl	12b64 <memset@plt>
   2a100:	ldr	r0, [r4, #32]
   2a104:	ldr	r1, [r4, #60]	; 0x3c
   2a108:	ldr	ip, [r4, #64]	; 0x40
   2a10c:	ldr	r3, [r0, #8]
   2a110:	str	r3, [r4, #20]
   2a114:	ldr	r3, [r0]
   2a118:	str	r3, [r4, #28]
   2a11c:	add	r1, r1, r3
   2a120:	ldr	r2, [r0, #4]
   2a124:	str	r1, [r4, #16]
   2a128:	sub	r1, ip, r3
   2a12c:	cmp	r1, r2
   2a130:	movhi	r1, r2
   2a134:	str	r1, [r4, #24]
   2a138:	ldrh	r1, [r4, #130]	; 0x82
   2a13c:	ldrh	r2, [r4, #128]	; 0x80
   2a140:	cmp	r2, r1
   2a144:	strhcc	r1, [r4, #128]	; 0x80
   2a148:	ldrh	r1, [r0, #12]
   2a14c:	sub	r0, r0, #36	; 0x24
   2a150:	str	r0, [r4, #32]
   2a154:	strh	r1, [r4, #130]	; 0x82
   2a158:	ldr	r0, [r4, #156]	; 0x9c
   2a15c:	sub	r0, r0, #1
   2a160:	str	r0, [r4, #156]	; 0x9c
   2a164:	mov	r0, r5
   2a168:	pop	{r4, r5, fp, pc}
   2a16c:	movw	r0, #5898	; 0x170a
   2a170:	movw	r1, #4846	; 0x12ee
   2a174:	movw	r3, #7481	; 0x1d39
   2a178:	movw	r2, #1480	; 0x5c8
   2a17c:	movt	r0, #3
   2a180:	movt	r1, #3
   2a184:	movt	r3, #3
   2a188:	bl	12bc4 <__assert_fail@plt>

0002a18c <flatcc_builder_start_string@@Base>:
   2a18c:	push	{r4, r5, fp, lr}
   2a190:	add	fp, sp, #8
   2a194:	mov	r1, #1
   2a198:	mov	r4, r0
   2a19c:	mov	r5, #1
   2a1a0:	bl	29388 <flatcc_builder_start_buffer@@Base+0xbc>
   2a1a4:	mov	r1, r0
   2a1a8:	mvn	r0, #0
   2a1ac:	cmp	r1, #0
   2a1b0:	popne	{r4, r5, fp, pc}
   2a1b4:	ldr	r0, [r4, #32]
   2a1b8:	mov	r2, #6
   2a1bc:	str	r5, [r0, #16]
   2a1c0:	mov	r0, #0
   2a1c4:	ldr	r1, [r4, #32]
   2a1c8:	str	r0, [r1, #20]
   2a1cc:	ldr	r1, [r4, #32]
   2a1d0:	strh	r2, [r1, #14]
   2a1d4:	ldr	r2, [r4, #28]
   2a1d8:	ldr	r3, [r4, #60]	; 0x3c
   2a1dc:	ldr	r5, [r4, #64]	; 0x40
   2a1e0:	add	r3, r3, r2
   2a1e4:	sub	r2, r5, r2
   2a1e8:	str	r3, [r4, #16]
   2a1ec:	mvn	r3, #3
   2a1f0:	cmn	r2, #4
   2a1f4:	movcs	r2, r3
   2a1f8:	str	r2, [r4, #24]
   2a1fc:	str	r3, [r1, #4]
   2a200:	pop	{r4, r5, fp, pc}

0002a204 <flatcc_builder_reserve_table@@Base>:
   2a204:	push	{r4, r5, r6, sl, fp, lr}
   2a208:	add	fp, sp, #16
   2a20c:	sub	sp, sp, #8
   2a210:	cmn	r1, #1
   2a214:	ble	2a2e8 <flatcc_builder_reserve_table@@Base+0xe4>
   2a218:	mov	r4, r0
   2a21c:	ldr	r0, [r0, #32]
   2a220:	mov	r5, r1
   2a224:	ldr	r1, [r4, #56]	; 0x38
   2a228:	ldrh	r2, [r0, #28]
   2a22c:	ldr	r0, [r0, #16]
   2a230:	add	r6, r0, r2, lsl #1
   2a234:	add	r0, r6, r5, lsl #1
   2a238:	add	r2, r0, #4
   2a23c:	cmp	r2, r1
   2a240:	bls	2a268 <flatcc_builder_reserve_table@@Base+0x64>
   2a244:	ldr	r0, [r4, #40]	; 0x28
   2a248:	ldr	ip, [r4, #48]	; 0x30
   2a24c:	mov	r3, #0
   2a250:	add	r1, r4, #52	; 0x34
   2a254:	str	r3, [sp]
   2a258:	mov	r3, #1
   2a25c:	blx	ip
   2a260:	cmp	r0, #0
   2a264:	bne	2a308 <flatcc_builder_reserve_table@@Base+0x104>
   2a268:	ldr	r0, [r4, #52]	; 0x34
   2a26c:	adds	r0, r0, r6
   2a270:	str	r0, [r4, #4]
   2a274:	beq	2a2dc <flatcc_builder_reserve_table@@Base+0xd8>
   2a278:	add	r0, r0, #4
   2a27c:	lsl	r1, r5, #1
   2a280:	str	r0, [r4, #4]
   2a284:	ldr	r0, [r4, #32]
   2a288:	ldr	r3, [r4, #80]	; 0x50
   2a28c:	ldr	r5, [r0, #20]
   2a290:	orr	r0, r1, #1
   2a294:	add	r2, r5, r0
   2a298:	cmp	r2, r3
   2a29c:	bls	2a2c4 <flatcc_builder_reserve_table@@Base+0xc0>
   2a2a0:	ldr	r0, [r4, #40]	; 0x28
   2a2a4:	ldr	r6, [r4, #48]	; 0x30
   2a2a8:	mov	r3, #3
   2a2ac:	add	r1, r4, #76	; 0x4c
   2a2b0:	str	r3, [sp]
   2a2b4:	mov	r3, #0
   2a2b8:	blx	r6
   2a2bc:	cmp	r0, #0
   2a2c0:	bne	2a308 <flatcc_builder_reserve_table@@Base+0x104>
   2a2c4:	ldr	r0, [r4, #76]	; 0x4c
   2a2c8:	adds	r0, r0, r5
   2a2cc:	str	r0, [r4]
   2a2d0:	mov	r0, #0
   2a2d4:	mvneq	r0, #0
   2a2d8:	b	2a2e0 <flatcc_builder_reserve_table@@Base+0xdc>
   2a2dc:	mvn	r0, #0
   2a2e0:	sub	sp, fp, #16
   2a2e4:	pop	{r4, r5, r6, sl, fp, pc}
   2a2e8:	movw	r0, #6737	; 0x1a51
   2a2ec:	movw	r1, #4846	; 0x12ee
   2a2f0:	movw	r3, #6672	; 0x1a10
   2a2f4:	movw	r2, #1065	; 0x429
   2a2f8:	movt	r0, #3
   2a2fc:	movt	r1, #3
   2a300:	movt	r3, #3
   2a304:	bl	12bc4 <__assert_fail@plt>
   2a308:	movw	r0, #9364	; 0x2494
   2a30c:	movw	r1, #4846	; 0x12ee
   2a310:	movw	r3, #8910	; 0x22ce
   2a314:	mov	r2, #308	; 0x134
   2a318:	movt	r0, #3
   2a31c:	movt	r1, #3
   2a320:	movt	r3, #3
   2a324:	bl	12bc4 <__assert_fail@plt>

0002a328 <flatcc_builder_start_table@@Base>:
   2a328:	push	{r4, r5, r6, r7, fp, lr}
   2a32c:	add	fp, sp, #16
   2a330:	sub	sp, sp, #8
   2a334:	mov	r6, r1
   2a338:	mov	r1, #4
   2a33c:	mov	r4, r0
   2a340:	bl	29388 <flatcc_builder_start_buffer@@Base+0xbc>
   2a344:	mvn	r5, #0
   2a348:	cmp	r0, #0
   2a34c:	beq	2a35c <flatcc_builder_start_table@@Base+0x34>
   2a350:	mov	r0, r5
   2a354:	sub	sp, fp, #16
   2a358:	pop	{r4, r5, r6, r7, fp, pc}
   2a35c:	mov	r1, r4
   2a360:	ldr	r2, [r4, #4]
   2a364:	ldr	r3, [r4, #32]
   2a368:	ldr	r0, [r1, #52]!	; 0x34
   2a36c:	sub	r0, r2, r0
   2a370:	str	r0, [r3, #16]
   2a374:	ldr	r0, [r4]
   2a378:	ldr	r3, [r4, #76]	; 0x4c
   2a37c:	ldr	r2, [r4, #32]
   2a380:	sub	r0, r0, r3
   2a384:	mov	r3, #0
   2a388:	str	r0, [r2, #20]
   2a38c:	ldr	r0, [r4, #12]
   2a390:	ldr	r2, [r4, #32]
   2a394:	str	r0, [r2, #24]
   2a398:	ldr	r0, [r4, #32]
   2a39c:	ldrh	r2, [r4, #8]
   2a3a0:	strh	r2, [r0, #28]
   2a3a4:	movw	r0, #15186	; 0x3b52
   2a3a8:	strh	r3, [r4, #8]
   2a3ac:	mov	r2, #3
   2a3b0:	movt	r0, #12137	; 0x2f69
   2a3b4:	str	r0, [r4, #12]
   2a3b8:	ldr	r0, [r4, #32]
   2a3bc:	strh	r2, [r0, #14]
   2a3c0:	ldrh	r2, [r0, #28]
   2a3c4:	ldr	r0, [r0, #16]
   2a3c8:	add	r7, r0, r2, lsl #1
   2a3cc:	add	r0, r7, r6, lsl #1
   2a3d0:	add	r2, r0, #4
   2a3d4:	ldr	r0, [r4, #56]	; 0x38
   2a3d8:	cmp	r2, r0
   2a3dc:	bls	2a3fc <flatcc_builder_start_table@@Base+0xd4>
   2a3e0:	ldr	r0, [r4, #40]	; 0x28
   2a3e4:	ldr	ip, [r4, #48]	; 0x30
   2a3e8:	str	r3, [sp]
   2a3ec:	mov	r3, #1
   2a3f0:	blx	ip
   2a3f4:	cmp	r0, #0
   2a3f8:	bne	2a4a0 <flatcc_builder_start_table@@Base+0x178>
   2a3fc:	ldr	r0, [r4, #52]	; 0x34
   2a400:	adds	r0, r0, r7
   2a404:	str	r0, [r4, #4]
   2a408:	beq	2a350 <flatcc_builder_start_table@@Base+0x28>
   2a40c:	add	r0, r0, #4
   2a410:	lsl	r1, r6, #1
   2a414:	str	r0, [r4, #4]
   2a418:	ldr	r0, [r4, #32]
   2a41c:	ldr	r3, [r4, #80]	; 0x50
   2a420:	ldr	r6, [r0, #20]
   2a424:	orr	r0, r1, #1
   2a428:	add	r2, r6, r0
   2a42c:	cmp	r2, r3
   2a430:	bls	2a458 <flatcc_builder_start_table@@Base+0x130>
   2a434:	ldr	r0, [r4, #40]	; 0x28
   2a438:	ldr	r7, [r4, #48]	; 0x30
   2a43c:	mov	r3, #3
   2a440:	add	r1, r4, #76	; 0x4c
   2a444:	str	r3, [sp]
   2a448:	mov	r3, #0
   2a44c:	blx	r7
   2a450:	cmp	r0, #0
   2a454:	bne	2a4a0 <flatcc_builder_start_table@@Base+0x178>
   2a458:	ldr	r0, [r4, #76]	; 0x4c
   2a45c:	adds	r0, r0, r6
   2a460:	str	r0, [r4]
   2a464:	beq	2a350 <flatcc_builder_start_table@@Base+0x28>
   2a468:	ldr	r0, [r4, #28]
   2a46c:	ldr	r2, [r4, #60]	; 0x3c
   2a470:	ldr	r3, [r4, #64]	; 0x40
   2a474:	ldr	r1, [r4, #32]
   2a478:	mov	r5, #0
   2a47c:	add	r2, r2, r0
   2a480:	sub	r0, r3, r0
   2a484:	str	r2, [r4, #16]
   2a488:	movw	r2, #65532	; 0xfffc
   2a48c:	cmp	r0, r2
   2a490:	movcs	r0, r2
   2a494:	str	r0, [r4, #24]
   2a498:	str	r2, [r1, #4]
   2a49c:	b	2a350 <flatcc_builder_start_table@@Base+0x28>
   2a4a0:	movw	r0, #9364	; 0x2494
   2a4a4:	movw	r1, #4846	; 0x12ee
   2a4a8:	movw	r3, #8910	; 0x22ce
   2a4ac:	mov	r2, #308	; 0x134
   2a4b0:	movt	r0, #3
   2a4b4:	movt	r1, #3
   2a4b8:	movt	r3, #3
   2a4bc:	bl	12bc4 <__assert_fail@plt>

0002a4c0 <flatcc_builder_create_vtable@@Base>:
   2a4c0:	push	{r4, r5, fp, lr}
   2a4c4:	add	fp, sp, #8
   2a4c8:	sub	sp, sp, #80	; 0x50
   2a4cc:	mov	r3, r2
   2a4d0:	mov	r2, #0
   2a4d4:	mov	r4, r0
   2a4d8:	cmp	r3, #0
   2a4dc:	str	r2, [sp, #12]
   2a4e0:	str	r2, [sp, #8]
   2a4e4:	movne	r2, #1
   2a4e8:	strne	r3, [sp, #20]
   2a4ec:	strne	r1, [sp, #16]
   2a4f0:	strne	r3, [sp, #8]
   2a4f4:	strne	r2, [sp, #12]
   2a4f8:	ldr	r0, [r4, #152]	; 0x98
   2a4fc:	cmp	r0, #0
   2a500:	bne	2a510 <flatcc_builder_create_vtable@@Base+0x50>
   2a504:	ldr	r0, [r4, #180]	; 0xb4
   2a508:	cmp	r0, #0
   2a50c:	beq	2a564 <flatcc_builder_create_vtable@@Base+0xa4>
   2a510:	cmp	r3, #0
   2a514:	beq	2a5a8 <flatcc_builder_create_vtable@@Base+0xe8>
   2a518:	ldr	r0, [r4, #136]	; 0x88
   2a51c:	ldr	ip, [r4, #44]	; 0x2c
   2a520:	add	r1, sp, #8
   2a524:	add	r1, r1, #8
   2a528:	sub	r5, r0, r3
   2a52c:	ldr	r0, [r4, #36]	; 0x24
   2a530:	str	r3, [sp]
   2a534:	mov	r3, r5
   2a538:	blx	ip
   2a53c:	cmp	r0, #0
   2a540:	bne	2a5bc <flatcc_builder_create_vtable@@Base+0xfc>
   2a544:	cmp	r5, #0
   2a548:	str	r5, [r4, #136]	; 0x88
   2a54c:	beq	2a55c <flatcc_builder_create_vtable@@Base+0x9c>
   2a550:	add	r1, r5, #1
   2a554:	mov	r0, r1
   2a558:	b	2a5a0 <flatcc_builder_create_vtable@@Base+0xe0>
   2a55c:	mov	r0, #0
   2a560:	b	2a5a0 <flatcc_builder_create_vtable@@Base+0xe0>
   2a564:	ldr	r5, [r4, #140]	; 0x8c
   2a568:	ldr	r0, [r4, #36]	; 0x24
   2a56c:	ldr	ip, [r4, #44]	; 0x2c
   2a570:	add	r1, r5, r3
   2a574:	str	r1, [r4, #140]	; 0x8c
   2a578:	add	r1, sp, #8
   2a57c:	str	r3, [sp]
   2a580:	mov	r3, r5
   2a584:	add	r1, r1, #8
   2a588:	blx	ip
   2a58c:	cmp	r0, #0
   2a590:	bne	2a5dc <flatcc_builder_create_vtable@@Base+0x11c>
   2a594:	adds	r1, r5, #1
   2a598:	mov	r0, #0
   2a59c:	movcc	r0, r1
   2a5a0:	sub	sp, fp, #8
   2a5a4:	pop	{r4, r5, fp, pc}
   2a5a8:	movw	r0, #9364	; 0x2494
   2a5ac:	movw	r1, #4846	; 0x12ee
   2a5b0:	movw	r3, #9043	; 0x2353
   2a5b4:	movw	r2, #647	; 0x287
   2a5b8:	b	2a5cc <flatcc_builder_create_vtable@@Base+0x10c>
   2a5bc:	movw	r0, #9364	; 0x2494
   2a5c0:	movw	r1, #4846	; 0x12ee
   2a5c4:	movw	r3, #9043	; 0x2353
   2a5c8:	movw	r2, #651	; 0x28b
   2a5cc:	movt	r0, #3
   2a5d0:	movt	r1, #3
   2a5d4:	movt	r3, #3
   2a5d8:	bl	12bc4 <__assert_fail@plt>
   2a5dc:	movw	r0, #9364	; 0x2494
   2a5e0:	movw	r1, #4846	; 0x12ee
   2a5e4:	movw	r3, #9231	; 0x240f
   2a5e8:	movw	r2, #677	; 0x2a5
   2a5ec:	movt	r0, #3
   2a5f0:	movt	r1, #3
   2a5f4:	movt	r3, #3
   2a5f8:	bl	12bc4 <__assert_fail@plt>

0002a5fc <flatcc_builder_create_cached_vtable@@Base>:
   2a5fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a600:	add	fp, sp, #28
   2a604:	sub	sp, sp, #20
   2a608:	mov	sl, r0
   2a60c:	ldr	r0, [r0, #116]	; 0x74
   2a610:	mov	r8, r3
   2a614:	mov	r5, r2
   2a618:	str	r1, [sp, #16]
   2a61c:	cmp	r0, #0
   2a620:	beq	2a6c4 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   2a624:	ldr	r1, [sl, #92]	; 0x5c
   2a628:	rsb	r0, r0, #32
   2a62c:	lsr	r0, r8, r0
   2a630:	add	r6, r1, r0, lsl #2
   2a634:	cmp	r6, #0
   2a638:	beq	2a788 <flatcc_builder_create_cached_vtable@@Base+0x18c>
   2a63c:	ldr	r7, [r6]
   2a640:	str	r6, [sp, #12]
   2a644:	cmp	r7, #0
   2a648:	beq	2a790 <flatcc_builder_create_cached_vtable@@Base+0x194>
   2a64c:	ldr	r4, [sl, #68]	; 0x44
   2a650:	ldr	r8, [sl, #100]	; 0x64
   2a654:	mov	r0, #0
   2a658:	str	r0, [sp, #8]
   2a65c:	add	r9, r8, r7
   2a660:	mov	r1, r4
   2a664:	ldr	r0, [r9, #8]
   2a668:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   2a66c:	cmp	r0, r5
   2a670:	bne	2a688 <flatcc_builder_create_cached_vtable@@Base+0x8c>
   2a674:	ldr	r0, [sp, #16]
   2a678:	mov	r2, r5
   2a67c:	bl	12b34 <bcmp@plt>
   2a680:	cmp	r0, #0
   2a684:	beq	2a69c <flatcc_builder_create_cached_vtable@@Base+0xa0>
   2a688:	ldr	r7, [r9, #12]!
   2a68c:	mov	r6, r9
   2a690:	cmp	r7, #0
   2a694:	bne	2a65c <flatcc_builder_create_cached_vtable@@Base+0x60>
   2a698:	b	2a780 <flatcc_builder_create_cached_vtable@@Base+0x184>
   2a69c:	ldr	r0, [sl, #152]	; 0x98
   2a6a0:	ldr	r1, [r9, #4]
   2a6a4:	cmp	r1, r0
   2a6a8:	beq	2a8f4 <flatcc_builder_create_cached_vtable@@Base+0x2f8>
   2a6ac:	mov	r6, r9
   2a6b0:	mov	r0, r9
   2a6b4:	ldr	r7, [r6, #12]!
   2a6b8:	cmp	r7, #0
   2a6bc:	bne	2a658 <flatcc_builder_create_cached_vtable@@Base+0x5c>
   2a6c0:	b	2a794 <flatcc_builder_create_cached_vtable@@Base+0x198>
   2a6c4:	ldr	r0, [sl, #124]	; 0x7c
   2a6c8:	cmp	r0, #0
   2a6cc:	bne	2a940 <flatcc_builder_create_cached_vtable@@Base+0x344>
   2a6d0:	ldr	r0, [sl, #104]	; 0x68
   2a6d4:	add	r7, sl, #100	; 0x64
   2a6d8:	cmp	r0, #15
   2a6dc:	bhi	2a708 <flatcc_builder_create_cached_vtable@@Base+0x10c>
   2a6e0:	ldr	r0, [sl, #40]	; 0x28
   2a6e4:	ldr	r6, [sl, #48]	; 0x30
   2a6e8:	mov	r1, #6
   2a6ec:	mov	r2, #16
   2a6f0:	mov	r3, #0
   2a6f4:	str	r1, [sp]
   2a6f8:	mov	r1, r7
   2a6fc:	blx	r6
   2a700:	cmp	r0, #0
   2a704:	bne	2a920 <flatcc_builder_create_cached_vtable@@Base+0x324>
   2a708:	ldr	r0, [r7]
   2a70c:	mov	r7, #0
   2a710:	cmp	r0, #0
   2a714:	beq	2a834 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2a718:	mov	r0, #16
   2a71c:	mov	r2, #5
   2a720:	add	r1, sl, #92	; 0x5c
   2a724:	mov	r3, #1
   2a728:	mov	r4, #256	; 0x100
   2a72c:	str	r0, [sl, #124]	; 0x7c
   2a730:	ldr	r0, [sl, #40]	; 0x28
   2a734:	ldr	r6, [sl, #48]	; 0x30
   2a738:	str	r2, [sp]
   2a73c:	mov	r2, #256	; 0x100
   2a740:	blx	r6
   2a744:	cmp	r0, #0
   2a748:	bne	2a834 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2a74c:	ldr	r0, [sl, #96]	; 0x60
   2a750:	mov	r1, r4
   2a754:	lsl	r4, r4, #1
   2a758:	cmp	r0, r1, lsl #1
   2a75c:	bcs	2a750 <flatcc_builder_create_cached_vtable@@Base+0x154>
   2a760:	lsr	r1, r1, #2
   2a764:	mvn	r0, #0
   2a768:	mov	r2, #1
   2a76c:	add	r0, r0, #1
   2a770:	cmp	r1, r2, lsl r0
   2a774:	bhi	2a76c <flatcc_builder_create_cached_vtable@@Base+0x170>
   2a778:	str	r0, [sl, #116]	; 0x74
   2a77c:	b	2a624 <flatcc_builder_create_cached_vtable@@Base+0x28>
   2a780:	ldr	r9, [sp, #8]
   2a784:	b	2a794 <flatcc_builder_create_cached_vtable@@Base+0x198>
   2a788:	mov	r7, #0
   2a78c:	b	2a834 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2a790:	mov	r9, #0
   2a794:	ldr	r4, [sl, #124]	; 0x7c
   2a798:	ldr	r0, [sl, #104]	; 0x68
   2a79c:	add	r7, sl, #100	; 0x64
   2a7a0:	add	r2, r4, #16
   2a7a4:	cmp	r2, r0
   2a7a8:	bls	2a7d0 <flatcc_builder_create_cached_vtable@@Base+0x1d4>
   2a7ac:	ldr	r0, [sl, #40]	; 0x28
   2a7b0:	ldr	r6, [sl, #48]	; 0x30
   2a7b4:	mov	r1, #6
   2a7b8:	mov	r3, #0
   2a7bc:	str	r1, [sp]
   2a7c0:	mov	r1, r7
   2a7c4:	blx	r6
   2a7c8:	cmp	r0, #0
   2a7cc:	bne	2a920 <flatcc_builder_create_cached_vtable@@Base+0x324>
   2a7d0:	ldr	r0, [r7]
   2a7d4:	mov	r7, #0
   2a7d8:	adds	r4, r0, r4
   2a7dc:	beq	2a834 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2a7e0:	ldr	r0, [sl, #124]	; 0x7c
   2a7e4:	ldr	r1, [sl, #152]	; 0x98
   2a7e8:	add	r2, r0, #16
   2a7ec:	str	r2, [sl, #124]	; 0x7c
   2a7f0:	ldr	r2, [sp, #12]
   2a7f4:	str	r1, [r4, #4]
   2a7f8:	ldr	r1, [r2]
   2a7fc:	str	r1, [r4, #12]
   2a800:	ldr	r1, [sp, #16]
   2a804:	str	r0, [r2]
   2a808:	mov	r0, sl
   2a80c:	mov	r2, r5
   2a810:	bl	2a4c0 <flatcc_builder_create_vtable@@Base>
   2a814:	cmp	r0, #0
   2a818:	str	r0, [r4]
   2a81c:	beq	2a834 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2a820:	cmp	r9, #0
   2a824:	beq	2a840 <flatcc_builder_create_cached_vtable@@Base+0x244>
   2a828:	ldr	r0, [r9, #8]
   2a82c:	str	r0, [r4, #8]
   2a830:	ldr	r7, [r4]
   2a834:	mov	r0, r7
   2a838:	sub	sp, fp, #28
   2a83c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a840:	ldr	r6, [sl, #120]	; 0x78
   2a844:	ldr	r0, [sl, #172]	; 0xac
   2a848:	add	r2, r6, r5
   2a84c:	cmp	r0, #0
   2a850:	beq	2a88c <flatcc_builder_create_cached_vtable@@Base+0x290>
   2a854:	cmp	r0, r2
   2a858:	bcs	2a88c <flatcc_builder_create_cached_vtable@@Base+0x290>
   2a85c:	ldr	r0, [sl, #116]	; 0x74
   2a860:	cmp	r0, #0
   2a864:	beq	2a830 <flatcc_builder_create_cached_vtable@@Base+0x234>
   2a868:	ldr	r0, [sl, #92]	; 0x5c
   2a86c:	ldr	r2, [sl, #96]	; 0x60
   2a870:	mov	r1, #0
   2a874:	mov	r5, #0
   2a878:	bl	12b64 <memset@plt>
   2a87c:	mov	r0, #16
   2a880:	str	r5, [sl, #120]	; 0x78
   2a884:	str	r0, [sl, #124]	; 0x7c
   2a888:	b	2a830 <flatcc_builder_create_cached_vtable@@Base+0x234>
   2a88c:	ldr	r0, [sl, #72]	; 0x48
   2a890:	add	r7, sl, #68	; 0x44
   2a894:	cmp	r2, r0
   2a898:	bls	2a8c0 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
   2a89c:	ldr	r0, [sl, #40]	; 0x28
   2a8a0:	ldr	ip, [sl, #48]	; 0x30
   2a8a4:	mov	r1, #2
   2a8a8:	mov	r3, #0
   2a8ac:	str	r1, [sp]
   2a8b0:	mov	r1, r7
   2a8b4:	blx	ip
   2a8b8:	cmp	r0, #0
   2a8bc:	bne	2a920 <flatcc_builder_create_cached_vtable@@Base+0x324>
   2a8c0:	ldr	r0, [r7]
   2a8c4:	adds	r0, r0, r6
   2a8c8:	beq	2a8ec <flatcc_builder_create_cached_vtable@@Base+0x2f0>
   2a8cc:	ldr	r1, [sl, #120]	; 0x78
   2a8d0:	mov	r2, r5
   2a8d4:	str	r1, [r4, #8]
   2a8d8:	add	r1, r1, r5
   2a8dc:	str	r1, [sl, #120]	; 0x78
   2a8e0:	ldr	r1, [sp, #16]
   2a8e4:	bl	12ab0 <memcpy@plt>
   2a8e8:	b	2a830 <flatcc_builder_create_cached_vtable@@Base+0x234>
   2a8ec:	mvn	r7, #0
   2a8f0:	b	2a834 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2a8f4:	ldr	r0, [sp, #12]
   2a8f8:	cmp	r6, r0
   2a8fc:	beq	2a918 <flatcc_builder_create_cached_vtable@@Base+0x31c>
   2a900:	mov	r1, r0
   2a904:	ldr	r0, [r9, #12]
   2a908:	str	r0, [r6]
   2a90c:	ldr	r0, [r1]
   2a910:	str	r0, [r9, #12]
   2a914:	str	r7, [r1]
   2a918:	ldr	r7, [r9]
   2a91c:	b	2a834 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2a920:	movw	r0, #9364	; 0x2494
   2a924:	movw	r1, #4846	; 0x12ee
   2a928:	movw	r3, #8910	; 0x22ce
   2a92c:	mov	r2, #308	; 0x134
   2a930:	movt	r0, #3
   2a934:	movt	r1, #3
   2a938:	movt	r3, #3
   2a93c:	bl	12bc4 <__assert_fail@plt>
   2a940:	movw	r0, #9304	; 0x2458
   2a944:	movw	r1, #4846	; 0x12ee
   2a948:	movw	r3, #9319	; 0x2467
   2a94c:	movw	r2, #342	; 0x156
   2a950:	movt	r0, #3
   2a954:	movt	r1, #3
   2a958:	movt	r3, #3
   2a95c:	bl	12bc4 <__assert_fail@plt>

0002a960 <flatcc_builder_create_table@@Base>:
   2a960:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2a964:	add	fp, sp, #24
   2a968:	sub	sp, sp, #80	; 0x50
   2a96c:	ldr	r5, [fp, #12]
   2a970:	cmn	r5, #1
   2a974:	ble	2aac0 <flatcc_builder_create_table@@Base+0x160>
   2a978:	ldr	ip, [fp, #16]
   2a97c:	tst	ip, #1
   2a980:	beq	2aad8 <flatcc_builder_create_table@@Base+0x178>
   2a984:	mov	r8, r0
   2a988:	ldrh	r0, [r0, #128]	; 0x80
   2a98c:	cmp	r3, #4
   2a990:	movls	r3, #4
   2a994:	cmp	r0, r3
   2a998:	strhcc	r3, [r8, #128]	; 0x80
   2a99c:	cmp	r5, #1
   2a9a0:	ldr	r0, [r8, #136]	; 0x88
   2a9a4:	sub	r4, r0, r2
   2a9a8:	sub	r0, r3, #1
   2a9ac:	and	r0, r4, r0
   2a9b0:	sub	r4, r4, #4
   2a9b4:	add	r3, ip, r0
   2a9b8:	sub	r3, r4, r3
   2a9bc:	add	r3, r3, #1
   2a9c0:	str	r3, [fp, #-28]	; 0xffffffe4
   2a9c4:	blt	2a9f4 <flatcc_builder_create_table@@Base+0x94>
   2a9c8:	ldr	r3, [fp, #8]
   2a9cc:	sub	ip, r4, r0
   2a9d0:	mvn	r4, #3
   2a9d4:	sub	r4, r4, ip
   2a9d8:	ldrh	r6, [r3], #2
   2a9dc:	subs	r5, r5, #1
   2a9e0:	ldr	r7, [r6, r1]
   2a9e4:	add	r7, r4, r7
   2a9e8:	sub	r7, r7, r6
   2a9ec:	str	r7, [r6, r1]
   2a9f0:	bne	2a9d8 <flatcc_builder_create_table@@Base+0x78>
   2a9f4:	mov	r4, #4
   2a9f8:	sub	r3, fp, #28
   2a9fc:	cmp	r2, #0
   2aa00:	str	r4, [sp, #16]
   2aa04:	str	r3, [sp, #12]
   2aa08:	mov	r3, #1
   2aa0c:	str	r4, [sp, #4]
   2aa10:	addne	r4, r2, #4
   2aa14:	str	r3, [sp, #8]
   2aa18:	movne	r3, #2
   2aa1c:	strne	r2, [sp, #24]
   2aa20:	strne	r1, [sp, #20]
   2aa24:	strne	r3, [sp, #8]
   2aa28:	strne	r4, [sp, #4]
   2aa2c:	cmp	r0, #0
   2aa30:	beq	2aa5c <flatcc_builder_create_table@@Base+0xfc>
   2aa34:	add	r1, sp, #4
   2aa38:	movw	r2, #4316	; 0x10dc
   2aa3c:	add	r4, r4, r0
   2aa40:	add	r1, r1, r3, lsl #3
   2aa44:	movt	r2, #3
   2aa48:	add	r3, r3, #1
   2aa4c:	str	r4, [sp, #4]
   2aa50:	str	r2, [r1, #8]
   2aa54:	str	r0, [r1, #12]
   2aa58:	str	r3, [sp, #8]
   2aa5c:	cmp	r4, #0
   2aa60:	ble	2aaf8 <flatcc_builder_create_table@@Base+0x198>
   2aa64:	ldr	r0, [r8, #136]	; 0x88
   2aa68:	ldr	r7, [r8, #44]	; 0x2c
   2aa6c:	add	r1, sp, #4
   2aa70:	mov	r2, r3
   2aa74:	add	r1, r1, #8
   2aa78:	sub	r5, r0, r4
   2aa7c:	ldr	r0, [r8, #36]	; 0x24
   2aa80:	str	r4, [sp]
   2aa84:	mov	r3, r5
   2aa88:	blx	r7
   2aa8c:	cmp	r0, #0
   2aa90:	streq	r5, [r8, #136]	; 0x88
   2aa94:	moveq	r0, r5
   2aa98:	subeq	sp, fp, #24
   2aa9c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2aaa0:	movw	r0, #9364	; 0x2494
   2aaa4:	movw	r1, #4846	; 0x12ee
   2aaa8:	movw	r3, #9043	; 0x2353
   2aaac:	movw	r2, #651	; 0x28b
   2aab0:	movt	r0, #3
   2aab4:	movt	r1, #3
   2aab8:	movt	r3, #3
   2aabc:	bl	12bc4 <__assert_fail@plt>
   2aac0:	movw	r0, #6730	; 0x1a4a
   2aac4:	movw	r1, #4846	; 0x12ee
   2aac8:	movw	r3, #6748	; 0x1a5c
   2aacc:	movw	r2, #1237	; 0x4d5
   2aad0:	movt	r0, #3
   2aad4:	b	2aaec <flatcc_builder_create_table@@Base+0x18c>
   2aad8:	movw	r0, #6904	; 0x1af8
   2aadc:	movw	r1, #4846	; 0x12ee
   2aae0:	movw	r3, #6748	; 0x1a5c
   2aae4:	movw	r2, #1243	; 0x4db
   2aae8:	movt	r0, #3
   2aaec:	movt	r1, #3
   2aaf0:	movt	r3, #3
   2aaf4:	bl	12bc4 <__assert_fail@plt>
   2aaf8:	movw	r0, #9364	; 0x2494
   2aafc:	movw	r1, #4846	; 0x12ee
   2ab00:	movw	r3, #9043	; 0x2353
   2ab04:	movw	r2, #647	; 0x287
   2ab08:	b	2aab0 <flatcc_builder_create_table@@Base+0x150>

0002ab0c <flatcc_builder_check_required_field@@Base>:
   2ab0c:	push	{fp, lr}
   2ab10:	mov	fp, sp
   2ab14:	ldr	r2, [r0, #32]
   2ab18:	ldrh	r2, [r2, #14]
   2ab1c:	cmp	r2, #3
   2ab20:	bne	2ab50 <flatcc_builder_check_required_field@@Base+0x44>
   2ab24:	ldrh	r3, [r0, #8]
   2ab28:	mov	r2, #0
   2ab2c:	cmp	r3, r1
   2ab30:	bls	2ab48 <flatcc_builder_check_required_field@@Base+0x3c>
   2ab34:	ldr	r0, [r0, #4]
   2ab38:	add	r0, r0, r1, lsl #1
   2ab3c:	ldrh	r2, [r0]
   2ab40:	cmp	r2, #0
   2ab44:	movwne	r2, #1
   2ab48:	mov	r0, r2
   2ab4c:	pop	{fp, pc}
   2ab50:	movw	r0, #6915	; 0x1b03
   2ab54:	movw	r1, #4846	; 0x12ee
   2ab58:	movw	r3, #6958	; 0x1b2e
   2ab5c:	movw	r2, #1272	; 0x4f8
   2ab60:	movt	r0, #3
   2ab64:	movt	r1, #3
   2ab68:	movt	r3, #3
   2ab6c:	bl	12bc4 <__assert_fail@plt>

0002ab70 <flatcc_builder_check_union_field@@Base>:
   2ab70:	push	{fp, lr}
   2ab74:	mov	fp, sp
   2ab78:	mov	r2, r0
   2ab7c:	ldr	r0, [r0, #32]
   2ab80:	ldrh	r0, [r0, #14]
   2ab84:	cmp	r0, #3
   2ab88:	bne	2abe8 <flatcc_builder_check_union_field@@Base+0x78>
   2ab8c:	mov	r0, #0
   2ab90:	cmp	r1, #0
   2ab94:	beq	2abd4 <flatcc_builder_check_union_field@@Base+0x64>
   2ab98:	ldrh	r3, [r2, #8]
   2ab9c:	cmp	r3, r1
   2aba0:	popls	{fp, pc}
   2aba4:	ldr	r0, [r2, #4]
   2aba8:	add	r0, r0, r1, lsl #1
   2abac:	ldrh	r1, [r0, #-2]
   2abb0:	cmp	r1, #0
   2abb4:	beq	2abd8 <flatcc_builder_check_union_field@@Base+0x68>
   2abb8:	ldr	r2, [r2, #16]
   2abbc:	ldrh	r0, [r0]
   2abc0:	ldrb	r1, [r2, r1]
   2abc4:	cmp	r1, #0
   2abc8:	beq	2abdc <flatcc_builder_check_union_field@@Base+0x6c>
   2abcc:	cmp	r0, #0
   2abd0:	movwne	r0, #1
   2abd4:	pop	{fp, pc}
   2abd8:	ldrh	r0, [r0]
   2abdc:	clz	r0, r0
   2abe0:	lsr	r0, r0, #5
   2abe4:	pop	{fp, pc}
   2abe8:	movw	r0, #6915	; 0x1b03
   2abec:	movw	r1, #4846	; 0x12ee
   2abf0:	movw	r3, #7041	; 0x1b81
   2abf4:	movw	r2, #1279	; 0x4ff
   2abf8:	movt	r0, #3
   2abfc:	movt	r1, #3
   2ac00:	movt	r3, #3
   2ac04:	bl	12bc4 <__assert_fail@plt>

0002ac08 <flatcc_builder_check_required@@Base>:
   2ac08:	push	{fp, lr}
   2ac0c:	mov	fp, sp
   2ac10:	mov	r3, r0
   2ac14:	ldr	r0, [r0, #32]
   2ac18:	ldrh	r0, [r0, #14]
   2ac1c:	cmp	r0, #3
   2ac20:	bne	2ac68 <flatcc_builder_check_required@@Base+0x60>
   2ac24:	ldrh	ip, [r3, #8]
   2ac28:	mov	r0, #0
   2ac2c:	cmp	ip, r2
   2ac30:	poplt	{fp, pc}
   2ac34:	cmp	r2, #1
   2ac38:	blt	2ac60 <flatcc_builder_check_required@@Base+0x58>
   2ac3c:	ldr	ip, [r3, #4]
   2ac40:	ldrh	r3, [r1]
   2ac44:	add	r3, ip, r3, lsl #1
   2ac48:	ldrh	r3, [r3]
   2ac4c:	cmp	r3, #0
   2ac50:	beq	2ac64 <flatcc_builder_check_required@@Base+0x5c>
   2ac54:	add	r1, r1, #2
   2ac58:	subs	r2, r2, #1
   2ac5c:	bne	2ac40 <flatcc_builder_check_required@@Base+0x38>
   2ac60:	mov	r0, #1
   2ac64:	pop	{fp, pc}
   2ac68:	movw	r0, #6915	; 0x1b03
   2ac6c:	movw	r1, #4846	; 0x12ee
   2ac70:	movw	r3, #7121	; 0x1bd1
   2ac74:	movw	r2, #1297	; 0x511
   2ac78:	movt	r0, #3
   2ac7c:	movt	r1, #3
   2ac80:	movt	r3, #3
   2ac84:	bl	12bc4 <__assert_fail@plt>

0002ac88 <flatcc_builder_end_table@@Base>:
   2ac88:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ac8c:	add	fp, sp, #24
   2ac90:	sub	sp, sp, #16
   2ac94:	mov	r4, r0
   2ac98:	ldr	r0, [r0, #32]
   2ac9c:	ldrh	r0, [r0, #14]
   2aca0:	cmp	r0, #3
   2aca4:	bne	2ae20 <flatcc_builder_end_table@@Base+0x198>
   2aca8:	ldrh	r0, [r4, #8]
   2acac:	ldr	r5, [r4, #4]
   2acb0:	mov	r1, #4
   2acb4:	movw	r2, #31153	; 0x79b1
   2acb8:	movt	r2, #40503	; 0x9e37
   2acbc:	add	r0, r1, r0, lsl #1
   2acc0:	strh	r0, [r5, #-4]!
   2acc4:	ldrh	r1, [r4, #20]
   2acc8:	uxth	r6, r0
   2accc:	add	r1, r1, #4
   2acd0:	strh	r1, [r5, #2]
   2acd4:	uxth	r1, r1
   2acd8:	ldr	r0, [r4, #12]
   2acdc:	eor	r0, r0, r6
   2ace0:	mul	r0, r0, r2
   2ace4:	eor	r0, r0, r1
   2ace8:	mov	r1, r5
   2acec:	mul	r3, r0, r2
   2acf0:	mov	r0, r4
   2acf4:	mov	r2, r6
   2acf8:	str	r3, [r4, #12]
   2acfc:	bl	2a5fc <flatcc_builder_create_cached_vtable@@Base>
   2ad00:	cmp	r0, #0
   2ad04:	beq	2ae10 <flatcc_builder_end_table@@Base+0x188>
   2ad08:	mov	r7, r0
   2ad0c:	mov	r0, r5
   2ad10:	mov	r1, #0
   2ad14:	mov	r2, r6
   2ad18:	mov	r8, #0
   2ad1c:	bl	12b64 <memset@plt>
   2ad20:	ldr	r5, [r4, #32]
   2ad24:	ldr	r0, [r4, #76]	; 0x4c
   2ad28:	ldr	r6, [r4]
   2ad2c:	ldrh	r3, [r4, #130]	; 0x82
   2ad30:	ldr	r1, [r4, #16]
   2ad34:	ldr	r2, [r4, #20]
   2ad38:	ldr	r5, [r5, #20]
   2ad3c:	add	r0, r0, r5
   2ad40:	sub	r6, r6, r0
   2ad44:	asr	r6, r6, #1
   2ad48:	stm	sp, {r0, r6, r7}
   2ad4c:	mov	r0, r4
   2ad50:	bl	2a960 <flatcc_builder_create_table@@Base>
   2ad54:	cmp	r0, #0
   2ad58:	beq	2ae14 <flatcc_builder_end_table@@Base+0x18c>
   2ad5c:	ldr	r1, [r4, #32]
   2ad60:	mov	r5, r0
   2ad64:	ldr	r0, [r4, #16]
   2ad68:	ldr	r2, [r4, #20]
   2ad6c:	ldr	r3, [r4, #52]	; 0x34
   2ad70:	ldr	r7, [r1, #24]
   2ad74:	str	r7, [r4, #12]
   2ad78:	ldrh	r7, [r1, #28]
   2ad7c:	strh	r7, [r4, #8]
   2ad80:	ldr	r7, [r1, #16]
   2ad84:	add	r3, r3, r7
   2ad88:	str	r3, [r4, #4]
   2ad8c:	ldr	r3, [r4, #76]	; 0x4c
   2ad90:	ldr	r1, [r1, #20]
   2ad94:	add	r1, r3, r1
   2ad98:	str	r1, [r4]
   2ad9c:	mov	r1, #0
   2ada0:	bl	12b64 <memset@plt>
   2ada4:	ldr	r0, [r4, #32]
   2ada8:	ldr	r1, [r4, #60]	; 0x3c
   2adac:	ldr	r2, [r4, #64]	; 0x40
   2adb0:	mov	r8, r5
   2adb4:	ldr	r3, [r0, #8]
   2adb8:	str	r3, [r4, #20]
   2adbc:	ldr	r3, [r0]
   2adc0:	str	r3, [r4, #28]
   2adc4:	add	r1, r1, r3
   2adc8:	ldr	r7, [r0, #4]
   2adcc:	str	r1, [r4, #16]
   2add0:	sub	r1, r2, r3
   2add4:	cmp	r1, r7
   2add8:	movhi	r1, r7
   2addc:	str	r1, [r4, #24]
   2ade0:	ldrh	r1, [r4, #130]	; 0x82
   2ade4:	ldrh	r2, [r4, #128]	; 0x80
   2ade8:	cmp	r2, r1
   2adec:	strhcc	r1, [r4, #128]	; 0x80
   2adf0:	ldrh	r1, [r0, #12]
   2adf4:	sub	r0, r0, #36	; 0x24
   2adf8:	str	r0, [r4, #32]
   2adfc:	strh	r1, [r4, #130]	; 0x82
   2ae00:	ldr	r0, [r4, #156]	; 0x9c
   2ae04:	sub	r0, r0, #1
   2ae08:	str	r0, [r4, #156]	; 0x9c
   2ae0c:	b	2ae14 <flatcc_builder_end_table@@Base+0x18c>
   2ae10:	mov	r8, #0
   2ae14:	mov	r0, r8
   2ae18:	sub	sp, fp, #24
   2ae1c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ae20:	movw	r0, #6915	; 0x1b03
   2ae24:	movw	r1, #4846	; 0x12ee
   2ae28:	movw	r3, #7211	; 0x1c2b
   2ae2c:	movw	r2, #1317	; 0x525
   2ae30:	movt	r0, #3
   2ae34:	movt	r1, #3
   2ae38:	movt	r3, #3
   2ae3c:	bl	12bc4 <__assert_fail@plt>

0002ae40 <flatcc_builder_create_vector@@Base>:
   2ae40:	push	{r4, r5, r6, r7, fp, lr}
   2ae44:	add	fp, sp, #16
   2ae48:	sub	sp, sp, #80	; 0x50
   2ae4c:	mov	r7, r0
   2ae50:	ldr	r0, [fp, #12]
   2ae54:	cmp	r2, r0
   2ae58:	bhi	2af54 <flatcc_builder_create_vector@@Base+0x114>
   2ae5c:	ldr	r0, [fp, #8]
   2ae60:	mov	r4, r2
   2ae64:	ldrh	r2, [r7, #128]	; 0x80
   2ae68:	mov	r5, #4
   2ae6c:	cmp	r0, #4
   2ae70:	movls	r0, r5
   2ae74:	cmp	r2, r0
   2ae78:	sub	r2, fp, #20
   2ae7c:	strhcc	r0, [r7, #128]	; 0x80
   2ae80:	str	r4, [fp, #-20]	; 0xffffffec
   2ae84:	sub	r0, r0, #1
   2ae88:	ldr	ip, [r7, #136]	; 0x88
   2ae8c:	str	r5, [sp, #16]
   2ae90:	str	r2, [sp, #12]
   2ae94:	mov	r2, #1
   2ae98:	str	r5, [sp, #4]
   2ae9c:	str	r2, [sp, #8]
   2aea0:	mls	r6, r3, r4, ip
   2aea4:	mul	r3, r3, r4
   2aea8:	cmp	r3, #0
   2aeac:	and	r0, r6, r0
   2aeb0:	movne	r2, #2
   2aeb4:	addne	r5, r3, #4
   2aeb8:	strne	r3, [sp, #24]
   2aebc:	strne	r1, [sp, #20]
   2aec0:	strne	r2, [sp, #8]
   2aec4:	strne	r5, [sp, #4]
   2aec8:	cmp	r0, #0
   2aecc:	beq	2aef8 <flatcc_builder_create_vector@@Base+0xb8>
   2aed0:	add	r1, sp, #4
   2aed4:	movw	r3, #4316	; 0x10dc
   2aed8:	add	r5, r5, r0
   2aedc:	add	r1, r1, r2, lsl #3
   2aee0:	movt	r3, #3
   2aee4:	add	r2, r2, #1
   2aee8:	str	r5, [sp, #4]
   2aeec:	str	r3, [r1, #8]
   2aef0:	str	r0, [r1, #12]
   2aef4:	str	r2, [sp, #8]
   2aef8:	cmp	r5, #0
   2aefc:	ble	2af74 <flatcc_builder_create_vector@@Base+0x134>
   2af00:	ldr	r0, [r7, #36]	; 0x24
   2af04:	ldr	r6, [r7, #44]	; 0x2c
   2af08:	add	r1, sp, #4
   2af0c:	sub	r4, ip, r5
   2af10:	str	r5, [sp]
   2af14:	add	r1, r1, #8
   2af18:	mov	r3, r4
   2af1c:	blx	r6
   2af20:	cmp	r0, #0
   2af24:	streq	r4, [r7, #136]	; 0x88
   2af28:	moveq	r0, r4
   2af2c:	subeq	sp, fp, #16
   2af30:	popeq	{r4, r5, r6, r7, fp, pc}
   2af34:	movw	r0, #9364	; 0x2494
   2af38:	movw	r1, #4846	; 0x12ee
   2af3c:	movw	r3, #9043	; 0x2353
   2af40:	movw	r2, #651	; 0x28b
   2af44:	movt	r0, #3
   2af48:	movt	r1, #3
   2af4c:	movt	r3, #3
   2af50:	bl	12bc4 <__assert_fail@plt>
   2af54:	movw	r0, #7277	; 0x1c6d
   2af58:	movw	r1, #4846	; 0x12ee
   2af5c:	movw	r3, #7296	; 0x1c80
   2af60:	movw	r2, #1365	; 0x555
   2af64:	movt	r0, #3
   2af68:	movt	r1, #3
   2af6c:	movt	r3, #3
   2af70:	bl	12bc4 <__assert_fail@plt>
   2af74:	movw	r0, #9364	; 0x2494
   2af78:	movw	r1, #4846	; 0x12ee
   2af7c:	movw	r3, #9043	; 0x2353
   2af80:	movw	r2, #647	; 0x287
   2af84:	b	2af44 <flatcc_builder_create_vector@@Base+0x104>

0002af88 <flatcc_builder_end_vector@@Base>:
   2af88:	push	{r4, r5, fp, lr}
   2af8c:	add	fp, sp, #8
   2af90:	sub	sp, sp, #8
   2af94:	mov	r4, r0
   2af98:	ldr	r0, [r0, #32]
   2af9c:	ldrh	r1, [r0, #14]
   2afa0:	cmp	r1, #4
   2afa4:	bne	2b058 <flatcc_builder_end_vector@@Base+0xd0>
   2afa8:	ldr	r3, [r0, #16]
   2afac:	ldr	r2, [r0, #20]
   2afb0:	ldr	r0, [r0, #24]
   2afb4:	ldr	r1, [r4, #16]
   2afb8:	ldrh	r5, [r4, #130]	; 0x82
   2afbc:	str	r0, [sp, #4]
   2afc0:	mov	r0, r4
   2afc4:	str	r5, [sp]
   2afc8:	bl	2ae40 <flatcc_builder_create_vector@@Base>
   2afcc:	mov	r5, r0
   2afd0:	cmp	r0, #0
   2afd4:	beq	2b04c <flatcc_builder_end_vector@@Base+0xc4>
   2afd8:	ldr	r0, [r4, #16]
   2afdc:	ldr	r2, [r4, #20]
   2afe0:	mov	r1, #0
   2afe4:	bl	12b64 <memset@plt>
   2afe8:	ldr	r0, [r4, #32]
   2afec:	ldr	r1, [r4, #60]	; 0x3c
   2aff0:	ldr	ip, [r4, #64]	; 0x40
   2aff4:	ldr	r3, [r0, #8]
   2aff8:	str	r3, [r4, #20]
   2affc:	ldr	r3, [r0]
   2b000:	str	r3, [r4, #28]
   2b004:	add	r1, r1, r3
   2b008:	ldr	r2, [r0, #4]
   2b00c:	str	r1, [r4, #16]
   2b010:	sub	r1, ip, r3
   2b014:	cmp	r1, r2
   2b018:	movhi	r1, r2
   2b01c:	str	r1, [r4, #24]
   2b020:	ldrh	r1, [r4, #130]	; 0x82
   2b024:	ldrh	r2, [r4, #128]	; 0x80
   2b028:	cmp	r2, r1
   2b02c:	strhcc	r1, [r4, #128]	; 0x80
   2b030:	ldrh	r1, [r0, #12]
   2b034:	sub	r0, r0, #36	; 0x24
   2b038:	str	r0, [r4, #32]
   2b03c:	strh	r1, [r4, #130]	; 0x82
   2b040:	ldr	r0, [r4, #156]	; 0x9c
   2b044:	sub	r0, r0, #1
   2b048:	str	r0, [r4, #156]	; 0x9c
   2b04c:	mov	r0, r5
   2b050:	sub	sp, fp, #8
   2b054:	pop	{r4, r5, fp, pc}
   2b058:	movw	r0, #5649	; 0x1611
   2b05c:	movw	r1, #4846	; 0x12ee
   2b060:	movw	r3, #7414	; 0x1cf6
   2b064:	movw	r2, #1400	; 0x578
   2b068:	movt	r0, #3
   2b06c:	movt	r1, #3
   2b070:	movt	r3, #3
   2b074:	bl	12bc4 <__assert_fail@plt>

0002b078 <flatcc_builder_vector_count@@Base>:
   2b078:	ldr	r0, [r0, #32]
   2b07c:	ldr	r0, [r0, #20]
   2b080:	bx	lr

0002b084 <flatcc_builder_vector_edit@@Base>:
   2b084:	ldr	r0, [r0, #16]
   2b088:	bx	lr

0002b08c <flatcc_builder_create_offset_vector_direct@@Base>:
   2b08c:	mov	r3, #0
   2b090:	b	2b094 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2b094:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b098:	add	fp, sp, #24
   2b09c:	sub	sp, sp, #80	; 0x50
   2b0a0:	mov	r6, #0
   2b0a4:	cmn	r2, #-1073741823	; 0xc0000001
   2b0a8:	bhi	2b1e4 <flatcc_builder_create_offset_vector_direct@@Base+0x158>
   2b0ac:	mov	r8, r0
   2b0b0:	ldrh	r0, [r0, #128]	; 0x80
   2b0b4:	mov	r5, #4
   2b0b8:	sub	r7, fp, #28
   2b0bc:	mov	r4, #1
   2b0c0:	cmp	r0, #3
   2b0c4:	movls	r0, #4
   2b0c8:	strhls	r0, [r8, #128]	; 0x80
   2b0cc:	str	r2, [fp, #-28]	; 0xffffffe4
   2b0d0:	ldr	ip, [r8, #136]	; 0x88
   2b0d4:	str	r5, [sp, #16]
   2b0d8:	str	r7, [sp, #12]
   2b0dc:	mov	r7, #0
   2b0e0:	str	r5, [sp, #4]
   2b0e4:	str	r4, [sp, #8]
   2b0e8:	cmp	r7, r2, lsl #2
   2b0ec:	and	r6, ip, #3
   2b0f0:	beq	2b110 <flatcc_builder_create_offset_vector_direct@@Base+0x84>
   2b0f4:	lsl	r7, r2, #2
   2b0f8:	mov	r4, #2
   2b0fc:	add	r5, r7, #4
   2b100:	str	r7, [sp, #24]
   2b104:	str	r1, [sp, #20]
   2b108:	str	r4, [sp, #8]
   2b10c:	str	r5, [sp, #4]
   2b110:	cmp	r6, #0
   2b114:	beq	2b140 <flatcc_builder_create_offset_vector_direct@@Base+0xb4>
   2b118:	add	r7, sp, #4
   2b11c:	movw	r0, #4316	; 0x10dc
   2b120:	add	r5, r5, r6
   2b124:	add	r7, r7, r4, lsl #3
   2b128:	movt	r0, #3
   2b12c:	add	r4, r4, #1
   2b130:	str	r5, [sp, #4]
   2b134:	str	r0, [r7, #8]
   2b138:	str	r6, [r7, #12]
   2b13c:	str	r4, [sp, #8]
   2b140:	cmp	r2, #0
   2b144:	beq	2b1ac <flatcc_builder_create_offset_vector_direct@@Base+0x120>
   2b148:	sub	r0, r5, ip
   2b14c:	mov	r6, r3
   2b150:	sub	r0, r0, #4
   2b154:	ldr	r7, [r1]
   2b158:	cmp	r7, #0
   2b15c:	beq	2b180 <flatcc_builder_create_offset_vector_direct@@Base+0xf4>
   2b160:	add	r7, r0, r7
   2b164:	cmp	r3, #0
   2b168:	str	r7, [r1]
   2b16c:	beq	2b194 <flatcc_builder_create_offset_vector_direct@@Base+0x108>
   2b170:	ldrb	r7, [r6]
   2b174:	cmp	r7, #0
   2b178:	bne	2b194 <flatcc_builder_create_offset_vector_direct@@Base+0x108>
   2b17c:	b	2b1f0 <flatcc_builder_create_offset_vector_direct@@Base+0x164>
   2b180:	cmp	r3, #0
   2b184:	beq	2b220 <flatcc_builder_create_offset_vector_direct@@Base+0x194>
   2b188:	ldrb	r7, [r6]
   2b18c:	cmp	r7, #0
   2b190:	bne	2b208 <flatcc_builder_create_offset_vector_direct@@Base+0x17c>
   2b194:	sub	r0, r0, #4
   2b198:	add	r1, r1, #4
   2b19c:	add	r6, r6, #1
   2b1a0:	subs	r2, r2, #1
   2b1a4:	bne	2b154 <flatcc_builder_create_offset_vector_direct@@Base+0xc8>
   2b1a8:	ldr	ip, [r8, #136]	; 0x88
   2b1ac:	cmp	r5, #0
   2b1b0:	ble	2b240 <flatcc_builder_create_offset_vector_direct@@Base+0x1b4>
   2b1b4:	ldr	r0, [r8, #36]	; 0x24
   2b1b8:	ldr	r7, [r8, #44]	; 0x2c
   2b1bc:	add	r1, sp, #4
   2b1c0:	sub	r6, ip, r5
   2b1c4:	mov	r2, r4
   2b1c8:	str	r5, [sp]
   2b1cc:	add	r1, r1, #8
   2b1d0:	mov	r3, r6
   2b1d4:	blx	r7
   2b1d8:	cmp	r0, #0
   2b1dc:	bne	2b254 <flatcc_builder_create_offset_vector_direct@@Base+0x1c8>
   2b1e0:	str	r6, [r8, #136]	; 0x88
   2b1e4:	mov	r0, r6
   2b1e8:	sub	sp, fp, #24
   2b1ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b1f0:	movw	r0, #9352	; 0x2488
   2b1f4:	movw	r1, #4846	; 0x12ee
   2b1f8:	movw	r3, #9366	; 0x2496
   2b1fc:	movw	r2, #1457	; 0x5b1
   2b200:	movt	r0, #3
   2b204:	b	2b234 <flatcc_builder_create_offset_vector_direct@@Base+0x1a8>
   2b208:	movw	r0, #9497	; 0x2519
   2b20c:	movw	r1, #4846	; 0x12ee
   2b210:	movw	r3, #9366	; 0x2496
   2b214:	movw	r2, #1461	; 0x5b5
   2b218:	movt	r0, #3
   2b21c:	b	2b234 <flatcc_builder_create_offset_vector_direct@@Base+0x1a8>
   2b220:	movw	r0, #9364	; 0x2494
   2b224:	movw	r1, #4846	; 0x12ee
   2b228:	movw	r3, #9366	; 0x2496
   2b22c:	movw	r2, #1463	; 0x5b7
   2b230:	movt	r0, #3
   2b234:	movt	r1, #3
   2b238:	movt	r3, #3
   2b23c:	bl	12bc4 <__assert_fail@plt>
   2b240:	movw	r0, #9364	; 0x2494
   2b244:	movw	r1, #4846	; 0x12ee
   2b248:	movw	r3, #9043	; 0x2353
   2b24c:	movw	r2, #647	; 0x287
   2b250:	b	2b264 <flatcc_builder_create_offset_vector_direct@@Base+0x1d8>
   2b254:	movw	r0, #9364	; 0x2494
   2b258:	movw	r1, #4846	; 0x12ee
   2b25c:	movw	r3, #9043	; 0x2353
   2b260:	movw	r2, #651	; 0x28b
   2b264:	movt	r0, #3
   2b268:	movt	r1, #3
   2b26c:	movt	r3, #3
   2b270:	bl	12bc4 <__assert_fail@plt>

0002b274 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   2b274:	push	{r4, r5, fp, lr}
   2b278:	add	fp, sp, #8
   2b27c:	mov	r4, r0
   2b280:	ldr	r0, [r0, #32]
   2b284:	mov	r3, r1
   2b288:	ldrh	r1, [r0, #14]
   2b28c:	cmp	r1, #5
   2b290:	bne	2b32c <flatcc_builder_end_offset_vector_for_unions@@Base+0xb8>
   2b294:	ldr	r2, [r0, #20]
   2b298:	ldr	r1, [r4, #16]
   2b29c:	mov	r0, r4
   2b2a0:	bl	2b094 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2b2a4:	mov	r5, r0
   2b2a8:	cmp	r0, #0
   2b2ac:	beq	2b324 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb0>
   2b2b0:	ldr	r0, [r4, #16]
   2b2b4:	ldr	r2, [r4, #20]
   2b2b8:	mov	r1, #0
   2b2bc:	bl	12b64 <memset@plt>
   2b2c0:	ldr	r0, [r4, #32]
   2b2c4:	ldr	r1, [r4, #60]	; 0x3c
   2b2c8:	ldr	ip, [r4, #64]	; 0x40
   2b2cc:	ldr	r3, [r0, #8]
   2b2d0:	str	r3, [r4, #20]
   2b2d4:	ldr	r3, [r0]
   2b2d8:	str	r3, [r4, #28]
   2b2dc:	add	r1, r1, r3
   2b2e0:	ldr	r2, [r0, #4]
   2b2e4:	str	r1, [r4, #16]
   2b2e8:	sub	r1, ip, r3
   2b2ec:	cmp	r1, r2
   2b2f0:	movhi	r1, r2
   2b2f4:	str	r1, [r4, #24]
   2b2f8:	ldrh	r1, [r4, #130]	; 0x82
   2b2fc:	ldrh	r2, [r4, #128]	; 0x80
   2b300:	cmp	r2, r1
   2b304:	strhcc	r1, [r4, #128]	; 0x80
   2b308:	ldrh	r1, [r0, #12]
   2b30c:	sub	r0, r0, #36	; 0x24
   2b310:	str	r0, [r4, #32]
   2b314:	strh	r1, [r4, #130]	; 0x82
   2b318:	ldr	r0, [r4, #156]	; 0x9c
   2b31c:	sub	r0, r0, #1
   2b320:	str	r0, [r4, #156]	; 0x9c
   2b324:	mov	r0, r5
   2b328:	pop	{r4, r5, fp, pc}
   2b32c:	movw	r0, #5898	; 0x170a
   2b330:	movw	r1, #4846	; 0x12ee
   2b334:	movw	r3, #7555	; 0x1d83
   2b338:	movw	r2, #1493	; 0x5d5
   2b33c:	movt	r0, #3
   2b340:	movt	r1, #3
   2b344:	movt	r3, #3
   2b348:	bl	12bc4 <__assert_fail@plt>

0002b34c <flatcc_builder_offset_vector_edit@@Base>:
   2b34c:	ldr	r0, [r0, #16]
   2b350:	bx	lr

0002b354 <flatcc_builder_offset_vector_count@@Base>:
   2b354:	ldr	r0, [r0, #32]
   2b358:	ldr	r0, [r0, #20]
   2b35c:	bx	lr

0002b360 <flatcc_builder_table_add_union@@Base>:
   2b360:	push	{r4, r5, r6, r7, fp, lr}
   2b364:	add	fp, sp, #16
   2b368:	mov	r5, r0
   2b36c:	ldr	r0, [r0, #32]
   2b370:	ldrh	r0, [r0, #14]
   2b374:	cmp	r0, #3
   2b378:	bne	2b400 <flatcc_builder_table_add_union@@Base+0xa0>
   2b37c:	mov	r7, r3
   2b380:	mov	r4, r2
   2b384:	mov	r6, r1
   2b388:	cmp	r3, #0
   2b38c:	beq	2b39c <flatcc_builder_table_add_union@@Base+0x3c>
   2b390:	uxtb	r0, r4
   2b394:	cmp	r0, #0
   2b398:	beq	2b418 <flatcc_builder_table_add_union@@Base+0xb8>
   2b39c:	cmp	r7, #0
   2b3a0:	beq	2b3bc <flatcc_builder_table_add_union@@Base+0x5c>
   2b3a4:	mov	r0, r5
   2b3a8:	mov	r1, r6
   2b3ac:	bl	2b448 <flatcc_builder_table_add_offset@@Base>
   2b3b0:	cmp	r0, #0
   2b3b4:	beq	2b430 <flatcc_builder_table_add_union@@Base+0xd0>
   2b3b8:	str	r7, [r0]
   2b3bc:	sub	r1, r6, #1
   2b3c0:	mov	r0, r5
   2b3c4:	mov	r2, #1
   2b3c8:	mov	r3, #1
   2b3cc:	bl	2b574 <flatcc_builder_table_add@@Base>
   2b3d0:	cmp	r0, #0
   2b3d4:	strbne	r4, [r0]
   2b3d8:	movne	r0, #0
   2b3dc:	popne	{r4, r5, r6, r7, fp, pc}
   2b3e0:	movw	r0, #7801	; 0x1e79
   2b3e4:	movw	r1, #4846	; 0x12ee
   2b3e8:	movw	r3, #7669	; 0x1df5
   2b3ec:	movw	r2, #1526	; 0x5f6
   2b3f0:	movt	r0, #3
   2b3f4:	movt	r1, #3
   2b3f8:	movt	r3, #3
   2b3fc:	bl	12bc4 <__assert_fail@plt>
   2b400:	movw	r0, #6915	; 0x1b03
   2b404:	movw	r1, #4846	; 0x12ee
   2b408:	movw	r3, #7669	; 0x1df5
   2b40c:	movw	r2, #1518	; 0x5ee
   2b410:	movt	r0, #3
   2b414:	b	2b3f4 <flatcc_builder_table_add_union@@Base+0x94>
   2b418:	movw	r0, #7757	; 0x1e4d
   2b41c:	movw	r1, #4846	; 0x12ee
   2b420:	movw	r3, #7669	; 0x1df5
   2b424:	movw	r2, #1519	; 0x5ef
   2b428:	movt	r0, #3
   2b42c:	b	2b3f4 <flatcc_builder_table_add_union@@Base+0x94>
   2b430:	movw	r0, #7791	; 0x1e6f
   2b434:	movw	r1, #4846	; 0x12ee
   2b438:	movw	r3, #7669	; 0x1df5
   2b43c:	movw	r2, #1522	; 0x5f2
   2b440:	movt	r0, #3
   2b444:	b	2b3f4 <flatcc_builder_table_add_union@@Base+0x94>

0002b448 <flatcc_builder_table_add_offset@@Base>:
   2b448:	push	{r4, r5, r6, r7, fp, lr}
   2b44c:	add	fp, sp, #16
   2b450:	mov	r4, r0
   2b454:	ldr	r0, [r0, #32]
   2b458:	ldrh	r0, [r0, #14]
   2b45c:	cmp	r0, #3
   2b460:	bne	2b524 <flatcc_builder_table_add_offset@@Base+0xdc>
   2b464:	movw	r0, #32765	; 0x7ffd
   2b468:	mov	r5, r1
   2b46c:	cmp	r1, r0
   2b470:	bcs	2b53c <flatcc_builder_table_add_offset@@Base+0xf4>
   2b474:	ldr	r0, [r4, #4]
   2b478:	add	r1, r0, r5, lsl #1
   2b47c:	ldrh	r1, [r1]
   2b480:	cmp	r1, #0
   2b484:	bne	2b554 <flatcc_builder_table_add_offset@@Base+0x10c>
   2b488:	ldr	r2, [r4, #20]
   2b48c:	ldr	r1, [r4, #12]
   2b490:	ldr	r3, [r4, #24]
   2b494:	add	r2, r2, #3
   2b498:	eor	r1, r1, r5
   2b49c:	bic	r7, r2, #3
   2b4a0:	movw	r2, #31153	; 0x79b1
   2b4a4:	movt	r2, #40503	; 0x9e37
   2b4a8:	add	r6, r7, #4
   2b4ac:	cmp	r6, r3
   2b4b0:	str	r6, [r4, #20]
   2b4b4:	mul	r1, r1, r2
   2b4b8:	eor	r1, r1, #4
   2b4bc:	mul	r1, r1, r2
   2b4c0:	str	r1, [r4, #12]
   2b4c4:	bls	2b4ec <flatcc_builder_table_add_offset@@Base+0xa4>
   2b4c8:	mov	r0, r4
   2b4cc:	mov	r1, r6
   2b4d0:	movw	r2, #65532	; 0xfffc
   2b4d4:	bl	2c3fc <flatcc_builder_get_emit_context@@Base+0x8>
   2b4d8:	mov	r1, r0
   2b4dc:	mov	r0, #0
   2b4e0:	cmp	r1, #0
   2b4e4:	popne	{r4, r5, r6, r7, fp, pc}
   2b4e8:	ldr	r0, [r4, #4]
   2b4ec:	uxth	r1, r5
   2b4f0:	add	r0, r0, r1, lsl #1
   2b4f4:	strh	r6, [r0]
   2b4f8:	ldrh	r0, [r4, #8]
   2b4fc:	cmp	r0, r1
   2b500:	addls	r0, r5, #1
   2b504:	strhls	r0, [r4, #8]
   2b508:	ldr	r0, [r4]
   2b50c:	add	r1, r0, #2
   2b510:	str	r1, [r4]
   2b514:	strh	r7, [r0]
   2b518:	ldr	r0, [r4, #16]
   2b51c:	add	r0, r0, r7
   2b520:	pop	{r4, r5, r6, r7, fp, pc}
   2b524:	movw	r0, #6915	; 0x1b03
   2b528:	movw	r1, #4846	; 0x12ee
   2b52c:	movw	r3, #8695	; 0x21f7
   2b530:	movw	r2, #1811	; 0x713
   2b534:	movt	r0, #3
   2b538:	b	2b568 <flatcc_builder_table_add_offset@@Base+0x120>
   2b53c:	movw	r0, #8567	; 0x2177
   2b540:	movw	r1, #4846	; 0x12ee
   2b544:	movw	r3, #8695	; 0x21f7
   2b548:	movw	r2, #1812	; 0x714
   2b54c:	movt	r0, #3
   2b550:	b	2b568 <flatcc_builder_table_add_offset@@Base+0x120>
   2b554:	movw	r0, #9364	; 0x2494
   2b558:	movw	r1, #4846	; 0x12ee
   2b55c:	movw	r3, #8695	; 0x21f7
   2b560:	movw	r2, #1819	; 0x71b
   2b564:	movt	r0, #3
   2b568:	movt	r1, #3
   2b56c:	movt	r3, #3
   2b570:	bl	12bc4 <__assert_fail@plt>

0002b574 <flatcc_builder_table_add@@Base>:
   2b574:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b578:	add	fp, sp, #24
   2b57c:	mov	r4, r0
   2b580:	ldr	r0, [r0, #32]
   2b584:	ldrh	r0, [r0, #14]
   2b588:	cmp	r0, #3
   2b58c:	bne	2b65c <flatcc_builder_table_add@@Base+0xe8>
   2b590:	movw	r0, #32765	; 0x7ffd
   2b594:	mov	r8, r1
   2b598:	cmp	r1, r0
   2b59c:	bcs	2b674 <flatcc_builder_table_add@@Base+0x100>
   2b5a0:	ldrh	r0, [r4, #130]	; 0x82
   2b5a4:	cmp	r0, r3
   2b5a8:	strhcc	r3, [r4, #130]	; 0x82
   2b5ac:	ldr	r0, [r4, #4]
   2b5b0:	add	r1, r0, r8, lsl #1
   2b5b4:	ldrh	r1, [r1]
   2b5b8:	cmp	r1, #0
   2b5bc:	bne	2b68c <flatcc_builder_table_add@@Base+0x118>
   2b5c0:	ldr	r1, [r4, #12]
   2b5c4:	movw	r7, #31153	; 0x79b1
   2b5c8:	ldr	r6, [r4, #20]
   2b5cc:	ldr	r5, [r4, #24]
   2b5d0:	movt	r7, #40503	; 0x9e37
   2b5d4:	eor	r1, r1, r8
   2b5d8:	mul	r1, r1, r7
   2b5dc:	eor	r1, r1, r2
   2b5e0:	mul	r1, r1, r7
   2b5e4:	str	r1, [r4, #12]
   2b5e8:	add	r1, r3, r6
   2b5ec:	rsb	r3, r3, #0
   2b5f0:	sub	r1, r1, #1
   2b5f4:	and	r6, r1, r3
   2b5f8:	add	r1, r6, r2
   2b5fc:	cmp	r1, r5
   2b600:	str	r1, [r4, #20]
   2b604:	bcc	2b630 <flatcc_builder_table_add@@Base+0xbc>
   2b608:	add	r1, r1, #1
   2b60c:	mov	r0, r4
   2b610:	movw	r2, #65532	; 0xfffc
   2b614:	bl	2c3fc <flatcc_builder_get_emit_context@@Base+0x8>
   2b618:	mov	r1, r0
   2b61c:	mov	r0, #0
   2b620:	cmp	r1, #0
   2b624:	beq	2b62c <flatcc_builder_table_add@@Base+0xb8>
   2b628:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b62c:	ldr	r0, [r4, #4]
   2b630:	uxth	r1, r8
   2b634:	add	r2, r6, #4
   2b638:	add	r0, r0, r1, lsl #1
   2b63c:	strh	r2, [r0]
   2b640:	ldrh	r0, [r4, #8]
   2b644:	cmp	r0, r1
   2b648:	addls	r0, r8, #1
   2b64c:	strhls	r0, [r4, #8]
   2b650:	ldr	r0, [r4, #16]
   2b654:	add	r0, r0, r6
   2b658:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b65c:	movw	r0, #6915	; 0x1b03
   2b660:	movw	r1, #4846	; 0x12ee
   2b664:	movw	r3, #8493	; 0x212d
   2b668:	movw	r2, #1773	; 0x6ed
   2b66c:	movt	r0, #3
   2b670:	b	2b6a0 <flatcc_builder_table_add@@Base+0x12c>
   2b674:	movw	r0, #8567	; 0x2177
   2b678:	movw	r1, #4846	; 0x12ee
   2b67c:	movw	r3, #8493	; 0x212d
   2b680:	movw	r2, #1774	; 0x6ee
   2b684:	movt	r0, #3
   2b688:	b	2b6a0 <flatcc_builder_table_add@@Base+0x12c>
   2b68c:	movw	r0, #9364	; 0x2494
   2b690:	movw	r1, #4846	; 0x12ee
   2b694:	movw	r3, #8493	; 0x212d
   2b698:	movw	r2, #1784	; 0x6f8
   2b69c:	movt	r0, #3
   2b6a0:	movt	r1, #3
   2b6a4:	movt	r3, #3
   2b6a8:	bl	12bc4 <__assert_fail@plt>

0002b6ac <flatcc_builder_table_add_union_vector@@Base>:
   2b6ac:	push	{r4, r5, r6, r7, fp, lr}
   2b6b0:	add	fp, sp, #16
   2b6b4:	mov	r6, r0
   2b6b8:	ldr	r0, [r0, #32]
   2b6bc:	ldrh	r0, [r0, #14]
   2b6c0:	cmp	r0, #3
   2b6c4:	bne	2b730 <flatcc_builder_table_add_union_vector@@Base+0x84>
   2b6c8:	mov	r5, r1
   2b6cc:	clz	r1, r3
   2b6d0:	cmp	r2, #0
   2b6d4:	mov	r0, r2
   2b6d8:	mov	r4, r3
   2b6dc:	mov	r7, r2
   2b6e0:	movwne	r0, #1
   2b6e4:	lsr	r1, r1, #5
   2b6e8:	teq	r1, r0
   2b6ec:	beq	2b748 <flatcc_builder_table_add_union_vector@@Base+0x9c>
   2b6f0:	cmp	r7, #0
   2b6f4:	beq	2b728 <flatcc_builder_table_add_union_vector@@Base+0x7c>
   2b6f8:	sub	r1, r5, #1
   2b6fc:	mov	r0, r6
   2b700:	bl	2b448 <flatcc_builder_table_add_offset@@Base>
   2b704:	cmp	r0, #0
   2b708:	beq	2b760 <flatcc_builder_table_add_union_vector@@Base+0xb4>
   2b70c:	str	r7, [r0]
   2b710:	mov	r0, r6
   2b714:	mov	r1, r5
   2b718:	bl	2b448 <flatcc_builder_table_add_offset@@Base>
   2b71c:	cmp	r0, #0
   2b720:	beq	2b774 <flatcc_builder_table_add_union_vector@@Base+0xc8>
   2b724:	str	r4, [r0]
   2b728:	mov	r0, #0
   2b72c:	pop	{r4, r5, r6, r7, fp, pc}
   2b730:	movw	r0, #6915	; 0x1b03
   2b734:	movw	r1, #4846	; 0x12ee
   2b738:	movw	r3, #7813	; 0x1e85
   2b73c:	mov	r2, #1536	; 0x600
   2b740:	movt	r0, #3
   2b744:	b	2b788 <flatcc_builder_table_add_union_vector@@Base+0xdc>
   2b748:	movw	r0, #7912	; 0x1ee8
   2b74c:	movw	r1, #4846	; 0x12ee
   2b750:	movw	r3, #7813	; 0x1e85
   2b754:	movw	r2, #1537	; 0x601
   2b758:	movt	r0, #3
   2b75c:	b	2b788 <flatcc_builder_table_add_union_vector@@Base+0xdc>
   2b760:	movw	r0, #7791	; 0x1e6f
   2b764:	movw	r1, #4846	; 0x12ee
   2b768:	movw	r3, #7813	; 0x1e85
   2b76c:	movw	r2, #1540	; 0x604
   2b770:	b	2b784 <flatcc_builder_table_add_union_vector@@Base+0xd8>
   2b774:	movw	r0, #7791	; 0x1e6f
   2b778:	movw	r1, #4846	; 0x12ee
   2b77c:	movw	r3, #7813	; 0x1e85
   2b780:	movw	r2, #1544	; 0x608
   2b784:	movt	r0, #3
   2b788:	movt	r1, #3
   2b78c:	movt	r3, #3
   2b790:	bl	12bc4 <__assert_fail@plt>

0002b794 <flatcc_builder_create_union_vector@@Base>:
   2b794:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b798:	add	fp, sp, #28
   2b79c:	sub	sp, sp, #20
   2b7a0:	mov	sl, r0
   2b7a4:	mov	r0, #0
   2b7a8:	mov	r9, r3
   2b7ac:	mov	r7, r2
   2b7b0:	mov	r4, r1
   2b7b4:	str	r0, [sl]
   2b7b8:	str	r0, [sl, #4]
   2b7bc:	mov	r0, r1
   2b7c0:	bl	29fe8 <flatcc_builder_start_offset_vector@@Base>
   2b7c4:	cmp	r0, #0
   2b7c8:	beq	2b7d4 <flatcc_builder_create_union_vector@@Base+0x40>
   2b7cc:	sub	sp, fp, #28
   2b7d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b7d4:	mov	r0, r4
   2b7d8:	mov	r1, r9
   2b7dc:	bl	299bc <flatcc_builder_extend_offset_vector@@Base>
   2b7e0:	cmp	r0, #0
   2b7e4:	beq	2b7cc <flatcc_builder_create_union_vector@@Base+0x38>
   2b7e8:	ldr	r8, [r4, #20]
   2b7ec:	ldr	r1, [r4, #24]
   2b7f0:	add	r0, r8, r9
   2b7f4:	cmp	r0, r1
   2b7f8:	str	r0, [r4, #20]
   2b7fc:	bcc	2b818 <flatcc_builder_create_union_vector@@Base+0x84>
   2b800:	add	r1, r0, #1
   2b804:	mov	r0, r4
   2b808:	mvn	r2, #3
   2b80c:	bl	2c3fc <flatcc_builder_get_emit_context@@Base+0x8>
   2b810:	cmp	r0, #0
   2b814:	bne	2b7cc <flatcc_builder_create_union_vector@@Base+0x38>
   2b818:	ldr	r3, [r4, #16]
   2b81c:	adds	r2, r3, r8
   2b820:	beq	2b7cc <flatcc_builder_create_union_vector@@Base+0x38>
   2b824:	cmp	r9, #0
   2b828:	beq	2b858 <flatcc_builder_create_union_vector@@Base+0xc4>
   2b82c:	add	r0, r7, #4
   2b830:	mov	r1, r2
   2b834:	mov	r7, r3
   2b838:	mov	r6, r9
   2b83c:	ldrb	r5, [r0, #-4]
   2b840:	subs	r6, r6, #1
   2b844:	strb	r5, [r1], #1
   2b848:	ldr	r5, [r0]
   2b84c:	add	r0, r0, #8
   2b850:	str	r5, [r7], #4
   2b854:	bne	2b83c <flatcc_builder_create_union_vector@@Base+0xa8>
   2b858:	add	r0, sp, #8
   2b85c:	mov	r1, r4
   2b860:	str	r9, [sp]
   2b864:	bl	2b8ec <flatcc_builder_create_union_vector_direct@@Base>
   2b868:	ldr	r0, [sp, #8]
   2b86c:	ldr	r1, [sp, #12]
   2b870:	stm	sl, {r0, r1}
   2b874:	mov	r1, #0
   2b878:	ldr	r0, [r4, #16]
   2b87c:	ldr	r2, [r4, #20]
   2b880:	bl	12b64 <memset@plt>
   2b884:	ldr	r0, [r4, #32]
   2b888:	ldr	r1, [r4, #60]	; 0x3c
   2b88c:	ldr	r2, [r4, #64]	; 0x40
   2b890:	ldr	r3, [r0, #8]
   2b894:	str	r3, [r4, #20]
   2b898:	ldr	r3, [r0]
   2b89c:	str	r3, [r4, #28]
   2b8a0:	add	r1, r1, r3
   2b8a4:	ldr	r7, [r0, #4]
   2b8a8:	str	r1, [r4, #16]
   2b8ac:	sub	r1, r2, r3
   2b8b0:	cmp	r1, r7
   2b8b4:	movhi	r1, r7
   2b8b8:	str	r1, [r4, #24]
   2b8bc:	ldrh	r1, [r4, #130]	; 0x82
   2b8c0:	ldrh	r2, [r4, #128]	; 0x80
   2b8c4:	cmp	r2, r1
   2b8c8:	strhcc	r1, [r4, #128]	; 0x80
   2b8cc:	ldrh	r1, [r0, #12]
   2b8d0:	sub	r0, r0, #36	; 0x24
   2b8d4:	str	r0, [r4, #32]
   2b8d8:	strh	r1, [r4, #130]	; 0x82
   2b8dc:	ldr	r0, [r4, #156]	; 0x9c
   2b8e0:	sub	r0, r0, #1
   2b8e4:	str	r0, [r4, #156]	; 0x9c
   2b8e8:	b	2b7cc <flatcc_builder_create_union_vector@@Base+0x38>

0002b8ec <flatcc_builder_create_union_vector_direct@@Base>:
   2b8ec:	push	{r4, r5, r6, r7, fp, lr}
   2b8f0:	add	fp, sp, #16
   2b8f4:	sub	sp, sp, #8
   2b8f8:	ldr	r7, [fp, #8]
   2b8fc:	mov	r5, r2
   2b900:	mov	r4, r0
   2b904:	mov	r0, #0
   2b908:	mov	r6, r1
   2b90c:	str	r0, [r4]
   2b910:	str	r0, [r4, #4]
   2b914:	mov	r0, r1
   2b918:	mov	r1, r3
   2b91c:	mov	r3, r5
   2b920:	mov	r2, r7
   2b924:	bl	2b094 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2b928:	cmp	r0, #0
   2b92c:	str	r0, [r4, #4]
   2b930:	beq	2b95c <flatcc_builder_create_union_vector_direct@@Base+0x70>
   2b934:	mvn	r0, #0
   2b938:	mov	r1, #1
   2b93c:	mov	r2, r7
   2b940:	mov	r3, #1
   2b944:	str	r1, [sp]
   2b948:	str	r0, [sp, #4]
   2b94c:	mov	r0, r6
   2b950:	mov	r1, r5
   2b954:	bl	2ae40 <flatcc_builder_create_vector@@Base>
   2b958:	str	r0, [r4]
   2b95c:	sub	sp, fp, #16
   2b960:	pop	{r4, r5, r6, r7, fp, pc}

0002b964 <flatcc_builder_start_union_vector@@Base>:
   2b964:	push	{r4, sl, fp, lr}
   2b968:	add	fp, sp, #8
   2b96c:	mov	r1, #4
   2b970:	mov	r4, r0
   2b974:	bl	29388 <flatcc_builder_start_buffer@@Base+0xbc>
   2b978:	mov	r1, r0
   2b97c:	mvn	r0, #0
   2b980:	cmp	r1, #0
   2b984:	popne	{r4, sl, fp, pc}
   2b988:	ldr	r0, [r4, #32]
   2b98c:	mov	r1, #8
   2b990:	mov	r2, #7
   2b994:	str	r1, [r0, #16]
   2b998:	mov	r0, #0
   2b99c:	ldr	r1, [r4, #32]
   2b9a0:	str	r0, [r1, #20]
   2b9a4:	ldr	r1, [r4, #32]
   2b9a8:	strh	r2, [r1, #14]
   2b9ac:	ldr	r2, [r4, #28]
   2b9b0:	ldr	r3, [r4, #60]	; 0x3c
   2b9b4:	ldr	ip, [r4, #64]	; 0x40
   2b9b8:	add	r3, r3, r2
   2b9bc:	sub	r2, ip, r2
   2b9c0:	str	r3, [r4, #16]
   2b9c4:	mvn	r3, #3
   2b9c8:	cmn	r2, #4
   2b9cc:	movcs	r2, r3
   2b9d0:	str	r2, [r4, #24]
   2b9d4:	str	r3, [r1, #4]
   2b9d8:	pop	{r4, sl, fp, pc}

0002b9dc <flatcc_builder_end_union_vector@@Base>:
   2b9dc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2b9e0:	add	fp, sp, #24
   2b9e4:	sub	sp, sp, #16
   2b9e8:	mov	r8, r0
   2b9ec:	mov	r0, #0
   2b9f0:	mov	r4, r1
   2b9f4:	str	r0, [r8]
   2b9f8:	str	r0, [r8, #4]
   2b9fc:	ldr	r0, [r1, #32]
   2ba00:	ldrh	r1, [r0, #14]
   2ba04:	cmp	r1, #7
   2ba08:	bne	2bb20 <flatcc_builder_end_union_vector@@Base+0x144>
   2ba0c:	ldr	r9, [r0, #20]
   2ba10:	ldr	r7, [r4, #20]
   2ba14:	ldr	r1, [r4, #24]
   2ba18:	add	r0, r9, r9, lsl #2
   2ba1c:	add	r0, r7, r0
   2ba20:	cmp	r0, r1
   2ba24:	str	r0, [r4, #20]
   2ba28:	bcc	2ba44 <flatcc_builder_end_union_vector@@Base+0x68>
   2ba2c:	add	r1, r0, #1
   2ba30:	mov	r0, r4
   2ba34:	mvn	r2, #3
   2ba38:	bl	2c3fc <flatcc_builder_get_emit_context@@Base+0x8>
   2ba3c:	cmp	r0, #0
   2ba40:	bne	2bb18 <flatcc_builder_end_union_vector@@Base+0x13c>
   2ba44:	ldr	r0, [r4, #16]
   2ba48:	adds	r3, r0, r7
   2ba4c:	beq	2bb18 <flatcc_builder_end_union_vector@@Base+0x13c>
   2ba50:	add	r2, r3, r9, lsl #2
   2ba54:	cmp	r9, #0
   2ba58:	beq	2ba88 <flatcc_builder_end_union_vector@@Base+0xac>
   2ba5c:	add	r0, r0, #4
   2ba60:	mov	r1, r2
   2ba64:	mov	r7, r3
   2ba68:	mov	r6, r9
   2ba6c:	ldrb	r5, [r0, #-4]
   2ba70:	subs	r6, r6, #1
   2ba74:	strb	r5, [r1], #1
   2ba78:	ldr	r5, [r0]
   2ba7c:	add	r0, r0, #8
   2ba80:	str	r5, [r7], #4
   2ba84:	bne	2ba6c <flatcc_builder_end_union_vector@@Base+0x90>
   2ba88:	add	r0, sp, #8
   2ba8c:	mov	r1, r4
   2ba90:	str	r9, [sp]
   2ba94:	bl	2b8ec <flatcc_builder_create_union_vector_direct@@Base>
   2ba98:	ldr	r0, [sp, #8]
   2ba9c:	ldr	r1, [sp, #12]
   2baa0:	stm	r8, {r0, r1}
   2baa4:	mov	r1, #0
   2baa8:	ldr	r0, [r4, #16]
   2baac:	ldr	r2, [r4, #20]
   2bab0:	bl	12b64 <memset@plt>
   2bab4:	ldr	r0, [r4, #32]
   2bab8:	ldr	r1, [r4, #60]	; 0x3c
   2babc:	ldr	r2, [r4, #64]	; 0x40
   2bac0:	ldr	r3, [r0, #8]
   2bac4:	str	r3, [r4, #20]
   2bac8:	ldr	r3, [r0]
   2bacc:	str	r3, [r4, #28]
   2bad0:	add	r1, r1, r3
   2bad4:	ldr	r7, [r0, #4]
   2bad8:	str	r1, [r4, #16]
   2badc:	sub	r1, r2, r3
   2bae0:	cmp	r1, r7
   2bae4:	movhi	r1, r7
   2bae8:	str	r1, [r4, #24]
   2baec:	ldrh	r1, [r4, #130]	; 0x82
   2baf0:	ldrh	r2, [r4, #128]	; 0x80
   2baf4:	cmp	r2, r1
   2baf8:	strhcc	r1, [r4, #128]	; 0x80
   2bafc:	ldrh	r1, [r0, #12]
   2bb00:	sub	r0, r0, #36	; 0x24
   2bb04:	str	r0, [r4, #32]
   2bb08:	strh	r1, [r4, #130]	; 0x82
   2bb0c:	ldr	r0, [r4, #156]	; 0x9c
   2bb10:	sub	r0, r0, #1
   2bb14:	str	r0, [r4, #156]	; 0x9c
   2bb18:	sub	sp, fp, #24
   2bb1c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2bb20:	movw	r0, #7952	; 0x1f10
   2bb24:	movw	r1, #4846	; 0x12ee
   2bb28:	movw	r3, #8002	; 0x1f42
   2bb2c:	movw	r2, #1617	; 0x651
   2bb30:	movt	r0, #3
   2bb34:	movt	r1, #3
   2bb38:	movt	r3, #3
   2bb3c:	bl	12bc4 <__assert_fail@plt>

0002bb40 <flatcc_builder_union_vector_count@@Base>:
   2bb40:	ldr	r0, [r0, #32]
   2bb44:	ldr	r0, [r0, #20]
   2bb48:	bx	lr

0002bb4c <flatcc_builder_union_vector_edit@@Base>:
   2bb4c:	ldr	r0, [r0, #16]
   2bb50:	bx	lr

0002bb54 <flatcc_builder_extend_union_vector@@Base>:
   2bb54:	push	{r4, r5, fp, lr}
   2bb58:	add	fp, sp, #8
   2bb5c:	mov	r4, r0
   2bb60:	ldr	r0, [r0, #32]
   2bb64:	ldr	r2, [r0, #20]
   2bb68:	adds	r2, r2, r1
   2bb6c:	cmpcc	r2, #536870912	; 0x20000000
   2bb70:	bcc	2bb94 <flatcc_builder_extend_union_vector@@Base+0x40>
   2bb74:	movw	r0, #9117	; 0x239d
   2bb78:	movw	r1, #4846	; 0x12ee
   2bb7c:	movw	r3, #9144	; 0x23b8
   2bb80:	mov	r2, #892	; 0x37c
   2bb84:	movt	r0, #3
   2bb88:	movt	r1, #3
   2bb8c:	movt	r3, #3
   2bb90:	bl	12bc4 <__assert_fail@plt>
   2bb94:	str	r2, [r0, #20]
   2bb98:	ldr	r5, [r4, #20]
   2bb9c:	ldr	r2, [r4, #24]
   2bba0:	add	r0, r5, r1, lsl #3
   2bba4:	cmp	r0, r2
   2bba8:	str	r0, [r4, #20]
   2bbac:	bcc	2bbd0 <flatcc_builder_extend_union_vector@@Base+0x7c>
   2bbb0:	add	r1, r0, #1
   2bbb4:	mov	r0, r4
   2bbb8:	mvn	r2, #3
   2bbbc:	bl	2c3fc <flatcc_builder_get_emit_context@@Base+0x8>
   2bbc0:	mov	r1, r0
   2bbc4:	mov	r0, #0
   2bbc8:	cmp	r1, #0
   2bbcc:	popne	{r4, r5, fp, pc}
   2bbd0:	ldr	r0, [r4, #16]
   2bbd4:	add	r0, r0, r5
   2bbd8:	pop	{r4, r5, fp, pc}

0002bbdc <flatcc_builder_truncate_union_vector@@Base>:
   2bbdc:	push	{fp, lr}
   2bbe0:	mov	fp, sp
   2bbe4:	ldr	r2, [r0, #32]
   2bbe8:	ldrh	r3, [r2, #14]
   2bbec:	cmp	r3, #7
   2bbf0:	bne	2bc38 <flatcc_builder_truncate_union_vector@@Base+0x5c>
   2bbf4:	ldr	r3, [r2, #20]
   2bbf8:	cmp	r3, r1
   2bbfc:	bcc	2bc50 <flatcc_builder_truncate_union_vector@@Base+0x74>
   2bc00:	sub	r3, r3, r1
   2bc04:	str	r3, [r2, #20]
   2bc08:	ldr	r2, [r0, #32]
   2bc0c:	ldr	r3, [r0, #20]
   2bc10:	ldr	ip, [r0, #16]
   2bc14:	ldr	r2, [r2, #16]
   2bc18:	mls	r3, r2, r1, r3
   2bc1c:	mul	r2, r2, r1
   2bc20:	mov	r1, #0
   2bc24:	str	r3, [r0, #20]
   2bc28:	add	r0, ip, r3
   2bc2c:	bl	12b64 <memset@plt>
   2bc30:	mov	r0, #0
   2bc34:	pop	{fp, pc}
   2bc38:	movw	r0, #7952	; 0x1f10
   2bc3c:	movw	r1, #4846	; 0x12ee
   2bc40:	movw	r3, #8085	; 0x1f95
   2bc44:	movw	r2, #1665	; 0x681
   2bc48:	movt	r0, #3
   2bc4c:	b	2bc64 <flatcc_builder_truncate_union_vector@@Base+0x88>
   2bc50:	movw	r0, #6516	; 0x1974
   2bc54:	movw	r1, #4846	; 0x12ee
   2bc58:	movw	r3, #8085	; 0x1f95
   2bc5c:	movw	r2, #1666	; 0x682
   2bc60:	movt	r0, #3
   2bc64:	movt	r1, #3
   2bc68:	movt	r3, #3
   2bc6c:	bl	12bc4 <__assert_fail@plt>

0002bc70 <flatcc_builder_union_vector_push@@Base>:
   2bc70:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2bc74:	add	fp, sp, #24
   2bc78:	mov	r7, r0
   2bc7c:	ldr	r0, [r0, #32]
   2bc80:	mov	r5, r1
   2bc84:	ldrh	r1, [r0, #14]
   2bc88:	cmp	r1, #7
   2bc8c:	bne	2bcf4 <flatcc_builder_union_vector_push@@Base+0x84>
   2bc90:	ldr	r1, [r0, #20]
   2bc94:	mov	r6, #0
   2bc98:	cmn	r1, #-536870911	; 0xe0000001
   2bc9c:	beq	2bcec <flatcc_builder_union_vector_push@@Base+0x7c>
   2bca0:	add	r1, r1, #1
   2bca4:	mov	r8, r2
   2bca8:	str	r1, [r0, #20]
   2bcac:	ldr	r4, [r7, #20]
   2bcb0:	ldr	r0, [r7, #24]
   2bcb4:	add	r1, r4, #8
   2bcb8:	cmp	r1, r0
   2bcbc:	str	r1, [r7, #20]
   2bcc0:	bcc	2bcdc <flatcc_builder_union_vector_push@@Base+0x6c>
   2bcc4:	add	r1, r4, #9
   2bcc8:	mov	r0, r7
   2bccc:	mvn	r2, #3
   2bcd0:	bl	2c3fc <flatcc_builder_get_emit_context@@Base+0x8>
   2bcd4:	cmp	r0, #0
   2bcd8:	bne	2bcec <flatcc_builder_union_vector_push@@Base+0x7c>
   2bcdc:	ldr	r0, [r7, #16]
   2bce0:	adds	r0, r0, r4
   2bce4:	movne	r6, r0
   2bce8:	stmne	r0, {r5, r8}
   2bcec:	mov	r0, r6
   2bcf0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2bcf4:	movw	r0, #7952	; 0x1f10
   2bcf8:	movw	r1, #4846	; 0x12ee
   2bcfc:	movw	r3, #8154	; 0x1fda
   2bd00:	movw	r2, #1677	; 0x68d
   2bd04:	movt	r0, #3
   2bd08:	movt	r1, #3
   2bd0c:	movt	r3, #3
   2bd10:	bl	12bc4 <__assert_fail@plt>

0002bd14 <flatcc_builder_append_union_vector@@Base>:
   2bd14:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2bd18:	add	fp, sp, #24
   2bd1c:	mov	r6, r0
   2bd20:	ldr	r0, [r0, #32]
   2bd24:	mov	r8, r1
   2bd28:	ldrh	r1, [r0, #14]
   2bd2c:	cmp	r1, #7
   2bd30:	bne	2bdcc <flatcc_builder_append_union_vector@@Base+0xb8>
   2bd34:	ldr	r1, [r0, #20]
   2bd38:	mov	r5, r2
   2bd3c:	adds	r1, r1, r2
   2bd40:	cmpcc	r1, #536870912	; 0x20000000
   2bd44:	bcc	2bd68 <flatcc_builder_append_union_vector@@Base+0x54>
   2bd48:	movw	r0, #9117	; 0x239d
   2bd4c:	movw	r1, #4846	; 0x12ee
   2bd50:	movw	r3, #9144	; 0x23b8
   2bd54:	mov	r2, #892	; 0x37c
   2bd58:	movt	r0, #3
   2bd5c:	movt	r1, #3
   2bd60:	movt	r3, #3
   2bd64:	bl	12bc4 <__assert_fail@plt>
   2bd68:	str	r1, [r0, #20]
   2bd6c:	ldr	r4, [r6, #20]
   2bd70:	ldr	r1, [r6, #24]
   2bd74:	add	r0, r4, r5, lsl #3
   2bd78:	cmp	r0, r1
   2bd7c:	str	r0, [r6, #20]
   2bd80:	bcc	2bda0 <flatcc_builder_append_union_vector@@Base+0x8c>
   2bd84:	add	r1, r0, #1
   2bd88:	mov	r0, r6
   2bd8c:	mvn	r2, #3
   2bd90:	bl	2c3fc <flatcc_builder_get_emit_context@@Base+0x8>
   2bd94:	mov	r7, #0
   2bd98:	cmp	r0, #0
   2bd9c:	bne	2bdc4 <flatcc_builder_append_union_vector@@Base+0xb0>
   2bda0:	ldr	r0, [r6, #16]
   2bda4:	adds	r7, r0, r4
   2bda8:	beq	2bdc0 <flatcc_builder_append_union_vector@@Base+0xac>
   2bdac:	lsl	r2, r5, #3
   2bdb0:	mov	r0, r7
   2bdb4:	mov	r1, r8
   2bdb8:	bl	12ab0 <memcpy@plt>
   2bdbc:	b	2bdc4 <flatcc_builder_append_union_vector@@Base+0xb0>
   2bdc0:	mov	r7, #0
   2bdc4:	mov	r0, r7
   2bdc8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2bdcc:	movw	r0, #7952	; 0x1f10
   2bdd0:	movw	r1, #4846	; 0x12ee
   2bdd4:	movw	r3, #8263	; 0x2047
   2bdd8:	movw	r2, #1692	; 0x69c
   2bddc:	movt	r0, #3
   2bde0:	movt	r1, #3
   2bde4:	movt	r3, #3
   2bde8:	bl	12bc4 <__assert_fail@plt>

0002bdec <flatcc_builder_create_string@@Base>:
   2bdec:	push	{r4, r5, r6, sl, fp, lr}
   2bdf0:	add	fp, sp, #16
   2bdf4:	sub	sp, sp, #80	; 0x50
   2bdf8:	str	r2, [fp, #-20]	; 0xffffffec
   2bdfc:	mvn	r5, r2
   2be00:	mov	r6, r0
   2be04:	sub	r3, fp, #20
   2be08:	cmp	r2, #0
   2be0c:	add	lr, sp, #4
   2be10:	ldr	ip, [r0, #136]	; 0x88
   2be14:	mov	r0, #4
   2be18:	str	r0, [sp, #16]
   2be1c:	str	r3, [sp, #12]
   2be20:	mov	r3, #1
   2be24:	str	r0, [sp, #4]
   2be28:	addne	r0, r2, #4
   2be2c:	str	r3, [sp, #8]
   2be30:	strne	r2, [sp, #24]
   2be34:	movw	r2, #4316	; 0x10dc
   2be38:	movne	r3, #2
   2be3c:	strne	r1, [sp, #20]
   2be40:	strne	r3, [sp, #8]
   2be44:	strne	r0, [sp, #4]
   2be48:	movt	r2, #3
   2be4c:	add	r5, ip, r5
   2be50:	and	r5, r5, #3
   2be54:	add	r5, r5, #1
   2be58:	add	r1, r0, r5
   2be5c:	add	r0, lr, r3, lsl #3
   2be60:	str	r1, [sp, #4]
   2be64:	cmp	r1, #0
   2be68:	str	r2, [r0, #8]
   2be6c:	add	r2, r3, #1
   2be70:	str	r5, [r0, #12]
   2be74:	str	r2, [sp, #8]
   2be78:	ble	2becc <flatcc_builder_create_string@@Base+0xe0>
   2be7c:	ldr	r0, [r6, #36]	; 0x24
   2be80:	ldr	r4, [r6, #44]	; 0x2c
   2be84:	sub	r5, ip, r1
   2be88:	str	r1, [sp]
   2be8c:	add	r1, lr, #8
   2be90:	mov	r3, r5
   2be94:	blx	r4
   2be98:	cmp	r0, #0
   2be9c:	streq	r5, [r6, #136]	; 0x88
   2bea0:	moveq	r0, r5
   2bea4:	subeq	sp, fp, #16
   2bea8:	popeq	{r4, r5, r6, sl, fp, pc}
   2beac:	movw	r0, #9364	; 0x2494
   2beb0:	movw	r1, #4846	; 0x12ee
   2beb4:	movw	r3, #9043	; 0x2353
   2beb8:	movw	r2, #651	; 0x28b
   2bebc:	movt	r0, #3
   2bec0:	movt	r1, #3
   2bec4:	movt	r3, #3
   2bec8:	bl	12bc4 <__assert_fail@plt>
   2becc:	movw	r0, #9364	; 0x2494
   2bed0:	movw	r1, #4846	; 0x12ee
   2bed4:	movw	r3, #9043	; 0x2353
   2bed8:	movw	r2, #647	; 0x287
   2bedc:	movt	r0, #3
   2bee0:	movt	r1, #3
   2bee4:	movt	r3, #3
   2bee8:	bl	12bc4 <__assert_fail@plt>

0002beec <flatcc_builder_create_string_str@@Base>:
   2beec:	push	{r4, r5, fp, lr}
   2bef0:	add	fp, sp, #8
   2bef4:	mov	r5, r0
   2bef8:	mov	r0, r1
   2befc:	mov	r4, r1
   2bf00:	bl	12b40 <strlen@plt>
   2bf04:	mov	r2, r0
   2bf08:	mov	r0, r5
   2bf0c:	mov	r1, r4
   2bf10:	pop	{r4, r5, fp, lr}
   2bf14:	b	2bdec <flatcc_builder_create_string@@Base>

0002bf18 <flatcc_builder_create_string_strn@@Base>:
   2bf18:	push	{r4, r5, r6, sl, fp, lr}
   2bf1c:	add	fp, sp, #16
   2bf20:	mov	r6, r0
   2bf24:	mov	r5, r1
   2bf28:	mov	r0, r1
   2bf2c:	mov	r1, #0
   2bf30:	mov	r4, r2
   2bf34:	bl	12b7c <memchr@plt>
   2bf38:	cmp	r0, #0
   2bf3c:	mov	r1, r5
   2bf40:	subne	r4, r0, r5
   2bf44:	mov	r0, r6
   2bf48:	mov	r2, r4
   2bf4c:	pop	{r4, r5, r6, sl, fp, lr}
   2bf50:	b	2bdec <flatcc_builder_create_string@@Base>

0002bf54 <flatcc_builder_end_string@@Base>:
   2bf54:	push	{r4, r5, fp, lr}
   2bf58:	add	fp, sp, #8
   2bf5c:	mov	r4, r0
   2bf60:	ldr	r0, [r0, #32]
   2bf64:	ldrh	r1, [r0, #14]
   2bf68:	cmp	r1, #6
   2bf6c:	bne	2c014 <flatcc_builder_end_string@@Base+0xc0>
   2bf70:	ldr	r2, [r0, #20]
   2bf74:	ldr	r0, [r4, #20]
   2bf78:	cmp	r2, r0
   2bf7c:	bne	2c02c <flatcc_builder_end_string@@Base+0xd8>
   2bf80:	ldr	r1, [r4, #16]
   2bf84:	mov	r0, r4
   2bf88:	bl	2bdec <flatcc_builder_create_string@@Base>
   2bf8c:	mov	r5, r0
   2bf90:	cmp	r0, #0
   2bf94:	beq	2c00c <flatcc_builder_end_string@@Base+0xb8>
   2bf98:	ldr	r0, [r4, #16]
   2bf9c:	ldr	r2, [r4, #20]
   2bfa0:	mov	r1, #0
   2bfa4:	bl	12b64 <memset@plt>
   2bfa8:	ldr	r0, [r4, #32]
   2bfac:	ldr	r1, [r4, #60]	; 0x3c
   2bfb0:	ldr	ip, [r4, #64]	; 0x40
   2bfb4:	ldr	r3, [r0, #8]
   2bfb8:	str	r3, [r4, #20]
   2bfbc:	ldr	r3, [r0]
   2bfc0:	str	r3, [r4, #28]
   2bfc4:	add	r1, r1, r3
   2bfc8:	ldr	r2, [r0, #4]
   2bfcc:	str	r1, [r4, #16]
   2bfd0:	sub	r1, ip, r3
   2bfd4:	cmp	r1, r2
   2bfd8:	movhi	r1, r2
   2bfdc:	str	r1, [r4, #24]
   2bfe0:	ldrh	r1, [r4, #130]	; 0x82
   2bfe4:	ldrh	r2, [r4, #128]	; 0x80
   2bfe8:	cmp	r2, r1
   2bfec:	strhcc	r1, [r4, #128]	; 0x80
   2bff0:	ldrh	r1, [r0, #12]
   2bff4:	sub	r0, r0, #36	; 0x24
   2bff8:	str	r0, [r4, #32]
   2bffc:	strh	r1, [r4, #130]	; 0x82
   2c000:	ldr	r0, [r4, #156]	; 0x9c
   2c004:	sub	r0, r0, #1
   2c008:	str	r0, [r4, #156]	; 0x9c
   2c00c:	mov	r0, r5
   2c010:	pop	{r4, r5, fp, pc}
   2c014:	movw	r0, #6163	; 0x1813
   2c018:	movw	r1, #4846	; 0x12ee
   2c01c:	movw	r3, #8390	; 0x20c6
   2c020:	movw	r2, #1732	; 0x6c4
   2c024:	movt	r0, #3
   2c028:	b	2c040 <flatcc_builder_end_string@@Base+0xec>
   2c02c:	movw	r0, #8457	; 0x2109
   2c030:	movw	r1, #4846	; 0x12ee
   2c034:	movw	r3, #8390	; 0x20c6
   2c038:	movw	r2, #1733	; 0x6c5
   2c03c:	movt	r0, #3
   2c040:	movt	r1, #3
   2c044:	movt	r3, #3
   2c048:	bl	12bc4 <__assert_fail@plt>

0002c04c <flatcc_builder_string_edit@@Base>:
   2c04c:	ldr	r0, [r0, #16]
   2c050:	bx	lr

0002c054 <flatcc_builder_string_len@@Base>:
   2c054:	ldr	r0, [r0, #32]
   2c058:	ldr	r0, [r0, #20]
   2c05c:	bx	lr

0002c060 <flatcc_builder_table_edit@@Base>:
   2c060:	push	{fp, lr}
   2c064:	mov	fp, sp
   2c068:	ldr	r2, [r0, #32]
   2c06c:	ldrh	r2, [r2, #14]
   2c070:	cmp	r2, #3
   2c074:	ldreq	r2, [r0, #16]
   2c078:	ldreq	r0, [r0, #20]
   2c07c:	addeq	r0, r2, r0
   2c080:	subeq	r0, r0, r1
   2c084:	popeq	{fp, pc}
   2c088:	movw	r0, #6915	; 0x1b03
   2c08c:	movw	r1, #4846	; 0x12ee
   2c090:	movw	r3, #8635	; 0x21bb
   2c094:	movw	r2, #1794	; 0x702
   2c098:	movt	r0, #3
   2c09c:	movt	r1, #3
   2c0a0:	movt	r3, #3
   2c0a4:	bl	12bc4 <__assert_fail@plt>

0002c0a8 <flatcc_builder_table_add_copy@@Base>:
   2c0a8:	push	{r4, r5, r6, sl, fp, lr}
   2c0ac:	add	fp, sp, #16
   2c0b0:	mov	r4, r3
   2c0b4:	ldr	r3, [fp, #8]
   2c0b8:	mov	r5, r2
   2c0bc:	mov	r2, r4
   2c0c0:	bl	2b574 <flatcc_builder_table_add@@Base>
   2c0c4:	mov	r6, r0
   2c0c8:	cmp	r0, #0
   2c0cc:	beq	2c0e0 <flatcc_builder_table_add_copy@@Base+0x38>
   2c0d0:	mov	r0, r6
   2c0d4:	mov	r1, r5
   2c0d8:	mov	r2, r4
   2c0dc:	bl	12ab0 <memcpy@plt>
   2c0e0:	mov	r0, r6
   2c0e4:	pop	{r4, r5, r6, sl, fp, pc}

0002c0e8 <flatcc_builder_push_buffer_alignment@@Base>:
   2c0e8:	ldrh	r1, [r0, #128]	; 0x80
   2c0ec:	mov	r2, #4
   2c0f0:	strh	r2, [r0, #128]	; 0x80
   2c0f4:	mov	r0, r1
   2c0f8:	bx	lr

0002c0fc <flatcc_builder_pop_buffer_alignment@@Base>:
   2c0fc:	ldrh	r2, [r0, #128]	; 0x80
   2c100:	cmp	r2, r1
   2c104:	strhcc	r1, [r0, #128]	; 0x80
   2c108:	bx	lr

0002c10c <flatcc_builder_get_buffer_alignment@@Base>:
   2c10c:	ldrh	r0, [r0, #128]	; 0x80
   2c110:	bx	lr

0002c114 <flatcc_builder_set_vtable_clustering@@Base>:
   2c114:	clz	r1, r1
   2c118:	lsr	r1, r1, #5
   2c11c:	str	r1, [r0, #180]	; 0xb4
   2c120:	bx	lr

0002c124 <flatcc_builder_set_block_align@@Base>:
   2c124:	strh	r1, [r0, #132]	; 0x84
   2c128:	bx	lr

0002c12c <flatcc_builder_get_level@@Base>:
   2c12c:	ldr	r0, [r0, #156]	; 0x9c
   2c130:	bx	lr

0002c134 <flatcc_builder_set_max_level@@Base>:
   2c134:	str	r1, [r0, #176]	; 0xb0
   2c138:	ldr	r2, [r0, #160]	; 0xa0
   2c13c:	cmp	r2, r1
   2c140:	strlt	r1, [r0, #160]	; 0xa0
   2c144:	bx	lr

0002c148 <flatcc_builder_get_buffer_size@@Base>:
   2c148:	ldr	r1, [r0, #136]	; 0x88
   2c14c:	ldr	r0, [r0, #140]	; 0x8c
   2c150:	sub	r0, r0, r1
   2c154:	bx	lr

0002c158 <flatcc_builder_get_buffer_start@@Base>:
   2c158:	ldr	r0, [r0, #136]	; 0x88
   2c15c:	bx	lr

0002c160 <flatcc_builder_get_buffer_end@@Base>:
   2c160:	ldr	r0, [r0, #140]	; 0x8c
   2c164:	bx	lr

0002c168 <flatcc_builder_set_vtable_cache_limit@@Base>:
   2c168:	str	r1, [r0, #172]	; 0xac
   2c16c:	bx	lr

0002c170 <flatcc_builder_set_identifier@@Base>:
   2c170:	movw	r2, #4316	; 0x10dc
   2c174:	cmp	r1, #0
   2c178:	movt	r2, #3
   2c17c:	movne	r2, r1
   2c180:	ldr	r1, [r2]
   2c184:	str	r1, [r0, #168]	; 0xa8
   2c188:	bx	lr

0002c18c <flatcc_builder_get_type@@Base>:
   2c18c:	ldr	r0, [r0, #32]
   2c190:	cmp	r0, #0
   2c194:	ldrhne	r0, [r0, #14]
   2c198:	moveq	r0, #0
   2c19c:	bx	lr

0002c1a0 <flatcc_builder_get_type_at@@Base>:
   2c1a0:	mov	r2, r0
   2c1a4:	mov	r0, #0
   2c1a8:	cmp	r1, #1
   2c1ac:	blt	2c1d0 <flatcc_builder_get_type_at@@Base+0x30>
   2c1b0:	ldr	r3, [r2, #156]	; 0x9c
   2c1b4:	cmp	r3, r1
   2c1b8:	bxlt	lr
   2c1bc:	sub	r0, r1, r3
   2c1c0:	ldr	r1, [r2, #32]
   2c1c4:	add	r0, r0, r0, lsl #3
   2c1c8:	add	r0, r1, r0, lsl #2
   2c1cc:	ldrh	r0, [r0, #14]
   2c1d0:	bx	lr

0002c1d4 <flatcc_builder_get_direct_buffer@@Base>:
   2c1d4:	ldr	r2, [r0, #184]	; 0xb8
   2c1d8:	cmp	r2, #0
   2c1dc:	beq	2c1f0 <flatcc_builder_get_direct_buffer@@Base+0x1c>
   2c1e0:	ldr	r2, [r0, #188]	; 0xbc
   2c1e4:	ldr	r3, [r0, #192]	; 0xc0
   2c1e8:	cmp	r2, r3
   2c1ec:	beq	2c200 <flatcc_builder_get_direct_buffer@@Base+0x2c>
   2c1f0:	mov	r0, #0
   2c1f4:	cmp	r1, #0
   2c1f8:	strne	r0, [r1]
   2c1fc:	bx	lr
   2c200:	cmp	r1, #0
   2c204:	ldrne	r2, [r0, #212]	; 0xd4
   2c208:	strne	r2, [r1]
   2c20c:	ldr	r0, [r0, #196]	; 0xc4
   2c210:	bx	lr

0002c214 <flatcc_builder_copy_buffer@@Base>:
   2c214:	push	{fp, lr}
   2c218:	mov	fp, sp
   2c21c:	ldr	r3, [r0, #184]	; 0xb8
   2c220:	cmp	r3, #0
   2c224:	beq	2c258 <flatcc_builder_copy_buffer@@Base+0x44>
   2c228:	add	r0, r0, #188	; 0xbc
   2c22c:	bl	2c920 <flatcc_emitter_copy_buffer@@Base>
   2c230:	cmp	r0, #0
   2c234:	popne	{fp, pc}
   2c238:	movw	r0, #5442	; 0x1542
   2c23c:	movw	r1, #4846	; 0x12ee
   2c240:	movw	r3, #8774	; 0x2246
   2c244:	movw	r2, #1926	; 0x786
   2c248:	movt	r0, #3
   2c24c:	movt	r1, #3
   2c250:	movt	r3, #3
   2c254:	bl	12bc4 <__assert_fail@plt>
   2c258:	mov	r0, #0
   2c25c:	pop	{fp, pc}

0002c260 <flatcc_builder_finalize_buffer@@Base>:
   2c260:	push	{r4, r5, r6, sl, fp, lr}
   2c264:	add	fp, sp, #16
   2c268:	mov	r4, r0
   2c26c:	ldr	r0, [r0, #136]	; 0x88
   2c270:	cmp	r1, #0
   2c274:	ldr	r2, [r4, #140]	; 0x8c
   2c278:	sub	r5, r2, r0
   2c27c:	mov	r0, r5
   2c280:	strne	r5, [r1]
   2c284:	bl	12b04 <malloc@plt>
   2c288:	cmp	r0, #0
   2c28c:	beq	2c2d0 <flatcc_builder_finalize_buffer@@Base+0x70>
   2c290:	mov	r6, r0
   2c294:	mov	r0, r4
   2c298:	mov	r2, r5
   2c29c:	mov	r1, r6
   2c2a0:	bl	2c214 <flatcc_builder_copy_buffer@@Base>
   2c2a4:	cmp	r0, #0
   2c2a8:	movne	r0, r6
   2c2ac:	popne	{r4, r5, r6, sl, fp, pc}
   2c2b0:	movw	r0, #9364	; 0x2494
   2c2b4:	movw	r1, #4846	; 0x12ee
   2c2b8:	movw	r3, #8843	; 0x228b
   2c2bc:	movw	r2, #1948	; 0x79c
   2c2c0:	movt	r0, #3
   2c2c4:	movt	r1, #3
   2c2c8:	movt	r3, #3
   2c2cc:	bl	12bc4 <__assert_fail@plt>
   2c2d0:	movw	r0, #9364	; 0x2494
   2c2d4:	movw	r1, #4846	; 0x12ee
   2c2d8:	movw	r3, #8843	; 0x228b
   2c2dc:	movw	r2, #1944	; 0x798
   2c2e0:	movt	r0, #3
   2c2e4:	movt	r1, #3
   2c2e8:	movt	r3, #3
   2c2ec:	bl	12bc4 <__assert_fail@plt>

0002c2f0 <flatcc_builder_finalize_aligned_buffer@@Base>:
   2c2f0:	push	{r4, r5, r6, r7, fp, lr}
   2c2f4:	add	fp, sp, #16
   2c2f8:	sub	sp, sp, #8
   2c2fc:	mov	r5, r0
   2c300:	mov	r4, r1
   2c304:	ldr	r0, [r0, #136]	; 0x88
   2c308:	ldr	r1, [r5, #140]	; 0x8c
   2c30c:	cmp	r4, #0
   2c310:	sub	r0, r1, r0
   2c314:	mov	r1, #0
   2c318:	strne	r0, [r4]
   2c31c:	ldrh	r2, [r5, #128]	; 0x80
   2c320:	str	r1, [sp, #4]
   2c324:	add	r0, r0, r2
   2c328:	cmp	r2, #4
   2c32c:	mov	r1, r2
   2c330:	rsb	r2, r2, #0
   2c334:	sub	r0, r0, #1
   2c338:	movls	r1, #4
   2c33c:	and	r7, r0, r2
   2c340:	add	r0, sp, #4
   2c344:	mov	r2, r7
   2c348:	bl	12b58 <posix_memalign@plt>
   2c34c:	ldr	r6, [sp, #4]
   2c350:	cmp	r0, #0
   2c354:	cmpne	r6, #0
   2c358:	bne	2c37c <flatcc_builder_finalize_aligned_buffer@@Base+0x8c>
   2c35c:	cmp	r6, #0
   2c360:	beq	2c384 <flatcc_builder_finalize_aligned_buffer@@Base+0x94>
   2c364:	mov	r0, r5
   2c368:	mov	r1, r6
   2c36c:	mov	r2, r7
   2c370:	bl	2c214 <flatcc_builder_copy_buffer@@Base>
   2c374:	cmp	r0, #0
   2c378:	bne	2c390 <flatcc_builder_finalize_aligned_buffer@@Base+0xa0>
   2c37c:	mov	r0, r6
   2c380:	bl	12aa4 <free@plt>
   2c384:	mov	r6, #0
   2c388:	cmp	r4, #0
   2c38c:	strne	r6, [r4]
   2c390:	mov	r0, r6
   2c394:	sub	sp, fp, #16
   2c398:	pop	{r4, r5, r6, r7, fp, pc}

0002c39c <flatcc_builder_aligned_alloc@@Base>:
   2c39c:	push	{fp, lr}
   2c3a0:	mov	fp, sp
   2c3a4:	sub	sp, sp, #8
   2c3a8:	mov	r2, r1
   2c3ac:	mov	r1, r0
   2c3b0:	mov	r0, #0
   2c3b4:	cmp	r1, #4
   2c3b8:	str	r0, [sp, #4]
   2c3bc:	add	r0, sp, #4
   2c3c0:	movls	r1, #4
   2c3c4:	bl	12b58 <posix_memalign@plt>
   2c3c8:	mov	r1, r0
   2c3cc:	ldr	r0, [sp, #4]
   2c3d0:	cmp	r1, #0
   2c3d4:	cmpne	r0, #0
   2c3d8:	beq	2c3e8 <flatcc_builder_aligned_alloc@@Base+0x4c>
   2c3dc:	bl	12aa4 <free@plt>
   2c3e0:	mov	r0, #0
   2c3e4:	str	r0, [sp, #4]
   2c3e8:	mov	sp, fp
   2c3ec:	pop	{fp, pc}

0002c3f0 <flatcc_builder_aligned_free@@Base>:
   2c3f0:	b	12aa4 <free@plt>

0002c3f4 <flatcc_builder_get_emit_context@@Base>:
   2c3f4:	ldr	r0, [r0, #36]	; 0x24
   2c3f8:	bx	lr
   2c3fc:	push	{r4, r5, r6, sl, fp, lr}
   2c400:	add	fp, sp, #16
   2c404:	sub	sp, sp, #8
   2c408:	mov	r6, r2
   2c40c:	ldr	r2, [r0, #28]
   2c410:	mov	r5, r0
   2c414:	ldr	r0, [r0, #40]	; 0x28
   2c418:	mov	r3, #1
   2c41c:	ldr	r4, [r5, #48]	; 0x30
   2c420:	str	r3, [sp]
   2c424:	mov	r3, #1
   2c428:	add	r2, r2, r1
   2c42c:	add	r1, r5, #60	; 0x3c
   2c430:	blx	r4
   2c434:	mov	r1, r0
   2c438:	mvn	r0, #0
   2c43c:	cmp	r1, #0
   2c440:	bne	2c474 <flatcc_builder_get_emit_context@@Base+0x80>
   2c444:	ldr	r0, [r5, #28]
   2c448:	ldr	r2, [r5, #60]	; 0x3c
   2c44c:	ldr	r3, [r5, #64]	; 0x40
   2c450:	ldr	r1, [r5, #32]
   2c454:	add	r2, r2, r0
   2c458:	sub	r0, r3, r0
   2c45c:	cmp	r0, r6
   2c460:	str	r2, [r5, #16]
   2c464:	movhi	r0, r6
   2c468:	str	r0, [r5, #24]
   2c46c:	mov	r0, #0
   2c470:	str	r6, [r1, #4]
   2c474:	sub	sp, fp, #16
   2c478:	pop	{r4, r5, r6, sl, fp, pc}

0002c47c <flatcc_emitter_recycle_page@@Base>:
   2c47c:	ldr	r3, [r0]
   2c480:	mov	r2, r0
   2c484:	mvn	r0, #0
   2c488:	cmp	r3, r1
   2c48c:	beq	2c4cc <flatcc_emitter_recycle_page@@Base+0x50>
   2c490:	ldr	r2, [r2, #4]
   2c494:	cmp	r2, r1
   2c498:	bxeq	lr
   2c49c:	ldr	r0, [r1, #2944]	; 0xb80
   2c4a0:	ldr	r2, [r1, #2948]	; 0xb84
   2c4a4:	str	r2, [r0, #2948]	; 0xb84
   2c4a8:	ldr	r2, [r1, #2948]	; 0xb84
   2c4ac:	str	r0, [r2, #2944]	; 0xb80
   2c4b0:	ldr	r0, [r3, #2948]	; 0xb84
   2c4b4:	str	r3, [r1, #2944]	; 0xb80
   2c4b8:	str	r0, [r1, #2948]	; 0xb84
   2c4bc:	str	r1, [r0, #2944]	; 0xb80
   2c4c0:	ldr	r0, [r1, #2944]	; 0xb80
   2c4c4:	str	r1, [r0, #2948]	; 0xb84
   2c4c8:	mov	r0, #0
   2c4cc:	bx	lr

0002c4d0 <flatcc_emitter_reset@@Base>:
   2c4d0:	push	{r4, sl, fp, lr}
   2c4d4:	add	fp, sp, #8
   2c4d8:	ldr	r1, [r0]
   2c4dc:	cmp	r1, #0
   2c4e0:	beq	2c598 <flatcc_emitter_reset@@Base+0xc8>
   2c4e4:	mov	r4, r0
   2c4e8:	add	r2, r1, #1472	; 0x5c0
   2c4ec:	mov	r0, #1472	; 0x5c0
   2c4f0:	mov	r3, #0
   2c4f4:	stmib	r4, {r1, r2}
   2c4f8:	str	r0, [r4, #12]
   2c4fc:	str	r2, [r4, #16]
   2c500:	str	r0, [r4, #20]
   2c504:	movw	r0, #64064	; 0xfa40
   2c508:	movt	r0, #65535	; 0xffff
   2c50c:	str	r0, [r1, #2952]	; 0xb88
   2c510:	ldr	r2, [r4, #32]
   2c514:	ldr	r0, [r4, #24]
   2c518:	cmp	r2, #0
   2c51c:	moveq	r2, r0
   2c520:	streq	r0, [r4, #32]
   2c524:	str	r3, [r4, #24]
   2c528:	add	r2, r2, r2, lsl #1
   2c52c:	lsr	r2, r2, #2
   2c530:	add	r0, r2, r0, lsr #2
   2c534:	str	r0, [r4, #32]
   2c538:	ldr	r2, [r4, #28]
   2c53c:	cmp	r2, r0, lsl #1
   2c540:	bls	2c598 <flatcc_emitter_reset@@Base+0xc8>
   2c544:	mov	r2, r1
   2c548:	ldr	r0, [r2, #2944]!	; 0xb80
   2c54c:	cmp	r0, r1
   2c550:	popeq	{r4, sl, fp, pc}
   2c554:	ldr	r3, [r0, #2944]	; 0xb80
   2c558:	str	r3, [r2]
   2c55c:	ldr	r2, [r0, #2944]	; 0xb80
   2c560:	str	r1, [r2, #2948]	; 0xb84
   2c564:	bl	12aa4 <free@plt>
   2c568:	ldr	r0, [r4, #28]
   2c56c:	ldr	r1, [r4, #32]
   2c570:	sub	r0, r0, #2944	; 0xb80
   2c574:	cmp	r0, r1, lsl #1
   2c578:	str	r0, [r4, #28]
   2c57c:	bls	2c598 <flatcc_emitter_reset@@Base+0xc8>
   2c580:	ldr	r1, [r4, #4]
   2c584:	ldr	r3, [r4]
   2c588:	mov	r2, r1
   2c58c:	ldr	r0, [r2, #2944]!	; 0xb80
   2c590:	cmp	r0, r3
   2c594:	bne	2c554 <flatcc_emitter_reset@@Base+0x84>
   2c598:	pop	{r4, sl, fp, pc}

0002c59c <flatcc_emitter_clear@@Base>:
   2c59c:	push	{r4, r5, r6, sl, fp, lr}
   2c5a0:	add	fp, sp, #16
   2c5a4:	ldr	r5, [r0]
   2c5a8:	cmp	r5, #0
   2c5ac:	beq	2c5fc <flatcc_emitter_clear@@Base+0x60>
   2c5b0:	mov	r4, r0
   2c5b4:	ldr	r0, [r5, #2948]	; 0xb84
   2c5b8:	mov	r6, #0
   2c5bc:	str	r6, [r0, #2944]	; 0xb80
   2c5c0:	ldr	r0, [r5, #2944]	; 0xb80
   2c5c4:	cmp	r0, #0
   2c5c8:	beq	2c5dc <flatcc_emitter_clear@@Base+0x40>
   2c5cc:	mov	r5, r0
   2c5d0:	ldr	r0, [r0, #2948]	; 0xb84
   2c5d4:	bl	12aa4 <free@plt>
   2c5d8:	b	2c5c0 <flatcc_emitter_clear@@Base+0x24>
   2c5dc:	mov	r0, r5
   2c5e0:	bl	12aa4 <free@plt>
   2c5e4:	vmov.i32	q8, #0	; 0x00000000
   2c5e8:	add	r0, r4, #16
   2c5ec:	vst1.32	{d16-d17}, [r0]
   2c5f0:	mov	r0, #32
   2c5f4:	vst1.32	{d16-d17}, [r4], r0
   2c5f8:	str	r6, [r4]
   2c5fc:	pop	{r4, r5, r6, sl, fp, pc}

0002c600 <flatcc_emitter@@Base>:
   2c600:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c604:	add	fp, sp, #28
   2c608:	sub	sp, sp, #4
   2c60c:	mov	r6, r0
   2c610:	mov	r7, r1
   2c614:	ldr	r0, [r0, #24]
   2c618:	ldr	r1, [fp, #8]
   2c61c:	mov	r4, r2
   2c620:	cmn	r3, #1
   2c624:	mov	r9, r6
   2c628:	add	r0, r0, r1
   2c62c:	str	r0, [r6, #24]
   2c630:	ble	2c76c <flatcc_emitter@@Base+0x16c>
   2c634:	ldr	r0, [r9, #20]!
   2c638:	cmp	r0, r1
   2c63c:	bcs	2c8bc <flatcc_emitter@@Base+0x2bc>
   2c640:	mov	r8, #0
   2c644:	cmp	r4, #0
   2c648:	beq	2c914 <flatcc_emitter@@Base+0x314>
   2c64c:	movw	sl, #64064	; 0xfa40
   2c650:	movt	sl, #65535	; 0xffff
   2c654:	ldr	r8, [r7, #4]
   2c658:	cmp	r8, #0
   2c65c:	beq	2c758 <flatcc_emitter@@Base+0x158>
   2c660:	ldr	r9, [r7]
   2c664:	cmp	r8, r0
   2c668:	mov	r5, r8
   2c66c:	bls	2c724 <flatcc_emitter@@Base+0x124>
   2c670:	mov	r5, r0
   2c674:	cmp	r5, #0
   2c678:	bne	2c724 <flatcc_emitter@@Base+0x124>
   2c67c:	ldr	r5, [r6, #4]
   2c680:	cmp	r5, #0
   2c684:	beq	2c698 <flatcc_emitter@@Base+0x98>
   2c688:	ldr	r0, [r5, #2944]	; 0xb80
   2c68c:	ldr	r1, [r6]
   2c690:	cmp	r0, r1
   2c694:	bne	2c6d0 <flatcc_emitter@@Base+0xd0>
   2c698:	movw	r0, #2956	; 0xb8c
   2c69c:	bl	12b04 <malloc@plt>
   2c6a0:	cmp	r0, #0
   2c6a4:	beq	2c8cc <flatcc_emitter@@Base+0x2cc>
   2c6a8:	ldr	r1, [r6, #28]
   2c6ac:	cmp	r5, #0
   2c6b0:	add	r1, r1, #2944	; 0xb80
   2c6b4:	str	r1, [r6, #28]
   2c6b8:	beq	2c6f4 <flatcc_emitter@@Base+0xf4>
   2c6bc:	ldr	r1, [r6]
   2c6c0:	str	r1, [r0, #2944]	; 0xb80
   2c6c4:	str	r5, [r0, #2948]	; 0xb84
   2c6c8:	str	r0, [r1, #2948]	; 0xb84
   2c6cc:	str	r0, [r5, #2944]	; 0xb80
   2c6d0:	mov	r5, #2944	; 0xb80
   2c6d4:	str	r0, [r6, #4]
   2c6d8:	str	r0, [r6, #16]
   2c6dc:	str	r5, [r6, #20]
   2c6e0:	ldr	r1, [r0, #2948]	; 0xb84
   2c6e4:	ldr	r1, [r1, #2952]	; 0xb88
   2c6e8:	add	r1, r1, #2944	; 0xb80
   2c6ec:	str	r1, [r0, #2952]	; 0xb88
   2c6f0:	b	2c718 <flatcc_emitter@@Base+0x118>
   2c6f4:	mov	r5, #1472	; 0x5c0
   2c6f8:	add	r1, r0, #1472	; 0x5c0
   2c6fc:	str	r0, [r6]
   2c700:	stmib	r6, {r0, r1, r5}
   2c704:	str	r1, [r6, #16]
   2c708:	str	r5, [r6, #20]
   2c70c:	str	r0, [r0, #2944]	; 0xb80
   2c710:	str	r0, [r0, #2948]	; 0xb84
   2c714:	str	sl, [r0, #2952]	; 0xb88
   2c718:	cmp	r8, r5
   2c71c:	bhi	2c674 <flatcc_emitter@@Base+0x74>
   2c720:	mov	r5, r8
   2c724:	ldr	r0, [r6, #16]
   2c728:	mov	r1, r9
   2c72c:	mov	r2, r5
   2c730:	bl	12ab0 <memcpy@plt>
   2c734:	ldr	r0, [r6, #16]
   2c738:	ldr	r1, [r6, #20]
   2c73c:	add	r9, r9, r5
   2c740:	subs	r8, r8, r5
   2c744:	add	r2, r0, r5
   2c748:	sub	r0, r1, r5
   2c74c:	str	r2, [r6, #16]
   2c750:	str	r0, [r6, #20]
   2c754:	bne	2c664 <flatcc_emitter@@Base+0x64>
   2c758:	subs	r4, r4, #1
   2c75c:	add	r7, r7, #8
   2c760:	bne	2c654 <flatcc_emitter@@Base+0x54>
   2c764:	mov	r8, #0
   2c768:	b	2c914 <flatcc_emitter@@Base+0x314>
   2c76c:	ldr	r0, [r9, #12]!
   2c770:	cmp	r0, r1
   2c774:	bcs	2c8d4 <flatcc_emitter@@Base+0x2d4>
   2c778:	mov	r8, #0
   2c77c:	cmp	r4, #0
   2c780:	beq	2c914 <flatcc_emitter@@Base+0x314>
   2c784:	add	r0, r7, r4, lsl #3
   2c788:	ldr	sl, [r0, #-4]
   2c78c:	sub	r1, r0, #8
   2c790:	str	r1, [sp]
   2c794:	cmp	sl, #0
   2c798:	beq	2c8ac <flatcc_emitter@@Base+0x2ac>
   2c79c:	ldr	r0, [sp]
   2c7a0:	ldr	r0, [r0]
   2c7a4:	add	r7, r0, sl
   2c7a8:	ldr	r1, [r9]
   2c7ac:	cmp	sl, r1
   2c7b0:	bls	2c87c <flatcc_emitter@@Base+0x27c>
   2c7b4:	cmp	r1, #0
   2c7b8:	mov	r5, r1
   2c7bc:	bne	2c880 <flatcc_emitter@@Base+0x280>
   2c7c0:	ldr	r5, [r6]
   2c7c4:	cmp	r5, #0
   2c7c8:	beq	2c7ec <flatcc_emitter@@Base+0x1ec>
   2c7cc:	ldr	r0, [r5, #2948]	; 0xb84
   2c7d0:	ldr	r1, [r6, #4]
   2c7d4:	cmp	r0, r1
   2c7d8:	beq	2c7ec <flatcc_emitter@@Base+0x1ec>
   2c7dc:	ldr	r1, [r5, #2952]	; 0xb88
   2c7e0:	sub	r1, r1, #2944	; 0xb80
   2c7e4:	str	r1, [r0, #2952]	; 0xb88
   2c7e8:	b	2c824 <flatcc_emitter@@Base+0x224>
   2c7ec:	movw	r0, #2956	; 0xb8c
   2c7f0:	bl	12b04 <malloc@plt>
   2c7f4:	cmp	r0, #0
   2c7f8:	beq	2c8cc <flatcc_emitter@@Base+0x2cc>
   2c7fc:	ldr	r1, [r6, #28]
   2c800:	cmp	r5, #0
   2c804:	add	r1, r1, #2944	; 0xb80
   2c808:	str	r1, [r6, #28]
   2c80c:	beq	2c848 <flatcc_emitter@@Base+0x248>
   2c810:	ldr	r1, [r6, #4]
   2c814:	str	r5, [r0, #2944]	; 0xb80
   2c818:	str	r1, [r0, #2948]	; 0xb84
   2c81c:	str	r0, [r5, #2948]	; 0xb84
   2c820:	str	r0, [r1, #2944]	; 0xb80
   2c824:	mov	r1, #2944	; 0xb80
   2c828:	add	r2, r0, #2944	; 0xb80
   2c82c:	str	r0, [r6]
   2c830:	str	r2, [r6, #8]
   2c834:	str	r1, [r6, #12]
   2c838:	ldr	r2, [r0, #2944]	; 0xb80
   2c83c:	ldr	r2, [r2, #2952]	; 0xb88
   2c840:	sub	r2, r2, #2944	; 0xb80
   2c844:	b	2c874 <flatcc_emitter@@Base+0x274>
   2c848:	add	r2, r0, #1472	; 0x5c0
   2c84c:	mov	r1, #1472	; 0x5c0
   2c850:	str	r0, [r6]
   2c854:	stmib	r6, {r0, r2}
   2c858:	str	r1, [r6, #12]
   2c85c:	str	r2, [r6, #16]
   2c860:	movw	r2, #64064	; 0xfa40
   2c864:	str	r1, [r6, #20]
   2c868:	str	r0, [r0, #2944]	; 0xb80
   2c86c:	str	r0, [r0, #2948]	; 0xb84
   2c870:	movt	r2, #65535	; 0xffff
   2c874:	str	r2, [r0, #2952]	; 0xb88
   2c878:	b	2c7ac <flatcc_emitter@@Base+0x1ac>
   2c87c:	mov	r5, sl
   2c880:	sub	r0, r1, r5
   2c884:	sub	r7, r7, r5
   2c888:	mov	r2, r5
   2c88c:	str	r0, [r6, #12]
   2c890:	mov	r1, r7
   2c894:	ldr	r0, [r6, #8]
   2c898:	sub	r0, r0, r5
   2c89c:	str	r0, [r6, #8]
   2c8a0:	bl	12ab0 <memcpy@plt>
   2c8a4:	subs	sl, sl, r5
   2c8a8:	bne	2c7a8 <flatcc_emitter@@Base+0x1a8>
   2c8ac:	ldr	r0, [sp]
   2c8b0:	subs	r4, r4, #1
   2c8b4:	bne	2c788 <flatcc_emitter@@Base+0x188>
   2c8b8:	b	2c914 <flatcc_emitter@@Base+0x314>
   2c8bc:	ldr	r5, [r6, #16]
   2c8c0:	add	r2, r5, r1
   2c8c4:	str	r2, [r6, #16]
   2c8c8:	b	2c8e0 <flatcc_emitter@@Base+0x2e0>
   2c8cc:	mvn	r8, #0
   2c8d0:	b	2c914 <flatcc_emitter@@Base+0x314>
   2c8d4:	ldr	r2, [r6, #8]
   2c8d8:	sub	r5, r2, r1
   2c8dc:	str	r5, [r6, #8]
   2c8e0:	sub	r0, r0, r1
   2c8e4:	mov	r8, #0
   2c8e8:	cmp	r4, #0
   2c8ec:	str	r0, [r9]
   2c8f0:	beq	2c914 <flatcc_emitter@@Base+0x314>
   2c8f4:	ldm	r7, {r1, r2}
   2c8f8:	mov	r0, r5
   2c8fc:	bl	12ab0 <memcpy@plt>
   2c900:	ldr	r0, [r7, #4]
   2c904:	add	r7, r7, #8
   2c908:	subs	r4, r4, #1
   2c90c:	add	r5, r5, r0
   2c910:	bne	2c8f4 <flatcc_emitter@@Base+0x2f4>
   2c914:	mov	r0, r8
   2c918:	sub	sp, fp, #28
   2c91c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002c920 <flatcc_emitter_copy_buffer@@Base>:
   2c920:	push	{r4, r5, r6, sl, fp, lr}
   2c924:	add	fp, sp, #16
   2c928:	mov	r3, r2
   2c92c:	ldr	r2, [r0, #24]
   2c930:	mov	r5, #0
   2c934:	cmp	r2, r3
   2c938:	bhi	2c9d4 <flatcc_emitter_copy_buffer@@Base+0xb4>
   2c93c:	mov	r4, r0
   2c940:	ldr	r0, [r0]
   2c944:	cmp	r0, #0
   2c948:	beq	2c9d4 <flatcc_emitter_copy_buffer@@Base+0xb4>
   2c94c:	mov	r6, r1
   2c950:	ldr	r1, [r4, #4]
   2c954:	cmp	r0, r1
   2c958:	beq	2c9c4 <flatcc_emitter_copy_buffer@@Base+0xa4>
   2c95c:	ldr	r0, [r4, #12]
   2c960:	ldr	r1, [r4, #8]
   2c964:	rsb	r5, r0, #2944	; 0xb80
   2c968:	mov	r0, r6
   2c96c:	mov	r2, r5
   2c970:	bl	12ab0 <memcpy@plt>
   2c974:	ldm	r4, {r0, r1}
   2c978:	add	r5, r6, r5
   2c97c:	ldr	r6, [r0, #2944]	; 0xb80
   2c980:	cmp	r6, r1
   2c984:	beq	2c9ac <flatcc_emitter_copy_buffer@@Base+0x8c>
   2c988:	mov	r0, r5
   2c98c:	mov	r1, r6
   2c990:	mov	r2, #2944	; 0xb80
   2c994:	bl	12ab0 <memcpy@plt>
   2c998:	ldr	r6, [r6, #2944]	; 0xb80
   2c99c:	ldr	r0, [r4, #4]
   2c9a0:	add	r5, r5, #2944	; 0xb80
   2c9a4:	cmp	r6, r0
   2c9a8:	bne	2c988 <flatcc_emitter_copy_buffer@@Base+0x68>
   2c9ac:	ldr	r0, [r4, #20]
   2c9b0:	mov	r1, r6
   2c9b4:	rsb	r2, r0, #2944	; 0xb80
   2c9b8:	mov	r0, r5
   2c9bc:	bl	12ab0 <memcpy@plt>
   2c9c0:	b	2c9d4 <flatcc_emitter_copy_buffer@@Base+0xb4>
   2c9c4:	ldr	r1, [r4, #8]
   2c9c8:	mov	r0, r6
   2c9cc:	bl	12ab0 <memcpy@plt>
   2c9d0:	mov	r5, r6
   2c9d4:	mov	r0, r5
   2c9d8:	pop	{r4, r5, r6, sl, fp, pc}
   2c9dc:	andeq	r0, r0, r0

0002c9e0 <grisu3_diy_fp_encode_double@@Base>:
   2c9e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c9e4:	add	fp, sp, #28
   2c9e8:	sub	sp, sp, #44	; 0x2c
   2c9ec:	mov	r5, r2
   2c9f0:	mov	r2, r0
   2c9f4:	mov	r0, #0
   2c9f8:	mov	r9, r3
   2c9fc:	mov	r3, r1
   2ca00:	str	r0, [sp]
   2ca04:	str	r0, [sp, #4]
   2ca08:	add	r0, sp, #24
   2ca0c:	bl	2cd98 <grisu3_diy_fp_encode_double@@Base+0x3b8>
   2ca10:	ldr	r1, [fp, #8]
   2ca14:	sub	r0, r5, r9
   2ca18:	cmp	r1, #0
   2ca1c:	movwne	r1, #1
   2ca20:	cmn	r0, #348	; 0x15c
   2ca24:	blt	2cd10 <grisu3_diy_fp_encode_double@@Base+0x330>
   2ca28:	cmp	r0, #348	; 0x15c
   2ca2c:	bge	2cd28 <grisu3_diy_fp_encode_double@@Base+0x348>
   2ca30:	add	r2, r0, #348	; 0x15c
   2ca34:	movw	r6, #9624	; 0x2598
   2ca38:	asr	r3, r2, #31
   2ca3c:	movt	r6, #3
   2ca40:	add	r2, r2, r3, lsr #29
   2ca44:	mvn	r3, #14
   2ca48:	and	r2, r3, r2, lsl #1
   2ca4c:	ldr	r8, [r6, r2]!
   2ca50:	ldrsh	r4, [r6, #10]
   2ca54:	cmp	r0, r4
   2ca58:	blt	2cd40 <grisu3_diy_fp_encode_double@@Base+0x360>
   2ca5c:	add	r2, r4, #8
   2ca60:	cmp	r2, r0
   2ca64:	ble	2cd58 <grisu3_diy_fp_encode_double@@Base+0x378>
   2ca68:	lsl	r5, r1, #2
   2ca6c:	ldr	r1, [sp, #32]
   2ca70:	ldr	r2, [sp, #24]
   2ca74:	ldr	r3, [sp, #28]
   2ca78:	ldr	ip, [sp, #36]	; 0x24
   2ca7c:	cmp	r0, r4
   2ca80:	rsb	r7, r1, #0
   2ca84:	lsl	sl, r5, r7
   2ca88:	beq	2caec <grisu3_diy_fp_encode_double@@Base+0x10c>
   2ca8c:	mvn	r7, r4
   2ca90:	add	r4, r0, r7
   2ca94:	cmp	r4, #7
   2ca98:	bcs	2cd78 <grisu3_diy_fp_encode_double@@Base+0x398>
   2ca9c:	movw	r0, #9512	; 0x2528
   2caa0:	stm	sp, {r1, ip}
   2caa4:	movt	r0, #3
   2caa8:	ldr	r1, [r0, r4, lsl #4]!
   2caac:	str	r1, [sp, #8]
   2cab0:	ldmib	r0, {r1, r7}
   2cab4:	ldr	r0, [r0, #12]
   2cab8:	str	r7, [sp, #16]
   2cabc:	str	r1, [sp, #12]
   2cac0:	str	r0, [sp, #20]
   2cac4:	add	r0, sp, #24
   2cac8:	bl	2ce3c <grisu3_diy_fp_encode_double@@Base+0x45c>
   2cacc:	add	r0, r9, r4
   2cad0:	ldr	r2, [sp, #24]
   2cad4:	ldr	r3, [sp, #28]
   2cad8:	ldr	r1, [sp, #32]
   2cadc:	ldr	ip, [sp, #36]	; 0x24
   2cae0:	add	r0, r0, #1
   2cae4:	cmp	r0, #19
   2cae8:	addgt	sl, sl, #4
   2caec:	ldr	r0, [r6, #4]
   2caf0:	ldrsh	r7, [r6, #8]
   2caf4:	stm	sp, {r1, ip}
   2caf8:	mov	r6, #0
   2cafc:	str	r8, [sp, #8]
   2cb00:	str	r6, [sp, #20]
   2cb04:	str	r0, [sp, #12]
   2cb08:	add	r0, sp, #24
   2cb0c:	str	r7, [sp, #16]
   2cb10:	bl	2ce3c <grisu3_diy_fp_encode_double@@Base+0x45c>
   2cb14:	add	r5, sp, #24
   2cb18:	ldr	r0, [sp, #36]	; 0x24
   2cb1c:	ldm	r5, {r2, r3, r5}
   2cb20:	str	r5, [sp]
   2cb24:	str	r0, [sp, #4]
   2cb28:	add	r0, sp, #24
   2cb2c:	bl	2cd98 <grisu3_diy_fp_encode_double@@Base+0x3b8>
   2cb30:	ldr	r7, [sp, #32]
   2cb34:	cmp	sl, #0
   2cb38:	mov	r0, #9
   2cb3c:	ldr	r4, [sp, #24]
   2cb40:	ldr	r3, [sp, #28]
   2cb44:	movweq	r0, #8
   2cb48:	add	r0, r0, sl
   2cb4c:	sub	r1, r5, r7
   2cb50:	lsl	lr, r0, r1
   2cb54:	movw	r1, #64462	; 0xfbce
   2cb58:	add	r0, r7, #64	; 0x40
   2cb5c:	movt	r1, #65535	; 0xffff
   2cb60:	add	r2, r1, #63	; 0x3f
   2cb64:	cmp	r0, r2
   2cb68:	bgt	2cbb8 <grisu3_diy_fp_encode_double@@Base+0x1d8>
   2cb6c:	mvn	r2, #1072	; 0x430
   2cb70:	mov	r6, #64	; 0x40
   2cb74:	cmp	r0, r2
   2cb78:	blt	2cb88 <grisu3_diy_fp_encode_double@@Base+0x1a8>
   2cb7c:	sub	r6, r1, r7
   2cb80:	cmp	r6, #61	; 0x3d
   2cb84:	blt	2cbb8 <grisu3_diy_fp_encode_double@@Base+0x1d8>
   2cb88:	sub	r0, r6, #62	; 0x3e
   2cb8c:	mov	r2, #9
   2cb90:	rsb	r5, r6, #94	; 0x5e
   2cb94:	add	lr, r2, lr, asr r0
   2cb98:	lsr	r2, r4, r0
   2cb9c:	add	r7, r0, r7
   2cba0:	orr	r4, r2, r3, lsl r5
   2cba4:	subs	r2, r6, #94	; 0x5e
   2cba8:	mov	r6, #62	; 0x3e
   2cbac:	lsrpl	r4, r3, r2
   2cbb0:	lsr	r3, r3, r0
   2cbb4:	movwpl	r3, #0
   2cbb8:	lsr	r0, r4, r6
   2cbbc:	rsb	r2, r6, #32
   2cbc0:	add	r5, r7, r6
   2cbc4:	mov	r7, #1
   2cbc8:	orr	r2, r0, r3, lsl r2
   2cbcc:	subs	r0, r6, #32
   2cbd0:	lsrpl	r2, r3, r0
   2cbd4:	sub	r0, r6, #1
   2cbd8:	lsr	r3, r3, r6
   2cbdc:	movwpl	r3, #0
   2cbe0:	lsl	r7, r7, r0
   2cbe4:	subs	r0, r6, #33	; 0x21
   2cbe8:	movwpl	r7, #0
   2cbec:	add	r8, lr, r7, lsl #3
   2cbf0:	cmp	r6, r8
   2cbf4:	blt	2cc14 <grisu3_diy_fp_encode_double@@Base+0x234>
   2cbf8:	adds	r2, r2, #1
   2cbfc:	adc	r3, r3, #0
   2cc00:	tst	r3, #2097152	; 0x200000
   2cc04:	beq	2cc14 <grisu3_diy_fp_encode_double@@Base+0x234>
   2cc08:	lsrs	r3, r3, #1
   2cc0c:	rrx	r2, r2
   2cc10:	add	r5, r5, #1
   2cc14:	and	r6, r7, r4
   2cc18:	cmp	r3, #2097152	; 0x200000
   2cc1c:	bcc	2cc40 <grisu3_diy_fp_encode_double@@Base+0x260>
   2cc20:	mov	r4, #0
   2cc24:	lsrs	r0, r3, #1
   2cc28:	rrx	r2, r2
   2cc2c:	cmp	r4, r3, lsr #22
   2cc30:	add	r5, r5, #1
   2cc34:	mov	r3, r0
   2cc38:	bne	2cc24 <grisu3_diy_fp_encode_double@@Base+0x244>
   2cc3c:	b	2cc44 <grisu3_diy_fp_encode_double@@Base+0x264>
   2cc40:	mov	r0, r3
   2cc44:	ldr	ip, [fp, #12]
   2cc48:	vmov.i32	d16, #0	; 0x00000000
   2cc4c:	lsl	r9, r7, #3
   2cc50:	lsl	r6, r6, #3
   2cc54:	cmp	r5, r1
   2cc58:	blt	2cce4 <grisu3_diy_fp_encode_double@@Base+0x304>
   2cc5c:	and	r3, r0, #1048576	; 0x100000
   2cc60:	mov	r4, #1
   2cc64:	cmp	r5, r1
   2cc68:	eor	r7, r4, r3, lsr #20
   2cc6c:	beq	2cca8 <grisu3_diy_fp_encode_double@@Base+0x2c8>
   2cc70:	cmp	r3, #0
   2cc74:	bne	2cca8 <grisu3_diy_fp_encode_double@@Base+0x2c8>
   2cc78:	mov	r4, #1
   2cc7c:	lsl	r3, r0, #1
   2cc80:	ands	r0, r0, #524288	; 0x80000
   2cc84:	sub	r5, r5, #1
   2cc88:	orr	r3, r3, r2, lsr #31
   2cc8c:	eor	r7, r4, r0, lsr #19
   2cc90:	lsl	r2, r2, #1
   2cc94:	bne	2ccac <grisu3_diy_fp_encode_double@@Base+0x2cc>
   2cc98:	cmp	r5, r1
   2cc9c:	mov	r0, r3
   2cca0:	bgt	2cc7c <grisu3_diy_fp_encode_double@@Base+0x29c>
   2cca4:	b	2ccac <grisu3_diy_fp_encode_double@@Base+0x2cc>
   2cca8:	mov	r3, r0
   2ccac:	cmp	r5, r1
   2ccb0:	bne	2ccc4 <grisu3_diy_fp_encode_double@@Base+0x2e4>
   2ccb4:	mov	r0, #0
   2ccb8:	cmp	r7, #0
   2ccbc:	mov	r1, #0
   2ccc0:	bne	2ccd4 <grisu3_diy_fp_encode_double@@Base+0x2f4>
   2ccc4:	movw	r0, #1075	; 0x433
   2ccc8:	add	r0, r5, r0
   2cccc:	lsl	r1, r0, #20
   2ccd0:	mov	r0, #0
   2ccd4:	bfc	r3, #20, #12
   2ccd8:	orr	r0, r0, r2
   2ccdc:	orr	r1, r1, r3
   2cce0:	vmov	d16, r0, r1
   2cce4:	cmp	r6, r8
   2cce8:	sub	r2, r9, lr
   2ccec:	mov	r1, #0
   2ccf0:	mov	r0, #0
   2ccf4:	vstr	d16, [ip]
   2ccf8:	movwge	r1, #1
   2ccfc:	cmp	r2, r6
   2cd00:	movwge	r0, #1
   2cd04:	orr	r0, r1, r0
   2cd08:	sub	sp, fp, #28
   2cd0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cd10:	movw	r0, #13195	; 0x338b
   2cd14:	movw	r1, #11696	; 0x2db0
   2cd18:	movw	r3, #13226	; 0x33aa
   2cd1c:	mov	r2, #80	; 0x50
   2cd20:	movt	r0, #3
   2cd24:	b	2cd6c <grisu3_diy_fp_encode_double@@Base+0x38c>
   2cd28:	movw	r0, #13283	; 0x33e3
   2cd2c:	movw	r1, #11696	; 0x2db0
   2cd30:	movw	r3, #13226	; 0x33aa
   2cd34:	mov	r2, #81	; 0x51
   2cd38:	movt	r0, #3
   2cd3c:	b	2cd6c <grisu3_diy_fp_encode_double@@Base+0x38c>
   2cd40:	movw	r0, #13326	; 0x340e
   2cd44:	movw	r1, #11696	; 0x2db0
   2cd48:	movw	r3, #13226	; 0x33aa
   2cd4c:	mov	r2, #88	; 0x58
   2cd50:	movt	r0, #3
   2cd54:	b	2cd6c <grisu3_diy_fp_encode_double@@Base+0x38c>
   2cd58:	movw	r0, #13341	; 0x341d
   2cd5c:	movw	r1, #11696	; 0x2db0
   2cd60:	movw	r3, #13226	; 0x33aa
   2cd64:	mov	r2, #89	; 0x59
   2cd68:	movt	r0, #3
   2cd6c:	movt	r1, #3
   2cd70:	movt	r3, #3
   2cd74:	bl	12bc4 <__assert_fail@plt>
   2cd78:	movw	r0, #11668	; 0x2d94
   2cd7c:	movw	r1, #11696	; 0x2db0
   2cd80:	movw	r3, #11783	; 0x2e07
   2cd84:	mov	r2, #185	; 0xb9
   2cd88:	movt	r0, #3
   2cd8c:	movt	r1, #3
   2cd90:	movt	r3, #3
   2cd94:	bl	12bc4 <__assert_fail@plt>
   2cd98:	push	{r4, sl, fp, lr}
   2cd9c:	add	fp, sp, #8
   2cda0:	orrs	r1, r2, r3
   2cda4:	beq	2ce1c <grisu3_diy_fp_encode_double@@Base+0x43c>
   2cda8:	ldr	r1, [fp, #8]
   2cdac:	mov	r4, #0
   2cdb0:	cmp	r4, r3, lsr #22
   2cdb4:	bne	2cdd0 <grisu3_diy_fp_encode_double@@Base+0x3f0>
   2cdb8:	lsl	r3, r3, #10
   2cdbc:	sub	r1, r1, #10
   2cdc0:	orr	r3, r3, r2, lsr #22
   2cdc4:	lsl	r2, r2, #10
   2cdc8:	cmp	r3, #4194304	; 0x400000
   2cdcc:	bcc	2cdb8 <grisu3_diy_fp_encode_double@@Base+0x3d8>
   2cdd0:	ldr	ip, [fp, #12]
   2cdd4:	cmp	r3, #0
   2cdd8:	bmi	2ce04 <grisu3_diy_fp_encode_double@@Base+0x424>
   2cddc:	mvn	lr, #0
   2cde0:	lsl	r3, r3, #1
   2cde4:	lsl	r4, r2, #1
   2cde8:	sub	r1, r1, #1
   2cdec:	orr	r3, r3, r2, lsr #31
   2cdf0:	subs	r2, lr, r2, lsl #1
   2cdf4:	sbcs	r2, lr, r3
   2cdf8:	mov	r2, r4
   2cdfc:	blt	2cde0 <grisu3_diy_fp_encode_double@@Base+0x400>
   2ce00:	b	2ce08 <grisu3_diy_fp_encode_double@@Base+0x428>
   2ce04:	mov	r4, r2
   2ce08:	str	r4, [r0]
   2ce0c:	str	r3, [r0, #4]
   2ce10:	str	r1, [r0, #8]
   2ce14:	str	ip, [r0, #12]
   2ce18:	pop	{r4, sl, fp, pc}
   2ce1c:	movw	r0, #13043	; 0x32f3
   2ce20:	movw	r1, #13052	; 0x32fc
   2ce24:	movw	r3, #13138	; 0x3352
   2ce28:	mov	r2, #260	; 0x104
   2ce2c:	movt	r0, #3
   2ce30:	movt	r1, #3
   2ce34:	movt	r3, #3
   2ce38:	bl	12bc4 <__assert_fail@plt>
   2ce3c:	push	{r4, r5, fp, lr}
   2ce40:	add	fp, sp, #8
   2ce44:	ldr	ip, [fp, #24]
   2ce48:	ldr	r1, [fp, #8]
   2ce4c:	mov	r5, #0
   2ce50:	add	r1, r1, ip
   2ce54:	ldr	ip, [fp, #16]
   2ce58:	add	r1, r1, #64	; 0x40
   2ce5c:	str	r1, [r0, #8]
   2ce60:	umull	r1, lr, ip, r2
   2ce64:	umull	ip, r1, ip, r3
   2ce68:	adds	lr, ip, lr
   2ce6c:	ldr	ip, [fp, #20]
   2ce70:	adc	r5, r5, #0
   2ce74:	umull	r2, r4, ip, r2
   2ce78:	umaal	r1, r4, ip, r3
   2ce7c:	adds	r2, lr, r2
   2ce80:	adc	r5, r5, #0
   2ce84:	adds	r2, r2, #-2147483648	; 0x80000000
   2ce88:	adcs	r1, r1, r5
   2ce8c:	str	r1, [r0]
   2ce90:	adc	r1, r4, #0
   2ce94:	str	r1, [r0, #4]
   2ce98:	pop	{r4, r5, fp, pc}

0002ce9c <flatcc_json_parser_error_string@@Base>:
   2ce9c:	cmp	r0, #34	; 0x22
   2cea0:	movwhi	r0, #12493	; 0x30cd
   2cea4:	movthi	r0, #3
   2cea8:	bxhi	lr
   2ceac:	movw	r1, #11528	; 0x2d08
   2ceb0:	movt	r1, #3
   2ceb4:	ldr	r0, [r1, r0, lsl #2]
   2ceb8:	bx	lr

0002cebc <flatcc_json_parser_set_error@@Base>:
   2cebc:	mov	ip, r2
   2cec0:	ldr	r2, [r0, #24]
   2cec4:	cmp	r2, #0
   2cec8:	bne	2cee4 <flatcc_json_parser_set_error@@Base+0x28>
   2cecc:	str	r1, [r0, #36]	; 0x24
   2ced0:	ldr	r2, [r0, #4]
   2ced4:	sub	r1, r1, r2
   2ced8:	add	r1, r1, #1
   2cedc:	str	r1, [r0, #20]
   2cee0:	str	r3, [r0, #24]
   2cee4:	mov	r0, ip
   2cee8:	bx	lr

0002ceec <flatcc_json_parser_string_part@@Base>:
   2ceec:	cmp	r1, r2
   2cef0:	beq	2cf1c <flatcc_json_parser_string_part@@Base+0x30>
   2cef4:	ldrb	r3, [r1]
   2cef8:	cmp	r3, #32
   2cefc:	bcc	2cf50 <flatcc_json_parser_string_part@@Base+0x64>
   2cf00:	cmp	r3, #34	; 0x22
   2cf04:	cmpne	r3, #92	; 0x5c
   2cf08:	beq	2cf48 <flatcc_json_parser_string_part@@Base+0x5c>
   2cf0c:	add	r1, r1, #1
   2cf10:	cmp	r2, r1
   2cf14:	bne	2cef4 <flatcc_json_parser_string_part@@Base+0x8>
   2cf18:	mov	r1, r2
   2cf1c:	ldr	r3, [r0, #24]
   2cf20:	cmp	r3, #0
   2cf24:	bne	2cf44 <flatcc_json_parser_string_part@@Base+0x58>
   2cf28:	mov	ip, #20
   2cf2c:	str	r1, [r0, #36]	; 0x24
   2cf30:	ldr	r3, [r0, #4]
   2cf34:	sub	r1, r1, r3
   2cf38:	add	r1, r1, #1
   2cf3c:	str	r1, [r0, #20]
   2cf40:	str	ip, [r0, #24]
   2cf44:	mov	r1, r2
   2cf48:	mov	r0, r1
   2cf4c:	bx	lr
   2cf50:	ldr	r3, [r0, #24]
   2cf54:	cmp	r3, #0
   2cf58:	bne	2cf44 <flatcc_json_parser_string_part@@Base+0x58>
   2cf5c:	mov	ip, #17
   2cf60:	b	2cf2c <flatcc_json_parser_string_part@@Base+0x40>

0002cf64 <flatcc_json_parser_space_ext@@Base>:
   2cf64:	mov	ip, r2
   2cf68:	cmp	r1, r2
   2cf6c:	beq	2d040 <flatcc_json_parser_space_ext@@Base+0xdc>
   2cf70:	ldrb	r3, [r1]
   2cf74:	cmp	r3, #32
   2cf78:	bne	2cf8c <flatcc_json_parser_space_ext@@Base+0x28>
   2cf7c:	add	r1, r1, #1
   2cf80:	cmp	r1, ip
   2cf84:	bne	2cf70 <flatcc_json_parser_space_ext@@Base+0xc>
   2cf88:	b	2d040 <flatcc_json_parser_space_ext@@Base+0xdc>
   2cf8c:	cmp	r1, ip
   2cf90:	beq	2d040 <flatcc_json_parser_space_ext@@Base+0xdc>
   2cf94:	ldrb	r3, [r1]
   2cf98:	cmp	r3, #32
   2cf9c:	bhi	2d03c <flatcc_json_parser_space_ext@@Base+0xd8>
   2cfa0:	cmp	r3, #12
   2cfa4:	bgt	2cfbc <flatcc_json_parser_space_ext@@Base+0x58>
   2cfa8:	cmp	r3, #9
   2cfac:	beq	2d000 <flatcc_json_parser_space_ext@@Base+0x9c>
   2cfb0:	cmp	r3, #10
   2cfb4:	beq	2cfe8 <flatcc_json_parser_space_ext@@Base+0x84>
   2cfb8:	b	2d010 <flatcc_json_parser_space_ext@@Base+0xac>
   2cfbc:	cmp	r3, #13
   2cfc0:	bne	2d008 <flatcc_json_parser_space_ext@@Base+0xa4>
   2cfc4:	sub	r2, ip, r1
   2cfc8:	mov	r3, #0
   2cfcc:	cmp	r2, #2
   2cfd0:	blt	2cfe4 <flatcc_json_parser_space_ext@@Base+0x80>
   2cfd4:	ldrb	r2, [r1, #1]
   2cfd8:	sub	r2, r2, #10
   2cfdc:	clz	r2, r2
   2cfe0:	lsr	r3, r2, #5
   2cfe4:	add	r1, r1, r3
   2cfe8:	add	r1, r1, #1
   2cfec:	str	r1, [r0, #4]
   2cff0:	ldr	r2, [r0, #16]
   2cff4:	add	r2, r2, #1
   2cff8:	str	r2, [r0, #16]
   2cffc:	b	2cf8c <flatcc_json_parser_space_ext@@Base+0x28>
   2d000:	add	r1, r1, #1
   2d004:	b	2cf8c <flatcc_json_parser_space_ext@@Base+0x28>
   2d008:	cmp	r3, #32
   2d00c:	beq	2cf80 <flatcc_json_parser_space_ext@@Base+0x1c>
   2d010:	ldr	r2, [r0, #24]
   2d014:	cmp	r2, #0
   2d018:	bne	2d040 <flatcc_json_parser_space_ext@@Base+0xdc>
   2d01c:	str	r1, [r0, #36]	; 0x24
   2d020:	mov	r2, #5
   2d024:	ldr	r3, [r0, #4]
   2d028:	sub	r1, r1, r3
   2d02c:	add	r1, r1, #1
   2d030:	str	r1, [r0, #20]
   2d034:	str	r2, [r0, #24]
   2d038:	b	2d040 <flatcc_json_parser_space_ext@@Base+0xdc>
   2d03c:	mov	ip, r1
   2d040:	mov	r0, ip
   2d044:	bx	lr

0002d048 <flatcc_json_parser_string_escape@@Base>:
   2d048:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2d04c:	add	fp, sp, #24
   2d050:	sub	r7, r2, r1
   2d054:	cmp	r7, #2
   2d058:	blt	2d148 <flatcc_json_parser_string_escape@@Base+0x100>
   2d05c:	ldrb	r6, [r1]
   2d060:	cmp	r6, #92	; 0x5c
   2d064:	bne	2d148 <flatcc_json_parser_string_escape@@Base+0x100>
   2d068:	ldrb	r6, [r1, #1]
   2d06c:	cmp	r6, #97	; 0x61
   2d070:	bgt	2d094 <flatcc_json_parser_string_escape@@Base+0x4c>
   2d074:	cmp	r6, #34	; 0x22
   2d078:	beq	2d0f4 <flatcc_json_parser_string_escape@@Base+0xac>
   2d07c:	cmp	r6, #47	; 0x2f
   2d080:	beq	2d0fc <flatcc_json_parser_string_escape@@Base+0xb4>
   2d084:	cmp	r6, #92	; 0x5c
   2d088:	bne	2d148 <flatcc_json_parser_string_escape@@Base+0x100>
   2d08c:	movw	r0, #23553	; 0x5c01
   2d090:	b	2d180 <flatcc_json_parser_string_escape@@Base+0x138>
   2d094:	sub	r5, r6, #110	; 0x6e
   2d098:	cmp	r5, #10
   2d09c:	bhi	2d0dc <flatcc_json_parser_string_escape@@Base+0x94>
   2d0a0:	add	r6, pc, #0
   2d0a4:	ldr	pc, [r6, r5, lsl #2]
   2d0a8:	ldrdeq	sp, [r2], -r4
   2d0ac:	andeq	sp, r2, r8, asr #2
   2d0b0:	andeq	sp, r2, r8, asr #2
   2d0b4:	andeq	sp, r2, r8, asr #2
   2d0b8:	andeq	sp, r2, r4, lsl #2
   2d0bc:	andeq	sp, r2, r8, asr #2
   2d0c0:	andeq	sp, r2, ip, lsl #2
   2d0c4:	andeq	sp, r2, r4, lsl r1
   2d0c8:	andeq	sp, r2, r8, asr #2
   2d0cc:	andeq	sp, r2, r8, asr #2
   2d0d0:	andeq	sp, r2, r8, lsr r1
   2d0d4:	movw	r0, #2561	; 0xa01
   2d0d8:	b	2d180 <flatcc_json_parser_string_escape@@Base+0x138>
   2d0dc:	cmp	r6, #98	; 0x62
   2d0e0:	beq	2d17c <flatcc_json_parser_string_escape@@Base+0x134>
   2d0e4:	cmp	r6, #102	; 0x66
   2d0e8:	bne	2d148 <flatcc_json_parser_string_escape@@Base+0x100>
   2d0ec:	movw	r0, #3073	; 0xc01
   2d0f0:	b	2d180 <flatcc_json_parser_string_escape@@Base+0x138>
   2d0f4:	movw	r0, #8705	; 0x2201
   2d0f8:	b	2d180 <flatcc_json_parser_string_escape@@Base+0x138>
   2d0fc:	movw	r0, #12033	; 0x2f01
   2d100:	b	2d180 <flatcc_json_parser_string_escape@@Base+0x138>
   2d104:	movw	r0, #3329	; 0xd01
   2d108:	b	2d180 <flatcc_json_parser_string_escape@@Base+0x138>
   2d10c:	movw	r0, #2305	; 0x901
   2d110:	b	2d180 <flatcc_json_parser_string_escape@@Base+0x138>
   2d114:	cmp	r7, #5
   2d118:	ble	2d148 <flatcc_json_parser_string_escape@@Base+0x100>
   2d11c:	ldrb	r7, [r1, #2]
   2d120:	sub	r6, r7, #48	; 0x30
   2d124:	uxtb	r6, r6
   2d128:	cmp	r6, #9
   2d12c:	bhi	2d1ac <flatcc_json_parser_string_escape@@Base+0x164>
   2d130:	lsl	ip, r7, #12
   2d134:	b	2d1cc <flatcc_json_parser_string_escape@@Base+0x184>
   2d138:	mov	r6, #1
   2d13c:	cmp	r7, #3
   2d140:	strb	r6, [r3]
   2d144:	bgt	2d190 <flatcc_json_parser_string_escape@@Base+0x148>
   2d148:	mov	r7, #0
   2d14c:	strb	r7, [r3]
   2d150:	ldr	r3, [r0, #24]
   2d154:	cmp	r3, #0
   2d158:	bne	2d188 <flatcc_json_parser_string_escape@@Base+0x140>
   2d15c:	str	r1, [r0, #36]	; 0x24
   2d160:	mov	r3, #18
   2d164:	ldr	r7, [r0, #4]
   2d168:	sub	r1, r1, r7
   2d16c:	add	r1, r1, #1
   2d170:	str	r1, [r0, #20]
   2d174:	str	r3, [r0, #24]
   2d178:	b	2d188 <flatcc_json_parser_string_escape@@Base+0x140>
   2d17c:	movw	r0, #2049	; 0x801
   2d180:	strh	r0, [r3]
   2d184:	add	r2, r1, #2
   2d188:	mov	r0, r2
   2d18c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2d190:	ldrb	r7, [r1, #2]
   2d194:	sub	r6, r7, #48	; 0x30
   2d198:	uxtb	r6, r6
   2d19c:	cmp	r6, #9
   2d1a0:	bhi	2d1e8 <flatcc_json_parser_string_escape@@Base+0x1a0>
   2d1a4:	lsl	r7, r7, #4
   2d1a8:	b	2d204 <flatcc_json_parser_string_escape@@Base+0x1bc>
   2d1ac:	orr	r6, r7, #32
   2d1b0:	sub	r6, r6, #97	; 0x61
   2d1b4:	uxtb	r6, r6
   2d1b8:	cmp	r6, #5
   2d1bc:	bhi	2d148 <flatcc_json_parser_string_escape@@Base+0x100>
   2d1c0:	movw	r6, #36864	; 0x9000
   2d1c4:	movt	r6, #65535	; 0xffff
   2d1c8:	add	ip, r6, r7, lsl #12
   2d1cc:	ldrb	lr, [r1, #3]
   2d1d0:	sub	r4, lr, #48	; 0x30
   2d1d4:	uxtb	r4, r4
   2d1d8:	cmp	r4, #10
   2d1dc:	bcs	2d240 <flatcc_json_parser_string_escape@@Base+0x1f8>
   2d1e0:	mov	r8, #53248	; 0xd000
   2d1e4:	b	2d258 <flatcc_json_parser_string_escape@@Base+0x210>
   2d1e8:	orr	r6, r7, #32
   2d1ec:	sub	r6, r6, #97	; 0x61
   2d1f0:	uxtb	r6, r6
   2d1f4:	cmp	r6, #5
   2d1f8:	bhi	2d148 <flatcc_json_parser_string_escape@@Base+0x100>
   2d1fc:	mvn	r6, #111	; 0x6f
   2d200:	add	r7, r6, r7, lsl #4
   2d204:	ldrb	r5, [r1, #3]
   2d208:	sub	r6, r5, #48	; 0x30
   2d20c:	uxtb	r4, r6
   2d210:	cmp	r4, #10
   2d214:	bcc	2d230 <flatcc_json_parser_string_escape@@Base+0x1e8>
   2d218:	orr	r6, r5, #32
   2d21c:	sub	r5, r6, #97	; 0x61
   2d220:	uxtb	r5, r5
   2d224:	cmp	r5, #5
   2d228:	bhi	2d148 <flatcc_json_parser_string_escape@@Base+0x100>
   2d22c:	sub	r6, r6, #87	; 0x57
   2d230:	orr	r0, r6, r7
   2d234:	add	r2, r1, #4
   2d238:	strb	r0, [r3, #1]
   2d23c:	b	2d188 <flatcc_json_parser_string_escape@@Base+0x140>
   2d240:	orr	lr, lr, #32
   2d244:	mov	r8, #43264	; 0xa900
   2d248:	sub	r4, lr, #97	; 0x61
   2d24c:	uxtb	r4, r4
   2d250:	cmp	r4, #6
   2d254:	bcs	2d148 <flatcc_json_parser_string_escape@@Base+0x100>
   2d258:	ldrb	r5, [r1, #4]
   2d25c:	sub	r4, r5, #48	; 0x30
   2d260:	uxtb	r4, r4
   2d264:	cmp	r4, #10
   2d268:	bcs	2d274 <flatcc_json_parser_string_escape@@Base+0x22c>
   2d26c:	mov	r9, #64768	; 0xfd00
   2d270:	b	2d28c <flatcc_json_parser_string_escape@@Base+0x244>
   2d274:	orr	r5, r5, #32
   2d278:	movw	r9, #64144	; 0xfa90
   2d27c:	sub	r4, r5, #97	; 0x61
   2d280:	uxtb	r4, r4
   2d284:	cmp	r4, #6
   2d288:	bcs	2d148 <flatcc_json_parser_string_escape@@Base+0x100>
   2d28c:	ldrb	r7, [r1, #5]
   2d290:	sub	r4, r7, #48	; 0x30
   2d294:	uxtb	r4, r4
   2d298:	cmp	r4, #10
   2d29c:	bcs	2d2ac <flatcc_json_parser_string_escape@@Base+0x264>
   2d2a0:	mvn	r0, #86	; 0x56
   2d2a4:	add	r4, r0, #39	; 0x27
   2d2a8:	b	2d2c4 <flatcc_json_parser_string_escape@@Base+0x27c>
   2d2ac:	orr	r7, r7, #32
   2d2b0:	movw	r4, #65449	; 0xffa9
   2d2b4:	sub	r6, r7, #97	; 0x61
   2d2b8:	uxtb	r6, r6
   2d2bc:	cmp	r6, #6
   2d2c0:	bcs	2d148 <flatcc_json_parser_string_escape@@Base+0x100>
   2d2c4:	add	r0, r8, lr, lsl #8
   2d2c8:	add	r2, r9, r5, lsl #4
   2d2cc:	orr	r0, r0, ip
   2d2d0:	orr	r0, r0, r2
   2d2d4:	add	r2, r4, r7
   2d2d8:	orr	r0, r0, r2
   2d2dc:	uxth	r7, r0
   2d2e0:	cmp	r7, #127	; 0x7f
   2d2e4:	bhi	2d2f4 <flatcc_json_parser_string_escape@@Base+0x2ac>
   2d2e8:	mov	r2, #1
   2d2ec:	strb	r2, [r3]
   2d2f0:	b	2d344 <flatcc_json_parser_string_escape@@Base+0x2fc>
   2d2f4:	mov	r2, #0
   2d2f8:	cmp	r2, r7, lsr #11
   2d2fc:	bne	2d318 <flatcc_json_parser_string_escape@@Base+0x2d0>
   2d300:	mov	r7, #192	; 0xc0
   2d304:	mov	r2, #2
   2d308:	orr	r7, r7, r0, lsr #6
   2d30c:	strb	r2, [r3]
   2d310:	strb	r7, [r3, #1]
   2d314:	b	2d33c <flatcc_json_parser_string_escape@@Base+0x2f4>
   2d318:	mov	r6, #224	; 0xe0
   2d31c:	mov	r2, #3
   2d320:	orr	r6, r6, r7, lsr #12
   2d324:	strb	r2, [r3]
   2d328:	lsr	r7, r7, #6
   2d32c:	strb	r6, [r3, #1]
   2d330:	mov	r6, #2
   2d334:	bfi	r7, r6, #6, #26
   2d338:	strb	r7, [r3, #2]
   2d33c:	mvn	r7, #-67108863	; 0xfc000001
   2d340:	bfi	r0, r7, #6, #26
   2d344:	strb	r0, [r3, r2]
   2d348:	add	r2, r1, #6
   2d34c:	b	2d188 <flatcc_json_parser_string_escape@@Base+0x140>

0002d350 <flatcc_json_parser_skip_constant@@Base>:
   2d350:	push	{r4, r5, r6, sl, fp, lr}
   2d354:	add	fp, sp, #16
   2d358:	cmp	r1, r2
   2d35c:	beq	2d40c <flatcc_json_parser_skip_constant@@Base+0xbc>
   2d360:	mov	r4, r2
   2d364:	mov	r5, r0
   2d368:	ldrsb	r0, [r1]
   2d36c:	mov	r6, r1
   2d370:	cmp	r0, #0
   2d374:	bmi	2d388 <flatcc_json_parser_skip_constant@@Base+0x38>
   2d378:	uxtb	r0, r0
   2d37c:	cmp	r0, #95	; 0x5f
   2d380:	cmpne	r0, #46	; 0x2e
   2d384:	bne	2d398 <flatcc_json_parser_skip_constant@@Base+0x48>
   2d388:	add	r1, r6, #1
   2d38c:	cmp	r1, r4
   2d390:	bne	2d368 <flatcc_json_parser_skip_constant@@Base+0x18>
   2d394:	b	2d404 <flatcc_json_parser_skip_constant@@Base+0xb4>
   2d398:	sub	r1, r0, #48	; 0x30
   2d39c:	uxtb	r1, r1
   2d3a0:	cmp	r1, #9
   2d3a4:	bls	2d388 <flatcc_json_parser_skip_constant@@Base+0x38>
   2d3a8:	orr	r1, r0, #32
   2d3ac:	sub	r1, r1, #97	; 0x61
   2d3b0:	uxtb	r1, r1
   2d3b4:	cmp	r1, #25
   2d3b8:	bls	2d388 <flatcc_json_parser_skip_constant@@Base+0x38>
   2d3bc:	sub	r1, r4, r6
   2d3c0:	cmp	r1, #2
   2d3c4:	blt	2d3e4 <flatcc_json_parser_skip_constant@@Base+0x94>
   2d3c8:	cmp	r0, #32
   2d3cc:	bhi	2d410 <flatcc_json_parser_skip_constant@@Base+0xc0>
   2d3d0:	bne	2d3e4 <flatcc_json_parser_skip_constant@@Base+0x94>
   2d3d4:	mov	r1, r6
   2d3d8:	ldrb	r0, [r1, #1]!
   2d3dc:	cmp	r0, #32
   2d3e0:	bhi	2d38c <flatcc_json_parser_skip_constant@@Base+0x3c>
   2d3e4:	mov	r0, r5
   2d3e8:	mov	r1, r6
   2d3ec:	mov	r2, r4
   2d3f0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2d3f4:	mov	r1, r0
   2d3f8:	cmp	r0, r6
   2d3fc:	bne	2d38c <flatcc_json_parser_skip_constant@@Base+0x3c>
   2d400:	b	2d410 <flatcc_json_parser_skip_constant@@Base+0xc0>
   2d404:	mov	r6, r4
   2d408:	b	2d410 <flatcc_json_parser_skip_constant@@Base+0xc0>
   2d40c:	mov	r6, r1
   2d410:	mov	r0, r6
   2d414:	pop	{r4, r5, r6, sl, fp, pc}

0002d418 <flatcc_json_parser_match_constant@@Base>:
   2d418:	push	{r4, r5, r6, r7, fp, lr}
   2d41c:	add	fp, sp, #16
   2d420:	ldr	r7, [fp, #8]
   2d424:	mov	r4, r1
   2d428:	sub	r1, r2, r1
   2d42c:	cmp	r1, r3
   2d430:	ble	2d530 <flatcc_json_parser_match_constant@@Base+0x118>
   2d434:	ldr	r1, [r0, #12]
   2d438:	mov	r5, r2
   2d43c:	add	r6, r4, r3
   2d440:	cmp	r1, #0
   2d444:	beq	2d4c8 <flatcc_json_parser_match_constant@@Base+0xb0>
   2d448:	sub	r1, r5, r6
   2d44c:	cmp	r1, #2
   2d450:	blt	2d478 <flatcc_json_parser_match_constant@@Base+0x60>
   2d454:	ldrb	r1, [r6]
   2d458:	mov	r2, r6
   2d45c:	cmp	r1, #32
   2d460:	bhi	2d488 <flatcc_json_parser_match_constant@@Base+0x70>
   2d464:	bne	2d478 <flatcc_json_parser_match_constant@@Base+0x60>
   2d468:	mov	r2, r6
   2d46c:	ldrb	r1, [r2, #1]!
   2d470:	cmp	r1, #32
   2d474:	bhi	2d488 <flatcc_json_parser_match_constant@@Base+0x70>
   2d478:	mov	r1, r6
   2d47c:	mov	r2, r5
   2d480:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2d484:	mov	r2, r0
   2d488:	cmp	r2, r5
   2d48c:	beq	2d540 <flatcc_json_parser_match_constant@@Base+0x128>
   2d490:	cmp	r2, r6
   2d494:	beq	2d550 <flatcc_json_parser_match_constant@@Base+0x138>
   2d498:	ldrsb	r0, [r2]
   2d49c:	cmp	r0, #95	; 0x5f
   2d4a0:	beq	2d4c0 <flatcc_json_parser_match_constant@@Base+0xa8>
   2d4a4:	cmn	r0, #1
   2d4a8:	ble	2d4c0 <flatcc_json_parser_match_constant@@Base+0xa8>
   2d4ac:	orr	r0, r0, #32
   2d4b0:	sub	r0, r0, #97	; 0x61
   2d4b4:	uxtb	r0, r0
   2d4b8:	cmp	r0, #25
   2d4bc:	bhi	2d550 <flatcc_json_parser_match_constant@@Base+0x138>
   2d4c0:	mov	r0, #1
   2d4c4:	b	2d538 <flatcc_json_parser_match_constant@@Base+0x120>
   2d4c8:	ldrb	r1, [r6]
   2d4cc:	cmp	r1, #92	; 0x5c
   2d4d0:	beq	2d578 <flatcc_json_parser_match_constant@@Base+0x160>
   2d4d4:	cmp	r1, #34	; 0x22
   2d4d8:	beq	2d50c <flatcc_json_parser_match_constant@@Base+0xf4>
   2d4dc:	cmp	r1, #32
   2d4e0:	bne	2d530 <flatcc_json_parser_match_constant@@Base+0x118>
   2d4e4:	add	r1, r4, r3
   2d4e8:	add	r1, r1, #1
   2d4ec:	cmp	r5, r1
   2d4f0:	beq	2d540 <flatcc_json_parser_match_constant@@Base+0x128>
   2d4f4:	ldrb	r2, [r1], #1
   2d4f8:	cmp	r2, #32
   2d4fc:	beq	2d4ec <flatcc_json_parser_match_constant@@Base+0xd4>
   2d500:	cmp	r2, #34	; 0x22
   2d504:	bne	2d5d4 <flatcc_json_parser_match_constant@@Base+0x1bc>
   2d508:	sub	r6, r1, #1
   2d50c:	mvn	r2, r6
   2d510:	add	r1, r6, #1
   2d514:	cmp	r2, #2
   2d518:	blt	2d5c0 <flatcc_json_parser_match_constant@@Base+0x1a8>
   2d51c:	ldrb	r2, [r1]
   2d520:	cmp	r2, #32
   2d524:	bls	2d5ac <flatcc_json_parser_match_constant@@Base+0x194>
   2d528:	mov	r2, r1
   2d52c:	b	2d5cc <flatcc_json_parser_match_constant@@Base+0x1b4>
   2d530:	mov	r0, #0
   2d534:	mov	r2, r4
   2d538:	str	r0, [r7]
   2d53c:	b	2d570 <flatcc_json_parser_match_constant@@Base+0x158>
   2d540:	mov	r0, #0
   2d544:	str	r0, [r7]
   2d548:	mov	r2, r5
   2d54c:	b	2d570 <flatcc_json_parser_match_constant@@Base+0x158>
   2d550:	mov	r0, #0
   2d554:	str	r0, [r7]
   2d558:	ldrb	r0, [r2]
   2d55c:	cmp	r0, #44	; 0x2c
   2d560:	cmpne	r0, #93	; 0x5d
   2d564:	beq	2d570 <flatcc_json_parser_match_constant@@Base+0x158>
   2d568:	cmp	r0, #125	; 0x7d
   2d56c:	movne	r2, r4
   2d570:	mov	r0, r2
   2d574:	pop	{r4, r5, r6, r7, fp, pc}
   2d578:	mov	r1, #0
   2d57c:	str	r1, [r7]
   2d580:	ldr	r1, [r0, #24]
   2d584:	cmp	r1, #0
   2d588:	bne	2d548 <flatcc_json_parser_match_constant@@Base+0x130>
   2d58c:	str	r6, [r0, #36]	; 0x24
   2d590:	mov	r1, #18
   2d594:	ldr	r2, [r0, #4]
   2d598:	sub	r2, r6, r2
   2d59c:	add	r2, r2, #1
   2d5a0:	str	r2, [r0, #20]
   2d5a4:	str	r1, [r0, #24]
   2d5a8:	b	2d548 <flatcc_json_parser_match_constant@@Base+0x130>
   2d5ac:	bne	2d5c0 <flatcc_json_parser_match_constant@@Base+0x1a8>
   2d5b0:	ldrb	r2, [r6, #2]!
   2d5b4:	cmp	r2, #32
   2d5b8:	mov	r2, r6
   2d5bc:	bhi	2d5cc <flatcc_json_parser_match_constant@@Base+0x1b4>
   2d5c0:	mov	r2, #0
   2d5c4:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2d5c8:	mov	r2, r0
   2d5cc:	mov	r0, #0
   2d5d0:	b	2d538 <flatcc_json_parser_match_constant@@Base+0x120>
   2d5d4:	mov	r0, #1
   2d5d8:	sub	r2, r1, #1
   2d5dc:	b	2d538 <flatcc_json_parser_match_constant@@Base+0x120>

0002d5e0 <flatcc_json_parser_unmatched_symbol@@Base>:
   2d5e0:	push	{r4, r5, fp, lr}
   2d5e4:	add	fp, sp, #8
   2d5e8:	mov	r5, r0
   2d5ec:	ldrb	r0, [r0, #8]
   2d5f0:	mov	r4, r2
   2d5f4:	tst	r0, #1
   2d5f8:	bne	2d61c <flatcc_json_parser_unmatched_symbol@@Base+0x3c>
   2d5fc:	ldr	r0, [r5, #24]
   2d600:	cmp	r0, #0
   2d604:	bne	2d7ec <flatcc_json_parser_unmatched_symbol@@Base+0x20c>
   2d608:	str	r1, [r5, #36]	; 0x24
   2d60c:	mov	r0, #13
   2d610:	ldr	r2, [r5, #4]
   2d614:	sub	r1, r1, r2
   2d618:	b	2d7e0 <flatcc_json_parser_unmatched_symbol@@Base+0x200>
   2d61c:	ldr	r0, [r5, #12]
   2d620:	cmp	r0, #0
   2d624:	beq	2d6a0 <flatcc_json_parser_unmatched_symbol@@Base+0xc0>
   2d628:	cmp	r1, r4
   2d62c:	beq	2d740 <flatcc_json_parser_unmatched_symbol@@Base+0x160>
   2d630:	ldrb	r2, [r1]
   2d634:	cmp	r2, #33	; 0x21
   2d638:	bcc	2d740 <flatcc_json_parser_unmatched_symbol@@Base+0x160>
   2d63c:	add	r1, r1, #1
   2d640:	uxtb	r0, r2
   2d644:	cmp	r0, #46	; 0x2e
   2d648:	cmpne	r0, #95	; 0x5f
   2d64c:	bne	2d668 <flatcc_json_parser_unmatched_symbol@@Base+0x88>
   2d650:	cmp	r4, r1
   2d654:	beq	2d700 <flatcc_json_parser_unmatched_symbol@@Base+0x120>
   2d658:	ldrb	r2, [r1], #1
   2d65c:	cmp	r2, #33	; 0x21
   2d660:	bcs	2d640 <flatcc_json_parser_unmatched_symbol@@Base+0x60>
   2d664:	b	2d698 <flatcc_json_parser_unmatched_symbol@@Base+0xb8>
   2d668:	sxtb	r3, r2
   2d66c:	cmp	r3, #0
   2d670:	bmi	2d650 <flatcc_json_parser_unmatched_symbol@@Base+0x70>
   2d674:	sub	r3, r2, #48	; 0x30
   2d678:	uxtb	r3, r3
   2d67c:	cmp	r3, #9
   2d680:	bls	2d650 <flatcc_json_parser_unmatched_symbol@@Base+0x70>
   2d684:	orr	r2, r2, #32
   2d688:	sub	r2, r2, #97	; 0x61
   2d68c:	uxtb	r2, r2
   2d690:	cmp	r2, #26
   2d694:	bcc	2d650 <flatcc_json_parser_unmatched_symbol@@Base+0x70>
   2d698:	sub	r1, r1, #1
   2d69c:	b	2d704 <flatcc_json_parser_unmatched_symbol@@Base+0x124>
   2d6a0:	cmp	r1, r4
   2d6a4:	beq	2d6e0 <flatcc_json_parser_unmatched_symbol@@Base+0x100>
   2d6a8:	ldrb	r0, [r1]
   2d6ac:	cmp	r0, #92	; 0x5c
   2d6b0:	beq	2d6c0 <flatcc_json_parser_unmatched_symbol@@Base+0xe0>
   2d6b4:	cmp	r0, #34	; 0x22
   2d6b8:	bne	2d6d0 <flatcc_json_parser_unmatched_symbol@@Base+0xf0>
   2d6bc:	b	2d6f8 <flatcc_json_parser_unmatched_symbol@@Base+0x118>
   2d6c0:	sub	r0, r4, r1
   2d6c4:	cmp	r0, #2
   2d6c8:	blt	2d6e0 <flatcc_json_parser_unmatched_symbol@@Base+0x100>
   2d6cc:	add	r1, r1, #1
   2d6d0:	add	r1, r1, #1
   2d6d4:	cmp	r1, r4
   2d6d8:	bne	2d6a8 <flatcc_json_parser_unmatched_symbol@@Base+0xc8>
   2d6dc:	mov	r1, r4
   2d6e0:	ldr	r0, [r5, #24]
   2d6e4:	mov	r2, r4
   2d6e8:	cmp	r0, #0
   2d6ec:	bne	2d744 <flatcc_json_parser_unmatched_symbol@@Base+0x164>
   2d6f0:	mov	r0, #20
   2d6f4:	b	2d720 <flatcc_json_parser_unmatched_symbol@@Base+0x140>
   2d6f8:	add	r2, r1, #1
   2d6fc:	b	2d744 <flatcc_json_parser_unmatched_symbol@@Base+0x164>
   2d700:	mov	r1, r4
   2d704:	cmp	r0, #46	; 0x2e
   2d708:	bne	2d740 <flatcc_json_parser_unmatched_symbol@@Base+0x160>
   2d70c:	ldr	r0, [r5, #24]
   2d710:	mov	r2, r4
   2d714:	cmp	r0, #0
   2d718:	bne	2d744 <flatcc_json_parser_unmatched_symbol@@Base+0x164>
   2d71c:	mov	r0, #5
   2d720:	str	r1, [r5, #36]	; 0x24
   2d724:	ldr	r2, [r5, #4]
   2d728:	sub	r1, r1, r2
   2d72c:	mov	r2, r4
   2d730:	add	r1, r1, #1
   2d734:	str	r1, [r5, #20]
   2d738:	str	r0, [r5, #24]
   2d73c:	b	2d744 <flatcc_json_parser_unmatched_symbol@@Base+0x164>
   2d740:	mov	r2, r1
   2d744:	sub	r0, r4, r2
   2d748:	cmp	r0, #2
   2d74c:	blt	2d778 <flatcc_json_parser_unmatched_symbol@@Base+0x198>
   2d750:	ldrb	r0, [r2]
   2d754:	cmp	r0, #32
   2d758:	bls	2d764 <flatcc_json_parser_unmatched_symbol@@Base+0x184>
   2d75c:	mov	r3, r2
   2d760:	b	2d78c <flatcc_json_parser_unmatched_symbol@@Base+0x1ac>
   2d764:	bne	2d778 <flatcc_json_parser_unmatched_symbol@@Base+0x198>
   2d768:	mov	r3, r2
   2d76c:	ldrb	r0, [r3, #1]!
   2d770:	cmp	r0, #32
   2d774:	bhi	2d78c <flatcc_json_parser_unmatched_symbol@@Base+0x1ac>
   2d778:	mov	r1, r2
   2d77c:	mov	r0, r5
   2d780:	mov	r2, r4
   2d784:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2d788:	mov	r3, r0
   2d78c:	cmp	r3, r4
   2d790:	beq	2d7c4 <flatcc_json_parser_unmatched_symbol@@Base+0x1e4>
   2d794:	ldrb	r0, [r3]
   2d798:	cmp	r0, #58	; 0x3a
   2d79c:	bne	2d7c4 <flatcc_json_parser_unmatched_symbol@@Base+0x1e4>
   2d7a0:	add	r1, r3, #1
   2d7a4:	sub	r0, r4, r1
   2d7a8:	cmp	r0, #2
   2d7ac:	blt	2d804 <flatcc_json_parser_unmatched_symbol@@Base+0x224>
   2d7b0:	ldrb	r0, [r1]
   2d7b4:	cmp	r0, #32
   2d7b8:	bls	2d7f4 <flatcc_json_parser_unmatched_symbol@@Base+0x214>
   2d7bc:	mov	r3, r1
   2d7c0:	b	2d814 <flatcc_json_parser_unmatched_symbol@@Base+0x234>
   2d7c4:	ldr	r0, [r5, #24]
   2d7c8:	cmp	r0, #0
   2d7cc:	bne	2d7ec <flatcc_json_parser_unmatched_symbol@@Base+0x20c>
   2d7d0:	str	r3, [r5, #36]	; 0x24
   2d7d4:	mov	r0, #4
   2d7d8:	ldr	r1, [r5, #4]
   2d7dc:	sub	r1, r3, r1
   2d7e0:	add	r1, r1, #1
   2d7e4:	str	r1, [r5, #20]
   2d7e8:	str	r0, [r5, #24]
   2d7ec:	mov	r0, r4
   2d7f0:	pop	{r4, r5, fp, pc}
   2d7f4:	bne	2d804 <flatcc_json_parser_unmatched_symbol@@Base+0x224>
   2d7f8:	ldrb	r0, [r3, #2]!
   2d7fc:	cmp	r0, #32
   2d800:	bhi	2d814 <flatcc_json_parser_unmatched_symbol@@Base+0x234>
   2d804:	mov	r0, r5
   2d808:	mov	r2, r4
   2d80c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2d810:	mov	r3, r0
   2d814:	mov	r0, r5
   2d818:	mov	r1, r3
   2d81c:	mov	r2, r4
   2d820:	pop	{r4, r5, fp, lr}
   2d824:	b	2d828 <flatcc_json_parser_generic_json@@Base>

0002d828 <flatcc_json_parser_generic_json@@Base>:
   2d828:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d82c:	add	fp, sp, #28
   2d830:	sub	sp, sp, #532	; 0x214
   2d834:	mov	r7, r1
   2d838:	cmp	r1, r2
   2d83c:	beq	2e228 <flatcc_json_parser_generic_json@@Base+0xa00>
   2d840:	mov	r5, r0
   2d844:	add	r0, r2, #1
   2d848:	add	r1, sp, #16
   2d84c:	mov	r4, r2
   2d850:	mov	sl, #0
   2d854:	str	r0, [sp]
   2d858:	add	r0, r5, #36	; 0x24
   2d85c:	sub	r9, r1, #1
   2d860:	add	r6, r5, #4
   2d864:	add	r8, r5, #24
   2d868:	str	r0, [sp, #8]
   2d86c:	add	r0, r5, #20
   2d870:	str	r0, [sp, #4]
   2d874:	mov	r0, r1
   2d878:	cmp	sl, #0
   2d87c:	beq	2dad4 <flatcc_json_parser_generic_json@@Base+0x2ac>
   2d880:	ldrb	r0, [r0, #-1]
   2d884:	cmp	r0, #125	; 0x7d
   2d888:	bne	2dad4 <flatcc_json_parser_generic_json@@Base+0x2ac>
   2d88c:	ldrb	r0, [r7]
   2d890:	cmp	r0, #46	; 0x2e
   2d894:	beq	2d8f4 <flatcc_json_parser_generic_json@@Base+0xcc>
   2d898:	cmp	r0, #34	; 0x22
   2d89c:	bne	2d93c <flatcc_json_parser_generic_json@@Base+0x114>
   2d8a0:	mov	r0, #0
   2d8a4:	mov	r2, r4
   2d8a8:	str	r0, [r5, #12]
   2d8ac:	add	r0, r7, #1
   2d8b0:	cmp	r0, r4
   2d8b4:	beq	2da00 <flatcc_json_parser_generic_json@@Base+0x1d8>
   2d8b8:	ldrb	r1, [r0]
   2d8bc:	cmp	r1, #92	; 0x5c
   2d8c0:	beq	2d8d0 <flatcc_json_parser_generic_json@@Base+0xa8>
   2d8c4:	cmp	r1, #34	; 0x22
   2d8c8:	bne	2d8e0 <flatcc_json_parser_generic_json@@Base+0xb8>
   2d8cc:	b	2d9c8 <flatcc_json_parser_generic_json@@Base+0x1a0>
   2d8d0:	sub	r1, r4, r0
   2d8d4:	cmp	r1, #2
   2d8d8:	blt	2d9fc <flatcc_json_parser_generic_json@@Base+0x1d4>
   2d8dc:	add	r0, r0, #1
   2d8e0:	add	r0, r0, #1
   2d8e4:	cmp	r0, r4
   2d8e8:	bne	2d8b8 <flatcc_json_parser_generic_json@@Base+0x90>
   2d8ec:	mov	r2, r4
   2d8f0:	b	2da00 <flatcc_json_parser_generic_json@@Base+0x1d8>
   2d8f4:	ldr	r0, [r8]
   2d8f8:	cmp	r0, #0
   2d8fc:	bne	2d924 <flatcc_json_parser_generic_json@@Base+0xfc>
   2d900:	mov	r0, #5
   2d904:	ldr	r1, [sp, #4]
   2d908:	str	r0, [r8]
   2d90c:	ldr	r0, [r6]
   2d910:	sub	r0, r7, r0
   2d914:	add	r0, r0, #1
   2d918:	str	r0, [r1]
   2d91c:	ldr	r0, [sp, #8]
   2d920:	str	r7, [r0]
   2d924:	ldr	r0, [r5, #12]
   2d928:	mov	r2, r4
   2d92c:	mov	r1, r4
   2d930:	cmp	r0, #0
   2d934:	bne	2da38 <flatcc_json_parser_generic_json@@Base+0x210>
   2d938:	b	2da00 <flatcc_json_parser_generic_json@@Base+0x1d8>
   2d93c:	mov	r0, #1
   2d940:	cmp	r7, r4
   2d944:	mov	r1, r4
   2d948:	str	r0, [r5, #12]
   2d94c:	beq	2da38 <flatcc_json_parser_generic_json@@Base+0x210>
   2d950:	ldrb	r2, [r7]
   2d954:	cmp	r2, #33	; 0x21
   2d958:	bcc	2d9c0 <flatcc_json_parser_generic_json@@Base+0x198>
   2d95c:	add	r1, r7, #1
   2d960:	uxtb	r0, r2
   2d964:	cmp	r0, #46	; 0x2e
   2d968:	cmpne	r0, #95	; 0x5f
   2d96c:	bne	2d988 <flatcc_json_parser_generic_json@@Base+0x160>
   2d970:	cmp	r4, r1
   2d974:	beq	2d9d0 <flatcc_json_parser_generic_json@@Base+0x1a8>
   2d978:	ldrb	r2, [r1], #1
   2d97c:	cmp	r2, #33	; 0x21
   2d980:	bcs	2d960 <flatcc_json_parser_generic_json@@Base+0x138>
   2d984:	b	2d9b8 <flatcc_json_parser_generic_json@@Base+0x190>
   2d988:	sxtb	r3, r2
   2d98c:	cmp	r3, #0
   2d990:	bmi	2d970 <flatcc_json_parser_generic_json@@Base+0x148>
   2d994:	sub	r3, r2, #48	; 0x30
   2d998:	uxtb	r3, r3
   2d99c:	cmp	r3, #9
   2d9a0:	bls	2d970 <flatcc_json_parser_generic_json@@Base+0x148>
   2d9a4:	orr	r2, r2, #32
   2d9a8:	sub	r2, r2, #97	; 0x61
   2d9ac:	uxtb	r2, r2
   2d9b0:	cmp	r2, #26
   2d9b4:	bcc	2d970 <flatcc_json_parser_generic_json@@Base+0x148>
   2d9b8:	sub	r2, r1, #1
   2d9bc:	b	2d9d4 <flatcc_json_parser_generic_json@@Base+0x1ac>
   2d9c0:	mov	r1, r7
   2d9c4:	b	2da38 <flatcc_json_parser_generic_json@@Base+0x210>
   2d9c8:	add	r1, r0, #1
   2d9cc:	b	2da38 <flatcc_json_parser_generic_json@@Base+0x210>
   2d9d0:	mov	r2, r4
   2d9d4:	cmp	r0, #46	; 0x2e
   2d9d8:	bne	2d9f4 <flatcc_json_parser_generic_json@@Base+0x1cc>
   2d9dc:	ldr	r0, [r8]
   2d9e0:	mov	r1, r4
   2d9e4:	cmp	r0, #0
   2d9e8:	bne	2da38 <flatcc_json_parser_generic_json@@Base+0x210>
   2d9ec:	mov	r0, #5
   2d9f0:	b	2da14 <flatcc_json_parser_generic_json@@Base+0x1ec>
   2d9f4:	mov	r1, r2
   2d9f8:	b	2da38 <flatcc_json_parser_generic_json@@Base+0x210>
   2d9fc:	mov	r2, r0
   2da00:	ldr	r0, [r8]
   2da04:	mov	r1, r4
   2da08:	cmp	r0, #0
   2da0c:	bne	2da38 <flatcc_json_parser_generic_json@@Base+0x210>
   2da10:	mov	r0, #20
   2da14:	str	r0, [r8]
   2da18:	ldr	r1, [sp, #4]
   2da1c:	ldr	r0, [r6]
   2da20:	sub	r0, r2, r0
   2da24:	add	r0, r0, #1
   2da28:	str	r0, [r1]
   2da2c:	ldr	r0, [sp, #8]
   2da30:	mov	r1, r4
   2da34:	str	r2, [r0]
   2da38:	sub	r0, r4, r1
   2da3c:	cmp	r0, #2
   2da40:	blt	2da6c <flatcc_json_parser_generic_json@@Base+0x244>
   2da44:	ldrb	r0, [r1]
   2da48:	cmp	r0, #32
   2da4c:	bls	2da58 <flatcc_json_parser_generic_json@@Base+0x230>
   2da50:	mov	r7, r1
   2da54:	b	2da7c <flatcc_json_parser_generic_json@@Base+0x254>
   2da58:	bne	2da6c <flatcc_json_parser_generic_json@@Base+0x244>
   2da5c:	mov	r7, r1
   2da60:	ldrb	r0, [r7, #1]!
   2da64:	cmp	r0, #32
   2da68:	bhi	2da7c <flatcc_json_parser_generic_json@@Base+0x254>
   2da6c:	mov	r0, r5
   2da70:	mov	r2, r4
   2da74:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2da78:	mov	r7, r0
   2da7c:	cmp	r7, r4
   2da80:	beq	2e298 <flatcc_json_parser_generic_json@@Base+0xa70>
   2da84:	ldrb	r0, [r7]
   2da88:	cmp	r0, #58	; 0x3a
   2da8c:	bne	2e2b0 <flatcc_json_parser_generic_json@@Base+0xa88>
   2da90:	add	r1, r7, #1
   2da94:	sub	r0, r4, r1
   2da98:	cmp	r0, #2
   2da9c:	blt	2dac4 <flatcc_json_parser_generic_json@@Base+0x29c>
   2daa0:	ldrb	r0, [r1]
   2daa4:	cmp	r0, #32
   2daa8:	bls	2dab4 <flatcc_json_parser_generic_json@@Base+0x28c>
   2daac:	mov	r7, r1
   2dab0:	b	2dad8 <flatcc_json_parser_generic_json@@Base+0x2b0>
   2dab4:	bne	2dac4 <flatcc_json_parser_generic_json@@Base+0x29c>
   2dab8:	ldrb	r0, [r7, #2]!
   2dabc:	cmp	r0, #32
   2dac0:	bhi	2dad8 <flatcc_json_parser_generic_json@@Base+0x2b0>
   2dac4:	mov	r0, r5
   2dac8:	mov	r2, r4
   2dacc:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2dad0:	mov	r7, r0
   2dad4:	ldrb	r0, [r7]
   2dad8:	sub	r1, r0, #48	; 0x30
   2dadc:	cmp	r1, #10
   2dae0:	bcs	2db54 <flatcc_json_parser_generic_json@@Base+0x32c>
   2dae4:	cmp	r7, r4
   2dae8:	beq	2df18 <flatcc_json_parser_generic_json@@Base+0x6f0>
   2daec:	cmp	r0, #45	; 0x2d
   2daf0:	bne	2db04 <flatcc_json_parser_generic_json@@Base+0x2dc>
   2daf4:	add	r7, r7, #1
   2daf8:	cmp	r7, r4
   2dafc:	beq	2ddd0 <flatcc_json_parser_generic_json@@Base+0x5a8>
   2db00:	ldrb	r0, [r7]
   2db04:	cmp	r0, #48	; 0x30
   2db08:	bne	2db70 <flatcc_json_parser_generic_json@@Base+0x348>
   2db0c:	add	r1, r7, #1
   2db10:	cmp	r1, r4
   2db14:	mov	r2, r4
   2db18:	beq	2dde8 <flatcc_json_parser_generic_json@@Base+0x5c0>
   2db1c:	ldrb	r0, [r1]
   2db20:	cmp	r0, #46	; 0x2e
   2db24:	bne	2dd20 <flatcc_json_parser_generic_json@@Base+0x4f8>
   2db28:	mov	r0, r1
   2db2c:	ldrb	r2, [r0, #1]!
   2db30:	sub	r2, r2, #48	; 0x30
   2db34:	uxtb	r2, r2
   2db38:	cmp	r2, #10
   2db3c:	bcc	2dcec <flatcc_json_parser_generic_json@@Base+0x4c4>
   2db40:	ldr	r1, [r8]
   2db44:	cmp	r1, #0
   2db48:	bne	2df18 <flatcc_json_parser_generic_json@@Base+0x6f0>
   2db4c:	mov	r1, #6
   2db50:	b	2def8 <flatcc_json_parser_generic_json@@Base+0x6d0>
   2db54:	cmp	r0, #90	; 0x5a
   2db58:	bgt	2dbb4 <flatcc_json_parser_generic_json@@Base+0x38c>
   2db5c:	cmp	r0, #34	; 0x22
   2db60:	beq	2dc24 <flatcc_json_parser_generic_json@@Base+0x3fc>
   2db64:	cmp	r0, #45	; 0x2d
   2db68:	beq	2dae4 <flatcc_json_parser_generic_json@@Base+0x2bc>
   2db6c:	b	2dccc <flatcc_json_parser_generic_json@@Base+0x4a4>
   2db70:	sub	r0, r0, #49	; 0x31
   2db74:	uxtb	r0, r0
   2db78:	cmp	r0, #8
   2db7c:	bls	2dbfc <flatcc_json_parser_generic_json@@Base+0x3d4>
   2db80:	ldr	r0, [r8]
   2db84:	cmp	r0, #0
   2db88:	bne	2df18 <flatcc_json_parser_generic_json@@Base+0x6f0>
   2db8c:	mov	r0, #6
   2db90:	ldr	r1, [sp, #4]
   2db94:	str	r0, [r8]
   2db98:	ldr	r0, [r6]
   2db9c:	sub	r0, r7, r0
   2dba0:	add	r0, r0, #1
   2dba4:	str	r0, [r1]
   2dba8:	ldr	r0, [sp, #8]
   2dbac:	str	r7, [r0]
   2dbb0:	b	2df18 <flatcc_json_parser_generic_json@@Base+0x6f0>
   2dbb4:	cmp	r0, #91	; 0x5b
   2dbb8:	beq	2dc94 <flatcc_json_parser_generic_json@@Base+0x46c>
   2dbbc:	cmp	r0, #123	; 0x7b
   2dbc0:	bne	2dccc <flatcc_json_parser_generic_json@@Base+0x4a4>
   2dbc4:	cmp	sl, #512	; 0x200
   2dbc8:	beq	2e2c4 <flatcc_json_parser_generic_json@@Base+0xa9c>
   2dbcc:	add	r0, sp, #16
   2dbd0:	mov	r1, #125	; 0x7d
   2dbd4:	strb	r1, [r0, sl]
   2dbd8:	add	r1, r7, #1
   2dbdc:	sub	r0, r4, r1
   2dbe0:	cmp	r0, #2
   2dbe4:	blt	2de7c <flatcc_json_parser_generic_json@@Base+0x654>
   2dbe8:	ldrb	r0, [r1]
   2dbec:	cmp	r0, #32
   2dbf0:	bls	2de6c <flatcc_json_parser_generic_json@@Base+0x644>
   2dbf4:	mov	r7, r1
   2dbf8:	b	2de8c <flatcc_json_parser_generic_json@@Base+0x664>
   2dbfc:	add	r0, r7, #1
   2dc00:	cmp	r4, r0
   2dc04:	beq	2dde4 <flatcc_json_parser_generic_json@@Base+0x5bc>
   2dc08:	ldrb	r1, [r0], #1
   2dc0c:	sub	r1, r1, #48	; 0x30
   2dc10:	uxtb	r1, r1
   2dc14:	cmp	r1, #10
   2dc18:	bcc	2dc00 <flatcc_json_parser_generic_json@@Base+0x3d8>
   2dc1c:	sub	r1, r0, #1
   2dc20:	b	2db10 <flatcc_json_parser_generic_json@@Base+0x2e8>
   2dc24:	cmp	r7, r4
   2dc28:	beq	2de1c <flatcc_json_parser_generic_json@@Base+0x5f4>
   2dc2c:	add	r1, r7, #1
   2dc30:	mov	r0, r4
   2dc34:	add	r7, sp, #12
   2dc38:	cmp	r1, r4
   2dc3c:	beq	2dee8 <flatcc_json_parser_generic_json@@Base+0x6c0>
   2dc40:	ldrb	r0, [r1]
   2dc44:	cmp	r0, #34	; 0x22
   2dc48:	beq	2de50 <flatcc_json_parser_generic_json@@Base+0x628>
   2dc4c:	mov	r0, r5
   2dc50:	mov	r2, r4
   2dc54:	bl	2ceec <flatcc_json_parser_string_part@@Base>
   2dc58:	mov	r1, r0
   2dc5c:	cmp	r0, r4
   2dc60:	beq	2dc70 <flatcc_json_parser_generic_json@@Base+0x448>
   2dc64:	ldrb	r0, [r1]
   2dc68:	cmp	r0, #34	; 0x22
   2dc6c:	beq	2de50 <flatcc_json_parser_generic_json@@Base+0x628>
   2dc70:	mov	r0, r5
   2dc74:	mov	r2, r4
   2dc78:	mov	r3, r7
   2dc7c:	bl	2d048 <flatcc_json_parser_string_escape@@Base>
   2dc80:	mov	r1, r0
   2dc84:	cmp	r0, r4
   2dc88:	bne	2dc40 <flatcc_json_parser_generic_json@@Base+0x418>
   2dc8c:	mov	r0, r4
   2dc90:	b	2dee8 <flatcc_json_parser_generic_json@@Base+0x6c0>
   2dc94:	cmp	sl, #512	; 0x200
   2dc98:	beq	2e2c4 <flatcc_json_parser_generic_json@@Base+0xa9c>
   2dc9c:	add	r0, sp, #16
   2dca0:	mov	r1, #93	; 0x5d
   2dca4:	strb	r1, [r0, sl]
   2dca8:	add	r1, r7, #1
   2dcac:	sub	r0, r4, r1
   2dcb0:	cmp	r0, #2
   2dcb4:	blt	2deb4 <flatcc_json_parser_generic_json@@Base+0x68c>
   2dcb8:	ldrb	r0, [r1]
   2dcbc:	cmp	r0, #32
   2dcc0:	bls	2dea4 <flatcc_json_parser_generic_json@@Base+0x67c>
   2dcc4:	mov	r7, r1
   2dcc8:	b	2dec4 <flatcc_json_parser_generic_json@@Base+0x69c>
   2dccc:	mov	r0, r5
   2dcd0:	mov	r1, r7
   2dcd4:	mov	r2, r4
   2dcd8:	bl	2d350 <flatcc_json_parser_skip_constant@@Base>
   2dcdc:	mov	r1, r0
   2dce0:	cmp	r7, r0
   2dce4:	bne	2df1c <flatcc_json_parser_generic_json@@Base+0x6f4>
   2dce8:	b	2e2d8 <flatcc_json_parser_generic_json@@Base+0xab0>
   2dcec:	add	r1, r1, #2
   2dcf0:	mov	r2, r4
   2dcf4:	cmp	r1, r4
   2dcf8:	beq	2dde8 <flatcc_json_parser_generic_json@@Base+0x5c0>
   2dcfc:	ldrb	r0, [r1]
   2dd00:	sub	r2, r0, #48	; 0x30
   2dd04:	uxtb	r2, r2
   2dd08:	cmp	r2, #9
   2dd0c:	bhi	2dd20 <flatcc_json_parser_generic_json@@Base+0x4f8>
   2dd10:	add	r1, r1, #1
   2dd14:	cmp	r4, r1
   2dd18:	bne	2dcfc <flatcc_json_parser_generic_json@@Base+0x4d4>
   2dd1c:	b	2dde4 <flatcc_json_parser_generic_json@@Base+0x5bc>
   2dd20:	cmp	r1, r4
   2dd24:	mov	r2, r4
   2dd28:	beq	2dde8 <flatcc_json_parser_generic_json@@Base+0x5c0>
   2dd2c:	orr	r2, r0, #32
   2dd30:	cmp	r2, #101	; 0x65
   2dd34:	bne	2dd94 <flatcc_json_parser_generic_json@@Base+0x56c>
   2dd38:	add	r0, r1, #1
   2dd3c:	cmp	r0, r4
   2dd40:	beq	2ddd0 <flatcc_json_parser_generic_json@@Base+0x5a8>
   2dd44:	ldrb	r2, [r0]
   2dd48:	cmp	r2, #45	; 0x2d
   2dd4c:	cmpne	r2, #43	; 0x2b
   2dd50:	addeq	r0, r1, #2
   2dd54:	cmp	r0, r4
   2dd58:	beq	2db40 <flatcc_json_parser_generic_json@@Base+0x318>
   2dd5c:	ldrb	r1, [r0]
   2dd60:	sub	r1, r1, #48	; 0x30
   2dd64:	uxtb	r1, r1
   2dd68:	cmp	r1, #9
   2dd6c:	bhi	2db40 <flatcc_json_parser_generic_json@@Base+0x318>
   2dd70:	add	r1, r0, #1
   2dd74:	cmp	r4, r1
   2dd78:	beq	2dde4 <flatcc_json_parser_generic_json@@Base+0x5bc>
   2dd7c:	ldrb	r0, [r1], #1
   2dd80:	sub	r2, r0, #48	; 0x30
   2dd84:	uxtb	r2, r2
   2dd88:	cmp	r2, #10
   2dd8c:	bcc	2dd74 <flatcc_json_parser_generic_json@@Base+0x54c>
   2dd90:	sub	r1, r1, #1
   2dd94:	cmp	r1, r4
   2dd98:	mov	r2, r4
   2dd9c:	beq	2dde8 <flatcc_json_parser_generic_json@@Base+0x5c0>
   2dda0:	cmp	r0, #43	; 0x2b
   2dda4:	bgt	2e1f0 <flatcc_json_parser_generic_json@@Base+0x9c8>
   2dda8:	sub	r0, r0, #9
   2ddac:	cmp	r0, #23
   2ddb0:	bhi	2e220 <flatcc_json_parser_generic_json@@Base+0x9f8>
   2ddb4:	movw	r3, #23
   2ddb8:	mov	r2, #1
   2ddbc:	movt	r3, #128	; 0x80
   2ddc0:	tst	r3, r2, lsl r0
   2ddc4:	mov	r2, r1
   2ddc8:	bne	2df1c <flatcc_json_parser_generic_json@@Base+0x6f4>
   2ddcc:	b	2dde8 <flatcc_json_parser_generic_json@@Base+0x5c0>
   2ddd0:	ldr	r0, [r8]
   2ddd4:	cmp	r0, #0
   2ddd8:	bne	2df18 <flatcc_json_parser_generic_json@@Base+0x6f0>
   2dddc:	mov	r0, #6
   2dde0:	b	2de2c <flatcc_json_parser_generic_json@@Base+0x604>
   2dde4:	mov	r2, r4
   2dde8:	ldr	r0, [r8]
   2ddec:	cmp	r0, #0
   2ddf0:	bne	2df18 <flatcc_json_parser_generic_json@@Base+0x6f0>
   2ddf4:	mov	r0, #6
   2ddf8:	ldr	r1, [sp, #4]
   2ddfc:	str	r0, [r8]
   2de00:	ldr	r0, [r6]
   2de04:	sub	r0, r2, r0
   2de08:	add	r0, r0, #1
   2de0c:	str	r0, [r1]
   2de10:	ldr	r0, [sp, #8]
   2de14:	str	r2, [r0]
   2de18:	b	2df18 <flatcc_json_parser_generic_json@@Base+0x6f0>
   2de1c:	ldr	r0, [r8]
   2de20:	cmp	r0, #0
   2de24:	bne	2df18 <flatcc_json_parser_generic_json@@Base+0x6f0>
   2de28:	mov	r0, #16
   2de2c:	str	r0, [r8]
   2de30:	ldr	r1, [sp]
   2de34:	ldr	r0, [r6]
   2de38:	sub	r0, r1, r0
   2de3c:	ldr	r1, [sp, #4]
   2de40:	str	r0, [r1]
   2de44:	ldr	r0, [sp, #8]
   2de48:	str	r4, [r0]
   2de4c:	b	2df18 <flatcc_json_parser_generic_json@@Base+0x6f0>
   2de50:	cmp	r1, r4
   2de54:	beq	2dee4 <flatcc_json_parser_generic_json@@Base+0x6bc>
   2de58:	ldrb	r0, [r1]
   2de5c:	cmp	r0, #34	; 0x22
   2de60:	bne	2dee4 <flatcc_json_parser_generic_json@@Base+0x6bc>
   2de64:	add	r1, r1, #1
   2de68:	b	2df1c <flatcc_json_parser_generic_json@@Base+0x6f4>
   2de6c:	bne	2de7c <flatcc_json_parser_generic_json@@Base+0x654>
   2de70:	ldrb	r0, [r7, #2]!
   2de74:	cmp	r0, #32
   2de78:	bhi	2de8c <flatcc_json_parser_generic_json@@Base+0x664>
   2de7c:	mov	r0, r5
   2de80:	mov	r2, r4
   2de84:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2de88:	mov	r7, r0
   2de8c:	cmp	r7, r4
   2de90:	beq	2e288 <flatcc_json_parser_generic_json@@Base+0xa60>
   2de94:	ldrb	r0, [r7]
   2de98:	add	sl, sl, #1
   2de9c:	cmp	r0, #125	; 0x7d
   2dea0:	b	2ded8 <flatcc_json_parser_generic_json@@Base+0x6b0>
   2dea4:	bne	2deb4 <flatcc_json_parser_generic_json@@Base+0x68c>
   2dea8:	ldrb	r0, [r7, #2]!
   2deac:	cmp	r0, #32
   2deb0:	bhi	2dec4 <flatcc_json_parser_generic_json@@Base+0x69c>
   2deb4:	mov	r0, r5
   2deb8:	mov	r2, r4
   2debc:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2dec0:	mov	r7, r0
   2dec4:	cmp	r7, r4
   2dec8:	beq	2e288 <flatcc_json_parser_generic_json@@Base+0xa60>
   2decc:	ldrb	r0, [r7]
   2ded0:	add	sl, sl, #1
   2ded4:	cmp	r0, #93	; 0x5d
   2ded8:	mov	r1, r7
   2dedc:	beq	2df1c <flatcc_json_parser_generic_json@@Base+0x6f4>
   2dee0:	b	2e1dc <flatcc_json_parser_generic_json@@Base+0x9b4>
   2dee4:	mov	r0, r1
   2dee8:	ldr	r1, [r8]
   2deec:	cmp	r1, #0
   2def0:	bne	2df18 <flatcc_json_parser_generic_json@@Base+0x6f0>
   2def4:	mov	r1, #20
   2def8:	str	r1, [r8]
   2defc:	ldr	r2, [sp, #4]
   2df00:	ldr	r1, [r6]
   2df04:	sub	r1, r0, r1
   2df08:	add	r1, r1, #1
   2df0c:	str	r1, [r2]
   2df10:	ldr	r1, [sp, #8]
   2df14:	str	r0, [r1]
   2df18:	mov	r1, r4
   2df1c:	subs	r2, r1, r4
   2df20:	mov	r3, sl
   2df24:	movwne	r2, #1
   2df28:	cmp	sl, #0
   2df2c:	movwne	r3, #1
   2df30:	cmpne	r1, r4
   2df34:	beq	2e230 <flatcc_json_parser_generic_json@@Base+0xa08>
   2df38:	ldrb	r2, [r9, sl]
   2df3c:	sub	r0, r4, r1
   2df40:	cmp	r2, #93	; 0x5d
   2df44:	bne	2df64 <flatcc_json_parser_generic_json@@Base+0x73c>
   2df48:	cmp	r0, #2
   2df4c:	blt	2df94 <flatcc_json_parser_generic_json@@Base+0x76c>
   2df50:	ldrb	r0, [r1]
   2df54:	cmp	r0, #32
   2df58:	bls	2df80 <flatcc_json_parser_generic_json@@Base+0x758>
   2df5c:	mov	r7, r1
   2df60:	b	2dfa4 <flatcc_json_parser_generic_json@@Base+0x77c>
   2df64:	cmp	r0, #2
   2df68:	blt	2dff0 <flatcc_json_parser_generic_json@@Base+0x7c8>
   2df6c:	ldrb	r0, [r1]
   2df70:	cmp	r0, #32
   2df74:	bls	2dfdc <flatcc_json_parser_generic_json@@Base+0x7b4>
   2df78:	mov	r7, r1
   2df7c:	b	2e000 <flatcc_json_parser_generic_json@@Base+0x7d8>
   2df80:	bne	2df94 <flatcc_json_parser_generic_json@@Base+0x76c>
   2df84:	mov	r7, r1
   2df88:	ldrb	r0, [r7, #1]!
   2df8c:	cmp	r0, #32
   2df90:	bhi	2dfa4 <flatcc_json_parser_generic_json@@Base+0x77c>
   2df94:	mov	r0, r5
   2df98:	mov	r2, r4
   2df9c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2dfa0:	mov	r7, r0
   2dfa4:	cmp	r7, r4
   2dfa8:	mov	r1, r4
   2dfac:	beq	2e174 <flatcc_json_parser_generic_json@@Base+0x94c>
   2dfb0:	ldrb	r0, [r7]
   2dfb4:	cmp	r0, #44	; 0x2c
   2dfb8:	beq	2e05c <flatcc_json_parser_generic_json@@Base+0x834>
   2dfbc:	cmp	r0, #93	; 0x5d
   2dfc0:	beq	2e128 <flatcc_json_parser_generic_json@@Base+0x900>
   2dfc4:	ldr	r0, [r8]
   2dfc8:	mov	r1, r4
   2dfcc:	cmp	r0, #0
   2dfd0:	bne	2e174 <flatcc_json_parser_generic_json@@Base+0x94c>
   2dfd4:	mov	r0, #9
   2dfd8:	b	2e034 <flatcc_json_parser_generic_json@@Base+0x80c>
   2dfdc:	bne	2dff0 <flatcc_json_parser_generic_json@@Base+0x7c8>
   2dfe0:	mov	r7, r1
   2dfe4:	ldrb	r0, [r7, #1]!
   2dfe8:	cmp	r0, #32
   2dfec:	bhi	2e000 <flatcc_json_parser_generic_json@@Base+0x7d8>
   2dff0:	mov	r0, r5
   2dff4:	mov	r2, r4
   2dff8:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2dffc:	mov	r7, r0
   2e000:	cmp	r7, r4
   2e004:	mov	r1, r4
   2e008:	beq	2e174 <flatcc_json_parser_generic_json@@Base+0x94c>
   2e00c:	ldrb	r0, [r7]
   2e010:	cmp	r0, #44	; 0x2c
   2e014:	beq	2e080 <flatcc_json_parser_generic_json@@Base+0x858>
   2e018:	cmp	r0, #125	; 0x7d
   2e01c:	beq	2e128 <flatcc_json_parser_generic_json@@Base+0x900>
   2e020:	ldr	r0, [r8]
   2e024:	mov	r1, r4
   2e028:	cmp	r0, #0
   2e02c:	bne	2e174 <flatcc_json_parser_generic_json@@Base+0x94c>
   2e030:	mov	r0, #10
   2e034:	str	r0, [r8]
   2e038:	ldr	r1, [sp, #4]
   2e03c:	ldr	r0, [r6]
   2e040:	sub	r0, r7, r0
   2e044:	add	r0, r0, #1
   2e048:	str	r0, [r1]
   2e04c:	ldr	r0, [sp, #8]
   2e050:	mov	r1, r4
   2e054:	str	r7, [r0]
   2e058:	b	2e174 <flatcc_json_parser_generic_json@@Base+0x94c>
   2e05c:	add	r1, r7, #1
   2e060:	sub	r0, r4, r1
   2e064:	cmp	r0, #2
   2e068:	blt	2e0b4 <flatcc_json_parser_generic_json@@Base+0x88c>
   2e06c:	ldrb	r0, [r1]
   2e070:	cmp	r0, #32
   2e074:	bls	2e0a4 <flatcc_json_parser_generic_json@@Base+0x87c>
   2e078:	mov	r7, r1
   2e07c:	b	2e0c4 <flatcc_json_parser_generic_json@@Base+0x89c>
   2e080:	add	r1, r7, #1
   2e084:	sub	r0, r4, r1
   2e088:	cmp	r0, #2
   2e08c:	blt	2e104 <flatcc_json_parser_generic_json@@Base+0x8dc>
   2e090:	ldrb	r0, [r1]
   2e094:	cmp	r0, #32
   2e098:	bls	2e0f4 <flatcc_json_parser_generic_json@@Base+0x8cc>
   2e09c:	mov	r7, r1
   2e0a0:	b	2e114 <flatcc_json_parser_generic_json@@Base+0x8ec>
   2e0a4:	bne	2e0b4 <flatcc_json_parser_generic_json@@Base+0x88c>
   2e0a8:	ldrb	r0, [r7, #2]!
   2e0ac:	cmp	r0, #32
   2e0b0:	bhi	2e0c4 <flatcc_json_parser_generic_json@@Base+0x89c>
   2e0b4:	mov	r0, r5
   2e0b8:	mov	r2, r4
   2e0bc:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2e0c0:	mov	r7, r0
   2e0c4:	cmp	r7, r4
   2e0c8:	beq	2e0dc <flatcc_json_parser_generic_json@@Base+0x8b4>
   2e0cc:	ldrb	r0, [r7]
   2e0d0:	cmp	r0, #93	; 0x5d
   2e0d4:	beq	2e128 <flatcc_json_parser_generic_json@@Base+0x900>
   2e0d8:	b	2e1dc <flatcc_json_parser_generic_json@@Base+0x9b4>
   2e0dc:	ldr	r0, [r8]
   2e0e0:	mov	r1, r4
   2e0e4:	cmp	r0, #0
   2e0e8:	bne	2e174 <flatcc_json_parser_generic_json@@Base+0x94c>
   2e0ec:	mov	r0, #9
   2e0f0:	b	2e1b4 <flatcc_json_parser_generic_json@@Base+0x98c>
   2e0f4:	bne	2e104 <flatcc_json_parser_generic_json@@Base+0x8dc>
   2e0f8:	ldrb	r0, [r7, #2]!
   2e0fc:	cmp	r0, #32
   2e100:	bhi	2e114 <flatcc_json_parser_generic_json@@Base+0x8ec>
   2e104:	mov	r0, r5
   2e108:	mov	r2, r4
   2e10c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2e110:	mov	r7, r0
   2e114:	cmp	r7, r4
   2e118:	beq	2e1a0 <flatcc_json_parser_generic_json@@Base+0x978>
   2e11c:	ldrb	r0, [r7]
   2e120:	cmp	r0, #125	; 0x7d
   2e124:	bne	2e1dc <flatcc_json_parser_generic_json@@Base+0x9b4>
   2e128:	add	r2, r7, #1
   2e12c:	sub	r0, r4, r2
   2e130:	cmp	r0, #2
   2e134:	blt	2e160 <flatcc_json_parser_generic_json@@Base+0x938>
   2e138:	ldrb	r0, [r2]
   2e13c:	cmp	r0, #32
   2e140:	bls	2e14c <flatcc_json_parser_generic_json@@Base+0x924>
   2e144:	mov	r1, r2
   2e148:	b	2e174 <flatcc_json_parser_generic_json@@Base+0x94c>
   2e14c:	bne	2e160 <flatcc_json_parser_generic_json@@Base+0x938>
   2e150:	ldrb	r0, [r7, #2]!
   2e154:	mov	r1, r7
   2e158:	cmp	r0, #32
   2e15c:	bhi	2e174 <flatcc_json_parser_generic_json@@Base+0x94c>
   2e160:	mov	r1, r2
   2e164:	mov	r0, r5
   2e168:	mov	r2, r4
   2e16c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2e170:	mov	r1, r0
   2e174:	subs	r2, r1, r4
   2e178:	sub	r0, sl, #1
   2e17c:	movwne	r2, #1
   2e180:	subs	r3, sl, #1
   2e184:	movwne	r3, #1
   2e188:	cmp	sl, #1
   2e18c:	beq	2e234 <flatcc_json_parser_generic_json@@Base+0xa0c>
   2e190:	cmp	r1, r4
   2e194:	mov	sl, r0
   2e198:	bne	2df38 <flatcc_json_parser_generic_json@@Base+0x710>
   2e19c:	b	2e234 <flatcc_json_parser_generic_json@@Base+0xa0c>
   2e1a0:	ldr	r0, [r8]
   2e1a4:	mov	r1, r4
   2e1a8:	cmp	r0, #0
   2e1ac:	bne	2e174 <flatcc_json_parser_generic_json@@Base+0x94c>
   2e1b0:	mov	r0, #10
   2e1b4:	str	r0, [r8]
   2e1b8:	ldr	r1, [sp]
   2e1bc:	ldr	r0, [r6]
   2e1c0:	sub	r0, r1, r0
   2e1c4:	ldr	r1, [sp, #4]
   2e1c8:	str	r0, [r1]
   2e1cc:	ldr	r0, [sp, #8]
   2e1d0:	mov	r1, r4
   2e1d4:	str	r4, [r0]
   2e1d8:	b	2e174 <flatcc_json_parser_generic_json@@Base+0x94c>
   2e1dc:	add	r0, sp, #16
   2e1e0:	cmp	r7, r4
   2e1e4:	add	r0, r0, sl
   2e1e8:	bne	2d878 <flatcc_json_parser_generic_json@@Base+0x50>
   2e1ec:	b	2e288 <flatcc_json_parser_generic_json@@Base+0xa60>
   2e1f0:	cmp	r0, #92	; 0x5c
   2e1f4:	bgt	2e208 <flatcc_json_parser_generic_json@@Base+0x9e0>
   2e1f8:	cmp	r0, #44	; 0x2c
   2e1fc:	beq	2df1c <flatcc_json_parser_generic_json@@Base+0x6f4>
   2e200:	cmp	r0, #58	; 0x3a
   2e204:	b	2e214 <flatcc_json_parser_generic_json@@Base+0x9ec>
   2e208:	cmp	r0, #93	; 0x5d
   2e20c:	beq	2df1c <flatcc_json_parser_generic_json@@Base+0x6f4>
   2e210:	cmp	r0, #125	; 0x7d
   2e214:	mov	r2, r1
   2e218:	beq	2df1c <flatcc_json_parser_generic_json@@Base+0x6f4>
   2e21c:	b	2dde8 <flatcc_json_parser_generic_json@@Base+0x5c0>
   2e220:	mov	r2, r1
   2e224:	b	2dde8 <flatcc_json_parser_generic_json@@Base+0x5c0>
   2e228:	mov	r1, r7
   2e22c:	b	2e28c <flatcc_json_parser_generic_json@@Base+0xa64>
   2e230:	mov	r0, sl
   2e234:	cmp	r2, #0
   2e238:	bne	2e28c <flatcc_json_parser_generic_json@@Base+0xa64>
   2e23c:	cmp	r3, #0
   2e240:	beq	2e28c <flatcc_json_parser_generic_json@@Base+0xa64>
   2e244:	ldr	r1, [r8]
   2e248:	cmp	r1, #0
   2e24c:	bne	2e288 <flatcc_json_parser_generic_json@@Base+0xa60>
   2e250:	add	r1, sp, #16
   2e254:	add	r0, r1, r0
   2e258:	mov	r1, #10
   2e25c:	ldrb	r0, [r0, #-1]
   2e260:	cmp	r0, #93	; 0x5d
   2e264:	movweq	r1, #9
   2e268:	str	r1, [r8]
   2e26c:	ldr	r0, [r6]
   2e270:	ldr	r1, [sp]
   2e274:	sub	r0, r1, r0
   2e278:	ldr	r1, [sp, #4]
   2e27c:	str	r0, [r1]
   2e280:	ldr	r0, [sp, #8]
   2e284:	str	r4, [r0]
   2e288:	mov	r1, r4
   2e28c:	mov	r0, r1
   2e290:	sub	sp, fp, #28
   2e294:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e298:	ldr	r0, [r8]
   2e29c:	cmp	r0, #0
   2e2a0:	bne	2e288 <flatcc_json_parser_generic_json@@Base+0xa60>
   2e2a4:	mov	r0, #10
   2e2a8:	str	r0, [r8]
   2e2ac:	b	2e26c <flatcc_json_parser_generic_json@@Base+0xa44>
   2e2b0:	ldr	r0, [r8]
   2e2b4:	cmp	r0, #0
   2e2b8:	bne	2e288 <flatcc_json_parser_generic_json@@Base+0xa60>
   2e2bc:	mov	r0, #4
   2e2c0:	b	2e2e8 <flatcc_json_parser_generic_json@@Base+0xac0>
   2e2c4:	ldr	r0, [r8]
   2e2c8:	cmp	r0, #0
   2e2cc:	bne	2e288 <flatcc_json_parser_generic_json@@Base+0xa60>
   2e2d0:	mov	r0, #2
   2e2d4:	b	2e2e8 <flatcc_json_parser_generic_json@@Base+0xac0>
   2e2d8:	ldr	r0, [r8]
   2e2dc:	cmp	r0, #0
   2e2e0:	bne	2e288 <flatcc_json_parser_generic_json@@Base+0xa60>
   2e2e4:	mov	r0, #5
   2e2e8:	str	r0, [r8]
   2e2ec:	ldr	r1, [sp, #4]
   2e2f0:	ldr	r0, [r6]
   2e2f4:	sub	r0, r7, r0
   2e2f8:	add	r0, r0, #1
   2e2fc:	str	r0, [r1]
   2e300:	ldr	r0, [sp, #8]
   2e304:	str	r7, [r0]
   2e308:	b	2e288 <flatcc_json_parser_generic_json@@Base+0xa60>

0002e30c <flatcc_json_parser_double@@Base>:
   2e30c:	push	{r4, r5, r6, r7, fp, lr}
   2e310:	add	fp, sp, #16
   2e314:	mov	r5, r0
   2e318:	mov	r0, #0
   2e31c:	mov	r6, r1
   2e320:	cmp	r1, r2
   2e324:	str	r0, [r3]
   2e328:	str	r0, [r3, #4]
   2e32c:	beq	2e3d0 <flatcc_json_parser_double@@Base+0xc4>
   2e330:	mov	r0, r6
   2e334:	mov	r4, r2
   2e338:	mov	r7, r3
   2e33c:	ldrb	r1, [r0], #1
   2e340:	cmp	r1, #45	; 0x2d
   2e344:	movne	r0, r6
   2e348:	sub	r2, r2, r0
   2e34c:	cmp	r2, #2
   2e350:	blt	2e390 <flatcc_json_parser_double@@Base+0x84>
   2e354:	sub	r1, r1, #45	; 0x2d
   2e358:	clz	r1, r1
   2e35c:	lsr	r1, r1, #5
   2e360:	ldrb	r1, [r6, r1]
   2e364:	cmp	r1, #46	; 0x2e
   2e368:	beq	2e380 <flatcc_json_parser_double@@Base+0x74>
   2e36c:	cmp	r1, #48	; 0x30
   2e370:	bne	2e390 <flatcc_json_parser_double@@Base+0x84>
   2e374:	ldrb	r0, [r0, #1]
   2e378:	cmp	r0, #48	; 0x30
   2e37c:	bne	2e390 <flatcc_json_parser_double@@Base+0x84>
   2e380:	ldr	r0, [r5, #24]
   2e384:	cmp	r0, #0
   2e388:	bne	2e3fc <flatcc_json_parser_double@@Base+0xf0>
   2e38c:	b	2e3e0 <flatcc_json_parser_double@@Base+0xd4>
   2e390:	sub	r1, r4, r6
   2e394:	mov	r0, r6
   2e398:	mov	r2, r7
   2e39c:	bl	2e408 <flatcc_json_parser_double@@Base+0xfc>
   2e3a0:	cmp	r0, #0
   2e3a4:	cmpne	r0, r6
   2e3a8:	bne	2e400 <flatcc_json_parser_double@@Base+0xf4>
   2e3ac:	vldr	d0, [r7]
   2e3b0:	bl	12ae0 <__isinf@plt>
   2e3b4:	ldr	r1, [r5, #24]
   2e3b8:	cmp	r0, #0
   2e3bc:	beq	2e3d8 <flatcc_json_parser_double@@Base+0xcc>
   2e3c0:	cmp	r1, #0
   2e3c4:	bne	2e3fc <flatcc_json_parser_double@@Base+0xf0>
   2e3c8:	mov	r0, #7
   2e3cc:	b	2e3e4 <flatcc_json_parser_double@@Base+0xd8>
   2e3d0:	mov	r0, r6
   2e3d4:	pop	{r4, r5, r6, r7, fp, pc}
   2e3d8:	cmp	r1, #0
   2e3dc:	bne	2e3fc <flatcc_json_parser_double@@Base+0xf0>
   2e3e0:	mov	r0, #6
   2e3e4:	str	r6, [r5, #36]	; 0x24
   2e3e8:	ldr	r1, [r5, #4]
   2e3ec:	sub	r1, r6, r1
   2e3f0:	add	r1, r1, #1
   2e3f4:	str	r1, [r5, #20]
   2e3f8:	str	r0, [r5, #24]
   2e3fc:	mov	r0, r4
   2e400:	pop	{r4, r5, r6, r7, fp, pc}
   2e404:	nop	{0}
   2e408:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e40c:	add	fp, sp, #28
   2e410:	sub	sp, sp, #36	; 0x24
   2e414:	cmp	r1, #1000	; 0x3e8
   2e418:	mov	r3, r1
   2e41c:	mov	r5, #0
   2e420:	mov	r9, r0
   2e424:	movge	r3, #1000	; 0x3e8
   2e428:	str	r5, [r2]
   2e42c:	str	r5, [r2, #4]
   2e430:	add	ip, r0, r3
   2e434:	add	lr, ip, #1
   2e438:	cmp	lr, r0
   2e43c:	beq	2e4b0 <flatcc_json_parser_double@@Base+0x1a4>
   2e440:	ldrb	r0, [r9]
   2e444:	mov	r4, r9
   2e448:	cmp	r0, #45	; 0x2d
   2e44c:	bne	2e464 <flatcc_json_parser_double@@Base+0x158>
   2e450:	cmp	r3, #0
   2e454:	beq	2e7f0 <flatcc_json_parser_double@@Base+0x4e4>
   2e458:	add	r4, r9, #1
   2e45c:	mov	r5, #1
   2e460:	ldrb	r0, [r4]
   2e464:	cmp	r0, #48	; 0x30
   2e468:	bne	2e498 <flatcc_json_parser_double@@Base+0x18c>
   2e46c:	add	r6, r4, #1
   2e470:	cmp	r4, ip
   2e474:	beq	2e4fc <flatcc_json_parser_double@@Base+0x1f0>
   2e478:	ldrb	r1, [r6]
   2e47c:	orr	r0, r1, #32
   2e480:	cmp	r0, #120	; 0x78
   2e484:	bne	2e4c8 <flatcc_json_parser_double@@Base+0x1bc>
   2e488:	mov	r0, #0
   2e48c:	str	r0, [r2]
   2e490:	str	r0, [r2, #4]
   2e494:	b	2e4b0 <flatcc_json_parser_double@@Base+0x1a4>
   2e498:	sub	r1, r0, #49	; 0x31
   2e49c:	uxtb	r1, r1
   2e4a0:	cmp	r1, #9
   2e4a4:	bcc	2e4b8 <flatcc_json_parser_double@@Base+0x1ac>
   2e4a8:	cmp	r5, #0
   2e4ac:	movne	r9, #0
   2e4b0:	mov	r2, r9
   2e4b4:	b	2e7f4 <flatcc_json_parser_double@@Base+0x4e8>
   2e4b8:	sub	r0, r0, #48	; 0x30
   2e4bc:	add	r6, r4, #1
   2e4c0:	asr	r1, r0, #31
   2e4c4:	b	2e504 <flatcc_json_parser_double@@Base+0x1f8>
   2e4c8:	cmp	r1, #48	; 0x30
   2e4cc:	mov	r0, #0
   2e4d0:	mov	r1, #0
   2e4d4:	bne	2e504 <flatcc_json_parser_double@@Base+0x1f8>
   2e4d8:	sub	r0, ip, #1
   2e4dc:	mov	r1, r4
   2e4e0:	cmp	r0, r4
   2e4e4:	beq	2e4f8 <flatcc_json_parser_double@@Base+0x1ec>
   2e4e8:	ldrb	r7, [r1, #2]
   2e4ec:	add	r4, r1, #1
   2e4f0:	cmp	r7, #48	; 0x30
   2e4f4:	beq	2e4dc <flatcc_json_parser_double@@Base+0x1d0>
   2e4f8:	add	r6, r1, #2
   2e4fc:	mov	r0, #0
   2e500:	mov	r1, #0
   2e504:	cmp	r6, lr
   2e508:	beq	2e7f0 <flatcc_json_parser_double@@Base+0x4e4>
   2e50c:	mov	sl, #10
   2e510:	mov	r7, r6
   2e514:	str	r2, [sp, #20]
   2e518:	ldrb	r8, [r7]
   2e51c:	sub	r2, r8, #48	; 0x30
   2e520:	uxtb	r4, r2
   2e524:	mov	r2, #0
   2e528:	cmp	r4, #9
   2e52c:	bhi	2e56c <flatcc_json_parser_double@@Base+0x260>
   2e530:	movw	r4, #39320	; 0x9998
   2e534:	movt	r4, #39321	; 0x9999
   2e538:	subs	r4, r4, r0
   2e53c:	movw	r4, #39321	; 0x9999
   2e540:	movt	r4, #6553	; 0x1999
   2e544:	sbcs	r4, r4, r1
   2e548:	bcc	2e57c <flatcc_json_parser_double@@Base+0x270>
   2e54c:	add	r1, r1, r1, lsl #2
   2e550:	add	r7, r7, #1
   2e554:	lsl	r1, r1, #1
   2e558:	umlal	r8, r1, r0, sl
   2e55c:	subs	r0, r8, #48	; 0x30
   2e560:	sbc	r1, r1, #0
   2e564:	cmp	lr, r7
   2e568:	bne	2e518 <flatcc_json_parser_double@@Base+0x20c>
   2e56c:	mov	r8, r0
   2e570:	mov	sl, r1
   2e574:	mov	r0, #0
   2e578:	b	2e598 <flatcc_json_parser_double@@Base+0x28c>
   2e57c:	adds	r4, r0, #1
   2e580:	adc	sl, r1, #0
   2e584:	cmp	r8, #52	; 0x34
   2e588:	mov	r8, r4
   2e58c:	movls	r8, r0
   2e590:	movls	sl, r1
   2e594:	mov	r0, #1
   2e598:	cmp	r7, lr
   2e59c:	str	r0, [sp, #24]
   2e5a0:	beq	2e7f4 <flatcc_json_parser_double@@Base+0x4e8>
   2e5a4:	sub	r0, r7, r6
   2e5a8:	mov	r6, #0
   2e5ac:	str	r0, [sp, #16]
   2e5b0:	sub	r0, r3, r7
   2e5b4:	add	r0, r9, r0
   2e5b8:	ldrb	r1, [r7]
   2e5bc:	cmp	r1, #48	; 0x30
   2e5c0:	bne	2e5e4 <flatcc_json_parser_double@@Base+0x2d8>
   2e5c4:	add	r1, r7, #1
   2e5c8:	cmp	r7, ip
   2e5cc:	sub	r0, r0, #1
   2e5d0:	add	r6, r6, #1
   2e5d4:	mov	r7, r1
   2e5d8:	bne	2e5b8 <flatcc_json_parser_double@@Base+0x2ac>
   2e5dc:	mov	r7, r1
   2e5e0:	b	2e630 <flatcc_json_parser_double@@Base+0x324>
   2e5e4:	sub	r1, r1, #49	; 0x31
   2e5e8:	uxtb	r1, r1
   2e5ec:	cmp	r1, #8
   2e5f0:	bhi	2e630 <flatcc_json_parser_double@@Base+0x324>
   2e5f4:	mvn	r2, #0
   2e5f8:	mov	r1, r2
   2e5fc:	cmp	r0, #0
   2e600:	beq	2e620 <flatcc_json_parser_double@@Base+0x314>
   2e604:	ldrb	r2, [r7, -r1]
   2e608:	sub	r0, r0, #1
   2e60c:	sub	r2, r2, #48	; 0x30
   2e610:	uxtb	r4, r2
   2e614:	sub	r2, r1, #1
   2e618:	cmp	r4, #10
   2e61c:	bcc	2e5f8 <flatcc_json_parser_double@@Base+0x2ec>
   2e620:	mov	r0, #1
   2e624:	sub	r6, r6, r1
   2e628:	sub	r7, r7, r1
   2e62c:	str	r0, [sp, #24]
   2e630:	mov	r2, #0
   2e634:	cmp	r7, lr
   2e638:	beq	2e7f4 <flatcc_json_parser_double@@Base+0x4e8>
   2e63c:	ldrb	r0, [r7]
   2e640:	cmp	r0, #46	; 0x2e
   2e644:	bne	2e7c8 <flatcc_json_parser_double@@Base+0x4bc>
   2e648:	mov	r4, r7
   2e64c:	ldrb	r0, [r4, #1]!
   2e650:	sub	r1, r0, #48	; 0x30
   2e654:	uxtb	r1, r1
   2e658:	cmp	r1, #9
   2e65c:	bhi	2e7f4 <flatcc_json_parser_double@@Base+0x4e8>
   2e660:	cmp	r7, ip
   2e664:	beq	2e70c <flatcc_json_parser_double@@Base+0x400>
   2e668:	sub	r1, r3, r7
   2e66c:	str	r4, [sp, #8]
   2e670:	add	r1, r1, r9
   2e674:	sub	r1, r1, #1
   2e678:	str	r1, [sp, #12]
   2e67c:	mov	r1, #0
   2e680:	mov	r3, r1
   2e684:	movw	r1, #39320	; 0x9998
   2e688:	movt	r1, #39321	; 0x9999
   2e68c:	subs	r1, r1, r8
   2e690:	movw	r1, #39321	; 0x9999
   2e694:	movt	r1, #6553	; 0x1999
   2e698:	sbcs	r1, r1, sl
   2e69c:	bcc	2e714 <flatcc_json_parser_double@@Base+0x408>
   2e6a0:	add	r1, sl, sl, lsl #2
   2e6a4:	uxtb	r0, r0
   2e6a8:	mov	r4, #10
   2e6ac:	lsl	r1, r1, #1
   2e6b0:	umlal	r0, r1, r8, r4
   2e6b4:	add	r4, r7, r3
   2e6b8:	subs	r8, r0, #48	; 0x30
   2e6bc:	ldr	r0, [sp, #12]
   2e6c0:	sbc	sl, r1, #0
   2e6c4:	cmp	r0, r3
   2e6c8:	beq	2e6fc <flatcc_json_parser_double@@Base+0x3f0>
   2e6cc:	ldrb	r0, [r4, #2]
   2e6d0:	str	sl, [sp, #28]
   2e6d4:	mov	sl, r8
   2e6d8:	mov	r8, r5
   2e6dc:	add	r1, r3, #1
   2e6e0:	sub	r5, r0, #48	; 0x30
   2e6e4:	uxtb	r5, r5
   2e6e8:	cmp	r5, #10
   2e6ec:	mov	r5, r8
   2e6f0:	mov	r8, sl
   2e6f4:	ldr	sl, [sp, #28]
   2e6f8:	bcc	2e680 <flatcc_json_parser_double@@Base+0x374>
   2e6fc:	mvn	r0, r3
   2e700:	add	r7, r4, #2
   2e704:	add	r6, r0, r6
   2e708:	b	2e74c <flatcc_json_parser_double@@Base+0x440>
   2e70c:	mov	r7, r4
   2e710:	b	2e750 <flatcc_json_parser_double@@Base+0x444>
   2e714:	add	r1, r7, r3
   2e718:	sub	r6, r6, r3
   2e71c:	add	r7, r1, #1
   2e720:	ldr	r1, [sp, #24]
   2e724:	cmp	r1, #0
   2e728:	bne	2e74c <flatcc_json_parser_double@@Base+0x440>
   2e72c:	uxtb	r0, r0
   2e730:	adds	r1, r8, #1
   2e734:	adc	r3, sl, #0
   2e738:	cmp	r0, #52	; 0x34
   2e73c:	mov	r0, #1
   2e740:	movhi	r8, r1
   2e744:	movhi	sl, r3
   2e748:	str	r0, [sp, #24]
   2e74c:	ldr	r4, [sp, #8]
   2e750:	cmp	r7, lr
   2e754:	beq	2e7f4 <flatcc_json_parser_double@@Base+0x4e8>
   2e758:	ldr	r1, [sp, #16]
   2e75c:	sub	r0, r7, r4
   2e760:	add	r1, r0, r1
   2e764:	str	r1, [sp, #16]
   2e768:	ldrb	r0, [r7]
   2e76c:	cmp	r0, #48	; 0x30
   2e770:	bne	2e788 <flatcc_json_parser_double@@Base+0x47c>
   2e774:	add	r7, r7, #1
   2e778:	add	r6, r6, #1
   2e77c:	cmp	lr, r7
   2e780:	bne	2e768 <flatcc_json_parser_double@@Base+0x45c>
   2e784:	b	2e7c8 <flatcc_json_parser_double@@Base+0x4bc>
   2e788:	sub	r0, r0, #49	; 0x31
   2e78c:	uxtb	r0, r0
   2e790:	cmp	r0, #8
   2e794:	bhi	2e7c8 <flatcc_json_parser_double@@Base+0x4bc>
   2e798:	mov	r0, r7
   2e79c:	cmp	ip, r7
   2e7a0:	beq	2e7bc <flatcc_json_parser_double@@Base+0x4b0>
   2e7a4:	ldrb	r1, [r0, #1]
   2e7a8:	add	r7, r0, #1
   2e7ac:	sub	r1, r1, #48	; 0x30
   2e7b0:	uxtb	r1, r1
   2e7b4:	cmp	r1, #10
   2e7b8:	bcc	2e798 <flatcc_json_parser_double@@Base+0x48c>
   2e7bc:	add	r7, r0, #1
   2e7c0:	mov	r0, #1
   2e7c4:	str	r0, [sp, #24]
   2e7c8:	cmp	r7, lr
   2e7cc:	beq	2e7f4 <flatcc_json_parser_double@@Base+0x4e8>
   2e7d0:	ldrb	r0, [r7]
   2e7d4:	mov	r4, #0
   2e7d8:	orr	r0, r0, #32
   2e7dc:	cmp	r0, #101	; 0x65
   2e7e0:	bne	2e800 <flatcc_json_parser_double@@Base+0x4f4>
   2e7e4:	sub	r0, lr, r7
   2e7e8:	cmp	r0, #2
   2e7ec:	bge	2e86c <flatcc_json_parser_double@@Base+0x560>
   2e7f0:	mov	r2, #0
   2e7f4:	mov	r0, r2
   2e7f8:	sub	sp, fp, #28
   2e7fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e800:	mov	r0, #0
   2e804:	cmp	r7, lr
   2e808:	mov	r2, #0
   2e80c:	beq	2e7f4 <flatcc_json_parser_double@@Base+0x4e8>
   2e810:	vmov.i32	d16, #0	; 0x00000000
   2e814:	cmp	r4, #0
   2e818:	rsbne	r0, r0, #0
   2e81c:	orrs	r1, r8, sl
   2e820:	beq	2e848 <flatcc_json_parser_double@@Base+0x53c>
   2e824:	ldr	r2, [sp, #16]
   2e828:	add	r1, r2, r6
   2e82c:	add	r4, r1, r0
   2e830:	cmn	r4, #324	; 0x144
   2e834:	blt	2e848 <flatcc_json_parser_double@@Base+0x53c>
   2e838:	movw	r0, #310	; 0x136
   2e83c:	cmp	r4, r0
   2e840:	ble	2e8a0 <flatcc_json_parser_double@@Base+0x594>
   2e844:	vldr	d16, [pc, #876]	; 2ebb8 <flatcc_json_parser_double@@Base+0x8ac>
   2e848:	ldr	r4, [sp, #20]
   2e84c:	vstr	d16, [r4]
   2e850:	cmp	r5, #0
   2e854:	beq	2e864 <flatcc_json_parser_double@@Base+0x558>
   2e858:	vldr	d16, [r4]
   2e85c:	vneg.f64	d16, d16
   2e860:	vstr	d16, [r4]
   2e864:	mov	r2, r7
   2e868:	b	2e7f4 <flatcc_json_parser_double@@Base+0x4e8>
   2e86c:	mov	r3, r7
   2e870:	ldrb	r0, [r3, #1]!
   2e874:	cmp	r0, #45	; 0x2d
   2e878:	beq	2e99c <flatcc_json_parser_double@@Base+0x690>
   2e87c:	mov	r4, #0
   2e880:	cmp	r0, #43	; 0x2b
   2e884:	bne	2e9ac <flatcc_json_parser_double@@Base+0x6a0>
   2e888:	add	r3, r7, #2
   2e88c:	mov	r2, #0
   2e890:	cmp	r3, lr
   2e894:	beq	2e7f4 <flatcc_json_parser_double@@Base+0x4e8>
   2e898:	mov	r4, #0
   2e89c:	b	2e9ac <flatcc_json_parser_double@@Base+0x6a0>
   2e8a0:	mov	r0, #0
   2e8a4:	mov	r6, r2
   2e8a8:	cmp	r0, sl, lsr #21
   2e8ac:	bne	2ea04 <flatcc_json_parser_double@@Base+0x6f8>
   2e8b0:	cmp	r4, #22
   2e8b4:	bhi	2ea04 <flatcc_json_parser_double@@Base+0x6f8>
   2e8b8:	mov	r0, r8
   2e8bc:	mov	r1, sl
   2e8c0:	bl	30ae4 <flatcc_json_parser_struct_as_root@@Base+0x418>
   2e8c4:	vmov	d16, r0, r1
   2e8c8:	sub	r2, r4, r6
   2e8cc:	add	r0, r2, #22
   2e8d0:	cmp	r0, #44	; 0x2c
   2e8d4:	bhi	2e848 <flatcc_json_parser_double@@Base+0x53c>
   2e8d8:	add	r1, pc, #0
   2e8dc:	ldr	pc, [r1, r0, lsl #2]
   2e8e0:	muleq	r2, r4, r9
   2e8e4:	andeq	lr, r2, r4, asr sl
   2e8e8:	andeq	lr, r2, ip, asr sl
   2e8ec:	andeq	lr, r2, r4, ror #20
   2e8f0:	andeq	lr, r2, ip, ror #20
   2e8f4:	andeq	lr, r2, r4, ror sl
   2e8f8:	andeq	lr, r2, ip, ror sl
   2e8fc:	andeq	lr, r2, r4, lsl #21
   2e900:	andeq	lr, r2, ip, lsl #21
   2e904:	muleq	r2, r4, sl
   2e908:	muleq	r2, ip, sl
   2e90c:	andeq	lr, r2, r4, lsr #21
   2e910:	andeq	lr, r2, ip, lsr #21
   2e914:			; <UNDEFINED> instruction: 0x0002eab4
   2e918:			; <UNDEFINED> instruction: 0x0002eabc
   2e91c:	andeq	lr, r2, r4, asr #21
   2e920:	andeq	lr, r2, ip, asr #21
   2e924:	ldrdeq	lr, [r2], -r4
   2e928:	ldrdeq	lr, [r2], -ip
   2e92c:	andeq	lr, r2, r4, ror #21
   2e930:	andeq	lr, r2, ip, ror #21
   2e934:	strdeq	lr, [r2], -r4
   2e938:	andeq	lr, r2, r8, asr #16
   2e93c:	andeq	lr, r2, r0, lsl #22
   2e940:	andeq	lr, r2, r8, lsl #22
   2e944:	andeq	lr, r2, r0, lsl fp
   2e948:	andeq	lr, r2, r8, lsl fp
   2e94c:	andeq	lr, r2, r0, lsr #22
   2e950:	andeq	lr, r2, r8, lsr #22
   2e954:	andeq	lr, r2, r0, lsr fp
   2e958:	andeq	lr, r2, r8, lsr fp
   2e95c:	andeq	lr, r2, r0, asr #22
   2e960:	andeq	lr, r2, r8, asr #22
   2e964:	andeq	lr, r2, r0, asr fp
   2e968:	andeq	lr, r2, r8, asr fp
   2e96c:	andeq	lr, r2, r0, ror #22
   2e970:	andeq	lr, r2, r8, ror #22
   2e974:	andeq	lr, r2, r0, ror fp
   2e978:	andeq	lr, r2, r8, ror fp
   2e97c:	andeq	lr, r2, r0, lsl #23
   2e980:	andeq	lr, r2, r8, lsl #23
   2e984:	muleq	r2, r0, fp
   2e988:	muleq	r2, r8, fp
   2e98c:	andeq	lr, r2, r0, lsr #23
   2e990:	andeq	lr, r2, r8, lsr #23
   2e994:	vldr	d17, [pc, #708]	; 2ec60 <flatcc_json_parser_double@@Base+0x954>
   2e998:	b	2eaf8 <flatcc_json_parser_double@@Base+0x7ec>
   2e99c:	add	r3, r7, #2
   2e9a0:	mov	r4, #1
   2e9a4:	cmp	r3, lr
   2e9a8:	beq	2e7f0 <flatcc_json_parser_double@@Base+0x4e4>
   2e9ac:	ldrb	r0, [r3]
   2e9b0:	mov	r2, #0
   2e9b4:	sub	r0, r0, #48	; 0x30
   2e9b8:	uxtb	r1, r0
   2e9bc:	cmp	r1, #9
   2e9c0:	bhi	2e7f4 <flatcc_json_parser_double@@Base+0x4e8>
   2e9c4:	cmp	r3, ip
   2e9c8:	beq	2e9fc <flatcc_json_parser_double@@Base+0x6f0>
   2e9cc:	ldrb	r1, [r3, #1]
   2e9d0:	sub	r2, r1, #48	; 0x30
   2e9d4:	uxtb	r2, r2
   2e9d8:	cmp	r2, #9
   2e9dc:	bhi	2e9fc <flatcc_json_parser_double@@Base+0x6f0>
   2e9e0:	cmp	r0, #32768	; 0x8000
   2e9e4:	add	r3, r3, #1
   2e9e8:	addlt	r0, r0, r0, lsl #2
   2e9ec:	addlt	r0, r1, r0, lsl #1
   2e9f0:	sublt	r0, r0, #48	; 0x30
   2e9f4:	cmp	ip, r3
   2e9f8:	bne	2e9cc <flatcc_json_parser_double@@Base+0x6c0>
   2e9fc:	add	r7, r3, #1
   2ea00:	b	2e804 <flatcc_json_parser_double@@Base+0x4f8>
   2ea04:	ldr	r0, [sp, #24]
   2ea08:	ldr	r3, [sp, #20]
   2ea0c:	mov	r2, r4
   2ea10:	mov	r1, sl
   2ea14:	str	r0, [sp]
   2ea18:	str	r3, [sp, #4]
   2ea1c:	mov	r4, r3
   2ea20:	mov	r0, r8
   2ea24:	mov	r3, r6
   2ea28:	bl	2c9e0 <grisu3_diy_fp_encode_double@@Base>
   2ea2c:	cmp	r0, #0
   2ea30:	bne	2e850 <flatcc_json_parser_double@@Base+0x544>
   2ea34:	add	r1, sp, #32
   2ea38:	mov	r0, r9
   2ea3c:	bl	12b70 <strtod@plt>
   2ea40:	vstr	d0, [r4]
   2ea44:	ldr	r0, [sp, #32]
   2ea48:	cmp	r0, r7
   2ea4c:	movcc	r7, r0
   2ea50:	b	2e864 <flatcc_json_parser_double@@Base+0x558>
   2ea54:	vldr	d17, [pc, #356]	; 2ebc0 <flatcc_json_parser_double@@Base+0x8b4>
   2ea58:	b	2eaf8 <flatcc_json_parser_double@@Base+0x7ec>
   2ea5c:	vldr	d17, [pc, #356]	; 2ebc8 <flatcc_json_parser_double@@Base+0x8bc>
   2ea60:	b	2eaf8 <flatcc_json_parser_double@@Base+0x7ec>
   2ea64:	vldr	d17, [pc, #356]	; 2ebd0 <flatcc_json_parser_double@@Base+0x8c4>
   2ea68:	b	2eaf8 <flatcc_json_parser_double@@Base+0x7ec>
   2ea6c:	vldr	d17, [pc, #356]	; 2ebd8 <flatcc_json_parser_double@@Base+0x8cc>
   2ea70:	b	2eaf8 <flatcc_json_parser_double@@Base+0x7ec>
   2ea74:	vldr	d17, [pc, #356]	; 2ebe0 <flatcc_json_parser_double@@Base+0x8d4>
   2ea78:	b	2eaf8 <flatcc_json_parser_double@@Base+0x7ec>
   2ea7c:	vldr	d17, [pc, #356]	; 2ebe8 <flatcc_json_parser_double@@Base+0x8dc>
   2ea80:	b	2eaf8 <flatcc_json_parser_double@@Base+0x7ec>
   2ea84:	vldr	d17, [pc, #356]	; 2ebf0 <flatcc_json_parser_double@@Base+0x8e4>
   2ea88:	b	2eaf8 <flatcc_json_parser_double@@Base+0x7ec>
   2ea8c:	vldr	d17, [pc, #356]	; 2ebf8 <flatcc_json_parser_double@@Base+0x8ec>
   2ea90:	b	2eaf8 <flatcc_json_parser_double@@Base+0x7ec>
   2ea94:	vldr	d17, [pc, #356]	; 2ec00 <flatcc_json_parser_double@@Base+0x8f4>
   2ea98:	b	2eaf8 <flatcc_json_parser_double@@Base+0x7ec>
   2ea9c:	vldr	d17, [pc, #356]	; 2ec08 <flatcc_json_parser_double@@Base+0x8fc>
   2eaa0:	b	2eaf8 <flatcc_json_parser_double@@Base+0x7ec>
   2eaa4:	vldr	d17, [pc, #356]	; 2ec10 <flatcc_json_parser_double@@Base+0x904>
   2eaa8:	b	2eaf8 <flatcc_json_parser_double@@Base+0x7ec>
   2eaac:	vldr	d17, [pc, #356]	; 2ec18 <flatcc_json_parser_double@@Base+0x90c>
   2eab0:	b	2eaf8 <flatcc_json_parser_double@@Base+0x7ec>
   2eab4:	vldr	d17, [pc, #356]	; 2ec20 <flatcc_json_parser_double@@Base+0x914>
   2eab8:	b	2eaf8 <flatcc_json_parser_double@@Base+0x7ec>
   2eabc:	vldr	d17, [pc, #356]	; 2ec28 <flatcc_json_parser_double@@Base+0x91c>
   2eac0:	b	2eaf8 <flatcc_json_parser_double@@Base+0x7ec>
   2eac4:	vldr	d17, [pc, #356]	; 2ec30 <flatcc_json_parser_double@@Base+0x924>
   2eac8:	b	2eaf8 <flatcc_json_parser_double@@Base+0x7ec>
   2eacc:	vldr	d17, [pc, #356]	; 2ec38 <flatcc_json_parser_double@@Base+0x92c>
   2ead0:	b	2eaf8 <flatcc_json_parser_double@@Base+0x7ec>
   2ead4:	vldr	d17, [pc, #356]	; 2ec40 <flatcc_json_parser_double@@Base+0x934>
   2ead8:	b	2eaf8 <flatcc_json_parser_double@@Base+0x7ec>
   2eadc:	vldr	d17, [pc, #356]	; 2ec48 <flatcc_json_parser_double@@Base+0x93c>
   2eae0:	b	2eaf8 <flatcc_json_parser_double@@Base+0x7ec>
   2eae4:	vldr	d17, [pc, #356]	; 2ec50 <flatcc_json_parser_double@@Base+0x944>
   2eae8:	b	2eaf8 <flatcc_json_parser_double@@Base+0x7ec>
   2eaec:	vldr	d17, [pc, #356]	; 2ec58 <flatcc_json_parser_double@@Base+0x94c>
   2eaf0:	b	2eaf8 <flatcc_json_parser_double@@Base+0x7ec>
   2eaf4:	vmov.f64	d17, #36	; 0x41200000  10.0
   2eaf8:	vdiv.f64	d16, d16, d17
   2eafc:	b	2e848 <flatcc_json_parser_double@@Base+0x53c>
   2eb00:	vmov.f64	d17, #36	; 0x41200000  10.0
   2eb04:	b	2ebac <flatcc_json_parser_double@@Base+0x8a0>
   2eb08:	vldr	d17, [pc, #328]	; 2ec58 <flatcc_json_parser_double@@Base+0x94c>
   2eb0c:	b	2ebac <flatcc_json_parser_double@@Base+0x8a0>
   2eb10:	vldr	d17, [pc, #312]	; 2ec50 <flatcc_json_parser_double@@Base+0x944>
   2eb14:	b	2ebac <flatcc_json_parser_double@@Base+0x8a0>
   2eb18:	vldr	d17, [pc, #296]	; 2ec48 <flatcc_json_parser_double@@Base+0x93c>
   2eb1c:	b	2ebac <flatcc_json_parser_double@@Base+0x8a0>
   2eb20:	vldr	d17, [pc, #280]	; 2ec40 <flatcc_json_parser_double@@Base+0x934>
   2eb24:	b	2ebac <flatcc_json_parser_double@@Base+0x8a0>
   2eb28:	vldr	d17, [pc, #264]	; 2ec38 <flatcc_json_parser_double@@Base+0x92c>
   2eb2c:	b	2ebac <flatcc_json_parser_double@@Base+0x8a0>
   2eb30:	vldr	d17, [pc, #248]	; 2ec30 <flatcc_json_parser_double@@Base+0x924>
   2eb34:	b	2ebac <flatcc_json_parser_double@@Base+0x8a0>
   2eb38:	vldr	d17, [pc, #232]	; 2ec28 <flatcc_json_parser_double@@Base+0x91c>
   2eb3c:	b	2ebac <flatcc_json_parser_double@@Base+0x8a0>
   2eb40:	vldr	d17, [pc, #216]	; 2ec20 <flatcc_json_parser_double@@Base+0x914>
   2eb44:	b	2ebac <flatcc_json_parser_double@@Base+0x8a0>
   2eb48:	vldr	d17, [pc, #200]	; 2ec18 <flatcc_json_parser_double@@Base+0x90c>
   2eb4c:	b	2ebac <flatcc_json_parser_double@@Base+0x8a0>
   2eb50:	vldr	d17, [pc, #184]	; 2ec10 <flatcc_json_parser_double@@Base+0x904>
   2eb54:	b	2ebac <flatcc_json_parser_double@@Base+0x8a0>
   2eb58:	vldr	d17, [pc, #168]	; 2ec08 <flatcc_json_parser_double@@Base+0x8fc>
   2eb5c:	b	2ebac <flatcc_json_parser_double@@Base+0x8a0>
   2eb60:	vldr	d17, [pc, #152]	; 2ec00 <flatcc_json_parser_double@@Base+0x8f4>
   2eb64:	b	2ebac <flatcc_json_parser_double@@Base+0x8a0>
   2eb68:	vldr	d17, [pc, #136]	; 2ebf8 <flatcc_json_parser_double@@Base+0x8ec>
   2eb6c:	b	2ebac <flatcc_json_parser_double@@Base+0x8a0>
   2eb70:	vldr	d17, [pc, #120]	; 2ebf0 <flatcc_json_parser_double@@Base+0x8e4>
   2eb74:	b	2ebac <flatcc_json_parser_double@@Base+0x8a0>
   2eb78:	vldr	d17, [pc, #104]	; 2ebe8 <flatcc_json_parser_double@@Base+0x8dc>
   2eb7c:	b	2ebac <flatcc_json_parser_double@@Base+0x8a0>
   2eb80:	vldr	d17, [pc, #88]	; 2ebe0 <flatcc_json_parser_double@@Base+0x8d4>
   2eb84:	b	2ebac <flatcc_json_parser_double@@Base+0x8a0>
   2eb88:	vldr	d17, [pc, #72]	; 2ebd8 <flatcc_json_parser_double@@Base+0x8cc>
   2eb8c:	b	2ebac <flatcc_json_parser_double@@Base+0x8a0>
   2eb90:	vldr	d17, [pc, #56]	; 2ebd0 <flatcc_json_parser_double@@Base+0x8c4>
   2eb94:	b	2ebac <flatcc_json_parser_double@@Base+0x8a0>
   2eb98:	vldr	d17, [pc, #40]	; 2ebc8 <flatcc_json_parser_double@@Base+0x8bc>
   2eb9c:	b	2ebac <flatcc_json_parser_double@@Base+0x8a0>
   2eba0:	vldr	d17, [pc, #24]	; 2ebc0 <flatcc_json_parser_double@@Base+0x8b4>
   2eba4:	b	2ebac <flatcc_json_parser_double@@Base+0x8a0>
   2eba8:	vldr	d17, [pc, #176]	; 2ec60 <flatcc_json_parser_double@@Base+0x954>
   2ebac:	vmul.f64	d16, d16, d17
   2ebb0:	b	2e848 <flatcc_json_parser_double@@Base+0x53c>
   2ebb4:	nop	{0}
   2ebb8:	andeq	r0, r0, r0
   2ebbc:	svcvc	0x00f00000	; IMB
   2ebc0:	usatle	lr, #2, r0, asr #30
   2ebc4:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   2ebc8:	ldmvc	r5!, {r6, sl, fp, pc}
   2ebcc:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   2ebd0:	addsvs	r3, r1, r0, lsl #26
   2ebd4:	mvnmi	r5, #228, 16	; 0xe40000
   2ebd8:	strbvs	ip, [lr, -r0, lsl #16]
   2ebdc:			; <UNDEFINED> instruction: 0x43abc16d
   2ebe0:	ldrbhi	sl, [r8]
   2ebe4:	cmnmi	r6, #1459617792	; 0x57000000
   2ebe8:	strbcc	r8, [r0, r0]!
   2ebec:	movtmi	ip, #4985	; 0x1379
   2ebf0:	ldrtcs	r0, [r4], -r0
   2ebf4:	movwmi	r6, #52213	; 0xcbf5
   2ebf8:	cdpne	0, 9, cr0, cr0, cr0, {0}
   2ebfc:	sbcsmi	fp, r6, #196, 24	; 0xc400
   2ec00:	strb	r0, [r0, #-0]
   2ec04:	adcmi	r3, r2, #156	; 0x9c
   2ec08:	andge	r0, r0, #0
   2ec0c:	rsbmi	r1, sp, #148, 20	; 0x94000
   2ec10:	stmda	r0, {}	; <UNPREDICTABLE>
   2ec14:	eorsmi	r4, r7, #7733248	; 0x760000
   2ec18:	andcs	r0, r0, r0
   2ec1c:	andmi	sl, r2, #95	; 0x5f
   2ec20:	andeq	r0, r0, r0
   2ec24:	bicmi	ip, sp, r5, ror #26
   2ec28:	andeq	r0, r0, r0
   2ec2c:	orrsmi	sp, r7, r4, lsl #15
   2ec30:	andeq	r0, r0, r0
   2ec34:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   2ec38:	andeq	r0, r0, r0
   2ec3c:	smlawbmi	lr, r0, r4, r8
   2ec40:	andeq	r0, r0, r0
   2ec44:	rscsmi	r6, r8, r0, lsl #20
   2ec48:	andeq	r0, r0, r0
   2ec4c:	sbcmi	r8, r3, r0, lsl #16
   2ec50:	andeq	r0, r0, r0
   2ec54:	addmi	r4, pc, r0
   2ec58:	andeq	r0, r0, r0
   2ec5c:	subsmi	r0, r9, r0
   2ec60:			; <UNDEFINED> instruction: 0x064dd592
   2ec64:	strmi	pc, [r0], #207	; 0xcf

0002ec68 <flatcc_json_parser_float@@Base>:
   2ec68:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ec6c:	add	fp, sp, #24
   2ec70:	vpush	{d8-d9}
   2ec74:	sub	sp, sp, #8
   2ec78:	mov	r8, r0
   2ec7c:	mov	r0, #0
   2ec80:	mov	r6, r1
   2ec84:	cmp	r1, r2
   2ec88:	str	r0, [r3]
   2ec8c:	beq	2ed64 <flatcc_json_parser_float@@Base+0xfc>
   2ec90:	mov	r0, r6
   2ec94:	mov	r5, r2
   2ec98:	mov	r7, r3
   2ec9c:	ldrb	r1, [r0], #1
   2eca0:	cmp	r1, #45	; 0x2d
   2eca4:	movne	r0, r6
   2eca8:	sub	r2, r2, r0
   2ecac:	cmp	r2, #2
   2ecb0:	blt	2ecf0 <flatcc_json_parser_float@@Base+0x88>
   2ecb4:	sub	r1, r1, #45	; 0x2d
   2ecb8:	clz	r1, r1
   2ecbc:	lsr	r1, r1, #5
   2ecc0:	ldrb	r1, [r6, r1]
   2ecc4:	cmp	r1, #46	; 0x2e
   2ecc8:	beq	2ece0 <flatcc_json_parser_float@@Base+0x78>
   2eccc:	cmp	r1, #48	; 0x30
   2ecd0:	bne	2ecf0 <flatcc_json_parser_float@@Base+0x88>
   2ecd4:	ldrb	r0, [r0, #1]
   2ecd8:	cmp	r0, #48	; 0x30
   2ecdc:	bne	2ecf0 <flatcc_json_parser_float@@Base+0x88>
   2ece0:	ldr	r0, [r8, #24]
   2ece4:	cmp	r0, #0
   2ece8:	bne	2ed90 <flatcc_json_parser_float@@Base+0x128>
   2ecec:	b	2ed74 <flatcc_json_parser_float@@Base+0x10c>
   2ecf0:	sub	r1, r5, r6
   2ecf4:	mov	r2, sp
   2ecf8:	mov	r0, r6
   2ecfc:	bl	2e408 <flatcc_json_parser_double@@Base+0xfc>
   2ed00:	vldr	d16, [sp]
   2ed04:	mov	r4, r0
   2ed08:	add	r0, pc, #148	; 0x94
   2ed0c:	vcmpe.f64	d16, #0.0
   2ed10:	vcvt.f32.f64	s16, d16
   2ed14:	vmrs	APSR_nzcv, fpscr
   2ed18:	addmi	r0, r0, #4
   2ed1c:	vldr	s18, [r0]
   2ed20:	vmov.f32	s0, s16
   2ed24:	bl	12ad4 <__isinff@plt>
   2ed28:	cmp	r0, #0
   2ed2c:	vseleq.f32	s0, s16, s18
   2ed30:	movne	r4, r6
   2ed34:	cmp	r4, #0
   2ed38:	cmpne	r4, r6
   2ed3c:	vstr	s0, [r7]
   2ed40:	bne	2ed94 <flatcc_json_parser_float@@Base+0x12c>
   2ed44:	bl	12ad4 <__isinff@plt>
   2ed48:	ldr	r1, [r8, #24]
   2ed4c:	cmp	r0, #0
   2ed50:	beq	2ed6c <flatcc_json_parser_float@@Base+0x104>
   2ed54:	cmp	r1, #0
   2ed58:	bne	2ed90 <flatcc_json_parser_float@@Base+0x128>
   2ed5c:	mov	r0, #7
   2ed60:	b	2ed78 <flatcc_json_parser_float@@Base+0x110>
   2ed64:	mov	r4, r6
   2ed68:	b	2ed94 <flatcc_json_parser_float@@Base+0x12c>
   2ed6c:	cmp	r1, #0
   2ed70:	bne	2ed90 <flatcc_json_parser_float@@Base+0x128>
   2ed74:	mov	r0, #6
   2ed78:	str	r6, [r8, #36]	; 0x24
   2ed7c:	ldr	r1, [r8, #4]
   2ed80:	sub	r1, r6, r1
   2ed84:	add	r1, r1, #1
   2ed88:	str	r1, [r8, #20]
   2ed8c:	str	r0, [r8, #24]
   2ed90:	mov	r4, r5
   2ed94:	mov	r0, r4
   2ed98:	sub	sp, fp, #40	; 0x28
   2ed9c:	vpop	{d8-d9}
   2eda0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2eda4:	svcvc	0x00800000
   2eda8:			; <UNDEFINED> instruction: 0xff800000

0002edac <flatcc_json_parser_integer@@Base>:
   2edac:	push	{r4, r5, r6, r7, fp, lr}
   2edb0:	add	fp, sp, #16
   2edb4:	mov	ip, r1
   2edb8:	cmp	r1, r2
   2edbc:	beq	2eef4 <flatcc_json_parser_integer@@Base+0x148>
   2edc0:	ldrb	r1, [ip]
   2edc4:	mov	r4, #0
   2edc8:	sub	r1, r1, #45	; 0x2d
   2edcc:	clz	r1, r1
   2edd0:	lsr	r1, r1, #5
   2edd4:	str	r1, [r3]
   2edd8:	add	r1, ip, r1
   2eddc:	cmp	r1, r2
   2ede0:	beq	2ee48 <flatcc_json_parser_integer@@Base+0x9c>
   2ede4:	mov	lr, #10
   2ede8:	mov	r5, #0
   2edec:	ldrb	r6, [r1]
   2edf0:	sub	r7, r6, #48	; 0x30
   2edf4:	uxtb	r7, r7
   2edf8:	cmp	r7, #9
   2edfc:	bhi	2ee58 <flatcc_json_parser_integer@@Base+0xac>
   2ee00:	add	r7, r5, r5, lsl #2
   2ee04:	lsl	r7, r7, #1
   2ee08:	umlal	r6, r7, r4, lr
   2ee0c:	subs	r6, r6, #48	; 0x30
   2ee10:	sbc	r7, r7, #0
   2ee14:	subs	r4, r6, r4
   2ee18:	sbcs	r4, r7, r5
   2ee1c:	bcc	2eea8 <flatcc_json_parser_integer@@Base+0xfc>
   2ee20:	add	r1, r1, #1
   2ee24:	mov	r4, r6
   2ee28:	mov	r5, r7
   2ee2c:	cmp	r2, r1
   2ee30:	bne	2edec <flatcc_json_parser_integer@@Base+0x40>
   2ee34:	mov	r3, #0
   2ee38:	mov	r1, r2
   2ee3c:	mov	r4, r6
   2ee40:	mov	r5, r7
   2ee44:	b	2ee5c <flatcc_json_parser_integer@@Base+0xb0>
   2ee48:	mov	r1, r2
   2ee4c:	mov	r5, #0
   2ee50:	mov	r3, #0
   2ee54:	b	2ee5c <flatcc_json_parser_integer@@Base+0xb0>
   2ee58:	mov	r3, #1
   2ee5c:	cmp	r1, ip
   2ee60:	beq	2eef4 <flatcc_json_parser_integer@@Base+0x148>
   2ee64:	cmp	r3, #0
   2ee68:	beq	2eee8 <flatcc_json_parser_integer@@Base+0x13c>
   2ee6c:	ldrb	r3, [r1]
   2ee70:	cmp	r3, #46	; 0x2e
   2ee74:	cmpne	r3, #101	; 0x65
   2ee78:	bne	2eee0 <flatcc_json_parser_integer@@Base+0x134>
   2ee7c:	ldr	r3, [r0, #24]
   2ee80:	cmp	r3, #0
   2ee84:	bne	2eed8 <flatcc_json_parser_integer@@Base+0x12c>
   2ee88:	str	r1, [r0, #36]	; 0x24
   2ee8c:	mov	r3, #12
   2ee90:	ldr	r7, [r0, #4]
   2ee94:	sub	r1, r1, r7
   2ee98:	add	r1, r1, #1
   2ee9c:	str	r1, [r0, #20]
   2eea0:	str	r3, [r0, #24]
   2eea4:	b	2eed8 <flatcc_json_parser_integer@@Base+0x12c>
   2eea8:	ldr	r7, [r0, #24]
   2eeac:	cmp	r7, #0
   2eeb0:	bne	2eed8 <flatcc_json_parser_integer@@Base+0x12c>
   2eeb4:	str	r1, [r0, #36]	; 0x24
   2eeb8:	cmp	r3, #0
   2eebc:	mov	r7, #8
   2eec0:	ldr	r3, [r0, #4]
   2eec4:	movweq	r7, #7
   2eec8:	sub	r1, r1, r3
   2eecc:	add	r1, r1, #1
   2eed0:	str	r1, [r0, #20]
   2eed4:	str	r7, [r0, #24]
   2eed8:	mov	ip, r2
   2eedc:	b	2eef4 <flatcc_json_parser_integer@@Base+0x148>
   2eee0:	cmp	r3, #69	; 0x45
   2eee4:	beq	2ee7c <flatcc_json_parser_integer@@Base+0xd0>
   2eee8:	ldr	r0, [fp, #8]
   2eeec:	mov	ip, r1
   2eef0:	strd	r4, [r0]
   2eef4:	mov	r0, ip
   2eef8:	pop	{r4, r5, r6, r7, fp, pc}

0002eefc <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   2eefc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ef00:	add	fp, sp, #28
   2ef04:	sub	sp, sp, #36	; 0x24
   2ef08:	mov	r7, r3
   2ef0c:	mov	r4, r2
   2ef10:	mov	r5, r0
   2ef14:	cmp	r1, r2
   2ef18:	beq	2ef30 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x34>
   2ef1c:	ldrb	r0, [r1]
   2ef20:	cmp	r0, #34	; 0x22
   2ef24:	bne	2ef30 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x34>
   2ef28:	add	r9, r1, #1
   2ef2c:	b	2ef60 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x64>
   2ef30:	ldr	r0, [r5, #24]
   2ef34:	mov	r9, r4
   2ef38:	cmp	r0, #0
   2ef3c:	bne	2ef60 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x64>
   2ef40:	str	r1, [r5, #36]	; 0x24
   2ef44:	mov	r0, #16
   2ef48:	mov	r9, r4
   2ef4c:	ldr	r2, [r5, #4]
   2ef50:	sub	r1, r1, r2
   2ef54:	add	r1, r1, #1
   2ef58:	str	r1, [r5, #20]
   2ef5c:	str	r0, [r5, #24]
   2ef60:	ldr	r6, [fp, #8]
   2ef64:	mov	r0, r5
   2ef68:	mov	r1, r9
   2ef6c:	mov	r2, r4
   2ef70:	bl	2ceec <flatcc_json_parser_string_part@@Base>
   2ef74:	mov	sl, r0
   2ef78:	cmp	r0, r4
   2ef7c:	mov	r0, r4
   2ef80:	beq	2efbc <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   2ef84:	ldrb	r0, [sl]
   2ef88:	cmp	r0, #34	; 0x22
   2ef8c:	bne	2efb8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xbc>
   2ef90:	sub	r1, sl, r9
   2ef94:	and	r0, r1, #3
   2ef98:	str	r1, [sp, #28]
   2ef9c:	lsr	r1, r1, #2
   2efa0:	add	r8, r1, r1, lsl #1
   2efa4:	cmp	r0, #2
   2efa8:	beq	2eff8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xfc>
   2efac:	cmp	r0, #3
   2efb0:	addeq	r8, r8, #2
   2efb4:	b	2effc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x100>
   2efb8:	mov	r0, sl
   2efbc:	mov	r1, #0
   2efc0:	str	r1, [r7]
   2efc4:	ldr	r1, [r5, #24]
   2efc8:	cmp	r1, #0
   2efcc:	bne	2f048 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   2efd0:	str	r0, [r5, #36]	; 0x24
   2efd4:	cmp	r6, #0
   2efd8:	mov	r1, #31
   2efdc:	ldr	r2, [r5, #4]
   2efe0:	movwne	r1, #32
   2efe4:	sub	r0, r0, r2
   2efe8:	add	r0, r0, #1
   2efec:	str	r0, [r5, #20]
   2eff0:	str	r1, [r5, #24]
   2eff4:	b	2f048 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   2eff8:	add	r8, r8, #1
   2effc:	ldr	r0, [r5]
   2f000:	mov	r1, #1
   2f004:	mov	r2, #1
   2f008:	mvn	r3, #0
   2f00c:	bl	29f5c <flatcc_builder_start_vector@@Base>
   2f010:	cmp	r0, #0
   2f014:	beq	2f054 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x158>
   2f018:	mov	r0, #0
   2f01c:	str	r0, [r7]
   2f020:	ldr	r0, [r5, #24]
   2f024:	cmp	r0, #0
   2f028:	bne	2f048 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   2f02c:	mov	r0, #33	; 0x21
   2f030:	str	sl, [r5, #36]	; 0x24
   2f034:	ldr	r1, [r5, #4]
   2f038:	sub	r1, sl, r1
   2f03c:	add	r1, r1, #1
   2f040:	str	r1, [r5, #20]
   2f044:	str	r0, [r5, #24]
   2f048:	mov	r0, r4
   2f04c:	sub	sp, fp, #28
   2f050:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f054:	ldr	r0, [r5]
   2f058:	mov	r1, r8
   2f05c:	bl	29764 <flatcc_builder_extend_vector@@Base>
   2f060:	cmp	r0, #0
   2f064:	beq	2f018 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x11c>
   2f068:	movw	r1, #11272	; 0x2c08
   2f06c:	ldr	ip, [sp, #28]
   2f070:	movw	r2, #11016	; 0x2b08
   2f074:	cmp	r6, #0
   2f078:	str	r7, [sp, #8]
   2f07c:	add	r7, sp, #32
   2f080:	mov	r6, r9
   2f084:	str	r0, [sp, #4]
   2f088:	str	r0, [sp, #16]
   2f08c:	str	r8, [sp, #24]
   2f090:	movt	r1, #3
   2f094:	movt	r2, #3
   2f098:	movne	r2, r1
   2f09c:	cmp	r8, #0
   2f0a0:	mov	r1, r8
   2f0a4:	mvneq	r1, #0
   2f0a8:	str	r1, [sp, #20]
   2f0ac:	mov	r1, #0
   2f0b0:	str	ip, [sp, #12]
   2f0b4:	cmp	ip, r1
   2f0b8:	beq	2f160 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x264>
   2f0bc:	ldrb	r3, [r6, r1]
   2f0c0:	ldrb	lr, [r2, r3]
   2f0c4:	cmp	lr, #64	; 0x40
   2f0c8:	strb	lr, [r7, r1]
   2f0cc:	bcc	2f0e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e8>
   2f0d0:	cmp	lr, #65	; 0x41
   2f0d4:	bne	2f1ac <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2b0>
   2f0d8:	sub	r1, r1, #1
   2f0dc:	sub	ip, ip, #1
   2f0e0:	add	r6, r6, #1
   2f0e4:	add	r1, r1, #1
   2f0e8:	cmp	r1, #4
   2f0ec:	bcc	2f0b4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b8>
   2f0f0:	ldr	r0, [sp, #20]
   2f0f4:	cmp	r0, #3
   2f0f8:	bcc	2f24c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x350>
   2f0fc:	ldrb	r3, [sp, #33]	; 0x21
   2f100:	ldrb	r1, [sp, #32]
   2f104:	mov	r0, r7
   2f108:	ldr	r8, [sp, #24]
   2f10c:	sub	ip, ip, #4
   2f110:	add	r6, r6, #4
   2f114:	lsr	r7, r3, #4
   2f118:	orr	r1, r7, r1, lsl #2
   2f11c:	mov	r7, r0
   2f120:	ldr	r0, [sp, #16]
   2f124:	strb	r1, [r0]
   2f128:	ldrb	r1, [sp, #34]	; 0x22
   2f12c:	lsr	r1, r1, #2
   2f130:	orr	r1, r1, r3, lsl #4
   2f134:	strb	r1, [r0, #1]
   2f138:	ldrb	r1, [sp, #34]	; 0x22
   2f13c:	ldrb	r3, [sp, #35]	; 0x23
   2f140:	orr	r1, r3, r1, lsl #6
   2f144:	strb	r1, [r0, #2]
   2f148:	ldr	r1, [sp, #20]
   2f14c:	add	r0, r0, #3
   2f150:	str	r0, [sp, #16]
   2f154:	subs	r1, r1, #3
   2f158:	bne	2f0a8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ac>
   2f15c:	b	2f238 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x33c>
   2f160:	mov	r1, ip
   2f164:	mov	r0, ip
   2f168:	sub	ip, ip, r0
   2f16c:	cmp	r1, #0
   2f170:	beq	2f238 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x33c>
   2f174:	cmp	r1, #3
   2f178:	beq	2f1f0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2f4>
   2f17c:	cmp	r1, #2
   2f180:	bne	2f24c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x350>
   2f184:	ldrb	r1, [sp, #33]	; 0x21
   2f188:	tst	r1, #15
   2f18c:	bne	2f24c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x350>
   2f190:	ldrb	r2, [sp, #32]
   2f194:	lsl	r2, r2, #2
   2f198:	orr	r1, r2, r1, lsr #4
   2f19c:	ldr	r2, [sp, #16]
   2f1a0:	strb	r1, [r2], #1
   2f1a4:	str	r2, [sp, #16]
   2f1a8:	b	2f238 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x33c>
   2f1ac:	cmp	lr, #66	; 0x42
   2f1b0:	bne	2f2bc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c0>
   2f1b4:	add	r3, r1, #1
   2f1b8:	mov	r0, r3
   2f1bc:	cmp	r3, ip
   2f1c0:	bcs	2f168 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x26c>
   2f1c4:	cmp	r0, #7
   2f1c8:	bhi	2f168 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x26c>
   2f1cc:	ldrb	r3, [r6, r0]
   2f1d0:	ldr	r8, [sp, #24]
   2f1d4:	ldrb	r3, [r2, r3]
   2f1d8:	sub	r3, r3, #65	; 0x41
   2f1dc:	uxtb	r7, r3
   2f1e0:	add	r3, r0, #1
   2f1e4:	cmp	r7, #2
   2f1e8:	bcc	2f1b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2bc>
   2f1ec:	b	2f168 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x26c>
   2f1f0:	ldr	r1, [sp, #20]
   2f1f4:	cmp	r1, #2
   2f1f8:	bcc	2f24c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x350>
   2f1fc:	ldrb	r1, [sp, #34]	; 0x22
   2f200:	ands	r2, r1, #3
   2f204:	bne	2f24c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x350>
   2f208:	ldrb	r3, [sp, #33]	; 0x21
   2f20c:	ldrb	r2, [sp, #32]
   2f210:	ldr	r8, [sp, #24]
   2f214:	lsl	r7, r3, #4
   2f218:	orr	r1, r7, r1, lsr #2
   2f21c:	ldr	r7, [sp, #16]
   2f220:	strb	r1, [r7, #1]
   2f224:	lsr	r1, r3, #4
   2f228:	orr	r1, r1, r2, lsl #2
   2f22c:	strb	r1, [r7]
   2f230:	add	r7, r7, #2
   2f234:	str	r7, [sp, #16]
   2f238:	cmp	ip, #0
   2f23c:	beq	2f268 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x36c>
   2f240:	ldr	r0, [sp, #28]
   2f244:	sub	r0, r0, ip
   2f248:	b	2f258 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x35c>
   2f24c:	ldr	r0, [sp, #28]
   2f250:	ldr	r1, [sp, #12]
   2f254:	sub	r0, r0, r1
   2f258:	ldr	r6, [fp, #8]
   2f25c:	ldr	r7, [sp, #8]
   2f260:	add	r0, r9, r0
   2f264:	b	2efbc <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   2f268:	ldr	r0, [sp, #4]
   2f26c:	ldr	r1, [sp, #16]
   2f270:	ldr	r7, [sp, #8]
   2f274:	sub	r0, r1, r0
   2f278:	cmp	r8, r0
   2f27c:	bls	2f294 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x398>
   2f280:	sub	r1, r8, r0
   2f284:	ldr	r0, [r5]
   2f288:	bl	29da8 <flatcc_builder_truncate_vector@@Base>
   2f28c:	cmp	r0, #0
   2f290:	bne	2f018 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x11c>
   2f294:	ldr	r0, [r5]
   2f298:	bl	2af88 <flatcc_builder_end_vector@@Base>
   2f29c:	cmp	r0, #0
   2f2a0:	str	r0, [r7]
   2f2a4:	beq	2f018 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x11c>
   2f2a8:	ldrb	r0, [sl]
   2f2ac:	cmp	r0, #34	; 0x22
   2f2b0:	bne	2f2c4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c8>
   2f2b4:	add	r4, sl, #1
   2f2b8:	b	2f048 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   2f2bc:	mov	r0, r1
   2f2c0:	b	2f168 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x26c>
   2f2c4:	ldr	r0, [r5, #24]
   2f2c8:	cmp	r0, #0
   2f2cc:	bne	2f048 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   2f2d0:	mov	r0, #20
   2f2d4:	b	2f030 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x134>

0002f2d8 <flatcc_json_parser_build_string@@Base>:
   2f2d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f2dc:	add	fp, sp, #28
   2f2e0:	sub	sp, sp, #4
   2f2e4:	mov	r9, r3
   2f2e8:	mov	sl, r2
   2f2ec:	mov	r5, r0
   2f2f0:	cmp	r1, r2
   2f2f4:	beq	2f30c <flatcc_json_parser_build_string@@Base+0x34>
   2f2f8:	ldrb	r0, [r1]
   2f2fc:	cmp	r0, #34	; 0x22
   2f300:	bne	2f30c <flatcc_json_parser_build_string@@Base+0x34>
   2f304:	add	r6, r1, #1
   2f308:	b	2f33c <flatcc_json_parser_build_string@@Base+0x64>
   2f30c:	ldr	r0, [r5, #24]
   2f310:	mov	r6, sl
   2f314:	cmp	r0, #0
   2f318:	bne	2f33c <flatcc_json_parser_build_string@@Base+0x64>
   2f31c:	str	r1, [r5, #36]	; 0x24
   2f320:	mov	r0, #16
   2f324:	mov	r6, sl
   2f328:	ldr	r2, [r5, #4]
   2f32c:	sub	r1, r1, r2
   2f330:	add	r1, r1, #1
   2f334:	str	r1, [r5, #20]
   2f338:	str	r0, [r5, #24]
   2f33c:	mov	r0, r5
   2f340:	mov	r1, r6
   2f344:	mov	r2, sl
   2f348:	bl	2ceec <flatcc_json_parser_string_part@@Base>
   2f34c:	mov	r4, r0
   2f350:	cmp	r0, sl
   2f354:	beq	2f37c <flatcc_json_parser_build_string@@Base+0xa4>
   2f358:	ldrb	r0, [r4]
   2f35c:	cmp	r0, #34	; 0x22
   2f360:	bne	2f37c <flatcc_json_parser_build_string@@Base+0xa4>
   2f364:	ldr	r0, [r5]
   2f368:	sub	r2, r4, r6
   2f36c:	mov	r1, r6
   2f370:	bl	2bdec <flatcc_builder_create_string@@Base>
   2f374:	mov	r6, r4
   2f378:	b	2f454 <flatcc_json_parser_build_string@@Base+0x17c>
   2f37c:	ldr	r0, [r5]
   2f380:	bl	2a18c <flatcc_builder_start_string@@Base>
   2f384:	cmp	r0, #0
   2f388:	beq	2f398 <flatcc_json_parser_build_string@@Base+0xc0>
   2f38c:	mov	r0, #0
   2f390:	str	r0, [r9]
   2f394:	b	2f4a0 <flatcc_json_parser_build_string@@Base+0x1c8>
   2f398:	ldr	r0, [r5]
   2f39c:	sub	r2, r4, r6
   2f3a0:	mov	r1, r6
   2f3a4:	bl	29c6c <flatcc_builder_append_string@@Base>
   2f3a8:	cmp	r0, #0
   2f3ac:	beq	2f38c <flatcc_json_parser_build_string@@Base+0xb4>
   2f3b0:	cmp	r4, sl
   2f3b4:	mov	r6, sl
   2f3b8:	beq	2f44c <flatcc_json_parser_build_string@@Base+0x174>
   2f3bc:	mov	r8, sp
   2f3c0:	add	r6, r8, #1
   2f3c4:	ldrb	r0, [r4]
   2f3c8:	cmp	r0, #34	; 0x22
   2f3cc:	beq	2f438 <flatcc_json_parser_build_string@@Base+0x160>
   2f3d0:	mov	r0, r5
   2f3d4:	mov	r1, r4
   2f3d8:	mov	r2, sl
   2f3dc:	mov	r3, r8
   2f3e0:	bl	2d048 <flatcc_json_parser_string_escape@@Base>
   2f3e4:	mov	r7, r0
   2f3e8:	ldr	r0, [r5]
   2f3ec:	ldrb	r2, [sp]
   2f3f0:	mov	r1, r6
   2f3f4:	bl	29c6c <flatcc_builder_append_string@@Base>
   2f3f8:	cmp	r0, #0
   2f3fc:	beq	2f440 <flatcc_json_parser_build_string@@Base+0x168>
   2f400:	mov	r0, r5
   2f404:	mov	r1, r7
   2f408:	mov	r2, sl
   2f40c:	bl	2ceec <flatcc_json_parser_string_part@@Base>
   2f410:	cmp	r0, sl
   2f414:	beq	2f448 <flatcc_json_parser_build_string@@Base+0x170>
   2f418:	mov	r4, r0
   2f41c:	sub	r2, r0, r7
   2f420:	ldr	r0, [r5]
   2f424:	mov	r1, r7
   2f428:	bl	29c6c <flatcc_builder_append_string@@Base>
   2f42c:	cmp	r0, #0
   2f430:	bne	2f3c4 <flatcc_json_parser_build_string@@Base+0xec>
   2f434:	b	2f38c <flatcc_json_parser_build_string@@Base+0xb4>
   2f438:	mov	r6, r4
   2f43c:	b	2f44c <flatcc_json_parser_build_string@@Base+0x174>
   2f440:	mov	r4, r7
   2f444:	b	2f38c <flatcc_json_parser_build_string@@Base+0xb4>
   2f448:	mov	r6, sl
   2f44c:	ldr	r0, [r5]
   2f450:	bl	2bf54 <flatcc_builder_end_string@@Base>
   2f454:	cmp	r6, sl
   2f458:	str	r0, [r9]
   2f45c:	beq	2f474 <flatcc_json_parser_build_string@@Base+0x19c>
   2f460:	ldrb	r0, [r6]
   2f464:	cmp	r0, #34	; 0x22
   2f468:	bne	2f474 <flatcc_json_parser_build_string@@Base+0x19c>
   2f46c:	add	r4, r6, #1
   2f470:	b	2f4a0 <flatcc_json_parser_build_string@@Base+0x1c8>
   2f474:	ldr	r0, [r5, #24]
   2f478:	cmp	r0, #0
   2f47c:	bne	2f49c <flatcc_json_parser_build_string@@Base+0x1c4>
   2f480:	str	r6, [r5, #36]	; 0x24
   2f484:	mov	r0, #20
   2f488:	ldr	r1, [r5, #4]
   2f48c:	sub	r1, r6, r1
   2f490:	add	r1, r1, #1
   2f494:	str	r1, [r5, #20]
   2f498:	str	r0, [r5, #24]
   2f49c:	mov	r4, sl
   2f4a0:	mov	r0, r4
   2f4a4:	sub	sp, fp, #28
   2f4a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002f4ac <flatcc_json_parser_prepare_unions@@Base>:
   2f4ac:	push	{r4, r5, r6, r7, fp, lr}
   2f4b0:	add	fp, sp, #16
   2f4b4:	mov	r6, r0
   2f4b8:	add	r0, r3, r3, lsl #1
   2f4bc:	mov	r5, r1
   2f4c0:	mov	r1, #8
   2f4c4:	mov	r7, r3
   2f4c8:	mov	r4, r2
   2f4cc:	add	r1, r1, r0, lsl #3
   2f4d0:	ldr	r0, [r6]
   2f4d4:	bl	28bd0 <flatcc_builder_enter_user_frame@@Base>
   2f4d8:	mov	r1, r0
   2f4dc:	ldr	r0, [fp, #8]
   2f4e0:	cmp	r1, #0
   2f4e4:	str	r1, [r0]
   2f4e8:	beq	2f500 <flatcc_json_parser_prepare_unions@@Base+0x54>
   2f4ec:	ldr	r0, [r6]
   2f4f0:	bl	28d24 <flatcc_builder_get_user_frame_ptr@@Base>
   2f4f4:	mov	r4, r5
   2f4f8:	str	r7, [r0]
   2f4fc:	b	2f528 <flatcc_json_parser_prepare_unions@@Base+0x7c>
   2f500:	ldr	r0, [r6, #24]
   2f504:	cmp	r0, #0
   2f508:	bne	2f528 <flatcc_json_parser_prepare_unions@@Base+0x7c>
   2f50c:	str	r5, [r6, #36]	; 0x24
   2f510:	mov	r0, #33	; 0x21
   2f514:	ldr	r1, [r6, #4]
   2f518:	sub	r1, r5, r1
   2f51c:	add	r1, r1, #1
   2f520:	str	r1, [r6, #20]
   2f524:	str	r0, [r6, #24]
   2f528:	mov	r0, r4
   2f52c:	pop	{r4, r5, r6, r7, fp, pc}

0002f530 <flatcc_json_parser_finalize_unions@@Base>:
   2f530:	push	{r4, r5, r6, r7, fp, lr}
   2f534:	add	fp, sp, #16
   2f538:	mov	r6, r0
   2f53c:	ldr	r0, [r0]
   2f540:	mov	r7, r1
   2f544:	mov	r1, r3
   2f548:	mov	r5, r3
   2f54c:	mov	r4, r2
   2f550:	bl	28d24 <flatcc_builder_get_user_frame_ptr@@Base>
   2f554:	ldr	r0, [r0, #4]
   2f558:	cmp	r0, #0
   2f55c:	beq	2f58c <flatcc_json_parser_finalize_unions@@Base+0x5c>
   2f560:	ldr	r0, [r6, #24]
   2f564:	cmp	r0, #0
   2f568:	bne	2f590 <flatcc_json_parser_finalize_unions@@Base+0x60>
   2f56c:	str	r7, [r6, #36]	; 0x24
   2f570:	mov	r0, #27
   2f574:	ldr	r1, [r6, #4]
   2f578:	sub	r1, r7, r1
   2f57c:	add	r1, r1, #1
   2f580:	str	r1, [r6, #20]
   2f584:	str	r0, [r6, #24]
   2f588:	b	2f590 <flatcc_json_parser_finalize_unions@@Base+0x60>
   2f58c:	mov	r4, r7
   2f590:	ldr	r0, [r6]
   2f594:	mov	r1, r5
   2f598:	bl	28cdc <flatcc_builder_exit_user_frame_at@@Base>
   2f59c:	mov	r0, r4
   2f5a0:	pop	{r4, r5, r6, r7, fp, pc}

0002f5a4 <flatcc_json_parser_union@@Base>:
   2f5a4:	push	{r4, r5, r6, r7, fp, lr}
   2f5a8:	add	fp, sp, #16
   2f5ac:	sub	sp, sp, #16
   2f5b0:	mov	r6, r1
   2f5b4:	mov	r5, r0
   2f5b8:	ldr	r0, [r0]
   2f5bc:	ldr	r1, [fp, #12]
   2f5c0:	mov	r7, r3
   2f5c4:	mov	r4, r2
   2f5c8:	bl	28d24 <flatcc_builder_get_user_frame_ptr@@Base>
   2f5cc:	add	r2, r0, #8
   2f5d0:	add	r3, r7, r7, lsl #1
   2f5d4:	mov	r1, r2
   2f5d8:	ldr	r7, [r1, r3, lsl #3]!
   2f5dc:	cmp	r7, #0
   2f5e0:	beq	2f610 <flatcc_json_parser_union@@Base+0x6c>
   2f5e4:	ldr	r0, [r5, #24]
   2f5e8:	cmp	r0, #0
   2f5ec:	bne	2f6d0 <flatcc_json_parser_union@@Base+0x12c>
   2f5f0:	mov	r0, #28
   2f5f4:	str	r6, [r5, #36]	; 0x24
   2f5f8:	ldr	r1, [r5, #4]
   2f5fc:	sub	r1, r6, r1
   2f600:	add	r1, r1, #1
   2f604:	str	r1, [r5, #20]
   2f608:	str	r0, [r5, #24]
   2f60c:	b	2f6d0 <flatcc_json_parser_union@@Base+0x12c>
   2f610:	add	r2, r2, r3, lsl #3
   2f614:	ldrb	r3, [r2, #12]
   2f618:	cmp	r3, #0
   2f61c:	beq	2f68c <flatcc_json_parser_union@@Base+0xe8>
   2f620:	ldrb	r3, [r2, #13]
   2f624:	cmp	r3, #0
   2f628:	strb	r3, [sp, #8]
   2f62c:	beq	2f6c4 <flatcc_json_parser_union@@Base+0x120>
   2f630:	ldr	r1, [r0, #4]
   2f634:	ldr	r7, [fp, #16]
   2f638:	mov	r2, r4
   2f63c:	sub	r1, r1, #1
   2f640:	str	r1, [r0, #4]
   2f644:	add	r0, sp, #8
   2f648:	mov	r1, r6
   2f64c:	add	r0, r0, #4
   2f650:	str	r0, [sp]
   2f654:	mov	r0, r5
   2f658:	blx	r7
   2f65c:	cmp	r0, r4
   2f660:	beq	2f6d0 <flatcc_json_parser_union@@Base+0x12c>
   2f664:	mov	r6, r0
   2f668:	ldr	r1, [fp, #8]
   2f66c:	ldr	r0, [r5]
   2f670:	ldr	r2, [sp, #8]
   2f674:	ldr	r3, [sp, #12]
   2f678:	bl	2b360 <flatcc_builder_table_add_union@@Base>
   2f67c:	cmp	r0, #0
   2f680:	bne	2f5e4 <flatcc_json_parser_union@@Base+0x40>
   2f684:	mov	r4, r6
   2f688:	b	2f6d0 <flatcc_json_parser_union@@Base+0x12c>
   2f68c:	ldr	r3, [r0, #4]
   2f690:	add	r3, r3, #1
   2f694:	str	r3, [r0, #4]
   2f698:	ldr	r0, [r5, #16]
   2f69c:	str	r0, [r2, #8]
   2f6a0:	ldr	r0, [r5, #4]
   2f6a4:	str	r0, [r2, #4]
   2f6a8:	str	r6, [r1]
   2f6ac:	mov	r0, r5
   2f6b0:	mov	r1, r6
   2f6b4:	mov	r2, r4
   2f6b8:	bl	2d828 <flatcc_json_parser_generic_json@@Base>
   2f6bc:	mov	r4, r0
   2f6c0:	b	2f6d0 <flatcc_json_parser_union@@Base+0x12c>
   2f6c4:	ldr	r0, [r5, #24]
   2f6c8:	cmp	r0, #0
   2f6cc:	beq	2f6dc <flatcc_json_parser_union@@Base+0x138>
   2f6d0:	mov	r0, r4
   2f6d4:	sub	sp, fp, #16
   2f6d8:	pop	{r4, r5, r6, r7, fp, pc}
   2f6dc:	mov	r0, #25
   2f6e0:	b	2f5f4 <flatcc_json_parser_union@@Base+0x50>

0002f6e4 <flatcc_json_parser_union_type@@Base>:
   2f6e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f6e8:	add	fp, sp, #28
   2f6ec:	sub	sp, sp, #28
   2f6f0:	mov	r7, r1
   2f6f4:	mov	r5, r0
   2f6f8:	ldr	r0, [r0]
   2f6fc:	ldr	r1, [fp, #12]
   2f700:	mov	r4, r3
   2f704:	mov	r8, r2
   2f708:	bl	28d24 <flatcc_builder_get_user_frame_ptr@@Base>
   2f70c:	add	sl, r4, r4, lsl #1
   2f710:	add	r2, r0, #8
   2f714:	mov	r6, r0
   2f718:	str	r8, [sp, #8]
   2f71c:	add	r9, r2, sl, lsl #3
   2f720:	mov	r0, r9
   2f724:	ldrb	r1, [r0, #12]!
   2f728:	cmp	r1, #0
   2f72c:	beq	2f768 <flatcc_json_parser_union_type@@Base+0x84>
   2f730:	ldr	r0, [r5, #24]
   2f734:	cmp	r0, #0
   2f738:	bne	2f758 <flatcc_json_parser_union_type@@Base+0x74>
   2f73c:	str	r7, [r5, #36]	; 0x24
   2f740:	mov	r0, #28
   2f744:	ldr	r1, [r5, #4]
   2f748:	sub	r1, r7, r1
   2f74c:	add	r1, r1, #1
   2f750:	str	r1, [r5, #20]
   2f754:	str	r0, [r5, #24]
   2f758:	ldr	r3, [sp, #8]
   2f75c:	mov	r0, r3
   2f760:	sub	sp, fp, #28
   2f764:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f768:	mov	r1, #1
   2f76c:	mov	r4, r9
   2f770:	str	r2, [sp, #4]
   2f774:	cmp	r7, r8
   2f778:	mov	r2, r8
   2f77c:	strb	r1, [r0]
   2f780:	mov	r0, #0
   2f784:	str	r0, [sp, #20]
   2f788:	str	r0, [sp, #16]
   2f78c:	str	r0, [sp, #12]
   2f790:	strb	r0, [r4, #13]!
   2f794:	beq	2f838 <flatcc_json_parser_union_type@@Base+0x154>
   2f798:	add	r0, sp, #16
   2f79c:	add	r3, sp, #12
   2f7a0:	mov	r1, r7
   2f7a4:	str	r0, [sp]
   2f7a8:	mov	r0, r5
   2f7ac:	bl	2edac <flatcc_json_parser_integer@@Base>
   2f7b0:	ldr	r2, [sp, #8]
   2f7b4:	cmp	r0, r7
   2f7b8:	beq	2f838 <flatcc_json_parser_union_type@@Base+0x154>
   2f7bc:	ldr	r1, [sp, #12]
   2f7c0:	cmp	r1, #0
   2f7c4:	beq	2f7e0 <flatcc_json_parser_union_type@@Base+0xfc>
   2f7c8:	ldr	r1, [r5, #24]
   2f7cc:	mov	r3, r2
   2f7d0:	cmp	r1, #0
   2f7d4:	bne	2f830 <flatcc_json_parser_union_type@@Base+0x14c>
   2f7d8:	mov	r1, #8
   2f7dc:	b	2f808 <flatcc_json_parser_union_type@@Base+0x124>
   2f7e0:	ldr	r1, [sp, #16]
   2f7e4:	ldr	ip, [sp, #20]
   2f7e8:	subs	r3, r1, #256	; 0x100
   2f7ec:	sbcs	r3, ip, #0
   2f7f0:	bcc	2f828 <flatcc_json_parser_union_type@@Base+0x144>
   2f7f4:	ldr	r1, [r5, #24]
   2f7f8:	mov	r3, r2
   2f7fc:	cmp	r1, #0
   2f800:	bne	2f830 <flatcc_json_parser_union_type@@Base+0x14c>
   2f804:	mov	r1, #7
   2f808:	str	r0, [r5, #36]	; 0x24
   2f80c:	ldr	r3, [r5, #4]
   2f810:	sub	r0, r0, r3
   2f814:	mov	r3, r2
   2f818:	add	r0, r0, #1
   2f81c:	str	r0, [r5, #20]
   2f820:	str	r1, [r5, #24]
   2f824:	b	2f830 <flatcc_json_parser_union_type@@Base+0x14c>
   2f828:	mov	r3, r0
   2f82c:	strb	r1, [r4]
   2f830:	cmp	r3, r7
   2f834:	bne	2f854 <flatcc_json_parser_union_type@@Base+0x170>
   2f838:	ldr	r3, [fp, #16]
   2f83c:	mov	r0, r5
   2f840:	mov	r1, r7
   2f844:	str	r4, [sp]
   2f848:	bl	2f944 <flatcc_json_parser_union_type@@Base+0x260>
   2f84c:	ldr	r2, [sp, #8]
   2f850:	mov	r3, r0
   2f854:	ldr	r0, [sp, #4]
   2f858:	ldr	r1, [r0, sl, lsl #3]
   2f85c:	cmp	r1, #0
   2f860:	beq	2f8fc <flatcc_json_parser_union_type@@Base+0x218>
   2f864:	ldr	r0, [r6, #4]
   2f868:	cmp	r0, #0
   2f86c:	beq	2f924 <flatcc_json_parser_union_type@@Base+0x240>
   2f870:	sub	r0, r0, #1
   2f874:	mov	sl, r3
   2f878:	ldr	r7, [fp, #20]
   2f87c:	str	r0, [r6, #4]
   2f880:	ldr	r0, [r9, #8]
   2f884:	ldr	r8, [r5, #4]
   2f888:	ldr	r6, [r5, #16]
   2f88c:	str	r0, [r5, #16]
   2f890:	ldr	r0, [r9, #4]
   2f894:	str	r0, [r5, #4]
   2f898:	add	r0, sp, #16
   2f89c:	ldrb	r3, [r4]
   2f8a0:	add	r0, r0, #4
   2f8a4:	str	r0, [sp]
   2f8a8:	mov	r0, r5
   2f8ac:	strb	r3, [sp, #16]
   2f8b0:	blx	r7
   2f8b4:	ldr	r3, [sp, #8]
   2f8b8:	cmp	r0, r3
   2f8bc:	beq	2f75c <flatcc_json_parser_union_type@@Base+0x78>
   2f8c0:	ldr	r1, [fp, #8]
   2f8c4:	ldr	r0, [r5]
   2f8c8:	ldr	r2, [sp, #16]
   2f8cc:	ldr	r3, [sp, #20]
   2f8d0:	bl	2b360 <flatcc_builder_table_add_union@@Base>
   2f8d4:	cmp	r0, #0
   2f8d8:	beq	2f914 <flatcc_json_parser_union_type@@Base+0x230>
   2f8dc:	ldr	r0, [r5, #24]
   2f8e0:	cmp	r0, #0
   2f8e4:	bne	2f758 <flatcc_json_parser_union_type@@Base+0x74>
   2f8e8:	str	sl, [r5, #36]	; 0x24
   2f8ec:	mov	r0, #28
   2f8f0:	ldr	r1, [r5, #4]
   2f8f4:	sub	r1, sl, r1
   2f8f8:	b	2f74c <flatcc_json_parser_union_type@@Base+0x68>
   2f8fc:	ldrb	r0, [r4]
   2f900:	ldr	r1, [r6, #4]
   2f904:	cmp	r0, #0
   2f908:	addne	r1, r1, #1
   2f90c:	str	r1, [r6, #4]
   2f910:	b	2f75c <flatcc_json_parser_union_type@@Base+0x78>
   2f914:	mov	r3, sl
   2f918:	str	r8, [r5, #4]
   2f91c:	str	r6, [r5, #16]
   2f920:	b	2f75c <flatcc_json_parser_union_type@@Base+0x78>
   2f924:	movw	r0, #12501	; 0x30d5
   2f928:	movw	r1, #12516	; 0x30e4
   2f92c:	movw	r3, #12590	; 0x312e
   2f930:	movw	r2, #965	; 0x3c5
   2f934:	movt	r0, #3
   2f938:	movt	r1, #3
   2f93c:	movt	r3, #3
   2f940:	bl	12bc4 <__assert_fail@plt>
   2f944:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f948:	add	fp, sp, #28
   2f94c:	sub	sp, sp, #44	; 0x2c
   2f950:	mov	r4, r2
   2f954:	mov	r2, r1
   2f958:	ldr	r1, [fp, #8]
   2f95c:	mov	r5, r0
   2f960:	mov	r0, #0
   2f964:	cmp	r2, r4
   2f968:	strb	r0, [r1]
   2f96c:	beq	2f9d0 <flatcc_json_parser_union_type@@Base+0x2ec>
   2f970:	ldrb	r0, [r2]
   2f974:	cmp	r0, #46	; 0x2e
   2f978:	beq	2f994 <flatcc_json_parser_union_type@@Base+0x2b0>
   2f97c:	cmp	r0, #34	; 0x22
   2f980:	bne	2f9c8 <flatcc_json_parser_union_type@@Base+0x2e4>
   2f984:	mov	r0, #0
   2f988:	add	r1, r2, #1
   2f98c:	str	r0, [r5, #12]
   2f990:	b	2f9d4 <flatcc_json_parser_union_type@@Base+0x2f0>
   2f994:	ldr	r0, [r5, #24]
   2f998:	mov	r1, r4
   2f99c:	cmp	r0, #0
   2f9a0:	bne	2f9d4 <flatcc_json_parser_union_type@@Base+0x2f0>
   2f9a4:	str	r2, [r5, #36]	; 0x24
   2f9a8:	mov	r0, #5
   2f9ac:	ldr	r1, [r5, #4]
   2f9b0:	sub	r1, r2, r1
   2f9b4:	add	r1, r1, #1
   2f9b8:	str	r1, [r5, #20]
   2f9bc:	str	r0, [r5, #24]
   2f9c0:	mov	r1, r4
   2f9c4:	b	2f9d4 <flatcc_json_parser_union_type@@Base+0x2f0>
   2f9c8:	mov	r0, #1
   2f9cc:	str	r0, [r5, #12]
   2f9d0:	mov	r1, r2
   2f9d4:	ldr	r0, [r5, #12]
   2f9d8:	cmp	r0, #0
   2f9dc:	beq	2f9e8 <flatcc_json_parser_union_type@@Base+0x304>
   2f9e0:	mov	r7, r1
   2f9e4:	b	2fa2c <flatcc_json_parser_union_type@@Base+0x348>
   2f9e8:	sub	r0, r4, r1
   2f9ec:	cmp	r0, #2
   2f9f0:	blt	2fa14 <flatcc_json_parser_union_type@@Base+0x330>
   2f9f4:	ldrb	r0, [r1]
   2f9f8:	cmp	r0, #32
   2f9fc:	bhi	2f9e0 <flatcc_json_parser_union_type@@Base+0x2fc>
   2fa00:	bne	2fa14 <flatcc_json_parser_union_type@@Base+0x330>
   2fa04:	mov	r7, r1
   2fa08:	ldrb	r0, [r7, #1]!
   2fa0c:	cmp	r0, #32
   2fa10:	bhi	2fa2c <flatcc_json_parser_union_type@@Base+0x348>
   2fa14:	mov	r0, r5
   2fa18:	mov	r2, r4
   2fa1c:	mov	r6, r3
   2fa20:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2fa24:	mov	r3, r6
   2fa28:	mov	r7, r0
   2fa2c:	cmp	r7, r4
   2fa30:	beq	2fb2c <flatcc_json_parser_union_type@@Base+0x448>
   2fa34:	add	r9, r3, #4
   2fa38:	mov	r6, #0
   2fa3c:	add	sl, sp, #32
   2fa40:	add	r8, sp, #28
   2fa44:	str	r3, [sp, #16]
   2fa48:	str	r9, [sp, #12]
   2fa4c:	str	r6, [sp, #20]
   2fa50:	mov	r6, r3
   2fa54:	ldr	r6, [r3]
   2fa58:	add	r0, sp, #24
   2fa5c:	mov	r1, r7
   2fa60:	mov	r2, r4
   2fa64:	mov	r3, r8
   2fa68:	str	sl, [sp]
   2fa6c:	str	r0, [sp, #4]
   2fa70:	mov	r0, r5
   2fa74:	blx	r6
   2fa78:	cmp	r0, r4
   2fa7c:	beq	2fb2c <flatcc_json_parser_union_type@@Base+0x448>
   2fa80:	cmp	r0, r7
   2fa84:	bne	2fa98 <flatcc_json_parser_union_type@@Base+0x3b4>
   2fa88:	ldr	r6, [r9], #4
   2fa8c:	cmp	r6, #0
   2fa90:	bne	2fa58 <flatcc_json_parser_union_type@@Base+0x374>
   2fa94:	b	2fb04 <flatcc_json_parser_union_type@@Base+0x420>
   2fa98:	ldr	r6, [sp, #20]
   2fa9c:	cmp	r6, #0
   2faa0:	beq	2fab0 <flatcc_json_parser_union_type@@Base+0x3cc>
   2faa4:	ldr	r1, [r5, #12]
   2faa8:	cmp	r1, #0
   2faac:	bne	2fb60 <flatcc_json_parser_union_type@@Base+0x47c>
   2fab0:	ldr	r1, [sp, #28]
   2fab4:	cmp	r1, #0
   2fab8:	bne	2fb38 <flatcc_json_parser_union_type@@Base+0x454>
   2fabc:	ldr	r1, [sp, #32]
   2fac0:	ldr	r2, [sp, #36]	; 0x24
   2fac4:	subs	r3, r1, #256	; 0x100
   2fac8:	sbcs	r2, r2, #0
   2facc:	bcs	2fb4c <flatcc_json_parser_union_type@@Base+0x468>
   2fad0:	ldr	r2, [fp, #8]
   2fad4:	ldr	r9, [sp, #12]
   2fad8:	add	r6, r6, #1
   2fadc:	mov	r7, r0
   2fae0:	mov	r3, r2
   2fae4:	ldrb	r2, [r2]
   2fae8:	add	r1, r2, r1
   2faec:	strb	r1, [r3]
   2faf0:	ldr	r3, [sp, #16]
   2faf4:	ldr	r1, [sp, #24]
   2faf8:	cmp	r1, #0
   2fafc:	bne	2fa4c <flatcc_json_parser_union_type@@Base+0x368>
   2fb00:	b	2fb30 <flatcc_json_parser_union_type@@Base+0x44c>
   2fb04:	ldr	r0, [r5, #24]
   2fb08:	cmp	r0, #0
   2fb0c:	bne	2fb2c <flatcc_json_parser_union_type@@Base+0x448>
   2fb10:	str	r7, [r5, #36]	; 0x24
   2fb14:	mov	r0, #23
   2fb18:	ldr	r1, [r5, #4]
   2fb1c:	sub	r1, r7, r1
   2fb20:	add	r1, r1, #1
   2fb24:	str	r1, [r5, #20]
   2fb28:	str	r0, [r5, #24]
   2fb2c:	mov	r0, r4
   2fb30:	sub	sp, fp, #28
   2fb34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fb38:	ldr	r1, [r5, #24]
   2fb3c:	cmp	r1, #0
   2fb40:	bne	2fb2c <flatcc_json_parser_union_type@@Base+0x448>
   2fb44:	mov	r1, #8
   2fb48:	b	2fb70 <flatcc_json_parser_union_type@@Base+0x48c>
   2fb4c:	ldr	r1, [r5, #24]
   2fb50:	cmp	r1, #0
   2fb54:	bne	2fb2c <flatcc_json_parser_union_type@@Base+0x448>
   2fb58:	mov	r1, #7
   2fb5c:	b	2fb70 <flatcc_json_parser_union_type@@Base+0x48c>
   2fb60:	ldr	r1, [r5, #24]
   2fb64:	cmp	r1, #0
   2fb68:	bne	2fb2c <flatcc_json_parser_union_type@@Base+0x448>
   2fb6c:	mov	r1, #14
   2fb70:	str	r0, [r5, #36]	; 0x24
   2fb74:	ldr	r2, [r5, #4]
   2fb78:	sub	r0, r0, r2
   2fb7c:	add	r0, r0, #1
   2fb80:	str	r0, [r5, #20]
   2fb84:	str	r1, [r5, #24]
   2fb88:	b	2fb2c <flatcc_json_parser_union_type@@Base+0x448>

0002fb8c <flatcc_json_parser_union_vector@@Base>:
   2fb8c:	push	{r4, r5, r6, r7, fp, lr}
   2fb90:	add	fp, sp, #16
   2fb94:	sub	sp, sp, #16
   2fb98:	mov	r6, r1
   2fb9c:	mov	r5, r0
   2fba0:	ldr	r0, [r0]
   2fba4:	ldr	r1, [fp, #12]
   2fba8:	mov	r7, r3
   2fbac:	mov	r4, r2
   2fbb0:	bl	28d24 <flatcc_builder_get_user_frame_ptr@@Base>
   2fbb4:	add	r2, r0, #8
   2fbb8:	add	r3, r7, r7, lsl #1
   2fbbc:	mov	r1, r2
   2fbc0:	ldr	r7, [r1, r3, lsl #3]!
   2fbc4:	cmp	r7, #0
   2fbc8:	beq	2fbfc <flatcc_json_parser_union_vector@@Base+0x70>
   2fbcc:	ldr	r0, [r5, #24]
   2fbd0:	cmp	r0, #0
   2fbd4:	bne	2fbf4 <flatcc_json_parser_union_vector@@Base+0x68>
   2fbd8:	str	r6, [r5, #36]	; 0x24
   2fbdc:	mov	r0, #28
   2fbe0:	ldr	r1, [r5, #4]
   2fbe4:	sub	r1, r6, r1
   2fbe8:	add	r1, r1, #1
   2fbec:	str	r1, [r5, #20]
   2fbf0:	str	r0, [r5, #24]
   2fbf4:	mov	r0, r4
   2fbf8:	b	2fc40 <flatcc_json_parser_union_vector@@Base+0xb4>
   2fbfc:	add	r2, r2, r3, lsl #3
   2fc00:	ldr	r3, [r0, #4]
   2fc04:	ldrb	r7, [r2, #12]
   2fc08:	cmp	r7, #0
   2fc0c:	beq	2fc48 <flatcc_json_parser_union_vector@@Base+0xbc>
   2fc10:	sub	r3, r3, #1
   2fc14:	ldr	r1, [fp, #16]
   2fc18:	ldr	r7, [fp, #8]
   2fc1c:	str	r3, [r0, #4]
   2fc20:	ldr	r0, [r2, #16]
   2fc24:	ldr	r3, [r2, #20]
   2fc28:	mov	r2, r4
   2fc2c:	stm	sp, {r0, r7}
   2fc30:	str	r1, [sp, #8]
   2fc34:	mov	r0, r5
   2fc38:	mov	r1, r6
   2fc3c:	bl	2fc7c <flatcc_json_parser_union_vector@@Base+0xf0>
   2fc40:	sub	sp, fp, #16
   2fc44:	pop	{r4, r5, r6, r7, fp, pc}
   2fc48:	add	r3, r3, #1
   2fc4c:	str	r3, [r0, #4]
   2fc50:	ldr	r0, [r5, #16]
   2fc54:	str	r0, [r2, #8]
   2fc58:	ldr	r0, [r5, #4]
   2fc5c:	str	r0, [r2, #4]
   2fc60:	str	r6, [r1]
   2fc64:	mov	r0, r5
   2fc68:	mov	r1, r6
   2fc6c:	mov	r2, r4
   2fc70:	sub	sp, fp, #16
   2fc74:	pop	{r4, r5, r6, r7, fp, lr}
   2fc78:	b	2d828 <flatcc_json_parser_generic_json@@Base>
   2fc7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fc80:	add	fp, sp, #28
   2fc84:	sub	sp, sp, #12
   2fc88:	mov	r5, r0
   2fc8c:	mov	r0, #0
   2fc90:	mov	r8, r3
   2fc94:	mov	r6, r2
   2fc98:	mov	r7, r1
   2fc9c:	str	r0, [sp, #8]
   2fca0:	ldr	r0, [r5]
   2fca4:	bl	29fe8 <flatcc_builder_start_offset_vector@@Base>
   2fca8:	cmp	r0, #0
   2fcac:	beq	2fcd0 <flatcc_json_parser_union_vector@@Base+0x144>
   2fcb0:	ldr	r0, [r5, #24]
   2fcb4:	cmp	r0, #0
   2fcb8:	bne	2ff40 <flatcc_json_parser_union_vector@@Base+0x3b4>
   2fcbc:	str	r7, [r5, #36]	; 0x24
   2fcc0:	mov	r0, #33	; 0x21
   2fcc4:	ldr	r1, [r5, #4]
   2fcc8:	sub	r1, r7, r1
   2fccc:	b	2ff34 <flatcc_json_parser_union_vector@@Base+0x3a8>
   2fcd0:	ldr	sl, [fp, #8]
   2fcd4:	cmp	r7, r6
   2fcd8:	beq	2fd0c <flatcc_json_parser_union_vector@@Base+0x180>
   2fcdc:	ldrb	r0, [r7]
   2fce0:	cmp	r0, #91	; 0x5b
   2fce4:	bne	2fd0c <flatcc_json_parser_union_vector@@Base+0x180>
   2fce8:	add	r1, r7, #1
   2fcec:	sub	r0, r6, r1
   2fcf0:	cmp	r0, #2
   2fcf4:	blt	2fd50 <flatcc_json_parser_union_vector@@Base+0x1c4>
   2fcf8:	ldrb	r0, [r1]
   2fcfc:	cmp	r0, #32
   2fd00:	bls	2fd40 <flatcc_json_parser_union_vector@@Base+0x1b4>
   2fd04:	mov	r7, r1
   2fd08:	b	2fd60 <flatcc_json_parser_union_vector@@Base+0x1d4>
   2fd0c:	ldr	r0, [r5, #24]
   2fd10:	mov	r9, r6
   2fd14:	cmp	r0, #0
   2fd18:	bne	2ff10 <flatcc_json_parser_union_vector@@Base+0x384>
   2fd1c:	str	r7, [r5, #36]	; 0x24
   2fd20:	mov	r0, #22
   2fd24:	mov	r9, r6
   2fd28:	ldr	r1, [r5, #4]
   2fd2c:	sub	r1, r7, r1
   2fd30:	add	r1, r1, #1
   2fd34:	str	r1, [r5, #20]
   2fd38:	str	r0, [r5, #24]
   2fd3c:	b	2ff10 <flatcc_json_parser_union_vector@@Base+0x384>
   2fd40:	bne	2fd50 <flatcc_json_parser_union_vector@@Base+0x1c4>
   2fd44:	ldrb	r0, [r7, #2]!
   2fd48:	cmp	r0, #32
   2fd4c:	bhi	2fd60 <flatcc_json_parser_union_vector@@Base+0x1d4>
   2fd50:	mov	r0, r5
   2fd54:	mov	r2, r6
   2fd58:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2fd5c:	mov	r7, r0
   2fd60:	cmp	r7, r6
   2fd64:	mov	r4, r6
   2fd68:	beq	2fda0 <flatcc_json_parser_union_vector@@Base+0x214>
   2fd6c:	ldrb	r0, [r7]
   2fd70:	cmp	r0, #93	; 0x5d
   2fd74:	bne	2fd9c <flatcc_json_parser_union_vector@@Base+0x210>
   2fd78:	add	r1, r7, #1
   2fd7c:	sub	r0, r6, r1
   2fd80:	cmp	r0, #2
   2fd84:	blt	2ff00 <flatcc_json_parser_union_vector@@Base+0x374>
   2fd88:	ldrb	r0, [r1]
   2fd8c:	cmp	r0, #32
   2fd90:	bls	2feec <flatcc_json_parser_union_vector@@Base+0x360>
   2fd94:	mov	r9, r1
   2fd98:	b	2ff10 <flatcc_json_parser_union_vector@@Base+0x384>
   2fd9c:	mov	r4, r7
   2fda0:	cmp	sl, #0
   2fda4:	beq	2fecc <flatcc_json_parser_union_vector@@Base+0x340>
   2fda8:	add	r0, r6, #1
   2fdac:	mov	sl, #0
   2fdb0:	add	r9, sp, #8
   2fdb4:	str	r0, [sp, #4]
   2fdb8:	ldr	r0, [r5]
   2fdbc:	mov	r1, r8
   2fdc0:	bl	28d24 <flatcc_builder_get_user_frame_ptr@@Base>
   2fdc4:	ldrb	r3, [r0, -sl]
   2fdc8:	ldr	r7, [fp, #16]
   2fdcc:	mov	r0, r5
   2fdd0:	mov	r1, r4
   2fdd4:	mov	r2, r6
   2fdd8:	str	r9, [sp]
   2fddc:	blx	r7
   2fde0:	cmp	r0, r6
   2fde4:	beq	2ff40 <flatcc_json_parser_union_vector@@Base+0x3b4>
   2fde8:	mov	r7, r0
   2fdec:	ldr	r0, [r5]
   2fdf0:	mov	r1, #1
   2fdf4:	bl	299bc <flatcc_builder_extend_offset_vector@@Base>
   2fdf8:	cmp	r0, #0
   2fdfc:	beq	2fcb0 <flatcc_json_parser_union_vector@@Base+0x124>
   2fe00:	ldr	r1, [sp, #8]
   2fe04:	str	r1, [r0]
   2fe08:	sub	r0, r6, r7
   2fe0c:	cmp	r0, #2
   2fe10:	blt	2fe3c <flatcc_json_parser_union_vector@@Base+0x2b0>
   2fe14:	ldrb	r0, [r7]
   2fe18:	cmp	r0, #32
   2fe1c:	bls	2fe28 <flatcc_json_parser_union_vector@@Base+0x29c>
   2fe20:	mov	r4, r7
   2fe24:	b	2fe50 <flatcc_json_parser_union_vector@@Base+0x2c4>
   2fe28:	bne	2fe3c <flatcc_json_parser_union_vector@@Base+0x2b0>
   2fe2c:	mov	r4, r7
   2fe30:	ldrb	r0, [r4, #1]!
   2fe34:	cmp	r0, #32
   2fe38:	bhi	2fe50 <flatcc_json_parser_union_vector@@Base+0x2c4>
   2fe3c:	mov	r0, r5
   2fe40:	mov	r1, r7
   2fe44:	mov	r2, r6
   2fe48:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2fe4c:	mov	r4, r0
   2fe50:	cmp	r4, r6
   2fe54:	beq	2ffcc <flatcc_json_parser_union_vector@@Base+0x440>
   2fe58:	ldrb	r0, [r4]
   2fe5c:	cmp	r0, #44	; 0x2c
   2fe60:	bne	2ff4c <flatcc_json_parser_union_vector@@Base+0x3c0>
   2fe64:	add	r1, r4, #1
   2fe68:	sub	r0, r6, r1
   2fe6c:	cmp	r0, #2
   2fe70:	blt	2fe98 <flatcc_json_parser_union_vector@@Base+0x30c>
   2fe74:	ldrb	r0, [r1]
   2fe78:	cmp	r0, #32
   2fe7c:	bls	2fe88 <flatcc_json_parser_union_vector@@Base+0x2fc>
   2fe80:	mov	r4, r1
   2fe84:	b	2fea8 <flatcc_json_parser_union_vector@@Base+0x31c>
   2fe88:	bne	2fe98 <flatcc_json_parser_union_vector@@Base+0x30c>
   2fe8c:	ldrb	r0, [r4, #2]!
   2fe90:	cmp	r0, #32
   2fe94:	bhi	2fea8 <flatcc_json_parser_union_vector@@Base+0x31c>
   2fe98:	mov	r0, r5
   2fe9c:	mov	r2, r6
   2fea0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2fea4:	mov	r4, r0
   2fea8:	cmp	r4, r6
   2feac:	beq	2ff78 <flatcc_json_parser_union_vector@@Base+0x3ec>
   2feb0:	ldrb	r0, [r4]
   2feb4:	cmp	r0, #93	; 0x5d
   2feb8:	beq	2ff54 <flatcc_json_parser_union_vector@@Base+0x3c8>
   2febc:	ldr	r0, [fp, #8]
   2fec0:	sub	sl, sl, #1
   2fec4:	adds	r0, r0, sl
   2fec8:	bne	2fdb8 <flatcc_json_parser_union_vector@@Base+0x22c>
   2fecc:	ldr	r0, [r5, #24]
   2fed0:	cmp	r0, #0
   2fed4:	bne	2ff40 <flatcc_json_parser_union_vector@@Base+0x3b4>
   2fed8:	str	r4, [r5, #36]	; 0x24
   2fedc:	mov	r0, #30
   2fee0:	ldr	r1, [r5, #4]
   2fee4:	sub	r1, r4, r1
   2fee8:	b	2ff34 <flatcc_json_parser_union_vector@@Base+0x3a8>
   2feec:	bne	2ff00 <flatcc_json_parser_union_vector@@Base+0x374>
   2fef0:	ldrb	r0, [r7, #2]!
   2fef4:	mov	r9, r7
   2fef8:	cmp	r0, #32
   2fefc:	bhi	2ff10 <flatcc_json_parser_union_vector@@Base+0x384>
   2ff00:	mov	r0, r5
   2ff04:	mov	r2, r6
   2ff08:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2ff0c:	mov	r9, r0
   2ff10:	cmp	sl, #0
   2ff14:	beq	30008 <flatcc_json_parser_union_vector@@Base+0x47c>
   2ff18:	ldr	r0, [r5, #24]
   2ff1c:	cmp	r0, #0
   2ff20:	bne	2ff40 <flatcc_json_parser_union_vector@@Base+0x3b4>
   2ff24:	str	r9, [r5, #36]	; 0x24
   2ff28:	mov	r0, #30
   2ff2c:	ldr	r1, [r5, #4]
   2ff30:	sub	r1, r9, r1
   2ff34:	add	r1, r1, #1
   2ff38:	str	r1, [r5, #20]
   2ff3c:	str	r0, [r5, #24]
   2ff40:	mov	r0, r6
   2ff44:	sub	sp, fp, #28
   2ff48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ff4c:	cmp	r0, #93	; 0x5d
   2ff50:	bne	2ffa0 <flatcc_json_parser_union_vector@@Base+0x414>
   2ff54:	add	r1, r4, #1
   2ff58:	sub	r0, r6, r1
   2ff5c:	cmp	r0, #2
   2ff60:	blt	2ffe8 <flatcc_json_parser_union_vector@@Base+0x45c>
   2ff64:	ldrb	r0, [r1]
   2ff68:	cmp	r0, #32
   2ff6c:	bls	2ffd4 <flatcc_json_parser_union_vector@@Base+0x448>
   2ff70:	mov	r9, r1
   2ff74:	b	2fff8 <flatcc_json_parser_union_vector@@Base+0x46c>
   2ff78:	ldr	r0, [r5, #24]
   2ff7c:	mov	r9, r6
   2ff80:	cmp	r0, #0
   2ff84:	bne	2fff8 <flatcc_json_parser_union_vector@@Base+0x46c>
   2ff88:	str	r6, [r5, #36]	; 0x24
   2ff8c:	ldr	r2, [sp, #4]
   2ff90:	mov	r0, #9
   2ff94:	ldr	r1, [r5, #4]
   2ff98:	sub	r1, r2, r1
   2ff9c:	b	2ffc4 <flatcc_json_parser_union_vector@@Base+0x438>
   2ffa0:	ldr	r0, [r5, #24]
   2ffa4:	mov	r9, r6
   2ffa8:	cmp	r0, #0
   2ffac:	bne	2fff8 <flatcc_json_parser_union_vector@@Base+0x46c>
   2ffb0:	str	r4, [r5, #36]	; 0x24
   2ffb4:	mov	r0, #9
   2ffb8:	ldr	r1, [r5, #4]
   2ffbc:	sub	r1, r4, r1
   2ffc0:	add	r1, r1, #1
   2ffc4:	str	r1, [r5, #20]
   2ffc8:	str	r0, [r5, #24]
   2ffcc:	mov	r9, r6
   2ffd0:	b	2fff8 <flatcc_json_parser_union_vector@@Base+0x46c>
   2ffd4:	bne	2ffe8 <flatcc_json_parser_union_vector@@Base+0x45c>
   2ffd8:	ldrb	r0, [r4, #2]!
   2ffdc:	mov	r9, r4
   2ffe0:	cmp	r0, #32
   2ffe4:	bhi	2fff8 <flatcc_json_parser_union_vector@@Base+0x46c>
   2ffe8:	mov	r0, r5
   2ffec:	mov	r2, r6
   2fff0:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   2fff4:	mov	r9, r0
   2fff8:	ldr	r0, [fp, #8]
   2fffc:	add	r0, r0, sl
   30000:	cmp	r0, #1
   30004:	bne	2ff18 <flatcc_json_parser_union_vector@@Base+0x38c>
   30008:	ldr	r0, [r5]
   3000c:	mov	r1, r8
   30010:	bl	28d24 <flatcc_builder_get_user_frame_ptr@@Base>
   30014:	mov	r1, r0
   30018:	ldr	r0, [r5]
   3001c:	bl	2b274 <flatcc_builder_end_offset_vector_for_unions@@Base>
   30020:	cmp	r0, #0
   30024:	str	r0, [sp, #8]
   30028:	beq	30050 <flatcc_json_parser_union_vector@@Base+0x4c4>
   3002c:	ldr	r1, [fp, #12]
   30030:	ldr	r0, [r5]
   30034:	bl	2b448 <flatcc_builder_table_add_offset@@Base>
   30038:	cmp	r0, #0
   3003c:	beq	30050 <flatcc_json_parser_union_vector@@Base+0x4c4>
   30040:	ldr	r1, [sp, #8]
   30044:	mov	r6, r9
   30048:	str	r1, [r0]
   3004c:	b	2ff40 <flatcc_json_parser_union_vector@@Base+0x3b4>
   30050:	mov	r7, r9
   30054:	b	2fcb0 <flatcc_json_parser_union_vector@@Base+0x124>

00030058 <flatcc_json_parser_union_type_vector@@Base>:
   30058:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3005c:	add	fp, sp, #28
   30060:	sub	sp, sp, #44	; 0x2c
   30064:	mov	r7, r1
   30068:	mov	r5, r0
   3006c:	ldr	r0, [r0]
   30070:	ldr	r1, [fp, #12]
   30074:	mov	r4, r3
   30078:	mov	r6, r2
   3007c:	bl	28d24 <flatcc_builder_get_user_frame_ptr@@Base>
   30080:	add	sl, r4, r4, lsl #1
   30084:	add	r0, r0, #8
   30088:	add	r9, r0, sl, lsl #3
   3008c:	mov	r0, r9
   30090:	ldrb	r1, [r0, #12]!
   30094:	cmp	r1, #0
   30098:	beq	300bc <flatcc_json_parser_union_type_vector@@Base+0x64>
   3009c:	ldr	r0, [r5, #24]
   300a0:	cmp	r0, #0
   300a4:	bne	30564 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   300a8:	mov	r0, #28
   300ac:	str	r7, [r5, #36]	; 0x24
   300b0:	ldr	r1, [r5, #4]
   300b4:	sub	r1, r7, r1
   300b8:	b	30558 <flatcc_json_parser_union_type_vector@@Base+0x500>
   300bc:	mov	r1, #1
   300c0:	mov	r2, #1
   300c4:	mvn	r3, #0
   300c8:	strb	r1, [r0]
   300cc:	mov	r1, #1
   300d0:	ldr	r0, [r5]
   300d4:	bl	29f5c <flatcc_builder_start_vector@@Base>
   300d8:	cmp	r0, #0
   300dc:	beq	300e8 <flatcc_json_parser_union_type_vector@@Base+0x90>
   300e0:	mov	r4, r7
   300e4:	b	3053c <flatcc_json_parser_union_type_vector@@Base+0x4e4>
   300e8:	cmp	r7, r6
   300ec:	beq	30120 <flatcc_json_parser_union_type_vector@@Base+0xc8>
   300f0:	ldrb	r0, [r7]
   300f4:	cmp	r0, #91	; 0x5b
   300f8:	bne	30120 <flatcc_json_parser_union_type_vector@@Base+0xc8>
   300fc:	add	r1, r7, #1
   30100:	sub	r0, r6, r1
   30104:	cmp	r0, #2
   30108:	blt	30164 <flatcc_json_parser_union_type_vector@@Base+0x10c>
   3010c:	ldrb	r0, [r1]
   30110:	cmp	r0, #32
   30114:	bls	30154 <flatcc_json_parser_union_type_vector@@Base+0xfc>
   30118:	mov	r7, r1
   3011c:	b	30174 <flatcc_json_parser_union_type_vector@@Base+0x11c>
   30120:	ldr	r0, [r5, #24]
   30124:	mov	r8, r6
   30128:	cmp	r0, #0
   3012c:	bne	30438 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   30130:	str	r7, [r5, #36]	; 0x24
   30134:	mov	r0, #22
   30138:	ldr	r1, [r5, #4]
   3013c:	sub	r1, r7, r1
   30140:	add	r1, r1, #1
   30144:	str	r1, [r5, #20]
   30148:	str	r0, [r5, #24]
   3014c:	mov	r8, r6
   30150:	b	30438 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   30154:	bne	30164 <flatcc_json_parser_union_type_vector@@Base+0x10c>
   30158:	ldrb	r0, [r7, #2]!
   3015c:	cmp	r0, #32
   30160:	bhi	30174 <flatcc_json_parser_union_type_vector@@Base+0x11c>
   30164:	mov	r0, r5
   30168:	mov	r2, r6
   3016c:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   30170:	mov	r7, r0
   30174:	cmp	r7, r6
   30178:	mov	r4, r6
   3017c:	beq	301b4 <flatcc_json_parser_union_type_vector@@Base+0x15c>
   30180:	ldrb	r0, [r7]
   30184:	cmp	r0, #93	; 0x5d
   30188:	bne	301b0 <flatcc_json_parser_union_type_vector@@Base+0x158>
   3018c:	add	r1, r7, #1
   30190:	sub	r0, r6, r1
   30194:	cmp	r0, #2
   30198:	blt	30428 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   3019c:	ldrb	r0, [r1]
   301a0:	cmp	r0, #32
   301a4:	bls	303dc <flatcc_json_parser_union_type_vector@@Base+0x384>
   301a8:	mov	r8, r1
   301ac:	b	30438 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   301b0:	mov	r4, r7
   301b4:	ldr	r0, [r5]
   301b8:	mov	r1, #1
   301bc:	bl	29764 <flatcc_builder_extend_vector@@Base>
   301c0:	cmp	r0, #0
   301c4:	beq	3053c <flatcc_json_parser_union_type_vector@@Base+0x4e4>
   301c8:	mov	r1, r0
   301cc:	add	r0, r6, #1
   301d0:	str	r0, [sp, #16]
   301d4:	mov	r8, #0
   301d8:	cmp	r4, r6
   301dc:	str	r1, [sp, #20]
   301e0:	str	r8, [sp, #36]	; 0x24
   301e4:	str	r8, [sp, #32]
   301e8:	strb	r8, [sp, #27]
   301ec:	str	r8, [sp, #28]
   301f0:	beq	30294 <flatcc_json_parser_union_type_vector@@Base+0x23c>
   301f4:	add	r0, sp, #32
   301f8:	mov	r1, r4
   301fc:	mov	r2, r6
   30200:	add	r3, sp, #28
   30204:	str	r0, [sp]
   30208:	mov	r0, r5
   3020c:	bl	2edac <flatcc_json_parser_integer@@Base>
   30210:	cmp	r0, r4
   30214:	beq	30250 <flatcc_json_parser_union_type_vector@@Base+0x1f8>
   30218:	mov	r7, r0
   3021c:	ldr	r0, [sp, #28]
   30220:	cmp	r0, #0
   30224:	beq	30258 <flatcc_json_parser_union_type_vector@@Base+0x200>
   30228:	ldr	r0, [r5, #24]
   3022c:	cmp	r0, #0
   30230:	bne	30294 <flatcc_json_parser_union_type_vector@@Base+0x23c>
   30234:	str	r7, [r5, #36]	; 0x24
   30238:	ldr	r0, [r5, #4]
   3023c:	sub	r0, r7, r0
   30240:	add	r0, r0, #1
   30244:	str	r0, [r5, #20]
   30248:	mov	r0, #8
   3024c:	b	30290 <flatcc_json_parser_union_type_vector@@Base+0x238>
   30250:	mov	r7, r4
   30254:	b	30298 <flatcc_json_parser_union_type_vector@@Base+0x240>
   30258:	ldr	r0, [sp, #32]
   3025c:	ldr	r1, [sp, #36]	; 0x24
   30260:	subs	r2, r0, #256	; 0x100
   30264:	sbcs	r1, r1, #0
   30268:	bcc	303d0 <flatcc_json_parser_union_type_vector@@Base+0x378>
   3026c:	ldr	r0, [r5, #24]
   30270:	cmp	r0, #0
   30274:	bne	30294 <flatcc_json_parser_union_type_vector@@Base+0x23c>
   30278:	str	r7, [r5, #36]	; 0x24
   3027c:	ldr	r0, [r5, #4]
   30280:	sub	r0, r7, r0
   30284:	add	r0, r0, #1
   30288:	str	r0, [r5, #20]
   3028c:	mov	r0, #7
   30290:	str	r0, [r5, #24]
   30294:	mov	r7, r6
   30298:	cmp	r4, r7
   3029c:	bne	302d0 <flatcc_json_parser_union_type_vector@@Base+0x278>
   302a0:	ldr	r3, [fp, #16]
   302a4:	add	r0, sp, #27
   302a8:	mov	r1, r4
   302ac:	mov	r2, r6
   302b0:	str	r0, [sp]
   302b4:	mov	r0, r5
   302b8:	bl	2f944 <flatcc_json_parser_union_type@@Base+0x260>
   302bc:	mov	r7, r0
   302c0:	cmp	r0, r4
   302c4:	cmpne	r7, r6
   302c8:	beq	300e0 <flatcc_json_parser_union_type_vector@@Base+0x88>
   302cc:	ldrb	r8, [sp, #27]
   302d0:	ldr	r1, [fp, #24]
   302d4:	uxtb	r0, r8
   302d8:	blx	r1
   302dc:	cmp	r0, #0
   302e0:	bne	302f8 <flatcc_json_parser_union_type_vector@@Base+0x2a0>
   302e4:	ldrb	r0, [r5, #8]
   302e8:	tst	r0, #1
   302ec:	beq	305cc <flatcc_json_parser_union_type_vector@@Base+0x574>
   302f0:	mov	r8, #0
   302f4:	strb	r8, [sp, #27]
   302f8:	ldr	r0, [sp, #20]
   302fc:	strb	r8, [r0]
   30300:	sub	r0, r6, r7
   30304:	cmp	r0, #2
   30308:	blt	30334 <flatcc_json_parser_union_type_vector@@Base+0x2dc>
   3030c:	ldrb	r0, [r7]
   30310:	cmp	r0, #32
   30314:	bls	30320 <flatcc_json_parser_union_type_vector@@Base+0x2c8>
   30318:	mov	r4, r7
   3031c:	b	30348 <flatcc_json_parser_union_type_vector@@Base+0x2f0>
   30320:	bne	30334 <flatcc_json_parser_union_type_vector@@Base+0x2dc>
   30324:	mov	r4, r7
   30328:	ldrb	r0, [r4, #1]!
   3032c:	cmp	r0, #32
   30330:	bhi	30348 <flatcc_json_parser_union_type_vector@@Base+0x2f0>
   30334:	mov	r0, r5
   30338:	mov	r1, r7
   3033c:	mov	r2, r6
   30340:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   30344:	mov	r4, r0
   30348:	cmp	r4, r6
   3034c:	beq	3014c <flatcc_json_parser_union_type_vector@@Base+0xf4>
   30350:	ldrb	r0, [r4]
   30354:	cmp	r0, #44	; 0x2c
   30358:	bne	303f4 <flatcc_json_parser_union_type_vector@@Base+0x39c>
   3035c:	add	r1, r4, #1
   30360:	sub	r0, r6, r1
   30364:	cmp	r0, #2
   30368:	blt	30390 <flatcc_json_parser_union_type_vector@@Base+0x338>
   3036c:	ldrb	r0, [r1]
   30370:	cmp	r0, #32
   30374:	bls	30380 <flatcc_json_parser_union_type_vector@@Base+0x328>
   30378:	mov	r4, r1
   3037c:	b	303a0 <flatcc_json_parser_union_type_vector@@Base+0x348>
   30380:	bne	30390 <flatcc_json_parser_union_type_vector@@Base+0x338>
   30384:	ldrb	r0, [r4, #2]!
   30388:	cmp	r0, #32
   3038c:	bhi	303a0 <flatcc_json_parser_union_type_vector@@Base+0x348>
   30390:	mov	r0, r5
   30394:	mov	r2, r6
   30398:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   3039c:	mov	r4, r0
   303a0:	cmp	r4, r6
   303a4:	beq	30580 <flatcc_json_parser_union_type_vector@@Base+0x528>
   303a8:	ldrb	r0, [r4]
   303ac:	cmp	r0, #93	; 0x5d
   303b0:	beq	303fc <flatcc_json_parser_union_type_vector@@Base+0x3a4>
   303b4:	ldr	r0, [r5]
   303b8:	mov	r1, #1
   303bc:	bl	29764 <flatcc_builder_extend_vector@@Base>
   303c0:	mov	r1, r0
   303c4:	cmp	r0, #0
   303c8:	bne	301d4 <flatcc_json_parser_union_type_vector@@Base+0x17c>
   303cc:	b	3053c <flatcc_json_parser_union_type_vector@@Base+0x4e4>
   303d0:	mov	r8, r0
   303d4:	strb	r0, [sp, #27]
   303d8:	b	30298 <flatcc_json_parser_union_type_vector@@Base+0x240>
   303dc:	bne	30428 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   303e0:	ldrb	r0, [r7, #2]!
   303e4:	mov	r8, r7
   303e8:	cmp	r0, #32
   303ec:	bhi	30438 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   303f0:	b	30428 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   303f4:	cmp	r0, #93	; 0x5d
   303f8:	bne	305a8 <flatcc_json_parser_union_type_vector@@Base+0x550>
   303fc:	add	r1, r4, #1
   30400:	sub	r0, r6, r1
   30404:	cmp	r0, #2
   30408:	blt	30428 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   3040c:	ldrb	r0, [r1]
   30410:	cmp	r0, #32
   30414:	bhi	301a8 <flatcc_json_parser_union_type_vector@@Base+0x150>
   30418:	bne	30428 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   3041c:	ldrb	r0, [r4, #2]!
   30420:	mov	r8, r4
   30424:	b	303e8 <flatcc_json_parser_union_type_vector@@Base+0x390>
   30428:	mov	r0, r5
   3042c:	mov	r2, r6
   30430:	bl	2cf64 <flatcc_json_parser_space_ext@@Base>
   30434:	mov	r8, r0
   30438:	ldr	r0, [r5]
   3043c:	bl	2b078 <flatcc_builder_vector_count@@Base>
   30440:	str	r0, [r9, #16]
   30444:	mov	r4, r0
   30448:	ldr	r0, [r5]
   3044c:	mov	r1, r4
   30450:	bl	28bd0 <flatcc_builder_enter_user_frame@@Base>
   30454:	mov	r9, r0
   30458:	ldr	r0, [r5]
   3045c:	mov	r1, r9
   30460:	bl	28d24 <flatcc_builder_get_user_frame_ptr@@Base>
   30464:	mov	r7, r0
   30468:	ldr	r0, [r5]
   3046c:	bl	2b084 <flatcc_builder_vector_edit@@Base>
   30470:	mov	r1, r0
   30474:	mov	r0, r7
   30478:	mov	r2, r4
   3047c:	bl	12ab0 <memcpy@plt>
   30480:	ldr	r0, [r5]
   30484:	bl	2af88 <flatcc_builder_end_vector@@Base>
   30488:	cmp	r0, #0
   3048c:	beq	30538 <flatcc_json_parser_union_type_vector@@Base+0x4e0>
   30490:	ldr	r1, [fp, #8]
   30494:	mov	r7, r0
   30498:	ldr	r0, [r5]
   3049c:	sub	r1, r1, #1
   304a0:	bl	2b448 <flatcc_builder_table_add_offset@@Base>
   304a4:	cmp	r0, #0
   304a8:	beq	30538 <flatcc_json_parser_union_type_vector@@Base+0x4e0>
   304ac:	str	r7, [r0]
   304b0:	ldr	r1, [fp, #12]
   304b4:	ldr	r0, [r5]
   304b8:	bl	28d24 <flatcc_builder_get_user_frame_ptr@@Base>
   304bc:	add	r2, r0, #8
   304c0:	mov	r3, r2
   304c4:	ldr	r1, [r3, sl, lsl #3]!
   304c8:	str	r9, [r3, #20]
   304cc:	ldr	r3, [r0, #4]
   304d0:	cmp	r1, #0
   304d4:	beq	30570 <flatcc_json_parser_union_type_vector@@Base+0x518>
   304d8:	cmp	r3, #0
   304dc:	beq	305e0 <flatcc_json_parser_union_type_vector@@Base+0x588>
   304e0:	sub	r3, r3, #1
   304e4:	ldr	ip, [fp, #20]
   304e8:	str	r3, [r0, #4]
   304ec:	add	r0, r2, sl, lsl #3
   304f0:	mov	r3, r9
   304f4:	ldr	sl, [r5, #4]
   304f8:	ldr	r7, [r5, #16]
   304fc:	ldr	r2, [r0, #8]
   30500:	str	r2, [r5, #16]
   30504:	mov	r2, r6
   30508:	ldr	r0, [r0, #4]
   3050c:	str	r0, [r5, #4]
   30510:	ldr	r0, [fp, #8]
   30514:	str	r4, [sp]
   30518:	stmib	sp, {r0, ip}
   3051c:	mov	r0, r5
   30520:	bl	2fc7c <flatcc_json_parser_union_vector@@Base+0xf0>
   30524:	cmp	r0, r6
   30528:	beq	30564 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   3052c:	str	sl, [r5, #4]
   30530:	str	r7, [r5, #16]
   30534:	b	30578 <flatcc_json_parser_union_type_vector@@Base+0x520>
   30538:	mov	r4, r8
   3053c:	ldr	r0, [r5, #24]
   30540:	cmp	r0, #0
   30544:	bne	30564 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   30548:	str	r4, [r5, #36]	; 0x24
   3054c:	mov	r0, #33	; 0x21
   30550:	ldr	r1, [r5, #4]
   30554:	sub	r1, r4, r1
   30558:	add	r1, r1, #1
   3055c:	str	r1, [r5, #20]
   30560:	str	r0, [r5, #24]
   30564:	mov	r0, r6
   30568:	sub	sp, fp, #28
   3056c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30570:	add	r1, r3, #1
   30574:	str	r1, [r0, #4]
   30578:	mov	r6, r8
   3057c:	b	30564 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   30580:	ldr	r0, [r5, #24]
   30584:	mov	r8, r6
   30588:	cmp	r0, #0
   3058c:	bne	30438 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   30590:	str	r6, [r5, #36]	; 0x24
   30594:	ldr	r2, [sp, #16]
   30598:	mov	r0, #9
   3059c:	ldr	r1, [r5, #4]
   305a0:	sub	r1, r2, r1
   305a4:	b	30144 <flatcc_json_parser_union_type_vector@@Base+0xec>
   305a8:	ldr	r0, [r5, #24]
   305ac:	mov	r8, r6
   305b0:	cmp	r0, #0
   305b4:	bne	30438 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   305b8:	str	r4, [r5, #36]	; 0x24
   305bc:	mov	r0, #9
   305c0:	ldr	r1, [r5, #4]
   305c4:	sub	r1, r4, r1
   305c8:	b	30140 <flatcc_json_parser_union_type_vector@@Base+0xe8>
   305cc:	ldr	r0, [r5, #24]
   305d0:	cmp	r0, #0
   305d4:	bne	30564 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   305d8:	mov	r0, #15
   305dc:	b	300ac <flatcc_json_parser_union_type_vector@@Base+0x54>
   305e0:	movw	r0, #12501	; 0x30d5
   305e4:	movw	r1, #12516	; 0x30e4
   305e8:	movw	r3, #12794	; 0x31fa
   305ec:	movw	r2, #1122	; 0x462
   305f0:	movt	r0, #3
   305f4:	movt	r1, #3
   305f8:	movt	r3, #3
   305fc:	bl	12bc4 <__assert_fail@plt>

00030600 <flatcc_json_parser_table_as_root@@Base>:
   30600:	push	{r4, r5, r6, r7, fp, lr}
   30604:	add	fp, sp, #16
   30608:	sub	sp, sp, #48	; 0x30
   3060c:	cmp	r1, #0
   30610:	vmov.i32	q8, #0	; 0x00000000
   30614:	add	r5, sp, #4
   30618:	mov	r6, r0
   3061c:	add	r7, r2, r3
   30620:	mov	r4, r2
   30624:	movne	r5, r1
   30628:	mov	r1, #1
   3062c:	add	r0, r5, #12
   30630:	vst1.32	{d16-d17}, [r0]
   30634:	add	r0, r5, #28
   30638:	vst1.32	{d16-d17}, [r0]
   3063c:	ldr	r0, [fp, #8]
   30640:	str	r2, [r5, #4]
   30644:	str	r6, [r5]
   30648:	str	r0, [r5, #8]
   3064c:	str	r1, [r5, #16]
   30650:	mov	r1, #2
   30654:	str	r2, [r5, #28]
   30658:	str	r7, [r5, #32]
   3065c:	str	r2, [r5, #36]	; 0x24
   30660:	mov	r2, #0
   30664:	and	r3, r1, r0, lsr #1
   30668:	ldr	r1, [fp, #12]
   3066c:	mov	r0, r6
   30670:	bl	292cc <flatcc_builder_start_buffer@@Base>
   30674:	mov	r1, r0
   30678:	mvn	r0, #0
   3067c:	cmp	r1, #0
   30680:	bne	306c4 <flatcc_json_parser_table_as_root@@Base+0xc4>
   30684:	ldr	ip, [fp, #16]
   30688:	mov	r3, sp
   3068c:	mov	r0, r5
   30690:	mov	r1, r4
   30694:	mov	r2, r7
   30698:	blx	ip
   3069c:	ldr	r0, [r5, #24]
   306a0:	cmp	r0, #0
   306a4:	bne	306c4 <flatcc_json_parser_table_as_root@@Base+0xc4>
   306a8:	ldr	r1, [sp]
   306ac:	mov	r0, r6
   306b0:	bl	294bc <flatcc_builder_end_buffer@@Base>
   306b4:	cmp	r0, #0
   306b8:	mvn	r0, #0
   306bc:	movne	r0, #0
   306c0:	strne	r4, [r5, #40]	; 0x28
   306c4:	sub	sp, fp, #16
   306c8:	pop	{r4, r5, r6, r7, fp, pc}

000306cc <flatcc_json_parser_struct_as_root@@Base>:
   306cc:	push	{r4, r5, r6, r7, fp, lr}
   306d0:	add	fp, sp, #16
   306d4:	sub	sp, sp, #48	; 0x30
   306d8:	cmp	r1, #0
   306dc:	vmov.i32	q8, #0	; 0x00000000
   306e0:	add	r5, sp, #4
   306e4:	mov	r6, r0
   306e8:	add	r7, r2, r3
   306ec:	mov	r4, r2
   306f0:	movne	r5, r1
   306f4:	mov	r1, #1
   306f8:	add	r0, r5, #12
   306fc:	vst1.32	{d16-d17}, [r0]
   30700:	add	r0, r5, #28
   30704:	vst1.32	{d16-d17}, [r0]
   30708:	ldr	r0, [fp, #8]
   3070c:	str	r2, [r5, #4]
   30710:	str	r6, [r5]
   30714:	str	r0, [r5, #8]
   30718:	str	r1, [r5, #16]
   3071c:	mov	r1, #2
   30720:	str	r2, [r5, #28]
   30724:	str	r7, [r5, #32]
   30728:	str	r2, [r5, #36]	; 0x24
   3072c:	mov	r2, #0
   30730:	and	r3, r1, r0, lsr #1
   30734:	ldr	r1, [fp, #12]
   30738:	mov	r0, r6
   3073c:	bl	292cc <flatcc_builder_start_buffer@@Base>
   30740:	mov	r1, r0
   30744:	mvn	r0, #0
   30748:	cmp	r1, #0
   3074c:	bne	30790 <flatcc_json_parser_struct_as_root@@Base+0xc4>
   30750:	ldr	ip, [fp, #16]
   30754:	mov	r3, sp
   30758:	mov	r0, r5
   3075c:	mov	r1, r4
   30760:	mov	r2, r7
   30764:	blx	ip
   30768:	ldr	r0, [r5, #24]
   3076c:	cmp	r0, #0
   30770:	bne	30790 <flatcc_json_parser_struct_as_root@@Base+0xc4>
   30774:	ldr	r1, [sp]
   30778:	mov	r0, r6
   3077c:	bl	294bc <flatcc_builder_end_buffer@@Base>
   30780:	cmp	r0, #0
   30784:	mvn	r0, #0
   30788:	movne	r0, #0
   3078c:	strne	r4, [r5, #40]	; 0x28
   30790:	sub	sp, fp, #16
   30794:	pop	{r4, r5, r6, r7, fp, pc}
   30798:	eor	r1, r1, #-2147483648	; 0x80000000
   3079c:	b	307a4 <flatcc_json_parser_struct_as_root@@Base+0xd8>
   307a0:	eor	r3, r3, #-2147483648	; 0x80000000
   307a4:	push	{r4, r5, lr}
   307a8:	lsl	r4, r1, #1
   307ac:	lsl	r5, r3, #1
   307b0:	teq	r4, r5
   307b4:	teqeq	r0, r2
   307b8:	orrsne	ip, r4, r0
   307bc:	orrsne	ip, r5, r2
   307c0:	mvnsne	ip, r4, asr #21
   307c4:	mvnsne	ip, r5, asr #21
   307c8:	beq	309b4 <flatcc_json_parser_struct_as_root@@Base+0x2e8>
   307cc:	lsr	r4, r4, #21
   307d0:	rsbs	r5, r4, r5, lsr #21
   307d4:	rsblt	r5, r5, #0
   307d8:	ble	307f8 <flatcc_json_parser_struct_as_root@@Base+0x12c>
   307dc:	add	r4, r4, r5
   307e0:	eor	r2, r0, r2
   307e4:	eor	r3, r1, r3
   307e8:	eor	r0, r2, r0
   307ec:	eor	r1, r3, r1
   307f0:	eor	r2, r0, r2
   307f4:	eor	r3, r1, r3
   307f8:	cmp	r5, #54	; 0x36
   307fc:	pophi	{r4, r5, pc}
   30800:	tst	r1, #-2147483648	; 0x80000000
   30804:	lsl	r1, r1, #12
   30808:	mov	ip, #1048576	; 0x100000
   3080c:	orr	r1, ip, r1, lsr #12
   30810:	beq	3081c <flatcc_json_parser_struct_as_root@@Base+0x150>
   30814:	rsbs	r0, r0, #0
   30818:	rsc	r1, r1, #0
   3081c:	tst	r3, #-2147483648	; 0x80000000
   30820:	lsl	r3, r3, #12
   30824:	orr	r3, ip, r3, lsr #12
   30828:	beq	30834 <flatcc_json_parser_struct_as_root@@Base+0x168>
   3082c:	rsbs	r2, r2, #0
   30830:	rsc	r3, r3, #0
   30834:	teq	r4, r5
   30838:	beq	3099c <flatcc_json_parser_struct_as_root@@Base+0x2d0>
   3083c:	sub	r4, r4, #1
   30840:	rsbs	lr, r5, #32
   30844:	blt	30860 <flatcc_json_parser_struct_as_root@@Base+0x194>
   30848:	lsl	ip, r2, lr
   3084c:	adds	r0, r0, r2, lsr r5
   30850:	adc	r1, r1, #0
   30854:	adds	r0, r0, r3, lsl lr
   30858:	adcs	r1, r1, r3, asr r5
   3085c:	b	3087c <flatcc_json_parser_struct_as_root@@Base+0x1b0>
   30860:	sub	r5, r5, #32
   30864:	add	lr, lr, #32
   30868:	cmp	r2, #1
   3086c:	lsl	ip, r3, lr
   30870:	orrcs	ip, ip, #2
   30874:	adds	r0, r0, r3, asr r5
   30878:	adcs	r1, r1, r3, asr #31
   3087c:	and	r5, r1, #-2147483648	; 0x80000000
   30880:	bpl	30890 <flatcc_json_parser_struct_as_root@@Base+0x1c4>
   30884:	rsbs	ip, ip, #0
   30888:	rscs	r0, r0, #0
   3088c:	rsc	r1, r1, #0
   30890:	cmp	r1, #1048576	; 0x100000
   30894:	bcc	308d4 <flatcc_json_parser_struct_as_root@@Base+0x208>
   30898:	cmp	r1, #2097152	; 0x200000
   3089c:	bcc	308bc <flatcc_json_parser_struct_as_root@@Base+0x1f0>
   308a0:	lsrs	r1, r1, #1
   308a4:	rrxs	r0, r0
   308a8:	rrx	ip, ip
   308ac:	add	r4, r4, #1
   308b0:	lsl	r2, r4, #21
   308b4:	cmn	r2, #4194304	; 0x400000
   308b8:	bcs	30a14 <flatcc_json_parser_struct_as_root@@Base+0x348>
   308bc:	cmp	ip, #-2147483648	; 0x80000000
   308c0:	lsrseq	ip, r0, #1
   308c4:	adcs	r0, r0, #0
   308c8:	adc	r1, r1, r4, lsl #20
   308cc:	orr	r1, r1, r5
   308d0:	pop	{r4, r5, pc}
   308d4:	lsls	ip, ip, #1
   308d8:	adcs	r0, r0, r0
   308dc:	adc	r1, r1, r1
   308e0:	tst	r1, #1048576	; 0x100000
   308e4:	sub	r4, r4, #1
   308e8:	bne	308bc <flatcc_json_parser_struct_as_root@@Base+0x1f0>
   308ec:	teq	r1, #0
   308f0:	moveq	r1, r0
   308f4:	moveq	r0, #0
   308f8:	clz	r3, r1
   308fc:	addeq	r3, r3, #32
   30900:	sub	r3, r3, #11
   30904:	subs	r2, r3, #32
   30908:	bge	3092c <flatcc_json_parser_struct_as_root@@Base+0x260>
   3090c:	adds	r2, r2, #12
   30910:	ble	30928 <flatcc_json_parser_struct_as_root@@Base+0x25c>
   30914:	add	ip, r2, #20
   30918:	rsb	r2, r2, #12
   3091c:	lsl	r0, r1, ip
   30920:	lsr	r1, r1, r2
   30924:	b	3093c <flatcc_json_parser_struct_as_root@@Base+0x270>
   30928:	add	r2, r2, #20
   3092c:	rsble	ip, r2, #32
   30930:	lsl	r1, r1, r2
   30934:	orrle	r1, r1, r0, lsr ip
   30938:	lslle	r0, r0, r2
   3093c:	subs	r4, r4, r3
   30940:	addge	r1, r1, r4, lsl #20
   30944:	orrge	r1, r1, r5
   30948:	popge	{r4, r5, pc}
   3094c:	mvn	r4, r4
   30950:	subs	r4, r4, #31
   30954:	bge	30990 <flatcc_json_parser_struct_as_root@@Base+0x2c4>
   30958:	adds	r4, r4, #12
   3095c:	bgt	30978 <flatcc_json_parser_struct_as_root@@Base+0x2ac>
   30960:	add	r4, r4, #20
   30964:	rsb	r2, r4, #32
   30968:	lsr	r0, r0, r4
   3096c:	orr	r0, r0, r1, lsl r2
   30970:	orr	r1, r5, r1, lsr r4
   30974:	pop	{r4, r5, pc}
   30978:	rsb	r4, r4, #12
   3097c:	rsb	r2, r4, #32
   30980:	lsr	r0, r0, r2
   30984:	orr	r0, r0, r1, lsl r4
   30988:	mov	r1, r5
   3098c:	pop	{r4, r5, pc}
   30990:	lsr	r0, r1, r4
   30994:	mov	r1, r5
   30998:	pop	{r4, r5, pc}
   3099c:	teq	r4, #0
   309a0:	eor	r3, r3, #1048576	; 0x100000
   309a4:	eoreq	r1, r1, #1048576	; 0x100000
   309a8:	addeq	r4, r4, #1
   309ac:	subne	r5, r5, #1
   309b0:	b	3083c <flatcc_json_parser_struct_as_root@@Base+0x170>
   309b4:	mvns	ip, r4, asr #21
   309b8:	mvnsne	ip, r5, asr #21
   309bc:	beq	30a24 <flatcc_json_parser_struct_as_root@@Base+0x358>
   309c0:	teq	r4, r5
   309c4:	teqeq	r0, r2
   309c8:	beq	309dc <flatcc_json_parser_struct_as_root@@Base+0x310>
   309cc:	orrs	ip, r4, r0
   309d0:	moveq	r1, r3
   309d4:	moveq	r0, r2
   309d8:	pop	{r4, r5, pc}
   309dc:	teq	r1, r3
   309e0:	movne	r1, #0
   309e4:	movne	r0, #0
   309e8:	popne	{r4, r5, pc}
   309ec:	lsrs	ip, r4, #21
   309f0:	bne	30a04 <flatcc_json_parser_struct_as_root@@Base+0x338>
   309f4:	lsls	r0, r0, #1
   309f8:	adcs	r1, r1, r1
   309fc:	orrcs	r1, r1, #-2147483648	; 0x80000000
   30a00:	pop	{r4, r5, pc}
   30a04:	adds	r4, r4, #4194304	; 0x400000
   30a08:	addcc	r1, r1, #1048576	; 0x100000
   30a0c:	popcc	{r4, r5, pc}
   30a10:	and	r5, r1, #-2147483648	; 0x80000000
   30a14:	orr	r1, r5, #2130706432	; 0x7f000000
   30a18:	orr	r1, r1, #15728640	; 0xf00000
   30a1c:	mov	r0, #0
   30a20:	pop	{r4, r5, pc}
   30a24:	mvns	ip, r4, asr #21
   30a28:	movne	r1, r3
   30a2c:	movne	r0, r2
   30a30:	mvnseq	ip, r5, asr #21
   30a34:	movne	r3, r1
   30a38:	movne	r2, r0
   30a3c:	orrs	r4, r0, r1, lsl #12
   30a40:	orrseq	r5, r2, r3, lsl #12
   30a44:	teqeq	r1, r3
   30a48:	orrne	r1, r1, #524288	; 0x80000
   30a4c:	pop	{r4, r5, pc}
   30a50:	teq	r0, #0
   30a54:	moveq	r1, #0
   30a58:	bxeq	lr
   30a5c:	push	{r4, r5, lr}
   30a60:	mov	r4, #1024	; 0x400
   30a64:	add	r4, r4, #50	; 0x32
   30a68:	mov	r5, #0
   30a6c:	mov	r1, #0
   30a70:	b	308ec <flatcc_json_parser_struct_as_root@@Base+0x220>
   30a74:	teq	r0, #0
   30a78:	moveq	r1, #0
   30a7c:	bxeq	lr
   30a80:	push	{r4, r5, lr}
   30a84:	mov	r4, #1024	; 0x400
   30a88:	add	r4, r4, #50	; 0x32
   30a8c:	ands	r5, r0, #-2147483648	; 0x80000000
   30a90:	rsbmi	r0, r0, #0
   30a94:	mov	r1, #0
   30a98:	b	308ec <flatcc_json_parser_struct_as_root@@Base+0x220>
   30a9c:	lsls	r2, r0, #1
   30aa0:	asr	r1, r2, #3
   30aa4:	rrx	r1, r1
   30aa8:	lsl	r0, r2, #28
   30aac:	andsne	r3, r2, #-16777216	; 0xff000000
   30ab0:	teqne	r3, #-16777216	; 0xff000000
   30ab4:	eorne	r1, r1, #939524096	; 0x38000000
   30ab8:	bxne	lr
   30abc:	bics	r2, r2, #-16777216	; 0xff000000
   30ac0:	bxeq	lr
   30ac4:	teq	r3, #-16777216	; 0xff000000
   30ac8:	orreq	r1, r1, #524288	; 0x80000
   30acc:	bxeq	lr
   30ad0:	push	{r4, r5, lr}
   30ad4:	mov	r4, #896	; 0x380
   30ad8:	and	r5, r1, #-2147483648	; 0x80000000
   30adc:	bic	r1, r1, #-2147483648	; 0x80000000
   30ae0:	b	308ec <flatcc_json_parser_struct_as_root@@Base+0x220>
   30ae4:	orrs	r2, r0, r1
   30ae8:	bxeq	lr
   30aec:	push	{r4, r5, lr}
   30af0:	mov	r5, #0
   30af4:	b	30b14 <flatcc_json_parser_struct_as_root@@Base+0x448>
   30af8:	orrs	r2, r0, r1
   30afc:	bxeq	lr
   30b00:	push	{r4, r5, lr}
   30b04:	ands	r5, r1, #-2147483648	; 0x80000000
   30b08:	bpl	30b14 <flatcc_json_parser_struct_as_root@@Base+0x448>
   30b0c:	rsbs	r0, r0, #0
   30b10:	rsc	r1, r1, #0
   30b14:	mov	r4, #1024	; 0x400
   30b18:	add	r4, r4, #50	; 0x32
   30b1c:	lsrs	ip, r1, #22
   30b20:	beq	30890 <flatcc_json_parser_struct_as_root@@Base+0x1c4>
   30b24:	mov	r2, #3
   30b28:	lsrs	ip, ip, #3
   30b2c:	addne	r2, r2, #3
   30b30:	lsrs	ip, ip, #3
   30b34:	addne	r2, r2, #3
   30b38:	add	r2, r2, ip, lsr #3
   30b3c:	rsb	r3, r2, #32
   30b40:	lsl	ip, r0, r3
   30b44:	lsr	r0, r0, r2
   30b48:	orr	r0, r0, r1, lsl r3
   30b4c:	lsr	r1, r1, r2
   30b50:	add	r4, r4, r2
   30b54:	b	30890 <flatcc_json_parser_struct_as_root@@Base+0x1c4>
   30b58:	eor	r0, r0, #-2147483648	; 0x80000000
   30b5c:	b	30b64 <flatcc_json_parser_struct_as_root@@Base+0x498>
   30b60:	eor	r1, r1, #-2147483648	; 0x80000000
   30b64:	lsls	r2, r0, #1
   30b68:	lslsne	r3, r1, #1
   30b6c:	teqne	r2, r3
   30b70:	mvnsne	ip, r2, asr #24
   30b74:	mvnsne	ip, r3, asr #24
   30b78:	beq	30c70 <flatcc_json_parser_struct_as_root@@Base+0x5a4>
   30b7c:	lsr	r2, r2, #24
   30b80:	rsbs	r3, r2, r3, lsr #24
   30b84:	addgt	r2, r2, r3
   30b88:	eorgt	r1, r0, r1
   30b8c:	eorgt	r0, r1, r0
   30b90:	eorgt	r1, r0, r1
   30b94:	rsblt	r3, r3, #0
   30b98:	cmp	r3, #25
   30b9c:	bxhi	lr
   30ba0:	tst	r0, #-2147483648	; 0x80000000
   30ba4:	orr	r0, r0, #8388608	; 0x800000
   30ba8:	bic	r0, r0, #-16777216	; 0xff000000
   30bac:	rsbne	r0, r0, #0
   30bb0:	tst	r1, #-2147483648	; 0x80000000
   30bb4:	orr	r1, r1, #8388608	; 0x800000
   30bb8:	bic	r1, r1, #-16777216	; 0xff000000
   30bbc:	rsbne	r1, r1, #0
   30bc0:	teq	r2, r3
   30bc4:	beq	30c58 <flatcc_json_parser_struct_as_root@@Base+0x58c>
   30bc8:	sub	r2, r2, #1
   30bcc:	adds	r0, r0, r1, asr r3
   30bd0:	rsb	r3, r3, #32
   30bd4:	lsl	r1, r1, r3
   30bd8:	and	r3, r0, #-2147483648	; 0x80000000
   30bdc:	bpl	30be8 <flatcc_json_parser_struct_as_root@@Base+0x51c>
   30be0:	rsbs	r1, r1, #0
   30be4:	rsc	r0, r0, #0
   30be8:	cmp	r0, #8388608	; 0x800000
   30bec:	bcc	30c20 <flatcc_json_parser_struct_as_root@@Base+0x554>
   30bf0:	cmp	r0, #16777216	; 0x1000000
   30bf4:	bcc	30c0c <flatcc_json_parser_struct_as_root@@Base+0x540>
   30bf8:	lsrs	r0, r0, #1
   30bfc:	rrx	r1, r1
   30c00:	add	r2, r2, #1
   30c04:	cmp	r2, #254	; 0xfe
   30c08:	bcs	30cc4 <flatcc_json_parser_struct_as_root@@Base+0x5f8>
   30c0c:	cmp	r1, #-2147483648	; 0x80000000
   30c10:	adc	r0, r0, r2, lsl #23
   30c14:	biceq	r0, r0, #1
   30c18:	orr	r0, r0, r3
   30c1c:	bx	lr
   30c20:	lsls	r1, r1, #1
   30c24:	adc	r0, r0, r0
   30c28:	tst	r0, #8388608	; 0x800000
   30c2c:	sub	r2, r2, #1
   30c30:	bne	30c0c <flatcc_json_parser_struct_as_root@@Base+0x540>
   30c34:	clz	ip, r0
   30c38:	sub	ip, ip, #8
   30c3c:	subs	r2, r2, ip
   30c40:	lsl	r0, r0, ip
   30c44:	addge	r0, r0, r2, lsl #23
   30c48:	rsblt	r2, r2, #0
   30c4c:	orrge	r0, r0, r3
   30c50:	orrlt	r0, r3, r0, lsr r2
   30c54:	bx	lr
   30c58:	teq	r2, #0
   30c5c:	eor	r1, r1, #8388608	; 0x800000
   30c60:	eoreq	r0, r0, #8388608	; 0x800000
   30c64:	addeq	r2, r2, #1
   30c68:	subne	r3, r3, #1
   30c6c:	b	30bc8 <flatcc_json_parser_struct_as_root@@Base+0x4fc>
   30c70:	lsl	r3, r1, #1
   30c74:	mvns	ip, r2, asr #24
   30c78:	mvnsne	ip, r3, asr #24
   30c7c:	beq	30cd0 <flatcc_json_parser_struct_as_root@@Base+0x604>
   30c80:	teq	r2, r3
   30c84:	beq	30c94 <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   30c88:	teq	r2, #0
   30c8c:	moveq	r0, r1
   30c90:	bx	lr
   30c94:	teq	r0, r1
   30c98:	movne	r0, #0
   30c9c:	bxne	lr
   30ca0:	tst	r2, #-16777216	; 0xff000000
   30ca4:	bne	30cb4 <flatcc_json_parser_struct_as_root@@Base+0x5e8>
   30ca8:	lsls	r0, r0, #1
   30cac:	orrcs	r0, r0, #-2147483648	; 0x80000000
   30cb0:	bx	lr
   30cb4:	adds	r2, r2, #33554432	; 0x2000000
   30cb8:	addcc	r0, r0, #8388608	; 0x800000
   30cbc:	bxcc	lr
   30cc0:	and	r3, r0, #-2147483648	; 0x80000000
   30cc4:	orr	r0, r3, #2130706432	; 0x7f000000
   30cc8:	orr	r0, r0, #8388608	; 0x800000
   30ccc:	bx	lr
   30cd0:	mvns	r2, r2, asr #24
   30cd4:	movne	r0, r1
   30cd8:	mvnseq	r3, r3, asr #24
   30cdc:	movne	r1, r0
   30ce0:	lsls	r2, r0, #9
   30ce4:	lslseq	r3, r1, #9
   30ce8:	teqeq	r0, r1
   30cec:	orrne	r0, r0, #4194304	; 0x400000
   30cf0:	bx	lr
   30cf4:	mov	r3, #0
   30cf8:	b	30d04 <flatcc_json_parser_struct_as_root@@Base+0x638>
   30cfc:	ands	r3, r0, #-2147483648	; 0x80000000
   30d00:	rsbmi	r0, r0, #0
   30d04:	movs	ip, r0
   30d08:	bxeq	lr
   30d0c:	orr	r3, r3, #1258291200	; 0x4b000000
   30d10:	mov	r1, r0
   30d14:	mov	r0, #0
   30d18:	b	30d5c <flatcc_json_parser_struct_as_root@@Base+0x690>
   30d1c:	orrs	r2, r0, r1
   30d20:	bxeq	lr
   30d24:	mov	r3, #0
   30d28:	b	30d44 <flatcc_json_parser_struct_as_root@@Base+0x678>
   30d2c:	orrs	r2, r0, r1
   30d30:	bxeq	lr
   30d34:	ands	r3, r1, #-2147483648	; 0x80000000
   30d38:	bpl	30d44 <flatcc_json_parser_struct_as_root@@Base+0x678>
   30d3c:	rsbs	r0, r0, #0
   30d40:	rsc	r1, r1, #0
   30d44:	movs	ip, r1
   30d48:	moveq	ip, r0
   30d4c:	moveq	r1, r0
   30d50:	moveq	r0, #0
   30d54:	orr	r3, r3, #1526726656	; 0x5b000000
   30d58:	subeq	r3, r3, #268435456	; 0x10000000
   30d5c:	sub	r3, r3, #8388608	; 0x800000
   30d60:	clz	r2, ip
   30d64:	subs	r2, r2, #8
   30d68:	sub	r3, r3, r2, lsl #23
   30d6c:	blt	30d8c <flatcc_json_parser_struct_as_root@@Base+0x6c0>
   30d70:	add	r3, r3, r1, lsl r2
   30d74:	lsl	ip, r0, r2
   30d78:	rsb	r2, r2, #32
   30d7c:	cmp	ip, #-2147483648	; 0x80000000
   30d80:	adc	r0, r3, r0, lsr r2
   30d84:	biceq	r0, r0, #1
   30d88:	bx	lr
   30d8c:	add	r2, r2, #32
   30d90:	lsl	ip, r1, r2
   30d94:	rsb	r2, r2, #32
   30d98:	orrs	r0, r0, ip, lsl #1
   30d9c:	adc	r0, r3, r1, lsr r2
   30da0:	biceq	r0, r0, ip, lsr #31
   30da4:	bx	lr

00030da8 <__libc_csu_init@@Base>:
   30da8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   30dac:	mov	r7, r0
   30db0:	ldr	r6, [pc, #72]	; 30e00 <__libc_csu_init@@Base+0x58>
   30db4:	ldr	r5, [pc, #72]	; 30e04 <__libc_csu_init@@Base+0x5c>
   30db8:	add	r6, pc, r6
   30dbc:	add	r5, pc, r5
   30dc0:	sub	r6, r6, r5
   30dc4:	mov	r8, r1
   30dc8:	mov	r9, r2
   30dcc:	bl	12a78 <fopen@plt-0x20>
   30dd0:	asrs	r6, r6, #2
   30dd4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   30dd8:	mov	r4, #0
   30ddc:	add	r4, r4, #1
   30de0:	ldr	r3, [r5], #4
   30de4:	mov	r2, r9
   30de8:	mov	r1, r8
   30dec:	mov	r0, r7
   30df0:	blx	r3
   30df4:	cmp	r6, r4
   30df8:	bne	30ddc <__libc_csu_init@@Base+0x34>
   30dfc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   30e00:	andeq	r3, r1, ip, asr #2
   30e04:	andeq	r3, r1, r4, asr #2

00030e08 <__libc_csu_fini@@Base>:
   30e08:	bx	lr

Disassembly of section .fini:

00030e0c <.fini>:
   30e0c:	push	{r3, lr}
   30e10:	pop	{r3, pc}
