
../repos/charybdis/extensions/.libs/example_module.so:     file format elf32-littlearm


Disassembly of section .init:

00000498 <_init>:
 498:	push	{r3, lr}
 49c:	bl	4f4 <call_weak_fn>
 4a0:	pop	{r3, pc}

Disassembly of section .plt:

000004a4 <.plt>:
 4a4:	push	{lr}		; (str lr, [sp, #-4]!)
 4a8:	ldr	lr, [pc, #4]	; 4b4 <.plt+0x10>
 4ac:	add	lr, pc, lr
 4b0:	ldr	pc, [lr, #8]!
 4b4:	.word	0x00010b4c

000004b8 <__cxa_finalize@plt>:
 4b8:	add	ip, pc, #0, 12
 4bc:	add	ip, ip, #16, 20	; 0x10000
 4c0:	ldr	pc, [ip, #2892]!	; 0xb4c

000004c4 <sendto_realops_snomask@plt>:
 4c4:	add	ip, pc, #0, 12
 4c8:	add	ip, ip, #16, 20	; 0x10000
 4cc:	ldr	pc, [ip, #2884]!	; 0xb44

000004d0 <__gmon_start__@plt>:
 4d0:	add	ip, pc, #0, 12
 4d4:	add	ip, ip, #16, 20	; 0x10000
 4d8:	ldr	pc, [ip, #2876]!	; 0xb3c

000004dc <sendto_one_notice@plt>:
 4dc:	add	ip, pc, #0, 12
 4e0:	add	ip, ip, #16, 20	; 0x10000
 4e4:	ldr	pc, [ip, #2868]!	; 0xb34

000004e8 <call_hook@plt>:
 4e8:	add	ip, pc, #0, 12
 4ec:	add	ip, ip, #16, 20	; 0x10000
 4f0:	ldr	pc, [ip, #2860]!	; 0xb2c

Disassembly of section .text:

000004f4 <call_weak_fn>:
 4f4:	ldr	r3, [pc, #20]	; 510 <call_weak_fn+0x1c>
 4f8:	ldr	r2, [pc, #20]	; 514 <call_weak_fn+0x20>
 4fc:	add	r3, pc, r3
 500:	ldr	r2, [r3, r2]
 504:	cmp	r2, #0
 508:	bxeq	lr
 50c:	b	4d0 <__gmon_start__@plt>
 510:	.word	0x00010afc
 514:	.word	0x0000002c

00000518 <deregister_tm_clones>:
 518:	ldr	r3, [pc, #52]	; 554 <deregister_tm_clones+0x3c>
 51c:	ldr	r0, [pc, #52]	; 558 <deregister_tm_clones+0x40>
 520:	add	r3, pc, r3
 524:	add	r0, pc, r0
 528:	add	r3, r3, #3
 52c:	sub	r3, r3, r0
 530:	cmp	r3, #6
 534:	ldr	r3, [pc, #32]	; 55c <deregister_tm_clones+0x44>
 538:	add	r3, pc, r3
 53c:	bxls	lr
 540:	ldr	r2, [pc, #24]	; 560 <deregister_tm_clones+0x48>
 544:	ldr	r3, [r3, r2]
 548:	cmp	r3, #0
 54c:	bxeq	lr
 550:	bx	r3
 554:	.word	0x00010be0
 558:	.word	0x00010bdc
 55c:	.word	0x00010ac0
 560:	.word	0x00000028

00000564 <register_tm_clones>:
 564:	ldr	r1, [pc, #56]	; 5a4 <register_tm_clones+0x40>
 568:	ldr	r0, [pc, #56]	; 5a8 <register_tm_clones+0x44>
 56c:	add	r1, pc, r1
 570:	add	r0, pc, r0
 574:	sub	r1, r1, r0
 578:	ldr	r3, [pc, #44]	; 5ac <register_tm_clones+0x48>
 57c:	asr	r1, r1, #2
 580:	add	r3, pc, r3
 584:	add	r1, r1, r1, lsr #31
 588:	asrs	r1, r1, #1
 58c:	bxeq	lr
 590:	ldr	r2, [pc, #24]	; 5b0 <register_tm_clones+0x4c>
 594:	ldr	r3, [r3, r2]
 598:	cmp	r3, #0
 59c:	bxeq	lr
 5a0:	bx	r3
 5a4:	.word	0x00010b94
 5a8:	.word	0x00010b90
 5ac:	.word	0x00010a78
 5b0:	.word	0x00000034

000005b4 <__do_global_dtors_aux>:
 5b4:	ldr	r3, [pc, #76]	; 608 <__do_global_dtors_aux+0x54>
 5b8:	ldr	r2, [pc, #76]	; 60c <__do_global_dtors_aux+0x58>
 5bc:	add	r3, pc, r3
 5c0:	add	r2, pc, r2
 5c4:	ldrb	r3, [r3]
 5c8:	cmp	r3, #0
 5cc:	bxne	lr
 5d0:	ldr	r3, [pc, #56]	; 610 <__do_global_dtors_aux+0x5c>
 5d4:	push	{r4, lr}
 5d8:	ldr	r3, [r2, r3]
 5dc:	cmp	r3, #0
 5e0:	beq	5f0 <__do_global_dtors_aux+0x3c>
 5e4:	ldr	r3, [pc, #40]	; 614 <__do_global_dtors_aux+0x60>
 5e8:	ldr	r0, [pc, r3]
 5ec:	bl	4b8 <__cxa_finalize@plt>
 5f0:	bl	518 <deregister_tm_clones>
 5f4:	ldr	r3, [pc, #28]	; 618 <__do_global_dtors_aux+0x64>
 5f8:	mov	r2, #1
 5fc:	add	r3, pc, r3
 600:	strb	r2, [r3]
 604:	pop	{r4, pc}
 608:	.word	0x00010b44
 60c:	.word	0x00010a38
 610:	.word	0x00000024
 614:	.word	0x00010a48
 618:	.word	0x00010b04

0000061c <frame_dummy>:
 61c:	ldr	r0, [pc, #56]	; 65c <frame_dummy+0x40>
 620:	ldr	r3, [pc, #56]	; 660 <frame_dummy+0x44>
 624:	add	r0, pc, r0
 628:	ldr	r2, [r0]
 62c:	add	r3, pc, r3
 630:	cmp	r2, #0
 634:	bne	63c <frame_dummy+0x20>
 638:	b	564 <register_tm_clones>
 63c:	ldr	r2, [pc, #32]	; 664 <frame_dummy+0x48>
 640:	ldr	r3, [r3, r2]
 644:	cmp	r3, #0
 648:	beq	638 <frame_dummy+0x1c>
 64c:	push	{r4, lr}
 650:	blx	r3
 654:	pop	{r4, lr}
 658:	b	564 <register_tm_clones>
 65c:	.word	0x000108d0
 660:	.word	0x000109cc
 664:	.word	0x00000030

00000668 <modinit>:
 668:	mov	r0, #0
 66c:	bx	lr

00000670 <moddeinit>:
 670:	bx	lr

00000674 <moper_test>:
 674:	push	{r4, lr}
 678:	mov	r0, r2
 67c:	cmp	r3, #1
 680:	ble	69c <moper_test+0x28>
 684:	ldr	r3, [sp, #8]
 688:	ldr	r2, [r3, #4]
 68c:	ldr	r1, [pc, #24]	; 6ac <moper_test+0x38>
 690:	add	r1, pc, r1
 694:	bl	4dc <sendto_one_notice@plt>
 698:	pop	{r4, pc}
 69c:	ldr	r1, [pc, #12]	; 6b0 <moper_test+0x3c>
 6a0:	add	r1, pc, r1
 6a4:	bl	4dc <sendto_one_notice@plt>
 6a8:	pop	{r4, pc}
 6ac:	.word	0x000001e4
 6b0:	.word	0x000001a4

000006b4 <mserver_test>:
 6b4:	push	{r4, lr}
 6b8:	mov	r0, r2
 6bc:	cmp	r3, #1
 6c0:	ble	6dc <mserver_test+0x28>
 6c4:	ldr	r3, [sp, #8]
 6c8:	ldr	r2, [r3, #4]
 6cc:	ldr	r1, [pc, #24]	; 6ec <mserver_test+0x38>
 6d0:	add	r1, pc, r1
 6d4:	bl	4dc <sendto_one_notice@plt>
 6d8:	pop	{r4, pc}
 6dc:	ldr	r1, [pc, #12]	; 6f0 <mserver_test+0x3c>
 6e0:	add	r1, pc, r1
 6e4:	bl	4dc <sendto_one_notice@plt>
 6e8:	pop	{r4, pc}
 6ec:	.word	0x00000200
 6f0:	.word	0x000001c4

000006f4 <mrclient_test>:
 6f4:	push	{r4, lr}
 6f8:	mov	r0, r2
 6fc:	cmp	r3, #1
 700:	ble	71c <mrclient_test+0x28>
 704:	ldr	r3, [sp, #8]
 708:	ldr	r2, [r3, #4]
 70c:	ldr	r1, [pc, #24]	; 72c <mrclient_test+0x38>
 710:	add	r1, pc, r1
 714:	bl	4dc <sendto_one_notice@plt>
 718:	pop	{r4, pc}
 71c:	ldr	r1, [pc, #12]	; 730 <mrclient_test+0x3c>
 720:	add	r1, pc, r1
 724:	bl	4dc <sendto_one_notice@plt>
 728:	pop	{r4, pc}
 72c:	.word	0x00000220
 730:	.word	0x000001dc

00000734 <mclient_test>:
 734:	push	{r4, lr}
 738:	mov	r0, r2
 73c:	ldr	r4, [pc, #68]	; 788 <mclient_test+0x54>
 740:	add	r4, pc, r4
 744:	cmp	r3, #1
 748:	ble	778 <mclient_test+0x44>
 74c:	ldr	r3, [sp, #8]
 750:	ldr	r2, [r3, #4]
 754:	ldr	r1, [pc, #48]	; 78c <mclient_test+0x58>
 758:	add	r1, pc, r1
 75c:	bl	4dc <sendto_one_notice@plt>
 760:	ldr	r3, [pc, #40]	; 790 <mclient_test+0x5c>
 764:	ldr	r3, [r4, r3]
 768:	mov	r1, #0
 76c:	ldr	r0, [r3]
 770:	bl	4e8 <call_hook@plt>
 774:	pop	{r4, pc}
 778:	ldr	r1, [pc, #20]	; 794 <mclient_test+0x60>
 77c:	add	r1, pc, r1
 780:	bl	4dc <sendto_one_notice@plt>
 784:	b	760 <mclient_test+0x2c>
 788:	.word	0x000108b8
 78c:	.word	0x0000023c
 790:	.word	0x00000020
 794:	.word	0x000001e8

00000798 <munreg_test>:
 798:	push	{r4, lr}
 79c:	mov	r0, r2
 7a0:	ldr	r4, [pc, #68]	; 7ec <munreg_test+0x54>
 7a4:	add	r4, pc, r4
 7a8:	cmp	r3, #1
 7ac:	ble	7dc <munreg_test+0x44>
 7b0:	ldr	r3, [sp, #8]
 7b4:	ldr	r2, [r3, #4]
 7b8:	ldr	r1, [pc, #48]	; 7f0 <munreg_test+0x58>
 7bc:	add	r1, pc, r1
 7c0:	bl	4dc <sendto_one_notice@plt>
 7c4:	ldr	r3, [pc, #40]	; 7f4 <munreg_test+0x5c>
 7c8:	ldr	r3, [r4, r3]
 7cc:	mov	r1, #0
 7d0:	ldr	r0, [r3]
 7d4:	bl	4e8 <call_hook@plt>
 7d8:	pop	{r4, pc}
 7dc:	ldr	r1, [pc, #20]	; 7f8 <munreg_test+0x60>
 7e0:	add	r1, pc, r1
 7e4:	bl	4dc <sendto_one_notice@plt>
 7e8:	b	7c4 <munreg_test+0x2c>
 7ec:	.word	0x00010854
 7f0:	.word	0x00000238
 7f4:	.word	0x00000020
 7f8:	.word	0x000001e4

000007fc <show_example_hook>:
 7fc:	push	{r4, lr}
 800:	ldr	r2, [pc, #16]	; 818 <show_example_hook+0x1c>
 804:	add	r2, pc, r2
 808:	mov	r1, #0
 80c:	mov	r0, #256	; 0x100
 810:	bl	4c4 <sendto_realops_snomask@plt>
 814:	pop	{r4, pc}
 818:	.word	0x00000220

Disassembly of section .fini:

0000081c <_fini>:
 81c:	push	{r3, lr}
 820:	pop	{r3, pc}
