
../repos/myhtml/libmyhtml.so.4.0.6:     file format elf32-littlearm


Disassembly of section .init:

0000fb4c <.init>:
    fb4c:	push	{r3, lr}
    fb50:	bl	11048 <mythread_init@plt+0xc>
    fb54:	pop	{r3, pc}

Disassembly of section .plt:

0000fb58 <pthread_mutex_unlock@plt-0x14>:
    fb58:	push	{lr}		; (str lr, [sp, #-4]!)
    fb5c:	ldr	lr, [pc, #4]	; fb68 <pthread_mutex_unlock@plt-0x4>
    fb60:	add	lr, pc, lr
    fb64:	ldr	pc, [lr, #8]!
    fb68:	mulseq	r0, r8, r4

0000fb6c <pthread_mutex_unlock@plt>:
    fb6c:	add	ip, pc, #1048576	; 0x100000
    fb70:	add	ip, ip, #0, 20
    fb74:	ldr	pc, [ip, #1176]!	; 0x498

0000fb78 <myhtml_get_nodes_by_attribute_value_recursion@plt>:
    fb78:	add	ip, pc, #1048576	; 0x100000
    fb7c:	add	ip, ip, #0, 20
    fb80:	ldr	pc, [ip, #1168]!	; 0x490

0000fb84 <mycore_realloc@plt>:
    fb84:	add	ip, pc, #1048576	; 0x100000
    fb88:	add	ip, ip, #0, 20
    fb8c:	ldr	pc, [ip, #1160]!	; 0x488

0000fb90 <calloc@plt>:
    fb90:	add	ip, pc, #1048576	; 0x100000
    fb94:	add	ip, ip, #0, 20
    fb98:	ldr	pc, [ip, #1152]!	; 0x480

0000fb9c <mycore_strcmp@plt>:
    fb9c:	add	ip, pc, #1048576	; 0x100000
    fba0:	add	ip, ip, #0, 20
    fba4:	ldr	pc, [ip, #1144]!	; 0x478

0000fba8 <myhtml_tree_node_insert_root@plt>:
    fba8:	add	ip, pc, #1048576	; 0x100000
    fbac:	add	ip, ip, #0, 20
    fbb0:	ldr	pc, [ip, #1136]!	; 0x470

0000fbb4 <mythread_queue_list_entry_delete@plt>:
    fbb4:	add	ip, pc, #1048576	; 0x100000
    fbb8:	add	ip, ip, #0, 20
    fbbc:	ldr	pc, [ip, #1128]!	; 0x468

0000fbc0 <myencoding_string_append_chunk@plt>:
    fbc0:	add	ip, pc, #1048576	; 0x100000
    fbc4:	add	ip, ip, #0, 20
    fbc8:	ldr	pc, [ip, #1120]!	; 0x460

0000fbcc <myhtml_token_release_and_check_doctype_attributes@plt>:
    fbcc:	add	ip, pc, #1048576	; 0x100000
    fbd0:	add	ip, ip, #0, 20
    fbd4:	ldr	pc, [ip, #1112]!	; 0x458

0000fbd8 <myhtml_token_doctype_check_xhtml_1_1@plt>:
    fbd8:	add	ip, pc, #1048576	; 0x100000
    fbdc:	add	ip, ip, #0, 20
    fbe0:	ldr	pc, [ip, #1104]!	; 0x450

0000fbe4 <myencoding_detect_unicode@plt>:
    fbe4:	add	ip, pc, #1048576	; 0x100000
    fbe8:	add	ip, ip, #0, 20
    fbec:	ldr	pc, [ip, #1096]!	; 0x448

0000fbf0 <myhtml_tree_element_in_scope_by_node@plt>:
    fbf0:	add	ip, pc, #1048576	; 0x100000
    fbf4:	add	ip, ip, #0, 20
    fbf8:	ldr	pc, [ip, #1088]!	; 0x440

0000fbfc <mythread_nanosleep_clean@plt>:
    fbfc:	add	ip, pc, #1048576	; 0x100000
    fc00:	add	ip, ip, #0, 20
    fc04:	ldr	pc, [ip, #1080]!	; 0x438

0000fc08 <myhtml_tree_node_insert_html_element@plt>:
    fc08:	add	ip, pc, #1048576	; 0x100000
    fc0c:	add	ip, ip, #0, 20
    fc10:	ldr	pc, [ip, #1072]!	; 0x430

0000fc14 <myhtml_tree_token_list_destroy@plt>:
    fc14:	add	ip, pc, #1048576	; 0x100000
    fc18:	add	ip, ip, #0, 20
    fc1c:	ldr	pc, [ip, #1064]!	; 0x428

0000fc20 <mcobject_async_init@plt>:
    fc20:	add	ip, pc, #1048576	; 0x100000
    fc24:	add	ip, ip, #0, 20
    fc28:	ldr	pc, [ip, #1056]!	; 0x420

0000fc2c <myhtml_tree_temp_tag_name_append@plt>:
    fc2c:	add	ip, pc, #1048576	; 0x100000
    fc30:	add	ip, ip, #0, 20
    fc34:	ldr	pc, [ip, #1048]!	; 0x418

0000fc38 <myhtml_tokenizer_fragment_init@plt>:
    fc38:	add	ip, pc, #1048576	; 0x100000
    fc3c:	add	ip, ip, #0, 20
    fc40:	ldr	pc, [ip, #1040]!	; 0x410

0000fc44 <mythread_nanosleep_create@plt>:
    fc44:	add	ip, pc, #1048576	; 0x100000
    fc48:	add	ip, ip, #0, 20
    fc4c:	ldr	pc, [ip, #1032]!	; 0x408

0000fc50 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>:
    fc50:	add	ip, pc, #1048576	; 0x100000
    fc54:	add	ip, ip, #0, 20
    fc58:	ldr	pc, [ip, #1024]!	; 0x400

0000fc5c <myhtml_tokenizer_state_init@plt>:
    fc5c:	add	ip, pc, #1048576	; 0x100000
    fc60:	add	ip, ip, #0, 20
    fc64:	ldr	pc, [ip, #1016]!	; 0x3f8

0000fc68 <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>:
    fc68:	add	ip, pc, #1048576	; 0x100000
    fc6c:	add	ip, ip, #0, 20
    fc70:	ldr	pc, [ip, #1008]!	; 0x3f0

0000fc74 <mycore_ustrcasecmp_without_checks_by_secondary@plt>:
    fc74:	add	ip, pc, #1048576	; 0x100000
    fc78:	add	ip, ip, #0, 20
    fc7c:	ldr	pc, [ip, #1000]!	; 0x3e8

0000fc80 <myhtml_tree_wait_for_last_done_token@plt>:
    fc80:	add	ip, pc, #1048576	; 0x100000
    fc84:	add	ip, ip, #0, 20
    fc88:	ldr	pc, [ip, #992]!	; 0x3e0

0000fc8c <mythread_queue_get_prev_node@plt>:
    fc8c:	add	ip, pc, #1048576	; 0x100000
    fc90:	add	ip, ip, #0, 20
    fc94:	ldr	pc, [ip, #984]!	; 0x3d8

0000fc98 <myhtml_insertion_mode_in_foreign_content_end_other@plt>:
    fc98:	add	ip, pc, #1048576	; 0x100000
    fc9c:	add	ip, ip, #0, 20
    fca0:	ldr	pc, [ip, #976]!	; 0x3d0

0000fca4 <setbuf@plt>:
    fca4:	add	ip, pc, #1048576	; 0x100000
    fca8:	add	ip, ip, #0, 20
    fcac:	ldr	pc, [ip, #968]!	; 0x3c8

0000fcb0 <mycore_utils_avl_tree_find_min@plt>:
    fcb0:	add	ip, pc, #1048576	; 0x100000
    fcb4:	add	ip, ip, #0, 20
    fcb8:	ldr	pc, [ip, #960]!	; 0x3c0

0000fcbc <myhtml_insertion_mode_in_body_other_end_tag@plt>:
    fcbc:	add	ip, pc, #1048576	; 0x100000
    fcc0:	add	ip, ip, #0, 20
    fcc4:	ldr	pc, [ip, #952]!	; 0x3b8

0000fcc8 <myhtml_stream_buffer_destroy@plt>:
    fcc8:	add	ip, pc, #1048576	; 0x100000
    fccc:	add	ip, ip, #0, 20
    fcd0:	ldr	pc, [ip, #944]!	; 0x3b0

0000fcd4 <myhtml_token_attr_match_case@plt>:
    fcd4:	add	ip, pc, #1048576	; 0x100000
    fcd8:	add	ip, ip, #0, 20
    fcdc:	ldr	pc, [ip, #936]!	; 0x3a8

0000fce0 <__cxa_finalize@plt>:
    fce0:	add	ip, pc, #1048576	; 0x100000
    fce4:	add	ip, ip, #0, 20
    fce8:	ldr	pc, [ip, #928]!	; 0x3a0

0000fcec <mycore_utils_avl_tree_node_rotate_right@plt>:
    fcec:	add	ip, pc, #1048576	; 0x100000
    fcf0:	add	ip, ip, #0, 20
    fcf4:	ldr	pc, [ip, #920]!	; 0x398

0000fcf8 <mcobject_async_create@plt>:
    fcf8:	add	ip, pc, #1048576	; 0x100000
    fcfc:	add	ip, ip, #0, 20
    fd00:	ldr	pc, [ip, #912]!	; 0x390

0000fd04 <mythread_queue_clean@plt>:
    fd04:	add	ip, pc, #1048576	; 0x100000
    fd08:	add	ip, ip, #0, 20
    fd0c:	ldr	pc, [ip, #904]!	; 0x388

0000fd10 <mcsync_mutex_destroy@plt>:
    fd10:	add	ip, pc, #1048576	; 0x100000
    fd14:	add	ip, ip, #0, 20
    fd18:	ldr	pc, [ip, #896]!	; 0x380

0000fd1c <myhtml_parser_worker@plt>:
    fd1c:	add	ip, pc, #1048576	; 0x100000
    fd20:	add	ip, ip, #0, 20
    fd24:	ldr	pc, [ip, #888]!	; 0x378

0000fd28 <mythread_thread_create@plt>:
    fd28:	add	ip, pc, #1048576	; 0x100000
    fd2c:	add	ip, ip, #0, 20
    fd30:	ldr	pc, [ip, #880]!	; 0x370

0000fd34 <mcsync_create@plt>:
    fd34:	add	ip, pc, #1048576	; 0x100000
    fd38:	add	ip, ip, #0, 20
    fd3c:	ldr	pc, [ip, #872]!	; 0x368

0000fd40 <myhtml_insertion_mode_in_template@plt>:
    fd40:	add	ip, pc, #1048576	; 0x100000
    fd44:	add	ip, ip, #0, 20
    fd48:	ldr	pc, [ip, #864]!	; 0x360

0000fd4c <mycore_utils_avl_tree_node_balance_factor@plt>:
    fd4c:	add	ip, pc, #1048576	; 0x100000
    fd50:	add	ip, ip, #0, 20
    fd54:	ldr	pc, [ip, #856]!	; 0x358

0000fd58 <fopen@plt>:
    fd58:	add	ip, pc, #1048576	; 0x100000
    fd5c:	add	ip, ip, #0, 20
    fd60:	ldr	pc, [ip, #848]!	; 0x350

0000fd64 <mcobject_async_mem_malloc@plt>:
    fd64:	add	ip, pc, #1048576	; 0x100000
    fd68:	add	ip, ip, #0, 20
    fd6c:	ldr	pc, [ip, #840]!	; 0x348

0000fd70 <mcobject_destroy@plt>:
    fd70:	add	ip, pc, #1048576	; 0x100000
    fd74:	add	ip, ip, #0, 20
    fd78:	ldr	pc, [ip, #832]!	; 0x340

0000fd7c <pthread_attr_destroy@plt>:
    fd7c:	add	ip, pc, #1048576	; 0x100000
    fd80:	add	ip, ip, #0, 20
    fd84:	ldr	pc, [ip, #824]!	; 0x338

0000fd88 <myhtml_clean@plt>:
    fd88:	add	ip, pc, #1048576	; 0x100000
    fd8c:	add	ip, ip, #0, 20
    fd90:	ldr	pc, [ip, #816]!	; 0x330

0000fd94 <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>:
    fd94:	add	ip, pc, #1048576	; 0x100000
    fd98:	add	ip, ip, #0, 20
    fd9c:	ldr	pc, [ip, #808]!	; 0x328

0000fda0 <pthread_mutex_destroy@plt>:
    fda0:	add	ip, pc, #1048576	; 0x100000
    fda4:	add	ip, ip, #0, 20
    fda8:	ldr	pc, [ip, #800]!	; 0x320

0000fdac <fflush@plt>:
    fdac:	add	ip, pc, #1048576	; 0x100000
    fdb0:	add	ip, ip, #0, 20
    fdb4:	ldr	pc, [ip, #792]!	; 0x318

0000fdb8 <mythread_create@plt>:
    fdb8:	add	ip, pc, #1048576	; 0x100000
    fdbc:	add	ip, ip, #0, 20
    fdc0:	ldr	pc, [ip, #784]!	; 0x310

0000fdc4 <myhtml_insertion_mode_in_foreign_content@plt>:
    fdc4:	add	ip, pc, #1048576	; 0x100000
    fdc8:	add	ip, ip, #0, 20
    fdcc:	ldr	pc, [ip, #776]!	; 0x308

0000fdd0 <myhtml_tree_generate_all_implied_end_tags@plt>:
    fdd0:	add	ip, pc, #1048576	; 0x100000
    fdd4:	add	ip, ip, #0, 20
    fdd8:	ldr	pc, [ip, #768]!	; 0x300

0000fddc <myencoding_string_append_lowercase_ascii@plt>:
    fddc:	add	ip, pc, #1048576	; 0x100000
    fde0:	add	ip, ip, #0, 20
    fde4:	ldr	pc, [ip, #760]!	; 0x2f8

0000fde8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@plt>:
    fde8:	add	ip, pc, #1048576	; 0x100000
    fdec:	add	ip, ip, #0, 20
    fdf0:	ldr	pc, [ip, #752]!	; 0x2f0

0000fdf4 <myhread_increase_id_by_entry_id@plt>:
    fdf4:	add	ip, pc, #1048576	; 0x100000
    fdf8:	add	ip, ip, #0, 20
    fdfc:	ldr	pc, [ip, #744]!	; 0x2e8

0000fe00 <myhtml_tree_incomming_buffer_make_data@plt>:
    fe00:	add	ip, pc, #1048576	; 0x100000
    fe04:	add	ip, ip, #0, 20
    fe08:	ldr	pc, [ip, #736]!	; 0x2e0

0000fe0c <_myhtml_token_create_copy_srt@plt>:
    fe0c:	add	ip, pc, #1048576	; 0x100000
    fe10:	add	ip, ip, #0, 20
    fe14:	ldr	pc, [ip, #728]!	; 0x2d8

0000fe18 <memmove@plt>:
    fe18:	add	ip, pc, #1048576	; 0x100000
    fe1c:	add	ip, ip, #0, 20
    fe20:	ldr	pc, [ip, #720]!	; 0x2d0

0000fe24 <mythread_thread_attr_init@plt>:
    fe24:	add	ip, pc, #1048576	; 0x100000
    fe28:	add	ip, ip, #0, 20
    fe2c:	ldr	pc, [ip, #712]!	; 0x2c8

0000fe30 <myhtml_insertion_mode_in_foreign_content_start_other@plt>:
    fe30:	add	ip, pc, #1048576	; 0x100000
    fe34:	add	ip, ip, #0, 20
    fe38:	ldr	pc, [ip, #704]!	; 0x2c0

0000fe3c <myhtml_rules_tree_dispatcher@plt>:
    fe3c:	add	ip, pc, #1048576	; 0x100000
    fe40:	add	ip, ip, #0, 20
    fe44:	ldr	pc, [ip, #696]!	; 0x2b8

0000fe48 <myhtml_get_nodes_by_attribute_key_recursion@plt>:
    fe48:	add	ip, pc, #1048576	; 0x100000
    fe4c:	add	ip, ip, #0, 20
    fe50:	ldr	pc, [ip, #688]!	; 0x2b0

0000fe54 <free@plt>:
    fe54:	add	ip, pc, #1048576	; 0x100000
    fe58:	add	ip, ip, #0, 20
    fe5c:	ldr	pc, [ip, #680]!	; 0x2a8

0000fe60 <mchar_async_cache_malloc@plt>:
    fe60:	add	ip, pc, #1048576	; 0x100000
    fe64:	add	ip, ip, #0, 20
    fe68:	ldr	pc, [ip, #672]!	; 0x2a0

0000fe6c <mythread_function_see_opt@plt>:
    fe6c:	add	ip, pc, #1048576	; 0x100000
    fe70:	add	ip, ip, #0, 20
    fe74:	ldr	pc, [ip, #664]!	; 0x298

0000fe78 <myencoding_detect_utf_16@plt>:
    fe78:	add	ip, pc, #1048576	; 0x100000
    fe7c:	add	ip, ip, #0, 20
    fe80:	ldr	pc, [ip, #656]!	; 0x290

0000fe84 <mcobject_chunk_malloc@plt>:
    fe84:	add	ip, pc, #1048576	; 0x100000
    fe88:	add	ip, ip, #0, 20
    fe8c:	ldr	pc, [ip, #648]!	; 0x288

0000fe90 <myhtml_insertion_fix_split_for_text_begin_ws@plt>:
    fe90:	add	ip, pc, #1048576	; 0x100000
    fe94:	add	ip, ip, #0, 20
    fe98:	ldr	pc, [ip, #640]!	; 0x280

0000fe9c <mcsync_mutex_unlock@plt>:
    fe9c:	add	ip, pc, #1048576	; 0x100000
    fea0:	add	ip, ip, #0, 20
    fea4:	ldr	pc, [ip, #632]!	; 0x278

0000fea8 <pthread_mutex_lock@plt>:
    fea8:	add	ip, pc, #1048576	; 0x100000
    feac:	add	ip, ip, #0, 20
    feb0:	ldr	pc, [ip, #624]!	; 0x270

0000feb4 <mycore_calloc@plt>:
    feb4:	add	ip, pc, #1048576	; 0x100000
    feb8:	add	ip, ip, #0, 20
    febc:	ldr	pc, [ip, #616]!	; 0x268

0000fec0 <nanosleep@plt>:
    fec0:	add	ip, pc, #1048576	; 0x100000
    fec4:	add	ip, ip, #0, 20
    fec8:	ldr	pc, [ip, #608]!	; 0x260

0000fecc <myhtml_token_node_clone@plt>:
    fecc:	add	ip, pc, #1048576	; 0x100000
    fed0:	add	ip, ip, #0, 20
    fed4:	ldr	pc, [ip, #600]!	; 0x258

0000fed8 <myhtml_get_nodes_by_tag_id_in_scope@plt>:
    fed8:	add	ip, pc, #1048576	; 0x100000
    fedc:	add	ip, ip, #0, 20
    fee0:	ldr	pc, [ip, #592]!	; 0x250

0000fee4 <mchar_sync_chunk_insert_after@plt>:
    fee4:	add	ip, pc, #1048576	; 0x100000
    fee8:	add	ip, ip, #0, 20
    feec:	ldr	pc, [ip, #584]!	; 0x248

0000fef0 <ferror@plt>:
    fef0:	add	ip, pc, #1048576	; 0x100000
    fef4:	add	ip, ip, #0, 20
    fef8:	ldr	pc, [ip, #576]!	; 0x240

0000fefc <memcpy@plt>:
    fefc:	add	ip, pc, #1048576	; 0x100000
    ff00:	add	ip, ip, #0, 20
    ff04:	ldr	pc, [ip, #568]!	; 0x238

0000ff08 <myencoding_name_entry_by_name@plt>:
    ff08:	add	ip, pc, #1048576	; 0x100000
    ff0c:	add	ip, ip, #0, 20
    ff10:	ldr	pc, [ip, #560]!	; 0x230

0000ff14 <myhtml_token_adjust_mathml_attributes@plt>:
    ff14:	add	ip, pc, #1048576	; 0x100000
    ff18:	add	ip, ip, #0, 20
    ff1c:	ldr	pc, [ip, #552]!	; 0x228

0000ff20 <mcobject_free@plt>:
    ff20:	add	ip, pc, #1048576	; 0x100000
    ff24:	add	ip, ip, #0, 20
    ff28:	ldr	pc, [ip, #544]!	; 0x220

0000ff2c <myhtml_tree_node_insert_text@plt>:
    ff2c:	add	ip, pc, #1048576	; 0x100000
    ff30:	add	ip, ip, #0, 20
    ff34:	ldr	pc, [ip, #536]!	; 0x218

0000ff38 <myhtml_tag_set_category@plt>:
    ff38:	add	ip, pc, #1048576	; 0x100000
    ff3c:	add	ip, ip, #0, 20
    ff40:	ldr	pc, [ip, #528]!	; 0x210

0000ff44 <mcsync_spin_destroy@plt>:
    ff44:	add	ip, pc, #1048576	; 0x100000
    ff48:	add	ip, ip, #0, 20
    ff4c:	ldr	pc, [ip, #520]!	; 0x208

0000ff50 <myhtml_tree_template_insertion_append@plt>:
    ff50:	add	ip, pc, #1048576	; 0x100000
    ff54:	add	ip, ip, #0, 20
    ff58:	ldr	pc, [ip, #512]!	; 0x200

0000ff5c <mchar_async_realloc@plt>:
    ff5c:	add	ip, pc, #1048576	; 0x100000
    ff60:	add	ip, ip, #0, 20
    ff64:	ldr	pc, [ip, #504]!	; 0x1f8

0000ff68 <pthread_mutex_init@plt>:
    ff68:	add	ip, pc, #1048576	; 0x100000
    ff6c:	add	ip, ip, #0, 20
    ff70:	ldr	pc, [ip, #496]!	; 0x1f0

0000ff74 <myhtml_tokenizer_state_bogus_comment@plt>:
    ff74:	add	ip, pc, #1048576	; 0x100000
    ff78:	add	ip, ip, #0, 20
    ff7c:	ldr	pc, [ip, #488]!	; 0x1e8

0000ff80 <myhtml_tree_node_create@plt>:
    ff80:	add	ip, pc, #1048576	; 0x100000
    ff84:	add	ip, ip, #0, 20
    ff88:	ldr	pc, [ip, #480]!	; 0x1e0

0000ff8c <myhtml_tree_node_delete_recursive@plt>:
    ff8c:	add	ip, pc, #1048576	; 0x100000
    ff90:	add	ip, ip, #0, 20
    ff94:	ldr	pc, [ip, #472]!	; 0x1d8

0000ff98 <myhtml_tag_static_get_by_id@plt>:
    ff98:	add	ip, pc, #1048576	; 0x100000
    ff9c:	add	ip, ip, #0, 20
    ffa0:	ldr	pc, [ip, #464]!	; 0x1d0

0000ffa4 <myhtml_token_attr_clean@plt>:
    ffa4:	add	ip, pc, #1048576	; 0x100000
    ffa8:	add	ip, ip, #0, 20
    ffac:	ldr	pc, [ip, #456]!	; 0x1c8

0000ffb0 <myhtml_tag_add@plt>:
    ffb0:	add	ip, pc, #1048576	; 0x100000
    ffb4:	add	ip, ip, #0, 20
    ffb8:	ldr	pc, [ip, #448]!	; 0x1c0

0000ffbc <mcobject_create@plt>:
    ffbc:	add	ip, pc, #1048576	; 0x100000
    ffc0:	add	ip, ip, #0, 20
    ffc4:	ldr	pc, [ip, #440]!	; 0x1b8

0000ffc8 <myhtml_queue_add@plt>:
    ffc8:	add	ip, pc, #1048576	; 0x100000
    ffcc:	add	ip, ip, #0, 20
    ffd0:	ldr	pc, [ip, #432]!	; 0x1b0

0000ffd4 <pthread_mutex_trylock@plt>:
    ffd4:	add	ip, pc, #1048576	; 0x100000
    ffd8:	add	ip, ip, #0, 20
    ffdc:	ldr	pc, [ip, #424]!	; 0x1a8

0000ffe0 <myhtml_tree_is_mathml_integration_point@plt>:
    ffe0:	add	ip, pc, #1048576	; 0x100000
    ffe4:	add	ip, ip, #0, 20
    ffe8:	ldr	pc, [ip, #416]!	; 0x1a0

0000ffec <mcobject_async_free@plt>:
    ffec:	add	ip, pc, #1048576	; 0x100000
    fff0:	add	ip, ip, #0, 20
    fff4:	ldr	pc, [ip, #408]!	; 0x198

0000fff8 <myhtml_insertion_mode_in_head@plt>:
    fff8:	add	ip, pc, #1048576	; 0x100000
    fffc:	add	ip, ip, #0, 20
   10000:	ldr	pc, [ip, #400]!	; 0x190

00010004 <ftell@plt>:
   10004:	add	ip, pc, #1048576	; 0x100000
   10008:	add	ip, ip, #0, 20
   1000c:	ldr	pc, [ip, #392]!	; 0x188

00010010 <memcmp@plt>:
   10010:	add	ip, pc, #1048576	; 0x100000
   10014:	add	ip, ip, #0, 20
   10018:	ldr	pc, [ip, #384]!	; 0x180

0001001c <mycore_utils_mhash_hash@plt>:
   1001c:	add	ip, pc, #1048576	; 0x100000
   10020:	add	ip, ip, #0, 20
   10024:	ldr	pc, [ip, #376]!	; 0x178

00010028 <myencoding_prescan_stream_to_determine_encoding_skip_name@plt>:
   10028:	add	ip, pc, #1048576	; 0x100000
   1002c:	add	ip, ip, #0, 20
   10030:	ldr	pc, [ip, #368]!	; 0x170

00010034 <mycore_incoming_buffer_add@plt>:
   10034:	add	ip, pc, #1048576	; 0x100000
   10038:	add	ip, ip, #0, 20
   1003c:	ldr	pc, [ip, #360]!	; 0x168

00010040 <mythread_nanosleep_sleep@plt>:
   10040:	add	ip, pc, #1048576	; 0x100000
   10044:	add	ip, ip, #0, 20
   10048:	ldr	pc, [ip, #352]!	; 0x160

0001004c <mctree_insert_before@plt>:
   1004c:	add	ip, pc, #1048576	; 0x100000
   10050:	add	ip, ip, #0, 20
   10054:	ldr	pc, [ip, #344]!	; 0x158

00010058 <mctree_destroy@plt>:
   10058:	add	ip, pc, #1048576	; 0x100000
   1005c:	add	ip, ip, #0, 20
   10060:	ldr	pc, [ip, #336]!	; 0x150

00010064 <myhtml_tokenizer_chunk@plt>:
   10064:	add	ip, pc, #1048576	; 0x100000
   10068:	add	ip, ip, #0, 20
   1006c:	ldr	pc, [ip, #328]!	; 0x148

00010070 <myhtml_tree_active_formatting_append@plt>:
   10070:	add	ip, pc, #1048576	; 0x100000
   10074:	add	ip, ip, #0, 20
   10078:	ldr	pc, [ip, #320]!	; 0x140

0001007c <myhtml_tree_active_formatting_destroy@plt>:
   1007c:	add	ip, pc, #1048576	; 0x100000
   10080:	add	ip, ip, #0, 20
   10084:	ldr	pc, [ip, #312]!	; 0x138

00010088 <mythread_suspend@plt>:
   10088:	add	ip, pc, #1048576	; 0x100000
   1008c:	add	ip, ip, #0, 20
   10090:	ldr	pc, [ip, #304]!	; 0x130

00010094 <myhtml_tokenizer_state_destroy@plt>:
   10094:	add	ip, pc, #1048576	; 0x100000
   10098:	add	ip, ip, #0, 20
   1009c:	ldr	pc, [ip, #296]!	; 0x128

000100a0 <mycore_incoming_buffer_find_by_position@plt>:
   100a0:	add	ip, pc, #1048576	; 0x100000
   100a4:	add	ip, ip, #0, 20
   100a8:	ldr	pc, [ip, #288]!	; 0x120

000100ac <mcobject_async_chunk_malloc@plt>:
   100ac:	add	ip, pc, #1048576	; 0x100000
   100b0:	add	ip, ip, #0, 20
   100b4:	ldr	pc, [ip, #280]!	; 0x118

000100b8 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>:
   100b8:	add	ip, pc, #1048576	; 0x100000
   100bc:	add	ip, ip, #0, 20
   100c0:	ldr	pc, [ip, #272]!	; 0x110

000100c4 <myhtml_tree_active_formatting_find@plt>:
   100c4:	add	ip, pc, #1048576	; 0x100000
   100c8:	add	ip, ip, #0, 20
   100cc:	ldr	pc, [ip, #264]!	; 0x108

000100d0 <mythread_queue_list_destroy@plt>:
   100d0:	add	ip, pc, #1048576	; 0x100000
   100d4:	add	ip, ip, #0, 20
   100d8:	ldr	pc, [ip, #256]!	; 0x100

000100dc <myhtml_tree_open_elements_pop_until_by_node@plt>:
   100dc:	add	ip, pc, #1048576	; 0x100000
   100e0:	add	ip, ip, #0, 20
   100e4:	ldr	pc, [ip, #248]!	; 0xf8

000100e8 <myhtml_stream_buffer_entry_destroy@plt>:
   100e8:	add	ip, pc, #1048576	; 0x100000
   100ec:	add	ip, ip, #0, 20
   100f0:	ldr	pc, [ip, #240]!	; 0xf0

000100f4 <myhtml_tokenizer_begin@plt>:
   100f4:	add	ip, pc, #1048576	; 0x100000
   100f8:	add	ip, ip, #0, 20
   100fc:	ldr	pc, [ip, #232]!	; 0xe8

00010100 <mchar_async_create@plt>:
   10100:	add	ip, pc, #1048576	; 0x100000
   10104:	add	ip, ip, #0, 20
   10108:	ldr	pc, [ip, #224]!	; 0xe0

0001010c <mycore_string_copy@plt>:
   1010c:	add	ip, pc, #1048576	; 0x100000
   10110:	add	ip, ip, #0, 20
   10114:	ldr	pc, [ip, #216]!	; 0xd8

00010118 <myhtml_insertion_mode_in_table@plt>:
   10118:	add	ip, pc, #1048576	; 0x100000
   1011c:	add	ip, ip, #0, 20
   10120:	ldr	pc, [ip, #208]!	; 0xd0

00010124 <mythread_queue_list_entry_push@plt>:
   10124:	add	ip, pc, #1048576	; 0x100000
   10128:	add	ip, ip, #0, 20
   1012c:	ldr	pc, [ip, #200]!	; 0xc8

00010130 <mythread_queue_get_current_node@plt>:
   10130:	add	ip, pc, #1048576	; 0x100000
   10134:	add	ip, ip, #0, 20
   10138:	ldr	pc, [ip, #192]!	; 0xc0

0001013c <mcobject_async_chunk_up@plt>:
   1013c:	add	ip, pc, #1048576	; 0x100000
   10140:	add	ip, ip, #0, 20
   10144:	ldr	pc, [ip, #184]!	; 0xb8

00010148 <myhtml_tree_open_elements_pop@plt>:
   10148:	add	ip, pc, #1048576	; 0x100000
   1014c:	add	ip, ip, #0, 20
   10150:	ldr	pc, [ip, #176]!	; 0xb0

00010154 <mcsync_destroy@plt>:
   10154:	add	ip, pc, #1048576	; 0x100000
   10158:	add	ip, ip, #0, 20
   1015c:	ldr	pc, [ip, #168]!	; 0xa8

00010160 <myencoding_result_clean@plt>:
   10160:	add	ip, pc, #1048576	; 0x100000
   10164:	add	ip, ip, #0, 20
   10168:	ldr	pc, [ip, #160]!	; 0xa0

0001016c <myhtml_string_append_with_preprocessing@plt>:
   1016c:	add	ip, pc, #1048576	; 0x100000
   10170:	add	ip, ip, #0, 20
   10174:	ldr	pc, [ip, #152]!	; 0x98

00010178 <myhtml_token_adjust_svg_attributes@plt>:
   10178:	add	ip, pc, #1048576	; 0x100000
   1017c:	add	ip, ip, #0, 20
   10180:	ldr	pc, [ip, #144]!	; 0x90

00010184 <realloc@plt>:
   10184:	add	ip, pc, #1048576	; 0x100000
   10188:	add	ip, ip, #0, 20
   1018c:	ldr	pc, [ip, #136]!	; 0x88

00010190 <mycore_incoming_buffer_convert_one_escaped_to_code_point@plt>:
   10190:	add	ip, pc, #1048576	; 0x100000
   10194:	add	ip, ip, #0, 20
   10198:	ldr	pc, [ip, #128]!	; 0x80

0001019c <myhtml_tree_is_html_integration_point@plt>:
   1019c:	add	ip, pc, #1048576	; 0x100000
   101a0:	add	ip, ip, #0, 20
   101a4:	ldr	pc, [ip, #120]!	; 0x78

000101a8 <myhtml_namespace_name_entry_by_name@plt>:
   101a8:	add	ip, pc, #1048576	; 0x100000
   101ac:	add	ip, ip, #0, 20
   101b0:	ldr	pc, [ip, #112]!	; 0x70

000101b4 <myencoding_detect_bom@plt>:
   101b4:	add	ip, pc, #1048576	; 0x100000
   101b8:	add	ip, ip, #0, 20
   101bc:	ldr	pc, [ip, #104]!	; 0x68

000101c0 <myhtml_tree_list_append@plt>:
   101c0:	add	ip, pc, #1048576	; 0x100000
   101c4:	add	ip, ip, #0, 20
   101c8:	ldr	pc, [ip, #96]!	; 0x60

000101cc <myhtml_tokenizer_calc_current_namespace@plt>:
   101cc:	add	ip, pc, #1048576	; 0x100000
   101d0:	add	ip, ip, #0, 20
   101d4:	ldr	pc, [ip, #88]!	; 0x58

000101d8 <myhtml_tree_open_elements_remove@plt>:
   101d8:	add	ip, pc, #1048576	; 0x100000
   101dc:	add	ip, ip, #0, 20
   101e0:	ldr	pc, [ip, #80]!	; 0x50

000101e4 <mctree_insert_child@plt>:
   101e4:	add	ip, pc, #1048576	; 0x100000
   101e8:	add	ip, ip, #0, 20
   101ec:	ldr	pc, [ip, #72]!	; 0x48

000101f0 <mcsimple_clean@plt>:
   101f0:	add	ip, pc, #1048576	; 0x100000
   101f4:	add	ip, ip, #0, 20
   101f8:	ldr	pc, [ip, #64]!	; 0x40

000101fc <myhtml_tree_node_insert_comment@plt>:
   101fc:	add	ip, pc, #1048576	; 0x100000
   10200:	add	ip, ip, #0, 20
   10204:	ldr	pc, [ip, #56]!	; 0x38

00010208 <myhtml_tokenizer_end@plt>:
   10208:	add	ip, pc, #1048576	; 0x100000
   1020c:	add	ip, ip, #0, 20
   10210:	ldr	pc, [ip, #48]!	; 0x30

00010214 <myhtml_tree_temp_tag_name_clean@plt>:
   10214:	add	ip, pc, #1048576	; 0x100000
   10218:	add	ip, ip, #0, 20
   1021c:	ldr	pc, [ip, #40]!	; 0x28

00010220 <myhtml_tree_list_clean@plt>:
   10220:	add	ip, pc, #1048576	; 0x100000
   10224:	add	ip, ip, #0, 20
   10228:	ldr	pc, [ip, #32]!

0001022c <mchar_async_node_add@plt>:
   1022c:	add	ip, pc, #1048576	; 0x100000
   10230:	add	ip, ip, #0, 20
   10234:	ldr	pc, [ip, #24]!

00010238 <mycore_strncasecmp@plt>:
   10238:	add	ip, pc, #1048576	; 0x100000
   1023c:	add	ip, ip, #0, 20
   10240:	ldr	pc, [ip, #16]!

00010244 <myhtml_tokenizer_post@plt>:
   10244:	add	ip, pc, #1048576	; 0x100000
   10248:	add	ip, ip, #0, 20
   1024c:	ldr	pc, [ip, #8]!

00010250 <myhtml_tree_list_insert_by_index@plt>:
   10250:	add	ip, pc, #1048576	; 0x100000
   10254:	add	ip, ip, #0, 20
   10258:	ldr	pc, [ip, #0]!

0001025c <mcsimple_create@plt>:
   1025c:	add	ip, pc, #0, 12
   10260:	add	ip, ip, #1044480	; 0xff000
   10264:	ldr	pc, [ip, #4088]!	; 0xff8

00010268 <mythread_queue_destroy@plt>:
   10268:	add	ip, pc, #0, 12
   1026c:	add	ip, ip, #1044480	; 0xff000
   10270:	ldr	pc, [ip, #4080]!	; 0xff0

00010274 <mycore_string_raw_copy@plt>:
   10274:	add	ip, pc, #0, 12
   10278:	add	ip, ip, #1044480	; 0xff000
   1027c:	ldr	pc, [ip, #4072]!	; 0xfe8

00010280 <mycore_string_stay_only_whitespace@plt>:
   10280:	add	ip, pc, #0, 12
   10284:	add	ip, ip, #1044480	; 0xff000
   10288:	ldr	pc, [ip, #4064]!	; 0xfe0

0001028c <mctree_clean@plt>:
   1028c:	add	ip, pc, #0, 12
   10290:	add	ip, ip, #1044480	; 0xff000
   10294:	ldr	pc, [ip, #4056]!	; 0xfd8

00010298 <myhtml_collection_create@plt>:
   10298:	add	ip, pc, #0, 12
   1029c:	add	ip, ip, #1044480	; 0xff000
   102a0:	ldr	pc, [ip, #4048]!	; 0xfd0

000102a4 <myhtml_rules_stop_parsing@plt>:
   102a4:	add	ip, pc, #0, 12
   102a8:	add	ip, ip, #1044480	; 0xff000
   102ac:	ldr	pc, [ip, #4040]!	; 0xfc8

000102b0 <myhtml_get_nodes_by_tag_id@plt>:
   102b0:	add	ip, pc, #0, 12
   102b4:	add	ip, ip, #1044480	; 0xff000
   102b8:	ldr	pc, [ip, #4032]!	; 0xfc0

000102bc <myhtml_serialization_tree_buffer@plt>:
   102bc:	add	ip, pc, #0, 12
   102c0:	add	ip, ip, #1044480	; 0xff000
   102c4:	ldr	pc, [ip, #4024]!	; 0xfb8

000102c8 <myhtml_token_set_replacement_character_for_null_token@plt>:
   102c8:	add	ip, pc, #0, 12
   102cc:	add	ip, ip, #1044480	; 0xff000
   102d0:	ldr	pc, [ip, #4016]!	; 0xfb0

000102d4 <fwrite@plt>:
   102d4:	add	ip, pc, #0, 12
   102d8:	add	ip, ip, #1044480	; 0xff000
   102dc:	ldr	pc, [ip, #4008]!	; 0xfa8

000102e0 <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>:
   102e0:	add	ip, pc, #0, 12
   102e4:	add	ip, ip, #1044480	; 0xff000
   102e8:	ldr	pc, [ip, #4000]!	; 0xfa0

000102ec <myhtml_tree_node_insert_by_mode@plt>:
   102ec:	add	ip, pc, #0, 12
   102f0:	add	ip, ip, #1044480	; 0xff000
   102f4:	ldr	pc, [ip, #3992]!	; 0xf98

000102f8 <myhtml_tree_node_insert_after@plt>:
   102f8:	add	ip, pc, #0, 12
   102fc:	add	ip, ip, #1044480	; 0xff000
   10300:	ldr	pc, [ip, #3984]!	; 0xf90

00010304 <myhtml_data_process_state_end@plt>:
   10304:	add	ip, pc, #0, 12
   10308:	add	ip, ip, #1044480	; 0xff000
   1030c:	ldr	pc, [ip, #3976]!	; 0xf88

00010310 <myhtml_serialization_reallocate@plt>:
   10310:	add	ip, pc, #0, 12
   10314:	add	ip, ip, #1044480	; 0xff000
   10318:	ldr	pc, [ip, #3968]!	; 0xf80

0001031c <mycore_string_append_with_replacement_null_characters@plt>:
   1031c:	add	ip, pc, #0, 12
   10320:	add	ip, ip, #1044480	; 0xff000
   10324:	ldr	pc, [ip, #3960]!	; 0xf78

00010328 <myhtml_tree_clear_stack_back_table_body_context@plt>:
   10328:	add	ip, pc, #0, 12
   1032c:	add	ip, ip, #1044480	; 0xff000
   10330:	ldr	pc, [ip, #3952]!	; 0xf70

00010334 <mcsimple_destroy@plt>:
   10334:	add	ip, pc, #0, 12
   10338:	add	ip, ip, #1044480	; 0xff000
   1033c:	ldr	pc, [ip, #3944]!	; 0xf68

00010340 <myhtml_token_doctype_check_html_4_01@plt>:
   10340:	add	ip, pc, #0, 12
   10344:	add	ip, ip, #1044480	; 0xff000
   10348:	ldr	pc, [ip, #3936]!	; 0xf60

0001034c <__mtree_insert_to_start@plt>:
   1034c:	add	ip, pc, #0, 12
   10350:	add	ip, ip, #1044480	; 0xff000
   10354:	ldr	pc, [ip, #3928]!	; 0xf58

00010358 <myhtml_insertion_mode_in_select@plt>:
   10358:	add	ip, pc, #0, 12
   1035c:	add	ip, ip, #1044480	; 0xff000
   10360:	ldr	pc, [ip, #3920]!	; 0xf50

00010364 <fread@plt>:
   10364:	add	ip, pc, #0, 12
   10368:	add	ip, ip, #1044480	; 0xff000
   1036c:	ldr	pc, [ip, #3912]!	; 0xf48

00010370 <pthread_create@plt>:
   10370:	add	ip, pc, #0, 12
   10374:	add	ip, ip, #1044480	; 0xff000
   10378:	ldr	pc, [ip, #3904]!	; 0xf40

0001037c <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>:
   1037c:	add	ip, pc, #0, 12
   10380:	add	ip, ip, #1044480	; 0xff000
   10384:	ldr	pc, [ip, #3896]!	; 0xf38

00010388 <myhtml_tree_node_insert_before@plt>:
   10388:	add	ip, pc, #0, 12
   1038c:	add	ip, ip, #1044480	; 0xff000
   10390:	ldr	pc, [ip, #3888]!	; 0xf30

00010394 <myhtml_parser_token_data_to_string_charef@plt>:
   10394:	add	ip, pc, #0, 12
   10398:	add	ip, ip, #1044480	; 0xff000
   1039c:	ldr	pc, [ip, #3880]!	; 0xf28

000103a0 <mythread_thread_attr_clean@plt>:
   103a0:	add	ip, pc, #0, 12
   103a4:	add	ip, ip, #1044480	; 0xff000
   103a8:	ldr	pc, [ip, #3872]!	; 0xf20

000103ac <myhtml_tree_clear_stack_back_table_row_context@plt>:
   103ac:	add	ip, pc, #0, 12
   103b0:	add	ip, ip, #1044480	; 0xff000
   103b4:	ldr	pc, [ip, #3864]!	; 0xf18

000103b8 <myhtml_tree_template_insertion_clean@plt>:
   103b8:	add	ip, pc, #0, 12
   103bc:	add	ip, ip, #1044480	; 0xff000
   103c0:	ldr	pc, [ip, #3856]!	; 0xf10

000103c4 <myhtml_tokenizer_chunk_process@plt>:
   103c4:	add	ip, pc, #0, 12
   103c8:	add	ip, ip, #1044480	; 0xff000
   103cc:	ldr	pc, [ip, #3848]!	; 0xf08

000103d0 <myhtml_stream_create@plt>:
   103d0:	add	ip, pc, #0, 12
   103d4:	add	ip, ip, #1044480	; 0xff000
   103d8:	ldr	pc, [ip, #3840]!	; 0xf00

000103dc <myhtml_tree_tags_close_p@plt>:
   103dc:	add	ip, pc, #0, 12
   103e0:	add	ip, ip, #1044480	; 0xff000
   103e4:	ldr	pc, [ip, #3832]!	; 0xef8

000103e8 <mcsimple_init@plt>:
   103e8:	add	ip, pc, #0, 12
   103ec:	add	ip, ip, #1044480	; 0xff000
   103f0:	ldr	pc, [ip, #3824]!	; 0xef0

000103f4 <myencoding_string_append@plt>:
   103f4:	add	ip, pc, #0, 12
   103f8:	add	ip, ip, #1044480	; 0xff000
   103fc:	ldr	pc, [ip, #3816]!	; 0xee8

00010400 <myhtml_stream_buffer_clean@plt>:
   10400:	add	ip, pc, #0, 12
   10404:	add	ip, ip, #1044480	; 0xff000
   10408:	ldr	pc, [ip, #3808]!	; 0xee0

0001040c <mycore_utils_avl_tree_rotate_for_delete@plt>:
   1040c:	add	ip, pc, #0, 12
   10410:	add	ip, ip, #1044480	; 0xff000
   10414:	ldr	pc, [ip, #3800]!	; 0xed8

00010418 <myhtml_token_merged_two_token_string@plt>:
   10418:	add	ip, pc, #0, 12
   1041c:	add	ip, ip, #1044480	; 0xff000
   10420:	ldr	pc, [ip, #3792]!	; 0xed0

00010424 <myhtml_attribute_value@plt>:
   10424:	add	ip, pc, #0, 12
   10428:	add	ip, ip, #1044480	; 0xff000
   1042c:	ldr	pc, [ip, #3784]!	; 0xec8

00010430 <myhtml_token_strict_doctype_by_token@plt>:
   10430:	add	ip, pc, #0, 12
   10434:	add	ip, ip, #1044480	; 0xff000
   10438:	ldr	pc, [ip, #3776]!	; 0xec0

0001043c <mchar_async_init@plt>:
   1043c:	add	ip, pc, #0, 12
   10440:	add	ip, ip, #1044480	; 0xff000
   10444:	ldr	pc, [ip, #3768]!	; 0xeb8

00010448 <mycore_string_crop_whitespace_from_begin@plt>:
   10448:	add	ip, pc, #0, 12
   1044c:	add	ip, ip, #1044480	; 0xff000
   10450:	ldr	pc, [ip, #3760]!	; 0xeb0

00010454 <mythread_resume@plt>:
   10454:	add	ip, pc, #0, 12
   10458:	add	ip, ip, #1044480	; 0xff000
   1045c:	ldr	pc, [ip, #3752]!	; 0xea8

00010460 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>:
   10460:	add	ip, pc, #0, 12
   10464:	add	ip, ip, #1044480	; 0xff000
   10468:	ldr	pc, [ip, #3744]!	; 0xea0

0001046c <myhtml_tokenizer_doctype_public_identifier_dsq@plt>:
   1046c:	add	ip, pc, #0, 12
   10470:	add	ip, ip, #1044480	; 0xff000
   10474:	ldr	pc, [ip, #3736]!	; 0xe98

00010478 <myhtml_create_stream_and_batch@plt>:
   10478:	add	ip, pc, #0, 12
   1047c:	add	ip, ip, #1044480	; 0xff000
   10480:	ldr	pc, [ip, #3728]!	; 0xe90

00010484 <myhtml_data_process_entry_clean@plt>:
   10484:	add	ip, pc, #0, 12
   10488:	add	ip, ip, #1044480	; 0xff000
   1048c:	ldr	pc, [ip, #3720]!	; 0xe88

00010490 <mcsync_spin_init@plt>:
   10490:	add	ip, pc, #0, 12
   10494:	add	ip, ip, #1044480	; 0xff000
   10498:	ldr	pc, [ip, #3712]!	; 0xe80

0001049c <malloc@plt>:
   1049c:	add	ip, pc, #0, 12
   104a0:	add	ip, ip, #1044480	; 0xff000
   104a4:	ldr	pc, [ip, #3704]!	; 0xe78

000104a8 <mythread_check_status@plt>:
   104a8:	add	ip, pc, #0, 12
   104ac:	add	ip, ip, #1044480	; 0xff000
   104b0:	ldr	pc, [ip, #3696]!	; 0xe70

000104b4 <myhtml_token_doctype_check_html_4_0@plt>:
   104b4:	add	ip, pc, #0, 12
   104b8:	add	ip, ip, #1044480	; 0xff000
   104bc:	ldr	pc, [ip, #3688]!	; 0xe68

000104c0 <mycore_strcasecmp@plt>:
   104c0:	add	ip, pc, #0, 12
   104c4:	add	ip, ip, #1044480	; 0xff000
   104c8:	ldr	pc, [ip, #3680]!	; 0xe60

000104cc <mythread_queue_node_malloc_round@plt>:
   104cc:	add	ip, pc, #0, 12
   104d0:	add	ip, ip, #1044480	; 0xff000
   104d4:	ldr	pc, [ip, #3672]!	; 0xe58

000104d8 <myhtml_tree_active_formatting_reconstruction@plt>:
   104d8:	add	ip, pc, #0, 12
   104dc:	add	ip, ip, #1044480	; 0xff000
   104e0:	ldr	pc, [ip, #3664]!	; 0xe50

000104e4 <myhtml_token_set_done@plt>:
   104e4:	add	ip, pc, #0, 12
   104e8:	add	ip, ip, #1044480	; 0xff000
   104ec:	ldr	pc, [ip, #3656]!	; 0xe48

000104f0 <mcsync_spin_create@plt>:
   104f0:	add	ip, pc, #0, 12
   104f4:	add	ip, ip, #1044480	; 0xff000
   104f8:	ldr	pc, [ip, #3648]!	; 0xe40

000104fc <mythread_thread_join@plt>:
   104fc:	add	ip, pc, #0, 12
   10500:	add	ip, ip, #1044480	; 0xff000
   10504:	ldr	pc, [ip, #3640]!	; 0xe38

00010508 <myhtml_token_attr_remove@plt>:
   10508:	add	ip, pc, #0, 12
   1050c:	add	ip, ip, #1044480	; 0xff000
   10510:	ldr	pc, [ip, #3632]!	; 0xe30

00010514 <myhtml_token_node_attr_copy@plt>:
   10514:	add	ip, pc, #0, 12
   10518:	add	ip, ip, #1044480	; 0xff000
   1051c:	ldr	pc, [ip, #3624]!	; 0xe28

00010520 <mythread_quit@plt>:
   10520:	add	ip, pc, #0, 12
   10524:	add	ip, ip, #1044480	; 0xff000
   10528:	ldr	pc, [ip, #3616]!	; 0xe20

0001052c <myhtml_batch_create@plt>:
   1052c:	add	ip, pc, #0, 12
   10530:	add	ip, ip, #1044480	; 0xff000
   10534:	ldr	pc, [ip, #3608]!	; 0xe18

00010538 <myhtml_parse_chunk_fragment@plt>:
   10538:	add	ip, pc, #0, 12
   1053c:	add	ip, ip, #1044480	; 0xff000
   10540:	ldr	pc, [ip, #3600]!	; 0xe10

00010544 <mcsync_spin_lock@plt>:
   10544:	add	ip, pc, #0, 12
   10548:	add	ip, ip, #1044480	; 0xff000
   1054c:	ldr	pc, [ip, #3592]!	; 0xe08

00010550 <myhtml_token_clean@plt>:
   10550:	add	ip, pc, #0, 12
   10554:	add	ip, ip, #1044480	; 0xff000
   10558:	ldr	pc, [ip, #3584]!	; 0xe00

0001055c <mythread_queue_list_get_count@plt>:
   1055c:	add	ip, pc, #0, 12
   10560:	add	ip, ip, #1044480	; 0xff000
   10564:	ldr	pc, [ip, #3576]!	; 0xdf8

00010568 <mythread_queue_list_see_for_done_by_thread@plt>:
   10568:	add	ip, pc, #0, 12
   1056c:	add	ip, ip, #1044480	; 0xff000
   10570:	ldr	pc, [ip, #3568]!	; 0xdf0

00010574 <__gmon_start__@plt>:
   10574:	add	ip, pc, #0, 12
   10578:	add	ip, ip, #1044480	; 0xff000
   1057c:	ldr	pc, [ip, #3560]!	; 0xde8

00010580 <myhtml_tokenizer_pause@plt>:
   10580:	add	ip, pc, #0, 12
   10584:	add	ip, ip, #1044480	; 0xff000
   10588:	ldr	pc, [ip, #3552]!	; 0xde0

0001058c <myhtml_tokenizer_set_first_settings@plt>:
   1058c:	add	ip, pc, #0, 12
   10590:	add	ip, ip, #1044480	; 0xff000
   10594:	ldr	pc, [ip, #3544]!	; 0xdd8

00010598 <myhtml_tree_temp_tag_name_init@plt>:
   10598:	add	ip, pc, #0, 12
   1059c:	add	ip, ip, #1044480	; 0xff000
   105a0:	ldr	pc, [ip, #3536]!	; 0xdd0

000105a4 <mycore_string_init@plt>:
   105a4:	add	ip, pc, #0, 12
   105a8:	add	ip, ip, #1044480	; 0xff000
   105ac:	ldr	pc, [ip, #3528]!	; 0xdc8

000105b0 <myhtml_tree_node_find_parent_by_tag_id@plt>:
   105b0:	add	ip, pc, #0, 12
   105b4:	add	ip, ip, #1044480	; 0xff000
   105b8:	ldr	pc, [ip, #3520]!	; 0xdc0

000105bc <myhtml_tree_current_node@plt>:
   105bc:	add	ip, pc, #0, 12
   105c0:	add	ip, ip, #1044480	; 0xff000
   105c4:	ldr	pc, [ip, #3512]!	; 0xdb8

000105c8 <mythread_mutex_close@plt>:
   105c8:	add	ip, pc, #0, 12
   105cc:	add	ip, ip, #1044480	; 0xff000
   105d0:	ldr	pc, [ip, #3504]!	; 0xdb0

000105d4 <myhtml_insertion_mode_in_body@plt>:
   105d4:	add	ip, pc, #0, 12
   105d8:	add	ip, ip, #1044480	; 0xff000
   105dc:	ldr	pc, [ip, #3496]!	; 0xda8

000105e0 <myhtml_tree_active_formatting_between_last_marker@plt>:
   105e0:	add	ip, pc, #0, 12
   105e4:	add	ip, ip, #1044480	; 0xff000
   105e8:	ldr	pc, [ip, #3488]!	; 0xda0

000105ec <mctree_create@plt>:
   105ec:	add	ip, pc, #0, 12
   105f0:	add	ip, ip, #1044480	; 0xff000
   105f4:	ldr	pc, [ip, #3480]!	; 0xd98

000105f8 <myhtml_token_doctype_check_xhtml_1_0@plt>:
   105f8:	add	ip, pc, #0, 12
   105fc:	add	ip, ip, #1044480	; 0xff000
   10600:	ldr	pc, [ip, #3472]!	; 0xd90

00010604 <strlen@plt>:
   10604:	add	ip, pc, #0, 12
   10608:	add	ip, ip, #1044480	; 0xff000
   1060c:	ldr	pc, [ip, #3464]!	; 0xd88

00010610 <myhtml_token_node_wait_for_done@plt>:
   10610:	add	ip, pc, #0, 12
   10614:	add	ip, ip, #1044480	; 0xff000
   10618:	ldr	pc, [ip, #3456]!	; 0xd80

0001061c <mycore_string_append_lowercase@plt>:
   1061c:	add	ip, pc, #0, 12
   10620:	add	ip, ip, #1044480	; 0xff000
   10624:	ldr	pc, [ip, #3448]!	; 0xd78

00010628 <myhtml_token_node_attr_copy_with_check@plt>:
   10628:	add	ip, pc, #0, 12
   1062c:	add	ip, ip, #1044480	; 0xff000
   10630:	ldr	pc, [ip, #3440]!	; 0xd70

00010634 <myhtml_encoding_set@plt>:
   10634:	add	ip, pc, #0, 12
   10638:	add	ip, ip, #1044480	; 0xff000
   1063c:	ldr	pc, [ip, #3432]!	; 0xd68

00010640 <mythread_queue_init@plt>:
   10640:	add	ip, pc, #0, 12
   10644:	add	ip, ip, #1044480	; 0xff000
   10648:	ldr	pc, [ip, #3424]!	; 0xd60

0001064c <myhtml_tree_node_add_child@plt>:
   1064c:	add	ip, pc, #0, 12
   10650:	add	ip, ip, #1044480	; 0xff000
   10654:	ldr	pc, [ip, #3416]!	; 0xd58

00010658 <mycore_utils_avl_tree_node_set_height@plt>:
   10658:	add	ip, pc, #0, 12
   1065c:	add	ip, ip, #1044480	; 0xff000
   10660:	ldr	pc, [ip, #3408]!	; 0xd50

00010664 <myhtml_tree_clean@plt>:
   10664:	add	ip, pc, #0, 12
   10668:	add	ip, ip, #1044480	; 0xff000
   1066c:	ldr	pc, [ip, #3400]!	; 0xd48

00010670 <myhtml_tree_generate_implied_end_tags@plt>:
   10670:	add	ip, pc, #0, 12
   10674:	add	ip, ip, #1044480	; 0xff000
   10678:	ldr	pc, [ip, #3392]!	; 0xd40

0001067c <mchar_async_node_clean@plt>:
   1067c:	add	ip, pc, #0, 12
   10680:	add	ip, ip, #1044480	; 0xff000
   10684:	ldr	pc, [ip, #3384]!	; 0xd38

00010688 <myhtml_tree_list_destroy@plt>:
   10688:	add	ip, pc, #0, 12
   1068c:	add	ip, ip, #1044480	; 0xff000
   10690:	ldr	pc, [ip, #3376]!	; 0xd30

00010694 <myhtml_serialization_node_callback@plt>:
   10694:	add	ip, pc, #0, 12
   10698:	add	ip, ip, #1044480	; 0xff000
   1069c:	ldr	pc, [ip, #3368]!	; 0xd28

000106a0 <myencoding_detect_by_trigram@plt>:
   106a0:	add	ip, pc, #0, 12
   106a4:	add	ip, ip, #1044480	; 0xff000
   106a8:	ldr	pc, [ip, #3360]!	; 0xd20

000106ac <mchar_async_free@plt>:
   106ac:	add	ip, pc, #0, 12
   106b0:	add	ip, ip, #1044480	; 0xff000
   106b4:	ldr	pc, [ip, #3352]!	; 0xd18

000106b8 <mchar_async_cache_clean@plt>:
   106b8:	add	ip, pc, #0, 12
   106bc:	add	ip, ip, #1044480	; 0xff000
   106c0:	ldr	pc, [ip, #3344]!	; 0xd10

000106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>:
   106c4:	add	ip, pc, #0, 12
   106c8:	add	ip, ip, #1044480	; 0xff000
   106cc:	ldr	pc, [ip, #3336]!	; 0xd08

000106d0 <mcsimple_malloc@plt>:
   106d0:	add	ip, pc, #0, 12
   106d4:	add	ip, ip, #1044480	; 0xff000
   106d8:	ldr	pc, [ip, #3328]!	; 0xd00

000106dc <mctree_search_lowercase@plt>:
   106dc:	add	ip, pc, #0, 12
   106e0:	add	ip, ip, #1044480	; 0xff000
   106e4:	ldr	pc, [ip, #3320]!	; 0xcf8

000106e8 <myhtml_data_process@plt>:
   106e8:	add	ip, pc, #0, 12
   106ec:	add	ip, ip, #1044480	; 0xff000
   106f0:	ldr	pc, [ip, #3312]!	; 0xcf0

000106f4 <myhtml_token_attr_copy@plt>:
   106f4:	add	ip, pc, #0, 12
   106f8:	add	ip, ip, #1044480	; 0xff000
   106fc:	ldr	pc, [ip, #3304]!	; 0xce8

00010700 <myhtml_tree_node_insert_by_node@plt>:
   10700:	add	ip, pc, #0, 12
   10704:	add	ip, ip, #1044480	; 0xff000
   10708:	ldr	pc, [ip, #3296]!	; 0xce0

0001070c <mcobject_init@plt>:
   1070c:	add	ip, pc, #0, 12
   10710:	add	ip, ip, #1044480	; 0xff000
   10714:	ldr	pc, [ip, #3288]!	; 0xcd8

00010718 <myhtml_token_destroy@plt>:
   10718:	add	ip, pc, #0, 12
   1071c:	add	ip, ip, #1044480	; 0xff000
   10720:	ldr	pc, [ip, #3280]!	; 0xcd0

00010724 <myhtml_destroy_marker@plt>:
   10724:	add	ip, pc, #0, 12
   10728:	add	ip, ip, #1044480	; 0xff000
   1072c:	ldr	pc, [ip, #3272]!	; 0xcc8

00010730 <pthread_attr_init@plt>:
   10730:	add	ip, pc, #0, 12
   10734:	add	ip, ip, #1044480	; 0xff000
   10738:	ldr	pc, [ip, #3264]!	; 0xcc0

0001073c <myhtml_attribute_free@plt>:
   1073c:	add	ip, pc, #0, 12
   10740:	add	ip, ip, #1044480	; 0xff000
   10744:	ldr	pc, [ip, #3256]!	; 0xcb8

00010748 <myhtml_serialization_node_buffer@plt>:
   10748:	add	ip, pc, #0, 12
   1074c:	add	ip, ip, #1044480	; 0xff000
   10750:	ldr	pc, [ip, #3248]!	; 0xcb0

00010754 <myhtml_charef_find_by_pos@plt>:
   10754:	add	ip, pc, #0, 12
   10758:	add	ip, ip, #1044480	; 0xff000
   1075c:	ldr	pc, [ip, #3240]!	; 0xca8

00010760 <myhtml_insertion_fix_for_null_char_drop_all@plt>:
   10760:	add	ip, pc, #0, 12
   10764:	add	ip, ip, #1044480	; 0xff000
   10768:	ldr	pc, [ip, #3232]!	; 0xca0

0001076c <mythread_queue_list_create@plt>:
   1076c:	add	ip, pc, #0, 12
   10770:	add	ip, ip, #1044480	; 0xff000
   10774:	ldr	pc, [ip, #3224]!	; 0xc98

00010778 <myhtml_token_attr_delete_all@plt>:
   10778:	add	ip, pc, #0, 12
   1077c:	add	ip, ip, #1044480	; 0xff000
   10780:	ldr	pc, [ip, #3216]!	; 0xc90

00010784 <myhtml_token_node_attr_append_with_convert_encoding@plt>:
   10784:	add	ip, pc, #0, 12
   10788:	add	ip, ip, #1044480	; 0xff000
   1078c:	ldr	pc, [ip, #3208]!	; 0xc88

00010790 <myhtml_tree_open_elements_find_by_tag_idx@plt>:
   10790:	add	ip, pc, #0, 12
   10794:	add	ip, ip, #1044480	; 0xff000
   10798:	ldr	pc, [ip, #3200]!	; 0xc80

0001079c <myhtml_stream_buffer_entry_init@plt>:
   1079c:	add	ip, pc, #0, 12
   107a0:	add	ip, ip, #1044480	; 0xff000
   107a4:	ldr	pc, [ip, #3192]!	; 0xc78

000107a8 <myhtml_tree_active_formatting_append_with_check@plt>:
   107a8:	add	ip, pc, #0, 12
   107ac:	add	ip, ip, #1044480	; 0xff000
   107b0:	ldr	pc, [ip, #3184]!	; 0xc70

000107b4 <myhtml_tree_active_formatting_clean@plt>:
   107b4:	add	ip, pc, #0, 12
   107b8:	add	ip, ip, #1044480	; 0xff000
   107bc:	ldr	pc, [ip, #3176]!	; 0xc68

000107c0 <myencoding_get_function_by_id@plt>:
   107c0:	add	ip, pc, #0, 12
   107c4:	add	ip, ip, #1044480	; 0xff000
   107c8:	ldr	pc, [ip, #3168]!	; 0xc60

000107cc <myencoding_extracting_character_encoding_from_charset_with_found@plt>:
   107cc:	add	ip, pc, #0, 12
   107d0:	add	ip, ip, #1044480	; 0xff000
   107d4:	ldr	pc, [ip, #3160]!	; 0xc58

000107d8 <myhtml_tree_active_formatting_remove_by_index@plt>:
   107d8:	add	ip, pc, #0, 12
   107dc:	add	ip, ip, #1044480	; 0xff000
   107e0:	ldr	pc, [ip, #3152]!	; 0xc50

000107e4 <mcsync_lock@plt>:
   107e4:	add	ip, pc, #0, 12
   107e8:	add	ip, ip, #1044480	; 0xff000
   107ec:	ldr	pc, [ip, #3144]!	; 0xc48

000107f0 <myhtml_tree_list_init@plt>:
   107f0:	add	ip, pc, #0, 12
   107f4:	add	ip, ip, #1044480	; 0xff000
   107f8:	ldr	pc, [ip, #3136]!	; 0xc40

000107fc <mcsync_init@plt>:
   107fc:	add	ip, pc, #0, 12
   10800:	add	ip, ip, #1044480	; 0xff000
   10804:	ldr	pc, [ip, #3128]!	; 0xc38

00010808 <myhtml_tree_active_formatting_is_marker@plt>:
   10808:	add	ip, pc, #0, 12
   1080c:	add	ip, ip, #1044480	; 0xff000
   10810:	ldr	pc, [ip, #3120]!	; 0xc30

00010814 <mcobject_async_node_clean@plt>:
   10814:	add	ip, pc, #0, 12
   10818:	add	ip, ip, #1044480	; 0xff000
   1081c:	ldr	pc, [ip, #3112]!	; 0xc28

00010820 <mchar_async_cache_destroy@plt>:
   10820:	add	ip, pc, #0, 12
   10824:	add	ip, ip, #1044480	; 0xff000
   10828:	ldr	pc, [ip, #3104]!	; 0xc20

0001082c <myhtml_tree_adoption_agency_algorithm@plt>:
   1082c:	add	ip, pc, #0, 12
   10830:	add	ip, ip, #1044480	; 0xff000
   10834:	ldr	pc, [ip, #3096]!	; 0xc18

00010838 <myhtml_tree_active_formatting_remove@plt>:
   10838:	add	ip, pc, #0, 12
   1083c:	add	ip, ip, #1044480	; 0xff000
   10840:	ldr	pc, [ip, #3088]!	; 0xc10

00010844 <memset@plt>:
   10844:	add	ip, pc, #0, 12
   10848:	add	ip, ip, #1044480	; 0xff000
   1084c:	ldr	pc, [ip, #3080]!	; 0xc08

00010850 <myhread_entry_create@plt>:
   10850:	add	ip, pc, #0, 12
   10854:	add	ip, ip, #1044480	; 0xff000
   10858:	ldr	pc, [ip, #3072]!	; 0xc00

0001085c <mcsync_mutex_create@plt>:
   1085c:	add	ip, pc, #0, 12
   10860:	add	ip, ip, #1044480	; 0xff000
   10864:	ldr	pc, [ip, #3064]!	; 0xbf8

00010868 <mycore_string_append@plt>:
   10868:	add	ip, pc, #0, 12
   1086c:	add	ip, ip, #1044480	; 0xff000
   10870:	ldr	pc, [ip, #3056]!	; 0xbf0

00010874 <mcobject_async_chunk_malloc_without_lock@plt>:
   10874:	add	ip, pc, #0, 12
   10878:	add	ip, ip, #1044480	; 0xff000
   1087c:	ldr	pc, [ip, #3048]!	; 0xbe8

00010880 <strncpy@plt>:
   10880:	add	ip, pc, #0, 12
   10884:	add	ip, ip, #1044480	; 0xff000
   10888:	ldr	pc, [ip, #3040]!	; 0xbe0

0001088c <pthread_cancel@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #1044480	; 0xff000
   10894:	ldr	pc, [ip, #3032]!	; 0xbd8

00010898 <myhtml_token_attr_create@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #1044480	; 0xff000
   108a0:	ldr	pc, [ip, #3024]!	; 0xbd0

000108a4 <mchar_async_malloc@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #1044480	; 0xff000
   108ac:	ldr	pc, [ip, #3016]!	; 0xbc8

000108b0 <myhtml_tag_static_search@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #1044480	; 0xff000
   108b8:	ldr	pc, [ip, #3008]!	; 0xbc0

000108bc <myhtml_data_process_end@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #1044480	; 0xff000
   108c4:	ldr	pc, [ip, #3000]!	; 0xbb8

000108c8 <myhtml_stream_buffer_add_entry@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #1044480	; 0xff000
   108d0:	ldr	pc, [ip, #2992]!	; 0xbb0

000108d4 <myhtml_tree_temp_tag_name_destroy@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #1044480	; 0xff000
   108dc:	ldr	pc, [ip, #2984]!	; 0xba8

000108e0 <myhtml_tree_open_elements_pop_until@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #1044480	; 0xff000
   108e8:	ldr	pc, [ip, #2976]!	; 0xba0

000108ec <mctree_insert@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #1044480	; 0xff000
   108f4:	ldr	pc, [ip, #2968]!	; 0xb98

000108f8 <mycore_string_realloc@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #1044480	; 0xff000
   10900:	ldr	pc, [ip, #2960]!	; 0xb90

00010904 <myhtml_tree_node_insert@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #1044480	; 0xff000
   1090c:	ldr	pc, [ip, #2952]!	; 0xb88

00010910 <mythread_queue_list_entry_wait_for_done@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #1044480	; 0xff000
   10918:	ldr	pc, [ip, #2944]!	; 0xb80

0001091c <myhtml_tree_open_elements_append@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #1044480	; 0xff000
   10924:	ldr	pc, [ip, #2936]!	; 0xb78

00010928 <mcsimple_init_list_entries@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #1044480	; 0xff000
   10930:	ldr	pc, [ip, #2928]!	; 0xb70

00010934 <mythread_queue_list_entry_clean@plt>:
   10934:	add	ip, pc, #0, 12
   10938:	add	ip, ip, #1044480	; 0xff000
   1093c:	ldr	pc, [ip, #2920]!	; 0xb68

00010940 <mythread_destroy@plt>:
   10940:	add	ip, pc, #0, 12
   10944:	add	ip, ip, #1044480	; 0xff000
   10948:	ldr	pc, [ip, #2912]!	; 0xb60

0001094c <myhtml_tree_token_list_init@plt>:
   1094c:	add	ip, pc, #0, 12
   10950:	add	ip, ip, #1044480	; 0xff000
   10954:	ldr	pc, [ip, #2904]!	; 0xb58

00010958 <myhtml_tree_list_append_after_index@plt>:
   10958:	add	ip, pc, #0, 12
   1095c:	add	ip, ip, #1044480	; 0xff000
   10960:	ldr	pc, [ip, #2896]!	; 0xb50

00010964 <mchar_async_chunk_malloc@plt>:
   10964:	add	ip, pc, #0, 12
   10968:	add	ip, ip, #1044480	; 0xff000
   1096c:	ldr	pc, [ip, #2888]!	; 0xb48

00010970 <myhtml_tree_template_insertion_pop@plt>:
   10970:	add	ip, pc, #0, 12
   10974:	add	ip, ip, #1044480	; 0xff000
   10978:	ldr	pc, [ip, #2880]!	; 0xb40

0001097c <__mtree_search_to_start@plt>:
   1097c:	add	ip, pc, #0, 12
   10980:	add	ip, ip, #1044480	; 0xff000
   10984:	ldr	pc, [ip, #2872]!	; 0xb38

00010988 <mythread_thread_destroy@plt>:
   10988:	add	ip, pc, #0, 12
   1098c:	add	ip, ip, #1044480	; 0xff000
   10990:	ldr	pc, [ip, #2864]!	; 0xb30

00010994 <fclose@plt>:
   10994:	add	ip, pc, #0, 12
   10998:	add	ip, ip, #1044480	; 0xff000
   1099c:	ldr	pc, [ip, #2856]!	; 0xb28

000109a0 <myhtml_token_node_create@plt>:
   109a0:	add	ip, pc, #0, 12
   109a4:	add	ip, ip, #1044480	; 0xff000
   109a8:	ldr	pc, [ip, #2848]!	; 0xb20

000109ac <mycore_utils_avl_tree_node_balance@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #1044480	; 0xff000
   109b4:	ldr	pc, [ip, #2840]!	; 0xb18

000109b8 <myhtml_tag_get_by_id@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #1044480	; 0xff000
   109c0:	ldr	pc, [ip, #2832]!	; 0xb10

000109c4 <myhtml_tree_appropriate_place_inserting_in_tree@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #1044480	; 0xff000
   109cc:	ldr	pc, [ip, #2824]!	; 0xb08

000109d0 <myhtml_parse_chunk@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #1044480	; 0xff000
   109d8:	ldr	pc, [ip, #2816]!	; 0xb00

000109dc <mycore_utils_mhash_rebuld@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #1044480	; 0xff000
   109e4:	ldr	pc, [ip, #2808]!	; 0xaf8

000109e8 <myhtml_charef_get_first_position@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #1044480	; 0xff000
   109f0:	ldr	pc, [ip, #2800]!	; 0xaf0

000109f4 <mcobject_malloc@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #1044480	; 0xff000
   109fc:	ldr	pc, [ip, #2792]!	; 0xae8

00010a00 <myencoding_detect_unicode_has_end@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #1044480	; 0xff000
   10a08:	ldr	pc, [ip, #2784]!	; 0xae0

00010a0c <mcsync_spin_clean@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #1044480	; 0xff000
   10a14:	ldr	pc, [ip, #2776]!	; 0xad8

00010a18 <mythread_queue_create@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #1044480	; 0xff000
   10a20:	ldr	pc, [ip, #2768]!	; 0xad0

00010a24 <mcobject_async_node_add@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #1044480	; 0xff000
   10a2c:	ldr	pc, [ip, #2760]!	; 0xac8

00010a30 <myhtml_tokenizer_doctype_system_identifier_dsq@plt>:
   10a30:	add	ip, pc, #0, 12
   10a34:	add	ip, ip, #1044480	; 0xff000
   10a38:	ldr	pc, [ip, #2752]!	; 0xac0

00010a3c <myhtml_is_html_node@plt>:
   10a3c:	add	ip, pc, #0, 12
   10a40:	add	ip, ip, #1044480	; 0xff000
   10a44:	ldr	pc, [ip, #2744]!	; 0xab8

00010a48 <myhtml_init_marker@plt>:
   10a48:	add	ip, pc, #0, 12
   10a4c:	add	ip, ip, #1044480	; 0xff000
   10a50:	ldr	pc, [ip, #2736]!	; 0xab0

00010a54 <myhtml_tree_active_formatting_init@plt>:
   10a54:	add	ip, pc, #0, 12
   10a58:	add	ip, ip, #1044480	; 0xff000
   10a5c:	ldr	pc, [ip, #2728]!	; 0xaa8

00010a60 <myhtml_parser_token_data_to_string@plt>:
   10a60:	add	ip, pc, #0, 12
   10a64:	add	ip, ip, #1044480	; 0xff000
   10a68:	ldr	pc, [ip, #2720]!	; 0xaa0

00010a6c <mythread_stop@plt>:
   10a6c:	add	ip, pc, #0, 12
   10a70:	add	ip, ip, #1044480	; 0xff000
   10a74:	ldr	pc, [ip, #2712]!	; 0xa98

00010a78 <mythread_option_set@plt>:
   10a78:	add	ip, pc, #0, 12
   10a7c:	add	ip, ip, #1044480	; 0xff000
   10a80:	ldr	pc, [ip, #2704]!	; 0xa90

00010a84 <myhtml_tag_name_by_id@plt>:
   10a84:	add	ip, pc, #0, 12
   10a88:	add	ip, ip, #1044480	; 0xff000
   10a8c:	ldr	pc, [ip, #2696]!	; 0xa88

00010a90 <mythread_mutex_create@plt>:
   10a90:	add	ip, pc, #0, 12
   10a94:	add	ip, ip, #1044480	; 0xff000
   10a98:	ldr	pc, [ip, #2688]!	; 0xa80

00010a9c <myhtml_attribute_key@plt>:
   10a9c:	add	ip, pc, #0, 12
   10aa0:	add	ip, ip, #1044480	; 0xff000
   10aa4:	ldr	pc, [ip, #2680]!	; 0xa78

00010aa8 <mchar_sync_chunk_find_by_size@plt>:
   10aa8:	add	ip, pc, #0, 12
   10aac:	add	ip, ip, #1044480	; 0xff000
   10ab0:	ldr	pc, [ip, #2672]!	; 0xa70

00010ab4 <mcobject_async_destroy@plt>:
   10ab4:	add	ip, pc, #0, 12
   10ab8:	add	ip, ip, #1044480	; 0xff000
   10abc:	ldr	pc, [ip, #2664]!	; 0xa68

00010ac0 <myhtml_token_attr_compare@plt>:
   10ac0:	add	ip, pc, #0, 12
   10ac4:	add	ip, ip, #1044480	; 0xff000
   10ac8:	ldr	pc, [ip, #2656]!	; 0xa60

00010acc <_myhtml_get_nodes_by_attribute_value@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #1044480	; 0xff000
   10ad4:	ldr	pc, [ip, #2648]!	; 0xa58

00010ad8 <myhtml_tokenizer_set_state@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #1044480	; 0xff000
   10ae0:	ldr	pc, [ip, #2640]!	; 0xa50

00010ae4 <mcsync_mutex_init@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #1044480	; 0xff000
   10aec:	ldr	pc, [ip, #2632]!	; 0xa48

00010af0 <myhtml_tag_init@plt>:
   10af0:	add	ip, pc, #0, 12
   10af4:	add	ip, ip, #1044480	; 0xff000
   10af8:	ldr	pc, [ip, #2624]!	; 0xa40

00010afc <pthread_join@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #1044480	; 0xff000
   10b04:	ldr	pc, [ip, #2616]!	; 0xa38

00010b08 <myhtml_tag_get_by_name@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #1044480	; 0xff000
   10b10:	ldr	pc, [ip, #2608]!	; 0xa30

00010b14 <myhtml_stream_buffer_current_entry@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #1044480	; 0xff000
   10b1c:	ldr	pc, [ip, #2600]!	; 0xa28

00010b20 <myencoding_prescan_stream_to_determine_encoding_with_found@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #1044480	; 0xff000
   10b28:	ldr	pc, [ip, #2592]!	; 0xa20

00010b2c <myhtml_tokenizer_chunk_with_stream_buffer@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #1044480	; 0xff000
   10b34:	ldr	pc, [ip, #2584]!	; 0xa18

00010b38 <mchar_async_chunk_malloc_without_lock@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #1044480	; 0xff000
   10b40:	ldr	pc, [ip, #2576]!	; 0xa10

00010b44 <myhtml_tree_open_elements_init@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #1044480	; 0xff000
   10b4c:	ldr	pc, [ip, #2568]!	; 0xa08

00010b50 <mcobject_async_malloc@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #1044480	; 0xff000
   10b58:	ldr	pc, [ip, #2560]!	; 0xa00

00010b5c <mchar_async_clean@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #1044480	; 0xff000
   10b64:	ldr	pc, [ip, #2552]!	; 0x9f8

00010b68 <myencoding_decode_shared_utf_16@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #1044480	; 0xff000
   10b70:	ldr	pc, [ip, #2544]!	; 0x9f0

00010b74 <myhtml_token_adjust_foreign_attributes@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #1044480	; 0xff000
   10b7c:	ldr	pc, [ip, #2536]!	; 0x9e8

00010b80 <myhtml_rules_init@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #1044480	; 0xff000
   10b88:	ldr	pc, [ip, #2528]!	; 0x9e0

00010b8c <myencoding_decode_gb18030@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #1044480	; 0xff000
   10b94:	ldr	pc, [ip, #2520]!	; 0x9d8

00010b98 <mythread_nanosleep_destroy@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #1044480	; 0xff000
   10ba0:	ldr	pc, [ip, #2512]!	; 0x9d0

00010ba4 <mycore_utils_avl_tree_node_rotate_left@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #1044480	; 0xff000
   10bac:	ldr	pc, [ip, #2504]!	; 0x9c8

00010bb0 <myhtml_string_before_append_any_preprocessing@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #1044480	; 0xff000
   10bb8:	ldr	pc, [ip, #2496]!	; 0x9c0

00010bbc <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #1044480	; 0xff000
   10bc4:	ldr	pc, [ip, #2488]!	; 0x9b8

00010bc8 <mchar_async_cache_init@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #1044480	; 0xff000
   10bd0:	ldr	pc, [ip, #2480]!	; 0x9b0

00010bd4 <myhtml_check_tag_parser@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #1044480	; 0xff000
   10bdc:	ldr	pc, [ip, #2472]!	; 0x9a8

00010be0 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #1044480	; 0xff000
   10be8:	ldr	pc, [ip, #2464]!	; 0x9a0

00010bec <mchar_async_node_delete@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #1044480	; 0xff000
   10bf4:	ldr	pc, [ip, #2456]!	; 0x998

00010bf8 <mchar_async_crop_first_chars_without_cache@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #1044480	; 0xff000
   10c00:	ldr	pc, [ip, #2448]!	; 0x990

00010c04 <_myhtml_tokenizer_state_andata_end_tag_name@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #1044480	; 0xff000
   10c0c:	ldr	pc, [ip, #2440]!	; 0x988

00010c10 <mchar_async_cache_add@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #1044480	; 0xff000
   10c18:	ldr	pc, [ip, #2432]!	; 0x980

00010c1c <myencoding_string_append_chunk_lowercase_ascii@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #1044480	; 0xff000
   10c24:	ldr	pc, [ip, #2424]!	; 0x978

00010c28 <mycore_malloc@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #1044480	; 0xff000
   10c30:	ldr	pc, [ip, #2416]!	; 0x970

00010c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #1044480	; 0xff000
   10c3c:	ldr	pc, [ip, #2408]!	; 0x968

00010c40 <mythread_queue_node_malloc_limit@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #1044480	; 0xff000
   10c48:	ldr	pc, [ip, #2400]!	; 0x960

00010c4c <myhtml_tree_node_insert_by_token@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #1044480	; 0xff000
   10c54:	ldr	pc, [ip, #2392]!	; 0x958

00010c58 <mctree_insert_after@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #1044480	; 0xff000
   10c60:	ldr	pc, [ip, #2384]!	; 0x950

00010c64 <myencoding_by_name@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #1044480	; 0xff000
   10c6c:	ldr	pc, [ip, #2376]!	; 0x948

00010c70 <myhtml_tree_template_insertion_init@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #1044480	; 0xff000
   10c78:	ldr	pc, [ip, #2368]!	; 0x940

00010c7c <myhtml_tree_open_elements_destroy@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #1044480	; 0xff000
   10c84:	ldr	pc, [ip, #2360]!	; 0x938

00010c88 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #1044480	; 0xff000
   10c90:	ldr	pc, [ip, #2352]!	; 0x930

00010c94 <myhtml_tree_node_free@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #1044480	; 0xff000
   10c9c:	ldr	pc, [ip, #2344]!	; 0x928

00010ca0 <mythread_mutex_post@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #1044480	; 0xff000
   10ca8:	ldr	pc, [ip, #2336]!	; 0x920

00010cac <mycore_string_clean@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #1044480	; 0xff000
   10cb4:	ldr	pc, [ip, #2328]!	; 0x918

00010cb8 <mythread_queue_list_entry_make_batch@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #1044480	; 0xff000
   10cc0:	ldr	pc, [ip, #2320]!	; 0x910

00010cc4 <myhtml_tag_create@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #1044480	; 0xff000
   10ccc:	ldr	pc, [ip, #2312]!	; 0x908

00010cd0 <myhtml_tree_close_cell@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #1044480	; 0xff000
   10cd8:	ldr	pc, [ip, #2304]!	; 0x900

00010cdc <myhtml_tree_adjusted_current_node@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #1044480	; 0xff000
   10ce4:	ldr	pc, [ip, #2296]!	; 0x8f8

00010ce8 <myencoding_detect_russian_has_end@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #1044480	; 0xff000
   10cf0:	ldr	pc, [ip, #2288]!	; 0x8f0

00010cf4 <myhtml_rules_check_for_first_newline@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #1044480	; 0xff000
   10cfc:	ldr	pc, [ip, #2280]!	; 0x8e8

00010d00 <myhtml_stream_buffer_init@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #1044480	; 0xff000
   10d08:	ldr	pc, [ip, #2272]!	; 0x8e0

00010d0c <mythread_queue_node_clean@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #1044480	; 0xff000
   10d14:	ldr	pc, [ip, #2264]!	; 0x8d8

00010d18 <myhtml_tree_node_insert_foreign_element@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #1044480	; 0xff000
   10d20:	ldr	pc, [ip, #2256]!	; 0x8d0

00010d24 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #1044480	; 0xff000
   10d2c:	ldr	pc, [ip, #2248]!	; 0x8c8

00010d30 <mythread_mutex_wait@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #1044480	; 0xff000
   10d38:	ldr	pc, [ip, #2240]!	; 0x8c0

00010d3c <mchar_async_destroy@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #1044480	; 0xff000
   10d44:	ldr	pc, [ip, #2232]!	; 0x8b8

00010d48 <mycore_utils_mhash_add_with_choice@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #1044480	; 0xff000
   10d50:	ldr	pc, [ip, #2224]!	; 0x8b0

00010d54 <myhtml_tree_node_delete@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #1044480	; 0xff000
   10d5c:	ldr	pc, [ip, #2216]!	; 0x8a8

00010d60 <mycore_free@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #1044480	; 0xff000
   10d68:	ldr	pc, [ip, #2208]!	; 0x8a0

00010d6c <mythread_queue_list_wait_for_done@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #1044480	; 0xff000
   10d74:	ldr	pc, [ip, #2200]!	; 0x898

00010d78 <mycore_string_whitespace_from_begin@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #1044480	; 0xff000
   10d80:	ldr	pc, [ip, #2192]!	; 0x890

00010d84 <myhtml_tree_node_remove@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #1044480	; 0xff000
   10d8c:	ldr	pc, [ip, #2184]!	; 0x888

00010d90 <myhtml_collection_check_size@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #1044480	; 0xff000
   10d98:	ldr	pc, [ip, #2176]!	; 0x880

00010d9c <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #1044480	; 0xff000
   10da4:	ldr	pc, [ip, #2168]!	; 0x878

00010da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #1044480	; 0xff000
   10db0:	ldr	pc, [ip, #2160]!	; 0x870

00010db4 <myhtml_tree_open_elements_clean@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #1044480	; 0xff000
   10dbc:	ldr	pc, [ip, #2152]!	; 0x868

00010dc0 <myhtml_tree_node_insert_doctype@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #1044480	; 0xff000
   10dc8:	ldr	pc, [ip, #2144]!	; 0x860

00010dcc <myhtml_tree_template_insertion_destroy@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #1044480	; 0xff000
   10dd4:	ldr	pc, [ip, #2136]!	; 0x858

00010dd8 <myhtml_tag_destroy@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #1044480	; 0xff000
   10de0:	ldr	pc, [ip, #2128]!	; 0x850

00010de4 <mcsync_mutex_clean@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #1044480	; 0xff000
   10dec:	ldr	pc, [ip, #2120]!	; 0x848

00010df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #1044480	; 0xff000
   10df8:	ldr	pc, [ip, #2112]!	; 0x840

00010dfc <myhtml_serialization_tree_callback@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #1044480	; 0xff000
   10e04:	ldr	pc, [ip, #2104]!	; 0x838

00010e08 <myhtml_stream_buffer_create@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #1044480	; 0xff000
   10e10:	ldr	pc, [ip, #2096]!	; 0x830

00010e14 <myhtml_tree_appropriate_place_inserting@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #1044480	; 0xff000
   10e1c:	ldr	pc, [ip, #2088]!	; 0x828

00010e20 <myencoding_codepoint_to_ascii_utf_8@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #1044480	; 0xff000
   10e28:	ldr	pc, [ip, #2080]!	; 0x820

00010e2c <myhtml_token_attr_remove_by_name@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #1044480	; 0xff000
   10e34:	ldr	pc, [ip, #2072]!	; 0x818

00010e38 <mycore_utils_mhash_rebuild_add_entry@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #1044480	; 0xff000
   10e40:	ldr	pc, [ip, #2064]!	; 0x810

00010e44 <myhtml_token_attr_by_name@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #1044480	; 0xff000
   10e4c:	ldr	pc, [ip, #2056]!	; 0x808

00010e50 <mcsync_unlock@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #1044480	; 0xff000
   10e58:	ldr	pc, [ip, #2048]!	; 0x800

00010e5c <myhtml_tree_token_list_append@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #1044480	; 0xff000
   10e64:	ldr	pc, [ip, #2040]!	; 0x7f8

00010e68 <mycore_utils_avl_tree_node_create_root@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #1044480	; 0xff000
   10e70:	ldr	pc, [ip, #2032]!	; 0x7f0

00010e74 <mythread_queue_list_entry_make_stream@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #1044480	; 0xff000
   10e7c:	ldr	pc, [ip, #2024]!	; 0x7e8

00010e80 <mycore_strncmp@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #1044480	; 0xff000
   10e88:	ldr	pc, [ip, #2016]!	; 0x7e0

00010e8c <mycore_utils_mhash_create_entry@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #1044480	; 0xff000
   10e94:	ldr	pc, [ip, #2008]!	; 0x7d8

00010e98 <myhtml_tree_element_in_scope@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #1044480	; 0xff000
   10ea0:	ldr	pc, [ip, #2000]!	; 0x7d0

00010ea4 <myencoding_index_gb18030_ranges_code_point@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #1044480	; 0xff000
   10eac:	ldr	pc, [ip, #1992]!	; 0x7c8

00010eb0 <__mtree_search_lowercase_to_start@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #1044480	; 0xff000
   10eb8:	ldr	pc, [ip, #1984]!	; 0x7c0

00010ebc <fseek@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #1044480	; 0xff000
   10ec4:	ldr	pc, [ip, #1976]!	; 0x7b8

00010ec8 <myhtml_node_clone@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #1044480	; 0xff000
   10ed0:	ldr	pc, [ip, #1968]!	; 0x7b0

00010ed4 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #1044480	; 0xff000
   10edc:	ldr	pc, [ip, #1960]!	; 0x7a8

00010ee0 <myencoding_detect_russian@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #1044480	; 0xff000
   10ee8:	ldr	pc, [ip, #1952]!	; 0x7a0

00010eec <pthread_attr_setdetachstate@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #1044480	; 0xff000
   10ef4:	ldr	pc, [ip, #1944]!	; 0x798

00010ef8 <mchar_async_cache_delete@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #1044480	; 0xff000
   10f00:	ldr	pc, [ip, #1936]!	; 0x790

00010f04 <mcobject_clean@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #1044480	; 0xff000
   10f0c:	ldr	pc, [ip, #1928]!	; 0x788

00010f10 <myhtml_token_node_clean@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #1044480	; 0xff000
   10f18:	ldr	pc, [ip, #1920]!	; 0x780

00010f1c <myhtml_token_delete@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #1044480	; 0xff000
   10f24:	ldr	pc, [ip, #1912]!	; 0x778

00010f28 <strncmp@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #1044480	; 0xff000
   10f30:	ldr	pc, [ip, #1904]!	; 0x770

00010f34 <mcsimple_get_by_absolute_position@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #1044480	; 0xff000
   10f3c:	ldr	pc, [ip, #1896]!	; 0x768

00010f40 <mcsync_mutex_try_lock@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #1044480	; 0xff000
   10f48:	ldr	pc, [ip, #1888]!	; 0x760

00010f4c <mycore_utils_avl_tree_node_height@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #1044480	; 0xff000
   10f54:	ldr	pc, [ip, #1880]!	; 0x758

00010f58 <mycore_utils_avl_tree_node_clean@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #1044480	; 0xff000
   10f60:	ldr	pc, [ip, #1872]!	; 0x750

00010f64 <myhtml_tree_clear_stack_back_table_context@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #1044480	; 0xff000
   10f6c:	ldr	pc, [ip, #1864]!	; 0x748

00010f70 <myhtml_tree_node_clone@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #1044480	; 0xff000
   10f78:	ldr	pc, [ip, #1856]!	; 0x740

00010f7c <myhtml_tree_token_list_clean@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #1044480	; 0xff000
   10f84:	ldr	pc, [ip, #1848]!	; 0x738

00010f88 <myhtml_parser_stream@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #1044480	; 0xff000
   10f90:	ldr	pc, [ip, #1840]!	; 0x730

00010f94 <myhtml_token_create@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #1044480	; 0xff000
   10f9c:	ldr	pc, [ip, #1832]!	; 0x728

00010fa0 <myhtml_parser_token_data_to_string_lowercase@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #1044480	; 0xff000
   10fa8:	ldr	pc, [ip, #1824]!	; 0x720

00010fac <myencoding_detect_utf_8@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #1044480	; 0xff000
   10fb4:	ldr	pc, [ip, #1816]!	; 0x718

00010fb8 <mcsync_spin_unlock@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #1044480	; 0xff000
   10fc0:	ldr	pc, [ip, #1808]!	; 0x710

00010fc4 <myhtml_string_append_lowercase_with_preprocessing@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #1044480	; 0xff000
   10fcc:	ldr	pc, [ip, #1800]!	; 0x708

00010fd0 <mcsync_mutex_lock@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #1044480	; 0xff000
   10fd8:	ldr	pc, [ip, #1792]!	; 0x700

00010fdc <myhtml_tree_open_elements_find@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #1044480	; 0xff000
   10fe4:	ldr	pc, [ip, #1784]!	; 0x6f8

00010fe8 <mcobject_async_clean@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #1044480	; 0xff000
   10ff0:	ldr	pc, [ip, #1776]!	; 0x6f0

00010ff4 <mchar_async_mem_malloc@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #1044480	; 0xff000
   10ffc:	ldr	pc, [ip, #1768]!	; 0x6e8

00011000 <myhtml_data_process_string_append_char@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #1044480	; 0xff000
   11008:	ldr	pc, [ip, #1760]!	; 0x6e0

0001100c <myhtml_tag_clean@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #1044480	; 0xff000
   11014:	ldr	pc, [ip, #1752]!	; 0x6d8

00011018 <mythread_thread_attr_destroy@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #1044480	; 0xff000
   11020:	ldr	pc, [ip, #1744]!	; 0x6d0

00011024 <mycore_string_clean_all@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #1044480	; 0xff000
   1102c:	ldr	pc, [ip, #1736]!	; 0x6c8

00011030 <myhtml_tree_node_clean@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #1044480	; 0xff000
   11038:	ldr	pc, [ip, #1728]!	; 0x6c0

0001103c <mythread_init@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #1044480	; 0xff000
   11044:	ldr	pc, [ip, #1720]!	; 0x6b8

Disassembly of section .text:

00011048 <mycore_incoming_buffer_add@@Base-0x124>:
   11048:	ldr	r3, [pc, #20]	; 11064 <mythread_init@plt+0x28>
   1104c:	ldr	r2, [pc, #20]	; 11068 <mythread_init@plt+0x2c>
   11050:	add	r3, pc, r3
   11054:	ldr	r2, [r3, r2]
   11058:	cmp	r2, #0
   1105c:	bxeq	lr
   11060:	b	10574 <__gmon_start__@plt>
   11064:	andeq	lr, pc, r8, lsr #31
   11068:	andeq	r0, r0, r0, ror r8
   1106c:	ldr	r0, [pc, #44]	; 110a0 <mythread_init@plt+0x64>
   11070:	ldr	r3, [pc, #44]	; 110a4 <mythread_init@plt+0x68>
   11074:	add	r0, pc, r0
   11078:	add	r3, pc, r3
   1107c:	cmp	r3, r0
   11080:	ldr	r3, [pc, #32]	; 110a8 <mythread_init@plt+0x6c>
   11084:	add	r3, pc, r3
   11088:	bxeq	lr
   1108c:	ldr	r2, [pc, #24]	; 110ac <mythread_init@plt+0x70>
   11090:	ldr	r3, [r3, r2]
   11094:	cmp	r3, #0
   11098:	bxeq	lr
   1109c:	bx	r3
   110a0:	andeq	pc, pc, r0, asr r9	; <UNPREDICTABLE>
   110a4:	andeq	pc, pc, ip, asr #18
   110a8:	andeq	lr, pc, r4, ror pc	; <UNPREDICTABLE>
   110ac:	andeq	r0, r0, ip, lsr r7
   110b0:	ldr	r0, [pc, #56]	; 110f0 <mythread_init@plt+0xb4>
   110b4:	ldr	r3, [pc, #56]	; 110f4 <mythread_init@plt+0xb8>
   110b8:	add	r0, pc, r0
   110bc:	add	r3, pc, r3
   110c0:	sub	r1, r3, r0
   110c4:	ldr	r3, [pc, #44]	; 110f8 <mythread_init@plt+0xbc>
   110c8:	asr	r1, r1, #2
   110cc:	add	r3, pc, r3
   110d0:	add	r1, r1, r1, lsr #31
   110d4:	asrs	r1, r1, #1
   110d8:	bxeq	lr
   110dc:	ldr	r2, [pc, #24]	; 110fc <mythread_init@plt+0xc0>
   110e0:	ldr	r3, [r3, r2]
   110e4:	cmp	r3, #0
   110e8:	bxeq	lr
   110ec:	bx	r3
   110f0:	andeq	pc, pc, ip, lsl #18
   110f4:	andeq	pc, pc, r8, lsl #18
   110f8:	andeq	lr, pc, ip, lsr #30
   110fc:	andeq	r0, r0, r0, lsl #19
   11100:	ldr	r3, [pc, #76]	; 11154 <mythread_init@plt+0x118>
   11104:	ldr	r2, [pc, #76]	; 11158 <mythread_init@plt+0x11c>
   11108:	add	r3, pc, r3
   1110c:	add	r2, pc, r2
   11110:	ldrb	r3, [r3]
   11114:	cmp	r3, #0
   11118:	bxne	lr
   1111c:	ldr	r3, [pc, #56]	; 1115c <mythread_init@plt+0x120>
   11120:	push	{r4, lr}
   11124:	ldr	r3, [r2, r3]
   11128:	cmp	r3, #0
   1112c:	beq	1113c <mythread_init@plt+0x100>
   11130:	ldr	r3, [pc, #40]	; 11160 <mythread_init@plt+0x124>
   11134:	ldr	r0, [pc, r3]
   11138:	bl	fce0 <__cxa_finalize@plt>
   1113c:	bl	1106c <mythread_init@plt+0x30>
   11140:	ldr	r3, [pc, #28]	; 11164 <mythread_init@plt+0x128>
   11144:	mov	r2, #1
   11148:	add	r3, pc, r3
   1114c:	strb	r2, [r3]
   11150:	pop	{r4, pc}
   11154:			; <UNDEFINED> instruction: 0x000ff8bc
   11158:	andeq	lr, pc, ip, ror #29
   1115c:	andeq	r0, r0, r8, lsr #14
   11160:	andeq	pc, pc, ip, lsl #17
   11164:	andeq	pc, pc, ip, ror r8	; <UNPREDICTABLE>
   11168:	b	110b0 <mythread_init@plt+0x74>

0001116c <mycore_incoming_buffer_add@@Base>:
   1116c:	push	{r4, r5, r6, lr}
   11170:	mov	r4, r0
   11174:	mov	r0, r1
   11178:	mov	r1, #0
   1117c:	mov	r5, r2
   11180:	mov	r6, r3
   11184:	bl	109f4 <mcobject_malloc@plt>
   11188:	mov	r3, #0
   1118c:	str	r5, [r0]
   11190:	cmp	r4, r3
   11194:	stmib	r0, {r3, r6}
   11198:	ldrdne	r2, [r4, #8]
   1119c:	streq	r4, [r0, #12]
   111a0:	addne	r3, r3, r2
   111a4:	strne	r3, [r0, #12]
   111a8:	mov	r3, #0
   111ac:	strne	r0, [r4, #20]
   111b0:	str	r4, [r0, #16]
   111b4:	str	r3, [r0, #20]
   111b8:	pop	{r4, r5, r6, pc}

000111bc <mycore_incoming_buffer_clean@@Base>:
   111bc:	mov	r2, #24
   111c0:	mov	r1, #0
   111c4:	b	10844 <memset@plt>

000111c8 <mycore_incoming_buffer_split@@Base>:
   111c8:	push	{r4, r5, r6, r7, r8, lr}
   111cc:	mov	r4, r0
   111d0:	mov	r0, r1
   111d4:	mov	r1, #0
   111d8:	mov	r7, r2
   111dc:	ldr	r5, [r4, #12]
   111e0:	sub	r6, r2, r5
   111e4:	bl	109f4 <mcobject_malloc@plt>
   111e8:	ldr	r2, [r4, #8]
   111ec:	add	r5, r5, r2
   111f0:	sub	r2, r5, r7
   111f4:	str	r2, [r0, #4]
   111f8:	str	r2, [r0, #8]
   111fc:	ldr	r2, [r4]
   11200:	add	r2, r2, r6
   11204:	str	r2, [r0]
   11208:	ldr	r2, [r4, #12]
   1120c:	str	r4, [r0, #16]
   11210:	add	r2, r2, r6
   11214:	str	r2, [r0, #12]
   11218:	mov	r2, #0
   1121c:	str	r2, [r0, #20]
   11220:	str	r6, [r4, #4]
   11224:	str	r6, [r4, #8]
   11228:	str	r0, [r4, #20]
   1122c:	pop	{r4, r5, r6, r7, r8, pc}

00011230 <mycore_incoming_buffer_find_by_position@@Base>:
   11230:	ldr	r3, [r0, #12]
   11234:	cmp	r3, r1
   11238:	bcc	11264 <mycore_incoming_buffer_find_by_position@@Base+0x34>
   1123c:	ldr	r3, [r0, #12]
   11240:	cmp	r3, r1
   11244:	bxls	lr
   11248:	ldr	r0, [r0, #16]
   1124c:	cmp	r0, #0
   11250:	bne	1123c <mycore_incoming_buffer_find_by_position@@Base+0xc>
   11254:	bx	lr
   11258:	ldr	r0, [r0, #20]
   1125c:	cmp	r0, #0
   11260:	bxeq	lr
   11264:	ldrd	r2, [r0, #8]
   11268:	add	r3, r3, r2
   1126c:	cmp	r3, r1
   11270:	bcc	11258 <mycore_incoming_buffer_find_by_position@@Base+0x28>
   11274:	bx	lr

00011278 <mycore_incoming_buffer_data@@Base>:
   11278:	ldr	r0, [r0]
   1127c:	bx	lr

00011280 <mycore_incoming_buffer_length@@Base>:
   11280:	ldr	r0, [r0, #4]
   11284:	bx	lr

00011288 <mycore_incoming_buffer_size@@Base>:
   11288:	ldr	r0, [r0, #8]
   1128c:	bx	lr

00011290 <mycore_incoming_buffer_offset@@Base>:
   11290:	ldr	r0, [r0, #12]
   11294:	bx	lr

00011298 <mycore_incoming_buffer_relative_begin@@Base>:
   11298:	ldr	r0, [r0, #12]
   1129c:	sub	r0, r1, r0
   112a0:	bx	lr

000112a4 <mycore_incoming_buffer_available_length@@Base>:
   112a4:	ldr	r3, [r0, #8]
   112a8:	add	r0, r1, r2
   112ac:	cmp	r0, r3
   112b0:	subhi	r2, r3, r1
   112b4:	mov	r0, r2
   112b8:	bx	lr

000112bc <mycore_incoming_buffer_next@@Base>:
   112bc:	ldr	r0, [r0, #20]
   112c0:	bx	lr

000112c4 <mycore_incoming_buffer_prev@@Base>:
   112c4:	ldr	r0, [r0, #16]
   112c8:	bx	lr

000112cc <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base>:
   112cc:	ldr	r3, [r0]
   112d0:	push	{r4, r5, r6, r7, r8, lr}
   112d4:	ldr	ip, [r1]
   112d8:	ldr	r2, [r3, #8]
   112dc:	ldr	r6, [pc, #132]	; 11368 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x9c>
   112e0:	cmp	ip, r2
   112e4:	ldrcs	r3, [r3, #20]
   112e8:	movcs	r2, #0
   112ec:	add	r6, pc, r6
   112f0:	strcs	r2, [r1]
   112f4:	mov	r2, #0
   112f8:	mov	r4, r2
   112fc:	mov	r7, r2
   11300:	ldr	r5, [r3]
   11304:	ldr	ip, [r1]
   11308:	ldrb	lr, [r5, ip]
   1130c:	ldrb	r8, [r6, lr]
   11310:	cmp	r8, #255	; 0xff
   11314:	cmpne	r4, #6
   11318:	beq	1135c <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x90>
   1131c:	add	lr, r6, lr
   11320:	add	ip, ip, #1
   11324:	ldrb	lr, [lr, #256]	; 0x100
   11328:	add	r4, r4, #1
   1132c:	str	ip, [r1]
   11330:	orr	r2, lr, r2, lsl #4
   11334:	ldr	lr, [r3, #8]
   11338:	cmp	ip, lr
   1133c:	bcc	11304 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x38>
   11340:	ldr	ip, [r3, #20]
   11344:	cmp	ip, #0
   11348:	beq	1135c <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x90>
   1134c:	ldr	r5, [r3]
   11350:	mov	r3, ip
   11354:	str	r7, [r1]
   11358:	b	11304 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x38>
   1135c:	str	r3, [r0]
   11360:	mov	r0, r2
   11364:	pop	{r4, r5, r6, r7, r8, pc}
   11368:	andeq	r7, r1, r4, lsl #21

0001136c <mycore_incoming_buffer_escaped_case_cmp@@Base>:
   1136c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11370:	mov	r4, r3
   11374:	mov	r8, r1
   11378:	mov	r6, r2
   1137c:	mov	r7, r0
   11380:	ldr	r3, [r0]
   11384:	ldr	r1, [r4]
   11388:	ldr	r2, [r3, #8]
   1138c:	str	r3, [sp, #4]
   11390:	cmp	r1, r2
   11394:	bcc	113b0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x44>
   11398:	ldr	r3, [r3, #20]
   1139c:	cmp	r3, #0
   113a0:	beq	113e4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x78>
   113a4:	mov	r2, #0
   113a8:	str	r3, [sp, #4]
   113ac:	str	r2, [r4]
   113b0:	ldr	r3, [sp, #4]
   113b4:	mov	r5, #0
   113b8:	add	fp, sp, #4
   113bc:	ldr	r9, [pc, #220]	; 114a0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x134>
   113c0:	ldr	sl, [pc, #220]	; 114a4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x138>
   113c4:	ldr	r1, [r3]
   113c8:	add	r9, pc, r9
   113cc:	add	sl, pc, sl
   113d0:	cmp	r5, r6
   113d4:	bne	113f0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x84>
   113d8:	ldr	r3, [sp, #4]
   113dc:	sub	r6, r6, r5
   113e0:	str	r3, [r7]
   113e4:	mov	r0, r6
   113e8:	add	sp, sp, #12
   113ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113f0:	ldr	r3, [r4]
   113f4:	ldrb	r2, [r1, r3]
   113f8:	cmp	r2, #92	; 0x5c
   113fc:	bne	11478 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x10c>
   11400:	add	r3, r3, #1
   11404:	mov	r1, r4
   11408:	mov	r0, fp
   1140c:	str	r3, [r4]
   11410:	bl	10190 <mycore_incoming_buffer_convert_one_escaped_to_code_point@plt>
   11414:	cmp	r0, #255	; 0xff
   11418:	bhi	113d8 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x6c>
   1141c:	ldrb	r3, [r8, r5]
   11420:	add	r0, sl, r0
   11424:	ldrb	r1, [r0, #512]	; 0x200
   11428:	ldr	r2, [sp, #4]
   1142c:	add	r3, sl, r3
   11430:	ldrb	r3, [r3, #512]	; 0x200
   11434:	cmp	r1, r3
   11438:	bne	113d8 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x6c>
   1143c:	ldr	r1, [r2]
   11440:	add	r5, r5, #1
   11444:	ldr	r3, [sp, #4]
   11448:	ldr	r0, [r4]
   1144c:	ldr	r2, [r3, #8]
   11450:	cmp	r0, r2
   11454:	bcc	113d0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x64>
   11458:	ldr	r3, [r3, #20]
   1145c:	cmp	r3, #0
   11460:	beq	113d8 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x6c>
   11464:	ldr	r1, [r3]
   11468:	str	r3, [sp, #4]
   1146c:	mov	r3, #0
   11470:	str	r3, [r4]
   11474:	b	113d0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x64>
   11478:	ldrb	r0, [r8, r5]
   1147c:	add	r2, r9, r2
   11480:	ldrb	ip, [r2, #512]	; 0x200
   11484:	add	r0, r9, r0
   11488:	ldrb	r2, [r0, #512]	; 0x200
   1148c:	cmp	ip, r2
   11490:	bne	113d8 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x6c>
   11494:	add	r3, r3, #1
   11498:	str	r3, [r4]
   1149c:	b	11440 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xd4>
   114a0:	andeq	r7, r1, r8, lsr #19
   114a4:	andeq	r7, r1, r4, lsr #19

000114a8 <mycore_string_clean@@Base>:
   114a8:	mov	r3, #0
   114ac:	str	r3, [r0, #8]
   114b0:	bx	lr

000114b4 <mycore_string_init@@Base>:
   114b4:	push	{r4, r5, r6, r7, r8, lr}
   114b8:	mov	r4, r2
   114bc:	mov	r7, r1
   114c0:	mov	r5, r3
   114c4:	mov	r6, r0
   114c8:	mov	r2, r3
   114cc:	bl	108a4 <mchar_async_malloc@plt>
   114d0:	stm	r4, {r0, r5}
   114d4:	mov	r0, r4
   114d8:	strd	r6, [r4, #12]
   114dc:	bl	10cac <mycore_string_clean@plt>
   114e0:	ldr	r0, [r4]
   114e4:	pop	{r4, r5, r6, r7, r8, pc}

000114e8 <mycore_string_clean_all@@Base>:
   114e8:	mov	r2, #20
   114ec:	mov	r1, #0
   114f0:	b	10844 <memset@plt>

000114f4 <mycore_string_destroy@@Base>:
   114f4:	push	{r4, r5, r6, lr}
   114f8:	subs	r4, r0, #0
   114fc:	beq	11538 <mycore_string_destroy@@Base+0x44>
   11500:	mov	r5, r1
   11504:	ldr	r2, [r4]
   11508:	cmp	r2, #0
   1150c:	beq	11524 <mycore_string_destroy@@Base+0x30>
   11510:	ldr	r0, [r4, #12]
   11514:	cmp	r0, #0
   11518:	beq	11524 <mycore_string_destroy@@Base+0x30>
   1151c:	ldr	r1, [r4, #16]
   11520:	bl	106ac <mchar_async_free@plt>
   11524:	cmp	r5, #0
   11528:	beq	11538 <mycore_string_destroy@@Base+0x44>
   1152c:	mov	r0, r4
   11530:	mov	r4, #0
   11534:	bl	10d60 <mycore_free@plt>
   11538:	mov	r0, r4
   1153c:	pop	{r4, r5, r6, pc}

00011540 <mycore_string_raw_clean@@Base>:
   11540:	mov	r3, #0
   11544:	str	r3, [r0, #8]
   11548:	bx	lr

0001154c <mycore_string_raw_clean_all@@Base>:
   1154c:	mov	r3, #0
   11550:	str	r3, [r0]
   11554:	str	r3, [r0, #4]
   11558:	str	r3, [r0, #8]
   1155c:	bx	lr

00011560 <mycore_string_raw_destroy@@Base>:
   11560:	push	{r4, r5, r6, lr}
   11564:	subs	r4, r0, #0
   11568:	beq	1159c <mycore_string_raw_destroy@@Base+0x3c>
   1156c:	mov	r5, r1
   11570:	ldr	r0, [r4]
   11574:	cmp	r0, #0
   11578:	beq	11588 <mycore_string_raw_destroy@@Base+0x28>
   1157c:	bl	10d60 <mycore_free@plt>
   11580:	mov	r3, #0
   11584:	str	r3, [r4]
   11588:	cmp	r5, #0
   1158c:	beq	1159c <mycore_string_raw_destroy@@Base+0x3c>
   11590:	mov	r0, r4
   11594:	mov	r4, #0
   11598:	bl	10d60 <mycore_free@plt>
   1159c:	mov	r0, r4
   115a0:	pop	{r4, r5, r6, pc}

000115a4 <mycore_string_realloc@@Base>:
   115a4:	push	{r0, r1, r2, r4, r5, lr}
   115a8:	cmp	r0, #0
   115ac:	beq	115d4 <mycore_string_realloc@@Base+0x30>
   115b0:	mov	r4, r0
   115b4:	mov	r5, r1
   115b8:	str	r1, [sp]
   115bc:	ldr	r2, [r0]
   115c0:	ldr	r3, [r0, #8]
   115c4:	ldrd	r0, [r0, #12]
   115c8:	bl	ff5c <mchar_async_realloc@plt>
   115cc:	cmp	r0, #0
   115d0:	stmne	r4, {r0, r5}
   115d4:	add	sp, sp, #12
   115d8:	pop	{r4, r5, pc}

000115dc <mycore_string_data_alloc@@Base>:
   115dc:	b	108a4 <mchar_async_malloc@plt>

000115e0 <mycore_string_data_realloc@@Base>:
   115e0:	b	ff5c <mchar_async_realloc@plt>

000115e4 <mycore_string_data_free@@Base>:
   115e4:	b	106ac <mchar_async_free@plt>

000115e8 <mycore_string_data@@Base>:
   115e8:	cmp	r0, #0
   115ec:	ldrne	r0, [r0]
   115f0:	bx	lr

000115f4 <mycore_string_length@@Base>:
   115f4:	cmp	r0, #0
   115f8:	ldrne	r0, [r0, #8]
   115fc:	bx	lr

00011600 <mycore_string_size@@Base>:
   11600:	cmp	r0, #0
   11604:	ldrne	r0, [r0, #4]
   11608:	bx	lr

0001160c <mycore_string_data_set@@Base>:
   1160c:	cmp	r0, #0
   11610:	strne	r1, [r0]
   11614:	movne	r0, r1
   11618:	bx	lr

0001161c <mycore_string_size_set@@Base>:
   1161c:	cmp	r0, #0
   11620:	moveq	r1, r0
   11624:	strne	r1, [r0, #4]
   11628:	mov	r0, r1
   1162c:	bx	lr

00011630 <mycore_string_length_set@@Base>:
   11630:	cmp	r0, #0
   11634:	moveq	r1, r0
   11638:	strne	r1, [r0, #8]
   1163c:	mov	r0, r1
   11640:	bx	lr

00011644 <mycore_string_append@@Base>:
   11644:	ldr	r3, [r0, #8]
   11648:	push	{r4, r5, r6, lr}
   1164c:	mov	r6, r1
   11650:	add	r1, r2, #1
   11654:	mov	r4, r0
   11658:	mov	r5, r2
   1165c:	add	r1, r1, r3
   11660:	ldr	r3, [r0, #4]
   11664:	cmp	r1, r3
   11668:	bcc	11670 <mycore_string_append@@Base+0x2c>
   1166c:	bl	108f8 <mycore_string_realloc@plt>
   11670:	ldr	r0, [r4]
   11674:	mov	r2, r5
   11678:	mov	r1, r6
   1167c:	ldr	r3, [r4, #8]
   11680:	add	r0, r0, r3
   11684:	bl	fefc <memcpy@plt>
   11688:	ldr	r3, [r4, #8]
   1168c:	mov	r2, #0
   11690:	add	r5, r5, r3
   11694:	ldr	r3, [r4]
   11698:	str	r5, [r4, #8]
   1169c:	strb	r2, [r3, r5]
   116a0:	pop	{r4, r5, r6, pc}

000116a4 <mycore_string_append_one@@Base>:
   116a4:	push	{r4, r5, r6, lr}
   116a8:	mov	r5, r1
   116ac:	mov	r4, r0
   116b0:	ldr	r3, [r0, #4]
   116b4:	ldr	r1, [r0, #8]
   116b8:	add	r2, r1, #2
   116bc:	cmp	r2, r3
   116c0:	bcc	116cc <mycore_string_append_one@@Base+0x28>
   116c4:	add	r1, r1, #3
   116c8:	bl	108f8 <mycore_string_realloc@plt>
   116cc:	ldr	r2, [r4]
   116d0:	mov	r1, #0
   116d4:	ldr	r3, [r4, #8]
   116d8:	strb	r5, [r2, r3]
   116dc:	ldr	r2, [r4]
   116e0:	ldr	r3, [r4, #8]
   116e4:	add	r3, r3, #1
   116e8:	str	r3, [r4, #8]
   116ec:	strb	r1, [r2, r3]
   116f0:	pop	{r4, r5, r6, pc}

000116f4 <mycore_string_append_lowercase@@Base>:
   116f4:	ldr	r3, [r0, #8]
   116f8:	push	{r4, r5, r6, lr}
   116fc:	mov	r6, r1
   11700:	add	r1, r2, #1
   11704:	mov	r4, r0
   11708:	mov	r5, r2
   1170c:	add	r1, r1, r3
   11710:	ldr	r3, [r0, #4]
   11714:	cmp	r1, r3
   11718:	bcc	11720 <mycore_string_append_lowercase@@Base+0x2c>
   1171c:	bl	108f8 <mycore_string_realloc@plt>
   11720:	ldr	r2, [pc, #68]	; 1176c <mycore_string_append_lowercase@@Base+0x78>
   11724:	ldr	r1, [r4]
   11728:	ldr	r3, [r4, #8]
   1172c:	add	r2, pc, r2
   11730:	add	r1, r1, r3
   11734:	mov	r3, #0
   11738:	cmp	r3, r5
   1173c:	bne	11758 <mycore_string_append_lowercase@@Base+0x64>
   11740:	mov	r2, #0
   11744:	strb	r2, [r1, r3]
   11748:	ldr	r2, [r4, #8]
   1174c:	add	r3, r2, r3
   11750:	str	r3, [r4, #8]
   11754:	pop	{r4, r5, r6, pc}
   11758:	ldrb	r0, [r6, r3]
   1175c:	ldrb	r0, [r2, r0]
   11760:	strb	r0, [r1, r3]
   11764:	add	r3, r3, #1
   11768:	b	11738 <mycore_string_append_lowercase@@Base+0x44>
   1176c:	andeq	r7, r1, r4, asr #18

00011770 <mycore_string_copy@@Base>:
   11770:	ldr	r2, [r1, #8]
   11774:	ldr	r1, [r1]
   11778:	b	10868 <mycore_string_append@plt>

0001177c <mycore_string_raw_copy@@Base>:
   1177c:	mov	r3, #0
   11780:	strb	r3, [r0, r2]
   11784:	add	r3, r1, r2
   11788:	add	r0, r0, r2
   1178c:	cmp	r3, r1
   11790:	bne	1179c <mycore_string_raw_copy@@Base+0x20>
   11794:	mov	r0, #0
   11798:	bx	lr
   1179c:	ldrb	r2, [r3, #-1]!
   117a0:	strb	r2, [r0, #-1]!
   117a4:	b	1178c <mycore_string_raw_copy@@Base+0x10>

000117a8 <mycore_string_raw_set_replacement_character@@Base>:
   117a8:	ldr	r3, [r0]
   117ac:	mvn	r2, #16
   117b0:	strb	r2, [r3, r1]
   117b4:	mvn	r2, #64	; 0x40
   117b8:	ldr	r3, [r0]
   117bc:	add	r3, r3, r1
   117c0:	strb	r2, [r3, #1]
   117c4:	mvn	r2, #66	; 0x42
   117c8:	ldr	r3, [r0]
   117cc:	mov	r0, #3
   117d0:	add	r3, r3, r1
   117d4:	strb	r2, [r3, #2]
   117d8:	bx	lr

000117dc <mycore_string_append_with_replacement_null_characters@@Base>:
   117dc:	ldr	r3, [r0, #8]
   117e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   117e4:	mov	r5, r1
   117e8:	add	r1, r2, #1
   117ec:	mov	r4, r0
   117f0:	mov	r6, r2
   117f4:	add	r1, r1, r3
   117f8:	ldr	r3, [r0, #4]
   117fc:	cmp	r1, r3
   11800:	bcc	11808 <mycore_string_append_with_replacement_null_characters@@Base+0x2c>
   11804:	bl	108f8 <mycore_string_realloc@plt>
   11808:	ldr	r3, [r4]
   1180c:	add	r6, r5, r6
   11810:	mvn	r7, #16
   11814:	mvn	r8, #64	; 0x40
   11818:	mvn	r9, #66	; 0x42
   1181c:	cmp	r6, r5
   11820:	bne	11838 <mycore_string_append_with_replacement_null_characters@@Base+0x5c>
   11824:	ldr	r2, [r4]
   11828:	mov	r1, #0
   1182c:	ldr	r3, [r4, #8]
   11830:	strb	r1, [r2, r3]
   11834:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11838:	ldrb	r2, [r5], #1
   1183c:	cmp	r2, #0
   11840:	ldrne	r1, [r4, #8]
   11844:	strbne	r2, [r3, r1]
   11848:	bne	11888 <mycore_string_append_with_replacement_null_characters@@Base+0xac>
   1184c:	ldr	r1, [r4, #4]
   11850:	mov	r0, r4
   11854:	add	r1, r1, #5
   11858:	bl	108f8 <mycore_string_realloc@plt>
   1185c:	ldr	r3, [r4]
   11860:	ldr	r2, [r4, #8]
   11864:	strb	r7, [r3, r2]
   11868:	ldr	r2, [r4, #8]
   1186c:	add	r2, r2, #1
   11870:	str	r2, [r4, #8]
   11874:	strb	r8, [r3, r2]
   11878:	ldr	r2, [r4, #8]
   1187c:	add	r2, r2, #1
   11880:	str	r2, [r4, #8]
   11884:	strb	r9, [r3, r2]
   11888:	ldr	r2, [r4, #8]
   1188c:	add	r2, r2, #1
   11890:	str	r2, [r4, #8]
   11894:	b	1181c <mycore_string_append_with_replacement_null_characters@@Base+0x40>

00011898 <mycore_string_stay_only_whitespace@@Base>:
   11898:	push	{r4, lr}
   1189c:	mov	r2, #0
   118a0:	mov	r1, r2
   118a4:	ldr	r4, [pc, #64]	; 118ec <mycore_string_stay_only_whitespace@@Base+0x54>
   118a8:	ldr	ip, [r0]
   118ac:	ldr	r3, [r0, #8]
   118b0:	cmp	r3, r2
   118b4:	bhi	118c0 <mycore_string_stay_only_whitespace@@Base+0x28>
   118b8:	str	r1, [r0, #8]
   118bc:	pop	{r4, pc}
   118c0:	ldrb	lr, [ip, r2]
   118c4:	sub	r3, lr, #9
   118c8:	uxtb	r3, r3
   118cc:	cmp	r3, #23
   118d0:	bhi	118e4 <mycore_string_stay_only_whitespace@@Base+0x4c>
   118d4:	mvn	r3, r4, lsr r3
   118d8:	tst	r3, #1
   118dc:	strbeq	lr, [ip, r1]
   118e0:	addeq	r1, r1, #1
   118e4:	add	r2, r2, #1
   118e8:	b	118ac <mycore_string_stay_only_whitespace@@Base+0x14>
   118ec:	addeq	r0, r0, fp, lsl r0

000118f0 <mycore_string_crop_whitespace_from_begin@@Base>:
   118f0:	push	{r4, r5, r6, lr}
   118f4:	mov	r5, r0
   118f8:	mov	r4, #0
   118fc:	ldr	r1, [pc, #92]	; 11960 <mycore_string_crop_whitespace_from_begin@@Base+0x70>
   11900:	ldr	r0, [r0]
   11904:	ldr	r2, [r5, #8]
   11908:	cmp	r2, r4
   1190c:	bne	11938 <mycore_string_crop_whitespace_from_begin@@Base+0x48>
   11910:	cmp	r4, #0
   11914:	beq	11924 <mycore_string_crop_whitespace_from_begin@@Base+0x34>
   11918:	mov	r1, r4
   1191c:	bl	10bf8 <mchar_async_crop_first_chars_without_cache@plt>
   11920:	str	r0, [r5]
   11924:	ldr	r3, [r5, #8]
   11928:	mov	r0, r4
   1192c:	sub	r3, r3, r4
   11930:	str	r3, [r5, #8]
   11934:	pop	{r4, r5, r6, pc}
   11938:	ldrb	r3, [r0, r4]
   1193c:	sub	r3, r3, #9
   11940:	uxtb	r3, r3
   11944:	cmp	r3, #23
   11948:	bhi	11910 <mycore_string_crop_whitespace_from_begin@@Base+0x20>
   1194c:	mvn	r3, r1, lsr r3
   11950:	tst	r3, #1
   11954:	bne	11910 <mycore_string_crop_whitespace_from_begin@@Base+0x20>
   11958:	add	r4, r4, #1
   1195c:	b	11908 <mycore_string_crop_whitespace_from_begin@@Base+0x18>
   11960:	addeq	r0, r0, fp, lsl r0

00011964 <mycore_string_whitespace_from_begin@@Base>:
   11964:	ldr	ip, [pc, #56]	; 119a4 <mycore_string_whitespace_from_begin@@Base+0x40>
   11968:	ldr	r1, [r0]
   1196c:	ldr	r2, [r0, #8]
   11970:	mov	r0, #0
   11974:	cmp	r2, r0
   11978:	bxeq	lr
   1197c:	ldrb	r3, [r1, r0]
   11980:	sub	r3, r3, #9
   11984:	uxtb	r3, r3
   11988:	cmp	r3, #23
   1198c:	bxhi	lr
   11990:	mvn	r3, ip, lsr r3
   11994:	tst	r3, #1
   11998:	bxne	lr
   1199c:	add	r0, r0, #1
   119a0:	b	11974 <mycore_string_whitespace_from_begin@@Base+0x10>
   119a4:	addeq	r0, r0, fp, lsl r0

000119a8 <mythread_create@@Base>:
   119a8:	mov	r1, #40	; 0x28
   119ac:	mov	r0, #1
   119b0:	b	feb4 <mycore_calloc@plt>

000119b4 <mythread_init@@Base>:
   119b4:	push	{r4, r5, r6, lr}
   119b8:	mov	r4, r0
   119bc:	subs	r0, r2, #0
   119c0:	beq	11a14 <mythread_init@@Base+0x60>
   119c4:	mov	r5, #0
   119c8:	str	r5, [r4, #4]
   119cc:	str	r0, [r4, #8]
   119d0:	str	r3, [r4, #12]
   119d4:	str	r1, [r4, #32]
   119d8:	mov	r1, #40	; 0x28
   119dc:	bl	feb4 <mycore_calloc@plt>
   119e0:	cmp	r0, r5
   119e4:	str	r0, [r4]
   119e8:	beq	11a1c <mythread_init@@Base+0x68>
   119ec:	mov	r0, r4
   119f0:	bl	fe24 <mythread_thread_attr_init@plt>
   119f4:	cmp	r0, r5
   119f8:	str	r0, [r4, #20]
   119fc:	beq	11a24 <mythread_init@@Base+0x70>
   11a00:	mov	r0, r4
   11a04:	bl	fc44 <mythread_nanosleep_create@plt>
   11a08:	str	r0, [r4, #24]
   11a0c:	mov	r0, r5
   11a10:	pop	{r4, r5, r6, pc}
   11a14:	mov	r0, #1
   11a18:	pop	{r4, r5, r6, pc}
   11a1c:	mov	r0, #2
   11a20:	pop	{r4, r5, r6, pc}
   11a24:	mov	r0, #12
   11a28:	pop	{r4, r5, r6, pc}

00011a2c <mythread_clean@@Base>:
   11a2c:	push	{r4, lr}
   11a30:	mov	r4, r0
   11a34:	ldr	r1, [r0, #20]
   11a38:	bl	103a0 <mythread_thread_attr_clean@plt>
   11a3c:	ldr	r0, [r4, #24]
   11a40:	bl	fbfc <mythread_nanosleep_clean@plt>
   11a44:	mov	r3, #0
   11a48:	str	r3, [r4, #28]
   11a4c:	pop	{r4, pc}

00011a50 <myhread_entry_create@@Base>:
   11a50:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11a54:	mov	lr, #0
   11a58:	ldr	ip, [r0, #4]
   11a5c:	str	lr, [r0, #28]
   11a60:	ldr	r6, [r0, #8]
   11a64:	cmp	ip, r6
   11a68:	movcs	r6, #15
   11a6c:	bcs	11ae4 <myhread_entry_create@@Base+0x94>
   11a70:	mov	r7, #40	; 0x28
   11a74:	ldr	r9, [r0]
   11a78:	mov	r8, r1
   11a7c:	mov	r4, r0
   11a80:	mul	r7, r7, ip
   11a84:	add	r5, r9, r7
   11a88:	str	ip, [r5, #4]
   11a8c:	str	r2, [r5, #8]
   11a90:	str	r6, [r5, #12]
   11a94:	str	r3, [r5, #16]
   11a98:	str	lr, [r5, #20]
   11a9c:	str	r0, [r5, #32]
   11aa0:	bl	fc44 <mythread_nanosleep_create@plt>
   11aa4:	str	r0, [r5, #28]
   11aa8:	mov	r0, r4
   11aac:	bl	10a90 <mythread_mutex_create@plt>
   11ab0:	cmp	r0, #0
   11ab4:	mov	r1, r0
   11ab8:	str	r0, [r5, #24]
   11abc:	moveq	r6, #71	; 0x47
   11ac0:	beq	11ae4 <myhread_entry_create@@Base+0x94>
   11ac4:	mov	r0, r4
   11ac8:	bl	10d30 <mythread_mutex_wait@plt>
   11acc:	subs	r6, r0, #0
   11ad0:	beq	11aec <myhread_entry_create@@Base+0x9c>
   11ad4:	mov	r0, r4
   11ad8:	ldr	r1, [r5, #24]
   11adc:	mov	r6, #72	; 0x48
   11ae0:	bl	105c8 <mythread_mutex_close@plt>
   11ae4:	mov	r0, r6
   11ae8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11aec:	add	r2, r5, #4
   11af0:	mov	r1, r8
   11af4:	mov	r0, r4
   11af8:	bl	fd28 <mythread_thread_create@plt>
   11afc:	cmp	r0, #0
   11b00:	str	r0, [r9, r7]
   11b04:	ldrne	r3, [r4, #4]
   11b08:	addne	r3, r3, #1
   11b0c:	strne	r3, [r4, #4]
   11b10:	bne	11ae4 <myhread_entry_create@@Base+0x94>
   11b14:	mov	r0, r4
   11b18:	ldr	r1, [r5, #24]
   11b1c:	mov	r6, #1
   11b20:	bl	105c8 <mythread_mutex_close@plt>
   11b24:	b	11ae4 <myhread_entry_create@@Base+0x94>

00011b28 <myhread_increase_id_by_entry_id@@Base>:
   11b28:	ldr	r0, [r0, #12]
   11b2c:	add	r0, r1, r0
   11b30:	bx	lr

00011b34 <mythread_join@@Base>:
   11b34:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11b38:	mov	r4, r0
   11b3c:	mov	r6, r1
   11b40:	mov	r8, r2
   11b44:	mov	r5, #0
   11b48:	mov	r9, #40	; 0x28
   11b4c:	ldr	r3, [r4, #4]
   11b50:	cmp	r3, r5
   11b54:	bhi	11b60 <mythread_join@@Base+0x2c>
   11b58:	mov	r0, #0
   11b5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b60:	cmp	r6, #0
   11b64:	mul	r7, r9, r5
   11b68:	beq	11b80 <mythread_join@@Base+0x4c>
   11b6c:	ldr	r1, [r4]
   11b70:	mov	r2, r8
   11b74:	mov	r0, r4
   11b78:	add	r1, r1, r7
   11b7c:	blx	r6
   11b80:	ldr	r3, [r4]
   11b84:	mov	r0, r4
   11b88:	ldr	r1, [r3, r7]
   11b8c:	bl	104fc <mythread_thread_join@plt>
   11b90:	cmp	r0, #0
   11b94:	addeq	r5, r5, #1
   11b98:	beq	11b4c <mythread_join@@Base+0x18>
   11b9c:	mov	r0, #1
   11ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00011ba4 <mythread_check_status@@Base>:
   11ba4:	ldr	r1, [r0, #4]
   11ba8:	mov	r3, #0
   11bac:	mov	ip, #40	; 0x28
   11bb0:	cmp	r1, r3
   11bb4:	bne	11bc4 <mythread_check_status@@Base+0x20>
   11bb8:	mov	r2, #0
   11bbc:	mov	r0, r2
   11bc0:	bx	lr
   11bc4:	ldr	r2, [r0]
   11bc8:	mla	r2, ip, r3, r2
   11bcc:	ldr	r2, [r2, #20]
   11bd0:	cmp	r2, #0
   11bd4:	bne	11bbc <mythread_check_status@@Base+0x18>
   11bd8:	add	r3, r3, #1
   11bdc:	b	11bb0 <mythread_check_status@@Base+0xc>

00011be0 <mythread_option@@Base>:
   11be0:	ldr	r0, [r0, #36]	; 0x24
   11be4:	bx	lr

00011be8 <mythread_option_set@@Base>:
   11be8:	str	r1, [r0, #36]	; 0x24
   11bec:	bx	lr

00011bf0 <mythread_quit@@Base>:
   11bf0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11bf4:	mov	r7, r1
   11bf8:	mov	r5, #0
   11bfc:	mov	r1, #2
   11c00:	mov	r9, #40	; 0x28
   11c04:	mov	r4, r0
   11c08:	mov	r8, r2
   11c0c:	bl	10a78 <mythread_option_set@plt>
   11c10:	ldr	r3, [r4, #4]
   11c14:	cmp	r3, r5
   11c18:	bhi	11c24 <mythread_quit@@Base+0x34>
   11c1c:	mov	r0, #0
   11c20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c24:	cmp	r7, #0
   11c28:	mul	r6, r9, r5
   11c2c:	beq	11c44 <mythread_quit@@Base+0x54>
   11c30:	ldr	r1, [r4]
   11c34:	mov	r2, r8
   11c38:	mov	r0, r4
   11c3c:	add	r1, r1, r6
   11c40:	blx	r7
   11c44:	ldr	r3, [r4]
   11c48:	mov	r0, r4
   11c4c:	ldr	r1, [r3, r6]
   11c50:	bl	104fc <mythread_thread_join@plt>
   11c54:	cmp	r0, #0
   11c58:	beq	11c64 <mythread_quit@@Base+0x74>
   11c5c:	mov	r0, #1
   11c60:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c64:	ldr	r3, [r4]
   11c68:	mov	r0, r4
   11c6c:	ldr	r1, [r3, r6]
   11c70:	bl	10988 <mythread_thread_destroy@plt>
   11c74:	cmp	r0, #0
   11c78:	bne	11c5c <mythread_quit@@Base+0x6c>
   11c7c:	add	r5, r5, #1
   11c80:	b	11c10 <mythread_quit@@Base+0x20>

00011c84 <mythread_stop@@Base>:
   11c84:	push	{r4, r5, r6, r7, r8, lr}
   11c88:	ldr	r4, [r0, #36]	; 0x24
   11c8c:	ands	r4, r4, #4
   11c90:	bne	11cdc <mythread_stop@@Base+0x58>
   11c94:	mov	r1, #4
   11c98:	mov	r7, #40	; 0x28
   11c9c:	mov	r5, r0
   11ca0:	bl	10a78 <mythread_option_set@plt>
   11ca4:	ldr	r3, [r5, #4]
   11ca8:	cmp	r3, r4
   11cac:	bls	11cdc <mythread_stop@@Base+0x58>
   11cb0:	mul	r6, r7, r4
   11cb4:	b	11cc0 <mythread_stop@@Base+0x3c>
   11cb8:	ldr	r0, [r5, #24]
   11cbc:	bl	10040 <mythread_nanosleep_sleep@plt>
   11cc0:	ldr	r3, [r5]
   11cc4:	add	r3, r3, r6
   11cc8:	ldr	r3, [r3, #16]
   11ccc:	tst	r3, #4
   11cd0:	beq	11cb8 <mythread_stop@@Base+0x34>
   11cd4:	add	r4, r4, #1
   11cd8:	b	11ca4 <mythread_stop@@Base+0x20>
   11cdc:	mov	r0, #0
   11ce0:	pop	{r4, r5, r6, r7, r8, pc}

00011ce4 <mythread_suspend@@Base>:
   11ce4:	push	{r4, r5, r6, r7, r8, lr}
   11ce8:	ldr	r4, [r0, #36]	; 0x24
   11cec:	ands	r4, r4, #1
   11cf0:	bne	11d48 <mythread_suspend@@Base+0x64>
   11cf4:	mov	r1, #1
   11cf8:	mov	r7, #40	; 0x28
   11cfc:	mov	r5, r0
   11d00:	bl	10a78 <mythread_option_set@plt>
   11d04:	ldr	r3, [r5, #4]
   11d08:	cmp	r3, r4
   11d0c:	bls	11d48 <mythread_suspend@@Base+0x64>
   11d10:	mul	r6, r7, r4
   11d14:	b	11d20 <mythread_suspend@@Base+0x3c>
   11d18:	ldr	r0, [r5, #24]
   11d1c:	bl	10040 <mythread_nanosleep_sleep@plt>
   11d20:	ldr	r3, [r5]
   11d24:	add	r3, r3, r6
   11d28:	ldr	r2, [r3, #16]
   11d2c:	tst	r2, #4
   11d30:	bne	11d40 <mythread_suspend@@Base+0x5c>
   11d34:	ldr	r3, [r3, #16]
   11d38:	tst	r3, #1
   11d3c:	beq	11d18 <mythread_suspend@@Base+0x34>
   11d40:	add	r4, r4, #1
   11d44:	b	11d04 <mythread_suspend@@Base+0x20>
   11d48:	mov	r0, #0
   11d4c:	pop	{r4, r5, r6, r7, r8, pc}

00011d50 <mythread_resume@@Base>:
   11d50:	push	{r4, r5, r6, r7, r8, lr}
   11d54:	ldr	r4, [r0, #36]	; 0x24
   11d58:	ands	r4, r4, #1
   11d5c:	beq	11d70 <mythread_resume@@Base+0x20>
   11d60:	mov	r4, #0
   11d64:	bl	10a78 <mythread_option_set@plt>
   11d68:	mov	r0, r4
   11d6c:	pop	{r4, r5, r6, r7, r8, pc}
   11d70:	mov	r5, r4
   11d74:	mov	r8, #40	; 0x28
   11d78:	mov	r6, r0
   11d7c:	mov	r7, r1
   11d80:	bl	10a78 <mythread_option_set@plt>
   11d84:	ldr	r3, [r6, #4]
   11d88:	cmp	r5, r3
   11d8c:	bcs	11d68 <mythread_resume@@Base+0x18>
   11d90:	ldr	r3, [r6]
   11d94:	mla	r3, r8, r5, r3
   11d98:	ldr	r2, [r3, #16]
   11d9c:	tst	r2, #4
   11da0:	bne	11dac <mythread_resume@@Base+0x5c>
   11da4:	add	r5, r5, #1
   11da8:	b	11d84 <mythread_resume@@Base+0x34>
   11dac:	mov	r0, r6
   11db0:	str	r7, [r3, #16]
   11db4:	ldr	r1, [r3, #24]
   11db8:	bl	10ca0 <mythread_mutex_post@plt>
   11dbc:	cmp	r0, #0
   11dc0:	beq	11da4 <mythread_resume@@Base+0x54>
   11dc4:	mov	r4, #1
   11dc8:	b	11d68 <mythread_resume@@Base+0x18>

00011dcc <mythread_destroy@@Base>:
   11dcc:	push	{r4, r5, r6, r7, r8, lr}
   11dd0:	subs	r4, r0, #0
   11dd4:	beq	11e38 <mythread_destroy@@Base+0x6c>
   11dd8:	mov	r5, r3
   11ddc:	ldr	r3, [r4]
   11de0:	cmp	r3, #0
   11de4:	beq	11e10 <mythread_destroy@@Base+0x44>
   11de8:	mov	r6, r1
   11dec:	mov	r7, r2
   11df0:	mov	r1, #2
   11df4:	bl	10454 <mythread_resume@plt>
   11df8:	mov	r2, r7
   11dfc:	mov	r1, r6
   11e00:	mov	r0, r4
   11e04:	bl	10520 <mythread_quit@plt>
   11e08:	ldr	r0, [r4]
   11e0c:	bl	10d60 <mycore_free@plt>
   11e10:	mov	r0, r4
   11e14:	ldr	r1, [r4, #20]
   11e18:	bl	11018 <mythread_thread_attr_destroy@plt>
   11e1c:	ldr	r0, [r4, #24]
   11e20:	bl	10b98 <mythread_nanosleep_destroy@plt>
   11e24:	cmp	r5, #0
   11e28:	beq	11e38 <mythread_destroy@@Base+0x6c>
   11e2c:	mov	r0, r4
   11e30:	mov	r4, #0
   11e34:	bl	10d60 <mycore_free@plt>
   11e38:	mov	r0, r4
   11e3c:	pop	{r4, r5, r6, r7, r8, pc}

00011e40 <mythread_entry_join@@Base>:
   11e40:	subs	r3, r1, #0
   11e44:	push	{r4, lr}
   11e48:	mov	r4, r0
   11e4c:	beq	11e5c <mythread_entry_join@@Base+0x1c>
   11e50:	mov	r1, r0
   11e54:	ldr	r0, [r0, #32]
   11e58:	blx	r3
   11e5c:	ldr	r1, [r4]
   11e60:	ldr	r0, [r4, #32]
   11e64:	bl	104fc <mythread_thread_join@plt>
   11e68:	adds	r0, r0, #0
   11e6c:	movne	r0, #1
   11e70:	pop	{r4, pc}

00011e74 <mythread_entry_quit@@Base>:
   11e74:	subs	r3, r1, #0
   11e78:	push	{r4, lr}
   11e7c:	mov	r4, r0
   11e80:	beq	11e90 <mythread_entry_quit@@Base+0x1c>
   11e84:	mov	r1, r0
   11e88:	ldr	r0, [r0, #32]
   11e8c:	blx	r3
   11e90:	ldr	r1, [r4]
   11e94:	ldr	r0, [r4, #32]
   11e98:	bl	104fc <mythread_thread_join@plt>
   11e9c:	cmp	r0, #0
   11ea0:	bne	11ebc <mythread_entry_quit@@Base+0x48>
   11ea4:	ldr	r1, [r4]
   11ea8:	ldr	r0, [r4, #32]
   11eac:	bl	10988 <mythread_thread_destroy@plt>
   11eb0:	adds	r0, r0, #0
   11eb4:	movne	r0, #1
   11eb8:	pop	{r4, pc}
   11ebc:	mov	r0, #1
   11ec0:	pop	{r4, pc}

00011ec4 <mythread_entry_stop@@Base>:
   11ec4:	ldr	r3, [r0, #16]
   11ec8:	tst	r3, #4
   11ecc:	bne	11f04 <mythread_entry_stop@@Base+0x40>
   11ed0:	push	{r4, lr}
   11ed4:	mov	r3, #4
   11ed8:	mov	r4, r0
   11edc:	str	r3, [r0, #16]
   11ee0:	ldr	r3, [r4, #16]
   11ee4:	tst	r3, #4
   11ee8:	beq	11ef4 <mythread_entry_stop@@Base+0x30>
   11eec:	mov	r0, #0
   11ef0:	pop	{r4, pc}
   11ef4:	ldr	r3, [r4, #32]
   11ef8:	ldr	r0, [r3, #24]
   11efc:	bl	10040 <mythread_nanosleep_sleep@plt>
   11f00:	b	11ee0 <mythread_entry_stop@@Base+0x1c>
   11f04:	mov	r0, #0
   11f08:	bx	lr

00011f0c <mythread_entry_suspend@@Base>:
   11f0c:	ldr	r3, [r0, #16]
   11f10:	tst	r3, #1
   11f14:	bne	11f58 <mythread_entry_suspend@@Base+0x4c>
   11f18:	push	{r4, lr}
   11f1c:	mov	r3, #1
   11f20:	mov	r4, r0
   11f24:	str	r3, [r0, #16]
   11f28:	ldr	r3, [r4, #16]
   11f2c:	tst	r3, #4
   11f30:	bne	11f40 <mythread_entry_suspend@@Base+0x34>
   11f34:	ldr	r3, [r4, #16]
   11f38:	tst	r3, #1
   11f3c:	beq	11f48 <mythread_entry_suspend@@Base+0x3c>
   11f40:	mov	r0, #0
   11f44:	pop	{r4, pc}
   11f48:	ldr	r3, [r4, #32]
   11f4c:	ldr	r0, [r3, #24]
   11f50:	bl	10040 <mythread_nanosleep_sleep@plt>
   11f54:	b	11f28 <mythread_entry_suspend@@Base+0x1c>
   11f58:	mov	r0, #0
   11f5c:	bx	lr

00011f60 <mythread_entry_resume@@Base>:
   11f60:	ldr	r2, [r0, #16]
   11f64:	mov	r3, r0
   11f68:	tst	r2, #1
   11f6c:	beq	11f7c <mythread_entry_resume@@Base+0x1c>
   11f70:	mov	r0, #0
   11f74:	str	r1, [r3, #16]
   11f78:	bx	lr
   11f7c:	ldr	r0, [r0, #16]
   11f80:	ands	r0, r0, #4
   11f84:	beq	11fa8 <mythread_entry_resume@@Base+0x48>
   11f88:	push	{r4, lr}
   11f8c:	str	r1, [r3, #16]
   11f90:	ldr	r1, [r3, #24]
   11f94:	ldr	r0, [r3, #32]
   11f98:	bl	10ca0 <mythread_mutex_post@plt>
   11f9c:	adds	r0, r0, #0
   11fa0:	movne	r0, #1
   11fa4:	pop	{r4, pc}
   11fa8:	str	r1, [r3, #16]
   11fac:	bx	lr

00011fb0 <mythread_entry_status@@Base>:
   11fb0:	ldr	r0, [r0, #20]
   11fb4:	bx	lr

00011fb8 <mythread_entry_mythread@@Base>:
   11fb8:	ldr	r0, [r0, #32]
   11fbc:	bx	lr

00011fc0 <mythread_callback_quit@@Base>:
   11fc0:	push	{r4, r5, r6, lr}
   11fc4:	mov	r5, r0
   11fc8:	mov	r4, r1
   11fcc:	ldr	r3, [r4, #16]
   11fd0:	tst	r3, #2
   11fd4:	popne	{r4, r5, r6, pc}
   11fd8:	ldr	r0, [r5, #24]
   11fdc:	bl	10040 <mythread_nanosleep_sleep@plt>
   11fe0:	b	11fcc <mythread_callback_quit@@Base+0xc>

00011fe4 <mythread_queue_create@@Base>:
   11fe4:	mov	r1, #28
   11fe8:	mov	r0, #1
   11fec:	b	feb4 <mycore_calloc@plt>

00011ff0 <mythread_queue_init@@Base>:
   11ff0:	cmp	r1, #32
   11ff4:	push	{r4, r5, r6, lr}
   11ff8:	mov	r4, r0
   11ffc:	movcc	r1, #32
   12000:	mov	r0, #512	; 0x200
   12004:	str	r0, [r4, #8]
   12008:	str	r1, [r4, #20]
   1200c:	mov	r1, #4
   12010:	bl	feb4 <mycore_calloc@plt>
   12014:	cmp	r0, #0
   12018:	str	r0, [r4]
   1201c:	beq	1205c <mythread_queue_init@@Base+0x6c>
   12020:	ldr	r6, [r4, #4]
   12024:	mov	r5, r0
   12028:	mov	r0, #12
   1202c:	ldr	r3, [r4, #20]
   12030:	mul	r0, r0, r3
   12034:	bl	10c28 <mycore_malloc@plt>
   12038:	str	r0, [r5, r6, lsl #2]
   1203c:	ldm	r4, {r0, r3}
   12040:	ldr	r3, [r0, r3, lsl #2]
   12044:	cmp	r3, #0
   12048:	bne	12064 <mythread_queue_init@@Base+0x74>
   1204c:	bl	10d60 <mycore_free@plt>
   12050:	str	r0, [r4]
   12054:	mov	r0, #62	; 0x3e
   12058:	pop	{r4, r5, r6, pc}
   1205c:	mov	r0, #61	; 0x3d
   12060:	pop	{r4, r5, r6, pc}
   12064:	mov	r0, #0
   12068:	pop	{r4, r5, r6, pc}

0001206c <mythread_queue_clean@@Base>:
   1206c:	mov	r3, #0
   12070:	str	r3, [r0, #4]
   12074:	str	r3, [r0, #12]
   12078:	str	r3, [r0, #24]
   1207c:	str	r3, [r0, #16]
   12080:	bx	lr

00012084 <mythread_queue_destroy@@Base>:
   12084:	push	{r4, r5, r6, lr}
   12088:	subs	r4, r0, #0
   1208c:	beq	120cc <mythread_queue_destroy@@Base+0x48>
   12090:	ldr	r3, [r4]
   12094:	cmp	r3, #0
   12098:	beq	120c4 <mythread_queue_destroy@@Base+0x40>
   1209c:	mov	r5, #0
   120a0:	ldr	r3, [r4]
   120a4:	ldr	r0, [r3, r5, lsl #2]
   120a8:	add	r5, r5, #1
   120ac:	bl	10d60 <mycore_free@plt>
   120b0:	ldr	r3, [r4, #4]
   120b4:	cmp	r3, r5
   120b8:	bcs	120a0 <mythread_queue_destroy@@Base+0x1c>
   120bc:	ldr	r0, [r4]
   120c0:	bl	10d60 <mycore_free@plt>
   120c4:	mov	r0, r4
   120c8:	bl	10d60 <mycore_free@plt>
   120cc:	mov	r0, #0
   120d0:	pop	{r4, r5, r6, pc}

000120d4 <mythread_queue_node_clean@@Base>:
   120d4:	mov	r3, #0
   120d8:	str	r3, [r0]
   120dc:	str	r3, [r0, #4]
   120e0:	str	r3, [r0, #8]
   120e4:	bx	lr

000120e8 <mythread_queue_get_prev_node@@Base>:
   120e8:	ldr	r0, [r0, #8]
   120ec:	bx	lr

000120f0 <mythread_queue_get_current_node@@Base>:
   120f0:	ldr	r3, [r0]
   120f4:	ldr	r1, [r0, #4]
   120f8:	ldr	r2, [r0, #12]
   120fc:	mov	r0, #12
   12100:	ldr	r3, [r3, r1, lsl #2]
   12104:	mla	r0, r0, r2, r3
   12108:	bx	lr

0001210c <mythread_queue_get_first_node@@Base>:
   1210c:	ldr	r3, [r0]
   12110:	ldr	r0, [r3]
   12114:	bx	lr

00012118 <mythread_queue_count_used_node@@Base>:
   12118:	ldr	r0, [r0, #16]
   1211c:	bx	lr

00012120 <mythread_queue_list_create@@Base>:
   12120:	mov	r1, #12
   12124:	mov	r0, #1
   12128:	b	feb4 <mycore_calloc@plt>

0001212c <mythread_queue_list_destroy@@Base>:
   1212c:	cmp	r0, #0
   12130:	bxeq	lr
   12134:	b	10d60 <mycore_free@plt>

00012138 <mythread_queue_list_get_count@@Base>:
   12138:	ldr	r0, [r0, #8]
   1213c:	bx	lr

00012140 <mythread_queue_list_wait_for_done@@Base>:
   12140:	cmp	r1, #0
   12144:	bxeq	lr
   12148:	push	{r4, r5, r6, r7, r8, lr}
   1214c:	mov	r5, r0
   12150:	ldr	r4, [r1]
   12154:	cmp	r4, #0
   12158:	popeq	{r4, r5, r6, r7, r8, pc}
   1215c:	mov	r6, #0
   12160:	b	12188 <mythread_queue_list_wait_for_done@@Base+0x48>
   12164:	ldr	r0, [r5, #24]
   12168:	bl	10040 <mythread_nanosleep_sleep@plt>
   1216c:	ldr	r3, [r4, #4]
   12170:	ldr	r2, [r3, r7]
   12174:	ldr	r3, [r4]
   12178:	ldr	r3, [r3, #16]
   1217c:	cmp	r2, r3
   12180:	bcc	12164 <mythread_queue_list_wait_for_done@@Base+0x24>
   12184:	add	r6, r6, #1
   12188:	ldr	r3, [r5, #4]
   1218c:	cmp	r3, r6
   12190:	lslhi	r7, r6, #2
   12194:	bhi	1216c <mythread_queue_list_wait_for_done@@Base+0x2c>
   12198:	ldr	r4, [r4, #12]
   1219c:	b	12154 <mythread_queue_list_wait_for_done@@Base+0x14>

000121a0 <mythread_queue_node_malloc@@Base>:
   121a0:	ldr	r3, [r1, #12]
   121a4:	push	{r4, r5, r6, r7, r8, lr}
   121a8:	mov	r7, r2
   121ac:	mov	r4, r1
   121b0:	ldr	r2, [r1, #20]
   121b4:	add	r3, r3, #1
   121b8:	str	r3, [r1, #12]
   121bc:	cmp	r3, r2
   121c0:	bcc	12294 <mythread_queue_node_malloc@@Base+0xf4>
   121c4:	ldr	r3, [r1, #4]
   121c8:	ldr	r2, [r1, #8]
   121cc:	add	r3, r3, #1
   121d0:	cmp	r3, r2
   121d4:	str	r3, [r1, #4]
   121d8:	bcc	12228 <mythread_queue_node_malloc@@Base+0x88>
   121dc:	cmp	r0, #0
   121e0:	beq	121ec <mythread_queue_node_malloc@@Base+0x4c>
   121e4:	ldr	r1, [r0, #16]
   121e8:	bl	10d6c <mythread_queue_list_wait_for_done@plt>
   121ec:	ldr	r0, [r4]
   121f0:	ldr	r6, [r4, #8]
   121f4:	add	r6, r6, #512	; 0x200
   121f8:	lsl	r1, r6, #2
   121fc:	bl	fb84 <mycore_realloc@plt>
   12200:	subs	r5, r0, #0
   12204:	beq	12274 <mythread_queue_node_malloc@@Base+0xd4>
   12208:	ldr	r0, [r4, #4]
   1220c:	mov	r1, #0
   12210:	sub	r2, r6, r0
   12214:	add	r0, r5, r0, lsl #2
   12218:	lsl	r2, r2, #2
   1221c:	bl	10844 <memset@plt>
   12220:	str	r5, [r4]
   12224:	str	r6, [r4, #8]
   12228:	ldm	r4, {r5, r6}
   1222c:	ldr	r3, [r5, r6, lsl #2]
   12230:	cmp	r3, #0
   12234:	bne	1228c <mythread_queue_node_malloc@@Base+0xec>
   12238:	ldr	r3, [r4, #20]
   1223c:	mov	r0, #12
   12240:	mul	r0, r0, r3
   12244:	bl	10c28 <mycore_malloc@plt>
   12248:	ldr	r3, [r4]
   1224c:	str	r0, [r5, r6, lsl #2]
   12250:	ldr	r2, [r4, #4]
   12254:	ldr	r5, [r3, r2, lsl #2]
   12258:	cmp	r5, #0
   1225c:	bne	1228c <mythread_queue_node_malloc@@Base+0xec>
   12260:	cmp	r7, #0
   12264:	beq	12280 <mythread_queue_node_malloc@@Base+0xe0>
   12268:	mov	r3, #62	; 0x3e
   1226c:	str	r3, [r7]
   12270:	b	12284 <mythread_queue_node_malloc@@Base+0xe4>
   12274:	cmp	r7, #0
   12278:	movne	r3, #61	; 0x3d
   1227c:	bne	1226c <mythread_queue_node_malloc@@Base+0xcc>
   12280:	mov	r5, #0
   12284:	mov	r0, r5
   12288:	pop	{r4, r5, r6, r7, r8, pc}
   1228c:	mov	r3, #0
   12290:	str	r3, [r4, #12]
   12294:	ldr	r2, [r4, #4]
   12298:	ldr	r3, [r4, #16]
   1229c:	ldr	r5, [r4, #12]
   122a0:	add	r3, r3, #1
   122a4:	str	r3, [r4, #16]
   122a8:	ldr	r3, [r4]
   122ac:	ldr	r3, [r3, r2, lsl #2]
   122b0:	mov	r2, #12
   122b4:	mla	r5, r2, r5, r3
   122b8:	b	12284 <mythread_queue_node_malloc@@Base+0xe4>

000122bc <mythread_queue_node_malloc_limit@@Base>:
   122bc:	push	{r4, r5, r6, r7, r8, lr}
   122c0:	mov	r7, r3
   122c4:	mov	r4, r1
   122c8:	ldr	r3, [r1, #12]
   122cc:	add	r3, r3, #1
   122d0:	str	r3, [r1, #12]
   122d4:	ldr	r1, [r1, #16]
   122d8:	cmp	r1, r2
   122dc:	bcc	12338 <mythread_queue_node_malloc_limit@@Base+0x7c>
   122e0:	ldr	r3, [r4, #16]
   122e4:	cmp	r0, #0
   122e8:	add	r3, r3, #1
   122ec:	str	r3, [r4, #16]
   122f0:	beq	122fc <mythread_queue_node_malloc_limit@@Base+0x40>
   122f4:	ldr	r1, [r0, #16]
   122f8:	bl	10d6c <mythread_queue_list_wait_for_done@plt>
   122fc:	mov	r3, #0
   12300:	str	r3, [r4, #4]
   12304:	str	r3, [r4, #12]
   12308:	str	r3, [r4, #24]
   1230c:	str	r3, [r4, #16]
   12310:	ldr	r2, [r4, #4]
   12314:	ldr	r3, [r4, #16]
   12318:	ldr	r5, [r4, #12]
   1231c:	add	r3, r3, #1
   12320:	str	r3, [r4, #16]
   12324:	ldr	r3, [r4]
   12328:	ldr	r3, [r3, r2, lsl #2]
   1232c:	mov	r2, #12
   12330:	mla	r5, r2, r5, r3
   12334:	b	12404 <mythread_queue_node_malloc_limit@@Base+0x148>
   12338:	ldr	r2, [r4, #20]
   1233c:	cmp	r3, r2
   12340:	bcc	12310 <mythread_queue_node_malloc_limit@@Base+0x54>
   12344:	ldr	r3, [r4, #4]
   12348:	ldr	r2, [r4, #8]
   1234c:	add	r3, r3, #1
   12350:	cmp	r3, r2
   12354:	str	r3, [r4, #4]
   12358:	bcc	123a8 <mythread_queue_node_malloc_limit@@Base+0xec>
   1235c:	cmp	r0, #0
   12360:	beq	1236c <mythread_queue_node_malloc_limit@@Base+0xb0>
   12364:	ldr	r1, [r0, #16]
   12368:	bl	10d6c <mythread_queue_list_wait_for_done@plt>
   1236c:	ldr	r0, [r4]
   12370:	ldr	r6, [r4, #8]
   12374:	add	r6, r6, #512	; 0x200
   12378:	lsl	r1, r6, #2
   1237c:	bl	fb84 <mycore_realloc@plt>
   12380:	subs	r5, r0, #0
   12384:	beq	123f4 <mythread_queue_node_malloc_limit@@Base+0x138>
   12388:	ldr	r0, [r4, #4]
   1238c:	mov	r1, #0
   12390:	sub	r2, r6, r0
   12394:	add	r0, r5, r0, lsl #2
   12398:	lsl	r2, r2, #2
   1239c:	bl	10844 <memset@plt>
   123a0:	str	r5, [r4]
   123a4:	str	r6, [r4, #8]
   123a8:	ldm	r4, {r5, r6}
   123ac:	ldr	r3, [r5, r6, lsl #2]
   123b0:	cmp	r3, #0
   123b4:	bne	1240c <mythread_queue_node_malloc_limit@@Base+0x150>
   123b8:	ldr	r3, [r4, #20]
   123bc:	mov	r0, #12
   123c0:	mul	r0, r0, r3
   123c4:	bl	10c28 <mycore_malloc@plt>
   123c8:	ldr	r3, [r4]
   123cc:	str	r0, [r5, r6, lsl #2]
   123d0:	ldr	r2, [r4, #4]
   123d4:	ldr	r5, [r3, r2, lsl #2]
   123d8:	cmp	r5, #0
   123dc:	bne	1240c <mythread_queue_node_malloc_limit@@Base+0x150>
   123e0:	cmp	r7, #0
   123e4:	beq	12400 <mythread_queue_node_malloc_limit@@Base+0x144>
   123e8:	mov	r3, #62	; 0x3e
   123ec:	str	r3, [r7]
   123f0:	b	12404 <mythread_queue_node_malloc_limit@@Base+0x148>
   123f4:	cmp	r7, #0
   123f8:	movne	r3, #61	; 0x3d
   123fc:	bne	123ec <mythread_queue_node_malloc_limit@@Base+0x130>
   12400:	mov	r5, #0
   12404:	mov	r0, r5
   12408:	pop	{r4, r5, r6, r7, r8, pc}
   1240c:	mov	r3, #0
   12410:	str	r3, [r4, #12]
   12414:	b	12310 <mythread_queue_node_malloc_limit@@Base+0x54>

00012418 <mythread_queue_list_see_for_done@@Base>:
   12418:	cmp	r1, #0
   1241c:	ldrne	r3, [r1]
   12420:	bne	12450 <mythread_queue_list_see_for_done@@Base+0x38>
   12424:	mov	r0, #1
   12428:	bx	lr
   1242c:	mov	r0, #0
   12430:	pop	{pc}		; (ldr pc, [sp], #4)
   12434:	mov	r0, #1
   12438:	pop	{pc}		; (ldr pc, [sp], #4)
   1243c:	ldr	r1, [r0, #4]
   12440:	mov	r2, #0
   12444:	cmp	r1, r2
   12448:	bne	1245c <mythread_queue_list_see_for_done@@Base+0x44>
   1244c:	ldr	r3, [r3, #12]
   12450:	cmp	r3, #0
   12454:	bne	1243c <mythread_queue_list_see_for_done@@Base+0x24>
   12458:	b	12424 <mythread_queue_list_see_for_done@@Base+0xc>
   1245c:	push	{lr}		; (str lr, [sp, #-4]!)
   12460:	ldr	ip, [r3, #4]
   12464:	ldr	lr, [ip, r2, lsl #2]
   12468:	ldr	ip, [r3]
   1246c:	ldr	ip, [ip, #16]
   12470:	cmp	lr, ip
   12474:	bcc	1242c <mythread_queue_list_see_for_done@@Base+0x14>
   12478:	add	r2, r2, #1
   1247c:	cmp	r1, r2
   12480:	bne	12460 <mythread_queue_list_see_for_done@@Base+0x48>
   12484:	ldr	r3, [r3, #12]
   12488:	cmp	r3, #0
   1248c:	beq	12434 <mythread_queue_list_see_for_done@@Base+0x1c>
   12490:	mov	r2, #0
   12494:	ldr	r1, [r0, #4]
   12498:	b	1247c <mythread_queue_list_see_for_done@@Base+0x64>

0001249c <mythread_queue_list_see_for_done_by_thread@@Base>:
   1249c:	cmp	r1, #0
   124a0:	lslne	r2, r2, #2
   124a4:	ldrne	r3, [r1]
   124a8:	bne	124d0 <mythread_queue_list_see_for_done_by_thread@@Base+0x34>
   124ac:	mov	r0, #1
   124b0:	bx	lr
   124b4:	ldr	r1, [r3, #4]
   124b8:	ldr	r0, [r1, r2]
   124bc:	ldr	r1, [r3]
   124c0:	ldr	r1, [r1, #16]
   124c4:	cmp	r0, r1
   124c8:	bcc	124dc <mythread_queue_list_see_for_done_by_thread@@Base+0x40>
   124cc:	ldr	r3, [r3, #12]
   124d0:	cmp	r3, #0
   124d4:	bne	124b4 <mythread_queue_list_see_for_done_by_thread@@Base+0x18>
   124d8:	b	124ac <mythread_queue_list_see_for_done_by_thread@@Base+0x10>
   124dc:	mov	r0, #0
   124e0:	bx	lr

000124e4 <mythread_queue_list_entry_delete@@Base>:
   124e4:	push	{r4, r5, r6, r7, r8, lr}
   124e8:	add	r8, r0, r1, lsl #2
   124ec:	mov	r5, r2
   124f0:	mov	r4, r3
   124f4:	mov	r6, r0
   124f8:	mov	r7, r0
   124fc:	cmp	r7, r8
   12500:	bne	12580 <mythread_queue_list_entry_delete@@Base+0x9c>
   12504:	ldrd	r2, [r4, #12]
   12508:	ldr	r1, [r5]
   1250c:	cmp	r3, #0
   12510:	strne	r2, [r3, #12]
   12514:	cmp	r2, #0
   12518:	strne	r3, [r2, #16]
   1251c:	cmp	r1, r4
   12520:	streq	r2, [r5]
   12524:	ldr	r2, [r5, #4]
   12528:	cmp	r2, r4
   1252c:	streq	r3, [r5, #4]
   12530:	ldr	r3, [r5, #8]
   12534:	sub	r3, r3, #1
   12538:	str	r3, [r5, #8]
   1253c:	cmp	r6, r7
   12540:	bne	12594 <mythread_queue_list_entry_delete@@Base+0xb0>
   12544:	ldrb	r3, [sp, #24]
   12548:	cmp	r3, #0
   1254c:	beq	12560 <mythread_queue_list_entry_delete@@Base+0x7c>
   12550:	ldr	r0, [r4]
   12554:	cmp	r0, #0
   12558:	beq	12560 <mythread_queue_list_entry_delete@@Base+0x7c>
   1255c:	bl	10268 <mythread_queue_destroy@plt>
   12560:	ldr	r0, [r4, #4]
   12564:	cmp	r0, #0
   12568:	beq	12570 <mythread_queue_list_entry_delete@@Base+0x8c>
   1256c:	bl	10d60 <mycore_free@plt>
   12570:	mov	r0, r4
   12574:	bl	10d60 <mycore_free@plt>
   12578:	mov	r0, #0
   1257c:	pop	{r4, r5, r6, r7, r8, pc}
   12580:	ldr	r0, [r7], #4
   12584:	cmp	r0, #0
   12588:	beq	124fc <mythread_queue_list_entry_delete@@Base+0x18>
   1258c:	bl	10088 <mythread_suspend@plt>
   12590:	b	124fc <mythread_queue_list_entry_delete@@Base+0x18>
   12594:	ldr	r0, [r6], #4
   12598:	cmp	r0, #0
   1259c:	beq	1253c <mythread_queue_list_entry_delete@@Base+0x58>
   125a0:	mov	r1, #0
   125a4:	bl	10454 <mythread_resume@plt>
   125a8:	b	1253c <mythread_queue_list_entry_delete@@Base+0x58>

000125ac <mythread_queue_list_entry_clean@@Base>:
   125ac:	cmp	r0, #0
   125b0:	bxeq	lr
   125b4:	ldr	r0, [r0]
   125b8:	b	fd04 <mythread_queue_clean@plt>

000125bc <mythread_queue_list_entry_wait_for_done@@Base>:
   125bc:	push	{r4, r5, r6, r7, r8, lr}
   125c0:	subs	r4, r1, #0
   125c4:	movne	r6, r0
   125c8:	movne	r5, #0
   125cc:	popeq	{r4, r5, r6, r7, r8, pc}
   125d0:	ldr	r3, [r4, #8]
   125d4:	cmp	r5, r3
   125d8:	popcs	{r4, r5, r6, r7, r8, pc}
   125dc:	lsl	r7, r5, #2
   125e0:	b	125ec <mythread_queue_list_entry_wait_for_done@@Base+0x30>
   125e4:	ldr	r0, [r6, #24]
   125e8:	bl	10040 <mythread_nanosleep_sleep@plt>
   125ec:	ldr	r3, [r4, #4]
   125f0:	ldr	r2, [r3, r7]
   125f4:	ldr	r3, [r4]
   125f8:	ldr	r3, [r3, #16]
   125fc:	cmp	r2, r3
   12600:	bcc	125e4 <mythread_queue_list_entry_wait_for_done@@Base+0x28>
   12604:	add	r5, r5, #1
   12608:	b	125d0 <mythread_queue_list_entry_wait_for_done@@Base+0x14>

0001260c <mythread_queue_node_malloc_round@@Base>:
   1260c:	push	{r4, r5, r6, lr}
   12610:	ldr	r4, [r1]
   12614:	ldr	r2, [r4, #12]
   12618:	ldr	lr, [r4, #20]
   1261c:	add	r2, r2, #1
   12620:	cmp	r2, lr
   12624:	str	r2, [r4, #12]
   12628:	ldrcc	r3, [r4, #16]
   1262c:	addcc	r3, r3, #1
   12630:	strcc	r3, [r4, #16]
   12634:	bcc	1265c <mythread_queue_node_malloc_round@@Base+0x50>
   12638:	ldr	r2, [r4, #16]
   1263c:	cmp	r0, #0
   12640:	mov	r5, r1
   12644:	add	r2, r2, #1
   12648:	str	r2, [r4, #16]
   1264c:	beq	12654 <mythread_queue_node_malloc_round@@Base+0x48>
   12650:	bl	10910 <mythread_queue_list_entry_wait_for_done@plt>
   12654:	mov	r0, r5
   12658:	bl	10934 <mythread_queue_list_entry_clean@plt>
   1265c:	ldr	r3, [r4]
   12660:	mov	r0, #12
   12664:	ldr	r1, [r4, #4]
   12668:	ldr	r2, [r4, #12]
   1266c:	ldr	r3, [r3, r1, lsl #2]
   12670:	mla	r0, r0, r2, r3
   12674:	pop	{r4, r5, r6, pc}

00012678 <mythread_queue_list_entry_see_for_done@@Base>:
   12678:	cmp	r0, #0
   1267c:	movne	r3, #0
   12680:	ldrne	r2, [r0, #8]
   12684:	bne	126ac <mythread_queue_list_entry_see_for_done@@Base+0x34>
   12688:	mov	r0, #1
   1268c:	bx	lr
   12690:	ldr	r1, [r0, #4]
   12694:	ldr	ip, [r1, r3, lsl #2]
   12698:	ldr	r1, [r0]
   1269c:	ldr	r1, [r1, #16]
   126a0:	cmp	ip, r1
   126a4:	bcc	126b8 <mythread_queue_list_entry_see_for_done@@Base+0x40>
   126a8:	add	r3, r3, #1
   126ac:	cmp	r2, r3
   126b0:	bne	12690 <mythread_queue_list_entry_see_for_done@@Base+0x18>
   126b4:	b	12688 <mythread_queue_list_entry_see_for_done@@Base+0x10>
   126b8:	mov	r0, #0
   126bc:	bx	lr

000126c0 <mythread_queue_list_entry_make_batch@@Base>:
   126c0:	cmp	r1, #0
   126c4:	bxeq	lr
   126c8:	ldr	r2, [r0, #12]
   126cc:	ldr	r0, [r0, #4]
   126d0:	mov	r3, r2
   126d4:	sub	ip, r2, r2
   126d8:	cmp	r0, r2
   126dc:	bxcc	lr
   126e0:	push	{lr}		; (str lr, [sp, #-4]!)
   126e4:	ldr	lr, [r1, #4]
   126e8:	str	ip, [lr, r3, lsl #2]
   126ec:	add	r3, r3, #1
   126f0:	cmp	r0, r3
   126f4:	sub	ip, r3, r2
   126f8:	bcs	126e4 <mythread_queue_list_entry_make_batch@@Base+0x24>
   126fc:	pop	{pc}		; (ldr pc, [sp], #4)

00012700 <mythread_queue_list_entry_make_stream@@Base>:
   12700:	cmp	r1, #0
   12704:	ldrne	r2, [r0, #4]
   12708:	ldrne	r3, [r0, #12]
   1270c:	movne	r0, #0
   12710:	bxeq	lr
   12714:	cmp	r2, r3
   12718:	bxcc	lr
   1271c:	ldr	ip, [r1, #4]
   12720:	str	r0, [ip, r3, lsl #2]
   12724:	add	r3, r3, #1
   12728:	b	12714 <mythread_queue_list_entry_make_stream@@Base+0x14>

0001272c <mythread_queue_list_entry_push@@Base>:
   1272c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12730:	mov	sl, r3
   12734:	mov	r5, r0
   12738:	mov	r9, r1
   1273c:	mov	r0, #1
   12740:	mov	r1, #20
   12744:	mov	r6, r2
   12748:	ldr	r8, [sp, #32]
   1274c:	ldr	r7, [sp, #36]	; 0x24
   12750:	cmp	r7, #0
   12754:	movne	r3, #0
   12758:	strne	r3, [r7]
   1275c:	bl	feb4 <mycore_calloc@plt>
   12760:	subs	r4, r0, #0
   12764:	bne	12780 <mythread_queue_list_entry_push@@Base+0x54>
   12768:	cmp	r7, #0
   1276c:	mov	r4, #0
   12770:	movne	r3, #60	; 0x3c
   12774:	strne	r3, [r7]
   12778:	mov	r0, r4
   1277c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12780:	cmp	r8, #0
   12784:	str	r8, [r4, #8]
   12788:	streq	r8, [r4, #4]
   1278c:	beq	127b4 <mythread_queue_list_entry_push@@Base+0x88>
   12790:	mov	r1, #4
   12794:	mov	r0, r8
   12798:	bl	feb4 <mycore_calloc@plt>
   1279c:	cmp	r0, #0
   127a0:	str	r0, [r4, #4]
   127a4:	bne	127b4 <mythread_queue_list_entry_push@@Base+0x88>
   127a8:	mov	r0, r4
   127ac:	bl	10d60 <mycore_free@plt>
   127b0:	b	12768 <mythread_queue_list_entry_push@@Base+0x3c>
   127b4:	add	r9, r5, r9, lsl #2
   127b8:	mov	r7, r5
   127bc:	str	sl, [r4]
   127c0:	cmp	r7, r9
   127c4:	bne	12810 <mythread_queue_list_entry_push@@Base+0xe4>
   127c8:	ldr	r3, [r6]
   127cc:	cmp	r3, #0
   127d0:	ldrne	r3, [r6, #4]
   127d4:	streq	r4, [r6]
   127d8:	strne	r4, [r3, #12]
   127dc:	strne	r3, [r4, #16]
   127e0:	ldr	r3, [r6, #8]
   127e4:	str	r4, [r6, #4]
   127e8:	add	r3, r3, #1
   127ec:	str	r3, [r6, #8]
   127f0:	cmp	r7, r5
   127f4:	beq	12778 <mythread_queue_list_entry_push@@Base+0x4c>
   127f8:	ldr	r0, [r5], #4
   127fc:	cmp	r0, #0
   12800:	beq	127f0 <mythread_queue_list_entry_push@@Base+0xc4>
   12804:	mov	r1, #0
   12808:	bl	10454 <mythread_resume@plt>
   1280c:	b	127f0 <mythread_queue_list_entry_push@@Base+0xc4>
   12810:	ldr	r0, [r7]
   12814:	mov	r1, r4
   12818:	ldr	r3, [r0, #32]
   1281c:	cmp	r3, #1
   12820:	bne	1283c <mythread_queue_list_entry_push@@Base+0x110>
   12824:	bl	10cb8 <mythread_queue_list_entry_make_batch@plt>
   12828:	ldr	r0, [r7], #4
   1282c:	cmp	r0, #0
   12830:	beq	127c0 <mythread_queue_list_entry_push@@Base+0x94>
   12834:	bl	10088 <mythread_suspend@plt>
   12838:	b	127c0 <mythread_queue_list_entry_push@@Base+0x94>
   1283c:	bl	10e74 <mythread_queue_list_entry_make_stream@plt>
   12840:	b	12828 <mythread_queue_list_entry_push@@Base+0xfc>

00012844 <mythread_function_see_opt@@Base>:
   12844:	push	{r0, r1, r4, r5, r6, lr}
   12848:	ldr	r6, [r0, #28]
   1284c:	str	r1, [sp, #4]
   12850:	ldr	r1, [r6, #16]
   12854:	ldr	ip, [r1, #8]
   12858:	cmp	ip, r3
   1285c:	bne	128ec <mythread_function_see_opt@@Base+0xa8>
   12860:	ldr	r3, [sp, #4]
   12864:	mov	r4, r0
   12868:	tst	r3, #4
   1286c:	beq	128a8 <mythread_function_see_opt@@Base+0x64>
   12870:	mov	r0, r6
   12874:	bl	10568 <mythread_queue_list_see_for_done_by_thread@plt>
   12878:	cmp	r0, #0
   1287c:	beq	128e4 <mythread_function_see_opt@@Base+0xa0>
   12880:	mov	r3, #4
   12884:	mov	r5, #0
   12888:	ldr	r1, [r4, #20]
   1288c:	mov	r0, r6
   12890:	str	r3, [r4, #12]
   12894:	bl	10d30 <mythread_mutex_wait@plt>
   12898:	str	r5, [r4, #12]
   1289c:	mov	r0, r5
   128a0:	add	sp, sp, #8
   128a4:	pop	{r4, r5, r6, pc}
   128a8:	ldr	r3, [sp, #4]
   128ac:	tst	r3, #2
   128b0:	beq	128e4 <mythread_function_see_opt@@Base+0xa0>
   128b4:	mov	r0, r6
   128b8:	bl	10568 <mythread_queue_list_see_for_done_by_thread@plt>
   128bc:	subs	r5, r0, #0
   128c0:	beq	128e4 <mythread_function_see_opt@@Base+0xa0>
   128c4:	mov	r0, r6
   128c8:	ldr	r1, [r4, #20]
   128cc:	bl	105c8 <mythread_mutex_close@plt>
   128d0:	ldr	r0, [r4, #24]
   128d4:	bl	10b98 <mythread_nanosleep_destroy@plt>
   128d8:	mov	r3, #2
   128dc:	str	r3, [r4, #12]
   128e0:	b	1289c <mythread_function_see_opt@@Base+0x58>
   128e4:	ldr	r0, [sp, #24]
   128e8:	bl	10040 <mythread_nanosleep_sleep@plt>
   128ec:	mov	r5, #0
   128f0:	b	1289c <mythread_function_see_opt@@Base+0x58>

000128f4 <mythread_function_queue_batch@@Base>:
   128f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   128f8:	mov	r4, r0
   128fc:	sub	sp, sp, #20
   12900:	mov	fp, #1
   12904:	ldr	r1, [r0]
   12908:	ldr	r5, [r0, #28]
   1290c:	mov	r0, r5
   12910:	ldr	sl, [r5, #16]
   12914:	bl	fdf4 <myhread_increase_id_by_entry_id@plt>
   12918:	mov	r9, r0
   1291c:	mov	r0, r5
   12920:	ldr	r1, [r4, #20]
   12924:	lsl	r7, r9, #2
   12928:	bl	10d30 <mythread_mutex_wait@plt>
   1292c:	ldr	r3, [r5, #36]	; 0x24
   12930:	tst	r3, #1
   12934:	strne	fp, [r4, #12]
   12938:	bne	1298c <mythread_function_queue_batch@@Base+0x98>
   1293c:	ldr	r6, [sl]
   12940:	mov	r3, #0
   12944:	cmp	r6, #0
   12948:	bne	129a0 <mythread_function_queue_batch@@Base+0xac>
   1294c:	ldr	r2, [sl, #8]
   12950:	cmp	r2, r3
   12954:	bne	1292c <mythread_function_queue_batch@@Base+0x38>
   12958:	ldr	r2, [r4, #24]
   1295c:	mov	r0, r4
   12960:	ldr	r1, [r5, #36]	; 0x24
   12964:	str	r2, [sp]
   12968:	mov	r2, r9
   1296c:	bl	fe6c <mythread_function_see_opt@plt>
   12970:	cmp	r0, #0
   12974:	beq	1292c <mythread_function_queue_batch@@Base+0x38>
   12978:	mov	r0, r6
   1297c:	add	sp, sp, #20
   12980:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12984:	ldr	r0, [r4, #24]
   12988:	bl	10040 <mythread_nanosleep_sleep@plt>
   1298c:	ldr	r3, [r5, #36]	; 0x24
   12990:	ands	r3, r3, #1
   12994:	bne	12984 <mythread_function_queue_batch@@Base+0x90>
   12998:	str	r3, [r4, #12]
   1299c:	b	1293c <mythread_function_queue_batch@@Base+0x48>
   129a0:	ldm	r6, {r2, r8}
   129a4:	ldr	r0, [r8, r7]
   129a8:	ldr	r1, [r2, #16]
   129ac:	cmp	r0, r1
   129b0:	addcs	r3, r3, #1
   129b4:	bcs	12a08 <mythread_function_queue_batch@@Base+0x114>
   129b8:	ldr	r0, [r8, r7]
   129bc:	str	r3, [sp, #12]
   129c0:	mov	r3, #12
   129c4:	ldr	r1, [r2, #20]
   129c8:	ldr	lr, [r8, r7]
   129cc:	ldr	ip, [r2, #20]
   129d0:	udiv	r0, r0, r1
   129d4:	ldr	r2, [r2]
   129d8:	udiv	r1, lr, ip
   129dc:	ldr	r0, [r2, r0, lsl #2]
   129e0:	ldr	r2, [r4, #4]
   129e4:	mls	r1, ip, r1, lr
   129e8:	mla	r1, r3, r1, r0
   129ec:	ldr	r0, [r4]
   129f0:	blx	r2
   129f4:	ldr	r2, [r8, r7]
   129f8:	ldr	r1, [r5, #4]
   129fc:	ldr	r3, [sp, #12]
   12a00:	add	r2, r2, r1
   12a04:	str	r2, [r8, r7]
   12a08:	ldr	r6, [r6, #12]
   12a0c:	b	12944 <mythread_function_queue_batch@@Base+0x50>

00012a10 <mythread_function_queue_stream@@Base>:
   12a10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a14:	mov	r4, r0
   12a18:	sub	sp, sp, #20
   12a1c:	mov	fp, #1
   12a20:	ldr	r1, [r0]
   12a24:	ldr	r6, [r0, #28]
   12a28:	mov	r0, r6
   12a2c:	ldr	sl, [r6, #16]
   12a30:	bl	fdf4 <myhread_increase_id_by_entry_id@plt>
   12a34:	mov	r9, r0
   12a38:	mov	r0, r6
   12a3c:	ldr	r1, [r4, #20]
   12a40:	lsl	r7, r9, #2
   12a44:	bl	10d30 <mythread_mutex_wait@plt>
   12a48:	ldr	r3, [r6, #36]	; 0x24
   12a4c:	tst	r3, #1
   12a50:	strne	fp, [r4, #12]
   12a54:	bne	12aa8 <mythread_function_queue_stream@@Base+0x98>
   12a58:	ldr	r5, [sl]
   12a5c:	mov	r3, #0
   12a60:	cmp	r5, #0
   12a64:	bne	12abc <mythread_function_queue_stream@@Base+0xac>
   12a68:	ldr	r2, [sl, #8]
   12a6c:	cmp	r2, r3
   12a70:	bne	12a48 <mythread_function_queue_stream@@Base+0x38>
   12a74:	ldr	r2, [r4, #24]
   12a78:	mov	r0, r4
   12a7c:	ldr	r1, [r6, #36]	; 0x24
   12a80:	str	r2, [sp]
   12a84:	mov	r2, r9
   12a88:	bl	fe6c <mythread_function_see_opt@plt>
   12a8c:	cmp	r0, #0
   12a90:	beq	12a48 <mythread_function_queue_stream@@Base+0x38>
   12a94:	mov	r0, r5
   12a98:	add	sp, sp, #20
   12a9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12aa0:	ldr	r0, [r4, #24]
   12aa4:	bl	10040 <mythread_nanosleep_sleep@plt>
   12aa8:	ldr	r3, [r6, #36]	; 0x24
   12aac:	ands	r3, r3, #1
   12ab0:	bne	12aa0 <mythread_function_queue_stream@@Base+0x90>
   12ab4:	str	r3, [r4, #12]
   12ab8:	b	12a58 <mythread_function_queue_stream@@Base+0x48>
   12abc:	ldm	r5, {r2, r8}
   12ac0:	ldr	r0, [r8, r7]
   12ac4:	ldr	r1, [r2, #16]
   12ac8:	cmp	r0, r1
   12acc:	addcs	r3, r3, #1
   12ad0:	bcs	12b20 <mythread_function_queue_stream@@Base+0x110>
   12ad4:	ldr	r0, [r8, r7]
   12ad8:	str	r3, [sp, #12]
   12adc:	mov	r3, #12
   12ae0:	ldr	r1, [r2, #20]
   12ae4:	ldr	lr, [r8, r7]
   12ae8:	ldr	ip, [r2, #20]
   12aec:	udiv	r0, r0, r1
   12af0:	ldr	r2, [r2]
   12af4:	udiv	r1, lr, ip
   12af8:	ldr	r0, [r2, r0, lsl #2]
   12afc:	ldr	r2, [r4, #4]
   12b00:	mls	r1, ip, r1, lr
   12b04:	mla	r1, r3, r1, r0
   12b08:	ldr	r0, [r4]
   12b0c:	blx	r2
   12b10:	ldr	r2, [r8, r7]
   12b14:	ldr	r3, [sp, #12]
   12b18:	add	r2, r2, #1
   12b1c:	str	r2, [r8, r7]
   12b20:	ldr	r5, [r5, #12]
   12b24:	b	12a60 <mythread_function_queue_stream@@Base+0x50>

00012b28 <mythread_function@@Base>:
   12b28:	push	{r4, r5, r6, lr}
   12b2c:	mov	r4, r0
   12b30:	ldr	r1, [r0, #20]
   12b34:	ldr	r5, [r0, #28]
   12b38:	mov	r0, r5
   12b3c:	bl	10d30 <mythread_mutex_wait@plt>
   12b40:	mov	r1, r4
   12b44:	ldm	r4, {r0, r3}
   12b48:	blx	r3
   12b4c:	ldr	r3, [r4, #12]
   12b50:	orr	r3, r3, #8
   12b54:	str	r3, [r4, #12]
   12b58:	ldr	r3, [r4, #12]
   12b5c:	tst	r3, #1
   12b60:	beq	12b9c <mythread_function@@Base+0x74>
   12b64:	ldr	r3, [r4, #12]
   12b68:	tst	r3, #1
   12b6c:	bne	12b90 <mythread_function@@Base+0x68>
   12b70:	ldr	r3, [r5, #36]	; 0x24
   12b74:	tst	r3, #2
   12b78:	bne	12bb8 <mythread_function@@Base+0x90>
   12b7c:	ldr	r3, [r4, #12]
   12b80:	ands	r3, r3, #2
   12b84:	bne	12bb8 <mythread_function@@Base+0x90>
   12b88:	str	r3, [r4, #12]
   12b8c:	b	12b40 <mythread_function@@Base+0x18>
   12b90:	ldr	r0, [r4, #24]
   12b94:	bl	10040 <mythread_nanosleep_sleep@plt>
   12b98:	b	12b64 <mythread_function@@Base+0x3c>
   12b9c:	ldr	r3, [r4, #12]
   12ba0:	mov	r0, r5
   12ba4:	ldr	r1, [r4, #20]
   12ba8:	orr	r3, r3, #4
   12bac:	str	r3, [r4, #12]
   12bb0:	bl	10d30 <mythread_mutex_wait@plt>
   12bb4:	b	12b70 <mythread_function@@Base+0x48>
   12bb8:	mov	r0, r5
   12bbc:	ldr	r1, [r4, #20]
   12bc0:	bl	105c8 <mythread_mutex_close@plt>
   12bc4:	ldr	r0, [r4, #24]
   12bc8:	bl	10b98 <mythread_nanosleep_destroy@plt>
   12bcc:	mov	r3, #2
   12bd0:	mov	r0, #0
   12bd4:	str	r3, [r4, #12]
   12bd8:	pop	{r4, r5, r6, pc}

00012bdc <mycore_power@@Base>:
   12bdc:	mov	r3, r0
   12be0:	mov	r0, #1
   12be4:	cmp	r1, #0
   12be8:	bxeq	lr
   12bec:	tst	r1, #1
   12bf0:	lsr	r1, r1, #1
   12bf4:	mulne	r0, r3, r0
   12bf8:	mul	r3, r3, r3
   12bfc:	b	12be4 <mycore_power@@Base+0x8>

00012c00 <mycore_strncasecmp@@Base>:
   12c00:	mov	r3, r1
   12c04:	clz	r1, r1
   12c08:	lsr	r1, r1, #5
   12c0c:	cmp	r0, #0
   12c10:	moveq	r1, #1
   12c14:	cmp	r1, #0
   12c18:	beq	12c3c <mycore_strncasecmp@@Base+0x3c>
   12c1c:	subs	r0, r0, r3
   12c20:	movne	r0, #1
   12c24:	bx	lr
   12c28:	add	r1, r1, #1
   12c2c:	cmp	r1, r2
   12c30:	bne	12c58 <mycore_strncasecmp@@Base+0x58>
   12c34:	mov	r0, #0
   12c38:	pop	{r4, pc}
   12c3c:	ldr	ip, [pc, #52]	; 12c78 <mycore_strncasecmp@@Base+0x78>
   12c40:	cmp	r1, r2
   12c44:	add	ip, pc, ip
   12c48:	bne	12c54 <mycore_strncasecmp@@Base+0x54>
   12c4c:	mov	r0, #0
   12c50:	bx	lr
   12c54:	push	{r4, lr}
   12c58:	ldrb	r4, [r0, r1]
   12c5c:	ldrb	lr, [r3, r1]
   12c60:	ldrb	r4, [ip, r4]
   12c64:	ldrb	lr, [ip, lr]
   12c68:	cmp	r4, lr
   12c6c:	beq	12c28 <mycore_strncasecmp@@Base+0x28>
   12c70:	sub	r0, r2, r1
   12c74:	pop	{r4, pc}
   12c78:	andeq	r6, r1, ip, lsr #10

00012c7c <mycore_strcasecmp@@Base>:
   12c7c:	mov	r2, r1
   12c80:	clz	r1, r1
   12c84:	lsr	r1, r1, #5
   12c88:	cmp	r0, #0
   12c8c:	moveq	r1, #1
   12c90:	cmp	r1, #0
   12c94:	beq	12ca4 <mycore_strcasecmp@@Base+0x28>
   12c98:	subs	r0, r0, r2
   12c9c:	movne	r0, #1
   12ca0:	bx	lr
   12ca4:	ldr	ip, [pc, #56]	; 12ce4 <mycore_strcasecmp@@Base+0x68>
   12ca8:	push	{r4, lr}
   12cac:	add	ip, pc, ip
   12cb0:	ldrb	r3, [r0, r1]
   12cb4:	ldrb	lr, [r2, r1]
   12cb8:	ldrb	r4, [ip, r3]
   12cbc:	ldrb	lr, [ip, lr]
   12cc0:	cmp	r4, lr
   12cc4:	beq	12cd0 <mycore_strcasecmp@@Base+0x54>
   12cc8:	add	r0, r1, #1
   12ccc:	pop	{r4, pc}
   12cd0:	cmp	r3, #0
   12cd4:	addne	r1, r1, #1
   12cd8:	bne	12cb0 <mycore_strcasecmp@@Base+0x34>
   12cdc:	mov	r0, r3
   12ce0:	pop	{r4, pc}
   12ce4:	andeq	r6, r1, r4, asr #9

00012ce8 <mycore_strncmp@@Base>:
   12ce8:	mov	r3, r1
   12cec:	clz	r1, r1
   12cf0:	lsr	r1, r1, #5
   12cf4:	cmp	r0, #0
   12cf8:	moveq	r1, #1
   12cfc:	cmp	r1, #0
   12d00:	beq	12d24 <mycore_strncmp@@Base+0x3c>
   12d04:	subs	r0, r0, r3
   12d08:	movne	r0, #1
   12d0c:	bx	lr
   12d10:	add	r1, r1, #1
   12d14:	cmp	r1, r2
   12d18:	bne	12d38 <mycore_strncmp@@Base+0x50>
   12d1c:	mov	r0, #0
   12d20:	pop	{pc}		; (ldr pc, [sp], #4)
   12d24:	cmp	r1, r2
   12d28:	bne	12d34 <mycore_strncmp@@Base+0x4c>
   12d2c:	mov	r0, #0
   12d30:	bx	lr
   12d34:	push	{lr}		; (str lr, [sp, #-4]!)
   12d38:	ldrb	lr, [r0, r1]
   12d3c:	ldrb	ip, [r3, r1]
   12d40:	cmp	lr, ip
   12d44:	beq	12d10 <mycore_strncmp@@Base+0x28>
   12d48:	sub	r0, r2, r1
   12d4c:	pop	{pc}		; (ldr pc, [sp], #4)

00012d50 <mycore_strcmp@@Base>:
   12d50:	mov	r2, r1
   12d54:	clz	r1, r1
   12d58:	lsr	r1, r1, #5
   12d5c:	cmp	r0, #0
   12d60:	moveq	r1, #1
   12d64:	cmp	r1, #0
   12d68:	beq	12d84 <mycore_strcmp@@Base+0x34>
   12d6c:	subs	r0, r0, r2
   12d70:	movne	r0, #1
   12d74:	bx	lr
   12d78:	cmp	r3, #0
   12d7c:	beq	12d9c <mycore_strcmp@@Base+0x4c>
   12d80:	add	r1, r1, #1
   12d84:	ldrb	ip, [r0, r1]
   12d88:	ldrb	r3, [r2, r1]
   12d8c:	cmp	r3, ip
   12d90:	beq	12d78 <mycore_strcmp@@Base+0x28>
   12d94:	add	r0, r1, #1
   12d98:	bx	lr
   12d9c:	mov	r0, r3
   12da0:	bx	lr

00012da4 <mycore_strcmp_ws@@Base>:
   12da4:	mov	ip, r1
   12da8:	clz	r1, r1
   12dac:	lsr	r1, r1, #5
   12db0:	cmp	r0, #0
   12db4:	moveq	r1, #1
   12db8:	cmp	r1, #0
   12dbc:	beq	12de8 <mycore_strcmp_ws@@Base+0x44>
   12dc0:	subs	r0, r0, ip
   12dc4:	movne	r0, #1
   12dc8:	bx	lr
   12dcc:	add	r1, r1, #1
   12dd0:	ldrb	r3, [r0, r1]
   12dd4:	ldrb	r2, [ip, r1]
   12dd8:	cmp	r2, r3
   12ddc:	beq	12e04 <mycore_strcmp_ws@@Base+0x60>
   12de0:	add	r0, r1, #1
   12de4:	pop	{pc}		; (ldr pc, [sp], #4)
   12de8:	ldrb	r3, [r0, r1]
   12dec:	ldrb	r2, [ip, r1]
   12df0:	cmp	r2, r3
   12df4:	beq	12e00 <mycore_strcmp_ws@@Base+0x5c>
   12df8:	add	r0, r1, #1
   12dfc:	bx	lr
   12e00:	push	{lr}		; (str lr, [sp, #-4]!)
   12e04:	sub	r3, r2, #9
   12e08:	sub	lr, r2, #12
   12e0c:	cmp	lr, #1
   12e10:	cmphi	r3, #1
   12e14:	movls	r3, #1
   12e18:	movhi	r3, #0
   12e1c:	tst	r2, #223	; 0xdf
   12e20:	moveq	r3, #1
   12e24:	cmp	r3, #0
   12e28:	beq	12dcc <mycore_strcmp_ws@@Base+0x28>
   12e2c:	mov	r0, #0
   12e30:	pop	{pc}		; (ldr pc, [sp], #4)

00012e34 <mycore_ustrcasecmp_without_checks_by_secondary@@Base>:
   12e34:	sub	r0, r0, #1
   12e38:	ldr	r2, [pc, #76]	; 12e8c <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x58>
   12e3c:	sub	r1, r1, #1
   12e40:	ldrb	r3, [r0, #1]!
   12e44:	add	r2, pc, r2
   12e48:	cmp	r3, #0
   12e4c:	bne	12e60 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x2c>
   12e50:	mov	r0, #1
   12e54:	bx	lr
   12e58:	mov	r0, #0
   12e5c:	pop	{pc}		; (ldr pc, [sp], #4)
   12e60:	push	{lr}		; (str lr, [sp, #-4]!)
   12e64:	ldrb	lr, [r1, #1]!
   12e68:	ldrb	ip, [r2, r3]
   12e6c:	ldrb	r3, [r2, lr]
   12e70:	cmp	ip, r3
   12e74:	bne	12e58 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x24>
   12e78:	ldrb	r3, [r0, #1]!
   12e7c:	cmp	r3, #0
   12e80:	bne	12e64 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x30>
   12e84:	mov	r0, #1
   12e88:	pop	{pc}		; (ldr pc, [sp], #4)
   12e8c:	andeq	r6, r1, ip, lsr #6

00012e90 <mycore_utils_avl_tree_create@@Base>:
   12e90:	mov	r1, #4
   12e94:	mov	r0, #1
   12e98:	b	feb4 <mycore_calloc@plt>

00012e9c <mycore_utils_avl_tree_init@@Base>:
   12e9c:	push	{r4, lr}
   12ea0:	mov	r4, r0
   12ea4:	bl	ffbc <mcobject_create@plt>
   12ea8:	cmp	r0, #0
   12eac:	str	r0, [r4]
   12eb0:	beq	12ecc <mycore_utils_avl_tree_init@@Base+0x30>
   12eb4:	mov	r2, #24
   12eb8:	mov	r1, #256	; 0x100
   12ebc:	bl	1070c <mcobject_init@plt>
   12ec0:	adds	r0, r0, #0
   12ec4:	movne	r0, #1
   12ec8:	pop	{r4, pc}
   12ecc:	mov	r0, #2
   12ed0:	pop	{r4, pc}

00012ed4 <mycore_utils_avl_tree_clean@@Base>:
   12ed4:	ldr	r0, [r0]
   12ed8:	b	10f04 <mcobject_clean@plt>

00012edc <mycore_utils_avl_tree_destroy@@Base>:
   12edc:	push	{r4, r5, r6, lr}
   12ee0:	subs	r4, r0, #0
   12ee4:	beq	12f0c <mycore_utils_avl_tree_destroy@@Base+0x30>
   12ee8:	mov	r5, r1
   12eec:	mov	r1, #1
   12ef0:	ldr	r0, [r4]
   12ef4:	bl	fd70 <mcobject_destroy@plt>
   12ef8:	cmp	r5, #0
   12efc:	beq	12f0c <mycore_utils_avl_tree_destroy@@Base+0x30>
   12f00:	mov	r0, r4
   12f04:	mov	r4, #0
   12f08:	bl	10d60 <mycore_free@plt>
   12f0c:	mov	r0, r4
   12f10:	pop	{r4, r5, r6, pc}

00012f14 <mycore_utils_avl_tree_node_create_root@@Base>:
   12f14:	push	{r4, r5, r6, lr}
   12f18:	mov	r6, r1
   12f1c:	mov	r1, #0
   12f20:	mov	r5, r2
   12f24:	ldr	r0, [r0]
   12f28:	bl	109f4 <mcobject_malloc@plt>
   12f2c:	mov	r4, r0
   12f30:	mov	r2, #16
   12f34:	mov	r1, #0
   12f38:	add	r0, r0, #8
   12f3c:	bl	10844 <memset@plt>
   12f40:	mov	r0, r4
   12f44:	stm	r4, {r5, r6}
   12f48:	pop	{r4, r5, r6, pc}

00012f4c <mycore_utils_avl_tree_node_clean@@Base>:
   12f4c:	mov	r2, #24
   12f50:	mov	r1, #0
   12f54:	b	10844 <memset@plt>

00012f58 <mycore_utils_avl_tree_node_height@@Base>:
   12f58:	cmp	r0, #0
   12f5c:	ldrshne	r0, [r0, #20]
   12f60:	bx	lr

00012f64 <mycore_utils_avl_tree_node_balance_factor@@Base>:
   12f64:	push	{r4, r5, r6, lr}
   12f68:	mov	r5, r0
   12f6c:	ldr	r0, [r0, #12]
   12f70:	bl	10f4c <mycore_utils_avl_tree_node_height@plt>
   12f74:	mov	r4, r0
   12f78:	ldr	r0, [r5, #8]
   12f7c:	bl	10f4c <mycore_utils_avl_tree_node_height@plt>
   12f80:	sub	r0, r4, r0
   12f84:	sxth	r0, r0
   12f88:	pop	{r4, r5, r6, pc}

00012f8c <mycore_utils_avl_tree_node_set_height@@Base>:
   12f8c:	push	{r4, r5, r6, lr}
   12f90:	mov	r5, r0
   12f94:	ldr	r0, [r0, #8]
   12f98:	bl	10f4c <mycore_utils_avl_tree_node_height@plt>
   12f9c:	mov	r4, r0
   12fa0:	ldr	r0, [r5, #12]
   12fa4:	bl	10f4c <mycore_utils_avl_tree_node_height@plt>
   12fa8:	cmp	r4, r0
   12fac:	movge	r0, r4
   12fb0:	add	r0, r0, #1
   12fb4:	strh	r0, [r5, #20]
   12fb8:	pop	{r4, r5, r6, pc}

00012fbc <mycore_utils_avl_tree_node_rotate_right@@Base>:
   12fbc:	push	{r4, lr}
   12fc0:	ldr	r4, [r0, #8]
   12fc4:	ldr	r3, [r0, #16]
   12fc8:	str	r3, [r4, #16]
   12fcc:	ldr	r3, [r4, #12]
   12fd0:	cmp	r3, #0
   12fd4:	strne	r0, [r3, #16]
   12fd8:	str	r3, [r0, #8]
   12fdc:	str	r4, [r0, #16]
   12fe0:	str	r0, [r4, #12]
   12fe4:	bl	10658 <mycore_utils_avl_tree_node_set_height@plt>
   12fe8:	mov	r0, r4
   12fec:	bl	10658 <mycore_utils_avl_tree_node_set_height@plt>
   12ff0:	mov	r0, r4
   12ff4:	pop	{r4, pc}

00012ff8 <mycore_utils_avl_tree_node_rotate_left@@Base>:
   12ff8:	push	{r4, lr}
   12ffc:	ldr	r4, [r0, #12]
   13000:	ldr	r3, [r0, #16]
   13004:	str	r3, [r4, #16]
   13008:	ldr	r3, [r4, #8]
   1300c:	cmp	r3, #0
   13010:	strne	r0, [r3, #16]
   13014:	str	r3, [r0, #12]
   13018:	str	r4, [r0, #16]
   1301c:	str	r0, [r4, #8]
   13020:	bl	10658 <mycore_utils_avl_tree_node_set_height@plt>
   13024:	mov	r0, r4
   13028:	bl	10658 <mycore_utils_avl_tree_node_set_height@plt>
   1302c:	mov	r0, r4
   13030:	pop	{r4, pc}

00013034 <mycore_utils_avl_tree_node_balance@@Base>:
   13034:	push	{r4, r5, r6, lr}
   13038:	mov	r4, r0
   1303c:	mov	r6, r1
   13040:	ldr	r0, [r0, #8]
   13044:	bl	10f4c <mycore_utils_avl_tree_node_height@plt>
   13048:	mov	r5, r0
   1304c:	ldr	r0, [r4, #12]
   13050:	bl	10f4c <mycore_utils_avl_tree_node_height@plt>
   13054:	cmp	r5, r0
   13058:	movlt	r3, r0
   1305c:	movge	r3, r5
   13060:	add	r3, r3, #1
   13064:	sub	r0, r0, r5
   13068:	cmn	r0, #2
   1306c:	strh	r3, [r4, #20]
   13070:	beq	130d8 <mycore_utils_avl_tree_node_balance@@Base+0xa4>
   13074:	cmp	r0, #2
   13078:	bne	1312c <mycore_utils_avl_tree_node_balance@@Base+0xf8>
   1307c:	ldr	r0, [r4, #12]
   13080:	bl	fd4c <mycore_utils_avl_tree_node_balance_factor@plt>
   13084:	cmp	r0, #0
   13088:	bge	13098 <mycore_utils_avl_tree_node_balance@@Base+0x64>
   1308c:	ldr	r0, [r4, #12]
   13090:	bl	fcec <mycore_utils_avl_tree_node_rotate_right@plt>
   13094:	str	r0, [r4, #12]
   13098:	ldr	r5, [r4, #16]
   1309c:	cmp	r5, #0
   130a0:	beq	130cc <mycore_utils_avl_tree_node_balance@@Base+0x98>
   130a4:	ldr	r3, [r5, #12]
   130a8:	mov	r0, r4
   130ac:	cmp	r3, r4
   130b0:	bne	130c0 <mycore_utils_avl_tree_node_balance@@Base+0x8c>
   130b4:	bl	10ba4 <mycore_utils_avl_tree_node_rotate_left@plt>
   130b8:	str	r0, [r5, #12]
   130bc:	pop	{r4, r5, r6, pc}
   130c0:	bl	10ba4 <mycore_utils_avl_tree_node_rotate_left@plt>
   130c4:	str	r0, [r5, #8]
   130c8:	pop	{r4, r5, r6, pc}
   130cc:	mov	r0, r4
   130d0:	pop	{r4, r5, r6, lr}
   130d4:	b	10ba4 <mycore_utils_avl_tree_node_rotate_left@plt>
   130d8:	ldr	r0, [r4, #8]
   130dc:	bl	fd4c <mycore_utils_avl_tree_node_balance_factor@plt>
   130e0:	cmp	r0, #0
   130e4:	ble	130f4 <mycore_utils_avl_tree_node_balance@@Base+0xc0>
   130e8:	ldr	r0, [r4, #8]
   130ec:	bl	10ba4 <mycore_utils_avl_tree_node_rotate_left@plt>
   130f0:	str	r0, [r4, #8]
   130f4:	ldr	r5, [r4, #16]
   130f8:	cmp	r5, #0
   130fc:	beq	13120 <mycore_utils_avl_tree_node_balance@@Base+0xec>
   13100:	ldr	r3, [r5, #12]
   13104:	mov	r0, r4
   13108:	cmp	r3, r4
   1310c:	bne	13118 <mycore_utils_avl_tree_node_balance@@Base+0xe4>
   13110:	bl	fcec <mycore_utils_avl_tree_node_rotate_right@plt>
   13114:	b	130b8 <mycore_utils_avl_tree_node_balance@@Base+0x84>
   13118:	bl	fcec <mycore_utils_avl_tree_node_rotate_right@plt>
   1311c:	b	130c4 <mycore_utils_avl_tree_node_balance@@Base+0x90>
   13120:	mov	r0, r4
   13124:	pop	{r4, r5, r6, lr}
   13128:	b	fcec <mycore_utils_avl_tree_node_rotate_right@plt>
   1312c:	ldr	r3, [r4, #16]
   13130:	cmp	r3, #0
   13134:	streq	r4, [r6]
   13138:	ldr	r0, [r4, #16]
   1313c:	pop	{r4, r5, r6, pc}

00013140 <mycore_utils_avl_tree_add@@Base>:
   13140:	push	{r4, r5, r6, r7, r8, lr}
   13144:	mov	r8, r1
   13148:	mov	r7, r2
   1314c:	mov	r6, r3
   13150:	ldr	r5, [r1]
   13154:	cmp	r5, #0
   13158:	bne	13170 <mycore_utils_avl_tree_add@@Base+0x30>
   1315c:	mov	r2, r3
   13160:	mov	r1, r7
   13164:	bl	10e68 <mycore_utils_avl_tree_node_create_root@plt>
   13168:	str	r0, [r8]
   1316c:	pop	{r4, r5, r6, r7, r8, pc}
   13170:	mov	r1, #0
   13174:	ldr	r0, [r0]
   13178:	bl	109f4 <mcobject_malloc@plt>
   1317c:	mov	r4, r0
   13180:	bl	10f58 <mycore_utils_avl_tree_node_clean@plt>
   13184:	ldr	r3, [r5, #4]
   13188:	cmp	r3, r7
   1318c:	bne	131a0 <mycore_utils_avl_tree_add@@Base+0x60>
   13190:	str	r6, [r5]
   13194:	pop	{r4, r5, r6, r7, r8, pc}
   13198:	mov	r5, r3
   1319c:	b	13184 <mycore_utils_avl_tree_add@@Base+0x44>
   131a0:	bls	131d4 <mycore_utils_avl_tree_add@@Base+0x94>
   131a4:	ldr	r3, [r5, #8]
   131a8:	cmp	r3, #0
   131ac:	bne	13198 <mycore_utils_avl_tree_add@@Base+0x58>
   131b0:	str	r4, [r5, #8]
   131b4:	strd	r6, [r4]
   131b8:	str	r5, [r4, #16]
   131bc:	mov	r0, r4
   131c0:	mov	r1, r8
   131c4:	bl	109ac <mycore_utils_avl_tree_node_balance@plt>
   131c8:	subs	r4, r0, #0
   131cc:	bne	131bc <mycore_utils_avl_tree_add@@Base+0x7c>
   131d0:	pop	{r4, r5, r6, r7, r8, pc}
   131d4:	ldr	r3, [r5, #12]
   131d8:	cmp	r3, #0
   131dc:	bne	13198 <mycore_utils_avl_tree_add@@Base+0x58>
   131e0:	str	r4, [r5, #12]
   131e4:	b	131b4 <mycore_utils_avl_tree_add@@Base+0x74>

000131e8 <mycore_utils_avl_tree_find_min@@Base>:
   131e8:	cmp	r0, #0
   131ec:	bxeq	lr
   131f0:	ldr	r3, [r0, #12]
   131f4:	cmp	r3, #0
   131f8:	bxeq	lr
   131fc:	mov	r0, r3
   13200:	b	131f0 <mycore_utils_avl_tree_find_min@@Base+0x8>

00013204 <mycore_utils_avl_tree_rotate_for_delete@@Base>:
   13204:	cmp	r1, #0
   13208:	push	{r4, lr}
   1320c:	mov	r3, r0
   13210:	mov	r4, r2
   13214:	ldr	ip, [r0, #16]
   13218:	beq	132bc <mycore_utils_avl_tree_rotate_for_delete@@Base+0xb8>
   1321c:	ldr	r2, [r0, #8]
   13220:	cmp	r2, r1
   13224:	bne	13280 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x7c>
   13228:	ldr	r2, [r3, #12]
   1322c:	ldr	r0, [r1, #8]
   13230:	str	r2, [r1, #12]
   13234:	ldr	r2, [r3, #12]
   13238:	cmp	r0, #0
   1323c:	str	ip, [r1, #16]
   13240:	moveq	r0, r1
   13244:	cmp	r2, #0
   13248:	strne	r1, [r2, #16]
   1324c:	ldr	ip, [r3, #16]
   13250:	cmp	ip, #0
   13254:	streq	r1, [r4]
   13258:	beq	1326c <mycore_utils_avl_tree_rotate_for_delete@@Base+0x68>
   1325c:	ldr	r2, [ip, #8]
   13260:	cmp	r2, r3
   13264:	streq	r1, [ip, #8]
   13268:	strne	r1, [ip, #12]
   1326c:	cmp	r0, #0
   13270:	popeq	{r4, pc}
   13274:	mov	r1, r4
   13278:	bl	109ac <mycore_utils_avl_tree_node_balance@plt>
   1327c:	b	1326c <mycore_utils_avl_tree_rotate_for_delete@@Base+0x68>
   13280:	ldr	r0, [r1, #16]
   13284:	mov	lr, #0
   13288:	str	lr, [r0, #12]
   1328c:	ldr	r0, [r3, #12]
   13290:	str	r2, [r1, #8]
   13294:	ldr	r2, [r3, #8]
   13298:	str	r0, [r1, #12]
   1329c:	mov	r0, r1
   132a0:	str	ip, [r1, #16]
   132a4:	cmp	r2, lr
   132a8:	strne	r1, [r2, #16]
   132ac:	ldr	r2, [r3, #12]
   132b0:	cmp	r2, #0
   132b4:	strne	r1, [r2, #16]
   132b8:	b	1324c <mycore_utils_avl_tree_rotate_for_delete@@Base+0x48>
   132bc:	cmp	ip, #0
   132c0:	ldr	r2, [r0, #12]
   132c4:	beq	132e0 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xdc>
   132c8:	ldr	r1, [ip, #8]
   132cc:	cmp	r1, r0
   132d0:	mov	r0, ip
   132d4:	streq	r2, [ip, #8]
   132d8:	strne	r2, [ip, #12]
   132dc:	b	1326c <mycore_utils_avl_tree_rotate_for_delete@@Base+0x68>
   132e0:	str	r2, [r4]
   132e4:	pop	{r4, pc}

000132e8 <mycore_utils_avl_tree_delete@@Base>:
   132e8:	push	{r4, r5, r6, lr}
   132ec:	mov	r6, r0
   132f0:	ldr	r4, [r1]
   132f4:	cmp	r4, #0
   132f8:	beq	13338 <mycore_utils_avl_tree_delete@@Base+0x50>
   132fc:	ldr	r3, [r4, #4]
   13300:	ldr	r0, [r4, #8]
   13304:	cmp	r3, r2
   13308:	bne	13340 <mycore_utils_avl_tree_delete@@Base+0x58>
   1330c:	mov	r5, r1
   13310:	bl	fcb0 <mycore_utils_avl_tree_find_min@plt>
   13314:	mov	r1, r0
   13318:	mov	r2, r5
   1331c:	mov	r0, r4
   13320:	bl	1040c <mycore_utils_avl_tree_rotate_for_delete@plt>
   13324:	ldr	r5, [r4]
   13328:	mov	r1, r4
   1332c:	ldr	r0, [r6]
   13330:	bl	ff20 <mcobject_free@plt>
   13334:	mov	r4, r5
   13338:	mov	r0, r4
   1333c:	pop	{r4, r5, r6, pc}
   13340:	ldr	r4, [r4, #12]
   13344:	movhi	r4, r0
   13348:	b	132f4 <mycore_utils_avl_tree_delete@@Base+0xc>

0001334c <mycore_utils_avl_tree_search_by_type@@Base>:
   1334c:	cmp	r1, #0
   13350:	bne	1335c <mycore_utils_avl_tree_search_by_type@@Base+0x10>
   13354:	mov	r0, r1
   13358:	bx	lr
   1335c:	ldr	r3, [r1, #4]
   13360:	cmp	r3, r2
   13364:	beq	13354 <mycore_utils_avl_tree_search_by_type@@Base+0x8>
   13368:	ldr	r3, [r1, #8]
   1336c:	ldr	r1, [r1, #12]
   13370:	movhi	r1, r3
   13374:	b	1334c <mycore_utils_avl_tree_search_by_type@@Base>

00013378 <mycore_utils_avl_tree_list_all_nodes@@Base>:
   13378:	push	{r4, r5, r6, r7, r8, lr}
   1337c:	mov	r7, r0
   13380:	mov	r4, r1
   13384:	mov	r5, r2
   13388:	mov	r6, r3
   1338c:	cmp	r4, #0
   13390:	popeq	{r4, r5, r6, r7, r8, pc}
   13394:	mov	r0, r4
   13398:	mov	r1, r6
   1339c:	blx	r5
   133a0:	mov	r3, r6
   133a4:	mov	r2, r5
   133a8:	ldr	r1, [r4, #8]
   133ac:	mov	r0, r7
   133b0:	bl	13378 <mycore_utils_avl_tree_list_all_nodes@@Base>
   133b4:	ldr	r4, [r4, #12]
   133b8:	b	1338c <mycore_utils_avl_tree_list_all_nodes@@Base+0x14>

000133bc <mchar_async_create@@Base>:
   133bc:	mov	r1, #84	; 0x54
   133c0:	mov	r0, #1
   133c4:	b	feb4 <mycore_calloc@plt>

000133c8 <mchar_async_mem_malloc@@Base>:
   133c8:	push	{r4, r5, r6, lr}
   133cc:	subs	r4, r2, #0
   133d0:	popeq	{r4, r5, r6, pc}
   133d4:	mov	r6, r0
   133d8:	mov	r5, r3
   133dc:	ldr	r0, [r4]
   133e0:	cmp	r0, #0
   133e4:	beq	13418 <mchar_async_mem_malloc@@Base+0x50>
   133e8:	ldr	r3, [r4, #8]
   133ec:	cmp	r3, r5
   133f0:	bcs	1340c <mchar_async_mem_malloc@@Base+0x44>
   133f4:	bl	10d60 <mycore_free@plt>
   133f8:	ldr	r0, [r6]
   133fc:	add	r0, r5, r0
   13400:	str	r0, [r4, #8]
   13404:	bl	10c28 <mycore_malloc@plt>
   13408:	str	r0, [r4]
   1340c:	mov	r3, #0
   13410:	str	r3, [r4, #4]
   13414:	pop	{r4, r5, r6, pc}
   13418:	ldr	r0, [r6]
   1341c:	cmp	r0, r3
   13420:	movcc	r0, r3
   13424:	b	13400 <mchar_async_mem_malloc@@Base+0x38>

00013428 <mchar_sync_chunk_find_by_size@@Base>:
   13428:	ldr	r3, [r0]
   1342c:	ldr	r0, [r3, #12]
   13430:	cmp	r0, #0
   13434:	bxeq	lr
   13438:	ldr	r3, [r0, #8]
   1343c:	cmp	r3, r1
   13440:	bxcs	lr
   13444:	ldr	r0, [r0, #12]
   13448:	b	13430 <mchar_sync_chunk_find_by_size@@Base+0x8>

0001344c <mchar_sync_chunk_insert_after@@Base>:
   1344c:	ldr	r3, [r0, #12]
   13450:	cmp	r3, r1
   13454:	bxeq	lr
   13458:	ldr	r3, [r1, #16]
   1345c:	cmp	r3, #0
   13460:	ldrne	r2, [r1, #12]
   13464:	strne	r2, [r3, #12]
   13468:	ldr	r2, [r1, #12]
   1346c:	cmp	r2, #0
   13470:	strne	r3, [r2, #16]
   13474:	ldr	r3, [r0, #12]
   13478:	cmp	r3, #0
   1347c:	strne	r1, [r3, #16]
   13480:	str	r3, [r1, #12]
   13484:	str	r0, [r1, #16]
   13488:	str	r1, [r0, #12]
   1348c:	bx	lr

00013490 <mchar_async_crop_first_chars_without_cache@@Base>:
   13490:	cmp	r0, #0
   13494:	ldrne	r3, [r0, #-4]
   13498:	addne	r0, r0, r1
   1349c:	subne	r3, r3, r1
   134a0:	strne	r3, [r0, #-4]
   134a4:	bx	lr

000134a8 <mchar_async_get_size_by_data@@Base>:
   134a8:	cmp	r0, #0
   134ac:	ldrne	r0, [r0, #-4]
   134b0:	bx	lr

000134b4 <mchar_async_cache_init@@Base>:
   134b4:	mov	r3, #1
   134b8:	push	{r4, r5, r6, lr}
   134bc:	mov	r4, #0
   134c0:	mov	r5, r0
   134c4:	str	r3, [r0, #8]
   134c8:	mov	r3, #1024	; 0x400
   134cc:	str	r3, [r0, #4]
   134d0:	str	r4, [r0, #12]
   134d4:	str	r4, [r0, #16]
   134d8:	mov	r0, #20480	; 0x5000
   134dc:	bl	10c28 <mycore_malloc@plt>
   134e0:	cmp	r0, r4
   134e4:	str	r0, [r5]
   134e8:	beq	13528 <mchar_async_cache_init@@Base+0x74>
   134ec:	str	r4, [r0]
   134f0:	str	r4, [r0, #4]
   134f4:	str	r4, [r0, #8]
   134f8:	str	r4, [r0, #12]
   134fc:	ldr	r0, [r5, #4]
   13500:	str	r4, [r5, #24]
   13504:	str	r0, [r5, #28]
   13508:	lsl	r0, r0, #2
   1350c:	bl	10c28 <mycore_malloc@plt>
   13510:	cmp	r0, r4
   13514:	str	r0, [r5, #20]
   13518:	bne	13530 <mchar_async_cache_init@@Base+0x7c>
   1351c:	ldr	r0, [r5]
   13520:	bl	10d60 <mycore_free@plt>
   13524:	str	r0, [r5]
   13528:	mov	r0, #2
   1352c:	pop	{r4, r5, r6, pc}
   13530:	mov	r0, r4
   13534:	pop	{r4, r5, r6, pc}

00013538 <mchar_async_cache_clean@@Base>:
   13538:	mov	r3, #0
   1353c:	mov	r2, #1
   13540:	strd	r2, [r0, #8]
   13544:	ldr	r2, [r0]
   13548:	str	r3, [r0, #16]
   1354c:	str	r3, [r0, #24]
   13550:	cmp	r2, r3
   13554:	strne	r3, [r2]
   13558:	strne	r3, [r2, #4]
   1355c:	strne	r3, [r2, #8]
   13560:	strne	r3, [r2, #12]
   13564:	bx	lr

00013568 <mchar_async_node_clean@@Base>:
   13568:	ldr	r3, [r0, #60]	; 0x3c
   1356c:	cmp	r3, r1
   13570:	ldrhi	r0, [r0, #56]	; 0x38
   13574:	movhi	r3, #36	; 0x24
   13578:	mlahi	r0, r3, r1, r0
   1357c:	bxls	lr
   13580:	ldr	r2, [r0]
   13584:	ldr	r3, [r2, #16]
   13588:	cmp	r3, #0
   1358c:	bne	1359c <mchar_async_node_clean@@Base+0x34>
   13590:	add	r0, r0, #4
   13594:	str	r3, [r2, #4]
   13598:	b	106b8 <mchar_async_cache_clean@plt>
   1359c:	str	r3, [r0]
   135a0:	b	13580 <mchar_async_node_clean@@Base+0x18>

000135a4 <mchar_async_cache_destroy@@Base>:
   135a4:	push	{r4, r5, r6, lr}
   135a8:	subs	r4, r0, #0
   135ac:	beq	135e8 <mchar_async_cache_destroy@@Base+0x44>
   135b0:	mov	r5, r1
   135b4:	ldr	r0, [r4]
   135b8:	cmp	r0, #0
   135bc:	beq	135c4 <mchar_async_cache_destroy@@Base+0x20>
   135c0:	bl	10d60 <mycore_free@plt>
   135c4:	ldr	r0, [r4, #20]
   135c8:	cmp	r0, #0
   135cc:	beq	135d4 <mchar_async_cache_destroy@@Base+0x30>
   135d0:	bl	10d60 <mycore_free@plt>
   135d4:	cmp	r5, #0
   135d8:	beq	135e8 <mchar_async_cache_destroy@@Base+0x44>
   135dc:	mov	r0, r4
   135e0:	mov	r4, #0
   135e4:	bl	10d60 <mycore_free@plt>
   135e8:	mov	r0, r4
   135ec:	pop	{r4, r5, r6, pc}

000135f0 <mchar_async_destroy@@Base>:
   135f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   135f4:	subs	r4, r0, #0
   135f8:	beq	13674 <mchar_async_destroy@@Base+0x84>
   135fc:	mov	r7, r1
   13600:	ldr	r3, [r4, #56]	; 0x38
   13604:	cmp	r3, #0
   13608:	movne	r5, #0
   1360c:	movne	r6, #36	; 0x24
   13610:	bne	13690 <mchar_async_destroy@@Base+0xa0>
   13614:	ldr	r0, [r4, #68]	; 0x44
   13618:	cmp	r0, #0
   1361c:	beq	13624 <mchar_async_destroy@@Base+0x34>
   13620:	bl	10d60 <mycore_free@plt>
   13624:	ldr	r3, [r4, #4]
   13628:	cmp	r3, #0
   1362c:	movne	r5, #0
   13630:	movne	r8, #20
   13634:	bne	136fc <mchar_async_destroy@@Base+0x10c>
   13638:	mov	r1, #0
   1363c:	add	r0, r4, #24
   13640:	bl	10820 <mchar_async_cache_destroy@plt>
   13644:	mov	r1, #1
   13648:	ldr	r0, [r4, #80]	; 0x50
   1364c:	bl	10154 <mcsync_destroy@plt>
   13650:	mov	r2, #84	; 0x54
   13654:	mov	r1, #0
   13658:	mov	r0, r4
   1365c:	bl	10844 <memset@plt>
   13660:	cmp	r7, #0
   13664:	beq	13674 <mchar_async_destroy@@Base+0x84>
   13668:	mov	r0, r4
   1366c:	mov	r4, #0
   13670:	bl	10d60 <mycore_free@plt>
   13674:	mov	r0, r4
   13678:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1367c:	mla	r0, r6, r5, r0
   13680:	mov	r1, #0
   13684:	add	r5, r5, #1
   13688:	add	r0, r0, #4
   1368c:	bl	10820 <mchar_async_cache_destroy@plt>
   13690:	ldr	r0, [r4, #56]	; 0x38
   13694:	ldr	r3, [r4, #60]	; 0x3c
   13698:	cmp	r3, r5
   1369c:	bhi	1367c <mchar_async_destroy@@Base+0x8c>
   136a0:	bl	10d60 <mycore_free@plt>
   136a4:	mov	r3, #0
   136a8:	str	r3, [r4, #56]	; 0x38
   136ac:	b	13614 <mchar_async_destroy@@Base+0x24>
   136b0:	ldr	r3, [r0, r5, lsl #2]
   136b4:	lsl	r9, r5, #2
   136b8:	cmp	r3, #0
   136bc:	beq	136f8 <mchar_async_destroy@@Base+0x108>
   136c0:	mov	r6, #0
   136c4:	b	136e0 <mchar_async_destroy@@Base+0xf0>
   136c8:	mul	r3, r8, r6
   136cc:	ldr	r0, [r0, r3]
   136d0:	cmp	r0, #0
   136d4:	beq	136dc <mchar_async_destroy@@Base+0xec>
   136d8:	bl	10d60 <mycore_free@plt>
   136dc:	add	r6, r6, #1
   136e0:	ldr	r3, [r4, #4]
   136e4:	ldr	r0, [r3, r9]
   136e8:	ldr	r3, [r4, #16]
   136ec:	cmp	r3, r6
   136f0:	bhi	136c8 <mchar_async_destroy@@Base+0xd8>
   136f4:	bl	10d60 <mycore_free@plt>
   136f8:	add	r5, r5, #1
   136fc:	ldr	r0, [r4, #4]
   13700:	ldr	r3, [r4, #12]
   13704:	cmp	r3, r5
   13708:	bhi	136b0 <mchar_async_destroy@@Base+0xc0>
   1370c:	bl	10d60 <mycore_free@plt>
   13710:	mov	r3, #0
   13714:	str	r3, [r4, #4]
   13718:	b	13638 <mchar_async_destroy@@Base+0x48>

0001371c <mchar_async_cache_malloc@@Base>:
   1371c:	ldr	r3, [r0, #24]
   13720:	cmp	r3, #0
   13724:	beq	1373c <mchar_async_cache_malloc@@Base+0x20>
   13728:	ldr	r2, [r0, #20]
   1372c:	sub	r3, r3, #1
   13730:	str	r3, [r0, #24]
   13734:	ldr	r0, [r2, r3, lsl #2]
   13738:	bx	lr
   1373c:	ldr	r3, [r0, #4]
   13740:	push	{r4, lr}
   13744:	mov	r4, r0
   13748:	ldr	r2, [r0, #8]
   1374c:	add	r2, r2, #1
   13750:	cmp	r2, r3
   13754:	str	r2, [r0, #8]
   13758:	bcc	1377c <mchar_async_cache_malloc@@Base+0x60>
   1375c:	lsl	r3, r3, #1
   13760:	mov	r1, #20
   13764:	ldr	r0, [r0]
   13768:	mul	r1, r1, r3
   1376c:	str	r3, [r4, #4]
   13770:	bl	fb84 <mycore_realloc@plt>
   13774:	cmp	r0, #0
   13778:	strne	r0, [r4]
   1377c:	ldr	r0, [r4, #8]
   13780:	sub	r0, r0, #1
   13784:	pop	{r4, pc}

00013788 <mchar_async_cache_delete@@Base>:
   13788:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1378c:	mov	r2, #20
   13790:	ldr	ip, [r0]
   13794:	ldr	r5, [r0, #12]
   13798:	cmp	r5, #0
   1379c:	beq	138a0 <mchar_async_cache_delete@@Base+0x118>
   137a0:	mla	r3, r2, r5, ip
   137a4:	ldr	lr, [r3, #12]
   137a8:	ldr	r3, [r3, #4]
   137ac:	cmp	r3, r1
   137b0:	bcc	1396c <mchar_async_cache_delete@@Base+0x1e4>
   137b4:	mov	r3, #20
   137b8:	mla	r7, r3, r5, ip
   137bc:	ldr	r2, [r7, #12]
   137c0:	mla	lr, r3, r2, ip
   137c4:	ldr	r4, [lr, #4]
   137c8:	cmp	r4, r1
   137cc:	beq	13814 <mchar_async_cache_delete@@Base+0x8c>
   137d0:	ldr	r1, [r7, #8]
   137d4:	ldr	r4, [r7, #16]
   137d8:	cmp	r4, #0
   137dc:	beq	13900 <mchar_async_cache_delete@@Base+0x178>
   137e0:	mla	r6, r3, r4, ip
   137e4:	ldr	r8, [r6, #8]
   137e8:	cmp	r8, r5
   137ec:	bne	138ac <mchar_async_cache_delete@@Base+0x124>
   137f0:	cmp	r2, #0
   137f4:	beq	1384c <mchar_async_cache_delete@@Base+0xc4>
   137f8:	cmp	r1, #0
   137fc:	movne	r9, #20
   13800:	ldrne	r8, [lr, #8]
   13804:	bne	13820 <mchar_async_cache_delete@@Base+0x98>
   13808:	str	r2, [r6, #8]
   1380c:	str	r4, [lr, #16]
   13810:	b	1385c <mchar_async_cache_delete@@Base+0xd4>
   13814:	mov	r5, r2
   13818:	b	137b8 <mchar_async_cache_delete@@Base+0x30>
   1381c:	mov	r8, sl
   13820:	mla	r3, r9, r8, ip
   13824:	ldr	sl, [r3, #8]
   13828:	cmp	sl, #0
   1382c:	bne	1381c <mchar_async_cache_delete@@Base+0x94>
   13830:	cmp	r8, #0
   13834:	strne	r1, [r3, #8]
   13838:	ldrne	r3, [r7, #8]
   1383c:	streq	r1, [lr, #8]
   13840:	mlane	ip, r9, r3, ip
   13844:	strne	r8, [ip, #16]
   13848:	b	13808 <mchar_async_cache_delete@@Base+0x80>
   1384c:	str	r1, [r6, #8]
   13850:	ldr	r2, [r7, #8]
   13854:	mla	r3, r3, r2, ip
   13858:	str	r4, [r3, #16]
   1385c:	mov	r4, r0
   13860:	ldr	r0, [r0, #20]
   13864:	ldr	r3, [r4, #24]
   13868:	str	r5, [r0, r3, lsl #2]
   1386c:	ldr	r3, [r4, #24]
   13870:	ldr	r1, [r4, #28]
   13874:	add	r3, r3, #1
   13878:	cmp	r3, r1
   1387c:	str	r3, [r4, #24]
   13880:	bcc	1395c <mchar_async_cache_delete@@Base+0x1d4>
   13884:	lsl	r6, r1, #1
   13888:	lsl	r1, r1, #3
   1388c:	bl	fb84 <mycore_realloc@plt>
   13890:	cmp	r0, #0
   13894:	strne	r0, [r4, #20]
   13898:	strne	r6, [r4, #28]
   1389c:	bne	1395c <mchar_async_cache_delete@@Base+0x1d4>
   138a0:	mov	r5, #0
   138a4:	mov	r0, r5
   138a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   138ac:	cmp	r1, #0
   138b0:	beq	138f8 <mchar_async_cache_delete@@Base+0x170>
   138b4:	mla	r3, r3, r1, ip
   138b8:	cmp	r2, #0
   138bc:	movne	sl, #20
   138c0:	ldrne	r7, [r3, #12]
   138c4:	bne	138d4 <mchar_async_cache_delete@@Base+0x14c>
   138c8:	str	r1, [r6, #12]
   138cc:	b	13858 <mchar_async_cache_delete@@Base+0xd0>
   138d0:	mov	r7, r9
   138d4:	mla	r8, sl, r7, ip
   138d8:	ldr	r9, [r8, #12]
   138dc:	cmp	r9, #0
   138e0:	bne	138d0 <mchar_async_cache_delete@@Base+0x148>
   138e4:	cmp	r7, #0
   138e8:	strne	r2, [r8, #12]
   138ec:	streq	r2, [r3, #12]
   138f0:	strne	r7, [lr, #16]
   138f4:	b	138c8 <mchar_async_cache_delete@@Base+0x140>
   138f8:	str	r2, [r6, #12]
   138fc:	b	1380c <mchar_async_cache_delete@@Base+0x84>
   13900:	cmp	r1, #0
   13904:	streq	r2, [r0, #12]
   13908:	streq	r1, [lr, #16]
   1390c:	beq	1385c <mchar_async_cache_delete@@Base+0xd4>
   13910:	mla	r3, r3, r1, ip
   13914:	cmp	r2, #0
   13918:	movne	r8, #20
   1391c:	ldrne	r4, [r3, #12]
   13920:	bne	13938 <mchar_async_cache_delete@@Base+0x1b0>
   13924:	mov	r2, #0
   13928:	str	r1, [r0, #12]
   1392c:	str	r2, [r3, #16]
   13930:	b	1385c <mchar_async_cache_delete@@Base+0xd4>
   13934:	mov	r4, r7
   13938:	mla	r6, r8, r4, ip
   1393c:	ldr	r7, [r6, #12]
   13940:	cmp	r7, #0
   13944:	bne	13934 <mchar_async_cache_delete@@Base+0x1ac>
   13948:	cmp	r4, #0
   1394c:	strne	r2, [r6, #12]
   13950:	streq	r2, [r3, #12]
   13954:	strne	r4, [lr, #16]
   13958:	b	13924 <mchar_async_cache_delete@@Base+0x19c>
   1395c:	ldr	r3, [r4, #16]
   13960:	sub	r3, r3, #1
   13964:	str	r3, [r4, #16]
   13968:	b	138a4 <mchar_async_cache_delete@@Base+0x11c>
   1396c:	mov	r5, lr
   13970:	b	13798 <mchar_async_cache_delete@@Base+0x10>

00013974 <mchar_async_chunk_malloc_without_lock@@Base>:
   13974:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13978:	mov	r4, r0
   1397c:	mov	r7, r2
   13980:	ldr	r9, [r0, #40]	; 0x28
   13984:	cmp	r9, #0
   13988:	beq	139c0 <mchar_async_chunk_malloc_without_lock@@Base+0x4c>
   1398c:	mov	r1, r2
   13990:	add	r0, r0, #24
   13994:	bl	10ef8 <mchar_async_cache_delete@plt>
   13998:	cmp	r0, #0
   1399c:	bne	139ac <mchar_async_chunk_malloc_without_lock@@Base+0x38>
   139a0:	mov	r5, #0
   139a4:	mov	r0, r5
   139a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   139ac:	mov	r3, #20
   139b0:	ldr	r2, [r4, #24]
   139b4:	mul	r3, r3, r0
   139b8:	ldr	r5, [r2, r3]
   139bc:	b	139a4 <mchar_async_chunk_malloc_without_lock@@Base+0x30>
   139c0:	ldr	r3, [r0, #16]
   139c4:	mov	r8, r1
   139c8:	ldr	r2, [r0, #20]
   139cc:	cmp	r2, r3
   139d0:	bcc	13a58 <mchar_async_chunk_malloc_without_lock@@Base+0xe4>
   139d4:	ldr	r5, [r4, #12]
   139d8:	ldrd	r0, [r0, #4]
   139dc:	add	r3, r5, #1
   139e0:	cmp	r3, r1
   139e4:	str	r3, [r4, #12]
   139e8:	bcc	13a24 <mchar_async_chunk_malloc_without_lock@@Base+0xb0>
   139ec:	lsl	r3, r1, #1
   139f0:	lsl	r1, r1, #3
   139f4:	str	r3, [r4, #8]
   139f8:	bl	fb84 <mycore_realloc@plt>
   139fc:	subs	r6, r0, #0
   13a00:	beq	139a0 <mchar_async_chunk_malloc_without_lock@@Base+0x2c>
   13a04:	ldr	r2, [r4, #8]
   13a08:	mov	r1, r9
   13a0c:	ldr	r0, [r4, #12]
   13a10:	sub	r2, r2, r0
   13a14:	add	r0, r6, r0, lsl #2
   13a18:	lsl	r2, r2, #2
   13a1c:	bl	10844 <memset@plt>
   13a20:	str	r6, [r4, #4]
   13a24:	ldr	r3, [r4, #4]
   13a28:	ldr	r3, [r3, r5, lsl #2]
   13a2c:	cmp	r3, #0
   13a30:	bne	13a50 <mchar_async_chunk_malloc_without_lock@@Base+0xdc>
   13a34:	mov	r1, #20
   13a38:	ldr	r0, [r4, #16]
   13a3c:	bl	feb4 <mycore_calloc@plt>
   13a40:	cmp	r0, #0
   13a44:	beq	139a0 <mchar_async_chunk_malloc_without_lock@@Base+0x2c>
   13a48:	ldr	r3, [r4, #4]
   13a4c:	str	r0, [r3, r5, lsl #2]
   13a50:	mov	r3, #0
   13a54:	str	r3, [r4, #20]
   13a58:	ldr	r1, [r4, #4]
   13a5c:	mov	r6, #20
   13a60:	mov	r0, r4
   13a64:	ldr	r2, [r4, #12]
   13a68:	ldr	r3, [r4, #20]
   13a6c:	sub	r2, r2, #-1073741823	; 0xc0000001
   13a70:	ldr	r9, [r1, r2, lsl #2]
   13a74:	mov	r1, r8
   13a78:	mul	r6, r6, r3
   13a7c:	add	r3, r3, #1
   13a80:	str	r3, [r4, #20]
   13a84:	mov	r3, r7
   13a88:	add	r5, r9, r6
   13a8c:	mov	r2, r5
   13a90:	bl	10ff4 <mchar_async_mem_malloc@plt>
   13a94:	ldr	r3, [r9, r6]
   13a98:	cmp	r3, #0
   13a9c:	bne	139a4 <mchar_async_chunk_malloc_without_lock@@Base+0x30>
   13aa0:	b	139a0 <mchar_async_chunk_malloc_without_lock@@Base+0x2c>

00013aa4 <mchar_async_chunk_malloc@@Base>:
   13aa4:	push	{r4, r5, r6, lr}
   13aa8:	mov	r4, r0
   13aac:	mov	r5, r1
   13ab0:	mov	r6, r2
   13ab4:	ldr	r0, [r0, #80]	; 0x50
   13ab8:	bl	107e4 <mcsync_lock@plt>
   13abc:	mov	r1, r5
   13ac0:	mov	r2, r6
   13ac4:	mov	r0, r4
   13ac8:	bl	10b38 <mchar_async_chunk_malloc_without_lock@plt>
   13acc:	mov	r5, r0
   13ad0:	ldr	r0, [r4, #80]	; 0x50
   13ad4:	bl	10e50 <mcsync_unlock@plt>
   13ad8:	mov	r0, r5
   13adc:	pop	{r4, r5, r6, pc}

00013ae0 <mchar_async_clean@@Base>:
   13ae0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13ae4:	mov	r3, #1
   13ae8:	mov	r4, #0
   13aec:	mov	r8, r0
   13af0:	add	r0, r0, #24
   13af4:	mov	r9, #36	; 0x24
   13af8:	mov	sl, r4
   13afc:	str	r3, [r0, #-12]
   13b00:	str	r4, [r0, #-4]
   13b04:	bl	106b8 <mchar_async_cache_clean@plt>
   13b08:	ldr	r3, [r8, #60]	; 0x3c
   13b0c:	cmp	r3, r4
   13b10:	bhi	13b1c <mchar_async_clean@@Base+0x3c>
   13b14:	mov	r0, #0
   13b18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13b1c:	ldr	r6, [r8, #56]	; 0x38
   13b20:	mul	r5, r9, r4
   13b24:	add	r7, r6, r5
   13b28:	add	r0, r7, #4
   13b2c:	bl	106b8 <mchar_async_cache_clean@plt>
   13b30:	mov	r1, r7
   13b34:	mov	r0, r8
   13b38:	ldr	r2, [r8]
   13b3c:	bl	10964 <mchar_async_chunk_malloc@plt>
   13b40:	cmp	r0, #0
   13b44:	str	r0, [r6, r5]
   13b48:	addne	r4, r4, #1
   13b4c:	strne	sl, [r0, #16]
   13b50:	bne	13b08 <mchar_async_clean@@Base+0x28>
   13b54:	mov	r0, #2
   13b58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00013b5c <mchar_async_init@@Base>:
   13b5c:	cmp	r2, #4096	; 0x1000
   13b60:	push	{r4, r5, r6, lr}
   13b64:	mov	r4, r0
   13b68:	movcc	r2, #4096	; 0x1000
   13b6c:	str	r2, [r0]
   13b70:	str	r1, [r0, #16]
   13b74:	mov	r0, #1024	; 0x400
   13b78:	mov	r1, #4
   13b7c:	str	r0, [r4, #8]
   13b80:	bl	feb4 <mycore_calloc@plt>
   13b84:	cmp	r0, #0
   13b88:	str	r0, [r4, #4]
   13b8c:	bne	13b9c <mchar_async_init@@Base+0x40>
   13b90:	mov	r5, #2
   13b94:	mov	r0, r5
   13b98:	pop	{r4, r5, r6, pc}
   13b9c:	mov	r5, r0
   13ba0:	mov	r1, #20
   13ba4:	ldr	r0, [r4, #16]
   13ba8:	bl	feb4 <mycore_calloc@plt>
   13bac:	str	r0, [r5]
   13bb0:	ldr	r0, [r4, #4]
   13bb4:	ldr	r3, [r0]
   13bb8:	cmp	r3, #0
   13bbc:	bne	13bcc <mchar_async_init@@Base+0x70>
   13bc0:	bl	10d60 <mycore_free@plt>
   13bc4:	str	r0, [r4, #4]
   13bc8:	b	13b90 <mchar_async_init@@Base+0x34>
   13bcc:	add	r0, r4, #24
   13bd0:	bl	10bc8 <mchar_async_cache_init@plt>
   13bd4:	subs	r5, r0, #0
   13bd8:	beq	13bf8 <mchar_async_init@@Base+0x9c>
   13bdc:	ldr	r3, [r4, #4]
   13be0:	ldr	r0, [r3]
   13be4:	bl	10d60 <mycore_free@plt>
   13be8:	ldr	r0, [r4, #4]
   13bec:	bl	10d60 <mycore_free@plt>
   13bf0:	str	r0, [r4, #4]
   13bf4:	b	13b94 <mchar_async_init@@Base+0x38>
   13bf8:	mov	r0, #64	; 0x40
   13bfc:	mov	r1, #36	; 0x24
   13c00:	str	r5, [r4, #60]	; 0x3c
   13c04:	str	r0, [r4, #64]	; 0x40
   13c08:	bl	feb4 <mycore_calloc@plt>
   13c0c:	cmp	r0, #0
   13c10:	str	r0, [r4, #56]	; 0x38
   13c14:	beq	13b94 <mchar_async_init@@Base+0x38>
   13c18:	ldr	r0, [r4, #64]	; 0x40
   13c1c:	str	r5, [r4, #72]	; 0x48
   13c20:	str	r0, [r4, #76]	; 0x4c
   13c24:	lsl	r0, r0, #2
   13c28:	bl	10c28 <mycore_malloc@plt>
   13c2c:	cmp	r0, #0
   13c30:	str	r0, [r4, #68]	; 0x44
   13c34:	beq	13b94 <mchar_async_init@@Base+0x38>
   13c38:	mov	r0, r4
   13c3c:	bl	10b5c <mchar_async_clean@plt>
   13c40:	bl	fd34 <mcsync_create@plt>
   13c44:	cmp	r0, #0
   13c48:	str	r0, [r4, #80]	; 0x50
   13c4c:	beq	13b90 <mchar_async_init@@Base+0x34>
   13c50:	pop	{r4, r5, r6, lr}
   13c54:	b	107fc <mcsync_init@plt>

00013c58 <mchar_async_node_add@@Base>:
   13c58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13c5c:	mov	r4, r0
   13c60:	mov	r6, r1
   13c64:	ldr	r0, [r0, #80]	; 0x50
   13c68:	bl	107e4 <mcsync_lock@plt>
   13c6c:	cmp	r0, #0
   13c70:	beq	13c8c <mchar_async_node_add@@Base+0x34>
   13c74:	cmp	r6, #0
   13c78:	movne	r3, #96	; 0x60
   13c7c:	strne	r3, [r6]
   13c80:	bne	13cdc <mchar_async_node_add@@Base+0x84>
   13c84:	mov	r5, r6
   13c88:	b	13d14 <mchar_async_node_add@@Base+0xbc>
   13c8c:	ldr	r5, [r4, #72]	; 0x48
   13c90:	cmp	r5, #0
   13c94:	beq	13ce4 <mchar_async_node_add@@Base+0x8c>
   13c98:	ldr	r3, [r4, #68]	; 0x44
   13c9c:	sub	r5, r5, #1
   13ca0:	str	r5, [r4, #72]	; 0x48
   13ca4:	ldr	r5, [r3, r5, lsl #2]
   13ca8:	mov	r7, #36	; 0x24
   13cac:	ldr	r9, [r4, #56]	; 0x38
   13cb0:	mul	r7, r7, r5
   13cb4:	add	sl, r9, r7
   13cb8:	add	r0, sl, #4
   13cbc:	bl	10bc8 <mchar_async_cache_init@plt>
   13cc0:	subs	r8, r0, #0
   13cc4:	beq	13d1c <mchar_async_node_add@@Base+0xc4>
   13cc8:	cmp	r6, #0
   13ccc:	ldr	r0, [r4, #80]	; 0x50
   13cd0:	movne	r3, #2
   13cd4:	strne	r3, [r6]
   13cd8:	bl	10e50 <mcsync_unlock@plt>
   13cdc:	mov	r5, #0
   13ce0:	b	13d14 <mchar_async_node_add@@Base+0xbc>
   13ce4:	ldr	r3, [r4, #60]	; 0x3c
   13ce8:	ldr	r2, [r4, #64]	; 0x40
   13cec:	cmp	r3, r2
   13cf0:	addcc	r2, r3, #1
   13cf4:	movcc	r5, r3
   13cf8:	strcc	r2, [r4, #60]	; 0x3c
   13cfc:	bcc	13ca8 <mchar_async_node_add@@Base+0x50>
   13d00:	cmp	r6, #0
   13d04:	ldr	r0, [r4, #80]	; 0x50
   13d08:	movne	r3, #98	; 0x62
   13d0c:	strne	r3, [r6]
   13d10:	bl	10e50 <mcsync_unlock@plt>
   13d14:	mov	r0, r5
   13d18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13d1c:	mov	r1, sl
   13d20:	mov	r0, r4
   13d24:	ldr	r2, [r4]
   13d28:	bl	10b38 <mchar_async_chunk_malloc_without_lock@plt>
   13d2c:	cmp	r0, #0
   13d30:	str	r0, [r9, r7]
   13d34:	beq	13cc8 <mchar_async_node_add@@Base+0x70>
   13d38:	str	r8, [r0, #12]
   13d3c:	str	r8, [r0, #16]
   13d40:	ldr	r0, [r4, #80]	; 0x50
   13d44:	bl	10e50 <mcsync_unlock@plt>
   13d48:	cmp	r6, #0
   13d4c:	strne	r8, [r6]
   13d50:	b	13d14 <mchar_async_node_add@@Base+0xbc>

00013d54 <mchar_async_cache_add@@Base>:
   13d54:	ldr	r3, [r0, #16]
   13d58:	push	{r4, r5, r6, r7, r8, lr}
   13d5c:	mov	r7, r0
   13d60:	mov	r6, r1
   13d64:	mov	r5, r2
   13d68:	ldr	r4, [r0, #12]
   13d6c:	add	r3, r3, #1
   13d70:	str	r3, [r0, #16]
   13d74:	cmp	r4, #0
   13d78:	bne	13dac <mchar_async_cache_add@@Base+0x58>
   13d7c:	ldr	r8, [r0]
   13d80:	bl	fe60 <mchar_async_cache_malloc@plt>
   13d84:	mov	r3, #20
   13d88:	str	r0, [r7, #12]
   13d8c:	mul	r0, r3, r0
   13d90:	add	r3, r8, r0
   13d94:	str	r5, [r3, #4]
   13d98:	str	r4, [r3, #8]
   13d9c:	str	r4, [r3, #12]
   13da0:	str	r4, [r3, #16]
   13da4:	str	r6, [r8, r0]
   13da8:	pop	{r4, r5, r6, r7, r8, pc}
   13dac:	bl	fe60 <mchar_async_cache_malloc@plt>
   13db0:	ldr	ip, [r7]
   13db4:	mov	r3, #20
   13db8:	mla	lr, r3, r4, ip
   13dbc:	ldr	r2, [lr, #4]
   13dc0:	cmp	r2, r5
   13dc4:	bne	13e0c <mchar_async_cache_add@@Base+0xb8>
   13dc8:	ldr	r1, [lr, #12]
   13dcc:	mul	r7, r3, r0
   13dd0:	add	r2, ip, r7
   13dd4:	cmp	r1, #0
   13dd8:	str	r1, [r2, #12]
   13ddc:	ldrne	r1, [lr, #12]
   13de0:	mlane	r3, r3, r1, ip
   13de4:	strne	r0, [r3, #16]
   13de8:	mov	r3, #0
   13dec:	str	r0, [lr, #12]
   13df0:	str	r5, [r2, #4]
   13df4:	str	r3, [r2, #8]
   13df8:	str	r4, [r2, #16]
   13dfc:	str	r6, [ip, r7]
   13e00:	pop	{r4, r5, r6, r7, r8, pc}
   13e04:	mov	r4, r1
   13e08:	b	13db8 <mchar_async_cache_add@@Base+0x64>
   13e0c:	bls	13e5c <mchar_async_cache_add@@Base+0x108>
   13e10:	ldr	r1, [lr, #16]
   13e14:	mul	r8, r3, r0
   13e18:	add	r2, ip, r8
   13e1c:	cmp	r1, #0
   13e20:	streq	r0, [r7, #12]
   13e24:	beq	13e3c <mchar_async_cache_add@@Base+0xe8>
   13e28:	mla	r3, r3, r1, ip
   13e2c:	ldr	r7, [r3, #8]
   13e30:	cmp	r7, r4
   13e34:	streq	r0, [r3, #8]
   13e38:	strne	r0, [r3, #12]
   13e3c:	mov	r3, #0
   13e40:	str	r1, [r2, #16]
   13e44:	str	r0, [lr, #16]
   13e48:	str	r5, [r2, #4]
   13e4c:	str	r3, [r2, #8]
   13e50:	str	r4, [r2, #12]
   13e54:	str	r6, [ip, r8]
   13e58:	pop	{r4, r5, r6, r7, r8, pc}
   13e5c:	ldr	r1, [lr, #12]
   13e60:	cmp	r1, #0
   13e64:	bne	13e04 <mchar_async_cache_add@@Base+0xb0>
   13e68:	mul	r3, r3, r0
   13e6c:	str	r0, [lr, #12]
   13e70:	add	r2, ip, r3
   13e74:	str	r5, [r2, #4]
   13e78:	str	r1, [r2, #8]
   13e7c:	str	r1, [r2, #12]
   13e80:	str	r4, [r2, #16]
   13e84:	str	r6, [ip, r3]
   13e88:	pop	{r4, r5, r6, r7, r8, pc}

00013e8c <mchar_async_node_delete@@Base>:
   13e8c:	push	{r4, r5, r6, r7, r8, lr}
   13e90:	mov	r4, r0
   13e94:	mov	r6, r1
   13e98:	ldr	r0, [r0, #80]	; 0x50
   13e9c:	bl	107e4 <mcsync_lock@plt>
   13ea0:	ldr	r3, [r4, #60]	; 0x3c
   13ea4:	cmp	r3, r6
   13ea8:	bhi	13eb8 <mchar_async_node_delete@@Base+0x2c>
   13eac:	ldr	r0, [r4, #80]	; 0x50
   13eb0:	pop	{r4, r5, r6, r7, r8, lr}
   13eb4:	b	10e50 <mcsync_unlock@plt>
   13eb8:	mov	r3, #36	; 0x24
   13ebc:	ldr	r2, [r4, #56]	; 0x38
   13ec0:	mul	r3, r3, r6
   13ec4:	ldr	r5, [r2, r3]
   13ec8:	add	r7, r2, r3
   13ecc:	ldr	r3, [r5, #12]
   13ed0:	cmp	r3, #0
   13ed4:	bne	13f68 <mchar_async_node_delete@@Base+0xdc>
   13ed8:	add	r8, r4, #24
   13edc:	mov	r1, r5
   13ee0:	mov	r0, r8
   13ee4:	ldr	r2, [r5, #8]
   13ee8:	bl	10c10 <mchar_async_cache_add@plt>
   13eec:	ldr	r5, [r5, #16]
   13ef0:	cmp	r5, #0
   13ef4:	bne	13edc <mchar_async_node_delete@@Base+0x50>
   13ef8:	ldr	r3, [r7, #4]
   13efc:	cmp	r3, #0
   13f00:	beq	13f10 <mchar_async_node_delete@@Base+0x84>
   13f04:	mov	r1, r5
   13f08:	add	r0, r7, #4
   13f0c:	bl	10820 <mchar_async_cache_destroy@plt>
   13f10:	mov	r2, #36	; 0x24
   13f14:	mov	r1, #0
   13f18:	mov	r0, r7
   13f1c:	bl	10844 <memset@plt>
   13f20:	ldr	r3, [r4, #72]	; 0x48
   13f24:	ldr	r5, [r4, #76]	; 0x4c
   13f28:	cmp	r3, r5
   13f2c:	bcc	13f4c <mchar_async_node_delete@@Base+0xc0>
   13f30:	lsl	r1, r5, #2
   13f34:	ldr	r0, [r4, #68]	; 0x44
   13f38:	bl	fb84 <mycore_realloc@plt>
   13f3c:	cmp	r0, #0
   13f40:	lslne	r5, r5, #1
   13f44:	strne	r0, [r4, #68]	; 0x44
   13f48:	strne	r5, [r4, #76]	; 0x4c
   13f4c:	ldr	r3, [r4, #68]	; 0x44
   13f50:	ldr	r2, [r4, #72]	; 0x48
   13f54:	str	r6, [r3, r2, lsl #2]
   13f58:	ldr	r3, [r4, #72]	; 0x48
   13f5c:	add	r3, r3, #1
   13f60:	str	r3, [r4, #72]	; 0x48
   13f64:	b	13eac <mchar_async_node_delete@@Base+0x20>
   13f68:	mov	r5, r3
   13f6c:	b	13ecc <mchar_async_node_delete@@Base+0x40>

00013f70 <mchar_async_malloc@@Base>:
   13f70:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13f74:	subs	r9, r2, #0
   13f78:	beq	14078 <mchar_async_malloc@@Base+0x108>
   13f7c:	mov	r5, #36	; 0x24
   13f80:	mov	r6, r0
   13f84:	ldr	r8, [r0, #56]	; 0x38
   13f88:	mul	r5, r5, r1
   13f8c:	add	sl, r8, r5
   13f90:	ldr	r4, [r8, r5]
   13f94:	ldr	r3, [sl, #20]
   13f98:	cmp	r3, #0
   13f9c:	beq	13fc8 <mchar_async_malloc@@Base+0x58>
   13fa0:	mov	r1, r9
   13fa4:	add	r0, sl, #4
   13fa8:	bl	10ef8 <mchar_async_cache_delete@plt>
   13fac:	cmp	r0, #0
   13fb0:	beq	13fc8 <mchar_async_malloc@@Base+0x58>
   13fb4:	mov	r3, #20
   13fb8:	ldr	r2, [sl, #4]
   13fbc:	mul	r3, r3, r0
   13fc0:	ldr	r0, [r2, r3]
   13fc4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13fc8:	ldmib	r4, {r0, r3}
   13fcc:	add	r7, r9, #4
   13fd0:	add	r2, r0, r7
   13fd4:	cmp	r3, r2
   13fd8:	bcs	14058 <mchar_async_malloc@@Base+0xe8>
   13fdc:	add	r1, r0, #4
   13fe0:	cmp	r3, r1
   13fe4:	bls	14010 <mchar_async_malloc@@Base+0xa0>
   13fe8:	sub	r2, r3, #4
   13fec:	subs	r2, r2, r0
   13ff0:	beq	14010 <mchar_async_malloc@@Base+0xa0>
   13ff4:	ldr	r3, [r4]
   13ff8:	str	r2, [r3, r0]
   13ffc:	add	r1, r3, r1
   14000:	ldr	r0, [r4, #8]
   14004:	str	r0, [r4, #4]
   14008:	add	r0, sl, #4
   1400c:	bl	10c10 <mchar_async_cache_add@plt>
   14010:	mov	r1, r7
   14014:	mov	r0, sl
   14018:	bl	10aa8 <mchar_sync_chunk_find_by_size@plt>
   1401c:	subs	r4, r0, #0
   14020:	movne	r3, #0
   14024:	strne	r3, [r4, #4]
   14028:	bne	14048 <mchar_async_malloc@@Base+0xd8>
   1402c:	ldr	r2, [r6]
   14030:	mov	r1, sl
   14034:	mov	r0, r6
   14038:	cmp	r2, r7
   1403c:	addcc	r2, r2, r7
   14040:	bl	10964 <mchar_async_chunk_malloc@plt>
   14044:	mov	r4, r0
   14048:	mov	r1, r4
   1404c:	ldr	r0, [r8, r5]
   14050:	bl	fee4 <mchar_sync_chunk_insert_after@plt>
   14054:	str	r4, [r8, r5]
   14058:	ldrd	r2, [r4]
   1405c:	add	r0, r3, #4
   14060:	str	r9, [r2, r3]
   14064:	ldr	r3, [r4, #4]
   14068:	add	r0, r2, r0
   1406c:	add	r7, r3, r7
   14070:	str	r7, [r4, #4]
   14074:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14078:	mov	r0, r9
   1407c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00014080 <mchar_async_realloc@@Base>:
   14080:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14084:	subs	r4, r2, #0
   14088:	ldr	lr, [sp, #32]
   1408c:	beq	14120 <mchar_async_realloc@@Base+0xa0>
   14090:	ldr	r5, [r4, #-4]
   14094:	cmp	r5, lr
   14098:	bcs	14120 <mchar_async_realloc@@Base+0xa0>
   1409c:	mov	r7, r3
   140a0:	mov	ip, #36	; 0x24
   140a4:	ldr	r3, [r0, #56]	; 0x38
   140a8:	mul	ip, ip, r1
   140ac:	ldr	r8, [r3, ip]
   140b0:	add	r6, r3, ip
   140b4:	ldr	r2, [r8, #4]
   140b8:	cmp	r2, r5
   140bc:	bcc	140f0 <mchar_async_realloc@@Base+0x70>
   140c0:	ldr	r9, [r8]
   140c4:	sub	r2, r2, r5
   140c8:	add	r9, r9, r2
   140cc:	cmp	r4, r9
   140d0:	bne	140f0 <mchar_async_realloc@@Base+0x70>
   140d4:	ldr	r8, [r8, #8]
   140d8:	add	r2, r2, lr
   140dc:	cmp	r8, r2
   140e0:	strcs	lr, [r4, #-4]
   140e4:	ldrcs	r3, [r3, ip]
   140e8:	strcs	r2, [r3, #4]
   140ec:	bcs	14120 <mchar_async_realloc@@Base+0xa0>
   140f0:	mov	r2, lr
   140f4:	bl	108a4 <mchar_async_malloc@plt>
   140f8:	subs	r8, r0, #0
   140fc:	beq	1411c <mchar_async_realloc@@Base+0x9c>
   14100:	mov	r2, r7
   14104:	mov	r1, r4
   14108:	bl	fefc <memcpy@plt>
   1410c:	mov	r2, r5
   14110:	mov	r1, r4
   14114:	add	r0, r6, #4
   14118:	bl	10c10 <mchar_async_cache_add@plt>
   1411c:	mov	r4, r8
   14120:	mov	r0, r4
   14124:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00014128 <mchar_async_crop_first_chars@@Base>:
   14128:	cmp	r2, #0
   1412c:	push	{r4, lr}
   14130:	moveq	r4, r2
   14134:	beq	14178 <mchar_async_crop_first_chars@@Base+0x50>
   14138:	add	r4, r2, r3
   1413c:	ldr	ip, [r2, #-4]
   14140:	sub	ip, ip, r3
   14144:	str	ip, [r4, #-4]
   14148:	add	ip, r3, #4
   1414c:	cmp	ip, #4
   14150:	bls	14178 <mchar_async_crop_first_chars@@Base+0x50>
   14154:	mov	ip, r2
   14158:	sub	r2, r3, #4
   1415c:	mov	r3, #36	; 0x24
   14160:	str	r2, [ip, #-4]
   14164:	ldr	r0, [r0, #56]	; 0x38
   14168:	mla	r0, r3, r1, r0
   1416c:	mov	r1, ip
   14170:	add	r0, r0, #4
   14174:	bl	10c10 <mchar_async_cache_add@plt>
   14178:	mov	r0, r4
   1417c:	pop	{r4, pc}

00014180 <mchar_async_free@@Base>:
   14180:	subs	r3, r2, #0
   14184:	bxeq	lr
   14188:	mov	r2, #36	; 0x24
   1418c:	ldr	r0, [r0, #56]	; 0x38
   14190:	mla	r0, r2, r1, r0
   14194:	mov	r1, r3
   14198:	ldr	r2, [r3, #-4]
   1419c:	add	r0, r0, #4
   141a0:	b	10c10 <mchar_async_cache_add@plt>

000141a4 <mcobject_create@@Base>:
   141a4:	mov	r1, #24
   141a8:	mov	r0, #1
   141ac:	b	feb4 <mycore_calloc@plt>

000141b0 <mcobject_init@@Base>:
   141b0:	push	{r4, lr}
   141b4:	mov	r3, #0
   141b8:	mov	r4, r0
   141bc:	lsl	r0, r1, #2
   141c0:	str	r3, [r4]
   141c4:	str	r1, [r4, #8]
   141c8:	str	r3, [r4, #12]
   141cc:	str	r2, [r4, #16]
   141d0:	str	r1, [r4, #20]
   141d4:	bl	10c28 <mycore_malloc@plt>
   141d8:	cmp	r0, #0
   141dc:	str	r0, [r4, #4]
   141e0:	moveq	r0, #85	; 0x55
   141e4:	movne	r0, #0
   141e8:	pop	{r4, pc}

000141ec <mcobject_clean@@Base>:
   141ec:	push	{r4, r5, r6, lr}
   141f0:	ldr	r4, [r0]
   141f4:	cmp	r4, #0
   141f8:	popeq	{r4, r5, r6, pc}
   141fc:	mov	r6, r0
   14200:	b	14208 <mcobject_clean@@Base+0x1c>
   14204:	mov	r4, r3
   14208:	ldr	r3, [r4, #12]
   1420c:	cmp	r3, #0
   14210:	bne	14204 <mcobject_clean@@Base+0x18>
   14214:	ldr	r0, [r4]
   14218:	ldr	r5, [r4, #16]
   1421c:	cmp	r0, #0
   14220:	beq	14228 <mcobject_clean@@Base+0x3c>
   14224:	bl	10d60 <mycore_free@plt>
   14228:	mov	r0, r4
   1422c:	bl	10d60 <mycore_free@plt>
   14230:	subs	r4, r5, #0
   14234:	bne	14214 <mcobject_clean@@Base+0x28>
   14238:	str	r5, [r6]
   1423c:	str	r5, [r6, #12]
   14240:	pop	{r4, r5, r6, pc}

00014244 <mcobject_destroy@@Base>:
   14244:	push	{r4, r5, r6, lr}
   14248:	subs	r4, r0, #0
   1424c:	beq	14284 <mcobject_destroy@@Base+0x40>
   14250:	mov	r5, r1
   14254:	bl	10f04 <mcobject_clean@plt>
   14258:	ldr	r0, [r4, #4]
   1425c:	cmp	r0, #0
   14260:	beq	14270 <mcobject_destroy@@Base+0x2c>
   14264:	bl	10d60 <mycore_free@plt>
   14268:	mov	r3, #0
   1426c:	str	r3, [r4, #4]
   14270:	cmp	r5, #0
   14274:	beq	14284 <mcobject_destroy@@Base+0x40>
   14278:	mov	r0, r4
   1427c:	mov	r4, #0
   14280:	bl	10d60 <mycore_free@plt>
   14284:	mov	r0, r4
   14288:	pop	{r4, r5, r6, pc}

0001428c <mcobject_chunk_malloc@@Base>:
   1428c:	push	{r4, r5, r6, lr}
   14290:	subs	r6, r1, #0
   14294:	movne	r3, #0
   14298:	strne	r3, [r6]
   1429c:	ldr	r3, [r0]
   142a0:	cmp	r3, #0
   142a4:	beq	142c4 <mcobject_chunk_malloc@@Base+0x38>
   142a8:	ldr	r3, [r3, #12]
   142ac:	cmp	r3, #0
   142b0:	beq	142c4 <mcobject_chunk_malloc@@Base+0x38>
   142b4:	mov	r2, #0
   142b8:	str	r3, [r0]
   142bc:	str	r2, [r3, #4]
   142c0:	pop	{r4, r5, r6, pc}
   142c4:	mov	r4, r0
   142c8:	mov	r1, #20
   142cc:	mov	r0, #1
   142d0:	bl	feb4 <mycore_calloc@plt>
   142d4:	subs	r5, r0, #0
   142d8:	bne	142ec <mcobject_chunk_malloc@@Base+0x60>
   142dc:	cmp	r6, #0
   142e0:	movne	r3, #86	; 0x56
   142e4:	strne	r3, [r6]
   142e8:	pop	{r4, r5, r6, pc}
   142ec:	ldr	r3, [r4, #16]
   142f0:	ldr	r0, [r4, #20]
   142f4:	mul	r0, r0, r3
   142f8:	bl	10c28 <mycore_malloc@plt>
   142fc:	cmp	r0, #0
   14300:	str	r0, [r5]
   14304:	bne	14320 <mcobject_chunk_malloc@@Base+0x94>
   14308:	cmp	r6, #0
   1430c:	mov	r0, r5
   14310:	movne	r3, #87	; 0x57
   14314:	strne	r3, [r6]
   14318:	pop	{r4, r5, r6, lr}
   1431c:	b	10d60 <mycore_free@plt>
   14320:	ldr	r3, [r4, #20]
   14324:	str	r3, [r5, #8]
   14328:	ldr	r3, [r4]
   1432c:	cmp	r3, #0
   14330:	strne	r3, [r5, #16]
   14334:	strne	r5, [r3, #12]
   14338:	str	r5, [r4]
   1433c:	pop	{r4, r5, r6, pc}

00014340 <mcobject_malloc@@Base>:
   14340:	ldr	r3, [r0, #12]
   14344:	push	{r0, r1, r2, r4, r5, lr}
   14348:	cmp	r3, #0
   1434c:	beq	14378 <mcobject_malloc@@Base+0x38>
   14350:	cmp	r1, #0
   14354:	ldr	r2, [r0, #4]
   14358:	movne	r3, #0
   1435c:	strne	r3, [r1]
   14360:	ldr	r3, [r0, #12]
   14364:	sub	r3, r3, #1
   14368:	str	r3, [r0, #12]
   1436c:	ldr	r0, [r2, r3, lsl #2]
   14370:	add	sp, sp, #12
   14374:	pop	{r4, r5, pc}
   14378:	ldr	r3, [r0]
   1437c:	mov	r5, r1
   14380:	mov	r4, r0
   14384:	cmp	r3, #0
   14388:	beq	14398 <mcobject_malloc@@Base+0x58>
   1438c:	ldmib	r3, {r1, r2}
   14390:	cmp	r1, r2
   14394:	bcc	143c4 <mcobject_malloc@@Base+0x84>
   14398:	add	r1, sp, #4
   1439c:	mov	r0, r4
   143a0:	bl	fe84 <mcobject_chunk_malloc@plt>
   143a4:	ldr	r3, [sp, #4]
   143a8:	cmp	r3, #0
   143ac:	ldreq	r3, [r4]
   143b0:	beq	143c4 <mcobject_malloc@@Base+0x84>
   143b4:	cmp	r5, #0
   143b8:	mov	r0, #0
   143bc:	strne	r3, [r5]
   143c0:	b	14370 <mcobject_malloc@@Base+0x30>
   143c4:	cmp	r5, #0
   143c8:	movne	r2, #0
   143cc:	strne	r2, [r5]
   143d0:	ldr	r0, [r3, #4]
   143d4:	add	r2, r0, #1
   143d8:	str	r2, [r3, #4]
   143dc:	ldr	r3, [r3]
   143e0:	ldr	r2, [r4, #16]
   143e4:	mla	r0, r2, r0, r3
   143e8:	b	14370 <mcobject_malloc@@Base+0x30>

000143ec <mcobject_free@@Base>:
   143ec:	push	{r4, r5, r6, lr}
   143f0:	mov	r5, r1
   143f4:	mov	r4, r0
   143f8:	ldr	r1, [r0, #8]
   143fc:	ldr	r3, [r0, #12]
   14400:	cmp	r3, r1
   14404:	bcc	14424 <mcobject_free@@Base+0x38>
   14408:	lsl	r6, r1, #1
   1440c:	ldr	r0, [r0, #4]
   14410:	lsl	r1, r1, #3
   14414:	bl	fb84 <mycore_realloc@plt>
   14418:	cmp	r0, #0
   1441c:	beq	14440 <mcobject_free@@Base+0x54>
   14420:	stmib	r4, {r0, r6}
   14424:	ldr	r2, [r4, #4]
   14428:	mov	r0, #0
   1442c:	ldr	r3, [r4, #12]
   14430:	str	r5, [r2, r3, lsl #2]
   14434:	add	r3, r3, #1
   14438:	str	r3, [r4, #12]
   1443c:	pop	{r4, r5, r6, pc}
   14440:	mov	r0, #88	; 0x58
   14444:	pop	{r4, r5, r6, pc}

00014448 <mcobject_async_create@@Base>:
   14448:	mov	r1, #72	; 0x48
   1444c:	mov	r0, #1
   14450:	b	feb4 <mycore_calloc@plt>

00014454 <mcobject_async_chunk_up@@Base>:
   14454:	push	{r4, r5, r6, lr}
   14458:	mov	r3, #0
   1445c:	ldr	r5, [r0, #24]
   14460:	str	r3, [r0, #40]	; 0x28
   14464:	ldr	r6, [r0, #32]
   14468:	ldr	r3, [r5, r6, lsl #2]
   1446c:	cmp	r3, #0
   14470:	beq	1447c <mcobject_async_chunk_up@@Base+0x28>
   14474:	mov	r0, #0
   14478:	pop	{r4, r5, r6, pc}
   1447c:	mov	r4, r0
   14480:	mov	r1, #20
   14484:	ldr	r0, [r0, #36]	; 0x24
   14488:	bl	feb4 <mycore_calloc@plt>
   1448c:	ldr	r3, [r4, #24]
   14490:	str	r0, [r5, r6, lsl #2]
   14494:	ldr	r2, [r4, #32]
   14498:	ldr	r3, [r3, r2, lsl #2]
   1449c:	cmp	r3, #0
   144a0:	bne	14474 <mcobject_async_chunk_up@@Base+0x20>
   144a4:	mov	r0, #2
   144a8:	pop	{r4, r5, r6, pc}

000144ac <mcobject_async_destroy@@Base>:
   144ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   144b0:	subs	r4, r0, #0
   144b4:	beq	14530 <mcobject_async_destroy@@Base+0x84>
   144b8:	mov	r7, r1
   144bc:	ldr	r3, [r4, #44]	; 0x2c
   144c0:	cmp	r3, #0
   144c4:	movne	r5, #0
   144c8:	bne	14550 <mcobject_async_destroy@@Base+0xa4>
   144cc:	ldr	r0, [r4, #56]	; 0x38
   144d0:	cmp	r0, #0
   144d4:	beq	144dc <mcobject_async_destroy@@Base+0x30>
   144d8:	bl	10d60 <mycore_free@plt>
   144dc:	ldr	r3, [r4, #24]
   144e0:	cmp	r3, #0
   144e4:	movne	r5, #0
   144e8:	movne	r8, #20
   144ec:	bne	145b4 <mcobject_async_destroy@@Base+0x108>
   144f0:	ldr	r0, [r4, #12]
   144f4:	cmp	r0, #0
   144f8:	beq	14500 <mcobject_async_destroy@@Base+0x54>
   144fc:	bl	10d60 <mycore_free@plt>
   14500:	mov	r1, #1
   14504:	ldr	r0, [r4, #68]	; 0x44
   14508:	bl	10154 <mcsync_destroy@plt>
   1450c:	mov	r2, #72	; 0x48
   14510:	mov	r1, #0
   14514:	mov	r0, r4
   14518:	bl	10844 <memset@plt>
   1451c:	cmp	r7, #0
   14520:	beq	14530 <mcobject_async_destroy@@Base+0x84>
   14524:	mov	r0, r4
   14528:	mov	r4, #0
   1452c:	bl	10d60 <mycore_free@plt>
   14530:	mov	r0, r4
   14534:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14538:	add	r0, r0, r5, lsl #4
   1453c:	ldr	r0, [r0, #4]
   14540:	cmp	r0, #0
   14544:	beq	1454c <mcobject_async_destroy@@Base+0xa0>
   14548:	bl	10d60 <mycore_free@plt>
   1454c:	add	r5, r5, #1
   14550:	ldr	r0, [r4, #44]	; 0x2c
   14554:	ldr	r3, [r4, #48]	; 0x30
   14558:	cmp	r3, r5
   1455c:	bhi	14538 <mcobject_async_destroy@@Base+0x8c>
   14560:	bl	10d60 <mycore_free@plt>
   14564:	b	144cc <mcobject_async_destroy@@Base+0x20>
   14568:	ldr	r3, [r0, r5, lsl #2]
   1456c:	lsl	r9, r5, #2
   14570:	cmp	r3, #0
   14574:	beq	145b0 <mcobject_async_destroy@@Base+0x104>
   14578:	mov	r6, #0
   1457c:	b	14598 <mcobject_async_destroy@@Base+0xec>
   14580:	mul	r3, r8, r6
   14584:	ldr	r0, [r0, r3]
   14588:	cmp	r0, #0
   1458c:	beq	14594 <mcobject_async_destroy@@Base+0xe8>
   14590:	bl	10d60 <mycore_free@plt>
   14594:	add	r6, r6, #1
   14598:	ldr	r3, [r4, #24]
   1459c:	ldr	r0, [r3, r9]
   145a0:	ldr	r3, [r4, #36]	; 0x24
   145a4:	cmp	r3, r6
   145a8:	bhi	14580 <mcobject_async_destroy@@Base+0xd4>
   145ac:	bl	10d60 <mycore_free@plt>
   145b0:	add	r5, r5, #1
   145b4:	ldr	r0, [r4, #24]
   145b8:	ldr	r3, [r4, #32]
   145bc:	cmp	r3, r5
   145c0:	bhi	14568 <mcobject_async_destroy@@Base+0xbc>
   145c4:	bl	10d60 <mycore_free@plt>
   145c8:	b	144f0 <mcobject_async_destroy@@Base+0x44>

000145cc <mcobject_async_mem_malloc@@Base>:
   145cc:	push	{r4, r5, r6, lr}
   145d0:	mov	r6, r0
   145d4:	mov	r4, r1
   145d8:	mov	r5, r2
   145dc:	ldr	r0, [r1]
   145e0:	cmp	r0, #0
   145e4:	beq	14630 <mcobject_async_mem_malloc@@Base+0x64>
   145e8:	ldr	r3, [r1, #8]
   145ec:	cmp	r3, r2
   145f0:	bcs	14614 <mcobject_async_mem_malloc@@Base+0x48>
   145f4:	bl	10d60 <mycore_free@plt>
   145f8:	ldr	r2, [r6]
   145fc:	ldr	r0, [r6, #8]
   14600:	add	r5, r5, r2
   14604:	mul	r0, r0, r5
   14608:	str	r5, [r4, #8]
   1460c:	bl	10c28 <mycore_malloc@plt>
   14610:	str	r0, [r4]
   14614:	mov	r3, #0
   14618:	str	r3, [r4, #4]
   1461c:	ldr	r3, [r4]
   14620:	cmp	r3, #0
   14624:	moveq	r0, #2
   14628:	movne	r0, #0
   1462c:	pop	{r4, r5, r6, pc}
   14630:	ldr	r0, [r6]
   14634:	cmp	r0, r2
   14638:	addcc	r0, r0, r2
   1463c:	str	r0, [r1, #8]
   14640:	ldr	r0, [r6, #8]
   14644:	ldr	r3, [r1, #8]
   14648:	mul	r0, r0, r3
   1464c:	b	1460c <mcobject_async_mem_malloc@@Base+0x40>

00014650 <mcobject_async_chunk_malloc_without_lock@@Base>:
   14650:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14654:	subs	r6, r2, #0
   14658:	movne	r3, #0
   1465c:	ldr	r5, [r0, #20]
   14660:	strne	r3, [r6]
   14664:	cmp	r5, #0
   14668:	beq	1469c <mcobject_async_chunk_malloc_without_lock@@Base+0x4c>
   1466c:	ldr	r3, [r0, #12]
   14670:	sub	r1, r5, #1
   14674:	mov	r2, #0
   14678:	str	r1, [r0, #20]
   1467c:	ldr	r0, [r3, r1, lsl #2]
   14680:	str	r2, [r0, #4]
   14684:	str	r2, [r0, #12]
   14688:	ldr	r0, [r3, r1, lsl #2]
   1468c:	str	r2, [r0, #16]
   14690:	ldr	r5, [r3, r1, lsl #2]
   14694:	mov	r0, r5
   14698:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1469c:	ldr	r3, [r0, #36]	; 0x24
   146a0:	mov	r7, r1
   146a4:	mov	r4, r0
   146a8:	ldr	r2, [r0, #40]	; 0x28
   146ac:	cmp	r2, r3
   146b0:	bcc	14714 <mcobject_async_chunk_malloc_without_lock@@Base+0xc4>
   146b4:	ldr	r1, [r0, #28]
   146b8:	ldr	r3, [r0, #32]
   146bc:	cmp	r1, r3
   146c0:	bhi	146f8 <mcobject_async_chunk_malloc_without_lock@@Base+0xa8>
   146c4:	lsl	r9, r1, #1
   146c8:	ldr	r0, [r0, #24]
   146cc:	lsl	r1, r1, #3
   146d0:	bl	fb84 <mycore_realloc@plt>
   146d4:	subs	r8, r0, #0
   146d8:	beq	14764 <mcobject_async_chunk_malloc_without_lock@@Base+0x114>
   146dc:	ldr	r0, [r4, #32]
   146e0:	mov	r1, r5
   146e4:	sub	r2, r9, r0
   146e8:	add	r0, r8, r0, lsl #2
   146ec:	lsl	r2, r2, #2
   146f0:	bl	10844 <memset@plt>
   146f4:	strd	r8, [r4, #24]
   146f8:	mov	r0, r4
   146fc:	bl	1013c <mcobject_async_chunk_up@plt>
   14700:	cmp	r0, #0
   14704:	bne	14764 <mcobject_async_chunk_malloc_without_lock@@Base+0x114>
   14708:	ldr	r3, [r4, #32]
   1470c:	add	r3, r3, #1
   14710:	str	r3, [r4, #32]
   14714:	ldr	r1, [r4, #24]
   14718:	mov	r5, #20
   1471c:	mov	r0, r4
   14720:	ldr	r2, [r4, #32]
   14724:	ldr	r3, [r4, #40]	; 0x28
   14728:	sub	r2, r2, #-1073741823	; 0xc0000001
   1472c:	ldr	r2, [r1, r2, lsl #2]
   14730:	mla	r5, r5, r3, r2
   14734:	add	r3, r3, #1
   14738:	mov	r2, r7
   1473c:	str	r3, [r4, #40]	; 0x28
   14740:	mov	r3, #0
   14744:	cmp	r6, r3
   14748:	mov	r1, r5
   1474c:	str	r3, [r5, #12]
   14750:	str	r3, [r5, #16]
   14754:	beq	1477c <mcobject_async_chunk_malloc_without_lock@@Base+0x12c>
   14758:	bl	fd64 <mcobject_async_mem_malloc@plt>
   1475c:	str	r0, [r6]
   14760:	b	14694 <mcobject_async_chunk_malloc_without_lock@@Base+0x44>
   14764:	cmp	r6, #0
   14768:	movne	r3, #2
   1476c:	movne	r5, #0
   14770:	strne	r3, [r6]
   14774:	moveq	r5, r6
   14778:	b	14694 <mcobject_async_chunk_malloc_without_lock@@Base+0x44>
   1477c:	bl	fd64 <mcobject_async_mem_malloc@plt>
   14780:	b	14694 <mcobject_async_chunk_malloc_without_lock@@Base+0x44>

00014784 <mcobject_async_chunk_malloc@@Base>:
   14784:	push	{r4, r5, r6, lr}
   14788:	mov	r5, r0
   1478c:	mov	r6, r1
   14790:	mov	r4, r2
   14794:	ldr	r0, [r0, #68]	; 0x44
   14798:	bl	107e4 <mcsync_lock@plt>
   1479c:	cmp	r0, #0
   147a0:	beq	147bc <mcobject_async_chunk_malloc@@Base+0x38>
   147a4:	cmp	r4, #0
   147a8:	movne	r3, #1
   147ac:	strne	r3, [r4]
   147b0:	movne	r4, #0
   147b4:	mov	r0, r4
   147b8:	pop	{r4, r5, r6, pc}
   147bc:	mov	r2, r4
   147c0:	mov	r1, r6
   147c4:	mov	r0, r5
   147c8:	bl	10874 <mcobject_async_chunk_malloc_without_lock@plt>
   147cc:	mov	r4, r0
   147d0:	ldr	r0, [r5, #68]	; 0x44
   147d4:	bl	10e50 <mcsync_unlock@plt>
   147d8:	b	147b4 <mcobject_async_chunk_malloc@@Base+0x30>

000147dc <mcobject_async_clean@@Base>:
   147dc:	ldr	r3, [r0, #24]
   147e0:	push	{r4, r5, r6, r7, r8, lr}
   147e4:	mov	r4, #0
   147e8:	mov	r5, r0
   147ec:	mov	r7, r4
   147f0:	ldr	r3, [r3]
   147f4:	str	r4, [r0, #20]
   147f8:	str	r4, [r0, #40]	; 0x28
   147fc:	adds	r3, r3, #0
   14800:	movne	r3, #1
   14804:	str	r3, [r0, #32]
   14808:	ldr	r3, [r5, #48]	; 0x30
   1480c:	cmp	r3, r4
   14810:	popls	{r4, r5, r6, r7, r8, pc}
   14814:	ldr	r6, [r5, #44]	; 0x2c
   14818:	add	r3, r6, r4, lsl #4
   1481c:	str	r7, [r3, #12]
   14820:	ldr	r3, [r6, r4, lsl #4]
   14824:	cmp	r3, #0
   14828:	beq	14840 <mcobject_async_clean@@Base+0x64>
   1482c:	mov	r2, #0
   14830:	mov	r0, r5
   14834:	ldr	r1, [r5]
   14838:	bl	100ac <mcobject_async_chunk_malloc@plt>
   1483c:	str	r0, [r6, r4, lsl #4]
   14840:	add	r4, r4, #1
   14844:	b	14808 <mcobject_async_clean@@Base+0x2c>

00014848 <mcobject_async_init@@Base>:
   14848:	push	{r4, r5, r6, lr}
   1484c:	mov	r5, #0
   14850:	mov	r4, r0
   14854:	strd	r2, [r0]
   14858:	add	r3, r3, #4
   1485c:	str	r3, [r0, #8]
   14860:	str	r5, [r0, #32]
   14864:	str	r1, [r0, #36]	; 0x24
   14868:	mov	r0, #128	; 0x80
   1486c:	mov	r1, #4
   14870:	str	r0, [r4, #28]
   14874:	bl	feb4 <mycore_calloc@plt>
   14878:	cmp	r0, r5
   1487c:	str	r0, [r4, #24]
   14880:	beq	14918 <mcobject_async_init@@Base+0xd0>
   14884:	mov	r0, r4
   14888:	bl	1013c <mcobject_async_chunk_up@plt>
   1488c:	ldr	r0, [r4, #36]	; 0x24
   14890:	mov	r1, #4
   14894:	str	r0, [r4, #16]
   14898:	bl	feb4 <mycore_calloc@plt>
   1489c:	cmp	r0, r5
   148a0:	str	r0, [r4, #12]
   148a4:	beq	14920 <mcobject_async_init@@Base+0xd8>
   148a8:	mov	r0, #64	; 0x40
   148ac:	mov	r1, #16
   148b0:	str	r5, [r4, #48]	; 0x30
   148b4:	str	r0, [r4, #52]	; 0x34
   148b8:	bl	feb4 <mycore_calloc@plt>
   148bc:	cmp	r0, r5
   148c0:	str	r0, [r4, #44]	; 0x2c
   148c4:	bne	148d0 <mcobject_async_init@@Base+0x88>
   148c8:	mov	r0, #4
   148cc:	pop	{r4, r5, r6, pc}
   148d0:	ldr	r0, [r4, #52]	; 0x34
   148d4:	str	r5, [r4, #60]	; 0x3c
   148d8:	str	r0, [r4, #64]	; 0x40
   148dc:	lsl	r0, r0, #2
   148e0:	bl	10c28 <mycore_malloc@plt>
   148e4:	cmp	r0, #0
   148e8:	str	r0, [r4, #56]	; 0x38
   148ec:	beq	148c8 <mcobject_async_init@@Base+0x80>
   148f0:	mov	r0, r4
   148f4:	bl	10fe8 <mcobject_async_clean@plt>
   148f8:	bl	fd34 <mcsync_create@plt>
   148fc:	cmp	r0, #0
   14900:	str	r0, [r4, #68]	; 0x44
   14904:	beq	14928 <mcobject_async_init@@Base+0xe0>
   14908:	bl	107fc <mcsync_init@plt>
   1490c:	adds	r0, r0, #0
   14910:	movne	r0, #1
   14914:	pop	{r4, r5, r6, pc}
   14918:	mov	r0, #2
   1491c:	pop	{r4, r5, r6, pc}
   14920:	mov	r0, #3
   14924:	pop	{r4, r5, r6, pc}
   14928:	mov	r0, #1
   1492c:	pop	{r4, r5, r6, pc}

00014930 <mcobject_async_node_add@@Base>:
   14930:	push	{r4, r5, r6, r7, r8, lr}
   14934:	mov	r4, r0
   14938:	mov	r6, r1
   1493c:	ldr	r0, [r0, #68]	; 0x44
   14940:	bl	107e4 <mcsync_lock@plt>
   14944:	ldr	r7, [r4, #60]	; 0x3c
   14948:	cmp	r6, #0
   1494c:	movne	r3, #0
   14950:	strne	r3, [r6]
   14954:	cmp	r7, #0
   14958:	beq	149d8 <mcobject_async_node_add@@Base+0xa8>
   1495c:	ldr	r3, [r4, #56]	; 0x38
   14960:	sub	r7, r7, #1
   14964:	str	r7, [r4, #60]	; 0x3c
   14968:	ldr	r5, [r3, r7, lsl #2]
   1496c:	mov	r2, r6
   14970:	mov	r0, r4
   14974:	ldr	r1, [r4]
   14978:	ldr	r8, [r4, #44]	; 0x2c
   1497c:	bl	10874 <mcobject_async_chunk_malloc_without_lock@plt>
   14980:	cmp	r6, #0
   14984:	add	r7, r8, r5, lsl #4
   14988:	str	r0, [r8, r5, lsl #4]
   1498c:	beq	1499c <mcobject_async_node_add@@Base+0x6c>
   14990:	ldr	r3, [r6]
   14994:	cmp	r3, #0
   14998:	bne	149f0 <mcobject_async_node_add@@Base+0xc0>
   1499c:	mov	r3, #0
   149a0:	str	r3, [r0, #12]
   149a4:	str	r3, [r0, #16]
   149a8:	ldr	r0, [r4]
   149ac:	str	r0, [r7, #8]
   149b0:	lsl	r0, r0, #2
   149b4:	str	r3, [r7, #12]
   149b8:	bl	10c28 <mycore_malloc@plt>
   149bc:	cmp	r0, #0
   149c0:	str	r0, [r7, #4]
   149c4:	bne	14a04 <mcobject_async_node_add@@Base+0xd4>
   149c8:	cmp	r6, #0
   149cc:	movne	r3, #3
   149d0:	strne	r3, [r6]
   149d4:	b	149f0 <mcobject_async_node_add@@Base+0xc0>
   149d8:	ldr	r5, [r4, #48]	; 0x30
   149dc:	ldr	r3, [r4, #52]	; 0x34
   149e0:	cmp	r5, r3
   149e4:	addcc	r3, r5, #1
   149e8:	strcc	r3, [r4, #48]	; 0x30
   149ec:	bcc	1496c <mcobject_async_node_add@@Base+0x3c>
   149f0:	ldr	r0, [r4, #68]	; 0x44
   149f4:	mov	r5, #0
   149f8:	bl	10e50 <mcsync_unlock@plt>
   149fc:	mov	r0, r5
   14a00:	pop	{r4, r5, r6, r7, r8, pc}
   14a04:	ldr	r0, [r4, #68]	; 0x44
   14a08:	bl	10e50 <mcsync_unlock@plt>
   14a0c:	b	149fc <mcobject_async_node_add@@Base+0xcc>

00014a10 <mcobject_async_node_clean@@Base>:
   14a10:	ldr	r3, [r0, #48]	; 0x30
   14a14:	cmp	r3, r1
   14a18:	bxls	lr
   14a1c:	ldr	r2, [r0, #44]	; 0x2c
   14a20:	mov	r0, #0
   14a24:	add	r3, r2, r1, lsl #4
   14a28:	ldr	r2, [r2, r1, lsl #4]
   14a2c:	str	r0, [r3, #12]
   14a30:	cmp	r2, r0
   14a34:	bxeq	lr
   14a38:	ldr	r1, [r3]
   14a3c:	ldr	r2, [r1, #16]
   14a40:	cmp	r2, #0
   14a44:	bne	14a54 <mcobject_async_node_clean@@Base+0x44>
   14a48:	str	r2, [r1, #4]
   14a4c:	str	r2, [r3, #12]
   14a50:	bx	lr
   14a54:	str	r2, [r3]
   14a58:	b	14a38 <mcobject_async_node_clean@@Base+0x28>

00014a5c <mcobject_async_node_all_clean@@Base>:
   14a5c:	push	{r4, r5, r6, lr}
   14a60:	mov	r5, r0
   14a64:	mov	r4, #0
   14a68:	ldr	r3, [r5, #48]	; 0x30
   14a6c:	cmp	r3, r4
   14a70:	popls	{r4, r5, r6, pc}
   14a74:	mov	r1, r4
   14a78:	mov	r0, r5
   14a7c:	bl	10814 <mcobject_async_node_clean@plt>
   14a80:	add	r4, r4, #1
   14a84:	b	14a68 <mcobject_async_node_all_clean@@Base+0xc>

00014a88 <mcobject_async_node_delete@@Base>:
   14a88:	push	{r4, r5, r6, r7, r8, lr}
   14a8c:	mov	r4, r0
   14a90:	mov	r6, r1
   14a94:	ldr	r0, [r0, #68]	; 0x44
   14a98:	bl	107e4 <mcsync_lock@plt>
   14a9c:	ldr	r3, [r4, #48]	; 0x30
   14aa0:	cmp	r3, r6
   14aa4:	ldrhi	r3, [r4, #44]	; 0x2c
   14aa8:	addhi	r7, r3, r6, lsl #4
   14aac:	ldrhi	r5, [r3, r6, lsl #4]
   14ab0:	bhi	14ac4 <mcobject_async_node_delete@@Base+0x3c>
   14ab4:	ldr	r0, [r4, #68]	; 0x44
   14ab8:	pop	{r4, r5, r6, r7, r8, lr}
   14abc:	b	10e50 <mcsync_unlock@plt>
   14ac0:	mov	r5, r3
   14ac4:	ldr	r3, [r5, #12]
   14ac8:	cmp	r3, #0
   14acc:	bne	14ac0 <mcobject_async_node_delete@@Base+0x38>
   14ad0:	ldr	r1, [r4, #16]
   14ad4:	ldr	r3, [r4, #20]
   14ad8:	cmp	r3, r1
   14adc:	bcc	14b00 <mcobject_async_node_delete@@Base+0x78>
   14ae0:	lsl	r8, r1, #1
   14ae4:	ldr	r0, [r4, #12]
   14ae8:	lsl	r1, r1, #3
   14aec:	bl	fb84 <mycore_realloc@plt>
   14af0:	cmp	r0, #0
   14af4:	beq	14ab4 <mcobject_async_node_delete@@Base+0x2c>
   14af8:	str	r0, [r4, #12]
   14afc:	str	r8, [r4, #16]
   14b00:	ldr	r2, [r4, #12]
   14b04:	ldr	r3, [r4, #20]
   14b08:	str	r5, [r2, r3, lsl #2]
   14b0c:	add	r3, r3, #1
   14b10:	ldr	r5, [r5, #16]
   14b14:	str	r3, [r4, #20]
   14b18:	cmp	r5, #0
   14b1c:	bne	14ad0 <mcobject_async_node_delete@@Base+0x48>
   14b20:	ldr	r0, [r7, #4]
   14b24:	cmp	r0, #0
   14b28:	beq	14b30 <mcobject_async_node_delete@@Base+0xa8>
   14b2c:	bl	10d60 <mycore_free@plt>
   14b30:	mov	r2, #16
   14b34:	mov	r1, #0
   14b38:	mov	r0, r7
   14b3c:	bl	10844 <memset@plt>
   14b40:	ldr	r3, [r4, #60]	; 0x3c
   14b44:	ldr	r5, [r4, #64]	; 0x40
   14b48:	cmp	r3, r5
   14b4c:	bcc	14b6c <mcobject_async_node_delete@@Base+0xe4>
   14b50:	lsl	r1, r5, #2
   14b54:	ldr	r0, [r4, #56]	; 0x38
   14b58:	bl	fb84 <mycore_realloc@plt>
   14b5c:	cmp	r0, #0
   14b60:	lslne	r5, r5, #1
   14b64:	strne	r0, [r4, #56]	; 0x38
   14b68:	strne	r5, [r4, #64]	; 0x40
   14b6c:	ldr	r3, [r4, #56]	; 0x38
   14b70:	ldr	r2, [r4, #60]	; 0x3c
   14b74:	str	r6, [r3, r2, lsl #2]
   14b78:	ldr	r3, [r4, #60]	; 0x3c
   14b7c:	add	r3, r3, #1
   14b80:	str	r3, [r4, #60]	; 0x3c
   14b84:	b	14ab4 <mcobject_async_node_delete@@Base+0x2c>

00014b88 <mcobject_async_malloc@@Base>:
   14b88:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   14b8c:	ldr	r7, [r0, #44]	; 0x2c
   14b90:	add	ip, r7, r1, lsl #4
   14b94:	ldr	r3, [ip, #12]
   14b98:	cmp	r3, #0
   14b9c:	beq	14bc8 <mcobject_async_malloc@@Base+0x40>
   14ba0:	cmp	r2, #0
   14ba4:	sub	r3, r3, #1
   14ba8:	movne	r1, #0
   14bac:	strne	r1, [r2]
   14bb0:	ldr	r2, [ip, #4]
   14bb4:	ldr	r4, [r2, r3, lsl #2]
   14bb8:	str	r3, [ip, #12]
   14bbc:	mov	r0, r4
   14bc0:	add	sp, sp, #8
   14bc4:	pop	{r4, r5, r6, r7, r8, pc}
   14bc8:	mov	r6, r2
   14bcc:	ldr	r2, [r7, r1, lsl #4]
   14bd0:	mov	r5, r1
   14bd4:	mov	r8, r0
   14bd8:	ldr	ip, [r2, #4]
   14bdc:	ldr	r1, [r2, #8]
   14be0:	cmp	ip, r1
   14be4:	bcc	14c30 <mcobject_async_malloc@@Base+0xa8>
   14be8:	ldr	r4, [r2, #12]
   14bec:	cmp	r4, #0
   14bf0:	strne	r4, [r7, r5, lsl #4]
   14bf4:	strne	r3, [r4, #4]
   14bf8:	bne	14c30 <mcobject_async_malloc@@Base+0xa8>
   14bfc:	add	r2, sp, #4
   14c00:	ldr	r1, [r0]
   14c04:	bl	100ac <mcobject_async_chunk_malloc@plt>
   14c08:	ldr	r3, [sp, #4]
   14c0c:	cmp	r3, #0
   14c10:	beq	14c20 <mcobject_async_malloc@@Base+0x98>
   14c14:	cmp	r6, #0
   14c18:	strne	r3, [r6]
   14c1c:	b	14bbc <mcobject_async_malloc@@Base+0x34>
   14c20:	ldr	r3, [r7, r5, lsl #4]
   14c24:	str	r3, [r0, #16]
   14c28:	str	r0, [r3, #12]
   14c2c:	str	r0, [r7, r5, lsl #4]
   14c30:	ldr	r2, [r7, r5, lsl #4]
   14c34:	cmp	r6, #0
   14c38:	movne	r3, #0
   14c3c:	strne	r3, [r6]
   14c40:	ldr	r3, [r8, #8]
   14c44:	ldr	r4, [r2, #4]
   14c48:	mul	r3, r3, r4
   14c4c:	ldr	r4, [r2]
   14c50:	str	r5, [r4, r3]
   14c54:	add	r3, r3, #4
   14c58:	ldr	r1, [r2, #4]
   14c5c:	add	r4, r4, r3
   14c60:	add	r1, r1, #1
   14c64:	str	r1, [r2, #4]
   14c68:	b	14bbc <mcobject_async_malloc@@Base+0x34>

00014c6c <mcobject_async_free@@Base>:
   14c6c:	ldr	r3, [r1, #-4]
   14c70:	ldr	r2, [r0, #48]	; 0x30
   14c74:	cmp	r2, r3
   14c78:	bls	14cd4 <mcobject_async_free@@Base+0x68>
   14c7c:	push	{r4, r5, r6, lr}
   14c80:	mov	r5, r1
   14c84:	ldr	r4, [r0, #44]	; 0x2c
   14c88:	add	r4, r4, r3, lsl #4
   14c8c:	ldr	r1, [r4, #8]
   14c90:	ldr	r2, [r4, #12]
   14c94:	cmp	r2, r1
   14c98:	bcc	14cb8 <mcobject_async_free@@Base+0x4c>
   14c9c:	lsl	r6, r1, #1
   14ca0:	ldr	r0, [r4, #4]
   14ca4:	lsl	r1, r1, #3
   14ca8:	bl	fb84 <mycore_realloc@plt>
   14cac:	cmp	r0, #0
   14cb0:	beq	14cdc <mcobject_async_free@@Base+0x70>
   14cb4:	stmib	r4, {r0, r6}
   14cb8:	ldr	r2, [r4, #4]
   14cbc:	mov	r0, #0
   14cc0:	ldr	r3, [r4, #12]
   14cc4:	str	r5, [r2, r3, lsl #2]
   14cc8:	add	r3, r3, #1
   14ccc:	str	r3, [r4, #12]
   14cd0:	pop	{r4, r5, r6, pc}
   14cd4:	mov	r0, #5
   14cd8:	bx	lr
   14cdc:	mov	r0, #6
   14ce0:	pop	{r4, r5, r6, pc}

00014ce4 <mcsimple_create@@Base>:
   14ce4:	mov	r1, #28
   14ce8:	mov	r0, #1
   14cec:	b	feb4 <mycore_calloc@plt>

00014cf0 <mcsimple_clean@@Base>:
   14cf0:	mov	r3, #0
   14cf4:	str	r3, [r0, #12]
   14cf8:	str	r3, [r0, #24]
   14cfc:	bx	lr

00014d00 <mcsimple_destroy@@Base>:
   14d00:	push	{r4, r5, r6, lr}
   14d04:	subs	r4, r0, #0
   14d08:	beq	14d34 <mcsimple_destroy@@Base+0x34>
   14d0c:	mov	r6, r1
   14d10:	ldr	r3, [r4, #4]
   14d14:	cmp	r3, #0
   14d18:	movne	r5, #0
   14d1c:	bne	14d50 <mcsimple_destroy@@Base+0x50>
   14d20:	cmp	r6, #0
   14d24:	beq	14d34 <mcsimple_destroy@@Base+0x34>
   14d28:	mov	r0, r4
   14d2c:	mov	r4, #0
   14d30:	bl	10d60 <mycore_free@plt>
   14d34:	mov	r0, r4
   14d38:	pop	{r4, r5, r6, pc}
   14d3c:	ldr	r0, [r0, r5, lsl #2]
   14d40:	cmp	r0, #0
   14d44:	beq	14d4c <mcsimple_destroy@@Base+0x4c>
   14d48:	bl	10d60 <mycore_free@plt>
   14d4c:	add	r5, r5, #1
   14d50:	ldr	r0, [r4, #4]
   14d54:	ldr	r3, [r4, #16]
   14d58:	cmp	r3, r5
   14d5c:	bhi	14d3c <mcsimple_destroy@@Base+0x3c>
   14d60:	bl	10d60 <mycore_free@plt>
   14d64:	b	14d20 <mcsimple_destroy@@Base+0x20>

00014d68 <mcsimple_init_list_entries@@Base>:
   14d68:	push	{r4, r5, r6, lr}
   14d6c:	mov	r5, r1
   14d70:	mov	r4, r0
   14d74:	ldr	r1, [r0, #8]
   14d78:	ldr	r3, [r0, #12]
   14d7c:	cmp	r3, r1
   14d80:	bcc	14dbc <mcsimple_init_list_entries@@Base+0x54>
   14d84:	add	r6, r1, #128	; 0x80
   14d88:	lsl	r1, r1, #2
   14d8c:	ldr	r0, [r0, #4]
   14d90:	bl	fb84 <mycore_realloc@plt>
   14d94:	cmp	r0, #0
   14d98:	popeq	{r4, r5, r6, pc}
   14d9c:	mov	r1, #0
   14da0:	str	r0, [r4, #4]
   14da4:	add	r0, r0, r5, lsl #2
   14da8:	ldr	r2, [r4, #8]
   14dac:	sub	r2, r6, r2
   14db0:	lsl	r2, r2, #2
   14db4:	bl	10844 <memset@plt>
   14db8:	str	r6, [r4, #8]
   14dbc:	ldr	r6, [r4, #4]
   14dc0:	mov	r3, #0
   14dc4:	str	r3, [r4, #24]
   14dc8:	ldr	r3, [r6, r5, lsl #2]
   14dcc:	cmp	r3, #0
   14dd0:	bne	14dec <mcsimple_init_list_entries@@Base+0x84>
   14dd4:	ldr	r3, [r4, #16]
   14dd8:	ldr	r0, [r4, #20]
   14ddc:	add	r3, r3, #1
   14de0:	str	r3, [r4, #16]
   14de4:	bl	10c28 <mycore_malloc@plt>
   14de8:	str	r0, [r6, r5, lsl #2]
   14dec:	ldr	r3, [r4, #4]
   14df0:	ldr	r0, [r3, r5, lsl #2]
   14df4:	pop	{r4, r5, r6, pc}

00014df8 <mcsimple_init@@Base>:
   14df8:	push	{r4, r5, r6, lr}
   14dfc:	mov	r4, r0
   14e00:	mov	r6, r3
   14e04:	mov	r0, r1
   14e08:	mov	r5, r2
   14e0c:	str	r3, [r4]
   14e10:	mov	r3, #0
   14e14:	str	r1, [r4, #8]
   14e18:	mov	r1, #4
   14e1c:	str	r3, [r4, #12]
   14e20:	str	r3, [r4, #16]
   14e24:	bl	feb4 <mycore_calloc@plt>
   14e28:	cmp	r0, #0
   14e2c:	str	r0, [r4, #4]
   14e30:	popeq	{r4, r5, r6, pc}
   14e34:	mul	r5, r5, r6
   14e38:	mov	r0, r4
   14e3c:	ldr	r1, [r4, #12]
   14e40:	str	r5, [r4, #20]
   14e44:	pop	{r4, r5, r6, lr}
   14e48:	b	10928 <mcsimple_init_list_entries@plt>

00014e4c <mcsimple_malloc@@Base>:
   14e4c:	ldr	r3, [r0, #20]
   14e50:	push	{r4, lr}
   14e54:	mov	r4, r0
   14e58:	ldr	r2, [r0, #24]
   14e5c:	cmp	r2, r3
   14e60:	bcs	14e88 <mcsimple_malloc@@Base+0x3c>
   14e64:	ldr	r3, [r4]
   14e68:	ldr	r1, [r4, #12]
   14e6c:	ldr	r2, [r4, #24]
   14e70:	add	r3, r3, r2
   14e74:	str	r3, [r4, #24]
   14e78:	ldr	r3, [r4, #4]
   14e7c:	ldr	r0, [r3, r1, lsl #2]
   14e80:	add	r0, r0, r2
   14e84:	pop	{r4, pc}
   14e88:	ldr	r1, [r0, #12]
   14e8c:	add	r1, r1, #1
   14e90:	str	r1, [r0, #12]
   14e94:	bl	10928 <mcsimple_init_list_entries@plt>
   14e98:	cmp	r0, #0
   14e9c:	bne	14e64 <mcsimple_malloc@@Base+0x18>
   14ea0:	pop	{r4, pc}

00014ea4 <mcsimple_get_by_absolute_position@@Base>:
   14ea4:	ldr	r3, [r0]
   14ea8:	ldr	ip, [r0, #16]
   14eac:	mul	r1, r3, r1
   14eb0:	ldr	r3, [r0, #20]
   14eb4:	udiv	r2, r1, r3
   14eb8:	cmp	ip, r2
   14ebc:	ldrhi	r0, [r0, #4]
   14ec0:	mlshi	r3, r3, r2, r1
   14ec4:	ldrhi	r0, [r0, r2, lsl #2]
   14ec8:	addhi	r0, r0, r3
   14ecc:	movls	r0, #0
   14ed0:	bx	lr

00014ed4 <mcsync_create@@Base>:
   14ed4:	mov	r1, #8
   14ed8:	mov	r0, #1
   14edc:	b	feb4 <mycore_calloc@plt>

00014ee0 <mcsync_init@@Base>:
   14ee0:	push	{r4, r5, r6, lr}
   14ee4:	mov	r4, r0
   14ee8:	bl	104f0 <mcsync_spin_create@plt>
   14eec:	cmp	r0, #0
   14ef0:	str	r0, [r4]
   14ef4:	bne	14f04 <mcsync_init@@Base+0x24>
   14ef8:	mov	r5, #1
   14efc:	mov	r0, r5
   14f00:	pop	{r4, r5, r6, pc}
   14f04:	bl	10490 <mcsync_spin_init@plt>
   14f08:	subs	r5, r0, #0
   14f0c:	beq	14f1c <mcsync_init@@Base+0x3c>
   14f10:	ldr	r0, [r4]
   14f14:	bl	ff44 <mcsync_spin_destroy@plt>
   14f18:	b	14efc <mcsync_init@@Base+0x1c>
   14f1c:	bl	1085c <mcsync_mutex_create@plt>
   14f20:	cmp	r0, #0
   14f24:	str	r0, [r4, #4]
   14f28:	beq	14ef8 <mcsync_init@@Base+0x18>
   14f2c:	bl	10ae4 <mcsync_mutex_init@plt>
   14f30:	subs	r5, r0, #0
   14f34:	beq	14efc <mcsync_init@@Base+0x1c>
   14f38:	ldr	r0, [r4]
   14f3c:	bl	ff44 <mcsync_spin_destroy@plt>
   14f40:	ldr	r0, [r4, #4]
   14f44:	bl	fd10 <mcsync_mutex_destroy@plt>
   14f48:	b	14efc <mcsync_init@@Base+0x1c>

00014f4c <mcsync_clean@@Base>:
   14f4c:	push	{r4, lr}
   14f50:	mov	r4, r0
   14f54:	ldr	r0, [r0]
   14f58:	bl	10a0c <mcsync_spin_clean@plt>
   14f5c:	ldr	r0, [r4, #4]
   14f60:	pop	{r4, lr}
   14f64:	b	10de4 <mcsync_mutex_clean@plt>

00014f68 <mcsync_destroy@@Base>:
   14f68:	push	{r4, r5, r6, lr}
   14f6c:	subs	r4, r0, #0
   14f70:	beq	14f9c <mcsync_destroy@@Base+0x34>
   14f74:	mov	r5, r1
   14f78:	ldr	r0, [r4]
   14f7c:	bl	ff44 <mcsync_spin_destroy@plt>
   14f80:	ldr	r0, [r4, #4]
   14f84:	bl	fd10 <mcsync_mutex_destroy@plt>
   14f88:	cmp	r5, #0
   14f8c:	beq	14f9c <mcsync_destroy@@Base+0x34>
   14f90:	mov	r0, r4
   14f94:	mov	r4, #0
   14f98:	bl	10d60 <mycore_free@plt>
   14f9c:	mov	r0, r4
   14fa0:	pop	{r4, r5, r6, pc}

00014fa4 <mcsync_lock@@Base>:
   14fa4:	ldr	r0, [r0]
   14fa8:	b	10544 <mcsync_spin_lock@plt>

00014fac <mcsync_unlock@@Base>:
   14fac:	ldr	r0, [r0]
   14fb0:	b	10fb8 <mcsync_spin_unlock@plt>

00014fb4 <mctree_create@@Base>:
   14fb4:	push	{r4, r5, r6, lr}
   14fb8:	mov	r5, r0
   14fbc:	mov	r0, #16
   14fc0:	bl	10c28 <mycore_malloc@plt>
   14fc4:	subs	r4, r0, #0
   14fc8:	beq	15004 <mctree_create@@Base+0x50>
   14fcc:	add	r0, r5, #512	; 0x200
   14fd0:	add	r3, r5, #1
   14fd4:	mov	r1, #28
   14fd8:	str	r3, [r4, #4]
   14fdc:	str	r0, [r4, #8]
   14fe0:	bl	feb4 <mycore_calloc@plt>
   14fe4:	cmp	r0, #0
   14fe8:	mov	r6, r0
   14fec:	str	r0, [r4]
   14ff0:	strne	r5, [r4, #12]
   14ff4:	bne	15004 <mctree_create@@Base+0x50>
   14ff8:	mov	r0, r4
   14ffc:	mov	r4, r6
   15000:	bl	10d60 <mycore_free@plt>
   15004:	mov	r0, r4
   15008:	pop	{r4, r5, r6, pc}

0001500c <mctree_clean@@Base>:
   1500c:	ldr	r3, [r0, #12]
   15010:	mov	r2, #28
   15014:	mov	r1, #0
   15018:	add	r3, r3, #1
   1501c:	str	r3, [r0, #4]
   15020:	ldr	r3, [r0, #8]
   15024:	ldr	r0, [r0]
   15028:	mul	r2, r2, r3
   1502c:	b	10844 <memset@plt>

00015030 <mctree_destroy@@Base>:
   15030:	push	{r4, lr}
   15034:	subs	r4, r0, #0
   15038:	beq	15054 <mctree_destroy@@Base+0x24>
   1503c:	ldr	r0, [r4]
   15040:	cmp	r0, #0
   15044:	beq	1504c <mctree_destroy@@Base+0x1c>
   15048:	bl	10d60 <mycore_free@plt>
   1504c:	mov	r0, r4
   15050:	bl	10d60 <mycore_free@plt>
   15054:	mov	r0, #0
   15058:	pop	{r4, pc}

0001505c <__mtree_search_lowercase_to_start@@Base>:
   1505c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15060:	mov	r9, r2
   15064:	mov	r6, r3
   15068:	mov	r4, r1
   1506c:	mov	r8, #28
   15070:	ldr	r5, [r0]
   15074:	cmp	r4, #0
   15078:	bne	15084 <__mtree_search_lowercase_to_start@@Base+0x28>
   1507c:	mov	r0, r4
   15080:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15084:	mul	r3, r8, r4
   15088:	add	r7, r5, r3
   1508c:	ldr	r2, [r7, #4]
   15090:	cmp	r2, r6
   15094:	bne	150b8 <__mtree_search_lowercase_to_start@@Base+0x5c>
   15098:	mov	r2, r6
   1509c:	mov	r0, r9
   150a0:	ldr	r1, [r5, r3]
   150a4:	bl	10238 <mycore_strncasecmp@plt>
   150a8:	cmp	r0, #0
   150ac:	beq	1507c <__mtree_search_lowercase_to_start@@Base+0x20>
   150b0:	ldr	r4, [r7, #24]
   150b4:	b	15074 <__mtree_search_lowercase_to_start@@Base+0x18>
   150b8:	bcs	150d8 <__mtree_search_lowercase_to_start@@Base+0x7c>
   150bc:	ldr	r4, [r7, #20]
   150c0:	mla	r3, r8, r4, r5
   150c4:	ldr	r3, [r3, #4]
   150c8:	cmp	r3, r6
   150cc:	bls	15074 <__mtree_search_lowercase_to_start@@Base+0x18>
   150d0:	mov	r4, #0
   150d4:	b	1507c <__mtree_search_lowercase_to_start@@Base+0x20>
   150d8:	ldr	r4, [r7, #16]
   150dc:	mla	r3, r8, r4, r5
   150e0:	ldr	r3, [r3, #4]
   150e4:	cmp	r3, r6
   150e8:	bcs	15074 <__mtree_search_lowercase_to_start@@Base+0x18>
   150ec:	b	150d0 <__mtree_search_lowercase_to_start@@Base+0x74>

000150f0 <__mtree_search_to_start@@Base>:
   150f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   150f4:	mov	r9, r2
   150f8:	mov	r6, r3
   150fc:	mov	r4, r1
   15100:	mov	r8, #28
   15104:	ldr	r5, [r0]
   15108:	cmp	r4, #0
   1510c:	bne	15118 <__mtree_search_to_start@@Base+0x28>
   15110:	mov	r0, r4
   15114:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15118:	mul	r3, r8, r4
   1511c:	add	r7, r5, r3
   15120:	ldr	r2, [r7, #4]
   15124:	cmp	r2, r6
   15128:	bne	1514c <__mtree_search_to_start@@Base+0x5c>
   1512c:	mov	r2, r6
   15130:	mov	r0, r9
   15134:	ldr	r1, [r5, r3]
   15138:	bl	10010 <memcmp@plt>
   1513c:	cmp	r0, #0
   15140:	beq	15110 <__mtree_search_to_start@@Base+0x20>
   15144:	ldr	r4, [r7, #24]
   15148:	b	15108 <__mtree_search_to_start@@Base+0x18>
   1514c:	bcs	1516c <__mtree_search_to_start@@Base+0x7c>
   15150:	ldr	r4, [r7, #20]
   15154:	mla	r3, r8, r4, r5
   15158:	ldr	r3, [r3, #4]
   1515c:	cmp	r3, r6
   15160:	bls	15108 <__mtree_search_to_start@@Base+0x18>
   15164:	mov	r4, #0
   15168:	b	15110 <__mtree_search_to_start@@Base+0x20>
   1516c:	ldr	r4, [r7, #16]
   15170:	mla	r3, r8, r4, r5
   15174:	ldr	r3, [r3, #4]
   15178:	cmp	r3, r6
   1517c:	bcs	15108 <__mtree_search_to_start@@Base+0x18>
   15180:	b	15164 <__mtree_search_to_start@@Base+0x74>

00015184 <mctree_insert_child@@Base>:
   15184:	push	{r4, r5, r6, lr}
   15188:	mov	r4, r0
   1518c:	mov	ip, #28
   15190:	ldr	r0, [r0]
   15194:	ldr	r5, [r4, #4]
   15198:	mla	r1, ip, r1, r0
   1519c:	str	r5, [r1, #24]
   151a0:	mul	r1, ip, r5
   151a4:	add	ip, r0, r1
   151a8:	str	r2, [r0, r1]
   151ac:	ldr	r2, [r4, #8]
   151b0:	str	r3, [ip, #4]
   151b4:	ldr	r3, [sp, #16]
   151b8:	str	r3, [ip, #8]
   151bc:	add	r3, r5, #1
   151c0:	cmp	r3, r2
   151c4:	str	r3, [r4, #4]
   151c8:	bcc	151e8 <mctree_insert_child@@Base+0x64>
   151cc:	add	r3, r5, #4096	; 0x1000
   151d0:	add	r1, r1, #114688	; 0x1c000
   151d4:	add	r3, r3, #1
   151d8:	add	r1, r1, #28
   151dc:	str	r3, [r4, #8]
   151e0:	bl	fb84 <mycore_realloc@plt>
   151e4:	str	r0, [r4]
   151e8:	ldm	r4, {r0, r3}
   151ec:	mov	r1, #28
   151f0:	mul	r1, r1, r3
   151f4:	mov	r3, #0
   151f8:	add	r2, r0, r1
   151fc:	str	r3, [r0, r1]
   15200:	mov	r0, r5
   15204:	str	r3, [r2, #8]
   15208:	str	r3, [r2, #12]
   1520c:	str	r3, [r2, #16]
   15210:	str	r3, [r2, #20]
   15214:	str	r3, [r2, #24]
   15218:	pop	{r4, r5, r6, pc}

0001521c <mctree_insert_after@@Base>:
   1521c:	push	{r4, r5, r6, r7, r8, lr}
   15220:	mov	r4, r0
   15224:	mov	ip, #28
   15228:	ldr	r0, [r0]
   1522c:	ldr	r5, [r4, #4]
   15230:	mla	r8, ip, r1, r0
   15234:	mul	r6, ip, r5
   15238:	ldr	r7, [r8, #20]
   1523c:	add	lr, r0, r6
   15240:	cmp	r7, #0
   15244:	mlane	ip, ip, r7, r0
   15248:	strne	r5, [ip, #16]
   1524c:	strne	r7, [lr, #20]
   15250:	str	r5, [r8, #20]
   15254:	str	r1, [lr, #16]
   15258:	str	r2, [r0, r6]
   1525c:	ldr	r2, [r4, #8]
   15260:	str	r3, [lr, #4]
   15264:	ldr	r3, [sp, #24]
   15268:	str	r3, [lr, #8]
   1526c:	add	r3, r5, #1
   15270:	cmp	r3, r2
   15274:	str	r3, [r4, #4]
   15278:	bcc	15298 <mctree_insert_after@@Base+0x7c>
   1527c:	add	r3, r5, #4096	; 0x1000
   15280:	add	r1, r6, #114688	; 0x1c000
   15284:	add	r3, r3, #1
   15288:	add	r1, r1, #28
   1528c:	str	r3, [r4, #8]
   15290:	bl	fb84 <mycore_realloc@plt>
   15294:	str	r0, [r4]
   15298:	ldm	r4, {r0, r3}
   1529c:	mov	r1, #28
   152a0:	mul	r1, r1, r3
   152a4:	mov	r3, #0
   152a8:	add	r2, r0, r1
   152ac:	str	r3, [r0, r1]
   152b0:	mov	r0, r5
   152b4:	str	r3, [r2, #8]
   152b8:	str	r3, [r2, #12]
   152bc:	str	r3, [r2, #16]
   152c0:	str	r3, [r2, #20]
   152c4:	str	r3, [r2, #24]
   152c8:	pop	{r4, r5, r6, r7, r8, pc}

000152cc <mctree_insert_before@@Base>:
   152cc:	push	{r4, r5, r6, r7, r8, lr}
   152d0:	mov	r4, r0
   152d4:	mov	ip, #28
   152d8:	ldr	r0, [r0]
   152dc:	ldr	r5, [r4, #4]
   152e0:	mla	r8, ip, r1, r0
   152e4:	mul	r6, ip, r5
   152e8:	ldr	r7, [r8, #16]
   152ec:	add	lr, r0, r6
   152f0:	cmp	r7, #0
   152f4:	mlane	ip, ip, r7, r0
   152f8:	strne	r5, [ip, #20]
   152fc:	strne	r7, [lr, #16]
   15300:	str	r5, [r8, #16]
   15304:	str	r1, [lr, #20]
   15308:	str	r2, [r0, r6]
   1530c:	ldr	r2, [r4, #8]
   15310:	str	r3, [lr, #4]
   15314:	ldr	r3, [sp, #24]
   15318:	str	r3, [lr, #8]
   1531c:	add	r3, r5, #1
   15320:	cmp	r3, r2
   15324:	str	r3, [r4, #4]
   15328:	bcc	15348 <mctree_insert_before@@Base+0x7c>
   1532c:	add	r3, r5, #4096	; 0x1000
   15330:	add	r1, r6, #114688	; 0x1c000
   15334:	add	r3, r3, #1
   15338:	add	r1, r1, #28
   1533c:	str	r3, [r4, #8]
   15340:	bl	fb84 <mycore_realloc@plt>
   15344:	str	r0, [r4]
   15348:	ldm	r4, {r0, r3}
   1534c:	mov	r1, #28
   15350:	mul	r1, r1, r3
   15354:	mov	r3, #0
   15358:	add	r2, r0, r1
   1535c:	str	r3, [r0, r1]
   15360:	mov	r0, r5
   15364:	str	r3, [r2, #8]
   15368:	str	r3, [r2, #12]
   1536c:	str	r3, [r2, #16]
   15370:	str	r3, [r2, #20]
   15374:	str	r3, [r2, #24]
   15378:	pop	{r4, r5, r6, r7, r8, pc}

0001537c <__mtree_insert_to_start@@Base>:
   1537c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15380:	mov	sl, r0
   15384:	mov	r6, r2
   15388:	mov	r5, r3
   1538c:	mov	r4, r1
   15390:	mov	fp, #28
   15394:	ldr	r9, [r0]
   15398:	ldr	r7, [sp, #52]	; 0x34
   1539c:	cmp	r4, #0
   153a0:	beq	153dc <__mtree_insert_to_start@@Base+0x60>
   153a4:	mul	r3, fp, r4
   153a8:	add	r8, r9, r3
   153ac:	ldr	r2, [r8, #4]
   153b0:	cmp	r2, r5
   153b4:	bne	15430 <__mtree_insert_to_start@@Base+0xb4>
   153b8:	mov	r2, r5
   153bc:	mov	r0, r6
   153c0:	ldr	r1, [r9, r3]
   153c4:	bl	10010 <memcmp@plt>
   153c8:	cmp	r0, #0
   153cc:	bne	153e8 <__mtree_insert_to_start@@Base+0x6c>
   153d0:	ldr	r3, [sp, #48]	; 0x30
   153d4:	cmp	r3, #0
   153d8:	strne	r3, [r8, #8]
   153dc:	mov	r0, r4
   153e0:	add	sp, sp, #12
   153e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   153e8:	ldr	r3, [r8, #24]
   153ec:	cmp	r3, #0
   153f0:	bne	15478 <__mtree_insert_to_start@@Base+0xfc>
   153f4:	cmp	r7, #0
   153f8:	beq	1540c <__mtree_insert_to_start@@Base+0x90>
   153fc:	add	r2, sp, #48	; 0x30
   15400:	mov	r1, r5
   15404:	mov	r0, r6
   15408:	blx	r7
   1540c:	ldr	r3, [sp, #48]	; 0x30
   15410:	mov	r2, r6
   15414:	mov	r1, r4
   15418:	mov	r0, sl
   1541c:	str	r3, [sp]
   15420:	mov	r3, r5
   15424:	bl	101e4 <mctree_insert_child@plt>
   15428:	mov	r4, r0
   1542c:	b	153dc <__mtree_insert_to_start@@Base+0x60>
   15430:	bcs	15494 <__mtree_insert_to_start@@Base+0x118>
   15434:	ldr	r3, [r8, #20]
   15438:	cmp	r3, #0
   1543c:	bne	15468 <__mtree_insert_to_start@@Base+0xec>
   15440:	cmp	r7, #0
   15444:	bne	15480 <__mtree_insert_to_start@@Base+0x104>
   15448:	ldr	r3, [sp, #48]	; 0x30
   1544c:	mov	r2, r6
   15450:	mov	r1, r4
   15454:	mov	r0, sl
   15458:	str	r3, [sp]
   1545c:	mov	r3, r5
   15460:	bl	10c58 <mctree_insert_after@plt>
   15464:	b	15428 <__mtree_insert_to_start@@Base+0xac>
   15468:	mla	r2, fp, r3, r9
   1546c:	ldr	r2, [r2, #4]
   15470:	cmp	r2, r5
   15474:	bhi	15440 <__mtree_insert_to_start@@Base+0xc4>
   15478:	mov	r4, r3
   1547c:	b	1539c <__mtree_insert_to_start@@Base+0x20>
   15480:	add	r2, sp, #48	; 0x30
   15484:	mov	r1, r5
   15488:	mov	r0, r6
   1548c:	blx	r7
   15490:	b	15448 <__mtree_insert_to_start@@Base+0xcc>
   15494:	ldr	r3, [r8, #16]
   15498:	cmp	r3, #0
   1549c:	bne	154c8 <__mtree_insert_to_start@@Base+0x14c>
   154a0:	cmp	r7, #0
   154a4:	bne	154dc <__mtree_insert_to_start@@Base+0x160>
   154a8:	ldr	r3, [sp, #48]	; 0x30
   154ac:	mov	r2, r6
   154b0:	mov	r1, r4
   154b4:	mov	r0, sl
   154b8:	str	r3, [sp]
   154bc:	mov	r3, r5
   154c0:	bl	1004c <mctree_insert_before@plt>
   154c4:	b	15428 <__mtree_insert_to_start@@Base+0xac>
   154c8:	mla	r2, fp, r3, r9
   154cc:	ldr	r2, [r2, #4]
   154d0:	cmp	r2, r5
   154d4:	bcs	15478 <__mtree_insert_to_start@@Base+0xfc>
   154d8:	b	154a0 <__mtree_insert_to_start@@Base+0x124>
   154dc:	add	r2, sp, #48	; 0x30
   154e0:	mov	r1, r5
   154e4:	mov	r0, r6
   154e8:	blx	r7
   154ec:	b	154a8 <__mtree_insert_to_start@@Base+0x12c>

000154f0 <mctree_insert@@Base>:
   154f0:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   154f4:	subs	r4, r2, #0
   154f8:	str	r3, [sp, #12]
   154fc:	ldr	r8, [sp, #40]	; 0x28
   15500:	beq	15568 <mctree_insert@@Base+0x78>
   15504:	mov	r6, r1
   15508:	mov	r7, r0
   1550c:	ldr	r1, [pc, #152]	; 155ac <mctree_insert@@Base+0xbc>
   15510:	add	r2, r6, r4
   15514:	ldrb	r2, [r2, #-1]
   15518:	ldrb	ip, [r6]
   1551c:	add	r1, pc, r1
   15520:	ldrb	r2, [r1, r2]
   15524:	ldrb	r5, [r1, ip]
   15528:	ldr	r1, [r0, #12]
   1552c:	add	r2, r2, r5
   15530:	udiv	r5, r2, r1
   15534:	mls	r5, r1, r5, r2
   15538:	ldr	r1, [r0]
   1553c:	mov	r2, #28
   15540:	add	r5, r5, #1
   15544:	mla	r2, r2, r5, r1
   15548:	ldr	r1, [r2, #24]
   1554c:	cmp	r1, #0
   15550:	beq	15574 <mctree_insert@@Base+0x84>
   15554:	mov	r2, r6
   15558:	stm	sp, {r3, r8}
   1555c:	mov	r3, r4
   15560:	bl	1034c <__mtree_insert_to_start@plt>
   15564:	mov	r4, r0
   15568:	mov	r0, r4
   1556c:	add	sp, sp, #16
   15570:	pop	{r4, r5, r6, r7, r8, pc}
   15574:	cmp	r8, #0
   15578:	beq	1558c <mctree_insert@@Base+0x9c>
   1557c:	add	r2, sp, #12
   15580:	mov	r1, r4
   15584:	mov	r0, r6
   15588:	blx	r8
   1558c:	ldr	r3, [sp, #12]
   15590:	mov	r2, r6
   15594:	mov	r1, r5
   15598:	mov	r0, r7
   1559c:	str	r3, [sp]
   155a0:	mov	r3, r4
   155a4:	bl	101e4 <mctree_insert_child@plt>
   155a8:	b	15564 <mctree_insert@@Base+0x74>
   155ac:	andeq	r3, r1, r4, asr sp

000155b0 <mctree_search@@Base>:
   155b0:	subs	r3, r2, #0
   155b4:	beq	1561c <mctree_search@@Base+0x6c>
   155b8:	ldr	ip, [pc, #100]	; 15624 <mctree_search@@Base+0x74>
   155bc:	add	r2, r1, r3
   155c0:	push	{r4, lr}
   155c4:	ldrb	r2, [r2, #-1]
   155c8:	add	ip, pc, ip
   155cc:	ldr	r4, [r0]
   155d0:	ldrb	lr, [ip, r2]
   155d4:	ldrb	r2, [r1]
   155d8:	ldrb	ip, [ip, r2]
   155dc:	ldr	r2, [r0, #12]
   155e0:	add	lr, lr, ip
   155e4:	udiv	ip, lr, r2
   155e8:	mls	lr, r2, ip, lr
   155ec:	mov	ip, #28
   155f0:	mla	ip, lr, ip, ip
   155f4:	add	ip, r4, ip
   155f8:	ldr	ip, [ip, #24]
   155fc:	cmp	ip, #0
   15600:	beq	15614 <mctree_search@@Base+0x64>
   15604:	mov	r2, r1
   15608:	pop	{r4, lr}
   1560c:	mov	r1, ip
   15610:	b	1097c <__mtree_search_to_start@plt>
   15614:	mov	r0, #0
   15618:	pop	{r4, pc}
   1561c:	mov	r0, #0
   15620:	bx	lr
   15624:	andeq	r3, r1, r8, lsr #25

00015628 <mctree_search_lowercase@@Base>:
   15628:	subs	r3, r2, #0
   1562c:	beq	15694 <mctree_search_lowercase@@Base+0x6c>
   15630:	ldr	ip, [pc, #100]	; 1569c <mctree_search_lowercase@@Base+0x74>
   15634:	add	r2, r1, r3
   15638:	push	{r4, lr}
   1563c:	ldrb	r2, [r2, #-1]
   15640:	add	ip, pc, ip
   15644:	ldr	r4, [r0]
   15648:	ldrb	lr, [ip, r2]
   1564c:	ldrb	r2, [r1]
   15650:	ldrb	ip, [ip, r2]
   15654:	ldr	r2, [r0, #12]
   15658:	add	lr, lr, ip
   1565c:	udiv	ip, lr, r2
   15660:	mls	lr, r2, ip, lr
   15664:	mov	ip, #28
   15668:	mla	ip, lr, ip, ip
   1566c:	add	ip, r4, ip
   15670:	ldr	ip, [ip, #24]
   15674:	cmp	ip, #0
   15678:	beq	1568c <mctree_search_lowercase@@Base+0x64>
   1567c:	mov	r2, r1
   15680:	pop	{r4, lr}
   15684:	mov	r1, ip
   15688:	b	10eb0 <__mtree_search_lowercase_to_start@plt>
   1568c:	mov	r0, #0
   15690:	pop	{r4, pc}
   15694:	mov	r0, #0
   15698:	bx	lr
   1569c:	andeq	r3, r1, r0, lsr ip

000156a0 <mycore_utils_mhash_hash@@Base>:
   156a0:	add	r1, r0, r1
   156a4:	mov	r3, #0
   156a8:	cmp	r1, r0
   156ac:	bne	156c8 <mycore_utils_mhash_hash@@Base+0x28>
   156b0:	add	r3, r3, r3, lsl #3
   156b4:	eor	r3, r3, r3, lsr #11
   156b8:	add	r3, r3, r3, lsl #15
   156bc:	udiv	r0, r3, r2
   156c0:	mls	r0, r2, r0, r3
   156c4:	bx	lr
   156c8:	ldrb	ip, [r0], #1
   156cc:	add	r3, ip, r3
   156d0:	add	r3, r3, r3, lsl #10
   156d4:	eor	r3, r3, r3, lsr #6
   156d8:	b	156a8 <mycore_utils_mhash_hash@@Base+0x8>

000156dc <mycore_utils_mhash_create@@Base>:
   156dc:	mov	r1, #24
   156e0:	mov	r0, #1
   156e4:	b	feb4 <mycore_calloc@plt>

000156e8 <mycore_utils_mhash_init@@Base>:
   156e8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   156ec:	mov	r5, r0
   156f0:	mov	r6, r1
   156f4:	mov	r7, r2
   156f8:	bl	10100 <mchar_async_create@plt>
   156fc:	cmp	r0, #0
   15700:	str	r0, [r5]
   15704:	bne	15718 <mycore_utils_mhash_init@@Base+0x30>
   15708:	mov	r4, #2
   1570c:	mov	r0, r4
   15710:	add	sp, sp, #12
   15714:	pop	{r4, r5, r6, r7, pc}
   15718:	mov	r2, #4096	; 0x1000
   1571c:	mov	r1, #128	; 0x80
   15720:	bl	1043c <mchar_async_init@plt>
   15724:	cmp	r0, #0
   15728:	mov	r4, r0
   1572c:	str	r0, [sp, #4]
   15730:	bne	1570c <mycore_utils_mhash_init@@Base+0x24>
   15734:	add	r1, sp, #4
   15738:	ldr	r0, [r5]
   1573c:	bl	1022c <mchar_async_node_add@plt>
   15740:	ldr	r4, [sp, #4]
   15744:	str	r0, [r5, #4]
   15748:	cmp	r4, #0
   1574c:	bne	1570c <mycore_utils_mhash_init@@Base+0x24>
   15750:	cmp	r6, #128	; 0x80
   15754:	mov	r1, #4
   15758:	movcc	r6, #128	; 0x80
   1575c:	mov	r0, r6
   15760:	bl	feb4 <mycore_calloc@plt>
   15764:	cmp	r0, #0
   15768:	str	r0, [r5, #8]
   1576c:	beq	15708 <mycore_utils_mhash_init@@Base+0x20>
   15770:	cmp	r7, #0
   15774:	str	r6, [r5, #12]
   15778:	moveq	r7, #1
   1577c:	str	r7, [r5, #20]
   15780:	b	1570c <mycore_utils_mhash_init@@Base+0x24>

00015784 <mycore_utils_mhash_clean@@Base>:
   15784:	push	{r4, lr}
   15788:	mov	r4, r0
   1578c:	ldr	r0, [r0]
   15790:	bl	10b5c <mchar_async_clean@plt>
   15794:	mov	r1, #0
   15798:	ldr	r0, [r4, #8]
   1579c:	ldr	r2, [r4, #12]
   157a0:	pop	{r4, lr}
   157a4:	lsl	r2, r2, #2
   157a8:	b	10844 <memset@plt>

000157ac <mycore_utils_mhash_destroy@@Base>:
   157ac:	push	{r4, r5, r6, lr}
   157b0:	subs	r4, r0, #0
   157b4:	beq	157e8 <mycore_utils_mhash_destroy@@Base+0x3c>
   157b8:	mov	r5, r1
   157bc:	ldr	r0, [r4, #8]
   157c0:	cmp	r0, #0
   157c4:	beq	157d4 <mycore_utils_mhash_destroy@@Base+0x28>
   157c8:	bl	10d60 <mycore_free@plt>
   157cc:	mov	r3, #0
   157d0:	str	r3, [r4, #8]
   157d4:	cmp	r5, #0
   157d8:	beq	157e8 <mycore_utils_mhash_destroy@@Base+0x3c>
   157dc:	ldr	r0, [r4, #8]
   157e0:	mov	r4, #0
   157e4:	bl	10d60 <mycore_free@plt>
   157e8:	mov	r0, r4
   157ec:	pop	{r4, r5, r6, pc}

000157f0 <mycore_utils_mhash_create_entry@@Base>:
   157f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   157f4:	mov	r5, r0
   157f8:	mov	r7, r2
   157fc:	mov	r9, r1
   15800:	mov	r2, #16
   15804:	mov	r8, r3
   15808:	ldrd	r0, [r0]
   1580c:	bl	108a4 <mchar_async_malloc@plt>
   15810:	mov	r4, r0
   15814:	add	r2, r7, #1
   15818:	ldrd	r0, [r5]
   1581c:	bl	108a4 <mchar_async_malloc@plt>
   15820:	cmp	r0, #0
   15824:	str	r0, [r4]
   15828:	bne	15844 <mycore_utils_mhash_create_entry@@Base+0x54>
   1582c:	mov	r6, r0
   15830:	mov	r2, r4
   15834:	ldrd	r0, [r5]
   15838:	bl	106ac <mchar_async_free@plt>
   1583c:	mov	r0, r6
   15840:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15844:	mov	r2, r7
   15848:	mov	r1, r9
   1584c:	bl	fefc <memcpy@plt>
   15850:	ldr	r2, [r4]
   15854:	mov	r3, #0
   15858:	mov	r6, r4
   1585c:	strb	r3, [r2, r7]
   15860:	stmib	r4, {r7, r8}
   15864:	str	r3, [r4, #12]
   15868:	b	1583c <mycore_utils_mhash_create_entry@@Base+0x4c>

0001586c <mycore_utils_mhash_search@@Base>:
   1586c:	cmp	r2, #0
   15870:	cmpne	r1, #0
   15874:	push	{r4, r5, r6, lr}
   15878:	bne	15888 <mycore_utils_mhash_search@@Base+0x1c>
   1587c:	mov	r4, #0
   15880:	mov	r0, r4
   15884:	pop	{r4, r5, r6, pc}
   15888:	mov	r4, r0
   1588c:	mov	r6, r1
   15890:	mov	r5, r2
   15894:	mov	r1, r2
   15898:	ldr	r2, [r4, #12]
   1589c:	mov	r0, r6
   158a0:	bl	1001c <mycore_utils_mhash_hash@plt>
   158a4:	ldr	r3, [r4, #8]
   158a8:	ldr	r4, [r3, r0, lsl #2]
   158ac:	cmp	r4, #0
   158b0:	beq	1587c <mycore_utils_mhash_search@@Base+0x10>
   158b4:	ldr	r3, [r4, #4]
   158b8:	cmp	r3, r5
   158bc:	bne	158d8 <mycore_utils_mhash_search@@Base+0x6c>
   158c0:	mov	r2, r5
   158c4:	mov	r1, r6
   158c8:	ldr	r0, [r4]
   158cc:	bl	10f28 <strncmp@plt>
   158d0:	cmp	r0, #0
   158d4:	beq	15880 <mycore_utils_mhash_search@@Base+0x14>
   158d8:	ldr	r4, [r4, #12]
   158dc:	b	158ac <mycore_utils_mhash_search@@Base+0x40>

000158e0 <mycore_utils_mhash_entry_by_id@@Base>:
   158e0:	ldr	r3, [r0, #12]
   158e4:	cmp	r3, r1
   158e8:	ldrhi	r3, [r0, #8]
   158ec:	ldrhi	r0, [r3, r1, lsl #2]
   158f0:	movls	r0, #0
   158f4:	bx	lr

000158f8 <mycore_utils_mhash_get_table_size@@Base>:
   158f8:	ldr	r0, [r0, #12]
   158fc:	bx	lr

00015900 <mycore_utils_mhash_rebuild_add_entry@@Base>:
   15900:	push	{r4, r5, r6, lr}
   15904:	mov	r5, r0
   15908:	mov	r0, r1
   1590c:	mov	r1, r2
   15910:	clz	r2, r2
   15914:	lsr	r2, r2, #5
   15918:	cmp	r0, #0
   1591c:	moveq	r2, #1
   15920:	cmp	r2, #0
   15924:	movne	r4, #0
   15928:	bne	15960 <mycore_utils_mhash_rebuild_add_entry@@Base+0x60>
   1592c:	str	r2, [r3, #12]
   15930:	mov	r4, r3
   15934:	ldr	r2, [r5, #12]
   15938:	bl	1001c <mycore_utils_mhash_hash@plt>
   1593c:	ldr	r2, [r5, #8]
   15940:	ldr	r3, [r2, r0, lsl #2]
   15944:	cmp	r3, #0
   15948:	streq	r4, [r2, r0, lsl #2]
   1594c:	beq	15960 <mycore_utils_mhash_rebuild_add_entry@@Base+0x60>
   15950:	ldr	r2, [r3, #12]
   15954:	cmp	r2, #0
   15958:	bne	15968 <mycore_utils_mhash_rebuild_add_entry@@Base+0x68>
   1595c:	str	r4, [r3, #12]
   15960:	mov	r0, r4
   15964:	pop	{r4, r5, r6, pc}
   15968:	mov	r3, r2
   1596c:	b	15950 <mycore_utils_mhash_rebuild_add_entry@@Base+0x50>

00015970 <mycore_utils_mhash_rebuld@@Base>:
   15970:	push	{r4, r5, r6, r7, r8, lr}
   15974:	mov	r4, r0
   15978:	mov	r1, #4
   1597c:	ldr	r7, [r0, #8]
   15980:	ldr	r5, [r0, #12]
   15984:	lsl	r0, r5, #1
   15988:	str	r0, [r4, #12]
   1598c:	bl	feb4 <mycore_calloc@plt>
   15990:	cmp	r0, #0
   15994:	str	r0, [r4, #8]
   15998:	movne	r6, #0
   1599c:	bne	159bc <mycore_utils_mhash_rebuld@@Base+0x4c>
   159a0:	str	r7, [r4, #8]
   159a4:	str	r5, [r4, #12]
   159a8:	pop	{r4, r5, r6, r7, r8, pc}
   159ac:	ldr	r5, [r7, r6, lsl #2]
   159b0:	cmp	r5, #0
   159b4:	bne	159d8 <mycore_utils_mhash_rebuld@@Base+0x68>
   159b8:	add	r6, r6, #1
   159bc:	ldr	r3, [r4, #12]
   159c0:	cmp	r3, r6
   159c4:	bhi	159ac <mycore_utils_mhash_rebuld@@Base+0x3c>
   159c8:	mov	r0, r7
   159cc:	bl	10d60 <mycore_free@plt>
   159d0:	ldr	r0, [r4, #8]
   159d4:	pop	{r4, r5, r6, r7, r8, pc}
   159d8:	mov	r3, r5
   159dc:	mov	r0, r4
   159e0:	ldm	r5, {r1, r2}
   159e4:	bl	10e38 <mycore_utils_mhash_rebuild_add_entry@plt>
   159e8:	ldr	r5, [r5, #12]
   159ec:	b	159b0 <mycore_utils_mhash_rebuld@@Base+0x40>

000159f0 <mycore_utils_mhash_add_with_choice@@Base>:
   159f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   159f4:	clz	r5, r2
   159f8:	cmp	r1, #0
   159fc:	lsr	r5, r5, #5
   15a00:	moveq	r5, #1
   15a04:	cmp	r5, #0
   15a08:	movne	r6, #0
   15a0c:	bne	15a80 <mycore_utils_mhash_add_with_choice@@Base+0x90>
   15a10:	mov	r4, r0
   15a14:	mov	r6, r1
   15a18:	mov	r7, r2
   15a1c:	mov	r1, r2
   15a20:	ldr	r2, [r4, #12]
   15a24:	mov	r0, r6
   15a28:	bl	1001c <mycore_utils_mhash_hash@plt>
   15a2c:	ldr	r3, [r4, #8]
   15a30:	mov	r9, r0
   15a34:	ldr	r8, [r3, r0, lsl #2]
   15a38:	cmp	r8, #0
   15a3c:	bne	15a90 <mycore_utils_mhash_add_with_choice@@Base+0xa0>
   15a40:	ldr	r3, [r4, #12]
   15a44:	ldr	r2, [r4, #16]
   15a48:	sub	r3, r3, r3, lsr #2
   15a4c:	cmp	r2, r3
   15a50:	bcc	15a5c <mycore_utils_mhash_add_with_choice@@Base+0x6c>
   15a54:	mov	r0, r4
   15a58:	bl	109dc <mycore_utils_mhash_rebuld@plt>
   15a5c:	mov	r3, #0
   15a60:	mov	r1, r6
   15a64:	ldr	r5, [r4, #8]
   15a68:	mov	r2, r7
   15a6c:	mov	r0, r4
   15a70:	bl	10e8c <mycore_utils_mhash_create_entry@plt>
   15a74:	ldr	r3, [r4, #8]
   15a78:	str	r0, [r5, r9, lsl #2]
   15a7c:	ldr	r6, [r3, r9, lsl #2]
   15a80:	mov	r0, r6
   15a84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15a88:	add	r5, r5, #1
   15a8c:	mov	r8, r3
   15a90:	ldr	r3, [r8, #4]
   15a94:	cmp	r3, r7
   15a98:	bne	15ab4 <mycore_utils_mhash_add_with_choice@@Base+0xc4>
   15a9c:	mov	r2, r7
   15aa0:	mov	r1, r6
   15aa4:	ldr	r0, [r8]
   15aa8:	bl	10f28 <strncmp@plt>
   15aac:	cmp	r0, #0
   15ab0:	beq	15af0 <mycore_utils_mhash_add_with_choice@@Base+0x100>
   15ab4:	ldr	r3, [r8, #12]
   15ab8:	cmp	r3, #0
   15abc:	bne	15a88 <mycore_utils_mhash_add_with_choice@@Base+0x98>
   15ac0:	mov	r1, r6
   15ac4:	mov	r2, r7
   15ac8:	mov	r0, r4
   15acc:	bl	10e8c <mycore_utils_mhash_create_entry@plt>
   15ad0:	ldr	r3, [r4, #20]
   15ad4:	mov	r6, r0
   15ad8:	str	r0, [r8, #12]
   15adc:	cmp	r3, r5
   15ae0:	bcs	15a80 <mycore_utils_mhash_add_with_choice@@Base+0x90>
   15ae4:	mov	r0, r4
   15ae8:	bl	109dc <mycore_utils_mhash_rebuld@plt>
   15aec:	b	15a80 <mycore_utils_mhash_add_with_choice@@Base+0x90>
   15af0:	mov	r6, r8
   15af4:	b	15a80 <mycore_utils_mhash_add_with_choice@@Base+0x90>

00015af8 <mycore_utils_mhash_add@@Base>:
   15af8:	push	{r4, lr}
   15afc:	mov	r4, r3
   15b00:	bl	10d48 <mycore_utils_mhash_add_with_choice@plt>
   15b04:	cmp	r0, #0
   15b08:	strne	r4, [r0, #8]
   15b0c:	pop	{r4, pc}

00015b10 <myencoding_detect_by_trigram@@Base>:
   15b10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b14:	sub	sp, sp, #20
   15b18:	mov	r5, #0
   15b1c:	mov	r7, r0
   15b20:	mov	sl, r1
   15b24:	mov	fp, r2
   15b28:	mov	r8, r5
   15b2c:	mov	r4, r5
   15b30:	str	r3, [sp, #4]
   15b34:	sub	r3, r2, #3
   15b38:	str	r3, [sp, #8]
   15b3c:	ldr	r3, [sp, #8]
   15b40:	cmp	r3, r4
   15b44:	bhi	15b5c <myencoding_detect_by_trigram@@Base+0x4c>
   15b48:	mov	r0, r7
   15b4c:	str	r8, [r7]
   15b50:	str	r5, [r7, #4]
   15b54:	add	sp, sp, #20
   15b58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b5c:	add	r3, sl, r4
   15b60:	str	r3, [sp]
   15b64:	ldrsb	r3, [sl, r4]
   15b68:	cmp	r3, #0
   15b6c:	movlt	r9, #0
   15b70:	ldrlt	r6, [sp, #4]
   15b74:	blt	15b84 <myencoding_detect_by_trigram@@Base+0x74>
   15b78:	add	r4, r4, #1
   15b7c:	b	15b3c <myencoding_detect_by_trigram@@Base+0x2c>
   15b80:	add	r9, r9, #1
   15b84:	ldr	r3, [sp, #56]	; 0x38
   15b88:	cmp	r9, r3
   15b8c:	beq	15b78 <myencoding_detect_by_trigram@@Base+0x68>
   15b90:	mov	r3, r6
   15b94:	mov	r0, r6
   15b98:	ldr	r1, [sp]
   15b9c:	mov	r2, #3
   15ba0:	add	r6, r6, #8
   15ba4:	str	r3, [sp, #12]
   15ba8:	bl	10010 <memcmp@plt>
   15bac:	cmp	r0, #0
   15bb0:	ldr	r3, [sp, #12]
   15bb4:	bne	15b80 <myencoding_detect_by_trigram@@Base+0x70>
   15bb8:	ldr	r3, [r3, #4]
   15bbc:	add	r8, r8, #1
   15bc0:	add	r5, r5, r3
   15bc4:	ldr	r3, [sp, #60]	; 0x3c
   15bc8:	cmp	r5, r3
   15bcc:	movcs	r4, fp
   15bd0:	b	15b78 <myencoding_detect_by_trigram@@Base+0x68>

00015bd4 <myencoding_detect_russian_has_end@@Base>:
   15bd4:	ldr	r3, [r0, #4]
   15bd8:	cmp	r3, r2
   15bdc:	bcs	15bf4 <myencoding_detect_russian_has_end@@Base+0x20>
   15be0:	ldr	r0, [r0]
   15be4:	cmp	r0, r1
   15be8:	movcc	r0, #0
   15bec:	movcs	r0, #1
   15bf0:	bx	lr
   15bf4:	mov	r0, #1
   15bf8:	bx	lr

00015bfc <myencoding_detect_unicode_has_end@@Base>:
   15bfc:	ldrd	r2, [r0, #4]
   15c00:	cmp	r2, #0
   15c04:	bne	15c14 <myencoding_detect_unicode_has_end@@Base+0x18>
   15c08:	clz	r0, r3
   15c0c:	lsr	r0, r0, #5
   15c10:	bx	lr
   15c14:	cmp	r3, #0
   15c18:	beq	15c38 <myencoding_detect_unicode_has_end@@Base+0x3c>
   15c1c:	mov	r0, #100	; 0x64
   15c20:	mul	r0, r0, r3
   15c24:	udiv	r0, r0, r2
   15c28:	cmp	r0, r1
   15c2c:	movcs	r0, #0
   15c30:	movcc	r0, #1
   15c34:	bx	lr
   15c38:	mov	r0, #1
   15c3c:	bx	lr

00015c40 <myencoding_detect_utf_8@@Base>:
   15c40:	mov	ip, #0
   15c44:	push	{r4, r5, r6, lr}
   15c48:	mov	r3, ip
   15c4c:	mov	r4, ip
   15c50:	mov	r5, ip
   15c54:	cmp	r3, r2
   15c58:	bcc	15c68 <myencoding_detect_utf_8@@Base+0x28>
   15c5c:	str	r5, [r0]
   15c60:	stmib	r0, {r4, ip}
   15c64:	pop	{r4, r5, r6, pc}
   15c68:	ldrb	lr, [r1, r3]
   15c6c:	tst	lr, #128	; 0x80
   15c70:	addeq	lr, r3, #1
   15c74:	addeq	r5, r5, #1
   15c78:	beq	15cb0 <myencoding_detect_utf_8@@Base+0x70>
   15c7c:	and	r6, lr, #224	; 0xe0
   15c80:	cmp	r6, #192	; 0xc0
   15c84:	bne	15cb8 <myencoding_detect_utf_8@@Base+0x78>
   15c88:	add	lr, r3, #2
   15c8c:	cmp	r2, lr
   15c90:	bls	15c5c <myencoding_detect_utf_8@@Base+0x1c>
   15c94:	add	r3, r1, r3
   15c98:	ldrb	r3, [r3, #1]
   15c9c:	tst	r3, #128	; 0x80
   15ca0:	beq	15d20 <myencoding_detect_utf_8@@Base+0xe0>
   15ca4:	tst	r3, #64	; 0x40
   15ca8:	addeq	r4, r4, #1
   15cac:	bne	15d20 <myencoding_detect_utf_8@@Base+0xe0>
   15cb0:	mov	r3, lr
   15cb4:	b	15c54 <myencoding_detect_utf_8@@Base+0x14>
   15cb8:	and	r6, lr, #240	; 0xf0
   15cbc:	cmp	r6, #224	; 0xe0
   15cc0:	bne	15cec <myencoding_detect_utf_8@@Base+0xac>
   15cc4:	add	lr, r3, #3
   15cc8:	cmp	r2, lr
   15ccc:	bls	15c5c <myencoding_detect_utf_8@@Base+0x1c>
   15cd0:	add	r3, r1, r3
   15cd4:	ldrb	r6, [r3, #2]
   15cd8:	tst	r6, #128	; 0x80
   15cdc:	beq	15d20 <myencoding_detect_utf_8@@Base+0xe0>
   15ce0:	tst	r6, #64	; 0x40
   15ce4:	bne	15d20 <myencoding_detect_utf_8@@Base+0xe0>
   15ce8:	b	15c98 <myencoding_detect_utf_8@@Base+0x58>
   15cec:	and	lr, lr, #248	; 0xf8
   15cf0:	cmp	lr, #240	; 0xf0
   15cf4:	addne	lr, r3, #1
   15cf8:	bne	15d20 <myencoding_detect_utf_8@@Base+0xe0>
   15cfc:	add	lr, r3, #4
   15d00:	cmp	r2, lr
   15d04:	bls	15c5c <myencoding_detect_utf_8@@Base+0x1c>
   15d08:	add	r3, r1, r3
   15d0c:	ldrb	r6, [r3, #3]
   15d10:	tst	r6, #128	; 0x80
   15d14:	beq	15d20 <myencoding_detect_utf_8@@Base+0xe0>
   15d18:	tst	r6, #64	; 0x40
   15d1c:	beq	15cd4 <myencoding_detect_utf_8@@Base+0x94>
   15d20:	add	ip, ip, #1
   15d24:	b	15cb0 <myencoding_detect_utf_8@@Base+0x70>

00015d28 <myencoding_detect_utf_16@@Base>:
   15d28:	mov	r3, #0
   15d2c:	push	{r4, r5, lr}
   15d30:	sub	r1, r1, #1
   15d34:	mov	lr, r3
   15d38:	mov	ip, r3
   15d3c:	cmp	ip, r2
   15d40:	bne	15d54 <myencoding_detect_utf_16@@Base+0x2c>
   15d44:	mov	r2, #0
   15d48:	stm	r0, {r2, lr}
   15d4c:	str	r3, [r0, #8]
   15d50:	pop	{r4, r5, pc}
   15d54:	ldrb	r5, [r1, #1]!
   15d58:	add	r4, ip, #1
   15d5c:	cmp	r5, #0
   15d60:	bne	15d7c <myencoding_detect_utf_16@@Base+0x54>
   15d64:	tst	ip, #1
   15d68:	bne	15d84 <myencoding_detect_utf_16@@Base+0x5c>
   15d6c:	ldrb	ip, [r1, #1]
   15d70:	sub	ip, ip, #32
   15d74:	cmp	ip, #94	; 0x5e
   15d78:	addls	r3, r3, #1
   15d7c:	mov	ip, r4
   15d80:	b	15d3c <myencoding_detect_utf_16@@Base+0x14>
   15d84:	ldrb	ip, [r1, #-1]
   15d88:	sub	ip, ip, #32
   15d8c:	cmp	ip, #94	; 0x5e
   15d90:	addls	lr, lr, #1
   15d94:	b	15d7c <myencoding_detect_utf_16@@Base+0x54>

00015d98 <myencoding_detect_bom@@Base>:
   15d98:	cmp	r1, #2
   15d9c:	bls	15df0 <myencoding_detect_bom@@Base+0x58>
   15da0:	ldrb	r3, [r0]
   15da4:	cmp	r3, #239	; 0xef
   15da8:	bne	15dc8 <myencoding_detect_bom@@Base+0x30>
   15dac:	ldrb	r3, [r0, #1]
   15db0:	cmp	r3, #187	; 0xbb
   15db4:	bne	15dc8 <myencoding_detect_bom@@Base+0x30>
   15db8:	ldrb	r3, [r0, #2]
   15dbc:	cmp	r3, #191	; 0xbf
   15dc0:	moveq	r3, #0
   15dc4:	beq	15de4 <myencoding_detect_bom@@Base+0x4c>
   15dc8:	ldrb	r3, [r0]
   15dcc:	cmp	r3, #254	; 0xfe
   15dd0:	bne	15dfc <myencoding_detect_bom@@Base+0x64>
   15dd4:	ldrb	r3, [r0, #1]
   15dd8:	cmp	r3, #255	; 0xff
   15ddc:	bne	15df4 <myencoding_detect_bom@@Base+0x5c>
   15de0:	mov	r3, #5
   15de4:	mov	r0, #1
   15de8:	str	r3, [r2]
   15dec:	bx	lr
   15df0:	beq	15dc8 <myencoding_detect_bom@@Base+0x30>
   15df4:	mov	r0, #0
   15df8:	bx	lr
   15dfc:	cmp	r3, #255	; 0xff
   15e00:	bne	15df4 <myencoding_detect_bom@@Base+0x5c>
   15e04:	ldrb	r3, [r0, #1]
   15e08:	cmp	r3, #254	; 0xfe
   15e0c:	moveq	r3, #4
   15e10:	bne	15df4 <myencoding_detect_bom@@Base+0x5c>
   15e14:	b	15de4 <myencoding_detect_bom@@Base+0x4c>

00015e18 <myencoding_detect_and_cut_bom@@Base>:
   15e18:	push	{r4, r5, r6, r7, r8, lr}
   15e1c:	mov	r5, r0
   15e20:	mov	r4, r1
   15e24:	mov	r8, r2
   15e28:	mov	r7, r3
   15e2c:	ldr	r6, [sp, #24]
   15e30:	bl	101b4 <myencoding_detect_bom@plt>
   15e34:	cmp	r0, #0
   15e38:	popeq	{r4, r5, r6, r7, r8, pc}
   15e3c:	ldr	r3, [r8]
   15e40:	cmp	r3, #0
   15e44:	addeq	r5, r5, #3
   15e48:	subeq	r4, r4, #3
   15e4c:	addne	r5, r5, #2
   15e50:	subne	r4, r4, #2
   15e54:	str	r5, [r7]
   15e58:	str	r4, [r6]
   15e5c:	pop	{r4, r5, r6, r7, r8, pc}

00015e60 <myencoding_detect_unicode@@Base>:
   15e60:	push	{r4, r5, r6, r7, lr}
   15e64:	mov	r3, #0
   15e68:	sub	sp, sp, #36	; 0x24
   15e6c:	add	r5, sp, #20
   15e70:	mov	r4, r0
   15e74:	mov	r7, r1
   15e78:	mov	r6, r2
   15e7c:	str	r3, [r2]
   15e80:	mov	r2, r1
   15e84:	mov	r1, r0
   15e88:	mov	r0, r5
   15e8c:	bl	fe78 <myencoding_detect_utf_16@plt>
   15e90:	ldr	r3, [sp, #28]
   15e94:	cmp	r3, #0
   15e98:	bne	15ee4 <myencoding_detect_unicode@@Base+0x84>
   15e9c:	ldr	r3, [sp, #24]
   15ea0:	cmp	r3, #2
   15ea4:	movhi	r3, #4
   15ea8:	bhi	15efc <myencoding_detect_unicode@@Base+0x9c>
   15eac:	mov	r1, r4
   15eb0:	mov	r4, sp
   15eb4:	mov	r2, r7
   15eb8:	mov	r0, r4
   15ebc:	bl	10fac <myencoding_detect_utf_8@plt>
   15ec0:	ldm	r4, {r0, r1, r2}
   15ec4:	stm	r5, {r0, r1, r2}
   15ec8:	mov	r1, #10
   15ecc:	mov	r0, r5
   15ed0:	bl	10a00 <myencoding_detect_unicode_has_end@plt>
   15ed4:	cmp	r0, #0
   15ed8:	movne	r3, #0
   15edc:	strne	r3, [r6]
   15ee0:	b	15f04 <myencoding_detect_unicode@@Base+0xa4>
   15ee4:	cmp	r3, #2
   15ee8:	bls	15eac <myencoding_detect_unicode@@Base+0x4c>
   15eec:	ldr	r3, [sp, #24]
   15ef0:	cmp	r3, #0
   15ef4:	bne	15eac <myencoding_detect_unicode@@Base+0x4c>
   15ef8:	mov	r3, #5
   15efc:	mov	r0, #1
   15f00:	str	r3, [r6]
   15f04:	add	sp, sp, #36	; 0x24
   15f08:	pop	{r4, r5, r6, r7, pc}

00015f0c <myencoding_detect_russian@@Base>:
   15f0c:	mov	r3, #0
   15f10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15f14:	sub	sp, sp, #24
   15f18:	add	r4, sp, #16
   15f1c:	mov	r9, r0
   15f20:	mov	sl, r1
   15f24:	mov	r6, r2
   15f28:	str	r3, [r2]
   15f2c:	mov	r3, #1000	; 0x3e8
   15f30:	mov	r2, r1
   15f34:	ldr	r8, [pc, #432]	; 160ec <myencoding_detect_russian@@Base+0x1e0>
   15f38:	mov	r1, r0
   15f3c:	mov	r0, r4
   15f40:	str	r3, [sp]
   15f44:	ldr	r3, [pc, #420]	; 160f0 <myencoding_detect_russian@@Base+0x1e4>
   15f48:	str	r8, [sp, #4]
   15f4c:	add	r3, pc, r3
   15f50:	bl	106a0 <myencoding_detect_by_trigram@plt>
   15f54:	mov	r2, r8
   15f58:	mov	r1, #50	; 0x32
   15f5c:	mov	r0, r4
   15f60:	bl	10ce8 <myencoding_detect_russian_has_end@plt>
   15f64:	cmp	r0, #0
   15f68:	movne	r3, #32
   15f6c:	bne	160d0 <myencoding_detect_russian@@Base+0x1c4>
   15f70:	ldr	r7, [sp, #20]
   15f74:	add	r5, sp, #8
   15f78:	mov	r2, sl
   15f7c:	mov	r1, r9
   15f80:	mov	r0, r5
   15f84:	cmp	r7, #0
   15f88:	movne	r3, #32
   15f8c:	strne	r3, [r6]
   15f90:	mov	r3, #1000	; 0x3e8
   15f94:	stm	sp, {r3, r8}
   15f98:	ldr	r3, [pc, #340]	; 160f4 <myencoding_detect_russian@@Base+0x1e8>
   15f9c:	add	r3, pc, r3
   15fa0:	bl	106a0 <myencoding_detect_by_trigram@plt>
   15fa4:	ldm	r5, {r0, r1}
   15fa8:	ldr	r2, [pc, #316]	; 160ec <myencoding_detect_russian@@Base+0x1e0>
   15fac:	stm	r4, {r0, r1}
   15fb0:	mov	r1, #50	; 0x32
   15fb4:	mov	r0, r4
   15fb8:	bl	10ce8 <myencoding_detect_russian_has_end@plt>
   15fbc:	cmp	r0, #0
   15fc0:	movne	r3, #27
   15fc4:	bne	160d0 <myencoding_detect_russian@@Base+0x1c4>
   15fc8:	ldr	r3, [sp, #20]
   15fcc:	mov	r1, r9
   15fd0:	mov	r0, r5
   15fd4:	cmp	r3, r7
   15fd8:	movhi	r2, #27
   15fdc:	movhi	r7, r3
   15fe0:	mov	r3, #1000	; 0x3e8
   15fe4:	strhi	r2, [r6]
   15fe8:	mov	r2, sl
   15fec:	stm	sp, {r3, r8}
   15ff0:	ldr	r3, [pc, #256]	; 160f8 <myencoding_detect_russian@@Base+0x1ec>
   15ff4:	add	r3, pc, r3
   15ff8:	bl	106a0 <myencoding_detect_by_trigram@plt>
   15ffc:	ldm	r5, {r0, r1}
   16000:	ldr	r2, [pc, #228]	; 160ec <myencoding_detect_russian@@Base+0x1e0>
   16004:	stm	r4, {r0, r1}
   16008:	mov	r1, #50	; 0x32
   1600c:	mov	r0, r4
   16010:	bl	10ce8 <myencoding_detect_russian_has_end@plt>
   16014:	cmp	r0, #0
   16018:	movne	r3, #22
   1601c:	bne	160d0 <myencoding_detect_russian@@Base+0x1c4>
   16020:	ldr	r3, [sp, #20]
   16024:	mov	r1, r9
   16028:	mov	r0, r5
   1602c:	cmp	r3, r7
   16030:	movhi	r2, #22
   16034:	movhi	r7, r3
   16038:	mov	r3, #1000	; 0x3e8
   1603c:	strhi	r2, [r6]
   16040:	mov	r2, sl
   16044:	stm	sp, {r3, r8}
   16048:	ldr	r3, [pc, #172]	; 160fc <myencoding_detect_russian@@Base+0x1f0>
   1604c:	add	r3, pc, r3
   16050:	bl	106a0 <myencoding_detect_by_trigram@plt>
   16054:	ldm	r5, {r0, r1}
   16058:	ldr	r2, [pc, #140]	; 160ec <myencoding_detect_russian@@Base+0x1e0>
   1605c:	stm	r4, {r0, r1}
   16060:	mov	r1, #50	; 0x32
   16064:	mov	r0, r4
   16068:	bl	10ce8 <myencoding_detect_russian_has_end@plt>
   1606c:	cmp	r0, #0
   16070:	movne	r3, #41	; 0x29
   16074:	bne	160d0 <myencoding_detect_russian@@Base+0x1c4>
   16078:	ldr	r3, [sp, #20]
   1607c:	mov	r1, r9
   16080:	mov	r0, r5
   16084:	cmp	r3, r7
   16088:	movhi	r2, #41	; 0x29
   1608c:	movhi	r7, r3
   16090:	mov	r3, #1000	; 0x3e8
   16094:	strhi	r2, [r6]
   16098:	mov	r2, sl
   1609c:	stm	sp, {r3, r8}
   160a0:	ldr	r3, [pc, #88]	; 16100 <myencoding_detect_russian@@Base+0x1f4>
   160a4:	add	r3, pc, r3
   160a8:	bl	106a0 <myencoding_detect_by_trigram@plt>
   160ac:	ldm	r5, {r0, r1}
   160b0:	ldr	r2, [pc, #52]	; 160ec <myencoding_detect_russian@@Base+0x1e0>
   160b4:	stm	r4, {r0, r1}
   160b8:	mov	r1, #50	; 0x32
   160bc:	mov	r0, r4
   160c0:	bl	10ce8 <myencoding_detect_russian_has_end@plt>
   160c4:	cmp	r0, #0
   160c8:	beq	160d8 <myencoding_detect_russian@@Base+0x1cc>
   160cc:	mov	r3, #12
   160d0:	str	r3, [r6]
   160d4:	b	160e4 <myencoding_detect_russian@@Base+0x1d8>
   160d8:	ldr	r3, [sp, #20]
   160dc:	cmp	r3, r7
   160e0:	bhi	160cc <myencoding_detect_russian@@Base+0x1c0>
   160e4:	add	sp, sp, #24
   160e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   160ec:	andeq	r8, r1, r0, lsr #13
   160f0:	muleq	r1, r4, r5
   160f4:			; <UNDEFINED> instruction: 0x000174b4
   160f8:	andeq	r9, r1, ip, asr #7
   160fc:	andeq	r3, r1, r4, lsr #10
   16100:	andeq	fp, r1, ip, lsl #5

00016104 <myencoding_detect@@Base>:
   16104:	mov	r3, #0
   16108:	push	{r4, r5, r6, lr}
   1610c:	mov	r5, r0
   16110:	mov	r6, r1
   16114:	mov	r4, r2
   16118:	str	r3, [r2]
   1611c:	bl	fbe4 <myencoding_detect_unicode@plt>
   16120:	cmp	r0, #0
   16124:	popne	{r4, r5, r6, pc}
   16128:	mov	r2, r4
   1612c:	mov	r1, r6
   16130:	mov	r0, r5
   16134:	pop	{r4, r5, r6, lr}
   16138:	b	10ee0 <myencoding_detect_russian@plt>

0001613c <myencoding_name_entry_by_name@@Base>:
   1613c:	add	r2, r0, r1
   16140:	ldr	r3, [pc, #152]	; 161e0 <myencoding_name_entry_by_name@@Base+0xa4>
   16144:	push	{r4, r5, r6, r7, r8, lr}
   16148:	mov	r6, r0
   1614c:	mov	r5, r1
   16150:	mov	r8, #28
   16154:	ldrb	r2, [r2, #-1]
   16158:	add	r3, pc, r3
   1615c:	ldr	r7, [pc, #128]	; 161e4 <myencoding_name_entry_by_name@@Base+0xa8>
   16160:	ldrb	r4, [r3, r2]
   16164:	ldrb	r2, [r0]
   16168:	add	r7, pc, r7
   1616c:	ldrb	r0, [r3, r2]
   16170:	movw	r3, #419	; 0x1a3
   16174:	smulbb	r4, r4, r0
   16178:	mul	r0, r1, r4
   1617c:	udiv	r4, r0, r3
   16180:	mls	r4, r3, r4, r0
   16184:	add	r4, r4, #1
   16188:	mla	r4, r8, r4, r7
   1618c:	ldr	r0, [r4, #8]
   16190:	cmp	r0, #0
   16194:	beq	161cc <myencoding_name_entry_by_name@@Base+0x90>
   16198:	ldr	r3, [r4, #12]
   1619c:	cmp	r3, r5
   161a0:	bne	161d4 <myencoding_name_entry_by_name@@Base+0x98>
   161a4:	mov	r2, r5
   161a8:	mov	r1, r6
   161ac:	bl	10238 <mycore_strncasecmp@plt>
   161b0:	cmp	r0, #0
   161b4:	bne	161c0 <myencoding_name_entry_by_name@@Base+0x84>
   161b8:	mov	r0, r4
   161bc:	pop	{r4, r5, r6, r7, r8, pc}
   161c0:	ldr	r4, [r4, #20]
   161c4:	cmp	r4, #0
   161c8:	bne	16188 <myencoding_name_entry_by_name@@Base+0x4c>
   161cc:	mov	r0, #0
   161d0:	pop	{r4, r5, r6, r7, r8, pc}
   161d4:	bhi	161cc <myencoding_name_entry_by_name@@Base+0x90>
   161d8:	ldr	r4, [r4, #20]
   161dc:	b	16188 <myencoding_name_entry_by_name@@Base+0x4c>
   161e0:	andeq	r3, r1, r8, lsl r2
   161e4:	ldrdeq	r1, [pc], -r4

000161e8 <myencoding_by_name@@Base>:
   161e8:	push	{r4, lr}
   161ec:	mov	r4, r2
   161f0:	bl	ff08 <myencoding_name_entry_by_name@plt>
   161f4:	cmp	r0, #0
   161f8:	popeq	{r4, pc}
   161fc:	cmp	r4, #0
   16200:	ldrne	r3, [r0, #16]
   16204:	mov	r0, #1
   16208:	strne	r3, [r4]
   1620c:	pop	{r4, pc}

00016210 <myencoding_name_by_id@@Base>:
   16210:	cmp	r0, #41	; 0x29
   16214:	bls	16230 <myencoding_name_by_id@@Base+0x20>
   16218:	cmp	r1, #0
   1621c:	movne	r3, #0
   16220:	strne	r3, [r1]
   16224:	movne	r1, r3
   16228:	mov	r0, r1
   1622c:	bx	lr
   16230:	cmp	r1, #0
   16234:	beq	1624c <myencoding_name_by_id@@Base+0x3c>
   16238:	ldr	r3, [pc, #28]	; 1625c <myencoding_name_by_id@@Base+0x4c>
   1623c:	add	r3, pc, r3
   16240:	add	r3, r3, r0, lsl #3
   16244:	ldr	r3, [r3, #4]
   16248:	str	r3, [r1]
   1624c:	ldr	r3, [pc, #12]	; 16260 <myencoding_name_by_id@@Base+0x50>
   16250:	add	r3, pc, r3
   16254:	ldr	r1, [r3, r0, lsl #3]
   16258:	b	16228 <myencoding_name_by_id@@Base+0x18>
   1625c:	andeq	r1, pc, r8, lsr #19
   16260:	muleq	pc, r4, r9	; <UNPREDICTABLE>

00016264 <myencoding_extracting_character_encoding_from_charset_with_found@@Base>:
   16264:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16268:	subs	r8, r3, #0
   1626c:	mov	r6, r1
   16270:	movne	r3, #0
   16274:	mov	r1, #2
   16278:	mov	r5, r0
   1627c:	mov	r4, #0
   16280:	ldr	r7, [sp, #48]	; 0x30
   16284:	str	r1, [r2]
   16288:	ldr	r9, [pc, #452]	; 16454 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1f0>
   1628c:	strne	r3, [r8]
   16290:	ldr	sl, [pc, #448]	; 16458 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1f4>
   16294:	cmp	r7, #0
   16298:	movne	r3, #0
   1629c:	add	r9, pc, r9
   162a0:	strne	r3, [r7]
   162a4:	add	fp, r4, #7
   162a8:	cmp	fp, r6
   162ac:	bcs	1631c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   162b0:	add	r1, r5, r4
   162b4:	mov	r0, r9
   162b8:	str	r2, [sp, #4]
   162bc:	bl	fc74 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   162c0:	cmp	r0, #0
   162c4:	ldr	r2, [sp, #4]
   162c8:	beq	16328 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc4>
   162cc:	mov	r4, fp
   162d0:	ldrb	r3, [r5, r4]
   162d4:	sub	r3, r3, #9
   162d8:	uxtb	r3, r3
   162dc:	cmp	r3, #23
   162e0:	bhi	16300 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x9c>
   162e4:	mvn	r3, sl, lsr r3
   162e8:	add	r1, r4, #1
   162ec:	tst	r3, #1
   162f0:	bne	16300 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x9c>
   162f4:	cmp	r6, r1
   162f8:	mov	r4, r1
   162fc:	bhi	162d0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x6c>
   16300:	ldrb	r3, [r5, r4]
   16304:	cmp	r3, #61	; 0x3d
   16308:	bne	16328 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc4>
   1630c:	add	r1, r4, #1
   16310:	cmp	r6, r1
   16314:	ldrhi	ip, [pc, #316]	; 16458 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1f4>
   16318:	bhi	16348 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xe4>
   1631c:	mov	r0, #0
   16320:	add	sp, sp, #12
   16324:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16328:	add	r4, r4, #1
   1632c:	b	162a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x40>
   16330:	mvn	r3, ip, lsr r3
   16334:	tst	r3, #1
   16338:	bne	16448 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1e4>
   1633c:	add	r1, r1, #1
   16340:	cmp	r6, r1
   16344:	bls	1631c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   16348:	ldrb	r0, [r5, r1]
   1634c:	sub	r3, r0, #9
   16350:	uxtb	r3, r3
   16354:	cmp	r3, #23
   16358:	bls	16330 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xcc>
   1635c:	cmp	r6, r1
   16360:	bls	1631c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   16364:	cmp	r0, #34	; 0x22
   16368:	addeq	r1, r1, #1
   1636c:	moveq	r3, r1
   16370:	beq	163d4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x170>
   16374:	cmp	r0, #39	; 0x27
   16378:	addeq	r1, r1, #1
   1637c:	moveq	r3, r1
   16380:	beq	1641c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1b8>
   16384:	ldr	lr, [pc, #204]	; 16458 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1f4>
   16388:	add	ip, r5, r1
   1638c:	mov	r0, ip
   16390:	ldrb	r3, [ip], #1
   16394:	sub	r3, r3, #9
   16398:	uxtb	r3, r3
   1639c:	cmp	r3, #23
   163a0:	bhi	163b0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x14c>
   163a4:	mvn	r3, lr, lsr r3
   163a8:	tst	r3, #1
   163ac:	beq	16438 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1d4>
   163b0:	mov	ip, r1
   163b4:	ldrb	r3, [r5, ip]
   163b8:	cmp	r3, #59	; 0x3b
   163bc:	bne	16428 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1c4>
   163c0:	cmp	r8, #0
   163c4:	sub	r1, ip, r1
   163c8:	strne	r0, [r8]
   163cc:	b	163f8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x194>
   163d0:	add	r3, r3, #1
   163d4:	cmp	r3, r6
   163d8:	beq	1631c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   163dc:	ldrb	r0, [r5, r3]
   163e0:	cmp	r0, #34	; 0x22
   163e4:	bne	163d0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x16c>
   163e8:	add	r0, r5, r1
   163ec:	cmp	r8, #0
   163f0:	sub	r1, r3, r1
   163f4:	strne	r0, [r8]
   163f8:	cmp	r7, #0
   163fc:	strne	r1, [r7]
   16400:	add	sp, sp, #12
   16404:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16408:	b	10c64 <myencoding_by_name@plt>
   1640c:	ldrb	r0, [r5, r3]
   16410:	cmp	r0, #39	; 0x27
   16414:	beq	163e8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x184>
   16418:	add	r3, r3, #1
   1641c:	cmp	r3, r6
   16420:	bne	1640c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1a8>
   16424:	b	1631c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   16428:	add	ip, ip, #1
   1642c:	cmp	r6, ip
   16430:	bhi	163b4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x150>
   16434:	b	163c0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x15c>
   16438:	add	r1, r1, #1
   1643c:	cmp	r6, r1
   16440:	bne	1638c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   16444:	b	1631c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   16448:	cmp	r6, r1
   1644c:	bhi	16384 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x120>
   16450:	b	1631c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   16454:	andeq	sp, r1, r4
   16458:	addeq	r0, r0, fp, lsl r0

0001645c <myencoding_extracting_character_encoding_from_charset@@Base>:
   1645c:	mov	r3, #0
   16460:	push	{r0, r1, r2, lr}
   16464:	str	r3, [sp]
   16468:	bl	107cc <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   1646c:	add	sp, sp, #12
   16470:	pop	{pc}		; (ldr pc, [sp], #4)

00016474 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base>:
   16474:	push	{r4, lr}
   16478:	ldr	ip, [r1]
   1647c:	ldr	lr, [r3]
   16480:	ldr	r4, [pc, #100]	; 164ec <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x78>
   16484:	sub	lr, ip, lr
   16488:	str	lr, [r3, #4]
   1648c:	cmp	ip, r2
   16490:	bcc	164a0 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x2c>
   16494:	mov	r3, #0
   16498:	str	ip, [r1]
   1649c:	b	164e4 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x70>
   164a0:	ldrb	lr, [r0, ip]
   164a4:	sub	r3, lr, #9
   164a8:	uxtb	r3, r3
   164ac:	cmp	r3, #23
   164b0:	mvnls	r3, r4, lsr r3
   164b4:	movhi	r3, #1
   164b8:	andls	r3, r3, #1
   164bc:	cmp	lr, #47	; 0x2f
   164c0:	moveq	r3, #0
   164c4:	andne	r3, r3, #1
   164c8:	cmp	r3, #0
   164cc:	addeq	ip, ip, #1
   164d0:	beq	1648c <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x18>
   164d4:	cmp	lr, #61	; 0x3d
   164d8:	bne	16494 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x20>
   164dc:	add	ip, ip, #1
   164e0:	str	ip, [r1]
   164e4:	mov	r0, r3
   164e8:	pop	{r4, pc}
   164ec:	addeq	r0, r0, fp, lsl r0

000164f0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base>:
   164f0:	push	{r4, r5, r6, lr}
   164f4:	ldr	r6, [pc, #304]	; 1662c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x13c>
   164f8:	ldr	r5, [sp, #16]
   164fc:	cmp	r1, r2
   16500:	movcs	r3, #1
   16504:	strbcs	r3, [r5]
   16508:	bcs	16594 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xa4>
   1650c:	ldrb	r4, [r0, r1]
   16510:	add	lr, r1, #1
   16514:	sub	ip, r4, #9
   16518:	uxtb	ip, ip
   1651c:	cmp	ip, #23
   16520:	bls	16568 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x78>
   16524:	cmp	r4, #39	; 0x27
   16528:	beq	165a4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xb4>
   1652c:	cmp	r4, #62	; 0x3e
   16530:	moveq	r3, #1
   16534:	moveq	ip, lr
   16538:	strbeq	r3, [r5]
   1653c:	beq	16614 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x124>
   16540:	cmp	r4, #34	; 0x22
   16544:	bne	165cc <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xdc>
   16548:	mov	ip, lr
   1654c:	str	lr, [r3, #8]
   16550:	cmp	ip, r2
   16554:	bcc	1657c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x8c>
   16558:	ldr	r2, [r3, #8]
   1655c:	sub	r2, ip, r2
   16560:	str	r2, [r3, #12]
   16564:	b	16614 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x124>
   16568:	mvn	ip, r6, lsr ip
   1656c:	tst	ip, #1
   16570:	bne	165cc <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xdc>
   16574:	mov	r1, lr
   16578:	b	164fc <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xc>
   1657c:	ldrb	r4, [r0, ip]
   16580:	add	r1, ip, #1
   16584:	cmp	r4, #34	; 0x22
   16588:	bne	1659c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xac>
   1658c:	sub	ip, ip, lr
   16590:	str	ip, [r3, #12]
   16594:	mov	ip, r1
   16598:	b	16614 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x124>
   1659c:	mov	ip, r1
   165a0:	b	16550 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x60>
   165a4:	mov	ip, lr
   165a8:	str	lr, [r3, #8]
   165ac:	cmp	ip, r2
   165b0:	bcs	16558 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x68>
   165b4:	ldrb	r4, [r0, ip]
   165b8:	add	r1, ip, #1
   165bc:	cmp	r4, #39	; 0x27
   165c0:	beq	1658c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x9c>
   165c4:	mov	ip, r1
   165c8:	b	165ac <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xbc>
   165cc:	ldr	r6, [pc, #88]	; 1662c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x13c>
   165d0:	mov	r4, r1
   165d4:	str	r1, [r3, #8]
   165d8:	ldrb	r5, [r0, r4]
   165dc:	add	ip, r4, #1
   165e0:	sub	lr, r5, #9
   165e4:	uxtb	lr, lr
   165e8:	cmp	lr, #23
   165ec:	mvnls	lr, r6, lsr lr
   165f0:	movhi	lr, #1
   165f4:	andls	lr, lr, #1
   165f8:	eor	lr, lr, #1
   165fc:	cmp	r5, #62	; 0x3e
   16600:	orreq	lr, lr, #1
   16604:	cmp	lr, #0
   16608:	beq	1661c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x12c>
   1660c:	sub	r1, r4, r1
   16610:	str	r1, [r3, #12]
   16614:	mov	r0, ip
   16618:	pop	{r4, r5, r6, pc}
   1661c:	cmp	r2, ip
   16620:	mov	r4, ip
   16624:	bhi	165d8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xe8>
   16628:	b	16558 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x68>
   1662c:	addeq	r0, r0, fp, lsl r0

00016630 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base>:
   16630:	push	{r4, r5, r6, r7, lr}
   16634:	sub	sp, sp, #20
   16638:	mov	r6, r0
   1663c:	mov	r7, r2
   16640:	mov	r0, r3
   16644:	mov	r2, #20
   16648:	mov	r4, r3
   1664c:	str	r1, [sp, #12]
   16650:	mov	r1, #0
   16654:	ldr	r5, [sp, #40]	; 0x28
   16658:	bl	10844 <memset@plt>
   1665c:	ldr	lr, [pc, #392]	; 167ec <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1bc>
   16660:	mov	r1, #0
   16664:	ldr	ip, [sp, #12]
   16668:	cmp	r7, ip
   1666c:	bhi	16680 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x50>
   16670:	mov	r3, #1
   16674:	mov	r0, ip
   16678:	strb	r3, [r5]
   1667c:	b	167e4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1b4>
   16680:	ldrb	r2, [r6, ip]
   16684:	add	r0, ip, #1
   16688:	sub	r3, r2, #9
   1668c:	uxtb	r3, r3
   16690:	cmp	r3, #23
   16694:	mvnls	r3, lr, lsr r3
   16698:	movhi	r3, #1
   1669c:	andls	r3, r3, #1
   166a0:	cmp	r2, #47	; 0x2f
   166a4:	moveq	r3, #0
   166a8:	andne	r3, r3, #1
   166ac:	cmp	r3, #0
   166b0:	bne	167c0 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x190>
   166b4:	mov	ip, r0
   166b8:	mov	r1, #1
   166bc:	b	16668 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x38>
   166c0:	ldrb	r1, [r6, r2]
   166c4:	add	r0, r2, #1
   166c8:	cmp	r1, #13
   166cc:	bhi	1672c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xfc>
   166d0:	cmp	r1, #12
   166d4:	bcs	166ec <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xbc>
   166d8:	sub	r1, r1, #9
   166dc:	mov	r2, r0
   166e0:	cmp	r1, #1
   166e4:	mov	lr, r3
   166e8:	bhi	16748 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x118>
   166ec:	str	r0, [sp, #12]
   166f0:	mov	r3, r4
   166f4:	mov	r2, r7
   166f8:	add	r1, sp, #12
   166fc:	mov	r0, r6
   16700:	bl	10460 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>
   16704:	cmp	r0, #0
   16708:	moveq	r3, #1
   1670c:	ldreq	r0, [sp, #12]
   16710:	strbeq	r3, [r5]
   16714:	beq	167e4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1b4>
   16718:	mov	r3, r4
   1671c:	mov	r2, r7
   16720:	str	r5, [sp]
   16724:	ldr	r1, [sp, #12]
   16728:	b	167a0 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x170>
   1672c:	cmp	r1, #47	; 0x2f
   16730:	beq	167ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x17c>
   16734:	bhi	1675c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x12c>
   16738:	cmp	r1, #32
   1673c:	mov	r2, r0
   16740:	mov	lr, r3
   16744:	beq	166ec <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xbc>
   16748:	cmp	r7, r2
   1674c:	bhi	166c0 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x90>
   16750:	cmp	lr, #0
   16754:	strne	r2, [sp, #12]
   16758:	b	166f0 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xc0>
   1675c:	cmp	r1, #61	; 0x3d
   16760:	beq	16778 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x148>
   16764:	cmp	r1, #62	; 0x3e
   16768:	mov	lr, r3
   1676c:	beq	167ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x17c>
   16770:	mov	r2, r0
   16774:	b	16748 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x118>
   16778:	sub	r3, r2, #1
   1677c:	cmp	r3, ip
   16780:	beq	166ec <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xbc>
   16784:	sub	r2, r2, ip
   16788:	mov	r3, r4
   1678c:	str	r0, [sp, #12]
   16790:	mov	r1, r0
   16794:	str	r2, [r4, #4]
   16798:	mov	r2, r7
   1679c:	str	r5, [sp]
   167a0:	mov	r0, r6
   167a4:	bl	fde8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@plt>
   167a8:	b	167e4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1b4>
   167ac:	mov	r3, #1
   167b0:	sub	r2, r2, ip
   167b4:	strb	r3, [r5]
   167b8:	str	r2, [r4, #4]
   167bc:	b	167e4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1b4>
   167c0:	cmp	r1, #0
   167c4:	strne	ip, [sp, #12]
   167c8:	cmp	r2, #62	; 0x3e
   167cc:	movne	lr, #0
   167d0:	ldrne	r2, [sp, #12]
   167d4:	strne	ip, [r4]
   167d8:	bne	16748 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x118>
   167dc:	mov	r3, #1
   167e0:	strb	r3, [r5]
   167e4:	add	sp, sp, #20
   167e8:	pop	{r4, r5, r6, r7, pc}
   167ec:	addeq	r0, r0, fp, lsl r0

000167f0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base>:
   167f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   167f4:	mov	r7, r3
   167f8:	sub	sp, sp, #44	; 0x2c
   167fc:	mov	r4, #0
   16800:	mov	r6, r0
   16804:	mov	sl, r1
   16808:	mov	r9, r2
   1680c:	ldr	r3, [pc, #456]	; 169dc <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1ec>
   16810:	mov	r8, r4
   16814:	mov	r5, r4
   16818:	strb	r4, [sp, #19]
   1681c:	ldr	fp, [pc, #444]	; 169e0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1f0>
   16820:	add	r3, pc, r3
   16824:	str	r3, [sp, #8]
   16828:	add	fp, pc, fp
   1682c:	ldr	r3, [pc, #432]	; 169e4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1f4>
   16830:	add	r3, pc, r3
   16834:	str	r3, [sp, #12]
   16838:	ldr	r1, [sl]
   1683c:	cmp	r1, r9
   16840:	bcs	168c4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xd4>
   16844:	add	r3, sp, #19
   16848:	mov	r2, r9
   1684c:	mov	r0, r6
   16850:	str	r3, [sp]
   16854:	add	r3, sp, #20
   16858:	bl	10c88 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   1685c:	ldr	r3, [sp, #24]
   16860:	str	r0, [sl]
   16864:	cmp	r3, #10
   16868:	bne	168f8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x108>
   1686c:	ldr	r1, [sp, #20]
   16870:	mov	r0, fp
   16874:	add	r1, r6, r1
   16878:	bl	fc74 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   1687c:	cmp	r0, #0
   16880:	beq	168f8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x108>
   16884:	tst	r4, #1
   16888:	bne	168b8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xc8>
   1688c:	ldr	r3, [sp, #32]
   16890:	orr	r4, r4, #1
   16894:	cmp	r3, #12
   16898:	bne	168b8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xc8>
   1689c:	ldr	r0, [pc, #324]	; 169e8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1f8>
   168a0:	ldr	r1, [sp, #28]
   168a4:	add	r0, pc, r0
   168a8:	add	r1, r6, r1
   168ac:	bl	fc74 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   168b0:	cmp	r0, #0
   168b4:	movne	r5, r0
   168b8:	ldrb	r3, [sp, #19]
   168bc:	cmp	r3, #0
   168c0:	beq	16838 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x48>
   168c4:	cmp	r8, #0
   168c8:	beq	168e4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xf4>
   168cc:	eor	r5, r5, #1
   168d0:	cmp	r8, #2
   168d4:	movne	r8, #0
   168d8:	andeq	r8, r5, #1
   168dc:	cmp	r8, #0
   168e0:	beq	169b4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1c4>
   168e4:	mov	r3, #2
   168e8:	mov	r0, #0
   168ec:	str	r3, [r7]
   168f0:	add	sp, sp, #44	; 0x2c
   168f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168f8:	ldr	r3, [sp, #24]
   168fc:	cmp	r3, #7
   16900:	bne	168b8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xc8>
   16904:	ldr	r0, [sp, #8]
   16908:	ldr	r1, [sp, #20]
   1690c:	add	r1, r6, r1
   16910:	bl	fc74 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   16914:	cmp	r0, #0
   16918:	beq	16950 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x160>
   1691c:	tst	r4, #2
   16920:	bne	168b8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xc8>
   16924:	ldrd	r0, [sp, #28]
   16928:	mov	r2, r7
   1692c:	orr	r4, r4, #2
   16930:	ldr	r3, [sp, #84]	; 0x54
   16934:	add	r0, r6, r0
   16938:	str	r3, [sp]
   1693c:	ldr	r3, [sp, #80]	; 0x50
   16940:	bl	107cc <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   16944:	cmp	r0, #0
   16948:	movne	r8, #2
   1694c:	b	168b8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xc8>
   16950:	ldr	r3, [sp, #24]
   16954:	cmp	r3, #7
   16958:	bne	168b8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xc8>
   1695c:	ldr	r0, [sp, #12]
   16960:	ldr	r1, [sp, #20]
   16964:	add	r1, r6, r1
   16968:	bl	fc74 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   1696c:	cmp	r0, #0
   16970:	beq	168b8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xc8>
   16974:	tst	r4, #4
   16978:	bne	168b8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xc8>
   1697c:	ldr	r0, [sp, #28]
   16980:	mov	r2, r7
   16984:	orr	r4, r4, #4
   16988:	mov	r8, #1
   1698c:	ldr	r1, [sp, #32]
   16990:	ldr	r3, [sp, #80]	; 0x50
   16994:	add	r0, r6, r0
   16998:	cmp	r3, #0
   1699c:	strne	r0, [r3]
   169a0:	ldr	r3, [sp, #84]	; 0x54
   169a4:	cmp	r3, #0
   169a8:	strne	r1, [r3]
   169ac:	bl	10c64 <myencoding_by_name@plt>
   169b0:	b	168b8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xc8>
   169b4:	ldr	r3, [r7]
   169b8:	sub	r2, r3, #4
   169bc:	cmp	r2, #1
   169c0:	strls	r8, [r7]
   169c4:	bls	169d4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1e4>
   169c8:	cmp	r3, #6
   169cc:	moveq	r3, #33	; 0x21
   169d0:	streq	r3, [r7]
   169d4:	mov	r0, #1
   169d8:	b	168f0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x100>
   169dc:	andeq	ip, r1, r0, lsr #21
   169e0:	andeq	ip, r1, r0, lsl #21
   169e4:	andeq	ip, r1, r0, ror sl
   169e8:	andeq	ip, r1, pc, lsl #20

000169ec <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base>:
   169ec:	push	{r4, r5, r6, r7, lr}
   169f0:	mov	r5, r0
   169f4:	sub	sp, sp, #36	; 0x24
   169f8:	mov	r4, r2
   169fc:	ldr	r0, [pc, #140]	; 16a90 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xa4>
   16a00:	cmp	r1, r4
   16a04:	bcc	16a14 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x28>
   16a08:	mov	r0, r1
   16a0c:	add	sp, sp, #36	; 0x24
   16a10:	pop	{r4, r5, r6, r7, pc}
   16a14:	ldrb	r2, [r5, r1]
   16a18:	sub	r3, r2, #9
   16a1c:	uxtb	r3, r3
   16a20:	cmp	r3, #23
   16a24:	bls	16a38 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x4c>
   16a28:	cmp	r2, #62	; 0x3e
   16a2c:	bne	16a48 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x5c>
   16a30:	add	r1, r1, #1
   16a34:	b	16a08 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x1c>
   16a38:	mvn	r3, r0, lsr r3
   16a3c:	tst	r3, #1
   16a40:	addeq	r1, r1, #1
   16a44:	beq	16a00 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x14>
   16a48:	mov	r3, #0
   16a4c:	add	r6, sp, #12
   16a50:	add	r7, sp, #11
   16a54:	strb	r3, [sp, #11]
   16a58:	mov	r3, r6
   16a5c:	mov	r2, r4
   16a60:	str	r7, [sp]
   16a64:	mov	r0, r5
   16a68:	bl	10c88 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   16a6c:	ldrb	r3, [sp, #11]
   16a70:	mov	r1, r0
   16a74:	eor	r3, r3, #1
   16a78:	cmp	r4, r0
   16a7c:	movls	r3, #0
   16a80:	andhi	r3, r3, #1
   16a84:	cmp	r3, #0
   16a88:	bne	16a58 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x6c>
   16a8c:	b	16a08 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x1c>
   16a90:	addeq	r0, r0, fp, lsl r0

00016a94 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base>:
   16a94:	push	{r4, r5, lr}
   16a98:	mov	r3, r1
   16a9c:	mov	r4, r0
   16aa0:	mov	r5, r2
   16aa4:	add	ip, r0, r1
   16aa8:	ldrb	lr, [r0, r1]
   16aac:	cmp	lr, #47	; 0x2f
   16ab0:	bne	16b04 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x70>
   16ab4:	add	r1, r1, #1
   16ab8:	cmp	r1, r2
   16abc:	bcs	16afc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x68>
   16ac0:	ldr	r3, [pc, #236]	; 16bb4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x120>
   16ac4:	ldrb	ip, [r0, r1]
   16ac8:	add	r3, pc, r3
   16acc:	add	r3, r3, ip
   16ad0:	ldrb	r3, [r3, #256]	; 0x100
   16ad4:	cmp	r3, #1
   16ad8:	bne	16ae4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x50>
   16adc:	pop	{r4, r5, lr}
   16ae0:	b	10028 <myencoding_prescan_stream_to_determine_encoding_skip_name@plt>
   16ae4:	ldrb	r3, [r4, r1]
   16ae8:	add	r1, r1, #1
   16aec:	cmp	r3, #62	; 0x3e
   16af0:	bne	16afc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x68>
   16af4:	cmp	r5, r1
   16af8:	bhi	16ae4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x50>
   16afc:	mov	r0, r1
   16b00:	pop	{r4, r5, pc}
   16b04:	cmp	lr, #33	; 0x21
   16b08:	bne	16b8c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xf8>
   16b0c:	add	r3, r3, #3
   16b10:	add	r1, r1, #1
   16b14:	cmp	r3, r2
   16b18:	bcs	16b38 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xa4>
   16b1c:	ldrb	r3, [r0, r1]
   16b20:	cmp	r3, #45	; 0x2d
   16b24:	bne	16b38 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xa4>
   16b28:	ldrb	r3, [ip, #2]
   16b2c:	cmp	r3, #45	; 0x2d
   16b30:	moveq	r3, ip
   16b34:	beq	16b80 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xec>
   16b38:	cmp	r1, r5
   16b3c:	bcs	16afc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x68>
   16b40:	ldrb	r3, [r4, r1]
   16b44:	add	r1, r1, #1
   16b48:	cmp	r3, #62	; 0x3e
   16b4c:	beq	16b38 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xa4>
   16b50:	b	16afc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x68>
   16b54:	ldrb	r2, [r3, #1]
   16b58:	add	r1, r1, #1
   16b5c:	cmp	r2, #62	; 0x3e
   16b60:	beq	16b7c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xe8>
   16b64:	ldrb	r2, [r3]
   16b68:	cmp	r2, #45	; 0x2d
   16b6c:	bne	16b7c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xe8>
   16b70:	ldrb	r2, [r3, #-1]
   16b74:	cmp	r2, #45	; 0x2d
   16b78:	beq	16afc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x68>
   16b7c:	add	r3, r3, #1
   16b80:	cmp	r1, r5
   16b84:	bcc	16b54 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xc0>
   16b88:	b	16afc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x68>
   16b8c:	cmp	lr, #63	; 0x3f
   16b90:	addeq	r1, r1, #1
   16b94:	bne	16adc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x48>
   16b98:	cmp	r1, r5
   16b9c:	bcs	16afc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x68>
   16ba0:	ldrb	r3, [r4, r1]
   16ba4:	add	r1, r1, #1
   16ba8:	cmp	r3, #62	; 0x3e
   16bac:	beq	16b98 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x104>
   16bb0:	b	16afc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x68>
   16bb4:	andeq	r2, r1, r8, lsr #17

00016bb8 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base>:
   16bb8:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   16bbc:	mov	r6, r3
   16bc0:	mov	r3, #2
   16bc4:	subs	r7, r2, #0
   16bc8:	mov	r4, r0
   16bcc:	mov	r5, r1
   16bd0:	add	r9, sp, #8
   16bd4:	ldr	r8, [pc, #264]	; 16ce4 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x12c>
   16bd8:	str	r3, [sp, #8]
   16bdc:	movne	r3, #0
   16be0:	ldr	sl, [pc, #256]	; 16ce8 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x130>
   16be4:	strne	r3, [r7]
   16be8:	mov	r3, #0
   16bec:	cmp	r6, #0
   16bf0:	add	r8, pc, r8
   16bf4:	strne	r3, [r6]
   16bf8:	str	r3, [sp, #12]
   16bfc:	ldr	r1, [sp, #12]
   16c00:	cmp	r1, r5
   16c04:	bcs	16c28 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x70>
   16c08:	ldrb	r3, [r4, r1]
   16c0c:	cmp	r3, #60	; 0x3c
   16c10:	addne	r1, r1, #1
   16c14:	strne	r1, [sp, #12]
   16c18:	bne	16bfc <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x44>
   16c1c:	add	r3, r1, #5
   16c20:	cmp	r3, r5
   16c24:	bcc	16c34 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x7c>
   16c28:	ldr	r0, [sp, #8]
   16c2c:	add	sp, sp, #16
   16c30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16c34:	add	r1, r1, #1
   16c38:	ldrb	r3, [r4, r1]
   16c3c:	add	r2, r4, r1
   16c40:	str	r1, [sp, #12]
   16c44:	cmp	r3, #77	; 0x4d
   16c48:	beq	16c54 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x9c>
   16c4c:	cmp	r3, #109	; 0x6d
   16c50:	bne	16cd0 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x118>
   16c54:	mov	r1, r2
   16c58:	mov	r0, r8
   16c5c:	bl	fc74 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   16c60:	cmp	r0, #0
   16c64:	beq	16bfc <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x44>
   16c68:	ldr	r2, [sp, #12]
   16c6c:	add	r3, r2, #4
   16c70:	ldrb	r1, [r4, r3]
   16c74:	str	r3, [sp, #12]
   16c78:	sub	r3, r1, #9
   16c7c:	uxtb	r3, r3
   16c80:	cmp	r3, #23
   16c84:	mvnls	r0, sl, lsr r3
   16c88:	andls	r0, r0, #1
   16c8c:	eor	r0, r0, #1
   16c90:	cmp	r1, #47	; 0x2f
   16c94:	orreq	r0, r0, #1
   16c98:	tst	r0, #255	; 0xff
   16c9c:	beq	16bfc <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x44>
   16ca0:	add	r2, r2, #5
   16ca4:	mov	r3, r9
   16ca8:	str	r7, [sp]
   16cac:	add	r1, sp, #12
   16cb0:	mov	r0, r4
   16cb4:	str	r6, [sp, #4]
   16cb8:	str	r2, [sp, #12]
   16cbc:	mov	r2, r5
   16cc0:	bl	1037c <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>
   16cc4:	cmp	r0, #0
   16cc8:	beq	16bfc <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x44>
   16ccc:	b	16c28 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x70>
   16cd0:	mov	r2, r5
   16cd4:	mov	r0, r4
   16cd8:	bl	102e0 <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>
   16cdc:	str	r0, [sp, #12]
   16ce0:	b	16bfc <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x44>
   16ce4:	ldrdeq	ip, [r1], -r8
   16ce8:	addeq	r0, r0, fp, lsl r0

00016cec <myencoding_prescan_stream_to_determine_encoding@@Base>:
   16cec:	mov	r3, #0
   16cf0:	mov	r2, r3
   16cf4:	b	10b20 <myencoding_prescan_stream_to_determine_encoding_with_found@plt>

00016cf8 <myencoding_decode_ibm866@@Base>:
   16cf8:	tst	r0, #128	; 0x80
   16cfc:	beq	16d10 <myencoding_decode_ibm866@@Base+0x18>
   16d00:	ldr	r3, [pc, #20]	; 16d1c <myencoding_decode_ibm866@@Base+0x24>
   16d04:	sub	r0, r0, #128	; 0x80
   16d08:	add	r3, pc, r3
   16d0c:	ldr	r0, [r3, r0, lsl #2]
   16d10:	str	r0, [r1, #12]
   16d14:	mov	r0, #0
   16d18:	bx	lr
   16d1c:	andeq	ip, r1, ip, lsl #30

00016d20 <myencoding_decode_iso_8859_2@@Base>:
   16d20:	tst	r0, #128	; 0x80
   16d24:	ldrne	r3, [pc, #16]	; 16d3c <myencoding_decode_iso_8859_2@@Base+0x1c>
   16d28:	addne	r3, pc, r3
   16d2c:	ldrne	r0, [r3, r0, lsl #2]
   16d30:	str	r0, [r1, #12]
   16d34:	mov	r0, #0
   16d38:	bx	lr
   16d3c:	andeq	ip, r1, ip, ror #29

00016d40 <myencoding_decode_iso_8859_3@@Base>:
   16d40:	tst	r0, #128	; 0x80
   16d44:	beq	16d58 <myencoding_decode_iso_8859_3@@Base+0x18>
   16d48:	ldr	r3, [pc, #20]	; 16d64 <myencoding_decode_iso_8859_3@@Base+0x24>
   16d4c:	add	r3, pc, r3
   16d50:	add	r0, r3, r0, lsl #2
   16d54:	ldr	r0, [r0, #512]	; 0x200
   16d58:	str	r0, [r1, #12]
   16d5c:	mov	r0, #0
   16d60:	bx	lr
   16d64:	andeq	ip, r1, r8, asr #29

00016d68 <myencoding_decode_iso_8859_4@@Base>:
   16d68:	tst	r0, #128	; 0x80
   16d6c:	beq	16d80 <myencoding_decode_iso_8859_4@@Base+0x18>
   16d70:	ldr	r3, [pc, #20]	; 16d8c <myencoding_decode_iso_8859_4@@Base+0x24>
   16d74:	add	r3, pc, r3
   16d78:	add	r0, r3, r0, lsl #2
   16d7c:	ldr	r0, [r0, #1024]	; 0x400
   16d80:	str	r0, [r1, #12]
   16d84:	mov	r0, #0
   16d88:	bx	lr
   16d8c:	andeq	ip, r1, r0, lsr #29

00016d90 <myencoding_decode_iso_8859_5@@Base>:
   16d90:	tst	r0, #128	; 0x80
   16d94:	beq	16da8 <myencoding_decode_iso_8859_5@@Base+0x18>
   16d98:	ldr	r3, [pc, #20]	; 16db4 <myencoding_decode_iso_8859_5@@Base+0x24>
   16d9c:	add	r3, pc, r3
   16da0:	add	r0, r3, r0, lsl #2
   16da4:	ldr	r0, [r0, #1536]	; 0x600
   16da8:	str	r0, [r1, #12]
   16dac:	mov	r0, #0
   16db0:	bx	lr
   16db4:	andeq	ip, r1, r8, ror lr

00016db8 <myencoding_decode_iso_8859_6@@Base>:
   16db8:	tst	r0, #128	; 0x80
   16dbc:	beq	16dd0 <myencoding_decode_iso_8859_6@@Base+0x18>
   16dc0:	ldr	r3, [pc, #20]	; 16ddc <myencoding_decode_iso_8859_6@@Base+0x24>
   16dc4:	add	r3, pc, r3
   16dc8:	add	r0, r3, r0, lsl #2
   16dcc:	ldr	r0, [r0, #2048]	; 0x800
   16dd0:	str	r0, [r1, #12]
   16dd4:	mov	r0, #0
   16dd8:	bx	lr
   16ddc:	andeq	ip, r1, r0, asr lr

00016de0 <myencoding_decode_iso_8859_7@@Base>:
   16de0:	tst	r0, #128	; 0x80
   16de4:	beq	16df8 <myencoding_decode_iso_8859_7@@Base+0x18>
   16de8:	ldr	r3, [pc, #20]	; 16e04 <myencoding_decode_iso_8859_7@@Base+0x24>
   16dec:	add	r3, pc, r3
   16df0:	add	r0, r3, r0, lsl #2
   16df4:	ldr	r0, [r0, #2560]	; 0xa00
   16df8:	str	r0, [r1, #12]
   16dfc:	mov	r0, #0
   16e00:	bx	lr
   16e04:	andeq	ip, r1, r8, lsr #28

00016e08 <myencoding_decode_iso_8859_8@@Base>:
   16e08:	tst	r0, #128	; 0x80
   16e0c:	beq	16e20 <myencoding_decode_iso_8859_8@@Base+0x18>
   16e10:	ldr	r3, [pc, #20]	; 16e2c <myencoding_decode_iso_8859_8@@Base+0x24>
   16e14:	add	r3, pc, r3
   16e18:	add	r0, r3, r0, lsl #2
   16e1c:	ldr	r0, [r0, #3072]	; 0xc00
   16e20:	str	r0, [r1, #12]
   16e24:	mov	r0, #0
   16e28:	bx	lr
   16e2c:	andeq	ip, r1, r0, lsl #28

00016e30 <myencoding_decode_iso_8859_10@@Base>:
   16e30:	tst	r0, #128	; 0x80
   16e34:	beq	16e4c <myencoding_decode_iso_8859_10@@Base+0x1c>
   16e38:	ldr	r3, [pc, #24]	; 16e58 <myencoding_decode_iso_8859_10@@Base+0x28>
   16e3c:	sub	r0, r0, #128	; 0x80
   16e40:	add	r3, pc, r3
   16e44:	add	r0, r3, r0, lsl #2
   16e48:	ldr	r0, [r0, #-4088]	; 0xfffff008
   16e4c:	str	r0, [r1, #12]
   16e50:	mov	r0, #0
   16e54:	bx	lr
   16e58:	andeq	lr, r1, ip, asr #27

00016e5c <myencoding_decode_iso_8859_13@@Base>:
   16e5c:	tst	r0, #128	; 0x80
   16e60:	beq	16e74 <myencoding_decode_iso_8859_13@@Base+0x18>
   16e64:	ldr	r3, [pc, #20]	; 16e80 <myencoding_decode_iso_8859_13@@Base+0x24>
   16e68:	add	r3, pc, r3
   16e6c:	add	r0, r3, r0, lsl #2
   16e70:	ldr	r0, [r0, #-4088]	; 0xfffff008
   16e74:	str	r0, [r1, #12]
   16e78:	mov	r0, #0
   16e7c:	bx	lr
   16e80:	andeq	lr, r1, r4, lsr #27

00016e84 <myencoding_decode_iso_8859_14@@Base>:
   16e84:	tst	r0, #128	; 0x80
   16e88:	beq	16e9c <myencoding_decode_iso_8859_14@@Base+0x18>
   16e8c:	ldr	r3, [pc, #20]	; 16ea8 <myencoding_decode_iso_8859_14@@Base+0x24>
   16e90:	add	r3, pc, r3
   16e94:	add	r0, r3, r0, lsl #2
   16e98:	ldr	r0, [r0, #-3576]	; 0xfffff208
   16e9c:	str	r0, [r1, #12]
   16ea0:	mov	r0, #0
   16ea4:	bx	lr
   16ea8:	andeq	lr, r1, ip, ror sp

00016eac <myencoding_decode_iso_8859_15@@Base>:
   16eac:	tst	r0, #128	; 0x80
   16eb0:	beq	16ec4 <myencoding_decode_iso_8859_15@@Base+0x18>
   16eb4:	ldr	r3, [pc, #20]	; 16ed0 <myencoding_decode_iso_8859_15@@Base+0x24>
   16eb8:	add	r3, pc, r3
   16ebc:	add	r0, r3, r0, lsl #2
   16ec0:	ldr	r0, [r0, #-3064]	; 0xfffff408
   16ec4:	str	r0, [r1, #12]
   16ec8:	mov	r0, #0
   16ecc:	bx	lr
   16ed0:	andeq	lr, r1, r4, asr sp

00016ed4 <myencoding_decode_iso_8859_16@@Base>:
   16ed4:	tst	r0, #128	; 0x80
   16ed8:	beq	16eec <myencoding_decode_iso_8859_16@@Base+0x18>
   16edc:	ldr	r3, [pc, #20]	; 16ef8 <myencoding_decode_iso_8859_16@@Base+0x24>
   16ee0:	add	r3, pc, r3
   16ee4:	add	r0, r3, r0, lsl #2
   16ee8:	ldr	r0, [r0, #-2552]	; 0xfffff608
   16eec:	str	r0, [r1, #12]
   16ef0:	mov	r0, #0
   16ef4:	bx	lr
   16ef8:	andeq	lr, r1, ip, lsr #26

00016efc <myencoding_decode_koi8_r@@Base>:
   16efc:	tst	r0, #128	; 0x80
   16f00:	beq	16f14 <myencoding_decode_koi8_r@@Base+0x18>
   16f04:	ldr	r3, [pc, #20]	; 16f20 <myencoding_decode_koi8_r@@Base+0x24>
   16f08:	add	r3, pc, r3
   16f0c:	add	r0, r3, r0, lsl #2
   16f10:	ldr	r0, [r0, #-2040]	; 0xfffff808
   16f14:	str	r0, [r1, #12]
   16f18:	mov	r0, #0
   16f1c:	bx	lr
   16f20:	andeq	lr, r1, r4, lsl #26

00016f24 <myencoding_decode_koi8_u@@Base>:
   16f24:	tst	r0, #128	; 0x80
   16f28:	beq	16f3c <myencoding_decode_koi8_u@@Base+0x18>
   16f2c:	ldr	r3, [pc, #20]	; 16f48 <myencoding_decode_koi8_u@@Base+0x24>
   16f30:	add	r3, pc, r3
   16f34:	add	r0, r3, r0, lsl #2
   16f38:	ldr	r0, [r0, #-1528]	; 0xfffffa08
   16f3c:	str	r0, [r1, #12]
   16f40:	mov	r0, #0
   16f44:	bx	lr
   16f48:	ldrdeq	lr, [r1], -ip

00016f4c <myencoding_decode_macintosh@@Base>:
   16f4c:	tst	r0, #128	; 0x80
   16f50:	beq	16f64 <myencoding_decode_macintosh@@Base+0x18>
   16f54:	ldr	r3, [pc, #20]	; 16f70 <myencoding_decode_macintosh@@Base+0x24>
   16f58:	add	r3, pc, r3
   16f5c:	add	r0, r3, r0, lsl #2
   16f60:	ldr	r0, [r0, #-1016]	; 0xfffffc08
   16f64:	str	r0, [r1, #12]
   16f68:	mov	r0, #0
   16f6c:	bx	lr
   16f70:			; <UNDEFINED> instruction: 0x0001ecb4

00016f74 <myencoding_decode_windows_874@@Base>:
   16f74:	tst	r0, #128	; 0x80
   16f78:	beq	16f8c <myencoding_decode_windows_874@@Base+0x18>
   16f7c:	ldr	r3, [pc, #20]	; 16f98 <myencoding_decode_windows_874@@Base+0x24>
   16f80:	add	r3, pc, r3
   16f84:	add	r0, r3, r0, lsl #2
   16f88:	ldr	r0, [r0, #-504]	; 0xfffffe08
   16f8c:	str	r0, [r1, #12]
   16f90:	mov	r0, #0
   16f94:	bx	lr
   16f98:	andeq	lr, r1, ip, lsl #25

00016f9c <myencoding_decode_windows_1250@@Base>:
   16f9c:	tst	r0, #128	; 0x80
   16fa0:	beq	16fb4 <myencoding_decode_windows_1250@@Base+0x18>
   16fa4:	ldr	r3, [pc, #20]	; 16fc0 <myencoding_decode_windows_1250@@Base+0x24>
   16fa8:	add	r3, pc, r3
   16fac:	add	r0, r3, r0, lsl #2
   16fb0:	ldr	r0, [r0, #8]
   16fb4:	str	r0, [r1, #12]
   16fb8:	mov	r0, #0
   16fbc:	bx	lr
   16fc0:	andeq	lr, r1, r4, ror #24

00016fc4 <myencoding_decode_windows_1251@@Base>:
   16fc4:	tst	r0, #128	; 0x80
   16fc8:	beq	16fdc <myencoding_decode_windows_1251@@Base+0x18>
   16fcc:	ldr	r3, [pc, #20]	; 16fe8 <myencoding_decode_windows_1251@@Base+0x24>
   16fd0:	add	r3, pc, r3
   16fd4:	add	r0, r3, r0, lsl #2
   16fd8:	ldr	r0, [r0, #520]	; 0x208
   16fdc:	str	r0, [r1, #12]
   16fe0:	mov	r0, #0
   16fe4:	bx	lr
   16fe8:	andeq	lr, r1, ip, lsr ip

00016fec <myencoding_decode_windows_1252@@Base>:
   16fec:	tst	r0, #128	; 0x80
   16ff0:	beq	17004 <myencoding_decode_windows_1252@@Base+0x18>
   16ff4:	ldr	r3, [pc, #20]	; 17010 <myencoding_decode_windows_1252@@Base+0x24>
   16ff8:	add	r3, pc, r3
   16ffc:	add	r0, r3, r0, lsl #2
   17000:	ldr	r0, [r0, #1032]	; 0x408
   17004:	str	r0, [r1, #12]
   17008:	mov	r0, #0
   1700c:	bx	lr
   17010:	andeq	lr, r1, r4, lsl ip

00017014 <myencoding_decode_windows_1253@@Base>:
   17014:	tst	r0, #128	; 0x80
   17018:	beq	1702c <myencoding_decode_windows_1253@@Base+0x18>
   1701c:	ldr	r3, [pc, #20]	; 17038 <myencoding_decode_windows_1253@@Base+0x24>
   17020:	add	r3, pc, r3
   17024:	add	r0, r3, r0, lsl #2
   17028:	ldr	r0, [r0, #1544]	; 0x608
   1702c:	str	r0, [r1, #12]
   17030:	mov	r0, #0
   17034:	bx	lr
   17038:	andeq	lr, r1, ip, ror #23

0001703c <myencoding_decode_windows_1254@@Base>:
   1703c:	tst	r0, #128	; 0x80
   17040:	beq	17054 <myencoding_decode_windows_1254@@Base+0x18>
   17044:	ldr	r3, [pc, #20]	; 17060 <myencoding_decode_windows_1254@@Base+0x24>
   17048:	add	r3, pc, r3
   1704c:	add	r0, r3, r0, lsl #2
   17050:	ldr	r0, [r0, #2056]	; 0x808
   17054:	str	r0, [r1, #12]
   17058:	mov	r0, #0
   1705c:	bx	lr
   17060:	andeq	lr, r1, r4, asr #23

00017064 <myencoding_decode_windows_1255@@Base>:
   17064:	tst	r0, #128	; 0x80
   17068:	beq	1707c <myencoding_decode_windows_1255@@Base+0x18>
   1706c:	ldr	r3, [pc, #20]	; 17088 <myencoding_decode_windows_1255@@Base+0x24>
   17070:	add	r3, pc, r3
   17074:	add	r0, r3, r0, lsl #2
   17078:	ldr	r0, [r0, #2568]	; 0xa08
   1707c:	str	r0, [r1, #12]
   17080:	mov	r0, #0
   17084:	bx	lr
   17088:	muleq	r1, ip, fp

0001708c <myencoding_decode_windows_1256@@Base>:
   1708c:	tst	r0, #128	; 0x80
   17090:	beq	170a4 <myencoding_decode_windows_1256@@Base+0x18>
   17094:	ldr	r3, [pc, #20]	; 170b0 <myencoding_decode_windows_1256@@Base+0x24>
   17098:	add	r3, pc, r3
   1709c:	add	r0, r3, r0, lsl #2
   170a0:	ldr	r0, [r0, #3080]	; 0xc08
   170a4:	str	r0, [r1, #12]
   170a8:	mov	r0, #0
   170ac:	bx	lr
   170b0:	andeq	lr, r1, r4, ror fp

000170b4 <myencoding_decode_windows_1257@@Base>:
   170b4:	tst	r0, #128	; 0x80
   170b8:	beq	170d0 <myencoding_decode_windows_1257@@Base+0x1c>
   170bc:	ldr	r3, [pc, #24]	; 170dc <myencoding_decode_windows_1257@@Base+0x28>
   170c0:	sub	r0, r0, #128	; 0x80
   170c4:	add	r3, pc, r3
   170c8:	add	r0, r3, r0, lsl #2
   170cc:	ldr	r0, [r0, #-4080]	; 0xfffff010
   170d0:	str	r0, [r1, #12]
   170d4:	mov	r0, #0
   170d8:	bx	lr
   170dc:	andeq	r0, r2, r0, asr #22

000170e0 <myencoding_decode_windows_1258@@Base>:
   170e0:	tst	r0, #128	; 0x80
   170e4:	beq	170f8 <myencoding_decode_windows_1258@@Base+0x18>
   170e8:	ldr	r3, [pc, #20]	; 17104 <myencoding_decode_windows_1258@@Base+0x24>
   170ec:	add	r3, pc, r3
   170f0:	add	r0, r3, r0, lsl #2
   170f4:	ldr	r0, [r0, #-4080]	; 0xfffff010
   170f8:	str	r0, [r1, #12]
   170fc:	mov	r0, #0
   17100:	bx	lr
   17104:	andeq	r0, r2, r8, lsl fp

00017108 <myencoding_decode_x_mac_cyrillic@@Base>:
   17108:	tst	r0, #128	; 0x80
   1710c:	beq	17120 <myencoding_decode_x_mac_cyrillic@@Base+0x18>
   17110:	ldr	r3, [pc, #20]	; 1712c <myencoding_decode_x_mac_cyrillic@@Base+0x24>
   17114:	add	r3, pc, r3
   17118:	add	r0, r3, r0, lsl #2
   1711c:	ldr	r0, [r0, #-3568]	; 0xfffff210
   17120:	str	r0, [r1, #12]
   17124:	mov	r0, #0
   17128:	bx	lr
   1712c:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>

00017130 <myencoding_decode_big5@@Base>:
   17130:	ldr	r3, [r1]
   17134:	cmp	r3, #0
   17138:	beq	1721c <myencoding_decode_big5@@Base+0xec>
   1713c:	add	ip, r0, #95	; 0x5f
   17140:	push	{r4, lr}
   17144:	cmp	r0, #127	; 0x7f
   17148:	mov	r2, #0
   1714c:	sub	lr, r0, #64	; 0x40
   17150:	uxtb	ip, ip
   17154:	movcc	r4, #64	; 0x40
   17158:	movcs	r4, #98	; 0x62
   1715c:	cmp	ip, #93	; 0x5d
   17160:	cmphi	lr, #62	; 0x3e
   17164:	str	r2, [r1]
   17168:	bls	17178 <myencoding_decode_big5@@Base+0x48>
   1716c:	mov	r3, #1
   17170:	mov	r0, r3
   17174:	pop	{r4, pc}
   17178:	sub	r0, r0, #20224	; 0x4f00
   1717c:	mov	ip, #157	; 0x9d
   17180:	sub	r0, r0, #29
   17184:	mla	r3, ip, r3, r0
   17188:	movw	r0, #1135	; 0x46f
   1718c:	sub	r3, r3, r4
   17190:	cmp	r3, r0
   17194:	beq	171fc <myencoding_decode_big5@@Base+0xcc>
   17198:	cmp	r3, #1136	; 0x470
   1719c:	bcs	171d4 <myencoding_decode_big5@@Base+0xa4>
   171a0:	movw	r0, #1133	; 0x46d
   171a4:	cmp	r3, r0
   171a8:	moveq	r3, #202	; 0xca
   171ac:	beq	17208 <myencoding_decode_big5@@Base+0xd8>
   171b0:	cmp	r3, #0
   171b4:	beq	1716c <myencoding_decode_big5@@Base+0x3c>
   171b8:	ldr	r2, [pc, #136]	; 17248 <myencoding_decode_big5@@Base+0x118>
   171bc:	add	r2, pc, r2
   171c0:	ldr	r3, [r2, r3, lsl #2]
   171c4:	str	r3, [r1, #12]
   171c8:	mov	r3, #0
   171cc:	str	r3, [r1, #16]
   171d0:	b	17170 <myencoding_decode_big5@@Base+0x40>
   171d4:	movw	r0, #1164	; 0x48c
   171d8:	cmp	r3, r0
   171dc:	beq	17204 <myencoding_decode_big5@@Base+0xd4>
   171e0:	movw	r0, #1166	; 0x48e
   171e4:	cmp	r3, r0
   171e8:	moveq	r3, #234	; 0xea
   171ec:	bne	171b0 <myencoding_decode_big5@@Base+0x80>
   171f0:	str	r3, [r1, #12]
   171f4:	mov	r3, #780	; 0x30c
   171f8:	b	17210 <myencoding_decode_big5@@Base+0xe0>
   171fc:	mov	r3, #202	; 0xca
   17200:	b	171f0 <myencoding_decode_big5@@Base+0xc0>
   17204:	mov	r3, #234	; 0xea
   17208:	str	r3, [r1, #12]
   1720c:	mov	r3, #772	; 0x304
   17210:	str	r3, [r1, #16]
   17214:	mov	r3, r2
   17218:	b	17170 <myencoding_decode_big5@@Base+0x40>
   1721c:	tst	r0, #128	; 0x80
   17220:	streq	r0, [r1, #12]
   17224:	beq	17240 <myencoding_decode_big5@@Base+0x110>
   17228:	add	r3, r0, #127	; 0x7f
   1722c:	uxtb	r3, r3
   17230:	cmp	r3, #125	; 0x7d
   17234:	movls	r3, #2
   17238:	strls	r0, [r1]
   1723c:	movhi	r3, #1
   17240:	mov	r0, r3
   17244:	bx	lr
   17248:	andeq	r2, r6, r0, asr #28

0001724c <myencoding_decode_euc_jp@@Base>:
   1724c:	ldr	r3, [r1]
   17250:	cmp	r3, #142	; 0x8e
   17254:	bne	17284 <myencoding_decode_euc_jp@@Base+0x38>
   17258:	add	r2, r0, #95	; 0x5f
   1725c:	uxtb	r2, r2
   17260:	cmp	r2, #62	; 0x3e
   17264:	bhi	172a4 <myencoding_decode_euc_jp@@Base+0x58>
   17268:	add	r0, r0, #65024	; 0xfe00
   1726c:	mov	r3, #0
   17270:	add	r0, r0, #192	; 0xc0
   17274:	str	r3, [r1]
   17278:	str	r0, [r1, #12]
   1727c:	mov	r0, #0
   17280:	bx	lr
   17284:	cmp	r3, #143	; 0x8f
   17288:	bne	17308 <myencoding_decode_euc_jp@@Base+0xbc>
   1728c:	add	r2, r0, #95	; 0x5f
   17290:	uxtb	r2, r2
   17294:	cmp	r2, #93	; 0x5d
   17298:	movls	r3, #1
   1729c:	strls	r3, [r1, #20]
   172a0:	bls	17334 <myencoding_decode_euc_jp@@Base+0xe8>
   172a4:	mov	r2, #0
   172a8:	str	r2, [r1]
   172ac:	sub	r2, r3, #161	; 0xa1
   172b0:	cmp	r2, #93	; 0x5d
   172b4:	bhi	17310 <myencoding_decode_euc_jp@@Base+0xc4>
   172b8:	add	r2, r0, #95	; 0x5f
   172bc:	uxtb	r2, r2
   172c0:	cmp	r2, #93	; 0x5d
   172c4:	bhi	17310 <myencoding_decode_euc_jp@@Base+0xc4>
   172c8:	sub	r0, r0, #15232	; 0x3b80
   172cc:	mov	r2, #94	; 0x5e
   172d0:	sub	r0, r0, #63	; 0x3f
   172d4:	mla	r3, r2, r3, r0
   172d8:	ldr	r2, [r1, #20]
   172dc:	cmp	r2, #0
   172e0:	beq	17340 <myencoding_decode_euc_jp@@Base+0xf4>
   172e4:	ldr	r2, [pc, #104]	; 17354 <myencoding_decode_euc_jp@@Base+0x108>
   172e8:	add	r2, pc, r2
   172ec:	ldr	r0, [r2, r3, lsl #2]
   172f0:	mov	r3, #0
   172f4:	str	r0, [r1, #12]
   172f8:	clz	r0, r0
   172fc:	lsr	r0, r0, #5
   17300:	str	r3, [r1, #20]
   17304:	bx	lr
   17308:	cmp	r3, #0
   1730c:	bne	172a4 <myencoding_decode_euc_jp@@Base+0x58>
   17310:	tst	r0, #128	; 0x80
   17314:	beq	17278 <myencoding_decode_euc_jp@@Base+0x2c>
   17318:	add	r2, r0, #114	; 0x72
   1731c:	add	r3, r0, #95	; 0x5f
   17320:	uxtb	r2, r2
   17324:	uxtb	r3, r3
   17328:	cmp	r3, #93	; 0x5d
   1732c:	cmphi	r2, #1
   17330:	bhi	1734c <myencoding_decode_euc_jp@@Base+0x100>
   17334:	str	r0, [r1]
   17338:	mov	r0, #2
   1733c:	bx	lr
   17340:	ldr	r2, [pc, #16]	; 17358 <myencoding_decode_euc_jp@@Base+0x10c>
   17344:	add	r2, pc, r2
   17348:	b	172ec <myencoding_decode_euc_jp@@Base+0xa0>
   1734c:	mov	r0, #1
   17350:	bx	lr
   17354:	andeq	r0, r2, r4, lsr #13
   17358:	andeq	r9, r2, r8, asr r0

0001735c <myencoding_decode_iso_2022_jp@@Base>:
   1735c:	ldr	r3, [r1, #4]
   17360:	mov	r2, r0
   17364:	cmp	r3, #7
   17368:	addls	pc, pc, r3, lsl #2
   1736c:	b	1743c <myencoding_decode_iso_2022_jp@@Base+0xe0>
   17370:	b	17390 <myencoding_decode_iso_2022_jp@@Base+0x34>
   17374:	b	173e0 <myencoding_decode_iso_2022_jp@@Base+0x84>
   17378:	b	1743c <myencoding_decode_iso_2022_jp@@Base+0xe0>
   1737c:	b	17414 <myencoding_decode_iso_2022_jp@@Base+0xb8>
   17380:	b	17444 <myencoding_decode_iso_2022_jp@@Base+0xe8>
   17384:	b	1746c <myencoding_decode_iso_2022_jp@@Base+0x110>
   17388:	b	174c8 <myencoding_decode_iso_2022_jp@@Base+0x16c>
   1738c:	b	174f0 <myencoding_decode_iso_2022_jp@@Base+0x194>
   17390:	cmp	r0, #27
   17394:	bne	173a8 <myencoding_decode_iso_2022_jp@@Base+0x4c>
   17398:	mov	r3, #6
   1739c:	mov	r0, #2
   173a0:	str	r3, [r1, #4]
   173a4:	bx	lr
   173a8:	mvn	r0, r2
   173ac:	sub	r3, r2, #14
   173b0:	ubfx	r0, r0, #7, #1
   173b4:	cmp	r3, #1
   173b8:	movls	r3, #0
   173bc:	andhi	r3, r0, #1
   173c0:	cmp	r3, #0
   173c4:	movne	r3, #0
   173c8:	strne	r3, [r1, #20]
   173cc:	bne	17438 <myencoding_decode_iso_2022_jp@@Base+0xdc>
   173d0:	mov	r3, #0
   173d4:	str	r3, [r1, #20]
   173d8:	mov	r0, #1
   173dc:	bx	lr
   173e0:	cmp	r0, #27
   173e4:	beq	17398 <myencoding_decode_iso_2022_jp@@Base+0x3c>
   173e8:	cmp	r0, #92	; 0x5c
   173ec:	mov	r0, #0
   173f0:	moveq	r3, #165	; 0xa5
   173f4:	streq	r0, [r1, #20]
   173f8:	beq	1740c <myencoding_decode_iso_2022_jp@@Base+0xb0>
   173fc:	cmp	r2, #126	; 0x7e
   17400:	bne	173a8 <myencoding_decode_iso_2022_jp@@Base+0x4c>
   17404:	movw	r3, #8254	; 0x203e
   17408:	str	r0, [r1, #20]
   1740c:	str	r3, [r1, #12]
   17410:	bx	lr
   17414:	cmp	r0, #27
   17418:	beq	17398 <myencoding_decode_iso_2022_jp@@Base+0x3c>
   1741c:	sub	r3, r0, #33	; 0x21
   17420:	cmp	r3, #62	; 0x3e
   17424:	bhi	173d0 <myencoding_decode_iso_2022_jp@@Base+0x74>
   17428:	add	r2, r0, #65280	; 0xff00
   1742c:	mov	r3, #0
   17430:	add	r2, r2, #64	; 0x40
   17434:	str	r3, [r1, #20]
   17438:	str	r2, [r1, #12]
   1743c:	mov	r0, #0
   17440:	bx	lr
   17444:	cmp	r0, #27
   17448:	beq	17398 <myencoding_decode_iso_2022_jp@@Base+0x3c>
   1744c:	sub	r3, r0, #33	; 0x21
   17450:	cmp	r3, #93	; 0x5d
   17454:	bhi	173d0 <myencoding_decode_iso_2022_jp@@Base+0x74>
   17458:	mov	r3, #0
   1745c:	str	r0, [r1]
   17460:	str	r3, [r1, #20]
   17464:	mov	r3, #5
   17468:	b	1739c <myencoding_decode_iso_2022_jp@@Base+0x40>
   1746c:	cmp	r0, #27
   17470:	bne	17484 <myencoding_decode_iso_2022_jp@@Base+0x128>
   17474:	mov	r3, #6
   17478:	mov	r0, #3
   1747c:	str	r3, [r1, #4]
   17480:	bx	lr
   17484:	sub	r3, r0, #33	; 0x21
   17488:	cmp	r3, #93	; 0x5d
   1748c:	mov	r3, #4
   17490:	str	r3, [r1, #4]
   17494:	bhi	173d8 <myencoding_decode_iso_2022_jp@@Base+0x7c>
   17498:	ldr	r3, [r1]
   1749c:	sub	r2, r0, #3120	; 0xc30
   174a0:	mov	r0, #94	; 0x5e
   174a4:	sub	r2, r2, #15
   174a8:	mla	r3, r0, r3, r2
   174ac:	ldr	r2, [pc, #236]	; 175a0 <myencoding_decode_iso_2022_jp@@Base+0x244>
   174b0:	add	r2, pc, r2
   174b4:	ldr	r0, [r2, r3, lsl #2]
   174b8:	str	r0, [r1, #12]
   174bc:	clz	r0, r0
   174c0:	lsr	r0, r0, #5
   174c4:	bx	lr
   174c8:	sub	r3, r0, #36	; 0x24
   174cc:	tst	r3, #251	; 0xfb
   174d0:	moveq	r3, #7
   174d4:	streq	r0, [r1]
   174d8:	beq	1739c <myencoding_decode_iso_2022_jp@@Base+0x40>
   174dc:	mov	r3, #0
   174e0:	str	r3, [r1, #20]
   174e4:	ldr	r3, [r1, #8]
   174e8:	str	r3, [r1, #4]
   174ec:	b	173d8 <myencoding_decode_iso_2022_jp@@Base+0x7c>
   174f0:	ldr	r0, [r1]
   174f4:	mov	r3, #0
   174f8:	str	r3, [r1]
   174fc:	cmp	r0, #40	; 0x28
   17500:	movne	r3, #0
   17504:	moveq	r3, #1
   17508:	cmp	r2, #66	; 0x42
   1750c:	cmpeq	r0, #40	; 0x28
   17510:	bne	17544 <myencoding_decode_iso_2022_jp@@Base+0x1e8>
   17514:	mov	r3, #0
   17518:	str	r3, [r1, #4]
   1751c:	mov	r0, #1
   17520:	ldr	r3, [r1, #4]
   17524:	cmp	r3, #0
   17528:	beq	17590 <myencoding_decode_iso_2022_jp@@Base+0x234>
   1752c:	str	r3, [r1, #8]
   17530:	ldr	r3, [r1, #20]
   17534:	str	r0, [r1, #20]
   17538:	cmp	r3, #0
   1753c:	moveq	r0, #2
   17540:	bx	lr
   17544:	cmp	r2, #74	; 0x4a
   17548:	movne	ip, #0
   1754c:	andeq	ip, r3, #1
   17550:	cmp	ip, #0
   17554:	movne	r3, #1
   17558:	bne	17518 <myencoding_decode_iso_2022_jp@@Base+0x1bc>
   1755c:	cmp	r2, #73	; 0x49
   17560:	movne	r3, #0
   17564:	andeq	r3, r3, #1
   17568:	cmp	r3, #0
   1756c:	movne	r3, #2
   17570:	bne	17518 <myencoding_decode_iso_2022_jp@@Base+0x1bc>
   17574:	cmp	r0, #36	; 0x24
   17578:	bne	17514 <myencoding_decode_iso_2022_jp@@Base+0x1b8>
   1757c:	and	r2, r2, #253	; 0xfd
   17580:	cmp	r2, #64	; 0x40
   17584:	bne	17514 <myencoding_decode_iso_2022_jp@@Base+0x1b8>
   17588:	mov	r3, #4
   1758c:	b	17518 <myencoding_decode_iso_2022_jp@@Base+0x1bc>
   17590:	str	r3, [r1, #20]
   17594:	ldr	r3, [r1, #8]
   17598:	str	r3, [r1, #4]
   1759c:	bx	lr
   175a0:	andeq	r8, r2, ip, ror #29

000175a4 <myencoding_decode_x_user_defined@@Base>:
   175a4:	tst	r0, #128	; 0x80
   175a8:	addne	r0, r0, #63232	; 0xf700
   175ac:	str	r0, [r1, #12]
   175b0:	mov	r0, #0
   175b4:	bx	lr

000175b8 <myencoding_decode_utf_8@@Base>:
   175b8:	mov	r3, r0
   175bc:	ldr	r0, [r1, #20]
   175c0:	cmp	r0, #0
   175c4:	bne	1768c <myencoding_decode_utf_8@@Base+0xd4>
   175c8:	tst	r3, #128	; 0x80
   175cc:	bne	175d8 <myencoding_decode_utf_8@@Base+0x20>
   175d0:	str	r3, [r1, #12]
   175d4:	bx	lr
   175d8:	add	r2, r3, #62	; 0x3e
   175dc:	uxtb	r2, r2
   175e0:	cmp	r2, #29
   175e4:	movls	r2, #1
   175e8:	subls	r3, r3, #192	; 0xc0
   175ec:	strls	r2, [r1, #20]
   175f0:	bls	1762c <myencoding_decode_utf_8@@Base+0x74>
   175f4:	add	r2, r3, #32
   175f8:	uxtb	r2, r2
   175fc:	cmp	r2, #15
   17600:	bhi	17650 <myencoding_decode_utf_8@@Base+0x98>
   17604:	cmp	r3, #224	; 0xe0
   17608:	moveq	r2, #160	; 0xa0
   1760c:	streq	r2, [r1]
   17610:	beq	17620 <myencoding_decode_utf_8@@Base+0x68>
   17614:	cmp	r3, #237	; 0xed
   17618:	moveq	r2, #159	; 0x9f
   1761c:	streq	r2, [r1, #4]
   17620:	mov	r2, #2
   17624:	sub	r3, r3, #224	; 0xe0
   17628:	str	r2, [r1, #20]
   1762c:	ldr	r2, [r1, #20]
   17630:	mov	r0, #2
   17634:	str	r3, [r1, #12]
   17638:	mov	r3, #6
   1763c:	mul	r2, r3, r2
   17640:	ldr	r3, [r1, #12]
   17644:	lsl	r3, r3, r2
   17648:	str	r3, [r1, #12]
   1764c:	bx	lr
   17650:	add	r2, r3, #16
   17654:	uxtb	r2, r2
   17658:	cmp	r2, #4
   1765c:	bhi	17718 <myencoding_decode_utf_8@@Base+0x160>
   17660:	cmp	r3, #240	; 0xf0
   17664:	moveq	r2, #144	; 0x90
   17668:	streq	r2, [r1]
   1766c:	beq	1767c <myencoding_decode_utf_8@@Base+0xc4>
   17670:	cmp	r3, #244	; 0xf4
   17674:	moveq	r2, #143	; 0x8f
   17678:	streq	r2, [r1, #4]
   1767c:	mov	r2, #2
   17680:	sub	r3, r3, #240	; 0xf0
   17684:	str	r2, [r1, #20]
   17688:	b	1762c <myencoding_decode_utf_8@@Base+0x74>
   1768c:	ldr	r2, [r1]
   17690:	cmp	r3, r2
   17694:	bcs	176c8 <myencoding_decode_utf_8@@Base+0x110>
   17698:	ldr	r2, [r1, #4]
   1769c:	cmp	r3, r2
   176a0:	bls	176c8 <myencoding_decode_utf_8@@Base+0x110>
   176a4:	mov	r3, #0
   176a8:	mov	r2, #128	; 0x80
   176ac:	mov	r0, #5
   176b0:	str	r3, [r1, #8]
   176b4:	str	r3, [r1, #12]
   176b8:	str	r3, [r1, #20]
   176bc:	mov	r3, #191	; 0xbf
   176c0:	strd	r2, [r1]
   176c4:	bx	lr
   176c8:	mov	r2, #128	; 0x80
   176cc:	push	{lr}		; (str lr, [sp, #-4]!)
   176d0:	mov	lr, #6
   176d4:	sub	r3, r3, #128	; 0x80
   176d8:	str	r2, [r1]
   176dc:	mov	r2, #191	; 0xbf
   176e0:	str	r2, [r1, #4]
   176e4:	ldr	r2, [r1, #8]
   176e8:	add	r2, r2, #1
   176ec:	sub	ip, r0, r2
   176f0:	cmp	r0, r2
   176f4:	mul	lr, lr, ip
   176f8:	ldr	ip, [r1, #12]
   176fc:	add	r3, ip, r3, lsl lr
   17700:	strd	r2, [r1, #8]
   17704:	bne	17720 <myencoding_decode_utf_8@@Base+0x168>
   17708:	mov	r0, #0
   1770c:	str	r0, [r1, #8]
   17710:	str	r0, [r1, #20]
   17714:	pop	{pc}		; (ldr pc, [sp], #4)
   17718:	mov	r0, #1
   1771c:	bx	lr
   17720:	mov	r0, #2
   17724:	pop	{pc}		; (ldr pc, [sp], #4)

00017728 <myencoding_decode_shift_jis@@Base>:
   17728:	mov	r2, r0
   1772c:	ldr	r0, [r1]
   17730:	cmp	r0, #0
   17734:	beq	177dc <myencoding_decode_shift_jis@@Base+0xb4>
   17738:	cmp	r2, #127	; 0x7f
   1773c:	push	{r4, lr}
   17740:	sub	r3, r2, #64	; 0x40
   17744:	movcc	ip, #64	; 0x40
   17748:	movcs	ip, #65	; 0x41
   1774c:	eor	lr, r2, #128	; 0x80
   17750:	cmp	r0, #160	; 0xa0
   17754:	movcc	r4, #129	; 0x81
   17758:	movcs	r4, #193	; 0xc1
   1775c:	cmp	lr, #124	; 0x7c
   17760:	cmphi	r3, #62	; 0x3e
   17764:	movls	r3, #1
   17768:	movhi	r3, #0
   1776c:	bhi	177d4 <myencoding_decode_shift_jis@@Base+0xac>
   17770:	sub	r0, r0, r4
   17774:	mov	r3, #188	; 0xbc
   17778:	sub	r2, r2, ip
   1777c:	mlas	ip, r3, r0, r2
   17780:	beq	17798 <myencoding_decode_shift_jis@@Base+0x70>
   17784:	ldr	r3, [pc, #160]	; 1782c <myencoding_decode_shift_jis@@Base+0x104>
   17788:	add	r3, pc, r3
   1778c:	ldr	r3, [r3, ip, lsl #2]
   17790:	cmp	r3, #0
   17794:	bne	177c0 <myencoding_decode_shift_jis@@Base+0x98>
   17798:	sub	r3, ip, #8832	; 0x2280
   1779c:	movw	r2, #1692	; 0x69c
   177a0:	sub	r3, r3, #4
   177a4:	cmp	r3, r2
   177a8:	bhi	177bc <myencoding_decode_shift_jis@@Base+0x94>
   177ac:	add	r0, ip, #48384	; 0xbd00
   177b0:	add	r0, r0, #124	; 0x7c
   177b4:	str	r0, [r1, #12]
   177b8:	b	177c4 <myencoding_decode_shift_jis@@Base+0x9c>
   177bc:	mov	r3, #0
   177c0:	str	r3, [r1, #12]
   177c4:	ldr	r0, [r1, #12]
   177c8:	clz	r0, r0
   177cc:	lsr	r0, r0, #5
   177d0:	pop	{r4, pc}
   177d4:	mov	ip, r3
   177d8:	b	17798 <myencoding_decode_shift_jis@@Base+0x70>
   177dc:	cmp	r2, #128	; 0x80
   177e0:	bhi	177ec <myencoding_decode_shift_jis@@Base+0xc4>
   177e4:	str	r2, [r1, #12]
   177e8:	bx	lr
   177ec:	add	r3, r2, #95	; 0x5f
   177f0:	uxtb	r3, r3
   177f4:	cmp	r3, #62	; 0x3e
   177f8:	addls	r2, r2, #65024	; 0xfe00
   177fc:	addls	r2, r2, #192	; 0xc0
   17800:	bls	177e4 <myencoding_decode_shift_jis@@Base+0xbc>
   17804:	add	r0, r2, #127	; 0x7f
   17808:	add	r3, r2, #32
   1780c:	uxtb	r0, r0
   17810:	uxtb	r3, r3
   17814:	cmp	r3, #28
   17818:	cmphi	r0, #30
   1781c:	movls	r0, #2
   17820:	movhi	r0, #1
   17824:	strls	r2, [r1]
   17828:	bx	lr
   1782c:	andeq	r8, r2, r4, lsl ip

00017830 <myencoding_decode_euc_kr@@Base>:
   17830:	ldr	ip, [r1]
   17834:	cmp	ip, #0
   17838:	beq	1788c <myencoding_decode_euc_kr@@Base+0x5c>
   1783c:	mov	r2, #0
   17840:	str	r2, [r1]
   17844:	sub	r2, r0, #65	; 0x41
   17848:	uxtb	r2, r2
   1784c:	cmp	r2, #189	; 0xbd
   17850:	bhi	17878 <myencoding_decode_euc_kr@@Base+0x48>
   17854:	sub	r0, r0, #24320	; 0x5f00
   17858:	mov	r2, #190	; 0xbe
   1785c:	sub	r0, r0, #255	; 0xff
   17860:	mlas	r3, r2, ip, r0
   17864:	beq	17878 <myencoding_decode_euc_kr@@Base+0x48>
   17868:	ldr	r2, [pc, #68]	; 178b4 <myencoding_decode_euc_kr@@Base+0x84>
   1786c:	add	r2, pc, r2
   17870:	ldr	r3, [r2, r3, lsl #2]
   17874:	str	r3, [r1, #12]
   17878:	ldr	r3, [r1, #12]
   1787c:	clz	ip, r3
   17880:	lsr	ip, ip, #5
   17884:	mov	r0, ip
   17888:	bx	lr
   1788c:	tst	r0, #128	; 0x80
   17890:	streq	r0, [r1, #12]
   17894:	beq	17884 <myencoding_decode_euc_kr@@Base+0x54>
   17898:	add	r3, r0, #127	; 0x7f
   1789c:	uxtb	r3, r3
   178a0:	cmp	r3, #125	; 0x7d
   178a4:	movls	ip, #2
   178a8:	movhi	ip, #1
   178ac:	strls	r0, [r1]
   178b0:	b	17884 <myencoding_decode_euc_kr@@Base+0x54>
   178b4:	andeq	fp, r4, r0, lsl #3

000178b8 <myencoding_decode_iso_8859_8_i@@Base>:
   178b8:	b	16e08 <myencoding_decode_iso_8859_8@@Base>

000178bc <myencoding_get_function_by_id@@Base>:
   178bc:	ldr	r3, [pc, #8]	; 178cc <myencoding_get_function_by_id@@Base+0x10>
   178c0:	add	r3, pc, r3
   178c4:	ldr	r0, [r3, r0, lsl #2]
   178c8:	bx	lr
   178cc:	muleq	pc, ip, r5	; <UNPREDICTABLE>

000178d0 <myencoding_index_gb18030_ranges_code_point@@Base>:
   178d0:	ldr	r3, [pc, #132]	; 1795c <myencoding_index_gb18030_ranges_code_point@@Base+0x8c>
   178d4:	sub	r2, r0, #39168	; 0x9900
   178d8:	sub	r2, r2, #252	; 0xfc
   178dc:	ldr	r1, [pc, #124]	; 17960 <myencoding_index_gb18030_ranges_code_point@@Base+0x90>
   178e0:	cmp	r0, r3
   178e4:	movls	r3, #0
   178e8:	movhi	r3, #1
   178ec:	cmp	r2, r1
   178f0:	orrls	r3, r3, #1
   178f4:	cmp	r3, #0
   178f8:	bne	1794c <myencoding_index_gb18030_ranges_code_point@@Base+0x7c>
   178fc:	movw	r3, #7457	; 0x1d21
   17900:	cmp	r0, r3
   17904:	beq	17954 <myencoding_index_gb18030_ranges_code_point@@Base+0x84>
   17908:	ldr	r2, [pc, #84]	; 17964 <myencoding_index_gb18030_ranges_code_point@@Base+0x94>
   1790c:	mov	r3, #207	; 0xcf
   17910:	add	r2, pc, r2
   17914:	sub	r1, r2, #2544	; 0x9f0
   17918:	sub	r3, r3, #1
   1791c:	ldr	ip, [r1, r3, lsl #3]
   17920:	cmp	r0, ip
   17924:	bcc	1793c <myencoding_index_gb18030_ranges_code_point@@Base+0x6c>
   17928:	add	r2, r2, r3, lsl #3
   1792c:	ldr	r2, [r2, #-2540]	; 0xfffff614
   17930:	add	r0, r0, r2
   17934:	sub	r0, r0, r3
   17938:	bx	lr
   1793c:	cmp	r3, #0
   17940:	bne	17918 <myencoding_index_gb18030_ranges_code_point@@Base+0x48>
   17944:	mov	r2, r3
   17948:	b	17930 <myencoding_index_gb18030_ranges_code_point@@Base+0x60>
   1794c:	mov	r0, #0
   17950:	bx	lr
   17954:	movw	r0, #59335	; 0xe7c7
   17958:	bx	lr
   1795c:	andseq	lr, r2, r7, asr #4
   17960:	andeq	r4, r2, fp, asr #16
   17964:	strdeq	r0, [r2], -r4

00017968 <myencoding_decode_gb18030@@Base>:
   17968:	ldr	r2, [r1, #8]
   1796c:	push	{r4, lr}
   17970:	cmp	r2, #0
   17974:	beq	179d4 <myencoding_decode_gb18030@@Base+0x6c>
   17978:	sub	r3, r0, #48	; 0x30
   1797c:	mov	r4, r1
   17980:	cmp	r3, #9
   17984:	bhi	179b0 <myencoding_decode_gb18030@@Base+0x48>
   17988:	ldm	r4, {r3, ip}
   1798c:	mov	r1, #10
   17990:	mla	r3, r1, r3, ip
   17994:	mov	ip, #126	; 0x7e
   17998:	mla	r3, ip, r3, r2
   1799c:	ldr	r2, [pc, #256]	; 17aa4 <myencoding_decode_gb18030@@Base+0x13c>
   179a0:	add	r2, r0, r2
   179a4:	mla	r0, r1, r3, r2
   179a8:	bl	10ea4 <myencoding_index_gb18030_ranges_code_point@plt>
   179ac:	str	r0, [r4, #12]
   179b0:	mov	r3, #0
   179b4:	str	r3, [r4]
   179b8:	str	r3, [r4, #4]
   179bc:	str	r3, [r4, #8]
   179c0:	ldr	r3, [r4, #12]
   179c4:	clz	r3, r3
   179c8:	lsr	r3, r3, #5
   179cc:	mov	r0, r3
   179d0:	pop	{r4, pc}
   179d4:	ldr	ip, [r1, #4]
   179d8:	cmp	ip, #0
   179dc:	beq	17a04 <myencoding_decode_gb18030@@Base+0x9c>
   179e0:	add	r3, r0, #127	; 0x7f
   179e4:	uxtb	r3, r3
   179e8:	cmp	r3, #125	; 0x7d
   179ec:	strls	r0, [r1, #8]
   179f0:	strhi	r2, [r1]
   179f4:	strhi	r2, [r1, #4]
   179f8:	bhi	17a44 <myencoding_decode_gb18030@@Base+0xdc>
   179fc:	mov	r3, #2
   17a00:	b	179cc <myencoding_decode_gb18030@@Base+0x64>
   17a04:	ldr	r3, [r1]
   17a08:	cmp	r3, #0
   17a0c:	beq	17a78 <myencoding_decode_gb18030@@Base+0x110>
   17a10:	sub	r2, r0, #48	; 0x30
   17a14:	cmp	r2, #9
   17a18:	strls	r0, [r1, #4]
   17a1c:	bls	179fc <myencoding_decode_gb18030@@Base+0x94>
   17a20:	cmp	r0, #127	; 0x7f
   17a24:	sub	r2, r0, #64	; 0x40
   17a28:	str	ip, [r1]
   17a2c:	eor	r4, r0, #128	; 0x80
   17a30:	movcc	lr, #64	; 0x40
   17a34:	movcs	lr, #65	; 0x41
   17a38:	cmp	r4, #126	; 0x7e
   17a3c:	cmphi	r2, #62	; 0x3e
   17a40:	bls	17a4c <myencoding_decode_gb18030@@Base+0xe4>
   17a44:	mov	r3, #1
   17a48:	b	179cc <myencoding_decode_gb18030@@Base+0x64>
   17a4c:	mov	r2, #190	; 0xbe
   17a50:	sub	r0, r0, lr
   17a54:	mla	r3, r2, r3, r0
   17a58:	ldr	r2, [pc, #72]	; 17aa8 <myencoding_decode_gb18030@@Base+0x140>
   17a5c:	sub	r3, r3, #24320	; 0x5f00
   17a60:	sub	r3, r3, #190	; 0xbe
   17a64:	add	r2, pc, r2
   17a68:	ldr	r3, [r2, r3, lsl #2]
   17a6c:	str	r3, [r1, #12]
   17a70:	mov	r3, ip
   17a74:	b	179cc <myencoding_decode_gb18030@@Base+0x64>
   17a78:	tst	r0, #128	; 0x80
   17a7c:	streq	r0, [r1, #12]
   17a80:	beq	179cc <myencoding_decode_gb18030@@Base+0x64>
   17a84:	cmp	r0, #128	; 0x80
   17a88:	movweq	r2, #8364	; 0x20ac
   17a8c:	streq	r2, [r1, #12]
   17a90:	beq	179cc <myencoding_decode_gb18030@@Base+0x64>
   17a94:	cmp	r0, #255	; 0xff
   17a98:	beq	17a44 <myencoding_decode_gb18030@@Base+0xdc>
   17a9c:	str	r0, [r1]
   17aa0:	b	179fc <myencoding_decode_gb18030@@Base+0x94>
   17aa4:			; <UNDEFINED> instruction: 0xffe6414e
   17aa8:	andeq	r3, r3, r8, ror r9

00017aac <myencoding_decode_gbk@@Base>:
   17aac:	b	10b8c <myencoding_decode_gb18030@plt>

00017ab0 <myencoding_decode_shared_utf_16@@Base>:
   17ab0:	ldr	r3, [r1]
   17ab4:	cmp	r3, #0
   17ab8:	streq	r0, [r1]
   17abc:	beq	17b40 <myencoding_decode_shared_utf_16@@Base+0x90>
   17ac0:	ldr	ip, [r1, #20]
   17ac4:	mov	r2, #0
   17ac8:	str	r2, [r1]
   17acc:	cmp	ip, #0
   17ad0:	addne	r3, r0, r3, lsl #8
   17ad4:	addeq	r3, r3, r0, lsl #8
   17ad8:	ldr	r0, [r1, #4]
   17adc:	cmp	r0, r2
   17ae0:	beq	17b30 <myencoding_decode_shared_utf_16@@Base+0x80>
   17ae4:	push	{lr}		; (str lr, [sp, #-4]!)
   17ae8:	sub	lr, r3, #56320	; 0xdc00
   17aec:	cmp	lr, #1024	; 0x400
   17af0:	str	r2, [r1, #4]
   17af4:	bcs	17b10 <myencoding_decode_shared_utf_16@@Base+0x60>
   17af8:	add	r3, r3, r0, lsl #10
   17afc:	mov	r0, r2
   17b00:	sub	r3, r3, #56360960	; 0x35c0000
   17b04:	sub	r3, r3, #252928	; 0x3dc00
   17b08:	str	r3, [r1, #12]
   17b0c:	pop	{pc}		; (ldr pc, [sp], #4)
   17b10:	ubfx	r2, r3, #8, #8
   17b14:	cmp	ip, #0
   17b18:	uxtb	r3, r3
   17b1c:	mov	r0, #5
   17b20:	streq	r3, [r1, #12]
   17b24:	strdne	r2, [r1, #12]
   17b28:	streq	r2, [r1, #16]
   17b2c:	pop	{pc}		; (ldr pc, [sp], #4)
   17b30:	sub	r2, r3, #55296	; 0xd800
   17b34:	cmp	r2, #1024	; 0x400
   17b38:	bcs	17b48 <myencoding_decode_shared_utf_16@@Base+0x98>
   17b3c:	str	r3, [r1, #4]
   17b40:	mov	r0, #2
   17b44:	bx	lr
   17b48:	sub	r2, r3, #56320	; 0xdc00
   17b4c:	cmp	r2, #1024	; 0x400
   17b50:	movcc	r0, #1
   17b54:	strcs	r3, [r1, #12]
   17b58:	bx	lr

00017b5c <myencoding_decode_utf_16be@@Base>:
   17b5c:	ldr	r3, [r1, #20]
   17b60:	cmp	r3, #0
   17b64:	moveq	r3, #1
   17b68:	streq	r3, [r1, #20]
   17b6c:	b	10b68 <myencoding_decode_shared_utf_16@plt>

00017b70 <myencoding_decode_utf_16le@@Base>:
   17b70:	ldr	r3, [r1, #20]
   17b74:	cmp	r3, #0
   17b78:	movne	r3, #0
   17b7c:	strne	r3, [r1, #20]
   17b80:	b	10b68 <myencoding_decode_shared_utf_16@plt>

00017b84 <myencoding_result_clean@@Base>:
   17b84:	mov	r2, #24
   17b88:	mov	r1, #0
   17b8c:	b	10844 <memset@plt>

00017b90 <myencoding_codepoint_ascii_length@@Base>:
   17b90:	cmp	r0, #127	; 0x7f
   17b94:	bls	17bc8 <myencoding_codepoint_ascii_length@@Base+0x38>
   17b98:	cmp	r0, #2048	; 0x800
   17b9c:	bcc	17bd0 <myencoding_codepoint_ascii_length@@Base+0x40>
   17ba0:	cmp	r0, #65536	; 0x10000
   17ba4:	bcc	17bd8 <myencoding_codepoint_ascii_length@@Base+0x48>
   17ba8:	cmp	r0, #2097152	; 0x200000
   17bac:	bcc	17be0 <myencoding_codepoint_ascii_length@@Base+0x50>
   17bb0:	cmn	r0, #-67108863	; 0xfc000001
   17bb4:	bls	17be8 <myencoding_codepoint_ascii_length@@Base+0x58>
   17bb8:	cmp	r0, #0
   17bbc:	movlt	r0, #0
   17bc0:	movge	r0, #6
   17bc4:	bx	lr
   17bc8:	mov	r0, #1
   17bcc:	bx	lr
   17bd0:	mov	r0, #2
   17bd4:	bx	lr
   17bd8:	mov	r0, #3
   17bdc:	bx	lr
   17be0:	mov	r0, #4
   17be4:	bx	lr
   17be8:	mov	r0, #5
   17bec:	bx	lr

00017bf0 <myencoding_ascii_utf_8_length@@Base>:
   17bf0:	tst	r0, #128	; 0x80
   17bf4:	beq	17c38 <myencoding_ascii_utf_8_length@@Base+0x48>
   17bf8:	and	r3, r0, #224	; 0xe0
   17bfc:	cmp	r3, #192	; 0xc0
   17c00:	beq	17c40 <myencoding_ascii_utf_8_length@@Base+0x50>
   17c04:	and	r3, r0, #240	; 0xf0
   17c08:	cmp	r3, #224	; 0xe0
   17c0c:	beq	17c48 <myencoding_ascii_utf_8_length@@Base+0x58>
   17c10:	and	r3, r0, #248	; 0xf8
   17c14:	cmp	r3, #240	; 0xf0
   17c18:	beq	17c50 <myencoding_ascii_utf_8_length@@Base+0x60>
   17c1c:	and	r3, r0, #252	; 0xfc
   17c20:	cmp	r3, #248	; 0xf8
   17c24:	beq	17c58 <myencoding_ascii_utf_8_length@@Base+0x68>
   17c28:	cmp	r0, #252	; 0xfc
   17c2c:	movne	r0, #0
   17c30:	moveq	r0, #6
   17c34:	bx	lr
   17c38:	mov	r0, #1
   17c3c:	bx	lr
   17c40:	mov	r0, #2
   17c44:	bx	lr
   17c48:	mov	r0, #3
   17c4c:	bx	lr
   17c50:	mov	r0, #4
   17c54:	bx	lr
   17c58:	mov	r0, #5
   17c5c:	bx	lr

00017c60 <myencoding_codepoint_to_ascii_utf_8@@Base>:
   17c60:	cmp	r0, #127	; 0x7f
   17c64:	bhi	17c74 <myencoding_codepoint_to_ascii_utf_8@@Base+0x14>
   17c68:	strb	r0, [r1]
   17c6c:	mov	r0, #1
   17c70:	bx	lr
   17c74:	cmp	r0, #2048	; 0x800
   17c78:	bcs	17ca0 <myencoding_codepoint_to_ascii_utf_8@@Base+0x40>
   17c7c:	mvn	r3, #63	; 0x3f
   17c80:	orr	r3, r3, r0, lsr #6
   17c84:	and	r0, r0, #63	; 0x3f
   17c88:	mvn	r0, r0, lsl #25
   17c8c:	mvn	r0, r0, lsr #25
   17c90:	strb	r3, [r1]
   17c94:	strb	r0, [r1, #1]
   17c98:	mov	r0, #2
   17c9c:	bx	lr
   17ca0:	cmp	r0, #65536	; 0x10000
   17ca4:	bcs	17cd8 <myencoding_codepoint_to_ascii_utf_8@@Base+0x78>
   17ca8:	mvn	r3, #31
   17cac:	ubfx	r2, r0, #6, #6
   17cb0:	orr	r3, r3, r0, lsr #12
   17cb4:	and	r0, r0, #63	; 0x3f
   17cb8:	strb	r3, [r1]
   17cbc:	mvn	r3, #127	; 0x7f
   17cc0:	orr	r2, r3, r2
   17cc4:	orr	r3, r3, r0
   17cc8:	mov	r0, #3
   17ccc:	strb	r2, [r1, #1]
   17cd0:	strb	r3, [r1, #2]
   17cd4:	bx	lr
   17cd8:	cmp	r0, #2097152	; 0x200000
   17cdc:	bcs	17d1c <myencoding_codepoint_to_ascii_utf_8@@Base+0xbc>
   17ce0:	mvn	r3, #15
   17ce4:	ubfx	r2, r0, #12, #6
   17ce8:	orr	r3, r3, r0, lsr #18
   17cec:	strb	r3, [r1]
   17cf0:	mvn	r3, #127	; 0x7f
   17cf4:	orr	r2, r3, r2
   17cf8:	strb	r2, [r1, #1]
   17cfc:	ubfx	r2, r0, #6, #6
   17d00:	and	r0, r0, #63	; 0x3f
   17d04:	orr	r0, r3, r0
   17d08:	orr	r2, r3, r2
   17d0c:	strb	r2, [r1, #2]
   17d10:	strb	r0, [r1, #3]
   17d14:	mov	r0, #4
   17d18:	bx	lr
   17d1c:	mov	r0, #0
   17d20:	bx	lr

00017d24 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base>:
   17d24:	cmp	r0, #127	; 0x7f
   17d28:	bhi	17d48 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x24>
   17d2c:	ldr	r3, [pc, #196]	; 17df8 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xd4>
   17d30:	add	r3, pc, r3
   17d34:	add	r0, r3, r0
   17d38:	ldrb	r3, [r0, #-888]	; 0xfffffc88
   17d3c:	mov	r0, #1
   17d40:	strb	r3, [r1]
   17d44:	bx	lr
   17d48:	cmp	r0, #2048	; 0x800
   17d4c:	bcs	17d74 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x50>
   17d50:	mvn	r3, #63	; 0x3f
   17d54:	orr	r3, r3, r0, lsr #6
   17d58:	and	r0, r0, #63	; 0x3f
   17d5c:	mvn	r0, r0, lsl #25
   17d60:	mvn	r0, r0, lsr #25
   17d64:	strb	r3, [r1]
   17d68:	strb	r0, [r1, #1]
   17d6c:	mov	r0, #2
   17d70:	bx	lr
   17d74:	cmp	r0, #65536	; 0x10000
   17d78:	bcs	17dac <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x88>
   17d7c:	mvn	r3, #31
   17d80:	ubfx	r2, r0, #6, #6
   17d84:	orr	r3, r3, r0, lsr #12
   17d88:	and	r0, r0, #63	; 0x3f
   17d8c:	strb	r3, [r1]
   17d90:	mvn	r3, #127	; 0x7f
   17d94:	orr	r2, r3, r2
   17d98:	orr	r3, r3, r0
   17d9c:	mov	r0, #3
   17da0:	strb	r2, [r1, #1]
   17da4:	strb	r3, [r1, #2]
   17da8:	bx	lr
   17dac:	cmp	r0, #2097152	; 0x200000
   17db0:	bcs	17df0 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xcc>
   17db4:	mvn	r3, #15
   17db8:	ubfx	r2, r0, #12, #6
   17dbc:	orr	r3, r3, r0, lsr #18
   17dc0:	strb	r3, [r1]
   17dc4:	mvn	r3, #127	; 0x7f
   17dc8:	orr	r2, r3, r2
   17dcc:	strb	r2, [r1, #1]
   17dd0:	ubfx	r2, r0, #6, #6
   17dd4:	and	r0, r0, #63	; 0x3f
   17dd8:	orr	r0, r3, r0
   17ddc:	orr	r2, r3, r2
   17de0:	strb	r2, [r1, #2]
   17de4:	strb	r0, [r1, #3]
   17de8:	mov	r0, #4
   17dec:	bx	lr
   17df0:	mov	r0, #0
   17df4:	bx	lr
   17df8:	ldrdeq	pc, [r1], -r4

00017dfc <myencoding_ascii_utf_8_to_codepoint@@Base>:
   17dfc:	ldrb	r3, [r0]
   17e00:	tst	r3, #128	; 0x80
   17e04:	bne	17e14 <myencoding_ascii_utf_8_to_codepoint@@Base+0x18>
   17e08:	mov	r0, #1
   17e0c:	str	r3, [r1]
   17e10:	bx	lr
   17e14:	and	r2, r3, #224	; 0xe0
   17e18:	cmp	r2, #192	; 0xc0
   17e1c:	bne	17e44 <myencoding_ascii_utf_8_to_codepoint@@Base+0x48>
   17e20:	lsl	r3, r3, #6
   17e24:	and	r3, r3, #4032	; 0xfc0
   17e28:	str	r3, [r1]
   17e2c:	ldrb	r2, [r0, #1]
   17e30:	mov	r0, #2
   17e34:	and	r2, r2, #127	; 0x7f
   17e38:	orr	r3, r2, r3
   17e3c:	str	r3, [r1]
   17e40:	bx	lr
   17e44:	and	r2, r3, #240	; 0xf0
   17e48:	cmp	r2, #224	; 0xe0
   17e4c:	bne	17e88 <myencoding_ascii_utf_8_to_codepoint@@Base+0x8c>
   17e50:	lsl	r3, r3, #12
   17e54:	and	r3, r3, #126976	; 0x1f000
   17e58:	str	r3, [r1]
   17e5c:	ldrb	r2, [r0, #1]
   17e60:	lsl	r2, r2, #6
   17e64:	and	r2, r2, #8128	; 0x1fc0
   17e68:	orr	r3, r2, r3
   17e6c:	str	r3, [r1]
   17e70:	ldrb	r2, [r0, #2]
   17e74:	mov	r0, #3
   17e78:	and	r2, r2, #127	; 0x7f
   17e7c:	orr	r3, r2, r3
   17e80:	str	r3, [r1]
   17e84:	bx	lr
   17e88:	and	r2, r3, #248	; 0xf8
   17e8c:	cmp	r2, #240	; 0xf0
   17e90:	bne	17ee0 <myencoding_ascii_utf_8_to_codepoint@@Base+0xe4>
   17e94:	lsl	r3, r3, #18
   17e98:	and	r3, r3, #3932160	; 0x3c0000
   17e9c:	str	r3, [r1]
   17ea0:	ldrb	r2, [r0, #1]
   17ea4:	lsl	r2, r2, #12
   17ea8:	and	r2, r2, #520192	; 0x7f000
   17eac:	orr	r2, r2, r3
   17eb0:	str	r2, [r1]
   17eb4:	ldrb	r3, [r0, #2]
   17eb8:	lsl	r3, r3, #6
   17ebc:	and	r3, r3, #8128	; 0x1fc0
   17ec0:	orr	r3, r3, r2
   17ec4:	str	r3, [r1]
   17ec8:	ldrb	r2, [r0, #3]
   17ecc:	mov	r0, #4
   17ed0:	and	r2, r2, #127	; 0x7f
   17ed4:	orr	r3, r2, r3
   17ed8:	str	r3, [r1]
   17edc:	bx	lr
   17ee0:	mov	r0, #0
   17ee4:	bx	lr

00017ee8 <myencoding_codepoint_to_ascii_utf_16@@Base>:
   17ee8:	lsrs	r3, r0, #16
   17eec:	beq	17f24 <myencoding_codepoint_to_ascii_utf_16@@Base+0x3c>
   17ef0:	sub	r0, r0, #65536	; 0x10000
   17ef4:	lsr	r3, r0, #10
   17ef8:	ubfx	r0, r0, #0, #10
   17efc:	orr	r3, r3, #55296	; 0xd800
   17f00:	orr	r0, r0, #56320	; 0xdc00
   17f04:	lsr	r2, r3, #8
   17f08:	strb	r3, [r1, #1]
   17f0c:	lsr	r3, r0, #8
   17f10:	strb	r2, [r1]
   17f14:	strb	r0, [r1, #3]
   17f18:	mov	r0, #4
   17f1c:	strb	r3, [r1, #2]
   17f20:	bx	lr
   17f24:	lsr	r3, r0, #8
   17f28:	strb	r3, [r1]
   17f2c:	strb	r0, [r1, #1]
   17f30:	mov	r0, #2
   17f34:	bx	lr

00017f38 <myencoding_convert_to_ascii_utf_8@@Base>:
   17f38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17f3c:	mov	r6, r3
   17f40:	sub	sp, sp, #28
   17f44:	mov	r4, r0
   17f48:	mov	fp, r1
   17f4c:	mov	r5, r2
   17f50:	ldr	r3, [r0]
   17f54:	cmp	r3, #0
   17f58:	beq	17ff8 <myencoding_convert_to_ascii_utf_8@@Base+0xc0>
   17f5c:	mov	r9, sp
   17f60:	mov	r2, #24
   17f64:	lsr	r8, r5, #1
   17f68:	mov	r1, #0
   17f6c:	mov	r0, r9
   17f70:	bl	10844 <memset@plt>
   17f74:	mov	r0, r6
   17f78:	add	r8, r8, #6
   17f7c:	bl	107c0 <myencoding_get_function_by_id@plt>
   17f80:	mov	sl, r0
   17f84:	mov	r7, #0
   17f88:	cmp	r7, r5
   17f8c:	beq	18014 <myencoding_convert_to_ascii_utf_8@@Base+0xdc>
   17f90:	mov	r1, r9
   17f94:	ldrb	r0, [fp, r7]
   17f98:	blx	sl
   17f9c:	cmp	r0, #0
   17fa0:	bne	17ff0 <myencoding_convert_to_ascii_utf_8@@Base+0xb8>
   17fa4:	ldmib	r4, {r3, r6}
   17fa8:	add	r2, r6, #6
   17fac:	cmp	r2, r3
   17fb0:	bcc	17fd0 <myencoding_convert_to_ascii_utf_8@@Base+0x98>
   17fb4:	add	r6, r6, r8
   17fb8:	ldr	r0, [r4]
   17fbc:	mov	r1, r6
   17fc0:	bl	fb84 <mycore_realloc@plt>
   17fc4:	cmp	r0, #0
   17fc8:	beq	18010 <myencoding_convert_to_ascii_utf_8@@Base+0xd8>
   17fcc:	stm	r4, {r0, r6}
   17fd0:	ldr	r1, [r4]
   17fd4:	ldr	r3, [r4, #8]
   17fd8:	ldr	r0, [sp, #12]
   17fdc:	add	r1, r1, r3
   17fe0:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   17fe4:	ldr	r3, [r4, #8]
   17fe8:	add	r0, r3, r0
   17fec:	str	r0, [r4, #8]
   17ff0:	add	r7, r7, #1
   17ff4:	b	17f88 <myencoding_convert_to_ascii_utf_8@@Base+0x50>
   17ff8:	add	r0, r2, #1
   17ffc:	stmib	r4, {r0, r3}
   18000:	bl	10c28 <mycore_malloc@plt>
   18004:	cmp	r0, #0
   18008:	str	r0, [r4]
   1800c:	bne	17f5c <myencoding_convert_to_ascii_utf_8@@Base+0x24>
   18010:	mov	r5, #0
   18014:	mov	r0, r5
   18018:	add	sp, sp, #28
   1801c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00018020 <myencoding_string_append_chunk@@Base>:
   18020:	push	{r4, r5, r6, r7, r8, lr}
   18024:	mov	r4, r0
   18028:	mov	r7, r1
   1802c:	mov	r5, r2
   18030:	add	r6, r2, r3
   18034:	ldr	r0, [sp, #24]
   18038:	bl	107c0 <myencoding_get_function_by_id@plt>
   1803c:	mov	r8, r0
   18040:	cmp	r6, r5
   18044:	bne	18078 <myencoding_string_append_chunk@@Base+0x58>
   18048:	ldr	r3, [r4, #4]
   1804c:	ldr	r1, [r4, #8]
   18050:	cmp	r1, r3
   18054:	bcc	18064 <myencoding_string_append_chunk@@Base+0x44>
   18058:	add	r1, r1, #1
   1805c:	mov	r0, r4
   18060:	bl	108f8 <mycore_string_realloc@plt>
   18064:	ldr	r2, [r4]
   18068:	mov	r1, #0
   1806c:	ldr	r3, [r4, #8]
   18070:	strb	r1, [r2, r3]
   18074:	pop	{r4, r5, r6, r7, r8, pc}
   18078:	mov	r1, r7
   1807c:	ldrb	r0, [r5], #1
   18080:	blx	r8
   18084:	cmp	r0, #0
   18088:	bne	18040 <myencoding_string_append_chunk@@Base+0x20>
   1808c:	ldr	r3, [r4, #4]
   18090:	ldr	r1, [r4, #8]
   18094:	add	r1, r1, #5
   18098:	cmp	r1, r3
   1809c:	bcc	180a8 <myencoding_string_append_chunk@@Base+0x88>
   180a0:	mov	r0, r4
   180a4:	bl	108f8 <mycore_string_realloc@plt>
   180a8:	ldr	r1, [r4]
   180ac:	ldr	r3, [r4, #8]
   180b0:	ldr	r0, [r7, #12]
   180b4:	add	r1, r1, r3
   180b8:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   180bc:	ldr	r3, [r4, #8]
   180c0:	add	r0, r3, r0
   180c4:	str	r0, [r4, #8]
   180c8:	b	18040 <myencoding_string_append_chunk@@Base+0x20>

000180cc <myencoding_string_append@@Base>:
   180cc:	push	{r4, r5, r6, r7, r8, lr}
   180d0:	sub	sp, sp, #32
   180d4:	mov	r8, r3
   180d8:	add	r4, sp, #8
   180dc:	mov	r6, r1
   180e0:	mov	r7, r2
   180e4:	mov	r5, r0
   180e8:	mov	r0, r4
   180ec:	bl	10160 <myencoding_result_clean@plt>
   180f0:	mov	r3, r7
   180f4:	mov	r2, r6
   180f8:	str	r8, [sp]
   180fc:	mov	r1, r4
   18100:	mov	r0, r5
   18104:	bl	fbc0 <myencoding_string_append_chunk@plt>
   18108:	add	sp, sp, #32
   1810c:	pop	{r4, r5, r6, r7, r8, pc}

00018110 <myencoding_string_append_one@@Base>:
   18110:	push	{r4, r5, r6, lr}
   18114:	mov	r4, r0
   18118:	mov	r0, r3
   1811c:	mov	r6, r2
   18120:	mov	r5, r1
   18124:	bl	107c0 <myencoding_get_function_by_id@plt>
   18128:	mov	r3, r0
   1812c:	mov	r1, r5
   18130:	mov	r0, r6
   18134:	blx	r3
   18138:	cmp	r0, #0
   1813c:	popne	{r4, r5, r6, pc}
   18140:	ldr	r3, [r4, #4]
   18144:	ldr	r1, [r4, #8]
   18148:	add	r1, r1, #5
   1814c:	cmp	r1, r3
   18150:	bcc	1815c <myencoding_string_append_one@@Base+0x4c>
   18154:	mov	r0, r4
   18158:	bl	108f8 <mycore_string_realloc@plt>
   1815c:	ldr	r1, [r4]
   18160:	ldr	r3, [r4, #8]
   18164:	ldr	r0, [r5, #12]
   18168:	add	r1, r1, r3
   1816c:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   18170:	ldr	r3, [r4, #8]
   18174:	mov	r2, #0
   18178:	add	r0, r0, r3
   1817c:	ldr	r3, [r4]
   18180:	str	r0, [r4, #8]
   18184:	strb	r2, [r3, r0]
   18188:	pop	{r4, r5, r6, pc}

0001818c <myencoding_string_append_chunk_lowercase_ascii@@Base>:
   1818c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18190:	mov	r4, r0
   18194:	mov	r7, r1
   18198:	mov	r5, r2
   1819c:	add	r6, r2, r3
   181a0:	ldr	r9, [pc, #184]	; 18260 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xd4>
   181a4:	ldr	r0, [sp, #32]
   181a8:	bl	107c0 <myencoding_get_function_by_id@plt>
   181ac:	mov	r8, r0
   181b0:	add	r9, pc, r9
   181b4:	cmp	r6, r5
   181b8:	bne	181ec <myencoding_string_append_chunk_lowercase_ascii@@Base+0x60>
   181bc:	ldr	r3, [r4, #4]
   181c0:	ldr	r1, [r4, #8]
   181c4:	cmp	r1, r3
   181c8:	bcc	181d8 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x4c>
   181cc:	add	r1, r1, #1
   181d0:	mov	r0, r4
   181d4:	bl	108f8 <mycore_string_realloc@plt>
   181d8:	ldr	r2, [r4]
   181dc:	mov	r1, #0
   181e0:	ldr	r3, [r4, #8]
   181e4:	strb	r1, [r2, r3]
   181e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   181ec:	mov	r1, r7
   181f0:	ldrb	r0, [r5], #1
   181f4:	blx	r8
   181f8:	cmp	r0, #0
   181fc:	bne	181b4 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x28>
   18200:	ldr	r3, [r4, #4]
   18204:	ldr	r1, [r4, #8]
   18208:	add	r2, r1, #5
   1820c:	cmp	r2, r3
   18210:	bcc	18220 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x94>
   18214:	add	r1, r1, #6
   18218:	mov	r0, r4
   1821c:	bl	108f8 <mycore_string_realloc@plt>
   18220:	ldr	r1, [r4]
   18224:	ldr	r3, [r4, #8]
   18228:	ldr	r0, [r7, #12]
   1822c:	add	r1, r1, r3
   18230:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   18234:	cmp	r0, #1
   18238:	bne	18250 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xc4>
   1823c:	ldrb	r1, [r5, #-1]
   18240:	ldr	r2, [r4]
   18244:	ldr	r3, [r4, #8]
   18248:	ldrb	r1, [r9, r1]
   1824c:	strb	r1, [r2, r3]
   18250:	ldr	r3, [r4, #8]
   18254:	add	r3, r3, r0
   18258:	str	r3, [r4, #8]
   1825c:	b	181b4 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x28>
   18260:	andeq	r5, r7, r4, ror #6

00018264 <myencoding_string_append_lowercase_ascii@@Base>:
   18264:	push	{r4, r5, r6, r7, r8, lr}
   18268:	sub	sp, sp, #32
   1826c:	mov	r8, r3
   18270:	add	r4, sp, #8
   18274:	mov	r6, r1
   18278:	mov	r7, r2
   1827c:	mov	r5, r0
   18280:	mov	r0, r4
   18284:	bl	10160 <myencoding_result_clean@plt>
   18288:	mov	r3, r7
   1828c:	mov	r2, r6
   18290:	str	r8, [sp]
   18294:	mov	r1, r4
   18298:	mov	r0, r5
   1829c:	bl	10c1c <myencoding_string_append_chunk_lowercase_ascii@plt>
   182a0:	add	sp, sp, #32
   182a4:	pop	{r4, r5, r6, r7, r8, pc}

000182a8 <myhtml_callback_before_token_done@@Base>:
   182a8:	ldr	r0, [r0, #220]	; 0xdc
   182ac:	bx	lr

000182b0 <myhtml_callback_after_token_done@@Base>:
   182b0:	ldr	r0, [r0, #224]	; 0xe0
   182b4:	bx	lr

000182b8 <myhtml_callback_before_token_done_set@@Base>:
   182b8:	str	r1, [r0, #220]	; 0xdc
   182bc:	str	r2, [r0, #228]	; 0xe4
   182c0:	bx	lr

000182c4 <myhtml_callback_after_token_done_set@@Base>:
   182c4:	str	r1, [r0, #224]	; 0xe0
   182c8:	str	r2, [r0, #232]	; 0xe8
   182cc:	bx	lr

000182d0 <myhtml_callback_tree_node_insert@@Base>:
   182d0:	ldr	r0, [r0, #236]	; 0xec
   182d4:	bx	lr

000182d8 <myhtml_callback_tree_node_remove@@Base>:
   182d8:	ldr	r0, [r0, #240]	; 0xf0
   182dc:	bx	lr

000182e0 <myhtml_callback_tree_node_insert_set@@Base>:
   182e0:	str	r1, [r0, #236]	; 0xec
   182e4:	str	r2, [r0, #244]	; 0xf4
   182e8:	bx	lr

000182ec <myhtml_callback_tree_node_remove_set@@Base>:
   182ec:	str	r1, [r0, #240]	; 0xf0
   182f0:	str	r2, [r0, #248]	; 0xf8
   182f4:	bx	lr

000182f8 <myhtml_charef_find@@Base>:
   182f8:	push	{r4, r5, r6, r7, r8, lr}
   182fc:	mov	r7, #24
   18300:	ldr	r5, [pc, #164]	; 183ac <myhtml_charef_find@@Base+0xb4>
   18304:	ldrb	ip, [r0]
   18308:	add	r5, pc, r5
   1830c:	mul	lr, r7, ip
   18310:	ldrb	r4, [r5, lr]
   18314:	add	r6, r5, lr
   18318:	cmp	r4, #0
   1831c:	beq	1836c <myhtml_charef_find@@Base+0x74>
   18320:	ldr	lr, [r1]
   18324:	ldrb	r8, [r0, lr]
   18328:	cmp	r8, r4
   1832c:	bne	18368 <myhtml_charef_find@@Base+0x70>
   18330:	ldr	r4, [r6, #4]
   18334:	add	lr, lr, #1
   18338:	str	lr, [r1]
   1833c:	cmp	r4, #0
   18340:	cmpne	lr, r2
   18344:	bcc	18388 <myhtml_charef_find@@Base+0x90>
   18348:	cmp	r3, #0
   1834c:	ldr	r0, [pc, #92]	; 183b0 <myhtml_charef_find@@Base+0xb8>
   18350:	ldrne	r2, [r6, #20]
   18354:	add	r0, pc, r0
   18358:	strne	r2, [r3]
   1835c:	mov	r3, #24
   18360:	mla	r0, r3, ip, r0
   18364:	pop	{r4, r5, r6, r7, r8, pc}
   18368:	bhi	18384 <myhtml_charef_find@@Base+0x8c>
   1836c:	cmp	r3, #0
   18370:	bne	18390 <myhtml_charef_find@@Base+0x98>
   18374:	ldr	r0, [pc, #56]	; 183b4 <myhtml_charef_find@@Base+0xbc>
   18378:	mov	r3, #24
   1837c:	add	r0, pc, r0
   18380:	b	18360 <myhtml_charef_find@@Base+0x68>
   18384:	add	r4, ip, #1
   18388:	mov	ip, r4
   1838c:	b	1830c <myhtml_charef_find@@Base+0x14>
   18390:	ldr	r2, [pc, #32]	; 183b8 <myhtml_charef_find@@Base+0xc0>
   18394:	mov	r1, #24
   18398:	add	r2, pc, r2
   1839c:	mla	r2, r1, ip, r2
   183a0:	ldr	r2, [r2, #20]
   183a4:	str	r2, [r3]
   183a8:	b	18374 <myhtml_charef_find@@Base+0x7c>
   183ac:	andeq	r5, r7, ip, lsl #6
   183b0:	andeq	r5, r7, r0, asr #5
   183b4:	muleq	r7, r8, r2
   183b8:	andeq	r5, r7, ip, ror r2

000183bc <myhtml_charef_get_first_position@@Base>:
   183bc:	ldr	r3, [pc, #12]	; 183d0 <myhtml_charef_get_first_position@@Base+0x14>
   183c0:	add	r0, r0, r0, lsl #1
   183c4:	add	r3, pc, r3
   183c8:	add	r0, r3, r0, lsl #3
   183cc:	bx	lr
   183d0:	andeq	r5, r7, r0, asr r2

000183d4 <myhtml_charef_find_by_pos@@Base>:
   183d4:	push	{r4, r5, r6, r7, r8, lr}
   183d8:	mov	r4, r0
   183dc:	ldr	r0, [r2]
   183e0:	ldr	ip, [sp, #24]
   183e4:	ldrb	r0, [r1, r0]
   183e8:	cmp	r0, #38	; 0x26
   183ec:	bne	18420 <myhtml_charef_find_by_pos@@Base+0x4c>
   183f0:	ldr	r0, [ip]
   183f4:	mov	r3, #1
   183f8:	str	r3, [ip, #12]
   183fc:	ldr	r3, [r0, #20]
   18400:	cmp	r3, #0
   18404:	popne	{r4, r5, r6, r7, r8, pc}
   18408:	ldr	r0, [ip, #4]
   1840c:	cmp	r0, #0
   18410:	bne	184f4 <myhtml_charef_find_by_pos@@Base+0x120>
   18414:	ldr	r0, [pc, #228]	; 18500 <myhtml_charef_find_by_pos@@Base+0x12c>
   18418:	add	r0, pc, r0
   1841c:	pop	{r4, r5, r6, r7, r8, pc}
   18420:	ldr	r6, [pc, #220]	; 18504 <myhtml_charef_find_by_pos@@Base+0x130>
   18424:	mov	r0, #0
   18428:	mov	r7, #24
   1842c:	str	r0, [ip, #12]
   18430:	add	r6, pc, r6
   18434:	mul	lr, r7, r4
   18438:	ldrb	r5, [r6, lr]
   1843c:	add	r0, r6, lr
   18440:	cmp	r5, #0
   18444:	bne	18454 <myhtml_charef_find_by_pos@@Base+0x80>
   18448:	mov	r3, #1
   1844c:	str	r3, [ip, #12]
   18450:	b	18408 <myhtml_charef_find_by_pos@@Base+0x34>
   18454:	ldr	lr, [r2]
   18458:	ldrb	r8, [r1, lr]
   1845c:	cmp	r8, r5
   18460:	bne	184e8 <myhtml_charef_find_by_pos@@Base+0x114>
   18464:	cmp	r8, #59	; 0x3b
   18468:	bne	1847c <myhtml_charef_find_by_pos@@Base+0xa8>
   1846c:	mov	r3, #1
   18470:	str	r0, [ip]
   18474:	str	r3, [ip, #12]
   18478:	pop	{r4, r5, r6, r7, r8, pc}
   1847c:	ldr	r4, [r0, #4]
   18480:	add	lr, lr, #1
   18484:	str	lr, [r2]
   18488:	cmp	r4, #0
   1848c:	bne	1849c <myhtml_charef_find_by_pos@@Base+0xc8>
   18490:	mov	r3, #1
   18494:	str	r3, [ip, #12]
   18498:	pop	{r4, r5, r6, r7, r8, pc}
   1849c:	cmp	lr, r3
   184a0:	ldr	r5, [r0, #20]
   184a4:	bcc	184b8 <myhtml_charef_find_by_pos@@Base+0xe4>
   184a8:	cmp	r5, #0
   184ac:	str	r0, [ip]
   184b0:	stmibne	ip, {r0, lr}
   184b4:	pop	{r4, r5, r6, r7, r8, pc}
   184b8:	ldrb	r8, [r1, lr]
   184bc:	cmp	r8, #38	; 0x26
   184c0:	bne	184dc <myhtml_charef_find_by_pos@@Base+0x108>
   184c4:	mov	r3, #1
   184c8:	cmp	r5, #0
   184cc:	str	r0, [ip]
   184d0:	str	r3, [ip, #12]
   184d4:	beq	18408 <myhtml_charef_find_by_pos@@Base+0x34>
   184d8:	pop	{r4, r5, r6, r7, r8, pc}
   184dc:	cmp	r5, #0
   184e0:	stmibne	ip, {r0, lr}
   184e4:	b	18434 <myhtml_charef_find_by_pos@@Base+0x60>
   184e8:	bls	18448 <myhtml_charef_find_by_pos@@Base+0x74>
   184ec:	add	r4, r4, #1
   184f0:	b	18434 <myhtml_charef_find_by_pos@@Base+0x60>
   184f4:	ldr	r3, [ip, #8]
   184f8:	str	r3, [r2]
   184fc:	pop	{r4, r5, r6, r7, r8, pc}
   18500:	strdeq	r5, [r7], -ip
   18504:	andeq	r5, r7, r4, ror #3

00018508 <myhtml_data_process_state_ampersand_data@@Base>:
   18508:	push	{r4, r5, r6, r7, r8, r9, lr}
   1850c:	sub	sp, sp, #20
   18510:	mov	r5, r3
   18514:	mov	r4, r0
   18518:	mov	r6, r2
   1851c:	mov	r7, r1
   18520:	add	r2, sp, #12
   18524:	str	r3, [sp, #12]
   18528:	mov	r3, r0
   1852c:	mov	r1, r6
   18530:	ldr	r0, [r3, #44]!	; 0x2c
   18534:	ldr	r9, [pc, #464]	; 1870c <myhtml_data_process_state_ampersand_data@@Base+0x204>
   18538:	str	r3, [sp]
   1853c:	ldr	r0, [r0, #4]
   18540:	add	r9, pc, r9
   18544:	ldr	r3, [sp, #48]	; 0x30
   18548:	bl	10754 <myhtml_charef_find_by_pos@plt>
   1854c:	ldr	r3, [r4, #56]	; 0x38
   18550:	ldr	r2, [sp, #12]
   18554:	cmp	r3, #0
   18558:	beq	185a8 <myhtml_data_process_state_ampersand_data@@Base+0xa0>
   1855c:	ldr	r3, [pc, #428]	; 18710 <myhtml_data_process_state_ampersand_data@@Base+0x208>
   18560:	mov	r8, r0
   18564:	ldr	r3, [r9, r3]
   18568:	str	r3, [r4]
   1856c:	ldrb	r3, [r6, r2]
   18570:	cmp	r3, #59	; 0x3b
   18574:	addeq	r2, r2, #1
   18578:	streq	r2, [sp, #12]
   1857c:	beq	185f4 <myhtml_data_process_state_ampersand_data@@Base+0xec>
   18580:	ldrb	r1, [r4, #60]	; 0x3c
   18584:	cmp	r1, #0
   18588:	beq	185f4 <myhtml_data_process_state_ampersand_data@@Base+0xec>
   1858c:	cmp	r3, #61	; 0x3d
   18590:	beq	185a8 <myhtml_data_process_state_ampersand_data@@Base+0xa0>
   18594:	ldr	r1, [pc, #376]	; 18714 <myhtml_data_process_state_ampersand_data@@Base+0x20c>
   18598:	add	r1, pc, r1
   1859c:	ldr	r3, [r1, r3, lsl #2]
   185a0:	cmp	r3, #255	; 0xff
   185a4:	beq	185f4 <myhtml_data_process_state_ampersand_data@@Base+0xec>
   185a8:	sub	r2, r2, r5
   185ac:	add	r1, r6, r5
   185b0:	ldr	r3, [r4, #32]
   185b4:	mov	r0, r7
   185b8:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   185bc:	ldr	r2, [sp, #12]
   185c0:	add	r0, r5, r0
   185c4:	cmp	r2, r0
   185c8:	beq	186c0 <myhtml_data_process_state_ampersand_data@@Base+0x1b8>
   185cc:	ldr	ip, [r4, #4]
   185d0:	add	r1, r6, r0
   185d4:	sub	r2, r2, r0
   185d8:	ldrb	r3, [r4, #61]	; 0x3d
   185dc:	cmp	ip, #0
   185e0:	bne	186ec <myhtml_data_process_state_ampersand_data@@Base+0x1e4>
   185e4:	mov	r0, r7
   185e8:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   185ec:	str	r0, [r4, #32]
   185f0:	b	186c0 <myhtml_data_process_state_ampersand_data@@Base+0x1b8>
   185f4:	ldr	r3, [r8, #20]
   185f8:	cmp	r3, #0
   185fc:	addne	r6, r8, #12
   18600:	movne	r5, #0
   18604:	bne	18698 <myhtml_data_process_state_ampersand_data@@Base+0x190>
   18608:	ldr	r2, [sp, #12]
   1860c:	add	r1, r6, r5
   18610:	mov	r0, r7
   18614:	ldr	r3, [r4, #32]
   18618:	sub	r2, r2, r5
   1861c:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   18620:	ldr	r2, [sp, #12]
   18624:	add	r0, r5, r0
   18628:	cmp	r2, r0
   1862c:	beq	186b8 <myhtml_data_process_state_ampersand_data@@Base+0x1b0>
   18630:	ldr	ip, [r4, #4]
   18634:	add	r1, r6, r0
   18638:	sub	r2, r2, r0
   1863c:	ldrb	r3, [r4, #61]	; 0x3d
   18640:	cmp	ip, #0
   18644:	bne	186cc <myhtml_data_process_state_ampersand_data@@Base+0x1c4>
   18648:	mov	r0, r7
   1864c:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   18650:	str	r0, [r4, #32]
   18654:	b	186b8 <myhtml_data_process_state_ampersand_data@@Base+0x1b0>
   18658:	ldr	r3, [r7, #4]
   1865c:	ldr	r1, [r7, #8]
   18660:	add	r1, r1, #5
   18664:	cmp	r1, r3
   18668:	bcc	18674 <myhtml_data_process_state_ampersand_data@@Base+0x16c>
   1866c:	mov	r0, r7
   18670:	bl	108f8 <mycore_string_realloc@plt>
   18674:	ldr	r1, [r7]
   18678:	add	r5, r5, #1
   1867c:	ldr	r3, [r4, #36]	; 0x24
   18680:	ldr	r0, [r6], #4
   18684:	add	r1, r1, r3
   18688:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1868c:	ldr	r3, [r4, #36]	; 0x24
   18690:	add	r0, r3, r0
   18694:	str	r0, [r4, #36]	; 0x24
   18698:	ldr	r3, [r8, #20]
   1869c:	cmp	r3, r5
   186a0:	bhi	18658 <myhtml_data_process_state_ampersand_data@@Base+0x150>
   186a4:	ldr	r2, [r7]
   186a8:	mov	r1, #0
   186ac:	ldr	r3, [r4, #36]	; 0x24
   186b0:	str	r3, [r7, #8]
   186b4:	strb	r1, [r2, r3]
   186b8:	mov	r3, #0
   186bc:	str	r3, [r4, #48]	; 0x30
   186c0:	ldr	r0, [sp, #12]
   186c4:	add	sp, sp, #20
   186c8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   186cc:	mov	r0, r7
   186d0:	str	ip, [sp]
   186d4:	str	r3, [sp, #4]
   186d8:	mov	r3, r2
   186dc:	mov	r2, r1
   186e0:	add	r1, r4, #8
   186e4:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   186e8:	b	18650 <myhtml_data_process_state_ampersand_data@@Base+0x148>
   186ec:	mov	r0, r7
   186f0:	str	ip, [sp]
   186f4:	str	r3, [sp, #4]
   186f8:	mov	r3, r2
   186fc:	mov	r2, r1
   18700:	add	r1, r4, #8
   18704:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   18708:	b	185ec <myhtml_data_process_state_ampersand_data@@Base+0xe4>
   1870c:			; <UNDEFINED> instruction: 0x000f7ab8
   18710:	andeq	r0, r0, ip, lsr #19
   18714:	andeq	sp, sp, ip, ror #7

00018718 <myhtml_data_process_entry_clean@@Base>:
   18718:	push	{r4, r5, r6, lr}
   1871c:	mov	r2, #60	; 0x3c
   18720:	mov	r4, r0
   18724:	mov	r1, #0
   18728:	add	r0, r0, #4
   1872c:	ldr	r5, [pc, #20]	; 18748 <myhtml_data_process_entry_clean@@Base+0x30>
   18730:	bl	10844 <memset@plt>
   18734:	ldr	r3, [pc, #16]	; 1874c <myhtml_data_process_entry_clean@@Base+0x34>
   18738:	add	r5, pc, r5
   1873c:	ldr	r3, [r5, r3]
   18740:	str	r3, [r4]
   18744:	pop	{r4, r5, r6, pc}
   18748:	andeq	r7, pc, r0, asr #17
   1874c:	andeq	r0, r0, ip, lsr #19

00018750 <myhtml_data_process_string_append_char@@Base>:
   18750:	push	{r4, r5, r6, lr}
   18754:	mov	r5, r1
   18758:	mov	r4, r0
   1875c:	ldr	r3, [r0, #4]
   18760:	ldr	r1, [r0, #8]
   18764:	add	r1, r1, #2
   18768:	cmp	r1, r3
   1876c:	bcc	18774 <myhtml_data_process_string_append_char@@Base+0x24>
   18770:	bl	108f8 <mycore_string_realloc@plt>
   18774:	ldr	r2, [r4]
   18778:	mov	r1, #0
   1877c:	ldr	r3, [r4, #8]
   18780:	strb	r5, [r2, r3]
   18784:	ldr	r2, [r4]
   18788:	ldr	r3, [r4, #8]
   1878c:	add	r3, r3, #1
   18790:	str	r3, [r4, #8]
   18794:	strb	r1, [r2, r3]
   18798:	pop	{r4, r5, r6, pc}

0001879c <myhtml_data_process_state_data@@Base>:
   1879c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   187a0:	mov	r9, r1
   187a4:	mov	r8, r2
   187a8:	add	r1, r2, r3
   187ac:	mov	r5, r3
   187b0:	mov	r4, r0
   187b4:	mov	r3, r1
   187b8:	ldr	sl, [pc, #300]	; 188ec <myhtml_data_process_state_data@@Base+0x150>
   187bc:	mov	r7, r5
   187c0:	ldr	r2, [sp, #48]	; 0x30
   187c4:	add	sl, pc, sl
   187c8:	cmp	r7, r2
   187cc:	bcc	18818 <myhtml_data_process_state_data@@Base+0x7c>
   187d0:	sub	r2, r7, r5
   187d4:	mov	r0, r9
   187d8:	ldr	r3, [r4, #32]
   187dc:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   187e0:	add	r6, r5, r0
   187e4:	cmp	r7, r6
   187e8:	beq	1888c <myhtml_data_process_state_data@@Base+0xf0>
   187ec:	ldr	r0, [r4, #4]
   187f0:	add	r1, r8, r6
   187f4:	sub	r2, r7, r6
   187f8:	ldrb	r3, [r4, #61]	; 0x3d
   187fc:	cmp	r0, #0
   18800:	bne	188d0 <myhtml_data_process_state_data@@Base+0x134>
   18804:	mov	r0, r9
   18808:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   1880c:	mov	r6, r7
   18810:	str	r0, [r4, #32]
   18814:	b	1888c <myhtml_data_process_state_data@@Base+0xf0>
   18818:	mov	fp, r3
   1881c:	ldrb	r0, [r3], #1
   18820:	add	r6, r7, #1
   18824:	cmp	r0, #38	; 0x26
   18828:	bne	188c8 <myhtml_data_process_state_data@@Base+0x12c>
   1882c:	sub	r2, r7, r5
   18830:	mov	r0, r9
   18834:	ldr	r3, [r4, #32]
   18838:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1883c:	add	r0, r5, r0
   18840:	cmp	r7, r0
   18844:	beq	1886c <myhtml_data_process_state_data@@Base+0xd0>
   18848:	ldr	ip, [r4, #4]
   1884c:	add	r1, r8, r0
   18850:	sub	r2, r7, r0
   18854:	ldrb	r3, [r4, #61]	; 0x3d
   18858:	cmp	ip, #0
   1885c:	bne	18898 <myhtml_data_process_state_data@@Base+0xfc>
   18860:	mov	r0, r9
   18864:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   18868:	str	r0, [r4, #32]
   1886c:	ldr	r3, [r9, #8]
   18870:	mov	r0, r9
   18874:	str	r3, [r4, #36]	; 0x24
   18878:	ldr	r3, [pc, #112]	; 188f0 <myhtml_data_process_state_data@@Base+0x154>
   1887c:	ldr	r3, [sl, r3]
   18880:	str	r3, [r4]
   18884:	ldrb	r1, [fp]
   18888:	bl	11000 <myhtml_data_process_string_append_char@plt>
   1888c:	mov	r0, r6
   18890:	add	sp, sp, #12
   18894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18898:	add	r5, r4, #8
   1889c:	mov	r0, r9
   188a0:	str	ip, [sp]
   188a4:	str	r3, [sp, #4]
   188a8:	mov	r3, r2
   188ac:	mov	r2, r1
   188b0:	mov	r1, r5
   188b4:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   188b8:	str	r0, [r4, #32]
   188bc:	mov	r0, r5
   188c0:	bl	10160 <myencoding_result_clean@plt>
   188c4:	b	1886c <myhtml_data_process_state_data@@Base+0xd0>
   188c8:	mov	r7, r6
   188cc:	b	187c8 <myhtml_data_process_state_data@@Base+0x2c>
   188d0:	stm	sp, {r0, r3}
   188d4:	mov	r3, r2
   188d8:	mov	r0, r9
   188dc:	mov	r2, r1
   188e0:	add	r1, r4, #8
   188e4:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   188e8:	b	1880c <myhtml_data_process_state_data@@Base+0x70>
   188ec:	andeq	r7, pc, r4, lsr r8	; <UNPREDICTABLE>
   188f0:	andeq	r0, r0, r0, ror r9

000188f4 <myhtml_data_process_state_ampersand@@Base>:
   188f4:	push	{r4, r5, r6, r7, r8, lr}
   188f8:	mov	r8, r1
   188fc:	mov	r4, r0
   18900:	mov	r7, r2
   18904:	mov	r5, r3
   18908:	ldrb	r1, [r2, r3]
   1890c:	ldr	r6, [pc, #184]	; 189cc <myhtml_data_process_state_ampersand@@Base+0xd8>
   18910:	cmp	r1, #35	; 0x23
   18914:	add	r6, pc, r6
   18918:	bne	18978 <myhtml_data_process_state_ampersand@@Base+0x84>
   1891c:	mov	r0, r8
   18920:	bl	11000 <myhtml_data_process_string_append_char@plt>
   18924:	mov	r3, #0
   18928:	add	r0, r5, #1
   1892c:	str	r3, [r4, #40]	; 0x28
   18930:	ldr	r3, [sp, #24]
   18934:	cmp	r3, r0
   18938:	bhi	1894c <myhtml_data_process_state_ampersand@@Base+0x58>
   1893c:	ldr	r3, [pc, #140]	; 189d0 <myhtml_data_process_state_ampersand@@Base+0xdc>
   18940:	ldr	r3, [r6, r3]
   18944:	str	r3, [r4]
   18948:	pop	{r4, r5, r6, r7, r8, pc}
   1894c:	ldrb	r1, [r7, r0]
   18950:	and	r3, r1, #223	; 0xdf
   18954:	cmp	r3, #88	; 0x58
   18958:	bne	18970 <myhtml_data_process_state_ampersand@@Base+0x7c>
   1895c:	mov	r0, r8
   18960:	bl	11000 <myhtml_data_process_string_append_char@plt>
   18964:	add	r0, r5, #2
   18968:	ldr	r3, [pc, #100]	; 189d4 <myhtml_data_process_state_ampersand@@Base+0xe0>
   1896c:	b	18940 <myhtml_data_process_state_ampersand@@Base+0x4c>
   18970:	ldr	r3, [pc, #96]	; 189d8 <myhtml_data_process_state_ampersand@@Base+0xe4>
   18974:	b	18940 <myhtml_data_process_state_ampersand@@Base+0x4c>
   18978:	mov	r3, #0
   1897c:	str	r3, [r0, #48]	; 0x30
   18980:	ldrb	r0, [r2, r5]
   18984:	bl	109e8 <myhtml_charef_get_first_position@plt>
   18988:	str	r0, [r4, #44]	; 0x2c
   1898c:	ldrb	r3, [r0]
   18990:	cmp	r3, #0
   18994:	bne	189ac <myhtml_data_process_state_ampersand@@Base+0xb8>
   18998:	ldr	r3, [pc, #60]	; 189dc <myhtml_data_process_state_ampersand@@Base+0xe8>
   1899c:	mov	r0, r5
   189a0:	ldr	r3, [r6, r3]
   189a4:	str	r3, [r4]
   189a8:	pop	{r4, r5, r6, r7, r8, pc}
   189ac:	ldr	r3, [pc, #44]	; 189e0 <myhtml_data_process_state_ampersand@@Base+0xec>
   189b0:	mov	r0, r8
   189b4:	ldr	r3, [r6, r3]
   189b8:	str	r3, [r4]
   189bc:	ldrb	r1, [r7, r5]
   189c0:	bl	11000 <myhtml_data_process_string_append_char@plt>
   189c4:	add	r0, r5, #1
   189c8:	pop	{r4, r5, r6, r7, r8, pc}
   189cc:	andeq	r7, pc, r4, ror #13
   189d0:	andeq	r0, r0, r8, ror #14
   189d4:	andeq	r0, r0, r0, ror r7
   189d8:	muleq	r0, r4, r9
   189dc:	andeq	r0, r0, ip, lsr #19
   189e0:	andeq	r0, r0, r4, asr #16

000189e4 <myhtml_data_process_state_ampersand_hash@@Base>:
   189e4:	push	{r4, r5, r6, lr}
   189e8:	mov	r6, r0
   189ec:	mov	r0, r1
   189f0:	mov	r4, r3
   189f4:	ldrb	r1, [r2, r3]
   189f8:	ldr	r5, [pc, #48]	; 18a30 <myhtml_data_process_state_ampersand_hash@@Base+0x4c>
   189fc:	and	r3, r1, #223	; 0xdf
   18a00:	cmp	r3, #88	; 0x58
   18a04:	add	r5, pc, r5
   18a08:	bne	18a28 <myhtml_data_process_state_ampersand_hash@@Base+0x44>
   18a0c:	bl	11000 <myhtml_data_process_string_append_char@plt>
   18a10:	ldr	r3, [pc, #28]	; 18a34 <myhtml_data_process_state_ampersand_hash@@Base+0x50>
   18a14:	add	r4, r4, #1
   18a18:	mov	r0, r4
   18a1c:	ldr	r3, [r5, r3]
   18a20:	str	r3, [r6]
   18a24:	pop	{r4, r5, r6, pc}
   18a28:	ldr	r3, [pc, #8]	; 18a38 <myhtml_data_process_state_ampersand_hash@@Base+0x54>
   18a2c:	b	18a18 <myhtml_data_process_state_ampersand_hash@@Base+0x34>
   18a30:	strdeq	r7, [pc], -r4
   18a34:	andeq	r0, r0, r0, ror r7
   18a38:	muleq	r0, r4, r9

00018a3c <myhtml_data_process_state_end@@Base>:
   18a3c:	push	{r4, r5, r6, lr}
   18a40:	mov	r4, r1
   18a44:	mov	r6, r0
   18a48:	ldr	r1, [r1, #8]
   18a4c:	ldr	r3, [r4, #4]
   18a50:	add	r1, r1, #5
   18a54:	cmp	r1, r3
   18a58:	bcc	18a64 <myhtml_data_process_state_end@@Base+0x28>
   18a5c:	mov	r0, r4
   18a60:	bl	108f8 <mycore_string_realloc@plt>
   18a64:	ldr	r3, [r6, #40]	; 0x28
   18a68:	cmp	r3, #159	; 0x9f
   18a6c:	bhi	18ab0 <myhtml_data_process_state_end@@Base+0x74>
   18a70:	ldr	r2, [pc, #88]	; 18ad0 <myhtml_data_process_state_end@@Base+0x94>
   18a74:	add	r2, pc, r2
   18a78:	add	r3, r2, r3, lsl #2
   18a7c:	ldr	r3, [r3, #1024]	; 0x400
   18a80:	str	r3, [r6, #40]	; 0x28
   18a84:	ldr	r1, [r4]
   18a88:	ldr	r5, [r6, #36]	; 0x24
   18a8c:	ldr	r0, [r6, #40]	; 0x28
   18a90:	add	r1, r1, r5
   18a94:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   18a98:	ldr	r3, [r4]
   18a9c:	add	r0, r5, r0
   18aa0:	mov	r2, #0
   18aa4:	str	r0, [r4, #8]
   18aa8:	strb	r2, [r3, r0]
   18aac:	pop	{r4, r5, r6, pc}
   18ab0:	sub	r2, r3, #55296	; 0xd800
   18ab4:	cmp	r2, #2048	; 0x800
   18ab8:	bcs	18ac4 <myhtml_data_process_state_end@@Base+0x88>
   18abc:	movw	r3, #65533	; 0xfffd
   18ac0:	b	18a80 <myhtml_data_process_state_end@@Base+0x44>
   18ac4:	cmp	r3, #1114112	; 0x110000
   18ac8:	bcs	18abc <myhtml_data_process_state_end@@Base+0x80>
   18acc:	b	18a84 <myhtml_data_process_state_end@@Base+0x48>
   18ad0:	andeq	ip, sp, r0, lsl pc

00018ad4 <myhtml_data_process_state_ampersand_hash_data@@Base>:
   18ad4:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18ad8:	mov	r4, r0
   18adc:	mov	r8, r1
   18ae0:	add	r1, r2, r3
   18ae4:	mov	r7, r2
   18ae8:	mov	r6, r3
   18aec:	mov	r2, r1
   18af0:	ldr	lr, [pc, #264]	; 18c00 <myhtml_data_process_state_ampersand_hash_data@@Base+0x12c>
   18af4:	mov	r5, r3
   18af8:	mov	sl, #10
   18afc:	ldr	r0, [pc, #256]	; 18c04 <myhtml_data_process_state_ampersand_hash_data@@Base+0x130>
   18b00:	ldr	r9, [pc, #256]	; 18c08 <myhtml_data_process_state_ampersand_hash_data@@Base+0x134>
   18b04:	add	lr, pc, lr
   18b08:	ldr	ip, [sp, #48]	; 0x30
   18b0c:	add	r0, pc, r0
   18b10:	cmp	r5, ip
   18b14:	bcc	18b30 <myhtml_data_process_state_ampersand_hash_data@@Base+0x5c>
   18b18:	sub	r2, r5, r6
   18b1c:	mov	r0, r8
   18b20:	ldr	r3, [r4, #32]
   18b24:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   18b28:	add	r0, r6, r0
   18b2c:	b	18b74 <myhtml_data_process_state_ampersand_hash_data@@Base+0xa0>
   18b30:	mov	r3, r2
   18b34:	add	r2, r2, #1
   18b38:	ldrb	fp, [r3]
   18b3c:	add	fp, lr, fp
   18b40:	ldrb	fp, [fp, #1664]	; 0x680
   18b44:	cmp	fp, #255	; 0xff
   18b48:	bne	18bc8 <myhtml_data_process_state_ampersand_hash_data@@Base+0xf4>
   18b4c:	ldr	r2, [pc, #184]	; 18c0c <myhtml_data_process_state_ampersand_hash_data@@Base+0x138>
   18b50:	cmp	r5, r6
   18b54:	ldr	r2, [r0, r2]
   18b58:	str	r2, [r4]
   18b5c:	bne	18ba4 <myhtml_data_process_state_ampersand_hash_data@@Base+0xd0>
   18b60:	mov	r2, #0
   18b64:	mov	r0, r8
   18b68:	ldr	r3, [r4, #32]
   18b6c:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   18b70:	add	r0, r5, r0
   18b74:	cmp	r5, r0
   18b78:	beq	18bbc <myhtml_data_process_state_ampersand_hash_data@@Base+0xe8>
   18b7c:	ldr	ip, [r4, #4]
   18b80:	add	r1, r7, r0
   18b84:	sub	r2, r5, r0
   18b88:	ldrb	r3, [r4, #61]	; 0x3d
   18b8c:	cmp	ip, #0
   18b90:	bne	18be0 <myhtml_data_process_state_ampersand_hash_data@@Base+0x10c>
   18b94:	mov	r0, r8
   18b98:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   18b9c:	str	r0, [r4, #32]
   18ba0:	b	18bbc <myhtml_data_process_state_ampersand_hash_data@@Base+0xe8>
   18ba4:	ldrb	r3, [r3]
   18ba8:	mov	r1, r8
   18bac:	mov	r0, r4
   18bb0:	cmp	r3, #59	; 0x3b
   18bb4:	addeq	r5, r5, #1
   18bb8:	bl	10304 <myhtml_data_process_state_end@plt>
   18bbc:	mov	r0, r5
   18bc0:	add	sp, sp, #12
   18bc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18bc8:	ldr	r3, [r4, #40]	; 0x28
   18bcc:	add	r5, r5, #1
   18bd0:	cmp	r3, r9
   18bd4:	mlals	r3, sl, r3, fp
   18bd8:	strls	r3, [r4, #40]	; 0x28
   18bdc:	b	18b10 <myhtml_data_process_state_ampersand_hash_data@@Base+0x3c>
   18be0:	mov	r0, r8
   18be4:	str	ip, [sp]
   18be8:	str	r3, [sp, #4]
   18bec:	mov	r3, r2
   18bf0:	mov	r2, r1
   18bf4:	add	r1, r4, #8
   18bf8:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   18bfc:	b	18b9c <myhtml_data_process_state_ampersand_hash_data@@Base+0xc8>
   18c00:	andeq	ip, sp, r0, lsl #29
   18c04:	andeq	r7, pc, ip, ror #9
   18c08:			; <UNDEFINED> instruction: 0x0010ffff
   18c0c:	andeq	r0, r0, ip, lsr #19

00018c10 <myhtml_data_process_state_ampersand_hash_x_data@@Base>:
   18c10:	ldr	ip, [pc, #304]	; 18d48 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x138>
   18c14:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   18c18:	mov	r4, r0
   18c1c:	mov	r8, r1
   18c20:	mov	r6, r2
   18c24:	mov	r7, r3
   18c28:	mov	r5, r3
   18c2c:	ldr	r0, [pc, #280]	; 18d4c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x13c>
   18c30:	add	ip, pc, ip
   18c34:	ldr	r9, [pc, #276]	; 18d50 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x140>
   18c38:	ldr	lr, [sp, #40]	; 0x28
   18c3c:	add	r0, pc, r0
   18c40:	cmp	r5, lr
   18c44:	bcc	18c64 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x54>
   18c48:	sub	r2, r5, r7
   18c4c:	add	r1, r6, r7
   18c50:	ldr	r3, [r4, #32]
   18c54:	mov	r0, r8
   18c58:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   18c5c:	add	r0, r7, r0
   18c60:	b	18ca4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x94>
   18c64:	ldrb	r3, [r6, r5]
   18c68:	add	r1, r6, r5
   18c6c:	add	r3, ip, r3
   18c70:	ldrb	r3, [r3, #1920]	; 0x780
   18c74:	cmp	r3, #255	; 0xff
   18c78:	bne	18cf8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xe8>
   18c7c:	ldr	r3, [pc, #208]	; 18d54 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x144>
   18c80:	cmp	r5, r7
   18c84:	ldr	r3, [r0, r3]
   18c88:	str	r3, [r4]
   18c8c:	bne	18cd4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xc4>
   18c90:	mov	r2, #0
   18c94:	mov	r0, r8
   18c98:	ldr	r3, [r4, #32]
   18c9c:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   18ca0:	add	r0, r5, r0
   18ca4:	cmp	r5, r0
   18ca8:	beq	18cec <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xdc>
   18cac:	ldr	ip, [r4, #4]
   18cb0:	add	r1, r6, r0
   18cb4:	sub	r2, r5, r0
   18cb8:	ldrb	r3, [r4, #61]	; 0x3d
   18cbc:	cmp	ip, #0
   18cc0:	bne	18d28 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x118>
   18cc4:	mov	r0, r8
   18cc8:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   18ccc:	str	r0, [r4, #32]
   18cd0:	b	18cec <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xdc>
   18cd4:	ldrb	r3, [r1]
   18cd8:	mov	r0, r4
   18cdc:	mov	r1, r8
   18ce0:	cmp	r3, #59	; 0x3b
   18ce4:	addeq	r5, r5, #1
   18ce8:	bl	10304 <myhtml_data_process_state_end@plt>
   18cec:	mov	r0, r5
   18cf0:	add	sp, sp, #12
   18cf4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18cf8:	ldr	r3, [r4, #40]	; 0x28
   18cfc:	cmp	r3, r9
   18d00:	bhi	18d20 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x110>
   18d04:	lsl	r3, r3, #4
   18d08:	str	r3, [r4, #40]	; 0x28
   18d0c:	ldrb	r2, [r6, r5]
   18d10:	add	r2, ip, r2
   18d14:	ldrb	r2, [r2, #1920]	; 0x780
   18d18:	orr	r3, r2, r3
   18d1c:	str	r3, [r4, #40]	; 0x28
   18d20:	add	r5, r5, #1
   18d24:	b	18c40 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x30>
   18d28:	mov	r0, r8
   18d2c:	str	ip, [sp]
   18d30:	str	r3, [sp, #4]
   18d34:	mov	r3, r2
   18d38:	mov	r2, r1
   18d3c:	add	r1, r4, #8
   18d40:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   18d44:	b	18ccc <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xbc>
   18d48:	andeq	ip, sp, r4, asr sp
   18d4c:			; <UNDEFINED> instruction: 0x000f73bc
   18d50:			; <UNDEFINED> instruction: 0x0010ffff
   18d54:	andeq	r0, r0, ip, lsr #19

00018d58 <myhtml_data_process@@Base>:
   18d58:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   18d5c:	mov	r4, r3
   18d60:	mov	r5, r0
   18d64:	mov	r6, r1
   18d68:	mov	r7, r2
   18d6c:	mov	r3, #0
   18d70:	cmp	r3, r4
   18d74:	bcc	18d80 <myhtml_data_process@@Base+0x28>
   18d78:	add	sp, sp, #8
   18d7c:	pop	{r4, r5, r6, r7, r8, pc}
   18d80:	mov	r2, r7
   18d84:	mov	r1, r6
   18d88:	ldr	r8, [r5]
   18d8c:	mov	r0, r5
   18d90:	str	r4, [sp]
   18d94:	blx	r8
   18d98:	mov	r3, r0
   18d9c:	b	18d70 <myhtml_data_process@@Base+0x18>

00018da0 <myhtml_data_process_end@@Base>:
   18da0:	ldr	r3, [pc, #240]	; 18e98 <myhtml_data_process_end@@Base+0xf8>
   18da4:	push	{r4, r5, r6, r7, r8, lr}
   18da8:	ldr	ip, [pc, #236]	; 18e9c <myhtml_data_process_end@@Base+0xfc>
   18dac:	add	r3, pc, r3
   18db0:	ldr	r2, [r0]
   18db4:	ldr	ip, [r3, ip]
   18db8:	cmp	r2, ip
   18dbc:	bne	18e44 <myhtml_data_process_end@@Base+0xa4>
   18dc0:	ldr	r7, [r0, #48]	; 0x30
   18dc4:	cmp	r7, #0
   18dc8:	beq	18e44 <myhtml_data_process_end@@Base+0xa4>
   18dcc:	mov	r5, r1
   18dd0:	mov	r4, r0
   18dd4:	add	r8, r7, #12
   18dd8:	mov	r6, #0
   18ddc:	ldr	r3, [r7, #20]
   18de0:	cmp	r3, r6
   18de4:	bhi	18e00 <myhtml_data_process_end@@Base+0x60>
   18de8:	ldr	r2, [r5]
   18dec:	mov	r1, #0
   18df0:	ldr	r3, [r4, #36]	; 0x24
   18df4:	str	r3, [r5, #8]
   18df8:	strb	r1, [r2, r3]
   18dfc:	pop	{r4, r5, r6, r7, r8, pc}
   18e00:	ldr	r3, [r5, #4]
   18e04:	ldr	r1, [r5, #8]
   18e08:	add	r1, r1, #5
   18e0c:	cmp	r1, r3
   18e10:	bcc	18e1c <myhtml_data_process_end@@Base+0x7c>
   18e14:	mov	r0, r5
   18e18:	bl	108f8 <mycore_string_realloc@plt>
   18e1c:	ldr	r1, [r5]
   18e20:	add	r6, r6, #1
   18e24:	ldr	r3, [r4, #36]	; 0x24
   18e28:	ldr	r0, [r8], #4
   18e2c:	add	r1, r1, r3
   18e30:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   18e34:	ldr	r3, [r4, #36]	; 0x24
   18e38:	add	r0, r3, r0
   18e3c:	str	r0, [r4, #36]	; 0x24
   18e40:	b	18ddc <myhtml_data_process_end@@Base+0x3c>
   18e44:	ldr	ip, [pc, #84]	; 18ea0 <myhtml_data_process_end@@Base+0x100>
   18e48:	ldr	ip, [r3, ip]
   18e4c:	cmp	r2, ip
   18e50:	bne	18e70 <myhtml_data_process_end@@Base+0xd0>
   18e54:	ldr	r3, [r1, #8]
   18e58:	ldr	r2, [r0, #36]	; 0x24
   18e5c:	sub	r3, r3, r2
   18e60:	cmp	r3, #2
   18e64:	popeq	{r4, r5, r6, r7, r8, pc}
   18e68:	pop	{r4, r5, r6, r7, r8, lr}
   18e6c:	b	10304 <myhtml_data_process_state_end@plt>
   18e70:	ldr	ip, [pc, #44]	; 18ea4 <myhtml_data_process_end@@Base+0x104>
   18e74:	ldr	r3, [r3, ip]
   18e78:	cmp	r2, r3
   18e7c:	popne	{r4, r5, r6, r7, r8, pc}
   18e80:	ldr	r3, [r1, #8]
   18e84:	ldr	r2, [r0, #36]	; 0x24
   18e88:	sub	r3, r3, r2
   18e8c:	cmp	r3, #3
   18e90:	popeq	{r4, r5, r6, r7, r8, pc}
   18e94:	b	18e68 <myhtml_data_process_end@@Base+0xc8>
   18e98:	andeq	r7, pc, ip, asr #4
   18e9c:	andeq	r0, r0, r4, asr #16
   18ea0:	muleq	r0, r4, r9
   18ea4:	andeq	r0, r0, r0, ror r7

00018ea8 <myhtml_get_nodes_by_attribute_value_recursion_eq_i@@Base>:
   18ea8:	ldr	r3, [r0, #8]
   18eac:	cmp	r3, r2
   18eb0:	bne	18ecc <myhtml_get_nodes_by_attribute_value_recursion_eq_i@@Base+0x24>
   18eb4:	push	{r4, lr}
   18eb8:	ldr	r0, [r0]
   18ebc:	bl	10238 <mycore_strncasecmp@plt>
   18ec0:	clz	r0, r0
   18ec4:	lsr	r0, r0, #5
   18ec8:	pop	{r4, pc}
   18ecc:	mov	r0, #0
   18ed0:	bx	lr

00018ed4 <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base>:
   18ed4:	ldr	r3, [r0, #8]
   18ed8:	cmp	r3, r2
   18edc:	bcc	18f00 <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base+0x2c>
   18ee0:	ldr	r0, [r0]
   18ee4:	sub	r3, r3, r2
   18ee8:	push	{r4, lr}
   18eec:	add	r0, r0, r3
   18ef0:	bl	10238 <mycore_strncasecmp@plt>
   18ef4:	clz	r0, r0
   18ef8:	lsr	r0, r0, #5
   18efc:	pop	{r4, pc}
   18f00:	mov	r0, #0
   18f04:	bx	lr

00018f08 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base>:
   18f08:	ldr	r3, [r0, #8]
   18f0c:	cmp	r3, r2
   18f10:	bcs	18f1c <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x14>
   18f14:	mov	r0, #0
   18f18:	bx	lr
   18f1c:	push	{r4, r5, r6, lr}
   18f20:	mov	r6, r1
   18f24:	mov	r4, r2
   18f28:	ldr	r5, [r0]
   18f2c:	beq	18f50 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x48>
   18f30:	mov	r2, r4
   18f34:	mov	r1, r6
   18f38:	mov	r0, r5
   18f3c:	bl	10238 <mycore_strncasecmp@plt>
   18f40:	cmp	r0, #0
   18f44:	beq	18f68 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x60>
   18f48:	mov	r0, #0
   18f4c:	pop	{r4, r5, r6, pc}
   18f50:	mov	r0, r5
   18f54:	bl	10238 <mycore_strncasecmp@plt>
   18f58:	cmp	r0, #0
   18f5c:	bne	18f30 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x28>
   18f60:	mov	r0, #1
   18f64:	pop	{r4, r5, r6, pc}
   18f68:	ldrb	r0, [r5, r4]
   18f6c:	sub	r0, r0, #45	; 0x2d
   18f70:	clz	r0, r0
   18f74:	lsr	r0, r0, #5
   18f78:	pop	{r4, r5, r6, pc}

00018f7c <myhtml_get_nodes_by_attribute_value_recursion_eq@@Base>:
   18f7c:	ldr	r3, [r0, #8]
   18f80:	cmp	r3, r2
   18f84:	bne	18fa0 <myhtml_get_nodes_by_attribute_value_recursion_eq@@Base+0x24>
   18f88:	push	{r4, lr}
   18f8c:	ldr	r0, [r0]
   18f90:	bl	10e80 <mycore_strncmp@plt>
   18f94:	clz	r0, r0
   18f98:	lsr	r0, r0, #5
   18f9c:	pop	{r4, pc}
   18fa0:	mov	r0, #0
   18fa4:	bx	lr

00018fa8 <myhtml_get_nodes_by_attribute_value_recursion_end@@Base>:
   18fa8:	ldr	r3, [r0, #8]
   18fac:	cmp	r3, r2
   18fb0:	bcc	18fd4 <myhtml_get_nodes_by_attribute_value_recursion_end@@Base+0x2c>
   18fb4:	ldr	r0, [r0]
   18fb8:	sub	r3, r3, r2
   18fbc:	push	{r4, lr}
   18fc0:	add	r0, r0, r3
   18fc4:	bl	10e80 <mycore_strncmp@plt>
   18fc8:	clz	r0, r0
   18fcc:	lsr	r0, r0, #5
   18fd0:	pop	{r4, pc}
   18fd4:	mov	r0, #0
   18fd8:	bx	lr

00018fdc <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base>:
   18fdc:	ldr	r3, [r0, #8]
   18fe0:	cmp	r3, r2
   18fe4:	bcs	18ff0 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x14>
   18fe8:	mov	r0, #0
   18fec:	bx	lr
   18ff0:	push	{r4, r5, r6, lr}
   18ff4:	mov	r6, r1
   18ff8:	mov	r4, r2
   18ffc:	ldr	r5, [r0]
   19000:	beq	19024 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x48>
   19004:	mov	r2, r4
   19008:	mov	r1, r6
   1900c:	mov	r0, r5
   19010:	bl	10e80 <mycore_strncmp@plt>
   19014:	cmp	r0, #0
   19018:	beq	1903c <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x60>
   1901c:	mov	r0, #0
   19020:	pop	{r4, r5, r6, pc}
   19024:	mov	r0, r5
   19028:	bl	10e80 <mycore_strncmp@plt>
   1902c:	cmp	r0, #0
   19030:	bne	19004 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x28>
   19034:	mov	r0, #1
   19038:	pop	{r4, r5, r6, pc}
   1903c:	ldrb	r0, [r5, r4]
   19040:	sub	r0, r0, #45	; 0x2d
   19044:	clz	r0, r0
   19048:	lsr	r0, r0, #5
   1904c:	pop	{r4, r5, r6, pc}

00019050 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base>:
   19050:	ldr	r3, [r0, #8]
   19054:	cmp	r3, r2
   19058:	bcs	19064 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x14>
   1905c:	mov	r0, #0
   19060:	bx	lr
   19064:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19068:	mov	r6, r0
   1906c:	mov	r8, r1
   19070:	mov	r4, r2
   19074:	ldr	r5, [r0]
   19078:	mov	r0, r5
   1907c:	bl	10238 <mycore_strncasecmp@plt>
   19080:	cmp	r0, #0
   19084:	bne	190b8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x68>
   19088:	ldr	r3, [r6, #8]
   1908c:	cmp	r4, r3
   19090:	bcs	190d8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x88>
   19094:	ldrb	r3, [r5, r4]
   19098:	sub	r3, r3, #9
   1909c:	uxtb	r3, r3
   190a0:	cmp	r3, #23
   190a4:	bhi	190b8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x68>
   190a8:	ldr	r2, [pc, #176]	; 19160 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x110>
   190ac:	mvn	r3, r2, lsr r3
   190b0:	tst	r3, #1
   190b4:	beq	190dc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x8c>
   190b8:	ldr	r9, [pc, #160]	; 19160 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x110>
   190bc:	mov	r7, #1
   190c0:	ldr	r3, [r6, #8]
   190c4:	sub	r3, r3, r7
   190c8:	cmp	r4, r3
   190cc:	bls	190e4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x94>
   190d0:	mov	r0, #0
   190d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   190d8:	bne	190b8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x68>
   190dc:	mov	r0, #1
   190e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   190e4:	ldrb	r3, [r5], #1
   190e8:	sub	r3, r3, #9
   190ec:	uxtb	r3, r3
   190f0:	cmp	r3, #23
   190f4:	bhi	19104 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xb4>
   190f8:	mvn	r3, r9, lsr r3
   190fc:	tst	r3, #1
   19100:	beq	1910c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xbc>
   19104:	add	r7, r7, #1
   19108:	b	190c0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x70>
   1910c:	mov	r2, r4
   19110:	mov	r1, r8
   19114:	mov	r0, r5
   19118:	bl	10238 <mycore_strncasecmp@plt>
   1911c:	cmp	r0, #0
   19120:	bne	19104 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xb4>
   19124:	cmp	r4, r7
   19128:	bcs	1914c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xfc>
   1912c:	ldrb	r3, [r5, r4]
   19130:	sub	r3, r3, #9
   19134:	uxtb	r3, r3
   19138:	cmp	r3, #23
   1913c:	bhi	1914c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xfc>
   19140:	mvn	r3, r9, lsr r3
   19144:	tst	r3, #1
   19148:	beq	190dc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x8c>
   1914c:	ldr	r3, [r6, #8]
   19150:	sub	r3, r3, r7
   19154:	cmp	r4, r3
   19158:	bne	19104 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xb4>
   1915c:	b	190dc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x8c>
   19160:	addeq	r0, r0, fp, lsl r0

00019164 <myhtml_get_nodes_by_attribute_value_recursion_begin_i@@Base>:
   19164:	ldr	r3, [r0, #8]
   19168:	cmp	r3, r2
   1916c:	bcc	19188 <myhtml_get_nodes_by_attribute_value_recursion_begin_i@@Base+0x24>
   19170:	push	{r4, lr}
   19174:	ldr	r0, [r0]
   19178:	bl	10238 <mycore_strncasecmp@plt>
   1917c:	clz	r0, r0
   19180:	lsr	r0, r0, #5
   19184:	pop	{r4, pc}
   19188:	mov	r0, #0
   1918c:	bx	lr

00019190 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base>:
   19190:	ldr	r3, [r0, #8]
   19194:	cmp	r3, r2
   19198:	bcc	191f0 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x60>
   1919c:	push	{r4, r5, r6, r7, r8, lr}
   191a0:	mov	r4, r2
   191a4:	mov	r7, r1
   191a8:	mov	r5, r0
   191ac:	mov	r6, #0
   191b0:	ldr	r8, [r0]
   191b4:	mov	r2, r4
   191b8:	mov	r1, r7
   191bc:	add	r0, r8, r6
   191c0:	bl	10238 <mycore_strncasecmp@plt>
   191c4:	cmp	r0, #0
   191c8:	beq	191e8 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x58>
   191cc:	ldr	r3, [r5, #8]
   191d0:	add	r6, r6, #1
   191d4:	sub	r3, r3, r6
   191d8:	cmp	r4, r3
   191dc:	bls	191b4 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x24>
   191e0:	mov	r0, #0
   191e4:	pop	{r4, r5, r6, r7, r8, pc}
   191e8:	mov	r0, #1
   191ec:	pop	{r4, r5, r6, r7, r8, pc}
   191f0:	mov	r0, #0
   191f4:	bx	lr

000191f8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base>:
   191f8:	ldr	r3, [r0, #8]
   191fc:	cmp	r3, r2
   19200:	bcs	1920c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x14>
   19204:	mov	r0, #0
   19208:	bx	lr
   1920c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19210:	mov	r6, r0
   19214:	mov	r8, r1
   19218:	mov	r4, r2
   1921c:	ldr	r5, [r0]
   19220:	mov	r0, r5
   19224:	bl	10e80 <mycore_strncmp@plt>
   19228:	cmp	r0, #0
   1922c:	bne	19260 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x68>
   19230:	ldr	r3, [r6, #8]
   19234:	cmp	r4, r3
   19238:	bcs	19280 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x88>
   1923c:	ldrb	r3, [r5, r4]
   19240:	sub	r3, r3, #9
   19244:	uxtb	r3, r3
   19248:	cmp	r3, #23
   1924c:	bhi	19260 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x68>
   19250:	ldr	r2, [pc, #176]	; 19308 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x110>
   19254:	mvn	r3, r2, lsr r3
   19258:	tst	r3, #1
   1925c:	beq	19284 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x8c>
   19260:	ldr	r9, [pc, #160]	; 19308 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x110>
   19264:	mov	r7, #1
   19268:	ldr	r3, [r6, #8]
   1926c:	sub	r3, r3, r7
   19270:	cmp	r4, r3
   19274:	bls	1928c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x94>
   19278:	mov	r0, #0
   1927c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19280:	bne	19260 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x68>
   19284:	mov	r0, #1
   19288:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1928c:	ldrb	r3, [r5], #1
   19290:	sub	r3, r3, #9
   19294:	uxtb	r3, r3
   19298:	cmp	r3, #23
   1929c:	bhi	192ac <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xb4>
   192a0:	mvn	r3, r9, lsr r3
   192a4:	tst	r3, #1
   192a8:	beq	192b4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xbc>
   192ac:	add	r7, r7, #1
   192b0:	b	19268 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x70>
   192b4:	mov	r2, r4
   192b8:	mov	r1, r8
   192bc:	mov	r0, r5
   192c0:	bl	10e80 <mycore_strncmp@plt>
   192c4:	cmp	r0, #0
   192c8:	bne	192ac <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xb4>
   192cc:	cmp	r4, r7
   192d0:	bcs	192f4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xfc>
   192d4:	ldrb	r3, [r5, r4]
   192d8:	sub	r3, r3, #9
   192dc:	uxtb	r3, r3
   192e0:	cmp	r3, #23
   192e4:	bhi	192f4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xfc>
   192e8:	mvn	r3, r9, lsr r3
   192ec:	tst	r3, #1
   192f0:	beq	19284 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x8c>
   192f4:	ldr	r3, [r6, #8]
   192f8:	sub	r3, r3, r7
   192fc:	cmp	r4, r3
   19300:	bne	192ac <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xb4>
   19304:	b	19284 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x8c>
   19308:	addeq	r0, r0, fp, lsl r0

0001930c <myhtml_get_nodes_by_attribute_value_recursion_begin@@Base>:
   1930c:	ldr	r3, [r0, #8]
   19310:	cmp	r3, r2
   19314:	bcc	19330 <myhtml_get_nodes_by_attribute_value_recursion_begin@@Base+0x24>
   19318:	push	{r4, lr}
   1931c:	ldr	r0, [r0]
   19320:	bl	10e80 <mycore_strncmp@plt>
   19324:	clz	r0, r0
   19328:	lsr	r0, r0, #5
   1932c:	pop	{r4, pc}
   19330:	mov	r0, #0
   19334:	bx	lr

00019338 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base>:
   19338:	ldr	r3, [r0, #8]
   1933c:	cmp	r3, r2
   19340:	bcc	19398 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x60>
   19344:	push	{r4, r5, r6, r7, r8, lr}
   19348:	mov	r4, r2
   1934c:	mov	r7, r1
   19350:	mov	r5, r0
   19354:	mov	r6, #0
   19358:	ldr	r8, [r0]
   1935c:	mov	r2, r4
   19360:	mov	r1, r7
   19364:	add	r0, r8, r6
   19368:	bl	10e80 <mycore_strncmp@plt>
   1936c:	cmp	r0, #0
   19370:	beq	19390 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x58>
   19374:	ldr	r3, [r5, #8]
   19378:	add	r6, r6, #1
   1937c:	sub	r3, r3, r6
   19380:	cmp	r4, r3
   19384:	bls	1935c <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x24>
   19388:	mov	r0, #0
   1938c:	pop	{r4, r5, r6, r7, r8, pc}
   19390:	mov	r0, #1
   19394:	pop	{r4, r5, r6, r7, r8, pc}
   19398:	mov	r0, #0
   1939c:	bx	lr

000193a0 <myhtml_init_marker@@Base>:
   193a0:	push	{r4, lr}
   193a4:	mov	r4, r0
   193a8:	mov	r0, #44	; 0x2c
   193ac:	bl	10c28 <mycore_malloc@plt>
   193b0:	cmp	r0, #0
   193b4:	str	r0, [r4, #36]	; 0x24
   193b8:	popeq	{r4, pc}
   193bc:	pop	{r4, lr}
   193c0:	b	11030 <myhtml_tree_node_clean@plt>

000193c4 <myhtml_destroy_marker@@Base>:
   193c4:	ldr	r0, [r0, #36]	; 0x24
   193c8:	cmp	r0, #0
   193cc:	bxeq	lr
   193d0:	b	10d60 <mycore_free@plt>

000193d4 <myhtml_stream_create@@Base>:
   193d4:	push	{r4, r5, r6, r7, r8, lr}
   193d8:	subs	r4, r2, #0
   193dc:	mov	r6, r0
   193e0:	mov	r5, r1
   193e4:	streq	r4, [r0]
   193e8:	streq	r4, [r1]
   193ec:	beq	19440 <myhtml_stream_create@@Base+0x6c>
   193f0:	mov	r7, r3
   193f4:	bl	fdb8 <mythread_create@plt>
   193f8:	cmp	r0, #0
   193fc:	mov	r2, r4
   19400:	str	r0, [r6]
   19404:	moveq	r3, #9
   19408:	mov	r1, #0
   1940c:	streq	r3, [r5]
   19410:	mov	r3, r7
   19414:	bl	1103c <mythread_init@plt>
   19418:	cmp	r0, #0
   1941c:	str	r0, [r5]
   19420:	beq	1943c <myhtml_stream_create@@Base+0x68>
   19424:	mov	r2, #0
   19428:	mov	r3, #1
   1942c:	ldr	r0, [r6]
   19430:	mov	r1, r2
   19434:	bl	10940 <mythread_destroy@plt>
   19438:	str	r0, [r6]
   1943c:	ldr	r4, [r5]
   19440:	mov	r0, r4
   19444:	pop	{r4, r5, r6, r7, r8, pc}

00019448 <myhtml_batch_create@@Base>:
   19448:	push	{r4, r5, r6, r7, r8, lr}
   1944c:	subs	r5, r2, #0
   19450:	mov	r4, r0
   19454:	mov	r6, r1
   19458:	streq	r5, [r0, #4]
   1945c:	streq	r5, [r1]
   19460:	beq	194d4 <myhtml_batch_create@@Base+0x8c>
   19464:	mov	r7, r3
   19468:	bl	fdb8 <mythread_create@plt>
   1946c:	ldr	r2, [r4]
   19470:	str	r0, [r4, #4]
   19474:	cmp	r2, #0
   19478:	bne	19498 <myhtml_batch_create@@Base+0x50>
   1947c:	mov	r3, #1
   19480:	mov	r1, r2
   19484:	mov	r0, r2
   19488:	bl	10940 <mythread_destroy@plt>
   1948c:	mov	r3, #9
   19490:	str	r0, [r4]
   19494:	str	r3, [r6]
   19498:	mov	r3, r7
   1949c:	mov	r2, r5
   194a0:	ldr	r0, [r4, #4]
   194a4:	mov	r1, #1
   194a8:	bl	1103c <mythread_init@plt>
   194ac:	cmp	r0, #0
   194b0:	str	r0, [r6]
   194b4:	beq	194d0 <myhtml_batch_create@@Base+0x88>
   194b8:	mov	r2, #0
   194bc:	mov	r3, #1
   194c0:	ldr	r0, [r4, #4]
   194c4:	mov	r1, r2
   194c8:	bl	10940 <mythread_destroy@plt>
   194cc:	str	r0, [r4, #4]
   194d0:	ldr	r5, [r6]
   194d4:	mov	r0, r5
   194d8:	pop	{r4, r5, r6, r7, r8, pc}

000194dc <myhtml_create_stream_and_batch@@Base>:
   194dc:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   194e0:	add	r5, sp, #4
   194e4:	mov	r6, r1
   194e8:	mov	r8, r2
   194ec:	mov	r3, #0
   194f0:	mov	r2, r1
   194f4:	mov	r1, r5
   194f8:	mov	r4, r0
   194fc:	bl	103d0 <myhtml_stream_create@plt>
   19500:	subs	r7, r0, #0
   19504:	beq	19514 <myhtml_create_stream_and_batch@@Base+0x38>
   19508:	ldr	r0, [sp, #4]
   1950c:	add	sp, sp, #8
   19510:	pop	{r4, r5, r6, r7, r8, pc}
   19514:	mov	r3, r6
   19518:	mov	r2, r8
   1951c:	mov	r1, r5
   19520:	mov	r0, r4
   19524:	bl	1052c <myhtml_batch_create@plt>
   19528:	cmp	r0, #0
   1952c:	beq	19508 <myhtml_create_stream_and_batch@@Base+0x2c>
   19530:	mov	r3, #1
   19534:	mov	r2, r7
   19538:	ldr	r0, [r4]
   1953c:	mov	r1, r7
   19540:	bl	10940 <mythread_destroy@plt>
   19544:	str	r0, [r4]
   19548:	b	19508 <myhtml_create_stream_and_batch@@Base+0x2c>

0001954c <myhtml_create@@Base>:
   1954c:	mov	r1, #40	; 0x28
   19550:	mov	r0, #1
   19554:	b	feb4 <mycore_calloc@plt>

00019558 <myhtml_clean@@Base>:
   19558:	bx	lr

0001955c <myhtml_init@@Base>:
   1955c:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   19560:	mov	r5, r0
   19564:	mov	r8, r1
   19568:	mov	r6, r2
   1956c:	ldr	r7, [pc, #512]	; 19774 <myhtml_init@@Base+0x218>
   19570:	str	r1, [r0, #32]
   19574:	bl	10a48 <myhtml_init_marker@plt>
   19578:	mov	r0, r5
   1957c:	bl	fc5c <myhtml_tokenizer_state_init@plt>
   19580:	subs	r4, r0, #0
   19584:	add	r7, pc, r7
   19588:	str	r0, [sp, #12]
   1958c:	bne	1967c <myhtml_init@@Base+0x120>
   19590:	mov	r0, r5
   19594:	bl	10b80 <myhtml_rules_init@plt>
   19598:	cmp	r0, #0
   1959c:	mov	r4, r0
   195a0:	str	r0, [sp, #12]
   195a4:	bne	1967c <myhtml_init@@Base+0x120>
   195a8:	cmp	r6, #0
   195ac:	beq	19758 <myhtml_init@@Base+0x1fc>
   195b0:	cmp	r8, #1
   195b4:	beq	1965c <myhtml_init@@Base+0x100>
   195b8:	cmp	r8, #2
   195bc:	bne	19688 <myhtml_init@@Base+0x12c>
   195c0:	mov	r2, #0
   195c4:	mov	r1, #1
   195c8:	mov	r0, r5
   195cc:	bl	10478 <myhtml_create_stream_and_batch@plt>
   195d0:	cmp	r0, #0
   195d4:	mov	r4, r0
   195d8:	str	r0, [sp, #12]
   195dc:	bne	1967c <myhtml_init@@Base+0x120>
   195e0:	add	r0, sp, #12
   195e4:	ldr	r4, [r5]
   195e8:	bl	1076c <mythread_queue_list_create@plt>
   195ec:	ldr	r3, [pc, #388]	; 19778 <myhtml_init@@Base+0x21c>
   195f0:	str	r0, [r4, #16]
   195f4:	ldr	r0, [r5]
   195f8:	ldr	r3, [r7, r3]
   195fc:	str	r3, [sp]
   19600:	ldr	r3, [pc, #372]	; 1977c <myhtml_init@@Base+0x220>
   19604:	ldr	r2, [sp]
   19608:	ldr	r3, [r7, r3]
   1960c:	str	r3, [sp, #4]
   19610:	mov	r3, #4
   19614:	ldr	r1, [sp, #4]
   19618:	bl	10850 <myhread_entry_create@plt>
   1961c:	str	r0, [sp, #12]
   19620:	ldr	r3, [r5]
   19624:	ldr	r4, [sp, #12]
   19628:	str	r3, [r5, #8]
   1962c:	ldr	r3, [r5, #4]
   19630:	str	r6, [r5, #20]
   19634:	str	r3, [r5, #12]
   19638:	mov	r3, #0
   1963c:	cmp	r4, r3
   19640:	str	r3, [r5, #16]
   19644:	bne	1967c <myhtml_init@@Base+0x120>
   19648:	mov	r0, r5
   1964c:	bl	fd88 <myhtml_clean@plt>
   19650:	ldr	r4, [sp, #12]
   19654:	b	1967c <myhtml_init@@Base+0x120>
   19658:	mov	r6, r8
   1965c:	mov	r2, #0
   19660:	mov	r0, r5
   19664:	mov	r1, r2
   19668:	bl	10478 <myhtml_create_stream_and_batch@plt>
   1966c:	cmp	r0, #0
   19670:	mov	r4, r0
   19674:	str	r0, [sp, #12]
   19678:	beq	19620 <myhtml_init@@Base+0xc4>
   1967c:	mov	r0, r4
   19680:	add	sp, sp, #16
   19684:	pop	{r4, r5, r6, r7, r8, pc}
   19688:	cmp	r6, #2
   1968c:	movcc	r6, #2
   19690:	sub	r2, r6, #1
   19694:	mov	r1, #1
   19698:	mov	r0, r5
   1969c:	bl	10478 <myhtml_create_stream_and_batch@plt>
   196a0:	cmp	r0, #0
   196a4:	mov	r4, r0
   196a8:	str	r0, [sp, #12]
   196ac:	bne	1967c <myhtml_init@@Base+0x120>
   196b0:	ldr	r4, [r5]
   196b4:	add	r0, sp, #12
   196b8:	bl	1076c <mythread_queue_list_create@plt>
   196bc:	ldr	r3, [r5, #4]
   196c0:	str	r0, [r4, #16]
   196c4:	ldr	r0, [r5]
   196c8:	ldr	r2, [r0, #16]
   196cc:	str	r2, [r3, #16]
   196d0:	ldr	r3, [pc, #168]	; 19780 <myhtml_init@@Base+0x224>
   196d4:	ldr	r3, [r7, r3]
   196d8:	str	r3, [sp]
   196dc:	ldr	r3, [pc, #152]	; 1977c <myhtml_init@@Base+0x220>
   196e0:	ldr	r2, [sp]
   196e4:	ldr	r3, [r7, r3]
   196e8:	str	r3, [sp, #4]
   196ec:	mov	r3, #4
   196f0:	ldr	r1, [sp, #4]
   196f4:	bl	10850 <myhread_entry_create@plt>
   196f8:	cmp	r0, #0
   196fc:	mov	r4, r0
   19700:	str	r0, [sp, #12]
   19704:	bne	1967c <myhtml_init@@Base+0x120>
   19708:	ldr	r0, [r5, #4]
   1970c:	ldr	r3, [r0, #8]
   19710:	cmp	r3, r4
   19714:	bls	19620 <myhtml_init@@Base+0xc4>
   19718:	ldr	r3, [pc, #100]	; 19784 <myhtml_init@@Base+0x228>
   1971c:	ldr	r3, [r7, r3]
   19720:	str	r3, [sp]
   19724:	ldr	r3, [pc, #92]	; 19788 <myhtml_init@@Base+0x22c>
   19728:	ldr	r2, [sp]
   1972c:	ldr	r3, [r7, r3]
   19730:	str	r3, [sp, #4]
   19734:	mov	r3, #4
   19738:	ldr	r1, [sp, #4]
   1973c:	bl	10850 <myhread_entry_create@plt>
   19740:	cmp	r0, #0
   19744:	str	r0, [sp, #12]
   19748:	addeq	r4, r4, #1
   1974c:	beq	19708 <myhtml_init@@Base+0x1ac>
   19750:	mov	r4, r0
   19754:	b	1967c <myhtml_init@@Base+0x120>
   19758:	cmp	r8, #1
   1975c:	beq	19658 <myhtml_init@@Base+0xfc>
   19760:	cmp	r8, #2
   19764:	movne	r6, #2
   19768:	bne	19690 <myhtml_init@@Base+0x134>
   1976c:	mov	r6, #1
   19770:	b	195c0 <myhtml_init@@Base+0x64>
   19774:	andeq	r6, pc, r4, ror sl	; <UNPREDICTABLE>
   19778:	andeq	r0, r0, r4, asr #14
   1977c:	andeq	r0, r0, r8, lsr r7
   19780:	andeq	r0, r0, r0, asr #19
   19784:	andeq	r0, r0, ip, asr #14
   19788:	andeq	r0, r0, ip, lsr #14

0001978c <myhtml_destroy@@Base>:
   1978c:	push	{r0, r1, r4, r5, r6, lr}
   19790:	subs	r4, r0, #0
   19794:	ldr	r6, [pc, #168]	; 19844 <myhtml_destroy@@Base+0xb8>
   19798:	add	r6, pc, r6
   1979c:	beq	19838 <myhtml_destroy@@Base+0xac>
   197a0:	bl	10724 <myhtml_destroy_marker@plt>
   197a4:	ldr	r0, [r4]
   197a8:	cmp	r0, #0
   197ac:	beq	19818 <myhtml_destroy@@Base+0x8c>
   197b0:	ldr	r5, [r0, #16]
   197b4:	cmp	r5, #0
   197b8:	beq	197c4 <myhtml_destroy@@Base+0x38>
   197bc:	mov	r1, r5
   197c0:	bl	10d6c <mythread_queue_list_wait_for_done@plt>
   197c4:	ldr	r3, [pc, #124]	; 19848 <myhtml_destroy@@Base+0xbc>
   197c8:	mov	r2, #0
   197cc:	ldr	r0, [r4]
   197d0:	ldr	r3, [r6, r3]
   197d4:	str	r3, [sp, #4]
   197d8:	mov	r3, #1
   197dc:	ldr	r1, [sp, #4]
   197e0:	bl	10940 <mythread_destroy@plt>
   197e4:	str	r0, [r4]
   197e8:	ldr	r0, [r4, #4]
   197ec:	cmp	r0, #0
   197f0:	beq	19808 <myhtml_destroy@@Base+0x7c>
   197f4:	mov	r3, #1
   197f8:	mov	r2, #0
   197fc:	ldr	r1, [sp, #4]
   19800:	bl	10940 <mythread_destroy@plt>
   19804:	str	r0, [r4, #4]
   19808:	cmp	r5, #0
   1980c:	beq	19818 <myhtml_destroy@@Base+0x8c>
   19810:	mov	r0, r5
   19814:	bl	100d0 <mythread_queue_list_destroy@plt>
   19818:	mov	r0, r4
   1981c:	bl	10094 <myhtml_tokenizer_state_destroy@plt>
   19820:	ldr	r0, [r4, #28]
   19824:	cmp	r0, #0
   19828:	beq	19830 <myhtml_destroy@@Base+0xa4>
   1982c:	bl	10d60 <mycore_free@plt>
   19830:	mov	r0, r4
   19834:	bl	10d60 <mycore_free@plt>
   19838:	mov	r0, #0
   1983c:	add	sp, sp, #8
   19840:	pop	{r4, r5, r6, pc}
   19844:	andeq	r6, pc, r0, ror #16
   19848:	andeq	r0, r0, r0, ror #16

0001984c <myhtml_parse_chunk@@Base>:
   1984c:	ldr	r3, [r0, #180]	; 0xb4
   19850:	push	{r4, r5, r6, lr}
   19854:	mov	r4, r0
   19858:	mov	r5, r1
   1985c:	mov	r6, r2
   19860:	tst	r3, #32
   19864:	beq	1986c <myhtml_parse_chunk@@Base+0x20>
   19868:	bl	10664 <myhtml_tree_clean@plt>
   1986c:	mov	r2, r6
   19870:	mov	r1, r5
   19874:	mov	r0, r4
   19878:	pop	{r4, r5, r6, lr}
   1987c:	b	10064 <myhtml_tokenizer_chunk@plt>

00019880 <myhtml_parse_chunk_fragment@@Base>:
   19880:	push	{r4, r5, r6, r7, r8, lr}
   19884:	mov	r4, r3
   19888:	mov	r5, r0
   1988c:	mov	r7, r1
   19890:	mov	r8, r2
   19894:	ldr	r3, [r0, #180]	; 0xb4
   19898:	ldr	r6, [sp, #24]
   1989c:	tst	r3, #32
   198a0:	beq	198a8 <myhtml_parse_chunk_fragment@@Base+0x28>
   198a4:	bl	10664 <myhtml_tree_clean@plt>
   198a8:	cmp	r4, #0
   198ac:	mov	r0, r5
   198b0:	moveq	r4, #42	; 0x2a
   198b4:	cmp	r6, #0
   198b8:	movne	r2, r6
   198bc:	moveq	r2, #1
   198c0:	mov	r1, r4
   198c4:	bl	fc38 <myhtml_tokenizer_fragment_init@plt>
   198c8:	cmp	r0, #0
   198cc:	beq	198e4 <myhtml_parse_chunk_fragment@@Base+0x64>
   198d0:	mov	r2, r8
   198d4:	mov	r1, r7
   198d8:	mov	r0, r5
   198dc:	pop	{r4, r5, r6, r7, r8, lr}
   198e0:	b	10064 <myhtml_tokenizer_chunk@plt>
   198e4:	movw	r0, #37165	; 0x912d
   198e8:	pop	{r4, r5, r6, r7, r8, pc}

000198ec <myhtml_parse_chunk_single@@Base>:
   198ec:	ldr	r3, [r0, #180]	; 0xb4
   198f0:	tst	r3, #16
   198f4:	ldreq	r3, [r0, #180]	; 0xb4
   198f8:	orreq	r3, r3, #16
   198fc:	streq	r3, [r0, #180]	; 0xb4
   19900:	b	109d0 <myhtml_parse_chunk@plt>

00019904 <myhtml_parse_chunk_fragment_single@@Base>:
   19904:	ldr	ip, [r0, #180]	; 0xb4
   19908:	push	{lr}		; (str lr, [sp, #-4]!)
   1990c:	ldr	lr, [sp, #4]
   19910:	tst	ip, #16
   19914:	ldreq	ip, [r0, #180]	; 0xb4
   19918:	orreq	ip, ip, #16
   1991c:	streq	ip, [r0, #180]	; 0xb4
   19920:	str	lr, [sp, #4]
   19924:	pop	{lr}		; (ldr lr, [sp], #4)
   19928:	b	10538 <myhtml_parse_chunk_fragment@plt>

0001992c <myhtml_parse_chunk_end@@Base>:
   1992c:	b	10208 <myhtml_tokenizer_end@plt>

00019930 <myhtml_encoding_set@@Base>:
   19930:	cmp	r1, #41	; 0x29
   19934:	strls	r1, [r0, #200]	; 0xc8
   19938:	strls	r1, [r0, #204]	; 0xcc
   1993c:	bx	lr

00019940 <myhtml_parse@@Base>:
   19940:	push	{r4, r5, r6, r7, r8, lr}
   19944:	mov	r6, r3
   19948:	mov	r4, r0
   1994c:	mov	r7, r1
   19950:	mov	r5, r2
   19954:	ldr	r3, [r0, #180]	; 0xb4
   19958:	tst	r3, #32
   1995c:	beq	19964 <myhtml_parse@@Base+0x24>
   19960:	bl	10664 <myhtml_tree_clean@plt>
   19964:	mov	r1, r7
   19968:	mov	r0, r4
   1996c:	bl	10634 <myhtml_encoding_set@plt>
   19970:	mov	r2, r6
   19974:	mov	r1, r5
   19978:	mov	r0, r4
   1997c:	bl	100f4 <myhtml_tokenizer_begin@plt>
   19980:	cmp	r0, #0
   19984:	popne	{r4, r5, r6, r7, r8, pc}
   19988:	mov	r0, r4
   1998c:	pop	{r4, r5, r6, r7, r8, lr}
   19990:	b	10208 <myhtml_tokenizer_end@plt>

00019994 <myhtml_parse_fragment@@Base>:
   19994:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19998:	mov	r8, r3
   1999c:	mov	r4, r0
   199a0:	mov	r9, r1
   199a4:	mov	r7, r2
   199a8:	ldr	r3, [r0, #180]	; 0xb4
   199ac:	ldr	r5, [sp, #32]
   199b0:	ldr	r6, [sp, #36]	; 0x24
   199b4:	tst	r3, #32
   199b8:	beq	199c0 <myhtml_parse_fragment@@Base+0x2c>
   199bc:	bl	10664 <myhtml_tree_clean@plt>
   199c0:	cmp	r5, #0
   199c4:	mov	r0, r4
   199c8:	moveq	r5, #42	; 0x2a
   199cc:	cmp	r6, #0
   199d0:	movne	r2, r6
   199d4:	moveq	r2, #1
   199d8:	mov	r1, r5
   199dc:	bl	fc38 <myhtml_tokenizer_fragment_init@plt>
   199e0:	cmp	r0, #0
   199e4:	beq	19a18 <myhtml_parse_fragment@@Base+0x84>
   199e8:	mov	r1, r9
   199ec:	mov	r0, r4
   199f0:	bl	10634 <myhtml_encoding_set@plt>
   199f4:	mov	r2, r8
   199f8:	mov	r1, r7
   199fc:	mov	r0, r4
   19a00:	bl	100f4 <myhtml_tokenizer_begin@plt>
   19a04:	cmp	r0, #0
   19a08:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   19a0c:	mov	r0, r4
   19a10:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   19a14:	b	10208 <myhtml_tokenizer_end@plt>
   19a18:	movw	r0, #37165	; 0x912d
   19a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00019a20 <myhtml_parse_single@@Base>:
   19a20:	push	{r4, r5, r6, r7, r8, lr}
   19a24:	mov	r6, r3
   19a28:	mov	r4, r0
   19a2c:	mov	r7, r1
   19a30:	mov	r5, r2
   19a34:	ldr	r3, [r0, #180]	; 0xb4
   19a38:	tst	r3, #32
   19a3c:	beq	19a44 <myhtml_parse_single@@Base+0x24>
   19a40:	bl	10664 <myhtml_tree_clean@plt>
   19a44:	ldr	r3, [r4, #180]	; 0xb4
   19a48:	mov	r1, r7
   19a4c:	mov	r0, r4
   19a50:	orr	r3, r3, #16
   19a54:	str	r3, [r4, #180]	; 0xb4
   19a58:	bl	10634 <myhtml_encoding_set@plt>
   19a5c:	mov	r2, r6
   19a60:	mov	r1, r5
   19a64:	mov	r0, r4
   19a68:	bl	100f4 <myhtml_tokenizer_begin@plt>
   19a6c:	cmp	r0, #0
   19a70:	popne	{r4, r5, r6, r7, r8, pc}
   19a74:	mov	r0, r4
   19a78:	pop	{r4, r5, r6, r7, r8, lr}
   19a7c:	b	10208 <myhtml_tokenizer_end@plt>

00019a80 <myhtml_parse_fragment_single@@Base>:
   19a80:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19a84:	mov	r8, r3
   19a88:	mov	r4, r0
   19a8c:	mov	r9, r1
   19a90:	mov	r7, r2
   19a94:	ldr	r3, [r0, #180]	; 0xb4
   19a98:	ldr	r5, [sp, #32]
   19a9c:	ldr	r6, [sp, #36]	; 0x24
   19aa0:	tst	r3, #32
   19aa4:	beq	19aac <myhtml_parse_fragment_single@@Base+0x2c>
   19aa8:	bl	10664 <myhtml_tree_clean@plt>
   19aac:	ldr	r3, [r4, #180]	; 0xb4
   19ab0:	cmp	r5, #0
   19ab4:	mov	r0, r4
   19ab8:	moveq	r5, #42	; 0x2a
   19abc:	cmp	r6, #0
   19ac0:	movne	r2, r6
   19ac4:	moveq	r2, #1
   19ac8:	mov	r1, r5
   19acc:	orr	r3, r3, #16
   19ad0:	str	r3, [r4, #180]	; 0xb4
   19ad4:	bl	fc38 <myhtml_tokenizer_fragment_init@plt>
   19ad8:	cmp	r0, #0
   19adc:	beq	19b10 <myhtml_parse_fragment_single@@Base+0x90>
   19ae0:	mov	r1, r9
   19ae4:	mov	r0, r4
   19ae8:	bl	10634 <myhtml_encoding_set@plt>
   19aec:	mov	r2, r8
   19af0:	mov	r1, r7
   19af4:	mov	r0, r4
   19af8:	bl	100f4 <myhtml_tokenizer_begin@plt>
   19afc:	cmp	r0, #0
   19b00:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   19b04:	mov	r0, r4
   19b08:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   19b0c:	b	10208 <myhtml_tokenizer_end@plt>
   19b10:	movw	r0, #37165	; 0x912d
   19b14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00019b18 <myhtml_encoding_get@@Base>:
   19b18:	ldr	r0, [r0, #200]	; 0xc8
   19b1c:	bx	lr

00019b20 <myhtml_node_first@@Base>:
   19b20:	ldr	r3, [r0, #84]	; 0x54
   19b24:	ldr	r2, [r0, #88]	; 0x58
   19b28:	cmp	r2, #0
   19b2c:	beq	19b3c <myhtml_node_first@@Base+0x1c>
   19b30:	cmp	r3, #0
   19b34:	beq	19b44 <myhtml_node_first@@Base+0x24>
   19b38:	ldr	r3, [r3, #20]
   19b3c:	cmp	r3, #0
   19b40:	ldrne	r3, [r3, #20]
   19b44:	mov	r0, r3
   19b48:	bx	lr

00019b4c <myhtml_node_next@@Base>:
   19b4c:	ldr	r0, [r0, #16]
   19b50:	bx	lr

00019b54 <myhtml_node_prev@@Base>:
   19b54:	ldr	r0, [r0, #12]
   19b58:	bx	lr

00019b5c <myhtml_node_parent@@Base>:
   19b5c:	ldr	r0, [r0, #24]
   19b60:	bx	lr

00019b64 <myhtml_node_child@@Base>:
   19b64:	ldr	r0, [r0, #20]
   19b68:	bx	lr

00019b6c <myhtml_node_last_child@@Base>:
   19b6c:	ldr	r0, [r0, #28]
   19b70:	bx	lr

00019b74 <myhtml_node_create@@Base>:
   19b74:	push	{r4, r5, r6, lr}
   19b78:	mov	r5, r1
   19b7c:	mov	r4, r2
   19b80:	bl	ff80 <myhtml_tree_node_create@plt>
   19b84:	str	r5, [r0, #4]
   19b88:	str	r4, [r0, #8]
   19b8c:	pop	{r4, r5, r6, pc}

00019b90 <myhtml_node_remove@@Base>:
   19b90:	b	10d84 <myhtml_tree_node_remove@plt>

00019b94 <myhtml_node_delete@@Base>:
   19b94:	b	10d54 <myhtml_tree_node_delete@plt>

00019b98 <myhtml_node_delete_recursive@@Base>:
   19b98:	b	ff8c <myhtml_tree_node_delete_recursive@plt>

00019b9c <myhtml_node_free@@Base>:
   19b9c:	b	10c94 <myhtml_tree_node_free@plt>

00019ba0 <myhtml_node_insert_before@@Base>:
   19ba0:	cmp	r1, #0
   19ba4:	cmpne	r0, #0
   19ba8:	push	{r4, lr}
   19bac:	moveq	r4, #0
   19bb0:	beq	19bbc <myhtml_node_insert_before@@Base+0x1c>
   19bb4:	mov	r4, r1
   19bb8:	bl	10388 <myhtml_tree_node_insert_before@plt>
   19bbc:	mov	r0, r4
   19bc0:	pop	{r4, pc}

00019bc4 <myhtml_node_insert_after@@Base>:
   19bc4:	cmp	r1, #0
   19bc8:	cmpne	r0, #0
   19bcc:	push	{r4, lr}
   19bd0:	moveq	r4, #0
   19bd4:	beq	19be0 <myhtml_node_insert_after@@Base+0x1c>
   19bd8:	mov	r4, r1
   19bdc:	bl	102f8 <myhtml_tree_node_insert_after@plt>
   19be0:	mov	r0, r4
   19be4:	pop	{r4, pc}

00019be8 <myhtml_node_append_child@@Base>:
   19be8:	cmp	r1, #0
   19bec:	cmpne	r0, #0
   19bf0:	push	{r4, lr}
   19bf4:	moveq	r4, #0
   19bf8:	beq	19c04 <myhtml_node_append_child@@Base+0x1c>
   19bfc:	mov	r4, r1
   19c00:	bl	1064c <myhtml_tree_node_add_child@plt>
   19c04:	mov	r0, r4
   19c08:	pop	{r4, pc}

00019c0c <myhtml_node_insert_to_appropriate_place@@Base>:
   19c0c:	push	{r0, r1, r2, r4, r5, lr}
   19c10:	mov	r5, r1
   19c14:	clz	r1, r1
   19c18:	lsr	r1, r1, #5
   19c1c:	cmp	r0, #0
   19c20:	moveq	r4, #1
   19c24:	movne	r4, r1
   19c28:	cmp	r4, #0
   19c2c:	movne	r5, #0
   19c30:	bne	19c5c <myhtml_node_insert_to_appropriate_place@@Base+0x50>
   19c34:	ldr	r3, [r0, #40]	; 0x28
   19c38:	mov	r2, #1
   19c3c:	add	r1, sp, #4
   19c40:	strb	r2, [r3, #188]	; 0xbc
   19c44:	bl	109c4 <myhtml_tree_appropriate_place_inserting_in_tree@plt>
   19c48:	ldr	r3, [r0, #40]	; 0x28
   19c4c:	mov	r1, r5
   19c50:	ldr	r2, [sp, #4]
   19c54:	strb	r4, [r3, #188]	; 0xbc
   19c58:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   19c5c:	mov	r0, r5
   19c60:	add	sp, sp, #12
   19c64:	pop	{r4, r5, pc}

00019c68 <myhtml_node_text_set@@Base>:
   19c68:	push	{r4, r5, r6, r7, r8, lr}
   19c6c:	mov	r4, r0
   19c70:	clz	r0, r0
   19c74:	lsr	r0, r0, #5
   19c78:	cmp	r3, #41	; 0x29
   19c7c:	orrhi	r0, r0, #1
   19c80:	cmp	r0, #0
   19c84:	beq	19c90 <myhtml_node_text_set@@Base+0x28>
   19c88:	mov	r0, #0
   19c8c:	pop	{r4, r5, r6, r7, r8, pc}
   19c90:	mov	r7, r3
   19c94:	ldr	r3, [r4, #32]
   19c98:	mov	r5, r2
   19c9c:	mov	r8, r1
   19ca0:	ldr	r6, [r4, #40]	; 0x28
   19ca4:	cmp	r3, #0
   19ca8:	bne	19cd0 <myhtml_node_text_set@@Base+0x68>
   19cac:	ldr	r0, [r6, #8]
   19cb0:	ldr	r1, [r6, #40]	; 0x28
   19cb4:	bl	109a0 <myhtml_token_node_create@plt>
   19cb8:	cmp	r0, #0
   19cbc:	str	r0, [r4, #32]
   19cc0:	beq	19c88 <myhtml_node_text_set@@Base+0x20>
   19cc4:	ldr	r3, [r0, #48]	; 0x30
   19cc8:	orr	r3, r3, #4
   19ccc:	str	r3, [r0, #48]	; 0x30
   19cd0:	ldr	r0, [r4, #32]
   19cd4:	ldr	r2, [r0, #4]
   19cd8:	cmp	r2, #0
   19cdc:	addeq	r3, r5, #2
   19ce0:	addeq	r2, r0, #4
   19ce4:	beq	19d14 <myhtml_node_text_set@@Base+0xac>
   19ce8:	ldr	r3, [r0, #8]
   19cec:	cmp	r3, r5
   19cf0:	movcs	r3, #0
   19cf4:	strcs	r3, [r0, #12]
   19cf8:	bcs	19d20 <myhtml_node_text_set@@Base+0xb8>
   19cfc:	ldr	r1, [r0, #20]
   19d00:	ldr	r0, [r6, #4]
   19d04:	bl	106ac <mchar_async_free@plt>
   19d08:	ldr	r2, [r4, #32]
   19d0c:	mov	r3, r5
   19d10:	add	r2, r2, #4
   19d14:	ldr	r0, [r6, #4]
   19d18:	ldr	r1, [r6, #52]	; 0x34
   19d1c:	bl	105a4 <mycore_string_init@plt>
   19d20:	ldr	r0, [r4, #32]
   19d24:	cmp	r7, #0
   19d28:	add	r0, r0, #4
   19d2c:	beq	19d58 <myhtml_node_text_set@@Base+0xf0>
   19d30:	mov	r3, r7
   19d34:	mov	r2, r5
   19d38:	mov	r1, r8
   19d3c:	bl	103f4 <myencoding_string_append@plt>
   19d40:	ldr	r0, [r4, #32]
   19d44:	mov	r3, #0
   19d48:	add	r0, r0, #4
   19d4c:	str	r3, [r0, #20]
   19d50:	str	r3, [r0, #24]
   19d54:	pop	{r4, r5, r6, r7, r8, pc}
   19d58:	mov	r2, r5
   19d5c:	mov	r1, r8
   19d60:	bl	10868 <mycore_string_append@plt>
   19d64:	b	19d40 <myhtml_node_text_set@@Base+0xd8>

00019d68 <myhtml_node_text_set_with_charef@@Base>:
   19d68:	push	{r4, r5, r6, r7, r8, lr}
   19d6c:	mov	r4, r0
   19d70:	clz	r0, r0
   19d74:	lsr	r0, r0, #5
   19d78:	sub	sp, sp, #64	; 0x40
   19d7c:	cmp	r3, #41	; 0x29
   19d80:	orrhi	r0, r0, #1
   19d84:	cmp	r0, #0
   19d88:	beq	19d98 <myhtml_node_text_set_with_charef@@Base+0x30>
   19d8c:	mov	r0, #0
   19d90:	add	sp, sp, #64	; 0x40
   19d94:	pop	{r4, r5, r6, r7, r8, pc}
   19d98:	mov	r7, r3
   19d9c:	ldr	r3, [r4, #32]
   19da0:	mov	r6, r2
   19da4:	mov	r8, r1
   19da8:	ldr	r5, [r4, #40]	; 0x28
   19dac:	cmp	r3, #0
   19db0:	bne	19dd8 <myhtml_node_text_set_with_charef@@Base+0x70>
   19db4:	ldr	r0, [r5, #8]
   19db8:	ldr	r1, [r5, #40]	; 0x28
   19dbc:	bl	109a0 <myhtml_token_node_create@plt>
   19dc0:	cmp	r0, #0
   19dc4:	str	r0, [r4, #32]
   19dc8:	beq	19d8c <myhtml_node_text_set_with_charef@@Base+0x24>
   19dcc:	ldr	r3, [r0, #48]	; 0x30
   19dd0:	orr	r3, r3, #4
   19dd4:	str	r3, [r0, #48]	; 0x30
   19dd8:	ldr	r0, [r4, #32]
   19ddc:	ldr	r2, [r0, #4]
   19de0:	cmp	r2, #0
   19de4:	addeq	r3, r6, #2
   19de8:	addeq	r2, r0, #4
   19dec:	beq	19e1c <myhtml_node_text_set_with_charef@@Base+0xb4>
   19df0:	ldr	r3, [r0, #8]
   19df4:	cmp	r3, r6
   19df8:	movcs	r3, #0
   19dfc:	strcs	r3, [r0, #12]
   19e00:	bcs	19e28 <myhtml_node_text_set_with_charef@@Base+0xc0>
   19e04:	ldr	r1, [r0, #20]
   19e08:	ldr	r0, [r5, #4]
   19e0c:	bl	106ac <mchar_async_free@plt>
   19e10:	ldr	r2, [r4, #32]
   19e14:	mov	r3, r6
   19e18:	add	r2, r2, #4
   19e1c:	ldr	r0, [r5, #4]
   19e20:	ldr	r1, [r5, #52]	; 0x34
   19e24:	bl	105a4 <mycore_string_init@plt>
   19e28:	mov	r5, sp
   19e2c:	mov	r0, r5
   19e30:	bl	10484 <myhtml_data_process_entry_clean@plt>
   19e34:	add	r0, sp, #8
   19e38:	str	r7, [sp, #4]
   19e3c:	bl	10160 <myencoding_result_clean@plt>
   19e40:	ldr	r1, [r4, #32]
   19e44:	mov	r3, r6
   19e48:	mov	r2, r8
   19e4c:	mov	r0, r5
   19e50:	add	r1, r1, #4
   19e54:	bl	106e8 <myhtml_data_process@plt>
   19e58:	ldr	r1, [r4, #32]
   19e5c:	mov	r0, r5
   19e60:	add	r1, r1, #4
   19e64:	bl	108bc <myhtml_data_process_end@plt>
   19e68:	ldr	r0, [r4, #32]
   19e6c:	mov	r3, #0
   19e70:	add	r0, r0, #4
   19e74:	str	r3, [r0, #20]
   19e78:	str	r3, [r0, #24]
   19e7c:	b	19d90 <myhtml_node_text_set_with_charef@@Base+0x28>

00019e80 <myhtml_node_token@@Base>:
   19e80:	ldr	r0, [r0, #32]
   19e84:	bx	lr

00019e88 <myhtml_node_namespace@@Base>:
   19e88:	ldr	r0, [r0, #8]
   19e8c:	bx	lr

00019e90 <myhtml_node_namespace_set@@Base>:
   19e90:	str	r1, [r0, #8]
   19e94:	bx	lr

00019e98 <myhtml_node_tag_id@@Base>:
   19e98:	ldr	r0, [r0, #4]
   19e9c:	bx	lr

00019ea0 <myhtml_tag_name_by_id@@Base>:
   19ea0:	push	{r4, lr}
   19ea4:	subs	r4, r2, #0
   19ea8:	movne	r3, #0
   19eac:	strne	r3, [r4]
   19eb0:	cmp	r0, #0
   19eb4:	bne	19ec0 <myhtml_tag_name_by_id@@Base+0x20>
   19eb8:	mov	r0, #0
   19ebc:	pop	{r4, pc}
   19ec0:	ldr	r0, [r0, #28]
   19ec4:	cmp	r0, #0
   19ec8:	beq	19eb8 <myhtml_tag_name_by_id@@Base+0x18>
   19ecc:	bl	109b8 <myhtml_tag_get_by_id@plt>
   19ed0:	cmp	r0, #0
   19ed4:	beq	19eb8 <myhtml_tag_name_by_id@@Base+0x18>
   19ed8:	cmp	r4, #0
   19edc:	ldrne	r3, [r0, #8]
   19ee0:	ldr	r0, [r0, #4]
   19ee4:	strne	r3, [r4]
   19ee8:	pop	{r4, pc}

00019eec <myhtml_tag_id_by_name@@Base>:
   19eec:	cmp	r0, #0
   19ef0:	bne	19f04 <myhtml_tag_id_by_name@@Base+0x18>
   19ef4:	mov	r0, #0
   19ef8:	bx	lr
   19efc:	mov	r0, #0
   19f00:	pop	{r4, pc}
   19f04:	ldr	r0, [r0, #28]
   19f08:	cmp	r0, #0
   19f0c:	beq	19ef4 <myhtml_tag_id_by_name@@Base+0x8>
   19f10:	push	{r4, lr}
   19f14:	bl	10b08 <myhtml_tag_get_by_name@plt>
   19f18:	cmp	r0, #0
   19f1c:	beq	19efc <myhtml_tag_id_by_name@@Base+0x10>
   19f20:	ldr	r0, [r0]
   19f24:	pop	{r4, pc}

00019f28 <myhtml_node_is_close_self@@Base>:
   19f28:	ldr	r0, [r0, #32]
   19f2c:	cmp	r0, #0
   19f30:	ldrne	r0, [r0, #48]	; 0x30
   19f34:	ubfxne	r0, r0, #1, #1
   19f38:	bx	lr

00019f3c <myhtml_node_is_void_element@@Base>:
   19f3c:	ldr	r0, [r0, #4]
   19f40:	cmp	r0, #70	; 0x46
   19f44:	bhi	19f94 <myhtml_node_is_void_element@@Base+0x58>
   19f48:	cmp	r0, #69	; 0x45
   19f4c:	bcs	19fd0 <myhtml_node_is_void_element@@Base+0x94>
   19f50:	cmp	r0, #31
   19f54:	beq	19fd0 <myhtml_node_is_void_element@@Base+0x94>
   19f58:	bhi	19f7c <myhtml_node_is_void_element@@Base+0x40>
   19f5c:	cmp	r0, #15
   19f60:	beq	19fd0 <myhtml_node_is_void_element@@Base+0x94>
   19f64:	cmp	r0, #24
   19f68:	beq	19fd0 <myhtml_node_is_void_element@@Base+0x94>
   19f6c:	cmp	r0, #10
   19f70:	movne	r0, #0
   19f74:	moveq	r0, #1
   19f78:	bx	lr
   19f7c:	cmp	r0, #46	; 0x2e
   19f80:	beq	19fd0 <myhtml_node_is_void_element@@Base+0x94>
   19f84:	cmp	r0, #64	; 0x40
   19f88:	beq	19fd0 <myhtml_node_is_void_element@@Base+0x94>
   19f8c:	cmp	r0, #33	; 0x21
   19f90:	b	19f70 <myhtml_node_is_void_element@@Base+0x34>
   19f94:	cmp	r0, #100	; 0x64
   19f98:	beq	19fd0 <myhtml_node_is_void_element@@Base+0x94>
   19f9c:	bhi	19fb8 <myhtml_node_is_void_element@@Base+0x7c>
   19fa0:	cmp	r0, #78	; 0x4e
   19fa4:	beq	19fd0 <myhtml_node_is_void_element@@Base+0x94>
   19fa8:	cmp	r0, #86	; 0x56
   19fac:	beq	19fd0 <myhtml_node_is_void_element@@Base+0x94>
   19fb0:	cmp	r0, #74	; 0x4a
   19fb4:	b	19f70 <myhtml_node_is_void_element@@Base+0x34>
   19fb8:	cmp	r0, #136	; 0x88
   19fbc:	beq	19fd0 <myhtml_node_is_void_element@@Base+0x94>
   19fc0:	cmp	r0, #142	; 0x8e
   19fc4:	beq	19fd0 <myhtml_node_is_void_element@@Base+0x94>
   19fc8:	cmp	r0, #116	; 0x74
   19fcc:	b	19f70 <myhtml_node_is_void_element@@Base+0x34>
   19fd0:	mov	r0, #1
   19fd4:	bx	lr

00019fd8 <myhtml_node_attribute_first@@Base>:
   19fd8:	ldr	r0, [r0, #32]
   19fdc:	cmp	r0, #0
   19fe0:	ldrne	r0, [r0, #40]	; 0x28
   19fe4:	bx	lr

00019fe8 <myhtml_node_attribute_last@@Base>:
   19fe8:	ldr	r0, [r0, #32]
   19fec:	cmp	r0, #0
   19ff0:	ldrne	r0, [r0, #44]	; 0x2c
   19ff4:	bx	lr

00019ff8 <myhtml_node_text@@Base>:
   19ff8:	ldr	r3, [r0, #32]
   19ffc:	cmp	r3, #0
   1a000:	beq	1a028 <myhtml_node_text@@Base+0x30>
   1a004:	ldr	r2, [r3, #12]
   1a008:	cmp	r2, #0
   1a00c:	beq	1a028 <myhtml_node_text@@Base+0x30>
   1a010:	ldr	r0, [r3, #4]
   1a014:	cmp	r0, #0
   1a018:	beq	1a028 <myhtml_node_text@@Base+0x30>
   1a01c:	cmp	r1, #0
   1a020:	strne	r2, [r1]
   1a024:	bx	lr
   1a028:	mov	r0, #0
   1a02c:	cmp	r1, #0
   1a030:	moveq	r0, r1
   1a034:	strne	r0, [r1]
   1a038:	bx	lr

0001a03c <myhtml_node_string@@Base>:
   1a03c:	cmp	r0, #0
   1a040:	bxeq	lr
   1a044:	ldr	r0, [r0, #32]
   1a048:	cmp	r0, #0
   1a04c:	addne	r0, r0, #4
   1a050:	bx	lr

0001a054 <myhtml_node_raw_position@@Base>:
   1a054:	cmp	r1, #0
   1a058:	beq	1a07c <myhtml_node_raw_position@@Base+0x28>
   1a05c:	ldr	r3, [r1, #32]
   1a060:	cmp	r3, #0
   1a064:	beq	1a07c <myhtml_node_raw_position@@Base+0x28>
   1a068:	ldr	r2, [r3, #28]
   1a06c:	ldr	r3, [r3, #24]
   1a070:	str	r3, [r0]
   1a074:	str	r2, [r0, #4]
   1a078:	bx	lr
   1a07c:	mov	r3, #0
   1a080:	str	r3, [r0]
   1a084:	str	r3, [r0, #4]
   1a088:	bx	lr

0001a08c <myhtml_node_element_position@@Base>:
   1a08c:	cmp	r1, #0
   1a090:	beq	1a0b4 <myhtml_node_element_position@@Base+0x28>
   1a094:	ldr	r3, [r1, #32]
   1a098:	cmp	r3, #0
   1a09c:	beq	1a0b4 <myhtml_node_element_position@@Base+0x28>
   1a0a0:	ldr	r2, [r3, #36]	; 0x24
   1a0a4:	ldr	r3, [r3, #32]
   1a0a8:	str	r3, [r0]
   1a0ac:	str	r2, [r0, #4]
   1a0b0:	bx	lr
   1a0b4:	mov	r3, #0
   1a0b8:	str	r3, [r0]
   1a0bc:	str	r3, [r0, #4]
   1a0c0:	bx	lr

0001a0c4 <myhtml_node_set_data@@Base>:
   1a0c4:	str	r1, [r0, #36]	; 0x24
   1a0c8:	bx	lr

0001a0cc <myhtml_node_get_data@@Base>:
   1a0cc:	ldr	r0, [r0, #36]	; 0x24
   1a0d0:	bx	lr

0001a0d4 <myhtml_node_tree@@Base>:
   1a0d4:	ldr	r0, [r0, #40]	; 0x28
   1a0d8:	bx	lr

0001a0dc <myhtml_attribute_next@@Base>:
   1a0dc:	ldr	r0, [r0]
   1a0e0:	bx	lr

0001a0e4 <myhtml_attribute_prev@@Base>:
   1a0e4:	ldr	r0, [r0, #4]
   1a0e8:	bx	lr

0001a0ec <myhtml_attribute_namespace@@Base>:
   1a0ec:	ldr	r0, [r0, #64]	; 0x40
   1a0f0:	bx	lr

0001a0f4 <myhtml_attribute_namespace_set@@Base>:
   1a0f4:	str	r1, [r0, #64]	; 0x40
   1a0f8:	bx	lr

0001a0fc <myhtml_attribute_key@@Base>:
   1a0fc:	mov	r3, r0
   1a100:	ldr	r0, [r0, #8]
   1a104:	cmp	r0, #0
   1a108:	beq	1a124 <myhtml_attribute_key@@Base+0x28>
   1a10c:	ldr	r3, [r3, #16]
   1a110:	cmp	r3, #0
   1a114:	beq	1a124 <myhtml_attribute_key@@Base+0x28>
   1a118:	cmp	r1, #0
   1a11c:	strne	r3, [r1]
   1a120:	bx	lr
   1a124:	mov	r0, #0
   1a128:	cmp	r1, #0
   1a12c:	moveq	r0, r1
   1a130:	strne	r0, [r1]
   1a134:	bx	lr

0001a138 <myhtml_attribute_value@@Base>:
   1a138:	mov	r3, r0
   1a13c:	ldr	r0, [r0, #28]
   1a140:	cmp	r0, #0
   1a144:	beq	1a160 <myhtml_attribute_value@@Base+0x28>
   1a148:	ldr	r3, [r3, #36]	; 0x24
   1a14c:	cmp	r3, #0
   1a150:	beq	1a160 <myhtml_attribute_value@@Base+0x28>
   1a154:	cmp	r1, #0
   1a158:	strne	r3, [r1]
   1a15c:	bx	lr
   1a160:	mov	r0, #0
   1a164:	cmp	r1, #0
   1a168:	moveq	r0, r1
   1a16c:	strne	r0, [r1]
   1a170:	bx	lr

0001a174 <myhtml_attribute_key_string@@Base>:
   1a174:	cmp	r0, #0
   1a178:	addne	r0, r0, #8
   1a17c:	bx	lr

0001a180 <myhtml_attribute_value_string@@Base>:
   1a180:	cmp	r0, #0
   1a184:	addne	r0, r0, #28
   1a188:	bx	lr

0001a18c <myhtml_attribute_by_key@@Base>:
   1a18c:	cmp	r0, #0
   1a190:	beq	1a1a4 <myhtml_attribute_by_key@@Base+0x18>
   1a194:	ldr	r0, [r0, #32]
   1a198:	cmp	r0, #0
   1a19c:	beq	1a1a4 <myhtml_attribute_by_key@@Base+0x18>
   1a1a0:	b	10e44 <myhtml_token_attr_by_name@plt>
   1a1a4:	mov	r0, #0
   1a1a8:	bx	lr

0001a1ac <myhtml_attribute_add@@Base>:
   1a1ac:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   1a1b0:	subs	r4, r0, #0
   1a1b4:	bne	1a1c4 <myhtml_attribute_add@@Base+0x18>
   1a1b8:	mov	r0, #0
   1a1bc:	add	sp, sp, #16
   1a1c0:	pop	{r4, r5, r6, r7, r8, pc}
   1a1c4:	mov	r8, r3
   1a1c8:	ldr	r3, [r4, #32]
   1a1cc:	mov	r7, r2
   1a1d0:	mov	r6, r1
   1a1d4:	ldr	r5, [r4, #40]	; 0x28
   1a1d8:	cmp	r3, #0
   1a1dc:	bne	1a204 <myhtml_attribute_add@@Base+0x58>
   1a1e0:	ldr	r0, [r5, #8]
   1a1e4:	ldr	r1, [r5, #40]	; 0x28
   1a1e8:	bl	109a0 <myhtml_token_node_create@plt>
   1a1ec:	cmp	r0, #0
   1a1f0:	str	r0, [r4, #32]
   1a1f4:	beq	1a1b8 <myhtml_attribute_add@@Base+0xc>
   1a1f8:	ldr	r3, [r0, #48]	; 0x30
   1a1fc:	orr	r3, r3, #4
   1a200:	str	r3, [r0, #48]	; 0x30
   1a204:	ldr	r3, [sp, #44]	; 0x2c
   1a208:	mov	r2, r6
   1a20c:	str	r3, [sp, #12]
   1a210:	ldr	r3, [r5, #40]	; 0x28
   1a214:	str	r8, [sp]
   1a218:	str	r3, [sp, #8]
   1a21c:	ldr	r3, [sp, #40]	; 0x28
   1a220:	str	r3, [sp, #4]
   1a224:	mov	r3, r7
   1a228:	ldr	r0, [r5, #8]
   1a22c:	ldr	r1, [r4, #32]
   1a230:	bl	10784 <myhtml_token_node_attr_append_with_convert_encoding@plt>
   1a234:	b	1a1bc <myhtml_attribute_add@@Base+0x10>

0001a238 <myhtml_attribute_remove@@Base>:
   1a238:	cmp	r0, #0
   1a23c:	beq	1a250 <myhtml_attribute_remove@@Base+0x18>
   1a240:	ldr	r0, [r0, #32]
   1a244:	cmp	r0, #0
   1a248:	beq	1a250 <myhtml_attribute_remove@@Base+0x18>
   1a24c:	b	10508 <myhtml_token_attr_remove@plt>
   1a250:	mov	r0, #0
   1a254:	bx	lr

0001a258 <myhtml_attribute_remove_by_key@@Base>:
   1a258:	cmp	r0, #0
   1a25c:	beq	1a270 <myhtml_attribute_remove_by_key@@Base+0x18>
   1a260:	ldr	r0, [r0, #32]
   1a264:	cmp	r0, #0
   1a268:	beq	1a270 <myhtml_attribute_remove_by_key@@Base+0x18>
   1a26c:	b	10e2c <myhtml_token_attr_remove_by_name@plt>
   1a270:	mov	r0, #0
   1a274:	bx	lr

0001a278 <myhtml_attribute_free@@Base>:
   1a278:	ldr	r2, [r1, #8]
   1a27c:	push	{r4, r5, r6, lr}
   1a280:	mov	r5, r0
   1a284:	mov	r4, r1
   1a288:	cmp	r2, #0
   1a28c:	beq	1a298 <myhtml_attribute_free@@Base+0x20>
   1a290:	ldrd	r0, [r1, #20]
   1a294:	bl	106ac <mchar_async_free@plt>
   1a298:	ldr	r2, [r4, #28]
   1a29c:	cmp	r2, #0
   1a2a0:	beq	1a2ac <myhtml_attribute_free@@Base+0x34>
   1a2a4:	ldrd	r0, [r4, #40]	; 0x28
   1a2a8:	bl	106ac <mchar_async_free@plt>
   1a2ac:	ldr	r3, [r5, #8]
   1a2b0:	mov	r1, r4
   1a2b4:	pop	{r4, r5, r6, lr}
   1a2b8:	ldr	r0, [r3, #8]
   1a2bc:	b	ffec <mcobject_async_free@plt>

0001a2c0 <myhtml_attribute_delete@@Base>:
   1a2c0:	cmp	r1, #0
   1a2c4:	bxeq	lr
   1a2c8:	push	{r4, r5, r6, lr}
   1a2cc:	mov	r5, r0
   1a2d0:	ldr	r0, [r1, #32]
   1a2d4:	cmp	r0, #0
   1a2d8:	popeq	{r4, r5, r6, pc}
   1a2dc:	mov	r4, r2
   1a2e0:	mov	r1, r2
   1a2e4:	bl	10508 <myhtml_token_attr_remove@plt>
   1a2e8:	mov	r1, r4
   1a2ec:	mov	r0, r5
   1a2f0:	pop	{r4, r5, r6, lr}
   1a2f4:	b	1073c <myhtml_attribute_free@plt>

0001a2f8 <myhtml_attribute_key_raw_position@@Base>:
   1a2f8:	cmp	r1, #0
   1a2fc:	ldrdne	r2, [r1, #48]	; 0x30
   1a300:	streq	r1, [r0]
   1a304:	streq	r1, [r0, #4]
   1a308:	strdne	r2, [r0]
   1a30c:	bx	lr

0001a310 <myhtml_attribute_value_raw_position@@Base>:
   1a310:	cmp	r1, #0
   1a314:	ldrdne	r2, [r1, #56]	; 0x38
   1a318:	streq	r1, [r0]
   1a31c:	streq	r1, [r0, #4]
   1a320:	strdne	r2, [r0]
   1a324:	bx	lr

0001a328 <myhtml_collection_create@@Base>:
   1a328:	push	{r4, r5, r6, r7, r8, lr}
   1a32c:	mov	r7, r0
   1a330:	mov	r0, #12
   1a334:	mov	r5, r1
   1a338:	bl	10c28 <mycore_malloc@plt>
   1a33c:	subs	r4, r0, #0
   1a340:	bne	1a35c <myhtml_collection_create@@Base+0x34>
   1a344:	cmp	r5, #0
   1a348:	movne	r3, #2
   1a34c:	mov	r4, #0
   1a350:	strne	r3, [r5]
   1a354:	mov	r0, r4
   1a358:	pop	{r4, r5, r6, r7, r8, pc}
   1a35c:	mov	r6, #0
   1a360:	lsl	r0, r7, #2
   1a364:	str	r7, [r4, #4]
   1a368:	str	r6, [r4, #8]
   1a36c:	bl	10c28 <mycore_malloc@plt>
   1a370:	cmp	r0, r6
   1a374:	str	r0, [r4]
   1a378:	bne	1a38c <myhtml_collection_create@@Base+0x64>
   1a37c:	mov	r0, r4
   1a380:	bl	10d60 <mycore_free@plt>
   1a384:	cmp	r5, r6
   1a388:	b	1a348 <myhtml_collection_create@@Base+0x20>
   1a38c:	cmp	r5, #0
   1a390:	strne	r6, [r5]
   1a394:	b	1a354 <myhtml_collection_create@@Base+0x2c>

0001a398 <myhtml_collection_check_size@@Base>:
   1a398:	push	{r4, r5, r6, lr}
   1a39c:	ldmib	r0, {r3, r4}
   1a3a0:	add	r4, r1, r4
   1a3a4:	cmp	r4, r3
   1a3a8:	bcc	1a3d0 <myhtml_collection_check_size@@Base+0x38>
   1a3ac:	add	r2, r2, #1
   1a3b0:	mov	r5, r0
   1a3b4:	ldr	r0, [r0]
   1a3b8:	add	r4, r2, r4
   1a3bc:	lsl	r1, r4, #2
   1a3c0:	bl	fb84 <mycore_realloc@plt>
   1a3c4:	cmp	r0, #0
   1a3c8:	beq	1a3d8 <myhtml_collection_check_size@@Base+0x40>
   1a3cc:	stm	r5, {r0, r4}
   1a3d0:	mov	r0, #0
   1a3d4:	pop	{r4, r5, r6, pc}
   1a3d8:	mov	r0, #2
   1a3dc:	pop	{r4, r5, r6, pc}

0001a3e0 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base>:
   1a3e0:	push	{r4, r5, r6, lr}
   1a3e4:	mov	r4, r0
   1a3e8:	mov	r5, r1
   1a3ec:	mov	r6, r2
   1a3f0:	cmp	r4, #0
   1a3f4:	bne	1a400 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x20>
   1a3f8:	mov	r0, r4
   1a3fc:	pop	{r4, r5, r6, pc}
   1a400:	ldr	r3, [r4, #4]
   1a404:	cmp	r3, r6
   1a408:	beq	1a420 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x40>
   1a40c:	ldr	r0, [r4, #20]
   1a410:	cmp	r0, #0
   1a414:	bne	1a45c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x7c>
   1a418:	ldr	r4, [r4, #16]
   1a41c:	b	1a3f0 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x10>
   1a420:	ldr	r2, [r5]
   1a424:	ldr	r3, [r5, #8]
   1a428:	str	r4, [r2, r3, lsl #2]
   1a42c:	add	r3, r3, #1
   1a430:	ldr	r2, [r5, #4]
   1a434:	str	r3, [r5, #8]
   1a438:	cmp	r3, r2
   1a43c:	bcc	1a40c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x2c>
   1a440:	mov	r2, #0
   1a444:	mov	r1, #1024	; 0x400
   1a448:	mov	r0, r5
   1a44c:	bl	10d90 <myhtml_collection_check_size@plt>
   1a450:	cmp	r0, #0
   1a454:	beq	1a40c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x2c>
   1a458:	pop	{r4, r5, r6, pc}
   1a45c:	mov	r2, r6
   1a460:	mov	r1, r5
   1a464:	bl	1a3e0 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base>
   1a468:	b	1a418 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x38>

0001a46c <myhtml_get_nodes_by_tag_id_in_scope@@Base>:
   1a46c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1a470:	subs	r6, r2, #0
   1a474:	moveq	r4, r6
   1a478:	ldr	r5, [sp, #32]
   1a47c:	beq	1a4bc <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x50>
   1a480:	mov	r7, r3
   1a484:	mov	r3, #0
   1a488:	cmp	r1, r3
   1a48c:	mov	r4, r1
   1a490:	str	r3, [sp, #4]
   1a494:	bne	1a4a8 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x3c>
   1a498:	add	r1, sp, #4
   1a49c:	mov	r0, #1024	; 0x400
   1a4a0:	bl	10298 <myhtml_collection_create@plt>
   1a4a4:	mov	r4, r0
   1a4a8:	ldr	r2, [sp, #4]
   1a4ac:	cmp	r2, #0
   1a4b0:	beq	1a4c8 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x5c>
   1a4b4:	cmp	r5, #0
   1a4b8:	strne	r2, [r5]
   1a4bc:	mov	r0, r4
   1a4c0:	add	sp, sp, #12
   1a4c4:	pop	{r4, r5, r6, r7, pc}
   1a4c8:	ldr	r0, [r6, #20]
   1a4cc:	cmp	r0, #0
   1a4d0:	beq	1a4e4 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x78>
   1a4d4:	mov	r2, r7
   1a4d8:	mov	r1, r4
   1a4dc:	bl	10be0 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1a4e0:	str	r0, [sp, #4]
   1a4e4:	ldr	r3, [r4]
   1a4e8:	mov	r1, #0
   1a4ec:	cmp	r5, r1
   1a4f0:	ldr	r2, [r4, #8]
   1a4f4:	str	r1, [r3, r2, lsl #2]
   1a4f8:	ldrne	r3, [sp, #4]
   1a4fc:	strne	r3, [r5]
   1a500:	b	1a4bc <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x50>

0001a504 <myhtml_get_nodes_by_name_in_scope@@Base>:
   1a504:	push	{r4, r5, r6, r7, r8, lr}
   1a508:	mov	r4, r0
   1a50c:	mov	r5, r1
   1a510:	mov	r6, r2
   1a514:	mov	r1, r3
   1a518:	ldr	r2, [sp, #24]
   1a51c:	ldr	r0, [r0, #28]
   1a520:	ldr	r7, [sp, #28]
   1a524:	bl	10b08 <myhtml_tag_get_by_name@plt>
   1a528:	subs	r3, r0, #0
   1a52c:	popeq	{r4, r5, r6, r7, r8, pc}
   1a530:	mov	r2, r6
   1a534:	mov	r1, r5
   1a538:	str	r7, [sp, #24]
   1a53c:	mov	r0, r4
   1a540:	pop	{r4, r5, r6, r7, r8, lr}
   1a544:	ldr	r3, [r3]
   1a548:	b	fed8 <myhtml_get_nodes_by_tag_id_in_scope@plt>

0001a54c <myhtml_get_nodes_by_tag_id@@Base>:
   1a54c:	push	{r4, r5, r6, r7, r8, lr}
   1a550:	subs	r4, r1, #0
   1a554:	mov	r7, r0
   1a558:	mov	r8, r2
   1a55c:	mov	r6, r3
   1a560:	bne	1a574 <myhtml_get_nodes_by_tag_id@@Base+0x28>
   1a564:	mov	r0, #1024	; 0x400
   1a568:	bl	10298 <myhtml_collection_create@plt>
   1a56c:	subs	r4, r0, #0
   1a570:	beq	1a618 <myhtml_get_nodes_by_tag_id@@Base+0xcc>
   1a574:	ldr	r5, [r7, #96]	; 0x60
   1a578:	cmp	r5, #0
   1a57c:	beq	1a5e8 <myhtml_get_nodes_by_tag_id@@Base+0x9c>
   1a580:	ldr	r3, [r5, #4]
   1a584:	cmp	r3, r8
   1a588:	bne	1a5b8 <myhtml_get_nodes_by_tag_id@@Base+0x6c>
   1a58c:	mov	r2, #1024	; 0x400
   1a590:	mov	r1, #1
   1a594:	mov	r0, r4
   1a598:	bl	10d90 <myhtml_collection_check_size@plt>
   1a59c:	cmp	r0, #0
   1a5a0:	bne	1a60c <myhtml_get_nodes_by_tag_id@@Base+0xc0>
   1a5a4:	ldr	r2, [r4]
   1a5a8:	ldr	r3, [r4, #8]
   1a5ac:	str	r5, [r2, r3, lsl #2]
   1a5b0:	add	r3, r3, #1
   1a5b4:	str	r3, [r4, #8]
   1a5b8:	ldr	r3, [r5, #20]
   1a5bc:	cmp	r3, #0
   1a5c0:	ldreq	r2, [r7, #96]	; 0x60
   1a5c4:	beq	1a5e0 <myhtml_get_nodes_by_tag_id@@Base+0x94>
   1a5c8:	mov	r5, r3
   1a5cc:	b	1a578 <myhtml_get_nodes_by_tag_id@@Base+0x2c>
   1a5d0:	ldr	r3, [r5, #16]
   1a5d4:	cmp	r3, #0
   1a5d8:	bne	1a5c8 <myhtml_get_nodes_by_tag_id@@Base+0x7c>
   1a5dc:	ldr	r5, [r5, #24]
   1a5e0:	cmp	r2, r5
   1a5e4:	bne	1a5d0 <myhtml_get_nodes_by_tag_id@@Base+0x84>
   1a5e8:	mov	r2, #1024	; 0x400
   1a5ec:	mov	r1, #1
   1a5f0:	mov	r0, r4
   1a5f4:	bl	10d90 <myhtml_collection_check_size@plt>
   1a5f8:	cmp	r0, #0
   1a5fc:	ldreq	r3, [r4]
   1a600:	ldreq	r2, [r4, #8]
   1a604:	streq	r0, [r3, r2, lsl #2]
   1a608:	beq	1a618 <myhtml_get_nodes_by_tag_id@@Base+0xcc>
   1a60c:	cmp	r6, #0
   1a610:	movne	r3, #2
   1a614:	strne	r3, [r6]
   1a618:	mov	r0, r4
   1a61c:	pop	{r4, r5, r6, r7, r8, pc}

0001a620 <myhtml_get_nodes_by_name@@Base>:
   1a620:	push	{r4, r5, r6, lr}
   1a624:	mov	r4, r0
   1a628:	mov	r5, r1
   1a62c:	mov	r1, r2
   1a630:	mov	r2, r3
   1a634:	ldr	r0, [r0, #28]
   1a638:	ldr	r6, [sp, #16]
   1a63c:	bl	10b08 <myhtml_tag_get_by_name@plt>
   1a640:	subs	r2, r0, #0
   1a644:	popeq	{r4, r5, r6, pc}
   1a648:	mov	r3, r6
   1a64c:	mov	r1, r5
   1a650:	mov	r0, r4
   1a654:	pop	{r4, r5, r6, lr}
   1a658:	ldr	r2, [r2]
   1a65c:	b	102b0 <myhtml_get_nodes_by_tag_id@plt>

0001a660 <myhtml_get_nodes_by_attribute_key_recursion@@Base>:
   1a660:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a664:	mov	r7, r0
   1a668:	mov	r6, r1
   1a66c:	mov	r9, r2
   1a670:	mov	r8, r3
   1a674:	mov	r4, r0
   1a678:	cmp	r4, #0
   1a67c:	beq	1a728 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xc8>
   1a680:	ldr	r3, [r4, #32]
   1a684:	cmp	r3, #0
   1a688:	beq	1a6fc <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x9c>
   1a68c:	ldr	r5, [r3, #40]	; 0x28
   1a690:	cmp	r5, #0
   1a694:	beq	1a6fc <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x9c>
   1a698:	ldr	r3, [r5, #16]
   1a69c:	cmp	r3, r8
   1a6a0:	beq	1a6ac <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x4c>
   1a6a4:	ldr	r5, [r5]
   1a6a8:	b	1a690 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x30>
   1a6ac:	mov	r2, r8
   1a6b0:	mov	r1, r9
   1a6b4:	ldr	r0, [r5, #8]
   1a6b8:	bl	10238 <mycore_strncasecmp@plt>
   1a6bc:	subs	r2, r0, #0
   1a6c0:	bne	1a6a4 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x44>
   1a6c4:	ldr	r1, [r6]
   1a6c8:	ldr	r3, [r6, #8]
   1a6cc:	str	r4, [r1, r3, lsl #2]
   1a6d0:	add	r3, r3, #1
   1a6d4:	ldr	r1, [r6, #4]
   1a6d8:	str	r3, [r6, #8]
   1a6dc:	cmp	r3, r1
   1a6e0:	bcc	1a6a4 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x44>
   1a6e4:	mov	r1, #1024	; 0x400
   1a6e8:	mov	r0, r6
   1a6ec:	bl	10d90 <myhtml_collection_check_size@plt>
   1a6f0:	cmp	r0, #0
   1a6f4:	beq	1a6a4 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x44>
   1a6f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a6fc:	ldr	r3, [r4, #20]
   1a700:	cmp	r3, #0
   1a704:	bne	1a714 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xb4>
   1a708:	ldr	r3, [r4, #16]
   1a70c:	cmp	r3, #0
   1a710:	beq	1a71c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xbc>
   1a714:	mov	r4, r3
   1a718:	b	1a678 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x18>
   1a71c:	ldr	r4, [r4, #24]
   1a720:	cmp	r7, r4
   1a724:	bne	1a708 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xa8>
   1a728:	mov	r0, #0
   1a72c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0001a730 <myhtml_get_nodes_by_attribute_key@@Base>:
   1a730:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a734:	subs	r7, r1, #0
   1a738:	mov	r9, r0
   1a73c:	mov	r6, r2
   1a740:	mov	r8, r3
   1a744:	movne	r4, r7
   1a748:	ldr	r5, [sp, #36]	; 0x24
   1a74c:	bne	1a788 <myhtml_get_nodes_by_attribute_key@@Base+0x58>
   1a750:	mov	r1, r5
   1a754:	mov	r0, #1024	; 0x400
   1a758:	bl	10298 <myhtml_collection_create@plt>
   1a75c:	cmp	r5, #0
   1a760:	mov	r4, r0
   1a764:	beq	1a778 <myhtml_get_nodes_by_attribute_key@@Base+0x48>
   1a768:	ldr	r3, [r5]
   1a76c:	cmp	r3, #0
   1a770:	movne	r4, r7
   1a774:	bne	1a780 <myhtml_get_nodes_by_attribute_key@@Base+0x50>
   1a778:	cmp	r4, #0
   1a77c:	bne	1a788 <myhtml_get_nodes_by_attribute_key@@Base+0x58>
   1a780:	mov	r0, r4
   1a784:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a788:	cmp	r6, #0
   1a78c:	mov	r2, r8
   1a790:	ldr	r3, [sp, #32]
   1a794:	mov	r1, r4
   1a798:	ldreq	r6, [r9, #96]	; 0x60
   1a79c:	mov	r0, r6
   1a7a0:	bl	fe48 <myhtml_get_nodes_by_attribute_key_recursion@plt>
   1a7a4:	cmp	r0, #0
   1a7a8:	cmpne	r5, #0
   1a7ac:	strne	r0, [r5]
   1a7b0:	b	1a780 <myhtml_get_nodes_by_attribute_key@@Base+0x50>

0001a7b4 <myhtml_get_nodes_by_attribute_value_recursion@@Base>:
   1a7b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a7b8:	mov	r7, r0
   1a7bc:	mov	r5, r1
   1a7c0:	mov	r8, r2
   1a7c4:	mov	r9, r3
   1a7c8:	mov	r4, r0
   1a7cc:	cmp	r4, #0
   1a7d0:	beq	1a874 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xc0>
   1a7d4:	ldr	r3, [r4, #32]
   1a7d8:	cmp	r3, #0
   1a7dc:	beq	1a848 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x94>
   1a7e0:	ldr	r6, [r3, #40]	; 0x28
   1a7e4:	cmp	r6, #0
   1a7e8:	beq	1a848 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x94>
   1a7ec:	mov	r1, r9
   1a7f0:	add	r0, r6, #28
   1a7f4:	ldr	r2, [sp, #32]
   1a7f8:	blx	r8
   1a7fc:	cmp	r0, #0
   1a800:	bne	1a80c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x58>
   1a804:	ldr	r6, [r6]
   1a808:	b	1a7e4 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x30>
   1a80c:	ldr	r2, [r5]
   1a810:	ldr	r3, [r5, #8]
   1a814:	str	r4, [r2, r3, lsl #2]
   1a818:	add	r3, r3, #1
   1a81c:	ldr	r2, [r5, #4]
   1a820:	str	r3, [r5, #8]
   1a824:	cmp	r3, r2
   1a828:	bcc	1a804 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x50>
   1a82c:	mov	r2, #0
   1a830:	mov	r1, #1024	; 0x400
   1a834:	mov	r0, r5
   1a838:	bl	10d90 <myhtml_collection_check_size@plt>
   1a83c:	cmp	r0, #0
   1a840:	beq	1a804 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x50>
   1a844:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a848:	ldr	r3, [r4, #20]
   1a84c:	cmp	r3, #0
   1a850:	bne	1a860 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xac>
   1a854:	ldr	r3, [r4, #16]
   1a858:	cmp	r3, #0
   1a85c:	beq	1a868 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xb4>
   1a860:	mov	r4, r3
   1a864:	b	1a7cc <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x18>
   1a868:	ldr	r4, [r4, #24]
   1a86c:	cmp	r7, r4
   1a870:	bne	1a854 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xa0>
   1a874:	mov	r0, #0
   1a878:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0001a87c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base>:
   1a87c:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a880:	mov	r7, r0
   1a884:	mov	r6, r1
   1a888:	mov	r9, r2
   1a88c:	mov	sl, r3
   1a890:	mov	r4, r0
   1a894:	ldr	r8, [sp, #40]	; 0x28
   1a898:	cmp	r4, #0
   1a89c:	beq	1a968 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xec>
   1a8a0:	ldr	r3, [r4, #32]
   1a8a4:	cmp	r3, #0
   1a8a8:	beq	1a93c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xc0>
   1a8ac:	ldr	r5, [r3, #40]	; 0x28
   1a8b0:	cmp	r5, #0
   1a8b4:	beq	1a93c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xc0>
   1a8b8:	ldr	r3, [r5, #16]
   1a8bc:	cmp	r3, r8
   1a8c0:	beq	1a8cc <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x50>
   1a8c4:	ldr	r5, [r5]
   1a8c8:	b	1a8b0 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x34>
   1a8cc:	mov	r2, r8
   1a8d0:	mov	r1, sl
   1a8d4:	ldr	r0, [r5, #8]
   1a8d8:	bl	10238 <mycore_strncasecmp@plt>
   1a8dc:	subs	fp, r0, #0
   1a8e0:	bne	1a8c4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x48>
   1a8e4:	add	r0, r5, #28
   1a8e8:	ldr	r1, [sp, #44]	; 0x2c
   1a8ec:	ldr	r2, [sp, #48]	; 0x30
   1a8f0:	blx	r9
   1a8f4:	cmp	r0, #0
   1a8f8:	beq	1a8c4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x48>
   1a8fc:	ldr	r2, [r6]
   1a900:	ldr	r3, [r6, #8]
   1a904:	str	r4, [r2, r3, lsl #2]
   1a908:	add	r3, r3, #1
   1a90c:	ldr	r2, [r6, #4]
   1a910:	str	r3, [r6, #8]
   1a914:	cmp	r3, r2
   1a918:	bcc	1a8c4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x48>
   1a91c:	mov	r2, fp
   1a920:	mov	r1, #1024	; 0x400
   1a924:	mov	r0, r6
   1a928:	bl	10d90 <myhtml_collection_check_size@plt>
   1a92c:	cmp	r0, #0
   1a930:	beq	1a8c4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x48>
   1a934:	add	sp, sp, #4
   1a938:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a93c:	ldr	r3, [r4, #20]
   1a940:	cmp	r3, #0
   1a944:	bne	1a954 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xd8>
   1a948:	ldr	r3, [r4, #16]
   1a94c:	cmp	r3, #0
   1a950:	beq	1a95c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xe0>
   1a954:	mov	r4, r3
   1a958:	b	1a898 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x1c>
   1a95c:	ldr	r4, [r4, #24]
   1a960:	cmp	r7, r4
   1a964:	bne	1a948 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xcc>
   1a968:	mov	r0, #0
   1a96c:	b	1a934 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xb8>

0001a970 <_myhtml_get_nodes_by_attribute_value@@Base>:
   1a970:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a974:	subs	r7, r1, #0
   1a978:	sub	sp, sp, #20
   1a97c:	mov	fp, r0
   1a980:	mov	r6, r2
   1a984:	mov	r8, r3
   1a988:	movne	r4, r7
   1a98c:	ldr	r9, [sp, #56]	; 0x38
   1a990:	ldr	sl, [sp, #60]	; 0x3c
   1a994:	ldr	r5, [sp, #72]	; 0x48
   1a998:	bne	1a9d8 <_myhtml_get_nodes_by_attribute_value@@Base+0x68>
   1a99c:	mov	r1, r5
   1a9a0:	mov	r0, #1024	; 0x400
   1a9a4:	bl	10298 <myhtml_collection_create@plt>
   1a9a8:	cmp	r5, #0
   1a9ac:	mov	r4, r0
   1a9b0:	beq	1a9c4 <_myhtml_get_nodes_by_attribute_value@@Base+0x54>
   1a9b4:	ldr	r1, [r5]
   1a9b8:	cmp	r1, #0
   1a9bc:	movne	r4, r7
   1a9c0:	bne	1a9cc <_myhtml_get_nodes_by_attribute_value@@Base+0x5c>
   1a9c4:	cmp	r4, #0
   1a9c8:	bne	1a9d8 <_myhtml_get_nodes_by_attribute_value@@Base+0x68>
   1a9cc:	mov	r0, r4
   1a9d0:	add	sp, sp, #20
   1a9d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a9d8:	cmp	r6, #0
   1a9dc:	ldr	r3, [sp, #68]	; 0x44
   1a9e0:	ldreq	r6, [fp, #96]	; 0x60
   1a9e4:	cmp	r9, #0
   1a9e8:	cmpne	sl, #0
   1a9ec:	beq	1aa24 <_myhtml_get_nodes_by_attribute_value@@Base+0xb4>
   1a9f0:	mov	r2, r8
   1a9f4:	mov	r1, r4
   1a9f8:	str	sl, [sp]
   1a9fc:	str	r3, [sp, #8]
   1aa00:	mov	r0, r6
   1aa04:	ldr	r3, [sp, #64]	; 0x40
   1aa08:	str	r3, [sp, #4]
   1aa0c:	mov	r3, r9
   1aa10:	bl	fd94 <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>
   1aa14:	cmp	r0, #0
   1aa18:	cmpne	r5, #0
   1aa1c:	strne	r0, [r5]
   1aa20:	b	1a9cc <_myhtml_get_nodes_by_attribute_value@@Base+0x5c>
   1aa24:	mov	r2, r8
   1aa28:	mov	r1, r4
   1aa2c:	str	r3, [sp]
   1aa30:	mov	r0, r6
   1aa34:	ldr	r3, [sp, #64]	; 0x40
   1aa38:	bl	fb78 <myhtml_get_nodes_by_attribute_value_recursion@plt>
   1aa3c:	b	1aa14 <_myhtml_get_nodes_by_attribute_value@@Base+0xa4>

0001aa40 <myhtml_get_nodes_by_attribute_value@@Base>:
   1aa40:	ldr	ip, [pc, #40]	; 1aa70 <myhtml_get_nodes_by_attribute_value@@Base+0x30>
   1aa44:	cmp	r3, #0
   1aa48:	sub	sp, sp, #8
   1aa4c:	add	ip, pc, ip
   1aa50:	beq	1aa68 <myhtml_get_nodes_by_attribute_value@@Base+0x28>
   1aa54:	ldr	r3, [pc, #24]	; 1aa74 <myhtml_get_nodes_by_attribute_value@@Base+0x34>
   1aa58:	ldr	r3, [ip, r3]
   1aa5c:	str	r3, [sp, #4]
   1aa60:	add	sp, sp, #8
   1aa64:	b	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1aa68:	ldr	r3, [pc, #8]	; 1aa78 <myhtml_get_nodes_by_attribute_value@@Base+0x38>
   1aa6c:	b	1aa58 <myhtml_get_nodes_by_attribute_value@@Base+0x18>
   1aa70:	andeq	r5, pc, ip, lsr #11
   1aa74:	andeq	r0, r0, ip, ror r8
   1aa78:	andeq	r0, r0, r4, lsr #17

0001aa7c <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base>:
   1aa7c:	ldr	ip, [pc, #40]	; 1aaac <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x30>
   1aa80:	cmp	r3, #0
   1aa84:	sub	sp, sp, #8
   1aa88:	add	ip, pc, ip
   1aa8c:	beq	1aaa4 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x28>
   1aa90:	ldr	r3, [pc, #24]	; 1aab0 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x34>
   1aa94:	ldr	r3, [ip, r3]
   1aa98:	str	r3, [sp, #4]
   1aa9c:	add	sp, sp, #8
   1aaa0:	b	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1aaa4:	ldr	r3, [pc, #8]	; 1aab4 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x38>
   1aaa8:	b	1aa94 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x18>
   1aaac:	andeq	r5, pc, r0, ror r5	; <UNPREDICTABLE>
   1aab0:	andeq	r0, r0, r0, lsl r7
   1aab4:	andeq	r0, r0, r0, lsr #18

0001aab8 <myhtml_get_nodes_by_attribute_value_begin@@Base>:
   1aab8:	ldr	ip, [pc, #40]	; 1aae8 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x30>
   1aabc:	cmp	r3, #0
   1aac0:	sub	sp, sp, #8
   1aac4:	add	ip, pc, ip
   1aac8:	beq	1aae0 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x28>
   1aacc:	ldr	r3, [pc, #24]	; 1aaec <myhtml_get_nodes_by_attribute_value_begin@@Base+0x34>
   1aad0:	ldr	r3, [ip, r3]
   1aad4:	str	r3, [sp, #4]
   1aad8:	add	sp, sp, #8
   1aadc:	b	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1aae0:	ldr	r3, [pc, #8]	; 1aaf0 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x38>
   1aae4:	b	1aad0 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x18>
   1aae8:	andeq	r5, pc, r4, lsr r5	; <UNPREDICTABLE>
   1aaec:	andeq	r0, r0, ip, ror #14
   1aaf0:	andeq	r0, r0, ip, asr r7

0001aaf4 <myhtml_get_nodes_by_attribute_value_end@@Base>:
   1aaf4:	ldr	ip, [pc, #40]	; 1ab24 <myhtml_get_nodes_by_attribute_value_end@@Base+0x30>
   1aaf8:	cmp	r3, #0
   1aafc:	sub	sp, sp, #8
   1ab00:	add	ip, pc, ip
   1ab04:	beq	1ab1c <myhtml_get_nodes_by_attribute_value_end@@Base+0x28>
   1ab08:	ldr	r3, [pc, #24]	; 1ab28 <myhtml_get_nodes_by_attribute_value_end@@Base+0x34>
   1ab0c:	ldr	r3, [ip, r3]
   1ab10:	str	r3, [sp, #4]
   1ab14:	add	sp, sp, #8
   1ab18:	b	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1ab1c:	ldr	r3, [pc, #8]	; 1ab2c <myhtml_get_nodes_by_attribute_value_end@@Base+0x38>
   1ab20:	b	1ab0c <myhtml_get_nodes_by_attribute_value_end@@Base+0x18>
   1ab24:	strdeq	r5, [pc], -r8
   1ab28:	andeq	r0, r0, r8, ror r9
   1ab2c:	andeq	r0, r0, ip, ror #15

0001ab30 <myhtml_get_nodes_by_attribute_value_contain@@Base>:
   1ab30:	ldr	ip, [pc, #40]	; 1ab60 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x30>
   1ab34:	cmp	r3, #0
   1ab38:	sub	sp, sp, #8
   1ab3c:	add	ip, pc, ip
   1ab40:	beq	1ab58 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x28>
   1ab44:	ldr	r3, [pc, #24]	; 1ab64 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x34>
   1ab48:	ldr	r3, [ip, r3]
   1ab4c:	str	r3, [sp, #4]
   1ab50:	add	sp, sp, #8
   1ab54:	b	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1ab58:	ldr	r3, [pc, #8]	; 1ab68 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x38>
   1ab5c:	b	1ab48 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x18>
   1ab60:			; <UNDEFINED> instruction: 0x000f54bc
   1ab64:	andeq	r0, r0, r0, ror #14
   1ab68:	andeq	r0, r0, r0, lsl #17

0001ab6c <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base>:
   1ab6c:	ldr	ip, [pc, #40]	; 1ab9c <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x30>
   1ab70:	cmp	r3, #0
   1ab74:	sub	sp, sp, #8
   1ab78:	add	ip, pc, ip
   1ab7c:	beq	1ab94 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x28>
   1ab80:	ldr	r3, [pc, #24]	; 1aba0 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x34>
   1ab84:	ldr	r3, [ip, r3]
   1ab88:	str	r3, [sp, #4]
   1ab8c:	add	sp, sp, #8
   1ab90:	b	10acc <_myhtml_get_nodes_by_attribute_value@plt>
   1ab94:	ldr	r3, [pc, #8]	; 1aba4 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x38>
   1ab98:	b	1ab84 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x18>
   1ab9c:	andeq	r5, pc, r0, lsl #9
   1aba0:	strdeq	r0, [r0], -ip
   1aba4:	andeq	r0, r0, r8, ror #16

0001aba8 <myhtml_collection_clean@@Base>:
   1aba8:	cmp	r0, #0
   1abac:	movne	r3, #0
   1abb0:	strne	r3, [r0, #8]
   1abb4:	bx	lr

0001abb8 <myhtml_collection_destroy@@Base>:
   1abb8:	push	{r4, lr}
   1abbc:	subs	r4, r0, #0
   1abc0:	beq	1abdc <myhtml_collection_destroy@@Base+0x24>
   1abc4:	ldr	r0, [r4]
   1abc8:	cmp	r0, #0
   1abcc:	beq	1abd4 <myhtml_collection_destroy@@Base+0x1c>
   1abd0:	bl	10d60 <mycore_free@plt>
   1abd4:	mov	r0, r4
   1abd8:	bl	10d60 <mycore_free@plt>
   1abdc:	mov	r0, #0
   1abe0:	pop	{r4, pc}

0001abe4 <myhtml_queue_add@@Base>:
   1abe4:	ldr	r3, [r0, #184]	; 0xb8
   1abe8:	push	{r4, r5, r6, r7, r8, lr}
   1abec:	adds	r8, r2, #0
   1abf0:	mov	r4, r0
   1abf4:	movne	r8, #1
   1abf8:	mov	r7, r1
   1abfc:	mov	r5, r2
   1ac00:	ldr	r6, [r0, #68]	; 0x44
   1ac04:	ands	r3, r8, r3, lsr #2
   1ac08:	beq	1ac44 <myhtml_queue_add@@Base+0x60>
   1ac0c:	ldr	r3, [r2]
   1ac10:	cmp	r3, #1
   1ac14:	bne	1ac44 <myhtml_queue_add@@Base+0x60>
   1ac18:	ldr	r3, [r2, #48]	; 0x30
   1ac1c:	tst	r3, #8
   1ac20:	beq	1ac44 <myhtml_queue_add@@Base+0x60>
   1ac24:	mov	r0, r2
   1ac28:	bl	10f10 <myhtml_token_node_clean@plt>
   1ac2c:	ldr	r3, [r4, #192]	; 0xc0
   1ac30:	add	r7, r7, r3
   1ac34:	str	r7, [r5, #24]
   1ac38:	str	r7, [r5, #32]
   1ac3c:	mov	r0, #0
   1ac40:	pop	{r4, r5, r6, r7, r8, pc}
   1ac44:	ldr	r3, [r4, #180]	; 0xb4
   1ac48:	tst	r3, #16
   1ac4c:	beq	1acb0 <myhtml_queue_add@@Base+0xcc>
   1ac50:	cmp	r6, #0
   1ac54:	movne	r3, r8
   1ac58:	moveq	r3, #0
   1ac5c:	cmp	r3, #0
   1ac60:	beq	1ac80 <myhtml_queue_add@@Base+0x9c>
   1ac64:	mov	r1, r6
   1ac68:	mov	r0, #0
   1ac6c:	str	r5, [r6, #4]
   1ac70:	bl	fd1c <myhtml_parser_worker@plt>
   1ac74:	mov	r1, r6
   1ac78:	mov	r0, #0
   1ac7c:	bl	10f88 <myhtml_parser_stream@plt>
   1ac80:	ldr	r0, [r4]
   1ac84:	mov	r3, #0
   1ac88:	mov	r2, #4
   1ac8c:	ldr	r1, [r4, #24]
   1ac90:	ldr	r0, [r0]
   1ac94:	bl	10c40 <mythread_queue_node_malloc_limit@plt>
   1ac98:	str	r0, [r4, #68]	; 0x44
   1ac9c:	ldr	r3, [r4, #68]	; 0x44
   1aca0:	cmp	r3, #0
   1aca4:	bne	1ad00 <myhtml_queue_add@@Base+0x11c>
   1aca8:	mov	r0, #2
   1acac:	pop	{r4, r5, r6, r7, r8, pc}
   1acb0:	ldr	r3, [r4]
   1acb4:	cmp	r6, #0
   1acb8:	strne	r5, [r6, #4]
   1acbc:	ldr	r1, [r4, #20]
   1acc0:	ldr	r0, [r3]
   1acc4:	bl	104cc <mythread_queue_node_malloc_round@plt>
   1acc8:	ldr	r1, [r4, #20]
   1accc:	ldr	r3, [r1]
   1acd0:	ldr	r3, [r3, #12]
   1acd4:	str	r0, [r4, #68]	; 0x44
   1acd8:	cmp	r3, #0
   1acdc:	bne	1ac9c <myhtml_queue_add@@Base+0xb8>
   1ace0:	ldr	r3, [r4]
   1ace4:	ldr	r0, [r3, #4]
   1ace8:	bl	10cb8 <mythread_queue_list_entry_make_batch@plt>
   1acec:	ldr	r3, [r4]
   1acf0:	ldr	r1, [r4, #20]
   1acf4:	ldr	r0, [r3]
   1acf8:	bl	10e74 <mythread_queue_list_entry_make_stream@plt>
   1acfc:	b	1ac9c <myhtml_queue_add@@Base+0xb8>
   1ad00:	cmp	r6, #0
   1ad04:	str	r4, [r3]
   1ad08:	str	r6, [r3, #8]
   1ad0c:	movne	r6, r8
   1ad10:	moveq	r6, #0
   1ad14:	cmp	r6, #0
   1ad18:	beq	1ad28 <myhtml_queue_add@@Base+0x144>
   1ad1c:	mov	r1, r5
   1ad20:	mov	r0, r4
   1ad24:	bl	101cc <myhtml_tokenizer_calc_current_namespace@plt>
   1ad28:	ldr	r0, [r4, #8]
   1ad2c:	ldr	r1, [r0, #12]
   1ad30:	bl	109a0 <myhtml_token_node_create@plt>
   1ad34:	cmp	r0, #0
   1ad38:	str	r0, [r4, #64]	; 0x40
   1ad3c:	beq	1aca8 <myhtml_queue_add@@Base+0xc4>
   1ad40:	ldr	r3, [r4, #192]	; 0xc0
   1ad44:	add	r7, r7, r3
   1ad48:	str	r7, [r0, #24]
   1ad4c:	str	r7, [r0, #32]
   1ad50:	b	1ac3c <myhtml_queue_add@@Base+0x58>

0001ad54 <myhtml_utils_strcmp@@Base>:
   1ad54:	mov	ip, #0
   1ad58:	cmp	ip, r2
   1ad5c:	bne	1ada0 <myhtml_utils_strcmp@@Base+0x4c>
   1ad60:	mov	r0, #1
   1ad64:	bx	lr
   1ad68:	add	ip, ip, #1
   1ad6c:	cmp	ip, r2
   1ad70:	beq	1ad98 <myhtml_utils_strcmp@@Base+0x44>
   1ad74:	ldrb	r3, [r1, ip]
   1ad78:	sub	lr, r3, #65	; 0x41
   1ad7c:	cmp	lr, #25
   1ad80:	ldrb	lr, [r0, ip]
   1ad84:	orrls	r3, r3, #96	; 0x60
   1ad88:	cmp	lr, r3
   1ad8c:	beq	1ad68 <myhtml_utils_strcmp@@Base+0x14>
   1ad90:	mov	r0, #0
   1ad94:	pop	{pc}		; (ldr pc, [sp], #4)
   1ad98:	mov	r0, #1
   1ad9c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ada0:	push	{lr}		; (str lr, [sp, #-4]!)
   1ada4:	b	1ad74 <myhtml_utils_strcmp@@Base+0x20>

0001ada8 <myhtml_is_html_node@@Base>:
   1ada8:	cmp	r0, #0
   1adac:	bxeq	lr
   1adb0:	ldr	r3, [r0, #4]
   1adb4:	cmp	r3, r1
   1adb8:	ldreq	r0, [r0, #8]
   1adbc:	subeq	r0, r0, #1
   1adc0:	clzeq	r0, r0
   1adc4:	lsreq	r0, r0, #5
   1adc8:	movne	r0, #0
   1adcc:	bx	lr

0001add0 <myhtml_version@@Base>:
   1add0:	ldr	r2, [pc, #20]	; 1adec <myhtml_version@@Base+0x1c>
   1add4:	mov	r3, r0
   1add8:	add	r2, pc, r2
   1addc:	ldm	r2, {r0, r1, r2}
   1ade0:	stm	r3, {r0, r1, r2}
   1ade4:	mov	r0, r3
   1ade8:	bx	lr
   1adec:	andeq	fp, sp, ip, lsr #8

0001adf0 <myhtml_node_clone@@Base>:
   1adf0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1adf4:	mov	r5, r1
   1adf8:	mov	r6, r0
   1adfc:	bl	ff80 <myhtml_tree_node_create@plt>
   1ae00:	ldr	r4, [r5, #4]
   1ae04:	mov	r7, r0
   1ae08:	cmp	r4, #251	; 0xfb
   1ae0c:	bls	1ae58 <myhtml_node_clone@@Base+0x68>
   1ae10:	mov	r1, r4
   1ae14:	ldr	r0, [r6, #28]
   1ae18:	bl	109b8 <myhtml_tag_get_by_id@plt>
   1ae1c:	mov	r9, r0
   1ae20:	ldr	r1, [r5, #4]
   1ae24:	ldr	r3, [r5, #40]	; 0x28
   1ae28:	ldr	r0, [r3, #28]
   1ae2c:	bl	109b8 <myhtml_tag_get_by_id@plt>
   1ae30:	cmp	r9, #0
   1ae34:	mov	r8, r0
   1ae38:	bne	1ae98 <myhtml_node_clone@@Base+0xa8>
   1ae3c:	mov	r3, #1
   1ae40:	ldr	r0, [r6, #28]
   1ae44:	str	r3, [sp]
   1ae48:	mov	r3, #0
   1ae4c:	ldmib	r8, {r1, r2}
   1ae50:	bl	ffb0 <myhtml_tag_add@plt>
   1ae54:	mov	r4, r0
   1ae58:	ldr	r0, [r6, #8]
   1ae5c:	ldr	r1, [r5, #32]
   1ae60:	ldrd	r2, [r6, #40]	; 0x28
   1ae64:	bl	fecc <myhtml_token_node_clone@plt>
   1ae68:	ldr	r3, [r5, #8]
   1ae6c:	cmp	r0, #0
   1ae70:	str	r4, [r7, #4]
   1ae74:	str	r3, [r7, #8]
   1ae78:	ldrne	r3, [r0, #48]	; 0x30
   1ae7c:	str	r0, [r7, #32]
   1ae80:	strne	r4, [r0]
   1ae84:	orrne	r3, r3, #4
   1ae88:	strne	r3, [r0, #48]	; 0x30
   1ae8c:	mov	r0, r7
   1ae90:	add	sp, sp, #12
   1ae94:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1ae98:	ldr	r3, [r0, #8]
   1ae9c:	ldr	r2, [r9, #8]
   1aea0:	cmp	r2, r3
   1aea4:	bne	1ae3c <myhtml_node_clone@@Base+0x4c>
   1aea8:	ldr	r1, [r0, #4]
   1aeac:	ldr	r0, [r9, #4]
   1aeb0:	bl	10e80 <mycore_strncmp@plt>
   1aeb4:	cmp	r0, #0
   1aeb8:	bne	1ae3c <myhtml_node_clone@@Base+0x4c>
   1aebc:	b	1ae58 <myhtml_node_clone@@Base+0x68>

0001aec0 <myhtml_node_clone_deep@@Base>:
   1aec0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1aec4:	subs	r5, r1, #0
   1aec8:	mov	r8, r0
   1aecc:	beq	1aeec <myhtml_node_clone_deep@@Base+0x2c>
   1aed0:	ldr	r3, [r5, #40]	; 0x28
   1aed4:	cmp	r3, #0
   1aed8:	beq	1aeec <myhtml_node_clone_deep@@Base+0x2c>
   1aedc:	ldr	r3, [r3, #84]	; 0x54
   1aee0:	cmp	r3, r5
   1aee4:	ldreq	r4, [r5, #20]
   1aee8:	beq	1aef0 <myhtml_node_clone_deep@@Base+0x30>
   1aeec:	mov	r4, r5
   1aef0:	mov	r1, r4
   1aef4:	mov	r0, r8
   1aef8:	bl	10ec8 <myhtml_node_clone@plt>
   1aefc:	subs	r7, r0, #0
   1af00:	movne	r6, r7
   1af04:	ldrne	r4, [r4, #20]
   1af08:	bne	1af60 <myhtml_node_clone_deep@@Base+0xa0>
   1af0c:	mov	r7, #0
   1af10:	mov	r0, r7
   1af14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1af18:	mov	r1, r4
   1af1c:	mov	r0, r8
   1af20:	bl	10ec8 <myhtml_node_clone@plt>
   1af24:	subs	r9, r0, #0
   1af28:	beq	1af0c <myhtml_node_clone_deep@@Base+0x4c>
   1af2c:	mov	r0, r6
   1af30:	mov	r1, r9
   1af34:	bl	1064c <myhtml_tree_node_add_child@plt>
   1af38:	ldr	r3, [r4, #20]
   1af3c:	cmp	r3, #0
   1af40:	movne	r6, r9
   1af44:	bne	1af5c <myhtml_node_clone_deep@@Base+0x9c>
   1af48:	cmp	r4, r5
   1af4c:	beq	1af10 <myhtml_node_clone_deep@@Base+0x50>
   1af50:	ldr	r3, [r4, #16]
   1af54:	cmp	r3, #0
   1af58:	beq	1af6c <myhtml_node_clone_deep@@Base+0xac>
   1af5c:	mov	r4, r3
   1af60:	cmp	r4, #0
   1af64:	bne	1af18 <myhtml_node_clone_deep@@Base+0x58>
   1af68:	b	1af10 <myhtml_node_clone_deep@@Base+0x50>
   1af6c:	ldr	r4, [r4, #24]
   1af70:	ldr	r6, [r6, #24]
   1af74:	b	1af48 <myhtml_node_clone_deep@@Base+0x88>

0001af78 <myhtml_namespace_name_entry_by_name@@Base>:
   1af78:	add	r3, r0, r1
   1af7c:	ldr	r2, [pc, #156]	; 1b020 <myhtml_namespace_name_entry_by_name@@Base+0xa8>
   1af80:	push	{r4, r5, r6, r7, r8, lr}
   1af84:	mov	r5, r1
   1af88:	mov	r6, r0
   1af8c:	mov	r8, #20
   1af90:	ldrb	r1, [r0]
   1af94:	add	r2, pc, r2
   1af98:	ldrb	r3, [r3, #-1]
   1af9c:	ldr	r7, [pc, #128]	; 1b024 <myhtml_namespace_name_entry_by_name@@Base+0xac>
   1afa0:	ldrb	r3, [r2, r3]
   1afa4:	ldrb	r2, [r2, r1]
   1afa8:	mov	r1, #19
   1afac:	add	r7, pc, r7
   1afb0:	smulbb	r3, r3, r2
   1afb4:	mul	r2, r5, r3
   1afb8:	udiv	r3, r2, r1
   1afbc:	mls	r3, r1, r3, r2
   1afc0:	add	r3, r3, #1
   1afc4:	mul	r3, r8, r3
   1afc8:	ldr	r0, [r7, r3]
   1afcc:	add	r4, r7, r3
   1afd0:	cmp	r0, #0
   1afd4:	beq	1b00c <myhtml_namespace_name_entry_by_name@@Base+0x94>
   1afd8:	ldr	r3, [r4, #4]
   1afdc:	cmp	r3, r5
   1afe0:	bne	1b014 <myhtml_namespace_name_entry_by_name@@Base+0x9c>
   1afe4:	mov	r2, r5
   1afe8:	mov	r1, r6
   1afec:	bl	10238 <mycore_strncasecmp@plt>
   1aff0:	cmp	r0, #0
   1aff4:	bne	1b000 <myhtml_namespace_name_entry_by_name@@Base+0x88>
   1aff8:	mov	r0, r4
   1affc:	pop	{r4, r5, r6, r7, r8, pc}
   1b000:	ldr	r3, [r4, #12]
   1b004:	cmp	r3, #0
   1b008:	bne	1afc4 <myhtml_namespace_name_entry_by_name@@Base+0x4c>
   1b00c:	mov	r0, #0
   1b010:	pop	{r4, r5, r6, r7, r8, pc}
   1b014:	bhi	1b00c <myhtml_namespace_name_entry_by_name@@Base+0x94>
   1b018:	ldr	r3, [r4, #12]
   1b01c:	b	1afc4 <myhtml_namespace_name_entry_by_name@@Base+0x4c>
   1b020:	andeq	fp, sp, ip, ror r2
   1b024:	muleq	pc, r8, r3	; <UNPREDICTABLE>

0001b028 <myhtml_namespace_id_by_name@@Base>:
   1b028:	push	{r4, lr}
   1b02c:	mov	r4, r2
   1b030:	bl	101a8 <myhtml_namespace_name_entry_by_name@plt>
   1b034:	cmp	r0, #0
   1b038:	popeq	{r4, pc}
   1b03c:	cmp	r4, #0
   1b040:	ldrne	r3, [r0, #8]
   1b044:	mov	r0, #1
   1b048:	strne	r3, [r4]
   1b04c:	pop	{r4, pc}

0001b050 <myhtml_namespace_name_by_id@@Base>:
   1b050:	cmp	r0, #7
   1b054:	push	{r4, r5, r6, lr}
   1b058:	bls	1b070 <myhtml_namespace_name_by_id@@Base+0x20>
   1b05c:	cmp	r1, #0
   1b060:	mov	r4, #0
   1b064:	strne	r4, [r1]
   1b068:	moveq	r4, r1
   1b06c:	b	1b098 <myhtml_namespace_name_by_id@@Base+0x48>
   1b070:	ldr	r4, [pc, #40]	; 1b0a0 <myhtml_namespace_name_by_id@@Base+0x50>
   1b074:	cmp	r1, #0
   1b078:	add	r4, pc, r4
   1b07c:	add	r4, r4, #256	; 0x100
   1b080:	add	r4, r4, r0, lsl #3
   1b084:	beq	1b098 <myhtml_namespace_name_by_id@@Base+0x48>
   1b088:	mov	r5, r1
   1b08c:	mov	r0, r4
   1b090:	bl	10604 <strlen@plt>
   1b094:	str	r0, [r5]
   1b098:	mov	r0, r4
   1b09c:	pop	{r4, r5, r6, pc}
   1b0a0:	muleq	sp, r8, r1

0001b0a4 <myhtml_namespace_url_by_id@@Base>:
   1b0a4:	cmp	r0, #7
   1b0a8:	bls	1b0c4 <myhtml_namespace_url_by_id@@Base+0x20>
   1b0ac:	cmp	r1, #0
   1b0b0:	movne	r3, #0
   1b0b4:	strne	r3, [r1]
   1b0b8:	movne	r1, r3
   1b0bc:	mov	r0, r1
   1b0c0:	bx	lr
   1b0c4:	cmp	r1, #0
   1b0c8:	beq	1b0e4 <myhtml_namespace_url_by_id@@Base+0x40>
   1b0cc:	ldr	r3, [pc, #40]	; 1b0fc <myhtml_namespace_url_by_id@@Base+0x58>
   1b0d0:	mov	r2, #12
   1b0d4:	add	r3, pc, r3
   1b0d8:	mla	r3, r2, r0, r3
   1b0dc:	ldr	r3, [r3, #404]	; 0x194
   1b0e0:	str	r3, [r1]
   1b0e4:	ldr	r3, [pc, #20]	; 1b100 <myhtml_namespace_url_by_id@@Base+0x5c>
   1b0e8:	mov	r2, #12
   1b0ec:	add	r3, pc, r3
   1b0f0:	mla	r0, r2, r0, r3
   1b0f4:	ldr	r1, [r0, #400]	; 0x190
   1b0f8:	b	1b0bc <myhtml_namespace_url_by_id@@Base+0x18>
   1b0fc:	andeq	r0, pc, r0, ror r2	; <UNPREDICTABLE>
   1b100:	andeq	r0, pc, r8, asr r2	; <UNPREDICTABLE>

0001b104 <myhtml_namespace_id_by_url@@Base>:
   1b104:	ldr	r3, [pc, #140]	; 1b198 <myhtml_namespace_id_by_url@@Base+0x94>
   1b108:	mov	r2, #0
   1b10c:	add	r3, pc, r3
   1b110:	add	r3, r3, #400	; 0x190
   1b114:	ldr	ip, [r3, #8]
   1b118:	cmp	ip, #0
   1b11c:	bne	1b128 <myhtml_namespace_id_by_url@@Base+0x24>
   1b120:	mov	r0, ip
   1b124:	bx	lr
   1b128:	add	r3, r3, #12
   1b12c:	ldr	ip, [r3, #-8]
   1b130:	cmp	ip, r1
   1b134:	bne	1b190 <myhtml_namespace_id_by_url@@Base+0x8c>
   1b138:	ldr	r3, [pc, #92]	; 1b19c <myhtml_namespace_id_by_url@@Base+0x98>
   1b13c:	mov	ip, #12
   1b140:	add	r0, r0, r1
   1b144:	push	{lr}		; (str lr, [sp, #-4]!)
   1b148:	add	r3, pc, r3
   1b14c:	mla	r3, ip, r2, r3
   1b150:	ldr	ip, [r3, #400]	; 0x190
   1b154:	add	r3, ip, r1
   1b158:	cmp	r3, ip
   1b15c:	bne	1b17c <myhtml_namespace_id_by_url@@Base+0x78>
   1b160:	ldr	r1, [pc, #56]	; 1b1a0 <myhtml_namespace_id_by_url@@Base+0x9c>
   1b164:	mov	r3, #12
   1b168:	add	r1, pc, r1
   1b16c:	mla	r2, r3, r2, r1
   1b170:	ldr	ip, [r2, #408]	; 0x198
   1b174:	mov	r0, ip
   1b178:	pop	{pc}		; (ldr pc, [sp], #4)
   1b17c:	ldrb	lr, [r3, #-1]!
   1b180:	ldrb	r1, [r0, #-1]!
   1b184:	cmp	lr, r1
   1b188:	addne	r2, r2, #1
   1b18c:	b	1b158 <myhtml_namespace_id_by_url@@Base+0x54>
   1b190:	add	r2, r2, #1
   1b194:	b	1b114 <myhtml_namespace_id_by_url@@Base+0x10>
   1b198:	andeq	r0, pc, r8, lsr r2	; <UNPREDICTABLE>
   1b19c:	strdeq	r0, [pc], -ip
   1b1a0:	ldrdeq	r0, [pc], -ip

0001b1a4 <myhtml_string_append_with_preprocessing@@Base>:
   1b1a4:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b1a8:	mov	r8, r3
   1b1ac:	mov	r7, r1
   1b1b0:	add	r1, r2, #1
   1b1b4:	mov	r4, r0
   1b1b8:	mov	r6, r2
   1b1bc:	ldr	r3, [r0, #8]
   1b1c0:	add	r1, r1, r3
   1b1c4:	ldr	r3, [r0, #4]
   1b1c8:	cmp	r1, r3
   1b1cc:	bcc	1b1d4 <myhtml_string_append_with_preprocessing@@Base+0x30>
   1b1d0:	bl	108f8 <mycore_string_realloc@plt>
   1b1d4:	ldr	r3, [r4]
   1b1d8:	mov	r5, #0
   1b1dc:	mvn	r9, #16
   1b1e0:	mvn	sl, #64	; 0x40
   1b1e4:	mvn	fp, #66	; 0x42
   1b1e8:	cmp	r5, r6
   1b1ec:	bcc	1b204 <myhtml_string_append_with_preprocessing@@Base+0x60>
   1b1f0:	ldr	r2, [r4]
   1b1f4:	mov	r0, #0
   1b1f8:	ldr	r3, [r4, #8]
   1b1fc:	strb	r0, [r2, r3]
   1b200:	b	1b280 <myhtml_string_append_with_preprocessing@@Base+0xdc>
   1b204:	ldrb	r2, [r7, r5]
   1b208:	cmp	r2, #13
   1b20c:	bne	1b288 <myhtml_string_append_with_preprocessing@@Base+0xe4>
   1b210:	ldr	r1, [r4, #8]
   1b214:	add	r2, r5, #1
   1b218:	mov	r0, #10
   1b21c:	cmp	r6, r2
   1b220:	strb	r0, [r3, r1]
   1b224:	bls	1b248 <myhtml_string_append_with_preprocessing@@Base+0xa4>
   1b228:	ldrb	r1, [r7, r2]
   1b22c:	cmp	r1, r0
   1b230:	moveq	r5, r2
   1b234:	ldr	r2, [r4, #8]
   1b238:	add	r5, r5, #1
   1b23c:	add	r2, r2, #1
   1b240:	str	r2, [r4, #8]
   1b244:	b	1b1e8 <myhtml_string_append_with_preprocessing@@Base+0x44>
   1b248:	ldr	r2, [r4, #4]
   1b24c:	ldr	r1, [r4, #8]
   1b250:	add	r3, r1, #1
   1b254:	cmp	r3, r2
   1b258:	str	r3, [r4, #8]
   1b25c:	bcc	1b26c <myhtml_string_append_with_preprocessing@@Base+0xc8>
   1b260:	add	r1, r1, #3
   1b264:	mov	r0, r4
   1b268:	bl	108f8 <mycore_string_realloc@plt>
   1b26c:	ldr	r2, [r4]
   1b270:	mov	r1, #0
   1b274:	ldr	r3, [r4, #8]
   1b278:	strb	r1, [r2, r3]
   1b27c:	ldr	r0, [r4, #8]
   1b280:	add	sp, sp, #4
   1b284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b288:	cmp	r2, #0
   1b28c:	moveq	r1, r8
   1b290:	orrne	r1, r8, #1
   1b294:	cmp	r1, #0
   1b298:	ldrne	r1, [r4, #8]
   1b29c:	strbne	r2, [r3, r1]
   1b2a0:	bne	1b234 <myhtml_string_append_with_preprocessing@@Base+0x90>
   1b2a4:	ldr	r1, [r4, #4]
   1b2a8:	mov	r0, r4
   1b2ac:	add	r1, r1, #5
   1b2b0:	bl	108f8 <mycore_string_realloc@plt>
   1b2b4:	ldr	r3, [r4]
   1b2b8:	ldr	r2, [r4, #8]
   1b2bc:	strb	r9, [r3, r2]
   1b2c0:	ldr	r2, [r4, #8]
   1b2c4:	add	r2, r2, #1
   1b2c8:	str	r2, [r4, #8]
   1b2cc:	strb	sl, [r3, r2]
   1b2d0:	ldr	r1, [r4, #8]
   1b2d4:	add	r1, r1, #1
   1b2d8:	str	r1, [r4, #8]
   1b2dc:	strb	fp, [r3, r1]
   1b2e0:	b	1b234 <myhtml_string_append_with_preprocessing@@Base+0x90>

0001b2e4 <myhtml_string_append_lowercase_with_preprocessing@@Base>:
   1b2e4:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b2e8:	mov	r8, r3
   1b2ec:	mov	r7, r1
   1b2f0:	add	r1, r2, #1
   1b2f4:	mov	r4, r0
   1b2f8:	mov	r6, r2
   1b2fc:	ldr	r3, [r0, #8]
   1b300:	add	r1, r1, r3
   1b304:	ldr	r3, [r0, #4]
   1b308:	cmp	r1, r3
   1b30c:	bcc	1b314 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x30>
   1b310:	bl	108f8 <mycore_string_realloc@plt>
   1b314:	ldr	r9, [pc, #272]	; 1b42c <myhtml_string_append_lowercase_with_preprocessing@@Base+0x148>
   1b318:	mov	r5, #0
   1b31c:	mvn	sl, #16
   1b320:	mvn	fp, #64	; 0x40
   1b324:	ldr	r3, [r4]
   1b328:	add	r9, pc, r9
   1b32c:	cmp	r5, r6
   1b330:	bcc	1b348 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x64>
   1b334:	ldr	r2, [r4]
   1b338:	mov	r0, #0
   1b33c:	ldr	r3, [r4, #8]
   1b340:	strb	r0, [r2, r3]
   1b344:	b	1b3c4 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xe0>
   1b348:	ldrb	r2, [r7, r5]
   1b34c:	cmp	r2, #13
   1b350:	bne	1b3cc <myhtml_string_append_lowercase_with_preprocessing@@Base+0xe8>
   1b354:	ldr	r1, [r4, #8]
   1b358:	add	r2, r5, #1
   1b35c:	mov	r0, #10
   1b360:	cmp	r6, r2
   1b364:	strb	r0, [r3, r1]
   1b368:	bls	1b38c <myhtml_string_append_lowercase_with_preprocessing@@Base+0xa8>
   1b36c:	ldrb	r1, [r7, r2]
   1b370:	cmp	r1, r0
   1b374:	moveq	r5, r2
   1b378:	ldr	r2, [r4, #8]
   1b37c:	add	r5, r5, #1
   1b380:	add	r2, r2, #1
   1b384:	str	r2, [r4, #8]
   1b388:	b	1b32c <myhtml_string_append_lowercase_with_preprocessing@@Base+0x48>
   1b38c:	ldr	r2, [r4, #4]
   1b390:	ldr	r1, [r4, #8]
   1b394:	add	r3, r1, #1
   1b398:	cmp	r3, r2
   1b39c:	str	r3, [r4, #8]
   1b3a0:	bcc	1b3b0 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xcc>
   1b3a4:	add	r1, r1, #3
   1b3a8:	mov	r0, r4
   1b3ac:	bl	108f8 <mycore_string_realloc@plt>
   1b3b0:	ldr	r2, [r4]
   1b3b4:	mov	r1, #0
   1b3b8:	ldr	r3, [r4, #8]
   1b3bc:	strb	r1, [r2, r3]
   1b3c0:	ldr	r0, [r4, #8]
   1b3c4:	add	sp, sp, #4
   1b3c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b3cc:	cmp	r2, #0
   1b3d0:	moveq	r1, r8
   1b3d4:	orrne	r1, r8, #1
   1b3d8:	cmp	r1, #0
   1b3dc:	ldrbne	r2, [r9, r2]
   1b3e0:	ldrne	r1, [r4, #8]
   1b3e4:	bne	1b424 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x140>
   1b3e8:	mov	r0, r4
   1b3ec:	ldr	r1, [r4, #4]
   1b3f0:	add	r1, r1, #5
   1b3f4:	bl	108f8 <mycore_string_realloc@plt>
   1b3f8:	ldr	r3, [r4]
   1b3fc:	ldr	r2, [r4, #8]
   1b400:	strb	sl, [r3, r2]
   1b404:	ldr	r2, [r4, #8]
   1b408:	add	r2, r2, #1
   1b40c:	str	r2, [r4, #8]
   1b410:	strb	fp, [r3, r2]
   1b414:	mvn	r2, #66	; 0x42
   1b418:	ldr	r1, [r4, #8]
   1b41c:	add	r1, r1, #1
   1b420:	str	r1, [r4, #8]
   1b424:	strb	r2, [r3, r1]
   1b428:	b	1b378 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x94>
   1b42c:	andeq	fp, sp, r3, lsl #2

0001b430 <myhtml_string_before_append_any_preprocessing@@Base>:
   1b430:	cmp	r2, #0
   1b434:	cmpne	r3, #0
   1b438:	ldrbne	r0, [r1]
   1b43c:	subne	r0, r0, #10
   1b440:	clzne	r0, r0
   1b444:	lsrne	r0, r0, #5
   1b448:	moveq	r0, #0
   1b44c:	bx	lr

0001b450 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base>:
   1b450:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b454:	sub	sp, sp, #20
   1b458:	mov	r5, r3
   1b45c:	mov	r6, r1
   1b460:	add	r1, r5, #1
   1b464:	mov	r4, r0
   1b468:	mov	r7, r2
   1b46c:	ldrb	r3, [sp, #60]	; 0x3c
   1b470:	str	r3, [sp, #8]
   1b474:	ldr	r3, [r0, #8]
   1b478:	add	r1, r1, r3
   1b47c:	ldr	r3, [r0, #4]
   1b480:	cmp	r1, r3
   1b484:	bcc	1b48c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x3c>
   1b488:	bl	108f8 <mycore_string_realloc@plt>
   1b48c:	mov	r8, #0
   1b490:	mvn	r9, #16
   1b494:	ldr	r0, [sp, #56]	; 0x38
   1b498:	mvn	sl, #64	; 0x40
   1b49c:	mvn	fp, #66	; 0x42
   1b4a0:	bl	107c0 <myencoding_get_function_by_id@plt>
   1b4a4:	str	r0, [sp, #4]
   1b4a8:	cmp	r8, r5
   1b4ac:	bcc	1b4e0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x90>
   1b4b0:	ldr	r3, [r4, #4]
   1b4b4:	ldr	r1, [r4, #8]
   1b4b8:	cmp	r1, r3
   1b4bc:	bcc	1b4cc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x7c>
   1b4c0:	add	r1, r1, #1
   1b4c4:	mov	r0, r4
   1b4c8:	bl	108f8 <mycore_string_realloc@plt>
   1b4cc:	ldr	r2, [r4]
   1b4d0:	mov	r0, #0
   1b4d4:	ldr	r3, [r4, #8]
   1b4d8:	strb	r0, [r2, r3]
   1b4dc:	b	1b5b8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x168>
   1b4e0:	mov	r1, r6
   1b4e4:	ldrb	r0, [r7, r8]
   1b4e8:	ldr	r3, [sp, #4]
   1b4ec:	blx	r3
   1b4f0:	cmp	r0, #0
   1b4f4:	bne	1b578 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x128>
   1b4f8:	ldr	r2, [r4, #4]
   1b4fc:	ldr	r1, [r4, #8]
   1b500:	add	r0, r1, #5
   1b504:	cmp	r0, r2
   1b508:	bcc	1b518 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0xc8>
   1b50c:	add	r1, r1, #6
   1b510:	mov	r0, r4
   1b514:	bl	108f8 <mycore_string_realloc@plt>
   1b518:	ldr	r1, [r4]
   1b51c:	ldr	r2, [r4, #8]
   1b520:	ldr	r0, [r6, #12]
   1b524:	add	r1, r1, r2
   1b528:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   1b52c:	cmp	r0, #1
   1b530:	mov	r2, r0
   1b534:	bne	1b56c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x11c>
   1b538:	ldr	ip, [r4]
   1b53c:	ldr	r0, [r4, #8]
   1b540:	ldrb	r1, [ip, r0]
   1b544:	cmp	r1, #13
   1b548:	bne	1b5c0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x170>
   1b54c:	add	r1, r8, #1
   1b550:	mov	lr, #10
   1b554:	cmp	r5, r1
   1b558:	strb	lr, [ip, r0]
   1b55c:	bls	1b580 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x130>
   1b560:	ldrb	r0, [r7, r1]
   1b564:	cmp	r0, lr
   1b568:	moveq	r8, r1
   1b56c:	ldr	r1, [r4, #8]
   1b570:	add	r2, r1, r2
   1b574:	str	r2, [r4, #8]
   1b578:	add	r8, r8, #1
   1b57c:	b	1b4a8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x58>
   1b580:	ldr	r2, [r4, #4]
   1b584:	ldr	r1, [r4, #8]
   1b588:	add	r3, r1, #1
   1b58c:	cmp	r3, r2
   1b590:	str	r3, [r4, #8]
   1b594:	bcc	1b5a4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x154>
   1b598:	add	r1, r1, #3
   1b59c:	mov	r0, r4
   1b5a0:	bl	108f8 <mycore_string_realloc@plt>
   1b5a4:	ldr	r2, [r4]
   1b5a8:	mov	r1, #0
   1b5ac:	ldr	r3, [r4, #8]
   1b5b0:	strb	r1, [r2, r3]
   1b5b4:	ldr	r0, [r4, #8]
   1b5b8:	add	sp, sp, #20
   1b5bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b5c0:	ldr	r3, [sp, #8]
   1b5c4:	cmp	r1, #0
   1b5c8:	orrne	r3, r3, #1
   1b5cc:	cmp	r3, #0
   1b5d0:	bne	1b56c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x11c>
   1b5d4:	ldr	r1, [r4, #4]
   1b5d8:	mov	r0, r4
   1b5dc:	str	r2, [sp, #12]
   1b5e0:	add	r1, r1, #5
   1b5e4:	bl	108f8 <mycore_string_realloc@plt>
   1b5e8:	ldr	r0, [r4]
   1b5ec:	ldr	r1, [r4, #8]
   1b5f0:	ldr	r2, [sp, #12]
   1b5f4:	strb	r9, [r0, r1]
   1b5f8:	ldr	r0, [r4]
   1b5fc:	ldr	r1, [r4, #8]
   1b600:	add	r1, r1, #1
   1b604:	str	r1, [r4, #8]
   1b608:	strb	sl, [r0, r1]
   1b60c:	ldr	r0, [r4]
   1b610:	ldr	r1, [r4, #8]
   1b614:	add	r1, r1, #1
   1b618:	str	r1, [r4, #8]
   1b61c:	strb	fp, [r0, r1]
   1b620:	b	1b56c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x11c>

0001b624 <myhtml_string_append_with_convert_encoding_with_preprocessing@@Base>:
   1b624:	push	{r4, r5, r6, r7, r8, lr}
   1b628:	sub	sp, sp, #32
   1b62c:	mov	r5, r0
   1b630:	add	r4, sp, #8
   1b634:	mov	r6, r1
   1b638:	mov	r0, r4
   1b63c:	mov	r7, r2
   1b640:	mov	r8, r3
   1b644:	bl	10160 <myencoding_result_clean@plt>
   1b648:	ldrb	r3, [sp, #56]	; 0x38
   1b64c:	mov	r2, r6
   1b650:	mov	r1, r4
   1b654:	mov	r0, r5
   1b658:	str	r8, [sp]
   1b65c:	str	r3, [sp, #4]
   1b660:	mov	r3, r7
   1b664:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1b668:	add	sp, sp, #32
   1b66c:	pop	{r4, r5, r6, r7, r8, pc}

0001b670 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base>:
   1b670:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b674:	sub	sp, sp, #20
   1b678:	mov	r5, r3
   1b67c:	mov	r6, r1
   1b680:	add	r1, r5, #1
   1b684:	mov	r4, r0
   1b688:	mov	r7, r2
   1b68c:	ldrb	r3, [sp, #60]	; 0x3c
   1b690:	str	r3, [sp, #8]
   1b694:	ldr	r3, [r0, #8]
   1b698:	add	r1, r1, r3
   1b69c:	ldr	r3, [r0, #4]
   1b6a0:	cmp	r1, r3
   1b6a4:	bcc	1b6ac <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x3c>
   1b6a8:	bl	108f8 <mycore_string_realloc@plt>
   1b6ac:	mov	r8, #0
   1b6b0:	mvn	r9, #16
   1b6b4:	ldr	r0, [sp, #56]	; 0x38
   1b6b8:	mvn	sl, #64	; 0x40
   1b6bc:	mvn	fp, #66	; 0x42
   1b6c0:	bl	107c0 <myencoding_get_function_by_id@plt>
   1b6c4:	str	r0, [sp, #4]
   1b6c8:	cmp	r8, r5
   1b6cc:	bcc	1b700 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x90>
   1b6d0:	ldr	r3, [r4, #4]
   1b6d4:	ldr	r1, [r4, #8]
   1b6d8:	cmp	r1, r3
   1b6dc:	bcc	1b6ec <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x7c>
   1b6e0:	add	r1, r1, #1
   1b6e4:	mov	r0, r4
   1b6e8:	bl	108f8 <mycore_string_realloc@plt>
   1b6ec:	ldr	r2, [r4]
   1b6f0:	mov	r0, #0
   1b6f4:	ldr	r3, [r4, #8]
   1b6f8:	strb	r0, [r2, r3]
   1b6fc:	b	1b7d8 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x168>
   1b700:	mov	r1, r6
   1b704:	ldrb	r0, [r7, r8]
   1b708:	ldr	r3, [sp, #4]
   1b70c:	blx	r3
   1b710:	cmp	r0, #0
   1b714:	bne	1b798 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x128>
   1b718:	ldr	r2, [r4, #4]
   1b71c:	ldr	r1, [r4, #8]
   1b720:	add	r0, r1, #5
   1b724:	cmp	r0, r2
   1b728:	bcc	1b738 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0xc8>
   1b72c:	add	r1, r1, #6
   1b730:	mov	r0, r4
   1b734:	bl	108f8 <mycore_string_realloc@plt>
   1b738:	ldr	r1, [r4]
   1b73c:	ldr	r2, [r4, #8]
   1b740:	ldr	r0, [r6, #12]
   1b744:	add	r1, r1, r2
   1b748:	bl	fc68 <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>
   1b74c:	cmp	r0, #1
   1b750:	mov	r2, r0
   1b754:	bne	1b78c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x11c>
   1b758:	ldr	ip, [r4]
   1b75c:	ldr	r0, [r4, #8]
   1b760:	ldrb	r1, [ip, r0]
   1b764:	cmp	r1, #13
   1b768:	bne	1b7e0 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x170>
   1b76c:	add	r1, r8, #1
   1b770:	mov	lr, #10
   1b774:	cmp	r5, r1
   1b778:	strb	lr, [ip, r0]
   1b77c:	bls	1b7a0 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x130>
   1b780:	ldrb	r0, [r7, r1]
   1b784:	cmp	r0, lr
   1b788:	moveq	r8, r1
   1b78c:	ldr	r1, [r4, #8]
   1b790:	add	r2, r1, r2
   1b794:	str	r2, [r4, #8]
   1b798:	add	r8, r8, #1
   1b79c:	b	1b6c8 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x58>
   1b7a0:	ldr	r2, [r4, #4]
   1b7a4:	ldr	r1, [r4, #8]
   1b7a8:	add	r3, r1, #1
   1b7ac:	cmp	r3, r2
   1b7b0:	str	r3, [r4, #8]
   1b7b4:	bcc	1b7c4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x154>
   1b7b8:	add	r1, r1, #3
   1b7bc:	mov	r0, r4
   1b7c0:	bl	108f8 <mycore_string_realloc@plt>
   1b7c4:	ldr	r2, [r4]
   1b7c8:	mov	r1, #0
   1b7cc:	ldr	r3, [r4, #8]
   1b7d0:	strb	r1, [r2, r3]
   1b7d4:	ldr	r0, [r4, #8]
   1b7d8:	add	sp, sp, #20
   1b7dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b7e0:	ldr	r3, [sp, #8]
   1b7e4:	cmp	r1, #0
   1b7e8:	orrne	r3, r3, #1
   1b7ec:	cmp	r3, #0
   1b7f0:	bne	1b78c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x11c>
   1b7f4:	ldr	r1, [r4, #4]
   1b7f8:	mov	r0, r4
   1b7fc:	str	r2, [sp, #12]
   1b800:	add	r1, r1, #5
   1b804:	bl	108f8 <mycore_string_realloc@plt>
   1b808:	ldr	r0, [r4]
   1b80c:	ldr	r1, [r4, #8]
   1b810:	ldr	r2, [sp, #12]
   1b814:	strb	r9, [r0, r1]
   1b818:	ldr	r0, [r4]
   1b81c:	ldr	r1, [r4, #8]
   1b820:	add	r1, r1, #1
   1b824:	str	r1, [r4, #8]
   1b828:	strb	sl, [r0, r1]
   1b82c:	ldr	r0, [r4]
   1b830:	ldr	r1, [r4, #8]
   1b834:	add	r1, r1, #1
   1b838:	str	r1, [r4, #8]
   1b83c:	strb	fp, [r0, r1]
   1b840:	b	1b78c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x11c>

0001b844 <myhtml_string_append_lowercase_with_convert_encoding_with_preprocessing@@Base>:
   1b844:	push	{r4, r5, r6, r7, r8, lr}
   1b848:	sub	sp, sp, #32
   1b84c:	mov	r5, r0
   1b850:	add	r4, sp, #8
   1b854:	mov	r6, r1
   1b858:	mov	r0, r4
   1b85c:	mov	r7, r2
   1b860:	mov	r8, r3
   1b864:	bl	10160 <myencoding_result_clean@plt>
   1b868:	ldrb	r3, [sp, #56]	; 0x38
   1b86c:	mov	r2, r6
   1b870:	mov	r1, r4
   1b874:	mov	r0, r5
   1b878:	str	r8, [sp]
   1b87c:	str	r3, [sp, #4]
   1b880:	mov	r3, r7
   1b884:	bl	10d24 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1b888:	add	sp, sp, #32
   1b88c:	pop	{r4, r5, r6, r7, r8, pc}

0001b890 <myhtml_parser_stream@@Base>:
   1b890:	ldr	r3, [r1]
   1b894:	ldr	r3, [r3, #184]	; 0xb8
   1b898:	tst	r3, #1
   1b89c:	bxne	lr
   1b8a0:	push	{r4, lr}
   1b8a4:	mov	r4, r1
   1b8a8:	ldrd	r0, [r4]
   1b8ac:	bl	fe3c <myhtml_rules_tree_dispatcher@plt>
   1b8b0:	cmp	r0, #0
   1b8b4:	bne	1b8a8 <myhtml_parser_stream@@Base+0x18>
   1b8b8:	pop	{r4, pc}

0001b8bc <myhtml_parser_token_data_to_string_lowercase@@Base>:
   1b8bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b8c0:	mov	sl, r0
   1b8c4:	sub	sp, sp, #20
   1b8c8:	mov	r6, r1
   1b8cc:	mov	r1, r3
   1b8d0:	mov	r8, r2
   1b8d4:	mov	r4, r3
   1b8d8:	ldr	r0, [r0, #80]	; 0x50
   1b8dc:	ldr	r5, [sp, #56]	; 0x38
   1b8e0:	bl	100a0 <mycore_incoming_buffer_find_by_position@plt>
   1b8e4:	ldr	r3, [r0, #8]
   1b8e8:	mov	r7, r0
   1b8ec:	ldr	r1, [r0, #12]
   1b8f0:	sub	r4, r4, r1
   1b8f4:	add	r2, r4, r5
   1b8f8:	cmp	r2, r3
   1b8fc:	addhi	r3, r8, #8
   1b900:	movhi	fp, #0
   1b904:	strhi	r3, [sp, #12]
   1b908:	bhi	1b94c <myhtml_parser_token_data_to_string_lowercase@@Base+0x90>
   1b90c:	ldr	r2, [sl, #200]	; 0xc8
   1b910:	ldr	r1, [r0]
   1b914:	ldrb	r3, [r8, #61]	; 0x3d
   1b918:	cmp	r2, #0
   1b91c:	moveq	r2, r5
   1b920:	add	r1, r1, r4
   1b924:	beq	1ba2c <myhtml_parser_token_data_to_string_lowercase@@Base+0x170>
   1b928:	str	r3, [sp, #4]
   1b92c:	ldr	r3, [r8, #4]
   1b930:	str	r3, [sp]
   1b934:	mov	r3, r5
   1b938:	mov	r2, r1
   1b93c:	mov	r0, r6
   1b940:	add	r1, r8, #8
   1b944:	bl	10d24 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1b948:	b	1b9c4 <myhtml_parser_token_data_to_string_lowercase@@Base+0x108>
   1b94c:	ldr	r1, [r7]
   1b950:	add	r2, r5, r4
   1b954:	ldr	r3, [r7, #8]
   1b958:	add	r1, r1, r4
   1b95c:	cmp	r2, r3
   1b960:	bls	1b9f4 <myhtml_parser_token_data_to_string_lowercase@@Base+0x138>
   1b964:	sub	r9, r3, r4
   1b968:	sub	r3, r4, r3
   1b96c:	add	r5, r5, r3
   1b970:	mov	r2, r9
   1b974:	mov	r3, fp
   1b978:	mov	r0, r6
   1b97c:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1b980:	cmp	r9, #0
   1b984:	beq	1b9b4 <myhtml_parser_token_data_to_string_lowercase@@Base+0xf8>
   1b988:	add	r4, r0, r4
   1b98c:	sub	r2, r9, r0
   1b990:	ldr	r0, [sl, #200]	; 0xc8
   1b994:	ldr	r1, [r7]
   1b998:	ldrb	r3, [r8, #61]	; 0x3d
   1b99c:	cmp	r0, #0
   1b9a0:	add	r1, r1, r4
   1b9a4:	bne	1b9d0 <myhtml_parser_token_data_to_string_lowercase@@Base+0x114>
   1b9a8:	mov	r0, r6
   1b9ac:	bl	10fc4 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1b9b0:	mov	fp, r0
   1b9b4:	ldr	r7, [r7, #20]
   1b9b8:	mov	r4, #0
   1b9bc:	cmp	r7, r4
   1b9c0:	bne	1b94c <myhtml_parser_token_data_to_string_lowercase@@Base+0x90>
   1b9c4:	ldr	r0, [r6, #8]
   1b9c8:	add	sp, sp, #20
   1b9cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b9d0:	str	r3, [sp, #4]
   1b9d4:	mov	r0, r6
   1b9d8:	ldr	r3, [r8, #4]
   1b9dc:	str	r3, [sp]
   1b9e0:	mov	r3, r2
   1b9e4:	mov	r2, r1
   1b9e8:	ldr	r1, [sp, #12]
   1b9ec:	bl	10d24 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1b9f0:	b	1b9b0 <myhtml_parser_token_data_to_string_lowercase@@Base+0xf4>
   1b9f4:	mov	r3, fp
   1b9f8:	mov	r2, r5
   1b9fc:	mov	r0, r6
   1ba00:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1ba04:	cmp	r5, #0
   1ba08:	beq	1b9c4 <myhtml_parser_token_data_to_string_lowercase@@Base+0x108>
   1ba0c:	add	r4, r0, r4
   1ba10:	sub	r2, r5, r0
   1ba14:	ldr	r0, [sl, #200]	; 0xc8
   1ba18:	ldr	r1, [r7]
   1ba1c:	ldrb	r3, [r8, #61]	; 0x3d
   1ba20:	cmp	r0, #0
   1ba24:	add	r1, r1, r4
   1ba28:	bne	1ba38 <myhtml_parser_token_data_to_string_lowercase@@Base+0x17c>
   1ba2c:	mov	r0, r6
   1ba30:	bl	10fc4 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1ba34:	b	1b9c4 <myhtml_parser_token_data_to_string_lowercase@@Base+0x108>
   1ba38:	str	r3, [sp, #4]
   1ba3c:	ldr	r3, [r8, #4]
   1ba40:	str	r3, [sp]
   1ba44:	mov	r3, r2
   1ba48:	b	1b938 <myhtml_parser_token_data_to_string_lowercase@@Base+0x7c>

0001ba4c <myhtml_parser_token_data_to_string@@Base>:
   1ba4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ba50:	mov	sl, r0
   1ba54:	sub	sp, sp, #20
   1ba58:	mov	r6, r1
   1ba5c:	mov	r1, r3
   1ba60:	mov	r8, r2
   1ba64:	mov	r4, r3
   1ba68:	ldr	r0, [r0, #80]	; 0x50
   1ba6c:	ldr	r5, [sp, #56]	; 0x38
   1ba70:	bl	100a0 <mycore_incoming_buffer_find_by_position@plt>
   1ba74:	ldr	r3, [r0, #8]
   1ba78:	mov	r7, r0
   1ba7c:	ldr	r1, [r0, #12]
   1ba80:	sub	r4, r4, r1
   1ba84:	add	r2, r4, r5
   1ba88:	cmp	r2, r3
   1ba8c:	addhi	r3, r8, #8
   1ba90:	movhi	fp, #0
   1ba94:	strhi	r3, [sp, #12]
   1ba98:	bhi	1badc <myhtml_parser_token_data_to_string@@Base+0x90>
   1ba9c:	ldr	r2, [sl, #200]	; 0xc8
   1baa0:	ldr	r1, [r0]
   1baa4:	ldrb	r3, [r8, #61]	; 0x3d
   1baa8:	cmp	r2, #0
   1baac:	moveq	r2, r5
   1bab0:	add	r1, r1, r4
   1bab4:	beq	1bbbc <myhtml_parser_token_data_to_string@@Base+0x170>
   1bab8:	str	r3, [sp, #4]
   1babc:	ldr	r3, [r8, #4]
   1bac0:	str	r3, [sp]
   1bac4:	mov	r3, r5
   1bac8:	mov	r2, r1
   1bacc:	mov	r0, r6
   1bad0:	add	r1, r8, #8
   1bad4:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1bad8:	b	1bb54 <myhtml_parser_token_data_to_string@@Base+0x108>
   1badc:	ldr	r1, [r7]
   1bae0:	add	r2, r5, r4
   1bae4:	ldr	r3, [r7, #8]
   1bae8:	add	r1, r1, r4
   1baec:	cmp	r2, r3
   1baf0:	bls	1bb84 <myhtml_parser_token_data_to_string@@Base+0x138>
   1baf4:	sub	r9, r3, r4
   1baf8:	sub	r3, r4, r3
   1bafc:	add	r5, r5, r3
   1bb00:	mov	r2, r9
   1bb04:	mov	r3, fp
   1bb08:	mov	r0, r6
   1bb0c:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1bb10:	cmp	r9, #0
   1bb14:	beq	1bb44 <myhtml_parser_token_data_to_string@@Base+0xf8>
   1bb18:	add	r4, r0, r4
   1bb1c:	sub	r2, r9, r0
   1bb20:	ldr	r0, [sl, #200]	; 0xc8
   1bb24:	ldr	r1, [r7]
   1bb28:	ldrb	r3, [r8, #61]	; 0x3d
   1bb2c:	cmp	r0, #0
   1bb30:	add	r1, r1, r4
   1bb34:	bne	1bb60 <myhtml_parser_token_data_to_string@@Base+0x114>
   1bb38:	mov	r0, r6
   1bb3c:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   1bb40:	mov	fp, r0
   1bb44:	ldr	r7, [r7, #20]
   1bb48:	mov	r4, #0
   1bb4c:	cmp	r7, r4
   1bb50:	bne	1badc <myhtml_parser_token_data_to_string@@Base+0x90>
   1bb54:	ldr	r0, [r6, #8]
   1bb58:	add	sp, sp, #20
   1bb5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bb60:	str	r3, [sp, #4]
   1bb64:	mov	r0, r6
   1bb68:	ldr	r3, [r8, #4]
   1bb6c:	str	r3, [sp]
   1bb70:	mov	r3, r2
   1bb74:	mov	r2, r1
   1bb78:	ldr	r1, [sp, #12]
   1bb7c:	bl	10da8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1bb80:	b	1bb40 <myhtml_parser_token_data_to_string@@Base+0xf4>
   1bb84:	mov	r3, fp
   1bb88:	mov	r2, r5
   1bb8c:	mov	r0, r6
   1bb90:	bl	10bb0 <myhtml_string_before_append_any_preprocessing@plt>
   1bb94:	cmp	r5, #0
   1bb98:	beq	1bb54 <myhtml_parser_token_data_to_string@@Base+0x108>
   1bb9c:	add	r4, r0, r4
   1bba0:	sub	r2, r5, r0
   1bba4:	ldr	r0, [sl, #200]	; 0xc8
   1bba8:	ldr	r1, [r7]
   1bbac:	ldrb	r3, [r8, #61]	; 0x3d
   1bbb0:	cmp	r0, #0
   1bbb4:	add	r1, r1, r4
   1bbb8:	bne	1bbc8 <myhtml_parser_token_data_to_string@@Base+0x17c>
   1bbbc:	mov	r0, r6
   1bbc0:	bl	1016c <myhtml_string_append_with_preprocessing@plt>
   1bbc4:	b	1bb54 <myhtml_parser_token_data_to_string@@Base+0x108>
   1bbc8:	str	r3, [sp, #4]
   1bbcc:	ldr	r3, [r8, #4]
   1bbd0:	str	r3, [sp]
   1bbd4:	mov	r3, r2
   1bbd8:	b	1bac8 <myhtml_parser_token_data_to_string@@Base+0x7c>

0001bbdc <myhtml_parser_token_data_to_string_charef@@Base>:
   1bbdc:	push	{r4, r5, r6, r7, r8, lr}
   1bbe0:	mov	r6, r1
   1bbe4:	mov	r1, r3
   1bbe8:	mov	r4, r3
   1bbec:	mov	r8, r2
   1bbf0:	ldr	r0, [r0, #80]	; 0x50
   1bbf4:	ldr	r7, [sp, #24]
   1bbf8:	bl	100a0 <mycore_incoming_buffer_find_by_position@plt>
   1bbfc:	ldr	r3, [r0, #8]
   1bc00:	mov	r5, r0
   1bc04:	ldr	r1, [r0, #12]
   1bc08:	sub	r1, r4, r1
   1bc0c:	add	r2, r1, r7
   1bc10:	cmp	r2, r3
   1bc14:	ldrls	r2, [r0]
   1bc18:	movls	r3, r7
   1bc1c:	addls	r2, r2, r1
   1bc20:	bls	1bc7c <myhtml_parser_token_data_to_string_charef@@Base+0xa0>
   1bc24:	ldr	r2, [r5]
   1bc28:	add	r0, r7, r1
   1bc2c:	ldr	r3, [r5, #8]
   1bc30:	add	r2, r2, r1
   1bc34:	cmp	r0, r3
   1bc38:	bls	1bc78 <myhtml_parser_token_data_to_string_charef@@Base+0x9c>
   1bc3c:	sub	r0, r1, r3
   1bc40:	sub	r3, r3, r1
   1bc44:	add	r7, r7, r0
   1bc48:	mov	r1, r6
   1bc4c:	mov	r0, r8
   1bc50:	bl	106e8 <myhtml_data_process@plt>
   1bc54:	ldr	r5, [r5, #20]
   1bc58:	mov	r1, #0
   1bc5c:	cmp	r5, r1
   1bc60:	bne	1bc24 <myhtml_parser_token_data_to_string_charef@@Base+0x48>
   1bc64:	mov	r0, r8
   1bc68:	mov	r1, r6
   1bc6c:	bl	108bc <myhtml_data_process_end@plt>
   1bc70:	ldr	r0, [r6, #8]
   1bc74:	pop	{r4, r5, r6, r7, r8, pc}
   1bc78:	mov	r3, r7
   1bc7c:	mov	r1, r6
   1bc80:	mov	r0, r8
   1bc84:	bl	106e8 <myhtml_data_process@plt>
   1bc88:	b	1bc64 <myhtml_parser_token_data_to_string_charef@@Base+0x88>

0001bc8c <myhtml_parser_worker@@Base>:
   1bc8c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1bc90:	sub	sp, sp, #72	; 0x48
   1bc94:	ldrd	r4, [r1]
   1bc98:	ldr	r2, [r4, #184]	; 0xb8
   1bc9c:	ldr	r3, [r4, #220]	; 0xdc
   1bca0:	tst	r2, #3
   1bca4:	beq	1bd04 <myhtml_parser_worker@@Base+0x78>
   1bca8:	ldr	r2, [r4, #184]	; 0xb8
   1bcac:	tst	r2, #2
   1bcb0:	beq	1bd04 <myhtml_parser_worker@@Base+0x78>
   1bcb4:	cmp	r3, #0
   1bcb8:	beq	1bcd0 <myhtml_parser_worker@@Base+0x44>
   1bcbc:	mov	r1, r5
   1bcc0:	mov	r0, r4
   1bcc4:	ldr	r2, [r4, #228]	; 0xe4
   1bcc8:	blx	r3
   1bccc:	str	r0, [r4, #228]	; 0xe4
   1bcd0:	ldr	r3, [r5, #48]	; 0x30
   1bcd4:	orr	r3, r3, #4
   1bcd8:	str	r3, [r5, #48]	; 0x30
   1bcdc:	ldr	r3, [r4, #224]	; 0xe0
   1bce0:	cmp	r3, #0
   1bce4:	beq	1bcfc <myhtml_parser_worker@@Base+0x70>
   1bce8:	mov	r1, r5
   1bcec:	mov	r0, r4
   1bcf0:	ldr	r2, [r4, #232]	; 0xe8
   1bcf4:	blx	r3
   1bcf8:	str	r0, [r4, #232]	; 0xe8
   1bcfc:	add	sp, sp, #72	; 0x48
   1bd00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bd04:	ldr	r2, [r4]
   1bd08:	ldr	r1, [r2, #4]
   1bd0c:	ldr	r2, [r4, #144]	; 0x90
   1bd10:	cmp	r1, #0
   1bd14:	ldrne	r1, [r1, #12]
   1bd18:	addne	r0, r0, r1
   1bd1c:	cmp	r3, #0
   1bd20:	ldr	r7, [r2, r0, lsl #2]
   1bd24:	beq	1bd3c <myhtml_parser_worker@@Base+0xb0>
   1bd28:	mov	r1, r5
   1bd2c:	mov	r0, r4
   1bd30:	ldr	r2, [r4, #228]	; 0xe4
   1bd34:	blx	r3
   1bd38:	str	r0, [r4, #228]	; 0xe4
   1bd3c:	mov	r6, r5
   1bd40:	ldr	r3, [r6], #4
   1bd44:	sub	r3, r3, #1
   1bd48:	cmp	r3, #1
   1bd4c:	bhi	1bdf8 <myhtml_parser_worker@@Base+0x16c>
   1bd50:	ldr	r3, [r5, #28]
   1bd54:	mov	r2, r6
   1bd58:	mov	r1, r7
   1bd5c:	add	r7, sp, #8
   1bd60:	ldr	r0, [r4, #4]
   1bd64:	add	r3, r3, #1
   1bd68:	bl	105a4 <mycore_string_init@plt>
   1bd6c:	mov	r3, #0
   1bd70:	mov	r0, r7
   1bd74:	str	r3, [r5, #40]	; 0x28
   1bd78:	str	r3, [r5, #44]	; 0x2c
   1bd7c:	bl	10484 <myhtml_data_process_entry_clean@plt>
   1bd80:	ldr	r3, [r4, #200]	; 0xc8
   1bd84:	ldr	r2, [r5, #28]
   1bd88:	str	r3, [sp, #12]
   1bd8c:	ldr	r3, [r5, #48]	; 0x30
   1bd90:	tst	r3, #512	; 0x200
   1bd94:	beq	1bdbc <myhtml_parser_worker@@Base+0x130>
   1bd98:	mov	r3, #1
   1bd9c:	str	r2, [sp]
   1bda0:	strb	r3, [sp, #69]	; 0x45
   1bda4:	ldr	r3, [r5, #24]
   1bda8:	mov	r2, r7
   1bdac:	mov	r1, r6
   1bdb0:	mov	r0, r4
   1bdb4:	bl	10394 <myhtml_parser_token_data_to_string_charef@plt>
   1bdb8:	b	1bcd0 <myhtml_parser_worker@@Base+0x44>
   1bdbc:	ldr	r3, [r5, #24]
   1bdc0:	ldr	r1, [r5, #48]	; 0x30
   1bdc4:	tst	r1, #16
   1bdc8:	bne	1bdd8 <myhtml_parser_worker@@Base+0x14c>
   1bdcc:	ldr	r1, [r5, #48]	; 0x30
   1bdd0:	tst	r1, #256	; 0x100
   1bdd4:	beq	1bde0 <myhtml_parser_worker@@Base+0x154>
   1bdd8:	str	r2, [sp]
   1bddc:	b	1bda8 <myhtml_parser_worker@@Base+0x11c>
   1bde0:	mov	r1, r6
   1bde4:	mov	r0, r4
   1bde8:	str	r2, [sp]
   1bdec:	mov	r2, r7
   1bdf0:	bl	10a60 <myhtml_parser_token_data_to_string@plt>
   1bdf4:	b	1bcd0 <myhtml_parser_worker@@Base+0x44>
   1bdf8:	ldr	r3, [r5, #40]	; 0x28
   1bdfc:	cmp	r3, #0
   1be00:	beq	1beec <myhtml_parser_worker@@Base+0x260>
   1be04:	mov	r0, r6
   1be08:	add	r8, sp, #8
   1be0c:	bl	11024 <mycore_string_clean_all@plt>
   1be10:	ldr	r6, [r5, #40]	; 0x28
   1be14:	mov	sl, #1
   1be18:	cmp	r6, #0
   1be1c:	beq	1bcd0 <myhtml_parser_worker@@Base+0x44>
   1be20:	ldr	r3, [r6, #52]	; 0x34
   1be24:	add	r9, r6, #8
   1be28:	cmp	r3, #0
   1be2c:	beq	1bed4 <myhtml_parser_worker@@Base+0x248>
   1be30:	mov	r0, r8
   1be34:	bl	10484 <myhtml_data_process_entry_clean@plt>
   1be38:	ldr	r0, [r4, #4]
   1be3c:	mov	r2, r9
   1be40:	mov	r1, r7
   1be44:	ldr	r3, [r4, #200]	; 0xc8
   1be48:	str	r3, [sp, #12]
   1be4c:	ldr	r3, [r6, #52]	; 0x34
   1be50:	add	r3, r3, #1
   1be54:	bl	105a4 <mycore_string_init@plt>
   1be58:	ldr	r3, [r6, #52]	; 0x34
   1be5c:	mov	r2, r8
   1be60:	mov	r1, r9
   1be64:	mov	r0, r4
   1be68:	str	r3, [sp]
   1be6c:	ldr	r3, [r6, #48]	; 0x30
   1be70:	bl	10fa0 <myhtml_parser_token_data_to_string_lowercase@plt>
   1be74:	ldr	r3, [r6, #60]	; 0x3c
   1be78:	add	r9, r6, #28
   1be7c:	cmp	r3, #0
   1be80:	beq	1bee0 <myhtml_parser_worker@@Base+0x254>
   1be84:	mov	r0, r8
   1be88:	bl	10484 <myhtml_data_process_entry_clean@plt>
   1be8c:	ldr	r0, [r4, #4]
   1be90:	mov	r2, r9
   1be94:	mov	r1, r7
   1be98:	ldr	r3, [r4, #200]	; 0xc8
   1be9c:	str	r3, [sp, #12]
   1bea0:	ldr	r3, [r6, #60]	; 0x3c
   1bea4:	strb	sl, [sp, #68]	; 0x44
   1bea8:	add	r3, r3, #1
   1beac:	bl	105a4 <mycore_string_init@plt>
   1beb0:	ldr	r3, [r6, #60]	; 0x3c
   1beb4:	mov	r2, r8
   1beb8:	mov	r1, r9
   1bebc:	mov	r0, r4
   1bec0:	str	r3, [sp]
   1bec4:	ldr	r3, [r6, #56]	; 0x38
   1bec8:	bl	10394 <myhtml_parser_token_data_to_string_charef@plt>
   1becc:	ldr	r6, [r6]
   1bed0:	b	1be18 <myhtml_parser_worker@@Base+0x18c>
   1bed4:	mov	r0, r9
   1bed8:	bl	11024 <mycore_string_clean_all@plt>
   1bedc:	b	1be74 <myhtml_parser_worker@@Base+0x1e8>
   1bee0:	mov	r0, r9
   1bee4:	bl	11024 <mycore_string_clean_all@plt>
   1bee8:	b	1becc <myhtml_parser_worker@@Base+0x240>
   1beec:	mov	r0, r6
   1bef0:	str	r3, [r5, #44]	; 0x2c
   1bef4:	bl	11024 <mycore_string_clean_all@plt>
   1bef8:	b	1bcd0 <myhtml_parser_worker@@Base+0x44>

0001befc <myhtml_parser_worker_stream@@Base>:
   1befc:	push	{r4, r5, r6, lr}
   1bf00:	mov	r4, r0
   1bf04:	mov	r5, r1
   1bf08:	bl	fd1c <myhtml_parser_worker@plt>
   1bf0c:	mov	r1, r5
   1bf10:	mov	r0, r4
   1bf14:	pop	{r4, r5, r6, lr}
   1bf18:	b	10f88 <myhtml_parser_stream@plt>

0001bf1c <myhtml_insertion_mode_text@@Base>:
   1bf1c:	ldr	r3, [r1, #48]	; 0x30
   1bf20:	push	{r4, r5, r6, lr}
   1bf24:	mov	r5, r0
   1bf28:	ands	r4, r3, #1
   1bf2c:	beq	1bf44 <myhtml_insertion_mode_text@@Base+0x28>
   1bf30:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1bf34:	ldr	r3, [r5, #172]	; 0xac
   1bf38:	str	r3, [r5, #168]	; 0xa8
   1bf3c:	mov	r0, #0
   1bf40:	pop	{r4, r5, r6, pc}
   1bf44:	ldr	r3, [r1]
   1bf48:	cmp	r3, #251	; 0xfb
   1bf4c:	bne	1bf80 <myhtml_insertion_mode_text@@Base+0x64>
   1bf50:	bl	105bc <myhtml_tree_current_node@plt>
   1bf54:	ldr	r3, [r0, #4]
   1bf58:	cmp	r3, #112	; 0x70
   1bf5c:	ldreq	r3, [r0]
   1bf60:	orreq	r3, r3, #8
   1bf64:	streq	r3, [r0]
   1bf68:	mov	r0, r5
   1bf6c:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1bf70:	ldr	r3, [r5, #172]	; 0xac
   1bf74:	mov	r0, #1
   1bf78:	str	r3, [r5, #168]	; 0xa8
   1bf7c:	pop	{r4, r5, r6, pc}
   1bf80:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   1bf84:	b	1bf3c <myhtml_insertion_mode_text@@Base+0x20>

0001bf88 <myhtml_insertion_fix_emit_for_text_begin_ws@@Base>:
   1bf88:	push	{r4, lr}
   1bf8c:	mov	r4, r1
   1bf90:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1bf94:	add	r0, r4, #4
   1bf98:	pop	{r4, lr}
   1bf9c:	b	10448 <mycore_string_crop_whitespace_from_begin@plt>

0001bfa0 <myhtml_insertion_mode_initial@@Base>:
   1bfa0:	push	{r4, r5, r6, lr}
   1bfa4:	mov	r5, r0
   1bfa8:	ldr	r4, [r1]
   1bfac:	cmp	r4, #2
   1bfb0:	beq	1bfec <myhtml_insertion_mode_initial@@Base+0x4c>
   1bfb4:	cmp	r4, #3
   1bfb8:	mov	r6, r1
   1bfbc:	beq	1bffc <myhtml_insertion_mode_initial@@Base+0x5c>
   1bfc0:	cmp	r4, #1
   1bfc4:	bne	1c064 <myhtml_insertion_mode_initial@@Base+0xc4>
   1bfc8:	ldr	r3, [r1, #48]	; 0x30
   1bfcc:	tst	r3, #8
   1bfd0:	bne	1bff4 <myhtml_insertion_mode_initial@@Base+0x54>
   1bfd4:	ldr	r0, [r0, #8]
   1bfd8:	bl	100b8 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   1bfdc:	mov	r0, r4
   1bfe0:	str	r4, [r5, #168]	; 0xa8
   1bfe4:	str	r4, [r5, #176]	; 0xb0
   1bfe8:	pop	{r4, r5, r6, pc}
   1bfec:	ldr	r2, [r0, #84]	; 0x54
   1bff0:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   1bff4:	mov	r0, #0
   1bff8:	pop	{r4, r5, r6, pc}
   1bffc:	ldr	r0, [r0, #8]
   1c000:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1c004:	add	r2, r5, #108	; 0x6c
   1c008:	mov	r1, r6
   1c00c:	ldr	r0, [r5, #8]
   1c010:	bl	fbcc <myhtml_token_release_and_check_doctype_attributes@plt>
   1c014:	ldr	r3, [r5, #184]	; 0xb8
   1c018:	tst	r3, #8
   1c01c:	bne	1c02c <myhtml_insertion_mode_initial@@Base+0x8c>
   1c020:	mov	r1, r6
   1c024:	mov	r0, r5
   1c028:	bl	10dc0 <myhtml_tree_node_insert_doctype@plt>
   1c02c:	ldrb	r3, [r5, #108]	; 0x6c
   1c030:	cmp	r3, #0
   1c034:	bne	1c058 <myhtml_insertion_mode_initial@@Base+0xb8>
   1c038:	ldr	r3, [r5, #116]	; 0x74
   1c03c:	cmp	r3, #0
   1c040:	beq	1c050 <myhtml_insertion_mode_initial@@Base+0xb0>
   1c044:	ldr	r3, [r5, #120]	; 0x78
   1c048:	cmp	r3, #0
   1c04c:	bne	1c058 <myhtml_insertion_mode_initial@@Base+0xb8>
   1c050:	mov	r3, #1
   1c054:	str	r3, [r5, #176]	; 0xb0
   1c058:	mov	r3, #1
   1c05c:	str	r3, [r5, #168]	; 0xa8
   1c060:	b	1bff4 <myhtml_insertion_mode_initial@@Base+0x54>
   1c064:	mov	r0, #1
   1c068:	str	r0, [r5, #168]	; 0xa8
   1c06c:	str	r0, [r5, #176]	; 0xb0
   1c070:	pop	{r4, r5, r6, pc}

0001c074 <myhtml_insertion_mode_before_html@@Base>:
   1c074:	push	{r4, r5, r6, r7, r8, lr}
   1c078:	mov	r6, r0
   1c07c:	ldr	r5, [r1]
   1c080:	ldr	r4, [r1, #48]	; 0x30
   1c084:	ands	r4, r4, #1
   1c088:	beq	1c0d8 <myhtml_insertion_mode_before_html@@Base+0x64>
   1c08c:	cmp	r5, #61	; 0x3d
   1c090:	beq	1c0a4 <myhtml_insertion_mode_before_html@@Base+0x30>
   1c094:	bhi	1c0c8 <myhtml_insertion_mode_before_html@@Base+0x54>
   1c098:	sub	r0, r5, #23
   1c09c:	cmp	r0, #1
   1c0a0:	bhi	1c0d0 <myhtml_insertion_mode_before_html@@Base+0x5c>
   1c0a4:	mov	r2, #1
   1c0a8:	mov	r1, #0
   1c0ac:	mov	r0, r6
   1c0b0:	mov	r4, #1
   1c0b4:	bl	fba8 <myhtml_tree_node_insert_root@plt>
   1c0b8:	mov	r3, #2
   1c0bc:	str	r3, [r6, #168]	; 0xa8
   1c0c0:	mov	r0, r4
   1c0c4:	pop	{r4, r5, r6, r7, r8, pc}
   1c0c8:	cmp	r5, #65	; 0x41
   1c0cc:	beq	1c0a4 <myhtml_insertion_mode_before_html@@Base+0x30>
   1c0d0:	mov	r4, #0
   1c0d4:	b	1c0c0 <myhtml_insertion_mode_before_html@@Base+0x4c>
   1c0d8:	cmp	r5, #2
   1c0dc:	beq	1c128 <myhtml_insertion_mode_before_html@@Base+0xb4>
   1c0e0:	bhi	1c104 <myhtml_insertion_mode_before_html@@Base+0x90>
   1c0e4:	cmp	r5, #1
   1c0e8:	bne	1c0a4 <myhtml_insertion_mode_before_html@@Base+0x30>
   1c0ec:	ldr	r3, [r1, #48]	; 0x30
   1c0f0:	ands	r7, r3, #8
   1c0f4:	bne	1c0c0 <myhtml_insertion_mode_before_html@@Base+0x4c>
   1c0f8:	ldr	r0, [r0, #8]
   1c0fc:	bl	100b8 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   1c100:	b	1c0a4 <myhtml_insertion_mode_before_html@@Base+0x30>
   1c104:	cmp	r5, #3
   1c108:	beq	1c0c0 <myhtml_insertion_mode_before_html@@Base+0x4c>
   1c10c:	cmp	r5, #65	; 0x41
   1c110:	bne	1c0a4 <myhtml_insertion_mode_before_html@@Base+0x30>
   1c114:	mov	r2, #1
   1c118:	bl	fba8 <myhtml_tree_node_insert_root@plt>
   1c11c:	mov	r3, #2
   1c120:	str	r3, [r6, #168]	; 0xa8
   1c124:	b	1c0c0 <myhtml_insertion_mode_before_html@@Base+0x4c>
   1c128:	ldr	r2, [r0, #84]	; 0x54
   1c12c:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   1c130:	b	1c0c0 <myhtml_insertion_mode_before_html@@Base+0x4c>

0001c134 <myhtml_insertion_fix_split_for_text_begin_ws@@Base>:
   1c134:	push	{r4, r5, r6, r7, r8, lr}
   1c138:	mov	r4, r1
   1c13c:	mov	r7, r0
   1c140:	ldr	r0, [r0, #8]
   1c144:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1c148:	add	r0, r4, #4
   1c14c:	bl	10d78 <mycore_string_whitespace_from_begin@plt>
   1c150:	subs	r6, r0, #0
   1c154:	moveq	r5, r6
   1c158:	beq	1c1c0 <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x8c>
   1c15c:	ldr	r0, [r7, #8]
   1c160:	ldr	r1, [r7, #40]	; 0x28
   1c164:	bl	109a0 <myhtml_token_node_create@plt>
   1c168:	subs	r5, r0, #0
   1c16c:	beq	1c1c0 <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x8c>
   1c170:	add	r8, r5, #4
   1c174:	add	r3, r6, #2
   1c178:	ldr	r0, [r7, #4]
   1c17c:	mov	r2, r8
   1c180:	ldr	r1, [r7, #52]	; 0x34
   1c184:	bl	105a4 <mycore_string_init@plt>
   1c188:	mov	r2, r6
   1c18c:	mov	r0, r8
   1c190:	ldr	r1, [r4, #4]
   1c194:	bl	10868 <mycore_string_append@plt>
   1c198:	ldr	r3, [r5, #48]	; 0x30
   1c19c:	mov	r1, r6
   1c1a0:	ldr	r0, [r4, #4]
   1c1a4:	orr	r3, r3, #4
   1c1a8:	str	r3, [r5, #48]	; 0x30
   1c1ac:	bl	10bf8 <mchar_async_crop_first_chars_without_cache@plt>
   1c1b0:	ldr	r3, [r4, #12]
   1c1b4:	str	r0, [r4, #4]
   1c1b8:	sub	r6, r3, r6
   1c1bc:	str	r6, [r4, #12]
   1c1c0:	mov	r0, r5
   1c1c4:	pop	{r4, r5, r6, r7, r8, pc}

0001c1c8 <myhtml_insertion_fix_for_null_char_drop_all@@Base>:
   1c1c8:	push	{r4, r5, r6, r7, r8, lr}
   1c1cc:	mov	r6, r1
   1c1d0:	ldr	r0, [r0, #8]
   1c1d4:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1c1d8:	ldr	r5, [r6, #12]
   1c1dc:	mov	r3, #0
   1c1e0:	mov	r7, r3
   1c1e4:	cmp	r3, r5
   1c1e8:	popcs	{r4, r5, r6, r7, r8, pc}
   1c1ec:	ldr	r0, [r6, #4]
   1c1f0:	ldrb	r2, [r0, r3]
   1c1f4:	cmp	r2, #0
   1c1f8:	bne	1c25c <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x94>
   1c1fc:	mov	r2, r3
   1c200:	add	r2, r2, #1
   1c204:	cmp	r5, r2
   1c208:	add	r1, r0, r2
   1c20c:	beq	1c264 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x9c>
   1c210:	ldrb	ip, [r0, r2]
   1c214:	cmp	ip, #0
   1c218:	beq	1c200 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x38>
   1c21c:	ldr	ip, [r6, #12]
   1c220:	mov	r4, r2
   1c224:	add	ip, r3, ip
   1c228:	sub	ip, ip, r2
   1c22c:	str	ip, [r6, #12]
   1c230:	cmp	r4, r5
   1c234:	bcs	1c244 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x7c>
   1c238:	ldrb	ip, [r0, r4]
   1c23c:	cmp	ip, #0
   1c240:	bne	1c26c <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xa4>
   1c244:	sub	r3, r3, r7
   1c248:	sub	r2, r4, r2
   1c24c:	add	r0, r0, r3
   1c250:	add	r7, r7, #1
   1c254:	bl	fe18 <memmove@plt>
   1c258:	sub	r3, r4, #1
   1c25c:	add	r3, r3, #1
   1c260:	b	1c1e4 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x1c>
   1c264:	mov	r2, r5
   1c268:	b	1c21c <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x54>
   1c26c:	add	r4, r4, #1
   1c270:	b	1c230 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x68>

0001c274 <myhtml_insertion_mode_in_body_other_end_tag@@Base>:
   1c274:	ldr	r3, [r0, #128]	; 0x80
   1c278:	push	{r4, r5, r6, r7, r8, lr}
   1c27c:	mov	r4, r0
   1c280:	mov	r7, r1
   1c284:	ldr	r5, [r3, #4]
   1c288:	cmp	r5, #0
   1c28c:	beq	1c2dc <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x68>
   1c290:	ldr	r3, [r4, #128]	; 0x80
   1c294:	sub	r5, r5, #1
   1c298:	ldr	r3, [r3]
   1c29c:	ldr	r6, [r3, r5, lsl #2]
   1c2a0:	ldr	r3, [r7]
   1c2a4:	ldr	r1, [r6, #4]
   1c2a8:	cmp	r1, r3
   1c2ac:	bne	1c2e4 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x70>
   1c2b0:	ldr	r2, [r6, #8]
   1c2b4:	cmp	r2, #1
   1c2b8:	bne	1c2e4 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x70>
   1c2bc:	mov	r0, r4
   1c2c0:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   1c2c4:	mov	r0, r4
   1c2c8:	bl	105bc <myhtml_tree_current_node@plt>
   1c2cc:	mov	r2, #0
   1c2d0:	mov	r1, r6
   1c2d4:	mov	r0, r4
   1c2d8:	bl	100dc <myhtml_tree_open_elements_pop_until_by_node@plt>
   1c2dc:	mov	r0, #0
   1c2e0:	pop	{r4, r5, r6, r7, r8, pc}
   1c2e4:	ldr	r0, [r4, #28]
   1c2e8:	bl	109b8 <myhtml_tag_get_by_id@plt>
   1c2ec:	ldr	r3, [r6, #8]
   1c2f0:	add	r3, r3, #4
   1c2f4:	ldr	r3, [r0, r3, lsl #2]
   1c2f8:	tst	r3, #2
   1c2fc:	beq	1c288 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x14>
   1c300:	b	1c2dc <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x68>

0001c304 <myhtml_insertion_mode_in_foreign_content_end_other@@Base>:
   1c304:	ldr	r3, [r0, #128]	; 0x80
   1c308:	push	{r4, lr}
   1c30c:	ldr	r1, [r3, #4]
   1c310:	cmp	r1, #0
   1c314:	beq	1c354 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x50>
   1c318:	ldr	ip, [r3]
   1c31c:	ldr	r3, [r3, #4]
   1c320:	ldr	lr, [r2]
   1c324:	sub	r3, r3, #1
   1c328:	cmp	r3, #0
   1c32c:	beq	1c354 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x50>
   1c330:	ldr	r1, [ip, r3, lsl #2]
   1c334:	ldr	r4, [r1, #4]
   1c338:	cmp	lr, r4
   1c33c:	beq	1c370 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x6c>
   1c340:	sub	r3, r3, #1
   1c344:	ldr	r1, [ip, r3, lsl #2]
   1c348:	ldr	r1, [r1, #8]
   1c34c:	cmp	r1, #1
   1c350:	bne	1c328 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x24>
   1c354:	ldr	r3, [r0]
   1c358:	pop	{r4, lr}
   1c35c:	ldr	r3, [r3, #28]
   1c360:	ldr	r1, [r0, #168]	; 0xa8
   1c364:	ldr	r3, [r3, r1, lsl #2]
   1c368:	mov	r1, r2
   1c36c:	bx	r3
   1c370:	mov	r2, #0
   1c374:	bl	100dc <myhtml_tree_open_elements_pop_until_by_node@plt>
   1c378:	mov	r0, #0
   1c37c:	pop	{r4, pc}

0001c380 <myhtml_insertion_mode_in_foreign_content_start_other@@Base>:
   1c380:	push	{r4, r5, r6, lr}
   1c384:	mov	r5, r0
   1c388:	mov	r4, r1
   1c38c:	bl	10cdc <myhtml_tree_adjusted_current_node@plt>
   1c390:	mov	r6, r0
   1c394:	mov	r1, r4
   1c398:	ldr	r0, [r5, #8]
   1c39c:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1c3a0:	ldr	r3, [r6, #8]
   1c3a4:	cmp	r3, #2
   1c3a8:	bne	1c408 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x88>
   1c3ac:	mov	r0, r4
   1c3b0:	bl	ff14 <myhtml_token_adjust_mathml_attributes@plt>
   1c3b4:	mov	r0, r4
   1c3b8:	bl	10b74 <myhtml_token_adjust_foreign_attributes@plt>
   1c3bc:	mov	r1, r4
   1c3c0:	mov	r0, r5
   1c3c4:	bl	10d18 <myhtml_tree_node_insert_foreign_element@plt>
   1c3c8:	ldr	r2, [r4, #48]	; 0x30
   1c3cc:	ldr	r3, [r6, #8]
   1c3d0:	tst	r2, #2
   1c3d4:	str	r3, [r0, #8]
   1c3d8:	beq	1c420 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0xa0>
   1c3dc:	ldr	r2, [r4]
   1c3e0:	mov	r0, r5
   1c3e4:	cmp	r2, #112	; 0x70
   1c3e8:	cmpeq	r3, #3
   1c3ec:	bne	1c41c <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x9c>
   1c3f0:	bl	105bc <myhtml_tree_current_node@plt>
   1c3f4:	mov	r1, r0
   1c3f8:	mov	r2, r4
   1c3fc:	mov	r0, r5
   1c400:	pop	{r4, r5, r6, lr}
   1c404:	b	fc98 <myhtml_insertion_mode_in_foreign_content_end_other@plt>
   1c408:	cmp	r3, #3
   1c40c:	bne	1c3b4 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x34>
   1c410:	mov	r0, r4
   1c414:	bl	10178 <myhtml_token_adjust_svg_attributes@plt>
   1c418:	b	1c3b4 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x34>
   1c41c:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1c420:	mov	r0, #0
   1c424:	pop	{r4, r5, r6, pc}

0001c428 <myhtml_insertion_mode_in_foreign_content@@Base>:
   1c428:	push	{r4, r5, r6, lr}
   1c42c:	mov	r5, r0
   1c430:	mov	r6, r1
   1c434:	ldr	r4, [r1, #48]	; 0x30
   1c438:	ands	r4, r4, #1
   1c43c:	beq	1c48c <myhtml_insertion_mode_in_foreign_content@@Base+0x64>
   1c440:	bl	105bc <myhtml_tree_current_node@plt>
   1c444:	ldr	r3, [r6]
   1c448:	mov	r1, r0
   1c44c:	cmp	r3, #112	; 0x70
   1c450:	bne	1c47c <myhtml_insertion_mode_in_foreign_content@@Base+0x54>
   1c454:	ldr	r3, [r0, #4]
   1c458:	cmp	r3, #112	; 0x70
   1c45c:	bne	1c47c <myhtml_insertion_mode_in_foreign_content@@Base+0x54>
   1c460:	ldr	r3, [r0, #8]
   1c464:	cmp	r3, #3
   1c468:	bne	1c47c <myhtml_insertion_mode_in_foreign_content@@Base+0x54>
   1c46c:	mov	r0, r5
   1c470:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1c474:	mov	r0, #0
   1c478:	pop	{r4, r5, r6, pc}
   1c47c:	mov	r2, r6
   1c480:	mov	r0, r5
   1c484:	pop	{r4, r5, r6, lr}
   1c488:	b	fc98 <myhtml_insertion_mode_in_foreign_content_end_other@plt>
   1c48c:	ldr	r3, [r1]
   1c490:	cmp	r3, #69	; 0x45
   1c494:	beq	1c534 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1c498:	bhi	1c624 <myhtml_insertion_mode_in_foreign_content@@Base+0x1fc>
   1c49c:	cmp	r3, #30
   1c4a0:	beq	1c534 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1c4a4:	bhi	1c568 <myhtml_insertion_mode_in_foreign_content@@Base+0x140>
   1c4a8:	cmp	r3, #14
   1c4ac:	beq	1c534 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1c4b0:	bhi	1c51c <myhtml_insertion_mode_in_foreign_content@@Base+0xf4>
   1c4b4:	cmp	r3, #2
   1c4b8:	beq	1c6c0 <myhtml_insertion_mode_in_foreign_content@@Base+0x298>
   1c4bc:	cmp	r3, #3
   1c4c0:	beq	1c474 <myhtml_insertion_mode_in_foreign_content@@Base+0x4c>
   1c4c4:	cmp	r3, #1
   1c4c8:	bne	1c5f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x1cc>
   1c4cc:	ldr	r3, [r1, #48]	; 0x30
   1c4d0:	tst	r3, #2048	; 0x800
   1c4d4:	beq	1c4ec <myhtml_insertion_mode_in_foreign_content@@Base+0xc4>
   1c4d8:	ldr	r0, [r0, #8]
   1c4dc:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1c4e0:	mov	r1, r6
   1c4e4:	mov	r0, r5
   1c4e8:	bl	102c8 <myhtml_token_set_replacement_character_for_null_token@plt>
   1c4ec:	mov	r1, r6
   1c4f0:	mov	r0, r5
   1c4f4:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   1c4f8:	ldr	r0, [r6, #48]	; 0x30
   1c4fc:	ands	r0, r0, #8
   1c500:	bne	1c474 <myhtml_insertion_mode_in_foreign_content@@Base+0x4c>
   1c504:	ldr	r3, [r5, #180]	; 0xb4
   1c508:	ldr	r2, [r5, #180]	; 0xb4
   1c50c:	and	r3, r3, #2
   1c510:	eor	r3, r3, r2
   1c514:	str	r3, [r5, #180]	; 0xb4
   1c518:	pop	{r4, r5, r6, pc}
   1c51c:	cmp	r3, #24
   1c520:	bhi	1c560 <myhtml_insertion_mode_in_foreign_content@@Base+0x138>
   1c524:	cmp	r3, #22
   1c528:	bcs	1c58c <myhtml_insertion_mode_in_foreign_content@@Base+0x164>
   1c52c:	cmp	r3, #20
   1c530:	bne	1c5f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x1cc>
   1c534:	ldr	r3, [r5, #88]	; 0x58
   1c538:	cmp	r3, #0
   1c53c:	bne	1c5f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x1cc>
   1c540:	mov	r0, r5
   1c544:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1c548:	mov	r0, r5
   1c54c:	bl	105bc <myhtml_tree_current_node@plt>
   1c550:	subs	r4, r0, #0
   1c554:	bne	1c6cc <myhtml_insertion_mode_in_foreign_content@@Base+0x2a4>
   1c558:	mov	r0, #1
   1c55c:	pop	{r4, r5, r6, pc}
   1c560:	cmp	r3, #28
   1c564:	b	1c530 <myhtml_insertion_mode_in_foreign_content@@Base+0x108>
   1c568:	cmp	r3, #50	; 0x32
   1c56c:	beq	1c594 <myhtml_insertion_mode_in_foreign_content@@Base+0x16c>
   1c570:	bhi	1c604 <myhtml_insertion_mode_in_foreign_content@@Base+0x1dc>
   1c574:	cmp	r3, #36	; 0x24
   1c578:	beq	1c534 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1c57c:	bcc	1c5f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x1cc>
   1c580:	sub	r2, r3, #42	; 0x2a
   1c584:	cmp	r2, #4
   1c588:	bhi	1c5f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x1cc>
   1c58c:	cmp	r3, #50	; 0x32
   1c590:	bne	1c534 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1c594:	mov	r1, r6
   1c598:	ldr	r0, [r5, #8]
   1c59c:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1c5a0:	ldr	r1, [pc, #348]	; 1c704 <myhtml_insertion_mode_in_foreign_content@@Base+0x2dc>
   1c5a4:	mov	r2, #5
   1c5a8:	mov	r0, r6
   1c5ac:	add	r1, pc, r1
   1c5b0:	bl	10e44 <myhtml_token_attr_by_name@plt>
   1c5b4:	cmp	r0, #0
   1c5b8:	bne	1c534 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1c5bc:	ldr	r1, [pc, #324]	; 1c708 <myhtml_insertion_mode_in_foreign_content@@Base+0x2e0>
   1c5c0:	mov	r2, #4
   1c5c4:	mov	r0, r6
   1c5c8:	add	r1, pc, r1
   1c5cc:	bl	10e44 <myhtml_token_attr_by_name@plt>
   1c5d0:	cmp	r0, #0
   1c5d4:	bne	1c534 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1c5d8:	ldr	r1, [pc, #300]	; 1c70c <myhtml_insertion_mode_in_foreign_content@@Base+0x2e4>
   1c5dc:	mov	r2, #4
   1c5e0:	mov	r0, r6
   1c5e4:	add	r1, pc, r1
   1c5e8:	bl	10e44 <myhtml_token_attr_by_name@plt>
   1c5ec:	cmp	r0, #0
   1c5f0:	bne	1c534 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1c5f4:	mov	r1, r6
   1c5f8:	mov	r0, r5
   1c5fc:	pop	{r4, r5, r6, lr}
   1c600:	b	fe30 <myhtml_insertion_mode_in_foreign_content_start_other@plt>
   1c604:	cmp	r3, #64	; 0x40
   1c608:	beq	1c534 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1c60c:	bhi	1c61c <myhtml_insertion_mode_in_foreign_content@@Base+0x1f4>
   1c610:	sub	r2, r3, #55	; 0x37
   1c614:	cmp	r2, #6
   1c618:	b	1c588 <myhtml_insertion_mode_in_foreign_content@@Base+0x160>
   1c61c:	cmp	r3, #66	; 0x42
   1c620:	b	1c530 <myhtml_insertion_mode_in_foreign_content@@Base+0x108>
   1c624:	cmp	r3, #110	; 0x6e
   1c628:	bhi	1c67c <myhtml_insertion_mode_in_foreign_content@@Base+0x254>
   1c62c:	cmp	r3, #109	; 0x6d
   1c630:	bcs	1c58c <myhtml_insertion_mode_in_foreign_content@@Base+0x164>
   1c634:	cmp	r3, #86	; 0x56
   1c638:	beq	1c534 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1c63c:	bhi	1c658 <myhtml_insertion_mode_in_foreign_content@@Base+0x230>
   1c640:	cmp	r3, #79	; 0x4f
   1c644:	beq	1c534 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1c648:	cmp	r3, #84	; 0x54
   1c64c:	beq	1c534 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1c650:	cmp	r3, #77	; 0x4d
   1c654:	b	1c530 <myhtml_insertion_mode_in_foreign_content@@Base+0x108>
   1c658:	cmp	r3, #95	; 0x5f
   1c65c:	beq	1c534 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1c660:	bhi	1c66c <myhtml_insertion_mode_in_foreign_content@@Base+0x244>
   1c664:	cmp	r3, #90	; 0x5a
   1c668:	b	1c530 <myhtml_insertion_mode_in_foreign_content@@Base+0x108>
   1c66c:	cmp	r3, #99	; 0x63
   1c670:	beq	1c534 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1c674:	cmp	r3, #102	; 0x66
   1c678:	b	1c530 <myhtml_insertion_mode_in_foreign_content@@Base+0x108>
   1c67c:	cmp	r3, #121	; 0x79
   1c680:	beq	1c534 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1c684:	bhi	1c6a0 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1c688:	cmp	r3, #115	; 0x73
   1c68c:	beq	1c534 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1c690:	bcc	1c5f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x1cc>
   1c694:	sub	r2, r3, #117	; 0x75
   1c698:	cmp	r2, #2
   1c69c:	b	1c588 <myhtml_insertion_mode_in_foreign_content@@Base+0x160>
   1c6a0:	cmp	r3, #125	; 0x7d
   1c6a4:	beq	1c534 <myhtml_insertion_mode_in_foreign_content@@Base+0x10c>
   1c6a8:	bhi	1c6b4 <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1c6ac:	cmp	r3, #123	; 0x7b
   1c6b0:	b	1c530 <myhtml_insertion_mode_in_foreign_content@@Base+0x108>
   1c6b4:	sub	r2, r3, #137	; 0x89
   1c6b8:	cmp	r2, #3
   1c6bc:	b	1c588 <myhtml_insertion_mode_in_foreign_content@@Base+0x160>
   1c6c0:	mov	r2, r4
   1c6c4:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   1c6c8:	b	1c474 <myhtml_insertion_mode_in_foreign_content@@Base+0x4c>
   1c6cc:	mov	r1, r4
   1c6d0:	mov	r0, r5
   1c6d4:	bl	ffe0 <myhtml_tree_is_mathml_integration_point@plt>
   1c6d8:	cmp	r0, #0
   1c6dc:	bne	1c558 <myhtml_insertion_mode_in_foreign_content@@Base+0x130>
   1c6e0:	mov	r1, r4
   1c6e4:	mov	r0, r5
   1c6e8:	bl	1019c <myhtml_tree_is_html_integration_point@plt>
   1c6ec:	cmp	r0, #0
   1c6f0:	bne	1c558 <myhtml_insertion_mode_in_foreign_content@@Base+0x130>
   1c6f4:	ldr	r3, [r4, #8]
   1c6f8:	cmp	r3, #1
   1c6fc:	bne	1c540 <myhtml_insertion_mode_in_foreign_content@@Base+0x118>
   1c700:	b	1c558 <myhtml_insertion_mode_in_foreign_content@@Base+0x130>
   1c704:	andeq	r9, sp, pc, ror pc
   1c708:	andeq	sl, sp, pc, asr #10
   1c70c:	andeq	r9, sp, sp, asr #30

0001c710 <myhtml_rules_stop_parsing@@Base>:
   1c710:	bx	lr

0001c714 <myhtml_insertion_mode_in_template@@Base>:
   1c714:	mov	ip, r0
   1c718:	ldr	r2, [r1]
   1c71c:	ldr	r3, [r1, #48]	; 0x30
   1c720:	ands	r3, r3, #1
   1c724:	beq	1c740 <myhtml_insertion_mode_in_template@@Base+0x2c>
   1c728:	cmp	r2, #128	; 0x80
   1c72c:	bne	1c8f4 <myhtml_insertion_mode_in_template@@Base+0x1e0>
   1c730:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   1c734:	mov	r0, ip
   1c738:	pop	{r4, lr}
   1c73c:	b	1c730 <myhtml_insertion_mode_in_template@@Base+0x1c>
   1c740:	cmp	r2, #92	; 0x5c
   1c744:	beq	1c784 <myhtml_insertion_mode_in_template@@Base+0x70>
   1c748:	push	{r4, lr}
   1c74c:	mov	r4, r0
   1c750:	bhi	1c7d4 <myhtml_insertion_mode_in_template@@Base+0xc0>
   1c754:	cmp	r2, #19
   1c758:	beq	1c77c <myhtml_insertion_mode_in_template@@Base+0x68>
   1c75c:	bhi	1c788 <myhtml_insertion_mode_in_template@@Base+0x74>
   1c760:	cmp	r2, #0
   1c764:	beq	1c7a4 <myhtml_insertion_mode_in_template@@Base+0x90>
   1c768:	cmp	r2, #3
   1c76c:	bls	1c734 <myhtml_insertion_mode_in_template@@Base+0x20>
   1c770:	sub	r2, r2, #15
   1c774:	cmp	r2, #1
   1c778:	bhi	1c7a4 <myhtml_insertion_mode_in_template@@Base+0x90>
   1c77c:	pop	{r4, lr}
   1c780:	mov	r0, ip
   1c784:	b	fff8 <myhtml_insertion_mode_in_head@plt>
   1c788:	cmp	r2, #32
   1c78c:	beq	1c828 <myhtml_insertion_mode_in_template@@Base+0x114>
   1c790:	bhi	1c7c0 <myhtml_insertion_mode_in_template@@Base+0xac>
   1c794:	cmp	r2, #27
   1c798:	beq	1c828 <myhtml_insertion_mode_in_template@@Base+0x114>
   1c79c:	cmp	r2, #31
   1c7a0:	beq	1c87c <myhtml_insertion_mode_in_template@@Base+0x168>
   1c7a4:	mov	r0, r4
   1c7a8:	bl	10970 <myhtml_tree_template_insertion_pop@plt>
   1c7ac:	mov	r1, #6
   1c7b0:	mov	r0, r4
   1c7b4:	bl	ff50 <myhtml_tree_template_insertion_append@plt>
   1c7b8:	mov	r3, #6
   1c7bc:	b	1c840 <myhtml_insertion_mode_in_template@@Base+0x12c>
   1c7c0:	cmp	r2, #78	; 0x4e
   1c7c4:	beq	1c77c <myhtml_insertion_mode_in_template@@Base+0x68>
   1c7c8:	cmp	r2, #86	; 0x56
   1c7cc:	bne	1c7a4 <myhtml_insertion_mode_in_template@@Base+0x90>
   1c7d0:	b	1c77c <myhtml_insertion_mode_in_template@@Base+0x68>
   1c7d4:	cmp	r2, #130	; 0x82
   1c7d8:	beq	1c828 <myhtml_insertion_mode_in_template@@Base+0x114>
   1c7dc:	bhi	1c80c <myhtml_insertion_mode_in_template@@Base+0xf8>
   1c7e0:	cmp	r2, #126	; 0x7e
   1c7e4:	beq	1c828 <myhtml_insertion_mode_in_template@@Base+0x114>
   1c7e8:	bhi	1c7fc <myhtml_insertion_mode_in_template@@Base+0xe8>
   1c7ec:	cmp	r2, #112	; 0x70
   1c7f0:	beq	1c77c <myhtml_insertion_mode_in_template@@Base+0x68>
   1c7f4:	cmp	r2, #120	; 0x78
   1c7f8:	b	1c7cc <myhtml_insertion_mode_in_template@@Base+0xb8>
   1c7fc:	cmp	r2, #127	; 0x7f
   1c800:	beq	1c8ac <myhtml_insertion_mode_in_template@@Base+0x198>
   1c804:	cmp	r2, #128	; 0x80
   1c808:	b	1c7cc <myhtml_insertion_mode_in_template@@Base+0xb8>
   1c80c:	cmp	r2, #134	; 0x86
   1c810:	beq	1c77c <myhtml_insertion_mode_in_template@@Base+0x68>
   1c814:	bhi	1c848 <myhtml_insertion_mode_in_template@@Base+0x134>
   1c818:	cmp	r2, #131	; 0x83
   1c81c:	beq	1c8ac <myhtml_insertion_mode_in_template@@Base+0x198>
   1c820:	cmp	r2, #132	; 0x84
   1c824:	bne	1c7a4 <myhtml_insertion_mode_in_template@@Base+0x90>
   1c828:	mov	r0, r4
   1c82c:	bl	10970 <myhtml_tree_template_insertion_pop@plt>
   1c830:	mov	r1, #8
   1c834:	mov	r0, r4
   1c838:	bl	ff50 <myhtml_tree_template_insertion_append@plt>
   1c83c:	mov	r3, #8
   1c840:	str	r3, [r4, #168]	; 0xa8
   1c844:	b	1c8ec <myhtml_insertion_mode_in_template@@Base+0x1d8>
   1c848:	cmp	r2, #135	; 0x87
   1c84c:	beq	1c894 <myhtml_insertion_mode_in_template@@Base+0x180>
   1c850:	cmp	r2, #251	; 0xfb
   1c854:	bne	1c7a4 <myhtml_insertion_mode_in_template@@Base+0x90>
   1c858:	mov	r1, #128	; 0x80
   1c85c:	mov	r2, #1
   1c860:	bl	10790 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1c864:	subs	r1, r0, #0
   1c868:	bne	1c8c8 <myhtml_insertion_mode_in_template@@Base+0x1b4>
   1c86c:	mov	r0, r4
   1c870:	bl	102a4 <myhtml_rules_stop_parsing@plt>
   1c874:	mov	r0, #0
   1c878:	pop	{r4, pc}
   1c87c:	bl	10970 <myhtml_tree_template_insertion_pop@plt>
   1c880:	mov	r1, #11
   1c884:	mov	r0, r4
   1c888:	bl	ff50 <myhtml_tree_template_insertion_append@plt>
   1c88c:	mov	r3, #11
   1c890:	b	1c840 <myhtml_insertion_mode_in_template@@Base+0x12c>
   1c894:	bl	10970 <myhtml_tree_template_insertion_pop@plt>
   1c898:	mov	r1, #12
   1c89c:	mov	r0, r4
   1c8a0:	bl	ff50 <myhtml_tree_template_insertion_append@plt>
   1c8a4:	mov	r3, #12
   1c8a8:	b	1c840 <myhtml_insertion_mode_in_template@@Base+0x12c>
   1c8ac:	mov	r0, r4
   1c8b0:	bl	10970 <myhtml_tree_template_insertion_pop@plt>
   1c8b4:	mov	r1, #13
   1c8b8:	mov	r0, r4
   1c8bc:	bl	ff50 <myhtml_tree_template_insertion_append@plt>
   1c8c0:	mov	r3, #13
   1c8c4:	b	1c840 <myhtml_insertion_mode_in_template@@Base+0x12c>
   1c8c8:	mov	r2, #0
   1c8cc:	mov	r0, r4
   1c8d0:	bl	100dc <myhtml_tree_open_elements_pop_until_by_node@plt>
   1c8d4:	mov	r0, r4
   1c8d8:	bl	10df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   1c8dc:	mov	r0, r4
   1c8e0:	bl	10970 <myhtml_tree_template_insertion_pop@plt>
   1c8e4:	mov	r0, r4
   1c8e8:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   1c8ec:	mov	r0, #1
   1c8f0:	pop	{r4, pc}
   1c8f4:	mov	r0, #0
   1c8f8:	bx	lr

0001c8fc <myhtml_insertion_mode_in_body@@Base>:
   1c8fc:	ldr	r3, [r1, #48]	; 0x30
   1c900:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1c904:	mov	r5, r1
   1c908:	mov	r4, r0
   1c90c:	ldr	r1, [r1]
   1c910:	tst	r3, #1
   1c914:	beq	1cf58 <myhtml_insertion_mode_in_body@@Base+0x65c>
   1c918:	sub	r3, r1, #4
   1c91c:	cmp	r3, #135	; 0x87
   1c920:	addls	pc, pc, r3, lsl #2
   1c924:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c928:	b	1ce8c <myhtml_insertion_mode_in_body@@Base+0x590>
   1c92c:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c930:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c934:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1c938:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c93c:	b	1ce9c <myhtml_insertion_mode_in_body@@Base+0x5a0>
   1c940:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c944:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1c948:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1c94c:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c950:	b	1ce8c <myhtml_insertion_mode_in_body@@Base+0x590>
   1c954:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c958:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c95c:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c960:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c964:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c968:	b	1ce8c <myhtml_insertion_mode_in_body@@Base+0x590>
   1c96c:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c970:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1c974:	b	1cb5c <myhtml_insertion_mode_in_body@@Base+0x260>
   1c978:	b	1cef0 <myhtml_insertion_mode_in_body@@Base+0x5f4>
   1c97c:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1c980:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c984:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c988:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1c98c:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c990:	b	1ce8c <myhtml_insertion_mode_in_body@@Base+0x590>
   1c994:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c998:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c99c:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c9a0:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c9a4:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c9a8:	b	1cd68 <myhtml_insertion_mode_in_body@@Base+0x46c>
   1c9ac:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c9b0:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1c9b4:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c9b8:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1c9bc:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1c9c0:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1c9c4:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1c9c8:	b	1cd68 <myhtml_insertion_mode_in_body@@Base+0x46c>
   1c9cc:	b	1ce8c <myhtml_insertion_mode_in_body@@Base+0x590>
   1c9d0:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c9d4:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1c9d8:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1c9dc:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1c9e0:	b	1ce8c <myhtml_insertion_mode_in_body@@Base+0x590>
   1c9e4:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1c9e8:	b	1cc28 <myhtml_insertion_mode_in_body@@Base+0x32c>
   1c9ec:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c9f0:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1c9f4:	b	1cd88 <myhtml_insertion_mode_in_body@@Base+0x48c>
   1c9f8:	b	1cd88 <myhtml_insertion_mode_in_body@@Base+0x48c>
   1c9fc:	b	1cd88 <myhtml_insertion_mode_in_body@@Base+0x48c>
   1ca00:	b	1cd88 <myhtml_insertion_mode_in_body@@Base+0x48c>
   1ca04:	b	1cd88 <myhtml_insertion_mode_in_body@@Base+0x48c>
   1ca08:	b	1cd88 <myhtml_insertion_mode_in_body@@Base+0x48c>
   1ca0c:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1ca10:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1ca14:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1ca18:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1ca1c:	b	1cba0 <myhtml_insertion_mode_in_body@@Base+0x2a4>
   1ca20:	b	1ce8c <myhtml_insertion_mode_in_body@@Base+0x590>
   1ca24:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1ca28:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1ca2c:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1ca30:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1ca34:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1ca38:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1ca3c:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1ca40:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1ca44:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1ca48:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1ca4c:	b	1cd20 <myhtml_insertion_mode_in_body@@Base+0x424>
   1ca50:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1ca54:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1ca58:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1ca5c:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1ca60:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1ca64:	b	1ce9c <myhtml_insertion_mode_in_body@@Base+0x5a0>
   1ca68:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1ca6c:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1ca70:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1ca74:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1ca78:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1ca7c:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1ca80:	b	1ce8c <myhtml_insertion_mode_in_body@@Base+0x590>
   1ca84:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1ca88:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1ca8c:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1ca90:	b	1ce9c <myhtml_insertion_mode_in_body@@Base+0x5a0>
   1ca94:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1ca98:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1ca9c:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1caa0:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1caa4:	b	1cce8 <myhtml_insertion_mode_in_body@@Base+0x3ec>
   1caa8:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1caac:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cab0:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1cab4:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cab8:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cabc:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cac0:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cac4:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cac8:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cacc:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cad0:	b	1ce8c <myhtml_insertion_mode_in_body@@Base+0x590>
   1cad4:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cad8:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cadc:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1cae0:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cae4:	b	1ce8c <myhtml_insertion_mode_in_body@@Base+0x590>
   1cae8:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1caec:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1caf0:	b	1ce8c <myhtml_insertion_mode_in_body@@Base+0x590>
   1caf4:	b	1ce8c <myhtml_insertion_mode_in_body@@Base+0x590>
   1caf8:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cafc:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cb00:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1cb04:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cb08:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cb0c:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cb10:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cb14:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cb18:	b	1cb48 <myhtml_insertion_mode_in_body@@Base+0x24c>
   1cb1c:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cb20:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cb24:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cb28:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cb2c:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cb30:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cb34:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cb38:	b	1cf48 <myhtml_insertion_mode_in_body@@Base+0x64c>
   1cb3c:	b	1ce8c <myhtml_insertion_mode_in_body@@Base+0x590>
   1cb40:	b	1ce8c <myhtml_insertion_mode_in_body@@Base+0x590>
   1cb44:	b	1cbe4 <myhtml_insertion_mode_in_body@@Base+0x2e8>
   1cb48:	mov	r1, r5
   1cb4c:	mov	r0, r4
   1cb50:	add	sp, sp, #12
   1cb54:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1cb58:	b	fff8 <myhtml_insertion_mode_in_head@plt>
   1cb5c:	mov	r3, #8
   1cb60:	mov	r1, #23
   1cb64:	mov	r2, #1
   1cb68:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1cb6c:	cmp	r0, #0
   1cb70:	movne	r3, #0
   1cb74:	ldrne	r1, [r4, #128]	; 0x80
   1cb78:	bne	1cb88 <myhtml_insertion_mode_in_body@@Base+0x28c>
   1cb7c:	mov	r6, #0
   1cb80:	b	1cc88 <myhtml_insertion_mode_in_body@@Base+0x38c>
   1cb84:	add	r3, r3, #1
   1cb88:	ldr	r2, [r1, #4]
   1cb8c:	cmp	r2, r3
   1cb90:	bhi	1cb84 <myhtml_insertion_mode_in_body@@Base+0x288>
   1cb94:	mov	r3, #18
   1cb98:	str	r3, [r4, #168]	; 0xa8
   1cb9c:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1cba0:	mov	r3, #8
   1cba4:	mov	r1, #23
   1cba8:	mov	r2, #1
   1cbac:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1cbb0:	cmp	r0, #0
   1cbb4:	movne	r3, #0
   1cbb8:	ldrne	r1, [r4, #128]	; 0x80
   1cbbc:	beq	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1cbc0:	ldr	r2, [r1, #4]
   1cbc4:	cmp	r2, r3
   1cbc8:	bhi	1cbdc <myhtml_insertion_mode_in_body@@Base+0x2e0>
   1cbcc:	mov	r3, #18
   1cbd0:	str	r3, [r4, #168]	; 0xa8
   1cbd4:	mov	r6, #1
   1cbd8:	b	1cc88 <myhtml_insertion_mode_in_body@@Base+0x38c>
   1cbdc:	add	r3, r3, #1
   1cbe0:	b	1cbc0 <myhtml_insertion_mode_in_body@@Base+0x2c4>
   1cbe4:	mov	r2, #1
   1cbe8:	mov	r3, #8
   1cbec:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1cbf0:	cmp	r0, #0
   1cbf4:	movne	r2, #0
   1cbf8:	movne	r1, r2
   1cbfc:	beq	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1cc00:	mov	r0, r4
   1cc04:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   1cc08:	mov	r0, r4
   1cc0c:	bl	105bc <myhtml_tree_current_node@plt>
   1cc10:	ldr	r1, [r5]
   1cc14:	bl	10a3c <myhtml_is_html_node@plt>
   1cc18:	mov	r3, #0
   1cc1c:	mov	r2, #1
   1cc20:	ldr	r1, [r5]
   1cc24:	b	1ccdc <myhtml_insertion_mode_in_body@@Base+0x3e0>
   1cc28:	mov	r3, #0
   1cc2c:	mov	r2, #1
   1cc30:	mov	r1, #128	; 0x80
   1cc34:	bl	10790 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1cc38:	subs	r6, r0, #0
   1cc3c:	bne	1cc94 <myhtml_insertion_mode_in_body@@Base+0x398>
   1cc40:	ldr	r5, [r4, #104]	; 0x68
   1cc44:	str	r6, [r4, #104]	; 0x68
   1cc48:	cmp	r5, #0
   1cc4c:	beq	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1cc50:	mov	r1, #8
   1cc54:	mov	r0, r5
   1cc58:	bl	fbf0 <myhtml_tree_element_in_scope_by_node@plt>
   1cc5c:	cmp	r0, #0
   1cc60:	beq	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1cc64:	mov	r1, r6
   1cc68:	mov	r2, r6
   1cc6c:	mov	r0, r4
   1cc70:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   1cc74:	mov	r0, r4
   1cc78:	bl	105bc <myhtml_tree_current_node@plt>
   1cc7c:	mov	r1, r5
   1cc80:	mov	r0, r4
   1cc84:	bl	101d8 <myhtml_tree_open_elements_remove@plt>
   1cc88:	mov	r0, r6
   1cc8c:	add	sp, sp, #12
   1cc90:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1cc94:	mov	r3, #8
   1cc98:	mov	r2, #1
   1cc9c:	mov	r1, #52	; 0x34
   1cca0:	mov	r0, r4
   1cca4:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1cca8:	cmp	r0, #0
   1ccac:	beq	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1ccb0:	mov	r2, #0
   1ccb4:	mov	r0, r4
   1ccb8:	mov	r1, r2
   1ccbc:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   1ccc0:	mov	r0, r4
   1ccc4:	bl	105bc <myhtml_tree_current_node@plt>
   1ccc8:	mov	r1, #52	; 0x34
   1cccc:	bl	10a3c <myhtml_is_html_node@plt>
   1ccd0:	mov	r3, #0
   1ccd4:	mov	r2, #1
   1ccd8:	mov	r1, #52	; 0x34
   1ccdc:	mov	r0, r4
   1cce0:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   1cce4:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1cce8:	mov	r3, #32
   1ccec:	mov	r2, #1
   1ccf0:	mov	r1, #99	; 0x63
   1ccf4:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1ccf8:	cmp	r0, #0
   1ccfc:	bne	1cd10 <myhtml_insertion_mode_in_body@@Base+0x414>
   1cd00:	mov	r2, #1
   1cd04:	mov	r1, #99	; 0x63
   1cd08:	mov	r0, r4
   1cd0c:	bl	10904 <myhtml_tree_node_insert@plt>
   1cd10:	mov	r1, r5
   1cd14:	mov	r0, r4
   1cd18:	bl	103dc <myhtml_tree_tags_close_p@plt>
   1cd1c:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1cd20:	mov	r3, #16
   1cd24:	mov	r2, #1
   1cd28:	mov	r1, #77	; 0x4d
   1cd2c:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1cd30:	cmp	r0, #0
   1cd34:	beq	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1cd38:	mov	r2, #1
   1cd3c:	mov	r1, #77	; 0x4d
   1cd40:	mov	r0, r4
   1cd44:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   1cd48:	mov	r0, r4
   1cd4c:	bl	105bc <myhtml_tree_current_node@plt>
   1cd50:	mov	r1, #77	; 0x4d
   1cd54:	bl	10a3c <myhtml_is_html_node@plt>
   1cd58:	mov	r3, #0
   1cd5c:	mov	r2, #1
   1cd60:	mov	r1, #77	; 0x4d
   1cd64:	b	1ccdc <myhtml_insertion_mode_in_body@@Base+0x3e0>
   1cd68:	mov	r3, #8
   1cd6c:	mov	r2, #1
   1cd70:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1cd74:	cmp	r0, #0
   1cd78:	beq	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1cd7c:	mov	r2, #1
   1cd80:	ldr	r1, [r5]
   1cd84:	b	1cc00 <myhtml_insertion_mode_in_body@@Base+0x304>
   1cd88:	ldr	r3, [r0, #128]	; 0x80
   1cd8c:	ldr	r6, [r3]
   1cd90:	ldr	r7, [r3, #4]
   1cd94:	cmp	r7, #0
   1cd98:	beq	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1cd9c:	sub	r7, r7, #1
   1cda0:	ldr	r0, [r4, #28]
   1cda4:	ldr	r3, [r6, r7, lsl #2]
   1cda8:	ldr	r1, [r3, #4]
   1cdac:	bl	109b8 <myhtml_tag_get_by_id@plt>
   1cdb0:	ldr	r2, [r6, r7, lsl #2]
   1cdb4:	ldr	r3, [r2, #4]
   1cdb8:	sub	r3, r3, #55	; 0x37
   1cdbc:	cmp	r3, #5
   1cdc0:	ldr	r3, [r2, #8]
   1cdc4:	bhi	1cdd0 <myhtml_insertion_mode_in_body@@Base+0x4d4>
   1cdc8:	cmp	r3, #1
   1cdcc:	beq	1dd4c <myhtml_insertion_mode_in_body@@Base+0x1450>
   1cdd0:	add	r3, r3, #4
   1cdd4:	ldr	r3, [r0, r3, lsl #2]
   1cdd8:	tst	r3, #8
   1cddc:	beq	1cd94 <myhtml_insertion_mode_in_body@@Base+0x498>
   1cde0:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1cde4:	ldr	r2, [r3, #4]
   1cde8:	sub	r2, r2, #1
   1cdec:	str	r2, [r3, #4]
   1cdf0:	ldr	r2, [r3, #4]
   1cdf4:	ldr	r2, [r6, r2, lsl #2]
   1cdf8:	ldr	r2, [r2, #4]
   1cdfc:	cmp	r2, #55	; 0x37
   1ce00:	beq	1ce68 <myhtml_insertion_mode_in_body@@Base+0x56c>
   1ce04:	ldr	r2, [r3, #4]
   1ce08:	ldr	r2, [r6, r2, lsl #2]
   1ce0c:	ldr	r2, [r2, #4]
   1ce10:	cmp	r2, #56	; 0x38
   1ce14:	beq	1ce68 <myhtml_insertion_mode_in_body@@Base+0x56c>
   1ce18:	ldr	r2, [r3, #4]
   1ce1c:	ldr	r2, [r6, r2, lsl #2]
   1ce20:	ldr	r2, [r2, #4]
   1ce24:	cmp	r2, #57	; 0x39
   1ce28:	beq	1ce68 <myhtml_insertion_mode_in_body@@Base+0x56c>
   1ce2c:	ldr	r2, [r3, #4]
   1ce30:	ldr	r2, [r6, r2, lsl #2]
   1ce34:	ldr	r2, [r2, #4]
   1ce38:	cmp	r2, #58	; 0x3a
   1ce3c:	beq	1ce68 <myhtml_insertion_mode_in_body@@Base+0x56c>
   1ce40:	ldr	r2, [r3, #4]
   1ce44:	ldr	r2, [r6, r2, lsl #2]
   1ce48:	ldr	r2, [r2, #4]
   1ce4c:	cmp	r2, #59	; 0x3b
   1ce50:	beq	1ce68 <myhtml_insertion_mode_in_body@@Base+0x56c>
   1ce54:	ldr	r2, [r3, #4]
   1ce58:	ldr	r2, [r6, r2, lsl #2]
   1ce5c:	ldr	r2, [r2, #4]
   1ce60:	cmp	r2, #60	; 0x3c
   1ce64:	bne	1ce7c <myhtml_insertion_mode_in_body@@Base+0x580>
   1ce68:	ldr	r2, [r3, #4]
   1ce6c:	ldr	r2, [r6, r2, lsl #2]
   1ce70:	ldr	r2, [r2, #8]
   1ce74:	cmp	r2, #1
   1ce78:	beq	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1ce7c:	ldr	r2, [r3, #4]
   1ce80:	cmp	r2, #0
   1ce84:	bne	1cde4 <myhtml_insertion_mode_in_body@@Base+0x4e8>
   1ce88:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1ce8c:	mov	r2, r1
   1ce90:	mov	r1, r5
   1ce94:	bl	1082c <myhtml_tree_adoption_agency_algorithm@plt>
   1ce98:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1ce9c:	mov	r3, #8
   1cea0:	mov	r2, #1
   1cea4:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1cea8:	cmp	r0, #0
   1ceac:	beq	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1ceb0:	mov	r2, #0
   1ceb4:	mov	r0, r4
   1ceb8:	mov	r1, r2
   1cebc:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   1cec0:	mov	r0, r4
   1cec4:	bl	105bc <myhtml_tree_current_node@plt>
   1cec8:	ldr	r1, [r5]
   1cecc:	bl	10a3c <myhtml_is_html_node@plt>
   1ced0:	mov	r0, r4
   1ced4:	mov	r3, #0
   1ced8:	ldr	r1, [r5]
   1cedc:	mov	r2, #1
   1cee0:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   1cee4:	mov	r0, r4
   1cee8:	bl	10df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   1ceec:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1cef0:	ldr	r3, [r5, #40]	; 0x28
   1cef4:	mov	r6, #0
   1cef8:	cmp	r3, #0
   1cefc:	movne	r3, #0
   1cf00:	strne	r3, [r5, #40]	; 0x28
   1cf04:	ldr	r3, [r5, #44]	; 0x2c
   1cf08:	cmp	r3, #0
   1cf0c:	movne	r3, #0
   1cf10:	strne	r3, [r5, #44]	; 0x2c
   1cf14:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   1cf18:	mov	r1, r5
   1cf1c:	mov	r0, r4
   1cf20:	str	r6, [r5, #48]	; 0x30
   1cf24:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1cf28:	mov	r0, r4
   1cf2c:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1cf30:	ldr	r3, [r4, #180]	; 0xb4
   1cf34:	ldr	r2, [r4, #180]	; 0xb4
   1cf38:	and	r3, r3, #2
   1cf3c:	eor	r3, r3, r2
   1cf40:	str	r3, [r4, #180]	; 0xb4
   1cf44:	b	1cc88 <myhtml_insertion_mode_in_body@@Base+0x38c>
   1cf48:	mov	r1, r5
   1cf4c:	add	sp, sp, #12
   1cf50:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1cf54:	b	fcbc <myhtml_insertion_mode_in_body_other_end_tag@plt>
   1cf58:	sub	r1, r1, #1
   1cf5c:	cmp	r1, #250	; 0xfa
   1cf60:	addls	pc, pc, r1, lsl #2
   1cf64:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1cf68:	b	1d354 <myhtml_insertion_mode_in_body@@Base+0xa58>
   1cf6c:	b	1d398 <myhtml_insertion_mode_in_body@@Base+0xa9c>
   1cf70:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1cf74:	b	1d944 <myhtml_insertion_mode_in_body@@Base+0x1048>
   1cf78:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1cf7c:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1cf80:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1cf84:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1cf88:	b	1d9f0 <myhtml_insertion_mode_in_body@@Base+0x10f4>
   1cf8c:	b	1da6c <myhtml_insertion_mode_in_body@@Base+0x1170>
   1cf90:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1cf94:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1cf98:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1cf9c:	b	1d998 <myhtml_insertion_mode_in_body@@Base+0x109c>
   1cfa0:	b	1cb48 <myhtml_insertion_mode_in_body@@Base+0x24c>
   1cfa4:	b	1cb48 <myhtml_insertion_mode_in_body@@Base+0x24c>
   1cfa8:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1cfac:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1cfb0:	b	1cb48 <myhtml_insertion_mode_in_body@@Base+0x24c>
   1cfb4:	b	1d998 <myhtml_insertion_mode_in_body@@Base+0x109c>
   1cfb8:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1cfbc:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1cfc0:	b	1d418 <myhtml_insertion_mode_in_body@@Base+0xb1c>
   1cfc4:	b	1da6c <myhtml_insertion_mode_in_body@@Base+0x1170>
   1cfc8:	b	1d8f0 <myhtml_insertion_mode_in_body@@Base+0xff4>
   1cfcc:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1cfd0:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1cfd4:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1cfd8:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1cfdc:	b	1d998 <myhtml_insertion_mode_in_body@@Base+0x109c>
   1cfe0:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1cfe4:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1cfe8:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1cfec:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1cff0:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1cff4:	b	1d7a0 <myhtml_insertion_mode_in_body@@Base+0xea4>
   1cff8:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1cffc:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d000:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d004:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d008:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d00c:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d010:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d014:	b	1d7a0 <myhtml_insertion_mode_in_body@@Base+0xea4>
   1d018:	b	1d998 <myhtml_insertion_mode_in_body@@Base+0x109c>
   1d01c:	b	1da6c <myhtml_insertion_mode_in_body@@Base+0x1170>
   1d020:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d024:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d028:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d02c:	b	1d998 <myhtml_insertion_mode_in_body@@Base+0x109c>
   1d030:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d034:	b	1d61c <myhtml_insertion_mode_in_body@@Base+0xd20>
   1d038:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d03c:	b	1d48c <myhtml_insertion_mode_in_body@@Base+0xb90>
   1d040:	b	1d57c <myhtml_insertion_mode_in_body@@Base+0xc80>
   1d044:	b	1d57c <myhtml_insertion_mode_in_body@@Base+0xc80>
   1d048:	b	1d57c <myhtml_insertion_mode_in_body@@Base+0xc80>
   1d04c:	b	1d57c <myhtml_insertion_mode_in_body@@Base+0xc80>
   1d050:	b	1d57c <myhtml_insertion_mode_in_body@@Base+0xc80>
   1d054:	b	1d57c <myhtml_insertion_mode_in_body@@Base+0xc80>
   1d058:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d05c:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d060:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d064:	b	1daf8 <myhtml_insertion_mode_in_body@@Base+0x11fc>
   1d068:	b	1d3a8 <myhtml_insertion_mode_in_body@@Base+0xaac>
   1d06c:	b	1d998 <myhtml_insertion_mode_in_body@@Base+0x109c>
   1d070:	b	1dbb8 <myhtml_insertion_mode_in_body@@Base+0x12bc>
   1d074:	b	1db40 <myhtml_insertion_mode_in_body@@Base+0x1244>
   1d078:	b	1da6c <myhtml_insertion_mode_in_body@@Base+0x1170>
   1d07c:	b	1da88 <myhtml_insertion_mode_in_body@@Base+0x118c>
   1d080:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d084:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d088:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d08c:	b	1da6c <myhtml_insertion_mode_in_body@@Base+0x1170>
   1d090:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d094:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d098:	b	1d694 <myhtml_insertion_mode_in_body@@Base+0xd98>
   1d09c:	b	1cb48 <myhtml_insertion_mode_in_body@@Base+0x24c>
   1d0a0:	b	1d5c8 <myhtml_insertion_mode_in_body@@Base+0xccc>
   1d0a4:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d0a8:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d0ac:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d0b0:	b	1d9f0 <myhtml_insertion_mode_in_body@@Base+0x10f4>
   1d0b4:	b	1d534 <myhtml_insertion_mode_in_body@@Base+0xc38>
   1d0b8:	b	1dc70 <myhtml_insertion_mode_in_body@@Base+0x1374>
   1d0bc:	b	1cb48 <myhtml_insertion_mode_in_body@@Base+0x24c>
   1d0c0:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d0c4:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d0c8:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d0cc:	b	1d9bc <myhtml_insertion_mode_in_body@@Base+0x10c0>
   1d0d0:	b	1dbcc <myhtml_insertion_mode_in_body@@Base+0x12d0>
   1d0d4:	b	1cb48 <myhtml_insertion_mode_in_body@@Base+0x24c>
   1d0d8:	b	1dbe4 <myhtml_insertion_mode_in_body@@Base+0x12e8>
   1d0dc:	b	1d9f0 <myhtml_insertion_mode_in_body@@Base+0x10f4>
   1d0e0:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d0e4:	b	1dc50 <myhtml_insertion_mode_in_body@@Base+0x1354>
   1d0e8:	b	1dc50 <myhtml_insertion_mode_in_body@@Base+0x1354>
   1d0ec:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d0f0:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d0f4:	b	1dae4 <myhtml_insertion_mode_in_body@@Base+0x11e8>
   1d0f8:	b	1d8b4 <myhtml_insertion_mode_in_body@@Base+0xfb8>
   1d0fc:	b	1d5c8 <myhtml_insertion_mode_in_body@@Base+0xccc>
   1d100:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d104:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d108:	b	1dc7c <myhtml_insertion_mode_in_body@@Base+0x1380>
   1d10c:	b	1dcb0 <myhtml_insertion_mode_in_body@@Base+0x13b4>
   1d110:	b	1dcb0 <myhtml_insertion_mode_in_body@@Base+0x13b4>
   1d114:	b	1dc7c <myhtml_insertion_mode_in_body@@Base+0x1380>
   1d118:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d11c:	b	1d998 <myhtml_insertion_mode_in_body@@Base+0x109c>
   1d120:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d124:	b	1cb48 <myhtml_insertion_mode_in_body@@Base+0x24c>
   1d128:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d12c:	b	1dbfc <myhtml_insertion_mode_in_body@@Base+0x1300>
   1d130:	b	1d998 <myhtml_insertion_mode_in_body@@Base+0x109c>
   1d134:	b	1dae4 <myhtml_insertion_mode_in_body@@Base+0x11e8>
   1d138:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d13c:	b	1d998 <myhtml_insertion_mode_in_body@@Base+0x109c>
   1d140:	b	1d998 <myhtml_insertion_mode_in_body@@Base+0x109c>
   1d144:	b	1cb48 <myhtml_insertion_mode_in_body@@Base+0x24c>
   1d148:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d14c:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d150:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d154:	b	1dd18 <myhtml_insertion_mode_in_body@@Base+0x141c>
   1d158:	b	1da14 <myhtml_insertion_mode_in_body@@Base+0x1118>
   1d15c:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d160:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d164:	b	1cb48 <myhtml_insertion_mode_in_body@@Base+0x24c>
   1d168:	b	1db4c <myhtml_insertion_mode_in_body@@Base+0x1250>
   1d16c:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d170:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d174:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d178:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d17c:	b	1cb48 <myhtml_insertion_mode_in_body@@Base+0x24c>
   1d180:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d184:	b	1dae4 <myhtml_insertion_mode_in_body@@Base+0x11e8>
   1d188:	b	1d998 <myhtml_insertion_mode_in_body@@Base+0x109c>
   1d18c:	b	1d998 <myhtml_insertion_mode_in_body@@Base+0x109c>
   1d190:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d194:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d198:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d19c:	b	1da6c <myhtml_insertion_mode_in_body@@Base+0x1170>
   1d1a0:	b	1db8c <myhtml_insertion_mode_in_body@@Base+0x1290>
   1d1a4:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d1a8:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d1ac:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d1b0:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d1b4:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d1b8:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d1bc:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d1c0:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d1c4:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d1c8:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d1cc:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d1d0:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d1d4:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d1d8:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d1dc:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d1e0:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d1e4:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d1e8:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d1ec:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d1f0:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d1f4:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d1f8:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d1fc:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d200:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d204:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d208:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d20c:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d210:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d214:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d218:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d21c:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d220:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d224:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d228:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d22c:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d230:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d234:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d238:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d23c:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d240:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d244:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d248:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d24c:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d250:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d254:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d258:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d25c:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d260:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d264:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d268:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d26c:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d270:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d274:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d278:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d27c:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d280:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d284:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d288:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d28c:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d290:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d294:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d298:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d29c:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d2a0:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d2a4:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d2a8:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d2ac:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d2b0:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d2b4:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d2b8:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d2bc:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d2c0:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d2c4:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d2c8:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d2cc:	b	1dcd4 <myhtml_insertion_mode_in_body@@Base+0x13d8>
   1d2d0:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d2d4:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d2d8:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d2dc:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d2e0:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d2e4:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d2e8:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d2ec:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d2f0:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d2f4:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d2f8:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d2fc:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d300:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d304:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d308:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d30c:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d310:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d314:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d318:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d31c:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d320:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d324:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d328:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d32c:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d330:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d334:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d338:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d33c:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d340:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d344:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d348:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d34c:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1d350:	b	1d4f4 <myhtml_insertion_mode_in_body@@Base+0xbf8>
   1d354:	ldr	r3, [r5, #48]	; 0x30
   1d358:	tst	r3, #2048	; 0x800
   1d35c:	beq	1d374 <myhtml_insertion_mode_in_body@@Base+0xa78>
   1d360:	mov	r1, r5
   1d364:	bl	10760 <myhtml_insertion_fix_for_null_char_drop_all@plt>
   1d368:	ldr	r3, [r5, #12]
   1d36c:	cmp	r3, #0
   1d370:	beq	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d374:	mov	r0, r4
   1d378:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   1d37c:	mov	r1, r5
   1d380:	mov	r0, r4
   1d384:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   1d388:	ldr	r6, [r5, #48]	; 0x30
   1d38c:	ands	r6, r6, #8
   1d390:	bne	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d394:	b	1cf30 <myhtml_insertion_mode_in_body@@Base+0x634>
   1d398:	mov	r2, #0
   1d39c:	mov	r1, r5
   1d3a0:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   1d3a4:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d3a8:	mov	r3, #0
   1d3ac:	mov	r2, #1
   1d3b0:	mov	r1, #128	; 0x80
   1d3b4:	bl	10790 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1d3b8:	subs	r8, r0, #0
   1d3bc:	bne	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d3c0:	ldr	r3, [r4, #128]	; 0x80
   1d3c4:	ldr	r2, [r3, #4]
   1d3c8:	cmp	r2, #0
   1d3cc:	ldrne	r3, [r3]
   1d3d0:	ldrne	r7, [r3]
   1d3d4:	beq	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d3d8:	ldr	r6, [r7, #32]
   1d3dc:	cmp	r6, #0
   1d3e0:	streq	r5, [r7, #32]
   1d3e4:	beq	1cc88 <myhtml_insertion_mode_in_body@@Base+0x38c>
   1d3e8:	mov	r1, r5
   1d3ec:	ldr	r0, [r4, #8]
   1d3f0:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1d3f4:	ldr	r0, [r4, #8]
   1d3f8:	ldr	r1, [r7, #32]
   1d3fc:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1d400:	mov	r1, r5
   1d404:	ldr	r0, [r4, #8]
   1d408:	ldr	r2, [r7, #32]
   1d40c:	ldr	r3, [r4, #44]	; 0x2c
   1d410:	bl	10628 <myhtml_token_node_attr_copy_with_check@plt>
   1d414:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d418:	ldr	r3, [r0, #128]	; 0x80
   1d41c:	ldr	r2, [r3, #4]
   1d420:	cmp	r2, #1
   1d424:	bls	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d428:	ldr	r3, [r3]
   1d42c:	ldr	r3, [r3, #4]
   1d430:	ldr	r2, [r3, #4]
   1d434:	cmp	r2, #23
   1d438:	bne	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d43c:	ldr	r2, [r3, #8]
   1d440:	cmp	r2, #1
   1d444:	bne	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d448:	mov	r3, #0
   1d44c:	mov	r1, #128	; 0x80
   1d450:	bl	10790 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1d454:	subs	r8, r0, #0
   1d458:	bne	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d45c:	ldr	r3, [r4, #180]	; 0xb4
   1d460:	ldr	r2, [r4, #180]	; 0xb4
   1d464:	and	r3, r3, #2
   1d468:	eor	r3, r3, r2
   1d46c:	str	r3, [r4, #180]	; 0xb4
   1d470:	ldr	r3, [r4, #128]	; 0x80
   1d474:	ldr	r2, [r3, #4]
   1d478:	cmp	r2, #1
   1d47c:	bls	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d480:	ldr	r3, [r3]
   1d484:	ldr	r7, [r3, #4]
   1d488:	b	1d3d8 <myhtml_insertion_mode_in_body@@Base+0xadc>
   1d48c:	ldr	r3, [r0, #128]	; 0x80
   1d490:	ldr	r2, [r3, #4]
   1d494:	cmp	r2, #1
   1d498:	bls	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d49c:	ldr	r3, [r3]
   1d4a0:	ldr	r0, [r3, #4]
   1d4a4:	ldr	r3, [r0, #4]
   1d4a8:	cmp	r3, #23
   1d4ac:	bne	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d4b0:	ldr	r6, [r0, #8]
   1d4b4:	cmp	r6, #1
   1d4b8:	bne	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d4bc:	ldr	r3, [r4, #180]	; 0xb4
   1d4c0:	tst	r3, #2
   1d4c4:	beq	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d4c8:	bl	10d84 <myhtml_tree_node_remove@plt>
   1d4cc:	mov	r3, r6
   1d4d0:	mov	r2, r6
   1d4d4:	mov	r1, #65	; 0x41
   1d4d8:	mov	r0, r4
   1d4dc:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   1d4e0:	mov	r1, r5
   1d4e4:	mov	r0, r4
   1d4e8:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1d4ec:	mov	r3, #19
   1d4f0:	b	1cb98 <myhtml_insertion_mode_in_body@@Base+0x29c>
   1d4f4:	ldr	r3, [r0, #140]	; 0x8c
   1d4f8:	ldr	r3, [r3, #4]
   1d4fc:	cmp	r3, #0
   1d500:	ldreq	r1, [r0, #128]	; 0x80
   1d504:	beq	1d51c <myhtml_insertion_mode_in_body@@Base+0xc20>
   1d508:	mov	r1, r5
   1d50c:	add	sp, sp, #12
   1d510:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1d514:	b	fd40 <myhtml_insertion_mode_in_template@plt>
   1d518:	add	r3, r3, #1
   1d51c:	ldr	r2, [r1, #4]
   1d520:	cmp	r2, r3
   1d524:	bhi	1d518 <myhtml_insertion_mode_in_body@@Base+0xc1c>
   1d528:	mov	r0, r4
   1d52c:	bl	102a4 <myhtml_rules_stop_parsing@plt>
   1d530:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d534:	mov	r3, #32
   1d538:	mov	r2, #1
   1d53c:	mov	r1, #99	; 0x63
   1d540:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1d544:	cmp	r0, #0
   1d548:	beq	1d558 <myhtml_insertion_mode_in_body@@Base+0xc5c>
   1d54c:	mov	r1, r5
   1d550:	mov	r0, r4
   1d554:	bl	103dc <myhtml_tree_tags_close_p@plt>
   1d558:	mov	r0, r4
   1d55c:	bl	105bc <myhtml_tree_current_node@plt>
   1d560:	mov	r1, #85	; 0x55
   1d564:	bl	10a3c <myhtml_is_html_node@plt>
   1d568:	cmp	r0, #0
   1d56c:	beq	1d790 <myhtml_insertion_mode_in_body@@Base+0xe94>
   1d570:	mov	r0, r4
   1d574:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1d578:	b	1d790 <myhtml_insertion_mode_in_body@@Base+0xe94>
   1d57c:	mov	r3, #32
   1d580:	mov	r2, #1
   1d584:	mov	r1, #99	; 0x63
   1d588:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1d58c:	cmp	r0, #0
   1d590:	beq	1d5a0 <myhtml_insertion_mode_in_body@@Base+0xca4>
   1d594:	mov	r1, r5
   1d598:	mov	r0, r4
   1d59c:	bl	103dc <myhtml_tree_tags_close_p@plt>
   1d5a0:	mov	r0, r4
   1d5a4:	bl	105bc <myhtml_tree_current_node@plt>
   1d5a8:	ldr	r3, [r0, #4]
   1d5ac:	sub	r3, r3, #55	; 0x37
   1d5b0:	cmp	r3, #5
   1d5b4:	bhi	1d790 <myhtml_insertion_mode_in_body@@Base+0xe94>
   1d5b8:	ldr	r3, [r0, #8]
   1d5bc:	cmp	r3, #1
   1d5c0:	bne	1d790 <myhtml_insertion_mode_in_body@@Base+0xe94>
   1d5c4:	b	1d570 <myhtml_insertion_mode_in_body@@Base+0xc74>
   1d5c8:	mov	r3, #32
   1d5cc:	mov	r2, #1
   1d5d0:	mov	r1, #99	; 0x63
   1d5d4:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1d5d8:	cmp	r0, #0
   1d5dc:	beq	1d5ec <myhtml_insertion_mode_in_body@@Base+0xcf0>
   1d5e0:	mov	r1, r5
   1d5e4:	mov	r0, r4
   1d5e8:	bl	103dc <myhtml_tree_tags_close_p@plt>
   1d5ec:	mov	r1, r5
   1d5f0:	mov	r0, r4
   1d5f4:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1d5f8:	ldr	r3, [r4, #180]	; 0xb4
   1d5fc:	orr	r3, r3, #192	; 0xc0
   1d600:	str	r3, [r4, #180]	; 0xb4
   1d604:	ldr	r3, [r4, #180]	; 0xb4
   1d608:	ldr	r2, [r4, #180]	; 0xb4
   1d60c:	and	r3, r3, #2
   1d610:	eor	r3, r3, r2
   1d614:	str	r3, [r4, #180]	; 0xb4
   1d618:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d61c:	mov	r3, #0
   1d620:	mov	r2, #1
   1d624:	mov	r1, #128	; 0x80
   1d628:	bl	10790 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1d62c:	ldr	r6, [r4, #104]	; 0x68
   1d630:	mov	r7, r0
   1d634:	clz	r0, r0
   1d638:	lsr	r0, r0, #5
   1d63c:	cmp	r6, #0
   1d640:	movne	r6, r0
   1d644:	moveq	r6, #0
   1d648:	cmp	r6, #0
   1d64c:	bne	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d650:	mov	r3, #32
   1d654:	mov	r2, #1
   1d658:	mov	r1, #99	; 0x63
   1d65c:	mov	r0, r4
   1d660:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1d664:	cmp	r0, #0
   1d668:	beq	1d678 <myhtml_insertion_mode_in_body@@Base+0xd7c>
   1d66c:	mov	r1, r5
   1d670:	mov	r0, r4
   1d674:	bl	103dc <myhtml_tree_tags_close_p@plt>
   1d678:	mov	r1, r5
   1d67c:	mov	r0, r4
   1d680:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1d684:	cmp	r7, #0
   1d688:	streq	r0, [r4, #104]	; 0x68
   1d68c:	bne	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d690:	b	1cc88 <myhtml_insertion_mode_in_body@@Base+0x38c>
   1d694:	ldr	r3, [r0, #180]	; 0xb4
   1d698:	ldr	r2, [r0, #180]	; 0xb4
   1d69c:	and	r3, r3, #2
   1d6a0:	eor	r3, r3, r2
   1d6a4:	str	r3, [r0, #180]	; 0xb4
   1d6a8:	ldr	r3, [r0, #128]	; 0x80
   1d6ac:	ldr	r6, [r3, #4]
   1d6b0:	cmp	r6, #0
   1d6b4:	beq	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d6b8:	sub	r6, r6, #1
   1d6bc:	ldr	r0, [r4, #28]
   1d6c0:	ldr	r3, [r4, #128]	; 0x80
   1d6c4:	ldr	r3, [r3]
   1d6c8:	ldr	r7, [r3, r6, lsl #2]
   1d6cc:	ldr	r1, [r7, #4]
   1d6d0:	bl	109b8 <myhtml_tag_get_by_id@plt>
   1d6d4:	mov	r8, r0
   1d6d8:	mov	r1, #77	; 0x4d
   1d6dc:	mov	r0, r7
   1d6e0:	bl	10a3c <myhtml_is_html_node@plt>
   1d6e4:	cmp	r0, #0
   1d6e8:	beq	1d724 <myhtml_insertion_mode_in_body@@Base+0xe28>
   1d6ec:	mov	r2, #1
   1d6f0:	mov	r1, #77	; 0x4d
   1d6f4:	mov	r0, r4
   1d6f8:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   1d6fc:	mov	r0, r4
   1d700:	bl	105bc <myhtml_tree_current_node@plt>
   1d704:	mov	r1, #77	; 0x4d
   1d708:	bl	10a3c <myhtml_is_html_node@plt>
   1d70c:	mov	r3, #0
   1d710:	mov	r2, #1
   1d714:	mov	r1, #77	; 0x4d
   1d718:	mov	r0, r4
   1d71c:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   1d720:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d724:	ldr	r1, [r7, #8]
   1d728:	add	r3, r1, #4
   1d72c:	ldr	r3, [r8, r3, lsl #2]
   1d730:	tst	r3, #2
   1d734:	beq	1d6b0 <myhtml_insertion_mode_in_body@@Base+0xdb4>
   1d738:	ldr	r2, [r7, #4]
   1d73c:	cmp	r2, #7
   1d740:	cmpne	r2, #42	; 0x2a
   1d744:	movne	r3, #1
   1d748:	moveq	r3, #0
   1d74c:	cmp	r2, #99	; 0x63
   1d750:	moveq	r3, #0
   1d754:	andne	r3, r3, #1
   1d758:	cmp	r3, #0
   1d75c:	bne	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d760:	cmp	r1, #1
   1d764:	beq	1d6b0 <myhtml_insertion_mode_in_body@@Base+0xdb4>
   1d768:	mov	r3, #32
   1d76c:	mov	r2, #1
   1d770:	mov	r1, #99	; 0x63
   1d774:	mov	r0, r4
   1d778:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1d77c:	cmp	r0, #0
   1d780:	beq	1d790 <myhtml_insertion_mode_in_body@@Base+0xe94>
   1d784:	mov	r1, r5
   1d788:	mov	r0, r4
   1d78c:	bl	103dc <myhtml_tree_tags_close_p@plt>
   1d790:	mov	r1, r5
   1d794:	mov	r0, r4
   1d798:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1d79c:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d7a0:	ldr	r3, [r0, #180]	; 0xb4
   1d7a4:	ldr	r2, [r0, #180]	; 0xb4
   1d7a8:	and	r3, r3, #2
   1d7ac:	eor	r3, r3, r2
   1d7b0:	str	r3, [r0, #180]	; 0xb4
   1d7b4:	ldr	r3, [r0, #128]	; 0x80
   1d7b8:	ldr	r7, [r3, #4]
   1d7bc:	cmp	r7, #0
   1d7c0:	beq	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d7c4:	sub	r7, r7, #1
   1d7c8:	ldr	r0, [r4, #28]
   1d7cc:	ldr	r3, [r4, #128]	; 0x80
   1d7d0:	ldr	r3, [r3]
   1d7d4:	ldr	r6, [r3, r7, lsl #2]
   1d7d8:	ldr	r1, [r6, #4]
   1d7dc:	bl	109b8 <myhtml_tag_get_by_id@plt>
   1d7e0:	mov	r8, r0
   1d7e4:	mov	r1, #36	; 0x24
   1d7e8:	mov	r0, r6
   1d7ec:	bl	10a3c <myhtml_is_html_node@plt>
   1d7f0:	subs	r9, r0, #0
   1d7f4:	beq	1d828 <myhtml_insertion_mode_in_body@@Base+0xf2c>
   1d7f8:	mov	r2, #1
   1d7fc:	mov	r1, #36	; 0x24
   1d800:	mov	r0, r4
   1d804:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   1d808:	mov	r0, r4
   1d80c:	bl	105bc <myhtml_tree_current_node@plt>
   1d810:	mov	r1, #36	; 0x24
   1d814:	bl	10a3c <myhtml_is_html_node@plt>
   1d818:	mov	r3, #0
   1d81c:	mov	r2, #1
   1d820:	mov	r1, #36	; 0x24
   1d824:	b	1d718 <myhtml_insertion_mode_in_body@@Base+0xe1c>
   1d828:	mov	r1, #44	; 0x2c
   1d82c:	mov	r0, r6
   1d830:	bl	10a3c <myhtml_is_html_node@plt>
   1d834:	cmp	r0, #0
   1d838:	beq	1d86c <myhtml_insertion_mode_in_body@@Base+0xf70>
   1d83c:	mov	r2, #1
   1d840:	mov	r1, #44	; 0x2c
   1d844:	mov	r0, r4
   1d848:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   1d84c:	mov	r0, r4
   1d850:	bl	105bc <myhtml_tree_current_node@plt>
   1d854:	mov	r1, #44	; 0x2c
   1d858:	bl	10a3c <myhtml_is_html_node@plt>
   1d85c:	mov	r3, r9
   1d860:	mov	r2, #1
   1d864:	mov	r1, #44	; 0x2c
   1d868:	b	1d718 <myhtml_insertion_mode_in_body@@Base+0xe1c>
   1d86c:	ldr	r1, [r6, #8]
   1d870:	add	r3, r1, #4
   1d874:	ldr	r3, [r8, r3, lsl #2]
   1d878:	tst	r3, #2
   1d87c:	beq	1d7bc <myhtml_insertion_mode_in_body@@Base+0xec0>
   1d880:	ldr	r2, [r6, #4]
   1d884:	cmp	r2, #7
   1d888:	cmpne	r2, #42	; 0x2a
   1d88c:	movne	r3, #1
   1d890:	moveq	r3, #0
   1d894:	cmp	r2, #99	; 0x63
   1d898:	moveq	r3, #0
   1d89c:	andne	r3, r3, #1
   1d8a0:	cmp	r3, #0
   1d8a4:	bne	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d8a8:	cmp	r1, #1
   1d8ac:	beq	1d7bc <myhtml_insertion_mode_in_body@@Base+0xec0>
   1d8b0:	b	1d768 <myhtml_insertion_mode_in_body@@Base+0xe6c>
   1d8b4:	mov	r3, #32
   1d8b8:	mov	r2, #1
   1d8bc:	mov	r1, #99	; 0x63
   1d8c0:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1d8c4:	cmp	r0, #0
   1d8c8:	beq	1d8d8 <myhtml_insertion_mode_in_body@@Base+0xfdc>
   1d8cc:	mov	r1, r5
   1d8d0:	mov	r0, r4
   1d8d4:	bl	103dc <myhtml_tree_tags_close_p@plt>
   1d8d8:	mov	r1, r5
   1d8dc:	mov	r0, r4
   1d8e0:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1d8e4:	mov	r3, #6
   1d8e8:	str	r3, [r4, #164]	; 0xa4
   1d8ec:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d8f0:	mov	r3, #8
   1d8f4:	mov	r2, #1
   1d8f8:	mov	r1, #25
   1d8fc:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1d900:	cmp	r0, #0
   1d904:	beq	1d92c <myhtml_insertion_mode_in_body@@Base+0x1030>
   1d908:	mov	r2, #0
   1d90c:	mov	r0, r4
   1d910:	mov	r1, r2
   1d914:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   1d918:	mov	r3, #0
   1d91c:	mov	r2, #1
   1d920:	mov	r1, #25
   1d924:	mov	r0, r4
   1d928:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   1d92c:	mov	r0, r4
   1d930:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   1d934:	mov	r1, r5
   1d938:	mov	r0, r4
   1d93c:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1d940:	b	1d604 <myhtml_insertion_mode_in_body@@Base+0xd08>
   1d944:	mov	r2, #0
   1d948:	mov	r1, #4
   1d94c:	bl	105e0 <myhtml_tree_active_formatting_between_last_marker@plt>
   1d950:	cmp	r0, #0
   1d954:	beq	1d998 <myhtml_insertion_mode_in_body@@Base+0x109c>
   1d958:	mov	r2, #4
   1d95c:	mov	r1, r5
   1d960:	mov	r0, r4
   1d964:	bl	1082c <myhtml_tree_adoption_agency_algorithm@plt>
   1d968:	mov	r2, #0
   1d96c:	mov	r1, #4
   1d970:	mov	r0, r4
   1d974:	bl	105e0 <myhtml_tree_active_formatting_between_last_marker@plt>
   1d978:	subs	r6, r0, #0
   1d97c:	beq	1d998 <myhtml_insertion_mode_in_body@@Base+0x109c>
   1d980:	mov	r1, r6
   1d984:	mov	r0, r4
   1d988:	bl	101d8 <myhtml_tree_open_elements_remove@plt>
   1d98c:	mov	r1, r6
   1d990:	mov	r0, r4
   1d994:	bl	10838 <myhtml_tree_active_formatting_remove@plt>
   1d998:	mov	r0, r4
   1d99c:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   1d9a0:	mov	r1, r5
   1d9a4:	mov	r0, r4
   1d9a8:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1d9ac:	mov	r1, r0
   1d9b0:	mov	r0, r4
   1d9b4:	bl	107a8 <myhtml_tree_active_formatting_append_with_check@plt>
   1d9b8:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1d9bc:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   1d9c0:	mov	r3, #8
   1d9c4:	mov	r2, #1
   1d9c8:	mov	r1, #90	; 0x5a
   1d9cc:	mov	r0, r4
   1d9d0:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1d9d4:	cmp	r0, #0
   1d9d8:	beq	1d9a0 <myhtml_insertion_mode_in_body@@Base+0x10a4>
   1d9dc:	mov	r2, #90	; 0x5a
   1d9e0:	mov	r1, r5
   1d9e4:	mov	r0, r4
   1d9e8:	bl	1082c <myhtml_tree_adoption_agency_algorithm@plt>
   1d9ec:	b	1d998 <myhtml_insertion_mode_in_body@@Base+0x109c>
   1d9f0:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   1d9f4:	mov	r1, r5
   1d9f8:	mov	r0, r4
   1d9fc:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1da00:	ldr	r3, [r4]
   1da04:	mov	r0, r4
   1da08:	ldr	r1, [r3, #36]	; 0x24
   1da0c:	bl	10070 <myhtml_tree_active_formatting_append@plt>
   1da10:	b	1d604 <myhtml_insertion_mode_in_body@@Base+0xd08>
   1da14:	ldr	r3, [r0, #176]	; 0xb0
   1da18:	tst	r3, #1
   1da1c:	bne	1da44 <myhtml_insertion_mode_in_body@@Base+0x1148>
   1da20:	mov	r3, #32
   1da24:	mov	r2, #1
   1da28:	mov	r1, #99	; 0x63
   1da2c:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1da30:	cmp	r0, #0
   1da34:	beq	1da44 <myhtml_insertion_mode_in_body@@Base+0x1148>
   1da38:	mov	r1, r5
   1da3c:	mov	r0, r4
   1da40:	bl	103dc <myhtml_tree_tags_close_p@plt>
   1da44:	mov	r1, r5
   1da48:	mov	r0, r4
   1da4c:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1da50:	ldr	r3, [r4, #180]	; 0xb4
   1da54:	ldr	r2, [r4, #180]	; 0xb4
   1da58:	and	r3, r3, #2
   1da5c:	eor	r3, r3, r2
   1da60:	str	r3, [r4, #180]	; 0xb4
   1da64:	mov	r3, #8
   1da68:	b	1cb98 <myhtml_insertion_mode_in_body@@Base+0x29c>
   1da6c:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   1da70:	mov	r1, r5
   1da74:	mov	r0, r4
   1da78:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1da7c:	mov	r0, r4
   1da80:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1da84:	b	1d604 <myhtml_insertion_mode_in_body@@Base+0xd08>
   1da88:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   1da8c:	mov	r1, r5
   1da90:	mov	r0, r4
   1da94:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1da98:	mov	r0, r4
   1da9c:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1daa0:	mov	r1, r5
   1daa4:	ldr	r0, [r4, #8]
   1daa8:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1daac:	mov	r3, #6
   1dab0:	ldr	r0, [r4, #8]
   1dab4:	mov	r1, r5
   1dab8:	str	r3, [sp, #4]
   1dabc:	ldr	r3, [pc, #688]	; 1dd74 <myhtml_insertion_mode_in_body@@Base+0x1478>
   1dac0:	ldr	r2, [pc, #688]	; 1dd78 <myhtml_insertion_mode_in_body@@Base+0x147c>
   1dac4:	add	r3, pc, r3
   1dac8:	add	r2, pc, r2
   1dacc:	str	r3, [sp]
   1dad0:	mov	r3, #4
   1dad4:	bl	fcd4 <myhtml_token_attr_match_case@plt>
   1dad8:	subs	r6, r0, #0
   1dadc:	bne	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1dae0:	b	1cf30 <myhtml_insertion_mode_in_body@@Base+0x634>
   1dae4:	mov	r1, r5
   1dae8:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1daec:	mov	r0, r4
   1daf0:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1daf4:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1daf8:	mov	r3, #32
   1dafc:	mov	r2, #1
   1db00:	mov	r1, #99	; 0x63
   1db04:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1db08:	cmp	r0, #0
   1db0c:	beq	1db1c <myhtml_insertion_mode_in_body@@Base+0x1220>
   1db10:	mov	r1, r5
   1db14:	mov	r0, r4
   1db18:	bl	103dc <myhtml_tree_tags_close_p@plt>
   1db1c:	mov	r0, r4
   1db20:	bl	105bc <myhtml_tree_current_node@plt>
   1db24:	mov	r1, #85	; 0x55
   1db28:	bl	10a3c <myhtml_is_html_node@plt>
   1db2c:	cmp	r0, #0
   1db30:	beq	1da70 <myhtml_insertion_mode_in_body@@Base+0x1174>
   1db34:	mov	r0, r4
   1db38:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1db3c:	b	1da70 <myhtml_insertion_mode_in_body@@Base+0x1174>
   1db40:	mov	r3, #69	; 0x45
   1db44:	str	r3, [r5]
   1db48:	b	1cbd4 <myhtml_insertion_mode_in_body@@Base+0x2d8>
   1db4c:	mov	r1, r5
   1db50:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1db54:	ldr	r3, [r4, #180]	; 0xb4
   1db58:	orr	r3, r3, #192	; 0xc0
   1db5c:	str	r3, [r4, #180]	; 0xb4
   1db60:	ldr	r3, [r4, #168]	; 0xa8
   1db64:	str	r3, [r4, #172]	; 0xac
   1db68:	ldr	r3, [r4, #180]	; 0xb4
   1db6c:	ldr	r2, [r4, #180]	; 0xb4
   1db70:	and	r3, r3, #2
   1db74:	eor	r3, r3, r2
   1db78:	str	r3, [r4, #180]	; 0xb4
   1db7c:	mov	r3, #7
   1db80:	str	r3, [r4, #168]	; 0xa8
   1db84:	mov	r3, #2
   1db88:	b	1d8e8 <myhtml_insertion_mode_in_body@@Base+0xfec>
   1db8c:	mov	r3, #32
   1db90:	mov	r2, #1
   1db94:	mov	r1, #99	; 0x63
   1db98:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1db9c:	cmp	r0, #0
   1dba0:	beq	1dbb0 <myhtml_insertion_mode_in_body@@Base+0x12b4>
   1dba4:	mov	r1, r5
   1dba8:	mov	r0, r4
   1dbac:	bl	103dc <myhtml_tree_tags_close_p@plt>
   1dbb0:	mov	r0, r4
   1dbb4:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   1dbb8:	ldr	r3, [r4, #180]	; 0xb4
   1dbbc:	ldr	r2, [r4, #180]	; 0xb4
   1dbc0:	and	r3, r3, #2
   1dbc4:	eor	r3, r3, r2
   1dbc8:	str	r3, [r4, #180]	; 0xb4
   1dbcc:	mov	r3, #4
   1dbd0:	mov	r1, r5
   1dbd4:	mov	r0, r4
   1dbd8:	str	r3, [r4, #164]	; 0xa4
   1dbdc:	bl	10ed4 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>
   1dbe0:	b	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1dbe4:	ldr	r3, [r0, #180]	; 0xb4
   1dbe8:	tst	r3, #1
   1dbec:	bne	1dbcc <myhtml_insertion_mode_in_body@@Base+0x12d0>
   1dbf0:	mov	r0, r4
   1dbf4:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   1dbf8:	b	1d790 <myhtml_insertion_mode_in_body@@Base+0xe94>
   1dbfc:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   1dc00:	mov	r1, r5
   1dc04:	mov	r0, r4
   1dc08:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1dc0c:	ldr	r0, [r4, #168]	; 0xa8
   1dc10:	ldr	r3, [r4, #180]	; 0xb4
   1dc14:	ldr	r2, [r4, #180]	; 0xb4
   1dc18:	sub	r6, r0, #12
   1dc1c:	bic	r0, r0, #2
   1dc20:	cmp	r0, #8
   1dc24:	cmpne	r6, #2
   1dc28:	and	r3, r3, #2
   1dc2c:	movls	r6, #1
   1dc30:	movhi	r6, #0
   1dc34:	eor	r3, r3, r2
   1dc38:	str	r3, [r4, #180]	; 0xb4
   1dc3c:	movhi	r3, #15
   1dc40:	strhi	r3, [r4, #168]	; 0xa8
   1dc44:	bhi	1cc88 <myhtml_insertion_mode_in_body@@Base+0x38c>
   1dc48:	mov	r3, #16
   1dc4c:	b	1cb98 <myhtml_insertion_mode_in_body@@Base+0x29c>
   1dc50:	bl	105bc <myhtml_tree_current_node@plt>
   1dc54:	mov	r1, #97	; 0x61
   1dc58:	bl	10a3c <myhtml_is_html_node@plt>
   1dc5c:	cmp	r0, #0
   1dc60:	beq	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1dc64:	mov	r0, r4
   1dc68:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1dc6c:	b	1dbf0 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1dc70:	bl	105bc <myhtml_tree_current_node@plt>
   1dc74:	mov	r1, #85	; 0x55
   1dc78:	b	1dc58 <myhtml_insertion_mode_in_body@@Base+0x135c>
   1dc7c:	mov	r3, #8
   1dc80:	mov	r2, #1
   1dc84:	mov	r1, #109	; 0x6d
   1dc88:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1dc8c:	cmp	r0, #0
   1dc90:	beq	1dca4 <myhtml_insertion_mode_in_body@@Base+0x13a8>
   1dc94:	mov	r2, #0
   1dc98:	mov	r1, r2
   1dc9c:	mov	r0, r4
   1dca0:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   1dca4:	mov	r0, r4
   1dca8:	bl	105bc <myhtml_tree_current_node@plt>
   1dcac:	b	1d790 <myhtml_insertion_mode_in_body@@Base+0xe94>
   1dcb0:	mov	r2, #1
   1dcb4:	mov	r1, #109	; 0x6d
   1dcb8:	mov	r3, #8
   1dcbc:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1dcc0:	cmp	r0, #0
   1dcc4:	movne	r2, #1
   1dcc8:	movne	r1, #108	; 0x6c
   1dccc:	bne	1dc9c <myhtml_insertion_mode_in_body@@Base+0x13a0>
   1dcd0:	b	1dca4 <myhtml_insertion_mode_in_body@@Base+0x13a8>
   1dcd4:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   1dcd8:	mov	r1, r5
   1dcdc:	ldr	r0, [r4, #8]
   1dce0:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1dce4:	mov	r0, r5
   1dce8:	bl	ff14 <myhtml_token_adjust_mathml_attributes@plt>
   1dcec:	mov	r0, r5
   1dcf0:	bl	10b74 <myhtml_token_adjust_foreign_attributes@plt>
   1dcf4:	mov	r1, r5
   1dcf8:	mov	r0, r4
   1dcfc:	bl	10d18 <myhtml_tree_node_insert_foreign_element@plt>
   1dd00:	mov	r3, #2
   1dd04:	str	r3, [r0, #8]
   1dd08:	ldr	r3, [r5, #48]	; 0x30
   1dd0c:	tst	r3, #2
   1dd10:	beq	1cb7c <myhtml_insertion_mode_in_body@@Base+0x280>
   1dd14:	b	1daec <myhtml_insertion_mode_in_body@@Base+0x11f0>
   1dd18:	bl	104d8 <myhtml_tree_active_formatting_reconstruction@plt>
   1dd1c:	mov	r1, r5
   1dd20:	ldr	r0, [r4, #8]
   1dd24:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1dd28:	mov	r0, r5
   1dd2c:	bl	10178 <myhtml_token_adjust_svg_attributes@plt>
   1dd30:	mov	r0, r5
   1dd34:	bl	10b74 <myhtml_token_adjust_foreign_attributes@plt>
   1dd38:	mov	r1, r5
   1dd3c:	mov	r0, r4
   1dd40:	bl	10d18 <myhtml_tree_node_insert_foreign_element@plt>
   1dd44:	mov	r3, #3
   1dd48:	b	1dd04 <myhtml_insertion_mode_in_body@@Base+0x1408>
   1dd4c:	mov	r2, #0
   1dd50:	mov	r0, r4
   1dd54:	mov	r1, r2
   1dd58:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   1dd5c:	mov	r0, r4
   1dd60:	bl	105bc <myhtml_tree_current_node@plt>
   1dd64:	ldr	r1, [r5]
   1dd68:	bl	10a3c <myhtml_is_html_node@plt>
   1dd6c:	ldr	r3, [r4, #128]	; 0x80
   1dd70:	b	1ce7c <myhtml_insertion_mode_in_body@@Base+0x580>
   1dd74:	andeq	r8, sp, r2, ror sl
   1dd78:	strdeq	r5, [r1], -r3

0001dd7c <myhtml_insertion_mode_before_head@@Base>:
   1dd7c:	push	{r4, r5, r6, lr}
   1dd80:	mov	r6, r0
   1dd84:	ldr	r5, [r1]
   1dd88:	ldr	r4, [r1, #48]	; 0x30
   1dd8c:	ands	r4, r4, #1
   1dd90:	beq	1dde4 <myhtml_insertion_mode_before_head@@Base+0x68>
   1dd94:	cmp	r5, #61	; 0x3d
   1dd98:	beq	1ddac <myhtml_insertion_mode_before_head@@Base+0x30>
   1dd9c:	bhi	1ddd4 <myhtml_insertion_mode_before_head@@Base+0x58>
   1dda0:	sub	r0, r5, #23
   1dda4:	cmp	r0, #1
   1dda8:	bhi	1dddc <myhtml_insertion_mode_before_head@@Base+0x60>
   1ddac:	mov	r2, #1
   1ddb0:	mov	r1, #61	; 0x3d
   1ddb4:	mov	r0, r6
   1ddb8:	mov	r4, #1
   1ddbc:	bl	10904 <myhtml_tree_node_insert@plt>
   1ddc0:	mov	r3, #3
   1ddc4:	str	r0, [r6, #92]	; 0x5c
   1ddc8:	str	r3, [r6, #168]	; 0xa8
   1ddcc:	mov	r0, r4
   1ddd0:	pop	{r4, r5, r6, pc}
   1ddd4:	cmp	r5, #65	; 0x41
   1ddd8:	beq	1ddac <myhtml_insertion_mode_before_head@@Base+0x30>
   1dddc:	mov	r4, #0
   1dde0:	b	1ddcc <myhtml_insertion_mode_before_head@@Base+0x50>
   1dde4:	cmp	r5, #3
   1dde8:	beq	1ddcc <myhtml_insertion_mode_before_head@@Base+0x50>
   1ddec:	bhi	1de0c <myhtml_insertion_mode_before_head@@Base+0x90>
   1ddf0:	cmp	r5, #1
   1ddf4:	beq	1de24 <myhtml_insertion_mode_before_head@@Base+0xa8>
   1ddf8:	cmp	r5, #2
   1ddfc:	bne	1ddac <myhtml_insertion_mode_before_head@@Base+0x30>
   1de00:	mov	r2, r4
   1de04:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   1de08:	b	1ddcc <myhtml_insertion_mode_before_head@@Base+0x50>
   1de0c:	cmp	r5, #61	; 0x3d
   1de10:	beq	1de3c <myhtml_insertion_mode_before_head@@Base+0xc0>
   1de14:	cmp	r5, #65	; 0x41
   1de18:	bne	1ddac <myhtml_insertion_mode_before_head@@Base+0x30>
   1de1c:	pop	{r4, r5, r6, lr}
   1de20:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   1de24:	ldr	r3, [r1, #48]	; 0x30
   1de28:	tst	r3, #8
   1de2c:	bne	1ddcc <myhtml_insertion_mode_before_head@@Base+0x50>
   1de30:	ldr	r0, [r0, #8]
   1de34:	bl	100b8 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   1de38:	b	1ddac <myhtml_insertion_mode_before_head@@Base+0x30>
   1de3c:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1de40:	mov	r3, #3
   1de44:	str	r0, [r6, #92]	; 0x5c
   1de48:	str	r3, [r6, #168]	; 0xa8
   1de4c:	b	1ddcc <myhtml_insertion_mode_before_head@@Base+0x50>

0001de50 <myhtml_insertion_mode_in_head@@Base>:
   1de50:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1de54:	mov	r4, r0
   1de58:	ldr	r6, [r1]
   1de5c:	ldr	r5, [r1, #48]	; 0x30
   1de60:	ands	r5, r5, #1
   1de64:	beq	1df20 <myhtml_insertion_mode_in_head@@Base+0xd0>
   1de68:	cmp	r6, #61	; 0x3d
   1de6c:	beq	1deb0 <myhtml_insertion_mode_in_head@@Base+0x60>
   1de70:	bhi	1de98 <myhtml_insertion_mode_in_head@@Base+0x48>
   1de74:	sub	r6, r6, #23
   1de78:	cmp	r6, #1
   1de7c:	bhi	1dea8 <myhtml_insertion_mode_in_head@@Base+0x58>
   1de80:	mov	r0, r4
   1de84:	mov	r5, #1
   1de88:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1de8c:	mov	r3, #5
   1de90:	str	r3, [r4, #168]	; 0xa8
   1de94:	b	1df7c <myhtml_insertion_mode_in_head@@Base+0x12c>
   1de98:	cmp	r6, #65	; 0x41
   1de9c:	beq	1de80 <myhtml_insertion_mode_in_head@@Base+0x30>
   1dea0:	cmp	r6, #128	; 0x80
   1dea4:	beq	1dec0 <myhtml_insertion_mode_in_head@@Base+0x70>
   1dea8:	mov	r5, #0
   1deac:	b	1df7c <myhtml_insertion_mode_in_head@@Base+0x12c>
   1deb0:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1deb4:	mov	r3, #5
   1deb8:	str	r3, [r4, #168]	; 0xa8
   1debc:	b	1dea8 <myhtml_insertion_mode_in_head@@Base+0x58>
   1dec0:	mov	r3, #0
   1dec4:	mov	r2, #1
   1dec8:	mov	r1, r6
   1decc:	bl	fc50 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   1ded0:	subs	r5, r0, #0
   1ded4:	beq	1df7c <myhtml_insertion_mode_in_head@@Base+0x12c>
   1ded8:	mov	r2, #0
   1dedc:	mov	r0, r4
   1dee0:	mov	r1, r2
   1dee4:	bl	fdd0 <myhtml_tree_generate_all_implied_end_tags@plt>
   1dee8:	mov	r0, r4
   1deec:	bl	105bc <myhtml_tree_current_node@plt>
   1def0:	mov	r3, #0
   1def4:	mov	r2, #1
   1def8:	mov	r1, r6
   1defc:	mov	r0, r4
   1df00:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   1df04:	mov	r0, r4
   1df08:	bl	10df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   1df0c:	mov	r0, r4
   1df10:	bl	10970 <myhtml_tree_template_insertion_pop@plt>
   1df14:	mov	r0, r4
   1df18:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   1df1c:	b	1dea8 <myhtml_insertion_mode_in_head@@Base+0x58>
   1df20:	cmp	r6, #65	; 0x41
   1df24:	beq	1e094 <myhtml_insertion_mode_in_head@@Base+0x244>
   1df28:	mov	r8, r1
   1df2c:	bhi	1df88 <myhtml_insertion_mode_in_head@@Base+0x138>
   1df30:	cmp	r6, #16
   1df34:	bhi	1df6c <myhtml_insertion_mode_in_head@@Base+0x11c>
   1df38:	cmp	r6, #15
   1df3c:	bcs	1dfac <myhtml_insertion_mode_in_head@@Base+0x15c>
   1df40:	cmp	r6, #2
   1df44:	beq	1e088 <myhtml_insertion_mode_in_head@@Base+0x238>
   1df48:	cmp	r6, #3
   1df4c:	beq	1df7c <myhtml_insertion_mode_in_head@@Base+0x12c>
   1df50:	cmp	r6, #1
   1df54:	bne	1de80 <myhtml_insertion_mode_in_head@@Base+0x30>
   1df58:	ldr	r3, [r1, #48]	; 0x30
   1df5c:	tst	r3, #8
   1df60:	beq	1e070 <myhtml_insertion_mode_in_head@@Base+0x220>
   1df64:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   1df68:	b	1df7c <myhtml_insertion_mode_in_head@@Base+0x12c>
   1df6c:	cmp	r6, #19
   1df70:	beq	1dfac <myhtml_insertion_mode_in_head@@Base+0x15c>
   1df74:	cmp	r6, #61	; 0x3d
   1df78:	bne	1de80 <myhtml_insertion_mode_in_head@@Base+0x30>
   1df7c:	mov	r0, r5
   1df80:	add	sp, sp, #12
   1df84:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1df88:	cmp	r6, #93	; 0x5d
   1df8c:	beq	1e0a0 <myhtml_insertion_mode_in_head@@Base+0x250>
   1df90:	bhi	1dfc4 <myhtml_insertion_mode_in_head@@Base+0x174>
   1df94:	cmp	r6, #86	; 0x56
   1df98:	beq	1dfac <myhtml_insertion_mode_in_head@@Base+0x15c>
   1df9c:	cmp	r6, #92	; 0x5c
   1dfa0:	beq	1e0d4 <myhtml_insertion_mode_in_head@@Base+0x284>
   1dfa4:	cmp	r6, #78	; 0x4e
   1dfa8:	bne	1de80 <myhtml_insertion_mode_in_head@@Base+0x30>
   1dfac:	mov	r1, r8
   1dfb0:	mov	r0, r4
   1dfb4:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1dfb8:	mov	r0, r4
   1dfbc:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1dfc0:	b	1dea8 <myhtml_insertion_mode_in_head@@Base+0x58>
   1dfc4:	cmp	r6, #120	; 0x78
   1dfc8:	beq	1e0d4 <myhtml_insertion_mode_in_head@@Base+0x284>
   1dfcc:	bhi	1e040 <myhtml_insertion_mode_in_head@@Base+0x1f0>
   1dfd0:	cmp	r6, #112	; 0x70
   1dfd4:	bne	1de80 <myhtml_insertion_mode_in_head@@Base+0x30>
   1dfd8:	add	r2, sp, #4
   1dfdc:	mov	r1, r5
   1dfe0:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   1dfe4:	mov	r9, r0
   1dfe8:	mov	r0, r4
   1dfec:	bl	ff80 <myhtml_tree_node_create@plt>
   1dff0:	mov	r7, r0
   1dff4:	mov	r3, #1
   1dff8:	ldr	r2, [sp, #4]
   1dffc:	mov	r1, r0
   1e000:	mov	r0, r9
   1e004:	str	r6, [r7, #4]
   1e008:	str	r3, [r7, #8]
   1e00c:	mov	r3, #3
   1e010:	str	r3, [r7]
   1e014:	str	r8, [r7, #32]
   1e018:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   1e01c:	mov	r1, r7
   1e020:	mov	r0, r4
   1e024:	bl	1091c <myhtml_tree_open_elements_append@plt>
   1e028:	ldr	r3, [r4, #168]	; 0xa8
   1e02c:	str	r3, [r4, #172]	; 0xac
   1e030:	mov	r3, #7
   1e034:	str	r3, [r4, #168]	; 0xa8
   1e038:	mov	r3, #5
   1e03c:	b	1e068 <myhtml_insertion_mode_in_head@@Base+0x218>
   1e040:	cmp	r6, #128	; 0x80
   1e044:	beq	1e0f8 <myhtml_insertion_mode_in_head@@Base+0x2a8>
   1e048:	cmp	r6, #134	; 0x86
   1e04c:	bne	1de80 <myhtml_insertion_mode_in_head@@Base+0x30>
   1e050:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1e054:	ldr	r3, [r4, #168]	; 0xa8
   1e058:	str	r3, [r4, #172]	; 0xac
   1e05c:	mov	r3, #7
   1e060:	str	r3, [r4, #168]	; 0xa8
   1e064:	mov	r3, #2
   1e068:	str	r3, [r4, #164]	; 0xa4
   1e06c:	b	1df7c <myhtml_insertion_mode_in_head@@Base+0x12c>
   1e070:	bl	fe90 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   1e074:	subs	r1, r0, #0
   1e078:	beq	1de80 <myhtml_insertion_mode_in_head@@Base+0x30>
   1e07c:	mov	r0, r4
   1e080:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   1e084:	b	1de80 <myhtml_insertion_mode_in_head@@Base+0x30>
   1e088:	mov	r2, r5
   1e08c:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   1e090:	b	1df7c <myhtml_insertion_mode_in_head@@Base+0x12c>
   1e094:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   1e098:	mov	r5, r0
   1e09c:	b	1df7c <myhtml_insertion_mode_in_head@@Base+0x12c>
   1e0a0:	ldr	r3, [r0, #180]	; 0xb4
   1e0a4:	ands	r6, r3, #1
   1e0a8:	beq	1e0c8 <myhtml_insertion_mode_in_head@@Base+0x278>
   1e0ac:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1e0b0:	ldr	r3, [r4, #168]	; 0xa8
   1e0b4:	str	r3, [r4, #172]	; 0xac
   1e0b8:	mov	r3, #7
   1e0bc:	str	r3, [r4, #168]	; 0xa8
   1e0c0:	mov	r3, #4
   1e0c4:	b	1e068 <myhtml_insertion_mode_in_head@@Base+0x218>
   1e0c8:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1e0cc:	mov	r3, #4
   1e0d0:	b	1deb8 <myhtml_insertion_mode_in_head@@Base+0x68>
   1e0d4:	mov	r1, r8
   1e0d8:	mov	r0, r4
   1e0dc:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1e0e0:	ldr	r3, [r4, #168]	; 0xa8
   1e0e4:	mov	r0, #4
   1e0e8:	mov	r1, #7
   1e0ec:	strd	r0, [r4, #164]	; 0xa4
   1e0f0:	str	r3, [r4, #172]	; 0xac
   1e0f4:	b	1dea8 <myhtml_insertion_mode_in_head@@Base+0x58>
   1e0f8:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1e0fc:	ldr	r3, [r4]
   1e100:	mov	r0, r4
   1e104:	ldr	r1, [r3, #36]	; 0x24
   1e108:	bl	10070 <myhtml_tree_active_formatting_append@plt>
   1e10c:	ldr	r3, [r4, #180]	; 0xb4
   1e110:	mov	r1, #17
   1e114:	mov	r0, r4
   1e118:	ldr	r2, [r4, #180]	; 0xb4
   1e11c:	str	r1, [r4, #168]	; 0xa8
   1e120:	and	r3, r3, #2
   1e124:	eor	r3, r3, r2
   1e128:	str	r3, [r4, #180]	; 0xb4
   1e12c:	bl	ff50 <myhtml_tree_template_insertion_append@plt>
   1e130:	b	1df7c <myhtml_insertion_mode_in_head@@Base+0x12c>

0001e134 <myhtml_insertion_mode_in_head_noscript@@Base>:
   1e134:	ldr	r3, [r1, #48]	; 0x30
   1e138:	push	{r4, r5, r6, lr}
   1e13c:	mov	r5, r0
   1e140:	ldr	r4, [r1]
   1e144:	ands	r3, r3, #1
   1e148:	beq	1e18c <myhtml_insertion_mode_in_head_noscript@@Base+0x58>
   1e14c:	cmp	r4, #24
   1e150:	beq	1e170 <myhtml_insertion_mode_in_head_noscript@@Base+0x3c>
   1e154:	cmp	r4, #93	; 0x5d
   1e158:	bne	1e168 <myhtml_insertion_mode_in_head_noscript@@Base+0x34>
   1e15c:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1e160:	mov	r3, #3
   1e164:	str	r3, [r5, #168]	; 0xa8
   1e168:	mov	r3, #0
   1e16c:	b	1e184 <myhtml_insertion_mode_in_head_noscript@@Base+0x50>
   1e170:	mov	r0, r5
   1e174:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1e178:	mov	r3, #3
   1e17c:	str	r3, [r5, #168]	; 0xa8
   1e180:	mov	r3, #1
   1e184:	mov	r0, r3
   1e188:	pop	{r4, r5, r6, pc}
   1e18c:	cmp	r4, #61	; 0x3d
   1e190:	beq	1e184 <myhtml_insertion_mode_in_head_noscript@@Base+0x50>
   1e194:	mov	r2, r1
   1e198:	bhi	1e1d4 <myhtml_insertion_mode_in_head_noscript@@Base+0xa0>
   1e19c:	cmp	r4, #3
   1e1a0:	beq	1e184 <myhtml_insertion_mode_in_head_noscript@@Base+0x50>
   1e1a4:	bhi	1e1c4 <myhtml_insertion_mode_in_head_noscript@@Base+0x90>
   1e1a8:	cmp	r4, #1
   1e1ac:	beq	1e210 <myhtml_insertion_mode_in_head_noscript@@Base+0xdc>
   1e1b0:	cmp	r4, #2
   1e1b4:	bne	1e170 <myhtml_insertion_mode_in_head_noscript@@Base+0x3c>
   1e1b8:	mov	r1, r2
   1e1bc:	mov	r0, r5
   1e1c0:	b	1e21c <myhtml_insertion_mode_in_head_noscript@@Base+0xe8>
   1e1c4:	cmp	r4, #16
   1e1c8:	beq	1e1b8 <myhtml_insertion_mode_in_head_noscript@@Base+0x84>
   1e1cc:	cmp	r4, #19
   1e1d0:	b	1e1b4 <myhtml_insertion_mode_in_head_noscript@@Base+0x80>
   1e1d4:	cmp	r4, #86	; 0x56
   1e1d8:	beq	1e1b8 <myhtml_insertion_mode_in_head_noscript@@Base+0x84>
   1e1dc:	bhi	1e1f0 <myhtml_insertion_mode_in_head_noscript@@Base+0xbc>
   1e1e0:	cmp	r4, #65	; 0x41
   1e1e4:	beq	1e208 <myhtml_insertion_mode_in_head_noscript@@Base+0xd4>
   1e1e8:	cmp	r4, #78	; 0x4e
   1e1ec:	b	1e1b4 <myhtml_insertion_mode_in_head_noscript@@Base+0x80>
   1e1f0:	cmp	r4, #93	; 0x5d
   1e1f4:	beq	1e184 <myhtml_insertion_mode_in_head_noscript@@Base+0x50>
   1e1f8:	cmp	r4, #120	; 0x78
   1e1fc:	beq	1e1b8 <myhtml_insertion_mode_in_head_noscript@@Base+0x84>
   1e200:	cmp	r4, #92	; 0x5c
   1e204:	b	1e1b4 <myhtml_insertion_mode_in_head_noscript@@Base+0x80>
   1e208:	pop	{r4, r5, r6, lr}
   1e20c:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   1e210:	ldr	r3, [r1, #48]	; 0x30
   1e214:	tst	r3, #8
   1e218:	beq	1e174 <myhtml_insertion_mode_in_head_noscript@@Base+0x40>
   1e21c:	pop	{r4, r5, r6, lr}
   1e220:	b	fff8 <myhtml_insertion_mode_in_head@plt>

0001e224 <myhtml_insertion_mode_after_head@@Base>:
   1e224:	push	{r4, r5, r6, lr}
   1e228:	mov	r6, r0
   1e22c:	ldr	r3, [r1]
   1e230:	ldr	r4, [r1, #48]	; 0x30
   1e234:	ands	r4, r4, #1
   1e238:	beq	1e290 <myhtml_insertion_mode_after_head@@Base+0x6c>
   1e23c:	cmp	r3, #65	; 0x41
   1e240:	beq	1e254 <myhtml_insertion_mode_after_head@@Base+0x30>
   1e244:	bhi	1e278 <myhtml_insertion_mode_after_head@@Base+0x54>
   1e248:	sub	r3, r3, #23
   1e24c:	cmp	r3, #1
   1e250:	bhi	1e280 <myhtml_insertion_mode_after_head@@Base+0x5c>
   1e254:	mov	r2, #1
   1e258:	mov	r1, #23
   1e25c:	mov	r0, r6
   1e260:	mov	r4, #1
   1e264:	bl	10904 <myhtml_tree_node_insert@plt>
   1e268:	mov	r3, #6
   1e26c:	str	r0, [r6, #100]	; 0x64
   1e270:	str	r3, [r6, #168]	; 0xa8
   1e274:	b	1e2d8 <myhtml_insertion_mode_after_head@@Base+0xb4>
   1e278:	cmp	r3, #128	; 0x80
   1e27c:	beq	1e288 <myhtml_insertion_mode_after_head@@Base+0x64>
   1e280:	mov	r4, #0
   1e284:	b	1e2d8 <myhtml_insertion_mode_after_head@@Base+0xb4>
   1e288:	pop	{r4, r5, r6, lr}
   1e28c:	b	fff8 <myhtml_insertion_mode_in_head@plt>
   1e290:	cmp	r3, #61	; 0x3d
   1e294:	beq	1e2d8 <myhtml_insertion_mode_after_head@@Base+0xb4>
   1e298:	mov	r5, r1
   1e29c:	bhi	1e320 <myhtml_insertion_mode_after_head@@Base+0xfc>
   1e2a0:	cmp	r3, #16
   1e2a4:	bhi	1e2e0 <myhtml_insertion_mode_after_head@@Base+0xbc>
   1e2a8:	cmp	r3, #15
   1e2ac:	bcs	1e2f8 <myhtml_insertion_mode_after_head@@Base+0xd4>
   1e2b0:	cmp	r3, #2
   1e2b4:	beq	1e388 <myhtml_insertion_mode_after_head@@Base+0x164>
   1e2b8:	cmp	r3, #3
   1e2bc:	beq	1e2d8 <myhtml_insertion_mode_after_head@@Base+0xb4>
   1e2c0:	cmp	r3, #1
   1e2c4:	bne	1e254 <myhtml_insertion_mode_after_head@@Base+0x30>
   1e2c8:	ldr	r3, [r1, #48]	; 0x30
   1e2cc:	tst	r3, #8
   1e2d0:	beq	1e370 <myhtml_insertion_mode_after_head@@Base+0x14c>
   1e2d4:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   1e2d8:	mov	r0, r4
   1e2dc:	pop	{r4, r5, r6, pc}
   1e2e0:	cmp	r3, #23
   1e2e4:	beq	1e394 <myhtml_insertion_mode_after_head@@Base+0x170>
   1e2e8:	cmp	r3, #54	; 0x36
   1e2ec:	beq	1e3bc <myhtml_insertion_mode_after_head@@Base+0x198>
   1e2f0:	cmp	r3, #19
   1e2f4:	bne	1e254 <myhtml_insertion_mode_after_head@@Base+0x30>
   1e2f8:	mov	r0, r6
   1e2fc:	ldr	r1, [r6, #92]	; 0x5c
   1e300:	bl	1091c <myhtml_tree_open_elements_append@plt>
   1e304:	mov	r1, r5
   1e308:	mov	r0, r6
   1e30c:	bl	fff8 <myhtml_insertion_mode_in_head@plt>
   1e310:	mov	r0, r6
   1e314:	ldr	r1, [r6, #92]	; 0x5c
   1e318:	bl	101d8 <myhtml_tree_open_elements_remove@plt>
   1e31c:	b	1e280 <myhtml_insertion_mode_after_head@@Base+0x5c>
   1e320:	cmp	r3, #92	; 0x5c
   1e324:	beq	1e2f8 <myhtml_insertion_mode_after_head@@Base+0xd4>
   1e328:	bhi	1e34c <myhtml_insertion_mode_after_head@@Base+0x128>
   1e32c:	cmp	r3, #78	; 0x4e
   1e330:	beq	1e2f8 <myhtml_insertion_mode_after_head@@Base+0xd4>
   1e334:	cmp	r3, #86	; 0x56
   1e338:	beq	1e2f8 <myhtml_insertion_mode_after_head@@Base+0xd4>
   1e33c:	cmp	r3, #65	; 0x41
   1e340:	bne	1e254 <myhtml_insertion_mode_after_head@@Base+0x30>
   1e344:	pop	{r4, r5, r6, lr}
   1e348:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   1e34c:	cmp	r3, #120	; 0x78
   1e350:	beq	1e2f8 <myhtml_insertion_mode_after_head@@Base+0xd4>
   1e354:	bhi	1e360 <myhtml_insertion_mode_after_head@@Base+0x13c>
   1e358:	cmp	r3, #112	; 0x70
   1e35c:	b	1e2f4 <myhtml_insertion_mode_after_head@@Base+0xd0>
   1e360:	cmp	r3, #128	; 0x80
   1e364:	beq	1e2f8 <myhtml_insertion_mode_after_head@@Base+0xd4>
   1e368:	cmp	r3, #134	; 0x86
   1e36c:	b	1e2f4 <myhtml_insertion_mode_after_head@@Base+0xd0>
   1e370:	bl	fe90 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   1e374:	subs	r1, r0, #0
   1e378:	beq	1e254 <myhtml_insertion_mode_after_head@@Base+0x30>
   1e37c:	mov	r0, r6
   1e380:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   1e384:	b	1e254 <myhtml_insertion_mode_after_head@@Base+0x30>
   1e388:	mov	r2, r4
   1e38c:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   1e390:	b	1e2d8 <myhtml_insertion_mode_after_head@@Base+0xb4>
   1e394:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1e398:	ldr	r3, [r6, #180]	; 0xb4
   1e39c:	str	r0, [r6, #100]	; 0x64
   1e3a0:	ldr	r2, [r6, #180]	; 0xb4
   1e3a4:	and	r3, r3, #2
   1e3a8:	eor	r3, r3, r2
   1e3ac:	str	r3, [r6, #180]	; 0xb4
   1e3b0:	mov	r3, #6
   1e3b4:	str	r3, [r6, #168]	; 0xa8
   1e3b8:	b	1e2d8 <myhtml_insertion_mode_after_head@@Base+0xb4>
   1e3bc:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1e3c0:	mov	r3, #19
   1e3c4:	b	1e3b4 <myhtml_insertion_mode_after_head@@Base+0x190>

0001e3c8 <myhtml_insertion_mode_in_table@@Base>:
   1e3c8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1e3cc:	mov	r5, r0
   1e3d0:	mov	r7, r1
   1e3d4:	ldr	r6, [r1]
   1e3d8:	ldr	r4, [r1, #48]	; 0x30
   1e3dc:	ands	r4, r4, #1
   1e3e0:	beq	1e474 <myhtml_insertion_mode_in_table@@Base+0xac>
   1e3e4:	cmp	r6, #125	; 0x7d
   1e3e8:	beq	1e444 <myhtml_insertion_mode_in_table@@Base+0x7c>
   1e3ec:	bhi	1e420 <myhtml_insertion_mode_in_table@@Base+0x58>
   1e3f0:	cmp	r6, #32
   1e3f4:	bhi	1e418 <myhtml_insertion_mode_in_table@@Base+0x50>
   1e3f8:	cmp	r6, #31
   1e3fc:	bcs	1e410 <myhtml_insertion_mode_in_table@@Base+0x48>
   1e400:	cmp	r6, #23
   1e404:	beq	1e410 <myhtml_insertion_mode_in_table@@Base+0x48>
   1e408:	cmp	r6, #27
   1e40c:	bne	1e4a0 <myhtml_insertion_mode_in_table@@Base+0xd8>
   1e410:	mov	r4, #0
   1e414:	b	1e634 <myhtml_insertion_mode_in_table@@Base+0x26c>
   1e418:	cmp	r6, #65	; 0x41
   1e41c:	b	1e40c <myhtml_insertion_mode_in_table@@Base+0x44>
   1e420:	cmp	r6, #128	; 0x80
   1e424:	beq	1e534 <myhtml_insertion_mode_in_table@@Base+0x16c>
   1e428:	bcc	1e410 <myhtml_insertion_mode_in_table@@Base+0x48>
   1e42c:	cmp	r6, #130	; 0x82
   1e430:	bcc	1e4a0 <myhtml_insertion_mode_in_table@@Base+0xd8>
   1e434:	cmp	r6, #132	; 0x84
   1e438:	bls	1e410 <myhtml_insertion_mode_in_table@@Base+0x48>
   1e43c:	cmp	r6, #135	; 0x87
   1e440:	b	1e40c <myhtml_insertion_mode_in_table@@Base+0x44>
   1e444:	mov	r1, r6
   1e448:	mov	r3, #64	; 0x40
   1e44c:	mov	r2, #1
   1e450:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1e454:	subs	r1, r0, #0
   1e458:	beq	1e410 <myhtml_insertion_mode_in_table@@Base+0x48>
   1e45c:	mov	r0, r5
   1e460:	mov	r2, #0
   1e464:	bl	100dc <myhtml_tree_open_elements_pop_until_by_node@plt>
   1e468:	mov	r0, r5
   1e46c:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   1e470:	b	1e410 <myhtml_insertion_mode_in_table@@Base+0x48>
   1e474:	cmp	r6, #120	; 0x78
   1e478:	beq	1e534 <myhtml_insertion_mode_in_table@@Base+0x16c>
   1e47c:	bhi	1e548 <myhtml_insertion_mode_in_table@@Base+0x180>
   1e480:	cmp	r6, #31
   1e484:	beq	1e640 <myhtml_insertion_mode_in_table@@Base+0x278>
   1e488:	bhi	1e4f8 <myhtml_insertion_mode_in_table@@Base+0x130>
   1e48c:	cmp	r6, #2
   1e490:	beq	1e62c <myhtml_insertion_mode_in_table@@Base+0x264>
   1e494:	bhi	1e4c0 <myhtml_insertion_mode_in_table@@Base+0xf8>
   1e498:	cmp	r6, #1
   1e49c:	beq	1e5e0 <myhtml_insertion_mode_in_table@@Base+0x218>
   1e4a0:	mov	r3, #1
   1e4a4:	mov	r1, r7
   1e4a8:	mov	r0, r5
   1e4ac:	strb	r3, [r5, #188]	; 0xbc
   1e4b0:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   1e4b4:	mov	r0, #0
   1e4b8:	strb	r0, [r5, #188]	; 0xbc
   1e4bc:	b	1e410 <myhtml_insertion_mode_in_table@@Base+0x48>
   1e4c0:	cmp	r6, #3
   1e4c4:	beq	1e634 <myhtml_insertion_mode_in_table@@Base+0x26c>
   1e4c8:	cmp	r6, #27
   1e4cc:	bne	1e4a0 <myhtml_insertion_mode_in_table@@Base+0xd8>
   1e4d0:	bl	10f64 <myhtml_tree_clear_stack_back_table_context@plt>
   1e4d4:	mov	r1, r7
   1e4d8:	mov	r0, r5
   1e4dc:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1e4e0:	ldr	r3, [r5]
   1e4e4:	mov	r0, r5
   1e4e8:	ldr	r1, [r3, #36]	; 0x24
   1e4ec:	bl	10070 <myhtml_tree_active_formatting_append@plt>
   1e4f0:	mov	r3, #10
   1e4f4:	b	1e624 <myhtml_insertion_mode_in_table@@Base+0x25c>
   1e4f8:	cmp	r6, #52	; 0x34
   1e4fc:	beq	1e704 <myhtml_insertion_mode_in_table@@Base+0x33c>
   1e500:	bhi	1e524 <myhtml_insertion_mode_in_table@@Base+0x15c>
   1e504:	cmp	r6, #32
   1e508:	bne	1e4a0 <myhtml_insertion_mode_in_table@@Base+0xd8>
   1e50c:	bl	10f64 <myhtml_tree_clear_stack_back_table_context@plt>
   1e510:	mov	r1, r7
   1e514:	mov	r0, r5
   1e518:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1e51c:	mov	r3, #11
   1e520:	b	1e624 <myhtml_insertion_mode_in_table@@Base+0x25c>
   1e524:	cmp	r6, #70	; 0x46
   1e528:	beq	1e6a4 <myhtml_insertion_mode_in_table@@Base+0x2dc>
   1e52c:	cmp	r6, #112	; 0x70
   1e530:	bne	1e4a0 <myhtml_insertion_mode_in_table@@Base+0xd8>
   1e534:	mov	r1, r7
   1e538:	mov	r0, r5
   1e53c:	add	sp, sp, #12
   1e540:	pop	{r4, r5, r6, r7, lr}
   1e544:	b	fff8 <myhtml_insertion_mode_in_head@plt>
   1e548:	cmp	r6, #130	; 0x82
   1e54c:	beq	1e664 <myhtml_insertion_mode_in_table@@Base+0x29c>
   1e550:	bhi	1e5b0 <myhtml_insertion_mode_in_table@@Base+0x1e8>
   1e554:	cmp	r6, #126	; 0x7e
   1e558:	beq	1e664 <myhtml_insertion_mode_in_table@@Base+0x29c>
   1e55c:	bhi	1e5a0 <myhtml_insertion_mode_in_table@@Base+0x1d8>
   1e560:	cmp	r6, #125	; 0x7d
   1e564:	bne	1e4a0 <myhtml_insertion_mode_in_table@@Base+0xd8>
   1e568:	mov	r3, #64	; 0x40
   1e56c:	mov	r2, #1
   1e570:	mov	r1, r6
   1e574:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1e578:	cmp	r0, #0
   1e57c:	beq	1e410 <myhtml_insertion_mode_in_table@@Base+0x48>
   1e580:	mov	r0, r5
   1e584:	mov	r3, r4
   1e588:	mov	r2, #1
   1e58c:	mov	r1, r6
   1e590:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   1e594:	mov	r0, r5
   1e598:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   1e59c:	b	1e65c <myhtml_insertion_mode_in_table@@Base+0x294>
   1e5a0:	cmp	r6, #127	; 0x7f
   1e5a4:	beq	1e684 <myhtml_insertion_mode_in_table@@Base+0x2bc>
   1e5a8:	cmp	r6, #128	; 0x80
   1e5ac:	b	1e530 <myhtml_insertion_mode_in_table@@Base+0x168>
   1e5b0:	cmp	r6, #132	; 0x84
   1e5b4:	beq	1e664 <myhtml_insertion_mode_in_table@@Base+0x29c>
   1e5b8:	bcc	1e684 <myhtml_insertion_mode_in_table@@Base+0x2bc>
   1e5bc:	cmp	r6, #135	; 0x87
   1e5c0:	beq	1e684 <myhtml_insertion_mode_in_table@@Base+0x2bc>
   1e5c4:	cmp	r6, #251	; 0xfb
   1e5c8:	bne	1e4a0 <myhtml_insertion_mode_in_table@@Base+0xd8>
   1e5cc:	mov	r1, r7
   1e5d0:	mov	r0, r5
   1e5d4:	add	sp, sp, #12
   1e5d8:	pop	{r4, r5, r6, r7, lr}
   1e5dc:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   1e5e0:	bl	105bc <myhtml_tree_current_node@plt>
   1e5e4:	ldr	r3, [r0, #4]
   1e5e8:	sub	r3, r3, #125	; 0x7d
   1e5ec:	cmp	r3, #10
   1e5f0:	bhi	1e4a0 <myhtml_insertion_mode_in_table@@Base+0xd8>
   1e5f4:	movw	r2, #1187	; 0x4a3
   1e5f8:	mvn	r3, r2, lsr r3
   1e5fc:	tst	r3, #1
   1e600:	bne	1e4a0 <myhtml_insertion_mode_in_table@@Base+0xd8>
   1e604:	ldr	r4, [r0, #8]
   1e608:	cmp	r4, #1
   1e60c:	bne	1e4a0 <myhtml_insertion_mode_in_table@@Base+0xd8>
   1e610:	ldr	r0, [r5, #136]	; 0x88
   1e614:	bl	10f7c <myhtml_tree_token_list_clean@plt>
   1e618:	ldr	r3, [r5, #168]	; 0xa8
   1e61c:	str	r3, [r5, #172]	; 0xac
   1e620:	mov	r3, #9
   1e624:	str	r3, [r5, #168]	; 0xa8
   1e628:	b	1e634 <myhtml_insertion_mode_in_table@@Base+0x26c>
   1e62c:	mov	r2, r4
   1e630:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   1e634:	mov	r0, r4
   1e638:	add	sp, sp, #12
   1e63c:	pop	{r4, r5, r6, r7, pc}
   1e640:	bl	10f64 <myhtml_tree_clear_stack_back_table_context@plt>
   1e644:	mov	r2, #1
   1e648:	mov	r1, #32
   1e64c:	mov	r0, r5
   1e650:	bl	10904 <myhtml_tree_node_insert@plt>
   1e654:	mov	r3, #11
   1e658:	str	r3, [r5, #168]	; 0xa8
   1e65c:	mov	r4, #1
   1e660:	b	1e634 <myhtml_insertion_mode_in_table@@Base+0x26c>
   1e664:	mov	r0, r5
   1e668:	bl	10f64 <myhtml_tree_clear_stack_back_table_context@plt>
   1e66c:	mov	r1, r7
   1e670:	mov	r0, r5
   1e674:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1e678:	mov	r3, #12
   1e67c:	str	r3, [r5, #168]	; 0xa8
   1e680:	b	1e410 <myhtml_insertion_mode_in_table@@Base+0x48>
   1e684:	mov	r0, r5
   1e688:	bl	10f64 <myhtml_tree_clear_stack_back_table_context@plt>
   1e68c:	mov	r2, #1
   1e690:	mov	r1, #126	; 0x7e
   1e694:	mov	r0, r5
   1e698:	bl	10904 <myhtml_tree_node_insert@plt>
   1e69c:	mov	r3, #12
   1e6a0:	b	1e658 <myhtml_insertion_mode_in_table@@Base+0x290>
   1e6a4:	ldr	r0, [r0, #8]
   1e6a8:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1e6ac:	mov	r3, #6
   1e6b0:	ldr	r0, [r5, #8]
   1e6b4:	mov	r1, r7
   1e6b8:	str	r3, [sp, #4]
   1e6bc:	ldr	r3, [pc, #120]	; 1e73c <myhtml_insertion_mode_in_table@@Base+0x374>
   1e6c0:	ldr	r2, [pc, #120]	; 1e740 <myhtml_insertion_mode_in_table@@Base+0x378>
   1e6c4:	add	r3, pc, r3
   1e6c8:	add	r2, pc, r2
   1e6cc:	str	r3, [sp]
   1e6d0:	mov	r3, #4
   1e6d4:	bl	fcd4 <myhtml_token_attr_match_case@plt>
   1e6d8:	cmp	r0, #0
   1e6dc:	beq	1e4a0 <myhtml_insertion_mode_in_table@@Base+0xd8>
   1e6e0:	mov	r1, r7
   1e6e4:	mov	r0, r5
   1e6e8:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1e6ec:	mov	r0, r5
   1e6f0:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1e6f4:	ldr	r3, [r7, #48]	; 0x30
   1e6f8:	orr	r3, r3, #2
   1e6fc:	str	r3, [r7, #48]	; 0x30
   1e700:	b	1e634 <myhtml_insertion_mode_in_table@@Base+0x26c>
   1e704:	mov	r3, r4
   1e708:	mov	r2, #1
   1e70c:	mov	r1, #128	; 0x80
   1e710:	bl	10790 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1e714:	ldr	r3, [r5, #104]	; 0x68
   1e718:	orrs	r3, r3, r0
   1e71c:	bne	1e410 <myhtml_insertion_mode_in_table@@Base+0x48>
   1e720:	mov	r1, r7
   1e724:	mov	r0, r5
   1e728:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1e72c:	str	r0, [r5, #104]	; 0x68
   1e730:	mov	r0, r5
   1e734:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1e738:	b	1e5cc <myhtml_insertion_mode_in_table@@Base+0x204>
   1e73c:	andeq	r7, sp, r2, ror lr
   1e740:	strdeq	r4, [r1], -r3

0001e744 <myhtml_insertion_mode_in_table_body@@Base>:
   1e744:	ldr	r3, [r1, #48]	; 0x30
   1e748:	push	{r4, r5, r6, lr}
   1e74c:	mov	r6, r1
   1e750:	mov	r5, r0
   1e754:	ldr	r1, [r1]
   1e758:	ands	r4, r3, #1
   1e75c:	beq	1e810 <myhtml_insertion_mode_in_table_body@@Base+0xcc>
   1e760:	cmp	r1, #125	; 0x7d
   1e764:	beq	1e834 <myhtml_insertion_mode_in_table_body@@Base+0xf0>
   1e768:	bhi	1e79c <myhtml_insertion_mode_in_table_body@@Base+0x58>
   1e76c:	cmp	r1, #32
   1e770:	bhi	1e794 <myhtml_insertion_mode_in_table_body@@Base+0x50>
   1e774:	cmp	r1, #31
   1e778:	bcs	1e78c <myhtml_insertion_mode_in_table_body@@Base+0x48>
   1e77c:	cmp	r1, #23
   1e780:	beq	1e78c <myhtml_insertion_mode_in_table_body@@Base+0x48>
   1e784:	cmp	r1, #27
   1e788:	bne	1e800 <myhtml_insertion_mode_in_table_body@@Base+0xbc>
   1e78c:	mov	r0, #0
   1e790:	pop	{r4, r5, r6, pc}
   1e794:	cmp	r1, #65	; 0x41
   1e798:	b	1e788 <myhtml_insertion_mode_in_table_body@@Base+0x44>
   1e79c:	cmp	r1, #130	; 0x82
   1e7a0:	beq	1e7cc <myhtml_insertion_mode_in_table_body@@Base+0x88>
   1e7a4:	bhi	1e7b8 <myhtml_insertion_mode_in_table_body@@Base+0x74>
   1e7a8:	cmp	r1, #126	; 0x7e
   1e7ac:	beq	1e7cc <myhtml_insertion_mode_in_table_body@@Base+0x88>
   1e7b0:	cmp	r1, #127	; 0x7f
   1e7b4:	b	1e788 <myhtml_insertion_mode_in_table_body@@Base+0x44>
   1e7b8:	cmp	r1, #132	; 0x84
   1e7bc:	beq	1e7cc <myhtml_insertion_mode_in_table_body@@Base+0x88>
   1e7c0:	bcc	1e78c <myhtml_insertion_mode_in_table_body@@Base+0x48>
   1e7c4:	cmp	r1, #135	; 0x87
   1e7c8:	b	1e788 <myhtml_insertion_mode_in_table_body@@Base+0x44>
   1e7cc:	mov	r3, #64	; 0x40
   1e7d0:	mov	r2, #1
   1e7d4:	mov	r0, r5
   1e7d8:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1e7dc:	cmp	r0, #0
   1e7e0:	beq	1e78c <myhtml_insertion_mode_in_table_body@@Base+0x48>
   1e7e4:	mov	r0, r5
   1e7e8:	bl	10328 <myhtml_tree_clear_stack_back_table_body_context@plt>
   1e7ec:	mov	r0, r5
   1e7f0:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1e7f4:	mov	r3, #8
   1e7f8:	str	r3, [r5, #168]	; 0xa8
   1e7fc:	b	1e78c <myhtml_insertion_mode_in_table_body@@Base+0x48>
   1e800:	mov	r1, r6
   1e804:	mov	r0, r5
   1e808:	pop	{r4, r5, r6, lr}
   1e80c:	b	10118 <myhtml_insertion_mode_in_table@plt>
   1e810:	cmp	r1, #127	; 0x7f
   1e814:	beq	1e8e8 <myhtml_insertion_mode_in_table_body@@Base+0x1a4>
   1e818:	bhi	1e8ac <myhtml_insertion_mode_in_table_body@@Base+0x168>
   1e81c:	cmp	r1, #32
   1e820:	bhi	1e8a4 <myhtml_insertion_mode_in_table_body@@Base+0x160>
   1e824:	cmp	r1, #31
   1e828:	bcs	1e834 <myhtml_insertion_mode_in_table_body@@Base+0xf0>
   1e82c:	cmp	r1, #27
   1e830:	bne	1e800 <myhtml_insertion_mode_in_table_body@@Base+0xbc>
   1e834:	mov	r3, #64	; 0x40
   1e838:	mov	r2, #1
   1e83c:	mov	r1, #126	; 0x7e
   1e840:	mov	r0, r5
   1e844:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1e848:	mov	r4, r0
   1e84c:	mov	r3, #64	; 0x40
   1e850:	mov	r2, #1
   1e854:	mov	r1, #130	; 0x82
   1e858:	mov	r0, r5
   1e85c:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1e860:	mov	r6, r0
   1e864:	mov	r3, #64	; 0x40
   1e868:	mov	r2, #1
   1e86c:	mov	r1, #132	; 0x84
   1e870:	mov	r0, r5
   1e874:	orr	r4, r4, r6
   1e878:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1e87c:	orrs	r3, r0, r4
   1e880:	beq	1e78c <myhtml_insertion_mode_in_table_body@@Base+0x48>
   1e884:	mov	r0, r5
   1e888:	bl	10328 <myhtml_tree_clear_stack_back_table_body_context@plt>
   1e88c:	mov	r0, r5
   1e890:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1e894:	mov	r3, #8
   1e898:	mov	r0, #1
   1e89c:	str	r3, [r5, #168]	; 0xa8
   1e8a0:	pop	{r4, r5, r6, pc}
   1e8a4:	cmp	r1, #126	; 0x7e
   1e8a8:	b	1e830 <myhtml_insertion_mode_in_table_body@@Base+0xec>
   1e8ac:	cmp	r1, #131	; 0x83
   1e8b0:	beq	1e8e8 <myhtml_insertion_mode_in_table_body@@Base+0x1a4>
   1e8b4:	bhi	1e8c0 <myhtml_insertion_mode_in_table_body@@Base+0x17c>
   1e8b8:	cmp	r1, #130	; 0x82
   1e8bc:	b	1e830 <myhtml_insertion_mode_in_table_body@@Base+0xec>
   1e8c0:	cmp	r1, #132	; 0x84
   1e8c4:	beq	1e834 <myhtml_insertion_mode_in_table_body@@Base+0xf0>
   1e8c8:	cmp	r1, #135	; 0x87
   1e8cc:	bne	1e800 <myhtml_insertion_mode_in_table_body@@Base+0xbc>
   1e8d0:	bl	10328 <myhtml_tree_clear_stack_back_table_body_context@plt>
   1e8d4:	mov	r1, r6
   1e8d8:	mov	r0, r5
   1e8dc:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1e8e0:	mov	r3, #13
   1e8e4:	b	1e7f8 <myhtml_insertion_mode_in_table_body@@Base+0xb4>
   1e8e8:	mov	r0, r5
   1e8ec:	bl	10328 <myhtml_tree_clear_stack_back_table_body_context@plt>
   1e8f0:	mov	r2, #1
   1e8f4:	mov	r1, #135	; 0x87
   1e8f8:	mov	r0, r5
   1e8fc:	bl	10904 <myhtml_tree_node_insert@plt>
   1e900:	mov	r3, #13
   1e904:	b	1e898 <myhtml_insertion_mode_in_table_body@@Base+0x154>

0001e908 <myhtml_insertion_mode_in_row@@Base>:
   1e908:	ldr	r3, [r1, #48]	; 0x30
   1e90c:	push	{r4, r5, r6, lr}
   1e910:	mov	r5, r1
   1e914:	mov	r4, r0
   1e918:	ldr	r1, [r1]
   1e91c:	tst	r3, #1
   1e920:	beq	1ea14 <myhtml_insertion_mode_in_row@@Base+0x10c>
   1e924:	cmp	r1, #125	; 0x7d
   1e928:	beq	1e9d8 <myhtml_insertion_mode_in_row@@Base+0xd0>
   1e92c:	bhi	1e960 <myhtml_insertion_mode_in_row@@Base+0x58>
   1e930:	cmp	r1, #32
   1e934:	bhi	1e958 <myhtml_insertion_mode_in_row@@Base+0x50>
   1e938:	cmp	r1, #31
   1e93c:	bcs	1e950 <myhtml_insertion_mode_in_row@@Base+0x48>
   1e940:	cmp	r1, #23
   1e944:	beq	1e950 <myhtml_insertion_mode_in_row@@Base+0x48>
   1e948:	cmp	r1, #27
   1e94c:	bne	1ea38 <myhtml_insertion_mode_in_row@@Base+0x130>
   1e950:	mov	r0, #0
   1e954:	pop	{r4, r5, r6, pc}
   1e958:	cmp	r1, #65	; 0x41
   1e95c:	b	1e94c <myhtml_insertion_mode_in_row@@Base+0x44>
   1e960:	cmp	r1, #130	; 0x82
   1e964:	beq	1e9c0 <myhtml_insertion_mode_in_row@@Base+0xb8>
   1e968:	bhi	1e97c <myhtml_insertion_mode_in_row@@Base+0x74>
   1e96c:	cmp	r1, #126	; 0x7e
   1e970:	beq	1e9c0 <myhtml_insertion_mode_in_row@@Base+0xb8>
   1e974:	cmp	r1, #127	; 0x7f
   1e978:	b	1e94c <myhtml_insertion_mode_in_row@@Base+0x44>
   1e97c:	cmp	r1, #132	; 0x84
   1e980:	beq	1e9c0 <myhtml_insertion_mode_in_row@@Base+0xb8>
   1e984:	bcc	1e950 <myhtml_insertion_mode_in_row@@Base+0x48>
   1e988:	cmp	r1, #135	; 0x87
   1e98c:	bne	1ea38 <myhtml_insertion_mode_in_row@@Base+0x130>
   1e990:	mov	r3, #64	; 0x40
   1e994:	mov	r2, #1
   1e998:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1e99c:	cmp	r0, #0
   1e9a0:	beq	1e950 <myhtml_insertion_mode_in_row@@Base+0x48>
   1e9a4:	mov	r0, r4
   1e9a8:	bl	103ac <myhtml_tree_clear_stack_back_table_row_context@plt>
   1e9ac:	mov	r0, r4
   1e9b0:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1e9b4:	mov	r3, #12
   1e9b8:	str	r3, [r4, #168]	; 0xa8
   1e9bc:	b	1e950 <myhtml_insertion_mode_in_row@@Base+0x48>
   1e9c0:	mov	r3, #64	; 0x40
   1e9c4:	mov	r2, #1
   1e9c8:	mov	r0, r4
   1e9cc:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1e9d0:	cmp	r0, #0
   1e9d4:	beq	1e950 <myhtml_insertion_mode_in_row@@Base+0x48>
   1e9d8:	mov	r3, #64	; 0x40
   1e9dc:	mov	r2, #1
   1e9e0:	mov	r1, #135	; 0x87
   1e9e4:	mov	r0, r4
   1e9e8:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1e9ec:	cmp	r0, #0
   1e9f0:	beq	1e950 <myhtml_insertion_mode_in_row@@Base+0x48>
   1e9f4:	mov	r0, r4
   1e9f8:	bl	103ac <myhtml_tree_clear_stack_back_table_row_context@plt>
   1e9fc:	mov	r0, r4
   1ea00:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1ea04:	mov	r3, #12
   1ea08:	mov	r0, #1
   1ea0c:	str	r3, [r4, #168]	; 0xa8
   1ea10:	pop	{r4, r5, r6, pc}
   1ea14:	cmp	r1, #127	; 0x7f
   1ea18:	beq	1ea74 <myhtml_insertion_mode_in_row@@Base+0x16c>
   1ea1c:	bhi	1ea50 <myhtml_insertion_mode_in_row@@Base+0x148>
   1ea20:	cmp	r1, #32
   1ea24:	bhi	1ea48 <myhtml_insertion_mode_in_row@@Base+0x140>
   1ea28:	cmp	r1, #31
   1ea2c:	bcs	1e9d8 <myhtml_insertion_mode_in_row@@Base+0xd0>
   1ea30:	cmp	r1, #27
   1ea34:	beq	1e9d8 <myhtml_insertion_mode_in_row@@Base+0xd0>
   1ea38:	mov	r1, r5
   1ea3c:	mov	r0, r4
   1ea40:	pop	{r4, r5, r6, lr}
   1ea44:	b	10118 <myhtml_insertion_mode_in_table@plt>
   1ea48:	cmp	r1, #126	; 0x7e
   1ea4c:	b	1ea34 <myhtml_insertion_mode_in_row@@Base+0x12c>
   1ea50:	cmp	r1, #131	; 0x83
   1ea54:	beq	1ea74 <myhtml_insertion_mode_in_row@@Base+0x16c>
   1ea58:	bhi	1ea64 <myhtml_insertion_mode_in_row@@Base+0x15c>
   1ea5c:	cmp	r1, #130	; 0x82
   1ea60:	b	1ea34 <myhtml_insertion_mode_in_row@@Base+0x12c>
   1ea64:	cmp	r1, #132	; 0x84
   1ea68:	beq	1e9d8 <myhtml_insertion_mode_in_row@@Base+0xd0>
   1ea6c:	cmp	r1, #135	; 0x87
   1ea70:	b	1ea34 <myhtml_insertion_mode_in_row@@Base+0x12c>
   1ea74:	mov	r0, r4
   1ea78:	bl	103ac <myhtml_tree_clear_stack_back_table_row_context@plt>
   1ea7c:	mov	r1, r5
   1ea80:	mov	r0, r4
   1ea84:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1ea88:	ldr	r3, [r4]
   1ea8c:	mov	r0, r4
   1ea90:	ldr	r1, [r3, #36]	; 0x24
   1ea94:	bl	10070 <myhtml_tree_active_formatting_append@plt>
   1ea98:	mov	r3, #14
   1ea9c:	b	1e9b8 <myhtml_insertion_mode_in_row@@Base+0xb0>

0001eaa0 <myhtml_insertion_mode_in_table_text@@Base>:
   1eaa0:	ldr	r3, [r1]
   1eaa4:	push	{r4, r5, r6, r7, r8, lr}
   1eaa8:	mov	r5, r0
   1eaac:	cmp	r3, #1
   1eab0:	bne	1eae8 <myhtml_insertion_mode_in_table_text@@Base+0x48>
   1eab4:	ldr	r3, [r1, #48]	; 0x30
   1eab8:	mov	r6, r1
   1eabc:	ands	r4, r3, #2048	; 0x800
   1eac0:	beq	1ead8 <myhtml_insertion_mode_in_table_text@@Base+0x38>
   1eac4:	bl	10760 <myhtml_insertion_fix_for_null_char_drop_all@plt>
   1eac8:	ldr	r0, [r6, #12]
   1eacc:	cmp	r0, #0
   1ead0:	popeq	{r4, r5, r6, r7, r8, pc}
   1ead4:	mov	r1, r6
   1ead8:	ldr	r0, [r5, #136]	; 0x88
   1eadc:	bl	10e5c <myhtml_tree_token_list_append@plt>
   1eae0:	mov	r0, #0
   1eae4:	pop	{r4, r5, r6, r7, r8, pc}
   1eae8:	ldr	r6, [r0, #136]	; 0x88
   1eaec:	mov	r3, #0
   1eaf0:	ldr	r2, [r6, #4]
   1eaf4:	cmp	r3, r2
   1eaf8:	bne	1eb24 <myhtml_insertion_mode_in_table_text@@Base+0x84>
   1eafc:	mov	r4, #0
   1eb00:	ldr	r3, [r6, #4]
   1eb04:	cmp	r4, r3
   1eb08:	bcs	1eb4c <myhtml_insertion_mode_in_table_text@@Base+0xac>
   1eb0c:	ldr	r3, [r6]
   1eb10:	mov	r0, r5
   1eb14:	ldr	r1, [r3, r4, lsl #2]
   1eb18:	add	r4, r4, #1
   1eb1c:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   1eb20:	b	1eb00 <myhtml_insertion_mode_in_table_text@@Base+0x60>
   1eb24:	ldr	r1, [r6]
   1eb28:	ldr	r1, [r1, r3, lsl #2]
   1eb2c:	ldr	r4, [r1, #48]	; 0x30
   1eb30:	ands	r4, r4, #8
   1eb34:	bne	1eb5c <myhtml_insertion_mode_in_table_text@@Base+0xbc>
   1eb38:	mov	r7, #1
   1eb3c:	mov	r8, r4
   1eb40:	ldr	r3, [r6, #4]
   1eb44:	cmp	r4, r3
   1eb48:	bcc	1eb64 <myhtml_insertion_mode_in_table_text@@Base+0xc4>
   1eb4c:	ldr	r3, [r5, #172]	; 0xac
   1eb50:	mov	r0, #1
   1eb54:	str	r3, [r5, #168]	; 0xa8
   1eb58:	pop	{r4, r5, r6, r7, r8, pc}
   1eb5c:	add	r3, r3, #1
   1eb60:	b	1eaf4 <myhtml_insertion_mode_in_table_text@@Base+0x54>
   1eb64:	ldr	r3, [r6]
   1eb68:	mov	r0, r5
   1eb6c:	ldr	r1, [r3, r4, lsl #2]
   1eb70:	add	r4, r4, #1
   1eb74:	strb	r7, [r5, #188]	; 0xbc
   1eb78:	bl	105d4 <myhtml_insertion_mode_in_body@plt>
   1eb7c:	strb	r8, [r5, #188]	; 0xbc
   1eb80:	b	1eb40 <myhtml_insertion_mode_in_table_text@@Base+0xa0>

0001eb84 <myhtml_insertion_mode_in_caption@@Base>:
   1eb84:	ldr	r3, [r1, #48]	; 0x30
   1eb88:	push	{r4, r5, r6, lr}
   1eb8c:	mov	r5, r0
   1eb90:	ldr	r4, [r1]
   1eb94:	tst	r3, #1
   1eb98:	beq	1eccc <myhtml_insertion_mode_in_caption@@Base+0x148>
   1eb9c:	cmp	r4, #125	; 0x7d
   1eba0:	beq	1ec68 <myhtml_insertion_mode_in_caption@@Base+0xe4>
   1eba4:	bhi	1ebe0 <myhtml_insertion_mode_in_caption@@Base+0x5c>
   1eba8:	cmp	r4, #32
   1ebac:	bhi	1ebd4 <myhtml_insertion_mode_in_caption@@Base+0x50>
   1ebb0:	cmp	r4, #31
   1ebb4:	bcs	1ebf8 <myhtml_insertion_mode_in_caption@@Base+0x74>
   1ebb8:	cmp	r4, #23
   1ebbc:	beq	1ebf8 <myhtml_insertion_mode_in_caption@@Base+0x74>
   1ebc0:	cmp	r4, #27
   1ebc4:	beq	1ec08 <myhtml_insertion_mode_in_caption@@Base+0x84>
   1ebc8:	mov	r0, r5
   1ebcc:	pop	{r4, r5, r6, lr}
   1ebd0:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   1ebd4:	cmp	r4, #65	; 0x41
   1ebd8:	bne	1ebc8 <myhtml_insertion_mode_in_caption@@Base+0x44>
   1ebdc:	b	1ebf8 <myhtml_insertion_mode_in_caption@@Base+0x74>
   1ebe0:	cmp	r4, #132	; 0x84
   1ebe4:	bhi	1ec00 <myhtml_insertion_mode_in_caption@@Base+0x7c>
   1ebe8:	cmp	r4, #130	; 0x82
   1ebec:	bcs	1ebf8 <myhtml_insertion_mode_in_caption@@Base+0x74>
   1ebf0:	cmp	r4, #127	; 0x7f
   1ebf4:	bhi	1ebc8 <myhtml_insertion_mode_in_caption@@Base+0x44>
   1ebf8:	mov	r0, #0
   1ebfc:	pop	{r4, r5, r6, pc}
   1ec00:	cmp	r4, #135	; 0x87
   1ec04:	b	1ebd8 <myhtml_insertion_mode_in_caption@@Base+0x54>
   1ec08:	mov	r3, #64	; 0x40
   1ec0c:	mov	r2, #1
   1ec10:	mov	r1, r4
   1ec14:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1ec18:	cmp	r0, #0
   1ec1c:	beq	1ebf8 <myhtml_insertion_mode_in_caption@@Base+0x74>
   1ec20:	mov	r2, #0
   1ec24:	mov	r0, r5
   1ec28:	mov	r1, r2
   1ec2c:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   1ec30:	mov	r0, r5
   1ec34:	bl	105bc <myhtml_tree_current_node@plt>
   1ec38:	mov	r1, r4
   1ec3c:	bl	10a3c <myhtml_is_html_node@plt>
   1ec40:	mov	r3, #0
   1ec44:	mov	r2, #1
   1ec48:	mov	r1, r4
   1ec4c:	mov	r0, r5
   1ec50:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   1ec54:	mov	r0, r5
   1ec58:	bl	10df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   1ec5c:	mov	r3, #8
   1ec60:	str	r3, [r5, #168]	; 0xa8
   1ec64:	b	1ebf8 <myhtml_insertion_mode_in_caption@@Base+0x74>
   1ec68:	mov	r3, #64	; 0x40
   1ec6c:	mov	r2, #1
   1ec70:	mov	r1, #27
   1ec74:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1ec78:	cmp	r0, #0
   1ec7c:	beq	1ebf8 <myhtml_insertion_mode_in_caption@@Base+0x74>
   1ec80:	mov	r2, #0
   1ec84:	mov	r0, r5
   1ec88:	mov	r1, r2
   1ec8c:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   1ec90:	mov	r0, r5
   1ec94:	bl	105bc <myhtml_tree_current_node@plt>
   1ec98:	mov	r1, #27
   1ec9c:	bl	10a3c <myhtml_is_html_node@plt>
   1eca0:	mov	r3, #0
   1eca4:	mov	r2, #1
   1eca8:	mov	r1, #27
   1ecac:	mov	r0, r5
   1ecb0:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   1ecb4:	mov	r0, r5
   1ecb8:	bl	10df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   1ecbc:	mov	r3, #8
   1ecc0:	mov	r0, #1
   1ecc4:	str	r3, [r5, #168]	; 0xa8
   1ecc8:	pop	{r4, r5, r6, pc}
   1eccc:	cmp	r4, #127	; 0x7f
   1ecd0:	bhi	1ed08 <myhtml_insertion_mode_in_caption@@Base+0x184>
   1ecd4:	cmp	r4, #126	; 0x7e
   1ecd8:	bcs	1ecf4 <myhtml_insertion_mode_in_caption@@Base+0x170>
   1ecdc:	cmp	r4, #27
   1ece0:	beq	1ecf4 <myhtml_insertion_mode_in_caption@@Base+0x170>
   1ece4:	bcc	1ebc8 <myhtml_insertion_mode_in_caption@@Base+0x44>
   1ece8:	sub	r4, r4, #31
   1ecec:	cmp	r4, #1
   1ecf0:	bhi	1ebc8 <myhtml_insertion_mode_in_caption@@Base+0x44>
   1ecf4:	mov	r3, #64	; 0x40
   1ecf8:	mov	r2, #1
   1ecfc:	mov	r1, #27
   1ed00:	mov	r0, r5
   1ed04:	b	1ec74 <myhtml_insertion_mode_in_caption@@Base+0xf0>
   1ed08:	cmp	r4, #130	; 0x82
   1ed0c:	bcc	1ebc8 <myhtml_insertion_mode_in_caption@@Base+0x44>
   1ed10:	cmp	r4, #132	; 0x84
   1ed14:	bls	1ecf4 <myhtml_insertion_mode_in_caption@@Base+0x170>
   1ed18:	cmp	r4, #135	; 0x87
   1ed1c:	beq	1ecf4 <myhtml_insertion_mode_in_caption@@Base+0x170>
   1ed20:	b	1ebc8 <myhtml_insertion_mode_in_caption@@Base+0x44>

0001ed24 <myhtml_insertion_mode_in_column_group@@Base>:
   1ed24:	push	{r4, r5, r6, lr}
   1ed28:	mov	r3, r1
   1ed2c:	mov	r6, r0
   1ed30:	ldr	r5, [r1]
   1ed34:	ldr	r4, [r1, #48]	; 0x30
   1ed38:	ands	r4, r4, #1
   1ed3c:	beq	1eda0 <myhtml_insertion_mode_in_column_group@@Base+0x7c>
   1ed40:	cmp	r5, #32
   1ed44:	beq	1ed60 <myhtml_insertion_mode_in_column_group@@Base+0x3c>
   1ed48:	cmp	r5, #128	; 0x80
   1ed4c:	beq	1ed90 <myhtml_insertion_mode_in_column_group@@Base+0x6c>
   1ed50:	cmp	r5, #31
   1ed54:	bne	1ee18 <myhtml_insertion_mode_in_column_group@@Base+0xf4>
   1ed58:	mov	r4, #0
   1ed5c:	b	1ee48 <myhtml_insertion_mode_in_column_group@@Base+0x124>
   1ed60:	bl	105bc <myhtml_tree_current_node@plt>
   1ed64:	cmp	r0, #0
   1ed68:	beq	1ed58 <myhtml_insertion_mode_in_column_group@@Base+0x34>
   1ed6c:	mov	r1, r5
   1ed70:	bl	10a3c <myhtml_is_html_node@plt>
   1ed74:	cmp	r0, #0
   1ed78:	beq	1ed58 <myhtml_insertion_mode_in_column_group@@Base+0x34>
   1ed7c:	mov	r0, r6
   1ed80:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1ed84:	mov	r3, #8
   1ed88:	str	r3, [r6, #168]	; 0xa8
   1ed8c:	b	1ed58 <myhtml_insertion_mode_in_column_group@@Base+0x34>
   1ed90:	mov	r0, r6
   1ed94:	mov	r1, r3
   1ed98:	pop	{r4, r5, r6, lr}
   1ed9c:	b	fff8 <myhtml_insertion_mode_in_head@plt>
   1eda0:	cmp	r5, #31
   1eda4:	beq	1ee5c <myhtml_insertion_mode_in_column_group@@Base+0x138>
   1eda8:	bhi	1edd8 <myhtml_insertion_mode_in_column_group@@Base+0xb4>
   1edac:	cmp	r5, #2
   1edb0:	beq	1ee50 <myhtml_insertion_mode_in_column_group@@Base+0x12c>
   1edb4:	cmp	r5, #3
   1edb8:	beq	1ee48 <myhtml_insertion_mode_in_column_group@@Base+0x124>
   1edbc:	cmp	r5, #1
   1edc0:	bne	1ee14 <myhtml_insertion_mode_in_column_group@@Base+0xf0>
   1edc4:	ldr	r3, [r1, #48]	; 0x30
   1edc8:	tst	r3, #8
   1edcc:	beq	1ee00 <myhtml_insertion_mode_in_column_group@@Base+0xdc>
   1edd0:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   1edd4:	b	1ee48 <myhtml_insertion_mode_in_column_group@@Base+0x124>
   1edd8:	cmp	r5, #128	; 0x80
   1eddc:	beq	1ed90 <myhtml_insertion_mode_in_column_group@@Base+0x6c>
   1ede0:	cmp	r5, #251	; 0xfb
   1ede4:	beq	1edf0 <myhtml_insertion_mode_in_column_group@@Base+0xcc>
   1ede8:	cmp	r5, #65	; 0x41
   1edec:	bne	1ee14 <myhtml_insertion_mode_in_column_group@@Base+0xf0>
   1edf0:	mov	r0, r6
   1edf4:	mov	r1, r3
   1edf8:	pop	{r4, r5, r6, lr}
   1edfc:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   1ee00:	bl	fe90 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   1ee04:	subs	r1, r0, #0
   1ee08:	beq	1ee14 <myhtml_insertion_mode_in_column_group@@Base+0xf0>
   1ee0c:	mov	r0, r6
   1ee10:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   1ee14:	mov	r0, r6
   1ee18:	bl	105bc <myhtml_tree_current_node@plt>
   1ee1c:	cmp	r0, #0
   1ee20:	beq	1ed58 <myhtml_insertion_mode_in_column_group@@Base+0x34>
   1ee24:	mov	r1, #32
   1ee28:	bl	10a3c <myhtml_is_html_node@plt>
   1ee2c:	cmp	r0, #0
   1ee30:	beq	1ed58 <myhtml_insertion_mode_in_column_group@@Base+0x34>
   1ee34:	mov	r0, r6
   1ee38:	mov	r4, #1
   1ee3c:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1ee40:	mov	r3, #8
   1ee44:	str	r3, [r6, #168]	; 0xa8
   1ee48:	mov	r0, r4
   1ee4c:	pop	{r4, r5, r6, pc}
   1ee50:	mov	r2, r4
   1ee54:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   1ee58:	b	1ee48 <myhtml_insertion_mode_in_column_group@@Base+0x124>
   1ee5c:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1ee60:	mov	r0, r6
   1ee64:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1ee68:	b	1ee48 <myhtml_insertion_mode_in_column_group@@Base+0x124>

0001ee6c <myhtml_insertion_mode_in_cell@@Base>:
   1ee6c:	ldr	r3, [r1, #48]	; 0x30
   1ee70:	push	{r4, r5, r6, lr}
   1ee74:	mov	r5, r1
   1ee78:	mov	r4, r0
   1ee7c:	ldr	r1, [r1]
   1ee80:	tst	r3, #1
   1ee84:	beq	1efcc <myhtml_insertion_mode_in_cell@@Base+0x160>
   1ee88:	cmp	r1, #126	; 0x7e
   1ee8c:	bhi	1eed0 <myhtml_insertion_mode_in_cell@@Base+0x64>
   1ee90:	cmp	r1, #125	; 0x7d
   1ee94:	bcs	1eeec <myhtml_insertion_mode_in_cell@@Base+0x80>
   1ee98:	cmp	r1, #32
   1ee9c:	bhi	1eec8 <myhtml_insertion_mode_in_cell@@Base+0x5c>
   1eea0:	cmp	r1, #31
   1eea4:	bcs	1ef58 <myhtml_insertion_mode_in_cell@@Base+0xec>
   1eea8:	cmp	r1, #23
   1eeac:	beq	1ef58 <myhtml_insertion_mode_in_cell@@Base+0xec>
   1eeb0:	cmp	r1, #27
   1eeb4:	beq	1ef58 <myhtml_insertion_mode_in_cell@@Base+0xec>
   1eeb8:	mov	r1, r5
   1eebc:	mov	r0, r4
   1eec0:	pop	{r4, r5, r6, lr}
   1eec4:	b	10118 <myhtml_insertion_mode_in_table@plt>
   1eec8:	cmp	r1, #65	; 0x41
   1eecc:	b	1eeb4 <myhtml_insertion_mode_in_cell@@Base+0x48>
   1eed0:	cmp	r1, #131	; 0x83
   1eed4:	beq	1ef40 <myhtml_insertion_mode_in_cell@@Base+0xd4>
   1eed8:	bhi	1ef30 <myhtml_insertion_mode_in_cell@@Base+0xc4>
   1eedc:	cmp	r1, #127	; 0x7f
   1eee0:	beq	1ef40 <myhtml_insertion_mode_in_cell@@Base+0xd4>
   1eee4:	cmp	r1, #130	; 0x82
   1eee8:	bne	1eeb8 <myhtml_insertion_mode_in_cell@@Base+0x4c>
   1eeec:	mov	r3, #64	; 0x40
   1eef0:	mov	r2, #1
   1eef4:	mov	r0, r4
   1eef8:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1eefc:	cmp	r0, #0
   1ef00:	beq	1ef58 <myhtml_insertion_mode_in_cell@@Base+0xec>
   1ef04:	mov	r1, #127	; 0x7f
   1ef08:	mov	r3, #64	; 0x40
   1ef0c:	mov	r2, #1
   1ef10:	mov	r0, r4
   1ef14:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1ef18:	subs	r1, r0, #0
   1ef1c:	beq	1efa8 <myhtml_insertion_mode_in_cell@@Base+0x13c>
   1ef20:	mov	r2, r5
   1ef24:	mov	r0, r4
   1ef28:	bl	10cd0 <myhtml_tree_close_cell@plt>
   1ef2c:	b	1efc4 <myhtml_insertion_mode_in_cell@@Base+0x158>
   1ef30:	cmp	r1, #132	; 0x84
   1ef34:	beq	1eeec <myhtml_insertion_mode_in_cell@@Base+0x80>
   1ef38:	cmp	r1, #135	; 0x87
   1ef3c:	b	1eee8 <myhtml_insertion_mode_in_cell@@Base+0x7c>
   1ef40:	mov	r3, #64	; 0x40
   1ef44:	mov	r2, #1
   1ef48:	mov	r0, r4
   1ef4c:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1ef50:	cmp	r0, #0
   1ef54:	bne	1ef60 <myhtml_insertion_mode_in_cell@@Base+0xf4>
   1ef58:	mov	r0, #0
   1ef5c:	pop	{r4, r5, r6, pc}
   1ef60:	mov	r2, #0
   1ef64:	mov	r0, r4
   1ef68:	mov	r1, r2
   1ef6c:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   1ef70:	mov	r0, r4
   1ef74:	bl	105bc <myhtml_tree_current_node@plt>
   1ef78:	ldr	r1, [r5]
   1ef7c:	bl	10a3c <myhtml_is_html_node@plt>
   1ef80:	mov	r3, #0
   1ef84:	mov	r2, #1
   1ef88:	ldr	r1, [r5]
   1ef8c:	mov	r0, r4
   1ef90:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   1ef94:	mov	r0, r4
   1ef98:	bl	10df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   1ef9c:	mov	r3, #13
   1efa0:	str	r3, [r4, #168]	; 0xa8
   1efa4:	b	1ef58 <myhtml_insertion_mode_in_cell@@Base+0xec>
   1efa8:	mov	r1, #131	; 0x83
   1efac:	mov	r3, #64	; 0x40
   1efb0:	mov	r2, #1
   1efb4:	mov	r0, r4
   1efb8:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1efbc:	subs	r1, r0, #0
   1efc0:	bne	1ef20 <myhtml_insertion_mode_in_cell@@Base+0xb4>
   1efc4:	mov	r0, #1
   1efc8:	pop	{r4, r5, r6, pc}
   1efcc:	cmp	r1, #127	; 0x7f
   1efd0:	bhi	1f004 <myhtml_insertion_mode_in_cell@@Base+0x198>
   1efd4:	cmp	r1, #126	; 0x7e
   1efd8:	bcs	1f01c <myhtml_insertion_mode_in_cell@@Base+0x1b0>
   1efdc:	cmp	r1, #27
   1efe0:	beq	1f01c <myhtml_insertion_mode_in_cell@@Base+0x1b0>
   1efe4:	bcc	1eff4 <myhtml_insertion_mode_in_cell@@Base+0x188>
   1efe8:	sub	r1, r1, #31
   1efec:	cmp	r1, #1
   1eff0:	bls	1f01c <myhtml_insertion_mode_in_cell@@Base+0x1b0>
   1eff4:	mov	r1, r5
   1eff8:	mov	r0, r4
   1effc:	pop	{r4, r5, r6, lr}
   1f000:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   1f004:	cmp	r1, #130	; 0x82
   1f008:	bcc	1eff4 <myhtml_insertion_mode_in_cell@@Base+0x188>
   1f00c:	cmp	r1, #132	; 0x84
   1f010:	bls	1f01c <myhtml_insertion_mode_in_cell@@Base+0x1b0>
   1f014:	cmp	r1, #135	; 0x87
   1f018:	bne	1eff4 <myhtml_insertion_mode_in_cell@@Base+0x188>
   1f01c:	mov	r3, #64	; 0x40
   1f020:	mov	r2, #1
   1f024:	mov	r1, #127	; 0x7f
   1f028:	mov	r0, r4
   1f02c:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1f030:	mov	r6, r0
   1f034:	mov	r3, #64	; 0x40
   1f038:	mov	r2, #1
   1f03c:	mov	r1, #131	; 0x83
   1f040:	mov	r0, r4
   1f044:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1f048:	orrs	r3, r6, r0
   1f04c:	beq	1ef58 <myhtml_insertion_mode_in_cell@@Base+0xec>
   1f050:	cmp	r6, #0
   1f054:	mov	r2, r5
   1f058:	movne	r1, r6
   1f05c:	moveq	r1, r0
   1f060:	b	1ef24 <myhtml_insertion_mode_in_cell@@Base+0xb8>

0001f064 <myhtml_insertion_mode_in_select@@Base>:
   1f064:	push	{r4, r5, r6, r7, r8, lr}
   1f068:	mov	r6, r0
   1f06c:	mov	r7, r1
   1f070:	ldr	r5, [r1]
   1f074:	ldr	r4, [r1, #48]	; 0x30
   1f078:	ands	r4, r4, #1
   1f07c:	beq	1f168 <myhtml_insertion_mode_in_select@@Base+0x104>
   1f080:	cmp	r5, #97	; 0x61
   1f084:	beq	1f12c <myhtml_insertion_mode_in_select@@Base+0xc8>
   1f088:	bhi	1f09c <myhtml_insertion_mode_in_select@@Base+0x38>
   1f08c:	cmp	r5, #96	; 0x60
   1f090:	beq	1f0bc <myhtml_insertion_mode_in_select@@Base+0x58>
   1f094:	mov	r4, #0
   1f098:	b	1f190 <myhtml_insertion_mode_in_select@@Base+0x12c>
   1f09c:	cmp	r5, #114	; 0x72
   1f0a0:	beq	1f138 <myhtml_insertion_mode_in_select@@Base+0xd4>
   1f0a4:	cmp	r5, #128	; 0x80
   1f0a8:	bne	1f094 <myhtml_insertion_mode_in_select@@Base+0x30>
   1f0ac:	mov	r1, r7
   1f0b0:	mov	r0, r6
   1f0b4:	pop	{r4, r5, r6, r7, r8, lr}
   1f0b8:	b	fff8 <myhtml_insertion_mode_in_head@plt>
   1f0bc:	bl	105bc <myhtml_tree_current_node@plt>
   1f0c0:	mov	r1, #97	; 0x61
   1f0c4:	bl	10a3c <myhtml_is_html_node@plt>
   1f0c8:	cmp	r0, #0
   1f0cc:	beq	1f108 <myhtml_insertion_mode_in_select@@Base+0xa4>
   1f0d0:	ldr	r2, [r6, #128]	; 0x80
   1f0d4:	ldr	r3, [r2, #4]
   1f0d8:	cmp	r3, #1
   1f0dc:	bls	1f108 <myhtml_insertion_mode_in_select@@Base+0xa4>
   1f0e0:	ldr	r3, [r2, #4]
   1f0e4:	mov	r1, r5
   1f0e8:	ldr	r2, [r2]
   1f0ec:	sub	r3, r3, #-1073741822	; 0xc0000002
   1f0f0:	ldr	r0, [r2, r3, lsl #2]
   1f0f4:	bl	10a3c <myhtml_is_html_node@plt>
   1f0f8:	cmp	r0, #0
   1f0fc:	beq	1f108 <myhtml_insertion_mode_in_select@@Base+0xa4>
   1f100:	mov	r0, r6
   1f104:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1f108:	mov	r0, r6
   1f10c:	bl	105bc <myhtml_tree_current_node@plt>
   1f110:	mov	r1, #96	; 0x60
   1f114:	bl	10a3c <myhtml_is_html_node@plt>
   1f118:	cmp	r0, #0
   1f11c:	beq	1f094 <myhtml_insertion_mode_in_select@@Base+0x30>
   1f120:	mov	r0, r6
   1f124:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1f128:	b	1f094 <myhtml_insertion_mode_in_select@@Base+0x30>
   1f12c:	bl	105bc <myhtml_tree_current_node@plt>
   1f130:	mov	r1, r5
   1f134:	b	1f114 <myhtml_insertion_mode_in_select@@Base+0xb0>
   1f138:	mov	r1, r5
   1f13c:	mov	r3, #128	; 0x80
   1f140:	mov	r2, #1
   1f144:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1f148:	subs	r1, r0, #0
   1f14c:	beq	1f094 <myhtml_insertion_mode_in_select@@Base+0x30>
   1f150:	mov	r0, r6
   1f154:	mov	r2, #0
   1f158:	bl	100dc <myhtml_tree_open_elements_pop_until_by_node@plt>
   1f15c:	mov	r0, r6
   1f160:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   1f164:	b	1f094 <myhtml_insertion_mode_in_select@@Base+0x30>
   1f168:	cmp	r5, #96	; 0x60
   1f16c:	beq	1f28c <myhtml_insertion_mode_in_select@@Base+0x228>
   1f170:	bhi	1f1e0 <myhtml_insertion_mode_in_select@@Base+0x17c>
   1f174:	cmp	r5, #65	; 0x41
   1f178:	beq	1f250 <myhtml_insertion_mode_in_select@@Base+0x1ec>
   1f17c:	bhi	1f198 <myhtml_insertion_mode_in_select@@Base+0x134>
   1f180:	cmp	r5, #1
   1f184:	beq	1f218 <myhtml_insertion_mode_in_select@@Base+0x1b4>
   1f188:	cmp	r5, #2
   1f18c:	beq	1f244 <myhtml_insertion_mode_in_select@@Base+0x1e0>
   1f190:	mov	r0, r4
   1f194:	pop	{r4, r5, r6, r7, r8, pc}
   1f198:	cmp	r5, #70	; 0x46
   1f19c:	beq	1f1a8 <myhtml_insertion_mode_in_select@@Base+0x144>
   1f1a0:	cmp	r5, #74	; 0x4a
   1f1a4:	bne	1f190 <myhtml_insertion_mode_in_select@@Base+0x12c>
   1f1a8:	mov	r1, #114	; 0x72
   1f1ac:	mov	r3, #128	; 0x80
   1f1b0:	mov	r2, #1
   1f1b4:	mov	r0, r6
   1f1b8:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1f1bc:	subs	r1, r0, #0
   1f1c0:	beq	1f094 <myhtml_insertion_mode_in_select@@Base+0x30>
   1f1c4:	mov	r2, #0
   1f1c8:	mov	r0, r6
   1f1cc:	bl	100dc <myhtml_tree_open_elements_pop_until_by_node@plt>
   1f1d0:	mov	r0, r6
   1f1d4:	mov	r4, #1
   1f1d8:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   1f1dc:	b	1f190 <myhtml_insertion_mode_in_select@@Base+0x12c>
   1f1e0:	cmp	r5, #114	; 0x72
   1f1e4:	beq	1f2d8 <myhtml_insertion_mode_in_select@@Base+0x274>
   1f1e8:	bhi	1f200 <myhtml_insertion_mode_in_select@@Base+0x19c>
   1f1ec:	cmp	r5, #97	; 0x61
   1f1f0:	beq	1f260 <myhtml_insertion_mode_in_select@@Base+0x1fc>
   1f1f4:	cmp	r5, #112	; 0x70
   1f1f8:	bne	1f190 <myhtml_insertion_mode_in_select@@Base+0x12c>
   1f1fc:	b	1f0ac <myhtml_insertion_mode_in_select@@Base+0x48>
   1f200:	cmp	r5, #129	; 0x81
   1f204:	beq	1f1a8 <myhtml_insertion_mode_in_select@@Base+0x144>
   1f208:	cmp	r5, #251	; 0xfb
   1f20c:	beq	1f250 <myhtml_insertion_mode_in_select@@Base+0x1ec>
   1f210:	cmp	r5, #128	; 0x80
   1f214:	b	1f1f8 <myhtml_insertion_mode_in_select@@Base+0x194>
   1f218:	ldr	r3, [r1, #48]	; 0x30
   1f21c:	tst	r3, #2048	; 0x800
   1f220:	beq	1f234 <myhtml_insertion_mode_in_select@@Base+0x1d0>
   1f224:	bl	10760 <myhtml_insertion_fix_for_null_char_drop_all@plt>
   1f228:	ldr	r3, [r7, #12]
   1f22c:	cmp	r3, #0
   1f230:	beq	1f094 <myhtml_insertion_mode_in_select@@Base+0x30>
   1f234:	mov	r1, r7
   1f238:	mov	r0, r6
   1f23c:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   1f240:	b	1f094 <myhtml_insertion_mode_in_select@@Base+0x30>
   1f244:	mov	r2, r4
   1f248:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   1f24c:	b	1f190 <myhtml_insertion_mode_in_select@@Base+0x12c>
   1f250:	mov	r1, r7
   1f254:	mov	r0, r6
   1f258:	pop	{r4, r5, r6, r7, r8, lr}
   1f25c:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   1f260:	bl	105bc <myhtml_tree_current_node@plt>
   1f264:	ldr	r1, [r7]
   1f268:	bl	10a3c <myhtml_is_html_node@plt>
   1f26c:	cmp	r0, #0
   1f270:	beq	1f27c <myhtml_insertion_mode_in_select@@Base+0x218>
   1f274:	mov	r0, r6
   1f278:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1f27c:	mov	r1, r7
   1f280:	mov	r0, r6
   1f284:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1f288:	b	1f094 <myhtml_insertion_mode_in_select@@Base+0x30>
   1f28c:	bl	105bc <myhtml_tree_current_node@plt>
   1f290:	ldr	r3, [r0, #4]
   1f294:	cmp	r3, #97	; 0x61
   1f298:	bne	1f2b0 <myhtml_insertion_mode_in_select@@Base+0x24c>
   1f29c:	ldr	r3, [r0, #8]
   1f2a0:	cmp	r3, #1
   1f2a4:	bne	1f2b0 <myhtml_insertion_mode_in_select@@Base+0x24c>
   1f2a8:	mov	r0, r6
   1f2ac:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1f2b0:	mov	r0, r6
   1f2b4:	bl	105bc <myhtml_tree_current_node@plt>
   1f2b8:	ldr	r3, [r7]
   1f2bc:	ldr	r2, [r0, #4]
   1f2c0:	cmp	r2, r3
   1f2c4:	bne	1f27c <myhtml_insertion_mode_in_select@@Base+0x218>
   1f2c8:	ldr	r3, [r0, #8]
   1f2cc:	cmp	r3, #1
   1f2d0:	bne	1f27c <myhtml_insertion_mode_in_select@@Base+0x218>
   1f2d4:	b	1f274 <myhtml_insertion_mode_in_select@@Base+0x210>
   1f2d8:	mov	r1, r5
   1f2dc:	mov	r3, #128	; 0x80
   1f2e0:	mov	r2, #1
   1f2e4:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1f2e8:	subs	r1, r0, #0
   1f2ec:	beq	1f094 <myhtml_insertion_mode_in_select@@Base+0x30>
   1f2f0:	mov	r0, r6
   1f2f4:	mov	r2, r4
   1f2f8:	bl	100dc <myhtml_tree_open_elements_pop_until_by_node@plt>
   1f2fc:	mov	r0, r6
   1f300:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   1f304:	b	1f190 <myhtml_insertion_mode_in_select@@Base+0x12c>

0001f308 <myhtml_insertion_mode_in_select_in_table@@Base>:
   1f308:	ldr	r3, [r1, #48]	; 0x30
   1f30c:	push	{r4, lr}
   1f310:	mov	r4, r0
   1f314:	ldr	r0, [r1]
   1f318:	tst	r3, #1
   1f31c:	beq	1f390 <myhtml_insertion_mode_in_select_in_table@@Base+0x88>
   1f320:	cmp	r0, #127	; 0x7f
   1f324:	bhi	1f378 <myhtml_insertion_mode_in_select_in_table@@Base+0x70>
   1f328:	cmp	r0, #125	; 0x7d
   1f32c:	bcs	1f338 <myhtml_insertion_mode_in_select_in_table@@Base+0x30>
   1f330:	cmp	r0, #27
   1f334:	bne	1f3a8 <myhtml_insertion_mode_in_select_in_table@@Base+0xa0>
   1f338:	mov	r1, r0
   1f33c:	mov	r3, #64	; 0x40
   1f340:	mov	r2, #1
   1f344:	mov	r0, r4
   1f348:	bl	10e98 <myhtml_tree_element_in_scope@plt>
   1f34c:	cmp	r0, #0
   1f350:	popeq	{r4, pc}
   1f354:	mov	r3, #0
   1f358:	mov	r2, #1
   1f35c:	mov	r1, #114	; 0x72
   1f360:	mov	r0, r4
   1f364:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   1f368:	mov	r0, r4
   1f36c:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   1f370:	mov	r0, #1
   1f374:	pop	{r4, pc}
   1f378:	cmp	r0, #130	; 0x82
   1f37c:	bcc	1f3a8 <myhtml_insertion_mode_in_select_in_table@@Base+0xa0>
   1f380:	cmp	r0, #132	; 0x84
   1f384:	bls	1f338 <myhtml_insertion_mode_in_select_in_table@@Base+0x30>
   1f388:	cmp	r0, #135	; 0x87
   1f38c:	b	1f334 <myhtml_insertion_mode_in_select_in_table@@Base+0x2c>
   1f390:	cmp	r0, #127	; 0x7f
   1f394:	bhi	1f3b4 <myhtml_insertion_mode_in_select_in_table@@Base+0xac>
   1f398:	cmp	r0, #125	; 0x7d
   1f39c:	bcs	1f354 <myhtml_insertion_mode_in_select_in_table@@Base+0x4c>
   1f3a0:	cmp	r0, #27
   1f3a4:	beq	1f354 <myhtml_insertion_mode_in_select_in_table@@Base+0x4c>
   1f3a8:	mov	r0, r4
   1f3ac:	pop	{r4, lr}
   1f3b0:	b	10358 <myhtml_insertion_mode_in_select@plt>
   1f3b4:	cmp	r0, #130	; 0x82
   1f3b8:	bcc	1f3a8 <myhtml_insertion_mode_in_select_in_table@@Base+0xa0>
   1f3bc:	cmp	r0, #132	; 0x84
   1f3c0:	bls	1f354 <myhtml_insertion_mode_in_select_in_table@@Base+0x4c>
   1f3c4:	cmp	r0, #135	; 0x87
   1f3c8:	b	1f3a4 <myhtml_insertion_mode_in_select_in_table@@Base+0x9c>

0001f3cc <myhtml_insertion_mode_after_body@@Base>:
   1f3cc:	push	{r4, r5, r6, r7, r8, lr}
   1f3d0:	mov	r2, r0
   1f3d4:	ldr	r4, [r1]
   1f3d8:	ldr	r5, [r1, #48]	; 0x30
   1f3dc:	ands	r5, r5, #1
   1f3e0:	beq	1f404 <myhtml_insertion_mode_after_body@@Base+0x38>
   1f3e4:	cmp	r4, #65	; 0x41
   1f3e8:	bne	1f424 <myhtml_insertion_mode_after_body@@Base+0x58>
   1f3ec:	ldr	r0, [r0, #88]	; 0x58
   1f3f0:	cmp	r0, #0
   1f3f4:	bne	1f4a0 <myhtml_insertion_mode_after_body@@Base+0xd4>
   1f3f8:	mov	r3, #21
   1f3fc:	str	r3, [r2, #168]	; 0xa8
   1f400:	pop	{r4, r5, r6, r7, r8, pc}
   1f404:	cmp	r4, #3
   1f408:	beq	1f4a0 <myhtml_insertion_mode_after_body@@Base+0xd4>
   1f40c:	bhi	1f434 <myhtml_insertion_mode_after_body@@Base+0x68>
   1f410:	cmp	r4, #1
   1f414:	mov	r6, r1
   1f418:	beq	1f44c <myhtml_insertion_mode_after_body@@Base+0x80>
   1f41c:	cmp	r4, #2
   1f420:	beq	1f468 <myhtml_insertion_mode_after_body@@Base+0x9c>
   1f424:	mov	r3, #6
   1f428:	str	r3, [r2, #168]	; 0xa8
   1f42c:	mov	r0, #1
   1f430:	pop	{r4, r5, r6, r7, r8, pc}
   1f434:	cmp	r4, #65	; 0x41
   1f438:	beq	1f460 <myhtml_insertion_mode_after_body@@Base+0x94>
   1f43c:	cmp	r4, #251	; 0xfb
   1f440:	bne	1f424 <myhtml_insertion_mode_after_body@@Base+0x58>
   1f444:	bl	102a4 <myhtml_rules_stop_parsing@plt>
   1f448:	b	1f4a0 <myhtml_insertion_mode_after_body@@Base+0xd4>
   1f44c:	ldr	r2, [r1, #48]	; 0x30
   1f450:	tst	r2, #8
   1f454:	moveq	r2, #6
   1f458:	streq	r2, [r0, #168]	; 0xa8
   1f45c:	beq	1f42c <myhtml_insertion_mode_after_body@@Base+0x60>
   1f460:	pop	{r4, r5, r6, r7, r8, lr}
   1f464:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   1f468:	ldr	r2, [r0, #128]	; 0x80
   1f46c:	ldr	r3, [r2, #4]
   1f470:	cmp	r3, #0
   1f474:	beq	1f4a0 <myhtml_insertion_mode_after_body@@Base+0xd4>
   1f478:	ldr	r3, [r2]
   1f47c:	ldr	r7, [r3]
   1f480:	bl	ff80 <myhtml_tree_node_create@plt>
   1f484:	mov	r1, r0
   1f488:	ldr	r3, [r7, #8]
   1f48c:	mov	r0, r7
   1f490:	str	r4, [r1, #4]
   1f494:	str	r3, [r1, #8]
   1f498:	str	r6, [r1, #32]
   1f49c:	bl	1064c <myhtml_tree_node_add_child@plt>
   1f4a0:	mov	r0, #0
   1f4a4:	pop	{r4, r5, r6, r7, r8, pc}

0001f4a8 <myhtml_insertion_mode_in_frameset@@Base>:
   1f4a8:	push	{r4, r5, r6, lr}
   1f4ac:	mov	r4, r0
   1f4b0:	ldr	r2, [r1, #48]	; 0x30
   1f4b4:	ldr	r3, [r1]
   1f4b8:	ands	r2, r2, #1
   1f4bc:	beq	1f520 <myhtml_insertion_mode_in_frameset@@Base+0x78>
   1f4c0:	cmp	r3, #54	; 0x36
   1f4c4:	bne	1f518 <myhtml_insertion_mode_in_frameset@@Base+0x70>
   1f4c8:	bl	105bc <myhtml_tree_current_node@plt>
   1f4cc:	ldr	r3, [r4, #84]	; 0x54
   1f4d0:	ldr	r3, [r3, #20]
   1f4d4:	cmp	r3, r0
   1f4d8:	beq	1f518 <myhtml_insertion_mode_in_frameset@@Base+0x70>
   1f4dc:	mov	r0, r4
   1f4e0:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1f4e4:	mov	r0, r4
   1f4e8:	bl	105bc <myhtml_tree_current_node@plt>
   1f4ec:	ldr	r3, [r4, #88]	; 0x58
   1f4f0:	cmp	r3, #0
   1f4f4:	bne	1f518 <myhtml_insertion_mode_in_frameset@@Base+0x70>
   1f4f8:	ldr	r3, [r0, #4]
   1f4fc:	cmp	r3, #54	; 0x36
   1f500:	bne	1f510 <myhtml_insertion_mode_in_frameset@@Base+0x68>
   1f504:	ldr	r3, [r0, #8]
   1f508:	cmp	r3, #1
   1f50c:	beq	1f518 <myhtml_insertion_mode_in_frameset@@Base+0x70>
   1f510:	mov	r3, #20
   1f514:	str	r3, [r4, #168]	; 0xa8
   1f518:	mov	r0, #0
   1f51c:	pop	{r4, r5, r6, pc}
   1f520:	cmp	r3, #54	; 0x36
   1f524:	beq	1f5ac <myhtml_insertion_mode_in_frameset@@Base+0x104>
   1f528:	bhi	1f564 <myhtml_insertion_mode_in_frameset@@Base+0xbc>
   1f52c:	cmp	r3, #2
   1f530:	beq	1f5a4 <myhtml_insertion_mode_in_frameset@@Base+0xfc>
   1f534:	cmp	r3, #53	; 0x35
   1f538:	beq	1f5b4 <myhtml_insertion_mode_in_frameset@@Base+0x10c>
   1f53c:	cmp	r3, #1
   1f540:	bne	1f518 <myhtml_insertion_mode_in_frameset@@Base+0x70>
   1f544:	ldr	r3, [r1, #48]	; 0x30
   1f548:	mov	r5, r1
   1f54c:	tst	r3, #8
   1f550:	beq	1f584 <myhtml_insertion_mode_in_frameset@@Base+0xdc>
   1f554:	mov	r1, r5
   1f558:	mov	r0, r4
   1f55c:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   1f560:	b	1f518 <myhtml_insertion_mode_in_frameset@@Base+0x70>
   1f564:	cmp	r3, #92	; 0x5c
   1f568:	beq	1f5c4 <myhtml_insertion_mode_in_frameset@@Base+0x11c>
   1f56c:	cmp	r3, #251	; 0xfb
   1f570:	beq	1f5cc <myhtml_insertion_mode_in_frameset@@Base+0x124>
   1f574:	cmp	r3, #65	; 0x41
   1f578:	bne	1f518 <myhtml_insertion_mode_in_frameset@@Base+0x70>
   1f57c:	pop	{r4, r5, r6, lr}
   1f580:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   1f584:	ldr	r0, [r0, #8]
   1f588:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1f58c:	add	r0, r5, #4
   1f590:	bl	10280 <mycore_string_stay_only_whitespace@plt>
   1f594:	ldr	r3, [r5, #12]
   1f598:	cmp	r3, #0
   1f59c:	beq	1f518 <myhtml_insertion_mode_in_frameset@@Base+0x70>
   1f5a0:	b	1f554 <myhtml_insertion_mode_in_frameset@@Base+0xac>
   1f5a4:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   1f5a8:	b	1f518 <myhtml_insertion_mode_in_frameset@@Base+0x70>
   1f5ac:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1f5b0:	b	1f518 <myhtml_insertion_mode_in_frameset@@Base+0x70>
   1f5b4:	bl	fc08 <myhtml_tree_node_insert_html_element@plt>
   1f5b8:	mov	r0, r4
   1f5bc:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   1f5c0:	b	1f518 <myhtml_insertion_mode_in_frameset@@Base+0x70>
   1f5c4:	pop	{r4, r5, r6, lr}
   1f5c8:	b	fff8 <myhtml_insertion_mode_in_head@plt>
   1f5cc:	bl	105bc <myhtml_tree_current_node@plt>
   1f5d0:	mov	r0, r4
   1f5d4:	bl	102a4 <myhtml_rules_stop_parsing@plt>
   1f5d8:	b	1f518 <myhtml_insertion_mode_in_frameset@@Base+0x70>

0001f5dc <myhtml_insertion_mode_after_frameset@@Base>:
   1f5dc:	push	{r4, r5, r6, lr}
   1f5e0:	mov	r5, r0
   1f5e4:	ldr	r2, [r1, #48]	; 0x30
   1f5e8:	ldr	r3, [r1]
   1f5ec:	ands	r2, r2, #1
   1f5f0:	beq	1f608 <myhtml_insertion_mode_after_frameset@@Base+0x2c>
   1f5f4:	cmp	r3, #65	; 0x41
   1f5f8:	moveq	r3, #22
   1f5fc:	streq	r3, [r0, #168]	; 0xa8
   1f600:	mov	r0, #0
   1f604:	pop	{r4, r5, r6, pc}
   1f608:	cmp	r3, #65	; 0x41
   1f60c:	beq	1f684 <myhtml_insertion_mode_after_frameset@@Base+0xa8>
   1f610:	bhi	1f62c <myhtml_insertion_mode_after_frameset@@Base+0x50>
   1f614:	cmp	r3, #1
   1f618:	beq	1f644 <myhtml_insertion_mode_after_frameset@@Base+0x68>
   1f61c:	cmp	r3, #2
   1f620:	bne	1f600 <myhtml_insertion_mode_after_frameset@@Base+0x24>
   1f624:	bl	101fc <myhtml_tree_node_insert_comment@plt>
   1f628:	b	1f600 <myhtml_insertion_mode_after_frameset@@Base+0x24>
   1f62c:	cmp	r3, #92	; 0x5c
   1f630:	beq	1f68c <myhtml_insertion_mode_after_frameset@@Base+0xb0>
   1f634:	cmp	r3, #251	; 0xfb
   1f638:	bne	1f600 <myhtml_insertion_mode_after_frameset@@Base+0x24>
   1f63c:	bl	102a4 <myhtml_rules_stop_parsing@plt>
   1f640:	b	1f600 <myhtml_insertion_mode_after_frameset@@Base+0x24>
   1f644:	ldr	r3, [r1, #48]	; 0x30
   1f648:	mov	r4, r1
   1f64c:	tst	r3, #8
   1f650:	beq	1f664 <myhtml_insertion_mode_after_frameset@@Base+0x88>
   1f654:	mov	r1, r4
   1f658:	mov	r0, r5
   1f65c:	bl	ff2c <myhtml_tree_node_insert_text@plt>
   1f660:	b	1f600 <myhtml_insertion_mode_after_frameset@@Base+0x24>
   1f664:	ldr	r0, [r0, #8]
   1f668:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1f66c:	add	r0, r4, #4
   1f670:	bl	10280 <mycore_string_stay_only_whitespace@plt>
   1f674:	ldr	r3, [r4, #12]
   1f678:	cmp	r3, #0
   1f67c:	beq	1f600 <myhtml_insertion_mode_after_frameset@@Base+0x24>
   1f680:	b	1f654 <myhtml_insertion_mode_after_frameset@@Base+0x78>
   1f684:	pop	{r4, r5, r6, lr}
   1f688:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   1f68c:	pop	{r4, r5, r6, lr}
   1f690:	b	fff8 <myhtml_insertion_mode_in_head@plt>

0001f694 <myhtml_insertion_mode_after_after_body@@Base>:
   1f694:	push	{r4, r5, r6, r7, r8, lr}
   1f698:	mov	r2, r0
   1f69c:	ldr	r4, [r1, #48]	; 0x30
   1f6a0:	ands	r4, r4, #1
   1f6a4:	beq	1f6b8 <myhtml_insertion_mode_after_after_body@@Base+0x24>
   1f6a8:	mov	r3, #6
   1f6ac:	str	r3, [r2, #168]	; 0xa8
   1f6b0:	mov	r0, #1
   1f6b4:	pop	{r4, r5, r6, r7, r8, pc}
   1f6b8:	ldr	r5, [r1]
   1f6bc:	mov	r3, r1
   1f6c0:	cmp	r5, #3
   1f6c4:	beq	1f748 <myhtml_insertion_mode_after_after_body@@Base+0xb4>
   1f6c8:	mov	r6, r1
   1f6cc:	mov	ip, r0
   1f6d0:	bhi	1f6f0 <myhtml_insertion_mode_after_after_body@@Base+0x5c>
   1f6d4:	cmp	r5, #1
   1f6d8:	beq	1f734 <myhtml_insertion_mode_after_after_body@@Base+0xa0>
   1f6dc:	cmp	r5, #2
   1f6e0:	beq	1f708 <myhtml_insertion_mode_after_after_body@@Base+0x74>
   1f6e4:	mov	r3, #6
   1f6e8:	str	r3, [ip, #168]	; 0xa8
   1f6ec:	b	1f6b0 <myhtml_insertion_mode_after_after_body@@Base+0x1c>
   1f6f0:	cmp	r5, #65	; 0x41
   1f6f4:	beq	1f748 <myhtml_insertion_mode_after_after_body@@Base+0xb4>
   1f6f8:	cmp	r5, #251	; 0xfb
   1f6fc:	bne	1f6e4 <myhtml_insertion_mode_after_after_body@@Base+0x50>
   1f700:	bl	102a4 <myhtml_rules_stop_parsing@plt>
   1f704:	b	1f72c <myhtml_insertion_mode_after_after_body@@Base+0x98>
   1f708:	ldr	r7, [r0, #84]	; 0x54
   1f70c:	bl	ff80 <myhtml_tree_node_create@plt>
   1f710:	mov	r1, r0
   1f714:	ldr	r3, [r7, #8]
   1f718:	mov	r0, r7
   1f71c:	str	r5, [r1, #4]
   1f720:	str	r3, [r1, #8]
   1f724:	str	r6, [r1, #32]
   1f728:	bl	1064c <myhtml_tree_node_add_child@plt>
   1f72c:	mov	r0, r4
   1f730:	pop	{r4, r5, r6, r7, r8, pc}
   1f734:	ldr	r3, [r1, #48]	; 0x30
   1f738:	tst	r3, #8
   1f73c:	beq	1f6a8 <myhtml_insertion_mode_after_after_body@@Base+0x14>
   1f740:	pop	{r4, r5, r6, r7, r8, lr}
   1f744:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   1f748:	mov	r1, r3
   1f74c:	mov	r0, r2
   1f750:	b	1f740 <myhtml_insertion_mode_after_after_body@@Base+0xac>

0001f754 <myhtml_insertion_mode_after_after_frameset@@Base>:
   1f754:	ldr	ip, [r1, #48]	; 0x30
   1f758:	tst	ip, #1
   1f75c:	bne	1f820 <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   1f760:	push	{r4, r5, r6, lr}
   1f764:	mov	r2, r0
   1f768:	mov	r3, r1
   1f76c:	ldr	r4, [r1]
   1f770:	cmp	r4, #3
   1f774:	beq	1f7b4 <myhtml_insertion_mode_after_after_frameset@@Base+0x60>
   1f778:	mov	r6, r1
   1f77c:	mov	r5, r0
   1f780:	bhi	1f79c <myhtml_insertion_mode_after_after_frameset@@Base+0x48>
   1f784:	cmp	r4, #1
   1f788:	beq	1f7e8 <myhtml_insertion_mode_after_after_frameset@@Base+0x94>
   1f78c:	cmp	r4, #2
   1f790:	beq	1f7c0 <myhtml_insertion_mode_after_after_frameset@@Base+0x6c>
   1f794:	mov	r0, #0
   1f798:	pop	{r4, r5, r6, pc}
   1f79c:	cmp	r4, #92	; 0x5c
   1f7a0:	beq	1f818 <myhtml_insertion_mode_after_after_frameset@@Base+0xc4>
   1f7a4:	cmp	r4, #251	; 0xfb
   1f7a8:	beq	1f810 <myhtml_insertion_mode_after_after_frameset@@Base+0xbc>
   1f7ac:	cmp	r4, #65	; 0x41
   1f7b0:	bne	1f794 <myhtml_insertion_mode_after_after_frameset@@Base+0x40>
   1f7b4:	mov	r1, r3
   1f7b8:	mov	r0, r2
   1f7bc:	b	1f7f4 <myhtml_insertion_mode_after_after_frameset@@Base+0xa0>
   1f7c0:	ldr	r5, [r0, #84]	; 0x54
   1f7c4:	bl	ff80 <myhtml_tree_node_create@plt>
   1f7c8:	mov	r1, r0
   1f7cc:	ldr	r3, [r5, #8]
   1f7d0:	mov	r0, r5
   1f7d4:	str	r4, [r1, #4]
   1f7d8:	str	r3, [r1, #8]
   1f7dc:	str	r6, [r1, #32]
   1f7e0:	bl	1064c <myhtml_tree_node_add_child@plt>
   1f7e4:	b	1f794 <myhtml_insertion_mode_after_after_frameset@@Base+0x40>
   1f7e8:	ldr	r3, [r1, #48]	; 0x30
   1f7ec:	tst	r3, #8
   1f7f0:	beq	1f7fc <myhtml_insertion_mode_after_after_frameset@@Base+0xa8>
   1f7f4:	pop	{r4, r5, r6, lr}
   1f7f8:	b	105d4 <myhtml_insertion_mode_in_body@plt>
   1f7fc:	bl	fe90 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   1f800:	subs	r1, r0, #0
   1f804:	beq	1f794 <myhtml_insertion_mode_after_after_frameset@@Base+0x40>
   1f808:	mov	r0, r5
   1f80c:	b	1f7f4 <myhtml_insertion_mode_after_after_frameset@@Base+0xa0>
   1f810:	bl	102a4 <myhtml_rules_stop_parsing@plt>
   1f814:	b	1f794 <myhtml_insertion_mode_after_after_frameset@@Base+0x40>
   1f818:	pop	{r4, r5, r6, lr}
   1f81c:	b	fff8 <myhtml_insertion_mode_in_head@plt>
   1f820:	mov	r0, #0
   1f824:	bx	lr

0001f828 <myhtml_rules_check_for_first_newline@@Base>:
   1f828:	push	{r4, r5, r6, lr}
   1f82c:	ldr	r4, [r0, #180]	; 0xb4
   1f830:	ands	r4, r4, #64	; 0x40
   1f834:	beq	1f8b0 <myhtml_rules_check_for_first_newline@@Base+0x88>
   1f838:	ldr	r3, [r0, #180]	; 0xb4
   1f83c:	mov	r5, r0
   1f840:	tst	r3, #128	; 0x80
   1f844:	beq	1f8b8 <myhtml_rules_check_for_first_newline@@Base+0x90>
   1f848:	ldr	r4, [r1]
   1f84c:	mov	r6, r1
   1f850:	cmp	r4, #1
   1f854:	bne	1f8b8 <myhtml_rules_check_for_first_newline@@Base+0x90>
   1f858:	ldr	r0, [r0, #8]
   1f85c:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   1f860:	ldr	r3, [r6, #12]
   1f864:	cmp	r3, #0
   1f868:	beq	1f8b0 <myhtml_rules_check_for_first_newline@@Base+0x88>
   1f86c:	ldr	r0, [r6, #4]
   1f870:	ldrb	r3, [r0]
   1f874:	cmp	r3, #10
   1f878:	bne	1f8b8 <myhtml_rules_check_for_first_newline@@Base+0x90>
   1f87c:	mov	r1, r4
   1f880:	bl	10bf8 <mchar_async_crop_first_chars_without_cache@plt>
   1f884:	ldr	r3, [r6, #12]
   1f888:	str	r0, [r6, #4]
   1f88c:	sub	r3, r3, #1
   1f890:	cmp	r3, #0
   1f894:	str	r3, [r6, #12]
   1f898:	bne	1f8b8 <myhtml_rules_check_for_first_newline@@Base+0x90>
   1f89c:	ldr	r3, [r5, #180]	; 0xb4
   1f8a0:	ldr	r2, [r5, #180]	; 0xb4
   1f8a4:	and	r3, r3, #64	; 0x40
   1f8a8:	eor	r3, r3, r2
   1f8ac:	str	r3, [r5, #180]	; 0xb4
   1f8b0:	mov	r0, r4
   1f8b4:	pop	{r4, r5, r6, pc}
   1f8b8:	ldr	r3, [r5, #180]	; 0xb4
   1f8bc:	mov	r4, #0
   1f8c0:	ldr	r2, [r5, #180]	; 0xb4
   1f8c4:	and	r3, r3, #64	; 0x40
   1f8c8:	eor	r3, r3, r2
   1f8cc:	str	r3, [r5, #180]	; 0xb4
   1f8d0:	b	1f8b0 <myhtml_rules_check_for_first_newline@@Base+0x88>

0001f8d4 <myhtml_rules_tree_dispatcher@@Base>:
   1f8d4:	push	{r4, r5, r6, lr}
   1f8d8:	mov	r4, r0
   1f8dc:	mov	r5, r1
   1f8e0:	bl	10cf4 <myhtml_rules_check_for_first_newline@plt>
   1f8e4:	cmp	r0, #0
   1f8e8:	beq	1f8f8 <myhtml_rules_tree_dispatcher@@Base+0x24>
   1f8ec:	mov	r0, #0
   1f8f0:	str	r5, [r4, #152]	; 0x98
   1f8f4:	pop	{r4, r5, r6, pc}
   1f8f8:	ldr	r3, [r4, #164]	; 0xa4
   1f8fc:	cmp	r3, #0
   1f900:	strne	r0, [r4, #164]	; 0xa4
   1f904:	mov	r0, r4
   1f908:	bl	10cdc <myhtml_tree_adjusted_current_node@plt>
   1f90c:	ldr	r3, [r4, #128]	; 0x80
   1f910:	mov	r6, r0
   1f914:	ldr	r3, [r3, #4]
   1f918:	cmp	r3, #0
   1f91c:	beq	1f92c <myhtml_rules_tree_dispatcher@@Base+0x58>
   1f920:	ldr	r3, [r0, #8]
   1f924:	cmp	r3, #1
   1f928:	bne	1f954 <myhtml_rules_tree_dispatcher@@Base+0x80>
   1f92c:	ldr	r3, [r4]
   1f930:	mov	r1, r5
   1f934:	mov	r0, r4
   1f938:	ldr	r2, [r4, #168]	; 0xa8
   1f93c:	ldr	r3, [r3, #28]
   1f940:	ldr	r3, [r3, r2, lsl #2]
   1f944:	blx	r3
   1f948:	cmp	r0, #0
   1f94c:	streq	r5, [r4, #152]	; 0x98
   1f950:	pop	{r4, r5, r6, pc}
   1f954:	mov	r1, r0
   1f958:	mov	r0, r4
   1f95c:	bl	ffe0 <myhtml_tree_is_mathml_integration_point@plt>
   1f960:	cmp	r0, #0
   1f964:	beq	1f98c <myhtml_rules_tree_dispatcher@@Base+0xb8>
   1f968:	ldr	r3, [r5]
   1f96c:	cmp	r3, #1
   1f970:	beq	1f980 <myhtml_rules_tree_dispatcher@@Base+0xac>
   1f974:	cmp	r3, #226	; 0xe2
   1f978:	cmpne	r3, #221	; 0xdd
   1f97c:	beq	1f98c <myhtml_rules_tree_dispatcher@@Base+0xb8>
   1f980:	ldr	r3, [r5, #48]	; 0x30
   1f984:	tst	r3, #1
   1f988:	beq	1f92c <myhtml_rules_tree_dispatcher@@Base+0x58>
   1f98c:	ldr	r3, [r6, #4]
   1f990:	cmp	r3, #8
   1f994:	bne	1f9bc <myhtml_rules_tree_dispatcher@@Base+0xe8>
   1f998:	ldr	r3, [r6, #8]
   1f99c:	cmp	r3, #2
   1f9a0:	bne	1f9bc <myhtml_rules_tree_dispatcher@@Base+0xe8>
   1f9a4:	ldr	r3, [r5]
   1f9a8:	cmp	r3, #124	; 0x7c
   1f9ac:	bne	1f9bc <myhtml_rules_tree_dispatcher@@Base+0xe8>
   1f9b0:	ldr	r3, [r5, #48]	; 0x30
   1f9b4:	tst	r3, #1
   1f9b8:	beq	1f92c <myhtml_rules_tree_dispatcher@@Base+0x58>
   1f9bc:	mov	r1, r6
   1f9c0:	mov	r0, r4
   1f9c4:	bl	1019c <myhtml_tree_is_html_integration_point@plt>
   1f9c8:	cmp	r0, #0
   1f9cc:	beq	1f9e8 <myhtml_rules_tree_dispatcher@@Base+0x114>
   1f9d0:	ldr	r3, [r5, #48]	; 0x30
   1f9d4:	tst	r3, #1
   1f9d8:	beq	1f92c <myhtml_rules_tree_dispatcher@@Base+0x58>
   1f9dc:	ldr	r3, [r5]
   1f9e0:	cmp	r3, #1
   1f9e4:	beq	1f92c <myhtml_rules_tree_dispatcher@@Base+0x58>
   1f9e8:	ldr	r3, [r5]
   1f9ec:	cmp	r3, #251	; 0xfb
   1f9f0:	beq	1f92c <myhtml_rules_tree_dispatcher@@Base+0x58>
   1f9f4:	mov	r1, r5
   1f9f8:	mov	r0, r4
   1f9fc:	bl	fdc4 <myhtml_insertion_mode_in_foreign_content@plt>
   1fa00:	b	1f948 <myhtml_rules_tree_dispatcher@@Base+0x74>

0001fa04 <myhtml_rules_init@@Base>:
   1fa04:	push	{r4, r5, r6, lr}
   1fa08:	mov	r5, r0
   1fa0c:	mov	r0, #92	; 0x5c
   1fa10:	ldr	r4, [pc, #308]	; 1fb4c <myhtml_rules_init@@Base+0x148>
   1fa14:	bl	10c28 <mycore_malloc@plt>
   1fa18:	cmp	r0, #0
   1fa1c:	str	r0, [r5, #28]
   1fa20:	add	r4, pc, r4
   1fa24:	beq	1fb44 <myhtml_rules_init@@Base+0x140>
   1fa28:	ldr	r3, [pc, #288]	; 1fb50 <myhtml_rules_init@@Base+0x14c>
   1fa2c:	ldr	r3, [r4, r3]
   1fa30:	str	r3, [r0]
   1fa34:	ldr	r3, [pc, #280]	; 1fb54 <myhtml_rules_init@@Base+0x150>
   1fa38:	ldr	r3, [r4, r3]
   1fa3c:	str	r3, [r0, #4]
   1fa40:	ldr	r3, [pc, #272]	; 1fb58 <myhtml_rules_init@@Base+0x154>
   1fa44:	ldr	r3, [r4, r3]
   1fa48:	str	r3, [r0, #8]
   1fa4c:	ldr	r3, [pc, #264]	; 1fb5c <myhtml_rules_init@@Base+0x158>
   1fa50:	ldr	r3, [r4, r3]
   1fa54:	str	r3, [r0, #12]
   1fa58:	ldr	r3, [pc, #256]	; 1fb60 <myhtml_rules_init@@Base+0x15c>
   1fa5c:	ldr	r3, [r4, r3]
   1fa60:	str	r3, [r0, #16]
   1fa64:	ldr	r3, [pc, #248]	; 1fb64 <myhtml_rules_init@@Base+0x160>
   1fa68:	ldr	r3, [r4, r3]
   1fa6c:	str	r3, [r0, #20]
   1fa70:	ldr	r3, [pc, #240]	; 1fb68 <myhtml_rules_init@@Base+0x164>
   1fa74:	ldr	r3, [r4, r3]
   1fa78:	str	r3, [r0, #24]
   1fa7c:	ldr	r3, [pc, #232]	; 1fb6c <myhtml_rules_init@@Base+0x168>
   1fa80:	ldr	r3, [r4, r3]
   1fa84:	str	r3, [r0, #28]
   1fa88:	ldr	r3, [pc, #224]	; 1fb70 <myhtml_rules_init@@Base+0x16c>
   1fa8c:	ldr	r3, [r4, r3]
   1fa90:	str	r3, [r0, #32]
   1fa94:	ldr	r3, [pc, #216]	; 1fb74 <myhtml_rules_init@@Base+0x170>
   1fa98:	ldr	r3, [r4, r3]
   1fa9c:	str	r3, [r0, #36]	; 0x24
   1faa0:	ldr	r3, [pc, #208]	; 1fb78 <myhtml_rules_init@@Base+0x174>
   1faa4:	ldr	r3, [r4, r3]
   1faa8:	str	r3, [r0, #40]	; 0x28
   1faac:	ldr	r3, [pc, #200]	; 1fb7c <myhtml_rules_init@@Base+0x178>
   1fab0:	ldr	r3, [r4, r3]
   1fab4:	str	r3, [r0, #44]	; 0x2c
   1fab8:	ldr	r3, [pc, #192]	; 1fb80 <myhtml_rules_init@@Base+0x17c>
   1fabc:	ldr	r3, [r4, r3]
   1fac0:	str	r3, [r0, #48]	; 0x30
   1fac4:	ldr	r3, [pc, #184]	; 1fb84 <myhtml_rules_init@@Base+0x180>
   1fac8:	ldr	r3, [r4, r3]
   1facc:	str	r3, [r0, #52]	; 0x34
   1fad0:	ldr	r3, [pc, #176]	; 1fb88 <myhtml_rules_init@@Base+0x184>
   1fad4:	ldr	r3, [r4, r3]
   1fad8:	str	r3, [r0, #56]	; 0x38
   1fadc:	ldr	r3, [pc, #168]	; 1fb8c <myhtml_rules_init@@Base+0x188>
   1fae0:	ldr	r3, [r4, r3]
   1fae4:	str	r3, [r0, #60]	; 0x3c
   1fae8:	ldr	r3, [pc, #160]	; 1fb90 <myhtml_rules_init@@Base+0x18c>
   1faec:	ldr	r3, [r4, r3]
   1faf0:	str	r3, [r0, #64]	; 0x40
   1faf4:	ldr	r3, [pc, #152]	; 1fb94 <myhtml_rules_init@@Base+0x190>
   1faf8:	ldr	r3, [r4, r3]
   1fafc:	str	r3, [r0, #68]	; 0x44
   1fb00:	ldr	r3, [pc, #144]	; 1fb98 <myhtml_rules_init@@Base+0x194>
   1fb04:	ldr	r3, [r4, r3]
   1fb08:	str	r3, [r0, #72]	; 0x48
   1fb0c:	ldr	r3, [pc, #136]	; 1fb9c <myhtml_rules_init@@Base+0x198>
   1fb10:	ldr	r3, [r4, r3]
   1fb14:	str	r3, [r0, #76]	; 0x4c
   1fb18:	ldr	r3, [pc, #128]	; 1fba0 <myhtml_rules_init@@Base+0x19c>
   1fb1c:	ldr	r3, [r4, r3]
   1fb20:	str	r3, [r0, #80]	; 0x50
   1fb24:	ldr	r3, [pc, #120]	; 1fba4 <myhtml_rules_init@@Base+0x1a0>
   1fb28:	ldr	r3, [r4, r3]
   1fb2c:	str	r3, [r0, #84]	; 0x54
   1fb30:	ldr	r3, [pc, #112]	; 1fba8 <myhtml_rules_init@@Base+0x1a4>
   1fb34:	ldr	r3, [r4, r3]
   1fb38:	str	r3, [r0, #88]	; 0x58
   1fb3c:	mov	r0, #0
   1fb40:	pop	{r4, r5, r6, pc}
   1fb44:	movw	r0, #36964	; 0x9064
   1fb48:	pop	{r4, r5, r6, pc}
   1fb4c:	ldrdeq	r0, [pc], -r8
   1fb50:	andeq	r0, r0, r0, lsr #16
   1fb54:	andeq	r0, r0, ip, asr #18
   1fb58:	andeq	r0, r0, r8, asr r9
   1fb5c:	andeq	r0, r0, r4, lsr #15
   1fb60:	strdeq	r0, [r0], -r8
   1fb64:	andeq	r0, r0, r4, lsr #18
   1fb68:	muleq	r0, r0, r8
   1fb6c:	strdeq	r0, [r0], -r8
   1fb70:	ldrdeq	r0, [r0], -r4
   1fb74:	ldrdeq	r0, [r0], -ip
   1fb78:	andeq	r0, r0, ip, lsl r9
   1fb7c:	andeq	r0, r0, ip, lsl #18
   1fb80:	andeq	r0, r0, r4, lsl r9
   1fb84:	andeq	r0, r0, r0, lsr #15
   1fb88:	muleq	r0, ip, r9
   1fb8c:	andeq	r0, r0, r0, lsr r8
   1fb90:	muleq	r0, r4, r8
   1fb94:	andeq	r0, r0, r8, asr r7
   1fb98:	andeq	r0, r0, r4, asr #19
   1fb9c:	andeq	r0, r0, r8, ror #18
   1fba0:	andeq	r0, r0, ip, lsl r7
   1fba4:	andeq	r0, r0, r8, lsl r7
   1fba8:	andeq	r0, r0, r8, lsl r8
   1fbac:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fbb0:	mov	r6, r3
   1fbb4:	mov	r4, #0
   1fbb8:	mov	r9, r1
   1fbbc:	mov	r7, r0
   1fbc0:	mov	r5, r2
   1fbc4:	sub	r8, r0, #1
   1fbc8:	ldr	r3, [pc, #388]	; 1fd54 <myhtml_rules_init@@Base+0x350>
   1fbcc:	mov	r1, r4
   1fbd0:	ldr	sl, [pc, #384]	; 1fd58 <myhtml_rules_init@@Base+0x354>
   1fbd4:	ldr	fp, [pc, #384]	; 1fd5c <myhtml_rules_init@@Base+0x358>
   1fbd8:	add	r3, pc, r3
   1fbdc:	add	sl, pc, sl
   1fbe0:	str	r3, [sp, #4]
   1fbe4:	add	fp, pc, fp
   1fbe8:	cmp	r4, r9
   1fbec:	bne	1fc04 <myhtml_rules_init@@Base+0x200>
   1fbf0:	cmp	r1, #0
   1fbf4:	bne	1fd38 <myhtml_rules_init@@Base+0x334>
   1fbf8:	mov	r0, #0
   1fbfc:	add	sp, sp, #12
   1fc00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fc04:	ldrb	r3, [r8, #1]!
   1fc08:	cmp	r3, #60	; 0x3c
   1fc0c:	beq	1fcb0 <myhtml_rules_init@@Base+0x2ac>
   1fc10:	bhi	1fc24 <myhtml_rules_init@@Base+0x220>
   1fc14:	cmp	r3, #38	; 0x26
   1fc18:	beq	1fc60 <myhtml_rules_init@@Base+0x25c>
   1fc1c:	add	r1, r1, #1
   1fc20:	b	1fc88 <myhtml_rules_init@@Base+0x284>
   1fc24:	cmp	r3, #62	; 0x3e
   1fc28:	beq	1fce4 <myhtml_rules_init@@Base+0x2e0>
   1fc2c:	cmp	r3, #160	; 0xa0
   1fc30:	bne	1fc1c <myhtml_rules_init@@Base+0x218>
   1fc34:	cmp	r4, #0
   1fc38:	beq	1fc1c <myhtml_rules_init@@Base+0x218>
   1fc3c:	ldrb	r3, [r8, #-1]
   1fc40:	cmp	r3, #194	; 0xc2
   1fc44:	bne	1fc1c <myhtml_rules_init@@Base+0x218>
   1fc48:	cmp	r1, #0
   1fc4c:	bne	1fd18 <myhtml_rules_init@@Base+0x314>
   1fc50:	mov	r2, r6
   1fc54:	mov	r1, #6
   1fc58:	mov	r0, fp
   1fc5c:	b	1fc78 <myhtml_rules_init@@Base+0x274>
   1fc60:	cmp	r1, #0
   1fc64:	bne	1fc90 <myhtml_rules_init@@Base+0x28c>
   1fc68:	ldr	r0, [pc, #240]	; 1fd60 <myhtml_rules_init@@Base+0x35c>
   1fc6c:	mov	r2, r6
   1fc70:	mov	r1, #5
   1fc74:	add	r0, pc, r0
   1fc78:	blx	r5
   1fc7c:	cmp	r0, #0
   1fc80:	bne	1fca8 <myhtml_rules_init@@Base+0x2a4>
   1fc84:	mov	r1, #0
   1fc88:	add	r4, r4, #1
   1fc8c:	b	1fbe8 <myhtml_rules_init@@Base+0x1e4>
   1fc90:	sub	r0, r4, r1
   1fc94:	mov	r2, r6
   1fc98:	add	r0, r7, r0
   1fc9c:	blx	r5
   1fca0:	cmp	r0, #0
   1fca4:	beq	1fc68 <myhtml_rules_init@@Base+0x264>
   1fca8:	mov	r0, #2
   1fcac:	b	1fbfc <myhtml_rules_init@@Base+0x1f8>
   1fcb0:	cmp	r1, #0
   1fcb4:	bne	1fcc8 <myhtml_rules_init@@Base+0x2c4>
   1fcb8:	mov	r2, r6
   1fcbc:	mov	r1, #4
   1fcc0:	ldr	r0, [sp, #4]
   1fcc4:	b	1fc78 <myhtml_rules_init@@Base+0x274>
   1fcc8:	sub	r0, r4, r1
   1fccc:	mov	r2, r6
   1fcd0:	add	r0, r7, r0
   1fcd4:	blx	r5
   1fcd8:	cmp	r0, #0
   1fcdc:	beq	1fcb8 <myhtml_rules_init@@Base+0x2b4>
   1fce0:	b	1fca8 <myhtml_rules_init@@Base+0x2a4>
   1fce4:	cmp	r1, #0
   1fce8:	bne	1fcfc <myhtml_rules_init@@Base+0x2f8>
   1fcec:	mov	r2, r6
   1fcf0:	mov	r1, #4
   1fcf4:	mov	r0, sl
   1fcf8:	b	1fc78 <myhtml_rules_init@@Base+0x274>
   1fcfc:	sub	r0, r4, r1
   1fd00:	mov	r2, r6
   1fd04:	add	r0, r7, r0
   1fd08:	blx	r5
   1fd0c:	cmp	r0, #0
   1fd10:	beq	1fcec <myhtml_rules_init@@Base+0x2e8>
   1fd14:	b	1fca8 <myhtml_rules_init@@Base+0x2a4>
   1fd18:	sub	r0, r4, r1
   1fd1c:	mov	r2, r6
   1fd20:	sub	r1, r1, #1
   1fd24:	add	r0, r7, r0
   1fd28:	blx	r5
   1fd2c:	cmp	r0, #0
   1fd30:	beq	1fc50 <myhtml_rules_init@@Base+0x24c>
   1fd34:	b	1fca8 <myhtml_rules_init@@Base+0x2a4>
   1fd38:	sub	r0, r4, r1
   1fd3c:	mov	r2, r6
   1fd40:	add	r0, r7, r0
   1fd44:	blx	r5
   1fd48:	cmp	r0, #0
   1fd4c:	beq	1fbf8 <myhtml_rules_init@@Base+0x1f4>
   1fd50:	b	1fca8 <myhtml_rules_init@@Base+0x2a4>
   1fd54:	andeq	r6, sp, fp, ror #18
   1fd58:	andeq	r6, sp, ip, ror #18
   1fd5c:	andeq	r6, sp, r9, ror #18
   1fd60:	andeq	r6, sp, r9, asr #17
   1fd64:	ldr	r3, [r0, #4]
   1fd68:	push	{r0, r1, r4, r5, r6, lr}
   1fd6c:	cmp	r3, #64	; 0x40
   1fd70:	beq	1fe6c <myhtml_rules_init@@Base+0x468>
   1fd74:	bhi	1fe48 <myhtml_rules_init@@Base+0x444>
   1fd78:	cmp	r3, #19
   1fd7c:	beq	1fe6c <myhtml_rules_init@@Base+0x468>
   1fd80:	bhi	1fe24 <myhtml_rules_init@@Base+0x420>
   1fd84:	cmp	r3, #10
   1fd88:	beq	1fe6c <myhtml_rules_init@@Base+0x468>
   1fd8c:	bhi	1fda8 <myhtml_rules_init@@Base+0x3a4>
   1fd90:	sub	ip, r3, #1
   1fd94:	cmp	ip, #2
   1fd98:	bhi	1fdb0 <myhtml_rules_init@@Base+0x3ac>
   1fd9c:	mov	r0, #0
   1fda0:	add	sp, sp, #8
   1fda4:	pop	{r4, r5, r6, pc}
   1fda8:	cmp	r3, #15
   1fdac:	beq	1fe6c <myhtml_rules_init@@Base+0x468>
   1fdb0:	mov	r5, r2
   1fdb4:	mov	r4, r1
   1fdb8:	ldr	r0, [r0, #40]	; 0x28
   1fdbc:	mov	r1, r3
   1fdc0:	add	r2, sp, #4
   1fdc4:	bl	10a84 <myhtml_tag_name_by_id@plt>
   1fdc8:	mov	r6, r0
   1fdcc:	ldr	r0, [pc, #212]	; 1fea8 <myhtml_rules_init@@Base+0x4a4>
   1fdd0:	mov	r2, r5
   1fdd4:	mov	r1, #2
   1fdd8:	add	r0, pc, r0
   1fddc:	blx	r4
   1fde0:	cmp	r0, #0
   1fde4:	bne	1fe1c <myhtml_rules_init@@Base+0x418>
   1fde8:	mov	r2, r5
   1fdec:	mov	r0, r6
   1fdf0:	ldr	r1, [sp, #4]
   1fdf4:	blx	r4
   1fdf8:	cmp	r0, #0
   1fdfc:	bne	1fe1c <myhtml_rules_init@@Base+0x418>
   1fe00:	ldr	r0, [pc, #164]	; 1feac <myhtml_rules_init@@Base+0x4a8>
   1fe04:	mov	r2, r5
   1fe08:	mov	r1, #1
   1fe0c:	add	r0, pc, r0
   1fe10:	blx	r4
   1fe14:	cmp	r0, #0
   1fe18:	beq	1fd9c <myhtml_rules_init@@Base+0x398>
   1fe1c:	mov	r0, #2
   1fe20:	b	1fda0 <myhtml_rules_init@@Base+0x39c>
   1fe24:	cmp	r3, #31
   1fe28:	beq	1fe6c <myhtml_rules_init@@Base+0x468>
   1fe2c:	bhi	1fe38 <myhtml_rules_init@@Base+0x434>
   1fe30:	cmp	r3, #24
   1fe34:	b	1fdac <myhtml_rules_init@@Base+0x3a8>
   1fe38:	cmp	r3, #46	; 0x2e
   1fe3c:	beq	1fe6c <myhtml_rules_init@@Base+0x468>
   1fe40:	cmp	r3, #53	; 0x35
   1fe44:	b	1fdac <myhtml_rules_init@@Base+0x3a8>
   1fe48:	cmp	r3, #86	; 0x56
   1fe4c:	beq	1fe6c <myhtml_rules_init@@Base+0x468>
   1fe50:	bhi	1fe84 <myhtml_rules_init@@Base+0x480>
   1fe54:	cmp	r3, #74	; 0x4a
   1fe58:	beq	1fe6c <myhtml_rules_init@@Base+0x468>
   1fe5c:	bhi	1fe7c <myhtml_rules_init@@Base+0x478>
   1fe60:	sub	ip, r3, #69	; 0x45
   1fe64:	cmp	ip, #1
   1fe68:	bhi	1fdb0 <myhtml_rules_init@@Base+0x3ac>
   1fe6c:	ldr	ip, [r0, #8]
   1fe70:	cmp	ip, #1
   1fe74:	bne	1fdb0 <myhtml_rules_init@@Base+0x3ac>
   1fe78:	b	1fd9c <myhtml_rules_init@@Base+0x398>
   1fe7c:	cmp	r3, #78	; 0x4e
   1fe80:	b	1fdac <myhtml_rules_init@@Base+0x3a8>
   1fe84:	cmp	r3, #116	; 0x74
   1fe88:	beq	1fe6c <myhtml_rules_init@@Base+0x468>
   1fe8c:	bhi	1fe98 <myhtml_rules_init@@Base+0x494>
   1fe90:	cmp	r3, #100	; 0x64
   1fe94:	b	1fdac <myhtml_rules_init@@Base+0x3a8>
   1fe98:	cmp	r3, #136	; 0x88
   1fe9c:	beq	1fe6c <myhtml_rules_init@@Base+0x468>
   1fea0:	cmp	r3, #142	; 0x8e
   1fea4:	b	1fdac <myhtml_rules_init@@Base+0x3a8>
   1fea8:	andeq	r6, sp, ip, ror r7
   1feac:	andeq	r6, sp, r2, asr r7

0001feb0 <myhtml_serialization_node_callback@@Base>:
   1feb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1feb4:	mov	r4, r1
   1feb8:	sub	sp, sp, #28
   1febc:	mov	r6, r0
   1fec0:	mov	r5, r2
   1fec4:	ldr	r1, [r0, #4]
   1fec8:	cmp	r1, #2
   1fecc:	beq	1ff80 <myhtml_serialization_node_callback@@Base+0xd0>
   1fed0:	cmp	r1, #3
   1fed4:	beq	1ffdc <myhtml_serialization_node_callback@@Base+0x12c>
   1fed8:	cmp	r1, #1
   1fedc:	bne	201cc <myhtml_serialization_node_callback@@Base+0x31c>
   1fee0:	ldr	r3, [r0, #32]
   1fee4:	cmp	r3, #0
   1fee8:	beq	1ff24 <myhtml_serialization_node_callback@@Base+0x74>
   1feec:	ldr	r0, [r3, #4]
   1fef0:	cmp	r0, #0
   1fef4:	beq	1ff24 <myhtml_serialization_node_callback@@Base+0x74>
   1fef8:	ldr	r2, [r6, #24]
   1fefc:	ldr	r1, [r3, #12]
   1ff00:	cmp	r2, #0
   1ff04:	bne	1ff30 <myhtml_serialization_node_callback@@Base+0x80>
   1ff08:	mov	r3, r5
   1ff0c:	mov	r2, r4
   1ff10:	bl	1fbac <myhtml_rules_init@@Base+0x1a8>
   1ff14:	cmp	r0, #0
   1ff18:	beq	1ff24 <myhtml_serialization_node_callback@@Base+0x74>
   1ff1c:	mov	r0, #2
   1ff20:	b	1ff28 <myhtml_serialization_node_callback@@Base+0x78>
   1ff24:	mov	r0, #0
   1ff28:	add	sp, sp, #28
   1ff2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ff30:	ldr	r3, [r2, #4]
   1ff34:	cmp	r3, #101	; 0x65
   1ff38:	beq	1ff58 <myhtml_serialization_node_callback@@Base+0xa8>
   1ff3c:	bhi	1ff64 <myhtml_serialization_node_callback@@Base+0xb4>
   1ff40:	cmp	r3, #67	; 0x43
   1ff44:	beq	1ff58 <myhtml_serialization_node_callback@@Base+0xa8>
   1ff48:	bcc	1ff08 <myhtml_serialization_node_callback@@Base+0x58>
   1ff4c:	sub	r3, r3, #91	; 0x5b
   1ff50:	cmp	r3, #1
   1ff54:	bhi	1ff08 <myhtml_serialization_node_callback@@Base+0x58>
   1ff58:	mov	r2, r5
   1ff5c:	blx	r4
   1ff60:	b	1ff14 <myhtml_serialization_node_callback@@Base+0x64>
   1ff64:	cmp	r3, #120	; 0x78
   1ff68:	beq	1ff58 <myhtml_serialization_node_callback@@Base+0xa8>
   1ff6c:	cmp	r3, #143	; 0x8f
   1ff70:	beq	1ff58 <myhtml_serialization_node_callback@@Base+0xa8>
   1ff74:	cmp	r3, #112	; 0x70
   1ff78:	bne	1ff08 <myhtml_serialization_node_callback@@Base+0x58>
   1ff7c:	b	1ff58 <myhtml_serialization_node_callback@@Base+0xa8>
   1ff80:	ldr	r0, [pc, #1336]	; 204c0 <myhtml_serialization_node_callback@@Base+0x610>
   1ff84:	mov	r1, #4
   1ff88:	add	r0, pc, r0
   1ff8c:	blx	r4
   1ff90:	cmp	r0, #0
   1ff94:	bne	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   1ff98:	ldr	r3, [r6, #32]
   1ff9c:	cmp	r3, #0
   1ffa0:	bne	1ffb8 <myhtml_serialization_node_callback@@Base+0x108>
   1ffa4:	ldr	r0, [pc, #1304]	; 204c4 <myhtml_serialization_node_callback@@Base+0x614>
   1ffa8:	mov	r2, r5
   1ffac:	mov	r1, #3
   1ffb0:	add	r0, pc, r0
   1ffb4:	b	1ff5c <myhtml_serialization_node_callback@@Base+0xac>
   1ffb8:	ldr	r0, [r3, #4]
   1ffbc:	cmp	r0, #0
   1ffc0:	beq	1ffa4 <myhtml_serialization_node_callback@@Base+0xf4>
   1ffc4:	mov	r2, r5
   1ffc8:	ldr	r1, [r3, #12]
   1ffcc:	blx	r4
   1ffd0:	cmp	r0, #0
   1ffd4:	beq	1ffa4 <myhtml_serialization_node_callback@@Base+0xf4>
   1ffd8:	b	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   1ffdc:	ldr	r0, [pc, #1252]	; 204c8 <myhtml_serialization_node_callback@@Base+0x618>
   1ffe0:	mov	r1, #9
   1ffe4:	add	r0, pc, r0
   1ffe8:	blx	r4
   1ffec:	cmp	r0, #0
   1fff0:	bne	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   1fff4:	ldr	r0, [pc, #1232]	; 204cc <myhtml_serialization_node_callback@@Base+0x61c>
   1fff8:	mov	r2, r5
   1fffc:	mov	r1, #1
   20000:	add	r0, pc, r0
   20004:	blx	r4
   20008:	cmp	r0, #0
   2000c:	bne	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   20010:	ldr	r3, [r6, #32]
   20014:	cmp	r3, #0
   20018:	bne	20030 <myhtml_serialization_node_callback@@Base+0x180>
   2001c:	ldr	r0, [pc, #1196]	; 204d0 <myhtml_serialization_node_callback@@Base+0x620>
   20020:	mov	r2, r5
   20024:	mov	r1, #1
   20028:	add	r0, pc, r0
   2002c:	b	1ff5c <myhtml_serialization_node_callback@@Base+0xac>
   20030:	ldr	r6, [r3, #40]	; 0x28
   20034:	cmp	r6, #0
   20038:	beq	2001c <myhtml_serialization_node_callback@@Base+0x16c>
   2003c:	ldr	r0, [r6, #8]
   20040:	cmp	r0, #0
   20044:	beq	2001c <myhtml_serialization_node_callback@@Base+0x16c>
   20048:	ldr	r1, [r6, #16]
   2004c:	cmp	r1, #0
   20050:	beq	2001c <myhtml_serialization_node_callback@@Base+0x16c>
   20054:	mov	r2, r5
   20058:	blx	r4
   2005c:	cmp	r0, #0
   20060:	bne	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   20064:	ldr	r7, [r6]
   20068:	cmp	r7, #0
   2006c:	beq	2001c <myhtml_serialization_node_callback@@Base+0x16c>
   20070:	ldr	r3, [r7, #36]	; 0x24
   20074:	cmp	r3, #6
   20078:	bne	2001c <myhtml_serialization_node_callback@@Base+0x16c>
   2007c:	ldr	r1, [pc, #1104]	; 204d4 <myhtml_serialization_node_callback@@Base+0x624>
   20080:	ldr	r0, [r7, #28]
   20084:	add	r1, pc, r1
   20088:	bl	104c0 <mycore_strcasecmp@plt>
   2008c:	subs	r6, r0, #0
   20090:	ldreq	r7, [r7]
   20094:	beq	2011c <myhtml_serialization_node_callback@@Base+0x26c>
   20098:	ldr	r1, [pc, #1080]	; 204d8 <myhtml_serialization_node_callback@@Base+0x628>
   2009c:	ldr	r0, [r7, #28]
   200a0:	add	r1, pc, r1
   200a4:	bl	104c0 <mycore_strcasecmp@plt>
   200a8:	cmp	r0, #0
   200ac:	bne	2001c <myhtml_serialization_node_callback@@Base+0x16c>
   200b0:	ldr	r6, [r7]
   200b4:	cmp	r6, #0
   200b8:	beq	2001c <myhtml_serialization_node_callback@@Base+0x16c>
   200bc:	ldr	r7, [r6]
   200c0:	ldr	r3, [r6, #36]	; 0x24
   200c4:	cmp	r3, #0
   200c8:	beq	2011c <myhtml_serialization_node_callback@@Base+0x26c>
   200cc:	ldr	r0, [pc, #1032]	; 204dc <myhtml_serialization_node_callback@@Base+0x62c>
   200d0:	mov	r2, r5
   200d4:	mov	r1, #9
   200d8:	add	r0, pc, r0
   200dc:	blx	r4
   200e0:	cmp	r0, #0
   200e4:	bne	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   200e8:	mov	r2, r5
   200ec:	ldr	r0, [r6, #28]
   200f0:	ldr	r1, [r6, #36]	; 0x24
   200f4:	blx	r4
   200f8:	cmp	r0, #0
   200fc:	bne	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   20100:	ldr	r0, [pc, #984]	; 204e0 <myhtml_serialization_node_callback@@Base+0x630>
   20104:	mov	r2, r5
   20108:	mov	r1, #1
   2010c:	add	r0, pc, r0
   20110:	blx	r4
   20114:	cmp	r0, #0
   20118:	bne	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   2011c:	cmp	r7, #0
   20120:	beq	2001c <myhtml_serialization_node_callback@@Base+0x16c>
   20124:	ldr	r3, [r7, #36]	; 0x24
   20128:	cmp	r3, #0
   2012c:	beq	2001c <myhtml_serialization_node_callback@@Base+0x16c>
   20130:	cmp	r6, #0
   20134:	beq	2018c <myhtml_serialization_node_callback@@Base+0x2dc>
   20138:	ldr	r3, [r6, #36]	; 0x24
   2013c:	cmp	r3, #0
   20140:	beq	2018c <myhtml_serialization_node_callback@@Base+0x2dc>
   20144:	ldr	r0, [pc, #920]	; 204e4 <myhtml_serialization_node_callback@@Base+0x634>
   20148:	mov	r2, r5
   2014c:	mov	r1, #2
   20150:	add	r0, pc, r0
   20154:	blx	r4
   20158:	cmp	r0, #0
   2015c:	bne	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   20160:	ldr	r0, [r7, #28]
   20164:	cmp	r0, #0
   20168:	bne	201ac <myhtml_serialization_node_callback@@Base+0x2fc>
   2016c:	ldr	r0, [pc, #884]	; 204e8 <myhtml_serialization_node_callback@@Base+0x638>
   20170:	mov	r2, r5
   20174:	mov	r1, #1
   20178:	add	r0, pc, r0
   2017c:	blx	r4
   20180:	cmp	r0, #0
   20184:	beq	2001c <myhtml_serialization_node_callback@@Base+0x16c>
   20188:	b	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   2018c:	ldr	r0, [pc, #856]	; 204ec <myhtml_serialization_node_callback@@Base+0x63c>
   20190:	mov	r2, r5
   20194:	mov	r1, #7
   20198:	add	r0, pc, r0
   2019c:	blx	r4
   201a0:	cmp	r0, #0
   201a4:	beq	20144 <myhtml_serialization_node_callback@@Base+0x294>
   201a8:	b	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   201ac:	ldr	r1, [r7, #36]	; 0x24
   201b0:	cmp	r1, #0
   201b4:	beq	2016c <myhtml_serialization_node_callback@@Base+0x2bc>
   201b8:	mov	r2, r5
   201bc:	blx	r4
   201c0:	cmp	r0, #0
   201c4:	beq	2016c <myhtml_serialization_node_callback@@Base+0x2bc>
   201c8:	b	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   201cc:	add	r2, sp, #16
   201d0:	ldr	r0, [r0, #40]	; 0x28
   201d4:	bl	10a84 <myhtml_tag_name_by_id@plt>
   201d8:	mov	r7, r0
   201dc:	ldr	r0, [pc, #780]	; 204f0 <myhtml_serialization_node_callback@@Base+0x640>
   201e0:	mov	r2, r5
   201e4:	mov	r1, #1
   201e8:	add	r0, pc, r0
   201ec:	blx	r4
   201f0:	cmp	r0, #0
   201f4:	bne	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   201f8:	mov	r2, r5
   201fc:	mov	r0, r7
   20200:	ldr	r1, [sp, #16]
   20204:	blx	r4
   20208:	cmp	r0, #0
   2020c:	bne	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   20210:	ldr	r3, [r6, #32]
   20214:	cmp	r3, #0
   20218:	bne	2023c <myhtml_serialization_node_callback@@Base+0x38c>
   2021c:	ldr	r0, [pc, #720]	; 204f4 <myhtml_serialization_node_callback@@Base+0x644>
   20220:	mov	r2, r5
   20224:	mov	r1, #1
   20228:	add	r0, pc, r0
   2022c:	blx	r4
   20230:	cmp	r0, #0
   20234:	beq	1ff28 <myhtml_serialization_node_callback@@Base+0x78>
   20238:	b	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   2023c:	ldr	r7, [r3, #40]	; 0x28
   20240:	ldr	r3, [pc, #688]	; 204f8 <myhtml_serialization_node_callback@@Base+0x648>
   20244:	add	r3, pc, r3
   20248:	str	r3, [sp, #8]
   2024c:	ldr	r3, [pc, #680]	; 204fc <myhtml_serialization_node_callback@@Base+0x64c>
   20250:	add	r3, pc, r3
   20254:	str	r3, [sp, #12]
   20258:	cmp	r7, #0
   2025c:	beq	2021c <myhtml_serialization_node_callback@@Base+0x36c>
   20260:	mov	r2, r5
   20264:	mov	r1, #1
   20268:	ldr	r0, [sp, #8]
   2026c:	blx	r4
   20270:	cmp	r0, #0
   20274:	bne	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   20278:	ldr	r6, [r7, #64]	; 0x40
   2027c:	cmp	r6, #5
   20280:	beq	202a8 <myhtml_serialization_node_callback@@Base+0x3f8>
   20284:	cmp	r6, #6
   20288:	beq	20330 <myhtml_serialization_node_callback@@Base+0x480>
   2028c:	cmp	r6, #4
   20290:	bne	202c4 <myhtml_serialization_node_callback@@Base+0x414>
   20294:	ldr	r0, [pc, #612]	; 20500 <myhtml_serialization_node_callback@@Base+0x650>
   20298:	mov	r2, r5
   2029c:	mov	r1, #6
   202a0:	add	r0, pc, r0
   202a4:	b	202b8 <myhtml_serialization_node_callback@@Base+0x408>
   202a8:	ldr	r0, [pc, #596]	; 20504 <myhtml_serialization_node_callback@@Base+0x654>
   202ac:	mov	r2, r5
   202b0:	mov	r1, #4
   202b4:	add	r0, pc, r0
   202b8:	blx	r4
   202bc:	cmp	r0, #0
   202c0:	bne	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   202c4:	add	r8, sp, #20
   202c8:	mov	r0, r7
   202cc:	mov	r1, r8
   202d0:	bl	10a9c <myhtml_attribute_key@plt>
   202d4:	cmp	r0, #0
   202d8:	bne	20370 <myhtml_serialization_node_callback@@Base+0x4c0>
   202dc:	ldr	r0, [pc, #548]	; 20508 <myhtml_serialization_node_callback@@Base+0x658>
   202e0:	mov	r2, r5
   202e4:	mov	r1, #2
   202e8:	add	r0, pc, r0
   202ec:	blx	r4
   202f0:	subs	r6, r0, #0
   202f4:	bne	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   202f8:	mov	r1, r8
   202fc:	mov	r0, r7
   20300:	bl	10424 <myhtml_attribute_value@plt>
   20304:	subs	r8, r0, #0
   20308:	bne	20388 <myhtml_serialization_node_callback@@Base+0x4d8>
   2030c:	ldr	r0, [pc, #504]	; 2050c <myhtml_serialization_node_callback@@Base+0x65c>
   20310:	mov	r2, r5
   20314:	mov	r1, #1
   20318:	add	r0, pc, r0
   2031c:	blx	r4
   20320:	cmp	r0, #0
   20324:	bne	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   20328:	ldr	r7, [r7]
   2032c:	b	20258 <myhtml_serialization_node_callback@@Base+0x3a8>
   20330:	ldr	r0, [r7, #8]
   20334:	cmp	r0, #0
   20338:	beq	202c4 <myhtml_serialization_node_callback@@Base+0x414>
   2033c:	ldr	r3, [r7, #16]
   20340:	cmp	r3, #5
   20344:	bne	202c4 <myhtml_serialization_node_callback@@Base+0x414>
   20348:	ldr	r1, [pc, #448]	; 20510 <myhtml_serialization_node_callback@@Base+0x660>
   2034c:	add	r1, pc, r1
   20350:	bl	fb9c <mycore_strcmp@plt>
   20354:	cmp	r0, #0
   20358:	beq	202c4 <myhtml_serialization_node_callback@@Base+0x414>
   2035c:	ldr	r0, [pc, #432]	; 20514 <myhtml_serialization_node_callback@@Base+0x664>
   20360:	mov	r2, r5
   20364:	mov	r1, r6
   20368:	add	r0, pc, r0
   2036c:	b	202b8 <myhtml_serialization_node_callback@@Base+0x408>
   20370:	mov	r2, r5
   20374:	ldr	r1, [sp, #20]
   20378:	blx	r4
   2037c:	cmp	r0, #0
   20380:	beq	202dc <myhtml_serialization_node_callback@@Base+0x42c>
   20384:	b	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   20388:	ldr	r3, [pc, #392]	; 20518 <myhtml_serialization_node_callback@@Base+0x668>
   2038c:	sub	sl, r8, #1
   20390:	mov	r1, r6
   20394:	ldr	fp, [pc, #384]	; 2051c <myhtml_serialization_node_callback@@Base+0x66c>
   20398:	ldr	r9, [sp, #20]
   2039c:	add	r3, pc, r3
   203a0:	add	fp, pc, fp
   203a4:	str	r3, [sp, #4]
   203a8:	cmp	r9, r6
   203ac:	bne	203d4 <myhtml_serialization_node_callback@@Base+0x524>
   203b0:	cmp	r1, #0
   203b4:	beq	2030c <myhtml_serialization_node_callback@@Base+0x45c>
   203b8:	sub	r0, r9, r1
   203bc:	mov	r2, r5
   203c0:	add	r0, r8, r0
   203c4:	blx	r4
   203c8:	cmp	r0, #0
   203cc:	beq	2030c <myhtml_serialization_node_callback@@Base+0x45c>
   203d0:	b	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   203d4:	ldrb	r3, [sl, #1]!
   203d8:	cmp	r3, #38	; 0x26
   203dc:	beq	20408 <myhtml_serialization_node_callback@@Base+0x558>
   203e0:	cmp	r3, #160	; 0xa0
   203e4:	beq	2046c <myhtml_serialization_node_callback@@Base+0x5bc>
   203e8:	cmp	r3, #34	; 0x22
   203ec:	bne	204b8 <myhtml_serialization_node_callback@@Base+0x608>
   203f0:	cmp	r1, #0
   203f4:	bne	20450 <myhtml_serialization_node_callback@@Base+0x5a0>
   203f8:	mov	r2, r5
   203fc:	mov	r1, #6
   20400:	mov	r0, fp
   20404:	b	2041c <myhtml_serialization_node_callback@@Base+0x56c>
   20408:	cmp	r1, #0
   2040c:	bne	20434 <myhtml_serialization_node_callback@@Base+0x584>
   20410:	ldr	r0, [sp, #12]
   20414:	mov	r2, r5
   20418:	mov	r1, #5
   2041c:	blx	r4
   20420:	cmp	r0, #0
   20424:	bne	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   20428:	mov	r1, #0
   2042c:	add	r6, r6, #1
   20430:	b	203a8 <myhtml_serialization_node_callback@@Base+0x4f8>
   20434:	sub	r0, r6, r1
   20438:	mov	r2, r5
   2043c:	add	r0, r8, r0
   20440:	blx	r4
   20444:	cmp	r0, #0
   20448:	beq	20410 <myhtml_serialization_node_callback@@Base+0x560>
   2044c:	b	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   20450:	sub	r0, r6, r1
   20454:	mov	r2, r5
   20458:	add	r0, r8, r0
   2045c:	blx	r4
   20460:	cmp	r0, #0
   20464:	beq	203f8 <myhtml_serialization_node_callback@@Base+0x548>
   20468:	b	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   2046c:	cmp	r6, #0
   20470:	beq	204b8 <myhtml_serialization_node_callback@@Base+0x608>
   20474:	ldrb	r3, [sl, #-1]
   20478:	cmp	r3, #194	; 0xc2
   2047c:	bne	204b8 <myhtml_serialization_node_callback@@Base+0x608>
   20480:	cmp	r1, #0
   20484:	bne	20498 <myhtml_serialization_node_callback@@Base+0x5e8>
   20488:	mov	r2, r5
   2048c:	mov	r1, #6
   20490:	ldr	r0, [sp, #4]
   20494:	b	2041c <myhtml_serialization_node_callback@@Base+0x56c>
   20498:	sub	r0, r6, r1
   2049c:	mov	r2, r5
   204a0:	sub	r1, r1, #1
   204a4:	add	r0, r8, r0
   204a8:	blx	r4
   204ac:	cmp	r0, #0
   204b0:	beq	20488 <myhtml_serialization_node_callback@@Base+0x5d8>
   204b4:	b	1ff1c <myhtml_serialization_node_callback@@Base+0x6c>
   204b8:	add	r1, r1, #1
   204bc:	b	2042c <myhtml_serialization_node_callback@@Base+0x57c>
   204c0:	andeq	r6, sp, pc, asr #11
   204c4:	andeq	r6, sp, ip, lsr #11
   204c8:	andeq	r6, sp, ip, ror r5
   204cc:	andeq	r6, sp, sl, ror #10
   204d0:	andeq	r6, sp, r6, lsr r5
   204d4:	strdeq	r6, [sp], -sl
   204d8:	andeq	r6, sp, ip, asr #9
   204dc:	muleq	sp, fp, r4
   204e0:	andeq	r6, sp, pc, ror #8
   204e4:	andeq	r6, sp, sl, lsr #8
   204e8:	andeq	r6, sp, r3, lsl #8
   204ec:	andeq	r6, sp, r5, ror #7
   204f0:	muleq	sp, sp, r3
   204f4:	andeq	r6, sp, r6, lsr r3
   204f8:	andeq	r6, sp, r6, lsr #6
   204fc:	andeq	r6, sp, sp, ror #5
   20500:	strdeq	r6, [sp], -r9
   20504:	ldrdeq	r6, [sp], -r3
   20508:			; <UNDEFINED> instruction: 0x000d62b8
   2050c:	andeq	r6, sp, r3, ror #4
   20510:	andeq	r6, sp, r0, asr #4
   20514:	andeq	r6, sp, sl, lsr #4
   20518:			; <UNDEFINED> instruction: 0x000d61b1
   2051c:	andeq	r6, sp, r3, lsl #4

00020520 <myhtml_serialization_tree_callback@@Base>:
   20520:	push	{r4, r5, r6, r7, r8, lr}
   20524:	subs	r5, r0, #0
   20528:	mov	r6, r1
   2052c:	mov	r7, r2
   20530:	beq	20550 <myhtml_serialization_tree_callback@@Base+0x30>
   20534:	ldr	r3, [r5, #40]	; 0x28
   20538:	cmp	r3, #0
   2053c:	beq	20550 <myhtml_serialization_tree_callback@@Base+0x30>
   20540:	ldr	r3, [r3, #84]	; 0x54
   20544:	cmp	r3, r5
   20548:	ldreq	r4, [r5, #20]
   2054c:	beq	20554 <myhtml_serialization_tree_callback@@Base+0x34>
   20550:	mov	r4, r5
   20554:	cmp	r4, #0
   20558:	beq	20608 <myhtml_serialization_tree_callback@@Base+0xe8>
   2055c:	mov	r2, r7
   20560:	mov	r1, r6
   20564:	mov	r0, r4
   20568:	bl	10694 <myhtml_serialization_node_callback@plt>
   2056c:	cmp	r0, #0
   20570:	bne	205b0 <myhtml_serialization_tree_callback@@Base+0x90>
   20574:	ldr	r3, [r4, #20]
   20578:	cmp	r3, #0
   2057c:	movne	r4, r3
   20580:	bne	20554 <myhtml_serialization_tree_callback@@Base+0x34>
   20584:	cmp	r4, r5
   20588:	beq	205e0 <myhtml_serialization_tree_callback@@Base+0xc0>
   2058c:	ldr	r3, [r4, #16]
   20590:	cmp	r3, #0
   20594:	beq	205b8 <myhtml_serialization_tree_callback@@Base+0x98>
   20598:	mov	r2, r7
   2059c:	mov	r1, r6
   205a0:	mov	r0, r4
   205a4:	bl	1fd64 <myhtml_rules_init@@Base+0x360>
   205a8:	cmp	r0, #0
   205ac:	beq	205d8 <myhtml_serialization_tree_callback@@Base+0xb8>
   205b0:	mov	r0, #2
   205b4:	pop	{r4, r5, r6, r7, r8, pc}
   205b8:	mov	r2, r7
   205bc:	mov	r1, r6
   205c0:	mov	r0, r4
   205c4:	bl	1fd64 <myhtml_rules_init@@Base+0x360>
   205c8:	cmp	r0, #0
   205cc:	bne	205b0 <myhtml_serialization_tree_callback@@Base+0x90>
   205d0:	ldr	r4, [r4, #24]
   205d4:	b	20584 <myhtml_serialization_tree_callback@@Base+0x64>
   205d8:	ldr	r4, [r4, #16]
   205dc:	b	20554 <myhtml_serialization_tree_callback@@Base+0x34>
   205e0:	ldr	r3, [r4, #40]	; 0x28
   205e4:	ldr	r3, [r3, #84]	; 0x54
   205e8:	cmp	r3, r4
   205ec:	beq	20608 <myhtml_serialization_tree_callback@@Base+0xe8>
   205f0:	mov	r2, r7
   205f4:	mov	r1, r6
   205f8:	mov	r0, r4
   205fc:	bl	1fd64 <myhtml_rules_init@@Base+0x360>
   20600:	cmp	r0, #0
   20604:	bne	205b0 <myhtml_serialization_tree_callback@@Base+0x90>
   20608:	mov	r0, #0
   2060c:	pop	{r4, r5, r6, r7, r8, pc}

00020610 <myhtml_serialization_reallocate@@Base>:
   20610:	push	{r4, r5, r6, lr}
   20614:	mov	r4, r0
   20618:	mov	r5, r1
   2061c:	ldr	r0, [r0]
   20620:	bl	fb84 <mycore_realloc@plt>
   20624:	cmp	r0, #0
   20628:	streq	r0, [r4]
   2062c:	streq	r0, [r4, #4]
   20630:	streq	r0, [r4, #8]
   20634:	moveq	r0, #2
   20638:	stmne	r4, {r0, r5}
   2063c:	movne	r0, #0
   20640:	pop	{r4, r5, r6, pc}

00020644 <myhtml_serialization_concatenate@@Base>:
   20644:	push	{r4, r5, r6, lr}
   20648:	mov	r5, r1
   2064c:	mov	r6, r0
   20650:	mov	r4, r2
   20654:	ldr	r3, [r2, #4]
   20658:	ldr	r1, [r2, #8]
   2065c:	add	r1, r5, r1
   20660:	cmp	r1, r3
   20664:	bcs	2069c <myhtml_serialization_concatenate@@Base+0x58>
   20668:	ldr	r0, [r4]
   2066c:	mov	r2, r5
   20670:	mov	r1, r6
   20674:	ldr	r3, [r4, #8]
   20678:	add	r0, r0, r3
   2067c:	bl	10880 <strncpy@plt>
   20680:	ldr	r3, [r4, #8]
   20684:	mov	r0, #0
   20688:	add	r5, r5, r3
   2068c:	ldr	r3, [r4]
   20690:	str	r5, [r4, #8]
   20694:	strb	r0, [r3, r5]
   20698:	pop	{r4, r5, r6, pc}
   2069c:	add	r1, r1, #4096	; 0x1000
   206a0:	mov	r0, r2
   206a4:	bl	10310 <myhtml_serialization_reallocate@plt>
   206a8:	cmp	r0, #0
   206ac:	beq	20668 <myhtml_serialization_concatenate@@Base+0x24>
   206b0:	mov	r0, #2
   206b4:	pop	{r4, r5, r6, pc}

000206b8 <myhtml_serialization_tree_buffer@@Base>:
   206b8:	push	{r0, r1, r4, r5, r6, lr}
   206bc:	subs	r4, r1, #0
   206c0:	ldr	r6, [pc, #100]	; 2072c <myhtml_serialization_tree_buffer@@Base+0x74>
   206c4:	add	r6, pc, r6
   206c8:	beq	20720 <myhtml_serialization_tree_buffer@@Base+0x68>
   206cc:	ldr	r3, [r4]
   206d0:	mov	r5, r0
   206d4:	cmp	r3, #0
   206d8:	bne	206fc <myhtml_serialization_tree_buffer@@Base+0x44>
   206dc:	movw	r0, #20490	; 0x500a
   206e0:	stmib	r4, {r0, r3}
   206e4:	bl	10c28 <mycore_malloc@plt>
   206e8:	cmp	r0, #0
   206ec:	str	r0, [r4]
   206f0:	streq	r0, [r4, #4]
   206f4:	moveq	r0, #2
   206f8:	beq	20724 <myhtml_serialization_tree_buffer@@Base+0x6c>
   206fc:	ldr	r3, [pc, #44]	; 20730 <myhtml_serialization_tree_buffer@@Base+0x78>
   20700:	mov	r2, r4
   20704:	mov	r0, r5
   20708:	ldr	r3, [r6, r3]
   2070c:	mov	r1, r3
   20710:	str	r3, [sp, #4]
   20714:	add	sp, sp, #8
   20718:	pop	{r4, r5, r6, lr}
   2071c:	b	10dfc <myhtml_serialization_tree_callback@plt>
   20720:	mov	r0, r4
   20724:	add	sp, sp, #8
   20728:	pop	{r4, r5, r6, pc}
   2072c:	andeq	pc, lr, r4, lsr r9	; <UNPREDICTABLE>
   20730:	andeq	r0, r0, r0, lsr #17

00020734 <myhtml_serialization@@Base>:
   20734:	b	102bc <myhtml_serialization_tree_buffer@plt>

00020738 <myhtml_serialization_node_buffer@@Base>:
   20738:	push	{r0, r1, r4, r5, r6, lr}
   2073c:	subs	r4, r1, #0
   20740:	ldr	r6, [pc, #96]	; 207a8 <myhtml_serialization_node_buffer@@Base+0x70>
   20744:	add	r6, pc, r6
   20748:	beq	2079c <myhtml_serialization_node_buffer@@Base+0x64>
   2074c:	ldr	r3, [r4]
   20750:	mov	r5, r0
   20754:	cmp	r3, #0
   20758:	bne	20778 <myhtml_serialization_node_buffer@@Base+0x40>
   2075c:	mov	r0, #2048	; 0x800
   20760:	stmib	r4, {r0, r3}
   20764:	bl	10c28 <mycore_malloc@plt>
   20768:	cmp	r0, #0
   2076c:	str	r0, [r4]
   20770:	streq	r0, [r4, #4]
   20774:	beq	2079c <myhtml_serialization_node_buffer@@Base+0x64>
   20778:	ldr	r3, [pc, #44]	; 207ac <myhtml_serialization_node_buffer@@Base+0x74>
   2077c:	mov	r2, r4
   20780:	mov	r0, r5
   20784:	ldr	r3, [r6, r3]
   20788:	mov	r1, r3
   2078c:	str	r3, [sp, #4]
   20790:	add	sp, sp, #8
   20794:	pop	{r4, r5, r6, lr}
   20798:	b	10694 <myhtml_serialization_node_callback@plt>
   2079c:	mov	r0, #0
   207a0:	add	sp, sp, #8
   207a4:	pop	{r4, r5, r6, pc}
   207a8:			; <UNDEFINED> instruction: 0x000ef8b4
   207ac:	andeq	r0, r0, r0, lsr #17

000207b0 <myhtml_serialization_node@@Base>:
   207b0:	b	10748 <myhtml_serialization_node_buffer@plt>

000207b4 <myhtml_stream_buffer_create@@Base>:
   207b4:	mov	r1, #36	; 0x24
   207b8:	mov	r0, #1
   207bc:	b	feb4 <mycore_calloc@plt>

000207c0 <myhtml_stream_buffer_init@@Base>:
   207c0:	push	{r4, lr}
   207c4:	mov	r3, #0
   207c8:	mov	r4, r0
   207cc:	mov	r0, r1
   207d0:	mov	r1, #12
   207d4:	str	r3, [r4, #4]
   207d8:	str	r0, [r4, #8]
   207dc:	bl	feb4 <mycore_calloc@plt>
   207e0:	cmp	r0, #0
   207e4:	str	r0, [r4]
   207e8:	movw	r0, #37633	; 0x9301
   207ec:	movne	r0, #0
   207f0:	pop	{r4, pc}

000207f4 <myhtml_stream_buffer_entry_init@@Base>:
   207f4:	push	{r4, r5, r6, lr}
   207f8:	mov	r4, r0
   207fc:	mov	r5, r1
   20800:	ldr	r0, [r0]
   20804:	cmp	r0, #0
   20808:	beq	20824 <myhtml_stream_buffer_entry_init@@Base+0x30>
   2080c:	ldr	r3, [r4, #8]
   20810:	cmp	r3, r1
   20814:	bcc	20820 <myhtml_stream_buffer_entry_init@@Base+0x2c>
   20818:	mov	r0, #0
   2081c:	pop	{r4, r5, r6, pc}
   20820:	bl	10d60 <mycore_free@plt>
   20824:	mov	r3, #0
   20828:	mov	r0, r5
   2082c:	stmib	r4, {r3, r5}
   20830:	bl	10c28 <mycore_malloc@plt>
   20834:	cmp	r0, #0
   20838:	str	r0, [r4]
   2083c:	bne	20818 <myhtml_stream_buffer_entry_init@@Base+0x24>
   20840:	movw	r0, #37635	; 0x9303
   20844:	pop	{r4, r5, r6, pc}

00020848 <myhtml_stream_buffer_entry_clean@@Base>:
   20848:	cmp	r0, #0
   2084c:	movne	r3, #0
   20850:	strne	r3, [r0, #4]
   20854:	bx	lr

00020858 <myhtml_stream_buffer_entry_destroy@@Base>:
   20858:	push	{r4, r5, r6, lr}
   2085c:	subs	r4, r0, #0
   20860:	beq	2088c <myhtml_stream_buffer_entry_destroy@@Base+0x34>
   20864:	mov	r5, r1
   20868:	ldr	r0, [r4]
   2086c:	cmp	r0, #0
   20870:	beq	20878 <myhtml_stream_buffer_entry_destroy@@Base+0x20>
   20874:	bl	10d60 <mycore_free@plt>
   20878:	cmp	r5, #0
   2087c:	beq	2088c <myhtml_stream_buffer_entry_destroy@@Base+0x34>
   20880:	mov	r0, r4
   20884:	mov	r4, #0
   20888:	bl	10d60 <mycore_free@plt>
   2088c:	mov	r0, r4
   20890:	pop	{r4, r5, r6, pc}

00020894 <myhtml_stream_buffer_clean@@Base>:
   20894:	cmp	r0, #0
   20898:	movne	r3, #0
   2089c:	strne	r3, [r0, #4]
   208a0:	bx	lr

000208a4 <myhtml_stream_buffer_destroy@@Base>:
   208a4:	push	{r4, r5, r6, r7, r8, lr}
   208a8:	subs	r4, r0, #0
   208ac:	beq	208dc <myhtml_stream_buffer_destroy@@Base+0x38>
   208b0:	mov	r6, r1
   208b4:	ldr	r3, [r4]
   208b8:	cmp	r3, #0
   208bc:	movne	r5, #0
   208c0:	movne	r7, #12
   208c4:	bne	208f4 <myhtml_stream_buffer_destroy@@Base+0x50>
   208c8:	cmp	r6, #0
   208cc:	beq	208dc <myhtml_stream_buffer_destroy@@Base+0x38>
   208d0:	mov	r0, r4
   208d4:	mov	r4, #0
   208d8:	bl	10d60 <mycore_free@plt>
   208dc:	mov	r0, r4
   208e0:	pop	{r4, r5, r6, r7, r8, pc}
   208e4:	mla	r0, r7, r5, r0
   208e8:	mov	r1, #0
   208ec:	add	r5, r5, #1
   208f0:	bl	100e8 <myhtml_stream_buffer_entry_destroy@plt>
   208f4:	ldm	r4, {r0, r3}
   208f8:	cmp	r3, r5
   208fc:	bhi	208e4 <myhtml_stream_buffer_destroy@@Base+0x40>
   20900:	bl	10d60 <mycore_free@plt>
   20904:	b	208c8 <myhtml_stream_buffer_destroy@@Base+0x24>

00020908 <myhtml_stream_buffer_add_entry@@Base>:
   20908:	push	{r4, r5, r6, r7, r8, lr}
   2090c:	mov	r4, r0
   20910:	mov	r7, r1
   20914:	ldmib	r0, {r3, r5}
   20918:	cmp	r3, r5
   2091c:	bcc	20960 <myhtml_stream_buffer_add_entry@@Base+0x58>
   20920:	lsl	r5, r5, #1
   20924:	mov	r8, #12
   20928:	mul	r1, r8, r5
   2092c:	bl	fb84 <mycore_realloc@plt>
   20930:	subs	r6, r0, #0
   20934:	bne	20944 <myhtml_stream_buffer_add_entry@@Base+0x3c>
   20938:	mov	r5, #0
   2093c:	mov	r0, r5
   20940:	pop	{r4, r5, r6, r7, r8, pc}
   20944:	ldr	r0, [r4, #8]
   20948:	mov	r1, #0
   2094c:	sub	r2, r5, r0
   20950:	mla	r0, r8, r0, r6
   20954:	bl	10844 <memset@plt>
   20958:	str	r6, [r4]
   2095c:	str	r5, [r4, #8]
   20960:	ldm	r4, {r3, r5}
   20964:	mov	r2, #12
   20968:	mov	r1, r7
   2096c:	mla	r5, r2, r5, r3
   20970:	mov	r0, r5
   20974:	bl	1079c <myhtml_stream_buffer_entry_init@plt>
   20978:	cmp	r0, #0
   2097c:	bne	20938 <myhtml_stream_buffer_add_entry@@Base+0x30>
   20980:	ldr	r3, [r4, #4]
   20984:	add	r3, r3, #1
   20988:	str	r3, [r4, #4]
   2098c:	b	2093c <myhtml_stream_buffer_add_entry@@Base+0x34>

00020990 <myhtml_stream_buffer_current_entry@@Base>:
   20990:	ldr	r3, [r0, #4]
   20994:	cmp	r3, #0
   20998:	movne	r2, #12
   2099c:	ldrne	r0, [r0]
   209a0:	mulne	r3, r2, r3
   209a4:	subne	r3, r3, #12
   209a8:	addne	r0, r0, r3
   209ac:	moveq	r0, r3
   209b0:	bx	lr

000209b4 <myhtml_tag_create@@Base>:
   209b4:	mov	r0, #20
   209b8:	b	10c28 <mycore_malloc@plt>

000209bc <myhtml_tag_clean@@Base>:
   209bc:	push	{r4, lr}
   209c0:	mov	r3, #252	; 0xfc
   209c4:	mov	r4, r0
   209c8:	ldr	r0, [r0, #4]
   209cc:	str	r3, [r4, #8]
   209d0:	bl	101f0 <mcsimple_clean@plt>
   209d4:	ldr	r1, [r4, #12]
   209d8:	ldr	r0, [r4, #16]
   209dc:	bl	1067c <mchar_async_node_clean@plt>
   209e0:	ldr	r0, [r4]
   209e4:	pop	{r4, lr}
   209e8:	b	1028c <mctree_clean@plt>

000209ec <myhtml_tag_init@@Base>:
   209ec:	push	{r0, r1, r2, r4, r5, lr}
   209f0:	mov	r5, r0
   209f4:	mov	r4, r1
   209f8:	bl	1025c <mcsimple_create@plt>
   209fc:	cmp	r0, #0
   20a00:	str	r0, [r4, #4]
   20a04:	movweq	r5, #37264	; 0x9190
   20a08:	beq	20a68 <myhtml_tag_init@@Base+0x7c>
   20a0c:	mov	r3, #44	; 0x2c
   20a10:	mov	r2, #1024	; 0x400
   20a14:	mov	r1, #128	; 0x80
   20a18:	bl	103e8 <mcsimple_init@plt>
   20a1c:	add	r1, sp, #4
   20a20:	ldr	r0, [r5, #4]
   20a24:	bl	1022c <mchar_async_node_add@plt>
   20a28:	str	r0, [r4, #12]
   20a2c:	mov	r0, #2
   20a30:	bl	105ec <mctree_create@plt>
   20a34:	ldr	r3, [r5, #4]
   20a38:	str	r0, [r4]
   20a3c:	ldr	r5, [sp, #4]
   20a40:	str	r3, [r4, #16]
   20a44:	mov	r3, #252	; 0xfc
   20a48:	cmp	r5, #0
   20a4c:	str	r3, [r4, #8]
   20a50:	bne	20a68 <myhtml_tag_init@@Base+0x7c>
   20a54:	cmp	r0, #0
   20a58:	moveq	r5, #2
   20a5c:	beq	20a68 <myhtml_tag_init@@Base+0x7c>
   20a60:	mov	r0, r4
   20a64:	bl	1100c <myhtml_tag_clean@plt>
   20a68:	mov	r0, r5
   20a6c:	add	sp, sp, #12
   20a70:	pop	{r4, r5, pc}

00020a74 <myhtml_tag_destroy@@Base>:
   20a74:	push	{r4, lr}
   20a78:	subs	r4, r0, #0
   20a7c:	beq	20ab0 <myhtml_tag_destroy@@Base+0x3c>
   20a80:	ldr	r0, [r4]
   20a84:	bl	10058 <mctree_destroy@plt>
   20a88:	mov	r1, #1
   20a8c:	str	r0, [r4]
   20a90:	ldr	r0, [r4, #4]
   20a94:	bl	10334 <mcsimple_destroy@plt>
   20a98:	str	r0, [r4, #4]
   20a9c:	ldr	r1, [r4, #12]
   20aa0:	ldr	r0, [r4, #16]
   20aa4:	bl	10bec <mchar_async_node_delete@plt>
   20aa8:	mov	r0, r4
   20aac:	bl	10d60 <mycore_free@plt>
   20ab0:	mov	r0, #0
   20ab4:	pop	{r4, pc}

00020ab8 <myhtml_tag_add@@Base>:
   20ab8:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   20abc:	mov	r6, r0
   20ac0:	mov	r8, r1
   20ac4:	mov	r4, r2
   20ac8:	add	r2, r2, #1
   20acc:	mov	r9, r3
   20ad0:	ldrb	r5, [sp, #40]	; 0x28
   20ad4:	ldr	r1, [r0, #12]
   20ad8:	ldr	r0, [r0, #16]
   20adc:	bl	108a4 <mchar_async_malloc@plt>
   20ae0:	cmp	r5, #0
   20ae4:	mov	r7, r0
   20ae8:	movne	r3, #0
   20aec:	bne	20b1c <myhtml_tag_add@@Base+0x64>
   20af0:	mov	r2, r4
   20af4:	mov	r1, r8
   20af8:	bl	10880 <strncpy@plt>
   20afc:	strb	r5, [r7, r4]
   20b00:	b	20b2c <myhtml_tag_add@@Base+0x74>
   20b04:	ldrb	r2, [r8, r3]
   20b08:	sub	r1, r2, #65	; 0x41
   20b0c:	cmp	r1, #25
   20b10:	orrls	r2, r2, #96	; 0x60
   20b14:	strb	r2, [r7, r3]
   20b18:	add	r3, r3, #1
   20b1c:	cmp	r3, r4
   20b20:	bne	20b04 <myhtml_tag_add@@Base+0x4c>
   20b24:	mov	r3, #0
   20b28:	strb	r3, [r7, r4]
   20b2c:	mov	sl, #0
   20b30:	ldr	r0, [r6, #4]
   20b34:	bl	106d0 <mcsimple_malloc@plt>
   20b38:	mov	r5, r0
   20b3c:	mov	r3, r0
   20b40:	ldr	r0, [r6]
   20b44:	mov	r2, r4
   20b48:	mov	r1, r7
   20b4c:	str	sl, [sp]
   20b50:	bl	108ec <mctree_insert@plt>
   20b54:	ldr	r8, [r6, #8]
   20b58:	mov	r2, #28
   20b5c:	mov	r1, sl
   20b60:	add	r0, r5, #16
   20b64:	add	r3, r8, #1
   20b68:	str	r8, [r5]
   20b6c:	str	r7, [r5, #4]
   20b70:	str	r4, [r5, #8]
   20b74:	str	r9, [r5, #12]
   20b78:	str	r3, [r6, #8]
   20b7c:	bl	10844 <memset@plt>
   20b80:	mov	r0, r8
   20b84:	add	sp, sp, #8
   20b88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00020b8c <myhtml_tag_set_category@@Base>:
   20b8c:	cmp	r1, #251	; 0xfb
   20b90:	bxls	lr
   20b94:	push	{r4, r5, r6, lr}
   20b98:	sub	r1, r1, #252	; 0xfc
   20b9c:	mov	r5, r3
   20ba0:	add	r4, r2, #4
   20ba4:	ldr	r0, [r0, #4]
   20ba8:	bl	10f34 <mcsimple_get_by_absolute_position@plt>
   20bac:	str	r5, [r0, r4, lsl #2]
   20bb0:	pop	{r4, r5, r6, pc}

00020bb4 <myhtml_tag_get_by_id@@Base>:
   20bb4:	cmp	r1, #251	; 0xfb
   20bb8:	bls	20bc8 <myhtml_tag_get_by_id@@Base+0x14>
   20bbc:	sub	r1, r1, #252	; 0xfc
   20bc0:	ldr	r0, [r0, #4]
   20bc4:	b	10f34 <mcsimple_get_by_absolute_position@plt>
   20bc8:	mov	r0, r1
   20bcc:	b	ff98 <myhtml_tag_static_get_by_id@plt>

00020bd0 <myhtml_tag_get_by_name@@Base>:
   20bd0:	push	{r4, r5, r6, lr}
   20bd4:	mov	r5, r1
   20bd8:	mov	r4, r0
   20bdc:	mov	r1, r2
   20be0:	mov	r0, r5
   20be4:	mov	r6, r2
   20be8:	bl	108b0 <myhtml_tag_static_search@plt>
   20bec:	cmp	r0, #0
   20bf0:	popne	{r4, r5, r6, pc}
   20bf4:	mov	r2, r6
   20bf8:	mov	r1, r5
   20bfc:	ldr	r0, [r4]
   20c00:	bl	106dc <mctree_search_lowercase@plt>
   20c04:	ldr	r3, [r4]
   20c08:	ldr	r2, [r3]
   20c0c:	mov	r3, #28
   20c10:	mla	r0, r3, r0, r2
   20c14:	ldr	r0, [r0, #8]
   20c18:	pop	{r4, r5, r6, pc}

00020c1c <myhtml_tag_static_search@@Base>:
   20c1c:	add	r3, r0, r1
   20c20:	ldr	r2, [pc, #156]	; 20cc4 <myhtml_tag_static_search@@Base+0xa8>
   20c24:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20c28:	mov	r4, r1
   20c2c:	mov	r5, r0
   20c30:	mov	r9, #12
   20c34:	ldrb	r1, [r0]
   20c38:	add	r2, pc, r2
   20c3c:	ldrb	r3, [r3, #-1]
   20c40:	ldr	r7, [pc, #128]	; 20cc8 <myhtml_tag_static_search@@Base+0xac>
   20c44:	ldrb	r3, [r2, r3]
   20c48:	ldrb	r2, [r2, r1]
   20c4c:	movw	r1, #479	; 0x1df
   20c50:	add	r7, pc, r7
   20c54:	smulbb	r3, r3, r2
   20c58:	mul	r2, r4, r3
   20c5c:	udiv	r3, r2, r1
   20c60:	mls	r3, r1, r3, r2
   20c64:	add	r3, r3, #1
   20c68:	mul	r3, r9, r3
   20c6c:	ldr	r6, [r7, r3]
   20c70:	add	r8, r7, r3
   20c74:	cmp	r6, #0
   20c78:	beq	20cac <myhtml_tag_static_search@@Base+0x90>
   20c7c:	ldr	r3, [r6, #8]
   20c80:	cmp	r3, r4
   20c84:	bne	20cb8 <myhtml_tag_static_search@@Base+0x9c>
   20c88:	mov	r2, r4
   20c8c:	mov	r1, r5
   20c90:	ldr	r0, [r6, #4]
   20c94:	bl	10238 <mycore_strncasecmp@plt>
   20c98:	cmp	r0, #0
   20c9c:	beq	20cb0 <myhtml_tag_static_search@@Base+0x94>
   20ca0:	ldr	r3, [r8, #4]
   20ca4:	cmp	r3, #0
   20ca8:	bne	20c68 <myhtml_tag_static_search@@Base+0x4c>
   20cac:	mov	r6, #0
   20cb0:	mov	r0, r6
   20cb4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20cb8:	bhi	20cac <myhtml_tag_static_search@@Base+0x90>
   20cbc:	ldr	r3, [r8, #4]
   20cc0:	b	20c68 <myhtml_tag_static_search@@Base+0x4c>
   20cc4:	andeq	r5, sp, r2, ror r9
   20cc8:	andeq	sl, lr, r4, ror #17

00020ccc <myhtml_tag_static_get_by_id@@Base>:
   20ccc:	ldr	r3, [pc, #12]	; 20ce0 <myhtml_tag_static_get_by_id@@Base+0x14>
   20cd0:	mov	r2, #44	; 0x2c
   20cd4:	add	r3, pc, r3
   20cd8:	mla	r0, r2, r0, r3
   20cdc:	bx	lr
   20ce0:			; <UNDEFINED> instruction: 0x000ec1bc

00020ce4 <myhtml_token_create@@Base>:
   20ce4:	push	{r4, r5, r6, r7, r8, lr}
   20ce8:	subs	r5, r1, #0
   20cec:	mov	r7, r0
   20cf0:	mov	r0, #24
   20cf4:	moveq	r5, #4096	; 0x1000
   20cf8:	bl	10c28 <mycore_malloc@plt>
   20cfc:	subs	r4, r0, #0
   20d00:	beq	20d24 <myhtml_token_create@@Base+0x40>
   20d04:	bl	fcf8 <mcobject_async_create@plt>
   20d08:	cmp	r0, #0
   20d0c:	mov	r6, r0
   20d10:	str	r0, [r4, #4]
   20d14:	bne	20d2c <myhtml_token_create@@Base+0x48>
   20d18:	mov	r0, r4
   20d1c:	mov	r4, r6
   20d20:	bl	10d60 <mycore_free@plt>
   20d24:	mov	r0, r4
   20d28:	pop	{r4, r5, r6, r7, r8, pc}
   20d2c:	bl	fcf8 <mcobject_async_create@plt>
   20d30:	cmp	r0, #0
   20d34:	mov	r6, r0
   20d38:	str	r0, [r4, #8]
   20d3c:	bne	20d4c <myhtml_token_create@@Base+0x68>
   20d40:	ldr	r0, [r4, #4]
   20d44:	bl	10d60 <mycore_free@plt>
   20d48:	b	20d18 <myhtml_token_create@@Base+0x34>
   20d4c:	mov	r3, #52	; 0x34
   20d50:	mov	r2, r5
   20d54:	ldr	r0, [r4, #4]
   20d58:	mov	r1, #128	; 0x80
   20d5c:	bl	fc20 <mcobject_async_init@plt>
   20d60:	mov	r3, #68	; 0x44
   20d64:	mov	r2, r5
   20d68:	ldr	r0, [r4, #8]
   20d6c:	mov	r1, #128	; 0x80
   20d70:	bl	fc20 <mcobject_async_init@plt>
   20d74:	mov	r1, #0
   20d78:	ldr	r0, [r4, #4]
   20d7c:	bl	10a24 <mcobject_async_node_add@plt>
   20d80:	mov	r1, #0
   20d84:	str	r0, [r4, #12]
   20d88:	ldr	r0, [r4, #8]
   20d8c:	bl	10a24 <mcobject_async_node_add@plt>
   20d90:	str	r7, [r4]
   20d94:	str	r0, [r4, #16]
   20d98:	b	20d24 <myhtml_token_create@@Base+0x40>

00020d9c <myhtml_token_clean@@Base>:
   20d9c:	push	{r4, lr}
   20da0:	mov	r4, r0
   20da4:	ldr	r0, [r0, #4]
   20da8:	ldr	r1, [r4, #12]
   20dac:	bl	10814 <mcobject_async_node_clean@plt>
   20db0:	ldr	r0, [r4, #8]
   20db4:	ldr	r1, [r4, #16]
   20db8:	pop	{r4, lr}
   20dbc:	b	10814 <mcobject_async_node_clean@plt>

00020dc0 <myhtml_token_clean_all@@Base>:
   20dc0:	push	{r4, lr}
   20dc4:	mov	r4, r0
   20dc8:	ldr	r0, [r0, #4]
   20dcc:	bl	10fe8 <mcobject_async_clean@plt>
   20dd0:	ldr	r0, [r4, #8]
   20dd4:	pop	{r4, lr}
   20dd8:	b	10fe8 <mcobject_async_clean@plt>

00020ddc <myhtml_token_destroy@@Base>:
   20ddc:	push	{r4, lr}
   20de0:	subs	r4, r0, #0
   20de4:	beq	20e20 <myhtml_token_destroy@@Base+0x44>
   20de8:	ldr	r0, [r4, #4]
   20dec:	cmp	r0, #0
   20df0:	beq	20e00 <myhtml_token_destroy@@Base+0x24>
   20df4:	mov	r1, #1
   20df8:	bl	10ab4 <mcobject_async_destroy@plt>
   20dfc:	str	r0, [r4, #4]
   20e00:	ldr	r0, [r4, #8]
   20e04:	cmp	r0, #0
   20e08:	beq	20e18 <myhtml_token_destroy@@Base+0x3c>
   20e0c:	mov	r1, #1
   20e10:	bl	10ab4 <mcobject_async_destroy@plt>
   20e14:	str	r0, [r4, #8]
   20e18:	mov	r0, r4
   20e1c:	bl	10d60 <mycore_free@plt>
   20e20:	mov	r0, #0
   20e24:	pop	{r4, pc}

00020e28 <myhtml_token_node_clean@@Base>:
   20e28:	push	{r4, lr}
   20e2c:	mov	r2, #48	; 0x30
   20e30:	mov	r1, #0
   20e34:	bl	10844 <memset@plt>
   20e38:	mov	r3, r0
   20e3c:	mov	r2, #8
   20e40:	pop	{r4, lr}
   20e44:	add	r0, r0, #4
   20e48:	str	r2, [r3, #48]	; 0x30
   20e4c:	b	11024 <mycore_string_clean_all@plt>

00020e50 <myhtml_token_node_create@@Base>:
   20e50:	push	{r4, lr}
   20e54:	mov	r2, #0
   20e58:	ldr	r0, [r0, #4]
   20e5c:	bl	10b50 <mcobject_async_malloc@plt>
   20e60:	subs	r4, r0, #0
   20e64:	beq	20e6c <myhtml_token_node_create@@Base+0x1c>
   20e68:	bl	10f10 <myhtml_token_node_clean@plt>
   20e6c:	mov	r0, r4
   20e70:	pop	{r4, pc}

00020e74 <myhtml_token_attr_clean@@Base>:
   20e74:	push	{r4, lr}
   20e78:	mov	r2, #64	; 0x40
   20e7c:	mov	r1, #0
   20e80:	mov	r4, r0
   20e84:	bl	10844 <memset@plt>
   20e88:	mov	r3, #1
   20e8c:	add	r0, r4, #8
   20e90:	str	r3, [r4, #64]	; 0x40
   20e94:	bl	11024 <mycore_string_clean_all@plt>
   20e98:	add	r0, r4, #28
   20e9c:	pop	{r4, lr}
   20ea0:	b	11024 <mycore_string_clean_all@plt>

00020ea4 <myhtml_token_attr_create@@Base>:
   20ea4:	push	{r4, lr}
   20ea8:	mov	r2, #0
   20eac:	ldr	r0, [r0, #8]
   20eb0:	bl	10b50 <mcobject_async_malloc@plt>
   20eb4:	subs	r4, r0, #0
   20eb8:	beq	20ec0 <myhtml_token_attr_create@@Base+0x1c>
   20ebc:	bl	ffa4 <myhtml_token_attr_clean@plt>
   20ec0:	mov	r0, r4
   20ec4:	pop	{r4, pc}

00020ec8 <myhtml_token_node_tag_id@@Base>:
   20ec8:	ldr	r0, [r0]
   20ecc:	bx	lr

00020ed0 <myhtml_token_node_raw_position@@Base>:
   20ed0:	cmp	r1, #0
   20ed4:	ldrdne	r2, [r1, #24]
   20ed8:	streq	r1, [r0]
   20edc:	streq	r1, [r0, #4]
   20ee0:	strdne	r2, [r0]
   20ee4:	bx	lr

00020ee8 <myhtml_token_node_element_position@@Base>:
   20ee8:	cmp	r1, #0
   20eec:	ldrdne	r2, [r1, #32]
   20ef0:	streq	r1, [r0]
   20ef4:	streq	r1, [r0, #4]
   20ef8:	strdne	r2, [r0]
   20efc:	bx	lr

00020f00 <myhtml_token_node_attribute_first@@Base>:
   20f00:	ldr	r0, [r0, #40]	; 0x28
   20f04:	bx	lr

00020f08 <myhtml_token_node_attribute_last@@Base>:
   20f08:	ldr	r0, [r0, #44]	; 0x2c
   20f0c:	bx	lr

00020f10 <myhtml_token_node_text@@Base>:
   20f10:	cmp	r1, #0
   20f14:	ldrne	r3, [r0, #12]
   20f18:	ldr	r0, [r0, #4]
   20f1c:	strne	r3, [r1]
   20f20:	bx	lr

00020f24 <myhtml_token_node_string@@Base>:
   20f24:	add	r0, r0, #4
   20f28:	bx	lr

00020f2c <myhtml_token_node_is_close@@Base>:
   20f2c:	ldr	r0, [r0, #48]	; 0x30
   20f30:	and	r0, r0, #1
   20f34:	bx	lr

00020f38 <myhtml_token_node_is_close_self@@Base>:
   20f38:	ldr	r0, [r0, #48]	; 0x30
   20f3c:	ubfx	r0, r0, #1, #1
   20f40:	bx	lr

00020f44 <myhtml_token_node_wait_for_done@@Base>:
   20f44:	push	{r4, r5, r6, lr}
   20f48:	mov	r5, r0
   20f4c:	mov	r4, r1
   20f50:	ldr	r3, [r4, #48]	; 0x30
   20f54:	tst	r3, #4
   20f58:	popne	{r4, r5, r6, pc}
   20f5c:	ldr	r3, [r5]
   20f60:	ldr	r3, [r3]
   20f64:	ldr	r3, [r3]
   20f68:	ldr	r0, [r3, #24]
   20f6c:	bl	10040 <mythread_nanosleep_sleep@plt>
   20f70:	b	20f50 <myhtml_token_node_wait_for_done@@Base+0xc>

00020f74 <myhtml_token_set_done@@Base>:
   20f74:	ldr	r3, [r0, #48]	; 0x30
   20f78:	orr	r3, r3, #4
   20f7c:	str	r3, [r0, #48]	; 0x30
   20f80:	bx	lr

00020f84 <myhtml_token_node_text_append@@Base>:
   20f84:	ldr	r0, [r0]
   20f88:	push	{r4, r5, r6, lr}
   20f8c:	add	r4, r1, #4
   20f90:	mov	r6, r2
   20f94:	mov	r5, r3
   20f98:	mov	r2, r4
   20f9c:	add	r3, r3, #2
   20fa0:	ldr	r1, [r0, #52]	; 0x34
   20fa4:	ldr	r0, [r0, #4]
   20fa8:	bl	105a4 <mycore_string_init@plt>
   20fac:	mov	r2, r5
   20fb0:	mov	r1, r6
   20fb4:	mov	r0, r4
   20fb8:	pop	{r4, r5, r6, lr}
   20fbc:	b	10868 <mycore_string_append@plt>

00020fc0 <myhtml_token_node_attr_append@@Base>:
   20fc0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20fc4:	mov	r8, r0
   20fc8:	mov	r5, r1
   20fcc:	mov	sl, r2
   20fd0:	mov	r2, #0
   20fd4:	mov	r9, r3
   20fd8:	ldr	r0, [r0, #8]
   20fdc:	ldr	r7, [sp, #36]	; 0x24
   20fe0:	ldr	r1, [sp, #40]	; 0x28
   20fe4:	bl	10b50 <mcobject_async_malloc@plt>
   20fe8:	mov	r6, r0
   20fec:	mov	r3, #0
   20ff0:	cmp	r9, r3
   20ff4:	mov	r4, r0
   20ff8:	str	r3, [r6], #8
   20ffc:	beq	2108c <myhtml_token_node_attr_append@@Base+0xcc>
   21000:	ldr	r0, [r8]
   21004:	mov	r2, r6
   21008:	add	r3, r9, #1
   2100c:	ldr	r1, [r0, #52]	; 0x34
   21010:	ldr	r0, [r0, #4]
   21014:	bl	105a4 <mycore_string_init@plt>
   21018:	mov	r2, r9
   2101c:	mov	r1, sl
   21020:	mov	r0, r6
   21024:	bl	1061c <mycore_string_append_lowercase@plt>
   21028:	cmp	r7, #0
   2102c:	add	r6, r4, #28
   21030:	beq	21098 <myhtml_token_node_attr_append@@Base+0xd8>
   21034:	ldr	r0, [r8]
   21038:	mov	r2, r6
   2103c:	add	r3, r7, #1
   21040:	ldr	r1, [r0, #52]	; 0x34
   21044:	ldr	r0, [r0, #4]
   21048:	bl	105a4 <mycore_string_init@plt>
   2104c:	mov	r2, r7
   21050:	mov	r0, r6
   21054:	ldr	r1, [sp, #32]
   21058:	bl	10868 <mycore_string_append@plt>
   2105c:	ldr	r3, [r5, #40]	; 0x28
   21060:	mov	r0, r4
   21064:	cmp	r3, #0
   21068:	ldrne	r3, [r5, #44]	; 0x2c
   2106c:	streq	r3, [r4, #4]
   21070:	streq	r4, [r5, #40]	; 0x28
   21074:	strne	r4, [r3]
   21078:	strne	r3, [r4, #4]
   2107c:	mov	r3, #1
   21080:	str	r4, [r5, #44]	; 0x2c
   21084:	str	r3, [r4, #64]	; 0x40
   21088:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2108c:	mov	r0, r6
   21090:	bl	11024 <mycore_string_clean_all@plt>
   21094:	b	21028 <myhtml_token_node_attr_append@@Base+0x68>
   21098:	mov	r0, r6
   2109c:	bl	11024 <mycore_string_clean_all@plt>
   210a0:	b	2105c <myhtml_token_node_attr_append@@Base+0x9c>

000210a4 <myhtml_token_node_attr_append_with_convert_encoding@@Base>:
   210a4:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   210a8:	mov	sl, r0
   210ac:	mov	r6, r1
   210b0:	mov	fp, r2
   210b4:	mov	r2, #0
   210b8:	mov	r9, r3
   210bc:	ldr	r0, [r0, #8]
   210c0:	ldr	r7, [sp, #44]	; 0x2c
   210c4:	ldr	r1, [sp, #48]	; 0x30
   210c8:	ldr	r8, [sp, #52]	; 0x34
   210cc:	bl	10b50 <mcobject_async_malloc@plt>
   210d0:	mov	r5, r0
   210d4:	mov	r3, #0
   210d8:	cmp	r9, r3
   210dc:	mov	r4, r0
   210e0:	str	r3, [r5], #8
   210e4:	beq	211a0 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xfc>
   210e8:	ldr	r0, [sl]
   210ec:	add	r3, r9, #1
   210f0:	mov	r2, r5
   210f4:	ldr	r1, [r0, #52]	; 0x34
   210f8:	ldr	r0, [r0, #4]
   210fc:	bl	105a4 <mycore_string_init@plt>
   21100:	cmp	r8, #0
   21104:	bne	21188 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xe4>
   21108:	mov	r2, r9
   2110c:	mov	r1, fp
   21110:	mov	r0, r5
   21114:	bl	1061c <mycore_string_append_lowercase@plt>
   21118:	cmp	r7, #0
   2111c:	add	r5, r4, #28
   21120:	beq	211c4 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x120>
   21124:	ldr	r0, [sl]
   21128:	add	r3, r7, #1
   2112c:	mov	r2, r5
   21130:	ldr	r1, [r0, #52]	; 0x34
   21134:	ldr	r0, [r0, #4]
   21138:	bl	105a4 <mycore_string_init@plt>
   2113c:	cmp	r8, #0
   21140:	bne	211ac <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x108>
   21144:	mov	r2, r7
   21148:	mov	r0, r5
   2114c:	ldr	r1, [sp, #40]	; 0x28
   21150:	bl	10868 <mycore_string_append@plt>
   21154:	ldr	r3, [r6, #40]	; 0x28
   21158:	mov	r0, r4
   2115c:	cmp	r3, #0
   21160:	ldrne	r3, [r6, #44]	; 0x2c
   21164:	streq	r3, [r4, #4]
   21168:	streq	r4, [r6, #40]	; 0x28
   2116c:	strne	r4, [r3]
   21170:	strne	r3, [r4, #4]
   21174:	mov	r3, #1
   21178:	str	r4, [r6, #44]	; 0x2c
   2117c:	str	r3, [r4, #64]	; 0x40
   21180:	add	sp, sp, #4
   21184:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21188:	mov	r3, r8
   2118c:	mov	r2, r9
   21190:	mov	r1, fp
   21194:	mov	r0, r5
   21198:	bl	fddc <myencoding_string_append_lowercase_ascii@plt>
   2119c:	b	21118 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x74>
   211a0:	mov	r0, r5
   211a4:	bl	11024 <mycore_string_clean_all@plt>
   211a8:	b	21118 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x74>
   211ac:	mov	r3, r8
   211b0:	mov	r2, r7
   211b4:	ldr	r1, [sp, #40]	; 0x28
   211b8:	mov	r0, r5
   211bc:	bl	103f4 <myencoding_string_append@plt>
   211c0:	b	21154 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xb0>
   211c4:	mov	r0, r5
   211c8:	bl	11024 <mycore_string_clean_all@plt>
   211cc:	b	21154 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xb0>

000211d0 <myhtml_token_attr_copy@@Base>:
   211d0:	push	{r4, r5, r6, r7, r8, lr}
   211d4:	mov	r5, r1
   211d8:	mov	r8, r0
   211dc:	mov	r1, r3
   211e0:	mov	r6, r2
   211e4:	mov	r2, #0
   211e8:	ldr	r0, [r0, #8]
   211ec:	bl	10b50 <mcobject_async_malloc@plt>
   211f0:	mov	r7, r0
   211f4:	mov	r3, #0
   211f8:	mov	r4, r0
   211fc:	str	r3, [r7], #8
   21200:	ldr	r3, [r5, #16]
   21204:	cmp	r3, #0
   21208:	beq	2129c <myhtml_token_attr_copy@@Base+0xcc>
   2120c:	ldr	r0, [r8]
   21210:	mov	r2, r7
   21214:	add	r3, r3, #1
   21218:	ldr	r1, [r0, #52]	; 0x34
   2121c:	ldr	r0, [r0, #4]
   21220:	bl	105a4 <mycore_string_init@plt>
   21224:	mov	r0, r7
   21228:	ldr	r1, [r5, #8]
   2122c:	ldr	r2, [r5, #16]
   21230:	bl	1061c <mycore_string_append_lowercase@plt>
   21234:	ldr	r3, [r5, #36]	; 0x24
   21238:	add	r7, r4, #28
   2123c:	cmp	r3, #0
   21240:	beq	212a8 <myhtml_token_attr_copy@@Base+0xd8>
   21244:	ldr	r0, [r8]
   21248:	mov	r2, r7
   2124c:	add	r3, r3, #1
   21250:	ldr	r1, [r0, #52]	; 0x34
   21254:	ldr	r0, [r0, #4]
   21258:	bl	105a4 <mycore_string_init@plt>
   2125c:	mov	r0, r7
   21260:	ldr	r1, [r5, #28]
   21264:	ldr	r2, [r5, #36]	; 0x24
   21268:	bl	10868 <mycore_string_append@plt>
   2126c:	ldr	r3, [r6, #40]	; 0x28
   21270:	mov	r0, #1
   21274:	cmp	r3, #0
   21278:	ldrne	r3, [r6, #44]	; 0x2c
   2127c:	streq	r3, [r4, #4]
   21280:	streq	r4, [r6, #40]	; 0x28
   21284:	strne	r4, [r3]
   21288:	strne	r3, [r4, #4]
   2128c:	ldr	r3, [r5, #64]	; 0x40
   21290:	str	r4, [r6, #44]	; 0x2c
   21294:	str	r3, [r4, #64]	; 0x40
   21298:	pop	{r4, r5, r6, r7, r8, pc}
   2129c:	mov	r0, r7
   212a0:	bl	11024 <mycore_string_clean_all@plt>
   212a4:	b	21234 <myhtml_token_attr_copy@@Base+0x64>
   212a8:	mov	r0, r7
   212ac:	bl	11024 <mycore_string_clean_all@plt>
   212b0:	b	2126c <myhtml_token_attr_copy@@Base+0x9c>

000212b4 <myhtml_token_node_attr_copy@@Base>:
   212b4:	push	{r4, r5, r6, r7, r8, lr}
   212b8:	mov	r5, r0
   212bc:	mov	r6, r2
   212c0:	mov	r7, r3
   212c4:	ldr	r4, [r1, #40]	; 0x28
   212c8:	cmp	r4, #0
   212cc:	popeq	{r4, r5, r6, r7, r8, pc}
   212d0:	mov	r1, r4
   212d4:	mov	r3, r7
   212d8:	mov	r2, r6
   212dc:	mov	r0, r5
   212e0:	bl	106f4 <myhtml_token_attr_copy@plt>
   212e4:	ldr	r4, [r4]
   212e8:	b	212c8 <myhtml_token_node_attr_copy@@Base+0x14>

000212ec <myhtml_token_node_clone@@Base>:
   212ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   212f0:	subs	r5, r1, #0
   212f4:	bne	21304 <myhtml_token_node_clone@@Base+0x18>
   212f8:	mov	r4, #0
   212fc:	mov	r0, r4
   21300:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21304:	mov	r1, r2
   21308:	mov	r6, r0
   2130c:	ldr	r9, [r0]
   21310:	mov	r7, r3
   21314:	bl	109a0 <myhtml_token_node_create@plt>
   21318:	subs	r4, r0, #0
   2131c:	beq	212f8 <myhtml_token_node_clone@@Base+0xc>
   21320:	ldr	r3, [r5]
   21324:	add	r8, r4, #4
   21328:	str	r3, [r4]
   2132c:	ldr	r3, [r5, #48]	; 0x30
   21330:	str	r3, [r4, #48]	; 0x30
   21334:	mov	r3, #0
   21338:	str	r3, [r4, #40]	; 0x28
   2133c:	str	r3, [r4, #44]	; 0x2c
   21340:	ldr	r3, [r5, #24]
   21344:	str	r3, [r4, #24]
   21348:	ldr	r3, [r5, #28]
   2134c:	str	r3, [r4, #28]
   21350:	ldr	r3, [r5, #32]
   21354:	str	r3, [r4, #32]
   21358:	ldr	r3, [r5, #36]	; 0x24
   2135c:	str	r3, [r4, #36]	; 0x24
   21360:	ldr	r3, [r5, #12]
   21364:	cmp	r3, #0
   21368:	beq	213a8 <myhtml_token_node_clone@@Base+0xbc>
   2136c:	mov	r2, r8
   21370:	add	r3, r3, #1
   21374:	ldr	r0, [r9, #4]
   21378:	ldr	r1, [r9, #52]	; 0x34
   2137c:	bl	105a4 <mycore_string_init@plt>
   21380:	mov	r0, r8
   21384:	ldr	r1, [r5, #4]
   21388:	ldr	r2, [r5, #12]
   2138c:	bl	10868 <mycore_string_append@plt>
   21390:	mov	r3, r7
   21394:	mov	r2, r4
   21398:	mov	r1, r5
   2139c:	mov	r0, r6
   213a0:	bl	10514 <myhtml_token_node_attr_copy@plt>
   213a4:	b	212fc <myhtml_token_node_clone@@Base+0x10>
   213a8:	mov	r0, r8
   213ac:	bl	11024 <mycore_string_clean_all@plt>
   213b0:	b	21390 <myhtml_token_node_clone@@Base+0xa4>

000213b4 <myhtml_token_attr_match@@Base>:
   213b4:	push	{r4, r5, r6, r7, r8, lr}
   213b8:	mov	r5, r2
   213bc:	mov	r6, r3
   213c0:	ldr	r7, [sp, #28]
   213c4:	ldr	r4, [r1, #40]	; 0x28
   213c8:	cmp	r4, #0
   213cc:	beq	21410 <myhtml_token_attr_match@@Base+0x5c>
   213d0:	ldr	r3, [r4, #16]
   213d4:	cmp	r3, r6
   213d8:	bne	2141c <myhtml_token_attr_match@@Base+0x68>
   213dc:	ldr	r3, [r4, #36]	; 0x24
   213e0:	cmp	r3, r7
   213e4:	bne	2141c <myhtml_token_attr_match@@Base+0x68>
   213e8:	mov	r1, r5
   213ec:	ldr	r0, [r4, #8]
   213f0:	bl	fb9c <mycore_strcmp@plt>
   213f4:	cmp	r0, #0
   213f8:	bne	2141c <myhtml_token_attr_match@@Base+0x68>
   213fc:	ldr	r1, [sp, #24]
   21400:	ldr	r0, [r4, #28]
   21404:	bl	fb9c <mycore_strcmp@plt>
   21408:	cmp	r0, #0
   2140c:	beq	21414 <myhtml_token_attr_match@@Base+0x60>
   21410:	mov	r4, #0
   21414:	mov	r0, r4
   21418:	pop	{r4, r5, r6, r7, r8, pc}
   2141c:	ldr	r4, [r4]
   21420:	b	213c8 <myhtml_token_attr_match@@Base+0x14>

00021424 <myhtml_token_attr_match_case@@Base>:
   21424:	push	{r4, r5, r6, r7, r8, lr}
   21428:	mov	r5, r2
   2142c:	mov	r6, r3
   21430:	ldr	r7, [sp, #28]
   21434:	ldr	r4, [r1, #40]	; 0x28
   21438:	cmp	r4, #0
   2143c:	beq	21480 <myhtml_token_attr_match_case@@Base+0x5c>
   21440:	ldr	r3, [r4, #16]
   21444:	cmp	r3, r6
   21448:	bne	2148c <myhtml_token_attr_match_case@@Base+0x68>
   2144c:	ldr	r3, [r4, #36]	; 0x24
   21450:	cmp	r3, r7
   21454:	bne	2148c <myhtml_token_attr_match_case@@Base+0x68>
   21458:	mov	r1, r5
   2145c:	ldr	r0, [r4, #8]
   21460:	bl	fb9c <mycore_strcmp@plt>
   21464:	cmp	r0, #0
   21468:	bne	2148c <myhtml_token_attr_match_case@@Base+0x68>
   2146c:	ldr	r1, [sp, #24]
   21470:	ldr	r0, [r4, #28]
   21474:	bl	104c0 <mycore_strcasecmp@plt>
   21478:	cmp	r0, #0
   2147c:	beq	21484 <myhtml_token_attr_match_case@@Base+0x60>
   21480:	mov	r4, #0
   21484:	mov	r0, r4
   21488:	pop	{r4, r5, r6, r7, r8, pc}
   2148c:	ldr	r4, [r4]
   21490:	b	21438 <myhtml_token_attr_match_case@@Base+0x14>

00021494 <_myhtml_token_create_copy_srt@@Base>:
   21494:	ldr	r0, [r0]
   21498:	push	{r4, r5, r6, lr}
   2149c:	mov	r5, r1
   214a0:	mov	r4, r2
   214a4:	mov	r6, r3
   214a8:	add	r2, r2, #2
   214ac:	ldr	r1, [r0, #52]	; 0x34
   214b0:	ldr	r0, [r0, #4]
   214b4:	bl	108a4 <mchar_async_malloc@plt>
   214b8:	mov	r2, r4
   214bc:	mov	r1, r5
   214c0:	str	r0, [r6]
   214c4:	pop	{r4, r5, r6, lr}
   214c8:	b	10274 <mycore_string_raw_copy@plt>

000214cc <myhtml_token_strict_doctype_by_token@@Base>:
   214cc:	push	{r4, r5, r6, lr}
   214d0:	add	r3, r2, #4
   214d4:	mov	r6, r0
   214d8:	mov	r4, r2
   214dc:	ldr	r5, [r1, #40]	; 0x28
   214e0:	cmp	r5, #0
   214e4:	beq	215c0 <myhtml_token_strict_doctype_by_token@@Base+0xf4>
   214e8:	ldr	r2, [r5, #16]
   214ec:	cmp	r2, #0
   214f0:	beq	215c0 <myhtml_token_strict_doctype_by_token@@Base+0xf4>
   214f4:	ldr	r1, [r5, #8]
   214f8:	bl	fe0c <_myhtml_token_create_copy_srt@plt>
   214fc:	ldr	r0, [pc, #392]	; 2168c <myhtml_token_strict_doctype_by_token@@Base+0x1c0>
   21500:	ldr	r1, [r4, #4]
   21504:	add	r0, pc, r0
   21508:	bl	fb9c <mycore_strcmp@plt>
   2150c:	ldr	r5, [r5]
   21510:	clz	r0, r0
   21514:	lsr	r0, r0, #5
   21518:	strb	r0, [r4]
   2151c:	cmp	r5, #0
   21520:	popeq	{r4, r5, r6, pc}
   21524:	ldr	r3, [r5, #36]	; 0x24
   21528:	cmp	r3, #0
   2152c:	popeq	{r4, r5, r6, pc}
   21530:	ldr	r1, [pc, #344]	; 21690 <myhtml_token_strict_doctype_by_token@@Base+0x1c4>
   21534:	ldr	r0, [r5, #28]
   21538:	add	r1, pc, r1
   2153c:	bl	104c0 <mycore_strcasecmp@plt>
   21540:	cmp	r0, #0
   21544:	bne	2160c <myhtml_token_strict_doctype_by_token@@Base+0x140>
   21548:	ldr	r5, [r5]
   2154c:	cmp	r5, #0
   21550:	beq	21668 <myhtml_token_strict_doctype_by_token@@Base+0x19c>
   21554:	ldr	r2, [r5, #36]	; 0x24
   21558:	cmp	r2, #0
   2155c:	beq	21668 <myhtml_token_strict_doctype_by_token@@Base+0x19c>
   21560:	add	r3, r4, #8
   21564:	mov	r0, r6
   21568:	ldr	r1, [r5, #28]
   2156c:	bl	fe0c <_myhtml_token_create_copy_srt@plt>
   21570:	ldr	r1, [r5]
   21574:	add	r5, r4, #12
   21578:	cmp	r1, #0
   2157c:	beq	21594 <myhtml_token_strict_doctype_by_token@@Base+0xc8>
   21580:	ldr	r2, [r1, #36]	; 0x24
   21584:	cmp	r2, #0
   21588:	movne	r3, r5
   2158c:	ldrne	r1, [r1, #28]
   21590:	bne	215b4 <myhtml_token_strict_doctype_by_token@@Base+0xe8>
   21594:	ldr	r0, [r4, #12]
   21598:	cmp	r0, #0
   2159c:	beq	215a4 <myhtml_token_strict_doctype_by_token@@Base+0xd8>
   215a0:	bl	10d60 <mycore_free@plt>
   215a4:	ldr	r1, [pc, #232]	; 21694 <myhtml_token_strict_doctype_by_token@@Base+0x1c8>
   215a8:	mov	r3, r5
   215ac:	mov	r2, #1
   215b0:	add	r1, pc, r1
   215b4:	mov	r0, r6
   215b8:	pop	{r4, r5, r6, lr}
   215bc:	b	fe0c <_myhtml_token_create_copy_srt@plt>
   215c0:	ldr	r1, [pc, #208]	; 21698 <myhtml_token_strict_doctype_by_token@@Base+0x1cc>
   215c4:	mov	r5, #0
   215c8:	mov	r0, r6
   215cc:	mov	r2, #1
   215d0:	strb	r5, [r4]
   215d4:	add	r1, pc, r1
   215d8:	bl	fe0c <_myhtml_token_create_copy_srt@plt>
   215dc:	ldr	r0, [r4, #8]
   215e0:	cmp	r0, r5
   215e4:	beq	215ec <myhtml_token_strict_doctype_by_token@@Base+0x120>
   215e8:	bl	10d60 <mycore_free@plt>
   215ec:	ldr	r0, [r4, #12]
   215f0:	str	r5, [r4, #8]
   215f4:	cmp	r0, #0
   215f8:	beq	21600 <myhtml_token_strict_doctype_by_token@@Base+0x134>
   215fc:	bl	10d60 <mycore_free@plt>
   21600:	mov	r3, #0
   21604:	str	r3, [r4, #12]
   21608:	pop	{r4, r5, r6, pc}
   2160c:	ldr	r1, [pc, #136]	; 2169c <myhtml_token_strict_doctype_by_token@@Base+0x1d0>
   21610:	ldr	r0, [r5, #28]
   21614:	ldr	r2, [r5, #36]	; 0x24
   21618:	add	r1, pc, r1
   2161c:	bl	10238 <mycore_strncasecmp@plt>
   21620:	cmp	r0, #0
   21624:	bne	21668 <myhtml_token_strict_doctype_by_token@@Base+0x19c>
   21628:	ldr	r5, [r5]
   2162c:	cmp	r5, #0
   21630:	beq	21668 <myhtml_token_strict_doctype_by_token@@Base+0x19c>
   21634:	ldr	r3, [r5, #36]	; 0x24
   21638:	cmp	r3, #0
   2163c:	beq	21668 <myhtml_token_strict_doctype_by_token@@Base+0x19c>
   21640:	ldr	r1, [pc, #88]	; 216a0 <myhtml_token_strict_doctype_by_token@@Base+0x1d4>
   21644:	add	r3, r4, #8
   21648:	mov	r2, #1
   2164c:	mov	r0, r6
   21650:	add	r1, pc, r1
   21654:	bl	fe0c <_myhtml_token_create_copy_srt@plt>
   21658:	add	r3, r4, #12
   2165c:	ldr	r1, [r5, #28]
   21660:	ldr	r2, [r5, #36]	; 0x24
   21664:	b	215b4 <myhtml_token_strict_doctype_by_token@@Base+0xe8>
   21668:	ldr	r0, [r4, #8]
   2166c:	cmp	r0, #0
   21670:	beq	21678 <myhtml_token_strict_doctype_by_token@@Base+0x1ac>
   21674:	bl	10d60 <mycore_free@plt>
   21678:	ldr	r0, [r4, #12]
   2167c:	mov	r3, #0
   21680:	str	r3, [r4, #8]
   21684:	cmp	r0, r3
   21688:	b	215f8 <myhtml_token_strict_doctype_by_token@@Base+0x12c>
   2168c:	andeq	r6, sp, r6, lsr #1
   21690:	andeq	r5, sp, r4, lsr r0
   21694:	andeq	r5, sp, sl, asr r7
   21698:	andeq	r5, sp, r6, lsr r7
   2169c:	andeq	r4, sp, r6, ror #30
   216a0:			; <UNDEFINED> instruction: 0x000d56ba

000216a4 <myhtml_token_doctype_check_html_4_0@@Base>:
   216a4:	ldr	r1, [pc, #68]	; 216f0 <myhtml_token_doctype_check_html_4_0@@Base+0x4c>
   216a8:	push	{r4, lr}
   216ac:	mov	r4, r0
   216b0:	ldr	r0, [r0, #8]
   216b4:	add	r1, pc, r1
   216b8:	bl	fb9c <mycore_strcmp@plt>
   216bc:	cmp	r0, #0
   216c0:	popeq	{r4, pc}
   216c4:	ldr	r0, [r4, #12]
   216c8:	cmp	r0, #0
   216cc:	beq	216e8 <myhtml_token_doctype_check_html_4_0@@Base+0x44>
   216d0:	ldr	r1, [pc, #28]	; 216f4 <myhtml_token_doctype_check_html_4_0@@Base+0x50>
   216d4:	add	r1, pc, r1
   216d8:	bl	fb9c <mycore_strcmp@plt>
   216dc:	adds	r0, r0, #0
   216e0:	movne	r0, #1
   216e4:	pop	{r4, pc}
   216e8:	mov	r0, #1
   216ec:	pop	{r4, pc}
   216f0:	andeq	r5, sp, r8, asr r6
   216f4:	andeq	r5, sp, r1, asr r6

000216f8 <myhtml_token_doctype_check_html_4_01@@Base>:
   216f8:	ldr	r1, [pc, #68]	; 21744 <myhtml_token_doctype_check_html_4_01@@Base+0x4c>
   216fc:	push	{r4, lr}
   21700:	mov	r4, r0
   21704:	ldr	r0, [r0, #8]
   21708:	add	r1, pc, r1
   2170c:	bl	fb9c <mycore_strcmp@plt>
   21710:	cmp	r0, #0
   21714:	popeq	{r4, pc}
   21718:	ldr	r0, [r4, #12]
   2171c:	cmp	r0, #0
   21720:	beq	2173c <myhtml_token_doctype_check_html_4_01@@Base+0x44>
   21724:	ldr	r1, [pc, #28]	; 21748 <myhtml_token_doctype_check_html_4_01@@Base+0x50>
   21728:	add	r1, pc, r1
   2172c:	bl	fb9c <mycore_strcmp@plt>
   21730:	adds	r0, r0, #0
   21734:	movne	r0, #1
   21738:	pop	{r4, pc}
   2173c:	mov	r0, #1
   21740:	pop	{r4, pc}
   21744:	andeq	r5, sp, r8, asr #12
   21748:	andeq	r5, sp, r2, asr #12

0002174c <myhtml_token_doctype_check_xhtml_1_0@@Base>:
   2174c:	ldr	r3, [r0, #12]
   21750:	cmp	r3, #0
   21754:	beq	21794 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x48>
   21758:	ldr	r1, [pc, #60]	; 2179c <myhtml_token_doctype_check_xhtml_1_0@@Base+0x50>
   2175c:	push	{r4, lr}
   21760:	mov	r4, r0
   21764:	ldr	r0, [r0, #8]
   21768:	add	r1, pc, r1
   2176c:	bl	fb9c <mycore_strcmp@plt>
   21770:	cmp	r0, #0
   21774:	popeq	{r4, pc}
   21778:	ldr	r1, [pc, #32]	; 217a0 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x54>
   2177c:	ldr	r0, [r4, #12]
   21780:	add	r1, pc, r1
   21784:	bl	fb9c <mycore_strcmp@plt>
   21788:	adds	r0, r0, #0
   2178c:	movne	r0, #1
   21790:	pop	{r4, pc}
   21794:	mov	r0, #1
   21798:	bx	lr
   2179c:	andeq	r5, sp, r8, lsr #12
   217a0:	andeq	r5, sp, r1, lsr r6

000217a4 <myhtml_token_doctype_check_xhtml_1_1@@Base>:
   217a4:	ldr	r3, [r0, #12]
   217a8:	cmp	r3, #0
   217ac:	beq	217ec <myhtml_token_doctype_check_xhtml_1_1@@Base+0x48>
   217b0:	ldr	r1, [pc, #60]	; 217f4 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x50>
   217b4:	push	{r4, lr}
   217b8:	mov	r4, r0
   217bc:	ldr	r0, [r0, #8]
   217c0:	add	r1, pc, r1
   217c4:	bl	fb9c <mycore_strcmp@plt>
   217c8:	cmp	r0, #0
   217cc:	popeq	{r4, pc}
   217d0:	ldr	r1, [pc, #32]	; 217f8 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x54>
   217d4:	ldr	r0, [r4, #12]
   217d8:	add	r1, pc, r1
   217dc:	bl	fb9c <mycore_strcmp@plt>
   217e0:	adds	r0, r0, #0
   217e4:	movne	r0, #1
   217e8:	pop	{r4, pc}
   217ec:	mov	r0, #1
   217f0:	bx	lr
   217f4:	andeq	r5, sp, r3, lsr #12
   217f8:	andeq	r5, sp, r5, lsr #12

000217fc <myhtml_token_release_and_check_doctype_attributes@@Base>:
   217fc:	push	{r4, lr}
   21800:	subs	r4, r2, #0
   21804:	bne	21810 <myhtml_token_release_and_check_doctype_attributes@@Base+0x14>
   21808:	mov	r0, #0
   2180c:	pop	{r4, pc}
   21810:	bl	10430 <myhtml_token_strict_doctype_by_token@plt>
   21814:	ldr	r3, [r4, #4]
   21818:	cmp	r3, #0
   2181c:	beq	21808 <myhtml_token_release_and_check_doctype_attributes@@Base+0xc>
   21820:	ldrb	r3, [r4]
   21824:	cmp	r3, #0
   21828:	beq	2184c <myhtml_token_release_and_check_doctype_attributes@@Base+0x50>
   2182c:	ldr	r3, [r4, #8]
   21830:	cmp	r3, #0
   21834:	beq	21808 <myhtml_token_release_and_check_doctype_attributes@@Base+0xc>
   21838:	ldrb	r3, [r4]
   2183c:	cmp	r3, #0
   21840:	bne	2187c <myhtml_token_release_and_check_doctype_attributes@@Base+0x80>
   21844:	mov	r0, #1
   21848:	pop	{r4, pc}
   2184c:	ldr	r3, [r4, #8]
   21850:	cmp	r3, #0
   21854:	bne	21844 <myhtml_token_release_and_check_doctype_attributes@@Base+0x48>
   21858:	ldr	r0, [r4, #12]
   2185c:	cmp	r0, #0
   21860:	beq	21844 <myhtml_token_release_and_check_doctype_attributes@@Base+0x48>
   21864:	ldr	r1, [pc, #84]	; 218c0 <myhtml_token_release_and_check_doctype_attributes@@Base+0xc4>
   21868:	add	r1, pc, r1
   2186c:	bl	fb9c <mycore_strcmp@plt>
   21870:	cmp	r0, #0
   21874:	bne	2182c <myhtml_token_release_and_check_doctype_attributes@@Base+0x30>
   21878:	b	21844 <myhtml_token_release_and_check_doctype_attributes@@Base+0x48>
   2187c:	mov	r0, r4
   21880:	bl	104b4 <myhtml_token_doctype_check_html_4_0@plt>
   21884:	cmp	r0, #0
   21888:	beq	21844 <myhtml_token_release_and_check_doctype_attributes@@Base+0x48>
   2188c:	mov	r0, r4
   21890:	bl	10340 <myhtml_token_doctype_check_html_4_01@plt>
   21894:	cmp	r0, #0
   21898:	beq	21844 <myhtml_token_release_and_check_doctype_attributes@@Base+0x48>
   2189c:	mov	r0, r4
   218a0:	bl	105f8 <myhtml_token_doctype_check_xhtml_1_0@plt>
   218a4:	cmp	r0, #0
   218a8:	beq	21844 <myhtml_token_release_and_check_doctype_attributes@@Base+0x48>
   218ac:	mov	r0, r4
   218b0:	bl	fbd8 <myhtml_token_doctype_check_xhtml_1_1@plt>
   218b4:	eor	r0, r0, #1
   218b8:	uxtb	r0, r0
   218bc:	pop	{r4, pc}
   218c0:	andeq	r5, sp, r2, asr #11

000218c4 <myhtml_token_attr_compare@@Base>:
   218c4:	cmp	r1, #0
   218c8:	cmpne	r0, #0
   218cc:	bne	218e0 <myhtml_token_attr_compare@@Base+0x1c>
   218d0:	mov	r0, #0
   218d4:	bx	lr
   218d8:	mov	r0, #0
   218dc:	pop	{r4, r5, r6, pc}
   218e0:	push	{r4, r5, r6, lr}
   218e4:	ldr	r5, [r0, #40]	; 0x28
   218e8:	ldr	r4, [r1, #40]	; 0x28
   218ec:	cmp	r5, #0
   218f0:	cmpne	r4, #0
   218f4:	bne	21908 <myhtml_token_attr_compare@@Base+0x44>
   218f8:	orrs	r3, r5, r4
   218fc:	moveq	r0, #1
   21900:	movne	r0, #0
   21904:	pop	{r4, r5, r6, pc}
   21908:	ldr	r3, [r4, #16]
   2190c:	ldr	r2, [r5, #16]
   21910:	cmp	r2, r3
   21914:	bne	218d8 <myhtml_token_attr_compare@@Base+0x14>
   21918:	ldr	r3, [r4, #36]	; 0x24
   2191c:	ldr	r2, [r5, #36]	; 0x24
   21920:	cmp	r2, r3
   21924:	bne	218d8 <myhtml_token_attr_compare@@Base+0x14>
   21928:	ldr	r1, [r4, #8]
   2192c:	ldr	r0, [r5, #8]
   21930:	bl	fb9c <mycore_strcmp@plt>
   21934:	cmp	r0, #0
   21938:	bne	218d8 <myhtml_token_attr_compare@@Base+0x14>
   2193c:	ldr	r1, [r4, #28]
   21940:	ldr	r0, [r5, #28]
   21944:	bl	104c0 <mycore_strcasecmp@plt>
   21948:	cmp	r0, #0
   2194c:	bne	218d8 <myhtml_token_attr_compare@@Base+0x14>
   21950:	ldr	r4, [r4]
   21954:	ldr	r5, [r5]
   21958:	b	218ec <myhtml_token_attr_compare@@Base+0x28>

0002195c <myhtml_token_attr_by_name@@Base>:
   2195c:	push	{r4, r5, r6, lr}
   21960:	mov	r5, r1
   21964:	mov	r6, r2
   21968:	ldr	r4, [r0, #40]	; 0x28
   2196c:	cmp	r4, #0
   21970:	beq	2199c <myhtml_token_attr_by_name@@Base+0x40>
   21974:	ldr	r3, [r4, #16]
   21978:	cmp	r3, r6
   2197c:	beq	21988 <myhtml_token_attr_by_name@@Base+0x2c>
   21980:	ldr	r4, [r4]
   21984:	b	2196c <myhtml_token_attr_by_name@@Base+0x10>
   21988:	mov	r1, r5
   2198c:	ldr	r0, [r4, #8]
   21990:	bl	fb9c <mycore_strcmp@plt>
   21994:	cmp	r0, #0
   21998:	bne	21980 <myhtml_token_attr_by_name@@Base+0x24>
   2199c:	mov	r0, r4
   219a0:	pop	{r4, r5, r6, pc}

000219a4 <myhtml_token_node_attr_copy_with_check@@Base>:
   219a4:	push	{r4, r5, r6, r7, r8, lr}
   219a8:	mov	r6, r0
   219ac:	mov	r5, r2
   219b0:	mov	r7, r3
   219b4:	ldr	r4, [r1, #40]	; 0x28
   219b8:	cmp	r4, #0
   219bc:	popeq	{r4, r5, r6, r7, r8, pc}
   219c0:	ldr	r2, [r4, #16]
   219c4:	cmp	r2, #0
   219c8:	beq	219f4 <myhtml_token_node_attr_copy_with_check@@Base+0x50>
   219cc:	mov	r0, r5
   219d0:	ldr	r1, [r4, #8]
   219d4:	bl	10e44 <myhtml_token_attr_by_name@plt>
   219d8:	cmp	r0, #0
   219dc:	bne	219f4 <myhtml_token_node_attr_copy_with_check@@Base+0x50>
   219e0:	mov	r3, r7
   219e4:	mov	r2, r5
   219e8:	mov	r1, r4
   219ec:	mov	r0, r6
   219f0:	bl	106f4 <myhtml_token_attr_copy@plt>
   219f4:	ldr	r4, [r4]
   219f8:	b	219b8 <myhtml_token_node_attr_copy_with_check@@Base+0x14>

000219fc <myhtml_token_adjust_mathml_attributes@@Base>:
   219fc:	ldr	r1, [pc, #64]	; 21a44 <myhtml_token_adjust_mathml_attributes@@Base+0x48>
   21a00:	mov	r2, #13
   21a04:	push	{r4, lr}
   21a08:	add	r1, pc, r1
   21a0c:	bl	10e44 <myhtml_token_attr_by_name@plt>
   21a10:	cmp	r0, #0
   21a14:	popeq	{r4, pc}
   21a18:	ldr	r3, [pc, #40]	; 21a48 <myhtml_token_adjust_mathml_attributes@@Base+0x4c>
   21a1c:	ldr	r2, [r0, #8]
   21a20:	add	r3, pc, r3
   21a24:	add	r1, r3, #12
   21a28:	ldr	r0, [r3], #4
   21a2c:	cmp	r3, r1
   21a30:	str	r0, [r2], #4
   21a34:	bne	21a28 <myhtml_token_adjust_mathml_attributes@@Base+0x2c>
   21a38:	ldrb	r3, [r3]
   21a3c:	strb	r3, [r2]
   21a40:	pop	{r4, pc}
   21a44:	andeq	r5, sp, r6, lsr r4
   21a48:	andeq	r5, sp, ip, lsr #8

00021a4c <myhtml_token_adjust_svg_attributes@@Base>:
   21a4c:	push	{r4, r5, r6, r7, r8, lr}
   21a50:	mov	r7, r0
   21a54:	mov	r6, #0
   21a58:	ldr	r4, [pc, #68]	; 21aa4 <myhtml_token_adjust_svg_attributes@@Base+0x58>
   21a5c:	add	r4, pc, r4
   21a60:	mov	r0, r7
   21a64:	ldm	r4, {r1, r2}
   21a68:	bl	10e44 <myhtml_token_attr_by_name@plt>
   21a6c:	cmp	r0, #0
   21a70:	beq	21a90 <myhtml_token_adjust_svg_attributes@@Base+0x44>
   21a74:	add	r5, r0, #8
   21a78:	mov	r0, r5
   21a7c:	bl	10cac <mycore_string_clean@plt>
   21a80:	mov	r0, r5
   21a84:	ldr	r1, [r4, #8]
   21a88:	ldr	r2, [r4, #12]
   21a8c:	bl	10868 <mycore_string_append@plt>
   21a90:	add	r6, r6, #1
   21a94:	add	r4, r4, #16
   21a98:	cmp	r6, #58	; 0x3a
   21a9c:	bne	21a60 <myhtml_token_adjust_svg_attributes@@Base+0x14>
   21aa0:	pop	{r4, r5, r6, r7, r8, pc}
   21aa4:	andeq	sp, lr, r4, lsl #31

00021aa8 <myhtml_token_adjust_foreign_attributes@@Base>:
   21aa8:	push	{r4, r5, r6, r7, r8, lr}
   21aac:	mov	r8, r0
   21ab0:	mov	r5, #0
   21ab4:	ldr	r4, [pc, #80]	; 21b0c <myhtml_token_adjust_foreign_attributes@@Base+0x64>
   21ab8:	add	r4, pc, r4
   21abc:	add	r4, r4, #928	; 0x3a0
   21ac0:	mov	r0, r8
   21ac4:	ldm	r4, {r1, r2}
   21ac8:	bl	10e44 <myhtml_token_attr_by_name@plt>
   21acc:	subs	r6, r0, #0
   21ad0:	beq	21af8 <myhtml_token_adjust_foreign_attributes@@Base+0x50>
   21ad4:	add	r7, r6, #8
   21ad8:	mov	r0, r7
   21adc:	bl	10cac <mycore_string_clean@plt>
   21ae0:	mov	r0, r7
   21ae4:	ldr	r1, [r4, #8]
   21ae8:	ldr	r2, [r4, #12]
   21aec:	bl	10868 <mycore_string_append@plt>
   21af0:	ldr	r3, [r4, #16]
   21af4:	str	r3, [r6, #64]	; 0x40
   21af8:	add	r5, r5, #1
   21afc:	add	r4, r4, #20
   21b00:	cmp	r5, #11
   21b04:	bne	21ac0 <myhtml_token_adjust_foreign_attributes@@Base+0x18>
   21b08:	pop	{r4, r5, r6, r7, r8, pc}
   21b0c:	andeq	sp, lr, r8, lsr #30

00021b10 <myhtml_token_delete@@Base>:
   21b10:	ldr	r2, [r1, #4]
   21b14:	push	{r4, r5, r6, lr}
   21b18:	mov	r5, r0
   21b1c:	mov	r4, r1
   21b20:	cmp	r2, #0
   21b24:	beq	21b3c <myhtml_token_delete@@Base+0x2c>
   21b28:	ldr	r0, [r1, #16]
   21b2c:	cmp	r0, #0
   21b30:	beq	21b3c <myhtml_token_delete@@Base+0x2c>
   21b34:	ldr	r1, [r1, #20]
   21b38:	bl	106ac <mchar_async_free@plt>
   21b3c:	mov	r1, r4
   21b40:	ldr	r0, [r5, #4]
   21b44:	pop	{r4, r5, r6, lr}
   21b48:	b	ffec <mcobject_async_free@plt>

00021b4c <myhtml_token_attr_delete_all@@Base>:
   21b4c:	push	{r4, lr}
   21b50:	ldr	r4, [r1, #40]	; 0x28
   21b54:	cmp	r4, #0
   21b58:	popeq	{r4, pc}
   21b5c:	ldr	r2, [r4, #8]
   21b60:	cmp	r2, #0
   21b64:	beq	21b7c <myhtml_token_attr_delete_all@@Base+0x30>
   21b68:	ldr	r0, [r4, #20]
   21b6c:	cmp	r0, #0
   21b70:	beq	21b7c <myhtml_token_attr_delete_all@@Base+0x30>
   21b74:	ldr	r1, [r4, #24]
   21b78:	bl	106ac <mchar_async_free@plt>
   21b7c:	ldr	r2, [r4, #28]
   21b80:	cmp	r2, #0
   21b84:	beq	21b9c <myhtml_token_attr_delete_all@@Base+0x50>
   21b88:	ldr	r0, [r4, #40]	; 0x28
   21b8c:	cmp	r0, #0
   21b90:	beq	21b9c <myhtml_token_attr_delete_all@@Base+0x50>
   21b94:	ldr	r1, [r4, #44]	; 0x2c
   21b98:	bl	106ac <mchar_async_free@plt>
   21b9c:	ldr	r4, [r4]
   21ba0:	b	21b54 <myhtml_token_attr_delete_all@@Base+0x8>

00021ba4 <myhtml_token_attr_remove@@Base>:
   21ba4:	cmp	r1, #0
   21ba8:	beq	21bd8 <myhtml_token_attr_remove@@Base+0x34>
   21bac:	ldrd	r2, [r1]
   21bb0:	cmp	r3, #0
   21bb4:	strne	r2, [r3]
   21bb8:	streq	r2, [r0, #40]	; 0x28
   21bbc:	ldr	r2, [r1]
   21bc0:	cmp	r2, #0
   21bc4:	strne	r3, [r2, #4]
   21bc8:	streq	r3, [r0, #44]	; 0x2c
   21bcc:	mov	r3, #0
   21bd0:	str	r3, [r1]
   21bd4:	str	r3, [r1, #4]
   21bd8:	mov	r0, r1
   21bdc:	bx	lr

00021be0 <myhtml_token_attr_remove_by_name@@Base>:
   21be0:	push	{r4, lr}
   21be4:	mov	r4, r0
   21be8:	bl	10e44 <myhtml_token_attr_by_name@plt>
   21bec:	mov	r1, r0
   21bf0:	mov	r0, r4
   21bf4:	pop	{r4, lr}
   21bf8:	b	10508 <myhtml_token_attr_remove@plt>

00021bfc <myhtml_token_merged_two_token_string@@Base>:
   21bfc:	push	{r4, r5, r6, r7, r8, r9, lr}
   21c00:	mov	r8, r0
   21c04:	mov	r5, r2
   21c08:	sub	sp, sp, #28
   21c0c:	mov	r6, r1
   21c10:	mov	r9, r3
   21c14:	add	r4, r1, #4
   21c18:	ldr	r0, [r0, #8]
   21c1c:	add	r7, r2, #4
   21c20:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   21c24:	mov	r1, r5
   21c28:	ldr	r0, [r8, #8]
   21c2c:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   21c30:	mov	r3, #0
   21c34:	ldr	r1, [r8, #52]	; 0x34
   21c38:	str	r3, [r6, #24]
   21c3c:	str	r3, [r6, #28]
   21c40:	ldr	r3, [r6, #20]
   21c44:	cmp	r3, r1
   21c48:	bne	21c6c <myhtml_token_merged_two_token_string@@Base+0x70>
   21c4c:	cmp	r9, #0
   21c50:	bne	21c60 <myhtml_token_merged_two_token_string@@Base+0x64>
   21c54:	mov	r1, r7
   21c58:	mov	r0, r4
   21c5c:	bl	1010c <mycore_string_copy@plt>
   21c60:	mov	r0, r6
   21c64:	add	sp, sp, #28
   21c68:	pop	{r4, r5, r6, r7, r8, r9, pc}
   21c6c:	ldr	r3, [r5, #20]
   21c70:	cmp	r1, r3
   21c74:	bne	21c98 <myhtml_token_merged_two_token_string@@Base+0x9c>
   21c78:	cmp	r9, #0
   21c7c:	mov	r6, r5
   21c80:	movne	r1, r4
   21c84:	movne	r0, r7
   21c88:	moveq	r1, r7
   21c8c:	moveq	r0, r4
   21c90:	bl	1010c <mycore_string_copy@plt>
   21c94:	b	21c60 <myhtml_token_merged_two_token_string@@Base+0x64>
   21c98:	ldr	r3, [r5, #12]
   21c9c:	add	r5, sp, #4
   21ca0:	ldr	r2, [r6, #12]
   21ca4:	ldr	r0, [r8, #4]
   21ca8:	add	r3, r3, #2
   21cac:	add	r3, r3, r2
   21cb0:	mov	r2, r5
   21cb4:	bl	105a4 <mycore_string_init@plt>
   21cb8:	cmp	r9, #0
   21cbc:	beq	21cf4 <myhtml_token_merged_two_token_string@@Base+0xf8>
   21cc0:	mov	r1, r7
   21cc4:	mov	r0, r5
   21cc8:	bl	1010c <mycore_string_copy@plt>
   21ccc:	mov	r1, r4
   21cd0:	mov	r0, r5
   21cd4:	bl	1010c <mycore_string_copy@plt>
   21cd8:	mov	lr, r5
   21cdc:	mov	ip, r4
   21ce0:	ldm	lr!, {r0, r1, r2, r3}
   21ce4:	stmia	ip!, {r0, r1, r2, r3}
   21ce8:	ldr	r3, [lr]
   21cec:	str	r3, [ip]
   21cf0:	b	21c60 <myhtml_token_merged_two_token_string@@Base+0x64>
   21cf4:	mov	r1, r4
   21cf8:	mov	r0, r5
   21cfc:	bl	1010c <mycore_string_copy@plt>
   21d00:	mov	r1, r7
   21d04:	b	21cd0 <myhtml_token_merged_two_token_string@@Base+0xd4>

00021d08 <myhtml_token_set_replacement_character_for_null_token@@Base>:
   21d08:	push	{r4, r5, r6, lr}
   21d0c:	mov	r4, r1
   21d10:	sub	sp, sp, #24
   21d14:	mov	r6, r0
   21d18:	add	r5, sp, #4
   21d1c:	ldr	r0, [r0, #8]
   21d20:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   21d24:	ldr	r3, [r4, #12]
   21d28:	mov	r2, r5
   21d2c:	ldr	r0, [r6, #4]
   21d30:	ldr	r1, [r6, #52]	; 0x34
   21d34:	add	r3, r3, #2
   21d38:	bl	105a4 <mycore_string_init@plt>
   21d3c:	mov	r0, r5
   21d40:	ldr	r2, [r4, #12]
   21d44:	ldr	r1, [r4, #4]!
   21d48:	bl	1031c <mycore_string_append_with_replacement_null_characters@plt>
   21d4c:	mov	ip, r5
   21d50:	ldm	ip!, {r0, r1, r2, r3}
   21d54:	stmia	r4!, {r0, r1, r2, r3}
   21d58:	ldr	r3, [ip]
   21d5c:	str	r3, [r4]
   21d60:	add	sp, sp, #24
   21d64:	pop	{r4, r5, r6, pc}

00021d68 <myhtml_tokenizer_state_rcdata_less_than_sign@@Base>:
   21d68:	ldrb	r2, [r2, r3]
   21d6c:	cmp	r2, #47	; 0x2f
   21d70:	moveq	r2, #11
   21d74:	movne	r2, #2
   21d78:	addeq	r3, r3, #1
   21d7c:	str	r2, [r0, #160]	; 0xa0
   21d80:	mov	r0, r3
   21d84:	bx	lr

00021d88 <myhtml_tokenizer_state_rcdata_end_tag_open@@Base>:
   21d88:	ldr	r1, [pc, #32]	; 21db0 <myhtml_tokenizer_state_rcdata_end_tag_open@@Base+0x28>
   21d8c:	ldrb	r2, [r2, r3]
   21d90:	add	r1, pc, r1
   21d94:	ldrb	r2, [r1, r2]
   21d98:	cmp	r2, #1
   21d9c:	moveq	r2, #12
   21da0:	movne	r2, #2
   21da4:	str	r2, [r0, #160]	; 0xa0
   21da8:	mov	r0, r3
   21dac:	bx	lr
   21db0:	andeq	r5, sp, r4, lsl #14

00021db4 <myhtml_tokenizer_state_rawtext_less_than_sign@@Base>:
   21db4:	ldrb	r2, [r2, r3]
   21db8:	cmp	r2, #47	; 0x2f
   21dbc:	moveq	r2, #14
   21dc0:	movne	r2, #4
   21dc4:	addeq	r3, r3, #1
   21dc8:	str	r2, [r0, #160]	; 0xa0
   21dcc:	mov	r0, r3
   21dd0:	bx	lr

00021dd4 <myhtml_tokenizer_state_rawtext_end_tag_open@@Base>:
   21dd4:	ldr	r1, [pc, #32]	; 21dfc <myhtml_tokenizer_state_rawtext_end_tag_open@@Base+0x28>
   21dd8:	ldrb	r2, [r2, r3]
   21ddc:	add	r1, pc, r1
   21de0:	ldrb	r2, [r1, r2]
   21de4:	cmp	r2, #1
   21de8:	moveq	r2, #15
   21dec:	movne	r2, #4
   21df0:	str	r2, [r0, #160]	; 0xa0
   21df4:	mov	r0, r3
   21df8:	bx	lr
   21dfc:			; <UNDEFINED> instruction: 0x000d56b8

00021e00 <myhtml_tokenizer_state_data@@Base>:
   21e00:	push	{r4, r5, lr}
   21e04:	ldr	r5, [pc, #152]	; 21ea4 <myhtml_tokenizer_state_data@@Base+0xa4>
   21e08:	ldr	r4, [sp, #12]
   21e0c:	add	r5, pc, r5
   21e10:	cmp	r3, r4
   21e14:	bcs	21e40 <myhtml_tokenizer_state_data@@Base+0x40>
   21e18:	ldrb	ip, [r2, r3]
   21e1c:	add	lr, r3, #1
   21e20:	cmp	ip, #60	; 0x3c
   21e24:	bne	21e48 <myhtml_tokenizer_state_data@@Base+0x48>
   21e28:	ldr	r2, [r0, #192]	; 0xc0
   21e2c:	add	r3, r2, r3
   21e30:	mov	r2, #7
   21e34:	str	r3, [r1, #32]
   21e38:	mov	r3, lr
   21e3c:	str	r2, [r0, #160]	; 0xa0
   21e40:	mov	r0, r3
   21e44:	pop	{r4, r5, pc}
   21e48:	cmp	ip, #0
   21e4c:	bne	21e64 <myhtml_tokenizer_state_data@@Base+0x64>
   21e50:	ldr	r3, [r1, #48]	; 0x30
   21e54:	tst	r3, #2048	; 0x800
   21e58:	ldreq	r3, [r1, #48]	; 0x30
   21e5c:	orreq	r3, r3, #2048	; 0x800
   21e60:	beq	21e98 <myhtml_tokenizer_state_data@@Base+0x98>
   21e64:	ldr	r3, [r1, #48]	; 0x30
   21e68:	tst	r3, #8
   21e6c:	beq	21e9c <myhtml_tokenizer_state_data@@Base+0x9c>
   21e70:	ldrb	r3, [r5, ip]
   21e74:	cmp	r3, #2
   21e78:	beq	21e9c <myhtml_tokenizer_state_data@@Base+0x9c>
   21e7c:	ldr	r3, [r1, #48]	; 0x30
   21e80:	ldr	ip, [r1, #48]	; 0x30
   21e84:	and	r3, r3, #8
   21e88:	eor	r3, r3, ip
   21e8c:	str	r3, [r1, #48]	; 0x30
   21e90:	ldr	r3, [r1, #48]	; 0x30
   21e94:	orr	r3, r3, #512	; 0x200
   21e98:	str	r3, [r1, #48]	; 0x30
   21e9c:	mov	r3, lr
   21ea0:	b	21e10 <myhtml_tokenizer_state_data@@Base+0x10>
   21ea4:	andeq	r5, sp, r8, lsl #13

00021ea8 <myhtml_tokenizer_state_comment@@Base>:
   21ea8:	push	{lr}		; (str lr, [sp, #-4]!)
   21eac:	mov	lr, #2
   21eb0:	ldr	ip, [sp, #4]
   21eb4:	str	lr, [r1]
   21eb8:	cmp	r3, ip
   21ebc:	bcs	21ed8 <myhtml_tokenizer_state_comment@@Base+0x30>
   21ec0:	ldrb	r1, [r2, r3]
   21ec4:	add	r3, r3, #1
   21ec8:	cmp	r1, #45	; 0x2d
   21ecc:	bne	21eb8 <myhtml_tokenizer_state_comment@@Base+0x10>
   21ed0:	mov	r2, #48	; 0x30
   21ed4:	str	r2, [r0, #160]	; 0xa0
   21ed8:	mov	r0, r3
   21edc:	pop	{pc}		; (ldr pc, [sp], #4)

00021ee0 <myhtml_tokenizer_state_comment_end_dash@@Base>:
   21ee0:	ldrb	r2, [r2, r3]
   21ee4:	cmp	r2, #45	; 0x2d
   21ee8:	movne	r2, #47	; 0x2f
   21eec:	moveq	r2, #49	; 0x31
   21ef0:	str	r2, [r0, #160]	; 0xa0
   21ef4:	add	r0, r3, #1
   21ef8:	bx	lr

00021efc <myhtml_tokenizer_state_parse_error_stop@@Base>:
   21efc:	movw	r3, #37164	; 0x912c
   21f00:	str	r3, [r0, #196]	; 0xc4
   21f04:	ldr	r0, [sp]
   21f08:	bx	lr

00021f0c <myhtml_tokenizer_state_plaintext@@Base>:
   21f0c:	mov	r2, r1
   21f10:	ldr	r1, [r1, #48]	; 0x30
   21f14:	push	{r4, r5, r6, lr}
   21f18:	mov	r5, r0
   21f1c:	mov	r6, #0
   21f20:	ldr	r4, [sp, #16]
   21f24:	tst	r1, #128	; 0x80
   21f28:	ldreq	r1, [r2, #48]	; 0x30
   21f2c:	orreq	r1, r1, #128	; 0x80
   21f30:	streq	r1, [r2, #48]	; 0x30
   21f34:	ldr	r1, [r2, #48]	; 0x30
   21f38:	ldr	r0, [r2, #48]	; 0x30
   21f3c:	and	r1, r1, #8
   21f40:	eor	r1, r1, r0
   21f44:	mov	r0, r5
   21f48:	str	r1, [r2, #48]	; 0x30
   21f4c:	ldr	r1, [r5, #192]	; 0xc0
   21f50:	add	r1, r1, r3
   21f54:	sub	r3, r4, r3
   21f58:	str	r1, [r2, #24]
   21f5c:	mov	r1, r4
   21f60:	str	r3, [r2, #28]
   21f64:	str	r3, [r2, #36]	; 0x24
   21f68:	mov	r3, #1
   21f6c:	str	r3, [r2]
   21f70:	str	r6, [r5, #160]	; 0xa0
   21f74:	bl	ffc8 <myhtml_queue_add@plt>
   21f78:	cmp	r0, r6
   21f7c:	movne	r3, #69	; 0x45
   21f80:	movne	r4, r6
   21f84:	mov	r0, r4
   21f88:	strne	r3, [r5, #160]	; 0xa0
   21f8c:	pop	{r4, r5, r6, pc}

00021f90 <myhtml_tokenizer_state_bogus_comment@@Base>:
   21f90:	push	{r4, r5, r6, lr}
   21f94:	mov	r4, r0
   21f98:	mov	r0, #2
   21f9c:	str	r0, [r1]
   21fa0:	ldr	r0, [r1, #48]	; 0x30
   21fa4:	ldr	ip, [sp, #16]
   21fa8:	orr	r0, r0, #1024	; 0x400
   21fac:	str	r0, [r1, #48]	; 0x30
   21fb0:	mov	r0, r3
   21fb4:	cmp	r0, ip
   21fb8:	popcs	{r4, r5, r6, pc}
   21fbc:	add	r5, r0, #1
   21fc0:	ldrb	r3, [r2, r0]
   21fc4:	cmp	r3, #62	; 0x3e
   21fc8:	bne	2201c <myhtml_tokenizer_state_bogus_comment@@Base+0x8c>
   21fcc:	ldr	r3, [r1, #24]
   21fd0:	ldr	r2, [r4, #192]	; 0xc0
   21fd4:	sub	r3, r2, r3
   21fd8:	add	r0, r3, r0
   21fdc:	ldr	r3, [r1, #32]
   21fe0:	str	r0, [r1, #28]
   21fe4:	mov	r0, r4
   21fe8:	sub	r2, r2, r3
   21fec:	add	r2, r2, r5
   21ff0:	str	r2, [r1, #36]	; 0x24
   21ff4:	mov	r2, r1
   21ff8:	mov	r1, r5
   21ffc:	bl	ffc8 <myhtml_queue_add@plt>
   22000:	cmp	r0, #0
   22004:	movne	r3, #69	; 0x45
   22008:	movne	r0, #0
   2200c:	streq	r0, [r4, #160]	; 0xa0
   22010:	moveq	r0, r5
   22014:	strne	r3, [r4, #160]	; 0xa0
   22018:	pop	{r4, r5, r6, pc}
   2201c:	mov	r0, r5
   22020:	b	21fb4 <myhtml_tokenizer_state_bogus_comment@@Base+0x24>

00022024 <myhtml_tokenizer_state_cdata_section@@Base>:
   22024:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   22028:	mov	r4, r3
   2202c:	mov	r6, r0
   22030:	mov	r5, r1
   22034:	add	r2, r2, r4
   22038:	ldr	r3, [r1, #48]	; 0x30
   2203c:	ldr	r8, [sp, #32]
   22040:	tst	r3, #256	; 0x100
   22044:	ldreq	r3, [r1, #48]	; 0x30
   22048:	orreq	r3, r3, #256	; 0x100
   2204c:	streq	r3, [r1, #48]	; 0x30
   22050:	cmp	r4, r8
   22054:	bcs	22110 <myhtml_tokenizer_state_cdata_section@@Base+0xec>
   22058:	mov	r9, r2
   2205c:	add	r7, r4, #1
   22060:	ldrb	r3, [r9], #1
   22064:	cmp	r3, #62	; 0x3e
   22068:	bne	22118 <myhtml_tokenizer_state_cdata_section@@Base+0xf4>
   2206c:	cmp	r4, #1
   22070:	subhi	r0, r2, #2
   22074:	bhi	22090 <myhtml_tokenizer_state_cdata_section@@Base+0x6c>
   22078:	ldr	r1, [r6, #192]	; 0xc0
   2207c:	mov	r2, #2
   22080:	mov	r0, r6
   22084:	sub	r1, r1, #2
   22088:	add	r1, r1, r4
   2208c:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   22090:	ldrb	r3, [r0]
   22094:	cmp	r3, #93	; 0x5d
   22098:	bne	22118 <myhtml_tokenizer_state_cdata_section@@Base+0xf4>
   2209c:	ldrb	r3, [r0, #1]
   220a0:	cmp	r3, #93	; 0x5d
   220a4:	bne	22118 <myhtml_tokenizer_state_cdata_section@@Base+0xf4>
   220a8:	ldr	r3, [r6, #192]	; 0xc0
   220ac:	ldr	r1, [r5, #24]
   220b0:	sub	r2, r3, #2
   220b4:	sub	r2, r2, r1
   220b8:	add	r2, r2, r4
   220bc:	mov	r4, r7
   220c0:	cmp	r2, #0
   220c4:	addeq	r3, r3, r7
   220c8:	str	r2, [r5, #28]
   220cc:	streq	r3, [r5, #24]
   220d0:	beq	22108 <myhtml_tokenizer_state_cdata_section@@Base+0xe4>
   220d4:	ldr	r2, [r5, #32]
   220d8:	mov	r1, r7
   220dc:	mov	r0, r6
   220e0:	sub	r3, r3, r2
   220e4:	mov	r2, r5
   220e8:	add	r3, r3, r7
   220ec:	str	r3, [r5, #36]	; 0x24
   220f0:	bl	ffc8 <myhtml_queue_add@plt>
   220f4:	cmp	r0, #0
   220f8:	movne	r3, #69	; 0x45
   220fc:	movne	r4, #0
   22100:	strne	r3, [r6, #160]	; 0xa0
   22104:	bne	22110 <myhtml_tokenizer_state_cdata_section@@Base+0xec>
   22108:	mov	r3, #0
   2210c:	str	r3, [r6, #160]	; 0xa0
   22110:	mov	r0, r4
   22114:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22118:	mov	r4, r7
   2211c:	mov	r2, r9
   22120:	b	22050 <myhtml_tokenizer_state_cdata_section@@Base+0x2c>

00022124 <myhtml_tokenizer_state_rcdata@@Base>:
   22124:	push	{r4, r5, r6, r7, r8, lr}
   22128:	mov	r4, r3
   2212c:	mov	r5, r0
   22130:	mov	r6, r1
   22134:	mov	r8, r2
   22138:	ldr	r3, [r0, #60]	; 0x3c
   2213c:	ldr	r7, [sp, #24]
   22140:	cmp	r3, #0
   22144:	bne	22188 <myhtml_tokenizer_state_rcdata@@Base+0x64>
   22148:	ldr	r3, [r5, #192]	; 0xc0
   2214c:	ldr	r0, [r0, #68]	; 0x44
   22150:	add	r3, r3, r4
   22154:	str	r3, [r1, #24]
   22158:	bl	fc8c <mythread_queue_get_prev_node@plt>
   2215c:	cmp	r0, #0
   22160:	beq	22174 <myhtml_tokenizer_state_rcdata@@Base+0x50>
   22164:	ldr	r3, [r0, #4]
   22168:	cmp	r3, #0
   2216c:	ldrne	r3, [r3]
   22170:	bne	22184 <myhtml_tokenizer_state_rcdata@@Base+0x60>
   22174:	ldr	r3, [r5, #88]	; 0x58
   22178:	cmp	r3, #0
   2217c:	beq	22188 <myhtml_tokenizer_state_rcdata@@Base+0x64>
   22180:	ldr	r3, [r3, #4]
   22184:	str	r3, [r5, #60]	; 0x3c
   22188:	mov	r0, r4
   2218c:	cmp	r0, r7
   22190:	popcs	{r4, r5, r6, r7, r8, pc}
   22194:	add	r1, r0, #1
   22198:	ldrb	r3, [r8, r0]
   2219c:	cmp	r3, #60	; 0x3c
   221a0:	bne	221c0 <myhtml_tokenizer_state_rcdata@@Base+0x9c>
   221a4:	ldr	r3, [r5, #192]	; 0xc0
   221a8:	add	r0, r3, r0
   221ac:	mov	r3, #10
   221b0:	str	r0, [r6, #32]
   221b4:	mov	r0, r1
   221b8:	str	r3, [r5, #160]	; 0xa0
   221bc:	pop	{r4, r5, r6, r7, r8, pc}
   221c0:	mov	r0, r1
   221c4:	b	2218c <myhtml_tokenizer_state_rcdata@@Base+0x68>

000221c8 <myhtml_tokenizer_state_rawtext@@Base>:
   221c8:	push	{r4, r5, r6, r7, r8, lr}
   221cc:	mov	r4, r3
   221d0:	mov	r5, r0
   221d4:	mov	r6, r1
   221d8:	mov	r8, r2
   221dc:	ldr	r3, [r0, #60]	; 0x3c
   221e0:	ldr	r7, [sp, #24]
   221e4:	cmp	r3, #0
   221e8:	bne	2222c <myhtml_tokenizer_state_rawtext@@Base+0x64>
   221ec:	ldr	r3, [r5, #192]	; 0xc0
   221f0:	ldr	r0, [r0, #68]	; 0x44
   221f4:	add	r3, r3, r4
   221f8:	str	r3, [r1, #24]
   221fc:	bl	fc8c <mythread_queue_get_prev_node@plt>
   22200:	cmp	r0, #0
   22204:	beq	22218 <myhtml_tokenizer_state_rawtext@@Base+0x50>
   22208:	ldr	r3, [r0, #4]
   2220c:	cmp	r3, #0
   22210:	ldrne	r3, [r3]
   22214:	bne	22228 <myhtml_tokenizer_state_rawtext@@Base+0x60>
   22218:	ldr	r3, [r5, #88]	; 0x58
   2221c:	cmp	r3, #0
   22220:	beq	2222c <myhtml_tokenizer_state_rawtext@@Base+0x64>
   22224:	ldr	r3, [r3, #4]
   22228:	str	r3, [r5, #60]	; 0x3c
   2222c:	mov	r0, r4
   22230:	cmp	r0, r7
   22234:	popcs	{r4, r5, r6, r7, r8, pc}
   22238:	add	r1, r0, #1
   2223c:	ldrb	r3, [r8, r0]
   22240:	cmp	r3, #60	; 0x3c
   22244:	bne	22264 <myhtml_tokenizer_state_rawtext@@Base+0x9c>
   22248:	ldr	r3, [r5, #192]	; 0xc0
   2224c:	add	r0, r3, r0
   22250:	mov	r3, #13
   22254:	str	r0, [r6, #32]
   22258:	mov	r0, r1
   2225c:	str	r3, [r5, #160]	; 0xa0
   22260:	pop	{r4, r5, r6, r7, r8, pc}
   22264:	mov	r0, r1
   22268:	b	22230 <myhtml_tokenizer_state_rawtext@@Base+0x68>

0002226c <myhtml_tokenizer_state_attribute_value_double_quoted@@Base>:
   2226c:	push	{r4, r5, r6, lr}
   22270:	mov	r5, r0
   22274:	mov	r4, r3
   22278:	ldr	r1, [sp, #16]
   2227c:	cmp	r4, r1
   22280:	bcs	222d0 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x64>
   22284:	ldrb	r3, [r2, r4]
   22288:	cmp	r3, #34	; 0x22
   2228c:	bne	222d8 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x6c>
   22290:	ldr	r0, [r5, #8]
   22294:	ldr	r2, [r5, #56]	; 0x38
   22298:	ldr	r3, [r5, #192]	; 0xc0
   2229c:	ldr	r1, [r2, #56]	; 0x38
   222a0:	sub	r3, r3, r1
   222a4:	ldr	r1, [r0, #16]
   222a8:	add	r3, r3, r4
   222ac:	str	r3, [r2, #60]	; 0x3c
   222b0:	bl	10898 <myhtml_token_attr_create@plt>
   222b4:	cmp	r0, #0
   222b8:	str	r0, [r5, #56]	; 0x38
   222bc:	moveq	r3, #69	; 0x45
   222c0:	movne	r3, #41	; 0x29
   222c4:	moveq	r4, r0
   222c8:	addne	r4, r4, #1
   222cc:	str	r3, [r5, #160]	; 0xa0
   222d0:	mov	r0, r4
   222d4:	pop	{r4, r5, r6, pc}
   222d8:	add	r4, r4, #1
   222dc:	b	2227c <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x10>

000222e0 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base>:
   222e0:	push	{r4, r5, r6, lr}
   222e4:	mov	r5, r0
   222e8:	mov	r4, r3
   222ec:	ldr	r1, [sp, #16]
   222f0:	cmp	r4, r1
   222f4:	bcs	22344 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x64>
   222f8:	ldrb	r3, [r2, r4]
   222fc:	cmp	r3, #39	; 0x27
   22300:	bne	2234c <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x6c>
   22304:	ldr	r0, [r5, #8]
   22308:	ldr	r2, [r5, #56]	; 0x38
   2230c:	ldr	r3, [r5, #192]	; 0xc0
   22310:	ldr	r1, [r2, #56]	; 0x38
   22314:	sub	r3, r3, r1
   22318:	ldr	r1, [r0, #16]
   2231c:	add	r3, r3, r4
   22320:	str	r3, [r2, #60]	; 0x3c
   22324:	bl	10898 <myhtml_token_attr_create@plt>
   22328:	cmp	r0, #0
   2232c:	str	r0, [r5, #56]	; 0x38
   22330:	moveq	r3, #69	; 0x45
   22334:	movne	r3, #41	; 0x29
   22338:	moveq	r4, r0
   2233c:	addne	r4, r4, #1
   22340:	str	r3, [r5, #160]	; 0xa0
   22344:	mov	r0, r4
   22348:	pop	{r4, r5, r6, pc}
   2234c:	add	r4, r4, #1
   22350:	b	222f0 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x10>

00022354 <myhtml_tokenizer_state_comment_start_dash@@Base>:
   22354:	mov	ip, #2
   22358:	push	{r4, r5, r6, lr}
   2235c:	add	r4, r3, #1
   22360:	mov	r5, r0
   22364:	str	ip, [r1]
   22368:	ldrb	r2, [r2, r3]
   2236c:	cmp	r2, #45	; 0x2d
   22370:	moveq	r3, #49	; 0x31
   22374:	beq	223c8 <myhtml_tokenizer_state_comment_start_dash@@Base+0x74>
   22378:	cmp	r2, #62	; 0x3e
   2237c:	movne	r3, #47	; 0x2f
   22380:	bne	223c8 <myhtml_tokenizer_state_comment_start_dash@@Base+0x74>
   22384:	ldr	r3, [r0, #192]	; 0xc0
   22388:	mov	r2, r1
   2238c:	mov	r6, #0
   22390:	ldr	r1, [r1, #32]
   22394:	str	r6, [r2, #28]
   22398:	add	r3, r4, r3
   2239c:	sub	r3, r3, r1
   223a0:	mov	r1, r4
   223a4:	str	r3, [r2, #36]	; 0x24
   223a8:	bl	ffc8 <myhtml_queue_add@plt>
   223ac:	cmp	r0, #0
   223b0:	movne	r3, #69	; 0x45
   223b4:	movne	r4, r6
   223b8:	streq	r0, [r5, #160]	; 0xa0
   223bc:	strne	r3, [r5, #160]	; 0xa0
   223c0:	mov	r0, r4
   223c4:	pop	{r4, r5, r6, pc}
   223c8:	str	r3, [r5, #160]	; 0xa0
   223cc:	b	223c0 <myhtml_tokenizer_state_comment_start_dash@@Base+0x6c>

000223d0 <myhtml_tokenizer_state_comment_end@@Base>:
   223d0:	push	{r4, r5, r6, lr}
   223d4:	add	r4, r3, #1
   223d8:	ldrb	r2, [r2, r3]
   223dc:	cmp	r2, #62	; 0x3e
   223e0:	bne	22440 <myhtml_tokenizer_state_comment_end@@Base+0x70>
   223e4:	ldr	ip, [r1, #24]
   223e8:	mov	r2, r1
   223ec:	mov	r1, r4
   223f0:	mov	r5, r0
   223f4:	ldr	lr, [r0, #192]	; 0xc0
   223f8:	sub	ip, lr, ip
   223fc:	add	r3, ip, r3
   22400:	cmp	r3, #1
   22404:	subhi	r3, r3, #2
   22408:	movls	r3, #0
   2240c:	str	r3, [r2, #28]
   22410:	ldr	r3, [r2, #32]
   22414:	sub	lr, lr, r3
   22418:	add	lr, lr, r4
   2241c:	str	lr, [r2, #36]	; 0x24
   22420:	bl	ffc8 <myhtml_queue_add@plt>
   22424:	cmp	r0, #0
   22428:	movne	r3, #69	; 0x45
   2242c:	movne	r4, #0
   22430:	streq	r0, [r5, #160]	; 0xa0
   22434:	strne	r3, [r5, #160]	; 0xa0
   22438:	mov	r0, r4
   2243c:	pop	{r4, r5, r6, pc}
   22440:	cmp	r2, #33	; 0x21
   22444:	moveq	r3, #50	; 0x32
   22448:	beq	22458 <myhtml_tokenizer_state_comment_end@@Base+0x88>
   2244c:	cmp	r2, #45	; 0x2d
   22450:	beq	22438 <myhtml_tokenizer_state_comment_end@@Base+0x68>
   22454:	mov	r3, #47	; 0x2f
   22458:	str	r3, [r0, #160]	; 0xa0
   2245c:	b	22438 <myhtml_tokenizer_state_comment_end@@Base+0x68>

00022460 <myhtml_tokenizer_state_comment_end_bang@@Base>:
   22460:	push	{r4, r5, r6, lr}
   22464:	mov	r4, r0
   22468:	add	r5, r3, #1
   2246c:	ldrb	r2, [r2, r3]
   22470:	cmp	r2, #62	; 0x3e
   22474:	bne	224e0 <myhtml_tokenizer_state_comment_end_bang@@Base+0x80>
   22478:	mov	r2, r1
   2247c:	ldr	ip, [r1, #24]
   22480:	ldr	lr, [r1, #32]
   22484:	ldr	r1, [r0, #192]	; 0xc0
   22488:	add	r3, r3, r1
   2248c:	sub	r1, r1, lr
   22490:	sub	lr, r3, #3
   22494:	add	r1, r1, r5
   22498:	cmp	lr, ip
   2249c:	subcs	r3, r3, ip
   224a0:	movcc	r3, #0
   224a4:	subcs	r3, r3, #3
   224a8:	strcc	r1, [r2, #36]	; 0x24
   224ac:	strcc	r3, [r2, #28]
   224b0:	strcs	r3, [r2, #28]
   224b4:	strcs	r1, [r2, #36]	; 0x24
   224b8:	mov	r1, r5
   224bc:	bl	ffc8 <myhtml_queue_add@plt>
   224c0:	cmp	r0, #0
   224c4:	movne	r3, #69	; 0x45
   224c8:	movne	r5, #0
   224cc:	moveq	r3, #0
   224d0:	strne	r3, [r4, #160]	; 0xa0
   224d4:	beq	224ec <myhtml_tokenizer_state_comment_end_bang@@Base+0x8c>
   224d8:	mov	r0, r5
   224dc:	pop	{r4, r5, r6, pc}
   224e0:	cmp	r2, #45	; 0x2d
   224e4:	moveq	r3, #48	; 0x30
   224e8:	movne	r3, #47	; 0x2f
   224ec:	str	r3, [r4, #160]	; 0xa0
   224f0:	b	224d8 <myhtml_tokenizer_state_comment_end_bang@@Base+0x78>

000224f4 <myhtml_tokenizer_state_markup_declaration_open@@Base>:
   224f4:	push	{r4, r5, r6, r7, r8, lr}
   224f8:	mov	r5, r0
   224fc:	ldr	ip, [r1, #24]
   22500:	ldr	r6, [sp, #24]
   22504:	ldr	r2, [r0, #192]	; 0xc0
   22508:	add	lr, ip, #2
   2250c:	add	r2, r6, r2
   22510:	cmp	lr, r2
   22514:	ldrhi	r2, [r0, #76]	; 0x4c
   22518:	strhi	r3, [r2, #4]
   2251c:	bhi	22568 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x74>
   22520:	mov	r4, r1
   22524:	mov	r2, #2
   22528:	mov	r1, ip
   2252c:	mov	r7, r3
   22530:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   22534:	ldrb	r3, [r0]
   22538:	cmp	r3, #45	; 0x2d
   2253c:	ldr	r3, [r5, #192]	; 0xc0
   22540:	bne	22570 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x7c>
   22544:	ldrb	r2, [r0, #1]
   22548:	cmp	r2, #45	; 0x2d
   2254c:	bne	22570 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x7c>
   22550:	add	r6, r7, #2
   22554:	str	r2, [r5, #160]	; 0xa0
   22558:	add	r3, r6, r3
   2255c:	str	r3, [r4, #24]
   22560:	mov	r3, #0
   22564:	str	r3, [r4, #28]
   22568:	mov	r0, r6
   2256c:	pop	{r4, r5, r6, r7, r8, pc}
   22570:	ldr	r1, [r4, #24]
   22574:	add	r3, r6, r3
   22578:	add	r2, r1, #7
   2257c:	cmp	r2, r3
   22580:	ldrhi	r3, [r5, #76]	; 0x4c
   22584:	strhi	r7, [r3, #4]
   22588:	bhi	22568 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x74>
   2258c:	mov	r2, #7
   22590:	mov	r0, r5
   22594:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   22598:	ldr	r1, [pc, #252]	; 2269c <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1a8>
   2259c:	mov	r2, #7
   225a0:	mov	r6, r0
   225a4:	add	r1, pc, r1
   225a8:	bl	10238 <mycore_strncasecmp@plt>
   225ac:	cmp	r0, #0
   225b0:	bne	225e4 <myhtml_tokenizer_state_markup_declaration_open@@Base+0xf0>
   225b4:	mov	r3, #51	; 0x33
   225b8:	ldr	r6, [r4, #24]
   225bc:	str	r3, [r5, #160]	; 0xa0
   225c0:	ldr	r3, [r5, #76]	; 0x4c
   225c4:	add	r6, r6, #7
   225c8:	ldr	r3, [r3, #12]
   225cc:	sub	r6, r6, r3
   225d0:	mov	r3, #7
   225d4:	str	r3, [r4, #28]
   225d8:	mov	r3, #3
   225dc:	str	r3, [r4]
   225e0:	b	22568 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x74>
   225e4:	ldr	r1, [pc, #180]	; 226a0 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1ac>
   225e8:	mov	r2, #7
   225ec:	mov	r0, r6
   225f0:	add	r1, pc, r1
   225f4:	bl	10f28 <strncmp@plt>
   225f8:	subs	r8, r0, #0
   225fc:	bne	22684 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x190>
   22600:	ldr	r3, [r5, #68]	; 0x44
   22604:	ldr	r3, [r3, #8]
   22608:	cmp	r3, #0
   2260c:	beq	22684 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x190>
   22610:	ldr	r1, [r3, #4]
   22614:	cmp	r1, #0
   22618:	beq	22684 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x190>
   2261c:	mov	r0, r5
   22620:	bl	fc80 <myhtml_tree_wait_for_last_done_token@plt>
   22624:	mov	r0, r5
   22628:	bl	10cdc <myhtml_tree_adjusted_current_node@plt>
   2262c:	cmp	r0, #0
   22630:	beq	22684 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x190>
   22634:	ldr	r3, [r0, #8]
   22638:	cmp	r3, #1
   2263c:	beq	22684 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x190>
   22640:	ldr	r2, [r5, #76]	; 0x4c
   22644:	mov	r3, #67	; 0x43
   22648:	ldr	r6, [r2, #12]
   2264c:	str	r3, [r5, #160]	; 0xa0
   22650:	ldr	r3, [r4, #24]
   22654:	str	r8, [r4, #28]
   22658:	add	r3, r3, #7
   2265c:	sub	r6, r3, r6
   22660:	str	r3, [r4, #24]
   22664:	mov	r3, #1
   22668:	str	r3, [r4]
   2266c:	ldr	r3, [r4, #48]	; 0x30
   22670:	ldr	r2, [r4, #48]	; 0x30
   22674:	and	r3, r3, #8
   22678:	eor	r3, r3, r2
   2267c:	str	r3, [r4, #48]	; 0x30
   22680:	b	22568 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x74>
   22684:	mov	r3, #0
   22688:	mov	r6, r7
   2268c:	str	r3, [r4, #28]
   22690:	mov	r3, #43	; 0x2b
   22694:	str	r3, [r5, #160]	; 0xa0
   22698:	b	22568 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x74>
   2269c:			; <UNDEFINED> instruction: 0x000d3fbe
   226a0:	andeq	r4, sp, r4, lsr #31

000226a4 <myhtml_tokenizer_state_comment_start@@Base>:
   226a4:	mov	ip, #2
   226a8:	push	{r4, r5, r6, lr}
   226ac:	add	r4, r3, #1
   226b0:	mov	r5, r0
   226b4:	str	ip, [r1]
   226b8:	ldrb	r2, [r2, r3]
   226bc:	cmp	r2, #45	; 0x2d
   226c0:	moveq	r3, #46	; 0x2e
   226c4:	beq	22718 <myhtml_tokenizer_state_comment_start@@Base+0x74>
   226c8:	cmp	r2, #62	; 0x3e
   226cc:	movne	r3, #47	; 0x2f
   226d0:	bne	22718 <myhtml_tokenizer_state_comment_start@@Base+0x74>
   226d4:	ldr	r3, [r0, #192]	; 0xc0
   226d8:	mov	r2, r1
   226dc:	mov	r6, #0
   226e0:	ldr	r1, [r1, #32]
   226e4:	str	r6, [r2, #28]
   226e8:	add	r3, r4, r3
   226ec:	sub	r3, r3, r1
   226f0:	mov	r1, r4
   226f4:	str	r3, [r2, #36]	; 0x24
   226f8:	bl	ffc8 <myhtml_queue_add@plt>
   226fc:	cmp	r0, #0
   22700:	movne	r3, #69	; 0x45
   22704:	movne	r4, r6
   22708:	streq	r0, [r5, #160]	; 0xa0
   2270c:	strne	r3, [r5, #160]	; 0xa0
   22710:	mov	r0, r4
   22714:	pop	{r4, r5, r6, pc}
   22718:	str	r3, [r5, #160]	; 0xa0
   2271c:	b	22710 <myhtml_tokenizer_state_comment_start@@Base+0x6c>

00022720 <myhtml_tokenizer_set_first_settings@@Base>:
   22720:	push	{r4, lr}
   22724:	mov	r4, r0
   22728:	ldr	r0, [r0, #24]
   2272c:	bl	10130 <mythread_queue_get_current_node@plt>
   22730:	str	r0, [r4, #68]	; 0x44
   22734:	bl	10d0c <mythread_queue_node_clean@plt>
   22738:	ldr	r0, [r4, #8]
   2273c:	ldr	r3, [r4, #68]	; 0x44
   22740:	ldr	r1, [r0, #12]
   22744:	str	r4, [r3]
   22748:	bl	109a0 <myhtml_token_node_create@plt>
   2274c:	cmp	r0, #0
   22750:	str	r0, [r4, #64]	; 0x40
   22754:	ldrne	r3, [r4, #76]	; 0x4c
   22758:	movne	r0, #0
   2275c:	moveq	r0, #2
   22760:	strne	r3, [r4, #80]	; 0x50
   22764:	pop	{r4, pc}

00022768 <myhtml_tokenizer_fragment_init@@Base>:
   22768:	push	{r4, r5, r6, lr}
   2276c:	mov	r5, r2
   22770:	mov	r4, r0
   22774:	mov	r6, r1
   22778:	bl	ff80 <myhtml_tree_node_create@plt>
   2277c:	cmp	r5, #1
   22780:	str	r0, [r4, #88]	; 0x58
   22784:	str	r6, [r0, #4]
   22788:	str	r5, [r0, #8]
   2278c:	bne	227a8 <myhtml_tokenizer_fragment_init@@Base+0x40>
   22790:	cmp	r6, #93	; 0x5d
   22794:	bne	22818 <myhtml_tokenizer_fragment_init@@Base+0xb0>
   22798:	ldr	r3, [r4, #180]	; 0xb4
   2279c:	ands	r3, r3, #1
   227a0:	movne	r3, #4
   227a4:	str	r3, [r4, #160]	; 0xa0
   227a8:	ldr	r0, [r4, #8]
   227ac:	ldr	r5, [r4, #88]	; 0x58
   227b0:	ldr	r1, [r0, #12]
   227b4:	bl	109a0 <myhtml_token_node_create@plt>
   227b8:	ldr	r3, [r4, #88]	; 0x58
   227bc:	str	r0, [r5, #32]
   227c0:	ldr	r5, [r3, #32]
   227c4:	cmp	r5, #0
   227c8:	beq	22810 <myhtml_tokenizer_fragment_init@@Base+0xa8>
   227cc:	mov	r0, r5
   227d0:	bl	104e4 <myhtml_token_set_done@plt>
   227d4:	ldr	r3, [r4, #88]	; 0x58
   227d8:	mov	r2, #1
   227dc:	mov	r1, #0
   227e0:	mov	r0, r4
   227e4:	ldr	r3, [r3, #32]
   227e8:	str	r3, [r4, #156]	; 0x9c
   227ec:	bl	fba8 <myhtml_tree_node_insert_root@plt>
   227f0:	cmp	r6, #128	; 0x80
   227f4:	mov	r5, r0
   227f8:	bne	22808 <myhtml_tokenizer_fragment_init@@Base+0xa0>
   227fc:	mov	r1, #17
   22800:	mov	r0, r4
   22804:	bl	ff50 <myhtml_tree_template_insertion_append@plt>
   22808:	mov	r0, r4
   2280c:	bl	106c4 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   22810:	mov	r0, r5
   22814:	pop	{r4, r5, r6, pc}
   22818:	mov	r1, r6
   2281c:	ldr	r0, [r4, #28]
   22820:	bl	109b8 <myhtml_tag_get_by_id@plt>
   22824:	ldr	r3, [r0, #12]
   22828:	b	227a4 <myhtml_tokenizer_fragment_init@@Base+0x3c>

0002282c <myhtml_tokenizer_wait@@Base>:
   2282c:	ldr	r3, [r0]
   22830:	ldr	r3, [r3]
   22834:	cmp	r3, #0
   22838:	bxeq	lr
   2283c:	ldr	r1, [r0, #20]
   22840:	mov	r0, r3
   22844:	b	10910 <mythread_queue_list_entry_wait_for_done@plt>

00022848 <myhtml_tokenizer_post@@Base>:
   22848:	ldr	r3, [r0]
   2284c:	push	{r4, lr}
   22850:	mov	r4, r0
   22854:	ldr	r0, [r3]
   22858:	cmp	r0, #0
   2285c:	beq	22868 <myhtml_tokenizer_post@@Base+0x20>
   22860:	mov	r1, #0
   22864:	bl	10454 <mythread_resume@plt>
   22868:	ldr	r3, [r4]
   2286c:	ldr	r0, [r3, #4]
   22870:	cmp	r0, #0
   22874:	popeq	{r4, pc}
   22878:	mov	r1, #0
   2287c:	pop	{r4, lr}
   22880:	b	10454 <mythread_resume@plt>

00022884 <myhtml_tokenizer_chunk_process@@Base>:
   22884:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   22888:	mov	r4, r0
   2288c:	mov	r3, r2
   22890:	mov	r7, r1
   22894:	mov	r5, r2
   22898:	mov	r2, r1
   2289c:	ldr	r6, [r0]
   228a0:	ldr	r1, [r0, #72]	; 0x48
   228a4:	ldr	r0, [r0, #76]	; 0x4c
   228a8:	ldr	r8, [r6, #24]
   228ac:	bl	10034 <mycore_incoming_buffer_add@plt>
   228b0:	ldr	r3, [r6, #32]
   228b4:	str	r0, [r4, #76]	; 0x4c
   228b8:	tst	r3, #1
   228bc:	ldrne	r3, [r4, #180]	; 0xb4
   228c0:	orrne	r3, r3, #16
   228c4:	strne	r3, [r4, #180]	; 0xb4
   228c8:	ldr	r3, [r4, #180]	; 0xb4
   228cc:	tst	r3, #16
   228d0:	bne	22924 <myhtml_tokenizer_chunk_process@@Base+0xa0>
   228d4:	ldr	r3, [r4, #20]
   228d8:	cmp	r3, #0
   228dc:	bne	2291c <myhtml_tokenizer_chunk_process@@Base+0x98>
   228e0:	mov	r0, r6
   228e4:	mov	r1, #2
   228e8:	ldr	r2, [r0], #8
   228ec:	str	r3, [sp, #12]
   228f0:	add	r3, sp, #12
   228f4:	str	r3, [sp, #4]
   228f8:	ldr	r3, [r6, #20]
   228fc:	str	r3, [sp]
   22900:	ldr	r2, [r2, #16]
   22904:	ldr	r3, [r4, #24]
   22908:	bl	10124 <mythread_queue_list_entry_push@plt>
   2290c:	str	r0, [r4, #20]
   22910:	ldr	r0, [sp, #12]
   22914:	cmp	r0, #0
   22918:	bne	22968 <myhtml_tokenizer_chunk_process@@Base+0xe4>
   2291c:	mov	r0, r4
   22920:	bl	10244 <myhtml_tokenizer_post@plt>
   22924:	ldr	r3, [r4, #68]	; 0x44
   22928:	cmp	r3, #0
   2292c:	beq	22950 <myhtml_tokenizer_chunk_process@@Base+0xcc>
   22930:	mov	r3, #0
   22934:	cmp	r3, r5
   22938:	bcc	22970 <myhtml_tokenizer_chunk_process@@Base+0xec>
   2293c:	ldr	r3, [r4, #192]	; 0xc0
   22940:	mov	r0, #0
   22944:	add	r5, r3, r5
   22948:	str	r5, [r4, #192]	; 0xc0
   2294c:	b	22968 <myhtml_tokenizer_chunk_process@@Base+0xe4>
   22950:	mov	r2, r5
   22954:	mov	r1, r7
   22958:	mov	r0, r4
   2295c:	bl	1058c <myhtml_tokenizer_set_first_settings@plt>
   22960:	cmp	r0, #0
   22964:	beq	22930 <myhtml_tokenizer_chunk_process@@Base+0xac>
   22968:	add	sp, sp, #16
   2296c:	pop	{r4, r5, r6, r7, r8, pc}
   22970:	mov	r0, r4
   22974:	ldr	r1, [r4, #64]	; 0x40
   22978:	ldr	r2, [r4, #160]	; 0xa0
   2297c:	str	r5, [sp]
   22980:	ldr	r6, [r8, r2, lsl #2]
   22984:	mov	r2, r7
   22988:	blx	r6
   2298c:	mov	r3, r0
   22990:	b	22934 <myhtml_tokenizer_chunk_process@@Base+0xb0>

00022994 <myhtml_tokenizer_chunk_with_stream_buffer@@Base>:
   22994:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22998:	mov	r6, r0
   2299c:	mov	r5, r1
   229a0:	mov	r9, r2
   229a4:	ldr	r0, [r0, #200]	; 0xc8
   229a8:	bl	107c0 <myencoding_get_function_by_id@plt>
   229ac:	ldr	r3, [r6, #148]	; 0x94
   229b0:	mov	sl, r0
   229b4:	cmp	r3, #0
   229b8:	beq	22a10 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x7c>
   229bc:	ldr	r8, [r6, #148]	; 0x94
   229c0:	add	r9, r5, r9
   229c4:	mov	r0, r8
   229c8:	add	fp, r8, #12
   229cc:	bl	10b14 <myhtml_stream_buffer_current_entry@plt>
   229d0:	ldr	r7, [r0, #4]
   229d4:	mov	r4, r0
   229d8:	cmp	r5, r9
   229dc:	bne	22a54 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xc0>
   229e0:	ldr	r2, [r4, #4]
   229e4:	mov	r5, #0
   229e8:	cmp	r2, r7
   229ec:	beq	22a08 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x74>
   229f0:	ldr	r1, [r4]
   229f4:	sub	r2, r2, r7
   229f8:	mov	r0, r6
   229fc:	str	r5, [r6, #200]	; 0xc8
   22a00:	add	r1, r1, r7
   22a04:	bl	103c4 <myhtml_tokenizer_chunk_process@plt>
   22a08:	mov	r0, r5
   22a0c:	b	22a4c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xb8>
   22a10:	bl	10e08 <myhtml_stream_buffer_create@plt>
   22a14:	cmp	r0, #0
   22a18:	str	r0, [r6, #148]	; 0x94
   22a1c:	moveq	r0, #37632	; 0x9300
   22a20:	beq	22a4c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xb8>
   22a24:	mov	r1, #1024	; 0x400
   22a28:	bl	10d00 <myhtml_stream_buffer_init@plt>
   22a2c:	cmp	r0, #0
   22a30:	bne	22a4c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xb8>
   22a34:	mov	r1, #16384	; 0x4000
   22a38:	ldr	r0, [r6, #148]	; 0x94
   22a3c:	bl	108c8 <myhtml_stream_buffer_add_entry@plt>
   22a40:	cmp	r0, #0
   22a44:	bne	229bc <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x28>
   22a48:	movw	r0, #37636	; 0x9304
   22a4c:	add	sp, sp, #4
   22a50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22a54:	mov	r1, fp
   22a58:	ldrb	r0, [r5], #1
   22a5c:	blx	sl
   22a60:	cmp	r0, #0
   22a64:	bne	229d8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x44>
   22a68:	ldrd	r2, [r4, #4]
   22a6c:	add	r1, r2, #4
   22a70:	cmp	r1, r3
   22a74:	bcc	22aa8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x114>
   22a78:	ldr	r1, [r4]
   22a7c:	sub	r2, r2, r7
   22a80:	str	r0, [r6, #200]	; 0xc8
   22a84:	mov	r0, r6
   22a88:	add	r1, r1, r7
   22a8c:	bl	103c4 <myhtml_tokenizer_chunk_process@plt>
   22a90:	mov	r1, #16384	; 0x4000
   22a94:	mov	r0, r8
   22a98:	bl	108c8 <myhtml_stream_buffer_add_entry@plt>
   22a9c:	subs	r4, r0, #0
   22aa0:	beq	22a48 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xb4>
   22aa4:	ldr	r7, [r4, #4]
   22aa8:	ldm	r4, {r1, r3}
   22aac:	add	r1, r1, r3
   22ab0:	ldr	r0, [r8, #24]
   22ab4:	bl	10e20 <myencoding_codepoint_to_ascii_utf_8@plt>
   22ab8:	ldr	r3, [r4, #4]
   22abc:	add	r0, r3, r0
   22ac0:	str	r0, [r4, #4]
   22ac4:	b	229d8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x44>

00022ac8 <myhtml_tokenizer_chunk@@Base>:
   22ac8:	ldr	r3, [r0, #204]	; 0xcc
   22acc:	sub	r3, r3, #4
   22ad0:	cmp	r3, #1
   22ad4:	bhi	22adc <myhtml_tokenizer_chunk@@Base+0x14>
   22ad8:	b	10b2c <myhtml_tokenizer_chunk_with_stream_buffer@plt>
   22adc:	b	103c4 <myhtml_tokenizer_chunk_process@plt>

00022ae0 <myhtml_tokenizer_begin@@Base>:
   22ae0:	b	10064 <myhtml_tokenizer_chunk@plt>

00022ae4 <myhtml_tokenizer_pause@@Base>:
   22ae4:	ldr	r3, [r0]
   22ae8:	push	{r4, lr}
   22aec:	mov	r4, r0
   22af0:	ldr	r0, [r3]
   22af4:	cmp	r0, #0
   22af8:	beq	22b00 <myhtml_tokenizer_pause@@Base+0x1c>
   22afc:	bl	10a6c <mythread_stop@plt>
   22b00:	ldr	r3, [r4]
   22b04:	ldr	r0, [r3, #4]
   22b08:	cmp	r0, #0
   22b0c:	popeq	{r4, pc}
   22b10:	pop	{r4, lr}
   22b14:	b	10a6c <mythread_stop@plt>

00022b18 <myhtml_tokenizer_end@@Base>:
   22b18:	ldr	r2, [r0, #76]	; 0x4c
   22b1c:	push	{r0, r1, r4, r5, r6, lr}
   22b20:	mov	r4, r0
   22b24:	cmp	r2, #0
   22b28:	beq	22b60 <myhtml_tokenizer_end@@Base+0x48>
   22b2c:	ldr	r3, [r2, #8]
   22b30:	ldr	ip, [r0]
   22b34:	ldr	r1, [r0, #192]	; 0xc0
   22b38:	ldr	ip, [ip, #24]
   22b3c:	sub	r1, r1, r3
   22b40:	str	r1, [r0, #192]	; 0xc0
   22b44:	str	r3, [sp]
   22b48:	ldr	r1, [r0, #160]	; 0xa0
   22b4c:	ldr	r2, [r2]
   22b50:	add	r1, r1, #70	; 0x46
   22b54:	ldr	r5, [ip, r1, lsl #2]
   22b58:	ldr	r1, [r0, #64]	; 0x40
   22b5c:	blx	r5
   22b60:	ldr	r2, [r4, #64]	; 0x40
   22b64:	mov	r3, #251	; 0xfb
   22b68:	mov	r1, #0
   22b6c:	mov	r0, r4
   22b70:	str	r3, [r2]
   22b74:	bl	ffc8 <myhtml_queue_add@plt>
   22b78:	cmp	r0, #0
   22b7c:	movne	r3, #2
   22b80:	strne	r3, [r4, #196]	; 0xc4
   22b84:	ldr	r3, [r4, #180]	; 0xb4
   22b88:	ldr	r6, [r4, #196]	; 0xc4
   22b8c:	ands	r5, r3, #16
   22b90:	bne	22bfc <myhtml_tokenizer_end@@Base+0xe4>
   22b94:	ldr	r3, [r4]
   22b98:	ldr	r1, [r4, #20]
   22b9c:	ldr	r0, [r3]
   22ba0:	bl	10910 <mythread_queue_list_entry_wait_for_done@plt>
   22ba4:	ldr	r0, [r4]
   22ba8:	mov	r1, #2
   22bac:	ldr	r3, [r4, #20]
   22bb0:	ldr	r2, [r0], #8
   22bb4:	str	r5, [sp]
   22bb8:	ldr	r2, [r2, #16]
   22bbc:	bl	fbb4 <mythread_queue_list_entry_delete@plt>
   22bc0:	ldr	r3, [r4]
   22bc4:	ldr	r3, [r3]
   22bc8:	str	r0, [r4, #20]
   22bcc:	ldr	r0, [r3, #16]
   22bd0:	bl	1055c <mythread_queue_list_get_count@plt>
   22bd4:	cmp	r0, #0
   22bd8:	bne	22be4 <myhtml_tokenizer_end@@Base+0xcc>
   22bdc:	mov	r0, r4
   22be0:	bl	10580 <myhtml_tokenizer_pause@plt>
   22be4:	cmp	r6, #0
   22be8:	bne	22bfc <myhtml_tokenizer_end@@Base+0xe4>
   22bec:	ldr	r3, [r4]
   22bf0:	ldr	r0, [r3]
   22bf4:	bl	104a8 <mythread_check_status@plt>
   22bf8:	mov	r6, r0
   22bfc:	ldr	r3, [r4, #180]	; 0xb4
   22c00:	mov	r0, r6
   22c04:	orr	r3, r3, #32
   22c08:	str	r3, [r4, #180]	; 0xb4
   22c0c:	add	sp, sp, #8
   22c10:	pop	{r4, r5, r6, pc}

00022c14 <myhtml_tokenizer_calc_current_namespace@@Base>:
   22c14:	ldr	r3, [r0, #184]	; 0xb8
   22c18:	tst	r3, #1
   22c1c:	bxne	lr
   22c20:	ldr	r3, [r0, #180]	; 0xb4
   22c24:	tst	r3, #16
   22c28:	beq	22c38 <myhtml_tokenizer_calc_current_namespace@@Base+0x24>
   22c2c:	ldr	r3, [r0, #164]	; 0xa4
   22c30:	str	r3, [r0, #160]	; 0xa0
   22c34:	bx	lr
   22c38:	ldr	r3, [r1]
   22c3c:	cmp	r3, #124	; 0x7c
   22c40:	cmpne	r3, #218	; 0xda
   22c44:	moveq	r2, #1
   22c48:	movne	r2, #0
   22c4c:	cmp	r3, #54	; 0x36
   22c50:	orreq	r2, r2, #1
   22c54:	cmp	r2, #0
   22c58:	beq	22c64 <myhtml_tokenizer_calc_current_namespace@@Base+0x50>
   22c5c:	str	r1, [r0, #156]	; 0x9c
   22c60:	bx	lr
   22c64:	ldr	r2, [r0, #156]	; 0x9c
   22c68:	cmp	r2, #0
   22c6c:	bxeq	lr
   22c70:	ldr	r2, [r1, #48]	; 0x30
   22c74:	tst	r2, #1
   22c78:	bxne	lr
   22c7c:	push	{r4, r5, r6, lr}
   22c80:	mov	r5, r1
   22c84:	mov	r4, r0
   22c88:	mov	r1, r3
   22c8c:	ldr	r0, [r0, #28]
   22c90:	bl	109b8 <myhtml_tag_get_by_id@plt>
   22c94:	ldr	r3, [r0, #12]
   22c98:	cmp	r3, #0
   22c9c:	popeq	{r4, r5, r6, pc}
   22ca0:	mov	r1, r5
   22ca4:	mov	r0, r4
   22ca8:	bl	fc80 <myhtml_tree_wait_for_last_done_token@plt>
   22cac:	ldr	r3, [r4, #164]	; 0xa4
   22cb0:	str	r3, [r4, #160]	; 0xa0
   22cb4:	pop	{r4, r5, r6, pc}

00022cb8 <myhtml_check_tag_parser@@Base>:
   22cb8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   22cbc:	mov	r8, r2
   22cc0:	mov	r4, r1
   22cc4:	mov	r9, r3
   22cc8:	mov	r7, r0
   22ccc:	ldr	r2, [r1, #28]
   22cd0:	ldr	r1, [r1, #24]
   22cd4:	ldr	r5, [r0, #28]
   22cd8:	cmp	r2, r3
   22cdc:	ldrls	r3, [r0, #192]	; 0xc0
   22ce0:	subls	r1, r1, r3
   22ce4:	addls	r1, r8, r1
   22ce8:	bls	22cf8 <myhtml_check_tag_parser@@Base+0x40>
   22cec:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   22cf0:	ldr	r2, [r4, #28]
   22cf4:	mov	r1, r0
   22cf8:	mov	r0, r5
   22cfc:	bl	10b08 <myhtml_tag_get_by_name@plt>
   22d00:	cmp	r0, #0
   22d04:	mov	r6, r0
   22d08:	beq	22d1c <myhtml_check_tag_parser@@Base+0x64>
   22d0c:	ldr	r3, [r0]
   22d10:	str	r3, [r4]
   22d14:	add	sp, sp, #12
   22d18:	pop	{r4, r5, r6, r7, r8, r9, pc}
   22d1c:	ldr	r1, [r4, #24]
   22d20:	ldr	r2, [r4, #28]
   22d24:	cmp	r2, r9
   22d28:	bls	22d70 <myhtml_check_tag_parser@@Base+0xb8>
   22d2c:	mov	r0, r7
   22d30:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   22d34:	mov	r3, #1
   22d38:	mov	r1, r0
   22d3c:	ldr	r2, [r4, #28]
   22d40:	str	r3, [sp]
   22d44:	mov	r3, r6
   22d48:	mov	r0, r5
   22d4c:	bl	ffb0 <myhtml_tag_add@plt>
   22d50:	str	r0, [r4]
   22d54:	mov	r3, #1
   22d58:	mov	r0, r5
   22d5c:	ldr	r1, [r4]
   22d60:	mov	r2, r3
   22d64:	add	sp, sp, #12
   22d68:	pop	{r4, r5, r6, r7, r8, r9, lr}
   22d6c:	b	ff38 <myhtml_tag_set_category@plt>
   22d70:	ldr	r3, [r7, #192]	; 0xc0
   22d74:	sub	r1, r1, r3
   22d78:	mov	r3, #1
   22d7c:	add	r1, r8, r1
   22d80:	str	r3, [sp]
   22d84:	mov	r3, r0
   22d88:	b	22d48 <myhtml_check_tag_parser@@Base+0x90>

00022d8c <myhtml_tokenizer_queue_create_text_node_if_need@@Base>:
   22d8c:	push	{r4, r5, r6, lr}
   22d90:	mov	r2, r1
   22d94:	ldr	r4, [r1]
   22d98:	cmp	r4, #0
   22d9c:	bne	22dec <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x60>
   22da0:	ldr	ip, [r1, #24]
   22da4:	cmp	r3, ip
   22da8:	bls	22dec <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x60>
   22dac:	ldr	lr, [sp, #16]
   22db0:	sub	r3, r3, ip
   22db4:	mov	r5, r0
   22db8:	ldr	r6, [r2, #48]	; 0x30
   22dbc:	ldr	r1, [r1, #32]
   22dc0:	str	r3, [r2, #28]
   22dc4:	str	ip, [r2, #32]
   22dc8:	orr	lr, lr, r6
   22dcc:	str	r3, [r2, #36]	; 0x24
   22dd0:	str	lr, [r2, #48]	; 0x30
   22dd4:	mov	lr, #1
   22dd8:	str	lr, [r2]
   22ddc:	bl	ffc8 <myhtml_queue_add@plt>
   22de0:	cmp	r0, #0
   22de4:	ldreq	r2, [r5, #64]	; 0x40
   22de8:	movne	r2, r4
   22dec:	mov	r0, r2
   22df0:	pop	{r4, r5, r6, pc}

00022df4 <myhtml_tokenizer_state_tag_open@@Base>:
   22df4:	push	{r0, r1, r2, r4, r5, lr}
   22df8:	mov	r4, r3
   22dfc:	mov	r5, r0
   22e00:	ldr	lr, [pc, #264]	; 22f10 <myhtml_tokenizer_state_tag_open@@Base+0x11c>
   22e04:	ldrb	r3, [r2, r3]
   22e08:	add	lr, pc, lr
   22e0c:	ldrb	lr, [lr, r3]
   22e10:	cmp	lr, #1
   22e14:	bne	22e68 <myhtml_tokenizer_state_tag_open@@Base+0x74>
   22e18:	ldr	r3, [r0, #192]	; 0xc0
   22e1c:	mov	ip, #512	; 0x200
   22e20:	str	ip, [sp]
   22e24:	sub	r3, r3, #1
   22e28:	add	r3, r3, r4
   22e2c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   22e30:	cmp	r0, #0
   22e34:	bne	22e50 <myhtml_tokenizer_state_tag_open@@Base+0x5c>
   22e38:	mov	r3, #69	; 0x45
   22e3c:	mov	r4, #0
   22e40:	str	r3, [r5, #160]	; 0xa0
   22e44:	mov	r0, r4
   22e48:	add	sp, sp, #12
   22e4c:	pop	{r4, r5, pc}
   22e50:	ldr	r3, [r5, #192]	; 0xc0
   22e54:	add	r3, r3, r4
   22e58:	str	r3, [r0, #24]
   22e5c:	mov	r3, #9
   22e60:	str	r3, [r5, #160]	; 0xa0
   22e64:	b	22e44 <myhtml_tokenizer_state_tag_open@@Base+0x50>
   22e68:	cmp	r3, #33	; 0x21
   22e6c:	bne	22ea8 <myhtml_tokenizer_state_tag_open@@Base+0xb4>
   22e70:	ldr	r3, [r0, #192]	; 0xc0
   22e74:	mov	ip, #512	; 0x200
   22e78:	str	ip, [sp]
   22e7c:	sub	r3, r3, #1
   22e80:	add	r3, r3, r4
   22e84:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   22e88:	cmp	r0, #0
   22e8c:	beq	22e38 <myhtml_tokenizer_state_tag_open@@Base+0x44>
   22e90:	ldr	r3, [r5, #192]	; 0xc0
   22e94:	add	r4, r4, #1
   22e98:	add	r3, r3, r4
   22e9c:	str	r3, [r0, #24]
   22ea0:	mov	r3, #44	; 0x2c
   22ea4:	b	22e60 <myhtml_tokenizer_state_tag_open@@Base+0x6c>
   22ea8:	cmp	r3, #47	; 0x2f
   22eac:	addeq	r4, r4, #1
   22eb0:	moveq	r3, #8
   22eb4:	beq	22e60 <myhtml_tokenizer_state_tag_open@@Base+0x6c>
   22eb8:	cmp	r3, #63	; 0x3f
   22ebc:	bne	22ef4 <myhtml_tokenizer_state_tag_open@@Base+0x100>
   22ec0:	ldr	r3, [r0, #192]	; 0xc0
   22ec4:	mov	ip, #512	; 0x200
   22ec8:	str	ip, [sp]
   22ecc:	sub	r3, r3, #1
   22ed0:	add	r3, r3, r4
   22ed4:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   22ed8:	cmp	r0, #0
   22edc:	beq	22e38 <myhtml_tokenizer_state_tag_open@@Base+0x44>
   22ee0:	ldr	r3, [r5, #192]	; 0xc0
   22ee4:	add	r3, r3, r4
   22ee8:	str	r3, [r0, #24]
   22eec:	mov	r3, #43	; 0x2b
   22ef0:	b	22e60 <myhtml_tokenizer_state_tag_open@@Base+0x6c>
   22ef4:	ldr	r3, [r1, #48]	; 0x30
   22ef8:	ldr	r2, [r1, #48]	; 0x30
   22efc:	and	r3, r3, #8
   22f00:	eor	r3, r3, r2
   22f04:	str	r3, [r1, #48]	; 0x30
   22f08:	mov	r3, #0
   22f0c:	b	22e60 <myhtml_tokenizer_state_tag_open@@Base+0x6c>
   22f10:	andeq	r4, sp, ip, lsl #13

00022f14 <myhtml_tokenizer_state_end_tag_open@@Base>:
   22f14:	ldr	ip, [pc, #180]	; 22fd0 <myhtml_tokenizer_state_end_tag_open@@Base+0xbc>
   22f18:	push	{r0, r1, r4, r5, r6, lr}
   22f1c:	mov	r4, r3
   22f20:	mov	r5, r0
   22f24:	ldrb	r3, [r2, r3]
   22f28:	add	ip, pc, ip
   22f2c:	ldrb	r6, [ip, r3]
   22f30:	cmp	r6, #1
   22f34:	bne	22f8c <myhtml_tokenizer_state_end_tag_open@@Base+0x78>
   22f38:	ldr	r3, [r0, #192]	; 0xc0
   22f3c:	mov	ip, #512	; 0x200
   22f40:	str	ip, [sp]
   22f44:	sub	r3, r3, #2
   22f48:	add	r3, r3, r4
   22f4c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   22f50:	cmp	r0, #0
   22f54:	bne	22f70 <myhtml_tokenizer_state_end_tag_open@@Base+0x5c>
   22f58:	mov	r3, #69	; 0x45
   22f5c:	mov	r4, #0
   22f60:	str	r3, [r5, #160]	; 0xa0
   22f64:	mov	r0, r4
   22f68:	add	sp, sp, #8
   22f6c:	pop	{r4, r5, r6, pc}
   22f70:	ldr	r3, [r5, #192]	; 0xc0
   22f74:	str	r6, [r0, #48]	; 0x30
   22f78:	add	r3, r3, r4
   22f7c:	str	r3, [r0, #24]
   22f80:	mov	r3, #9
   22f84:	str	r3, [r5, #160]	; 0xa0
   22f88:	b	22f64 <myhtml_tokenizer_state_end_tag_open@@Base+0x50>
   22f8c:	cmp	r3, #62	; 0x3e
   22f90:	addeq	r4, r4, #1
   22f94:	moveq	r3, #0
   22f98:	beq	22f84 <myhtml_tokenizer_state_end_tag_open@@Base+0x70>
   22f9c:	ldr	r3, [r0, #192]	; 0xc0
   22fa0:	mov	ip, #512	; 0x200
   22fa4:	str	ip, [sp]
   22fa8:	sub	r3, r3, #2
   22fac:	add	r3, r3, r4
   22fb0:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   22fb4:	cmp	r0, #0
   22fb8:	beq	22f58 <myhtml_tokenizer_state_end_tag_open@@Base+0x44>
   22fbc:	ldr	r3, [r5, #192]	; 0xc0
   22fc0:	add	r3, r3, r4
   22fc4:	str	r3, [r0, #24]
   22fc8:	mov	r3, #43	; 0x2b
   22fcc:	b	22f84 <myhtml_tokenizer_state_end_tag_open@@Base+0x70>
   22fd0:	andeq	r4, sp, ip, ror #10

00022fd4 <myhtml_tokenizer_set_state@@Base>:
   22fd4:	ldr	r3, [r1, #48]	; 0x30
   22fd8:	tst	r3, #1
   22fdc:	bne	22ff8 <myhtml_tokenizer_set_state@@Base+0x24>
   22fe0:	ldr	r1, [r1]
   22fe4:	cmp	r1, #93	; 0x5d
   22fe8:	bne	23004 <myhtml_tokenizer_set_state@@Base+0x30>
   22fec:	ldr	r3, [r0, #180]	; 0xb4
   22ff0:	tst	r3, #1
   22ff4:	bne	23004 <myhtml_tokenizer_set_state@@Base+0x30>
   22ff8:	mov	r3, #0
   22ffc:	str	r3, [r0, #160]	; 0xa0
   23000:	bx	lr
   23004:	push	{r4, lr}
   23008:	mov	r4, r0
   2300c:	ldr	r0, [r0, #28]
   23010:	bl	109b8 <myhtml_tag_get_by_id@plt>
   23014:	ldr	r3, [r0, #12]
   23018:	str	r3, [r4, #160]	; 0xa0
   2301c:	pop	{r4, pc}

00023020 <myhtml_tokenizer_state_tag_name@@Base>:
   23020:	ldr	ip, [pc, #260]	; 2312c <myhtml_tokenizer_state_tag_name@@Base+0x10c>
   23024:	push	{r4, r5, r6, lr}
   23028:	mov	r5, r0
   2302c:	mov	r4, r1
   23030:	ldr	r0, [sp, #16]
   23034:	add	ip, pc, ip
   23038:	cmp	r3, r0
   2303c:	movcs	r6, r3
   23040:	bcs	23080 <myhtml_tokenizer_state_tag_name@@Base+0x60>
   23044:	ldrb	r1, [r2, r3]
   23048:	add	r6, r3, #1
   2304c:	ldrb	lr, [ip, r1]
   23050:	cmp	lr, #2
   23054:	bne	23088 <myhtml_tokenizer_state_tag_name@@Base+0x68>
   23058:	ldr	r0, [r4, #24]
   2305c:	ldr	r1, [r5, #192]	; 0xc0
   23060:	sub	r1, r1, r0
   23064:	mov	r0, r5
   23068:	add	r1, r1, r3
   2306c:	str	r1, [r4, #28]
   23070:	mov	r1, r4
   23074:	bl	10bd4 <myhtml_check_tag_parser@plt>
   23078:	mov	r3, #33	; 0x21
   2307c:	str	r3, [r5, #160]	; 0xa0
   23080:	mov	r0, r6
   23084:	pop	{r4, r5, r6, pc}
   23088:	cmp	r1, #47	; 0x2f
   2308c:	bne	230b8 <myhtml_tokenizer_state_tag_name@@Base+0x98>
   23090:	ldr	r0, [r4, #24]
   23094:	ldr	r1, [r5, #192]	; 0xc0
   23098:	sub	r1, r1, r0
   2309c:	mov	r0, r5
   230a0:	add	r1, r1, r3
   230a4:	str	r1, [r4, #28]
   230a8:	mov	r1, r4
   230ac:	bl	10bd4 <myhtml_check_tag_parser@plt>
   230b0:	mov	r3, #42	; 0x2a
   230b4:	b	2307c <myhtml_tokenizer_state_tag_name@@Base+0x5c>
   230b8:	cmp	r1, #62	; 0x3e
   230bc:	bne	23124 <myhtml_tokenizer_state_tag_name@@Base+0x104>
   230c0:	ldr	r0, [r4, #24]
   230c4:	ldr	r1, [r5, #192]	; 0xc0
   230c8:	sub	r1, r1, r0
   230cc:	mov	r0, r5
   230d0:	add	r1, r1, r3
   230d4:	str	r1, [r4, #28]
   230d8:	mov	r1, r4
   230dc:	bl	10bd4 <myhtml_check_tag_parser@plt>
   230e0:	mov	r1, r4
   230e4:	mov	r0, r5
   230e8:	bl	10ad8 <myhtml_tokenizer_set_state@plt>
   230ec:	ldr	r2, [r4, #32]
   230f0:	mov	r1, r6
   230f4:	mov	r0, r5
   230f8:	ldr	r3, [r5, #192]	; 0xc0
   230fc:	sub	r3, r3, r2
   23100:	mov	r2, r4
   23104:	add	r3, r3, r6
   23108:	str	r3, [r4, #36]	; 0x24
   2310c:	bl	ffc8 <myhtml_queue_add@plt>
   23110:	cmp	r0, #0
   23114:	movne	r3, #69	; 0x45
   23118:	movne	r6, #0
   2311c:	strne	r3, [r5, #160]	; 0xa0
   23120:	b	23080 <myhtml_tokenizer_state_tag_name@@Base+0x60>
   23124:	mov	r3, r6
   23128:	b	23038 <myhtml_tokenizer_state_tag_name@@Base+0x18>
   2312c:	andeq	r4, sp, r0, ror #8

00023130 <myhtml_tokenizer_state_self_closing_start_tag@@Base>:
   23130:	push	{r4, r5, r6, lr}
   23134:	mov	r4, r3
   23138:	mov	r6, r0
   2313c:	ldrb	r3, [r2, r3]
   23140:	cmp	r3, #62	; 0x3e
   23144:	movne	r3, #33	; 0x21
   23148:	strne	r3, [r0, #160]	; 0xa0
   2314c:	bne	2319c <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x6c>
   23150:	ldr	r3, [r1, #48]	; 0x30
   23154:	mov	r5, r1
   23158:	add	r4, r4, #1
   2315c:	orr	r3, r3, #2
   23160:	str	r3, [r1, #48]	; 0x30
   23164:	bl	10ad8 <myhtml_tokenizer_set_state@plt>
   23168:	ldr	r2, [r5, #32]
   2316c:	mov	r1, r4
   23170:	mov	r0, r6
   23174:	ldr	r3, [r6, #192]	; 0xc0
   23178:	sub	r3, r3, r2
   2317c:	mov	r2, r5
   23180:	add	r3, r3, r4
   23184:	str	r3, [r5, #36]	; 0x24
   23188:	bl	ffc8 <myhtml_queue_add@plt>
   2318c:	cmp	r0, #0
   23190:	movne	r3, #69	; 0x45
   23194:	movne	r4, #0
   23198:	strne	r3, [r6, #160]	; 0xa0
   2319c:	mov	r0, r4
   231a0:	pop	{r4, r5, r6, pc}

000231a4 <myhtml_tokenizer_state_before_attribute_name@@Base>:
   231a4:	push	{r4, r5, r6, lr}
   231a8:	mov	r4, r3
   231ac:	mov	r6, r0
   231b0:	mov	r5, r1
   231b4:	ldrb	r3, [r2, r3]
   231b8:	ldr	r0, [sp, #16]
   231bc:	sub	r3, r3, #9
   231c0:	uxtb	r3, r3
   231c4:	cmp	r3, #23
   231c8:	bhi	231dc <myhtml_tokenizer_state_before_attribute_name@@Base+0x38>
   231cc:	ldr	r1, [pc, #304]	; 23304 <myhtml_tokenizer_state_before_attribute_name@@Base+0x160>
   231d0:	mvn	r3, r1, lsr r3
   231d4:	tst	r3, #1
   231d8:	beq	231f0 <myhtml_tokenizer_state_before_attribute_name@@Base+0x4c>
   231dc:	cmp	r4, r0
   231e0:	bcc	23218 <myhtml_tokenizer_state_before_attribute_name@@Base+0x74>
   231e4:	mov	r0, r4
   231e8:	pop	{r4, r5, r6, pc}
   231ec:	add	r4, r4, #1
   231f0:	cmp	r4, r0
   231f4:	bcs	231e4 <myhtml_tokenizer_state_before_attribute_name@@Base+0x40>
   231f8:	ldrb	r3, [r2, r4]
   231fc:	sub	r3, r3, #9
   23200:	uxtb	r3, r3
   23204:	cmp	r3, #23
   23208:	bhi	23218 <myhtml_tokenizer_state_before_attribute_name@@Base+0x74>
   2320c:	mvn	r3, r1, lsr r3
   23210:	tst	r3, #1
   23214:	beq	231ec <myhtml_tokenizer_state_before_attribute_name@@Base+0x48>
   23218:	ldrb	r3, [r2, r4]
   2321c:	add	r1, r2, r4
   23220:	cmp	r3, #62	; 0x3e
   23224:	bne	23270 <myhtml_tokenizer_state_before_attribute_name@@Base+0xcc>
   23228:	mov	r1, r5
   2322c:	mov	r0, r6
   23230:	bl	10ad8 <myhtml_tokenizer_set_state@plt>
   23234:	ldr	r2, [r5, #32]
   23238:	add	r4, r4, #1
   2323c:	mov	r0, r6
   23240:	mov	r1, r4
   23244:	ldr	r3, [r6, #192]	; 0xc0
   23248:	sub	r3, r3, r2
   2324c:	mov	r2, r5
   23250:	add	r3, r3, r4
   23254:	str	r3, [r5, #36]	; 0x24
   23258:	bl	ffc8 <myhtml_queue_add@plt>
   2325c:	cmp	r0, #0
   23260:	movne	r3, #69	; 0x45
   23264:	movne	r4, #0
   23268:	strne	r3, [r6, #160]	; 0xa0
   2326c:	b	231e4 <myhtml_tokenizer_state_before_attribute_name@@Base+0x40>
   23270:	cmp	r3, #47	; 0x2f
   23274:	bne	2328c <myhtml_tokenizer_state_before_attribute_name@@Base+0xe8>
   23278:	ldr	r3, [r5, #48]	; 0x30
   2327c:	add	r4, r4, #1
   23280:	orr	r3, r3, #2
   23284:	str	r3, [r5, #48]	; 0x30
   23288:	b	231e4 <myhtml_tokenizer_state_before_attribute_name@@Base+0x40>
   2328c:	ldr	r2, [r5, #40]	; 0x28
   23290:	ldr	r3, [r6, #56]	; 0x38
   23294:	cmp	r2, #0
   23298:	bne	232e4 <myhtml_tokenizer_state_before_attribute_name@@Base+0x140>
   2329c:	str	r3, [r5, #40]	; 0x28
   232a0:	str	r3, [r5, #44]	; 0x2c
   232a4:	str	r3, [r6, #56]	; 0x38
   232a8:	str	r2, [r3]
   232ac:	str	r2, [r3, #4]
   232b0:	ldr	r2, [r6, #192]	; 0xc0
   232b4:	add	r2, r2, r4
   232b8:	str	r2, [r3, #48]	; 0x30
   232bc:	mov	r2, #0
   232c0:	str	r2, [r3, #52]	; 0x34
   232c4:	str	r2, [r3, #56]	; 0x38
   232c8:	str	r2, [r3, #60]	; 0x3c
   232cc:	ldrb	r3, [r1]
   232d0:	cmp	r3, #61	; 0x3d
   232d4:	mov	r3, #34	; 0x22
   232d8:	addeq	r4, r4, #1
   232dc:	str	r3, [r6, #160]	; 0xa0
   232e0:	b	231e4 <myhtml_tokenizer_state_before_attribute_name@@Base+0x40>
   232e4:	ldr	r2, [r5, #44]	; 0x2c
   232e8:	str	r3, [r2]
   232ec:	str	r2, [r3, #4]
   232f0:	mov	r2, #0
   232f4:	str	r3, [r5, #44]	; 0x2c
   232f8:	str	r2, [r3]
   232fc:	str	r3, [r6, #56]	; 0x38
   23300:	b	232b0 <myhtml_tokenizer_state_before_attribute_name@@Base+0x10c>
   23304:	addeq	r0, r0, fp, lsl r0

00023308 <myhtml_tokenizer_state_attribute_name@@Base>:
   23308:	push	{r4, r5, r6, lr}
   2330c:	mov	r5, r0
   23310:	mov	r6, r1
   23314:	mov	r4, r3
   23318:	ldr	ip, [pc, #348]	; 2347c <myhtml_tokenizer_state_attribute_name@@Base+0x174>
   2331c:	ldr	r0, [sp, #16]
   23320:	cmp	r4, r0
   23324:	bcs	23394 <myhtml_tokenizer_state_attribute_name@@Base+0x8c>
   23328:	ldrb	r1, [r2, r4]
   2332c:	sub	r3, r1, #9
   23330:	uxtb	r3, r3
   23334:	cmp	r3, #23
   23338:	bls	23364 <myhtml_tokenizer_state_attribute_name@@Base+0x5c>
   2333c:	cmp	r1, #61	; 0x3d
   23340:	bne	2339c <myhtml_tokenizer_state_attribute_name@@Base+0x94>
   23344:	ldr	r2, [r5, #56]	; 0x38
   23348:	ldr	r3, [r5, #192]	; 0xc0
   2334c:	ldr	r1, [r2, #48]	; 0x30
   23350:	sub	r3, r3, r1
   23354:	add	r3, r3, r4
   23358:	str	r3, [r2, #52]	; 0x34
   2335c:	mov	r3, #36	; 0x24
   23360:	b	2338c <myhtml_tokenizer_state_attribute_name@@Base+0x84>
   23364:	mvn	r3, ip, lsr r3
   23368:	tst	r3, #1
   2336c:	bne	23474 <myhtml_tokenizer_state_attribute_name@@Base+0x16c>
   23370:	ldr	r2, [r5, #56]	; 0x38
   23374:	ldr	r3, [r5, #192]	; 0xc0
   23378:	ldr	r1, [r2, #48]	; 0x30
   2337c:	sub	r3, r3, r1
   23380:	add	r3, r3, r4
   23384:	str	r3, [r2, #52]	; 0x34
   23388:	mov	r3, #35	; 0x23
   2338c:	str	r3, [r5, #160]	; 0xa0
   23390:	add	r4, r4, #1
   23394:	mov	r0, r4
   23398:	pop	{r4, r5, r6, pc}
   2339c:	cmp	r1, #62	; 0x3e
   233a0:	bne	23424 <myhtml_tokenizer_state_attribute_name@@Base+0x11c>
   233a4:	ldr	r2, [r5, #56]	; 0x38
   233a8:	mov	r0, r5
   233ac:	ldr	r3, [r5, #192]	; 0xc0
   233b0:	ldr	r1, [r2, #48]	; 0x30
   233b4:	sub	r3, r3, r1
   233b8:	mov	r1, r6
   233bc:	add	r3, r3, r4
   233c0:	add	r4, r4, #1
   233c4:	str	r3, [r2, #52]	; 0x34
   233c8:	bl	10ad8 <myhtml_tokenizer_set_state@plt>
   233cc:	ldr	r2, [r6, #32]
   233d0:	mov	r1, r4
   233d4:	mov	r0, r5
   233d8:	ldr	r3, [r5, #192]	; 0xc0
   233dc:	sub	r3, r3, r2
   233e0:	mov	r2, r6
   233e4:	add	r3, r3, r4
   233e8:	str	r3, [r6, #36]	; 0x24
   233ec:	bl	ffc8 <myhtml_queue_add@plt>
   233f0:	cmp	r0, #0
   233f4:	beq	23408 <myhtml_tokenizer_state_attribute_name@@Base+0x100>
   233f8:	mov	r3, #69	; 0x45
   233fc:	mov	r4, #0
   23400:	str	r3, [r5, #160]	; 0xa0
   23404:	b	23394 <myhtml_tokenizer_state_attribute_name@@Base+0x8c>
   23408:	ldr	r0, [r5, #8]
   2340c:	ldr	r1, [r0, #16]
   23410:	bl	10898 <myhtml_token_attr_create@plt>
   23414:	cmp	r0, #0
   23418:	str	r0, [r5, #56]	; 0x38
   2341c:	bne	23394 <myhtml_tokenizer_state_attribute_name@@Base+0x8c>
   23420:	b	233f8 <myhtml_tokenizer_state_attribute_name@@Base+0xf0>
   23424:	cmp	r1, #47	; 0x2f
   23428:	bne	23474 <myhtml_tokenizer_state_attribute_name@@Base+0x16c>
   2342c:	ldr	r0, [r5, #8]
   23430:	ldr	r2, [r5, #56]	; 0x38
   23434:	ldr	r3, [r5, #192]	; 0xc0
   23438:	ldr	r1, [r2, #48]	; 0x30
   2343c:	sub	r3, r3, r1
   23440:	ldr	r1, [r0, #16]
   23444:	add	r3, r3, r4
   23448:	str	r3, [r2, #52]	; 0x34
   2344c:	ldr	r3, [r6, #48]	; 0x30
   23450:	orr	r3, r3, #2
   23454:	str	r3, [r6, #48]	; 0x30
   23458:	mov	r3, #33	; 0x21
   2345c:	str	r3, [r5, #160]	; 0xa0
   23460:	bl	10898 <myhtml_token_attr_create@plt>
   23464:	cmp	r0, #0
   23468:	str	r0, [r5, #56]	; 0x38
   2346c:	bne	23390 <myhtml_tokenizer_state_attribute_name@@Base+0x88>
   23470:	b	233f8 <myhtml_tokenizer_state_attribute_name@@Base+0xf0>
   23474:	add	r4, r4, #1
   23478:	b	23320 <myhtml_tokenizer_state_attribute_name@@Base+0x18>
   2347c:	addeq	r0, r0, fp, lsl r0

00023480 <myhtml_tokenizer_state_after_attribute_name@@Base>:
   23480:	push	{r4, r5, r6, r7, r8, lr}
   23484:	mov	r4, r0
   23488:	mov	r6, r1
   2348c:	mov	r5, r3
   23490:	ldr	ip, [pc, #468]	; 2366c <myhtml_tokenizer_state_after_attribute_name@@Base+0x1ec>
   23494:	ldr	lr, [pc, #468]	; 23670 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1f0>
   23498:	ldr	r0, [sp, #24]
   2349c:	cmp	r5, r0
   234a0:	bcs	234bc <myhtml_tokenizer_state_after_attribute_name@@Base+0x3c>
   234a4:	ldrb	r3, [r2, r5]
   234a8:	cmp	r3, #61	; 0x3d
   234ac:	bne	234c4 <myhtml_tokenizer_state_after_attribute_name@@Base+0x44>
   234b0:	mov	r3, #36	; 0x24
   234b4:	add	r5, r5, #1
   234b8:	str	r3, [r4, #160]	; 0xa0
   234bc:	mov	r0, r5
   234c0:	pop	{r4, r5, r6, r7, r8, pc}
   234c4:	cmp	r3, #62	; 0x3e
   234c8:	bne	23534 <myhtml_tokenizer_state_after_attribute_name@@Base+0xb4>
   234cc:	mov	r1, r6
   234d0:	mov	r0, r4
   234d4:	bl	10ad8 <myhtml_tokenizer_set_state@plt>
   234d8:	ldr	r2, [r6, #32]
   234dc:	add	r5, r5, #1
   234e0:	mov	r0, r4
   234e4:	mov	r1, r5
   234e8:	ldr	r3, [r4, #192]	; 0xc0
   234ec:	sub	r3, r3, r2
   234f0:	mov	r2, r6
   234f4:	add	r3, r3, r5
   234f8:	str	r3, [r6, #36]	; 0x24
   234fc:	bl	ffc8 <myhtml_queue_add@plt>
   23500:	cmp	r0, #0
   23504:	beq	23518 <myhtml_tokenizer_state_after_attribute_name@@Base+0x98>
   23508:	mov	r3, #69	; 0x45
   2350c:	mov	r5, #0
   23510:	str	r3, [r4, #160]	; 0xa0
   23514:	b	234bc <myhtml_tokenizer_state_after_attribute_name@@Base+0x3c>
   23518:	ldr	r0, [r4, #8]
   2351c:	ldr	r1, [r0, #16]
   23520:	bl	10898 <myhtml_token_attr_create@plt>
   23524:	cmp	r0, #0
   23528:	str	r0, [r4, #56]	; 0x38
   2352c:	bne	234bc <myhtml_tokenizer_state_after_attribute_name@@Base+0x3c>
   23530:	b	23508 <myhtml_tokenizer_state_after_attribute_name@@Base+0x88>
   23534:	sub	r1, r3, #34	; 0x22
   23538:	uxtb	r1, r1
   2353c:	cmp	r1, #26
   23540:	bhi	235d0 <myhtml_tokenizer_state_after_attribute_name@@Base+0x150>
   23544:	mvn	r1, ip, lsr r1
   23548:	ands	r7, r1, #1
   2354c:	bne	235d0 <myhtml_tokenizer_state_after_attribute_name@@Base+0x150>
   23550:	ldr	r0, [r4, #8]
   23554:	ldr	r1, [r0, #16]
   23558:	bl	10898 <myhtml_token_attr_create@plt>
   2355c:	cmp	r0, #0
   23560:	str	r0, [r4, #56]	; 0x38
   23564:	beq	23508 <myhtml_tokenizer_state_after_attribute_name@@Base+0x88>
   23568:	ldr	r3, [r6, #40]	; 0x28
   2356c:	cmp	r3, #0
   23570:	bne	235b4 <myhtml_tokenizer_state_after_attribute_name@@Base+0x134>
   23574:	str	r0, [r6, #40]	; 0x28
   23578:	str	r0, [r6, #44]	; 0x2c
   2357c:	str	r0, [r4, #56]	; 0x38
   23580:	str	r3, [r0]
   23584:	str	r3, [r0, #4]
   23588:	ldr	r3, [r4, #56]	; 0x38
   2358c:	ldr	r2, [r4, #192]	; 0xc0
   23590:	add	r2, r2, r5
   23594:	str	r2, [r3, #48]	; 0x30
   23598:	mov	r2, #0
   2359c:	str	r2, [r3, #52]	; 0x34
   235a0:	str	r2, [r3, #56]	; 0x38
   235a4:	str	r2, [r3, #60]	; 0x3c
   235a8:	mov	r3, #34	; 0x22
   235ac:	str	r3, [r4, #160]	; 0xa0
   235b0:	b	234bc <myhtml_tokenizer_state_after_attribute_name@@Base+0x3c>
   235b4:	ldr	r3, [r6, #44]	; 0x2c
   235b8:	str	r0, [r3]
   235bc:	str	r3, [r0, #4]
   235c0:	str	r0, [r6, #44]	; 0x2c
   235c4:	str	r7, [r0]
   235c8:	str	r0, [r4, #56]	; 0x38
   235cc:	b	23588 <myhtml_tokenizer_state_after_attribute_name@@Base+0x108>
   235d0:	sub	r3, r3, #9
   235d4:	uxtb	r3, r3
   235d8:	cmp	r3, #23
   235dc:	bhi	235ec <myhtml_tokenizer_state_after_attribute_name@@Base+0x16c>
   235e0:	mvn	r3, lr, lsr r3
   235e4:	tst	r3, #1
   235e8:	beq	23664 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1e4>
   235ec:	ldr	r0, [r4, #8]
   235f0:	ldr	r1, [r0, #16]
   235f4:	bl	10898 <myhtml_token_attr_create@plt>
   235f8:	cmp	r0, #0
   235fc:	str	r0, [r4, #56]	; 0x38
   23600:	beq	23508 <myhtml_tokenizer_state_after_attribute_name@@Base+0x88>
   23604:	ldr	r3, [r6, #40]	; 0x28
   23608:	cmp	r3, #0
   2360c:	bne	23644 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1c4>
   23610:	str	r0, [r6, #40]	; 0x28
   23614:	str	r0, [r6, #44]	; 0x2c
   23618:	str	r0, [r4, #56]	; 0x38
   2361c:	str	r3, [r0]
   23620:	str	r3, [r0, #4]
   23624:	ldr	r3, [r4, #192]	; 0xc0
   23628:	add	r3, r3, r5
   2362c:	str	r3, [r0, #48]	; 0x30
   23630:	mov	r3, #0
   23634:	str	r3, [r0, #52]	; 0x34
   23638:	str	r3, [r0, #56]	; 0x38
   2363c:	str	r3, [r0, #60]	; 0x3c
   23640:	b	235a8 <myhtml_tokenizer_state_after_attribute_name@@Base+0x128>
   23644:	ldr	r3, [r6, #44]	; 0x2c
   23648:	str	r0, [r3]
   2364c:	str	r3, [r0, #4]
   23650:	mov	r3, #0
   23654:	str	r0, [r6, #44]	; 0x2c
   23658:	str	r3, [r0]
   2365c:	str	r0, [r4, #56]	; 0x38
   23660:	b	23624 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1a4>
   23664:	add	r5, r5, #1
   23668:	b	2349c <myhtml_tokenizer_state_after_attribute_name@@Base+0x1c>
   2366c:	streq	r0, [r0], #-33	; 0xffffffdf
   23670:	addeq	r0, r0, fp, lsl r0

00023674 <myhtml_tokenizer_state_before_attribute_value@@Base>:
   23674:	push	{r4, r5, r6, lr}
   23678:	mov	r5, r0
   2367c:	mov	r6, r1
   23680:	mov	r4, r3
   23684:	ldr	ip, [pc, #232]	; 23774 <myhtml_tokenizer_state_before_attribute_value@@Base+0x100>
   23688:	ldr	r0, [sp, #16]
   2368c:	cmp	r4, r0
   23690:	bcs	236e8 <myhtml_tokenizer_state_before_attribute_value@@Base+0x74>
   23694:	ldrb	r1, [r2, r4]
   23698:	cmp	r1, #62	; 0x3e
   2369c:	bne	2370c <myhtml_tokenizer_state_before_attribute_value@@Base+0x98>
   236a0:	mov	r1, r6
   236a4:	mov	r0, r5
   236a8:	bl	10ad8 <myhtml_tokenizer_set_state@plt>
   236ac:	ldr	r2, [r6, #32]
   236b0:	add	r4, r4, #1
   236b4:	mov	r0, r5
   236b8:	mov	r1, r4
   236bc:	ldr	r3, [r5, #192]	; 0xc0
   236c0:	sub	r3, r3, r2
   236c4:	mov	r2, r6
   236c8:	add	r3, r3, r4
   236cc:	str	r3, [r6, #36]	; 0x24
   236d0:	bl	ffc8 <myhtml_queue_add@plt>
   236d4:	cmp	r0, #0
   236d8:	beq	236f0 <myhtml_tokenizer_state_before_attribute_value@@Base+0x7c>
   236dc:	mov	r3, #69	; 0x45
   236e0:	mov	r4, #0
   236e4:	str	r3, [r5, #160]	; 0xa0
   236e8:	mov	r0, r4
   236ec:	pop	{r4, r5, r6, pc}
   236f0:	ldr	r0, [r5, #8]
   236f4:	ldr	r1, [r0, #16]
   236f8:	bl	10898 <myhtml_token_attr_create@plt>
   236fc:	cmp	r0, #0
   23700:	str	r0, [r5, #56]	; 0x38
   23704:	bne	236e8 <myhtml_tokenizer_state_before_attribute_value@@Base+0x74>
   23708:	b	236dc <myhtml_tokenizer_state_before_attribute_value@@Base+0x68>
   2370c:	sub	r3, r1, #9
   23710:	uxtb	r3, r3
   23714:	cmp	r3, #23
   23718:	bls	23744 <myhtml_tokenizer_state_before_attribute_value@@Base+0xd0>
   2371c:	cmp	r1, #34	; 0x22
   23720:	bne	23758 <myhtml_tokenizer_state_before_attribute_value@@Base+0xe4>
   23724:	add	r4, r4, #1
   23728:	mov	r3, #37	; 0x25
   2372c:	str	r3, [r5, #160]	; 0xa0
   23730:	ldr	r2, [r5, #56]	; 0x38
   23734:	ldr	r3, [r5, #192]	; 0xc0
   23738:	add	r3, r3, r4
   2373c:	str	r3, [r2, #56]	; 0x38
   23740:	b	236e8 <myhtml_tokenizer_state_before_attribute_value@@Base+0x74>
   23744:	mvn	r3, ip, lsr r3
   23748:	tst	r3, #1
   2374c:	beq	2376c <myhtml_tokenizer_state_before_attribute_value@@Base+0xf8>
   23750:	mov	r3, #39	; 0x27
   23754:	b	2372c <myhtml_tokenizer_state_before_attribute_value@@Base+0xb8>
   23758:	cmp	r1, #39	; 0x27
   2375c:	addeq	r4, r4, #1
   23760:	moveq	r3, #38	; 0x26
   23764:	bne	23750 <myhtml_tokenizer_state_before_attribute_value@@Base+0xdc>
   23768:	b	2372c <myhtml_tokenizer_state_before_attribute_value@@Base+0xb8>
   2376c:	add	r4, r4, #1
   23770:	b	2368c <myhtml_tokenizer_state_before_attribute_value@@Base+0x18>
   23774:	addeq	r0, r0, fp, lsl r0

00023778 <myhtml_tokenizer_state_attribute_value_unquoted@@Base>:
   23778:	push	{r4, r5, r6, r7, r8, lr}
   2377c:	mov	r4, r0
   23780:	mov	r7, r1
   23784:	mov	r5, r3
   23788:	ldr	ip, [pc, #252]	; 2388c <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x114>
   2378c:	ldr	r0, [sp, #24]
   23790:	cmp	r5, r0
   23794:	movcs	r6, r5
   23798:	bcs	23804 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x8c>
   2379c:	ldrb	r1, [r2, r5]
   237a0:	sub	r3, r1, #9
   237a4:	uxtb	r3, r3
   237a8:	cmp	r3, #23
   237ac:	bhi	2380c <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x94>
   237b0:	mvn	r3, ip, lsr r3
   237b4:	tst	r3, #1
   237b8:	bne	2380c <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x94>
   237bc:	mov	r3, #33	; 0x21
   237c0:	ldr	r0, [r4, #8]
   237c4:	ldr	r2, [r4, #56]	; 0x38
   237c8:	ldr	r1, [r2, #56]	; 0x38
   237cc:	str	r3, [r4, #160]	; 0xa0
   237d0:	ldr	r3, [r4, #192]	; 0xc0
   237d4:	sub	r3, r3, r1
   237d8:	ldr	r1, [r0, #16]
   237dc:	add	r3, r3, r5
   237e0:	str	r3, [r2, #60]	; 0x3c
   237e4:	bl	10898 <myhtml_token_attr_create@plt>
   237e8:	cmp	r0, #0
   237ec:	str	r0, [r4, #56]	; 0x38
   237f0:	addne	r6, r5, #1
   237f4:	bne	23804 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x8c>
   237f8:	mov	r3, #69	; 0x45
   237fc:	mov	r6, #0
   23800:	str	r3, [r4, #160]	; 0xa0
   23804:	mov	r0, r6
   23808:	pop	{r4, r5, r6, r7, r8, pc}
   2380c:	cmp	r1, #62	; 0x3e
   23810:	add	r6, r5, #1
   23814:	bne	23884 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x10c>
   23818:	ldr	r2, [r4, #56]	; 0x38
   2381c:	mov	r0, r4
   23820:	ldr	r3, [r4, #192]	; 0xc0
   23824:	ldr	r1, [r2, #56]	; 0x38
   23828:	sub	r3, r3, r1
   2382c:	mov	r1, r7
   23830:	add	r3, r3, r5
   23834:	str	r3, [r2, #60]	; 0x3c
   23838:	bl	10ad8 <myhtml_tokenizer_set_state@plt>
   2383c:	ldr	r2, [r7, #32]
   23840:	mov	r1, r6
   23844:	mov	r0, r4
   23848:	ldr	r3, [r4, #192]	; 0xc0
   2384c:	sub	r3, r3, r2
   23850:	mov	r2, r7
   23854:	add	r3, r3, r6
   23858:	str	r3, [r7, #36]	; 0x24
   2385c:	bl	ffc8 <myhtml_queue_add@plt>
   23860:	cmp	r0, #0
   23864:	bne	237f8 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x80>
   23868:	ldr	r0, [r4, #8]
   2386c:	ldr	r1, [r0, #16]
   23870:	bl	10898 <myhtml_token_attr_create@plt>
   23874:	cmp	r0, #0
   23878:	str	r0, [r4, #56]	; 0x38
   2387c:	bne	23804 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x8c>
   23880:	b	237f8 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x80>
   23884:	mov	r5, r6
   23888:	b	23790 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x18>
   2388c:	addeq	r0, r0, fp, lsl r0

00023890 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base>:
   23890:	push	{r4, r5, r6, lr}
   23894:	mov	r4, r3
   23898:	mov	r5, r0
   2389c:	ldrb	r2, [r2, r3]
   238a0:	sub	r3, r2, #9
   238a4:	uxtb	r3, r3
   238a8:	cmp	r3, #23
   238ac:	bls	238cc <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x3c>
   238b0:	cmp	r2, #47	; 0x2f
   238b4:	bne	238ec <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x5c>
   238b8:	mov	r3, #42	; 0x2a
   238bc:	add	r4, r4, #1
   238c0:	str	r3, [r5, #160]	; 0xa0
   238c4:	mov	r0, r4
   238c8:	pop	{r4, r5, r6, pc}
   238cc:	ldr	r2, [pc, #100]	; 23938 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0xa8>
   238d0:	mvn	r3, r2, lsr r3
   238d4:	tst	r3, #1
   238d8:	moveq	r3, #33	; 0x21
   238dc:	beq	238bc <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x2c>
   238e0:	mov	r3, #33	; 0x21
   238e4:	str	r3, [r5, #160]	; 0xa0
   238e8:	b	238c4 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x34>
   238ec:	cmp	r2, #62	; 0x3e
   238f0:	bne	238e0 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x50>
   238f4:	mov	r6, r1
   238f8:	add	r4, r4, #1
   238fc:	bl	10ad8 <myhtml_tokenizer_set_state@plt>
   23900:	ldr	r2, [r6, #32]
   23904:	mov	r1, r4
   23908:	mov	r0, r5
   2390c:	ldr	r3, [r5, #192]	; 0xc0
   23910:	sub	r3, r3, r2
   23914:	mov	r2, r6
   23918:	add	r3, r3, r4
   2391c:	str	r3, [r6, #36]	; 0x24
   23920:	bl	ffc8 <myhtml_queue_add@plt>
   23924:	cmp	r0, #0
   23928:	movne	r3, #69	; 0x45
   2392c:	movne	r4, #0
   23930:	strne	r3, [r5, #160]	; 0xa0
   23934:	b	238c4 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x34>
   23938:	addeq	r0, r0, fp, lsl r0

0002393c <_myhtml_tokenizer_state_andata_end_tag_name@@Base>:
   2393c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   23940:	mov	r6, r3
   23944:	mov	r5, r0
   23948:	mov	r4, r1
   2394c:	ldr	ip, [r1, #24]
   23950:	ldr	r3, [r0, #192]	; 0xc0
   23954:	ldr	r7, [sp, #32]
   23958:	sub	r3, r3, ip
   2395c:	ldr	ip, [r6]
   23960:	add	r3, r3, ip
   23964:	str	r3, [r1, #28]
   23968:	ldr	r3, [r6]
   2396c:	bl	10bd4 <myhtml_check_tag_parser@plt>
   23970:	ldr	r2, [r4]
   23974:	ldr	r3, [r5, #60]	; 0x3c
   23978:	cmp	r2, r3
   2397c:	beq	239a4 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0x68>
   23980:	mov	r0, #0
   23984:	mov	r3, #2
   23988:	str	r7, [r4, #24]
   2398c:	str	r0, [r4, #28]
   23990:	str	r3, [r5, #160]	; 0xa0
   23994:	ldr	r3, [r6]
   23998:	add	r3, r3, #1
   2399c:	str	r3, [r6]
   239a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   239a4:	ldr	r8, [r4, #24]
   239a8:	sub	r3, r8, #2
   239ac:	cmp	r7, r3
   239b0:	bcs	23a18 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0xdc>
   239b4:	sub	r3, r8, r7
   239b8:	mov	r0, r5
   239bc:	str	r7, [r4, #24]
   239c0:	sub	r3, r3, #2
   239c4:	ldr	r2, [r4, #48]	; 0x30
   239c8:	str	r3, [r4, #28]
   239cc:	str	r3, [r4, #36]	; 0x24
   239d0:	ldr	r3, [sp, #36]	; 0x24
   239d4:	ldr	r9, [r4, #32]
   239d8:	str	r7, [r4, #32]
   239dc:	orr	r3, r3, r2
   239e0:	str	r3, [r4, #48]	; 0x30
   239e4:	ldr	r2, [r4, #48]	; 0x30
   239e8:	ldr	r3, [r4, #48]	; 0x30
   239ec:	and	r2, r2, #8
   239f0:	eor	r2, r2, r3
   239f4:	mov	r3, #1
   239f8:	str	r3, [r4]
   239fc:	str	r2, [r4, #48]	; 0x30
   23a00:	mov	r2, r4
   23a04:	ldr	r1, [r6]
   23a08:	bl	ffc8 <myhtml_queue_add@plt>
   23a0c:	ldr	r4, [r5, #64]	; 0x40
   23a10:	str	r8, [r4, #24]
   23a14:	str	r9, [r4, #32]
   23a18:	ldr	r3, [r5, #60]	; 0x3c
   23a1c:	mov	r0, #1
   23a20:	ldr	r2, [r5, #192]	; 0xc0
   23a24:	str	r3, [r4]
   23a28:	ldr	r3, [r4, #48]	; 0x30
   23a2c:	orr	r3, r3, #1
   23a30:	str	r3, [r4, #48]	; 0x30
   23a34:	ldr	r3, [r6]
   23a38:	sub	r3, r3, r8
   23a3c:	add	r3, r3, r2
   23a40:	str	r3, [r4, #28]
   23a44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00023a48 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base>:
   23a48:	push	{r4, r5, r6, r7, lr}
   23a4c:	mov	r5, r1
   23a50:	sub	sp, sp, #20
   23a54:	mov	r4, r0
   23a58:	ldr	r6, [r1, #24]
   23a5c:	str	r3, [sp, #12]
   23a60:	ldr	r1, [r0, #192]	; 0xc0
   23a64:	ldr	r7, [pc, #316]	; 23ba8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x160>
   23a68:	ldr	lr, [sp, #40]	; 0x28
   23a6c:	add	r1, r1, r3
   23a70:	add	r7, pc, r7
   23a74:	str	r1, [r5, #24]
   23a78:	mov	r1, #0
   23a7c:	cmp	lr, r3
   23a80:	bhi	23a90 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x48>
   23a84:	cmp	r1, #0
   23a88:	strne	r3, [sp, #12]
   23a8c:	b	23b90 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x148>
   23a90:	ldrb	ip, [r2, r3]
   23a94:	ldrb	r0, [r7, ip]
   23a98:	cmp	r0, #2
   23a9c:	bne	23ae8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xa0>
   23aa0:	cmp	r1, #0
   23aa4:	mov	r0, r4
   23aa8:	str	r6, [sp]
   23aac:	mov	r1, r5
   23ab0:	strne	r3, [sp, #12]
   23ab4:	mov	r3, #16
   23ab8:	str	r3, [sp, #4]
   23abc:	add	r3, sp, #12
   23ac0:	bl	10c04 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   23ac4:	cmp	r0, #0
   23ac8:	beq	23b90 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x148>
   23acc:	ldr	r0, [sp, #12]
   23ad0:	mov	r3, #33	; 0x21
   23ad4:	str	r3, [r4, #160]	; 0xa0
   23ad8:	mov	r3, #0
   23adc:	str	r3, [r4, #60]	; 0x3c
   23ae0:	add	r0, r0, #1
   23ae4:	b	23b64 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x11c>
   23ae8:	cmp	ip, #62	; 0x3e
   23aec:	bne	23b6c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x124>
   23af0:	cmp	r1, #0
   23af4:	mov	r0, r4
   23af8:	str	r6, [sp]
   23afc:	mov	r1, r5
   23b00:	strne	r3, [sp, #12]
   23b04:	mov	r3, #16
   23b08:	str	r3, [sp, #4]
   23b0c:	add	r3, sp, #12
   23b10:	bl	10c04 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   23b14:	cmp	r0, #0
   23b18:	beq	23b90 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x148>
   23b1c:	ldr	r2, [r4, #64]	; 0x40
   23b20:	ldr	r1, [sp, #12]
   23b24:	ldr	r3, [r4, #192]	; 0xc0
   23b28:	ldr	r0, [r2, #32]
   23b2c:	add	r1, r1, #1
   23b30:	add	r3, r1, r3
   23b34:	str	r1, [sp, #12]
   23b38:	sub	r3, r3, r0
   23b3c:	mov	r0, r4
   23b40:	str	r3, [r2, #36]	; 0x24
   23b44:	bl	ffc8 <myhtml_queue_add@plt>
   23b48:	cmp	r0, #0
   23b4c:	movne	r3, #69	; 0x45
   23b50:	movne	r0, #0
   23b54:	streq	r0, [r4, #60]	; 0x3c
   23b58:	strne	r3, [r4, #160]	; 0xa0
   23b5c:	streq	r0, [r4, #160]	; 0xa0
   23b60:	beq	23b94 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x14c>
   23b64:	add	sp, sp, #20
   23b68:	pop	{r4, r5, r6, r7, pc}
   23b6c:	cmp	ip, #47	; 0x2f
   23b70:	beq	23aa0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x58>
   23b74:	cmp	r0, #1
   23b78:	add	ip, r3, #1
   23b7c:	beq	23b9c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x154>
   23b80:	cmp	r1, #0
   23b84:	strne	r3, [sp, #12]
   23b88:	mov	r3, #2
   23b8c:	str	r3, [r4, #160]	; 0xa0
   23b90:	str	r6, [r5, #24]
   23b94:	ldr	r0, [sp, #12]
   23b98:	b	23b64 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x11c>
   23b9c:	mov	r3, ip
   23ba0:	mov	r1, r0
   23ba4:	b	23a7c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x34>
   23ba8:	andeq	r3, sp, r4, lsr #20

00023bac <myhtml_tokenizer_state_rawtext_end_tag_name@@Base>:
   23bac:	push	{r4, r5, r6, r7, lr}
   23bb0:	mov	r4, r0
   23bb4:	sub	sp, sp, #20
   23bb8:	ldr	ip, [r4, #192]	; 0xc0
   23bbc:	str	r3, [sp, #12]
   23bc0:	ldr	r7, [pc, #296]	; 23cf0 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x144>
   23bc4:	ldr	r6, [sp, #40]	; 0x28
   23bc8:	add	ip, ip, r3
   23bcc:	ldr	r0, [r1, #24]
   23bd0:	add	r7, pc, r7
   23bd4:	str	ip, [r1, #24]
   23bd8:	mov	ip, #0
   23bdc:	cmp	r6, r3
   23be0:	strls	r0, [r1, #24]
   23be4:	bls	23cb4 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x108>
   23be8:	ldrb	lr, [r2, r3]
   23bec:	ldrb	r5, [r7, lr]
   23bf0:	cmp	r5, #2
   23bf4:	bne	23c40 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x94>
   23bf8:	cmp	ip, #0
   23bfc:	strne	r3, [sp, #12]
   23c00:	mov	r3, #32
   23c04:	stm	sp, {r0, r3}
   23c08:	add	r3, sp, #12
   23c0c:	mov	r0, r4
   23c10:	bl	10c04 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   23c14:	cmp	r0, #0
   23c18:	beq	23c38 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x8c>
   23c1c:	mov	r3, #33	; 0x21
   23c20:	str	r3, [r4, #160]	; 0xa0
   23c24:	mov	r3, #0
   23c28:	str	r3, [r4, #60]	; 0x3c
   23c2c:	ldr	r3, [sp, #12]
   23c30:	add	r3, r3, #1
   23c34:	str	r3, [sp, #12]
   23c38:	ldr	r3, [sp, #12]
   23c3c:	b	23cb4 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x108>
   23c40:	cmp	lr, #62	; 0x3e
   23c44:	bne	23cc0 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x114>
   23c48:	cmp	ip, #0
   23c4c:	strne	r3, [sp, #12]
   23c50:	mov	r3, #32
   23c54:	stm	sp, {r0, r3}
   23c58:	add	r3, sp, #12
   23c5c:	mov	r0, r4
   23c60:	bl	10c04 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   23c64:	cmp	r0, #0
   23c68:	beq	23c38 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x8c>
   23c6c:	ldr	r2, [r4, #64]	; 0x40
   23c70:	ldr	r1, [sp, #12]
   23c74:	ldr	r3, [r4, #192]	; 0xc0
   23c78:	ldr	r0, [r2, #32]
   23c7c:	add	r1, r1, #1
   23c80:	add	r3, r1, r3
   23c84:	str	r1, [sp, #12]
   23c88:	sub	r3, r3, r0
   23c8c:	mov	r0, r4
   23c90:	str	r3, [r2, #36]	; 0x24
   23c94:	bl	ffc8 <myhtml_queue_add@plt>
   23c98:	cmp	r0, #0
   23c9c:	movne	r3, #69	; 0x45
   23ca0:	streq	r0, [r4, #60]	; 0x3c
   23ca4:	strne	r3, [r4, #160]	; 0xa0
   23ca8:	movne	r3, #0
   23cac:	streq	r0, [r4, #160]	; 0xa0
   23cb0:	beq	23c38 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x8c>
   23cb4:	mov	r0, r3
   23cb8:	add	sp, sp, #20
   23cbc:	pop	{r4, r5, r6, r7, pc}
   23cc0:	cmp	lr, #47	; 0x2f
   23cc4:	beq	23bf8 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x4c>
   23cc8:	mov	ip, #1
   23ccc:	add	lr, r3, #1
   23cd0:	cmp	r5, ip
   23cd4:	beq	23ce8 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x13c>
   23cd8:	mov	r2, #4
   23cdc:	str	r0, [r1, #24]
   23ce0:	str	r2, [r4, #160]	; 0xa0
   23ce4:	b	23cb4 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x108>
   23ce8:	mov	r3, lr
   23cec:	b	23bdc <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x30>
   23cf0:	andeq	r3, sp, r4, asr #17

00023cf4 <myhtml_tokenizer_state_init@@Base>:
   23cf4:	push	{r4, r5, r6, lr}
   23cf8:	mov	r5, r0
   23cfc:	movw	r0, #19604	; 0x4c94
   23d00:	ldr	r4, [pc, #1544]	; 24310 <myhtml_tokenizer_state_init@@Base+0x61c>
   23d04:	bl	10c28 <mycore_malloc@plt>
   23d08:	cmp	r0, #0
   23d0c:	str	r0, [r5, #24]
   23d10:	add	r4, pc, r4
   23d14:	beq	24308 <myhtml_tokenizer_state_init@@Base+0x614>
   23d18:	ldr	r3, [pc, #1524]	; 24314 <myhtml_tokenizer_state_init@@Base+0x620>
   23d1c:	ldr	r3, [r4, r3]
   23d20:	str	r3, [r0]
   23d24:	ldr	r3, [pc, #1516]	; 24318 <myhtml_tokenizer_state_init@@Base+0x624>
   23d28:	ldr	r3, [r4, r3]
   23d2c:	str	r3, [r0, #28]
   23d30:	ldr	r3, [pc, #1508]	; 2431c <myhtml_tokenizer_state_init@@Base+0x628>
   23d34:	ldr	r3, [r4, r3]
   23d38:	str	r3, [r0, #36]	; 0x24
   23d3c:	ldr	r3, [pc, #1500]	; 24320 <myhtml_tokenizer_state_init@@Base+0x62c>
   23d40:	ldr	r3, [r4, r3]
   23d44:	str	r3, [r0, #32]
   23d48:	ldr	r3, [pc, #1492]	; 24324 <myhtml_tokenizer_state_init@@Base+0x630>
   23d4c:	ldr	r3, [r4, r3]
   23d50:	str	r3, [r0, #168]	; 0xa8
   23d54:	ldr	r3, [pc, #1484]	; 24328 <myhtml_tokenizer_state_init@@Base+0x634>
   23d58:	ldr	r3, [r4, r3]
   23d5c:	str	r3, [r0, #176]	; 0xb0
   23d60:	ldr	r3, [pc, #1476]	; 2432c <myhtml_tokenizer_state_init@@Base+0x638>
   23d64:	ldr	r3, [r4, r3]
   23d68:	str	r3, [r0, #132]	; 0x84
   23d6c:	ldr	r3, [pc, #1468]	; 24330 <myhtml_tokenizer_state_init@@Base+0x63c>
   23d70:	ldr	r3, [r4, r3]
   23d74:	str	r3, [r0, #136]	; 0x88
   23d78:	ldr	r3, [pc, #1460]	; 24334 <myhtml_tokenizer_state_init@@Base+0x640>
   23d7c:	ldr	r3, [r4, r3]
   23d80:	str	r3, [r0, #140]	; 0x8c
   23d84:	ldr	r3, [pc, #1452]	; 24338 <myhtml_tokenizer_state_init@@Base+0x644>
   23d88:	ldr	r3, [r4, r3]
   23d8c:	str	r3, [r0, #144]	; 0x90
   23d90:	ldr	r3, [pc, #1444]	; 2433c <myhtml_tokenizer_state_init@@Base+0x648>
   23d94:	ldr	r3, [r4, r3]
   23d98:	str	r3, [r0, #164]	; 0xa4
   23d9c:	ldr	r3, [pc, #1436]	; 24340 <myhtml_tokenizer_state_init@@Base+0x64c>
   23da0:	ldr	r3, [r4, r3]
   23da4:	str	r3, [r0, #148]	; 0x94
   23da8:	ldr	r3, [pc, #1428]	; 24344 <myhtml_tokenizer_state_init@@Base+0x650>
   23dac:	ldr	r3, [r4, r3]
   23db0:	str	r3, [r0, #152]	; 0x98
   23db4:	ldr	r3, [pc, #1420]	; 24348 <myhtml_tokenizer_state_init@@Base+0x654>
   23db8:	ldr	r3, [r4, r3]
   23dbc:	str	r3, [r0, #156]	; 0x9c
   23dc0:	ldr	r3, [pc, #1412]	; 2434c <myhtml_tokenizer_state_init@@Base+0x658>
   23dc4:	ldr	r3, [r4, r3]
   23dc8:	str	r3, [r0, #180]	; 0xb4
   23dcc:	ldr	r3, [pc, #1404]	; 24350 <myhtml_tokenizer_state_init@@Base+0x65c>
   23dd0:	ldr	r3, [r4, r3]
   23dd4:	str	r3, [r0, #184]	; 0xb8
   23dd8:	ldr	r3, [pc, #1396]	; 24354 <myhtml_tokenizer_state_init@@Base+0x660>
   23ddc:	ldr	r3, [r4, r3]
   23de0:	str	r3, [r0, #188]	; 0xbc
   23de4:	ldr	r3, [pc, #1388]	; 24358 <myhtml_tokenizer_state_init@@Base+0x664>
   23de8:	ldr	r3, [r4, r3]
   23dec:	str	r3, [r0, #196]	; 0xc4
   23df0:	ldr	r3, [pc, #1380]	; 2435c <myhtml_tokenizer_state_init@@Base+0x668>
   23df4:	ldr	r3, [r4, r3]
   23df8:	str	r3, [r0, #192]	; 0xc0
   23dfc:	ldr	r3, [pc, #1372]	; 24360 <myhtml_tokenizer_state_init@@Base+0x66c>
   23e00:	ldr	r3, [r4, r3]
   23e04:	str	r3, [r0, #200]	; 0xc8
   23e08:	ldr	r3, [pc, #1364]	; 24364 <myhtml_tokenizer_state_init@@Base+0x670>
   23e0c:	ldr	r3, [r4, r3]
   23e10:	str	r3, [r0, #172]	; 0xac
   23e14:	ldr	r3, [pc, #1356]	; 24368 <myhtml_tokenizer_state_init@@Base+0x674>
   23e18:	ldr	r3, [r4, r3]
   23e1c:	str	r3, [r0, #268]	; 0x10c
   23e20:	ldr	r3, [pc, #1348]	; 2436c <myhtml_tokenizer_state_init@@Base+0x678>
   23e24:	ldr	r3, [r4, r3]
   23e28:	str	r3, [r0, #8]
   23e2c:	ldr	r3, [pc, #1340]	; 24370 <myhtml_tokenizer_state_init@@Base+0x67c>
   23e30:	ldr	r3, [r4, r3]
   23e34:	str	r3, [r0, #40]	; 0x28
   23e38:	ldr	r3, [pc, #1332]	; 24374 <myhtml_tokenizer_state_init@@Base+0x680>
   23e3c:	ldr	r3, [r4, r3]
   23e40:	str	r3, [r0, #44]	; 0x2c
   23e44:	ldr	r3, [pc, #1324]	; 24378 <myhtml_tokenizer_state_init@@Base+0x684>
   23e48:	ldr	r3, [r4, r3]
   23e4c:	str	r3, [r0, #48]	; 0x30
   23e50:	ldr	r3, [pc, #1316]	; 2437c <myhtml_tokenizer_state_init@@Base+0x688>
   23e54:	ldr	r3, [r4, r3]
   23e58:	str	r3, [r0, #16]
   23e5c:	ldr	r3, [pc, #1308]	; 24380 <myhtml_tokenizer_state_init@@Base+0x68c>
   23e60:	ldr	r3, [r4, r3]
   23e64:	str	r3, [r0, #52]	; 0x34
   23e68:	ldr	r3, [pc, #1300]	; 24384 <myhtml_tokenizer_state_init@@Base+0x690>
   23e6c:	ldr	r3, [r4, r3]
   23e70:	str	r3, [r0, #56]	; 0x38
   23e74:	ldr	r3, [pc, #1292]	; 24388 <myhtml_tokenizer_state_init@@Base+0x694>
   23e78:	ldr	r3, [r4, r3]
   23e7c:	str	r3, [r0, #60]	; 0x3c
   23e80:	ldr	r3, [pc, #1284]	; 2438c <myhtml_tokenizer_state_init@@Base+0x698>
   23e84:	ldr	r3, [r4, r3]
   23e88:	str	r3, [r0, #24]
   23e8c:	ldr	r3, [pc, #1276]	; 24390 <myhtml_tokenizer_state_init@@Base+0x69c>
   23e90:	ldr	r3, [r4, r3]
   23e94:	str	r3, [r0, #204]	; 0xcc
   23e98:	ldr	r3, [pc, #1268]	; 24394 <myhtml_tokenizer_state_init@@Base+0x6a0>
   23e9c:	ldr	r3, [r4, r3]
   23ea0:	str	r3, [r0, #208]	; 0xd0
   23ea4:	ldr	r3, [pc, #1260]	; 24398 <myhtml_tokenizer_state_init@@Base+0x6a4>
   23ea8:	ldr	r3, [r4, r3]
   23eac:	str	r3, [r0, #212]	; 0xd4
   23eb0:	ldr	r3, [pc, #1252]	; 2439c <myhtml_tokenizer_state_init@@Base+0x6a8>
   23eb4:	ldr	r3, [r4, r3]
   23eb8:	str	r3, [r0, #216]	; 0xd8
   23ebc:	ldr	r3, [pc, #1244]	; 243a0 <myhtml_tokenizer_state_init@@Base+0x6ac>
   23ec0:	ldr	r3, [r4, r3]
   23ec4:	str	r3, [r0, #272]	; 0x110
   23ec8:	ldr	r3, [pc, #1236]	; 243a4 <myhtml_tokenizer_state_init@@Base+0x6b0>
   23ecc:	ldr	r3, [r4, r3]
   23ed0:	str	r3, [r0, #224]	; 0xe0
   23ed4:	ldr	r3, [pc, #1228]	; 243a8 <myhtml_tokenizer_state_init@@Base+0x6b4>
   23ed8:	ldr	r3, [r4, r3]
   23edc:	str	r3, [r0, #228]	; 0xe4
   23ee0:	ldr	r3, [pc, #1220]	; 243ac <myhtml_tokenizer_state_init@@Base+0x6b8>
   23ee4:	ldr	r3, [r4, r3]
   23ee8:	str	r3, [r0, #232]	; 0xe8
   23eec:	ldr	r3, [pc, #1212]	; 243b0 <myhtml_tokenizer_state_init@@Base+0x6bc>
   23ef0:	ldr	r3, [r4, r3]
   23ef4:	str	r3, [r0, #236]	; 0xec
   23ef8:	ldr	r3, [pc, #1204]	; 243b4 <myhtml_tokenizer_state_init@@Base+0x6c0>
   23efc:	ldr	r3, [r4, r3]
   23f00:	str	r3, [r0, #252]	; 0xfc
   23f04:	ldr	r3, [pc, #1196]	; 243b8 <myhtml_tokenizer_state_init@@Base+0x6c4>
   23f08:	ldr	r3, [r4, r3]
   23f0c:	str	r3, [r0, #256]	; 0x100
   23f10:	ldr	r3, [pc, #1188]	; 243bc <myhtml_tokenizer_state_init@@Base+0x6c8>
   23f14:	ldr	r3, [r4, r3]
   23f18:	str	r3, [r0, #260]	; 0x104
   23f1c:	ldr	r3, [pc, #1180]	; 243c0 <myhtml_tokenizer_state_init@@Base+0x6cc>
   23f20:	ldr	r3, [r4, r3]
   23f24:	str	r3, [r0, #264]	; 0x108
   23f28:	ldr	r3, [pc, #1172]	; 243c4 <myhtml_tokenizer_state_init@@Base+0x6d0>
   23f2c:	ldr	r3, [r4, r3]
   23f30:	str	r3, [r0, #20]
   23f34:	ldr	r3, [pc, #1164]	; 243c8 <myhtml_tokenizer_state_init@@Base+0x6d4>
   23f38:	ldr	r3, [r4, r3]
   23f3c:	str	r3, [r0, #64]	; 0x40
   23f40:	ldr	r3, [pc, #1156]	; 243cc <myhtml_tokenizer_state_init@@Base+0x6d8>
   23f44:	ldr	r3, [r4, r3]
   23f48:	str	r3, [r0, #68]	; 0x44
   23f4c:	ldr	r3, [pc, #1148]	; 243d0 <myhtml_tokenizer_state_init@@Base+0x6dc>
   23f50:	ldr	r3, [r4, r3]
   23f54:	str	r3, [r0, #72]	; 0x48
   23f58:	ldr	r3, [pc, #1140]	; 243d4 <myhtml_tokenizer_state_init@@Base+0x6e0>
   23f5c:	ldr	r3, [r4, r3]
   23f60:	str	r3, [r0, #76]	; 0x4c
   23f64:	ldr	r3, [pc, #1132]	; 243d8 <myhtml_tokenizer_state_init@@Base+0x6e4>
   23f68:	ldr	r3, [r4, r3]
   23f6c:	str	r3, [r0, #80]	; 0x50
   23f70:	ldr	r3, [pc, #1124]	; 243dc <myhtml_tokenizer_state_init@@Base+0x6e8>
   23f74:	ldr	r3, [r4, r3]
   23f78:	str	r3, [r0, #84]	; 0x54
   23f7c:	ldr	r3, [pc, #1116]	; 243e0 <myhtml_tokenizer_state_init@@Base+0x6ec>
   23f80:	ldr	r3, [r4, r3]
   23f84:	str	r3, [r0, #88]	; 0x58
   23f88:	ldr	r3, [pc, #1108]	; 243e4 <myhtml_tokenizer_state_init@@Base+0x6f0>
   23f8c:	ldr	r3, [r4, r3]
   23f90:	str	r3, [r0, #92]	; 0x5c
   23f94:	ldr	r3, [pc, #1100]	; 243e8 <myhtml_tokenizer_state_init@@Base+0x6f4>
   23f98:	ldr	r3, [r4, r3]
   23f9c:	str	r3, [r0, #96]	; 0x60
   23fa0:	ldr	r3, [pc, #1092]	; 243ec <myhtml_tokenizer_state_init@@Base+0x6f8>
   23fa4:	ldr	r3, [r4, r3]
   23fa8:	str	r3, [r0, #100]	; 0x64
   23fac:	ldr	r3, [pc, #1084]	; 243f0 <myhtml_tokenizer_state_init@@Base+0x6fc>
   23fb0:	ldr	r3, [r4, r3]
   23fb4:	str	r3, [r0, #104]	; 0x68
   23fb8:	ldr	r3, [pc, #1076]	; 243f4 <myhtml_tokenizer_state_init@@Base+0x700>
   23fbc:	ldr	r3, [r4, r3]
   23fc0:	str	r3, [r0, #108]	; 0x6c
   23fc4:	ldr	r3, [pc, #1068]	; 243f8 <myhtml_tokenizer_state_init@@Base+0x704>
   23fc8:	ldr	r3, [r4, r3]
   23fcc:	str	r3, [r0, #112]	; 0x70
   23fd0:	ldr	r3, [pc, #1060]	; 243fc <myhtml_tokenizer_state_init@@Base+0x708>
   23fd4:	ldr	r3, [r4, r3]
   23fd8:	str	r3, [r0, #116]	; 0x74
   23fdc:	ldr	r3, [pc, #1052]	; 24400 <myhtml_tokenizer_state_init@@Base+0x70c>
   23fe0:	ldr	r3, [r4, r3]
   23fe4:	str	r3, [r0, #120]	; 0x78
   23fe8:	ldr	r3, [pc, #1044]	; 24404 <myhtml_tokenizer_state_init@@Base+0x710>
   23fec:	ldr	r3, [r4, r3]
   23ff0:	str	r3, [r0, #124]	; 0x7c
   23ff4:	ldr	r3, [pc, #1036]	; 24408 <myhtml_tokenizer_state_init@@Base+0x714>
   23ff8:	ldr	r3, [r4, r3]
   23ffc:	str	r3, [r0, #128]	; 0x80
   24000:	ldr	r3, [pc, #1028]	; 2440c <myhtml_tokenizer_state_init@@Base+0x718>
   24004:	ldr	r3, [r4, r3]
   24008:	str	r3, [r0, #276]	; 0x114
   2400c:	ldr	r3, [pc, #1020]	; 24410 <myhtml_tokenizer_state_init@@Base+0x71c>
   24010:	ldr	r3, [r4, r3]
   24014:	str	r3, [r0, #280]	; 0x118
   24018:	ldr	r3, [pc, #1012]	; 24414 <myhtml_tokenizer_state_init@@Base+0x720>
   2401c:	ldr	r3, [r4, r3]
   24020:	str	r3, [r0, #308]	; 0x134
   24024:	ldr	r3, [pc, #1004]	; 24418 <myhtml_tokenizer_state_init@@Base+0x724>
   24028:	ldr	r3, [r4, r3]
   2402c:	str	r3, [r0, #316]	; 0x13c
   24030:	ldr	r3, [pc, #996]	; 2441c <myhtml_tokenizer_state_init@@Base+0x728>
   24034:	ldr	r3, [r4, r3]
   24038:	str	r3, [r0, #312]	; 0x138
   2403c:	ldr	r3, [pc, #988]	; 24420 <myhtml_tokenizer_state_init@@Base+0x72c>
   24040:	ldr	r3, [r4, r3]
   24044:	str	r3, [r0, #448]	; 0x1c0
   24048:	ldr	r3, [pc, #980]	; 24424 <myhtml_tokenizer_state_init@@Base+0x730>
   2404c:	ldr	r3, [r4, r3]
   24050:	str	r3, [r0, #456]	; 0x1c8
   24054:	ldr	r3, [pc, #972]	; 24428 <myhtml_tokenizer_state_init@@Base+0x734>
   24058:	ldr	r3, [r4, r3]
   2405c:	str	r3, [r0, #412]	; 0x19c
   24060:	ldr	r3, [pc, #964]	; 2442c <myhtml_tokenizer_state_init@@Base+0x738>
   24064:	ldr	r3, [r4, r3]
   24068:	str	r3, [r0, #416]	; 0x1a0
   2406c:	ldr	r3, [pc, #956]	; 24430 <myhtml_tokenizer_state_init@@Base+0x73c>
   24070:	ldr	r3, [r4, r3]
   24074:	str	r3, [r0, #420]	; 0x1a4
   24078:	ldr	r3, [pc, #948]	; 24434 <myhtml_tokenizer_state_init@@Base+0x740>
   2407c:	ldr	r3, [r4, r3]
   24080:	str	r3, [r0, #424]	; 0x1a8
   24084:	ldr	r3, [pc, #940]	; 24438 <myhtml_tokenizer_state_init@@Base+0x744>
   24088:	ldr	r3, [r4, r3]
   2408c:	str	r3, [r0, #428]	; 0x1ac
   24090:	ldr	r3, [pc, #932]	; 2443c <myhtml_tokenizer_state_init@@Base+0x748>
   24094:	ldr	r3, [r4, r3]
   24098:	str	r3, [r0, #432]	; 0x1b0
   2409c:	ldr	r3, [pc, #924]	; 24440 <myhtml_tokenizer_state_init@@Base+0x74c>
   240a0:	ldr	r3, [r4, r3]
   240a4:	str	r3, [r0, #436]	; 0x1b4
   240a8:	ldr	r3, [pc, #916]	; 24444 <myhtml_tokenizer_state_init@@Base+0x750>
   240ac:	ldr	r3, [r4, r3]
   240b0:	str	r3, [r0, #444]	; 0x1bc
   240b4:	ldr	r3, [pc, #908]	; 24448 <myhtml_tokenizer_state_init@@Base+0x754>
   240b8:	ldr	r3, [r4, r3]
   240bc:	str	r3, [r0, #460]	; 0x1cc
   240c0:	ldr	r3, [pc, #900]	; 2444c <myhtml_tokenizer_state_init@@Base+0x758>
   240c4:	ldr	r3, [r4, r3]
   240c8:	str	r3, [r0, #464]	; 0x1d0
   240cc:	ldr	r3, [pc, #892]	; 24450 <myhtml_tokenizer_state_init@@Base+0x75c>
   240d0:	ldr	r3, [r4, r3]
   240d4:	str	r3, [r0, #468]	; 0x1d4
   240d8:	ldr	r3, [pc, #884]	; 24454 <myhtml_tokenizer_state_init@@Base+0x760>
   240dc:	ldr	r3, [r4, r3]
   240e0:	str	r3, [r0, #476]	; 0x1dc
   240e4:	ldr	r3, [pc, #876]	; 24458 <myhtml_tokenizer_state_init@@Base+0x764>
   240e8:	ldr	r3, [r4, r3]
   240ec:	str	r3, [r0, #472]	; 0x1d8
   240f0:	ldr	r3, [pc, #868]	; 2445c <myhtml_tokenizer_state_init@@Base+0x768>
   240f4:	ldr	r3, [r4, r3]
   240f8:	str	r3, [r0, #480]	; 0x1e0
   240fc:	ldr	r3, [pc, #860]	; 24460 <myhtml_tokenizer_state_init@@Base+0x76c>
   24100:	ldr	r3, [r4, r3]
   24104:	str	r3, [r0, #452]	; 0x1c4
   24108:	ldr	r3, [pc, #852]	; 24464 <myhtml_tokenizer_state_init@@Base+0x770>
   2410c:	ldr	r3, [r4, r3]
   24110:	str	r3, [r0, #548]	; 0x224
   24114:	ldr	r3, [pc, #844]	; 24468 <myhtml_tokenizer_state_init@@Base+0x774>
   24118:	ldr	r3, [r4, r3]
   2411c:	str	r3, [r0, #288]	; 0x120
   24120:	ldr	r3, [pc, #836]	; 2446c <myhtml_tokenizer_state_init@@Base+0x778>
   24124:	ldr	r3, [r4, r3]
   24128:	str	r3, [r0, #320]	; 0x140
   2412c:	ldr	r3, [pc, #828]	; 24470 <myhtml_tokenizer_state_init@@Base+0x77c>
   24130:	ldr	r3, [r4, r3]
   24134:	str	r3, [r0, #324]	; 0x144
   24138:	ldr	r3, [pc, #820]	; 24474 <myhtml_tokenizer_state_init@@Base+0x780>
   2413c:	ldr	r3, [r4, r3]
   24140:	str	r3, [r0, #328]	; 0x148
   24144:	ldr	r3, [pc, #812]	; 24478 <myhtml_tokenizer_state_init@@Base+0x784>
   24148:	ldr	r3, [r4, r3]
   2414c:	str	r3, [r0, #296]	; 0x128
   24150:	ldr	r3, [pc, #804]	; 2447c <myhtml_tokenizer_state_init@@Base+0x788>
   24154:	ldr	r3, [r4, r3]
   24158:	str	r3, [r0, #332]	; 0x14c
   2415c:	ldr	r3, [pc, #796]	; 24480 <myhtml_tokenizer_state_init@@Base+0x78c>
   24160:	ldr	r3, [r4, r3]
   24164:	str	r3, [r0, #336]	; 0x150
   24168:	ldr	r3, [pc, #788]	; 24484 <myhtml_tokenizer_state_init@@Base+0x790>
   2416c:	ldr	r3, [r4, r3]
   24170:	str	r3, [r0, #340]	; 0x154
   24174:	ldr	r3, [pc, #780]	; 24488 <myhtml_tokenizer_state_init@@Base+0x794>
   24178:	ldr	r3, [r4, r3]
   2417c:	str	r3, [r0, #304]	; 0x130
   24180:	ldr	r3, [pc, #772]	; 2448c <myhtml_tokenizer_state_init@@Base+0x798>
   24184:	ldr	r3, [r4, r3]
   24188:	str	r3, [r0, #484]	; 0x1e4
   2418c:	ldr	r3, [pc, #764]	; 24490 <myhtml_tokenizer_state_init@@Base+0x79c>
   24190:	ldr	r3, [r4, r3]
   24194:	str	r3, [r0, #488]	; 0x1e8
   24198:	ldr	r3, [pc, #756]	; 24494 <myhtml_tokenizer_state_init@@Base+0x7a0>
   2419c:	ldr	r3, [r4, r3]
   241a0:	str	r3, [r0, #492]	; 0x1ec
   241a4:	ldr	r3, [pc, #748]	; 24498 <myhtml_tokenizer_state_init@@Base+0x7a4>
   241a8:	ldr	r3, [r4, r3]
   241ac:	str	r3, [r0, #496]	; 0x1f0
   241b0:	ldr	r3, [pc, #740]	; 2449c <myhtml_tokenizer_state_init@@Base+0x7a8>
   241b4:	ldr	r3, [r4, r3]
   241b8:	str	r3, [r0, #552]	; 0x228
   241bc:	ldr	r3, [pc, #732]	; 244a0 <myhtml_tokenizer_state_init@@Base+0x7ac>
   241c0:	ldr	r3, [r4, r3]
   241c4:	str	r3, [r0, #504]	; 0x1f8
   241c8:	ldr	r3, [pc, #724]	; 244a4 <myhtml_tokenizer_state_init@@Base+0x7b0>
   241cc:	ldr	r3, [r4, r3]
   241d0:	str	r3, [r0, #508]	; 0x1fc
   241d4:	ldr	r3, [pc, #716]	; 244a8 <myhtml_tokenizer_state_init@@Base+0x7b4>
   241d8:	ldr	r3, [r4, r3]
   241dc:	str	r3, [r0, #512]	; 0x200
   241e0:	ldr	r3, [pc, #708]	; 244ac <myhtml_tokenizer_state_init@@Base+0x7b8>
   241e4:	ldr	r3, [r4, r3]
   241e8:	str	r3, [r0, #516]	; 0x204
   241ec:	ldr	r3, [pc, #700]	; 244b0 <myhtml_tokenizer_state_init@@Base+0x7bc>
   241f0:	ldr	r3, [r4, r3]
   241f4:	str	r3, [r0, #532]	; 0x214
   241f8:	ldr	r3, [pc, #692]	; 244b4 <myhtml_tokenizer_state_init@@Base+0x7c0>
   241fc:	ldr	r3, [r4, r3]
   24200:	str	r3, [r0, #536]	; 0x218
   24204:	ldr	r3, [pc, #684]	; 244b8 <myhtml_tokenizer_state_init@@Base+0x7c4>
   24208:	ldr	r3, [r4, r3]
   2420c:	str	r3, [r0, #540]	; 0x21c
   24210:	ldr	r3, [pc, #676]	; 244bc <myhtml_tokenizer_state_init@@Base+0x7c8>
   24214:	ldr	r3, [r4, r3]
   24218:	str	r3, [r0, #544]	; 0x220
   2421c:	ldr	r3, [pc, #668]	; 244c0 <myhtml_tokenizer_state_init@@Base+0x7cc>
   24220:	ldr	r3, [r4, r3]
   24224:	str	r3, [r0, #300]	; 0x12c
   24228:	ldr	r3, [pc, #660]	; 244c4 <myhtml_tokenizer_state_init@@Base+0x7d0>
   2422c:	ldr	r3, [r4, r3]
   24230:	str	r3, [r0, #344]	; 0x158
   24234:	ldr	r3, [pc, #652]	; 244c8 <myhtml_tokenizer_state_init@@Base+0x7d4>
   24238:	ldr	r3, [r4, r3]
   2423c:	str	r3, [r0, #348]	; 0x15c
   24240:	ldr	r3, [pc, #644]	; 244cc <myhtml_tokenizer_state_init@@Base+0x7d8>
   24244:	ldr	r3, [r4, r3]
   24248:	str	r3, [r0, #352]	; 0x160
   2424c:	ldr	r3, [pc, #636]	; 244d0 <myhtml_tokenizer_state_init@@Base+0x7dc>
   24250:	ldr	r3, [r4, r3]
   24254:	str	r3, [r0, #356]	; 0x164
   24258:	ldr	r3, [pc, #628]	; 244d4 <myhtml_tokenizer_state_init@@Base+0x7e0>
   2425c:	ldr	r3, [r4, r3]
   24260:	str	r3, [r0, #360]	; 0x168
   24264:	ldr	r3, [pc, #620]	; 244d8 <myhtml_tokenizer_state_init@@Base+0x7e4>
   24268:	ldr	r3, [r4, r3]
   2426c:	str	r3, [r0, #364]	; 0x16c
   24270:	ldr	r3, [pc, #612]	; 244dc <myhtml_tokenizer_state_init@@Base+0x7e8>
   24274:	ldr	r3, [r4, r3]
   24278:	str	r3, [r0, #368]	; 0x170
   2427c:	ldr	r3, [pc, #604]	; 244e0 <myhtml_tokenizer_state_init@@Base+0x7ec>
   24280:	ldr	r3, [r4, r3]
   24284:	str	r3, [r0, #372]	; 0x174
   24288:	ldr	r3, [pc, #596]	; 244e4 <myhtml_tokenizer_state_init@@Base+0x7f0>
   2428c:	ldr	r3, [r4, r3]
   24290:	str	r3, [r0, #376]	; 0x178
   24294:	ldr	r3, [pc, #588]	; 244e8 <myhtml_tokenizer_state_init@@Base+0x7f4>
   24298:	ldr	r3, [r4, r3]
   2429c:	str	r3, [r0, #380]	; 0x17c
   242a0:	ldr	r3, [pc, #580]	; 244ec <myhtml_tokenizer_state_init@@Base+0x7f8>
   242a4:	ldr	r3, [r4, r3]
   242a8:	str	r3, [r0, #384]	; 0x180
   242ac:	ldr	r3, [pc, #572]	; 244f0 <myhtml_tokenizer_state_init@@Base+0x7fc>
   242b0:	ldr	r3, [r4, r3]
   242b4:	str	r3, [r0, #388]	; 0x184
   242b8:	ldr	r3, [pc, #564]	; 244f4 <myhtml_tokenizer_state_init@@Base+0x800>
   242bc:	ldr	r3, [r4, r3]
   242c0:	str	r3, [r0, #392]	; 0x188
   242c4:	ldr	r3, [pc, #556]	; 244f8 <myhtml_tokenizer_state_init@@Base+0x804>
   242c8:	ldr	r3, [r4, r3]
   242cc:	str	r3, [r0, #396]	; 0x18c
   242d0:	ldr	r3, [pc, #548]	; 244fc <myhtml_tokenizer_state_init@@Base+0x808>
   242d4:	ldr	r3, [r4, r3]
   242d8:	str	r3, [r0, #400]	; 0x190
   242dc:	ldr	r3, [pc, #540]	; 24500 <myhtml_tokenizer_state_init@@Base+0x80c>
   242e0:	ldr	r3, [r4, r3]
   242e4:	str	r3, [r0, #404]	; 0x194
   242e8:	ldr	r3, [pc, #532]	; 24504 <myhtml_tokenizer_state_init@@Base+0x810>
   242ec:	ldr	r3, [r4, r3]
   242f0:	str	r3, [r0, #408]	; 0x198
   242f4:	ldr	r3, [pc, #524]	; 24508 <myhtml_tokenizer_state_init@@Base+0x814>
   242f8:	ldr	r3, [r4, r3]
   242fc:	str	r3, [r0, #556]	; 0x22c
   24300:	mov	r0, #0
   24304:	pop	{r4, r5, r6, pc}
   24308:	movw	r0, #37164	; 0x912c
   2430c:	pop	{r4, r5, r6, pc}
   24310:	andeq	ip, lr, r8, ror #5
   24314:	andeq	r0, r0, r8, lsl #15
   24318:	andeq	r0, r0, r8, lsr #18
   2431c:	andeq	r0, r0, r4, ror #17
   24320:	andeq	r0, r0, r0, asr r9
   24324:	andeq	r0, r0, r8, ror r7
   24328:	andeq	r0, r0, r8, ror #15
   2432c:	andeq	r0, r0, r4, asr #17
   24330:	andeq	r0, r0, r0, lsl #14
   24334:	andeq	r0, r0, r0, lsr r9
   24338:	andeq	r0, r0, ip, ror #18
   2433c:	andeq	r0, r0, r8, lsl r9
   24340:	andeq	r0, r0, r4, lsl #18
   24344:	andeq	r0, r0, r8, asr #18
   24348:	andeq	r0, r0, r4, lsr r8
   2434c:	andeq	r0, r0, r0, ror #18
   24350:	andeq	r0, r0, r4, asr r8
   24354:	andeq	r0, r0, r0, lsl #18
   24358:	andeq	r0, r0, r4, lsl #14
   2435c:	andeq	r0, r0, r8, lsr #15
   24360:	andeq	r0, r0, ip, lsl #17
   24364:	muleq	r0, r0, r7
   24368:			; <UNDEFINED> instruction: 0x000009bc
   2436c:	muleq	r0, ip, r8
   24370:	andeq	r0, r0, r0, asr #15
   24374:	andeq	r0, r0, r4, lsr #14
   24378:	andeq	r0, r0, r4, asr #15
   2437c:	andeq	r0, r0, r4, ror r7
   24380:	andeq	r0, r0, r4, ror #15
   24384:	andeq	r0, r0, r0, asr r7
   24388:	andeq	r0, r0, r4, asr r9
   2438c:	andeq	r0, r0, r4, lsr #19
   24390:	andeq	r0, r0, r4, lsl #16
   24394:	andeq	r0, r0, ip, lsl #14
   24398:	andeq	r0, r0, ip, asr #16
   2439c:	andeq	r0, r0, r4, lsl #19
   243a0:	andeq	r0, r0, r4, ror r8
   243a4:	andeq	r0, r0, ip, lsr #15
   243a8:	andeq	r0, r0, r4, ror #16
   243ac:	andeq	r0, r0, r8, ror r8
   243b0:			; <UNDEFINED> instruction: 0x000009b4
   243b4:	andeq	r0, r0, r4, ror #14
   243b8:	andeq	r0, r0, r4, lsl r8
   243bc:			; <UNDEFINED> instruction: 0x000007b8
   243c0:	andeq	r0, r0, r4, lsr #16
   243c4:			; <UNDEFINED> instruction: 0x000007b4
   243c8:	andeq	r0, r0, ip, lsl r8
   243cc:	ldrdeq	r0, [r0], -r8
   243d0:	andeq	r0, r0, ip, asr r9
   243d4:	strdeq	r0, [r0], -r4
   243d8:	andeq	r0, r0, r0, asr r8
   243dc:	strdeq	r0, [r0], -ip
   243e0:	andeq	r0, r0, r8, lsr #16
   243e4:	andeq	r0, r0, r8, asr #16
   243e8:	muleq	r0, r0, r9
   243ec:	andeq	r0, r0, ip, lsl #15
   243f0:	muleq	r0, r8, r7
   243f4:	andeq	r0, r0, r0, lsl r8
   243f8:	andeq	r0, r0, r0, asr #18
   243fc:	andeq	r0, r0, r0, lsr r7
   24400:	andeq	r0, r0, r8, asr #15
   24404:			; <UNDEFINED> instruction: 0x000007bc
   24408:	andeq	r0, r0, r8, lsl #18
   2440c:	muleq	r0, ip, r7
   24410:	andeq	r0, r0, r0, ror #15
   24414:	andeq	r0, r0, r8, lsl #16
   24418:	andeq	r0, r0, r8, lsl #19
   2441c:	andeq	r0, r0, ip, lsl #19
   24420:	andeq	r0, r0, ip, asr #17
   24424:	andeq	r0, r0, r8, ror #17
   24428:	andeq	r0, r0, ip, ror #17
   2442c:	andeq	r0, r0, r4, lsr r9
   24430:	andeq	r0, r0, r4, asr r7
   24434:	andeq	r0, r0, r8, lsr #17
   24438:	andeq	r0, r0, ip, lsr #16
   2443c:	strdeq	r0, [r0], -r4
   24440:	ldrdeq	r0, [r0], -ip
   24444:			; <UNDEFINED> instruction: 0x000008bc
   24448:	andeq	r0, r0, r4, ror #18
   2444c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24450:	muleq	r0, r8, r8
   24454:	andeq	r0, r0, r4, lsl #15
   24458:	andeq	r0, r0, r0, lsr #19
   2445c:	andeq	r0, r0, ip, ror r7
   24460:	andeq	r0, r0, ip, asr r8
   24464:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24468:	andeq	r0, r0, r4, asr #18
   2446c:	muleq	r0, r4, r7
   24470:	ldrdeq	r0, [r0], -r8
   24474:			; <UNDEFINED> instruction: 0x000008b4
   24478:	andeq	r0, r0, ip, ror #16
   2447c:			; <UNDEFINED> instruction: 0x000009b8
   24480:	andeq	r0, r0, r0, ror #17
   24484:	andeq	r0, r0, ip, lsr #17
   24488:	andeq	r0, r0, r0, asr #16
   2448c:	andeq	r0, r0, r4, lsl r7
   24490:	andeq	r0, r0, r0, lsl r9
   24494:	andeq	r0, r0, r0, lsr #14
   24498:	andeq	r0, r0, r4, lsr r7
   2449c:	andeq	r0, r0, r0, asr #14
   244a0:	andeq	r0, r0, r4, lsl #17
   244a4:	andeq	r0, r0, ip, lsr r9
   244a8:	andeq	r0, r0, r0, lsl #15
   244ac:	andeq	r0, r0, r8, lsr #19
   244b0:	andeq	r0, r0, ip, ror r9
   244b4:			; <UNDEFINED> instruction: 0x000008b0
   244b8:	andeq	r0, r0, r4, ror r9
   244bc:	andeq	r0, r0, r8, asr r8
   244c0:			; <UNDEFINED> instruction: 0x000007b0
   244c4:	andeq	r0, r0, r8, lsl #17
   244c8:	ldrdeq	r0, [r0], -r4
   244cc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244d0:	andeq	r0, r0, ip, lsr #18
   244d4:	andeq	r0, r0, ip, lsl #16
   244d8:	andeq	r0, r0, r8, lsl #14
   244dc:	muleq	r0, r8, r9
   244e0:	andeq	r0, r0, r8, asr #17
   244e4:			; <UNDEFINED> instruction: 0x000009b0
   244e8:	andeq	r0, r0, r8, asr #14
   244ec:	andeq	r0, r0, r0, asr #17
   244f0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244f4:	andeq	r0, r0, ip, lsr r8
   244f8:	andeq	r0, r0, r8, lsr r9
   244fc:	andeq	r0, r0, r8, lsr r8
   24500:			; <UNDEFINED> instruction: 0x000008b8
   24504:	andeq	r0, r0, ip, asr #15
   24508:	andeq	r0, r0, r0, lsl #16

0002450c <myhtml_tokenizer_state_destroy@@Base>:
   2450c:	ldr	r0, [r0, #24]
   24510:	cmp	r0, #0
   24514:	bxeq	lr
   24518:	b	10d60 <mycore_free@plt>

0002451c <myhtml_tokenizer_state_doctype@@Base>:
   2451c:	mov	r2, #52	; 0x34
   24520:	str	r2, [r0, #160]	; 0xa0
   24524:	mov	r0, r3
   24528:	bx	lr

0002452c <myhtml_tokenizer_state_before_doctype_name@@Base>:
   2452c:	push	{r4, r5, r6, lr}
   24530:	mov	r4, r3
   24534:	mov	r5, r0
   24538:	ldrb	r3, [r2, r3]
   2453c:	ldr	ip, [sp, #16]
   24540:	sub	r3, r3, #9
   24544:	uxtb	r3, r3
   24548:	cmp	r3, #23
   2454c:	bhi	24560 <myhtml_tokenizer_state_before_doctype_name@@Base+0x34>
   24550:	ldr	r0, [pc, #272]	; 24668 <myhtml_tokenizer_state_before_doctype_name@@Base+0x13c>
   24554:	mvn	r3, r0, lsr r3
   24558:	tst	r3, #1
   2455c:	beq	24574 <myhtml_tokenizer_state_before_doctype_name@@Base+0x48>
   24560:	cmp	r4, ip
   24564:	bcc	2459c <myhtml_tokenizer_state_before_doctype_name@@Base+0x70>
   24568:	mov	r0, r4
   2456c:	pop	{r4, r5, r6, pc}
   24570:	add	r4, r4, #1
   24574:	cmp	r4, ip
   24578:	bcs	24568 <myhtml_tokenizer_state_before_doctype_name@@Base+0x3c>
   2457c:	ldrb	r3, [r2, r4]
   24580:	sub	r3, r3, #9
   24584:	uxtb	r3, r3
   24588:	cmp	r3, #23
   2458c:	bhi	2459c <myhtml_tokenizer_state_before_doctype_name@@Base+0x70>
   24590:	mvn	r3, r0, lsr r3
   24594:	tst	r3, #1
   24598:	beq	24570 <myhtml_tokenizer_state_before_doctype_name@@Base+0x44>
   2459c:	ldrb	r3, [r2, r4]
   245a0:	ldr	r0, [r5, #192]	; 0xc0
   245a4:	cmp	r3, #62	; 0x3e
   245a8:	bne	24610 <myhtml_tokenizer_state_before_doctype_name@@Base+0xe4>
   245ac:	mov	r3, #1
   245b0:	mov	r2, r1
   245b4:	add	r4, r4, r3
   245b8:	str	r3, [r5, #176]	; 0xb0
   245bc:	ldr	r3, [r1, #32]
   245c0:	sub	r0, r0, r3
   245c4:	add	r0, r0, r4
   245c8:	str	r0, [r1, #36]	; 0x24
   245cc:	mov	r1, r4
   245d0:	mov	r0, r5
   245d4:	bl	ffc8 <myhtml_queue_add@plt>
   245d8:	subs	r6, r0, #0
   245dc:	beq	245f0 <myhtml_tokenizer_state_before_doctype_name@@Base+0xc4>
   245e0:	mov	r3, #69	; 0x45
   245e4:	mov	r4, #0
   245e8:	str	r3, [r5, #160]	; 0xa0
   245ec:	b	24568 <myhtml_tokenizer_state_before_doctype_name@@Base+0x3c>
   245f0:	ldr	r0, [r5, #8]
   245f4:	ldr	r1, [r0, #16]
   245f8:	bl	10898 <myhtml_token_attr_create@plt>
   245fc:	cmp	r0, #0
   24600:	str	r0, [r5, #56]	; 0x38
   24604:	strne	r6, [r5, #160]	; 0xa0
   24608:	bne	24568 <myhtml_tokenizer_state_before_doctype_name@@Base+0x3c>
   2460c:	b	245e0 <myhtml_tokenizer_state_before_doctype_name@@Base+0xb4>
   24610:	ldr	r2, [r1, #40]	; 0x28
   24614:	ldr	r3, [r5, #56]	; 0x38
   24618:	cmp	r2, #0
   2461c:	bne	24648 <myhtml_tokenizer_state_before_doctype_name@@Base+0x11c>
   24620:	str	r3, [r1, #40]	; 0x28
   24624:	str	r3, [r1, #44]	; 0x2c
   24628:	str	r3, [r5, #56]	; 0x38
   2462c:	str	r2, [r3]
   24630:	str	r2, [r3, #4]
   24634:	add	r0, r0, r4
   24638:	str	r0, [r3, #48]	; 0x30
   2463c:	mov	r3, #53	; 0x35
   24640:	str	r3, [r5, #160]	; 0xa0
   24644:	b	24568 <myhtml_tokenizer_state_before_doctype_name@@Base+0x3c>
   24648:	ldr	r2, [r1, #44]	; 0x2c
   2464c:	str	r3, [r2]
   24650:	str	r2, [r3, #4]
   24654:	mov	r2, #0
   24658:	str	r3, [r1, #44]	; 0x2c
   2465c:	str	r2, [r3]
   24660:	str	r3, [r5, #56]	; 0x38
   24664:	b	24634 <myhtml_tokenizer_state_before_doctype_name@@Base+0x108>
   24668:	addeq	r0, r0, fp, lsl r0

0002466c <myhtml_tokenizer_state_doctype_name@@Base>:
   2466c:	push	{r4, r5, r6, lr}
   24670:	mov	r5, r0
   24674:	mov	r4, r3
   24678:	ldr	ip, [pc, #240]	; 24770 <myhtml_tokenizer_state_doctype_name@@Base+0x104>
   2467c:	ldr	r0, [sp, #16]
   24680:	cmp	r4, r0
   24684:	bcs	246e4 <myhtml_tokenizer_state_doctype_name@@Base+0x78>
   24688:	ldrb	r3, [r2, r4]
   2468c:	cmp	r3, #62	; 0x3e
   24690:	bne	2470c <myhtml_tokenizer_state_doctype_name@@Base+0xa0>
   24694:	ldr	r0, [r5, #56]	; 0x38
   24698:	ldr	r3, [r5, #192]	; 0xc0
   2469c:	ldr	r2, [r0, #48]	; 0x30
   246a0:	sub	r2, r3, r2
   246a4:	add	r2, r2, r4
   246a8:	add	r4, r4, #1
   246ac:	str	r2, [r0, #52]	; 0x34
   246b0:	mov	r0, r5
   246b4:	ldr	r2, [r1, #32]
   246b8:	sub	r3, r3, r2
   246bc:	mov	r2, r1
   246c0:	add	r3, r3, r4
   246c4:	str	r3, [r1, #36]	; 0x24
   246c8:	mov	r1, r4
   246cc:	bl	ffc8 <myhtml_queue_add@plt>
   246d0:	subs	r6, r0, #0
   246d4:	beq	246ec <myhtml_tokenizer_state_doctype_name@@Base+0x80>
   246d8:	mov	r3, #69	; 0x45
   246dc:	mov	r4, #0
   246e0:	str	r3, [r5, #160]	; 0xa0
   246e4:	mov	r0, r4
   246e8:	pop	{r4, r5, r6, pc}
   246ec:	ldr	r0, [r5, #8]
   246f0:	ldr	r1, [r0, #16]
   246f4:	bl	10898 <myhtml_token_attr_create@plt>
   246f8:	cmp	r0, #0
   246fc:	str	r0, [r5, #56]	; 0x38
   24700:	strne	r6, [r5, #160]	; 0xa0
   24704:	bne	246e4 <myhtml_tokenizer_state_doctype_name@@Base+0x78>
   24708:	b	246d8 <myhtml_tokenizer_state_doctype_name@@Base+0x6c>
   2470c:	sub	r3, r3, #9
   24710:	uxtb	r3, r3
   24714:	cmp	r3, #23
   24718:	bhi	24768 <myhtml_tokenizer_state_doctype_name@@Base+0xfc>
   2471c:	mvn	r3, ip, lsr r3
   24720:	tst	r3, #1
   24724:	bne	24768 <myhtml_tokenizer_state_doctype_name@@Base+0xfc>
   24728:	ldr	r0, [r5, #8]
   2472c:	ldr	r2, [r5, #56]	; 0x38
   24730:	ldr	r3, [r5, #192]	; 0xc0
   24734:	ldr	r1, [r2, #48]	; 0x30
   24738:	sub	r3, r3, r1
   2473c:	ldr	r1, [r0, #16]
   24740:	add	r3, r3, r4
   24744:	str	r3, [r2, #52]	; 0x34
   24748:	bl	10898 <myhtml_token_attr_create@plt>
   2474c:	cmp	r0, #0
   24750:	str	r0, [r5, #56]	; 0x38
   24754:	movne	r3, #54	; 0x36
   24758:	addne	r4, r4, #1
   2475c:	strne	r3, [r5, #160]	; 0xa0
   24760:	bne	246e4 <myhtml_tokenizer_state_doctype_name@@Base+0x78>
   24764:	b	246d8 <myhtml_tokenizer_state_doctype_name@@Base+0x6c>
   24768:	add	r4, r4, #1
   2476c:	b	24680 <myhtml_tokenizer_state_doctype_name@@Base+0x14>
   24770:	addeq	r0, r0, fp, lsl r0

00024774 <myhtml_tokenizer_state_after_doctype_name@@Base>:
   24774:	push	{r4, r5, r6, lr}
   24778:	mov	r4, r3
   2477c:	mov	r5, r0
   24780:	ldrb	r3, [r2, r3]
   24784:	ldr	ip, [sp, #16]
   24788:	sub	r3, r3, #9
   2478c:	uxtb	r3, r3
   24790:	cmp	r3, #23
   24794:	bhi	247a8 <myhtml_tokenizer_state_after_doctype_name@@Base+0x34>
   24798:	ldr	r0, [pc, #164]	; 24844 <myhtml_tokenizer_state_after_doctype_name@@Base+0xd0>
   2479c:	mvn	r3, r0, lsr r3
   247a0:	tst	r3, #1
   247a4:	beq	247bc <myhtml_tokenizer_state_after_doctype_name@@Base+0x48>
   247a8:	cmp	r4, ip
   247ac:	bcc	247e4 <myhtml_tokenizer_state_after_doctype_name@@Base+0x70>
   247b0:	mov	r0, r4
   247b4:	pop	{r4, r5, r6, pc}
   247b8:	add	r4, r4, #1
   247bc:	cmp	r4, ip
   247c0:	bcs	247b0 <myhtml_tokenizer_state_after_doctype_name@@Base+0x3c>
   247c4:	ldrb	r3, [r2, r4]
   247c8:	sub	r3, r3, #9
   247cc:	uxtb	r3, r3
   247d0:	cmp	r3, #23
   247d4:	bhi	247e4 <myhtml_tokenizer_state_after_doctype_name@@Base+0x70>
   247d8:	mvn	r3, r0, lsr r3
   247dc:	tst	r3, #1
   247e0:	beq	247b8 <myhtml_tokenizer_state_after_doctype_name@@Base+0x44>
   247e4:	ldrb	r2, [r2, r4]
   247e8:	ldr	r3, [r5, #192]	; 0xc0
   247ec:	cmp	r2, #62	; 0x3e
   247f0:	bne	24830 <myhtml_tokenizer_state_after_doctype_name@@Base+0xbc>
   247f4:	ldr	r2, [r1, #32]
   247f8:	add	r4, r4, #1
   247fc:	mov	r0, r5
   24800:	sub	r3, r3, r2
   24804:	mov	r2, r1
   24808:	add	r3, r3, r4
   2480c:	str	r3, [r1, #36]	; 0x24
   24810:	mov	r1, r4
   24814:	bl	ffc8 <myhtml_queue_add@plt>
   24818:	cmp	r0, #0
   2481c:	movne	r3, #69	; 0x45
   24820:	movne	r4, #0
   24824:	streq	r0, [r5, #160]	; 0xa0
   24828:	strne	r3, [r5, #160]	; 0xa0
   2482c:	b	247b0 <myhtml_tokenizer_state_after_doctype_name@@Base+0x3c>
   24830:	add	r3, r3, r4
   24834:	str	r3, [r1, #12]
   24838:	mov	r3, #68	; 0x44
   2483c:	str	r3, [r5, #160]	; 0xa0
   24840:	b	247b0 <myhtml_tokenizer_state_after_doctype_name@@Base+0x3c>
   24844:	addeq	r0, r0, fp, lsl r0

00024848 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base>:
   24848:	push	{r4, r5, r6, r7, r8, lr}
   2484c:	ldr	lr, [r1, #12]
   24850:	ldr	r6, [sp, #24]
   24854:	ldr	ip, [r0, #192]	; 0xc0
   24858:	add	r5, lr, #6
   2485c:	add	ip, r6, ip
   24860:	cmp	r5, ip
   24864:	bhi	248f8 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xb0>
   24868:	mov	r2, #6
   2486c:	mov	r5, r1
   24870:	mov	r1, lr
   24874:	mov	r6, r3
   24878:	mov	r4, r0
   2487c:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   24880:	ldr	r1, [pc, #332]	; 249d4 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x18c>
   24884:	mov	r2, #6
   24888:	mov	r7, r0
   2488c:	add	r1, pc, r1
   24890:	bl	10238 <mycore_strncasecmp@plt>
   24894:	cmp	r0, #0
   24898:	bne	2491c <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xd4>
   2489c:	ldr	r2, [r5, #40]	; 0x28
   248a0:	ldr	r3, [r4, #56]	; 0x38
   248a4:	cmp	r2, #0
   248a8:	bne	24900 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xb8>
   248ac:	str	r3, [r5, #40]	; 0x28
   248b0:	str	r3, [r5, #44]	; 0x2c
   248b4:	str	r3, [r4, #56]	; 0x38
   248b8:	str	r2, [r3]
   248bc:	str	r2, [r3, #4]
   248c0:	ldr	r0, [r4, #8]
   248c4:	ldr	r2, [r5, #12]
   248c8:	ldr	r1, [r0, #16]
   248cc:	str	r2, [r3, #56]	; 0x38
   248d0:	mov	r2, #6
   248d4:	str	r2, [r3, #60]	; 0x3c
   248d8:	bl	10898 <myhtml_token_attr_create@plt>
   248dc:	cmp	r0, #0
   248e0:	str	r0, [r4, #56]	; 0x38
   248e4:	movne	r3, #56	; 0x38
   248e8:	bne	24988 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x140>
   248ec:	mov	r3, #69	; 0x45
   248f0:	mov	r6, #0
   248f4:	str	r3, [r4, #160]	; 0xa0
   248f8:	mov	r0, r6
   248fc:	pop	{r4, r5, r6, r7, r8, pc}
   24900:	ldr	r2, [r5, #44]	; 0x2c
   24904:	str	r3, [r2]
   24908:	str	r2, [r3, #4]
   2490c:	str	r3, [r5, #44]	; 0x2c
   24910:	str	r0, [r3]
   24914:	str	r3, [r4, #56]	; 0x38
   24918:	b	248c0 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x78>
   2491c:	ldr	r1, [pc, #180]	; 249d8 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x190>
   24920:	mov	r2, #6
   24924:	mov	r0, r7
   24928:	add	r1, pc, r1
   2492c:	bl	10238 <mycore_strncasecmp@plt>
   24930:	cmp	r0, #0
   24934:	bne	249c0 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x178>
   24938:	ldr	r2, [r5, #40]	; 0x28
   2493c:	ldr	r3, [r4, #56]	; 0x38
   24940:	cmp	r2, #0
   24944:	bne	249a4 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x15c>
   24948:	str	r3, [r5, #40]	; 0x28
   2494c:	str	r3, [r5, #44]	; 0x2c
   24950:	str	r3, [r4, #56]	; 0x38
   24954:	str	r2, [r3]
   24958:	str	r2, [r3, #4]
   2495c:	ldr	r0, [r4, #8]
   24960:	ldr	r2, [r5, #12]
   24964:	ldr	r1, [r0, #16]
   24968:	str	r2, [r3, #56]	; 0x38
   2496c:	mov	r2, #6
   24970:	str	r2, [r3, #60]	; 0x3c
   24974:	bl	10898 <myhtml_token_attr_create@plt>
   24978:	cmp	r0, #0
   2497c:	str	r0, [r4, #56]	; 0x38
   24980:	beq	248ec <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xa4>
   24984:	mov	r3, #59	; 0x3b
   24988:	ldr	r2, [r5, #12]
   2498c:	str	r3, [r4, #160]	; 0xa0
   24990:	ldr	r3, [r4, #76]	; 0x4c
   24994:	add	r2, r2, #6
   24998:	ldr	r3, [r3, #12]
   2499c:	sub	r6, r2, r3
   249a0:	b	248f8 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xb0>
   249a4:	ldr	r2, [r5, #44]	; 0x2c
   249a8:	str	r3, [r2]
   249ac:	str	r2, [r3, #4]
   249b0:	str	r3, [r5, #44]	; 0x2c
   249b4:	str	r0, [r3]
   249b8:	str	r3, [r4, #56]	; 0x38
   249bc:	b	2495c <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x114>
   249c0:	mov	r3, #1
   249c4:	str	r3, [r4, #176]	; 0xb0
   249c8:	mov	r3, #66	; 0x42
   249cc:	str	r3, [r4, #160]	; 0xa0
   249d0:	b	248f8 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xb0>
   249d4:	andeq	r1, sp, r0, ror #25
   249d8:	andeq	r1, sp, r6, asr ip

000249dc <myhtml_tokenizer_state_before_doctype_public_identifier@@Base>:
   249dc:	push	{r4, r5, r6, lr}
   249e0:	mov	r5, r3
   249e4:	mov	r4, r0
   249e8:	ldrb	r3, [r2, r3]
   249ec:	ldr	ip, [sp, #16]
   249f0:	sub	r3, r3, #9
   249f4:	uxtb	r3, r3
   249f8:	cmp	r3, #23
   249fc:	bhi	24a7c <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xa0>
   24a00:	ldr	r0, [pc, #260]	; 24b0c <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x130>
   24a04:	mvn	r3, r0, lsr r3
   24a08:	mov	lr, r0
   24a0c:	tst	r3, #1
   24a10:	bne	24a7c <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xa0>
   24a14:	cmp	r5, ip
   24a18:	mov	r3, r5
   24a1c:	bcs	24b04 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x128>
   24a20:	ldrb	r0, [r2, r5]
   24a24:	sub	r0, r0, #9
   24a28:	uxtb	r0, r0
   24a2c:	cmp	r0, #23
   24a30:	bhi	24a44 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x68>
   24a34:	mvn	r0, lr, lsr r0
   24a38:	add	r5, r5, #1
   24a3c:	tst	r0, #1
   24a40:	beq	24a14 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x38>
   24a44:	ldrb	r2, [r2, r3]
   24a48:	add	r5, r3, #1
   24a4c:	cmp	r2, #34	; 0x22
   24a50:	bne	24a8c <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xb0>
   24a54:	ldr	r1, [r4, #56]	; 0x38
   24a58:	ldr	r2, [r4, #192]	; 0xc0
   24a5c:	add	r2, r2, #1
   24a60:	add	r3, r2, r3
   24a64:	str	r3, [r1, #56]	; 0x38
   24a68:	mov	r3, #0
   24a6c:	str	r3, [r1, #60]	; 0x3c
   24a70:	mov	r3, #57	; 0x39
   24a74:	str	r3, [r4, #160]	; 0xa0
   24a78:	b	24b04 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x128>
   24a7c:	cmp	r5, ip
   24a80:	bcs	24b04 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x128>
   24a84:	mov	r3, r5
   24a88:	b	24a44 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x68>
   24a8c:	cmp	r2, #39	; 0x27
   24a90:	bne	24ab8 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xdc>
   24a94:	ldr	r1, [r4, #56]	; 0x38
   24a98:	ldr	r2, [r4, #192]	; 0xc0
   24a9c:	add	r2, r2, #1
   24aa0:	add	r3, r2, r3
   24aa4:	str	r3, [r1, #56]	; 0x38
   24aa8:	mov	r3, #0
   24aac:	str	r3, [r1, #60]	; 0x3c
   24ab0:	mov	r3, #58	; 0x3a
   24ab4:	b	24a74 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x98>
   24ab8:	mov	r3, #1
   24abc:	cmp	r2, #62	; 0x3e
   24ac0:	str	r3, [r4, #176]	; 0xb0
   24ac4:	movne	r3, #66	; 0x42
   24ac8:	bne	24a74 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x98>
   24acc:	ldr	r2, [r1, #32]
   24ad0:	mov	r0, r4
   24ad4:	ldr	r3, [r4, #192]	; 0xc0
   24ad8:	sub	r3, r3, r2
   24adc:	mov	r2, r1
   24ae0:	add	r3, r3, r5
   24ae4:	str	r3, [r1, #36]	; 0x24
   24ae8:	mov	r1, r5
   24aec:	bl	ffc8 <myhtml_queue_add@plt>
   24af0:	cmp	r0, #0
   24af4:	movne	r3, #69	; 0x45
   24af8:	movne	r5, #0
   24afc:	streq	r0, [r4, #160]	; 0xa0
   24b00:	strne	r3, [r4, #160]	; 0xa0
   24b04:	mov	r0, r5
   24b08:	pop	{r4, r5, r6, pc}
   24b0c:	addeq	r0, r0, fp, lsl r0

00024b10 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base>:
   24b10:	push	{r4, r5, r6, lr}
   24b14:	mov	r4, r0
   24b18:	mov	r6, r1
   24b1c:	mov	r5, r3
   24b20:	ldrb	r0, [sp, #20]
   24b24:	ldr	r1, [sp, #16]
   24b28:	cmp	r5, r1
   24b2c:	bcs	24ba4 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x94>
   24b30:	ldrb	r3, [r2, r5]
   24b34:	cmp	r3, r0
   24b38:	bne	24bcc <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xbc>
   24b3c:	ldr	r3, [r4, #56]	; 0x38
   24b40:	ldr	r2, [r4, #192]	; 0xc0
   24b44:	ldr	r1, [r3, #56]	; 0x38
   24b48:	sub	r2, r2, r1
   24b4c:	add	r2, r2, r5
   24b50:	str	r2, [r3, #60]	; 0x3c
   24b54:	ldr	r2, [r6, #40]	; 0x28
   24b58:	cmp	r2, #0
   24b5c:	bne	24bac <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x9c>
   24b60:	str	r3, [r6, #40]	; 0x28
   24b64:	str	r3, [r6, #44]	; 0x2c
   24b68:	str	r3, [r4, #56]	; 0x38
   24b6c:	str	r2, [r3]
   24b70:	str	r2, [r3, #4]
   24b74:	ldr	r0, [r4, #8]
   24b78:	ldr	r1, [r0, #16]
   24b7c:	bl	10898 <myhtml_token_attr_create@plt>
   24b80:	cmp	r0, #0
   24b84:	str	r0, [r4, #56]	; 0x38
   24b88:	movne	r3, #59	; 0x3b
   24b8c:	addne	r5, r5, #1
   24b90:	strne	r3, [r4, #160]	; 0xa0
   24b94:	bne	24ba4 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x94>
   24b98:	mov	r3, #69	; 0x45
   24b9c:	mov	r5, #0
   24ba0:	str	r3, [r4, #160]	; 0xa0
   24ba4:	mov	r0, r5
   24ba8:	pop	{r4, r5, r6, pc}
   24bac:	ldr	r2, [r6, #44]	; 0x2c
   24bb0:	str	r3, [r2]
   24bb4:	str	r2, [r3, #4]
   24bb8:	mov	r2, #0
   24bbc:	str	r3, [r6, #44]	; 0x2c
   24bc0:	str	r2, [r3]
   24bc4:	str	r3, [r4, #56]	; 0x38
   24bc8:	b	24b74 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x64>
   24bcc:	cmp	r3, #62	; 0x3e
   24bd0:	bne	24c8c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x17c>
   24bd4:	mov	r3, #1
   24bd8:	ldr	r2, [r4, #192]	; 0xc0
   24bdc:	str	r3, [r4, #176]	; 0xb0
   24be0:	ldr	r3, [r4, #56]	; 0x38
   24be4:	add	r2, r5, r2
   24be8:	ldr	r1, [r3, #56]	; 0x38
   24bec:	cmp	r1, r2
   24bf0:	bcs	24c34 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x124>
   24bf4:	sub	r2, r2, r1
   24bf8:	str	r2, [r3, #60]	; 0x3c
   24bfc:	ldr	r2, [r6, #40]	; 0x28
   24c00:	cmp	r2, #0
   24c04:	bne	24c6c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x15c>
   24c08:	str	r3, [r6, #40]	; 0x28
   24c0c:	str	r3, [r6, #44]	; 0x2c
   24c10:	str	r3, [r4, #56]	; 0x38
   24c14:	str	r2, [r3]
   24c18:	str	r2, [r3, #4]
   24c1c:	ldr	r0, [r4, #8]
   24c20:	ldr	r1, [r0, #16]
   24c24:	bl	10898 <myhtml_token_attr_create@plt>
   24c28:	cmp	r0, #0
   24c2c:	str	r0, [r4, #56]	; 0x38
   24c30:	beq	24b98 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x88>
   24c34:	ldr	r2, [r6, #32]
   24c38:	add	r5, r5, #1
   24c3c:	mov	r0, r4
   24c40:	mov	r1, r5
   24c44:	ldr	r3, [r4, #192]	; 0xc0
   24c48:	sub	r3, r3, r2
   24c4c:	mov	r2, r6
   24c50:	add	r3, r3, r5
   24c54:	str	r3, [r6, #36]	; 0x24
   24c58:	bl	ffc8 <myhtml_queue_add@plt>
   24c5c:	cmp	r0, #0
   24c60:	streq	r0, [r4, #160]	; 0xa0
   24c64:	beq	24ba4 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x94>
   24c68:	b	24b98 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x88>
   24c6c:	ldr	r2, [r6, #44]	; 0x2c
   24c70:	str	r3, [r2]
   24c74:	str	r2, [r3, #4]
   24c78:	mov	r2, #0
   24c7c:	str	r3, [r6, #44]	; 0x2c
   24c80:	str	r2, [r3]
   24c84:	str	r3, [r4, #56]	; 0x38
   24c88:	b	24c1c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x10c>
   24c8c:	add	r5, r5, #1
   24c90:	b	24b28 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x18>

00024c94 <myhtml_tokenizer_state_doctype_public_identifier_double_quoted@@Base>:
   24c94:	mov	ip, #34	; 0x22
   24c98:	push	{r0, r1, r2, lr}
   24c9c:	str	ip, [sp, #4]
   24ca0:	ldr	ip, [sp, #16]
   24ca4:	str	ip, [sp]
   24ca8:	bl	1046c <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   24cac:	add	sp, sp, #12
   24cb0:	pop	{pc}		; (ldr pc, [sp], #4)

00024cb4 <myhtml_tokenizer_state_doctype_public_identifier_single_quoted@@Base>:
   24cb4:	mov	ip, #39	; 0x27
   24cb8:	push	{r0, r1, r2, lr}
   24cbc:	str	ip, [sp, #4]
   24cc0:	ldr	ip, [sp, #16]
   24cc4:	str	ip, [sp]
   24cc8:	bl	1046c <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   24ccc:	add	sp, sp, #12
   24cd0:	pop	{pc}		; (ldr pc, [sp], #4)

00024cd4 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base>:
   24cd4:	push	{r4, r5, r6, lr}
   24cd8:	mov	r4, r3
   24cdc:	mov	r5, r0
   24ce0:	ldrb	r3, [r2, r3]
   24ce4:	ldr	ip, [sp, #16]
   24ce8:	sub	r3, r3, #9
   24cec:	uxtb	r3, r3
   24cf0:	cmp	r3, #23
   24cf4:	bhi	24d08 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x34>
   24cf8:	ldr	r0, [pc, #260]	; 24e04 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x130>
   24cfc:	mvn	r3, r0, lsr r3
   24d00:	tst	r3, #1
   24d04:	beq	24d1c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x48>
   24d08:	cmp	r4, ip
   24d0c:	bcc	24d44 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x70>
   24d10:	mov	r0, r4
   24d14:	pop	{r4, r5, r6, pc}
   24d18:	add	r4, r4, #1
   24d1c:	cmp	r4, ip
   24d20:	bcs	24d10 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x3c>
   24d24:	ldrb	r3, [r2, r4]
   24d28:	sub	r3, r3, #9
   24d2c:	uxtb	r3, r3
   24d30:	cmp	r3, #23
   24d34:	bhi	24d44 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x70>
   24d38:	mvn	r3, r0, lsr r3
   24d3c:	tst	r3, #1
   24d40:	beq	24d18 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x44>
   24d44:	ldrb	r3, [r2, r4]
   24d48:	cmp	r3, #34	; 0x22
   24d4c:	bne	24d7c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xa8>
   24d50:	ldr	r2, [r5, #56]	; 0x38
   24d54:	ldr	r3, [r5, #192]	; 0xc0
   24d58:	add	r3, r3, #1
   24d5c:	add	r3, r3, r4
   24d60:	str	r3, [r2, #56]	; 0x38
   24d64:	mov	r3, #0
   24d68:	str	r3, [r2, #60]	; 0x3c
   24d6c:	mov	r3, #63	; 0x3f
   24d70:	add	r4, r4, #1
   24d74:	str	r3, [r5, #160]	; 0xa0
   24d78:	b	24d10 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x3c>
   24d7c:	cmp	r3, #39	; 0x27
   24d80:	bne	24da8 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xd4>
   24d84:	ldr	r2, [r5, #56]	; 0x38
   24d88:	ldr	r3, [r5, #192]	; 0xc0
   24d8c:	add	r3, r3, #1
   24d90:	add	r3, r3, r4
   24d94:	str	r3, [r2, #56]	; 0x38
   24d98:	mov	r3, #0
   24d9c:	str	r3, [r2, #60]	; 0x3c
   24da0:	mov	r3, #64	; 0x40
   24da4:	b	24d70 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x9c>
   24da8:	cmp	r3, #62	; 0x3e
   24dac:	bne	24df0 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x11c>
   24db0:	ldr	r2, [r1, #32]
   24db4:	add	r4, r4, #1
   24db8:	mov	r0, r5
   24dbc:	ldr	r3, [r5, #192]	; 0xc0
   24dc0:	sub	r3, r3, r2
   24dc4:	mov	r2, r1
   24dc8:	add	r3, r3, r4
   24dcc:	str	r3, [r1, #36]	; 0x24
   24dd0:	mov	r1, r4
   24dd4:	bl	ffc8 <myhtml_queue_add@plt>
   24dd8:	cmp	r0, #0
   24ddc:	movne	r3, #69	; 0x45
   24de0:	movne	r4, #0
   24de4:	streq	r0, [r5, #160]	; 0xa0
   24de8:	strne	r3, [r5, #160]	; 0xa0
   24dec:	b	24d10 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x3c>
   24df0:	mov	r3, #1
   24df4:	str	r3, [r5, #176]	; 0xb0
   24df8:	mov	r3, #66	; 0x42
   24dfc:	str	r3, [r5, #160]	; 0xa0
   24e00:	b	24d10 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x3c>
   24e04:	addeq	r0, r0, fp, lsl r0

00024e08 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base>:
   24e08:	push	{r4, r5, r6, lr}
   24e0c:	mov	r4, r0
   24e10:	mov	r6, r1
   24e14:	mov	r5, r3
   24e18:	ldrb	r0, [sp, #20]
   24e1c:	ldr	r1, [sp, #16]
   24e20:	cmp	r5, r1
   24e24:	bcs	24e9c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x94>
   24e28:	ldrb	r3, [r2, r5]
   24e2c:	cmp	r3, r0
   24e30:	bne	24ec4 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xbc>
   24e34:	ldr	r3, [r4, #56]	; 0x38
   24e38:	ldr	r2, [r4, #192]	; 0xc0
   24e3c:	ldr	r1, [r3, #56]	; 0x38
   24e40:	sub	r2, r2, r1
   24e44:	add	r2, r2, r5
   24e48:	str	r2, [r3, #60]	; 0x3c
   24e4c:	ldr	r2, [r6, #40]	; 0x28
   24e50:	cmp	r2, #0
   24e54:	bne	24ea4 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x9c>
   24e58:	str	r3, [r6, #40]	; 0x28
   24e5c:	str	r3, [r6, #44]	; 0x2c
   24e60:	str	r3, [r4, #56]	; 0x38
   24e64:	str	r2, [r3]
   24e68:	str	r2, [r3, #4]
   24e6c:	ldr	r0, [r4, #8]
   24e70:	ldr	r1, [r0, #16]
   24e74:	bl	10898 <myhtml_token_attr_create@plt>
   24e78:	cmp	r0, #0
   24e7c:	str	r0, [r4, #56]	; 0x38
   24e80:	movne	r3, #65	; 0x41
   24e84:	addne	r5, r5, #1
   24e88:	strne	r3, [r4, #160]	; 0xa0
   24e8c:	bne	24e9c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x94>
   24e90:	mov	r3, #69	; 0x45
   24e94:	mov	r5, #0
   24e98:	str	r3, [r4, #160]	; 0xa0
   24e9c:	mov	r0, r5
   24ea0:	pop	{r4, r5, r6, pc}
   24ea4:	ldr	r2, [r6, #44]	; 0x2c
   24ea8:	str	r3, [r2]
   24eac:	str	r2, [r3, #4]
   24eb0:	mov	r2, #0
   24eb4:	str	r3, [r6, #44]	; 0x2c
   24eb8:	str	r2, [r3]
   24ebc:	str	r3, [r4, #56]	; 0x38
   24ec0:	b	24e6c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x64>
   24ec4:	cmp	r3, #62	; 0x3e
   24ec8:	bne	24f84 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x17c>
   24ecc:	mov	r3, #1
   24ed0:	ldr	r2, [r4, #192]	; 0xc0
   24ed4:	str	r3, [r4, #176]	; 0xb0
   24ed8:	ldr	r3, [r4, #56]	; 0x38
   24edc:	add	r2, r5, r2
   24ee0:	ldr	r1, [r3, #56]	; 0x38
   24ee4:	cmp	r1, r2
   24ee8:	bcs	24f2c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x124>
   24eec:	sub	r2, r2, r1
   24ef0:	str	r2, [r3, #60]	; 0x3c
   24ef4:	ldr	r2, [r6, #40]	; 0x28
   24ef8:	cmp	r2, #0
   24efc:	bne	24f64 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x15c>
   24f00:	str	r3, [r6, #40]	; 0x28
   24f04:	str	r3, [r6, #44]	; 0x2c
   24f08:	str	r3, [r4, #56]	; 0x38
   24f0c:	str	r2, [r3]
   24f10:	str	r2, [r3, #4]
   24f14:	ldr	r0, [r4, #8]
   24f18:	ldr	r1, [r0, #16]
   24f1c:	bl	10898 <myhtml_token_attr_create@plt>
   24f20:	cmp	r0, #0
   24f24:	str	r0, [r4, #56]	; 0x38
   24f28:	beq	24e90 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x88>
   24f2c:	ldr	r2, [r6, #32]
   24f30:	add	r5, r5, #1
   24f34:	mov	r0, r4
   24f38:	mov	r1, r5
   24f3c:	ldr	r3, [r4, #192]	; 0xc0
   24f40:	sub	r3, r3, r2
   24f44:	mov	r2, r6
   24f48:	add	r3, r3, r5
   24f4c:	str	r3, [r6, #36]	; 0x24
   24f50:	bl	ffc8 <myhtml_queue_add@plt>
   24f54:	cmp	r0, #0
   24f58:	streq	r0, [r4, #160]	; 0xa0
   24f5c:	beq	24e9c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x94>
   24f60:	b	24e90 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x88>
   24f64:	ldr	r2, [r6, #44]	; 0x2c
   24f68:	str	r3, [r2]
   24f6c:	str	r2, [r3, #4]
   24f70:	mov	r2, #0
   24f74:	str	r3, [r6, #44]	; 0x2c
   24f78:	str	r2, [r3]
   24f7c:	str	r3, [r4, #56]	; 0x38
   24f80:	b	24f14 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x10c>
   24f84:	add	r5, r5, #1
   24f88:	b	24e20 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x18>

00024f8c <myhtml_tokenizer_state_doctype_system_identifier_double_quoted@@Base>:
   24f8c:	mov	ip, #34	; 0x22
   24f90:	push	{r0, r1, r2, lr}
   24f94:	str	ip, [sp, #4]
   24f98:	ldr	ip, [sp, #16]
   24f9c:	str	ip, [sp]
   24fa0:	bl	10a30 <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   24fa4:	add	sp, sp, #12
   24fa8:	pop	{pc}		; (ldr pc, [sp], #4)

00024fac <myhtml_tokenizer_state_doctype_system_identifier_single_quoted@@Base>:
   24fac:	mov	ip, #39	; 0x27
   24fb0:	push	{r0, r1, r2, lr}
   24fb4:	str	ip, [sp, #4]
   24fb8:	ldr	ip, [sp, #16]
   24fbc:	str	ip, [sp]
   24fc0:	bl	10a30 <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   24fc4:	add	sp, sp, #12
   24fc8:	pop	{pc}		; (ldr pc, [sp], #4)

00024fcc <myhtml_tokenizer_state_after_doctype_system_identifier@@Base>:
   24fcc:	push	{r4, r5, r6, lr}
   24fd0:	mov	r4, r3
   24fd4:	mov	r5, r0
   24fd8:	ldrb	r3, [r2, r3]
   24fdc:	ldr	ip, [sp, #16]
   24fe0:	sub	r3, r3, #9
   24fe4:	uxtb	r3, r3
   24fe8:	cmp	r3, #23
   24fec:	bls	25000 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x34>
   24ff0:	cmp	r4, ip
   24ff4:	bcc	25050 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x84>
   24ff8:	mov	r0, r4
   24ffc:	pop	{r4, r5, r6, pc}
   25000:	ldr	r0, [pc, #148]	; 2509c <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xd0>
   25004:	mvn	r3, r0, lsr r3
   25008:	tst	r3, #1
   2500c:	beq	25028 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x5c>
   25010:	cmp	r4, ip
   25014:	bcs	24ff8 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x2c>
   25018:	mov	r3, #66	; 0x42
   2501c:	str	r3, [r5, #160]	; 0xa0
   25020:	b	24ff8 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x2c>
   25024:	add	r4, r4, #1
   25028:	cmp	r4, ip
   2502c:	bcs	24ff8 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x2c>
   25030:	ldrb	r3, [r2, r4]
   25034:	sub	r3, r3, #9
   25038:	uxtb	r3, r3
   2503c:	cmp	r3, #23
   25040:	bhi	25050 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x84>
   25044:	mvn	r3, r0, lsr r3
   25048:	tst	r3, #1
   2504c:	beq	25024 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x58>
   25050:	ldrb	r3, [r2, r4]
   25054:	cmp	r3, #62	; 0x3e
   25058:	bne	25018 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x4c>
   2505c:	ldr	r2, [r1, #32]
   25060:	add	r4, r4, #1
   25064:	mov	r0, r5
   25068:	ldr	r3, [r5, #192]	; 0xc0
   2506c:	sub	r3, r3, r2
   25070:	mov	r2, r1
   25074:	add	r3, r3, r4
   25078:	str	r3, [r1, #36]	; 0x24
   2507c:	mov	r1, r4
   25080:	bl	ffc8 <myhtml_queue_add@plt>
   25084:	cmp	r0, #0
   25088:	movne	r3, #69	; 0x45
   2508c:	movne	r4, #0
   25090:	streq	r0, [r5, #160]	; 0xa0
   25094:	strne	r3, [r5, #160]	; 0xa0
   25098:	b	24ff8 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x2c>
   2509c:	addeq	r0, r0, fp, lsl r0

000250a0 <myhtml_tokenizer_state_bogus_doctype@@Base>:
   250a0:	push	{r4, r5, r6, lr}
   250a4:	mov	r5, r0
   250a8:	mov	r4, r3
   250ac:	ldr	r0, [sp, #16]
   250b0:	cmp	r4, r0
   250b4:	bcs	25100 <myhtml_tokenizer_state_bogus_doctype@@Base+0x60>
   250b8:	ldrb	r3, [r2, r4]
   250bc:	add	r4, r4, #1
   250c0:	cmp	r3, #62	; 0x3e
   250c4:	bne	250b0 <myhtml_tokenizer_state_bogus_doctype@@Base+0x10>
   250c8:	ldr	r2, [r1, #32]
   250cc:	mov	r0, r5
   250d0:	ldr	r3, [r5, #192]	; 0xc0
   250d4:	sub	r3, r3, r2
   250d8:	mov	r2, r1
   250dc:	add	r3, r3, r4
   250e0:	str	r3, [r1, #36]	; 0x24
   250e4:	mov	r1, r4
   250e8:	bl	ffc8 <myhtml_queue_add@plt>
   250ec:	cmp	r0, #0
   250f0:	movne	r3, #69	; 0x45
   250f4:	movne	r4, #0
   250f8:	streq	r0, [r5, #160]	; 0xa0
   250fc:	strne	r3, [r5, #160]	; 0xa0
   25100:	mov	r0, r4
   25104:	pop	{r4, r5, r6, pc}

00025108 <myhtml_tokenizer_end_state_data@@Base>:
   25108:	push	{r0, r1, r4, lr}
   2510c:	mov	r4, r3
   25110:	ldr	r3, [sp, #16]
   25114:	ldr	ip, [r0, #192]	; 0xc0
   25118:	add	r3, r3, ip
   2511c:	ldr	ip, [r1, #32]
   25120:	sub	ip, r3, ip
   25124:	str	ip, [r1, #36]	; 0x24
   25128:	mov	ip, #512	; 0x200
   2512c:	str	ip, [sp]
   25130:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   25134:	mov	r0, r4
   25138:	add	sp, sp, #8
   2513c:	pop	{r4, pc}

00025140 <myhtml_tokenizer_end_state_tag_open@@Base>:
   25140:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   25144:	mov	r5, r3
   25148:	ldr	lr, [sp, #32]
   2514c:	ldr	r8, [r0, #192]	; 0xc0
   25150:	ldr	ip, [r1, #24]
   25154:	ldr	r7, [r1, #32]
   25158:	add	lr, r8, lr
   2515c:	cmp	lr, ip
   25160:	sub	r7, lr, r7
   25164:	str	r7, [r1, #36]	; 0x24
   25168:	bls	251ac <myhtml_tokenizer_end_state_tag_open@@Base+0x6c>
   2516c:	cmp	ip, #0
   25170:	mov	r4, r1
   25174:	beq	251b8 <myhtml_tokenizer_end_state_tag_open@@Base+0x78>
   25178:	sub	ip, r3, ip
   2517c:	mov	r6, r0
   25180:	add	ip, ip, r8
   25184:	str	ip, [r1, #28]
   25188:	bl	10bd4 <myhtml_check_tag_parser@plt>
   2518c:	mov	r1, r5
   25190:	mov	r2, r4
   25194:	mov	r0, r6
   25198:	bl	ffc8 <myhtml_queue_add@plt>
   2519c:	cmp	r0, #0
   251a0:	movne	r3, #69	; 0x45
   251a4:	movne	r5, #0
   251a8:	strne	r3, [r6, #160]	; 0xa0
   251ac:	mov	r0, r5
   251b0:	add	sp, sp, #8
   251b4:	pop	{r4, r5, r6, r7, r8, pc}
   251b8:	ldr	r3, [r1, #48]	; 0x30
   251bc:	ldr	ip, [r1, #48]	; 0x30
   251c0:	and	r3, r3, #8
   251c4:	eor	r3, r3, ip
   251c8:	str	r3, [r1, #48]	; 0x30
   251cc:	mov	r3, #512	; 0x200
   251d0:	str	r3, [sp]
   251d4:	mov	r3, lr
   251d8:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   251dc:	b	251ac <myhtml_tokenizer_end_state_tag_open@@Base+0x6c>

000251e0 <myhtml_tokenizer_end_state_tag_name@@Base>:
   251e0:	b	25108 <myhtml_tokenizer_end_state_data@@Base>

000251e4 <myhtml_tokenizer_end_state_end_tag_open@@Base>:
   251e4:	push	{r0, r1, r4, r5, r6, lr}
   251e8:	mov	r4, r3
   251ec:	ldr	r3, [sp, #24]
   251f0:	ldr	r6, [r0, #192]	; 0xc0
   251f4:	ldr	lr, [r1, #24]
   251f8:	ldr	r5, [r1, #32]
   251fc:	add	r3, r6, r3
   25200:	cmp	r3, lr
   25204:	sub	r5, r3, r5
   25208:	str	r5, [r1, #36]	; 0x24
   2520c:	bls	2523c <myhtml_tokenizer_end_state_end_tag_open@@Base+0x58>
   25210:	sub	lr, r4, lr
   25214:	mov	ip, #512	; 0x200
   25218:	add	lr, lr, r6
   2521c:	str	ip, [sp]
   25220:	str	lr, [r1, #28]
   25224:	ldr	lr, [r1, #48]	; 0x30
   25228:	ldr	r5, [r1, #48]	; 0x30
   2522c:	and	lr, lr, #8
   25230:	eor	lr, lr, r5
   25234:	str	lr, [r1, #48]	; 0x30
   25238:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2523c:	mov	r0, r4
   25240:	add	sp, sp, #8
   25244:	pop	{r4, r5, r6, pc}

00025248 <myhtml_tokenizer_end_state_self_closing_start_tag@@Base>:
   25248:	b	25108 <myhtml_tokenizer_end_state_data@@Base>

0002524c <myhtml_tokenizer_end_state_markup_declaration_open@@Base>:
   2524c:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   25250:	mov	r6, r3
   25254:	ldr	r4, [sp, #32]
   25258:	ldr	r3, [r1, #32]
   2525c:	ldr	ip, [r0, #192]	; 0xc0
   25260:	sub	r3, r4, r3
   25264:	add	r3, r3, ip
   25268:	str	r3, [r1, #36]	; 0x24
   2526c:	ldr	r3, [r1, #24]
   25270:	cmp	r3, #1
   25274:	bls	252fc <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xb0>
   25278:	mov	r5, r0
   2527c:	ldr	r8, [r0, #76]	; 0x4c
   25280:	mov	r7, r1
   25284:	str	r4, [sp]
   25288:	bl	ff74 <myhtml_tokenizer_state_bogus_comment@plt>
   2528c:	ldr	r2, [r5, #64]	; 0x40
   25290:	ldr	r3, [r5, #192]	; 0xc0
   25294:	str	r0, [r8, #4]
   25298:	cmp	r2, r7
   2529c:	beq	25308 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xbc>
   252a0:	add	r4, r4, r3
   252a4:	ldr	r3, [r2, #24]
   252a8:	sub	r4, r4, r3
   252ac:	cmp	r4, #0
   252b0:	str	r4, [r2, #28]
   252b4:	beq	252fc <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xb0>
   252b8:	ldr	r3, [r2, #48]	; 0x30
   252bc:	ldr	r1, [r2, #48]	; 0x30
   252c0:	and	r3, r3, #8
   252c4:	eor	r3, r3, r1
   252c8:	str	r3, [r2, #48]	; 0x30
   252cc:	mov	r3, #1
   252d0:	str	r3, [r2]
   252d4:	ldr	r3, [r2, #48]	; 0x30
   252d8:	orr	r3, r3, #512	; 0x200
   252dc:	str	r3, [r2, #48]	; 0x30
   252e0:	mov	r1, r6
   252e4:	mov	r0, r5
   252e8:	bl	ffc8 <myhtml_queue_add@plt>
   252ec:	cmp	r0, #0
   252f0:	movne	r3, #69	; 0x45
   252f4:	movne	r6, #0
   252f8:	strne	r3, [r5, #160]	; 0xa0
   252fc:	mov	r0, r6
   25300:	add	sp, sp, #8
   25304:	pop	{r4, r5, r6, r7, r8, pc}
   25308:	ldr	r1, [r2, #48]	; 0x30
   2530c:	ldr	r0, [r2, #48]	; 0x30
   25310:	and	r1, r1, #8
   25314:	eor	r1, r1, r0
   25318:	str	r1, [r2, #48]	; 0x30
   2531c:	mov	r1, #2
   25320:	str	r1, [r2]
   25324:	ldr	r1, [r2, #48]	; 0x30
   25328:	orr	r1, r1, #1024	; 0x400
   2532c:	str	r1, [r2, #48]	; 0x30
   25330:	ldr	r1, [r2, #24]
   25334:	sub	r4, r4, r1
   25338:	add	r4, r4, r3
   2533c:	str	r4, [r2, #28]
   25340:	b	252e0 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x94>

00025344 <myhtml_tokenizer_end_state_before_attribute_name@@Base>:
   25344:	push	{r4, r5, r6, lr}
   25348:	mov	r4, r3
   2534c:	mov	r2, r1
   25350:	mov	r5, r0
   25354:	ldr	ip, [sp, #16]
   25358:	ldr	r3, [r1, #32]
   2535c:	sub	ip, ip, r3
   25360:	ldr	r3, [r0, #192]	; 0xc0
   25364:	add	ip, ip, r3
   25368:	str	ip, [r1, #36]	; 0x24
   2536c:	mov	r1, r4
   25370:	bl	ffc8 <myhtml_queue_add@plt>
   25374:	cmp	r0, #0
   25378:	movne	r3, #69	; 0x45
   2537c:	movne	r4, #0
   25380:	mov	r0, r4
   25384:	strne	r3, [r5, #160]	; 0xa0
   25388:	pop	{r4, r5, r6, pc}

0002538c <myhtml_tokenizer_end_state_attribute_name@@Base>:
   2538c:	push	{r4, r5, r6, lr}
   25390:	mov	r4, r3
   25394:	mov	r2, r1
   25398:	mov	r5, r0
   2539c:	ldr	lr, [sp, #16]
   253a0:	ldr	r3, [r1, #32]
   253a4:	ldr	ip, [r0, #192]	; 0xc0
   253a8:	sub	lr, lr, r3
   253ac:	ldr	r3, [r0, #56]	; 0x38
   253b0:	add	lr, lr, ip
   253b4:	add	ip, ip, r4
   253b8:	str	lr, [r1, #36]	; 0x24
   253bc:	ldr	r1, [r3, #48]	; 0x30
   253c0:	sub	ip, ip, r1
   253c4:	mov	r1, r4
   253c8:	str	ip, [r3, #52]	; 0x34
   253cc:	bl	ffc8 <myhtml_queue_add@plt>
   253d0:	cmp	r0, #0
   253d4:	movne	r3, #69	; 0x45
   253d8:	movne	r4, #0
   253dc:	mov	r0, r4
   253e0:	strne	r3, [r5, #160]	; 0xa0
   253e4:	pop	{r4, r5, r6, pc}

000253e8 <myhtml_tokenizer_end_state_after_attribute_name@@Base>:
   253e8:	b	25344 <myhtml_tokenizer_end_state_before_attribute_name@@Base>

000253ec <myhtml_tokenizer_end_state_before_attribute_value@@Base>:
   253ec:	push	{r4, r5, r6, lr}
   253f0:	mov	r5, r3
   253f4:	mov	r2, r1
   253f8:	mov	r4, r0
   253fc:	ldr	ip, [sp, #16]
   25400:	ldr	r3, [r1, #32]
   25404:	sub	ip, ip, r3
   25408:	ldr	r3, [r0, #192]	; 0xc0
   2540c:	add	ip, ip, r3
   25410:	str	ip, [r1, #36]	; 0x24
   25414:	mov	r1, r5
   25418:	bl	ffc8 <myhtml_queue_add@plt>
   2541c:	cmp	r0, #0
   25420:	beq	25438 <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x4c>
   25424:	mov	r3, #69	; 0x45
   25428:	mov	r5, #0
   2542c:	str	r3, [r4, #160]	; 0xa0
   25430:	mov	r0, r5
   25434:	pop	{r4, r5, r6, pc}
   25438:	ldr	r0, [r4, #8]
   2543c:	ldr	r1, [r0, #16]
   25440:	bl	10898 <myhtml_token_attr_create@plt>
   25444:	cmp	r0, #0
   25448:	str	r0, [r4, #56]	; 0x38
   2544c:	bne	25430 <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x44>
   25450:	b	25424 <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x38>

00025454 <myhtml_tokenizer_end_state_attribute_value_double_quoted@@Base>:
   25454:	ldr	r2, [sp]
   25458:	ldr	ip, [r1, #32]
   2545c:	ldr	r0, [r0, #192]	; 0xc0
   25460:	sub	r2, r2, ip
   25464:	add	r2, r2, r0
   25468:	mov	r0, r3
   2546c:	str	r2, [r1, #36]	; 0x24
   25470:	bx	lr

00025474 <myhtml_tokenizer_end_state_attribute_value_single_quoted@@Base>:
   25474:	ldr	r2, [r0, #192]	; 0xc0
   25478:	ldr	r0, [r1, #32]
   2547c:	sub	r2, r2, r0
   25480:	ldr	r0, [sp]
   25484:	add	r2, r2, r0
   25488:	mov	r0, r3
   2548c:	str	r2, [r1, #36]	; 0x24
   25490:	bx	lr

00025494 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base>:
   25494:	push	{r4, r5, r6, lr}
   25498:	mov	r5, r3
   2549c:	mov	r2, r1
   254a0:	mov	r4, r0
   254a4:	ldr	lr, [sp, #16]
   254a8:	ldr	r3, [r1, #32]
   254ac:	ldr	ip, [r0, #192]	; 0xc0
   254b0:	sub	lr, lr, r3
   254b4:	ldr	r3, [r0, #56]	; 0x38
   254b8:	add	lr, lr, ip
   254bc:	add	ip, ip, r5
   254c0:	str	lr, [r1, #36]	; 0x24
   254c4:	ldr	r1, [r3, #56]	; 0x38
   254c8:	sub	ip, ip, r1
   254cc:	mov	r1, r5
   254d0:	str	ip, [r3, #60]	; 0x3c
   254d4:	bl	ffc8 <myhtml_queue_add@plt>
   254d8:	cmp	r0, #0
   254dc:	beq	254f4 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x60>
   254e0:	mov	r3, #69	; 0x45
   254e4:	mov	r5, #0
   254e8:	str	r3, [r4, #160]	; 0xa0
   254ec:	mov	r0, r5
   254f0:	pop	{r4, r5, r6, pc}
   254f4:	ldr	r0, [r4, #8]
   254f8:	ldr	r1, [r0, #16]
   254fc:	bl	10898 <myhtml_token_attr_create@plt>
   25500:	cmp	r0, #0
   25504:	str	r0, [r4, #56]	; 0x38
   25508:	bne	254ec <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x58>
   2550c:	b	254e0 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x4c>

00025510 <myhtml_tokenizer_end_state_after_attribute_value_quoted@@Base>:
   25510:	push	{r4, r5, r6, lr}
   25514:	mov	r2, r1
   25518:	mov	r5, r3
   2551c:	mov	r4, r0
   25520:	ldr	ip, [sp, #16]
   25524:	ldr	r1, [r1, #32]
   25528:	ldr	r3, [r0, #192]	; 0xc0
   2552c:	sub	ip, ip, r1
   25530:	ldr	r1, [r2, #24]
   25534:	add	ip, ip, r3
   25538:	str	ip, [r2, #36]	; 0x24
   2553c:	sub	r1, r5, r1
   25540:	add	r1, r1, r3
   25544:	str	r1, [r2, #28]
   25548:	mov	r1, r5
   2554c:	bl	ffc8 <myhtml_queue_add@plt>
   25550:	cmp	r0, #0
   25554:	movne	r3, #69	; 0x45
   25558:	movne	r5, #0
   2555c:	mov	r0, r5
   25560:	strne	r3, [r4, #160]	; 0xa0
   25564:	pop	{r4, r5, r6, pc}

00025568 <myhtml_tokenizer_end_state_comment_start@@Base>:
   25568:	b	25510 <myhtml_tokenizer_end_state_after_attribute_value_quoted@@Base>

0002556c <myhtml_tokenizer_end_state_comment_start_dash@@Base>:
   2556c:	b	25510 <myhtml_tokenizer_end_state_after_attribute_value_quoted@@Base>

00025570 <myhtml_tokenizer_end_state_comment@@Base>:
   25570:	b	25510 <myhtml_tokenizer_end_state_after_attribute_value_quoted@@Base>

00025574 <myhtml_tokenizer_end_state_comment_end@@Base>:
   25574:	push	{r4, r5, r6, lr}
   25578:	mov	r2, r1
   2557c:	mov	r5, r3
   25580:	ldr	ip, [r1, #32]
   25584:	ldr	r1, [sp, #16]
   25588:	ldr	r3, [r0, #192]	; 0xc0
   2558c:	sub	r1, r1, ip
   25590:	ldr	ip, [r2, #24]
   25594:	add	r1, r1, r3
   25598:	str	r1, [r2, #36]	; 0x24
   2559c:	sub	ip, r5, ip
   255a0:	add	ip, ip, r3
   255a4:	cmp	ip, #2
   255a8:	strls	ip, [r2, #28]
   255ac:	bls	255d4 <myhtml_tokenizer_end_state_comment_end@@Base+0x60>
   255b0:	sub	ip, ip, #2
   255b4:	mov	r1, r5
   255b8:	mov	r4, r0
   255bc:	str	ip, [r2, #28]
   255c0:	bl	ffc8 <myhtml_queue_add@plt>
   255c4:	cmp	r0, #0
   255c8:	movne	r3, #69	; 0x45
   255cc:	movne	r5, #0
   255d0:	strne	r3, [r4, #160]	; 0xa0
   255d4:	mov	r0, r5
   255d8:	pop	{r4, r5, r6, pc}

000255dc <myhtml_tokenizer_end_state_comment_end_dash@@Base>:
   255dc:	b	25510 <myhtml_tokenizer_end_state_after_attribute_value_quoted@@Base>

000255e0 <myhtml_tokenizer_end_state_comment_end_bang@@Base>:
   255e0:	b	25510 <myhtml_tokenizer_end_state_after_attribute_value_quoted@@Base>

000255e4 <myhtml_tokenizer_end_state_bogus_comment@@Base>:
   255e4:	b	25510 <myhtml_tokenizer_end_state_after_attribute_value_quoted@@Base>

000255e8 <myhtml_tokenizer_end_state_cdata_section@@Base>:
   255e8:	push	{r4, r5, r6, lr}
   255ec:	mov	r2, r1
   255f0:	mov	r5, r3
   255f4:	ldr	ip, [r1, #32]
   255f8:	ldr	r1, [sp, #16]
   255fc:	ldr	r3, [r0, #192]	; 0xc0
   25600:	sub	r1, r1, ip
   25604:	ldr	ip, [r2, #24]
   25608:	add	r1, r1, r3
   2560c:	str	r1, [r2, #36]	; 0x24
   25610:	sub	ip, r5, ip
   25614:	add	ip, ip, r3
   25618:	cmp	ip, #0
   2561c:	str	ip, [r2, #28]
   25620:	beq	25640 <myhtml_tokenizer_end_state_cdata_section@@Base+0x58>
   25624:	mov	r1, r5
   25628:	mov	r4, r0
   2562c:	bl	ffc8 <myhtml_queue_add@plt>
   25630:	cmp	r0, #0
   25634:	movne	r3, #69	; 0x45
   25638:	movne	r5, #0
   2563c:	strne	r3, [r4, #160]	; 0xa0
   25640:	mov	r0, r5
   25644:	pop	{r4, r5, r6, pc}

00025648 <myhtml_tokenizer_end_state_rcdata@@Base>:
   25648:	push	{r4, r5, r6, lr}
   2564c:	mov	r2, r1
   25650:	mov	r4, r3
   25654:	ldr	ip, [r1, #24]
   25658:	ldr	r1, [sp, #16]
   2565c:	ldr	r3, [r0, #192]	; 0xc0
   25660:	add	r1, r1, r3
   25664:	ldr	r3, [r2, #32]
   25668:	cmp	r1, ip
   2566c:	sub	r3, r1, r3
   25670:	str	r3, [r2, #36]	; 0x24
   25674:	bhi	25680 <myhtml_tokenizer_end_state_rcdata@@Base+0x38>
   25678:	mov	r0, r4
   2567c:	pop	{r4, r5, r6, pc}
   25680:	ldr	r3, [r2, #48]	; 0x30
   25684:	sub	r1, r1, ip
   25688:	mov	r5, r0
   2568c:	str	r1, [r2, #28]
   25690:	mov	r1, #0
   25694:	orr	r3, r3, #16
   25698:	str	r3, [r2, #48]	; 0x30
   2569c:	mov	r3, #1
   256a0:	str	r3, [r2]
   256a4:	bl	ffc8 <myhtml_queue_add@plt>
   256a8:	cmp	r0, #0
   256ac:	beq	25678 <myhtml_tokenizer_end_state_rcdata@@Base+0x30>
   256b0:	mov	r3, #69	; 0x45
   256b4:	mov	r0, #0
   256b8:	str	r3, [r5, #160]	; 0xa0
   256bc:	pop	{r4, r5, r6, pc}

000256c0 <myhtml_tokenizer_end_state_rcdata_less_than_sign@@Base>:
   256c0:	push	{r0, r1, r2, r4, r5, lr}
   256c4:	mov	r4, r3
   256c8:	ldr	ip, [sp, #24]
   256cc:	ldr	r5, [r1, #32]
   256d0:	ldr	r3, [r0, #192]	; 0xc0
   256d4:	sub	ip, ip, r5
   256d8:	add	ip, ip, r3
   256dc:	add	r3, r3, r4
   256e0:	str	ip, [r1, #36]	; 0x24
   256e4:	mov	ip, #16
   256e8:	str	ip, [sp]
   256ec:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   256f0:	mov	r0, r4
   256f4:	add	sp, sp, #12
   256f8:	pop	{r4, r5, pc}

000256fc <myhtml_tokenizer_end_state_rcdata_end_tag_open@@Base>:
   256fc:	b	256c0 <myhtml_tokenizer_end_state_rcdata_less_than_sign@@Base>

00025700 <myhtml_tokenizer_end_state_rcdata_end_tag_name@@Base>:
   25700:	b	256c0 <myhtml_tokenizer_end_state_rcdata_less_than_sign@@Base>

00025704 <myhtml_tokenizer_end_state_rawtext@@Base>:
   25704:	push	{r0, r1, r2, r4, r5, lr}
   25708:	mov	r4, r3
   2570c:	ldr	ip, [sp, #24]
   25710:	ldr	r5, [r1, #32]
   25714:	ldr	r3, [r0, #192]	; 0xc0
   25718:	sub	ip, ip, r5
   2571c:	add	ip, ip, r3
   25720:	add	r3, r3, r4
   25724:	str	ip, [r1, #36]	; 0x24
   25728:	mov	ip, #32
   2572c:	str	ip, [sp]
   25730:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   25734:	mov	r0, r4
   25738:	add	sp, sp, #12
   2573c:	pop	{r4, r5, pc}

00025740 <myhtml_tokenizer_end_state_rawtext_less_than_sign@@Base>:
   25740:	b	25704 <myhtml_tokenizer_end_state_rawtext@@Base>

00025744 <myhtml_tokenizer_end_state_rawtext_end_tag_open@@Base>:
   25744:	b	25704 <myhtml_tokenizer_end_state_rawtext@@Base>

00025748 <myhtml_tokenizer_end_state_rawtext_end_tag_name@@Base>:
   25748:	b	25704 <myhtml_tokenizer_end_state_rawtext@@Base>

0002574c <myhtml_tokenizer_end_state_plaintext@@Base>:
   2574c:	ldr	r2, [r0, #192]	; 0xc0
   25750:	ldr	r0, [r1, #32]
   25754:	sub	r2, r2, r0
   25758:	ldr	r0, [sp]
   2575c:	add	r2, r2, r0
   25760:	mov	r0, r3
   25764:	str	r2, [r1, #36]	; 0x24
   25768:	bx	lr

0002576c <myhtml_tokenizer_end_state_doctype@@Base>:
   2576c:	b	25704 <myhtml_tokenizer_end_state_rawtext@@Base>

00025770 <myhtml_tokenizer_end_state_before_doctype_name@@Base>:
   25770:	push	{r4, r5, r6, lr}
   25774:	mov	r4, r3
   25778:	mov	r2, r1
   2577c:	mov	r5, r0
   25780:	ldr	ip, [sp, #16]
   25784:	ldr	r3, [r1, #32]
   25788:	sub	ip, ip, r3
   2578c:	ldr	r3, [r0, #192]	; 0xc0
   25790:	add	ip, ip, r3
   25794:	mov	r3, #1
   25798:	str	ip, [r1, #36]	; 0x24
   2579c:	mov	r1, r4
   257a0:	str	r3, [r0, #176]	; 0xb0
   257a4:	bl	ffc8 <myhtml_queue_add@plt>
   257a8:	cmp	r0, #0
   257ac:	movne	r3, #69	; 0x45
   257b0:	movne	r4, #0
   257b4:	mov	r0, r4
   257b8:	strne	r3, [r5, #160]	; 0xa0
   257bc:	pop	{r4, r5, r6, pc}

000257c0 <myhtml_tokenizer_end_state_doctype_name@@Base>:
   257c0:	b	2538c <myhtml_tokenizer_end_state_attribute_name@@Base>

000257c4 <myhtml_tokenizer_end_state_after_doctype_name@@Base>:
   257c4:	b	25344 <myhtml_tokenizer_end_state_before_attribute_name@@Base>

000257c8 <myhtml_tokenizer_end_state_custom_after_doctype_name_a_z@@Base>:
   257c8:	b	25344 <myhtml_tokenizer_end_state_before_attribute_name@@Base>

000257cc <myhtml_tokenizer_end_state_before_doctype_public_identifier@@Base>:
   257cc:	b	25770 <myhtml_tokenizer_end_state_before_doctype_name@@Base>

000257d0 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@@Base>:
   257d0:	push	{r4, r5, r6, lr}
   257d4:	mov	r4, r0
   257d8:	mov	r5, r3
   257dc:	mov	r3, #1
   257e0:	mov	r2, r1
   257e4:	ldr	lr, [sp, #16]
   257e8:	ldr	ip, [r1, #32]
   257ec:	ldr	r0, [r0, #192]	; 0xc0
   257f0:	sub	ip, lr, ip
   257f4:	add	ip, ip, r0
   257f8:	str	ip, [r1, #36]	; 0x24
   257fc:	str	r3, [r4, #176]	; 0xb0
   25800:	ldr	r3, [r4, #56]	; 0x38
   25804:	ldr	r1, [r3, #48]	; 0x30
   25808:	cmp	r1, #0
   2580c:	cmpne	lr, #0
   25810:	addne	r0, r0, r5
   25814:	subne	r0, r0, r1
   25818:	mov	r1, r5
   2581c:	strne	r0, [r3, #52]	; 0x34
   25820:	mov	r0, r4
   25824:	bl	ffc8 <myhtml_queue_add@plt>
   25828:	cmp	r0, #0
   2582c:	movne	r3, #69	; 0x45
   25830:	movne	r5, #0
   25834:	mov	r0, r5
   25838:	strne	r3, [r4, #160]	; 0xa0
   2583c:	pop	{r4, r5, r6, pc}

00025840 <myhtml_tokenizer_end_state_doctype_public_identifier_single_quoted@@Base>:
   25840:	push	{r0, r1, r2, r4, r5, lr}
   25844:	mov	r4, r3
   25848:	ldr	lr, [sp, #24]
   2584c:	ldr	ip, [r1, #32]
   25850:	ldr	r3, [r0, #192]	; 0xc0
   25854:	str	lr, [sp]
   25858:	sub	ip, lr, ip
   2585c:	add	ip, ip, r3
   25860:	add	r3, r3, r4
   25864:	str	ip, [r1, #36]	; 0x24
   25868:	bl	10bbc <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@plt>
   2586c:	mov	r0, r4
   25870:	add	sp, sp, #12
   25874:	pop	{r4, r5, pc}

00025878 <myhtml_tokenizer_end_state_after_doctype_public_identifier@@Base>:
   25878:	b	25344 <myhtml_tokenizer_end_state_before_attribute_name@@Base>

0002587c <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base>:
   2587c:	b	257d0 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@@Base>

00025880 <myhtml_tokenizer_end_state_doctype_system_identifier_single_quoted@@Base>:
   25880:	push	{r0, r1, r2, r4, r5, lr}
   25884:	mov	r4, r3
   25888:	ldr	lr, [sp, #24]
   2588c:	ldr	ip, [r1, #32]
   25890:	ldr	r3, [r0, #192]	; 0xc0
   25894:	str	lr, [sp]
   25898:	sub	ip, lr, ip
   2589c:	add	ip, ip, r3
   258a0:	add	r3, r3, r4
   258a4:	str	ip, [r1, #36]	; 0x24
   258a8:	bl	10d9c <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@plt>
   258ac:	mov	r0, r4
   258b0:	add	sp, sp, #12
   258b4:	pop	{r4, r5, pc}

000258b8 <myhtml_tokenizer_end_state_after_doctype_system_identifier@@Base>:
   258b8:	b	25344 <myhtml_tokenizer_end_state_before_attribute_name@@Base>

000258bc <myhtml_tokenizer_end_state_bogus_doctype@@Base>:
   258bc:	b	25344 <myhtml_tokenizer_end_state_before_attribute_name@@Base>

000258c0 <myhtml_tokenizer_end_state_script_data@@Base>:
   258c0:	push	{r0, r1, r2, r4, r5, lr}
   258c4:	mov	r4, r3
   258c8:	ldr	ip, [sp, #24]
   258cc:	ldr	r5, [r1, #32]
   258d0:	ldr	r3, [r0, #192]	; 0xc0
   258d4:	sub	ip, ip, r5
   258d8:	add	ip, ip, r3
   258dc:	add	r3, r3, r4
   258e0:	str	ip, [r1, #36]	; 0x24
   258e4:	mov	ip, #64	; 0x40
   258e8:	str	ip, [sp]
   258ec:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   258f0:	mov	r0, r4
   258f4:	add	sp, sp, #12
   258f8:	pop	{r4, r5, pc}

000258fc <myhtml_tokenizer_end_state_script_data_less_than_sign@@Base>:
   258fc:	b	258c0 <myhtml_tokenizer_end_state_script_data@@Base>

00025900 <myhtml_tokenizer_end_state_script_data_end_tag_open@@Base>:
   25900:	b	258c0 <myhtml_tokenizer_end_state_script_data@@Base>

00025904 <myhtml_tokenizer_end_state_script_data_end_tag_name@@Base>:
   25904:	b	258c0 <myhtml_tokenizer_end_state_script_data@@Base>

00025908 <myhtml_tokenizer_end_state_script_data_escape_start@@Base>:
   25908:	b	258c0 <myhtml_tokenizer_end_state_script_data@@Base>

0002590c <myhtml_tokenizer_end_state_script_data_escape_start_dash@@Base>:
   2590c:	b	258c0 <myhtml_tokenizer_end_state_script_data@@Base>

00025910 <myhtml_tokenizer_end_state_script_data_escaped@@Base>:
   25910:	b	258c0 <myhtml_tokenizer_end_state_script_data@@Base>

00025914 <myhtml_tokenizer_end_state_script_data_escaped_dash@@Base>:
   25914:	b	258c0 <myhtml_tokenizer_end_state_script_data@@Base>

00025918 <myhtml_tokenizer_end_state_script_data_escaped_dash_dash@@Base>:
   25918:	b	258c0 <myhtml_tokenizer_end_state_script_data@@Base>

0002591c <myhtml_tokenizer_end_state_script_data_escaped_less_than_sign@@Base>:
   2591c:	b	258c0 <myhtml_tokenizer_end_state_script_data@@Base>

00025920 <myhtml_tokenizer_end_state_script_data_escaped_end_tag_open@@Base>:
   25920:	b	258c0 <myhtml_tokenizer_end_state_script_data@@Base>

00025924 <myhtml_tokenizer_end_state_script_data_escaped_end_tag_name@@Base>:
   25924:	b	258c0 <myhtml_tokenizer_end_state_script_data@@Base>

00025928 <myhtml_tokenizer_end_state_script_data_double_escape_start@@Base>:
   25928:	b	258c0 <myhtml_tokenizer_end_state_script_data@@Base>

0002592c <myhtml_tokenizer_end_state_script_data_double_escaped@@Base>:
   2592c:	b	258c0 <myhtml_tokenizer_end_state_script_data@@Base>

00025930 <myhtml_tokenizer_end_state_script_data_double_escaped_dash@@Base>:
   25930:	b	258c0 <myhtml_tokenizer_end_state_script_data@@Base>

00025934 <myhtml_tokenizer_end_state_script_data_double_escaped_dash_dash@@Base>:
   25934:	b	258c0 <myhtml_tokenizer_end_state_script_data@@Base>

00025938 <myhtml_tokenizer_end_state_script_data_double_escaped_less_than_sign@@Base>:
   25938:	b	258c0 <myhtml_tokenizer_end_state_script_data@@Base>

0002593c <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>:
   2593c:	b	258c0 <myhtml_tokenizer_end_state_script_data@@Base>

00025940 <myhtml_tokenizer_end_state_parse_error_stop@@Base>:
   25940:	ldr	r0, [sp]
   25944:	bx	lr

00025948 <myhtml_tokenizer_state_script_data@@Base>:
   25948:	push	{r4, lr}
   2594c:	ldr	lr, [sp, #8]
   25950:	cmp	r3, lr
   25954:	bcs	25980 <myhtml_tokenizer_state_script_data@@Base+0x38>
   25958:	ldrb	r4, [r2, r3]
   2595c:	add	ip, r3, #1
   25960:	cmp	r4, #60	; 0x3c
   25964:	bne	25988 <myhtml_tokenizer_state_script_data@@Base+0x40>
   25968:	ldr	r2, [r0, #192]	; 0xc0
   2596c:	add	r3, r2, r3
   25970:	str	r3, [r1, #32]
   25974:	mov	r3, #16
   25978:	str	r3, [r0, #160]	; 0xa0
   2597c:	mov	r3, ip
   25980:	mov	r0, r3
   25984:	pop	{r4, pc}
   25988:	mov	r3, ip
   2598c:	b	25950 <myhtml_tokenizer_state_script_data@@Base+0x8>

00025990 <myhtml_tokenizer_state_script_data_less_than_sign@@Base>:
   25990:	ldrb	r2, [r2, r3]
   25994:	cmp	r2, #47	; 0x2f
   25998:	addeq	r3, r3, #1
   2599c:	moveq	r2, #17
   259a0:	beq	259b4 <myhtml_tokenizer_state_script_data_less_than_sign@@Base+0x24>
   259a4:	cmp	r2, #33	; 0x21
   259a8:	addeq	r3, r3, #1
   259ac:	moveq	r2, #19
   259b0:	movne	r2, #5
   259b4:	str	r2, [r0, #160]	; 0xa0
   259b8:	mov	r0, r3
   259bc:	bx	lr

000259c0 <myhtml_tokenizer_state_script_data_escape_start@@Base>:
   259c0:	ldrb	r2, [r2, r3]
   259c4:	cmp	r2, #45	; 0x2d
   259c8:	moveq	r2, #20
   259cc:	movne	r2, #5
   259d0:	addeq	r3, r3, #1
   259d4:	str	r2, [r0, #160]	; 0xa0
   259d8:	mov	r0, r3
   259dc:	bx	lr

000259e0 <myhtml_tokenizer_state_script_data_escape_start_dash@@Base>:
   259e0:	ldrb	r2, [r2, r3]
   259e4:	cmp	r2, #45	; 0x2d
   259e8:	moveq	r2, #23
   259ec:	movne	r2, #5
   259f0:	addeq	r3, r3, #1
   259f4:	str	r2, [r0, #160]	; 0xa0
   259f8:	mov	r0, r3
   259fc:	bx	lr

00025a00 <myhtml_tokenizer_state_script_data_end_tag_open@@Base>:
   25a00:	ldrb	r2, [r2, r3]
   25a04:	bic	r2, r2, #32
   25a08:	sub	r2, r2, #65	; 0x41
   25a0c:	cmp	r2, #25
   25a10:	ldrls	r2, [r0, #192]	; 0xc0
   25a14:	movhi	r2, #5
   25a18:	addls	r2, r2, r3
   25a1c:	strls	r2, [r1, #12]
   25a20:	movls	r2, #18
   25a24:	str	r2, [r0, #160]	; 0xa0
   25a28:	mov	r0, r3
   25a2c:	bx	lr

00025a30 <myhtml_tokenizer_state_script_data_end_tag_name@@Base>:
   25a30:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   25a34:	mov	r5, r0
   25a38:	mov	r7, r1
   25a3c:	mov	r8, r2
   25a40:	mov	r4, r3
   25a44:	ldr	r0, [pc, #584]	; 25c94 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x264>
   25a48:	ldr	r1, [sp, #40]	; 0x28
   25a4c:	cmp	r4, r1
   25a50:	bcs	25b80 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x150>
   25a54:	ldrb	r3, [r8, r4]
   25a58:	sub	r2, r3, #9
   25a5c:	uxtb	r2, r2
   25a60:	cmp	r2, #23
   25a64:	bls	25af4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xc4>
   25a68:	cmp	r3, #47	; 0x2f
   25a6c:	bne	25bb4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x184>
   25a70:	ldr	r9, [r7, #12]
   25a74:	ldr	r6, [r5, #192]	; 0xc0
   25a78:	sub	r6, r6, r9
   25a7c:	add	r6, r6, r4
   25a80:	cmp	r6, #6
   25a84:	bne	25b18 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xe8>
   25a88:	mov	r2, r6
   25a8c:	mov	r1, r9
   25a90:	mov	r0, r5
   25a94:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   25a98:	ldr	r1, [pc, #504]	; 25c98 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x268>
   25a9c:	mov	r2, r6
   25aa0:	add	r1, pc, r1
   25aa4:	bl	10238 <mycore_strncasecmp@plt>
   25aa8:	cmp	r0, #0
   25aac:	bne	25b18 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xe8>
   25ab0:	ldr	r3, [r5, #192]	; 0xc0
   25ab4:	mov	r2, #64	; 0x40
   25ab8:	mov	r1, r7
   25abc:	mov	r0, r5
   25ac0:	str	r2, [sp]
   25ac4:	mov	r2, r8
   25ac8:	sub	r3, r3, #8
   25acc:	add	r3, r3, r4
   25ad0:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   25ad4:	cmp	r0, #0
   25ad8:	beq	25b74 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x144>
   25adc:	mov	r3, #112	; 0x70
   25ae0:	str	r3, [r0]
   25ae4:	mov	r3, #3
   25ae8:	str	r9, [r0, #24]
   25aec:	str	r6, [r0, #28]
   25af0:	b	25ba0 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x170>
   25af4:	mvn	r2, r0, lsr r2
   25af8:	tst	r2, #1
   25afc:	bne	25c74 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x244>
   25b00:	ldr	r9, [r7, #12]
   25b04:	ldr	r6, [r5, #192]	; 0xc0
   25b08:	sub	r6, r6, r9
   25b0c:	add	r6, r6, r4
   25b10:	cmp	r6, #6
   25b14:	beq	25b20 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xf0>
   25b18:	mov	r3, #5
   25b1c:	b	25ba8 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x178>
   25b20:	mov	r2, r6
   25b24:	mov	r1, r9
   25b28:	mov	r0, r5
   25b2c:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   25b30:	ldr	r1, [pc, #356]	; 25c9c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x26c>
   25b34:	mov	r2, r6
   25b38:	add	r1, pc, r1
   25b3c:	bl	10238 <mycore_strncasecmp@plt>
   25b40:	cmp	r0, #0
   25b44:	bne	25b18 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xe8>
   25b48:	ldr	r3, [r5, #192]	; 0xc0
   25b4c:	mov	r2, #64	; 0x40
   25b50:	mov	r1, r7
   25b54:	mov	r0, r5
   25b58:	str	r2, [sp]
   25b5c:	mov	r2, r8
   25b60:	sub	r3, r3, #8
   25b64:	add	r3, r3, r4
   25b68:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   25b6c:	cmp	r0, #0
   25b70:	bne	25b8c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x15c>
   25b74:	mov	r3, #69	; 0x45
   25b78:	mov	r4, #0
   25b7c:	str	r3, [r5, #160]	; 0xa0
   25b80:	mov	r0, r4
   25b84:	add	sp, sp, #12
   25b88:	pop	{r4, r5, r6, r7, r8, r9, pc}
   25b8c:	mov	r3, #112	; 0x70
   25b90:	str	r3, [r0]
   25b94:	mov	r3, #1
   25b98:	str	r9, [r0, #24]
   25b9c:	str	r6, [r0, #28]
   25ba0:	str	r3, [r0, #48]	; 0x30
   25ba4:	mov	r3, #33	; 0x21
   25ba8:	add	r4, r4, #1
   25bac:	str	r3, [r5, #160]	; 0xa0
   25bb0:	b	25b80 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x150>
   25bb4:	cmp	r3, #62	; 0x3e
   25bb8:	bne	25c74 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x244>
   25bbc:	ldr	r9, [r7, #12]
   25bc0:	ldr	r6, [r5, #192]	; 0xc0
   25bc4:	sub	r6, r6, r9
   25bc8:	add	r6, r6, r4
   25bcc:	cmp	r6, #6
   25bd0:	bne	25b18 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xe8>
   25bd4:	mov	r2, r6
   25bd8:	mov	r1, r9
   25bdc:	mov	r0, r5
   25be0:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   25be4:	ldr	r1, [pc, #180]	; 25ca0 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x270>
   25be8:	mov	r2, r6
   25bec:	add	r1, pc, r1
   25bf0:	bl	10238 <mycore_strncasecmp@plt>
   25bf4:	cmp	r0, #0
   25bf8:	bne	25b18 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xe8>
   25bfc:	ldr	r3, [r5, #192]	; 0xc0
   25c00:	mov	r2, #64	; 0x40
   25c04:	mov	r1, r7
   25c08:	mov	r0, r5
   25c0c:	str	r2, [sp]
   25c10:	mov	r2, r8
   25c14:	sub	r3, r3, #8
   25c18:	add	r3, r3, r4
   25c1c:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   25c20:	subs	r2, r0, #0
   25c24:	beq	25b74 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x144>
   25c28:	mov	r3, #112	; 0x70
   25c2c:	ldr	r1, [r2, #32]
   25c30:	mov	r0, r5
   25c34:	str	r3, [r2]
   25c38:	mov	r3, #1
   25c3c:	add	r4, r4, r3
   25c40:	str	r9, [r2, #24]
   25c44:	str	r6, [r2, #28]
   25c48:	str	r3, [r2, #48]	; 0x30
   25c4c:	ldr	r3, [r5, #192]	; 0xc0
   25c50:	add	r3, r4, r3
   25c54:	sub	r3, r3, r1
   25c58:	mov	r1, r4
   25c5c:	str	r3, [r2, #36]	; 0x24
   25c60:	bl	ffc8 <myhtml_queue_add@plt>
   25c64:	cmp	r0, #0
   25c68:	streq	r0, [r5, #160]	; 0xa0
   25c6c:	beq	25b80 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x150>
   25c70:	b	25b74 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x144>
   25c74:	bic	r3, r3, #32
   25c78:	sub	r3, r3, #65	; 0x41
   25c7c:	cmp	r3, #25
   25c80:	movhi	r3, #5
   25c84:	strhi	r3, [r5, #160]	; 0xa0
   25c88:	bhi	25b80 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x150>
   25c8c:	add	r4, r4, #1
   25c90:	b	25a4c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1c>
   25c94:	addeq	r0, r0, fp, lsl r0
   25c98:	ldrdeq	r0, [sp], -r7
   25c9c:	andeq	r0, sp, pc, lsr sp
   25ca0:	andeq	r0, sp, fp, lsl #25

00025ca4 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base>:
   25ca4:	ldrb	r2, [r2, r3]
   25ca8:	add	r3, r3, #1
   25cac:	cmp	r2, #45	; 0x2d
   25cb0:	beq	25cd0 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x2c>
   25cb4:	cmp	r2, #60	; 0x3c
   25cb8:	moveq	r2, #24
   25cbc:	beq	25ccc <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x28>
   25cc0:	cmp	r2, #62	; 0x3e
   25cc4:	moveq	r2, #5
   25cc8:	movne	r2, #21
   25ccc:	str	r2, [r0, #160]	; 0xa0
   25cd0:	mov	r0, r3
   25cd4:	bx	lr

00025cd8 <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base>:
   25cd8:	ldrb	r2, [r2, r3]
   25cdc:	cmp	r2, #47	; 0x2f
   25ce0:	moveq	r2, #25
   25ce4:	addeq	r3, r3, #1
   25ce8:	streq	r2, [r0, #160]	; 0xa0
   25cec:	beq	25d14 <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base+0x3c>
   25cf0:	bic	r2, r2, #32
   25cf4:	sub	r2, r2, #65	; 0x41
   25cf8:	cmp	r2, #25
   25cfc:	ldrls	r2, [r0, #192]	; 0xc0
   25d00:	movhi	r2, #21
   25d04:	addls	r2, r2, r3
   25d08:	strls	r2, [r1, #12]
   25d0c:	movls	r2, #27
   25d10:	str	r2, [r0, #160]	; 0xa0
   25d14:	mov	r0, r3
   25d18:	bx	lr

00025d1c <myhtml_tokenizer_state_script_data_escaped_end_tag_open@@Base>:
   25d1c:	ldrb	r2, [r2, r3]
   25d20:	bic	r2, r2, #32
   25d24:	sub	r2, r2, #65	; 0x41
   25d28:	cmp	r2, #25
   25d2c:	ldrls	r2, [r0, #192]	; 0xc0
   25d30:	movhi	r2, #21
   25d34:	addls	r2, r2, r3
   25d38:	strls	r2, [r1, #12]
   25d3c:	movls	r2, #26
   25d40:	str	r2, [r0, #160]	; 0xa0
   25d44:	mov	r0, r3
   25d48:	bx	lr

00025d4c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base>:
   25d4c:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   25d50:	mov	r5, r0
   25d54:	mov	r7, r1
   25d58:	mov	r8, r2
   25d5c:	mov	r4, r3
   25d60:	ldr	r0, [pc, #584]	; 25fb0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x264>
   25d64:	ldr	r1, [sp, #40]	; 0x28
   25d68:	cmp	r4, r1
   25d6c:	bcs	25e9c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x150>
   25d70:	ldrb	r3, [r8, r4]
   25d74:	sub	r2, r3, #9
   25d78:	uxtb	r2, r2
   25d7c:	cmp	r2, #23
   25d80:	bls	25e10 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xc4>
   25d84:	cmp	r3, #47	; 0x2f
   25d88:	bne	25ed0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x184>
   25d8c:	ldr	r9, [r7, #12]
   25d90:	ldr	r6, [r5, #192]	; 0xc0
   25d94:	sub	r6, r6, r9
   25d98:	add	r6, r6, r4
   25d9c:	cmp	r6, #6
   25da0:	bne	25e34 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xe8>
   25da4:	mov	r2, r6
   25da8:	mov	r1, r9
   25dac:	mov	r0, r5
   25db0:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   25db4:	ldr	r1, [pc, #504]	; 25fb4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x268>
   25db8:	mov	r2, r6
   25dbc:	add	r1, pc, r1
   25dc0:	bl	10238 <mycore_strncasecmp@plt>
   25dc4:	cmp	r0, #0
   25dc8:	bne	25e34 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xe8>
   25dcc:	ldr	r3, [r5, #192]	; 0xc0
   25dd0:	mov	r2, #64	; 0x40
   25dd4:	mov	r1, r7
   25dd8:	mov	r0, r5
   25ddc:	str	r2, [sp]
   25de0:	mov	r2, r8
   25de4:	sub	r3, r3, #8
   25de8:	add	r3, r3, r4
   25dec:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   25df0:	cmp	r0, #0
   25df4:	beq	25e90 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x144>
   25df8:	mov	r3, #112	; 0x70
   25dfc:	str	r3, [r0]
   25e00:	mov	r3, #3
   25e04:	str	r9, [r0, #24]
   25e08:	str	r6, [r0, #28]
   25e0c:	b	25ebc <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x170>
   25e10:	mvn	r2, r0, lsr r2
   25e14:	tst	r2, #1
   25e18:	bne	25f90 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x244>
   25e1c:	ldr	r9, [r7, #12]
   25e20:	ldr	r6, [r5, #192]	; 0xc0
   25e24:	sub	r6, r6, r9
   25e28:	add	r6, r6, r4
   25e2c:	cmp	r6, #6
   25e30:	beq	25e3c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xf0>
   25e34:	mov	r3, #21
   25e38:	b	25ec4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x178>
   25e3c:	mov	r2, r6
   25e40:	mov	r1, r9
   25e44:	mov	r0, r5
   25e48:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   25e4c:	ldr	r1, [pc, #356]	; 25fb8 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x26c>
   25e50:	mov	r2, r6
   25e54:	add	r1, pc, r1
   25e58:	bl	10238 <mycore_strncasecmp@plt>
   25e5c:	cmp	r0, #0
   25e60:	bne	25e34 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xe8>
   25e64:	ldr	r3, [r5, #192]	; 0xc0
   25e68:	mov	r2, #64	; 0x40
   25e6c:	mov	r1, r7
   25e70:	mov	r0, r5
   25e74:	str	r2, [sp]
   25e78:	mov	r2, r8
   25e7c:	sub	r3, r3, #8
   25e80:	add	r3, r3, r4
   25e84:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   25e88:	cmp	r0, #0
   25e8c:	bne	25ea8 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x15c>
   25e90:	mov	r3, #69	; 0x45
   25e94:	mov	r4, #0
   25e98:	str	r3, [r5, #160]	; 0xa0
   25e9c:	mov	r0, r4
   25ea0:	add	sp, sp, #8
   25ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25ea8:	mov	r3, #112	; 0x70
   25eac:	str	r3, [r0]
   25eb0:	mov	r3, #1
   25eb4:	str	r9, [r0, #24]
   25eb8:	str	r6, [r0, #28]
   25ebc:	str	r3, [r0, #48]	; 0x30
   25ec0:	mov	r3, #33	; 0x21
   25ec4:	add	r4, r4, #1
   25ec8:	str	r3, [r5, #160]	; 0xa0
   25ecc:	b	25e9c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x150>
   25ed0:	cmp	r3, #62	; 0x3e
   25ed4:	bne	25f90 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x244>
   25ed8:	ldr	r9, [r7, #12]
   25edc:	ldr	r6, [r5, #192]	; 0xc0
   25ee0:	sub	r6, r6, r9
   25ee4:	add	r6, r6, r4
   25ee8:	cmp	r6, #6
   25eec:	bne	25e34 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xe8>
   25ef0:	mov	r2, r6
   25ef4:	mov	r1, r9
   25ef8:	mov	r0, r5
   25efc:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   25f00:	ldr	r1, [pc, #180]	; 25fbc <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x270>
   25f04:	mov	r2, r6
   25f08:	add	r1, pc, r1
   25f0c:	bl	10238 <mycore_strncasecmp@plt>
   25f10:	subs	sl, r0, #0
   25f14:	bne	25e34 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xe8>
   25f18:	ldr	r3, [r5, #192]	; 0xc0
   25f1c:	mov	r2, #64	; 0x40
   25f20:	mov	r1, r7
   25f24:	mov	r0, r5
   25f28:	str	r2, [sp]
   25f2c:	mov	r2, r8
   25f30:	sub	r3, r3, #8
   25f34:	add	r3, r3, r4
   25f38:	bl	10c34 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   25f3c:	subs	r2, r0, #0
   25f40:	beq	25e90 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x144>
   25f44:	mov	r3, #112	; 0x70
   25f48:	ldr	r1, [r2, #32]
   25f4c:	mov	r0, r5
   25f50:	str	r3, [r2]
   25f54:	mov	r3, #1
   25f58:	add	r4, r4, r3
   25f5c:	str	r9, [r2, #24]
   25f60:	str	r6, [r2, #28]
   25f64:	str	r3, [r2, #48]	; 0x30
   25f68:	ldr	r3, [r5, #192]	; 0xc0
   25f6c:	str	sl, [r5, #160]	; 0xa0
   25f70:	add	r3, r4, r3
   25f74:	sub	r3, r3, r1
   25f78:	mov	r1, r4
   25f7c:	str	r3, [r2, #36]	; 0x24
   25f80:	bl	ffc8 <myhtml_queue_add@plt>
   25f84:	cmp	r0, #0
   25f88:	beq	25e9c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x150>
   25f8c:	b	25e90 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x144>
   25f90:	bic	r3, r3, #32
   25f94:	sub	r3, r3, #65	; 0x41
   25f98:	cmp	r3, #25
   25f9c:	movhi	r3, #21
   25fa0:	strhi	r3, [r5, #160]	; 0xa0
   25fa4:	bhi	25e9c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x150>
   25fa8:	add	r4, r4, #1
   25fac:	b	25d68 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1c>
   25fb0:	addeq	r0, r0, fp, lsl r0
   25fb4:			; <UNDEFINED> instruction: 0x000d0abb
   25fb8:	andeq	r0, sp, r3, lsr #20
   25fbc:	andeq	r0, sp, pc, ror #18

00025fc0 <myhtml_tokenizer_state_script_data_escaped@@Base>:
   25fc0:	ldr	ip, [sp]
   25fc4:	cmp	r3, ip
   25fc8:	bcs	25fe4 <myhtml_tokenizer_state_script_data_escaped@@Base+0x24>
   25fcc:	ldrb	r1, [r2, r3]
   25fd0:	add	r3, r3, #1
   25fd4:	cmp	r1, #45	; 0x2d
   25fd8:	bne	25fec <myhtml_tokenizer_state_script_data_escaped@@Base+0x2c>
   25fdc:	mov	r2, #22
   25fe0:	str	r2, [r0, #160]	; 0xa0
   25fe4:	mov	r0, r3
   25fe8:	bx	lr
   25fec:	cmp	r1, #60	; 0x3c
   25ff0:	bne	25fc4 <myhtml_tokenizer_state_script_data_escaped@@Base+0x4>
   25ff4:	mov	r2, #24
   25ff8:	b	25fe0 <myhtml_tokenizer_state_script_data_escaped@@Base+0x20>

00025ffc <myhtml_tokenizer_state_script_data_escaped_dash@@Base>:
   25ffc:	ldrb	r2, [r2, r3]
   26000:	cmp	r2, #45	; 0x2d
   26004:	moveq	r2, #23
   26008:	streq	r2, [r0, #160]	; 0xa0
   2600c:	beq	26038 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x3c>
   26010:	cmp	r2, #60	; 0x3c
   26014:	moveq	r2, #24
   26018:	streq	r2, [r0, #160]	; 0xa0
   2601c:	beq	26030 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x34>
   26020:	cmp	r2, #0
   26024:	mov	r2, #21
   26028:	str	r2, [r0, #160]	; 0xa0
   2602c:	bne	26038 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x3c>
   26030:	mov	r0, r3
   26034:	bx	lr
   26038:	add	r3, r3, #1
   2603c:	b	26030 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x34>

00026040 <myhtml_tokenizer_state_script_data_double_escape_start@@Base>:
   26040:	push	{r4, r5, r6, lr}
   26044:	mov	r5, r0
   26048:	mov	r4, r3
   2604c:	ldr	lr, [pc, #176]	; 26104 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xc4>
   26050:	ldr	ip, [sp, #16]
   26054:	cmp	r4, ip
   26058:	bcs	260e4 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xa4>
   2605c:	ldrb	r3, [r2, r4]
   26060:	sub	r0, r3, #9
   26064:	uxtb	r0, r0
   26068:	cmp	r0, #23
   2606c:	mvnls	r0, lr, lsr r0
   26070:	movhi	r0, #1
   26074:	andls	r0, r0, #1
   26078:	cmp	r3, #47	; 0x2f
   2607c:	cmpne	r3, #62	; 0x3e
   26080:	moveq	r6, #1
   26084:	movne	r6, #0
   26088:	eor	r0, r0, #1
   2608c:	orrs	r0, r6, r0
   26090:	beq	260ec <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xac>
   26094:	ldr	r1, [r1, #12]
   26098:	ldr	r6, [r5, #192]	; 0xc0
   2609c:	sub	r6, r6, r1
   260a0:	add	r6, r6, r4
   260a4:	add	r4, r4, #1
   260a8:	cmp	r6, #6
   260ac:	beq	260b8 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x78>
   260b0:	mov	r3, #21
   260b4:	b	260e0 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xa0>
   260b8:	mov	r2, r6
   260bc:	mov	r0, r5
   260c0:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   260c4:	ldr	r1, [pc, #60]	; 26108 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xc8>
   260c8:	mov	r2, r6
   260cc:	add	r1, pc, r1
   260d0:	bl	10238 <mycore_strncasecmp@plt>
   260d4:	cmp	r0, #0
   260d8:	moveq	r3, #28
   260dc:	movne	r3, #21
   260e0:	str	r3, [r5, #160]	; 0xa0
   260e4:	mov	r0, r4
   260e8:	pop	{r4, r5, r6, pc}
   260ec:	bic	r3, r3, #32
   260f0:	sub	r3, r3, #65	; 0x41
   260f4:	cmp	r3, #25
   260f8:	bhi	260b0 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x70>
   260fc:	add	r4, r4, #1
   26100:	b	26054 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x14>
   26104:	addeq	r0, r0, fp, lsl r0
   26108:	andeq	r0, sp, fp, lsr #15

0002610c <myhtml_tokenizer_state_script_data_double_escaped@@Base>:
   2610c:	ldr	ip, [sp]
   26110:	cmp	r3, ip
   26114:	bcs	26130 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x24>
   26118:	ldrb	r1, [r2, r3]
   2611c:	add	r3, r3, #1
   26120:	cmp	r1, #45	; 0x2d
   26124:	bne	26138 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x2c>
   26128:	mov	r2, #29
   2612c:	str	r2, [r0, #160]	; 0xa0
   26130:	mov	r0, r3
   26134:	bx	lr
   26138:	cmp	r1, #60	; 0x3c
   2613c:	bne	26110 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x4>
   26140:	mov	r2, #31
   26144:	b	2612c <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x20>

00026148 <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base>:
   26148:	ldrb	r2, [r2, r3]
   2614c:	cmp	r2, #45	; 0x2d
   26150:	moveq	r2, #30
   26154:	beq	26164 <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base+0x1c>
   26158:	cmp	r2, #60	; 0x3c
   2615c:	moveq	r2, #31
   26160:	movne	r2, #28
   26164:	str	r2, [r0, #160]	; 0xa0
   26168:	add	r0, r3, #1
   2616c:	bx	lr

00026170 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base>:
   26170:	ldrb	r2, [r2, r3]
   26174:	add	r3, r3, #1
   26178:	cmp	r2, #45	; 0x2d
   2617c:	beq	2619c <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x2c>
   26180:	cmp	r2, #60	; 0x3c
   26184:	moveq	r2, #31
   26188:	beq	26198 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x28>
   2618c:	cmp	r2, #62	; 0x3e
   26190:	moveq	r2, #5
   26194:	movne	r2, #28
   26198:	str	r2, [r0, #160]	; 0xa0
   2619c:	mov	r0, r3
   261a0:	bx	lr

000261a4 <myhtml_tokenizer_state_script_data_double_escaped_less_than_sign@@Base>:
   261a4:	ldrb	r2, [r2, r3]
   261a8:	cmp	r2, #47	; 0x2f
   261ac:	moveq	r2, #32
   261b0:	addeq	r3, r3, #1
   261b4:	movne	r2, #28
   261b8:	streq	r2, [r0, #160]	; 0xa0
   261bc:	ldreq	r2, [r0, #192]	; 0xc0
   261c0:	strne	r2, [r0, #160]	; 0xa0
   261c4:	mov	r0, r3
   261c8:	addeq	r2, r2, r3
   261cc:	streq	r2, [r1, #12]
   261d0:	bx	lr

000261d4 <myhtml_tokenizer_state_script_data_double_escape_end@@Base>:
   261d4:	push	{r4, r5, r6, lr}
   261d8:	mov	r5, r0
   261dc:	mov	r4, r3
   261e0:	ldr	lr, [pc, #176]	; 26298 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xc4>
   261e4:	ldr	ip, [sp, #16]
   261e8:	cmp	r4, ip
   261ec:	bcs	26278 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xa4>
   261f0:	ldrb	r3, [r2, r4]
   261f4:	sub	r0, r3, #9
   261f8:	uxtb	r0, r0
   261fc:	cmp	r0, #23
   26200:	mvnls	r0, lr, lsr r0
   26204:	movhi	r0, #1
   26208:	andls	r0, r0, #1
   2620c:	cmp	r3, #47	; 0x2f
   26210:	cmpne	r3, #62	; 0x3e
   26214:	moveq	r6, #1
   26218:	movne	r6, #0
   2621c:	eor	r0, r0, #1
   26220:	orrs	r0, r6, r0
   26224:	beq	26280 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xac>
   26228:	ldr	r1, [r1, #12]
   2622c:	ldr	r6, [r5, #192]	; 0xc0
   26230:	sub	r6, r6, r1
   26234:	add	r6, r6, r4
   26238:	add	r4, r4, #1
   2623c:	cmp	r6, #6
   26240:	beq	2624c <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x78>
   26244:	mov	r3, #28
   26248:	b	26274 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xa0>
   2624c:	mov	r2, r6
   26250:	mov	r0, r5
   26254:	bl	fe00 <myhtml_tree_incomming_buffer_make_data@plt>
   26258:	ldr	r1, [pc, #60]	; 2629c <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xc8>
   2625c:	mov	r2, r6
   26260:	add	r1, pc, r1
   26264:	bl	10238 <mycore_strncasecmp@plt>
   26268:	cmp	r0, #0
   2626c:	moveq	r3, #21
   26270:	movne	r3, #28
   26274:	str	r3, [r5, #160]	; 0xa0
   26278:	mov	r0, r4
   2627c:	pop	{r4, r5, r6, pc}
   26280:	bic	r3, r3, #32
   26284:	sub	r3, r3, #65	; 0x41
   26288:	cmp	r3, #25
   2628c:	bhi	26244 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x70>
   26290:	add	r4, r4, #1
   26294:	b	261e8 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x14>
   26298:	addeq	r0, r0, fp, lsl r0
   2629c:	andeq	r0, sp, r7, lsl r6

000262a0 <myhtml_tree_create@@Base>:
   262a0:	mov	r1, #252	; 0xfc
   262a4:	mov	r0, #1
   262a8:	b	feb4 <mycore_calloc@plt>

000262ac <myhtml_tree_node_clean@@Base>:
   262ac:	mov	r2, #44	; 0x2c
   262b0:	push	{r4, lr}
   262b4:	mov	r1, #0
   262b8:	bl	10844 <memset@plt>
   262bc:	mov	r2, #1
   262c0:	str	r2, [r0, #8]
   262c4:	pop	{r4, pc}

000262c8 <myhtml_tree_parse_flags@@Base>:
   262c8:	ldr	r0, [r0, #184]	; 0xb8
   262cc:	bx	lr

000262d0 <myhtml_tree_parse_flags_set@@Base>:
   262d0:	str	r1, [r0, #184]	; 0xb8
   262d4:	bx	lr

000262d8 <myhtml_tree_get_myhtml@@Base>:
   262d8:	cmp	r0, #0
   262dc:	ldrne	r0, [r0]
   262e0:	bx	lr

000262e4 <myhtml_tree_get_tag@@Base>:
   262e4:	cmp	r0, #0
   262e8:	ldrne	r0, [r0, #28]
   262ec:	bx	lr

000262f0 <myhtml_tree_get_document@@Base>:
   262f0:	ldr	r0, [r0, #84]	; 0x54
   262f4:	bx	lr

000262f8 <myhtml_tree_get_node_html@@Base>:
   262f8:	ldr	r0, [r0, #96]	; 0x60
   262fc:	bx	lr

00026300 <myhtml_tree_get_node_body@@Base>:
   26300:	ldr	r0, [r0, #100]	; 0x64
   26304:	bx	lr

00026308 <myhtml_tree_get_node_head@@Base>:
   26308:	ldr	r0, [r0, #92]	; 0x5c
   2630c:	bx	lr

00026310 <myhtml_tree_get_mchar@@Base>:
   26310:	ldr	r0, [r0, #4]
   26314:	bx	lr

00026318 <myhtml_tree_get_mchar_node_id@@Base>:
   26318:	ldr	r0, [r0, #52]	; 0x34
   2631c:	bx	lr

00026320 <myhtml_tree_node_create@@Base>:
   26320:	push	{r4, r5, r6, lr}
   26324:	mov	r4, r0
   26328:	mov	r2, #0
   2632c:	ldr	r0, [r0, #12]
   26330:	ldr	r1, [r4, #48]	; 0x30
   26334:	bl	10b50 <mcobject_async_malloc@plt>
   26338:	mov	r5, r0
   2633c:	bl	11030 <myhtml_tree_node_clean@plt>
   26340:	mov	r0, r5
   26344:	str	r4, [r5, #40]	; 0x28
   26348:	pop	{r4, r5, r6, pc}

0002634c <myhtml_tree_node_add_child@@Base>:
   2634c:	ldr	r3, [r0, #28]
   26350:	cmp	r3, #0
   26354:	strne	r1, [r3, #16]
   26358:	streq	r1, [r0, #20]
   2635c:	strne	r3, [r1, #12]
   26360:	str	r0, [r1, #24]
   26364:	str	r1, [r0, #28]
   26368:	ldr	r0, [r1, #40]	; 0x28
   2636c:	ldr	r3, [r0, #236]	; 0xec
   26370:	cmp	r3, #0
   26374:	bxeq	lr
   26378:	ldr	r2, [r0, #244]	; 0xf4
   2637c:	bx	r3

00026380 <myhtml_tree_node_insert_before@@Base>:
   26380:	ldr	r3, [r0, #12]
   26384:	ldr	r2, [r0, #24]
   26388:	cmp	r3, #0
   2638c:	strne	r1, [r3, #16]
   26390:	streq	r1, [r2, #20]
   26394:	strne	r3, [r1, #12]
   26398:	str	r0, [r1, #16]
   2639c:	str	r2, [r1, #24]
   263a0:	str	r1, [r0, #12]
   263a4:	ldr	r0, [r1, #40]	; 0x28
   263a8:	ldr	r3, [r0, #236]	; 0xec
   263ac:	cmp	r3, #0
   263b0:	bxeq	lr
   263b4:	ldr	r2, [r0, #244]	; 0xf4
   263b8:	bx	r3

000263bc <myhtml_tree_node_insert_after@@Base>:
   263bc:	ldr	r3, [r0, #16]
   263c0:	ldr	r2, [r0, #24]
   263c4:	cmp	r3, #0
   263c8:	strne	r1, [r3, #12]
   263cc:	streq	r1, [r2, #28]
   263d0:	strne	r3, [r1, #16]
   263d4:	str	r0, [r1, #12]
   263d8:	str	r2, [r1, #24]
   263dc:	str	r1, [r0, #16]
   263e0:	ldr	r0, [r1, #40]	; 0x28
   263e4:	ldr	r3, [r0, #236]	; 0xec
   263e8:	cmp	r3, #0
   263ec:	bxeq	lr
   263f0:	ldr	r2, [r0, #244]	; 0xf4
   263f4:	bx	r3

000263f8 <myhtml_tree_node_find_parent_by_tag_id@@Base>:
   263f8:	ldr	r0, [r0, #24]
   263fc:	cmp	r0, #0
   26400:	bxeq	lr
   26404:	ldr	r3, [r0, #4]
   26408:	cmp	r3, r1
   2640c:	bne	263f8 <myhtml_tree_node_find_parent_by_tag_id@@Base>
   26410:	bx	lr

00026414 <myhtml_tree_node_remove@@Base>:
   26414:	ldr	r1, [r0, #12]
   26418:	push	{r4, lr}
   2641c:	mov	r4, r0
   26420:	ldr	r3, [r0, #16]
   26424:	cmp	r3, #0
   26428:	strne	r1, [r3, #12]
   2642c:	bne	2643c <myhtml_tree_node_remove@@Base+0x28>
   26430:	ldr	r2, [r0, #24]
   26434:	cmp	r2, #0
   26438:	strne	r1, [r2, #28]
   2643c:	ldr	r2, [r4, #12]
   26440:	cmp	r2, #0
   26444:	strne	r3, [r2, #16]
   26448:	bne	26458 <myhtml_tree_node_remove@@Base+0x44>
   2644c:	ldr	r2, [r4, #24]
   26450:	cmp	r2, #0
   26454:	strne	r3, [r2, #20]
   26458:	ldr	r0, [r4, #40]	; 0x28
   2645c:	ldr	r3, [r0, #240]	; 0xf0
   26460:	cmp	r3, #0
   26464:	beq	26474 <myhtml_tree_node_remove@@Base+0x60>
   26468:	mov	r1, r4
   2646c:	ldr	r2, [r0, #248]	; 0xf8
   26470:	blx	r3
   26474:	mov	r3, #0
   26478:	mov	r0, r4
   2647c:	str	r3, [r4, #12]
   26480:	str	r3, [r4, #16]
   26484:	str	r3, [r4, #24]
   26488:	pop	{r4, pc}

0002648c <myhtml_tree_node_free@@Base>:
   2648c:	push	{r4, lr}
   26490:	subs	r4, r0, #0
   26494:	popeq	{r4, pc}
   26498:	ldr	r1, [r4, #32]
   2649c:	cmp	r1, #0
   264a0:	beq	264c0 <myhtml_tree_node_free@@Base+0x34>
   264a4:	ldr	r3, [r4, #40]	; 0x28
   264a8:	ldr	r0, [r3, #8]
   264ac:	bl	10778 <myhtml_token_attr_delete_all@plt>
   264b0:	ldr	r1, [r4, #32]
   264b4:	ldr	r3, [r4, #40]	; 0x28
   264b8:	ldr	r0, [r3, #8]
   264bc:	bl	10f1c <myhtml_token_delete@plt>
   264c0:	ldr	r3, [r4, #40]	; 0x28
   264c4:	mov	r1, r4
   264c8:	pop	{r4, lr}
   264cc:	ldr	r0, [r3, #12]
   264d0:	b	ffec <mcobject_async_free@plt>

000264d4 <myhtml_tree_node_delete@@Base>:
   264d4:	push	{r4, lr}
   264d8:	subs	r4, r0, #0
   264dc:	popeq	{r4, pc}
   264e0:	bl	10d84 <myhtml_tree_node_remove@plt>
   264e4:	mov	r0, r4
   264e8:	pop	{r4, lr}
   264ec:	b	10c94 <myhtml_tree_node_free@plt>
   264f0:	push	{r4, lr}
   264f4:	mov	r4, r0
   264f8:	cmp	r4, #0
   264fc:	popeq	{r4, pc}
   26500:	ldr	r0, [r4, #20]
   26504:	cmp	r0, #0
   26508:	beq	26510 <myhtml_tree_node_delete@@Base+0x3c>
   2650c:	bl	264f0 <myhtml_tree_node_delete@@Base+0x1c>
   26510:	ldr	r4, [r4, #16]
   26514:	mov	r0, r4
   26518:	bl	10d54 <myhtml_tree_node_delete@plt>
   2651c:	b	264f8 <myhtml_tree_node_delete@@Base+0x24>

00026520 <myhtml_tree_node_delete_recursive@@Base>:
   26520:	push	{r4, lr}
   26524:	subs	r4, r0, #0
   26528:	popeq	{r4, pc}
   2652c:	ldr	r0, [r4, #20]
   26530:	cmp	r0, #0
   26534:	beq	2653c <myhtml_tree_node_delete_recursive@@Base+0x1c>
   26538:	bl	264f0 <myhtml_tree_node_delete@@Base+0x1c>
   2653c:	mov	r0, r4
   26540:	pop	{r4, lr}
   26544:	b	10d54 <myhtml_tree_node_delete@plt>

00026548 <myhtml_tree_node_clone@@Base>:
   26548:	push	{r4, r5, r6, lr}
   2654c:	mov	r4, r0
   26550:	ldr	r0, [r0, #40]	; 0x28
   26554:	bl	ff80 <myhtml_tree_node_create@plt>
   26558:	ldr	r1, [r4, #32]
   2655c:	mov	r5, r0
   26560:	cmp	r1, #0
   26564:	beq	26574 <myhtml_tree_node_clone@@Base+0x2c>
   26568:	ldr	r3, [r4, #40]	; 0x28
   2656c:	ldr	r0, [r3, #8]
   26570:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   26574:	ldr	r1, [r4, #32]
   26578:	ldr	r0, [r4, #40]	; 0x28
   2657c:	ldrd	r2, [r0, #40]	; 0x28
   26580:	ldr	r0, [r0, #8]
   26584:	bl	fecc <myhtml_token_node_clone@plt>
   26588:	ldr	r3, [r4, #4]
   2658c:	cmp	r0, #0
   26590:	str	r3, [r5, #4]
   26594:	ldr	r3, [r4, #8]
   26598:	str	r0, [r5, #32]
   2659c:	str	r3, [r5, #8]
   265a0:	ldrne	r3, [r0, #48]	; 0x30
   265a4:	orrne	r3, r3, #4
   265a8:	strne	r3, [r0, #48]	; 0x30
   265ac:	mov	r0, r5
   265b0:	pop	{r4, r5, r6, pc}

000265b4 <myhtml_tree_node_insert_by_mode@@Base>:
   265b4:	cmp	r2, #0
   265b8:	bne	265c0 <myhtml_tree_node_insert_by_mode@@Base+0xc>
   265bc:	b	1064c <myhtml_tree_node_add_child@plt>
   265c0:	cmp	r2, #1
   265c4:	bne	265cc <myhtml_tree_node_insert_by_mode@@Base+0x18>
   265c8:	b	10388 <myhtml_tree_node_insert_before@plt>
   265cc:	b	102f8 <myhtml_tree_node_insert_after@plt>

000265d0 <myhtml_tree_node_insert_doctype@@Base>:
   265d0:	push	{r4, r5, r6, lr}
   265d4:	mov	r6, r1
   265d8:	mov	r5, r0
   265dc:	bl	ff80 <myhtml_tree_node_create@plt>
   265e0:	mov	r4, r0
   265e4:	mov	r3, #1
   265e8:	mov	r1, r0
   265ec:	ldr	r0, [r5, #84]	; 0x54
   265f0:	str	r3, [r4, #8]
   265f4:	mov	r3, #3
   265f8:	str	r3, [r4, #4]
   265fc:	str	r6, [r4, #32]
   26600:	bl	1064c <myhtml_tree_node_add_child@plt>
   26604:	mov	r0, r4
   26608:	pop	{r4, r5, r6, pc}

0002660c <myhtml_tree_element_in_scope@@Base>:
   2660c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   26610:	mov	r9, r3
   26614:	mov	r6, r0
   26618:	mov	r8, r1
   2661c:	mov	r7, r2
   26620:	ldr	r3, [r0, #128]	; 0x80
   26624:	ldr	r5, [r3]
   26628:	ldr	r4, [r3, #4]
   2662c:	cmp	r4, #0
   26630:	beq	26688 <myhtml_tree_element_in_scope@@Base+0x7c>
   26634:	sub	r4, r4, #1
   26638:	ldr	r0, [r6, #28]
   2663c:	ldr	r3, [r5, r4, lsl #2]
   26640:	ldr	r1, [r3, #4]
   26644:	bl	109b8 <myhtml_tag_get_by_id@plt>
   26648:	ldr	r1, [r5, r4, lsl #2]
   2664c:	ldr	r3, [r1, #4]
   26650:	cmp	r3, r8
   26654:	bne	2666c <myhtml_tree_element_in_scope@@Base+0x60>
   26658:	cmp	r7, #0
   2665c:	beq	2668c <myhtml_tree_element_in_scope@@Base+0x80>
   26660:	ldr	r3, [r1, #8]
   26664:	cmp	r3, r7
   26668:	beq	2668c <myhtml_tree_element_in_scope@@Base+0x80>
   2666c:	ldr	r1, [r1, #8]
   26670:	cmp	r9, #128	; 0x80
   26674:	add	r1, r1, #4
   26678:	ldr	r3, [r0, r1, lsl #2]
   2667c:	bne	26694 <myhtml_tree_element_in_scope@@Base+0x88>
   26680:	tst	r3, #128	; 0x80
   26684:	bne	2662c <myhtml_tree_element_in_scope@@Base+0x20>
   26688:	mov	r1, #0
   2668c:	mov	r0, r1
   26690:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   26694:	tst	r9, r3
   26698:	beq	2662c <myhtml_tree_element_in_scope@@Base+0x20>
   2669c:	b	26688 <myhtml_tree_element_in_scope@@Base+0x7c>

000266a0 <myhtml_tree_element_in_scope_by_node@@Base>:
   266a0:	push	{r4, r5, r6, r7, r8, lr}
   266a4:	mov	r7, r0
   266a8:	mov	r8, r1
   266ac:	ldr	r5, [r0, #40]	; 0x28
   266b0:	ldr	r3, [r5, #128]	; 0x80
   266b4:	ldr	r6, [r3]
   266b8:	ldr	r4, [r3, #4]
   266bc:	cmp	r4, #0
   266c0:	beq	26700 <myhtml_tree_element_in_scope_by_node@@Base+0x60>
   266c4:	sub	r4, r4, #1
   266c8:	ldr	r0, [r5, #28]
   266cc:	ldr	r3, [r6, r4, lsl #2]
   266d0:	ldr	r1, [r3, #4]
   266d4:	bl	109b8 <myhtml_tag_get_by_id@plt>
   266d8:	ldr	r3, [r6, r4, lsl #2]
   266dc:	cmp	r3, r7
   266e0:	beq	26714 <myhtml_tree_element_in_scope_by_node@@Base+0x74>
   266e4:	ldr	r3, [r3, #8]
   266e8:	cmp	r8, #128	; 0x80
   266ec:	add	r3, r3, #4
   266f0:	ldr	r3, [r0, r3, lsl #2]
   266f4:	bne	26708 <myhtml_tree_element_in_scope_by_node@@Base+0x68>
   266f8:	tst	r3, #128	; 0x80
   266fc:	bne	266bc <myhtml_tree_element_in_scope_by_node@@Base+0x1c>
   26700:	mov	r0, #0
   26704:	pop	{r4, r5, r6, r7, r8, pc}
   26708:	tst	r8, r3
   2670c:	beq	266bc <myhtml_tree_element_in_scope_by_node@@Base+0x1c>
   26710:	b	26700 <myhtml_tree_element_in_scope_by_node@@Base+0x60>
   26714:	mov	r0, #1
   26718:	pop	{r4, r5, r6, r7, r8, pc}

0002671c <myhtml_tree_list_init@@Base>:
   2671c:	push	{r4, lr}
   26720:	mov	r0, #12
   26724:	bl	10c28 <mycore_malloc@plt>
   26728:	mov	r4, r0
   2672c:	mov	r3, #0
   26730:	mov	r0, #16384	; 0x4000
   26734:	str	r3, [r4, #4]
   26738:	mov	r3, #4096	; 0x1000
   2673c:	str	r3, [r4, #8]
   26740:	bl	10c28 <mycore_malloc@plt>
   26744:	str	r0, [r4]
   26748:	mov	r0, r4
   2674c:	pop	{r4, pc}

00026750 <myhtml_tree_list_clean@@Base>:
   26750:	mov	r3, #0
   26754:	str	r3, [r0, #4]
   26758:	bx	lr

0002675c <myhtml_tree_list_destroy@@Base>:
   2675c:	push	{r4, r5, r6, lr}
   26760:	subs	r4, r0, #0
   26764:	beq	26790 <myhtml_tree_list_destroy@@Base+0x34>
   26768:	mov	r5, r1
   2676c:	ldr	r0, [r4]
   26770:	cmp	r0, #0
   26774:	beq	2677c <myhtml_tree_list_destroy@@Base+0x20>
   26778:	bl	10d60 <mycore_free@plt>
   2677c:	cmp	r5, #0
   26780:	beq	26790 <myhtml_tree_list_destroy@@Base+0x34>
   26784:	mov	r0, r4
   26788:	mov	r4, #0
   2678c:	bl	10d60 <mycore_free@plt>
   26790:	mov	r0, r4
   26794:	pop	{r4, r5, r6, pc}

00026798 <myhtml_tree_list_append@@Base>:
   26798:	push	{r4, r5, r6, lr}
   2679c:	mov	r5, r1
   267a0:	mov	r4, r0
   267a4:	ldr	r3, [r0, #4]
   267a8:	ldr	r1, [r0, #8]
   267ac:	cmp	r3, r1
   267b0:	bcc	267d0 <myhtml_tree_list_append@@Base+0x38>
   267b4:	lsl	r3, r1, #1
   267b8:	ldr	r0, [r0]
   267bc:	lsl	r1, r1, #3
   267c0:	str	r3, [r4, #8]
   267c4:	bl	fb84 <mycore_realloc@plt>
   267c8:	cmp	r0, #0
   267cc:	strne	r0, [r4]
   267d0:	ldr	r3, [r4]
   267d4:	ldr	r2, [r4, #4]
   267d8:	str	r5, [r3, r2, lsl #2]
   267dc:	ldr	r3, [r4, #4]
   267e0:	add	r3, r3, #1
   267e4:	str	r3, [r4, #4]
   267e8:	pop	{r4, r5, r6, pc}

000267ec <myhtml_tree_list_insert_by_index@@Base>:
   267ec:	push	{r4, r5, r6, r7, r8, lr}
   267f0:	mov	r6, r1
   267f4:	mov	r4, r0
   267f8:	mov	r7, r2
   267fc:	ldr	r3, [r0, #4]
   26800:	ldr	r1, [r0, #8]
   26804:	cmp	r3, r1
   26808:	bcc	26828 <myhtml_tree_list_insert_by_index@@Base+0x3c>
   2680c:	lsl	r3, r1, #1
   26810:	ldr	r0, [r0]
   26814:	lsl	r1, r1, #3
   26818:	str	r3, [r4, #8]
   2681c:	bl	fb84 <mycore_realloc@plt>
   26820:	cmp	r0, #0
   26824:	strne	r0, [r4]
   26828:	ldr	r0, [r4]
   2682c:	add	r3, r7, #1
   26830:	lsl	r3, r3, #2
   26834:	ldr	r1, [r4, #4]
   26838:	sub	r5, r3, #4
   2683c:	sub	r2, r1, r7
   26840:	add	r1, r0, r5
   26844:	lsl	r2, r2, #2
   26848:	add	r0, r0, r3
   2684c:	bl	fe18 <memmove@plt>
   26850:	ldr	r3, [r4]
   26854:	str	r6, [r3, r5]
   26858:	ldr	r3, [r4, #4]
   2685c:	add	r3, r3, #1
   26860:	str	r3, [r4, #4]
   26864:	pop	{r4, r5, r6, r7, r8, pc}

00026868 <myhtml_tree_list_append_after_index@@Base>:
   26868:	add	r2, r2, #1
   2686c:	b	10250 <myhtml_tree_list_insert_by_index@plt>

00026870 <myhtml_tree_list_current_node@@Base>:
   26870:	ldr	r3, [r0, #4]
   26874:	cmp	r3, #0
   26878:	ldrne	r3, [r0, #4]
   2687c:	ldrne	r2, [r0]
   26880:	subne	r3, r3, #-1073741823	; 0xc0000001
   26884:	ldrne	r0, [r2, r3, lsl #2]
   26888:	moveq	r0, r3
   2688c:	bx	lr

00026890 <myhtml_tree_open_elements_init@@Base>:
   26890:	b	107f0 <myhtml_tree_list_init@plt>

00026894 <myhtml_tree_open_elements_clean@@Base>:
   26894:	ldr	r3, [r0, #128]	; 0x80
   26898:	mov	r2, #0
   2689c:	str	r2, [r3, #4]
   268a0:	bx	lr

000268a4 <myhtml_tree_open_elements_destroy@@Base>:
   268a4:	mov	r1, #1
   268a8:	ldr	r0, [r0, #128]	; 0x80
   268ac:	b	10688 <myhtml_tree_list_destroy@plt>

000268b0 <myhtml_tree_current_node@@Base>:
   268b0:	ldr	r2, [r0, #128]	; 0x80
   268b4:	ldr	r0, [r2, #4]
   268b8:	cmp	r0, #0
   268bc:	ldrne	r3, [r2, #4]
   268c0:	ldrne	r2, [r2]
   268c4:	subne	r3, r3, #-1073741823	; 0xc0000001
   268c8:	ldrne	r0, [r2, r3, lsl #2]
   268cc:	bx	lr

000268d0 <myhtml_tree_adjusted_current_node@@Base>:
   268d0:	ldr	r3, [r0, #128]	; 0x80
   268d4:	ldr	r3, [r3, #4]
   268d8:	cmp	r3, #1
   268dc:	bne	268ec <myhtml_tree_adjusted_current_node@@Base+0x1c>
   268e0:	ldr	r3, [r0, #88]	; 0x58
   268e4:	cmp	r3, #0
   268e8:	bne	268f0 <myhtml_tree_adjusted_current_node@@Base+0x20>
   268ec:	b	105bc <myhtml_tree_current_node@plt>
   268f0:	mov	r0, r3
   268f4:	bx	lr

000268f8 <myhtml_tree_open_elements_append@@Base>:
   268f8:	ldr	r0, [r0, #128]	; 0x80
   268fc:	b	101c0 <myhtml_tree_list_append@plt>

00026900 <myhtml_tree_node_insert_root@@Base>:
   26900:	push	{r4, r5, r6, r7, r8, lr}
   26904:	mov	r6, r1
   26908:	mov	r5, r0
   2690c:	mov	r7, r2
   26910:	bl	ff80 <myhtml_tree_node_create@plt>
   26914:	cmp	r6, #0
   26918:	mov	r4, r0
   2691c:	ldrne	r3, [r6]
   26920:	moveq	r3, #65	; 0x41
   26924:	mov	r1, r0
   26928:	ldr	r0, [r5, #84]	; 0x54
   2692c:	stmib	r4, {r3, r7}
   26930:	str	r6, [r4, #32]
   26934:	bl	1064c <myhtml_tree_node_add_child@plt>
   26938:	mov	r0, r5
   2693c:	mov	r1, r4
   26940:	bl	1091c <myhtml_tree_open_elements_append@plt>
   26944:	mov	r0, r4
   26948:	str	r4, [r5, #96]	; 0x60
   2694c:	pop	{r4, r5, r6, r7, r8, pc}

00026950 <myhtml_tree_open_elements_append_after_index@@Base>:
   26950:	ldr	r0, [r0, #128]	; 0x80
   26954:	b	10958 <myhtml_tree_list_append_after_index@plt>

00026958 <myhtml_tree_open_elements_pop@@Base>:
   26958:	ldr	r3, [r0, #128]	; 0x80
   2695c:	ldr	r2, [r3, #4]
   26960:	cmp	r2, #0
   26964:	ldrne	r2, [r3, #4]
   26968:	subne	r2, r2, #1
   2696c:	strne	r2, [r3, #4]
   26970:	bx	lr

00026974 <myhtml_tree_open_elements_remove@@Base>:
   26974:	ldr	ip, [r0, #128]	; 0x80
   26978:	push	{r4, r5, r6, lr}
   2697c:	ldr	r5, [ip]
   26980:	ldr	r3, [ip, #4]
   26984:	add	lr, r5, r3, lsl #2
   26988:	cmp	r3, #0
   2698c:	popeq	{r4, r5, r6, pc}
   26990:	sub	r6, r3, #1
   26994:	ldr	r2, [lr, #-4]!
   26998:	cmp	r2, r1
   2699c:	bne	269d0 <myhtml_tree_open_elements_remove@@Base+0x5c>
   269a0:	ldr	r2, [ip, #4]
   269a4:	mov	r4, r0
   269a8:	add	r1, r5, r3, lsl #2
   269ac:	mov	r0, lr
   269b0:	sub	r2, r2, r6
   269b4:	lsl	r2, r2, #2
   269b8:	bl	fe18 <memmove@plt>
   269bc:	ldr	r2, [r4, #128]	; 0x80
   269c0:	ldr	r3, [r2, #4]
   269c4:	sub	r3, r3, #1
   269c8:	str	r3, [r2, #4]
   269cc:	pop	{r4, r5, r6, pc}
   269d0:	mov	r3, r6
   269d4:	b	26988 <myhtml_tree_open_elements_remove@@Base+0x14>

000269d8 <myhtml_tree_open_elements_pop_until@@Base>:
   269d8:	ldr	r0, [r0, #128]	; 0x80
   269dc:	push	{lr}		; (str lr, [sp, #-4]!)
   269e0:	ldr	lr, [r0]
   269e4:	ldr	ip, [r0, #4]
   269e8:	cmp	ip, #0
   269ec:	popeq	{pc}		; (ldreq pc, [sp], #4)
   269f0:	ldr	ip, [r0, #4]
   269f4:	sub	ip, ip, #1
   269f8:	str	ip, [r0, #4]
   269fc:	ldr	ip, [r0, #4]
   26a00:	ldr	ip, [lr, ip, lsl #2]
   26a04:	ldr	ip, [ip, #4]
   26a08:	cmp	ip, r1
   26a0c:	bne	269e4 <myhtml_tree_open_elements_pop_until@@Base+0xc>
   26a10:	cmp	r2, #0
   26a14:	beq	26a2c <myhtml_tree_open_elements_pop_until@@Base+0x54>
   26a18:	ldr	ip, [r0, #4]
   26a1c:	ldr	ip, [lr, ip, lsl #2]
   26a20:	ldr	ip, [ip, #8]
   26a24:	cmp	ip, r2
   26a28:	bne	269e4 <myhtml_tree_open_elements_pop_until@@Base+0xc>
   26a2c:	cmp	r3, #0
   26a30:	ldrne	r3, [r0, #4]
   26a34:	addne	r3, r3, #1
   26a38:	strne	r3, [r0, #4]
   26a3c:	pop	{pc}		; (ldr pc, [sp], #4)

00026a40 <myhtml_tree_open_elements_pop_until_by_node@@Base>:
   26a40:	ldr	r3, [r0, #128]	; 0x80
   26a44:	ldr	ip, [r3]
   26a48:	ldr	r0, [r3, #4]
   26a4c:	cmp	r0, #0
   26a50:	bxeq	lr
   26a54:	ldr	r0, [r3, #4]
   26a58:	sub	r0, r0, #1
   26a5c:	str	r0, [r3, #4]
   26a60:	ldr	r0, [r3, #4]
   26a64:	ldr	r0, [ip, r0, lsl #2]
   26a68:	cmp	r0, r1
   26a6c:	bne	26a48 <myhtml_tree_open_elements_pop_until_by_node@@Base+0x8>
   26a70:	cmp	r2, #0
   26a74:	ldrne	r2, [r3, #4]
   26a78:	addne	r2, r2, #1
   26a7c:	strne	r2, [r3, #4]
   26a80:	bx	lr

00026a84 <myhtml_tree_open_elements_pop_until_by_index@@Base>:
   26a84:	ldr	r3, [r0, #128]	; 0x80
   26a88:	ldr	r0, [r3, #4]
   26a8c:	cmp	r0, #0
   26a90:	bxeq	lr
   26a94:	ldr	r0, [r3, #4]
   26a98:	sub	r0, r0, #1
   26a9c:	str	r0, [r3, #4]
   26aa0:	ldr	r0, [r3, #4]
   26aa4:	cmp	r0, r1
   26aa8:	bne	26a88 <myhtml_tree_open_elements_pop_until_by_index@@Base+0x4>
   26aac:	cmp	r2, #0
   26ab0:	ldrne	r2, [r3, #4]
   26ab4:	addne	r2, r2, #1
   26ab8:	strne	r2, [r3, #4]
   26abc:	bx	lr

00026ac0 <myhtml_tree_open_elements_find_reverse@@Base>:
   26ac0:	ldr	r3, [r0, #128]	; 0x80
   26ac4:	ldr	ip, [r3]
   26ac8:	ldr	r0, [r3, #4]
   26acc:	cmp	r0, #0
   26ad0:	bxeq	lr
   26ad4:	sub	r0, r0, #1
   26ad8:	ldr	r3, [ip, r0, lsl #2]
   26adc:	cmp	r3, r1
   26ae0:	bne	26acc <myhtml_tree_open_elements_find_reverse@@Base+0xc>
   26ae4:	cmp	r2, #0
   26ae8:	strne	r0, [r2]
   26aec:	mov	r0, #1
   26af0:	bx	lr

00026af4 <myhtml_tree_open_elements_find@@Base>:
   26af4:	ldr	r0, [r0, #128]	; 0x80
   26af8:	mov	r3, #0
   26afc:	push	{lr}		; (str lr, [sp, #-4]!)
   26b00:	ldr	lr, [r0]
   26b04:	ldr	ip, [r0, #4]
   26b08:	cmp	ip, r3
   26b0c:	bhi	26b18 <myhtml_tree_open_elements_find@@Base+0x24>
   26b10:	mov	r0, #0
   26b14:	pop	{pc}		; (ldr pc, [sp], #4)
   26b18:	ldr	ip, [lr, r3, lsl #2]
   26b1c:	cmp	ip, r1
   26b20:	bne	26b34 <myhtml_tree_open_elements_find@@Base+0x40>
   26b24:	cmp	r2, #0
   26b28:	mov	r0, #1
   26b2c:	strne	r3, [r2]
   26b30:	pop	{pc}		; (ldr pc, [sp], #4)
   26b34:	add	r3, r3, #1
   26b38:	b	26b04 <myhtml_tree_open_elements_find@@Base+0x10>

00026b3c <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base>:
   26b3c:	ldr	r0, [r0, #128]	; 0x80
   26b40:	push	{r4, lr}
   26b44:	ldr	lr, [r0]
   26b48:	ldr	ip, [r0, #4]
   26b4c:	cmp	ip, #0
   26b50:	bne	26b5c <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x20>
   26b54:	mov	r0, ip
   26b58:	pop	{r4, pc}
   26b5c:	sub	ip, ip, #1
   26b60:	ldr	r0, [lr, ip, lsl #2]
   26b64:	ldr	r4, [r0, #4]
   26b68:	cmp	r4, r1
   26b6c:	bne	26b4c <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x10>
   26b70:	cmp	r2, #0
   26b74:	beq	26b84 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x48>
   26b78:	ldr	r4, [r0, #8]
   26b7c:	cmp	r4, r2
   26b80:	bne	26b4c <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x10>
   26b84:	cmp	r3, #0
   26b88:	strne	ip, [r3]
   26b8c:	pop	{r4, pc}

00026b90 <myhtml_tree_open_elements_find_by_tag_idx@@Base>:
   26b90:	push	{r4, r5, lr}
   26b94:	mov	ip, #0
   26b98:	ldr	lr, [r0, #128]	; 0x80
   26b9c:	ldr	r4, [lr]
   26ba0:	ldr	r0, [lr, #4]
   26ba4:	cmp	r0, ip
   26ba8:	bhi	26bb4 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x24>
   26bac:	mov	r0, #0
   26bb0:	pop	{r4, r5, pc}
   26bb4:	ldr	r0, [r4, ip, lsl #2]
   26bb8:	ldr	r5, [r0, #4]
   26bbc:	cmp	r5, r1
   26bc0:	bne	26be8 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x58>
   26bc4:	cmp	r2, #0
   26bc8:	bne	26bdc <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x4c>
   26bcc:	cmp	r3, #0
   26bd0:	popeq	{r4, r5, pc}
   26bd4:	str	ip, [r3]
   26bd8:	pop	{r4, r5, pc}
   26bdc:	ldr	r5, [r0, #8]
   26be0:	cmp	r5, r2
   26be4:	beq	26bcc <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x3c>
   26be8:	add	ip, ip, #1
   26bec:	b	26ba0 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x10>

00026bf0 <myhtml_tree_generate_implied_end_tags@@Base>:
   26bf0:	ldr	r3, [r0, #128]	; 0x80
   26bf4:	ldr	r3, [r3, #4]
   26bf8:	cmp	r3, #0
   26bfc:	bxeq	lr
   26c00:	push	{r4, r5, r6, lr}
   26c04:	mov	r4, r0
   26c08:	mov	r6, r1
   26c0c:	mov	r5, r2
   26c10:	b	26c68 <myhtml_tree_generate_implied_end_tags@@Base+0x78>
   26c14:	mov	r0, r4
   26c18:	bl	105bc <myhtml_tree_current_node@plt>
   26c1c:	ldr	r3, [r0, #4]
   26c20:	cmp	r3, #97	; 0x61
   26c24:	bhi	26c90 <myhtml_tree_generate_implied_end_tags@@Base+0xa0>
   26c28:	cmp	r3, #96	; 0x60
   26c2c:	bcs	26c44 <myhtml_tree_generate_implied_end_tags@@Base+0x54>
   26c30:	cmp	r3, #44	; 0x2c
   26c34:	beq	26c44 <myhtml_tree_generate_implied_end_tags@@Base+0x54>
   26c38:	bhi	26c7c <myhtml_tree_generate_implied_end_tags@@Base+0x8c>
   26c3c:	cmp	r3, #36	; 0x24
   26c40:	popne	{r4, r5, r6, pc}
   26c44:	cmp	r6, r3
   26c48:	bne	26c60 <myhtml_tree_generate_implied_end_tags@@Base+0x70>
   26c4c:	cmp	r5, #0
   26c50:	popeq	{r4, r5, r6, pc}
   26c54:	ldr	r3, [r0, #8]
   26c58:	cmp	r5, r3
   26c5c:	popeq	{r4, r5, r6, pc}
   26c60:	mov	r0, r4
   26c64:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   26c68:	ldr	r3, [r4, #128]	; 0x80
   26c6c:	ldr	r3, [r3, #4]
   26c70:	cmp	r3, #0
   26c74:	bne	26c14 <myhtml_tree_generate_implied_end_tags@@Base+0x24>
   26c78:	pop	{r4, r5, r6, pc}
   26c7c:	cmp	r3, #77	; 0x4d
   26c80:	beq	26c44 <myhtml_tree_generate_implied_end_tags@@Base+0x54>
   26c84:	cmp	r3, #85	; 0x55
   26c88:	beq	26c44 <myhtml_tree_generate_implied_end_tags@@Base+0x54>
   26c8c:	pop	{r4, r5, r6, pc}
   26c90:	cmp	r3, #99	; 0x63
   26c94:	beq	26c44 <myhtml_tree_generate_implied_end_tags@@Base+0x54>
   26c98:	popcc	{r4, r5, r6, pc}
   26c9c:	sub	r2, r3, #105	; 0x69
   26ca0:	cmp	r2, #3
   26ca4:	bls	26c44 <myhtml_tree_generate_implied_end_tags@@Base+0x54>
   26ca8:	pop	{r4, r5, r6, pc}

00026cac <myhtml_tree_generate_all_implied_end_tags@@Base>:
   26cac:	ldr	r3, [r0, #128]	; 0x80
   26cb0:	ldr	r3, [r3, #4]
   26cb4:	cmp	r3, #0
   26cb8:	bxeq	lr
   26cbc:	push	{r4, r5, r6, lr}
   26cc0:	mov	r4, r0
   26cc4:	mov	r6, r1
   26cc8:	mov	r5, r2
   26ccc:	b	26d30 <myhtml_tree_generate_all_implied_end_tags@@Base+0x84>
   26cd0:	mov	r0, r4
   26cd4:	bl	105bc <myhtml_tree_current_node@plt>
   26cd8:	ldr	r3, [r0, #4]
   26cdc:	cmp	r3, #99	; 0x63
   26ce0:	beq	26d0c <myhtml_tree_generate_all_implied_end_tags@@Base+0x60>
   26ce4:	bhi	26d60 <myhtml_tree_generate_all_implied_end_tags@@Base+0xb4>
   26ce8:	cmp	r3, #44	; 0x2c
   26cec:	beq	26d0c <myhtml_tree_generate_all_implied_end_tags@@Base+0x60>
   26cf0:	bhi	26d44 <myhtml_tree_generate_all_implied_end_tags@@Base+0x98>
   26cf4:	cmp	r3, #32
   26cf8:	beq	26d0c <myhtml_tree_generate_all_implied_end_tags@@Base+0x60>
   26cfc:	cmp	r3, #36	; 0x24
   26d00:	beq	26d0c <myhtml_tree_generate_all_implied_end_tags@@Base+0x60>
   26d04:	cmp	r3, #27
   26d08:	popne	{r4, r5, r6, pc}
   26d0c:	cmp	r3, r6
   26d10:	bne	26d28 <myhtml_tree_generate_all_implied_end_tags@@Base+0x7c>
   26d14:	cmp	r5, #0
   26d18:	popeq	{r4, r5, r6, pc}
   26d1c:	ldr	r3, [r0, #8]
   26d20:	cmp	r3, r5
   26d24:	popeq	{r4, r5, r6, pc}
   26d28:	mov	r0, r4
   26d2c:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   26d30:	ldr	r3, [r4, #128]	; 0x80
   26d34:	ldr	r3, [r3, #4]
   26d38:	cmp	r3, #0
   26d3c:	bne	26cd0 <myhtml_tree_generate_all_implied_end_tags@@Base+0x24>
   26d40:	pop	{r4, r5, r6, pc}
   26d44:	cmp	r3, #77	; 0x4d
   26d48:	beq	26d0c <myhtml_tree_generate_all_implied_end_tags@@Base+0x60>
   26d4c:	popcc	{r4, r5, r6, pc}
   26d50:	sub	r2, r3, #96	; 0x60
   26d54:	cmp	r2, #1
   26d58:	bls	26d0c <myhtml_tree_generate_all_implied_end_tags@@Base+0x60>
   26d5c:	pop	{r4, r5, r6, pc}
   26d60:	cmp	r3, #127	; 0x7f
   26d64:	bhi	26d80 <myhtml_tree_generate_all_implied_end_tags@@Base+0xd4>
   26d68:	cmp	r3, #126	; 0x7e
   26d6c:	bcs	26d0c <myhtml_tree_generate_all_implied_end_tags@@Base+0x60>
   26d70:	sub	r2, r3, #105	; 0x69
   26d74:	cmp	r2, #3
   26d78:	bls	26d0c <myhtml_tree_generate_all_implied_end_tags@@Base+0x60>
   26d7c:	pop	{r4, r5, r6, pc}
   26d80:	cmp	r3, #130	; 0x82
   26d84:	popcc	{r4, r5, r6, pc}
   26d88:	cmp	r3, #132	; 0x84
   26d8c:	bls	26d0c <myhtml_tree_generate_all_implied_end_tags@@Base+0x60>
   26d90:	cmp	r3, #135	; 0x87
   26d94:	beq	26d0c <myhtml_tree_generate_all_implied_end_tags@@Base+0x60>
   26d98:	pop	{r4, r5, r6, pc}

00026d9c <myhtml_tree_reset_insertion_mode_appropriately@@Base>:
   26d9c:	ldr	r3, [r0, #128]	; 0x80
   26da0:	ldr	r2, [r3, #4]
   26da4:	cmp	r2, #0
   26da8:	bxeq	lr
   26dac:	ldr	ip, [r3]
   26db0:	ldr	r2, [r3, #4]
   26db4:	cmp	r2, #0
   26db8:	bne	26f0c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x170>
   26dbc:	str	r2, [r0, #168]	; 0xa8
   26dc0:	bx	lr
   26dc4:	ldr	r3, [r3, #4]
   26dc8:	cmp	r3, #114	; 0x72
   26dcc:	bne	26e10 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x74>
   26dd0:	cmp	r1, #0
   26dd4:	beq	26de4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x48>
   26dd8:	mov	r3, #15
   26ddc:	str	r3, [r0, #168]	; 0xa8
   26de0:	pop	{pc}		; (ldr pc, [sp], #4)
   26de4:	cmp	r2, #0
   26de8:	beq	26dd8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x3c>
   26dec:	sub	r2, r2, #1
   26df0:	ldr	r3, [ip, r2, lsl #2]
   26df4:	ldr	r3, [r3, #4]
   26df8:	cmp	r3, #128	; 0x80
   26dfc:	beq	26dd8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x3c>
   26e00:	cmp	r3, #125	; 0x7d
   26e04:	bne	26de4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x48>
   26e08:	mov	r3, #16
   26e0c:	b	26ddc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x40>
   26e10:	cmp	r3, #125	; 0x7d
   26e14:	beq	26ed0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x134>
   26e18:	bhi	26e60 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0xc4>
   26e1c:	cmp	r3, #32
   26e20:	beq	26ec8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x12c>
   26e24:	bhi	26e40 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0xa4>
   26e28:	cmp	r3, #23
   26e2c:	beq	26f48 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1ac>
   26e30:	cmp	r3, #27
   26e34:	bne	26f40 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1a4>
   26e38:	mov	r3, #10
   26e3c:	b	26ddc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x40>
   26e40:	cmp	r3, #61	; 0x3d
   26e44:	beq	26ed8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x13c>
   26e48:	cmp	r3, #65	; 0x41
   26e4c:	beq	26ee8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x14c>
   26e50:	cmp	r3, #54	; 0x36
   26e54:	bne	26f40 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1a4>
   26e58:	mov	r3, #19
   26e5c:	b	26ddc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x40>
   26e60:	cmp	r3, #130	; 0x82
   26e64:	beq	26ec0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x124>
   26e68:	bhi	26e94 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0xf8>
   26e6c:	cmp	r3, #127	; 0x7f
   26e70:	beq	26eb0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x114>
   26e74:	bcc	26ec0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x124>
   26e78:	cmp	r3, #128	; 0x80
   26e7c:	bne	26f40 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1a4>
   26e80:	ldr	r2, [r0, #140]	; 0x8c
   26e84:	ldrd	r2, [r2]
   26e88:	sub	r3, r3, #-1073741823	; 0xc0000001
   26e8c:	ldr	r3, [r2, r3, lsl #2]
   26e90:	b	26ddc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x40>
   26e94:	cmp	r3, #132	; 0x84
   26e98:	beq	26ec0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x124>
   26e9c:	bcc	26eb0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x114>
   26ea0:	cmp	r3, #135	; 0x87
   26ea4:	bne	26f40 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1a4>
   26ea8:	mov	r3, #13
   26eac:	b	26ddc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x40>
   26eb0:	cmp	r1, #0
   26eb4:	moveq	r3, #14
   26eb8:	bne	26f48 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1ac>
   26ebc:	b	26ddc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x40>
   26ec0:	mov	r3, #12
   26ec4:	b	26ddc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x40>
   26ec8:	mov	r3, #11
   26ecc:	b	26ddc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x40>
   26ed0:	mov	r3, #8
   26ed4:	b	26ddc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x40>
   26ed8:	cmp	r1, #0
   26edc:	moveq	r3, #3
   26ee0:	bne	26f48 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x1ac>
   26ee4:	b	26ddc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x40>
   26ee8:	ldr	r3, [r0, #92]	; 0x5c
   26eec:	cmp	r3, #0
   26ef0:	movne	r3, #5
   26ef4:	moveq	r3, #2
   26ef8:	b	26ddc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x40>
   26efc:	cmp	r2, #0
   26f00:	bne	26f10 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x174>
   26f04:	str	r2, [r0, #168]	; 0xa8
   26f08:	pop	{pc}		; (ldr pc, [sp], #4)
   26f0c:	push	{lr}		; (str lr, [sp, #-4]!)
   26f10:	sub	r2, r2, #1
   26f14:	cmp	r2, #0
   26f18:	movne	r1, #0
   26f1c:	ldr	r3, [ip, r2, lsl #2]
   26f20:	bne	26f34 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x198>
   26f24:	ldr	r1, [r0, #88]	; 0x58
   26f28:	cmp	r1, #0
   26f2c:	movne	r3, r1
   26f30:	mov	r1, #1
   26f34:	ldr	lr, [r3, #8]
   26f38:	cmp	lr, #1
   26f3c:	beq	26dc4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x28>
   26f40:	cmp	r1, #0
   26f44:	beq	26efc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x160>
   26f48:	mov	r3, #6
   26f4c:	b	26ddc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x40>

00026f50 <myhtml_tree_active_formatting_init@@Base>:
   26f50:	b	107f0 <myhtml_tree_list_init@plt>

00026f54 <myhtml_tree_active_formatting_clean@@Base>:
   26f54:	ldr	r3, [r0, #124]	; 0x7c
   26f58:	mov	r2, #0
   26f5c:	str	r2, [r3, #4]
   26f60:	bx	lr

00026f64 <myhtml_tree_active_formatting_destroy@@Base>:
   26f64:	mov	r1, #1
   26f68:	ldr	r0, [r0, #124]	; 0x7c
   26f6c:	b	10688 <myhtml_tree_list_destroy@plt>

00026f70 <myhtml_tree_active_formatting_is_marker@@Base>:
   26f70:	ldr	r3, [r0]
   26f74:	ldr	r3, [r3, #36]	; 0x24
   26f78:	cmp	r3, r1
   26f7c:	beq	26fc8 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   26f80:	ldr	r0, [r1, #4]
   26f84:	cmp	r0, #83	; 0x53
   26f88:	beq	26fc8 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   26f8c:	bhi	26fb0 <myhtml_tree_active_formatting_is_marker@@Base+0x40>
   26f90:	cmp	r0, #25
   26f94:	beq	26fc8 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   26f98:	cmp	r0, #27
   26f9c:	beq	26fc8 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   26fa0:	cmp	r0, #9
   26fa4:	movne	r0, #0
   26fa8:	moveq	r0, #1
   26fac:	bx	lr
   26fb0:	cmp	r0, #127	; 0x7f
   26fb4:	beq	26fc8 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   26fb8:	cmp	r0, #131	; 0x83
   26fbc:	beq	26fc8 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   26fc0:	cmp	r0, #94	; 0x5e
   26fc4:	b	26fa4 <myhtml_tree_active_formatting_is_marker@@Base+0x34>
   26fc8:	mov	r0, #1
   26fcc:	bx	lr

00026fd0 <myhtml_tree_active_formatting_append@@Base>:
   26fd0:	ldr	r0, [r0, #124]	; 0x7c
   26fd4:	b	101c0 <myhtml_tree_list_append@plt>

00026fd8 <myhtml_tree_active_formatting_pop@@Base>:
   26fd8:	ldr	r3, [r0, #124]	; 0x7c
   26fdc:	ldr	r2, [r3, #4]
   26fe0:	cmp	r2, #0
   26fe4:	ldrne	r2, [r3, #4]
   26fe8:	subne	r2, r2, #1
   26fec:	strne	r2, [r3, #4]
   26ff0:	bx	lr

00026ff4 <myhtml_tree_active_formatting_remove@@Base>:
   26ff4:	ldr	ip, [r0, #124]	; 0x7c
   26ff8:	push	{r4, r5, r6, lr}
   26ffc:	ldr	r5, [ip]
   27000:	ldr	r3, [ip, #4]
   27004:	add	lr, r5, r3, lsl #2
   27008:	cmp	r3, #0
   2700c:	popeq	{r4, r5, r6, pc}
   27010:	sub	r6, r3, #1
   27014:	ldr	r2, [lr, #-4]!
   27018:	cmp	r2, r1
   2701c:	bne	27050 <myhtml_tree_active_formatting_remove@@Base+0x5c>
   27020:	ldr	r2, [ip, #4]
   27024:	mov	r4, r0
   27028:	add	r1, r5, r3, lsl #2
   2702c:	mov	r0, lr
   27030:	sub	r2, r2, r6
   27034:	lsl	r2, r2, #2
   27038:	bl	fe18 <memmove@plt>
   2703c:	ldr	r2, [r4, #124]	; 0x7c
   27040:	ldr	r3, [r2, #4]
   27044:	sub	r3, r3, #1
   27048:	str	r3, [r2, #4]
   2704c:	pop	{r4, r5, r6, pc}
   27050:	mov	r3, r6
   27054:	b	27008 <myhtml_tree_active_formatting_remove@@Base+0x14>

00027058 <myhtml_tree_active_formatting_remove_by_index@@Base>:
   27058:	ldr	r2, [r0, #124]	; 0x7c
   2705c:	lsl	r3, r1, #2
   27060:	push	{r4, lr}
   27064:	mov	r4, r0
   27068:	ldr	r0, [r2]
   2706c:	ldr	r2, [r2, #4]
   27070:	sub	r2, r2, r1
   27074:	add	r1, r3, #4
   27078:	lsl	r2, r2, #2
   2707c:	add	r1, r0, r1
   27080:	add	r0, r0, r3
   27084:	bl	fe18 <memmove@plt>
   27088:	ldr	r2, [r4, #124]	; 0x7c
   2708c:	ldr	r3, [r2, #4]
   27090:	sub	r3, r3, #1
   27094:	str	r3, [r2, #4]
   27098:	pop	{r4, pc}

0002709c <myhtml_tree_active_formatting_append_with_check@@Base>:
   2709c:	ldr	r3, [r0, #124]	; 0x7c
   270a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   270a4:	mov	r5, r0
   270a8:	mov	r6, r1
   270ac:	mov	r8, #0
   270b0:	ldr	r9, [r3]
   270b4:	ldr	r4, [r3, #4]
   270b8:	cmp	r4, #0
   270bc:	subne	r7, r4, #1
   270c0:	moveq	r7, r4
   270c4:	cmp	r4, #0
   270c8:	beq	270e4 <myhtml_tree_active_formatting_append_with_check@@Base+0x48>
   270cc:	sub	r4, r4, #1
   270d0:	mov	r0, r5
   270d4:	ldr	r1, [r9, r4, lsl #2]
   270d8:	bl	10808 <myhtml_tree_active_formatting_is_marker@plt>
   270dc:	cmp	r0, #0
   270e0:	beq	27108 <myhtml_tree_active_formatting_append_with_check@@Base+0x6c>
   270e4:	cmp	r8, #2
   270e8:	bls	270f8 <myhtml_tree_active_formatting_append_with_check@@Base+0x5c>
   270ec:	mov	r1, r7
   270f0:	mov	r0, r5
   270f4:	bl	107d8 <myhtml_tree_active_formatting_remove_by_index@plt>
   270f8:	mov	r1, r6
   270fc:	mov	r0, r5
   27100:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   27104:	b	10070 <myhtml_tree_active_formatting_append@plt>
   27108:	ldr	r3, [r9, r4, lsl #2]
   2710c:	ldr	r1, [r3, #32]
   27110:	cmp	r1, #0
   27114:	beq	270c4 <myhtml_tree_active_formatting_append_with_check@@Base+0x28>
   27118:	ldr	r3, [r6, #32]
   2711c:	cmp	r3, #0
   27120:	beq	270c4 <myhtml_tree_active_formatting_append_with_check@@Base+0x28>
   27124:	ldr	r0, [r5, #8]
   27128:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   2712c:	ldr	r0, [r5, #8]
   27130:	ldr	r1, [r6, #32]
   27134:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   27138:	ldr	r3, [r9, r4, lsl #2]
   2713c:	ldr	r2, [r6, #8]
   27140:	ldr	r1, [r3, #8]
   27144:	cmp	r1, r2
   27148:	bne	270c4 <myhtml_tree_active_formatting_append_with_check@@Base+0x28>
   2714c:	ldr	r1, [r3, #4]
   27150:	ldr	r2, [r6, #4]
   27154:	cmp	r1, r2
   27158:	bne	270c4 <myhtml_tree_active_formatting_append_with_check@@Base+0x28>
   2715c:	ldr	r0, [r3, #32]
   27160:	ldr	r1, [r6, #32]
   27164:	bl	10ac0 <myhtml_token_attr_compare@plt>
   27168:	cmp	r0, #0
   2716c:	addne	r8, r8, #1
   27170:	movne	r7, r4
   27174:	b	270c4 <myhtml_tree_active_formatting_append_with_check@@Base+0x28>

00027178 <myhtml_tree_active_formatting_current_node@@Base>:
   27178:	ldr	r2, [r0, #124]	; 0x7c
   2717c:	ldr	r0, [r2, #4]
   27180:	cmp	r0, #0
   27184:	ldrne	r3, [r2, #4]
   27188:	ldrne	r2, [r2]
   2718c:	subne	r3, r3, #-1073741823	; 0xc0000001
   27190:	ldrne	r0, [r2, r3, lsl #2]
   27194:	bx	lr

00027198 <myhtml_tree_active_formatting_find@@Base>:
   27198:	ldr	r3, [r0, #124]	; 0x7c
   2719c:	ldr	ip, [r3]
   271a0:	ldr	r0, [r3, #4]
   271a4:	cmp	r0, #0
   271a8:	bxeq	lr
   271ac:	sub	r0, r0, #1
   271b0:	ldr	r3, [ip, r0, lsl #2]
   271b4:	cmp	r3, r1
   271b8:	bne	271a4 <myhtml_tree_active_formatting_find@@Base+0xc>
   271bc:	cmp	r2, #0
   271c0:	strne	r0, [r2]
   271c4:	mov	r0, #1
   271c8:	bx	lr

000271cc <myhtml_tree_active_formatting_up_to_last_marker@@Base>:
   271cc:	ldr	r3, [r0, #124]	; 0x7c
   271d0:	ldr	r2, [r3, #4]
   271d4:	cmp	r2, #0
   271d8:	bxeq	lr
   271dc:	push	{r4, r5, r6, lr}
   271e0:	mov	r4, r0
   271e4:	ldr	r5, [r3]
   271e8:	ldr	r3, [r4, #124]	; 0x7c
   271ec:	ldr	r2, [r3, #4]
   271f0:	cmp	r2, #0
   271f4:	popeq	{r4, r5, r6, pc}
   271f8:	mov	r0, r4
   271fc:	ldr	r2, [r3, #4]
   27200:	sub	r2, r2, #1
   27204:	str	r2, [r3, #4]
   27208:	ldr	r3, [r3, #4]
   2720c:	ldr	r1, [r5, r3, lsl #2]
   27210:	bl	10808 <myhtml_tree_active_formatting_is_marker@plt>
   27214:	cmp	r0, #0
   27218:	beq	271e8 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x1c>
   2721c:	pop	{r4, r5, r6, pc}

00027220 <myhtml_tree_active_formatting_between_last_marker@@Base>:
   27220:	ldr	r3, [r0, #124]	; 0x7c
   27224:	push	{r4, r5, r6, r7, r8, lr}
   27228:	mov	r6, r0
   2722c:	mov	r8, r1
   27230:	mov	r7, r2
   27234:	ldr	r5, [r3]
   27238:	ldr	r4, [r3, #4]
   2723c:	cmp	r4, #0
   27240:	beq	2725c <myhtml_tree_active_formatting_between_last_marker@@Base+0x3c>
   27244:	sub	r4, r4, #1
   27248:	mov	r0, r6
   2724c:	ldr	r1, [r5, r4, lsl #2]
   27250:	bl	10808 <myhtml_tree_active_formatting_is_marker@plt>
   27254:	cmp	r0, #0
   27258:	beq	27264 <myhtml_tree_active_formatting_between_last_marker@@Base+0x44>
   2725c:	mov	r0, #0
   27260:	pop	{r4, r5, r6, r7, r8, pc}
   27264:	ldr	r0, [r5, r4, lsl #2]
   27268:	ldr	r3, [r0, #4]
   2726c:	cmp	r3, r8
   27270:	bne	2723c <myhtml_tree_active_formatting_between_last_marker@@Base+0x1c>
   27274:	ldr	r3, [r0, #8]
   27278:	cmp	r3, #1
   2727c:	bne	2723c <myhtml_tree_active_formatting_between_last_marker@@Base+0x1c>
   27280:	cmp	r7, #0
   27284:	strne	r4, [r7]
   27288:	pop	{r4, r5, r6, r7, r8, pc}

0002728c <myhtml_tree_appropriate_place_inserting@@Base>:
   2728c:	mov	r3, #0
   27290:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   27294:	subs	r4, r1, #0
   27298:	mov	r5, r0
   2729c:	mov	r7, r2
   272a0:	str	r3, [r2]
   272a4:	bne	272b0 <myhtml_tree_appropriate_place_inserting@@Base+0x24>
   272a8:	bl	105bc <myhtml_tree_current_node@plt>
   272ac:	mov	r4, r0
   272b0:	ldrb	r3, [r5, #188]	; 0xbc
   272b4:	cmp	r3, #0
   272b8:	beq	2732c <myhtml_tree_appropriate_place_inserting@@Base+0xa0>
   272bc:	ldr	r6, [r4, #8]
   272c0:	cmp	r6, #1
   272c4:	bne	2732c <myhtml_tree_appropriate_place_inserting@@Base+0xa0>
   272c8:	ldr	r3, [r4, #4]
   272cc:	sub	r3, r3, #125	; 0x7d
   272d0:	cmp	r3, #10
   272d4:	bhi	2732c <myhtml_tree_appropriate_place_inserting@@Base+0xa0>
   272d8:	movw	r2, #1187	; 0x4a3
   272dc:	ands	r3, r2, r6, lsl r3
   272e0:	beq	2732c <myhtml_tree_appropriate_place_inserting@@Base+0xa0>
   272e4:	mov	r3, sp
   272e8:	mov	r2, r6
   272ec:	mov	r1, #128	; 0x80
   272f0:	mov	r0, r5
   272f4:	bl	fc50 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   272f8:	mov	r4, r0
   272fc:	add	r3, sp, #4
   27300:	mov	r2, r6
   27304:	mov	r1, #125	; 0x7d
   27308:	mov	r0, r5
   2730c:	bl	fc50 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   27310:	cmp	r4, #0
   27314:	beq	27338 <myhtml_tree_appropriate_place_inserting@@Base+0xac>
   27318:	cmp	r0, #0
   2731c:	beq	2732c <myhtml_tree_appropriate_place_inserting@@Base+0xa0>
   27320:	ldrd	r2, [sp]
   27324:	cmp	r2, r3
   27328:	bls	2734c <myhtml_tree_appropriate_place_inserting@@Base+0xc0>
   2732c:	mov	r0, r4
   27330:	add	sp, sp, #12
   27334:	pop	{r4, r5, r6, r7, pc}
   27338:	cmp	r0, #0
   2733c:	ldreq	r3, [r5, #128]	; 0x80
   27340:	ldreq	r3, [r3]
   27344:	ldreq	r4, [r3]
   27348:	beq	2732c <myhtml_tree_appropriate_place_inserting@@Base+0xa0>
   2734c:	ldr	r3, [r0, #24]
   27350:	cmp	r3, #0
   27354:	beq	27374 <myhtml_tree_appropriate_place_inserting@@Base+0xe8>
   27358:	ldr	r4, [r0, #12]
   2735c:	cmp	r4, #0
   27360:	movne	r3, #2
   27364:	moveq	r3, #1
   27368:	moveq	r4, r0
   2736c:	str	r3, [r7]
   27370:	b	2732c <myhtml_tree_appropriate_place_inserting@@Base+0xa0>
   27374:	ldr	r2, [r5, #128]	; 0x80
   27378:	ldr	r3, [sp, #4]
   2737c:	ldr	r2, [r2]
   27380:	sub	r3, r3, #-1073741823	; 0xc0000001
   27384:	ldr	r4, [r2, r3, lsl #2]
   27388:	b	2732c <myhtml_tree_appropriate_place_inserting@@Base+0xa0>

0002738c <myhtml_tree_node_insert_by_token@@Base>:
   2738c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   27390:	mov	r6, r1
   27394:	mov	r5, r0
   27398:	mov	r7, r2
   2739c:	bl	ff80 <myhtml_tree_node_create@plt>
   273a0:	ldr	r3, [r6]
   273a4:	mov	r4, r0
   273a8:	add	r2, sp, #4
   273ac:	mov	r1, #0
   273b0:	mov	r0, r5
   273b4:	stmib	r4, {r3, r7}
   273b8:	str	r6, [r4, #32]
   273bc:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   273c0:	ldr	r2, [sp, #4]
   273c4:	mov	r1, r4
   273c8:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   273cc:	mov	r0, r5
   273d0:	mov	r1, r4
   273d4:	bl	1091c <myhtml_tree_open_elements_append@plt>
   273d8:	mov	r0, r4
   273dc:	add	sp, sp, #12
   273e0:	pop	{r4, r5, r6, r7, pc}

000273e4 <myhtml_tree_node_insert@@Base>:
   273e4:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   273e8:	mov	r5, r0
   273ec:	mov	r7, r1
   273f0:	mov	r6, r2
   273f4:	bl	ff80 <myhtml_tree_node_create@plt>
   273f8:	mov	r4, r0
   273fc:	mov	r1, #0
   27400:	add	r2, sp, #4
   27404:	mov	r0, r5
   27408:	str	r7, [r4, #4]
   2740c:	str	r6, [r4, #8]
   27410:	str	r1, [r4, #32]
   27414:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   27418:	ldr	r2, [sp, #4]
   2741c:	mov	r1, r4
   27420:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   27424:	mov	r0, r5
   27428:	mov	r1, r4
   2742c:	bl	1091c <myhtml_tree_open_elements_append@plt>
   27430:	mov	r0, r4
   27434:	add	sp, sp, #12
   27438:	pop	{r4, r5, r6, r7, pc}

0002743c <myhtml_tree_node_insert_comment@@Base>:
   2743c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   27440:	mov	r7, r1
   27444:	mov	r5, r2
   27448:	mov	r6, r0
   2744c:	bl	ff80 <myhtml_tree_node_create@plt>
   27450:	mov	r3, #2
   27454:	mov	r4, r0
   27458:	str	r3, [r0, #4]
   2745c:	mov	r3, #0
   27460:	cmp	r5, r3
   27464:	str	r7, [r0, #32]
   27468:	str	r3, [sp, #4]
   2746c:	bne	27484 <myhtml_tree_node_insert_comment@@Base+0x48>
   27470:	mov	r1, r5
   27474:	add	r2, sp, #4
   27478:	mov	r0, r6
   2747c:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   27480:	mov	r5, r0
   27484:	mov	r0, r5
   27488:	mov	r1, r4
   2748c:	ldr	r2, [sp, #4]
   27490:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   27494:	ldr	r3, [r5, #8]
   27498:	mov	r0, r4
   2749c:	str	r3, [r4, #8]
   274a0:	add	sp, sp, #12
   274a4:	pop	{r4, r5, r6, r7, pc}

000274a8 <myhtml_tree_node_insert_text@@Base>:
   274a8:	push	{r0, r1, r4, r5, r6, lr}
   274ac:	mov	r5, r0
   274b0:	mov	r6, r1
   274b4:	add	r2, sp, #4
   274b8:	mov	r1, #0
   274bc:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   274c0:	ldr	r3, [r5, #84]	; 0x54
   274c4:	cmp	r3, r0
   274c8:	moveq	r4, #0
   274cc:	beq	27564 <myhtml_tree_node_insert_text@@Base+0xbc>
   274d0:	ldr	r3, [sp, #4]
   274d4:	mov	r4, r0
   274d8:	cmp	r3, #2
   274dc:	bne	27538 <myhtml_tree_node_insert_text@@Base+0x90>
   274e0:	ldr	r3, [r0, #4]
   274e4:	cmp	r3, #1
   274e8:	bne	27500 <myhtml_tree_node_insert_text@@Base+0x58>
   274ec:	ldr	r1, [r0, #32]
   274f0:	cmp	r1, #0
   274f4:	movne	r3, #0
   274f8:	movne	r2, r6
   274fc:	bne	2755c <myhtml_tree_node_insert_text@@Base+0xb4>
   27500:	mov	r0, r5
   27504:	bl	ff80 <myhtml_tree_node_create@plt>
   27508:	mov	r5, r0
   2750c:	mov	r3, #1
   27510:	ldr	r2, [sp, #4]
   27514:	mov	r1, r0
   27518:	mov	r0, r4
   2751c:	str	r3, [r5, #4]
   27520:	ldr	r3, [r4, #8]
   27524:	mov	r4, r5
   27528:	str	r3, [r5, #8]
   2752c:	str	r6, [r5, #32]
   27530:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   27534:	b	27564 <myhtml_tree_node_insert_text@@Base+0xbc>
   27538:	cmp	r3, #1
   2753c:	bne	27570 <myhtml_tree_node_insert_text@@Base+0xc8>
   27540:	ldr	r3, [r0, #4]
   27544:	cmp	r3, #1
   27548:	bne	27500 <myhtml_tree_node_insert_text@@Base+0x58>
   2754c:	ldr	r2, [r0, #32]
   27550:	cmp	r2, #0
   27554:	beq	27500 <myhtml_tree_node_insert_text@@Base+0x58>
   27558:	mov	r1, r6
   2755c:	mov	r0, r5
   27560:	bl	10418 <myhtml_token_merged_two_token_string@plt>
   27564:	mov	r0, r4
   27568:	add	sp, sp, #8
   2756c:	pop	{r4, r5, r6, pc}
   27570:	ldr	r3, [r0, #28]
   27574:	cmp	r3, #0
   27578:	beq	27500 <myhtml_tree_node_insert_text@@Base+0x58>
   2757c:	ldr	r2, [r3, #4]
   27580:	cmp	r2, #1
   27584:	bne	27500 <myhtml_tree_node_insert_text@@Base+0x58>
   27588:	ldr	r1, [r3, #32]
   2758c:	cmp	r1, #0
   27590:	beq	27500 <myhtml_tree_node_insert_text@@Base+0x58>
   27594:	mov	r3, #0
   27598:	mov	r2, r6
   2759c:	mov	r0, r5
   275a0:	bl	10418 <myhtml_token_merged_two_token_string@plt>
   275a4:	ldr	r4, [r4, #28]
   275a8:	b	27564 <myhtml_tree_node_insert_text@@Base+0xbc>

000275ac <myhtml_tree_node_insert_by_node@@Base>:
   275ac:	push	{r0, r1, r2, r4, r5, lr}
   275b0:	mov	r4, r1
   275b4:	add	r2, sp, #4
   275b8:	mov	r1, #0
   275bc:	mov	r5, r0
   275c0:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   275c4:	ldr	r2, [sp, #4]
   275c8:	mov	r1, r4
   275cc:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   275d0:	mov	r0, r5
   275d4:	mov	r1, r4
   275d8:	bl	1091c <myhtml_tree_open_elements_append@plt>
   275dc:	mov	r0, r4
   275e0:	add	sp, sp, #12
   275e4:	pop	{r4, r5, pc}

000275e8 <myhtml_tree_active_formatting_reconstruction@@Base>:
   275e8:	push	{r4, r5, r6, r7, r8, lr}
   275ec:	ldr	r8, [r0, #124]	; 0x7c
   275f0:	ldr	r3, [r8, #4]
   275f4:	cmp	r3, #0
   275f8:	popeq	{r4, r5, r6, r7, r8, pc}
   275fc:	mov	r5, r0
   27600:	ldr	r6, [r8]
   27604:	ldr	r4, [r8, #4]
   27608:	sub	r4, r4, #1
   2760c:	ldr	r1, [r6, r4, lsl #2]
   27610:	bl	10808 <myhtml_tree_active_formatting_is_marker@plt>
   27614:	subs	r2, r0, #0
   27618:	popne	{r4, r5, r6, r7, r8, pc}
   2761c:	mov	r0, r5
   27620:	ldr	r1, [r6, r4, lsl #2]
   27624:	bl	10fdc <myhtml_tree_open_elements_find@plt>
   27628:	cmp	r0, #0
   2762c:	popne	{r4, r5, r6, r7, r8, pc}
   27630:	cmp	r4, #0
   27634:	bne	27668 <myhtml_tree_active_formatting_reconstruction@@Base+0x80>
   27638:	ldr	r3, [r8, #4]
   2763c:	cmp	r3, r4
   27640:	popls	{r4, r5, r6, r7, r8, pc}
   27644:	ldr	r0, [r6, r4, lsl #2]
   27648:	bl	10f70 <myhtml_tree_node_clone@plt>
   2764c:	mov	r7, r0
   27650:	mov	r1, r0
   27654:	mov	r0, r5
   27658:	bl	10700 <myhtml_tree_node_insert_by_node@plt>
   2765c:	str	r7, [r6, r4, lsl #2]
   27660:	add	r4, r4, #1
   27664:	b	27638 <myhtml_tree_active_formatting_reconstruction@@Base+0x50>
   27668:	sub	r7, r4, #1
   2766c:	mov	r0, r5
   27670:	ldr	r1, [r6, r7, lsl #2]
   27674:	bl	10808 <myhtml_tree_active_formatting_is_marker@plt>
   27678:	subs	r2, r0, #0
   2767c:	bne	27638 <myhtml_tree_active_formatting_reconstruction@@Base+0x50>
   27680:	mov	r0, r5
   27684:	ldr	r1, [r6, r7, lsl #2]
   27688:	bl	10fdc <myhtml_tree_open_elements_find@plt>
   2768c:	cmp	r0, #0
   27690:	bne	27638 <myhtml_tree_active_formatting_reconstruction@@Base+0x50>
   27694:	mov	r4, r7
   27698:	b	27630 <myhtml_tree_active_formatting_reconstruction@@Base+0x48>

0002769c <myhtml_tree_node_insert_foreign_element@@Base>:
   2769c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   276a0:	mov	r7, r1
   276a4:	add	r2, sp, #4
   276a8:	mov	r1, #0
   276ac:	mov	r5, r0
   276b0:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   276b4:	mov	r6, r0
   276b8:	mov	r0, r5
   276bc:	bl	ff80 <myhtml_tree_node_create@plt>
   276c0:	ldr	r3, [r7]
   276c4:	mov	r4, r0
   276c8:	mov	r1, r0
   276cc:	mov	r0, r6
   276d0:	ldr	r2, [sp, #4]
   276d4:	str	r3, [r4, #4]
   276d8:	ldr	r3, [r6, #8]
   276dc:	str	r3, [r4, #8]
   276e0:	str	r7, [r4, #32]
   276e4:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   276e8:	mov	r0, r5
   276ec:	mov	r1, r4
   276f0:	bl	1091c <myhtml_tree_open_elements_append@plt>
   276f4:	mov	r0, r4
   276f8:	add	sp, sp, #12
   276fc:	pop	{r4, r5, r6, r7, pc}

00027700 <myhtml_tree_node_insert_html_element@@Base>:
   27700:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   27704:	mov	r6, r1
   27708:	add	r2, sp, #4
   2770c:	mov	r1, #0
   27710:	mov	r5, r0
   27714:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   27718:	mov	r7, r0
   2771c:	mov	r0, r5
   27720:	bl	ff80 <myhtml_tree_node_create@plt>
   27724:	ldr	r3, [r6]
   27728:	mov	r4, r0
   2772c:	mov	r1, r0
   27730:	mov	r0, r7
   27734:	ldr	r2, [sp, #4]
   27738:	str	r3, [r4, #4]
   2773c:	mov	r3, #1
   27740:	str	r3, [r4, #8]
   27744:	str	r6, [r4, #32]
   27748:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   2774c:	mov	r0, r5
   27750:	mov	r1, r4
   27754:	bl	1091c <myhtml_tree_open_elements_append@plt>
   27758:	mov	r0, r4
   2775c:	add	sp, sp, #12
   27760:	pop	{r4, r5, r6, r7, pc}

00027764 <myhtml_tree_adoption_agency_algorithm@@Base>:
   27764:	ldr	r1, [r0, #128]	; 0x80
   27768:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2776c:	sub	sp, sp, #60	; 0x3c
   27770:	ldr	r3, [r1, #4]
   27774:	cmp	r3, #0
   27778:	bne	27784 <myhtml_tree_adoption_agency_algorithm@@Base+0x20>
   2777c:	mov	r3, #0
   27780:	b	2781c <myhtml_tree_adoption_agency_algorithm@@Base+0xb8>
   27784:	ldr	sl, [r1]
   27788:	mov	r4, r0
   2778c:	str	r2, [sp, #16]
   27790:	ldr	r3, [r1, #4]
   27794:	ldr	r2, [r0, #124]	; 0x7c
   27798:	sub	r3, r3, #1
   2779c:	ldr	r1, [sl, r3, lsl #2]
   277a0:	ldr	r2, [r2]
   277a4:	ldr	r3, [r1, #8]
   277a8:	str	r2, [sp, #20]
   277ac:	cmp	r3, #1
   277b0:	bne	277ec <myhtml_tree_adoption_agency_algorithm@@Base+0x88>
   277b4:	ldr	r3, [r1, #4]
   277b8:	ldr	r2, [sp, #16]
   277bc:	cmp	r3, r2
   277c0:	bne	277ec <myhtml_tree_adoption_agency_algorithm@@Base+0x88>
   277c4:	mov	r2, #0
   277c8:	bl	100c4 <myhtml_tree_active_formatting_find@plt>
   277cc:	subs	r3, r0, #0
   277d0:	str	r3, [sp]
   277d4:	bne	277ec <myhtml_tree_adoption_agency_algorithm@@Base+0x88>
   277d8:	mov	r0, r4
   277dc:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   277e0:	ldr	r0, [sp]
   277e4:	add	sp, sp, #60	; 0x3c
   277e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   277ec:	mov	r3, #8
   277f0:	str	r3, [sp, #8]
   277f4:	add	r3, sp, #52	; 0x34
   277f8:	str	r3, [sp, #12]
   277fc:	mov	r3, #0
   27800:	str	r3, [sp, #36]	; 0x24
   27804:	ldr	r3, [r4, #124]	; 0x7c
   27808:	ldr	r6, [r3]
   2780c:	ldr	r5, [r3, #4]
   27810:	cmp	r5, #0
   27814:	bne	27824 <myhtml_tree_adoption_agency_algorithm@@Base+0xc0>
   27818:	mov	r3, #1
   2781c:	str	r3, [sp]
   27820:	b	277e0 <myhtml_tree_adoption_agency_algorithm@@Base+0x7c>
   27824:	sub	r5, r5, #1
   27828:	mov	r0, r4
   2782c:	ldr	r1, [r6, r5, lsl #2]
   27830:	bl	10808 <myhtml_tree_active_formatting_is_marker@plt>
   27834:	subs	r3, r0, #0
   27838:	str	r3, [sp]
   2783c:	bne	2777c <myhtml_tree_adoption_agency_algorithm@@Base+0x18>
   27840:	ldr	r7, [r6, r5, lsl #2]
   27844:	ldr	r2, [sp, #16]
   27848:	ldr	r3, [r7, #4]
   2784c:	cmp	r3, r2
   27850:	bne	27810 <myhtml_tree_adoption_agency_algorithm@@Base+0xac>
   27854:	add	r2, sp, #40	; 0x28
   27858:	mov	r1, r7
   2785c:	str	r5, [sp, #36]	; 0x24
   27860:	mov	r0, r4
   27864:	bl	10fdc <myhtml_tree_open_elements_find@plt>
   27868:	cmp	r0, #0
   2786c:	bne	27880 <myhtml_tree_adoption_agency_algorithm@@Base+0x11c>
   27870:	mov	r1, r7
   27874:	mov	r0, r4
   27878:	bl	10838 <myhtml_tree_active_formatting_remove@plt>
   2787c:	b	277e0 <myhtml_tree_adoption_agency_algorithm@@Base+0x7c>
   27880:	mov	r1, #8
   27884:	mov	r0, r7
   27888:	bl	fbf0 <myhtml_tree_element_in_scope_by_node@plt>
   2788c:	cmp	r0, #0
   27890:	beq	2777c <myhtml_tree_adoption_agency_algorithm@@Base+0x18>
   27894:	mov	r0, r4
   27898:	bl	105bc <myhtml_tree_current_node@plt>
   2789c:	ldr	r3, [sp, #40]	; 0x28
   278a0:	str	r3, [sp, #44]	; 0x2c
   278a4:	ldr	r3, [r4, #128]	; 0x80
   278a8:	ldr	r2, [r3, #4]
   278ac:	ldr	r3, [sp, #44]	; 0x2c
   278b0:	cmp	r2, r3
   278b4:	bhi	278d4 <myhtml_tree_adoption_agency_algorithm@@Base+0x170>
   278b8:	mov	r0, r4
   278bc:	bl	105bc <myhtml_tree_current_node@plt>
   278c0:	cmp	r7, r0
   278c4:	mov	r0, r4
   278c8:	bne	2790c <myhtml_tree_adoption_agency_algorithm@@Base+0x1a8>
   278cc:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   278d0:	b	27870 <myhtml_tree_adoption_agency_algorithm@@Base+0x10c>
   278d4:	ldr	r3, [sl, r3, lsl #2]
   278d8:	ldr	r0, [r4, #28]
   278dc:	ldr	r1, [r3, #4]
   278e0:	bl	109b8 <myhtml_tag_get_by_id@plt>
   278e4:	ldr	r5, [sp, #44]	; 0x2c
   278e8:	ldr	r9, [sl, r5, lsl #2]
   278ec:	ldr	r3, [r9, #8]
   278f0:	add	r3, r3, #4
   278f4:	ldr	r3, [r0, r3, lsl #2]
   278f8:	tst	r3, #2
   278fc:	bne	27b0c <myhtml_tree_adoption_agency_algorithm@@Base+0x3a8>
   27900:	add	r5, r5, #1
   27904:	str	r5, [sp, #44]	; 0x2c
   27908:	b	278a4 <myhtml_tree_adoption_agency_algorithm@@Base+0x140>
   2790c:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   27910:	b	278b8 <myhtml_tree_adoption_agency_algorithm@@Base+0x154>
   27914:	cmp	r0, #0
   27918:	bne	279b0 <myhtml_tree_adoption_agency_algorithm@@Base+0x24c>
   2791c:	mov	r1, fp
   27920:	mov	r0, r4
   27924:	bl	101d8 <myhtml_tree_open_elements_remove@plt>
   27928:	ldr	r3, [sp, #4]
   2792c:	mov	r1, fp
   27930:	mov	r0, r4
   27934:	ldr	r2, [sp, #28]
   27938:	add	r3, r3, #1
   2793c:	str	r3, [sp, #4]
   27940:	bl	10fdc <myhtml_tree_open_elements_find@plt>
   27944:	cmp	r0, #0
   27948:	streq	r5, [sp, #48]	; 0x30
   2794c:	ldr	r5, [sp, #48]	; 0x30
   27950:	cmp	r5, #0
   27954:	beq	277e0 <myhtml_tree_adoption_agency_algorithm@@Base+0x7c>
   27958:	sub	r5, r5, #1
   2795c:	ldr	fp, [sl, r5, lsl #2]
   27960:	str	r5, [sp, #48]	; 0x30
   27964:	cmp	r7, fp
   27968:	beq	27a08 <myhtml_tree_adoption_agency_algorithm@@Base+0x2a4>
   2796c:	mov	r1, fp
   27970:	mov	r0, r4
   27974:	ldr	r2, [sp, #12]
   27978:	bl	100c4 <myhtml_tree_active_formatting_find@plt>
   2797c:	ldr	r3, [sp, #4]
   27980:	cmp	r3, #3
   27984:	movle	r2, #0
   27988:	andgt	r2, r0, #1
   2798c:	cmp	r2, #0
   27990:	beq	27914 <myhtml_tree_adoption_agency_algorithm@@Base+0x1b0>
   27994:	mov	r0, r4
   27998:	ldr	r1, [sp, #52]	; 0x34
   2799c:	bl	107d8 <myhtml_tree_active_formatting_remove_by_index@plt>
   279a0:	ldr	r2, [sp, #52]	; 0x34
   279a4:	cmp	r2, r6
   279a8:	subcc	r6, r6, #1
   279ac:	b	27928 <myhtml_tree_adoption_agency_algorithm@@Base+0x1c4>
   279b0:	mov	r0, fp
   279b4:	bl	10f70 <myhtml_tree_node_clone@plt>
   279b8:	mov	r3, #1
   279bc:	ldr	r1, [sp, #48]	; 0x30
   279c0:	cmp	r9, r8
   279c4:	mov	fp, r0
   279c8:	ldr	r2, [sp, #52]	; 0x34
   279cc:	str	r3, [r0, #8]
   279d0:	ldr	r3, [sp, #20]
   279d4:	addeq	r6, r2, #1
   279d8:	str	r0, [r3, r2, lsl #2]
   279dc:	str	r0, [sl, r1, lsl #2]
   279e0:	ldr	r2, [r8, #24]
   279e4:	cmp	r2, #0
   279e8:	beq	279f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x290>
   279ec:	mov	r0, r8
   279f0:	bl	10d84 <myhtml_tree_node_remove@plt>
   279f4:	mov	r1, r8
   279f8:	mov	r0, fp
   279fc:	bl	1064c <myhtml_tree_node_add_child@plt>
   27a00:	mov	r8, fp
   27a04:	b	27928 <myhtml_tree_adoption_agency_algorithm@@Base+0x1c4>
   27a08:	ldr	r3, [r8, #24]
   27a0c:	cmp	r3, #0
   27a10:	beq	27a1c <myhtml_tree_adoption_agency_algorithm@@Base+0x2b8>
   27a14:	mov	r0, r8
   27a18:	bl	10d84 <myhtml_tree_node_remove@plt>
   27a1c:	mov	r0, r4
   27a20:	ldr	r2, [sp, #12]
   27a24:	ldr	r1, [sp, #24]
   27a28:	bl	10e14 <myhtml_tree_appropriate_place_inserting@plt>
   27a2c:	mov	r1, r8
   27a30:	ldr	r2, [sp, #52]	; 0x34
   27a34:	bl	102ec <myhtml_tree_node_insert_by_mode@plt>
   27a38:	mov	r0, r7
   27a3c:	bl	10f70 <myhtml_tree_node_clone@plt>
   27a40:	mov	r5, r0
   27a44:	mov	r3, #1
   27a48:	ldr	r8, [r9, #20]
   27a4c:	str	r3, [r0, #8]
   27a50:	cmp	r8, #0
   27a54:	bne	27aec <myhtml_tree_adoption_agency_algorithm@@Base+0x388>
   27a58:	mov	r1, r5
   27a5c:	mov	r0, r9
   27a60:	bl	1064c <myhtml_tree_node_add_child@plt>
   27a64:	add	r2, sp, #36	; 0x24
   27a68:	mov	r1, r7
   27a6c:	mov	r0, r4
   27a70:	bl	100c4 <myhtml_tree_active_formatting_find@plt>
   27a74:	cmp	r0, #0
   27a78:	beq	2777c <myhtml_tree_adoption_agency_algorithm@@Base+0x18>
   27a7c:	ldr	r1, [sp, #36]	; 0x24
   27a80:	mov	r0, r4
   27a84:	cmp	r1, r6
   27a88:	subcc	r6, r6, #1
   27a8c:	bl	107d8 <myhtml_tree_active_formatting_remove_by_index@plt>
   27a90:	mov	r2, r6
   27a94:	mov	r1, r5
   27a98:	ldr	r0, [r4, #124]	; 0x7c
   27a9c:	bl	10250 <myhtml_tree_list_insert_by_index@plt>
   27aa0:	mov	r1, r7
   27aa4:	mov	r0, r4
   27aa8:	bl	101d8 <myhtml_tree_open_elements_remove@plt>
   27aac:	add	r2, sp, #44	; 0x2c
   27ab0:	mov	r1, r9
   27ab4:	mov	r0, r4
   27ab8:	bl	10fdc <myhtml_tree_open_elements_find@plt>
   27abc:	cmp	r0, #0
   27ac0:	beq	27ad8 <myhtml_tree_adoption_agency_algorithm@@Base+0x374>
   27ac4:	ldr	r2, [sp, #44]	; 0x2c
   27ac8:	mov	r1, r5
   27acc:	ldr	r0, [r4, #128]	; 0x80
   27ad0:	add	r2, r2, #1
   27ad4:	bl	10250 <myhtml_tree_list_insert_by_index@plt>
   27ad8:	ldr	r3, [sp, #8]
   27adc:	subs	r3, r3, #1
   27ae0:	str	r3, [sp, #8]
   27ae4:	bne	277fc <myhtml_tree_adoption_agency_algorithm@@Base+0x98>
   27ae8:	b	2777c <myhtml_tree_adoption_agency_algorithm@@Base+0x18>
   27aec:	ldr	fp, [r8, #16]
   27af0:	mov	r0, r8
   27af4:	bl	10d84 <myhtml_tree_node_remove@plt>
   27af8:	mov	r1, r8
   27afc:	mov	r0, r5
   27b00:	bl	1064c <myhtml_tree_node_add_child@plt>
   27b04:	mov	r8, fp
   27b08:	b	27a50 <myhtml_tree_adoption_agency_algorithm@@Base+0x2ec>
   27b0c:	ldr	r6, [sp, #36]	; 0x24
   27b10:	mov	r8, r9
   27b14:	mov	fp, r9
   27b18:	ldr	r3, [sp, #40]	; 0x28
   27b1c:	add	r6, r6, #1
   27b20:	sub	r3, r3, #-1073741823	; 0xc0000001
   27b24:	ldr	r3, [sl, r3, lsl #2]
   27b28:	str	r3, [sp, #24]
   27b2c:	mov	r3, #0
   27b30:	str	r3, [sp, #4]
   27b34:	add	r3, sp, #48	; 0x30
   27b38:	str	r3, [sp, #28]
   27b3c:	b	27928 <myhtml_tree_adoption_agency_algorithm@@Base+0x1c4>

00027b40 <myhtml_tree_appropriate_place_inserting_in_tree@@Base>:
   27b40:	mov	r3, #1
   27b44:	push	{r4, r5, r6, r7, r8, lr}
   27b48:	mov	r4, r0
   27b4c:	mov	r6, r1
   27b50:	str	r3, [r1]
   27b54:	ldr	r3, [r0, #40]	; 0x28
   27b58:	ldrb	r3, [r3, #188]	; 0xbc
   27b5c:	cmp	r3, #0
   27b60:	beq	27c1c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xdc>
   27b64:	ldr	r2, [r0, #8]
   27b68:	cmp	r2, #1
   27b6c:	bne	27bec <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xac>
   27b70:	ldr	r3, [r0, #4]
   27b74:	sub	r3, r3, #125	; 0x7d
   27b78:	cmp	r3, #10
   27b7c:	bhi	27c18 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xd8>
   27b80:	movw	r1, #1187	; 0x4a3
   27b84:	ands	r3, r1, r2, lsl r3
   27b88:	beq	27c18 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xd8>
   27b8c:	mov	r1, #128	; 0x80
   27b90:	bl	105b0 <myhtml_tree_node_find_parent_by_tag_id@plt>
   27b94:	mov	r7, r0
   27b98:	mov	r1, #125	; 0x7d
   27b9c:	mov	r0, r4
   27ba0:	bl	105b0 <myhtml_tree_node_find_parent_by_tag_id@plt>
   27ba4:	cmp	r7, #0
   27ba8:	mov	r5, r0
   27bac:	beq	27bf4 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xb4>
   27bb0:	mov	r1, #125	; 0x7d
   27bb4:	mov	r0, r7
   27bb8:	bl	105b0 <myhtml_tree_node_find_parent_by_tag_id@plt>
   27bbc:	subs	r0, r5, r0
   27bc0:	movne	r0, #1
   27bc4:	cmp	r5, #0
   27bc8:	moveq	r0, #1
   27bcc:	cmp	r0, #0
   27bd0:	movne	r3, #0
   27bd4:	movne	r4, r7
   27bd8:	strne	r3, [r6]
   27bdc:	bne	27bec <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xac>
   27be0:	ldr	r3, [r5, #24]
   27be4:	cmp	r3, #0
   27be8:	bne	27c00 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xc0>
   27bec:	mov	r0, r4
   27bf0:	pop	{r4, r5, r6, r7, r8, pc}
   27bf4:	cmp	r0, #0
   27bf8:	beq	27bec <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xac>
   27bfc:	b	27be0 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xa0>
   27c00:	ldr	r4, [r5, #12]
   27c04:	cmp	r4, #0
   27c08:	movne	r3, #2
   27c0c:	bne	27c1c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xdc>
   27c10:	mov	r4, r5
   27c14:	b	27bec <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xac>
   27c18:	mov	r3, #0
   27c1c:	str	r3, [r6]
   27c20:	b	27bec <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xac>

00027c24 <myhtml_tree_template_insertion_init@@Base>:
   27c24:	push	{r4, r5, r6, lr}
   27c28:	mov	r5, r0
   27c2c:	mov	r0, #12
   27c30:	bl	10c28 <mycore_malloc@plt>
   27c34:	mov	r4, r0
   27c38:	mov	r3, #0
   27c3c:	mov	r0, #4096	; 0x1000
   27c40:	str	r3, [r4, #4]
   27c44:	mov	r3, #1024	; 0x400
   27c48:	str	r3, [r4, #8]
   27c4c:	bl	10c28 <mycore_malloc@plt>
   27c50:	str	r0, [r4]
   27c54:	mov	r0, r4
   27c58:	str	r4, [r5, #140]	; 0x8c
   27c5c:	pop	{r4, r5, r6, pc}

00027c60 <myhtml_tree_template_insertion_clean@@Base>:
   27c60:	ldr	r3, [r0, #140]	; 0x8c
   27c64:	mov	r2, #0
   27c68:	str	r2, [r3, #4]
   27c6c:	bx	lr

00027c70 <myhtml_tree_template_insertion_destroy@@Base>:
   27c70:	ldr	r3, [r0, #140]	; 0x8c
   27c74:	cmp	r3, #0
   27c78:	beq	27cac <myhtml_tree_template_insertion_destroy@@Base+0x3c>
   27c7c:	push	{r4, lr}
   27c80:	mov	r4, r0
   27c84:	ldr	r0, [r3]
   27c88:	cmp	r0, #0
   27c8c:	beq	27c94 <myhtml_tree_template_insertion_destroy@@Base+0x24>
   27c90:	bl	10d60 <mycore_free@plt>
   27c94:	ldr	r0, [r4, #140]	; 0x8c
   27c98:	cmp	r0, #0
   27c9c:	beq	27ca4 <myhtml_tree_template_insertion_destroy@@Base+0x34>
   27ca0:	bl	10d60 <mycore_free@plt>
   27ca4:	mov	r0, #0
   27ca8:	pop	{r4, pc}
   27cac:	mov	r0, #0
   27cb0:	bx	lr

00027cb4 <myhtml_tree_template_insertion_append@@Base>:
   27cb4:	push	{r4, r5, r6, lr}
   27cb8:	mov	r5, r1
   27cbc:	ldr	r4, [r0, #140]	; 0x8c
   27cc0:	ldr	r3, [r4, #4]
   27cc4:	ldr	r1, [r4, #8]
   27cc8:	cmp	r3, r1
   27ccc:	bcc	27cec <myhtml_tree_template_insertion_append@@Base+0x38>
   27cd0:	lsl	r3, r1, #1
   27cd4:	ldr	r0, [r4]
   27cd8:	lsl	r1, r1, #3
   27cdc:	str	r3, [r4, #8]
   27ce0:	bl	fb84 <mycore_realloc@plt>
   27ce4:	cmp	r0, #0
   27ce8:	strne	r0, [r4]
   27cec:	ldrd	r2, [r4]
   27cf0:	str	r5, [r2, r3, lsl #2]
   27cf4:	add	r3, r3, #1
   27cf8:	str	r3, [r4, #4]
   27cfc:	pop	{r4, r5, r6, pc}

00027d00 <myhtml_tree_template_insertion_pop@@Base>:
   27d00:	ldr	r2, [r0, #140]	; 0x8c
   27d04:	ldr	r3, [r2, #4]
   27d08:	cmp	r3, #0
   27d0c:	subne	r3, r3, #1
   27d10:	strne	r3, [r2, #4]
   27d14:	bx	lr

00027d18 <myhtml_tree_template_insertion_length@@Base>:
   27d18:	ldr	r3, [r0, #140]	; 0x8c
   27d1c:	ldr	r0, [r3, #4]
   27d20:	bx	lr

00027d24 <myhtml_tree_token_list_init@@Base>:
   27d24:	push	{r4, lr}
   27d28:	mov	r0, #12
   27d2c:	bl	10c28 <mycore_malloc@plt>
   27d30:	mov	r4, r0
   27d34:	mov	r3, #0
   27d38:	mov	r0, #16384	; 0x4000
   27d3c:	str	r3, [r4, #4]
   27d40:	mov	r3, #4096	; 0x1000
   27d44:	str	r3, [r4, #8]
   27d48:	bl	10c28 <mycore_malloc@plt>
   27d4c:	str	r0, [r4]
   27d50:	mov	r0, r4
   27d54:	pop	{r4, pc}

00027d58 <myhtml_tree_token_list_clean@@Base>:
   27d58:	mov	r3, #0
   27d5c:	str	r3, [r0, #4]
   27d60:	bx	lr

00027d64 <myhtml_tree_clean@@Base>:
   27d64:	push	{r4, r5, r6, lr}
   27d68:	mov	r4, r0
   27d6c:	mov	r5, #0
   27d70:	ldr	r6, [r0]
   27d74:	ldr	r3, [r6, #20]
   27d78:	cmp	r3, r5
   27d7c:	bhi	27ebc <myhtml_tree_clean@@Base+0x158>
   27d80:	ldr	r0, [r4, #12]
   27d84:	ldr	r1, [r4, #48]	; 0x30
   27d88:	bl	10814 <mcobject_async_node_clean@plt>
   27d8c:	ldr	r3, [r4, #8]
   27d90:	ldr	r1, [r4, #40]	; 0x28
   27d94:	ldr	r0, [r3, #4]
   27d98:	bl	10814 <mcobject_async_node_clean@plt>
   27d9c:	ldr	r3, [r4, #8]
   27da0:	ldr	r1, [r4, #44]	; 0x2c
   27da4:	ldr	r0, [r3, #8]
   27da8:	bl	10814 <mcobject_async_node_clean@plt>
   27dac:	ldr	r0, [r4, #20]
   27db0:	bl	10934 <mythread_queue_list_entry_clean@plt>
   27db4:	ldr	r3, [r4]
   27db8:	ldr	r1, [r4, #20]
   27dbc:	ldr	r0, [r3, #4]
   27dc0:	bl	10cb8 <mythread_queue_list_entry_make_batch@plt>
   27dc4:	ldr	r3, [r4]
   27dc8:	ldr	r1, [r4, #20]
   27dcc:	ldr	r0, [r3]
   27dd0:	bl	10e74 <mythread_queue_list_entry_make_stream@plt>
   27dd4:	ldr	r0, [r4, #8]
   27dd8:	bl	10550 <myhtml_token_clean@plt>
   27ddc:	mov	r0, r4
   27de0:	bl	ff80 <myhtml_tree_node_create@plt>
   27de4:	mov	r0, r4
   27de8:	bl	ff80 <myhtml_tree_node_create@plt>
   27dec:	mov	r3, #0
   27df0:	mov	r2, #2
   27df4:	str	r3, [r4, #60]	; 0x3c
   27df8:	str	r3, [r4, #68]	; 0x44
   27dfc:	str	r3, [r4, #76]	; 0x4c
   27e00:	str	r3, [r4, #80]	; 0x50
   27e04:	str	r0, [r4, #84]	; 0x54
   27e08:	str	r3, [r4, #88]	; 0x58
   27e0c:	str	r3, [r4, #92]	; 0x5c
   27e10:	str	r3, [r4, #96]	; 0x60
   27e14:	str	r3, [r4, #100]	; 0x64
   27e18:	str	r3, [r4, #104]	; 0x68
   27e1c:	strb	r3, [r4, #108]	; 0x6c
   27e20:	str	r3, [r4, #112]	; 0x70
   27e24:	str	r3, [r4, #116]	; 0x74
   27e28:	str	r3, [r4, #120]	; 0x78
   27e2c:	str	r3, [r4, #156]	; 0x9c
   27e30:	str	r3, [r4, #160]	; 0xa0
   27e34:	str	r3, [r4, #164]	; 0xa4
   27e38:	str	r3, [r4, #168]	; 0xa8
   27e3c:	str	r3, [r4, #172]	; 0xac
   27e40:	str	r3, [r4, #176]	; 0xb0
   27e44:	str	r2, [r4, #180]	; 0xb4
   27e48:	str	r3, [r4, #152]	; 0x98
   27e4c:	strb	r3, [r4, #188]	; 0xbc
   27e50:	str	r3, [r4, #192]	; 0xc0
   27e54:	str	r3, [r4, #196]	; 0xc4
   27e58:	str	r3, [r4, #200]	; 0xc8
   27e5c:	str	r3, [r4, #204]	; 0xcc
   27e60:	ldr	r0, [r4, #148]	; 0x94
   27e64:	bl	10400 <myhtml_stream_buffer_clean@plt>
   27e68:	mov	r0, r4
   27e6c:	bl	107b4 <myhtml_tree_active_formatting_clean@plt>
   27e70:	mov	r0, r4
   27e74:	bl	10db4 <myhtml_tree_open_elements_clean@plt>
   27e78:	ldr	r0, [r4, #132]	; 0x84
   27e7c:	bl	10220 <myhtml_tree_list_clean@plt>
   27e80:	ldr	r0, [r4, #136]	; 0x88
   27e84:	bl	10f7c <myhtml_tree_token_list_clean@plt>
   27e88:	mov	r0, r4
   27e8c:	bl	103b8 <myhtml_tree_template_insertion_clean@plt>
   27e90:	ldr	r0, [r4, #72]	; 0x48
   27e94:	bl	10f04 <mcobject_clean@plt>
   27e98:	ldr	r0, [r4, #28]
   27e9c:	bl	1100c <myhtml_tag_clean@plt>
   27ea0:	ldr	r0, [r4, #24]
   27ea4:	bl	fd04 <mythread_queue_clean@plt>
   27ea8:	ldr	r0, [r4, #8]
   27eac:	ldr	r1, [r0, #16]
   27eb0:	bl	10898 <myhtml_token_attr_create@plt>
   27eb4:	str	r0, [r4, #56]	; 0x38
   27eb8:	pop	{r4, r5, r6, pc}
   27ebc:	ldr	r0, [r4, #4]
   27ec0:	ldr	r3, [r4, #144]	; 0x90
   27ec4:	ldr	r1, [r3, r5, lsl #2]
   27ec8:	add	r5, r5, #1
   27ecc:	bl	1067c <mchar_async_node_clean@plt>
   27ed0:	b	27d74 <myhtml_tree_clean@@Base+0x10>

00027ed4 <myhtml_tree_init@@Base>:
   27ed4:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   27ed8:	mov	r5, #0
   27edc:	mov	r6, r1
   27ee0:	mov	r4, r0
   27ee4:	str	r1, [r0]
   27ee8:	mov	r1, #512	; 0x200
   27eec:	str	r5, [sp]
   27ef0:	bl	10f94 <myhtml_token_create@plt>
   27ef4:	cmp	r0, r5
   27ef8:	str	r0, [r4, #8]
   27efc:	movweq	r0, #37164	; 0x912c
   27f00:	beq	27f54 <myhtml_tree_init@@Base+0x80>
   27f04:	ldr	r0, [sp]
   27f08:	str	r5, [r4, #36]	; 0x24
   27f0c:	str	r5, [r4, #148]	; 0x94
   27f10:	str	r5, [r4, #184]	; 0xb8
   27f14:	str	r5, [r4, #208]	; 0xd0
   27f18:	cmp	r0, r5
   27f1c:	str	r5, [r4, #220]	; 0xdc
   27f20:	str	r5, [r4, #224]	; 0xe0
   27f24:	str	r5, [r4, #228]	; 0xe4
   27f28:	str	r5, [r4, #232]	; 0xe8
   27f2c:	str	r5, [r4, #236]	; 0xec
   27f30:	str	r5, [r4, #240]	; 0xf0
   27f34:	str	r5, [r4, #244]	; 0xf4
   27f38:	str	r5, [r4, #248]	; 0xf8
   27f3c:	bne	27f54 <myhtml_tree_init@@Base+0x80>
   27f40:	bl	10a18 <mythread_queue_create@plt>
   27f44:	cmp	r0, r5
   27f48:	str	r0, [r4, #24]
   27f4c:	bne	27f5c <myhtml_tree_init@@Base+0x88>
   27f50:	mov	r0, #2
   27f54:	add	sp, sp, #8
   27f58:	pop	{r4, r5, r6, r7, r8, pc}
   27f5c:	movw	r1, #9182	; 0x23de
   27f60:	bl	10640 <mythread_queue_init@plt>
   27f64:	cmp	r0, #0
   27f68:	str	r0, [sp]
   27f6c:	bne	27f54 <myhtml_tree_init@@Base+0x80>
   27f70:	bl	ffbc <mcobject_create@plt>
   27f74:	cmp	r0, #0
   27f78:	str	r0, [r4, #72]	; 0x48
   27f7c:	movweq	r0, #37368	; 0x91f8
   27f80:	beq	27f54 <myhtml_tree_init@@Base+0x80>
   27f84:	mov	r2, #24
   27f88:	mov	r1, #256	; 0x100
   27f8c:	bl	1070c <mcobject_init@plt>
   27f90:	cmp	r0, #0
   27f94:	str	r0, [sp]
   27f98:	bne	27f54 <myhtml_tree_init@@Base+0x80>
   27f9c:	bl	fcf8 <mcobject_async_create@plt>
   27fa0:	cmp	r0, #0
   27fa4:	str	r0, [r4, #12]
   27fa8:	movweq	r0, #37365	; 0x91f5
   27fac:	beq	27f54 <myhtml_tree_init@@Base+0x80>
   27fb0:	mov	r3, #44	; 0x2c
   27fb4:	mov	r2, #1024	; 0x400
   27fb8:	mov	r1, #128	; 0x80
   27fbc:	bl	fc20 <mcobject_async_init@plt>
   27fc0:	cmp	r0, #0
   27fc4:	str	r0, [sp, #4]
   27fc8:	movwne	r0, #37366	; 0x91f6
   27fcc:	bne	27f54 <myhtml_tree_init@@Base+0x80>
   27fd0:	bl	10100 <mchar_async_create@plt>
   27fd4:	str	r0, [r4, #4]
   27fd8:	mov	r0, r4
   27fdc:	bl	10a54 <myhtml_tree_active_formatting_init@plt>
   27fe0:	str	r0, [r4, #124]	; 0x7c
   27fe4:	mov	r0, r4
   27fe8:	bl	10b44 <myhtml_tree_open_elements_init@plt>
   27fec:	str	r0, [r4, #128]	; 0x80
   27ff0:	bl	107f0 <myhtml_tree_list_init@plt>
   27ff4:	str	r0, [r4, #132]	; 0x84
   27ff8:	bl	1094c <myhtml_tree_token_list_init@plt>
   27ffc:	str	r0, [r4, #136]	; 0x88
   28000:	mov	r0, r4
   28004:	bl	10c70 <myhtml_tree_template_insertion_init@plt>
   28008:	str	r0, [r4, #140]	; 0x8c
   2800c:	ldr	r0, [r4, #4]
   28010:	cmp	r0, #0
   28014:	beq	27f50 <myhtml_tree_init@@Base+0x7c>
   28018:	mov	r2, #20480	; 0x5000
   2801c:	mov	r1, #128	; 0x80
   28020:	bl	1043c <mchar_async_init@plt>
   28024:	cmp	r0, #0
   28028:	str	r0, [sp]
   2802c:	bne	27f54 <myhtml_tree_init@@Base+0x80>
   28030:	add	r5, sp, #4
   28034:	ldr	r0, [r4, #12]
   28038:	mov	r1, r5
   2803c:	bl	10a24 <mcobject_async_node_add@plt>
   28040:	ldr	r3, [sp, #4]
   28044:	str	r0, [r4, #48]	; 0x30
   28048:	cmp	r3, #0
   2804c:	beq	28058 <myhtml_tree_init@@Base+0x184>
   28050:	movw	r0, #37367	; 0x91f7
   28054:	b	27f54 <myhtml_tree_init@@Base+0x80>
   28058:	ldr	r3, [r4, #8]
   2805c:	mov	r1, r5
   28060:	ldr	r0, [r3, #4]
   28064:	bl	10a24 <mcobject_async_node_add@plt>
   28068:	ldr	r3, [sp, #4]
   2806c:	str	r0, [r4, #40]	; 0x28
   28070:	cmp	r3, #0
   28074:	bne	28050 <myhtml_tree_init@@Base+0x17c>
   28078:	ldr	r3, [r4, #8]
   2807c:	mov	r1, r5
   28080:	ldr	r0, [r3, #8]
   28084:	bl	10a24 <mcobject_async_node_add@plt>
   28088:	ldr	r5, [sp, #4]
   2808c:	str	r0, [r4, #44]	; 0x2c
   28090:	cmp	r5, #0
   28094:	bne	28050 <myhtml_tree_init@@Base+0x17c>
   28098:	mov	r1, #4
   2809c:	ldr	r0, [r6, #20]
   280a0:	bl	feb4 <mycore_calloc@plt>
   280a4:	cmp	r0, #0
   280a8:	str	r0, [r4, #144]	; 0x90
   280ac:	movne	r8, sp
   280b0:	beq	27f50 <myhtml_tree_init@@Base+0x7c>
   280b4:	ldr	r3, [r6, #20]
   280b8:	ldr	r7, [r4, #144]	; 0x90
   280bc:	cmp	r3, r5
   280c0:	bhi	28110 <myhtml_tree_init@@Base+0x23c>
   280c4:	ldr	r3, [r7]
   280c8:	str	r3, [r4, #52]	; 0x34
   280cc:	bl	fd34 <mcsync_create@plt>
   280d0:	cmp	r0, #0
   280d4:	str	r0, [r4, #16]
   280d8:	beq	27f50 <myhtml_tree_init@@Base+0x7c>
   280dc:	bl	107fc <mcsync_init@plt>
   280e0:	cmp	r0, #0
   280e4:	bne	27f50 <myhtml_tree_init@@Base+0x7c>
   280e8:	bl	10cc4 <myhtml_tag_create@plt>
   280ec:	mov	r1, r0
   280f0:	mov	r0, r4
   280f4:	str	r1, [r4, #28]
   280f8:	bl	10af0 <myhtml_tag_init@plt>
   280fc:	str	r0, [sp]
   28100:	mov	r0, r4
   28104:	bl	10664 <myhtml_tree_clean@plt>
   28108:	ldr	r0, [sp]
   2810c:	b	27f54 <myhtml_tree_init@@Base+0x80>
   28110:	mov	r1, r8
   28114:	ldr	r0, [r4, #4]
   28118:	bl	1022c <mchar_async_node_add@plt>
   2811c:	str	r0, [r7, r5, lsl #2]
   28120:	ldr	r0, [sp]
   28124:	cmp	r0, #0
   28128:	bne	27f54 <myhtml_tree_init@@Base+0x80>
   2812c:	add	r5, r5, #1
   28130:	b	280b4 <myhtml_tree_init@@Base+0x1e0>

00028134 <myhtml_tree_clean_all@@Base>:
   28134:	push	{r4, lr}
   28138:	mov	r4, r0
   2813c:	ldr	r0, [r0, #12]
   28140:	bl	10fe8 <mcobject_async_clean@plt>
   28144:	ldr	r0, [r4, #8]
   28148:	bl	10550 <myhtml_token_clean@plt>
   2814c:	ldr	r0, [r4, #4]
   28150:	bl	10b5c <mchar_async_clean@plt>
   28154:	mov	r0, r4
   28158:	bl	ff80 <myhtml_tree_node_create@plt>
   2815c:	mov	r0, r4
   28160:	bl	ff80 <myhtml_tree_node_create@plt>
   28164:	mov	r3, #0
   28168:	mov	r2, #2
   2816c:	str	r3, [r4, #60]	; 0x3c
   28170:	str	r3, [r4, #68]	; 0x44
   28174:	str	r3, [r4, #76]	; 0x4c
   28178:	str	r3, [r4, #80]	; 0x50
   2817c:	str	r0, [r4, #84]	; 0x54
   28180:	str	r3, [r4, #88]	; 0x58
   28184:	str	r3, [r4, #92]	; 0x5c
   28188:	str	r3, [r4, #96]	; 0x60
   2818c:	str	r3, [r4, #100]	; 0x64
   28190:	str	r3, [r4, #104]	; 0x68
   28194:	strb	r3, [r4, #108]	; 0x6c
   28198:	str	r3, [r4, #112]	; 0x70
   2819c:	str	r3, [r4, #116]	; 0x74
   281a0:	str	r3, [r4, #120]	; 0x78
   281a4:	str	r3, [r4, #156]	; 0x9c
   281a8:	str	r3, [r4, #160]	; 0xa0
   281ac:	str	r3, [r4, #164]	; 0xa4
   281b0:	str	r3, [r4, #168]	; 0xa8
   281b4:	str	r3, [r4, #172]	; 0xac
   281b8:	str	r3, [r4, #176]	; 0xb0
   281bc:	str	r2, [r4, #180]	; 0xb4
   281c0:	str	r3, [r4, #152]	; 0x98
   281c4:	strb	r3, [r4, #188]	; 0xbc
   281c8:	str	r3, [r4, #192]	; 0xc0
   281cc:	str	r3, [r4, #196]	; 0xc4
   281d0:	str	r3, [r4, #200]	; 0xc8
   281d4:	str	r3, [r4, #204]	; 0xcc
   281d8:	ldr	r0, [r4, #148]	; 0x94
   281dc:	bl	10400 <myhtml_stream_buffer_clean@plt>
   281e0:	mov	r0, r4
   281e4:	bl	107b4 <myhtml_tree_active_formatting_clean@plt>
   281e8:	mov	r0, r4
   281ec:	bl	10db4 <myhtml_tree_open_elements_clean@plt>
   281f0:	ldr	r0, [r4, #132]	; 0x84
   281f4:	bl	10220 <myhtml_tree_list_clean@plt>
   281f8:	ldr	r0, [r4, #136]	; 0x88
   281fc:	bl	10f7c <myhtml_tree_token_list_clean@plt>
   28200:	mov	r0, r4
   28204:	bl	103b8 <myhtml_tree_template_insertion_clean@plt>
   28208:	ldr	r0, [r4, #72]	; 0x48
   2820c:	bl	10f04 <mcobject_clean@plt>
   28210:	ldr	r0, [r4, #28]
   28214:	bl	1100c <myhtml_tag_clean@plt>
   28218:	ldr	r0, [r4, #20]
   2821c:	bl	10934 <mythread_queue_list_entry_clean@plt>
   28220:	ldr	r3, [r4]
   28224:	ldr	r1, [r4, #20]
   28228:	ldr	r0, [r3, #4]
   2822c:	bl	10cb8 <mythread_queue_list_entry_make_batch@plt>
   28230:	ldr	r3, [r4]
   28234:	ldr	r1, [r4, #20]
   28238:	ldr	r0, [r3]
   2823c:	bl	10e74 <mythread_queue_list_entry_make_stream@plt>
   28240:	ldr	r0, [r4, #8]
   28244:	ldr	r1, [r0, #16]
   28248:	bl	10898 <myhtml_token_attr_create@plt>
   2824c:	str	r0, [r4, #56]	; 0x38
   28250:	pop	{r4, pc}

00028254 <myhtml_tree_token_list_destroy@@Base>:
   28254:	push	{r4, r5, r6, lr}
   28258:	subs	r4, r0, #0
   2825c:	beq	28288 <myhtml_tree_token_list_destroy@@Base+0x34>
   28260:	mov	r5, r1
   28264:	ldr	r0, [r4]
   28268:	cmp	r0, #0
   2826c:	beq	28274 <myhtml_tree_token_list_destroy@@Base+0x20>
   28270:	bl	10d60 <mycore_free@plt>
   28274:	cmp	r5, #0
   28278:	beq	28288 <myhtml_tree_token_list_destroy@@Base+0x34>
   2827c:	mov	r0, r4
   28280:	mov	r4, #0
   28284:	bl	10d60 <mycore_free@plt>
   28288:	mov	r0, r4
   2828c:	pop	{r4, r5, r6, pc}

00028290 <myhtml_tree_token_list_append@@Base>:
   28290:	push	{r4, r5, r6, lr}
   28294:	mov	r5, r1
   28298:	mov	r4, r0
   2829c:	ldr	r3, [r0, #4]
   282a0:	ldr	r1, [r0, #8]
   282a4:	cmp	r3, r1
   282a8:	bcc	282c8 <myhtml_tree_token_list_append@@Base+0x38>
   282ac:	lsl	r3, r1, #1
   282b0:	ldr	r0, [r0]
   282b4:	lsl	r1, r1, #3
   282b8:	str	r3, [r4, #8]
   282bc:	bl	fb84 <mycore_realloc@plt>
   282c0:	cmp	r0, #0
   282c4:	strne	r0, [r4]
   282c8:	ldrd	r2, [r4]
   282cc:	str	r5, [r2, r3, lsl #2]
   282d0:	add	r3, r3, #1
   282d4:	str	r3, [r4, #4]
   282d8:	pop	{r4, r5, r6, pc}

000282dc <myhtml_tree_token_list_append_after_index@@Base>:
   282dc:	push	{r4, r5, r6, lr}
   282e0:	mov	r6, r1
   282e4:	mov	r4, r0
   282e8:	mov	r5, r2
   282ec:	ldr	r3, [r0, #4]
   282f0:	ldr	r1, [r0, #8]
   282f4:	cmp	r3, r1
   282f8:	bcc	28318 <myhtml_tree_token_list_append_after_index@@Base+0x3c>
   282fc:	lsl	r3, r1, #1
   28300:	ldr	r0, [r0]
   28304:	lsl	r1, r1, #3
   28308:	str	r3, [r4, #8]
   2830c:	bl	fb84 <mycore_realloc@plt>
   28310:	cmp	r0, #0
   28314:	strne	r0, [r4]
   28318:	ldr	r3, [r4]
   2831c:	ldr	r1, [r4, #4]
   28320:	add	r3, r3, r5, lsl #2
   28324:	mov	r2, r3
   28328:	cmp	r1, r5
   2832c:	bcc	28340 <myhtml_tree_token_list_append_after_index@@Base+0x64>
   28330:	add	r1, r1, #1
   28334:	str	r6, [r2, #4]
   28338:	str	r1, [r4, #4]
   2833c:	pop	{r4, r5, r6, pc}
   28340:	ldr	r0, [r3]
   28344:	add	r5, r5, #1
   28348:	str	r0, [r3, #4]!
   2834c:	b	28328 <myhtml_tree_token_list_append_after_index@@Base+0x4c>

00028350 <myhtml_tree_token_list_current_node@@Base>:
   28350:	ldr	r3, [r0, #4]
   28354:	cmp	r3, #0
   28358:	ldrne	r2, [r0]
   2835c:	subne	r3, r3, #-1073741823	; 0xc0000001
   28360:	ldrne	r0, [r2, r3, lsl #2]
   28364:	moveq	r0, r3
   28368:	bx	lr

0002836c <myhtml_tree_tags_close_p@@Base>:
   2836c:	push	{r4, lr}
   28370:	mov	r2, #1
   28374:	mov	r4, r0
   28378:	mov	r1, #99	; 0x63
   2837c:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   28380:	mov	r0, r4
   28384:	bl	105bc <myhtml_tree_current_node@plt>
   28388:	mov	r1, #99	; 0x63
   2838c:	bl	10a3c <myhtml_is_html_node@plt>
   28390:	mov	r0, r4
   28394:	mov	r3, #0
   28398:	pop	{r4, lr}
   2839c:	mov	r2, #1
   283a0:	mov	r1, #99	; 0x63
   283a4:	b	108e0 <myhtml_tree_open_elements_pop_until@plt>

000283a8 <myhtml_tree_generic_raw_text_element_parsing_algorithm@@Base>:
   283a8:	push	{r4, lr}
   283ac:	mov	r2, #1
   283b0:	mov	r4, r0
   283b4:	bl	10c4c <myhtml_tree_node_insert_by_token@plt>
   283b8:	ldr	r3, [r4, #168]	; 0xa8
   283bc:	str	r3, [r4, #172]	; 0xac
   283c0:	mov	r3, #7
   283c4:	str	r3, [r4, #168]	; 0xa8
   283c8:	pop	{r4, pc}

000283cc <myhtml_tree_clear_stack_back_table_context@@Base>:
   283cc:	push	{r4, lr}
   283d0:	mov	r4, r0
   283d4:	bl	105bc <myhtml_tree_current_node@plt>
   283d8:	ldr	r2, [r0, #4]
   283dc:	cmp	r2, #125	; 0x7d
   283e0:	cmpne	r2, #128	; 0x80
   283e4:	movne	r3, #1
   283e8:	moveq	r3, #0
   283ec:	cmp	r2, #65	; 0x41
   283f0:	moveq	r3, #0
   283f4:	andne	r3, r3, #1
   283f8:	cmp	r3, #0
   283fc:	bne	2840c <myhtml_tree_clear_stack_back_table_context@@Base+0x40>
   28400:	ldr	r3, [r0, #8]
   28404:	cmp	r3, #1
   28408:	popeq	{r4, pc}
   2840c:	mov	r0, r4
   28410:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   28414:	mov	r0, r4
   28418:	b	283d4 <myhtml_tree_clear_stack_back_table_context@@Base+0x8>

0002841c <myhtml_tree_clear_stack_back_table_body_context@@Base>:
   2841c:	push	{r4, r5, r6, lr}
   28420:	mov	r5, #85	; 0x55
   28424:	mov	r4, r0
   28428:	bl	105bc <myhtml_tree_current_node@plt>
   2842c:	ldr	r2, [r0, #4]
   28430:	sub	r3, r2, #126	; 0x7e
   28434:	cmp	r3, #6
   28438:	mvnls	r3, r5, lsr r3
   2843c:	movhi	r3, #1
   28440:	andls	r3, r3, #1
   28444:	cmp	r2, #65	; 0x41
   28448:	moveq	r3, #0
   2844c:	andne	r3, r3, #1
   28450:	cmp	r3, #0
   28454:	bne	28464 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x48>
   28458:	ldr	r3, [r0, #8]
   2845c:	cmp	r3, #1
   28460:	popeq	{r4, r5, r6, pc}
   28464:	mov	r0, r4
   28468:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   2846c:	mov	r0, r4
   28470:	bl	105bc <myhtml_tree_current_node@plt>
   28474:	b	2842c <myhtml_tree_clear_stack_back_table_body_context@@Base+0x10>

00028478 <myhtml_tree_clear_stack_back_table_row_context@@Base>:
   28478:	push	{r4, lr}
   2847c:	mov	r4, r0
   28480:	bl	105bc <myhtml_tree_current_node@plt>
   28484:	ldr	r2, [r0, #4]
   28488:	cmp	r2, #135	; 0x87
   2848c:	cmpne	r2, #128	; 0x80
   28490:	movne	r3, #1
   28494:	moveq	r3, #0
   28498:	cmp	r2, #65	; 0x41
   2849c:	moveq	r3, #0
   284a0:	andne	r3, r3, #1
   284a4:	cmp	r3, #0
   284a8:	bne	284b8 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x40>
   284ac:	ldr	r3, [r0, #8]
   284b0:	cmp	r3, #1
   284b4:	popeq	{r4, pc}
   284b8:	mov	r0, r4
   284bc:	bl	10148 <myhtml_tree_open_elements_pop@plt>
   284c0:	mov	r0, r4
   284c4:	b	28480 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x8>

000284c8 <myhtml_tree_close_cell@@Base>:
   284c8:	mov	r2, #0
   284cc:	push	{r4, r5, r6, lr}
   284d0:	mov	r4, r0
   284d4:	mov	r5, r1
   284d8:	mov	r1, r2
   284dc:	bl	10670 <myhtml_tree_generate_implied_end_tags@plt>
   284e0:	mov	r0, r4
   284e4:	bl	105bc <myhtml_tree_current_node@plt>
   284e8:	mov	r3, #0
   284ec:	mov	r0, r4
   284f0:	ldmib	r5, {r1, r2}
   284f4:	bl	108e0 <myhtml_tree_open_elements_pop_until@plt>
   284f8:	mov	r0, r4
   284fc:	bl	10df0 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   28500:	mov	r3, #13
   28504:	str	r3, [r4, #168]	; 0xa8
   28508:	pop	{r4, r5, r6, pc}

0002850c <myhtml_tree_is_mathml_integration_point@@Base>:
   2850c:	ldr	r3, [r1, #8]
   28510:	cmp	r3, #2
   28514:	bne	28544 <myhtml_tree_is_mathml_integration_point@@Base+0x38>
   28518:	ldr	r3, [r1, #4]
   2851c:	sub	r2, r3, #227	; 0xe3
   28520:	cmp	r2, #11
   28524:	movwls	r0, #2097	; 0x831
   28528:	movhi	r0, #1
   2852c:	mvnls	r0, r0, lsr r2
   28530:	andls	r0, r0, #1
   28534:	eor	r0, r0, #1
   28538:	cmp	r3, #88	; 0x58
   2853c:	orreq	r0, r0, #1
   28540:	bx	lr
   28544:	mov	r0, #0
   28548:	bx	lr

0002854c <myhtml_tree_is_html_integration_point@@Base>:
   2854c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   28550:	mov	r5, r1
   28554:	ldr	r2, [r1, #8]
   28558:	cmp	r2, #3
   2855c:	bne	28584 <myhtml_tree_is_html_integration_point@@Base+0x38>
   28560:	ldr	r1, [r1, #4]
   28564:	cmp	r1, #156	; 0x9c
   28568:	cmpne	r1, #189	; 0xbd
   2856c:	moveq	r0, #1
   28570:	movne	r0, #0
   28574:	cmp	r1, #134	; 0x86
   28578:	orreq	r0, r0, #1
   2857c:	add	sp, sp, #12
   28580:	pop	{r4, r5, r6, r7, pc}
   28584:	cmp	r2, #2
   28588:	bne	2862c <myhtml_tree_is_html_integration_point@@Base+0xe0>
   2858c:	ldr	r6, [r1, #4]
   28590:	cmp	r6, #8
   28594:	bne	2862c <myhtml_tree_is_html_integration_point@@Base+0xe0>
   28598:	ldr	r1, [r1, #32]
   2859c:	cmp	r1, #0
   285a0:	beq	2862c <myhtml_tree_is_html_integration_point@@Base+0xe0>
   285a4:	ldr	r2, [r1, #48]	; 0x30
   285a8:	tst	r2, #1
   285ac:	bne	2862c <myhtml_tree_is_html_integration_point@@Base+0xe0>
   285b0:	mov	r4, r0
   285b4:	ldr	r0, [r0, #8]
   285b8:	bl	10610 <myhtml_token_node_wait_for_done@plt>
   285bc:	mov	r3, #9
   285c0:	ldr	r1, [r5, #32]
   285c4:	str	r3, [sp, #4]
   285c8:	ldr	r3, [pc, #100]	; 28634 <myhtml_tree_is_html_integration_point@@Base+0xe8>
   285cc:	ldr	r7, [pc, #100]	; 28638 <myhtml_tree_is_html_integration_point@@Base+0xec>
   285d0:	add	r3, pc, r3
   285d4:	add	r7, pc, r7
   285d8:	str	r3, [sp]
   285dc:	mov	r3, r6
   285e0:	mov	r2, r7
   285e4:	ldr	r0, [r4, #8]
   285e8:	bl	fcd4 <myhtml_token_attr_match_case@plt>
   285ec:	cmp	r0, #0
   285f0:	movne	r0, #1
   285f4:	bne	2857c <myhtml_tree_is_html_integration_point@@Base+0x30>
   285f8:	mov	r3, #21
   285fc:	ldr	r1, [r5, #32]
   28600:	mov	r2, r7
   28604:	str	r3, [sp, #4]
   28608:	ldr	r3, [pc, #44]	; 2863c <myhtml_tree_is_html_integration_point@@Base+0xf0>
   2860c:	add	r3, pc, r3
   28610:	str	r3, [sp]
   28614:	mov	r3, r6
   28618:	ldr	r0, [r4, #8]
   2861c:	bl	fcd4 <myhtml_token_attr_match_case@plt>
   28620:	adds	r0, r0, #0
   28624:	movne	r0, #1
   28628:	b	2857c <myhtml_tree_is_html_integration_point@@Base+0x30>
   2862c:	mov	r0, #0
   28630:	b	2857c <myhtml_tree_is_html_integration_point@@Base+0x30>
   28634:	ldrdeq	lr, [ip], -r5
   28638:	andeq	lr, ip, r8, asr #31
   2863c:	andeq	lr, ip, r3, lsr #31

00028640 <myhtml_tree_temp_tag_name_init@@Base>:
   28640:	push	{r4, lr}
   28644:	mov	r3, #0
   28648:	mov	r4, r0
   2864c:	mov	r0, #1024	; 0x400
   28650:	str	r3, [r4, #4]
   28654:	str	r0, [r4, #8]
   28658:	bl	10c28 <mycore_malloc@plt>
   2865c:	cmp	r0, #0
   28660:	str	r0, [r4]
   28664:	moveq	r0, #2
   28668:	movne	r0, #0
   2866c:	pop	{r4, pc}

00028670 <myhtml_tree_temp_tag_name_clean@@Base>:
   28670:	mov	r3, #0
   28674:	str	r3, [r0, #4]
   28678:	bx	lr

0002867c <myhtml_tree_temp_tag_name_destroy@@Base>:
   2867c:	push	{r4, r5, r6, lr}
   28680:	subs	r4, r0, #0
   28684:	beq	286b8 <myhtml_tree_temp_tag_name_destroy@@Base+0x3c>
   28688:	mov	r5, r1
   2868c:	ldr	r0, [r4]
   28690:	cmp	r0, #0
   28694:	beq	286a4 <myhtml_tree_temp_tag_name_destroy@@Base+0x28>
   28698:	bl	10d60 <mycore_free@plt>
   2869c:	mov	r3, #0
   286a0:	str	r3, [r4]
   286a4:	cmp	r5, #0
   286a8:	beq	286b8 <myhtml_tree_temp_tag_name_destroy@@Base+0x3c>
   286ac:	mov	r0, r4
   286b0:	mov	r4, #0
   286b4:	bl	10d60 <mycore_free@plt>
   286b8:	mov	r0, r4
   286bc:	pop	{r4, r5, r6, pc}

000286c0 <myhtml_tree_destroy@@Base>:
   286c0:	push	{r4, lr}
   286c4:	subs	r4, r0, #0
   286c8:	beq	287a0 <myhtml_tree_destroy@@Base+0xe0>
   286cc:	ldr	r0, [r4, #28]
   286d0:	bl	10dd8 <myhtml_tag_destroy@plt>
   286d4:	str	r0, [r4, #28]
   286d8:	mov	r0, r4
   286dc:	bl	1007c <myhtml_tree_active_formatting_destroy@plt>
   286e0:	str	r0, [r4, #124]	; 0x7c
   286e4:	mov	r0, r4
   286e8:	bl	10c7c <myhtml_tree_open_elements_destroy@plt>
   286ec:	mov	r1, #1
   286f0:	str	r0, [r4, #128]	; 0x80
   286f4:	ldr	r0, [r4, #132]	; 0x84
   286f8:	bl	10688 <myhtml_tree_list_destroy@plt>
   286fc:	mov	r1, #1
   28700:	str	r0, [r4, #132]	; 0x84
   28704:	ldr	r0, [r4, #136]	; 0x88
   28708:	bl	fc14 <myhtml_tree_token_list_destroy@plt>
   2870c:	str	r0, [r4, #136]	; 0x88
   28710:	mov	r0, r4
   28714:	bl	10dcc <myhtml_tree_template_insertion_destroy@plt>
   28718:	mov	r1, #1
   2871c:	str	r0, [r4, #140]	; 0x8c
   28720:	ldr	r0, [r4, #16]
   28724:	bl	10154 <mcsync_destroy@plt>
   28728:	mov	r1, #1
   2872c:	str	r0, [r4, #16]
   28730:	ldr	r0, [r4, #12]
   28734:	bl	10ab4 <mcobject_async_destroy@plt>
   28738:	str	r0, [r4, #12]
   2873c:	ldr	r0, [r4, #8]
   28740:	bl	10718 <myhtml_token_destroy@plt>
   28744:	mov	r1, #1
   28748:	str	r0, [r4, #8]
   2874c:	ldr	r0, [r4, #4]
   28750:	bl	10d3c <mchar_async_destroy@plt>
   28754:	mov	r1, #1
   28758:	str	r0, [r4, #4]
   2875c:	ldr	r0, [r4, #148]	; 0x94
   28760:	bl	fcc8 <myhtml_stream_buffer_destroy@plt>
   28764:	str	r0, [r4, #148]	; 0x94
   28768:	ldr	r0, [r4, #24]
   2876c:	bl	10268 <mythread_queue_destroy@plt>
   28770:	mov	r1, #1
   28774:	str	r0, [r4, #24]
   28778:	ldr	r0, [r4, #72]	; 0x48
   2877c:	bl	fd70 <mcobject_destroy@plt>
   28780:	mov	r1, #0
   28784:	str	r0, [r4, #72]	; 0x48
   28788:	add	r0, r4, #208	; 0xd0
   2878c:	bl	108d4 <myhtml_tree_temp_tag_name_destroy@plt>
   28790:	ldr	r0, [r4, #144]	; 0x90
   28794:	bl	10d60 <mycore_free@plt>
   28798:	mov	r0, r4
   2879c:	bl	10d60 <mycore_free@plt>
   287a0:	mov	r0, #0
   287a4:	pop	{r4, pc}

000287a8 <myhtml_tree_temp_tag_name_append_one@@Base>:
   287a8:	push	{r4, r5, r6, lr}
   287ac:	mov	r4, r0
   287b0:	mov	r6, r1
   287b4:	ldmib	r0, {r3, r5}
   287b8:	cmp	r3, r5
   287bc:	bcc	287e0 <myhtml_tree_temp_tag_name_append_one@@Base+0x38>
   287c0:	lsl	r5, r5, #1
   287c4:	ldr	r0, [r0]
   287c8:	mov	r1, r5
   287cc:	bl	fb84 <mycore_realloc@plt>
   287d0:	cmp	r0, #0
   287d4:	beq	287fc <myhtml_tree_temp_tag_name_append_one@@Base+0x54>
   287d8:	str	r0, [r4]
   287dc:	str	r5, [r4, #8]
   287e0:	ldrd	r2, [r4]
   287e4:	mov	r0, #0
   287e8:	strb	r6, [r2, r3]
   287ec:	ldr	r3, [r4, #4]
   287f0:	add	r3, r3, #1
   287f4:	str	r3, [r4, #4]
   287f8:	pop	{r4, r5, r6, pc}
   287fc:	mov	r0, #2
   28800:	pop	{r4, r5, r6, pc}

00028804 <myhtml_tree_temp_tag_name_append@@Base>:
   28804:	ldr	ip, [r0]
   28808:	cmp	ip, #0
   2880c:	cmpne	r2, #0
   28810:	beq	2887c <myhtml_tree_temp_tag_name_append@@Base+0x78>
   28814:	push	{r4, r5, r6, r7, r8, lr}
   28818:	mov	r5, r2
   2881c:	mov	r7, r1
   28820:	mov	r4, r0
   28824:	ldmib	r0, {r3, r6}
   28828:	add	r3, r2, r3
   2882c:	cmp	r3, r6
   28830:	bcc	28854 <myhtml_tree_temp_tag_name_append@@Base+0x50>
   28834:	add	r6, r2, r6, lsl #1
   28838:	mov	r0, ip
   2883c:	mov	r1, r6
   28840:	bl	fb84 <mycore_realloc@plt>
   28844:	cmp	r0, #0
   28848:	beq	28884 <myhtml_tree_temp_tag_name_append@@Base+0x80>
   2884c:	str	r0, [r4]
   28850:	str	r6, [r4, #8]
   28854:	mov	r2, r5
   28858:	mov	r1, r7
   2885c:	ldm	r4, {r0, r3}
   28860:	add	r0, r0, r3
   28864:	bl	fefc <memcpy@plt>
   28868:	ldr	r2, [r4, #4]
   2886c:	mov	r0, #0
   28870:	add	r5, r2, r5
   28874:	str	r5, [r4, #4]
   28878:	pop	{r4, r5, r6, r7, r8, pc}
   2887c:	mov	r0, #0
   28880:	bx	lr
   28884:	mov	r0, #2
   28888:	pop	{r4, r5, r6, r7, r8, pc}

0002888c <myhtml_tree_wait_for_last_done_token@@Base>:
   2888c:	push	{r4, r5, r6, lr}
   28890:	mov	r4, r0
   28894:	mov	r5, r1
   28898:	ldr	r3, [r4, #152]	; 0x98
   2889c:	cmp	r3, r5
   288a0:	popeq	{r4, r5, r6, pc}
   288a4:	ldr	r3, [r4]
   288a8:	ldr	r3, [r3]
   288ac:	ldr	r0, [r3, #24]
   288b0:	bl	10040 <mythread_nanosleep_sleep@plt>
   288b4:	b	28898 <myhtml_tree_wait_for_last_done_token@@Base+0xc>

000288b8 <myhtml_tree_special_list_init@@Base>:
   288b8:	push	{r4, lr}
   288bc:	mov	r3, #1024	; 0x400
   288c0:	mov	r4, r0
   288c4:	mov	r0, #8192	; 0x2000
   288c8:	str	r3, [r4, #8]
   288cc:	mov	r3, #0
   288d0:	str	r3, [r4, #4]
   288d4:	bl	10c28 <mycore_malloc@plt>
   288d8:	cmp	r0, #0
   288dc:	str	r0, [r4]
   288e0:	moveq	r0, #2
   288e4:	movne	r0, #0
   288e8:	pop	{r4, pc}

000288ec <myhtml_tree_special_list_clean@@Base>:
   288ec:	mov	r3, #0
   288f0:	str	r3, [r0, #4]
   288f4:	bx	lr

000288f8 <myhtml_tree_special_list_destroy@@Base>:
   288f8:	push	{r4, r5, r6, lr}
   288fc:	subs	r4, r0, #0
   28900:	beq	28934 <myhtml_tree_special_list_destroy@@Base+0x3c>
   28904:	mov	r5, r1
   28908:	ldr	r0, [r4]
   2890c:	cmp	r0, #0
   28910:	beq	28920 <myhtml_tree_special_list_destroy@@Base+0x28>
   28914:	bl	10d60 <mycore_free@plt>
   28918:	mov	r3, #0
   2891c:	str	r3, [r4]
   28920:	cmp	r5, #0
   28924:	beq	28934 <myhtml_tree_special_list_destroy@@Base+0x3c>
   28928:	mov	r0, r4
   2892c:	mov	r4, #0
   28930:	bl	10d60 <mycore_free@plt>
   28934:	mov	r0, r4
   28938:	pop	{r4, r5, r6, pc}

0002893c <myhtml_tree_special_list_append@@Base>:
   2893c:	push	{r4, r5, r6, r7, r8, lr}
   28940:	mov	r5, r1
   28944:	mov	r4, r0
   28948:	mov	r6, r2
   2894c:	ldr	r3, [r0, #4]
   28950:	ldr	r1, [r0, #8]
   28954:	cmp	r3, r1
   28958:	bcc	2897c <myhtml_tree_special_list_append@@Base+0x40>
   2895c:	lsl	r7, r1, #1
   28960:	ldr	r0, [r0]
   28964:	lsl	r1, r1, #4
   28968:	bl	fb84 <mycore_realloc@plt>
   2896c:	cmp	r0, #0
   28970:	beq	2899c <myhtml_tree_special_list_append@@Base+0x60>
   28974:	str	r0, [r4]
   28978:	str	r7, [r4, #8]
   2897c:	ldm	r4, {r1, r3}
   28980:	add	r0, r1, r3, lsl #3
   28984:	str	r6, [r0, #4]
   28988:	mov	r0, #0
   2898c:	str	r5, [r1, r3, lsl #3]
   28990:	add	r3, r3, #1
   28994:	str	r3, [r4, #4]
   28998:	pop	{r4, r5, r6, r7, r8, pc}
   2899c:	mov	r0, #2
   289a0:	pop	{r4, r5, r6, r7, r8, pc}

000289a4 <myhtml_tree_special_list_length@@Base>:
   289a4:	ldr	r0, [r0, #4]
   289a8:	bx	lr

000289ac <myhtml_tree_special_list_pop@@Base>:
   289ac:	ldr	r3, [r0, #4]
   289b0:	cmp	r3, #0
   289b4:	subne	r3, r3, #1
   289b8:	strne	r3, [r0, #4]
   289bc:	ldr	r0, [r0, #4]
   289c0:	bx	lr

000289c4 <myhtml_tree_special_list_get_last@@Base>:
   289c4:	ldr	r3, [r0, #4]
   289c8:	cmp	r3, #0
   289cc:	ldrne	r0, [r0]
   289d0:	addne	r0, r0, r3, lsl #3
   289d4:	moveq	r0, r3
   289d8:	bx	lr

000289dc <myhtml_tree_incoming_buffer_first@@Base>:
   289dc:	ldr	r0, [r0, #80]	; 0x50
   289e0:	bx	lr

000289e4 <myhtml_tree_incomming_buffer_make_data@@Base>:
   289e4:	push	{r4, r5, r6, r7, r8, lr}
   289e8:	mov	r7, r0
   289ec:	mov	r4, r1
   289f0:	mov	r6, r2
   289f4:	ldr	r0, [r0, #80]	; 0x50
   289f8:	bl	100a0 <mycore_incoming_buffer_find_by_position@plt>
   289fc:	mov	r5, r0
   28a00:	ldr	r0, [r0, #12]
   28a04:	ldr	r3, [r5, #8]
   28a08:	sub	r4, r4, r0
   28a0c:	add	r2, r4, r6
   28a10:	cmp	r2, r3
   28a14:	bhi	28a24 <myhtml_tree_incomming_buffer_make_data@@Base+0x40>
   28a18:	ldr	r0, [r5]
   28a1c:	add	r0, r0, r4
   28a20:	pop	{r4, r5, r6, r7, r8, pc}
   28a24:	ldr	r3, [r7, #208]	; 0xd0
   28a28:	add	r8, r7, #208	; 0xd0
   28a2c:	mov	r0, r8
   28a30:	cmp	r3, #0
   28a34:	bne	28a80 <myhtml_tree_incomming_buffer_make_data@@Base+0x9c>
   28a38:	bl	10598 <myhtml_tree_temp_tag_name_init@plt>
   28a3c:	ldr	r1, [r5]
   28a40:	add	r3, r6, r4
   28a44:	ldr	r2, [r5, #8]
   28a48:	add	r1, r1, r4
   28a4c:	cmp	r3, r2
   28a50:	bls	28a88 <myhtml_tree_incomming_buffer_make_data@@Base+0xa4>
   28a54:	sub	r3, r4, r2
   28a58:	mov	r0, r8
   28a5c:	sub	r2, r2, r4
   28a60:	add	r6, r6, r3
   28a64:	bl	fc2c <myhtml_tree_temp_tag_name_append@plt>
   28a68:	ldr	r5, [r5, #20]
   28a6c:	mov	r4, #0
   28a70:	cmp	r5, r4
   28a74:	bne	28a3c <myhtml_tree_incomming_buffer_make_data@@Base+0x58>
   28a78:	ldr	r0, [r7, #208]	; 0xd0
   28a7c:	pop	{r4, r5, r6, r7, r8, pc}
   28a80:	bl	10214 <myhtml_tree_temp_tag_name_clean@plt>
   28a84:	b	28a3c <myhtml_tree_incomming_buffer_make_data@@Base+0x58>
   28a88:	mov	r2, r6
   28a8c:	mov	r0, r8
   28a90:	bl	fc2c <myhtml_tree_temp_tag_name_append@plt>
   28a94:	b	28a78 <myhtml_tree_incomming_buffer_make_data@@Base+0x94>

00028a98 <mycore_fopen@@Base>:
   28a98:	b	fd58 <fopen@plt>

00028a9c <mycore_fclose@@Base>:
   28a9c:	b	10994 <fclose@plt>

00028aa0 <mycore_fread@@Base>:
   28aa0:	b	10364 <fread@plt>

00028aa4 <mycore_fwrite@@Base>:
   28aa4:	b	102d4 <fwrite@plt>

00028aa8 <mycore_fflush@@Base>:
   28aa8:	b	fdac <fflush@plt>

00028aac <mycore_fseek@@Base>:
   28aac:	b	10ebc <fseek@plt>

00028ab0 <mycore_ftell@@Base>:
   28ab0:	b	10004 <ftell@plt>

00028ab4 <mycore_ferror@@Base>:
   28ab4:	b	fef0 <ferror@plt>

00028ab8 <mycore_setbuf@@Base>:
   28ab8:	b	fca4 <setbuf@plt>

00028abc <mycore_malloc@@Base>:
   28abc:	b	1049c <malloc@plt>

00028ac0 <mycore_realloc@@Base>:
   28ac0:	b	10184 <realloc@plt>

00028ac4 <mycore_calloc@@Base>:
   28ac4:	b	fb90 <calloc@plt>

00028ac8 <mycore_free@@Base>:
   28ac8:	push	{r4, lr}
   28acc:	bl	fe54 <free@plt>
   28ad0:	mov	r0, #0
   28ad4:	pop	{r4, pc}

00028ad8 <mythread_thread_create@@Base>:
   28ad8:	push	{r4, r5, r6, r7, r8, lr}
   28adc:	mov	r5, r0
   28ae0:	mov	r6, r1
   28ae4:	mov	r0, #1
   28ae8:	mov	r1, #4
   28aec:	mov	r7, r2
   28af0:	bl	feb4 <mycore_calloc@plt>
   28af4:	subs	r4, r0, #0
   28af8:	bne	28b08 <mythread_thread_create@@Base+0x30>
   28afc:	mov	r4, #0
   28b00:	mov	r0, r4
   28b04:	pop	{r4, r5, r6, r7, r8, pc}
   28b08:	mov	r3, r7
   28b0c:	mov	r2, r6
   28b10:	ldr	r1, [r5, #20]
   28b14:	bl	10370 <pthread_create@plt>
   28b18:	cmp	r0, #0
   28b1c:	beq	28b00 <mythread_thread_create@@Base+0x28>
   28b20:	b	28afc <mythread_thread_create@@Base+0x24>

00028b24 <mythread_thread_join@@Base>:
   28b24:	mov	r3, r1
   28b28:	push	{r4, lr}
   28b2c:	mov	r1, #0
   28b30:	ldr	r0, [r3]
   28b34:	bl	10afc <pthread_join@plt>
   28b38:	adds	r0, r0, #0
   28b3c:	movne	r0, #1
   28b40:	pop	{r4, pc}

00028b44 <mythread_thread_cancel@@Base>:
   28b44:	push	{r4, lr}
   28b48:	ldr	r0, [r1]
   28b4c:	bl	1088c <pthread_cancel@plt>
   28b50:	adds	r0, r0, #0
   28b54:	movne	r0, #1
   28b58:	pop	{r4, pc}

00028b5c <mythread_thread_destroy@@Base>:
   28b5c:	push	{r4, lr}
   28b60:	mov	r0, r1
   28b64:	bl	10d60 <mycore_free@plt>
   28b68:	mov	r0, #0
   28b6c:	pop	{r4, pc}

00028b70 <mythread_thread_attr_init@@Base>:
   28b70:	push	{r4, r5, r6, lr}
   28b74:	mov	r1, #36	; 0x24
   28b78:	mov	r6, r0
   28b7c:	mov	r0, #1
   28b80:	bl	feb4 <mycore_calloc@plt>
   28b84:	subs	r4, r0, #0
   28b88:	beq	28bac <mythread_thread_attr_init@@Base+0x3c>
   28b8c:	bl	10730 <pthread_attr_init@plt>
   28b90:	cmp	r0, #0
   28b94:	mov	r5, r0
   28b98:	str	r0, [r6, #28]
   28b9c:	beq	28bb4 <mythread_thread_attr_init@@Base+0x44>
   28ba0:	mov	r0, r4
   28ba4:	mov	r4, #0
   28ba8:	bl	10d60 <mycore_free@plt>
   28bac:	mov	r0, r4
   28bb0:	pop	{r4, r5, r6, pc}
   28bb4:	mov	r1, r0
   28bb8:	mov	r0, r4
   28bbc:	bl	10eec <pthread_attr_setdetachstate@plt>
   28bc0:	cmp	r0, #0
   28bc4:	str	r0, [r6, #28]
   28bc8:	beq	28bac <mythread_thread_attr_init@@Base+0x3c>
   28bcc:	mov	r0, r4
   28bd0:	mov	r4, r5
   28bd4:	bl	10d60 <mycore_free@plt>
   28bd8:	b	28bac <mythread_thread_attr_init@@Base+0x3c>

00028bdc <mythread_thread_attr_clean@@Base>:
   28bdc:	bx	lr

00028be0 <mythread_thread_attr_destroy@@Base>:
   28be0:	push	{r4, r5, r6, lr}
   28be4:	subs	r4, r1, #0
   28be8:	popeq	{r4, r5, r6, pc}
   28bec:	mov	r5, r0
   28bf0:	mov	r0, r4
   28bf4:	bl	fd7c <pthread_attr_destroy@plt>
   28bf8:	str	r0, [r5, #28]
   28bfc:	mov	r0, r4
   28c00:	pop	{r4, r5, r6, lr}
   28c04:	b	10d60 <mycore_free@plt>

00028c08 <mythread_mutex_create@@Base>:
   28c08:	push	{r4, lr}
   28c0c:	bl	1085c <mcsync_mutex_create@plt>
   28c10:	subs	r4, r0, #0
   28c14:	beq	28c30 <mythread_mutex_create@@Base+0x28>
   28c18:	bl	10ae4 <mcsync_mutex_init@plt>
   28c1c:	cmp	r0, #0
   28c20:	beq	28c30 <mythread_mutex_create@@Base+0x28>
   28c24:	mov	r0, r4
   28c28:	mov	r4, #0
   28c2c:	bl	10d60 <mycore_free@plt>
   28c30:	mov	r0, r4
   28c34:	pop	{r4, pc}

00028c38 <mythread_mutex_post@@Base>:
   28c38:	mov	r0, r1
   28c3c:	b	fe9c <mcsync_mutex_unlock@plt>

00028c40 <mythread_mutex_wait@@Base>:
   28c40:	mov	r0, r1
   28c44:	b	10fd0 <mcsync_mutex_lock@plt>

00028c48 <mythread_mutex_try_wait@@Base>:
   28c48:	mov	r0, r1
   28c4c:	b	10f40 <mcsync_mutex_try_lock@plt>

00028c50 <mythread_mutex_close@@Base>:
   28c50:	mov	r0, r1
   28c54:	b	fd10 <mcsync_mutex_destroy@plt>

00028c58 <mythread_nanosleep_create@@Base>:
   28c58:	mov	r1, #8
   28c5c:	mov	r0, #1
   28c60:	b	feb4 <mycore_calloc@plt>

00028c64 <mythread_nanosleep_clean@@Base>:
   28c64:	mov	r3, #0
   28c68:	str	r3, [r0]
   28c6c:	str	r3, [r0, #4]
   28c70:	bx	lr

00028c74 <mythread_nanosleep_destroy@@Base>:
   28c74:	b	10d60 <mycore_free@plt>

00028c78 <mythread_nanosleep_sleep@@Base>:
   28c78:	push	{r4, lr}
   28c7c:	mov	r1, #0
   28c80:	bl	fec0 <nanosleep@plt>
   28c84:	adds	r0, r0, #0
   28c88:	movne	r0, #1
   28c8c:	pop	{r4, pc}

00028c90 <mcsync_spin_create@@Base>:
   28c90:	mov	r1, #4
   28c94:	mov	r0, #1
   28c98:	b	feb4 <mycore_calloc@plt>

00028c9c <mcsync_spin_init@@Base>:
   28c9c:	mov	r0, #0
   28ca0:	bx	lr

00028ca4 <mcsync_spin_clean@@Base>:
   28ca4:	mov	r3, #0
   28ca8:	str	r3, [r0]
   28cac:	bx	lr

00028cb0 <mcsync_spin_destroy@@Base>:
   28cb0:	b	10d60 <mycore_free@plt>

00028cb4 <mcsync_spin_lock@@Base>:
   28cb4:	mov	r3, #0
   28cb8:	mov	r1, #1
   28cbc:	ldaex	r2, [r0]
   28cc0:	cmp	r2, r3
   28cc4:	bne	28cd4 <mcsync_spin_lock@@Base+0x20>
   28cc8:	stlex	ip, r1, [r0]
   28ccc:	cmp	ip, #0
   28cd0:	bne	28cbc <mcsync_spin_lock@@Base+0x8>
   28cd4:	mov	r3, r2
   28cd8:	bne	28cbc <mcsync_spin_lock@@Base+0x8>
   28cdc:	mov	r0, #0
   28ce0:	bx	lr

00028ce4 <mcsync_spin_unlock@@Base>:
   28ce4:	mov	r3, #0
   28ce8:	stl	r3, [r0]
   28cec:	mov	r0, r3
   28cf0:	bx	lr

00028cf4 <mcsync_mutex_create@@Base>:
   28cf4:	mov	r1, #24
   28cf8:	mov	r0, #1
   28cfc:	b	feb4 <mycore_calloc@plt>

00028d00 <mcsync_mutex_init@@Base>:
   28d00:	push	{r4, lr}
   28d04:	mov	r1, #0
   28d08:	bl	ff68 <pthread_mutex_init@plt>
   28d0c:	adds	r0, r0, #0
   28d10:	movne	r0, #1
   28d14:	pop	{r4, pc}

00028d18 <mcsync_mutex_clean@@Base>:
   28d18:	bx	lr

00028d1c <mcsync_mutex_destroy@@Base>:
   28d1c:	push	{r4, lr}
   28d20:	mov	r4, r0
   28d24:	bl	fda0 <pthread_mutex_destroy@plt>
   28d28:	mov	r0, r4
   28d2c:	pop	{r4, lr}
   28d30:	b	10d60 <mycore_free@plt>

00028d34 <mcsync_mutex_lock@@Base>:
   28d34:	push	{r4, lr}
   28d38:	bl	fea8 <pthread_mutex_lock@plt>
   28d3c:	adds	r0, r0, #0
   28d40:	movne	r0, #1
   28d44:	pop	{r4, pc}

00028d48 <mcsync_mutex_try_lock@@Base>:
   28d48:	push	{r4, lr}
   28d4c:	bl	ffd4 <pthread_mutex_trylock@plt>
   28d50:	adds	r0, r0, #0
   28d54:	movne	r0, #1
   28d58:	pop	{r4, pc}

00028d5c <mcsync_mutex_unlock@@Base>:
   28d5c:	push	{r4, lr}
   28d60:	bl	fb6c <pthread_mutex_unlock@plt>
   28d64:	adds	r0, r0, #0
   28d68:	movne	r0, #1
   28d6c:	pop	{r4, pc}

Disassembly of section .fini:

00028d70 <.fini>:
   28d70:	push	{r3, lr}
   28d74:	pop	{r3, pc}
