
../repos/dvidelabs-flatcc-3b39ef7/test/reflection_test/reflection_test:     file format elf32-littlearm


Disassembly of section .init:

0001083c <.init>:
   1083c:	push	{r3, lr}
   10840:	bl	10964 <_start@@Base+0x3c>
   10844:	pop	{r3, pc}

Disassembly of section .plt:

00010848 <strcmp@plt-0x14>:
   10848:	push	{lr}		; (str lr, [sp, #-4]!)
   1084c:	ldr	lr, [pc, #4]	; 10858 <strcmp@plt-0x4>
   10850:	add	lr, pc, lr
   10854:	ldr	pc, [lr, #8]!
   10858:	andeq	r2, r1, r8, lsr #15

0001085c <strcmp@plt>:
   1085c:	add	ip, pc, #0, 12
   10860:	add	ip, ip, #73728	; 0x12000
   10864:	ldr	pc, [ip, #1960]!	; 0x7a8

00010868 <printf@plt>:
   10868:	add	ip, pc, #0, 12
   1086c:	add	ip, ip, #73728	; 0x12000
   10870:	ldr	pc, [ip, #1952]!	; 0x7a0

00010874 <fopen@plt>:
   10874:	add	ip, pc, #0, 12
   10878:	add	ip, ip, #73728	; 0x12000
   1087c:	ldr	pc, [ip, #1944]!	; 0x798

00010880 <free@plt>:
   10880:	add	ip, pc, #0, 12
   10884:	add	ip, ip, #73728	; 0x12000
   10888:	ldr	pc, [ip, #1936]!	; 0x790

0001088c <ftell@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #73728	; 0x12000
   10894:	ldr	pc, [ip, #1928]!	; 0x788

00010898 <rewind@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #73728	; 0x12000
   108a0:	ldr	pc, [ip, #1920]!	; 0x780

000108a4 <fread@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #73728	; 0x12000
   108ac:	ldr	pc, [ip, #1912]!	; 0x778

000108b0 <malloc@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #73728	; 0x12000
   108b8:	ldr	pc, [ip, #1904]!	; 0x770

000108bc <__libc_start_main@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #73728	; 0x12000
   108c4:	ldr	pc, [ip, #1896]!	; 0x768

000108c8 <__gmon_start__@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #73728	; 0x12000
   108d0:	ldr	pc, [ip, #1888]!	; 0x760

000108d4 <exit@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #73728	; 0x12000
   108dc:	ldr	pc, [ip, #1880]!	; 0x758

000108e0 <fprintf@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #73728	; 0x12000
   108e8:	ldr	pc, [ip, #1872]!	; 0x750

000108ec <strncpy@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #73728	; 0x12000
   108f4:	ldr	pc, [ip, #1864]!	; 0x748

000108f8 <fclose@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #73728	; 0x12000
   10900:	ldr	pc, [ip, #1856]!	; 0x740

00010904 <fseek@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #73728	; 0x12000
   1090c:	ldr	pc, [ip, #1848]!	; 0x738

00010910 <abort@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #73728	; 0x12000
   10918:	ldr	pc, [ip, #1840]!	; 0x730

0001091c <__assert_fail@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #73728	; 0x12000
   10924:	ldr	pc, [ip, #1832]!	; 0x728

Disassembly of section .text:

00010928 <_start@@Base>:
   10928:	mov	fp, #0
   1092c:	mov	lr, #0
   10930:	pop	{r1}		; (ldr r1, [sp], #4)
   10934:	mov	r2, sp
   10938:	push	{r2}		; (str r2, [sp, #-4]!)
   1093c:	push	{r0}		; (str r0, [sp, #-4]!)
   10940:	ldr	ip, [pc, #16]	; 10958 <_start@@Base+0x30>
   10944:	push	{ip}		; (str ip, [sp, #-4]!)
   10948:	ldr	r0, [pc, #12]	; 1095c <_start@@Base+0x34>
   1094c:	ldr	r3, [pc, #12]	; 10960 <_start@@Base+0x38>
   10950:	bl	108bc <__libc_start_main@plt>
   10954:	bl	10910 <abort@plt>
   10958:	andeq	r2, r1, ip, ror #5
   1095c:	andeq	r1, r1, r4, asr #24
   10960:	andeq	r2, r1, ip, lsl #5
   10964:	ldr	r3, [pc, #20]	; 10980 <_start@@Base+0x58>
   10968:	ldr	r2, [pc, #20]	; 10984 <_start@@Base+0x5c>
   1096c:	add	r3, pc, r3
   10970:	ldr	r2, [r3, r2]
   10974:	cmp	r2, #0
   10978:	bxeq	lr
   1097c:	b	108c8 <__gmon_start__@plt>
   10980:	andeq	r2, r1, ip, lsl #13
   10984:	andeq	r0, r0, r4, asr r0
   10988:	ldr	r0, [pc, #24]	; 109a8 <_start@@Base+0x80>
   1098c:	ldr	r3, [pc, #24]	; 109ac <_start@@Base+0x84>
   10990:	cmp	r3, r0
   10994:	bxeq	lr
   10998:	ldr	r3, [pc, #16]	; 109b0 <_start@@Base+0x88>
   1099c:	cmp	r3, #0
   109a0:	bxeq	lr
   109a4:	bx	r3
   109a8:	andeq	r3, r2, ip, rrx
   109ac:	andeq	r3, r2, ip, rrx
   109b0:	andeq	r0, r0, r0
   109b4:	ldr	r0, [pc, #36]	; 109e0 <_start@@Base+0xb8>
   109b8:	ldr	r1, [pc, #36]	; 109e4 <_start@@Base+0xbc>
   109bc:	sub	r1, r1, r0
   109c0:	asr	r1, r1, #2
   109c4:	add	r1, r1, r1, lsr #31
   109c8:	asrs	r1, r1, #1
   109cc:	bxeq	lr
   109d0:	ldr	r3, [pc, #16]	; 109e8 <_start@@Base+0xc0>
   109d4:	cmp	r3, #0
   109d8:	bxeq	lr
   109dc:	bx	r3
   109e0:	andeq	r3, r2, ip, rrx
   109e4:	andeq	r3, r2, ip, rrx
   109e8:	andeq	r0, r0, r0
   109ec:	push	{r4, lr}
   109f0:	ldr	r4, [pc, #24]	; 10a10 <_start@@Base+0xe8>
   109f4:	ldrb	r3, [r4]
   109f8:	cmp	r3, #0
   109fc:	popne	{r4, pc}
   10a00:	bl	10988 <_start@@Base+0x60>
   10a04:	mov	r3, #1
   10a08:	strb	r3, [r4]
   10a0c:	pop	{r4, pc}
   10a10:	andeq	r3, r2, ip, rrx
   10a14:	b	109b4 <_start@@Base+0x8c>

00010a18 <test_schema@@Base>:
   10a18:	push	{fp, lr}
   10a1c:	mov	fp, sp
   10a20:	sub	sp, sp, #136	; 0x88
   10a24:	str	r0, [fp, #-4]
   10a28:	mvn	r0, #0
   10a2c:	str	r0, [fp, #-16]
   10a30:	ldr	r0, [fp, #-4]
   10a34:	movw	r1, #10000	; 0x2710
   10a38:	sub	r2, fp, #12
   10a3c:	bl	10ea0 <test_schema@@Base+0x488>
   10a40:	str	r0, [fp, #-8]
   10a44:	ldr	r0, [fp, #-8]
   10a48:	movw	r1, #0
   10a4c:	cmp	r0, r1
   10a50:	bne	10a68 <test_schema@@Base+0x50>
   10a54:	ldr	r0, [pc, #988]	; 10e38 <test_schema@@Base+0x420>
   10a58:	add	r0, pc, r0
   10a5c:	bl	10868 <printf@plt>
   10a60:	str	r0, [fp, #-52]	; 0xffffffcc
   10a64:	b	10e14 <test_schema@@Base+0x3fc>
   10a68:	ldr	r0, [fp, #-8]
   10a6c:	bl	11090 <test_schema@@Base+0x678>
   10a70:	str	r0, [fp, #-20]	; 0xffffffec
   10a74:	ldr	r0, [fp, #-20]	; 0xffffffec
   10a78:	bl	1110c <test_schema@@Base+0x6f4>
   10a7c:	str	r0, [fp, #-24]	; 0xffffffe8
   10a80:	movw	r0, #0
   10a84:	str	r0, [fp, #-44]	; 0xffffffd4
   10a88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10a8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10a90:	str	r0, [fp, #-56]	; 0xffffffc8
   10a94:	mov	r0, r1
   10a98:	bl	1122c <test_schema@@Base+0x814>
   10a9c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   10aa0:	cmp	r1, r0
   10aa4:	bcs	10af4 <test_schema@@Base+0xdc>
   10aa8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   10aac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10ab0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   10ab4:	str	r1, [fp, #-60]	; 0xffffffc4
   10ab8:	mov	r1, r2
   10abc:	bl	1139c <test_schema@@Base+0x984>
   10ac0:	bl	1127c <test_schema@@Base+0x864>
   10ac4:	ldr	r1, [pc, #968]	; 10e94 <test_schema@@Base+0x47c>
   10ac8:	add	r1, pc, r1
   10acc:	str	r0, [fp, #-64]	; 0xffffffc0
   10ad0:	mov	r0, r1
   10ad4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   10ad8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   10adc:	bl	10868 <printf@plt>
   10ae0:	str	r0, [sp, #68]	; 0x44
   10ae4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10ae8:	add	r0, r0, #1
   10aec:	str	r0, [fp, #-44]	; 0xffffffd4
   10af0:	b	10a88 <test_schema@@Base+0x70>
   10af4:	ldr	r0, [pc, #836]	; 10e40 <test_schema@@Base+0x428>
   10af8:	add	r1, pc, r0
   10afc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10b00:	bl	1142c <test_schema@@Base+0xa14>
   10b04:	ldr	r1, [pc, #816]	; 10e3c <test_schema@@Base+0x424>
   10b08:	add	r1, pc, r1
   10b0c:	str	r0, [fp, #-44]	; 0xffffffd4
   10b10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10b14:	ldr	r1, [r1]
   10b18:	cmp	r0, r1
   10b1c:	bne	10b34 <test_schema@@Base+0x11c>
   10b20:	ldr	r0, [pc, #872]	; 10e90 <test_schema@@Base+0x478>
   10b24:	add	r0, pc, r0
   10b28:	bl	10868 <printf@plt>
   10b2c:	str	r0, [sp, #64]	; 0x40
   10b30:	b	10e14 <test_schema@@Base+0x3fc>
   10b34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10b38:	str	r0, [fp, #-48]	; 0xffffffd0
   10b3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10b40:	ldr	r1, [fp, #-44]	; 0xffffffd4
   10b44:	bl	1139c <test_schema@@Base+0x984>
   10b48:	str	r0, [fp, #-28]	; 0xffffffe4
   10b4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10b50:	bl	1127c <test_schema@@Base+0x864>
   10b54:	ldr	r1, [pc, #828]	; 10e98 <test_schema@@Base+0x480>
   10b58:	add	r1, pc, r1
   10b5c:	bl	1085c <strcmp@plt>
   10b60:	cmp	r0, #0
   10b64:	beq	10b7c <test_schema@@Base+0x164>
   10b68:	ldr	r0, [pc, #796]	; 10e8c <test_schema@@Base+0x474>
   10b6c:	add	r0, pc, r0
   10b70:	bl	10868 <printf@plt>
   10b74:	str	r0, [sp, #60]	; 0x3c
   10b78:	b	10e14 <test_schema@@Base+0x3fc>
   10b7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10b80:	bl	11454 <test_schema@@Base+0xa3c>
   10b84:	ldr	lr, [pc, #700]	; 10e48 <test_schema@@Base+0x430>
   10b88:	add	r1, pc, lr
   10b8c:	str	r0, [fp, #-32]	; 0xffffffe0
   10b90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10b94:	bl	11574 <test_schema@@Base+0xb5c>
   10b98:	ldr	r1, [pc, #676]	; 10e44 <test_schema@@Base+0x42c>
   10b9c:	add	r1, pc, r1
   10ba0:	str	r0, [fp, #-44]	; 0xffffffd4
   10ba4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10ba8:	ldr	r1, [r1]
   10bac:	cmp	r0, r1
   10bb0:	bne	10bc8 <test_schema@@Base+0x1b0>
   10bb4:	ldr	r0, [pc, #716]	; 10e88 <test_schema@@Base+0x470>
   10bb8:	add	r0, pc, r0
   10bbc:	bl	10868 <printf@plt>
   10bc0:	str	r0, [sp, #56]	; 0x38
   10bc4:	b	10e14 <test_schema@@Base+0x3fc>
   10bc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10bcc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   10bd0:	bl	1159c <test_schema@@Base+0xb84>
   10bd4:	str	r0, [fp, #-36]	; 0xffffffdc
   10bd8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10bdc:	bl	1162c <test_schema@@Base+0xc14>
   10be0:	eor	r0, r0, #150	; 0x96
   10be4:	orr	r0, r0, r1
   10be8:	cmp	r0, #0
   10bec:	beq	10c68 <test_schema@@Base+0x250>
   10bf0:	b	10bf4 <test_schema@@Base+0x1dc>
   10bf4:	ldr	r0, [pc, #648]	; 10e84 <test_schema@@Base+0x46c>
   10bf8:	add	r0, pc, r0
   10bfc:	bl	10868 <printf@plt>
   10c00:	ldr	lr, [fp, #-36]	; 0xffffffdc
   10c04:	str	r0, [sp, #52]	; 0x34
   10c08:	mov	r0, lr
   10c0c:	bl	11734 <test_schema@@Base+0xd1c>
   10c10:	ldr	lr, [pc, #616]	; 10e80 <test_schema@@Base+0x468>
   10c14:	add	lr, pc, lr
   10c18:	str	r0, [sp, #48]	; 0x30
   10c1c:	mov	r0, lr
   10c20:	ldr	r1, [sp, #48]	; 0x30
   10c24:	bl	10868 <printf@plt>
   10c28:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10c2c:	str	r0, [sp, #44]	; 0x2c
   10c30:	mov	r0, r1
   10c34:	bl	1162c <test_schema@@Base+0xc14>
   10c38:	ldr	lr, [pc, #572]	; 10e7c <test_schema@@Base+0x464>
   10c3c:	add	lr, pc, lr
   10c40:	ldr	r2, [pc, #596]	; 10e9c <test_schema@@Base+0x484>
   10c44:	add	r2, pc, r2
   10c48:	str	r0, [sp, #40]	; 0x28
   10c4c:	mov	r0, r2
   10c50:	ldr	r2, [sp, #40]	; 0x28
   10c54:	mov	r3, r1
   10c58:	str	lr, [sp, #36]	; 0x24
   10c5c:	bl	10868 <printf@plt>
   10c60:	str	r0, [sp, #32]
   10c64:	b	10e14 <test_schema@@Base+0x3fc>
   10c68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10c6c:	bl	11854 <test_schema@@Base+0xe3c>
   10c70:	str	r0, [fp, #-40]	; 0xffffffd8
   10c74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10c78:	bl	11970 <test_schema@@Base+0xf58>
   10c7c:	sxtb	r0, r0
   10c80:	cmp	r0, #5
   10c84:	beq	10c9c <test_schema@@Base+0x284>
   10c88:	ldr	r0, [pc, #488]	; 10e78 <test_schema@@Base+0x460>
   10c8c:	add	r0, pc, r0
   10c90:	bl	10868 <printf@plt>
   10c94:	str	r0, [sp, #28]
   10c98:	b	10e14 <test_schema@@Base+0x3fc>
   10c9c:	ldr	r0, [pc, #428]	; 10e50 <test_schema@@Base+0x438>
   10ca0:	add	r1, pc, r0
   10ca4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10ca8:	bl	11574 <test_schema@@Base+0xb5c>
   10cac:	ldr	r1, [pc, #408]	; 10e4c <test_schema@@Base+0x434>
   10cb0:	add	r1, pc, r1
   10cb4:	str	r0, [fp, #-44]	; 0xffffffd4
   10cb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10cbc:	ldr	r1, [r1]
   10cc0:	cmp	r0, r1
   10cc4:	bne	10cdc <test_schema@@Base+0x2c4>
   10cc8:	ldr	r0, [pc, #420]	; 10e74 <test_schema@@Base+0x45c>
   10ccc:	add	r0, pc, r0
   10cd0:	bl	10868 <printf@plt>
   10cd4:	str	r0, [sp, #24]
   10cd8:	b	10e14 <test_schema@@Base+0x3fc>
   10cdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10ce0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   10ce4:	bl	1159c <test_schema@@Base+0xb84>
   10ce8:	bl	11854 <test_schema@@Base+0xe3c>
   10cec:	str	r0, [fp, #-40]	; 0xffffffd8
   10cf0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10cf4:	bl	11970 <test_schema@@Base+0xf58>
   10cf8:	sxtb	r0, r0
   10cfc:	cmp	r0, #15
   10d00:	beq	10d18 <test_schema@@Base+0x300>
   10d04:	ldr	r0, [pc, #356]	; 10e70 <test_schema@@Base+0x458>
   10d08:	add	r0, pc, r0
   10d0c:	bl	10868 <printf@plt>
   10d10:	str	r0, [sp, #20]
   10d14:	b	10e14 <test_schema@@Base+0x3fc>
   10d18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10d1c:	bl	11a64 <test_schema@@Base+0x104c>
   10d20:	ldr	lr, [fp, #-48]	; 0xffffffd0
   10d24:	cmp	r0, lr
   10d28:	beq	10d40 <test_schema@@Base+0x328>
   10d2c:	ldr	r0, [pc, #312]	; 10e6c <test_schema@@Base+0x454>
   10d30:	add	r0, pc, r0
   10d34:	bl	10868 <printf@plt>
   10d38:	str	r0, [sp, #16]
   10d3c:	b	10e14 <test_schema@@Base+0x3fc>
   10d40:	ldr	r0, [pc, #272]	; 10e58 <test_schema@@Base+0x440>
   10d44:	add	r1, pc, r0
   10d48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10d4c:	bl	11574 <test_schema@@Base+0xb5c>
   10d50:	ldr	r1, [pc, #252]	; 10e54 <test_schema@@Base+0x43c>
   10d54:	add	r1, pc, r1
   10d58:	str	r0, [fp, #-44]	; 0xffffffd4
   10d5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10d60:	ldr	r1, [r1]
   10d64:	cmp	r0, r1
   10d68:	bne	10d80 <test_schema@@Base+0x368>
   10d6c:	ldr	r0, [pc, #244]	; 10e68 <test_schema@@Base+0x450>
   10d70:	add	r0, pc, r0
   10d74:	bl	10868 <printf@plt>
   10d78:	str	r0, [sp, #12]
   10d7c:	b	10e14 <test_schema@@Base+0x3fc>
   10d80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10d84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   10d88:	bl	1159c <test_schema@@Base+0xb84>
   10d8c:	bl	11854 <test_schema@@Base+0xe3c>
   10d90:	str	r0, [fp, #-40]	; 0xffffffd8
   10d94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10d98:	bl	11970 <test_schema@@Base+0xf58>
   10d9c:	sxtb	r0, r0
   10da0:	cmp	r0, #14
   10da4:	beq	10dbc <test_schema@@Base+0x3a4>
   10da8:	ldr	r0, [pc, #180]	; 10e64 <test_schema@@Base+0x44c>
   10dac:	add	r0, pc, r0
   10db0:	bl	10868 <printf@plt>
   10db4:	str	r0, [sp, #8]
   10db8:	b	10e14 <test_schema@@Base+0x3fc>
   10dbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10dc0:	bl	11b50 <test_schema@@Base+0x1138>
   10dc4:	sxtb	r0, r0
   10dc8:	cmp	r0, #15
   10dcc:	beq	10de4 <test_schema@@Base+0x3cc>
   10dd0:	ldr	r0, [pc, #136]	; 10e60 <test_schema@@Base+0x448>
   10dd4:	add	r0, pc, r0
   10dd8:	bl	10868 <printf@plt>
   10ddc:	str	r0, [sp, #4]
   10de0:	b	10e14 <test_schema@@Base+0x3fc>
   10de4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10de8:	bl	11a64 <test_schema@@Base+0x104c>
   10dec:	ldr	lr, [fp, #-48]	; 0xffffffd0
   10df0:	cmp	r0, lr
   10df4:	beq	10e0c <test_schema@@Base+0x3f4>
   10df8:	ldr	r0, [pc, #92]	; 10e5c <test_schema@@Base+0x444>
   10dfc:	add	r0, pc, r0
   10e00:	bl	10868 <printf@plt>
   10e04:	str	r0, [sp]
   10e08:	b	10e14 <test_schema@@Base+0x3fc>
   10e0c:	movw	r0, #0
   10e10:	str	r0, [fp, #-16]
   10e14:	ldr	r0, [fp, #-8]
   10e18:	movw	r1, #0
   10e1c:	cmp	r0, r1
   10e20:	beq	10e2c <test_schema@@Base+0x414>
   10e24:	ldr	r0, [fp, #-8]
   10e28:	bl	10880 <free@plt>
   10e2c:	ldr	r0, [fp, #-16]
   10e30:	mov	sp, fp
   10e34:	pop	{fp, pc}
   10e38:	muleq	r0, ip, r8
   10e3c:	andeq	r2, r1, r4, asr r5
   10e40:	andeq	r1, r0, sp, lsr #16
   10e44:	andeq	r2, r1, r0, asr #9
   10e48:	strdeq	r1, [r0], -r4
   10e4c:	andeq	r2, r1, ip, lsr #7
   10e50:	andeq	r1, r0, r1, ror #14
   10e54:	andeq	r2, r1, r8, lsl #6
   10e58:	andeq	r1, r0, sl, lsl #14
   10e5c:	ldrdeq	r1, [r0], -r5
   10e60:	andeq	r1, r0, lr, asr #13
   10e64:	andeq	r1, r0, pc, asr #13
   10e68:	strdeq	r1, [r0], -r0
   10e6c:	andeq	r1, r0, r6, lsl #14
   10e70:	andeq	r1, r0, r6, lsl r7
   10e74:	andeq	r1, r0, fp, lsr r7
   10e78:	andeq	r1, r0, sl, asr r7
   10e7c:	andeq	r1, r0, r4, lsr #15
   10e80:			; <UNDEFINED> instruction: 0x000017bc
   10e84:			; <UNDEFINED> instruction: 0x000017b4
   10e88:	andeq	r1, r0, r9, asr #15
   10e8c:	strdeq	r1, [r0], -r2
   10e90:	andeq	r1, r0, r8, lsl r8
   10e94:	andeq	r1, r0, sl, asr #16
   10e98:	andeq	r1, r0, sp, asr #15
   10e9c:	muleq	r0, ip, r7
   10ea0:	push	{fp, lr}
   10ea4:	mov	fp, sp
   10ea8:	sub	sp, sp, #64	; 0x40
   10eac:	str	r0, [fp, #-8]
   10eb0:	str	r1, [fp, #-12]
   10eb4:	str	r2, [fp, #-16]
   10eb8:	ldr	r0, [fp, #-16]
   10ebc:	movw	r1, #0
   10ec0:	cmp	r0, r1
   10ec4:	beq	10ed4 <test_schema@@Base+0x4bc>
   10ec8:	ldr	r0, [fp, #-16]
   10ecc:	str	r0, [sp, #20]
   10ed0:	b	10ee0 <test_schema@@Base+0x4c8>
   10ed4:	add	r0, sp, #28
   10ed8:	str	r0, [sp, #20]
   10edc:	b	10ee0 <test_schema@@Base+0x4c8>
   10ee0:	ldr	r0, [sp, #20]
   10ee4:	ldr	r1, [pc, #416]	; 1108c <test_schema@@Base+0x674>
   10ee8:	add	r1, pc, r1
   10eec:	str	r0, [fp, #-16]
   10ef0:	ldr	r0, [fp, #-8]
   10ef4:	bl	10874 <fopen@plt>
   10ef8:	str	r0, [fp, #-20]	; 0xffffffec
   10efc:	movw	r0, #0
   10f00:	str	r0, [fp, #-24]	; 0xffffffe8
   10f04:	str	r0, [sp, #24]
   10f08:	ldr	r1, [fp, #-20]	; 0xffffffec
   10f0c:	cmp	r1, r0
   10f10:	bne	10f18 <test_schema@@Base+0x500>
   10f14:	b	11038 <test_schema@@Base+0x620>
   10f18:	ldr	r0, [fp, #-20]	; 0xffffffec
   10f1c:	movw	r1, #0
   10f20:	movw	r2, #2
   10f24:	bl	10904 <fseek@plt>
   10f28:	ldr	r1, [fp, #-20]	; 0xffffffec
   10f2c:	str	r0, [sp, #16]
   10f30:	mov	r0, r1
   10f34:	bl	1088c <ftell@plt>
   10f38:	str	r0, [fp, #-24]	; 0xffffffe8
   10f3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10f40:	ldr	r1, [fp, #-16]
   10f44:	str	r0, [r1]
   10f48:	ldr	r0, [fp, #-12]
   10f4c:	cmp	r0, #0
   10f50:	bls	10f68 <test_schema@@Base+0x550>
   10f54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10f58:	ldr	r1, [fp, #-12]
   10f5c:	cmp	r0, r1
   10f60:	bls	10f68 <test_schema@@Base+0x550>
   10f64:	b	11038 <test_schema@@Base+0x620>
   10f68:	ldr	r0, [fp, #-20]	; 0xffffffec
   10f6c:	bl	10898 <rewind@plt>
   10f70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10f74:	cmp	r0, #0
   10f78:	beq	10f88 <test_schema@@Base+0x570>
   10f7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10f80:	str	r0, [sp, #12]
   10f84:	b	10f94 <test_schema@@Base+0x57c>
   10f88:	movw	r0, #1
   10f8c:	str	r0, [sp, #12]
   10f90:	b	10f94 <test_schema@@Base+0x57c>
   10f94:	ldr	r0, [sp, #12]
   10f98:	bl	108b0 <malloc@plt>
   10f9c:	str	r0, [sp, #24]
   10fa0:	ldr	r0, [sp, #24]
   10fa4:	movw	lr, #0
   10fa8:	cmp	r0, lr
   10fac:	bne	10fb4 <test_schema@@Base+0x59c>
   10fb0:	b	11038 <test_schema@@Base+0x620>
   10fb4:	movw	r0, #0
   10fb8:	str	r0, [fp, #-28]	; 0xffffffe4
   10fbc:	ldr	r0, [sp, #24]
   10fc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   10fc4:	add	r0, r0, r1
   10fc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10fcc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10fd0:	sub	r2, r1, r2
   10fd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   10fd8:	movw	r1, #1
   10fdc:	bl	108a4 <fread@plt>
   10fe0:	str	r0, [sp, #32]
   10fe4:	cmp	r0, #0
   10fe8:	beq	11000 <test_schema@@Base+0x5e8>
   10fec:	ldr	r0, [sp, #32]
   10ff0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   10ff4:	add	r0, r1, r0
   10ff8:	str	r0, [fp, #-28]	; 0xffffffe4
   10ffc:	b	10fbc <test_schema@@Base+0x5a4>
   11000:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11004:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11008:	cmp	r0, r1
   1100c:	beq	11014 <test_schema@@Base+0x5fc>
   11010:	b	11038 <test_schema@@Base+0x620>
   11014:	ldr	r0, [fp, #-20]	; 0xffffffec
   11018:	bl	108f8 <fclose@plt>
   1101c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   11020:	ldr	r1, [fp, #-16]
   11024:	str	lr, [r1]
   11028:	ldr	r1, [sp, #24]
   1102c:	str	r1, [fp, #-4]
   11030:	str	r0, [sp, #8]
   11034:	b	11080 <test_schema@@Base+0x668>
   11038:	ldr	r0, [fp, #-20]	; 0xffffffec
   1103c:	movw	r1, #0
   11040:	cmp	r0, r1
   11044:	beq	11054 <test_schema@@Base+0x63c>
   11048:	ldr	r0, [fp, #-20]	; 0xffffffec
   1104c:	bl	108f8 <fclose@plt>
   11050:	str	r0, [sp, #4]
   11054:	ldr	r0, [sp, #24]
   11058:	movw	r1, #0
   1105c:	cmp	r0, r1
   11060:	beq	1106c <test_schema@@Base+0x654>
   11064:	ldr	r0, [sp, #24]
   11068:	bl	10880 <free@plt>
   1106c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11070:	ldr	r1, [fp, #-16]
   11074:	str	r0, [r1]
   11078:	movw	r0, #0
   1107c:	str	r0, [fp, #-4]
   11080:	ldr	r0, [fp, #-4]
   11084:	mov	sp, fp
   11088:	pop	{fp, pc}
   1108c:	andeq	r1, r0, pc, ror #12
   11090:	push	{fp, lr}
   11094:	mov	fp, sp
   11098:	sub	sp, sp, #16
   1109c:	ldr	r1, [pc, #100]	; 11108 <test_schema@@Base+0x6f0>
   110a0:	add	r1, pc, r1
   110a4:	str	r0, [fp, #-4]
   110a8:	str	r1, [sp, #8]
   110ac:	ldr	r0, [fp, #-4]
   110b0:	movw	r1, #0
   110b4:	cmp	r0, r1
   110b8:	beq	110d0 <test_schema@@Base+0x6b8>
   110bc:	ldr	r0, [fp, #-4]
   110c0:	ldr	r1, [sp, #8]
   110c4:	bl	11ce8 <main@@Base+0xa4>
   110c8:	cmp	r0, #0
   110cc:	bne	110dc <test_schema@@Base+0x6c4>
   110d0:	movw	r0, #0
   110d4:	str	r0, [sp, #4]
   110d8:	b	110fc <test_schema@@Base+0x6e4>
   110dc:	ldr	r0, [fp, #-4]
   110e0:	ldr	r1, [fp, #-4]
   110e4:	str	r0, [sp]
   110e8:	mov	r0, r1
   110ec:	bl	11d94 <main@@Base+0x150>
   110f0:	ldr	r1, [sp]
   110f4:	add	r0, r1, r0
   110f8:	str	r0, [sp, #4]
   110fc:	ldr	r0, [sp, #4]
   11100:	mov	sp, fp
   11104:	pop	{fp, pc}
   11108:			; <UNDEFINED> instruction: 0x000014ba
   1110c:	push	{fp, lr}
   11110:	mov	fp, sp
   11114:	sub	sp, sp, #24
   11118:	str	r0, [fp, #-4]
   1111c:	movw	r0, #0
   11120:	strh	r0, [fp, #-10]
   11124:	ldr	r0, [fp, #-4]
   11128:	movw	r1, #0
   1112c:	cmp	r0, r1
   11130:	beq	1113c <test_schema@@Base+0x724>
   11134:	b	11138 <test_schema@@Base+0x720>
   11138:	b	1115c <test_schema@@Base+0x744>
   1113c:	ldr	r0, [pc, #208]	; 11214 <test_schema@@Base+0x7fc>
   11140:	add	r0, pc, r0
   11144:	ldr	r1, [pc, #204]	; 11218 <test_schema@@Base+0x800>
   11148:	add	r1, pc, r1
   1114c:	ldr	r2, [pc, #200]	; 1121c <test_schema@@Base+0x804>
   11150:	add	r3, pc, r2
   11154:	movw	r2, #237	; 0xed
   11158:	bl	1091c <__assert_fail@plt>
   1115c:	mov	r0, #0
   11160:	strh	r0, [sp, #12]
   11164:	ldr	r0, [fp, #-4]
   11168:	str	r0, [sp, #4]
   1116c:	bl	11e18 <main@@Base+0x1d4>
   11170:	ldr	lr, [sp, #4]
   11174:	sub	r0, lr, r0
   11178:	str	r0, [sp, #8]
   1117c:	ldr	r0, [sp, #8]
   11180:	bl	11e3c <main@@Base+0x1f8>
   11184:	ldrh	lr, [sp, #12]
   11188:	add	lr, lr, #3
   1118c:	lsl	lr, lr, #1
   11190:	cmp	r0, lr
   11194:	bcc	111b0 <test_schema@@Base+0x798>
   11198:	ldr	r0, [sp, #8]
   1119c:	ldrh	r1, [sp, #12]
   111a0:	add	r0, r0, r1, lsl #1
   111a4:	add	r0, r0, #4
   111a8:	bl	11e3c <main@@Base+0x1f8>
   111ac:	strh	r0, [fp, #-10]
   111b0:	ldrsh	r0, [fp, #-10]
   111b4:	cmp	r0, #0
   111b8:	beq	111f4 <test_schema@@Base+0x7dc>
   111bc:	ldr	r0, [fp, #-4]
   111c0:	ldrh	r1, [fp, #-10]
   111c4:	add	r0, r0, r1
   111c8:	str	r0, [fp, #-8]
   111cc:	ldr	r0, [fp, #-8]
   111d0:	add	r0, r0, #4
   111d4:	ldr	r1, [fp, #-8]
   111d8:	str	r0, [sp]
   111dc:	mov	r0, r1
   111e0:	bl	11d94 <main@@Base+0x150>
   111e4:	ldr	r1, [sp]
   111e8:	add	r0, r1, r0
   111ec:	mov	sp, fp
   111f0:	pop	{fp, pc}
   111f4:	ldr	r0, [pc, #36]	; 11220 <test_schema@@Base+0x808>
   111f8:	add	r0, pc, r0
   111fc:	ldr	r1, [pc, #32]	; 11224 <test_schema@@Base+0x80c>
   11200:	add	r1, pc, r1
   11204:	ldr	r2, [pc, #28]	; 11228 <test_schema@@Base+0x810>
   11208:	add	r3, pc, r2
   1120c:	movw	r2, #237	; 0xed
   11210:	bl	1091c <__assert_fail@plt>
   11214:	andeq	r1, r0, r9, lsr r4
   11218:	andeq	r1, r0, r7, asr r4
   1121c:	andeq	r1, r0, r4, asr #9
   11220:	andeq	r1, r0, r9, ror #8
   11224:	muleq	r0, pc, r3	; <UNPREDICTABLE>
   11228:	andeq	r1, r0, ip, lsl #8
   1122c:	push	{fp, lr}
   11230:	mov	fp, sp
   11234:	sub	sp, sp, #8
   11238:	str	r0, [sp, #4]
   1123c:	ldr	r0, [sp, #4]
   11240:	movw	r1, #0
   11244:	cmp	r0, r1
   11248:	beq	11264 <test_schema@@Base+0x84c>
   1124c:	ldr	r0, [sp, #4]
   11250:	mvn	r1, #3
   11254:	add	r0, r0, r1
   11258:	bl	11d94 <main@@Base+0x150>
   1125c:	str	r0, [sp]
   11260:	b	11270 <test_schema@@Base+0x858>
   11264:	movw	r0, #0
   11268:	str	r0, [sp]
   1126c:	b	11270 <test_schema@@Base+0x858>
   11270:	ldr	r0, [sp]
   11274:	mov	sp, fp
   11278:	pop	{fp, pc}
   1127c:	push	{fp, lr}
   11280:	mov	fp, sp
   11284:	sub	sp, sp, #24
   11288:	str	r0, [fp, #-4]
   1128c:	movw	r0, #0
   11290:	strh	r0, [fp, #-10]
   11294:	ldr	r0, [fp, #-4]
   11298:	movw	r1, #0
   1129c:	cmp	r0, r1
   112a0:	beq	112ac <test_schema@@Base+0x894>
   112a4:	b	112a8 <test_schema@@Base+0x890>
   112a8:	b	112cc <test_schema@@Base+0x8b4>
   112ac:	ldr	r0, [pc, #208]	; 11384 <test_schema@@Base+0x96c>
   112b0:	add	r0, pc, r0
   112b4:	ldr	r1, [pc, #204]	; 11388 <test_schema@@Base+0x970>
   112b8:	add	r1, pc, r1
   112bc:	ldr	r2, [pc, #200]	; 1138c <test_schema@@Base+0x974>
   112c0:	add	r3, pc, r2
   112c4:	movw	r2, #218	; 0xda
   112c8:	bl	1091c <__assert_fail@plt>
   112cc:	mov	r0, #0
   112d0:	strh	r0, [sp, #12]
   112d4:	ldr	r0, [fp, #-4]
   112d8:	str	r0, [sp, #4]
   112dc:	bl	11e18 <main@@Base+0x1d4>
   112e0:	ldr	lr, [sp, #4]
   112e4:	sub	r0, lr, r0
   112e8:	str	r0, [sp, #8]
   112ec:	ldr	r0, [sp, #8]
   112f0:	bl	11e3c <main@@Base+0x1f8>
   112f4:	ldrh	lr, [sp, #12]
   112f8:	add	lr, lr, #3
   112fc:	lsl	lr, lr, #1
   11300:	cmp	r0, lr
   11304:	bcc	11320 <test_schema@@Base+0x908>
   11308:	ldr	r0, [sp, #8]
   1130c:	ldrh	r1, [sp, #12]
   11310:	add	r0, r0, r1, lsl #1
   11314:	add	r0, r0, #4
   11318:	bl	11e3c <main@@Base+0x1f8>
   1131c:	strh	r0, [fp, #-10]
   11320:	ldrsh	r0, [fp, #-10]
   11324:	cmp	r0, #0
   11328:	beq	11364 <test_schema@@Base+0x94c>
   1132c:	ldr	r0, [fp, #-4]
   11330:	ldrh	r1, [fp, #-10]
   11334:	add	r0, r0, r1
   11338:	str	r0, [fp, #-8]
   1133c:	ldr	r0, [fp, #-8]
   11340:	add	r0, r0, #4
   11344:	ldr	r1, [fp, #-8]
   11348:	str	r0, [sp]
   1134c:	mov	r0, r1
   11350:	bl	11d94 <main@@Base+0x150>
   11354:	ldr	r1, [sp]
   11358:	add	r0, r1, r0
   1135c:	mov	sp, fp
   11360:	pop	{fp, pc}
   11364:	ldr	r0, [pc, #36]	; 11390 <test_schema@@Base+0x978>
   11368:	add	r0, pc, r0
   1136c:	ldr	r1, [pc, #32]	; 11394 <test_schema@@Base+0x97c>
   11370:	add	r1, pc, r1
   11374:	ldr	r2, [pc, #28]	; 11398 <test_schema@@Base+0x980>
   11378:	add	r3, pc, r2
   1137c:	movw	r2, #218	; 0xda
   11380:	bl	1091c <__assert_fail@plt>
   11384:	andeq	r1, r0, r9, asr #5
   11388:	andeq	r1, r0, r7, ror #5
   1138c:	andeq	r1, r0, r2, asr #7
   11390:	strdeq	r1, [r0], -r9
   11394:	andeq	r1, r0, pc, lsr #4
   11398:	andeq	r1, r0, sl, lsl #6
   1139c:	push	{fp, lr}
   113a0:	mov	fp, sp
   113a4:	sub	sp, sp, #16
   113a8:	str	r0, [fp, #-4]
   113ac:	str	r1, [sp, #8]
   113b0:	ldr	r0, [fp, #-4]
   113b4:	ldr	r1, [sp, #8]
   113b8:	add	r0, r0, r1, lsl #2
   113bc:	str	r0, [sp, #4]
   113c0:	ldr	r0, [fp, #-4]
   113c4:	bl	11e8c <main@@Base+0x248>
   113c8:	ldr	r1, [sp, #8]
   113cc:	cmp	r0, r1
   113d0:	bls	113dc <test_schema@@Base+0x9c4>
   113d4:	b	113d8 <test_schema@@Base+0x9c0>
   113d8:	b	113fc <test_schema@@Base+0x9e4>
   113dc:	ldr	r0, [pc, #60]	; 11420 <test_schema@@Base+0xa08>
   113e0:	add	r0, pc, r0
   113e4:	ldr	r1, [pc, #56]	; 11424 <test_schema@@Base+0xa0c>
   113e8:	add	r1, pc, r1
   113ec:	ldr	r2, [pc, #52]	; 11428 <test_schema@@Base+0xa10>
   113f0:	add	r3, pc, r2
   113f4:	movw	r2, #215	; 0xd7
   113f8:	bl	1091c <__assert_fail@plt>
   113fc:	ldr	r0, [sp, #4]
   11400:	ldr	r1, [sp, #4]
   11404:	str	r0, [sp]
   11408:	mov	r0, r1
   1140c:	bl	11d94 <main@@Base+0x150>
   11410:	ldr	r1, [sp]
   11414:	add	r0, r1, r0
   11418:	mov	sp, fp
   1141c:	pop	{fp, pc}
   11420:	strdeq	r1, [r0], -ip
   11424:			; <UNDEFINED> instruction: 0x000011b7
   11428:	andeq	r1, r0, r3, lsr #6
   1142c:	push	{fp, lr}
   11430:	mov	fp, sp
   11434:	sub	sp, sp, #8
   11438:	str	r0, [sp, #4]
   1143c:	str	r1, [sp]
   11440:	ldr	r0, [sp, #4]
   11444:	ldr	r1, [sp]
   11448:	bl	11edc <main@@Base+0x298>
   1144c:	mov	sp, fp
   11450:	pop	{fp, pc}
   11454:	push	{fp, lr}
   11458:	mov	fp, sp
   1145c:	sub	sp, sp, #24
   11460:	str	r0, [fp, #-4]
   11464:	movw	r0, #0
   11468:	strh	r0, [fp, #-10]
   1146c:	ldr	r0, [fp, #-4]
   11470:	movw	r1, #0
   11474:	cmp	r0, r1
   11478:	beq	11484 <test_schema@@Base+0xa6c>
   1147c:	b	11480 <test_schema@@Base+0xa68>
   11480:	b	114a4 <test_schema@@Base+0xa8c>
   11484:	ldr	r0, [pc, #208]	; 1155c <test_schema@@Base+0xb44>
   11488:	add	r0, pc, r0
   1148c:	ldr	r1, [pc, #204]	; 11560 <test_schema@@Base+0xb48>
   11490:	add	r1, pc, r1
   11494:	ldr	r2, [pc, #200]	; 11564 <test_schema@@Base+0xb4c>
   11498:	add	r3, pc, r2
   1149c:	movw	r2, #224	; 0xe0
   114a0:	bl	1091c <__assert_fail@plt>
   114a4:	mov	r0, #1
   114a8:	strh	r0, [sp, #12]
   114ac:	ldr	r0, [fp, #-4]
   114b0:	str	r0, [sp, #4]
   114b4:	bl	11e18 <main@@Base+0x1d4>
   114b8:	ldr	lr, [sp, #4]
   114bc:	sub	r0, lr, r0
   114c0:	str	r0, [sp, #8]
   114c4:	ldr	r0, [sp, #8]
   114c8:	bl	11e3c <main@@Base+0x1f8>
   114cc:	ldrh	lr, [sp, #12]
   114d0:	add	lr, lr, #3
   114d4:	lsl	lr, lr, #1
   114d8:	cmp	r0, lr
   114dc:	bcc	114f8 <test_schema@@Base+0xae0>
   114e0:	ldr	r0, [sp, #8]
   114e4:	ldrh	r1, [sp, #12]
   114e8:	add	r0, r0, r1, lsl #1
   114ec:	add	r0, r0, #4
   114f0:	bl	11e3c <main@@Base+0x1f8>
   114f4:	strh	r0, [fp, #-10]
   114f8:	ldrsh	r0, [fp, #-10]
   114fc:	cmp	r0, #0
   11500:	beq	1153c <test_schema@@Base+0xb24>
   11504:	ldr	r0, [fp, #-4]
   11508:	ldrh	r1, [fp, #-10]
   1150c:	add	r0, r0, r1
   11510:	str	r0, [fp, #-8]
   11514:	ldr	r0, [fp, #-8]
   11518:	add	r0, r0, #4
   1151c:	ldr	r1, [fp, #-8]
   11520:	str	r0, [sp]
   11524:	mov	r0, r1
   11528:	bl	11d94 <main@@Base+0x150>
   1152c:	ldr	r1, [sp]
   11530:	add	r0, r1, r0
   11534:	mov	sp, fp
   11538:	pop	{fp, pc}
   1153c:	ldr	r0, [pc, #36]	; 11568 <test_schema@@Base+0xb50>
   11540:	add	r0, pc, r0
   11544:	ldr	r1, [pc, #32]	; 1156c <test_schema@@Base+0xb54>
   11548:	add	r1, pc, r1
   1154c:	ldr	r2, [pc, #28]	; 11570 <test_schema@@Base+0xb58>
   11550:	add	r3, pc, r2
   11554:	movw	r2, #224	; 0xe0
   11558:	bl	1091c <__assert_fail@plt>
   1155c:	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
   11560:	andeq	r1, r0, pc, lsl #2
   11564:	andeq	r1, r0, pc, asr #5
   11568:	andeq	r1, r0, r1, lsr #2
   1156c:	andeq	r1, r0, r7, asr r0
   11570:	andeq	r1, r0, r7, lsl r2
   11574:	push	{fp, lr}
   11578:	mov	fp, sp
   1157c:	sub	sp, sp, #8
   11580:	str	r0, [sp, #4]
   11584:	str	r1, [sp]
   11588:	ldr	r0, [sp, #4]
   1158c:	ldr	r1, [sp]
   11590:	bl	12040 <main@@Base+0x3fc>
   11594:	mov	sp, fp
   11598:	pop	{fp, pc}
   1159c:	push	{fp, lr}
   115a0:	mov	fp, sp
   115a4:	sub	sp, sp, #16
   115a8:	str	r0, [fp, #-4]
   115ac:	str	r1, [sp, #8]
   115b0:	ldr	r0, [fp, #-4]
   115b4:	ldr	r1, [sp, #8]
   115b8:	add	r0, r0, r1, lsl #2
   115bc:	str	r0, [sp, #4]
   115c0:	ldr	r0, [fp, #-4]
   115c4:	bl	11e8c <main@@Base+0x248>
   115c8:	ldr	r1, [sp, #8]
   115cc:	cmp	r0, r1
   115d0:	bls	115dc <test_schema@@Base+0xbc4>
   115d4:	b	115d8 <test_schema@@Base+0xbc0>
   115d8:	b	115fc <test_schema@@Base+0xbe4>
   115dc:	ldr	r0, [pc, #60]	; 11620 <test_schema@@Base+0xc08>
   115e0:	add	r0, pc, r0
   115e4:	ldr	r1, [pc, #56]	; 11624 <test_schema@@Base+0xc0c>
   115e8:	add	r1, pc, r1
   115ec:	ldr	r2, [pc, #52]	; 11628 <test_schema@@Base+0xc10>
   115f0:	add	r3, pc, r2
   115f4:	movw	r2, #192	; 0xc0
   115f8:	bl	1091c <__assert_fail@plt>
   115fc:	ldr	r0, [sp, #4]
   11600:	ldr	r1, [sp, #4]
   11604:	str	r0, [sp]
   11608:	mov	r0, r1
   1160c:	bl	11d94 <main@@Base+0x150>
   11610:	ldr	r1, [sp]
   11614:	add	r0, r1, r0
   11618:	mov	sp, fp
   1161c:	pop	{fp, pc}
   11620:	strdeq	r1, [r0], -ip
   11624:			; <UNDEFINED> instruction: 0x00000fb7
   11628:	andeq	r1, r0, r2, asr #3
   1162c:	push	{fp, lr}
   11630:	mov	fp, sp
   11634:	sub	sp, sp, #32
   11638:	str	r0, [fp, #-4]
   1163c:	movw	r0, #0
   11640:	strh	r0, [fp, #-6]
   11644:	ldr	r0, [fp, #-4]
   11648:	movw	r1, #0
   1164c:	cmp	r0, r1
   11650:	beq	1165c <test_schema@@Base+0xc44>
   11654:	b	11658 <test_schema@@Base+0xc40>
   11658:	b	1167c <test_schema@@Base+0xc64>
   1165c:	ldr	r0, [pc, #196]	; 11728 <test_schema@@Base+0xd10>
   11660:	add	r0, pc, r0
   11664:	ldr	r1, [pc, #192]	; 1172c <test_schema@@Base+0xd14>
   11668:	add	r1, pc, r1
   1166c:	ldr	r2, [pc, #188]	; 11730 <test_schema@@Base+0xd18>
   11670:	add	r3, pc, r2
   11674:	movw	r2, #204	; 0xcc
   11678:	bl	1091c <__assert_fail@plt>
   1167c:	mov	r0, #4
   11680:	strh	r0, [fp, #-8]
   11684:	ldr	r0, [fp, #-4]
   11688:	str	r0, [sp, #16]
   1168c:	bl	11e18 <main@@Base+0x1d4>
   11690:	ldr	lr, [sp, #16]
   11694:	sub	r0, lr, r0
   11698:	str	r0, [fp, #-12]
   1169c:	ldr	r0, [fp, #-12]
   116a0:	bl	11e3c <main@@Base+0x1f8>
   116a4:	ldrh	lr, [fp, #-8]
   116a8:	add	lr, lr, #3
   116ac:	lsl	lr, lr, #1
   116b0:	cmp	r0, lr
   116b4:	bcc	116d0 <test_schema@@Base+0xcb8>
   116b8:	ldr	r0, [fp, #-12]
   116bc:	ldrh	r1, [fp, #-8]
   116c0:	add	r0, r0, r1, lsl #1
   116c4:	add	r0, r0, #4
   116c8:	bl	11e3c <main@@Base+0x1f8>
   116cc:	strh	r0, [fp, #-6]
   116d0:	ldrh	r0, [fp, #-6]
   116d4:	cmp	r0, #0
   116d8:	beq	116f8 <test_schema@@Base+0xce0>
   116dc:	ldr	r0, [fp, #-4]
   116e0:	ldrh	r1, [fp, #-6]
   116e4:	add	r0, r0, r1
   116e8:	bl	121c8 <main@@Base+0x584>
   116ec:	str	r0, [sp, #12]
   116f0:	str	r1, [sp, #8]
   116f4:	b	1170c <test_schema@@Base+0xcf4>
   116f8:	mov	r0, #0
   116fc:	mov	r1, r0
   11700:	str	r1, [sp, #12]
   11704:	str	r0, [sp, #8]
   11708:	b	1170c <test_schema@@Base+0xcf4>
   1170c:	ldr	r0, [sp, #8]
   11710:	ldr	r1, [sp, #12]
   11714:	str	r0, [sp, #4]
   11718:	mov	r0, r1
   1171c:	ldr	r1, [sp, #4]
   11720:	mov	sp, fp
   11724:	pop	{fp, pc}
   11728:	andeq	r0, r0, r9, lsl pc
   1172c:	andeq	r0, r0, r7, lsr pc
   11730:	muleq	r0, r3, r1
   11734:	push	{fp, lr}
   11738:	mov	fp, sp
   1173c:	sub	sp, sp, #24
   11740:	str	r0, [fp, #-4]
   11744:	movw	r0, #0
   11748:	strh	r0, [fp, #-10]
   1174c:	ldr	r0, [fp, #-4]
   11750:	movw	r1, #0
   11754:	cmp	r0, r1
   11758:	beq	11764 <test_schema@@Base+0xd4c>
   1175c:	b	11760 <test_schema@@Base+0xd48>
   11760:	b	11784 <test_schema@@Base+0xd6c>
   11764:	ldr	r0, [pc, #208]	; 1183c <test_schema@@Base+0xe24>
   11768:	add	r0, pc, r0
   1176c:	ldr	r1, [pc, #204]	; 11840 <test_schema@@Base+0xe28>
   11770:	add	r1, pc, r1
   11774:	ldr	r2, [pc, #200]	; 11844 <test_schema@@Base+0xe2c>
   11778:	add	r3, pc, r2
   1177c:	movw	r2, #195	; 0xc3
   11780:	bl	1091c <__assert_fail@plt>
   11784:	mov	r0, #0
   11788:	strh	r0, [sp, #12]
   1178c:	ldr	r0, [fp, #-4]
   11790:	str	r0, [sp, #4]
   11794:	bl	11e18 <main@@Base+0x1d4>
   11798:	ldr	lr, [sp, #4]
   1179c:	sub	r0, lr, r0
   117a0:	str	r0, [sp, #8]
   117a4:	ldr	r0, [sp, #8]
   117a8:	bl	11e3c <main@@Base+0x1f8>
   117ac:	ldrh	lr, [sp, #12]
   117b0:	add	lr, lr, #3
   117b4:	lsl	lr, lr, #1
   117b8:	cmp	r0, lr
   117bc:	bcc	117d8 <test_schema@@Base+0xdc0>
   117c0:	ldr	r0, [sp, #8]
   117c4:	ldrh	r1, [sp, #12]
   117c8:	add	r0, r0, r1, lsl #1
   117cc:	add	r0, r0, #4
   117d0:	bl	11e3c <main@@Base+0x1f8>
   117d4:	strh	r0, [fp, #-10]
   117d8:	ldrsh	r0, [fp, #-10]
   117dc:	cmp	r0, #0
   117e0:	beq	1181c <test_schema@@Base+0xe04>
   117e4:	ldr	r0, [fp, #-4]
   117e8:	ldrh	r1, [fp, #-10]
   117ec:	add	r0, r0, r1
   117f0:	str	r0, [fp, #-8]
   117f4:	ldr	r0, [fp, #-8]
   117f8:	add	r0, r0, #4
   117fc:	ldr	r1, [fp, #-8]
   11800:	str	r0, [sp]
   11804:	mov	r0, r1
   11808:	bl	11d94 <main@@Base+0x150>
   1180c:	ldr	r1, [sp]
   11810:	add	r0, r1, r0
   11814:	mov	sp, fp
   11818:	pop	{fp, pc}
   1181c:	ldr	r0, [pc, #36]	; 11848 <test_schema@@Base+0xe30>
   11820:	add	r0, pc, r0
   11824:	ldr	r1, [pc, #32]	; 1184c <test_schema@@Base+0xe34>
   11828:	add	r1, pc, r1
   1182c:	ldr	r2, [pc, #28]	; 11850 <test_schema@@Base+0xe38>
   11830:	add	r3, pc, r2
   11834:	movw	r2, #195	; 0xc3
   11838:	bl	1091c <__assert_fail@plt>
   1183c:	andeq	r0, r0, r1, lsl lr
   11840:	andeq	r0, r0, pc, lsr #28
   11844:	andeq	r1, r0, lr, asr #1
   11848:	andeq	r0, r0, r1, asr #28
   1184c:	andeq	r0, r0, r7, ror sp
   11850:	andeq	r1, r0, r6, lsl r0
   11854:	push	{fp, lr}
   11858:	mov	fp, sp
   1185c:	sub	sp, sp, #24
   11860:	str	r0, [fp, #-4]
   11864:	movw	r0, #0
   11868:	strh	r0, [fp, #-10]
   1186c:	ldr	r0, [fp, #-4]
   11870:	movw	r1, #0
   11874:	cmp	r0, r1
   11878:	beq	11884 <test_schema@@Base+0xe6c>
   1187c:	b	11880 <test_schema@@Base+0xe68>
   11880:	b	118a4 <test_schema@@Base+0xe8c>
   11884:	ldr	r0, [pc, #204]	; 11958 <test_schema@@Base+0xf40>
   11888:	add	r0, pc, r0
   1188c:	ldr	r1, [pc, #200]	; 1195c <test_schema@@Base+0xf44>
   11890:	add	r1, pc, r1
   11894:	ldr	r2, [pc, #196]	; 11960 <test_schema@@Base+0xf48>
   11898:	add	r3, pc, r2
   1189c:	movw	r2, #201	; 0xc9
   118a0:	bl	1091c <__assert_fail@plt>
   118a4:	mov	r0, #1
   118a8:	strh	r0, [sp, #12]
   118ac:	ldr	r0, [fp, #-4]
   118b0:	str	r0, [sp, #4]
   118b4:	bl	11e18 <main@@Base+0x1d4>
   118b8:	ldr	lr, [sp, #4]
   118bc:	sub	r0, lr, r0
   118c0:	str	r0, [sp, #8]
   118c4:	ldr	r0, [sp, #8]
   118c8:	bl	11e3c <main@@Base+0x1f8>
   118cc:	ldrh	lr, [sp, #12]
   118d0:	add	lr, lr, #3
   118d4:	lsl	lr, lr, #1
   118d8:	cmp	r0, lr
   118dc:	bcc	118f8 <test_schema@@Base+0xee0>
   118e0:	ldr	r0, [sp, #8]
   118e4:	ldrh	r1, [sp, #12]
   118e8:	add	r0, r0, r1, lsl #1
   118ec:	add	r0, r0, #4
   118f0:	bl	11e3c <main@@Base+0x1f8>
   118f4:	strh	r0, [fp, #-10]
   118f8:	ldrsh	r0, [fp, #-10]
   118fc:	cmp	r0, #0
   11900:	beq	11938 <test_schema@@Base+0xf20>
   11904:	ldr	r0, [fp, #-4]
   11908:	ldrh	r1, [fp, #-10]
   1190c:	add	r0, r0, r1
   11910:	str	r0, [fp, #-8]
   11914:	ldr	r0, [fp, #-8]
   11918:	ldr	r1, [fp, #-8]
   1191c:	str	r0, [sp]
   11920:	mov	r0, r1
   11924:	bl	11d94 <main@@Base+0x150>
   11928:	ldr	r1, [sp]
   1192c:	add	r0, r1, r0
   11930:	mov	sp, fp
   11934:	pop	{fp, pc}
   11938:	ldr	r0, [pc, #36]	; 11964 <test_schema@@Base+0xf4c>
   1193c:	add	r0, pc, r0
   11940:	ldr	r1, [pc, #32]	; 11968 <test_schema@@Base+0xf50>
   11944:	add	r1, pc, r1
   11948:	ldr	r2, [pc, #28]	; 1196c <test_schema@@Base+0xf54>
   1194c:	add	r3, pc, r2
   11950:	movw	r2, #201	; 0xc9
   11954:	bl	1091c <__assert_fail@plt>
   11958:	strdeq	r0, [r0], -r1
   1195c:	andeq	r0, r0, pc, lsl #26
   11960:	strdeq	r0, [r0], -r3
   11964:	andeq	r0, r0, r5, lsr #26
   11968:	andeq	r0, r0, fp, asr ip
   1196c:	andeq	r0, r0, pc, lsr pc
   11970:	push	{fp, lr}
   11974:	mov	fp, sp
   11978:	sub	sp, sp, #24
   1197c:	str	r0, [fp, #-4]
   11980:	movw	r0, #0
   11984:	strh	r0, [fp, #-6]
   11988:	ldr	r0, [fp, #-4]
   1198c:	movw	r1, #0
   11990:	cmp	r0, r1
   11994:	beq	119a0 <test_schema@@Base+0xf88>
   11998:	b	1199c <test_schema@@Base+0xf84>
   1199c:	b	119c0 <test_schema@@Base+0xfa8>
   119a0:	ldr	r0, [pc, #176]	; 11a58 <test_schema@@Base+0x1040>
   119a4:	add	r0, pc, r0
   119a8:	ldr	r1, [pc, #172]	; 11a5c <test_schema@@Base+0x1044>
   119ac:	add	r1, pc, r1
   119b0:	ldr	r2, [pc, #168]	; 11a60 <test_schema@@Base+0x1048>
   119b4:	add	r3, pc, r2
   119b8:	movw	r2, #147	; 0x93
   119bc:	bl	1091c <__assert_fail@plt>
   119c0:	mov	r0, #0
   119c4:	strh	r0, [fp, #-8]
   119c8:	ldr	r0, [fp, #-4]
   119cc:	str	r0, [sp, #8]
   119d0:	bl	11e18 <main@@Base+0x1d4>
   119d4:	ldr	lr, [sp, #8]
   119d8:	sub	r0, lr, r0
   119dc:	str	r0, [sp, #12]
   119e0:	ldr	r0, [sp, #12]
   119e4:	bl	11e3c <main@@Base+0x1f8>
   119e8:	ldrh	lr, [fp, #-8]
   119ec:	add	lr, lr, #3
   119f0:	lsl	lr, lr, #1
   119f4:	cmp	r0, lr
   119f8:	bcc	11a14 <test_schema@@Base+0xffc>
   119fc:	ldr	r0, [sp, #12]
   11a00:	ldrh	r1, [fp, #-8]
   11a04:	add	r0, r0, r1, lsl #1
   11a08:	add	r0, r0, #4
   11a0c:	bl	11e3c <main@@Base+0x1f8>
   11a10:	strh	r0, [fp, #-6]
   11a14:	ldrh	r0, [fp, #-6]
   11a18:	cmp	r0, #0
   11a1c:	beq	11a3c <test_schema@@Base+0x1024>
   11a20:	ldr	r0, [fp, #-4]
   11a24:	ldrh	r1, [fp, #-6]
   11a28:	add	r0, r0, r1
   11a2c:	bl	12218 <main@@Base+0x5d4>
   11a30:	sxtb	r0, r0
   11a34:	str	r0, [sp, #4]
   11a38:	b	11a48 <test_schema@@Base+0x1030>
   11a3c:	movw	r0, #0
   11a40:	str	r0, [sp, #4]
   11a44:	b	11a48 <test_schema@@Base+0x1030>
   11a48:	ldr	r0, [sp, #4]
   11a4c:	sxtb	r0, r0
   11a50:	mov	sp, fp
   11a54:	pop	{fp, pc}
   11a58:	ldrdeq	r0, [r0], -r5
   11a5c:	strdeq	r0, [r0], -r3
   11a60:	andeq	r0, r0, pc, lsl pc
   11a64:	push	{fp, lr}
   11a68:	mov	fp, sp
   11a6c:	sub	sp, sp, #24
   11a70:	str	r0, [fp, #-4]
   11a74:	movw	r0, #0
   11a78:	strh	r0, [fp, #-6]
   11a7c:	ldr	r0, [fp, #-4]
   11a80:	movw	r1, #0
   11a84:	cmp	r0, r1
   11a88:	beq	11a94 <test_schema@@Base+0x107c>
   11a8c:	b	11a90 <test_schema@@Base+0x1078>
   11a90:	b	11ab4 <test_schema@@Base+0x109c>
   11a94:	ldr	r0, [pc, #168]	; 11b44 <test_schema@@Base+0x112c>
   11a98:	add	r0, pc, r0
   11a9c:	ldr	r1, [pc, #164]	; 11b48 <test_schema@@Base+0x1130>
   11aa0:	add	r1, pc, r1
   11aa4:	ldr	r2, [pc, #160]	; 11b4c <test_schema@@Base+0x1134>
   11aa8:	add	r3, pc, r2
   11aac:	movw	r2, #149	; 0x95
   11ab0:	bl	1091c <__assert_fail@plt>
   11ab4:	mov	r0, #2
   11ab8:	strh	r0, [fp, #-8]
   11abc:	ldr	r0, [fp, #-4]
   11ac0:	str	r0, [sp, #8]
   11ac4:	bl	11e18 <main@@Base+0x1d4>
   11ac8:	ldr	lr, [sp, #8]
   11acc:	sub	r0, lr, r0
   11ad0:	str	r0, [sp, #12]
   11ad4:	ldr	r0, [sp, #12]
   11ad8:	bl	11e3c <main@@Base+0x1f8>
   11adc:	ldrh	lr, [fp, #-8]
   11ae0:	add	lr, lr, #3
   11ae4:	lsl	lr, lr, #1
   11ae8:	cmp	r0, lr
   11aec:	bcc	11b08 <test_schema@@Base+0x10f0>
   11af0:	ldr	r0, [sp, #12]
   11af4:	ldrh	r1, [fp, #-8]
   11af8:	add	r0, r0, r1, lsl #1
   11afc:	add	r0, r0, #4
   11b00:	bl	11e3c <main@@Base+0x1f8>
   11b04:	strh	r0, [fp, #-6]
   11b08:	ldrh	r0, [fp, #-6]
   11b0c:	cmp	r0, #0
   11b10:	beq	11b2c <test_schema@@Base+0x1114>
   11b14:	ldr	r0, [fp, #-4]
   11b18:	ldrh	r1, [fp, #-6]
   11b1c:	add	r0, r0, r1
   11b20:	bl	12254 <main@@Base+0x610>
   11b24:	str	r0, [sp, #4]
   11b28:	b	11b38 <test_schema@@Base+0x1120>
   11b2c:	mvn	r0, #0
   11b30:	str	r0, [sp, #4]
   11b34:	b	11b38 <test_schema@@Base+0x1120>
   11b38:	ldr	r0, [sp, #4]
   11b3c:	mov	sp, fp
   11b40:	pop	{fp, pc}
   11b44:	andeq	r0, r0, r1, ror #21
   11b48:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   11b4c:	andeq	r0, r0, r9, ror lr
   11b50:	push	{fp, lr}
   11b54:	mov	fp, sp
   11b58:	sub	sp, sp, #24
   11b5c:	str	r0, [fp, #-4]
   11b60:	movw	r0, #0
   11b64:	strh	r0, [fp, #-6]
   11b68:	ldr	r0, [fp, #-4]
   11b6c:	movw	r1, #0
   11b70:	cmp	r0, r1
   11b74:	beq	11b80 <test_schema@@Base+0x1168>
   11b78:	b	11b7c <test_schema@@Base+0x1164>
   11b7c:	b	11ba0 <test_schema@@Base+0x1188>
   11b80:	ldr	r0, [pc, #176]	; 11c38 <test_schema@@Base+0x1220>
   11b84:	add	r0, pc, r0
   11b88:	ldr	r1, [pc, #172]	; 11c3c <test_schema@@Base+0x1224>
   11b8c:	add	r1, pc, r1
   11b90:	ldr	r2, [pc, #168]	; 11c40 <test_schema@@Base+0x1228>
   11b94:	add	r3, pc, r2
   11b98:	movw	r2, #148	; 0x94
   11b9c:	bl	1091c <__assert_fail@plt>
   11ba0:	mov	r0, #1
   11ba4:	strh	r0, [fp, #-8]
   11ba8:	ldr	r0, [fp, #-4]
   11bac:	str	r0, [sp, #8]
   11bb0:	bl	11e18 <main@@Base+0x1d4>
   11bb4:	ldr	lr, [sp, #8]
   11bb8:	sub	r0, lr, r0
   11bbc:	str	r0, [sp, #12]
   11bc0:	ldr	r0, [sp, #12]
   11bc4:	bl	11e3c <main@@Base+0x1f8>
   11bc8:	ldrh	lr, [fp, #-8]
   11bcc:	add	lr, lr, #3
   11bd0:	lsl	lr, lr, #1
   11bd4:	cmp	r0, lr
   11bd8:	bcc	11bf4 <test_schema@@Base+0x11dc>
   11bdc:	ldr	r0, [sp, #12]
   11be0:	ldrh	r1, [fp, #-8]
   11be4:	add	r0, r0, r1, lsl #1
   11be8:	add	r0, r0, #4
   11bec:	bl	11e3c <main@@Base+0x1f8>
   11bf0:	strh	r0, [fp, #-6]
   11bf4:	ldrh	r0, [fp, #-6]
   11bf8:	cmp	r0, #0
   11bfc:	beq	11c1c <test_schema@@Base+0x1204>
   11c00:	ldr	r0, [fp, #-4]
   11c04:	ldrh	r1, [fp, #-6]
   11c08:	add	r0, r0, r1
   11c0c:	bl	12218 <main@@Base+0x5d4>
   11c10:	sxtb	r0, r0
   11c14:	str	r0, [sp, #4]
   11c18:	b	11c28 <test_schema@@Base+0x1210>
   11c1c:	movw	r0, #0
   11c20:	str	r0, [sp, #4]
   11c24:	b	11c28 <test_schema@@Base+0x1210>
   11c28:	ldr	r0, [sp, #4]
   11c2c:	sxtb	r0, r0
   11c30:	mov	sp, fp
   11c34:	pop	{fp, pc}
   11c38:	strdeq	r0, [r0], -r5
   11c3c:	andeq	r0, r0, r3, lsl sl
   11c40:	andeq	r0, r0, r4, asr #27

00011c44 <main@@Base>:
   11c44:	push	{fp, lr}
   11c48:	mov	fp, sp
   11c4c:	sub	sp, sp, #16
   11c50:	movw	r2, #0
   11c54:	str	r2, [fp, #-4]
   11c58:	str	r0, [sp, #8]
   11c5c:	str	r1, [sp, #4]
   11c60:	ldr	r0, [sp, #8]
   11c64:	cmp	r0, #1
   11c68:	beq	11ca0 <main@@Base+0x5c>
   11c6c:	ldr	r0, [sp, #8]
   11c70:	cmp	r0, #2
   11c74:	beq	11ca0 <main@@Base+0x5c>
   11c78:	ldr	r0, [pc, #96]	; 11ce0 <main@@Base+0x9c>
   11c7c:	add	r1, pc, r0
   11c80:	ldr	r0, [pc, #92]	; 11ce4 <main@@Base+0xa0>
   11c84:	ldr	r0, [pc, r0]
   11c88:	ldr	r0, [r0]
   11c8c:	bl	108e0 <fprintf@plt>
   11c90:	movw	r1, #1
   11c94:	str	r0, [sp]
   11c98:	mov	r0, r1
   11c9c:	bl	108d4 <exit@plt>
   11ca0:	ldr	r0, [sp, #8]
   11ca4:	cmp	r0, #2
   11ca8:	bne	11cc0 <main@@Base+0x7c>
   11cac:	ldr	r0, [pc, #36]	; 11cd8 <main@@Base+0x94>
   11cb0:	ldr	r0, [pc, r0]
   11cb4:	ldr	r1, [sp, #4]
   11cb8:	ldr	r1, [r1, #4]
   11cbc:	str	r1, [r0]
   11cc0:	ldr	r0, [pc, #20]	; 11cdc <main@@Base+0x98>
   11cc4:	ldr	r0, [pc, r0]
   11cc8:	ldr	r0, [r0]
   11ccc:	bl	10a18 <test_schema@@Base>
   11cd0:	mov	sp, fp
   11cd4:	pop	{fp, pc}
   11cd8:	andeq	r1, r1, r0, lsr #7
   11cdc:	andeq	r1, r1, ip, lsl #7
   11ce0:	muleq	r0, sl, r8
   11ce4:	andeq	r1, r1, r4, asr #7
   11ce8:	push	{fp, lr}
   11cec:	mov	fp, sp
   11cf0:	sub	sp, sp, #32
   11cf4:	str	r0, [fp, #-8]
   11cf8:	str	r1, [fp, #-12]
   11cfc:	movw	r0, #0
   11d00:	str	r0, [sp, #12]
   11d04:	ldr	r1, [fp, #-12]
   11d08:	cmp	r1, r0
   11d0c:	bne	11d1c <main@@Base+0xd8>
   11d10:	movw	r0, #1
   11d14:	str	r0, [fp, #-4]
   11d18:	b	11d88 <main@@Base+0x144>
   11d1c:	add	r0, sp, #12
   11d20:	ldr	r1, [fp, #-12]
   11d24:	movw	r2, #4
   11d28:	bl	108ec <strncpy@plt>
   11d2c:	ldr	r1, [sp, #12]
   11d30:	str	r0, [sp, #8]
   11d34:	mov	r0, r1
   11d38:	bl	11db8 <main@@Base+0x174>
   11d3c:	str	r0, [sp, #12]
   11d40:	ldr	r0, [fp, #-8]
   11d44:	add	r0, r0, #4
   11d48:	bl	11dcc <main@@Base+0x188>
   11d4c:	str	r0, [sp, #16]
   11d50:	ldr	r0, [sp, #12]
   11d54:	cmp	r0, #0
   11d58:	movw	r0, #1
   11d5c:	str	r0, [sp, #4]
   11d60:	beq	11d7c <main@@Base+0x138>
   11d64:	ldr	r0, [sp, #16]
   11d68:	ldr	r1, [sp, #12]
   11d6c:	cmp	r0, r1
   11d70:	movw	r0, #0
   11d74:	moveq	r0, #1
   11d78:	str	r0, [sp, #4]
   11d7c:	ldr	r0, [sp, #4]
   11d80:	and	r0, r0, #1
   11d84:	str	r0, [fp, #-4]
   11d88:	ldr	r0, [fp, #-4]
   11d8c:	mov	sp, fp
   11d90:	pop	{fp, pc}
   11d94:	push	{fp, lr}
   11d98:	mov	fp, sp
   11d9c:	sub	sp, sp, #8
   11da0:	str	r0, [sp, #4]
   11da4:	ldr	r0, [sp, #4]
   11da8:	ldr	r0, [r0]
   11dac:	bl	11e04 <main@@Base+0x1c0>
   11db0:	mov	sp, fp
   11db4:	pop	{fp, pc}
   11db8:	sub	sp, sp, #4
   11dbc:	str	r0, [sp]
   11dc0:	ldr	r0, [sp]
   11dc4:	add	sp, sp, #4
   11dc8:	bx	lr
   11dcc:	push	{fp, lr}
   11dd0:	mov	fp, sp
   11dd4:	sub	sp, sp, #8
   11dd8:	str	r0, [sp, #4]
   11ddc:	ldr	r0, [sp, #4]
   11de0:	ldr	r0, [r0]
   11de4:	bl	11df0 <main@@Base+0x1ac>
   11de8:	mov	sp, fp
   11dec:	pop	{fp, pc}
   11df0:	sub	sp, sp, #4
   11df4:	str	r0, [sp]
   11df8:	ldr	r0, [sp]
   11dfc:	add	sp, sp, #4
   11e00:	bx	lr
   11e04:	sub	sp, sp, #4
   11e08:	str	r0, [sp]
   11e0c:	ldr	r0, [sp]
   11e10:	add	sp, sp, #4
   11e14:	bx	lr
   11e18:	push	{fp, lr}
   11e1c:	mov	fp, sp
   11e20:	sub	sp, sp, #8
   11e24:	str	r0, [sp, #4]
   11e28:	ldr	r0, [sp, #4]
   11e2c:	ldr	r0, [r0]
   11e30:	bl	11e64 <main@@Base+0x220>
   11e34:	mov	sp, fp
   11e38:	pop	{fp, pc}
   11e3c:	push	{fp, lr}
   11e40:	mov	fp, sp
   11e44:	sub	sp, sp, #8
   11e48:	str	r0, [sp, #4]
   11e4c:	ldr	r0, [sp, #4]
   11e50:	ldrh	r0, [r0]
   11e54:	bl	11e78 <main@@Base+0x234>
   11e58:	uxth	r0, r0
   11e5c:	mov	sp, fp
   11e60:	pop	{fp, pc}
   11e64:	sub	sp, sp, #4
   11e68:	str	r0, [sp]
   11e6c:	ldr	r0, [sp]
   11e70:	add	sp, sp, #4
   11e74:	bx	lr
   11e78:	sub	sp, sp, #4
   11e7c:	strh	r0, [sp, #2]
   11e80:	ldrh	r0, [sp, #2]
   11e84:	add	sp, sp, #4
   11e88:	bx	lr
   11e8c:	push	{fp, lr}
   11e90:	mov	fp, sp
   11e94:	sub	sp, sp, #8
   11e98:	str	r0, [sp, #4]
   11e9c:	ldr	r0, [sp, #4]
   11ea0:	movw	r1, #0
   11ea4:	cmp	r0, r1
   11ea8:	beq	11ec4 <main@@Base+0x280>
   11eac:	ldr	r0, [sp, #4]
   11eb0:	mvn	r1, #3
   11eb4:	add	r0, r0, r1
   11eb8:	bl	11d94 <main@@Base+0x150>
   11ebc:	str	r0, [sp]
   11ec0:	b	11ed0 <main@@Base+0x28c>
   11ec4:	movw	r0, #0
   11ec8:	str	r0, [sp]
   11ecc:	b	11ed0 <main@@Base+0x28c>
   11ed0:	ldr	r0, [sp]
   11ed4:	mov	sp, fp
   11ed8:	pop	{fp, pc}
   11edc:	push	{fp, lr}
   11ee0:	mov	fp, sp
   11ee4:	sub	sp, sp, #32
   11ee8:	str	r0, [fp, #-8]
   11eec:	str	r1, [fp, #-12]
   11ef0:	movw	r0, #0
   11ef4:	str	r0, [sp, #12]
   11ef8:	ldr	r0, [fp, #-8]
   11efc:	bl	1122c <test_schema@@Base+0x814>
   11f00:	str	r0, [sp, #8]
   11f04:	cmp	r0, #0
   11f08:	bne	11f20 <main@@Base+0x2dc>
   11f0c:	ldr	r0, [pc, #248]	; 1200c <main@@Base+0x3c8>
   11f10:	add	r0, pc, r0
   11f14:	ldr	r0, [r0]
   11f18:	str	r0, [fp, #-4]
   11f1c:	b	12000 <main@@Base+0x3bc>
   11f20:	ldr	r0, [sp, #8]
   11f24:	mvn	r1, #0
   11f28:	add	r0, r0, r1
   11f2c:	str	r0, [sp, #8]
   11f30:	ldr	r0, [sp, #12]
   11f34:	ldr	r1, [sp, #8]
   11f38:	cmp	r0, r1
   11f3c:	bcs	11fa4 <main@@Base+0x360>
   11f40:	ldr	r0, [sp, #12]
   11f44:	ldr	r1, [sp, #8]
   11f48:	ldr	r2, [sp, #12]
   11f4c:	sub	r1, r1, r2
   11f50:	lsr	r1, r1, #1
   11f54:	add	r0, r0, r1
   11f58:	str	r0, [sp, #4]
   11f5c:	ldr	r0, [fp, #-8]
   11f60:	ldr	r1, [sp, #4]
   11f64:	bl	1139c <test_schema@@Base+0x984>
   11f68:	bl	1127c <test_schema@@Base+0x864>
   11f6c:	str	r0, [sp, #16]
   11f70:	ldr	r0, [sp, #16]
   11f74:	ldr	r1, [fp, #-12]
   11f78:	movw	r2, #0
   11f7c:	bl	12014 <main@@Base+0x3d0>
   11f80:	cmp	r0, #0
   11f84:	bge	11f98 <main@@Base+0x354>
   11f88:	ldr	r0, [sp, #4]
   11f8c:	add	r0, r0, #1
   11f90:	str	r0, [sp, #12]
   11f94:	b	11fa0 <main@@Base+0x35c>
   11f98:	ldr	r0, [sp, #4]
   11f9c:	str	r0, [sp, #8]
   11fa0:	b	11f30 <main@@Base+0x2ec>
   11fa4:	ldr	r0, [sp, #12]
   11fa8:	ldr	r1, [sp, #8]
   11fac:	cmp	r0, r1
   11fb0:	bne	11ff0 <main@@Base+0x3ac>
   11fb4:	ldr	r0, [fp, #-8]
   11fb8:	ldr	r1, [sp, #12]
   11fbc:	bl	1139c <test_schema@@Base+0x984>
   11fc0:	bl	1127c <test_schema@@Base+0x864>
   11fc4:	str	r0, [sp, #16]
   11fc8:	ldr	r0, [sp, #16]
   11fcc:	ldr	r1, [fp, #-12]
   11fd0:	movw	r2, #0
   11fd4:	bl	12014 <main@@Base+0x3d0>
   11fd8:	cmp	r0, #0
   11fdc:	bne	11fec <main@@Base+0x3a8>
   11fe0:	ldr	r0, [sp, #12]
   11fe4:	str	r0, [fp, #-4]
   11fe8:	b	12000 <main@@Base+0x3bc>
   11fec:	b	11ff0 <main@@Base+0x3ac>
   11ff0:	ldr	r0, [pc, #24]	; 12010 <main@@Base+0x3cc>
   11ff4:	add	r0, pc, r0
   11ff8:	ldr	r0, [r0]
   11ffc:	str	r0, [fp, #-4]
   12000:	ldr	r0, [fp, #-4]
   12004:	mov	sp, fp
   12008:	pop	{fp, pc}
   1200c:	andeq	r1, r1, ip, asr #2
   12010:	andeq	r1, r1, r8, rrx
   12014:	push	{fp, lr}
   12018:	mov	fp, sp
   1201c:	sub	sp, sp, #16
   12020:	str	r0, [fp, #-4]
   12024:	str	r1, [sp, #8]
   12028:	str	r2, [sp, #4]
   1202c:	ldr	r0, [fp, #-4]
   12030:	ldr	r1, [sp, #8]
   12034:	bl	1085c <strcmp@plt>
   12038:	mov	sp, fp
   1203c:	pop	{fp, pc}
   12040:	push	{fp, lr}
   12044:	mov	fp, sp
   12048:	sub	sp, sp, #32
   1204c:	str	r0, [fp, #-8]
   12050:	str	r1, [fp, #-12]
   12054:	movw	r0, #0
   12058:	str	r0, [sp, #12]
   1205c:	ldr	r0, [fp, #-8]
   12060:	bl	12178 <main@@Base+0x534>
   12064:	str	r0, [sp, #8]
   12068:	cmp	r0, #0
   1206c:	bne	12084 <main@@Base+0x440>
   12070:	ldr	r0, [pc, #248]	; 12170 <main@@Base+0x52c>
   12074:	add	r0, pc, r0
   12078:	ldr	r0, [r0]
   1207c:	str	r0, [fp, #-4]
   12080:	b	12164 <main@@Base+0x520>
   12084:	ldr	r0, [sp, #8]
   12088:	mvn	r1, #0
   1208c:	add	r0, r0, r1
   12090:	str	r0, [sp, #8]
   12094:	ldr	r0, [sp, #12]
   12098:	ldr	r1, [sp, #8]
   1209c:	cmp	r0, r1
   120a0:	bcs	12108 <main@@Base+0x4c4>
   120a4:	ldr	r0, [sp, #12]
   120a8:	ldr	r1, [sp, #8]
   120ac:	ldr	r2, [sp, #12]
   120b0:	sub	r1, r1, r2
   120b4:	lsr	r1, r1, #1
   120b8:	add	r0, r0, r1
   120bc:	str	r0, [sp, #4]
   120c0:	ldr	r0, [fp, #-8]
   120c4:	ldr	r1, [sp, #4]
   120c8:	bl	1159c <test_schema@@Base+0xb84>
   120cc:	bl	11734 <test_schema@@Base+0xd1c>
   120d0:	str	r0, [sp, #16]
   120d4:	ldr	r0, [sp, #16]
   120d8:	ldr	r1, [fp, #-12]
   120dc:	movw	r2, #0
   120e0:	bl	12014 <main@@Base+0x3d0>
   120e4:	cmp	r0, #0
   120e8:	bge	120fc <main@@Base+0x4b8>
   120ec:	ldr	r0, [sp, #4]
   120f0:	add	r0, r0, #1
   120f4:	str	r0, [sp, #12]
   120f8:	b	12104 <main@@Base+0x4c0>
   120fc:	ldr	r0, [sp, #4]
   12100:	str	r0, [sp, #8]
   12104:	b	12094 <main@@Base+0x450>
   12108:	ldr	r0, [sp, #12]
   1210c:	ldr	r1, [sp, #8]
   12110:	cmp	r0, r1
   12114:	bne	12154 <main@@Base+0x510>
   12118:	ldr	r0, [fp, #-8]
   1211c:	ldr	r1, [sp, #12]
   12120:	bl	1159c <test_schema@@Base+0xb84>
   12124:	bl	11734 <test_schema@@Base+0xd1c>
   12128:	str	r0, [sp, #16]
   1212c:	ldr	r0, [sp, #16]
   12130:	ldr	r1, [fp, #-12]
   12134:	movw	r2, #0
   12138:	bl	12014 <main@@Base+0x3d0>
   1213c:	cmp	r0, #0
   12140:	bne	12150 <main@@Base+0x50c>
   12144:	ldr	r0, [sp, #12]
   12148:	str	r0, [fp, #-4]
   1214c:	b	12164 <main@@Base+0x520>
   12150:	b	12154 <main@@Base+0x510>
   12154:	ldr	r0, [pc, #24]	; 12174 <main@@Base+0x530>
   12158:	add	r0, pc, r0
   1215c:	ldr	r0, [r0]
   12160:	str	r0, [fp, #-4]
   12164:	ldr	r0, [fp, #-4]
   12168:	mov	sp, fp
   1216c:	pop	{fp, pc}
   12170:	andeq	r0, r1, r8, ror #31
   12174:	andeq	r0, r1, r4, lsl #30
   12178:	push	{fp, lr}
   1217c:	mov	fp, sp
   12180:	sub	sp, sp, #8
   12184:	str	r0, [sp, #4]
   12188:	ldr	r0, [sp, #4]
   1218c:	movw	r1, #0
   12190:	cmp	r0, r1
   12194:	beq	121b0 <main@@Base+0x56c>
   12198:	ldr	r0, [sp, #4]
   1219c:	mvn	r1, #3
   121a0:	add	r0, r0, r1
   121a4:	bl	11d94 <main@@Base+0x150>
   121a8:	str	r0, [sp]
   121ac:	b	121bc <main@@Base+0x578>
   121b0:	movw	r0, #0
   121b4:	str	r0, [sp]
   121b8:	b	121bc <main@@Base+0x578>
   121bc:	ldr	r0, [sp]
   121c0:	mov	sp, fp
   121c4:	pop	{fp, pc}
   121c8:	push	{fp, lr}
   121cc:	mov	fp, sp
   121d0:	sub	sp, sp, #8
   121d4:	str	r0, [sp, #4]
   121d8:	ldr	r0, [sp, #4]
   121dc:	ldr	r1, [r0]
   121e0:	ldr	r0, [r0, #4]
   121e4:	str	r0, [sp]
   121e8:	mov	r0, r1
   121ec:	ldr	r1, [sp]
   121f0:	bl	121fc <main@@Base+0x5b8>
   121f4:	mov	sp, fp
   121f8:	pop	{fp, pc}
   121fc:	sub	sp, sp, #8
   12200:	str	r0, [sp]
   12204:	str	r1, [sp, #4]
   12208:	ldr	r0, [sp]
   1220c:	ldr	r1, [sp, #4]
   12210:	add	sp, sp, #8
   12214:	bx	lr
   12218:	push	{fp, lr}
   1221c:	mov	fp, sp
   12220:	sub	sp, sp, #8
   12224:	str	r0, [sp, #4]
   12228:	ldr	r0, [sp, #4]
   1222c:	ldrsb	r0, [r0]
   12230:	bl	12240 <main@@Base+0x5fc>
   12234:	sxtb	r0, r0
   12238:	mov	sp, fp
   1223c:	pop	{fp, pc}
   12240:	sub	sp, sp, #4
   12244:	strb	r0, [sp, #3]
   12248:	ldrsb	r0, [sp, #3]
   1224c:	add	sp, sp, #4
   12250:	bx	lr
   12254:	push	{fp, lr}
   12258:	mov	fp, sp
   1225c:	sub	sp, sp, #8
   12260:	str	r0, [sp, #4]
   12264:	ldr	r0, [sp, #4]
   12268:	ldr	r0, [r0]
   1226c:	bl	12278 <main@@Base+0x634>
   12270:	mov	sp, fp
   12274:	pop	{fp, pc}
   12278:	sub	sp, sp, #4
   1227c:	str	r0, [sp]
   12280:	ldr	r0, [sp]
   12284:	add	sp, sp, #4
   12288:	bx	lr

0001228c <__libc_csu_init@@Base>:
   1228c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12290:	mov	r7, r0
   12294:	ldr	r6, [pc, #72]	; 122e4 <__libc_csu_init@@Base+0x58>
   12298:	ldr	r5, [pc, #72]	; 122e8 <__libc_csu_init@@Base+0x5c>
   1229c:	add	r6, pc, r6
   122a0:	add	r5, pc, r5
   122a4:	sub	r6, r6, r5
   122a8:	mov	r8, r1
   122ac:	mov	r9, r2
   122b0:	bl	1083c <strcmp@plt-0x20>
   122b4:	asrs	r6, r6, #2
   122b8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   122bc:	mov	r4, #0
   122c0:	add	r4, r4, #1
   122c4:	ldr	r3, [r5], #4
   122c8:	mov	r2, r9
   122cc:	mov	r1, r8
   122d0:	mov	r0, r7
   122d4:	blx	r3
   122d8:	cmp	r6, r4
   122dc:	bne	122c0 <__libc_csu_init@@Base+0x34>
   122e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   122e4:	andeq	r0, r1, r8, ror #24
   122e8:	andeq	r0, r1, r0, ror #24

000122ec <__libc_csu_fini@@Base>:
   122ec:	bx	lr

Disassembly of section .fini:

000122f0 <.fini>:
   122f0:	push	{r3, lr}
   122f4:	pop	{r3, pc}
