
../repos/charybdis/wsockd/.libs/wsockd:     file format elf32-littlearm


Disassembly of section .init:

00010c38 <.init>:
   10c38:	push	{r3, lr}
   10c3c:	bl	1139c <rb_base64_encode@plt+0x4d4>
   10c40:	pop	{r3, pc}

Disassembly of section .plt:

00010c44 <open@plt-0x14>:
   10c44:	push	{lr}		; (str lr, [sp, #-4]!)
   10c48:	ldr	lr, [pc, #4]	; 10c54 <open@plt-0x4>
   10c4c:	add	lr, pc, lr
   10c50:	ldr	pc, [lr, #8]!
   10c54:	andeq	r4, r1, ip, lsr #7

00010c58 <open@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #20, 20	; 0x14000
   10c60:	ldr	pc, [ip, #940]!	; 0x3ac

00010c64 <sigemptyset@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #20, 20	; 0x14000
   10c6c:	ldr	pc, [ip, #932]!	; 0x3a4

00010c70 <strerror@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #20, 20	; 0x14000
   10c78:	ldr	pc, [ip, #924]!	; 0x39c

00010c7c <rb_get_type@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #20, 20	; 0x14000
   10c84:	ldr	pc, [ip, #916]!	; 0x394

00010c88 <abort@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #20, 20	; 0x14000
   10c90:	ldr	pc, [ip, #908]!	; 0x38c

00010c94 <rb_event_addish@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #20, 20	; 0x14000
   10c9c:	ldr	pc, [ip, #900]!	; 0x384

00010ca0 <rb_ignore_errno@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #20, 20	; 0x14000
   10ca8:	ldr	pc, [ip, #892]!	; 0x37c

00010cac <__libc_start_main@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #20, 20	; 0x14000
   10cb4:	ldr	pc, [ip, #884]!	; 0x374

00010cb8 <rb_setselect@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #20, 20	; 0x14000
   10cc0:	ldr	pc, [ip, #876]!	; 0x36c

00010cc4 <__gmon_start__@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #20, 20	; 0x14000
   10ccc:	ldr	pc, [ip, #868]!	; 0x364

00010cd0 <rb_send_fd_buf@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #20, 20	; 0x14000
   10cd8:	ldr	pc, [ip, #860]!	; 0x35c

00010cdc <vsnprintf@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #20, 20	; 0x14000
   10ce4:	ldr	pc, [ip, #852]!	; 0x354

00010ce8 <getenv@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #20, 20	; 0x14000
   10cf0:	ldr	pc, [ip, #844]!	; 0x34c

00010cf4 <calloc@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #20, 20	; 0x14000
   10cfc:	ldr	pc, [ip, #836]!	; 0x344

00010d00 <rb_set_nb@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #20, 20	; 0x14000
   10d08:	ldr	pc, [ip, #828]!	; 0x33c

00010d0c <memset@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #20, 20	; 0x14000
   10d14:	ldr	pc, [ip, #820]!	; 0x334

00010d18 <__assert_fail@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #20, 20	; 0x14000
   10d20:	ldr	pc, [ip, #812]!	; 0x32c

00010d24 <rb_linebuf_parse@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #20, 20	; 0x14000
   10d2c:	ldr	pc, [ip, #804]!	; 0x324

00010d30 <rb_strlcpy@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #20, 20	; 0x14000
   10d38:	ldr	pc, [ip, #796]!	; 0x31c

00010d3c <rb_init_rawbuffers@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #20, 20	; 0x14000
   10d44:	ldr	pc, [ip, #788]!	; 0x314

00010d48 <free@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #20, 20	; 0x14000
   10d50:	ldr	pc, [ip, #780]!	; 0x30c

00010d54 <rb_lib_loop@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #20, 20	; 0x14000
   10d5c:	ldr	pc, [ip, #772]!	; 0x304

00010d60 <rb_read@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #20, 20	; 0x14000
   10d68:	ldr	pc, [ip, #764]!	; 0x2fc

00010d6c <rb_set_type@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #20, 20	; 0x14000
   10d74:	ldr	pc, [ip, #756]!	; 0x2f4

00010d78 <rb_linebuf_get@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #20, 20	; 0x14000
   10d80:	ldr	pc, [ip, #748]!	; 0x2ec

00010d84 <rb_linebuf_flush@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #20, 20	; 0x14000
   10d8c:	ldr	pc, [ip, #740]!	; 0x2e4

00010d90 <strlen@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #20, 20	; 0x14000
   10d98:	ldr	pc, [ip, #732]!	; 0x2dc

00010d9c <memcpy@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #20, 20	; 0x14000
   10da4:	ldr	pc, [ip, #724]!	; 0x2d4

00010da8 <rb_linebuf_donebuf@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #20, 20	; 0x14000
   10db0:	ldr	pc, [ip, #716]!	; 0x2cc

00010db4 <rb_strcasestr@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #20, 20	; 0x14000
   10dbc:	ldr	pc, [ip, #708]!	; 0x2c4

00010dc0 <rb_close@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #20, 20	; 0x14000
   10dc8:	ldr	pc, [ip, #700]!	; 0x2bc

00010dcc <strtol@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #20, 20	; 0x14000
   10dd4:	ldr	pc, [ip, #692]!	; 0x2b4

00010dd8 <sigaddset@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #20, 20	; 0x14000
   10de0:	ldr	pc, [ip, #684]!	; 0x2ac

00010de4 <rb_rawbuf_length@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #20, 20	; 0x14000
   10dec:	ldr	pc, [ip, #676]!	; 0x2a4

00010df0 <rb_free_rawbuffer@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #20, 20	; 0x14000
   10df8:	ldr	pc, [ip, #668]!	; 0x29c

00010dfc <close@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #20, 20	; 0x14000
   10e04:	ldr	pc, [ip, #660]!	; 0x294

00010e08 <fwrite@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #20, 20	; 0x14000
   10e10:	ldr	pc, [ip, #652]!	; 0x28c

00010e14 <rb_outofmemory@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #20, 20	; 0x14000
   10e1c:	ldr	pc, [ip, #644]!	; 0x284

00010e20 <rb_rawbuf_get@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #20, 20	; 0x14000
   10e28:	ldr	pc, [ip, #636]!	; 0x27c

00010e2c <sigaction@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #20, 20	; 0x14000
   10e34:	ldr	pc, [ip, #628]!	; 0x274

00010e38 <rb_lib_init@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #20, 20	; 0x14000
   10e40:	ldr	pc, [ip, #620]!	; 0x26c

00010e44 <rb_new_rawbuffer@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #20, 20	; 0x14000
   10e4c:	ldr	pc, [ip, #612]!	; 0x264

00010e50 <rb_open@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #20, 20	; 0x14000
   10e58:	ldr	pc, [ip, #604]!	; 0x25c

00010e5c <rb_recv_fd_buf@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #20, 20	; 0x14000
   10e64:	ldr	pc, [ip, #596]!	; 0x254

00010e68 <dup2@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #20, 20	; 0x14000
   10e70:	ldr	pc, [ip, #588]!	; 0x24c

00010e74 <rb_linebuf_newbuf@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #20, 20	; 0x14000
   10e7c:	ldr	pc, [ip, #580]!	; 0x244

00010e80 <rb_linebuf_init@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #20, 20	; 0x14000
   10e88:	ldr	pc, [ip, #572]!	; 0x23c

00010e8c <getrlimit@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #20, 20	; 0x14000
   10e94:	ldr	pc, [ip, #564]!	; 0x234

00010e98 <rb_rawbuf_append@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #20, 20	; 0x14000
   10ea0:	ldr	pc, [ip, #556]!	; 0x22c

00010ea4 <rb_rawbuf_flush@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #20, 20	; 0x14000
   10eac:	ldr	pc, [ip, #548]!	; 0x224

00010eb0 <exit@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #20, 20	; 0x14000
   10eb8:	ldr	pc, [ip, #540]!	; 0x21c

00010ebc <__errno_location@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #20, 20	; 0x14000
   10ec4:	ldr	pc, [ip, #532]!	; 0x214

00010ec8 <rb_base64_encode@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #20, 20	; 0x14000
   10ed0:	ldr	pc, [ip, #524]!	; 0x20c

Disassembly of section .text:

00010ed8 <.text>:
   10ed8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10edc:	mov	r0, #7
   10ee0:	strd	r6, [sp, #8]
   10ee4:	strd	r8, [sp, #16]
   10ee8:	str	sl, [sp, #24]
   10eec:	str	lr, [sp, #28]
   10ef0:	sub	sp, sp, #160	; 0xa0
   10ef4:	add	r1, sp, #20
   10ef8:	bl	10e8c <getrlimit@plt>
   10efc:	cmp	r0, #0
   10f00:	movw	r0, #18068	; 0x4694
   10f04:	movt	r0, #1
   10f08:	ldreq	r5, [sp, #20]
   10f0c:	movwne	r5, #65535	; 0xffff
   10f10:	bl	10ce8 <getenv@plt>
   10f14:	mov	r7, r0
   10f18:	movw	r0, #18076	; 0x469c
   10f1c:	movt	r0, #1
   10f20:	bl	10ce8 <getenv@plt>
   10f24:	mov	r6, r0
   10f28:	movw	r0, #18088	; 0x46a8
   10f2c:	movt	r0, #1
   10f30:	bl	10ce8 <getenv@plt>
   10f34:	clz	r1, r6
   10f38:	cmp	r7, #0
   10f3c:	lsr	r1, r1, #5
   10f40:	moveq	r1, #1
   10f44:	cmp	r0, #0
   10f48:	moveq	r4, #1
   10f4c:	mov	r9, r0
   10f50:	movne	r4, r1
   10f54:	cmp	r4, #0
   10f58:	beq	10f9c <rb_base64_encode@plt+0xd4>
   10f5c:	movw	r4, #20720	; 0x50f0
   10f60:	movt	r4, #2
   10f64:	mov	r2, #52	; 0x34
   10f68:	mov	r1, #1
   10f6c:	ldr	r3, [r4]
   10f70:	movw	r0, #18100	; 0x46b4
   10f74:	movt	r0, #1
   10f78:	bl	10e08 <fwrite@plt>
   10f7c:	movw	r0, #18156	; 0x46ec
   10f80:	movt	r0, #1
   10f84:	ldr	r3, [r4]
   10f88:	mov	r2, #49	; 0x31
   10f8c:	mov	r1, #1
   10f90:	bl	10e08 <fwrite@plt>
   10f94:	mov	r0, #1
   10f98:	bl	10eb0 <exit@plt>
   10f9c:	mov	r0, r7
   10fa0:	mov	r2, #10
   10fa4:	mov	r1, r4
   10fa8:	movw	r8, #20728	; 0x50f8
   10fac:	movt	r8, #2
   10fb0:	bl	10dcc <strtol@plt>
   10fb4:	mov	r7, r0
   10fb8:	mov	r2, #10
   10fbc:	mov	r0, r6
   10fc0:	mov	r1, r4
   10fc4:	bl	10dcc <strtol@plt>
   10fc8:	mov	r6, r0
   10fcc:	mov	r1, r4
   10fd0:	mov	r0, r9
   10fd4:	mov	r2, #10
   10fd8:	bl	10dcc <strtol@plt>
   10fdc:	cmp	r5, #0
   10fe0:	str	r0, [r8, #12]
   10fe4:	ble	1103c <rb_base64_encode@plt+0x174>
   10fe8:	cmp	r5, #1
   10fec:	movne	r4, #1
   10ff0:	bne	11004 <rb_base64_encode@plt+0x13c>
   10ff4:	b	1103c <rb_base64_encode@plt+0x174>
   10ff8:	add	r4, r4, #1
   10ffc:	cmp	r4, r5
   11000:	beq	1103c <rb_base64_encode@plt+0x174>
   11004:	cmp	r7, r4
   11008:	cmpne	r6, r4
   1100c:	movne	r3, #1
   11010:	moveq	r3, #0
   11014:	cmp	r4, #2
   11018:	movle	r3, #0
   1101c:	andgt	r3, r3, #1
   11020:	cmp	r3, #0
   11024:	beq	10ff8 <rb_base64_encode@plt+0x130>
   11028:	mov	r0, r4
   1102c:	add	r4, r4, #1
   11030:	bl	10dfc <close@plt>
   11034:	cmp	r4, r5
   11038:	bne	11004 <rb_base64_encode@plt+0x13c>
   1103c:	movw	r0, #18208	; 0x4720
   11040:	movt	r0, #1
   11044:	mov	r1, #2
   11048:	bl	10c58 <open@plt>
   1104c:	subs	r4, r0, #0
   11050:	blt	11080 <rb_base64_encode@plt+0x1b8>
   11054:	cmp	r7, #0
   11058:	cmpne	r6, #0
   1105c:	bne	1129c <rb_base64_encode@plt+0x3d4>
   11060:	cmp	r7, #1
   11064:	cmpne	r6, #1
   11068:	bne	1128c <rb_base64_encode@plt+0x3c4>
   1106c:	cmp	r7, #2
   11070:	cmpne	r6, #2
   11074:	bne	1127c <rb_base64_encode@plt+0x3b4>
   11078:	cmp	r4, #2
   1107c:	bgt	11270 <rb_base64_encode@plt+0x3a8>
   11080:	mov	r4, #0
   11084:	mov	sl, #1
   11088:	add	r0, sp, #24
   1108c:	mov	r9, #4096	; 0x1000
   11090:	str	sl, [sp, #20]
   11094:	str	r4, [sp, #152]	; 0x98
   11098:	bl	10c64 <sigemptyset@plt>
   1109c:	mov	r1, #13
   110a0:	add	r0, sp, #24
   110a4:	bl	10dd8 <sigaddset@plt>
   110a8:	mov	r1, #14
   110ac:	add	r0, sp, #24
   110b0:	bl	10dd8 <sigaddset@plt>
   110b4:	mov	r1, #5
   110b8:	add	r0, sp, #24
   110bc:	bl	10dd8 <sigaddset@plt>
   110c0:	mov	r1, #28
   110c4:	add	r0, sp, #24
   110c8:	bl	10dd8 <sigaddset@plt>
   110cc:	mov	r2, r4
   110d0:	add	r1, sp, #20
   110d4:	mov	r0, #28
   110d8:	bl	10e2c <sigaction@plt>
   110dc:	mov	r2, r4
   110e0:	add	r1, sp, #20
   110e4:	mov	r0, #13
   110e8:	bl	10e2c <sigaction@plt>
   110ec:	mov	r2, r4
   110f0:	add	r1, sp, #20
   110f4:	mov	r0, #5
   110f8:	bl	10e2c <sigaction@plt>
   110fc:	movw	r3, #5200	; 0x1450
   11100:	movt	r3, #1
   11104:	add	r1, sp, #20
   11108:	mov	r2, r4
   1110c:	mov	r0, #14
   11110:	str	r3, [sp, #20]
   11114:	bl	10e2c <sigaction@plt>
   11118:	mov	ip, #1024	; 0x400
   1111c:	mov	r3, r4
   11120:	mov	r2, r4
   11124:	mov	r1, r4
   11128:	mov	r0, r4
   1112c:	stm	sp, {r5, ip}
   11130:	str	r9, [sp, #8]
   11134:	bl	10e38 <rb_lib_init@plt>
   11138:	mov	r0, r9
   1113c:	bl	10e80 <rb_linebuf_init@plt>
   11140:	mov	r0, r9
   11144:	bl	10d3c <rb_init_rawbuffers@plt>
   11148:	mov	r0, sl
   1114c:	mov	r1, #48	; 0x30
   11150:	bl	10cf4 <calloc@plt>
   11154:	subs	r5, r0, #0
   11158:	beq	1126c <rb_base64_encode@plt+0x3a4>
   1115c:	mov	r1, #4
   11160:	mov	r0, r7
   11164:	str	r5, [r8, #16]
   11168:	movw	r2, #18220	; 0x472c
   1116c:	movt	r2, #1
   11170:	bl	10e50 <rb_open@plt>
   11174:	mov	r1, #8
   11178:	movw	r2, #18240	; 0x4740
   1117c:	movt	r2, #1
   11180:	str	r0, [r5, #16]
   11184:	mov	r0, r6
   11188:	ldr	r5, [r8, #16]
   1118c:	mov	r6, #16384	; 0x4000
   11190:	bl	10e50 <rb_open@plt>
   11194:	ldr	r3, [r8, #16]
   11198:	str	r0, [r5, #20]
   1119c:	ldr	r0, [r3, #16]
   111a0:	bl	10d00 <rb_set_nb@plt>
   111a4:	ldr	r3, [r8, #16]
   111a8:	ldr	r0, [r3, #20]
   111ac:	bl	10d00 <rb_set_nb@plt>
   111b0:	mov	r2, r4
   111b4:	mov	r3, #10
   111b8:	movw	r1, #5204	; 0x1454
   111bc:	movt	r1, #1
   111c0:	movw	r0, #18252	; 0x474c
   111c4:	movt	r0, #1
   111c8:	bl	10c94 <rb_event_addish@plt>
   111cc:	ldr	r3, [r8, #16]
   111d0:	ldr	r0, [r3, #20]
   111d4:	bl	11524 <rb_base64_encode@plt+0x65c>
   111d8:	ldr	r5, [r8, #16]
   111dc:	mov	r1, #40	; 0x28
   111e0:	mov	r0, #1
   111e4:	bl	10cf4 <calloc@plt>
   111e8:	subs	r4, r0, #0
   111ec:	beq	1126c <rb_base64_encode@plt+0x3a4>
   111f0:	mov	r1, #16384	; 0x4000
   111f4:	mov	r0, #1
   111f8:	bl	10cf4 <calloc@plt>
   111fc:	subs	r3, r0, #0
   11200:	beq	1126c <rb_base64_encode@plt+0x3a4>
   11204:	mov	ip, #4
   11208:	mov	r1, r3
   1120c:	ldr	r0, [r5, #16]
   11210:	mov	r2, #16384	; 0x4000
   11214:	str	r3, [r4, #12]
   11218:	add	r3, r4, #20
   1121c:	str	r6, [r4, #16]
   11220:	str	ip, [sp]
   11224:	bl	10e5c <rb_recv_fd_buf@plt>
   11228:	subs	r7, r0, #0
   1122c:	bgt	112a8 <rb_base64_encode@plt+0x3e0>
   11230:	ldr	r0, [r4, #12]
   11234:	cmp	r0, #0
   11238:	beq	11240 <rb_base64_encode@plt+0x378>
   1123c:	bl	10d48 <free@plt>
   11240:	mov	r0, r4
   11244:	bl	10d48 <free@plt>
   11248:	cmp	r7, #0
   1124c:	beq	11264 <rb_base64_encode@plt+0x39c>
   11250:	bl	10ebc <__errno_location@plt>
   11254:	ldr	r0, [r0]
   11258:	bl	10ca0 <rb_ignore_errno@plt>
   1125c:	cmp	r0, #0
   11260:	bne	11328 <rb_base64_encode@plt+0x460>
   11264:	mov	r0, #0
   11268:	bl	10eb0 <exit@plt>
   1126c:	bl	10e14 <rb_outofmemory@plt>
   11270:	mov	r0, r4
   11274:	bl	10dfc <close@plt>
   11278:	b	11080 <rb_base64_encode@plt+0x1b8>
   1127c:	mov	r1, #2
   11280:	mov	r0, r4
   11284:	bl	10e68 <dup2@plt>
   11288:	b	11078 <rb_base64_encode@plt+0x1b0>
   1128c:	mov	r1, #1
   11290:	mov	r0, r4
   11294:	bl	10e68 <dup2@plt>
   11298:	b	1106c <rb_base64_encode@plt+0x1a4>
   1129c:	mov	r1, #0
   112a0:	bl	10e68 <dup2@plt>
   112a4:	b	11060 <rb_base64_encode@plt+0x198>
   112a8:	ldr	r3, [r5, #28]
   112ac:	mov	r2, #0
   112b0:	str	r4, [r4]
   112b4:	cmp	r3, r2
   112b8:	str	r3, [r4, #4]
   112bc:	str	r2, [r4, #8]
   112c0:	str	r7, [r4, #16]
   112c4:	strne	r4, [r3, #8]
   112c8:	beq	11318 <rb_base64_encode@plt+0x450>
   112cc:	ldr	r2, [r5, #32]
   112d0:	ldr	r3, [r4, #20]
   112d4:	str	r4, [r5, #28]
   112d8:	add	r2, r2, #1
   112dc:	cmp	r3, #0
   112e0:	str	r2, [r5, #32]
   112e4:	beq	11310 <rb_base64_encode@plt+0x448>
   112e8:	ldr	r3, [r4, #24]
   112ec:	cmp	r3, #0
   112f0:	beq	11350 <rb_base64_encode@plt+0x488>
   112f4:	ldr	r3, [r4, #28]
   112f8:	cmp	r3, #0
   112fc:	beq	11358 <rb_base64_encode@plt+0x490>
   11300:	ldr	r3, [r4, #32]
   11304:	cmp	r3, #0
   11308:	moveq	r3, #3
   1130c:	movne	r3, #4
   11310:	str	r3, [r4, #36]	; 0x24
   11314:	b	111dc <rb_base64_encode@plt+0x314>
   11318:	ldr	r3, [r5, #24]
   1131c:	cmp	r3, #0
   11320:	streq	r4, [r5, #24]
   11324:	b	112cc <rb_base64_encode@plt+0x404>
   11328:	mov	r0, r5
   1132c:	bl	12640 <rb_base64_encode@plt+0x1778>
   11330:	mov	r3, r5
   11334:	movw	r2, #10452	; 0x28d4
   11338:	movt	r2, #1
   1133c:	mov	r1, #1
   11340:	ldr	r0, [r5, #16]
   11344:	bl	10cb8 <rb_setselect@plt>
   11348:	mov	r0, #0
   1134c:	bl	10d54 <rb_lib_loop@plt>
   11350:	mov	r3, #1
   11354:	b	11310 <rb_base64_encode@plt+0x448>
   11358:	mov	r3, #2
   1135c:	b	11310 <rb_base64_encode@plt+0x448>
   11360:	mov	fp, #0
   11364:	mov	lr, #0
   11368:	pop	{r1}		; (ldr r1, [sp], #4)
   1136c:	mov	r2, sp
   11370:	push	{r2}		; (str r2, [sp, #-4]!)
   11374:	push	{r0}		; (str r0, [sp, #-4]!)
   11378:	ldr	ip, [pc, #16]	; 11390 <rb_base64_encode@plt+0x4c8>
   1137c:	push	{ip}		; (str ip, [sp, #-4]!)
   11380:	ldr	r0, [pc, #12]	; 11394 <rb_base64_encode@plt+0x4cc>
   11384:	ldr	r3, [pc, #12]	; 11398 <rb_base64_encode@plt+0x4d0>
   11388:	bl	10cac <__libc_start_main@plt>
   1138c:	bl	10c88 <abort@plt>
   11390:	andeq	r4, r1, r8, lsl #9
   11394:	ldrdeq	r0, [r1], -r8
   11398:	andeq	r4, r1, r8, lsr #8
   1139c:	ldr	r3, [pc, #20]	; 113b8 <rb_base64_encode@plt+0x4f0>
   113a0:	ldr	r2, [pc, #20]	; 113bc <rb_base64_encode@plt+0x4f4>
   113a4:	add	r3, pc, r3
   113a8:	ldr	r2, [r3, r2]
   113ac:	cmp	r2, #0
   113b0:	bxeq	lr
   113b4:	b	10cc4 <__gmon_start__@plt>
   113b8:	andeq	r3, r1, r4, asr ip
   113bc:	andeq	r0, r0, r0, ror #1
   113c0:	ldr	r0, [pc, #24]	; 113e0 <rb_base64_encode@plt+0x518>
   113c4:	ldr	r3, [pc, #24]	; 113e4 <rb_base64_encode@plt+0x51c>
   113c8:	cmp	r3, r0
   113cc:	bxeq	lr
   113d0:	ldr	r3, [pc, #16]	; 113e8 <rb_base64_encode@plt+0x520>
   113d4:	cmp	r3, #0
   113d8:	bxeq	lr
   113dc:	bx	r3
   113e0:	andeq	r5, r2, ip, ror #1
   113e4:	andeq	r5, r2, ip, ror #1
   113e8:	andeq	r0, r0, r0
   113ec:	ldr	r0, [pc, #36]	; 11418 <rb_base64_encode@plt+0x550>
   113f0:	ldr	r1, [pc, #36]	; 1141c <rb_base64_encode@plt+0x554>
   113f4:	sub	r1, r1, r0
   113f8:	asr	r1, r1, #2
   113fc:	add	r1, r1, r1, lsr #31
   11400:	asrs	r1, r1, #1
   11404:	bxeq	lr
   11408:	ldr	r3, [pc, #16]	; 11420 <rb_base64_encode@plt+0x558>
   1140c:	cmp	r3, #0
   11410:	bxeq	lr
   11414:	bx	r3
   11418:	andeq	r5, r2, ip, ror #1
   1141c:	andeq	r5, r2, ip, ror #1
   11420:	andeq	r0, r0, r0
   11424:	push	{r4, lr}
   11428:	ldr	r4, [pc, #24]	; 11448 <rb_base64_encode@plt+0x580>
   1142c:	ldrb	r3, [r4]
   11430:	cmp	r3, #0
   11434:	popne	{r4, pc}
   11438:	bl	113c0 <rb_base64_encode@plt+0x4f8>
   1143c:	mov	r3, #1
   11440:	strb	r3, [r4]
   11444:	pop	{r4, pc}
   11448:	strdeq	r5, [r2], -r4
   1144c:	b	113ec <rb_base64_encode@plt+0x524>
   11450:	bx	lr
   11454:	strd	r4, [sp, #-16]!
   11458:	str	r6, [sp, #8]
   1145c:	movw	r6, #20728	; 0x50f8
   11460:	movt	r6, #2
   11464:	ldr	r3, [r6]
   11468:	str	lr, [sp, #12]
   1146c:	cmp	r3, #0
   11470:	beq	114b8 <rb_base64_encode@plt+0x5f0>
   11474:	ldr	r5, [r3, #8]
   11478:	ldr	r4, [r3]
   1147c:	add	r0, r4, #52	; 0x34
   11480:	bl	10da8 <rb_linebuf_donebuf@plt>
   11484:	add	r0, r4, #24
   11488:	bl	10da8 <rb_linebuf_donebuf@plt>
   1148c:	ldr	r0, [r4, #20]
   11490:	bl	10df0 <rb_free_rawbuffer@plt>
   11494:	ldr	r0, [r4, #16]
   11498:	bl	10df0 <rb_free_rawbuffer@plt>
   1149c:	mov	r0, r4
   114a0:	bl	10d48 <free@plt>
   114a4:	cmp	r5, #0
   114a8:	mov	r3, r5
   114ac:	beq	114b8 <rb_base64_encode@plt+0x5f0>
   114b0:	ldr	r5, [r5, #8]
   114b4:	b	11478 <rb_base64_encode@plt+0x5b0>
   114b8:	mov	r2, #0
   114bc:	mov	r3, #0
   114c0:	ldrd	r4, [sp]
   114c4:	strd	r2, [r6]
   114c8:	ldr	r6, [sp, #8]
   114cc:	add	sp, sp, #12
   114d0:	pop	{pc}		; (ldr pc, [sp], #4)
   114d4:	movw	r3, #17560	; 0x4498
   114d8:	movt	r3, #1
   114dc:	str	r4, [sp, #-8]!
   114e0:	movw	r1, #17592	; 0x44b8
   114e4:	movt	r1, #1
   114e8:	str	lr, [sp, #4]
   114ec:	movw	r0, #17620	; 0x44d4
   114f0:	movt	r0, #1
   114f4:	mov	r2, #213	; 0xd5
   114f8:	bl	10d18 <__assert_fail@plt>
   114fc:	movw	r1, #17592	; 0x44b8
   11500:	movt	r1, #1
   11504:	ldr	r3, [pc, #20]	; 11520 <rb_base64_encode@plt+0x658>
   11508:	movw	r0, #17636	; 0x44e4
   1150c:	movt	r0, #1
   11510:	str	r4, [sp, #-8]!
   11514:	mov	r2, #236	; 0xec
   11518:	str	lr, [sp, #4]
   1151c:	bl	10d18 <__assert_fail@plt>
   11520:	andeq	r4, r1, r8, lsr #9
   11524:	str	r4, [sp, #-8]!
   11528:	mov	r4, r0
   1152c:	str	lr, [sp, #4]
   11530:	sub	sp, sp, #16384	; 0x4000
   11534:	mov	r2, #16384	; 0x4000
   11538:	mov	r1, sp
   1153c:	mov	r0, r4
   11540:	bl	10d60 <rb_read@plt>
   11544:	cmp	r0, #0
   11548:	bgt	11534 <rb_base64_encode@plt+0x66c>
   1154c:	beq	11564 <rb_base64_encode@plt+0x69c>
   11550:	bl	10ebc <__errno_location@plt>
   11554:	ldr	r0, [r0]
   11558:	bl	10ca0 <rb_ignore_errno@plt>
   1155c:	cmp	r0, #0
   11560:	bne	1156c <rb_base64_encode@plt+0x6a4>
   11564:	mov	r0, #0
   11568:	bl	10eb0 <exit@plt>
   1156c:	mov	r0, r4
   11570:	mov	r3, #0
   11574:	mov	r1, #1
   11578:	movw	r2, #5524	; 0x1594
   1157c:	movt	r2, #1
   11580:	bl	10cb8 <rb_setselect@plt>
   11584:	add	sp, sp, #16384	; 0x4000
   11588:	ldr	r4, [sp]
   1158c:	add	sp, sp, #4
   11590:	pop	{pc}		; (ldr pc, [sp], #4)
   11594:	str	r4, [sp, #-8]!
   11598:	mov	r4, r0
   1159c:	str	lr, [sp, #4]
   115a0:	sub	sp, sp, #16384	; 0x4000
   115a4:	mov	r2, #16384	; 0x4000
   115a8:	mov	r1, sp
   115ac:	mov	r0, r4
   115b0:	bl	10d60 <rb_read@plt>
   115b4:	cmp	r0, #0
   115b8:	bgt	115a4 <rb_base64_encode@plt+0x6dc>
   115bc:	beq	115d4 <rb_base64_encode@plt+0x70c>
   115c0:	bl	10ebc <__errno_location@plt>
   115c4:	ldr	r0, [r0]
   115c8:	bl	10ca0 <rb_ignore_errno@plt>
   115cc:	cmp	r0, #0
   115d0:	bne	115dc <rb_base64_encode@plt+0x714>
   115d4:	mov	r0, #0
   115d8:	bl	10eb0 <exit@plt>
   115dc:	mov	r0, r4
   115e0:	mov	r3, #0
   115e4:	mov	r1, #1
   115e8:	movw	r2, #5524	; 0x1594
   115ec:	movt	r2, #1
   115f0:	bl	10cb8 <rb_setselect@plt>
   115f4:	add	sp, sp, #16384	; 0x4000
   115f8:	ldr	r4, [sp]
   115fc:	add	sp, sp, #4
   11600:	pop	{pc}		; (ldr pc, [sp], #4)
   11604:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11608:	strd	r6, [sp, #8]
   1160c:	ldr	r7, [r1, #36]	; 0x24
   11610:	strd	r8, [sp, #16]
   11614:	mov	r8, r1
   11618:	str	sl, [sp, #24]
   1161c:	str	lr, [sp, #28]
   11620:	sub	sp, sp, #8
   11624:	cmp	r7, #0
   11628:	beq	1169c <rb_base64_encode@plt+0x7d4>
   1162c:	ldr	r6, [r7, #8]
   11630:	movw	r9, #20728	; 0x50f8
   11634:	movt	r9, #2
   11638:	mov	sl, #0
   1163c:	ldr	r4, [r7]
   11640:	ldr	ip, [r9, #12]
   11644:	ldr	r0, [r8, #16]
   11648:	add	r5, r4, #20
   1164c:	ldr	r3, [r4, #12]
   11650:	mov	r1, r5
   11654:	ldr	r2, [r4, #36]	; 0x24
   11658:	str	ip, [sp, #4]
   1165c:	ldr	ip, [r4, #16]
   11660:	str	ip, [sp]
   11664:	bl	10cd0 <rb_send_fd_buf@plt>
   11668:	cmp	r0, #0
   1166c:	bgt	116c4 <rb_base64_encode@plt+0x7fc>
   11670:	beq	11740 <rb_base64_encode@plt+0x878>
   11674:	bl	10ebc <__errno_location@plt>
   11678:	ldr	r0, [r0]
   1167c:	bl	10ca0 <rb_ignore_errno@plt>
   11680:	cmp	r0, #0
   11684:	beq	11740 <rb_base64_encode@plt+0x878>
   11688:	cmp	r6, #0
   1168c:	beq	1169c <rb_base64_encode@plt+0x7d4>
   11690:	mov	r7, r6
   11694:	ldr	r6, [r6, #8]
   11698:	b	1163c <rb_base64_encode@plt+0x774>
   1169c:	ldr	r3, [r8, #44]	; 0x2c
   116a0:	cmp	r3, #0
   116a4:	bne	11748 <rb_base64_encode@plt+0x880>
   116a8:	add	sp, sp, #8
   116ac:	ldrd	r4, [sp]
   116b0:	ldrd	r6, [sp, #8]
   116b4:	ldrd	r8, [sp, #16]
   116b8:	ldr	sl, [sp, #24]
   116bc:	add	sp, sp, #28
   116c0:	pop	{pc}		; (ldr pc, [sp], #4)
   116c4:	ldr	r3, [r7, #4]
   116c8:	ldr	r2, [r7, #8]
   116cc:	cmp	r2, #0
   116d0:	strne	r3, [r2, #4]
   116d4:	ldrne	r3, [r7, #4]
   116d8:	streq	r3, [r8, #40]	; 0x28
   116dc:	cmp	r3, #0
   116e0:	strne	r2, [r3, #8]
   116e4:	ldr	r3, [r8, #44]	; 0x2c
   116e8:	streq	r2, [r8, #36]	; 0x24
   116ec:	ldr	r2, [r4, #36]	; 0x24
   116f0:	str	sl, [r7, #4]
   116f4:	str	sl, [r7, #8]
   116f8:	sub	r3, r3, #1
   116fc:	cmp	r2, #0
   11700:	str	r3, [r8, #44]	; 0x2c
   11704:	movgt	r7, #0
   11708:	ble	11724 <rb_base64_encode@plt+0x85c>
   1170c:	ldr	r0, [r5], #4
   11710:	add	r7, r7, #1
   11714:	bl	10dc0 <rb_close@plt>
   11718:	ldr	r3, [r4, #36]	; 0x24
   1171c:	cmp	r3, r7
   11720:	bgt	1170c <rb_base64_encode@plt+0x844>
   11724:	ldr	r0, [r4, #12]
   11728:	cmp	r0, #0
   1172c:	beq	11734 <rb_base64_encode@plt+0x86c>
   11730:	bl	10d48 <free@plt>
   11734:	mov	r0, r4
   11738:	bl	10d48 <free@plt>
   1173c:	b	11688 <rb_base64_encode@plt+0x7c0>
   11740:	mov	r0, #0
   11744:	bl	10eb0 <exit@plt>
   11748:	ldr	r0, [r8, #16]
   1174c:	movw	r2, #5636	; 0x1604
   11750:	movt	r2, #1
   11754:	mov	r3, r8
   11758:	mov	r1, #2
   1175c:	add	sp, sp, #8
   11760:	ldrd	r4, [sp]
   11764:	ldrd	r6, [sp, #8]
   11768:	ldrd	r8, [sp, #16]
   1176c:	ldr	sl, [sp, #24]
   11770:	ldr	lr, [sp, #28]
   11774:	add	sp, sp, #32
   11778:	b	10cb8 <rb_setselect@plt>
   1177c:	str	r4, [sp, #-8]!
   11780:	subs	r4, r1, #0
   11784:	str	lr, [sp, #4]
   11788:	sub	sp, sp, #16384	; 0x4000
   1178c:	beq	117d8 <rb_base64_encode@plt+0x910>
   11790:	mov	r2, #16384	; 0x4000
   11794:	mov	r1, sp
   11798:	ldr	r0, [r4, #88]	; 0x58
   1179c:	bl	10d60 <rb_read@plt>
   117a0:	cmp	r0, #0
   117a4:	beq	117e8 <rb_base64_encode@plt+0x920>
   117a8:	bge	11790 <rb_base64_encode@plt+0x8c8>
   117ac:	bl	10ebc <__errno_location@plt>
   117b0:	ldr	r0, [r0]
   117b4:	bl	10ca0 <rb_ignore_errno@plt>
   117b8:	cmp	r0, #0
   117bc:	beq	117e8 <rb_base64_encode@plt+0x920>
   117c0:	movw	r2, #6012	; 0x177c
   117c4:	movt	r2, #1
   117c8:	ldr	r0, [r4, #88]	; 0x58
   117cc:	mov	r3, r4
   117d0:	mov	r1, #1
   117d4:	bl	10cb8 <rb_setselect@plt>
   117d8:	add	sp, sp, #16384	; 0x4000
   117dc:	ldr	r4, [sp]
   117e0:	add	sp, sp, #4
   117e4:	pop	{pc}		; (ldr pc, [sp], #4)
   117e8:	ldr	r0, [r4, #88]	; 0x58
   117ec:	bl	10dc0 <rb_close@plt>
   117f0:	movw	r3, #20728	; 0x50f8
   117f4:	movt	r3, #2
   117f8:	ldr	r2, [r3]
   117fc:	mov	r1, #0
   11800:	str	r4, [r4]
   11804:	cmp	r2, r1
   11808:	stmib	r4, {r1, r2}
   1180c:	strne	r4, [r2, #4]
   11810:	beq	11834 <rb_base64_encode@plt+0x96c>
   11814:	ldr	r2, [r3, #8]
   11818:	str	r4, [r3]
   1181c:	add	r2, r2, #1
   11820:	str	r2, [r3, #8]
   11824:	add	sp, sp, #16384	; 0x4000
   11828:	ldr	r4, [sp]
   1182c:	add	sp, sp, #4
   11830:	pop	{pc}		; (ldr pc, [sp], #4)
   11834:	ldr	r2, [r3, #4]
   11838:	cmp	r2, #0
   1183c:	streq	r4, [r3, #4]
   11840:	b	11814 <rb_base64_encode@plt+0x94c>
   11844:	push	{r2, r3}
   11848:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1184c:	strd	r6, [sp, #8]
   11850:	strd	r8, [sp, #16]
   11854:	str	sl, [sp, #24]
   11858:	str	lr, [sp, #28]
   1185c:	sub	sp, sp, #400	; 0x190
   11860:	ldrb	r3, [r0, #128]	; 0x80
   11864:	tst	r3, #2
   11868:	bne	11ad8 <rb_base64_encode@plt+0xc10>
   1186c:	tst	r3, #8
   11870:	mov	r4, r0
   11874:	mov	r5, r1
   11878:	bne	11afc <rb_base64_encode@plt+0xc34>
   1187c:	ldr	r0, [r4, #16]
   11880:	ldr	r1, [r4, #84]	; 0x54
   11884:	bl	10ea4 <rb_rawbuf_flush@plt>
   11888:	add	r1, r4, #24
   1188c:	ldr	r0, [r4, #88]	; 0x58
   11890:	bl	10d84 <rb_linebuf_flush@plt>
   11894:	ldr	r0, [r4, #84]	; 0x54
   11898:	bl	10dc0 <rb_close@plt>
   1189c:	movw	r3, #19923	; 0x4dd3
   118a0:	movt	r3, #4194	; 0x1062
   118a4:	ldrb	r2, [r4, #128]	; 0x80
   118a8:	mov	ip, #2000	; 0x7d0
   118ac:	ldr	r0, [r4, #80]	; 0x50
   118b0:	ldr	r1, [r4, #8]
   118b4:	orr	r2, r2, #2
   118b8:	umull	lr, r3, r3, r0
   118bc:	strb	r2, [r4, #128]	; 0x80
   118c0:	cmp	r1, #0
   118c4:	lsr	r3, r3, #7
   118c8:	mls	r3, ip, r3, r0
   118cc:	beq	11bac <rb_base64_encode@plt+0xce4>
   118d0:	ldr	r0, [r4, #4]
   118d4:	lsl	r2, r3, #1
   118d8:	movw	ip, #20748	; 0x510c
   118dc:	movt	ip, #2
   118e0:	str	r0, [r1, #4]
   118e4:	ldr	r0, [r4, #4]
   118e8:	cmp	r0, #0
   118ec:	eor	r5, r5, #1
   118f0:	addeq	r0, r2, r3
   118f4:	add	r3, r2, r3
   118f8:	strne	r1, [r0, #8]
   118fc:	mov	r6, #0
   11900:	streq	r1, [ip, r0, lsl #2]
   11904:	add	ip, ip, r3, lsl #2
   11908:	ldr	r3, [sp, #432]	; 0x1b0
   1190c:	ldr	r0, [r4, #88]	; 0x58
   11910:	cmp	r3, #0
   11914:	ldr	r3, [ip, #8]
   11918:	andne	r5, r5, #1
   1191c:	moveq	r5, #1
   11920:	str	r6, [r4, #4]
   11924:	cmp	r5, r6
   11928:	str	r6, [r4, #8]
   1192c:	sub	r3, r3, #1
   11930:	str	r3, [ip, #8]
   11934:	bne	11a98 <rb_base64_encode@plt+0xbd0>
   11938:	mov	r3, r4
   1193c:	mov	r1, #1
   11940:	movw	r2, #6012	; 0x177c
   11944:	movt	r2, #1
   11948:	bl	10cb8 <rb_setselect@plt>
   1194c:	mov	r3, r5
   11950:	mov	r2, r5
   11954:	ldr	r0, [r4, #88]	; 0x58
   11958:	mov	r1, #2
   1195c:	bl	10cb8 <rb_setselect@plt>
   11960:	add	r1, sp, #436	; 0x1b4
   11964:	add	r0, sp, #16
   11968:	ldr	r2, [sp, #432]	; 0x1b0
   1196c:	mov	r3, r1
   11970:	str	r1, [sp, #12]
   11974:	mov	r1, #128	; 0x80
   11978:	bl	10cdc <vsnprintf@plt>
   1197c:	ldr	r3, [r4, #80]	; 0x50
   11980:	mov	ip, #68	; 0x44
   11984:	add	r1, sp, #16
   11988:	mov	r2, #251	; 0xfb
   1198c:	add	r0, sp, #149	; 0x95
   11990:	strb	ip, [sp, #144]	; 0x90
   11994:	str	r3, [sp, #145]	; 0x91
   11998:	bl	10d30 <rb_strlcpy@plt>
   1199c:	add	r0, sp, #16
   119a0:	bl	10d90 <strlen@plt>
   119a4:	add	r7, r0, #6
   119a8:	mov	r1, #40	; 0x28
   119ac:	ldr	r6, [r4, #12]
   119b0:	mov	r0, #1
   119b4:	bl	10cf4 <calloc@plt>
   119b8:	subs	r4, r0, #0
   119bc:	beq	11bfc <rb_base64_encode@plt+0xd34>
   119c0:	mov	r1, r7
   119c4:	mov	r0, #1
   119c8:	bl	10cf4 <calloc@plt>
   119cc:	subs	r3, r0, #0
   119d0:	beq	11bfc <rb_base64_encode@plt+0xd34>
   119d4:	add	r1, sp, #144	; 0x90
   119d8:	mov	r2, r7
   119dc:	str	r3, [r4, #12]
   119e0:	str	r7, [r4, #16]
   119e4:	bl	10d9c <memcpy@plt>
   119e8:	cmn	r6, #36	; 0x24
   119ec:	str	r5, [r4, #36]	; 0x24
   119f0:	beq	11c00 <rb_base64_encode@plt+0xd38>
   119f4:	ldr	r3, [r6, #40]	; 0x28
   119f8:	str	r4, [r4]
   119fc:	cmp	r3, #0
   11a00:	stmib	r4, {r3, r5}
   11a04:	beq	11bd4 <rb_base64_encode@plt+0xd0c>
   11a08:	ldr	r5, [r6, #36]	; 0x24
   11a0c:	str	r4, [r3, #8]
   11a10:	ldr	r3, [r6, #44]	; 0x2c
   11a14:	cmp	r5, #0
   11a18:	str	r4, [r6, #40]	; 0x28
   11a1c:	add	r3, r3, #1
   11a20:	str	r3, [r6, #44]	; 0x2c
   11a24:	beq	11b08 <rb_base64_encode@plt+0xc40>
   11a28:	ldr	r8, [r5, #8]
   11a2c:	movw	r9, #20728	; 0x50f8
   11a30:	movt	r9, #2
   11a34:	mov	sl, #0
   11a38:	ldr	r4, [r5]
   11a3c:	ldr	ip, [r9, #12]
   11a40:	ldr	r0, [r6, #16]
   11a44:	add	r7, r4, #20
   11a48:	ldr	r3, [r4, #12]
   11a4c:	mov	r1, r7
   11a50:	ldr	r2, [r4, #36]	; 0x24
   11a54:	str	ip, [sp, #4]
   11a58:	ldr	ip, [r4, #16]
   11a5c:	str	ip, [sp]
   11a60:	bl	10cd0 <rb_send_fd_buf@plt>
   11a64:	cmp	r0, #0
   11a68:	bgt	11b2c <rb_base64_encode@plt+0xc64>
   11a6c:	beq	11bcc <rb_base64_encode@plt+0xd04>
   11a70:	bl	10ebc <__errno_location@plt>
   11a74:	ldr	r0, [r0]
   11a78:	bl	10ca0 <rb_ignore_errno@plt>
   11a7c:	cmp	r0, #0
   11a80:	beq	11bcc <rb_base64_encode@plt+0xd04>
   11a84:	cmp	r8, #0
   11a88:	beq	11b04 <rb_base64_encode@plt+0xc3c>
   11a8c:	mov	r5, r8
   11a90:	ldr	r8, [r8, #8]
   11a94:	b	11a38 <rb_base64_encode@plt+0xb70>
   11a98:	movw	r9, #20728	; 0x50f8
   11a9c:	movt	r9, #2
   11aa0:	bl	10dc0 <rb_close@plt>
   11aa4:	ldr	r3, [r9]
   11aa8:	stm	r4, {r4, r6}
   11aac:	cmp	r3, #0
   11ab0:	str	r3, [r4, #8]
   11ab4:	strne	r4, [r3, #4]
   11ab8:	bne	11ac8 <rb_base64_encode@plt+0xc00>
   11abc:	ldr	r3, [r9, #4]
   11ac0:	cmp	r3, #0
   11ac4:	streq	r4, [r9, #4]
   11ac8:	ldr	r3, [r9, #8]
   11acc:	str	r4, [r9]
   11ad0:	add	r3, r3, #1
   11ad4:	str	r3, [r9, #8]
   11ad8:	add	sp, sp, #400	; 0x190
   11adc:	ldrd	r4, [sp]
   11ae0:	ldrd	r6, [sp, #8]
   11ae4:	ldrd	r8, [sp, #16]
   11ae8:	ldr	sl, [sp, #24]
   11aec:	ldr	lr, [sp, #28]
   11af0:	add	sp, sp, #32
   11af4:	add	sp, sp, #8
   11af8:	bx	lr
   11afc:	bl	11fac <rb_base64_encode@plt+0x10e4>
   11b00:	b	1187c <rb_base64_encode@plt+0x9b4>
   11b04:	ldr	r3, [r6, #44]	; 0x2c
   11b08:	cmp	r3, #0
   11b0c:	beq	11ad8 <rb_base64_encode@plt+0xc10>
   11b10:	movw	r2, #5636	; 0x1604
   11b14:	movt	r2, #1
   11b18:	ldr	r0, [r6, #16]
   11b1c:	mov	r3, r6
   11b20:	mov	r1, #2
   11b24:	bl	10cb8 <rb_setselect@plt>
   11b28:	b	11ad8 <rb_base64_encode@plt+0xc10>
   11b2c:	ldr	r3, [r5, #4]
   11b30:	ldr	r2, [r5, #8]
   11b34:	cmp	r2, #0
   11b38:	strne	r3, [r2, #4]
   11b3c:	ldrne	r3, [r5, #4]
   11b40:	streq	r3, [r6, #40]	; 0x28
   11b44:	cmp	r3, #0
   11b48:	strne	r2, [r3, #8]
   11b4c:	ldr	r3, [r6, #44]	; 0x2c
   11b50:	streq	r2, [r6, #36]	; 0x24
   11b54:	ldr	r2, [r4, #36]	; 0x24
   11b58:	str	sl, [r5, #4]
   11b5c:	str	sl, [r5, #8]
   11b60:	sub	r3, r3, #1
   11b64:	cmp	r2, #0
   11b68:	str	r3, [r6, #44]	; 0x2c
   11b6c:	movgt	r5, r7
   11b70:	movgt	r7, #0
   11b74:	ble	11b90 <rb_base64_encode@plt+0xcc8>
   11b78:	ldr	r0, [r5], #4
   11b7c:	add	r7, r7, #1
   11b80:	bl	10dc0 <rb_close@plt>
   11b84:	ldr	r3, [r4, #36]	; 0x24
   11b88:	cmp	r7, r3
   11b8c:	blt	11b78 <rb_base64_encode@plt+0xcb0>
   11b90:	ldr	r0, [r4, #12]
   11b94:	cmp	r0, #0
   11b98:	beq	11ba0 <rb_base64_encode@plt+0xcd8>
   11b9c:	bl	10d48 <free@plt>
   11ba0:	mov	r0, r4
   11ba4:	bl	10d48 <free@plt>
   11ba8:	b	11a84 <rb_base64_encode@plt+0xbbc>
   11bac:	lsl	r2, r3, #1
   11bb0:	ldr	r0, [r4, #4]
   11bb4:	movw	ip, #20748	; 0x510c
   11bb8:	movt	ip, #2
   11bbc:	add	lr, r2, r3
   11bc0:	add	lr, ip, lr, lsl #2
   11bc4:	str	r0, [lr, #4]
   11bc8:	b	118e8 <rb_base64_encode@plt+0xa20>
   11bcc:	mov	r0, #0
   11bd0:	bl	10eb0 <exit@plt>
   11bd4:	ldr	r5, [r6, #36]	; 0x24
   11bd8:	cmp	r5, #0
   11bdc:	bne	11a10 <rb_base64_encode@plt+0xb48>
   11be0:	ldr	r3, [r6, #44]	; 0x2c
   11be4:	mov	r5, r4
   11be8:	str	r4, [r6, #36]	; 0x24
   11bec:	str	r4, [r6, #40]	; 0x28
   11bf0:	add	r3, r3, #1
   11bf4:	str	r3, [r6, #44]	; 0x2c
   11bf8:	b	11a28 <rb_base64_encode@plt+0xb60>
   11bfc:	bl	10e14 <rb_outofmemory@plt>
   11c00:	movw	r3, #17560	; 0x4498
   11c04:	movt	r3, #1
   11c08:	movw	r1, #17592	; 0x44b8
   11c0c:	movt	r1, #1
   11c10:	movw	r0, #17636	; 0x44e4
   11c14:	movt	r0, #1
   11c18:	mov	r2, #212	; 0xd4
   11c1c:	bl	10d18 <__assert_fail@plt>
   11c20:	ldrb	r3, [r1, #128]	; 0x80
   11c24:	tst	r3, #2
   11c28:	bxne	lr
   11c2c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11c30:	mov	r5, r0
   11c34:	mov	r4, r1
   11c38:	str	r6, [sp, #8]
   11c3c:	add	r6, r1, #24
   11c40:	strd	r8, [sp, #12]
   11c44:	str	lr, [sp, #20]
   11c48:	b	11c5c <rb_base64_encode@plt+0xd94>
   11c4c:	ldrd	r2, [r4, #120]	; 0x78
   11c50:	adds	r8, r2, r0
   11c54:	adc	r9, r3, r0, asr #31
   11c58:	strd	r8, [r4, #120]	; 0x78
   11c5c:	mov	r1, r6
   11c60:	mov	r0, r5
   11c64:	bl	10d84 <rb_linebuf_flush@plt>
   11c68:	cmp	r0, #0
   11c6c:	bgt	11c4c <rb_base64_encode@plt+0xd84>
   11c70:	beq	11cc8 <rb_base64_encode@plt+0xe00>
   11c74:	bl	10ebc <__errno_location@plt>
   11c78:	ldr	r0, [r0]
   11c7c:	bl	10ca0 <rb_ignore_errno@plt>
   11c80:	cmp	r0, #0
   11c84:	beq	11cc8 <rb_base64_encode@plt+0xe00>
   11c88:	ldr	r3, [r4, #40]	; 0x28
   11c8c:	ldr	r0, [r4, #88]	; 0x58
   11c90:	cmp	r3, #0
   11c94:	movle	r3, #0
   11c98:	movle	r2, r3
   11c9c:	ble	11cac <rb_base64_encode@plt+0xde4>
   11ca0:	movw	r2, #7200	; 0x1c20
   11ca4:	movt	r2, #1
   11ca8:	mov	r3, r4
   11cac:	mov	r1, #2
   11cb0:	ldrd	r4, [sp]
   11cb4:	ldr	r6, [sp, #8]
   11cb8:	ldrd	r8, [sp, #12]
   11cbc:	ldr	lr, [sp, #20]
   11cc0:	add	sp, sp, #24
   11cc4:	b	10cb8 <rb_setselect@plt>
   11cc8:	mov	r2, #0
   11ccc:	mov	r0, r4
   11cd0:	ldrd	r4, [sp]
   11cd4:	mov	r1, r2
   11cd8:	ldr	r6, [sp, #8]
   11cdc:	ldrd	r8, [sp, #12]
   11ce0:	ldr	lr, [sp, #20]
   11ce4:	add	sp, sp, #24
   11ce8:	b	11844 <rb_base64_encode@plt+0x97c>
   11cec:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11cf0:	mov	r2, #16384	; 0x4000
   11cf4:	mov	r4, r0
   11cf8:	strd	r6, [sp, #8]
   11cfc:	mov	r1, #0
   11d00:	str	r8, [sp, #16]
   11d04:	strd	sl, [sp, #20]
   11d08:	str	lr, [sp, #28]
   11d0c:	sub	sp, sp, #16384	; 0x4000
   11d10:	mov	r0, sp
   11d14:	bl	10d0c <memset@plt>
   11d18:	cmp	r4, #0
   11d1c:	beq	11d2c <rb_base64_encode@plt+0xe64>
   11d20:	ldrb	r3, [r4, #128]	; 0x80
   11d24:	ands	r5, r3, #2
   11d28:	beq	11d48 <rb_base64_encode@plt+0xe80>
   11d2c:	add	sp, sp, #16384	; 0x4000
   11d30:	ldrd	r4, [sp]
   11d34:	ldrd	r6, [sp, #8]
   11d38:	ldr	r8, [sp, #16]
   11d3c:	ldrd	sl, [sp, #20]
   11d40:	add	sp, sp, #28
   11d44:	pop	{pc}		; (ldr pc, [sp], #4)
   11d48:	ldr	r0, [r4, #16]
   11d4c:	bl	10de4 <rb_rawbuf_length@plt>
   11d50:	cmp	r0, #4096	; 0x1000
   11d54:	bge	11dc4 <rb_base64_encode@plt+0xefc>
   11d58:	add	r8, r4, #52	; 0x34
   11d5c:	ldrb	r3, [r4, #128]	; 0x80
   11d60:	mov	r2, #16384	; 0x4000
   11d64:	mov	r1, sp
   11d68:	ands	r5, r3, #2
   11d6c:	bne	11d2c <rb_base64_encode@plt+0xe64>
   11d70:	ldr	r0, [r4, #88]	; 0x58
   11d74:	bl	10d60 <rb_read@plt>
   11d78:	subs	ip, r0, #0
   11d7c:	mov	r3, r5
   11d80:	mov	r1, sp
   11d84:	mov	r0, r8
   11d88:	mov	r2, ip
   11d8c:	beq	11e4c <rb_base64_encode@plt+0xf84>
   11d90:	blt	11e08 <rb_base64_encode@plt+0xf40>
   11d94:	ldrd	r6, [r4, #112]	; 0x70
   11d98:	adds	sl, r6, ip
   11d9c:	adc	fp, r7, ip, asr #31
   11da0:	strd	sl, [r4, #112]	; 0x70
   11da4:	bl	10d24 <rb_linebuf_parse@plt>
   11da8:	ldrb	r3, [r4, #128]	; 0x80
   11dac:	ands	r5, r3, #2
   11db0:	bne	11d2c <rb_base64_encode@plt+0xe64>
   11db4:	ldr	r0, [r4, #16]
   11db8:	bl	10de4 <rb_rawbuf_length@plt>
   11dbc:	cmp	r0, #4096	; 0x1000
   11dc0:	blt	11d5c <rb_base64_encode@plt+0xe94>
   11dc4:	ldrb	ip, [r4, #128]	; 0x80
   11dc8:	mov	r1, #1
   11dcc:	mov	r3, r5
   11dd0:	mov	r2, r5
   11dd4:	ldr	r0, [r4, #88]	; 0x58
   11dd8:	orr	ip, ip, r1
   11ddc:	strb	ip, [r4, #128]	; 0x80
   11de0:	bl	10cb8 <rb_setselect@plt>
   11de4:	ldrb	r3, [r4, #128]	; 0x80
   11de8:	tst	r3, #8
   11dec:	beq	11d2c <rb_base64_encode@plt+0xe64>
   11df0:	tst	r3, #2
   11df4:	bne	11d2c <rb_base64_encode@plt+0xe64>
   11df8:	mov	r1, r4
   11dfc:	ldr	r0, [r4, #84]	; 0x54
   11e00:	bl	11e60 <rb_base64_encode@plt+0xf98>
   11e04:	b	11d2c <rb_base64_encode@plt+0xe64>
   11e08:	bl	10ebc <__errno_location@plt>
   11e0c:	ldr	r0, [r0]
   11e10:	bl	10ca0 <rb_ignore_errno@plt>
   11e14:	cmp	r0, #0
   11e18:	beq	11e4c <rb_base64_encode@plt+0xf84>
   11e1c:	mov	r3, r4
   11e20:	movw	r2, #10820	; 0x2a44
   11e24:	movt	r2, #1
   11e28:	mov	r1, #1
   11e2c:	ldr	r0, [r4, #88]	; 0x58
   11e30:	bl	10cb8 <rb_setselect@plt>
   11e34:	ldrb	r3, [r4, #128]	; 0x80
   11e38:	tst	r3, #8
   11e3c:	beq	11d2c <rb_base64_encode@plt+0xe64>
   11e40:	mov	r0, r4
   11e44:	bl	11fac <rb_base64_encode@plt+0x10e4>
   11e48:	b	11d2c <rb_base64_encode@plt+0xe64>
   11e4c:	mov	r2, #0
   11e50:	mov	r0, r4
   11e54:	mov	r1, r2
   11e58:	bl	11844 <rb_base64_encode@plt+0x97c>
   11e5c:	b	11d2c <rb_base64_encode@plt+0xe64>
   11e60:	strd	r4, [sp, #-16]!
   11e64:	mov	r4, r1
   11e68:	str	r6, [sp, #8]
   11e6c:	mov	r6, r0
   11e70:	str	lr, [sp, #12]
   11e74:	b	11e88 <rb_base64_encode@plt+0xfc0>
   11e78:	ldrd	r2, [r4, #96]	; 0x60
   11e7c:	adds	r0, r2, r5
   11e80:	adc	r1, r3, r5, asr #31
   11e84:	strd	r0, [r4, #96]	; 0x60
   11e88:	mov	r1, r6
   11e8c:	ldr	r0, [r4, #16]
   11e90:	bl	10ea4 <rb_rawbuf_flush@plt>
   11e94:	subs	r5, r0, #0
   11e98:	bgt	11e78 <rb_base64_encode@plt+0xfb0>
   11e9c:	bl	10ebc <__errno_location@plt>
   11ea0:	cmp	r5, #0
   11ea4:	mov	r6, r0
   11ea8:	bne	11ef8 <rb_base64_encode@plt+0x1030>
   11eac:	movw	r3, #17668	; 0x4504
   11eb0:	movt	r3, #1
   11eb4:	movw	r2, #17704	; 0x4528
   11eb8:	movt	r2, #1
   11ebc:	mov	r1, #1
   11ec0:	mov	r0, r4
   11ec4:	bl	11844 <rb_base64_encode@plt+0x97c>
   11ec8:	ldr	r0, [r6]
   11ecc:	bl	10c70 <strerror@plt>
   11ed0:	mov	r3, r0
   11ed4:	movw	r2, #17652	; 0x44f4
   11ed8:	movt	r2, #1
   11edc:	mov	r0, r4
   11ee0:	ldrd	r4, [sp]
   11ee4:	mov	r1, #1
   11ee8:	ldr	r6, [sp, #8]
   11eec:	ldr	lr, [sp, #12]
   11ef0:	add	sp, sp, #16
   11ef4:	b	11844 <rb_base64_encode@plt+0x97c>
   11ef8:	ldr	r0, [r0]
   11efc:	bl	10ca0 <rb_ignore_errno@plt>
   11f00:	cmp	r0, #0
   11f04:	beq	11ec8 <rb_base64_encode@plt+0x1000>
   11f08:	ldr	r0, [r4, #16]
   11f0c:	bl	10de4 <rb_rawbuf_length@plt>
   11f10:	cmp	r0, #0
   11f14:	ble	11f4c <rb_base64_encode@plt+0x1084>
   11f18:	movw	r2, #8088	; 0x1f98
   11f1c:	movt	r2, #1
   11f20:	ldr	r0, [r4, #84]	; 0x54
   11f24:	mov	r3, r4
   11f28:	mov	r1, #2
   11f2c:	bl	10cb8 <rb_setselect@plt>
   11f30:	ldrb	r3, [r4, #128]	; 0x80
   11f34:	tst	r3, #1
   11f38:	bne	11f64 <rb_base64_encode@plt+0x109c>
   11f3c:	ldrd	r4, [sp]
   11f40:	ldr	r6, [sp, #8]
   11f44:	add	sp, sp, #12
   11f48:	pop	{pc}		; (ldr pc, [sp], #4)
   11f4c:	mov	r3, #0
   11f50:	mov	r1, #2
   11f54:	ldr	r0, [r4, #84]	; 0x54
   11f58:	mov	r2, r3
   11f5c:	bl	10cb8 <rb_setselect@plt>
   11f60:	b	11f30 <rb_base64_encode@plt+0x1068>
   11f64:	ldr	r0, [r4, #16]
   11f68:	bl	10de4 <rb_rawbuf_length@plt>
   11f6c:	cmp	r0, #0
   11f70:	bne	11f3c <rb_base64_encode@plt+0x1074>
   11f74:	ldrb	r3, [r4, #128]	; 0x80
   11f78:	mov	r0, r4
   11f7c:	bic	r3, r3, #1
   11f80:	strb	r3, [r4, #128]	; 0x80
   11f84:	ldrd	r4, [sp]
   11f88:	ldr	r6, [sp, #8]
   11f8c:	ldr	lr, [sp, #12]
   11f90:	add	sp, sp, #16
   11f94:	b	11cec <rb_base64_encode@plt+0xe24>
   11f98:	ldrb	r3, [r1, #128]	; 0x80
   11f9c:	tst	r3, #2
   11fa0:	bne	11fa8 <rb_base64_encode@plt+0x10e0>
   11fa4:	b	11e60 <rb_base64_encode@plt+0xf98>
   11fa8:	bx	lr
   11fac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11fb0:	mov	r4, r0
   11fb4:	mov	r2, #16384	; 0x4000
   11fb8:	strd	r6, [sp, #8]
   11fbc:	mov	r1, #0
   11fc0:	add	r7, r4, #52	; 0x34
   11fc4:	str	r8, [sp, #16]
   11fc8:	mov	r6, #0
   11fcc:	movw	r8, #17708	; 0x452c
   11fd0:	movt	r8, #1
   11fd4:	str	lr, [sp, #20]
   11fd8:	sub	sp, sp, #16384	; 0x4000
   11fdc:	sub	sp, sp, #16
   11fe0:	add	r0, sp, #16
   11fe4:	bl	10d0c <memset@plt>
   11fe8:	mov	r3, #0
   11fec:	mov	r2, #16384	; 0x4000
   11ff0:	str	r6, [sp]
   11ff4:	add	r1, sp, #16
   11ff8:	mov	r0, r7
   11ffc:	bl	10d78 <rb_linebuf_get@plt>
   12000:	subs	r5, r0, #0
   12004:	beq	12098 <rb_base64_encode@plt+0x11d0>
   12008:	ldrb	r0, [r4, #128]	; 0x80
   1200c:	add	r3, r5, #2
   12010:	movw	ip, #32385	; 0x7e81
   12014:	rev16	r3, r3
   12018:	add	r1, sp, #12
   1201c:	mov	r2, #4
   12020:	tst	r0, #2
   12024:	bne	11fe8 <rb_base64_encode@plt+0x1120>
   12028:	cmp	r5, #122	; 0x7a
   1202c:	ldr	r0, [r4, #16]
   12030:	strhgt	ip, [sp, #12]
   12034:	strhgt	r3, [sp, #14]
   12038:	bgt	12058 <rb_base64_encode@plt+0x1190>
   1203c:	mvn	r1, #126	; 0x7e
   12040:	add	r3, r5, #2
   12044:	and	r3, r3, #127	; 0x7f
   12048:	mov	r2, #2
   1204c:	strb	r1, [sp, #12]
   12050:	add	r1, sp, #12
   12054:	strb	r3, [sp, #13]
   12058:	bl	10e98 <rb_rawbuf_append@plt>
   1205c:	ldrb	r3, [r4, #128]	; 0x80
   12060:	mov	r2, r5
   12064:	add	r1, sp, #16
   12068:	tst	r3, #2
   1206c:	bne	11fe8 <rb_base64_encode@plt+0x1120>
   12070:	ldr	r0, [r4, #16]
   12074:	bl	10e98 <rb_rawbuf_append@plt>
   12078:	ldrb	r3, [r4, #128]	; 0x80
   1207c:	mov	r2, #2
   12080:	mov	r1, r8
   12084:	ldr	r0, [r4, #16]
   12088:	tst	r3, #2
   1208c:	bne	11fe8 <rb_base64_encode@plt+0x1120>
   12090:	bl	10e98 <rb_rawbuf_append@plt>
   12094:	b	11fe8 <rb_base64_encode@plt+0x1120>
   12098:	ldrb	r3, [r4, #128]	; 0x80
   1209c:	tst	r3, #8
   120a0:	beq	120b8 <rb_base64_encode@plt+0x11f0>
   120a4:	tst	r3, #2
   120a8:	bne	120b8 <rb_base64_encode@plt+0x11f0>
   120ac:	mov	r1, r4
   120b0:	ldr	r0, [r4, #84]	; 0x54
   120b4:	bl	11e60 <rb_base64_encode@plt+0xf98>
   120b8:	add	sp, sp, #16384	; 0x4000
   120bc:	add	sp, sp, #16
   120c0:	ldrd	r4, [sp]
   120c4:	ldrd	r6, [sp, #8]
   120c8:	ldr	r8, [sp, #16]
   120cc:	add	sp, sp, #20
   120d0:	pop	{pc}		; (ldr pc, [sp], #4)
   120d4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   120d8:	mov	r2, #16384	; 0x4000
   120dc:	mov	r4, r1
   120e0:	strd	r6, [sp, #8]
   120e4:	mov	r1, #0
   120e8:	strd	r8, [sp, #16]
   120ec:	strd	sl, [sp, #24]
   120f0:	str	lr, [sp, #32]
   120f4:	sub	sp, sp, #32768	; 0x8000
   120f8:	sub	sp, sp, #140	; 0x8c
   120fc:	str	r0, [sp]
   12100:	add	r0, sp, #136	; 0x88
   12104:	bl	10d0c <memset@plt>
   12108:	cmp	r4, #0
   1210c:	beq	12400 <rb_base64_encode@plt+0x1538>
   12110:	ldrb	r3, [r4, #128]	; 0x80
   12114:	tst	r3, #2
   12118:	bne	12400 <rb_base64_encode@plt+0x1538>
   1211c:	movw	r3, #17732	; 0x4544
   12120:	movt	r3, #1
   12124:	str	r3, [sp, #4]
   12128:	movw	r3, #17752	; 0x4558
   1212c:	movt	r3, #1
   12130:	str	r3, [sp, #8]
   12134:	movw	r3, #17792	; 0x4580
   12138:	movt	r3, #1
   1213c:	str	r3, [sp, #12]
   12140:	mov	r2, #16384	; 0x4000
   12144:	add	r1, sp, #136	; 0x88
   12148:	ldr	r0, [sp]
   1214c:	bl	10d60 <rb_read@plt>
   12150:	subs	r7, r0, #0
   12154:	blt	12604 <rb_base64_encode@plt+0x173c>
   12158:	beq	125ec <rb_base64_encode@plt+0x1724>
   1215c:	add	r1, sp, #136	; 0x88
   12160:	mov	r2, r7
   12164:	ldr	r0, [r4, #20]
   12168:	bl	10e98 <rb_rawbuf_append@plt>
   1216c:	ldrb	r1, [r4, #128]	; 0x80
   12170:	ands	r1, r1, #8
   12174:	beq	12384 <rb_base64_encode@plt+0x14bc>
   12178:	movw	r8, #18024	; 0x4668
   1217c:	movt	r8, #1
   12180:	movw	sl, #17980	; 0x463c
   12184:	movt	sl, #1
   12188:	movw	r9, #17932	; 0x460c
   1218c:	movt	r9, #1
   12190:	mov	r2, #2
   12194:	add	r1, sp, #16
   12198:	ldr	r0, [r4, #20]
   1219c:	bl	10e20 <rb_rawbuf_get@plt>
   121a0:	cmp	r0, #2
   121a4:	mov	fp, r0
   121a8:	bne	12420 <rb_base64_encode@plt+0x1558>
   121ac:	ldrb	r6, [sp, #17]
   121b0:	and	r2, r6, #127	; 0x7f
   121b4:	lsr	r6, r6, #7
   121b8:	cmp	r2, #126	; 0x7e
   121bc:	strb	r2, [sp, #17]
   121c0:	beq	1227c <rb_base64_encode@plt+0x13b4>
   121c4:	cmp	r2, #127	; 0x7f
   121c8:	beq	12190 <rb_base64_encode@plt+0x12c8>
   121cc:	cmp	r6, #1
   121d0:	ldr	r0, [r4, #20]
   121d4:	bne	12250 <rb_base64_encode@plt+0x1388>
   121d8:	add	fp, sp, #40	; 0x28
   121dc:	mov	r2, #4
   121e0:	mov	r1, fp
   121e4:	bl	10e20 <rb_rawbuf_get@plt>
   121e8:	cmp	r0, #0
   121ec:	beq	12370 <rb_base64_encode@plt+0x14a8>
   121f0:	add	r5, sp, #16384	; 0x4000
   121f4:	ldrb	r2, [sp, #17]
   121f8:	add	r5, r5, #136	; 0x88
   121fc:	mov	r1, r5
   12200:	ldr	r0, [r4, #20]
   12204:	bl	10e20 <rb_rawbuf_get@plt>
   12208:	subs	r2, r0, #0
   1220c:	beq	12268 <rb_base64_encode@plt+0x13a0>
   12210:	movgt	r1, r5
   12214:	movgt	r3, #0
   12218:	ble	1223c <rb_base64_encode@plt+0x1374>
   1221c:	and	ip, r3, #3
   12220:	ldrb	r0, [r1]
   12224:	add	r3, r3, #1
   12228:	cmp	r3, r2
   1222c:	ldrb	ip, [fp, ip]
   12230:	eor	r0, r0, ip
   12234:	strb	r0, [r1], #1
   12238:	bne	1221c <rb_base64_encode@plt+0x1354>
   1223c:	mov	r1, r5
   12240:	mov	r3, #1
   12244:	add	r0, r4, #24
   12248:	bl	10d24 <rb_linebuf_parse@plt>
   1224c:	b	12190 <rb_base64_encode@plt+0x12c8>
   12250:	add	r5, sp, #16384	; 0x4000
   12254:	add	r5, r5, #136	; 0x88
   12258:	mov	r1, r5
   1225c:	bl	10e20 <rb_rawbuf_get@plt>
   12260:	subs	r2, r0, #0
   12264:	bne	1223c <rb_base64_encode@plt+0x1374>
   12268:	mov	r2, r8
   1226c:	mov	r1, #1
   12270:	mov	r0, r4
   12274:	bl	11844 <rb_base64_encode@plt+0x97c>
   12278:	b	12190 <rb_base64_encode@plt+0x12c8>
   1227c:	add	r5, sp, #16384	; 0x4000
   12280:	mov	r2, #16384	; 0x4000
   12284:	add	r5, r5, #136	; 0x88
   12288:	mov	r1, #0
   1228c:	mov	r0, r5
   12290:	bl	10d0c <memset@plt>
   12294:	mov	r2, fp
   12298:	add	r1, sp, #20
   1229c:	ldr	r0, [r4, #20]
   122a0:	bl	10e20 <rb_rawbuf_get@plt>
   122a4:	cmp	r0, #0
   122a8:	beq	1235c <rb_base64_encode@plt+0x1494>
   122ac:	ldrh	r3, [sp, #20]
   122b0:	cmp	r6, #1
   122b4:	ldr	r0, [r4, #20]
   122b8:	rev16	r3, r3
   122bc:	uxth	r2, r3
   122c0:	strh	r3, [sp, #20]
   122c4:	bne	12338 <rb_base64_encode@plt+0x1470>
   122c8:	add	fp, sp, #40	; 0x28
   122cc:	mov	r2, #4
   122d0:	mov	r1, fp
   122d4:	bl	10e20 <rb_rawbuf_get@plt>
   122d8:	cmp	r0, #0
   122dc:	beq	12370 <rb_base64_encode@plt+0x14a8>
   122e0:	ldrh	r2, [sp, #20]
   122e4:	mov	r1, r5
   122e8:	ldr	r0, [r4, #20]
   122ec:	bl	10e20 <rb_rawbuf_get@plt>
   122f0:	subs	r2, r0, #0
   122f4:	beq	12268 <rb_base64_encode@plt+0x13a0>
   122f8:	movgt	r1, r5
   122fc:	movgt	r3, #0
   12300:	ble	1223c <rb_base64_encode@plt+0x1374>
   12304:	and	ip, r3, #3
   12308:	ldrb	r0, [r1]
   1230c:	add	r3, r3, #1
   12310:	cmp	r3, r2
   12314:	ldrb	ip, [fp, ip]
   12318:	eor	r0, r0, ip
   1231c:	strb	r0, [r1], #1
   12320:	bne	12304 <rb_base64_encode@plt+0x143c>
   12324:	mov	r1, r5
   12328:	mov	r3, #1
   1232c:	add	r0, r4, #24
   12330:	bl	10d24 <rb_linebuf_parse@plt>
   12334:	b	12190 <rb_base64_encode@plt+0x12c8>
   12338:	mov	r1, r5
   1233c:	bl	10e20 <rb_rawbuf_get@plt>
   12340:	subs	r2, r0, #0
   12344:	beq	12268 <rb_base64_encode@plt+0x13a0>
   12348:	mov	r1, r5
   1234c:	mov	r3, #1
   12350:	add	r0, r4, #24
   12354:	bl	10d24 <rb_linebuf_parse@plt>
   12358:	b	12190 <rb_base64_encode@plt+0x12c8>
   1235c:	mov	r2, r9
   12360:	mov	r1, #1
   12364:	mov	r0, r4
   12368:	bl	11844 <rb_base64_encode@plt+0x97c>
   1236c:	b	12190 <rb_base64_encode@plt+0x12c8>
   12370:	mov	r1, r6
   12374:	mov	r2, sl
   12378:	mov	r0, r4
   1237c:	bl	11844 <rb_base64_encode@plt+0x97c>
   12380:	b	12190 <rb_base64_encode@plt+0x12c8>
   12384:	add	r5, sp, #16384	; 0x4000
   12388:	mov	r2, #16384	; 0x4000
   1238c:	add	r5, r5, #136	; 0x88
   12390:	mov	r6, r1
   12394:	mov	r0, r5
   12398:	bl	10d0c <memset@plt>
   1239c:	b	123b4 <rb_base64_encode@plt+0x14ec>
   123a0:	mov	r0, r5
   123a4:	ldr	r1, [sp, #4]
   123a8:	bl	10db4 <rb_strcasestr@plt>
   123ac:	cmp	r0, #0
   123b0:	bne	12450 <rb_base64_encode@plt+0x1588>
   123b4:	mov	r2, #16384	; 0x4000
   123b8:	mov	r1, r5
   123bc:	ldr	r0, [r4, #20]
   123c0:	bl	10e20 <rb_rawbuf_get@plt>
   123c4:	cmp	r0, #0
   123c8:	bne	123a0 <rb_base64_encode@plt+0x14d8>
   123cc:	ldrb	r3, [r4, #128]	; 0x80
   123d0:	tst	r3, #8
   123d4:	bne	12510 <rb_base64_encode@plt+0x1648>
   123d8:	tst	r3, #2
   123dc:	bne	123ec <rb_base64_encode@plt+0x1524>
   123e0:	mov	r1, r4
   123e4:	ldr	r0, [r4, #84]	; 0x54
   123e8:	bl	11e60 <rb_base64_encode@plt+0xf98>
   123ec:	cmp	r7, #16384	; 0x4000
   123f0:	blt	12434 <rb_base64_encode@plt+0x156c>
   123f4:	ldrb	r3, [r4, #128]	; 0x80
   123f8:	tst	r3, #2
   123fc:	beq	12140 <rb_base64_encode@plt+0x1278>
   12400:	add	sp, sp, #32768	; 0x8000
   12404:	add	sp, sp, #140	; 0x8c
   12408:	ldrd	r4, [sp]
   1240c:	ldrd	r6, [sp, #8]
   12410:	ldrd	r8, [sp, #16]
   12414:	ldrd	sl, [sp, #24]
   12418:	add	sp, sp, #32
   1241c:	pop	{pc}		; (ldr pc, [sp], #4)
   12420:	mov	r1, r4
   12424:	ldr	r0, [r4, #88]	; 0x58
   12428:	bl	11c20 <rb_base64_encode@plt+0xd58>
   1242c:	cmp	r7, #16384	; 0x4000
   12430:	bge	123f4 <rb_base64_encode@plt+0x152c>
   12434:	mov	r3, r4
   12438:	movw	r2, #8404	; 0x20d4
   1243c:	movt	r2, #1
   12440:	mov	r1, #1
   12444:	ldr	r0, [sp]
   12448:	bl	10cb8 <rb_setselect@plt>
   1244c:	b	12400 <rb_base64_encode@plt+0x1538>
   12450:	add	r3, sp, #32768	; 0x8000
   12454:	add	r1, r0, #18
   12458:	add	r3, r3, #136	; 0x88
   1245c:	cmp	r1, r3
   12460:	bcs	124b0 <rb_base64_encode@plt+0x15e8>
   12464:	ldrb	r3, [r0, #18]
   12468:	cmp	r3, #0
   1246c:	beq	124b0 <rb_base64_encode@plt+0x15e8>
   12470:	cmp	r3, #9
   12474:	cmpne	r3, #32
   12478:	bne	124cc <rb_base64_encode@plt+0x1604>
   1247c:	add	r2, sp, #32768	; 0x8000
   12480:	add	r0, r0, #19
   12484:	add	r2, r2, #136	; 0x88
   12488:	b	124a4 <rb_base64_encode@plt+0x15dc>
   1248c:	ldrb	r3, [r0], #1
   12490:	cmp	r3, #0
   12494:	beq	124b0 <rb_base64_encode@plt+0x15e8>
   12498:	cmp	r3, #32
   1249c:	cmpne	r3, #9
   124a0:	bne	124cc <rb_base64_encode@plt+0x1604>
   124a4:	cmp	r2, r0
   124a8:	mov	r1, r0
   124ac:	bne	1248c <rb_base64_encode@plt+0x15c4>
   124b0:	mov	r2, #37	; 0x25
   124b4:	add	r0, r4, #129	; 0x81
   124b8:	bl	10d30 <rb_strlcpy@plt>
   124bc:	ldrb	r3, [r4, #128]	; 0x80
   124c0:	orr	r3, r3, #8
   124c4:	strb	r3, [r4, #128]	; 0x80
   124c8:	b	123b4 <rb_base64_encode@plt+0x14ec>
   124cc:	cmp	r3, #10
   124d0:	cmpne	r3, #13
   124d4:	addne	r3, r1, #1
   124d8:	bne	124f8 <rb_base64_encode@plt+0x1630>
   124dc:	b	1257c <rb_base64_encode@plt+0x16b4>
   124e0:	ldrb	r2, [r3], #1
   124e4:	cmp	r2, #0
   124e8:	beq	124b0 <rb_base64_encode@plt+0x15e8>
   124ec:	cmp	r2, #10
   124f0:	cmpne	r2, #13
   124f4:	beq	12580 <rb_base64_encode@plt+0x16b8>
   124f8:	add	r2, sp, #32768	; 0x8000
   124fc:	mov	r0, r3
   12500:	add	r2, r2, #136	; 0x88
   12504:	cmp	r3, r2
   12508:	bcc	124e0 <rb_base64_encode@plt+0x1618>
   1250c:	b	124b0 <rb_base64_encode@plt+0x15e8>
   12510:	add	r5, r4, #129	; 0x81
   12514:	add	r0, sp, #40	; 0x28
   12518:	bl	140fc <rb_base64_encode@plt+0x3234>
   1251c:	mov	r0, r5
   12520:	bl	10d90 <strlen@plt>
   12524:	mov	r2, r0
   12528:	mov	r1, r5
   1252c:	add	r0, sp, #40	; 0x28
   12530:	bl	14160 <rb_base64_encode@plt+0x3298>
   12534:	mov	r2, #36	; 0x24
   12538:	add	r0, sp, #40	; 0x28
   1253c:	ldr	r1, [sp, #8]
   12540:	bl	14160 <rb_base64_encode@plt+0x3298>
   12544:	add	r0, sp, #40	; 0x28
   12548:	add	r1, sp, #20
   1254c:	bl	1423c <rb_base64_encode@plt+0x3374>
   12550:	add	r0, sp, #20
   12554:	mov	r1, #20
   12558:	bl	10ec8 <rb_base64_encode@plt>
   1255c:	ldrb	r3, [r4, #128]	; 0x80
   12560:	mov	r5, r0
   12564:	tst	r3, #2
   12568:	beq	12588 <rb_base64_encode@plt+0x16c0>
   1256c:	mov	r0, r5
   12570:	bl	10d48 <free@plt>
   12574:	ldrb	r3, [r4, #128]	; 0x80
   12578:	b	123d8 <rb_base64_encode@plt+0x1510>
   1257c:	mov	r0, r1
   12580:	strb	r6, [r0]
   12584:	b	124b0 <rb_base64_encode@plt+0x15e8>
   12588:	mov	r2, #129	; 0x81
   1258c:	ldr	r1, [sp, #12]
   12590:	ldr	r0, [r4, #16]
   12594:	bl	10e98 <rb_rawbuf_append@plt>
   12598:	mov	r0, r5
   1259c:	bl	10d90 <strlen@plt>
   125a0:	ldrb	r1, [r4, #128]	; 0x80
   125a4:	mov	r2, r0
   125a8:	ldr	r0, [r4, #16]
   125ac:	tst	r1, #2
   125b0:	bne	1256c <rb_base64_encode@plt+0x16a4>
   125b4:	mov	r1, r5
   125b8:	bl	10e98 <rb_rawbuf_append@plt>
   125bc:	ldrb	r3, [r4, #128]	; 0x80
   125c0:	ldr	r0, [r4, #16]
   125c4:	tst	r3, #2
   125c8:	bne	1256c <rb_base64_encode@plt+0x16a4>
   125cc:	mov	r2, #4
   125d0:	movw	r1, #17924	; 0x4604
   125d4:	movt	r1, #1
   125d8:	bl	10e98 <rb_rawbuf_append@plt>
   125dc:	mov	r0, r5
   125e0:	bl	10d48 <free@plt>
   125e4:	ldrb	r3, [r4, #128]	; 0x80
   125e8:	b	123d8 <rb_base64_encode@plt+0x1510>
   125ec:	mov	r0, r4
   125f0:	movw	r2, #17712	; 0x4530
   125f4:	movt	r2, #1
   125f8:	mov	r1, #0
   125fc:	bl	11844 <rb_base64_encode@plt+0x97c>
   12600:	b	12400 <rb_base64_encode@plt+0x1538>
   12604:	bl	10ebc <__errno_location@plt>
   12608:	ldr	r0, [r0]
   1260c:	bl	10ca0 <rb_ignore_errno@plt>
   12610:	cmp	r0, #0
   12614:	beq	125ec <rb_base64_encode@plt+0x1724>
   12618:	mov	r3, r4
   1261c:	mov	r1, #1
   12620:	ldr	r0, [sp]
   12624:	movw	r2, #8404	; 0x20d4
   12628:	movt	r2, #1
   1262c:	bl	10cb8 <rb_setselect@plt>
   12630:	mov	r1, r4
   12634:	ldr	r0, [r4, #88]	; 0x58
   12638:	bl	11c20 <rb_base64_encode@plt+0xd58>
   1263c:	b	12400 <rb_base64_encode@plt+0x1538>
   12640:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12644:	ldr	r4, [r0, #24]
   12648:	strd	r6, [sp, #8]
   1264c:	strd	r8, [sp, #16]
   12650:	strd	sl, [sp, #24]
   12654:	str	lr, [sp, #32]
   12658:	sub	sp, sp, #12
   1265c:	cmp	r4, #0
   12660:	beq	12764 <rb_base64_encode@plt+0x189c>
   12664:	ldr	r6, [r4, #8]
   12668:	movw	r9, #19923	; 0x4dd3
   1266c:	movt	r9, #4194	; 0x1062
   12670:	movw	r8, #20748	; 0x510c
   12674:	movt	r8, #2
   12678:	mov	r7, r0
   1267c:	ldr	r5, [r4]
   12680:	ldr	r0, [r5, #12]
   12684:	ldrb	r3, [r0]
   12688:	cmp	r3, #65	; 0x41
   1268c:	beq	126f4 <rb_base64_encode@plt+0x182c>
   12690:	mov	r2, r6
   12694:	ldr	r3, [r4, #4]
   12698:	cmp	r2, #0
   1269c:	beq	12740 <rb_base64_encode@plt+0x1878>
   126a0:	str	r3, [r2, #4]
   126a4:	ldr	r3, [r4, #4]
   126a8:	cmp	r3, #0
   126ac:	strne	r2, [r3, #8]
   126b0:	ldr	r3, [r7, #32]
   126b4:	streq	r2, [r7, #24]
   126b8:	mov	r2, #0
   126bc:	cmp	r0, r2
   126c0:	str	r2, [r4, #4]
   126c4:	str	r2, [r4, #8]
   126c8:	sub	r3, r3, #1
   126cc:	str	r3, [r7, #32]
   126d0:	beq	12754 <rb_base64_encode@plt+0x188c>
   126d4:	bl	10d48 <free@plt>
   126d8:	mov	r0, r5
   126dc:	bl	10d48 <free@plt>
   126e0:	cmp	r6, #0
   126e4:	beq	12764 <rb_base64_encode@plt+0x189c>
   126e8:	mov	r4, r6
   126ec:	ldr	r6, [r6, #8]
   126f0:	b	1267c <rb_base64_encode@plt+0x17b4>
   126f4:	ldr	r3, [r5, #36]	; 0x24
   126f8:	cmp	r3, #2
   126fc:	bne	12748 <rb_base64_encode@plt+0x1880>
   12700:	ldr	r3, [r5, #16]
   12704:	cmp	r3, #5
   12708:	beq	12780 <rb_base64_encode@plt+0x18b8>
   1270c:	add	fp, r5, #20
   12710:	mov	sl, #0
   12714:	ldr	r0, [fp], #4
   12718:	add	sl, sl, #1
   1271c:	bl	10dc0 <rb_close@plt>
   12720:	ldr	r3, [r5, #36]	; 0x24
   12724:	cmp	sl, r3
   12728:	blt	12714 <rb_base64_encode@plt+0x184c>
   1272c:	ldr	r2, [r4, #8]
   12730:	ldr	r0, [r5, #12]
   12734:	cmp	r2, #0
   12738:	ldr	r3, [r4, #4]
   1273c:	bne	126a0 <rb_base64_encode@plt+0x17d8>
   12740:	str	r3, [r7, #28]
   12744:	b	126a8 <rb_base64_encode@plt+0x17e0>
   12748:	cmp	r3, #0
   1274c:	bgt	1270c <rb_base64_encode@plt+0x1844>
   12750:	b	12690 <rb_base64_encode@plt+0x17c8>
   12754:	mov	r0, r5
   12758:	bl	10d48 <free@plt>
   1275c:	cmp	r6, #0
   12760:	bne	126e8 <rb_base64_encode@plt+0x1820>
   12764:	add	sp, sp, #12
   12768:	ldrd	r4, [sp]
   1276c:	ldrd	r6, [sp, #8]
   12770:	ldrd	r8, [sp, #16]
   12774:	ldrd	sl, [sp, #24]
   12778:	add	sp, sp, #32
   1277c:	pop	{pc}		; (ldr pc, [sp], #4)
   12780:	ldr	r3, [r5, #20]
   12784:	mov	r1, #168	; 0xa8
   12788:	mov	r0, #1
   1278c:	ldr	fp, [r5, #24]
   12790:	str	r3, [sp, #4]
   12794:	bl	10cf4 <calloc@plt>
   12798:	subs	sl, r0, #0
   1279c:	ldr	r3, [sp, #4]
   127a0:	beq	128d0 <rb_base64_encode@plt+0x1a08>
   127a4:	mvn	r2, #0
   127a8:	mov	r0, r3
   127ac:	str	r7, [sl, #12]
   127b0:	strd	r2, [sl, #80]	; 0x50
   127b4:	str	fp, [sl, #88]	; 0x58
   127b8:	bl	10d00 <rb_set_nb@plt>
   127bc:	mov	r0, fp
   127c0:	bl	10d00 <rb_set_nb@plt>
   127c4:	add	r0, sl, #52	; 0x34
   127c8:	bl	10e74 <rb_linebuf_newbuf@plt>
   127cc:	add	r0, sl, #24
   127d0:	bl	10e74 <rb_linebuf_newbuf@plt>
   127d4:	bl	10e44 <rb_new_rawbuffer@plt>
   127d8:	str	r0, [sl, #20]
   127dc:	bl	10e44 <rb_new_rawbuffer@plt>
   127e0:	ldr	r2, [r5, #12]
   127e4:	mov	r3, #0
   127e8:	mov	r1, #2000	; 0x7d0
   127ec:	str	r0, [sl, #16]
   127f0:	ldr	r2, [r2, #1]
   127f4:	str	sl, [sl]
   127f8:	str	r3, [sl, #4]
   127fc:	umull	r0, r3, r9, r2
   12800:	str	r2, [sl, #80]	; 0x50
   12804:	lsr	r3, r3, #7
   12808:	mls	r3, r1, r3, r2
   1280c:	lsl	r2, r3, #1
   12810:	add	r1, r2, r3
   12814:	ldr	r0, [r8, r1, lsl #2]
   12818:	add	r1, r8, r1, lsl #2
   1281c:	cmp	r0, #0
   12820:	str	r0, [sl, #8]
   12824:	strne	sl, [r0, #4]
   12828:	beq	128b0 <rb_base64_encode@plt+0x19e8>
   1282c:	add	r3, r2, r3
   12830:	ldrb	r2, [sl, #128]	; 0x80
   12834:	add	r1, r8, r3, lsl #2
   12838:	str	sl, [r8, r3, lsl #2]
   1283c:	ldr	r3, [r1, #8]
   12840:	orr	r2, r2, #4
   12844:	ldr	r0, [sl, #84]	; 0x54
   12848:	strb	r2, [sl, #128]	; 0x80
   1284c:	add	r3, r3, #1
   12850:	str	r3, [r1, #8]
   12854:	bl	10c7c <rb_get_type@plt>
   12858:	tst	r0, #64	; 0x40
   1285c:	bne	12890 <rb_base64_encode@plt+0x19c8>
   12860:	ldr	r0, [sl, #88]	; 0x58
   12864:	bl	10c7c <rb_get_type@plt>
   12868:	cmp	r0, #64	; 0x40
   1286c:	beq	128c0 <rb_base64_encode@plt+0x19f8>
   12870:	mov	r1, sl
   12874:	ldr	r0, [sl, #84]	; 0x54
   12878:	bl	120d4 <rb_base64_encode@plt+0x120c>
   1287c:	mov	r0, sl
   12880:	bl	11cec <rb_base64_encode@plt+0xe24>
   12884:	ldr	r2, [r4, #8]
   12888:	ldr	r0, [r5, #12]
   1288c:	b	12734 <rb_base64_encode@plt+0x186c>
   12890:	mov	r1, #4
   12894:	ldr	r0, [sl, #84]	; 0x54
   12898:	bl	10d6c <rb_set_type@plt>
   1289c:	ldr	r0, [sl, #88]	; 0x58
   128a0:	bl	10c7c <rb_get_type@plt>
   128a4:	cmp	r0, #64	; 0x40
   128a8:	bne	12870 <rb_base64_encode@plt+0x19a8>
   128ac:	b	128c0 <rb_base64_encode@plt+0x19f8>
   128b0:	ldr	r0, [r1, #4]
   128b4:	cmp	r0, #0
   128b8:	streq	sl, [r1, #4]
   128bc:	b	1282c <rb_base64_encode@plt+0x1964>
   128c0:	mov	r1, #4
   128c4:	ldr	r0, [sl, #88]	; 0x58
   128c8:	bl	10d6c <rb_set_type@plt>
   128cc:	b	12870 <rb_base64_encode@plt+0x19a8>
   128d0:	bl	10e14 <rb_outofmemory@plt>
   128d4:	strd	r4, [sp, #-20]!	; 0xffffffec
   128d8:	mov	r5, r1
   128dc:	strd	r6, [sp, #8]
   128e0:	mov	r7, #16384	; 0x4000
   128e4:	str	lr, [sp, #16]
   128e8:	sub	sp, sp, #12
   128ec:	mov	r1, #40	; 0x28
   128f0:	mov	r0, #1
   128f4:	bl	10cf4 <calloc@plt>
   128f8:	subs	r4, r0, #0
   128fc:	beq	1297c <rb_base64_encode@plt+0x1ab4>
   12900:	mov	r1, #16384	; 0x4000
   12904:	mov	r0, #1
   12908:	bl	10cf4 <calloc@plt>
   1290c:	cmp	r0, #0
   12910:	beq	1297c <rb_base64_encode@plt+0x1ab4>
   12914:	mov	ip, #4
   12918:	mov	r1, r0
   1291c:	str	r0, [r4, #12]
   12920:	add	r3, r4, #20
   12924:	mov	r2, #16384	; 0x4000
   12928:	str	r7, [r4, #16]
   1292c:	str	ip, [sp]
   12930:	ldr	r0, [r5, #16]
   12934:	bl	10e5c <rb_recv_fd_buf@plt>
   12938:	subs	r6, r0, #0
   1293c:	bgt	12980 <rb_base64_encode@plt+0x1ab8>
   12940:	ldr	r0, [r4, #12]
   12944:	cmp	r0, #0
   12948:	beq	12950 <rb_base64_encode@plt+0x1a88>
   1294c:	bl	10d48 <free@plt>
   12950:	mov	r0, r4
   12954:	bl	10d48 <free@plt>
   12958:	cmp	r6, #0
   1295c:	beq	12974 <rb_base64_encode@plt+0x1aac>
   12960:	bl	10ebc <__errno_location@plt>
   12964:	ldr	r0, [r0]
   12968:	bl	10ca0 <rb_ignore_errno@plt>
   1296c:	cmp	r0, #0
   12970:	bne	12a00 <rb_base64_encode@plt+0x1b38>
   12974:	mov	r0, #0
   12978:	bl	10eb0 <exit@plt>
   1297c:	bl	10e14 <rb_outofmemory@plt>
   12980:	ldr	r3, [r5, #28]
   12984:	mov	r2, #0
   12988:	str	r4, [r4]
   1298c:	cmp	r3, r2
   12990:	str	r3, [r4, #4]
   12994:	str	r2, [r4, #8]
   12998:	str	r6, [r4, #16]
   1299c:	strne	r4, [r3, #8]
   129a0:	beq	129f0 <rb_base64_encode@plt+0x1b28>
   129a4:	ldr	r2, [r5, #32]
   129a8:	str	r4, [r5, #28]
   129ac:	ldr	r3, [r4, #20]
   129b0:	add	r2, r2, #1
   129b4:	cmp	r3, #0
   129b8:	str	r2, [r5, #32]
   129bc:	beq	129e8 <rb_base64_encode@plt+0x1b20>
   129c0:	ldr	r3, [r4, #24]
   129c4:	cmp	r3, #0
   129c8:	beq	12a34 <rb_base64_encode@plt+0x1b6c>
   129cc:	ldr	r3, [r4, #28]
   129d0:	cmp	r3, #0
   129d4:	beq	12a3c <rb_base64_encode@plt+0x1b74>
   129d8:	ldr	r3, [r4, #32]
   129dc:	cmp	r3, #0
   129e0:	moveq	r3, #3
   129e4:	movne	r3, #4
   129e8:	str	r3, [r4, #36]	; 0x24
   129ec:	b	128ec <rb_base64_encode@plt+0x1a24>
   129f0:	ldr	r3, [r5, #24]
   129f4:	cmp	r3, #0
   129f8:	streq	r4, [r5, #24]
   129fc:	b	129a4 <rb_base64_encode@plt+0x1adc>
   12a00:	mov	r0, r5
   12a04:	bl	12640 <rb_base64_encode@plt+0x1778>
   12a08:	ldr	r0, [r5, #16]
   12a0c:	mov	r3, r5
   12a10:	movw	r2, #10452	; 0x28d4
   12a14:	movt	r2, #1
   12a18:	mov	r1, #1
   12a1c:	add	sp, sp, #12
   12a20:	ldrd	r4, [sp]
   12a24:	ldrd	r6, [sp, #8]
   12a28:	ldr	lr, [sp, #16]
   12a2c:	add	sp, sp, #20
   12a30:	b	10cb8 <rb_setselect@plt>
   12a34:	mov	r3, #1
   12a38:	b	129e8 <rb_base64_encode@plt+0x1b20>
   12a3c:	mov	r3, #2
   12a40:	b	129e8 <rb_base64_encode@plt+0x1b20>
   12a44:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12a48:	mov	r2, #16384	; 0x4000
   12a4c:	mov	r4, r1
   12a50:	strd	r6, [sp, #8]
   12a54:	mov	r1, #0
   12a58:	str	r8, [sp, #16]
   12a5c:	strd	sl, [sp, #20]
   12a60:	str	lr, [sp, #28]
   12a64:	sub	sp, sp, #16384	; 0x4000
   12a68:	mov	r0, sp
   12a6c:	bl	10d0c <memset@plt>
   12a70:	cmp	r4, #0
   12a74:	beq	12a84 <rb_base64_encode@plt+0x1bbc>
   12a78:	ldrb	r3, [r4, #128]	; 0x80
   12a7c:	ands	r5, r3, #2
   12a80:	beq	12aa0 <rb_base64_encode@plt+0x1bd8>
   12a84:	add	sp, sp, #16384	; 0x4000
   12a88:	ldrd	r4, [sp]
   12a8c:	ldrd	r6, [sp, #8]
   12a90:	ldr	r8, [sp, #16]
   12a94:	ldrd	sl, [sp, #20]
   12a98:	add	sp, sp, #28
   12a9c:	pop	{pc}		; (ldr pc, [sp], #4)
   12aa0:	ldr	r0, [r4, #16]
   12aa4:	bl	10de4 <rb_rawbuf_length@plt>
   12aa8:	cmp	r0, #4096	; 0x1000
   12aac:	bge	12b1c <rb_base64_encode@plt+0x1c54>
   12ab0:	add	r8, r4, #52	; 0x34
   12ab4:	ldrb	r3, [r4, #128]	; 0x80
   12ab8:	mov	r2, #16384	; 0x4000
   12abc:	mov	r1, sp
   12ac0:	ands	r5, r3, #2
   12ac4:	bne	12a84 <rb_base64_encode@plt+0x1bbc>
   12ac8:	ldr	r0, [r4, #88]	; 0x58
   12acc:	bl	10d60 <rb_read@plt>
   12ad0:	subs	ip, r0, #0
   12ad4:	mov	r3, r5
   12ad8:	mov	r1, sp
   12adc:	mov	r0, r8
   12ae0:	mov	r2, ip
   12ae4:	beq	12ba4 <rb_base64_encode@plt+0x1cdc>
   12ae8:	blt	12b60 <rb_base64_encode@plt+0x1c98>
   12aec:	ldrd	r6, [r4, #112]	; 0x70
   12af0:	adds	sl, r6, ip
   12af4:	adc	fp, r7, ip, asr #31
   12af8:	strd	sl, [r4, #112]	; 0x70
   12afc:	bl	10d24 <rb_linebuf_parse@plt>
   12b00:	ldrb	r3, [r4, #128]	; 0x80
   12b04:	ands	r5, r3, #2
   12b08:	bne	12a84 <rb_base64_encode@plt+0x1bbc>
   12b0c:	ldr	r0, [r4, #16]
   12b10:	bl	10de4 <rb_rawbuf_length@plt>
   12b14:	cmp	r0, #4096	; 0x1000
   12b18:	blt	12ab4 <rb_base64_encode@plt+0x1bec>
   12b1c:	ldrb	ip, [r4, #128]	; 0x80
   12b20:	mov	r1, #1
   12b24:	mov	r3, r5
   12b28:	mov	r2, r5
   12b2c:	ldr	r0, [r4, #88]	; 0x58
   12b30:	orr	ip, ip, r1
   12b34:	strb	ip, [r4, #128]	; 0x80
   12b38:	bl	10cb8 <rb_setselect@plt>
   12b3c:	ldrb	r3, [r4, #128]	; 0x80
   12b40:	tst	r3, #8
   12b44:	beq	12a84 <rb_base64_encode@plt+0x1bbc>
   12b48:	tst	r3, #2
   12b4c:	bne	12a84 <rb_base64_encode@plt+0x1bbc>
   12b50:	mov	r1, r4
   12b54:	ldr	r0, [r4, #84]	; 0x54
   12b58:	bl	11e60 <rb_base64_encode@plt+0xf98>
   12b5c:	b	12a84 <rb_base64_encode@plt+0x1bbc>
   12b60:	bl	10ebc <__errno_location@plt>
   12b64:	ldr	r0, [r0]
   12b68:	bl	10ca0 <rb_ignore_errno@plt>
   12b6c:	cmp	r0, #0
   12b70:	beq	12ba4 <rb_base64_encode@plt+0x1cdc>
   12b74:	mov	r3, r4
   12b78:	movw	r2, #10820	; 0x2a44
   12b7c:	movt	r2, #1
   12b80:	mov	r1, #1
   12b84:	ldr	r0, [r4, #88]	; 0x58
   12b88:	bl	10cb8 <rb_setselect@plt>
   12b8c:	ldrb	r3, [r4, #128]	; 0x80
   12b90:	tst	r3, #8
   12b94:	beq	12a84 <rb_base64_encode@plt+0x1bbc>
   12b98:	mov	r0, r4
   12b9c:	bl	11fac <rb_base64_encode@plt+0x10e4>
   12ba0:	b	12a84 <rb_base64_encode@plt+0x1bbc>
   12ba4:	mov	r2, #0
   12ba8:	mov	r0, r4
   12bac:	mov	r1, r2
   12bb0:	bl	11844 <rb_base64_encode@plt+0x97c>
   12bb4:	b	12a84 <rb_base64_encode@plt+0x1bbc>
   12bb8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12bbc:	movw	r3, #60321	; 0xeba1
   12bc0:	movt	r3, #28377	; 0x6ed9
   12bc4:	ldr	r4, [r0, #4]
   12bc8:	movw	r2, #31129	; 0x7999
   12bcc:	movt	r2, #23170	; 0x5a82
   12bd0:	strd	r6, [sp, #8]
   12bd4:	movw	ip, #48348	; 0xbcdc
   12bd8:	movt	ip, #36635	; 0x8f1b
   12bdc:	strd	r8, [sp, #16]
   12be0:	mov	r8, r2
   12be4:	strd	sl, [sp, #24]
   12be8:	str	lr, [sp, #32]
   12bec:	sub	sp, sp, #188	; 0xbc
   12bf0:	movw	lr, #49622	; 0xc1d6
   12bf4:	movt	lr, #51810	; 0xca62
   12bf8:	ror	fp, r4, #2
   12bfc:	ldr	r6, [r0]
   12c00:	stmib	sp, {r3, lr}
   12c04:	mov	lr, r4
   12c08:	mov	r4, r0
   12c0c:	ldr	sl, [r0, #8]
   12c10:	str	r2, [sp, #12]
   12c14:	ldr	r7, [r0, #12]
   12c18:	str	ip, [sp, #80]	; 0x50
   12c1c:	ldr	r0, [r0, #16]
   12c20:	str	lr, [sp, #100]	; 0x64
   12c24:	eor	r5, sl, fp
   12c28:	ldr	r9, [r1, #4]
   12c2c:	eor	ip, sl, r7
   12c30:	str	sl, [sp, #104]	; 0x68
   12c34:	and	ip, ip, lr
   12c38:	ldr	lr, [r1]
   12c3c:	mov	r3, r0
   12c40:	add	r0, sl, r2
   12c44:	mov	r2, r6
   12c48:	mov	r6, r7
   12c4c:	mov	r7, r3
   12c50:	eor	ip, ip, r6
   12c54:	and	r5, r5, r2
   12c58:	str	r4, [sp, #116]	; 0x74
   12c5c:	add	r4, fp, r8
   12c60:	str	r3, [sp, #112]	; 0x70
   12c64:	add	r8, r6, r8
   12c68:	eor	r5, r5, sl
   12c6c:	ldr	r3, [sp, #12]
   12c70:	ror	sl, r2, #2
   12c74:	add	r5, r5, r8
   12c78:	str	r6, [sp, #108]	; 0x6c
   12c7c:	mov	r6, r2
   12c80:	ldr	r8, [r1, #12]
   12c84:	str	r2, [sp, #96]	; 0x60
   12c88:	rev	r2, r9
   12c8c:	rev	r9, lr
   12c90:	add	r5, r5, r2
   12c94:	eor	lr, fp, sl
   12c98:	add	r7, r7, r3
   12c9c:	str	r2, [sp, #16]
   12ca0:	mov	r2, r9
   12ca4:	add	r7, r7, r6, ror #27
   12ca8:	ldr	r6, [r1, #8]
   12cac:	rev	r8, r8
   12cb0:	add	ip, ip, r7
   12cb4:	add	r7, sl, r3
   12cb8:	add	ip, r9, ip
   12cbc:	ldr	r9, [r1, #16]
   12cc0:	mov	r3, r8
   12cc4:	and	lr, lr, ip
   12cc8:	add	r5, r5, ip, ror #27
   12ccc:	add	r4, r4, r3
   12cd0:	rev	r6, r6
   12cd4:	eor	fp, fp, lr
   12cd8:	ror	ip, ip, #2
   12cdc:	add	r0, r0, r6
   12ce0:	ror	lr, r5, #2
   12ce4:	ldr	r8, [r1, #24]
   12ce8:	add	r0, fp, r0
   12cec:	str	r6, [sp, #20]
   12cf0:	eor	r6, sl, ip
   12cf4:	ldr	fp, [r1, #20]
   12cf8:	rev	r9, r9
   12cfc:	add	r0, r0, r5, ror #27
   12d00:	str	r3, [sp, #28]
   12d04:	mov	r3, r9
   12d08:	and	r6, r6, r5
   12d0c:	ldr	r9, [r1, #28]
   12d10:	add	r7, r7, r3
   12d14:	eor	r6, r6, sl
   12d18:	str	r3, [sp, #36]	; 0x24
   12d1c:	ror	sl, r0, #2
   12d20:	eor	r5, ip, lr
   12d24:	ldr	r3, [sp, #12]
   12d28:	add	r4, r6, r4
   12d2c:	and	r5, r5, r0
   12d30:	rev	fp, fp
   12d34:	add	r4, r4, r0, ror #27
   12d38:	eor	r5, r5, ip
   12d3c:	mov	r0, fp
   12d40:	eor	fp, lr, sl
   12d44:	add	r7, r5, r7
   12d48:	and	fp, fp, r4
   12d4c:	ldr	r5, [r1, #32]
   12d50:	str	r0, [sp, #56]	; 0x38
   12d54:	add	r6, r7, r4, ror #27
   12d58:	eor	fp, fp, lr
   12d5c:	add	r0, r0, r3
   12d60:	ror	r4, r4, #2
   12d64:	rev	r9, r9
   12d68:	add	ip, r0, ip
   12d6c:	ror	r7, r6, #2
   12d70:	add	ip, fp, ip
   12d74:	rev	fp, r8
   12d78:	eor	r8, sl, r4
   12d7c:	add	ip, ip, r6, ror #27
   12d80:	eor	r0, r4, r7
   12d84:	and	r6, r6, r8
   12d88:	str	fp, [sp, #64]	; 0x40
   12d8c:	add	fp, fp, r3
   12d90:	mov	r3, r9
   12d94:	ldr	r8, [r1, #36]	; 0x24
   12d98:	add	fp, fp, lr
   12d9c:	eor	lr, r6, sl
   12da0:	rev	r5, r5
   12da4:	ror	r6, ip, #2
   12da8:	add	r9, lr, fp
   12dac:	mov	lr, r3
   12db0:	str	r3, [sp, #68]	; 0x44
   12db4:	ldr	r3, [sp, #12]
   12db8:	add	r9, r9, ip, ror #27
   12dbc:	and	r0, r0, ip
   12dc0:	mov	ip, r5
   12dc4:	eor	r0, r0, r4
   12dc8:	rev	r8, r8
   12dcc:	ldr	fp, [r1, #40]	; 0x28
   12dd0:	ror	r5, r9, #2
   12dd4:	str	ip, [sp, #32]
   12dd8:	add	lr, lr, r3
   12ddc:	add	ip, ip, r3
   12de0:	mov	r3, r8
   12de4:	ldr	r8, [r1, #52]	; 0x34
   12de8:	add	lr, lr, sl
   12dec:	add	lr, r0, lr
   12df0:	eor	r0, r7, r6
   12df4:	ldr	sl, [r1, #44]	; 0x2c
   12df8:	and	r0, r0, r9
   12dfc:	add	lr, lr, r9, ror #27
   12e00:	add	ip, ip, r4
   12e04:	eor	r0, r0, r7
   12e08:	add	r0, r0, ip
   12e0c:	eor	ip, r6, r5
   12e10:	ror	r4, lr, #2
   12e14:	str	r8, [sp, #24]
   12e18:	mov	r8, r3
   12e1c:	rev	fp, fp
   12e20:	str	r3, [sp, #40]	; 0x28
   12e24:	and	ip, ip, lr
   12e28:	add	r0, r0, lr, ror #27
   12e2c:	ldr	r3, [sp, #12]
   12e30:	eor	ip, ip, r6
   12e34:	ldr	r9, [r1, #48]	; 0x30
   12e38:	ldr	lr, [r1, #56]	; 0x38
   12e3c:	add	r8, r8, r3
   12e40:	add	r7, r8, r7
   12e44:	mov	r8, fp
   12e48:	ldr	r1, [r1, #60]	; 0x3c
   12e4c:	eor	fp, r5, r4
   12e50:	add	ip, ip, r7
   12e54:	rev	r7, sl
   12e58:	add	ip, ip, r0, ror #27
   12e5c:	and	fp, fp, r0
   12e60:	ror	r0, r0, #2
   12e64:	str	r8, [sp, #44]	; 0x2c
   12e68:	add	r8, r8, r3
   12e6c:	eor	fp, fp, r5
   12e70:	add	r6, r8, r6
   12e74:	str	r7, [sp, #48]	; 0x30
   12e78:	add	r7, r7, r3
   12e7c:	add	r6, fp, r6
   12e80:	ror	sl, ip, #2
   12e84:	add	r5, r7, r5
   12e88:	eor	r7, r4, r0
   12e8c:	add	r6, r6, ip, ror #27
   12e90:	and	ip, ip, r7
   12e94:	rev	fp, r9
   12e98:	eor	r9, ip, r4
   12e9c:	eor	r8, r0, sl
   12ea0:	ror	r7, r6, #2
   12ea4:	add	r9, r9, r5
   12ea8:	ldr	r5, [sp, #24]
   12eac:	rev	r1, r1
   12eb0:	add	r9, r9, r6, ror #27
   12eb4:	and	r6, r6, r8
   12eb8:	str	fp, [sp, #52]	; 0x34
   12ebc:	add	fp, fp, r3
   12ec0:	eor	r8, sl, r7
   12ec4:	add	fp, fp, r4
   12ec8:	eor	r4, r6, r0
   12ecc:	add	r4, r4, fp
   12ed0:	and	r8, r8, r9
   12ed4:	rev	ip, r5
   12ed8:	add	r4, r4, r9, ror #27
   12edc:	eor	r8, r8, sl
   12ee0:	ror	r5, r9, #2
   12ee4:	ldr	r9, [sp, #20]
   12ee8:	add	fp, ip, r3
   12eec:	add	r0, fp, r0
   12ef0:	rev	lr, lr
   12ef4:	ror	fp, r4, #2
   12ef8:	add	r0, r8, r0
   12efc:	add	r6, lr, r3
   12f00:	add	r0, r0, r4, ror #27
   12f04:	add	sl, r6, sl
   12f08:	eor	r6, r7, r5
   12f0c:	and	r4, r4, r6
   12f10:	eor	r8, r2, r9
   12f14:	ldr	r2, [sp, #16]
   12f18:	eor	r4, r4, r7
   12f1c:	add	sl, r4, sl
   12f20:	ror	r6, r0, #2
   12f24:	ldr	r9, [sp, #32]
   12f28:	add	sl, sl, r0, ror #27
   12f2c:	eor	r4, fp, r6
   12f30:	and	r4, r4, sl
   12f34:	eor	r8, r8, r9
   12f38:	ldr	r9, [sp, #28]
   12f3c:	eor	r8, r8, ip
   12f40:	ror	r8, r8, #31
   12f44:	eor	r9, r2, r9
   12f48:	mov	r2, r1
   12f4c:	str	r8, [sp, #16]
   12f50:	add	r8, r1, r3
   12f54:	ldr	r1, [sp, #40]	; 0x28
   12f58:	add	r7, r8, r7
   12f5c:	ldr	r8, [sp, #16]
   12f60:	eor	r9, r9, r1
   12f64:	eor	r1, r5, fp
   12f68:	and	r1, r1, r0
   12f6c:	ldr	r0, [sp, #20]
   12f70:	eor	r9, r9, lr
   12f74:	eor	r1, r1, r5
   12f78:	ror	r9, r9, #31
   12f7c:	add	r8, r8, r3
   12f80:	add	r1, r1, r7
   12f84:	ldr	r7, [sp, #36]	; 0x24
   12f88:	add	r5, r8, r5
   12f8c:	add	r1, r1, sl, ror #27
   12f90:	eor	r8, r4, fp
   12f94:	str	r9, [sp, #24]
   12f98:	ror	r9, sl, #2
   12f9c:	add	r8, r8, r5
   12fa0:	ror	r4, r1, #2
   12fa4:	eor	r5, r6, r9
   12fa8:	add	r8, r8, r1, ror #27
   12fac:	eor	r7, r0, r7
   12fb0:	ldr	r0, [sp, #44]	; 0x2c
   12fb4:	and	r5, r5, r1
   12fb8:	eor	r5, r5, r6
   12fbc:	eor	r7, r7, r0
   12fc0:	ldr	r0, [sp, #28]
   12fc4:	eor	r7, r7, r2
   12fc8:	str	r2, [sp, #60]	; 0x3c
   12fcc:	ldr	r2, [sp, #24]
   12fd0:	ror	r7, r7, #31
   12fd4:	ldr	r1, [sp, #48]	; 0x30
   12fd8:	ldr	sl, [sp, #56]	; 0x38
   12fdc:	eor	sl, r0, sl
   12fe0:	add	r0, r2, r3
   12fe4:	add	r0, r0, fp
   12fe8:	eor	sl, sl, r1
   12fec:	ldr	r1, [sp, #36]	; 0x24
   12ff0:	add	r5, r5, r0
   12ff4:	mov	r3, r7
   12ff8:	ror	r7, r8, #2
   12ffc:	ldr	r0, [sp, #12]
   13000:	add	r5, r5, r8, ror #27
   13004:	ldr	fp, [sp, #64]	; 0x40
   13008:	add	r0, r3, r0
   1300c:	eor	r1, r1, fp
   13010:	ldr	fp, [sp, #16]
   13014:	eor	sl, sl, fp
   13018:	ldr	fp, [sp, #52]	; 0x34
   1301c:	ror	sl, sl, #31
   13020:	str	sl, [sp, #20]
   13024:	add	sl, r0, r6
   13028:	eor	r0, r9, r4
   1302c:	eor	r1, r1, fp
   13030:	and	r0, r0, r8
   13034:	ldr	r8, [sp, #56]	; 0x38
   13038:	eor	r1, r1, r2
   1303c:	mov	fp, r3
   13040:	ror	r1, r1, #31
   13044:	ldr	r2, [sp, #12]
   13048:	eor	r0, r0, r9
   1304c:	eor	r6, r4, r7
   13050:	add	r0, r0, sl
   13054:	ror	sl, r5, #2
   13058:	mov	r3, r1
   1305c:	ldr	r1, [sp, #68]	; 0x44
   13060:	add	r0, r0, r5, ror #27
   13064:	and	r6, r6, r5
   13068:	ldr	r5, [sp, #32]
   1306c:	eor	r6, r6, r4
   13070:	str	r3, [sp, #28]
   13074:	eor	r1, r8, r1
   13078:	ldr	r8, [sp, #20]
   1307c:	eor	r1, r1, ip
   13080:	eor	r1, r1, fp
   13084:	ror	r1, r1, #31
   13088:	add	r2, r8, r2
   1308c:	add	r2, r2, r9
   13090:	ldr	r9, [sp, #64]	; 0x40
   13094:	add	r2, r6, r2
   13098:	ror	r6, r0, #2
   1309c:	str	fp, [sp, #64]	; 0x40
   130a0:	add	r2, r2, r0, ror #27
   130a4:	eor	r8, r9, r5
   130a8:	mov	r9, r3
   130ac:	ldr	r3, [sp, #4]
   130b0:	eor	r5, r7, sl
   130b4:	eor	r8, r8, lr
   130b8:	eor	r0, r0, r5
   130bc:	ldr	r5, [sp, #68]	; 0x44
   130c0:	add	fp, r9, r3
   130c4:	ldr	r9, [sp, #40]	; 0x28
   130c8:	add	r4, fp, r4
   130cc:	add	r0, r0, r4
   130d0:	ldr	r4, [sp, #4]
   130d4:	eor	r9, r5, r9
   130d8:	ldr	r5, [sp, #20]
   130dc:	eor	fp, r8, r5
   130e0:	ror	r8, r2, #2
   130e4:	ror	r5, fp, #31
   130e8:	ldr	fp, [sp, #28]
   130ec:	mov	r3, r5
   130f0:	ldr	r5, [sp, #60]	; 0x3c
   130f4:	eor	r9, r9, r5
   130f8:	add	r5, r1, r4
   130fc:	add	r4, r0, r2, ror #27
   13100:	eor	r9, r9, fp
   13104:	add	r5, r5, r7
   13108:	ldr	fp, [sp, #16]
   1310c:	ror	r7, r9, #31
   13110:	eor	r0, sl, r6
   13114:	eor	r2, r2, r0
   13118:	ldr	r0, [sp, #32]
   1311c:	ror	r9, r4, #2
   13120:	add	r5, r2, r5
   13124:	mov	r2, r3
   13128:	str	r3, [sp, #32]
   1312c:	str	r7, [sp, #36]	; 0x24
   13130:	add	r5, r5, r4, ror #27
   13134:	ldr	r3, [sp, #4]
   13138:	ldr	r7, [sp, #44]	; 0x2c
   1313c:	add	r2, r2, r3
   13140:	add	r2, r2, sl
   13144:	eor	r7, r0, r7
   13148:	eor	r0, r6, r8
   1314c:	eor	r0, r0, r4
   13150:	eor	r7, r7, fp
   13154:	ldr	fp, [sp, #40]	; 0x28
   13158:	add	r0, r0, r2
   1315c:	eor	r7, r7, r1
   13160:	ldr	r2, [sp, #36]	; 0x24
   13164:	ror	r7, r7, #31
   13168:	add	r0, r0, r5, ror #27
   1316c:	ldr	sl, [sp, #48]	; 0x30
   13170:	eor	r4, fp, sl
   13174:	add	fp, r2, r3
   13178:	ror	sl, r5, #2
   1317c:	mov	r3, r7
   13180:	ldr	r7, [sp, #24]
   13184:	eor	r2, r8, r9
   13188:	eor	r2, r2, r5
   1318c:	add	r6, fp, r6
   13190:	ldr	r5, [sp, #52]	; 0x34
   13194:	add	r6, r2, r6
   13198:	str	r3, [sp, #40]	; 0x28
   1319c:	add	r6, r6, r0, ror #27
   131a0:	eor	r4, r4, r7
   131a4:	ldr	r7, [sp, #44]	; 0x2c
   131a8:	eor	fp, r7, r5
   131ac:	ldr	r7, [sp, #32]
   131b0:	mov	r5, r3
   131b4:	ldr	r3, [sp, #4]
   131b8:	eor	r4, r4, r7
   131bc:	ror	r7, r0, #2
   131c0:	ror	r2, r4, #31
   131c4:	eor	r4, r9, sl
   131c8:	add	r5, r5, r3
   131cc:	eor	r0, r0, r4
   131d0:	ldr	r4, [sp, #4]
   131d4:	add	r8, r5, r8
   131d8:	str	r2, [sp, #44]	; 0x2c
   131dc:	add	r8, r0, r8
   131e0:	ldr	r0, [sp, #44]	; 0x2c
   131e4:	add	r8, r8, r6, ror #27
   131e8:	ldr	r2, [sp, #64]	; 0x40
   131ec:	eor	fp, fp, r2
   131f0:	ldr	r2, [sp, #36]	; 0x24
   131f4:	eor	fp, fp, r2
   131f8:	ror	r5, fp, #31
   131fc:	ldr	fp, [sp, #48]	; 0x30
   13200:	mov	r3, r5
   13204:	ror	r5, r6, #2
   13208:	str	r3, [sp, #84]	; 0x54
   1320c:	eor	r2, fp, ip
   13210:	add	fp, r0, r4
   13214:	ldr	r0, [sp, #20]
   13218:	eor	r4, sl, r7
   1321c:	add	fp, fp, r9
   13220:	eor	r4, r4, r6
   13224:	ldr	r6, [sp, #40]	; 0x28
   13228:	add	r4, r4, fp
   1322c:	ldr	r9, [sp, #52]	; 0x34
   13230:	add	r4, r4, r8, ror #27
   13234:	eor	r2, r2, r0
   13238:	ror	r0, r8, #2
   1323c:	eor	r2, r2, r6
   13240:	ror	r6, r2, #31
   13244:	ldr	r2, [sp, #4]
   13248:	eor	r9, r9, lr
   1324c:	str	r6, [sp, #48]	; 0x30
   13250:	ldr	r6, [sp, #28]
   13254:	add	fp, r3, r2
   13258:	eor	r2, r7, r5
   1325c:	eor	r2, r2, r8
   13260:	ldr	r8, [sp, #44]	; 0x2c
   13264:	add	sl, fp, sl
   13268:	add	r2, r2, sl
   1326c:	mov	fp, r3
   13270:	add	r2, r2, r4, ror #27
   13274:	ldr	r3, [sp, #4]
   13278:	eor	r9, r9, r6
   1327c:	ror	r6, r4, #2
   13280:	eor	r9, r9, r8
   13284:	ldr	r8, [sp, #60]	; 0x3c
   13288:	ror	r9, r9, #31
   1328c:	mov	sl, r9
   13290:	ldr	r9, [sp, #48]	; 0x30
   13294:	eor	ip, ip, r8
   13298:	ldr	r8, [sp, #4]
   1329c:	eor	ip, ip, r1
   132a0:	str	sl, [sp, #52]	; 0x34
   132a4:	add	sl, sl, r3
   132a8:	eor	ip, ip, fp
   132ac:	ldr	fp, [sp, #16]
   132b0:	ror	ip, ip, #31
   132b4:	add	r8, r9, r8
   132b8:	eor	r9, r5, r0
   132bc:	eor	r9, r9, r4
   132c0:	add	r7, r8, r7
   132c4:	ldr	r8, [sp, #48]	; 0x30
   132c8:	add	r7, r9, r7
   132cc:	eor	lr, lr, fp
   132d0:	str	ip, [sp, #56]	; 0x38
   132d4:	add	r9, r7, r2, ror #27
   132d8:	ldr	r7, [sp, #32]
   132dc:	add	r5, sl, r5
   132e0:	eor	fp, r0, r6
   132e4:	ror	ip, r2, #2
   132e8:	ldr	sl, [sp, #24]
   132ec:	eor	r2, r2, fp
   132f0:	ror	r4, r9, #2
   132f4:	add	r5, r2, r5
   132f8:	ldr	r2, [sp, #4]
   132fc:	add	r5, r5, r9, ror #27
   13300:	eor	lr, lr, r7
   13304:	eor	lr, lr, r8
   13308:	ldr	fp, [sp, #36]	; 0x24
   1330c:	mov	r7, sl
   13310:	ldr	r8, [sp, #60]	; 0x3c
   13314:	eor	r7, r7, r8
   13318:	ror	r8, lr, #31
   1331c:	ldr	lr, [sp, #56]	; 0x38
   13320:	eor	r7, r7, fp
   13324:	ror	fp, r5, #2
   13328:	mov	r3, r8
   1332c:	str	r3, [sp, #60]	; 0x3c
   13330:	add	r8, lr, r2
   13334:	eor	lr, r6, ip
   13338:	ldr	r2, [sp, #16]
   1333c:	eor	r9, r9, lr
   13340:	add	r0, r8, r0
   13344:	ldr	lr, [sp, #52]	; 0x34
   13348:	add	r9, r9, r0
   1334c:	mov	r0, r3
   13350:	add	r9, r9, r5, ror #27
   13354:	ldr	r3, [sp, #4]
   13358:	ldr	r8, [sp, #64]	; 0x40
   1335c:	eor	r7, r7, lr
   13360:	ldr	lr, [sp, #56]	; 0x38
   13364:	add	r0, r0, r3
   13368:	add	r6, r0, r6
   1336c:	eor	r8, r2, r8
   13370:	ror	r2, r7, #31
   13374:	str	r2, [sp, #12]
   13378:	ldr	r2, [sp, #40]	; 0x28
   1337c:	eor	r8, r8, r2
   13380:	eor	r2, ip, r4
   13384:	eor	r8, r8, lr
   13388:	eor	r5, r5, r2
   1338c:	ldr	r2, [sp, #4]
   13390:	ror	r0, r8, #31
   13394:	add	r6, r5, r6
   13398:	ldr	r5, [sp, #12]
   1339c:	add	r6, r6, r9, ror #27
   133a0:	mov	r3, r0
   133a4:	ldr	r0, [sp, #20]
   133a8:	ldr	r8, [sp, #44]	; 0x2c
   133ac:	add	lr, r5, r2
   133b0:	eor	r2, r4, fp
   133b4:	eor	r2, r2, r9
   133b8:	add	ip, lr, ip
   133bc:	ldr	lr, [sp, #4]
   133c0:	eor	r7, sl, r0
   133c4:	ror	r0, r9, #2
   133c8:	add	ip, r2, ip
   133cc:	ldr	r9, [sp, #60]	; 0x3c
   133d0:	add	ip, ip, r6, ror #27
   133d4:	eor	r5, r7, r8
   133d8:	ror	r8, r6, #2
   133dc:	ldr	r7, [sp, #64]	; 0x40
   133e0:	eor	r5, r5, r9
   133e4:	ldr	r9, [sp, #28]
   133e8:	ror	sl, r5, #31
   133ec:	eor	r5, fp, r0
   133f0:	eor	r6, r6, r5
   133f4:	ldr	r5, [sp, #12]
   133f8:	mov	r2, sl
   133fc:	add	sl, r3, lr
   13400:	add	r4, sl, r4
   13404:	eor	r7, r7, r9
   13408:	ldr	r9, [sp, #84]	; 0x54
   1340c:	add	r4, r6, r4
   13410:	add	r4, r4, ip, ror #27
   13414:	eor	r7, r7, r9
   13418:	ror	r9, ip, #2
   1341c:	eor	r7, r7, r5
   13420:	ldr	r5, [sp, #20]
   13424:	ror	r6, r7, #31
   13428:	ldr	r7, [sp, #32]
   1342c:	str	r6, [sp, #64]	; 0x40
   13430:	ldr	r6, [sp, #48]	; 0x30
   13434:	eor	sl, r5, r1
   13438:	ldr	r5, [sp, #4]
   1343c:	eor	sl, sl, r6
   13440:	mov	r6, r2
   13444:	eor	sl, sl, r3
   13448:	eor	r2, r0, r8
   1344c:	ror	sl, sl, #31
   13450:	eor	ip, ip, r2
   13454:	ldr	r2, [sp, #28]
   13458:	add	lr, r6, lr
   1345c:	add	fp, lr, fp
   13460:	ror	lr, r4, #2
   13464:	str	sl, [sp, #68]	; 0x44
   13468:	add	ip, ip, fp
   1346c:	ldr	sl, [sp, #64]	; 0x40
   13470:	add	ip, ip, r4, ror #27
   13474:	eor	r2, r2, r7
   13478:	eor	r7, r8, r9
   1347c:	eor	r4, r4, r7
   13480:	add	r5, sl, r5
   13484:	ldr	sl, [sp, #52]	; 0x34
   13488:	add	r0, r5, r0
   1348c:	str	r6, [sp, #88]	; 0x58
   13490:	add	r0, r4, r0
   13494:	ldr	r7, [sp, #36]	; 0x24
   13498:	add	r0, r0, ip, ror #27
   1349c:	eor	r2, r2, sl
   134a0:	ror	r5, r0, #2
   134a4:	eor	r2, r2, r6
   134a8:	ror	r6, ip, #2
   134ac:	ror	fp, r2, #31
   134b0:	ldr	r2, [sp, #4]
   134b4:	eor	r1, r1, r7
   134b8:	mov	r4, fp
   134bc:	ldr	fp, [sp, #68]	; 0x44
   134c0:	add	sl, fp, r2
   134c4:	ldr	fp, [sp, #56]	; 0x38
   134c8:	eor	r2, r9, lr
   134cc:	eor	ip, ip, r2
   134d0:	add	r8, sl, r8
   134d4:	ldr	r2, [sp, #32]
   134d8:	add	ip, ip, r8
   134dc:	mov	r8, r4
   134e0:	eor	r4, lr, r6
   134e4:	add	ip, ip, r0, ror #27
   134e8:	str	r3, [sp, #32]
   134ec:	eor	r0, r0, r4
   134f0:	str	r8, [sp, #92]	; 0x5c
   134f4:	eor	r1, r1, fp
   134f8:	ldr	fp, [sp, #64]	; 0x40
   134fc:	eor	r1, r1, fp
   13500:	ldr	fp, [sp, #40]	; 0x28
   13504:	ror	r1, r1, #31
   13508:	mov	sl, r1
   1350c:	ldr	r1, [sp, #68]	; 0x44
   13510:	eor	fp, r2, fp
   13514:	ldr	r2, [sp, #60]	; 0x3c
   13518:	eor	fp, fp, r2
   1351c:	ldr	r2, [sp, #4]
   13520:	eor	fp, fp, r1
   13524:	ror	r1, fp, #31
   13528:	ldr	fp, [sp, #44]	; 0x2c
   1352c:	str	sl, [sp, #44]	; 0x2c
   13530:	mov	r4, r1
   13534:	ror	r1, ip, #2
   13538:	add	r2, r8, r2
   1353c:	add	r2, r2, r9
   13540:	str	r4, [sp, #72]	; 0x48
   13544:	add	r2, r0, r2
   13548:	eor	r9, r7, fp
   1354c:	ldr	r7, [sp, #4]
   13550:	add	r0, r2, ip, ror #27
   13554:	ldr	r2, [sp, #12]
   13558:	add	r7, sl, r7
   1355c:	eor	sl, r6, r5
   13560:	eor	ip, ip, sl
   13564:	add	lr, r7, lr
   13568:	ldr	r7, [sp, #40]	; 0x28
   1356c:	eor	r9, r9, r2
   13570:	add	lr, ip, lr
   13574:	eor	r9, r9, r8
   13578:	ldr	r2, [sp, #4]
   1357c:	ror	r8, r0, #2
   13580:	ror	ip, r9, #31
   13584:	ldr	r9, [sp, #84]	; 0x54
   13588:	add	lr, lr, r0, ror #27
   1358c:	str	ip, [sp, #76]	; 0x4c
   13590:	ror	sl, lr, #2
   13594:	add	r4, r4, r2
   13598:	eor	r2, r5, r1
   1359c:	eor	r2, r2, r0
   135a0:	mov	r0, r3
   135a4:	ldr	r3, [sp, #4]
   135a8:	eor	r7, r7, r9
   135ac:	add	r6, r4, r6
   135b0:	eor	r7, r7, r0
   135b4:	ldr	r0, [sp, #44]	; 0x2c
   135b8:	add	r2, r2, r6
   135bc:	add	r2, r2, lr, ror #27
   135c0:	ldr	r6, [sp, #48]	; 0x30
   135c4:	add	r3, ip, r3
   135c8:	eor	ip, r1, r8
   135cc:	add	r3, r3, r5
   135d0:	eor	lr, lr, ip
   135d4:	ldr	ip, [sp, #80]	; 0x50
   135d8:	eor	r7, r7, r0
   135dc:	add	lr, lr, r3
   135e0:	ror	r0, r2, #2
   135e4:	ror	r7, r7, #31
   135e8:	ldr	r3, [sp, #72]	; 0x48
   135ec:	orr	r9, r2, sl
   135f0:	eor	r4, fp, r6
   135f4:	add	lr, lr, r2, ror #27
   135f8:	and	r9, r9, r8
   135fc:	and	r2, r2, sl
   13600:	str	r7, [sp, #4]
   13604:	orr	r9, r9, r2
   13608:	ldr	r5, [sp, #4]
   1360c:	ldr	r7, [sp, #88]	; 0x58
   13610:	eor	r4, r4, r7
   13614:	eor	r7, r4, r3
   13618:	add	r3, r5, ip
   1361c:	ldr	r5, [sp, #84]	; 0x54
   13620:	ror	r7, r7, #31
   13624:	add	r1, r3, r1
   13628:	mov	r3, ip
   1362c:	add	r9, r9, r1
   13630:	orr	r4, lr, r0
   13634:	add	r9, r9, lr, ror #27
   13638:	and	r4, r4, sl
   1363c:	str	r7, [sp, #48]	; 0x30
   13640:	ldr	r7, [sp, #52]	; 0x34
   13644:	eor	fp, r5, r7
   13648:	ldr	r5, [sp, #64]	; 0x40
   1364c:	ror	r7, lr, #2
   13650:	and	lr, lr, r0
   13654:	ldr	r1, [sp, #76]	; 0x4c
   13658:	orr	r4, r4, lr
   1365c:	eor	fp, fp, r5
   13660:	ror	r5, r9, #2
   13664:	eor	fp, fp, r1
   13668:	ldr	r1, [sp, #48]	; 0x30
   1366c:	ror	ip, fp, #31
   13670:	ldr	fp, [sp, #56]	; 0x38
   13674:	str	ip, [sp, #16]
   13678:	orr	ip, r9, r7
   1367c:	add	r1, r1, r3
   13680:	and	ip, ip, r0
   13684:	ldr	lr, [sp, #16]
   13688:	add	r8, r1, r8
   1368c:	ldr	r1, [sp, #68]	; 0x44
   13690:	eor	r2, r6, fp
   13694:	add	r4, r4, r8
   13698:	add	r4, r4, r9, ror #27
   1369c:	ldr	r6, [sp, #4]
   136a0:	eor	r2, r2, r1
   136a4:	mov	r1, r3
   136a8:	ror	r3, r4, #2
   136ac:	add	r8, lr, r1
   136b0:	eor	r6, r2, r6
   136b4:	and	r2, r9, r7
   136b8:	ror	r9, r6, #31
   136bc:	ldr	r6, [sp, #60]	; 0x3c
   136c0:	orr	r2, ip, r2
   136c4:	add	sl, r8, sl
   136c8:	mov	r8, r1
   136cc:	ldr	r1, [sp, #12]
   136d0:	add	r2, r2, sl
   136d4:	str	r9, [sp, #20]
   136d8:	add	r2, r2, r4, ror #27
   136dc:	ldr	ip, [sp, #92]	; 0x5c
   136e0:	ldr	r9, [sp, #52]	; 0x34
   136e4:	ldr	sl, [sp, #20]
   136e8:	eor	r9, r9, r6
   136ec:	orr	r6, r4, r5
   136f0:	eor	r9, r9, ip
   136f4:	ldr	ip, [sp, #48]	; 0x30
   136f8:	and	r6, r6, r7
   136fc:	and	r4, r4, r5
   13700:	add	sl, sl, r8
   13704:	orr	r4, r6, r4
   13708:	mov	r6, r8
   1370c:	ldr	r8, [sp, #60]	; 0x3c
   13710:	add	r0, sl, r0
   13714:	add	r0, r4, r0
   13718:	ldr	sl, [sp, #20]
   1371c:	eor	r9, r9, ip
   13720:	eor	ip, fp, r1
   13724:	add	r0, r0, r2, ror #27
   13728:	ldr	fp, [sp, #44]	; 0x2c
   1372c:	ror	r9, r9, #31
   13730:	orr	r1, r2, r3
   13734:	and	r1, r1, r5
   13738:	str	r9, [sp, #24]
   1373c:	ror	r9, r2, #2
   13740:	and	r2, r2, r3
   13744:	orr	r2, r1, r2
   13748:	eor	ip, ip, fp
   1374c:	ldr	fp, [sp, #24]
   13750:	eor	lr, ip, lr
   13754:	ror	lr, lr, #31
   13758:	add	ip, fp, r6
   1375c:	ldr	fp, [sp, #32]
   13760:	add	r7, ip, r7
   13764:	str	lr, [sp, #28]
   13768:	ldr	ip, [sp, #72]	; 0x48
   1376c:	eor	lr, r8, fp
   13770:	orr	r8, r0, r9
   13774:	ror	fp, r0, #2
   13778:	and	r8, r8, r3
   1377c:	eor	lr, lr, ip
   13780:	add	ip, r2, r7
   13784:	ldr	r2, [sp, #28]
   13788:	eor	r4, lr, sl
   1378c:	add	ip, ip, r0, ror #27
   13790:	and	r0, r0, r9
   13794:	ror	r7, r4, #31
   13798:	orr	r0, r8, r0
   1379c:	orr	lr, ip, fp
   137a0:	ror	sl, ip, #2
   137a4:	mov	r4, r7
   137a8:	ldr	r7, [sp, #88]	; 0x58
   137ac:	and	lr, lr, r9
   137b0:	add	r1, r2, r6
   137b4:	ldr	r2, [sp, #12]
   137b8:	add	r5, r1, r5
   137bc:	add	r0, r0, r5
   137c0:	str	r4, [sp, #52]	; 0x34
   137c4:	ldr	r5, [sp, #24]
   137c8:	add	r0, r0, ip, ror #27
   137cc:	and	ip, ip, fp
   137d0:	orr	ip, lr, ip
   137d4:	mov	lr, r6
   137d8:	eor	r7, r2, r7
   137dc:	ldr	r2, [sp, #76]	; 0x4c
   137e0:	eor	r2, r7, r2
   137e4:	ldr	r7, [sp, #64]	; 0x40
   137e8:	eor	r2, r2, r5
   137ec:	add	r5, r4, r6
   137f0:	ror	r4, r0, #2
   137f4:	ror	r6, r2, #31
   137f8:	ldr	r2, [sp, #32]
   137fc:	add	r3, r5, r3
   13800:	add	r3, ip, r3
   13804:	add	r3, r3, r0, ror #27
   13808:	str	r6, [sp, #12]
   1380c:	ldr	r5, [sp, #4]
   13810:	eor	r8, r2, r7
   13814:	orr	r2, r0, sl
   13818:	ldr	r6, [sp, #28]
   1381c:	and	r2, r2, fp
   13820:	and	r0, r0, sl
   13824:	orr	r0, r2, r0
   13828:	ldr	r2, [sp, #48]	; 0x30
   1382c:	eor	r8, r8, r5
   13830:	ldr	r1, [sp, #88]	; 0x58
   13834:	eor	r8, r8, r6
   13838:	ldr	r6, [sp, #12]
   1383c:	ror	r5, r8, #31
   13840:	ldr	r8, [sp, #68]	; 0x44
   13844:	str	r5, [sp, #32]
   13848:	add	ip, r6, lr
   1384c:	ror	r6, r3, #2
   13850:	add	r9, ip, r9
   13854:	mov	ip, lr
   13858:	add	r9, r0, r9
   1385c:	ldr	r0, [sp, #52]	; 0x34
   13860:	eor	r5, r1, r8
   13864:	eor	r5, r5, r2
   13868:	orr	r1, r3, r4
   1386c:	add	r9, r9, r3, ror #27
   13870:	and	r1, r1, sl
   13874:	and	r3, r3, r4
   13878:	orr	r3, r1, r3
   1387c:	ldr	r1, [sp, #12]
   13880:	ror	lr, r9, #2
   13884:	eor	r5, r5, r0
   13888:	ldr	r0, [sp, #32]
   1388c:	add	r2, r0, ip
   13890:	ror	r0, r5, #31
   13894:	ldr	r5, [sp, #92]	; 0x5c
   13898:	add	fp, r2, fp
   1389c:	add	fp, r3, fp
   138a0:	orr	r3, r9, r6
   138a4:	ldr	r2, [sp, #44]	; 0x2c
   138a8:	str	r0, [sp, #36]	; 0x24
   138ac:	add	fp, fp, r9, ror #27
   138b0:	and	r3, r3, r4
   138b4:	ldr	r0, [sp, #16]
   138b8:	and	r9, r9, r6
   138bc:	eor	r7, r7, r5
   138c0:	eor	r2, r8, r2
   138c4:	ldr	r8, [sp, #92]	; 0x5c
   138c8:	eor	r5, r7, r0
   138cc:	ldr	r7, [sp, #36]	; 0x24
   138d0:	ror	r0, fp, #2
   138d4:	eor	r5, r5, r1
   138d8:	add	r1, r7, ip
   138dc:	ror	r7, r5, #31
   138e0:	orr	r5, r3, r9
   138e4:	ldr	r9, [sp, #32]
   138e8:	add	r1, r1, sl
   138ec:	mov	sl, ip
   138f0:	add	r5, r5, r1
   138f4:	orr	r3, fp, lr
   138f8:	str	r7, [sp, #40]	; 0x28
   138fc:	add	r5, r5, fp, ror #27
   13900:	and	r3, r3, r6
   13904:	ldr	r7, [sp, #20]
   13908:	and	fp, fp, lr
   1390c:	ldr	ip, [sp, #72]	; 0x48
   13910:	eor	r2, r2, r7
   13914:	ror	r7, r5, #2
   13918:	eor	r2, r2, r9
   1391c:	ldr	r9, [sp, #40]	; 0x28
   13920:	add	r1, r9, sl
   13924:	ror	r9, r2, #31
   13928:	eor	r2, r8, ip
   1392c:	ldr	r8, [sp, #24]
   13930:	orr	ip, r3, fp
   13934:	add	r4, r1, r4
   13938:	add	ip, ip, r4
   1393c:	add	r4, r9, sl
   13940:	ldr	r1, [sp, #44]	; 0x2c
   13944:	add	ip, ip, r5, ror #27
   13948:	mov	fp, sl
   1394c:	str	r9, [sp, #64]	; 0x40
   13950:	add	r6, r4, r6
   13954:	ldr	r9, [sp, #28]
   13958:	eor	r3, r2, r8
   1395c:	orr	r2, r5, r0
   13960:	ldr	r8, [sp, #36]	; 0x24
   13964:	and	r5, r5, r0
   13968:	and	r2, r2, lr
   1396c:	eor	r3, r3, r8
   13970:	ldr	r8, [sp, #76]	; 0x4c
   13974:	ror	r3, r3, #31
   13978:	mov	sl, r3
   1397c:	orr	r3, r2, r5
   13980:	ldr	r5, [sp, #40]	; 0x28
   13984:	orr	r2, ip, r7
   13988:	add	r3, r3, r6
   1398c:	eor	r1, r1, r8
   13990:	add	r3, r3, ip, ror #27
   13994:	and	r2, r2, r0
   13998:	eor	r9, r1, r9
   1399c:	ror	r8, ip, #2
   139a0:	and	ip, ip, r7
   139a4:	orr	r4, r2, ip
   139a8:	str	sl, [sp, #56]	; 0x38
   139ac:	add	sl, sl, fp
   139b0:	eor	r9, r9, r5
   139b4:	ldr	r5, [sp, #4]
   139b8:	add	lr, sl, lr
   139bc:	ror	r1, r9, #31
   139c0:	mov	sl, fp
   139c4:	add	r4, r4, lr
   139c8:	add	r4, r4, r3, ror #27
   139cc:	mov	r9, r1
   139d0:	ldr	r1, [sp, #72]	; 0x48
   139d4:	ror	lr, r4, #2
   139d8:	eor	r6, r1, r5
   139dc:	ldr	r1, [sp, #52]	; 0x34
   139e0:	ror	r5, r3, #2
   139e4:	ldr	ip, [sp, #64]	; 0x40
   139e8:	str	r9, [sp, #60]	; 0x3c
   139ec:	ldr	r2, [sp, #76]	; 0x4c
   139f0:	eor	r6, r6, r1
   139f4:	orr	r1, r3, r8
   139f8:	and	r1, r1, r7
   139fc:	and	r3, r3, r8
   13a00:	eor	r6, r6, ip
   13a04:	add	ip, r9, fp
   13a08:	ror	fp, r6, #31
   13a0c:	ldr	r6, [sp, #12]
   13a10:	add	r0, ip, r0
   13a14:	ldr	ip, [sp, #16]
   13a18:	str	fp, [sp, #44]	; 0x2c
   13a1c:	ldr	fp, [sp, #48]	; 0x30
   13a20:	eor	r9, r2, fp
   13a24:	orr	r2, r1, r3
   13a28:	ldr	r3, [sp, #56]	; 0x38
   13a2c:	eor	r9, r9, r6
   13a30:	add	r2, r2, r0
   13a34:	orr	r0, r4, r5
   13a38:	add	r2, r2, r4, ror #27
   13a3c:	and	r4, r4, r5
   13a40:	and	r0, r0, r8
   13a44:	eor	r9, r9, r3
   13a48:	ldr	r3, [sp, #44]	; 0x2c
   13a4c:	ror	r1, r9, #31
   13a50:	mov	r9, r1
   13a54:	ldr	r1, [sp, #4]
   13a58:	add	r6, r3, sl
   13a5c:	str	r9, [sp, #48]	; 0x30
   13a60:	add	r6, r6, r7
   13a64:	eor	r3, r1, ip
   13a68:	orr	ip, r0, r4
   13a6c:	ldr	r0, [sp, #32]
   13a70:	add	ip, ip, r6
   13a74:	orr	r4, r2, lr
   13a78:	ror	r1, r2, #2
   13a7c:	add	ip, ip, r2, ror #27
   13a80:	and	r4, r4, r5
   13a84:	and	r2, r2, lr
   13a88:	eor	r3, r3, r0
   13a8c:	ldr	r0, [sp, #60]	; 0x3c
   13a90:	eor	r3, r3, r0
   13a94:	mov	r0, r9
   13a98:	add	r6, r0, sl
   13a9c:	ldr	r0, [sp, #20]
   13aa0:	mov	r9, sl
   13aa4:	ror	sl, r3, #31
   13aa8:	add	r8, r6, r8
   13aac:	ror	r3, ip, #2
   13ab0:	add	r6, sl, r9
   13ab4:	add	r5, r6, r5
   13ab8:	eor	r7, fp, r0
   13abc:	ldr	fp, [sp, #36]	; 0x24
   13ac0:	orr	r0, r4, r2
   13ac4:	add	r0, r0, r8
   13ac8:	mov	r8, r9
   13acc:	ldr	r9, [sp, #24]
   13ad0:	orr	r2, ip, r1
   13ad4:	add	r0, r0, ip, ror #27
   13ad8:	and	r2, r2, lr
   13adc:	and	ip, ip, r1
   13ae0:	orr	r4, r2, ip
   13ae4:	ldr	r2, [sp, #40]	; 0x28
   13ae8:	orr	ip, r0, r3
   13aec:	eor	r7, r7, fp
   13af0:	add	r4, r4, r5
   13af4:	ldr	fp, [sp, #44]	; 0x2c
   13af8:	add	r4, r4, r0, ror #27
   13afc:	and	ip, ip, r1
   13b00:	ldr	r5, [sp, #48]	; 0x30
   13b04:	eor	r7, r7, fp
   13b08:	ror	r7, r7, #31
   13b0c:	str	r7, [sp, #4]
   13b10:	ldr	r7, [sp, #16]
   13b14:	eor	fp, r7, r9
   13b18:	ldr	r7, [sp, #4]
   13b1c:	ror	r9, r0, #2
   13b20:	eor	fp, fp, r2
   13b24:	and	r0, r0, r3
   13b28:	eor	fp, fp, r5
   13b2c:	ldr	r2, [sp, #20]
   13b30:	ror	fp, fp, #31
   13b34:	ldr	r5, [sp, #28]
   13b38:	add	r7, r7, r8
   13b3c:	ror	r8, r4, #2
   13b40:	add	lr, r7, lr
   13b44:	ldr	r7, [sp, #64]	; 0x40
   13b48:	eor	r6, r2, r5
   13b4c:	orr	r2, ip, r0
   13b50:	ldr	ip, [sp, #24]
   13b54:	add	r2, r2, lr
   13b58:	orr	r5, r4, r9
   13b5c:	eor	r6, r6, r7
   13b60:	ldr	r7, [sp, #52]	; 0x34
   13b64:	add	r2, r2, r4, ror #27
   13b68:	eor	r6, r6, sl
   13b6c:	and	r5, r5, r3
   13b70:	ldr	r0, [sp, #80]	; 0x50
   13b74:	and	r4, r4, r9
   13b78:	eor	lr, ip, r7
   13b7c:	orr	r7, r2, r8
   13b80:	and	r7, r7, r9
   13b84:	add	ip, fp, r0
   13b88:	ror	r0, r6, #31
   13b8c:	ldr	r6, [sp, #56]	; 0x38
   13b90:	add	r1, ip, r1
   13b94:	ldr	ip, [sp, #4]
   13b98:	str	r0, [sp, #16]
   13b9c:	ror	r0, r2, #2
   13ba0:	eor	lr, lr, r6
   13ba4:	orr	r6, r5, r4
   13ba8:	add	r6, r6, r1
   13bac:	eor	lr, lr, ip
   13bb0:	ldr	ip, [sp, #28]
   13bb4:	add	r6, r6, r2, ror #27
   13bb8:	ror	r1, lr, #31
   13bbc:	and	r2, r2, r8
   13bc0:	ldr	r5, [sp, #12]
   13bc4:	orr	r2, r7, r2
   13bc8:	str	r1, [sp, #20]
   13bcc:	ldr	r7, [sp, #52]	; 0x34
   13bd0:	ldr	r1, [sp, #60]	; 0x3c
   13bd4:	eor	ip, ip, r5
   13bd8:	ror	r5, r6, #2
   13bdc:	eor	lr, ip, r1
   13be0:	ldr	ip, [sp, #16]
   13be4:	eor	lr, lr, fp
   13be8:	ldr	r1, [sp, #80]	; 0x50
   13bec:	ror	lr, lr, #31
   13bf0:	str	lr, [sp, #24]
   13bf4:	ldr	lr, [sp, #8]
   13bf8:	add	r1, ip, r1
   13bfc:	ldr	ip, [sp, #32]
   13c00:	add	r3, r1, r3
   13c04:	eor	r1, r8, r0
   13c08:	eor	r1, r1, r6
   13c0c:	eor	r4, r7, ip
   13c10:	add	ip, r2, r3
   13c14:	ldr	r2, [sp, #20]
   13c18:	add	ip, ip, r6, ror #27
   13c1c:	ldr	r6, [sp, #12]
   13c20:	ldr	r7, [sp, #44]	; 0x2c
   13c24:	add	r3, r2, lr
   13c28:	add	r3, r3, r9
   13c2c:	ldr	r9, [sp, #16]
   13c30:	add	r1, r1, r3
   13c34:	ldr	r3, [sp, #24]
   13c38:	add	r1, r1, ip, ror #27
   13c3c:	eor	r4, r4, r7
   13c40:	ldr	r2, [sp, #36]	; 0x24
   13c44:	eor	r4, r4, r9
   13c48:	ror	r9, ip, #2
   13c4c:	ldr	r7, [sp, #48]	; 0x30
   13c50:	eor	r2, r6, r2
   13c54:	ror	r6, r4, #31
   13c58:	eor	r2, r2, r7
   13c5c:	ror	r7, r1, #2
   13c60:	str	r6, [sp, #12]
   13c64:	mov	r6, lr
   13c68:	add	lr, r3, lr
   13c6c:	add	r8, lr, r8
   13c70:	ldr	lr, [sp, #20]
   13c74:	eor	r3, r0, r5
   13c78:	eor	r3, r3, ip
   13c7c:	add	r3, r3, r8
   13c80:	ldr	ip, [sp, #32]
   13c84:	eor	r2, r2, lr
   13c88:	ldr	lr, [sp, #40]	; 0x28
   13c8c:	ror	r8, r2, #31
   13c90:	eor	r2, r5, r9
   13c94:	eor	r2, r2, r1
   13c98:	str	r8, [sp, #28]
   13c9c:	ldr	r8, [sp, #12]
   13ca0:	eor	r4, ip, lr
   13ca4:	add	lr, r3, r1, ror #27
   13ca8:	eor	r4, r4, sl
   13cac:	ldr	r1, [sp, #36]	; 0x24
   13cb0:	add	r3, r8, r6
   13cb4:	ldr	r8, [sp, #24]
   13cb8:	add	r0, r3, r0
   13cbc:	eor	r3, r9, r7
   13cc0:	add	r2, r2, r0
   13cc4:	ldr	r0, [sp, #28]
   13cc8:	eor	r3, r3, lr
   13ccc:	add	r2, r2, lr, ror #27
   13cd0:	eor	r4, r4, r8
   13cd4:	ror	r8, lr, #2
   13cd8:	ror	ip, r4, #31
   13cdc:	ldr	r4, [sp, #64]	; 0x40
   13ce0:	ror	lr, r2, #2
   13ce4:	str	ip, [sp, #32]
   13ce8:	add	ip, r0, r6
   13cec:	ldr	r0, [sp, #4]
   13cf0:	add	ip, ip, r5
   13cf4:	eor	r1, r1, r4
   13cf8:	add	r3, r3, ip
   13cfc:	ldr	r5, [sp, #40]	; 0x28
   13d00:	add	ip, r3, r2, ror #27
   13d04:	eor	r1, r1, r0
   13d08:	ldr	r0, [sp, #12]
   13d0c:	eor	r1, r1, r0
   13d10:	ldr	r0, [sp, #56]	; 0x38
   13d14:	ror	r1, r1, #31
   13d18:	eor	r5, r5, r0
   13d1c:	ldr	r0, [sp, #32]
   13d20:	str	r1, [sp, #36]	; 0x24
   13d24:	eor	r1, r7, r8
   13d28:	eor	r5, r5, fp
   13d2c:	ldr	r3, [sp, #28]
   13d30:	eor	r1, r1, r2
   13d34:	mov	r2, r4
   13d38:	ror	r4, ip, #2
   13d3c:	add	r0, r0, r6
   13d40:	eor	r6, r8, lr
   13d44:	add	r0, r0, r9
   13d48:	ldr	r9, [sp, #60]	; 0x3c
   13d4c:	add	r0, r1, r0
   13d50:	eor	r5, r5, r3
   13d54:	ldr	r1, [sp, #8]
   13d58:	add	r0, r0, ip, ror #27
   13d5c:	ror	r5, r5, #31
   13d60:	ldr	r3, [sp, #36]	; 0x24
   13d64:	eor	r2, r2, r9
   13d68:	ldr	r9, [sp, #16]
   13d6c:	eor	r2, r2, r9
   13d70:	add	r9, r3, r1
   13d74:	ldr	r3, [sp, #32]
   13d78:	add	r9, r9, r7
   13d7c:	ldr	r7, [sp, #44]	; 0x2c
   13d80:	eor	r2, r2, r3
   13d84:	eor	r3, r6, ip
   13d88:	ldr	r6, [sp, #56]	; 0x38
   13d8c:	ror	ip, r2, #31
   13d90:	add	r2, r5, r1
   13d94:	eor	r1, lr, r4
   13d98:	add	r8, r2, r8
   13d9c:	ldr	r2, [sp, #36]	; 0x24
   13da0:	eor	r1, r1, r0
   13da4:	add	r1, r1, r8
   13da8:	str	ip, [sp, #40]	; 0x28
   13dac:	eor	ip, r6, r7
   13db0:	add	r6, r3, r9
   13db4:	ldr	r3, [sp, #20]
   13db8:	add	r6, r6, r0, ror #27
   13dbc:	ror	r7, r0, #2
   13dc0:	ldr	r0, [sp, #48]	; 0x30
   13dc4:	eor	r8, r4, r7
   13dc8:	eor	ip, ip, r3
   13dcc:	ldr	r3, [sp, #8]
   13dd0:	eor	r8, r8, r6
   13dd4:	eor	ip, ip, r2
   13dd8:	ldr	r2, [sp, #60]	; 0x3c
   13ddc:	ror	ip, ip, #31
   13de0:	str	ip, [sp, #52]	; 0x34
   13de4:	eor	r9, r2, r0
   13de8:	ldr	r2, [sp, #40]	; 0x28
   13dec:	ror	r0, r6, #2
   13df0:	add	r3, r2, r3
   13df4:	ldr	r2, [sp, #24]
   13df8:	add	r3, r3, lr
   13dfc:	ldr	lr, [sp, #44]	; 0x2c
   13e00:	add	r3, r8, r3
   13e04:	ldr	r8, [sp, #12]
   13e08:	eor	r9, r9, r2
   13e0c:	add	r2, r1, r6, ror #27
   13e10:	eor	r9, r9, r5
   13e14:	ldr	r1, [sp, #52]	; 0x34
   13e18:	eor	r6, lr, sl
   13e1c:	ror	ip, r9, #31
   13e20:	ldr	r9, [sp, #8]
   13e24:	add	r3, r3, r2, ror #27
   13e28:	eor	r6, r6, r8
   13e2c:	ror	r8, r2, #2
   13e30:	str	r8, [sp, #8]
   13e34:	ldr	r8, [sp, #40]	; 0x28
   13e38:	add	lr, r1, r9
   13e3c:	eor	r1, r7, r0
   13e40:	eor	r1, r1, r2
   13e44:	add	lr, lr, r4
   13e48:	ldr	r4, [sp, #28]
   13e4c:	add	r1, r1, lr
   13e50:	add	r1, r1, r3, ror #27
   13e54:	ldr	lr, [sp, #8]
   13e58:	eor	r6, r6, r8
   13e5c:	add	r8, ip, r9
   13e60:	ror	r2, r6, #31
   13e64:	ldr	r6, [sp, #4]
   13e68:	add	r7, r8, r7
   13e6c:	str	r2, [sp, #44]	; 0x2c
   13e70:	eor	lr, r0, lr
   13e74:	ldr	r8, [sp, #44]	; 0x2c
   13e78:	eor	lr, lr, r3
   13e7c:	add	lr, lr, r7
   13e80:	ldr	r2, [sp, #48]	; 0x30
   13e84:	eor	r2, r2, r6
   13e88:	ror	r6, r3, #2
   13e8c:	ldr	r3, [sp, #52]	; 0x34
   13e90:	eor	r2, r2, r4
   13e94:	add	r4, r8, r9
   13e98:	ldr	r8, [sp, #8]
   13e9c:	add	r4, r4, r0
   13ea0:	eor	r2, r2, r3
   13ea4:	eor	r3, sl, fp
   13ea8:	ror	sl, r1, #2
   13eac:	ror	r2, r2, #31
   13eb0:	eor	r7, r8, r6
   13eb4:	ldr	r8, [sp, #32]
   13eb8:	str	ip, [sp, #48]	; 0x30
   13ebc:	add	r0, r2, r9
   13ec0:	eor	r3, r3, r8
   13ec4:	add	r8, lr, r1, ror #27
   13ec8:	eor	r1, r1, r7
   13ecc:	ldr	r7, [sp, #4]
   13ed0:	add	r4, r1, r4
   13ed4:	eor	r3, r3, ip
   13ed8:	add	r4, r4, r8, ror #27
   13edc:	ldr	lr, [sp, #16]
   13ee0:	ror	r3, r3, #31
   13ee4:	ldr	r1, [sp, #36]	; 0x24
   13ee8:	ldr	ip, [sp, #44]	; 0x2c
   13eec:	eor	r7, r7, lr
   13ef0:	eor	lr, r6, sl
   13ef4:	eor	lr, lr, r8
   13ef8:	eor	r7, r7, r1
   13efc:	mov	r1, r9
   13f00:	ror	r9, r8, #2
   13f04:	ldr	r8, [sp, #20]
   13f08:	eor	r7, r7, ip
   13f0c:	ldr	ip, [sp, #8]
   13f10:	ror	r7, r7, #31
   13f14:	eor	fp, fp, r8
   13f18:	ror	r8, r4, #2
   13f1c:	eor	r5, r5, fp
   13f20:	ldr	fp, [sp, #24]
   13f24:	add	r0, r0, ip
   13f28:	mov	ip, r1
   13f2c:	add	r1, r3, r1
   13f30:	add	lr, lr, r0
   13f34:	add	r1, r1, r6
   13f38:	eor	r0, sl, r9
   13f3c:	ldr	r6, [sp, #16]
   13f40:	add	lr, lr, r4, ror #27
   13f44:	eor	r0, r0, r4
   13f48:	add	r4, r7, ip
   13f4c:	str	ip, [sp, #8]
   13f50:	add	r0, r0, r1
   13f54:	eor	r1, r9, r8
   13f58:	ldr	ip, [sp, #40]	; 0x28
   13f5c:	add	r0, r0, lr, ror #27
   13f60:	eor	r1, r1, lr
   13f64:	add	sl, r4, sl
   13f68:	eor	r5, r5, r2
   13f6c:	eor	r6, r6, fp
   13f70:	ror	fp, lr, #2
   13f74:	ldr	r4, [sp, #8]
   13f78:	ror	r5, r5, #31
   13f7c:	add	sl, r1, sl
   13f80:	ldr	lr, [sp, #20]
   13f84:	ror	r1, r0, #2
   13f88:	eor	r6, r6, ip
   13f8c:	add	sl, sl, r0, ror #27
   13f90:	eor	r6, r6, r3
   13f94:	ldr	r3, [sp, #12]
   13f98:	ror	r6, r6, #31
   13f9c:	ldr	ip, [sp, #52]	; 0x34
   13fa0:	eor	lr, lr, r3
   13fa4:	eor	r3, r8, fp
   13fa8:	eor	r0, r0, r3
   13fac:	add	r3, r6, r4
   13fb0:	eor	ip, ip, lr
   13fb4:	add	lr, r5, r4
   13fb8:	add	r9, lr, r9
   13fbc:	ldr	lr, [sp, #24]
   13fc0:	eor	r4, fp, r1
   13fc4:	add	r9, r0, r9
   13fc8:	eor	r7, r7, ip
   13fcc:	ror	ip, sl, #2
   13fd0:	ldr	r0, [sp, #28]
   13fd4:	add	r9, r9, sl, ror #27
   13fd8:	eor	sl, sl, r4
   13fdc:	ror	r7, r7, #31
   13fe0:	add	r8, r3, r8
   13fe4:	ldr	r4, [sp, #8]
   13fe8:	add	sl, sl, r8
   13fec:	eor	r8, r1, ip
   13ff0:	add	sl, sl, r9, ror #27
   13ff4:	eor	lr, lr, r0
   13ff8:	ldr	r0, [sp, #48]	; 0x30
   13ffc:	add	r3, r7, r4
   14000:	ldr	r4, [sp, #32]
   14004:	add	r3, r3, fp
   14008:	ldr	fp, [sp, #8]
   1400c:	eor	lr, lr, r0
   14010:	ror	r0, r9, #2
   14014:	eor	r9, r9, r8
   14018:	eor	r5, r5, lr
   1401c:	ldr	lr, [sp, #12]
   14020:	add	r3, r9, r3
   14024:	add	r3, r3, sl, ror #27
   14028:	ldr	r9, [sp, #36]	; 0x24
   1402c:	add	r5, fp, r5, ror #31
   14030:	ldr	r8, [sp, #44]	; 0x2c
   14034:	eor	r4, lr, r4
   14038:	add	r5, r5, r1
   1403c:	ldr	lr, [sp, #28]
   14040:	ldr	r1, [sp, #96]	; 0x60
   14044:	eor	r4, r4, r8
   14048:	ror	r8, sl, #2
   1404c:	eor	r4, r4, r6
   14050:	eor	r6, lr, r9
   14054:	eor	lr, ip, r0
   14058:	add	r4, fp, r4, ror #31
   1405c:	eor	sl, sl, lr
   14060:	ror	r9, r3, #2
   14064:	eor	r2, r2, r6
   14068:	add	fp, r1, fp
   1406c:	add	sl, r5, sl
   14070:	ldr	lr, [sp, #100]	; 0x64
   14074:	eor	r1, r0, r8
   14078:	add	sl, sl, r3, ror #27
   1407c:	add	r4, r4, ip
   14080:	eor	r3, r3, r1
   14084:	eor	r2, r2, r7
   14088:	ldr	r6, [sp, #108]	; 0x6c
   1408c:	add	r4, r4, r3
   14090:	add	r2, fp, r2, ror #31
   14094:	eor	fp, r8, r9
   14098:	ldr	r3, [sp, #104]	; 0x68
   1409c:	eor	fp, fp, sl
   140a0:	add	r2, r2, r0
   140a4:	mov	r0, #0
   140a8:	add	r2, r2, fp
   140ac:	add	r9, r6, r9
   140b0:	add	r7, r3, sl, ror #2
   140b4:	ldr	r3, [sp, #112]	; 0x70
   140b8:	add	sl, r4, sl, ror #27
   140bc:	ldr	r4, [sp, #116]	; 0x74
   140c0:	add	r2, r2, sl, ror #27
   140c4:	add	sl, lr, sl
   140c8:	add	r8, r3, r8
   140cc:	str	sl, [r4, #4]
   140d0:	str	r7, [r4, #8]
   140d4:	str	r2, [r4]
   140d8:	str	r9, [r4, #12]
   140dc:	str	r8, [r4, #16]
   140e0:	add	sp, sp, #188	; 0xbc
   140e4:	ldrd	r4, [sp]
   140e8:	ldrd	r6, [sp, #8]
   140ec:	ldrd	r8, [sp, #16]
   140f0:	ldrd	sl, [sp, #24]
   140f4:	add	sp, sp, #32
   140f8:	pop	{pc}		; (ldr pc, [sp], #4)
   140fc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14100:	movw	r3, #57840	; 0xe1f0
   14104:	movt	r3, #50130	; 0xc3d2
   14108:	add	r5, pc, #64	; 0x40
   1410c:	ldrd	r4, [r5]
   14110:	strd	r6, [sp, #8]
   14114:	add	r7, pc, #60	; 0x3c
   14118:	ldrd	r6, [r7]
   1411c:	strd	r8, [sp, #16]
   14120:	mov	r8, #0
   14124:	mov	r9, #0
   14128:	strd	r6, [r0]
   1412c:	strd	r4, [r0, #8]
   14130:	str	r3, [r0, #16]
   14134:	strd	r8, [r0, #24]
   14138:	ldrd	r4, [sp]
   1413c:	ldrd	r6, [sp, #8]
   14140:	ldrd	r8, [sp, #16]
   14144:	add	sp, sp, #24
   14148:	bx	lr
   1414c:	nop	{0}
   14150:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   14154:	eorsne	r5, r2, r6, ror r4
   14158:	strbvs	r2, [r5, -r1, lsl #6]
   1415c:	svc	0x00cdab89
   14160:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14164:	mov	r5, r2
   14168:	strd	r6, [sp, #8]
   1416c:	mov	r6, r0
   14170:	strd	sl, [sp, #24]
   14174:	ldrd	sl, [r0, #24]
   14178:	lsl	r0, r2, #3
   1417c:	strd	r8, [sp, #16]
   14180:	mov	r8, r1
   14184:	str	lr, [sp, #32]
   14188:	sub	sp, sp, #4
   1418c:	ubfx	r9, sl, #3, #6
   14190:	adds	r2, sl, r0
   14194:	adc	r3, fp, #0
   14198:	add	r0, r9, r5
   1419c:	add	r7, r9, #32
   141a0:	cmp	r0, #63	; 0x3f
   141a4:	add	r7, r6, r7
   141a8:	strd	r2, [r6, #24]
   141ac:	bhi	141dc <rb_base64_encode@plt+0x3314>
   141b0:	mov	r2, r5
   141b4:	mov	r1, r8
   141b8:	mov	r0, r7
   141bc:	add	sp, sp, #4
   141c0:	ldrd	r4, [sp]
   141c4:	ldrd	r6, [sp, #8]
   141c8:	ldrd	r8, [sp, #16]
   141cc:	ldrd	sl, [sp, #24]
   141d0:	ldr	lr, [sp, #32]
   141d4:	add	sp, sp, #36	; 0x24
   141d8:	b	10d9c <memcpy@plt>
   141dc:	rsb	r4, r9, #64	; 0x40
   141e0:	mov	r0, r7
   141e4:	mov	r2, r4
   141e8:	add	r7, r6, #32
   141ec:	bl	10d9c <memcpy@plt>
   141f0:	mov	r1, r7
   141f4:	mov	r0, r6
   141f8:	bl	12bb8 <rb_base64_encode@plt+0x1cf0>
   141fc:	rsb	r3, r9, #127	; 0x7f
   14200:	cmp	r5, r3
   14204:	subls	r3, r9, #64	; 0x40
   14208:	addls	r8, r8, r4
   1420c:	addls	r5, r5, r3
   14210:	bls	141b0 <rb_base64_encode@plt+0x32e8>
   14214:	add	r1, r8, r4
   14218:	mov	r0, r6
   1421c:	bl	12bb8 <rb_base64_encode@plt+0x1cf0>
   14220:	add	r3, r4, #127	; 0x7f
   14224:	add	r4, r4, #64	; 0x40
   14228:	cmp	r5, r3
   1422c:	bhi	14214 <rb_base64_encode@plt+0x334c>
   14230:	add	r8, r8, r4
   14234:	sub	r5, r5, r4
   14238:	b	141b0 <rb_base64_encode@plt+0x32e8>
   1423c:	ldrd	r2, [r0, #24]
   14240:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14244:	mov	r5, r1
   14248:	mov	r4, r0
   1424c:	strd	r6, [sp, #8]
   14250:	strd	r8, [sp, #16]
   14254:	strd	sl, [sp, #24]
   14258:	adds	ip, r2, #8
   1425c:	str	lr, [sp, #32]
   14260:	sub	sp, sp, #12
   14264:	adc	sl, r3, #0
   14268:	mov	r1, r2
   1426c:	lsr	lr, r3, #24
   14270:	ubfx	r2, r2, #3, #6
   14274:	str	ip, [r0, #24]
   14278:	rev	r1, r1
   1427c:	lsr	ip, r3, #16
   14280:	str	sl, [r0, #28]
   14284:	cmp	r2, #63	; 0x3f
   14288:	strb	lr, [sp]
   1428c:	strb	r3, [sp, #3]
   14290:	lsr	r3, r3, #8
   14294:	strb	ip, [sp, #1]
   14298:	strb	r3, [sp, #2]
   1429c:	str	r1, [sp, #4]
   142a0:	beq	143d4 <rb_base64_encode@plt+0x350c>
   142a4:	add	r0, r2, #32
   142a8:	movw	r1, #18272	; 0x4760
   142ac:	movt	r1, #1
   142b0:	mov	r2, #1
   142b4:	add	r0, r4, r0
   142b8:	mov	fp, #0
   142bc:	bl	10d9c <memcpy@plt>
   142c0:	ldr	r3, [r4, #24]
   142c4:	cmp	fp, #0
   142c8:	ldr	r2, [r4, #28]
   142cc:	and	r0, r3, #504	; 0x1f8
   142d0:	cmpeq	r0, #448	; 0x1c0
   142d4:	beq	14318 <rb_base64_encode@plt+0x3450>
   142d8:	add	sl, r4, #32
   142dc:	adds	r1, r3, #8
   142e0:	ubfx	r3, r3, #3, #6
   142e4:	adc	r2, r2, #0
   142e8:	cmp	r3, #63	; 0x3f
   142ec:	add	r0, r3, #32
   142f0:	str	r1, [r4, #24]
   142f4:	str	r2, [r4, #28]
   142f8:	beq	143a8 <rb_base64_encode@plt+0x34e0>
   142fc:	strb	fp, [r4, r0]
   14300:	cmp	fp, #0
   14304:	ldr	r3, [r4, #24]
   14308:	ldr	r2, [r4, #28]
   1430c:	and	r8, r3, #504	; 0x1f8
   14310:	cmpeq	r8, #448	; 0x1c0
   14314:	bne	142dc <rb_base64_encode@plt+0x3414>
   14318:	ubfx	r6, r3, #3, #6
   1431c:	adds	r3, r3, #64	; 0x40
   14320:	adc	r2, r2, #0
   14324:	add	r1, r6, #8
   14328:	add	r0, r6, #32
   1432c:	str	r3, [r4, #24]
   14330:	cmp	r1, #63	; 0x3f
   14334:	add	r0, r4, r0
   14338:	str	r2, [r4, #28]
   1433c:	movls	r1, sp
   14340:	movls	r2, #8
   14344:	bhi	143f4 <rb_base64_encode@plt+0x352c>
   14348:	bl	10d9c <memcpy@plt>
   1434c:	sub	r1, r5, #1
   14350:	mov	r2, #0
   14354:	lsr	r0, r2, #2
   14358:	mvn	r3, r2
   1435c:	add	r2, r2, #1
   14360:	and	r3, r3, #3
   14364:	cmp	r2, #20
   14368:	ldr	r0, [r4, r0, lsl #2]
   1436c:	lsl	r3, r3, #3
   14370:	lsr	r3, r0, r3
   14374:	strb	r3, [r1, #1]!
   14378:	bne	14354 <rb_base64_encode@plt+0x348c>
   1437c:	mov	r0, r4
   14380:	mov	r2, #96	; 0x60
   14384:	mov	r1, #0
   14388:	add	sp, sp, #12
   1438c:	ldrd	r4, [sp]
   14390:	ldrd	r6, [sp, #8]
   14394:	ldrd	r8, [sp, #16]
   14398:	ldrd	sl, [sp, #24]
   1439c:	ldr	lr, [sp, #32]
   143a0:	add	sp, sp, #36	; 0x24
   143a4:	b	10d0c <memset@plt>
   143a8:	mov	r1, sl
   143ac:	mov	r0, r4
   143b0:	strb	fp, [r4, #95]	; 0x5f
   143b4:	bl	12bb8 <rb_base64_encode@plt+0x1cf0>
   143b8:	ldr	r3, [r4, #24]
   143bc:	cmp	fp, #0
   143c0:	ldr	r2, [r4, #28]
   143c4:	and	r6, r3, #504	; 0x1f8
   143c8:	cmpeq	r6, #448	; 0x1c0
   143cc:	bne	142dc <rb_base64_encode@plt+0x3414>
   143d0:	b	14318 <rb_base64_encode@plt+0x3450>
   143d4:	mvn	r3, #127	; 0x7f
   143d8:	add	r1, r0, #32
   143dc:	strb	r3, [r0, #95]	; 0x5f
   143e0:	bl	12bb8 <rb_base64_encode@plt+0x1cf0>
   143e4:	ldr	r1, [pc, #56]	; 14424 <rb_base64_encode@plt+0x355c>
   143e8:	mov	r2, #0
   143ec:	mov	r0, #32
   143f0:	b	142b4 <rb_base64_encode@plt+0x33ec>
   143f4:	rsb	r8, r6, #64	; 0x40
   143f8:	mov	r1, sp
   143fc:	mov	r2, r8
   14400:	add	r7, r4, #32
   14404:	bl	10d9c <memcpy@plt>
   14408:	mov	r1, r7
   1440c:	mov	r0, r4
   14410:	bl	12bb8 <rb_base64_encode@plt+0x1cf0>
   14414:	add	r1, sp, r8
   14418:	mov	r0, r7
   1441c:	sub	r2, r6, #56	; 0x38
   14420:	b	14348 <rb_base64_encode@plt+0x3480>
   14424:	andeq	r4, r1, r1, ror #14
   14428:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1442c:	mov	r7, r0
   14430:	ldr	r6, [pc, #72]	; 14480 <rb_base64_encode@plt+0x35b8>
   14434:	ldr	r5, [pc, #72]	; 14484 <rb_base64_encode@plt+0x35bc>
   14438:	add	r6, pc, r6
   1443c:	add	r5, pc, r5
   14440:	sub	r6, r6, r5
   14444:	mov	r8, r1
   14448:	mov	r9, r2
   1444c:	bl	10c38 <open@plt-0x20>
   14450:	asrs	r6, r6, #2
   14454:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14458:	mov	r4, #0
   1445c:	add	r4, r4, #1
   14460:	ldr	r3, [r5], #4
   14464:	mov	r2, r9
   14468:	mov	r1, r8
   1446c:	mov	r0, r7
   14470:	blx	r3
   14474:	cmp	r6, r4
   14478:	bne	1445c <rb_base64_encode@plt+0x3594>
   1447c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14480:			; <UNDEFINED> instruction: 0x00010abc
   14484:			; <UNDEFINED> instruction: 0x00010ab4
   14488:	bx	lr

Disassembly of section .fini:

0001448c <.fini>:
   1448c:	push	{r3, lr}
   14490:	pop	{r3, pc}
