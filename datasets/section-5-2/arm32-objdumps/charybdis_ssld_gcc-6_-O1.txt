
../repos/charybdis/ssld/.libs/ssld:     file format elf32-littlearm


Disassembly of section .init:

00010f2c <.init>:
   10f2c:	push	{r3, lr}
   10f30:	bl	112ac <__errno_location@plt+0x48>
   10f34:	pop	{r3, pc}

Disassembly of section .plt:

00010f38 <open@plt-0x14>:
   10f38:	push	{lr}		; (str lr, [sp, #-4]!)
   10f3c:	ldr	lr, [pc, #4]	; 10f48 <open@plt-0x4>
   10f40:	add	lr, pc, lr
   10f44:	ldr	pc, [lr, #8]!
   10f48:	strheq	r3, [r1], -r8

00010f4c <open@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #77824	; 0x13000
   10f54:	ldr	pc, [ip, #184]!	; 0xb8

00010f58 <sigemptyset@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #77824	; 0x13000
   10f60:	ldr	pc, [ip, #176]!	; 0xb0

00010f64 <strerror@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #77824	; 0x13000
   10f6c:	ldr	pc, [ip, #168]!	; 0xa8

00010f70 <rb_get_type@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #77824	; 0x13000
   10f78:	ldr	pc, [ip, #160]!	; 0xa0

00010f7c <zError@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #77824	; 0x13000
   10f84:	ldr	pc, [ip, #152]!	; 0x98

00010f88 <abort@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #77824	; 0x13000
   10f90:	ldr	pc, [ip, #144]!	; 0x90

00010f94 <rb_event_addish@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #77824	; 0x13000
   10f9c:	ldr	pc, [ip, #136]!	; 0x88

00010fa0 <rb_ignore_errno@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #77824	; 0x13000
   10fa8:	ldr	pc, [ip, #128]!	; 0x80

00010fac <rb_lib_version@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #77824	; 0x13000
   10fb4:	ldr	pc, [ip, #120]!	; 0x78

00010fb8 <inflateEnd@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #77824	; 0x13000
   10fc0:	ldr	pc, [ip, #112]!	; 0x70

00010fc4 <__libc_start_main@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #77824	; 0x13000
   10fcc:	ldr	pc, [ip, #104]!	; 0x68

00010fd0 <rb_setselect@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #77824	; 0x13000
   10fd8:	ldr	pc, [ip, #96]!	; 0x60

00010fdc <__gmon_start__@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #77824	; 0x13000
   10fe4:	ldr	pc, [ip, #88]!	; 0x58

00010fe8 <rb_ssl_handshake_count@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #77824	; 0x13000
   10ff0:	ldr	pc, [ip, #80]!	; 0x50

00010ff4 <rb_send_fd_buf@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #77824	; 0x13000
   10ffc:	ldr	pc, [ip, #72]!	; 0x48

00011000 <vsnprintf@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #77824	; 0x13000
   11008:	ldr	pc, [ip, #64]!	; 0x40

0001100c <strncpy@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #77824	; 0x13000
   11014:	ldr	pc, [ip, #56]!	; 0x38

00011018 <getenv@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #77824	; 0x13000
   11020:	ldr	pc, [ip, #48]!	; 0x30

00011024 <deflate@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #77824	; 0x13000
   1102c:	ldr	pc, [ip, #40]!	; 0x28

00011030 <deflateInit_@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #77824	; 0x13000
   11038:	ldr	pc, [ip, #32]!

0001103c <calloc@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #77824	; 0x13000
   11044:	ldr	pc, [ip, #24]!

00011048 <rb_set_nb@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #77824	; 0x13000
   11050:	ldr	pc, [ip, #16]!

00011054 <memset@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #77824	; 0x13000
   1105c:	ldr	pc, [ip, #8]!

00011060 <__assert_fail@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #77824	; 0x13000
   11068:	ldr	pc, [ip, #0]!

0001106c <rb_strlcpy@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #73728	; 0x12000
   11074:	ldr	pc, [ip, #4088]!	; 0xff8

00011078 <rb_get_ssl_certfp@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #73728	; 0x12000
   11080:	ldr	pc, [ip, #4080]!	; 0xff0

00011084 <inflate@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #73728	; 0x12000
   1108c:	ldr	pc, [ip, #4072]!	; 0xfe8

00011090 <rb_init_rawbuffers@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #73728	; 0x12000
   11098:	ldr	pc, [ip, #4064]!	; 0xfe0

0001109c <free@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #73728	; 0x12000
   110a4:	ldr	pc, [ip, #4056]!	; 0xfd8

000110a8 <rb_lib_loop@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #73728	; 0x12000
   110b0:	ldr	pc, [ip, #4048]!	; 0xfd0

000110b4 <deflateEnd@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #73728	; 0x12000
   110bc:	ldr	pc, [ip, #4040]!	; 0xfc8

000110c0 <rb_read@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #73728	; 0x12000
   110c8:	ldr	pc, [ip, #4032]!	; 0xfc0

000110cc <rb_set_type@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #73728	; 0x12000
   110d4:	ldr	pc, [ip, #4024]!	; 0xfb8

000110d8 <strlen@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #73728	; 0x12000
   110e0:	ldr	pc, [ip, #4016]!	; 0xfb0

000110e4 <rb_ssl_get_cipher@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #73728	; 0x12000
   110ec:	ldr	pc, [ip, #4008]!	; 0xfa8

000110f0 <memcpy@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #73728	; 0x12000
   110f8:	ldr	pc, [ip, #4000]!	; 0xfa0

000110fc <rb_close@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #73728	; 0x12000
   11104:	ldr	pc, [ip, #3992]!	; 0xf98

00011108 <strtol@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #73728	; 0x12000
   11110:	ldr	pc, [ip, #3984]!	; 0xf90

00011114 <sigaddset@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #73728	; 0x12000
   1111c:	ldr	pc, [ip, #3976]!	; 0xf88

00011120 <strcpy@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #73728	; 0x12000
   11128:	ldr	pc, [ip, #3968]!	; 0xf80

0001112c <rb_ssl_clear_handshake_count@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #73728	; 0x12000
   11134:	ldr	pc, [ip, #3960]!	; 0xf78

00011138 <rb_rawbuf_length@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #73728	; 0x12000
   11140:	ldr	pc, [ip, #3952]!	; 0xf70

00011144 <rb_free_rawbuffer@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #73728	; 0x12000
   1114c:	ldr	pc, [ip, #3944]!	; 0xf68

00011150 <rb_get_ssl_strerror@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #73728	; 0x12000
   11158:	ldr	pc, [ip, #3936]!	; 0xf60

0001115c <close@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #73728	; 0x12000
   11164:	ldr	pc, [ip, #3928]!	; 0xf58

00011168 <fwrite@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #73728	; 0x12000
   11170:	ldr	pc, [ip, #3920]!	; 0xf50

00011174 <rb_init_prng@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #73728	; 0x12000
   1117c:	ldr	pc, [ip, #3912]!	; 0xf48

00011180 <rb_outofmemory@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #73728	; 0x12000
   11188:	ldr	pc, [ip, #3904]!	; 0xf40

0001118c <rb_supports_ssl@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #73728	; 0x12000
   11194:	ldr	pc, [ip, #3896]!	; 0xf38

00011198 <sigaction@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #73728	; 0x12000
   111a0:	ldr	pc, [ip, #3888]!	; 0xf30

000111a4 <rb_ssl_start_connected@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #73728	; 0x12000
   111ac:	ldr	pc, [ip, #3880]!	; 0xf28

000111b0 <rb_lib_init@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #73728	; 0x12000
   111b8:	ldr	pc, [ip, #3872]!	; 0xf20

000111bc <rb_new_rawbuffer@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #73728	; 0x12000
   111c4:	ldr	pc, [ip, #3864]!	; 0xf18

000111c8 <rb_open@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #73728	; 0x12000
   111d0:	ldr	pc, [ip, #3856]!	; 0xf10

000111d4 <inflateInit_@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #73728	; 0x12000
   111dc:	ldr	pc, [ip, #3848]!	; 0xf08

000111e0 <rb_recv_fd_buf@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #73728	; 0x12000
   111e8:	ldr	pc, [ip, #3840]!	; 0xf00

000111ec <rb_ssl_start_accepted@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #73728	; 0x12000
   111f4:	ldr	pc, [ip, #3832]!	; 0xef8

000111f8 <dup2@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #73728	; 0x12000
   11200:	ldr	pc, [ip, #3824]!	; 0xef0

00011204 <rb_event_add@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #73728	; 0x12000
   1120c:	ldr	pc, [ip, #3816]!	; 0xee8

00011210 <snprintf@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #73728	; 0x12000
   11218:	ldr	pc, [ip, #3808]!	; 0xee0

0001121c <strncmp@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #73728	; 0x12000
   11224:	ldr	pc, [ip, #3800]!	; 0xed8

00011228 <getrlimit@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #73728	; 0x12000
   11230:	ldr	pc, [ip, #3792]!	; 0xed0

00011234 <rb_rawbuf_append@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #73728	; 0x12000
   1123c:	ldr	pc, [ip, #3784]!	; 0xec8

00011240 <rb_rawbuf_flush@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #73728	; 0x12000
   11248:	ldr	pc, [ip, #3776]!	; 0xec0

0001124c <rb_setup_ssl_server@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #73728	; 0x12000
   11254:	ldr	pc, [ip, #3768]!	; 0xeb8

00011258 <exit@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #73728	; 0x12000
   11260:	ldr	pc, [ip, #3760]!	; 0xeb0

00011264 <__errno_location@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #73728	; 0x12000
   1126c:	ldr	pc, [ip, #3752]!	; 0xea8

Disassembly of section .text:

00011270 <.text>:
   11270:	mov	fp, #0
   11274:	mov	lr, #0
   11278:	pop	{r1}		; (ldr r1, [sp], #4)
   1127c:	mov	r2, sp
   11280:	push	{r2}		; (str r2, [sp, #-4]!)
   11284:	push	{r0}		; (str r0, [sp, #-4]!)
   11288:	ldr	ip, [pc, #16]	; 112a0 <__errno_location@plt+0x3c>
   1128c:	push	{ip}		; (str ip, [sp, #-4]!)
   11290:	ldr	r0, [pc, #12]	; 112a4 <__errno_location@plt+0x40>
   11294:	ldr	r3, [pc, #12]	; 112a8 <__errno_location@plt+0x44>
   11298:	bl	10fc4 <__libc_start_main@plt>
   1129c:	bl	10f88 <abort@plt>
   112a0:	andeq	r3, r1, r8, lsr #5
   112a4:	andeq	r2, r1, r4, ror lr
   112a8:	andeq	r3, r1, r8, asr #4
   112ac:	ldr	r3, [pc, #20]	; 112c8 <__errno_location@plt+0x64>
   112b0:	ldr	r2, [pc, #20]	; 112cc <__errno_location@plt+0x68>
   112b4:	add	r3, pc, r3
   112b8:	ldr	r2, [r3, r2]
   112bc:	cmp	r2, #0
   112c0:	bxeq	lr
   112c4:	b	10fdc <__gmon_start__@plt>
   112c8:	andeq	r2, r1, r4, asr #26
   112cc:	andeq	r0, r0, r8, lsl r1
   112d0:	ldr	r3, [pc, #28]	; 112f4 <__errno_location@plt+0x90>
   112d4:	ldr	r0, [pc, #28]	; 112f8 <__errno_location@plt+0x94>
   112d8:	sub	r3, r3, r0
   112dc:	cmp	r3, #6
   112e0:	bxls	lr
   112e4:	ldr	r3, [pc, #16]	; 112fc <__errno_location@plt+0x98>
   112e8:	cmp	r3, #0
   112ec:	bxeq	lr
   112f0:	bx	r3
   112f4:	andeq	r4, r2, r7, lsr #2
   112f8:	andeq	r4, r2, r4, lsr #2
   112fc:	andeq	r0, r0, r0
   11300:	ldr	r1, [pc, #36]	; 1132c <__errno_location@plt+0xc8>
   11304:	ldr	r0, [pc, #36]	; 11330 <__errno_location@plt+0xcc>
   11308:	sub	r1, r1, r0
   1130c:	asr	r1, r1, #2
   11310:	add	r1, r1, r1, lsr #31
   11314:	asrs	r1, r1, #1
   11318:	bxeq	lr
   1131c:	ldr	r3, [pc, #16]	; 11334 <__errno_location@plt+0xd0>
   11320:	cmp	r3, #0
   11324:	bxeq	lr
   11328:	bx	r3
   1132c:	andeq	r4, r2, r4, lsr #2
   11330:	andeq	r4, r2, r4, lsr #2
   11334:	andeq	r0, r0, r0
   11338:	push	{r4, lr}
   1133c:	ldr	r4, [pc, #24]	; 1135c <__errno_location@plt+0xf8>
   11340:	ldrb	r3, [r4]
   11344:	cmp	r3, #0
   11348:	popne	{r4, pc}
   1134c:	bl	112d0 <__errno_location@plt+0x6c>
   11350:	mov	r3, #1
   11354:	strb	r3, [r4]
   11358:	pop	{r4, pc}
   1135c:	andeq	r4, r2, ip, lsr #2
   11360:	ldr	r0, [pc, #40]	; 11390 <__errno_location@plt+0x12c>
   11364:	ldr	r3, [r0]
   11368:	cmp	r3, #0
   1136c:	bne	11374 <__errno_location@plt+0x110>
   11370:	b	11300 <__errno_location@plt+0x9c>
   11374:	ldr	r3, [pc, #24]	; 11394 <__errno_location@plt+0x130>
   11378:	cmp	r3, #0
   1137c:	beq	11370 <__errno_location@plt+0x10c>
   11380:	push	{r4, lr}
   11384:	blx	r3
   11388:	pop	{r4, lr}
   1138c:	b	11300 <__errno_location@plt+0x9c>
   11390:	strdeq	r3, [r2], -r4
   11394:	andeq	r0, r0, r0
   11398:	bx	lr
   1139c:	ldr	r3, [r1, #36]	; 0x24
   113a0:	cmp	r3, #0
   113a4:	bxle	lr
   113a8:	push	{r4, r5, r6, lr}
   113ac:	mov	r6, r1
   113b0:	add	r5, r1, #20
   113b4:	mov	r4, #0
   113b8:	ldr	r0, [r5], #4
   113bc:	bl	110fc <rb_close@plt>
   113c0:	add	r4, r4, #1
   113c4:	ldr	r3, [r6, #36]	; 0x24
   113c8:	cmp	r3, r4
   113cc:	bgt	113b8 <__errno_location@plt+0x154>
   113d0:	pop	{r4, r5, r6, pc}
   113d4:	push	{r4, r5, lr}
   113d8:	sub	sp, sp, #16384	; 0x4000
   113dc:	sub	sp, sp, #4
   113e0:	mov	r4, r0
   113e4:	mov	r5, #16384	; 0x4000
   113e8:	mov	r2, r5
   113ec:	mov	r1, sp
   113f0:	mov	r0, r4
   113f4:	bl	110c0 <rb_read@plt>
   113f8:	cmp	r0, #0
   113fc:	bgt	113e8 <__errno_location@plt+0x184>
   11400:	beq	1143c <__errno_location@plt+0x1d8>
   11404:	blt	11428 <__errno_location@plt+0x1c4>
   11408:	mov	r3, #0
   1140c:	ldr	r2, [pc, #48]	; 11444 <__errno_location@plt+0x1e0>
   11410:	mov	r1, #1
   11414:	mov	r0, r4
   11418:	bl	10fd0 <rb_setselect@plt>
   1141c:	add	sp, sp, #16384	; 0x4000
   11420:	add	sp, sp, #4
   11424:	pop	{r4, r5, pc}
   11428:	bl	11264 <__errno_location@plt>
   1142c:	ldr	r0, [r0]
   11430:	bl	10fa0 <rb_ignore_errno@plt>
   11434:	cmp	r0, #0
   11438:	bne	11408 <__errno_location@plt+0x1a4>
   1143c:	mov	r0, #0
   11440:	bl	11258 <exit@plt>
   11444:	ldrdeq	r1, [r1], -r4
   11448:	subs	r0, r1, #0
   1144c:	bxeq	lr
   11450:	push	{r4, lr}
   11454:	bl	1109c <free@plt>
   11458:	pop	{r4, pc}
   1145c:	ldr	r3, [pc, #164]	; 11508 <__errno_location@plt+0x2a4>
   11460:	ldr	r3, [r3]
   11464:	cmp	r3, #0
   11468:	beq	114f4 <__errno_location@plt+0x290>
   1146c:	push	{r4, r5, r6, lr}
   11470:	ldr	r5, [r3, #8]
   11474:	b	11498 <__errno_location@plt+0x234>
   11478:	cmp	r4, #0
   1147c:	beq	11488 <__errno_location@plt+0x224>
   11480:	mov	r0, r4
   11484:	bl	1109c <free@plt>
   11488:	cmp	r5, #0
   1148c:	beq	114e0 <__errno_location@plt+0x27c>
   11490:	mov	r3, r5
   11494:	ldr	r5, [r5, #8]
   11498:	ldr	r4, [r3]
   1149c:	ldr	r0, [r4, #16]
   114a0:	bl	11144 <rb_free_rawbuffer@plt>
   114a4:	ldr	r0, [r4, #20]
   114a8:	bl	11144 <rb_free_rawbuffer@plt>
   114ac:	ldrb	r3, [r4, #72]	; 0x48
   114b0:	tst	r3, #2
   114b4:	beq	11478 <__errno_location@plt+0x214>
   114b8:	ldr	r6, [r4, #76]	; 0x4c
   114bc:	mov	r0, r6
   114c0:	bl	10fb8 <inflateEnd@plt>
   114c4:	add	r0, r6, #56	; 0x38
   114c8:	bl	110b4 <deflateEnd@plt>
   114cc:	cmp	r6, #0
   114d0:	beq	11478 <__errno_location@plt+0x214>
   114d4:	mov	r0, r6
   114d8:	bl	1109c <free@plt>
   114dc:	b	11478 <__errno_location@plt+0x214>
   114e0:	ldr	r3, [pc, #32]	; 11508 <__errno_location@plt+0x2a4>
   114e4:	mov	r2, #0
   114e8:	str	r2, [r3]
   114ec:	str	r2, [r3, #4]
   114f0:	pop	{r4, r5, r6, pc}
   114f4:	ldr	r3, [pc, #12]	; 11508 <__errno_location@plt+0x2a4>
   114f8:	mov	r2, #0
   114fc:	str	r2, [r3]
   11500:	str	r2, [r3, #4]
   11504:	bx	lr
   11508:	andeq	r4, r2, r0, lsr r1
   1150c:	push	{r4, lr}
   11510:	mul	r1, r2, r1
   11514:	mov	r0, #1
   11518:	bl	1103c <calloc@plt>
   1151c:	cmp	r0, #0
   11520:	popne	{r4, pc}
   11524:	bl	11180 <rb_outofmemory@plt>
   11528:	push	{r4, r5, r6, r7, r8, lr}
   1152c:	mov	r7, r0
   11530:	mov	r6, r1
   11534:	mov	r5, r2
   11538:	mov	r1, #80	; 0x50
   1153c:	mov	r0, #1
   11540:	bl	1103c <calloc@plt>
   11544:	subs	r4, r0, #0
   11548:	beq	11590 <__errno_location@plt+0x32c>
   1154c:	str	r7, [r4, #12]
   11550:	bl	111bc <rb_new_rawbuffer@plt>
   11554:	str	r0, [r4, #16]
   11558:	bl	111bc <rb_new_rawbuffer@plt>
   1155c:	str	r0, [r4, #20]
   11560:	str	r6, [r4, #28]
   11564:	str	r5, [r4, #32]
   11568:	mvn	r3, #0
   1156c:	str	r3, [r4, #24]
   11570:	mov	r3, #0
   11574:	str	r3, [r4, #76]	; 0x4c
   11578:	mov	r0, r6
   1157c:	bl	11048 <rb_set_nb@plt>
   11580:	mov	r0, r5
   11584:	bl	11048 <rb_set_nb@plt>
   11588:	mov	r0, r4
   1158c:	pop	{r4, r5, r6, r7, r8, pc}
   11590:	bl	11180 <rb_outofmemory@plt>
   11594:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11598:	sub	sp, sp, #20
   1159c:	mov	r9, r1
   115a0:	ldr	r5, [r1, #36]	; 0x24
   115a4:	cmp	r5, #0
   115a8:	beq	116e4 <__errno_location@plt+0x480>
   115ac:	ldr	r7, [r5, #8]
   115b0:	ldr	fp, [pc, #344]	; 11710 <__errno_location@plt+0x4ac>
   115b4:	add	r3, r1, #36	; 0x24
   115b8:	str	r3, [sp, #12]
   115bc:	mov	sl, #0
   115c0:	b	115f8 <__errno_location@plt+0x394>
   115c4:	ldr	r3, [pc, #328]	; 11714 <__errno_location@plt+0x4b0>
   115c8:	mov	r2, #236	; 0xec
   115cc:	ldr	r1, [pc, #324]	; 11718 <__errno_location@plt+0x4b4>
   115d0:	ldr	r0, [pc, #324]	; 1171c <__errno_location@plt+0x4b8>
   115d4:	bl	11060 <__assert_fail@plt>
   115d8:	cmp	r8, #0
   115dc:	beq	116dc <__errno_location@plt+0x478>
   115e0:	cmp	r8, #0
   115e4:	blt	116c8 <__errno_location@plt+0x464>
   115e8:	cmp	r7, #0
   115ec:	beq	116e4 <__errno_location@plt+0x480>
   115f0:	mov	r5, r7
   115f4:	ldr	r7, [r7, #8]
   115f8:	ldr	r4, [r5]
   115fc:	ldr	r3, [r4, #12]
   11600:	ldr	r2, [r4, #36]	; 0x24
   11604:	ldr	r1, [fp, #12]
   11608:	str	r1, [sp, #4]
   1160c:	ldr	r1, [r4, #16]
   11610:	str	r1, [sp]
   11614:	add	r1, r4, #20
   11618:	ldr	r0, [r9, #16]
   1161c:	bl	10ff4 <rb_send_fd_buf@plt>
   11620:	subs	r8, r0, #0
   11624:	ble	115d8 <__errno_location@plt+0x374>
   11628:	ldr	r3, [sp, #12]
   1162c:	cmp	r3, #0
   11630:	beq	115c4 <__errno_location@plt+0x360>
   11634:	ldr	r3, [r5, #8]
   11638:	cmp	r3, #0
   1163c:	ldrne	r2, [r5, #4]
   11640:	strne	r2, [r3, #4]
   11644:	ldreq	r3, [r5, #4]
   11648:	streq	r3, [r9, #40]	; 0x28
   1164c:	ldr	r3, [r5, #4]
   11650:	cmp	r3, #0
   11654:	ldrne	r2, [r5, #8]
   11658:	strne	r2, [r3, #8]
   1165c:	ldreq	r3, [r5, #8]
   11660:	streq	r3, [r9, #36]	; 0x24
   11664:	str	sl, [r5, #4]
   11668:	str	sl, [r5, #8]
   1166c:	ldr	r3, [r9, #44]	; 0x2c
   11670:	sub	r3, r3, #1
   11674:	str	r3, [r9, #44]	; 0x2c
   11678:	ldr	r3, [r4, #36]	; 0x24
   1167c:	cmp	r3, #0
   11680:	ble	116a4 <__errno_location@plt+0x440>
   11684:	add	r6, r4, #20
   11688:	mov	r5, #0
   1168c:	ldr	r0, [r6], #4
   11690:	bl	110fc <rb_close@plt>
   11694:	add	r5, r5, #1
   11698:	ldr	r3, [r4, #36]	; 0x24
   1169c:	cmp	r3, r5
   116a0:	bgt	1168c <__errno_location@plt+0x428>
   116a4:	ldr	r0, [r4, #12]
   116a8:	cmp	r0, #0
   116ac:	beq	116b4 <__errno_location@plt+0x450>
   116b0:	bl	1109c <free@plt>
   116b4:	cmp	r4, #0
   116b8:	beq	115e0 <__errno_location@plt+0x37c>
   116bc:	mov	r0, r4
   116c0:	bl	1109c <free@plt>
   116c4:	b	115e0 <__errno_location@plt+0x37c>
   116c8:	bl	11264 <__errno_location@plt>
   116cc:	ldr	r0, [r0]
   116d0:	bl	10fa0 <rb_ignore_errno@plt>
   116d4:	cmp	r0, #0
   116d8:	bne	115e8 <__errno_location@plt+0x384>
   116dc:	mov	r0, #0
   116e0:	bl	11258 <exit@plt>
   116e4:	ldr	r3, [r9, #44]	; 0x2c
   116e8:	cmp	r3, #0
   116ec:	bne	116f8 <__errno_location@plt+0x494>
   116f0:	add	sp, sp, #20
   116f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   116f8:	mov	r3, r9
   116fc:	ldr	r2, [pc, #28]	; 11720 <__errno_location@plt+0x4bc>
   11700:	mov	r1, #2
   11704:	ldr	r0, [r9, #16]
   11708:	bl	10fd0 <rb_setselect@plt>
   1170c:	b	116f0 <__errno_location@plt+0x48c>
   11710:	andeq	r4, r2, r0, lsr r1
   11714:			; <UNDEFINED> instruction: 0x000132b8
   11718:	andeq	r3, r1, r4, ror #5
   1171c:	andeq	r3, r1, r0, lsl #6
   11720:	muleq	r1, r4, r5
   11724:	push	{r4, r5, r6, r7, r8, lr}
   11728:	mov	r5, r0
   1172c:	mov	r7, r1
   11730:	mov	r6, r2
   11734:	mov	r1, #40	; 0x28
   11738:	mov	r0, #1
   1173c:	bl	1103c <calloc@plt>
   11740:	subs	r4, r0, #0
   11744:	beq	117cc <__errno_location@plt+0x568>
   11748:	mov	r1, r6
   1174c:	mov	r0, #1
   11750:	bl	1103c <calloc@plt>
   11754:	cmp	r0, #0
   11758:	beq	117d0 <__errno_location@plt+0x56c>
   1175c:	str	r0, [r4, #12]
   11760:	str	r6, [r4, #16]
   11764:	mov	r2, r6
   11768:	mov	r1, r7
   1176c:	bl	110f0 <memcpy@plt>
   11770:	mov	r3, #0
   11774:	str	r3, [r4, #36]	; 0x24
   11778:	add	r3, r5, #36	; 0x24
   1177c:	cmp	r4, #0
   11780:	beq	117d4 <__errno_location@plt+0x570>
   11784:	cmp	r3, #0
   11788:	beq	117e8 <__errno_location@plt+0x584>
   1178c:	str	r4, [r4]
   11790:	mov	r3, #0
   11794:	str	r3, [r4, #8]
   11798:	ldr	r3, [r5, #40]	; 0x28
   1179c:	str	r3, [r4, #4]
   117a0:	cmp	r3, #0
   117a4:	strne	r4, [r3, #8]
   117a8:	beq	117fc <__errno_location@plt+0x598>
   117ac:	str	r4, [r5, #40]	; 0x28
   117b0:	ldr	r3, [r5, #44]	; 0x2c
   117b4:	add	r3, r3, #1
   117b8:	str	r3, [r5, #44]	; 0x2c
   117bc:	mov	r1, r5
   117c0:	ldr	r0, [r5, #16]
   117c4:	bl	11594 <__errno_location@plt+0x330>
   117c8:	pop	{r4, r5, r6, r7, r8, pc}
   117cc:	bl	11180 <rb_outofmemory@plt>
   117d0:	bl	11180 <rb_outofmemory@plt>
   117d4:	ldr	r3, [pc, #48]	; 1180c <__errno_location@plt+0x5a8>
   117d8:	mov	r2, #211	; 0xd3
   117dc:	ldr	r1, [pc, #44]	; 11810 <__errno_location@plt+0x5ac>
   117e0:	ldr	r0, [pc, #44]	; 11814 <__errno_location@plt+0x5b0>
   117e4:	bl	11060 <__assert_fail@plt>
   117e8:	ldr	r3, [pc, #28]	; 1180c <__errno_location@plt+0x5a8>
   117ec:	mov	r2, #212	; 0xd4
   117f0:	ldr	r1, [pc, #24]	; 11810 <__errno_location@plt+0x5ac>
   117f4:	ldr	r0, [pc, #28]	; 11818 <__errno_location@plt+0x5b4>
   117f8:	bl	11060 <__assert_fail@plt>
   117fc:	ldr	r3, [r5, #36]	; 0x24
   11800:	cmp	r3, #0
   11804:	streq	r4, [r5, #36]	; 0x24
   11808:	b	117ac <__errno_location@plt+0x548>
   1180c:	andeq	r3, r1, r8, asr #5
   11810:	andeq	r3, r1, r4, ror #5
   11814:	andeq	r3, r1, r0, lsl r3
   11818:	andeq	r3, r1, r0, lsl #6
   1181c:	ldrb	r3, [r0, #72]	; 0x48
   11820:	tst	r3, #1
   11824:	bxeq	lr
   11828:	push	{r4, lr}
   1182c:	sub	sp, sp, #768	; 0x300
   11830:	mov	r4, r0
   11834:	ldr	r0, [r0, #28]
   11838:	bl	110e4 <rb_ssl_get_cipher@plt>
   1183c:	subs	r1, r0, #0
   11840:	beq	11888 <__errno_location@plt+0x624>
   11844:	mov	r2, #256	; 0x100
   11848:	mov	r0, sp
   1184c:	bl	1106c <rb_strlcpy@plt>
   11850:	mov	r3, #67	; 0x43
   11854:	strb	r3, [sp, #256]	; 0x100
   11858:	ldr	r3, [r4, #24]
   1185c:	str	r3, [sp, #257]	; 0x101
   11860:	mov	r1, sp
   11864:	add	r3, sp, #256	; 0x100
   11868:	add	r0, r3, #5
   1186c:	bl	11120 <strcpy@plt>
   11870:	mov	r0, sp
   11874:	bl	110d8 <strlen@plt>
   11878:	add	r2, r0, #6
   1187c:	add	r1, sp, #256	; 0x100
   11880:	ldr	r0, [r4, #12]
   11884:	bl	11724 <__errno_location@plt+0x4c0>
   11888:	add	sp, sp, #768	; 0x300
   1188c:	pop	{r4, pc}
   11890:	push	{r4, lr}
   11894:	sub	sp, sp, #80	; 0x50
   11898:	mov	r4, r0
   1189c:	ldr	r3, [pc, #80]	; 118f4 <__errno_location@plt+0x690>
   118a0:	ldr	r2, [r3, #16]
   118a4:	add	r1, sp, #13
   118a8:	ldr	r0, [r0, #28]
   118ac:	bl	11078 <rb_get_ssl_certfp@plt>
   118b0:	cmp	r0, #0
   118b4:	bne	118c0 <__errno_location@plt+0x65c>
   118b8:	add	sp, sp, #80	; 0x50
   118bc:	pop	{r4, pc}
   118c0:	mov	r3, #70	; 0x46
   118c4:	strb	r3, [sp]
   118c8:	ldr	r3, [r4, #24]
   118cc:	str	r3, [sp, #1]
   118d0:	ldr	r3, [pc, #28]	; 118f4 <__errno_location@plt+0x690>
   118d4:	ldr	r3, [r3, #16]
   118d8:	str	r3, [sp, #5]
   118dc:	str	r0, [sp, #9]
   118e0:	add	r2, r0, #13
   118e4:	mov	r1, sp
   118e8:	ldr	r0, [r4, #12]
   118ec:	bl	11724 <__errno_location@plt+0x4c0>
   118f0:	b	118b8 <__errno_location@plt+0x654>
   118f4:	andeq	r4, r2, r0, lsr r1
   118f8:	push	{r4, r5, lr}
   118fc:	sub	sp, sp, #548	; 0x224
   11900:	ldr	lr, [r1, #12]
   11904:	ldr	ip, [lr, #1]
   11908:	ldr	r3, [pc, #204]	; 119dc <__errno_location@plt+0x778>
   1190c:	umull	r2, r3, r3, ip
   11910:	lsr	r2, r3, #7
   11914:	mov	r3, #2000	; 0x7d0
   11918:	mul	r3, r3, r2
   1191c:	sub	r3, ip, r3
   11920:	add	r3, r3, r3, lsl #1
   11924:	ldr	r2, [pc, #180]	; 119e0 <__errno_location@plt+0x77c>
   11928:	add	r3, r2, r3, lsl #2
   1192c:	ldr	r2, [r3, #20]
   11930:	cmp	r2, #0
   11934:	bne	11948 <__errno_location@plt+0x6e4>
   11938:	b	119d4 <__errno_location@plt+0x770>
   1193c:	ldr	r2, [r2, #8]
   11940:	cmp	r2, #0
   11944:	beq	119d4 <__errno_location@plt+0x770>
   11948:	ldr	r4, [r2]
   1194c:	ldr	r1, [r4, #24]
   11950:	cmp	ip, r1
   11954:	bne	1193c <__errno_location@plt+0x6d8>
   11958:	ldrb	r3, [r4, #72]	; 0x48
   1195c:	tst	r3, #8
   11960:	bne	1193c <__errno_location@plt+0x6d8>
   11964:	cmp	r4, #0
   11968:	beq	119d4 <__errno_location@plt+0x770>
   1196c:	mov	r5, r0
   11970:	ldrd	r2, [r4, #40]	; 0x28
   11974:	strd	r2, [sp, #24]
   11978:	ldrd	r2, [r4, #56]	; 0x38
   1197c:	strd	r2, [sp, #16]
   11980:	ldrd	r2, [r4, #48]	; 0x30
   11984:	strd	r2, [sp, #8]
   11988:	ldrd	r2, [r4, #64]	; 0x40
   1198c:	strd	r2, [sp]
   11990:	add	r3, lr, #5
   11994:	ldr	r2, [pc, #72]	; 119e4 <__errno_location@plt+0x780>
   11998:	mov	r1, #512	; 0x200
   1199c:	add	r0, sp, #32
   119a0:	bl	11210 <snprintf@plt>
   119a4:	mov	r2, #0
   119a8:	mov	r3, #0
   119ac:	strd	r2, [r4, #64]	; 0x40
   119b0:	strd	r2, [r4, #56]	; 0x38
   119b4:	strd	r2, [r4, #48]	; 0x30
   119b8:	strd	r2, [r4, #40]	; 0x28
   119bc:	add	r0, sp, #32
   119c0:	bl	110d8 <strlen@plt>
   119c4:	add	r2, r0, #1
   119c8:	add	r1, sp, #32
   119cc:	mov	r0, r5
   119d0:	bl	11724 <__errno_location@plt+0x4c0>
   119d4:	add	sp, sp, #548	; 0x224
   119d8:	pop	{r4, r5, pc}
   119dc:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   119e0:	andeq	r4, r2, r0, lsr r1
   119e4:	andeq	r3, r1, ip, lsl r3
   119e8:	push	{r4, lr}
   119ec:	str	r1, [r0, #24]
   119f0:	ldr	r3, [pc, #192]	; 11ab8 <__errno_location@plt+0x854>
   119f4:	umull	r2, r3, r3, r1
   119f8:	lsr	r3, r3, #7
   119fc:	mov	r2, #2000	; 0x7d0
   11a00:	mul	r3, r2, r3
   11a04:	sub	r3, r1, r3
   11a08:	cmp	r0, #0
   11a0c:	beq	11a6c <__errno_location@plt+0x808>
   11a10:	cmp	r0, #0
   11a14:	beq	11a80 <__errno_location@plt+0x81c>
   11a18:	str	r0, [r0]
   11a1c:	mov	r2, #0
   11a20:	str	r2, [r0, #4]
   11a24:	add	r2, r3, r3, lsl #1
   11a28:	ldr	r1, [pc, #140]	; 11abc <__errno_location@plt+0x858>
   11a2c:	add	r2, r1, r2, lsl #2
   11a30:	ldr	r1, [r2, #20]
   11a34:	str	r1, [r0, #8]
   11a38:	ldr	r2, [r2, #20]
   11a3c:	cmp	r2, #0
   11a40:	strne	r0, [r2, #4]
   11a44:	beq	11a94 <__errno_location@plt+0x830>
   11a48:	ldr	r1, [pc, #108]	; 11abc <__errno_location@plt+0x858>
   11a4c:	lsl	ip, r3, #1
   11a50:	add	r2, ip, r3
   11a54:	add	r2, r1, r2, lsl #2
   11a58:	str	r0, [r2, #20]
   11a5c:	ldr	r3, [r2, #28]
   11a60:	add	r3, r3, #1
   11a64:	str	r3, [r2, #28]
   11a68:	pop	{r4, pc}
   11a6c:	ldr	r3, [pc, #76]	; 11ac0 <__errno_location@plt+0x85c>
   11a70:	mov	r2, #143	; 0x8f
   11a74:	ldr	r1, [pc, #72]	; 11ac4 <__errno_location@plt+0x860>
   11a78:	ldr	r0, [pc, #72]	; 11ac8 <__errno_location@plt+0x864>
   11a7c:	bl	11060 <__assert_fail@plt>
   11a80:	ldr	r3, [pc, #56]	; 11ac0 <__errno_location@plt+0x85c>
   11a84:	mov	r2, #144	; 0x90
   11a88:	ldr	r1, [pc, #52]	; 11ac4 <__errno_location@plt+0x860>
   11a8c:	ldr	r0, [pc, #56]	; 11acc <__errno_location@plt+0x868>
   11a90:	bl	11060 <__assert_fail@plt>
   11a94:	add	r2, r3, r3, lsl #1
   11a98:	ldr	r1, [pc, #28]	; 11abc <__errno_location@plt+0x858>
   11a9c:	add	r2, r1, r2, lsl #2
   11aa0:	ldr	r2, [r2, #24]
   11aa4:	cmp	r2, #0
   11aa8:	addeq	r2, r3, r3, lsl #1
   11aac:	addeq	r2, r1, r2, lsl #2
   11ab0:	streq	r0, [r2, #24]
   11ab4:	b	11a48 <__errno_location@plt+0x7e4>
   11ab8:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   11abc:	andeq	r4, r2, r0, lsr r1
   11ac0:	ldrdeq	r3, [r1], -r8
   11ac4:	andeq	r3, r1, r4, ror #5
   11ac8:	andeq	r3, r1, r8, lsr r3
   11acc:	andeq	r3, r1, r0, lsl r3
   11ad0:	push	{r4, r5, lr}
   11ad4:	sub	sp, sp, #16384	; 0x4000
   11ad8:	sub	sp, sp, #4
   11adc:	subs	r4, r1, #0
   11ae0:	beq	11b2c <__errno_location@plt+0x8c8>
   11ae4:	mov	r5, #16384	; 0x4000
   11ae8:	mov	r2, r5
   11aec:	mov	r1, sp
   11af0:	ldr	r0, [r4, #32]
   11af4:	bl	110c0 <rb_read@plt>
   11af8:	cmp	r0, #0
   11afc:	beq	11b38 <__errno_location@plt+0x8d4>
   11b00:	bge	11ae8 <__errno_location@plt+0x884>
   11b04:	bl	11264 <__errno_location@plt>
   11b08:	ldr	r0, [r0]
   11b0c:	bl	10fa0 <rb_ignore_errno@plt>
   11b10:	cmp	r0, #0
   11b14:	beq	11b38 <__errno_location@plt+0x8d4>
   11b18:	mov	r3, r4
   11b1c:	ldr	r2, [pc, #140]	; 11bb0 <__errno_location@plt+0x94c>
   11b20:	mov	r1, #1
   11b24:	ldr	r0, [r4, #32]
   11b28:	bl	10fd0 <rb_setselect@plt>
   11b2c:	add	sp, sp, #16384	; 0x4000
   11b30:	add	sp, sp, #4
   11b34:	pop	{r4, r5, pc}
   11b38:	ldr	r0, [r4, #32]
   11b3c:	bl	110fc <rb_close@plt>
   11b40:	cmp	r4, #0
   11b44:	beq	11b84 <__errno_location@plt+0x920>
   11b48:	str	r4, [r4]
   11b4c:	mov	r3, #0
   11b50:	str	r3, [r4, #4]
   11b54:	ldr	r3, [pc, #88]	; 11bb4 <__errno_location@plt+0x950>
   11b58:	ldr	r3, [r3]
   11b5c:	str	r3, [r4, #8]
   11b60:	cmp	r3, #0
   11b64:	strne	r4, [r3, #4]
   11b68:	beq	11b98 <__errno_location@plt+0x934>
   11b6c:	ldr	r3, [pc, #64]	; 11bb4 <__errno_location@plt+0x950>
   11b70:	str	r4, [r3]
   11b74:	ldr	r2, [r3, #8]
   11b78:	add	r2, r2, #1
   11b7c:	str	r2, [r3, #8]
   11b80:	b	11b2c <__errno_location@plt+0x8c8>
   11b84:	ldr	r3, [pc, #44]	; 11bb8 <__errno_location@plt+0x954>
   11b88:	mov	r2, #144	; 0x90
   11b8c:	ldr	r1, [pc, #40]	; 11bbc <__errno_location@plt+0x958>
   11b90:	ldr	r0, [pc, #40]	; 11bc0 <__errno_location@plt+0x95c>
   11b94:	bl	11060 <__assert_fail@plt>
   11b98:	ldr	r3, [pc, #20]	; 11bb4 <__errno_location@plt+0x950>
   11b9c:	ldr	r3, [r3, #4]
   11ba0:	cmp	r3, #0
   11ba4:	ldreq	r3, [pc, #8]	; 11bb4 <__errno_location@plt+0x950>
   11ba8:	streq	r4, [r3, #4]
   11bac:	b	11b6c <__errno_location@plt+0x908>
   11bb0:	ldrdeq	r1, [r1], -r0
   11bb4:	andeq	r4, r2, r0, lsr r1
   11bb8:	ldrdeq	r3, [r1], -r8
   11bbc:	andeq	r3, r1, r4, ror #5
   11bc0:	andeq	r3, r1, r0, lsl r3
   11bc4:	push	{r2, r3}
   11bc8:	push	{r4, r5, lr}
   11bcc:	sub	sp, sp, #396	; 0x18c
   11bd0:	ldrb	r3, [r0, #72]	; 0x48
   11bd4:	tst	r3, #8
   11bd8:	beq	11bec <__errno_location@plt+0x988>
   11bdc:	add	sp, sp, #396	; 0x18c
   11be0:	pop	{r4, r5, lr}
   11be4:	add	sp, sp, #8
   11be8:	bx	lr
   11bec:	mov	r5, r1
   11bf0:	mov	r4, r0
   11bf4:	ldr	r1, [r0, #28]
   11bf8:	ldr	r0, [r0, #16]
   11bfc:	bl	11240 <rb_rawbuf_flush@plt>
   11c00:	ldr	r1, [r4, #32]
   11c04:	ldr	r0, [r4, #20]
   11c08:	bl	11240 <rb_rawbuf_flush@plt>
   11c0c:	ldr	r0, [r4, #28]
   11c10:	bl	110fc <rb_close@plt>
   11c14:	ldrb	r3, [r4, #72]	; 0x48
   11c18:	orr	r2, r3, #8
   11c1c:	strb	r2, [r4, #72]	; 0x48
   11c20:	tst	r3, #64	; 0x40
   11c24:	beq	11c8c <__errno_location@plt+0xa28>
   11c28:	ldr	r3, [sp, #408]	; 0x198
   11c2c:	cmp	r3, #0
   11c30:	cmpne	r5, #0
   11c34:	bne	11d78 <__errno_location@plt+0xb14>
   11c38:	ldr	r0, [r4, #32]
   11c3c:	bl	110fc <rb_close@plt>
   11c40:	cmp	r4, #0
   11c44:	beq	11d38 <__errno_location@plt+0xad4>
   11c48:	cmp	r4, #0
   11c4c:	beq	11d4c <__errno_location@plt+0xae8>
   11c50:	str	r4, [r4]
   11c54:	mov	r3, #0
   11c58:	str	r3, [r4, #4]
   11c5c:	ldr	r3, [pc, #400]	; 11df4 <__errno_location@plt+0xb90>
   11c60:	ldr	r3, [r3]
   11c64:	str	r3, [r4, #8]
   11c68:	cmp	r3, #0
   11c6c:	strne	r4, [r3, #4]
   11c70:	beq	11d60 <__errno_location@plt+0xafc>
   11c74:	ldr	r3, [pc, #376]	; 11df4 <__errno_location@plt+0xb90>
   11c78:	str	r4, [r3]
   11c7c:	ldr	r2, [r3, #8]
   11c80:	add	r2, r2, #1
   11c84:	str	r2, [r3, #8]
   11c88:	b	11bdc <__errno_location@plt+0x978>
   11c8c:	ldr	r1, [r4, #24]
   11c90:	ldr	r3, [pc, #352]	; 11df8 <__errno_location@plt+0xb94>
   11c94:	umull	r2, r3, r3, r1
   11c98:	lsr	r3, r3, #7
   11c9c:	mov	r2, #2000	; 0x7d0
   11ca0:	mul	r3, r2, r3
   11ca4:	sub	r3, r1, r3
   11ca8:	cmp	r4, #0
   11cac:	beq	11d24 <__errno_location@plt+0xac0>
   11cb0:	ldr	r2, [r4, #8]
   11cb4:	cmp	r2, #0
   11cb8:	ldrne	r1, [r4, #4]
   11cbc:	strne	r1, [r2, #4]
   11cc0:	ldreq	r0, [r4, #4]
   11cc4:	addeq	r2, r3, r3, lsl #1
   11cc8:	ldreq	r1, [pc, #292]	; 11df4 <__errno_location@plt+0xb90>
   11ccc:	addeq	r2, r1, r2, lsl #2
   11cd0:	streq	r0, [r2, #24]
   11cd4:	ldr	r2, [r4, #4]
   11cd8:	cmp	r2, #0
   11cdc:	ldrne	r1, [r4, #8]
   11ce0:	strne	r1, [r2, #8]
   11ce4:	ldreq	r0, [r4, #8]
   11ce8:	addeq	r2, r3, r3, lsl #1
   11cec:	ldreq	r1, [pc, #256]	; 11df4 <__errno_location@plt+0xb90>
   11cf0:	addeq	r2, r1, r2, lsl #2
   11cf4:	streq	r0, [r2, #20]
   11cf8:	mov	r2, #0
   11cfc:	str	r2, [r4, #4]
   11d00:	str	r2, [r4, #8]
   11d04:	ldr	r2, [pc, #232]	; 11df4 <__errno_location@plt+0xb90>
   11d08:	lsl	r1, r3, #1
   11d0c:	add	r0, r1, r3
   11d10:	add	r0, r2, r0, lsl #2
   11d14:	ldr	r3, [r0, #28]
   11d18:	sub	r3, r3, #1
   11d1c:	str	r3, [r0, #28]
   11d20:	b	11c28 <__errno_location@plt+0x9c4>
   11d24:	ldr	r3, [pc, #208]	; 11dfc <__errno_location@plt+0xb98>
   11d28:	mov	r2, #235	; 0xeb
   11d2c:	ldr	r1, [pc, #204]	; 11e00 <__errno_location@plt+0xb9c>
   11d30:	ldr	r0, [pc, #204]	; 11e04 <__errno_location@plt+0xba0>
   11d34:	bl	11060 <__assert_fail@plt>
   11d38:	ldr	r3, [pc, #200]	; 11e08 <__errno_location@plt+0xba4>
   11d3c:	mov	r2, #143	; 0x8f
   11d40:	ldr	r1, [pc, #184]	; 11e00 <__errno_location@plt+0xb9c>
   11d44:	ldr	r0, [pc, #192]	; 11e0c <__errno_location@plt+0xba8>
   11d48:	bl	11060 <__assert_fail@plt>
   11d4c:	ldr	r3, [pc, #180]	; 11e08 <__errno_location@plt+0xba4>
   11d50:	mov	r2, #144	; 0x90
   11d54:	ldr	r1, [pc, #164]	; 11e00 <__errno_location@plt+0xb9c>
   11d58:	ldr	r0, [pc, #164]	; 11e04 <__errno_location@plt+0xba0>
   11d5c:	bl	11060 <__assert_fail@plt>
   11d60:	ldr	r3, [pc, #140]	; 11df4 <__errno_location@plt+0xb90>
   11d64:	ldr	r3, [r3, #4]
   11d68:	cmp	r3, #0
   11d6c:	ldreq	r3, [pc, #128]	; 11df4 <__errno_location@plt+0xb90>
   11d70:	streq	r4, [r3, #4]
   11d74:	b	11c74 <__errno_location@plt+0xa10>
   11d78:	mov	r3, r4
   11d7c:	ldr	r2, [pc, #140]	; 11e10 <__errno_location@plt+0xbac>
   11d80:	mov	r1, #1
   11d84:	ldr	r0, [r4, #32]
   11d88:	bl	10fd0 <rb_setselect@plt>
   11d8c:	mov	r3, #0
   11d90:	mov	r2, r3
   11d94:	mov	r1, #2
   11d98:	ldr	r0, [r4, #32]
   11d9c:	bl	10fd0 <rb_setselect@plt>
   11da0:	add	r3, sp, #412	; 0x19c
   11da4:	str	r3, [sp, #388]	; 0x184
   11da8:	ldr	r2, [sp, #408]	; 0x198
   11dac:	mov	r1, #128	; 0x80
   11db0:	add	r0, sp, #260	; 0x104
   11db4:	bl	11000 <vsnprintf@plt>
   11db8:	mov	r3, #68	; 0x44
   11dbc:	strb	r3, [sp, #4]
   11dc0:	ldr	r3, [r4, #24]
   11dc4:	str	r3, [sp, #5]
   11dc8:	mov	r2, #251	; 0xfb
   11dcc:	add	r1, sp, #260	; 0x104
   11dd0:	add	r0, sp, #9
   11dd4:	bl	1106c <rb_strlcpy@plt>
   11dd8:	add	r0, sp, #260	; 0x104
   11ddc:	bl	110d8 <strlen@plt>
   11de0:	add	r2, r0, #6
   11de4:	add	r1, sp, #4
   11de8:	ldr	r0, [r4, #12]
   11dec:	bl	11724 <__errno_location@plt+0x4c0>
   11df0:	b	11bdc <__errno_location@plt+0x978>
   11df4:	andeq	r4, r2, r0, lsr r1
   11df8:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   11dfc:			; <UNDEFINED> instruction: 0x000132b8
   11e00:	andeq	r3, r1, r4, ror #5
   11e04:	andeq	r3, r1, r0, lsl r3
   11e08:	ldrdeq	r3, [r1], -r8
   11e0c:	andeq	r3, r1, r8, lsr r3
   11e10:	ldrdeq	r1, [r1], -r0
   11e14:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11e18:	mov	r6, #0
   11e1c:	ldr	sl, [pc, #124]	; 11ea0 <__errno_location@plt+0xc3c>
   11e20:	ldr	r8, [pc, #124]	; 11ea4 <__errno_location@plt+0xc40>
   11e24:	mov	r7, #1
   11e28:	ldr	r9, [pc, #120]	; 11ea8 <__errno_location@plt+0xc44>
   11e2c:	b	11e88 <__errno_location@plt+0xc24>
   11e30:	ldr	r0, [r5, #28]
   11e34:	bl	1112c <rb_ssl_clear_handshake_count@plt>
   11e38:	cmp	r4, #0
   11e3c:	beq	11e7c <__errno_location@plt+0xc18>
   11e40:	mov	r3, r4
   11e44:	ldr	r4, [r4, #8]
   11e48:	ldr	r5, [r3]
   11e4c:	ldrb	r3, [r5, #72]	; 0x48
   11e50:	tst	r3, #1
   11e54:	beq	11e38 <__errno_location@plt+0xbd4>
   11e58:	ldr	r0, [r5, #28]
   11e5c:	bl	10fe8 <rb_ssl_handshake_count@plt>
   11e60:	cmp	r0, #2
   11e64:	bls	11e30 <__errno_location@plt+0xbcc>
   11e68:	mov	r2, r8
   11e6c:	mov	r1, r7
   11e70:	mov	r0, r5
   11e74:	bl	11bc4 <__errno_location@plt+0x960>
   11e78:	b	11e38 <__errno_location@plt+0xbd4>
   11e7c:	add	r6, r6, #12
   11e80:	cmp	r6, r9
   11e84:	beq	11e9c <__errno_location@plt+0xc38>
   11e88:	ldr	r3, [r6, sl]
   11e8c:	cmp	r3, #0
   11e90:	beq	11e7c <__errno_location@plt+0xc18>
   11e94:	ldr	r4, [r3, #8]
   11e98:	b	11e48 <__errno_location@plt+0xbe4>
   11e9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11ea0:	andeq	r4, r2, r4, asr #2
   11ea4:	andeq	r3, r1, r8, asr #6
   11ea8:	andeq	r5, r0, r0, asr #27
   11eac:	push	{r4, r5, r6, lr}
   11eb0:	mov	r5, r0
   11eb4:	mov	r4, r1
   11eb8:	ldrb	r3, [r1, #72]	; 0x48
   11ebc:	tst	r3, #8
   11ec0:	beq	11ed8 <__errno_location@plt+0xc74>
   11ec4:	pop	{r4, r5, r6, pc}
   11ec8:	ldrd	r2, [r4, #64]	; 0x40
   11ecc:	adds	r2, r2, r0
   11ed0:	adc	r3, r3, r0, asr #31
   11ed4:	strd	r2, [r4, #64]	; 0x40
   11ed8:	mov	r1, r5
   11edc:	ldr	r0, [r4, #20]
   11ee0:	bl	11240 <rb_rawbuf_flush@plt>
   11ee4:	cmp	r0, #0
   11ee8:	bgt	11ec8 <__errno_location@plt+0xc64>
   11eec:	beq	11f34 <__errno_location@plt+0xcd0>
   11ef0:	blt	11f20 <__errno_location@plt+0xcbc>
   11ef4:	ldr	r0, [r4, #20]
   11ef8:	bl	11138 <rb_rawbuf_length@plt>
   11efc:	cmp	r0, #0
   11f00:	movgt	r3, r4
   11f04:	ldrgt	r2, [pc, #60]	; 11f48 <__errno_location@plt+0xce4>
   11f08:	movle	r3, #0
   11f0c:	movle	r2, r3
   11f10:	mov	r1, #2
   11f14:	ldr	r0, [r4, #32]
   11f18:	bl	10fd0 <rb_setselect@plt>
   11f1c:	pop	{r4, r5, r6, pc}
   11f20:	bl	11264 <__errno_location@plt>
   11f24:	ldr	r0, [r0]
   11f28:	bl	10fa0 <rb_ignore_errno@plt>
   11f2c:	cmp	r0, #0
   11f30:	bne	11ef4 <__errno_location@plt+0xc90>
   11f34:	mov	r2, #0
   11f38:	mov	r1, r2
   11f3c:	mov	r0, r4
   11f40:	bl	11bc4 <__errno_location@plt+0x960>
   11f44:	pop	{r4, r5, r6, pc}
   11f48:	andeq	r1, r1, ip, lsr #29
   11f4c:	push	{r4, r5, r6, lr}
   11f50:	mov	r5, r0
   11f54:	subs	r4, r1, #0
   11f58:	beq	11f88 <__errno_location@plt+0xd24>
   11f5c:	ldr	r2, [r4, #24]
   11f60:	ldr	r1, [r4, #20]
   11f64:	bl	11528 <__errno_location@plt+0x2c4>
   11f68:	mov	r6, r0
   11f6c:	ldr	r3, [r4, #12]
   11f70:	ldr	r1, [r3, #1]
   11f74:	bl	119e8 <__errno_location@plt+0x784>
   11f78:	ldr	r2, [pc, #28]	; 11f9c <__errno_location@plt+0xd38>
   11f7c:	mov	r1, #1
   11f80:	mov	r0, r6
   11f84:	bl	11bc4 <__errno_location@plt+0x960>
   11f88:	mov	r2, #1
   11f8c:	ldr	r1, [pc, #12]	; 11fa0 <__errno_location@plt+0xd3c>
   11f90:	mov	r0, r5
   11f94:	bl	11724 <__errno_location@plt+0x4c0>
   11f98:	pop	{r4, r5, r6, pc}
   11f9c:	andeq	r3, r1, ip, asr r3
   11fa0:	andeq	r3, r1, r4, lsl #7
   11fa4:	push	{r4, r5, r6, r7, r8, lr}
   11fa8:	sub	sp, sp, #16384	; 0x4000
   11fac:	mov	r4, r0
   11fb0:	mov	r6, r1
   11fb4:	ldr	r3, [r0, #76]	; 0x4c
   11fb8:	str	r1, [r3]
   11fbc:	ldr	r3, [r0, #76]	; 0x4c
   11fc0:	str	r2, [r3, #4]
   11fc4:	ldr	r3, [r0, #76]	; 0x4c
   11fc8:	str	sp, [r3, #12]
   11fcc:	ldr	r3, [r0, #76]	; 0x4c
   11fd0:	mov	r2, #16384	; 0x4000
   11fd4:	str	r2, [r3, #16]
   11fd8:	mov	r5, #0
   11fdc:	mov	r7, r2
   11fe0:	mov	r2, r5
   11fe4:	ldr	r0, [r4, #76]	; 0x4c
   11fe8:	ldr	r3, [r0, #4]
   11fec:	cmp	r3, #0
   11ff0:	beq	12098 <__errno_location@plt+0xe34>
   11ff4:	mov	r1, r5
   11ff8:	bl	11084 <inflate@plt>
   11ffc:	subs	r8, r0, #0
   12000:	bne	1203c <__errno_location@plt+0xdd8>
   12004:	ldr	r3, [r4, #76]	; 0x4c
   12008:	ldr	r2, [r3, #16]
   1200c:	rsb	r2, r2, #16384	; 0x4000
   12010:	ldr	r3, [r3, #4]
   12014:	cmp	r3, #0
   12018:	beq	11fe4 <__errno_location@plt+0xd80>
   1201c:	ldrb	r3, [r4, #72]	; 0x48
   12020:	tst	r3, #8
   12024:	beq	12088 <__errno_location@plt+0xe24>
   12028:	ldr	r3, [r4, #76]	; 0x4c
   1202c:	str	sp, [r3, #12]
   12030:	ldr	r3, [r4, #76]	; 0x4c
   12034:	str	r7, [r3, #16]
   12038:	b	11fe0 <__errno_location@plt+0xd7c>
   1203c:	mov	r2, #6
   12040:	mov	r1, r6
   12044:	ldr	r0, [pc, #120]	; 120c4 <__errno_location@plt+0xe60>
   12048:	bl	1121c <strncmp@plt>
   1204c:	cmp	r0, #0
   12050:	bne	12068 <__errno_location@plt+0xe04>
   12054:	ldr	r2, [pc, #108]	; 120c8 <__errno_location@plt+0xe64>
   12058:	mov	r1, #1
   1205c:	mov	r0, r4
   12060:	bl	11bc4 <__errno_location@plt+0x960>
   12064:	b	120a0 <__errno_location@plt+0xe3c>
   12068:	mov	r0, r8
   1206c:	bl	10f7c <zError@plt>
   12070:	mov	r3, r0
   12074:	ldr	r2, [pc, #80]	; 120cc <__errno_location@plt+0xe68>
   12078:	mov	r1, #1
   1207c:	mov	r0, r4
   12080:	bl	11bc4 <__errno_location@plt+0x960>
   12084:	b	120a0 <__errno_location@plt+0xe3c>
   12088:	mov	r1, sp
   1208c:	ldr	r0, [r4, #20]
   12090:	bl	11234 <rb_rawbuf_append@plt>
   12094:	b	12028 <__errno_location@plt+0xdc4>
   12098:	cmp	r2, #0
   1209c:	bne	120a8 <__errno_location@plt+0xe44>
   120a0:	add	sp, sp, #16384	; 0x4000
   120a4:	pop	{r4, r5, r6, r7, r8, pc}
   120a8:	ldrb	r3, [r4, #72]	; 0x48
   120ac:	tst	r3, #8
   120b0:	bne	120a0 <__errno_location@plt+0xe3c>
   120b4:	mov	r1, sp
   120b8:	ldr	r0, [r4, #20]
   120bc:	bl	11234 <rb_rawbuf_append@plt>
   120c0:	b	120a0 <__errno_location@plt+0xe3c>
   120c4:	andeq	r3, r1, r8, lsl #7
   120c8:	muleq	r1, r0, r3
   120cc:	andeq	r3, r1, ip, lsr #7
   120d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120d4:	sub	sp, sp, #32768	; 0x8000
   120d8:	sub	sp, sp, #4
   120dc:	subs	r4, r1, #0
   120e0:	beq	1227c <__errno_location@plt+0x1018>
   120e4:	ldrb	r3, [r4, #72]	; 0x48
   120e8:	tst	r3, #8
   120ec:	bne	1227c <__errno_location@plt+0x1018>
   120f0:	mov	r0, r4
   120f4:	bl	125ec <__errno_location@plt+0x1388>
   120f8:	cmp	r0, #0
   120fc:	bne	1227c <__errno_location@plt+0x1018>
   12100:	add	r5, sp, #16384	; 0x4000
   12104:	mov	r8, #16384	; 0x4000
   12108:	ldr	r9, [pc, #376]	; 12288 <__errno_location@plt+0x1024>
   1210c:	ldr	fp, [pc, #376]	; 1228c <__errno_location@plt+0x1028>
   12110:	ldr	sl, [pc, #376]	; 12290 <__errno_location@plt+0x102c>
   12114:	b	12230 <__errno_location@plt+0xfcc>
   12118:	bl	11264 <__errno_location@plt>
   1211c:	ldr	r0, [r0]
   12120:	bl	10fa0 <rb_ignore_errno@plt>
   12124:	cmp	r0, #0
   12128:	beq	12150 <__errno_location@plt+0xeec>
   1212c:	mov	r3, r4
   12130:	ldr	r2, [pc, #348]	; 12294 <__errno_location@plt+0x1030>
   12134:	mov	r1, #1
   12138:	ldr	r0, [r4, #32]
   1213c:	bl	10fd0 <rb_setselect@plt>
   12140:	mov	r1, r4
   12144:	ldr	r0, [r4, #28]
   12148:	bl	12298 <__errno_location@plt+0x1034>
   1214c:	b	1227c <__errno_location@plt+0x1018>
   12150:	mov	r2, #0
   12154:	mov	r1, r2
   12158:	mov	r0, r4
   1215c:	bl	11bc4 <__errno_location@plt+0x960>
   12160:	b	1227c <__errno_location@plt+0x1018>
   12164:	ldr	r6, [r4, #76]	; 0x4c
   12168:	str	r5, [r6, #56]	; 0x38
   1216c:	str	r2, [r6, #60]	; 0x3c
   12170:	str	sp, [r6, #68]	; 0x44
   12174:	str	r8, [r6, #72]	; 0x48
   12178:	mov	r1, #2
   1217c:	add	r0, r6, #56	; 0x38
   12180:	bl	11024 <deflate@plt>
   12184:	cmp	r0, #0
   12188:	bne	121b8 <__errno_location@plt+0xf54>
   1218c:	ldr	r2, [r6, #72]	; 0x48
   12190:	cmp	r2, #0
   12194:	beq	121d4 <__errno_location@plt+0xf70>
   12198:	ldr	r3, [r6, #60]	; 0x3c
   1219c:	cmp	r3, #0
   121a0:	beq	121e8 <__errno_location@plt+0xf84>
   121a4:	mov	r2, r9
   121a8:	mov	r1, #1
   121ac:	mov	r0, r4
   121b0:	bl	11bc4 <__errno_location@plt+0x960>
   121b4:	b	12214 <__errno_location@plt+0xfb0>
   121b8:	bl	10f7c <zError@plt>
   121bc:	mov	r3, r0
   121c0:	mov	r2, sl
   121c4:	mov	r1, #1
   121c8:	mov	r0, r4
   121cc:	bl	11bc4 <__errno_location@plt+0x960>
   121d0:	b	12214 <__errno_location@plt+0xfb0>
   121d4:	mov	r2, fp
   121d8:	mov	r1, #1
   121dc:	mov	r0, r4
   121e0:	bl	11bc4 <__errno_location@plt+0x960>
   121e4:	b	12214 <__errno_location@plt+0xfb0>
   121e8:	ldrb	r3, [r4, #72]	; 0x48
   121ec:	tst	r3, #8
   121f0:	bne	12214 <__errno_location@plt+0xfb0>
   121f4:	rsb	r2, r2, #16384	; 0x4000
   121f8:	mov	r1, sp
   121fc:	ldr	r0, [r4, #16]
   12200:	bl	11234 <rb_rawbuf_append@plt>
   12204:	b	12214 <__errno_location@plt+0xfb0>
   12208:	mov	r1, r5
   1220c:	ldr	r0, [r4, #16]
   12210:	bl	11234 <rb_rawbuf_append@plt>
   12214:	ldrb	r3, [r4, #72]	; 0x48
   12218:	tst	r3, #8
   1221c:	bne	1227c <__errno_location@plt+0x1018>
   12220:	mov	r0, r4
   12224:	bl	125ec <__errno_location@plt+0x1388>
   12228:	cmp	r0, #0
   1222c:	bne	1227c <__errno_location@plt+0x1018>
   12230:	ldrb	r3, [r4, #72]	; 0x48
   12234:	tst	r3, #8
   12238:	bne	1227c <__errno_location@plt+0x1018>
   1223c:	mov	r2, r8
   12240:	mov	r1, r5
   12244:	ldr	r0, [r4, #32]
   12248:	bl	110c0 <rb_read@plt>
   1224c:	subs	r2, r0, #0
   12250:	beq	12150 <__errno_location@plt+0xeec>
   12254:	blt	12118 <__errno_location@plt+0xeb4>
   12258:	ldrd	r6, [r4, #56]	; 0x38
   1225c:	adds	r6, r6, r2
   12260:	adc	r7, r7, r2, asr #31
   12264:	strd	r6, [r4, #56]	; 0x38
   12268:	ldrb	r3, [r4, #72]	; 0x48
   1226c:	tst	r3, #2
   12270:	bne	12164 <__errno_location@plt+0xf00>
   12274:	tst	r3, #8
   12278:	beq	12208 <__errno_location@plt+0xfa4>
   1227c:	add	sp, sp, #32768	; 0x8000
   12280:	add	sp, sp, #4
   12284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12288:	strdeq	r3, [r1], -ip
   1228c:	ldrdeq	r3, [r1], -r4
   12290:	andeq	r3, r1, r0, asr #7
   12294:	ldrdeq	r2, [r1], -r0
   12298:	ldrb	r3, [r1, #72]	; 0x48
   1229c:	tst	r3, #8
   122a0:	bxne	lr
   122a4:	push	{r4, r5, r6, lr}
   122a8:	mov	r4, r1
   122ac:	mov	r6, r0
   122b0:	tst	r3, #16
   122b4:	beq	122e8 <__errno_location@plt+0x1084>
   122b8:	bic	r3, r3, #16
   122bc:	strb	r3, [r1, #72]	; 0x48
   122c0:	ldr	r0, [r1, #28]
   122c4:	bl	1243c <__errno_location@plt+0x11d8>
   122c8:	ldrb	r3, [r4, #72]	; 0x48
   122cc:	tst	r3, #8
   122d0:	beq	122e8 <__errno_location@plt+0x1084>
   122d4:	pop	{r4, r5, r6, pc}
   122d8:	ldrd	r2, [r4, #40]	; 0x28
   122dc:	adds	r2, r2, r5
   122e0:	adc	r3, r3, r5, asr #31
   122e4:	strd	r2, [r4, #40]	; 0x28
   122e8:	mov	r1, r6
   122ec:	ldr	r0, [r4, #16]
   122f0:	bl	11240 <rb_rawbuf_flush@plt>
   122f4:	subs	r5, r0, #0
   122f8:	bgt	122d8 <__errno_location@plt+0x1074>
   122fc:	beq	123f4 <__errno_location@plt+0x1190>
   12300:	blt	12368 <__errno_location@plt+0x1104>
   12304:	ldr	r0, [r4, #16]
   12308:	bl	11138 <rb_rawbuf_length@plt>
   1230c:	cmp	r0, #0
   12310:	ble	123dc <__errno_location@plt+0x1178>
   12314:	cmn	r5, #3
   12318:	beq	123a4 <__errno_location@plt+0x1140>
   1231c:	mov	r3, r4
   12320:	ldr	r2, [pc, #260]	; 1242c <__errno_location@plt+0x11c8>
   12324:	mov	r1, #2
   12328:	ldr	r0, [r4, #28]
   1232c:	bl	10fd0 <rb_setselect@plt>
   12330:	ldrb	r3, [r4, #72]	; 0x48
   12334:	tst	r3, #4
   12338:	popeq	{r4, r5, r6, pc}
   1233c:	ldr	r0, [r4, #16]
   12340:	bl	11138 <rb_rawbuf_length@plt>
   12344:	cmp	r0, #0
   12348:	popne	{r4, r5, r6, pc}
   1234c:	ldrb	r3, [r4, #72]	; 0x48
   12350:	bic	r3, r3, #4
   12354:	strb	r3, [r4, #72]	; 0x48
   12358:	mov	r1, r4
   1235c:	ldr	r0, [r4, #32]
   12360:	bl	120d0 <__errno_location@plt+0xe6c>
   12364:	pop	{r4, r5, r6, pc}
   12368:	bl	11264 <__errno_location@plt>
   1236c:	ldr	r0, [r0]
   12370:	bl	10fa0 <rb_ignore_errno@plt>
   12374:	cmp	r0, #0
   12378:	bne	12304 <__errno_location@plt+0x10a0>
   1237c:	ldrb	r3, [r4, #72]	; 0x48
   12380:	cmn	r5, #2
   12384:	movne	r5, #0
   12388:	moveq	r5, #1
   1238c:	tst	r3, r5
   12390:	beq	12408 <__errno_location@plt+0x11a4>
   12394:	ldr	r0, [r4, #28]
   12398:	bl	11150 <rb_get_ssl_strerror@plt>
   1239c:	mov	r3, r0
   123a0:	b	12418 <__errno_location@plt+0x11b4>
   123a4:	mov	r3, r4
   123a8:	ldr	r2, [pc, #124]	; 1242c <__errno_location@plt+0x11c8>
   123ac:	mov	r1, #1
   123b0:	ldr	r0, [r4, #28]
   123b4:	bl	10fd0 <rb_setselect@plt>
   123b8:	mov	r3, #0
   123bc:	mov	r2, r3
   123c0:	mov	r1, #2
   123c4:	ldr	r0, [r4, #28]
   123c8:	bl	10fd0 <rb_setselect@plt>
   123cc:	ldrb	r3, [r4, #72]	; 0x48
   123d0:	orr	r3, r3, #16
   123d4:	strb	r3, [r4, #72]	; 0x48
   123d8:	b	12330 <__errno_location@plt+0x10cc>
   123dc:	mov	r3, #0
   123e0:	mov	r2, r3
   123e4:	mov	r1, #2
   123e8:	ldr	r0, [r4, #28]
   123ec:	bl	10fd0 <rb_setselect@plt>
   123f0:	b	12330 <__errno_location@plt+0x10cc>
   123f4:	ldr	r3, [pc, #52]	; 12430 <__errno_location@plt+0x11cc>
   123f8:	ldr	r2, [pc, #52]	; 12434 <__errno_location@plt+0x11d0>
   123fc:	mov	r1, #1
   12400:	mov	r0, r4
   12404:	bl	11bc4 <__errno_location@plt+0x960>
   12408:	bl	11264 <__errno_location@plt>
   1240c:	ldr	r0, [r0]
   12410:	bl	10f64 <strerror@plt>
   12414:	mov	r3, r0
   12418:	ldr	r2, [pc, #24]	; 12438 <__errno_location@plt+0x11d4>
   1241c:	mov	r1, #1
   12420:	mov	r0, r4
   12424:	bl	11bc4 <__errno_location@plt+0x960>
   12428:	pop	{r4, r5, r6, pc}
   1242c:	muleq	r1, r8, r2
   12430:	andeq	r3, r1, r4, lsr r4
   12434:	ldrdeq	r3, [r1], -r0
   12438:	andeq	r3, r1, r4, lsr #8
   1243c:	push	{r4, r5, r6, lr}
   12440:	sub	sp, sp, #16384	; 0x4000
   12444:	subs	r4, r1, #0
   12448:	beq	125d4 <__errno_location@plt+0x1370>
   1244c:	ldrb	r3, [r4, #72]	; 0x48
   12450:	tst	r3, #8
   12454:	bne	125d4 <__errno_location@plt+0x1370>
   12458:	tst	r3, #32
   1245c:	bne	12468 <__errno_location@plt+0x1204>
   12460:	mov	r6, #16384	; 0x4000
   12464:	b	12528 <__errno_location@plt+0x12c4>
   12468:	bic	r3, r3, #32
   1246c:	strb	r3, [r4, #72]	; 0x48
   12470:	mov	r1, r4
   12474:	ldr	r0, [r4, #28]
   12478:	bl	12298 <__errno_location@plt+0x1034>
   1247c:	ldrb	r3, [r4, #72]	; 0x48
   12480:	tst	r3, #8
   12484:	beq	12460 <__errno_location@plt+0x11fc>
   12488:	b	125d4 <__errno_location@plt+0x1370>
   1248c:	bl	11264 <__errno_location@plt>
   12490:	mov	r6, r0
   12494:	ldr	r0, [r0]
   12498:	bl	10fa0 <rb_ignore_errno@plt>
   1249c:	cmp	r0, #0
   124a0:	beq	12588 <__errno_location@plt+0x1324>
   124a4:	cmn	r5, #4
   124a8:	beq	124e0 <__errno_location@plt+0x127c>
   124ac:	mov	r3, r4
   124b0:	ldr	r2, [pc, #292]	; 125dc <__errno_location@plt+0x1378>
   124b4:	mov	r1, #1
   124b8:	ldr	r0, [r4, #28]
   124bc:	bl	10fd0 <rb_setselect@plt>
   124c0:	mov	r1, r4
   124c4:	ldr	r0, [r4, #32]
   124c8:	bl	11eac <__errno_location@plt+0xc48>
   124cc:	b	125d4 <__errno_location@plt+0x1370>
   124d0:	ldr	r0, [r4, #28]
   124d4:	bl	11150 <rb_get_ssl_strerror@plt>
   124d8:	mov	r3, r0
   124dc:	b	125ac <__errno_location@plt+0x1348>
   124e0:	mov	r3, #0
   124e4:	mov	r2, r3
   124e8:	mov	r1, #1
   124ec:	ldr	r0, [r4, #28]
   124f0:	bl	10fd0 <rb_setselect@plt>
   124f4:	mov	r3, r4
   124f8:	ldr	r2, [pc, #220]	; 125dc <__errno_location@plt+0x1378>
   124fc:	mov	r1, #2
   12500:	ldr	r0, [r4, #28]
   12504:	bl	10fd0 <rb_setselect@plt>
   12508:	ldrb	r3, [r4, #72]	; 0x48
   1250c:	orr	r3, r3, #32
   12510:	strb	r3, [r4, #72]	; 0x48
   12514:	b	124c0 <__errno_location@plt+0x125c>
   12518:	mov	r2, r5
   1251c:	mov	r1, sp
   12520:	mov	r0, r4
   12524:	bl	11fa4 <__errno_location@plt+0xd40>
   12528:	ldrb	r3, [r4, #72]	; 0x48
   1252c:	tst	r3, #8
   12530:	bne	125d4 <__errno_location@plt+0x1370>
   12534:	mov	r2, r6
   12538:	mov	r1, sp
   1253c:	ldr	r0, [r4, #28]
   12540:	bl	110c0 <rb_read@plt>
   12544:	subs	r5, r0, #0
   12548:	beq	125c0 <__errno_location@plt+0x135c>
   1254c:	blt	1248c <__errno_location@plt+0x1228>
   12550:	ldrd	r2, [r4, #48]	; 0x30
   12554:	adds	r2, r2, r5
   12558:	adc	r3, r3, r5, asr #31
   1255c:	strd	r2, [r4, #48]	; 0x30
   12560:	ldrb	r3, [r4, #72]	; 0x48
   12564:	tst	r3, #2
   12568:	bne	12518 <__errno_location@plt+0x12b4>
   1256c:	tst	r3, #8
   12570:	bne	12528 <__errno_location@plt+0x12c4>
   12574:	mov	r2, r5
   12578:	mov	r1, sp
   1257c:	ldr	r0, [r4, #20]
   12580:	bl	11234 <rb_rawbuf_append@plt>
   12584:	b	12528 <__errno_location@plt+0x12c4>
   12588:	ldrb	r3, [r4, #72]	; 0x48
   1258c:	cmn	r5, #2
   12590:	movne	r5, #0
   12594:	moveq	r5, #1
   12598:	tst	r3, r5
   1259c:	bne	124d0 <__errno_location@plt+0x126c>
   125a0:	ldr	r0, [r6]
   125a4:	bl	10f64 <strerror@plt>
   125a8:	mov	r3, r0
   125ac:	ldr	r2, [pc, #44]	; 125e0 <__errno_location@plt+0x137c>
   125b0:	mov	r1, #1
   125b4:	mov	r0, r4
   125b8:	bl	11bc4 <__errno_location@plt+0x960>
   125bc:	b	125d4 <__errno_location@plt+0x1370>
   125c0:	ldr	r3, [pc, #28]	; 125e4 <__errno_location@plt+0x1380>
   125c4:	ldr	r2, [pc, #28]	; 125e8 <__errno_location@plt+0x1384>
   125c8:	mov	r1, #1
   125cc:	mov	r0, r4
   125d0:	bl	11bc4 <__errno_location@plt+0x960>
   125d4:	add	sp, sp, #16384	; 0x4000
   125d8:	pop	{r4, r5, r6, pc}
   125dc:	andeq	r2, r1, ip, lsr r4
   125e0:	andeq	r3, r1, r8, asr r4
   125e4:	andeq	r3, r1, r4, lsr r4
   125e8:	ldrdeq	r3, [r1], -r0
   125ec:	push	{r4, lr}
   125f0:	mov	r4, r0
   125f4:	ldr	r0, [r0, #16]
   125f8:	bl	11138 <rb_rawbuf_length@plt>
   125fc:	cmp	r0, #4096	; 0x1000
   12600:	bge	1260c <__errno_location@plt+0x13a8>
   12604:	mov	r0, #0
   12608:	pop	{r4, pc}
   1260c:	ldrb	r3, [r4, #72]	; 0x48
   12610:	orr	r3, r3, #4
   12614:	strb	r3, [r4, #72]	; 0x48
   12618:	mov	r3, #0
   1261c:	mov	r2, r3
   12620:	mov	r1, #1
   12624:	ldr	r0, [r4, #32]
   12628:	bl	10fd0 <rb_setselect@plt>
   1262c:	mov	r1, r4
   12630:	ldr	r0, [r4, #28]
   12634:	bl	12298 <__errno_location@plt+0x1034>
   12638:	mov	r0, #1
   1263c:	pop	{r4, pc}
   12640:	push	{r4, lr}
   12644:	sub	sp, sp, #8
   12648:	ldr	r4, [sp, #16]
   1264c:	cmp	r1, #0
   12650:	beq	1266c <__errno_location@plt+0x1408>
   12654:	mov	r2, #0
   12658:	mov	r1, r2
   1265c:	mov	r0, r4
   12660:	bl	11bc4 <__errno_location@plt+0x960>
   12664:	add	sp, sp, #8
   12668:	pop	{r4, pc}
   1266c:	mov	r0, r4
   12670:	bl	1181c <__errno_location@plt+0x5b8>
   12674:	mov	r0, r4
   12678:	bl	11890 <__errno_location@plt+0x62c>
   1267c:	mov	r3, #79	; 0x4f
   12680:	strb	r3, [sp]
   12684:	ldr	r3, [r4, #24]
   12688:	str	r3, [sp, #1]
   1268c:	mov	r2, #5
   12690:	mov	r1, sp
   12694:	ldr	r0, [r4, #12]
   12698:	bl	11724 <__errno_location@plt+0x4c0>
   1269c:	mov	r1, r4
   126a0:	ldr	r0, [r4, #28]
   126a4:	bl	1243c <__errno_location@plt+0x11d8>
   126a8:	mov	r1, r4
   126ac:	ldr	r0, [r4, #32]
   126b0:	bl	120d0 <__errno_location@plt+0xe6c>
   126b4:	b	12664 <__errno_location@plt+0x1400>
   126b8:	push	{r4, lr}
   126bc:	sub	sp, sp, #8
   126c0:	mov	r4, r2
   126c4:	cmp	r1, #0
   126c8:	beq	126f4 <__errno_location@plt+0x1490>
   126cc:	cmp	r1, #3
   126d0:	beq	12740 <__errno_location@plt+0x14dc>
   126d4:	cmp	r1, #6
   126d8:	beq	12754 <__errno_location@plt+0x14f0>
   126dc:	ldr	r2, [pc, #144]	; 12774 <__errno_location@plt+0x1510>
   126e0:	mov	r1, #1
   126e4:	mov	r0, r4
   126e8:	bl	11bc4 <__errno_location@plt+0x960>
   126ec:	add	sp, sp, #8
   126f0:	pop	{r4, pc}
   126f4:	mov	r0, r2
   126f8:	bl	1181c <__errno_location@plt+0x5b8>
   126fc:	mov	r0, r4
   12700:	bl	11890 <__errno_location@plt+0x62c>
   12704:	mov	r3, #79	; 0x4f
   12708:	strb	r3, [sp]
   1270c:	ldr	r3, [r4, #24]
   12710:	str	r3, [sp, #1]
   12714:	mov	r2, #5
   12718:	mov	r1, sp
   1271c:	ldr	r0, [r4, #12]
   12720:	bl	11724 <__errno_location@plt+0x4c0>
   12724:	mov	r1, r4
   12728:	ldr	r0, [r4, #28]
   1272c:	bl	1243c <__errno_location@plt+0x11d8>
   12730:	mov	r1, r4
   12734:	ldr	r0, [r4, #32]
   12738:	bl	120d0 <__errno_location@plt+0xe6c>
   1273c:	b	126ec <__errno_location@plt+0x1488>
   12740:	ldr	r2, [pc, #48]	; 12778 <__errno_location@plt+0x1514>
   12744:	mov	r1, #1
   12748:	mov	r0, r4
   1274c:	bl	11bc4 <__errno_location@plt+0x960>
   12750:	b	126ec <__errno_location@plt+0x1488>
   12754:	ldr	r0, [r2, #28]
   12758:	bl	11150 <rb_get_ssl_strerror@plt>
   1275c:	mov	r3, r0
   12760:	ldr	r2, [pc, #20]	; 1277c <__errno_location@plt+0x1518>
   12764:	mov	r1, #1
   12768:	mov	r0, r4
   1276c:	bl	11bc4 <__errno_location@plt+0x960>
   12770:	b	126ec <__errno_location@plt+0x1488>
   12774:	andeq	r3, r1, r0, lsl #9
   12778:	andeq	r3, r1, r8, ror #8
   1277c:	ldrdeq	r3, [r1], -r0
   12780:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12784:	sub	sp, sp, #28
   12788:	mov	r8, r1
   1278c:	mov	r6, #1
   12790:	mov	r5, #16384	; 0x4000
   12794:	mov	r9, #4
   12798:	add	fp, r1, #24
   1279c:	mov	sl, #0
   127a0:	b	12840 <__errno_location@plt+0x15dc>
   127a4:	bl	11180 <rb_outofmemory@plt>
   127a8:	bl	11180 <rb_outofmemory@plt>
   127ac:	mov	r7, r0
   127b0:	ldr	r0, [r4, #12]
   127b4:	cmp	r0, #0
   127b8:	beq	127c0 <__errno_location@plt+0x155c>
   127bc:	bl	1109c <free@plt>
   127c0:	mov	r0, r4
   127c4:	bl	1109c <free@plt>
   127c8:	cmp	r7, #0
   127cc:	beq	12918 <__errno_location@plt+0x16b4>
   127d0:	cmp	r7, #0
   127d4:	blt	12904 <__errno_location@plt+0x16a0>
   127d8:	ldr	r4, [r8, #24]
   127dc:	cmp	r4, #0
   127e0:	beq	12e20 <__errno_location@plt+0x1bbc>
   127e4:	ldr	sl, [r4, #8]
   127e8:	ldr	fp, [pc, #1612]	; 12e3c <__errno_location@plt+0x1bd8>
   127ec:	b	12c04 <__errno_location@plt+0x19a0>
   127f0:	ldr	r3, [pc, #1608]	; 12e40 <__errno_location@plt+0x1bdc>
   127f4:	mov	r2, #211	; 0xd3
   127f8:	ldr	r1, [pc, #1604]	; 12e44 <__errno_location@plt+0x1be0>
   127fc:	ldr	r0, [pc, #1604]	; 12e48 <__errno_location@plt+0x1be4>
   12800:	bl	11060 <__assert_fail@plt>
   12804:	ldr	r3, [pc, #1588]	; 12e40 <__errno_location@plt+0x1bdc>
   12808:	mov	r2, #212	; 0xd4
   1280c:	ldr	r1, [pc, #1584]	; 12e44 <__errno_location@plt+0x1be0>
   12810:	ldr	r0, [pc, #1588]	; 12e4c <__errno_location@plt+0x1be8>
   12814:	bl	11060 <__assert_fail@plt>
   12818:	ldr	r3, [r8, #24]
   1281c:	cmp	r3, #0
   12820:	streq	r4, [r8, #24]
   12824:	b	128bc <__errno_location@plt+0x1658>
   12828:	mov	r3, r6
   1282c:	b	1283c <__errno_location@plt+0x15d8>
   12830:	mov	r3, #2
   12834:	b	1283c <__errno_location@plt+0x15d8>
   12838:	mov	r3, sl
   1283c:	str	r3, [r4, #36]	; 0x24
   12840:	mov	r1, #40	; 0x28
   12844:	mov	r0, r6
   12848:	bl	1103c <calloc@plt>
   1284c:	subs	r4, r0, #0
   12850:	beq	127a4 <__errno_location@plt+0x1540>
   12854:	mov	r1, r5
   12858:	mov	r0, r6
   1285c:	bl	1103c <calloc@plt>
   12860:	subs	r1, r0, #0
   12864:	beq	127a8 <__errno_location@plt+0x1544>
   12868:	str	r1, [r4, #12]
   1286c:	str	r5, [r4, #16]
   12870:	str	r9, [sp]
   12874:	add	r3, r4, #20
   12878:	mov	r2, r5
   1287c:	ldr	r0, [r8, #16]
   12880:	bl	111e0 <rb_recv_fd_buf@plt>
   12884:	cmp	r0, #0
   12888:	ble	127ac <__errno_location@plt+0x1548>
   1288c:	str	r0, [r4, #16]
   12890:	cmp	r4, #0
   12894:	beq	127f0 <__errno_location@plt+0x158c>
   12898:	cmp	fp, #0
   1289c:	beq	12804 <__errno_location@plt+0x15a0>
   128a0:	str	r4, [r4]
   128a4:	str	sl, [r4, #8]
   128a8:	ldr	r3, [r8, #28]
   128ac:	str	r3, [r4, #4]
   128b0:	cmp	r3, #0
   128b4:	strne	r4, [r3, #8]
   128b8:	beq	12818 <__errno_location@plt+0x15b4>
   128bc:	str	r4, [r8, #28]
   128c0:	ldr	r3, [r8, #32]
   128c4:	add	r3, r3, #1
   128c8:	str	r3, [r8, #32]
   128cc:	ldr	r3, [r4, #20]
   128d0:	cmp	r3, #0
   128d4:	beq	12838 <__errno_location@plt+0x15d4>
   128d8:	ldr	r3, [r4, #24]
   128dc:	cmp	r3, #0
   128e0:	beq	12828 <__errno_location@plt+0x15c4>
   128e4:	ldr	r3, [r4, #28]
   128e8:	cmp	r3, #0
   128ec:	beq	12830 <__errno_location@plt+0x15cc>
   128f0:	ldr	r3, [r4, #32]
   128f4:	cmp	r3, #0
   128f8:	movne	r3, #4
   128fc:	moveq	r3, #3
   12900:	b	1283c <__errno_location@plt+0x15d8>
   12904:	bl	11264 <__errno_location@plt>
   12908:	ldr	r0, [r0]
   1290c:	bl	10fa0 <rb_ignore_errno@plt>
   12910:	cmp	r0, #0
   12914:	bne	127d8 <__errno_location@plt+0x1574>
   12918:	mov	r0, #0
   1291c:	bl	11258 <exit@plt>
   12920:	ldr	r3, [r5, #36]	; 0x24
   12924:	cmp	r3, #2
   12928:	beq	1293c <__errno_location@plt+0x16d8>
   1292c:	mov	r1, r5
   12930:	mov	r0, r8
   12934:	bl	1139c <__errno_location@plt+0x138>
   12938:	b	12b84 <__errno_location@plt+0x1920>
   1293c:	ldr	r3, [r5, #16]
   12940:	cmp	r3, #5
   12944:	bne	1292c <__errno_location@plt+0x16c8>
   12948:	ldrb	r3, [fp, #-532]	; 0xfffffdec
   1294c:	cmp	r3, #0
   12950:	bne	12964 <__errno_location@plt+0x1700>
   12954:	mov	r1, r5
   12958:	mov	r0, r8
   1295c:	bl	11f4c <__errno_location@plt+0xce8>
   12960:	b	12b84 <__errno_location@plt+0x1920>
   12964:	ldr	r2, [r5, #24]
   12968:	ldr	r1, [r5, #20]
   1296c:	mov	r0, r8
   12970:	bl	11528 <__errno_location@plt+0x2c4>
   12974:	mov	r6, r0
   12978:	ldr	r3, [r5, #12]
   1297c:	ldr	r1, [r3, #1]
   12980:	bl	119e8 <__errno_location@plt+0x784>
   12984:	ldrb	r3, [r6, #72]	; 0x48
   12988:	orr	r3, r3, #1
   1298c:	strb	r3, [r6, #72]	; 0x48
   12990:	ldr	r0, [r6, #28]
   12994:	bl	10f70 <rb_get_type@plt>
   12998:	tst	r0, #64	; 0x40
   1299c:	bne	129c8 <__errno_location@plt+0x1764>
   129a0:	ldr	r0, [r6, #32]
   129a4:	bl	10f70 <rb_get_type@plt>
   129a8:	cmp	r0, #64	; 0x40
   129ac:	beq	129d8 <__errno_location@plt+0x1774>
   129b0:	mov	r3, #10
   129b4:	mov	r2, r6
   129b8:	ldr	r1, [pc, #1168]	; 12e50 <__errno_location@plt+0x1bec>
   129bc:	ldr	r0, [r5, #20]
   129c0:	bl	111ec <rb_ssl_start_accepted@plt>
   129c4:	b	12b84 <__errno_location@plt+0x1920>
   129c8:	mov	r1, #4
   129cc:	ldr	r0, [r6, #28]
   129d0:	bl	110cc <rb_set_type@plt>
   129d4:	b	129a0 <__errno_location@plt+0x173c>
   129d8:	mov	r1, #4
   129dc:	ldr	r0, [r6, #32]
   129e0:	bl	110cc <rb_set_type@plt>
   129e4:	b	129b0 <__errno_location@plt+0x174c>
   129e8:	ldr	r3, [r5, #16]
   129ec:	cmp	r3, #5
   129f0:	beq	12a04 <__errno_location@plt+0x17a0>
   129f4:	mov	r1, r5
   129f8:	mov	r0, r8
   129fc:	bl	1139c <__errno_location@plt+0x138>
   12a00:	b	12b84 <__errno_location@plt+0x1920>
   12a04:	ldrb	r3, [fp, #-532]	; 0xfffffdec
   12a08:	cmp	r3, #0
   12a0c:	bne	12a20 <__errno_location@plt+0x17bc>
   12a10:	mov	r1, r5
   12a14:	mov	r0, r8
   12a18:	bl	11f4c <__errno_location@plt+0xce8>
   12a1c:	b	12b84 <__errno_location@plt+0x1920>
   12a20:	ldr	r2, [r5, #24]
   12a24:	ldr	r1, [r5, #20]
   12a28:	mov	r0, r8
   12a2c:	bl	11528 <__errno_location@plt+0x2c4>
   12a30:	mov	r6, r0
   12a34:	ldr	r3, [r5, #12]
   12a38:	ldr	r1, [r3, #1]
   12a3c:	bl	119e8 <__errno_location@plt+0x784>
   12a40:	ldrb	r3, [r6, #72]	; 0x48
   12a44:	orr	r3, r3, #1
   12a48:	strb	r3, [r6, #72]	; 0x48
   12a4c:	ldr	r0, [r6, #28]
   12a50:	bl	10f70 <rb_get_type@plt>
   12a54:	cmp	r0, #64	; 0x40
   12a58:	beq	12a84 <__errno_location@plt+0x1820>
   12a5c:	ldr	r0, [r6, #32]
   12a60:	bl	10f70 <rb_get_type@plt>
   12a64:	cmp	r0, #64	; 0x40
   12a68:	beq	12a94 <__errno_location@plt+0x1830>
   12a6c:	mov	r3, #10
   12a70:	mov	r2, r6
   12a74:	ldr	r1, [pc, #984]	; 12e54 <__errno_location@plt+0x1bf0>
   12a78:	ldr	r0, [r5, #20]
   12a7c:	bl	111a4 <rb_ssl_start_connected@plt>
   12a80:	b	12b84 <__errno_location@plt+0x1920>
   12a84:	mov	r1, #4
   12a88:	ldr	r0, [r6, #28]
   12a8c:	bl	110cc <rb_set_type@plt>
   12a90:	b	12a5c <__errno_location@plt+0x17f8>
   12a94:	mov	r1, #4
   12a98:	ldr	r0, [r6, #32]
   12a9c:	bl	110cc <rb_set_type@plt>
   12aa0:	b	12a6c <__errno_location@plt+0x1808>
   12aa4:	ldr	r3, [r5, #16]
   12aa8:	cmp	r3, #5
   12aac:	beq	12ac0 <__errno_location@plt+0x185c>
   12ab0:	mov	r1, r5
   12ab4:	mov	r0, r8
   12ab8:	bl	1139c <__errno_location@plt+0x138>
   12abc:	b	12b84 <__errno_location@plt+0x1920>
   12ac0:	ldr	r3, [r6, #1]
   12ac4:	ldr	r2, [pc, #908]	; 12e58 <__errno_location@plt+0x1bf4>
   12ac8:	str	r3, [r2, #16]
   12acc:	b	12b84 <__errno_location@plt+0x1920>
   12ad0:	ldrb	r3, [fp, #-532]	; 0xfffffdec
   12ad4:	cmp	r3, #0
   12ad8:	bne	12aec <__errno_location@plt+0x1888>
   12adc:	mov	r1, r5
   12ae0:	mov	r0, r8
   12ae4:	bl	11f4c <__errno_location@plt+0xce8>
   12ae8:	b	12b84 <__errno_location@plt+0x1920>
   12aec:	add	r6, r6, #2
   12af0:	mov	r0, r6
   12af4:	bl	110d8 <strlen@plt>
   12af8:	add	r3, r0, #1
   12afc:	str	r3, [sp, #12]
   12b00:	add	r9, r6, r3
   12b04:	mov	r0, r9
   12b08:	bl	110d8 <strlen@plt>
   12b0c:	add	r0, r0, #1
   12b10:	add	r7, r9, r0
   12b14:	mov	r0, r7
   12b18:	bl	110d8 <strlen@plt>
   12b1c:	add	r3, r0, #1
   12b20:	add	r3, r7, r3
   12b24:	ldr	r2, [sp, #12]
   12b28:	ldrb	r1, [r6, r2]
   12b2c:	ldrb	r2, [r7]
   12b30:	ldrb	r0, [r3]
   12b34:	cmp	r0, #0
   12b38:	moveq	r3, #0
   12b3c:	cmp	r2, #0
   12b40:	movne	r2, r7
   12b44:	moveq	r2, #0
   12b48:	cmp	r1, #0
   12b4c:	movne	r1, r9
   12b50:	moveq	r1, r6
   12b54:	mov	r0, r6
   12b58:	bl	1124c <rb_setup_ssl_server@plt>
   12b5c:	cmp	r0, #0
   12b60:	bne	12b84 <__errno_location@plt+0x1920>
   12b64:	mov	r2, #1
   12b68:	ldr	r1, [pc, #748]	; 12e5c <__errno_location@plt+0x1bf8>
   12b6c:	mov	r0, r8
   12b70:	bl	11724 <__errno_location@plt+0x4c0>
   12b74:	b	12b84 <__errno_location@plt+0x1920>
   12b78:	mov	r1, r5
   12b7c:	mov	r0, r8
   12b80:	bl	118f8 <__errno_location@plt+0x694>
   12b84:	cmn	r8, #24
   12b88:	beq	12e0c <__errno_location@plt+0x1ba8>
   12b8c:	ldr	r3, [r4, #8]
   12b90:	cmp	r3, #0
   12b94:	ldrne	r2, [r4, #4]
   12b98:	strne	r2, [r3, #4]
   12b9c:	ldreq	r3, [r4, #4]
   12ba0:	streq	r3, [r8, #28]
   12ba4:	ldr	r3, [r4, #4]
   12ba8:	cmp	r3, #0
   12bac:	ldrne	r2, [r4, #8]
   12bb0:	strne	r2, [r3, #8]
   12bb4:	ldreq	r3, [r4, #8]
   12bb8:	streq	r3, [r8, #24]
   12bbc:	mov	r3, #0
   12bc0:	str	r3, [r4, #4]
   12bc4:	str	r3, [r4, #8]
   12bc8:	ldr	r3, [r8, #32]
   12bcc:	sub	r3, r3, #1
   12bd0:	str	r3, [r8, #32]
   12bd4:	ldr	r0, [r5, #12]
   12bd8:	cmp	r0, #0
   12bdc:	beq	12be4 <__errno_location@plt+0x1980>
   12be0:	bl	1109c <free@plt>
   12be4:	cmp	r5, #0
   12be8:	beq	12bf4 <__errno_location@plt+0x1990>
   12bec:	mov	r0, r5
   12bf0:	bl	1109c <free@plt>
   12bf4:	cmp	sl, #0
   12bf8:	beq	12e20 <__errno_location@plt+0x1bbc>
   12bfc:	mov	r4, sl
   12c00:	ldr	sl, [sl, #8]
   12c04:	ldr	r5, [r4]
   12c08:	ldr	r6, [r5, #12]
   12c0c:	ldrb	r3, [r6]
   12c10:	sub	r3, r3, #65	; 0x41
   12c14:	cmp	r3, #25
   12c18:	ldrls	pc, [pc, r3, lsl #2]
   12c1c:	b	12b84 <__errno_location@plt+0x1920>
   12c20:	andeq	r2, r1, r0, lsr #18
   12c24:	andeq	r2, r1, r4, lsl #23
   12c28:	andeq	r2, r1, r8, ror #19
   12c2c:	andeq	r2, r1, r4, lsl #23
   12c30:	andeq	r2, r1, r4, lsl #23
   12c34:	andeq	r2, r1, r4, lsr #21
   12c38:	andeq	r2, r1, r4, lsl #23
   12c3c:	andeq	r2, r1, r4, lsl #23
   12c40:	andeq	r2, r1, r4, lsl #23
   12c44:	andeq	r2, r1, r4, lsl #23
   12c48:	ldrdeq	r2, [r1], -r0
   12c4c:	andeq	r2, r1, r4, lsl #23
   12c50:	andeq	r2, r1, r4, lsl #23
   12c54:	andeq	r2, r1, r4, lsl #23
   12c58:	andeq	r2, r1, r4, lsl #23
   12c5c:	andeq	r2, r1, r4, lsl #23
   12c60:	andeq	r2, r1, r4, lsl #23
   12c64:	andeq	r2, r1, r4, lsl #23
   12c68:	andeq	r2, r1, r8, ror fp
   12c6c:	andeq	r2, r1, r4, lsl #23
   12c70:	andeq	r2, r1, r4, lsl #23
   12c74:	andeq	r2, r1, r4, lsl #23
   12c78:	andeq	r2, r1, r4, lsl #23
   12c7c:	andeq	r2, r1, r4, lsl #23
   12c80:	andeq	r2, r1, r4, lsl #23
   12c84:	andeq	r2, r1, r8, lsl #25
   12c88:	ldr	r3, [r5, #36]	; 0x24
   12c8c:	cmp	r3, #2
   12c90:	beq	12ca4 <__errno_location@plt+0x1a40>
   12c94:	mov	r1, r5
   12c98:	mov	r0, r8
   12c9c:	bl	1139c <__errno_location@plt+0x138>
   12ca0:	b	12b84 <__errno_location@plt+0x1920>
   12ca4:	ldr	r3, [r5, #16]
   12ca8:	cmp	r3, #5
   12cac:	bls	12c94 <__errno_location@plt+0x1a30>
   12cb0:	ldr	r2, [r5, #24]
   12cb4:	ldr	r1, [r5, #20]
   12cb8:	mov	r0, r8
   12cbc:	bl	11528 <__errno_location@plt+0x2c4>
   12cc0:	mov	r6, r0
   12cc4:	ldr	r0, [r0, #28]
   12cc8:	bl	10f70 <rb_get_type@plt>
   12ccc:	cmp	r0, #64	; 0x40
   12cd0:	beq	12dd0 <__errno_location@plt+0x1b6c>
   12cd4:	ldr	r0, [r6, #32]
   12cd8:	bl	10f70 <rb_get_type@plt>
   12cdc:	cmp	r0, #64	; 0x40
   12ce0:	beq	12de0 <__errno_location@plt+0x1b7c>
   12ce4:	ldr	r3, [r5, #12]
   12ce8:	ldr	r1, [r3, #1]
   12cec:	mov	r0, r6
   12cf0:	bl	119e8 <__errno_location@plt+0x784>
   12cf4:	ldr	r3, [r5, #12]
   12cf8:	str	r3, [sp, #20]
   12cfc:	ldrb	r3, [r3, #5]
   12d00:	str	r3, [sp, #16]
   12d04:	ldr	r3, [r5, #16]
   12d08:	sub	r3, r3, #6
   12d0c:	str	r3, [sp, #12]
   12d10:	ldrb	r3, [r6, #72]	; 0x48
   12d14:	orr	r3, r3, #2
   12d18:	strb	r3, [r6, #72]	; 0x48
   12d1c:	mov	r1, #112	; 0x70
   12d20:	mov	r0, #1
   12d24:	bl	1103c <calloc@plt>
   12d28:	subs	r7, r0, #0
   12d2c:	beq	12df0 <__errno_location@plt+0x1b8c>
   12d30:	str	r7, [r6, #76]	; 0x4c
   12d34:	mov	r9, #0
   12d38:	str	r9, [r7, #8]
   12d3c:	str	r9, [r7, #20]
   12d40:	ldr	r3, [pc, #280]	; 12e60 <__errno_location@plt+0x1bfc>
   12d44:	str	r3, [r7, #32]
   12d48:	ldr	r3, [pc, #276]	; 12e64 <__errno_location@plt+0x1c00>
   12d4c:	str	r3, [r7, #36]	; 0x24
   12d50:	mov	r3, #1
   12d54:	str	r3, [r7, #44]	; 0x2c
   12d58:	mov	r2, #56	; 0x38
   12d5c:	ldr	r1, [pc, #260]	; 12e68 <__errno_location@plt+0x1c04>
   12d60:	ldr	r0, [r6, #76]	; 0x4c
   12d64:	bl	111d4 <inflateInit_@plt>
   12d68:	str	r9, [r7, #64]	; 0x40
   12d6c:	str	r9, [r7, #76]	; 0x4c
   12d70:	ldr	r3, [pc, #232]	; 12e60 <__errno_location@plt+0x1bfc>
   12d74:	str	r3, [r7, #88]	; 0x58
   12d78:	ldr	r3, [pc, #228]	; 12e64 <__errno_location@plt+0x1c00>
   12d7c:	str	r3, [r7, #92]	; 0x5c
   12d80:	mov	r3, #1
   12d84:	str	r3, [r7, #100]	; 0x64
   12d88:	ldr	r0, [r6, #76]	; 0x4c
   12d8c:	mov	r3, #56	; 0x38
   12d90:	ldr	r2, [pc, #208]	; 12e68 <__errno_location@plt+0x1c04>
   12d94:	ldr	r1, [sp, #16]
   12d98:	cmp	r1, #9
   12d9c:	movhi	r1, #255	; 0xff
   12da0:	add	r0, r0, r3
   12da4:	bl	11030 <deflateInit_@plt>
   12da8:	ldr	r3, [sp, #12]
   12dac:	cmp	r3, r9
   12db0:	bne	12df4 <__errno_location@plt+0x1b90>
   12db4:	mov	r1, r6
   12db8:	ldr	r0, [r6, #28]
   12dbc:	bl	1243c <__errno_location@plt+0x11d8>
   12dc0:	mov	r1, r6
   12dc4:	ldr	r0, [r6, #32]
   12dc8:	bl	120d0 <__errno_location@plt+0xe6c>
   12dcc:	b	12b84 <__errno_location@plt+0x1920>
   12dd0:	mov	r1, #4
   12dd4:	ldr	r0, [r6, #28]
   12dd8:	bl	110cc <rb_set_type@plt>
   12ddc:	b	12cd4 <__errno_location@plt+0x1a70>
   12de0:	mov	r1, #4
   12de4:	ldr	r0, [r6, #32]
   12de8:	bl	110cc <rb_set_type@plt>
   12dec:	b	12ce4 <__errno_location@plt+0x1a80>
   12df0:	bl	11180 <rb_outofmemory@plt>
   12df4:	mov	r2, r3
   12df8:	ldr	r3, [sp, #20]
   12dfc:	add	r1, r3, #6
   12e00:	mov	r0, r6
   12e04:	bl	11fa4 <__errno_location@plt+0xd40>
   12e08:	b	12db4 <__errno_location@plt+0x1b50>
   12e0c:	ldr	r3, [pc, #88]	; 12e6c <__errno_location@plt+0x1c08>
   12e10:	mov	r2, #236	; 0xec
   12e14:	ldr	r1, [pc, #40]	; 12e44 <__errno_location@plt+0x1be0>
   12e18:	ldr	r0, [pc, #44]	; 12e4c <__errno_location@plt+0x1be8>
   12e1c:	bl	11060 <__assert_fail@plt>
   12e20:	mov	r3, r8
   12e24:	ldr	r2, [pc, #68]	; 12e70 <__errno_location@plt+0x1c0c>
   12e28:	mov	r1, #1
   12e2c:	ldr	r0, [r8, #16]
   12e30:	bl	10fd0 <rb_setselect@plt>
   12e34:	add	sp, sp, #28
   12e38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e3c:	andeq	sl, r2, r8, lsl r1
   12e40:	andeq	r3, r1, r8, asr #5
   12e44:	andeq	r3, r1, r4, ror #5
   12e48:	andeq	r3, r1, r0, lsl r3
   12e4c:	andeq	r3, r1, r0, lsl #6
   12e50:	andeq	r2, r1, r0, asr #12
   12e54:			; <UNDEFINED> instruction: 0x000126b8
   12e58:	andeq	r4, r2, r0, lsr r1
   12e5c:	muleq	r1, r8, r4
   12e60:	andeq	r1, r1, ip, lsl #10
   12e64:	andeq	r1, r1, r8, asr #8
   12e68:	muleq	r1, ip, r4
   12e6c:			; <UNDEFINED> instruction: 0x000132b8
   12e70:	andeq	r2, r1, r0, lsl #15
   12e74:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12e78:	sub	sp, sp, #272	; 0x110
   12e7c:	add	r1, sp, #16
   12e80:	mov	r0, #7
   12e84:	bl	11228 <getrlimit@plt>
   12e88:	cmp	r0, #0
   12e8c:	ldreq	r8, [sp, #16]
   12e90:	ldrne	r8, [pc, #876]	; 13204 <__errno_location@plt+0x1fa0>
   12e94:	ldr	r0, [pc, #876]	; 13208 <__errno_location@plt+0x1fa4>
   12e98:	bl	11018 <getenv@plt>
   12e9c:	mov	r5, r0
   12ea0:	ldr	r0, [pc, #868]	; 1320c <__errno_location@plt+0x1fa8>
   12ea4:	bl	11018 <getenv@plt>
   12ea8:	mov	r4, r0
   12eac:	ldr	r0, [pc, #860]	; 13210 <__errno_location@plt+0x1fac>
   12eb0:	bl	11018 <getenv@plt>
   12eb4:	cmp	r4, #0
   12eb8:	cmpne	r5, #0
   12ebc:	moveq	r3, #1
   12ec0:	movne	r3, #0
   12ec4:	mov	r9, r0
   12ec8:	cmp	r0, #0
   12ecc:	movne	r0, r3
   12ed0:	orreq	r0, r3, #1
   12ed4:	cmp	r0, #0
   12ed8:	bne	12f30 <__errno_location@plt+0x1ccc>
   12edc:	mov	r7, r8
   12ee0:	mov	r2, #10
   12ee4:	mov	r1, #0
   12ee8:	mov	r0, r5
   12eec:	bl	11108 <strtol@plt>
   12ef0:	mov	r6, r0
   12ef4:	mov	r2, #10
   12ef8:	mov	r1, #0
   12efc:	mov	r0, r4
   12f00:	bl	11108 <strtol@plt>
   12f04:	mov	r5, r0
   12f08:	mov	r2, #10
   12f0c:	mov	r1, #0
   12f10:	mov	r0, r9
   12f14:	bl	11108 <strtol@plt>
   12f18:	ldr	r3, [pc, #756]	; 13214 <__errno_location@plt+0x1fb0>
   12f1c:	str	r0, [r3, #12]
   12f20:	cmp	r8, #3
   12f24:	ble	12f88 <__errno_location@plt+0x1d24>
   12f28:	mov	r4, #3
   12f2c:	b	12f70 <__errno_location@plt+0x1d0c>
   12f30:	ldr	r4, [pc, #736]	; 13218 <__errno_location@plt+0x1fb4>
   12f34:	ldr	r3, [r4]
   12f38:	mov	r2, #50	; 0x32
   12f3c:	mov	r1, #1
   12f40:	ldr	r0, [pc, #724]	; 1321c <__errno_location@plt+0x1fb8>
   12f44:	bl	11168 <fwrite@plt>
   12f48:	ldr	r3, [r4]
   12f4c:	mov	r2, #49	; 0x31
   12f50:	mov	r1, #1
   12f54:	ldr	r0, [pc, #708]	; 13220 <__errno_location@plt+0x1fbc>
   12f58:	bl	11168 <fwrite@plt>
   12f5c:	mov	r0, #1
   12f60:	bl	11258 <exit@plt>
   12f64:	add	r4, r4, #1
   12f68:	cmp	r4, r7
   12f6c:	beq	12f88 <__errno_location@plt+0x1d24>
   12f70:	cmp	r4, r6
   12f74:	cmpne	r4, r5
   12f78:	beq	12f64 <__errno_location@plt+0x1d00>
   12f7c:	mov	r0, r4
   12f80:	bl	1115c <close@plt>
   12f84:	b	12f64 <__errno_location@plt+0x1d00>
   12f88:	mov	r1, #2
   12f8c:	ldr	r0, [pc, #656]	; 13224 <__errno_location@plt+0x1fc0>
   12f90:	bl	10f4c <open@plt>
   12f94:	subs	r4, r0, #0
   12f98:	blt	12fc8 <__errno_location@plt+0x1d64>
   12f9c:	cmp	r6, #0
   12fa0:	cmpne	r5, #0
   12fa4:	bne	131b4 <__errno_location@plt+0x1f50>
   12fa8:	cmp	r6, #1
   12fac:	cmpne	r5, #1
   12fb0:	bne	131c4 <__errno_location@plt+0x1f60>
   12fb4:	cmp	r6, #2
   12fb8:	cmpne	r5, #2
   12fbc:	bne	131d4 <__errno_location@plt+0x1f70>
   12fc0:	cmp	r4, #2
   12fc4:	bgt	131e4 <__errno_location@plt+0x1f80>
   12fc8:	mov	r4, #0
   12fcc:	str	r4, [sp, #148]	; 0x94
   12fd0:	mov	sl, #1
   12fd4:	add	r8, sp, #272	; 0x110
   12fd8:	str	sl, [r8, #-256]!	; 0xffffff00
   12fdc:	add	r9, r8, #4
   12fe0:	mov	r0, r9
   12fe4:	bl	10f58 <sigemptyset@plt>
   12fe8:	mov	r1, #13
   12fec:	mov	r0, r9
   12ff0:	bl	11114 <sigaddset@plt>
   12ff4:	mov	r1, #14
   12ff8:	mov	r0, r9
   12ffc:	bl	11114 <sigaddset@plt>
   13000:	mov	r1, #5
   13004:	mov	r0, r9
   13008:	bl	11114 <sigaddset@plt>
   1300c:	mov	r1, #28
   13010:	mov	r0, r9
   13014:	bl	11114 <sigaddset@plt>
   13018:	mov	r2, r4
   1301c:	mov	r1, r8
   13020:	mov	r0, #28
   13024:	bl	11198 <sigaction@plt>
   13028:	mov	r2, r4
   1302c:	mov	r1, r8
   13030:	mov	r0, #13
   13034:	bl	11198 <sigaction@plt>
   13038:	mov	r2, r4
   1303c:	mov	r1, r8
   13040:	mov	r0, #5
   13044:	bl	11198 <sigaction@plt>
   13048:	ldr	r3, [pc, #472]	; 13228 <__errno_location@plt+0x1fc4>
   1304c:	str	r3, [sp, #16]
   13050:	mov	r2, r4
   13054:	mov	r1, r8
   13058:	mov	r0, #14
   1305c:	bl	11198 <sigaction@plt>
   13060:	mov	r3, #4096	; 0x1000
   13064:	str	r3, [sp, #8]
   13068:	mov	r8, #1024	; 0x400
   1306c:	str	r8, [sp, #4]
   13070:	str	r7, [sp]
   13074:	mov	r3, r4
   13078:	mov	r2, r4
   1307c:	mov	r1, r4
   13080:	mov	r0, r4
   13084:	bl	111b0 <rb_lib_init@plt>
   13088:	mov	r0, r8
   1308c:	bl	11090 <rb_init_rawbuffers@plt>
   13090:	mov	r1, sl
   13094:	mov	r0, r4
   13098:	bl	11174 <rb_init_prng@plt>
   1309c:	bl	1118c <rb_supports_ssl@plt>
   130a0:	subs	r0, r0, r4
   130a4:	movne	r0, #1
   130a8:	ldr	r3, [pc, #380]	; 1322c <__errno_location@plt+0x1fc8>
   130ac:	strb	r0, [r3, #-532]	; 0xfffffdec
   130b0:	mov	r1, #48	; 0x30
   130b4:	mov	r0, sl
   130b8:	bl	1103c <calloc@plt>
   130bc:	subs	r7, r0, #0
   130c0:	beq	131f0 <__errno_location@plt+0x1f8c>
   130c4:	ldr	r4, [pc, #352]	; 1322c <__errno_location@plt+0x1fc8>
   130c8:	str	r7, [r4, #-528]	; 0xfffffdf0
   130cc:	ldr	r2, [pc, #348]	; 13230 <__errno_location@plt+0x1fcc>
   130d0:	mov	r1, #4
   130d4:	mov	r0, r6
   130d8:	bl	111c8 <rb_open@plt>
   130dc:	str	r0, [r7, #16]
   130e0:	ldr	r6, [r4, #-528]	; 0xfffffdf0
   130e4:	ldr	r2, [pc, #328]	; 13234 <__errno_location@plt+0x1fd0>
   130e8:	mov	r1, #8
   130ec:	mov	r0, r5
   130f0:	bl	111c8 <rb_open@plt>
   130f4:	str	r0, [r6, #20]
   130f8:	ldr	r3, [r4, #-528]	; 0xfffffdf0
   130fc:	ldr	r0, [r3, #16]
   13100:	bl	11048 <rb_set_nb@plt>
   13104:	ldr	r3, [r4, #-528]	; 0xfffffdf0
   13108:	ldr	r0, [r3, #20]
   1310c:	bl	11048 <rb_set_nb@plt>
   13110:	mov	r3, #10
   13114:	mov	r2, #0
   13118:	ldr	r1, [pc, #280]	; 13238 <__errno_location@plt+0x1fd4>
   1311c:	ldr	r0, [pc, #280]	; 1323c <__errno_location@plt+0x1fd8>
   13120:	bl	10f94 <rb_event_addish@plt>
   13124:	mov	r3, #10
   13128:	mov	r2, #0
   1312c:	ldr	r1, [pc, #268]	; 13240 <__errno_location@plt+0x1fdc>
   13130:	ldr	r0, [pc, #268]	; 13244 <__errno_location@plt+0x1fe0>
   13134:	bl	11204 <rb_event_add@plt>
   13138:	ldr	r3, [r4, #-528]	; 0xfffffdf0
   1313c:	mov	r1, #0
   13140:	ldr	r0, [r3, #20]
   13144:	bl	113d4 <__errno_location@plt+0x170>
   13148:	ldr	r3, [r4, #-528]	; 0xfffffdf0
   1314c:	mov	r1, r3
   13150:	ldr	r0, [r3, #16]
   13154:	bl	12780 <__errno_location@plt+0x151c>
   13158:	ldr	r5, [r4, #-528]	; 0xfffffdf0
   1315c:	mov	r2, #256	; 0x100
   13160:	mov	r1, #0
   13164:	add	r0, sp, #16
   13168:	bl	11054 <memset@plt>
   1316c:	mov	r3, #86	; 0x56
   13170:	strb	r3, [sp, #16]
   13174:	bl	10fac <rb_lib_version@plt>
   13178:	mov	r2, #254	; 0xfe
   1317c:	mov	r1, r0
   13180:	add	r0, sp, #17
   13184:	bl	1100c <strncpy@plt>
   13188:	add	r0, sp, #16
   1318c:	bl	110d8 <strlen@plt>
   13190:	mov	r2, r0
   13194:	add	r1, sp, #16
   13198:	mov	r0, r5
   1319c:	bl	11724 <__errno_location@plt+0x4c0>
   131a0:	ldrb	r3, [r4, #-532]	; 0xfffffdec
   131a4:	cmp	r3, #0
   131a8:	beq	131f4 <__errno_location@plt+0x1f90>
   131ac:	mov	r0, #0
   131b0:	bl	110a8 <rb_lib_loop@plt>
   131b4:	mov	r1, #0
   131b8:	mov	r0, r4
   131bc:	bl	111f8 <dup2@plt>
   131c0:	b	12fa8 <__errno_location@plt+0x1d44>
   131c4:	mov	r1, #1
   131c8:	mov	r0, r4
   131cc:	bl	111f8 <dup2@plt>
   131d0:	b	12fb4 <__errno_location@plt+0x1d50>
   131d4:	mov	r1, #2
   131d8:	mov	r0, r4
   131dc:	bl	111f8 <dup2@plt>
   131e0:	b	12fc0 <__errno_location@plt+0x1d5c>
   131e4:	mov	r0, r4
   131e8:	bl	1115c <close@plt>
   131ec:	b	12fc8 <__errno_location@plt+0x1d64>
   131f0:	bl	11180 <rb_outofmemory@plt>
   131f4:	mov	r1, #0
   131f8:	ldr	r0, [r4, #-528]	; 0xfffffdf0
   131fc:	bl	11f4c <__errno_location@plt+0xce8>
   13200:	b	131ac <__errno_location@plt+0x1f48>
   13204:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   13208:	andeq	r3, r1, r4, lsr #9
   1320c:	andeq	r3, r1, ip, lsr #9
   13210:			; <UNDEFINED> instruction: 0x000134b8
   13214:	andeq	r4, r2, r0, lsr r1
   13218:	andeq	r4, r2, r8, lsr #2
   1321c:	andeq	r3, r1, r4, asr #9
   13220:	strdeq	r3, [r1], -r8
   13224:	andeq	r3, r1, ip, lsr #10
   13228:	muleq	r1, r8, r3
   1322c:	andeq	sl, r2, r8, lsl r1
   13230:	andeq	r3, r1, r8, lsr r5
   13234:	andeq	r3, r1, ip, asr #10
   13238:	andeq	r1, r1, ip, asr r4
   1323c:	andeq	r3, r1, r8, asr r5
   13240:	andeq	r1, r1, r4, lsl lr
   13244:	andeq	r3, r1, ip, ror #10
   13248:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1324c:	mov	r7, r0
   13250:	ldr	r6, [pc, #72]	; 132a0 <__errno_location@plt+0x203c>
   13254:	ldr	r5, [pc, #72]	; 132a4 <__errno_location@plt+0x2040>
   13258:	add	r6, pc, r6
   1325c:	add	r5, pc, r5
   13260:	sub	r6, r6, r5
   13264:	mov	r8, r1
   13268:	mov	r9, r2
   1326c:	bl	10f2c <open@plt-0x20>
   13270:	asrs	r6, r6, #2
   13274:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13278:	mov	r4, #0
   1327c:	add	r4, r4, #1
   13280:	ldr	r3, [r5], #4
   13284:	mov	r2, r9
   13288:	mov	r1, r8
   1328c:	mov	r0, r7
   13290:	blx	r3
   13294:	cmp	r6, r4
   13298:	bne	1327c <__errno_location@plt+0x2018>
   1329c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   132a0:	muleq	r1, r0, ip
   132a4:	andeq	r0, r1, r8, lsl #25
   132a8:	bx	lr

Disassembly of section .fini:

000132ac <.fini>:
   132ac:	push	{r3, lr}
   132b0:	pop	{r3, pc}
