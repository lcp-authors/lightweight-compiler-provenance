
../repos/charybdis/extensions/.libs/override.so:     file format elf32-littlearm


Disassembly of section .init:

00000620 <_init>:
 620:	push	{r3, lr}
 624:	bl	700 <call_weak_fn>
 628:	pop	{r3, pc}

Disassembly of section .plt:

0000062c <.plt>:
 62c:	push	{lr}		; (str lr, [sp, #-4]!)
 630:	ldr	lr, [pc, #4]	; 63c <.plt+0x10>
 634:	add	lr, pc, lr
 638:	ldr	pc, [lr, #8]!
 63c:	.word	0x000119c4

00000640 <calloc@plt>:
 640:	add	ip, pc, #0, 12
 644:	add	ip, ip, #69632	; 0x11000
 648:	ldr	pc, [ip, #2500]!	; 0x9c4

0000064c <rb_current_time@plt>:
 64c:	add	ip, pc, #0, 12
 650:	add	ip, ip, #69632	; 0x11000
 654:	ldr	pc, [ip, #2492]!	; 0x9bc

00000658 <rb_event_add@plt>:
 658:	add	ip, pc, #0, 12
 65c:	add	ip, ip, #69632	; 0x11000
 660:	ldr	pc, [ip, #2484]!	; 0x9b4

00000664 <__cxa_finalize@plt>:
 664:	add	ip, pc, #0, 12
 668:	add	ip, ip, #69632	; 0x11000
 66c:	ldr	pc, [ip, #2476]!	; 0x9ac

00000670 <rb_event_delete@plt>:
 670:	add	ip, pc, #0, 12
 674:	add	ip, ip, #69632	; 0x11000
 678:	ldr	pc, [ip, #2468]!	; 0x9a4

0000067c <free@plt>:
 67c:	add	ip, pc, #0, 12
 680:	add	ip, ip, #69632	; 0x11000
 684:	ldr	pc, [ip, #2460]!	; 0x99c

00000688 <rb_outofmemory@plt>:
 688:	add	ip, pc, #0, 12
 68c:	add	ip, ip, #69632	; 0x11000
 690:	ldr	pc, [ip, #2452]!	; 0x994

00000694 <user_mode@plt>:
 694:	add	ip, pc, #0, 12
 698:	add	ip, ip, #69632	; 0x11000
 69c:	ldr	pc, [ip, #2444]!	; 0x98c

000006a0 <sendto_realops_snomask@plt>:
 6a0:	add	ip, pc, #0, 12
 6a4:	add	ip, ip, #69632	; 0x11000
 6a8:	ldr	pc, [ip, #2436]!	; 0x984

000006ac <find_umode_slot@plt>:
 6ac:	add	ip, pc, #0, 12
 6b0:	add	ip, ip, #69632	; 0x11000
 6b4:	ldr	pc, [ip, #2428]!	; 0x97c

000006b8 <get_oper_name@plt>:
 6b8:	add	ip, pc, #0, 12
 6bc:	add	ip, ip, #69632	; 0x11000
 6c0:	ldr	pc, [ip, #2420]!	; 0x974

000006c4 <__gmon_start__@plt>:
 6c4:	add	ip, pc, #0, 12
 6c8:	add	ip, ip, #69632	; 0x11000
 6cc:	ldr	pc, [ip, #2412]!	; 0x96c

000006d0 <get_channel_access@plt>:
 6d0:	add	ip, pc, #0, 12
 6d4:	add	ip, ip, #69632	; 0x11000
 6d8:	ldr	pc, [ip, #2404]!	; 0x964

000006dc <sendto_one_notice@plt>:
 6dc:	add	ip, pc, #0, 12
 6e0:	add	ip, ip, #69632	; 0x11000
 6e4:	ldr	pc, [ip, #2396]!	; 0x95c

000006e8 <privilegeset_in_set@plt>:
 6e8:	add	ip, pc, #0, 12
 6ec:	add	ip, ip, #69632	; 0x11000
 6f0:	ldr	pc, [ip, #2388]!	; 0x954

000006f4 <construct_umodebuf@plt>:
 6f4:	add	ip, pc, #0, 12
 6f8:	add	ip, ip, #69632	; 0x11000
 6fc:	ldr	pc, [ip, #2380]!	; 0x94c

Disassembly of section .text:

00000700 <call_weak_fn>:
     700:	ldr	r3, [pc, #20]	; 71c <call_weak_fn+0x1c>
     704:	ldr	r2, [pc, #20]	; 720 <call_weak_fn+0x20>
     708:	add	r3, pc, r3
     70c:	ldr	r2, [r3, r2]
     710:	cmp	r2, #0
     714:	bxeq	lr
     718:	b	6c4 <__gmon_start__@plt>
     71c:	.word	0x000118f0
     720:	.word	0x00000060

00000724 <deregister_tm_clones>:
     724:	ldr	r0, [pc, #44]	; 758 <deregister_tm_clones+0x34>
     728:	ldr	r3, [pc, #44]	; 75c <deregister_tm_clones+0x38>
     72c:	add	r0, pc, r0
     730:	add	r3, pc, r3
     734:	cmp	r3, r0
     738:	ldr	r3, [pc, #32]	; 760 <deregister_tm_clones+0x3c>
     73c:	add	r3, pc, r3
     740:	bxeq	lr
     744:	ldr	r2, [pc, #24]	; 764 <deregister_tm_clones+0x40>
     748:	ldr	r3, [r3, r2]
     74c:	cmp	r3, #0
     750:	bxeq	lr
     754:	bx	r3
     758:	.word	0x000119b8
     75c:	.word	0x000119b4
     760:	.word	0x000118bc
     764:	.word	0x00000054

00000768 <register_tm_clones>:
     768:	ldr	r0, [pc, #56]	; 7a8 <register_tm_clones+0x40>
     76c:	ldr	r3, [pc, #56]	; 7ac <register_tm_clones+0x44>
     770:	add	r0, pc, r0
     774:	add	r3, pc, r3
     778:	sub	r1, r3, r0
     77c:	ldr	r3, [pc, #44]	; 7b0 <register_tm_clones+0x48>
     780:	asr	r1, r1, #2
     784:	add	r3, pc, r3
     788:	add	r1, r1, r1, lsr #31
     78c:	asrs	r1, r1, #1
     790:	bxeq	lr
     794:	ldr	r2, [pc, #24]	; 7b4 <register_tm_clones+0x4c>
     798:	ldr	r3, [r3, r2]
     79c:	cmp	r3, #0
     7a0:	bxeq	lr
     7a4:	bx	r3
     7a8:	.word	0x00011974
     7ac:	.word	0x00011970
     7b0:	.word	0x00011874
     7b4:	.word	0x00000068

000007b8 <__do_global_dtors_aux>:
     7b8:	ldr	r3, [pc, #76]	; 80c <__do_global_dtors_aux+0x54>
     7bc:	ldr	r2, [pc, #76]	; 810 <__do_global_dtors_aux+0x58>
     7c0:	add	r3, pc, r3
     7c4:	add	r2, pc, r2
     7c8:	ldrb	r3, [r3]
     7cc:	cmp	r3, #0
     7d0:	bxne	lr
     7d4:	ldr	r3, [pc, #56]	; 814 <__do_global_dtors_aux+0x5c>
     7d8:	push	{r4, lr}
     7dc:	ldr	r3, [r2, r3]
     7e0:	cmp	r3, #0
     7e4:	beq	7f4 <__do_global_dtors_aux+0x3c>
     7e8:	ldr	r3, [pc, #40]	; 818 <__do_global_dtors_aux+0x60>
     7ec:	ldr	r0, [pc, r3]
     7f0:	bl	664 <__cxa_finalize@plt>
     7f4:	bl	724 <deregister_tm_clones>
     7f8:	ldr	r3, [pc, #28]	; 81c <__do_global_dtors_aux+0x64>
     7fc:	mov	r2, #1
     800:	add	r3, pc, r3
     804:	strb	r2, [r3]
     808:	pop	{r4, pc}
     80c:	.word	0x00011924
     810:	.word	0x00011834
     814:	.word	0x0000004c
     818:	.word	0x00011878
     81c:	.word	0x000118e4

00000820 <frame_dummy>:
     820:	b	768 <register_tm_clones>

00000824 <expire_override_deadlines>:
     824:	ldr	r3, [pc, #188]	; 8e8 <expire_override_deadlines+0xc4>
     828:	add	r3, pc, r3
     82c:	ldr	r2, [pc, #184]	; 8ec <expire_override_deadlines+0xc8>
     830:	ldr	r3, [r3, r2]
     834:	ldr	r3, [r3]
     838:	cmp	r3, #0
     83c:	bxeq	lr
     840:	strd	r4, [sp, #-28]!	; 0xffffffe4
     844:	strd	r6, [sp, #8]
     848:	strd	r8, [sp, #16]
     84c:	str	lr, [sp, #24]
     850:	sub	sp, sp, #20
     854:	ldr	r5, [r3, #8]
     858:	ldr	r9, [pc, #144]	; 8f0 <expire_override_deadlines+0xcc>
     85c:	add	r9, pc, r9
     860:	mov	r8, #0
     864:	mov	r7, sp
     868:	b	8a8 <expire_override_deadlines+0x84>
     86c:	ldr	r3, [r4, #12]
     870:	add	r3, r3, #88	; 0x58
     874:	str	r3, [sp]
     878:	str	r3, [sp, #4]
     87c:	str	r9, [sp, #8]
     880:	str	r8, [sp, #12]
     884:	ldr	r0, [r4, #12]
     888:	mov	r3, r7
     88c:	mov	r2, #3
     890:	mov	r1, r0
     894:	bl	694 <user_mode@plt>
     898:	cmp	r5, #0
     89c:	beq	8d0 <expire_override_deadlines+0xac>
     8a0:	mov	r3, r5
     8a4:	ldr	r5, [r5, #8]
     8a8:	ldr	r4, [r3]
     8ac:	ldr	r6, [r4, #16]
     8b0:	bl	64c <rb_current_time@plt>
     8b4:	cmp	r6, r0
     8b8:	bgt	8d0 <expire_override_deadlines+0xac>
     8bc:	ldr	r6, [r4, #16]
     8c0:	bl	64c <rb_current_time@plt>
     8c4:	cmp	r6, r0
     8c8:	bge	898 <expire_override_deadlines+0x74>
     8cc:	b	86c <expire_override_deadlines+0x48>
     8d0:	add	sp, sp, #20
     8d4:	ldrd	r4, [sp]
     8d8:	ldrd	r6, [sp, #8]
     8dc:	ldrd	r8, [sp, #16]
     8e0:	add	sp, sp, #24
     8e4:	pop	{pc}		; (ldr pc, [sp], #4)
     8e8:	.word	0x000117d0
     8ec:	.word	0x00000050
     8f0:	.word	0x00000a08

000008f4 <_moddeinit>:
     8f4:	strd	r4, [sp, #-24]!	; 0xffffffe8
     8f8:	strd	r6, [sp, #8]
     8fc:	str	r8, [sp, #16]
     900:	str	lr, [sp, #20]
     904:	ldr	r7, [pc, #228]	; 9f0 <_moddeinit+0xfc>
     908:	add	r7, pc, r7
     90c:	ldr	r3, [pc, #224]	; 9f4 <_moddeinit+0x100>
     910:	ldr	r3, [r7, r3]
     914:	mov	r2, #0
     918:	str	r2, [r3, #448]	; 0x1c0
     91c:	bl	6f4 <construct_umodebuf@plt>
     920:	ldr	r3, [pc, #208]	; 9f8 <_moddeinit+0x104>
     924:	ldr	r3, [r7, r3]
     928:	ldr	r3, [r3]
     92c:	cmp	r3, #0
     930:	beq	9cc <_moddeinit+0xd8>
     934:	ldr	r4, [r3, #8]
     938:	mov	r6, #0
     93c:	ldr	r2, [pc, #180]	; 9f8 <_moddeinit+0x104>
     940:	ldr	r5, [r7, r2]
     944:	ldr	r2, [r3, #8]
     948:	cmp	r2, #0
     94c:	beq	9a4 <_moddeinit+0xb0>
     950:	ldr	r1, [r3, #4]
     954:	str	r1, [r2, #4]
     958:	ldr	r2, [r3, #4]
     95c:	cmp	r2, #0
     960:	beq	9b8 <_moddeinit+0xc4>
     964:	ldr	r1, [r3, #8]
     968:	str	r1, [r2, #8]
     96c:	str	r6, [r3, #4]
     970:	str	r6, [r3, #8]
     974:	ldr	r2, [r5, #8]
     978:	sub	r2, r2, #1
     97c:	str	r2, [r5, #8]
     980:	ldr	r0, [r3]
     984:	cmp	r0, #0
     988:	beq	990 <_moddeinit+0x9c>
     98c:	bl	67c <free@plt>
     990:	cmp	r4, #0
     994:	beq	9cc <_moddeinit+0xd8>
     998:	mov	r3, r4
     99c:	ldr	r4, [r4, #8]
     9a0:	b	944 <_moddeinit+0x50>
     9a4:	ldr	r1, [r3, #4]
     9a8:	ldr	r2, [pc, #72]	; 9f8 <_moddeinit+0x104>
     9ac:	ldr	r2, [r7, r2]
     9b0:	str	r1, [r2, #4]
     9b4:	b	958 <_moddeinit+0x64>
     9b8:	ldr	r2, [pc, #56]	; 9f8 <_moddeinit+0x104>
     9bc:	ldr	r2, [r7, r2]
     9c0:	ldr	r1, [r3, #8]
     9c4:	str	r1, [r2]
     9c8:	b	96c <_moddeinit+0x78>
     9cc:	ldr	r3, [pc, #40]	; 9fc <_moddeinit+0x108>
     9d0:	ldr	r3, [r7, r3]
     9d4:	ldr	r0, [r3]
     9d8:	bl	670 <rb_event_delete@plt>
     9dc:	ldrd	r4, [sp]
     9e0:	ldrd	r6, [sp, #8]
     9e4:	ldr	r8, [sp, #16]
     9e8:	add	sp, sp, #20
     9ec:	pop	{pc}		; (ldr pc, [sp], #4)
     9f0:	.word	0x000116f0
     9f4:	.word	0x0000005c
     9f8:	.word	0x00000050
     9fc:	.word	0x00000058

00000a00 <handle_client_exit>:
     a00:	strd	r4, [sp, #-24]!	; 0xffffffe8
     a04:	strd	r6, [sp, #8]
     a08:	str	r8, [sp, #16]
     a0c:	str	lr, [sp, #20]
     a10:	ldr	r6, [pc, #204]	; ae4 <handle_client_exit+0xe4>
     a14:	add	r6, pc, r6
     a18:	ldr	r3, [pc, #200]	; ae8 <handle_client_exit+0xe8>
     a1c:	ldr	r3, [r6, r3]
     a20:	ldr	r3, [r3]
     a24:	cmp	r3, #0
     a28:	beq	ad0 <handle_client_exit+0xd0>
     a2c:	ldr	r5, [r0, #4]
     a30:	ldr	r4, [r3, #8]
     a34:	mov	r7, #0
     a38:	ldr	r0, [r3]
     a3c:	ldr	r2, [r0, #12]
     a40:	cmp	r2, r5
     a44:	beq	a5c <handle_client_exit+0x5c>
     a48:	cmp	r4, #0
     a4c:	beq	ad0 <handle_client_exit+0xd0>
     a50:	mov	r3, r4
     a54:	ldr	r4, [r4, #8]
     a58:	b	a38 <handle_client_exit+0x38>
     a5c:	ldr	r2, [r3, #8]
     a60:	cmp	r2, #0
     a64:	beq	aa8 <handle_client_exit+0xa8>
     a68:	ldr	r1, [r3, #4]
     a6c:	str	r1, [r2, #4]
     a70:	ldr	r2, [r3, #4]
     a74:	cmp	r2, #0
     a78:	beq	abc <handle_client_exit+0xbc>
     a7c:	ldr	r1, [r3, #8]
     a80:	str	r1, [r2, #8]
     a84:	str	r7, [r3, #4]
     a88:	str	r7, [r3, #8]
     a8c:	ldr	r3, [pc, #84]	; ae8 <handle_client_exit+0xe8>
     a90:	ldr	r2, [r6, r3]
     a94:	ldr	r3, [r2, #8]
     a98:	sub	r3, r3, #1
     a9c:	str	r3, [r2, #8]
     aa0:	bl	67c <free@plt>
     aa4:	b	a48 <handle_client_exit+0x48>
     aa8:	ldr	r1, [r3, #4]
     aac:	ldr	r2, [pc, #52]	; ae8 <handle_client_exit+0xe8>
     ab0:	ldr	r2, [r6, r2]
     ab4:	str	r1, [r2, #4]
     ab8:	b	a70 <handle_client_exit+0x70>
     abc:	ldr	r2, [pc, #36]	; ae8 <handle_client_exit+0xe8>
     ac0:	ldr	r2, [r6, r2]
     ac4:	ldr	r1, [r3, #8]
     ac8:	str	r1, [r2]
     acc:	b	a84 <handle_client_exit+0x84>
     ad0:	ldrd	r4, [sp]
     ad4:	ldrd	r6, [sp, #8]
     ad8:	ldr	r8, [sp, #16]
     adc:	add	sp, sp, #20
     ae0:	pop	{pc}		; (ldr pc, [sp], #4)
     ae4:	.word	0x000115e4
     ae8:	.word	0x00000050

00000aec <update_session_deadline>:
     aec:	strd	r4, [sp, #-16]!
     af0:	str	r6, [sp, #8]
     af4:	str	lr, [sp, #12]
     af8:	ldr	r5, [pc, #344]	; c58 <update_session_deadline+0x16c>
     afc:	add	r5, pc, r5
     b00:	subs	r4, r1, #0
     b04:	beq	ba8 <update_session_deadline+0xbc>
     b08:	bl	64c <rb_current_time@plt>
     b0c:	add	r0, r0, #1792	; 0x700
     b10:	add	r0, r0, #8
     b14:	str	r0, [r4, #16]
     b18:	mov	r0, r4
     b1c:	ldr	r3, [r4, #8]
     b20:	cmp	r3, #0
     b24:	beq	bf0 <update_session_deadline+0x104>
     b28:	ldr	r2, [r4, #4]
     b2c:	str	r2, [r3, #4]
     b30:	ldr	r3, [r4, #4]
     b34:	cmp	r3, #0
     b38:	beq	c04 <update_session_deadline+0x118>
     b3c:	ldr	r2, [r4, #8]
     b40:	str	r2, [r3, #8]
     b44:	mov	r2, #0
     b48:	str	r2, [r4, #4]
     b4c:	str	r2, [r4, #8]
     b50:	ldr	r3, [pc, #260]	; c5c <update_session_deadline+0x170>
     b54:	ldr	r3, [r5, r3]
     b58:	ldr	r1, [r3, #8]
     b5c:	sub	r1, r1, #1
     b60:	str	r1, [r3, #8]
     b64:	str	r4, [r4]
     b68:	str	r2, [r4, #4]
     b6c:	ldr	r3, [r3]
     b70:	str	r3, [r4, #8]
     b74:	cmp	r3, r2
     b78:	strne	r0, [r3, #4]
     b7c:	beq	c18 <update_session_deadline+0x12c>
     b80:	ldr	r3, [pc, #212]	; c5c <update_session_deadline+0x170>
     b84:	ldr	r3, [r5, r3]
     b88:	str	r0, [r3]
     b8c:	ldr	r2, [r3, #8]
     b90:	add	r2, r2, #1
     b94:	str	r2, [r3, #8]
     b98:	ldrd	r4, [sp]
     b9c:	ldr	r6, [sp, #8]
     ba0:	add	sp, sp, #12
     ba4:	pop	{pc}		; (ldr pc, [sp], #4)
     ba8:	mov	r6, r0
     bac:	ldr	r3, [pc, #168]	; c5c <update_session_deadline+0x170>
     bb0:	ldr	r3, [r5, r3]
     bb4:	ldr	r3, [r3]
     bb8:	cmp	r3, #0
     bbc:	beq	c3c <update_session_deadline+0x150>
     bc0:	ldr	r4, [r3]
     bc4:	ldr	r2, [r4, #12]
     bc8:	cmp	r0, r2
     bcc:	beq	b08 <update_session_deadline+0x1c>
     bd0:	ldr	r3, [r3, #8]
     bd4:	cmp	r3, #0
     bd8:	beq	c3c <update_session_deadline+0x150>
     bdc:	ldr	r4, [r3]
     be0:	ldr	r2, [r4, #12]
     be4:	cmp	r2, r6
     be8:	bne	bd0 <update_session_deadline+0xe4>
     bec:	b	b08 <update_session_deadline+0x1c>
     bf0:	ldr	r2, [r4, #4]
     bf4:	ldr	r3, [pc, #96]	; c5c <update_session_deadline+0x170>
     bf8:	ldr	r3, [r5, r3]
     bfc:	str	r2, [r3, #4]
     c00:	b	b30 <update_session_deadline+0x44>
     c04:	ldr	r3, [pc, #80]	; c5c <update_session_deadline+0x170>
     c08:	ldr	r3, [r5, r3]
     c0c:	ldr	r2, [r4, #8]
     c10:	str	r2, [r3]
     c14:	b	b44 <update_session_deadline+0x58>
     c18:	ldr	r3, [pc, #60]	; c5c <update_session_deadline+0x170>
     c1c:	ldr	r3, [r5, r3]
     c20:	ldr	r3, [r3, #4]
     c24:	cmp	r3, #0
     c28:	bne	b80 <update_session_deadline+0x94>
     c2c:	ldr	r3, [pc, #40]	; c5c <update_session_deadline+0x170>
     c30:	ldr	r3, [r5, r3]
     c34:	str	r0, [r3, #4]
     c38:	b	b80 <update_session_deadline+0x94>
     c3c:	mov	r1, #20
     c40:	mov	r0, #1
     c44:	bl	640 <calloc@plt>
     c48:	subs	r4, r0, #0
     c4c:	strne	r6, [r4, #12]
     c50:	bne	b08 <update_session_deadline+0x1c>
     c54:	bl	688 <rb_outofmemory@plt>
     c58:	.word	0x000114fc
     c5c:	.word	0x00000050

00000c60 <hack_can_send>:
     c60:	ldr	r2, [pc, #188]	; d24 <hack_can_send+0xc4>
     c64:	add	r2, pc, r2
     c68:	ldr	r3, [r0, #20]
     c6c:	cmp	r3, #0
     c70:	bxeq	lr
     c74:	ldr	r3, [r0, #16]
     c78:	sub	r3, r3, #1
     c7c:	cmp	r3, #1
     c80:	bxls	lr
     c84:	ldr	r3, [r0]
     c88:	ldr	r1, [pc, #152]	; d28 <hack_can_send+0xc8>
     c8c:	ldr	r2, [r2, r1]
     c90:	ldr	r1, [r3, #56]	; 0x38
     c94:	ldr	r2, [r2, #448]	; 0x1c0
     c98:	tst	r1, r2
     c9c:	bxeq	lr
     ca0:	strd	r4, [sp, #-12]!
     ca4:	str	lr, [sp, #8]
     ca8:	sub	sp, sp, #12
     cac:	mov	r2, #1
     cb0:	str	r2, [r0, #16]
     cb4:	ldr	r2, [r3, #64]	; 0x40
     cb8:	and	r4, r2, #8192	; 0x2000
     cbc:	mov	r5, #0
     cc0:	orrs	r2, r4, r5
     cc4:	beq	cd4 <hack_can_send+0x74>
     cc8:	ldrh	r2, [r3, #80]	; 0x50
     ccc:	cmp	r2, #64	; 0x40
     cd0:	beq	ce4 <hack_can_send+0x84>
     cd4:	add	sp, sp, #12
     cd8:	ldrd	r4, [sp]
     cdc:	add	sp, sp, #8
     ce0:	pop	{pc}		; (ldr pc, [sp], #4)
     ce4:	mov	r4, r0
     ce8:	mov	r1, r5
     cec:	mov	r0, r3
     cf0:	bl	aec <update_session_deadline>
     cf4:	ldr	r0, [r4]
     cf8:	bl	6b8 <get_oper_name@plt>
     cfc:	ldr	r3, [r4, #4]
     d00:	ldr	r3, [r3, #236]	; 0xec
     d04:	str	r3, [sp]
     d08:	mov	r3, r0
     d0c:	ldr	r2, [pc, #24]	; d2c <hack_can_send+0xcc>
     d10:	add	r2, pc, r2
     d14:	mov	r1, #256	; 0x100
     d18:	mov	r0, r1
     d1c:	bl	6a0 <sendto_realops_snomask@plt>
     d20:	b	cd4 <hack_can_send+0x74>
     d24:	.word	0x00011394
     d28:	.word	0x0000005c
     d2c:	.word	0x00000558

00000d30 <hack_can_join>:
     d30:	ldr	r3, [pc, #136]	; dc0 <hack_can_join+0x90>
     d34:	add	r3, pc, r3
     d38:	ldr	r2, [r0, #8]
     d3c:	cmp	r2, #0
     d40:	bxeq	lr
     d44:	ldr	r2, [r0]
     d48:	ldr	r1, [pc, #116]	; dc4 <hack_can_join+0x94>
     d4c:	ldr	r3, [r3, r1]
     d50:	ldr	r1, [r2, #56]	; 0x38
     d54:	ldr	r3, [r3, #448]	; 0x1c0
     d58:	tst	r1, r3
     d5c:	bxeq	lr
     d60:	str	r4, [sp, #-8]!
     d64:	str	lr, [sp, #4]
     d68:	sub	sp, sp, #8
     d6c:	mov	r4, r0
     d70:	mov	r1, #0
     d74:	mov	r0, r2
     d78:	bl	aec <update_session_deadline>
     d7c:	mov	r3, #0
     d80:	str	r3, [r4, #8]
     d84:	ldr	r0, [r4]
     d88:	bl	6b8 <get_oper_name@plt>
     d8c:	ldr	r3, [r4, #4]
     d90:	ldr	r3, [r3, #236]	; 0xec
     d94:	str	r3, [sp]
     d98:	mov	r3, r0
     d9c:	ldr	r2, [pc, #36]	; dc8 <hack_can_join+0x98>
     da0:	add	r2, pc, r2
     da4:	mov	r1, #256	; 0x100
     da8:	mov	r0, r1
     dac:	bl	6a0 <sendto_realops_snomask@plt>
     db0:	add	sp, sp, #8
     db4:	ldr	r4, [sp]
     db8:	add	sp, sp, #4
     dbc:	pop	{pc}		; (ldr pc, [sp], #4)
     dc0:	.word	0x000112c4
     dc4:	.word	0x0000005c
     dc8:	.word	0x000004fc

00000dcc <hack_channel_access>:
     dcc:	ldr	r3, [pc, #168]	; e7c <hack_channel_access+0xb0>
     dd0:	add	r3, pc, r3
     dd4:	ldr	r2, [r0, #20]
     dd8:	cmp	r2, #0
     ddc:	bxeq	lr
     de0:	ldr	r2, [r0, #16]
     de4:	cmp	r2, #2
     de8:	bxeq	lr
     dec:	ldr	r2, [r0]
     df0:	ldr	r1, [pc, #136]	; e80 <hack_channel_access+0xb4>
     df4:	ldr	r3, [r3, r1]
     df8:	ldr	r1, [r2, #56]	; 0x38
     dfc:	ldr	r3, [r3, #448]	; 0x1c0
     e00:	tst	r1, r3
     e04:	bxeq	lr
     e08:	str	r4, [sp, #-8]!
     e0c:	str	lr, [sp, #4]
     e10:	sub	sp, sp, #8
     e14:	mov	r4, r0
     e18:	mov	r1, #0
     e1c:	mov	r0, r2
     e20:	bl	aec <update_session_deadline>
     e24:	mov	r3, #4
     e28:	str	r3, [r4, #16]
     e2c:	ldr	r3, [r4, #24]
     e30:	cmp	r3, #0
     e34:	beq	e6c <hack_channel_access+0xa0>
     e38:	ldr	r0, [r4]
     e3c:	bl	6b8 <get_oper_name@plt>
     e40:	ldr	r3, [r4, #24]
     e44:	str	r3, [sp, #4]
     e48:	ldr	r3, [r4, #4]
     e4c:	ldr	r3, [r3, #236]	; 0xec
     e50:	str	r3, [sp]
     e54:	mov	r3, r0
     e58:	ldr	r2, [pc, #36]	; e84 <hack_channel_access+0xb8>
     e5c:	add	r2, pc, r2
     e60:	mov	r1, #256	; 0x100
     e64:	mov	r0, r1
     e68:	bl	6a0 <sendto_realops_snomask@plt>
     e6c:	add	sp, sp, #8
     e70:	ldr	r4, [sp]
     e74:	add	sp, sp, #4
     e78:	pop	{pc}		; (ldr pc, [sp], #4)
     e7c:	.word	0x00011228
     e80:	.word	0x0000005c
     e84:	.word	0x00000470

00000e88 <hack_can_kick>:
     e88:	strd	r4, [sp, #-12]!
     e8c:	str	lr, [sp, #8]
     e90:	sub	sp, sp, #12
     e94:	mov	r4, r0
     e98:	ldr	r5, [pc, #148]	; f34 <hack_can_kick+0xac>
     e9c:	add	r5, pc, r5
     ea0:	mov	r3, #0
     ea4:	str	r3, [sp]
     ea8:	ldr	r3, [r0, #20]
     eac:	ldr	r2, [r0, #8]
     eb0:	ldr	r1, [r0, #4]
     eb4:	ldr	r0, [r0]
     eb8:	bl	6d0 <get_channel_access@plt>
     ebc:	cmp	r0, #4
     ec0:	bne	ee0 <hack_can_kick+0x58>
     ec4:	ldr	r0, [r4]
     ec8:	ldr	r3, [pc, #104]	; f38 <hack_can_kick+0xb0>
     ecc:	ldr	r3, [r5, r3]
     ed0:	ldr	r2, [r0, #56]	; 0x38
     ed4:	ldr	r3, [r3, #448]	; 0x1c0
     ed8:	tst	r2, r3
     edc:	bne	ef0 <hack_can_kick+0x68>
     ee0:	add	sp, sp, #12
     ee4:	ldrd	r4, [sp]
     ee8:	add	sp, sp, #8
     eec:	pop	{pc}		; (ldr pc, [sp], #4)
     ef0:	mov	r1, #0
     ef4:	bl	aec <update_session_deadline>
     ef8:	ldr	r0, [r4]
     efc:	bl	6b8 <get_oper_name@plt>
     f00:	ldr	r3, [r4, #12]
     f04:	add	r3, r3, #88	; 0x58
     f08:	str	r3, [sp, #4]
     f0c:	ldr	r3, [r4, #4]
     f10:	ldr	r3, [r3, #236]	; 0xec
     f14:	str	r3, [sp]
     f18:	mov	r3, r0
     f1c:	ldr	r2, [pc, #24]	; f3c <hack_can_kick+0xb4>
     f20:	add	r2, pc, r2
     f24:	mov	r1, #256	; 0x100
     f28:	mov	r0, r1
     f2c:	bl	6a0 <sendto_realops_snomask@plt>
     f30:	b	ee0 <hack_can_kick+0x58>
     f34:	.word	0x0001115c
     f38:	.word	0x0000005c
     f3c:	.word	0x000003e0

00000f40 <check_umode_change>:
     f40:	strd	r4, [sp, #-24]!	; 0xffffffe8
     f44:	strd	r6, [sp, #8]
     f48:	str	r8, [sp, #16]
     f4c:	str	lr, [sp, #20]
     f50:	ldr	r5, [pc, #432]	; 1108 <check_umode_change+0x1c8>
     f54:	add	r5, pc, r5
     f58:	ldr	r4, [r0]
     f5c:	ldr	r1, [r4, #64]	; 0x40
     f60:	and	r2, r1, #8192	; 0x2000
     f64:	mov	r3, #0
     f68:	orrs	r3, r2, r3
     f6c:	beq	1038 <check_umode_change+0xf8>
     f70:	ldrh	r3, [r4, #80]	; 0x50
     f74:	cmp	r3, #64	; 0x40
     f78:	bne	1038 <check_umode_change+0xf8>
     f7c:	ldr	r3, [r0, #4]
     f80:	tst	r3, #4096	; 0x1000
     f84:	beq	fa8 <check_umode_change+0x68>
     f88:	ldr	r3, [r4, #56]	; 0x38
     f8c:	tst	r3, #4096	; 0x1000
     f90:	bne	fa8 <check_umode_change+0x68>
     f94:	ldr	r2, [pc, #368]	; 110c <check_umode_change+0x1cc>
     f98:	ldr	r2, [r5, r2]
     f9c:	ldr	r2, [r2, #448]	; 0x1c0
     fa0:	bic	r3, r3, r2
     fa4:	str	r3, [r4, #56]	; 0x38
     fa8:	ldr	r1, [r4, #56]	; 0x38
     fac:	ldr	r3, [pc, #344]	; 110c <check_umode_change+0x1cc>
     fb0:	ldr	r3, [r5, r3]
     fb4:	ldr	r2, [r3, #448]	; 0x1c0
     fb8:	ldr	r3, [r0, #4]
     fbc:	eor	r3, r3, r1
     fc0:	and	r6, r3, r2
     fc4:	tst	r1, r2
     fc8:	beq	104c <check_umode_change+0x10c>
     fcc:	ldr	r3, [r4, #24]
     fd0:	cmp	r3, #0
     fd4:	beq	1010 <check_umode_change+0xd0>
     fd8:	ldr	r0, [r3, #36]	; 0x24
     fdc:	cmp	r0, #0
     fe0:	beq	1010 <check_umode_change+0xd0>
     fe4:	ldr	r1, [pc, #292]	; 1110 <check_umode_change+0x1d0>
     fe8:	add	r1, pc, r1
     fec:	bl	6e8 <privilegeset_in_set@plt>
     ff0:	cmp	r0, #0
     ff4:	beq	1010 <check_umode_change+0xd0>
     ff8:	cmp	r6, #0
     ffc:	beq	1038 <check_umode_change+0xf8>
    1000:	mov	r1, #0
    1004:	mov	r0, r4
    1008:	bl	aec <update_session_deadline>
    100c:	b	1038 <check_umode_change+0xf8>
    1010:	ldr	r1, [pc, #252]	; 1114 <check_umode_change+0x1d4>
    1014:	add	r1, pc, r1
    1018:	mov	r0, r4
    101c:	bl	6dc <sendto_one_notice@plt>
    1020:	ldr	r3, [pc, #228]	; 110c <check_umode_change+0x1cc>
    1024:	ldr	r3, [r5, r3]
    1028:	ldr	r2, [r3, #448]	; 0x1c0
    102c:	ldr	r3, [r4, #56]	; 0x38
    1030:	bic	r3, r3, r2
    1034:	str	r3, [r4, #56]	; 0x38
    1038:	ldrd	r4, [sp]
    103c:	ldrd	r6, [sp, #8]
    1040:	ldr	r8, [sp, #16]
    1044:	add	sp, sp, #20
    1048:	pop	{pc}		; (ldr pc, [sp], #4)
    104c:	cmp	r6, #0
    1050:	beq	1038 <check_umode_change+0xf8>
    1054:	ldr	r3, [pc, #188]	; 1118 <check_umode_change+0x1d8>
    1058:	ldr	r3, [r5, r3]
    105c:	ldr	r3, [r3]
    1060:	cmp	r3, #0
    1064:	beq	1038 <check_umode_change+0xf8>
    1068:	ldr	r6, [r3, #8]
    106c:	mov	r7, #0
    1070:	ldr	r0, [r3]
    1074:	ldr	r2, [r0, #12]
    1078:	cmp	r2, r4
    107c:	beq	1094 <check_umode_change+0x154>
    1080:	cmp	r6, #0
    1084:	beq	1038 <check_umode_change+0xf8>
    1088:	mov	r3, r6
    108c:	ldr	r6, [r6, #8]
    1090:	b	1070 <check_umode_change+0x130>
    1094:	ldr	r2, [r3, #8]
    1098:	cmp	r2, #0
    109c:	beq	10e0 <check_umode_change+0x1a0>
    10a0:	ldr	r1, [r3, #4]
    10a4:	str	r1, [r2, #4]
    10a8:	ldr	r2, [r3, #4]
    10ac:	cmp	r2, #0
    10b0:	beq	10f4 <check_umode_change+0x1b4>
    10b4:	ldr	r1, [r3, #8]
    10b8:	str	r1, [r2, #8]
    10bc:	str	r7, [r3, #4]
    10c0:	str	r7, [r3, #8]
    10c4:	ldr	r3, [pc, #76]	; 1118 <check_umode_change+0x1d8>
    10c8:	ldr	r2, [r5, r3]
    10cc:	ldr	r3, [r2, #8]
    10d0:	sub	r3, r3, #1
    10d4:	str	r3, [r2, #8]
    10d8:	bl	67c <free@plt>
    10dc:	b	1080 <check_umode_change+0x140>
    10e0:	ldr	r1, [r3, #4]
    10e4:	ldr	r2, [pc, #44]	; 1118 <check_umode_change+0x1d8>
    10e8:	ldr	r2, [r5, r2]
    10ec:	str	r1, [r2, #4]
    10f0:	b	10a8 <check_umode_change+0x168>
    10f4:	ldr	r2, [pc, #28]	; 1118 <check_umode_change+0x1d8>
    10f8:	ldr	r2, [r5, r2]
    10fc:	ldr	r1, [r3, #8]
    1100:	str	r1, [r2]
    1104:	b	10bc <check_umode_change+0x17c>
    1108:	.word	0x000110a4
    110c:	.word	0x0000005c
    1110:	.word	0x00000344
    1114:	.word	0x00000328
    1118:	.word	0x00000050

0000111c <_modinit>:
    111c:	strd	r4, [sp, #-16]!
    1120:	str	r6, [sp, #8]
    1124:	str	lr, [sp, #12]
    1128:	ldr	r5, [pc, #184]	; 11e8 <_modinit+0xcc>
    112c:	add	r5, pc, r5
    1130:	bl	6ac <find_umode_slot@plt>
    1134:	ldr	r3, [pc, #176]	; 11ec <_modinit+0xd0>
    1138:	ldr	r3, [r5, r3]
    113c:	str	r0, [r3, #448]	; 0x1c0
    1140:	bl	6f4 <construct_umodebuf@plt>
    1144:	ldr	r3, [pc, #164]	; 11f0 <_modinit+0xd4>
    1148:	ldr	r3, [r5, r3]
    114c:	ldr	r4, [r3]
    1150:	cmp	r4, #0
    1154:	beq	11ac <_modinit+0x90>
    1158:	mov	r6, #0
    115c:	b	1174 <_modinit+0x58>
    1160:	mov	r1, r6
    1164:	bl	aec <update_session_deadline>
    1168:	ldr	r4, [r4, #8]
    116c:	cmp	r4, #0
    1170:	beq	11ac <_modinit+0x90>
    1174:	ldr	r0, [r4]
    1178:	ldrh	r3, [r0, #80]	; 0x50
    117c:	cmp	r3, #64	; 0x40
    1180:	bne	1168 <_modinit+0x4c>
    1184:	ldr	r3, [r0, #24]
    1188:	cmp	r3, #0
    118c:	beq	1168 <_modinit+0x4c>
    1190:	ldr	r3, [pc, #84]	; 11ec <_modinit+0xd0>
    1194:	ldr	r3, [r5, r3]
    1198:	ldr	r2, [r0, #56]	; 0x38
    119c:	ldr	r3, [r3, #448]	; 0x1c0
    11a0:	tst	r2, r3
    11a4:	beq	1168 <_modinit+0x4c>
    11a8:	b	1160 <_modinit+0x44>
    11ac:	mov	r3, #60	; 0x3c
    11b0:	mov	r2, #0
    11b4:	ldr	r1, [pc, #56]	; 11f4 <_modinit+0xd8>
    11b8:	add	r1, pc, r1
    11bc:	ldr	r0, [pc, #52]	; 11f8 <_modinit+0xdc>
    11c0:	add	r0, pc, r0
    11c4:	bl	658 <rb_event_add@plt>
    11c8:	ldr	r3, [pc, #44]	; 11fc <_modinit+0xe0>
    11cc:	ldr	r3, [r5, r3]
    11d0:	str	r0, [r3]
    11d4:	mov	r0, #0
    11d8:	ldrd	r4, [sp]
    11dc:	ldr	r6, [sp, #8]
    11e0:	add	sp, sp, #12
    11e4:	pop	{pc}		; (ldr pc, [sp], #4)
    11e8:	.word	0x00010ecc
    11ec:	.word	0x0000005c
    11f0:	.word	0x00000064
    11f4:	.word	0xfffff664
    11f8:	.word	0x000001ac
    11fc:	.word	0x00000058

Disassembly of section .fini:

00001200 <_fini>:
    1200:	push	{r3, lr}
    1204:	pop	{r3, pc}
