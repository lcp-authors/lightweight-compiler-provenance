
../repos/daq-2.0.7/sfbpf/.libs/libsfbpf.so.0.0.1:     file format elf32-littlearm


Disassembly of section .init:

00000cf4 <_init>:
 cf4:	push	{r3, lr}
 cf8:	bl	ef4 <call_weak_fn>
 cfc:	pop	{r3, pc}

Disassembly of section .plt:

00000d00 <.plt>:
 d00:	push	{lr}		; (str lr, [sp, #-4]!)
 d04:	ldr	lr, [pc, #4]	; d10 <.plt+0x10>
 d08:	add	lr, pc, lr
 d0c:	ldr	pc, [lr, #8]!
 d10:	.word	0x000462f0

00000d14 <calloc@plt>:
 d14:	add	ip, pc, #0, 12
 d18:	add	ip, ip, #286720	; 0x46000
 d1c:	ldr	pc, [ip, #752]!	; 0x2f0

00000d20 <strcmp@plt>:
 d20:	add	ip, pc, #0, 12
 d24:	add	ip, ip, #286720	; 0x46000
 d28:	ldr	pc, [ip, #744]!	; 0x2e8

00000d2c <__cxa_finalize@plt>:
 d2c:	add	ip, pc, #0, 12
 d30:	add	ip, ip, #286720	; 0x46000
 d34:	ldr	pc, [ip, #736]!	; 0x2e0

00000d38 <printf@plt>:
 d38:	add	ip, pc, #0, 12
 d3c:	add	ip, ip, #286720	; 0x46000
 d40:	ldr	pc, [ip, #728]!	; 0x2d8

00000d44 <fopen@plt>:
 d44:	add	ip, pc, #0, 12
 d48:	add	ip, ip, #286720	; 0x46000
 d4c:	ldr	pc, [ip, #720]!	; 0x2d0

00000d50 <getprotobyname@plt>:
 d50:	add	ip, pc, #0, 12
 d54:	add	ip, ip, #286720	; 0x46000
 d58:	ldr	pc, [ip, #712]!	; 0x2c8

00000d5c <longjmp@plt>:
 d5c:	add	ip, pc, #0, 12
 d60:	add	ip, ip, #286720	; 0x46000
 d64:	ldr	pc, [ip, #704]!	; 0x2c0

00000d68 <_setjmp@plt>:
 d68:	add	ip, pc, #0, 12
 d6c:	add	ip, ip, #286720	; 0x46000
 d70:	ldr	pc, [ip, #696]!	; 0x2b8

00000d74 <free@plt>:
 d74:	add	ip, pc, #0, 12
 d78:	add	ip, ip, #286720	; 0x46000
 d7c:	ldr	pc, [ip, #688]!	; 0x2b0

00000d80 <getnetbyname@plt>:
 d80:	add	ip, pc, #0, 12
 d84:	add	ip, ip, #286720	; 0x46000
 d88:	ldr	pc, [ip, #680]!	; 0x2a8

00000d8c <ferror@plt>:
 d8c:	add	ip, pc, #0, 12
 d90:	add	ip, ip, #286720	; 0x46000
 d94:	ldr	pc, [ip, #672]!	; 0x2a0

00000d98 <memcpy@plt>:
 d98:	add	ip, pc, #0, 12
 d9c:	add	ip, ip, #286720	; 0x46000
 da0:	ldr	pc, [ip, #664]!	; 0x298

00000da4 <strdup@plt>:
 da4:	add	ip, pc, #0, 12
 da8:	add	ip, ip, #286720	; 0x46000
 dac:	ldr	pc, [ip, #656]!	; 0x290

00000db0 <rewind@plt>:
 db0:	add	ip, pc, #0, 12
 db4:	add	ip, ip, #286720	; 0x46000
 db8:	ldr	pc, [ip, #648]!	; 0x288

00000dbc <realloc@plt>:
 dbc:	add	ip, pc, #0, 12
 dc0:	add	ip, ip, #286720	; 0x46000
 dc4:	ldr	pc, [ip, #640]!	; 0x280

00000dc8 <fwrite@plt>:
 dc8:	add	ip, pc, #0, 12
 dcc:	add	ip, ip, #286720	; 0x46000
 dd0:	ldr	pc, [ip, #632]!	; 0x278

00000dd4 <fread@plt>:
 dd4:	add	ip, pc, #0, 12
 dd8:	add	ip, ip, #286720	; 0x46000
 ddc:	ldr	pc, [ip, #624]!	; 0x270

00000de0 <puts@plt>:
 de0:	add	ip, pc, #0, 12
 de4:	add	ip, ip, #286720	; 0x46000
 de8:	ldr	pc, [ip, #616]!	; 0x268

00000dec <malloc@plt>:
 dec:	add	ip, pc, #0, 12
 df0:	add	ip, ip, #286720	; 0x46000
 df4:	ldr	pc, [ip, #608]!	; 0x260

00000df8 <__gmon_start__@plt>:
 df8:	add	ip, pc, #0, 12
 dfc:	add	ip, ip, #286720	; 0x46000
 e00:	ldr	pc, [ip, #600]!	; 0x258

00000e04 <__ctype_b_loc@plt>:
 e04:	add	ip, pc, #0, 12
 e08:	add	ip, ip, #286720	; 0x46000
 e0c:	ldr	pc, [ip, #592]!	; 0x250

00000e10 <exit@plt>:
 e10:	add	ip, pc, #0, 12
 e14:	add	ip, ip, #286720	; 0x46000
 e18:	ldr	pc, [ip, #584]!	; 0x248

00000e1c <strlen@plt>:
 e1c:	add	ip, pc, #0, 12
 e20:	add	ip, ip, #286720	; 0x46000
 e24:	ldr	pc, [ip, #576]!	; 0x240

00000e28 <strchr@plt>:
 e28:	add	ip, pc, #0, 12
 e2c:	add	ip, ip, #286720	; 0x46000
 e30:	ldr	pc, [ip, #568]!	; 0x238

00000e34 <fprintf@plt>:
 e34:	add	ip, pc, #0, 12
 e38:	add	ip, ip, #286720	; 0x46000
 e3c:	ldr	pc, [ip, #560]!	; 0x230

00000e40 <__errno_location@plt>:
 e40:	add	ip, pc, #0, 12
 e44:	add	ip, ip, #286720	; 0x46000
 e48:	ldr	pc, [ip, #552]!	; 0x228

00000e4c <getservbyname@plt>:
 e4c:	add	ip, pc, #0, 12
 e50:	add	ip, ip, #286720	; 0x46000
 e54:	ldr	pc, [ip, #544]!	; 0x220

00000e58 <memset@plt>:
 e58:	add	ip, pc, #0, 12
 e5c:	add	ip, ip, #286720	; 0x46000
 e60:	ldr	pc, [ip, #536]!	; 0x218

00000e64 <putchar@plt>:
 e64:	add	ip, pc, #0, 12
 e68:	add	ip, ip, #286720	; 0x46000
 e6c:	ldr	pc, [ip, #528]!	; 0x210

00000e70 <strncpy@plt>:
 e70:	add	ip, pc, #0, 12
 e74:	add	ip, ip, #286720	; 0x46000
 e78:	ldr	pc, [ip, #520]!	; 0x208

00000e7c <fileno@plt>:
 e7c:	add	ip, pc, #0, 12
 e80:	add	ip, ip, #286720	; 0x46000
 e84:	ldr	pc, [ip, #512]!	; 0x200

00000e88 <sscanf@plt>:
 e88:	add	ip, pc, #0, 12
 e8c:	add	ip, ip, #286720	; 0x46000
 e90:	ldr	pc, [ip, #504]!	; 0x1f8

00000e94 <clearerr@plt>:
 e94:	add	ip, pc, #0, 12
 e98:	add	ip, ip, #286720	; 0x46000
 e9c:	ldr	pc, [ip, #496]!	; 0x1f0

00000ea0 <vsnprintf@plt>:
 ea0:	add	ip, pc, #0, 12
 ea4:	add	ip, ip, #286720	; 0x46000
 ea8:	ldr	pc, [ip, #488]!	; 0x1e8

00000eac <freeaddrinfo@plt>:
 eac:	add	ip, pc, #0, 12
 eb0:	add	ip, ip, #286720	; 0x46000
 eb4:	ldr	pc, [ip, #480]!	; 0x1e0

00000eb8 <getaddrinfo@plt>:
 eb8:	add	ip, pc, #0, 12
 ebc:	add	ip, ip, #286720	; 0x46000
 ec0:	ldr	pc, [ip, #472]!	; 0x1d8

00000ec4 <gethostbyname@plt>:
 ec4:	add	ip, pc, #0, 12
 ec8:	add	ip, ip, #286720	; 0x46000
 ecc:	ldr	pc, [ip, #464]!	; 0x1d0

00000ed0 <isatty@plt>:
 ed0:	add	ip, pc, #0, 12
 ed4:	add	ip, ip, #286720	; 0x46000
 ed8:	ldr	pc, [ip, #456]!	; 0x1c8

00000edc <abort@plt>:
 edc:	add	ip, pc, #0, 12
 ee0:	add	ip, ip, #286720	; 0x46000
 ee4:	ldr	pc, [ip, #448]!	; 0x1c0

00000ee8 <getc@plt>:
 ee8:	add	ip, pc, #0, 12
 eec:	add	ip, ip, #286720	; 0x46000
 ef0:	ldr	pc, [ip, #440]!	; 0x1b8

Disassembly of section .text:

00000ef4 <call_weak_fn>:
     ef4:	ldr	r3, [pc, #20]	; f10 <call_weak_fn+0x1c>
     ef8:	ldr	r2, [pc, #20]	; f14 <call_weak_fn+0x20>
     efc:	add	r3, pc, r3
     f00:	ldr	r2, [r3, r2]
     f04:	cmp	r2, #0
     f08:	bxeq	lr
     f0c:	b	df8 <__gmon_start__@plt>
     f10:	.word	0x000460fc
     f14:	.word	0x000000bc

00000f18 <deregister_tm_clones>:
     f18:	ldr	r0, [pc, #44]	; f4c <deregister_tm_clones+0x34>
     f1c:	ldr	r3, [pc, #44]	; f50 <deregister_tm_clones+0x38>
     f20:	add	r0, pc, r0
     f24:	add	r3, pc, r3
     f28:	cmp	r3, r0
     f2c:	ldr	r3, [pc, #32]	; f54 <deregister_tm_clones+0x3c>
     f30:	add	r3, pc, r3
     f34:	bxeq	lr
     f38:	ldr	r2, [pc, #24]	; f58 <deregister_tm_clones+0x40>
     f3c:	ldr	r3, [r3, r2]
     f40:	cmp	r3, #0
     f44:	bxeq	lr
     f48:	bx	r3
     f4c:	.word	0x00046268
     f50:	.word	0x00046264
     f54:	.word	0x000460c8
     f58:	.word	0x000000b0

00000f5c <register_tm_clones>:
     f5c:	ldr	r0, [pc, #56]	; f9c <register_tm_clones+0x40>
     f60:	ldr	r3, [pc, #56]	; fa0 <register_tm_clones+0x44>
     f64:	add	r0, pc, r0
     f68:	add	r3, pc, r3
     f6c:	sub	r1, r3, r0
     f70:	ldr	r3, [pc, #44]	; fa4 <register_tm_clones+0x48>
     f74:	asr	r1, r1, #2
     f78:	add	r3, pc, r3
     f7c:	add	r1, r1, r1, lsr #31
     f80:	asrs	r1, r1, #1
     f84:	bxeq	lr
     f88:	ldr	r2, [pc, #24]	; fa8 <register_tm_clones+0x4c>
     f8c:	ldr	r3, [r3, r2]
     f90:	cmp	r3, #0
     f94:	bxeq	lr
     f98:	bx	r3
     f9c:	.word	0x00046224
     fa0:	.word	0x00046220
     fa4:	.word	0x00046080
     fa8:	.word	0x000000cc

00000fac <__do_global_dtors_aux>:
     fac:	ldr	r3, [pc, #76]	; 1000 <__do_global_dtors_aux+0x54>
     fb0:	ldr	r2, [pc, #76]	; 1004 <__do_global_dtors_aux+0x58>
     fb4:	add	r3, pc, r3
     fb8:	add	r2, pc, r2
     fbc:	ldrb	r3, [r3]
     fc0:	cmp	r3, #0
     fc4:	bxne	lr
     fc8:	ldr	r3, [pc, #56]	; 1008 <__do_global_dtors_aux+0x5c>
     fcc:	push	{r4, lr}
     fd0:	ldr	r3, [r2, r3]
     fd4:	cmp	r3, #0
     fd8:	beq	fe8 <__do_global_dtors_aux+0x3c>
     fdc:	ldr	r3, [pc, #40]	; 100c <__do_global_dtors_aux+0x60>
     fe0:	ldr	r0, [pc, r3]
     fe4:	bl	d2c <__cxa_finalize@plt>
     fe8:	bl	f18 <deregister_tm_clones>
     fec:	ldr	r3, [pc, #28]	; 1010 <__do_global_dtors_aux+0x64>
     ff0:	mov	r2, #1
     ff4:	add	r3, pc, r3
     ff8:	strb	r2, [r3]
     ffc:	pop	{r4, pc}
    1000:	.word	0x000461d4
    1004:	.word	0x00046040
    1008:	.word	0x000000ac
    100c:	.word	0x000460e8
    1010:	.word	0x00046194

00001014 <frame_dummy>:
    1014:	b	f5c <register_tm_clones>

00001018 <sfbpf_filter>:
    1018:	push	{r4, r5, r6, r7, fp, lr}
    101c:	add	fp, sp, #16
    1020:	sub	sp, sp, #64	; 0x40
    1024:	cmp	r0, #0
    1028:	beq	103c <sfbpf_filter+0x24>
    102c:	sub	ip, r0, #8
    1030:	mov	r4, #0
    1034:	mov	lr, #0
    1038:	b	1064 <sfbpf_filter+0x4c>
    103c:	mvn	r0, #0
    1040:	sub	sp, fp, #16
    1044:	pop	{r4, r5, r6, r7, fp, pc}
    1048:	ldr	r4, [r5, #12]
    104c:	mov	r6, #10
    1050:	tst	r4, r0
    1054:	movweq	r6, #11
    1058:	ldrb	r4, [r5, r6]
    105c:	add	ip, ip, r4, lsl #3
    1060:	mov	r4, r0
    1064:	mov	r0, r4
    1068:	mov	r5, ip
    106c:	ldrh	r4, [ip, #8]!
    1070:	cmp	r4, #177	; 0xb1
    1074:	bhi	15d0 <sfbpf_filter+0x5b8>
    1078:	add	r6, pc, #8
    107c:	ldr	r7, [r6, r4, lsl #2]
    1080:	mov	r4, r2
    1084:	add	pc, r6, r7
    1088:	.word	0x000002c8
    108c:	.word	0x00000350
    1090:	.word	0x0000035c
    1094:	.word	0x00000370
    1098:	.word	0x00000384
    109c:	.word	0x00000390
    10a0:	.word	0x00000530
    10a4:	.word	0x00000318
    10a8:	.word	0x00000548
    10ac:	.word	0x00000548
    10b0:	.word	0x00000548
    10b4:	.word	0x00000548
    10b8:	.word	0x00000398
    10bc:	.word	0x00000548
    10c0:	.word	0x00000548
    10c4:	.word	0x00000548
    10c8:	.word	0x00000548
    10cc:	.word	0x00000548
    10d0:	.word	0x00000548
    10d4:	.word	0x00000548
    10d8:	.word	0x000003a0
    10dc:	.word	0x000003ac
    10e0:	.word	0x00000534
    10e4:	.word	0x00000548
    10e8:	.word	0x00000548
    10ec:	.word	0x00000548
    10f0:	.word	0x00000548
    10f4:	.word	0x00000548
    10f8:	.word	0x00000324
    10fc:	.word	0x000003c0
    1100:	.word	0x00000548
    1104:	.word	0x00000548
    1108:	.word	0x000003d4
    110c:	.word	0x00000548
    1110:	.word	0x00000548
    1114:	.word	0x00000548
    1118:	.word	0x000003dc
    111c:	.word	0x000003e8
    1120:	.word	0x00000548
    1124:	.word	0x00000548
    1128:	.word	0x000003fc
    112c:	.word	0x00000548
    1130:	.word	0x00000548
    1134:	.word	0x00000548
    1138:	.word	0x00000404
    113c:	.word	0x0000040c
    1140:	.word	0x00000548
    1144:	.word	0x00000548
    1148:	.word	0x00000420
    114c:	.word	0x00000548
    1150:	.word	0x00000548
    1154:	.word	0x00000548
    1158:	.word	0x00000434
    115c:	.word	0x00000440
    1160:	.word	0x00000548
    1164:	.word	0x00000548
    1168:	.word	0x00000548
    116c:	.word	0x00000548
    1170:	.word	0x00000548
    1174:	.word	0x00000548
    1178:	.word	0x00000454
    117c:	.word	0x00000464
    1180:	.word	0x00000548
    1184:	.word	0x00000548
    1188:	.word	0x00000478
    118c:	.word	0x00000548
    1190:	.word	0x00000548
    1194:	.word	0x00000548
    1198:	.word	0x00000518
    119c:	.word	0xffffffc0
    11a0:	.word	0x00000548
    11a4:	.word	0x00000548
    11a8:	.word	0x00000498
    11ac:	.word	0x00000548
    11b0:	.word	0x00000548
    11b4:	.word	0x00000548
    11b8:	.word	0x000004c0
    11bc:	.word	0x000004c8
    11c0:	.word	0x00000548
    11c4:	.word	0x00000548
    11c8:	.word	0x000004dc
    11cc:	.word	0x00000548
    11d0:	.word	0x00000548
    11d4:	.word	0x00000548
    11d8:	.word	0x000004f4
    11dc:	.word	0x00000548
    11e0:	.word	0x00000548
    11e4:	.word	0x00000548
    11e8:	.word	0x00000548
    11ec:	.word	0x00000548
    11f0:	.word	0x00000548
    11f4:	.word	0x00000548
    11f8:	.word	0x0000032c
    11fc:	.word	0x00000548
    1200:	.word	0x00000548
    1204:	.word	0x00000548
    1208:	.word	0x00000334
    120c:	.word	0x000002d0
    1210:	.word	0x00000548
    1214:	.word	0x00000548
    1218:	.word	0x000002e4
    121c:	.word	0x00000548
    1220:	.word	0x00000548
    1224:	.word	0x00000548
    1228:	.word	0x00000548
    122c:	.word	0x00000548
    1230:	.word	0x00000548
    1234:	.word	0x00000548
    1238:	.word	0x000002f0
    123c:	.word	0x00000548
    1240:	.word	0x00000548
    1244:	.word	0x00000548
    1248:	.word	0x00000548
    124c:	.word	0x00000548
    1250:	.word	0x00000548
    1254:	.word	0x00000548
    1258:	.word	0x00000524
    125c:	.word	0x00000548
    1260:	.word	0x00000548
    1264:	.word	0x00000548
    1268:	.word	0x00000548
    126c:	.word	0x00000548
    1270:	.word	0x00000548
    1274:	.word	0x00000548
    1278:	.word	0x00000500
    127c:	.word	0x00000548
    1280:	.word	0x00000548
    1284:	.word	0x00000548
    1288:	.word	0xffffffdc
    128c:	.word	0x00000344
    1290:	.word	0x00000548
    1294:	.word	0x00000548
    1298:	.word	0x00000508
    129c:	.word	0x00000548
    12a0:	.word	0x00000548
    12a4:	.word	0x00000510
    12a8:	.word	0x00000548
    12ac:	.word	0x00000548
    12b0:	.word	0x00000548
    12b4:	.word	0x00000548
    12b8:	.word	0x00000548
    12bc:	.word	0x00000548
    12c0:	.word	0x00000548
    12c4:	.word	0x00000548
    12c8:	.word	0x00000548
    12cc:	.word	0x00000548
    12d0:	.word	0x00000548
    12d4:	.word	0x00000548
    12d8:	.word	0x00000548
    12dc:	.word	0x00000548
    12e0:	.word	0x00000548
    12e4:	.word	0x00000548
    12e8:	.word	0x00000548
    12ec:	.word	0x00000548
    12f0:	.word	0x00000548
    12f4:	.word	0x00000548
    12f8:	.word	0x00000548
    12fc:	.word	0x00000548
    1300:	.word	0x00000548
    1304:	.word	0x00000548
    1308:	.word	0x00000548
    130c:	.word	0x00000548
    1310:	.word	0x00000548
    1314:	.word	0x00000548
    1318:	.word	0x00000548
    131c:	.word	0x00000548
    1320:	.word	0x00000548
    1324:	.word	0x00000548
    1328:	.word	0x00000548
    132c:	.word	0x00000548
    1330:	.word	0x00000548
    1334:	.word	0x00000548
    1338:	.word	0x00000548
    133c:	.word	0x00000548
    1340:	.word	0x00000548
    1344:	.word	0x00000548
    1348:	.word	0x00000548
    134c:	.word	0x000002f8
    1350:	ldr	r4, [r5, #12]
    1354:	b	1064 <sfbpf_filter+0x4c>
    1358:	ldr	r7, [r5, #12]
    135c:	mov	r6, sp
    1360:	mov	r4, r0
    1364:	ldr	lr, [r6, r7, lsl #2]
    1368:	b	1064 <sfbpf_filter+0x4c>
    136c:	ldr	r4, [r5, #12]
    1370:	lsl	r4, r0, r4
    1374:	b	1064 <sfbpf_filter+0x4c>
    1378:	lsl	r4, r0, lr
    137c:	b	1064 <sfbpf_filter+0x4c>
    1380:	ldr	r5, [r5, #12]
    1384:	cmp	r5, r3
    1388:	bcs	15c4 <sfbpf_filter+0x5ac>
    138c:	ldrb	r7, [r1, r5]
    1390:	mov	r6, #60	; 0x3c
    1394:	mov	r4, r0
    1398:	and	lr, r6, r7, lsl #2
    139c:	b	1064 <sfbpf_filter+0x4c>
    13a0:	mov	r4, r0
    13a4:	mov	lr, r0
    13a8:	b	1064 <sfbpf_filter+0x4c>
    13ac:	sub	r4, r0, lr
    13b0:	b	1064 <sfbpf_filter+0x4c>
    13b4:	and	r4, lr, r0
    13b8:	b	1064 <sfbpf_filter+0x4c>
    13bc:	ldr	r0, [r5, #12]
    13c0:	mov	r4, sp
    13c4:	ldr	r4, [r4, r0, lsl #2]
    13c8:	b	1064 <sfbpf_filter+0x4c>
    13cc:	mov	r4, r0
    13d0:	mov	lr, r2
    13d4:	b	1064 <sfbpf_filter+0x4c>
    13d8:	ldr	lr, [r5, #12]
    13dc:	mov	r4, r0
    13e0:	b	1064 <sfbpf_filter+0x4c>
    13e4:	ldr	r4, [r5, #12]
    13e8:	mov	r5, sp
    13ec:	str	r0, [r5, r4, lsl #2]
    13f0:	mov	r4, r0
    13f4:	b	1064 <sfbpf_filter+0x4c>
    13f8:	ldr	r4, [r5, #12]
    13fc:	mov	r5, sp
    1400:	str	lr, [r5, r4, lsl #2]
    1404:	mov	r4, r0
    1408:	b	1064 <sfbpf_filter+0x4c>
    140c:	ldr	r4, [r5, #12]
    1410:	add	r4, r4, r0
    1414:	b	1064 <sfbpf_filter+0x4c>
    1418:	ldr	r4, [r5, #12]
    141c:	b	105c <sfbpf_filter+0x44>
    1420:	add	r4, lr, r0
    1424:	b	1064 <sfbpf_filter+0x4c>
    1428:	ldr	r4, [r5, #12]
    142c:	sub	r4, r0, r4
    1430:	b	1064 <sfbpf_filter+0x4c>
    1434:	ldr	r4, [r5, #12]
    1438:	mov	r6, #11
    143c:	cmp	r0, r4
    1440:	movweq	r6, #10
    1444:	b	1058 <sfbpf_filter+0x40>
    1448:	cmp	r0, lr
    144c:	mov	r4, #11
    1450:	movweq	r4, #10
    1454:	ldrb	r4, [r5, r4]
    1458:	b	105c <sfbpf_filter+0x44>
    145c:	ldr	r0, [r5, #12]
    1460:	b	1508 <sfbpf_filter+0x4f0>
    1464:	ldr	r4, [r5, #12]
    1468:	mul	r4, r4, r0
    146c:	b	1064 <sfbpf_filter+0x4c>
    1470:	ldr	r4, [r5, #12]
    1474:	mov	r6, #11
    1478:	cmp	r0, r4
    147c:	movwhi	r6, #10
    1480:	b	1058 <sfbpf_filter+0x40>
    1484:	ldr	r0, [r5, #12]
    1488:	b	1528 <sfbpf_filter+0x510>
    148c:	mul	r4, lr, r0
    1490:	b	1064 <sfbpf_filter+0x4c>
    1494:	cmp	r0, lr
    1498:	mov	r4, #11
    149c:	movwhi	r4, #10
    14a0:	ldrb	r4, [r5, r4]
    14a4:	b	105c <sfbpf_filter+0x44>
    14a8:	ldr	r0, [r5, #12]
    14ac:	cmp	r0, r3
    14b0:	bcs	15c4 <sfbpf_filter+0x5ac>
    14b4:	ldrb	r4, [r1, r0]
    14b8:	b	1064 <sfbpf_filter+0x4c>
    14bc:	ldr	r4, [r5, #12]
    14c0:	udiv	r4, r0, r4
    14c4:	b	1064 <sfbpf_filter+0x4c>
    14c8:	ldr	r4, [r5, #12]
    14cc:	mov	r6, #10
    14d0:	cmp	r0, r4
    14d4:	movwcc	r6, #11
    14d8:	b	1058 <sfbpf_filter+0x40>
    14dc:	cmp	lr, #0
    14e0:	beq	15c4 <sfbpf_filter+0x5ac>
    14e4:	udiv	r4, r0, lr
    14e8:	b	1064 <sfbpf_filter+0x4c>
    14ec:	cmp	r0, lr
    14f0:	mov	r4, #10
    14f4:	movwcc	r4, #11
    14f8:	ldrb	r4, [r5, r4]
    14fc:	b	105c <sfbpf_filter+0x44>
    1500:	ldr	r0, [r5, #12]
    1504:	add	r0, r0, lr
    1508:	add	r4, r0, #4
    150c:	cmp	r4, r3
    1510:	bhi	15c4 <sfbpf_filter+0x5ac>
    1514:	ldr	r0, [r1, r0]
    1518:	rev	r4, r0
    151c:	b	1064 <sfbpf_filter+0x4c>
    1520:	ldr	r0, [r5, #12]
    1524:	add	r0, r0, lr
    1528:	add	r4, r0, #2
    152c:	cmp	r4, r3
    1530:	bhi	15c4 <sfbpf_filter+0x5ac>
    1534:	mov	r4, r1
    1538:	ldrb	r0, [r4, r0]!
    153c:	ldrb	r4, [r4, #1]
    1540:	orr	r4, r4, r0, lsl #8
    1544:	b	1064 <sfbpf_filter+0x4c>
    1548:	orr	r4, lr, r0
    154c:	b	1064 <sfbpf_filter+0x4c>
    1550:	tst	lr, r0
    1554:	mov	r4, #10
    1558:	movweq	r4, #11
    155c:	ldrb	r4, [r5, r4]
    1560:	b	105c <sfbpf_filter+0x44>
    1564:	ldr	r0, [r5, #12]
    1568:	add	r0, r0, lr
    156c:	cmp	r0, r3
    1570:	bcs	15c4 <sfbpf_filter+0x5ac>
    1574:	ldrb	r4, [r1, r0]
    1578:	b	1064 <sfbpf_filter+0x4c>
    157c:	ldr	r4, [r5, #12]
    1580:	and	r4, r4, r0
    1584:	b	1064 <sfbpf_filter+0x4c>
    1588:	lsr	r4, r0, lr
    158c:	b	1064 <sfbpf_filter+0x4c>
    1590:	rsb	r4, r0, #0
    1594:	b	1064 <sfbpf_filter+0x4c>
    1598:	mov	r4, lr
    159c:	b	1064 <sfbpf_filter+0x4c>
    15a0:	ldr	r4, [r5, #12]
    15a4:	orr	r4, r4, r0
    15a8:	b	1064 <sfbpf_filter+0x4c>
    15ac:	ldr	r4, [r5, #12]
    15b0:	lsr	r4, r0, r4
    15b4:	b	1064 <sfbpf_filter+0x4c>
    15b8:	ldr	r0, [r5, #12]
    15bc:	sub	sp, fp, #16
    15c0:	pop	{r4, r5, r6, r7, fp, pc}
    15c4:	mov	r0, #0
    15c8:	sub	sp, fp, #16
    15cc:	pop	{r4, r5, r6, r7, fp, pc}
    15d0:	bl	edc <abort@plt>

000015d4 <sfbpf_validate>:
    15d4:	push	{r4, r5, fp, lr}
    15d8:	add	fp, sp, #8
    15dc:	cmp	r1, #1
    15e0:	blt	1700 <sfbpf_validate+0x12c>
    15e4:	mov	lr, #0
    15e8:	mov	r2, #0
    15ec:	b	1610 <sfbpf_validate+0x3c>
    15f0:	add	r3, r0, r2, lsl #3
    15f4:	ldr	r3, [r3, #4]
    15f8:	cmp	r3, #15
    15fc:	bhi	1700 <sfbpf_validate+0x12c>
    1600:	add	r2, r2, #1
    1604:	add	lr, lr, #8
    1608:	cmp	r1, r2
    160c:	beq	170c <sfbpf_validate+0x138>
    1610:	add	r3, r0, lr
    1614:	ldrh	r5, [r3]
    1618:	add	r3, pc, #8
    161c:	and	r4, r5, #7
    1620:	ldr	r4, [r3, r4, lsl #2]
    1624:	add	pc, r3, r4
    1628:	.word	0x00000020
    162c:	.word	0x00000020
    1630:	.word	0xffffffc8
    1634:	.word	0xffffffc8
    1638:	.word	0x0000004c
    163c:	.word	0x0000007c
    1640:	.word	0xffffffd8
    1644:	.word	0xffffffd8
    1648:	ubfx	r3, r5, #5, #3
    164c:	mov	ip, #0
    1650:	cmp	r3, #5
    1654:	bhi	16f8 <sfbpf_validate+0x124>
    1658:	cmp	r3, #3
    165c:	bne	1600 <sfbpf_validate+0x2c>
    1660:	add	r3, r0, r2, lsl #3
    1664:	ldr	r3, [r3, #4]
    1668:	cmp	r3, #15
    166c:	bls	1600 <sfbpf_validate+0x2c>
    1670:	b	16f8 <sfbpf_validate+0x124>
    1674:	ubfx	r4, r5, #4, #4
    1678:	mov	ip, #0
    167c:	cmp	r4, #8
    1680:	bhi	16f8 <sfbpf_validate+0x124>
    1684:	cmp	r4, #3
    1688:	tsteq	r5, #24
    168c:	bne	1600 <sfbpf_validate+0x2c>
    1690:	add	r3, r0, r2, lsl #3
    1694:	ldr	r3, [r3, #4]
    1698:	cmp	r3, #0
    169c:	bne	1600 <sfbpf_validate+0x2c>
    16a0:	b	16f8 <sfbpf_validate+0x124>
    16a4:	ubfx	r3, r5, #4, #4
    16a8:	mov	ip, #0
    16ac:	sub	r4, r3, #1
    16b0:	cmp	r4, #4
    16b4:	bcs	16d8 <sfbpf_validate+0x104>
    16b8:	add	r3, r0, r2, lsl #3
    16bc:	ldrb	r4, [r3, #2]
    16c0:	add	r4, r2, r4
    16c4:	add	r4, r4, #1
    16c8:	cmp	r4, r1
    16cc:	bcs	16f8 <sfbpf_validate+0x124>
    16d0:	ldrb	r3, [r3, #3]
    16d4:	b	16e8 <sfbpf_validate+0x114>
    16d8:	cmp	r3, #0
    16dc:	bne	16f8 <sfbpf_validate+0x124>
    16e0:	add	r3, r0, r2, lsl #3
    16e4:	ldr	r3, [r3, #4]
    16e8:	add	r3, r2, r3
    16ec:	add	r3, r3, #1
    16f0:	cmp	r3, r1
    16f4:	bcc	1600 <sfbpf_validate+0x2c>
    16f8:	mov	r0, ip
    16fc:	pop	{r4, r5, fp, pc}
    1700:	mov	ip, #0
    1704:	mov	r0, ip
    1708:	pop	{r4, r5, fp, pc}
    170c:	add	r0, r0, r1, lsl #3
    1710:	ldrh	r0, [r0, #-8]
    1714:	and	r0, r0, #7
    1718:	sub	r0, r0, #6
    171c:	clz	r0, r0
    1720:	lsr	ip, r0, #5
    1724:	mov	r0, ip
    1728:	pop	{r4, r5, fp, pc}

0000172c <sfbpf_print>:
    172c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1730:	add	fp, sp, #28
    1734:	sub	sp, sp, #4
    1738:	mov	r5, r0
    173c:	ldr	r0, [pc, #2008]	; 1f1c <sfbpf_print+0x7f0>
    1740:	mov	r4, r1
    1744:	add	r0, pc, r0
    1748:	bl	de0 <puts@plt>
    174c:	ldr	r0, [r5]
    1750:	cmp	r0, #0
    1754:	beq	1f14 <sfbpf_print+0x7e8>
    1758:	ldr	r9, [pc, #1984]	; 1f20 <sfbpf_print+0x7f4>
    175c:	mov	r6, #0
    1760:	add	r9, pc, r9
    1764:	b	17c4 <sfbpf_print+0x98>
    1768:	ldr	r2, [pc, #2088]	; 1f98 <sfbpf_print+0x86c>
    176c:	add	r2, pc, r2
    1770:	mov	r1, r2
    1774:	ldr	r2, [pc, #2048]	; 1f7c <sfbpf_print+0x850>
    1778:	tst	r0, #8
    177c:	ldr	r0, [pc, #2044]	; 1f80 <sfbpf_print+0x854>
    1780:	add	r0, pc, r0
    1784:	add	r2, pc, r2
    1788:	moveq	r2, r0
    178c:	ldr	r0, [pc, #2032]	; 1f84 <sfbpf_print+0x858>
    1790:	add	r0, pc, r0
    1794:	bl	d38 <printf@plt>
    1798:	add	r0, sl, r6, lsl #3
    179c:	ldr	r3, [r0, #4]
    17a0:	ldrb	r1, [r0, #2]
    17a4:	ldrb	r2, [r0, #3]
    17a8:	ldr	r0, [pc, #2056]	; 1fb8 <sfbpf_print+0x88c>
    17ac:	add	r0, pc, r0
    17b0:	bl	d38 <printf@plt>
    17b4:	ldr	r0, [r5]
    17b8:	add	r6, r6, #1
    17bc:	cmp	r6, r0
    17c0:	bcs	1f14 <sfbpf_print+0x7e8>
    17c4:	ldr	sl, [r5, #4]
    17c8:	mov	r0, r9
    17cc:	mov	r1, r6
    17d0:	bl	d38 <printf@plt>
    17d4:	lsl	r0, r6, #3
    17d8:	mov	r8, sl
    17dc:	cmp	r4, #0
    17e0:	ldrh	r0, [r8, r0]!	; <UNPREDICTABLE>
    17e4:	and	r1, r0, #7
    17e8:	beq	1834 <sfbpf_print+0x108>
    17ec:	add	r2, pc, #20
    17f0:	ldr	r0, [pc, #1836]	; 1f24 <sfbpf_print+0x7f8>
    17f4:	ldr	r3, [r2, r1, lsl #2]
    17f8:	ldr	r1, [pc, #1832]	; 1f28 <sfbpf_print+0x7fc>
    17fc:	add	r0, pc, r0
    1800:	add	r1, pc, r1
    1804:	add	pc, r2, r3
    1808:	.word	0x000000f8
    180c:	.word	0x000000f4
    1810:	.word	0x00000020
    1814:	.word	0x000000bc
    1818:	.word	0x000000c8
    181c:	.word	0x000000e0
    1820:	.word	0x000000ec
    1824:	.word	0x000000d4
    1828:	ldr	r0, [pc, #1788]	; 1f2c <sfbpf_print+0x800>
    182c:	add	r0, pc, r0
    1830:	b	18fc <sfbpf_print+0x1d0>
    1834:	add	r2, pc, #4
    1838:	ldr	r1, [r2, r1, lsl #2]
    183c:	add	pc, r2, r1
    1840:	.word	0x00000020
    1844:	.word	0x00000244
    1848:	.word	0x0000029c
    184c:	.word	0x000002b4
    1850:	.word	0x000002cc
    1854:	.word	0x00000360
    1858:	.word	0x000003b4
    185c:	.word	0x0000031c
    1860:	ldr	r0, [pc, #1876]	; 1fbc <sfbpf_print+0x890>
    1864:	add	r0, pc, r0
    1868:	bl	d38 <printf@plt>
    186c:	ldrh	r0, [r8]
    1870:	ubfx	r1, r0, #5, #3
    1874:	cmp	r1, #4
    1878:	bhi	1dbc <sfbpf_print+0x690>
    187c:	add	r2, pc, #4
    1880:	ldr	r1, [r2, r1, lsl #2]
    1884:	add	pc, r2, r1
    1888:	.word	0x0000061c
    188c:	.word	0x00000014
    1890:	.word	0x000004d0
    1894:	.word	0x000004f8
    1898:	.word	0x00000510
    189c:	add	r1, sl, r6, lsl #3
    18a0:	ands	r0, r0, #24
    18a4:	ldr	r1, [r1, #4]
    18a8:	beq	1ed8 <sfbpf_print+0x7ac>
    18ac:	cmp	r0, #16
    18b0:	beq	1ee0 <sfbpf_print+0x7b4>
    18b4:	cmp	r0, #8
    18b8:	movne	r2, #0
    18bc:	moveq	r2, #2
    18c0:	b	1ee4 <sfbpf_print+0x7b8>
    18c4:	ldr	r0, [pc, #1636]	; 1f30 <sfbpf_print+0x804>
    18c8:	add	r0, pc, r0
    18cc:	b	18fc <sfbpf_print+0x1d0>
    18d0:	ldr	r0, [pc, #1628]	; 1f34 <sfbpf_print+0x808>
    18d4:	add	r0, pc, r0
    18d8:	b	18fc <sfbpf_print+0x1d0>
    18dc:	ldr	r0, [pc, #1628]	; 1f40 <sfbpf_print+0x814>
    18e0:	add	r0, pc, r0
    18e4:	b	18fc <sfbpf_print+0x1d0>
    18e8:	ldr	r0, [pc, #1608]	; 1f38 <sfbpf_print+0x80c>
    18ec:	add	r0, pc, r0
    18f0:	b	18fc <sfbpf_print+0x1d0>
    18f4:	ldr	r0, [pc, #1600]	; 1f3c <sfbpf_print+0x810>
    18f8:	add	r0, pc, r0
    18fc:	mov	r1, r0
    1900:	ldr	r0, [pc, #1596]	; 1f44 <sfbpf_print+0x818>
    1904:	add	r0, pc, r0
    1908:	bl	d38 <printf@plt>
    190c:	ldrh	r0, [r8]
    1910:	and	r1, r0, #7
    1914:	cmp	r1, #7
    1918:	bhi	1798 <sfbpf_print+0x6c>
    191c:	add	r2, pc, #4
    1920:	ldr	r1, [r2, r1, lsl #2]
    1924:	add	pc, r2, r1
    1928:	.word	0x00000020
    192c:	.word	0x00000020
    1930:	.word	0xfffffe70
    1934:	.word	0xfffffe70
    1938:	.word	0x00000054
    193c:	.word	0x000000a4
    1940:	.word	0x000000f0
    1944:	.word	0x0000012c
    1948:	ldr	r1, [pc, #1528]	; 1f48 <sfbpf_print+0x81c>
    194c:	ands	r2, r0, #24
    1950:	add	r1, pc, r1
    1954:	beq	1c3c <sfbpf_print+0x510>
    1958:	ldr	r1, [pc, #1516]	; 1f4c <sfbpf_print+0x820>
    195c:	cmp	r2, #8
    1960:	add	r1, pc, r1
    1964:	beq	1c3c <sfbpf_print+0x510>
    1968:	cmp	r2, #16
    196c:	bne	1c38 <sfbpf_print+0x50c>
    1970:	ldr	r1, [pc, #1496]	; 1f50 <sfbpf_print+0x824>
    1974:	add	r1, pc, r1
    1978:	b	1c3c <sfbpf_print+0x510>
    197c:	ldr	r1, [pc, #1516]	; 1f70 <sfbpf_print+0x844>
    1980:	ands	r2, r0, #240	; 0xf0
    1984:	add	r1, pc, r1
    1988:	beq	1774 <sfbpf_print+0x48>
    198c:	mov	r1, #0
    1990:	mov	r3, #0
    1994:	cmp	r3, #8
    1998:	beq	1774 <sfbpf_print+0x48>
    199c:	ldr	r7, [pc, #1488]	; 1f74 <sfbpf_print+0x848>
    19a0:	add	r7, pc, r7
    19a4:	add	r7, r7, r3, lsl #3
    19a8:	add	r3, r3, #1
    19ac:	ldr	r7, [r7, #8]
    19b0:	cmp	r7, r2
    19b4:	bne	1994 <sfbpf_print+0x268>
    19b8:	ldr	r1, [pc, #1464]	; 1f78 <sfbpf_print+0x84c>
    19bc:	add	r1, pc, r1
    19c0:	add	r1, r1, r3, lsl #3
    19c4:	ldr	r1, [r1, #4]
    19c8:	b	1774 <sfbpf_print+0x48>
    19cc:	and	r1, r0, #240	; 0xf0
    19d0:	ror	r1, r1, #4
    19d4:	cmp	r1, #4
    19d8:	bhi	1cd4 <sfbpf_print+0x5a8>
    19dc:	add	r3, pc, #20
    19e0:	ldr	r2, [pc, #1440]	; 1f88 <sfbpf_print+0x85c>
    19e4:	ldr	r7, [r3, r1, lsl #2]
    19e8:	ldr	r1, [pc, #1436]	; 1f8c <sfbpf_print+0x860>
    19ec:	add	r2, pc, r2
    19f0:	add	r1, pc, r1
    19f4:	add	pc, r3, r7
    19f8:	.word	0xfffffd7c
    19fc:	.word	0xfffffd78
    1a00:	.word	0x00000014
    1a04:	.word	0x000002e4
    1a08:	.word	0xfffffd70
    1a0c:	ldr	r2, [pc, #1404]	; 1f90 <sfbpf_print+0x864>
    1a10:	add	r2, pc, r2
    1a14:	b	1770 <sfbpf_print+0x44>
    1a18:	ldr	r1, [pc, #1404]	; 1f9c <sfbpf_print+0x870>
    1a1c:	ands	r0, r0, #24
    1a20:	add	r1, pc, r1
    1a24:	beq	1a48 <sfbpf_print+0x31c>
    1a28:	ldr	r1, [pc, #1392]	; 1fa0 <sfbpf_print+0x874>
    1a2c:	cmp	r0, #8
    1a30:	add	r1, pc, r1
    1a34:	beq	1a48 <sfbpf_print+0x31c>
    1a38:	cmp	r0, #16
    1a3c:	bne	1cc4 <sfbpf_print+0x598>
    1a40:	ldr	r1, [pc, #1372]	; 1fa4 <sfbpf_print+0x878>
    1a44:	add	r1, pc, r1
    1a48:	ldr	r0, [pc, #1368]	; 1fa8 <sfbpf_print+0x87c>
    1a4c:	add	r0, pc, r0
    1a50:	b	1a7c <sfbpf_print+0x350>
    1a54:	ldr	r1, [pc, #1360]	; 1fac <sfbpf_print+0x880>
    1a58:	ands	r0, r0, #248	; 0xf8
    1a5c:	add	r1, pc, r1
    1a60:	beq	1a74 <sfbpf_print+0x348>
    1a64:	ldr	r1, [pc, #1348]	; 1fb0 <sfbpf_print+0x884>
    1a68:	cmp	r0, #128	; 0x80
    1a6c:	add	r1, pc, r1
    1a70:	movne	r1, #0
    1a74:	ldr	r0, [pc, #1336]	; 1fb4 <sfbpf_print+0x888>
    1a78:	add	r0, pc, r0
    1a7c:	bl	d38 <printf@plt>
    1a80:	b	1798 <sfbpf_print+0x6c>
    1a84:	ldr	r0, [pc, #1352]	; 1fd4 <sfbpf_print+0x8a8>
    1a88:	add	r0, pc, r0
    1a8c:	bl	d38 <printf@plt>
    1a90:	ldrh	r0, [r8]
    1a94:	ubfx	r0, r0, #5, #3
    1a98:	cmp	r0, #5
    1a9c:	bhi	1f08 <sfbpf_print+0x7dc>
    1aa0:	add	r1, pc, #4
    1aa4:	ldr	r0, [r1, r0, lsl #2]
    1aa8:	add	pc, r1, r0
    1aac:	.word	0x00000018
    1ab0:	.word	0x0000045c
    1ab4:	.word	0x0000045c
    1ab8:	.word	0x00000270
    1abc:	.word	0x00000288
    1ac0:	.word	0x00000294
    1ac4:	add	r0, sl, r6, lsl #3
    1ac8:	ldr	r1, [r0, #4]
    1acc:	ldr	r0, [pc, #1288]	; 1fdc <sfbpf_print+0x8b0>
    1ad0:	add	r0, pc, r0
    1ad4:	bl	d38 <printf@plt>
    1ad8:	b	1f08 <sfbpf_print+0x7dc>
    1adc:	add	r0, sl, r6, lsl #3
    1ae0:	ldr	r1, [r0, #4]
    1ae4:	ldr	r0, [pc, #1276]	; 1fe8 <sfbpf_print+0x8bc>
    1ae8:	add	r0, pc, r0
    1aec:	bl	d38 <printf@plt>
    1af0:	b	17b4 <sfbpf_print+0x88>
    1af4:	add	r0, sl, r6, lsl #3
    1af8:	ldr	r1, [r0, #4]
    1afc:	ldr	r0, [pc, #1256]	; 1fec <sfbpf_print+0x8c0>
    1b00:	add	r0, pc, r0
    1b04:	bl	d38 <printf@plt>
    1b08:	b	17b4 <sfbpf_print+0x88>
    1b0c:	ubfx	r0, r0, #4, #4
    1b10:	cmp	r0, #8
    1b14:	bhi	1e3c <sfbpf_print+0x710>
    1b18:	add	r2, pc, #12
    1b1c:	ldr	r1, [pc, #1228]	; 1ff0 <sfbpf_print+0x8c4>
    1b20:	ldr	r0, [r2, r0, lsl #2]
    1b24:	add	r1, pc, r1
    1b28:	add	pc, r2, r0
    1b2c:	.word	0x00000360
    1b30:	.word	0x00000024
    1b34:	.word	0x0000031c
    1b38:	.word	0x00000328
    1b3c:	.word	0x00000334
    1b40:	.word	0x00000340
    1b44:	.word	0x0000034c
    1b48:	.word	0x00000358
    1b4c:	.word	0x0000039c
    1b50:	ldr	r1, [pc, #1180]	; 1ff4 <sfbpf_print+0x8c8>
    1b54:	add	r1, pc, r1
    1b58:	b	1e8c <sfbpf_print+0x760>
    1b5c:	ldr	r0, [pc, #1264]	; 2054 <sfbpf_print+0x928>
    1b60:	add	r0, pc, r0
    1b64:	bl	d38 <printf@plt>
    1b68:	ldrb	r0, [r8]
    1b6c:	and	r1, r0, #248	; 0xf8
    1b70:	ldr	r0, [pc, #1248]	; 2058 <sfbpf_print+0x92c>
    1b74:	ldr	r2, [pc, #1248]	; 205c <sfbpf_print+0x930>
    1b78:	cmp	r1, #128	; 0x80
    1b7c:	add	r2, pc, r2
    1b80:	add	r0, pc, r0
    1b84:	moveq	r0, r2
    1b88:	cmp	r1, #0
    1b8c:	ldr	r1, [pc, #1228]	; 2060 <sfbpf_print+0x934>
    1b90:	add	r1, pc, r1
    1b94:	moveq	r0, r1
    1b98:	bl	d38 <printf@plt>
    1b9c:	b	1f08 <sfbpf_print+0x7dc>
    1ba0:	ubfx	r0, r0, #4, #4
    1ba4:	cmp	r0, #4
    1ba8:	bhi	1dc8 <sfbpf_print+0x69c>
    1bac:	add	r2, pc, #12
    1bb0:	ldr	r1, [pc, #1128]	; 2020 <sfbpf_print+0x8f4>
    1bb4:	ldr	r0, [r2, r0, lsl #2]
    1bb8:	add	r1, pc, r1
    1bbc:	add	pc, r2, r0
    1bc0:	.word	0x00000014
    1bc4:	.word	0x0000021c
    1bc8:	.word	0x000001e4
    1bcc:	.word	0x00000214
    1bd0:	.word	0x000001f0
    1bd4:	add	r0, sl, r6, lsl #3
    1bd8:	ldr	r0, [r0, #4]
    1bdc:	add	r0, r6, r0
    1be0:	add	r1, r0, #1
    1be4:	ldr	r0, [pc, #1080]	; 2024 <sfbpf_print+0x8f8>
    1be8:	add	r0, pc, r0
    1bec:	bl	d38 <printf@plt>
    1bf0:	b	17b4 <sfbpf_print+0x88>
    1bf4:	ldr	r0, [pc, #1096]	; 2044 <sfbpf_print+0x918>
    1bf8:	add	r0, pc, r0
    1bfc:	bl	d38 <printf@plt>
    1c00:	ldrh	r0, [r8]
    1c04:	and	r0, r0, #24
    1c08:	cmp	r0, #16
    1c0c:	beq	1ce8 <sfbpf_print+0x5bc>
    1c10:	cmp	r0, #8
    1c14:	beq	1cf4 <sfbpf_print+0x5c8>
    1c18:	cmp	r0, #0
    1c1c:	bne	1d00 <sfbpf_print+0x5d4>
    1c20:	add	r0, sl, r6, lsl #3
    1c24:	ldr	r1, [r0, #4]
    1c28:	ldr	r0, [pc, #1048]	; 2048 <sfbpf_print+0x91c>
    1c2c:	add	r0, pc, r0
    1c30:	bl	d38 <printf@plt>
    1c34:	b	1d0c <sfbpf_print+0x5e0>
    1c38:	mov	r1, #0
    1c3c:	uxtb	r0, r0
    1c40:	lsr	r0, r0, #5
    1c44:	cmp	r0, #5
    1c48:	bhi	1c8c <sfbpf_print+0x560>
    1c4c:	add	r3, pc, #20
    1c50:	ldr	r7, [r3, r0, lsl #2]
    1c54:	ldr	r0, [pc, #760]	; 1f54 <sfbpf_print+0x828>
    1c58:	ldr	r2, [pc, #760]	; 1f58 <sfbpf_print+0x82c>
    1c5c:	add	r0, pc, r0
    1c60:	add	r2, pc, r2
    1c64:	add	pc, r3, r7
    1c68:	.word	0x00000050
    1c6c:	.word	0x0000004c
    1c70:	.word	0x00000018
    1c74:	.word	0x0000002c
    1c78:	.word	0x00000038
    1c7c:	.word	0x00000044
    1c80:	ldr	r0, [pc, #724]	; 1f5c <sfbpf_print+0x830>
    1c84:	add	r0, pc, r0
    1c88:	b	1cb4 <sfbpf_print+0x588>
    1c8c:	mov	r0, #0
    1c90:	b	1cb4 <sfbpf_print+0x588>
    1c94:	ldr	r0, [pc, #708]	; 1f60 <sfbpf_print+0x834>
    1c98:	add	r0, pc, r0
    1c9c:	b	1cb4 <sfbpf_print+0x588>
    1ca0:	ldr	r0, [pc, #700]	; 1f64 <sfbpf_print+0x838>
    1ca4:	add	r0, pc, r0
    1ca8:	b	1cb4 <sfbpf_print+0x588>
    1cac:	ldr	r0, [pc, #692]	; 1f68 <sfbpf_print+0x83c>
    1cb0:	add	r0, pc, r0
    1cb4:	mov	r2, r0
    1cb8:	ldr	r0, [pc, #684]	; 1f6c <sfbpf_print+0x840>
    1cbc:	add	r0, pc, r0
    1cc0:	b	1794 <sfbpf_print+0x68>
    1cc4:	ldr	r0, [pc, #920]	; 2064 <sfbpf_print+0x938>
    1cc8:	mov	r1, #0
    1ccc:	add	r0, pc, r0
    1cd0:	b	1a7c <sfbpf_print+0x350>
    1cd4:	mov	r2, #0
    1cd8:	b	1770 <sfbpf_print+0x44>
    1cdc:	ldr	r2, [pc, #688]	; 1f94 <sfbpf_print+0x868>
    1ce0:	add	r2, pc, r2
    1ce4:	b	1770 <sfbpf_print+0x44>
    1ce8:	mov	r0, #65	; 0x41
    1cec:	bl	e64 <putchar@plt>
    1cf0:	b	1d0c <sfbpf_print+0x5e0>
    1cf4:	mov	r0, #88	; 0x58
    1cf8:	bl	e64 <putchar@plt>
    1cfc:	b	1d0c <sfbpf_print+0x5e0>
    1d00:	ldr	r0, [pc, #836]	; 204c <sfbpf_print+0x920>
    1d04:	add	r0, pc, r0
    1d08:	bl	d38 <printf@plt>
    1d0c:	ldr	r0, [pc, #828]	; 2050 <sfbpf_print+0x924>
    1d10:	add	r0, pc, r0
    1d14:	bl	de0 <puts@plt>
    1d18:	b	17b4 <sfbpf_print+0x88>
    1d1c:	add	r0, sl, r6, lsl #3
    1d20:	ldr	r1, [r0, #4]
    1d24:	ldr	r0, [pc, #692]	; 1fe0 <sfbpf_print+0x8b4>
    1d28:	add	r0, pc, r0
    1d2c:	bl	d38 <printf@plt>
    1d30:	b	1f08 <sfbpf_print+0x7dc>
    1d34:	ldr	r0, [pc, #668]	; 1fd8 <sfbpf_print+0x8ac>
    1d38:	add	r0, pc, r0
    1d3c:	b	1b98 <sfbpf_print+0x46c>
    1d40:	add	r0, sl, r6, lsl #3
    1d44:	ldr	r1, [r0, #4]
    1d48:	ldr	r0, [pc, #660]	; 1fe4 <sfbpf_print+0x8b8>
    1d4c:	add	r0, pc, r0
    1d50:	bl	d38 <printf@plt>
    1d54:	b	1f08 <sfbpf_print+0x7dc>
    1d58:	add	r1, sl, r6, lsl #3
    1d5c:	ands	r0, r0, #24
    1d60:	ldr	r1, [r1, #4]
    1d64:	beq	1ef0 <sfbpf_print+0x7c4>
    1d68:	cmp	r0, #16
    1d6c:	beq	1ef8 <sfbpf_print+0x7cc>
    1d70:	cmp	r0, #8
    1d74:	movne	r2, #0
    1d78:	moveq	r2, #2
    1d7c:	b	1efc <sfbpf_print+0x7d0>
    1d80:	add	r0, sl, r6, lsl #3
    1d84:	ldr	r1, [r0, #4]
    1d88:	ldr	r0, [pc, #572]	; 1fcc <sfbpf_print+0x8a0>
    1d8c:	add	r0, pc, r0
    1d90:	bl	d38 <printf@plt>
    1d94:	b	1f08 <sfbpf_print+0x7dc>
    1d98:	ldr	r0, [pc, #552]	; 1fc8 <sfbpf_print+0x89c>
    1d9c:	add	r0, pc, r0
    1da0:	b	1b98 <sfbpf_print+0x46c>
    1da4:	ldr	r1, [pc, #636]	; 2028 <sfbpf_print+0x8fc>
    1da8:	add	r1, pc, r1
    1dac:	b	1ddc <sfbpf_print+0x6b0>
    1db0:	ldr	r1, [pc, #632]	; 2030 <sfbpf_print+0x904>
    1db4:	add	r1, pc, r1
    1db8:	b	1ddc <sfbpf_print+0x6b0>
    1dbc:	ldr	r0, [pc, #524]	; 1fd0 <sfbpf_print+0x8a4>
    1dc0:	add	r0, pc, r0
    1dc4:	b	1b98 <sfbpf_print+0x46c>
    1dc8:	ldr	r1, [pc, #612]	; 2034 <sfbpf_print+0x908>
    1dcc:	add	r1, pc, r1
    1dd0:	b	1ddc <sfbpf_print+0x6b0>
    1dd4:	ldr	r1, [pc, #592]	; 202c <sfbpf_print+0x900>
    1dd8:	add	r1, pc, r1
    1ddc:	ldr	r0, [pc, #596]	; 2038 <sfbpf_print+0x90c>
    1de0:	add	r0, pc, r0
    1de4:	bl	d38 <printf@plt>
    1de8:	ldrb	r0, [r8]
    1dec:	tst	r0, #8
    1df0:	bne	1e0c <sfbpf_print+0x6e0>
    1df4:	add	r0, sl, r6, lsl #3
    1df8:	ldr	r1, [r0, #4]
    1dfc:	ldr	r0, [pc, #568]	; 203c <sfbpf_print+0x910>
    1e00:	add	r0, pc, r0
    1e04:	bl	d38 <printf@plt>
    1e08:	b	1e14 <sfbpf_print+0x6e8>
    1e0c:	mov	r0, #88	; 0x58
    1e10:	bl	e64 <putchar@plt>
    1e14:	add	r0, sl, r6, lsl #3
    1e18:	add	r2, r6, #1
    1e1c:	ldrb	r1, [r0, #2]
    1e20:	ldrb	r0, [r0, #3]
    1e24:	add	r1, r2, r1
    1e28:	add	r2, r2, r0
    1e2c:	ldr	r0, [pc, #524]	; 2040 <sfbpf_print+0x914>
    1e30:	add	r0, pc, r0
    1e34:	bl	d38 <printf@plt>
    1e38:	b	17b4 <sfbpf_print+0x88>
    1e3c:	ldr	r1, [pc, #464]	; 2014 <sfbpf_print+0x8e8>
    1e40:	add	r1, pc, r1
    1e44:	b	1e8c <sfbpf_print+0x760>
    1e48:	ldr	r1, [pc, #424]	; 1ff8 <sfbpf_print+0x8cc>
    1e4c:	add	r1, pc, r1
    1e50:	b	1e8c <sfbpf_print+0x760>
    1e54:	ldr	r1, [pc, #416]	; 1ffc <sfbpf_print+0x8d0>
    1e58:	add	r1, pc, r1
    1e5c:	b	1e8c <sfbpf_print+0x760>
    1e60:	ldr	r1, [pc, #408]	; 2000 <sfbpf_print+0x8d4>
    1e64:	add	r1, pc, r1
    1e68:	b	1e8c <sfbpf_print+0x760>
    1e6c:	ldr	r1, [pc, #400]	; 2004 <sfbpf_print+0x8d8>
    1e70:	add	r1, pc, r1
    1e74:	b	1e8c <sfbpf_print+0x760>
    1e78:	ldr	r1, [pc, #392]	; 2008 <sfbpf_print+0x8dc>
    1e7c:	add	r1, pc, r1
    1e80:	b	1e8c <sfbpf_print+0x760>
    1e84:	ldr	r1, [pc, #384]	; 200c <sfbpf_print+0x8e0>
    1e88:	add	r1, pc, r1
    1e8c:	ldr	r0, [pc, #388]	; 2018 <sfbpf_print+0x8ec>
    1e90:	add	r0, pc, r0
    1e94:	bl	d38 <printf@plt>
    1e98:	ldrb	r0, [r8]
    1e9c:	tst	r0, #8
    1ea0:	bne	1ebc <sfbpf_print+0x790>
    1ea4:	add	r0, sl, r6, lsl #3
    1ea8:	ldr	r1, [r0, #4]
    1eac:	ldr	r0, [pc, #360]	; 201c <sfbpf_print+0x8f0>
    1eb0:	add	r0, pc, r0
    1eb4:	bl	d38 <printf@plt>
    1eb8:	b	1f08 <sfbpf_print+0x7dc>
    1ebc:	mov	r0, #88	; 0x58
    1ec0:	bl	e64 <putchar@plt>
    1ec4:	b	1f08 <sfbpf_print+0x7dc>
    1ec8:	ldr	r0, [pc, #320]	; 2010 <sfbpf_print+0x8e4>
    1ecc:	add	r0, pc, r0
    1ed0:	bl	de0 <puts@plt>
    1ed4:	b	17b4 <sfbpf_print+0x88>
    1ed8:	mov	r2, #4
    1edc:	b	1ee4 <sfbpf_print+0x7b8>
    1ee0:	mov	r2, #1
    1ee4:	ldr	r0, [pc, #212]	; 1fc0 <sfbpf_print+0x894>
    1ee8:	add	r0, pc, r0
    1eec:	b	1f04 <sfbpf_print+0x7d8>
    1ef0:	mov	r2, #4
    1ef4:	b	1efc <sfbpf_print+0x7d0>
    1ef8:	mov	r2, #1
    1efc:	ldr	r0, [pc, #192]	; 1fc4 <sfbpf_print+0x898>
    1f00:	add	r0, pc, r0
    1f04:	bl	d38 <printf@plt>
    1f08:	mov	r0, #10
    1f0c:	bl	e64 <putchar@plt>
    1f10:	b	17b4 <sfbpf_print+0x88>
    1f14:	sub	sp, fp, #28
    1f18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1f1c:	.word	0x000283d9
    1f20:	.word	0x00028210
    1f24:	.word	0x000281c4
    1f28:	.word	0x000281bb
    1f2c:	.word	0x00028199
    1f30:	.word	0x00028102
    1f34:	.word	0x000280fb
    1f38:	.word	0x000280e8
    1f3c:	.word	0x000280e1
    1f40:	.word	0x000280fe
    1f44:	.word	0x000281e5
    1f48:	.word	0x00028093
    1f4c:	.word	0x000280b7
    1f50:	.word	0x0002808f
    1f54:	.word	0x00027d8d
    1f58:	.word	0x00027d85
    1f5c:	.word	0x00027d69
    1f60:	.word	0x00027d59
    1f64:	.word	0x00027d51
    1f68:	.word	0x00027d49
    1f6c:	.word	0x00027cba
    1f70:	.word	0x00028079
    1f74:	.word	0x00045340
    1f78:	.word	0x00045324
    1f7c:	.word	0x00028397
    1f80:	.word	0x000282a1
    1f84:	.word	0x000281f7
    1f88:	.word	0x0002803c
    1f8c:	.word	0x00028033
    1f90:	.word	0x0002801d
    1f94:	.word	0x00027d52
    1f98:	.word	0x000282cb
    1f9c:	.word	0x00028001
    1fa0:	.word	0x000280eb
    1fa4:	.word	0x000280d0
    1fa8:	.word	0x00027f49
    1fac:	.word	0x00027fe0
    1fb0:	.word	0x00027fd4
    1fb4:	.word	0x00027f26
    1fb8:	.word	0x000281f9
    1fbc:	.word	0x00028202
    1fc0:	.word	0x00027b89
    1fc4:	.word	0x00027b7a
    1fc8:	.word	0x00027ce9
    1fcc:	.word	0x00027cfd
    1fd0:	.word	0x00027ccf
    1fd4:	.word	0x0002800b
    1fd8:	.word	0x00027d4d
    1fdc:	.word	0x00028bf3
    1fe0:	.word	0x00027d61
    1fe4:	.word	0x00027d52
    1fe8:	.word	0x00027f5c
    1fec:	.word	0x00027f55
    1ff0:	.word	0x00027f8a
    1ff4:	.word	0x00027f5c
    1ff8:	.word	0x00027c66
    1ffc:	.word	0x00027c5c
    2000:	.word	0x00027c52
    2004:	.word	0x00027c48
    2008:	.word	0x00027c3e
    200c:	.word	0x00027c35
    2010:	.word	0x00027c5f
    2014:	.word	0x00027c4f
    2018:	.word	0x00027c30
    201c:	.word	0x00028813
    2020:	.word	0x00027f23
    2024:	.word	0x00027ee9
    2028:	.word	0x00027d16
    202c:	.word	0x00027d06
    2030:	.word	0x00027d04
    2034:	.word	0x00027cc3
    2038:	.word	0x00027d01
    203c:	.word	0x000288c3
    2040:	.word	0x00027cbd
    2044:	.word	0x00027f04
    2048:	.word	0x00028a97
    204c:	.word	0x00027d8b
    2050:	.word	0x00027e23
    2054:	.word	0x00027fa9
    2058:	.word	0x00027f0f
    205c:	.word	0x00027f9a
    2060:	.word	0x00027f7f
    2064:	.word	0x00027cc9

00002068 <sf_bpf_error>:
    2068:	sub	sp, sp, #12
    206c:	push	{fp, lr}
    2070:	mov	fp, sp
    2074:	sub	sp, sp, #4
    2078:	mov	ip, r0
    207c:	add	r0, fp, #8
    2080:	stm	r0, {r1, r2, r3}
    2084:	add	r3, fp, #8
    2088:	mov	r1, #256	; 0x100
    208c:	mov	r2, ip
    2090:	str	r3, [sp]
    2094:	ldr	r0, [pc, #20]	; 20b0 <sf_bpf_error+0x48>
    2098:	add	r0, pc, r0
    209c:	bl	ea0 <vsnprintf@plt>
    20a0:	ldr	r0, [pc, #12]	; 20b4 <sf_bpf_error+0x4c>
    20a4:	mov	r1, #1
    20a8:	add	r0, pc, r0
    20ac:	bl	d5c <longjmp@plt>
    20b0:	.word	0x000450f8
    20b4:	.word	0x000451f0

000020b8 <sf_sdup>:
    20b8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    20bc:	add	fp, sp, #24
    20c0:	mov	r8, r0
    20c4:	bl	e1c <strlen@plt>
    20c8:	mov	r9, r0
    20cc:	ldr	r0, [pc, #168]	; 217c <sf_sdup+0xc4>
    20d0:	add	r1, r9, #4
    20d4:	bic	r4, r1, #3
    20d8:	ldr	r0, [pc, r0]
    20dc:	ldr	r5, [pc, #156]	; 2180 <sf_sdup+0xc8>
    20e0:	add	r5, pc, r5
    20e4:	ldr	r6, [r5, r0, lsl #3]!
    20e8:	cmp	r4, r6
    20ec:	bls	2140 <sf_sdup+0x88>
    20f0:	ldr	r2, [pc, #140]	; 2184 <sf_sdup+0xcc>
    20f4:	add	r1, r0, #1
    20f8:	cmp	r0, #15
    20fc:	add	r2, pc, r2
    2100:	str	r1, [r2]
    2104:	bge	2170 <sf_sdup+0xb8>
    2108:	mov	r0, #1024	; 0x400
    210c:	lsl	r6, r0, r1
    2110:	mov	r0, r6
    2114:	bl	dec <malloc@plt>
    2118:	cmp	r0, #0
    211c:	str	r0, [r5, #12]
    2120:	beq	2170 <sf_sdup+0xb8>
    2124:	mov	r1, #0
    2128:	mov	r2, r6
    212c:	add	r5, r5, #8
    2130:	bl	e58 <memset@plt>
    2134:	cmp	r4, r6
    2138:	str	r6, [r5]
    213c:	bhi	2170 <sf_sdup+0xb8>
    2140:	sub	r0, r6, r4
    2144:	add	r7, r9, #1
    2148:	str	r0, [r5]
    214c:	mov	r2, r7
    2150:	ldr	r1, [r5, #4]
    2154:	add	r0, r1, r0
    2158:	mov	r1, r8
    215c:	bl	e70 <strncpy@plt>
    2160:	cmp	r7, #1
    2164:	movge	r1, #0
    2168:	strbge	r1, [r0, r9]
    216c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2170:	ldr	r0, [pc, #16]	; 2188 <sf_sdup+0xd0>
    2174:	add	r0, pc, r0
    2178:	bl	2068 <sf_bpf_error>
    217c:	.word	0x00045424
    2180:	.word	0x0004539c
    2184:	.word	0x00045400
    2188:	.word	0x00028508

0000218c <sfbpf_compile>:
    218c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2190:	add	fp, sp, #28
    2194:	sub	sp, sp, #12
    2198:	mov	r6, r0
    219c:	ldr	r0, [pc, #3228]	; 2e40 <sfbpf_compile+0xcb4>
    21a0:	mov	r5, r1
    21a4:	mov	r1, #0
    21a8:	vmov.i32	q8, #0	; 0x00000000
    21ac:	mov	r4, r2
    21b0:	add	r0, pc, r0
    21b4:	str	r1, [r0]
    21b8:	ldr	r0, [pc, #3204]	; 2e44 <sfbpf_compile+0xcb8>
    21bc:	add	r0, pc, r0
    21c0:	str	r1, [r0]
    21c4:	ldr	r0, [pc, #3196]	; 2e48 <sfbpf_compile+0xcbc>
    21c8:	add	r0, pc, r0
    21cc:	str	r1, [r0]
    21d0:	ldr	r0, [pc, #3188]	; 2e4c <sfbpf_compile+0xcc0>
    21d4:	add	r0, pc, r0
    21d8:	add	r2, r0, #16
    21dc:	vst1.64	{d16-d17}, [r2]
    21e0:	add	r2, r0, #32
    21e4:	vst1.64	{d16-d17}, [r2]
    21e8:	mov	r2, #48	; 0x30
    21ec:	vst1.64	{d16-d17}, [r0], r2
    21f0:	vst1.64	{d16-d17}, [r0]
    21f4:	ldr	r0, [pc, #3156]	; 2e50 <sfbpf_compile+0xcc4>
    21f8:	ldr	r0, [pc, r0]
    21fc:	str	r1, [r0]
    2200:	str	r3, [sp, #8]
    2204:	ldr	r0, [pc, #3144]	; 2e54 <sfbpf_compile+0xcc8>
    2208:	add	r0, pc, r0
    220c:	bl	d68 <_setjmp@plt>
    2210:	cmp	r0, #0
    2214:	beq	2250 <sfbpf_compile+0xc4>
    2218:	ldr	r0, [pc, #3128]	; 2e58 <sfbpf_compile+0xccc>
    221c:	ldr	r0, [pc, r0]
    2220:	cmp	r0, #0
    2224:	beq	223c <sfbpf_compile+0xb0>
    2228:	bl	eac <freeaddrinfo@plt>
    222c:	ldr	r0, [pc, #3112]	; 2e5c <sfbpf_compile+0xcd0>
    2230:	mov	r1, #0
    2234:	add	r0, pc, r0
    2238:	str	r1, [r0]
    223c:	bl	298d0 <sf_lex_cleanup>
    2240:	bl	3024 <freechunks>
    2244:	mvn	r0, #0
    2248:	sub	sp, fp, #28
    224c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2250:	ldr	r1, [pc, #3080]	; 2e60 <sfbpf_compile+0xcd4>
    2254:	ldr	r0, [fp, #12]
    2258:	cmp	r6, #0
    225c:	add	r1, pc, r1
    2260:	str	r6, [r1]
    2264:	ldr	r1, [pc, #3064]	; 2e64 <sfbpf_compile+0xcd8>
    2268:	add	r1, pc, r1
    226c:	str	r0, [r1]
    2270:	beq	228c <sfbpf_compile+0x100>
    2274:	ldr	r0, [sp, #8]
    2278:	str	r4, [sp]
    227c:	cmp	r0, #0
    2280:	beq	22c0 <sfbpf_compile+0x134>
    2284:	ldr	r0, [sp, #8]
    2288:	b	22c8 <sfbpf_compile+0x13c>
    228c:	ldr	r0, [pc, #3028]	; 2e68 <sfbpf_compile+0xcdc>
    2290:	ldr	r2, [pc, #3028]	; 2e6c <sfbpf_compile+0xce0>
    2294:	mov	r1, #32
    2298:	add	r0, pc, r0
    229c:	add	r2, pc, r2
    22a0:	vld1.64	{d16-d17}, [r0]!
    22a4:	add	r3, r2, #16
    22a8:	vst1.64	{d16-d17}, [r2], r1
    22ac:	vld1.64	{d16-d17}, [r0]
    22b0:	mov	r1, #0
    22b4:	strb	r1, [r2]
    22b8:	vst1.64	{d16-d17}, [r3]
    22bc:	b	2244 <sfbpf_compile+0xb8>
    22c0:	ldr	r0, [pc, #2984]	; 2e70 <sfbpf_compile+0xce4>
    22c4:	add	r0, pc, r0
    22c8:	bl	29834 <sf_lex_init>
    22cc:	ldr	r0, [pc, #2976]	; 2e74 <sfbpf_compile+0xce8>
    22d0:	mov	sl, #0
    22d4:	mvn	r3, #0
    22d8:	mov	r2, #1
    22dc:	cmp	r5, #229	; 0xe5
    22e0:	add	r0, pc, r0
    22e4:	str	sl, [r0]
    22e8:	ldr	r0, [pc, #2952]	; 2e78 <sfbpf_compile+0xcec>
    22ec:	add	r0, pc, r0
    22f0:	str	r5, [r0]
    22f4:	ldr	r0, [pc, #2944]	; 2e7c <sfbpf_compile+0xcf0>
    22f8:	add	r0, pc, r0
    22fc:	strb	sl, [r0]
    2300:	ldr	r0, [pc, #2936]	; 2e80 <sfbpf_compile+0xcf4>
    2304:	add	r0, pc, r0
    2308:	strb	sl, [r0]
    230c:	ldr	r0, [pc, #2928]	; 2e84 <sfbpf_compile+0xcf8>
    2310:	add	r0, pc, r0
    2314:	str	r3, [r0]
    2318:	ldr	r1, [pc, #2920]	; 2e88 <sfbpf_compile+0xcfc>
    231c:	add	r1, pc, r1
    2320:	str	r3, [r1]
    2324:	ldr	r8, [pc, #2912]	; 2e8c <sfbpf_compile+0xd00>
    2328:	add	r8, pc, r8
    232c:	strb	r2, [r8]
    2330:	ldr	r7, [pc, #2904]	; 2e90 <sfbpf_compile+0xd04>
    2334:	add	r7, pc, r7
    2338:	str	r3, [r7]
    233c:	ldr	r2, [pc, #2896]	; 2e94 <sfbpf_compile+0xd08>
    2340:	add	r2, pc, r2
    2344:	strb	sl, [r2]
    2348:	ldr	r9, [pc, #2888]	; 2e98 <sfbpf_compile+0xd0c>
    234c:	add	r9, pc, r9
    2350:	str	r3, [r9]
    2354:	ldr	ip, [pc, #2880]	; 2e9c <sfbpf_compile+0xd10>
    2358:	add	ip, pc, ip
    235c:	str	r3, [ip]
    2360:	ldr	r4, [pc, #2872]	; 2ea0 <sfbpf_compile+0xd14>
    2364:	add	r4, pc, r4
    2368:	str	r3, [r4]
    236c:	ldr	r6, [pc, #2864]	; 2ea4 <sfbpf_compile+0xd18>
    2370:	add	r6, pc, r6
    2374:	str	r3, [r6]
    2378:	ldr	r2, [pc, #2856]	; 2ea8 <sfbpf_compile+0xd1c>
    237c:	add	r2, pc, r2
    2380:	str	r3, [r2]
    2384:	ldr	r2, [pc, #2848]	; 2eac <sfbpf_compile+0xd20>
    2388:	add	r2, pc, r2
    238c:	str	sl, [r2]
    2390:	ldr	lr, [pc, #2840]	; 2eb0 <sfbpf_compile+0xd24>
    2394:	add	lr, pc, lr
    2398:	strb	sl, [lr]
    239c:	ldr	r2, [pc, #2832]	; 2eb4 <sfbpf_compile+0xd28>
    23a0:	add	r2, pc, r2
    23a4:	str	r3, [r2]
    23a8:	ldr	r2, [pc, #2824]	; 2eb8 <sfbpf_compile+0xd2c>
    23ac:	add	r2, pc, r2
    23b0:	str	sl, [r2]
    23b4:	ldr	r2, [pc, #2816]	; 2ebc <sfbpf_compile+0xd30>
    23b8:	add	r2, pc, r2
    23bc:	str	r3, [r2]
    23c0:	ldr	r2, [pc, #2808]	; 2ec0 <sfbpf_compile+0xd34>
    23c4:	add	r2, pc, r2
    23c8:	str	r3, [r2]
    23cc:	bhi	2e14 <sfbpf_compile+0xc88>
    23d0:	add	r2, pc, #4
    23d4:	ldr	r3, [r2, r5, lsl #2]
    23d8:	add	pc, r2, r3
    23dc:	.word	0x00000484
    23e0:	.word	0x000005d8
    23e4:	.word	0x00000a38
    23e8:	.word	0x00000a38
    23ec:	.word	0x00000a38
    23f0:	.word	0x00000a38
    23f4:	.word	0x00000608
    23f8:	.word	0x000005b0
    23fc:	.word	0x00000610
    2400:	.word	0x00000424
    2404:	.word	0x000005b8
    2408:	.word	0x0000048c
    240c:	.word	0x000003d8
    2410:	.word	0x00000a38
    2414:	.word	0x00000a38
    2418:	.word	0x000005c0
    241c:	.word	0x00000630
    2420:	.word	0x00000a38
    2424:	.word	0x00000a38
    2428:	.word	0x0000048c
    242c:	.word	0x00000a38
    2430:	.word	0x00000a38
    2434:	.word	0x00000a38
    2438:	.word	0x00000a38
    243c:	.word	0x00000a38
    2440:	.word	0x00000a38
    2444:	.word	0x00000a38
    2448:	.word	0x00000a38
    244c:	.word	0x00000a38
    2450:	.word	0x00000a38
    2454:	.word	0x00000a38
    2458:	.word	0x00000a38
    245c:	.word	0x00000a38
    2460:	.word	0x00000a38
    2464:	.word	0x00000a38
    2468:	.word	0x00000a38
    246c:	.word	0x00000a38
    2470:	.word	0x00000a38
    2474:	.word	0x00000a38
    2478:	.word	0x00000a38
    247c:	.word	0x00000a38
    2480:	.word	0x00000a38
    2484:	.word	0x00000a38
    2488:	.word	0x00000a38
    248c:	.word	0x00000a38
    2490:	.word	0x00000a38
    2494:	.word	0x00000a38
    2498:	.word	0x00000a38
    249c:	.word	0x00000a38
    24a0:	.word	0x00000a38
    24a4:	.word	0x00000424
    24a8:	.word	0x000005c8
    24ac:	.word	0x00000a38
    24b0:	.word	0x00000a38
    24b4:	.word	0x00000a38
    24b8:	.word	0x00000a38
    24bc:	.word	0x00000a38
    24c0:	.word	0x00000a38
    24c4:	.word	0x00000a38
    24c8:	.word	0x00000a38
    24cc:	.word	0x00000a38
    24d0:	.word	0x00000a38
    24d4:	.word	0x00000a38
    24d8:	.word	0x00000a38
    24dc:	.word	0x00000a38
    24e0:	.word	0x00000a38
    24e4:	.word	0x00000a38
    24e8:	.word	0x00000a38
    24ec:	.word	0x00000a38
    24f0:	.word	0x00000a38
    24f4:	.word	0x00000a38
    24f8:	.word	0x00000a38
    24fc:	.word	0x00000a38
    2500:	.word	0x00000a38
    2504:	.word	0x00000a38
    2508:	.word	0x00000a38
    250c:	.word	0x00000a38
    2510:	.word	0x00000a38
    2514:	.word	0x00000a38
    2518:	.word	0x00000a38
    251c:	.word	0x00000a38
    2520:	.word	0x00000a38
    2524:	.word	0x00000a38
    2528:	.word	0x00000a38
    252c:	.word	0x00000a38
    2530:	.word	0x00000a38
    2534:	.word	0x00000a38
    2538:	.word	0x00000a38
    253c:	.word	0x00000a38
    2540:	.word	0x00000a38
    2544:	.word	0x00000a38
    2548:	.word	0x00000a38
    254c:	.word	0x00000a38
    2550:	.word	0x00000a38
    2554:	.word	0x00000a38
    2558:	.word	0x00000a38
    255c:	.word	0x00000a38
    2560:	.word	0x00000a38
    2564:	.word	0x00000a38
    2568:	.word	0x00000650
    256c:	.word	0x00000a38
    2570:	.word	0x00000a38
    2574:	.word	0x00000a38
    2578:	.word	0x00000a38
    257c:	.word	0x00000424
    2580:	.word	0x000003f8
    2584:	.word	0x00000a38
    2588:	.word	0x000003d8
    258c:	.word	0x00000484
    2590:	.word	0x00000730
    2594:	.word	0x00000a38
    2598:	.word	0x00000a38
    259c:	.word	0x00000a38
    25a0:	.word	0x00000824
    25a4:	.word	0x000003d8
    25a8:	.word	0x00000a38
    25ac:	.word	0x00000a38
    25b0:	.word	0x00000a38
    25b4:	.word	0x00000a38
    25b8:	.word	0x000003f8
    25bc:	.word	0x00000a38
    25c0:	.word	0x00000a38
    25c4:	.word	0x00000670
    25c8:	.word	0x00000750
    25cc:	.word	0x00000a38
    25d0:	.word	0x00000a38
    25d4:	.word	0x00000a38
    25d8:	.word	0x000003f8
    25dc:	.word	0x00000a38
    25e0:	.word	0x0000052c
    25e4:	.word	0x000003b8
    25e8:	.word	0x000003b8
    25ec:	.word	0x000007a4
    25f0:	.word	0x000006ac
    25f4:	.word	0x000003b8
    25f8:	.word	0x000006cc
    25fc:	.word	0x000006d4
    2600:	.word	0x000006f4
    2604:	.word	0x0000054c
    2608:	.word	0x0000056c
    260c:	.word	0x000004d4
    2610:	.word	0x00000a38
    2614:	.word	0x00000a38
    2618:	.word	0x00000398
    261c:	.word	0x00000398
    2620:	.word	0x00000a38
    2624:	.word	0x00000a38
    2628:	.word	0x00000a38
    262c:	.word	0x00000a38
    2630:	.word	0x00000a38
    2634:	.word	0x00000a38
    2638:	.word	0x00000a38
    263c:	.word	0x00000a38
    2640:	.word	0x00000a38
    2644:	.word	0x00000a38
    2648:	.word	0x00000a38
    264c:	.word	0x00000a38
    2650:	.word	0x00000a38
    2654:	.word	0x00000a38
    2658:	.word	0x00000a38
    265c:	.word	0x00000a38
    2660:	.word	0x00000a38
    2664:	.word	0x00000a38
    2668:	.word	0x000003f8
    266c:	.word	0x000005d0
    2670:	.word	0x00000a38
    2674:	.word	0x00000424
    2678:	.word	0x00000444
    267c:	.word	0x00000590
    2680:	.word	0x00000a38
    2684:	.word	0x00000a38
    2688:	.word	0x00000a38
    268c:	.word	0x00000a38
    2690:	.word	0x00000a38
    2694:	.word	0x00000a38
    2698:	.word	0x00000a38
    269c:	.word	0x00000a38
    26a0:	.word	0x00000398
    26a4:	.word	0x00000444
    26a8:	.word	0x000003b8
    26ac:	.word	0x000003b8
    26b0:	.word	0x000003b8
    26b4:	.word	0x000004f8
    26b8:	.word	0x00000494
    26bc:	.word	0x00000a38
    26c0:	.word	0x00000a38
    26c4:	.word	0x00000398
    26c8:	.word	0x00000398
    26cc:	.word	0x00000a38
    26d0:	.word	0x00000398
    26d4:	.word	0x00000398
    26d8:	.word	0x00000398
    26dc:	.word	0x000003f8
    26e0:	.word	0x00000398
    26e4:	.word	0x000004b4
    26e8:	.word	0x00000398
    26ec:	.word	0x00000398
    26f0:	.word	0x00000894
    26f4:	.word	0x00000398
    26f8:	.word	0x00000398
    26fc:	.word	0x00000494
    2700:	.word	0x00000398
    2704:	.word	0x000007e0
    2708:	.word	0x00000a38
    270c:	.word	0x00000a38
    2710:	.word	0x00000a38
    2714:	.word	0x00000a38
    2718:	.word	0x00000a38
    271c:	.word	0x00000a38
    2720:	.word	0x00000a38
    2724:	.word	0x00000a38
    2728:	.word	0x00000a38
    272c:	.word	0x00000a38
    2730:	.word	0x00000a38
    2734:	.word	0x00000a38
    2738:	.word	0x00000398
    273c:	.word	0x00000a38
    2740:	.word	0x00000a38
    2744:	.word	0x00000a38
    2748:	.word	0x00000398
    274c:	.word	0x00000398
    2750:	.word	0x00000a38
    2754:	.word	0x00000a38
    2758:	.word	0x00000a38
    275c:	.word	0x00000a38
    2760:	.word	0x00000a38
    2764:	.word	0x00000854
    2768:	.word	0x00000398
    276c:	.word	0x000003d8
    2770:	.word	0x000003d8
    2774:	ldr	r1, [pc, #2188]	; 3008 <sfbpf_compile+0xe7c>
    2778:	mvn	r0, #0
    277c:	add	r1, pc, r1
    2780:	str	r0, [r1]
    2784:	ldr	r1, [pc, #2176]	; 300c <sfbpf_compile+0xe80>
    2788:	add	r1, pc, r1
    278c:	str	r0, [r1]
    2790:	b	2ba0 <sfbpf_compile+0xa14>
    2794:	mov	r0, #4
    2798:	ldr	r1, [pc, #2024]	; 2f88 <sfbpf_compile+0xdfc>
    279c:	add	r1, pc, r1
    27a0:	str	r0, [r1]
    27a4:	ldr	r1, [pc, #2016]	; 2f8c <sfbpf_compile+0xe00>
    27a8:	add	r1, pc, r1
    27ac:	str	r0, [r1]
    27b0:	b	2c50 <sfbpf_compile+0xac4>
    27b4:	ldr	r1, [pc, #1912]	; 2f34 <sfbpf_compile+0xda8>
    27b8:	mov	r0, #0
    27bc:	mvn	r2, #0
    27c0:	add	r1, pc, r1
    27c4:	str	r0, [r1]
    27c8:	ldr	r1, [pc, #1896]	; 2f38 <sfbpf_compile+0xdac>
    27cc:	add	r1, pc, r1
    27d0:	b	2b9c <sfbpf_compile+0xa10>
    27d4:	ldr	r1, [pc, #1856]	; 2f1c <sfbpf_compile+0xd90>
    27d8:	mov	r0, #0
    27dc:	add	r1, pc, r1
    27e0:	str	r0, [r1]
    27e4:	mov	r1, #24
    27e8:	ldr	r0, [pc, #1840]	; 2f20 <sfbpf_compile+0xd94>
    27ec:	add	r0, pc, r0
    27f0:	str	r1, [r0]
    27f4:	mov	r0, #1
    27f8:	strb	r0, [lr]
    27fc:	b	2a68 <sfbpf_compile+0x8dc>
    2800:	mov	r0, #4
    2804:	ldr	r1, [pc, #1720]	; 2ec4 <sfbpf_compile+0xd38>
    2808:	add	r1, pc, r1
    280c:	str	r0, [r1]
    2810:	mov	r1, #2
    2814:	ldr	r0, [pc, #1708]	; 2ec8 <sfbpf_compile+0xd3c>
    2818:	add	r0, pc, r0
    281c:	b	2c1c <sfbpf_compile+0xa90>
    2820:	ldr	r0, [pc, #1912]	; 2fa0 <sfbpf_compile+0xe14>
    2824:	mov	r1, #16
    2828:	add	r0, pc, r0
    282c:	str	r1, [r0]
    2830:	mov	r0, #14
    2834:	ldr	r1, [pc, #1896]	; 2fa4 <sfbpf_compile+0xe18>
    2838:	add	r1, pc, r1
    283c:	str	r0, [r1]
    2840:	mov	r1, #18
    2844:	ldr	r0, [pc, #1884]	; 2fa8 <sfbpf_compile+0xe1c>
    2848:	add	r0, pc, r0
    284c:	str	r1, [r0]
    2850:	mov	r1, #21
    2854:	ldr	r0, [pc, #1872]	; 2fac <sfbpf_compile+0xe20>
    2858:	add	r0, pc, r0
    285c:	b	2ccc <sfbpf_compile+0xb40>
    2860:	mov	r0, #4
    2864:	b	2b10 <sfbpf_compile+0x984>
    2868:	mov	r0, #0
    286c:	b	2a50 <sfbpf_compile+0x8c4>
    2870:	ldr	r1, [pc, #1888]	; 2fd8 <sfbpf_compile+0xe4c>
    2874:	mvn	r0, #0
    2878:	mov	r2, #18
    287c:	add	r1, pc, r1
    2880:	str	r0, [r1]
    2884:	ldr	r1, [pc, #1872]	; 2fdc <sfbpf_compile+0xe50>
    2888:	add	r1, pc, r1
    288c:	b	2b9c <sfbpf_compile+0xa10>
    2890:	ldr	r1, [pc, #1864]	; 2fe0 <sfbpf_compile+0xe54>
    2894:	mvn	r0, #0
    2898:	mov	r2, #8
    289c:	add	r1, pc, r1
    28a0:	str	r0, [r1]
    28a4:	ldr	r1, [pc, #1848]	; 2fe4 <sfbpf_compile+0xe58>
    28a8:	add	r1, pc, r1
    28ac:	b	2b9c <sfbpf_compile+0xa10>
    28b0:	mov	r0, #3
    28b4:	str	r0, [ip]
    28b8:	mov	r0, #2
    28bc:	str	r0, [r9]
    28c0:	mov	r0, #4
    28c4:	str	r0, [r4]
    28c8:	str	r0, [r6]
    28cc:	mov	r0, #7
    28d0:	b	2c90 <sfbpf_compile+0xb04>
    28d4:	ldr	r1, [pc, #1688]	; 2f74 <sfbpf_compile+0xde8>
    28d8:	mov	r0, #0
    28dc:	mvn	r2, #0
    28e0:	add	r1, pc, r1
    28e4:	str	r0, [r1]
    28e8:	ldr	r1, [pc, #1672]	; 2f78 <sfbpf_compile+0xdec>
    28ec:	add	r1, pc, r1
    28f0:	str	r2, [r1]
    28f4:	mov	r2, #4
    28f8:	ldr	r1, [pc, #1660]	; 2f7c <sfbpf_compile+0xdf0>
    28fc:	add	r1, pc, r1
    2900:	str	r2, [r1]
    2904:	b	2bac <sfbpf_compile+0xa20>
    2908:	ldr	r1, [pc, #1472]	; 2ed0 <sfbpf_compile+0xd44>
    290c:	mov	r0, #8
    2910:	add	r1, pc, r1
    2914:	str	r0, [r1]
    2918:	mov	r1, #4
    291c:	ldr	r0, [pc, #1456]	; 2ed4 <sfbpf_compile+0xd48>
    2920:	add	r0, pc, r0
    2924:	b	2c1c <sfbpf_compile+0xa90>
    2928:	ldr	r1, [pc, #1616]	; 2f80 <sfbpf_compile+0xdf4>
    292c:	mov	r0, #18
    2930:	add	r1, pc, r1
    2934:	str	r0, [r1]
    2938:	mov	r1, #16
    293c:	ldr	r0, [pc, #1600]	; 2f84 <sfbpf_compile+0xdf8>
    2940:	add	r0, pc, r0
    2944:	b	2c1c <sfbpf_compile+0xa90>
    2948:	mov	r0, #7
    294c:	str	r0, [ip]
    2950:	mov	r0, #6
    2954:	str	r0, [r9]
    2958:	mov	r0, #8
    295c:	str	r0, [r4]
    2960:	str	r0, [r6]
    2964:	mov	r0, #11
    2968:	b	2c90 <sfbpf_compile+0xb04>
    296c:	ldr	r1, [pc, #1596]	; 2fb0 <sfbpf_compile+0xe24>
    2970:	mov	r0, #6
    2974:	add	r1, pc, r1
    2978:	str	r0, [r1]
    297c:	mov	r1, #4
    2980:	ldr	r0, [pc, #1580]	; 2fb4 <sfbpf_compile+0xe28>
    2984:	add	r0, pc, r0
    2988:	b	2c4c <sfbpf_compile+0xac0>
    298c:	mov	r0, #6
    2990:	b	2804 <sfbpf_compile+0x678>
    2994:	mov	r0, #13
    2998:	b	2a50 <sfbpf_compile+0x8c4>
    299c:	mov	r0, #24
    29a0:	b	29f0 <sfbpf_compile+0x864>
    29a4:	mov	r0, #8
    29a8:	b	2a30 <sfbpf_compile+0x8a4>
    29ac:	mov	r0, #12
    29b0:	b	2798 <sfbpf_compile+0x60c>
    29b4:	ldr	r1, [pc, #1308]	; 2ed8 <sfbpf_compile+0xd4c>
    29b8:	mov	r0, #14
    29bc:	add	r1, pc, r1
    29c0:	str	r0, [r1]
    29c4:	mov	r1, #12
    29c8:	ldr	r0, [pc, #1292]	; 2edc <sfbpf_compile+0xd50>
    29cc:	add	r0, pc, r0
    29d0:	str	r1, [r0]
    29d4:	mov	r1, #0
    29d8:	ldr	r0, [pc, #1280]	; 2ee0 <sfbpf_compile+0xd54>
    29dc:	add	r0, pc, r0
    29e0:	b	2a74 <sfbpf_compile+0x8e8>
    29e4:	mov	r0, #14
    29e8:	b	2a50 <sfbpf_compile+0x8c4>
    29ec:	mov	r0, #16
    29f0:	ldr	r1, [pc, #1260]	; 2ee4 <sfbpf_compile+0xd58>
    29f4:	add	r1, pc, r1
    29f8:	str	r0, [r1]
    29fc:	mvn	r1, #0
    2a00:	ldr	r0, [pc, #1248]	; 2ee8 <sfbpf_compile+0xd5c>
    2a04:	add	r0, pc, r0
    2a08:	b	2c1c <sfbpf_compile+0xa90>
    2a0c:	ldr	r1, [pc, #1264]	; 2f04 <sfbpf_compile+0xd78>
    2a10:	mov	r0, #24
    2a14:	add	r1, pc, r1
    2a18:	str	r0, [r1]
    2a1c:	mov	r1, #5
    2a20:	ldr	r0, [pc, #1248]	; 2f08 <sfbpf_compile+0xd7c>
    2a24:	add	r0, pc, r0
    2a28:	b	2c1c <sfbpf_compile+0xa90>
    2a2c:	mov	r0, #44	; 0x2c
    2a30:	ldr	r1, [pc, #1220]	; 2efc <sfbpf_compile+0xd70>
    2a34:	add	r1, pc, r1
    2a38:	str	r0, [r1]
    2a3c:	mov	r1, #6
    2a40:	ldr	r0, [pc, #1208]	; 2f00 <sfbpf_compile+0xd74>
    2a44:	add	r0, pc, r0
    2a48:	b	2c1c <sfbpf_compile+0xa90>
    2a4c:	mov	r0, #16
    2a50:	ldr	r1, [pc, #1204]	; 2f0c <sfbpf_compile+0xd80>
    2a54:	add	r1, pc, r1
    2a58:	str	r0, [r1]
    2a5c:	ldr	r1, [pc, #1196]	; 2f10 <sfbpf_compile+0xd84>
    2a60:	add	r1, pc, r1
    2a64:	str	r0, [r1]
    2a68:	ldr	r0, [pc, #1188]	; 2f14 <sfbpf_compile+0xd88>
    2a6c:	mov	r1, #8
    2a70:	add	r0, pc, r0
    2a74:	str	r1, [r0]
    2a78:	mov	r1, #3
    2a7c:	ldr	r0, [pc, #1172]	; 2f18 <sfbpf_compile+0xd8c>
    2a80:	add	r0, pc, r0
    2a84:	b	2ccc <sfbpf_compile+0xb40>
    2a88:	ldr	r1, [pc, #1328]	; 2fc0 <sfbpf_compile+0xe34>
    2a8c:	mov	r0, #12
    2a90:	add	r1, pc, r1
    2a94:	str	r0, [r1]
    2a98:	mov	r1, #6
    2a9c:	ldr	r0, [pc, #1312]	; 2fc4 <sfbpf_compile+0xe38>
    2aa0:	add	r0, pc, r0
    2aa4:	b	2c4c <sfbpf_compile+0xac0>
    2aa8:	mov	r0, #8
    2aac:	b	2ad4 <sfbpf_compile+0x948>
    2ab0:	ldr	r1, [pc, #1304]	; 2fd0 <sfbpf_compile+0xe44>
    2ab4:	mvn	r0, #0
    2ab8:	mov	r2, #12
    2abc:	add	r1, pc, r1
    2ac0:	str	r0, [r1]
    2ac4:	ldr	r1, [pc, #1288]	; 2fd4 <sfbpf_compile+0xe48>
    2ac8:	add	r1, pc, r1
    2acc:	b	2b9c <sfbpf_compile+0xa10>
    2ad0:	mov	r0, #4
    2ad4:	ldr	r1, [pc, #1204]	; 2f90 <sfbpf_compile+0xe04>
    2ad8:	add	r1, pc, r1
    2adc:	str	r0, [r1]
    2ae0:	ldr	r1, [pc, #1196]	; 2f94 <sfbpf_compile+0xe08>
    2ae4:	add	r1, pc, r1
    2ae8:	str	r0, [r1]
    2aec:	mov	r1, #0
    2af0:	ldr	r0, [pc, #1184]	; 2f98 <sfbpf_compile+0xe0c>
    2af4:	add	r0, pc, r0
    2af8:	str	r1, [r0]
    2afc:	mov	r1, #10
    2b00:	ldr	r0, [pc, #1172]	; 2f9c <sfbpf_compile+0xe10>
    2b04:	add	r0, pc, r0
    2b08:	b	2ccc <sfbpf_compile+0xb40>
    2b0c:	mov	r0, #12
    2b10:	ldr	r1, [pc, #980]	; 2eec <sfbpf_compile+0xd60>
    2b14:	add	r1, pc, r1
    2b18:	str	r0, [r1]
    2b1c:	mov	r1, #0
    2b20:	ldr	r0, [pc, #968]	; 2ef0 <sfbpf_compile+0xd64>
    2b24:	add	r0, pc, r0
    2b28:	b	2cb4 <sfbpf_compile+0xb28>
    2b2c:	mov	r2, #1
    2b30:	str	r2, [r0]
    2b34:	ldr	r0, [pc, #1000]	; 2f24 <sfbpf_compile+0xd98>
    2b38:	add	r0, pc, r0
    2b3c:	strb	r2, [r0]
    2b40:	mov	r0, #2
    2b44:	str	r0, [r1]
    2b48:	mov	r0, #0
    2b4c:	strb	r0, [r8]
    2b50:	mvn	r0, #0
    2b54:	ldr	r1, [pc, #972]	; 2f28 <sfbpf_compile+0xd9c>
    2b58:	add	r1, pc, r1
    2b5c:	str	r0, [r1]
    2b60:	mov	r0, #4
    2b64:	str	r0, [r7]
    2b68:	ldr	r1, [pc, #956]	; 2f2c <sfbpf_compile+0xda0>
    2b6c:	add	r1, pc, r1
    2b70:	str	r0, [r1]
    2b74:	ldr	r1, [pc, #948]	; 2f30 <sfbpf_compile+0xda4>
    2b78:	add	r1, pc, r1
    2b7c:	b	2a64 <sfbpf_compile+0x8d8>
    2b80:	ldr	r1, [pc, #1088]	; 2fc8 <sfbpf_compile+0xe3c>
    2b84:	mvn	r0, #0
    2b88:	mov	r2, #6
    2b8c:	add	r1, pc, r1
    2b90:	str	r0, [r1]
    2b94:	ldr	r1, [pc, #1072]	; 2fcc <sfbpf_compile+0xe40>
    2b98:	add	r1, pc, r1
    2b9c:	str	r2, [r1]
    2ba0:	ldr	r1, [pc, #916]	; 2f3c <sfbpf_compile+0xdb0>
    2ba4:	add	r1, pc, r1
    2ba8:	str	r0, [r1]
    2bac:	ldr	r1, [pc, #908]	; 2f40 <sfbpf_compile+0xdb4>
    2bb0:	add	r1, pc, r1
    2bb4:	str	r0, [r1]
    2bb8:	b	2cd0 <sfbpf_compile+0xb44>
    2bbc:	ldr	r1, [pc, #1072]	; 2ff4 <sfbpf_compile+0xe68>
    2bc0:	mvn	r0, #0
    2bc4:	add	r1, pc, r1
    2bc8:	str	r0, [r1]
    2bcc:	ldr	r1, [pc, #1060]	; 2ff8 <sfbpf_compile+0xe6c>
    2bd0:	add	r1, pc, r1
    2bd4:	str	r0, [r1]
    2bd8:	ldr	r1, [pc, #1052]	; 2ffc <sfbpf_compile+0xe70>
    2bdc:	add	r1, pc, r1
    2be0:	str	r0, [r1]
    2be4:	ldr	r1, [pc, #1044]	; 3000 <sfbpf_compile+0xe74>
    2be8:	add	r1, pc, r1
    2bec:	str	r0, [r1]
    2bf0:	mov	r0, #1
    2bf4:	ldr	r1, [pc, #1032]	; 3004 <sfbpf_compile+0xe78>
    2bf8:	add	r1, pc, r1
    2bfc:	b	2bb4 <sfbpf_compile+0xa28>
    2c00:	ldr	r1, [pc, #868]	; 2f6c <sfbpf_compile+0xde0>
    2c04:	mov	r0, #16
    2c08:	add	r1, pc, r1
    2c0c:	str	r0, [r1]
    2c10:	mov	r1, #14
    2c14:	ldr	r0, [pc, #852]	; 2f70 <sfbpf_compile+0xde4>
    2c18:	add	r0, pc, r0
    2c1c:	str	r1, [r0]
    2c20:	mov	r1, #0
    2c24:	ldr	r0, [pc, #672]	; 2ecc <sfbpf_compile+0xd40>
    2c28:	add	r0, pc, r0
    2c2c:	b	2cc0 <sfbpf_compile+0xb34>
    2c30:	ldr	r1, [pc, #984]	; 3010 <sfbpf_compile+0xe84>
    2c34:	mov	r0, #24
    2c38:	add	r1, pc, r1
    2c3c:	str	r0, [r1]
    2c40:	mov	r1, #1
    2c44:	ldr	r0, [pc, #968]	; 3014 <sfbpf_compile+0xe88>
    2c48:	add	r0, pc, r0
    2c4c:	str	r1, [r0]
    2c50:	ldr	r0, [pc, #864]	; 2fb8 <sfbpf_compile+0xe2c>
    2c54:	mov	r1, #0
    2c58:	add	r0, pc, r0
    2c5c:	str	r1, [r0]
    2c60:	mvn	r1, #0
    2c64:	ldr	r0, [pc, #848]	; 2fbc <sfbpf_compile+0xe30>
    2c68:	add	r0, pc, r0
    2c6c:	b	2ccc <sfbpf_compile+0xb40>
    2c70:	mov	r0, #23
    2c74:	str	r0, [ip]
    2c78:	mov	r0, #22
    2c7c:	str	r0, [r9]
    2c80:	mov	r0, #24
    2c84:	str	r0, [r4]
    2c88:	str	r0, [r6]
    2c8c:	mov	r0, #27
    2c90:	ldr	r1, [pc, #848]	; 2fe8 <sfbpf_compile+0xe5c>
    2c94:	add	r1, pc, r1
    2c98:	str	r0, [r1]
    2c9c:	mvn	r1, #0
    2ca0:	ldr	r0, [pc, #836]	; 2fec <sfbpf_compile+0xe60>
    2ca4:	add	r0, pc, r0
    2ca8:	str	r1, [r0]
    2cac:	ldr	r0, [pc, #828]	; 2ff0 <sfbpf_compile+0xe64>
    2cb0:	add	r0, pc, r0
    2cb4:	str	r1, [r0]
    2cb8:	ldr	r0, [pc, #564]	; 2ef4 <sfbpf_compile+0xd68>
    2cbc:	add	r0, pc, r0
    2cc0:	str	r1, [r0]
    2cc4:	ldr	r0, [pc, #556]	; 2ef8 <sfbpf_compile+0xd6c>
    2cc8:	add	r0, pc, r0
    2ccc:	str	r1, [r0]
    2cd0:	ldr	r4, [pc, #620]	; 2f44 <sfbpf_compile+0xdb8>
    2cd4:	ldr	r4, [pc, r4]
    2cd8:	bl	25538 <sfbpf_parse>
    2cdc:	ldr	r0, [r4]
    2ce0:	ldr	r4, [sp]
    2ce4:	cmp	r0, #0
    2ce8:	bne	2e24 <sfbpf_compile+0xc98>
    2cec:	ldr	r0, [pc, #596]	; 2f48 <sfbpf_compile+0xdbc>
    2cf0:	ldr	r0, [pc, r0]
    2cf4:	cmp	r0, #0
    2cf8:	bne	2d9c <sfbpf_compile+0xc10>
    2cfc:	ldr	r0, [pc, #584]	; 2f4c <sfbpf_compile+0xdc0>
    2d00:	ldr	r0, [pc, r0]
    2d04:	ldr	r7, [pc, #580]	; 2f50 <sfbpf_compile+0xdc4>
    2d08:	add	r7, pc, r7
    2d0c:	ldr	r5, [r7, r0, lsl #3]!
    2d10:	ldr	r6, [pc, #572]	; 2f54 <sfbpf_compile+0xdc8>
    2d14:	ldr	r6, [pc, r6]
    2d18:	cmp	r5, #207	; 0xcf
    2d1c:	bhi	2d70 <sfbpf_compile+0xbe4>
    2d20:	ldr	r2, [pc, #560]	; 2f58 <sfbpf_compile+0xdcc>
    2d24:	add	r1, r0, #1
    2d28:	cmp	r0, #15
    2d2c:	add	r2, pc, r2
    2d30:	str	r1, [r2]
    2d34:	bge	2e34 <sfbpf_compile+0xca8>
    2d38:	mov	r0, #1024	; 0x400
    2d3c:	lsl	r5, r0, r1
    2d40:	mov	r0, r5
    2d44:	bl	dec <malloc@plt>
    2d48:	cmp	r0, #0
    2d4c:	str	r0, [r7, #12]
    2d50:	beq	2e34 <sfbpf_compile+0xca8>
    2d54:	mov	r1, #0
    2d58:	mov	r2, r5
    2d5c:	add	r7, r7, #8
    2d60:	bl	e58 <memset@plt>
    2d64:	cmp	r5, #207	; 0xcf
    2d68:	str	r5, [r7]
    2d6c:	bls	2e34 <sfbpf_compile+0xca8>
    2d70:	sub	r0, r5, #208	; 0xd0
    2d74:	str	r0, [r7]
    2d78:	ldr	r1, [r7, #4]
    2d7c:	add	r0, r1, r0
    2d80:	mov	r1, #6
    2d84:	str	r1, [r0, #8]
    2d88:	str	r6, [r0, #20]
    2d8c:	str	r0, [r0, #96]	; 0x60
    2d90:	ldr	r1, [pc, #452]	; 2f5c <sfbpf_compile+0xdd0>
    2d94:	add	r1, pc, r1
    2d98:	str	r0, [r1]
    2d9c:	ldr	r1, [fp, #8]
    2da0:	cmp	r1, #0
    2da4:	beq	2dec <sfbpf_compile+0xc60>
    2da8:	ldr	r1, [pc, #432]	; 2f60 <sfbpf_compile+0xdd4>
    2dac:	ldr	r1, [pc, r1]
    2db0:	cmp	r1, #0
    2db4:	bne	2dec <sfbpf_compile+0xc60>
    2db8:	ldr	r0, [pc, #420]	; 2f64 <sfbpf_compile+0xdd8>
    2dbc:	add	r0, pc, r0
    2dc0:	bl	20aa8 <sf_bpf_optimize>
    2dc4:	ldr	r0, [pc, #412]	; 2f68 <sfbpf_compile+0xddc>
    2dc8:	ldr	r0, [pc, r0]
    2dcc:	cmp	r0, #0
    2dd0:	beq	2e28 <sfbpf_compile+0xc9c>
    2dd4:	ldr	r1, [r0, #8]
    2dd8:	cmp	r1, #6
    2ddc:	bne	2dec <sfbpf_compile+0xc60>
    2de0:	ldr	r1, [r0, #20]
    2de4:	cmp	r1, #0
    2de8:	beq	2e28 <sfbpf_compile+0xc9c>
    2dec:	add	r1, sp, #4
    2df0:	bl	24808 <sf_icode_to_fcode>
    2df4:	ldr	r1, [sp, #4]
    2df8:	str	r1, [r4]
    2dfc:	str	r0, [r4, #4]
    2e00:	bl	298d0 <sf_lex_cleanup>
    2e04:	bl	3024 <freechunks>
    2e08:	mov	r0, #0
    2e0c:	sub	sp, fp, #28
    2e10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2e14:	ldr	r0, [pc, #508]	; 3018 <sfbpf_compile+0xe8c>
    2e18:	mov	r1, r5
    2e1c:	add	r0, pc, r0
    2e20:	bl	2068 <sf_bpf_error>
    2e24:	bl	31cc <syntax>
    2e28:	ldr	r0, [pc, #496]	; 3020 <sfbpf_compile+0xe94>
    2e2c:	add	r0, pc, r0
    2e30:	bl	2068 <sf_bpf_error>
    2e34:	ldr	r0, [pc, #480]	; 301c <sfbpf_compile+0xe90>
    2e38:	add	r0, pc, r0
    2e3c:	bl	2068 <sf_bpf_error>
    2e40:	.word	0x000457f4
    2e44:	.word	0x00045264
    2e48:	.word	0x00045344
    2e4c:	.word	0x0004533c
    2e50:	.word	0x00044eb8
    2e54:	.word	0x00045090
    2e58:	.word	0x00045208
    2e5c:	.word	0x000451f0
    2e60:	.word	0x000451d0
    2e64:	.word	0x000451c0
    2e68:	.word	0x000278a8
    2e6c:	.word	0x00044ef4
    2e70:	.word	0x0002780c
    2e74:	.word	0x00045168
    2e78:	.word	0x00045144
    2e7c:	.word	0x0004515c
    2e80:	.word	0x00045130
    2e84:	.word	0x00045148
    2e88:	.word	0x00045140
    2e8c:	.word	0x00045138
    2e90:	.word	0x00045130
    2e94:	.word	0x00045110
    2e98:	.word	0x0004511c
    2e9c:	.word	0x00045114
    2ea0:	.word	0x0004510c
    2ea4:	.word	0x00045104
    2ea8:	.word	0x000450fc
    2eac:	.word	0x000450b4
    2eb0:	.word	0x0004516c
    2eb4:	.word	0x00044d38
    2eb8:	.word	0x00044d28
    2ebc:	.word	0x0004514c
    2ec0:	.word	0x00045144
    2ec4:	.word	0x00044c34
    2ec8:	.word	0x00044c20
    2ecc:	.word	0x00044818
    2ed0:	.word	0x00044b2c
    2ed4:	.word	0x00044b18
    2ed8:	.word	0x00044a80
    2edc:	.word	0x00044a6c
    2ee0:	.word	0x00044a64
    2ee4:	.word	0x00044a48
    2ee8:	.word	0x00044a34
    2eec:	.word	0x00044928
    2ef0:	.word	0x00044914
    2ef4:	.word	0x00044784
    2ef8:	.word	0x00044784
    2efc:	.word	0x00044a08
    2f00:	.word	0x000449f4
    2f04:	.word	0x00044a28
    2f08:	.word	0x00044a14
    2f0c:	.word	0x000449e8
    2f10:	.word	0x000449d8
    2f14:	.word	0x000449d0
    2f18:	.word	0x000449cc
    2f1c:	.word	0x00044c60
    2f20:	.word	0x00044c4c
    2f24:	.word	0x0004491c
    2f28:	.word	0x000448f0
    2f2c:	.word	0x000448cc
    2f30:	.word	0x000448c4
    2f34:	.word	0x00044c7c
    2f38:	.word	0x00044c6c
    2f3c:	.word	0x0004489c
    2f40:	.word	0x0004489c
    2f44:	.word	0x000443dc
    2f48:	.word	0x00044730
    2f4c:	.word	0x000447fc
    2f50:	.word	0x00044774
    2f54:	.word	0x00044718
    2f58:	.word	0x000447d0
    2f5c:	.word	0x0004468c
    2f60:	.word	0x00044bf8
    2f64:	.word	0x00044664
    2f68:	.word	0x00044658
    2f6c:	.word	0x00044834
    2f70:	.word	0x00044820
    2f74:	.word	0x00044b5c
    2f78:	.word	0x00044b4c
    2f7c:	.word	0x00044b44
    2f80:	.word	0x00044b0c
    2f84:	.word	0x00044af8
    2f88:	.word	0x00044ca0
    2f8c:	.word	0x00044c90
    2f90:	.word	0x00044964
    2f94:	.word	0x00044954
    2f98:	.word	0x0004494c
    2f9c:	.word	0x00044948
    2fa0:	.word	0x00044c10
    2fa4:	.word	0x00044c04
    2fa8:	.word	0x00044bf8
    2fac:	.word	0x00044bf4
    2fb0:	.word	0x00044ac8
    2fb4:	.word	0x00044ab4
    2fb8:	.word	0x000447e8
    2fbc:	.word	0x000447e4
    2fc0:	.word	0x000449ac
    2fc4:	.word	0x00044998
    2fc8:	.word	0x000448b0
    2fcc:	.word	0x000448a0
    2fd0:	.word	0x00044980
    2fd4:	.word	0x00044970
    2fd8:	.word	0x00044bc0
    2fdc:	.word	0x00044bb0
    2fe0:	.word	0x00044ba0
    2fe4:	.word	0x00044b90
    2fe8:	.word	0x000447e4
    2fec:	.word	0x00044794
    2ff0:	.word	0x0004478c
    2ff4:	.word	0x00044878
    2ff8:	.word	0x00044868
    2ffc:	.word	0x00044864
    3000:	.word	0x00044864
    3004:	.word	0x00044850
    3008:	.word	0x00044cc0
    300c:	.word	0x00044cb0
    3010:	.word	0x00044804
    3014:	.word	0x000447f0
    3018:	.word	0x00027890
    301c:	.word	0x00027844
    3020:	.word	0x00026d3c

00003024 <freechunks>:
    3024:	push	{r4, r5, fp, lr}
    3028:	add	fp, sp, #8
    302c:	ldr	r0, [pc, #400]	; 31c4 <freechunks+0x1a0>
    3030:	mov	r5, #0
    3034:	add	r0, pc, r0
    3038:	str	r5, [r0]
    303c:	ldr	r4, [pc, #388]	; 31c8 <freechunks+0x1a4>
    3040:	add	r4, pc, r4
    3044:	ldr	r0, [r4, #4]
    3048:	cmp	r0, #0
    304c:	beq	3058 <freechunks+0x34>
    3050:	bl	d74 <free@plt>
    3054:	str	r5, [r4, #4]
    3058:	ldr	r0, [r4, #12]
    305c:	cmp	r0, #0
    3060:	beq	3070 <freechunks+0x4c>
    3064:	bl	d74 <free@plt>
    3068:	mov	r0, #0
    306c:	str	r0, [r4, #12]
    3070:	ldr	r0, [r4, #20]
    3074:	cmp	r0, #0
    3078:	beq	3088 <freechunks+0x64>
    307c:	bl	d74 <free@plt>
    3080:	mov	r0, #0
    3084:	str	r0, [r4, #20]
    3088:	ldr	r0, [r4, #28]
    308c:	cmp	r0, #0
    3090:	beq	30a0 <freechunks+0x7c>
    3094:	bl	d74 <free@plt>
    3098:	mov	r0, #0
    309c:	str	r0, [r4, #28]
    30a0:	ldr	r0, [r4, #36]	; 0x24
    30a4:	cmp	r0, #0
    30a8:	beq	30b8 <freechunks+0x94>
    30ac:	bl	d74 <free@plt>
    30b0:	mov	r0, #0
    30b4:	str	r0, [r4, #36]	; 0x24
    30b8:	ldr	r0, [r4, #44]	; 0x2c
    30bc:	cmp	r0, #0
    30c0:	beq	30d0 <freechunks+0xac>
    30c4:	bl	d74 <free@plt>
    30c8:	mov	r0, #0
    30cc:	str	r0, [r4, #44]	; 0x2c
    30d0:	ldr	r0, [r4, #52]	; 0x34
    30d4:	cmp	r0, #0
    30d8:	beq	30e8 <freechunks+0xc4>
    30dc:	bl	d74 <free@plt>
    30e0:	mov	r0, #0
    30e4:	str	r0, [r4, #52]	; 0x34
    30e8:	ldr	r0, [r4, #60]	; 0x3c
    30ec:	cmp	r0, #0
    30f0:	beq	3100 <freechunks+0xdc>
    30f4:	bl	d74 <free@plt>
    30f8:	mov	r0, #0
    30fc:	str	r0, [r4, #60]	; 0x3c
    3100:	ldr	r0, [r4, #68]	; 0x44
    3104:	cmp	r0, #0
    3108:	beq	3118 <freechunks+0xf4>
    310c:	bl	d74 <free@plt>
    3110:	mov	r0, #0
    3114:	str	r0, [r4, #68]	; 0x44
    3118:	ldr	r0, [r4, #76]	; 0x4c
    311c:	cmp	r0, #0
    3120:	beq	3130 <freechunks+0x10c>
    3124:	bl	d74 <free@plt>
    3128:	mov	r0, #0
    312c:	str	r0, [r4, #76]	; 0x4c
    3130:	ldr	r0, [r4, #84]	; 0x54
    3134:	cmp	r0, #0
    3138:	beq	3148 <freechunks+0x124>
    313c:	bl	d74 <free@plt>
    3140:	mov	r0, #0
    3144:	str	r0, [r4, #84]	; 0x54
    3148:	ldr	r0, [r4, #92]	; 0x5c
    314c:	cmp	r0, #0
    3150:	beq	3160 <freechunks+0x13c>
    3154:	bl	d74 <free@plt>
    3158:	mov	r0, #0
    315c:	str	r0, [r4, #92]	; 0x5c
    3160:	ldr	r0, [r4, #100]	; 0x64
    3164:	cmp	r0, #0
    3168:	beq	3178 <freechunks+0x154>
    316c:	bl	d74 <free@plt>
    3170:	mov	r0, #0
    3174:	str	r0, [r4, #100]	; 0x64
    3178:	ldr	r0, [r4, #108]	; 0x6c
    317c:	cmp	r0, #0
    3180:	beq	3190 <freechunks+0x16c>
    3184:	bl	d74 <free@plt>
    3188:	mov	r0, #0
    318c:	str	r0, [r4, #108]	; 0x6c
    3190:	ldr	r0, [r4, #116]	; 0x74
    3194:	cmp	r0, #0
    3198:	beq	31a8 <freechunks+0x184>
    319c:	bl	d74 <free@plt>
    31a0:	mov	r0, #0
    31a4:	str	r0, [r4, #116]	; 0x74
    31a8:	ldr	r0, [r4, #124]	; 0x7c
    31ac:	cmp	r0, #0
    31b0:	popeq	{r4, r5, fp, pc}
    31b4:	bl	d74 <free@plt>
    31b8:	mov	r0, #0
    31bc:	str	r0, [r4, #124]	; 0x7c
    31c0:	pop	{r4, r5, fp, pc}
    31c4:	.word	0x000444c8
    31c8:	.word	0x0004443c

000031cc <syntax>:
    31cc:	push	{fp, lr}
    31d0:	mov	fp, sp
    31d4:	ldr	r0, [pc, #4]	; 31e0 <syntax+0x14>
    31d8:	add	r0, pc, r0
    31dc:	bl	2068 <sf_bpf_error>
    31e0:	.word	0x000274b2

000031e4 <sfbpf_freecode>:
    31e4:	push	{r4, r5, fp, lr}
    31e8:	add	fp, sp, #8
    31ec:	mov	r5, #0
    31f0:	mov	r4, r0
    31f4:	str	r5, [r0]
    31f8:	ldr	r0, [r0, #4]
    31fc:	cmp	r0, #0
    3200:	popeq	{r4, r5, fp, pc}
    3204:	bl	d74 <free@plt>
    3208:	str	r5, [r4, #4]
    320c:	pop	{r4, r5, fp, pc}

00003210 <sf_finish_parse>:
    3210:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3214:	add	fp, sp, #28
    3218:	sub	sp, sp, #36	; 0x24
    321c:	ldr	r4, [r0, #96]	; 0x60
    3220:	ldr	r3, [pc, #4004]	; 41cc <sf_finish_parse+0xfbc>
    3224:	mov	sl, r0
    3228:	mov	ip, #0
    322c:	ldr	r3, [pc, r3]
    3230:	ldr	r8, [pc, #3992]	; 41d0 <sf_finish_parse+0xfc0>
    3234:	str	r4, [sp, #16]
    3238:	cmp	r3, #162	; 0xa2
    323c:	add	r8, pc, r8
    3240:	str	r3, [sp, #20]
    3244:	bgt	32d8 <sf_finish_parse+0xc8>
    3248:	cmp	r3, #119	; 0x77
    324c:	beq	3368 <sf_finish_parse+0x158>
    3250:	cmp	r3, #127	; 0x7f
    3254:	bne	4210 <sf_finish_parse+0x1000>
    3258:	ldr	r7, [pc, #3956]	; 41d4 <sf_finish_parse+0xfc4>
    325c:	ldr	r7, [pc, r7]
    3260:	cmn	r7, #1
    3264:	beq	3470 <sf_finish_parse+0x260>
    3268:	ldr	r0, [pc, #3944]	; 41d8 <sf_finish_parse+0xfc8>
    326c:	mov	r6, r8
    3270:	ldr	r0, [pc, r0]
    3274:	str	r7, [sp, #24]
    3278:	ldr	r5, [r6, r0, lsl #3]!
    327c:	cmp	r5, #19
    3280:	bhi	3478 <sf_finish_parse+0x268>
    3284:	ldr	r1, [pc, #4088]	; 4284 <sf_finish_parse+0x1074>
    3288:	add	r9, r0, #1
    328c:	cmp	r0, #15
    3290:	add	r1, pc, r1
    3294:	str	r9, [r1]
    3298:	bge	53a8 <sf_finish_parse+0x2198>
    329c:	mov	r0, #1024	; 0x400
    32a0:	lsl	r5, r0, r9
    32a4:	mov	r0, r5
    32a8:	bl	dec <malloc@plt>
    32ac:	cmp	r0, #0
    32b0:	str	r0, [r6, #12]
    32b4:	beq	53a8 <sf_finish_parse+0x2198>
    32b8:	mov	r1, #0
    32bc:	mov	r2, r5
    32c0:	add	r6, r6, #8
    32c4:	bl	e58 <memset@plt>
    32c8:	cmp	r5, #19
    32cc:	str	r5, [r6]
    32d0:	bhi	347c <sf_finish_parse+0x26c>
    32d4:	b	53a8 <sf_finish_parse+0x2198>
    32d8:	cmp	r3, #163	; 0xa3
    32dc:	beq	33f4 <sf_finish_parse+0x1e4>
    32e0:	cmp	r3, #192	; 0xc0
    32e4:	bne	4210 <sf_finish_parse+0x1000>
    32e8:	ldr	r7, [pc, #4092]	; 42ec <sf_finish_parse+0x10dc>
    32ec:	ldr	r7, [pc, r7]
    32f0:	cmn	r7, #1
    32f4:	beq	3470 <sf_finish_parse+0x260>
    32f8:	ldr	r0, [pc, #4080]	; 42f0 <sf_finish_parse+0x10e0>
    32fc:	mov	r6, r8
    3300:	ldr	r0, [pc, r0]
    3304:	str	r7, [sp, #24]
    3308:	ldr	r5, [r6, r0, lsl #3]!
    330c:	cmp	r5, #19
    3310:	bhi	3504 <sf_finish_parse+0x2f4>
    3314:	ldr	r1, [pc, #4056]	; 42f4 <sf_finish_parse+0x10e4>
    3318:	add	r9, r0, #1
    331c:	cmp	r0, #15
    3320:	add	r1, pc, r1
    3324:	str	r9, [r1]
    3328:	bge	53a8 <sf_finish_parse+0x2198>
    332c:	mov	r0, #1024	; 0x400
    3330:	lsl	r5, r0, r9
    3334:	mov	r0, r5
    3338:	bl	dec <malloc@plt>
    333c:	cmp	r0, #0
    3340:	str	r0, [r6, #12]
    3344:	beq	53a8 <sf_finish_parse+0x2198>
    3348:	mov	r1, #0
    334c:	mov	r2, r5
    3350:	add	r6, r6, #8
    3354:	bl	e58 <memset@plt>
    3358:	cmp	r5, #19
    335c:	str	r5, [r6]
    3360:	bhi	3508 <sf_finish_parse+0x2f8>
    3364:	b	53a8 <sf_finish_parse+0x2198>
    3368:	ldr	r0, [pc, #3976]	; 42f8 <sf_finish_parse+0x10e8>
    336c:	mov	r1, #1
    3370:	add	r0, pc, r0
    3374:	str	r1, [r0]
    3378:	ldr	r9, [pc, #3964]	; 42fc <sf_finish_parse+0x10ec>
    337c:	ldr	r9, [pc, r9]
    3380:	cmn	r9, #1
    3384:	beq	3470 <sf_finish_parse+0x260>
    3388:	ldr	r0, [pc, #4092]	; 438c <sf_finish_parse+0x117c>
    338c:	mov	r4, r8
    3390:	ldr	r0, [pc, r0]
    3394:	ldr	r5, [r4, r0, lsl #3]!
    3398:	cmp	r5, #19
    339c:	bhi	3590 <sf_finish_parse+0x380>
    33a0:	ldr	r1, [pc, #4072]	; 4390 <sf_finish_parse+0x1180>
    33a4:	add	r6, r0, #1
    33a8:	cmp	r0, #15
    33ac:	add	r1, pc, r1
    33b0:	str	r6, [r1]
    33b4:	bge	53a8 <sf_finish_parse+0x2198>
    33b8:	mov	r0, #1024	; 0x400
    33bc:	lsl	r5, r0, r6
    33c0:	mov	r0, r5
    33c4:	bl	dec <malloc@plt>
    33c8:	cmp	r0, #0
    33cc:	str	r0, [r4, #12]
    33d0:	beq	53a8 <sf_finish_parse+0x2198>
    33d4:	mov	r1, #0
    33d8:	mov	r2, r5
    33dc:	add	r4, r4, #8
    33e0:	bl	e58 <memset@plt>
    33e4:	cmp	r5, #19
    33e8:	str	r5, [r4]
    33ec:	bhi	3594 <sf_finish_parse+0x384>
    33f0:	b	53a8 <sf_finish_parse+0x2198>
    33f4:	ldr	r9, [pc, #3992]	; 4394 <sf_finish_parse+0x1184>
    33f8:	ldr	r9, [pc, r9]
    33fc:	cmn	r9, #1
    3400:	beq	3470 <sf_finish_parse+0x260>
    3404:	ldr	r0, [pc, #3980]	; 4398 <sf_finish_parse+0x1188>
    3408:	mov	r6, r8
    340c:	ldr	r0, [pc, r0]
    3410:	ldr	r5, [r6, r0, lsl #3]!
    3414:	cmp	r5, #19
    3418:	bhi	361c <sf_finish_parse+0x40c>
    341c:	ldr	r1, [pc, #3960]	; 439c <sf_finish_parse+0x118c>
    3420:	add	r7, r0, #1
    3424:	cmp	r0, #15
    3428:	add	r1, pc, r1
    342c:	str	r7, [r1]
    3430:	bge	53a8 <sf_finish_parse+0x2198>
    3434:	mov	r0, #1024	; 0x400
    3438:	lsl	r5, r0, r7
    343c:	mov	r0, r5
    3440:	bl	dec <malloc@plt>
    3444:	cmp	r0, #0
    3448:	str	r0, [r6, #12]
    344c:	beq	53a8 <sf_finish_parse+0x2198>
    3450:	mov	r1, #0
    3454:	mov	r2, r5
    3458:	add	r6, r6, #8
    345c:	bl	e58 <memset@plt>
    3460:	cmp	r5, #19
    3464:	str	r5, [r6]
    3468:	bhi	3620 <sf_finish_parse+0x410>
    346c:	b	53a8 <sf_finish_parse+0x2198>
    3470:	mov	ip, #0
    3474:	b	4240 <sf_finish_parse+0x1030>
    3478:	mov	r9, r0
    347c:	sub	r0, r5, #20
    3480:	mov	r1, #48	; 0x30
    3484:	mov	r4, r8
    3488:	str	r0, [r6]
    348c:	ldr	ip, [r6, #4]
    3490:	str	r1, [ip, r0]!
    3494:	mov	r0, #3
    3498:	str	r0, [ip, #12]
    349c:	str	ip, [sp, #28]
    34a0:	ldr	r5, [r4, r9, lsl #3]!
    34a4:	cmp	r5, #19
    34a8:	bhi	36a8 <sf_finish_parse+0x498>
    34ac:	ldr	r0, [pc, #3972]	; 4438 <sf_finish_parse+0x1228>
    34b0:	add	r6, r9, #1
    34b4:	cmp	r9, #15
    34b8:	add	r0, pc, r0
    34bc:	str	r6, [r0]
    34c0:	bge	53a8 <sf_finish_parse+0x2198>
    34c4:	mov	r0, #1024	; 0x400
    34c8:	lsl	r5, r0, r6
    34cc:	mov	r0, r5
    34d0:	bl	dec <malloc@plt>
    34d4:	cmp	r0, #0
    34d8:	str	r0, [r4, #12]
    34dc:	beq	53a8 <sf_finish_parse+0x2198>
    34e0:	mov	r1, #0
    34e4:	mov	r2, r5
    34e8:	add	r4, r4, #8
    34ec:	bl	e58 <memset@plt>
    34f0:	ldr	ip, [sp, #28]
    34f4:	cmp	r5, #19
    34f8:	str	r5, [r4]
    34fc:	bhi	36ac <sf_finish_parse+0x49c>
    3500:	b	53a8 <sf_finish_parse+0x2198>
    3504:	mov	r9, r0
    3508:	sub	r0, r5, #20
    350c:	mov	r1, #48	; 0x30
    3510:	mov	r4, r8
    3514:	str	r0, [r6]
    3518:	ldr	ip, [r6, #4]
    351c:	str	r1, [ip, r0]!
    3520:	mov	r0, #3
    3524:	str	r0, [ip, #12]
    3528:	str	ip, [sp, #28]
    352c:	ldr	r5, [r4, r9, lsl #3]!
    3530:	cmp	r5, #19
    3534:	bhi	3748 <sf_finish_parse+0x538>
    3538:	ldr	r0, [pc, #3996]	; 44dc <sf_finish_parse+0x12cc>
    353c:	add	r6, r9, #1
    3540:	cmp	r9, #15
    3544:	add	r0, pc, r0
    3548:	str	r6, [r0]
    354c:	bge	53a8 <sf_finish_parse+0x2198>
    3550:	mov	r0, #1024	; 0x400
    3554:	lsl	r5, r0, r6
    3558:	mov	r0, r5
    355c:	bl	dec <malloc@plt>
    3560:	cmp	r0, #0
    3564:	str	r0, [r4, #12]
    3568:	beq	53a8 <sf_finish_parse+0x2198>
    356c:	mov	r1, #0
    3570:	mov	r2, r5
    3574:	add	r4, r4, #8
    3578:	bl	e58 <memset@plt>
    357c:	ldr	ip, [sp, #28]
    3580:	cmp	r5, #19
    3584:	str	r5, [r4]
    3588:	bhi	374c <sf_finish_parse+0x53c>
    358c:	b	53a8 <sf_finish_parse+0x2198>
    3590:	mov	r6, r0
    3594:	sub	r0, r5, #20
    3598:	mov	r1, #32
    359c:	mov	r7, r8
    35a0:	str	r0, [r4]
    35a4:	ldr	ip, [r4, #4]
    35a8:	str	r1, [ip, r0]!
    35ac:	mov	r0, #0
    35b0:	str	r0, [ip, #12]
    35b4:	str	ip, [sp, #28]
    35b8:	ldr	r5, [r7, r6, lsl #3]!
    35bc:	cmp	r5, #19
    35c0:	bhi	37e8 <sf_finish_parse+0x5d8>
    35c4:	ldr	r0, [pc, #4020]	; 4580 <sf_finish_parse+0x1370>
    35c8:	add	r4, r6, #1
    35cc:	cmp	r6, #15
    35d0:	add	r0, pc, r0
    35d4:	str	r4, [r0]
    35d8:	bge	53a8 <sf_finish_parse+0x2198>
    35dc:	mov	r0, #1024	; 0x400
    35e0:	lsl	r5, r0, r4
    35e4:	mov	r0, r5
    35e8:	bl	dec <malloc@plt>
    35ec:	cmp	r0, #0
    35f0:	str	r0, [r7, #12]
    35f4:	beq	53a8 <sf_finish_parse+0x2198>
    35f8:	mov	r1, #0
    35fc:	mov	r2, r5
    3600:	add	r7, r7, #8
    3604:	bl	e58 <memset@plt>
    3608:	ldr	ip, [sp, #28]
    360c:	cmp	r5, #19
    3610:	str	r5, [r7]
    3614:	bhi	37ec <sf_finish_parse+0x5dc>
    3618:	b	53a8 <sf_finish_parse+0x2198>
    361c:	mov	r7, r0
    3620:	sub	r0, r5, #20
    3624:	mov	r1, #32
    3628:	mov	r4, r8
    362c:	str	r0, [r6]
    3630:	ldr	ip, [r6, #4]
    3634:	str	r1, [ip, r0]!
    3638:	mov	r0, #4
    363c:	str	r0, [ip, #12]
    3640:	ldr	r5, [r4, r7, lsl #3]!
    3644:	cmp	r5, #19
    3648:	bhi	388c <sf_finish_parse+0x67c>
    364c:	str	ip, [sp, #28]
    3650:	add	r6, r7, #1
    3654:	cmp	r7, #15
    3658:	ldr	r0, [pc, #4036]	; 4624 <sf_finish_parse+0x1414>
    365c:	add	r0, pc, r0
    3660:	str	r6, [r0]
    3664:	bge	53a8 <sf_finish_parse+0x2198>
    3668:	mov	r0, #1024	; 0x400
    366c:	lsl	r5, r0, r6
    3670:	mov	r0, r5
    3674:	bl	dec <malloc@plt>
    3678:	cmp	r0, #0
    367c:	str	r0, [r4, #12]
    3680:	beq	53a8 <sf_finish_parse+0x2198>
    3684:	mov	r1, #0
    3688:	mov	r2, r5
    368c:	add	r4, r4, #8
    3690:	bl	e58 <memset@plt>
    3694:	ldr	ip, [sp, #28]
    3698:	cmp	r5, #19
    369c:	str	r5, [r4]
    36a0:	bhi	3890 <sf_finish_parse+0x680>
    36a4:	b	53a8 <sf_finish_parse+0x2198>
    36a8:	mov	r6, r9
    36ac:	sub	r1, r5, #20
    36b0:	mov	r2, #100	; 0x64
    36b4:	str	r1, [r4]
    36b8:	ldr	r0, [r4, #4]
    36bc:	str	r2, [r0, r1]!
    36c0:	mov	r2, ip
    36c4:	mov	r1, r2
    36c8:	ldr	r2, [r2, #16]
    36cc:	cmp	r2, #0
    36d0:	bne	36c4 <sf_finish_parse+0x4b4>
    36d4:	str	r0, [r1, #16]
    36d8:	mov	r1, #8
    36dc:	mov	r4, r8
    36e0:	str	r1, [r0, #12]
    36e4:	ldr	r5, [r4, r6, lsl #3]!
    36e8:	cmp	r5, #19
    36ec:	bhi	3954 <sf_finish_parse+0x744>
    36f0:	ldr	r0, [pc, #4048]	; 46c8 <sf_finish_parse+0x14b8>
    36f4:	add	r7, r6, #1
    36f8:	cmp	r6, #15
    36fc:	add	r0, pc, r0
    3700:	str	r7, [r0]
    3704:	bge	53a8 <sf_finish_parse+0x2198>
    3708:	mov	r0, #1024	; 0x400
    370c:	lsl	r5, r0, r7
    3710:	mov	r0, r5
    3714:	bl	dec <malloc@plt>
    3718:	cmp	r0, #0
    371c:	str	r0, [r4, #12]
    3720:	beq	53a8 <sf_finish_parse+0x2198>
    3724:	mov	r1, #0
    3728:	mov	r2, r5
    372c:	add	r4, r4, #8
    3730:	bl	e58 <memset@plt>
    3734:	ldr	ip, [sp, #28]
    3738:	cmp	r5, #19
    373c:	str	r5, [r4]
    3740:	bhi	3958 <sf_finish_parse+0x748>
    3744:	b	53a8 <sf_finish_parse+0x2198>
    3748:	mov	r6, r9
    374c:	sub	r1, r5, #20
    3750:	mov	r2, #100	; 0x64
    3754:	str	r1, [r4]
    3758:	ldr	r0, [r4, #4]
    375c:	str	r2, [r0, r1]!
    3760:	mov	r2, ip
    3764:	mov	r1, r2
    3768:	ldr	r2, [r2, #16]
    376c:	cmp	r2, #0
    3770:	bne	3764 <sf_finish_parse+0x554>
    3774:	str	r0, [r1, #16]
    3778:	mov	r1, #8
    377c:	mov	r4, r8
    3780:	str	r1, [r0, #12]
    3784:	ldr	r5, [r4, r6, lsl #3]!
    3788:	cmp	r5, #19
    378c:	bhi	39ec <sf_finish_parse+0x7dc>
    3790:	ldr	r0, [pc, #4068]	; 477c <sf_finish_parse+0x156c>
    3794:	add	r7, r6, #1
    3798:	cmp	r6, #15
    379c:	add	r0, pc, r0
    37a0:	str	r7, [r0]
    37a4:	bge	53a8 <sf_finish_parse+0x2198>
    37a8:	mov	r0, #1024	; 0x400
    37ac:	lsl	r5, r0, r7
    37b0:	mov	r0, r5
    37b4:	bl	dec <malloc@plt>
    37b8:	cmp	r0, #0
    37bc:	str	r0, [r4, #12]
    37c0:	beq	53a8 <sf_finish_parse+0x2198>
    37c4:	mov	r1, #0
    37c8:	mov	r2, r5
    37cc:	add	r4, r4, #8
    37d0:	bl	e58 <memset@plt>
    37d4:	ldr	ip, [sp, #28]
    37d8:	cmp	r5, #19
    37dc:	str	r5, [r4]
    37e0:	bhi	39f0 <sf_finish_parse+0x7e0>
    37e4:	b	53a8 <sf_finish_parse+0x2198>
    37e8:	mov	r4, r6
    37ec:	sub	r1, r5, #20
    37f0:	mov	r2, #84	; 0x54
    37f4:	str	r1, [r7]
    37f8:	ldr	r0, [r7, #4]
    37fc:	str	r2, [r0, r1]!
    3800:	movw	r1, #61440	; 0xf000
    3804:	mov	r2, ip
    3808:	movt	r1, #65535	; 0xffff
    380c:	str	r1, [r0, #12]
    3810:	mov	r1, r2
    3814:	ldr	r2, [r2, #16]
    3818:	cmp	r2, #0
    381c:	bne	3810 <sf_finish_parse+0x600>
    3820:	str	r0, [r1, #16]
    3824:	mov	r6, r8
    3828:	ldr	r5, [r6, r4, lsl #3]!
    382c:	cmp	r5, #19
    3830:	bhi	3a84 <sf_finish_parse+0x874>
    3834:	ldr	r0, [pc, #4072]	; 4824 <sf_finish_parse+0x1614>
    3838:	add	r7, r4, #1
    383c:	cmp	r4, #15
    3840:	add	r0, pc, r0
    3844:	str	r7, [r0]
    3848:	bge	53a8 <sf_finish_parse+0x2198>
    384c:	mov	r0, #1024	; 0x400
    3850:	lsl	r5, r0, r7
    3854:	mov	r0, r5
    3858:	bl	dec <malloc@plt>
    385c:	cmp	r0, #0
    3860:	str	r0, [r6, #12]
    3864:	beq	53a8 <sf_finish_parse+0x2198>
    3868:	mov	r1, #0
    386c:	mov	r2, r5
    3870:	add	r6, r6, #8
    3874:	bl	e58 <memset@plt>
    3878:	ldr	ip, [sp, #28]
    387c:	cmp	r5, #19
    3880:	str	r5, [r6]
    3884:	bhi	3a88 <sf_finish_parse+0x878>
    3888:	b	53a8 <sf_finish_parse+0x2198>
    388c:	mov	r6, r7
    3890:	sub	r1, r5, #20
    3894:	mov	r2, #2
    3898:	str	r1, [r4]
    389c:	ldr	r0, [r4, #4]
    38a0:	str	r2, [r0, r1]!
    38a4:	mov	r2, ip
    38a8:	str	r9, [r0, #12]
    38ac:	mov	r1, r2
    38b0:	ldr	r2, [r2, #16]
    38b4:	cmp	r2, #0
    38b8:	bne	38ac <sf_finish_parse+0x69c>
    38bc:	str	r0, [r1, #16]
    38c0:	mov	r4, r8
    38c4:	ldr	r5, [r4, r6, lsl #3]!
    38c8:	cmp	r5, #19
    38cc:	bhi	3928 <sf_finish_parse+0x718>
    38d0:	ldr	r1, [pc, #4084]	; 48cc <sf_finish_parse+0x16bc>
    38d4:	add	r0, r6, #1
    38d8:	cmp	r6, #15
    38dc:	add	r1, pc, r1
    38e0:	str	r0, [r1]
    38e4:	bge	53a8 <sf_finish_parse+0x2198>
    38e8:	mov	r1, #1024	; 0x400
    38ec:	mov	r7, ip
    38f0:	lsl	r5, r1, r0
    38f4:	mov	r0, r5
    38f8:	bl	dec <malloc@plt>
    38fc:	cmp	r0, #0
    3900:	str	r0, [r4, #12]
    3904:	beq	53a8 <sf_finish_parse+0x2198>
    3908:	mov	r1, #0
    390c:	mov	r2, r5
    3910:	add	r4, r4, #8
    3914:	bl	e58 <memset@plt>
    3918:	cmp	r5, #19
    391c:	mov	ip, r7
    3920:	str	r5, [r4]
    3924:	bls	53a8 <sf_finish_parse+0x2198>
    3928:	sub	r1, r5, #20
    392c:	mov	r2, #7
    3930:	str	r1, [r4]
    3934:	ldr	r0, [r4, #4]
    3938:	str	r2, [r0, r1]!
    393c:	mov	r2, ip
    3940:	mov	r1, r2
    3944:	ldr	r2, [r2, #16]
    3948:	cmp	r2, #0
    394c:	bne	3940 <sf_finish_parse+0x730>
    3950:	b	4070 <sf_finish_parse+0xe60>
    3954:	mov	r7, r6
    3958:	sub	r1, r5, #20
    395c:	mov	r2, #7
    3960:	str	r1, [r4]
    3964:	ldr	r0, [r4, #4]
    3968:	str	r2, [r0, r1]!
    396c:	mov	r2, ip
    3970:	mov	r1, r2
    3974:	ldr	r2, [r2, #16]
    3978:	cmp	r2, #0
    397c:	bne	3970 <sf_finish_parse+0x760>
    3980:	str	r0, [r1, #16]
    3984:	mov	r4, r8
    3988:	ldr	r5, [r4, r7, lsl #3]!
    398c:	cmp	r5, #19
    3990:	bhi	3b2c <sf_finish_parse+0x91c>
    3994:	ldr	r0, [pc, #4052]	; 4970 <sf_finish_parse+0x1760>
    3998:	add	r6, r7, #1
    399c:	cmp	r7, #15
    39a0:	add	r0, pc, r0
    39a4:	str	r6, [r0]
    39a8:	bge	53a8 <sf_finish_parse+0x2198>
    39ac:	mov	r0, #1024	; 0x400
    39b0:	lsl	r5, r0, r6
    39b4:	mov	r0, r5
    39b8:	bl	dec <malloc@plt>
    39bc:	cmp	r0, #0
    39c0:	str	r0, [r4, #12]
    39c4:	beq	53a8 <sf_finish_parse+0x2198>
    39c8:	mov	r1, #0
    39cc:	mov	r2, r5
    39d0:	add	r4, r4, #8
    39d4:	bl	e58 <memset@plt>
    39d8:	ldr	ip, [sp, #28]
    39dc:	cmp	r5, #19
    39e0:	str	r5, [r4]
    39e4:	bhi	3b30 <sf_finish_parse+0x920>
    39e8:	b	53a8 <sf_finish_parse+0x2198>
    39ec:	mov	r7, r6
    39f0:	sub	r1, r5, #20
    39f4:	mov	r2, #7
    39f8:	str	r1, [r4]
    39fc:	ldr	r0, [r4, #4]
    3a00:	str	r2, [r0, r1]!
    3a04:	mov	r2, ip
    3a08:	mov	r1, r2
    3a0c:	ldr	r2, [r2, #16]
    3a10:	cmp	r2, #0
    3a14:	bne	3a08 <sf_finish_parse+0x7f8>
    3a18:	str	r0, [r1, #16]
    3a1c:	mov	r4, r8
    3a20:	ldr	r5, [r4, r7, lsl #3]!
    3a24:	cmp	r5, #19
    3a28:	bhi	3bcc <sf_finish_parse+0x9bc>
    3a2c:	ldr	r0, [pc, #4084]	; 4a28 <sf_finish_parse+0x1818>
    3a30:	add	r6, r7, #1
    3a34:	cmp	r7, #15
    3a38:	add	r0, pc, r0
    3a3c:	str	r6, [r0]
    3a40:	bge	53a8 <sf_finish_parse+0x2198>
    3a44:	mov	r0, #1024	; 0x400
    3a48:	lsl	r5, r0, r6
    3a4c:	mov	r0, r5
    3a50:	bl	dec <malloc@plt>
    3a54:	cmp	r0, #0
    3a58:	str	r0, [r4, #12]
    3a5c:	beq	53a8 <sf_finish_parse+0x2198>
    3a60:	mov	r1, #0
    3a64:	mov	r2, r5
    3a68:	add	r4, r4, #8
    3a6c:	bl	e58 <memset@plt>
    3a70:	ldr	ip, [sp, #28]
    3a74:	cmp	r5, #19
    3a78:	str	r5, [r4]
    3a7c:	bhi	3bd0 <sf_finish_parse+0x9c0>
    3a80:	b	53a8 <sf_finish_parse+0x2198>
    3a84:	mov	r7, r4
    3a88:	sub	r0, r5, #20
    3a8c:	mov	r1, #21
    3a90:	str	r0, [r6]
    3a94:	ldr	r6, [r6, #4]
    3a98:	str	r1, [r6, r0]!
    3a9c:	movw	r0, #4096	; 0x1000
    3aa0:	mov	r1, ip
    3aa4:	movt	r0, #32801	; 0x8021
    3aa8:	str	r0, [r6, #12]
    3aac:	mov	r0, r1
    3ab0:	ldr	r1, [r1, #16]
    3ab4:	cmp	r1, #0
    3ab8:	bne	3aac <sf_finish_parse+0x89c>
    3abc:	str	r6, [r0, #16]
    3ac0:	mov	r4, r8
    3ac4:	str	r9, [sp, #24]
    3ac8:	ldr	r5, [r4, r7, lsl #3]!
    3acc:	cmp	r5, #19
    3ad0:	bhi	3c6c <sf_finish_parse+0xa5c>
    3ad4:	ldr	r0, [pc, #4084]	; 4ad0 <sf_finish_parse+0x18c0>
    3ad8:	add	r9, r7, #1
    3adc:	cmp	r7, #15
    3ae0:	add	r0, pc, r0
    3ae4:	str	r9, [r0]
    3ae8:	bge	53a8 <sf_finish_parse+0x2198>
    3aec:	mov	r0, #1024	; 0x400
    3af0:	lsl	r5, r0, r9
    3af4:	mov	r0, r5
    3af8:	bl	dec <malloc@plt>
    3afc:	cmp	r0, #0
    3b00:	str	r0, [r4, #12]
    3b04:	beq	53a8 <sf_finish_parse+0x2198>
    3b08:	mov	r1, #0
    3b0c:	mov	r2, r5
    3b10:	add	r4, r4, #8
    3b14:	bl	e58 <memset@plt>
    3b18:	ldr	ip, [sp, #28]
    3b1c:	cmp	r5, #19
    3b20:	str	r5, [r4]
    3b24:	bhi	3c70 <sf_finish_parse+0xa60>
    3b28:	b	53a8 <sf_finish_parse+0x2198>
    3b2c:	mov	r6, r7
    3b30:	sub	r1, r5, #20
    3b34:	mov	r2, #48	; 0x30
    3b38:	str	r1, [r4]
    3b3c:	ldr	r0, [r4, #4]
    3b40:	str	r2, [r0, r1]!
    3b44:	mov	r2, ip
    3b48:	mov	r1, r2
    3b4c:	ldr	r2, [r2, #16]
    3b50:	cmp	r2, #0
    3b54:	bne	3b48 <sf_finish_parse+0x938>
    3b58:	str	r0, [r1, #16]
    3b5c:	mov	r1, #2
    3b60:	mov	r4, r8
    3b64:	str	r1, [r0, #12]
    3b68:	ldr	r5, [r4, r6, lsl #3]!
    3b6c:	cmp	r5, #19
    3b70:	bhi	3d14 <sf_finish_parse+0xb04>
    3b74:	ldr	r0, [pc, #3928]	; 4ad4 <sf_finish_parse+0x18c4>
    3b78:	add	r7, r6, #1
    3b7c:	cmp	r6, #15
    3b80:	add	r0, pc, r0
    3b84:	str	r7, [r0]
    3b88:	bge	53a8 <sf_finish_parse+0x2198>
    3b8c:	mov	r0, #1024	; 0x400
    3b90:	lsl	r5, r0, r7
    3b94:	mov	r0, r5
    3b98:	bl	dec <malloc@plt>
    3b9c:	cmp	r0, #0
    3ba0:	str	r0, [r4, #12]
    3ba4:	beq	53a8 <sf_finish_parse+0x2198>
    3ba8:	mov	r1, #0
    3bac:	mov	r2, r5
    3bb0:	add	r4, r4, #8
    3bb4:	bl	e58 <memset@plt>
    3bb8:	ldr	ip, [sp, #28]
    3bbc:	cmp	r5, #19
    3bc0:	str	r5, [r4]
    3bc4:	bhi	3d18 <sf_finish_parse+0xb08>
    3bc8:	b	53a8 <sf_finish_parse+0x2198>
    3bcc:	mov	r6, r7
    3bd0:	sub	r1, r5, #20
    3bd4:	mov	r2, #48	; 0x30
    3bd8:	str	r1, [r4]
    3bdc:	ldr	r0, [r4, #4]
    3be0:	str	r2, [r0, r1]!
    3be4:	mov	r2, ip
    3be8:	mov	r1, r2
    3bec:	ldr	r2, [r2, #16]
    3bf0:	cmp	r2, #0
    3bf4:	bne	3be8 <sf_finish_parse+0x9d8>
    3bf8:	str	r0, [r1, #16]
    3bfc:	mov	r1, #2
    3c00:	mov	r4, r8
    3c04:	str	r1, [r0, #12]
    3c08:	ldr	r5, [r4, r6, lsl #3]!
    3c0c:	cmp	r5, #19
    3c10:	bhi	3dac <sf_finish_parse+0xb9c>
    3c14:	ldr	r0, [pc, #3940]	; 4b80 <sf_finish_parse+0x1970>
    3c18:	add	r7, r6, #1
    3c1c:	cmp	r6, #15
    3c20:	add	r0, pc, r0
    3c24:	str	r7, [r0]
    3c28:	bge	53a8 <sf_finish_parse+0x2198>
    3c2c:	mov	r0, #1024	; 0x400
    3c30:	lsl	r5, r0, r7
    3c34:	mov	r0, r5
    3c38:	bl	dec <malloc@plt>
    3c3c:	cmp	r0, #0
    3c40:	str	r0, [r4, #12]
    3c44:	beq	53a8 <sf_finish_parse+0x2198>
    3c48:	mov	r1, #0
    3c4c:	mov	r2, r5
    3c50:	add	r4, r4, #8
    3c54:	bl	e58 <memset@plt>
    3c58:	ldr	ip, [sp, #28]
    3c5c:	cmp	r5, #19
    3c60:	str	r5, [r4]
    3c64:	bhi	3db0 <sf_finish_parse+0xba0>
    3c68:	b	53a8 <sf_finish_parse+0x2198>
    3c6c:	mov	r9, r7
    3c70:	sub	r1, r5, #20
    3c74:	mov	r2, #32
    3c78:	str	r1, [r4]
    3c7c:	ldr	r0, [r4, #4]
    3c80:	str	r2, [r0, r1]!
    3c84:	mov	r1, #4
    3c88:	mov	r2, ip
    3c8c:	str	r1, [r0, #12]
    3c90:	mov	r1, r2
    3c94:	ldr	r2, [r2, #16]
    3c98:	cmp	r2, #0
    3c9c:	bne	3c90 <sf_finish_parse+0xa80>
    3ca0:	str	r0, [r1, #16]
    3ca4:	str	r6, [sp, #12]
    3ca8:	str	r0, [r6, #4]
    3cac:	mov	r6, r8
    3cb0:	ldr	r5, [r6, r9, lsl #3]!
    3cb4:	cmp	r5, #19
    3cb8:	bhi	3e44 <sf_finish_parse+0xc34>
    3cbc:	ldr	r0, [pc, #3940]	; 4c28 <sf_finish_parse+0x1a18>
    3cc0:	add	r4, r9, #1
    3cc4:	cmp	r9, #15
    3cc8:	add	r0, pc, r0
    3ccc:	str	r4, [r0]
    3cd0:	bge	53a8 <sf_finish_parse+0x2198>
    3cd4:	mov	r0, #1024	; 0x400
    3cd8:	lsl	r5, r0, r4
    3cdc:	mov	r0, r5
    3ce0:	bl	dec <malloc@plt>
    3ce4:	cmp	r0, #0
    3ce8:	str	r0, [r6, #12]
    3cec:	beq	53a8 <sf_finish_parse+0x2198>
    3cf0:	mov	r1, #0
    3cf4:	mov	r2, r5
    3cf8:	add	r6, r6, #8
    3cfc:	bl	e58 <memset@plt>
    3d00:	ldr	ip, [sp, #28]
    3d04:	cmp	r5, #19
    3d08:	str	r5, [r6]
    3d0c:	bhi	3e48 <sf_finish_parse+0xc38>
    3d10:	b	53a8 <sf_finish_parse+0x2198>
    3d14:	mov	r7, r6
    3d18:	sub	r1, r5, #20
    3d1c:	mov	r2, #76	; 0x4c
    3d20:	str	r1, [r4]
    3d24:	ldr	r0, [r4, #4]
    3d28:	str	r2, [r0, r1]!
    3d2c:	mov	r2, ip
    3d30:	mov	r1, r2
    3d34:	ldr	r2, [r2, #16]
    3d38:	cmp	r2, #0
    3d3c:	bne	3d30 <sf_finish_parse+0xb20>
    3d40:	str	r0, [r1, #16]
    3d44:	mov	r4, r8
    3d48:	ldr	r5, [r4, r7, lsl #3]!
    3d4c:	cmp	r5, #19
    3d50:	bhi	3ee4 <sf_finish_parse+0xcd4>
    3d54:	ldr	r0, [pc, #3956]	; 4cd0 <sf_finish_parse+0x1ac0>
    3d58:	add	r6, r7, #1
    3d5c:	cmp	r7, #15
    3d60:	add	r0, pc, r0
    3d64:	str	r6, [r0]
    3d68:	bge	53a8 <sf_finish_parse+0x2198>
    3d6c:	mov	r0, #1024	; 0x400
    3d70:	lsl	r5, r0, r6
    3d74:	mov	r0, r5
    3d78:	bl	dec <malloc@plt>
    3d7c:	cmp	r0, #0
    3d80:	str	r0, [r4, #12]
    3d84:	beq	53a8 <sf_finish_parse+0x2198>
    3d88:	mov	r1, #0
    3d8c:	mov	r2, r5
    3d90:	add	r4, r4, #8
    3d94:	bl	e58 <memset@plt>
    3d98:	ldr	ip, [sp, #28]
    3d9c:	cmp	r5, #19
    3da0:	str	r5, [r4]
    3da4:	bhi	3ee8 <sf_finish_parse+0xcd8>
    3da8:	b	53a8 <sf_finish_parse+0x2198>
    3dac:	mov	r7, r6
    3db0:	sub	r1, r5, #20
    3db4:	mov	r2, #76	; 0x4c
    3db8:	str	r1, [r4]
    3dbc:	ldr	r0, [r4, #4]
    3dc0:	str	r2, [r0, r1]!
    3dc4:	mov	r2, ip
    3dc8:	mov	r1, r2
    3dcc:	ldr	r2, [r2, #16]
    3dd0:	cmp	r2, #0
    3dd4:	bne	3dc8 <sf_finish_parse+0xbb8>
    3dd8:	str	r0, [r1, #16]
    3ddc:	mov	r4, r8
    3de0:	ldr	r5, [r4, r7, lsl #3]!
    3de4:	cmp	r5, #19
    3de8:	bhi	3fac <sf_finish_parse+0xd9c>
    3dec:	ldr	r0, [pc, #3972]	; 4d78 <sf_finish_parse+0x1b68>
    3df0:	add	r6, r7, #1
    3df4:	cmp	r7, #15
    3df8:	add	r0, pc, r0
    3dfc:	str	r6, [r0]
    3e00:	bge	53a8 <sf_finish_parse+0x2198>
    3e04:	mov	r0, #1024	; 0x400
    3e08:	lsl	r5, r0, r6
    3e0c:	mov	r0, r5
    3e10:	bl	dec <malloc@plt>
    3e14:	cmp	r0, #0
    3e18:	str	r0, [r4, #12]
    3e1c:	beq	53a8 <sf_finish_parse+0x2198>
    3e20:	mov	r1, #0
    3e24:	mov	r2, r5
    3e28:	add	r4, r4, #8
    3e2c:	bl	e58 <memset@plt>
    3e30:	ldr	ip, [sp, #28]
    3e34:	cmp	r5, #19
    3e38:	str	r5, [r4]
    3e3c:	bhi	3fb0 <sf_finish_parse+0xda0>
    3e40:	b	53a8 <sf_finish_parse+0x2198>
    3e44:	mov	r4, r9
    3e48:	sub	r0, r5, #20
    3e4c:	mov	r1, #5
    3e50:	str	r0, [r6]
    3e54:	ldr	r9, [r6, #4]
    3e58:	str	r1, [r9, r0]!
    3e5c:	mov	r0, #1
    3e60:	mov	r1, ip
    3e64:	str	r0, [r9, #12]
    3e68:	mov	r0, r1
    3e6c:	ldr	r1, [r1, #16]
    3e70:	cmp	r1, #0
    3e74:	bne	3e68 <sf_finish_parse+0xc58>
    3e78:	str	r9, [r0, #16]
    3e7c:	mov	r6, r8
    3e80:	ldr	r5, [r6, r4, lsl #3]!
    3e84:	cmp	r5, #19
    3e88:	bhi	407c <sf_finish_parse+0xe6c>
    3e8c:	ldr	r0, [pc, #3980]	; 4e20 <sf_finish_parse+0x1c10>
    3e90:	add	r7, r4, #1
    3e94:	cmp	r4, #15
    3e98:	add	r0, pc, r0
    3e9c:	str	r7, [r0]
    3ea0:	bge	53a8 <sf_finish_parse+0x2198>
    3ea4:	mov	r0, #1024	; 0x400
    3ea8:	lsl	r5, r0, r7
    3eac:	mov	r0, r5
    3eb0:	bl	dec <malloc@plt>
    3eb4:	cmp	r0, #0
    3eb8:	str	r0, [r6, #12]
    3ebc:	beq	53a8 <sf_finish_parse+0x2198>
    3ec0:	mov	r1, #0
    3ec4:	mov	r2, r5
    3ec8:	add	r6, r6, #8
    3ecc:	bl	e58 <memset@plt>
    3ed0:	ldr	ip, [sp, #28]
    3ed4:	cmp	r5, #19
    3ed8:	str	r5, [r6]
    3edc:	bhi	4080 <sf_finish_parse+0xe70>
    3ee0:	b	53a8 <sf_finish_parse+0x2198>
    3ee4:	mov	r6, r7
    3ee8:	sub	r1, r5, #20
    3eec:	mov	r2, #2
    3ef0:	str	r1, [r4]
    3ef4:	ldr	r0, [r4, #4]
    3ef8:	str	r2, [r0, r1]!
    3efc:	mov	r2, ip
    3f00:	ldr	r1, [sp, #24]
    3f04:	str	r1, [r0, #12]
    3f08:	mov	r1, r2
    3f0c:	ldr	r2, [r2, #16]
    3f10:	cmp	r2, #0
    3f14:	bne	3f08 <sf_finish_parse+0xcf8>
    3f18:	str	r0, [r1, #16]
    3f1c:	mov	r4, r8
    3f20:	ldr	r5, [r4, r6, lsl #3]!
    3f24:	cmp	r5, #19
    3f28:	bhi	3f80 <sf_finish_parse+0xd70>
    3f2c:	ldr	r1, [pc, #3988]	; 4ec8 <sf_finish_parse+0x1cb8>
    3f30:	add	r0, r6, #1
    3f34:	cmp	r6, #15
    3f38:	add	r1, pc, r1
    3f3c:	str	r0, [r1]
    3f40:	bge	53a8 <sf_finish_parse+0x2198>
    3f44:	mov	r1, #1024	; 0x400
    3f48:	lsl	r5, r1, r0
    3f4c:	mov	r0, r5
    3f50:	bl	dec <malloc@plt>
    3f54:	cmp	r0, #0
    3f58:	str	r0, [r4, #12]
    3f5c:	beq	53a8 <sf_finish_parse+0x2198>
    3f60:	mov	r1, #0
    3f64:	mov	r2, r5
    3f68:	add	r4, r4, #8
    3f6c:	bl	e58 <memset@plt>
    3f70:	ldr	ip, [sp, #28]
    3f74:	cmp	r5, #19
    3f78:	str	r5, [r4]
    3f7c:	bls	53a8 <sf_finish_parse+0x2198>
    3f80:	sub	r1, r5, #20
    3f84:	mov	r2, #7
    3f88:	str	r1, [r4]
    3f8c:	ldr	r0, [r4, #4]
    3f90:	str	r2, [r0, r1]!
    3f94:	mov	r2, ip
    3f98:	mov	r1, r2
    3f9c:	ldr	r2, [r2, #16]
    3fa0:	cmp	r2, #0
    3fa4:	bne	3f98 <sf_finish_parse+0xd88>
    3fa8:	b	4070 <sf_finish_parse+0xe60>
    3fac:	mov	r6, r7
    3fb0:	sub	r1, r5, #20
    3fb4:	mov	r2, #2
    3fb8:	str	r1, [r4]
    3fbc:	ldr	r0, [r4, #4]
    3fc0:	str	r2, [r0, r1]!
    3fc4:	mov	r2, ip
    3fc8:	ldr	r1, [sp, #24]
    3fcc:	str	r1, [r0, #12]
    3fd0:	mov	r1, r2
    3fd4:	ldr	r2, [r2, #16]
    3fd8:	cmp	r2, #0
    3fdc:	bne	3fd0 <sf_finish_parse+0xdc0>
    3fe0:	str	r0, [r1, #16]
    3fe4:	mov	r4, r8
    3fe8:	ldr	r5, [r4, r6, lsl #3]!
    3fec:	cmp	r5, #19
    3ff0:	bhi	4048 <sf_finish_parse+0xe38>
    3ff4:	ldr	r1, [pc, #3952]	; 4f6c <sf_finish_parse+0x1d5c>
    3ff8:	add	r0, r6, #1
    3ffc:	cmp	r6, #15
    4000:	add	r1, pc, r1
    4004:	str	r0, [r1]
    4008:	bge	53a8 <sf_finish_parse+0x2198>
    400c:	mov	r1, #1024	; 0x400
    4010:	lsl	r5, r1, r0
    4014:	mov	r0, r5
    4018:	bl	dec <malloc@plt>
    401c:	cmp	r0, #0
    4020:	str	r0, [r4, #12]
    4024:	beq	53a8 <sf_finish_parse+0x2198>
    4028:	mov	r1, #0
    402c:	mov	r2, r5
    4030:	add	r4, r4, #8
    4034:	bl	e58 <memset@plt>
    4038:	ldr	ip, [sp, #28]
    403c:	cmp	r5, #19
    4040:	str	r5, [r4]
    4044:	bls	53a8 <sf_finish_parse+0x2198>
    4048:	sub	r1, r5, #20
    404c:	mov	r2, #7
    4050:	str	r1, [r4]
    4054:	ldr	r0, [r4, #4]
    4058:	str	r2, [r0, r1]!
    405c:	mov	r2, ip
    4060:	mov	r1, r2
    4064:	ldr	r2, [r2, #16]
    4068:	cmp	r2, #0
    406c:	bne	4060 <sf_finish_parse+0xe50>
    4070:	ldr	r3, [sp, #20]
    4074:	ldr	r4, [sp, #16]
    4078:	b	420c <sf_finish_parse+0xffc>
    407c:	mov	r7, r4
    4080:	sub	r1, r5, #20
    4084:	mov	r2, #0
    4088:	str	r1, [r6]
    408c:	ldr	r0, [r6, #4]
    4090:	str	r2, [r0, r1]!
    4094:	mov	r1, #144	; 0x90
    4098:	mov	r2, ip
    409c:	str	r1, [r0, #12]
    40a0:	mov	r1, r2
    40a4:	ldr	r2, [r2, #16]
    40a8:	cmp	r2, #0
    40ac:	bne	40a0 <sf_finish_parse+0xe90>
    40b0:	str	r0, [r1, #16]
    40b4:	ldr	r1, [sp, #12]
    40b8:	mov	r6, r8
    40bc:	str	r0, [r1, #8]
    40c0:	ldr	r5, [r6, r7, lsl #3]!
    40c4:	cmp	r5, #19
    40c8:	bhi	4124 <sf_finish_parse+0xf14>
    40cc:	ldr	r0, [pc, #3900]	; 5010 <sf_finish_parse+0x1e00>
    40d0:	add	r4, r7, #1
    40d4:	cmp	r7, #15
    40d8:	add	r0, pc, r0
    40dc:	str	r4, [r0]
    40e0:	bge	53a8 <sf_finish_parse+0x2198>
    40e4:	mov	r0, #1024	; 0x400
    40e8:	lsl	r5, r0, r4
    40ec:	mov	r0, r5
    40f0:	bl	dec <malloc@plt>
    40f4:	cmp	r0, #0
    40f8:	str	r0, [r6, #12]
    40fc:	beq	53a8 <sf_finish_parse+0x2198>
    4100:	mov	r1, #0
    4104:	mov	r2, r5
    4108:	add	r6, r6, #8
    410c:	bl	e58 <memset@plt>
    4110:	ldr	ip, [sp, #28]
    4114:	cmp	r5, #19
    4118:	str	r5, [r6]
    411c:	bhi	4128 <sf_finish_parse+0xf18>
    4120:	b	53a8 <sf_finish_parse+0x2198>
    4124:	mov	r4, r7
    4128:	sub	r1, r5, #20
    412c:	mov	r2, #2
    4130:	str	r1, [r6]
    4134:	ldr	r0, [r6, #4]
    4138:	str	r2, [r0, r1]!
    413c:	mov	r2, ip
    4140:	ldr	r1, [sp, #24]
    4144:	str	r1, [r0, #12]
    4148:	mov	r1, r2
    414c:	ldr	r2, [r2, #16]
    4150:	cmp	r2, #0
    4154:	bne	4148 <sf_finish_parse+0xf38>
    4158:	str	r0, [r1, #16]
    415c:	str	r0, [r9, #8]
    4160:	mov	r6, r8
    4164:	ldr	r5, [r6, r4, lsl #3]!
    4168:	cmp	r5, #19
    416c:	bhi	41dc <sf_finish_parse+0xfcc>
    4170:	ldr	r1, [pc, #3740]	; 5014 <sf_finish_parse+0x1e04>
    4174:	add	r0, r4, #1
    4178:	cmp	r4, #15
    417c:	add	r1, pc, r1
    4180:	str	r0, [r1]
    4184:	bge	53a8 <sf_finish_parse+0x2198>
    4188:	mov	r1, #1024	; 0x400
    418c:	lsl	r5, r1, r0
    4190:	mov	r0, r5
    4194:	bl	dec <malloc@plt>
    4198:	ldr	r4, [sp, #16]
    419c:	cmp	r0, #0
    41a0:	str	r0, [r6, #12]
    41a4:	beq	53a8 <sf_finish_parse+0x2198>
    41a8:	mov	r1, #0
    41ac:	mov	r2, r5
    41b0:	add	r6, r6, #8
    41b4:	bl	e58 <memset@plt>
    41b8:	ldr	ip, [sp, #28]
    41bc:	cmp	r5, #19
    41c0:	str	r5, [r6]
    41c4:	bhi	41e0 <sf_finish_parse+0xfd0>
    41c8:	b	53a8 <sf_finish_parse+0x2198>
    41cc:	.word	0x00044204
    41d0:	.word	0x00044240
    41d4:	.word	0x000442a8
    41d8:	.word	0x0004428c
    41dc:	ldr	r4, [sp, #16]
    41e0:	sub	r1, r5, #20
    41e4:	mov	r2, #7
    41e8:	str	r1, [r6]
    41ec:	ldr	r0, [r6, #4]
    41f0:	str	r2, [r0, r1]!
    41f4:	mov	r2, ip
    41f8:	mov	r1, r2
    41fc:	ldr	r2, [r2, #16]
    4200:	cmp	r2, #0
    4204:	bne	41f8 <sf_finish_parse+0xfe8>
    4208:	ldr	r3, [sp, #20]
    420c:	str	r0, [r1, #16]
    4210:	sub	r0, r3, #105	; 0x69
    4214:	cmp	r0, #22
    4218:	bhi	4230 <sf_finish_parse+0x1020>
    421c:	movw	r2, #16385	; 0x4001
    4220:	mov	r1, #1
    4224:	movt	r2, #64	; 0x40
    4228:	tst	r2, r1, lsl r0
    422c:	bne	4240 <sf_finish_parse+0x1030>
    4230:	cmp	r3, #192	; 0xc0
    4234:	beq	4240 <sf_finish_parse+0x1030>
    4238:	cmp	r3, #163	; 0xa3
    423c:	bne	510c <sf_finish_parse+0x1efc>
    4240:	ldr	r0, [pc, #4076]	; 5234 <sf_finish_parse+0x2024>
    4244:	ldr	r0, [pc, r0]
    4248:	cmn	r0, #1
    424c:	str	r0, [sp, #24]
    4250:	beq	510c <sf_finish_parse+0x1efc>
    4254:	ldr	r0, [r4, #4]
    4258:	mov	r1, #1
    425c:	cmp	ip, #0
    4260:	str	r0, [sp, #12]
    4264:	ldr	r0, [pc, #4044]	; 5238 <sf_finish_parse+0x2028>
    4268:	add	r0, pc, r0
    426c:	str	r1, [r0]
    4270:	ldr	r0, [pc, #4036]	; 523c <sf_finish_parse+0x202c>
    4274:	ldr	r0, [pc, r0]
    4278:	beq	4288 <sf_finish_parse+0x1078>
    427c:	mov	r4, r0
    4280:	b	4320 <sf_finish_parse+0x1110>
    4284:	.word	0x0004426c
    4288:	mov	r6, r8
    428c:	ldr	r5, [r6, r0, lsl #3]!
    4290:	cmp	r5, #19
    4294:	bhi	4300 <sf_finish_parse+0x10f0>
    4298:	ldr	r1, [pc, #4000]	; 5240 <sf_finish_parse+0x2030>
    429c:	add	r4, r0, #1
    42a0:	cmp	r0, #15
    42a4:	add	r1, pc, r1
    42a8:	str	r4, [r1]
    42ac:	bge	53a8 <sf_finish_parse+0x2198>
    42b0:	mov	r0, #1024	; 0x400
    42b4:	lsl	r5, r0, r4
    42b8:	mov	r0, r5
    42bc:	bl	dec <malloc@plt>
    42c0:	cmp	r0, #0
    42c4:	str	r0, [r6, #12]
    42c8:	beq	53a8 <sf_finish_parse+0x2198>
    42cc:	mov	r1, #0
    42d0:	mov	r2, r5
    42d4:	add	r6, r6, #8
    42d8:	bl	e58 <memset@plt>
    42dc:	cmp	r5, #19
    42e0:	str	r5, [r6]
    42e4:	bhi	4304 <sf_finish_parse+0x10f4>
    42e8:	b	53a8 <sf_finish_parse+0x2198>
    42ec:	.word	0x00044218
    42f0:	.word	0x000441fc
    42f4:	.word	0x000441dc
    42f8:	.word	0x00044634
    42fc:	.word	0x00044188
    4300:	mov	r4, r0
    4304:	sub	r0, r5, #20
    4308:	mov	r1, #1
    430c:	str	r0, [r6]
    4310:	ldr	ip, [r6, #4]
    4314:	str	r1, [ip, r0]!
    4318:	mov	r0, #0
    431c:	str	r0, [ip, #12]
    4320:	mov	r7, r8
    4324:	str	ip, [sp, #28]
    4328:	ldr	r5, [r7, r4, lsl #3]!
    432c:	cmp	r5, #19
    4330:	bhi	43a0 <sf_finish_parse+0x1190>
    4334:	ldr	r0, [pc, #4064]	; 531c <sf_finish_parse+0x210c>
    4338:	add	r6, r4, #1
    433c:	cmp	r4, #15
    4340:	add	r0, pc, r0
    4344:	str	r6, [r0]
    4348:	bge	53a8 <sf_finish_parse+0x2198>
    434c:	mov	r0, #1024	; 0x400
    4350:	lsl	r5, r0, r6
    4354:	mov	r0, r5
    4358:	bl	dec <malloc@plt>
    435c:	cmp	r0, #0
    4360:	str	r0, [r7, #12]
    4364:	beq	53a8 <sf_finish_parse+0x2198>
    4368:	mov	r1, #0
    436c:	mov	r2, r5
    4370:	add	r7, r7, #8
    4374:	bl	e58 <memset@plt>
    4378:	ldr	ip, [sp, #28]
    437c:	cmp	r5, #19
    4380:	str	r5, [r7]
    4384:	bhi	43a4 <sf_finish_parse+0x1194>
    4388:	b	53a8 <sf_finish_parse+0x2198>
    438c:	.word	0x0004416c
    4390:	.word	0x00044150
    4394:	.word	0x0004410c
    4398:	.word	0x000440f0
    439c:	.word	0x000440d4
    43a0:	mov	r6, r4
    43a4:	sub	r1, r5, #20
    43a8:	mov	r2, #135	; 0x87
    43ac:	str	r1, [r7]
    43b0:	ldr	r0, [r7, #4]
    43b4:	str	r2, [r0, r1]!
    43b8:	mov	r2, ip
    43bc:	mov	r1, r2
    43c0:	ldr	r2, [r2, #16]
    43c4:	cmp	r2, #0
    43c8:	bne	43bc <sf_finish_parse+0x11ac>
    43cc:	str	r0, [r1, #16]
    43d0:	mov	r7, r8
    43d4:	ldr	r5, [r7, r6, lsl #3]!
    43d8:	cmp	r5, #19
    43dc:	bhi	443c <sf_finish_parse+0x122c>
    43e0:	ldr	r0, [pc, #4044]	; 53b4 <sf_finish_parse+0x21a4>
    43e4:	add	r4, r6, #1
    43e8:	cmp	r6, #15
    43ec:	add	r0, pc, r0
    43f0:	str	r4, [r0]
    43f4:	bge	53a8 <sf_finish_parse+0x2198>
    43f8:	mov	r0, #1024	; 0x400
    43fc:	lsl	r5, r0, r4
    4400:	mov	r0, r5
    4404:	bl	dec <malloc@plt>
    4408:	cmp	r0, #0
    440c:	str	r0, [r7, #12]
    4410:	beq	53a8 <sf_finish_parse+0x2198>
    4414:	mov	r1, #0
    4418:	mov	r2, r5
    441c:	add	r7, r7, #8
    4420:	bl	e58 <memset@plt>
    4424:	ldr	ip, [sp, #28]
    4428:	cmp	r5, #19
    442c:	str	r5, [r7]
    4430:	bhi	4440 <sf_finish_parse+0x1230>
    4434:	b	53a8 <sf_finish_parse+0x2198>
    4438:	.word	0x00044044
    443c:	mov	r4, r6
    4440:	sub	r1, r5, #20
    4444:	mov	r2, #4
    4448:	str	r1, [r7]
    444c:	ldr	r0, [r7, #4]
    4450:	str	r2, [r0, r1]!
    4454:	mov	r1, #24
    4458:	mov	r2, ip
    445c:	str	r1, [r0, #12]
    4460:	mov	r1, r2
    4464:	ldr	r2, [r2, #16]
    4468:	cmp	r2, #0
    446c:	bne	4460 <sf_finish_parse+0x1250>
    4470:	str	r0, [r1, #16]
    4474:	mov	r7, r8
    4478:	ldr	r5, [r7, r4, lsl #3]!
    447c:	cmp	r5, #19
    4480:	bhi	44e0 <sf_finish_parse+0x12d0>
    4484:	ldr	r0, [pc, #3884]	; 53b8 <sf_finish_parse+0x21a8>
    4488:	add	r6, r4, #1
    448c:	cmp	r4, #15
    4490:	add	r0, pc, r0
    4494:	str	r6, [r0]
    4498:	bge	53a8 <sf_finish_parse+0x2198>
    449c:	mov	r0, #1024	; 0x400
    44a0:	lsl	r5, r0, r6
    44a4:	mov	r0, r5
    44a8:	bl	dec <malloc@plt>
    44ac:	cmp	r0, #0
    44b0:	str	r0, [r7, #12]
    44b4:	beq	53a8 <sf_finish_parse+0x2198>
    44b8:	mov	r1, #0
    44bc:	mov	r2, r5
    44c0:	add	r7, r7, #8
    44c4:	bl	e58 <memset@plt>
    44c8:	ldr	ip, [sp, #28]
    44cc:	cmp	r5, #19
    44d0:	str	r5, [r7]
    44d4:	bhi	44e4 <sf_finish_parse+0x12d4>
    44d8:	b	53a8 <sf_finish_parse+0x2198>
    44dc:	.word	0x00043fb8
    44e0:	mov	r6, r4
    44e4:	sub	r1, r5, #20
    44e8:	mov	r2, #2
    44ec:	str	r1, [r7]
    44f0:	ldr	r0, [r7, #4]
    44f4:	str	r2, [r0, r1]!
    44f8:	mov	r2, ip
    44fc:	ldr	r1, [sp, #24]
    4500:	str	r1, [r0, #12]
    4504:	mov	r1, r2
    4508:	ldr	r2, [r2, #16]
    450c:	cmp	r2, #0
    4510:	bne	4504 <sf_finish_parse+0x12f4>
    4514:	str	r0, [r1, #16]
    4518:	mov	r7, r8
    451c:	ldr	r5, [r7, r6, lsl #3]!
    4520:	cmp	r5, #19
    4524:	bhi	4584 <sf_finish_parse+0x1374>
    4528:	ldr	r0, [pc, #4036]	; 54f4 <sf_finish_parse+0x22e4>
    452c:	add	r4, r6, #1
    4530:	cmp	r6, #15
    4534:	add	r0, pc, r0
    4538:	str	r4, [r0]
    453c:	bge	53a8 <sf_finish_parse+0x2198>
    4540:	mov	r0, #1024	; 0x400
    4544:	lsl	r5, r0, r4
    4548:	mov	r0, r5
    454c:	bl	dec <malloc@plt>
    4550:	cmp	r0, #0
    4554:	str	r0, [r7, #12]
    4558:	beq	53a8 <sf_finish_parse+0x2198>
    455c:	mov	r1, #0
    4560:	mov	r2, r5
    4564:	add	r7, r7, #8
    4568:	bl	e58 <memset@plt>
    456c:	ldr	ip, [sp, #28]
    4570:	cmp	r5, #19
    4574:	str	r5, [r7]
    4578:	bhi	4588 <sf_finish_parse+0x1378>
    457c:	b	53a8 <sf_finish_parse+0x2198>
    4580:	.word	0x00043f2c
    4584:	mov	r4, r6
    4588:	sub	r1, r5, #20
    458c:	mov	r2, #80	; 0x50
    4590:	str	r1, [r7]
    4594:	ldr	r0, [r7, #4]
    4598:	str	r2, [r0, r1]!
    459c:	mov	r1, #0
    45a0:	mov	r2, ip
    45a4:	str	r1, [r0, #12]
    45a8:	mov	r1, r2
    45ac:	ldr	r2, [r2, #16]
    45b0:	cmp	r2, #0
    45b4:	bne	45a8 <sf_finish_parse+0x1398>
    45b8:	str	r0, [r1, #16]
    45bc:	mov	r7, r8
    45c0:	ldr	r5, [r7, r4, lsl #3]!
    45c4:	cmp	r5, #19
    45c8:	bhi	4628 <sf_finish_parse+0x1418>
    45cc:	ldr	r0, [pc, #3876]	; 54f8 <sf_finish_parse+0x22e8>
    45d0:	add	r6, r4, #1
    45d4:	cmp	r4, #15
    45d8:	add	r0, pc, r0
    45dc:	str	r6, [r0]
    45e0:	bge	53a8 <sf_finish_parse+0x2198>
    45e4:	mov	r0, #1024	; 0x400
    45e8:	lsl	r5, r0, r6
    45ec:	mov	r0, r5
    45f0:	bl	dec <malloc@plt>
    45f4:	cmp	r0, #0
    45f8:	str	r0, [r7, #12]
    45fc:	beq	53a8 <sf_finish_parse+0x2198>
    4600:	mov	r1, #0
    4604:	mov	r2, r5
    4608:	add	r7, r7, #8
    460c:	bl	e58 <memset@plt>
    4610:	ldr	ip, [sp, #28]
    4614:	cmp	r5, #19
    4618:	str	r5, [r7]
    461c:	bhi	462c <sf_finish_parse+0x141c>
    4620:	b	53a8 <sf_finish_parse+0x2198>
    4624:	.word	0x00043ea0
    4628:	mov	r6, r4
    462c:	sub	r0, r5, #20
    4630:	mov	r1, #69	; 0x45
    4634:	str	r0, [r7]
    4638:	ldr	r4, [r7, #4]
    463c:	str	r1, [r4, r0]!
    4640:	mov	r0, #8
    4644:	mov	r1, ip
    4648:	str	r0, [r4, #12]
    464c:	mov	r0, r1
    4650:	ldr	r1, [r1, #16]
    4654:	cmp	r1, #0
    4658:	bne	464c <sf_finish_parse+0x143c>
    465c:	str	r4, [r0, #16]
    4660:	mov	r7, r8
    4664:	ldr	r5, [r7, r6, lsl #3]!
    4668:	cmp	r5, #19
    466c:	bhi	46cc <sf_finish_parse+0x14bc>
    4670:	ldr	r0, [pc, #3716]	; 54fc <sf_finish_parse+0x22ec>
    4674:	add	r9, r6, #1
    4678:	cmp	r6, #15
    467c:	add	r0, pc, r0
    4680:	str	r9, [r0]
    4684:	bge	53a8 <sf_finish_parse+0x2198>
    4688:	mov	r0, #1024	; 0x400
    468c:	lsl	r5, r0, r9
    4690:	mov	r0, r5
    4694:	bl	dec <malloc@plt>
    4698:	cmp	r0, #0
    469c:	str	r0, [r7, #12]
    46a0:	beq	53a8 <sf_finish_parse+0x2198>
    46a4:	mov	r1, #0
    46a8:	mov	r2, r5
    46ac:	add	r7, r7, #8
    46b0:	bl	e58 <memset@plt>
    46b4:	ldr	ip, [sp, #28]
    46b8:	cmp	r5, #19
    46bc:	str	r5, [r7]
    46c0:	bhi	46d0 <sf_finish_parse+0x14c0>
    46c4:	b	53a8 <sf_finish_parse+0x2198>
    46c8:	.word	0x00043e00
    46cc:	mov	r9, r6
    46d0:	sub	r0, r5, #20
    46d4:	mov	r1, #69	; 0x45
    46d8:	str	r0, [r7]
    46dc:	ldr	r6, [r7, #4]
    46e0:	str	r1, [r6, r0]!
    46e4:	mov	r1, ip
    46e8:	mov	r0, #4
    46ec:	str	r6, [r4, #4]
    46f0:	str	r0, [r6, #12]
    46f4:	mov	r0, r1
    46f8:	ldr	r1, [r1, #16]
    46fc:	cmp	r1, #0
    4700:	bne	46f4 <sf_finish_parse+0x14e4>
    4704:	str	r6, [r0, #16]
    4708:	ldr	r0, [sp, #12]
    470c:	str	r0, [r4, #8]
    4710:	str	r0, [r6, #4]
    4714:	mov	r4, r8
    4718:	ldr	r5, [r4, r9, lsl #3]!
    471c:	cmp	r5, #19
    4720:	bhi	4780 <sf_finish_parse+0x1570>
    4724:	ldr	r0, [pc, #3540]	; 5500 <sf_finish_parse+0x22f0>
    4728:	add	r7, r9, #1
    472c:	cmp	r9, #15
    4730:	add	r0, pc, r0
    4734:	str	r7, [r0]
    4738:	bge	53a8 <sf_finish_parse+0x2198>
    473c:	mov	r0, #1024	; 0x400
    4740:	lsl	r5, r0, r7
    4744:	mov	r0, r5
    4748:	bl	dec <malloc@plt>
    474c:	cmp	r0, #0
    4750:	str	r0, [r4, #12]
    4754:	beq	53a8 <sf_finish_parse+0x2198>
    4758:	mov	r1, #0
    475c:	mov	r2, r5
    4760:	add	r4, r4, #8
    4764:	bl	e58 <memset@plt>
    4768:	ldr	ip, [sp, #28]
    476c:	cmp	r5, #19
    4770:	str	r5, [r4]
    4774:	bhi	4784 <sf_finish_parse+0x1574>
    4778:	b	53a8 <sf_finish_parse+0x2198>
    477c:	.word	0x00043d60
    4780:	mov	r7, r9
    4784:	sub	r0, r5, #20
    4788:	mov	r1, #69	; 0x45
    478c:	str	r0, [r4]
    4790:	ldr	r9, [r4, #4]
    4794:	str	r1, [r9, r0]!
    4798:	mov	r1, ip
    479c:	mov	r0, #128	; 0x80
    47a0:	str	r9, [r6, #8]
    47a4:	str	r0, [r9, #12]
    47a8:	mov	r0, r1
    47ac:	ldr	r1, [r1, #16]
    47b0:	cmp	r1, #0
    47b4:	bne	47a8 <sf_finish_parse+0x1598>
    47b8:	str	r9, [r0, #16]
    47bc:	mov	r4, r8
    47c0:	ldr	r5, [r4, r7, lsl #3]!
    47c4:	cmp	r5, #19
    47c8:	bhi	4828 <sf_finish_parse+0x1618>
    47cc:	ldr	r0, [pc, #3376]	; 5504 <sf_finish_parse+0x22f4>
    47d0:	add	r6, r7, #1
    47d4:	cmp	r7, #15
    47d8:	add	r0, pc, r0
    47dc:	str	r6, [r0]
    47e0:	bge	53a8 <sf_finish_parse+0x2198>
    47e4:	mov	r0, #1024	; 0x400
    47e8:	lsl	r5, r0, r6
    47ec:	mov	r0, r5
    47f0:	bl	dec <malloc@plt>
    47f4:	cmp	r0, #0
    47f8:	str	r0, [r4, #12]
    47fc:	beq	53a8 <sf_finish_parse+0x2198>
    4800:	mov	r1, #0
    4804:	mov	r2, r5
    4808:	add	r4, r4, #8
    480c:	bl	e58 <memset@plt>
    4810:	ldr	ip, [sp, #28]
    4814:	cmp	r5, #19
    4818:	str	r5, [r4]
    481c:	bhi	482c <sf_finish_parse+0x161c>
    4820:	b	53a8 <sf_finish_parse+0x2198>
    4824:	.word	0x00043cbc
    4828:	mov	r6, r7
    482c:	sub	r1, r5, #20
    4830:	mov	r2, #96	; 0x60
    4834:	str	r1, [r4]
    4838:	ldr	r0, [r4, #4]
    483c:	str	r2, [r0, r1]!
    4840:	mov	r2, ip
    4844:	ldr	r1, [sp, #24]
    4848:	str	r0, [r9, #4]
    484c:	str	r1, [r0, #12]
    4850:	mov	r1, r2
    4854:	ldr	r2, [r2, #16]
    4858:	cmp	r2, #0
    485c:	bne	4850 <sf_finish_parse+0x1640>
    4860:	str	r0, [r1, #16]
    4864:	mov	r4, r8
    4868:	ldr	r5, [r4, r6, lsl #3]!
    486c:	cmp	r5, #19
    4870:	bhi	48d0 <sf_finish_parse+0x16c0>
    4874:	ldr	r0, [pc, #3212]	; 5508 <sf_finish_parse+0x22f8>
    4878:	add	r7, r6, #1
    487c:	cmp	r6, #15
    4880:	add	r0, pc, r0
    4884:	str	r7, [r0]
    4888:	bge	53a8 <sf_finish_parse+0x2198>
    488c:	mov	r0, #1024	; 0x400
    4890:	lsl	r5, r0, r7
    4894:	mov	r0, r5
    4898:	bl	dec <malloc@plt>
    489c:	cmp	r0, #0
    48a0:	str	r0, [r4, #12]
    48a4:	beq	53a8 <sf_finish_parse+0x2198>
    48a8:	mov	r1, #0
    48ac:	mov	r2, r5
    48b0:	add	r4, r4, #8
    48b4:	bl	e58 <memset@plt>
    48b8:	ldr	ip, [sp, #28]
    48bc:	cmp	r5, #19
    48c0:	str	r5, [r4]
    48c4:	bhi	48d4 <sf_finish_parse+0x16c4>
    48c8:	b	53a8 <sf_finish_parse+0x2198>
    48cc:	.word	0x00043c20
    48d0:	mov	r7, r6
    48d4:	sub	r1, r5, #20
    48d8:	mov	r2, #4
    48dc:	str	r1, [r4]
    48e0:	ldr	r0, [r4, #4]
    48e4:	str	r2, [r0, r1]!
    48e8:	mov	r1, #2
    48ec:	mov	r2, ip
    48f0:	str	r1, [r0, #12]
    48f4:	mov	r1, r2
    48f8:	ldr	r2, [r2, #16]
    48fc:	cmp	r2, #0
    4900:	bne	48f4 <sf_finish_parse+0x16e4>
    4904:	str	r0, [r1, #16]
    4908:	mov	r4, r8
    490c:	ldr	r5, [r4, r7, lsl #3]!
    4910:	cmp	r5, #19
    4914:	bhi	4974 <sf_finish_parse+0x1764>
    4918:	ldr	r0, [pc, #3052]	; 550c <sf_finish_parse+0x22fc>
    491c:	add	r6, r7, #1
    4920:	cmp	r7, #15
    4924:	add	r0, pc, r0
    4928:	str	r6, [r0]
    492c:	bge	53a8 <sf_finish_parse+0x2198>
    4930:	mov	r0, #1024	; 0x400
    4934:	lsl	r5, r0, r6
    4938:	mov	r0, r5
    493c:	bl	dec <malloc@plt>
    4940:	cmp	r0, #0
    4944:	str	r0, [r4, #12]
    4948:	beq	53a8 <sf_finish_parse+0x2198>
    494c:	mov	r1, #0
    4950:	mov	r2, r5
    4954:	add	r4, r4, #8
    4958:	bl	e58 <memset@plt>
    495c:	ldr	ip, [sp, #28]
    4960:	cmp	r5, #19
    4964:	str	r5, [r4]
    4968:	bhi	4978 <sf_finish_parse+0x1768>
    496c:	b	53a8 <sf_finish_parse+0x2198>
    4970:	.word	0x00043b5c
    4974:	mov	r6, r7
    4978:	sub	r1, r5, #20
    497c:	mov	r2, #2
    4980:	str	r1, [r4]
    4984:	ldr	r0, [r4, #4]
    4988:	str	r2, [r0, r1]!
    498c:	mov	r2, ip
    4990:	ldr	r1, [sp, #24]
    4994:	str	r1, [r0, #12]
    4998:	mov	r1, r2
    499c:	ldr	r2, [r2, #16]
    49a0:	cmp	r2, #0
    49a4:	bne	4998 <sf_finish_parse+0x1788>
    49a8:	ldr	r3, [sp, #20]
    49ac:	str	r0, [r1, #16]
    49b0:	cmp	r3, #127	; 0x7f
    49b4:	bne	4a20 <sf_finish_parse+0x1810>
    49b8:	mov	r4, r8
    49bc:	ldr	r5, [r4, r6, lsl #3]!
    49c0:	cmp	r5, #19
    49c4:	bhi	4a2c <sf_finish_parse+0x181c>
    49c8:	ldr	r0, [pc, #2880]	; 5510 <sf_finish_parse+0x2300>
    49cc:	add	r7, r6, #1
    49d0:	cmp	r6, #15
    49d4:	add	r0, pc, r0
    49d8:	str	r7, [r0]
    49dc:	bge	53a8 <sf_finish_parse+0x2198>
    49e0:	mov	r0, #1024	; 0x400
    49e4:	lsl	r5, r0, r7
    49e8:	mov	r0, r5
    49ec:	bl	dec <malloc@plt>
    49f0:	cmp	r0, #0
    49f4:	str	r0, [r4, #12]
    49f8:	beq	53a8 <sf_finish_parse+0x2198>
    49fc:	mov	r1, #0
    4a00:	mov	r2, r5
    4a04:	add	r4, r4, #8
    4a08:	bl	e58 <memset@plt>
    4a0c:	ldr	ip, [sp, #28]
    4a10:	cmp	r5, #19
    4a14:	str	r5, [r4]
    4a18:	bhi	4a30 <sf_finish_parse+0x1820>
    4a1c:	b	53a8 <sf_finish_parse+0x2198>
    4a20:	ldr	r0, [sp, #12]
    4a24:	b	5104 <sf_finish_parse+0x1ef4>
    4a28:	.word	0x00043ac4
    4a2c:	mov	r7, r6
    4a30:	sub	r1, r5, #20
    4a34:	mov	r2, #32
    4a38:	str	r1, [r4]
    4a3c:	ldr	r0, [r4, #4]
    4a40:	str	r2, [r0, r1]!
    4a44:	mov	r2, ip
    4a48:	mov	r1, #4
    4a4c:	str	r0, [r9, #8]
    4a50:	str	r1, [r0, #12]
    4a54:	mov	r1, r2
    4a58:	ldr	r2, [r2, #16]
    4a5c:	cmp	r2, #0
    4a60:	bne	4a54 <sf_finish_parse+0x1844>
    4a64:	str	r0, [r1, #16]
    4a68:	mov	r6, r8
    4a6c:	ldr	r5, [r6, r7, lsl #3]!
    4a70:	cmp	r5, #19
    4a74:	bhi	4ad8 <sf_finish_parse+0x18c8>
    4a78:	ldr	r0, [pc, #2708]	; 5514 <sf_finish_parse+0x2304>
    4a7c:	add	r9, r7, #1
    4a80:	cmp	r7, #15
    4a84:	add	r0, pc, r0
    4a88:	str	r9, [r0]
    4a8c:	bge	53a8 <sf_finish_parse+0x2198>
    4a90:	mov	r0, #1024	; 0x400
    4a94:	lsl	r5, r0, r9
    4a98:	mov	r0, r5
    4a9c:	bl	dec <malloc@plt>
    4aa0:	cmp	r0, #0
    4aa4:	str	r0, [r6, #12]
    4aa8:	beq	53a8 <sf_finish_parse+0x2198>
    4aac:	mov	r1, #0
    4ab0:	mov	r2, r5
    4ab4:	add	r6, r6, #8
    4ab8:	bl	e58 <memset@plt>
    4abc:	ldr	ip, [sp, #28]
    4ac0:	cmp	r5, #19
    4ac4:	str	r5, [r6]
    4ac8:	bhi	4adc <sf_finish_parse+0x18cc>
    4acc:	b	53a8 <sf_finish_parse+0x2198>
    4ad0:	.word	0x00043a1c
    4ad4:	.word	0x0004397c
    4ad8:	mov	r9, r7
    4adc:	sub	r0, r5, #20
    4ae0:	mov	r1, #69	; 0x45
    4ae4:	str	r0, [r6]
    4ae8:	ldr	r6, [r6, #4]
    4aec:	str	r1, [r6, r0]!
    4af0:	mov	r0, #33554432	; 0x2000000
    4af4:	mov	r1, ip
    4af8:	str	r0, [r6, #12]
    4afc:	mov	r0, r1
    4b00:	ldr	r1, [r1, #16]
    4b04:	cmp	r1, #0
    4b08:	bne	4afc <sf_finish_parse+0x18ec>
    4b0c:	str	r6, [r0, #16]
    4b10:	ldr	r0, [sp, #12]
    4b14:	mov	r4, r8
    4b18:	str	r0, [r6, #8]
    4b1c:	ldr	r5, [r4, r9, lsl #3]!
    4b20:	cmp	r5, #19
    4b24:	bhi	4b84 <sf_finish_parse+0x1974>
    4b28:	ldr	r0, [pc, #2536]	; 5518 <sf_finish_parse+0x2308>
    4b2c:	add	r7, r9, #1
    4b30:	cmp	r9, #15
    4b34:	add	r0, pc, r0
    4b38:	str	r7, [r0]
    4b3c:	bge	53a8 <sf_finish_parse+0x2198>
    4b40:	mov	r0, #1024	; 0x400
    4b44:	lsl	r5, r0, r7
    4b48:	mov	r0, r5
    4b4c:	bl	dec <malloc@plt>
    4b50:	cmp	r0, #0
    4b54:	str	r0, [r4, #12]
    4b58:	beq	53a8 <sf_finish_parse+0x2198>
    4b5c:	mov	r1, #0
    4b60:	mov	r2, r5
    4b64:	add	r4, r4, #8
    4b68:	bl	e58 <memset@plt>
    4b6c:	ldr	ip, [sp, #28]
    4b70:	cmp	r5, #19
    4b74:	str	r5, [r4]
    4b78:	bhi	4b88 <sf_finish_parse+0x1978>
    4b7c:	b	53a8 <sf_finish_parse+0x2198>
    4b80:	.word	0x000438dc
    4b84:	mov	r7, r9
    4b88:	sub	r0, r5, #20
    4b8c:	mov	r1, #69	; 0x45
    4b90:	str	r0, [r4]
    4b94:	ldr	r9, [r4, #4]
    4b98:	str	r1, [r9, r0]!
    4b9c:	mov	r1, ip
    4ba0:	mov	r0, #16777216	; 0x1000000
    4ba4:	str	r9, [r6, #4]
    4ba8:	str	r0, [r9, #12]
    4bac:	mov	r0, r1
    4bb0:	ldr	r1, [r1, #16]
    4bb4:	cmp	r1, #0
    4bb8:	bne	4bac <sf_finish_parse+0x199c>
    4bbc:	str	r9, [r0, #16]
    4bc0:	mov	r6, r8
    4bc4:	ldr	r5, [r6, r7, lsl #3]!
    4bc8:	cmp	r5, #19
    4bcc:	bhi	4c2c <sf_finish_parse+0x1a1c>
    4bd0:	ldr	r0, [pc, #2372]	; 551c <sf_finish_parse+0x230c>
    4bd4:	add	r4, r7, #1
    4bd8:	cmp	r7, #15
    4bdc:	add	r0, pc, r0
    4be0:	str	r4, [r0]
    4be4:	bge	53a8 <sf_finish_parse+0x2198>
    4be8:	mov	r0, #1024	; 0x400
    4bec:	lsl	r5, r0, r4
    4bf0:	mov	r0, r5
    4bf4:	bl	dec <malloc@plt>
    4bf8:	cmp	r0, #0
    4bfc:	str	r0, [r6, #12]
    4c00:	beq	53a8 <sf_finish_parse+0x2198>
    4c04:	mov	r1, #0
    4c08:	mov	r2, r5
    4c0c:	add	r6, r6, #8
    4c10:	bl	e58 <memset@plt>
    4c14:	ldr	ip, [sp, #28]
    4c18:	cmp	r5, #19
    4c1c:	str	r5, [r6]
    4c20:	bhi	4c30 <sf_finish_parse+0x1a20>
    4c24:	b	53a8 <sf_finish_parse+0x2198>
    4c28:	.word	0x00043834
    4c2c:	mov	r4, r7
    4c30:	sub	r1, r5, #20
    4c34:	mov	r2, #48	; 0x30
    4c38:	str	r1, [r6]
    4c3c:	ldr	r0, [r6, #4]
    4c40:	str	r2, [r0, r1]!
    4c44:	mov	r2, ip
    4c48:	mov	r1, #16
    4c4c:	str	r0, [r9, #4]
    4c50:	str	r1, [r0, #12]
    4c54:	mov	r1, r2
    4c58:	ldr	r2, [r2, #16]
    4c5c:	cmp	r2, #0
    4c60:	bne	4c54 <sf_finish_parse+0x1a44>
    4c64:	str	r0, [r1, #16]
    4c68:	mov	r7, r8
    4c6c:	ldr	r5, [r7, r4, lsl #3]!
    4c70:	cmp	r5, #19
    4c74:	bhi	4cd4 <sf_finish_parse+0x1ac4>
    4c78:	ldr	r0, [pc, #2208]	; 5520 <sf_finish_parse+0x2310>
    4c7c:	add	r6, r4, #1
    4c80:	cmp	r4, #15
    4c84:	add	r0, pc, r0
    4c88:	str	r6, [r0]
    4c8c:	bge	53a8 <sf_finish_parse+0x2198>
    4c90:	mov	r0, #1024	; 0x400
    4c94:	lsl	r5, r0, r6
    4c98:	mov	r0, r5
    4c9c:	bl	dec <malloc@plt>
    4ca0:	cmp	r0, #0
    4ca4:	str	r0, [r7, #12]
    4ca8:	beq	53a8 <sf_finish_parse+0x2198>
    4cac:	mov	r1, #0
    4cb0:	mov	r2, r5
    4cb4:	add	r7, r7, #8
    4cb8:	bl	e58 <memset@plt>
    4cbc:	ldr	ip, [sp, #28]
    4cc0:	cmp	r5, #19
    4cc4:	str	r5, [r7]
    4cc8:	bhi	4cd8 <sf_finish_parse+0x1ac8>
    4ccc:	b	53a8 <sf_finish_parse+0x2198>
    4cd0:	.word	0x0004379c
    4cd4:	mov	r6, r4
    4cd8:	sub	r0, r5, #20
    4cdc:	mov	r1, #69	; 0x45
    4ce0:	str	r0, [r7]
    4ce4:	ldr	r2, [r7, #4]
    4ce8:	str	r1, [r2, r0]!
    4cec:	mov	r0, #32
    4cf0:	mov	r1, ip
    4cf4:	str	r0, [r2, #12]
    4cf8:	mov	r0, r1
    4cfc:	ldr	r1, [r1, #16]
    4d00:	cmp	r1, #0
    4d04:	bne	4cf8 <sf_finish_parse+0x1ae8>
    4d08:	str	r2, [r0, #16]
    4d0c:	mov	r4, r8
    4d10:	str	r2, [sp, #4]
    4d14:	ldr	r5, [r4, r6, lsl #3]!
    4d18:	cmp	r5, #19
    4d1c:	bhi	4d7c <sf_finish_parse+0x1b6c>
    4d20:	ldr	r0, [pc, #2044]	; 5524 <sf_finish_parse+0x2314>
    4d24:	add	r7, r6, #1
    4d28:	cmp	r6, #15
    4d2c:	add	r0, pc, r0
    4d30:	str	r7, [r0]
    4d34:	bge	53a8 <sf_finish_parse+0x2198>
    4d38:	mov	r0, #1024	; 0x400
    4d3c:	lsl	r5, r0, r7
    4d40:	mov	r0, r5
    4d44:	bl	dec <malloc@plt>
    4d48:	cmp	r0, #0
    4d4c:	str	r0, [r4, #12]
    4d50:	beq	53a8 <sf_finish_parse+0x2198>
    4d54:	mov	r1, #0
    4d58:	mov	r2, r5
    4d5c:	add	r4, r4, #8
    4d60:	bl	e58 <memset@plt>
    4d64:	ldr	ip, [sp, #28]
    4d68:	cmp	r5, #19
    4d6c:	str	r5, [r4]
    4d70:	bhi	4d80 <sf_finish_parse+0x1b70>
    4d74:	b	53a8 <sf_finish_parse+0x2198>
    4d78:	.word	0x00043704
    4d7c:	mov	r7, r6
    4d80:	sub	r1, r5, #20
    4d84:	mov	r2, #48	; 0x30
    4d88:	str	r1, [r4]
    4d8c:	ldr	r0, [r4, #4]
    4d90:	str	r2, [r0, r1]!
    4d94:	mov	r2, ip
    4d98:	mov	r1, #8
    4d9c:	str	r0, [r9, #8]
    4da0:	str	r1, [r0, #12]
    4da4:	mov	r1, r2
    4da8:	ldr	r2, [r2, #16]
    4dac:	cmp	r2, #0
    4db0:	bne	4da4 <sf_finish_parse+0x1b94>
    4db4:	str	r0, [r1, #16]
    4db8:	mov	r6, r8
    4dbc:	ldr	r5, [r6, r7, lsl #3]!
    4dc0:	cmp	r5, #19
    4dc4:	bhi	4e24 <sf_finish_parse+0x1c14>
    4dc8:	ldr	r0, [pc, #1880]	; 5528 <sf_finish_parse+0x2318>
    4dcc:	add	r4, r7, #1
    4dd0:	cmp	r7, #15
    4dd4:	add	r0, pc, r0
    4dd8:	str	r4, [r0]
    4ddc:	bge	53a8 <sf_finish_parse+0x2198>
    4de0:	mov	r0, #1024	; 0x400
    4de4:	lsl	r5, r0, r4
    4de8:	mov	r0, r5
    4dec:	bl	dec <malloc@plt>
    4df0:	cmp	r0, #0
    4df4:	str	r0, [r6, #12]
    4df8:	beq	53a8 <sf_finish_parse+0x2198>
    4dfc:	mov	r1, #0
    4e00:	mov	r2, r5
    4e04:	add	r6, r6, #8
    4e08:	bl	e58 <memset@plt>
    4e0c:	ldr	ip, [sp, #28]
    4e10:	cmp	r5, #19
    4e14:	str	r5, [r6]
    4e18:	bhi	4e28 <sf_finish_parse+0x1c18>
    4e1c:	b	53a8 <sf_finish_parse+0x2198>
    4e20:	.word	0x00043664
    4e24:	mov	r4, r7
    4e28:	sub	r0, r5, #20
    4e2c:	mov	r1, #69	; 0x45
    4e30:	str	r0, [r6]
    4e34:	ldr	r9, [r6, #4]
    4e38:	str	r1, [r9, r0]!
    4e3c:	mov	r0, #32
    4e40:	mov	r1, ip
    4e44:	str	r0, [r9, #12]
    4e48:	mov	r0, r1
    4e4c:	ldr	r1, [r1, #16]
    4e50:	cmp	r1, #0
    4e54:	bne	4e48 <sf_finish_parse+0x1c38>
    4e58:	str	r9, [r0, #16]
    4e5c:	mov	r6, r8
    4e60:	str	sl, [sp, #8]
    4e64:	ldr	r5, [r6, r4, lsl #3]!
    4e68:	cmp	r5, #19
    4e6c:	bhi	4ecc <sf_finish_parse+0x1cbc>
    4e70:	ldr	r0, [pc, #1716]	; 552c <sf_finish_parse+0x231c>
    4e74:	add	r7, r4, #1
    4e78:	cmp	r4, #15
    4e7c:	add	r0, pc, r0
    4e80:	str	r7, [r0]
    4e84:	bge	53a8 <sf_finish_parse+0x2198>
    4e88:	mov	r0, #1024	; 0x400
    4e8c:	lsl	r5, r0, r7
    4e90:	mov	r0, r5
    4e94:	bl	dec <malloc@plt>
    4e98:	cmp	r0, #0
    4e9c:	str	r0, [r6, #12]
    4ea0:	beq	53a8 <sf_finish_parse+0x2198>
    4ea4:	mov	r1, #0
    4ea8:	mov	r2, r5
    4eac:	add	r6, r6, #8
    4eb0:	bl	e58 <memset@plt>
    4eb4:	ldr	ip, [sp, #28]
    4eb8:	cmp	r5, #19
    4ebc:	str	r5, [r6]
    4ec0:	bhi	4ed0 <sf_finish_parse+0x1cc0>
    4ec4:	b	53a8 <sf_finish_parse+0x2198>
    4ec8:	.word	0x000435c4
    4ecc:	mov	r7, r4
    4ed0:	sub	r0, r5, #20
    4ed4:	mov	r1, #96	; 0x60
    4ed8:	str	r0, [r6]
    4edc:	ldr	sl, [r6, #4]
    4ee0:	str	r1, [sl, r0]!
    4ee4:	mov	r1, ip
    4ee8:	ldr	r0, [sp, #24]
    4eec:	str	r0, [sl, #12]
    4ef0:	mov	r0, r1
    4ef4:	ldr	r1, [r1, #16]
    4ef8:	cmp	r1, #0
    4efc:	bne	4ef0 <sf_finish_parse+0x1ce0>
    4f00:	str	sl, [r0, #16]
    4f04:	mov	r4, r8
    4f08:	ldr	r5, [r8, r7, lsl #3]!
    4f0c:	cmp	r5, #19
    4f10:	bhi	4f70 <sf_finish_parse+0x1d60>
    4f14:	ldr	r0, [pc, #1556]	; 5530 <sf_finish_parse+0x2320>
    4f18:	add	r6, r7, #1
    4f1c:	cmp	r7, #15
    4f20:	add	r0, pc, r0
    4f24:	str	r6, [r0]
    4f28:	bge	53a8 <sf_finish_parse+0x2198>
    4f2c:	mov	r0, #1024	; 0x400
    4f30:	lsl	r5, r0, r6
    4f34:	mov	r0, r5
    4f38:	bl	dec <malloc@plt>
    4f3c:	cmp	r0, #0
    4f40:	str	r0, [r8, #12]
    4f44:	beq	53a8 <sf_finish_parse+0x2198>
    4f48:	mov	r1, #0
    4f4c:	mov	r2, r5
    4f50:	add	r8, r8, #8
    4f54:	bl	e58 <memset@plt>
    4f58:	ldr	ip, [sp, #28]
    4f5c:	cmp	r5, #19
    4f60:	str	r5, [r8]
    4f64:	bhi	4f74 <sf_finish_parse+0x1d64>
    4f68:	b	53a8 <sf_finish_parse+0x2198>
    4f6c:	.word	0x000434fc
    4f70:	mov	r6, r7
    4f74:	sub	r1, r5, #20
    4f78:	mov	r2, #4
    4f7c:	str	r1, [r8]
    4f80:	ldr	r0, [r8, #4]
    4f84:	str	r2, [r0, r1]!
    4f88:	mov	r1, #3
    4f8c:	mov	r2, ip
    4f90:	str	r1, [r0, #12]
    4f94:	mov	r1, r2
    4f98:	ldr	r2, [r2, #16]
    4f9c:	cmp	r2, #0
    4fa0:	bne	4f94 <sf_finish_parse+0x1d84>
    4fa4:	str	r0, [r1, #16]
    4fa8:	mov	r8, r4
    4fac:	ldr	r5, [r4, r6, lsl #3]!
    4fb0:	cmp	r5, #19
    4fb4:	bhi	5018 <sf_finish_parse+0x1e08>
    4fb8:	ldr	r0, [pc, #1396]	; 5534 <sf_finish_parse+0x2324>
    4fbc:	add	r7, r6, #1
    4fc0:	cmp	r6, #15
    4fc4:	add	r0, pc, r0
    4fc8:	str	r7, [r0]
    4fcc:	bge	53a8 <sf_finish_parse+0x2198>
    4fd0:	mov	r0, #1024	; 0x400
    4fd4:	lsl	r5, r0, r7
    4fd8:	mov	r0, r5
    4fdc:	bl	dec <malloc@plt>
    4fe0:	cmp	r0, #0
    4fe4:	str	r0, [r4, #12]
    4fe8:	beq	53a8 <sf_finish_parse+0x2198>
    4fec:	mov	r1, #0
    4ff0:	mov	r2, r5
    4ff4:	add	r4, r4, #8
    4ff8:	bl	e58 <memset@plt>
    4ffc:	ldr	ip, [sp, #28]
    5000:	cmp	r5, #19
    5004:	str	r5, [r4]
    5008:	bhi	501c <sf_finish_parse+0x1e0c>
    500c:	b	53a8 <sf_finish_parse+0x2198>
    5010:	.word	0x00043424
    5014:	.word	0x00043380
    5018:	mov	r7, r6
    501c:	sub	r1, r5, #20
    5020:	mov	r2, #84	; 0x54
    5024:	str	r1, [r4]
    5028:	ldr	r0, [r4, #4]
    502c:	str	r2, [r0, r1]!
    5030:	mvn	r1, #3
    5034:	mov	r2, ip
    5038:	str	r1, [r0, #12]
    503c:	mov	r1, r2
    5040:	ldr	r2, [r2, #16]
    5044:	cmp	r2, #0
    5048:	bne	503c <sf_finish_parse+0x1e2c>
    504c:	str	r0, [r1, #16]
    5050:	mov	r4, r8
    5054:	ldr	r5, [r4, r7, lsl #3]!
    5058:	cmp	r5, #19
    505c:	bhi	50b4 <sf_finish_parse+0x1ea4>
    5060:	ldr	r1, [pc, #1232]	; 5538 <sf_finish_parse+0x2328>
    5064:	add	r0, r7, #1
    5068:	cmp	r7, #15
    506c:	add	r1, pc, r1
    5070:	str	r0, [r1]
    5074:	bge	53a8 <sf_finish_parse+0x2198>
    5078:	mov	r1, #1024	; 0x400
    507c:	lsl	r5, r1, r0
    5080:	mov	r0, r5
    5084:	bl	dec <malloc@plt>
    5088:	cmp	r0, #0
    508c:	str	r0, [r4, #12]
    5090:	beq	53a8 <sf_finish_parse+0x2198>
    5094:	mov	r1, #0
    5098:	mov	r2, r5
    509c:	add	r4, r4, #8
    50a0:	bl	e58 <memset@plt>
    50a4:	ldr	ip, [sp, #28]
    50a8:	cmp	r5, #19
    50ac:	str	r5, [r4]
    50b0:	bls	53a8 <sf_finish_parse+0x2198>
    50b4:	sub	r1, r5, #20
    50b8:	mov	r2, #2
    50bc:	str	r1, [r4]
    50c0:	ldr	r0, [r4, #4]
    50c4:	str	r2, [r0, r1]!
    50c8:	mov	r2, ip
    50cc:	ldr	r1, [sp, #24]
    50d0:	str	r1, [r0, #12]
    50d4:	mov	r1, r2
    50d8:	ldr	r2, [r2, #16]
    50dc:	cmp	r2, #0
    50e0:	bne	50d4 <sf_finish_parse+0x1ec4>
    50e4:	str	r0, [r1, #16]
    50e8:	ldr	r1, [sp, #4]
    50ec:	ldr	r0, [sp, #12]
    50f0:	ldr	r3, [sp, #20]
    50f4:	str	sl, [r1, #4]
    50f8:	str	r0, [r1, #8]
    50fc:	str	sl, [r9, #4]
    5100:	ldr	sl, [sp, #8]
    5104:	str	r0, [r9, #8]
    5108:	ldr	r4, [sp, #16]
    510c:	cmp	ip, #0
    5110:	beq	5134 <sf_finish_parse+0x1f24>
    5114:	ldr	r0, [r4, #4]
    5118:	mov	r2, ip
    511c:	mov	r1, r2
    5120:	ldr	r2, [r2, #16]
    5124:	cmp	r2, #0
    5128:	bne	511c <sf_finish_parse+0x1f0c>
    512c:	str	r0, [r1, #16]
    5130:	str	ip, [r4, #4]
    5134:	ldr	r4, [pc, #1024]	; 553c <sf_finish_parse+0x232c>
    5138:	cmp	r3, #192	; 0xc0
    513c:	ldr	r4, [pc, r4]
    5140:	bne	5340 <sf_finish_parse+0x2130>
    5144:	mov	r6, r8
    5148:	mov	r9, r8
    514c:	ldr	r5, [r6, r4, lsl #3]!
    5150:	cmp	r5, #19
    5154:	bhi	51ac <sf_finish_parse+0x1f9c>
    5158:	ldr	r0, [pc, #992]	; 5540 <sf_finish_parse+0x2330>
    515c:	add	r8, r4, #1
    5160:	cmp	r4, #15
    5164:	add	r0, pc, r0
    5168:	str	r8, [r0]
    516c:	bge	53a8 <sf_finish_parse+0x2198>
    5170:	mov	r0, #1024	; 0x400
    5174:	lsl	r5, r0, r8
    5178:	mov	r0, r5
    517c:	bl	dec <malloc@plt>
    5180:	cmp	r0, #0
    5184:	str	r0, [r6, #12]
    5188:	beq	53a8 <sf_finish_parse+0x2198>
    518c:	mov	r1, #0
    5190:	mov	r2, r5
    5194:	add	r6, r6, #8
    5198:	bl	e58 <memset@plt>
    519c:	cmp	r5, #19
    51a0:	str	r5, [r6]
    51a4:	bhi	51b0 <sf_finish_parse+0x1fa0>
    51a8:	b	53a8 <sf_finish_parse+0x2198>
    51ac:	mov	r8, r4
    51b0:	sub	r0, r5, #20
    51b4:	mov	r1, #32
    51b8:	mov	r7, r9
    51bc:	str	r0, [r6]
    51c0:	ldr	r6, [r6, #4]
    51c4:	str	r1, [r6, r0]!
    51c8:	mov	r0, #4
    51cc:	str	r0, [r6, #12]
    51d0:	ldr	r5, [r7, r8, lsl #3]!
    51d4:	cmp	r5, #207	; 0xcf
    51d8:	bhi	5244 <sf_finish_parse+0x2034>
    51dc:	ldr	r0, [pc, #864]	; 5544 <sf_finish_parse+0x2334>
    51e0:	add	r4, r8, #1
    51e4:	cmp	r8, #15
    51e8:	add	r0, pc, r0
    51ec:	str	r4, [r0]
    51f0:	bge	53a8 <sf_finish_parse+0x2198>
    51f4:	mov	r0, #1024	; 0x400
    51f8:	lsl	r5, r0, r4
    51fc:	mov	r0, r5
    5200:	bl	dec <malloc@plt>
    5204:	cmp	r0, #0
    5208:	str	r0, [r7, #12]
    520c:	beq	53a8 <sf_finish_parse+0x2198>
    5210:	mov	r1, #0
    5214:	mov	r2, r5
    5218:	mov	r8, r9
    521c:	add	r7, r7, #8
    5220:	bl	e58 <memset@plt>
    5224:	cmp	r5, #207	; 0xcf
    5228:	str	r5, [r7]
    522c:	bhi	524c <sf_finish_parse+0x203c>
    5230:	b	53a8 <sf_finish_parse+0x2198>
    5234:	.word	0x000432c4
    5238:	.word	0x0004373c
    523c:	.word	0x00043288
    5240:	.word	0x00043258
    5244:	mov	r4, r8
    5248:	mov	r8, r9
    524c:	sub	r0, r5, #208	; 0xd0
    5250:	mov	r2, #1761607680	; 0x69000000
    5254:	str	r0, [r7]
    5258:	ldr	r1, [r7, #4]
    525c:	adds	r0, r1, r0
    5260:	mov	r1, #21
    5264:	str	r2, [r0, #20]
    5268:	str	r6, [r0, #4]
    526c:	str	r1, [r0, #8]
    5270:	str	r0, [r0, #96]	; 0x60
    5274:	beq	5340 <sf_finish_parse+0x2130>
    5278:	ldr	r1, [sl, #96]	; 0x60
    527c:	mov	r2, r0
    5280:	ldr	r3, [r2, #44]	; 0x2c
    5284:	add	r7, r2, #84	; 0x54
    5288:	cmp	r3, #0
    528c:	mov	r3, #84	; 0x54
    5290:	movweq	r3, #60	; 0x3c
    5294:	addeq	r7, r2, #60	; 0x3c
    5298:	ldr	r2, [r2, r3]
    529c:	str	r1, [r7]
    52a0:	cmp	r2, #0
    52a4:	bne	5280 <sf_finish_parse+0x2070>
    52a8:	ldr	r1, [r0, #44]	; 0x2c
    52ac:	cmp	sl, #0
    52b0:	clz	r1, r1
    52b4:	lsr	r1, r1, #5
    52b8:	str	r1, [r0, #44]	; 0x2c
    52bc:	ldr	r2, [sl, #44]	; 0x2c
    52c0:	clz	r1, r2
    52c4:	lsr	r1, r1, #5
    52c8:	str	r1, [sl, #44]	; 0x2c
    52cc:	str	sl, [sp, #32]
    52d0:	beq	5320 <sf_finish_parse+0x2110>
    52d4:	cmp	r2, #0
    52d8:	mov	r2, #60	; 0x3c
    52dc:	add	r1, sl, #60	; 0x3c
    52e0:	movweq	r2, #84	; 0x54
    52e4:	addeq	r1, sl, #84	; 0x54
    52e8:	ldr	r2, [sl, r2]
    52ec:	cmp	r2, #0
    52f0:	beq	5324 <sf_finish_parse+0x2114>
    52f4:	ldr	r3, [r2, #44]	; 0x2c
    52f8:	add	r1, r2, #84	; 0x54
    52fc:	cmp	r3, #0
    5300:	mov	r3, #84	; 0x54
    5304:	movweq	r3, #60	; 0x3c
    5308:	addeq	r1, r2, #60	; 0x3c
    530c:	ldr	r2, [r2, r3]
    5310:	cmp	r2, #0
    5314:	bne	52f4 <sf_finish_parse+0x20e4>
    5318:	b	5324 <sf_finish_parse+0x2114>
    531c:	.word	0x000431bc
    5320:	add	r1, sp, #32
    5324:	str	r0, [r1]
    5328:	ldr	r1, [sl, #44]	; 0x2c
    532c:	clz	r1, r1
    5330:	lsr	r1, r1, #5
    5334:	str	r1, [sl, #44]	; 0x2c
    5338:	ldr	r0, [r0, #96]	; 0x60
    533c:	str	r0, [sl, #96]	; 0x60
    5340:	mov	r6, r8
    5344:	ldr	r5, [r6, r4, lsl #3]!
    5348:	ldr	r9, [pc, #504]	; 5548 <sf_finish_parse+0x2338>
    534c:	ldr	r9, [pc, r9]
    5350:	cmp	r5, #207	; 0xcf
    5354:	bhi	53bc <sf_finish_parse+0x21ac>
    5358:	ldr	r0, [pc, #492]	; 554c <sf_finish_parse+0x233c>
    535c:	add	r7, r4, #1
    5360:	cmp	r4, #15
    5364:	add	r0, pc, r0
    5368:	str	r7, [r0]
    536c:	bge	53a8 <sf_finish_parse+0x2198>
    5370:	mov	r0, #1024	; 0x400
    5374:	lsl	r5, r0, r7
    5378:	mov	r0, r5
    537c:	bl	dec <malloc@plt>
    5380:	cmp	r0, #0
    5384:	str	r0, [r6, #12]
    5388:	beq	53a8 <sf_finish_parse+0x2198>
    538c:	mov	r1, #0
    5390:	mov	r2, r5
    5394:	add	r6, r6, #8
    5398:	bl	e58 <memset@plt>
    539c:	cmp	r5, #207	; 0xcf
    53a0:	str	r5, [r6]
    53a4:	bhi	53c0 <sf_finish_parse+0x21b0>
    53a8:	ldr	r0, [pc, #424]	; 5558 <sf_finish_parse+0x2348>
    53ac:	add	r0, pc, r0
    53b0:	bl	2068 <sf_bpf_error>
    53b4:	.word	0x00043110
    53b8:	.word	0x0004306c
    53bc:	mov	r7, r4
    53c0:	sub	r0, r5, #208	; 0xd0
    53c4:	cmp	sl, #0
    53c8:	str	r0, [r6]
    53cc:	ldr	r1, [r6, #4]
    53d0:	add	r0, r1, r0
    53d4:	mov	r1, #6
    53d8:	str	r1, [r0, #8]
    53dc:	str	r9, [r0, #20]
    53e0:	str	r0, [r0, #96]	; 0x60
    53e4:	beq	5414 <sf_finish_parse+0x2204>
    53e8:	mov	r1, sl
    53ec:	ldr	r2, [r1, #44]	; 0x2c
    53f0:	add	r3, r1, #84	; 0x54
    53f4:	cmp	r2, #0
    53f8:	mov	r2, #84	; 0x54
    53fc:	movweq	r2, #60	; 0x3c
    5400:	addeq	r3, r1, #60	; 0x3c
    5404:	ldr	r1, [r1, r2]
    5408:	str	r0, [r3]
    540c:	cmp	r1, #0
    5410:	bne	53ec <sf_finish_parse+0x21dc>
    5414:	ldr	r0, [sl, #44]	; 0x2c
    5418:	clz	r0, r0
    541c:	lsr	r0, r0, #5
    5420:	str	r0, [sl, #44]	; 0x2c
    5424:	ldr	r5, [r8, r7, lsl #3]!
    5428:	cmp	r5, #207	; 0xcf
    542c:	bhi	5480 <sf_finish_parse+0x2270>
    5430:	ldr	r1, [pc, #280]	; 5550 <sf_finish_parse+0x2340>
    5434:	add	r0, r7, #1
    5438:	cmp	r7, #15
    543c:	add	r1, pc, r1
    5440:	str	r0, [r1]
    5444:	bge	54e8 <sf_finish_parse+0x22d8>
    5448:	mov	r1, #1024	; 0x400
    544c:	lsl	r5, r1, r0
    5450:	mov	r0, r5
    5454:	bl	dec <malloc@plt>
    5458:	cmp	r0, #0
    545c:	str	r0, [r8, #12]
    5460:	beq	54e8 <sf_finish_parse+0x22d8>
    5464:	mov	r1, #0
    5468:	mov	r2, r5
    546c:	add	r8, r8, #8
    5470:	bl	e58 <memset@plt>
    5474:	cmp	r5, #207	; 0xcf
    5478:	str	r5, [r8]
    547c:	bls	54e8 <sf_finish_parse+0x22d8>
    5480:	sub	r0, r5, #208	; 0xd0
    5484:	str	r0, [r8]
    5488:	ldr	r1, [r8, #4]
    548c:	add	r0, r1, r0
    5490:	mov	r1, #6
    5494:	str	r1, [r0, #8]
    5498:	mov	r1, #0
    549c:	str	r1, [r0, #20]
    54a0:	mov	r1, sl
    54a4:	str	r0, [r0, #96]	; 0x60
    54a8:	ldr	r2, [r1, #44]	; 0x2c
    54ac:	add	r3, r1, #84	; 0x54
    54b0:	cmp	r2, #0
    54b4:	mov	r2, #84	; 0x54
    54b8:	movweq	r2, #60	; 0x3c
    54bc:	addeq	r3, r1, #60	; 0x3c
    54c0:	ldr	r1, [r1, r2]
    54c4:	str	r0, [r3]
    54c8:	cmp	r1, #0
    54cc:	bne	54a8 <sf_finish_parse+0x2298>
    54d0:	ldr	r0, [sl, #96]	; 0x60
    54d4:	ldr	r1, [pc, #120]	; 5554 <sf_finish_parse+0x2344>
    54d8:	add	r1, pc, r1
    54dc:	str	r0, [r1]
    54e0:	sub	sp, fp, #28
    54e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    54e8:	ldr	r0, [pc, #108]	; 555c <sf_finish_parse+0x234c>
    54ec:	add	r0, pc, r0
    54f0:	bl	2068 <sf_bpf_error>
    54f4:	.word	0x00042fc8
    54f8:	.word	0x00042f24
    54fc:	.word	0x00042e80
    5500:	.word	0x00042dcc
    5504:	.word	0x00042d24
    5508:	.word	0x00042c7c
    550c:	.word	0x00042bd8
    5510:	.word	0x00042b28
    5514:	.word	0x00042a78
    5518:	.word	0x000429c8
    551c:	.word	0x00042920
    5520:	.word	0x00042878
    5524:	.word	0x000427d0
    5528:	.word	0x00042728
    552c:	.word	0x00042680
    5530:	.word	0x000425dc
    5534:	.word	0x00042538
    5538:	.word	0x00042490
    553c:	.word	0x000423c0
    5540:	.word	0x00042398
    5544:	.word	0x00042314
    5548:	.word	0x000420e0
    554c:	.word	0x00042198
    5550:	.word	0x000420c0
    5554:	.word	0x00041f48
    5558:	.word	0x000252d0
    555c:	.word	0x00025190

00005560 <sf_gen_and>:
    5560:	push	{r4, sl, fp, lr}
    5564:	add	fp, sp, #8
    5568:	sub	sp, sp, #4
    556c:	cmp	r0, #0
    5570:	beq	55a4 <sf_gen_and+0x44>
    5574:	ldr	ip, [r1, #96]	; 0x60
    5578:	mov	r3, r0
    557c:	ldr	lr, [r3, #44]	; 0x2c
    5580:	mov	r2, #84	; 0x54
    5584:	add	r4, r3, #84	; 0x54
    5588:	cmp	lr, #0
    558c:	movweq	r2, #60	; 0x3c
    5590:	addeq	r4, r3, #60	; 0x3c
    5594:	ldr	r3, [r3, r2]
    5598:	str	ip, [r4]
    559c:	cmp	r3, #0
    55a0:	bne	557c <sf_gen_and+0x1c>
    55a4:	ldr	r2, [r0, #44]	; 0x2c
    55a8:	cmp	r1, #0
    55ac:	clz	r2, r2
    55b0:	lsr	r2, r2, #5
    55b4:	str	r2, [r0, #44]	; 0x2c
    55b8:	ldr	r3, [r1, #44]	; 0x2c
    55bc:	clz	r2, r3
    55c0:	lsr	r2, r2, #5
    55c4:	str	r2, [r1, #44]	; 0x2c
    55c8:	str	r1, [sp]
    55cc:	beq	5618 <sf_gen_and+0xb8>
    55d0:	cmp	r3, #0
    55d4:	mov	r3, #60	; 0x3c
    55d8:	add	r2, r1, #60	; 0x3c
    55dc:	movweq	r3, #84	; 0x54
    55e0:	addeq	r2, r1, #84	; 0x54
    55e4:	ldr	r3, [r1, r3]
    55e8:	cmp	r3, #0
    55ec:	beq	561c <sf_gen_and+0xbc>
    55f0:	ldr	r4, [r3, #44]	; 0x2c
    55f4:	add	r2, r3, #84	; 0x54
    55f8:	cmp	r4, #0
    55fc:	mov	r4, #84	; 0x54
    5600:	movweq	r4, #60	; 0x3c
    5604:	addeq	r2, r3, #60	; 0x3c
    5608:	ldr	r3, [r3, r4]
    560c:	cmp	r3, #0
    5610:	bne	55f0 <sf_gen_and+0x90>
    5614:	b	561c <sf_gen_and+0xbc>
    5618:	mov	r2, sp
    561c:	str	r0, [r2]
    5620:	ldr	r2, [r1, #44]	; 0x2c
    5624:	clz	r2, r2
    5628:	lsr	r2, r2, #5
    562c:	str	r2, [r1, #44]	; 0x2c
    5630:	ldr	r0, [r0, #96]	; 0x60
    5634:	str	r0, [r1, #96]	; 0x60
    5638:	sub	sp, fp, #8
    563c:	pop	{r4, sl, fp, pc}

00005640 <sf_gen_or>:
    5640:	push	{r4, sl, fp, lr}
    5644:	add	fp, sp, #8
    5648:	sub	sp, sp, #4
    564c:	ldr	r2, [r0, #44]	; 0x2c
    5650:	cmp	r0, #0
    5654:	clz	r2, r2
    5658:	lsr	lr, r2, #5
    565c:	str	lr, [r0, #44]	; 0x2c
    5660:	beq	569c <sf_gen_or+0x5c>
    5664:	ldr	ip, [r1, #96]	; 0x60
    5668:	mov	r3, r0
    566c:	cmp	lr, #0
    5670:	mov	r2, #84	; 0x54
    5674:	add	r4, r3, #84	; 0x54
    5678:	movweq	r2, #60	; 0x3c
    567c:	addeq	r4, r3, #60	; 0x3c
    5680:	ldr	r3, [r3, r2]
    5684:	str	ip, [r4]
    5688:	cmp	r3, #0
    568c:	beq	5698 <sf_gen_or+0x58>
    5690:	ldr	lr, [r3, #44]	; 0x2c
    5694:	b	566c <sf_gen_or+0x2c>
    5698:	ldr	lr, [r0, #44]	; 0x2c
    569c:	clz	r2, lr
    56a0:	cmp	r1, #0
    56a4:	lsr	r2, r2, #5
    56a8:	str	r2, [r0, #44]	; 0x2c
    56ac:	str	r1, [sp]
    56b0:	beq	56e0 <sf_gen_or+0xa0>
    56b4:	mov	r3, r1
    56b8:	ldr	r4, [r3, #44]	; 0x2c
    56bc:	add	r2, r3, #84	; 0x54
    56c0:	cmp	r4, #0
    56c4:	mov	r4, #84	; 0x54
    56c8:	movweq	r4, #60	; 0x3c
    56cc:	addeq	r2, r3, #60	; 0x3c
    56d0:	ldr	r3, [r3, r4]
    56d4:	cmp	r3, #0
    56d8:	bne	56b8 <sf_gen_or+0x78>
    56dc:	b	56e4 <sf_gen_or+0xa4>
    56e0:	mov	r2, sp
    56e4:	str	r0, [r2]
    56e8:	ldr	r0, [r0, #96]	; 0x60
    56ec:	str	r0, [r1, #96]	; 0x60
    56f0:	sub	sp, fp, #8
    56f4:	pop	{r4, sl, fp, pc}

000056f8 <sf_gen_not>:
    56f8:	ldr	r1, [r0, #44]	; 0x2c
    56fc:	clz	r1, r1
    5700:	lsr	r1, r1, #5
    5704:	str	r1, [r0, #44]	; 0x2c
    5708:	bx	lr

0000570c <sf_gen_proto_abbrev>:
    570c:	push	{r4, r5, fp, lr}
    5710:	add	fp, sp, #8
    5714:	sub	sp, sp, #8
    5718:	sub	r0, r0, #1
    571c:	cmp	r0, #39	; 0x27
    5720:	bhi	68a4 <sf_gen_proto_abbrev+0x1198>
    5724:	add	r1, pc, #4
    5728:	ldr	r0, [r1, r0, lsl #2]
    572c:	add	pc, r1, r0
    5730:	.word	0x00001178
    5734:	.word	0x000000a0
    5738:	.word	0x000001b8
    573c:	.word	0x000001c0
    5740:	.word	0x000003b4
    5744:	.word	0x000001c8
    5748:	.word	0x00000424
    574c:	.word	0x00000238
    5750:	.word	0x00000240
    5754:	.word	0x00000494
    5758:	.word	0x000004ac
    575c:	.word	0x00000190
    5760:	.word	0x000004b4
    5764:	.word	0x000005b4
    5768:	.word	0x00000248
    576c:	.word	0x000004bc
    5770:	.word	0x00000198
    5774:	.word	0x000005bc
    5778:	.word	0x00000250
    577c:	.word	0x000002c0
    5780:	.word	0x000005c8
    5784:	.word	0x00000330
    5788:	.word	0x00000338
    578c:	.word	0x000004c4
    5790:	.word	0x00000638
    5794:	.word	0x000001a0
    5798:	.word	0x000001ac
    579c:	.word	0x00000644
    57a0:	.word	0x000006c8
    57a4:	.word	0x0000064c
    57a8:	.word	0x00000654
    57ac:	.word	0x000004cc
    57b0:	.word	0x00000340
    57b4:	.word	0x00001174
    57b8:	.word	0x00001174
    57bc:	.word	0x00000540
    57c0:	.word	0x0000011c
    57c4:	.word	0x000000a8
    57c8:	.word	0x000006d8
    57cc:	.word	0x00001184
    57d0:	mov	r0, #2048	; 0x800
    57d4:	b	5dfc <sf_gen_proto_abbrev+0x6f0>
    57d8:	mov	r0, #26
    57dc:	mov	r1, #26
    57e0:	mov	r2, #0
    57e4:	bl	68c8 <gen_proto>
    57e8:	mov	r5, r0
    57ec:	mov	r0, #27
    57f0:	mov	r1, #26
    57f4:	mov	r2, #0
    57f8:	bl	68c8 <gen_proto>
    57fc:	mov	r4, r0
    5800:	ldr	r0, [r5, #44]	; 0x2c
    5804:	cmp	r5, #0
    5808:	clz	r0, r0
    580c:	lsr	r0, r0, #5
    5810:	str	r0, [r5, #44]	; 0x2c
    5814:	beq	5e80 <sf_gen_proto_abbrev+0x774>
    5818:	ldr	r1, [r4, #96]	; 0x60
    581c:	mov	r2, r5
    5820:	cmp	r0, #0
    5824:	mov	r0, #84	; 0x54
    5828:	add	r3, r2, #84	; 0x54
    582c:	movweq	r0, #60	; 0x3c
    5830:	addeq	r3, r2, #60	; 0x3c
    5834:	ldr	r2, [r2, r0]
    5838:	str	r1, [r3]
    583c:	cmp	r2, #0
    5840:	beq	5e7c <sf_gen_proto_abbrev+0x770>
    5844:	ldr	r0, [r2, #44]	; 0x2c
    5848:	b	5820 <sf_gen_proto_abbrev+0x114>
    584c:	mov	r0, #24
    5850:	mov	r1, #26
    5854:	mov	r2, #0
    5858:	bl	68c8 <gen_proto>
    585c:	mov	r5, r0
    5860:	mov	r0, #25
    5864:	mov	r1, #26
    5868:	mov	r2, #0
    586c:	bl	68c8 <gen_proto>
    5870:	mov	r4, r0
    5874:	ldr	r0, [r5, #44]	; 0x2c
    5878:	cmp	r5, #0
    587c:	clz	r0, r0
    5880:	lsr	r0, r0, #5
    5884:	str	r0, [r5, #44]	; 0x2c
    5888:	beq	5ec8 <sf_gen_proto_abbrev+0x7bc>
    588c:	ldr	r1, [r4, #96]	; 0x60
    5890:	mov	r2, r5
    5894:	cmp	r0, #0
    5898:	mov	r0, #84	; 0x54
    589c:	add	r3, r2, #84	; 0x54
    58a0:	movweq	r0, #60	; 0x3c
    58a4:	addeq	r3, r2, #60	; 0x3c
    58a8:	ldr	r2, [r2, r0]
    58ac:	str	r1, [r3]
    58b0:	cmp	r2, #0
    58b4:	beq	5ec4 <sf_gen_proto_abbrev+0x7b8>
    58b8:	ldr	r0, [r2, #44]	; 0x2c
    58bc:	b	5894 <sf_gen_proto_abbrev+0x188>
    58c0:	movw	r0, #24579	; 0x6003
    58c4:	b	5dfc <sf_gen_proto_abbrev+0x6f0>
    58c8:	movw	r0, #34525	; 0x86dd
    58cc:	b	5dfc <sf_gen_proto_abbrev+0x6f0>
    58d0:	mov	r0, #131	; 0x83
    58d4:	mov	r1, #24
    58d8:	b	5bcc <sf_gen_proto_abbrev+0x4c0>
    58dc:	mov	r0, #129	; 0x81
    58e0:	mov	r1, #24
    58e4:	b	5bcc <sf_gen_proto_abbrev+0x4c0>
    58e8:	movw	r0, #2054	; 0x806
    58ec:	b	5dfc <sf_gen_proto_abbrev+0x6f0>
    58f0:	movw	r0, #32821	; 0x8035
    58f4:	b	5dfc <sf_gen_proto_abbrev+0x6f0>
    58f8:	mov	r0, #6
    58fc:	mov	r1, #2
    5900:	mov	r2, #0
    5904:	bl	68c8 <gen_proto>
    5908:	mov	r4, r0
    590c:	mov	r0, #6
    5910:	mov	r1, #17
    5914:	mov	r2, #0
    5918:	bl	68c8 <gen_proto>
    591c:	ldr	r1, [r0, #44]	; 0x2c
    5920:	cmp	r0, #0
    5924:	clz	r1, r1
    5928:	lsr	r1, r1, #5
    592c:	str	r1, [r0, #44]	; 0x2c
    5930:	beq	5f10 <sf_gen_proto_abbrev+0x804>
    5934:	ldr	r2, [r4, #96]	; 0x60
    5938:	mov	r3, r0
    593c:	cmp	r1, #0
    5940:	mov	r1, #84	; 0x54
    5944:	add	r5, r3, #84	; 0x54
    5948:	movweq	r1, #60	; 0x3c
    594c:	addeq	r5, r3, #60	; 0x3c
    5950:	ldr	r3, [r3, r1]
    5954:	str	r2, [r5]
    5958:	cmp	r3, #0
    595c:	beq	5f0c <sf_gen_proto_abbrev+0x800>
    5960:	ldr	r1, [r3, #44]	; 0x2c
    5964:	b	593c <sf_gen_proto_abbrev+0x230>
    5968:	mov	r0, #1
    596c:	b	5bc8 <sf_gen_proto_abbrev+0x4bc>
    5970:	mov	r0, #2
    5974:	b	5bc8 <sf_gen_proto_abbrev+0x4bc>
    5978:	movw	r0, #24578	; 0x6002
    597c:	b	5dfc <sf_gen_proto_abbrev+0x6f0>
    5980:	mov	r0, #51	; 0x33
    5984:	mov	r1, #2
    5988:	mov	r2, #0
    598c:	bl	68c8 <gen_proto>
    5990:	mov	r4, r0
    5994:	mov	r0, #51	; 0x33
    5998:	mov	r1, #17
    599c:	mov	r2, #0
    59a0:	bl	68c8 <gen_proto>
    59a4:	ldr	r1, [r0, #44]	; 0x2c
    59a8:	cmp	r0, #0
    59ac:	clz	r1, r1
    59b0:	lsr	r1, r1, #5
    59b4:	str	r1, [r0, #44]	; 0x2c
    59b8:	beq	5f58 <sf_gen_proto_abbrev+0x84c>
    59bc:	ldr	r2, [r4, #96]	; 0x60
    59c0:	mov	r3, r0
    59c4:	cmp	r1, #0
    59c8:	mov	r1, #84	; 0x54
    59cc:	add	r5, r3, #84	; 0x54
    59d0:	movweq	r1, #60	; 0x3c
    59d4:	addeq	r5, r3, #60	; 0x3c
    59d8:	ldr	r3, [r3, r1]
    59dc:	str	r2, [r5]
    59e0:	cmp	r3, #0
    59e4:	beq	5f54 <sf_gen_proto_abbrev+0x848>
    59e8:	ldr	r1, [r3, #44]	; 0x2c
    59ec:	b	59c4 <sf_gen_proto_abbrev+0x2b8>
    59f0:	mov	r0, #50	; 0x32
    59f4:	mov	r1, #2
    59f8:	mov	r2, #0
    59fc:	bl	68c8 <gen_proto>
    5a00:	mov	r4, r0
    5a04:	mov	r0, #50	; 0x32
    5a08:	mov	r1, #17
    5a0c:	mov	r2, #0
    5a10:	bl	68c8 <gen_proto>
    5a14:	ldr	r1, [r0, #44]	; 0x2c
    5a18:	cmp	r0, #0
    5a1c:	clz	r1, r1
    5a20:	lsr	r1, r1, #5
    5a24:	str	r1, [r0, #44]	; 0x2c
    5a28:	beq	5fa0 <sf_gen_proto_abbrev+0x894>
    5a2c:	ldr	r2, [r4, #96]	; 0x60
    5a30:	mov	r3, r0
    5a34:	cmp	r1, #0
    5a38:	mov	r1, #84	; 0x54
    5a3c:	add	r5, r3, #84	; 0x54
    5a40:	movweq	r1, #60	; 0x3c
    5a44:	addeq	r5, r3, #60	; 0x3c
    5a48:	ldr	r3, [r3, r1]
    5a4c:	str	r2, [r5]
    5a50:	cmp	r3, #0
    5a54:	beq	5f9c <sf_gen_proto_abbrev+0x890>
    5a58:	ldr	r1, [r3, #44]	; 0x2c
    5a5c:	b	5a34 <sf_gen_proto_abbrev+0x328>
    5a60:	mov	r0, #112	; 0x70
    5a64:	b	5bc8 <sf_gen_proto_abbrev+0x4bc>
    5a68:	movw	r0, #33011	; 0x80f3
    5a6c:	b	5dfc <sf_gen_proto_abbrev+0x6f0>
    5a70:	mov	r0, #15
    5a74:	mov	r1, #26
    5a78:	mov	r2, #0
    5a7c:	bl	68c8 <gen_proto>
    5a80:	mov	r5, r0
    5a84:	mov	r0, #16
    5a88:	mov	r1, #26
    5a8c:	mov	r2, #0
    5a90:	bl	68c8 <gen_proto>
    5a94:	mov	r4, r0
    5a98:	ldr	r0, [r5, #44]	; 0x2c
    5a9c:	cmp	r5, #0
    5aa0:	clz	r0, r0
    5aa4:	lsr	r0, r0, #5
    5aa8:	str	r0, [r5, #44]	; 0x2c
    5aac:	beq	5fe8 <sf_gen_proto_abbrev+0x8dc>
    5ab0:	ldr	r1, [r4, #96]	; 0x60
    5ab4:	mov	r2, r5
    5ab8:	cmp	r0, #0
    5abc:	mov	r0, #84	; 0x54
    5ac0:	add	r3, r2, #84	; 0x54
    5ac4:	movweq	r0, #60	; 0x3c
    5ac8:	addeq	r3, r2, #60	; 0x3c
    5acc:	ldr	r2, [r2, r0]
    5ad0:	str	r1, [r3]
    5ad4:	cmp	r2, #0
    5ad8:	beq	5fe4 <sf_gen_proto_abbrev+0x8d8>
    5adc:	ldr	r0, [r2, #44]	; 0x2c
    5ae0:	b	5ab8 <sf_gen_proto_abbrev+0x3ac>
    5ae4:	mov	r0, #132	; 0x84
    5ae8:	mov	r1, #2
    5aec:	mov	r2, #0
    5af0:	bl	68c8 <gen_proto>
    5af4:	mov	r4, r0
    5af8:	mov	r0, #132	; 0x84
    5afc:	mov	r1, #17
    5b00:	mov	r2, #0
    5b04:	bl	68c8 <gen_proto>
    5b08:	ldr	r1, [r0, #44]	; 0x2c
    5b0c:	cmp	r0, #0
    5b10:	clz	r1, r1
    5b14:	lsr	r1, r1, #5
    5b18:	str	r1, [r0, #44]	; 0x2c
    5b1c:	beq	6030 <sf_gen_proto_abbrev+0x924>
    5b20:	ldr	r2, [r4, #96]	; 0x60
    5b24:	mov	r3, r0
    5b28:	cmp	r1, #0
    5b2c:	mov	r1, #84	; 0x54
    5b30:	add	r5, r3, #84	; 0x54
    5b34:	movweq	r1, #60	; 0x3c
    5b38:	addeq	r5, r3, #60	; 0x3c
    5b3c:	ldr	r3, [r3, r1]
    5b40:	str	r2, [r5]
    5b44:	cmp	r3, #0
    5b48:	beq	602c <sf_gen_proto_abbrev+0x920>
    5b4c:	ldr	r1, [r3, #44]	; 0x2c
    5b50:	b	5b28 <sf_gen_proto_abbrev+0x41c>
    5b54:	mov	r0, #17
    5b58:	mov	r1, #2
    5b5c:	mov	r2, #0
    5b60:	bl	68c8 <gen_proto>
    5b64:	mov	r4, r0
    5b68:	mov	r0, #17
    5b6c:	mov	r1, #17
    5b70:	mov	r2, #0
    5b74:	bl	68c8 <gen_proto>
    5b78:	ldr	r1, [r0, #44]	; 0x2c
    5b7c:	cmp	r0, #0
    5b80:	clz	r1, r1
    5b84:	lsr	r1, r1, #5
    5b88:	str	r1, [r0, #44]	; 0x2c
    5b8c:	beq	6078 <sf_gen_proto_abbrev+0x96c>
    5b90:	ldr	r2, [r4, #96]	; 0x60
    5b94:	mov	r3, r0
    5b98:	cmp	r1, #0
    5b9c:	mov	r1, #84	; 0x54
    5ba0:	add	r5, r3, #84	; 0x54
    5ba4:	movweq	r1, #60	; 0x3c
    5ba8:	addeq	r5, r3, #60	; 0x3c
    5bac:	ldr	r3, [r3, r1]
    5bb0:	str	r2, [r5]
    5bb4:	cmp	r3, #0
    5bb8:	beq	6074 <sf_gen_proto_abbrev+0x968>
    5bbc:	ldr	r1, [r3, #44]	; 0x2c
    5bc0:	b	5b98 <sf_gen_proto_abbrev+0x48c>
    5bc4:	mov	r0, #9
    5bc8:	mov	r1, #2
    5bcc:	mov	r2, #0
    5bd0:	sub	sp, fp, #8
    5bd4:	pop	{r4, r5, fp, lr}
    5bd8:	b	68c8 <gen_proto>
    5bdc:	movw	r0, #32923	; 0x809b
    5be0:	b	5dfc <sf_gen_proto_abbrev+0x6f0>
    5be4:	movw	r0, #24580	; 0x6004
    5be8:	b	5dfc <sf_gen_proto_abbrev+0x6f0>
    5bec:	movw	r0, #24577	; 0x6001
    5bf0:	b	5dfc <sf_gen_proto_abbrev+0x6f0>
    5bf4:	mov	r0, #254	; 0xfe
    5bf8:	b	5dfc <sf_gen_proto_abbrev+0x6f0>
    5bfc:	mov	r0, #16
    5c00:	mov	r1, #26
    5c04:	mov	r2, #0
    5c08:	bl	68c8 <gen_proto>
    5c0c:	mov	r5, r0
    5c10:	mov	r0, #17
    5c14:	mov	r1, #26
    5c18:	mov	r2, #0
    5c1c:	bl	68c8 <gen_proto>
    5c20:	mov	r4, r0
    5c24:	ldr	r0, [r5, #44]	; 0x2c
    5c28:	cmp	r5, #0
    5c2c:	clz	r0, r0
    5c30:	lsr	r0, r0, #5
    5c34:	str	r0, [r5, #44]	; 0x2c
    5c38:	beq	60c0 <sf_gen_proto_abbrev+0x9b4>
    5c3c:	ldr	r1, [r4, #96]	; 0x60
    5c40:	mov	r2, r5
    5c44:	cmp	r0, #0
    5c48:	mov	r0, #84	; 0x54
    5c4c:	add	r3, r2, #84	; 0x54
    5c50:	movweq	r0, #60	; 0x3c
    5c54:	addeq	r3, r2, #60	; 0x3c
    5c58:	ldr	r2, [r2, r0]
    5c5c:	str	r1, [r3]
    5c60:	cmp	r2, #0
    5c64:	beq	60bc <sf_gen_proto_abbrev+0x9b0>
    5c68:	ldr	r0, [r2, #44]	; 0x2c
    5c6c:	b	5c44 <sf_gen_proto_abbrev+0x538>
    5c70:	mov	r0, #24
    5c74:	mov	r1, #26
    5c78:	mov	r2, #0
    5c7c:	bl	68c8 <gen_proto>
    5c80:	mov	r5, r0
    5c84:	mov	r0, #25
    5c88:	mov	r1, #26
    5c8c:	mov	r2, #0
    5c90:	bl	68c8 <gen_proto>
    5c94:	mov	r4, r0
    5c98:	ldr	r0, [r5, #44]	; 0x2c
    5c9c:	cmp	r5, #0
    5ca0:	clz	r0, r0
    5ca4:	lsr	r0, r0, #5
    5ca8:	str	r0, [r5, #44]	; 0x2c
    5cac:	beq	6108 <sf_gen_proto_abbrev+0x9fc>
    5cb0:	ldr	r1, [r4, #96]	; 0x60
    5cb4:	mov	r2, r5
    5cb8:	cmp	r0, #0
    5cbc:	mov	r0, #84	; 0x54
    5cc0:	add	r3, r2, #84	; 0x54
    5cc4:	movweq	r0, #60	; 0x3c
    5cc8:	addeq	r3, r2, #60	; 0x3c
    5ccc:	ldr	r2, [r2, r0]
    5cd0:	str	r1, [r3]
    5cd4:	cmp	r2, #0
    5cd8:	beq	6104 <sf_gen_proto_abbrev+0x9f8>
    5cdc:	ldr	r0, [r2, #44]	; 0x2c
    5ce0:	b	5cb8 <sf_gen_proto_abbrev+0x5ac>
    5ce4:	movw	r0, #24583	; 0x6007
    5ce8:	b	5dfc <sf_gen_proto_abbrev+0x6f0>
    5cec:	mov	r0, #58	; 0x3a
    5cf0:	mov	r1, #17
    5cf4:	b	5bcc <sf_gen_proto_abbrev+0x4c0>
    5cf8:	mov	r0, #103	; 0x67
    5cfc:	mov	r1, #2
    5d00:	mov	r2, #0
    5d04:	bl	68c8 <gen_proto>
    5d08:	mov	r4, r0
    5d0c:	mov	r0, #103	; 0x67
    5d10:	mov	r1, #17
    5d14:	mov	r2, #0
    5d18:	bl	68c8 <gen_proto>
    5d1c:	ldr	r1, [r0, #44]	; 0x2c
    5d20:	cmp	r0, #0
    5d24:	clz	r1, r1
    5d28:	lsr	r1, r1, #5
    5d2c:	str	r1, [r0, #44]	; 0x2c
    5d30:	beq	6150 <sf_gen_proto_abbrev+0xa44>
    5d34:	ldr	r2, [r4, #96]	; 0x60
    5d38:	mov	r3, r0
    5d3c:	cmp	r1, #0
    5d40:	mov	r1, #84	; 0x54
    5d44:	add	r5, r3, #84	; 0x54
    5d48:	movweq	r1, #60	; 0x3c
    5d4c:	addeq	r5, r3, #60	; 0x3c
    5d50:	ldr	r3, [r3, r1]
    5d54:	str	r2, [r5]
    5d58:	cmp	r3, #0
    5d5c:	beq	614c <sf_gen_proto_abbrev+0xa40>
    5d60:	ldr	r1, [r3, #44]	; 0x2c
    5d64:	b	5d3c <sf_gen_proto_abbrev+0x630>
    5d68:	mov	r0, #130	; 0x82
    5d6c:	mov	r1, #24
    5d70:	b	5bcc <sf_gen_proto_abbrev+0x4c0>
    5d74:	mov	r0, #66	; 0x42
    5d78:	b	5dfc <sf_gen_proto_abbrev+0x6f0>
    5d7c:	mov	r0, #240	; 0xf0
    5d80:	b	5dfc <sf_gen_proto_abbrev+0x6f0>
    5d84:	mov	r0, #15
    5d88:	mov	r1, #26
    5d8c:	mov	r2, #0
    5d90:	bl	68c8 <gen_proto>
    5d94:	mov	r5, r0
    5d98:	mov	r0, #17
    5d9c:	mov	r1, #26
    5da0:	mov	r2, #0
    5da4:	bl	68c8 <gen_proto>
    5da8:	mov	r4, r0
    5dac:	ldr	r0, [r5, #44]	; 0x2c
    5db0:	cmp	r5, #0
    5db4:	clz	r0, r0
    5db8:	lsr	r0, r0, #5
    5dbc:	str	r0, [r5, #44]	; 0x2c
    5dc0:	beq	6198 <sf_gen_proto_abbrev+0xa8c>
    5dc4:	ldr	r1, [r4, #96]	; 0x60
    5dc8:	mov	r2, r5
    5dcc:	cmp	r0, #0
    5dd0:	mov	r0, #84	; 0x54
    5dd4:	add	r3, r2, #84	; 0x54
    5dd8:	movweq	r0, #60	; 0x3c
    5ddc:	addeq	r3, r2, #60	; 0x3c
    5de0:	ldr	r2, [r2, r0]
    5de4:	str	r1, [r3]
    5de8:	cmp	r2, #0
    5dec:	beq	6194 <sf_gen_proto_abbrev+0xa88>
    5df0:	ldr	r0, [r2, #44]	; 0x2c
    5df4:	b	5dcc <sf_gen_proto_abbrev+0x6c0>
    5df8:	mov	r0, #224	; 0xe0
    5dfc:	sub	sp, fp, #8
    5e00:	pop	{r4, r5, fp, lr}
    5e04:	b	71fc <gen_linktype>
    5e08:	mov	r0, #18
    5e0c:	mov	r1, #26
    5e10:	mov	r2, #0
    5e14:	bl	68c8 <gen_proto>
    5e18:	mov	r5, r0
    5e1c:	mov	r0, #20
    5e20:	mov	r1, #26
    5e24:	mov	r2, #0
    5e28:	bl	68c8 <gen_proto>
    5e2c:	mov	r4, r0
    5e30:	ldr	r0, [r5, #44]	; 0x2c
    5e34:	cmp	r5, #0
    5e38:	clz	r0, r0
    5e3c:	lsr	r0, r0, #5
    5e40:	str	r0, [r5, #44]	; 0x2c
    5e44:	beq	61e0 <sf_gen_proto_abbrev+0xad4>
    5e48:	ldr	r1, [r4, #96]	; 0x60
    5e4c:	mov	r2, r5
    5e50:	cmp	r0, #0
    5e54:	mov	r0, #84	; 0x54
    5e58:	add	r3, r2, #84	; 0x54
    5e5c:	movweq	r0, #60	; 0x3c
    5e60:	addeq	r3, r2, #60	; 0x3c
    5e64:	ldr	r2, [r2, r0]
    5e68:	str	r1, [r3]
    5e6c:	cmp	r2, #0
    5e70:	beq	61dc <sf_gen_proto_abbrev+0xad0>
    5e74:	ldr	r0, [r2, #44]	; 0x2c
    5e78:	b	5e50 <sf_gen_proto_abbrev+0x744>
    5e7c:	ldr	r0, [r5, #44]	; 0x2c
    5e80:	clz	r0, r0
    5e84:	cmp	r4, #0
    5e88:	lsr	r0, r0, #5
    5e8c:	str	r0, [r5, #44]	; 0x2c
    5e90:	str	r4, [sp, #4]
    5e94:	beq	6224 <sf_gen_proto_abbrev+0xb18>
    5e98:	mov	r1, r4
    5e9c:	ldr	r2, [r1, #44]	; 0x2c
    5ea0:	add	r0, r1, #84	; 0x54
    5ea4:	cmp	r2, #0
    5ea8:	mov	r2, #84	; 0x54
    5eac:	movweq	r2, #60	; 0x3c
    5eb0:	addeq	r0, r1, #60	; 0x3c
    5eb4:	ldr	r1, [r1, r2]
    5eb8:	cmp	r1, #0
    5ebc:	bne	5e9c <sf_gen_proto_abbrev+0x790>
    5ec0:	b	6228 <sf_gen_proto_abbrev+0xb1c>
    5ec4:	ldr	r0, [r5, #44]	; 0x2c
    5ec8:	clz	r0, r0
    5ecc:	cmp	r4, #0
    5ed0:	lsr	r0, r0, #5
    5ed4:	str	r0, [r5, #44]	; 0x2c
    5ed8:	str	r4, [sp, #4]
    5edc:	beq	6224 <sf_gen_proto_abbrev+0xb18>
    5ee0:	mov	r1, r4
    5ee4:	ldr	r2, [r1, #44]	; 0x2c
    5ee8:	add	r0, r1, #84	; 0x54
    5eec:	cmp	r2, #0
    5ef0:	mov	r2, #84	; 0x54
    5ef4:	movweq	r2, #60	; 0x3c
    5ef8:	addeq	r0, r1, #60	; 0x3c
    5efc:	ldr	r1, [r1, r2]
    5f00:	cmp	r1, #0
    5f04:	bne	5ee4 <sf_gen_proto_abbrev+0x7d8>
    5f08:	b	6228 <sf_gen_proto_abbrev+0xb1c>
    5f0c:	ldr	r1, [r0, #44]	; 0x2c
    5f10:	clz	r1, r1
    5f14:	cmp	r4, #0
    5f18:	lsr	r1, r1, #5
    5f1c:	str	r1, [r0, #44]	; 0x2c
    5f20:	str	r4, [sp, #4]
    5f24:	beq	6888 <sf_gen_proto_abbrev+0x117c>
    5f28:	mov	r2, r4
    5f2c:	ldr	r3, [r2, #44]	; 0x2c
    5f30:	add	r1, r2, #84	; 0x54
    5f34:	cmp	r3, #0
    5f38:	mov	r3, #84	; 0x54
    5f3c:	movweq	r3, #60	; 0x3c
    5f40:	addeq	r1, r2, #60	; 0x3c
    5f44:	ldr	r2, [r2, r3]
    5f48:	cmp	r2, #0
    5f4c:	bne	5f2c <sf_gen_proto_abbrev+0x820>
    5f50:	b	688c <sf_gen_proto_abbrev+0x1180>
    5f54:	ldr	r1, [r0, #44]	; 0x2c
    5f58:	clz	r1, r1
    5f5c:	cmp	r4, #0
    5f60:	lsr	r1, r1, #5
    5f64:	str	r1, [r0, #44]	; 0x2c
    5f68:	str	r4, [sp, #4]
    5f6c:	beq	6888 <sf_gen_proto_abbrev+0x117c>
    5f70:	mov	r2, r4
    5f74:	ldr	r3, [r2, #44]	; 0x2c
    5f78:	add	r1, r2, #84	; 0x54
    5f7c:	cmp	r3, #0
    5f80:	mov	r3, #84	; 0x54
    5f84:	movweq	r3, #60	; 0x3c
    5f88:	addeq	r1, r2, #60	; 0x3c
    5f8c:	ldr	r2, [r2, r3]
    5f90:	cmp	r2, #0
    5f94:	bne	5f74 <sf_gen_proto_abbrev+0x868>
    5f98:	b	688c <sf_gen_proto_abbrev+0x1180>
    5f9c:	ldr	r1, [r0, #44]	; 0x2c
    5fa0:	clz	r1, r1
    5fa4:	cmp	r4, #0
    5fa8:	lsr	r1, r1, #5
    5fac:	str	r1, [r0, #44]	; 0x2c
    5fb0:	str	r4, [sp, #4]
    5fb4:	beq	6888 <sf_gen_proto_abbrev+0x117c>
    5fb8:	mov	r2, r4
    5fbc:	ldr	r3, [r2, #44]	; 0x2c
    5fc0:	add	r1, r2, #84	; 0x54
    5fc4:	cmp	r3, #0
    5fc8:	mov	r3, #84	; 0x54
    5fcc:	movweq	r3, #60	; 0x3c
    5fd0:	addeq	r1, r2, #60	; 0x3c
    5fd4:	ldr	r2, [r2, r3]
    5fd8:	cmp	r2, #0
    5fdc:	bne	5fbc <sf_gen_proto_abbrev+0x8b0>
    5fe0:	b	688c <sf_gen_proto_abbrev+0x1180>
    5fe4:	ldr	r0, [r5, #44]	; 0x2c
    5fe8:	clz	r0, r0
    5fec:	cmp	r4, #0
    5ff0:	lsr	r0, r0, #5
    5ff4:	str	r0, [r5, #44]	; 0x2c
    5ff8:	str	r4, [sp, #4]
    5ffc:	beq	6234 <sf_gen_proto_abbrev+0xb28>
    6000:	mov	r1, r4
    6004:	ldr	r2, [r1, #44]	; 0x2c
    6008:	add	r0, r1, #84	; 0x54
    600c:	cmp	r2, #0
    6010:	mov	r2, #84	; 0x54
    6014:	movweq	r2, #60	; 0x3c
    6018:	addeq	r0, r1, #60	; 0x3c
    601c:	ldr	r1, [r1, r2]
    6020:	cmp	r1, #0
    6024:	bne	6004 <sf_gen_proto_abbrev+0x8f8>
    6028:	b	6238 <sf_gen_proto_abbrev+0xb2c>
    602c:	ldr	r1, [r0, #44]	; 0x2c
    6030:	clz	r1, r1
    6034:	cmp	r4, #0
    6038:	lsr	r1, r1, #5
    603c:	str	r1, [r0, #44]	; 0x2c
    6040:	str	r4, [sp, #4]
    6044:	beq	6888 <sf_gen_proto_abbrev+0x117c>
    6048:	mov	r2, r4
    604c:	ldr	r3, [r2, #44]	; 0x2c
    6050:	add	r1, r2, #84	; 0x54
    6054:	cmp	r3, #0
    6058:	mov	r3, #84	; 0x54
    605c:	movweq	r3, #60	; 0x3c
    6060:	addeq	r1, r2, #60	; 0x3c
    6064:	ldr	r2, [r2, r3]
    6068:	cmp	r2, #0
    606c:	bne	604c <sf_gen_proto_abbrev+0x940>
    6070:	b	688c <sf_gen_proto_abbrev+0x1180>
    6074:	ldr	r1, [r0, #44]	; 0x2c
    6078:	clz	r1, r1
    607c:	cmp	r4, #0
    6080:	lsr	r1, r1, #5
    6084:	str	r1, [r0, #44]	; 0x2c
    6088:	str	r4, [sp, #4]
    608c:	beq	6888 <sf_gen_proto_abbrev+0x117c>
    6090:	mov	r2, r4
    6094:	ldr	r3, [r2, #44]	; 0x2c
    6098:	add	r1, r2, #84	; 0x54
    609c:	cmp	r3, #0
    60a0:	mov	r3, #84	; 0x54
    60a4:	movweq	r3, #60	; 0x3c
    60a8:	addeq	r1, r2, #60	; 0x3c
    60ac:	ldr	r2, [r2, r3]
    60b0:	cmp	r2, #0
    60b4:	bne	6094 <sf_gen_proto_abbrev+0x988>
    60b8:	b	688c <sf_gen_proto_abbrev+0x1180>
    60bc:	ldr	r0, [r5, #44]	; 0x2c
    60c0:	clz	r0, r0
    60c4:	cmp	r4, #0
    60c8:	lsr	r0, r0, #5
    60cc:	str	r0, [r5, #44]	; 0x2c
    60d0:	str	r4, [sp, #4]
    60d4:	beq	62e8 <sf_gen_proto_abbrev+0xbdc>
    60d8:	mov	r1, r4
    60dc:	ldr	r2, [r1, #44]	; 0x2c
    60e0:	add	r0, r1, #84	; 0x54
    60e4:	cmp	r2, #0
    60e8:	mov	r2, #84	; 0x54
    60ec:	movweq	r2, #60	; 0x3c
    60f0:	addeq	r0, r1, #60	; 0x3c
    60f4:	ldr	r1, [r1, r2]
    60f8:	cmp	r1, #0
    60fc:	bne	60dc <sf_gen_proto_abbrev+0x9d0>
    6100:	b	62ec <sf_gen_proto_abbrev+0xbe0>
    6104:	ldr	r0, [r5, #44]	; 0x2c
    6108:	clz	r0, r0
    610c:	cmp	r4, #0
    6110:	lsr	r0, r0, #5
    6114:	str	r0, [r5, #44]	; 0x2c
    6118:	str	r4, [sp, #4]
    611c:	beq	639c <sf_gen_proto_abbrev+0xc90>
    6120:	mov	r1, r4
    6124:	ldr	r2, [r1, #44]	; 0x2c
    6128:	add	r0, r1, #84	; 0x54
    612c:	cmp	r2, #0
    6130:	mov	r2, #84	; 0x54
    6134:	movweq	r2, #60	; 0x3c
    6138:	addeq	r0, r1, #60	; 0x3c
    613c:	ldr	r1, [r1, r2]
    6140:	cmp	r1, #0
    6144:	bne	6124 <sf_gen_proto_abbrev+0xa18>
    6148:	b	63a0 <sf_gen_proto_abbrev+0xc94>
    614c:	ldr	r1, [r0, #44]	; 0x2c
    6150:	clz	r1, r1
    6154:	cmp	r4, #0
    6158:	lsr	r1, r1, #5
    615c:	str	r1, [r0, #44]	; 0x2c
    6160:	str	r4, [sp, #4]
    6164:	beq	6888 <sf_gen_proto_abbrev+0x117c>
    6168:	mov	r2, r4
    616c:	ldr	r3, [r2, #44]	; 0x2c
    6170:	add	r1, r2, #84	; 0x54
    6174:	cmp	r3, #0
    6178:	mov	r3, #84	; 0x54
    617c:	movweq	r3, #60	; 0x3c
    6180:	addeq	r1, r2, #60	; 0x3c
    6184:	ldr	r2, [r2, r3]
    6188:	cmp	r2, #0
    618c:	bne	616c <sf_gen_proto_abbrev+0xa60>
    6190:	b	688c <sf_gen_proto_abbrev+0x1180>
    6194:	ldr	r0, [r5, #44]	; 0x2c
    6198:	clz	r0, r0
    619c:	cmp	r4, #0
    61a0:	lsr	r0, r0, #5
    61a4:	str	r0, [r5, #44]	; 0x2c
    61a8:	str	r4, [sp, #4]
    61ac:	beq	666c <sf_gen_proto_abbrev+0xf60>
    61b0:	mov	r1, r4
    61b4:	ldr	r2, [r1, #44]	; 0x2c
    61b8:	add	r0, r1, #84	; 0x54
    61bc:	cmp	r2, #0
    61c0:	mov	r2, #84	; 0x54
    61c4:	movweq	r2, #60	; 0x3c
    61c8:	addeq	r0, r1, #60	; 0x3c
    61cc:	ldr	r1, [r1, r2]
    61d0:	cmp	r1, #0
    61d4:	bne	61b4 <sf_gen_proto_abbrev+0xaa8>
    61d8:	b	6670 <sf_gen_proto_abbrev+0xf64>
    61dc:	ldr	r0, [r5, #44]	; 0x2c
    61e0:	clz	r0, r0
    61e4:	cmp	r4, #0
    61e8:	lsr	r0, r0, #5
    61ec:	str	r0, [r5, #44]	; 0x2c
    61f0:	str	r4, [sp, #4]
    61f4:	beq	6224 <sf_gen_proto_abbrev+0xb18>
    61f8:	mov	r1, r4
    61fc:	ldr	r2, [r1, #44]	; 0x2c
    6200:	add	r0, r1, #84	; 0x54
    6204:	cmp	r2, #0
    6208:	mov	r2, #84	; 0x54
    620c:	movweq	r2, #60	; 0x3c
    6210:	addeq	r0, r1, #60	; 0x3c
    6214:	ldr	r1, [r1, r2]
    6218:	cmp	r1, #0
    621c:	bne	61fc <sf_gen_proto_abbrev+0xaf0>
    6220:	b	6228 <sf_gen_proto_abbrev+0xb1c>
    6224:	add	r0, sp, #4
    6228:	str	r5, [r0]
    622c:	ldr	r0, [r5, #96]	; 0x60
    6230:	b	6894 <sf_gen_proto_abbrev+0x1188>
    6234:	add	r0, sp, #4
    6238:	str	r5, [r0]
    623c:	mov	r1, #26
    6240:	mov	r2, #0
    6244:	ldr	r0, [r5, #96]	; 0x60
    6248:	str	r0, [r4, #96]	; 0x60
    624c:	mov	r0, #17
    6250:	bl	68c8 <gen_proto>
    6254:	ldr	r1, [r0, #44]	; 0x2c
    6258:	cmp	r0, #0
    625c:	clz	r1, r1
    6260:	lsr	r1, r1, #5
    6264:	str	r1, [r0, #44]	; 0x2c
    6268:	beq	62a4 <sf_gen_proto_abbrev+0xb98>
    626c:	ldr	r2, [r4, #96]	; 0x60
    6270:	mov	r3, r0
    6274:	cmp	r1, #0
    6278:	mov	r1, #84	; 0x54
    627c:	add	r5, r3, #84	; 0x54
    6280:	movweq	r1, #60	; 0x3c
    6284:	addeq	r5, r3, #60	; 0x3c
    6288:	ldr	r3, [r3, r1]
    628c:	str	r2, [r5]
    6290:	cmp	r3, #0
    6294:	beq	62a0 <sf_gen_proto_abbrev+0xb94>
    6298:	ldr	r1, [r3, #44]	; 0x2c
    629c:	b	6274 <sf_gen_proto_abbrev+0xb68>
    62a0:	ldr	r1, [r0, #44]	; 0x2c
    62a4:	clz	r1, r1
    62a8:	cmp	r4, #0
    62ac:	lsr	r1, r1, #5
    62b0:	str	r1, [r0, #44]	; 0x2c
    62b4:	str	r4, [sp, #4]
    62b8:	beq	6888 <sf_gen_proto_abbrev+0x117c>
    62bc:	mov	r2, r4
    62c0:	ldr	r3, [r2, #44]	; 0x2c
    62c4:	add	r1, r2, #84	; 0x54
    62c8:	cmp	r3, #0
    62cc:	mov	r3, #84	; 0x54
    62d0:	movweq	r3, #60	; 0x3c
    62d4:	addeq	r1, r2, #60	; 0x3c
    62d8:	ldr	r2, [r2, r3]
    62dc:	cmp	r2, #0
    62e0:	bne	62c0 <sf_gen_proto_abbrev+0xbb4>
    62e4:	b	688c <sf_gen_proto_abbrev+0x1180>
    62e8:	add	r0, sp, #4
    62ec:	str	r5, [r0]
    62f0:	mov	r1, #26
    62f4:	mov	r2, #0
    62f8:	ldr	r0, [r5, #96]	; 0x60
    62fc:	str	r0, [r4, #96]	; 0x60
    6300:	mov	r0, #20
    6304:	bl	68c8 <gen_proto>
    6308:	ldr	r1, [r0, #44]	; 0x2c
    630c:	cmp	r0, #0
    6310:	clz	r1, r1
    6314:	lsr	r1, r1, #5
    6318:	str	r1, [r0, #44]	; 0x2c
    631c:	beq	6358 <sf_gen_proto_abbrev+0xc4c>
    6320:	ldr	r2, [r4, #96]	; 0x60
    6324:	mov	r3, r0
    6328:	cmp	r1, #0
    632c:	mov	r1, #84	; 0x54
    6330:	add	r5, r3, #84	; 0x54
    6334:	movweq	r1, #60	; 0x3c
    6338:	addeq	r5, r3, #60	; 0x3c
    633c:	ldr	r3, [r3, r1]
    6340:	str	r2, [r5]
    6344:	cmp	r3, #0
    6348:	beq	6354 <sf_gen_proto_abbrev+0xc48>
    634c:	ldr	r1, [r3, #44]	; 0x2c
    6350:	b	6328 <sf_gen_proto_abbrev+0xc1c>
    6354:	ldr	r1, [r0, #44]	; 0x2c
    6358:	clz	r1, r1
    635c:	cmp	r4, #0
    6360:	lsr	r1, r1, #5
    6364:	str	r1, [r0, #44]	; 0x2c
    6368:	str	r4, [sp, #4]
    636c:	beq	6450 <sf_gen_proto_abbrev+0xd44>
    6370:	mov	r2, r4
    6374:	ldr	r3, [r2, #44]	; 0x2c
    6378:	add	r1, r2, #84	; 0x54
    637c:	cmp	r3, #0
    6380:	mov	r3, #84	; 0x54
    6384:	movweq	r3, #60	; 0x3c
    6388:	addeq	r1, r2, #60	; 0x3c
    638c:	ldr	r2, [r2, r3]
    6390:	cmp	r2, #0
    6394:	bne	6374 <sf_gen_proto_abbrev+0xc68>
    6398:	b	6454 <sf_gen_proto_abbrev+0xd48>
    639c:	add	r0, sp, #4
    63a0:	str	r5, [r0]
    63a4:	mov	r1, #26
    63a8:	mov	r2, #0
    63ac:	ldr	r0, [r5, #96]	; 0x60
    63b0:	str	r0, [r4, #96]	; 0x60
    63b4:	mov	r0, #26
    63b8:	bl	68c8 <gen_proto>
    63bc:	ldr	r1, [r0, #44]	; 0x2c
    63c0:	cmp	r0, #0
    63c4:	clz	r1, r1
    63c8:	lsr	r1, r1, #5
    63cc:	str	r1, [r0, #44]	; 0x2c
    63d0:	beq	640c <sf_gen_proto_abbrev+0xd00>
    63d4:	ldr	r2, [r4, #96]	; 0x60
    63d8:	mov	r3, r0
    63dc:	cmp	r1, #0
    63e0:	mov	r1, #84	; 0x54
    63e4:	add	r5, r3, #84	; 0x54
    63e8:	movweq	r1, #60	; 0x3c
    63ec:	addeq	r5, r3, #60	; 0x3c
    63f0:	ldr	r3, [r3, r1]
    63f4:	str	r2, [r5]
    63f8:	cmp	r3, #0
    63fc:	beq	6408 <sf_gen_proto_abbrev+0xcfc>
    6400:	ldr	r1, [r3, #44]	; 0x2c
    6404:	b	63dc <sf_gen_proto_abbrev+0xcd0>
    6408:	ldr	r1, [r0, #44]	; 0x2c
    640c:	clz	r1, r1
    6410:	cmp	r4, #0
    6414:	lsr	r1, r1, #5
    6418:	str	r1, [r0, #44]	; 0x2c
    641c:	str	r4, [sp, #4]
    6420:	beq	6504 <sf_gen_proto_abbrev+0xdf8>
    6424:	mov	r2, r4
    6428:	ldr	r3, [r2, #44]	; 0x2c
    642c:	add	r1, r2, #84	; 0x54
    6430:	cmp	r3, #0
    6434:	mov	r3, #84	; 0x54
    6438:	movweq	r3, #60	; 0x3c
    643c:	addeq	r1, r2, #60	; 0x3c
    6440:	ldr	r2, [r2, r3]
    6444:	cmp	r2, #0
    6448:	bne	6428 <sf_gen_proto_abbrev+0xd1c>
    644c:	b	6508 <sf_gen_proto_abbrev+0xdfc>
    6450:	add	r1, sp, #4
    6454:	str	r0, [r1]
    6458:	mov	r1, #26
    645c:	mov	r2, #0
    6460:	ldr	r0, [r0, #96]	; 0x60
    6464:	str	r0, [r4, #96]	; 0x60
    6468:	mov	r0, #25
    646c:	bl	68c8 <gen_proto>
    6470:	ldr	r1, [r0, #44]	; 0x2c
    6474:	cmp	r0, #0
    6478:	clz	r1, r1
    647c:	lsr	r1, r1, #5
    6480:	str	r1, [r0, #44]	; 0x2c
    6484:	beq	64c0 <sf_gen_proto_abbrev+0xdb4>
    6488:	ldr	r2, [r4, #96]	; 0x60
    648c:	mov	r3, r0
    6490:	cmp	r1, #0
    6494:	mov	r1, #84	; 0x54
    6498:	add	r5, r3, #84	; 0x54
    649c:	movweq	r1, #60	; 0x3c
    64a0:	addeq	r5, r3, #60	; 0x3c
    64a4:	ldr	r3, [r3, r1]
    64a8:	str	r2, [r5]
    64ac:	cmp	r3, #0
    64b0:	beq	64bc <sf_gen_proto_abbrev+0xdb0>
    64b4:	ldr	r1, [r3, #44]	; 0x2c
    64b8:	b	6490 <sf_gen_proto_abbrev+0xd84>
    64bc:	ldr	r1, [r0, #44]	; 0x2c
    64c0:	clz	r1, r1
    64c4:	cmp	r4, #0
    64c8:	lsr	r1, r1, #5
    64cc:	str	r1, [r0, #44]	; 0x2c
    64d0:	str	r4, [sp, #4]
    64d4:	beq	65b8 <sf_gen_proto_abbrev+0xeac>
    64d8:	mov	r2, r4
    64dc:	ldr	r3, [r2, #44]	; 0x2c
    64e0:	add	r1, r2, #84	; 0x54
    64e4:	cmp	r3, #0
    64e8:	mov	r3, #84	; 0x54
    64ec:	movweq	r3, #60	; 0x3c
    64f0:	addeq	r1, r2, #60	; 0x3c
    64f4:	ldr	r2, [r2, r3]
    64f8:	cmp	r2, #0
    64fc:	bne	64dc <sf_gen_proto_abbrev+0xdd0>
    6500:	b	65bc <sf_gen_proto_abbrev+0xeb0>
    6504:	add	r1, sp, #4
    6508:	str	r0, [r1]
    650c:	mov	r1, #26
    6510:	mov	r2, #0
    6514:	ldr	r0, [r0, #96]	; 0x60
    6518:	str	r0, [r4, #96]	; 0x60
    651c:	mov	r0, #27
    6520:	bl	68c8 <gen_proto>
    6524:	ldr	r1, [r0, #44]	; 0x2c
    6528:	cmp	r0, #0
    652c:	clz	r1, r1
    6530:	lsr	r1, r1, #5
    6534:	str	r1, [r0, #44]	; 0x2c
    6538:	beq	6574 <sf_gen_proto_abbrev+0xe68>
    653c:	ldr	r2, [r4, #96]	; 0x60
    6540:	mov	r3, r0
    6544:	cmp	r1, #0
    6548:	mov	r1, #84	; 0x54
    654c:	add	r5, r3, #84	; 0x54
    6550:	movweq	r1, #60	; 0x3c
    6554:	addeq	r5, r3, #60	; 0x3c
    6558:	ldr	r3, [r3, r1]
    655c:	str	r2, [r5]
    6560:	cmp	r3, #0
    6564:	beq	6570 <sf_gen_proto_abbrev+0xe64>
    6568:	ldr	r1, [r3, #44]	; 0x2c
    656c:	b	6544 <sf_gen_proto_abbrev+0xe38>
    6570:	ldr	r1, [r0, #44]	; 0x2c
    6574:	clz	r1, r1
    6578:	cmp	r4, #0
    657c:	lsr	r1, r1, #5
    6580:	str	r1, [r0, #44]	; 0x2c
    6584:	str	r4, [sp, #4]
    6588:	beq	6888 <sf_gen_proto_abbrev+0x117c>
    658c:	mov	r2, r4
    6590:	ldr	r3, [r2, #44]	; 0x2c
    6594:	add	r1, r2, #84	; 0x54
    6598:	cmp	r3, #0
    659c:	mov	r3, #84	; 0x54
    65a0:	movweq	r3, #60	; 0x3c
    65a4:	addeq	r1, r2, #60	; 0x3c
    65a8:	ldr	r2, [r2, r3]
    65ac:	cmp	r2, #0
    65b0:	bne	6590 <sf_gen_proto_abbrev+0xe84>
    65b4:	b	688c <sf_gen_proto_abbrev+0x1180>
    65b8:	add	r1, sp, #4
    65bc:	str	r0, [r1]
    65c0:	mov	r1, #26
    65c4:	mov	r2, #0
    65c8:	ldr	r0, [r0, #96]	; 0x60
    65cc:	str	r0, [r4, #96]	; 0x60
    65d0:	mov	r0, #27
    65d4:	bl	68c8 <gen_proto>
    65d8:	ldr	r1, [r0, #44]	; 0x2c
    65dc:	cmp	r0, #0
    65e0:	clz	r1, r1
    65e4:	lsr	r1, r1, #5
    65e8:	str	r1, [r0, #44]	; 0x2c
    65ec:	beq	6628 <sf_gen_proto_abbrev+0xf1c>
    65f0:	ldr	r2, [r4, #96]	; 0x60
    65f4:	mov	r3, r0
    65f8:	cmp	r1, #0
    65fc:	mov	r1, #84	; 0x54
    6600:	add	r5, r3, #84	; 0x54
    6604:	movweq	r1, #60	; 0x3c
    6608:	addeq	r5, r3, #60	; 0x3c
    660c:	ldr	r3, [r3, r1]
    6610:	str	r2, [r5]
    6614:	cmp	r3, #0
    6618:	beq	6624 <sf_gen_proto_abbrev+0xf18>
    661c:	ldr	r1, [r3, #44]	; 0x2c
    6620:	b	65f8 <sf_gen_proto_abbrev+0xeec>
    6624:	ldr	r1, [r0, #44]	; 0x2c
    6628:	clz	r1, r1
    662c:	cmp	r4, #0
    6630:	lsr	r1, r1, #5
    6634:	str	r1, [r0, #44]	; 0x2c
    6638:	str	r4, [sp, #4]
    663c:	beq	6888 <sf_gen_proto_abbrev+0x117c>
    6640:	mov	r2, r4
    6644:	ldr	r3, [r2, #44]	; 0x2c
    6648:	add	r1, r2, #84	; 0x54
    664c:	cmp	r3, #0
    6650:	mov	r3, #84	; 0x54
    6654:	movweq	r3, #60	; 0x3c
    6658:	addeq	r1, r2, #60	; 0x3c
    665c:	ldr	r2, [r2, r3]
    6660:	cmp	r2, #0
    6664:	bne	6644 <sf_gen_proto_abbrev+0xf38>
    6668:	b	688c <sf_gen_proto_abbrev+0x1180>
    666c:	add	r0, sp, #4
    6670:	str	r5, [r0]
    6674:	mov	r1, #26
    6678:	mov	r2, #0
    667c:	ldr	r0, [r5, #96]	; 0x60
    6680:	str	r0, [r4, #96]	; 0x60
    6684:	mov	r0, #18
    6688:	bl	68c8 <gen_proto>
    668c:	ldr	r1, [r0, #44]	; 0x2c
    6690:	cmp	r0, #0
    6694:	clz	r1, r1
    6698:	lsr	r1, r1, #5
    669c:	str	r1, [r0, #44]	; 0x2c
    66a0:	beq	66dc <sf_gen_proto_abbrev+0xfd0>
    66a4:	ldr	r2, [r4, #96]	; 0x60
    66a8:	mov	r3, r0
    66ac:	cmp	r1, #0
    66b0:	mov	r1, #84	; 0x54
    66b4:	add	r5, r3, #84	; 0x54
    66b8:	movweq	r1, #60	; 0x3c
    66bc:	addeq	r5, r3, #60	; 0x3c
    66c0:	ldr	r3, [r3, r1]
    66c4:	str	r2, [r5]
    66c8:	cmp	r3, #0
    66cc:	beq	66d8 <sf_gen_proto_abbrev+0xfcc>
    66d0:	ldr	r1, [r3, #44]	; 0x2c
    66d4:	b	66ac <sf_gen_proto_abbrev+0xfa0>
    66d8:	ldr	r1, [r0, #44]	; 0x2c
    66dc:	clz	r1, r1
    66e0:	cmp	r4, #0
    66e4:	lsr	r1, r1, #5
    66e8:	str	r1, [r0, #44]	; 0x2c
    66ec:	str	r4, [sp, #4]
    66f0:	beq	6720 <sf_gen_proto_abbrev+0x1014>
    66f4:	mov	r2, r4
    66f8:	ldr	r3, [r2, #44]	; 0x2c
    66fc:	add	r1, r2, #84	; 0x54
    6700:	cmp	r3, #0
    6704:	mov	r3, #84	; 0x54
    6708:	movweq	r3, #60	; 0x3c
    670c:	addeq	r1, r2, #60	; 0x3c
    6710:	ldr	r2, [r2, r3]
    6714:	cmp	r2, #0
    6718:	bne	66f8 <sf_gen_proto_abbrev+0xfec>
    671c:	b	6724 <sf_gen_proto_abbrev+0x1018>
    6720:	add	r1, sp, #4
    6724:	str	r0, [r1]
    6728:	mov	r1, #26
    672c:	mov	r2, #0
    6730:	ldr	r0, [r0, #96]	; 0x60
    6734:	str	r0, [r4, #96]	; 0x60
    6738:	mov	r0, #24
    673c:	bl	68c8 <gen_proto>
    6740:	ldr	r1, [r0, #44]	; 0x2c
    6744:	cmp	r0, #0
    6748:	clz	r1, r1
    674c:	lsr	r1, r1, #5
    6750:	str	r1, [r0, #44]	; 0x2c
    6754:	beq	6790 <sf_gen_proto_abbrev+0x1084>
    6758:	ldr	r2, [r4, #96]	; 0x60
    675c:	mov	r3, r0
    6760:	cmp	r1, #0
    6764:	mov	r1, #84	; 0x54
    6768:	add	r5, r3, #84	; 0x54
    676c:	movweq	r1, #60	; 0x3c
    6770:	addeq	r5, r3, #60	; 0x3c
    6774:	ldr	r3, [r3, r1]
    6778:	str	r2, [r5]
    677c:	cmp	r3, #0
    6780:	beq	678c <sf_gen_proto_abbrev+0x1080>
    6784:	ldr	r1, [r3, #44]	; 0x2c
    6788:	b	6760 <sf_gen_proto_abbrev+0x1054>
    678c:	ldr	r1, [r0, #44]	; 0x2c
    6790:	clz	r1, r1
    6794:	cmp	r4, #0
    6798:	lsr	r1, r1, #5
    679c:	str	r1, [r0, #44]	; 0x2c
    67a0:	str	r4, [sp, #4]
    67a4:	beq	67d4 <sf_gen_proto_abbrev+0x10c8>
    67a8:	mov	r2, r4
    67ac:	ldr	r3, [r2, #44]	; 0x2c
    67b0:	add	r1, r2, #84	; 0x54
    67b4:	cmp	r3, #0
    67b8:	mov	r3, #84	; 0x54
    67bc:	movweq	r3, #60	; 0x3c
    67c0:	addeq	r1, r2, #60	; 0x3c
    67c4:	ldr	r2, [r2, r3]
    67c8:	cmp	r2, #0
    67cc:	bne	67ac <sf_gen_proto_abbrev+0x10a0>
    67d0:	b	67d8 <sf_gen_proto_abbrev+0x10cc>
    67d4:	add	r1, sp, #4
    67d8:	str	r0, [r1]
    67dc:	mov	r1, #26
    67e0:	mov	r2, #0
    67e4:	ldr	r0, [r0, #96]	; 0x60
    67e8:	str	r0, [r4, #96]	; 0x60
    67ec:	mov	r0, #26
    67f0:	bl	68c8 <gen_proto>
    67f4:	ldr	r1, [r0, #44]	; 0x2c
    67f8:	cmp	r0, #0
    67fc:	clz	r1, r1
    6800:	lsr	r1, r1, #5
    6804:	str	r1, [r0, #44]	; 0x2c
    6808:	beq	6844 <sf_gen_proto_abbrev+0x1138>
    680c:	ldr	r2, [r4, #96]	; 0x60
    6810:	mov	r3, r0
    6814:	cmp	r1, #0
    6818:	mov	r1, #84	; 0x54
    681c:	add	r5, r3, #84	; 0x54
    6820:	movweq	r1, #60	; 0x3c
    6824:	addeq	r5, r3, #60	; 0x3c
    6828:	ldr	r3, [r3, r1]
    682c:	str	r2, [r5]
    6830:	cmp	r3, #0
    6834:	beq	6840 <sf_gen_proto_abbrev+0x1134>
    6838:	ldr	r1, [r3, #44]	; 0x2c
    683c:	b	6814 <sf_gen_proto_abbrev+0x1108>
    6840:	ldr	r1, [r0, #44]	; 0x2c
    6844:	clz	r1, r1
    6848:	cmp	r4, #0
    684c:	lsr	r1, r1, #5
    6850:	str	r1, [r0, #44]	; 0x2c
    6854:	str	r4, [sp, #4]
    6858:	beq	6888 <sf_gen_proto_abbrev+0x117c>
    685c:	mov	r2, r4
    6860:	ldr	r3, [r2, #44]	; 0x2c
    6864:	add	r1, r2, #84	; 0x54
    6868:	cmp	r3, #0
    686c:	mov	r3, #84	; 0x54
    6870:	movweq	r3, #60	; 0x3c
    6874:	addeq	r1, r2, #60	; 0x3c
    6878:	ldr	r2, [r2, r3]
    687c:	cmp	r2, #0
    6880:	bne	6860 <sf_gen_proto_abbrev+0x1154>
    6884:	b	688c <sf_gen_proto_abbrev+0x1180>
    6888:	add	r1, sp, #4
    688c:	str	r0, [r1]
    6890:	ldr	r0, [r0, #96]	; 0x60
    6894:	str	r0, [r4, #96]	; 0x60
    6898:	mov	r0, r4
    689c:	sub	sp, fp, #8
    68a0:	pop	{r4, r5, fp, pc}
    68a4:	bl	edc <abort@plt>
    68a8:	ldr	r0, [pc, #16]	; 68c0 <sf_gen_proto_abbrev+0x11b4>
    68ac:	add	r0, pc, r0
    68b0:	bl	2068 <sf_bpf_error>
    68b4:	ldr	r0, [pc, #8]	; 68c4 <sf_gen_proto_abbrev+0x11b8>
    68b8:	add	r0, pc, r0
    68bc:	bl	2068 <sf_bpf_error>
    68c0:	.word	0x000232db
    68c4:	.word	0x000232f3

000068c8 <gen_proto>:
    68c8:	push	{r4, r5, r6, sl, fp, lr}
    68cc:	add	fp, sp, #16
    68d0:	sub	sp, sp, #8
    68d4:	cmp	r2, #0
    68d8:	bne	70ac <gen_proto+0x7e4>
    68dc:	cmp	r1, #40	; 0x28
    68e0:	bhi	7090 <gen_proto+0x7c8>
    68e4:	mov	r5, r0
    68e8:	add	r0, pc, #4
    68ec:	ldr	r1, [r0, r1, lsl #2]
    68f0:	add	pc, r0, r1
    68f4:	.word	0x000000a4
    68f8:	.word	0x00000348
    68fc:	.word	0x000001a8
    6900:	.word	0x000007c4
    6904:	.word	0x000007d0
    6908:	.word	0x000007dc
    690c:	.word	0x000007e8
    6910:	.word	0x000007f4
    6914:	.word	0x00000800
    6918:	.word	0x0000080c
    691c:	.word	0x00000818
    6920:	.word	0x00000824
    6924:	.word	0x00000830
    6928:	.word	0x0000083c
    692c:	.word	0x00000848
    6930:	.word	0x00000854
    6934:	.word	0x000007ac
    6938:	.word	0x00000358
    693c:	.word	0x000007a0
    6940:	.word	0x00000790
    6944:	.word	0x00000790
    6948:	.word	0x00000890
    694c:	.word	0x0000089c
    6950:	.word	0x0000079c
    6954:	.word	0x00000174
    6958:	.word	0x0000079c
    695c:	.word	0x00000274
    6960:	.word	0x0000079c
    6964:	.word	0x00000860
    6968:	.word	0x0000086c
    696c:	.word	0x00000878
    6970:	.word	0x0000079c
    6974:	.word	0x0000079c
    6978:	.word	0x0000079c
    697c:	.word	0x0000079c
    6980:	.word	0x0000079c
    6984:	.word	0x0000079c
    6988:	.word	0x0000079c
    698c:	.word	0x0000079c
    6990:	.word	0x0000079c
    6994:	.word	0x00000884
    6998:	mov	r0, #2048	; 0x800
    699c:	bl	71fc <gen_linktype>
    69a0:	mov	r6, r0
    69a4:	mov	r0, #3
    69a8:	mov	r1, #9
    69ac:	mov	r2, #16
    69b0:	mov	r3, r5
    69b4:	bl	a8f8 <gen_cmp>
    69b8:	mov	r4, r0
    69bc:	cmp	r6, #0
    69c0:	beq	69f4 <gen_proto+0x12c>
    69c4:	ldr	r0, [r4, #96]	; 0x60
    69c8:	mov	r1, r6
    69cc:	ldr	r2, [r1, #44]	; 0x2c
    69d0:	add	r3, r1, #84	; 0x54
    69d4:	cmp	r2, #0
    69d8:	mov	r2, #84	; 0x54
    69dc:	movweq	r2, #60	; 0x3c
    69e0:	addeq	r3, r1, #60	; 0x3c
    69e4:	ldr	r1, [r1, r2]
    69e8:	str	r0, [r3]
    69ec:	cmp	r1, #0
    69f0:	bne	69cc <gen_proto+0x104>
    69f4:	ldr	r0, [r6, #44]	; 0x2c
    69f8:	cmp	r4, #0
    69fc:	clz	r0, r0
    6a00:	lsr	r0, r0, #5
    6a04:	str	r0, [r6, #44]	; 0x2c
    6a08:	ldr	r1, [r4, #44]	; 0x2c
    6a0c:	clz	r0, r1
    6a10:	lsr	r0, r0, #5
    6a14:	str	r0, [r4, #44]	; 0x2c
    6a18:	str	r4, [sp, #4]
    6a1c:	beq	6d18 <gen_proto+0x450>
    6a20:	cmp	r1, #0
    6a24:	mov	r1, #60	; 0x3c
    6a28:	add	r0, r4, #60	; 0x3c
    6a2c:	movweq	r1, #84	; 0x54
    6a30:	addeq	r0, r4, #84	; 0x54
    6a34:	ldr	r1, [r4, r1]
    6a38:	cmp	r1, #0
    6a3c:	beq	6d1c <gen_proto+0x454>
    6a40:	ldr	r2, [r1, #44]	; 0x2c
    6a44:	add	r0, r1, #84	; 0x54
    6a48:	cmp	r2, #0
    6a4c:	mov	r2, #84	; 0x54
    6a50:	movweq	r2, #60	; 0x3c
    6a54:	addeq	r0, r1, #60	; 0x3c
    6a58:	ldr	r1, [r1, r2]
    6a5c:	cmp	r1, #0
    6a60:	bne	6a40 <gen_proto+0x178>
    6a64:	b	6d1c <gen_proto+0x454>
    6a68:	ldr	r0, [pc, #1836]	; 719c <gen_proto+0x8d4>
    6a6c:	ldr	r0, [pc, r0]
    6a70:	cmp	r0, #104	; 0x68
    6a74:	beq	6ec4 <gen_proto+0x5fc>
    6a78:	cmp	r0, #107	; 0x6b
    6a7c:	bne	6f90 <gen_proto+0x6c8>
    6a80:	orr	r3, r5, #768	; 0x300
    6a84:	mov	r0, #1
    6a88:	mov	r1, #2
    6a8c:	mov	r2, #8
    6a90:	sub	sp, fp, #16
    6a94:	pop	{r4, r5, r6, sl, fp, lr}
    6a98:	b	a8f8 <gen_cmp>
    6a9c:	mov	r0, #2048	; 0x800
    6aa0:	bl	71fc <gen_linktype>
    6aa4:	mov	r4, r0
    6aa8:	mov	r0, #3
    6aac:	mov	r1, #9
    6ab0:	mov	r2, #16
    6ab4:	mov	r3, r5
    6ab8:	bl	a8f8 <gen_cmp>
    6abc:	cmp	r4, #0
    6ac0:	beq	6af4 <gen_proto+0x22c>
    6ac4:	ldr	r1, [r0, #96]	; 0x60
    6ac8:	mov	r2, r4
    6acc:	ldr	r3, [r2, #44]	; 0x2c
    6ad0:	add	r6, r2, #84	; 0x54
    6ad4:	cmp	r3, #0
    6ad8:	mov	r3, #84	; 0x54
    6adc:	movweq	r3, #60	; 0x3c
    6ae0:	addeq	r6, r2, #60	; 0x3c
    6ae4:	ldr	r2, [r2, r3]
    6ae8:	str	r1, [r6]
    6aec:	cmp	r2, #0
    6af0:	bne	6acc <gen_proto+0x204>
    6af4:	ldr	r1, [r4, #44]	; 0x2c
    6af8:	cmp	r0, #0
    6afc:	clz	r1, r1
    6b00:	lsr	r1, r1, #5
    6b04:	str	r1, [r4, #44]	; 0x2c
    6b08:	ldr	r2, [r0, #44]	; 0x2c
    6b0c:	clz	r1, r2
    6b10:	lsr	r1, r1, #5
    6b14:	str	r1, [r0, #44]	; 0x2c
    6b18:	str	r0, [sp, #4]
    6b1c:	beq	705c <gen_proto+0x794>
    6b20:	cmp	r2, #0
    6b24:	mov	r2, #60	; 0x3c
    6b28:	add	r1, r0, #60	; 0x3c
    6b2c:	movweq	r2, #84	; 0x54
    6b30:	addeq	r1, r0, #84	; 0x54
    6b34:	ldr	r2, [r0, r2]
    6b38:	cmp	r2, #0
    6b3c:	beq	7060 <gen_proto+0x798>
    6b40:	ldr	r3, [r2, #44]	; 0x2c
    6b44:	add	r1, r2, #84	; 0x54
    6b48:	cmp	r3, #0
    6b4c:	mov	r3, #84	; 0x54
    6b50:	movweq	r3, #60	; 0x3c
    6b54:	addeq	r1, r2, #60	; 0x3c
    6b58:	ldr	r2, [r2, r3]
    6b5c:	cmp	r2, #0
    6b60:	bne	6b40 <gen_proto+0x278>
    6b64:	b	7060 <gen_proto+0x798>
    6b68:	mov	r0, #131	; 0x83
    6b6c:	mov	r1, #24
    6b70:	mov	r2, #0
    6b74:	bl	68c8 <gen_proto>
    6b78:	mov	r4, r0
    6b7c:	mov	r0, #4
    6b80:	mov	r1, #4
    6b84:	mov	r2, #16
    6b88:	mov	r3, r5
    6b8c:	bl	a8f8 <gen_cmp>
    6b90:	cmp	r4, #0
    6b94:	beq	6bc8 <gen_proto+0x300>
    6b98:	ldr	r1, [r0, #96]	; 0x60
    6b9c:	mov	r2, r4
    6ba0:	ldr	r3, [r2, #44]	; 0x2c
    6ba4:	add	r6, r2, #84	; 0x54
    6ba8:	cmp	r3, #0
    6bac:	mov	r3, #84	; 0x54
    6bb0:	movweq	r3, #60	; 0x3c
    6bb4:	addeq	r6, r2, #60	; 0x3c
    6bb8:	ldr	r2, [r2, r3]
    6bbc:	str	r1, [r6]
    6bc0:	cmp	r2, #0
    6bc4:	bne	6ba0 <gen_proto+0x2d8>
    6bc8:	ldr	r1, [r4, #44]	; 0x2c
    6bcc:	cmp	r0, #0
    6bd0:	clz	r1, r1
    6bd4:	lsr	r1, r1, #5
    6bd8:	str	r1, [r4, #44]	; 0x2c
    6bdc:	ldr	r2, [r0, #44]	; 0x2c
    6be0:	clz	r1, r2
    6be4:	lsr	r1, r1, #5
    6be8:	str	r1, [r0, #44]	; 0x2c
    6bec:	str	r0, [sp, #4]
    6bf0:	beq	705c <gen_proto+0x794>
    6bf4:	cmp	r2, #0
    6bf8:	mov	r2, #60	; 0x3c
    6bfc:	add	r1, r0, #60	; 0x3c
    6c00:	movweq	r2, #84	; 0x54
    6c04:	addeq	r1, r0, #84	; 0x54
    6c08:	ldr	r2, [r0, r2]
    6c0c:	cmp	r2, #0
    6c10:	beq	7060 <gen_proto+0x798>
    6c14:	ldr	r3, [r2, #44]	; 0x2c
    6c18:	add	r1, r2, #84	; 0x54
    6c1c:	cmp	r3, #0
    6c20:	mov	r3, #84	; 0x54
    6c24:	movweq	r3, #60	; 0x3c
    6c28:	addeq	r1, r2, #60	; 0x3c
    6c2c:	ldr	r2, [r2, r3]
    6c30:	cmp	r2, #0
    6c34:	bne	6c14 <gen_proto+0x34c>
    6c38:	b	7060 <gen_proto+0x798>
    6c3c:	mov	r0, r5
    6c40:	sub	sp, fp, #16
    6c44:	pop	{r4, r5, r6, sl, fp, lr}
    6c48:	b	71fc <gen_linktype>
    6c4c:	movw	r0, #34525	; 0x86dd
    6c50:	bl	71fc <gen_linktype>
    6c54:	mov	r4, r0
    6c58:	mov	r0, #3
    6c5c:	mov	r1, #6
    6c60:	mov	r2, #16
    6c64:	mov	r3, r5
    6c68:	bl	a8f8 <gen_cmp>
    6c6c:	cmp	r4, #0
    6c70:	beq	6ca4 <gen_proto+0x3dc>
    6c74:	ldr	r1, [r0, #96]	; 0x60
    6c78:	mov	r2, r4
    6c7c:	ldr	r3, [r2, #44]	; 0x2c
    6c80:	add	r6, r2, #84	; 0x54
    6c84:	cmp	r3, #0
    6c88:	mov	r3, #84	; 0x54
    6c8c:	movweq	r3, #60	; 0x3c
    6c90:	addeq	r6, r2, #60	; 0x3c
    6c94:	ldr	r2, [r2, r3]
    6c98:	str	r1, [r6]
    6c9c:	cmp	r2, #0
    6ca0:	bne	6c7c <gen_proto+0x3b4>
    6ca4:	ldr	r1, [r4, #44]	; 0x2c
    6ca8:	cmp	r0, #0
    6cac:	clz	r1, r1
    6cb0:	lsr	r1, r1, #5
    6cb4:	str	r1, [r4, #44]	; 0x2c
    6cb8:	ldr	r2, [r0, #44]	; 0x2c
    6cbc:	clz	r1, r2
    6cc0:	lsr	r1, r1, #5
    6cc4:	str	r1, [r0, #44]	; 0x2c
    6cc8:	str	r0, [sp, #4]
    6ccc:	beq	705c <gen_proto+0x794>
    6cd0:	cmp	r2, #0
    6cd4:	mov	r2, #60	; 0x3c
    6cd8:	add	r1, r0, #60	; 0x3c
    6cdc:	movweq	r2, #84	; 0x54
    6ce0:	addeq	r1, r0, #84	; 0x54
    6ce4:	ldr	r2, [r0, r2]
    6ce8:	cmp	r2, #0
    6cec:	beq	7060 <gen_proto+0x798>
    6cf0:	ldr	r3, [r2, #44]	; 0x2c
    6cf4:	add	r1, r2, #84	; 0x54
    6cf8:	cmp	r3, #0
    6cfc:	mov	r3, #84	; 0x54
    6d00:	movweq	r3, #60	; 0x3c
    6d04:	addeq	r1, r2, #60	; 0x3c
    6d08:	ldr	r2, [r2, r3]
    6d0c:	cmp	r2, #0
    6d10:	bne	6cf0 <gen_proto+0x428>
    6d14:	b	7060 <gen_proto+0x798>
    6d18:	add	r0, sp, #4
    6d1c:	str	r6, [r0]
    6d20:	ldr	r0, [r4, #44]	; 0x2c
    6d24:	clz	r0, r0
    6d28:	lsr	r0, r0, #5
    6d2c:	str	r0, [r4, #44]	; 0x2c
    6d30:	ldr	r0, [r6, #96]	; 0x60
    6d34:	str	r0, [r4, #96]	; 0x60
    6d38:	movw	r0, #34525	; 0x86dd
    6d3c:	bl	71fc <gen_linktype>
    6d40:	mov	r6, r0
    6d44:	mov	r0, #3
    6d48:	mov	r1, #6
    6d4c:	mov	r2, #16
    6d50:	mov	r3, r5
    6d54:	bl	a8f8 <gen_cmp>
    6d58:	cmp	r6, #0
    6d5c:	beq	6d90 <gen_proto+0x4c8>
    6d60:	ldr	r1, [r0, #96]	; 0x60
    6d64:	mov	r2, r6
    6d68:	ldr	r3, [r2, #44]	; 0x2c
    6d6c:	add	r5, r2, #84	; 0x54
    6d70:	cmp	r3, #0
    6d74:	mov	r3, #84	; 0x54
    6d78:	movweq	r3, #60	; 0x3c
    6d7c:	addeq	r5, r2, #60	; 0x3c
    6d80:	ldr	r2, [r2, r3]
    6d84:	str	r1, [r5]
    6d88:	cmp	r2, #0
    6d8c:	bne	6d68 <gen_proto+0x4a0>
    6d90:	ldr	r1, [r6, #44]	; 0x2c
    6d94:	cmp	r0, #0
    6d98:	clz	r1, r1
    6d9c:	lsr	r1, r1, #5
    6da0:	str	r1, [r6, #44]	; 0x2c
    6da4:	ldr	r2, [r0, #44]	; 0x2c
    6da8:	clz	r1, r2
    6dac:	lsr	r1, r1, #5
    6db0:	str	r1, [r0, #44]	; 0x2c
    6db4:	str	r0, [sp, #4]
    6db8:	beq	6e04 <gen_proto+0x53c>
    6dbc:	cmp	r2, #0
    6dc0:	mov	r2, #60	; 0x3c
    6dc4:	add	r1, r0, #60	; 0x3c
    6dc8:	movweq	r2, #84	; 0x54
    6dcc:	addeq	r1, r0, #84	; 0x54
    6dd0:	ldr	r2, [r0, r2]
    6dd4:	cmp	r2, #0
    6dd8:	beq	6e08 <gen_proto+0x540>
    6ddc:	ldr	r3, [r2, #44]	; 0x2c
    6de0:	add	r1, r2, #84	; 0x54
    6de4:	cmp	r3, #0
    6de8:	mov	r3, #84	; 0x54
    6dec:	movweq	r3, #60	; 0x3c
    6df0:	addeq	r1, r2, #60	; 0x3c
    6df4:	ldr	r2, [r2, r3]
    6df8:	cmp	r2, #0
    6dfc:	bne	6ddc <gen_proto+0x514>
    6e00:	b	6e08 <gen_proto+0x540>
    6e04:	add	r1, sp, #4
    6e08:	str	r6, [r1]
    6e0c:	cmp	r4, #0
    6e10:	ldr	r1, [r0, #44]	; 0x2c
    6e14:	clz	r1, r1
    6e18:	lsr	r1, r1, #5
    6e1c:	str	r1, [r0, #44]	; 0x2c
    6e20:	ldr	r1, [r6, #96]	; 0x60
    6e24:	str	r1, [r0, #96]	; 0x60
    6e28:	ldr	r1, [r4, #44]	; 0x2c
    6e2c:	clz	r1, r1
    6e30:	lsr	r1, r1, #5
    6e34:	str	r1, [r4, #44]	; 0x2c
    6e38:	beq	6e74 <gen_proto+0x5ac>
    6e3c:	ldr	r2, [r0, #96]	; 0x60
    6e40:	mov	r3, r4
    6e44:	cmp	r1, #0
    6e48:	mov	r1, #84	; 0x54
    6e4c:	add	r6, r3, #84	; 0x54
    6e50:	movweq	r1, #60	; 0x3c
    6e54:	addeq	r6, r3, #60	; 0x3c
    6e58:	ldr	r3, [r3, r1]
    6e5c:	str	r2, [r6]
    6e60:	cmp	r3, #0
    6e64:	beq	6e70 <gen_proto+0x5a8>
    6e68:	ldr	r1, [r3, #44]	; 0x2c
    6e6c:	b	6e44 <gen_proto+0x57c>
    6e70:	ldr	r1, [r4, #44]	; 0x2c
    6e74:	clz	r1, r1
    6e78:	cmp	r0, #0
    6e7c:	lsr	r1, r1, #5
    6e80:	str	r1, [r4, #44]	; 0x2c
    6e84:	str	r0, [sp, #4]
    6e88:	beq	6eb8 <gen_proto+0x5f0>
    6e8c:	mov	r2, r0
    6e90:	ldr	r3, [r2, #44]	; 0x2c
    6e94:	add	r1, r2, #84	; 0x54
    6e98:	cmp	r3, #0
    6e9c:	mov	r3, #84	; 0x54
    6ea0:	movweq	r3, #60	; 0x3c
    6ea4:	addeq	r1, r2, #60	; 0x3c
    6ea8:	ldr	r2, [r2, r3]
    6eac:	cmp	r2, #0
    6eb0:	bne	6e90 <gen_proto+0x5c8>
    6eb4:	b	6ebc <gen_proto+0x5f4>
    6eb8:	add	r1, sp, #4
    6ebc:	str	r4, [r1]
    6ec0:	b	7074 <gen_proto+0x7ac>
    6ec4:	movw	r0, #65278	; 0xfefe
    6ec8:	bl	71fc <gen_linktype>
    6ecc:	mov	r4, r0
    6ed0:	mov	r0, #4
    6ed4:	mov	r1, #1
    6ed8:	mov	r2, #16
    6edc:	mov	r3, r5
    6ee0:	bl	a8f8 <gen_cmp>
    6ee4:	cmp	r4, #0
    6ee8:	beq	6f1c <gen_proto+0x654>
    6eec:	ldr	r1, [r0, #96]	; 0x60
    6ef0:	mov	r2, r4
    6ef4:	ldr	r3, [r2, #44]	; 0x2c
    6ef8:	add	r6, r2, #84	; 0x54
    6efc:	cmp	r3, #0
    6f00:	mov	r3, #84	; 0x54
    6f04:	movweq	r3, #60	; 0x3c
    6f08:	addeq	r6, r2, #60	; 0x3c
    6f0c:	ldr	r2, [r2, r3]
    6f10:	str	r1, [r6]
    6f14:	cmp	r2, #0
    6f18:	bne	6ef4 <gen_proto+0x62c>
    6f1c:	ldr	r1, [r4, #44]	; 0x2c
    6f20:	cmp	r0, #0
    6f24:	clz	r1, r1
    6f28:	lsr	r1, r1, #5
    6f2c:	str	r1, [r4, #44]	; 0x2c
    6f30:	ldr	r2, [r0, #44]	; 0x2c
    6f34:	clz	r1, r2
    6f38:	lsr	r1, r1, #5
    6f3c:	str	r1, [r0, #44]	; 0x2c
    6f40:	str	r0, [sp, #4]
    6f44:	beq	705c <gen_proto+0x794>
    6f48:	cmp	r2, #0
    6f4c:	mov	r2, #60	; 0x3c
    6f50:	add	r1, r0, #60	; 0x3c
    6f54:	movweq	r2, #84	; 0x54
    6f58:	addeq	r1, r0, #84	; 0x54
    6f5c:	ldr	r2, [r0, r2]
    6f60:	cmp	r2, #0
    6f64:	beq	7060 <gen_proto+0x798>
    6f68:	ldr	r3, [r2, #44]	; 0x2c
    6f6c:	add	r1, r2, #84	; 0x54
    6f70:	cmp	r3, #0
    6f74:	mov	r3, #84	; 0x54
    6f78:	movweq	r3, #60	; 0x3c
    6f7c:	addeq	r1, r2, #60	; 0x3c
    6f80:	ldr	r2, [r2, r3]
    6f84:	cmp	r2, #0
    6f88:	bne	6f68 <gen_proto+0x6a0>
    6f8c:	b	7060 <gen_proto+0x798>
    6f90:	mov	r0, #254	; 0xfe
    6f94:	bl	71fc <gen_linktype>
    6f98:	mov	r4, r0
    6f9c:	mov	r0, #4
    6fa0:	mov	r1, #0
    6fa4:	mov	r2, #16
    6fa8:	mov	r3, r5
    6fac:	bl	a8f8 <gen_cmp>
    6fb0:	cmp	r4, #0
    6fb4:	beq	6fe8 <gen_proto+0x720>
    6fb8:	ldr	r1, [r0, #96]	; 0x60
    6fbc:	mov	r2, r4
    6fc0:	ldr	r3, [r2, #44]	; 0x2c
    6fc4:	add	r6, r2, #84	; 0x54
    6fc8:	cmp	r3, #0
    6fcc:	mov	r3, #84	; 0x54
    6fd0:	movweq	r3, #60	; 0x3c
    6fd4:	addeq	r6, r2, #60	; 0x3c
    6fd8:	ldr	r2, [r2, r3]
    6fdc:	str	r1, [r6]
    6fe0:	cmp	r2, #0
    6fe4:	bne	6fc0 <gen_proto+0x6f8>
    6fe8:	ldr	r1, [r4, #44]	; 0x2c
    6fec:	cmp	r0, #0
    6ff0:	clz	r1, r1
    6ff4:	lsr	r1, r1, #5
    6ff8:	str	r1, [r4, #44]	; 0x2c
    6ffc:	ldr	r2, [r0, #44]	; 0x2c
    7000:	clz	r1, r2
    7004:	lsr	r1, r1, #5
    7008:	str	r1, [r0, #44]	; 0x2c
    700c:	str	r0, [sp, #4]
    7010:	beq	705c <gen_proto+0x794>
    7014:	cmp	r2, #0
    7018:	mov	r2, #60	; 0x3c
    701c:	add	r1, r0, #60	; 0x3c
    7020:	movweq	r2, #84	; 0x54
    7024:	addeq	r1, r0, #84	; 0x54
    7028:	ldr	r2, [r0, r2]
    702c:	cmp	r2, #0
    7030:	beq	7060 <gen_proto+0x798>
    7034:	ldr	r3, [r2, #44]	; 0x2c
    7038:	add	r1, r2, #84	; 0x54
    703c:	cmp	r3, #0
    7040:	mov	r3, #84	; 0x54
    7044:	movweq	r3, #60	; 0x3c
    7048:	addeq	r1, r2, #60	; 0x3c
    704c:	ldr	r2, [r2, r3]
    7050:	cmp	r2, #0
    7054:	bne	7034 <gen_proto+0x76c>
    7058:	b	7060 <gen_proto+0x798>
    705c:	add	r1, sp, #4
    7060:	str	r4, [r1]
    7064:	ldr	r1, [r0, #44]	; 0x2c
    7068:	clz	r1, r1
    706c:	lsr	r1, r1, #5
    7070:	str	r1, [r0, #44]	; 0x2c
    7074:	ldr	r1, [r4, #96]	; 0x60
    7078:	str	r1, [r0, #96]	; 0x60
    707c:	sub	sp, fp, #16
    7080:	pop	{r4, r5, r6, sl, fp, pc}
    7084:	ldr	r0, [pc, #344]	; 71e4 <gen_proto+0x91c>
    7088:	add	r0, pc, r0
    708c:	bl	2068 <sf_bpf_error>
    7090:	bl	edc <abort@plt>
    7094:	ldr	r0, [pc, #324]	; 71e0 <gen_proto+0x918>
    7098:	add	r0, pc, r0
    709c:	bl	2068 <sf_bpf_error>
    70a0:	ldr	r0, [pc, #276]	; 71bc <gen_proto+0x8f4>
    70a4:	add	r0, pc, r0
    70a8:	bl	2068 <sf_bpf_error>
    70ac:	ldr	r0, [pc, #324]	; 71f8 <gen_proto+0x930>
    70b0:	add	r0, pc, r0
    70b4:	bl	2068 <sf_bpf_error>
    70b8:	ldr	r0, [pc, #224]	; 71a0 <gen_proto+0x8d8>
    70bc:	add	r0, pc, r0
    70c0:	bl	2068 <sf_bpf_error>
    70c4:	ldr	r0, [pc, #216]	; 71a4 <gen_proto+0x8dc>
    70c8:	add	r0, pc, r0
    70cc:	bl	2068 <sf_bpf_error>
    70d0:	ldr	r0, [pc, #240]	; 71c8 <gen_proto+0x900>
    70d4:	add	r0, pc, r0
    70d8:	bl	2068 <sf_bpf_error>
    70dc:	ldr	r0, [pc, #224]	; 71c4 <gen_proto+0x8fc>
    70e0:	add	r0, pc, r0
    70e4:	bl	2068 <sf_bpf_error>
    70e8:	ldr	r0, [pc, #208]	; 71c0 <gen_proto+0x8f8>
    70ec:	add	r0, pc, r0
    70f0:	bl	2068 <sf_bpf_error>
    70f4:	ldr	r0, [pc, #208]	; 71cc <gen_proto+0x904>
    70f8:	add	r0, pc, r0
    70fc:	bl	2068 <sf_bpf_error>
    7100:	ldr	r0, [pc, #200]	; 71d0 <gen_proto+0x908>
    7104:	add	r0, pc, r0
    7108:	bl	2068 <sf_bpf_error>
    710c:	ldr	r0, [pc, #192]	; 71d4 <gen_proto+0x90c>
    7110:	add	r0, pc, r0
    7114:	bl	2068 <sf_bpf_error>
    7118:	ldr	r0, [pc, #136]	; 71a8 <gen_proto+0x8e0>
    711c:	add	r0, pc, r0
    7120:	bl	2068 <sf_bpf_error>
    7124:	ldr	r0, [pc, #128]	; 71ac <gen_proto+0x8e4>
    7128:	add	r0, pc, r0
    712c:	bl	2068 <sf_bpf_error>
    7130:	ldr	r0, [pc, #124]	; 71b4 <gen_proto+0x8ec>
    7134:	add	r0, pc, r0
    7138:	bl	2068 <sf_bpf_error>
    713c:	ldr	r0, [pc, #108]	; 71b0 <gen_proto+0x8e8>
    7140:	add	r0, pc, r0
    7144:	bl	2068 <sf_bpf_error>
    7148:	ldr	r0, [pc, #104]	; 71b8 <gen_proto+0x8f0>
    714c:	add	r0, pc, r0
    7150:	bl	2068 <sf_bpf_error>
    7154:	ldr	r0, [pc, #140]	; 71e8 <gen_proto+0x920>
    7158:	add	r0, pc, r0
    715c:	bl	2068 <sf_bpf_error>
    7160:	ldr	r0, [pc, #132]	; 71ec <gen_proto+0x924>
    7164:	add	r0, pc, r0
    7168:	bl	2068 <sf_bpf_error>
    716c:	ldr	r0, [pc, #124]	; 71f0 <gen_proto+0x928>
    7170:	add	r0, pc, r0
    7174:	bl	2068 <sf_bpf_error>
    7178:	ldr	r0, [pc, #116]	; 71f4 <gen_proto+0x92c>
    717c:	add	r0, pc, r0
    7180:	bl	2068 <sf_bpf_error>
    7184:	ldr	r0, [pc, #76]	; 71d8 <gen_proto+0x910>
    7188:	add	r0, pc, r0
    718c:	bl	2068 <sf_bpf_error>
    7190:	ldr	r0, [pc, #68]	; 71dc <gen_proto+0x914>
    7194:	add	r0, pc, r0
    7198:	bl	2068 <sf_bpf_error>
    719c:	.word	0x000409c4
    71a0:	.word	0x00023930
    71a4:	.word	0x00023923
    71a8:	.word	0x000238fa
    71ac:	.word	0x00023915
    71b0:	.word	0x00023925
    71b4:	.word	0x0002395b
    71b8:	.word	0x0002396d
    71bc:	.word	0x00023a41
    71c0:	.word	0x00023a25
    71c4:	.word	0x00023a46
    71c8:	.word	0x00023a67
    71cc:	.word	0x00023a59
    71d0:	.word	0x00023a63
    71d4:	.word	0x00023a6d
    71d8:	.word	0x00023a0b
    71dc:	.word	0x00023a14
    71e0:	.word	0x00023b26
    71e4:	.word	0x00023b4d
    71e8:	.word	0x00023a91
    71ec:	.word	0x00023a9a
    71f0:	.word	0x00023aa3
    71f4:	.word	0x00023ab0
    71f8:	.word	0x0002391e

000071fc <gen_linktype>:
    71fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7200:	add	fp, sp, #28
    7204:	sub	sp, sp, #20
    7208:	mov	r5, r0
    720c:	ldr	r0, [pc, #3992]	; 81ac <gen_linktype+0xfb0>
    7210:	ldr	r0, [pc, r0]
    7214:	cmp	r0, #0
    7218:	beq	7238 <gen_linktype+0x3c>
    721c:	cmp	r5, #2048	; 0x800
    7220:	bge	7270 <gen_linktype+0x74>
    7224:	cmp	r5, #33	; 0x21
    7228:	beq	774c <gen_linktype+0x550>
    722c:	cmp	r5, #87	; 0x57
    7230:	beq	727c <gen_linktype+0x80>
    7234:	b	a060 <gen_linktype+0x2e64>
    7238:	ldr	r0, [pc, #4056]	; 8218 <gen_linktype+0x101c>
    723c:	add	r0, pc, r0
    7240:	ldrb	r0, [r0]
    7244:	cmp	r0, #1
    7248:	bne	7308 <gen_linktype+0x10c>
    724c:	cmp	r5, #2048	; 0x800
    7250:	bge	77e8 <gen_linktype+0x5ec>
    7254:	cmp	r5, #253	; 0xfd
    7258:	bgt	86ac <gen_linktype+0x14b0>
    725c:	cmp	r5, #66	; 0x42
    7260:	beq	87c4 <gen_linktype+0x15c8>
    7264:	cmp	r5, #224	; 0xe0
    7268:	moveq	r5, #43	; 0x2b
    726c:	b	87e8 <gen_linktype+0x15ec>
    7270:	movw	r0, #34525	; 0x86dd
    7274:	cmp	r5, r0
    7278:	bne	7744 <gen_linktype+0x548>
    727c:	ldr	r0, [pc, #4040]	; 824c <gen_linktype+0x1050>
    7280:	add	r0, pc, r0
    7284:	ldrb	r6, [r0]
    7288:	ldr	r9, [pc, #4032]	; 8250 <gen_linktype+0x1054>
    728c:	ldr	r9, [pc, r9]
    7290:	ldr	r8, [pc, #4028]	; 8254 <gen_linktype+0x1058>
    7294:	cmp	r6, #0
    7298:	stmib	sp, {r6, r9}
    729c:	sub	r5, r9, #2
    72a0:	add	r8, pc, r8
    72a4:	beq	77d0 <gen_linktype+0x5d4>
    72a8:	str	r5, [sp]
    72ac:	ldr	r5, [pc, #4004]	; 8258 <gen_linktype+0x105c>
    72b0:	ldr	r5, [pc, r5]
    72b4:	cmn	r5, #1
    72b8:	bne	7820 <gen_linktype+0x624>
    72bc:	ldr	r5, [pc, #3992]	; 825c <gen_linktype+0x1060>
    72c0:	mvn	r1, #15
    72c4:	ldr	r5, [pc, r5]
    72c8:	ldr	r0, [pc, #3984]	; 8260 <gen_linktype+0x1064>
    72cc:	ldr	r2, [pc, #3984]	; 8264 <gen_linktype+0x1068>
    72d0:	add	r0, pc, r0
    72d4:	add	r2, pc, r2
    72d8:	ldr	r3, [r0, r5, lsl #2]
    72dc:	cmp	r3, #0
    72e0:	beq	780c <gen_linktype+0x610>
    72e4:	add	r3, r5, #1
    72e8:	adds	r1, r1, #1
    72ec:	asr	r7, r3, #31
    72f0:	add	r7, r3, r7, lsr #28
    72f4:	bic	r7, r7, #15
    72f8:	sub	r5, r3, r7
    72fc:	str	r5, [r2]
    7300:	bcc	72d8 <gen_linktype+0xdc>
    7304:	b	8098 <gen_linktype+0xe9c>
    7308:	ldr	r0, [pc, #4092]	; 830c <gen_linktype+0x1110>
    730c:	ldr	r0, [pc, r0]
    7310:	cmp	r0, #229	; 0xe5
    7314:	bhi	8ef0 <gen_linktype+0x1cf4>
    7318:	add	r1, pc, #4
    731c:	ldr	r2, [r1, r0, lsl #2]
    7320:	add	pc, r1, r2
    7324:	.word	0x000017e8
    7328:	.word	0x00001c18
    732c:	.word	0x00001bcc
    7330:	.word	0x00001bcc
    7334:	.word	0x00001bcc
    7338:	.word	0x00001bcc
    733c:	.word	0x000014e4
    7340:	.word	0x00001840
    7344:	.word	0x0000174c
    7348:	.word	0x00001714
    734c:	.word	0x000014e4
    7350:	.word	0x000014e4
    7354:	.word	0x0000174c
    7358:	.word	0x00001bcc
    735c:	.word	0x00001bcc
    7360:	.word	0x0000174c
    7364:	.word	0x00001be8
    7368:	.word	0x00001bcc
    736c:	.word	0x00001bcc
    7370:	.word	0x000014e4
    7374:	.word	0x00001bcc
    7378:	.word	0x00001bcc
    737c:	.word	0x00001bcc
    7380:	.word	0x00001bcc
    7384:	.word	0x00001bcc
    7388:	.word	0x00001bcc
    738c:	.word	0x00001bcc
    7390:	.word	0x00001bcc
    7394:	.word	0x00001bcc
    7398:	.word	0x00001bcc
    739c:	.word	0x00001bcc
    73a0:	.word	0x00001bcc
    73a4:	.word	0x00001bcc
    73a8:	.word	0x00001bcc
    73ac:	.word	0x00001bcc
    73b0:	.word	0x00001bcc
    73b4:	.word	0x00001bcc
    73b8:	.word	0x00001bcc
    73bc:	.word	0x00001bcc
    73c0:	.word	0x00001bcc
    73c4:	.word	0x00001bcc
    73c8:	.word	0x00001bcc
    73cc:	.word	0x00001bcc
    73d0:	.word	0x00001bcc
    73d4:	.word	0x00001bcc
    73d8:	.word	0x00001bcc
    73dc:	.word	0x00001bcc
    73e0:	.word	0x00001bcc
    73e4:	.word	0x00001bcc
    73e8:	.word	0x00001bcc
    73ec:	.word	0x00001714
    73f0:	.word	0x00001714
    73f4:	.word	0x00001bcc
    73f8:	.word	0x00001bcc
    73fc:	.word	0x00001bcc
    7400:	.word	0x00001bcc
    7404:	.word	0x00001bcc
    7408:	.word	0x00001bcc
    740c:	.word	0x00001bcc
    7410:	.word	0x00001bcc
    7414:	.word	0x00001bcc
    7418:	.word	0x00001bcc
    741c:	.word	0x00001bcc
    7420:	.word	0x00001bcc
    7424:	.word	0x00001bcc
    7428:	.word	0x00001bcc
    742c:	.word	0x00001bcc
    7430:	.word	0x00001bcc
    7434:	.word	0x00001bcc
    7438:	.word	0x00001bcc
    743c:	.word	0x00001bcc
    7440:	.word	0x00001bcc
    7444:	.word	0x00001bcc
    7448:	.word	0x00001bcc
    744c:	.word	0x00001bcc
    7450:	.word	0x00001bcc
    7454:	.word	0x00001bcc
    7458:	.word	0x00001bcc
    745c:	.word	0x00001bcc
    7460:	.word	0x00001bcc
    7464:	.word	0x00001bcc
    7468:	.word	0x00001bcc
    746c:	.word	0x00001bcc
    7470:	.word	0x00001bcc
    7474:	.word	0x00001bcc
    7478:	.word	0x00001bcc
    747c:	.word	0x00001bcc
    7480:	.word	0x00001bcc
    7484:	.word	0x00001bcc
    7488:	.word	0x00001bcc
    748c:	.word	0x00001bcc
    7490:	.word	0x00001bcc
    7494:	.word	0x00001bcc
    7498:	.word	0x00001bcc
    749c:	.word	0x00001bcc
    74a0:	.word	0x00001bcc
    74a4:	.word	0x00001bcc
    74a8:	.word	0x00001bcc
    74ac:	.word	0x00001bcc
    74b0:	.word	0x00001bcc
    74b4:	.word	0x00001bcc
    74b8:	.word	0x00001bcc
    74bc:	.word	0x00001bcc
    74c0:	.word	0x00001bcc
    74c4:	.word	0x00001d5c
    74c8:	.word	0x0000151c
    74cc:	.word	0x00001bcc
    74d0:	.word	0x00001d78
    74d4:	.word	0x000017e8
    74d8:	.word	0x000017e8
    74dc:	.word	0x00001bcc
    74e0:	.word	0x00001bcc
    74e4:	.word	0x00001bcc
    74e8:	.word	0x00001c30
    74ec:	.word	0x00001d3c
    74f0:	.word	0x00001bcc
    74f4:	.word	0x00001bcc
    74f8:	.word	0x00001bcc
    74fc:	.word	0x00001bcc
    7500:	.word	0x0000151c
    7504:	.word	0x00001bcc
    7508:	.word	0x00001bcc
    750c:	.word	0x000014e4
    7510:	.word	0x00001ad8
    7514:	.word	0x00001bcc
    7518:	.word	0x00001bcc
    751c:	.word	0x00001bcc
    7520:	.word	0x0000151c
    7524:	.word	0x00001bcc
    7528:	.word	0x00001840
    752c:	.word	0x00000398
    7530:	.word	0x00000398
    7534:	.word	0x00000398
    7538:	.word	0x00000398
    753c:	.word	0x00000398
    7540:	.word	0x00000398
    7544:	.word	0x00000398
    7548:	.word	0x00000398
    754c:	.word	0x00001bcc
    7550:	.word	0x00002d18
    7554:	.word	0x00002d18
    7558:	.word	0x00001bcc
    755c:	.word	0x00001bcc
    7560:	.word	0x00002d48
    7564:	.word	0x00002d54
    7568:	.word	0x00001bcc
    756c:	.word	0x00001bcc
    7570:	.word	0x00001bcc
    7574:	.word	0x00001bcc
    7578:	.word	0x00001bcc
    757c:	.word	0x00001bcc
    7580:	.word	0x00001bcc
    7584:	.word	0x00001bcc
    7588:	.word	0x00001bcc
    758c:	.word	0x00001bcc
    7590:	.word	0x00001bcc
    7594:	.word	0x00001bcc
    7598:	.word	0x00001bcc
    759c:	.word	0x00001bcc
    75a0:	.word	0x00001bcc
    75a4:	.word	0x00001bcc
    75a8:	.word	0x00001bcc
    75ac:	.word	0x00001bcc
    75b0:	.word	0x0000151c
    75b4:	.word	0x00000398
    75b8:	.word	0x00001bcc
    75bc:	.word	0x00001714
    75c0:	.word	0x00000398
    75c4:	.word	0x00000398
    75c8:	.word	0x00001bcc
    75cc:	.word	0x00001bcc
    75d0:	.word	0x00001bcc
    75d4:	.word	0x00001bcc
    75d8:	.word	0x00001bcc
    75dc:	.word	0x00001bcc
    75e0:	.word	0x00001bcc
    75e4:	.word	0x00001bcc
    75e8:	.word	0x00002d64
    75ec:	.word	0x00000398
    75f0:	.word	0x00000398
    75f4:	.word	0x00000398
    75f8:	.word	0x00000398
    75fc:	.word	0x00002d70
    7600:	.word	0x00000398
    7604:	.word	0x00001bcc
    7608:	.word	0x00001bcc
    760c:	.word	0x00002d00
    7610:	.word	0x00002d24
    7614:	.word	0x00001bcc
    7618:	.word	0x00002d00
    761c:	.word	0x00002d30
    7620:	.word	0x00002d0c
    7624:	.word	0x0000151c
    7628:	.word	0x00002d7c
    762c:	.word	0x00000398
    7630:	.word	0x00002d0c
    7634:	.word	0x00002d88
    7638:	.word	0x00002d94
    763c:	.word	0x00002da0
    7640:	.word	0x00002dac
    7644:	.word	0x00000398
    7648:	.word	0x00002d24
    764c:	.word	0x00002db8
    7650:	.word	0x00001bcc
    7654:	.word	0x00001bcc
    7658:	.word	0x00001bcc
    765c:	.word	0x00001bcc
    7660:	.word	0x00001bcc
    7664:	.word	0x00001bcc
    7668:	.word	0x00001bcc
    766c:	.word	0x00001bcc
    7670:	.word	0x00001bcc
    7674:	.word	0x00001bcc
    7678:	.word	0x00001bcc
    767c:	.word	0x00001bcc
    7680:	.word	0x00002d0c
    7684:	.word	0x00001bcc
    7688:	.word	0x00001bcc
    768c:	.word	0x00001bcc
    7690:	.word	0x00001bcc
    7694:	.word	0x00002d00
    7698:	.word	0x00001bcc
    769c:	.word	0x00001bcc
    76a0:	.word	0x00001bcc
    76a4:	.word	0x00001bcc
    76a8:	.word	0x00001bcc
    76ac:	.word	0x00001a9c
    76b0:	.word	0x00002d30
    76b4:	.word	0x00001dac
    76b8:	.word	0x00001d4c
    76bc:	mov	r0, #1
    76c0:	mov	r1, #0
    76c4:	mov	r2, #0
    76c8:	bl	17970 <gen_load_a>
    76cc:	mov	r8, r0
    76d0:	ldr	r0, [pc, #4072]	; 86c0 <gen_linktype+0x14c4>
    76d4:	ldr	r0, [pc, r0]
    76d8:	ldr	r5, [pc, #4068]	; 86c4 <gen_linktype+0x14c8>
    76dc:	add	r5, pc, r5
    76e0:	mov	r6, r5
    76e4:	ldr	r4, [r6, r0, lsl #3]!
    76e8:	cmp	r4, #19
    76ec:	bhi	8700 <gen_linktype+0x1504>
    76f0:	ldr	r1, [pc, #4076]	; 86e4 <gen_linktype+0x14e8>
    76f4:	add	r7, r0, #1
    76f8:	cmp	r0, #15
    76fc:	add	r1, pc, r1
    7700:	str	r7, [r1]
    7704:	bge	a018 <gen_linktype+0x2e1c>
    7708:	mov	r0, #1024	; 0x400
    770c:	lsl	r4, r0, r7
    7710:	mov	r0, r4
    7714:	bl	dec <malloc@plt>
    7718:	cmp	r0, #0
    771c:	str	r0, [r6, #12]
    7720:	beq	a018 <gen_linktype+0x2e1c>
    7724:	mov	r1, #0
    7728:	mov	r2, r4
    772c:	add	r6, r6, #8
    7730:	bl	e58 <memset@plt>
    7734:	cmp	r4, #19
    7738:	str	r4, [r6]
    773c:	bhi	8704 <gen_linktype+0x1508>
    7740:	b	a018 <gen_linktype+0x2e1c>
    7744:	cmp	r5, #2048	; 0x800
    7748:	bne	a060 <gen_linktype+0x2e64>
    774c:	ldr	r0, [pc, #3988]	; 86e8 <gen_linktype+0x14ec>
    7750:	add	r0, pc, r0
    7754:	ldrb	r9, [r0]
    7758:	ldr	r6, [pc, #3980]	; 86ec <gen_linktype+0x14f0>
    775c:	ldr	r6, [pc, r6]
    7760:	cmp	r9, #0
    7764:	sub	r8, r6, #2
    7768:	str	r6, [sp, #8]
    776c:	str	r9, [sp, #4]
    7770:	beq	77dc <gen_linktype+0x5e0>
    7774:	ldr	r7, [pc, #3956]	; 86f0 <gen_linktype+0x14f4>
    7778:	ldr	r7, [pc, r7]
    777c:	cmn	r7, #1
    7780:	bne	79b8 <gen_linktype+0x7bc>
    7784:	ldr	r7, [pc, #3944]	; 86f4 <gen_linktype+0x14f8>
    7788:	mvn	r1, #15
    778c:	ldr	r7, [pc, r7]
    7790:	ldr	r0, [pc, #3936]	; 86f8 <gen_linktype+0x14fc>
    7794:	ldr	r2, [pc, #3936]	; 86fc <gen_linktype+0x1500>
    7798:	add	r0, pc, r0
    779c:	add	r2, pc, r2
    77a0:	ldr	r3, [r0, r7, lsl #2]
    77a4:	cmp	r3, #0
    77a8:	beq	79a4 <gen_linktype+0x7a8>
    77ac:	add	r3, r7, #1
    77b0:	adds	r1, r1, #1
    77b4:	asr	r7, r3, #31
    77b8:	add	r7, r3, r7, lsr #28
    77bc:	bic	r7, r7, #15
    77c0:	sub	r7, r3, r7
    77c4:	str	r7, [r2]
    77c8:	bcc	77a0 <gen_linktype+0x5a4>
    77cc:	b	8098 <gen_linktype+0xe9c>
    77d0:	ldr	r7, [pc, #4092]	; 87d4 <gen_linktype+0x15d8>
    77d4:	ldr	r7, [pc, r7]
    77d8:	b	7918 <gen_linktype+0x71c>
    77dc:	ldr	r6, [pc, #4092]	; 87e0 <gen_linktype+0x15e4>
    77e0:	ldr	r6, [pc, r6]
    77e4:	b	7ab0 <gen_linktype+0x8b4>
    77e8:	movw	r0, #32922	; 0x809a
    77ec:	cmp	r5, r0
    77f0:	bgt	86c8 <gen_linktype+0x14cc>
    77f4:	cmp	r5, #2048	; 0x800
    77f8:	beq	87cc <gen_linktype+0x15d0>
    77fc:	movw	r0, #24579	; 0x6003
    7800:	cmp	r5, r0
    7804:	moveq	r5, #39	; 0x27
    7808:	b	87e8 <gen_linktype+0x15ec>
    780c:	mov	r1, #1
    7810:	str	r1, [r0, r5, lsl #2]
    7814:	ldr	r0, [pc, #4092]	; 8818 <gen_linktype+0x161c>
    7818:	add	r0, pc, r0
    781c:	str	r5, [r0]
    7820:	ldr	r0, [pc, #4084]	; 881c <gen_linktype+0x1620>
    7824:	mov	r6, r8
    7828:	ldr	r0, [pc, r0]
    782c:	ldr	r4, [r6, r0, lsl #3]!
    7830:	cmp	r4, #19
    7834:	bhi	788c <gen_linktype+0x690>
    7838:	ldr	r1, [pc, #4064]	; 8820 <gen_linktype+0x1624>
    783c:	add	r7, r0, #1
    7840:	cmp	r0, #15
    7844:	add	r1, pc, r1
    7848:	str	r7, [r1]
    784c:	bge	a018 <gen_linktype+0x2e1c>
    7850:	mov	r0, #1024	; 0x400
    7854:	lsl	r4, r0, r7
    7858:	mov	r0, r4
    785c:	bl	dec <malloc@plt>
    7860:	cmp	r0, #0
    7864:	str	r0, [r6, #12]
    7868:	beq	a018 <gen_linktype+0x2e1c>
    786c:	mov	r1, #0
    7870:	mov	r2, r4
    7874:	add	r6, r6, #8
    7878:	bl	e58 <memset@plt>
    787c:	cmp	r4, #19
    7880:	str	r4, [r6]
    7884:	bhi	7890 <gen_linktype+0x694>
    7888:	b	a018 <gen_linktype+0x2e1c>
    788c:	mov	r7, r0
    7890:	sub	r0, r4, #20
    7894:	mov	r1, #97	; 0x61
    7898:	str	r0, [r6]
    789c:	ldr	sl, [r6, #4]
    78a0:	str	r1, [sl, r0]!
    78a4:	cmp	sl, #0
    78a8:	str	r5, [sl, #12]
    78ac:	beq	7914 <gen_linktype+0x718>
    78b0:	ldr	r4, [r8, r7, lsl #3]!
    78b4:	ldr	r5, [sp]
    78b8:	cmp	r4, #19
    78bc:	bhi	7b44 <gen_linktype+0x948>
    78c0:	ldr	r0, [pc, #3932]	; 8824 <gen_linktype+0x1628>
    78c4:	add	r9, r7, #1
    78c8:	cmp	r7, #15
    78cc:	add	r0, pc, r0
    78d0:	str	r9, [r0]
    78d4:	bge	a018 <gen_linktype+0x2e1c>
    78d8:	mov	r0, #1024	; 0x400
    78dc:	lsl	r4, r0, r9
    78e0:	mov	r0, r4
    78e4:	bl	dec <malloc@plt>
    78e8:	cmp	r0, #0
    78ec:	str	r0, [r8, #12]
    78f0:	beq	a018 <gen_linktype+0x2e1c>
    78f4:	mov	r1, #0
    78f8:	mov	r2, r4
    78fc:	add	r8, r8, #8
    7900:	bl	e58 <memset@plt>
    7904:	cmp	r4, #19
    7908:	str	r4, [r8]
    790c:	bhi	7b48 <gen_linktype+0x94c>
    7910:	b	a018 <gen_linktype+0x2e1c>
    7914:	ldr	r5, [sp]
    7918:	ldr	r4, [r8, r7, lsl #3]!
    791c:	cmp	r4, #19
    7920:	bhi	7978 <gen_linktype+0x77c>
    7924:	ldr	r0, [pc, #3836]	; 8828 <gen_linktype+0x162c>
    7928:	add	r9, r7, #1
    792c:	cmp	r7, #15
    7930:	add	r0, pc, r0
    7934:	str	r9, [r0]
    7938:	bge	a018 <gen_linktype+0x2e1c>
    793c:	mov	r0, #1024	; 0x400
    7940:	lsl	r4, r0, r9
    7944:	mov	r0, r4
    7948:	bl	dec <malloc@plt>
    794c:	cmp	r0, #0
    7950:	str	r0, [r8, #12]
    7954:	beq	a018 <gen_linktype+0x2e1c>
    7958:	mov	r1, #0
    795c:	mov	r2, r4
    7960:	add	r8, r8, #8
    7964:	bl	e58 <memset@plt>
    7968:	cmp	r4, #19
    796c:	str	r4, [r8]
    7970:	bhi	797c <gen_linktype+0x780>
    7974:	b	a018 <gen_linktype+0x2e1c>
    7978:	mov	r9, r7
    797c:	sub	r0, r4, #20
    7980:	mov	r1, #48	; 0x30
    7984:	str	r0, [r8]
    7988:	ldr	sl, [r8, #4]
    798c:	str	r1, [sl, r0]!
    7990:	ldr	r0, [pc, #3732]	; 882c <gen_linktype+0x1630>
    7994:	ldr	r0, [pc, r0]
    7998:	add	r0, r0, r5
    799c:	str	r0, [sl, #12]
    79a0:	b	7b78 <gen_linktype+0x97c>
    79a4:	mov	r1, #1
    79a8:	str	r1, [r0, r7, lsl #2]
    79ac:	ldr	r0, [pc, #3708]	; 8830 <gen_linktype+0x1634>
    79b0:	add	r0, pc, r0
    79b4:	str	r7, [r0]
    79b8:	ldr	r0, [pc, #3700]	; 8834 <gen_linktype+0x1638>
    79bc:	ldr	r0, [pc, r0]
    79c0:	ldr	sl, [pc, #3696]	; 8838 <gen_linktype+0x163c>
    79c4:	add	sl, pc, sl
    79c8:	mov	r5, sl
    79cc:	ldr	r4, [r5, r0, lsl #3]!
    79d0:	cmp	r4, #19
    79d4:	bhi	7a2c <gen_linktype+0x830>
    79d8:	ldr	r1, [pc, #3676]	; 883c <gen_linktype+0x1640>
    79dc:	add	r6, r0, #1
    79e0:	cmp	r0, #15
    79e4:	add	r1, pc, r1
    79e8:	str	r6, [r1]
    79ec:	bge	a018 <gen_linktype+0x2e1c>
    79f0:	mov	r0, #1024	; 0x400
    79f4:	lsl	r4, r0, r6
    79f8:	mov	r0, r4
    79fc:	bl	dec <malloc@plt>
    7a00:	cmp	r0, #0
    7a04:	str	r0, [r5, #12]
    7a08:	beq	a018 <gen_linktype+0x2e1c>
    7a0c:	mov	r1, #0
    7a10:	mov	r2, r4
    7a14:	add	r5, r5, #8
    7a18:	bl	e58 <memset@plt>
    7a1c:	cmp	r4, #19
    7a20:	str	r4, [r5]
    7a24:	bhi	7a30 <gen_linktype+0x834>
    7a28:	b	a018 <gen_linktype+0x2e1c>
    7a2c:	mov	r6, r0
    7a30:	sub	r0, r4, #20
    7a34:	mov	r1, #97	; 0x61
    7a38:	str	r0, [r5]
    7a3c:	ldr	r5, [r5, #4]
    7a40:	str	r1, [r5, r0]!
    7a44:	cmp	r5, #0
    7a48:	str	r7, [r5, #12]
    7a4c:	beq	7ab0 <gen_linktype+0x8b4>
    7a50:	ldr	r4, [sl, r6, lsl #3]!
    7a54:	cmp	r4, #19
    7a58:	bhi	7ecc <gen_linktype+0xcd0>
    7a5c:	ldr	r0, [pc, #4048]	; 8a34 <gen_linktype+0x1838>
    7a60:	add	r9, r6, #1
    7a64:	cmp	r6, #15
    7a68:	add	r0, pc, r0
    7a6c:	str	r9, [r0]
    7a70:	bge	a018 <gen_linktype+0x2e1c>
    7a74:	mov	r0, #1024	; 0x400
    7a78:	lsl	r4, r0, r9
    7a7c:	mov	r0, r4
    7a80:	bl	dec <malloc@plt>
    7a84:	cmp	r0, #0
    7a88:	str	r0, [sl, #12]
    7a8c:	beq	a018 <gen_linktype+0x2e1c>
    7a90:	mov	r1, #0
    7a94:	mov	r2, r4
    7a98:	add	sl, sl, #8
    7a9c:	bl	e58 <memset@plt>
    7aa0:	cmp	r4, #19
    7aa4:	str	r4, [sl]
    7aa8:	bhi	7ed0 <gen_linktype+0xcd4>
    7aac:	b	a018 <gen_linktype+0x2e1c>
    7ab0:	ldr	r5, [pc, #4016]	; 8a68 <gen_linktype+0x186c>
    7ab4:	add	r5, pc, r5
    7ab8:	ldr	r4, [r5, r6, lsl #3]!
    7abc:	cmp	r4, #19
    7ac0:	bhi	7b18 <gen_linktype+0x91c>
    7ac4:	ldr	r0, [pc, #4000]	; 8a6c <gen_linktype+0x1870>
    7ac8:	add	r9, r6, #1
    7acc:	cmp	r6, #15
    7ad0:	add	r0, pc, r0
    7ad4:	str	r9, [r0]
    7ad8:	bge	a018 <gen_linktype+0x2e1c>
    7adc:	mov	r0, #1024	; 0x400
    7ae0:	lsl	r4, r0, r9
    7ae4:	mov	r0, r4
    7ae8:	bl	dec <malloc@plt>
    7aec:	cmp	r0, #0
    7af0:	str	r0, [r5, #12]
    7af4:	beq	a018 <gen_linktype+0x2e1c>
    7af8:	mov	r1, #0
    7afc:	mov	r2, r4
    7b00:	add	r5, r5, #8
    7b04:	bl	e58 <memset@plt>
    7b08:	cmp	r4, #19
    7b0c:	str	r4, [r5]
    7b10:	bhi	7b1c <gen_linktype+0x920>
    7b14:	b	a018 <gen_linktype+0x2e1c>
    7b18:	mov	r9, r6
    7b1c:	sub	r0, r4, #20
    7b20:	mov	r1, #48	; 0x30
    7b24:	str	r0, [r5]
    7b28:	ldr	r5, [r5, #4]
    7b2c:	str	r1, [r5, r0]!
    7b30:	ldr	r0, [pc, #4080]	; 8b28 <gen_linktype+0x192c>
    7b34:	ldr	r0, [pc, r0]
    7b38:	add	r0, r0, r8
    7b3c:	str	r0, [r5, #12]
    7b40:	b	7f00 <gen_linktype+0xd04>
    7b44:	mov	r9, r7
    7b48:	sub	r1, r4, #20
    7b4c:	mov	r2, #80	; 0x50
    7b50:	str	r1, [r8]
    7b54:	ldr	r0, [r8, #4]
    7b58:	str	r2, [r0, r1]!
    7b5c:	mov	r2, sl
    7b60:	str	r5, [r0, #12]
    7b64:	mov	r1, r2
    7b68:	ldr	r2, [r2, #16]
    7b6c:	cmp	r2, #0
    7b70:	bne	7b64 <gen_linktype+0x968>
    7b74:	str	r0, [r1, #16]
    7b78:	ldr	r5, [pc, #4060]	; 8b5c <gen_linktype+0x1960>
    7b7c:	add	r5, pc, r5
    7b80:	ldr	r4, [r5, r9, lsl #3]!
    7b84:	cmp	r4, #19
    7b88:	bhi	7be8 <gen_linktype+0x9ec>
    7b8c:	ldr	r0, [pc, #4044]	; 8b60 <gen_linktype+0x1964>
    7b90:	add	r7, r9, #1
    7b94:	cmp	r9, #15
    7b98:	add	r0, pc, r0
    7b9c:	str	r7, [r0]
    7ba0:	bge	a018 <gen_linktype+0x2e1c>
    7ba4:	mov	r0, #1024	; 0x400
    7ba8:	lsl	r4, r0, r7
    7bac:	mov	r0, r4
    7bb0:	bl	dec <malloc@plt>
    7bb4:	str	r0, [r5, #12]
    7bb8:	cmp	r0, #0
    7bbc:	ldr	r9, [pc, #4072]	; 8bac <gen_linktype+0x19b0>
    7bc0:	add	r9, pc, r9
    7bc4:	beq	a018 <gen_linktype+0x2e1c>
    7bc8:	mov	r1, #0
    7bcc:	mov	r2, r4
    7bd0:	add	r5, r5, #8
    7bd4:	bl	e58 <memset@plt>
    7bd8:	cmp	r4, #19
    7bdc:	str	r4, [r5]
    7be0:	bhi	7bf4 <gen_linktype+0x9f8>
    7be4:	b	a018 <gen_linktype+0x2e1c>
    7be8:	mov	r7, r9
    7bec:	ldr	r9, [pc, #4028]	; 8bb0 <gen_linktype+0x19b4>
    7bf0:	add	r9, pc, r9
    7bf4:	sub	r1, r4, #20
    7bf8:	mov	r2, #84	; 0x54
    7bfc:	str	r1, [r5]
    7c00:	ldr	r0, [r5, #4]
    7c04:	str	r2, [r0, r1]!
    7c08:	mov	r1, #1
    7c0c:	mov	r2, sl
    7c10:	str	r1, [r0, #12]
    7c14:	mov	r1, r2
    7c18:	ldr	r2, [r2, #16]
    7c1c:	cmp	r2, #0
    7c20:	bne	7c14 <gen_linktype+0xa18>
    7c24:	str	r0, [r1, #16]
    7c28:	mov	r6, r9
    7c2c:	ldr	r4, [r6, r7, lsl #3]!
    7c30:	cmp	r4, #207	; 0xcf
    7c34:	bhi	7c8c <gen_linktype+0xa90>
    7c38:	ldr	r0, [pc, #3956]	; 8bb4 <gen_linktype+0x19b8>
    7c3c:	add	r5, r7, #1
    7c40:	cmp	r7, #15
    7c44:	add	r0, pc, r0
    7c48:	str	r5, [r0]
    7c4c:	bge	a018 <gen_linktype+0x2e1c>
    7c50:	mov	r0, #1024	; 0x400
    7c54:	lsl	r4, r0, r5
    7c58:	mov	r0, r4
    7c5c:	bl	dec <malloc@plt>
    7c60:	cmp	r0, #0
    7c64:	str	r0, [r6, #12]
    7c68:	beq	a018 <gen_linktype+0x2e1c>
    7c6c:	mov	r1, #0
    7c70:	mov	r2, r4
    7c74:	add	r6, r6, #8
    7c78:	bl	e58 <memset@plt>
    7c7c:	cmp	r4, #207	; 0xcf
    7c80:	str	r4, [r6]
    7c84:	bhi	7c90 <gen_linktype+0xa94>
    7c88:	b	a018 <gen_linktype+0x2e1c>
    7c8c:	mov	r5, r7
    7c90:	sub	r0, r4, #208	; 0xd0
    7c94:	str	r0, [r6]
    7c98:	ldr	r1, [r6, #4]
    7c9c:	add	r8, r1, r0
    7ca0:	mov	r1, #1
    7ca4:	mov	r0, #21
    7ca8:	str	r1, [r8, #20]
    7cac:	str	sl, [r8, #4]
    7cb0:	str	r0, [r8, #8]
    7cb4:	ldr	r0, [sp, #4]
    7cb8:	str	r8, [r8, #96]	; 0x60
    7cbc:	cmp	r0, #0
    7cc0:	beq	7e38 <gen_linktype+0xc3c>
    7cc4:	ldr	r7, [pc, #4068]	; 8cb0 <gen_linktype+0x1ab4>
    7cc8:	ldr	r7, [pc, r7]
    7ccc:	cmn	r7, #1
    7cd0:	bne	7d34 <gen_linktype+0xb38>
    7cd4:	ldr	r7, [pc, #4056]	; 8cb4 <gen_linktype+0x1ab8>
    7cd8:	mvn	r1, #15
    7cdc:	ldr	r7, [pc, r7]
    7ce0:	ldr	r0, [pc, #4048]	; 8cb8 <gen_linktype+0x1abc>
    7ce4:	ldr	r2, [pc, #4048]	; 8cbc <gen_linktype+0x1ac0>
    7ce8:	add	r0, pc, r0
    7cec:	add	r2, pc, r2
    7cf0:	ldr	r3, [r0, r7, lsl #2]
    7cf4:	cmp	r3, #0
    7cf8:	beq	7d20 <gen_linktype+0xb24>
    7cfc:	add	r3, r7, #1
    7d00:	adds	r1, r1, #1
    7d04:	asr	r7, r3, #31
    7d08:	add	r7, r3, r7, lsr #28
    7d0c:	bic	r7, r7, #15
    7d10:	sub	r7, r3, r7
    7d14:	str	r7, [r2]
    7d18:	bcc	7cf0 <gen_linktype+0xaf4>
    7d1c:	b	8098 <gen_linktype+0xe9c>
    7d20:	mov	r1, #1
    7d24:	str	r1, [r0, r7, lsl #2]
    7d28:	ldr	r0, [pc, #3984]	; 8cc0 <gen_linktype+0x1ac4>
    7d2c:	add	r0, pc, r0
    7d30:	str	r7, [r0]
    7d34:	mov	r6, r9
    7d38:	ldr	r4, [r6, r5, lsl #3]!
    7d3c:	cmp	r4, #19
    7d40:	bhi	7d98 <gen_linktype+0xb9c>
    7d44:	ldr	r0, [pc, #3960]	; 8cc4 <gen_linktype+0x1ac8>
    7d48:	add	r9, r5, #1
    7d4c:	cmp	r5, #15
    7d50:	add	r0, pc, r0
    7d54:	str	r9, [r0]
    7d58:	bge	a018 <gen_linktype+0x2e1c>
    7d5c:	mov	r0, #1024	; 0x400
    7d60:	lsl	r4, r0, r9
    7d64:	mov	r0, r4
    7d68:	bl	dec <malloc@plt>
    7d6c:	cmp	r0, #0
    7d70:	str	r0, [r6, #12]
    7d74:	beq	a018 <gen_linktype+0x2e1c>
    7d78:	mov	r1, #0
    7d7c:	mov	r2, r4
    7d80:	add	r6, r6, #8
    7d84:	bl	e58 <memset@plt>
    7d88:	cmp	r4, #19
    7d8c:	str	r4, [r6]
    7d90:	bhi	7d9c <gen_linktype+0xba0>
    7d94:	b	a018 <gen_linktype+0x2e1c>
    7d98:	mov	r9, r5
    7d9c:	sub	r0, r4, #20
    7da0:	mov	r1, #97	; 0x61
    7da4:	str	r0, [r6]
    7da8:	ldr	r6, [r6, #4]
    7dac:	str	r1, [r6, r0]!
    7db0:	cmp	r6, #0
    7db4:	str	r7, [r6, #12]
    7db8:	beq	7e2c <gen_linktype+0xc30>
    7dbc:	ldr	r5, [pc, #4084]	; 8db8 <gen_linktype+0x1bbc>
    7dc0:	add	r5, pc, r5
    7dc4:	ldr	r4, [r5, r9, lsl #3]!
    7dc8:	cmp	r4, #19
    7dcc:	bhi	8268 <gen_linktype+0x106c>
    7dd0:	ldr	r0, [pc, #4068]	; 8dbc <gen_linktype+0x1bc0>
    7dd4:	add	sl, r9, #1
    7dd8:	cmp	r9, #15
    7ddc:	add	r0, pc, r0
    7de0:	str	sl, [r0]
    7de4:	bge	a018 <gen_linktype+0x2e1c>
    7de8:	mov	r0, #1024	; 0x400
    7dec:	lsl	r4, r0, sl
    7df0:	mov	r0, r4
    7df4:	bl	dec <malloc@plt>
    7df8:	str	r0, [r5, #12]
    7dfc:	cmp	r0, #0
    7e00:	ldr	r9, [pc, #4068]	; 8dec <gen_linktype+0x1bf0>
    7e04:	add	r9, pc, r9
    7e08:	beq	a018 <gen_linktype+0x2e1c>
    7e0c:	mov	r1, #0
    7e10:	mov	r2, r4
    7e14:	add	r5, r5, #8
    7e18:	bl	e58 <memset@plt>
    7e1c:	cmp	r4, #19
    7e20:	str	r4, [r5]
    7e24:	bhi	8274 <gen_linktype+0x1078>
    7e28:	b	a018 <gen_linktype+0x2e1c>
    7e2c:	mov	r5, r9
    7e30:	ldr	r9, [pc, #4024]	; 8df0 <gen_linktype+0x1bf4>
    7e34:	add	r9, pc, r9
    7e38:	mov	r6, r9
    7e3c:	ldr	r4, [r6, r5, lsl #3]!
    7e40:	cmp	r4, #19
    7e44:	bhi	7e9c <gen_linktype+0xca0>
    7e48:	ldr	r0, [pc, #4004]	; 8df4 <gen_linktype+0x1bf8>
    7e4c:	add	sl, r5, #1
    7e50:	cmp	r5, #15
    7e54:	add	r0, pc, r0
    7e58:	str	sl, [r0]
    7e5c:	bge	a018 <gen_linktype+0x2e1c>
    7e60:	mov	r0, #1024	; 0x400
    7e64:	lsl	r4, r0, sl
    7e68:	mov	r0, r4
    7e6c:	bl	dec <malloc@plt>
    7e70:	cmp	r0, #0
    7e74:	str	r0, [r6, #12]
    7e78:	beq	a018 <gen_linktype+0x2e1c>
    7e7c:	mov	r1, #0
    7e80:	mov	r2, r4
    7e84:	add	r6, r6, #8
    7e88:	bl	e58 <memset@plt>
    7e8c:	cmp	r4, #19
    7e90:	str	r4, [r6]
    7e94:	bhi	7ea0 <gen_linktype+0xca4>
    7e98:	b	a018 <gen_linktype+0x2e1c>
    7e9c:	mov	sl, r5
    7ea0:	sub	r0, r4, #20
    7ea4:	mov	r1, #48	; 0x30
    7ea8:	str	r0, [r6]
    7eac:	ldr	r6, [r6, #4]
    7eb0:	str	r1, [r6, r0]!
    7eb4:	ldr	r0, [pc, #3900]	; 8df8 <gen_linktype+0x1bfc>
    7eb8:	ldr	r0, [pc, r0]
    7ebc:	ldr	r1, [sp, #8]
    7ec0:	add	r0, r0, r1
    7ec4:	str	r0, [r6, #12]
    7ec8:	b	82a8 <gen_linktype+0x10ac>
    7ecc:	mov	r9, r6
    7ed0:	sub	r1, r4, #20
    7ed4:	mov	r2, #80	; 0x50
    7ed8:	str	r1, [sl]
    7edc:	ldr	r0, [sl, #4]
    7ee0:	str	r2, [r0, r1]!
    7ee4:	mov	r2, r5
    7ee8:	str	r8, [r0, #12]
    7eec:	mov	r1, r2
    7ef0:	ldr	r2, [r2, #16]
    7ef4:	cmp	r2, #0
    7ef8:	bne	7eec <gen_linktype+0xcf0>
    7efc:	str	r0, [r1, #16]
    7f00:	ldr	sl, [pc, #4092]	; 8f04 <gen_linktype+0x1d08>
    7f04:	add	sl, pc, sl
    7f08:	mov	r7, sl
    7f0c:	ldr	r4, [r7, r9, lsl #3]!
    7f10:	cmp	r4, #19
    7f14:	bhi	7f6c <gen_linktype+0xd70>
    7f18:	ldr	r0, [pc, #4072]	; 8f08 <gen_linktype+0x1d0c>
    7f1c:	add	r6, r9, #1
    7f20:	cmp	r9, #15
    7f24:	add	r0, pc, r0
    7f28:	str	r6, [r0]
    7f2c:	bge	a018 <gen_linktype+0x2e1c>
    7f30:	mov	r0, #1024	; 0x400
    7f34:	lsl	r4, r0, r6
    7f38:	mov	r0, r4
    7f3c:	bl	dec <malloc@plt>
    7f40:	cmp	r0, #0
    7f44:	str	r0, [r7, #12]
    7f48:	beq	a018 <gen_linktype+0x2e1c>
    7f4c:	mov	r1, #0
    7f50:	mov	r2, r4
    7f54:	add	r7, r7, #8
    7f58:	bl	e58 <memset@plt>
    7f5c:	cmp	r4, #19
    7f60:	str	r4, [r7]
    7f64:	bhi	7f70 <gen_linktype+0xd74>
    7f68:	b	a018 <gen_linktype+0x2e1c>
    7f6c:	mov	r6, r9
    7f70:	sub	r1, r4, #20
    7f74:	mov	r2, #84	; 0x54
    7f78:	str	r1, [r7]
    7f7c:	ldr	r0, [r7, #4]
    7f80:	str	r2, [r0, r1]!
    7f84:	mov	r1, #1
    7f88:	mov	r2, r5
    7f8c:	str	r1, [r0, #12]
    7f90:	mov	r1, r2
    7f94:	ldr	r2, [r2, #16]
    7f98:	cmp	r2, #0
    7f9c:	bne	7f90 <gen_linktype+0xd94>
    7fa0:	str	r0, [r1, #16]
    7fa4:	mov	r7, sl
    7fa8:	ldr	r4, [r7, r6, lsl #3]!
    7fac:	cmp	r4, #207	; 0xcf
    7fb0:	bhi	8008 <gen_linktype+0xe0c>
    7fb4:	ldr	r0, [pc, #3984]	; 8f4c <gen_linktype+0x1d50>
    7fb8:	add	r9, r6, #1
    7fbc:	cmp	r6, #15
    7fc0:	add	r0, pc, r0
    7fc4:	str	r9, [r0]
    7fc8:	bge	a018 <gen_linktype+0x2e1c>
    7fcc:	mov	r0, #1024	; 0x400
    7fd0:	lsl	r4, r0, r9
    7fd4:	mov	r0, r4
    7fd8:	bl	dec <malloc@plt>
    7fdc:	cmp	r0, #0
    7fe0:	str	r0, [r7, #12]
    7fe4:	beq	a018 <gen_linktype+0x2e1c>
    7fe8:	mov	r1, #0
    7fec:	mov	r2, r4
    7ff0:	add	r7, r7, #8
    7ff4:	bl	e58 <memset@plt>
    7ff8:	cmp	r4, #207	; 0xcf
    7ffc:	str	r4, [r7]
    8000:	bhi	800c <gen_linktype+0xe10>
    8004:	b	a018 <gen_linktype+0x2e1c>
    8008:	mov	r9, r6
    800c:	sub	r0, r4, #208	; 0xd0
    8010:	str	r0, [r7]
    8014:	ldr	r1, [r7, #4]
    8018:	add	r8, r1, r0
    801c:	mov	r1, #1
    8020:	mov	r0, #21
    8024:	str	r1, [r8, #20]
    8028:	str	r5, [r8, #4]
    802c:	str	r0, [r8, #8]
    8030:	ldr	r0, [sp, #4]
    8034:	str	r8, [r8, #96]	; 0x60
    8038:	cmp	r0, #0
    803c:	beq	81b4 <gen_linktype+0xfb8>
    8040:	ldr	r7, [pc, #3848]	; 8f50 <gen_linktype+0x1d54>
    8044:	ldr	r7, [pc, r7]
    8048:	cmn	r7, #1
    804c:	bne	80b8 <gen_linktype+0xebc>
    8050:	ldr	r7, [pc, #4092]	; 9054 <gen_linktype+0x1e58>
    8054:	mvn	r1, #15
    8058:	ldr	r7, [pc, r7]
    805c:	ldr	r0, [pc, #4084]	; 9058 <gen_linktype+0x1e5c>
    8060:	ldr	r2, [pc, #4084]	; 905c <gen_linktype+0x1e60>
    8064:	add	r0, pc, r0
    8068:	add	r2, pc, r2
    806c:	ldr	r3, [r0, r7, lsl #2]
    8070:	cmp	r3, #0
    8074:	beq	80a4 <gen_linktype+0xea8>
    8078:	add	r3, r7, #1
    807c:	adds	r1, r1, #1
    8080:	asr	r7, r3, #31
    8084:	add	r7, r3, r7, lsr #28
    8088:	bic	r7, r7, #15
    808c:	sub	r7, r3, r7
    8090:	str	r7, [r2]
    8094:	bcc	806c <gen_linktype+0xe70>
    8098:	ldr	r0, [pc, #4084]	; 9094 <gen_linktype+0x1e98>
    809c:	add	r0, pc, r0
    80a0:	bl	2068 <sf_bpf_error>
    80a4:	mov	r1, #1
    80a8:	str	r1, [r0, r7, lsl #2]
    80ac:	ldr	r0, [pc, #4068]	; 9098 <gen_linktype+0x1e9c>
    80b0:	add	r0, pc, r0
    80b4:	str	r7, [r0]
    80b8:	mov	r5, sl
    80bc:	ldr	r4, [r5, r9, lsl #3]!
    80c0:	cmp	r4, #19
    80c4:	bhi	8124 <gen_linktype+0xf28>
    80c8:	ldr	r0, [pc, #4092]	; 90cc <gen_linktype+0x1ed0>
    80cc:	add	r1, r9, #1
    80d0:	cmp	r9, #15
    80d4:	add	r0, pc, r0
    80d8:	str	r1, [r0]
    80dc:	bge	a018 <gen_linktype+0x2e1c>
    80e0:	mov	r0, #1024	; 0x400
    80e4:	mov	r6, r1
    80e8:	lsl	r4, r0, r1
    80ec:	mov	r0, r4
    80f0:	bl	dec <malloc@plt>
    80f4:	cmp	r0, #0
    80f8:	str	r0, [r5, #12]
    80fc:	beq	a018 <gen_linktype+0x2e1c>
    8100:	mov	r1, #0
    8104:	mov	r2, r4
    8108:	add	r5, r5, #8
    810c:	bl	e58 <memset@plt>
    8110:	cmp	r4, #19
    8114:	mov	r2, r6
    8118:	str	r4, [r5]
    811c:	bhi	8128 <gen_linktype+0xf2c>
    8120:	b	a018 <gen_linktype+0x2e1c>
    8124:	mov	r2, r9
    8128:	sub	r0, r4, #20
    812c:	mov	r1, #97	; 0x61
    8130:	str	r0, [r5]
    8134:	ldr	r9, [r5, #4]
    8138:	str	r1, [r9, r0]!
    813c:	cmp	r9, #0
    8140:	str	r7, [r9, #12]
    8144:	beq	81b0 <gen_linktype+0xfb4>
    8148:	mov	r6, sl
    814c:	ldr	r4, [r6, r2, lsl #3]!
    8150:	cmp	r4, #19
    8154:	bhi	8470 <gen_linktype+0x1274>
    8158:	ldr	r0, [pc, #3968]	; 90e0 <gen_linktype+0x1ee4>
    815c:	add	sl, r2, #1
    8160:	cmp	r2, #15
    8164:	add	r0, pc, r0
    8168:	str	sl, [r0]
    816c:	bge	a018 <gen_linktype+0x2e1c>
    8170:	mov	r0, #1024	; 0x400
    8174:	lsl	r4, r0, sl
    8178:	mov	r0, r4
    817c:	bl	dec <malloc@plt>
    8180:	cmp	r0, #0
    8184:	str	r0, [r6, #12]
    8188:	beq	a018 <gen_linktype+0x2e1c>
    818c:	mov	r1, #0
    8190:	mov	r2, r4
    8194:	add	r6, r6, #8
    8198:	bl	e58 <memset@plt>
    819c:	cmp	r4, #19
    81a0:	str	r4, [r6]
    81a4:	bhi	8474 <gen_linktype+0x1278>
    81a8:	b	a018 <gen_linktype+0x2e1c>
    81ac:	.word	0x0003fec4
    81b0:	mov	r9, r2
    81b4:	mov	r5, sl
    81b8:	ldr	r4, [r5, r9, lsl #3]!
    81bc:	cmp	r4, #19
    81c0:	bhi	821c <gen_linktype+0x1020>
    81c4:	ldr	r0, [pc, #4048]	; 919c <gen_linktype+0x1fa0>
    81c8:	add	sl, r9, #1
    81cc:	cmp	r9, #15
    81d0:	add	r0, pc, r0
    81d4:	str	sl, [r0]
    81d8:	bge	a018 <gen_linktype+0x2e1c>
    81dc:	mov	r0, #1024	; 0x400
    81e0:	lsl	r4, r0, sl
    81e4:	mov	r0, r4
    81e8:	bl	dec <malloc@plt>
    81ec:	cmp	r0, #0
    81f0:	str	r0, [r5, #12]
    81f4:	beq	a018 <gen_linktype+0x2e1c>
    81f8:	mov	r1, #0
    81fc:	mov	r2, r4
    8200:	add	r5, r5, #8
    8204:	bl	e58 <memset@plt>
    8208:	cmp	r4, #19
    820c:	str	r4, [r5]
    8210:	bhi	8220 <gen_linktype+0x1024>
    8214:	b	a018 <gen_linktype+0x2e1c>
    8218:	.word	0x00040214
    821c:	mov	sl, r9
    8220:	sub	r0, r4, #20
    8224:	mov	r1, #48	; 0x30
    8228:	str	r0, [r5]
    822c:	ldr	r9, [r5, #4]
    8230:	str	r1, [r9, r0]!
    8234:	ldr	r0, [pc, #3940]	; 91a0 <gen_linktype+0x1fa4>
    8238:	ldr	r0, [pc, r0]
    823c:	ldr	r1, [sp, #8]
    8240:	add	r0, r0, r1
    8244:	str	r0, [r9, #12]
    8248:	b	84a8 <gen_linktype+0x12ac>
    824c:	.word	0x00040280
    8250:	.word	0x000401b4
    8254:	.word	0x000401dc
    8258:	.word	0x00040258
    825c:	.word	0x00040248
    8260:	.word	0x00040240
    8264:	.word	0x00040238
    8268:	mov	sl, r9
    826c:	ldr	r9, [pc, #4064]	; 9254 <gen_linktype+0x2058>
    8270:	add	r9, pc, r9
    8274:	sub	r1, r4, #20
    8278:	mov	r2, #80	; 0x50
    827c:	str	r1, [r5]
    8280:	ldr	r0, [r5, #4]
    8284:	str	r2, [r0, r1]!
    8288:	mov	r2, r6
    828c:	ldr	r1, [sp, #8]
    8290:	str	r1, [r0, #12]
    8294:	mov	r1, r2
    8298:	ldr	r2, [r2, #16]
    829c:	cmp	r2, #0
    82a0:	bne	8294 <gen_linktype+0x1098>
    82a4:	str	r0, [r1, #16]
    82a8:	mov	r7, r9
    82ac:	ldr	r4, [r7, sl, lsl #3]!
    82b0:	cmp	r4, #19
    82b4:	bhi	8310 <gen_linktype+0x1114>
    82b8:	ldr	r0, [pc, #3992]	; 9258 <gen_linktype+0x205c>
    82bc:	add	r5, sl, #1
    82c0:	cmp	sl, #15
    82c4:	add	r0, pc, r0
    82c8:	str	r5, [r0]
    82cc:	bge	a018 <gen_linktype+0x2e1c>
    82d0:	mov	r0, #1024	; 0x400
    82d4:	lsl	r4, r0, r5
    82d8:	mov	r0, r4
    82dc:	bl	dec <malloc@plt>
    82e0:	cmp	r0, #0
    82e4:	str	r0, [r7, #12]
    82e8:	beq	a018 <gen_linktype+0x2e1c>
    82ec:	mov	r1, #0
    82f0:	mov	r2, r4
    82f4:	add	r7, r7, #8
    82f8:	bl	e58 <memset@plt>
    82fc:	cmp	r4, #19
    8300:	str	r4, [r7]
    8304:	bhi	8314 <gen_linktype+0x1118>
    8308:	b	a018 <gen_linktype+0x2e1c>
    830c:	.word	0x00040124
    8310:	mov	r5, sl
    8314:	sub	r1, r4, #20
    8318:	mov	r2, #84	; 0x54
    831c:	str	r1, [r7]
    8320:	ldr	r0, [r7, #4]
    8324:	str	r2, [r0, r1]!
    8328:	mov	r1, #240	; 0xf0
    832c:	mov	r2, r6
    8330:	str	r1, [r0, #12]
    8334:	mov	r1, r2
    8338:	ldr	r2, [r2, #16]
    833c:	cmp	r2, #0
    8340:	bne	8334 <gen_linktype+0x1138>
    8344:	str	r0, [r1, #16]
    8348:	ldr	r4, [r9, r5, lsl #3]!
    834c:	cmp	r4, #207	; 0xcf
    8350:	bhi	83a4 <gen_linktype+0x11a8>
    8354:	ldr	r1, [pc, #4016]	; 930c <gen_linktype+0x2110>
    8358:	add	r0, r5, #1
    835c:	cmp	r5, #15
    8360:	add	r1, pc, r1
    8364:	str	r0, [r1]
    8368:	bge	a018 <gen_linktype+0x2e1c>
    836c:	mov	r1, #1024	; 0x400
    8370:	lsl	r4, r1, r0
    8374:	mov	r0, r4
    8378:	bl	dec <malloc@plt>
    837c:	cmp	r0, #0
    8380:	str	r0, [r9, #12]
    8384:	beq	a018 <gen_linktype+0x2e1c>
    8388:	mov	r1, #0
    838c:	mov	r2, r4
    8390:	add	r9, r9, #8
    8394:	bl	e58 <memset@plt>
    8398:	cmp	r4, #207	; 0xcf
    839c:	str	r4, [r9]
    83a0:	bls	a018 <gen_linktype+0x2e1c>
    83a4:	sub	r0, r4, #208	; 0xd0
    83a8:	cmp	r8, #0
    83ac:	str	r0, [r9]
    83b0:	ldr	r1, [r9, #4]
    83b4:	add	r4, r1, r0
    83b8:	mov	r1, #96	; 0x60
    83bc:	mov	r0, #21
    83c0:	str	r1, [r4, #20]
    83c4:	str	r6, [r4, #4]
    83c8:	str	r0, [r4, #8]
    83cc:	str	r4, [r4, #96]	; 0x60
    83d0:	beq	8400 <gen_linktype+0x1204>
    83d4:	mov	r0, r8
    83d8:	ldr	r1, [r0, #44]	; 0x2c
    83dc:	add	r2, r0, #84	; 0x54
    83e0:	cmp	r1, #0
    83e4:	mov	r1, #84	; 0x54
    83e8:	movweq	r1, #60	; 0x3c
    83ec:	addeq	r2, r0, #60	; 0x3c
    83f0:	ldr	r0, [r0, r1]
    83f4:	str	r4, [r2]
    83f8:	cmp	r0, #0
    83fc:	bne	83d8 <gen_linktype+0x11dc>
    8400:	ldr	r0, [r8, #44]	; 0x2c
    8404:	cmp	r4, #0
    8408:	clz	r0, r0
    840c:	lsr	r0, r0, #5
    8410:	str	r0, [r8, #44]	; 0x2c
    8414:	ldr	r0, [r4, #44]	; 0x2c
    8418:	clz	r1, r0
    841c:	lsr	r1, r1, #5
    8420:	str	r1, [r4, #44]	; 0x2c
    8424:	str	r4, [sp, #12]
    8428:	beq	8680 <gen_linktype+0x1484>
    842c:	cmp	r0, #0
    8430:	mov	r2, #60	; 0x3c
    8434:	mov	r1, r4
    8438:	movweq	r2, #84	; 0x54
    843c:	ldr	r0, [r1, r2]!
    8440:	cmp	r0, #0
    8444:	beq	8684 <gen_linktype+0x1488>
    8448:	ldr	r2, [r0, #44]	; 0x2c
    844c:	add	r1, r0, #84	; 0x54
    8450:	cmp	r2, #0
    8454:	mov	r2, #84	; 0x54
    8458:	movweq	r2, #60	; 0x3c
    845c:	addeq	r1, r0, #60	; 0x3c
    8460:	ldr	r0, [r0, r2]
    8464:	cmp	r0, #0
    8468:	bne	8448 <gen_linktype+0x124c>
    846c:	b	8684 <gen_linktype+0x1488>
    8470:	mov	sl, r2
    8474:	sub	r1, r4, #20
    8478:	mov	r2, #80	; 0x50
    847c:	str	r1, [r6]
    8480:	ldr	r0, [r6, #4]
    8484:	str	r2, [r0, r1]!
    8488:	mov	r2, r9
    848c:	ldr	r1, [sp, #8]
    8490:	str	r1, [r0, #12]
    8494:	mov	r1, r2
    8498:	ldr	r2, [r2, #16]
    849c:	cmp	r2, #0
    84a0:	bne	8494 <gen_linktype+0x1298>
    84a4:	str	r0, [r1, #16]
    84a8:	ldr	r7, [pc, #3936]	; 9410 <gen_linktype+0x2214>
    84ac:	add	r7, pc, r7
    84b0:	ldr	r4, [r7, sl, lsl #3]!
    84b4:	cmp	r4, #19
    84b8:	bhi	8518 <gen_linktype+0x131c>
    84bc:	ldr	r0, [pc, #3920]	; 9414 <gen_linktype+0x2218>
    84c0:	add	r6, sl, #1
    84c4:	cmp	sl, #15
    84c8:	add	r0, pc, r0
    84cc:	str	r6, [r0]
    84d0:	bge	a018 <gen_linktype+0x2e1c>
    84d4:	mov	r0, #1024	; 0x400
    84d8:	lsl	r4, r0, r6
    84dc:	mov	r0, r4
    84e0:	bl	dec <malloc@plt>
    84e4:	str	r0, [r7, #12]
    84e8:	cmp	r0, #0
    84ec:	ldr	r5, [pc, #3876]	; 9418 <gen_linktype+0x221c>
    84f0:	add	r5, pc, r5
    84f4:	beq	a018 <gen_linktype+0x2e1c>
    84f8:	mov	r1, #0
    84fc:	mov	r2, r4
    8500:	add	r7, r7, #8
    8504:	bl	e58 <memset@plt>
    8508:	cmp	r4, #19
    850c:	str	r4, [r7]
    8510:	bhi	8524 <gen_linktype+0x1328>
    8514:	b	a018 <gen_linktype+0x2e1c>
    8518:	ldr	r5, [pc, #3836]	; 941c <gen_linktype+0x2220>
    851c:	mov	r6, sl
    8520:	add	r5, pc, r5
    8524:	sub	r1, r4, #20
    8528:	mov	r2, #84	; 0x54
    852c:	str	r1, [r7]
    8530:	ldr	r0, [r7, #4]
    8534:	str	r2, [r0, r1]!
    8538:	mov	r1, #240	; 0xf0
    853c:	mov	r2, r9
    8540:	str	r1, [r0, #12]
    8544:	mov	r1, r2
    8548:	ldr	r2, [r2, #16]
    854c:	cmp	r2, #0
    8550:	bne	8544 <gen_linktype+0x1348>
    8554:	str	r0, [r1, #16]
    8558:	ldr	r4, [r5, r6, lsl #3]!
    855c:	cmp	r4, #207	; 0xcf
    8560:	bhi	85b4 <gen_linktype+0x13b8>
    8564:	ldr	r1, [pc, #3764]	; 9420 <gen_linktype+0x2224>
    8568:	add	r0, r6, #1
    856c:	cmp	r6, #15
    8570:	add	r1, pc, r1
    8574:	str	r0, [r1]
    8578:	bge	a018 <gen_linktype+0x2e1c>
    857c:	mov	r1, #1024	; 0x400
    8580:	lsl	r4, r1, r0
    8584:	mov	r0, r4
    8588:	bl	dec <malloc@plt>
    858c:	cmp	r0, #0
    8590:	str	r0, [r5, #12]
    8594:	beq	a018 <gen_linktype+0x2e1c>
    8598:	mov	r1, #0
    859c:	mov	r2, r4
    85a0:	add	r5, r5, #8
    85a4:	bl	e58 <memset@plt>
    85a8:	cmp	r4, #207	; 0xcf
    85ac:	str	r4, [r5]
    85b0:	bls	a018 <gen_linktype+0x2e1c>
    85b4:	sub	r0, r4, #208	; 0xd0
    85b8:	cmp	r8, #0
    85bc:	str	r0, [r5]
    85c0:	ldr	r1, [r5, #4]
    85c4:	add	r4, r1, r0
    85c8:	mov	r1, #64	; 0x40
    85cc:	mov	r0, #21
    85d0:	str	r1, [r4, #20]
    85d4:	str	r9, [r4, #4]
    85d8:	str	r0, [r4, #8]
    85dc:	str	r4, [r4, #96]	; 0x60
    85e0:	beq	8610 <gen_linktype+0x1414>
    85e4:	mov	r0, r8
    85e8:	ldr	r1, [r0, #44]	; 0x2c
    85ec:	add	r2, r0, #84	; 0x54
    85f0:	cmp	r1, #0
    85f4:	mov	r1, #84	; 0x54
    85f8:	movweq	r1, #60	; 0x3c
    85fc:	addeq	r2, r0, #60	; 0x3c
    8600:	ldr	r0, [r0, r1]
    8604:	str	r4, [r2]
    8608:	cmp	r0, #0
    860c:	bne	85e8 <gen_linktype+0x13ec>
    8610:	ldr	r0, [r8, #44]	; 0x2c
    8614:	cmp	r4, #0
    8618:	clz	r0, r0
    861c:	lsr	r0, r0, #5
    8620:	str	r0, [r8, #44]	; 0x2c
    8624:	ldr	r0, [r4, #44]	; 0x2c
    8628:	clz	r1, r0
    862c:	lsr	r1, r1, #5
    8630:	str	r1, [r4, #44]	; 0x2c
    8634:	str	r4, [sp, #12]
    8638:	beq	8680 <gen_linktype+0x1484>
    863c:	cmp	r0, #0
    8640:	mov	r2, #60	; 0x3c
    8644:	mov	r1, r4
    8648:	movweq	r2, #84	; 0x54
    864c:	ldr	r0, [r1, r2]!
    8650:	cmp	r0, #0
    8654:	beq	8684 <gen_linktype+0x1488>
    8658:	ldr	r2, [r0, #44]	; 0x2c
    865c:	add	r1, r0, #84	; 0x54
    8660:	cmp	r2, #0
    8664:	mov	r2, #84	; 0x54
    8668:	movweq	r2, #60	; 0x3c
    866c:	addeq	r1, r0, #60	; 0x3c
    8670:	ldr	r0, [r0, r2]
    8674:	cmp	r0, #0
    8678:	bne	8658 <gen_linktype+0x145c>
    867c:	b	8684 <gen_linktype+0x1488>
    8680:	add	r1, sp, #12
    8684:	str	r8, [r1]
    8688:	ldr	r0, [r4, #44]	; 0x2c
    868c:	clz	r0, r0
    8690:	lsr	r0, r0, #5
    8694:	str	r0, [r4, #44]	; 0x2c
    8698:	ldr	r0, [r8, #96]	; 0x60
    869c:	str	r0, [r4, #96]	; 0x60
    86a0:	mov	r0, r4
    86a4:	sub	sp, fp, #28
    86a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    86ac:	cmp	r5, #254	; 0xfe
    86b0:	beq	87d8 <gen_linktype+0x15dc>
    86b4:	cmp	r5, #1536	; 0x600
    86b8:	moveq	r5, #37	; 0x25
    86bc:	b	87e8 <gen_linktype+0x15ec>
    86c0:	.word	0x0003fe28
    86c4:	.word	0x0003fda0
    86c8:	movw	r0, #32923	; 0x809b
    86cc:	cmp	r5, r0
    86d0:	beq	87e4 <gen_linktype+0x15e8>
    86d4:	movw	r0, #34525	; 0x86dd
    86d8:	cmp	r5, r0
    86dc:	moveq	r5, #87	; 0x57
    86e0:	b	87e8 <gen_linktype+0x15ec>
    86e4:	.word	0x0003fe00
    86e8:	.word	0x0003fdb0
    86ec:	.word	0x0003fce4
    86f0:	.word	0x0003fd90
    86f4:	.word	0x0003fd80
    86f8:	.word	0x0003fd78
    86fc:	.word	0x0003fd70
    8700:	mov	r7, r0
    8704:	sub	r1, r4, #20
    8708:	mov	r2, #84	; 0x54
    870c:	str	r1, [r6]
    8710:	ldr	r0, [r6, #4]
    8714:	str	r2, [r0, r1]!
    8718:	mvn	r1, #255	; 0xff
    871c:	mov	r2, r8
    8720:	str	r1, [r0, #12]
    8724:	mov	r1, r2
    8728:	ldr	r2, [r2, #16]
    872c:	cmp	r2, #0
    8730:	bne	8724 <gen_linktype+0x1528>
    8734:	str	r0, [r1, #16]
    8738:	ldr	r4, [r5, r7, lsl #3]!
    873c:	cmp	r4, #207	; 0xcf
    8740:	bhi	8794 <gen_linktype+0x1598>
    8744:	ldr	r1, [pc, #4076]	; 9738 <gen_linktype+0x253c>
    8748:	add	r0, r7, #1
    874c:	cmp	r7, #15
    8750:	add	r1, pc, r1
    8754:	str	r0, [r1]
    8758:	bge	a018 <gen_linktype+0x2e1c>
    875c:	mov	r1, #1024	; 0x400
    8760:	lsl	r4, r1, r0
    8764:	mov	r0, r4
    8768:	bl	dec <malloc@plt>
    876c:	cmp	r0, #0
    8770:	str	r0, [r5, #12]
    8774:	beq	a018 <gen_linktype+0x2e1c>
    8778:	mov	r1, #0
    877c:	mov	r2, r4
    8780:	add	r5, r5, #8
    8784:	bl	e58 <memset@plt>
    8788:	cmp	r4, #207	; 0xcf
    878c:	str	r4, [r5]
    8790:	bls	a018 <gen_linktype+0x2e1c>
    8794:	sub	r0, r4, #208	; 0xd0
    8798:	str	r0, [r5]
    879c:	ldr	r1, [r5, #4]
    87a0:	add	r4, r1, r0
    87a4:	movw	r1, #17152	; 0x4300
    87a8:	mov	r0, #21
    87ac:	movt	r1, #19783	; 0x4d47
    87b0:	str	r1, [r4, #20]
    87b4:	str	r8, [r4, #4]
    87b8:	str	r0, [r4, #8]
    87bc:	str	r4, [r4, #96]	; 0x60
    87c0:	b	86a0 <gen_linktype+0x14a4>
    87c4:	mov	r5, #49	; 0x31
    87c8:	b	87e8 <gen_linktype+0x15ec>
    87cc:	mov	r5, #33	; 0x21
    87d0:	b	87e8 <gen_linktype+0x15ec>
    87d4:	.word	0x0003fd28
    87d8:	mov	r5, #35	; 0x23
    87dc:	b	87e8 <gen_linktype+0x15ec>
    87e0:	.word	0x0003fd1c
    87e4:	mov	r5, #41	; 0x29
    87e8:	ldr	r1, [pc, #4084]	; 97e4 <gen_linktype+0x25e8>
    87ec:	mov	r0, #2
    87f0:	ldr	r1, [pc, r1]
    87f4:	mov	r2, #8
    87f8:	mov	r3, r5
    87fc:	sub	sp, fp, #28
    8800:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8804:	b	a8f8 <gen_cmp>
    8808:	mov	r0, r5
    880c:	sub	sp, fp, #28
    8810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8814:	b	1c250 <gen_llc_linktype>
    8818:	.word	0x0003fcf0
    881c:	.word	0x0003fcd4
    8820:	.word	0x0003fcb8
    8824:	.word	0x0003fc30
    8828:	.word	0x0003fbcc
    882c:	.word	0x0003faa8
    8830:	.word	0x0003fb58
    8834:	.word	0x0003fb40
    8838:	.word	0x0003fab8
    883c:	.word	0x0003fb18
    8840:	mov	r0, #1
    8844:	mov	r1, #0
    8848:	mov	r2, #16
    884c:	bl	17970 <gen_load_a>
    8850:	mov	r8, r0
    8854:	ldr	r0, [pc, #4052]	; 9830 <gen_linktype+0x2634>
    8858:	ldr	r0, [pc, r0]
    885c:	ldr	r4, [pc, #4048]	; 9834 <gen_linktype+0x2638>
    8860:	add	r4, pc, r4
    8864:	mov	r7, r4
    8868:	ldr	r6, [r7, r0, lsl #3]!
    886c:	cmp	r6, #207	; 0xcf
    8870:	bhi	88c4 <gen_linktype+0x16c8>
    8874:	ldr	r2, [pc, #4028]	; 9838 <gen_linktype+0x263c>
    8878:	add	r1, r0, #1
    887c:	cmp	r0, #15
    8880:	add	r2, pc, r2
    8884:	str	r1, [r2]
    8888:	bge	a018 <gen_linktype+0x2e1c>
    888c:	mov	r0, #1024	; 0x400
    8890:	lsl	r6, r0, r1
    8894:	mov	r0, r6
    8898:	bl	dec <malloc@plt>
    889c:	cmp	r0, #0
    88a0:	str	r0, [r7, #12]
    88a4:	beq	a018 <gen_linktype+0x2e1c>
    88a8:	mov	r1, #0
    88ac:	mov	r2, r6
    88b0:	add	r7, r7, #8
    88b4:	bl	e58 <memset@plt>
    88b8:	cmp	r6, #207	; 0xcf
    88bc:	str	r6, [r7]
    88c0:	bls	a018 <gen_linktype+0x2e1c>
    88c4:	sub	r0, r6, #208	; 0xd0
    88c8:	mov	r2, #16
    88cc:	mov	r9, #69	; 0x45
    88d0:	str	r0, [r7]
    88d4:	ldr	r1, [r7, #4]
    88d8:	add	r7, r1, r0
    88dc:	mov	r0, #8
    88e0:	mov	r1, #0
    88e4:	str	r0, [r7, #20]
    88e8:	mov	r0, #1
    88ec:	stmib	r7, {r8, r9}
    88f0:	str	r7, [r7, #96]	; 0x60
    88f4:	bl	17970 <gen_load_a>
    88f8:	mov	r8, r0
    88fc:	ldr	r0, [pc, #4040]	; 98cc <gen_linktype+0x26d0>
    8900:	ldr	r0, [pc, r0]
    8904:	ldr	r6, [r4, r0, lsl #3]!
    8908:	cmp	r6, #207	; 0xcf
    890c:	bhi	8960 <gen_linktype+0x1764>
    8910:	ldr	r2, [pc, #4024]	; 98d0 <gen_linktype+0x26d4>
    8914:	add	r1, r0, #1
    8918:	cmp	r0, #15
    891c:	add	r2, pc, r2
    8920:	str	r1, [r2]
    8924:	bge	a018 <gen_linktype+0x2e1c>
    8928:	mov	r0, #1024	; 0x400
    892c:	lsl	r6, r0, r1
    8930:	mov	r0, r6
    8934:	bl	dec <malloc@plt>
    8938:	cmp	r0, #0
    893c:	str	r0, [r4, #12]
    8940:	beq	a018 <gen_linktype+0x2e1c>
    8944:	mov	r1, #0
    8948:	mov	r2, r6
    894c:	add	r4, r4, #8
    8950:	bl	e58 <memset@plt>
    8954:	cmp	r6, #207	; 0xcf
    8958:	str	r6, [r4]
    895c:	bls	a018 <gen_linktype+0x2e1c>
    8960:	sub	r0, r6, #208	; 0xd0
    8964:	str	r0, [r4]
    8968:	ldr	r1, [r4, #4]
    896c:	adds	r0, r1, r0
    8970:	mov	r1, #4
    8974:	str	r1, [r0, #20]
    8978:	stmib	r0, {r8, r9}
    897c:	ldr	r1, [r0, #44]	; 0x2c
    8980:	clz	r1, r1
    8984:	lsr	r1, r1, #5
    8988:	str	r1, [r0, #44]	; 0x2c
    898c:	str	r0, [r0, #96]	; 0x60
    8990:	beq	89c8 <gen_linktype+0x17cc>
    8994:	ldr	r1, [r7, #96]	; 0x60
    8998:	mov	r2, r0
    899c:	ldr	r3, [r2, #44]	; 0x2c
    89a0:	add	r6, r2, #84	; 0x54
    89a4:	cmp	r3, #0
    89a8:	mov	r3, #84	; 0x54
    89ac:	movweq	r3, #60	; 0x3c
    89b0:	addeq	r6, r2, #60	; 0x3c
    89b4:	ldr	r2, [r2, r3]
    89b8:	str	r1, [r6]
    89bc:	cmp	r2, #0
    89c0:	bne	899c <gen_linktype+0x17a0>
    89c4:	ldr	r1, [r0, #44]	; 0x2c
    89c8:	clz	r1, r1
    89cc:	cmp	r7, #0
    89d0:	lsr	r1, r1, #5
    89d4:	str	r1, [r0, #44]	; 0x2c
    89d8:	ldr	r1, [r7, #44]	; 0x2c
    89dc:	clz	r2, r1
    89e0:	lsr	r2, r2, #5
    89e4:	str	r2, [r7, #44]	; 0x2c
    89e8:	str	r7, [sp, #12]
    89ec:	beq	8bb8 <gen_linktype+0x19bc>
    89f0:	cmp	r1, #0
    89f4:	mov	r3, #60	; 0x3c
    89f8:	mov	r2, r7
    89fc:	movweq	r3, #84	; 0x54
    8a00:	ldr	r1, [r2, r3]!
    8a04:	cmp	r1, #0
    8a08:	beq	8bbc <gen_linktype+0x19c0>
    8a0c:	ldr	r3, [r1, #44]	; 0x2c
    8a10:	add	r2, r1, #84	; 0x54
    8a14:	cmp	r3, #0
    8a18:	mov	r3, #84	; 0x54
    8a1c:	movweq	r3, #60	; 0x3c
    8a20:	addeq	r2, r1, #60	; 0x3c
    8a24:	ldr	r1, [r1, r3]
    8a28:	cmp	r1, #0
    8a2c:	bne	8a0c <gen_linktype+0x1810>
    8a30:	b	8bbc <gen_linktype+0x19c0>
    8a34:	.word	0x0003fa94
    8a38:	cmp	r5, #2048	; 0x800
    8a3c:	bge	8b2c <gen_linktype+0x1930>
    8a40:	cmp	r5, #253	; 0xfd
    8a44:	bgt	8d70 <gen_linktype+0x1b74>
    8a48:	cmp	r5, #66	; 0x42
    8a4c:	beq	918c <gen_linktype+0x1f90>
    8a50:	cmp	r5, #224	; 0xe0
    8a54:	bne	9190 <gen_linktype+0x1f94>
    8a58:	ldr	r1, [pc, #4052]	; 9a34 <gen_linktype+0x2838>
    8a5c:	mov	r5, #43	; 0x2b
    8a60:	ldr	r1, [pc, r1]
    8a64:	b	961c <gen_linktype+0x2420>
    8a68:	.word	0x0003f9c8
    8a6c:	.word	0x0003fa2c
    8a70:	movw	r0, #34525	; 0x86dd
    8a74:	cmp	r5, r0
    8a78:	beq	8cc8 <gen_linktype+0x1acc>
    8a7c:	cmp	r5, #2048	; 0x800
    8a80:	bne	917c <gen_linktype+0x1f80>
    8a84:	mov	r0, #1
    8a88:	mov	r1, #0
    8a8c:	mov	r2, #16
    8a90:	bl	17970 <gen_load_a>
    8a94:	mov	r8, r0
    8a98:	ldr	r0, [pc, #3992]	; 9a38 <gen_linktype+0x283c>
    8a9c:	ldr	r0, [pc, r0]
    8aa0:	ldr	r5, [pc, #3988]	; 9a3c <gen_linktype+0x2840>
    8aa4:	add	r5, pc, r5
    8aa8:	mov	r6, r5
    8aac:	ldr	r4, [r6, r0, lsl #3]!
    8ab0:	cmp	r4, #19
    8ab4:	bhi	91a4 <gen_linktype+0x1fa8>
    8ab8:	ldr	r1, [pc, #3968]	; 9a40 <gen_linktype+0x2844>
    8abc:	add	r7, r0, #1
    8ac0:	cmp	r0, #15
    8ac4:	add	r1, pc, r1
    8ac8:	str	r7, [r1]
    8acc:	bge	a018 <gen_linktype+0x2e1c>
    8ad0:	mov	r0, #1024	; 0x400
    8ad4:	lsl	r4, r0, r7
    8ad8:	mov	r0, r4
    8adc:	bl	dec <malloc@plt>
    8ae0:	cmp	r0, #0
    8ae4:	str	r0, [r6, #12]
    8ae8:	beq	a018 <gen_linktype+0x2e1c>
    8aec:	mov	r1, #0
    8af0:	mov	r2, r4
    8af4:	add	r6, r6, #8
    8af8:	bl	e58 <memset@plt>
    8afc:	cmp	r4, #19
    8b00:	str	r4, [r6]
    8b04:	bhi	91a8 <gen_linktype+0x1fac>
    8b08:	b	a018 <gen_linktype+0x2e1c>
    8b0c:	cmp	r5, #2048	; 0x800
    8b10:	beq	8d50 <gen_linktype+0x1b54>
    8b14:	movw	r1, #34525	; 0x86dd
    8b18:	cmp	r5, r1
    8b1c:	bne	917c <gen_linktype+0x1f80>
    8b20:	mov	r3, #10
    8b24:	b	8d54 <gen_linktype+0x1b58>
    8b28:	.word	0x0003f908
    8b2c:	movw	r0, #32922	; 0x809a
    8b30:	cmp	r5, r0
    8b34:	bgt	8d90 <gen_linktype+0x1b94>
    8b38:	cmp	r5, #2048	; 0x800
    8b3c:	beq	95f0 <gen_linktype+0x23f4>
    8b40:	movw	r0, #24579	; 0x6003
    8b44:	cmp	r5, r0
    8b48:	bne	9190 <gen_linktype+0x1f94>
    8b4c:	ldr	r1, [pc, #3976]	; 9adc <gen_linktype+0x28e0>
    8b50:	mov	r5, #39	; 0x27
    8b54:	ldr	r1, [pc, r1]
    8b58:	b	961c <gen_linktype+0x2420>
    8b5c:	.word	0x0003f900
    8b60:	.word	0x0003f964
    8b64:	movw	r0, #32820	; 0x8034
    8b68:	cmp	r5, r0
    8b6c:	ble	90e4 <gen_linktype+0x1ee8>
    8b70:	movw	r0, #32821	; 0x8035
    8b74:	cmp	r5, r0
    8b78:	beq	963c <gen_linktype+0x2440>
    8b7c:	movw	r0, #32923	; 0x809b
    8b80:	cmp	r5, r0
    8b84:	beq	9654 <gen_linktype+0x2458>
    8b88:	movw	r0, #34525	; 0x86dd
    8b8c:	cmp	r5, r0
    8b90:	bne	917c <gen_linktype+0x1f80>
    8b94:	ldr	r1, [pc, #4072]	; 9b84 <gen_linktype+0x2988>
    8b98:	mov	r0, #1
    8b9c:	mov	r2, #16
    8ba0:	mov	r3, #196	; 0xc4
    8ba4:	ldr	r1, [pc, r1]
    8ba8:	b	87fc <gen_linktype+0x1600>
    8bac:	.word	0x0003f8bc
    8bb0:	.word	0x0003f88c
    8bb4:	.word	0x0003f8b8
    8bb8:	add	r2, sp, #12
    8bbc:	str	r0, [r2]
    8bc0:	ldr	r1, [r7, #44]	; 0x2c
    8bc4:	clz	r1, r1
    8bc8:	lsr	r1, r1, #5
    8bcc:	str	r1, [r7, #44]	; 0x2c
    8bd0:	ldr	r0, [r0, #96]	; 0x60
    8bd4:	str	r0, [r7, #96]	; 0x60
    8bd8:	mov	r0, r5
    8bdc:	bl	1c250 <gen_llc_linktype>
    8be0:	mov	r4, r0
    8be4:	cmp	r7, #0
    8be8:	beq	8c1c <gen_linktype+0x1a20>
    8bec:	ldr	r0, [r4, #96]	; 0x60
    8bf0:	mov	r1, r7
    8bf4:	ldr	r2, [r1, #44]	; 0x2c
    8bf8:	add	r3, r1, #84	; 0x54
    8bfc:	cmp	r2, #0
    8c00:	mov	r2, #84	; 0x54
    8c04:	movweq	r2, #60	; 0x3c
    8c08:	addeq	r3, r1, #60	; 0x3c
    8c0c:	ldr	r1, [r1, r2]
    8c10:	str	r0, [r3]
    8c14:	cmp	r1, #0
    8c18:	bne	8bf4 <gen_linktype+0x19f8>
    8c1c:	ldr	r0, [r7, #44]	; 0x2c
    8c20:	cmp	r4, #0
    8c24:	clz	r0, r0
    8c28:	lsr	r0, r0, #5
    8c2c:	str	r0, [r7, #44]	; 0x2c
    8c30:	ldr	r1, [r4, #44]	; 0x2c
    8c34:	clz	r0, r1
    8c38:	lsr	r0, r0, #5
    8c3c:	str	r0, [r4, #44]	; 0x2c
    8c40:	str	r4, [sp, #12]
    8c44:	beq	8c90 <gen_linktype+0x1a94>
    8c48:	cmp	r1, #0
    8c4c:	mov	r1, #60	; 0x3c
    8c50:	add	r0, r4, #60	; 0x3c
    8c54:	movweq	r1, #84	; 0x54
    8c58:	addeq	r0, r4, #84	; 0x54
    8c5c:	ldr	r1, [r4, r1]
    8c60:	cmp	r1, #0
    8c64:	beq	8c94 <gen_linktype+0x1a98>
    8c68:	ldr	r2, [r1, #44]	; 0x2c
    8c6c:	add	r0, r1, #84	; 0x54
    8c70:	cmp	r2, #0
    8c74:	mov	r2, #84	; 0x54
    8c78:	movweq	r2, #60	; 0x3c
    8c7c:	addeq	r0, r1, #60	; 0x3c
    8c80:	ldr	r1, [r1, r2]
    8c84:	cmp	r1, #0
    8c88:	bne	8c68 <gen_linktype+0x1a6c>
    8c8c:	b	8c94 <gen_linktype+0x1a98>
    8c90:	add	r0, sp, #12
    8c94:	str	r7, [r0]
    8c98:	ldr	r0, [r4, #44]	; 0x2c
    8c9c:	clz	r0, r0
    8ca0:	lsr	r0, r0, #5
    8ca4:	str	r0, [r4, #44]	; 0x2c
    8ca8:	ldr	r0, [r7, #96]	; 0x60
    8cac:	b	869c <gen_linktype+0x14a0>
    8cb0:	.word	0x0003f840
    8cb4:	.word	0x0003f830
    8cb8:	.word	0x0003f828
    8cbc:	.word	0x0003f820
    8cc0:	.word	0x0003f7dc
    8cc4:	.word	0x0003f7ac
    8cc8:	mov	r0, #1
    8ccc:	mov	r1, #0
    8cd0:	mov	r2, #16
    8cd4:	bl	17970 <gen_load_a>
    8cd8:	mov	r8, r0
    8cdc:	ldr	r0, [pc, #3912]	; 9c2c <gen_linktype+0x2a30>
    8ce0:	ldr	r0, [pc, r0]
    8ce4:	ldr	r5, [pc, #3908]	; 9c30 <gen_linktype+0x2a34>
    8ce8:	add	r5, pc, r5
    8cec:	mov	r6, r5
    8cf0:	ldr	r4, [r6, r0, lsl #3]!
    8cf4:	cmp	r4, #19
    8cf8:	bhi	925c <gen_linktype+0x2060>
    8cfc:	ldr	r1, [pc, #3888]	; 9c34 <gen_linktype+0x2a38>
    8d00:	add	r7, r0, #1
    8d04:	cmp	r0, #15
    8d08:	add	r1, pc, r1
    8d0c:	str	r7, [r1]
    8d10:	bge	a018 <gen_linktype+0x2e1c>
    8d14:	mov	r0, #1024	; 0x400
    8d18:	lsl	r4, r0, r7
    8d1c:	mov	r0, r4
    8d20:	bl	dec <malloc@plt>
    8d24:	cmp	r0, #0
    8d28:	str	r0, [r6, #12]
    8d2c:	beq	a018 <gen_linktype+0x2e1c>
    8d30:	mov	r1, #0
    8d34:	mov	r2, r4
    8d38:	add	r6, r6, #8
    8d3c:	bl	e58 <memset@plt>
    8d40:	cmp	r4, #19
    8d44:	str	r4, [r6]
    8d48:	bhi	9260 <gen_linktype+0x2064>
    8d4c:	b	a018 <gen_linktype+0x2e1c>
    8d50:	mov	r3, #2
    8d54:	cmp	r0, #109	; 0x6d
    8d58:	mov	r1, #0
    8d5c:	mov	r2, #0
    8d60:	cmpne	r0, #0
    8d64:	mov	r0, #1
    8d68:	reveq	r3, r3
    8d6c:	b	87fc <gen_linktype+0x1600>
    8d70:	cmp	r5, #254	; 0xfe
    8d74:	beq	9600 <gen_linktype+0x2404>
    8d78:	cmp	r5, #1536	; 0x600
    8d7c:	bne	9190 <gen_linktype+0x1f94>
    8d80:	ldr	r1, [pc, #4036]	; 9d4c <gen_linktype+0x2b50>
    8d84:	mov	r5, #37	; 0x25
    8d88:	ldr	r1, [pc, r1]
    8d8c:	b	961c <gen_linktype+0x2420>
    8d90:	movw	r0, #32923	; 0x809b
    8d94:	cmp	r5, r0
    8d98:	beq	9610 <gen_linktype+0x2414>
    8d9c:	movw	r0, #34525	; 0x86dd
    8da0:	cmp	r5, r0
    8da4:	bne	9190 <gen_linktype+0x1f94>
    8da8:	ldr	r1, [pc, #4072]	; 9d98 <gen_linktype+0x2b9c>
    8dac:	mov	r5, #87	; 0x57
    8db0:	ldr	r1, [pc, r1]
    8db4:	b	961c <gen_linktype+0x2420>
    8db8:	.word	0x0003f6bc
    8dbc:	.word	0x0003f720
    8dc0:	movw	r0, #34525	; 0x86dd
    8dc4:	cmp	r5, r0
    8dc8:	beq	9624 <gen_linktype+0x2428>
    8dcc:	cmp	r5, #2048	; 0x800
    8dd0:	bne	917c <gen_linktype+0x1f80>
    8dd4:	ldr	r1, [pc, #4032]	; 9d9c <gen_linktype+0x2ba0>
    8dd8:	mov	r0, #1
    8ddc:	mov	r2, #16
    8de0:	mov	r3, #2
    8de4:	ldr	r1, [pc, r1]
    8de8:	b	87fc <gen_linktype+0x1600>
    8dec:	.word	0x0003f678
    8df0:	.word	0x0003f648
    8df4:	.word	0x0003f6a8
    8df8:	.word	0x0003f584
    8dfc:	ldr	r0, [pc, #3996]	; 9da0 <gen_linktype+0x2ba4>
    8e00:	add	r0, pc, r0
    8e04:	ldrb	r0, [r0]
    8e08:	cmp	r0, #1
    8e0c:	bne	9310 <gen_linktype+0x2114>
    8e10:	mov	r0, #1
    8e14:	mov	r1, #4
    8e18:	mov	r2, #8
    8e1c:	mov	r3, #65280	; 0xff00
    8e20:	bl	a8f8 <gen_cmp>
    8e24:	mov	r6, r0
    8e28:	ldr	r0, [r0, #44]	; 0x2c
    8e2c:	clz	r0, r0
    8e30:	lsr	r0, r0, #5
    8e34:	str	r0, [r6, #44]	; 0x2c
    8e38:	mov	r0, r5
    8e3c:	bl	1ba4c <gen_ether_linktype>
    8e40:	mov	r4, r0
    8e44:	cmp	r6, #0
    8e48:	beq	8e7c <gen_linktype+0x1c80>
    8e4c:	ldr	r0, [r4, #96]	; 0x60
    8e50:	mov	r1, r6
    8e54:	ldr	r2, [r1, #44]	; 0x2c
    8e58:	add	r3, r1, #84	; 0x54
    8e5c:	cmp	r2, #0
    8e60:	mov	r2, #84	; 0x54
    8e64:	movweq	r2, #60	; 0x3c
    8e68:	addeq	r3, r1, #60	; 0x3c
    8e6c:	ldr	r1, [r1, r2]
    8e70:	str	r0, [r3]
    8e74:	cmp	r1, #0
    8e78:	bne	8e54 <gen_linktype+0x1c58>
    8e7c:	ldr	r0, [r6, #44]	; 0x2c
    8e80:	cmp	r4, #0
    8e84:	clz	r0, r0
    8e88:	lsr	r0, r0, #5
    8e8c:	str	r0, [r6, #44]	; 0x2c
    8e90:	ldr	r1, [r4, #44]	; 0x2c
    8e94:	clz	r0, r1
    8e98:	lsr	r0, r0, #5
    8e9c:	str	r0, [r4, #44]	; 0x2c
    8ea0:	str	r4, [sp, #12]
    8ea4:	beq	9a14 <gen_linktype+0x2818>
    8ea8:	cmp	r1, #0
    8eac:	mov	r1, #60	; 0x3c
    8eb0:	add	r0, r4, #60	; 0x3c
    8eb4:	movweq	r1, #84	; 0x54
    8eb8:	addeq	r0, r4, #84	; 0x54
    8ebc:	ldr	r1, [r4, r1]
    8ec0:	cmp	r1, #0
    8ec4:	beq	9a18 <gen_linktype+0x281c>
    8ec8:	ldr	r2, [r1, #44]	; 0x2c
    8ecc:	add	r0, r1, #84	; 0x54
    8ed0:	cmp	r2, #0
    8ed4:	mov	r2, #84	; 0x54
    8ed8:	movweq	r2, #60	; 0x3c
    8edc:	addeq	r0, r1, #60	; 0x3c
    8ee0:	ldr	r1, [r1, r2]
    8ee4:	cmp	r1, #0
    8ee8:	bne	8ec8 <gen_linktype+0x1ccc>
    8eec:	b	9a18 <gen_linktype+0x281c>
    8ef0:	ldr	r1, [pc, #4076]	; 9ee4 <gen_linktype+0x2ce8>
    8ef4:	ldr	r1, [pc, r1]
    8ef8:	cmn	r1, #1
    8efc:	bne	961c <gen_linktype+0x2420>
    8f00:	bl	edc <abort@plt>
    8f04:	.word	0x0003f578
    8f08:	.word	0x0003f5d8
    8f0c:	cmp	r5, #2048	; 0x800
    8f10:	bge	93e0 <gen_linktype+0x21e4>
    8f14:	cmp	r5, #253	; 0xfd
    8f18:	bgt	96f0 <gen_linktype+0x24f4>
    8f1c:	cmp	r5, #66	; 0x42
    8f20:	beq	918c <gen_linktype+0x1f90>
    8f24:	cmp	r5, #224	; 0xe0
    8f28:	bne	9190 <gen_linktype+0x1f94>
    8f2c:	ldr	r1, [pc, #4092]	; 9f30 <gen_linktype+0x2d34>
    8f30:	mov	r5, #43	; 0x2b
    8f34:	ldr	r1, [pc, r1]
    8f38:	b	961c <gen_linktype+0x2420>
    8f3c:	mov	r0, r5
    8f40:	sub	sp, fp, #28
    8f44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8f48:	b	1ba4c <gen_ether_linktype>
    8f4c:	.word	0x0003f53c
    8f50:	.word	0x0003f4c4
    8f54:	cmp	r5, #253	; 0xfd
    8f58:	bgt	9424 <gen_linktype+0x2228>
    8f5c:	cmp	r5, #6
    8f60:	beq	8f74 <gen_linktype+0x1d78>
    8f64:	cmp	r5, #224	; 0xe0
    8f68:	beq	9a44 <gen_linktype+0x2848>
    8f6c:	cmp	r5, #240	; 0xf0
    8f70:	bne	9924 <gen_linktype+0x2728>
    8f74:	ldr	r1, [pc, #4040]	; 9f44 <gen_linktype+0x2d48>
    8f78:	mov	r0, #1
    8f7c:	mov	r2, #8
    8f80:	mov	r3, #4
    8f84:	ldr	r1, [pc, r1]
    8f88:	bl	a8f8 <gen_cmp>
    8f8c:	orr	r3, r5, r5, lsl #8
    8f90:	mov	r6, r0
    8f94:	mov	r0, #2
    8f98:	mov	r1, #0
    8f9c:	mov	r2, #8
    8fa0:	bl	a8f8 <gen_cmp>
    8fa4:	mov	r4, r0
    8fa8:	cmp	r6, #0
    8fac:	beq	8fe0 <gen_linktype+0x1de4>
    8fb0:	ldr	r0, [r4, #96]	; 0x60
    8fb4:	mov	r1, r6
    8fb8:	ldr	r2, [r1, #44]	; 0x2c
    8fbc:	add	r3, r1, #84	; 0x54
    8fc0:	cmp	r2, #0
    8fc4:	mov	r2, #84	; 0x54
    8fc8:	movweq	r2, #60	; 0x3c
    8fcc:	addeq	r3, r1, #60	; 0x3c
    8fd0:	ldr	r1, [r1, r2]
    8fd4:	str	r0, [r3]
    8fd8:	cmp	r1, #0
    8fdc:	bne	8fb8 <gen_linktype+0x1dbc>
    8fe0:	ldr	r0, [r6, #44]	; 0x2c
    8fe4:	cmp	r4, #0
    8fe8:	clz	r0, r0
    8fec:	lsr	r0, r0, #5
    8ff0:	str	r0, [r6, #44]	; 0x2c
    8ff4:	ldr	r1, [r4, #44]	; 0x2c
    8ff8:	clz	r0, r1
    8ffc:	lsr	r0, r0, #5
    9000:	str	r0, [r4, #44]	; 0x2c
    9004:	str	r4, [sp, #12]
    9008:	beq	9a14 <gen_linktype+0x2818>
    900c:	cmp	r1, #0
    9010:	mov	r1, #60	; 0x3c
    9014:	add	r0, r4, #60	; 0x3c
    9018:	movweq	r1, #84	; 0x54
    901c:	addeq	r0, r4, #84	; 0x54
    9020:	ldr	r1, [r4, r1]
    9024:	cmp	r1, #0
    9028:	beq	9a18 <gen_linktype+0x281c>
    902c:	ldr	r2, [r1, #44]	; 0x2c
    9030:	add	r0, r1, #84	; 0x54
    9034:	cmp	r2, #0
    9038:	mov	r2, #84	; 0x54
    903c:	movweq	r2, #60	; 0x3c
    9040:	addeq	r0, r1, #60	; 0x3c
    9044:	ldr	r1, [r1, r2]
    9048:	cmp	r1, #0
    904c:	bne	902c <gen_linktype+0x1e30>
    9050:	b	9a18 <gen_linktype+0x281c>
    9054:	.word	0x0003f4b4
    9058:	.word	0x0003f4ac
    905c:	.word	0x0003f4a4
    9060:	movw	r0, #32923	; 0x809b
    9064:	cmp	r5, r0
    9068:	beq	90d8 <gen_linktype+0x1edc>
    906c:	b	917c <gen_linktype+0x1f80>
    9070:	movw	r0, #34525	; 0x86dd
    9074:	cmp	r5, r0
    9078:	beq	90d8 <gen_linktype+0x1edc>
    907c:	b	917c <gen_linktype+0x1f80>
    9080:	ldr	r1, [pc, #4092]	; a084 <gen_linktype+0x2e88>
    9084:	cmp	r5, #254	; 0xfe
    9088:	movweq	r5, #65278	; 0xfefe
    908c:	ldr	r1, [pc, r1]
    9090:	b	961c <gen_linktype+0x2420>
    9094:	.word	0x00023031
    9098:	.word	0x0003f458
    909c:	cmp	r5, #254	; 0xfe
    90a0:	beq	9750 <gen_linktype+0x2554>
    90a4:	movw	r0, #34525	; 0x86dd
    90a8:	cmp	r5, r0
    90ac:	beq	973c <gen_linktype+0x2540>
    90b0:	cmp	r5, #2048	; 0x800
    90b4:	bne	917c <gen_linktype+0x1f80>
    90b8:	mov	r0, #1
    90bc:	mov	r1, #2
    90c0:	mov	r2, #8
    90c4:	mov	r3, #972	; 0x3cc
    90c8:	b	87fc <gen_linktype+0x1600>
    90cc:	.word	0x0003f428
    90d0:	cmp	r5, #2048	; 0x800
    90d4:	bne	917c <gen_linktype+0x1f80>
    90d8:	mov	r0, #1
    90dc:	b	9180 <gen_linktype+0x1f84>
    90e0:	.word	0x0003f398
    90e4:	cmp	r5, #2048	; 0x800
    90e8:	beq	966c <gen_linktype+0x2470>
    90ec:	movw	r0, #2054	; 0x806
    90f0:	cmp	r5, r0
    90f4:	bne	917c <gen_linktype+0x1f80>
    90f8:	ldr	r1, [pc, #4072]	; a0e8 <gen_linktype+0x2eec>
    90fc:	mov	r0, #1
    9100:	mov	r2, #16
    9104:	mov	r3, #213	; 0xd5
    9108:	ldr	r1, [pc, r1]
    910c:	bl	a8f8 <gen_cmp>
    9110:	ldr	r1, [pc, #4052]	; a0ec <gen_linktype+0x2ef0>
    9114:	mov	r5, r0
    9118:	mov	r0, #1
    911c:	mov	r2, #16
    9120:	mov	r3, #241	; 0xf1
    9124:	ldr	r1, [pc, r1]
    9128:	bl	a8f8 <gen_cmp>
    912c:	mov	r4, r0
    9130:	ldr	r0, [r5, #44]	; 0x2c
    9134:	cmp	r5, #0
    9138:	clz	r0, r0
    913c:	lsr	r0, r0, #5
    9140:	str	r0, [r5, #44]	; 0x2c
    9144:	beq	9888 <gen_linktype+0x268c>
    9148:	ldr	r1, [r4, #96]	; 0x60
    914c:	mov	r2, r5
    9150:	cmp	r0, #0
    9154:	mov	r0, #84	; 0x54
    9158:	add	r3, r2, #84	; 0x54
    915c:	movweq	r0, #60	; 0x3c
    9160:	addeq	r3, r2, #60	; 0x3c
    9164:	ldr	r2, [r2, r0]
    9168:	str	r1, [r3]
    916c:	cmp	r2, #0
    9170:	beq	9884 <gen_linktype+0x2688>
    9174:	ldr	r0, [r2, #44]	; 0x2c
    9178:	b	9150 <gen_linktype+0x1f54>
    917c:	mov	r0, #0
    9180:	sub	sp, fp, #28
    9184:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9188:	b	1c650 <gen_uncond>
    918c:	mov	r5, #49	; 0x31
    9190:	ldr	r1, [pc, #3976]	; a120 <gen_linktype+0x2f24>
    9194:	ldr	r1, [pc, r1]
    9198:	b	961c <gen_linktype+0x2420>
    919c:	.word	0x0003f32c
    91a0:	.word	0x0003f204
    91a4:	mov	r7, r0
    91a8:	sub	r1, r4, #20
    91ac:	mov	r2, #84	; 0x54
    91b0:	str	r1, [r6]
    91b4:	ldr	r0, [r6, #4]
    91b8:	str	r2, [r0, r1]!
    91bc:	mov	r1, #240	; 0xf0
    91c0:	mov	r2, r8
    91c4:	str	r1, [r0, #12]
    91c8:	mov	r1, r2
    91cc:	ldr	r2, [r2, #16]
    91d0:	cmp	r2, #0
    91d4:	bne	91c8 <gen_linktype+0x1fcc>
    91d8:	str	r0, [r1, #16]
    91dc:	ldr	r4, [r5, r7, lsl #3]!
    91e0:	cmp	r4, #207	; 0xcf
    91e4:	bhi	9238 <gen_linktype+0x203c>
    91e8:	ldr	r1, [pc, #3872]	; a110 <gen_linktype+0x2f14>
    91ec:	add	r0, r7, #1
    91f0:	cmp	r7, #15
    91f4:	add	r1, pc, r1
    91f8:	str	r0, [r1]
    91fc:	bge	a018 <gen_linktype+0x2e1c>
    9200:	mov	r1, #1024	; 0x400
    9204:	lsl	r4, r1, r0
    9208:	mov	r0, r4
    920c:	bl	dec <malloc@plt>
    9210:	cmp	r0, #0
    9214:	str	r0, [r5, #12]
    9218:	beq	a018 <gen_linktype+0x2e1c>
    921c:	mov	r1, #0
    9220:	mov	r2, r4
    9224:	add	r5, r5, #8
    9228:	bl	e58 <memset@plt>
    922c:	cmp	r4, #207	; 0xcf
    9230:	str	r4, [r5]
    9234:	bls	a018 <gen_linktype+0x2e1c>
    9238:	sub	r0, r4, #208	; 0xd0
    923c:	str	r0, [r5]
    9240:	ldr	r1, [r5, #4]
    9244:	add	r4, r1, r0
    9248:	mov	r0, #21
    924c:	mov	r1, #64	; 0x40
    9250:	b	87b0 <gen_linktype+0x15b4>
    9254:	.word	0x0003f20c
    9258:	.word	0x0003f238
    925c:	mov	r7, r0
    9260:	sub	r1, r4, #20
    9264:	mov	r2, #84	; 0x54
    9268:	str	r1, [r6]
    926c:	ldr	r0, [r6, #4]
    9270:	str	r2, [r0, r1]!
    9274:	mov	r1, #240	; 0xf0
    9278:	mov	r2, r8
    927c:	str	r1, [r0, #12]
    9280:	mov	r1, r2
    9284:	ldr	r2, [r2, #16]
    9288:	cmp	r2, #0
    928c:	bne	9280 <gen_linktype+0x2084>
    9290:	str	r0, [r1, #16]
    9294:	ldr	r4, [r5, r7, lsl #3]!
    9298:	cmp	r4, #207	; 0xcf
    929c:	bhi	92f0 <gen_linktype+0x20f4>
    92a0:	ldr	r1, [pc, #3692]	; a114 <gen_linktype+0x2f18>
    92a4:	add	r0, r7, #1
    92a8:	cmp	r7, #15
    92ac:	add	r1, pc, r1
    92b0:	str	r0, [r1]
    92b4:	bge	a018 <gen_linktype+0x2e1c>
    92b8:	mov	r1, #1024	; 0x400
    92bc:	lsl	r4, r1, r0
    92c0:	mov	r0, r4
    92c4:	bl	dec <malloc@plt>
    92c8:	cmp	r0, #0
    92cc:	str	r0, [r5, #12]
    92d0:	beq	a018 <gen_linktype+0x2e1c>
    92d4:	mov	r1, #0
    92d8:	mov	r2, r4
    92dc:	add	r5, r5, #8
    92e0:	bl	e58 <memset@plt>
    92e4:	cmp	r4, #207	; 0xcf
    92e8:	str	r4, [r5]
    92ec:	bls	a018 <gen_linktype+0x2e1c>
    92f0:	sub	r0, r4, #208	; 0xd0
    92f4:	str	r0, [r5]
    92f8:	ldr	r1, [r5, #4]
    92fc:	add	r4, r1, r0
    9300:	mov	r0, #21
    9304:	mov	r1, #96	; 0x60
    9308:	b	87b0 <gen_linktype+0x15b4>
    930c:	.word	0x0003f19c
    9310:	mov	r0, #53	; 0x35
    9314:	mov	r1, #2
    9318:	mov	r2, #16
    931c:	mov	r3, #0
    9320:	bl	19314 <sf_gen_atmfield_code>
    9324:	mov	r6, r0
    9328:	mov	r0, r5
    932c:	bl	1c250 <gen_llc_linktype>
    9330:	mov	r4, r0
    9334:	cmp	r6, #0
    9338:	beq	936c <gen_linktype+0x2170>
    933c:	ldr	r0, [r4, #96]	; 0x60
    9340:	mov	r1, r6
    9344:	ldr	r2, [r1, #44]	; 0x2c
    9348:	add	r3, r1, #84	; 0x54
    934c:	cmp	r2, #0
    9350:	mov	r2, #84	; 0x54
    9354:	movweq	r2, #60	; 0x3c
    9358:	addeq	r3, r1, #60	; 0x3c
    935c:	ldr	r1, [r1, r2]
    9360:	str	r0, [r3]
    9364:	cmp	r1, #0
    9368:	bne	9344 <gen_linktype+0x2148>
    936c:	ldr	r0, [r6, #44]	; 0x2c
    9370:	cmp	r4, #0
    9374:	clz	r0, r0
    9378:	lsr	r0, r0, #5
    937c:	str	r0, [r6, #44]	; 0x2c
    9380:	ldr	r1, [r4, #44]	; 0x2c
    9384:	clz	r0, r1
    9388:	lsr	r0, r0, #5
    938c:	str	r0, [r4, #44]	; 0x2c
    9390:	str	r4, [sp, #12]
    9394:	beq	9a14 <gen_linktype+0x2818>
    9398:	cmp	r1, #0
    939c:	mov	r1, #60	; 0x3c
    93a0:	add	r0, r4, #60	; 0x3c
    93a4:	movweq	r1, #84	; 0x54
    93a8:	addeq	r0, r4, #84	; 0x54
    93ac:	ldr	r1, [r4, r1]
    93b0:	cmp	r1, #0
    93b4:	beq	9a18 <gen_linktype+0x281c>
    93b8:	ldr	r2, [r1, #44]	; 0x2c
    93bc:	add	r0, r1, #84	; 0x54
    93c0:	cmp	r2, #0
    93c4:	mov	r2, #84	; 0x54
    93c8:	movweq	r2, #60	; 0x3c
    93cc:	addeq	r0, r1, #60	; 0x3c
    93d0:	ldr	r1, [r1, r2]
    93d4:	cmp	r1, #0
    93d8:	bne	93b8 <gen_linktype+0x21bc>
    93dc:	b	9a18 <gen_linktype+0x281c>
    93e0:	movw	r0, #32922	; 0x809a
    93e4:	cmp	r5, r0
    93e8:	bgt	9710 <gen_linktype+0x2514>
    93ec:	cmp	r5, #2048	; 0x800
    93f0:	beq	9ae0 <gen_linktype+0x28e4>
    93f4:	movw	r0, #24579	; 0x6003
    93f8:	cmp	r5, r0
    93fc:	bne	9190 <gen_linktype+0x1f94>
    9400:	ldr	r1, [pc, #3360]	; a128 <gen_linktype+0x2f2c>
    9404:	mov	r5, #39	; 0x27
    9408:	ldr	r1, [pc, r1]
    940c:	b	961c <gen_linktype+0x2420>
    9410:	.word	0x0003efd0
    9414:	.word	0x0003f034
    9418:	.word	0x0003ef8c
    941c:	.word	0x0003ef5c
    9420:	.word	0x0003ef8c
    9424:	movw	r0, #33011	; 0x80f3
    9428:	cmp	r5, r0
    942c:	movwne	r0, #32923	; 0x809b
    9430:	cmpne	r5, r0
    9434:	bne	991c <gen_linktype+0x2720>
    9438:	ldr	r1, [pc, #3272]	; a108 <gen_linktype+0x2f0c>
    943c:	mov	r0, #1
    9440:	mov	r2, #8
    9444:	mov	r3, #4
    9448:	ldr	r1, [pc, r1]
    944c:	bl	a8f8 <gen_cmp>
    9450:	mov	r6, r0
    9454:	movw	r0, #32923	; 0x809b
    9458:	mvn	r1, #12
    945c:	mov	r2, #0
    9460:	add	r7, sp, #12
    9464:	cmp	r5, r0
    9468:	mov	r3, r7
    946c:	mvneq	r1, #100	; 0x64
    9470:	cmp	r5, r0
    9474:	sub	r0, r5, r0
    9478:	clz	r0, r0
    947c:	strb	r1, [sp, #19]
    9480:	mov	r1, #128	; 0x80
    9484:	movweq	r2, #7
    9488:	lsr	r0, r0, #5
    948c:	strb	r1, [sp, #18]
    9490:	mov	r1, #0
    9494:	strb	r2, [sp, #17]
    9498:	mov	r2, #8
    949c:	lsl	r0, r0, #3
    94a0:	strb	r1, [sp, #16]
    94a4:	mov	r1, #0
    94a8:	strb	r0, [sp, #15]
    94ac:	mov	r0, #3
    94b0:	strb	r0, [sp, #14]
    94b4:	movw	r0, #43690	; 0xaaaa
    94b8:	strh	r0, [sp, #12]
    94bc:	mov	r0, #2
    94c0:	bl	1c314 <gen_bcmp>
    94c4:	mov	r4, r0
    94c8:	cmp	r6, #0
    94cc:	beq	9500 <gen_linktype+0x2304>
    94d0:	ldr	r0, [r4, #96]	; 0x60
    94d4:	mov	r1, r6
    94d8:	ldr	r2, [r1, #44]	; 0x2c
    94dc:	add	r3, r1, #84	; 0x54
    94e0:	cmp	r2, #0
    94e4:	mov	r2, #84	; 0x54
    94e8:	movweq	r2, #60	; 0x3c
    94ec:	addeq	r3, r1, #60	; 0x3c
    94f0:	ldr	r1, [r1, r2]
    94f4:	str	r0, [r3]
    94f8:	cmp	r1, #0
    94fc:	bne	94d8 <gen_linktype+0x22dc>
    9500:	ldr	r0, [r6, #44]	; 0x2c
    9504:	cmp	r4, #0
    9508:	clz	r0, r0
    950c:	lsr	r0, r0, #5
    9510:	str	r0, [r6, #44]	; 0x2c
    9514:	ldr	r0, [r4, #44]	; 0x2c
    9518:	clz	r1, r0
    951c:	lsr	r1, r1, #5
    9520:	str	r1, [r4, #44]	; 0x2c
    9524:	str	r4, [sp, #12]
    9528:	beq	9570 <gen_linktype+0x2374>
    952c:	cmp	r0, #0
    9530:	mov	r0, #60	; 0x3c
    9534:	add	r7, r4, #60	; 0x3c
    9538:	movweq	r0, #84	; 0x54
    953c:	addeq	r7, r4, #84	; 0x54
    9540:	ldr	r0, [r4, r0]
    9544:	cmp	r0, #0
    9548:	beq	9570 <gen_linktype+0x2374>
    954c:	ldr	r1, [r0, #44]	; 0x2c
    9550:	add	r7, r0, #84	; 0x54
    9554:	cmp	r1, #0
    9558:	mov	r1, #84	; 0x54
    955c:	movweq	r1, #60	; 0x3c
    9560:	addeq	r7, r0, #60	; 0x3c
    9564:	ldr	r0, [r0, r1]
    9568:	cmp	r0, #0
    956c:	bne	954c <gen_linktype+0x2350>
    9570:	str	r6, [r7]
    9574:	mov	r2, #8
    9578:	mov	r3, r5
    957c:	ldr	r0, [r4, #44]	; 0x2c
    9580:	clz	r0, r0
    9584:	lsr	r0, r0, #5
    9588:	str	r0, [r4, #44]	; 0x2c
    958c:	ldr	r0, [r6, #96]	; 0x60
    9590:	str	r0, [r4, #96]	; 0x60
    9594:	mov	r0, #1
    9598:	ldr	r1, [pc, #2924]	; a10c <gen_linktype+0x2f10>
    959c:	ldr	r1, [pc, r1]
    95a0:	bl	a8f8 <gen_cmp>
    95a4:	ldr	r1, [r0, #44]	; 0x2c
    95a8:	cmp	r0, #0
    95ac:	clz	r1, r1
    95b0:	lsr	r1, r1, #5
    95b4:	str	r1, [r0, #44]	; 0x2c
    95b8:	beq	97ec <gen_linktype+0x25f0>
    95bc:	ldr	r2, [r4, #96]	; 0x60
    95c0:	mov	r3, r0
    95c4:	cmp	r1, #0
    95c8:	mov	r1, #84	; 0x54
    95cc:	add	r7, r3, #84	; 0x54
    95d0:	movweq	r1, #60	; 0x3c
    95d4:	addeq	r7, r3, #60	; 0x3c
    95d8:	ldr	r3, [r3, r1]
    95dc:	str	r2, [r7]
    95e0:	cmp	r3, #0
    95e4:	beq	97e8 <gen_linktype+0x25ec>
    95e8:	ldr	r1, [r3, #44]	; 0x2c
    95ec:	b	95c4 <gen_linktype+0x23c8>
    95f0:	ldr	r1, [pc, #2976]	; a198 <gen_linktype+0x2f9c>
    95f4:	mov	r5, #33	; 0x21
    95f8:	ldr	r1, [pc, r1]
    95fc:	b	961c <gen_linktype+0x2420>
    9600:	ldr	r1, [pc, #2836]	; a11c <gen_linktype+0x2f20>
    9604:	mov	r5, #35	; 0x23
    9608:	ldr	r1, [pc, r1]
    960c:	b	961c <gen_linktype+0x2420>
    9610:	ldr	r1, [pc, #2816]	; a118 <gen_linktype+0x2f1c>
    9614:	mov	r5, #41	; 0x29
    9618:	ldr	r1, [pc, r1]
    961c:	mov	r0, #1
    9620:	b	87f4 <gen_linktype+0x15f8>
    9624:	ldr	r1, [pc, #2860]	; a158 <gen_linktype+0x2f5c>
    9628:	mov	r0, #1
    962c:	mov	r2, #16
    9630:	mov	r3, #26
    9634:	ldr	r1, [pc, r1]
    9638:	b	87fc <gen_linktype+0x1600>
    963c:	ldr	r1, [pc, #2824]	; a14c <gen_linktype+0x2f50>
    9640:	mov	r0, #1
    9644:	mov	r2, #16
    9648:	mov	r3, #214	; 0xd6
    964c:	ldr	r1, [pc, r1]
    9650:	b	87fc <gen_linktype+0x1600>
    9654:	ldr	r1, [pc, #2804]	; a150 <gen_linktype+0x2f54>
    9658:	mov	r0, #1
    965c:	mov	r2, #16
    9660:	mov	r3, #221	; 0xdd
    9664:	ldr	r1, [pc, r1]
    9668:	b	87fc <gen_linktype+0x1600>
    966c:	ldr	r1, [pc, #2768]	; a144 <gen_linktype+0x2f48>
    9670:	mov	r0, #1
    9674:	mov	r2, #16
    9678:	mov	r3, #212	; 0xd4
    967c:	ldr	r1, [pc, r1]
    9680:	bl	a8f8 <gen_cmp>
    9684:	ldr	r1, [pc, #2748]	; a148 <gen_linktype+0x2f4c>
    9688:	mov	r5, r0
    968c:	mov	r0, #1
    9690:	mov	r2, #16
    9694:	mov	r3, #240	; 0xf0
    9698:	ldr	r1, [pc, r1]
    969c:	bl	a8f8 <gen_cmp>
    96a0:	mov	r4, r0
    96a4:	ldr	r0, [r5, #44]	; 0x2c
    96a8:	cmp	r5, #0
    96ac:	clz	r0, r0
    96b0:	lsr	r0, r0, #5
    96b4:	str	r0, [r5, #44]	; 0x2c
    96b8:	beq	9840 <gen_linktype+0x2644>
    96bc:	ldr	r1, [r4, #96]	; 0x60
    96c0:	mov	r2, r5
    96c4:	cmp	r0, #0
    96c8:	mov	r0, #84	; 0x54
    96cc:	add	r3, r2, #84	; 0x54
    96d0:	movweq	r0, #60	; 0x3c
    96d4:	addeq	r3, r2, #60	; 0x3c
    96d8:	ldr	r2, [r2, r0]
    96dc:	str	r1, [r3]
    96e0:	cmp	r2, #0
    96e4:	beq	983c <gen_linktype+0x2640>
    96e8:	ldr	r0, [r2, #44]	; 0x2c
    96ec:	b	96c4 <gen_linktype+0x24c8>
    96f0:	cmp	r5, #254	; 0xfe
    96f4:	beq	9b64 <gen_linktype+0x2968>
    96f8:	cmp	r5, #1536	; 0x600
    96fc:	bne	9190 <gen_linktype+0x1f94>
    9700:	ldr	r1, [pc, #2588]	; a124 <gen_linktype+0x2f28>
    9704:	mov	r5, #37	; 0x25
    9708:	ldr	r1, [pc, r1]
    970c:	b	961c <gen_linktype+0x2420>
    9710:	movw	r0, #32923	; 0x809b
    9714:	cmp	r5, r0
    9718:	beq	9b74 <gen_linktype+0x2978>
    971c:	movw	r0, #34525	; 0x86dd
    9720:	cmp	r5, r0
    9724:	bne	9190 <gen_linktype+0x1f94>
    9728:	ldr	r1, [pc, #2556]	; a12c <gen_linktype+0x2f30>
    972c:	mov	r5, #87	; 0x57
    9730:	ldr	r1, [pc, r1]
    9734:	b	961c <gen_linktype+0x2420>
    9738:	.word	0x0003edac
    973c:	mov	r0, #1
    9740:	mov	r1, #2
    9744:	mov	r2, #8
    9748:	movw	r3, #910	; 0x38e
    974c:	b	87fc <gen_linktype+0x1600>
    9750:	mov	r0, #1
    9754:	mov	r1, #2
    9758:	mov	r2, #8
    975c:	movw	r3, #897	; 0x381
    9760:	bl	a8f8 <gen_cmp>
    9764:	mov	r5, r0
    9768:	mov	r0, #1
    976c:	mov	r1, #2
    9770:	mov	r2, #8
    9774:	movw	r3, #898	; 0x382
    9778:	bl	a8f8 <gen_cmp>
    977c:	mov	r6, r0
    9780:	mov	r0, #1
    9784:	mov	r1, #2
    9788:	mov	r2, #8
    978c:	movw	r3, #899	; 0x383
    9790:	bl	a8f8 <gen_cmp>
    9794:	mov	r4, r0
    9798:	ldr	r0, [r6, #44]	; 0x2c
    979c:	cmp	r6, #0
    97a0:	clz	r0, r0
    97a4:	lsr	r0, r0, #5
    97a8:	str	r0, [r6, #44]	; 0x2c
    97ac:	beq	98d8 <gen_linktype+0x26dc>
    97b0:	ldr	r1, [r4, #96]	; 0x60
    97b4:	mov	r2, r6
    97b8:	cmp	r0, #0
    97bc:	mov	r0, #84	; 0x54
    97c0:	add	r3, r2, #84	; 0x54
    97c4:	movweq	r0, #60	; 0x3c
    97c8:	addeq	r3, r2, #60	; 0x3c
    97cc:	ldr	r2, [r2, r0]
    97d0:	str	r1, [r3]
    97d4:	cmp	r2, #0
    97d8:	beq	98d4 <gen_linktype+0x26d8>
    97dc:	ldr	r0, [r2, #44]	; 0x2c
    97e0:	b	97b8 <gen_linktype+0x25bc>
    97e4:	.word	0x0003ec48
    97e8:	ldr	r1, [r0, #44]	; 0x2c
    97ec:	clz	r1, r1
    97f0:	cmp	r4, #0
    97f4:	lsr	r1, r1, #5
    97f8:	str	r1, [r0, #44]	; 0x2c
    97fc:	str	r4, [sp, #12]
    9800:	beq	9f34 <gen_linktype+0x2d38>
    9804:	mov	r2, r4
    9808:	ldr	r3, [r2, #44]	; 0x2c
    980c:	add	r1, r2, #84	; 0x54
    9810:	cmp	r3, #0
    9814:	mov	r3, #84	; 0x54
    9818:	movweq	r3, #60	; 0x3c
    981c:	addeq	r1, r2, #60	; 0x3c
    9820:	ldr	r2, [r2, r3]
    9824:	cmp	r2, #0
    9828:	bne	9808 <gen_linktype+0x260c>
    982c:	b	9f38 <gen_linktype+0x2d3c>
    9830:	.word	0x0003eca4
    9834:	.word	0x0003ec1c
    9838:	.word	0x0003ec7c
    983c:	ldr	r0, [r5, #44]	; 0x2c
    9840:	clz	r0, r0
    9844:	cmp	r4, #0
    9848:	lsr	r0, r0, #5
    984c:	str	r0, [r5, #44]	; 0x2c
    9850:	str	r4, [sp, #12]
    9854:	beq	a008 <gen_linktype+0x2e0c>
    9858:	mov	r1, r4
    985c:	ldr	r2, [r1, #44]	; 0x2c
    9860:	add	r0, r1, #84	; 0x54
    9864:	cmp	r2, #0
    9868:	mov	r2, #84	; 0x54
    986c:	movweq	r2, #60	; 0x3c
    9870:	addeq	r0, r1, #60	; 0x3c
    9874:	ldr	r1, [r1, r2]
    9878:	cmp	r1, #0
    987c:	bne	985c <gen_linktype+0x2660>
    9880:	b	a00c <gen_linktype+0x2e10>
    9884:	ldr	r0, [r5, #44]	; 0x2c
    9888:	clz	r0, r0
    988c:	cmp	r4, #0
    9890:	lsr	r0, r0, #5
    9894:	str	r0, [r5, #44]	; 0x2c
    9898:	str	r4, [sp, #12]
    989c:	beq	a008 <gen_linktype+0x2e0c>
    98a0:	mov	r1, r4
    98a4:	ldr	r2, [r1, #44]	; 0x2c
    98a8:	add	r0, r1, #84	; 0x54
    98ac:	cmp	r2, #0
    98b0:	mov	r2, #84	; 0x54
    98b4:	movweq	r2, #60	; 0x3c
    98b8:	addeq	r0, r1, #60	; 0x3c
    98bc:	ldr	r1, [r1, r2]
    98c0:	cmp	r1, #0
    98c4:	bne	98a4 <gen_linktype+0x26a8>
    98c8:	b	a00c <gen_linktype+0x2e10>
    98cc:	.word	0x0003ebfc
    98d0:	.word	0x0003ebe0
    98d4:	ldr	r0, [r6, #44]	; 0x2c
    98d8:	clz	r0, r0
    98dc:	cmp	r4, #0
    98e0:	lsr	r0, r0, #5
    98e4:	str	r0, [r6, #44]	; 0x2c
    98e8:	str	r4, [sp, #12]
    98ec:	beq	9b88 <gen_linktype+0x298c>
    98f0:	mov	r1, r4
    98f4:	ldr	r2, [r1, #44]	; 0x2c
    98f8:	add	r0, r1, #84	; 0x54
    98fc:	cmp	r2, #0
    9900:	mov	r2, #84	; 0x54
    9904:	movweq	r2, #60	; 0x3c
    9908:	addeq	r0, r1, #60	; 0x3c
    990c:	ldr	r1, [r1, r2]
    9910:	cmp	r1, #0
    9914:	bne	98f4 <gen_linktype+0x26f8>
    9918:	b	9b8c <gen_linktype+0x2990>
    991c:	cmp	r5, #254	; 0xfe
    9920:	beq	8f74 <gen_linktype+0x1d78>
    9924:	ldr	r1, [pc, #1992]	; a0f4 <gen_linktype+0x2ef8>
    9928:	movw	r0, #1500	; 0x5dc
    992c:	cmp	r5, r0
    9930:	ldr	r1, [pc, r1]
    9934:	bgt	961c <gen_linktype+0x2420>
    9938:	mov	r0, #1
    993c:	mov	r2, #8
    9940:	mov	r3, #4
    9944:	bl	a8f8 <gen_cmp>
    9948:	ldr	r1, [pc, #1960]	; a0f8 <gen_linktype+0x2efc>
    994c:	mov	r6, r0
    9950:	mov	r0, #1
    9954:	mov	r2, #16
    9958:	mov	r3, r5
    995c:	ldr	r1, [pc, r1]
    9960:	bl	a8f8 <gen_cmp>
    9964:	mov	r4, r0
    9968:	cmp	r6, #0
    996c:	beq	99a0 <gen_linktype+0x27a4>
    9970:	ldr	r0, [r4, #96]	; 0x60
    9974:	mov	r1, r6
    9978:	ldr	r2, [r1, #44]	; 0x2c
    997c:	add	r3, r1, #84	; 0x54
    9980:	cmp	r2, #0
    9984:	mov	r2, #84	; 0x54
    9988:	movweq	r2, #60	; 0x3c
    998c:	addeq	r3, r1, #60	; 0x3c
    9990:	ldr	r1, [r1, r2]
    9994:	str	r0, [r3]
    9998:	cmp	r1, #0
    999c:	bne	9978 <gen_linktype+0x277c>
    99a0:	ldr	r0, [r6, #44]	; 0x2c
    99a4:	cmp	r4, #0
    99a8:	clz	r0, r0
    99ac:	lsr	r0, r0, #5
    99b0:	str	r0, [r6, #44]	; 0x2c
    99b4:	ldr	r1, [r4, #44]	; 0x2c
    99b8:	clz	r0, r1
    99bc:	lsr	r0, r0, #5
    99c0:	str	r0, [r4, #44]	; 0x2c
    99c4:	str	r4, [sp, #12]
    99c8:	beq	9a14 <gen_linktype+0x2818>
    99cc:	cmp	r1, #0
    99d0:	mov	r1, #60	; 0x3c
    99d4:	add	r0, r4, #60	; 0x3c
    99d8:	movweq	r1, #84	; 0x54
    99dc:	addeq	r0, r4, #84	; 0x54
    99e0:	ldr	r1, [r4, r1]
    99e4:	cmp	r1, #0
    99e8:	beq	9a18 <gen_linktype+0x281c>
    99ec:	ldr	r2, [r1, #44]	; 0x2c
    99f0:	add	r0, r1, #84	; 0x54
    99f4:	cmp	r2, #0
    99f8:	mov	r2, #84	; 0x54
    99fc:	movweq	r2, #60	; 0x3c
    9a00:	addeq	r0, r1, #60	; 0x3c
    9a04:	ldr	r1, [r1, r2]
    9a08:	cmp	r1, #0
    9a0c:	bne	99ec <gen_linktype+0x27f0>
    9a10:	b	9a18 <gen_linktype+0x281c>
    9a14:	add	r0, sp, #12
    9a18:	str	r6, [r0]
    9a1c:	ldr	r0, [r4, #44]	; 0x2c
    9a20:	clz	r0, r0
    9a24:	lsr	r0, r0, #5
    9a28:	str	r0, [r4, #44]	; 0x2c
    9a2c:	ldr	r0, [r6, #96]	; 0x60
    9a30:	b	869c <gen_linktype+0x14a0>
    9a34:	.word	0x0003e9d8
    9a38:	.word	0x0003ea60
    9a3c:	.word	0x0003e9d8
    9a40:	.word	0x0003ea38
    9a44:	mov	r0, #2
    9a48:	mov	r1, #0
    9a4c:	mov	r2, #16
    9a50:	mov	r3, #224	; 0xe0
    9a54:	bl	a8f8 <gen_cmp>
    9a58:	mov	r5, r0
    9a5c:	movw	r0, #0
    9a60:	add	r6, sp, #12
    9a64:	mov	r1, #0
    9a68:	mov	r2, #8
    9a6c:	movt	r0, #14209	; 0x3781
    9a70:	mov	r3, r6
    9a74:	str	r0, [sp, #16]
    9a78:	movw	r0, #43690	; 0xaaaa
    9a7c:	movt	r0, #3
    9a80:	str	r0, [sp, #12]
    9a84:	mov	r0, #2
    9a88:	bl	1c314 <gen_bcmp>
    9a8c:	mov	r4, r0
    9a90:	ldr	r0, [r5, #44]	; 0x2c
    9a94:	cmp	r5, #0
    9a98:	clz	r0, r0
    9a9c:	lsr	r0, r0, #5
    9aa0:	str	r0, [r5, #44]	; 0x2c
    9aa4:	beq	9c3c <gen_linktype+0x2a40>
    9aa8:	ldr	r1, [r4, #96]	; 0x60
    9aac:	mov	r2, r5
    9ab0:	cmp	r0, #0
    9ab4:	mov	r0, #84	; 0x54
    9ab8:	add	r3, r2, #84	; 0x54
    9abc:	movweq	r0, #60	; 0x3c
    9ac0:	addeq	r3, r2, #60	; 0x3c
    9ac4:	ldr	r2, [r2, r0]
    9ac8:	str	r1, [r3]
    9acc:	cmp	r2, #0
    9ad0:	beq	9c38 <gen_linktype+0x2a3c>
    9ad4:	ldr	r0, [r2, #44]	; 0x2c
    9ad8:	b	9ab0 <gen_linktype+0x28b4>
    9adc:	.word	0x0003e8e4
    9ae0:	ldr	r1, [pc, #1608]	; a130 <gen_linktype+0x2f34>
    9ae4:	mov	r0, #1
    9ae8:	mov	r2, #8
    9aec:	mov	r3, #33	; 0x21
    9af0:	ldr	r1, [pc, r1]
    9af4:	bl	a8f8 <gen_cmp>
    9af8:	ldr	r1, [pc, #1588]	; a134 <gen_linktype+0x2f38>
    9afc:	mov	r4, r0
    9b00:	mov	r0, #1
    9b04:	mov	r2, #8
    9b08:	mov	r3, #45	; 0x2d
    9b0c:	ldr	r1, [pc, r1]
    9b10:	bl	a8f8 <gen_cmp>
    9b14:	mov	r5, r0
    9b18:	ldr	r0, [r4, #44]	; 0x2c
    9b1c:	cmp	r4, #0
    9b20:	clz	r0, r0
    9b24:	lsr	r0, r0, #5
    9b28:	str	r0, [r4, #44]	; 0x2c
    9b2c:	beq	9d54 <gen_linktype+0x2b58>
    9b30:	ldr	r1, [r5, #96]	; 0x60
    9b34:	mov	r2, r4
    9b38:	cmp	r0, #0
    9b3c:	mov	r0, #84	; 0x54
    9b40:	add	r3, r2, #84	; 0x54
    9b44:	movweq	r0, #60	; 0x3c
    9b48:	addeq	r3, r2, #60	; 0x3c
    9b4c:	ldr	r2, [r2, r0]
    9b50:	str	r1, [r3]
    9b54:	cmp	r2, #0
    9b58:	beq	9d50 <gen_linktype+0x2b54>
    9b5c:	ldr	r0, [r2, #44]	; 0x2c
    9b60:	b	9b38 <gen_linktype+0x293c>
    9b64:	ldr	r1, [pc, #1492]	; a140 <gen_linktype+0x2f44>
    9b68:	mov	r5, #35	; 0x23
    9b6c:	ldr	r1, [pc, r1]
    9b70:	b	961c <gen_linktype+0x2420>
    9b74:	ldr	r1, [pc, #1472]	; a13c <gen_linktype+0x2f40>
    9b78:	mov	r5, #41	; 0x29
    9b7c:	ldr	r1, [pc, r1]
    9b80:	b	961c <gen_linktype+0x2420>
    9b84:	.word	0x0003e894
    9b88:	add	r0, sp, #12
    9b8c:	str	r6, [r0]
    9b90:	cmp	r5, #0
    9b94:	ldr	r0, [r6, #96]	; 0x60
    9b98:	str	r0, [r4, #96]	; 0x60
    9b9c:	ldr	r0, [r5, #44]	; 0x2c
    9ba0:	clz	r0, r0
    9ba4:	lsr	r0, r0, #5
    9ba8:	str	r0, [r5, #44]	; 0x2c
    9bac:	beq	9be8 <gen_linktype+0x29ec>
    9bb0:	ldr	r1, [r4, #96]	; 0x60
    9bb4:	mov	r2, r5
    9bb8:	cmp	r0, #0
    9bbc:	mov	r0, #84	; 0x54
    9bc0:	add	r3, r2, #84	; 0x54
    9bc4:	movweq	r0, #60	; 0x3c
    9bc8:	addeq	r3, r2, #60	; 0x3c
    9bcc:	ldr	r2, [r2, r0]
    9bd0:	str	r1, [r3]
    9bd4:	cmp	r2, #0
    9bd8:	beq	9be4 <gen_linktype+0x29e8>
    9bdc:	ldr	r0, [r2, #44]	; 0x2c
    9be0:	b	9bb8 <gen_linktype+0x29bc>
    9be4:	ldr	r0, [r5, #44]	; 0x2c
    9be8:	clz	r0, r0
    9bec:	cmp	r4, #0
    9bf0:	lsr	r0, r0, #5
    9bf4:	str	r0, [r5, #44]	; 0x2c
    9bf8:	str	r4, [sp, #12]
    9bfc:	beq	a008 <gen_linktype+0x2e0c>
    9c00:	mov	r1, r4
    9c04:	ldr	r2, [r1, #44]	; 0x2c
    9c08:	add	r0, r1, #84	; 0x54
    9c0c:	cmp	r2, #0
    9c10:	mov	r2, #84	; 0x54
    9c14:	movweq	r2, #60	; 0x3c
    9c18:	addeq	r0, r1, #60	; 0x3c
    9c1c:	ldr	r1, [r1, r2]
    9c20:	cmp	r1, #0
    9c24:	bne	9c04 <gen_linktype+0x2a08>
    9c28:	b	a00c <gen_linktype+0x2e10>
    9c2c:	.word	0x0003e81c
    9c30:	.word	0x0003e794
    9c34:	.word	0x0003e7f4
    9c38:	ldr	r0, [r5, #44]	; 0x2c
    9c3c:	clz	r0, r0
    9c40:	cmp	r4, #0
    9c44:	lsr	r0, r0, #5
    9c48:	str	r0, [r5, #44]	; 0x2c
    9c4c:	str	r4, [sp, #12]
    9c50:	beq	9c7c <gen_linktype+0x2a80>
    9c54:	mov	r0, r4
    9c58:	ldr	r1, [r0, #44]	; 0x2c
    9c5c:	add	r6, r0, #84	; 0x54
    9c60:	cmp	r1, #0
    9c64:	mov	r1, #84	; 0x54
    9c68:	movweq	r1, #60	; 0x3c
    9c6c:	addeq	r6, r0, #60	; 0x3c
    9c70:	ldr	r0, [r0, r1]
    9c74:	cmp	r0, #0
    9c78:	bne	9c58 <gen_linktype+0x2a5c>
    9c7c:	str	r5, [r6]
    9c80:	mov	r2, #8
    9c84:	mov	r3, #4
    9c88:	ldr	r0, [r5, #96]	; 0x60
    9c8c:	str	r0, [r4, #96]	; 0x60
    9c90:	mov	r0, #1
    9c94:	ldr	r1, [pc, #1120]	; a0fc <gen_linktype+0x2f00>
    9c98:	ldr	r1, [pc, r1]
    9c9c:	bl	a8f8 <gen_cmp>
    9ca0:	cmp	r0, #0
    9ca4:	beq	9cd8 <gen_linktype+0x2adc>
    9ca8:	ldr	r1, [r4, #96]	; 0x60
    9cac:	mov	r2, r0
    9cb0:	ldr	r3, [r2, #44]	; 0x2c
    9cb4:	add	r7, r2, #84	; 0x54
    9cb8:	cmp	r3, #0
    9cbc:	mov	r3, #84	; 0x54
    9cc0:	movweq	r3, #60	; 0x3c
    9cc4:	addeq	r7, r2, #60	; 0x3c
    9cc8:	ldr	r2, [r2, r3]
    9ccc:	str	r1, [r7]
    9cd0:	cmp	r2, #0
    9cd4:	bne	9cb0 <gen_linktype+0x2ab4>
    9cd8:	ldr	r1, [r0, #44]	; 0x2c
    9cdc:	cmp	r4, #0
    9ce0:	clz	r1, r1
    9ce4:	lsr	r1, r1, #5
    9ce8:	str	r1, [r0, #44]	; 0x2c
    9cec:	ldr	r2, [r4, #44]	; 0x2c
    9cf0:	clz	r1, r2
    9cf4:	lsr	r1, r1, #5
    9cf8:	str	r1, [r4, #44]	; 0x2c
    9cfc:	str	r4, [sp, #12]
    9d00:	beq	9da4 <gen_linktype+0x2ba8>
    9d04:	cmp	r2, #0
    9d08:	mov	r2, #60	; 0x3c
    9d0c:	add	r1, r4, #60	; 0x3c
    9d10:	movweq	r2, #84	; 0x54
    9d14:	addeq	r1, r4, #84	; 0x54
    9d18:	ldr	r2, [r4, r2]
    9d1c:	cmp	r2, #0
    9d20:	beq	9da8 <gen_linktype+0x2bac>
    9d24:	ldr	r3, [r2, #44]	; 0x2c
    9d28:	add	r1, r2, #84	; 0x54
    9d2c:	cmp	r3, #0
    9d30:	mov	r3, #84	; 0x54
    9d34:	movweq	r3, #60	; 0x3c
    9d38:	addeq	r1, r2, #60	; 0x3c
    9d3c:	ldr	r2, [r2, r3]
    9d40:	cmp	r2, #0
    9d44:	bne	9d24 <gen_linktype+0x2b28>
    9d48:	b	9da8 <gen_linktype+0x2bac>
    9d4c:	.word	0x0003e6b0
    9d50:	ldr	r0, [r4, #44]	; 0x2c
    9d54:	clz	r0, r0
    9d58:	cmp	r5, #0
    9d5c:	lsr	r0, r0, #5
    9d60:	str	r0, [r4, #44]	; 0x2c
    9d64:	str	r5, [sp, #12]
    9d68:	beq	9f48 <gen_linktype+0x2d4c>
    9d6c:	mov	r1, r5
    9d70:	ldr	r2, [r1, #44]	; 0x2c
    9d74:	add	r0, r1, #84	; 0x54
    9d78:	cmp	r2, #0
    9d7c:	mov	r2, #84	; 0x54
    9d80:	movweq	r2, #60	; 0x3c
    9d84:	addeq	r0, r1, #60	; 0x3c
    9d88:	ldr	r1, [r1, r2]
    9d8c:	cmp	r1, #0
    9d90:	bne	9d70 <gen_linktype+0x2b74>
    9d94:	b	9f4c <gen_linktype+0x2d50>
    9d98:	.word	0x0003e688
    9d9c:	.word	0x0003e654
    9da0:	.word	0x0003e634
    9da4:	add	r1, sp, #12
    9da8:	str	r0, [r1]
    9dac:	mov	r2, #8
    9db0:	mov	r3, #1
    9db4:	ldr	r1, [r4, #44]	; 0x2c
    9db8:	clz	r1, r1
    9dbc:	lsr	r1, r1, #5
    9dc0:	str	r1, [r4, #44]	; 0x2c
    9dc4:	ldr	r0, [r0, #96]	; 0x60
    9dc8:	str	r0, [r4, #96]	; 0x60
    9dcc:	mov	r0, #1
    9dd0:	ldr	r1, [pc, #808]	; a100 <gen_linktype+0x2f04>
    9dd4:	ldr	r1, [pc, r1]
    9dd8:	bl	a8f8 <gen_cmp>
    9ddc:	ldr	r1, [r0, #44]	; 0x2c
    9de0:	cmp	r0, #0
    9de4:	clz	r1, r1
    9de8:	lsr	r1, r1, #5
    9dec:	str	r1, [r0, #44]	; 0x2c
    9df0:	beq	9e2c <gen_linktype+0x2c30>
    9df4:	ldr	r2, [r4, #96]	; 0x60
    9df8:	mov	r3, r0
    9dfc:	cmp	r1, #0
    9e00:	mov	r1, #84	; 0x54
    9e04:	add	r7, r3, #84	; 0x54
    9e08:	movweq	r1, #60	; 0x3c
    9e0c:	addeq	r7, r3, #60	; 0x3c
    9e10:	ldr	r3, [r3, r1]
    9e14:	str	r2, [r7]
    9e18:	cmp	r3, #0
    9e1c:	beq	9e28 <gen_linktype+0x2c2c>
    9e20:	ldr	r1, [r3, #44]	; 0x2c
    9e24:	b	9dfc <gen_linktype+0x2c00>
    9e28:	ldr	r1, [r0, #44]	; 0x2c
    9e2c:	clz	r1, r1
    9e30:	cmp	r4, #0
    9e34:	lsr	r1, r1, #5
    9e38:	str	r1, [r0, #44]	; 0x2c
    9e3c:	str	r4, [sp, #12]
    9e40:	beq	9e70 <gen_linktype+0x2c74>
    9e44:	mov	r2, r4
    9e48:	ldr	r3, [r2, #44]	; 0x2c
    9e4c:	add	r1, r2, #84	; 0x54
    9e50:	cmp	r3, #0
    9e54:	mov	r3, #84	; 0x54
    9e58:	movweq	r3, #60	; 0x3c
    9e5c:	addeq	r1, r2, #60	; 0x3c
    9e60:	ldr	r2, [r2, r3]
    9e64:	cmp	r2, #0
    9e68:	bne	9e48 <gen_linktype+0x2c4c>
    9e6c:	b	9e74 <gen_linktype+0x2c78>
    9e70:	add	r1, sp, #12
    9e74:	str	r0, [r1]
    9e78:	mov	r2, #8
    9e7c:	movw	r3, #33079	; 0x8137
    9e80:	ldr	r0, [r0, #96]	; 0x60
    9e84:	str	r0, [r4, #96]	; 0x60
    9e88:	mov	r0, #1
    9e8c:	ldr	r1, [pc, #624]	; a104 <gen_linktype+0x2f08>
    9e90:	ldr	r1, [pc, r1]
    9e94:	bl	a8f8 <gen_cmp>
    9e98:	ldr	r1, [r0, #44]	; 0x2c
    9e9c:	cmp	r0, #0
    9ea0:	clz	r1, r1
    9ea4:	lsr	r1, r1, #5
    9ea8:	str	r1, [r0, #44]	; 0x2c
    9eac:	beq	9eec <gen_linktype+0x2cf0>
    9eb0:	ldr	r2, [r4, #96]	; 0x60
    9eb4:	mov	r3, r0
    9eb8:	cmp	r1, #0
    9ebc:	mov	r1, #84	; 0x54
    9ec0:	add	r7, r3, #84	; 0x54
    9ec4:	movweq	r1, #60	; 0x3c
    9ec8:	addeq	r7, r3, #60	; 0x3c
    9ecc:	ldr	r3, [r3, r1]
    9ed0:	str	r2, [r7]
    9ed4:	cmp	r3, #0
    9ed8:	beq	9ee8 <gen_linktype+0x2cec>
    9edc:	ldr	r1, [r3, #44]	; 0x2c
    9ee0:	b	9eb8 <gen_linktype+0x2cbc>
    9ee4:	.word	0x0003e544
    9ee8:	ldr	r1, [r0, #44]	; 0x2c
    9eec:	clz	r1, r1
    9ef0:	cmp	r4, #0
    9ef4:	lsr	r1, r1, #5
    9ef8:	str	r1, [r0, #44]	; 0x2c
    9efc:	str	r4, [sp, #12]
    9f00:	beq	9f34 <gen_linktype+0x2d38>
    9f04:	mov	r2, r4
    9f08:	ldr	r3, [r2, #44]	; 0x2c
    9f0c:	add	r1, r2, #84	; 0x54
    9f10:	cmp	r3, #0
    9f14:	mov	r3, #84	; 0x54
    9f18:	movweq	r3, #60	; 0x3c
    9f1c:	addeq	r1, r2, #60	; 0x3c
    9f20:	ldr	r2, [r2, r3]
    9f24:	cmp	r2, #0
    9f28:	bne	9f08 <gen_linktype+0x2d0c>
    9f2c:	b	9f38 <gen_linktype+0x2d3c>
    9f30:	.word	0x0003e504
    9f34:	add	r1, sp, #12
    9f38:	str	r0, [r1]
    9f3c:	ldr	r0, [r0, #96]	; 0x60
    9f40:	b	869c <gen_linktype+0x14a0>
    9f44:	.word	0x0003e4b4
    9f48:	add	r0, sp, #12
    9f4c:	str	r4, [r0]
    9f50:	mov	r2, #8
    9f54:	mov	r3, #47	; 0x2f
    9f58:	ldr	r0, [r4, #96]	; 0x60
    9f5c:	str	r0, [r5, #96]	; 0x60
    9f60:	mov	r0, #1
    9f64:	ldr	r1, [pc, #460]	; a138 <gen_linktype+0x2f3c>
    9f68:	ldr	r1, [pc, r1]
    9f6c:	bl	a8f8 <gen_cmp>
    9f70:	mov	r4, r0
    9f74:	ldr	r0, [r5, #44]	; 0x2c
    9f78:	cmp	r5, #0
    9f7c:	clz	r0, r0
    9f80:	lsr	r0, r0, #5
    9f84:	str	r0, [r5, #44]	; 0x2c
    9f88:	beq	9fc4 <gen_linktype+0x2dc8>
    9f8c:	ldr	r1, [r4, #96]	; 0x60
    9f90:	mov	r2, r5
    9f94:	cmp	r0, #0
    9f98:	mov	r0, #84	; 0x54
    9f9c:	add	r3, r2, #84	; 0x54
    9fa0:	movweq	r0, #60	; 0x3c
    9fa4:	addeq	r3, r2, #60	; 0x3c
    9fa8:	ldr	r2, [r2, r0]
    9fac:	str	r1, [r3]
    9fb0:	cmp	r2, #0
    9fb4:	beq	9fc0 <gen_linktype+0x2dc4>
    9fb8:	ldr	r0, [r2, #44]	; 0x2c
    9fbc:	b	9f94 <gen_linktype+0x2d98>
    9fc0:	ldr	r0, [r5, #44]	; 0x2c
    9fc4:	clz	r0, r0
    9fc8:	cmp	r4, #0
    9fcc:	lsr	r0, r0, #5
    9fd0:	str	r0, [r5, #44]	; 0x2c
    9fd4:	str	r4, [sp, #12]
    9fd8:	beq	a008 <gen_linktype+0x2e0c>
    9fdc:	mov	r1, r4
    9fe0:	ldr	r2, [r1, #44]	; 0x2c
    9fe4:	add	r0, r1, #84	; 0x54
    9fe8:	cmp	r2, #0
    9fec:	mov	r2, #84	; 0x54
    9ff0:	movweq	r2, #60	; 0x3c
    9ff4:	addeq	r0, r1, #60	; 0x3c
    9ff8:	ldr	r1, [r1, r2]
    9ffc:	cmp	r1, #0
    a000:	bne	9fe0 <gen_linktype+0x2de4>
    a004:	b	a00c <gen_linktype+0x2e10>
    a008:	add	r0, sp, #12
    a00c:	str	r5, [r0]
    a010:	ldr	r0, [r5, #96]	; 0x60
    a014:	b	869c <gen_linktype+0x14a0>
    a018:	ldr	r0, [pc, #372]	; a194 <gen_linktype+0x2f98>
    a01c:	add	r0, pc, r0
    a020:	bl	2068 <sf_bpf_error>
    a024:	ldr	r0, [pc, #324]	; a170 <gen_linktype+0x2f74>
    a028:	add	r0, pc, r0
    a02c:	bl	2068 <sf_bpf_error>
    a030:	ldr	r0, [pc, #324]	; a17c <gen_linktype+0x2f80>
    a034:	add	r0, pc, r0
    a038:	bl	2068 <sf_bpf_error>
    a03c:	ldr	r0, [pc, #288]	; a164 <gen_linktype+0x2f68>
    a040:	add	r0, pc, r0
    a044:	bl	2068 <sf_bpf_error>
    a048:	ldr	r0, [pc, #292]	; a174 <gen_linktype+0x2f78>
    a04c:	add	r0, pc, r0
    a050:	bl	2068 <sf_bpf_error>
    a054:	ldr	r0, [pc, #284]	; a178 <gen_linktype+0x2f7c>
    a058:	add	r0, pc, r0
    a05c:	bl	2068 <sf_bpf_error>
    a060:	ldr	r0, [pc, #136]	; a0f0 <gen_linktype+0x2ef4>
    a064:	add	r0, pc, r0
    a068:	bl	2068 <sf_bpf_error>
    a06c:	ldr	r0, [pc, #236]	; a160 <gen_linktype+0x2f64>
    a070:	add	r0, pc, r0
    a074:	bl	2068 <sf_bpf_error>
    a078:	ldr	r0, [pc, #220]	; a15c <gen_linktype+0x2f60>
    a07c:	add	r0, pc, r0
    a080:	bl	2068 <sf_bpf_error>
    a084:	.word	0x0003e3ac
    a088:	ldr	r0, [pc, #220]	; a16c <gen_linktype+0x2f70>
    a08c:	add	r0, pc, r0
    a090:	bl	2068 <sf_bpf_error>
    a094:	ldr	r0, [pc, #184]	; a154 <gen_linktype+0x2f58>
    a098:	add	r0, pc, r0
    a09c:	bl	2068 <sf_bpf_error>
    a0a0:	ldr	r0, [pc, #216]	; a180 <gen_linktype+0x2f84>
    a0a4:	add	r0, pc, r0
    a0a8:	bl	2068 <sf_bpf_error>
    a0ac:	ldr	r0, [pc, #208]	; a184 <gen_linktype+0x2f88>
    a0b0:	add	r0, pc, r0
    a0b4:	bl	2068 <sf_bpf_error>
    a0b8:	ldr	r0, [pc, #168]	; a168 <gen_linktype+0x2f6c>
    a0bc:	add	r0, pc, r0
    a0c0:	bl	2068 <sf_bpf_error>
    a0c4:	ldr	r0, [pc, #188]	; a188 <gen_linktype+0x2f8c>
    a0c8:	add	r0, pc, r0
    a0cc:	bl	2068 <sf_bpf_error>
    a0d0:	ldr	r0, [pc, #180]	; a18c <gen_linktype+0x2f90>
    a0d4:	add	r0, pc, r0
    a0d8:	bl	2068 <sf_bpf_error>
    a0dc:	ldr	r0, [pc, #172]	; a190 <gen_linktype+0x2f94>
    a0e0:	add	r0, pc, r0
    a0e4:	bl	2068 <sf_bpf_error>
    a0e8:	.word	0x0003e330
    a0ec:	.word	0x0003e314
    a0f0:	.word	0x00020662
    a0f4:	.word	0x0003db08
    a0f8:	.word	0x0003dae0
    a0fc:	.word	0x0003d7a0
    a100:	.word	0x0003d664
    a104:	.word	0x0003d5a8
    a108:	.word	0x0003dff0
    a10c:	.word	0x0003de9c
    a110:	.word	0x0003e308
    a114:	.word	0x0003e250
    a118:	.word	0x0003de20
    a11c:	.word	0x0003de30
    a120:	.word	0x0003e2a4
    a124:	.word	0x0003dd30
    a128:	.word	0x0003e030
    a12c:	.word	0x0003dd08
    a130:	.word	0x0003d948
    a134:	.word	0x0003d92c
    a138:	.word	0x0003d4d0
    a13c:	.word	0x0003d8bc
    a140:	.word	0x0003d8cc
    a144:	.word	0x0003ddbc
    a148:	.word	0x0003dda0
    a14c:	.word	0x0003ddec
    a150:	.word	0x0003ddd4
    a154:	.word	0x0002064d
    a158:	.word	0x0003de04
    a15c:	.word	0x000206aa
    a160:	.word	0x000206e5
    a164:	.word	0x00020746
    a168:	.word	0x000206f9
    a16c:	.word	0x00020757
    a170:	.word	0x000207ea
    a174:	.word	0x000207f4
    a178:	.word	0x0002081c
    a17c:	.word	0x0002086e
    a180:	.word	0x00020836
    a184:	.word	0x00020860
    a188:	.word	0x00020877
    a18c:	.word	0x0002089b
    a190:	.word	0x000208be
    a194:	.word	0x00020660
    a198:	.word	0x0003de40

0000a19c <sf_gen_portop>:
    a19c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a1a0:	add	fp, sp, #28
    a1a4:	sub	sp, sp, #20
    a1a8:	mov	r5, r2
    a1ac:	mov	r3, r1
    a1b0:	mov	r4, r0
    a1b4:	mov	r0, #3
    a1b8:	mov	r1, #9
    a1bc:	mov	r2, #16
    a1c0:	bl	a8f8 <gen_cmp>
    a1c4:	mov	r9, r0
    a1c8:	ldr	r0, [pc, #1764]	; a8b4 <sf_gen_portop+0x718>
    a1cc:	add	r0, pc, r0
    a1d0:	ldrb	r0, [r0]
    a1d4:	ldr	r1, [pc, #1756]	; a8b8 <sf_gen_portop+0x71c>
    a1d8:	ldr	r1, [pc, r1]
    a1dc:	ldr	sl, [pc, #1752]	; a8bc <sf_gen_portop+0x720>
    a1e0:	cmp	r0, #0
    a1e4:	str	r4, [sp, #12]
    a1e8:	str	r5, [sp, #8]
    a1ec:	add	ip, r1, #6
    a1f0:	add	sl, pc, sl
    a1f4:	beq	a25c <sf_gen_portop+0xc0>
    a1f8:	ldr	r6, [pc, #1732]	; a8c4 <sf_gen_portop+0x728>
    a1fc:	ldr	r6, [pc, r6]
    a200:	cmn	r6, #1
    a204:	bne	a27c <sf_gen_portop+0xe0>
    a208:	ldr	r6, [pc, #1720]	; a8c8 <sf_gen_portop+0x72c>
    a20c:	mvn	r1, #15
    a210:	ldr	r6, [pc, r6]
    a214:	ldr	r0, [pc, #1712]	; a8cc <sf_gen_portop+0x730>
    a218:	ldr	r2, [pc, #1712]	; a8d0 <sf_gen_portop+0x734>
    a21c:	add	r0, pc, r0
    a220:	add	r2, pc, r2
    a224:	ldr	r3, [r0, r6, lsl #2]
    a228:	cmp	r3, #0
    a22c:	beq	a268 <sf_gen_portop+0xcc>
    a230:	add	r3, r6, #1
    a234:	adds	r1, r1, #1
    a238:	asr	r7, r3, #31
    a23c:	add	r7, r3, r7, lsr #28
    a240:	bic	r7, r7, #15
    a244:	sub	r6, r3, r7
    a248:	str	r6, [r2]
    a24c:	bcc	a224 <sf_gen_portop+0x88>
    a250:	ldr	r0, [pc, #1660]	; a8d4 <sf_gen_portop+0x738>
    a254:	add	r0, pc, r0
    a258:	bl	2068 <sf_bpf_error>
    a25c:	ldr	r8, [pc, #1628]	; a8c0 <sf_gen_portop+0x724>
    a260:	ldr	r8, [pc, r8]
    a264:	b	a384 <sf_gen_portop+0x1e8>
    a268:	mov	r1, #1
    a26c:	str	r1, [r0, r6, lsl #2]
    a270:	ldr	r0, [pc, #1632]	; a8d8 <sf_gen_portop+0x73c>
    a274:	add	r0, pc, r0
    a278:	str	r6, [r0]
    a27c:	ldr	r0, [pc, #1624]	; a8dc <sf_gen_portop+0x740>
    a280:	mov	r5, sl
    a284:	ldr	r0, [pc, r0]
    a288:	ldr	r7, [r5, r0, lsl #3]!
    a28c:	cmp	r7, #19
    a290:	bhi	a2f0 <sf_gen_portop+0x154>
    a294:	str	ip, [sp, #4]
    a298:	add	r8, r0, #1
    a29c:	cmp	r0, #15
    a2a0:	ldr	r1, [pc, #1592]	; a8e0 <sf_gen_portop+0x744>
    a2a4:	add	r1, pc, r1
    a2a8:	str	r8, [r1]
    a2ac:	bge	a8a4 <sf_gen_portop+0x708>
    a2b0:	mov	r0, #1024	; 0x400
    a2b4:	lsl	r7, r0, r8
    a2b8:	mov	r0, r7
    a2bc:	bl	dec <malloc@plt>
    a2c0:	cmp	r0, #0
    a2c4:	str	r0, [r5, #12]
    a2c8:	beq	a8a4 <sf_gen_portop+0x708>
    a2cc:	mov	r1, #0
    a2d0:	mov	r2, r7
    a2d4:	add	r5, r5, #8
    a2d8:	bl	e58 <memset@plt>
    a2dc:	ldr	ip, [sp, #4]
    a2e0:	cmp	r7, #19
    a2e4:	str	r7, [r5]
    a2e8:	bhi	a2f4 <sf_gen_portop+0x158>
    a2ec:	b	a8a4 <sf_gen_portop+0x708>
    a2f0:	mov	r8, r0
    a2f4:	sub	r0, r7, #20
    a2f8:	mov	r1, #97	; 0x61
    a2fc:	str	r0, [r5]
    a300:	ldr	r5, [r5, #4]
    a304:	str	r1, [r5, r0]!
    a308:	cmp	r5, #0
    a30c:	str	r6, [r5, #12]
    a310:	beq	a384 <sf_gen_portop+0x1e8>
    a314:	mov	r4, sl
    a318:	ldr	r7, [r4, r8, lsl #3]!
    a31c:	cmp	r7, #19
    a320:	bhi	a424 <sf_gen_portop+0x288>
    a324:	str	ip, [sp, #4]
    a328:	add	r6, r8, #1
    a32c:	cmp	r8, #15
    a330:	ldr	r0, [pc, #1452]	; a8e4 <sf_gen_portop+0x748>
    a334:	add	r0, pc, r0
    a338:	str	r6, [r0]
    a33c:	bge	a8a4 <sf_gen_portop+0x708>
    a340:	mov	r0, #1024	; 0x400
    a344:	lsl	r7, r0, r6
    a348:	mov	r0, r7
    a34c:	bl	dec <malloc@plt>
    a350:	ldr	r8, [sp, #8]
    a354:	cmp	r0, #0
    a358:	str	r0, [r4, #12]
    a35c:	beq	a8a4 <sf_gen_portop+0x708>
    a360:	mov	r1, #0
    a364:	mov	r2, r7
    a368:	add	r4, r4, #8
    a36c:	bl	e58 <memset@plt>
    a370:	ldr	ip, [sp, #4]
    a374:	cmp	r7, #19
    a378:	str	r7, [r4]
    a37c:	bhi	a42c <sf_gen_portop+0x290>
    a380:	b	a8a4 <sf_gen_portop+0x708>
    a384:	mov	r4, sl
    a388:	ldr	r7, [r4, r8, lsl #3]!
    a38c:	cmp	r7, #19
    a390:	bhi	a3f4 <sf_gen_portop+0x258>
    a394:	ldr	r0, [pc, #1356]	; a8e8 <sf_gen_portop+0x74c>
    a398:	add	r6, r8, #1
    a39c:	cmp	r8, #15
    a3a0:	add	r0, pc, r0
    a3a4:	str	r6, [r0]
    a3a8:	bge	a8a4 <sf_gen_portop+0x708>
    a3ac:	mov	r0, #1024	; 0x400
    a3b0:	mov	r5, ip
    a3b4:	lsl	r7, r0, r6
    a3b8:	mov	r0, r7
    a3bc:	bl	dec <malloc@plt>
    a3c0:	ldr	r8, [sp, #8]
    a3c4:	cmp	r0, #0
    a3c8:	str	r0, [r4, #12]
    a3cc:	beq	a8a4 <sf_gen_portop+0x708>
    a3d0:	mov	r1, #0
    a3d4:	mov	r2, r7
    a3d8:	add	r4, r4, #8
    a3dc:	bl	e58 <memset@plt>
    a3e0:	cmp	r7, #19
    a3e4:	mov	ip, r5
    a3e8:	str	r7, [r4]
    a3ec:	bhi	a3fc <sf_gen_portop+0x260>
    a3f0:	b	a8a4 <sf_gen_portop+0x708>
    a3f4:	mov	r6, r8
    a3f8:	ldr	r8, [sp, #8]
    a3fc:	sub	r0, r7, #20
    a400:	mov	r1, #40	; 0x28
    a404:	str	r0, [r4]
    a408:	ldr	r5, [r4, #4]
    a40c:	str	r1, [r5, r0]!
    a410:	ldr	r0, [pc, #1236]	; a8ec <sf_gen_portop+0x750>
    a414:	ldr	r0, [pc, r0]
    a418:	add	r0, r0, ip
    a41c:	str	r0, [r5, #12]
    a420:	b	a45c <sf_gen_portop+0x2c0>
    a424:	mov	r6, r8
    a428:	ldr	r8, [sp, #8]
    a42c:	sub	r1, r7, #20
    a430:	mov	r2, #72	; 0x48
    a434:	str	r1, [r4]
    a438:	ldr	r0, [r4, #4]
    a43c:	str	r2, [r0, r1]!
    a440:	mov	r2, r5
    a444:	str	ip, [r0, #12]
    a448:	mov	r1, r2
    a44c:	ldr	r2, [r2, #16]
    a450:	cmp	r2, #0
    a454:	bne	a448 <sf_gen_portop+0x2ac>
    a458:	str	r0, [r1, #16]
    a45c:	ldr	r7, [sl, r6, lsl #3]!
    a460:	ldr	r4, [sp, #12]
    a464:	cmp	r7, #207	; 0xcf
    a468:	bhi	a4bc <sf_gen_portop+0x320>
    a46c:	ldr	r1, [pc, #1148]	; a8f0 <sf_gen_portop+0x754>
    a470:	add	r0, r6, #1
    a474:	cmp	r6, #15
    a478:	add	r1, pc, r1
    a47c:	str	r0, [r1]
    a480:	bge	a8a4 <sf_gen_portop+0x708>
    a484:	mov	r1, #1024	; 0x400
    a488:	lsl	r7, r1, r0
    a48c:	mov	r0, r7
    a490:	bl	dec <malloc@plt>
    a494:	cmp	r0, #0
    a498:	str	r0, [sl, #12]
    a49c:	beq	a8a4 <sf_gen_portop+0x708>
    a4a0:	mov	r1, #0
    a4a4:	mov	r2, r7
    a4a8:	add	sl, sl, #8
    a4ac:	bl	e58 <memset@plt>
    a4b0:	cmp	r7, #207	; 0xcf
    a4b4:	str	r7, [sl]
    a4b8:	bls	a8a4 <sf_gen_portop+0x708>
    a4bc:	sub	r0, r7, #208	; 0xd0
    a4c0:	cmp	r9, #0
    a4c4:	str	r0, [sl]
    a4c8:	ldr	r1, [sl, #4]
    a4cc:	add	r7, r1, r0
    a4d0:	movw	r1, #8191	; 0x1fff
    a4d4:	mov	r0, #69	; 0x45
    a4d8:	str	r1, [r7, #20]
    a4dc:	str	r5, [r7, #4]
    a4e0:	str	r0, [r7, #8]
    a4e4:	ldr	r0, [r7, #44]	; 0x2c
    a4e8:	clz	r0, r0
    a4ec:	lsr	r0, r0, #5
    a4f0:	str	r0, [r7, #44]	; 0x2c
    a4f4:	str	r7, [r7, #96]	; 0x60
    a4f8:	beq	a528 <sf_gen_portop+0x38c>
    a4fc:	mov	r0, r9
    a500:	ldr	r1, [r0, #44]	; 0x2c
    a504:	add	r2, r0, #84	; 0x54
    a508:	cmp	r1, #0
    a50c:	mov	r1, #84	; 0x54
    a510:	movweq	r1, #60	; 0x3c
    a514:	addeq	r2, r0, #60	; 0x3c
    a518:	ldr	r0, [r0, r1]
    a51c:	str	r7, [r2]
    a520:	cmp	r0, #0
    a524:	bne	a500 <sf_gen_portop+0x364>
    a528:	ldr	r0, [r9, #44]	; 0x2c
    a52c:	cmp	r7, #0
    a530:	clz	r0, r0
    a534:	lsr	r0, r0, #5
    a538:	str	r0, [r9, #44]	; 0x2c
    a53c:	ldr	r0, [r7, #44]	; 0x2c
    a540:	clz	r1, r0
    a544:	lsr	r1, r1, #5
    a548:	str	r1, [r7, #44]	; 0x2c
    a54c:	str	r7, [sp, #16]
    a550:	beq	a598 <sf_gen_portop+0x3fc>
    a554:	cmp	r0, #0
    a558:	mov	r2, #60	; 0x3c
    a55c:	mov	r1, r7
    a560:	movweq	r2, #84	; 0x54
    a564:	ldr	r0, [r1, r2]!
    a568:	cmp	r0, #0
    a56c:	beq	a59c <sf_gen_portop+0x400>
    a570:	ldr	r2, [r0, #44]	; 0x2c
    a574:	add	r1, r0, #84	; 0x54
    a578:	cmp	r2, #0
    a57c:	mov	r2, #84	; 0x54
    a580:	movweq	r2, #60	; 0x3c
    a584:	addeq	r1, r0, #60	; 0x3c
    a588:	ldr	r0, [r0, r2]
    a58c:	cmp	r0, #0
    a590:	bne	a570 <sf_gen_portop+0x3d4>
    a594:	b	a59c <sf_gen_portop+0x400>
    a598:	add	r1, sp, #16
    a59c:	str	r9, [r1]
    a5a0:	cmp	r8, #4
    a5a4:	ldr	r0, [r7, #44]	; 0x2c
    a5a8:	clz	r0, r0
    a5ac:	lsr	r0, r0, #5
    a5b0:	str	r0, [r7, #44]	; 0x2c
    a5b4:	ldr	r0, [r9, #96]	; 0x60
    a5b8:	str	r0, [r7, #96]	; 0x60
    a5bc:	bhi	a8b0 <sf_gen_portop+0x714>
    a5c0:	add	r0, pc, #4
    a5c4:	ldr	r1, [r0, r8, lsl #2]
    a5c8:	add	pc, r0, r1
    a5cc:	.word	0x00000014
    a5d0:	.word	0x000001ac
    a5d4:	.word	0x000001b8
    a5d8:	.word	0x00000014
    a5dc:	.word	0x000000d4
    a5e0:	mov	r0, #5
    a5e4:	mov	r1, #0
    a5e8:	mov	r2, #8
    a5ec:	mov	r3, r4
    a5f0:	bl	a8f8 <gen_cmp>
    a5f4:	mov	r5, r0
    a5f8:	mov	r0, #5
    a5fc:	mov	r1, #2
    a600:	mov	r2, #8
    a604:	mov	r3, r4
    a608:	bl	a8f8 <gen_cmp>
    a60c:	ldr	r1, [r5, #44]	; 0x2c
    a610:	cmp	r5, #0
    a614:	clz	r1, r1
    a618:	lsr	r1, r1, #5
    a61c:	str	r1, [r5, #44]	; 0x2c
    a620:	beq	a65c <sf_gen_portop+0x4c0>
    a624:	ldr	r2, [r0, #96]	; 0x60
    a628:	mov	r3, r5
    a62c:	cmp	r1, #0
    a630:	mov	r1, #84	; 0x54
    a634:	add	r6, r3, #84	; 0x54
    a638:	movweq	r1, #60	; 0x3c
    a63c:	addeq	r6, r3, #60	; 0x3c
    a640:	ldr	r3, [r3, r1]
    a644:	str	r2, [r6]
    a648:	cmp	r3, #0
    a64c:	beq	a658 <sf_gen_portop+0x4bc>
    a650:	ldr	r1, [r3, #44]	; 0x2c
    a654:	b	a62c <sf_gen_portop+0x490>
    a658:	ldr	r1, [r5, #44]	; 0x2c
    a65c:	clz	r1, r1
    a660:	cmp	r0, #0
    a664:	lsr	r1, r1, #5
    a668:	str	r1, [r5, #44]	; 0x2c
    a66c:	str	r0, [sp, #16]
    a670:	beq	a7a4 <sf_gen_portop+0x608>
    a674:	mov	r2, r0
    a678:	ldr	r3, [r2, #44]	; 0x2c
    a67c:	add	r1, r2, #84	; 0x54
    a680:	cmp	r3, #0
    a684:	mov	r3, #84	; 0x54
    a688:	movweq	r3, #60	; 0x3c
    a68c:	addeq	r1, r2, #60	; 0x3c
    a690:	ldr	r2, [r2, r3]
    a694:	cmp	r2, #0
    a698:	bne	a678 <sf_gen_portop+0x4dc>
    a69c:	b	a7a8 <sf_gen_portop+0x60c>
    a6a0:	mov	r0, #5
    a6a4:	mov	r1, #0
    a6a8:	mov	r2, #8
    a6ac:	mov	r3, r4
    a6b0:	bl	a8f8 <gen_cmp>
    a6b4:	mov	r5, r0
    a6b8:	mov	r0, #5
    a6bc:	mov	r1, #2
    a6c0:	mov	r2, #8
    a6c4:	mov	r3, r4
    a6c8:	bl	a8f8 <gen_cmp>
    a6cc:	cmp	r5, #0
    a6d0:	beq	a704 <sf_gen_portop+0x568>
    a6d4:	ldr	r1, [r0, #96]	; 0x60
    a6d8:	mov	r2, r5
    a6dc:	ldr	r3, [r2, #44]	; 0x2c
    a6e0:	add	r6, r2, #84	; 0x54
    a6e4:	cmp	r3, #0
    a6e8:	mov	r3, #84	; 0x54
    a6ec:	movweq	r3, #60	; 0x3c
    a6f0:	addeq	r6, r2, #60	; 0x3c
    a6f4:	ldr	r2, [r2, r3]
    a6f8:	str	r1, [r6]
    a6fc:	cmp	r2, #0
    a700:	bne	a6dc <sf_gen_portop+0x540>
    a704:	ldr	r1, [r5, #44]	; 0x2c
    a708:	cmp	r0, #0
    a70c:	clz	r1, r1
    a710:	lsr	r1, r1, #5
    a714:	str	r1, [r5, #44]	; 0x2c
    a718:	ldr	r2, [r0, #44]	; 0x2c
    a71c:	clz	r1, r2
    a720:	lsr	r1, r1, #5
    a724:	str	r1, [r0, #44]	; 0x2c
    a728:	str	r0, [sp, #16]
    a72c:	beq	a7b0 <sf_gen_portop+0x614>
    a730:	cmp	r2, #0
    a734:	mov	r2, #60	; 0x3c
    a738:	add	r1, r0, #60	; 0x3c
    a73c:	movweq	r2, #84	; 0x54
    a740:	addeq	r1, r0, #84	; 0x54
    a744:	ldr	r2, [r0, r2]
    a748:	cmp	r2, #0
    a74c:	beq	a7b4 <sf_gen_portop+0x618>
    a750:	ldr	r3, [r2, #44]	; 0x2c
    a754:	add	r1, r2, #84	; 0x54
    a758:	cmp	r3, #0
    a75c:	mov	r3, #84	; 0x54
    a760:	movweq	r3, #60	; 0x3c
    a764:	addeq	r1, r2, #60	; 0x3c
    a768:	ldr	r2, [r2, r3]
    a76c:	cmp	r2, #0
    a770:	bne	a750 <sf_gen_portop+0x5b4>
    a774:	b	a7b4 <sf_gen_portop+0x618>
    a778:	mov	r0, #5
    a77c:	mov	r1, #0
    a780:	b	a78c <sf_gen_portop+0x5f0>
    a784:	mov	r0, #5
    a788:	mov	r1, #2
    a78c:	mov	r2, #8
    a790:	mov	r3, r4
    a794:	bl	a8f8 <gen_cmp>
    a798:	cmp	r7, #0
    a79c:	bne	a7d8 <sf_gen_portop+0x63c>
    a7a0:	b	a808 <sf_gen_portop+0x66c>
    a7a4:	add	r1, sp, #16
    a7a8:	str	r5, [r1]
    a7ac:	b	a7c8 <sf_gen_portop+0x62c>
    a7b0:	add	r1, sp, #16
    a7b4:	str	r5, [r1]
    a7b8:	ldr	r1, [r0, #44]	; 0x2c
    a7bc:	clz	r1, r1
    a7c0:	lsr	r1, r1, #5
    a7c4:	str	r1, [r0, #44]	; 0x2c
    a7c8:	ldr	r1, [r5, #96]	; 0x60
    a7cc:	str	r1, [r0, #96]	; 0x60
    a7d0:	cmp	r7, #0
    a7d4:	beq	a808 <sf_gen_portop+0x66c>
    a7d8:	ldr	r1, [r0, #96]	; 0x60
    a7dc:	mov	r2, r7
    a7e0:	ldr	r3, [r2, #44]	; 0x2c
    a7e4:	add	r6, r2, #84	; 0x54
    a7e8:	cmp	r3, #0
    a7ec:	mov	r3, #84	; 0x54
    a7f0:	movweq	r3, #60	; 0x3c
    a7f4:	addeq	r6, r2, #60	; 0x3c
    a7f8:	ldr	r2, [r2, r3]
    a7fc:	str	r1, [r6]
    a800:	cmp	r2, #0
    a804:	bne	a7e0 <sf_gen_portop+0x644>
    a808:	ldr	r1, [r7, #44]	; 0x2c
    a80c:	cmp	r0, #0
    a810:	clz	r1, r1
    a814:	lsr	r1, r1, #5
    a818:	str	r1, [r7, #44]	; 0x2c
    a81c:	ldr	r2, [r0, #44]	; 0x2c
    a820:	clz	r1, r2
    a824:	lsr	r1, r1, #5
    a828:	str	r1, [r0, #44]	; 0x2c
    a82c:	str	r0, [sp, #16]
    a830:	beq	a87c <sf_gen_portop+0x6e0>
    a834:	cmp	r2, #0
    a838:	mov	r2, #60	; 0x3c
    a83c:	add	r1, r0, #60	; 0x3c
    a840:	movweq	r2, #84	; 0x54
    a844:	addeq	r1, r0, #84	; 0x54
    a848:	ldr	r2, [r0, r2]
    a84c:	cmp	r2, #0
    a850:	beq	a880 <sf_gen_portop+0x6e4>
    a854:	ldr	r3, [r2, #44]	; 0x2c
    a858:	add	r1, r2, #84	; 0x54
    a85c:	cmp	r3, #0
    a860:	mov	r3, #84	; 0x54
    a864:	movweq	r3, #60	; 0x3c
    a868:	addeq	r1, r2, #60	; 0x3c
    a86c:	ldr	r2, [r2, r3]
    a870:	cmp	r2, #0
    a874:	bne	a854 <sf_gen_portop+0x6b8>
    a878:	b	a880 <sf_gen_portop+0x6e4>
    a87c:	add	r1, sp, #16
    a880:	str	r7, [r1]
    a884:	ldr	r1, [r0, #44]	; 0x2c
    a888:	clz	r1, r1
    a88c:	lsr	r1, r1, #5
    a890:	str	r1, [r0, #44]	; 0x2c
    a894:	ldr	r1, [r7, #96]	; 0x60
    a898:	str	r1, [r0, #96]	; 0x60
    a89c:	sub	sp, fp, #28
    a8a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a8a4:	ldr	r0, [pc, #72]	; a8f4 <sf_gen_portop+0x758>
    a8a8:	add	r0, pc, r0
    a8ac:	bl	2068 <sf_bpf_error>
    a8b0:	bl	edc <abort@plt>
    a8b4:	.word	0x0003d334
    a8b8:	.word	0x0003d268
    a8bc:	.word	0x0003d28c
    a8c0:	.word	0x0003d29c
    a8c4:	.word	0x0003d30c
    a8c8:	.word	0x0003d2fc
    a8cc:	.word	0x0003d2f4
    a8d0:	.word	0x0003d2ec
    a8d4:	.word	0x00020e79
    a8d8:	.word	0x0003d294
    a8dc:	.word	0x0003d278
    a8e0:	.word	0x0003d258
    a8e4:	.word	0x0003d1c8
    a8e8:	.word	0x0003d15c
    a8ec:	.word	0x0003d028
    a8f0:	.word	0x0003d084
    a8f4:	.word	0x0001fdd4

0000a8f8 <gen_cmp>:
    a8f8:	push	{r4, r5, r6, r7, fp, lr}
    a8fc:	add	fp, sp, #16
    a900:	mov	r4, r3
    a904:	bl	17970 <gen_load_a>
    a908:	mov	r5, r0
    a90c:	ldr	r0, [pc, #152]	; a9ac <gen_cmp+0xb4>
    a910:	ldr	r0, [pc, r0]
    a914:	ldr	r7, [pc, #148]	; a9b0 <gen_cmp+0xb8>
    a918:	add	r7, pc, r7
    a91c:	ldr	r6, [r7, r0, lsl #3]!
    a920:	cmp	r6, #207	; 0xcf
    a924:	bhi	a978 <gen_cmp+0x80>
    a928:	ldr	r2, [pc, #132]	; a9b4 <gen_cmp+0xbc>
    a92c:	add	r1, r0, #1
    a930:	cmp	r0, #15
    a934:	add	r2, pc, r2
    a938:	str	r1, [r2]
    a93c:	bge	a9a0 <gen_cmp+0xa8>
    a940:	mov	r0, #1024	; 0x400
    a944:	lsl	r6, r0, r1
    a948:	mov	r0, r6
    a94c:	bl	dec <malloc@plt>
    a950:	cmp	r0, #0
    a954:	str	r0, [r7, #12]
    a958:	beq	a9a0 <gen_cmp+0xa8>
    a95c:	mov	r1, #0
    a960:	mov	r2, r6
    a964:	add	r7, r7, #8
    a968:	bl	e58 <memset@plt>
    a96c:	cmp	r6, #207	; 0xcf
    a970:	str	r6, [r7]
    a974:	bls	a9a0 <gen_cmp+0xa8>
    a978:	sub	r0, r6, #208	; 0xd0
    a97c:	str	r0, [r7]
    a980:	ldr	r1, [r7, #4]
    a984:	add	r0, r1, r0
    a988:	mov	r1, #21
    a98c:	str	r4, [r0, #20]
    a990:	str	r5, [r0, #4]
    a994:	str	r1, [r0, #8]
    a998:	str	r0, [r0, #96]	; 0x60
    a99c:	pop	{r4, r5, r6, r7, fp, pc}
    a9a0:	ldr	r0, [pc, #16]	; a9b8 <gen_cmp+0xc0>
    a9a4:	add	r0, pc, r0
    a9a8:	bl	2068 <sf_bpf_error>
    a9ac:	.word	0x0003cbec
    a9b0:	.word	0x0003cb64
    a9b4:	.word	0x0003cbc8
    a9b8:	.word	0x0001fcd8

0000a9bc <sf_gen_portop6>:
    a9bc:	push	{r4, r5, r6, sl, fp, lr}
    a9c0:	add	fp, sp, #16
    a9c4:	sub	sp, sp, #16
    a9c8:	mov	r5, r2
    a9cc:	mov	r3, r1
    a9d0:	mov	r6, r0
    a9d4:	mov	r0, #3
    a9d8:	mov	r1, #6
    a9dc:	mov	r2, #16
    a9e0:	bl	a8f8 <gen_cmp>
    a9e4:	cmp	r5, #4
    a9e8:	bhi	acd4 <sf_gen_portop6+0x318>
    a9ec:	mov	r4, r0
    a9f0:	add	r0, pc, #4
    a9f4:	ldr	r1, [r0, r5, lsl #2]
    a9f8:	add	pc, r0, r1
    a9fc:	.word	0x00000014
    aa00:	.word	0x000001ac
    aa04:	.word	0x000001b8
    aa08:	.word	0x00000014
    aa0c:	.word	0x000000d4
    aa10:	mov	r0, #6
    aa14:	mov	r1, #0
    aa18:	mov	r2, #8
    aa1c:	mov	r3, r6
    aa20:	bl	a8f8 <gen_cmp>
    aa24:	mov	r5, r0
    aa28:	mov	r0, #6
    aa2c:	mov	r1, #2
    aa30:	mov	r2, #8
    aa34:	mov	r3, r6
    aa38:	bl	a8f8 <gen_cmp>
    aa3c:	ldr	r1, [r5, #44]	; 0x2c
    aa40:	cmp	r5, #0
    aa44:	clz	r1, r1
    aa48:	lsr	r1, r1, #5
    aa4c:	str	r1, [r5, #44]	; 0x2c
    aa50:	beq	aa8c <sf_gen_portop6+0xd0>
    aa54:	ldr	r2, [r0, #96]	; 0x60
    aa58:	mov	r3, r5
    aa5c:	cmp	r1, #0
    aa60:	mov	r1, #84	; 0x54
    aa64:	add	r6, r3, #84	; 0x54
    aa68:	movweq	r1, #60	; 0x3c
    aa6c:	addeq	r6, r3, #60	; 0x3c
    aa70:	ldr	r3, [r3, r1]
    aa74:	str	r2, [r6]
    aa78:	cmp	r3, #0
    aa7c:	beq	aa88 <sf_gen_portop6+0xcc>
    aa80:	ldr	r1, [r3, #44]	; 0x2c
    aa84:	b	aa5c <sf_gen_portop6+0xa0>
    aa88:	ldr	r1, [r5, #44]	; 0x2c
    aa8c:	clz	r1, r1
    aa90:	cmp	r0, #0
    aa94:	lsr	r1, r1, #5
    aa98:	str	r1, [r5, #44]	; 0x2c
    aa9c:	str	r0, [sp, #4]
    aaa0:	beq	abd4 <sf_gen_portop6+0x218>
    aaa4:	mov	r2, r0
    aaa8:	ldr	r3, [r2, #44]	; 0x2c
    aaac:	add	r1, r2, #84	; 0x54
    aab0:	cmp	r3, #0
    aab4:	mov	r3, #84	; 0x54
    aab8:	movweq	r3, #60	; 0x3c
    aabc:	addeq	r1, r2, #60	; 0x3c
    aac0:	ldr	r2, [r2, r3]
    aac4:	cmp	r2, #0
    aac8:	bne	aaa8 <sf_gen_portop6+0xec>
    aacc:	b	abd8 <sf_gen_portop6+0x21c>
    aad0:	mov	r0, #6
    aad4:	mov	r1, #0
    aad8:	mov	r2, #8
    aadc:	mov	r3, r6
    aae0:	bl	a8f8 <gen_cmp>
    aae4:	mov	r5, r0
    aae8:	mov	r0, #6
    aaec:	mov	r1, #2
    aaf0:	mov	r2, #8
    aaf4:	mov	r3, r6
    aaf8:	bl	a8f8 <gen_cmp>
    aafc:	cmp	r5, #0
    ab00:	beq	ab34 <sf_gen_portop6+0x178>
    ab04:	ldr	r1, [r0, #96]	; 0x60
    ab08:	mov	r2, r5
    ab0c:	ldr	r3, [r2, #44]	; 0x2c
    ab10:	add	r6, r2, #84	; 0x54
    ab14:	cmp	r3, #0
    ab18:	mov	r3, #84	; 0x54
    ab1c:	movweq	r3, #60	; 0x3c
    ab20:	addeq	r6, r2, #60	; 0x3c
    ab24:	ldr	r2, [r2, r3]
    ab28:	str	r1, [r6]
    ab2c:	cmp	r2, #0
    ab30:	bne	ab0c <sf_gen_portop6+0x150>
    ab34:	ldr	r1, [r5, #44]	; 0x2c
    ab38:	cmp	r0, #0
    ab3c:	clz	r1, r1
    ab40:	lsr	r1, r1, #5
    ab44:	str	r1, [r5, #44]	; 0x2c
    ab48:	ldr	r2, [r0, #44]	; 0x2c
    ab4c:	clz	r1, r2
    ab50:	lsr	r1, r1, #5
    ab54:	str	r1, [r0, #44]	; 0x2c
    ab58:	str	r0, [sp, #12]
    ab5c:	beq	abe0 <sf_gen_portop6+0x224>
    ab60:	cmp	r2, #0
    ab64:	mov	r2, #60	; 0x3c
    ab68:	add	r1, r0, #60	; 0x3c
    ab6c:	movweq	r2, #84	; 0x54
    ab70:	addeq	r1, r0, #84	; 0x54
    ab74:	ldr	r2, [r0, r2]
    ab78:	cmp	r2, #0
    ab7c:	beq	abe4 <sf_gen_portop6+0x228>
    ab80:	ldr	r3, [r2, #44]	; 0x2c
    ab84:	add	r1, r2, #84	; 0x54
    ab88:	cmp	r3, #0
    ab8c:	mov	r3, #84	; 0x54
    ab90:	movweq	r3, #60	; 0x3c
    ab94:	addeq	r1, r2, #60	; 0x3c
    ab98:	ldr	r2, [r2, r3]
    ab9c:	cmp	r2, #0
    aba0:	bne	ab80 <sf_gen_portop6+0x1c4>
    aba4:	b	abe4 <sf_gen_portop6+0x228>
    aba8:	mov	r0, #6
    abac:	mov	r1, #0
    abb0:	b	abbc <sf_gen_portop6+0x200>
    abb4:	mov	r0, #6
    abb8:	mov	r1, #2
    abbc:	mov	r2, #8
    abc0:	mov	r3, r6
    abc4:	bl	a8f8 <gen_cmp>
    abc8:	cmp	r4, #0
    abcc:	bne	ac08 <sf_gen_portop6+0x24c>
    abd0:	b	ac38 <sf_gen_portop6+0x27c>
    abd4:	add	r1, sp, #4
    abd8:	str	r5, [r1]
    abdc:	b	abf8 <sf_gen_portop6+0x23c>
    abe0:	add	r1, sp, #12
    abe4:	str	r5, [r1]
    abe8:	ldr	r1, [r0, #44]	; 0x2c
    abec:	clz	r1, r1
    abf0:	lsr	r1, r1, #5
    abf4:	str	r1, [r0, #44]	; 0x2c
    abf8:	ldr	r1, [r5, #96]	; 0x60
    abfc:	str	r1, [r0, #96]	; 0x60
    ac00:	cmp	r4, #0
    ac04:	beq	ac38 <sf_gen_portop6+0x27c>
    ac08:	ldr	r1, [r0, #96]	; 0x60
    ac0c:	mov	r2, r4
    ac10:	ldr	r3, [r2, #44]	; 0x2c
    ac14:	add	r6, r2, #84	; 0x54
    ac18:	cmp	r3, #0
    ac1c:	mov	r3, #84	; 0x54
    ac20:	movweq	r3, #60	; 0x3c
    ac24:	addeq	r6, r2, #60	; 0x3c
    ac28:	ldr	r2, [r2, r3]
    ac2c:	str	r1, [r6]
    ac30:	cmp	r2, #0
    ac34:	bne	ac10 <sf_gen_portop6+0x254>
    ac38:	ldr	r1, [r4, #44]	; 0x2c
    ac3c:	cmp	r0, #0
    ac40:	clz	r1, r1
    ac44:	lsr	r1, r1, #5
    ac48:	str	r1, [r4, #44]	; 0x2c
    ac4c:	ldr	r2, [r0, #44]	; 0x2c
    ac50:	clz	r1, r2
    ac54:	lsr	r1, r1, #5
    ac58:	str	r1, [r0, #44]	; 0x2c
    ac5c:	str	r0, [sp, #8]
    ac60:	beq	acac <sf_gen_portop6+0x2f0>
    ac64:	cmp	r2, #0
    ac68:	mov	r2, #60	; 0x3c
    ac6c:	add	r1, r0, #60	; 0x3c
    ac70:	movweq	r2, #84	; 0x54
    ac74:	addeq	r1, r0, #84	; 0x54
    ac78:	ldr	r2, [r0, r2]
    ac7c:	cmp	r2, #0
    ac80:	beq	acb0 <sf_gen_portop6+0x2f4>
    ac84:	ldr	r3, [r2, #44]	; 0x2c
    ac88:	add	r1, r2, #84	; 0x54
    ac8c:	cmp	r3, #0
    ac90:	mov	r3, #84	; 0x54
    ac94:	movweq	r3, #60	; 0x3c
    ac98:	addeq	r1, r2, #60	; 0x3c
    ac9c:	ldr	r2, [r2, r3]
    aca0:	cmp	r2, #0
    aca4:	bne	ac84 <sf_gen_portop6+0x2c8>
    aca8:	b	acb0 <sf_gen_portop6+0x2f4>
    acac:	add	r1, sp, #8
    acb0:	str	r4, [r1]
    acb4:	ldr	r1, [r0, #44]	; 0x2c
    acb8:	clz	r1, r1
    acbc:	lsr	r1, r1, #5
    acc0:	str	r1, [r0, #44]	; 0x2c
    acc4:	ldr	r1, [r4, #96]	; 0x60
    acc8:	str	r1, [r0, #96]	; 0x60
    accc:	sub	sp, fp, #16
    acd0:	pop	{r4, r5, r6, sl, fp, pc}
    acd4:	bl	edc <abort@plt>

0000acd8 <sf_gen_portrangeop>:
    acd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    acdc:	add	fp, sp, #28
    ace0:	sub	sp, sp, #20
    ace4:	str	r3, [sp, #4]
    ace8:	mov	r3, r2
    acec:	mov	r4, r1
    acf0:	mov	r5, r0
    acf4:	mov	r0, #3
    acf8:	mov	r1, #9
    acfc:	mov	r2, #16
    ad00:	bl	a8f8 <gen_cmp>
    ad04:	str	r0, [sp]
    ad08:	ldr	r0, [pc, #1728]	; b3d0 <sf_gen_portrangeop+0x6f8>
    ad0c:	add	r0, pc, r0
    ad10:	ldrb	r0, [r0]
    ad14:	ldr	r1, [pc, #1720]	; b3d4 <sf_gen_portrangeop+0x6fc>
    ad18:	ldr	r1, [pc, r1]
    ad1c:	ldr	sl, [pc, #1716]	; b3d8 <sf_gen_portrangeop+0x700>
    ad20:	cmp	r0, #0
    ad24:	str	r4, [sp, #12]
    ad28:	str	r5, [sp, #8]
    ad2c:	add	r7, r1, #6
    ad30:	add	sl, pc, sl
    ad34:	beq	ad9c <sf_gen_portrangeop+0xc4>
    ad38:	ldr	r6, [pc, #1696]	; b3e0 <sf_gen_portrangeop+0x708>
    ad3c:	ldr	r6, [pc, r6]
    ad40:	cmn	r6, #1
    ad44:	bne	adbc <sf_gen_portrangeop+0xe4>
    ad48:	ldr	r6, [pc, #1684]	; b3e4 <sf_gen_portrangeop+0x70c>
    ad4c:	mvn	r1, #15
    ad50:	ldr	r6, [pc, r6]
    ad54:	ldr	r0, [pc, #1676]	; b3e8 <sf_gen_portrangeop+0x710>
    ad58:	ldr	r2, [pc, #1676]	; b3ec <sf_gen_portrangeop+0x714>
    ad5c:	add	r0, pc, r0
    ad60:	add	r2, pc, r2
    ad64:	ldr	r3, [r0, r6, lsl #2]
    ad68:	cmp	r3, #0
    ad6c:	beq	ada8 <sf_gen_portrangeop+0xd0>
    ad70:	add	r3, r6, #1
    ad74:	adds	r1, r1, #1
    ad78:	asr	r6, r3, #31
    ad7c:	add	r6, r3, r6, lsr #28
    ad80:	bic	r6, r6, #15
    ad84:	sub	r6, r3, r6
    ad88:	str	r6, [r2]
    ad8c:	bcc	ad64 <sf_gen_portrangeop+0x8c>
    ad90:	ldr	r0, [pc, #1624]	; b3f0 <sf_gen_portrangeop+0x718>
    ad94:	add	r0, pc, r0
    ad98:	bl	2068 <sf_bpf_error>
    ad9c:	ldr	r9, [pc, #1592]	; b3dc <sf_gen_portrangeop+0x704>
    ada0:	ldr	r9, [pc, r9]
    ada4:	b	aeb4 <sf_gen_portrangeop+0x1dc>
    ada8:	mov	r1, #1
    adac:	str	r1, [r0, r6, lsl #2]
    adb0:	ldr	r0, [pc, #1596]	; b3f4 <sf_gen_portrangeop+0x71c>
    adb4:	add	r0, pc, r0
    adb8:	str	r6, [r0]
    adbc:	ldr	r0, [pc, #1588]	; b3f8 <sf_gen_portrangeop+0x720>
    adc0:	mov	r5, sl
    adc4:	ldr	r0, [pc, r0]
    adc8:	ldr	r4, [r5, r0, lsl #3]!
    adcc:	cmp	r4, #19
    add0:	bhi	ae28 <sf_gen_portrangeop+0x150>
    add4:	ldr	r1, [pc, #1568]	; b3fc <sf_gen_portrangeop+0x724>
    add8:	add	r9, r0, #1
    addc:	cmp	r0, #15
    ade0:	add	r1, pc, r1
    ade4:	str	r9, [r1]
    ade8:	bge	b3c0 <sf_gen_portrangeop+0x6e8>
    adec:	mov	r0, #1024	; 0x400
    adf0:	lsl	r4, r0, r9
    adf4:	mov	r0, r4
    adf8:	bl	dec <malloc@plt>
    adfc:	cmp	r0, #0
    ae00:	str	r0, [r5, #12]
    ae04:	beq	b3c0 <sf_gen_portrangeop+0x6e8>
    ae08:	mov	r1, #0
    ae0c:	mov	r2, r4
    ae10:	add	r5, r5, #8
    ae14:	bl	e58 <memset@plt>
    ae18:	cmp	r4, #19
    ae1c:	str	r4, [r5]
    ae20:	bhi	ae2c <sf_gen_portrangeop+0x154>
    ae24:	b	b3c0 <sf_gen_portrangeop+0x6e8>
    ae28:	mov	r9, r0
    ae2c:	sub	r0, r4, #20
    ae30:	mov	r1, #97	; 0x61
    ae34:	str	r0, [r5]
    ae38:	ldr	r8, [r5, #4]
    ae3c:	str	r1, [r8, r0]!
    ae40:	cmp	r8, #0
    ae44:	str	r6, [r8, #12]
    ae48:	beq	aeb4 <sf_gen_portrangeop+0x1dc>
    ae4c:	mov	r5, sl
    ae50:	ldr	r4, [r5, r9, lsl #3]!
    ae54:	cmp	r4, #19
    ae58:	bhi	af4c <sf_gen_portrangeop+0x274>
    ae5c:	ldr	r0, [pc, #1436]	; b400 <sf_gen_portrangeop+0x728>
    ae60:	add	r6, r9, #1
    ae64:	cmp	r9, #15
    ae68:	add	r0, pc, r0
    ae6c:	str	r6, [r0]
    ae70:	bge	b3c0 <sf_gen_portrangeop+0x6e8>
    ae74:	mov	r0, #1024	; 0x400
    ae78:	lsl	r4, r0, r6
    ae7c:	mov	r0, r4
    ae80:	bl	dec <malloc@plt>
    ae84:	ldr	r9, [sp, #8]
    ae88:	cmp	r0, #0
    ae8c:	str	r0, [r5, #12]
    ae90:	beq	b3c0 <sf_gen_portrangeop+0x6e8>
    ae94:	mov	r1, #0
    ae98:	mov	r2, r4
    ae9c:	add	r5, r5, #8
    aea0:	bl	e58 <memset@plt>
    aea4:	cmp	r4, #19
    aea8:	str	r4, [r5]
    aeac:	bhi	af54 <sf_gen_portrangeop+0x27c>
    aeb0:	b	b3c0 <sf_gen_portrangeop+0x6e8>
    aeb4:	mov	r5, sl
    aeb8:	ldr	r4, [r5, r9, lsl #3]!
    aebc:	cmp	r4, #19
    aec0:	bhi	af1c <sf_gen_portrangeop+0x244>
    aec4:	ldr	r0, [pc, #1336]	; b404 <sf_gen_portrangeop+0x72c>
    aec8:	add	r6, r9, #1
    aecc:	cmp	r9, #15
    aed0:	add	r0, pc, r0
    aed4:	str	r6, [r0]
    aed8:	bge	b3c0 <sf_gen_portrangeop+0x6e8>
    aedc:	mov	r0, #1024	; 0x400
    aee0:	lsl	r4, r0, r6
    aee4:	mov	r0, r4
    aee8:	bl	dec <malloc@plt>
    aeec:	ldr	r9, [sp, #8]
    aef0:	cmp	r0, #0
    aef4:	str	r0, [r5, #12]
    aef8:	beq	b3c0 <sf_gen_portrangeop+0x6e8>
    aefc:	mov	r1, #0
    af00:	mov	r2, r4
    af04:	add	r5, r5, #8
    af08:	bl	e58 <memset@plt>
    af0c:	cmp	r4, #19
    af10:	str	r4, [r5]
    af14:	bhi	af24 <sf_gen_portrangeop+0x24c>
    af18:	b	b3c0 <sf_gen_portrangeop+0x6e8>
    af1c:	mov	r6, r9
    af20:	ldr	r9, [sp, #8]
    af24:	sub	r0, r4, #20
    af28:	mov	r1, #40	; 0x28
    af2c:	str	r0, [r5]
    af30:	ldr	r8, [r5, #4]
    af34:	str	r1, [r8, r0]!
    af38:	ldr	r0, [pc, #1224]	; b408 <sf_gen_portrangeop+0x730>
    af3c:	ldr	r0, [pc, r0]
    af40:	add	r0, r0, r7
    af44:	str	r0, [r8, #12]
    af48:	b	af84 <sf_gen_portrangeop+0x2ac>
    af4c:	mov	r6, r9
    af50:	ldr	r9, [sp, #8]
    af54:	sub	r1, r4, #20
    af58:	mov	r2, #72	; 0x48
    af5c:	str	r1, [r5]
    af60:	ldr	r0, [r5, #4]
    af64:	str	r2, [r0, r1]!
    af68:	mov	r2, r8
    af6c:	str	r7, [r0, #12]
    af70:	mov	r1, r2
    af74:	ldr	r2, [r2, #16]
    af78:	cmp	r2, #0
    af7c:	bne	af70 <sf_gen_portrangeop+0x298>
    af80:	str	r0, [r1, #16]
    af84:	ldr	r4, [sl, r6, lsl #3]!
    af88:	cmp	r4, #207	; 0xcf
    af8c:	bhi	afe0 <sf_gen_portrangeop+0x308>
    af90:	ldr	r1, [pc, #1140]	; b40c <sf_gen_portrangeop+0x734>
    af94:	add	r0, r6, #1
    af98:	cmp	r6, #15
    af9c:	add	r1, pc, r1
    afa0:	str	r0, [r1]
    afa4:	bge	b3c0 <sf_gen_portrangeop+0x6e8>
    afa8:	mov	r1, #1024	; 0x400
    afac:	lsl	r4, r1, r0
    afb0:	mov	r0, r4
    afb4:	bl	dec <malloc@plt>
    afb8:	cmp	r0, #0
    afbc:	str	r0, [sl, #12]
    afc0:	beq	b3c0 <sf_gen_portrangeop+0x6e8>
    afc4:	mov	r1, #0
    afc8:	mov	r2, r4
    afcc:	add	sl, sl, #8
    afd0:	bl	e58 <memset@plt>
    afd4:	cmp	r4, #207	; 0xcf
    afd8:	str	r4, [sl]
    afdc:	bls	b3c0 <sf_gen_portrangeop+0x6e8>
    afe0:	sub	r0, r4, #208	; 0xd0
    afe4:	ldr	r3, [sp]
    afe8:	str	r0, [sl]
    afec:	ldr	r1, [sl, #4]
    aff0:	cmp	r3, #0
    aff4:	add	r4, r1, r0
    aff8:	movw	r1, #8191	; 0x1fff
    affc:	mov	r0, #69	; 0x45
    b000:	str	r1, [r4, #20]
    b004:	str	r8, [r4, #4]
    b008:	str	r0, [r4, #8]
    b00c:	ldr	r0, [r4, #44]	; 0x2c
    b010:	clz	r0, r0
    b014:	lsr	r0, r0, #5
    b018:	str	r0, [r4, #44]	; 0x2c
    b01c:	str	r4, [r4, #96]	; 0x60
    b020:	beq	b050 <sf_gen_portrangeop+0x378>
    b024:	mov	r0, r3
    b028:	ldr	r1, [r0, #44]	; 0x2c
    b02c:	add	r2, r0, #84	; 0x54
    b030:	cmp	r1, #0
    b034:	mov	r1, #84	; 0x54
    b038:	movweq	r1, #60	; 0x3c
    b03c:	addeq	r2, r0, #60	; 0x3c
    b040:	ldr	r0, [r0, r1]
    b044:	str	r4, [r2]
    b048:	cmp	r0, #0
    b04c:	bne	b028 <sf_gen_portrangeop+0x350>
    b050:	ldr	r0, [r3, #44]	; 0x2c
    b054:	cmp	r4, #0
    b058:	clz	r0, r0
    b05c:	lsr	r0, r0, #5
    b060:	str	r0, [r3, #44]	; 0x2c
    b064:	ldr	r0, [r4, #44]	; 0x2c
    b068:	clz	r1, r0
    b06c:	lsr	r1, r1, #5
    b070:	str	r1, [r4, #44]	; 0x2c
    b074:	str	r4, [sp, #16]
    b078:	beq	b0c0 <sf_gen_portrangeop+0x3e8>
    b07c:	cmp	r0, #0
    b080:	mov	r2, #60	; 0x3c
    b084:	mov	r1, r4
    b088:	movweq	r2, #84	; 0x54
    b08c:	ldr	r0, [r1, r2]!
    b090:	cmp	r0, #0
    b094:	beq	b0c4 <sf_gen_portrangeop+0x3ec>
    b098:	ldr	r2, [r0, #44]	; 0x2c
    b09c:	add	r1, r0, #84	; 0x54
    b0a0:	cmp	r2, #0
    b0a4:	mov	r2, #84	; 0x54
    b0a8:	movweq	r2, #60	; 0x3c
    b0ac:	addeq	r1, r0, #60	; 0x3c
    b0b0:	ldr	r0, [r0, r2]
    b0b4:	cmp	r0, #0
    b0b8:	bne	b098 <sf_gen_portrangeop+0x3c0>
    b0bc:	b	b0c4 <sf_gen_portrangeop+0x3ec>
    b0c0:	add	r1, sp, #16
    b0c4:	str	r3, [r1]
    b0c8:	ldr	r1, [sp, #4]
    b0cc:	ldr	r0, [r4, #44]	; 0x2c
    b0d0:	cmp	r1, #4
    b0d4:	clz	r0, r0
    b0d8:	lsr	r0, r0, #5
    b0dc:	str	r0, [r4, #44]	; 0x2c
    b0e0:	ldr	r0, [r3, #96]	; 0x60
    b0e4:	str	r0, [r4, #96]	; 0x60
    b0e8:	bhi	b3cc <sf_gen_portrangeop+0x6f4>
    b0ec:	add	r0, pc, #4
    b0f0:	ldr	r1, [r0, r1, lsl #2]
    b0f4:	add	pc, r0, r1
    b0f8:	.word	0x00000014
    b0fc:	.word	0x000001a4
    b100:	.word	0x000001ac
    b104:	.word	0x00000014
    b108:	.word	0x000000d0
    b10c:	ldr	r5, [sp, #12]
    b110:	mov	r0, #0
    b114:	mov	r1, r9
    b118:	mov	r2, r5
    b11c:	bl	b414 <gen_portrangeatom>
    b120:	mov	r6, r0
    b124:	mov	r0, #2
    b128:	mov	r1, r9
    b12c:	mov	r2, r5
    b130:	bl	b414 <gen_portrangeatom>
    b134:	ldr	r1, [r6, #44]	; 0x2c
    b138:	cmp	r6, #0
    b13c:	clz	r1, r1
    b140:	lsr	r1, r1, #5
    b144:	str	r1, [r6, #44]	; 0x2c
    b148:	beq	b184 <sf_gen_portrangeop+0x4ac>
    b14c:	ldr	r2, [r0, #96]	; 0x60
    b150:	mov	r3, r6
    b154:	cmp	r1, #0
    b158:	mov	r1, #84	; 0x54
    b15c:	add	r7, r3, #84	; 0x54
    b160:	movweq	r1, #60	; 0x3c
    b164:	addeq	r7, r3, #60	; 0x3c
    b168:	ldr	r3, [r3, r1]
    b16c:	str	r2, [r7]
    b170:	cmp	r3, #0
    b174:	beq	b180 <sf_gen_portrangeop+0x4a8>
    b178:	ldr	r1, [r3, #44]	; 0x2c
    b17c:	b	b154 <sf_gen_portrangeop+0x47c>
    b180:	ldr	r1, [r6, #44]	; 0x2c
    b184:	clz	r1, r1
    b188:	cmp	r0, #0
    b18c:	lsr	r1, r1, #5
    b190:	str	r1, [r6, #44]	; 0x2c
    b194:	str	r0, [sp, #16]
    b198:	beq	b2c0 <sf_gen_portrangeop+0x5e8>
    b19c:	mov	r2, r0
    b1a0:	ldr	r3, [r2, #44]	; 0x2c
    b1a4:	add	r1, r2, #84	; 0x54
    b1a8:	cmp	r3, #0
    b1ac:	mov	r3, #84	; 0x54
    b1b0:	movweq	r3, #60	; 0x3c
    b1b4:	addeq	r1, r2, #60	; 0x3c
    b1b8:	ldr	r2, [r2, r3]
    b1bc:	cmp	r2, #0
    b1c0:	bne	b1a0 <sf_gen_portrangeop+0x4c8>
    b1c4:	b	b2c4 <sf_gen_portrangeop+0x5ec>
    b1c8:	ldr	r5, [sp, #12]
    b1cc:	mov	r0, #0
    b1d0:	mov	r1, r9
    b1d4:	mov	r2, r5
    b1d8:	bl	b414 <gen_portrangeatom>
    b1dc:	mov	r6, r0
    b1e0:	mov	r0, #2
    b1e4:	mov	r1, r9
    b1e8:	mov	r2, r5
    b1ec:	bl	b414 <gen_portrangeatom>
    b1f0:	cmp	r6, #0
    b1f4:	beq	b228 <sf_gen_portrangeop+0x550>
    b1f8:	ldr	r1, [r0, #96]	; 0x60
    b1fc:	mov	r2, r6
    b200:	ldr	r3, [r2, #44]	; 0x2c
    b204:	add	r7, r2, #84	; 0x54
    b208:	cmp	r3, #0
    b20c:	mov	r3, #84	; 0x54
    b210:	movweq	r3, #60	; 0x3c
    b214:	addeq	r7, r2, #60	; 0x3c
    b218:	ldr	r2, [r2, r3]
    b21c:	str	r1, [r7]
    b220:	cmp	r2, #0
    b224:	bne	b200 <sf_gen_portrangeop+0x528>
    b228:	ldr	r1, [r6, #44]	; 0x2c
    b22c:	cmp	r0, #0
    b230:	clz	r1, r1
    b234:	lsr	r1, r1, #5
    b238:	str	r1, [r6, #44]	; 0x2c
    b23c:	ldr	r2, [r0, #44]	; 0x2c
    b240:	clz	r1, r2
    b244:	lsr	r1, r1, #5
    b248:	str	r1, [r0, #44]	; 0x2c
    b24c:	str	r0, [sp, #16]
    b250:	beq	b2cc <sf_gen_portrangeop+0x5f4>
    b254:	cmp	r2, #0
    b258:	mov	r2, #60	; 0x3c
    b25c:	add	r1, r0, #60	; 0x3c
    b260:	movweq	r2, #84	; 0x54
    b264:	addeq	r1, r0, #84	; 0x54
    b268:	ldr	r2, [r0, r2]
    b26c:	cmp	r2, #0
    b270:	beq	b2d0 <sf_gen_portrangeop+0x5f8>
    b274:	ldr	r3, [r2, #44]	; 0x2c
    b278:	add	r1, r2, #84	; 0x54
    b27c:	cmp	r3, #0
    b280:	mov	r3, #84	; 0x54
    b284:	movweq	r3, #60	; 0x3c
    b288:	addeq	r1, r2, #60	; 0x3c
    b28c:	ldr	r2, [r2, r3]
    b290:	cmp	r2, #0
    b294:	bne	b274 <sf_gen_portrangeop+0x59c>
    b298:	b	b2d0 <sf_gen_portrangeop+0x5f8>
    b29c:	mov	r0, #0
    b2a0:	b	b2a8 <sf_gen_portrangeop+0x5d0>
    b2a4:	mov	r0, #2
    b2a8:	ldr	r2, [sp, #12]
    b2ac:	mov	r1, r9
    b2b0:	bl	b414 <gen_portrangeatom>
    b2b4:	cmp	r4, #0
    b2b8:	bne	b2f4 <sf_gen_portrangeop+0x61c>
    b2bc:	b	b324 <sf_gen_portrangeop+0x64c>
    b2c0:	add	r1, sp, #16
    b2c4:	str	r6, [r1]
    b2c8:	b	b2e4 <sf_gen_portrangeop+0x60c>
    b2cc:	add	r1, sp, #16
    b2d0:	str	r6, [r1]
    b2d4:	ldr	r1, [r0, #44]	; 0x2c
    b2d8:	clz	r1, r1
    b2dc:	lsr	r1, r1, #5
    b2e0:	str	r1, [r0, #44]	; 0x2c
    b2e4:	ldr	r1, [r6, #96]	; 0x60
    b2e8:	str	r1, [r0, #96]	; 0x60
    b2ec:	cmp	r4, #0
    b2f0:	beq	b324 <sf_gen_portrangeop+0x64c>
    b2f4:	ldr	r1, [r0, #96]	; 0x60
    b2f8:	mov	r2, r4
    b2fc:	ldr	r3, [r2, #44]	; 0x2c
    b300:	add	r7, r2, #84	; 0x54
    b304:	cmp	r3, #0
    b308:	mov	r3, #84	; 0x54
    b30c:	movweq	r3, #60	; 0x3c
    b310:	addeq	r7, r2, #60	; 0x3c
    b314:	ldr	r2, [r2, r3]
    b318:	str	r1, [r7]
    b31c:	cmp	r2, #0
    b320:	bne	b2fc <sf_gen_portrangeop+0x624>
    b324:	ldr	r1, [r4, #44]	; 0x2c
    b328:	cmp	r0, #0
    b32c:	clz	r1, r1
    b330:	lsr	r1, r1, #5
    b334:	str	r1, [r4, #44]	; 0x2c
    b338:	ldr	r2, [r0, #44]	; 0x2c
    b33c:	clz	r1, r2
    b340:	lsr	r1, r1, #5
    b344:	str	r1, [r0, #44]	; 0x2c
    b348:	str	r0, [sp, #16]
    b34c:	beq	b398 <sf_gen_portrangeop+0x6c0>
    b350:	cmp	r2, #0
    b354:	mov	r2, #60	; 0x3c
    b358:	add	r1, r0, #60	; 0x3c
    b35c:	movweq	r2, #84	; 0x54
    b360:	addeq	r1, r0, #84	; 0x54
    b364:	ldr	r2, [r0, r2]
    b368:	cmp	r2, #0
    b36c:	beq	b39c <sf_gen_portrangeop+0x6c4>
    b370:	ldr	r3, [r2, #44]	; 0x2c
    b374:	add	r1, r2, #84	; 0x54
    b378:	cmp	r3, #0
    b37c:	mov	r3, #84	; 0x54
    b380:	movweq	r3, #60	; 0x3c
    b384:	addeq	r1, r2, #60	; 0x3c
    b388:	ldr	r2, [r2, r3]
    b38c:	cmp	r2, #0
    b390:	bne	b370 <sf_gen_portrangeop+0x698>
    b394:	b	b39c <sf_gen_portrangeop+0x6c4>
    b398:	add	r1, sp, #16
    b39c:	str	r4, [r1]
    b3a0:	ldr	r1, [r0, #44]	; 0x2c
    b3a4:	clz	r1, r1
    b3a8:	lsr	r1, r1, #5
    b3ac:	str	r1, [r0, #44]	; 0x2c
    b3b0:	ldr	r1, [r4, #96]	; 0x60
    b3b4:	str	r1, [r0, #96]	; 0x60
    b3b8:	sub	sp, fp, #28
    b3bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b3c0:	ldr	r0, [pc, #72]	; b410 <sf_gen_portrangeop+0x738>
    b3c4:	add	r0, pc, r0
    b3c8:	bl	2068 <sf_bpf_error>
    b3cc:	bl	edc <abort@plt>
    b3d0:	.word	0x0003c7f4
    b3d4:	.word	0x0003c728
    b3d8:	.word	0x0003c74c
    b3dc:	.word	0x0003c75c
    b3e0:	.word	0x0003c7cc
    b3e4:	.word	0x0003c7bc
    b3e8:	.word	0x0003c7b4
    b3ec:	.word	0x0003c7ac
    b3f0:	.word	0x00020339
    b3f4:	.word	0x0003c754
    b3f8:	.word	0x0003c738
    b3fc:	.word	0x0003c71c
    b400:	.word	0x0003c694
    b404:	.word	0x0003c62c
    b408:	.word	0x0003c500
    b40c:	.word	0x0003c560
    b410:	.word	0x0001f2b8

0000b414 <gen_portrangeatom>:
    b414:	push	{r4, r5, r6, r7, fp, lr}
    b418:	add	fp, sp, #16
    b41c:	sub	sp, sp, #8
    b420:	mov	r7, r0
    b424:	cmp	r1, r2
    b428:	mov	r3, r1
    b42c:	mov	r6, r1
    b430:	mov	r5, r2
    b434:	mov	r0, #5
    b438:	movgt	r3, r2
    b43c:	mov	r1, r7
    b440:	mov	r2, #8
    b444:	bl	17cdc <gen_cmp_ge>
    b448:	cmp	r6, r5
    b44c:	mov	r4, r0
    b450:	mov	r0, #5
    b454:	mov	r1, r7
    b458:	mov	r2, #8
    b45c:	movgt	r5, r6
    b460:	mov	r3, r5
    b464:	bl	1c794 <gen_cmp_le>
    b468:	cmp	r4, #0
    b46c:	beq	b4a0 <gen_portrangeatom+0x8c>
    b470:	ldr	r1, [r0, #96]	; 0x60
    b474:	mov	r2, r4
    b478:	ldr	r3, [r2, #44]	; 0x2c
    b47c:	add	r7, r2, #84	; 0x54
    b480:	cmp	r3, #0
    b484:	mov	r3, #84	; 0x54
    b488:	movweq	r3, #60	; 0x3c
    b48c:	addeq	r7, r2, #60	; 0x3c
    b490:	ldr	r2, [r2, r3]
    b494:	str	r1, [r7]
    b498:	cmp	r2, #0
    b49c:	bne	b478 <gen_portrangeatom+0x64>
    b4a0:	ldr	r1, [r4, #44]	; 0x2c
    b4a4:	cmp	r0, #0
    b4a8:	clz	r1, r1
    b4ac:	lsr	r1, r1, #5
    b4b0:	str	r1, [r4, #44]	; 0x2c
    b4b4:	ldr	r2, [r0, #44]	; 0x2c
    b4b8:	clz	r1, r2
    b4bc:	lsr	r1, r1, #5
    b4c0:	str	r1, [r0, #44]	; 0x2c
    b4c4:	str	r0, [sp, #4]
    b4c8:	beq	b514 <gen_portrangeatom+0x100>
    b4cc:	cmp	r2, #0
    b4d0:	mov	r2, #60	; 0x3c
    b4d4:	add	r1, r0, #60	; 0x3c
    b4d8:	movweq	r2, #84	; 0x54
    b4dc:	addeq	r1, r0, #84	; 0x54
    b4e0:	ldr	r2, [r0, r2]
    b4e4:	cmp	r2, #0
    b4e8:	beq	b518 <gen_portrangeatom+0x104>
    b4ec:	ldr	r3, [r2, #44]	; 0x2c
    b4f0:	add	r1, r2, #84	; 0x54
    b4f4:	cmp	r3, #0
    b4f8:	mov	r3, #84	; 0x54
    b4fc:	movweq	r3, #60	; 0x3c
    b500:	addeq	r1, r2, #60	; 0x3c
    b504:	ldr	r2, [r2, r3]
    b508:	cmp	r2, #0
    b50c:	bne	b4ec <gen_portrangeatom+0xd8>
    b510:	b	b518 <gen_portrangeatom+0x104>
    b514:	add	r1, sp, #4
    b518:	str	r4, [r1]
    b51c:	ldr	r1, [r0, #44]	; 0x2c
    b520:	clz	r1, r1
    b524:	lsr	r1, r1, #5
    b528:	str	r1, [r0, #44]	; 0x2c
    b52c:	ldr	r1, [r4, #96]	; 0x60
    b530:	str	r1, [r0, #96]	; 0x60
    b534:	sub	sp, fp, #16
    b538:	pop	{r4, r5, r6, r7, fp, pc}

0000b53c <sf_gen_portrangeop6>:
    b53c:	push	{r4, r5, r6, r7, fp, lr}
    b540:	add	fp, sp, #16
    b544:	sub	sp, sp, #16
    b548:	mov	r5, r3
    b54c:	mov	r3, r2
    b550:	mov	r6, r1
    b554:	mov	r7, r0
    b558:	mov	r0, #3
    b55c:	mov	r1, #6
    b560:	mov	r2, #16
    b564:	bl	a8f8 <gen_cmp>
    b568:	cmp	r5, #4
    b56c:	bhi	b840 <sf_gen_portrangeop6+0x304>
    b570:	mov	r4, r0
    b574:	add	r0, pc, #4
    b578:	ldr	r1, [r0, r5, lsl #2]
    b57c:	add	pc, r0, r1
    b580:	.word	0x00000014
    b584:	.word	0x0000019c
    b588:	.word	0x000001a4
    b58c:	.word	0x00000014
    b590:	.word	0x000000cc
    b594:	mov	r0, #0
    b598:	mov	r1, r7
    b59c:	mov	r2, r6
    b5a0:	bl	b844 <gen_portrangeatom6>
    b5a4:	mov	r5, r0
    b5a8:	mov	r0, #2
    b5ac:	mov	r1, r7
    b5b0:	mov	r2, r6
    b5b4:	bl	b844 <gen_portrangeatom6>
    b5b8:	ldr	r1, [r5, #44]	; 0x2c
    b5bc:	cmp	r5, #0
    b5c0:	clz	r1, r1
    b5c4:	lsr	r1, r1, #5
    b5c8:	str	r1, [r5, #44]	; 0x2c
    b5cc:	beq	b608 <sf_gen_portrangeop6+0xcc>
    b5d0:	ldr	r2, [r0, #96]	; 0x60
    b5d4:	mov	r3, r5
    b5d8:	cmp	r1, #0
    b5dc:	mov	r1, #84	; 0x54
    b5e0:	add	r7, r3, #84	; 0x54
    b5e4:	movweq	r1, #60	; 0x3c
    b5e8:	addeq	r7, r3, #60	; 0x3c
    b5ec:	ldr	r3, [r3, r1]
    b5f0:	str	r2, [r7]
    b5f4:	cmp	r3, #0
    b5f8:	beq	b604 <sf_gen_portrangeop6+0xc8>
    b5fc:	ldr	r1, [r3, #44]	; 0x2c
    b600:	b	b5d8 <sf_gen_portrangeop6+0x9c>
    b604:	ldr	r1, [r5, #44]	; 0x2c
    b608:	clz	r1, r1
    b60c:	cmp	r0, #0
    b610:	lsr	r1, r1, #5
    b614:	str	r1, [r5, #44]	; 0x2c
    b618:	str	r0, [sp, #4]
    b61c:	beq	b740 <sf_gen_portrangeop6+0x204>
    b620:	mov	r2, r0
    b624:	ldr	r3, [r2, #44]	; 0x2c
    b628:	add	r1, r2, #84	; 0x54
    b62c:	cmp	r3, #0
    b630:	mov	r3, #84	; 0x54
    b634:	movweq	r3, #60	; 0x3c
    b638:	addeq	r1, r2, #60	; 0x3c
    b63c:	ldr	r2, [r2, r3]
    b640:	cmp	r2, #0
    b644:	bne	b624 <sf_gen_portrangeop6+0xe8>
    b648:	b	b744 <sf_gen_portrangeop6+0x208>
    b64c:	mov	r0, #0
    b650:	mov	r1, r7
    b654:	mov	r2, r6
    b658:	bl	b844 <gen_portrangeatom6>
    b65c:	mov	r5, r0
    b660:	mov	r0, #2
    b664:	mov	r1, r7
    b668:	mov	r2, r6
    b66c:	bl	b844 <gen_portrangeatom6>
    b670:	cmp	r5, #0
    b674:	beq	b6a8 <sf_gen_portrangeop6+0x16c>
    b678:	ldr	r1, [r0, #96]	; 0x60
    b67c:	mov	r2, r5
    b680:	ldr	r3, [r2, #44]	; 0x2c
    b684:	add	r7, r2, #84	; 0x54
    b688:	cmp	r3, #0
    b68c:	mov	r3, #84	; 0x54
    b690:	movweq	r3, #60	; 0x3c
    b694:	addeq	r7, r2, #60	; 0x3c
    b698:	ldr	r2, [r2, r3]
    b69c:	str	r1, [r7]
    b6a0:	cmp	r2, #0
    b6a4:	bne	b680 <sf_gen_portrangeop6+0x144>
    b6a8:	ldr	r1, [r5, #44]	; 0x2c
    b6ac:	cmp	r0, #0
    b6b0:	clz	r1, r1
    b6b4:	lsr	r1, r1, #5
    b6b8:	str	r1, [r5, #44]	; 0x2c
    b6bc:	ldr	r2, [r0, #44]	; 0x2c
    b6c0:	clz	r1, r2
    b6c4:	lsr	r1, r1, #5
    b6c8:	str	r1, [r0, #44]	; 0x2c
    b6cc:	str	r0, [sp, #12]
    b6d0:	beq	b74c <sf_gen_portrangeop6+0x210>
    b6d4:	cmp	r2, #0
    b6d8:	mov	r2, #60	; 0x3c
    b6dc:	add	r1, r0, #60	; 0x3c
    b6e0:	movweq	r2, #84	; 0x54
    b6e4:	addeq	r1, r0, #84	; 0x54
    b6e8:	ldr	r2, [r0, r2]
    b6ec:	cmp	r2, #0
    b6f0:	beq	b750 <sf_gen_portrangeop6+0x214>
    b6f4:	ldr	r3, [r2, #44]	; 0x2c
    b6f8:	add	r1, r2, #84	; 0x54
    b6fc:	cmp	r3, #0
    b700:	mov	r3, #84	; 0x54
    b704:	movweq	r3, #60	; 0x3c
    b708:	addeq	r1, r2, #60	; 0x3c
    b70c:	ldr	r2, [r2, r3]
    b710:	cmp	r2, #0
    b714:	bne	b6f4 <sf_gen_portrangeop6+0x1b8>
    b718:	b	b750 <sf_gen_portrangeop6+0x214>
    b71c:	mov	r0, #0
    b720:	b	b728 <sf_gen_portrangeop6+0x1ec>
    b724:	mov	r0, #2
    b728:	mov	r1, r7
    b72c:	mov	r2, r6
    b730:	bl	b844 <gen_portrangeatom6>
    b734:	cmp	r4, #0
    b738:	bne	b774 <sf_gen_portrangeop6+0x238>
    b73c:	b	b7a4 <sf_gen_portrangeop6+0x268>
    b740:	add	r1, sp, #4
    b744:	str	r5, [r1]
    b748:	b	b764 <sf_gen_portrangeop6+0x228>
    b74c:	add	r1, sp, #12
    b750:	str	r5, [r1]
    b754:	ldr	r1, [r0, #44]	; 0x2c
    b758:	clz	r1, r1
    b75c:	lsr	r1, r1, #5
    b760:	str	r1, [r0, #44]	; 0x2c
    b764:	ldr	r1, [r5, #96]	; 0x60
    b768:	str	r1, [r0, #96]	; 0x60
    b76c:	cmp	r4, #0
    b770:	beq	b7a4 <sf_gen_portrangeop6+0x268>
    b774:	ldr	r1, [r0, #96]	; 0x60
    b778:	mov	r2, r4
    b77c:	ldr	r3, [r2, #44]	; 0x2c
    b780:	add	r7, r2, #84	; 0x54
    b784:	cmp	r3, #0
    b788:	mov	r3, #84	; 0x54
    b78c:	movweq	r3, #60	; 0x3c
    b790:	addeq	r7, r2, #60	; 0x3c
    b794:	ldr	r2, [r2, r3]
    b798:	str	r1, [r7]
    b79c:	cmp	r2, #0
    b7a0:	bne	b77c <sf_gen_portrangeop6+0x240>
    b7a4:	ldr	r1, [r4, #44]	; 0x2c
    b7a8:	cmp	r0, #0
    b7ac:	clz	r1, r1
    b7b0:	lsr	r1, r1, #5
    b7b4:	str	r1, [r4, #44]	; 0x2c
    b7b8:	ldr	r2, [r0, #44]	; 0x2c
    b7bc:	clz	r1, r2
    b7c0:	lsr	r1, r1, #5
    b7c4:	str	r1, [r0, #44]	; 0x2c
    b7c8:	str	r0, [sp, #8]
    b7cc:	beq	b818 <sf_gen_portrangeop6+0x2dc>
    b7d0:	cmp	r2, #0
    b7d4:	mov	r2, #60	; 0x3c
    b7d8:	add	r1, r0, #60	; 0x3c
    b7dc:	movweq	r2, #84	; 0x54
    b7e0:	addeq	r1, r0, #84	; 0x54
    b7e4:	ldr	r2, [r0, r2]
    b7e8:	cmp	r2, #0
    b7ec:	beq	b81c <sf_gen_portrangeop6+0x2e0>
    b7f0:	ldr	r3, [r2, #44]	; 0x2c
    b7f4:	add	r1, r2, #84	; 0x54
    b7f8:	cmp	r3, #0
    b7fc:	mov	r3, #84	; 0x54
    b800:	movweq	r3, #60	; 0x3c
    b804:	addeq	r1, r2, #60	; 0x3c
    b808:	ldr	r2, [r2, r3]
    b80c:	cmp	r2, #0
    b810:	bne	b7f0 <sf_gen_portrangeop6+0x2b4>
    b814:	b	b81c <sf_gen_portrangeop6+0x2e0>
    b818:	add	r1, sp, #8
    b81c:	str	r4, [r1]
    b820:	ldr	r1, [r0, #44]	; 0x2c
    b824:	clz	r1, r1
    b828:	lsr	r1, r1, #5
    b82c:	str	r1, [r0, #44]	; 0x2c
    b830:	ldr	r1, [r4, #96]	; 0x60
    b834:	str	r1, [r0, #96]	; 0x60
    b838:	sub	sp, fp, #16
    b83c:	pop	{r4, r5, r6, r7, fp, pc}
    b840:	bl	edc <abort@plt>

0000b844 <gen_portrangeatom6>:
    b844:	push	{r4, r5, r6, r7, fp, lr}
    b848:	add	fp, sp, #16
    b84c:	sub	sp, sp, #8
    b850:	mov	r7, r0
    b854:	cmp	r1, r2
    b858:	mov	r3, r1
    b85c:	mov	r6, r1
    b860:	mov	r5, r2
    b864:	mov	r0, #6
    b868:	movgt	r3, r2
    b86c:	mov	r1, r7
    b870:	mov	r2, #8
    b874:	bl	17cdc <gen_cmp_ge>
    b878:	cmp	r6, r5
    b87c:	mov	r4, r0
    b880:	mov	r0, #6
    b884:	mov	r1, r7
    b888:	mov	r2, #8
    b88c:	movgt	r5, r6
    b890:	mov	r3, r5
    b894:	bl	1c794 <gen_cmp_le>
    b898:	cmp	r4, #0
    b89c:	beq	b8d0 <gen_portrangeatom6+0x8c>
    b8a0:	ldr	r1, [r0, #96]	; 0x60
    b8a4:	mov	r2, r4
    b8a8:	ldr	r3, [r2, #44]	; 0x2c
    b8ac:	add	r7, r2, #84	; 0x54
    b8b0:	cmp	r3, #0
    b8b4:	mov	r3, #84	; 0x54
    b8b8:	movweq	r3, #60	; 0x3c
    b8bc:	addeq	r7, r2, #60	; 0x3c
    b8c0:	ldr	r2, [r2, r3]
    b8c4:	str	r1, [r7]
    b8c8:	cmp	r2, #0
    b8cc:	bne	b8a8 <gen_portrangeatom6+0x64>
    b8d0:	ldr	r1, [r4, #44]	; 0x2c
    b8d4:	cmp	r0, #0
    b8d8:	clz	r1, r1
    b8dc:	lsr	r1, r1, #5
    b8e0:	str	r1, [r4, #44]	; 0x2c
    b8e4:	ldr	r2, [r0, #44]	; 0x2c
    b8e8:	clz	r1, r2
    b8ec:	lsr	r1, r1, #5
    b8f0:	str	r1, [r0, #44]	; 0x2c
    b8f4:	str	r0, [sp, #4]
    b8f8:	beq	b944 <gen_portrangeatom6+0x100>
    b8fc:	cmp	r2, #0
    b900:	mov	r2, #60	; 0x3c
    b904:	add	r1, r0, #60	; 0x3c
    b908:	movweq	r2, #84	; 0x54
    b90c:	addeq	r1, r0, #84	; 0x54
    b910:	ldr	r2, [r0, r2]
    b914:	cmp	r2, #0
    b918:	beq	b948 <gen_portrangeatom6+0x104>
    b91c:	ldr	r3, [r2, #44]	; 0x2c
    b920:	add	r1, r2, #84	; 0x54
    b924:	cmp	r3, #0
    b928:	mov	r3, #84	; 0x54
    b92c:	movweq	r3, #60	; 0x3c
    b930:	addeq	r1, r2, #60	; 0x3c
    b934:	ldr	r2, [r2, r3]
    b938:	cmp	r2, #0
    b93c:	bne	b91c <gen_portrangeatom6+0xd8>
    b940:	b	b948 <gen_portrangeatom6+0x104>
    b944:	add	r1, sp, #4
    b948:	str	r4, [r1]
    b94c:	ldr	r1, [r0, #44]	; 0x2c
    b950:	clz	r1, r1
    b954:	lsr	r1, r1, #5
    b958:	str	r1, [r0, #44]	; 0x2c
    b95c:	ldr	r1, [r4, #96]	; 0x60
    b960:	str	r1, [r0, #96]	; 0x60
    b964:	sub	sp, fp, #16
    b968:	pop	{r4, r5, r6, r7, fp, pc}

0000b96c <sf_gen_scode>:
    b96c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b970:	add	fp, sp, #28
    b974:	sub	sp, sp, #44	; 0x2c
    b978:	uxtb	r8, r1
    b97c:	ubfx	r4, r1, #16, #8
    b980:	ubfx	r5, r1, #8, #8
    b984:	cmp	r8, #7
    b988:	bhi	c29c <sf_gen_scode+0x930>
    b98c:	mov	r7, r0
    b990:	lsr	r0, r1, #8
    b994:	add	r1, pc, #4
    b998:	ldr	r2, [r1, r8, lsl #2]
    b99c:	add	pc, r1, r2
    b9a0:	.word	0x00000020
    b9a4:	.word	0x00000020
    b9a8:	.word	0x00000178
    b9ac:	.word	0x000001d4
    b9b0:	.word	0x00000908
    b9b4:	.word	0x000002dc
    b9b8:	.word	0x00000244
    b9bc:	.word	0x00000268
    b9c0:	uxtb	r0, r0
    b9c4:	cmp	r0, #12
    b9c8:	beq	bca4 <sf_gen_scode+0x338>
    b9cc:	cmp	r0, #1
    b9d0:	bne	bcbc <sf_gen_scode+0x350>
    b9d4:	ldr	r0, [pc, #2560]	; c3dc <sf_gen_scode+0xa70>
    b9d8:	ldr	r0, [pc, r0]
    b9dc:	cmp	r0, #104	; 0x68
    b9e0:	ble	c0b8 <sf_gen_scode+0x74c>
    b9e4:	sub	r1, r0, #105	; 0x69
    b9e8:	mov	r6, r4
    b9ec:	cmp	r1, #58	; 0x3a
    b9f0:	bhi	c218 <sf_gen_scode+0x8ac>
    b9f4:	add	r0, pc, #4
    b9f8:	ldr	r1, [r0, r1, lsl #2]
    b9fc:	add	pc, r0, r1
    ba00:	.word	0x000000ec
    ba04:	.word	0x00000980
    ba08:	.word	0x00000980
    ba0c:	.word	0x00000980
    ba10:	.word	0x00000980
    ba14:	.word	0x00000980
    ba18:	.word	0x00000980
    ba1c:	.word	0x00000980
    ba20:	.word	0x00000980
    ba24:	.word	0x00000980
    ba28:	.word	0x00000980
    ba2c:	.word	0x00000980
    ba30:	.word	0x00000980
    ba34:	.word	0x00000980
    ba38:	.word	0x000000ec
    ba3c:	.word	0x00000980
    ba40:	.word	0x00000980
    ba44:	.word	0x00000824
    ba48:	.word	0x00000710
    ba4c:	.word	0x00000980
    ba50:	.word	0x00000980
    ba54:	.word	0x00000980
    ba58:	.word	0x000000ec
    ba5c:	.word	0x00000980
    ba60:	.word	0x00000980
    ba64:	.word	0x00000980
    ba68:	.word	0x00000980
    ba6c:	.word	0x00000980
    ba70:	.word	0x00000980
    ba74:	.word	0x00000980
    ba78:	.word	0x00000980
    ba7c:	.word	0x00000980
    ba80:	.word	0x00000980
    ba84:	.word	0x00000980
    ba88:	.word	0x00000980
    ba8c:	.word	0x00000980
    ba90:	.word	0x00000980
    ba94:	.word	0x00000980
    ba98:	.word	0x00000980
    ba9c:	.word	0x00000980
    baa0:	.word	0x00000980
    baa4:	.word	0x00000980
    baa8:	.word	0x00000980
    baac:	.word	0x00000980
    bab0:	.word	0x00000980
    bab4:	.word	0x00000980
    bab8:	.word	0x00000980
    babc:	.word	0x00000980
    bac0:	.word	0x00000980
    bac4:	.word	0x00000980
    bac8:	.word	0x00000980
    bacc:	.word	0x00000980
    bad0:	.word	0x00000980
    bad4:	.word	0x00000980
    bad8:	.word	0x00000980
    badc:	.word	0x00000980
    bae0:	.word	0x00000980
    bae4:	.word	0x00000980
    bae8:	.word	0x000000ec
    baec:	mov	r0, r7
    baf0:	bl	20990 <pcap_ether_hostton>
    baf4:	cmp	r0, #0
    baf8:	beq	c38c <sf_gen_scode+0xa20>
    bafc:	mov	r1, r6
    bb00:	mov	r4, r0
    bb04:	bl	cff4 <gen_wlanhostop>
    bb08:	mov	r6, r0
    bb0c:	mov	r0, r4
    bb10:	bl	d74 <free@plt>
    bb14:	b	c0ac <sf_gen_scode+0x740>
    bb18:	mov	r0, r7
    bb1c:	bl	2040c <pcap_nametonetaddr>
    bb20:	cmp	r0, #0
    bb24:	beq	c2c8 <sf_gen_scode+0x95c>
    bb28:	movw	r3, #65534	; 0xfffe
    bb2c:	sub	r2, r0, #1
    bb30:	mvn	r1, #0
    bb34:	movt	r3, #255	; 0xff
    bb38:	cmp	r2, r3
    bb3c:	bhi	bb60 <sf_gen_scode+0x1f4>
    bb40:	mvn	r2, #0
    bb44:	mvn	r3, #-16777216	; 0xff000000
    bb48:	mvn	r1, #0
    bb4c:	add	r7, r2, r0, lsl #8
    bb50:	lsl	r1, r1, #8
    bb54:	lsl	r0, r0, #8
    bb58:	cmp	r7, r3
    bb5c:	bcc	bb4c <sf_gen_scode+0x1e0>
    bb60:	mov	r2, r5
    bb64:	mov	r3, r4
    bb68:	str	r8, [sp]
    bb6c:	bl	c44c <gen_host>
    bb70:	b	bcb4 <sf_gen_scode+0x348>
    bb74:	mvn	r1, #4
    bb78:	mov	r5, r4
    bb7c:	uxtb	r4, r0
    bb80:	uxtab	r1, r1, r0
    bb84:	cmp	r1, #3
    bb88:	bcc	bb94 <sf_gen_scode+0x228>
    bb8c:	cmp	r4, #0
    bb90:	bne	c2d8 <sf_gen_scode+0x96c>
    bb94:	sub	r1, fp, #32
    bb98:	add	r2, sp, #20
    bb9c:	mov	r0, r7
    bba0:	bl	20428 <pcap_nametoport>
    bba4:	cmp	r0, #0
    bba8:	beq	c2e4 <sf_gen_scode+0x978>
    bbac:	cmp	r4, #5
    bbb0:	beq	beb4 <sf_gen_scode+0x548>
    bbb4:	cmp	r4, #6
    bbb8:	beq	be94 <sf_gen_scode+0x528>
    bbbc:	cmp	r4, #7
    bbc0:	bne	bef8 <sf_gen_scode+0x58c>
    bbc4:	ldr	r0, [sp, #20]
    bbc8:	cmp	r0, #132	; 0x84
    bbcc:	beq	c320 <sf_gen_scode+0x9b4>
    bbd0:	cmp	r0, #6
    bbd4:	beq	c330 <sf_gen_scode+0x9c4>
    bbd8:	mov	r4, r5
    bbdc:	mov	r1, #17
    bbe0:	b	bed0 <sf_gen_scode+0x564>
    bbe4:	mov	r0, r7
    bbe8:	mov	r1, r5
    bbec:	bl	102e4 <lookup_proto>
    bbf0:	cmp	r0, #0
    bbf4:	str	r0, [sp, #20]
    bbf8:	bmi	c2b8 <sf_gen_scode+0x94c>
    bbfc:	mov	r1, r5
    bc00:	bl	10448 <gen_protochain>
    bc04:	b	bcb4 <sf_gen_scode+0x348>
    bc08:	mvn	r1, #4
    bc0c:	mov	r5, r4
    bc10:	uxtb	r4, r0
    bc14:	uxtab	r1, r1, r0
    bc18:	cmp	r1, #3
    bc1c:	bcc	bc28 <sf_gen_scode+0x2bc>
    bc20:	cmp	r4, #0
    bc24:	bne	c2f4 <sf_gen_scode+0x988>
    bc28:	sub	r1, fp, #32
    bc2c:	add	r2, sp, #16
    bc30:	add	r3, sp, #20
    bc34:	mov	r0, r7
    bc38:	bl	204cc <pcap_nametoportrange>
    bc3c:	cmp	r0, #0
    bc40:	beq	c300 <sf_gen_scode+0x994>
    bc44:	cmp	r4, #5
    bc48:	beq	bfb4 <sf_gen_scode+0x648>
    bc4c:	cmp	r4, #6
    bc50:	beq	bed8 <sf_gen_scode+0x56c>
    bc54:	cmp	r4, #7
    bc58:	bne	bfd8 <sf_gen_scode+0x66c>
    bc5c:	ldr	r0, [sp, #20]
    bc60:	cmp	r0, #132	; 0x84
    bc64:	beq	c350 <sf_gen_scode+0x9e4>
    bc68:	cmp	r0, #6
    bc6c:	beq	c360 <sf_gen_scode+0x9f4>
    bc70:	mov	r4, r5
    bc74:	mov	r2, #17
    bc78:	b	bfd0 <sf_gen_scode+0x664>
    bc7c:	mov	r0, r7
    bc80:	mov	r1, r5
    bc84:	bl	102e4 <lookup_proto>
    bc88:	cmp	r0, #0
    bc8c:	str	r0, [sp, #20]
    bc90:	bmi	c2b8 <sf_gen_scode+0x94c>
    bc94:	mov	r1, r5
    bc98:	mov	r2, r4
    bc9c:	bl	68c8 <gen_proto>
    bca0:	b	bcb4 <sf_gen_scode+0x348>
    bca4:	mov	r0, r7
    bca8:	bl	20a8c <__pcap_nametodnaddr>
    bcac:	mov	r1, r4
    bcb0:	bl	1d47c <gen_dnhostop>
    bcb4:	mov	r6, r0
    bcb8:	b	c0ac <sf_gen_scode+0x740>
    bcbc:	mvn	r0, #0
    bcc0:	str	r7, [sp, #8]
    bcc4:	str	r0, [sp, #36]	; 0x24
    bcc8:	str	r0, [sp, #32]
    bccc:	str	r0, [sp, #28]
    bcd0:	str	r0, [sp, #24]
    bcd4:	mov	r0, r7
    bcd8:	bl	203ac <pcap_nametoaddrinfo>
    bcdc:	cmp	r0, #0
    bce0:	beq	c310 <sf_gen_scode+0x9a4>
    bce4:	ldr	r1, [pc, #1788]	; c3e8 <sf_gen_scode+0xa7c>
    bce8:	mov	sl, r5
    bcec:	mov	r6, #0
    bcf0:	mov	r9, r0
    bcf4:	add	r1, pc, r1
    bcf8:	str	r0, [r1]
    bcfc:	ldr	r1, [pc, #1768]	; c3ec <sf_gen_scode+0xa80>
    bd00:	ldr	r1, [pc, r1]
    bd04:	str	r5, [sp, #4]
    bd08:	str	r0, [sp, #12]
    bd0c:	mvn	r1, r1
    bd10:	orrs	r1, r5, r1
    bd14:	movweq	sl, #2
    bd18:	movweq	r5, #17
    bd1c:	b	bd3c <sf_gen_scode+0x3d0>
    bd20:	str	r6, [r1]
    bd24:	ldr	r1, [r6, #96]	; 0x60
    bd28:	str	r1, [r0, #96]	; 0x60
    bd2c:	mov	r6, r0
    bd30:	ldr	r9, [r9, #28]
    bd34:	cmp	r9, #0
    bd38:	beq	be48 <sf_gen_scode+0x4dc>
    bd3c:	ldr	r0, [r9, #4]
    bd40:	cmp	r0, #10
    bd44:	beq	bd84 <sf_gen_scode+0x418>
    bd48:	cmp	r0, #2
    bd4c:	bne	bd30 <sf_gen_scode+0x3c4>
    bd50:	cmp	sl, #17
    bd54:	beq	bd30 <sf_gen_scode+0x3c4>
    bd58:	ldr	r0, [r9, #20]
    bd5c:	mvn	r1, #0
    bd60:	mov	r2, sl
    bd64:	mov	r3, r4
    bd68:	ldr	r0, [r0, #4]
    bd6c:	str	r8, [sp]
    bd70:	rev	r0, r0
    bd74:	bl	c44c <gen_host>
    bd78:	cmp	r6, #0
    bd7c:	bne	bdb0 <sf_gen_scode+0x444>
    bd80:	b	bd2c <sf_gen_scode+0x3c0>
    bd84:	cmp	r5, #2
    bd88:	beq	bd30 <sf_gen_scode+0x3c4>
    bd8c:	ldr	r0, [r9, #20]
    bd90:	add	r1, sp, #24
    bd94:	mov	r2, r5
    bd98:	mov	r3, r4
    bd9c:	str	r8, [sp]
    bda0:	add	r0, r0, #8
    bda4:	bl	f4a0 <gen_host6>
    bda8:	cmp	r6, #0
    bdac:	beq	bd2c <sf_gen_scode+0x3c0>
    bdb0:	ldr	r1, [r6, #44]	; 0x2c
    bdb4:	mov	r7, r4
    bdb8:	mov	r2, r6
    bdbc:	clz	r1, r1
    bdc0:	lsr	r3, r1, #5
    bdc4:	str	r3, [r6, #44]	; 0x2c
    bdc8:	ldr	r1, [r0, #96]	; 0x60
    bdcc:	cmp	r3, #0
    bdd0:	mov	r3, #84	; 0x54
    bdd4:	add	r4, r2, #84	; 0x54
    bdd8:	movweq	r3, #60	; 0x3c
    bddc:	addeq	r4, r2, #60	; 0x3c
    bde0:	ldr	r2, [r2, r3]
    bde4:	str	r1, [r4]
    bde8:	cmp	r2, #0
    bdec:	beq	bdf8 <sf_gen_scode+0x48c>
    bdf0:	ldr	r3, [r2, #44]	; 0x2c
    bdf4:	b	bdcc <sf_gen_scode+0x460>
    bdf8:	ldr	r1, [r6, #44]	; 0x2c
    bdfc:	cmp	r0, #0
    be00:	mov	r4, r7
    be04:	clz	r1, r1
    be08:	lsr	r1, r1, #5
    be0c:	str	r1, [r6, #44]	; 0x2c
    be10:	sub	r1, fp, #32
    be14:	str	r0, [fp, #-32]	; 0xffffffe0
    be18:	beq	bd20 <sf_gen_scode+0x3b4>
    be1c:	mov	r2, r0
    be20:	ldr	r3, [r2, #44]	; 0x2c
    be24:	add	r1, r2, #84	; 0x54
    be28:	cmp	r3, #0
    be2c:	mov	r3, #84	; 0x54
    be30:	movweq	r3, #60	; 0x3c
    be34:	addeq	r1, r2, #60	; 0x3c
    be38:	ldr	r2, [r2, r3]
    be3c:	cmp	r2, #0
    be40:	bne	be20 <sf_gen_scode+0x4b4>
    be44:	b	bd20 <sf_gen_scode+0x3b4>
    be48:	ldr	r1, [pc, #1440]	; c3f0 <sf_gen_scode+0xa84>
    be4c:	mov	r0, #0
    be50:	add	r1, pc, r1
    be54:	str	r0, [r1]
    be58:	ldr	r0, [sp, #12]
    be5c:	bl	eac <freeaddrinfo@plt>
    be60:	cmp	r6, #0
    be64:	bne	c0ac <sf_gen_scode+0x740>
    be68:	ldr	r0, [pc, #1412]	; c3f4 <sf_gen_scode+0xa88>
    be6c:	ldr	r2, [pc, #1412]	; c3f8 <sf_gen_scode+0xa8c>
    be70:	ldr	r1, [sp, #4]
    be74:	add	r0, pc, r0
    be78:	cmp	r1, #0
    be7c:	add	r2, pc, r2
    be80:	moveq	r2, r0
    be84:	ldr	r0, [pc, #1392]	; c3fc <sf_gen_scode+0xa90>
    be88:	ldr	r1, [sp, #8]
    be8c:	add	r0, pc, r0
    be90:	bl	2068 <sf_bpf_error>
    be94:	ldr	r0, [sp, #20]
    be98:	cmp	r0, #132	; 0x84
    be9c:	beq	c320 <sf_gen_scode+0x9b4>
    bea0:	cmp	r0, #17
    bea4:	beq	c340 <sf_gen_scode+0x9d4>
    bea8:	mov	r4, r5
    beac:	mov	r1, #6
    beb0:	b	bed0 <sf_gen_scode+0x564>
    beb4:	ldr	r0, [sp, #20]
    beb8:	cmp	r0, #6
    bebc:	beq	c330 <sf_gen_scode+0x9c4>
    bec0:	cmp	r0, #17
    bec4:	beq	c340 <sf_gen_scode+0x9d4>
    bec8:	mov	r4, r5
    becc:	mov	r1, #132	; 0x84
    bed0:	str	r1, [sp, #20]
    bed4:	b	bf00 <sf_gen_scode+0x594>
    bed8:	ldr	r0, [sp, #20]
    bedc:	cmp	r0, #132	; 0x84
    bee0:	beq	c350 <sf_gen_scode+0x9e4>
    bee4:	cmp	r0, #17
    bee8:	beq	c370 <sf_gen_scode+0xa04>
    beec:	mov	r4, r5
    bef0:	mov	r2, #6
    bef4:	b	bfd0 <sf_gen_scode+0x664>
    bef8:	ldr	r1, [sp, #20]
    befc:	mov	r4, r5
    bf00:	ldr	r0, [fp, #-32]	; 0xffffffe0
    bf04:	mov	r2, r4
    bf08:	bl	f78c <gen_port>
    bf0c:	mov	r6, r0
    bf10:	ldr	r0, [fp, #-32]	; 0xffffffe0
    bf14:	ldr	r1, [sp, #20]
    bf18:	mov	r2, r4
    bf1c:	bl	fa58 <gen_port6>
    bf20:	ldr	r1, [r0, #44]	; 0x2c
    bf24:	cmp	r0, #0
    bf28:	clz	r1, r1
    bf2c:	lsr	r1, r1, #5
    bf30:	str	r1, [r0, #44]	; 0x2c
    bf34:	beq	bf70 <sf_gen_scode+0x604>
    bf38:	ldr	r2, [r6, #96]	; 0x60
    bf3c:	mov	r3, r0
    bf40:	cmp	r1, #0
    bf44:	mov	r1, #84	; 0x54
    bf48:	add	r7, r3, #84	; 0x54
    bf4c:	movweq	r1, #60	; 0x3c
    bf50:	addeq	r7, r3, #60	; 0x3c
    bf54:	ldr	r3, [r3, r1]
    bf58:	str	r2, [r7]
    bf5c:	cmp	r3, #0
    bf60:	beq	bf6c <sf_gen_scode+0x600>
    bf64:	ldr	r1, [r3, #44]	; 0x2c
    bf68:	b	bf40 <sf_gen_scode+0x5d4>
    bf6c:	ldr	r1, [r0, #44]	; 0x2c
    bf70:	clz	r1, r1
    bf74:	cmp	r6, #0
    bf78:	lsr	r1, r1, #5
    bf7c:	str	r1, [r0, #44]	; 0x2c
    bf80:	str	r6, [sp, #24]
    bf84:	beq	c09c <sf_gen_scode+0x730>
    bf88:	mov	r2, r6
    bf8c:	ldr	r3, [r2, #44]	; 0x2c
    bf90:	add	r1, r2, #84	; 0x54
    bf94:	cmp	r3, #0
    bf98:	mov	r3, #84	; 0x54
    bf9c:	movweq	r3, #60	; 0x3c
    bfa0:	addeq	r1, r2, #60	; 0x3c
    bfa4:	ldr	r2, [r2, r3]
    bfa8:	cmp	r2, #0
    bfac:	bne	bf8c <sf_gen_scode+0x620>
    bfb0:	b	c0a0 <sf_gen_scode+0x734>
    bfb4:	ldr	r0, [sp, #20]
    bfb8:	cmp	r0, #6
    bfbc:	beq	c360 <sf_gen_scode+0x9f4>
    bfc0:	cmp	r0, #17
    bfc4:	beq	c370 <sf_gen_scode+0xa04>
    bfc8:	mov	r4, r5
    bfcc:	mov	r2, #132	; 0x84
    bfd0:	str	r2, [sp, #20]
    bfd4:	b	bfe0 <sf_gen_scode+0x674>
    bfd8:	ldr	r2, [sp, #20]
    bfdc:	mov	r4, r5
    bfe0:	ldr	r1, [sp, #16]
    bfe4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    bfe8:	mov	r3, r4
    bfec:	bl	fd24 <gen_portrange>
    bff0:	mov	r6, r0
    bff4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    bff8:	ldr	r1, [sp, #16]
    bffc:	ldr	r2, [sp, #20]
    c000:	mov	r3, r4
    c004:	bl	10004 <gen_portrange6>
    c008:	ldr	r1, [r0, #44]	; 0x2c
    c00c:	cmp	r0, #0
    c010:	clz	r1, r1
    c014:	lsr	r1, r1, #5
    c018:	str	r1, [r0, #44]	; 0x2c
    c01c:	beq	c058 <sf_gen_scode+0x6ec>
    c020:	ldr	r2, [r6, #96]	; 0x60
    c024:	mov	r3, r0
    c028:	cmp	r1, #0
    c02c:	mov	r1, #84	; 0x54
    c030:	add	r7, r3, #84	; 0x54
    c034:	movweq	r1, #60	; 0x3c
    c038:	addeq	r7, r3, #60	; 0x3c
    c03c:	ldr	r3, [r3, r1]
    c040:	str	r2, [r7]
    c044:	cmp	r3, #0
    c048:	beq	c054 <sf_gen_scode+0x6e8>
    c04c:	ldr	r1, [r3, #44]	; 0x2c
    c050:	b	c028 <sf_gen_scode+0x6bc>
    c054:	ldr	r1, [r0, #44]	; 0x2c
    c058:	clz	r1, r1
    c05c:	cmp	r6, #0
    c060:	lsr	r1, r1, #5
    c064:	str	r1, [r0, #44]	; 0x2c
    c068:	str	r6, [sp, #24]
    c06c:	beq	c09c <sf_gen_scode+0x730>
    c070:	mov	r2, r6
    c074:	ldr	r3, [r2, #44]	; 0x2c
    c078:	add	r1, r2, #84	; 0x54
    c07c:	cmp	r3, #0
    c080:	mov	r3, #84	; 0x54
    c084:	movweq	r3, #60	; 0x3c
    c088:	addeq	r1, r2, #60	; 0x3c
    c08c:	ldr	r2, [r2, r3]
    c090:	cmp	r2, #0
    c094:	bne	c074 <sf_gen_scode+0x708>
    c098:	b	c0a0 <sf_gen_scode+0x734>
    c09c:	add	r1, sp, #24
    c0a0:	str	r0, [r1]
    c0a4:	ldr	r0, [r0, #96]	; 0x60
    c0a8:	str	r0, [r6, #96]	; 0x60
    c0ac:	mov	r0, r6
    c0b0:	sub	sp, fp, #28
    c0b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c0b8:	cmp	r0, #1
    c0bc:	beq	c0ec <sf_gen_scode+0x780>
    c0c0:	cmp	r0, #6
    c0c4:	bne	c244 <sf_gen_scode+0x8d8>
    c0c8:	mov	r0, r7
    c0cc:	mov	r5, r4
    c0d0:	bl	20990 <pcap_ether_hostton>
    c0d4:	cmp	r0, #0
    c0d8:	beq	c3ac <sf_gen_scode+0xa40>
    c0dc:	mov	r1, r5
    c0e0:	mov	r4, r0
    c0e4:	bl	cdc4 <gen_thostop>
    c0e8:	b	bb08 <sf_gen_scode+0x19c>
    c0ec:	mov	r0, r7
    c0f0:	mov	r5, r4
    c0f4:	bl	20990 <pcap_ether_hostton>
    c0f8:	cmp	r0, #0
    c0fc:	beq	c39c <sf_gen_scode+0xa30>
    c100:	mov	r1, r5
    c104:	mov	r4, r0
    c108:	bl	c92c <gen_ehostop>
    c10c:	b	bb08 <sf_gen_scode+0x19c>
    c110:	ldr	r0, [pc, #716]	; c3e4 <sf_gen_scode+0xa78>
    c114:	add	r0, pc, r0
    c118:	ldrb	r0, [r0]
    c11c:	cmp	r0, #1
    c120:	bne	c380 <sf_gen_scode+0xa14>
    c124:	mov	r0, #1
    c128:	mov	r1, #4
    c12c:	mov	r2, #8
    c130:	mov	r3, #65280	; 0xff00
    c134:	bl	a8f8 <gen_cmp>
    c138:	mov	r4, r0
    c13c:	ldr	r0, [r0, #44]	; 0x2c
    c140:	clz	r0, r0
    c144:	lsr	r0, r0, #5
    c148:	str	r0, [r4, #44]	; 0x2c
    c14c:	mov	r0, r7
    c150:	bl	20990 <pcap_ether_hostton>
    c154:	cmp	r0, #0
    c158:	beq	c39c <sf_gen_scode+0xa30>
    c15c:	mov	r1, r6
    c160:	mov	r5, r0
    c164:	bl	c92c <gen_ehostop>
    c168:	mov	r6, r0
    c16c:	cmp	r4, #0
    c170:	beq	c1a4 <sf_gen_scode+0x838>
    c174:	ldr	r0, [r6, #96]	; 0x60
    c178:	mov	r1, r4
    c17c:	ldr	r2, [r1, #44]	; 0x2c
    c180:	add	r3, r1, #84	; 0x54
    c184:	cmp	r2, #0
    c188:	mov	r2, #84	; 0x54
    c18c:	movweq	r2, #60	; 0x3c
    c190:	addeq	r3, r1, #60	; 0x3c
    c194:	ldr	r1, [r1, r2]
    c198:	str	r0, [r3]
    c19c:	cmp	r1, #0
    c1a0:	bne	c17c <sf_gen_scode+0x810>
    c1a4:	ldr	r0, [r4, #44]	; 0x2c
    c1a8:	cmp	r6, #0
    c1ac:	clz	r0, r0
    c1b0:	lsr	r0, r0, #5
    c1b4:	str	r0, [r4, #44]	; 0x2c
    c1b8:	ldr	r1, [r6, #44]	; 0x2c
    c1bc:	clz	r0, r1
    c1c0:	lsr	r0, r0, #5
    c1c4:	str	r0, [r6, #44]	; 0x2c
    c1c8:	str	r6, [sp, #24]
    c1cc:	beq	c270 <sf_gen_scode+0x904>
    c1d0:	cmp	r1, #0
    c1d4:	mov	r1, #60	; 0x3c
    c1d8:	add	r0, r6, #60	; 0x3c
    c1dc:	movweq	r1, #84	; 0x54
    c1e0:	addeq	r0, r6, #84	; 0x54
    c1e4:	ldr	r1, [r6, r1]
    c1e8:	cmp	r1, #0
    c1ec:	beq	c274 <sf_gen_scode+0x908>
    c1f0:	ldr	r2, [r1, #44]	; 0x2c
    c1f4:	add	r0, r1, #84	; 0x54
    c1f8:	cmp	r2, #0
    c1fc:	mov	r2, #84	; 0x54
    c200:	movweq	r2, #60	; 0x3c
    c204:	addeq	r0, r1, #60	; 0x3c
    c208:	ldr	r1, [r1, r2]
    c20c:	cmp	r1, #0
    c210:	bne	c1f0 <sf_gen_scode+0x884>
    c214:	b	c274 <sf_gen_scode+0x908>
    c218:	cmp	r0, #192	; 0xc0
    c21c:	beq	baec <sf_gen_scode+0x180>
    c220:	b	c380 <sf_gen_scode+0xa14>
    c224:	mov	r0, r7
    c228:	bl	20990 <pcap_ether_hostton>
    c22c:	cmp	r0, #0
    c230:	beq	c3bc <sf_gen_scode+0xa50>
    c234:	mov	r1, r6
    c238:	mov	r4, r0
    c23c:	bl	f270 <gen_ipfchostop>
    c240:	b	bb08 <sf_gen_scode+0x19c>
    c244:	cmp	r0, #10
    c248:	bne	c380 <sf_gen_scode+0xa14>
    c24c:	mov	r0, r7
    c250:	mov	r5, r4
    c254:	bl	20990 <pcap_ether_hostton>
    c258:	cmp	r0, #0
    c25c:	beq	c3cc <sf_gen_scode+0xa60>
    c260:	mov	r1, r5
    c264:	mov	r4, r0
    c268:	bl	cb94 <gen_fhostop>
    c26c:	b	bb08 <sf_gen_scode+0x19c>
    c270:	add	r0, sp, #24
    c274:	str	r4, [r0]
    c278:	ldr	r0, [r6, #44]	; 0x2c
    c27c:	clz	r0, r0
    c280:	lsr	r0, r0, #5
    c284:	str	r0, [r6, #44]	; 0x2c
    c288:	ldr	r0, [r4, #96]	; 0x60
    c28c:	str	r0, [r6, #96]	; 0x60
    c290:	mov	r0, r5
    c294:	bl	d74 <free@plt>
    c298:	b	c0ac <sf_gen_scode+0x740>
    c29c:	cmp	r8, #255	; 0xff
    c2a0:	bne	c2b4 <sf_gen_scode+0x948>
    c2a4:	bl	31cc <syntax>
    c2a8:	ldr	r0, [pc, #352]	; c410 <sf_gen_scode+0xaa4>
    c2ac:	add	r0, pc, r0
    c2b0:	bl	2068 <sf_bpf_error>
    c2b4:	bl	edc <abort@plt>
    c2b8:	ldr	r0, [pc, #340]	; c414 <sf_gen_scode+0xaa8>
    c2bc:	mov	r1, r7
    c2c0:	add	r0, pc, r0
    c2c4:	bl	2068 <sf_bpf_error>
    c2c8:	ldr	r0, [pc, #328]	; c418 <sf_gen_scode+0xaac>
    c2cc:	mov	r1, r7
    c2d0:	add	r0, pc, r0
    c2d4:	bl	2068 <sf_bpf_error>
    c2d8:	ldr	r0, [pc, #340]	; c434 <sf_gen_scode+0xac8>
    c2dc:	add	r0, pc, r0
    c2e0:	bl	2068 <sf_bpf_error>
    c2e4:	ldr	r0, [pc, #332]	; c438 <sf_gen_scode+0xacc>
    c2e8:	mov	r1, r7
    c2ec:	add	r0, pc, r0
    c2f0:	bl	2068 <sf_bpf_error>
    c2f4:	ldr	r0, [pc, #320]	; c43c <sf_gen_scode+0xad0>
    c2f8:	add	r0, pc, r0
    c2fc:	bl	2068 <sf_bpf_error>
    c300:	ldr	r0, [pc, #312]	; c440 <sf_gen_scode+0xad4>
    c304:	mov	r1, r7
    c308:	add	r0, pc, r0
    c30c:	bl	2068 <sf_bpf_error>
    c310:	ldr	r0, [pc, #280]	; c430 <sf_gen_scode+0xac4>
    c314:	ldr	r1, [sp, #8]
    c318:	add	r0, pc, r0
    c31c:	bl	2068 <sf_bpf_error>
    c320:	ldr	r0, [pc, #220]	; c404 <sf_gen_scode+0xa98>
    c324:	mov	r1, r7
    c328:	add	r0, pc, r0
    c32c:	bl	2068 <sf_bpf_error>
    c330:	ldr	r0, [pc, #268]	; c444 <sf_gen_scode+0xad8>
    c334:	mov	r1, r7
    c338:	add	r0, pc, r0
    c33c:	bl	2068 <sf_bpf_error>
    c340:	ldr	r0, [pc, #184]	; c400 <sf_gen_scode+0xa94>
    c344:	mov	r1, r7
    c348:	add	r0, pc, r0
    c34c:	bl	2068 <sf_bpf_error>
    c350:	ldr	r0, [pc, #180]	; c40c <sf_gen_scode+0xaa0>
    c354:	mov	r1, r7
    c358:	add	r0, pc, r0
    c35c:	bl	2068 <sf_bpf_error>
    c360:	ldr	r0, [pc, #224]	; c448 <sf_gen_scode+0xadc>
    c364:	mov	r1, r7
    c368:	add	r0, pc, r0
    c36c:	bl	2068 <sf_bpf_error>
    c370:	ldr	r0, [pc, #144]	; c408 <sf_gen_scode+0xa9c>
    c374:	mov	r1, r7
    c378:	add	r0, pc, r0
    c37c:	bl	2068 <sf_bpf_error>
    c380:	ldr	r0, [pc, #88]	; c3e0 <sf_gen_scode+0xa74>
    c384:	add	r0, pc, r0
    c388:	bl	2068 <sf_bpf_error>
    c38c:	ldr	r0, [pc, #148]	; c428 <sf_gen_scode+0xabc>
    c390:	mov	r1, r7
    c394:	add	r0, pc, r0
    c398:	bl	2068 <sf_bpf_error>
    c39c:	ldr	r0, [pc, #120]	; c41c <sf_gen_scode+0xab0>
    c3a0:	mov	r1, r7
    c3a4:	add	r0, pc, r0
    c3a8:	bl	2068 <sf_bpf_error>
    c3ac:	ldr	r0, [pc, #112]	; c424 <sf_gen_scode+0xab8>
    c3b0:	mov	r1, r7
    c3b4:	add	r0, pc, r0
    c3b8:	bl	2068 <sf_bpf_error>
    c3bc:	ldr	r0, [pc, #104]	; c42c <sf_gen_scode+0xac0>
    c3c0:	mov	r1, r7
    c3c4:	add	r0, pc, r0
    c3c8:	bl	2068 <sf_bpf_error>
    c3cc:	ldr	r0, [pc, #76]	; c420 <sf_gen_scode+0xab4>
    c3d0:	mov	r1, r7
    c3d4:	add	r0, pc, r0
    c3d8:	bl	2068 <sf_bpf_error>
    c3dc:	.word	0x0003ba58
    c3e0:	.word	0x0001d8e6
    c3e4:	.word	0x0003b320
    c3e8:	.word	0x0003b730
    c3ec:	.word	0x0003b738
    c3f0:	.word	0x0003b5d4
    c3f4:	.word	0x0001dc5c
    c3f8:	.word	0x0001de6e
    c3fc:	.word	0x0001de4a
    c400:	.word	0x0001da11
    c404:	.word	0x0001da1f
    c408:	.word	0x0001da63
    c40c:	.word	0x0001da68
    c410:	.word	0x0001db49
    c414:	.word	0x0001db63
    c418:	.word	0x0001d900
    c41c:	.word	0x0001d841
    c420:	.word	0x0001d829
    c424:	.word	0x0001d860
    c428:	.word	0x0001d89d
    c42c:	.word	0x0001d886
    c430:	.word	0x0001d9ac
    c434:	.word	0x0001da2c
    c438:	.word	0x0001da38
    c43c:	.word	0x0001da72
    c440:	.word	0x0001da83
    c444:	.word	0x0001d9fe
    c448:	.word	0x0001da3e

0000c44c <gen_host>:
    c44c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    c450:	add	fp, sp, #24
    c454:	sub	sp, sp, #16
    c458:	mov	r6, r0
    c45c:	ldr	r0, [fp, #8]
    c460:	mov	r5, r3
    c464:	ldr	r3, [pc, #1100]	; c8b8 <gen_host+0x46c>
    c468:	mov	r7, r1
    c46c:	ldr	r1, [pc, #1096]	; c8bc <gen_host+0x470>
    c470:	add	r3, pc, r3
    c474:	cmp	r0, #2
    c478:	add	r1, pc, r1
    c47c:	moveq	r1, r3
    c480:	cmp	r2, #40	; 0x28
    c484:	bhi	c77c <gen_host+0x330>
    c488:	add	r0, pc, #4
    c48c:	ldr	r2, [r0, r2, lsl #2]
    c490:	add	pc, r0, r2
    c494:	.word	0x000000a4
    c498:	.word	0x000002e8
    c49c:	.word	0x00000164
    c4a0:	.word	0x00000178
    c4a4:	.word	0x00000150
    c4a8:	.word	0x000003d0
    c4ac:	.word	0x000003dc
    c4b0:	.word	0x000003e8
    c4b4:	.word	0x000003f4
    c4b8:	.word	0x00000400
    c4bc:	.word	0x0000040c
    c4c0:	.word	0x00000418
    c4c4:	.word	0x000001a4
    c4c8:	.word	0x000002ec
    c4cc:	.word	0x000002f8
    c4d0:	.word	0x00000304
    c4d4:	.word	0x00000310
    c4d8:	.word	0x0000031c
    c4dc:	.word	0x00000328
    c4e0:	.word	0x00000334
    c4e4:	.word	0x00000340
    c4e8:	.word	0x0000034c
    c4ec:	.word	0x00000358
    c4f0:	.word	0x00000364
    c4f4:	.word	0x00000370
    c4f8:	.word	0x0000037c
    c4fc:	.word	0x00000388
    c500:	.word	0x00000394
    c504:	.word	0x000003a0
    c508:	.word	0x000003ac
    c50c:	.word	0x000003b8
    c510:	.word	0x000002e8
    c514:	.word	0x000002e8
    c518:	.word	0x000002e8
    c51c:	.word	0x000002e8
    c520:	.word	0x000002e8
    c524:	.word	0x000002e8
    c528:	.word	0x000002e8
    c52c:	.word	0x000002e8
    c530:	.word	0x000002e8
    c534:	.word	0x000003c4
    c538:	mov	r0, #16
    c53c:	mov	r1, #12
    c540:	mov	r2, r5
    c544:	mov	r3, #2048	; 0x800
    c548:	str	r1, [sp]
    c54c:	str	r0, [sp, #4]
    c550:	mov	r0, r6
    c554:	mov	r1, r7
    c558:	bl	1c868 <gen_hostop>
    c55c:	mov	r4, r0
    c560:	ldr	r0, [pc, #856]	; c8c0 <gen_host+0x474>
    c564:	ldr	r0, [pc, r0]
    c568:	cmp	r0, #0
    c56c:	bne	c770 <gen_host+0x324>
    c570:	mov	r0, #24
    c574:	mov	r1, #14
    c578:	mov	r2, r5
    c57c:	movw	r3, #2054	; 0x806
    c580:	str	r1, [sp]
    c584:	str	r0, [sp, #4]
    c588:	mov	r0, r6
    c58c:	mov	r1, r7
    c590:	bl	1c868 <gen_hostop>
    c594:	mov	r8, r0
    c598:	ldr	r0, [r4, #44]	; 0x2c
    c59c:	cmp	r4, #0
    c5a0:	clz	r0, r0
    c5a4:	lsr	r0, r0, #5
    c5a8:	str	r0, [r4, #44]	; 0x2c
    c5ac:	beq	c650 <gen_host+0x204>
    c5b0:	ldr	r1, [r8, #96]	; 0x60
    c5b4:	mov	r2, r4
    c5b8:	cmp	r0, #0
    c5bc:	mov	r0, #84	; 0x54
    c5c0:	add	r3, r2, #84	; 0x54
    c5c4:	movweq	r0, #60	; 0x3c
    c5c8:	addeq	r3, r2, #60	; 0x3c
    c5cc:	ldr	r2, [r2, r0]
    c5d0:	str	r1, [r3]
    c5d4:	cmp	r2, #0
    c5d8:	beq	c64c <gen_host+0x200>
    c5dc:	ldr	r0, [r2, #44]	; 0x2c
    c5e0:	b	c5b8 <gen_host+0x16c>
    c5e4:	mov	r0, #24
    c5e8:	mov	r1, #14
    c5ec:	mov	r2, r5
    c5f0:	movw	r3, #32821	; 0x8035
    c5f4:	b	c61c <gen_host+0x1d0>
    c5f8:	mov	r0, #16
    c5fc:	mov	r1, #12
    c600:	mov	r2, r5
    c604:	mov	r3, #2048	; 0x800
    c608:	b	c61c <gen_host+0x1d0>
    c60c:	mov	r0, #24
    c610:	mov	r1, #14
    c614:	mov	r2, r5
    c618:	movw	r3, #2054	; 0x806
    c61c:	str	r1, [sp]
    c620:	str	r0, [sp, #4]
    c624:	mov	r0, r6
    c628:	mov	r1, r7
    c62c:	bl	1c868 <gen_hostop>
    c630:	sub	sp, fp, #24
    c634:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    c638:	mov	r0, r6
    c63c:	mov	r1, r5
    c640:	sub	sp, fp, #24
    c644:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    c648:	b	1d47c <gen_dnhostop>
    c64c:	ldr	r0, [r4, #44]	; 0x2c
    c650:	clz	r0, r0
    c654:	cmp	r8, #0
    c658:	lsr	r0, r0, #5
    c65c:	str	r0, [r4, #44]	; 0x2c
    c660:	str	r8, [sp, #8]
    c664:	beq	c694 <gen_host+0x248>
    c668:	mov	r1, r8
    c66c:	ldr	r2, [r1, #44]	; 0x2c
    c670:	add	r0, r1, #84	; 0x54
    c674:	cmp	r2, #0
    c678:	mov	r2, #84	; 0x54
    c67c:	movweq	r2, #60	; 0x3c
    c680:	addeq	r0, r1, #60	; 0x3c
    c684:	ldr	r1, [r1, r2]
    c688:	cmp	r1, #0
    c68c:	bne	c66c <gen_host+0x220>
    c690:	b	c698 <gen_host+0x24c>
    c694:	add	r0, sp, #8
    c698:	str	r4, [r0]
    c69c:	mov	r1, #14
    c6a0:	mov	r2, r5
    c6a4:	movw	r3, #32821	; 0x8035
    c6a8:	ldr	r0, [r4, #96]	; 0x60
    c6ac:	str	r0, [r8, #96]	; 0x60
    c6b0:	mov	r0, #24
    c6b4:	str	r1, [sp]
    c6b8:	mov	r1, r7
    c6bc:	str	r0, [sp, #4]
    c6c0:	mov	r0, r6
    c6c4:	bl	1c868 <gen_hostop>
    c6c8:	mov	r4, r0
    c6cc:	ldr	r0, [r8, #44]	; 0x2c
    c6d0:	cmp	r8, #0
    c6d4:	clz	r0, r0
    c6d8:	lsr	r0, r0, #5
    c6dc:	str	r0, [r8, #44]	; 0x2c
    c6e0:	beq	c71c <gen_host+0x2d0>
    c6e4:	ldr	r1, [r4, #96]	; 0x60
    c6e8:	mov	r2, r8
    c6ec:	cmp	r0, #0
    c6f0:	mov	r0, #84	; 0x54
    c6f4:	add	r3, r2, #84	; 0x54
    c6f8:	movweq	r0, #60	; 0x3c
    c6fc:	addeq	r3, r2, #60	; 0x3c
    c700:	ldr	r2, [r2, r0]
    c704:	str	r1, [r3]
    c708:	cmp	r2, #0
    c70c:	beq	c718 <gen_host+0x2cc>
    c710:	ldr	r0, [r2, #44]	; 0x2c
    c714:	b	c6ec <gen_host+0x2a0>
    c718:	ldr	r0, [r8, #44]	; 0x2c
    c71c:	clz	r0, r0
    c720:	cmp	r4, #0
    c724:	lsr	r0, r0, #5
    c728:	str	r0, [r8, #44]	; 0x2c
    c72c:	str	r4, [sp, #12]
    c730:	beq	c760 <gen_host+0x314>
    c734:	mov	r1, r4
    c738:	ldr	r2, [r1, #44]	; 0x2c
    c73c:	add	r0, r1, #84	; 0x54
    c740:	cmp	r2, #0
    c744:	mov	r2, #84	; 0x54
    c748:	movweq	r2, #60	; 0x3c
    c74c:	addeq	r0, r1, #60	; 0x3c
    c750:	ldr	r1, [r1, r2]
    c754:	cmp	r1, #0
    c758:	bne	c738 <gen_host+0x2ec>
    c75c:	b	c764 <gen_host+0x318>
    c760:	add	r0, sp, #12
    c764:	str	r8, [r0]
    c768:	ldr	r0, [r8, #96]	; 0x60
    c76c:	str	r0, [r4, #96]	; 0x60
    c770:	mov	r0, r4
    c774:	sub	sp, fp, #24
    c778:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    c77c:	bl	edc <abort@plt>
    c780:	ldr	r0, [pc, #360]	; c8f0 <gen_host+0x4a4>
    c784:	add	r0, pc, r0
    c788:	bl	2068 <sf_bpf_error>
    c78c:	ldr	r0, [pc, #344]	; c8ec <gen_host+0x4a0>
    c790:	add	r0, pc, r0
    c794:	bl	2068 <sf_bpf_error>
    c798:	ldr	r0, [pc, #344]	; c8f8 <gen_host+0x4ac>
    c79c:	add	r0, pc, r0
    c7a0:	bl	2068 <sf_bpf_error>
    c7a4:	ldr	r0, [pc, #328]	; c8f4 <gen_host+0x4a8>
    c7a8:	add	r0, pc, r0
    c7ac:	bl	2068 <sf_bpf_error>
    c7b0:	ldr	r0, [pc, #324]	; c8fc <gen_host+0x4b0>
    c7b4:	add	r0, pc, r0
    c7b8:	bl	2068 <sf_bpf_error>
    c7bc:	ldr	r0, [pc, #316]	; c900 <gen_host+0x4b4>
    c7c0:	add	r0, pc, r0
    c7c4:	bl	2068 <sf_bpf_error>
    c7c8:	ldr	r0, [pc, #308]	; c904 <gen_host+0x4b8>
    c7cc:	add	r0, pc, r0
    c7d0:	bl	2068 <sf_bpf_error>
    c7d4:	ldr	r0, [pc, #300]	; c908 <gen_host+0x4bc>
    c7d8:	add	r0, pc, r0
    c7dc:	bl	2068 <sf_bpf_error>
    c7e0:	ldr	r0, [pc, #244]	; c8dc <gen_host+0x490>
    c7e4:	add	r0, pc, r0
    c7e8:	bl	2068 <sf_bpf_error>
    c7ec:	ldr	r0, [pc, #236]	; c8e0 <gen_host+0x494>
    c7f0:	add	r0, pc, r0
    c7f4:	bl	2068 <sf_bpf_error>
    c7f8:	ldr	r0, [pc, #232]	; c8e8 <gen_host+0x49c>
    c7fc:	add	r0, pc, r0
    c800:	bl	2068 <sf_bpf_error>
    c804:	ldr	r0, [pc, #256]	; c90c <gen_host+0x4c0>
    c808:	add	r0, pc, r0
    c80c:	bl	2068 <sf_bpf_error>
    c810:	ldr	r0, [pc, #248]	; c910 <gen_host+0x4c4>
    c814:	add	r0, pc, r0
    c818:	bl	2068 <sf_bpf_error>
    c81c:	ldr	r0, [pc, #240]	; c914 <gen_host+0x4c8>
    c820:	add	r0, pc, r0
    c824:	bl	2068 <sf_bpf_error>
    c828:	ldr	r0, [pc, #232]	; c918 <gen_host+0x4cc>
    c82c:	add	r0, pc, r0
    c830:	bl	2068 <sf_bpf_error>
    c834:	ldr	r0, [pc, #224]	; c91c <gen_host+0x4d0>
    c838:	add	r0, pc, r0
    c83c:	bl	2068 <sf_bpf_error>
    c840:	ldr	r0, [pc, #216]	; c920 <gen_host+0x4d4>
    c844:	add	r0, pc, r0
    c848:	bl	2068 <sf_bpf_error>
    c84c:	ldr	r0, [pc, #208]	; c924 <gen_host+0x4d8>
    c850:	add	r0, pc, r0
    c854:	bl	2068 <sf_bpf_error>
    c858:	ldr	r0, [pc, #200]	; c928 <gen_host+0x4dc>
    c85c:	add	r0, pc, r0
    c860:	bl	2068 <sf_bpf_error>
    c864:	ldr	r0, [pc, #92]	; c8c8 <gen_host+0x47c>
    c868:	add	r0, pc, r0
    c86c:	bl	2068 <sf_bpf_error>
    c870:	ldr	r0, [pc, #76]	; c8c4 <gen_host+0x478>
    c874:	add	r0, pc, r0
    c878:	bl	2068 <sf_bpf_error>
    c87c:	ldr	r0, [pc, #72]	; c8cc <gen_host+0x480>
    c880:	add	r0, pc, r0
    c884:	bl	2068 <sf_bpf_error>
    c888:	ldr	r0, [pc, #64]	; c8d0 <gen_host+0x484>
    c88c:	add	r0, pc, r0
    c890:	bl	2068 <sf_bpf_error>
    c894:	ldr	r0, [pc, #56]	; c8d4 <gen_host+0x488>
    c898:	add	r0, pc, r0
    c89c:	bl	2068 <sf_bpf_error>
    c8a0:	ldr	r0, [pc, #48]	; c8d8 <gen_host+0x48c>
    c8a4:	add	r0, pc, r0
    c8a8:	bl	2068 <sf_bpf_error>
    c8ac:	ldr	r0, [pc, #48]	; c8e4 <gen_host+0x498>
    c8b0:	add	r0, pc, r0
    c8b4:	bl	2068 <sf_bpf_error>
    c8b8:	.word	0x0001de40
    c8bc:	.word	0x0001e9ae
    c8c0:	.word	0x0003ab70
    c8c4:	.word	0x0001e3cf
    c8c8:	.word	0x0001e3f8
    c8cc:	.word	0x0001e3fe
    c8d0:	.word	0x0001e40f
    c8d4:	.word	0x0001e421
    c8d8:	.word	0x0001e433
    c8dc:	.word	0x0001e511
    c8e0:	.word	0x0001e522
    c8e4:	.word	0x0001e480
    c8e8:	.word	0x0001e559
    c8ec:	.word	0x0001e5e9
    c8f0:	.word	0x0001e618
    c8f4:	.word	0x0001e617
    c8f8:	.word	0x0001e648
    c8fc:	.word	0x0001e655
    c900:	.word	0x0001e66b
    c904:	.word	0x0001e67e
    c908:	.word	0x0001e68e
    c90c:	.word	0x0001e67b
    c910:	.word	0x0001e692
    c914:	.word	0x0001e6a4
    c918:	.word	0x0001e6b6
    c91c:	.word	0x0001e6c8
    c920:	.word	0x0001e6d9
    c924:	.word	0x0001e6f0
    c928:	.word	0x0001e705

0000c92c <gen_ehostop>:
    c92c:	push	{r4, r5, fp, lr}
    c930:	add	fp, sp, #8
    c934:	sub	sp, sp, #8
    c938:	cmp	r1, #4
    c93c:	bhi	cb78 <gen_ehostop+0x24c>
    c940:	mov	r5, r0
    c944:	add	r0, pc, #4
    c948:	ldr	r1, [r0, r1, lsl #2]
    c94c:	add	pc, r0, r1
    c950:	.word	0x00000014
    c954:	.word	0x000001c4
    c958:	.word	0x000001d4
    c95c:	.word	0x00000014
    c960:	.word	0x000000e0
    c964:	ldr	r0, [pc, #544]	; cb8c <gen_ehostop+0x260>
    c968:	mov	r2, #6
    c96c:	mov	r3, r5
    c970:	ldr	r0, [pc, r0]
    c974:	add	r1, r0, #6
    c978:	mov	r0, #1
    c97c:	bl	1c314 <gen_bcmp>
    c980:	ldr	r1, [pc, #520]	; cb90 <gen_ehostop+0x264>
    c984:	mov	r4, r0
    c988:	mov	r0, #1
    c98c:	mov	r2, #6
    c990:	mov	r3, r5
    c994:	ldr	r1, [pc, r1]
    c998:	bl	1c314 <gen_bcmp>
    c99c:	ldr	r1, [r4, #44]	; 0x2c
    c9a0:	cmp	r4, #0
    c9a4:	clz	r1, r1
    c9a8:	lsr	r1, r1, #5
    c9ac:	str	r1, [r4, #44]	; 0x2c
    c9b0:	beq	c9ec <gen_ehostop+0xc0>
    c9b4:	ldr	r2, [r0, #96]	; 0x60
    c9b8:	mov	r3, r4
    c9bc:	cmp	r1, #0
    c9c0:	mov	r1, #84	; 0x54
    c9c4:	add	r5, r3, #84	; 0x54
    c9c8:	movweq	r1, #60	; 0x3c
    c9cc:	addeq	r5, r3, #60	; 0x3c
    c9d0:	ldr	r3, [r3, r1]
    c9d4:	str	r2, [r5]
    c9d8:	cmp	r3, #0
    c9dc:	beq	c9e8 <gen_ehostop+0xbc>
    c9e0:	ldr	r1, [r3, #44]	; 0x2c
    c9e4:	b	c9bc <gen_ehostop+0x90>
    c9e8:	ldr	r1, [r4, #44]	; 0x2c
    c9ec:	clz	r1, r1
    c9f0:	cmp	r0, #0
    c9f4:	lsr	r1, r1, #5
    c9f8:	str	r1, [r4, #44]	; 0x2c
    c9fc:	str	r0, [sp]
    ca00:	beq	cb44 <gen_ehostop+0x218>
    ca04:	mov	r2, r0
    ca08:	ldr	r3, [r2, #44]	; 0x2c
    ca0c:	add	r1, r2, #84	; 0x54
    ca10:	cmp	r3, #0
    ca14:	mov	r3, #84	; 0x54
    ca18:	movweq	r3, #60	; 0x3c
    ca1c:	addeq	r1, r2, #60	; 0x3c
    ca20:	ldr	r2, [r2, r3]
    ca24:	cmp	r2, #0
    ca28:	bne	ca08 <gen_ehostop+0xdc>
    ca2c:	b	cb48 <gen_ehostop+0x21c>
    ca30:	ldr	r0, [pc, #332]	; cb84 <gen_ehostop+0x258>
    ca34:	mov	r2, #6
    ca38:	mov	r3, r5
    ca3c:	ldr	r0, [pc, r0]
    ca40:	add	r1, r0, #6
    ca44:	mov	r0, #1
    ca48:	bl	1c314 <gen_bcmp>
    ca4c:	ldr	r1, [pc, #308]	; cb88 <gen_ehostop+0x25c>
    ca50:	mov	r4, r0
    ca54:	mov	r0, #1
    ca58:	mov	r2, #6
    ca5c:	mov	r3, r5
    ca60:	ldr	r1, [pc, r1]
    ca64:	bl	1c314 <gen_bcmp>
    ca68:	cmp	r4, #0
    ca6c:	beq	caa0 <gen_ehostop+0x174>
    ca70:	ldr	r1, [r0, #96]	; 0x60
    ca74:	mov	r2, r4
    ca78:	ldr	r3, [r2, #44]	; 0x2c
    ca7c:	add	r5, r2, #84	; 0x54
    ca80:	cmp	r3, #0
    ca84:	mov	r3, #84	; 0x54
    ca88:	movweq	r3, #60	; 0x3c
    ca8c:	addeq	r5, r2, #60	; 0x3c
    ca90:	ldr	r2, [r2, r3]
    ca94:	str	r1, [r5]
    ca98:	cmp	r2, #0
    ca9c:	bne	ca78 <gen_ehostop+0x14c>
    caa0:	ldr	r1, [r4, #44]	; 0x2c
    caa4:	cmp	r0, #0
    caa8:	clz	r1, r1
    caac:	lsr	r1, r1, #5
    cab0:	str	r1, [r4, #44]	; 0x2c
    cab4:	ldr	r2, [r0, #44]	; 0x2c
    cab8:	clz	r1, r2
    cabc:	lsr	r1, r1, #5
    cac0:	str	r1, [r0, #44]	; 0x2c
    cac4:	str	r0, [sp, #4]
    cac8:	beq	cb50 <gen_ehostop+0x224>
    cacc:	cmp	r2, #0
    cad0:	mov	r2, #60	; 0x3c
    cad4:	add	r1, r0, #60	; 0x3c
    cad8:	movweq	r2, #84	; 0x54
    cadc:	addeq	r1, r0, #84	; 0x54
    cae0:	ldr	r2, [r0, r2]
    cae4:	cmp	r2, #0
    cae8:	beq	cb54 <gen_ehostop+0x228>
    caec:	ldr	r3, [r2, #44]	; 0x2c
    caf0:	add	r1, r2, #84	; 0x54
    caf4:	cmp	r3, #0
    caf8:	mov	r3, #84	; 0x54
    cafc:	movweq	r3, #60	; 0x3c
    cb00:	addeq	r1, r2, #60	; 0x3c
    cb04:	ldr	r2, [r2, r3]
    cb08:	cmp	r2, #0
    cb0c:	bne	caec <gen_ehostop+0x1c0>
    cb10:	b	cb54 <gen_ehostop+0x228>
    cb14:	ldr	r0, [pc, #96]	; cb7c <gen_ehostop+0x250>
    cb18:	ldr	r0, [pc, r0]
    cb1c:	add	r1, r0, #6
    cb20:	b	cb2c <gen_ehostop+0x200>
    cb24:	ldr	r1, [pc, #84]	; cb80 <gen_ehostop+0x254>
    cb28:	ldr	r1, [pc, r1]
    cb2c:	mov	r0, #1
    cb30:	mov	r2, #6
    cb34:	mov	r3, r5
    cb38:	sub	sp, fp, #8
    cb3c:	pop	{r4, r5, fp, lr}
    cb40:	b	1c314 <gen_bcmp>
    cb44:	mov	r1, sp
    cb48:	str	r4, [r1]
    cb4c:	b	cb68 <gen_ehostop+0x23c>
    cb50:	add	r1, sp, #4
    cb54:	str	r4, [r1]
    cb58:	ldr	r1, [r0, #44]	; 0x2c
    cb5c:	clz	r1, r1
    cb60:	lsr	r1, r1, #5
    cb64:	str	r1, [r0, #44]	; 0x2c
    cb68:	ldr	r1, [r4, #96]	; 0x60
    cb6c:	str	r1, [r0, #96]	; 0x60
    cb70:	sub	sp, fp, #8
    cb74:	pop	{r4, r5, fp, pc}
    cb78:	bl	edc <abort@plt>
    cb7c:	.word	0x0003a930
    cb80:	.word	0x0003a920
    cb84:	.word	0x0003aa0c
    cb88:	.word	0x0003a9e8
    cb8c:	.word	0x0003aad8
    cb90:	.word	0x0003aab4

0000cb94 <gen_fhostop>:
    cb94:	push	{r4, r5, fp, lr}
    cb98:	add	fp, sp, #8
    cb9c:	sub	sp, sp, #8
    cba0:	cmp	r1, #4
    cba4:	bhi	cdc0 <gen_fhostop+0x22c>
    cba8:	mov	r5, r0
    cbac:	add	r0, pc, #4
    cbb0:	ldr	r1, [r0, r1, lsl #2]
    cbb4:	add	pc, r0, r1
    cbb8:	.word	0x00000014
    cbbc:	.word	0x000001ac
    cbc0:	.word	0x000001b8
    cbc4:	.word	0x00000014
    cbc8:	.word	0x000000d4
    cbcc:	mov	r0, #1
    cbd0:	mov	r1, #7
    cbd4:	mov	r2, #6
    cbd8:	mov	r3, r5
    cbdc:	bl	1c314 <gen_bcmp>
    cbe0:	mov	r4, r0
    cbe4:	mov	r0, #1
    cbe8:	mov	r1, #1
    cbec:	mov	r2, #6
    cbf0:	mov	r3, r5
    cbf4:	bl	1c314 <gen_bcmp>
    cbf8:	ldr	r1, [r4, #44]	; 0x2c
    cbfc:	cmp	r4, #0
    cc00:	clz	r1, r1
    cc04:	lsr	r1, r1, #5
    cc08:	str	r1, [r4, #44]	; 0x2c
    cc0c:	beq	cc48 <gen_fhostop+0xb4>
    cc10:	ldr	r2, [r0, #96]	; 0x60
    cc14:	mov	r3, r4
    cc18:	cmp	r1, #0
    cc1c:	mov	r1, #84	; 0x54
    cc20:	add	r5, r3, #84	; 0x54
    cc24:	movweq	r1, #60	; 0x3c
    cc28:	addeq	r5, r3, #60	; 0x3c
    cc2c:	ldr	r3, [r3, r1]
    cc30:	str	r2, [r5]
    cc34:	cmp	r3, #0
    cc38:	beq	cc44 <gen_fhostop+0xb0>
    cc3c:	ldr	r1, [r3, #44]	; 0x2c
    cc40:	b	cc18 <gen_fhostop+0x84>
    cc44:	ldr	r1, [r4, #44]	; 0x2c
    cc48:	clz	r1, r1
    cc4c:	cmp	r0, #0
    cc50:	lsr	r1, r1, #5
    cc54:	str	r1, [r4, #44]	; 0x2c
    cc58:	str	r0, [sp]
    cc5c:	beq	cd8c <gen_fhostop+0x1f8>
    cc60:	mov	r2, r0
    cc64:	ldr	r3, [r2, #44]	; 0x2c
    cc68:	add	r1, r2, #84	; 0x54
    cc6c:	cmp	r3, #0
    cc70:	mov	r3, #84	; 0x54
    cc74:	movweq	r3, #60	; 0x3c
    cc78:	addeq	r1, r2, #60	; 0x3c
    cc7c:	ldr	r2, [r2, r3]
    cc80:	cmp	r2, #0
    cc84:	bne	cc64 <gen_fhostop+0xd0>
    cc88:	b	cd90 <gen_fhostop+0x1fc>
    cc8c:	mov	r0, #1
    cc90:	mov	r1, #7
    cc94:	mov	r2, #6
    cc98:	mov	r3, r5
    cc9c:	bl	1c314 <gen_bcmp>
    cca0:	mov	r4, r0
    cca4:	mov	r0, #1
    cca8:	mov	r1, #1
    ccac:	mov	r2, #6
    ccb0:	mov	r3, r5
    ccb4:	bl	1c314 <gen_bcmp>
    ccb8:	cmp	r4, #0
    ccbc:	beq	ccf0 <gen_fhostop+0x15c>
    ccc0:	ldr	r1, [r0, #96]	; 0x60
    ccc4:	mov	r2, r4
    ccc8:	ldr	r3, [r2, #44]	; 0x2c
    cccc:	add	r5, r2, #84	; 0x54
    ccd0:	cmp	r3, #0
    ccd4:	mov	r3, #84	; 0x54
    ccd8:	movweq	r3, #60	; 0x3c
    ccdc:	addeq	r5, r2, #60	; 0x3c
    cce0:	ldr	r2, [r2, r3]
    cce4:	str	r1, [r5]
    cce8:	cmp	r2, #0
    ccec:	bne	ccc8 <gen_fhostop+0x134>
    ccf0:	ldr	r1, [r4, #44]	; 0x2c
    ccf4:	cmp	r0, #0
    ccf8:	clz	r1, r1
    ccfc:	lsr	r1, r1, #5
    cd00:	str	r1, [r4, #44]	; 0x2c
    cd04:	ldr	r2, [r0, #44]	; 0x2c
    cd08:	clz	r1, r2
    cd0c:	lsr	r1, r1, #5
    cd10:	str	r1, [r0, #44]	; 0x2c
    cd14:	str	r0, [sp, #4]
    cd18:	beq	cd98 <gen_fhostop+0x204>
    cd1c:	cmp	r2, #0
    cd20:	mov	r2, #60	; 0x3c
    cd24:	add	r1, r0, #60	; 0x3c
    cd28:	movweq	r2, #84	; 0x54
    cd2c:	addeq	r1, r0, #84	; 0x54
    cd30:	ldr	r2, [r0, r2]
    cd34:	cmp	r2, #0
    cd38:	beq	cd9c <gen_fhostop+0x208>
    cd3c:	ldr	r3, [r2, #44]	; 0x2c
    cd40:	add	r1, r2, #84	; 0x54
    cd44:	cmp	r3, #0
    cd48:	mov	r3, #84	; 0x54
    cd4c:	movweq	r3, #60	; 0x3c
    cd50:	addeq	r1, r2, #60	; 0x3c
    cd54:	ldr	r2, [r2, r3]
    cd58:	cmp	r2, #0
    cd5c:	bne	cd3c <gen_fhostop+0x1a8>
    cd60:	b	cd9c <gen_fhostop+0x208>
    cd64:	mov	r0, #1
    cd68:	mov	r1, #7
    cd6c:	b	cd78 <gen_fhostop+0x1e4>
    cd70:	mov	r0, #1
    cd74:	mov	r1, #1
    cd78:	mov	r2, #6
    cd7c:	mov	r3, r5
    cd80:	sub	sp, fp, #8
    cd84:	pop	{r4, r5, fp, lr}
    cd88:	b	1c314 <gen_bcmp>
    cd8c:	mov	r1, sp
    cd90:	str	r4, [r1]
    cd94:	b	cdb0 <gen_fhostop+0x21c>
    cd98:	add	r1, sp, #4
    cd9c:	str	r4, [r1]
    cda0:	ldr	r1, [r0, #44]	; 0x2c
    cda4:	clz	r1, r1
    cda8:	lsr	r1, r1, #5
    cdac:	str	r1, [r0, #44]	; 0x2c
    cdb0:	ldr	r1, [r4, #96]	; 0x60
    cdb4:	str	r1, [r0, #96]	; 0x60
    cdb8:	sub	sp, fp, #8
    cdbc:	pop	{r4, r5, fp, pc}
    cdc0:	bl	edc <abort@plt>

0000cdc4 <gen_thostop>:
    cdc4:	push	{r4, r5, fp, lr}
    cdc8:	add	fp, sp, #8
    cdcc:	sub	sp, sp, #8
    cdd0:	cmp	r1, #4
    cdd4:	bhi	cff0 <gen_thostop+0x22c>
    cdd8:	mov	r5, r0
    cddc:	add	r0, pc, #4
    cde0:	ldr	r1, [r0, r1, lsl #2]
    cde4:	add	pc, r0, r1
    cde8:	.word	0x00000014
    cdec:	.word	0x000001ac
    cdf0:	.word	0x000001b8
    cdf4:	.word	0x00000014
    cdf8:	.word	0x000000d4
    cdfc:	mov	r0, #1
    ce00:	mov	r1, #8
    ce04:	mov	r2, #6
    ce08:	mov	r3, r5
    ce0c:	bl	1c314 <gen_bcmp>
    ce10:	mov	r4, r0
    ce14:	mov	r0, #1
    ce18:	mov	r1, #2
    ce1c:	mov	r2, #6
    ce20:	mov	r3, r5
    ce24:	bl	1c314 <gen_bcmp>
    ce28:	ldr	r1, [r4, #44]	; 0x2c
    ce2c:	cmp	r4, #0
    ce30:	clz	r1, r1
    ce34:	lsr	r1, r1, #5
    ce38:	str	r1, [r4, #44]	; 0x2c
    ce3c:	beq	ce78 <gen_thostop+0xb4>
    ce40:	ldr	r2, [r0, #96]	; 0x60
    ce44:	mov	r3, r4
    ce48:	cmp	r1, #0
    ce4c:	mov	r1, #84	; 0x54
    ce50:	add	r5, r3, #84	; 0x54
    ce54:	movweq	r1, #60	; 0x3c
    ce58:	addeq	r5, r3, #60	; 0x3c
    ce5c:	ldr	r3, [r3, r1]
    ce60:	str	r2, [r5]
    ce64:	cmp	r3, #0
    ce68:	beq	ce74 <gen_thostop+0xb0>
    ce6c:	ldr	r1, [r3, #44]	; 0x2c
    ce70:	b	ce48 <gen_thostop+0x84>
    ce74:	ldr	r1, [r4, #44]	; 0x2c
    ce78:	clz	r1, r1
    ce7c:	cmp	r0, #0
    ce80:	lsr	r1, r1, #5
    ce84:	str	r1, [r4, #44]	; 0x2c
    ce88:	str	r0, [sp]
    ce8c:	beq	cfbc <gen_thostop+0x1f8>
    ce90:	mov	r2, r0
    ce94:	ldr	r3, [r2, #44]	; 0x2c
    ce98:	add	r1, r2, #84	; 0x54
    ce9c:	cmp	r3, #0
    cea0:	mov	r3, #84	; 0x54
    cea4:	movweq	r3, #60	; 0x3c
    cea8:	addeq	r1, r2, #60	; 0x3c
    ceac:	ldr	r2, [r2, r3]
    ceb0:	cmp	r2, #0
    ceb4:	bne	ce94 <gen_thostop+0xd0>
    ceb8:	b	cfc0 <gen_thostop+0x1fc>
    cebc:	mov	r0, #1
    cec0:	mov	r1, #8
    cec4:	mov	r2, #6
    cec8:	mov	r3, r5
    cecc:	bl	1c314 <gen_bcmp>
    ced0:	mov	r4, r0
    ced4:	mov	r0, #1
    ced8:	mov	r1, #2
    cedc:	mov	r2, #6
    cee0:	mov	r3, r5
    cee4:	bl	1c314 <gen_bcmp>
    cee8:	cmp	r4, #0
    ceec:	beq	cf20 <gen_thostop+0x15c>
    cef0:	ldr	r1, [r0, #96]	; 0x60
    cef4:	mov	r2, r4
    cef8:	ldr	r3, [r2, #44]	; 0x2c
    cefc:	add	r5, r2, #84	; 0x54
    cf00:	cmp	r3, #0
    cf04:	mov	r3, #84	; 0x54
    cf08:	movweq	r3, #60	; 0x3c
    cf0c:	addeq	r5, r2, #60	; 0x3c
    cf10:	ldr	r2, [r2, r3]
    cf14:	str	r1, [r5]
    cf18:	cmp	r2, #0
    cf1c:	bne	cef8 <gen_thostop+0x134>
    cf20:	ldr	r1, [r4, #44]	; 0x2c
    cf24:	cmp	r0, #0
    cf28:	clz	r1, r1
    cf2c:	lsr	r1, r1, #5
    cf30:	str	r1, [r4, #44]	; 0x2c
    cf34:	ldr	r2, [r0, #44]	; 0x2c
    cf38:	clz	r1, r2
    cf3c:	lsr	r1, r1, #5
    cf40:	str	r1, [r0, #44]	; 0x2c
    cf44:	str	r0, [sp, #4]
    cf48:	beq	cfc8 <gen_thostop+0x204>
    cf4c:	cmp	r2, #0
    cf50:	mov	r2, #60	; 0x3c
    cf54:	add	r1, r0, #60	; 0x3c
    cf58:	movweq	r2, #84	; 0x54
    cf5c:	addeq	r1, r0, #84	; 0x54
    cf60:	ldr	r2, [r0, r2]
    cf64:	cmp	r2, #0
    cf68:	beq	cfcc <gen_thostop+0x208>
    cf6c:	ldr	r3, [r2, #44]	; 0x2c
    cf70:	add	r1, r2, #84	; 0x54
    cf74:	cmp	r3, #0
    cf78:	mov	r3, #84	; 0x54
    cf7c:	movweq	r3, #60	; 0x3c
    cf80:	addeq	r1, r2, #60	; 0x3c
    cf84:	ldr	r2, [r2, r3]
    cf88:	cmp	r2, #0
    cf8c:	bne	cf6c <gen_thostop+0x1a8>
    cf90:	b	cfcc <gen_thostop+0x208>
    cf94:	mov	r0, #1
    cf98:	mov	r1, #8
    cf9c:	b	cfa8 <gen_thostop+0x1e4>
    cfa0:	mov	r0, #1
    cfa4:	mov	r1, #2
    cfa8:	mov	r2, #6
    cfac:	mov	r3, r5
    cfb0:	sub	sp, fp, #8
    cfb4:	pop	{r4, r5, fp, lr}
    cfb8:	b	1c314 <gen_bcmp>
    cfbc:	mov	r1, sp
    cfc0:	str	r4, [r1]
    cfc4:	b	cfe0 <gen_thostop+0x21c>
    cfc8:	add	r1, sp, #4
    cfcc:	str	r4, [r1]
    cfd0:	ldr	r1, [r0, #44]	; 0x2c
    cfd4:	clz	r1, r1
    cfd8:	lsr	r1, r1, #5
    cfdc:	str	r1, [r0, #44]	; 0x2c
    cfe0:	ldr	r1, [r4, #96]	; 0x60
    cfe4:	str	r1, [r0, #96]	; 0x60
    cfe8:	sub	sp, fp, #8
    cfec:	pop	{r4, r5, fp, pc}
    cff0:	bl	edc <abort@plt>

0000cff4 <gen_wlanhostop>:
    cff4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cff8:	add	fp, sp, #28
    cffc:	sub	sp, sp, #12
    d000:	cmp	r1, #8
    d004:	bhi	f228 <gen_wlanhostop+0x2234>
    d008:	mov	r9, r0
    d00c:	add	r0, pc, #4
    d010:	ldr	r1, [r0, r1, lsl #2]
    d014:	add	pc, r0, r1
    d018:	.word	0x00000024
    d01c:	.word	0x000001a4
    d020:	.word	0x00000314
    d024:	.word	0x00000024
    d028:	.word	0x000000d8
    d02c:	.word	0x0000050c
    d030:	.word	0x00000528
    d034:	.word	0x00000484
    d038:	.word	0x000005b4
    d03c:	mov	r0, r9
    d040:	mov	r1, #1
    d044:	bl	cff4 <gen_wlanhostop>
    d048:	mov	r6, r0
    d04c:	mov	r0, r9
    d050:	mov	r1, #2
    d054:	bl	cff4 <gen_wlanhostop>
    d058:	mov	r5, r0
    d05c:	ldr	r0, [r6, #44]	; 0x2c
    d060:	cmp	r6, #0
    d064:	clz	r0, r0
    d068:	lsr	r0, r0, #5
    d06c:	str	r0, [r6, #44]	; 0x2c
    d070:	beq	d0ac <gen_wlanhostop+0xb8>
    d074:	ldr	r1, [r5, #96]	; 0x60
    d078:	mov	r2, r6
    d07c:	cmp	r0, #0
    d080:	mov	r0, #84	; 0x54
    d084:	add	r3, r2, #84	; 0x54
    d088:	movweq	r0, #60	; 0x3c
    d08c:	addeq	r3, r2, #60	; 0x3c
    d090:	ldr	r2, [r2, r0]
    d094:	str	r1, [r3]
    d098:	cmp	r2, #0
    d09c:	beq	d0a8 <gen_wlanhostop+0xb4>
    d0a0:	ldr	r0, [r2, #44]	; 0x2c
    d0a4:	b	d07c <gen_wlanhostop+0x88>
    d0a8:	ldr	r0, [r6, #44]	; 0x2c
    d0ac:	clz	r0, r0
    d0b0:	cmp	r5, #0
    d0b4:	lsr	r0, r0, #5
    d0b8:	str	r0, [r6, #44]	; 0x2c
    d0bc:	str	r5, [sp, #8]
    d0c0:	beq	d654 <gen_wlanhostop+0x660>
    d0c4:	mov	r1, r5
    d0c8:	ldr	r2, [r1, #44]	; 0x2c
    d0cc:	add	r0, r1, #84	; 0x54
    d0d0:	cmp	r2, #0
    d0d4:	mov	r2, #84	; 0x54
    d0d8:	movweq	r2, #60	; 0x3c
    d0dc:	addeq	r0, r1, #60	; 0x3c
    d0e0:	ldr	r1, [r1, r2]
    d0e4:	cmp	r1, #0
    d0e8:	bne	d0c8 <gen_wlanhostop+0xd4>
    d0ec:	b	d658 <gen_wlanhostop+0x664>
    d0f0:	mov	r0, r9
    d0f4:	mov	r1, #1
    d0f8:	bl	cff4 <gen_wlanhostop>
    d0fc:	mov	r6, r0
    d100:	mov	r0, r9
    d104:	mov	r1, #2
    d108:	bl	cff4 <gen_wlanhostop>
    d10c:	mov	r5, r0
    d110:	cmp	r6, #0
    d114:	beq	d148 <gen_wlanhostop+0x154>
    d118:	ldr	r0, [r5, #96]	; 0x60
    d11c:	mov	r1, r6
    d120:	ldr	r2, [r1, #44]	; 0x2c
    d124:	add	r3, r1, #84	; 0x54
    d128:	cmp	r2, #0
    d12c:	mov	r2, #84	; 0x54
    d130:	movweq	r2, #60	; 0x3c
    d134:	addeq	r3, r1, #60	; 0x3c
    d138:	ldr	r1, [r1, r2]
    d13c:	str	r0, [r3]
    d140:	cmp	r1, #0
    d144:	bne	d120 <gen_wlanhostop+0x12c>
    d148:	ldr	r0, [r6, #44]	; 0x2c
    d14c:	cmp	r5, #0
    d150:	clz	r0, r0
    d154:	lsr	r0, r0, #5
    d158:	str	r0, [r6, #44]	; 0x2c
    d15c:	ldr	r1, [r5, #44]	; 0x2c
    d160:	clz	r0, r1
    d164:	lsr	r0, r0, #5
    d168:	str	r0, [r5, #44]	; 0x2c
    d16c:	str	r5, [sp, #8]
    d170:	beq	dd84 <gen_wlanhostop+0xd90>
    d174:	cmp	r1, #0
    d178:	mov	r1, #60	; 0x3c
    d17c:	add	r0, r5, #60	; 0x3c
    d180:	movweq	r1, #84	; 0x54
    d184:	addeq	r0, r5, #84	; 0x54
    d188:	ldr	r1, [r5, r1]
    d18c:	cmp	r1, #0
    d190:	beq	dd88 <gen_wlanhostop+0xd94>
    d194:	ldr	r2, [r1, #44]	; 0x2c
    d198:	add	r0, r1, #84	; 0x54
    d19c:	cmp	r2, #0
    d1a0:	mov	r2, #84	; 0x54
    d1a4:	movweq	r2, #60	; 0x3c
    d1a8:	addeq	r0, r1, #60	; 0x3c
    d1ac:	ldr	r1, [r1, r2]
    d1b0:	cmp	r1, #0
    d1b4:	bne	d194 <gen_wlanhostop+0x1a0>
    d1b8:	b	dd88 <gen_wlanhostop+0xd94>
    d1bc:	mov	r0, #1
    d1c0:	mov	r1, #1
    d1c4:	mov	r2, #16
    d1c8:	mov	r7, #1
    d1cc:	bl	17970 <gen_load_a>
    d1d0:	mov	r5, r0
    d1d4:	ldr	r0, [pc, #4000]	; e17c <gen_wlanhostop+0x1188>
    d1d8:	ldr	r0, [pc, r0]
    d1dc:	ldr	r8, [pc, #3996]	; e180 <gen_wlanhostop+0x118c>
    d1e0:	add	r8, pc, r8
    d1e4:	mov	r4, r8
    d1e8:	ldr	r6, [r4, r0, lsl #3]!
    d1ec:	cmp	r6, #207	; 0xcf
    d1f0:	bhi	d244 <gen_wlanhostop+0x250>
    d1f4:	ldr	r2, [pc, #4080]	; e1ec <gen_wlanhostop+0x11f8>
    d1f8:	add	r1, r0, #1
    d1fc:	cmp	r0, #15
    d200:	add	r2, pc, r2
    d204:	str	r1, [r2]
    d208:	bge	f21c <gen_wlanhostop+0x2228>
    d20c:	mov	r0, #1024	; 0x400
    d210:	lsl	r6, r0, r1
    d214:	mov	r0, r6
    d218:	bl	dec <malloc@plt>
    d21c:	cmp	r0, #0
    d220:	str	r0, [r4, #12]
    d224:	beq	f21c <gen_wlanhostop+0x2228>
    d228:	mov	r1, #0
    d22c:	mov	r2, r6
    d230:	add	r4, r4, #8
    d234:	bl	e58 <memset@plt>
    d238:	cmp	r6, #207	; 0xcf
    d23c:	str	r6, [r4]
    d240:	bls	f21c <gen_wlanhostop+0x2228>
    d244:	sub	r0, r6, #208	; 0xd0
    d248:	mov	r2, #6
    d24c:	mov	r3, r9
    d250:	str	r0, [r4]
    d254:	ldr	r1, [r4, #4]
    d258:	add	r4, r1, r0
    d25c:	mov	r0, #69	; 0x45
    d260:	mov	r1, #24
    d264:	str	r7, [r4, #20]
    d268:	str	r5, [r4, #4]
    d26c:	str	r0, [r4, #8]
    d270:	mov	r0, #1
    d274:	str	r4, [r4, #96]	; 0x60
    d278:	bl	1c314 <gen_bcmp>
    d27c:	mov	r5, r0
    d280:	cmp	r4, #0
    d284:	beq	d2b8 <gen_wlanhostop+0x2c4>
    d288:	ldr	r0, [r5, #96]	; 0x60
    d28c:	mov	r1, r4
    d290:	ldr	r2, [r1, #44]	; 0x2c
    d294:	add	r3, r1, #84	; 0x54
    d298:	cmp	r2, #0
    d29c:	mov	r2, #84	; 0x54
    d2a0:	movweq	r2, #60	; 0x3c
    d2a4:	addeq	r3, r1, #60	; 0x3c
    d2a8:	ldr	r1, [r1, r2]
    d2ac:	str	r0, [r3]
    d2b0:	cmp	r1, #0
    d2b4:	bne	d290 <gen_wlanhostop+0x29c>
    d2b8:	ldr	r0, [r4, #44]	; 0x2c
    d2bc:	cmp	r5, #0
    d2c0:	clz	r0, r0
    d2c4:	lsr	r0, r0, #5
    d2c8:	str	r0, [r4, #44]	; 0x2c
    d2cc:	ldr	r1, [r5, #44]	; 0x2c
    d2d0:	clz	r0, r1
    d2d4:	lsr	r0, r0, #5
    d2d8:	str	r0, [r5, #44]	; 0x2c
    d2dc:	str	r5, [sp, #8]
    d2e0:	beq	dda4 <gen_wlanhostop+0xdb0>
    d2e4:	cmp	r1, #0
    d2e8:	mov	r1, #60	; 0x3c
    d2ec:	add	r0, r5, #60	; 0x3c
    d2f0:	movweq	r1, #84	; 0x54
    d2f4:	addeq	r0, r5, #84	; 0x54
    d2f8:	ldr	r1, [r5, r1]
    d2fc:	cmp	r1, #0
    d300:	beq	dda8 <gen_wlanhostop+0xdb4>
    d304:	ldr	r2, [r1, #44]	; 0x2c
    d308:	add	r0, r1, #84	; 0x54
    d30c:	cmp	r2, #0
    d310:	mov	r2, #84	; 0x54
    d314:	movweq	r2, #60	; 0x3c
    d318:	addeq	r0, r1, #60	; 0x3c
    d31c:	ldr	r1, [r1, r2]
    d320:	cmp	r1, #0
    d324:	bne	d304 <gen_wlanhostop+0x310>
    d328:	b	dda8 <gen_wlanhostop+0xdb4>
    d32c:	mov	r0, #1
    d330:	mov	r1, #1
    d334:	mov	r2, #16
    d338:	mov	r7, #1
    d33c:	bl	17970 <gen_load_a>
    d340:	mov	r5, r0
    d344:	ldr	r0, [pc, #3820]	; e238 <gen_wlanhostop+0x1244>
    d348:	ldr	r0, [pc, r0]
    d34c:	ldr	r8, [pc, #3816]	; e23c <gen_wlanhostop+0x1248>
    d350:	add	r8, pc, r8
    d354:	mov	r4, r8
    d358:	ldr	r6, [r4, r0, lsl #3]!
    d35c:	cmp	r6, #207	; 0xcf
    d360:	bhi	d3b4 <gen_wlanhostop+0x3c0>
    d364:	ldr	r2, [pc, #3796]	; e240 <gen_wlanhostop+0x124c>
    d368:	add	r1, r0, #1
    d36c:	cmp	r0, #15
    d370:	add	r2, pc, r2
    d374:	str	r1, [r2]
    d378:	bge	f21c <gen_wlanhostop+0x2228>
    d37c:	mov	r0, #1024	; 0x400
    d380:	lsl	r6, r0, r1
    d384:	mov	r0, r6
    d388:	bl	dec <malloc@plt>
    d38c:	cmp	r0, #0
    d390:	str	r0, [r4, #12]
    d394:	beq	f21c <gen_wlanhostop+0x2228>
    d398:	mov	r1, #0
    d39c:	mov	r2, r6
    d3a0:	add	r4, r4, #8
    d3a4:	bl	e58 <memset@plt>
    d3a8:	cmp	r6, #207	; 0xcf
    d3ac:	str	r6, [r4]
    d3b0:	bls	f21c <gen_wlanhostop+0x2228>
    d3b4:	sub	r0, r6, #208	; 0xd0
    d3b8:	mov	r2, #6
    d3bc:	mov	r3, r9
    d3c0:	str	r0, [r4]
    d3c4:	ldr	r1, [r4, #4]
    d3c8:	add	r4, r1, r0
    d3cc:	mov	r0, #69	; 0x45
    d3d0:	mov	r1, #16
    d3d4:	str	r7, [r4, #20]
    d3d8:	str	r5, [r4, #4]
    d3dc:	str	r0, [r4, #8]
    d3e0:	mov	r0, #1
    d3e4:	str	r4, [r4, #96]	; 0x60
    d3e8:	bl	1c314 <gen_bcmp>
    d3ec:	mov	r5, r0
    d3f0:	cmp	r4, #0
    d3f4:	beq	d428 <gen_wlanhostop+0x434>
    d3f8:	ldr	r0, [r5, #96]	; 0x60
    d3fc:	mov	r1, r4
    d400:	ldr	r2, [r1, #44]	; 0x2c
    d404:	add	r3, r1, #84	; 0x54
    d408:	cmp	r2, #0
    d40c:	mov	r2, #84	; 0x54
    d410:	movweq	r2, #60	; 0x3c
    d414:	addeq	r3, r1, #60	; 0x3c
    d418:	ldr	r1, [r1, r2]
    d41c:	str	r0, [r3]
    d420:	cmp	r1, #0
    d424:	bne	d400 <gen_wlanhostop+0x40c>
    d428:	ldr	r0, [r4, #44]	; 0x2c
    d42c:	cmp	r5, #0
    d430:	clz	r0, r0
    d434:	lsr	r0, r0, #5
    d438:	str	r0, [r4, #44]	; 0x2c
    d43c:	ldr	r1, [r5, #44]	; 0x2c
    d440:	clz	r0, r1
    d444:	lsr	r0, r0, #5
    d448:	str	r0, [r5, #44]	; 0x2c
    d44c:	str	r5, [sp, #8]
    d450:	beq	df38 <gen_wlanhostop+0xf44>
    d454:	cmp	r1, #0
    d458:	mov	r1, #60	; 0x3c
    d45c:	add	r0, r5, #60	; 0x3c
    d460:	movweq	r1, #84	; 0x54
    d464:	addeq	r0, r5, #84	; 0x54
    d468:	ldr	r1, [r5, r1]
    d46c:	cmp	r1, #0
    d470:	beq	df3c <gen_wlanhostop+0xf48>
    d474:	ldr	r2, [r1, #44]	; 0x2c
    d478:	add	r0, r1, #84	; 0x54
    d47c:	cmp	r2, #0
    d480:	mov	r2, #84	; 0x54
    d484:	movweq	r2, #60	; 0x3c
    d488:	addeq	r0, r1, #60	; 0x3c
    d48c:	ldr	r1, [r1, r2]
    d490:	cmp	r1, #0
    d494:	bne	d474 <gen_wlanhostop+0x480>
    d498:	b	df3c <gen_wlanhostop+0xf48>
    d49c:	mov	r0, #1
    d4a0:	mov	r1, #0
    d4a4:	mov	r2, #16
    d4a8:	bl	17970 <gen_load_a>
    d4ac:	mov	r8, r0
    d4b0:	ldr	r0, [pc, #3816]	; e3a0 <gen_wlanhostop+0x13ac>
    d4b4:	ldr	r0, [pc, r0]
    d4b8:	ldr	r5, [pc, #3812]	; e3a4 <gen_wlanhostop+0x13b0>
    d4bc:	add	r5, pc, r5
    d4c0:	mov	r4, r5
    d4c4:	ldr	r6, [r4, r0, lsl #3]!
    d4c8:	cmp	r6, #19
    d4cc:	bhi	d660 <gen_wlanhostop+0x66c>
    d4d0:	ldr	r1, [pc, #3792]	; e3a8 <gen_wlanhostop+0x13b4>
    d4d4:	add	r7, r0, #1
    d4d8:	cmp	r0, #15
    d4dc:	add	r1, pc, r1
    d4e0:	str	r7, [r1]
    d4e4:	bge	f21c <gen_wlanhostop+0x2228>
    d4e8:	mov	r0, #1024	; 0x400
    d4ec:	lsl	r6, r0, r7
    d4f0:	mov	r0, r6
    d4f4:	bl	dec <malloc@plt>
    d4f8:	cmp	r0, #0
    d4fc:	str	r0, [r4, #12]
    d500:	beq	f21c <gen_wlanhostop+0x2228>
    d504:	mov	r1, #0
    d508:	mov	r2, r6
    d50c:	add	r4, r4, #8
    d510:	bl	e58 <memset@plt>
    d514:	cmp	r6, #19
    d518:	str	r6, [r4]
    d51c:	bhi	d664 <gen_wlanhostop+0x670>
    d520:	b	f21c <gen_wlanhostop+0x2228>
    d524:	mov	r0, #1
    d528:	mov	r1, #4
    d52c:	mov	r2, #6
    d530:	mov	r3, r9
    d534:	sub	sp, fp, #28
    d538:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d53c:	b	1c314 <gen_bcmp>
    d540:	mov	r0, #1
    d544:	mov	r1, #0
    d548:	mov	r2, #16
    d54c:	str	r9, [sp, #4]
    d550:	bl	17970 <gen_load_a>
    d554:	mov	r5, r0
    d558:	ldr	r0, [pc, #4008]	; e508 <gen_wlanhostop+0x1514>
    d55c:	ldr	r0, [pc, r0]
    d560:	ldr	r9, [pc, #4004]	; e50c <gen_wlanhostop+0x1518>
    d564:	add	r9, pc, r9
    d568:	mov	r4, r9
    d56c:	ldr	r6, [r4, r0, lsl #3]!
    d570:	cmp	r6, #19
    d574:	bhi	d7f0 <gen_wlanhostop+0x7fc>
    d578:	ldr	r1, [pc, #3984]	; e510 <gen_wlanhostop+0x151c>
    d57c:	add	r7, r0, #1
    d580:	cmp	r0, #15
    d584:	add	r1, pc, r1
    d588:	str	r7, [r1]
    d58c:	bge	f21c <gen_wlanhostop+0x2228>
    d590:	mov	r0, #1024	; 0x400
    d594:	lsl	r6, r0, r7
    d598:	mov	r0, r6
    d59c:	bl	dec <malloc@plt>
    d5a0:	cmp	r0, #0
    d5a4:	str	r0, [r4, #12]
    d5a8:	beq	f21c <gen_wlanhostop+0x2228>
    d5ac:	mov	r1, #0
    d5b0:	mov	r2, r6
    d5b4:	add	r4, r4, #8
    d5b8:	bl	e58 <memset@plt>
    d5bc:	cmp	r6, #19
    d5c0:	str	r6, [r4]
    d5c4:	bhi	d7f4 <gen_wlanhostop+0x800>
    d5c8:	b	f21c <gen_wlanhostop+0x2228>
    d5cc:	mov	r0, #1
    d5d0:	mov	r1, #1
    d5d4:	mov	r2, #16
    d5d8:	bl	17970 <gen_load_a>
    d5dc:	mov	r8, r0
    d5e0:	ldr	r0, [pc, #3884]	; e514 <gen_wlanhostop+0x1520>
    d5e4:	ldr	r0, [pc, r0]
    d5e8:	ldr	r5, [pc, #3880]	; e518 <gen_wlanhostop+0x1524>
    d5ec:	add	r5, pc, r5
    d5f0:	mov	r4, r5
    d5f4:	ldr	r6, [r4, r0, lsl #3]!
    d5f8:	cmp	r6, #19
    d5fc:	bhi	d940 <gen_wlanhostop+0x94c>
    d600:	ldr	r1, [pc, #3860]	; e51c <gen_wlanhostop+0x1528>
    d604:	add	r7, r0, #1
    d608:	cmp	r0, #15
    d60c:	add	r1, pc, r1
    d610:	str	r7, [r1]
    d614:	bge	f21c <gen_wlanhostop+0x2228>
    d618:	mov	r0, #1024	; 0x400
    d61c:	lsl	r6, r0, r7
    d620:	mov	r0, r6
    d624:	bl	dec <malloc@plt>
    d628:	cmp	r0, #0
    d62c:	str	r0, [r4, #12]
    d630:	beq	f21c <gen_wlanhostop+0x2228>
    d634:	mov	r1, #0
    d638:	mov	r2, r6
    d63c:	add	r4, r4, #8
    d640:	bl	e58 <memset@plt>
    d644:	cmp	r6, #19
    d648:	str	r6, [r4]
    d64c:	bhi	d944 <gen_wlanhostop+0x950>
    d650:	b	f21c <gen_wlanhostop+0x2228>
    d654:	add	r0, sp, #8
    d658:	str	r6, [r0]
    d65c:	b	dd9c <gen_wlanhostop+0xda8>
    d660:	mov	r7, r0
    d664:	sub	r1, r6, #20
    d668:	mov	r2, #84	; 0x54
    d66c:	str	r1, [r4]
    d670:	ldr	r0, [r4, #4]
    d674:	str	r2, [r0, r1]!
    d678:	mov	r1, #12
    d67c:	mov	r2, r8
    d680:	str	r1, [r0, #12]
    d684:	mov	r1, r2
    d688:	ldr	r2, [r2, #16]
    d68c:	cmp	r2, #0
    d690:	bne	d684 <gen_wlanhostop+0x690>
    d694:	str	r0, [r1, #16]
    d698:	ldr	r6, [r5, r7, lsl #3]!
    d69c:	cmp	r6, #207	; 0xcf
    d6a0:	bhi	d6f4 <gen_wlanhostop+0x700>
    d6a4:	ldr	r1, [pc, #3700]	; e520 <gen_wlanhostop+0x152c>
    d6a8:	add	r0, r7, #1
    d6ac:	cmp	r7, #15
    d6b0:	add	r1, pc, r1
    d6b4:	str	r0, [r1]
    d6b8:	bge	f21c <gen_wlanhostop+0x2228>
    d6bc:	mov	r1, #1024	; 0x400
    d6c0:	lsl	r6, r1, r0
    d6c4:	mov	r0, r6
    d6c8:	bl	dec <malloc@plt>
    d6cc:	cmp	r0, #0
    d6d0:	str	r0, [r5, #12]
    d6d4:	beq	f21c <gen_wlanhostop+0x2228>
    d6d8:	mov	r1, #0
    d6dc:	mov	r2, r6
    d6e0:	add	r5, r5, #8
    d6e4:	bl	e58 <memset@plt>
    d6e8:	cmp	r6, #207	; 0xcf
    d6ec:	str	r6, [r5]
    d6f0:	bls	f21c <gen_wlanhostop+0x2228>
    d6f4:	sub	r0, r6, #208	; 0xd0
    d6f8:	mov	r2, #6
    d6fc:	mov	r3, r9
    d700:	str	r0, [r5]
    d704:	ldr	r1, [r5, #4]
    d708:	add	r4, r1, r0
    d70c:	mov	r1, #4
    d710:	mov	r0, #21
    d714:	str	r1, [r4, #20]
    d718:	str	r8, [r4, #4]
    d71c:	str	r0, [r4, #8]
    d720:	mov	r1, #16
    d724:	ldr	r0, [r4, #44]	; 0x2c
    d728:	clz	r0, r0
    d72c:	lsr	r0, r0, #5
    d730:	str	r0, [r4, #44]	; 0x2c
    d734:	mov	r0, #1
    d738:	str	r4, [r4, #96]	; 0x60
    d73c:	bl	1c314 <gen_bcmp>
    d740:	mov	r5, r0
    d744:	cmp	r4, #0
    d748:	beq	d77c <gen_wlanhostop+0x788>
    d74c:	ldr	r0, [r5, #96]	; 0x60
    d750:	mov	r1, r4
    d754:	ldr	r2, [r1, #44]	; 0x2c
    d758:	add	r3, r1, #84	; 0x54
    d75c:	cmp	r2, #0
    d760:	mov	r2, #84	; 0x54
    d764:	movweq	r2, #60	; 0x3c
    d768:	addeq	r3, r1, #60	; 0x3c
    d76c:	ldr	r1, [r1, r2]
    d770:	str	r0, [r3]
    d774:	cmp	r1, #0
    d778:	bne	d754 <gen_wlanhostop+0x760>
    d77c:	ldr	r0, [r4, #44]	; 0x2c
    d780:	cmp	r5, #0
    d784:	clz	r0, r0
    d788:	lsr	r0, r0, #5
    d78c:	str	r0, [r4, #44]	; 0x2c
    d790:	ldr	r1, [r5, #44]	; 0x2c
    d794:	clz	r0, r1
    d798:	lsr	r0, r0, #5
    d79c:	str	r0, [r5, #44]	; 0x2c
    d7a0:	str	r5, [sp, #8]
    d7a4:	beq	f1f0 <gen_wlanhostop+0x21fc>
    d7a8:	cmp	r1, #0
    d7ac:	mov	r1, #60	; 0x3c
    d7b0:	add	r0, r5, #60	; 0x3c
    d7b4:	movweq	r1, #84	; 0x54
    d7b8:	addeq	r0, r5, #84	; 0x54
    d7bc:	ldr	r1, [r5, r1]
    d7c0:	cmp	r1, #0
    d7c4:	beq	f1f4 <gen_wlanhostop+0x2200>
    d7c8:	ldr	r2, [r1, #44]	; 0x2c
    d7cc:	add	r0, r1, #84	; 0x54
    d7d0:	cmp	r2, #0
    d7d4:	mov	r2, #84	; 0x54
    d7d8:	movweq	r2, #60	; 0x3c
    d7dc:	addeq	r0, r1, #60	; 0x3c
    d7e0:	ldr	r1, [r1, r2]
    d7e4:	cmp	r1, #0
    d7e8:	bne	d7c8 <gen_wlanhostop+0x7d4>
    d7ec:	b	f1f4 <gen_wlanhostop+0x2200>
    d7f0:	mov	r7, r0
    d7f4:	sub	r1, r6, #20
    d7f8:	mov	r2, #84	; 0x54
    d7fc:	str	r1, [r4]
    d800:	ldr	r0, [r4, #4]
    d804:	str	r2, [r0, r1]!
    d808:	mov	r1, #12
    d80c:	mov	r2, r5
    d810:	str	r1, [r0, #12]
    d814:	mov	r1, r2
    d818:	ldr	r2, [r2, #16]
    d81c:	cmp	r2, #0
    d820:	bne	d814 <gen_wlanhostop+0x820>
    d824:	str	r0, [r1, #16]
    d828:	mov	r4, r9
    d82c:	ldr	r6, [r4, r7, lsl #3]!
    d830:	cmp	r6, #207	; 0xcf
    d834:	bhi	d888 <gen_wlanhostop+0x894>
    d838:	ldr	r1, [pc, #3704]	; e6b8 <gen_wlanhostop+0x16c4>
    d83c:	add	r0, r7, #1
    d840:	cmp	r7, #15
    d844:	add	r1, pc, r1
    d848:	str	r0, [r1]
    d84c:	bge	f21c <gen_wlanhostop+0x2228>
    d850:	mov	r1, #1024	; 0x400
    d854:	lsl	r6, r1, r0
    d858:	mov	r0, r6
    d85c:	bl	dec <malloc@plt>
    d860:	cmp	r0, #0
    d864:	str	r0, [r4, #12]
    d868:	beq	f21c <gen_wlanhostop+0x2228>
    d86c:	mov	r1, #0
    d870:	mov	r2, r6
    d874:	add	r4, r4, #8
    d878:	bl	e58 <memset@plt>
    d87c:	cmp	r6, #207	; 0xcf
    d880:	str	r6, [r4]
    d884:	bls	f21c <gen_wlanhostop+0x2228>
    d888:	sub	r0, r6, #208	; 0xd0
    d88c:	mov	r2, #16
    d890:	str	r0, [r4]
    d894:	ldr	r1, [r4, #4]
    d898:	add	r7, r1, r0
    d89c:	mov	r1, #4
    d8a0:	mov	r0, #21
    d8a4:	str	r1, [r7, #20]
    d8a8:	str	r5, [r7, #4]
    d8ac:	str	r0, [r7, #8]
    d8b0:	mov	r1, #0
    d8b4:	ldr	r0, [r7, #44]	; 0x2c
    d8b8:	clz	r0, r0
    d8bc:	lsr	r0, r0, #5
    d8c0:	str	r0, [r7, #44]	; 0x2c
    d8c4:	mov	r0, #1
    d8c8:	str	r7, [r7, #96]	; 0x60
    d8cc:	bl	17970 <gen_load_a>
    d8d0:	mov	r8, r0
    d8d4:	ldr	r0, [pc, #4060]	; e8b8 <gen_wlanhostop+0x18c4>
    d8d8:	mov	r4, r9
    d8dc:	ldr	r0, [pc, r0]
    d8e0:	ldr	r6, [r4, r0, lsl #3]!
    d8e4:	cmp	r6, #19
    d8e8:	bhi	dac0 <gen_wlanhostop+0xacc>
    d8ec:	ldr	r1, [pc, #4040]	; e8bc <gen_wlanhostop+0x18c8>
    d8f0:	add	r5, r0, #1
    d8f4:	cmp	r0, #15
    d8f8:	add	r1, pc, r1
    d8fc:	str	r5, [r1]
    d900:	bge	f21c <gen_wlanhostop+0x2228>
    d904:	mov	r0, #1024	; 0x400
    d908:	lsl	r6, r0, r5
    d90c:	mov	r0, r6
    d910:	bl	dec <malloc@plt>
    d914:	cmp	r0, #0
    d918:	str	r0, [r4, #12]
    d91c:	beq	f21c <gen_wlanhostop+0x2228>
    d920:	mov	r1, #0
    d924:	mov	r2, r6
    d928:	add	r4, r4, #8
    d92c:	bl	e58 <memset@plt>
    d930:	cmp	r6, #19
    d934:	str	r6, [r4]
    d938:	bhi	dac4 <gen_wlanhostop+0xad0>
    d93c:	b	f21c <gen_wlanhostop+0x2228>
    d940:	mov	r7, r0
    d944:	sub	r1, r6, #20
    d948:	mov	r2, #84	; 0x54
    d94c:	str	r1, [r4]
    d950:	ldr	r0, [r4, #4]
    d954:	str	r2, [r0, r1]!
    d958:	mov	r1, #3
    d95c:	mov	r2, r8
    d960:	str	r1, [r0, #12]
    d964:	mov	r1, r2
    d968:	ldr	r2, [r2, #16]
    d96c:	cmp	r2, #0
    d970:	bne	d964 <gen_wlanhostop+0x970>
    d974:	str	r0, [r1, #16]
    d978:	ldr	r6, [r5, r7, lsl #3]!
    d97c:	cmp	r6, #207	; 0xcf
    d980:	bhi	d9d4 <gen_wlanhostop+0x9e0>
    d984:	ldr	r1, [pc, #4068]	; e970 <gen_wlanhostop+0x197c>
    d988:	add	r0, r7, #1
    d98c:	cmp	r7, #15
    d990:	add	r1, pc, r1
    d994:	str	r0, [r1]
    d998:	bge	f21c <gen_wlanhostop+0x2228>
    d99c:	mov	r1, #1024	; 0x400
    d9a0:	lsl	r6, r1, r0
    d9a4:	mov	r0, r6
    d9a8:	bl	dec <malloc@plt>
    d9ac:	cmp	r0, #0
    d9b0:	str	r0, [r5, #12]
    d9b4:	beq	f21c <gen_wlanhostop+0x2228>
    d9b8:	mov	r1, #0
    d9bc:	mov	r2, r6
    d9c0:	add	r5, r5, #8
    d9c4:	bl	e58 <memset@plt>
    d9c8:	cmp	r6, #207	; 0xcf
    d9cc:	str	r6, [r5]
    d9d0:	bls	f21c <gen_wlanhostop+0x2228>
    d9d4:	sub	r0, r6, #208	; 0xd0
    d9d8:	mov	r2, #6
    d9dc:	mov	r3, r9
    d9e0:	str	r0, [r5]
    d9e4:	ldr	r1, [r5, #4]
    d9e8:	add	r4, r1, r0
    d9ec:	mov	r1, #3
    d9f0:	mov	r0, #21
    d9f4:	str	r1, [r4, #20]
    d9f8:	str	r8, [r4, #4]
    d9fc:	str	r0, [r4, #8]
    da00:	mov	r0, #1
    da04:	mov	r1, #24
    da08:	str	r4, [r4, #96]	; 0x60
    da0c:	bl	1c314 <gen_bcmp>
    da10:	mov	r5, r0
    da14:	cmp	r4, #0
    da18:	beq	da4c <gen_wlanhostop+0xa58>
    da1c:	ldr	r0, [r5, #96]	; 0x60
    da20:	mov	r1, r4
    da24:	ldr	r2, [r1, #44]	; 0x2c
    da28:	add	r3, r1, #84	; 0x54
    da2c:	cmp	r2, #0
    da30:	mov	r2, #84	; 0x54
    da34:	movweq	r2, #60	; 0x3c
    da38:	addeq	r3, r1, #60	; 0x3c
    da3c:	ldr	r1, [r1, r2]
    da40:	str	r0, [r3]
    da44:	cmp	r1, #0
    da48:	bne	da24 <gen_wlanhostop+0xa30>
    da4c:	ldr	r0, [r4, #44]	; 0x2c
    da50:	cmp	r5, #0
    da54:	clz	r0, r0
    da58:	lsr	r0, r0, #5
    da5c:	str	r0, [r4, #44]	; 0x2c
    da60:	ldr	r1, [r5, #44]	; 0x2c
    da64:	clz	r0, r1
    da68:	lsr	r0, r0, #5
    da6c:	str	r0, [r5, #44]	; 0x2c
    da70:	str	r5, [sp, #8]
    da74:	beq	f1f0 <gen_wlanhostop+0x21fc>
    da78:	cmp	r1, #0
    da7c:	mov	r1, #60	; 0x3c
    da80:	add	r0, r5, #60	; 0x3c
    da84:	movweq	r1, #84	; 0x54
    da88:	addeq	r0, r5, #84	; 0x54
    da8c:	ldr	r1, [r5, r1]
    da90:	cmp	r1, #0
    da94:	beq	f1f4 <gen_wlanhostop+0x2200>
    da98:	ldr	r2, [r1, #44]	; 0x2c
    da9c:	add	r0, r1, #84	; 0x54
    daa0:	cmp	r2, #0
    daa4:	mov	r2, #84	; 0x54
    daa8:	movweq	r2, #60	; 0x3c
    daac:	addeq	r0, r1, #60	; 0x3c
    dab0:	ldr	r1, [r1, r2]
    dab4:	cmp	r1, #0
    dab8:	bne	da98 <gen_wlanhostop+0xaa4>
    dabc:	b	f1f4 <gen_wlanhostop+0x2200>
    dac0:	mov	r5, r0
    dac4:	sub	r1, r6, #20
    dac8:	mov	r2, #84	; 0x54
    dacc:	str	r1, [r4]
    dad0:	ldr	r0, [r4, #4]
    dad4:	str	r2, [r0, r1]!
    dad8:	mov	r1, #240	; 0xf0
    dadc:	mov	r2, r8
    dae0:	str	r1, [r0, #12]
    dae4:	mov	r1, r2
    dae8:	ldr	r2, [r2, #16]
    daec:	cmp	r2, #0
    daf0:	bne	dae4 <gen_wlanhostop+0xaf0>
    daf4:	str	r0, [r1, #16]
    daf8:	mov	r4, r9
    dafc:	ldr	r6, [r4, r5, lsl #3]!
    db00:	cmp	r6, #207	; 0xcf
    db04:	bhi	db58 <gen_wlanhostop+0xb64>
    db08:	ldr	r1, [pc, #3756]	; e9bc <gen_wlanhostop+0x19c8>
    db0c:	add	r0, r5, #1
    db10:	cmp	r5, #15
    db14:	add	r1, pc, r1
    db18:	str	r0, [r1]
    db1c:	bge	f21c <gen_wlanhostop+0x2228>
    db20:	mov	r1, #1024	; 0x400
    db24:	lsl	r6, r1, r0
    db28:	mov	r0, r6
    db2c:	bl	dec <malloc@plt>
    db30:	cmp	r0, #0
    db34:	str	r0, [r4, #12]
    db38:	beq	f21c <gen_wlanhostop+0x2228>
    db3c:	mov	r1, #0
    db40:	mov	r2, r6
    db44:	add	r4, r4, #8
    db48:	bl	e58 <memset@plt>
    db4c:	cmp	r6, #207	; 0xcf
    db50:	str	r6, [r4]
    db54:	bls	f21c <gen_wlanhostop+0x2228>
    db58:	sub	r0, r6, #208	; 0xd0
    db5c:	mov	r2, #16
    db60:	str	r0, [r4]
    db64:	ldr	r1, [r4, #4]
    db68:	add	r5, r1, r0
    db6c:	mov	r1, #192	; 0xc0
    db70:	mov	r0, #21
    db74:	str	r1, [r5, #20]
    db78:	str	r8, [r5, #4]
    db7c:	str	r0, [r5, #8]
    db80:	mov	r1, #0
    db84:	ldr	r0, [r5, #44]	; 0x2c
    db88:	clz	r0, r0
    db8c:	lsr	r0, r0, #5
    db90:	str	r0, [r5, #44]	; 0x2c
    db94:	mov	r0, #1
    db98:	str	r5, [r5, #96]	; 0x60
    db9c:	bl	17970 <gen_load_a>
    dba0:	mov	r8, r0
    dba4:	ldr	r0, [pc, #3952]	; eb1c <gen_wlanhostop+0x1b28>
    dba8:	mov	sl, r9
    dbac:	ldr	r0, [pc, r0]
    dbb0:	ldr	r6, [sl, r0, lsl #3]!
    dbb4:	cmp	r6, #19
    dbb8:	bhi	dc10 <gen_wlanhostop+0xc1c>
    dbbc:	ldr	r1, [pc, #3932]	; eb20 <gen_wlanhostop+0x1b2c>
    dbc0:	add	r4, r0, #1
    dbc4:	cmp	r0, #15
    dbc8:	add	r1, pc, r1
    dbcc:	str	r4, [r1]
    dbd0:	bge	f21c <gen_wlanhostop+0x2228>
    dbd4:	mov	r0, #1024	; 0x400
    dbd8:	lsl	r6, r0, r4
    dbdc:	mov	r0, r6
    dbe0:	bl	dec <malloc@plt>
    dbe4:	cmp	r0, #0
    dbe8:	str	r0, [sl, #12]
    dbec:	beq	f21c <gen_wlanhostop+0x2228>
    dbf0:	mov	r1, #0
    dbf4:	mov	r2, r6
    dbf8:	add	sl, sl, #8
    dbfc:	bl	e58 <memset@plt>
    dc00:	cmp	r6, #19
    dc04:	str	r6, [sl]
    dc08:	bhi	dc14 <gen_wlanhostop+0xc20>
    dc0c:	b	f21c <gen_wlanhostop+0x2228>
    dc10:	mov	r4, r0
    dc14:	sub	r1, r6, #20
    dc18:	mov	r2, #84	; 0x54
    dc1c:	str	r1, [sl]
    dc20:	ldr	r0, [sl, #4]
    dc24:	str	r2, [r0, r1]!
    dc28:	mov	r1, #240	; 0xf0
    dc2c:	mov	r2, r8
    dc30:	str	r1, [r0, #12]
    dc34:	mov	r1, r2
    dc38:	ldr	r2, [r2, #16]
    dc3c:	cmp	r2, #0
    dc40:	bne	dc34 <gen_wlanhostop+0xc40>
    dc44:	str	r0, [r1, #16]
    dc48:	ldr	r6, [r9, r4, lsl #3]!
    dc4c:	cmp	r6, #207	; 0xcf
    dc50:	bhi	dca4 <gen_wlanhostop+0xcb0>
    dc54:	ldr	r1, [pc, #3784]	; eb24 <gen_wlanhostop+0x1b30>
    dc58:	add	r0, r4, #1
    dc5c:	cmp	r4, #15
    dc60:	add	r1, pc, r1
    dc64:	str	r0, [r1]
    dc68:	bge	f21c <gen_wlanhostop+0x2228>
    dc6c:	mov	r1, #1024	; 0x400
    dc70:	lsl	r6, r1, r0
    dc74:	mov	r0, r6
    dc78:	bl	dec <malloc@plt>
    dc7c:	cmp	r0, #0
    dc80:	str	r0, [r9, #12]
    dc84:	beq	f21c <gen_wlanhostop+0x2228>
    dc88:	mov	r1, #0
    dc8c:	mov	r2, r6
    dc90:	add	r9, r9, #8
    dc94:	bl	e58 <memset@plt>
    dc98:	cmp	r6, #207	; 0xcf
    dc9c:	str	r6, [r9]
    dca0:	bls	f21c <gen_wlanhostop+0x2228>
    dca4:	sub	r0, r6, #208	; 0xd0
    dca8:	cmp	r5, #0
    dcac:	str	r0, [r9]
    dcb0:	ldr	r1, [r9, #4]
    dcb4:	add	r4, r1, r0
    dcb8:	mov	r1, #208	; 0xd0
    dcbc:	mov	r0, #21
    dcc0:	str	r1, [r4, #20]
    dcc4:	str	r8, [r4, #4]
    dcc8:	str	r0, [r4, #8]
    dccc:	ldr	r0, [r4, #44]	; 0x2c
    dcd0:	clz	r0, r0
    dcd4:	lsr	r0, r0, #5
    dcd8:	str	r0, [r4, #44]	; 0x2c
    dcdc:	str	r4, [r4, #96]	; 0x60
    dce0:	beq	dd10 <gen_wlanhostop+0xd1c>
    dce4:	mov	r0, r5
    dce8:	ldr	r1, [r0, #44]	; 0x2c
    dcec:	add	r2, r0, #84	; 0x54
    dcf0:	cmp	r1, #0
    dcf4:	mov	r1, #84	; 0x54
    dcf8:	movweq	r1, #60	; 0x3c
    dcfc:	addeq	r2, r0, #60	; 0x3c
    dd00:	ldr	r0, [r0, r1]
    dd04:	str	r4, [r2]
    dd08:	cmp	r0, #0
    dd0c:	bne	dce8 <gen_wlanhostop+0xcf4>
    dd10:	ldr	r0, [r5, #44]	; 0x2c
    dd14:	ldr	r3, [sp, #4]
    dd18:	cmp	r4, #0
    dd1c:	clz	r0, r0
    dd20:	lsr	r0, r0, #5
    dd24:	str	r0, [r5, #44]	; 0x2c
    dd28:	ldr	r0, [r4, #44]	; 0x2c
    dd2c:	clz	r1, r0
    dd30:	lsr	r1, r1, #5
    dd34:	str	r1, [r4, #44]	; 0x2c
    dd38:	str	r4, [sp, #8]
    dd3c:	beq	f06c <gen_wlanhostop+0x2078>
    dd40:	cmp	r0, #0
    dd44:	mov	r2, #60	; 0x3c
    dd48:	mov	r1, r4
    dd4c:	movweq	r2, #84	; 0x54
    dd50:	ldr	r0, [r1, r2]!
    dd54:	cmp	r0, #0
    dd58:	beq	f070 <gen_wlanhostop+0x207c>
    dd5c:	ldr	r2, [r0, #44]	; 0x2c
    dd60:	add	r1, r0, #84	; 0x54
    dd64:	cmp	r2, #0
    dd68:	mov	r2, #84	; 0x54
    dd6c:	movweq	r2, #60	; 0x3c
    dd70:	addeq	r1, r0, #60	; 0x3c
    dd74:	ldr	r0, [r0, r2]
    dd78:	cmp	r0, #0
    dd7c:	bne	dd5c <gen_wlanhostop+0xd68>
    dd80:	b	f070 <gen_wlanhostop+0x207c>
    dd84:	add	r0, sp, #8
    dd88:	str	r6, [r0]
    dd8c:	ldr	r0, [r5, #44]	; 0x2c
    dd90:	clz	r0, r0
    dd94:	lsr	r0, r0, #5
    dd98:	str	r0, [r5, #44]	; 0x2c
    dd9c:	ldr	r0, [r6, #96]	; 0x60
    dda0:	b	f20c <gen_wlanhostop+0x2218>
    dda4:	add	r0, sp, #8
    dda8:	str	r4, [r0]
    ddac:	mov	r1, #1
    ddb0:	mov	r2, #16
    ddb4:	mov	sl, #1
    ddb8:	ldr	r0, [r5, #44]	; 0x2c
    ddbc:	clz	r0, r0
    ddc0:	lsr	r0, r0, #5
    ddc4:	str	r0, [r5, #44]	; 0x2c
    ddc8:	ldr	r0, [r4, #96]	; 0x60
    ddcc:	str	r0, [r5, #96]	; 0x60
    ddd0:	mov	r0, #1
    ddd4:	bl	17970 <gen_load_a>
    ddd8:	mov	r6, r0
    dddc:	ldr	r0, [pc, #3756]	; ec90 <gen_wlanhostop+0x1c9c>
    dde0:	mov	r4, r8
    dde4:	ldr	r0, [pc, r0]
    dde8:	ldr	r7, [r4, r0, lsl #3]!
    ddec:	cmp	r7, #207	; 0xcf
    ddf0:	bhi	de44 <gen_wlanhostop+0xe50>
    ddf4:	ldr	r2, [pc, #3736]	; ec94 <gen_wlanhostop+0x1ca0>
    ddf8:	add	r1, r0, #1
    ddfc:	cmp	r0, #15
    de00:	add	r2, pc, r2
    de04:	str	r1, [r2]
    de08:	bge	f21c <gen_wlanhostop+0x2228>
    de0c:	mov	r0, #1024	; 0x400
    de10:	lsl	r7, r0, r1
    de14:	mov	r0, r7
    de18:	bl	dec <malloc@plt>
    de1c:	cmp	r0, #0
    de20:	str	r0, [r4, #12]
    de24:	beq	f21c <gen_wlanhostop+0x2228>
    de28:	mov	r1, #0
    de2c:	mov	r2, r7
    de30:	add	r4, r4, #8
    de34:	bl	e58 <memset@plt>
    de38:	cmp	r7, #207	; 0xcf
    de3c:	str	r7, [r4]
    de40:	bls	f21c <gen_wlanhostop+0x2228>
    de44:	sub	r0, r7, #208	; 0xd0
    de48:	mov	r2, #6
    de4c:	mov	r3, r9
    de50:	str	r0, [r4]
    de54:	ldr	r1, [r4, #4]
    de58:	add	r4, r1, r0
    de5c:	mov	r0, #69	; 0x45
    de60:	mov	r1, #16
    de64:	str	sl, [r4, #20]
    de68:	str	r6, [r4, #4]
    de6c:	str	r0, [r4, #8]
    de70:	ldr	r0, [r4, #44]	; 0x2c
    de74:	clz	r0, r0
    de78:	lsr	r0, r0, #5
    de7c:	str	r0, [r4, #44]	; 0x2c
    de80:	mov	r0, #1
    de84:	str	r4, [r4, #96]	; 0x60
    de88:	bl	1c314 <gen_bcmp>
    de8c:	cmp	r4, #0
    de90:	beq	dec4 <gen_wlanhostop+0xed0>
    de94:	ldr	r1, [r0, #96]	; 0x60
    de98:	mov	r2, r4
    de9c:	ldr	r3, [r2, #44]	; 0x2c
    dea0:	add	r7, r2, #84	; 0x54
    dea4:	cmp	r3, #0
    dea8:	mov	r3, #84	; 0x54
    deac:	movweq	r3, #60	; 0x3c
    deb0:	addeq	r7, r2, #60	; 0x3c
    deb4:	ldr	r2, [r2, r3]
    deb8:	str	r1, [r7]
    debc:	cmp	r2, #0
    dec0:	bne	de9c <gen_wlanhostop+0xea8>
    dec4:	ldr	r1, [r4, #44]	; 0x2c
    dec8:	cmp	r0, #0
    decc:	clz	r1, r1
    ded0:	lsr	r1, r1, #5
    ded4:	str	r1, [r4, #44]	; 0x2c
    ded8:	ldr	r2, [r0, #44]	; 0x2c
    dedc:	clz	r1, r2
    dee0:	lsr	r1, r1, #5
    dee4:	str	r1, [r0, #44]	; 0x2c
    dee8:	str	r0, [sp, #8]
    deec:	beq	e0cc <gen_wlanhostop+0x10d8>
    def0:	cmp	r2, #0
    def4:	mov	r2, #60	; 0x3c
    def8:	add	r1, r0, #60	; 0x3c
    defc:	movweq	r2, #84	; 0x54
    df00:	addeq	r1, r0, #84	; 0x54
    df04:	ldr	r2, [r0, r2]
    df08:	cmp	r2, #0
    df0c:	beq	e0d0 <gen_wlanhostop+0x10dc>
    df10:	ldr	r3, [r2, #44]	; 0x2c
    df14:	add	r1, r2, #84	; 0x54
    df18:	cmp	r3, #0
    df1c:	mov	r3, #84	; 0x54
    df20:	movweq	r3, #60	; 0x3c
    df24:	addeq	r1, r2, #60	; 0x3c
    df28:	ldr	r2, [r2, r3]
    df2c:	cmp	r2, #0
    df30:	bne	df10 <gen_wlanhostop+0xf1c>
    df34:	b	e0d0 <gen_wlanhostop+0x10dc>
    df38:	add	r0, sp, #8
    df3c:	str	r4, [r0]
    df40:	mov	r1, #1
    df44:	mov	r2, #16
    df48:	mov	sl, #1
    df4c:	ldr	r0, [r5, #44]	; 0x2c
    df50:	clz	r0, r0
    df54:	lsr	r0, r0, #5
    df58:	str	r0, [r5, #44]	; 0x2c
    df5c:	ldr	r0, [r4, #96]	; 0x60
    df60:	str	r0, [r5, #96]	; 0x60
    df64:	mov	r0, #1
    df68:	bl	17970 <gen_load_a>
    df6c:	mov	r6, r0
    df70:	ldr	r0, [pc, #3940]	; eedc <gen_wlanhostop+0x1ee8>
    df74:	mov	r4, r8
    df78:	ldr	r0, [pc, r0]
    df7c:	ldr	r7, [r4, r0, lsl #3]!
    df80:	cmp	r7, #207	; 0xcf
    df84:	bhi	dfd8 <gen_wlanhostop+0xfe4>
    df88:	ldr	r2, [pc, #3920]	; eee0 <gen_wlanhostop+0x1eec>
    df8c:	add	r1, r0, #1
    df90:	cmp	r0, #15
    df94:	add	r2, pc, r2
    df98:	str	r1, [r2]
    df9c:	bge	f21c <gen_wlanhostop+0x2228>
    dfa0:	mov	r0, #1024	; 0x400
    dfa4:	lsl	r7, r0, r1
    dfa8:	mov	r0, r7
    dfac:	bl	dec <malloc@plt>
    dfb0:	cmp	r0, #0
    dfb4:	str	r0, [r4, #12]
    dfb8:	beq	f21c <gen_wlanhostop+0x2228>
    dfbc:	mov	r1, #0
    dfc0:	mov	r2, r7
    dfc4:	add	r4, r4, #8
    dfc8:	bl	e58 <memset@plt>
    dfcc:	cmp	r7, #207	; 0xcf
    dfd0:	str	r7, [r4]
    dfd4:	bls	f21c <gen_wlanhostop+0x2228>
    dfd8:	sub	r0, r7, #208	; 0xd0
    dfdc:	mov	r2, #6
    dfe0:	mov	r3, r9
    dfe4:	str	r0, [r4]
    dfe8:	ldr	r1, [r4, #4]
    dfec:	add	r4, r1, r0
    dff0:	mov	r0, #69	; 0x45
    dff4:	mov	r1, #4
    dff8:	str	sl, [r4, #20]
    dffc:	str	r6, [r4, #4]
    e000:	str	r0, [r4, #8]
    e004:	ldr	r0, [r4, #44]	; 0x2c
    e008:	clz	r0, r0
    e00c:	lsr	r0, r0, #5
    e010:	str	r0, [r4, #44]	; 0x2c
    e014:	mov	r0, #1
    e018:	str	r4, [r4, #96]	; 0x60
    e01c:	bl	1c314 <gen_bcmp>
    e020:	cmp	r4, #0
    e024:	beq	e058 <gen_wlanhostop+0x1064>
    e028:	ldr	r1, [r0, #96]	; 0x60
    e02c:	mov	r2, r4
    e030:	ldr	r3, [r2, #44]	; 0x2c
    e034:	add	r7, r2, #84	; 0x54
    e038:	cmp	r3, #0
    e03c:	mov	r3, #84	; 0x54
    e040:	movweq	r3, #60	; 0x3c
    e044:	addeq	r7, r2, #60	; 0x3c
    e048:	ldr	r2, [r2, r3]
    e04c:	str	r1, [r7]
    e050:	cmp	r2, #0
    e054:	bne	e030 <gen_wlanhostop+0x103c>
    e058:	ldr	r1, [r4, #44]	; 0x2c
    e05c:	cmp	r0, #0
    e060:	clz	r1, r1
    e064:	lsr	r1, r1, #5
    e068:	str	r1, [r4, #44]	; 0x2c
    e06c:	ldr	r2, [r0, #44]	; 0x2c
    e070:	clz	r1, r2
    e074:	lsr	r1, r1, #5
    e078:	str	r1, [r0, #44]	; 0x2c
    e07c:	str	r0, [sp, #8]
    e080:	beq	e184 <gen_wlanhostop+0x1190>
    e084:	cmp	r2, #0
    e088:	mov	r2, #60	; 0x3c
    e08c:	add	r1, r0, #60	; 0x3c
    e090:	movweq	r2, #84	; 0x54
    e094:	addeq	r1, r0, #84	; 0x54
    e098:	ldr	r2, [r0, r2]
    e09c:	cmp	r2, #0
    e0a0:	beq	e188 <gen_wlanhostop+0x1194>
    e0a4:	ldr	r3, [r2, #44]	; 0x2c
    e0a8:	add	r1, r2, #84	; 0x54
    e0ac:	cmp	r3, #0
    e0b0:	mov	r3, #84	; 0x54
    e0b4:	movweq	r3, #60	; 0x3c
    e0b8:	addeq	r1, r2, #60	; 0x3c
    e0bc:	ldr	r2, [r2, r3]
    e0c0:	cmp	r2, #0
    e0c4:	bne	e0a4 <gen_wlanhostop+0x10b0>
    e0c8:	b	e188 <gen_wlanhostop+0x1194>
    e0cc:	add	r1, sp, #8
    e0d0:	str	r4, [r1]
    e0d4:	ldr	r1, [r0, #44]	; 0x2c
    e0d8:	clz	r2, r1
    e0dc:	cmp	r1, #0
    e0e0:	lsr	r2, r2, #5
    e0e4:	movwne	r1, #1
    e0e8:	cmp	r0, #0
    e0ec:	str	r2, [r0, #44]	; 0x2c
    e0f0:	ldr	r2, [r4, #96]	; 0x60
    e0f4:	str	r1, [r0, #44]	; 0x2c
    e0f8:	str	r2, [r0, #96]	; 0x60
    e0fc:	beq	e138 <gen_wlanhostop+0x1144>
    e100:	ldr	r2, [r5, #96]	; 0x60
    e104:	mov	r3, r0
    e108:	cmp	r1, #0
    e10c:	mov	r1, #84	; 0x54
    e110:	add	r7, r3, #84	; 0x54
    e114:	movweq	r1, #60	; 0x3c
    e118:	addeq	r7, r3, #60	; 0x3c
    e11c:	ldr	r3, [r3, r1]
    e120:	str	r2, [r7]
    e124:	cmp	r3, #0
    e128:	beq	e134 <gen_wlanhostop+0x1140>
    e12c:	ldr	r1, [r3, #44]	; 0x2c
    e130:	b	e108 <gen_wlanhostop+0x1114>
    e134:	ldr	r1, [r0, #44]	; 0x2c
    e138:	clz	r1, r1
    e13c:	cmp	r5, #0
    e140:	lsr	r1, r1, #5
    e144:	str	r1, [r0, #44]	; 0x2c
    e148:	str	r5, [sp, #8]
    e14c:	beq	e244 <gen_wlanhostop+0x1250>
    e150:	mov	r2, r5
    e154:	ldr	r3, [r2, #44]	; 0x2c
    e158:	add	r1, r2, #84	; 0x54
    e15c:	cmp	r3, #0
    e160:	mov	r3, #84	; 0x54
    e164:	movweq	r3, #60	; 0x3c
    e168:	addeq	r1, r2, #60	; 0x3c
    e16c:	ldr	r2, [r2, r3]
    e170:	cmp	r2, #0
    e174:	bne	e154 <gen_wlanhostop+0x1160>
    e178:	b	e248 <gen_wlanhostop+0x1254>
    e17c:	.word	0x0003a324
    e180:	.word	0x0003a29c
    e184:	add	r1, sp, #8
    e188:	str	r4, [r1]
    e18c:	ldr	r1, [r0, #44]	; 0x2c
    e190:	clz	r2, r1
    e194:	cmp	r1, #0
    e198:	lsr	r2, r2, #5
    e19c:	movwne	r1, #1
    e1a0:	cmp	r0, #0
    e1a4:	str	r2, [r0, #44]	; 0x2c
    e1a8:	ldr	r2, [r4, #96]	; 0x60
    e1ac:	str	r1, [r0, #44]	; 0x2c
    e1b0:	str	r2, [r0, #96]	; 0x60
    e1b4:	beq	e1f4 <gen_wlanhostop+0x1200>
    e1b8:	ldr	r2, [r5, #96]	; 0x60
    e1bc:	mov	r3, r0
    e1c0:	cmp	r1, #0
    e1c4:	mov	r1, #84	; 0x54
    e1c8:	add	r7, r3, #84	; 0x54
    e1cc:	movweq	r1, #60	; 0x3c
    e1d0:	addeq	r7, r3, #60	; 0x3c
    e1d4:	ldr	r3, [r3, r1]
    e1d8:	str	r2, [r7]
    e1dc:	cmp	r3, #0
    e1e0:	beq	e1f0 <gen_wlanhostop+0x11fc>
    e1e4:	ldr	r1, [r3, #44]	; 0x2c
    e1e8:	b	e1c0 <gen_wlanhostop+0x11cc>
    e1ec:	.word	0x0003a2fc
    e1f0:	ldr	r1, [r0, #44]	; 0x2c
    e1f4:	clz	r1, r1
    e1f8:	cmp	r5, #0
    e1fc:	lsr	r1, r1, #5
    e200:	str	r1, [r0, #44]	; 0x2c
    e204:	str	r5, [sp, #8]
    e208:	beq	e3ac <gen_wlanhostop+0x13b8>
    e20c:	mov	r2, r5
    e210:	ldr	r3, [r2, #44]	; 0x2c
    e214:	add	r1, r2, #84	; 0x54
    e218:	cmp	r3, #0
    e21c:	mov	r3, #84	; 0x54
    e220:	movweq	r3, #60	; 0x3c
    e224:	addeq	r1, r2, #60	; 0x3c
    e228:	ldr	r2, [r2, r3]
    e22c:	cmp	r2, #0
    e230:	bne	e210 <gen_wlanhostop+0x121c>
    e234:	b	e3b0 <gen_wlanhostop+0x13bc>
    e238:	.word	0x0003a1b4
    e23c:	.word	0x0003a12c
    e240:	.word	0x0003a18c
    e244:	add	r1, sp, #8
    e248:	str	r0, [r1]
    e24c:	mov	r1, #1
    e250:	mov	r2, #16
    e254:	ldr	r0, [r0, #96]	; 0x60
    e258:	str	r0, [r5, #96]	; 0x60
    e25c:	mov	r0, #1
    e260:	bl	17970 <gen_load_a>
    e264:	mov	r6, r0
    e268:	ldr	r0, [pc, #4028]	; f22c <gen_wlanhostop+0x2238>
    e26c:	mov	r4, r8
    e270:	ldr	r0, [pc, r0]
    e274:	ldr	r7, [r4, r0, lsl #3]!
    e278:	cmp	r7, #207	; 0xcf
    e27c:	bhi	e2d0 <gen_wlanhostop+0x12dc>
    e280:	ldr	r2, [pc, #4008]	; f230 <gen_wlanhostop+0x223c>
    e284:	add	r1, r0, #1
    e288:	cmp	r0, #15
    e28c:	add	r2, pc, r2
    e290:	str	r1, [r2]
    e294:	bge	f21c <gen_wlanhostop+0x2228>
    e298:	mov	r0, #1024	; 0x400
    e29c:	lsl	r7, r0, r1
    e2a0:	mov	r0, r7
    e2a4:	bl	dec <malloc@plt>
    e2a8:	cmp	r0, #0
    e2ac:	str	r0, [r4, #12]
    e2b0:	beq	f21c <gen_wlanhostop+0x2228>
    e2b4:	mov	r1, #0
    e2b8:	mov	r2, r7
    e2bc:	add	r4, r4, #8
    e2c0:	bl	e58 <memset@plt>
    e2c4:	cmp	r7, #207	; 0xcf
    e2c8:	str	r7, [r4]
    e2cc:	bls	f21c <gen_wlanhostop+0x2228>
    e2d0:	sub	r0, r7, #208	; 0xd0
    e2d4:	mov	r2, #2
    e2d8:	str	r0, [r4]
    e2dc:	ldr	r1, [r4, #4]
    e2e0:	adds	r0, r1, r0
    e2e4:	mov	r1, #69	; 0x45
    e2e8:	str	r2, [r0, #20]
    e2ec:	str	r6, [r0, #4]
    e2f0:	str	r1, [r0, #8]
    e2f4:	str	r0, [r0, #96]	; 0x60
    e2f8:	beq	e32c <gen_wlanhostop+0x1338>
    e2fc:	ldr	r1, [r5, #96]	; 0x60
    e300:	mov	r2, r0
    e304:	ldr	r3, [r2, #44]	; 0x2c
    e308:	add	r7, r2, #84	; 0x54
    e30c:	cmp	r3, #0
    e310:	mov	r3, #84	; 0x54
    e314:	movweq	r3, #60	; 0x3c
    e318:	addeq	r7, r2, #60	; 0x3c
    e31c:	ldr	r2, [r2, r3]
    e320:	str	r1, [r7]
    e324:	cmp	r2, #0
    e328:	bne	e304 <gen_wlanhostop+0x1310>
    e32c:	ldr	r1, [r0, #44]	; 0x2c
    e330:	cmp	r5, #0
    e334:	clz	r1, r1
    e338:	lsr	r1, r1, #5
    e33c:	str	r1, [r0, #44]	; 0x2c
    e340:	ldr	r2, [r5, #44]	; 0x2c
    e344:	clz	r1, r2
    e348:	lsr	r1, r1, #5
    e34c:	str	r1, [r5, #44]	; 0x2c
    e350:	str	r5, [sp, #8]
    e354:	beq	e524 <gen_wlanhostop+0x1530>
    e358:	cmp	r2, #0
    e35c:	mov	r2, #60	; 0x3c
    e360:	add	r1, r5, #60	; 0x3c
    e364:	movweq	r2, #84	; 0x54
    e368:	addeq	r1, r5, #84	; 0x54
    e36c:	ldr	r2, [r5, r2]
    e370:	cmp	r2, #0
    e374:	beq	e528 <gen_wlanhostop+0x1534>
    e378:	ldr	r3, [r2, #44]	; 0x2c
    e37c:	add	r1, r2, #84	; 0x54
    e380:	cmp	r3, #0
    e384:	mov	r3, #84	; 0x54
    e388:	movweq	r3, #60	; 0x3c
    e38c:	addeq	r1, r2, #60	; 0x3c
    e390:	ldr	r2, [r2, r3]
    e394:	cmp	r2, #0
    e398:	bne	e378 <gen_wlanhostop+0x1384>
    e39c:	b	e528 <gen_wlanhostop+0x1534>
    e3a0:	.word	0x0003a048
    e3a4:	.word	0x00039fc0
    e3a8:	.word	0x0003a020
    e3ac:	add	r1, sp, #8
    e3b0:	str	r0, [r1]
    e3b4:	mov	r1, #0
    e3b8:	mov	r2, #16
    e3bc:	ldr	r0, [r0, #96]	; 0x60
    e3c0:	str	r0, [r5, #96]	; 0x60
    e3c4:	mov	r0, #1
    e3c8:	bl	17970 <gen_load_a>
    e3cc:	mov	r6, r0
    e3d0:	ldr	r0, [pc, #3708]	; f254 <gen_wlanhostop+0x2260>
    e3d4:	mov	r4, r8
    e3d8:	ldr	r0, [pc, r0]
    e3dc:	ldr	r7, [r4, r0, lsl #3]!
    e3e0:	cmp	r7, #207	; 0xcf
    e3e4:	bhi	e438 <gen_wlanhostop+0x1444>
    e3e8:	ldr	r2, [pc, #3688]	; f258 <gen_wlanhostop+0x2264>
    e3ec:	add	r1, r0, #1
    e3f0:	cmp	r0, #15
    e3f4:	add	r2, pc, r2
    e3f8:	str	r1, [r2]
    e3fc:	bge	f21c <gen_wlanhostop+0x2228>
    e400:	mov	r0, #1024	; 0x400
    e404:	lsl	r7, r0, r1
    e408:	mov	r0, r7
    e40c:	bl	dec <malloc@plt>
    e410:	cmp	r0, #0
    e414:	str	r0, [r4, #12]
    e418:	beq	f21c <gen_wlanhostop+0x2228>
    e41c:	mov	r1, #0
    e420:	mov	r2, r7
    e424:	add	r4, r4, #8
    e428:	bl	e58 <memset@plt>
    e42c:	cmp	r7, #207	; 0xcf
    e430:	str	r7, [r4]
    e434:	bls	f21c <gen_wlanhostop+0x2228>
    e438:	sub	r0, r7, #208	; 0xd0
    e43c:	mov	r2, #8
    e440:	str	r0, [r4]
    e444:	ldr	r1, [r4, #4]
    e448:	adds	r0, r1, r0
    e44c:	mov	r1, #69	; 0x45
    e450:	str	r2, [r0, #20]
    e454:	str	r6, [r0, #4]
    e458:	str	r1, [r0, #8]
    e45c:	str	r0, [r0, #96]	; 0x60
    e460:	beq	e494 <gen_wlanhostop+0x14a0>
    e464:	ldr	r1, [r5, #96]	; 0x60
    e468:	mov	r2, r0
    e46c:	ldr	r3, [r2, #44]	; 0x2c
    e470:	add	r7, r2, #84	; 0x54
    e474:	cmp	r3, #0
    e478:	mov	r3, #84	; 0x54
    e47c:	movweq	r3, #60	; 0x3c
    e480:	addeq	r7, r2, #60	; 0x3c
    e484:	ldr	r2, [r2, r3]
    e488:	str	r1, [r7]
    e48c:	cmp	r2, #0
    e490:	bne	e46c <gen_wlanhostop+0x1478>
    e494:	ldr	r1, [r0, #44]	; 0x2c
    e498:	cmp	r5, #0
    e49c:	clz	r1, r1
    e4a0:	lsr	r1, r1, #5
    e4a4:	str	r1, [r0, #44]	; 0x2c
    e4a8:	ldr	r2, [r5, #44]	; 0x2c
    e4ac:	clz	r1, r2
    e4b0:	lsr	r1, r1, #5
    e4b4:	str	r1, [r5, #44]	; 0x2c
    e4b8:	str	r5, [sp, #8]
    e4bc:	beq	e6bc <gen_wlanhostop+0x16c8>
    e4c0:	cmp	r2, #0
    e4c4:	mov	r2, #60	; 0x3c
    e4c8:	add	r1, r5, #60	; 0x3c
    e4cc:	movweq	r2, #84	; 0x54
    e4d0:	addeq	r1, r5, #84	; 0x54
    e4d4:	ldr	r2, [r5, r2]
    e4d8:	cmp	r2, #0
    e4dc:	beq	e6c0 <gen_wlanhostop+0x16cc>
    e4e0:	ldr	r3, [r2, #44]	; 0x2c
    e4e4:	add	r1, r2, #84	; 0x54
    e4e8:	cmp	r3, #0
    e4ec:	mov	r3, #84	; 0x54
    e4f0:	movweq	r3, #60	; 0x3c
    e4f4:	addeq	r1, r2, #60	; 0x3c
    e4f8:	ldr	r2, [r2, r3]
    e4fc:	cmp	r2, #0
    e500:	bne	e4e0 <gen_wlanhostop+0x14ec>
    e504:	b	e6c0 <gen_wlanhostop+0x16cc>
    e508:	.word	0x00039fa0
    e50c:	.word	0x00039f18
    e510:	.word	0x00039f78
    e514:	.word	0x00039f18
    e518:	.word	0x00039e90
    e51c:	.word	0x00039ef0
    e520:	.word	0x00039e4c
    e524:	add	r1, sp, #8
    e528:	str	r0, [r1]
    e52c:	mov	r2, #16
    e530:	ldr	r1, [r5, #44]	; 0x2c
    e534:	clz	r1, r1
    e538:	lsr	r1, r1, #5
    e53c:	str	r1, [r5, #44]	; 0x2c
    e540:	mov	r1, #1
    e544:	ldr	r0, [r0, #96]	; 0x60
    e548:	str	r0, [r5, #96]	; 0x60
    e54c:	mov	r0, #1
    e550:	bl	17970 <gen_load_a>
    e554:	mov	r6, r0
    e558:	ldr	r0, [pc, #3284]	; f234 <gen_wlanhostop+0x2240>
    e55c:	mov	r4, r8
    e560:	ldr	r0, [pc, r0]
    e564:	ldr	r7, [r4, r0, lsl #3]!
    e568:	cmp	r7, #207	; 0xcf
    e56c:	bhi	e5c0 <gen_wlanhostop+0x15cc>
    e570:	ldr	r2, [pc, #3264]	; f238 <gen_wlanhostop+0x2244>
    e574:	add	r1, r0, #1
    e578:	cmp	r0, #15
    e57c:	add	r2, pc, r2
    e580:	str	r1, [r2]
    e584:	bge	f21c <gen_wlanhostop+0x2228>
    e588:	mov	r0, #1024	; 0x400
    e58c:	lsl	r7, r0, r1
    e590:	mov	r0, r7
    e594:	bl	dec <malloc@plt>
    e598:	cmp	r0, #0
    e59c:	str	r0, [r4, #12]
    e5a0:	beq	f21c <gen_wlanhostop+0x2228>
    e5a4:	mov	r1, #0
    e5a8:	mov	r2, r7
    e5ac:	add	r4, r4, #8
    e5b0:	bl	e58 <memset@plt>
    e5b4:	cmp	r7, #207	; 0xcf
    e5b8:	str	r7, [r4]
    e5bc:	bls	f21c <gen_wlanhostop+0x2228>
    e5c0:	sub	r0, r7, #208	; 0xd0
    e5c4:	mov	r2, #6
    e5c8:	mov	r3, r9
    e5cc:	str	r0, [r4]
    e5d0:	ldr	r1, [r4, #4]
    e5d4:	add	r4, r1, r0
    e5d8:	mov	r1, #2
    e5dc:	mov	r0, #69	; 0x45
    e5e0:	str	r1, [r4, #20]
    e5e4:	str	r6, [r4, #4]
    e5e8:	str	r0, [r4, #8]
    e5ec:	mov	r1, #10
    e5f0:	ldr	r0, [r4, #44]	; 0x2c
    e5f4:	clz	r0, r0
    e5f8:	lsr	r0, r0, #5
    e5fc:	str	r0, [r4, #44]	; 0x2c
    e600:	mov	r0, #1
    e604:	str	r4, [r4, #96]	; 0x60
    e608:	bl	1c314 <gen_bcmp>
    e60c:	cmp	r4, #0
    e610:	beq	e644 <gen_wlanhostop+0x1650>
    e614:	ldr	r1, [r0, #96]	; 0x60
    e618:	mov	r2, r4
    e61c:	ldr	r3, [r2, #44]	; 0x2c
    e620:	add	r7, r2, #84	; 0x54
    e624:	cmp	r3, #0
    e628:	mov	r3, #84	; 0x54
    e62c:	movweq	r3, #60	; 0x3c
    e630:	addeq	r7, r2, #60	; 0x3c
    e634:	ldr	r2, [r2, r3]
    e638:	str	r1, [r7]
    e63c:	cmp	r2, #0
    e640:	bne	e61c <gen_wlanhostop+0x1628>
    e644:	ldr	r1, [r4, #44]	; 0x2c
    e648:	cmp	r0, #0
    e64c:	clz	r1, r1
    e650:	lsr	r1, r1, #5
    e654:	str	r1, [r4, #44]	; 0x2c
    e658:	ldr	r2, [r0, #44]	; 0x2c
    e65c:	clz	r1, r2
    e660:	lsr	r1, r1, #5
    e664:	str	r1, [r0, #44]	; 0x2c
    e668:	str	r0, [sp, #8]
    e66c:	beq	e850 <gen_wlanhostop+0x185c>
    e670:	cmp	r2, #0
    e674:	mov	r2, #60	; 0x3c
    e678:	add	r1, r0, #60	; 0x3c
    e67c:	movweq	r2, #84	; 0x54
    e680:	addeq	r1, r0, #84	; 0x54
    e684:	ldr	r2, [r0, r2]
    e688:	cmp	r2, #0
    e68c:	beq	e854 <gen_wlanhostop+0x1860>
    e690:	ldr	r3, [r2, #44]	; 0x2c
    e694:	add	r1, r2, #84	; 0x54
    e698:	cmp	r3, #0
    e69c:	mov	r3, #84	; 0x54
    e6a0:	movweq	r3, #60	; 0x3c
    e6a4:	addeq	r1, r2, #60	; 0x3c
    e6a8:	ldr	r2, [r2, r3]
    e6ac:	cmp	r2, #0
    e6b0:	bne	e690 <gen_wlanhostop+0x169c>
    e6b4:	b	e854 <gen_wlanhostop+0x1860>
    e6b8:	.word	0x00039cb8
    e6bc:	add	r1, sp, #8
    e6c0:	str	r0, [r1]
    e6c4:	mov	r2, #16
    e6c8:	ldr	r1, [r5, #44]	; 0x2c
    e6cc:	clz	r1, r1
    e6d0:	lsr	r1, r1, #5
    e6d4:	str	r1, [r5, #44]	; 0x2c
    e6d8:	mov	r1, #0
    e6dc:	ldr	r0, [r0, #96]	; 0x60
    e6e0:	str	r0, [r5, #96]	; 0x60
    e6e4:	mov	r0, #1
    e6e8:	bl	17970 <gen_load_a>
    e6ec:	mov	r6, r0
    e6f0:	ldr	r0, [pc, #2916]	; f25c <gen_wlanhostop+0x2268>
    e6f4:	mov	r4, r8
    e6f8:	ldr	r0, [pc, r0]
    e6fc:	ldr	r7, [r4, r0, lsl #3]!
    e700:	cmp	r7, #207	; 0xcf
    e704:	bhi	e758 <gen_wlanhostop+0x1764>
    e708:	ldr	r2, [pc, #2896]	; f260 <gen_wlanhostop+0x226c>
    e70c:	add	r1, r0, #1
    e710:	cmp	r0, #15
    e714:	add	r2, pc, r2
    e718:	str	r1, [r2]
    e71c:	bge	f21c <gen_wlanhostop+0x2228>
    e720:	mov	r0, #1024	; 0x400
    e724:	lsl	r7, r0, r1
    e728:	mov	r0, r7
    e72c:	bl	dec <malloc@plt>
    e730:	cmp	r0, #0
    e734:	str	r0, [r4, #12]
    e738:	beq	f21c <gen_wlanhostop+0x2228>
    e73c:	mov	r1, #0
    e740:	mov	r2, r7
    e744:	add	r4, r4, #8
    e748:	bl	e58 <memset@plt>
    e74c:	cmp	r7, #207	; 0xcf
    e750:	str	r7, [r4]
    e754:	bls	f21c <gen_wlanhostop+0x2228>
    e758:	sub	r0, r7, #208	; 0xd0
    e75c:	mov	r2, #6
    e760:	mov	r3, r9
    e764:	str	r0, [r4]
    e768:	ldr	r1, [r4, #4]
    e76c:	add	r4, r1, r0
    e770:	mov	r1, #8
    e774:	mov	r0, #69	; 0x45
    e778:	str	r1, [r4, #20]
    e77c:	str	r6, [r4, #4]
    e780:	str	r0, [r4, #8]
    e784:	mov	r1, #4
    e788:	ldr	r0, [r4, #44]	; 0x2c
    e78c:	clz	r0, r0
    e790:	lsr	r0, r0, #5
    e794:	str	r0, [r4, #44]	; 0x2c
    e798:	mov	r0, #1
    e79c:	str	r4, [r4, #96]	; 0x60
    e7a0:	bl	1c314 <gen_bcmp>
    e7a4:	cmp	r4, #0
    e7a8:	beq	e7dc <gen_wlanhostop+0x17e8>
    e7ac:	ldr	r1, [r0, #96]	; 0x60
    e7b0:	mov	r2, r4
    e7b4:	ldr	r3, [r2, #44]	; 0x2c
    e7b8:	add	r7, r2, #84	; 0x54
    e7bc:	cmp	r3, #0
    e7c0:	mov	r3, #84	; 0x54
    e7c4:	movweq	r3, #60	; 0x3c
    e7c8:	addeq	r7, r2, #60	; 0x3c
    e7cc:	ldr	r2, [r2, r3]
    e7d0:	str	r1, [r7]
    e7d4:	cmp	r2, #0
    e7d8:	bne	e7b4 <gen_wlanhostop+0x17c0>
    e7dc:	ldr	r1, [r4, #44]	; 0x2c
    e7e0:	cmp	r0, #0
    e7e4:	clz	r1, r1
    e7e8:	lsr	r1, r1, #5
    e7ec:	str	r1, [r4, #44]	; 0x2c
    e7f0:	ldr	r2, [r0, #44]	; 0x2c
    e7f4:	clz	r1, r2
    e7f8:	lsr	r1, r1, #5
    e7fc:	str	r1, [r0, #44]	; 0x2c
    e800:	str	r0, [sp, #8]
    e804:	beq	e908 <gen_wlanhostop+0x1914>
    e808:	cmp	r2, #0
    e80c:	mov	r2, #60	; 0x3c
    e810:	add	r1, r0, #60	; 0x3c
    e814:	movweq	r2, #84	; 0x54
    e818:	addeq	r1, r0, #84	; 0x54
    e81c:	ldr	r2, [r0, r2]
    e820:	cmp	r2, #0
    e824:	beq	e90c <gen_wlanhostop+0x1918>
    e828:	ldr	r3, [r2, #44]	; 0x2c
    e82c:	add	r1, r2, #84	; 0x54
    e830:	cmp	r3, #0
    e834:	mov	r3, #84	; 0x54
    e838:	movweq	r3, #60	; 0x3c
    e83c:	addeq	r1, r2, #60	; 0x3c
    e840:	ldr	r2, [r2, r3]
    e844:	cmp	r2, #0
    e848:	bne	e828 <gen_wlanhostop+0x1834>
    e84c:	b	e90c <gen_wlanhostop+0x1918>
    e850:	add	r1, sp, #8
    e854:	str	r4, [r1]
    e858:	ldr	r1, [r0, #44]	; 0x2c
    e85c:	clz	r2, r1
    e860:	cmp	r1, #0
    e864:	lsr	r2, r2, #5
    e868:	movwne	r1, #1
    e86c:	cmp	r0, #0
    e870:	str	r2, [r0, #44]	; 0x2c
    e874:	ldr	r2, [r4, #96]	; 0x60
    e878:	str	r1, [r0, #44]	; 0x2c
    e87c:	str	r2, [r0, #96]	; 0x60
    e880:	beq	e8c4 <gen_wlanhostop+0x18d0>
    e884:	ldr	r2, [r5, #96]	; 0x60
    e888:	mov	r3, r0
    e88c:	cmp	r1, #0
    e890:	mov	r1, #84	; 0x54
    e894:	add	r7, r3, #84	; 0x54
    e898:	movweq	r1, #60	; 0x3c
    e89c:	addeq	r7, r3, #60	; 0x3c
    e8a0:	ldr	r3, [r3, r1]
    e8a4:	str	r2, [r7]
    e8a8:	cmp	r3, #0
    e8ac:	beq	e8c0 <gen_wlanhostop+0x18cc>
    e8b0:	ldr	r1, [r3, #44]	; 0x2c
    e8b4:	b	e88c <gen_wlanhostop+0x1898>
    e8b8:	.word	0x00039c20
    e8bc:	.word	0x00039c04
    e8c0:	ldr	r1, [r0, #44]	; 0x2c
    e8c4:	clz	r1, r1
    e8c8:	cmp	r5, #0
    e8cc:	lsr	r1, r1, #5
    e8d0:	str	r1, [r0, #44]	; 0x2c
    e8d4:	str	r5, [sp, #8]
    e8d8:	beq	e9c0 <gen_wlanhostop+0x19cc>
    e8dc:	mov	r2, r5
    e8e0:	ldr	r3, [r2, #44]	; 0x2c
    e8e4:	add	r1, r2, #84	; 0x54
    e8e8:	cmp	r3, #0
    e8ec:	mov	r3, #84	; 0x54
    e8f0:	movweq	r3, #60	; 0x3c
    e8f4:	addeq	r1, r2, #60	; 0x3c
    e8f8:	ldr	r2, [r2, r3]
    e8fc:	cmp	r2, #0
    e900:	bne	e8e0 <gen_wlanhostop+0x18ec>
    e904:	b	e9c4 <gen_wlanhostop+0x19d0>
    e908:	add	r1, sp, #8
    e90c:	str	r4, [r1]
    e910:	ldr	r1, [r0, #44]	; 0x2c
    e914:	clz	r2, r1
    e918:	cmp	r1, #0
    e91c:	lsr	r2, r2, #5
    e920:	movwne	r1, #1
    e924:	cmp	r0, #0
    e928:	str	r2, [r0, #44]	; 0x2c
    e92c:	ldr	r2, [r4, #96]	; 0x60
    e930:	str	r1, [r0, #44]	; 0x2c
    e934:	str	r2, [r0, #96]	; 0x60
    e938:	beq	e978 <gen_wlanhostop+0x1984>
    e93c:	ldr	r2, [r5, #96]	; 0x60
    e940:	mov	r3, r0
    e944:	cmp	r1, #0
    e948:	mov	r1, #84	; 0x54
    e94c:	add	r7, r3, #84	; 0x54
    e950:	movweq	r1, #60	; 0x3c
    e954:	addeq	r7, r3, #60	; 0x3c
    e958:	ldr	r3, [r3, r1]
    e95c:	str	r2, [r7]
    e960:	cmp	r3, #0
    e964:	beq	e974 <gen_wlanhostop+0x1980>
    e968:	ldr	r1, [r3, #44]	; 0x2c
    e96c:	b	e944 <gen_wlanhostop+0x1950>
    e970:	.word	0x00039b6c
    e974:	ldr	r1, [r0, #44]	; 0x2c
    e978:	clz	r1, r1
    e97c:	cmp	r5, #0
    e980:	lsr	r1, r1, #5
    e984:	str	r1, [r0, #44]	; 0x2c
    e988:	str	r5, [sp, #8]
    e98c:	beq	eb28 <gen_wlanhostop+0x1b34>
    e990:	mov	r2, r5
    e994:	ldr	r3, [r2, #44]	; 0x2c
    e998:	add	r1, r2, #84	; 0x54
    e99c:	cmp	r3, #0
    e9a0:	mov	r3, #84	; 0x54
    e9a4:	movweq	r3, #60	; 0x3c
    e9a8:	addeq	r1, r2, #60	; 0x3c
    e9ac:	ldr	r2, [r2, r3]
    e9b0:	cmp	r2, #0
    e9b4:	bne	e994 <gen_wlanhostop+0x19a0>
    e9b8:	b	eb2c <gen_wlanhostop+0x1b38>
    e9bc:	.word	0x000399e8
    e9c0:	add	r1, sp, #8
    e9c4:	str	r0, [r1]
    e9c8:	mov	r1, #0
    e9cc:	mov	r2, #16
    e9d0:	ldr	r0, [r0, #96]	; 0x60
    e9d4:	str	r0, [r5, #96]	; 0x60
    e9d8:	mov	r0, #1
    e9dc:	bl	17970 <gen_load_a>
    e9e0:	mov	r6, r0
    e9e4:	ldr	r0, [pc, #2128]	; f23c <gen_wlanhostop+0x2248>
    e9e8:	mov	r4, r8
    e9ec:	ldr	r0, [pc, r0]
    e9f0:	ldr	r7, [r4, r0, lsl #3]!
    e9f4:	cmp	r7, #207	; 0xcf
    e9f8:	bhi	ea4c <gen_wlanhostop+0x1a58>
    e9fc:	ldr	r2, [pc, #2108]	; f240 <gen_wlanhostop+0x224c>
    ea00:	add	r1, r0, #1
    ea04:	cmp	r0, #15
    ea08:	add	r2, pc, r2
    ea0c:	str	r1, [r2]
    ea10:	bge	f21c <gen_wlanhostop+0x2228>
    ea14:	mov	r0, #1024	; 0x400
    ea18:	lsl	r7, r0, r1
    ea1c:	mov	r0, r7
    ea20:	bl	dec <malloc@plt>
    ea24:	cmp	r0, #0
    ea28:	str	r0, [r4, #12]
    ea2c:	beq	f21c <gen_wlanhostop+0x2228>
    ea30:	mov	r1, #0
    ea34:	mov	r2, r7
    ea38:	add	r4, r4, #8
    ea3c:	bl	e58 <memset@plt>
    ea40:	cmp	r7, #207	; 0xcf
    ea44:	str	r7, [r4]
    ea48:	bls	f21c <gen_wlanhostop+0x2228>
    ea4c:	sub	r0, r7, #208	; 0xd0
    ea50:	mov	r2, #8
    ea54:	str	r0, [r4]
    ea58:	ldr	r1, [r4, #4]
    ea5c:	adds	r0, r1, r0
    ea60:	mov	r1, #69	; 0x45
    ea64:	str	r2, [r0, #20]
    ea68:	str	r6, [r0, #4]
    ea6c:	str	r1, [r0, #8]
    ea70:	str	r0, [r0, #96]	; 0x60
    ea74:	beq	eaa8 <gen_wlanhostop+0x1ab4>
    ea78:	ldr	r1, [r5, #96]	; 0x60
    ea7c:	mov	r2, r0
    ea80:	ldr	r3, [r2, #44]	; 0x2c
    ea84:	add	r7, r2, #84	; 0x54
    ea88:	cmp	r3, #0
    ea8c:	mov	r3, #84	; 0x54
    ea90:	movweq	r3, #60	; 0x3c
    ea94:	addeq	r7, r2, #60	; 0x3c
    ea98:	ldr	r2, [r2, r3]
    ea9c:	str	r1, [r7]
    eaa0:	cmp	r2, #0
    eaa4:	bne	ea80 <gen_wlanhostop+0x1a8c>
    eaa8:	ldr	r1, [r0, #44]	; 0x2c
    eaac:	cmp	r5, #0
    eab0:	clz	r1, r1
    eab4:	lsr	r1, r1, #5
    eab8:	str	r1, [r0, #44]	; 0x2c
    eabc:	ldr	r2, [r5, #44]	; 0x2c
    eac0:	clz	r1, r2
    eac4:	lsr	r1, r1, #5
    eac8:	str	r1, [r5, #44]	; 0x2c
    eacc:	str	r5, [sp, #8]
    ead0:	beq	ec98 <gen_wlanhostop+0x1ca4>
    ead4:	cmp	r2, #0
    ead8:	mov	r2, #60	; 0x3c
    eadc:	add	r1, r5, #60	; 0x3c
    eae0:	movweq	r2, #84	; 0x54
    eae4:	addeq	r1, r5, #84	; 0x54
    eae8:	ldr	r2, [r5, r2]
    eaec:	cmp	r2, #0
    eaf0:	beq	ec9c <gen_wlanhostop+0x1ca8>
    eaf4:	ldr	r3, [r2, #44]	; 0x2c
    eaf8:	add	r1, r2, #84	; 0x54
    eafc:	cmp	r3, #0
    eb00:	mov	r3, #84	; 0x54
    eb04:	movweq	r3, #60	; 0x3c
    eb08:	addeq	r1, r2, #60	; 0x3c
    eb0c:	ldr	r2, [r2, r3]
    eb10:	cmp	r2, #0
    eb14:	bne	eaf4 <gen_wlanhostop+0x1b00>
    eb18:	b	ec9c <gen_wlanhostop+0x1ca8>
    eb1c:	.word	0x00039950
    eb20:	.word	0x00039934
    eb24:	.word	0x0003989c
    eb28:	add	r1, sp, #8
    eb2c:	str	r0, [r1]
    eb30:	mov	r1, #0
    eb34:	mov	r2, #16
    eb38:	ldr	r0, [r0, #96]	; 0x60
    eb3c:	str	r0, [r5, #96]	; 0x60
    eb40:	mov	r0, #1
    eb44:	bl	17970 <gen_load_a>
    eb48:	mov	r4, r0
    eb4c:	ldr	r0, [pc, #1808]	; f264 <gen_wlanhostop+0x2270>
    eb50:	ldr	r0, [pc, r0]
    eb54:	ldr	r6, [r8, r0, lsl #3]!
    eb58:	cmp	r6, #207	; 0xcf
    eb5c:	bhi	ebb0 <gen_wlanhostop+0x1bbc>
    eb60:	ldr	r2, [pc, #1792]	; f268 <gen_wlanhostop+0x2274>
    eb64:	add	r1, r0, #1
    eb68:	cmp	r0, #15
    eb6c:	add	r2, pc, r2
    eb70:	str	r1, [r2]
    eb74:	bge	f21c <gen_wlanhostop+0x2228>
    eb78:	mov	r0, #1024	; 0x400
    eb7c:	lsl	r6, r0, r1
    eb80:	mov	r0, r6
    eb84:	bl	dec <malloc@plt>
    eb88:	cmp	r0, #0
    eb8c:	str	r0, [r8, #12]
    eb90:	beq	f21c <gen_wlanhostop+0x2228>
    eb94:	mov	r1, #0
    eb98:	mov	r2, r6
    eb9c:	add	r8, r8, #8
    eba0:	bl	e58 <memset@plt>
    eba4:	cmp	r6, #207	; 0xcf
    eba8:	str	r6, [r8]
    ebac:	bls	f21c <gen_wlanhostop+0x2228>
    ebb0:	sub	r0, r6, #208	; 0xd0
    ebb4:	mov	r2, #4
    ebb8:	str	r0, [r8]
    ebbc:	ldr	r1, [r8, #4]
    ebc0:	adds	r0, r1, r0
    ebc4:	mov	r1, #69	; 0x45
    ebc8:	str	r2, [r0, #20]
    ebcc:	str	r4, [r0, #4]
    ebd0:	str	r1, [r0, #8]
    ebd4:	ldr	r1, [r0, #44]	; 0x2c
    ebd8:	clz	r1, r1
    ebdc:	lsr	r1, r1, #5
    ebe0:	str	r1, [r0, #44]	; 0x2c
    ebe4:	str	r0, [r0, #96]	; 0x60
    ebe8:	beq	ec20 <gen_wlanhostop+0x1c2c>
    ebec:	ldr	r1, [r5, #96]	; 0x60
    ebf0:	mov	r2, r0
    ebf4:	ldr	r3, [r2, #44]	; 0x2c
    ebf8:	add	r7, r2, #84	; 0x54
    ebfc:	cmp	r3, #0
    ec00:	mov	r3, #84	; 0x54
    ec04:	movweq	r3, #60	; 0x3c
    ec08:	addeq	r7, r2, #60	; 0x3c
    ec0c:	ldr	r2, [r2, r3]
    ec10:	str	r1, [r7]
    ec14:	cmp	r2, #0
    ec18:	bne	ebf4 <gen_wlanhostop+0x1c00>
    ec1c:	ldr	r1, [r0, #44]	; 0x2c
    ec20:	clz	r1, r1
    ec24:	cmp	r5, #0
    ec28:	lsr	r1, r1, #5
    ec2c:	str	r1, [r0, #44]	; 0x2c
    ec30:	ldr	r2, [r5, #44]	; 0x2c
    ec34:	clz	r1, r2
    ec38:	lsr	r1, r1, #5
    ec3c:	str	r1, [r5, #44]	; 0x2c
    ec40:	str	r5, [sp, #8]
    ec44:	beq	f04c <gen_wlanhostop+0x2058>
    ec48:	cmp	r2, #0
    ec4c:	mov	r2, #60	; 0x3c
    ec50:	add	r1, r5, #60	; 0x3c
    ec54:	movweq	r2, #84	; 0x54
    ec58:	addeq	r1, r5, #84	; 0x54
    ec5c:	ldr	r2, [r5, r2]
    ec60:	cmp	r2, #0
    ec64:	beq	f050 <gen_wlanhostop+0x205c>
    ec68:	ldr	r3, [r2, #44]	; 0x2c
    ec6c:	add	r1, r2, #84	; 0x54
    ec70:	cmp	r3, #0
    ec74:	mov	r3, #84	; 0x54
    ec78:	movweq	r3, #60	; 0x3c
    ec7c:	addeq	r1, r2, #60	; 0x3c
    ec80:	ldr	r2, [r2, r3]
    ec84:	cmp	r2, #0
    ec88:	bne	ec68 <gen_wlanhostop+0x1c74>
    ec8c:	b	f050 <gen_wlanhostop+0x205c>
    ec90:	.word	0x00039718
    ec94:	.word	0x000396fc
    ec98:	add	r1, sp, #8
    ec9c:	str	r0, [r1]
    eca0:	mov	r2, #16
    eca4:	ldr	r1, [r5, #44]	; 0x2c
    eca8:	clz	r1, r1
    ecac:	lsr	r1, r1, #5
    ecb0:	str	r1, [r5, #44]	; 0x2c
    ecb4:	mov	r1, #0
    ecb8:	ldr	r0, [r0, #96]	; 0x60
    ecbc:	str	r0, [r5, #96]	; 0x60
    ecc0:	mov	r0, #1
    ecc4:	bl	17970 <gen_load_a>
    ecc8:	mov	r6, r0
    eccc:	ldr	r0, [pc, #1392]	; f244 <gen_wlanhostop+0x2250>
    ecd0:	mov	r4, r8
    ecd4:	ldr	r0, [pc, r0]
    ecd8:	ldr	r7, [r4, r0, lsl #3]!
    ecdc:	cmp	r7, #207	; 0xcf
    ece0:	bhi	ed34 <gen_wlanhostop+0x1d40>
    ece4:	ldr	r2, [pc, #1372]	; f248 <gen_wlanhostop+0x2254>
    ece8:	add	r1, r0, #1
    ecec:	cmp	r0, #15
    ecf0:	add	r2, pc, r2
    ecf4:	str	r1, [r2]
    ecf8:	bge	f21c <gen_wlanhostop+0x2228>
    ecfc:	mov	r0, #1024	; 0x400
    ed00:	lsl	r7, r0, r1
    ed04:	mov	r0, r7
    ed08:	bl	dec <malloc@plt>
    ed0c:	cmp	r0, #0
    ed10:	str	r0, [r4, #12]
    ed14:	beq	f21c <gen_wlanhostop+0x2228>
    ed18:	mov	r1, #0
    ed1c:	mov	r2, r7
    ed20:	add	r4, r4, #8
    ed24:	bl	e58 <memset@plt>
    ed28:	cmp	r7, #207	; 0xcf
    ed2c:	str	r7, [r4]
    ed30:	bls	f21c <gen_wlanhostop+0x2228>
    ed34:	sub	r0, r7, #208	; 0xd0
    ed38:	mov	r2, #6
    ed3c:	mov	r3, r9
    ed40:	str	r0, [r4]
    ed44:	ldr	r1, [r4, #4]
    ed48:	add	r4, r1, r0
    ed4c:	mov	r1, #8
    ed50:	mov	r0, #69	; 0x45
    ed54:	str	r1, [r4, #20]
    ed58:	str	r6, [r4, #4]
    ed5c:	str	r0, [r4, #8]
    ed60:	mov	r1, #10
    ed64:	ldr	r0, [r4, #44]	; 0x2c
    ed68:	clz	r0, r0
    ed6c:	lsr	r0, r0, #5
    ed70:	str	r0, [r4, #44]	; 0x2c
    ed74:	mov	r0, #1
    ed78:	str	r4, [r4, #96]	; 0x60
    ed7c:	bl	1c314 <gen_bcmp>
    ed80:	cmp	r4, #0
    ed84:	beq	edb8 <gen_wlanhostop+0x1dc4>
    ed88:	ldr	r1, [r0, #96]	; 0x60
    ed8c:	mov	r2, r4
    ed90:	ldr	r3, [r2, #44]	; 0x2c
    ed94:	add	r7, r2, #84	; 0x54
    ed98:	cmp	r3, #0
    ed9c:	mov	r3, #84	; 0x54
    eda0:	movweq	r3, #60	; 0x3c
    eda4:	addeq	r7, r2, #60	; 0x3c
    eda8:	ldr	r2, [r2, r3]
    edac:	str	r1, [r7]
    edb0:	cmp	r2, #0
    edb4:	bne	ed90 <gen_wlanhostop+0x1d9c>
    edb8:	ldr	r1, [r4, #44]	; 0x2c
    edbc:	cmp	r0, #0
    edc0:	clz	r1, r1
    edc4:	lsr	r1, r1, #5
    edc8:	str	r1, [r4, #44]	; 0x2c
    edcc:	ldr	r2, [r0, #44]	; 0x2c
    edd0:	clz	r1, r2
    edd4:	lsr	r1, r1, #5
    edd8:	str	r1, [r0, #44]	; 0x2c
    eddc:	str	r0, [sp, #8]
    ede0:	beq	ee2c <gen_wlanhostop+0x1e38>
    ede4:	cmp	r2, #0
    ede8:	mov	r2, #60	; 0x3c
    edec:	add	r1, r0, #60	; 0x3c
    edf0:	movweq	r2, #84	; 0x54
    edf4:	addeq	r1, r0, #84	; 0x54
    edf8:	ldr	r2, [r0, r2]
    edfc:	cmp	r2, #0
    ee00:	beq	ee30 <gen_wlanhostop+0x1e3c>
    ee04:	ldr	r3, [r2, #44]	; 0x2c
    ee08:	add	r1, r2, #84	; 0x54
    ee0c:	cmp	r3, #0
    ee10:	mov	r3, #84	; 0x54
    ee14:	movweq	r3, #60	; 0x3c
    ee18:	addeq	r1, r2, #60	; 0x3c
    ee1c:	ldr	r2, [r2, r3]
    ee20:	cmp	r2, #0
    ee24:	bne	ee04 <gen_wlanhostop+0x1e10>
    ee28:	b	ee30 <gen_wlanhostop+0x1e3c>
    ee2c:	add	r1, sp, #8
    ee30:	str	r4, [r1]
    ee34:	ldr	r1, [r0, #44]	; 0x2c
    ee38:	clz	r2, r1
    ee3c:	cmp	r1, #0
    ee40:	lsr	r2, r2, #5
    ee44:	movwne	r1, #1
    ee48:	cmp	r0, #0
    ee4c:	str	r2, [r0, #44]	; 0x2c
    ee50:	ldr	r2, [r4, #96]	; 0x60
    ee54:	str	r1, [r0, #44]	; 0x2c
    ee58:	str	r2, [r0, #96]	; 0x60
    ee5c:	beq	ee98 <gen_wlanhostop+0x1ea4>
    ee60:	ldr	r2, [r5, #96]	; 0x60
    ee64:	mov	r3, r0
    ee68:	cmp	r1, #0
    ee6c:	mov	r1, #84	; 0x54
    ee70:	add	r7, r3, #84	; 0x54
    ee74:	movweq	r1, #60	; 0x3c
    ee78:	addeq	r7, r3, #60	; 0x3c
    ee7c:	ldr	r3, [r3, r1]
    ee80:	str	r2, [r7]
    ee84:	cmp	r3, #0
    ee88:	beq	ee94 <gen_wlanhostop+0x1ea0>
    ee8c:	ldr	r1, [r3, #44]	; 0x2c
    ee90:	b	ee68 <gen_wlanhostop+0x1e74>
    ee94:	ldr	r1, [r0, #44]	; 0x2c
    ee98:	clz	r1, r1
    ee9c:	cmp	r5, #0
    eea0:	lsr	r1, r1, #5
    eea4:	str	r1, [r0, #44]	; 0x2c
    eea8:	str	r5, [sp, #8]
    eeac:	beq	eee4 <gen_wlanhostop+0x1ef0>
    eeb0:	mov	r2, r5
    eeb4:	ldr	r3, [r2, #44]	; 0x2c
    eeb8:	add	r1, r2, #84	; 0x54
    eebc:	cmp	r3, #0
    eec0:	mov	r3, #84	; 0x54
    eec4:	movweq	r3, #60	; 0x3c
    eec8:	addeq	r1, r2, #60	; 0x3c
    eecc:	ldr	r2, [r2, r3]
    eed0:	cmp	r2, #0
    eed4:	bne	eeb4 <gen_wlanhostop+0x1ec0>
    eed8:	b	eee8 <gen_wlanhostop+0x1ef4>
    eedc:	.word	0x00039584
    eee0:	.word	0x00039568
    eee4:	add	r1, sp, #8
    eee8:	str	r0, [r1]
    eeec:	mov	r1, #0
    eef0:	mov	r2, #16
    eef4:	ldr	r0, [r0, #96]	; 0x60
    eef8:	str	r0, [r5, #96]	; 0x60
    eefc:	mov	r0, #1
    ef00:	bl	17970 <gen_load_a>
    ef04:	mov	r4, r0
    ef08:	ldr	r0, [pc, #828]	; f24c <gen_wlanhostop+0x2258>
    ef0c:	ldr	r0, [pc, r0]
    ef10:	ldr	r6, [r8, r0, lsl #3]!
    ef14:	cmp	r6, #207	; 0xcf
    ef18:	bhi	ef6c <gen_wlanhostop+0x1f78>
    ef1c:	ldr	r2, [pc, #812]	; f250 <gen_wlanhostop+0x225c>
    ef20:	add	r1, r0, #1
    ef24:	cmp	r0, #15
    ef28:	add	r2, pc, r2
    ef2c:	str	r1, [r2]
    ef30:	bge	f21c <gen_wlanhostop+0x2228>
    ef34:	mov	r0, #1024	; 0x400
    ef38:	lsl	r6, r0, r1
    ef3c:	mov	r0, r6
    ef40:	bl	dec <malloc@plt>
    ef44:	cmp	r0, #0
    ef48:	str	r0, [r8, #12]
    ef4c:	beq	f21c <gen_wlanhostop+0x2228>
    ef50:	mov	r1, #0
    ef54:	mov	r2, r6
    ef58:	add	r8, r8, #8
    ef5c:	bl	e58 <memset@plt>
    ef60:	cmp	r6, #207	; 0xcf
    ef64:	str	r6, [r8]
    ef68:	bls	f21c <gen_wlanhostop+0x2228>
    ef6c:	sub	r0, r6, #208	; 0xd0
    ef70:	mov	r2, #4
    ef74:	str	r0, [r8]
    ef78:	ldr	r1, [r8, #4]
    ef7c:	adds	r0, r1, r0
    ef80:	mov	r1, #69	; 0x45
    ef84:	str	r2, [r0, #20]
    ef88:	str	r4, [r0, #4]
    ef8c:	str	r1, [r0, #8]
    ef90:	ldr	r1, [r0, #44]	; 0x2c
    ef94:	clz	r1, r1
    ef98:	lsr	r1, r1, #5
    ef9c:	str	r1, [r0, #44]	; 0x2c
    efa0:	str	r0, [r0, #96]	; 0x60
    efa4:	beq	efdc <gen_wlanhostop+0x1fe8>
    efa8:	ldr	r1, [r5, #96]	; 0x60
    efac:	mov	r2, r0
    efb0:	ldr	r3, [r2, #44]	; 0x2c
    efb4:	add	r7, r2, #84	; 0x54
    efb8:	cmp	r3, #0
    efbc:	mov	r3, #84	; 0x54
    efc0:	movweq	r3, #60	; 0x3c
    efc4:	addeq	r7, r2, #60	; 0x3c
    efc8:	ldr	r2, [r2, r3]
    efcc:	str	r1, [r7]
    efd0:	cmp	r2, #0
    efd4:	bne	efb0 <gen_wlanhostop+0x1fbc>
    efd8:	ldr	r1, [r0, #44]	; 0x2c
    efdc:	clz	r1, r1
    efe0:	cmp	r5, #0
    efe4:	lsr	r1, r1, #5
    efe8:	str	r1, [r0, #44]	; 0x2c
    efec:	ldr	r2, [r5, #44]	; 0x2c
    eff0:	clz	r1, r2
    eff4:	lsr	r1, r1, #5
    eff8:	str	r1, [r5, #44]	; 0x2c
    effc:	str	r5, [sp, #8]
    f000:	beq	f04c <gen_wlanhostop+0x2058>
    f004:	cmp	r2, #0
    f008:	mov	r2, #60	; 0x3c
    f00c:	add	r1, r5, #60	; 0x3c
    f010:	movweq	r2, #84	; 0x54
    f014:	addeq	r1, r5, #84	; 0x54
    f018:	ldr	r2, [r5, r2]
    f01c:	cmp	r2, #0
    f020:	beq	f050 <gen_wlanhostop+0x205c>
    f024:	ldr	r3, [r2, #44]	; 0x2c
    f028:	add	r1, r2, #84	; 0x54
    f02c:	cmp	r3, #0
    f030:	mov	r3, #84	; 0x54
    f034:	movweq	r3, #60	; 0x3c
    f038:	addeq	r1, r2, #60	; 0x3c
    f03c:	ldr	r2, [r2, r3]
    f040:	cmp	r2, #0
    f044:	bne	f024 <gen_wlanhostop+0x2030>
    f048:	b	f050 <gen_wlanhostop+0x205c>
    f04c:	add	r1, sp, #8
    f050:	str	r0, [r1]
    f054:	ldr	r1, [r5, #44]	; 0x2c
    f058:	clz	r1, r1
    f05c:	lsr	r1, r1, #5
    f060:	str	r1, [r5, #44]	; 0x2c
    f064:	ldr	r0, [r0, #96]	; 0x60
    f068:	b	f20c <gen_wlanhostop+0x2218>
    f06c:	add	r1, sp, #8
    f070:	str	r5, [r1]
    f074:	cmp	r7, #0
    f078:	ldr	r0, [r4, #44]	; 0x2c
    f07c:	clz	r0, r0
    f080:	lsr	r0, r0, #5
    f084:	str	r0, [r4, #44]	; 0x2c
    f088:	ldr	r0, [r5, #96]	; 0x60
    f08c:	str	r0, [r4, #96]	; 0x60
    f090:	ldr	r0, [r7, #44]	; 0x2c
    f094:	clz	r0, r0
    f098:	lsr	r0, r0, #5
    f09c:	str	r0, [r7, #44]	; 0x2c
    f0a0:	beq	f0dc <gen_wlanhostop+0x20e8>
    f0a4:	ldr	r1, [r4, #96]	; 0x60
    f0a8:	mov	r2, r7
    f0ac:	cmp	r0, #0
    f0b0:	mov	r0, #84	; 0x54
    f0b4:	add	r6, r2, #84	; 0x54
    f0b8:	movweq	r0, #60	; 0x3c
    f0bc:	addeq	r6, r2, #60	; 0x3c
    f0c0:	ldr	r2, [r2, r0]
    f0c4:	str	r1, [r6]
    f0c8:	cmp	r2, #0
    f0cc:	beq	f0d8 <gen_wlanhostop+0x20e4>
    f0d0:	ldr	r0, [r2, #44]	; 0x2c
    f0d4:	b	f0ac <gen_wlanhostop+0x20b8>
    f0d8:	ldr	r0, [r7, #44]	; 0x2c
    f0dc:	clz	r0, r0
    f0e0:	cmp	r4, #0
    f0e4:	lsr	r0, r0, #5
    f0e8:	str	r0, [r7, #44]	; 0x2c
    f0ec:	str	r4, [sp, #8]
    f0f0:	beq	f120 <gen_wlanhostop+0x212c>
    f0f4:	mov	r1, r4
    f0f8:	ldr	r2, [r1, #44]	; 0x2c
    f0fc:	add	r0, r1, #84	; 0x54
    f100:	cmp	r2, #0
    f104:	mov	r2, #84	; 0x54
    f108:	movweq	r2, #60	; 0x3c
    f10c:	addeq	r0, r1, #60	; 0x3c
    f110:	ldr	r1, [r1, r2]
    f114:	cmp	r1, #0
    f118:	bne	f0f8 <gen_wlanhostop+0x2104>
    f11c:	b	f124 <gen_wlanhostop+0x2130>
    f120:	add	r0, sp, #8
    f124:	str	r7, [r0]
    f128:	mov	r1, #10
    f12c:	mov	r2, #6
    f130:	ldr	r0, [r7, #96]	; 0x60
    f134:	str	r0, [r4, #96]	; 0x60
    f138:	mov	r0, #1
    f13c:	bl	1c314 <gen_bcmp>
    f140:	mov	r5, r0
    f144:	cmp	r4, #0
    f148:	beq	f17c <gen_wlanhostop+0x2188>
    f14c:	ldr	r0, [r5, #96]	; 0x60
    f150:	mov	r1, r4
    f154:	ldr	r2, [r1, #44]	; 0x2c
    f158:	add	r3, r1, #84	; 0x54
    f15c:	cmp	r2, #0
    f160:	mov	r2, #84	; 0x54
    f164:	movweq	r2, #60	; 0x3c
    f168:	addeq	r3, r1, #60	; 0x3c
    f16c:	ldr	r1, [r1, r2]
    f170:	str	r0, [r3]
    f174:	cmp	r1, #0
    f178:	bne	f154 <gen_wlanhostop+0x2160>
    f17c:	ldr	r0, [r4, #44]	; 0x2c
    f180:	cmp	r5, #0
    f184:	clz	r0, r0
    f188:	lsr	r0, r0, #5
    f18c:	str	r0, [r4, #44]	; 0x2c
    f190:	ldr	r1, [r5, #44]	; 0x2c
    f194:	clz	r0, r1
    f198:	lsr	r0, r0, #5
    f19c:	str	r0, [r5, #44]	; 0x2c
    f1a0:	str	r5, [sp, #8]
    f1a4:	beq	f1f0 <gen_wlanhostop+0x21fc>
    f1a8:	cmp	r1, #0
    f1ac:	mov	r1, #60	; 0x3c
    f1b0:	add	r0, r5, #60	; 0x3c
    f1b4:	movweq	r1, #84	; 0x54
    f1b8:	addeq	r0, r5, #84	; 0x54
    f1bc:	ldr	r1, [r5, r1]
    f1c0:	cmp	r1, #0
    f1c4:	beq	f1f4 <gen_wlanhostop+0x2200>
    f1c8:	ldr	r2, [r1, #44]	; 0x2c
    f1cc:	add	r0, r1, #84	; 0x54
    f1d0:	cmp	r2, #0
    f1d4:	mov	r2, #84	; 0x54
    f1d8:	movweq	r2, #60	; 0x3c
    f1dc:	addeq	r0, r1, #60	; 0x3c
    f1e0:	ldr	r1, [r1, r2]
    f1e4:	cmp	r1, #0
    f1e8:	bne	f1c8 <gen_wlanhostop+0x21d4>
    f1ec:	b	f1f4 <gen_wlanhostop+0x2200>
    f1f0:	add	r0, sp, #8
    f1f4:	str	r4, [r0]
    f1f8:	ldr	r0, [r5, #44]	; 0x2c
    f1fc:	clz	r0, r0
    f200:	lsr	r0, r0, #5
    f204:	str	r0, [r5, #44]	; 0x2c
    f208:	ldr	r0, [r4, #96]	; 0x60
    f20c:	str	r0, [r5, #96]	; 0x60
    f210:	mov	r0, r5
    f214:	sub	sp, fp, #28
    f218:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f21c:	ldr	r0, [pc, #72]	; f26c <gen_wlanhostop+0x2278>
    f220:	add	r0, pc, r0
    f224:	bl	2068 <sf_bpf_error>
    f228:	bl	edc <abort@plt>
    f22c:	.word	0x0003928c
    f230:	.word	0x00039270
    f234:	.word	0x00038f9c
    f238:	.word	0x00038f80
    f23c:	.word	0x00038b10
    f240:	.word	0x00038af4
    f244:	.word	0x00038828
    f248:	.word	0x0003880c
    f24c:	.word	0x000385f0
    f250:	.word	0x000385d4
    f254:	.word	0x00039124
    f258:	.word	0x00039108
    f25c:	.word	0x00038e04
    f260:	.word	0x00038de8
    f264:	.word	0x000389ac
    f268:	.word	0x00038990
    f26c:	.word	0x0001b45c

0000f270 <gen_ipfchostop>:
    f270:	push	{r4, r5, fp, lr}
    f274:	add	fp, sp, #8
    f278:	sub	sp, sp, #8
    f27c:	cmp	r1, #4
    f280:	bhi	f49c <gen_ipfchostop+0x22c>
    f284:	mov	r5, r0
    f288:	add	r0, pc, #4
    f28c:	ldr	r1, [r0, r1, lsl #2]
    f290:	add	pc, r0, r1
    f294:	.word	0x00000014
    f298:	.word	0x000001ac
    f29c:	.word	0x000001b8
    f2a0:	.word	0x00000014
    f2a4:	.word	0x000000d4
    f2a8:	mov	r0, #1
    f2ac:	mov	r1, #10
    f2b0:	mov	r2, #6
    f2b4:	mov	r3, r5
    f2b8:	bl	1c314 <gen_bcmp>
    f2bc:	mov	r4, r0
    f2c0:	mov	r0, #1
    f2c4:	mov	r1, #2
    f2c8:	mov	r2, #6
    f2cc:	mov	r3, r5
    f2d0:	bl	1c314 <gen_bcmp>
    f2d4:	ldr	r1, [r4, #44]	; 0x2c
    f2d8:	cmp	r4, #0
    f2dc:	clz	r1, r1
    f2e0:	lsr	r1, r1, #5
    f2e4:	str	r1, [r4, #44]	; 0x2c
    f2e8:	beq	f324 <gen_ipfchostop+0xb4>
    f2ec:	ldr	r2, [r0, #96]	; 0x60
    f2f0:	mov	r3, r4
    f2f4:	cmp	r1, #0
    f2f8:	mov	r1, #84	; 0x54
    f2fc:	add	r5, r3, #84	; 0x54
    f300:	movweq	r1, #60	; 0x3c
    f304:	addeq	r5, r3, #60	; 0x3c
    f308:	ldr	r3, [r3, r1]
    f30c:	str	r2, [r5]
    f310:	cmp	r3, #0
    f314:	beq	f320 <gen_ipfchostop+0xb0>
    f318:	ldr	r1, [r3, #44]	; 0x2c
    f31c:	b	f2f4 <gen_ipfchostop+0x84>
    f320:	ldr	r1, [r4, #44]	; 0x2c
    f324:	clz	r1, r1
    f328:	cmp	r0, #0
    f32c:	lsr	r1, r1, #5
    f330:	str	r1, [r4, #44]	; 0x2c
    f334:	str	r0, [sp]
    f338:	beq	f468 <gen_ipfchostop+0x1f8>
    f33c:	mov	r2, r0
    f340:	ldr	r3, [r2, #44]	; 0x2c
    f344:	add	r1, r2, #84	; 0x54
    f348:	cmp	r3, #0
    f34c:	mov	r3, #84	; 0x54
    f350:	movweq	r3, #60	; 0x3c
    f354:	addeq	r1, r2, #60	; 0x3c
    f358:	ldr	r2, [r2, r3]
    f35c:	cmp	r2, #0
    f360:	bne	f340 <gen_ipfchostop+0xd0>
    f364:	b	f46c <gen_ipfchostop+0x1fc>
    f368:	mov	r0, #1
    f36c:	mov	r1, #10
    f370:	mov	r2, #6
    f374:	mov	r3, r5
    f378:	bl	1c314 <gen_bcmp>
    f37c:	mov	r4, r0
    f380:	mov	r0, #1
    f384:	mov	r1, #2
    f388:	mov	r2, #6
    f38c:	mov	r3, r5
    f390:	bl	1c314 <gen_bcmp>
    f394:	cmp	r4, #0
    f398:	beq	f3cc <gen_ipfchostop+0x15c>
    f39c:	ldr	r1, [r0, #96]	; 0x60
    f3a0:	mov	r2, r4
    f3a4:	ldr	r3, [r2, #44]	; 0x2c
    f3a8:	add	r5, r2, #84	; 0x54
    f3ac:	cmp	r3, #0
    f3b0:	mov	r3, #84	; 0x54
    f3b4:	movweq	r3, #60	; 0x3c
    f3b8:	addeq	r5, r2, #60	; 0x3c
    f3bc:	ldr	r2, [r2, r3]
    f3c0:	str	r1, [r5]
    f3c4:	cmp	r2, #0
    f3c8:	bne	f3a4 <gen_ipfchostop+0x134>
    f3cc:	ldr	r1, [r4, #44]	; 0x2c
    f3d0:	cmp	r0, #0
    f3d4:	clz	r1, r1
    f3d8:	lsr	r1, r1, #5
    f3dc:	str	r1, [r4, #44]	; 0x2c
    f3e0:	ldr	r2, [r0, #44]	; 0x2c
    f3e4:	clz	r1, r2
    f3e8:	lsr	r1, r1, #5
    f3ec:	str	r1, [r0, #44]	; 0x2c
    f3f0:	str	r0, [sp, #4]
    f3f4:	beq	f474 <gen_ipfchostop+0x204>
    f3f8:	cmp	r2, #0
    f3fc:	mov	r2, #60	; 0x3c
    f400:	add	r1, r0, #60	; 0x3c
    f404:	movweq	r2, #84	; 0x54
    f408:	addeq	r1, r0, #84	; 0x54
    f40c:	ldr	r2, [r0, r2]
    f410:	cmp	r2, #0
    f414:	beq	f478 <gen_ipfchostop+0x208>
    f418:	ldr	r3, [r2, #44]	; 0x2c
    f41c:	add	r1, r2, #84	; 0x54
    f420:	cmp	r3, #0
    f424:	mov	r3, #84	; 0x54
    f428:	movweq	r3, #60	; 0x3c
    f42c:	addeq	r1, r2, #60	; 0x3c
    f430:	ldr	r2, [r2, r3]
    f434:	cmp	r2, #0
    f438:	bne	f418 <gen_ipfchostop+0x1a8>
    f43c:	b	f478 <gen_ipfchostop+0x208>
    f440:	mov	r0, #1
    f444:	mov	r1, #10
    f448:	b	f454 <gen_ipfchostop+0x1e4>
    f44c:	mov	r0, #1
    f450:	mov	r1, #2
    f454:	mov	r2, #6
    f458:	mov	r3, r5
    f45c:	sub	sp, fp, #8
    f460:	pop	{r4, r5, fp, lr}
    f464:	b	1c314 <gen_bcmp>
    f468:	mov	r1, sp
    f46c:	str	r4, [r1]
    f470:	b	f48c <gen_ipfchostop+0x21c>
    f474:	add	r1, sp, #4
    f478:	str	r4, [r1]
    f47c:	ldr	r1, [r0, #44]	; 0x2c
    f480:	clz	r1, r1
    f484:	lsr	r1, r1, #5
    f488:	str	r1, [r0, #44]	; 0x2c
    f48c:	ldr	r1, [r4, #96]	; 0x60
    f490:	str	r1, [r0, #96]	; 0x60
    f494:	sub	sp, fp, #8
    f498:	pop	{r4, r5, fp, pc}
    f49c:	bl	edc <abort@plt>

0000f4a0 <gen_host6>:
    f4a0:	push	{r4, sl, fp, lr}
    f4a4:	add	fp, sp, #8
    f4a8:	sub	sp, sp, #8
    f4ac:	ldr	r4, [pc, #604]	; f710 <gen_host6+0x270>
    f4b0:	mov	ip, r3
    f4b4:	ldr	r3, [fp, #8]
    f4b8:	mov	lr, r1
    f4bc:	ldr	r1, [pc, #592]	; f714 <gen_host6+0x274>
    f4c0:	add	r4, pc, r4
    f4c4:	cmp	r3, #2
    f4c8:	add	r1, pc, r1
    f4cc:	moveq	r1, r4
    f4d0:	cmp	r2, #40	; 0x28
    f4d4:	bhi	f5b0 <gen_host6+0x110>
    f4d8:	add	r3, pc, #4
    f4dc:	ldr	r2, [r3, r2, lsl #2]
    f4e0:	add	pc, r3, r2
    f4e4:	.word	0x000000a4
    f4e8:	.word	0x000000cc
    f4ec:	.word	0x000000d0
    f4f0:	.word	0x000000dc
    f4f4:	.word	0x000000e8
    f4f8:	.word	0x000000f4
    f4fc:	.word	0x00000100
    f500:	.word	0x0000010c
    f504:	.word	0x00000118
    f508:	.word	0x00000124
    f50c:	.word	0x00000130
    f510:	.word	0x0000013c
    f514:	.word	0x00000148
    f518:	.word	0x00000154
    f51c:	.word	0x00000160
    f520:	.word	0x0000016c
    f524:	.word	0x00000178
    f528:	.word	0x000000a4
    f52c:	.word	0x00000184
    f530:	.word	0x00000190
    f534:	.word	0x0000019c
    f538:	.word	0x000001a8
    f53c:	.word	0x000001b4
    f540:	.word	0x000001c0
    f544:	.word	0x000001cc
    f548:	.word	0x000001d8
    f54c:	.word	0x000001e4
    f550:	.word	0x000001f0
    f554:	.word	0x000001fc
    f558:	.word	0x00000208
    f55c:	.word	0x00000214
    f560:	.word	0x000000cc
    f564:	.word	0x000000cc
    f568:	.word	0x000000cc
    f56c:	.word	0x000000cc
    f570:	.word	0x000000cc
    f574:	.word	0x000000cc
    f578:	.word	0x000000cc
    f57c:	.word	0x000000cc
    f580:	.word	0x000000cc
    f584:	.word	0x00000220
    f588:	mov	r1, #24
    f58c:	mov	r2, #8
    f590:	movw	r3, #34525	; 0x86dd
    f594:	str	r2, [sp]
    f598:	str	r1, [sp, #4]
    f59c:	mov	r1, lr
    f5a0:	mov	r2, ip
    f5a4:	bl	1eca0 <gen_hostop6>
    f5a8:	sub	sp, fp, #8
    f5ac:	pop	{r4, sl, fp, pc}
    f5b0:	bl	edc <abort@plt>
    f5b4:	ldr	r0, [pc, #348]	; f718 <gen_host6+0x278>
    f5b8:	add	r0, pc, r0
    f5bc:	bl	2068 <sf_bpf_error>
    f5c0:	ldr	r0, [pc, #344]	; f720 <gen_host6+0x280>
    f5c4:	add	r0, pc, r0
    f5c8:	bl	2068 <sf_bpf_error>
    f5cc:	ldr	r0, [pc, #328]	; f71c <gen_host6+0x27c>
    f5d0:	add	r0, pc, r0
    f5d4:	bl	2068 <sf_bpf_error>
    f5d8:	ldr	r0, [pc, #324]	; f724 <gen_host6+0x284>
    f5dc:	add	r0, pc, r0
    f5e0:	bl	2068 <sf_bpf_error>
    f5e4:	ldr	r0, [pc, #316]	; f728 <gen_host6+0x288>
    f5e8:	add	r0, pc, r0
    f5ec:	bl	2068 <sf_bpf_error>
    f5f0:	ldr	r0, [pc, #308]	; f72c <gen_host6+0x28c>
    f5f4:	add	r0, pc, r0
    f5f8:	bl	2068 <sf_bpf_error>
    f5fc:	ldr	r0, [pc, #300]	; f730 <gen_host6+0x290>
    f600:	add	r0, pc, r0
    f604:	bl	2068 <sf_bpf_error>
    f608:	ldr	r0, [pc, #292]	; f734 <gen_host6+0x294>
    f60c:	add	r0, pc, r0
    f610:	bl	2068 <sf_bpf_error>
    f614:	ldr	r0, [pc, #284]	; f738 <gen_host6+0x298>
    f618:	add	r0, pc, r0
    f61c:	bl	2068 <sf_bpf_error>
    f620:	ldr	r0, [pc, #284]	; f744 <gen_host6+0x2a4>
    f624:	add	r0, pc, r0
    f628:	bl	2068 <sf_bpf_error>
    f62c:	ldr	r0, [pc, #280]	; f74c <gen_host6+0x2ac>
    f630:	add	r0, pc, r0
    f634:	bl	2068 <sf_bpf_error>
    f638:	ldr	r0, [pc, #276]	; f754 <gen_host6+0x2b4>
    f63c:	add	r0, pc, r0
    f640:	bl	2068 <sf_bpf_error>
    f644:	ldr	r0, [pc, #260]	; f750 <gen_host6+0x2b0>
    f648:	add	r0, pc, r0
    f64c:	bl	2068 <sf_bpf_error>
    f650:	ldr	r0, [pc, #260]	; f75c <gen_host6+0x2bc>
    f654:	add	r0, pc, r0
    f658:	bl	2068 <sf_bpf_error>
    f65c:	ldr	r0, [pc, #244]	; f758 <gen_host6+0x2b8>
    f660:	add	r0, pc, r0
    f664:	bl	2068 <sf_bpf_error>
    f668:	ldr	r0, [pc, #240]	; f760 <gen_host6+0x2c0>
    f66c:	add	r0, pc, r0
    f670:	bl	2068 <sf_bpf_error>
    f674:	ldr	r0, [pc, #232]	; f764 <gen_host6+0x2c4>
    f678:	add	r0, pc, r0
    f67c:	bl	2068 <sf_bpf_error>
    f680:	ldr	r0, [pc, #224]	; f768 <gen_host6+0x2c8>
    f684:	add	r0, pc, r0
    f688:	bl	2068 <sf_bpf_error>
    f68c:	ldr	r0, [pc, #168]	; f73c <gen_host6+0x29c>
    f690:	add	r0, pc, r0
    f694:	bl	2068 <sf_bpf_error>
    f698:	ldr	r0, [pc, #160]	; f740 <gen_host6+0x2a0>
    f69c:	add	r0, pc, r0
    f6a0:	bl	2068 <sf_bpf_error>
    f6a4:	ldr	r0, [pc, #156]	; f748 <gen_host6+0x2a8>
    f6a8:	add	r0, pc, r0
    f6ac:	bl	2068 <sf_bpf_error>
    f6b0:	ldr	r0, [pc, #180]	; f76c <gen_host6+0x2cc>
    f6b4:	add	r0, pc, r0
    f6b8:	bl	2068 <sf_bpf_error>
    f6bc:	ldr	r0, [pc, #172]	; f770 <gen_host6+0x2d0>
    f6c0:	add	r0, pc, r0
    f6c4:	bl	2068 <sf_bpf_error>
    f6c8:	ldr	r0, [pc, #164]	; f774 <gen_host6+0x2d4>
    f6cc:	add	r0, pc, r0
    f6d0:	bl	2068 <sf_bpf_error>
    f6d4:	ldr	r0, [pc, #156]	; f778 <gen_host6+0x2d8>
    f6d8:	add	r0, pc, r0
    f6dc:	bl	2068 <sf_bpf_error>
    f6e0:	ldr	r0, [pc, #148]	; f77c <gen_host6+0x2dc>
    f6e4:	add	r0, pc, r0
    f6e8:	bl	2068 <sf_bpf_error>
    f6ec:	ldr	r0, [pc, #140]	; f780 <gen_host6+0x2e0>
    f6f0:	add	r0, pc, r0
    f6f4:	bl	2068 <sf_bpf_error>
    f6f8:	ldr	r0, [pc, #132]	; f784 <gen_host6+0x2e4>
    f6fc:	add	r0, pc, r0
    f700:	bl	2068 <sf_bpf_error>
    f704:	ldr	r0, [pc, #124]	; f788 <gen_host6+0x2e8>
    f708:	add	r0, pc, r0
    f70c:	bl	2068 <sf_bpf_error>
    f710:	.word	0x0001adf0
    f714:	.word	0x0001b95e
    f718:	.word	0x0001b9c8
    f71c:	.word	0x0001b9d0
    f720:	.word	0x0001b9fe
    f724:	.word	0x0001b684
    f728:	.word	0x0001b65b
    f72c:	.word	0x0001b68a
    f730:	.word	0x0001b69b
    f734:	.word	0x0001b6ad
    f738:	.word	0x0001b6bf
    f73c:	.word	0x0001b665
    f740:	.word	0x0001b676
    f744:	.word	0x0001b70c
    f748:	.word	0x0001b6ad
    f74c:	.word	0x0001b9b3
    f750:	.word	0x0001b731
    f754:	.word	0x0001b760
    f758:	.word	0x0001b75f
    f75c:	.word	0x0001b790
    f760:	.word	0x0001b7bf
    f764:	.word	0x0001b7d2
    f768:	.word	0x0001b7e2
    f76c:	.word	0x0001b7cf
    f770:	.word	0x0001b7e6
    f774:	.word	0x0001b7f8
    f778:	.word	0x0001b80a
    f77c:	.word	0x0001b81c
    f780:	.word	0x0001b82d
    f784:	.word	0x0001b844
    f788:	.word	0x0001b859

0000f78c <gen_port>:
    f78c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    f790:	add	fp, sp, #24
    f794:	sub	sp, sp, #16
    f798:	mov	r9, r0
    f79c:	mov	r0, #2048	; 0x800
    f7a0:	mov	r8, r2
    f7a4:	mov	r5, r1
    f7a8:	bl	71fc <gen_linktype>
    f7ac:	mov	r4, r0
    f7b0:	cmp	r5, #16
    f7b4:	bgt	f838 <gen_port+0xac>
    f7b8:	cmn	r5, #1
    f7bc:	bne	f86c <gen_port+0xe0>
    f7c0:	mov	r0, r9
    f7c4:	mov	r1, #6
    f7c8:	mov	r2, r8
    f7cc:	bl	a19c <sf_gen_portop>
    f7d0:	mov	r6, r0
    f7d4:	mov	r0, r9
    f7d8:	mov	r1, #17
    f7dc:	mov	r2, r8
    f7e0:	bl	a19c <sf_gen_portop>
    f7e4:	mov	r5, r0
    f7e8:	ldr	r0, [r6, #44]	; 0x2c
    f7ec:	cmp	r6, #0
    f7f0:	mov	r7, r5
    f7f4:	clz	r0, r0
    f7f8:	lsr	r1, r0, #5
    f7fc:	str	r1, [r6, #44]	; 0x2c
    f800:	ldr	r0, [r7, #96]!	; 0x60
    f804:	beq	f87c <gen_port+0xf0>
    f808:	mov	r2, r6
    f80c:	cmp	r1, #0
    f810:	mov	r1, #84	; 0x54
    f814:	add	r3, r2, #84	; 0x54
    f818:	movweq	r1, #60	; 0x3c
    f81c:	addeq	r3, r2, #60	; 0x3c
    f820:	ldr	r2, [r2, r1]
    f824:	str	r0, [r3]
    f828:	cmp	r2, #0
    f82c:	beq	f878 <gen_port+0xec>
    f830:	ldr	r1, [r2, #44]	; 0x2c
    f834:	b	f80c <gen_port+0x80>
    f838:	cmp	r5, #132	; 0x84
    f83c:	cmpne	r5, #17
    f840:	bne	f874 <gen_port+0xe8>
    f844:	mov	r0, r9
    f848:	mov	r1, r5
    f84c:	mov	r2, r8
    f850:	bl	a19c <sf_gen_portop>
    f854:	mov	r7, r0
    f858:	mov	r5, r0
    f85c:	ldr	r0, [r7, #96]!	; 0x60
    f860:	cmp	r4, #0
    f864:	bne	f98c <gen_port+0x200>
    f868:	b	f9b8 <gen_port+0x22c>
    f86c:	cmp	r5, #6
    f870:	beq	f844 <gen_port+0xb8>
    f874:	bl	edc <abort@plt>
    f878:	ldr	r1, [r6, #44]	; 0x2c
    f87c:	clz	r0, r1
    f880:	cmp	r5, #0
    f884:	lsr	r0, r0, #5
    f888:	str	r0, [r6, #44]	; 0x2c
    f88c:	str	r5, [sp, #4]
    f890:	beq	f8c0 <gen_port+0x134>
    f894:	mov	r1, r5
    f898:	ldr	r2, [r1, #44]	; 0x2c
    f89c:	add	r0, r1, #84	; 0x54
    f8a0:	cmp	r2, #0
    f8a4:	mov	r2, #84	; 0x54
    f8a8:	movweq	r2, #60	; 0x3c
    f8ac:	addeq	r0, r1, #60	; 0x3c
    f8b0:	ldr	r1, [r1, r2]
    f8b4:	cmp	r1, #0
    f8b8:	bne	f898 <gen_port+0x10c>
    f8bc:	b	f8c4 <gen_port+0x138>
    f8c0:	add	r0, sp, #4
    f8c4:	str	r6, [r0]
    f8c8:	mov	r1, #132	; 0x84
    f8cc:	mov	r2, r8
    f8d0:	ldr	r0, [r6, #96]	; 0x60
    f8d4:	str	r0, [r7]
    f8d8:	mov	r0, r9
    f8dc:	bl	a19c <sf_gen_portop>
    f8e0:	ldr	r1, [r0, #44]	; 0x2c
    f8e4:	cmp	r0, #0
    f8e8:	clz	r1, r1
    f8ec:	lsr	r1, r1, #5
    f8f0:	str	r1, [r0, #44]	; 0x2c
    f8f4:	beq	f930 <gen_port+0x1a4>
    f8f8:	ldr	r2, [r7]
    f8fc:	mov	r3, r0
    f900:	cmp	r1, #0
    f904:	mov	r1, #84	; 0x54
    f908:	add	r6, r3, #84	; 0x54
    f90c:	movweq	r1, #60	; 0x3c
    f910:	addeq	r6, r3, #60	; 0x3c
    f914:	ldr	r3, [r3, r1]
    f918:	str	r2, [r6]
    f91c:	cmp	r3, #0
    f920:	beq	f92c <gen_port+0x1a0>
    f924:	ldr	r1, [r3, #44]	; 0x2c
    f928:	b	f900 <gen_port+0x174>
    f92c:	ldr	r1, [r0, #44]	; 0x2c
    f930:	clz	r1, r1
    f934:	cmp	r5, #0
    f938:	lsr	r1, r1, #5
    f93c:	str	r1, [r0, #44]	; 0x2c
    f940:	str	r5, [sp, #12]
    f944:	beq	f974 <gen_port+0x1e8>
    f948:	mov	r2, r5
    f94c:	ldr	r3, [r2, #44]	; 0x2c
    f950:	add	r1, r2, #84	; 0x54
    f954:	cmp	r3, #0
    f958:	mov	r3, #84	; 0x54
    f95c:	movweq	r3, #60	; 0x3c
    f960:	addeq	r1, r2, #60	; 0x3c
    f964:	ldr	r2, [r2, r3]
    f968:	cmp	r2, #0
    f96c:	bne	f94c <gen_port+0x1c0>
    f970:	b	f978 <gen_port+0x1ec>
    f974:	add	r1, sp, #12
    f978:	str	r0, [r1]
    f97c:	ldr	r0, [r0, #96]	; 0x60
    f980:	str	r0, [r7]
    f984:	cmp	r4, #0
    f988:	beq	f9b8 <gen_port+0x22c>
    f98c:	mov	r1, r4
    f990:	ldr	r2, [r1, #44]	; 0x2c
    f994:	add	r3, r1, #84	; 0x54
    f998:	cmp	r2, #0
    f99c:	mov	r2, #84	; 0x54
    f9a0:	movweq	r2, #60	; 0x3c
    f9a4:	addeq	r3, r1, #60	; 0x3c
    f9a8:	ldr	r1, [r1, r2]
    f9ac:	str	r0, [r3]
    f9b0:	cmp	r1, #0
    f9b4:	bne	f990 <gen_port+0x204>
    f9b8:	ldr	r0, [r4, #44]	; 0x2c
    f9bc:	cmp	r5, #0
    f9c0:	clz	r0, r0
    f9c4:	lsr	r0, r0, #5
    f9c8:	str	r0, [r4, #44]	; 0x2c
    f9cc:	ldr	r1, [r5, #44]	; 0x2c
    f9d0:	clz	r0, r1
    f9d4:	lsr	r0, r0, #5
    f9d8:	str	r0, [r5, #44]	; 0x2c
    f9dc:	str	r5, [sp, #8]
    f9e0:	beq	fa2c <gen_port+0x2a0>
    f9e4:	cmp	r1, #0
    f9e8:	mov	r1, #60	; 0x3c
    f9ec:	add	r0, r5, #60	; 0x3c
    f9f0:	movweq	r1, #84	; 0x54
    f9f4:	addeq	r0, r5, #84	; 0x54
    f9f8:	ldr	r1, [r5, r1]
    f9fc:	cmp	r1, #0
    fa00:	beq	fa30 <gen_port+0x2a4>
    fa04:	ldr	r2, [r1, #44]	; 0x2c
    fa08:	add	r0, r1, #84	; 0x54
    fa0c:	cmp	r2, #0
    fa10:	mov	r2, #84	; 0x54
    fa14:	movweq	r2, #60	; 0x3c
    fa18:	addeq	r0, r1, #60	; 0x3c
    fa1c:	ldr	r1, [r1, r2]
    fa20:	cmp	r1, #0
    fa24:	bne	fa04 <gen_port+0x278>
    fa28:	b	fa30 <gen_port+0x2a4>
    fa2c:	add	r0, sp, #8
    fa30:	str	r4, [r0]
    fa34:	ldr	r0, [r5, #44]	; 0x2c
    fa38:	clz	r0, r0
    fa3c:	lsr	r0, r0, #5
    fa40:	str	r0, [r5, #44]	; 0x2c
    fa44:	ldr	r0, [r4, #96]	; 0x60
    fa48:	str	r0, [r7]
    fa4c:	mov	r0, r5
    fa50:	sub	sp, fp, #24
    fa54:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000fa58 <gen_port6>:
    fa58:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    fa5c:	add	fp, sp, #24
    fa60:	sub	sp, sp, #16
    fa64:	mov	r9, r0
    fa68:	movw	r0, #34525	; 0x86dd
    fa6c:	mov	r8, r2
    fa70:	mov	r5, r1
    fa74:	bl	71fc <gen_linktype>
    fa78:	mov	r4, r0
    fa7c:	cmp	r5, #16
    fa80:	bgt	fb04 <gen_port6+0xac>
    fa84:	cmn	r5, #1
    fa88:	bne	fb38 <gen_port6+0xe0>
    fa8c:	mov	r0, r9
    fa90:	mov	r1, #6
    fa94:	mov	r2, r8
    fa98:	bl	a9bc <sf_gen_portop6>
    fa9c:	mov	r6, r0
    faa0:	mov	r0, r9
    faa4:	mov	r1, #17
    faa8:	mov	r2, r8
    faac:	bl	a9bc <sf_gen_portop6>
    fab0:	mov	r5, r0
    fab4:	ldr	r0, [r6, #44]	; 0x2c
    fab8:	cmp	r6, #0
    fabc:	mov	r7, r5
    fac0:	clz	r0, r0
    fac4:	lsr	r1, r0, #5
    fac8:	str	r1, [r6, #44]	; 0x2c
    facc:	ldr	r0, [r7, #96]!	; 0x60
    fad0:	beq	fb48 <gen_port6+0xf0>
    fad4:	mov	r2, r6
    fad8:	cmp	r1, #0
    fadc:	mov	r1, #84	; 0x54
    fae0:	add	r3, r2, #84	; 0x54
    fae4:	movweq	r1, #60	; 0x3c
    fae8:	addeq	r3, r2, #60	; 0x3c
    faec:	ldr	r2, [r2, r1]
    faf0:	str	r0, [r3]
    faf4:	cmp	r2, #0
    faf8:	beq	fb44 <gen_port6+0xec>
    fafc:	ldr	r1, [r2, #44]	; 0x2c
    fb00:	b	fad8 <gen_port6+0x80>
    fb04:	cmp	r5, #132	; 0x84
    fb08:	cmpne	r5, #17
    fb0c:	bne	fb40 <gen_port6+0xe8>
    fb10:	mov	r0, r9
    fb14:	mov	r1, r5
    fb18:	mov	r2, r8
    fb1c:	bl	a9bc <sf_gen_portop6>
    fb20:	mov	r7, r0
    fb24:	mov	r5, r0
    fb28:	ldr	r0, [r7, #96]!	; 0x60
    fb2c:	cmp	r4, #0
    fb30:	bne	fc58 <gen_port6+0x200>
    fb34:	b	fc84 <gen_port6+0x22c>
    fb38:	cmp	r5, #6
    fb3c:	beq	fb10 <gen_port6+0xb8>
    fb40:	bl	edc <abort@plt>
    fb44:	ldr	r1, [r6, #44]	; 0x2c
    fb48:	clz	r0, r1
    fb4c:	cmp	r5, #0
    fb50:	lsr	r0, r0, #5
    fb54:	str	r0, [r6, #44]	; 0x2c
    fb58:	str	r5, [sp, #4]
    fb5c:	beq	fb8c <gen_port6+0x134>
    fb60:	mov	r1, r5
    fb64:	ldr	r2, [r1, #44]	; 0x2c
    fb68:	add	r0, r1, #84	; 0x54
    fb6c:	cmp	r2, #0
    fb70:	mov	r2, #84	; 0x54
    fb74:	movweq	r2, #60	; 0x3c
    fb78:	addeq	r0, r1, #60	; 0x3c
    fb7c:	ldr	r1, [r1, r2]
    fb80:	cmp	r1, #0
    fb84:	bne	fb64 <gen_port6+0x10c>
    fb88:	b	fb90 <gen_port6+0x138>
    fb8c:	add	r0, sp, #4
    fb90:	str	r6, [r0]
    fb94:	mov	r1, #132	; 0x84
    fb98:	mov	r2, r8
    fb9c:	ldr	r0, [r6, #96]	; 0x60
    fba0:	str	r0, [r7]
    fba4:	mov	r0, r9
    fba8:	bl	a9bc <sf_gen_portop6>
    fbac:	ldr	r1, [r0, #44]	; 0x2c
    fbb0:	cmp	r0, #0
    fbb4:	clz	r1, r1
    fbb8:	lsr	r1, r1, #5
    fbbc:	str	r1, [r0, #44]	; 0x2c
    fbc0:	beq	fbfc <gen_port6+0x1a4>
    fbc4:	ldr	r2, [r7]
    fbc8:	mov	r3, r0
    fbcc:	cmp	r1, #0
    fbd0:	mov	r1, #84	; 0x54
    fbd4:	add	r6, r3, #84	; 0x54
    fbd8:	movweq	r1, #60	; 0x3c
    fbdc:	addeq	r6, r3, #60	; 0x3c
    fbe0:	ldr	r3, [r3, r1]
    fbe4:	str	r2, [r6]
    fbe8:	cmp	r3, #0
    fbec:	beq	fbf8 <gen_port6+0x1a0>
    fbf0:	ldr	r1, [r3, #44]	; 0x2c
    fbf4:	b	fbcc <gen_port6+0x174>
    fbf8:	ldr	r1, [r0, #44]	; 0x2c
    fbfc:	clz	r1, r1
    fc00:	cmp	r5, #0
    fc04:	lsr	r1, r1, #5
    fc08:	str	r1, [r0, #44]	; 0x2c
    fc0c:	str	r5, [sp, #12]
    fc10:	beq	fc40 <gen_port6+0x1e8>
    fc14:	mov	r2, r5
    fc18:	ldr	r3, [r2, #44]	; 0x2c
    fc1c:	add	r1, r2, #84	; 0x54
    fc20:	cmp	r3, #0
    fc24:	mov	r3, #84	; 0x54
    fc28:	movweq	r3, #60	; 0x3c
    fc2c:	addeq	r1, r2, #60	; 0x3c
    fc30:	ldr	r2, [r2, r3]
    fc34:	cmp	r2, #0
    fc38:	bne	fc18 <gen_port6+0x1c0>
    fc3c:	b	fc44 <gen_port6+0x1ec>
    fc40:	add	r1, sp, #12
    fc44:	str	r0, [r1]
    fc48:	ldr	r0, [r0, #96]	; 0x60
    fc4c:	str	r0, [r7]
    fc50:	cmp	r4, #0
    fc54:	beq	fc84 <gen_port6+0x22c>
    fc58:	mov	r1, r4
    fc5c:	ldr	r2, [r1, #44]	; 0x2c
    fc60:	add	r3, r1, #84	; 0x54
    fc64:	cmp	r2, #0
    fc68:	mov	r2, #84	; 0x54
    fc6c:	movweq	r2, #60	; 0x3c
    fc70:	addeq	r3, r1, #60	; 0x3c
    fc74:	ldr	r1, [r1, r2]
    fc78:	str	r0, [r3]
    fc7c:	cmp	r1, #0
    fc80:	bne	fc5c <gen_port6+0x204>
    fc84:	ldr	r0, [r4, #44]	; 0x2c
    fc88:	cmp	r5, #0
    fc8c:	clz	r0, r0
    fc90:	lsr	r0, r0, #5
    fc94:	str	r0, [r4, #44]	; 0x2c
    fc98:	ldr	r1, [r5, #44]	; 0x2c
    fc9c:	clz	r0, r1
    fca0:	lsr	r0, r0, #5
    fca4:	str	r0, [r5, #44]	; 0x2c
    fca8:	str	r5, [sp, #8]
    fcac:	beq	fcf8 <gen_port6+0x2a0>
    fcb0:	cmp	r1, #0
    fcb4:	mov	r1, #60	; 0x3c
    fcb8:	add	r0, r5, #60	; 0x3c
    fcbc:	movweq	r1, #84	; 0x54
    fcc0:	addeq	r0, r5, #84	; 0x54
    fcc4:	ldr	r1, [r5, r1]
    fcc8:	cmp	r1, #0
    fccc:	beq	fcfc <gen_port6+0x2a4>
    fcd0:	ldr	r2, [r1, #44]	; 0x2c
    fcd4:	add	r0, r1, #84	; 0x54
    fcd8:	cmp	r2, #0
    fcdc:	mov	r2, #84	; 0x54
    fce0:	movweq	r2, #60	; 0x3c
    fce4:	addeq	r0, r1, #60	; 0x3c
    fce8:	ldr	r1, [r1, r2]
    fcec:	cmp	r1, #0
    fcf0:	bne	fcd0 <gen_port6+0x278>
    fcf4:	b	fcfc <gen_port6+0x2a4>
    fcf8:	add	r0, sp, #8
    fcfc:	str	r4, [r0]
    fd00:	ldr	r0, [r5, #44]	; 0x2c
    fd04:	clz	r0, r0
    fd08:	lsr	r0, r0, #5
    fd0c:	str	r0, [r5, #44]	; 0x2c
    fd10:	ldr	r0, [r4, #96]	; 0x60
    fd14:	str	r0, [r7]
    fd18:	mov	r0, r5
    fd1c:	sub	sp, fp, #24
    fd20:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000fd24 <gen_portrange>:
    fd24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fd28:	add	fp, sp, #28
    fd2c:	sub	sp, sp, #12
    fd30:	mov	sl, r0
    fd34:	mov	r0, #2048	; 0x800
    fd38:	mov	r8, r3
    fd3c:	mov	r5, r2
    fd40:	mov	r9, r1
    fd44:	bl	71fc <gen_linktype>
    fd48:	mov	r4, r0
    fd4c:	cmp	r5, #16
    fd50:	bgt	fddc <gen_portrange+0xb8>
    fd54:	cmn	r5, #1
    fd58:	bne	fe14 <gen_portrange+0xf0>
    fd5c:	mov	r0, sl
    fd60:	mov	r1, r9
    fd64:	mov	r2, #6
    fd68:	mov	r3, r8
    fd6c:	bl	acd8 <sf_gen_portrangeop>
    fd70:	mov	r7, r0
    fd74:	mov	r0, sl
    fd78:	mov	r1, r9
    fd7c:	mov	r2, #17
    fd80:	mov	r3, r8
    fd84:	bl	acd8 <sf_gen_portrangeop>
    fd88:	mov	r5, r0
    fd8c:	ldr	r0, [r7, #44]	; 0x2c
    fd90:	cmp	r7, #0
    fd94:	mov	r6, r5
    fd98:	clz	r0, r0
    fd9c:	lsr	r1, r0, #5
    fda0:	str	r1, [r7, #44]	; 0x2c
    fda4:	ldr	r0, [r6, #96]!	; 0x60
    fda8:	beq	fe24 <gen_portrange+0x100>
    fdac:	mov	r2, r7
    fdb0:	cmp	r1, #0
    fdb4:	mov	r1, #84	; 0x54
    fdb8:	add	r3, r2, #84	; 0x54
    fdbc:	movweq	r1, #60	; 0x3c
    fdc0:	addeq	r3, r2, #60	; 0x3c
    fdc4:	ldr	r2, [r2, r1]
    fdc8:	str	r0, [r3]
    fdcc:	cmp	r2, #0
    fdd0:	beq	fe20 <gen_portrange+0xfc>
    fdd4:	ldr	r1, [r2, #44]	; 0x2c
    fdd8:	b	fdb0 <gen_portrange+0x8c>
    fddc:	cmp	r5, #132	; 0x84
    fde0:	cmpne	r5, #17
    fde4:	bne	fe1c <gen_portrange+0xf8>
    fde8:	mov	r0, sl
    fdec:	mov	r1, r9
    fdf0:	mov	r2, r5
    fdf4:	mov	r3, r8
    fdf8:	bl	acd8 <sf_gen_portrangeop>
    fdfc:	mov	r6, r0
    fe00:	mov	r5, r0
    fe04:	ldr	r0, [r6, #96]!	; 0x60
    fe08:	cmp	r4, #0
    fe0c:	bne	ff38 <gen_portrange+0x214>
    fe10:	b	ff64 <gen_portrange+0x240>
    fe14:	cmp	r5, #6
    fe18:	beq	fde8 <gen_portrange+0xc4>
    fe1c:	bl	edc <abort@plt>
    fe20:	ldr	r1, [r7, #44]	; 0x2c
    fe24:	clz	r0, r1
    fe28:	cmp	r5, #0
    fe2c:	lsr	r0, r0, #5
    fe30:	str	r0, [r7, #44]	; 0x2c
    fe34:	str	r5, [sp]
    fe38:	beq	fe68 <gen_portrange+0x144>
    fe3c:	mov	r1, r5
    fe40:	ldr	r2, [r1, #44]	; 0x2c
    fe44:	add	r0, r1, #84	; 0x54
    fe48:	cmp	r2, #0
    fe4c:	mov	r2, #84	; 0x54
    fe50:	movweq	r2, #60	; 0x3c
    fe54:	addeq	r0, r1, #60	; 0x3c
    fe58:	ldr	r1, [r1, r2]
    fe5c:	cmp	r1, #0
    fe60:	bne	fe40 <gen_portrange+0x11c>
    fe64:	b	fe6c <gen_portrange+0x148>
    fe68:	mov	r0, sp
    fe6c:	str	r7, [r0]
    fe70:	mov	r1, r9
    fe74:	mov	r2, #132	; 0x84
    fe78:	mov	r3, r8
    fe7c:	ldr	r0, [r7, #96]	; 0x60
    fe80:	str	r0, [r6]
    fe84:	mov	r0, sl
    fe88:	bl	acd8 <sf_gen_portrangeop>
    fe8c:	ldr	r1, [r0, #44]	; 0x2c
    fe90:	cmp	r0, #0
    fe94:	clz	r1, r1
    fe98:	lsr	r1, r1, #5
    fe9c:	str	r1, [r0, #44]	; 0x2c
    fea0:	beq	fedc <gen_portrange+0x1b8>
    fea4:	ldr	r2, [r6]
    fea8:	mov	r3, r0
    feac:	cmp	r1, #0
    feb0:	mov	r1, #84	; 0x54
    feb4:	add	r7, r3, #84	; 0x54
    feb8:	movweq	r1, #60	; 0x3c
    febc:	addeq	r7, r3, #60	; 0x3c
    fec0:	ldr	r3, [r3, r1]
    fec4:	str	r2, [r7]
    fec8:	cmp	r3, #0
    fecc:	beq	fed8 <gen_portrange+0x1b4>
    fed0:	ldr	r1, [r3, #44]	; 0x2c
    fed4:	b	feac <gen_portrange+0x188>
    fed8:	ldr	r1, [r0, #44]	; 0x2c
    fedc:	clz	r1, r1
    fee0:	cmp	r5, #0
    fee4:	lsr	r1, r1, #5
    fee8:	str	r1, [r0, #44]	; 0x2c
    feec:	str	r5, [sp, #8]
    fef0:	beq	ff20 <gen_portrange+0x1fc>
    fef4:	mov	r2, r5
    fef8:	ldr	r3, [r2, #44]	; 0x2c
    fefc:	add	r1, r2, #84	; 0x54
    ff00:	cmp	r3, #0
    ff04:	mov	r3, #84	; 0x54
    ff08:	movweq	r3, #60	; 0x3c
    ff0c:	addeq	r1, r2, #60	; 0x3c
    ff10:	ldr	r2, [r2, r3]
    ff14:	cmp	r2, #0
    ff18:	bne	fef8 <gen_portrange+0x1d4>
    ff1c:	b	ff24 <gen_portrange+0x200>
    ff20:	add	r1, sp, #8
    ff24:	str	r0, [r1]
    ff28:	ldr	r0, [r0, #96]	; 0x60
    ff2c:	str	r0, [r6]
    ff30:	cmp	r4, #0
    ff34:	beq	ff64 <gen_portrange+0x240>
    ff38:	mov	r1, r4
    ff3c:	ldr	r2, [r1, #44]	; 0x2c
    ff40:	add	r3, r1, #84	; 0x54
    ff44:	cmp	r2, #0
    ff48:	mov	r2, #84	; 0x54
    ff4c:	movweq	r2, #60	; 0x3c
    ff50:	addeq	r3, r1, #60	; 0x3c
    ff54:	ldr	r1, [r1, r2]
    ff58:	str	r0, [r3]
    ff5c:	cmp	r1, #0
    ff60:	bne	ff3c <gen_portrange+0x218>
    ff64:	ldr	r0, [r4, #44]	; 0x2c
    ff68:	cmp	r5, #0
    ff6c:	clz	r0, r0
    ff70:	lsr	r0, r0, #5
    ff74:	str	r0, [r4, #44]	; 0x2c
    ff78:	ldr	r1, [r5, #44]	; 0x2c
    ff7c:	clz	r0, r1
    ff80:	lsr	r0, r0, #5
    ff84:	str	r0, [r5, #44]	; 0x2c
    ff88:	str	r5, [sp, #4]
    ff8c:	beq	ffd8 <gen_portrange+0x2b4>
    ff90:	cmp	r1, #0
    ff94:	mov	r1, #60	; 0x3c
    ff98:	add	r0, r5, #60	; 0x3c
    ff9c:	movweq	r1, #84	; 0x54
    ffa0:	addeq	r0, r5, #84	; 0x54
    ffa4:	ldr	r1, [r5, r1]
    ffa8:	cmp	r1, #0
    ffac:	beq	ffdc <gen_portrange+0x2b8>
    ffb0:	ldr	r2, [r1, #44]	; 0x2c
    ffb4:	add	r0, r1, #84	; 0x54
    ffb8:	cmp	r2, #0
    ffbc:	mov	r2, #84	; 0x54
    ffc0:	movweq	r2, #60	; 0x3c
    ffc4:	addeq	r0, r1, #60	; 0x3c
    ffc8:	ldr	r1, [r1, r2]
    ffcc:	cmp	r1, #0
    ffd0:	bne	ffb0 <gen_portrange+0x28c>
    ffd4:	b	ffdc <gen_portrange+0x2b8>
    ffd8:	add	r0, sp, #4
    ffdc:	str	r4, [r0]
    ffe0:	ldr	r0, [r5, #44]	; 0x2c
    ffe4:	clz	r0, r0
    ffe8:	lsr	r0, r0, #5
    ffec:	str	r0, [r5, #44]	; 0x2c
    fff0:	ldr	r0, [r4, #96]	; 0x60
    fff4:	str	r0, [r6]
    fff8:	mov	r0, r5
    fffc:	sub	sp, fp, #28
   10000:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010004 <gen_portrange6>:
   10004:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10008:	add	fp, sp, #28
   1000c:	sub	sp, sp, #12
   10010:	mov	sl, r0
   10014:	movw	r0, #34525	; 0x86dd
   10018:	mov	r8, r3
   1001c:	mov	r5, r2
   10020:	mov	r9, r1
   10024:	bl	71fc <gen_linktype>
   10028:	mov	r4, r0
   1002c:	cmp	r5, #16
   10030:	bgt	100bc <gen_portrange6+0xb8>
   10034:	cmn	r5, #1
   10038:	bne	100f4 <gen_portrange6+0xf0>
   1003c:	mov	r0, sl
   10040:	mov	r1, r9
   10044:	mov	r2, #6
   10048:	mov	r3, r8
   1004c:	bl	b53c <sf_gen_portrangeop6>
   10050:	mov	r7, r0
   10054:	mov	r0, sl
   10058:	mov	r1, r9
   1005c:	mov	r2, #17
   10060:	mov	r3, r8
   10064:	bl	b53c <sf_gen_portrangeop6>
   10068:	mov	r5, r0
   1006c:	ldr	r0, [r7, #44]	; 0x2c
   10070:	cmp	r7, #0
   10074:	mov	r6, r5
   10078:	clz	r0, r0
   1007c:	lsr	r1, r0, #5
   10080:	str	r1, [r7, #44]	; 0x2c
   10084:	ldr	r0, [r6, #96]!	; 0x60
   10088:	beq	10104 <gen_portrange6+0x100>
   1008c:	mov	r2, r7
   10090:	cmp	r1, #0
   10094:	mov	r1, #84	; 0x54
   10098:	add	r3, r2, #84	; 0x54
   1009c:	movweq	r1, #60	; 0x3c
   100a0:	addeq	r3, r2, #60	; 0x3c
   100a4:	ldr	r2, [r2, r1]
   100a8:	str	r0, [r3]
   100ac:	cmp	r2, #0
   100b0:	beq	10100 <gen_portrange6+0xfc>
   100b4:	ldr	r1, [r2, #44]	; 0x2c
   100b8:	b	10090 <gen_portrange6+0x8c>
   100bc:	cmp	r5, #132	; 0x84
   100c0:	cmpne	r5, #17
   100c4:	bne	100fc <gen_portrange6+0xf8>
   100c8:	mov	r0, sl
   100cc:	mov	r1, r9
   100d0:	mov	r2, r5
   100d4:	mov	r3, r8
   100d8:	bl	b53c <sf_gen_portrangeop6>
   100dc:	mov	r6, r0
   100e0:	mov	r5, r0
   100e4:	ldr	r0, [r6, #96]!	; 0x60
   100e8:	cmp	r4, #0
   100ec:	bne	10218 <gen_portrange6+0x214>
   100f0:	b	10244 <gen_portrange6+0x240>
   100f4:	cmp	r5, #6
   100f8:	beq	100c8 <gen_portrange6+0xc4>
   100fc:	bl	edc <abort@plt>
   10100:	ldr	r1, [r7, #44]	; 0x2c
   10104:	clz	r0, r1
   10108:	cmp	r5, #0
   1010c:	lsr	r0, r0, #5
   10110:	str	r0, [r7, #44]	; 0x2c
   10114:	str	r5, [sp]
   10118:	beq	10148 <gen_portrange6+0x144>
   1011c:	mov	r1, r5
   10120:	ldr	r2, [r1, #44]	; 0x2c
   10124:	add	r0, r1, #84	; 0x54
   10128:	cmp	r2, #0
   1012c:	mov	r2, #84	; 0x54
   10130:	movweq	r2, #60	; 0x3c
   10134:	addeq	r0, r1, #60	; 0x3c
   10138:	ldr	r1, [r1, r2]
   1013c:	cmp	r1, #0
   10140:	bne	10120 <gen_portrange6+0x11c>
   10144:	b	1014c <gen_portrange6+0x148>
   10148:	mov	r0, sp
   1014c:	str	r7, [r0]
   10150:	mov	r1, r9
   10154:	mov	r2, #132	; 0x84
   10158:	mov	r3, r8
   1015c:	ldr	r0, [r7, #96]	; 0x60
   10160:	str	r0, [r6]
   10164:	mov	r0, sl
   10168:	bl	b53c <sf_gen_portrangeop6>
   1016c:	ldr	r1, [r0, #44]	; 0x2c
   10170:	cmp	r0, #0
   10174:	clz	r1, r1
   10178:	lsr	r1, r1, #5
   1017c:	str	r1, [r0, #44]	; 0x2c
   10180:	beq	101bc <gen_portrange6+0x1b8>
   10184:	ldr	r2, [r6]
   10188:	mov	r3, r0
   1018c:	cmp	r1, #0
   10190:	mov	r1, #84	; 0x54
   10194:	add	r7, r3, #84	; 0x54
   10198:	movweq	r1, #60	; 0x3c
   1019c:	addeq	r7, r3, #60	; 0x3c
   101a0:	ldr	r3, [r3, r1]
   101a4:	str	r2, [r7]
   101a8:	cmp	r3, #0
   101ac:	beq	101b8 <gen_portrange6+0x1b4>
   101b0:	ldr	r1, [r3, #44]	; 0x2c
   101b4:	b	1018c <gen_portrange6+0x188>
   101b8:	ldr	r1, [r0, #44]	; 0x2c
   101bc:	clz	r1, r1
   101c0:	cmp	r5, #0
   101c4:	lsr	r1, r1, #5
   101c8:	str	r1, [r0, #44]	; 0x2c
   101cc:	str	r5, [sp, #8]
   101d0:	beq	10200 <gen_portrange6+0x1fc>
   101d4:	mov	r2, r5
   101d8:	ldr	r3, [r2, #44]	; 0x2c
   101dc:	add	r1, r2, #84	; 0x54
   101e0:	cmp	r3, #0
   101e4:	mov	r3, #84	; 0x54
   101e8:	movweq	r3, #60	; 0x3c
   101ec:	addeq	r1, r2, #60	; 0x3c
   101f0:	ldr	r2, [r2, r3]
   101f4:	cmp	r2, #0
   101f8:	bne	101d8 <gen_portrange6+0x1d4>
   101fc:	b	10204 <gen_portrange6+0x200>
   10200:	add	r1, sp, #8
   10204:	str	r0, [r1]
   10208:	ldr	r0, [r0, #96]	; 0x60
   1020c:	str	r0, [r6]
   10210:	cmp	r4, #0
   10214:	beq	10244 <gen_portrange6+0x240>
   10218:	mov	r1, r4
   1021c:	ldr	r2, [r1, #44]	; 0x2c
   10220:	add	r3, r1, #84	; 0x54
   10224:	cmp	r2, #0
   10228:	mov	r2, #84	; 0x54
   1022c:	movweq	r2, #60	; 0x3c
   10230:	addeq	r3, r1, #60	; 0x3c
   10234:	ldr	r1, [r1, r2]
   10238:	str	r0, [r3]
   1023c:	cmp	r1, #0
   10240:	bne	1021c <gen_portrange6+0x218>
   10244:	ldr	r0, [r4, #44]	; 0x2c
   10248:	cmp	r5, #0
   1024c:	clz	r0, r0
   10250:	lsr	r0, r0, #5
   10254:	str	r0, [r4, #44]	; 0x2c
   10258:	ldr	r1, [r5, #44]	; 0x2c
   1025c:	clz	r0, r1
   10260:	lsr	r0, r0, #5
   10264:	str	r0, [r5, #44]	; 0x2c
   10268:	str	r5, [sp, #4]
   1026c:	beq	102b8 <gen_portrange6+0x2b4>
   10270:	cmp	r1, #0
   10274:	mov	r1, #60	; 0x3c
   10278:	add	r0, r5, #60	; 0x3c
   1027c:	movweq	r1, #84	; 0x54
   10280:	addeq	r0, r5, #84	; 0x54
   10284:	ldr	r1, [r5, r1]
   10288:	cmp	r1, #0
   1028c:	beq	102bc <gen_portrange6+0x2b8>
   10290:	ldr	r2, [r1, #44]	; 0x2c
   10294:	add	r0, r1, #84	; 0x54
   10298:	cmp	r2, #0
   1029c:	mov	r2, #84	; 0x54
   102a0:	movweq	r2, #60	; 0x3c
   102a4:	addeq	r0, r1, #60	; 0x3c
   102a8:	ldr	r1, [r1, r2]
   102ac:	cmp	r1, #0
   102b0:	bne	10290 <gen_portrange6+0x28c>
   102b4:	b	102bc <gen_portrange6+0x2b8>
   102b8:	add	r0, sp, #4
   102bc:	str	r4, [r0]
   102c0:	ldr	r0, [r5, #44]	; 0x2c
   102c4:	clz	r0, r0
   102c8:	lsr	r0, r0, #5
   102cc:	str	r0, [r5, #44]	; 0x2c
   102d0:	ldr	r0, [r4, #96]	; 0x60
   102d4:	str	r0, [r6]
   102d8:	mov	r0, r5
   102dc:	sub	sp, fp, #28
   102e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000102e4 <lookup_proto>:
   102e4:	push	{r4, sl, fp, lr}
   102e8:	add	fp, sp, #8
   102ec:	mov	r4, r0
   102f0:	mvn	r0, #0
   102f4:	cmp	r1, #24
   102f8:	bhi	1037c <lookup_proto+0x98>
   102fc:	add	r2, pc, #4
   10300:	ldr	r1, [r2, r1, lsl #2]
   10304:	add	pc, r2, r1
   10308:	.word	0x00000064
   1030c:	.word	0x00000078
   10310:	.word	0x00000064
   10314:	.word	0x00000074
   10318:	.word	0x00000074
   1031c:	.word	0x00000074
   10320:	.word	0x00000074
   10324:	.word	0x00000074
   10328:	.word	0x00000074
   1032c:	.word	0x00000074
   10330:	.word	0x00000074
   10334:	.word	0x00000074
   10338:	.word	0x00000074
   1033c:	.word	0x00000074
   10340:	.word	0x00000074
   10344:	.word	0x00000074
   10348:	.word	0x00000074
   1034c:	.word	0x00000064
   10350:	.word	0x00000074
   10354:	.word	0x00000074
   10358:	.word	0x00000074
   1035c:	.word	0x00000074
   10360:	.word	0x00000074
   10364:	.word	0x00000074
   10368:	.word	0x000000a8
   1036c:	mov	r0, r4
   10370:	bl	20694 <pcap_nametoproto>
   10374:	cmn	r0, #1
   10378:	beq	10420 <lookup_proto+0x13c>
   1037c:	pop	{r4, sl, fp, pc}
   10380:	mov	r0, r4
   10384:	bl	206b0 <pcap_nametoeproto>
   10388:	cmn	r0, #1
   1038c:	bne	1037c <lookup_proto+0x98>
   10390:	mov	r0, r4
   10394:	bl	2071c <pcap_nametollc>
   10398:	cmn	r0, #1
   1039c:	bne	1037c <lookup_proto+0x98>
   103a0:	ldr	r0, [pc, #140]	; 10434 <lookup_proto+0x150>
   103a4:	mov	r1, r4
   103a8:	add	r0, pc, r0
   103ac:	bl	2068 <sf_bpf_error>
   103b0:	ldr	r1, [pc, #128]	; 10438 <lookup_proto+0x154>
   103b4:	mov	r0, r4
   103b8:	add	r1, pc, r1
   103bc:	bl	d20 <strcmp@plt>
   103c0:	cmp	r0, #0
   103c4:	beq	10410 <lookup_proto+0x12c>
   103c8:	ldr	r1, [pc, #108]	; 1043c <lookup_proto+0x158>
   103cc:	mov	r0, r4
   103d0:	add	r1, pc, r1
   103d4:	bl	d20 <strcmp@plt>
   103d8:	cmp	r0, #0
   103dc:	beq	10418 <lookup_proto+0x134>
   103e0:	ldr	r1, [pc, #88]	; 10440 <lookup_proto+0x15c>
   103e4:	mov	r0, r4
   103e8:	add	r1, pc, r1
   103ec:	bl	d20 <strcmp@plt>
   103f0:	mov	r1, r0
   103f4:	mov	r0, #129	; 0x81
   103f8:	cmp	r1, #0
   103fc:	popeq	{r4, sl, fp, pc}
   10400:	ldr	r0, [pc, #60]	; 10444 <lookup_proto+0x160>
   10404:	mov	r1, r4
   10408:	add	r0, pc, r0
   1040c:	bl	2068 <sf_bpf_error>
   10410:	mov	r0, #130	; 0x82
   10414:	pop	{r4, sl, fp, pc}
   10418:	mov	r0, #131	; 0x83
   1041c:	pop	{r4, sl, fp, pc}
   10420:	ldr	r0, [pc, #8]	; 10430 <lookup_proto+0x14c>
   10424:	mov	r1, r4
   10428:	add	r0, pc, r0
   1042c:	bl	2068 <sf_bpf_error>
   10430:	.word	0x0001abdf
   10434:	.word	0x0001ac75
   10438:	.word	0x0001ac7e
   1043c:	.word	0x0001ac6b
   10440:	.word	0x0001ac58
   10444:	.word	0x0001ac3d

00010448 <gen_protochain>:
   10448:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1044c:	add	fp, sp, #28
   10450:	sub	sp, sp, #436	; 0x1b4
   10454:	ldr	r6, [pc, #4084]	; 11450 <gen_protochain+0x1008>
   10458:	mov	r9, r1
   1045c:	mov	sl, r0
   10460:	mvn	r0, #15
   10464:	ldr	r6, [pc, r6]
   10468:	ldr	r7, [pc, #4068]	; 11454 <gen_protochain+0x100c>
   1046c:	ldr	r1, [pc, #4068]	; 11458 <gen_protochain+0x1010>
   10470:	add	r7, pc, r7
   10474:	add	r1, pc, r1
   10478:	ldr	r2, [r7, r6, lsl #2]
   1047c:	cmp	r2, #0
   10480:	beq	104b0 <gen_protochain+0x68>
   10484:	add	r2, r6, #1
   10488:	adds	r0, r0, #1
   1048c:	asr	r3, r2, #31
   10490:	add	r3, r2, r3, lsr #28
   10494:	bic	r3, r3, #15
   10498:	sub	r6, r2, r3
   1049c:	str	r6, [r1]
   104a0:	bcc	10478 <gen_protochain+0x30>
   104a4:	ldr	r0, [pc, #4016]	; 1145c <gen_protochain+0x1014>
   104a8:	add	r0, pc, r0
   104ac:	bl	2068 <sf_bpf_error>
   104b0:	mov	r0, #1
   104b4:	mov	r1, #0
   104b8:	mov	r2, #400	; 0x190
   104bc:	str	r0, [r7, r6, lsl #2]
   104c0:	add	r0, sp, #24
   104c4:	bl	e58 <memset@plt>
   104c8:	cmp	r9, #17
   104cc:	cmpne	r9, #2
   104d0:	bne	10648 <gen_protochain+0x200>
   104d4:	ldr	r0, [pc, #3972]	; 11460 <gen_protochain+0x1018>
   104d8:	ldr	r0, [pc, r0]
   104dc:	sub	r1, r0, #105	; 0x69
   104e0:	cmp	r1, #22
   104e4:	bhi	104fc <gen_protochain+0xb4>
   104e8:	movw	r3, #16385	; 0x4001
   104ec:	mov	r2, #1
   104f0:	movt	r3, #64	; 0x40
   104f4:	tst	r3, r2, lsl r1
   104f8:	bne	10508 <gen_protochain+0xc0>
   104fc:	cmp	r0, #192	; 0xc0
   10500:	cmpne	r0, #163	; 0xa3
   10504:	bne	10514 <gen_protochain+0xcc>
   10508:	ldr	r0, [pc, #3924]	; 11464 <gen_protochain+0x101c>
   1050c:	add	r0, pc, r0
   10510:	bl	2068 <sf_bpf_error>
   10514:	ldr	r0, [pc, #3916]	; 11468 <gen_protochain+0x1020>
   10518:	mov	r1, #1
   1051c:	add	r0, pc, r0
   10520:	str	r1, [r0]
   10524:	ldr	r0, [pc, #3904]	; 1146c <gen_protochain+0x1024>
   10528:	ldr	r0, [pc, r0]
   1052c:	ldr	r5, [pc, #3900]	; 11470 <gen_protochain+0x1028>
   10530:	add	r5, pc, r5
   10534:	ldr	r4, [r5, r0, lsl #3]!
   10538:	cmp	r4, #19
   1053c:	bhi	10590 <gen_protochain+0x148>
   10540:	ldr	r2, [pc, #3884]	; 11474 <gen_protochain+0x102c>
   10544:	add	r1, r0, #1
   10548:	cmp	r0, #15
   1054c:	add	r2, pc, r2
   10550:	str	r1, [r2]
   10554:	bge	11ef8 <gen_protochain+0x1ab0>
   10558:	mov	r0, #1024	; 0x400
   1055c:	lsl	r4, r0, r1
   10560:	mov	r0, r4
   10564:	bl	dec <malloc@plt>
   10568:	cmp	r0, #0
   1056c:	str	r0, [r5, #12]
   10570:	beq	11ef8 <gen_protochain+0x1ab0>
   10574:	mov	r1, #0
   10578:	mov	r2, r4
   1057c:	add	r5, r5, #8
   10580:	bl	e58 <memset@plt>
   10584:	cmp	r4, #19
   10588:	str	r4, [r5]
   1058c:	bls	11ef8 <gen_protochain+0x1ab0>
   10590:	sub	r0, r4, #20
   10594:	mov	r2, #0
   10598:	cmp	r9, #17
   1059c:	str	r0, [r5]
   105a0:	ldr	r1, [r5, #4]
   105a4:	str	r2, [r1, r0]!
   105a8:	str	sl, [sp, #16]
   105ac:	str	r9, [sp, #20]
   105b0:	str	r1, [sp, #24]
   105b4:	beq	106bc <gen_protochain+0x274>
   105b8:	cmp	r9, #2
   105bc:	bne	12030 <gen_protochain+0x1be8>
   105c0:	mov	r0, #2048	; 0x800
   105c4:	bl	71fc <gen_linktype>
   105c8:	mov	r7, r0
   105cc:	ldr	r0, [pc, #3980]	; 11560 <gen_protochain+0x1118>
   105d0:	ldr	r0, [pc, r0]
   105d4:	ldr	ip, [pc, #3976]	; 11564 <gen_protochain+0x111c>
   105d8:	add	ip, pc, ip
   105dc:	mov	r4, ip
   105e0:	ldr	r5, [r4, r0, lsl #3]!
   105e4:	cmp	r5, #19
   105e8:	bhi	1079c <gen_protochain+0x354>
   105ec:	ldr	r1, [pc, #3956]	; 11568 <gen_protochain+0x1120>
   105f0:	add	sl, r0, #1
   105f4:	cmp	r0, #15
   105f8:	add	r1, pc, r1
   105fc:	str	sl, [r1]
   10600:	bge	11ef8 <gen_protochain+0x1ab0>
   10604:	mov	r0, #1024	; 0x400
   10608:	lsl	r5, r0, sl
   1060c:	mov	r0, r5
   10610:	bl	dec <malloc@plt>
   10614:	cmp	r0, #0
   10618:	str	r0, [r4, #12]
   1061c:	beq	11ef8 <gen_protochain+0x1ab0>
   10620:	mov	r1, #0
   10624:	mov	r2, r5
   10628:	add	r4, r4, #8
   1062c:	bl	e58 <memset@plt>
   10630:	str	r5, [r4]
   10634:	cmp	r5, #19
   10638:	ldr	ip, [pc, #4068]	; 11624 <gen_protochain+0x11dc>
   1063c:	add	ip, pc, ip
   10640:	bhi	107a0 <gen_protochain+0x358>
   10644:	b	11ef8 <gen_protochain+0x1ab0>
   10648:	cmp	r9, #0
   1064c:	bne	12024 <gen_protochain+0x1bdc>
   10650:	mov	r0, sl
   10654:	mov	r1, #2
   10658:	bl	10448 <gen_protochain>
   1065c:	mov	r4, r0
   10660:	mov	r0, sl
   10664:	mov	r1, #17
   10668:	bl	10448 <gen_protochain>
   1066c:	ldr	r1, [r4, #44]	; 0x2c
   10670:	cmp	r4, #0
   10674:	clz	r1, r1
   10678:	lsr	r3, r1, #5
   1067c:	mov	r1, r0
   10680:	str	r3, [r4, #44]	; 0x2c
   10684:	ldr	r2, [r1, #96]!	; 0x60
   10688:	beq	10748 <gen_protochain+0x300>
   1068c:	mov	r7, r4
   10690:	cmp	r3, #0
   10694:	mov	r3, #84	; 0x54
   10698:	add	r6, r7, #84	; 0x54
   1069c:	movweq	r3, #60	; 0x3c
   106a0:	addeq	r6, r7, #60	; 0x3c
   106a4:	ldr	r7, [r7, r3]
   106a8:	str	r2, [r6]
   106ac:	cmp	r7, #0
   106b0:	beq	10744 <gen_protochain+0x2fc>
   106b4:	ldr	r3, [r7, #44]	; 0x2c
   106b8:	b	10690 <gen_protochain+0x248>
   106bc:	movw	r0, #34525	; 0x86dd
   106c0:	bl	71fc <gen_linktype>
   106c4:	ldr	ip, [pc, #4080]	; 116bc <gen_protochain+0x1274>
   106c8:	mov	r8, r0
   106cc:	ldr	r0, [pc, #4076]	; 116c0 <gen_protochain+0x1278>
   106d0:	ldr	r0, [pc, r0]
   106d4:	add	ip, pc, ip
   106d8:	mov	r4, ip
   106dc:	ldr	r5, [r4, r0, lsl #3]!
   106e0:	cmp	r5, #19
   106e4:	bhi	10864 <gen_protochain+0x41c>
   106e8:	ldr	r1, [pc, #4052]	; 116c4 <gen_protochain+0x127c>
   106ec:	add	r7, r0, #1
   106f0:	cmp	r0, #15
   106f4:	add	r1, pc, r1
   106f8:	str	r7, [r1]
   106fc:	bge	11ef8 <gen_protochain+0x1ab0>
   10700:	mov	r0, #1024	; 0x400
   10704:	lsl	r5, r0, r7
   10708:	mov	r0, r5
   1070c:	bl	dec <malloc@plt>
   10710:	cmp	r0, #0
   10714:	str	r0, [r4, #12]
   10718:	beq	11ef8 <gen_protochain+0x1ab0>
   1071c:	mov	r1, #0
   10720:	mov	r2, r5
   10724:	add	r4, r4, #8
   10728:	bl	e58 <memset@plt>
   1072c:	str	r5, [r4]
   10730:	cmp	r5, #19
   10734:	ldr	ip, [pc, #3980]	; 116c8 <gen_protochain+0x1280>
   10738:	add	ip, pc, ip
   1073c:	bhi	10868 <gen_protochain+0x420>
   10740:	b	11ef8 <gen_protochain+0x1ab0>
   10744:	ldr	r3, [r4, #44]	; 0x2c
   10748:	clz	r2, r3
   1074c:	cmp	r0, #0
   10750:	lsr	r2, r2, #5
   10754:	str	r2, [r4, #44]	; 0x2c
   10758:	str	r0, [fp, #-36]	; 0xffffffdc
   1075c:	beq	10790 <gen_protochain+0x348>
   10760:	mov	r3, r0
   10764:	ldr	r7, [r3, #44]	; 0x2c
   10768:	add	r2, r3, #84	; 0x54
   1076c:	cmp	r7, #0
   10770:	mov	r7, #84	; 0x54
   10774:	movweq	r7, #60	; 0x3c
   10778:	addeq	r2, r3, #60	; 0x3c
   1077c:	ldr	r3, [r3, r7]
   10780:	cmp	r3, #0
   10784:	bne	10764 <gen_protochain+0x31c>
   10788:	str	r4, [r2]
   1078c:	b	12010 <gen_protochain+0x1bc8>
   10790:	sub	r2, fp, #36	; 0x24
   10794:	str	r4, [r2]
   10798:	b	12010 <gen_protochain+0x1bc8>
   1079c:	mov	sl, r0
   107a0:	sub	r0, r5, #20
   107a4:	mov	r2, #48	; 0x30
   107a8:	str	r7, [sp, #4]
   107ac:	mov	r8, ip
   107b0:	str	r0, [r4]
   107b4:	ldr	r1, [r4, #4]
   107b8:	str	r2, [r1, r0]!
   107bc:	str	r1, [sp, #28]
   107c0:	ldr	r2, [pc, #4016]	; 11778 <gen_protochain+0x1330>
   107c4:	ldr	r2, [pc, r2]
   107c8:	ldr	r0, [pc, #4012]	; 1177c <gen_protochain+0x1334>
   107cc:	ldr	r0, [pc, r0]
   107d0:	str	r2, [sp, #8]
   107d4:	add	r7, r0, r2
   107d8:	str	r0, [sp, #12]
   107dc:	add	r0, r7, #9
   107e0:	str	r0, [r1, #12]
   107e4:	ldr	r5, [r8, sl, lsl #3]!
   107e8:	cmp	r5, #19
   107ec:	bhi	10850 <gen_protochain+0x408>
   107f0:	ldr	r0, [pc, #3976]	; 11780 <gen_protochain+0x1338>
   107f4:	add	r9, sl, #1
   107f8:	cmp	sl, #15
   107fc:	add	r0, pc, r0
   10800:	str	r9, [r0]
   10804:	bge	11ef8 <gen_protochain+0x1ab0>
   10808:	mov	r0, #1024	; 0x400
   1080c:	lsl	r5, r0, r9
   10810:	mov	r0, r5
   10814:	bl	dec <malloc@plt>
   10818:	ldr	sl, [sp, #16]
   1081c:	cmp	r0, #0
   10820:	str	r0, [r8, #12]
   10824:	beq	11ef8 <gen_protochain+0x1ab0>
   10828:	mov	r1, #0
   1082c:	mov	r2, r5
   10830:	add	r8, r8, #8
   10834:	bl	e58 <memset@plt>
   10838:	str	r5, [r8]
   1083c:	cmp	r5, #19
   10840:	ldr	ip, [pc, #4056]	; 11820 <gen_protochain+0x13d8>
   10844:	add	ip, pc, ip
   10848:	bhi	10858 <gen_protochain+0x410>
   1084c:	b	11ef8 <gen_protochain+0x1ab0>
   10850:	mov	r9, sl
   10854:	ldr	sl, [sp, #16]
   10858:	sub	r0, r5, #20
   1085c:	mov	r1, #177	; 0xb1
   10860:	b	10924 <gen_protochain+0x4dc>
   10864:	mov	r7, r0
   10868:	sub	r0, r5, #20
   1086c:	mov	r2, #48	; 0x30
   10870:	str	r8, [sp, #4]
   10874:	mov	r8, ip
   10878:	str	r0, [r4]
   1087c:	ldr	r1, [r4, #4]
   10880:	str	r2, [r1, r0]!
   10884:	str	r1, [sp, #28]
   10888:	ldr	r0, [pc, #3988]	; 11824 <gen_protochain+0x13dc>
   1088c:	ldr	r0, [pc, r0]
   10890:	ldr	r2, [pc, #3984]	; 11828 <gen_protochain+0x13e0>
   10894:	ldr	r2, [pc, r2]
   10898:	str	r0, [sp, #12]
   1089c:	add	r0, r2, r0
   108a0:	str	r2, [sp, #8]
   108a4:	add	r0, r0, #6
   108a8:	str	r0, [r1, #12]
   108ac:	ldr	r5, [r8, r7, lsl #3]!
   108b0:	cmp	r5, #19
   108b4:	bhi	10914 <gen_protochain+0x4cc>
   108b8:	ldr	r0, [pc, #3948]	; 1182c <gen_protochain+0x13e4>
   108bc:	add	r9, r7, #1
   108c0:	cmp	r7, #15
   108c4:	add	r0, pc, r0
   108c8:	str	r9, [r0]
   108cc:	bge	11ef8 <gen_protochain+0x1ab0>
   108d0:	mov	r0, #1024	; 0x400
   108d4:	lsl	r5, r0, r9
   108d8:	mov	r0, r5
   108dc:	bl	dec <malloc@plt>
   108e0:	cmp	r0, #0
   108e4:	str	r0, [r8, #12]
   108e8:	beq	11ef8 <gen_protochain+0x1ab0>
   108ec:	mov	r1, #0
   108f0:	mov	r2, r5
   108f4:	add	r8, r8, #8
   108f8:	bl	e58 <memset@plt>
   108fc:	str	r5, [r8]
   10900:	cmp	r5, #19
   10904:	ldr	ip, [pc, #4036]	; 118d0 <gen_protochain+0x1488>
   10908:	add	ip, pc, ip
   1090c:	bhi	10918 <gen_protochain+0x4d0>
   10910:	b	11ef8 <gen_protochain+0x1ab0>
   10914:	mov	r9, r7
   10918:	sub	r0, r5, #20
   1091c:	mov	r7, #40	; 0x28
   10920:	mov	r1, #1
   10924:	str	r0, [r8]
   10928:	ldr	r2, [r8, #4]
   1092c:	mov	r4, ip
   10930:	str	r1, [r2, r0]!
   10934:	str	r2, [sp, #32]
   10938:	str	r7, [r2, #12]
   1093c:	ldr	r5, [r4, r9, lsl #3]!
   10940:	cmp	r5, #19
   10944:	bhi	109a4 <gen_protochain+0x55c>
   10948:	ldr	r0, [pc, #3972]	; 118d4 <gen_protochain+0x148c>
   1094c:	add	r7, r9, #1
   10950:	cmp	r9, #15
   10954:	add	r0, pc, r0
   10958:	str	r7, [r0]
   1095c:	bge	11ef8 <gen_protochain+0x1ab0>
   10960:	mov	r0, #1024	; 0x400
   10964:	lsl	r5, r0, r7
   10968:	mov	r0, r5
   1096c:	bl	dec <malloc@plt>
   10970:	cmp	r0, #0
   10974:	str	r0, [r4, #12]
   10978:	beq	11ef8 <gen_protochain+0x1ab0>
   1097c:	mov	r1, #0
   10980:	mov	r2, r5
   10984:	add	r4, r4, #8
   10988:	bl	e58 <memset@plt>
   1098c:	str	r5, [r4]
   10990:	cmp	r5, #19
   10994:	ldr	ip, [pc, #4052]	; 11970 <gen_protochain+0x1528>
   10998:	add	ip, pc, ip
   1099c:	bhi	109a8 <gen_protochain+0x560>
   109a0:	b	11ef8 <gen_protochain+0x1ab0>
   109a4:	mov	r7, r9
   109a8:	sub	r0, r5, #20
   109ac:	mov	r8, #21
   109b0:	str	r0, [r4]
   109b4:	ldr	r1, [r4, #4]
   109b8:	mov	r4, ip
   109bc:	str	r8, [r1, r0]!
   109c0:	str	r1, [sp, #36]	; 0x24
   109c4:	str	sl, [r1, #12]
   109c8:	mov	sl, #0
   109cc:	ldr	r0, [sp, #36]	; 0x24
   109d0:	str	sl, [r0, #4]
   109d4:	ldr	r0, [sp, #36]	; 0x24
   109d8:	str	sl, [r0, #8]
   109dc:	ldr	r5, [r4, r7, lsl #3]!
   109e0:	cmp	r5, #19
   109e4:	bhi	10a44 <gen_protochain+0x5fc>
   109e8:	ldr	r0, [pc, #3972]	; 11974 <gen_protochain+0x152c>
   109ec:	add	r9, r7, #1
   109f0:	cmp	r7, #15
   109f4:	add	r0, pc, r0
   109f8:	str	r9, [r0]
   109fc:	bge	11ef8 <gen_protochain+0x1ab0>
   10a00:	mov	r0, #1024	; 0x400
   10a04:	lsl	r5, r0, r9
   10a08:	mov	r0, r5
   10a0c:	bl	dec <malloc@plt>
   10a10:	cmp	r0, #0
   10a14:	str	r0, [r4, #12]
   10a18:	beq	11ef8 <gen_protochain+0x1ab0>
   10a1c:	mov	r1, #0
   10a20:	mov	r2, r5
   10a24:	add	r4, r4, #8
   10a28:	bl	e58 <memset@plt>
   10a2c:	str	r5, [r4]
   10a30:	cmp	r5, #19
   10a34:	ldr	ip, [pc, #4040]	; 11a04 <gen_protochain+0x15bc>
   10a38:	add	ip, pc, ip
   10a3c:	bhi	10a48 <gen_protochain+0x600>
   10a40:	b	11ef8 <gen_protochain+0x1ab0>
   10a44:	mov	r9, r7
   10a48:	sub	r0, r5, #20
   10a4c:	mov	r7, ip
   10a50:	str	r0, [r4]
   10a54:	ldr	r1, [r4, #4]
   10a58:	str	r8, [r1, r0]!
   10a5c:	str	r1, [sp, #40]	; 0x28
   10a60:	str	sl, [r1, #4]
   10a64:	mov	r1, #59	; 0x3b
   10a68:	ldr	r0, [sp, #40]	; 0x28
   10a6c:	str	sl, [r0, #8]
   10a70:	ldr	r0, [sp, #40]	; 0x28
   10a74:	str	r1, [r0, #12]
   10a78:	ldr	r0, [sp, #36]	; 0x24
   10a7c:	ldr	r1, [sp, #40]	; 0x28
   10a80:	str	r1, [r0, #8]
   10a84:	ldr	r0, [sp, #20]
   10a88:	ldr	r5, [r7, r9, lsl #3]!
   10a8c:	cmp	r0, #17
   10a90:	bne	10af8 <gen_protochain+0x6b0>
   10a94:	cmp	r5, #19
   10a98:	bhi	10b5c <gen_protochain+0x714>
   10a9c:	ldr	r0, [pc, #4088]	; 11a9c <gen_protochain+0x1654>
   10aa0:	add	r8, r9, #1
   10aa4:	cmp	r9, #15
   10aa8:	add	r0, pc, r0
   10aac:	str	r8, [r0]
   10ab0:	bge	11ef8 <gen_protochain+0x1ab0>
   10ab4:	mov	r0, #1024	; 0x400
   10ab8:	lsl	r5, r0, r8
   10abc:	mov	r0, r5
   10ac0:	bl	dec <malloc@plt>
   10ac4:	cmp	r0, #0
   10ac8:	str	r0, [r7, #12]
   10acc:	beq	11ef8 <gen_protochain+0x1ab0>
   10ad0:	mov	r1, #0
   10ad4:	mov	r2, r5
   10ad8:	add	r7, r7, #8
   10adc:	bl	e58 <memset@plt>
   10ae0:	str	r5, [r7]
   10ae4:	cmp	r5, #19
   10ae8:	ldr	ip, [pc, #4016]	; 11aa0 <gen_protochain+0x1658>
   10aec:	add	ip, pc, ip
   10af0:	bhi	10b60 <gen_protochain+0x718>
   10af4:	b	11ef8 <gen_protochain+0x1ab0>
   10af8:	cmp	r5, #19
   10afc:	bhi	10c08 <gen_protochain+0x7c0>
   10b00:	ldr	r0, [pc, #3996]	; 11aa4 <gen_protochain+0x165c>
   10b04:	add	sl, r9, #1
   10b08:	cmp	r9, #15
   10b0c:	add	r0, pc, r0
   10b10:	str	sl, [r0]
   10b14:	bge	11ef8 <gen_protochain+0x1ab0>
   10b18:	mov	r0, #1024	; 0x400
   10b1c:	lsl	r5, r0, sl
   10b20:	mov	r0, r5
   10b24:	bl	dec <malloc@plt>
   10b28:	cmp	r0, #0
   10b2c:	str	r0, [r7, #12]
   10b30:	beq	11ef8 <gen_protochain+0x1ab0>
   10b34:	mov	r1, #0
   10b38:	mov	r2, r5
   10b3c:	add	r7, r7, #8
   10b40:	bl	e58 <memset@plt>
   10b44:	str	r5, [r7]
   10b48:	cmp	r5, #19
   10b4c:	ldr	ip, [pc, #4092]	; 11b50 <gen_protochain+0x1708>
   10b50:	add	ip, pc, ip
   10b54:	bhi	10c0c <gen_protochain+0x7c4>
   10b58:	b	11ef8 <gen_protochain+0x1ab0>
   10b5c:	mov	r8, r9
   10b60:	sub	r0, r5, #20
   10b64:	mov	sl, #21
   10b68:	mov	r9, #0
   10b6c:	mov	r4, ip
   10b70:	str	r0, [r7]
   10b74:	ldr	r1, [r7, #4]
   10b78:	str	sl, [r1, r0]!
   10b7c:	str	r1, [sp, #44]	; 0x2c
   10b80:	str	r9, [r1, #4]
   10b84:	ldr	r0, [sp, #44]	; 0x2c
   10b88:	str	r9, [r0, #8]
   10b8c:	ldr	r0, [sp, #44]	; 0x2c
   10b90:	str	r9, [r0, #12]
   10b94:	ldr	r0, [sp, #40]	; 0x28
   10b98:	ldr	r1, [sp, #44]	; 0x2c
   10b9c:	str	r1, [r0, #8]
   10ba0:	ldr	r5, [r4, r8, lsl #3]!
   10ba4:	cmp	r5, #19
   10ba8:	bhi	10c44 <gen_protochain+0x7fc>
   10bac:	ldr	r0, [pc, #4000]	; 11b54 <gen_protochain+0x170c>
   10bb0:	add	r7, r8, #1
   10bb4:	cmp	r8, #15
   10bb8:	add	r0, pc, r0
   10bbc:	str	r7, [r0]
   10bc0:	bge	11ef8 <gen_protochain+0x1ab0>
   10bc4:	mov	r0, #1024	; 0x400
   10bc8:	lsl	r5, r0, r7
   10bcc:	mov	r0, r5
   10bd0:	bl	dec <malloc@plt>
   10bd4:	cmp	r0, #0
   10bd8:	str	r0, [r4, #12]
   10bdc:	beq	11ef8 <gen_protochain+0x1ab0>
   10be0:	mov	r1, #0
   10be4:	mov	r2, r5
   10be8:	add	r4, r4, #8
   10bec:	bl	e58 <memset@plt>
   10bf0:	str	r5, [r4]
   10bf4:	cmp	r5, #19
   10bf8:	ldr	ip, [pc, #4080]	; 11bf0 <gen_protochain+0x17a8>
   10bfc:	add	ip, pc, ip
   10c00:	bhi	10c48 <gen_protochain+0x800>
   10c04:	b	11ef8 <gen_protochain+0x1ab0>
   10c08:	mov	sl, r9
   10c0c:	sub	r0, r5, #20
   10c10:	mov	r2, #4
   10c14:	mov	r9, #0
   10c18:	mov	r8, #6
   10c1c:	str	r0, [r7]
   10c20:	ldr	r1, [r7, #4]
   10c24:	str	r2, [r1, r0]!
   10c28:	add	r0, sp, #24
   10c2c:	str	r1, [sp, #44]	; 0x2c
   10c30:	str	r9, [r1, #12]
   10c34:	add	r0, r0, #20
   10c38:	ldr	r1, [sp, #40]	; 0x28
   10c3c:	add	r1, r1, #8
   10c40:	b	114e4 <gen_protochain+0x109c>
   10c44:	mov	r7, r8
   10c48:	sub	r0, r5, #20
   10c4c:	str	r0, [r4]
   10c50:	ldr	r1, [r4, #4]
   10c54:	mov	r4, ip
   10c58:	str	sl, [r1, r0]!
   10c5c:	str	r1, [sp, #48]	; 0x30
   10c60:	ldr	r0, [sp, #44]	; 0x2c
   10c64:	str	r1, [r0, #8]
   10c68:	mov	r1, #60	; 0x3c
   10c6c:	ldr	r0, [sp, #48]	; 0x30
   10c70:	str	r9, [r0, #4]
   10c74:	ldr	r0, [sp, #48]	; 0x30
   10c78:	str	r9, [r0, #8]
   10c7c:	ldr	r0, [sp, #48]	; 0x30
   10c80:	str	r1, [r0, #12]
   10c84:	ldr	r5, [r4, r7, lsl #3]!
   10c88:	cmp	r5, #19
   10c8c:	bhi	10cec <gen_protochain+0x8a4>
   10c90:	ldr	r0, [pc, #4076]	; 11c84 <gen_protochain+0x183c>
   10c94:	add	r8, r7, #1
   10c98:	cmp	r7, #15
   10c9c:	add	r0, pc, r0
   10ca0:	str	r8, [r0]
   10ca4:	bge	11ef8 <gen_protochain+0x1ab0>
   10ca8:	mov	r0, #1024	; 0x400
   10cac:	lsl	r5, r0, r8
   10cb0:	mov	r0, r5
   10cb4:	bl	dec <malloc@plt>
   10cb8:	cmp	r0, #0
   10cbc:	str	r0, [r4, #12]
   10cc0:	beq	11ef8 <gen_protochain+0x1ab0>
   10cc4:	mov	r1, #0
   10cc8:	mov	r2, r5
   10ccc:	add	r4, r4, #8
   10cd0:	bl	e58 <memset@plt>
   10cd4:	str	r5, [r4]
   10cd8:	cmp	r5, #19
   10cdc:	ldr	ip, [pc, #4004]	; 11c88 <gen_protochain+0x1840>
   10ce0:	add	ip, pc, ip
   10ce4:	bhi	10cf0 <gen_protochain+0x8a8>
   10ce8:	b	11ef8 <gen_protochain+0x1ab0>
   10cec:	mov	r8, r7
   10cf0:	sub	r0, r5, #20
   10cf4:	mov	r9, #0
   10cf8:	mov	r7, ip
   10cfc:	str	r0, [r4]
   10d00:	ldr	r1, [r4, #4]
   10d04:	mov	r4, #21
   10d08:	str	r4, [r1, r0]!
   10d0c:	str	r1, [sp, #52]	; 0x34
   10d10:	ldr	r0, [sp, #48]	; 0x30
   10d14:	str	r1, [r0, #8]
   10d18:	mov	r1, #43	; 0x2b
   10d1c:	ldr	r0, [sp, #52]	; 0x34
   10d20:	str	r9, [r0, #4]
   10d24:	ldr	r0, [sp, #52]	; 0x34
   10d28:	str	r9, [r0, #8]
   10d2c:	ldr	r0, [sp, #52]	; 0x34
   10d30:	str	r1, [r0, #12]
   10d34:	ldr	r5, [r7, r8, lsl #3]!
   10d38:	cmp	r5, #19
   10d3c:	bhi	10d9c <gen_protochain+0x954>
   10d40:	ldr	r0, [pc, #4056]	; 11d20 <gen_protochain+0x18d8>
   10d44:	add	sl, r8, #1
   10d48:	cmp	r8, #15
   10d4c:	add	r0, pc, r0
   10d50:	str	sl, [r0]
   10d54:	bge	11ef8 <gen_protochain+0x1ab0>
   10d58:	mov	r0, #1024	; 0x400
   10d5c:	lsl	r5, r0, sl
   10d60:	mov	r0, r5
   10d64:	bl	dec <malloc@plt>
   10d68:	cmp	r0, #0
   10d6c:	str	r0, [r7, #12]
   10d70:	beq	11ef8 <gen_protochain+0x1ab0>
   10d74:	mov	r1, #0
   10d78:	mov	r2, r5
   10d7c:	add	r7, r7, #8
   10d80:	bl	e58 <memset@plt>
   10d84:	str	r5, [r7]
   10d88:	cmp	r5, #19
   10d8c:	ldr	ip, [pc, #3984]	; 11d24 <gen_protochain+0x18dc>
   10d90:	add	ip, pc, ip
   10d94:	bhi	10da0 <gen_protochain+0x958>
   10d98:	b	11ef8 <gen_protochain+0x1ab0>
   10d9c:	mov	sl, r8
   10da0:	sub	r0, r5, #20
   10da4:	str	r0, [r7]
   10da8:	ldr	r1, [r7, #4]
   10dac:	str	r4, [r1, r0]!
   10db0:	mov	r4, ip
   10db4:	str	r1, [sp, #56]	; 0x38
   10db8:	ldr	r0, [sp, #52]	; 0x34
   10dbc:	str	r1, [r0, #8]
   10dc0:	mov	r1, #44	; 0x2c
   10dc4:	ldr	r0, [sp, #56]	; 0x38
   10dc8:	str	r9, [r0, #4]
   10dcc:	ldr	r0, [sp, #56]	; 0x38
   10dd0:	str	r9, [r0, #8]
   10dd4:	ldr	r0, [sp, #56]	; 0x38
   10dd8:	str	r1, [r0, #12]
   10ddc:	ldr	r5, [r4, sl, lsl #3]!
   10de0:	cmp	r5, #19
   10de4:	bhi	10e44 <gen_protochain+0x9fc>
   10de8:	ldr	r0, [pc, #4056]	; 11dc8 <gen_protochain+0x1980>
   10dec:	add	r7, sl, #1
   10df0:	cmp	sl, #15
   10df4:	add	r0, pc, r0
   10df8:	str	r7, [r0]
   10dfc:	bge	11ef8 <gen_protochain+0x1ab0>
   10e00:	mov	r0, #1024	; 0x400
   10e04:	lsl	r5, r0, r7
   10e08:	mov	r0, r5
   10e0c:	bl	dec <malloc@plt>
   10e10:	cmp	r0, #0
   10e14:	str	r0, [r4, #12]
   10e18:	beq	11ef8 <gen_protochain+0x1ab0>
   10e1c:	mov	r1, #0
   10e20:	mov	r2, r5
   10e24:	add	r4, r4, #8
   10e28:	bl	e58 <memset@plt>
   10e2c:	str	r5, [r4]
   10e30:	cmp	r5, #19
   10e34:	ldr	ip, [pc, #3984]	; 11dcc <gen_protochain+0x1984>
   10e38:	add	ip, pc, ip
   10e3c:	bhi	10e48 <gen_protochain+0xa00>
   10e40:	b	11ef8 <gen_protochain+0x1ab0>
   10e44:	mov	r7, sl
   10e48:	sub	r0, r5, #20
   10e4c:	mov	r2, #135	; 0x87
   10e50:	str	r0, [r4]
   10e54:	ldr	r1, [r4, #4]
   10e58:	mov	r4, ip
   10e5c:	str	r2, [r1, r0]!
   10e60:	ldr	r5, [r4, r7, lsl #3]!
   10e64:	str	r1, [sp, #60]	; 0x3c
   10e68:	cmp	r5, #19
   10e6c:	bhi	10ecc <gen_protochain+0xa84>
   10e70:	ldr	r0, [pc, #3928]	; 11dd0 <gen_protochain+0x1988>
   10e74:	add	r9, r7, #1
   10e78:	cmp	r7, #15
   10e7c:	add	r0, pc, r0
   10e80:	str	r9, [r0]
   10e84:	bge	11ef8 <gen_protochain+0x1ab0>
   10e88:	mov	r0, #1024	; 0x400
   10e8c:	lsl	r5, r0, r9
   10e90:	mov	r0, r5
   10e94:	bl	dec <malloc@plt>
   10e98:	cmp	r0, #0
   10e9c:	str	r0, [r4, #12]
   10ea0:	beq	11ef8 <gen_protochain+0x1ab0>
   10ea4:	mov	r1, #0
   10ea8:	mov	r2, r5
   10eac:	add	r4, r4, #8
   10eb0:	bl	e58 <memset@plt>
   10eb4:	str	r5, [r4]
   10eb8:	cmp	r5, #19
   10ebc:	ldr	ip, [pc, #3856]	; 11dd4 <gen_protochain+0x198c>
   10ec0:	add	ip, pc, ip
   10ec4:	bhi	10ed0 <gen_protochain+0xa88>
   10ec8:	b	11ef8 <gen_protochain+0x1ab0>
   10ecc:	mov	r9, r7
   10ed0:	sub	r0, r5, #20
   10ed4:	mov	r2, #80	; 0x50
   10ed8:	str	r0, [r4]
   10edc:	ldr	r1, [r4, #4]
   10ee0:	mov	r4, ip
   10ee4:	str	r2, [r1, r0]!
   10ee8:	ldr	r0, [sp, #12]
   10eec:	ldr	r2, [sp, #8]
   10ef0:	str	r1, [sp, #64]	; 0x40
   10ef4:	add	r8, r0, r2
   10ef8:	str	r8, [r1, #12]
   10efc:	ldr	r5, [r4, r9, lsl #3]!
   10f00:	cmp	r5, #19
   10f04:	bhi	10f64 <gen_protochain+0xb1c>
   10f08:	ldr	r0, [pc, #4084]	; 11f04 <gen_protochain+0x1abc>
   10f0c:	add	sl, r9, #1
   10f10:	cmp	r9, #15
   10f14:	add	r0, pc, r0
   10f18:	str	sl, [r0]
   10f1c:	bge	11ef8 <gen_protochain+0x1ab0>
   10f20:	mov	r0, #1024	; 0x400
   10f24:	lsl	r5, r0, sl
   10f28:	mov	r0, r5
   10f2c:	bl	dec <malloc@plt>
   10f30:	cmp	r0, #0
   10f34:	str	r0, [r4, #12]
   10f38:	beq	11ef8 <gen_protochain+0x1ab0>
   10f3c:	mov	r1, #0
   10f40:	mov	r2, r5
   10f44:	add	r4, r4, #8
   10f48:	bl	e58 <memset@plt>
   10f4c:	str	r5, [r4]
   10f50:	cmp	r5, #19
   10f54:	ldr	ip, [pc, #4012]	; 11f08 <gen_protochain+0x1ac0>
   10f58:	add	ip, pc, ip
   10f5c:	bhi	10f68 <gen_protochain+0xb20>
   10f60:	b	11ef8 <gen_protochain+0x1ab0>
   10f64:	mov	sl, r9
   10f68:	sub	r0, r5, #20
   10f6c:	mov	r2, #2
   10f70:	mov	r7, ip
   10f74:	str	r0, [r4]
   10f78:	ldr	r1, [r4, #4]
   10f7c:	str	r2, [r1, r0]!
   10f80:	str	r1, [sp, #68]	; 0x44
   10f84:	str	r6, [r1, #12]
   10f88:	ldr	r5, [r7, sl, lsl #3]!
   10f8c:	cmp	r5, #19
   10f90:	bhi	10ff0 <gen_protochain+0xba8>
   10f94:	ldr	r0, [pc, #3952]	; 11f0c <gen_protochain+0x1ac4>
   10f98:	add	r4, sl, #1
   10f9c:	cmp	sl, #15
   10fa0:	add	r0, pc, r0
   10fa4:	str	r4, [r0]
   10fa8:	bge	11ef8 <gen_protochain+0x1ab0>
   10fac:	mov	r0, #1024	; 0x400
   10fb0:	lsl	r5, r0, r4
   10fb4:	mov	r0, r5
   10fb8:	bl	dec <malloc@plt>
   10fbc:	cmp	r0, #0
   10fc0:	str	r0, [r7, #12]
   10fc4:	beq	11ef8 <gen_protochain+0x1ab0>
   10fc8:	mov	r1, #0
   10fcc:	mov	r2, r5
   10fd0:	add	r7, r7, #8
   10fd4:	bl	e58 <memset@plt>
   10fd8:	str	r5, [r7]
   10fdc:	cmp	r5, #19
   10fe0:	ldr	ip, [pc, #3880]	; 11f10 <gen_protochain+0x1ac8>
   10fe4:	add	ip, pc, ip
   10fe8:	bhi	10ff4 <gen_protochain+0xbac>
   10fec:	b	11ef8 <gen_protochain+0x1ab0>
   10ff0:	mov	r4, sl
   10ff4:	sub	r0, r5, #20
   10ff8:	mov	r2, #135	; 0x87
   10ffc:	str	r0, [r7]
   11000:	ldr	r1, [r7, #4]
   11004:	mov	r7, ip
   11008:	str	r2, [r1, r0]!
   1100c:	ldr	r5, [r7, r4, lsl #3]!
   11010:	str	r1, [sp, #72]	; 0x48
   11014:	cmp	r5, #19
   11018:	bhi	11078 <gen_protochain+0xc30>
   1101c:	ldr	r0, [pc, #4092]	; 12020 <gen_protochain+0x1bd8>
   11020:	add	r9, r4, #1
   11024:	cmp	r4, #15
   11028:	add	r0, pc, r0
   1102c:	str	r9, [r0]
   11030:	bge	11ef8 <gen_protochain+0x1ab0>
   11034:	mov	r0, #1024	; 0x400
   11038:	lsl	r5, r0, r9
   1103c:	mov	r0, r5
   11040:	bl	dec <malloc@plt>
   11044:	cmp	r0, #0
   11048:	str	r0, [r7, #12]
   1104c:	beq	11ef8 <gen_protochain+0x1ab0>
   11050:	mov	r1, #0
   11054:	mov	r2, r5
   11058:	add	r7, r7, #8
   1105c:	bl	e58 <memset@plt>
   11060:	str	r5, [r7]
   11064:	cmp	r5, #19
   11068:	ldr	ip, [pc, #4048]	; 12040 <gen_protochain+0x1bf8>
   1106c:	add	ip, pc, ip
   11070:	bhi	1107c <gen_protochain+0xc34>
   11074:	b	11ef8 <gen_protochain+0x1ab0>
   11078:	mov	r9, r4
   1107c:	sub	r0, r5, #20
   11080:	mov	r2, #4
   11084:	str	r0, [r7]
   11088:	ldr	r1, [r7, #4]
   1108c:	mov	r7, ip
   11090:	str	r2, [r1, r0]!
   11094:	mov	r0, #1
   11098:	str	r1, [sp, #76]	; 0x4c
   1109c:	str	r0, [r1, #12]
   110a0:	ldr	r5, [r7, r9, lsl #3]!
   110a4:	cmp	r5, #19
   110a8:	bhi	11108 <gen_protochain+0xcc0>
   110ac:	ldr	r0, [pc, #3984]	; 12044 <gen_protochain+0x1bfc>
   110b0:	add	r4, r9, #1
   110b4:	cmp	r9, #15
   110b8:	add	r0, pc, r0
   110bc:	str	r4, [r0]
   110c0:	bge	11ef8 <gen_protochain+0x1ab0>
   110c4:	mov	r0, #1024	; 0x400
   110c8:	lsl	r5, r0, r4
   110cc:	mov	r0, r5
   110d0:	bl	dec <malloc@plt>
   110d4:	cmp	r0, #0
   110d8:	str	r0, [r7, #12]
   110dc:	beq	11ef8 <gen_protochain+0x1ab0>
   110e0:	mov	r1, #0
   110e4:	mov	r2, r5
   110e8:	add	r7, r7, #8
   110ec:	bl	e58 <memset@plt>
   110f0:	str	r5, [r7]
   110f4:	cmp	r5, #19
   110f8:	ldr	ip, [pc, #3912]	; 12048 <gen_protochain+0x1c00>
   110fc:	add	ip, pc, ip
   11100:	bhi	1110c <gen_protochain+0xcc4>
   11104:	b	11ef8 <gen_protochain+0x1ab0>
   11108:	mov	r4, r9
   1110c:	sub	r0, r5, #20
   11110:	mov	r2, #7
   11114:	str	r0, [r7]
   11118:	ldr	r1, [r7, #4]
   1111c:	mov	r7, ip
   11120:	str	r2, [r1, r0]!
   11124:	ldr	r5, [r7, r4, lsl #3]!
   11128:	str	r1, [sp, #80]	; 0x50
   1112c:	cmp	r5, #19
   11130:	bhi	11190 <gen_protochain+0xd48>
   11134:	ldr	r0, [pc, #3856]	; 1204c <gen_protochain+0x1c04>
   11138:	add	r9, r4, #1
   1113c:	cmp	r4, #15
   11140:	add	r0, pc, r0
   11144:	str	r9, [r0]
   11148:	bge	11ef8 <gen_protochain+0x1ab0>
   1114c:	mov	r0, #1024	; 0x400
   11150:	lsl	r5, r0, r9
   11154:	mov	r0, r5
   11158:	bl	dec <malloc@plt>
   1115c:	cmp	r0, #0
   11160:	str	r0, [r7, #12]
   11164:	beq	11ef8 <gen_protochain+0x1ab0>
   11168:	mov	r1, #0
   1116c:	mov	r2, r5
   11170:	add	r7, r7, #8
   11174:	bl	e58 <memset@plt>
   11178:	str	r5, [r7]
   1117c:	cmp	r5, #19
   11180:	ldr	ip, [pc, #3784]	; 12050 <gen_protochain+0x1c08>
   11184:	add	ip, pc, ip
   11188:	bhi	11194 <gen_protochain+0xd4c>
   1118c:	b	11ef8 <gen_protochain+0x1ab0>
   11190:	mov	r9, r4
   11194:	sub	r0, r5, #20
   11198:	mov	r2, #80	; 0x50
   1119c:	str	r0, [r7]
   111a0:	ldr	r1, [r7, #4]
   111a4:	mov	r7, ip
   111a8:	str	r2, [r1, r0]!
   111ac:	str	r1, [sp, #84]	; 0x54
   111b0:	str	r8, [r1, #12]
   111b4:	ldr	r5, [r7, r9, lsl #3]!
   111b8:	cmp	r5, #19
   111bc:	bhi	1121c <gen_protochain+0xdd4>
   111c0:	ldr	r0, [pc, #3724]	; 12054 <gen_protochain+0x1c0c>
   111c4:	add	r4, r9, #1
   111c8:	cmp	r9, #15
   111cc:	add	r0, pc, r0
   111d0:	str	r4, [r0]
   111d4:	bge	11ef8 <gen_protochain+0x1ab0>
   111d8:	mov	r0, #1024	; 0x400
   111dc:	lsl	r5, r0, r4
   111e0:	mov	r0, r5
   111e4:	bl	dec <malloc@plt>
   111e8:	cmp	r0, #0
   111ec:	str	r0, [r7, #12]
   111f0:	beq	11ef8 <gen_protochain+0x1ab0>
   111f4:	mov	r1, #0
   111f8:	mov	r2, r5
   111fc:	add	r7, r7, #8
   11200:	bl	e58 <memset@plt>
   11204:	str	r5, [r7]
   11208:	cmp	r5, #19
   1120c:	ldr	ip, [pc, #3652]	; 12058 <gen_protochain+0x1c10>
   11210:	add	ip, pc, ip
   11214:	bhi	11220 <gen_protochain+0xdd8>
   11218:	b	11ef8 <gen_protochain+0x1ab0>
   1121c:	mov	r4, r9
   11220:	sub	r0, r5, #20
   11224:	mov	r2, #4
   11228:	str	r0, [r7]
   1122c:	ldr	r1, [r7, #4]
   11230:	mov	r7, ip
   11234:	str	r2, [r1, r0]!
   11238:	mov	r0, #1
   1123c:	str	r1, [sp, #88]	; 0x58
   11240:	str	r0, [r1, #12]
   11244:	ldr	r5, [r7, r4, lsl #3]!
   11248:	cmp	r5, #19
   1124c:	bhi	112ac <gen_protochain+0xe64>
   11250:	ldr	r0, [pc, #3588]	; 1205c <gen_protochain+0x1c14>
   11254:	add	r8, r4, #1
   11258:	cmp	r4, #15
   1125c:	add	r0, pc, r0
   11260:	str	r8, [r0]
   11264:	bge	11ef8 <gen_protochain+0x1ab0>
   11268:	mov	r0, #1024	; 0x400
   1126c:	lsl	r5, r0, r8
   11270:	mov	r0, r5
   11274:	bl	dec <malloc@plt>
   11278:	cmp	r0, #0
   1127c:	str	r0, [r7, #12]
   11280:	beq	11ef8 <gen_protochain+0x1ab0>
   11284:	mov	r1, #0
   11288:	mov	r2, r5
   1128c:	add	r7, r7, #8
   11290:	bl	e58 <memset@plt>
   11294:	str	r5, [r7]
   11298:	cmp	r5, #19
   1129c:	ldr	ip, [pc, #3516]	; 12060 <gen_protochain+0x1c18>
   112a0:	add	ip, pc, ip
   112a4:	bhi	112b0 <gen_protochain+0xe68>
   112a8:	b	11ef8 <gen_protochain+0x1ab0>
   112ac:	mov	r8, r4
   112b0:	sub	r0, r5, #20
   112b4:	mov	r2, #36	; 0x24
   112b8:	mov	r4, ip
   112bc:	str	r0, [r7]
   112c0:	ldr	r1, [r7, #4]
   112c4:	str	r2, [r1, r0]!
   112c8:	mov	r0, #8
   112cc:	str	r1, [sp, #92]	; 0x5c
   112d0:	str	r0, [r1, #12]
   112d4:	ldr	r5, [r4, r8, lsl #3]!
   112d8:	cmp	r5, #19
   112dc:	bhi	1133c <gen_protochain+0xef4>
   112e0:	ldr	r0, [pc, #3452]	; 12064 <gen_protochain+0x1c1c>
   112e4:	add	r7, r8, #1
   112e8:	cmp	r8, #15
   112ec:	add	r0, pc, r0
   112f0:	str	r7, [r0]
   112f4:	bge	11ef8 <gen_protochain+0x1ab0>
   112f8:	mov	r0, #1024	; 0x400
   112fc:	lsl	r5, r0, r7
   11300:	mov	r0, r5
   11304:	bl	dec <malloc@plt>
   11308:	cmp	r0, #0
   1130c:	str	r0, [r4, #12]
   11310:	beq	11ef8 <gen_protochain+0x1ab0>
   11314:	mov	r1, #0
   11318:	mov	r2, r5
   1131c:	add	r4, r4, #8
   11320:	bl	e58 <memset@plt>
   11324:	str	r5, [r4]
   11328:	cmp	r5, #19
   1132c:	ldr	ip, [pc, #3380]	; 12068 <gen_protochain+0x1c20>
   11330:	add	ip, pc, ip
   11334:	bhi	11340 <gen_protochain+0xef8>
   11338:	b	11ef8 <gen_protochain+0x1ab0>
   1133c:	mov	r7, r8
   11340:	sub	r0, r5, #20
   11344:	mov	r2, #7
   11348:	str	r0, [r4]
   1134c:	ldr	r1, [r4, #4]
   11350:	mov	r4, ip
   11354:	str	r2, [r1, r0]!
   11358:	ldr	r5, [r4, r7, lsl #3]!
   1135c:	str	r1, [sp, #96]	; 0x60
   11360:	cmp	r5, #19
   11364:	bhi	113c4 <gen_protochain+0xf7c>
   11368:	ldr	r0, [pc, #3324]	; 1206c <gen_protochain+0x1c24>
   1136c:	add	r8, r7, #1
   11370:	cmp	r7, #15
   11374:	add	r0, pc, r0
   11378:	str	r8, [r0]
   1137c:	bge	11ef8 <gen_protochain+0x1ab0>
   11380:	mov	r0, #1024	; 0x400
   11384:	lsl	r5, r0, r8
   11388:	mov	r0, r5
   1138c:	bl	dec <malloc@plt>
   11390:	cmp	r0, #0
   11394:	str	r0, [r4, #12]
   11398:	beq	11ef8 <gen_protochain+0x1ab0>
   1139c:	mov	r1, #0
   113a0:	mov	r2, r5
   113a4:	add	r4, r4, #8
   113a8:	bl	e58 <memset@plt>
   113ac:	str	r5, [r4]
   113b0:	cmp	r5, #19
   113b4:	ldr	ip, [pc, #3252]	; 12070 <gen_protochain+0x1c28>
   113b8:	add	ip, pc, ip
   113bc:	bhi	113c8 <gen_protochain+0xf80>
   113c0:	b	11ef8 <gen_protochain+0x1ab0>
   113c4:	mov	r8, r7
   113c8:	sub	r0, r5, #20
   113cc:	mov	r2, #96	; 0x60
   113d0:	mov	r7, ip
   113d4:	str	r0, [r4]
   113d8:	ldr	r1, [r4, #4]
   113dc:	str	r2, [r1, r0]!
   113e0:	str	r1, [sp, #100]	; 0x64
   113e4:	str	r6, [r1, #12]
   113e8:	ldr	r5, [r7, r8, lsl #3]!
   113ec:	cmp	r5, #19
   113f0:	bhi	11478 <gen_protochain+0x1030>
   113f4:	ldr	r0, [pc, #3192]	; 12074 <gen_protochain+0x1c2c>
   113f8:	add	sl, r8, #1
   113fc:	cmp	r8, #15
   11400:	add	r0, pc, r0
   11404:	str	sl, [r0]
   11408:	bge	11ef8 <gen_protochain+0x1ab0>
   1140c:	mov	r0, #1024	; 0x400
   11410:	lsl	r5, r0, sl
   11414:	mov	r0, r5
   11418:	bl	dec <malloc@plt>
   1141c:	cmp	r0, #0
   11420:	str	r0, [r7, #12]
   11424:	beq	11ef8 <gen_protochain+0x1ab0>
   11428:	mov	r1, #0
   1142c:	mov	r2, r5
   11430:	add	r7, r7, #8
   11434:	bl	e58 <memset@plt>
   11438:	str	r5, [r7]
   1143c:	cmp	r5, #19
   11440:	ldr	ip, [pc, #3120]	; 12078 <gen_protochain+0x1c30>
   11444:	add	ip, pc, ip
   11448:	bhi	1147c <gen_protochain+0x1034>
   1144c:	b	11ef8 <gen_protochain+0x1ab0>
   11450:	.word	0x000370a8
   11454:	.word	0x000370a0
   11458:	.word	0x00037098
   1145c:	.word	0x0001ac25
   11460:	.word	0x00036f58
   11464:	.word	0x0001ab76
   11468:	.word	0x00037488
   1146c:	.word	0x00036fd4
   11470:	.word	0x00036f4c
   11474:	.word	0x00036fb0
   11478:	mov	sl, r8
   1147c:	sub	r1, r5, #20
   11480:	mov	r3, #5
   11484:	add	r0, sp, #24
   11488:	mov	r9, #8
   1148c:	mov	r8, #21
   11490:	str	r1, [r7]
   11494:	add	r0, r0, #36	; 0x24
   11498:	ldr	r2, [r7, #4]
   1149c:	str	r3, [r2, r1]!
   114a0:	mvn	r1, #17
   114a4:	str	r2, [sp, #104]	; 0x68
   114a8:	str	r1, [r2, #12]
   114ac:	ldr	r1, [sp, #100]	; 0x64
   114b0:	ldr	r2, [sp, #104]	; 0x68
   114b4:	str	r2, [r1, #8]
   114b8:	ldr	r1, [sp, #44]	; 0x2c
   114bc:	ldr	r2, [sp, #60]	; 0x3c
   114c0:	str	r2, [r1, #4]
   114c4:	ldr	r1, [sp, #48]	; 0x30
   114c8:	ldr	r2, [sp, #60]	; 0x3c
   114cc:	str	r2, [r1, #4]
   114d0:	ldr	r1, [sp, #52]	; 0x34
   114d4:	ldr	r2, [sp, #60]	; 0x3c
   114d8:	str	r2, [r1, #4]
   114dc:	ldr	r1, [sp, #56]	; 0x38
   114e0:	add	r1, r1, #4
   114e4:	ldr	r0, [r0]
   114e8:	mov	r4, ip
   114ec:	str	r0, [r1]
   114f0:	ldr	r5, [r4, sl, lsl #3]!
   114f4:	cmp	r5, #19
   114f8:	bhi	1156c <gen_protochain+0x1124>
   114fc:	ldr	r0, [pc, #2936]	; 1207c <gen_protochain+0x1c34>
   11500:	mov	r1, sl
   11504:	add	sl, sl, #1
   11508:	cmp	r1, #15
   1150c:	add	r0, pc, r0
   11510:	str	sl, [r0]
   11514:	bge	11ef8 <gen_protochain+0x1ab0>
   11518:	mov	r0, #1024	; 0x400
   1151c:	lsl	r5, r0, sl
   11520:	mov	r0, r5
   11524:	bl	dec <malloc@plt>
   11528:	cmp	r0, #0
   1152c:	add	r7, sp, #24
   11530:	str	r0, [r4, #12]
   11534:	beq	11ef8 <gen_protochain+0x1ab0>
   11538:	mov	r1, #0
   1153c:	mov	r2, r5
   11540:	add	r4, r4, #8
   11544:	bl	e58 <memset@plt>
   11548:	str	r5, [r4]
   1154c:	cmp	r5, #19
   11550:	ldr	ip, [pc, #2856]	; 12080 <gen_protochain+0x1c38>
   11554:	add	ip, pc, ip
   11558:	bhi	11570 <gen_protochain+0x1128>
   1155c:	b	11ef8 <gen_protochain+0x1ab0>
   11560:	.word	0x00036f2c
   11564:	.word	0x00036ea4
   11568:	.word	0x00036f04
   1156c:	add	r7, sp, #24
   11570:	sub	r0, r5, #20
   11574:	mov	r2, #21
   11578:	cmp	r9, #0
   1157c:	str	r0, [r4]
   11580:	ldr	r1, [r4, #4]
   11584:	str	r2, [r1, r0]!
   11588:	mov	r0, #0
   1158c:	str	r1, [r7, r8, lsl #2]
   11590:	str	r0, [r1, #4]
   11594:	ldr	r1, [r7, r8, lsl #2]
   11598:	str	r0, [r1, #8]
   1159c:	mov	r1, #51	; 0x33
   115a0:	ldr	r0, [r7, r8, lsl #2]
   115a4:	str	r1, [r0, #12]
   115a8:	beq	115b8 <gen_protochain+0x1170>
   115ac:	ldr	r0, [r7, r9, lsl #2]
   115b0:	ldr	r1, [r7, r8, lsl #2]
   115b4:	str	r1, [r0, #8]
   115b8:	mov	r4, ip
   115bc:	ldr	r5, [r4, sl, lsl #3]!
   115c0:	cmp	r5, #19
   115c4:	bhi	11628 <gen_protochain+0x11e0>
   115c8:	ldr	r0, [pc, #2740]	; 12084 <gen_protochain+0x1c3c>
   115cc:	add	r9, sl, #1
   115d0:	cmp	sl, #15
   115d4:	add	r0, pc, r0
   115d8:	str	r9, [r0]
   115dc:	bge	11ef8 <gen_protochain+0x1ab0>
   115e0:	mov	r0, #1024	; 0x400
   115e4:	lsl	r5, r0, r9
   115e8:	mov	r0, r5
   115ec:	bl	dec <malloc@plt>
   115f0:	cmp	r0, #0
   115f4:	str	r0, [r4, #12]
   115f8:	beq	11ef8 <gen_protochain+0x1ab0>
   115fc:	mov	r1, #0
   11600:	mov	r2, r5
   11604:	add	r4, r4, #8
   11608:	bl	e58 <memset@plt>
   1160c:	str	r5, [r4]
   11610:	cmp	r5, #19
   11614:	ldr	ip, [pc, #2668]	; 12088 <gen_protochain+0x1c40>
   11618:	add	ip, pc, ip
   1161c:	bhi	1162c <gen_protochain+0x11e4>
   11620:	b	11ef8 <gen_protochain+0x1ab0>
   11624:	.word	0x00036e40
   11628:	mov	r9, sl
   1162c:	sub	r1, r5, #20
   11630:	mov	r3, #135	; 0x87
   11634:	add	r0, r8, #1
   11638:	str	r1, [r4]
   1163c:	ldr	r2, [r4, #4]
   11640:	mov	r4, ip
   11644:	str	r3, [r2, r1]!
   11648:	str	r2, [r7, r0, lsl #2]
   1164c:	ldr	r0, [r7, r8, lsl #2]
   11650:	str	r2, [r0, #4]
   11654:	ldr	r5, [r4, r9, lsl #3]!
   11658:	cmp	r5, #19
   1165c:	bhi	116cc <gen_protochain+0x1284>
   11660:	ldr	r0, [pc, #2596]	; 1208c <gen_protochain+0x1c44>
   11664:	add	sl, r9, #1
   11668:	cmp	r9, #15
   1166c:	add	r0, pc, r0
   11670:	str	sl, [r0]
   11674:	bge	11ef8 <gen_protochain+0x1ab0>
   11678:	mov	r0, #1024	; 0x400
   1167c:	lsl	r5, r0, sl
   11680:	mov	r0, r5
   11684:	bl	dec <malloc@plt>
   11688:	cmp	r0, #0
   1168c:	str	r0, [r4, #12]
   11690:	beq	11ef8 <gen_protochain+0x1ab0>
   11694:	mov	r1, #0
   11698:	mov	r2, r5
   1169c:	add	r4, r4, #8
   116a0:	bl	e58 <memset@plt>
   116a4:	str	r5, [r4]
   116a8:	cmp	r5, #19
   116ac:	ldr	ip, [pc, #2524]	; 12090 <gen_protochain+0x1c48>
   116b0:	add	ip, pc, ip
   116b4:	bhi	116d0 <gen_protochain+0x1288>
   116b8:	b	11ef8 <gen_protochain+0x1ab0>
   116bc:	.word	0x00036da8
   116c0:	.word	0x00036e2c
   116c4:	.word	0x00036e08
   116c8:	.word	0x00036d44
   116cc:	mov	sl, r9
   116d0:	sub	r1, r5, #20
   116d4:	mov	r3, #80	; 0x50
   116d8:	str	r8, [sp, #20]
   116dc:	add	r0, r8, #2
   116e0:	mov	r7, ip
   116e4:	str	r1, [r4]
   116e8:	ldr	r2, [r4, #4]
   116ec:	str	r3, [r2, r1]!
   116f0:	add	r1, sp, #24
   116f4:	str	r2, [r1, r0, lsl #2]
   116f8:	ldr	r0, [sp, #12]
   116fc:	ldr	r1, [sp, #8]
   11700:	add	r4, r0, r1
   11704:	str	r4, [r2, #12]
   11708:	str	r4, [sp, #12]
   1170c:	ldr	r5, [r7, sl, lsl #3]!
   11710:	cmp	r5, #19
   11714:	bhi	11784 <gen_protochain+0x133c>
   11718:	ldr	r0, [pc, #2420]	; 12094 <gen_protochain+0x1c4c>
   1171c:	add	r8, sl, #1
   11720:	cmp	sl, #15
   11724:	add	r0, pc, r0
   11728:	str	r8, [r0]
   1172c:	bge	11ef8 <gen_protochain+0x1ab0>
   11730:	mov	r0, #1024	; 0x400
   11734:	lsl	r5, r0, r8
   11738:	mov	r0, r5
   1173c:	bl	dec <malloc@plt>
   11740:	cmp	r0, #0
   11744:	add	sl, sp, #24
   11748:	str	r0, [r7, #12]
   1174c:	beq	11ef8 <gen_protochain+0x1ab0>
   11750:	mov	r1, #0
   11754:	mov	r2, r5
   11758:	add	r7, r7, #8
   1175c:	bl	e58 <memset@plt>
   11760:	str	r5, [r7]
   11764:	cmp	r5, #19
   11768:	ldr	ip, [pc, #2344]	; 12098 <gen_protochain+0x1c50>
   1176c:	add	ip, pc, ip
   11770:	bhi	1178c <gen_protochain+0x1344>
   11774:	b	11ef8 <gen_protochain+0x1ab0>
   11778:	.word	0x00036c78
   1177c:	.word	0x00036c74
   11780:	.word	0x00036d00
   11784:	mov	r8, sl
   11788:	add	sl, sp, #24
   1178c:	ldr	r0, [sp, #20]
   11790:	mov	r2, #2
   11794:	add	r9, r0, #3
   11798:	sub	r0, r5, #20
   1179c:	str	r0, [r7]
   117a0:	ldr	r1, [r7, #4]
   117a4:	mov	r7, ip
   117a8:	str	r2, [r1, r0]!
   117ac:	str	r1, [sl, r9, lsl #2]
   117b0:	str	r6, [r1, #12]
   117b4:	ldr	r5, [r7, r8, lsl #3]!
   117b8:	cmp	r5, #19
   117bc:	bhi	11830 <gen_protochain+0x13e8>
   117c0:	ldr	r0, [pc, #2260]	; 1209c <gen_protochain+0x1c54>
   117c4:	add	sl, r8, #1
   117c8:	cmp	r8, #15
   117cc:	add	r0, pc, r0
   117d0:	str	sl, [r0]
   117d4:	bge	11ef8 <gen_protochain+0x1ab0>
   117d8:	mov	r0, #1024	; 0x400
   117dc:	lsl	r5, r0, sl
   117e0:	mov	r0, r5
   117e4:	bl	dec <malloc@plt>
   117e8:	ldr	r8, [sp, #20]
   117ec:	cmp	r0, #0
   117f0:	str	r0, [r7, #12]
   117f4:	beq	11ef8 <gen_protochain+0x1ab0>
   117f8:	mov	r1, #0
   117fc:	mov	r2, r5
   11800:	add	r7, r7, #8
   11804:	bl	e58 <memset@plt>
   11808:	str	r5, [r7]
   1180c:	cmp	r5, #19
   11810:	ldr	ip, [pc, #2184]	; 120a0 <gen_protochain+0x1c58>
   11814:	add	ip, pc, ip
   11818:	bhi	11838 <gen_protochain+0x13f0>
   1181c:	b	11ef8 <gen_protochain+0x1ab0>
   11820:	.word	0x00036c38
   11824:	.word	0x00036bb4
   11828:	.word	0x00036ba8
   1182c:	.word	0x00036c38
   11830:	mov	sl, r8
   11834:	ldr	r8, [sp, #20]
   11838:	sub	r1, r5, #20
   1183c:	mov	r3, #135	; 0x87
   11840:	add	r0, r8, #4
   11844:	str	r1, [r7]
   11848:	ldr	r2, [r7, #4]
   1184c:	mov	r7, ip
   11850:	str	r3, [r2, r1]!
   11854:	add	r1, sp, #24
   11858:	str	r2, [r1, r0, lsl #2]
   1185c:	ldr	r0, [r1, r9, lsl #2]
   11860:	str	r2, [r0, #4]
   11864:	ldr	r5, [r7, sl, lsl #3]!
   11868:	cmp	r5, #19
   1186c:	bhi	118d8 <gen_protochain+0x1490>
   11870:	ldr	r0, [pc, #2092]	; 120a4 <gen_protochain+0x1c5c>
   11874:	add	r9, sl, #1
   11878:	cmp	sl, #15
   1187c:	add	r0, pc, r0
   11880:	str	r9, [r0]
   11884:	bge	11ef8 <gen_protochain+0x1ab0>
   11888:	mov	r0, #1024	; 0x400
   1188c:	lsl	r5, r0, r9
   11890:	mov	r0, r5
   11894:	bl	dec <malloc@plt>
   11898:	cmp	r0, #0
   1189c:	add	sl, sp, #24
   118a0:	str	r0, [r7, #12]
   118a4:	beq	11ef8 <gen_protochain+0x1ab0>
   118a8:	mov	r1, #0
   118ac:	mov	r2, r5
   118b0:	add	r7, r7, #8
   118b4:	bl	e58 <memset@plt>
   118b8:	str	r5, [r7]
   118bc:	cmp	r5, #19
   118c0:	ldr	ip, [pc, #2016]	; 120a8 <gen_protochain+0x1c60>
   118c4:	add	ip, pc, ip
   118c8:	bhi	118e0 <gen_protochain+0x1498>
   118cc:	b	11ef8 <gen_protochain+0x1ab0>
   118d0:	.word	0x00036b74
   118d4:	.word	0x00036ba8
   118d8:	mov	r9, sl
   118dc:	add	sl, sp, #24
   118e0:	sub	r1, r5, #20
   118e4:	mov	r3, #4
   118e8:	add	r0, r8, #5
   118ec:	mov	r4, ip
   118f0:	str	r1, [r7]
   118f4:	ldr	r2, [r7, #4]
   118f8:	str	r3, [r2, r1]!
   118fc:	str	r2, [sl, r0, lsl #2]
   11900:	mov	r0, #1
   11904:	str	r0, [r2, #12]
   11908:	ldr	r5, [r4, r9, lsl #3]!
   1190c:	cmp	r5, #19
   11910:	bhi	11978 <gen_protochain+0x1530>
   11914:	ldr	r0, [pc, #1936]	; 120ac <gen_protochain+0x1c64>
   11918:	add	r7, r9, #1
   1191c:	cmp	r9, #15
   11920:	add	r0, pc, r0
   11924:	str	r7, [r0]
   11928:	bge	11ef8 <gen_protochain+0x1ab0>
   1192c:	mov	r0, #1024	; 0x400
   11930:	lsl	r5, r0, r7
   11934:	mov	r0, r5
   11938:	bl	dec <malloc@plt>
   1193c:	cmp	r0, #0
   11940:	str	r0, [r4, #12]
   11944:	beq	11ef8 <gen_protochain+0x1ab0>
   11948:	mov	r1, #0
   1194c:	mov	r2, r5
   11950:	add	r4, r4, #8
   11954:	bl	e58 <memset@plt>
   11958:	str	r5, [r4]
   1195c:	cmp	r5, #19
   11960:	ldr	ip, [pc, #1864]	; 120b0 <gen_protochain+0x1c68>
   11964:	add	ip, pc, ip
   11968:	bhi	1197c <gen_protochain+0x1534>
   1196c:	b	11ef8 <gen_protochain+0x1ab0>
   11970:	.word	0x00036ae4
   11974:	.word	0x00036b08
   11978:	mov	r7, r9
   1197c:	sub	r1, r5, #20
   11980:	mov	r3, #7
   11984:	add	r0, r8, #6
   11988:	str	r1, [r4]
   1198c:	ldr	r2, [r4, #4]
   11990:	mov	r4, ip
   11994:	str	r3, [r2, r1]!
   11998:	ldr	r5, [r4, r7, lsl #3]!
   1199c:	str	r2, [sl, r0, lsl #2]
   119a0:	cmp	r5, #19
   119a4:	bhi	11a08 <gen_protochain+0x15c0>
   119a8:	ldr	r0, [pc, #1796]	; 120b4 <gen_protochain+0x1c6c>
   119ac:	add	r9, r7, #1
   119b0:	cmp	r7, #15
   119b4:	add	r0, pc, r0
   119b8:	str	r9, [r0]
   119bc:	bge	11ef8 <gen_protochain+0x1ab0>
   119c0:	mov	r0, #1024	; 0x400
   119c4:	lsl	r5, r0, r9
   119c8:	mov	r0, r5
   119cc:	bl	dec <malloc@plt>
   119d0:	cmp	r0, #0
   119d4:	str	r0, [r4, #12]
   119d8:	beq	11ef8 <gen_protochain+0x1ab0>
   119dc:	mov	r1, #0
   119e0:	mov	r2, r5
   119e4:	add	r4, r4, #8
   119e8:	bl	e58 <memset@plt>
   119ec:	str	r5, [r4]
   119f0:	cmp	r5, #19
   119f4:	ldr	ip, [pc, #1724]	; 120b8 <gen_protochain+0x1c70>
   119f8:	add	ip, pc, ip
   119fc:	bhi	11a0c <gen_protochain+0x15c4>
   11a00:	b	11ef8 <gen_protochain+0x1ab0>
   11a04:	.word	0x00036a44
   11a08:	mov	r9, r7
   11a0c:	sub	r1, r5, #20
   11a10:	mov	r3, #80	; 0x50
   11a14:	add	r0, r8, #7
   11a18:	str	r1, [r4]
   11a1c:	ldr	r2, [r4, #4]
   11a20:	mov	r4, ip
   11a24:	str	r3, [r2, r1]!
   11a28:	str	r2, [sl, r0, lsl #2]
   11a2c:	ldr	r0, [sp, #12]
   11a30:	str	r0, [r2, #12]
   11a34:	ldr	r5, [r4, r9, lsl #3]!
   11a38:	cmp	r5, #19
   11a3c:	bhi	11aa8 <gen_protochain+0x1660>
   11a40:	ldr	r0, [pc, #1652]	; 120bc <gen_protochain+0x1c74>
   11a44:	add	r8, r9, #1
   11a48:	cmp	r9, #15
   11a4c:	add	r0, pc, r0
   11a50:	str	r8, [r0]
   11a54:	bge	11ef8 <gen_protochain+0x1ab0>
   11a58:	mov	r0, #1024	; 0x400
   11a5c:	lsl	r5, r0, r8
   11a60:	mov	r0, r5
   11a64:	bl	dec <malloc@plt>
   11a68:	cmp	r0, #0
   11a6c:	str	r0, [r4, #12]
   11a70:	beq	11ef8 <gen_protochain+0x1ab0>
   11a74:	mov	r1, #0
   11a78:	mov	r2, r5
   11a7c:	add	r4, r4, #8
   11a80:	bl	e58 <memset@plt>
   11a84:	str	r5, [r4]
   11a88:	cmp	r5, #19
   11a8c:	ldr	ip, [pc, #1580]	; 120c0 <gen_protochain+0x1c78>
   11a90:	add	ip, pc, ip
   11a94:	bhi	11aac <gen_protochain+0x1664>
   11a98:	b	11ef8 <gen_protochain+0x1ab0>
   11a9c:	.word	0x00036a54
   11aa0:	.word	0x00036990
   11aa4:	.word	0x000369f0
   11aa8:	mov	r8, r9
   11aac:	ldr	r0, [sp, #20]
   11ab0:	mov	r7, #4
   11ab4:	orr	r2, r0, #8
   11ab8:	sub	r0, r5, #20
   11abc:	str	r0, [r4]
   11ac0:	mov	sl, r2
   11ac4:	ldr	r1, [r4, #4]
   11ac8:	mov	r4, ip
   11acc:	str	r7, [r1, r0]!
   11ad0:	add	r0, sp, #24
   11ad4:	str	r1, [r0, r2, lsl #2]
   11ad8:	mov	r0, #2
   11adc:	str	r0, [r1, #12]
   11ae0:	ldr	r5, [r4, r8, lsl #3]!
   11ae4:	cmp	r5, #19
   11ae8:	bhi	11b58 <gen_protochain+0x1710>
   11aec:	ldr	r0, [pc, #1488]	; 120c4 <gen_protochain+0x1c7c>
   11af0:	add	r9, r8, #1
   11af4:	cmp	r8, #15
   11af8:	add	r0, pc, r0
   11afc:	str	r9, [r0]
   11b00:	bge	11ef8 <gen_protochain+0x1ab0>
   11b04:	mov	r0, #1024	; 0x400
   11b08:	lsl	r5, r0, r9
   11b0c:	mov	r0, r5
   11b10:	bl	dec <malloc@plt>
   11b14:	ldr	r8, [sp, #20]
   11b18:	cmp	r0, #0
   11b1c:	str	r0, [r4, #12]
   11b20:	beq	11ef8 <gen_protochain+0x1ab0>
   11b24:	mov	r1, #0
   11b28:	mov	r2, r5
   11b2c:	add	r4, r4, #8
   11b30:	bl	e58 <memset@plt>
   11b34:	str	r5, [r4]
   11b38:	cmp	r5, #19
   11b3c:	mov	r7, #4
   11b40:	ldr	ip, [pc, #1408]	; 120c8 <gen_protochain+0x1c80>
   11b44:	add	ip, pc, ip
   11b48:	bhi	11b60 <gen_protochain+0x1718>
   11b4c:	b	11ef8 <gen_protochain+0x1ab0>
   11b50:	.word	0x0003692c
   11b54:	.word	0x00036944
   11b58:	mov	r9, r8
   11b5c:	ldr	r8, [sp, #20]
   11b60:	sub	r1, r5, #20
   11b64:	mov	r3, #36	; 0x24
   11b68:	add	r0, sl, #1
   11b6c:	str	r1, [r4]
   11b70:	ldr	r2, [r4, #4]
   11b74:	mov	r4, ip
   11b78:	str	r3, [r2, r1]!
   11b7c:	add	r1, sp, #24
   11b80:	str	r2, [r1, r0, lsl #2]
   11b84:	str	r7, [r2, #12]
   11b88:	ldr	r5, [r4, r9, lsl #3]!
   11b8c:	cmp	r5, #19
   11b90:	bhi	11bf4 <gen_protochain+0x17ac>
   11b94:	ldr	r0, [pc, #1328]	; 120cc <gen_protochain+0x1c84>
   11b98:	add	r7, r9, #1
   11b9c:	cmp	r9, #15
   11ba0:	add	r0, pc, r0
   11ba4:	str	r7, [r0]
   11ba8:	bge	11ef8 <gen_protochain+0x1ab0>
   11bac:	mov	r0, #1024	; 0x400
   11bb0:	lsl	r5, r0, r7
   11bb4:	mov	r0, r5
   11bb8:	bl	dec <malloc@plt>
   11bbc:	cmp	r0, #0
   11bc0:	str	r0, [r4, #12]
   11bc4:	beq	11ef8 <gen_protochain+0x1ab0>
   11bc8:	mov	r1, #0
   11bcc:	mov	r2, r5
   11bd0:	add	r4, r4, #8
   11bd4:	bl	e58 <memset@plt>
   11bd8:	str	r5, [r4]
   11bdc:	cmp	r5, #19
   11be0:	ldr	ip, [pc, #1256]	; 120d0 <gen_protochain+0x1c88>
   11be4:	add	ip, pc, ip
   11be8:	bhi	11bf8 <gen_protochain+0x17b0>
   11bec:	b	11ef8 <gen_protochain+0x1ab0>
   11bf0:	.word	0x00036880
   11bf4:	mov	r7, r9
   11bf8:	sub	r1, r5, #20
   11bfc:	mov	r3, #7
   11c00:	add	r0, sl, #2
   11c04:	str	r1, [r4]
   11c08:	ldr	r2, [r4, #4]
   11c0c:	mov	r4, ip
   11c10:	str	r3, [r2, r1]!
   11c14:	add	r1, sp, #24
   11c18:	ldr	r5, [r4, r7, lsl #3]!
   11c1c:	str	r2, [r1, r0, lsl #2]
   11c20:	cmp	r5, #19
   11c24:	bhi	11c8c <gen_protochain+0x1844>
   11c28:	ldr	r0, [pc, #1188]	; 120d4 <gen_protochain+0x1c8c>
   11c2c:	add	r9, r7, #1
   11c30:	cmp	r7, #15
   11c34:	add	r0, pc, r0
   11c38:	str	r9, [r0]
   11c3c:	bge	11ef8 <gen_protochain+0x1ab0>
   11c40:	mov	r0, #1024	; 0x400
   11c44:	lsl	r5, r0, r9
   11c48:	mov	r0, r5
   11c4c:	bl	dec <malloc@plt>
   11c50:	cmp	r0, #0
   11c54:	str	r0, [r4, #12]
   11c58:	beq	11ef8 <gen_protochain+0x1ab0>
   11c5c:	mov	r1, #0
   11c60:	mov	r2, r5
   11c64:	add	r4, r4, #8
   11c68:	bl	e58 <memset@plt>
   11c6c:	str	r5, [r4]
   11c70:	cmp	r5, #19
   11c74:	ldr	ip, [pc, #1116]	; 120d8 <gen_protochain+0x1c90>
   11c78:	add	ip, pc, ip
   11c7c:	bhi	11c90 <gen_protochain+0x1848>
   11c80:	b	11ef8 <gen_protochain+0x1ab0>
   11c84:	.word	0x00036860
   11c88:	.word	0x0003679c
   11c8c:	mov	r9, r7
   11c90:	sub	r1, r5, #20
   11c94:	mov	r3, #96	; 0x60
   11c98:	add	r0, sl, #3
   11c9c:	str	r1, [r4]
   11ca0:	ldr	r2, [r4, #4]
   11ca4:	mov	r4, ip
   11ca8:	str	r3, [r2, r1]!
   11cac:	add	r1, sp, #24
   11cb0:	str	r2, [r1, r0, lsl #2]
   11cb4:	str	r6, [r2, #12]
   11cb8:	ldr	r5, [r4, r9, lsl #3]!
   11cbc:	cmp	r5, #19
   11cc0:	bhi	11d28 <gen_protochain+0x18e0>
   11cc4:	ldr	r0, [pc, #1040]	; 120dc <gen_protochain+0x1c94>
   11cc8:	add	r7, r9, #1
   11ccc:	cmp	r9, #15
   11cd0:	add	r0, pc, r0
   11cd4:	str	r7, [r0]
   11cd8:	bge	11ef8 <gen_protochain+0x1ab0>
   11cdc:	mov	r0, #1024	; 0x400
   11ce0:	lsl	r5, r0, r7
   11ce4:	mov	r0, r5
   11ce8:	bl	dec <malloc@plt>
   11cec:	cmp	r0, #0
   11cf0:	str	r0, [r4, #12]
   11cf4:	beq	11ef8 <gen_protochain+0x1ab0>
   11cf8:	mov	r1, #0
   11cfc:	mov	r2, r5
   11d00:	add	r4, r4, #8
   11d04:	bl	e58 <memset@plt>
   11d08:	str	r5, [r4]
   11d0c:	cmp	r5, #19
   11d10:	ldr	ip, [pc, #968]	; 120e0 <gen_protochain+0x1c98>
   11d14:	add	ip, pc, ip
   11d18:	bhi	11d2c <gen_protochain+0x18e4>
   11d1c:	b	11ef8 <gen_protochain+0x1ab0>
   11d20:	.word	0x000367b0
   11d24:	.word	0x000366ec
   11d28:	mov	r7, r9
   11d2c:	sub	r1, r5, #20
   11d30:	mov	r3, #5
   11d34:	add	r0, sl, #4
   11d38:	str	r1, [r4]
   11d3c:	ldr	r2, [r4, #4]
   11d40:	mov	r4, ip
   11d44:	str	r3, [r2, r1]!
   11d48:	add	r1, sp, #24
   11d4c:	str	r2, [r1, r0, lsl #2]
   11d50:	mvn	r0, #8
   11d54:	eor	r0, r8, r0
   11d58:	sub	r0, r0, #1
   11d5c:	str	r0, [r2, #12]
   11d60:	ldr	r5, [r4, r7, lsl #3]!
   11d64:	cmp	r5, #19
   11d68:	bhi	11dd8 <gen_protochain+0x1990>
   11d6c:	ldr	r0, [pc, #880]	; 120e4 <gen_protochain+0x1c9c>
   11d70:	add	r9, r7, #1
   11d74:	cmp	r7, #15
   11d78:	add	r0, pc, r0
   11d7c:	str	r9, [r0]
   11d80:	bge	11ef8 <gen_protochain+0x1ab0>
   11d84:	mov	r0, #1024	; 0x400
   11d88:	lsl	r5, r0, r9
   11d8c:	mov	r0, r5
   11d90:	bl	dec <malloc@plt>
   11d94:	cmp	r0, #0
   11d98:	str	r0, [r4, #12]
   11d9c:	beq	11ef8 <gen_protochain+0x1ab0>
   11da0:	mov	r1, #0
   11da4:	mov	r2, r5
   11da8:	add	r4, r4, #8
   11dac:	bl	e58 <memset@plt>
   11db0:	str	r5, [r4]
   11db4:	cmp	r5, #19
   11db8:	ldr	ip, [pc, #808]	; 120e8 <gen_protochain+0x1ca0>
   11dbc:	add	ip, pc, ip
   11dc0:	bhi	11ddc <gen_protochain+0x1994>
   11dc4:	b	11ef8 <gen_protochain+0x1ab0>
   11dc8:	.word	0x00036708
   11dcc:	.word	0x00036644
   11dd0:	.word	0x00036680
   11dd4:	.word	0x000365bc
   11dd8:	mov	r9, r7
   11ddc:	sub	r1, r5, #20
   11de0:	mov	r3, #4
   11de4:	add	r0, sl, #5
   11de8:	str	r1, [r4]
   11dec:	ldr	r2, [r4, #4]
   11df0:	str	r3, [r2, r1]!
   11df4:	add	r1, sp, #24
   11df8:	mov	r7, r1
   11dfc:	str	r2, [r1, r0, lsl #2]
   11e00:	mov	r1, #0
   11e04:	str	r1, [r2, #12]
   11e08:	ldr	r1, [r7, r0, lsl #2]
   11e0c:	ldr	r2, [sp, #40]	; 0x28
   11e10:	str	r1, [r2, #4]
   11e14:	ldr	r1, [r7, r8, lsl #2]
   11e18:	ldr	r2, [r7, r0, lsl #2]
   11e1c:	str	r2, [r1, #8]
   11e20:	ldr	r1, [r7, r0, lsl #2]
   11e24:	ldr	r2, [sp, #36]	; 0x24
   11e28:	str	r1, [r2, #4]
   11e2c:	and	r2, r0, #1
   11e30:	sub	r1, r2, sl
   11e34:	sub	r3, r1, #5
   11e38:	add	r1, r7, #8
   11e3c:	ldr	r7, [r1, #-8]
   11e40:	ldr	r5, [r1, #-4]
   11e44:	adds	r3, r3, #2
   11e48:	str	r5, [r7, #16]
   11e4c:	ldr	r7, [r1, #-4]
   11e50:	ldr	r5, [r1]
   11e54:	add	r1, r1, #8
   11e58:	str	r5, [r7, #16]
   11e5c:	bne	11e3c <gen_protochain+0x19f4>
   11e60:	ldr	sl, [sp, #16]
   11e64:	cmp	r2, #0
   11e68:	beq	11e78 <gen_protochain+0x1a30>
   11e6c:	ldr	r2, [r1, #-8]
   11e70:	ldr	r1, [r1, #-4]
   11e74:	str	r1, [r2, #16]
   11e78:	add	r1, sp, #24
   11e7c:	mov	r8, #0
   11e80:	ldr	r0, [r1, r0, lsl #2]
   11e84:	str	r8, [r0, #16]
   11e88:	ldr	r5, [ip, r9, lsl #3]!
   11e8c:	cmp	r5, #207	; 0xcf
   11e90:	bhi	11f14 <gen_protochain+0x1acc>
   11e94:	ldr	r1, [pc, #592]	; 120ec <gen_protochain+0x1ca4>
   11e98:	add	r0, r9, #1
   11e9c:	cmp	r9, #15
   11ea0:	add	r1, pc, r1
   11ea4:	str	r0, [r1]
   11ea8:	bge	11ef8 <gen_protochain+0x1ab0>
   11eac:	mov	r1, #1024	; 0x400
   11eb0:	mov	r4, ip
   11eb4:	lsl	r5, r1, r0
   11eb8:	mov	r0, r5
   11ebc:	bl	dec <malloc@plt>
   11ec0:	mov	r3, r4
   11ec4:	str	r0, [r4, #12]
   11ec8:	ldr	r4, [sp, #4]
   11ecc:	cmp	r0, #0
   11ed0:	beq	11ef8 <gen_protochain+0x1ab0>
   11ed4:	add	r3, r3, #8
   11ed8:	mov	r1, #0
   11edc:	mov	r2, r5
   11ee0:	mov	r7, r3
   11ee4:	bl	e58 <memset@plt>
   11ee8:	mov	ip, r7
   11eec:	cmp	r5, #207	; 0xcf
   11ef0:	str	r5, [r7]
   11ef4:	bhi	11f18 <gen_protochain+0x1ad0>
   11ef8:	ldr	r0, [pc, #500]	; 120f4 <gen_protochain+0x1cac>
   11efc:	add	r0, pc, r0
   11f00:	bl	2068 <sf_bpf_error>
   11f04:	.word	0x000365e8
   11f08:	.word	0x00036524
   11f0c:	.word	0x0003655c
   11f10:	.word	0x00036498
   11f14:	ldr	r4, [sp, #4]
   11f18:	sub	r0, r5, #208	; 0xd0
   11f1c:	cmp	r4, #0
   11f20:	str	r0, [ip]
   11f24:	ldr	r1, [ip, #4]
   11f28:	add	r0, r1, r0
   11f2c:	mov	r1, #21
   11f30:	str	r1, [r0, #8]
   11f34:	str	r0, [r0, #96]	; 0x60
   11f38:	ldr	r1, [sp, #28]
   11f3c:	str	sl, [r0, #20]
   11f40:	str	r1, [r0, #4]
   11f44:	ldr	r1, [pc, #420]	; 120f0 <gen_protochain+0x1ca8>
   11f48:	add	r1, pc, r1
   11f4c:	str	r8, [r1, r6, lsl #2]
   11f50:	beq	11f84 <gen_protochain+0x1b3c>
   11f54:	ldr	r1, [r0, #96]	; 0x60
   11f58:	mov	r2, r4
   11f5c:	ldr	r3, [r2, #44]	; 0x2c
   11f60:	add	r7, r2, #84	; 0x54
   11f64:	cmp	r3, #0
   11f68:	mov	r3, #84	; 0x54
   11f6c:	movweq	r3, #60	; 0x3c
   11f70:	addeq	r7, r2, #60	; 0x3c
   11f74:	ldr	r2, [r2, r3]
   11f78:	str	r1, [r7]
   11f7c:	cmp	r2, #0
   11f80:	bne	11f5c <gen_protochain+0x1b14>
   11f84:	ldr	r2, [r4, #44]	; 0x2c
   11f88:	add	r1, r0, #96	; 0x60
   11f8c:	cmp	r0, #0
   11f90:	clz	r2, r2
   11f94:	lsr	r2, r2, #5
   11f98:	str	r2, [r4, #44]	; 0x2c
   11f9c:	ldr	r2, [r0, #44]	; 0x2c
   11fa0:	clz	r3, r2
   11fa4:	lsr	r3, r3, #5
   11fa8:	str	r3, [r0, #44]	; 0x2c
   11fac:	str	r0, [fp, #-36]	; 0xffffffdc
   11fb0:	beq	11ff8 <gen_protochain+0x1bb0>
   11fb4:	cmp	r2, #0
   11fb8:	mov	r7, #60	; 0x3c
   11fbc:	mov	r3, r0
   11fc0:	movweq	r7, #84	; 0x54
   11fc4:	ldr	r2, [r3, r7]!
   11fc8:	cmp	r2, #0
   11fcc:	beq	11ffc <gen_protochain+0x1bb4>
   11fd0:	ldr	r7, [r2, #44]	; 0x2c
   11fd4:	add	r3, r2, #84	; 0x54
   11fd8:	cmp	r7, #0
   11fdc:	mov	r7, #84	; 0x54
   11fe0:	movweq	r7, #60	; 0x3c
   11fe4:	addeq	r3, r2, #60	; 0x3c
   11fe8:	ldr	r2, [r2, r7]
   11fec:	cmp	r2, #0
   11ff0:	bne	11fd0 <gen_protochain+0x1b88>
   11ff4:	b	11ffc <gen_protochain+0x1bb4>
   11ff8:	sub	r3, fp, #36	; 0x24
   11ffc:	str	r4, [r3]
   12000:	ldr	r2, [r0, #44]	; 0x2c
   12004:	clz	r2, r2
   12008:	lsr	r2, r2, #5
   1200c:	str	r2, [r0, #44]	; 0x2c
   12010:	ldr	r2, [r4, #96]	; 0x60
   12014:	str	r2, [r1]
   12018:	sub	sp, fp, #28
   1201c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12020:	.word	0x000364d4
   12024:	ldr	r0, [pc, #16]	; 1203c <gen_protochain+0x1bf4>
   12028:	add	r0, pc, r0
   1202c:	bl	2068 <sf_bpf_error>
   12030:	ldr	r0, [pc, #192]	; 120f8 <gen_protochain+0x1cb0>
   12034:	add	r0, pc, r0
   12038:	bl	2068 <sf_bpf_error>
   1203c:	.word	0x00019034
   12040:	.word	0x00036410
   12044:	.word	0x00036444
   12048:	.word	0x00036380
   1204c:	.word	0x000363bc
   12050:	.word	0x000362f8
   12054:	.word	0x00036330
   12058:	.word	0x0003626c
   1205c:	.word	0x000362a0
   12060:	.word	0x000361dc
   12064:	.word	0x00036210
   12068:	.word	0x0003614c
   1206c:	.word	0x00036188
   12070:	.word	0x000360c4
   12074:	.word	0x000360fc
   12078:	.word	0x00036038
   1207c:	.word	0x00035ff0
   12080:	.word	0x00035f28
   12084:	.word	0x00035f28
   12088:	.word	0x00035e64
   1208c:	.word	0x00035e90
   12090:	.word	0x00035dcc
   12094:	.word	0x00035dd8
   12098:	.word	0x00035d10
   1209c:	.word	0x00035d30
   120a0:	.word	0x00035c68
   120a4:	.word	0x00035c80
   120a8:	.word	0x00035bb8
   120ac:	.word	0x00035bdc
   120b0:	.word	0x00035b18
   120b4:	.word	0x00035b48
   120b8:	.word	0x00035a84
   120bc:	.word	0x00035ab0
   120c0:	.word	0x000359ec
   120c4:	.word	0x00035a04
   120c8:	.word	0x00035938
   120cc:	.word	0x0003595c
   120d0:	.word	0x00035898
   120d4:	.word	0x000358c8
   120d8:	.word	0x00035804
   120dc:	.word	0x0003582c
   120e0:	.word	0x00035768
   120e4:	.word	0x00035784
   120e8:	.word	0x000356c0
   120ec:	.word	0x0003565c
   120f0:	.word	0x000355c8
   120f4:	.word	0x00018780
   120f8:	.word	0x00019075

000120fc <sf_gen_mcode>:
   120fc:	push	{r4, r5, r6, r7, fp, lr}
   12100:	add	fp, sp, #16
   12104:	sub	sp, sp, #16
   12108:	mov	r6, r1
   1210c:	add	r1, sp, #12
   12110:	mov	r4, r3
   12114:	mov	r7, r2
   12118:	mov	r5, r0
   1211c:	bl	207e4 <__pcap_atoin>
   12120:	ldr	r1, [sp, #12]
   12124:	rsb	r0, r0, #32
   12128:	cmp	r6, #0
   1212c:	lsl	r0, r1, r0
   12130:	str	r0, [sp, #12]
   12134:	beq	12178 <sf_gen_mcode+0x7c>
   12138:	add	r1, sp, #8
   1213c:	mov	r0, r6
   12140:	bl	207e4 <__pcap_atoin>
   12144:	ldr	r2, [sp, #8]
   12148:	rsb	r0, r0, #32
   1214c:	lsl	r1, r2, r0
   12150:	mvn	r2, r2, lsl r0
   12154:	ldr	r0, [sp, #12]
   12158:	str	r1, [sp, #8]
   1215c:	tst	r0, r2
   12160:	beq	121a4 <sf_gen_mcode+0xa8>
   12164:	ldr	r0, [pc, #148]	; 12200 <sf_gen_mcode+0x104>
   12168:	mov	r1, r5
   1216c:	mov	r2, r6
   12170:	add	r0, pc, r0
   12174:	bl	2068 <sf_bpf_error>
   12178:	cmp	r7, #33	; 0x21
   1217c:	bge	121e0 <sf_gen_mcode+0xe4>
   12180:	rsb	r2, r7, #32
   12184:	mvn	r3, #0
   12188:	cmp	r7, #0
   1218c:	mov	r1, r7
   12190:	lslne	r1, r3, r2
   12194:	mvn	r2, r1
   12198:	str	r1, [sp, #8]
   1219c:	tst	r0, r2
   121a0:	bne	121ec <sf_gen_mcode+0xf0>
   121a4:	uxtb	r2, r4
   121a8:	cmp	r2, #2
   121ac:	bne	121d4 <sf_gen_mcode+0xd8>
   121b0:	lsr	r3, r4, #16
   121b4:	lsr	r2, r4, #8
   121b8:	mov	r7, #2
   121bc:	uxtb	r2, r2
   121c0:	uxtb	r3, r3
   121c4:	str	r7, [sp]
   121c8:	bl	c44c <gen_host>
   121cc:	sub	sp, fp, #16
   121d0:	pop	{r4, r5, r6, r7, fp, pc}
   121d4:	ldr	r0, [pc, #40]	; 12204 <sf_gen_mcode+0x108>
   121d8:	add	r0, pc, r0
   121dc:	bl	2068 <sf_bpf_error>
   121e0:	ldr	r0, [pc, #32]	; 12208 <sf_gen_mcode+0x10c>
   121e4:	add	r0, pc, r0
   121e8:	bl	2068 <sf_bpf_error>
   121ec:	ldr	r0, [pc, #24]	; 1220c <sf_gen_mcode+0x110>
   121f0:	mov	r1, r5
   121f4:	mov	r2, r7
   121f8:	add	r0, pc, r0
   121fc:	bl	2068 <sf_bpf_error>
   12200:	.word	0x00017cc8
   12204:	.word	0x00017cbf
   12208:	.word	0x00017c79
   1220c:	.word	0x00017c7f

00012210 <sf_gen_ncode>:
   12210:	push	{r4, r5, r6, r7, fp, lr}
   12214:	add	fp, sp, #16
   12218:	sub	sp, sp, #16
   1221c:	str	r1, [sp, #4]
   12220:	ubfx	r5, r2, #16, #8
   12224:	mov	r7, r2
   12228:	mov	r6, r0
   1222c:	ubfx	r4, r2, #8, #8
   12230:	cmp	r0, #0
   12234:	beq	12250 <sf_gen_ncode+0x40>
   12238:	add	r1, sp, #4
   1223c:	mov	r0, r6
   12240:	cmp	r4, #12
   12244:	bne	12258 <sf_gen_ncode+0x48>
   12248:	bl	20848 <__pcap_atodn>
   1224c:	b	1225c <sf_gen_ncode+0x4c>
   12250:	mov	r0, #32
   12254:	b	1225c <sf_gen_ncode+0x4c>
   12258:	bl	207e4 <__pcap_atoin>
   1225c:	uxtb	r2, r7
   12260:	cmp	r2, #7
   12264:	bhi	12550 <sf_gen_ncode+0x340>
   12268:	add	r3, pc, #8
   1226c:	lsr	r1, r7, #8
   12270:	ldr	r7, [r3, r2, lsl #2]
   12274:	add	pc, r3, r7
   12278:	.word	0x00000020
   1227c:	.word	0x00000020
   12280:	.word	0x00000020
   12284:	.word	0x0000007c
   12288:	.word	0x000002e4
   1228c:	.word	0x000001cc
   12290:	.word	0x00000118
   12294:	.word	0x00000128
   12298:	uxtb	r1, r1
   1229c:	cmp	r1, #12
   122a0:	beq	122e4 <sf_gen_ncode+0xd4>
   122a4:	cmp	r1, #1
   122a8:	beq	1256c <sf_gen_ncode+0x35c>
   122ac:	cmp	r6, #0
   122b0:	cmpeq	r2, #2
   122b4:	beq	124ec <sf_gen_ncode+0x2dc>
   122b8:	rsb	r1, r0, #32
   122bc:	ldr	r0, [sp, #4]
   122c0:	mvn	r3, #0
   122c4:	lsl	r0, r0, r1
   122c8:	lsl	r1, r3, r1
   122cc:	str	r0, [sp, #4]
   122d0:	str	r2, [sp]
   122d4:	mov	r2, r4
   122d8:	mov	r3, r5
   122dc:	bl	c44c <gen_host>
   122e0:	b	12454 <sf_gen_ncode+0x244>
   122e4:	ldr	r0, [sp, #4]
   122e8:	mov	r1, r5
   122ec:	bl	1d47c <gen_dnhostop>
   122f0:	b	12454 <sf_gen_ncode+0x244>
   122f4:	uxtb	r0, r1
   122f8:	cmp	r0, #8
   122fc:	bcs	12578 <sf_gen_ncode+0x368>
   12300:	mov	r2, #225	; 0xe1
   12304:	mov	r3, #1
   12308:	tst	r3, r2, lsr r0
   1230c:	beq	12578 <sf_gen_ncode+0x368>
   12310:	lsl	r0, r1, #24
   12314:	ldr	r1, [pc, #628]	; 12590 <sf_gen_ncode+0x380>
   12318:	mov	r2, r5
   1231c:	add	r1, pc, r1
   12320:	ldr	r6, [r1, r0, asr #22]
   12324:	ldr	r0, [sp, #4]
   12328:	mov	r1, r6
   1232c:	bl	f78c <gen_port>
   12330:	mov	r4, r0
   12334:	ldr	r0, [sp, #4]
   12338:	mov	r1, r6
   1233c:	mov	r2, r5
   12340:	bl	fa58 <gen_port6>
   12344:	ldr	r1, [r0, #44]	; 0x2c
   12348:	cmp	r0, #0
   1234c:	clz	r1, r1
   12350:	lsr	r1, r1, #5
   12354:	str	r1, [r0, #44]	; 0x2c
   12358:	beq	12460 <sf_gen_ncode+0x250>
   1235c:	ldr	r2, [r4, #96]	; 0x60
   12360:	mov	r3, r0
   12364:	cmp	r1, #0
   12368:	mov	r1, #84	; 0x54
   1236c:	add	r7, r3, #84	; 0x54
   12370:	movweq	r1, #60	; 0x3c
   12374:	addeq	r7, r3, #60	; 0x3c
   12378:	ldr	r3, [r3, r1]
   1237c:	str	r2, [r7]
   12380:	cmp	r3, #0
   12384:	beq	1245c <sf_gen_ncode+0x24c>
   12388:	ldr	r1, [r3, #44]	; 0x2c
   1238c:	b	12364 <sf_gen_ncode+0x154>
   12390:	ldr	r0, [sp, #4]
   12394:	mov	r1, r4
   12398:	bl	10448 <gen_protochain>
   1239c:	b	12454 <sf_gen_ncode+0x244>
   123a0:	uxtb	r0, r1
   123a4:	cmp	r0, #8
   123a8:	bcs	12584 <sf_gen_ncode+0x374>
   123ac:	mov	r2, #225	; 0xe1
   123b0:	mov	r3, #1
   123b4:	tst	r3, r2, lsr r0
   123b8:	beq	12584 <sf_gen_ncode+0x374>
   123bc:	lsl	r0, r1, #24
   123c0:	ldr	r1, [pc, #460]	; 12594 <sf_gen_ncode+0x384>
   123c4:	mov	r3, r5
   123c8:	add	r1, pc, r1
   123cc:	ldr	r6, [r1, r0, asr #22]
   123d0:	ldr	r0, [sp, #4]
   123d4:	mov	r1, r0
   123d8:	mov	r2, r6
   123dc:	bl	fd24 <gen_portrange>
   123e0:	mov	r4, r0
   123e4:	ldr	r0, [sp, #4]
   123e8:	mov	r2, r6
   123ec:	mov	r3, r5
   123f0:	mov	r1, r0
   123f4:	bl	10004 <gen_portrange6>
   123f8:	ldr	r1, [r0, #44]	; 0x2c
   123fc:	cmp	r0, #0
   12400:	clz	r1, r1
   12404:	lsr	r1, r1, #5
   12408:	str	r1, [r0, #44]	; 0x2c
   1240c:	beq	124a8 <sf_gen_ncode+0x298>
   12410:	ldr	r2, [r4, #96]	; 0x60
   12414:	mov	r3, r0
   12418:	cmp	r1, #0
   1241c:	mov	r1, #84	; 0x54
   12420:	add	r7, r3, #84	; 0x54
   12424:	movweq	r1, #60	; 0x3c
   12428:	addeq	r7, r3, #60	; 0x3c
   1242c:	ldr	r3, [r3, r1]
   12430:	str	r2, [r7]
   12434:	cmp	r3, #0
   12438:	beq	124a4 <sf_gen_ncode+0x294>
   1243c:	ldr	r1, [r3, #44]	; 0x2c
   12440:	b	12418 <sf_gen_ncode+0x208>
   12444:	ldr	r0, [sp, #4]
   12448:	mov	r1, r4
   1244c:	mov	r2, r5
   12450:	bl	68c8 <gen_proto>
   12454:	mov	r4, r0
   12458:	b	12544 <sf_gen_ncode+0x334>
   1245c:	ldr	r1, [r0, #44]	; 0x2c
   12460:	clz	r1, r1
   12464:	cmp	r4, #0
   12468:	lsr	r1, r1, #5
   1246c:	str	r1, [r0, #44]	; 0x2c
   12470:	str	r4, [sp, #8]
   12474:	beq	1252c <sf_gen_ncode+0x31c>
   12478:	mov	r2, r4
   1247c:	ldr	r3, [r2, #44]	; 0x2c
   12480:	add	r1, r2, #84	; 0x54
   12484:	cmp	r3, #0
   12488:	mov	r3, #84	; 0x54
   1248c:	movweq	r3, #60	; 0x3c
   12490:	addeq	r1, r2, #60	; 0x3c
   12494:	ldr	r2, [r2, r3]
   12498:	cmp	r2, #0
   1249c:	bne	1247c <sf_gen_ncode+0x26c>
   124a0:	b	12538 <sf_gen_ncode+0x328>
   124a4:	ldr	r1, [r0, #44]	; 0x2c
   124a8:	clz	r1, r1
   124ac:	cmp	r4, #0
   124b0:	lsr	r1, r1, #5
   124b4:	str	r1, [r0, #44]	; 0x2c
   124b8:	str	r4, [sp, #12]
   124bc:	beq	12534 <sf_gen_ncode+0x324>
   124c0:	mov	r2, r4
   124c4:	ldr	r3, [r2, #44]	; 0x2c
   124c8:	add	r1, r2, #84	; 0x54
   124cc:	cmp	r3, #0
   124d0:	mov	r3, #84	; 0x54
   124d4:	movweq	r3, #60	; 0x3c
   124d8:	addeq	r1, r2, #60	; 0x3c
   124dc:	ldr	r2, [r2, r3]
   124e0:	cmp	r2, #0
   124e4:	bne	124c4 <sf_gen_ncode+0x2b4>
   124e8:	b	12538 <sf_gen_ncode+0x328>
   124ec:	ldr	r0, [sp, #4]
   124f0:	movw	r7, #65534	; 0xfffe
   124f4:	mvn	r1, #0
   124f8:	movt	r7, #255	; 0xff
   124fc:	sub	r3, r0, #1
   12500:	cmp	r3, r7
   12504:	bhi	122d0 <sf_gen_ncode+0xc0>
   12508:	mvn	r3, #0
   1250c:	mvn	r7, #-16777216	; 0xff000000
   12510:	mvn	r1, #0
   12514:	add	r6, r3, r0, lsl #8
   12518:	lsl	r1, r1, #8
   1251c:	lsl	r0, r0, #8
   12520:	cmp	r6, r7
   12524:	bcc	12514 <sf_gen_ncode+0x304>
   12528:	b	122cc <sf_gen_ncode+0xbc>
   1252c:	add	r1, sp, #8
   12530:	b	12538 <sf_gen_ncode+0x328>
   12534:	add	r1, sp, #12
   12538:	str	r0, [r1]
   1253c:	ldr	r0, [r0, #96]	; 0x60
   12540:	str	r0, [r4, #96]	; 0x60
   12544:	mov	r0, r4
   12548:	sub	sp, fp, #16
   1254c:	pop	{r4, r5, r6, r7, fp, pc}
   12550:	cmp	r2, #255	; 0xff
   12554:	bne	12568 <sf_gen_ncode+0x358>
   12558:	bl	31cc <syntax>
   1255c:	ldr	r0, [pc, #52]	; 12598 <sf_gen_ncode+0x388>
   12560:	add	r0, pc, r0
   12564:	bl	2068 <sf_bpf_error>
   12568:	bl	edc <abort@plt>
   1256c:	ldr	r0, [pc, #40]	; 1259c <sf_gen_ncode+0x38c>
   12570:	add	r0, pc, r0
   12574:	bl	2068 <sf_bpf_error>
   12578:	ldr	r0, [pc, #32]	; 125a0 <sf_gen_ncode+0x390>
   1257c:	add	r0, pc, r0
   12580:	bl	2068 <sf_bpf_error>
   12584:	ldr	r0, [pc, #24]	; 125a4 <sf_gen_ncode+0x394>
   12588:	add	r0, pc, r0
   1258c:	bl	2068 <sf_bpf_error>
   12590:	.word	0x00018de4
   12594:	.word	0x00018d38
   12598:	.word	0x00017970
   1259c:	.word	0x00017945
   125a0:	.word	0x0001778c
   125a4:	.word	0x000177e2

000125a8 <sf_gen_mcode6>:
   125a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125ac:	add	fp, sp, #28
   125b0:	sub	sp, sp, #28
   125b4:	cmp	r1, #0
   125b8:	bne	12700 <sf_gen_mcode6+0x158>
   125bc:	mov	sl, r3
   125c0:	mov	r6, r2
   125c4:	mov	r5, r0
   125c8:	bl	203ac <pcap_nametoaddrinfo>
   125cc:	cmp	r0, #0
   125d0:	beq	1270c <sf_gen_mcode6+0x164>
   125d4:	mov	r4, r0
   125d8:	ldr	r0, [pc, #360]	; 12748 <sf_gen_mcode6+0x1a0>
   125dc:	add	r0, pc, r0
   125e0:	str	r4, [r0]
   125e4:	ldr	r0, [r4, #28]
   125e8:	cmp	r0, #0
   125ec:	bne	1271c <sf_gen_mcode6+0x174>
   125f0:	cmp	r6, #129	; 0x81
   125f4:	str	r5, [sp, #4]
   125f8:	bcs	1272c <sf_gen_mcode6+0x184>
   125fc:	vmov.i32	q8, #0	; 0x00000000
   12600:	ldr	r8, [r4, #20]
   12604:	add	r7, sp, #8
   12608:	mov	r1, #255	; 0xff
   1260c:	mov	r0, r7
   12610:	vst1.64	{d16-d17}, [r7]
   12614:	ubfx	r5, r6, #3, #5
   12618:	mov	r2, r5
   1261c:	add	r9, r8, #8
   12620:	bl	e58 <memset@plt>
   12624:	ands	r0, r6, #7
   12628:	rsbne	r0, r0, #8
   1262c:	movne	r1, #255	; 0xff
   12630:	lslne	r0, r1, r0
   12634:	strbne	r0, [r7, r5]
   12638:	ldr	r1, [sp, #8]
   1263c:	ldr	r0, [r9]
   12640:	mvn	r1, r1
   12644:	tst	r0, r1
   12648:	ldreq	r1, [sp, #12]
   1264c:	ldreq	r0, [r8, #12]
   12650:	mvneq	r1, r1
   12654:	tsteq	r0, r1
   12658:	bne	12680 <sf_gen_mcode6+0xd8>
   1265c:	ldr	r1, [sp, #16]
   12660:	ldr	r0, [r8, #16]
   12664:	mvn	r1, r1
   12668:	tst	r0, r1
   1266c:	ldreq	r1, [sp, #20]
   12670:	ldreq	r0, [r8, #20]
   12674:	mvneq	r1, r1
   12678:	tsteq	r0, r1
   1267c:	beq	12694 <sf_gen_mcode6+0xec>
   12680:	ldr	r0, [pc, #220]	; 12764 <sf_gen_mcode6+0x1bc>
   12684:	ldr	r1, [sp, #4]
   12688:	mov	r2, r6
   1268c:	add	r0, pc, r0
   12690:	bl	2068 <sf_bpf_error>
   12694:	uxtb	r0, sl
   12698:	cmp	r0, #2
   1269c:	bcs	126b4 <sf_gen_mcode6+0x10c>
   126a0:	cmp	r6, #128	; 0x80
   126a4:	beq	126b8 <sf_gen_mcode6+0x110>
   126a8:	ldr	r0, [pc, #184]	; 12768 <sf_gen_mcode6+0x1c0>
   126ac:	add	r0, pc, r0
   126b0:	bl	2068 <sf_bpf_error>
   126b4:	bne	1273c <sf_gen_mcode6+0x194>
   126b8:	lsr	r2, sl, #8
   126bc:	lsr	r1, sl, #16
   126c0:	str	r0, [sp]
   126c4:	mov	r0, r9
   126c8:	uxtb	r3, r1
   126cc:	uxtb	r2, r2
   126d0:	add	r1, sp, #8
   126d4:	bl	f4a0 <gen_host6>
   126d8:	ldr	r1, [pc, #112]	; 12750 <sf_gen_mcode6+0x1a8>
   126dc:	mov	r5, r0
   126e0:	mov	r0, #0
   126e4:	add	r1, pc, r1
   126e8:	str	r0, [r1]
   126ec:	mov	r0, r4
   126f0:	bl	eac <freeaddrinfo@plt>
   126f4:	mov	r0, r5
   126f8:	sub	sp, fp, #28
   126fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12700:	ldr	r0, [pc, #76]	; 12754 <sf_gen_mcode6+0x1ac>
   12704:	add	r0, pc, r0
   12708:	bl	2068 <sf_bpf_error>
   1270c:	ldr	r0, [pc, #68]	; 12758 <sf_gen_mcode6+0x1b0>
   12710:	mov	r1, r5
   12714:	add	r0, pc, r0
   12718:	bl	2068 <sf_bpf_error>
   1271c:	ldr	r0, [pc, #56]	; 1275c <sf_gen_mcode6+0x1b4>
   12720:	mov	r1, r5
   12724:	add	r0, pc, r0
   12728:	bl	2068 <sf_bpf_error>
   1272c:	ldr	r0, [pc, #44]	; 12760 <sf_gen_mcode6+0x1b8>
   12730:	mov	r1, #128	; 0x80
   12734:	add	r0, pc, r0
   12738:	bl	2068 <sf_bpf_error>
   1273c:	ldr	r0, [pc, #8]	; 1274c <sf_gen_mcode6+0x1a4>
   12740:	add	r0, pc, r0
   12744:	bl	2068 <sf_bpf_error>
   12748:	.word	0x00034e48
   1274c:	.word	0x00017810
   12750:	.word	0x00034d40
   12754:	.word	0x000177e6
   12758:	.word	0x000177eb
   1275c:	.word	0x000177f2
   12760:	.word	0x00017802
   12764:	.word	0x000177eb
   12768:	.word	0x000177eb

0001276c <sf_gen_ecode>:
   1276c:	push	{r4, r5, r6, sl, fp, lr}
   12770:	add	fp, sp, #16
   12774:	sub	sp, sp, #8
   12778:	mov	r5, r0
   1277c:	movw	r0, #65534	; 0xfffe
   12780:	and	r0, r1, r0
   12784:	cmp	r0, #256	; 0x100
   12788:	bne	12a48 <sf_gen_ecode+0x2dc>
   1278c:	ldr	r0, [pc, #716]	; 12a60 <sf_gen_ecode+0x2f4>
   12790:	lsr	r6, r1, #16
   12794:	ldr	r0, [pc, r0]
   12798:	cmp	r0, #104	; 0x68
   1279c:	ble	128b8 <sf_gen_ecode+0x14c>
   127a0:	sub	r1, r0, #105	; 0x69
   127a4:	cmp	r1, #58	; 0x3a
   127a8:	bhi	128f0 <sf_gen_ecode+0x184>
   127ac:	add	r0, pc, #4
   127b0:	ldr	r1, [r0, r1, lsl #2]
   127b4:	add	pc, r0, r1
   127b8:	.word	0x000000ec
   127bc:	.word	0x0000029c
   127c0:	.word	0x0000029c
   127c4:	.word	0x0000029c
   127c8:	.word	0x0000029c
   127cc:	.word	0x0000029c
   127d0:	.word	0x0000029c
   127d4:	.word	0x0000029c
   127d8:	.word	0x0000029c
   127dc:	.word	0x0000029c
   127e0:	.word	0x0000029c
   127e4:	.word	0x0000029c
   127e8:	.word	0x0000029c
   127ec:	.word	0x0000029c
   127f0:	.word	0x000000ec
   127f4:	.word	0x0000029c
   127f8:	.word	0x0000029c
   127fc:	.word	0x00000144
   12800:	.word	0x00000158
   12804:	.word	0x0000029c
   12808:	.word	0x0000029c
   1280c:	.word	0x0000029c
   12810:	.word	0x000000ec
   12814:	.word	0x0000029c
   12818:	.word	0x0000029c
   1281c:	.word	0x0000029c
   12820:	.word	0x0000029c
   12824:	.word	0x0000029c
   12828:	.word	0x0000029c
   1282c:	.word	0x0000029c
   12830:	.word	0x0000029c
   12834:	.word	0x0000029c
   12838:	.word	0x0000029c
   1283c:	.word	0x0000029c
   12840:	.word	0x0000029c
   12844:	.word	0x0000029c
   12848:	.word	0x0000029c
   1284c:	.word	0x0000029c
   12850:	.word	0x0000029c
   12854:	.word	0x0000029c
   12858:	.word	0x0000029c
   1285c:	.word	0x0000029c
   12860:	.word	0x0000029c
   12864:	.word	0x0000029c
   12868:	.word	0x0000029c
   1286c:	.word	0x0000029c
   12870:	.word	0x0000029c
   12874:	.word	0x0000029c
   12878:	.word	0x0000029c
   1287c:	.word	0x0000029c
   12880:	.word	0x0000029c
   12884:	.word	0x0000029c
   12888:	.word	0x0000029c
   1288c:	.word	0x0000029c
   12890:	.word	0x0000029c
   12894:	.word	0x0000029c
   12898:	.word	0x0000029c
   1289c:	.word	0x0000029c
   128a0:	.word	0x000000ec
   128a4:	uxtb	r1, r6
   128a8:	mov	r0, r5
   128ac:	sub	sp, fp, #16
   128b0:	pop	{r4, r5, r6, sl, fp, lr}
   128b4:	b	cff4 <gen_wlanhostop>
   128b8:	cmp	r0, #1
   128bc:	beq	128dc <sf_gen_ecode+0x170>
   128c0:	cmp	r0, #6
   128c4:	bne	12a04 <sf_gen_ecode+0x298>
   128c8:	uxtb	r1, r6
   128cc:	mov	r0, r5
   128d0:	sub	sp, fp, #16
   128d4:	pop	{r4, r5, r6, sl, fp, lr}
   128d8:	b	cdc4 <gen_thostop>
   128dc:	uxtb	r1, r6
   128e0:	mov	r0, r5
   128e4:	sub	sp, fp, #16
   128e8:	pop	{r4, r5, r6, sl, fp, lr}
   128ec:	b	c92c <gen_ehostop>
   128f0:	cmp	r0, #192	; 0xc0
   128f4:	beq	128a4 <sf_gen_ecode+0x138>
   128f8:	b	12a54 <sf_gen_ecode+0x2e8>
   128fc:	uxtb	r1, r6
   12900:	mov	r0, r5
   12904:	sub	sp, fp, #16
   12908:	pop	{r4, r5, r6, sl, fp, lr}
   1290c:	b	f270 <gen_ipfchostop>
   12910:	ldr	r0, [pc, #332]	; 12a64 <sf_gen_ecode+0x2f8>
   12914:	add	r0, pc, r0
   12918:	ldrb	r0, [r0]
   1291c:	cmp	r0, #1
   12920:	bne	12a48 <sf_gen_ecode+0x2dc>
   12924:	mov	r0, #1
   12928:	mov	r1, #4
   1292c:	mov	r2, #8
   12930:	mov	r3, #65280	; 0xff00
   12934:	bl	a8f8 <gen_cmp>
   12938:	mov	r4, r0
   1293c:	ldr	r0, [r0, #44]	; 0x2c
   12940:	uxtb	r1, r6
   12944:	clz	r0, r0
   12948:	lsr	r0, r0, #5
   1294c:	str	r0, [r4, #44]	; 0x2c
   12950:	mov	r0, r5
   12954:	bl	c92c <gen_ehostop>
   12958:	cmp	r4, #0
   1295c:	beq	12990 <sf_gen_ecode+0x224>
   12960:	ldr	r1, [r0, #96]	; 0x60
   12964:	mov	r2, r4
   12968:	ldr	r3, [r2, #44]	; 0x2c
   1296c:	add	r6, r2, #84	; 0x54
   12970:	cmp	r3, #0
   12974:	mov	r3, #84	; 0x54
   12978:	movweq	r3, #60	; 0x3c
   1297c:	addeq	r6, r2, #60	; 0x3c
   12980:	ldr	r2, [r2, r3]
   12984:	str	r1, [r6]
   12988:	cmp	r2, #0
   1298c:	bne	12968 <sf_gen_ecode+0x1fc>
   12990:	ldr	r1, [r4, #44]	; 0x2c
   12994:	cmp	r0, #0
   12998:	clz	r1, r1
   1299c:	lsr	r1, r1, #5
   129a0:	str	r1, [r4, #44]	; 0x2c
   129a4:	ldr	r2, [r0, #44]	; 0x2c
   129a8:	clz	r1, r2
   129ac:	lsr	r1, r1, #5
   129b0:	str	r1, [r0, #44]	; 0x2c
   129b4:	str	r0, [sp, #4]
   129b8:	beq	12a20 <sf_gen_ecode+0x2b4>
   129bc:	cmp	r2, #0
   129c0:	mov	r2, #60	; 0x3c
   129c4:	add	r1, r0, #60	; 0x3c
   129c8:	movweq	r2, #84	; 0x54
   129cc:	addeq	r1, r0, #84	; 0x54
   129d0:	ldr	r2, [r0, r2]
   129d4:	cmp	r2, #0
   129d8:	beq	12a24 <sf_gen_ecode+0x2b8>
   129dc:	ldr	r3, [r2, #44]	; 0x2c
   129e0:	add	r1, r2, #84	; 0x54
   129e4:	cmp	r3, #0
   129e8:	mov	r3, #84	; 0x54
   129ec:	movweq	r3, #60	; 0x3c
   129f0:	addeq	r1, r2, #60	; 0x3c
   129f4:	ldr	r2, [r2, r3]
   129f8:	cmp	r2, #0
   129fc:	bne	129dc <sf_gen_ecode+0x270>
   12a00:	b	12a24 <sf_gen_ecode+0x2b8>
   12a04:	cmp	r0, #10
   12a08:	bne	12a54 <sf_gen_ecode+0x2e8>
   12a0c:	uxtb	r1, r6
   12a10:	mov	r0, r5
   12a14:	sub	sp, fp, #16
   12a18:	pop	{r4, r5, r6, sl, fp, lr}
   12a1c:	b	cb94 <gen_fhostop>
   12a20:	add	r1, sp, #4
   12a24:	str	r4, [r1]
   12a28:	ldr	r1, [r0, #44]	; 0x2c
   12a2c:	clz	r1, r1
   12a30:	lsr	r1, r1, #5
   12a34:	str	r1, [r0, #44]	; 0x2c
   12a38:	ldr	r1, [r4, #96]	; 0x60
   12a3c:	str	r1, [r0, #96]	; 0x60
   12a40:	sub	sp, fp, #16
   12a44:	pop	{r4, r5, r6, sl, fp, pc}
   12a48:	ldr	r0, [pc, #28]	; 12a6c <sf_gen_ecode+0x300>
   12a4c:	add	r0, pc, r0
   12a50:	bl	2068 <sf_bpf_error>
   12a54:	ldr	r0, [pc, #12]	; 12a68 <sf_gen_ecode+0x2fc>
   12a58:	add	r0, pc, r0
   12a5c:	bl	2068 <sf_bpf_error>
   12a60:	.word	0x00034c9c
   12a64:	.word	0x00034b20
   12a68:	.word	0x0001751f
   12a6c:	.word	0x00017587

00012a70 <sf_append>:
   12a70:	mov	r2, r0
   12a74:	ldr	r0, [r0, #16]
   12a78:	cmp	r0, #0
   12a7c:	bne	12a70 <sf_append>
   12a80:	str	r1, [r2, #16]
   12a84:	bx	lr

00012a88 <sf_gen_load>:
   12a88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a8c:	add	fp, sp, #28
   12a90:	sub	sp, sp, #20
   12a94:	ldr	r4, [pc, #3964]	; 13a18 <sf_gen_load+0xf90>
   12a98:	mov	r9, r1
   12a9c:	mvn	r7, #15
   12aa0:	ldr	r4, [pc, r4]
   12aa4:	ldr	sl, [pc, #4088]	; 13aa4 <sf_gen_load+0x101c>
   12aa8:	ldr	r8, [pc, #4088]	; 13aa8 <sf_gen_load+0x1020>
   12aac:	add	sl, pc, sl
   12ab0:	add	r8, pc, r8
   12ab4:	ldr	r1, [sl, r4, lsl #2]
   12ab8:	cmp	r1, #0
   12abc:	beq	12aec <sf_gen_load+0x64>
   12ac0:	add	r1, r4, #1
   12ac4:	adds	r7, r7, #1
   12ac8:	asr	r3, r1, #31
   12acc:	add	r3, r1, r3, lsr #28
   12ad0:	bic	r3, r3, #15
   12ad4:	sub	r4, r1, r3
   12ad8:	str	r4, [r8]
   12adc:	bcc	12ab4 <sf_gen_load+0x2c>
   12ae0:	ldr	r0, [pc, #4036]	; 13aac <sf_gen_load+0x1024>
   12ae4:	add	r0, pc, r0
   12ae8:	bl	2068 <sf_bpf_error>
   12aec:	mov	r1, #1
   12af0:	cmp	r2, #1
   12af4:	str	r1, [sl, r4, lsl #2]
   12af8:	mov	r1, #0
   12afc:	ldr	r3, [r9, #8]
   12b00:	str	r1, [sl, r3, lsl #2]
   12b04:	beq	12b28 <sf_gen_load+0xa0>
   12b08:	cmp	r2, #2
   12b0c:	beq	12b20 <sf_gen_load+0x98>
   12b10:	cmp	r2, #4
   12b14:	bne	13f00 <sf_gen_load+0x1478>
   12b18:	mov	r6, #64	; 0x40
   12b1c:	b	12b2c <sf_gen_load+0xa4>
   12b20:	mov	r6, #72	; 0x48
   12b24:	b	12b2c <sf_gen_load+0xa4>
   12b28:	mov	r6, #80	; 0x50
   12b2c:	str	r0, [sp, #4]
   12b30:	sub	r0, r0, #1
   12b34:	cmp	r0, #39	; 0x27
   12b38:	bhi	13eec <sf_gen_load+0x1464>
   12b3c:	add	r1, pc, #20
   12b40:	ldr	r7, [pc, #4072]	; 13b30 <sf_gen_load+0x10a8>
   12b44:	str	r9, [sp, #12]
   12b48:	str	r6, [sp, #8]
   12b4c:	ldr	r0, [r1, r0, lsl #2]
   12b50:	add	r7, pc, r7
   12b54:	add	pc, r1, r0
   12b58:	.word	0x00000f58
   12b5c:	.word	0x000000a0
   12b60:	.word	0x000000a0
   12b64:	.word	0x000000a0
   12b68:	.word	0x000000fc
   12b6c:	.word	0x000000fc
   12b70:	.word	0x000000fc
   12b74:	.word	0x000000fc
   12b78:	.word	0x000000fc
   12b7c:	.word	0x000000fc
   12b80:	.word	0x000000a0
   12b84:	.word	0x000000a0
   12b88:	.word	0x000000a0
   12b8c:	.word	0x000000a0
   12b90:	.word	0x000000a0
   12b94:	.word	0x000000a0
   12b98:	.word	0x000000a0
   12b9c:	.word	0x000013b4
   12ba0:	.word	0x00001394
   12ba4:	.word	0x00001394
   12ba8:	.word	0x000000fc
   12bac:	.word	0x000000fc
   12bb0:	.word	0x00001394
   12bb4:	.word	0x00001394
   12bb8:	.word	0x00001394
   12bbc:	.word	0x00001394
   12bc0:	.word	0x00001394
   12bc4:	.word	0x00001394
   12bc8:	.word	0x00001394
   12bcc:	.word	0x00001394
   12bd0:	.word	0x00001394
   12bd4:	.word	0x00001394
   12bd8:	.word	0x00001394
   12bdc:	.word	0x00001394
   12be0:	.word	0x00001394
   12be4:	.word	0x00001394
   12be8:	.word	0x00001394
   12bec:	.word	0x00001394
   12bf0:	.word	0x00001394
   12bf4:	.word	0x00000ec4
   12bf8:	ldr	r0, [pc, #4092]	; 13bfc <sf_gen_load+0x1174>
   12bfc:	add	r0, pc, r0
   12c00:	ldrb	r0, [r0]
   12c04:	cmp	r0, #0
   12c08:	beq	12cd0 <sf_gen_load+0x248>
   12c0c:	ldr	r5, [pc, #4076]	; 13c00 <sf_gen_load+0x1178>
   12c10:	ldr	r5, [pc, r5]
   12c14:	cmn	r5, #1
   12c18:	bne	12fc8 <sf_gen_load+0x540>
   12c1c:	mvn	r0, #15
   12c20:	mov	r5, r4
   12c24:	ldr	r1, [sl, r5, lsl #2]
   12c28:	cmp	r1, #0
   12c2c:	beq	12fb4 <sf_gen_load+0x52c>
   12c30:	add	r1, r5, #1
   12c34:	adds	r0, r0, #1
   12c38:	asr	r2, r1, #31
   12c3c:	add	r2, r1, r2, lsr #28
   12c40:	bic	r2, r2, #15
   12c44:	sub	r5, r1, r2
   12c48:	str	r5, [r8]
   12c4c:	bcc	12c24 <sf_gen_load+0x19c>
   12c50:	b	12ae0 <sf_gen_load+0x58>
   12c54:	bl	1440c <gen_loadx_iphdrlen>
   12c58:	mov	r3, r0
   12c5c:	ldr	r0, [pc, #4092]	; 13c60 <sf_gen_load+0x11d8>
   12c60:	mov	r5, r7
   12c64:	ldr	r0, [pc, r0]
   12c68:	str	r3, [sp]
   12c6c:	ldr	r7, [r5, r0, lsl #3]!
   12c70:	cmp	r7, #19
   12c74:	bhi	12ce4 <sf_gen_load+0x25c>
   12c78:	ldr	r1, [pc, #4068]	; 13c64 <sf_gen_load+0x11dc>
   12c7c:	add	r9, r0, #1
   12c80:	cmp	r0, #15
   12c84:	add	r1, pc, r1
   12c88:	str	r9, [r1]
   12c8c:	bge	13e8c <sf_gen_load+0x1404>
   12c90:	mov	r0, #1024	; 0x400
   12c94:	lsl	r7, r0, r9
   12c98:	mov	r0, r7
   12c9c:	bl	dec <malloc@plt>
   12ca0:	cmp	r0, #0
   12ca4:	str	r0, [r5, #12]
   12ca8:	beq	13e8c <sf_gen_load+0x1404>
   12cac:	mov	r1, #0
   12cb0:	mov	r2, r7
   12cb4:	add	r5, r5, #8
   12cb8:	bl	e58 <memset@plt>
   12cbc:	ldr	r3, [sp]
   12cc0:	cmp	r7, #19
   12cc4:	str	r7, [r5]
   12cc8:	bhi	12ce8 <sf_gen_load+0x260>
   12ccc:	b	13e8c <sf_gen_load+0x1404>
   12cd0:	ldr	r9, [pc, #3984]	; 13c68 <sf_gen_load+0x11e0>
   12cd4:	ldr	r9, [pc, r9]
   12cd8:	ldr	sl, [pc, #3980]	; 13c6c <sf_gen_load+0x11e4>
   12cdc:	add	sl, pc, sl
   12ce0:	b	130c8 <sf_gen_load+0x640>
   12ce4:	mov	r9, r0
   12ce8:	sub	r1, r7, #20
   12cec:	mov	r2, #96	; 0x60
   12cf0:	str	r1, [r5]
   12cf4:	ldr	r0, [r5, #4]
   12cf8:	str	r2, [r0, r1]!
   12cfc:	mov	r2, r3
   12d00:	ldr	r1, [sp, #12]
   12d04:	ldr	r1, [r1, #8]
   12d08:	str	r1, [r0, #12]
   12d0c:	mov	r1, r2
   12d10:	ldr	r2, [r2, #16]
   12d14:	cmp	r2, #0
   12d18:	bne	12d0c <sf_gen_load+0x284>
   12d1c:	str	r0, [r1, #16]
   12d20:	ldr	r6, [pc, #4072]	; 13d10 <sf_gen_load+0x1288>
   12d24:	add	r6, pc, r6
   12d28:	ldr	r7, [r6, r9, lsl #3]!
   12d2c:	cmp	r7, #19
   12d30:	bhi	12d8c <sf_gen_load+0x304>
   12d34:	ldr	r0, [pc, #4056]	; 13d14 <sf_gen_load+0x128c>
   12d38:	add	r5, r9, #1
   12d3c:	cmp	r9, #15
   12d40:	add	r0, pc, r0
   12d44:	str	r5, [r0]
   12d48:	bge	13e8c <sf_gen_load+0x1404>
   12d4c:	mov	r0, #1024	; 0x400
   12d50:	lsl	r7, r0, r5
   12d54:	mov	r0, r7
   12d58:	bl	dec <malloc@plt>
   12d5c:	cmp	r0, #0
   12d60:	str	r0, [r6, #12]
   12d64:	beq	13e8c <sf_gen_load+0x1404>
   12d68:	mov	r1, #0
   12d6c:	mov	r2, r7
   12d70:	add	r6, r6, #8
   12d74:	bl	e58 <memset@plt>
   12d78:	ldr	r3, [sp]
   12d7c:	cmp	r7, #19
   12d80:	str	r7, [r6]
   12d84:	bhi	12d90 <sf_gen_load+0x308>
   12d88:	b	13e8c <sf_gen_load+0x1404>
   12d8c:	mov	r5, r9
   12d90:	sub	r1, r7, #20
   12d94:	mov	r2, #12
   12d98:	str	r1, [r6]
   12d9c:	ldr	r0, [r6, #4]
   12da0:	str	r2, [r0, r1]!
   12da4:	mov	r2, r3
   12da8:	mov	r1, r2
   12dac:	ldr	r2, [r2, #16]
   12db0:	cmp	r2, #0
   12db4:	bne	12da8 <sf_gen_load+0x320>
   12db8:	str	r0, [r1, #16]
   12dbc:	ldr	r6, [pc, #4072]	; 13dac <sf_gen_load+0x1324>
   12dc0:	add	r6, pc, r6
   12dc4:	ldr	r7, [r6, r5, lsl #3]!
   12dc8:	cmp	r7, #19
   12dcc:	bhi	12e28 <sf_gen_load+0x3a0>
   12dd0:	ldr	r0, [pc, #4056]	; 13db0 <sf_gen_load+0x1328>
   12dd4:	add	r9, r5, #1
   12dd8:	cmp	r5, #15
   12ddc:	add	r0, pc, r0
   12de0:	str	r9, [r0]
   12de4:	bge	13e8c <sf_gen_load+0x1404>
   12de8:	mov	r0, #1024	; 0x400
   12dec:	lsl	r7, r0, r9
   12df0:	mov	r0, r7
   12df4:	bl	dec <malloc@plt>
   12df8:	cmp	r0, #0
   12dfc:	str	r0, [r6, #12]
   12e00:	beq	13e8c <sf_gen_load+0x1404>
   12e04:	mov	r1, #0
   12e08:	mov	r2, r7
   12e0c:	add	r6, r6, #8
   12e10:	bl	e58 <memset@plt>
   12e14:	ldr	r3, [sp]
   12e18:	cmp	r7, #19
   12e1c:	str	r7, [r6]
   12e20:	bhi	12e2c <sf_gen_load+0x3a4>
   12e24:	b	13e8c <sf_gen_load+0x1404>
   12e28:	mov	r9, r5
   12e2c:	sub	r1, r7, #20
   12e30:	mov	r2, #7
   12e34:	str	r1, [r6]
   12e38:	ldr	r0, [r6, #4]
   12e3c:	str	r2, [r0, r1]!
   12e40:	mov	r2, r3
   12e44:	mov	r1, r2
   12e48:	ldr	r2, [r2, #16]
   12e4c:	cmp	r2, #0
   12e50:	bne	12e44 <sf_gen_load+0x3bc>
   12e54:	str	r0, [r1, #16]
   12e58:	ldr	r5, [pc, #3996]	; 13dfc <sf_gen_load+0x1374>
   12e5c:	add	r5, pc, r5
   12e60:	ldr	r7, [r5, r9, lsl #3]!
   12e64:	cmp	r7, #19
   12e68:	bhi	12ec8 <sf_gen_load+0x440>
   12e6c:	ldr	r1, [pc, #3980]	; 13e00 <sf_gen_load+0x1378>
   12e70:	add	r0, r9, #1
   12e74:	cmp	r9, #15
   12e78:	add	r1, pc, r1
   12e7c:	str	r0, [r1]
   12e80:	bge	13e8c <sf_gen_load+0x1404>
   12e84:	mov	r1, #1024	; 0x400
   12e88:	lsl	r7, r1, r0
   12e8c:	mov	r0, r7
   12e90:	bl	dec <malloc@plt>
   12e94:	ldr	r6, [sp, #12]
   12e98:	cmp	r0, #0
   12e9c:	str	r0, [r5, #12]
   12ea0:	beq	13e8c <sf_gen_load+0x1404>
   12ea4:	mov	r1, #0
   12ea8:	mov	r2, r7
   12eac:	add	r5, r5, #8
   12eb0:	bl	e58 <memset@plt>
   12eb4:	ldr	r3, [sp]
   12eb8:	cmp	r7, #19
   12ebc:	str	r7, [r5]
   12ec0:	bhi	12ecc <sf_gen_load+0x444>
   12ec4:	b	13e8c <sf_gen_load+0x1404>
   12ec8:	ldr	r6, [sp, #12]
   12ecc:	sub	r1, r7, #20
   12ed0:	ldr	r2, [sp, #8]
   12ed4:	str	r1, [r5]
   12ed8:	ldr	r0, [r5, #4]
   12edc:	str	r2, [r0, r1]!
   12ee0:	mov	r2, r3
   12ee4:	mov	r1, r2
   12ee8:	ldr	r2, [r2, #16]
   12eec:	cmp	r2, #0
   12ef0:	bne	12ee4 <sf_gen_load+0x45c>
   12ef4:	str	r0, [r1, #16]
   12ef8:	ldr	r1, [pc, #4088]	; 13ef8 <sf_gen_load+0x1470>
   12efc:	ldr	r1, [pc, r1]
   12f00:	ldr	r2, [pc, #4084]	; 13efc <sf_gen_load+0x1474>
   12f04:	ldr	r2, [pc, r2]
   12f08:	add	r1, r2, r1
   12f0c:	str	r1, [r0, #12]
   12f10:	ldr	r0, [sp, #4]
   12f14:	ldr	r2, [r6, #4]
   12f18:	mov	r1, r2
   12f1c:	ldr	r2, [r2, #16]
   12f20:	cmp	r2, #0
   12f24:	bne	12f18 <sf_gen_load+0x490>
   12f28:	str	r3, [r1, #16]
   12f2c:	bl	570c <sf_gen_proto_abbrev>
   12f30:	mov	r9, r0
   12f34:	ldr	r0, [pc, #4060]	; 13f18 <sf_gen_load+0x1490>
   12f38:	add	r0, pc, r0
   12f3c:	ldrb	r0, [r0]
   12f40:	ldr	r1, [pc, #4052]	; 13f1c <sf_gen_load+0x1494>
   12f44:	ldr	r1, [pc, r1]
   12f48:	cmp	r0, #0
   12f4c:	add	r3, r1, #6
   12f50:	beq	12fa0 <sf_gen_load+0x518>
   12f54:	ldr	r5, [pc, #4036]	; 13f20 <sf_gen_load+0x1498>
   12f58:	ldr	r5, [pc, r5]
   12f5c:	cmn	r5, #1
   12f60:	bne	13488 <sf_gen_load+0xa00>
   12f64:	ldr	r5, [pc, #4024]	; 13f24 <sf_gen_load+0x149c>
   12f68:	mvn	r0, #15
   12f6c:	ldr	r5, [pc, r5]
   12f70:	ldr	r1, [sl, r5, lsl #2]
   12f74:	cmp	r1, #0
   12f78:	beq	13474 <sf_gen_load+0x9ec>
   12f7c:	add	r1, r5, #1
   12f80:	adds	r0, r0, #1
   12f84:	asr	r2, r1, #31
   12f88:	add	r2, r1, r2, lsr #28
   12f8c:	bic	r2, r2, #15
   12f90:	sub	r5, r1, r2
   12f94:	str	r5, [r8]
   12f98:	bcc	12f70 <sf_gen_load+0x4e8>
   12f9c:	b	12ae0 <sf_gen_load+0x58>
   12fa0:	ldr	r8, [pc, #4076]	; 13f94 <sf_gen_load+0x150c>
   12fa4:	ldr	r8, [pc, r8]
   12fa8:	ldr	sl, [pc, #4072]	; 13f98 <sf_gen_load+0x1510>
   12fac:	add	sl, pc, sl
   12fb0:	b	13594 <sf_gen_load+0xb0c>
   12fb4:	mov	r0, #1
   12fb8:	str	r0, [sl, r5, lsl #2]
   12fbc:	ldr	r0, [pc, #3992]	; 13f5c <sf_gen_load+0x14d4>
   12fc0:	add	r0, pc, r0
   12fc4:	str	r5, [r0]
   12fc8:	ldr	r0, [pc, #3984]	; 13f60 <sf_gen_load+0x14d8>
   12fcc:	ldr	r0, [pc, r0]
   12fd0:	ldr	sl, [pc, #3980]	; 13f64 <sf_gen_load+0x14dc>
   12fd4:	add	sl, pc, sl
   12fd8:	mov	r7, sl
   12fdc:	ldr	r6, [r7, r0, lsl #3]!
   12fe0:	cmp	r6, #19
   12fe4:	bhi	1303c <sf_gen_load+0x5b4>
   12fe8:	ldr	r1, [pc, #3960]	; 13f68 <sf_gen_load+0x14e0>
   12fec:	add	r9, r0, #1
   12ff0:	cmp	r0, #15
   12ff4:	add	r1, pc, r1
   12ff8:	str	r9, [r1]
   12ffc:	bge	13e8c <sf_gen_load+0x1404>
   13000:	mov	r0, #1024	; 0x400
   13004:	lsl	r6, r0, r9
   13008:	mov	r0, r6
   1300c:	bl	dec <malloc@plt>
   13010:	cmp	r0, #0
   13014:	str	r0, [r7, #12]
   13018:	beq	13e8c <sf_gen_load+0x1404>
   1301c:	mov	r1, #0
   13020:	mov	r2, r6
   13024:	add	r7, r7, #8
   13028:	bl	e58 <memset@plt>
   1302c:	cmp	r6, #19
   13030:	str	r6, [r7]
   13034:	bhi	13040 <sf_gen_load+0x5b8>
   13038:	b	13e8c <sf_gen_load+0x1404>
   1303c:	mov	r9, r0
   13040:	sub	r0, r6, #20
   13044:	mov	r1, #97	; 0x61
   13048:	str	r0, [r7]
   1304c:	ldr	r8, [r7, #4]
   13050:	str	r1, [r8, r0]!
   13054:	cmp	r8, #0
   13058:	str	r5, [r8, #12]
   1305c:	beq	130c8 <sf_gen_load+0x640>
   13060:	mov	r7, sl
   13064:	ldr	r6, [r7, r9, lsl #3]!
   13068:	cmp	r6, #19
   1306c:	bhi	13158 <sf_gen_load+0x6d0>
   13070:	ldr	r0, [pc, #3828]	; 13f6c <sf_gen_load+0x14e4>
   13074:	add	sl, r9, #1
   13078:	cmp	r9, #15
   1307c:	add	r0, pc, r0
   13080:	str	sl, [r0]
   13084:	bge	13e8c <sf_gen_load+0x1404>
   13088:	mov	r0, #1024	; 0x400
   1308c:	lsl	r6, r0, sl
   13090:	mov	r0, r6
   13094:	bl	dec <malloc@plt>
   13098:	ldr	r5, [sp, #12]
   1309c:	cmp	r0, #0
   130a0:	str	r0, [r7, #12]
   130a4:	beq	13e8c <sf_gen_load+0x1404>
   130a8:	mov	r1, #0
   130ac:	mov	r2, r6
   130b0:	add	r7, r7, #8
   130b4:	bl	e58 <memset@plt>
   130b8:	cmp	r6, #19
   130bc:	str	r6, [r7]
   130c0:	bhi	13160 <sf_gen_load+0x6d8>
   130c4:	b	13e8c <sf_gen_load+0x1404>
   130c8:	mov	r7, sl
   130cc:	ldr	r6, [r7, r9, lsl #3]!
   130d0:	cmp	r6, #19
   130d4:	bhi	13130 <sf_gen_load+0x6a8>
   130d8:	ldr	r0, [pc, #3748]	; 13f84 <sf_gen_load+0x14fc>
   130dc:	add	r5, r9, #1
   130e0:	cmp	r9, #15
   130e4:	add	r0, pc, r0
   130e8:	str	r5, [r0]
   130ec:	bge	13e8c <sf_gen_load+0x1404>
   130f0:	mov	r0, #1024	; 0x400
   130f4:	lsl	r6, r0, r5
   130f8:	mov	r0, r6
   130fc:	bl	dec <malloc@plt>
   13100:	ldr	r9, [sp, #12]
   13104:	cmp	r0, #0
   13108:	str	r0, [r7, #12]
   1310c:	beq	13e8c <sf_gen_load+0x1404>
   13110:	mov	r1, #0
   13114:	mov	r2, r6
   13118:	add	r7, r7, #8
   1311c:	bl	e58 <memset@plt>
   13120:	cmp	r6, #19
   13124:	str	r6, [r7]
   13128:	bhi	13138 <sf_gen_load+0x6b0>
   1312c:	b	13e8c <sf_gen_load+0x1404>
   13130:	mov	r5, r9
   13134:	ldr	r9, [sp, #12]
   13138:	sub	r0, r6, #20
   1313c:	mov	r1, #97	; 0x61
   13140:	str	r0, [r7]
   13144:	ldr	r8, [r7, #4]
   13148:	str	r1, [r8, r0]!
   1314c:	ldr	r0, [r9, #8]
   13150:	str	r0, [r8, #12]
   13154:	b	132d8 <sf_gen_load+0x850>
   13158:	ldr	r5, [sp, #12]
   1315c:	mov	sl, r9
   13160:	sub	r1, r6, #20
   13164:	mov	r2, #96	; 0x60
   13168:	str	r1, [r7]
   1316c:	ldr	r0, [r7, #4]
   13170:	str	r2, [r0, r1]!
   13174:	mov	r2, r8
   13178:	ldr	r1, [r5, #8]
   1317c:	str	r1, [r0, #12]
   13180:	mov	r1, r2
   13184:	ldr	r2, [r2, #16]
   13188:	cmp	r2, #0
   1318c:	bne	13180 <sf_gen_load+0x6f8>
   13190:	str	r0, [r1, #16]
   13194:	ldr	r5, [pc, #3540]	; 13f70 <sf_gen_load+0x14e8>
   13198:	add	r5, pc, r5
   1319c:	ldr	r6, [r5, sl, lsl #3]!
   131a0:	cmp	r6, #19
   131a4:	bhi	13204 <sf_gen_load+0x77c>
   131a8:	ldr	r0, [pc, #3528]	; 13f78 <sf_gen_load+0x14f0>
   131ac:	add	r9, sl, #1
   131b0:	cmp	sl, #15
   131b4:	add	r0, pc, r0
   131b8:	str	r9, [r0]
   131bc:	bge	13e8c <sf_gen_load+0x1404>
   131c0:	mov	r0, #1024	; 0x400
   131c4:	lsl	r6, r0, r9
   131c8:	mov	r0, r6
   131cc:	bl	dec <malloc@plt>
   131d0:	str	r0, [r5, #12]
   131d4:	cmp	r0, #0
   131d8:	ldr	sl, [pc, #3484]	; 13f7c <sf_gen_load+0x14f4>
   131dc:	add	sl, pc, sl
   131e0:	beq	13e8c <sf_gen_load+0x1404>
   131e4:	mov	r1, #0
   131e8:	mov	r2, r6
   131ec:	add	r5, r5, #8
   131f0:	bl	e58 <memset@plt>
   131f4:	cmp	r6, #19
   131f8:	str	r6, [r5]
   131fc:	bhi	13210 <sf_gen_load+0x788>
   13200:	b	13e8c <sf_gen_load+0x1404>
   13204:	mov	r9, sl
   13208:	ldr	sl, [pc, #3428]	; 13f74 <sf_gen_load+0x14ec>
   1320c:	add	sl, pc, sl
   13210:	sub	r1, r6, #20
   13214:	mov	r2, #12
   13218:	str	r1, [r5]
   1321c:	ldr	r0, [r5, #4]
   13220:	str	r2, [r0, r1]!
   13224:	mov	r2, r8
   13228:	mov	r1, r2
   1322c:	ldr	r2, [r2, #16]
   13230:	cmp	r2, #0
   13234:	bne	13228 <sf_gen_load+0x7a0>
   13238:	str	r0, [r1, #16]
   1323c:	mov	r7, sl
   13240:	ldr	r6, [r7, r9, lsl #3]!
   13244:	cmp	r6, #19
   13248:	bhi	132a4 <sf_gen_load+0x81c>
   1324c:	ldr	r0, [pc, #3372]	; 13f80 <sf_gen_load+0x14f8>
   13250:	add	r5, r9, #1
   13254:	cmp	r9, #15
   13258:	add	r0, pc, r0
   1325c:	str	r5, [r0]
   13260:	bge	13e8c <sf_gen_load+0x1404>
   13264:	mov	r0, #1024	; 0x400
   13268:	lsl	r6, r0, r5
   1326c:	mov	r0, r6
   13270:	bl	dec <malloc@plt>
   13274:	ldr	r9, [sp, #12]
   13278:	cmp	r0, #0
   1327c:	str	r0, [r7, #12]
   13280:	beq	13e8c <sf_gen_load+0x1404>
   13284:	mov	r1, #0
   13288:	mov	r2, r6
   1328c:	add	r7, r7, #8
   13290:	bl	e58 <memset@plt>
   13294:	cmp	r6, #19
   13298:	str	r6, [r7]
   1329c:	bhi	132ac <sf_gen_load+0x824>
   132a0:	b	13e8c <sf_gen_load+0x1404>
   132a4:	mov	r5, r9
   132a8:	ldr	r9, [sp, #12]
   132ac:	sub	r1, r6, #20
   132b0:	mov	r2, #7
   132b4:	str	r1, [r7]
   132b8:	ldr	r0, [r7, #4]
   132bc:	str	r2, [r0, r1]!
   132c0:	mov	r2, r8
   132c4:	mov	r1, r2
   132c8:	ldr	r2, [r2, #16]
   132cc:	cmp	r2, #0
   132d0:	bne	132c4 <sf_gen_load+0x83c>
   132d4:	str	r0, [r1, #16]
   132d8:	mov	r7, sl
   132dc:	ldr	r6, [r7, r5, lsl #3]!
   132e0:	cmp	r6, #19
   132e4:	bhi	13338 <sf_gen_load+0x8b0>
   132e8:	ldr	r1, [pc, #3224]	; 13f88 <sf_gen_load+0x1500>
   132ec:	add	r0, r5, #1
   132f0:	cmp	r5, #15
   132f4:	add	r1, pc, r1
   132f8:	str	r0, [r1]
   132fc:	bge	13e8c <sf_gen_load+0x1404>
   13300:	mov	r1, #1024	; 0x400
   13304:	lsl	r6, r1, r0
   13308:	mov	r0, r6
   1330c:	bl	dec <malloc@plt>
   13310:	cmp	r0, #0
   13314:	str	r0, [r7, #12]
   13318:	beq	13e8c <sf_gen_load+0x1404>
   1331c:	mov	r1, #0
   13320:	mov	r2, r6
   13324:	add	r7, r7, #8
   13328:	bl	e58 <memset@plt>
   1332c:	cmp	r6, #19
   13330:	str	r6, [r7]
   13334:	bls	13e8c <sf_gen_load+0x1404>
   13338:	sub	r1, r6, #20
   1333c:	ldr	r2, [sp, #8]
   13340:	str	r1, [r7]
   13344:	ldr	r0, [r7, #4]
   13348:	str	r2, [r0, r1]!
   1334c:	ldr	r1, [pc, #3128]	; 13f8c <sf_gen_load+0x1504>
   13350:	ldr	r1, [pc, r1]
   13354:	ldr	r2, [pc, #3124]	; 13f90 <sf_gen_load+0x1508>
   13358:	ldr	r2, [pc, r2]
   1335c:	add	r1, r2, r1
   13360:	mov	r2, r8
   13364:	str	r1, [r0, #12]
   13368:	mov	r1, r2
   1336c:	ldr	r2, [r2, #16]
   13370:	cmp	r2, #0
   13374:	bne	13368 <sf_gen_load+0x8e0>
   13378:	str	r0, [r1, #16]
   1337c:	ldr	r0, [sp, #4]
   13380:	ldr	r2, [r9, #4]
   13384:	mov	r1, r2
   13388:	ldr	r2, [r2, #16]
   1338c:	cmp	r2, #0
   13390:	bne	13384 <sf_gen_load+0x8fc>
   13394:	str	r8, [r1, #16]
   13398:	bl	570c <sf_gen_proto_abbrev>
   1339c:	ldr	r1, [r9]
   133a0:	cmp	r1, #0
   133a4:	beq	1346c <sf_gen_load+0x9e4>
   133a8:	ldr	r2, [r0, #96]	; 0x60
   133ac:	mov	r3, r1
   133b0:	ldr	r7, [r3, #44]	; 0x2c
   133b4:	add	r6, r3, #84	; 0x54
   133b8:	cmp	r7, #0
   133bc:	mov	r7, #84	; 0x54
   133c0:	movweq	r7, #60	; 0x3c
   133c4:	addeq	r6, r3, #60	; 0x3c
   133c8:	ldr	r3, [r3, r7]
   133cc:	str	r2, [r6]
   133d0:	cmp	r3, #0
   133d4:	bne	133b0 <sf_gen_load+0x928>
   133d8:	ldr	r2, [r1, #44]	; 0x2c
   133dc:	cmp	r0, #0
   133e0:	clz	r2, r2
   133e4:	lsr	r2, r2, #5
   133e8:	str	r2, [r1, #44]	; 0x2c
   133ec:	ldr	r3, [r0, #44]	; 0x2c
   133f0:	clz	r2, r3
   133f4:	lsr	r2, r2, #5
   133f8:	str	r2, [r0, #44]	; 0x2c
   133fc:	str	r0, [sp, #16]
   13400:	beq	1344c <sf_gen_load+0x9c4>
   13404:	cmp	r3, #0
   13408:	mov	r3, #60	; 0x3c
   1340c:	add	r2, r0, #60	; 0x3c
   13410:	movweq	r3, #84	; 0x54
   13414:	addeq	r2, r0, #84	; 0x54
   13418:	ldr	r3, [r0, r3]
   1341c:	cmp	r3, #0
   13420:	beq	13450 <sf_gen_load+0x9c8>
   13424:	ldr	r7, [r3, #44]	; 0x2c
   13428:	add	r2, r3, #84	; 0x54
   1342c:	cmp	r7, #0
   13430:	mov	r7, #84	; 0x54
   13434:	movweq	r7, #60	; 0x3c
   13438:	addeq	r2, r3, #60	; 0x3c
   1343c:	ldr	r3, [r3, r7]
   13440:	cmp	r3, #0
   13444:	bne	13424 <sf_gen_load+0x99c>
   13448:	b	13450 <sf_gen_load+0x9c8>
   1344c:	add	r2, sp, #16
   13450:	str	r1, [r2]
   13454:	ldr	r2, [r0, #44]	; 0x2c
   13458:	clz	r2, r2
   1345c:	lsr	r2, r2, #5
   13460:	str	r2, [r0, #44]	; 0x2c
   13464:	ldr	r1, [r1, #96]	; 0x60
   13468:	str	r1, [r0, #96]	; 0x60
   1346c:	str	r0, [r9]
   13470:	b	13974 <sf_gen_load+0xeec>
   13474:	mov	r0, #1
   13478:	str	r0, [sl, r5, lsl #2]
   1347c:	ldr	r0, [pc, #2840]	; 13f9c <sf_gen_load+0x1514>
   13480:	add	r0, pc, r0
   13484:	str	r5, [r0]
   13488:	ldr	r0, [pc, #2832]	; 13fa0 <sf_gen_load+0x1518>
   1348c:	ldr	r0, [pc, r0]
   13490:	ldr	sl, [pc, #2828]	; 13fa4 <sf_gen_load+0x151c>
   13494:	add	sl, pc, sl
   13498:	mov	r7, sl
   1349c:	ldr	r6, [r7, r0, lsl #3]!
   134a0:	cmp	r6, #19
   134a4:	bhi	13504 <sf_gen_load+0xa7c>
   134a8:	str	r3, [sp, #8]
   134ac:	add	r8, r0, #1
   134b0:	cmp	r0, #15
   134b4:	ldr	r1, [pc, #2796]	; 13fa8 <sf_gen_load+0x1520>
   134b8:	add	r1, pc, r1
   134bc:	str	r8, [r1]
   134c0:	bge	13e8c <sf_gen_load+0x1404>
   134c4:	mov	r0, #1024	; 0x400
   134c8:	lsl	r6, r0, r8
   134cc:	mov	r0, r6
   134d0:	bl	dec <malloc@plt>
   134d4:	cmp	r0, #0
   134d8:	str	r0, [r7, #12]
   134dc:	beq	13e8c <sf_gen_load+0x1404>
   134e0:	mov	r1, #0
   134e4:	mov	r2, r6
   134e8:	add	r7, r7, #8
   134ec:	bl	e58 <memset@plt>
   134f0:	ldr	r3, [sp, #8]
   134f4:	cmp	r6, #19
   134f8:	str	r6, [r7]
   134fc:	bhi	13508 <sf_gen_load+0xa80>
   13500:	b	13e8c <sf_gen_load+0x1404>
   13504:	mov	r8, r0
   13508:	sub	r0, r6, #20
   1350c:	mov	r1, #97	; 0x61
   13510:	str	r0, [r7]
   13514:	ldr	r7, [r7, #4]
   13518:	str	r1, [r7, r0]!
   1351c:	cmp	r7, #0
   13520:	str	r5, [r7, #12]
   13524:	beq	13594 <sf_gen_load+0xb0c>
   13528:	mov	r5, sl
   1352c:	ldr	r6, [r5, r8, lsl #3]!
   13530:	cmp	r6, #19
   13534:	bhi	1362c <sf_gen_load+0xba4>
   13538:	str	r3, [sp, #8]
   1353c:	add	sl, r8, #1
   13540:	cmp	r8, #15
   13544:	ldr	r0, [pc, #2656]	; 13fac <sf_gen_load+0x1524>
   13548:	add	r0, pc, r0
   1354c:	str	sl, [r0]
   13550:	bge	13e8c <sf_gen_load+0x1404>
   13554:	mov	r0, #1024	; 0x400
   13558:	lsl	r6, r0, sl
   1355c:	mov	r0, r6
   13560:	bl	dec <malloc@plt>
   13564:	cmp	r0, #0
   13568:	str	r0, [r5, #12]
   1356c:	beq	13e8c <sf_gen_load+0x1404>
   13570:	mov	r1, #0
   13574:	mov	r2, r6
   13578:	add	r5, r5, #8
   1357c:	bl	e58 <memset@plt>
   13580:	ldr	r3, [sp, #8]
   13584:	cmp	r6, #19
   13588:	str	r6, [r5]
   1358c:	bhi	13630 <sf_gen_load+0xba8>
   13590:	b	13e8c <sf_gen_load+0x1404>
   13594:	mov	r5, sl
   13598:	ldr	r6, [r5, r8, lsl #3]!
   1359c:	cmp	r6, #19
   135a0:	bhi	13600 <sf_gen_load+0xb78>
   135a4:	ldr	r0, [pc, #2564]	; 13fb0 <sf_gen_load+0x1528>
   135a8:	add	sl, r8, #1
   135ac:	cmp	r8, #15
   135b0:	add	r0, pc, r0
   135b4:	str	sl, [r0]
   135b8:	bge	13e8c <sf_gen_load+0x1404>
   135bc:	mov	r0, #1024	; 0x400
   135c0:	mov	r7, r3
   135c4:	lsl	r6, r0, sl
   135c8:	mov	r0, r6
   135cc:	bl	dec <malloc@plt>
   135d0:	cmp	r0, #0
   135d4:	str	r0, [r5, #12]
   135d8:	beq	13e8c <sf_gen_load+0x1404>
   135dc:	mov	r1, #0
   135e0:	mov	r2, r6
   135e4:	add	r5, r5, #8
   135e8:	bl	e58 <memset@plt>
   135ec:	cmp	r6, #19
   135f0:	mov	r3, r7
   135f4:	str	r6, [r5]
   135f8:	bhi	13604 <sf_gen_load+0xb7c>
   135fc:	b	13e8c <sf_gen_load+0x1404>
   13600:	mov	sl, r8
   13604:	sub	r0, r6, #20
   13608:	mov	r1, #40	; 0x28
   1360c:	str	r0, [r5]
   13610:	ldr	r7, [r5, #4]
   13614:	str	r1, [r7, r0]!
   13618:	ldr	r0, [pc, #2452]	; 13fb4 <sf_gen_load+0x152c>
   1361c:	ldr	r0, [pc, r0]
   13620:	add	r0, r0, r3
   13624:	str	r0, [r7, #12]
   13628:	b	13660 <sf_gen_load+0xbd8>
   1362c:	mov	sl, r8
   13630:	sub	r1, r6, #20
   13634:	mov	r2, #72	; 0x48
   13638:	str	r1, [r5]
   1363c:	ldr	r0, [r5, #4]
   13640:	str	r2, [r0, r1]!
   13644:	mov	r2, r7
   13648:	str	r3, [r0, #12]
   1364c:	mov	r1, r2
   13650:	ldr	r2, [r2, #16]
   13654:	cmp	r2, #0
   13658:	bne	1364c <sf_gen_load+0xbc4>
   1365c:	str	r0, [r1, #16]
   13660:	ldr	r5, [pc, #2384]	; 13fb8 <sf_gen_load+0x1530>
   13664:	add	r5, pc, r5
   13668:	ldr	r6, [r5, sl, lsl #3]!
   1366c:	cmp	r6, #207	; 0xcf
   13670:	bhi	136d0 <sf_gen_load+0xc48>
   13674:	ldr	r1, [pc, #2372]	; 13fc0 <sf_gen_load+0x1538>
   13678:	add	r0, sl, #1
   1367c:	cmp	sl, #15
   13680:	add	r1, pc, r1
   13684:	str	r0, [r1]
   13688:	bge	13e8c <sf_gen_load+0x1404>
   1368c:	mov	r1, #1024	; 0x400
   13690:	lsl	r6, r1, r0
   13694:	mov	r0, r6
   13698:	bl	dec <malloc@plt>
   1369c:	str	r0, [r5, #12]
   136a0:	cmp	r0, #0
   136a4:	ldr	sl, [pc, #2328]	; 13fc4 <sf_gen_load+0x153c>
   136a8:	add	sl, pc, sl
   136ac:	beq	13e8c <sf_gen_load+0x1404>
   136b0:	mov	r1, #0
   136b4:	mov	r2, r6
   136b8:	add	r5, r5, #8
   136bc:	bl	e58 <memset@plt>
   136c0:	cmp	r6, #207	; 0xcf
   136c4:	str	r6, [r5]
   136c8:	bhi	136d8 <sf_gen_load+0xc50>
   136cc:	b	13e8c <sf_gen_load+0x1404>
   136d0:	ldr	sl, [pc, #2276]	; 13fbc <sf_gen_load+0x1534>
   136d4:	add	sl, pc, sl
   136d8:	sub	r0, r6, #208	; 0xd0
   136dc:	cmp	r9, #0
   136e0:	str	r0, [r5]
   136e4:	ldr	r1, [r5, #4]
   136e8:	add	r6, r1, r0
   136ec:	movw	r1, #8191	; 0x1fff
   136f0:	mov	r0, #69	; 0x45
   136f4:	str	r1, [r6, #20]
   136f8:	str	r7, [r6, #4]
   136fc:	str	r0, [r6, #8]
   13700:	ldr	r0, [r6, #44]	; 0x2c
   13704:	clz	r0, r0
   13708:	lsr	r0, r0, #5
   1370c:	str	r0, [r6, #44]	; 0x2c
   13710:	str	r6, [r6, #96]	; 0x60
   13714:	beq	13744 <sf_gen_load+0xcbc>
   13718:	mov	r0, r9
   1371c:	ldr	r1, [r0, #44]	; 0x2c
   13720:	add	r2, r0, #84	; 0x54
   13724:	cmp	r1, #0
   13728:	mov	r1, #84	; 0x54
   1372c:	movweq	r1, #60	; 0x3c
   13730:	addeq	r2, r0, #60	; 0x3c
   13734:	ldr	r0, [r0, r1]
   13738:	str	r6, [r2]
   1373c:	cmp	r0, #0
   13740:	bne	1371c <sf_gen_load+0xc94>
   13744:	ldr	r0, [r9, #44]	; 0x2c
   13748:	cmp	r6, #0
   1374c:	clz	r0, r0
   13750:	lsr	r0, r0, #5
   13754:	str	r0, [r9, #44]	; 0x2c
   13758:	ldr	r0, [r6, #44]	; 0x2c
   1375c:	clz	r1, r0
   13760:	lsr	r1, r1, #5
   13764:	str	r1, [r6, #44]	; 0x2c
   13768:	str	r6, [sp, #16]
   1376c:	beq	137b4 <sf_gen_load+0xd2c>
   13770:	cmp	r0, #0
   13774:	mov	r2, #60	; 0x3c
   13778:	mov	r1, r6
   1377c:	movweq	r2, #84	; 0x54
   13780:	ldr	r0, [r1, r2]!
   13784:	cmp	r0, #0
   13788:	beq	137b8 <sf_gen_load+0xd30>
   1378c:	ldr	r2, [r0, #44]	; 0x2c
   13790:	add	r1, r0, #84	; 0x54
   13794:	cmp	r2, #0
   13798:	mov	r2, #84	; 0x54
   1379c:	movweq	r2, #60	; 0x3c
   137a0:	addeq	r1, r0, #60	; 0x3c
   137a4:	ldr	r0, [r0, r2]
   137a8:	cmp	r0, #0
   137ac:	bne	1378c <sf_gen_load+0xd04>
   137b0:	b	137b8 <sf_gen_load+0xd30>
   137b4:	add	r1, sp, #16
   137b8:	str	r9, [r1]
   137bc:	ldr	r0, [r6, #44]	; 0x2c
   137c0:	clz	r0, r0
   137c4:	lsr	r0, r0, #5
   137c8:	str	r0, [r6, #44]	; 0x2c
   137cc:	ldr	r1, [r9, #96]	; 0x60
   137d0:	ldr	r9, [sp, #12]
   137d4:	str	r1, [r6, #96]	; 0x60
   137d8:	ldr	r0, [r9]
   137dc:	cmp	r0, #0
   137e0:	beq	138a0 <sf_gen_load+0xe18>
   137e4:	mov	r2, r0
   137e8:	ldr	r3, [r2, #44]	; 0x2c
   137ec:	add	r7, r2, #84	; 0x54
   137f0:	cmp	r3, #0
   137f4:	mov	r3, #84	; 0x54
   137f8:	movweq	r3, #60	; 0x3c
   137fc:	addeq	r7, r2, #60	; 0x3c
   13800:	ldr	r2, [r2, r3]
   13804:	str	r1, [r7]
   13808:	cmp	r2, #0
   1380c:	bne	137e8 <sf_gen_load+0xd60>
   13810:	ldr	r1, [r0, #44]	; 0x2c
   13814:	cmp	r6, #0
   13818:	clz	r1, r1
   1381c:	lsr	r1, r1, #5
   13820:	str	r1, [r0, #44]	; 0x2c
   13824:	ldr	r1, [r6, #44]	; 0x2c
   13828:	clz	r2, r1
   1382c:	lsr	r2, r2, #5
   13830:	str	r2, [r6, #44]	; 0x2c
   13834:	str	r6, [sp, #16]
   13838:	beq	13880 <sf_gen_load+0xdf8>
   1383c:	cmp	r1, #0
   13840:	mov	r3, #60	; 0x3c
   13844:	mov	r2, r6
   13848:	movweq	r3, #84	; 0x54
   1384c:	ldr	r1, [r2, r3]!
   13850:	cmp	r1, #0
   13854:	beq	13884 <sf_gen_load+0xdfc>
   13858:	ldr	r3, [r1, #44]	; 0x2c
   1385c:	add	r2, r1, #84	; 0x54
   13860:	cmp	r3, #0
   13864:	mov	r3, #84	; 0x54
   13868:	movweq	r3, #60	; 0x3c
   1386c:	addeq	r2, r1, #60	; 0x3c
   13870:	ldr	r1, [r1, r3]
   13874:	cmp	r1, #0
   13878:	bne	13858 <sf_gen_load+0xdd0>
   1387c:	b	13884 <sf_gen_load+0xdfc>
   13880:	add	r2, sp, #16
   13884:	str	r0, [r2]
   13888:	ldr	r1, [r6, #44]	; 0x2c
   1388c:	clz	r1, r1
   13890:	lsr	r1, r1, #5
   13894:	str	r1, [r6, #44]	; 0x2c
   13898:	ldr	r0, [r0, #96]	; 0x60
   1389c:	str	r0, [r6, #96]	; 0x60
   138a0:	mov	r0, #2048	; 0x800
   138a4:	bl	71fc <gen_linktype>
   138a8:	cmp	r0, #0
   138ac:	beq	138e0 <sf_gen_load+0xe58>
   138b0:	ldr	r1, [r6, #96]	; 0x60
   138b4:	mov	r2, r0
   138b8:	ldr	r3, [r2, #44]	; 0x2c
   138bc:	add	r7, r2, #84	; 0x54
   138c0:	cmp	r3, #0
   138c4:	mov	r3, #84	; 0x54
   138c8:	movweq	r3, #60	; 0x3c
   138cc:	addeq	r7, r2, #60	; 0x3c
   138d0:	ldr	r2, [r2, r3]
   138d4:	str	r1, [r7]
   138d8:	cmp	r2, #0
   138dc:	bne	138b8 <sf_gen_load+0xe30>
   138e0:	ldr	r1, [r0, #44]	; 0x2c
   138e4:	cmp	r6, #0
   138e8:	clz	r1, r1
   138ec:	lsr	r1, r1, #5
   138f0:	str	r1, [r0, #44]	; 0x2c
   138f4:	ldr	r1, [r6, #44]	; 0x2c
   138f8:	clz	r2, r1
   138fc:	lsr	r2, r2, #5
   13900:	str	r2, [r6, #44]	; 0x2c
   13904:	str	r6, [sp, #16]
   13908:	beq	13950 <sf_gen_load+0xec8>
   1390c:	cmp	r1, #0
   13910:	mov	r3, #60	; 0x3c
   13914:	mov	r2, r6
   13918:	movweq	r3, #84	; 0x54
   1391c:	ldr	r1, [r2, r3]!
   13920:	cmp	r1, #0
   13924:	beq	13954 <sf_gen_load+0xecc>
   13928:	ldr	r3, [r1, #44]	; 0x2c
   1392c:	add	r2, r1, #84	; 0x54
   13930:	cmp	r3, #0
   13934:	mov	r3, #84	; 0x54
   13938:	movweq	r3, #60	; 0x3c
   1393c:	addeq	r2, r1, #60	; 0x3c
   13940:	ldr	r1, [r1, r3]
   13944:	cmp	r1, #0
   13948:	bne	13928 <sf_gen_load+0xea0>
   1394c:	b	13954 <sf_gen_load+0xecc>
   13950:	add	r2, sp, #16
   13954:	str	r0, [r2]
   13958:	ldr	r1, [r6, #44]	; 0x2c
   1395c:	clz	r1, r1
   13960:	lsr	r1, r1, #5
   13964:	str	r1, [r6, #44]	; 0x2c
   13968:	ldr	r0, [r0, #96]	; 0x60
   1396c:	str	r0, [r6, #96]	; 0x60
   13970:	str	r6, [r9]
   13974:	str	r4, [r9, #8]
   13978:	ldr	r0, [pc, #1608]	; 13fc8 <sf_gen_load+0x1540>
   1397c:	ldr	r0, [pc, r0]
   13980:	ldr	r5, [sl, r0, lsl #3]!
   13984:	cmp	r5, #19
   13988:	bhi	139dc <sf_gen_load+0xf54>
   1398c:	ldr	r2, [pc, #1592]	; 13fcc <sf_gen_load+0x1544>
   13990:	add	r1, r0, #1
   13994:	cmp	r0, #15
   13998:	add	r2, pc, r2
   1399c:	str	r1, [r2]
   139a0:	bge	13e8c <sf_gen_load+0x1404>
   139a4:	mov	r0, #1024	; 0x400
   139a8:	lsl	r5, r0, r1
   139ac:	mov	r0, r5
   139b0:	bl	dec <malloc@plt>
   139b4:	cmp	r0, #0
   139b8:	str	r0, [sl, #12]
   139bc:	beq	13e8c <sf_gen_load+0x1404>
   139c0:	mov	r1, #0
   139c4:	mov	r2, r5
   139c8:	add	sl, sl, #8
   139cc:	bl	e58 <memset@plt>
   139d0:	cmp	r5, #19
   139d4:	str	r5, [sl]
   139d8:	bls	13e8c <sf_gen_load+0x1404>
   139dc:	sub	r1, r5, #20
   139e0:	mov	r2, #2
   139e4:	str	r1, [sl]
   139e8:	ldr	r0, [sl, #4]
   139ec:	str	r2, [r0, r1]!
   139f0:	str	r4, [r0, #12]
   139f4:	ldr	r1, [r9, #4]
   139f8:	mov	r2, r1
   139fc:	ldr	r1, [r1, #16]
   13a00:	cmp	r1, #0
   13a04:	bne	139f8 <sf_gen_load+0xf70>
   13a08:	str	r0, [r2, #16]
   13a0c:	mov	r0, r9
   13a10:	sub	sp, fp, #28
   13a14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a18:	.word	0x00034a6c
   13a1c:	ldr	r0, [pc, #1292]	; 13f30 <sf_gen_load+0x14a8>
   13a20:	ldr	r0, [pc, r0]
   13a24:	cmp	r0, #119	; 0x77
   13a28:	cmpne	r0, #127	; 0x7f
   13a2c:	bne	13de8 <sf_gen_load+0x1360>
   13a30:	ldr	r0, [pc, #1276]	; 13f34 <sf_gen_load+0x14ac>
   13a34:	ldr	r0, [pc, r0]
   13a38:	ldr	sl, [pc, #1272]	; 13f38 <sf_gen_load+0x14b0>
   13a3c:	add	sl, pc, sl
   13a40:	mov	r6, sl
   13a44:	ldr	r5, [r6, r0, lsl #3]!
   13a48:	cmp	r5, #19
   13a4c:	bhi	13b34 <sf_gen_load+0x10ac>
   13a50:	ldr	r1, [pc, #1252]	; 13f3c <sf_gen_load+0x14b4>
   13a54:	add	r8, r0, #1
   13a58:	cmp	r0, #15
   13a5c:	add	r1, pc, r1
   13a60:	str	r8, [r1]
   13a64:	bge	13e8c <sf_gen_load+0x1404>
   13a68:	mov	r0, #1024	; 0x400
   13a6c:	lsl	r5, r0, r8
   13a70:	mov	r0, r5
   13a74:	bl	dec <malloc@plt>
   13a78:	cmp	r0, #0
   13a7c:	str	r0, [r6, #12]
   13a80:	beq	13e8c <sf_gen_load+0x1404>
   13a84:	mov	r1, #0
   13a88:	mov	r2, r5
   13a8c:	add	r6, r6, #8
   13a90:	bl	e58 <memset@plt>
   13a94:	cmp	r5, #19
   13a98:	str	r5, [r6]
   13a9c:	bhi	13b38 <sf_gen_load+0x10b0>
   13aa0:	b	13e8c <sf_gen_load+0x1404>
   13aa4:	.word	0x00034a64
   13aa8:	.word	0x00034a5c
   13aac:	.word	0x000185e9
   13ab0:	bl	14084 <gen_llprefixlen>
   13ab4:	mov	r8, r0
   13ab8:	ldr	r0, [pc, #1156]	; 13f44 <sf_gen_load+0x14bc>
   13abc:	mov	r5, r7
   13ac0:	mov	sl, r7
   13ac4:	cmp	r8, #0
   13ac8:	ldr	r0, [pc, r0]
   13acc:	ldr	r6, [r5, r0, lsl #3]!
   13ad0:	beq	13c04 <sf_gen_load+0x117c>
   13ad4:	cmp	r6, #19
   13ad8:	bhi	13c70 <sf_gen_load+0x11e8>
   13adc:	ldr	r1, [pc, #1124]	; 13f48 <sf_gen_load+0x14c0>
   13ae0:	add	r9, r0, #1
   13ae4:	cmp	r0, #15
   13ae8:	add	r1, pc, r1
   13aec:	str	r9, [r1]
   13af0:	bge	13e8c <sf_gen_load+0x1404>
   13af4:	mov	r0, #1024	; 0x400
   13af8:	lsl	r6, r0, r9
   13afc:	mov	r0, r6
   13b00:	bl	dec <malloc@plt>
   13b04:	cmp	r0, #0
   13b08:	str	r0, [r5, #12]
   13b0c:	beq	13e8c <sf_gen_load+0x1404>
   13b10:	mov	r1, #0
   13b14:	mov	r2, r6
   13b18:	add	r5, r5, #8
   13b1c:	bl	e58 <memset@plt>
   13b20:	cmp	r6, #19
   13b24:	str	r6, [r5]
   13b28:	bhi	13c74 <sf_gen_load+0x11ec>
   13b2c:	b	13e8c <sf_gen_load+0x1404>
   13b30:	.word	0x0003492c
   13b34:	mov	r8, r0
   13b38:	sub	r0, r5, #20
   13b3c:	mov	r1, #97	; 0x61
   13b40:	mov	r7, sl
   13b44:	str	r0, [r6]
   13b48:	ldr	r6, [r6, #4]
   13b4c:	str	r1, [r6, r0]!
   13b50:	ldr	r0, [r9, #8]
   13b54:	str	r0, [r6, #12]
   13b58:	ldr	r5, [r7, r8, lsl #3]!
   13b5c:	cmp	r5, #19
   13b60:	bhi	13bb4 <sf_gen_load+0x112c>
   13b64:	ldr	r1, [pc, #980]	; 13f40 <sf_gen_load+0x14b8>
   13b68:	add	r0, r8, #1
   13b6c:	cmp	r8, #15
   13b70:	add	r1, pc, r1
   13b74:	str	r0, [r1]
   13b78:	bge	13e8c <sf_gen_load+0x1404>
   13b7c:	mov	r1, #1024	; 0x400
   13b80:	lsl	r5, r1, r0
   13b84:	mov	r0, r5
   13b88:	bl	dec <malloc@plt>
   13b8c:	cmp	r0, #0
   13b90:	str	r0, [r7, #12]
   13b94:	beq	13e8c <sf_gen_load+0x1404>
   13b98:	mov	r1, #0
   13b9c:	mov	r2, r5
   13ba0:	add	r7, r7, #8
   13ba4:	bl	e58 <memset@plt>
   13ba8:	cmp	r5, #19
   13bac:	str	r5, [r7]
   13bb0:	bls	13e8c <sf_gen_load+0x1404>
   13bb4:	sub	r1, r5, #20
   13bb8:	ldr	r2, [sp, #8]
   13bbc:	str	r1, [r7]
   13bc0:	ldr	r0, [r7, #4]
   13bc4:	str	r2, [r0, r1]!
   13bc8:	mov	r2, r6
   13bcc:	mov	r1, r2
   13bd0:	ldr	r2, [r2, #16]
   13bd4:	cmp	r2, #0
   13bd8:	bne	13bcc <sf_gen_load+0x1144>
   13bdc:	str	r0, [r1, #16]
   13be0:	ldr	r0, [r9, #4]
   13be4:	mov	r1, r0
   13be8:	ldr	r0, [r0, #16]
   13bec:	cmp	r0, #0
   13bf0:	bne	13be4 <sf_gen_load+0x115c>
   13bf4:	str	r6, [r1, #16]
   13bf8:	b	13974 <sf_gen_load+0xeec>
   13bfc:	.word	0x00034904
   13c00:	.word	0x000348f8
   13c04:	cmp	r6, #19
   13c08:	bhi	13e04 <sf_gen_load+0x137c>
   13c0c:	ldr	r1, [pc, #832]	; 13f54 <sf_gen_load+0x14cc>
   13c10:	add	r9, r0, #1
   13c14:	cmp	r0, #15
   13c18:	add	r1, pc, r1
   13c1c:	str	r9, [r1]
   13c20:	bge	13e8c <sf_gen_load+0x1404>
   13c24:	mov	r0, #1024	; 0x400
   13c28:	lsl	r6, r0, r9
   13c2c:	mov	r0, r6
   13c30:	bl	dec <malloc@plt>
   13c34:	cmp	r0, #0
   13c38:	str	r0, [r5, #12]
   13c3c:	beq	13e8c <sf_gen_load+0x1404>
   13c40:	mov	r1, #0
   13c44:	mov	r2, r6
   13c48:	add	r5, r5, #8
   13c4c:	bl	e58 <memset@plt>
   13c50:	cmp	r6, #19
   13c54:	str	r6, [r5]
   13c58:	bhi	13e08 <sf_gen_load+0x1380>
   13c5c:	b	13e8c <sf_gen_load+0x1404>
   13c60:	.word	0x00034898
   13c64:	.word	0x00034878
   13c68:	.word	0x00034828
   13c6c:	.word	0x000347a0
   13c70:	mov	r9, r0
   13c74:	sub	r1, r6, #20
   13c78:	mov	r2, #96	; 0x60
   13c7c:	str	r1, [r5]
   13c80:	ldr	r0, [r5, #4]
   13c84:	str	r2, [r0, r1]!
   13c88:	mov	r2, r8
   13c8c:	ldr	r1, [sp, #12]
   13c90:	ldr	r1, [r1, #8]
   13c94:	str	r1, [r0, #12]
   13c98:	mov	r1, r2
   13c9c:	ldr	r2, [r2, #16]
   13ca0:	cmp	r2, #0
   13ca4:	bne	13c98 <sf_gen_load+0x1210>
   13ca8:	str	r0, [r1, #16]
   13cac:	mov	r7, sl
   13cb0:	ldr	r6, [r7, r9, lsl #3]!
   13cb4:	cmp	r6, #19
   13cb8:	bhi	13d18 <sf_gen_load+0x1290>
   13cbc:	ldr	r0, [pc, #648]	; 13f4c <sf_gen_load+0x14c4>
   13cc0:	add	r5, r9, #1
   13cc4:	cmp	r9, #15
   13cc8:	add	r0, pc, r0
   13ccc:	str	r5, [r0]
   13cd0:	bge	13e8c <sf_gen_load+0x1404>
   13cd4:	mov	r0, #1024	; 0x400
   13cd8:	lsl	r6, r0, r5
   13cdc:	mov	r0, r6
   13ce0:	bl	dec <malloc@plt>
   13ce4:	cmp	r0, #0
   13ce8:	str	r0, [r7, #12]
   13cec:	beq	13e8c <sf_gen_load+0x1404>
   13cf0:	mov	r1, #0
   13cf4:	mov	r2, r6
   13cf8:	add	r7, r7, #8
   13cfc:	bl	e58 <memset@plt>
   13d00:	cmp	r6, #19
   13d04:	str	r6, [r7]
   13d08:	bhi	13d1c <sf_gen_load+0x1294>
   13d0c:	b	13e8c <sf_gen_load+0x1404>
   13d10:	.word	0x00034758
   13d14:	.word	0x000347bc
   13d18:	mov	r5, r9
   13d1c:	sub	r1, r6, #20
   13d20:	mov	r2, #12
   13d24:	str	r1, [r7]
   13d28:	ldr	r0, [r7, #4]
   13d2c:	str	r2, [r0, r1]!
   13d30:	mov	r2, r8
   13d34:	mov	r1, r2
   13d38:	ldr	r2, [r2, #16]
   13d3c:	cmp	r2, #0
   13d40:	bne	13d34 <sf_gen_load+0x12ac>
   13d44:	str	r0, [r1, #16]
   13d48:	mov	r7, sl
   13d4c:	ldr	r6, [r7, r5, lsl #3]!
   13d50:	cmp	r6, #19
   13d54:	bhi	13db4 <sf_gen_load+0x132c>
   13d58:	ldr	r0, [pc, #496]	; 13f50 <sf_gen_load+0x14c8>
   13d5c:	add	r9, r5, #1
   13d60:	cmp	r5, #15
   13d64:	add	r0, pc, r0
   13d68:	str	r9, [r0]
   13d6c:	bge	13e8c <sf_gen_load+0x1404>
   13d70:	mov	r0, #1024	; 0x400
   13d74:	lsl	r6, r0, r9
   13d78:	mov	r0, r6
   13d7c:	bl	dec <malloc@plt>
   13d80:	cmp	r0, #0
   13d84:	str	r0, [r7, #12]
   13d88:	beq	13e8c <sf_gen_load+0x1404>
   13d8c:	mov	r1, #0
   13d90:	mov	r2, r6
   13d94:	add	r7, r7, #8
   13d98:	bl	e58 <memset@plt>
   13d9c:	cmp	r6, #19
   13da0:	str	r6, [r7]
   13da4:	bhi	13db8 <sf_gen_load+0x1330>
   13da8:	b	13e8c <sf_gen_load+0x1404>
   13dac:	.word	0x000346bc
   13db0:	.word	0x00034720
   13db4:	mov	r9, r5
   13db8:	sub	r1, r6, #20
   13dbc:	mov	r2, #7
   13dc0:	str	r1, [r7]
   13dc4:	ldr	r0, [r7, #4]
   13dc8:	str	r2, [r0, r1]!
   13dcc:	mov	r2, r8
   13dd0:	mov	r1, r2
   13dd4:	ldr	r2, [r2, #16]
   13dd8:	cmp	r2, #0
   13ddc:	bne	13dd0 <sf_gen_load+0x1348>
   13de0:	str	r0, [r1, #16]
   13de4:	b	13e28 <sf_gen_load+0x13a0>
   13de8:	cmp	r0, #163	; 0xa3
   13dec:	beq	13a30 <sf_gen_load+0xfa8>
   13df0:	ldr	r0, [pc, #472]	; 13fd0 <sf_gen_load+0x1548>
   13df4:	add	r0, pc, r0
   13df8:	bl	2068 <sf_bpf_error>
   13dfc:	.word	0x00034620
   13e00:	.word	0x00034684
   13e04:	mov	r9, r0
   13e08:	sub	r0, r6, #20
   13e0c:	mov	r1, #97	; 0x61
   13e10:	str	r0, [r5]
   13e14:	ldr	r8, [r5, #4]
   13e18:	str	r1, [r8, r0]!
   13e1c:	ldr	r0, [sp, #12]
   13e20:	ldr	r0, [r0, #8]
   13e24:	str	r0, [r8, #12]
   13e28:	mov	r5, sl
   13e2c:	ldr	r6, [r5, r9, lsl #3]!
   13e30:	cmp	r6, #19
   13e34:	bhi	13e98 <sf_gen_load+0x1410>
   13e38:	ldr	r1, [pc, #280]	; 13f58 <sf_gen_load+0x14d0>
   13e3c:	add	r0, r9, #1
   13e40:	cmp	r9, #15
   13e44:	add	r1, pc, r1
   13e48:	str	r0, [r1]
   13e4c:	bge	13e8c <sf_gen_load+0x1404>
   13e50:	mov	r1, #1024	; 0x400
   13e54:	lsl	r6, r1, r0
   13e58:	mov	r0, r6
   13e5c:	bl	dec <malloc@plt>
   13e60:	ldr	r9, [sp, #12]
   13e64:	cmp	r0, #0
   13e68:	str	r0, [r5, #12]
   13e6c:	beq	13e8c <sf_gen_load+0x1404>
   13e70:	mov	r1, #0
   13e74:	mov	r2, r6
   13e78:	add	r5, r5, #8
   13e7c:	bl	e58 <memset@plt>
   13e80:	cmp	r6, #19
   13e84:	str	r6, [r5]
   13e88:	bhi	13e9c <sf_gen_load+0x1414>
   13e8c:	ldr	r0, [pc, #320]	; 13fd4 <sf_gen_load+0x154c>
   13e90:	add	r0, pc, r0
   13e94:	bl	2068 <sf_bpf_error>
   13e98:	ldr	r9, [sp, #12]
   13e9c:	sub	r1, r6, #20
   13ea0:	ldr	r2, [sp, #8]
   13ea4:	str	r1, [r5]
   13ea8:	ldr	r0, [r5, #4]
   13eac:	str	r2, [r0, r1]!
   13eb0:	mov	r1, #0
   13eb4:	mov	r2, r8
   13eb8:	str	r1, [r0, #12]
   13ebc:	mov	r1, r2
   13ec0:	ldr	r2, [r2, #16]
   13ec4:	cmp	r2, #0
   13ec8:	bne	13ebc <sf_gen_load+0x1434>
   13ecc:	str	r0, [r1, #16]
   13ed0:	ldr	r0, [r9, #4]
   13ed4:	mov	r1, r0
   13ed8:	ldr	r0, [r0, #16]
   13edc:	cmp	r0, #0
   13ee0:	bne	13ed4 <sf_gen_load+0x144c>
   13ee4:	str	r8, [r1, #16]
   13ee8:	b	13974 <sf_gen_load+0xeec>
   13eec:	ldr	r0, [pc, #56]	; 13f2c <sf_gen_load+0x14a4>
   13ef0:	add	r0, pc, r0
   13ef4:	bl	2068 <sf_bpf_error>
   13ef8:	.word	0x00034540
   13efc:	.word	0x0003453c
   13f00:	ldr	r0, [pc, #32]	; 13f28 <sf_gen_load+0x14a0>
   13f04:	add	r0, pc, r0
   13f08:	bl	2068 <sf_bpf_error>
   13f0c:	ldr	r0, [pc, #196]	; 13fd8 <sf_gen_load+0x1550>
   13f10:	add	r0, pc, r0
   13f14:	bl	2068 <sf_bpf_error>
   13f18:	.word	0x000345c8
   13f1c:	.word	0x000344fc
   13f20:	.word	0x000345b0
   13f24:	.word	0x000345a0
   13f28:	.word	0x000160fd
   13f2c:	.word	0x0001612e
   13f30:	.word	0x00033a10
   13f34:	.word	0x00033ac8
   13f38:	.word	0x00033a40
   13f3c:	.word	0x00033aa0
   13f40:	.word	0x0003398c
   13f44:	.word	0x00033a34
   13f48:	.word	0x00033a14
   13f4c:	.word	0x00033834
   13f50:	.word	0x00033798
   13f54:	.word	0x000338e4
   13f58:	.word	0x000336b8
   13f5c:	.word	0x00034548
   13f60:	.word	0x00034530
   13f64:	.word	0x000344a8
   13f68:	.word	0x00034508
   13f6c:	.word	0x00034480
   13f70:	.word	0x000342e4
   13f74:	.word	0x00034270
   13f78:	.word	0x00034348
   13f7c:	.word	0x000342a0
   13f80:	.word	0x000342a4
   13f84:	.word	0x00034418
   13f88:	.word	0x00034208
   13f8c:	.word	0x000340ec
   13f90:	.word	0x000340e8
   13f94:	.word	0x00034558
   13f98:	.word	0x000344d0
   13f9c:	.word	0x00034088
   13fa0:	.word	0x00034070
   13fa4:	.word	0x00033fe8
   13fa8:	.word	0x00034044
   13fac:	.word	0x00033fb4
   13fb0:	.word	0x00033f4c
   13fb4:	.word	0x00033e20
   13fb8:	.word	0x00033e18
   13fbc:	.word	0x00033da8
   13fc0:	.word	0x00033e7c
   13fc4:	.word	0x00033dd4
   13fc8:	.word	0x00033b80
   13fcc:	.word	0x00033b64
   13fd0:	.word	0x00016246
   13fd4:	.word	0x000167ec
   13fd8:	.word	0x00016153

00013fdc <new_stmt>:
   13fdc:	push	{r4, r5, r6, sl, fp, lr}
   13fe0:	add	fp, sp, #16
   13fe4:	mov	r4, r0
   13fe8:	ldr	r0, [pc, #132]	; 14074 <new_stmt+0x98>
   13fec:	ldr	r0, [pc, r0]
   13ff0:	ldr	r6, [pc, #128]	; 14078 <new_stmt+0x9c>
   13ff4:	add	r6, pc, r6
   13ff8:	ldr	r5, [r6, r0, lsl #3]!
   13ffc:	cmp	r5, #19
   14000:	bhi	14054 <new_stmt+0x78>
   14004:	ldr	r2, [pc, #112]	; 1407c <new_stmt+0xa0>
   14008:	add	r1, r0, #1
   1400c:	cmp	r0, #15
   14010:	add	r2, pc, r2
   14014:	str	r1, [r2]
   14018:	bge	14068 <new_stmt+0x8c>
   1401c:	mov	r0, #1024	; 0x400
   14020:	lsl	r5, r0, r1
   14024:	mov	r0, r5
   14028:	bl	dec <malloc@plt>
   1402c:	cmp	r0, #0
   14030:	str	r0, [r6, #12]
   14034:	beq	14068 <new_stmt+0x8c>
   14038:	mov	r1, #0
   1403c:	mov	r2, r5
   14040:	add	r6, r6, #8
   14044:	bl	e58 <memset@plt>
   14048:	cmp	r5, #19
   1404c:	str	r5, [r6]
   14050:	bls	14068 <new_stmt+0x8c>
   14054:	sub	r1, r5, #20
   14058:	str	r1, [r6]
   1405c:	ldr	r0, [r6, #4]
   14060:	str	r4, [r0, r1]!
   14064:	pop	{r4, r5, r6, sl, fp, pc}
   14068:	ldr	r0, [pc, #16]	; 14080 <new_stmt+0xa4>
   1406c:	add	r0, pc, r0
   14070:	bl	2068 <sf_bpf_error>
   14074:	.word	0x00033510
   14078:	.word	0x00033488
   1407c:	.word	0x000334ec
   14080:	.word	0x00016610

00014084 <gen_llprefixlen>:
   14084:	push	{r4, r5, r6, sl, fp, lr}
   14088:	add	fp, sp, #16
   1408c:	ldr	r1, [pc, #588]	; 142e0 <gen_llprefixlen+0x25c>
   14090:	mov	r0, #0
   14094:	ldr	r1, [pc, r1]
   14098:	cmp	r1, #162	; 0xa2
   1409c:	bgt	1410c <gen_llprefixlen+0x88>
   140a0:	cmp	r1, #119	; 0x77
   140a4:	beq	14178 <gen_llprefixlen+0xf4>
   140a8:	cmp	r1, #127	; 0x7f
   140ac:	bne	142d0 <gen_llprefixlen+0x24c>
   140b0:	ldr	r5, [pc, #556]	; 142e4 <gen_llprefixlen+0x260>
   140b4:	ldr	r5, [pc, r5]
   140b8:	cmn	r5, #1
   140bc:	bne	1424c <gen_llprefixlen+0x1c8>
   140c0:	ldr	r5, [pc, #544]	; 142e8 <gen_llprefixlen+0x264>
   140c4:	mvn	r1, #15
   140c8:	ldr	r5, [pc, r5]
   140cc:	ldr	r0, [pc, #536]	; 142ec <gen_llprefixlen+0x268>
   140d0:	ldr	r2, [pc, #536]	; 142f0 <gen_llprefixlen+0x26c>
   140d4:	add	r0, pc, r0
   140d8:	add	r2, pc, r2
   140dc:	ldr	r3, [r0, r5, lsl #2]
   140e0:	cmp	r3, #0
   140e4:	beq	14238 <gen_llprefixlen+0x1b4>
   140e8:	add	r3, r5, #1
   140ec:	adds	r1, r1, #1
   140f0:	asr	r6, r3, #31
   140f4:	add	r6, r3, r6, lsr #28
   140f8:	bic	r6, r6, #15
   140fc:	sub	r5, r3, r6
   14100:	str	r5, [r2]
   14104:	bcc	140dc <gen_llprefixlen+0x58>
   14108:	b	1422c <gen_llprefixlen+0x1a8>
   1410c:	cmp	r1, #163	; 0xa3
   14110:	beq	141d4 <gen_llprefixlen+0x150>
   14114:	cmp	r1, #192	; 0xc0
   14118:	bne	142d0 <gen_llprefixlen+0x24c>
   1411c:	ldr	r5, [pc, #464]	; 142f4 <gen_llprefixlen+0x270>
   14120:	ldr	r5, [pc, r5]
   14124:	cmn	r5, #1
   14128:	bne	1424c <gen_llprefixlen+0x1c8>
   1412c:	ldr	r5, [pc, #452]	; 142f8 <gen_llprefixlen+0x274>
   14130:	mvn	r1, #15
   14134:	ldr	r5, [pc, r5]
   14138:	ldr	r0, [pc, #444]	; 142fc <gen_llprefixlen+0x278>
   1413c:	ldr	r2, [pc, #444]	; 14300 <gen_llprefixlen+0x27c>
   14140:	add	r0, pc, r0
   14144:	add	r2, pc, r2
   14148:	ldr	r3, [r0, r5, lsl #2]
   1414c:	cmp	r3, #0
   14150:	beq	14238 <gen_llprefixlen+0x1b4>
   14154:	add	r3, r5, #1
   14158:	adds	r1, r1, #1
   1415c:	asr	r6, r3, #31
   14160:	add	r6, r3, r6, lsr #28
   14164:	bic	r6, r6, #15
   14168:	sub	r5, r3, r6
   1416c:	str	r5, [r2]
   14170:	bcc	14148 <gen_llprefixlen+0xc4>
   14174:	b	1422c <gen_llprefixlen+0x1a8>
   14178:	ldr	r5, [pc, #388]	; 14304 <gen_llprefixlen+0x280>
   1417c:	ldr	r5, [pc, r5]
   14180:	cmn	r5, #1
   14184:	bne	1424c <gen_llprefixlen+0x1c8>
   14188:	ldr	r5, [pc, #376]	; 14308 <gen_llprefixlen+0x284>
   1418c:	mvn	r1, #15
   14190:	ldr	r5, [pc, r5]
   14194:	ldr	r0, [pc, #368]	; 1430c <gen_llprefixlen+0x288>
   14198:	ldr	r2, [pc, #368]	; 14310 <gen_llprefixlen+0x28c>
   1419c:	add	r0, pc, r0
   141a0:	add	r2, pc, r2
   141a4:	ldr	r3, [r0, r5, lsl #2]
   141a8:	cmp	r3, #0
   141ac:	beq	14238 <gen_llprefixlen+0x1b4>
   141b0:	add	r3, r5, #1
   141b4:	adds	r1, r1, #1
   141b8:	asr	r6, r3, #31
   141bc:	add	r6, r3, r6, lsr #28
   141c0:	bic	r6, r6, #15
   141c4:	sub	r5, r3, r6
   141c8:	str	r5, [r2]
   141cc:	bcc	141a4 <gen_llprefixlen+0x120>
   141d0:	b	1422c <gen_llprefixlen+0x1a8>
   141d4:	ldr	r5, [pc, #336]	; 1432c <gen_llprefixlen+0x2a8>
   141d8:	ldr	r5, [pc, r5]
   141dc:	cmn	r5, #1
   141e0:	bne	1424c <gen_llprefixlen+0x1c8>
   141e4:	ldr	r5, [pc, #324]	; 14330 <gen_llprefixlen+0x2ac>
   141e8:	mvn	r1, #15
   141ec:	ldr	r5, [pc, r5]
   141f0:	ldr	r0, [pc, #316]	; 14334 <gen_llprefixlen+0x2b0>
   141f4:	ldr	r2, [pc, #316]	; 14338 <gen_llprefixlen+0x2b4>
   141f8:	add	r0, pc, r0
   141fc:	add	r2, pc, r2
   14200:	ldr	r3, [r0, r5, lsl #2]
   14204:	cmp	r3, #0
   14208:	beq	14238 <gen_llprefixlen+0x1b4>
   1420c:	add	r3, r5, #1
   14210:	adds	r1, r1, #1
   14214:	asr	r6, r3, #31
   14218:	add	r6, r3, r6, lsr #28
   1421c:	bic	r6, r6, #15
   14220:	sub	r5, r3, r6
   14224:	str	r5, [r2]
   14228:	bcc	14200 <gen_llprefixlen+0x17c>
   1422c:	ldr	r0, [pc, #224]	; 14314 <gen_llprefixlen+0x290>
   14230:	add	r0, pc, r0
   14234:	bl	2068 <sf_bpf_error>
   14238:	mov	r1, #1
   1423c:	str	r1, [r0, r5, lsl #2]
   14240:	ldr	r0, [pc, #208]	; 14318 <gen_llprefixlen+0x294>
   14244:	add	r0, pc, r0
   14248:	str	r5, [r0]
   1424c:	ldr	r0, [pc, #200]	; 1431c <gen_llprefixlen+0x298>
   14250:	ldr	r0, [pc, r0]
   14254:	ldr	r6, [pc, #196]	; 14320 <gen_llprefixlen+0x29c>
   14258:	add	r6, pc, r6
   1425c:	ldr	r4, [r6, r0, lsl #3]!
   14260:	cmp	r4, #19
   14264:	bhi	142b8 <gen_llprefixlen+0x234>
   14268:	ldr	r2, [pc, #180]	; 14324 <gen_llprefixlen+0x2a0>
   1426c:	add	r1, r0, #1
   14270:	cmp	r0, #15
   14274:	add	r2, pc, r2
   14278:	str	r1, [r2]
   1427c:	bge	142d4 <gen_llprefixlen+0x250>
   14280:	mov	r0, #1024	; 0x400
   14284:	lsl	r4, r0, r1
   14288:	mov	r0, r4
   1428c:	bl	dec <malloc@plt>
   14290:	cmp	r0, #0
   14294:	str	r0, [r6, #12]
   14298:	beq	142d4 <gen_llprefixlen+0x250>
   1429c:	mov	r1, #0
   142a0:	mov	r2, r4
   142a4:	add	r6, r6, #8
   142a8:	bl	e58 <memset@plt>
   142ac:	cmp	r4, #19
   142b0:	str	r4, [r6]
   142b4:	bls	142d4 <gen_llprefixlen+0x250>
   142b8:	sub	r1, r4, #20
   142bc:	mov	r2, #97	; 0x61
   142c0:	str	r1, [r6]
   142c4:	ldr	r0, [r6, #4]
   142c8:	str	r2, [r0, r1]!
   142cc:	str	r5, [r0, #12]
   142d0:	pop	{r4, r5, r6, sl, fp, pc}
   142d4:	ldr	r0, [pc, #76]	; 14328 <gen_llprefixlen+0x2a4>
   142d8:	add	r0, pc, r0
   142dc:	bl	2068 <sf_bpf_error>
   142e0:	.word	0x0003339c
   142e4:	.word	0x00033450
   142e8:	.word	0x00033444
   142ec:	.word	0x0003343c
   142f0:	.word	0x00033434
   142f4:	.word	0x000333e4
   142f8:	.word	0x000333d8
   142fc:	.word	0x000333d0
   14300:	.word	0x000333c8
   14304:	.word	0x00033388
   14308:	.word	0x0003337c
   1430c:	.word	0x00033374
   14310:	.word	0x0003336c
   14314:	.word	0x00016e9d
   14318:	.word	0x000332c0
   1431c:	.word	0x000332ac
   14320:	.word	0x00033224
   14324:	.word	0x00033288
   14328:	.word	0x000163a4
   1432c:	.word	0x0003332c
   14330:	.word	0x00033320
   14334:	.word	0x00033318
   14338:	.word	0x00033310

0001433c <gen_off_macpl>:
   1433c:	push	{fp, lr}
   14340:	mov	fp, sp
   14344:	ldr	r0, [pc, #160]	; 143ec <gen_off_macpl+0xb0>
   14348:	add	r0, pc, r0
   1434c:	ldrb	r1, [r0]
   14350:	mov	r0, #0
   14354:	cmp	r1, #1
   14358:	popne	{fp, pc}
   1435c:	ldr	r0, [pc, #140]	; 143f0 <gen_off_macpl+0xb4>
   14360:	ldr	r0, [pc, r0]
   14364:	cmn	r0, #1
   14368:	bne	143d4 <gen_off_macpl+0x98>
   1436c:	ldr	r2, [pc, #128]	; 143f4 <gen_off_macpl+0xb8>
   14370:	mvn	r1, #15
   14374:	ldr	r2, [pc, r2]
   14378:	ldr	ip, [pc, #120]	; 143f8 <gen_off_macpl+0xbc>
   1437c:	ldr	r3, [pc, #120]	; 143fc <gen_off_macpl+0xc0>
   14380:	add	ip, pc, ip
   14384:	add	r3, pc, r3
   14388:	ldr	r0, [ip, r2, lsl #2]
   1438c:	cmp	r0, #0
   14390:	beq	143c0 <gen_off_macpl+0x84>
   14394:	add	r0, r2, #1
   14398:	adds	r1, r1, #1
   1439c:	asr	r2, r0, #31
   143a0:	add	r2, r0, r2, lsr #28
   143a4:	bic	r2, r2, #15
   143a8:	sub	r2, r0, r2
   143ac:	str	r2, [r3]
   143b0:	bcc	14388 <gen_off_macpl+0x4c>
   143b4:	ldr	r0, [pc, #68]	; 14400 <gen_off_macpl+0xc4>
   143b8:	add	r0, pc, r0
   143bc:	bl	2068 <sf_bpf_error>
   143c0:	mov	r0, #1
   143c4:	str	r0, [ip, r2, lsl #2]
   143c8:	ldr	r0, [pc, #52]	; 14404 <gen_off_macpl+0xc8>
   143cc:	add	r0, pc, r0
   143d0:	str	r2, [r0]
   143d4:	mov	r0, #97	; 0x61
   143d8:	bl	13fdc <new_stmt>
   143dc:	ldr	r1, [pc, #36]	; 14408 <gen_off_macpl+0xcc>
   143e0:	ldr	r1, [pc, r1]
   143e4:	str	r1, [r0, #12]
   143e8:	pop	{fp, pc}
   143ec:	.word	0x000331b8
   143f0:	.word	0x000331a8
   143f4:	.word	0x00033198
   143f8:	.word	0x00033190
   143fc:	.word	0x00033188
   14400:	.word	0x00016d15
   14404:	.word	0x0003313c
   14408:	.word	0x00033128

0001440c <gen_loadx_iphdrlen>:
   1440c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14410:	add	fp, sp, #24
   14414:	ldr	r0, [pc, #1216]	; 148dc <gen_loadx_iphdrlen+0x4d0>
   14418:	add	r0, pc, r0
   1441c:	ldrb	r0, [r0]
   14420:	ldr	r9, [pc, #1208]	; 148e0 <gen_loadx_iphdrlen+0x4d4>
   14424:	cmp	r0, #0
   14428:	add	r9, pc, r9
   1442c:	beq	14494 <gen_loadx_iphdrlen+0x88>
   14430:	ldr	r5, [pc, #1212]	; 148f4 <gen_loadx_iphdrlen+0x4e8>
   14434:	ldr	r5, [pc, r5]
   14438:	cmn	r5, #1
   1443c:	bne	144b4 <gen_loadx_iphdrlen+0xa8>
   14440:	ldr	r5, [pc, #1200]	; 148f8 <gen_loadx_iphdrlen+0x4ec>
   14444:	mvn	r1, #15
   14448:	ldr	r5, [pc, r5]
   1444c:	ldr	r0, [pc, #1192]	; 148fc <gen_loadx_iphdrlen+0x4f0>
   14450:	ldr	r2, [pc, #1192]	; 14900 <gen_loadx_iphdrlen+0x4f4>
   14454:	add	r0, pc, r0
   14458:	add	r2, pc, r2
   1445c:	ldr	r3, [r0, r5, lsl #2]
   14460:	cmp	r3, #0
   14464:	beq	144a0 <gen_loadx_iphdrlen+0x94>
   14468:	add	r3, r5, #1
   1446c:	adds	r1, r1, #1
   14470:	asr	r7, r3, #31
   14474:	add	r7, r3, r7, lsr #28
   14478:	bic	r7, r7, #15
   1447c:	sub	r5, r3, r7
   14480:	str	r5, [r2]
   14484:	bcc	1445c <gen_loadx_iphdrlen+0x50>
   14488:	ldr	r0, [pc, #1140]	; 14904 <gen_loadx_iphdrlen+0x4f8>
   1448c:	add	r0, pc, r0
   14490:	bl	2068 <sf_bpf_error>
   14494:	ldr	r7, [pc, #1096]	; 148e4 <gen_loadx_iphdrlen+0x4d8>
   14498:	ldr	r7, [pc, r7]
   1449c:	b	145a8 <gen_loadx_iphdrlen+0x19c>
   144a0:	mov	r1, #1
   144a4:	str	r1, [r0, r5, lsl #2]
   144a8:	ldr	r0, [pc, #1112]	; 14908 <gen_loadx_iphdrlen+0x4fc>
   144ac:	add	r0, pc, r0
   144b0:	str	r5, [r0]
   144b4:	ldr	r0, [pc, #1104]	; 1490c <gen_loadx_iphdrlen+0x500>
   144b8:	mov	r6, r9
   144bc:	ldr	r0, [pc, r0]
   144c0:	ldr	r4, [r6, r0, lsl #3]!
   144c4:	cmp	r4, #19
   144c8:	bhi	14520 <gen_loadx_iphdrlen+0x114>
   144cc:	ldr	r1, [pc, #1084]	; 14910 <gen_loadx_iphdrlen+0x504>
   144d0:	add	r7, r0, #1
   144d4:	cmp	r0, #15
   144d8:	add	r1, pc, r1
   144dc:	str	r7, [r1]
   144e0:	bge	148d0 <gen_loadx_iphdrlen+0x4c4>
   144e4:	mov	r0, #1024	; 0x400
   144e8:	lsl	r4, r0, r7
   144ec:	mov	r0, r4
   144f0:	bl	dec <malloc@plt>
   144f4:	cmp	r0, #0
   144f8:	str	r0, [r6, #12]
   144fc:	beq	148d0 <gen_loadx_iphdrlen+0x4c4>
   14500:	mov	r1, #0
   14504:	mov	r2, r4
   14508:	add	r6, r6, #8
   1450c:	bl	e58 <memset@plt>
   14510:	cmp	r4, #19
   14514:	str	r4, [r6]
   14518:	bhi	14524 <gen_loadx_iphdrlen+0x118>
   1451c:	b	148d0 <gen_loadx_iphdrlen+0x4c4>
   14520:	mov	r7, r0
   14524:	sub	r0, r4, #20
   14528:	mov	r1, #97	; 0x61
   1452c:	str	r0, [r6]
   14530:	ldr	r4, [r6, #4]
   14534:	str	r1, [r4, r0]!
   14538:	cmp	r4, #0
   1453c:	str	r5, [r4, #12]
   14540:	beq	145a8 <gen_loadx_iphdrlen+0x19c>
   14544:	mov	r6, r9
   14548:	ldr	r5, [r6, r7, lsl #3]!
   1454c:	cmp	r5, #19
   14550:	bhi	14638 <gen_loadx_iphdrlen+0x22c>
   14554:	ldr	r0, [pc, #952]	; 14914 <gen_loadx_iphdrlen+0x508>
   14558:	add	r8, r7, #1
   1455c:	cmp	r7, #15
   14560:	add	r0, pc, r0
   14564:	str	r8, [r0]
   14568:	bge	148d0 <gen_loadx_iphdrlen+0x4c4>
   1456c:	mov	r0, #1024	; 0x400
   14570:	lsl	r5, r0, r8
   14574:	mov	r0, r5
   14578:	bl	dec <malloc@plt>
   1457c:	cmp	r0, #0
   14580:	str	r0, [r6, #12]
   14584:	beq	148d0 <gen_loadx_iphdrlen+0x4c4>
   14588:	mov	r1, #0
   1458c:	mov	r2, r5
   14590:	add	r6, r6, #8
   14594:	bl	e58 <memset@plt>
   14598:	cmp	r5, #19
   1459c:	str	r5, [r6]
   145a0:	bhi	1463c <gen_loadx_iphdrlen+0x230>
   145a4:	b	148d0 <gen_loadx_iphdrlen+0x4c4>
   145a8:	ldr	r4, [r9, r7, lsl #3]!
   145ac:	cmp	r4, #19
   145b0:	bhi	14604 <gen_loadx_iphdrlen+0x1f8>
   145b4:	ldr	r1, [pc, #812]	; 148e8 <gen_loadx_iphdrlen+0x4dc>
   145b8:	add	r0, r7, #1
   145bc:	cmp	r7, #15
   145c0:	add	r1, pc, r1
   145c4:	str	r0, [r1]
   145c8:	bge	148d0 <gen_loadx_iphdrlen+0x4c4>
   145cc:	mov	r1, #1024	; 0x400
   145d0:	lsl	r4, r1, r0
   145d4:	mov	r0, r4
   145d8:	bl	dec <malloc@plt>
   145dc:	cmp	r0, #0
   145e0:	str	r0, [r9, #12]
   145e4:	beq	148d0 <gen_loadx_iphdrlen+0x4c4>
   145e8:	mov	r1, #0
   145ec:	mov	r2, r4
   145f0:	add	r9, r9, #8
   145f4:	bl	e58 <memset@plt>
   145f8:	cmp	r4, #19
   145fc:	str	r4, [r9]
   14600:	bls	148d0 <gen_loadx_iphdrlen+0x4c4>
   14604:	sub	r0, r4, #20
   14608:	mov	r1, #177	; 0xb1
   1460c:	str	r0, [r9]
   14610:	ldr	r4, [r9, #4]
   14614:	str	r1, [r4, r0]!
   14618:	ldr	r0, [pc, #716]	; 148ec <gen_loadx_iphdrlen+0x4e0>
   1461c:	ldr	r0, [pc, r0]
   14620:	ldr	r1, [pc, #712]	; 148f0 <gen_loadx_iphdrlen+0x4e4>
   14624:	ldr	r1, [pc, r1]
   14628:	add	r0, r1, r0
   1462c:	str	r0, [r4, #12]
   14630:	mov	r0, r4
   14634:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14638:	mov	r8, r7
   1463c:	sub	r1, r5, #20
   14640:	mov	r2, #80	; 0x50
   14644:	str	r1, [r6]
   14648:	ldr	r0, [r6, #4]
   1464c:	str	r2, [r0, r1]!
   14650:	mov	r2, r4
   14654:	ldr	r1, [pc, #700]	; 14918 <gen_loadx_iphdrlen+0x50c>
   14658:	ldr	r1, [pc, r1]
   1465c:	str	r1, [r0, #12]
   14660:	mov	r1, r2
   14664:	ldr	r2, [r2, #16]
   14668:	cmp	r2, #0
   1466c:	bne	14660 <gen_loadx_iphdrlen+0x254>
   14670:	str	r0, [r1, #16]
   14674:	mov	r6, r9
   14678:	ldr	r5, [r6, r8, lsl #3]!
   1467c:	cmp	r5, #19
   14680:	bhi	146d8 <gen_loadx_iphdrlen+0x2cc>
   14684:	ldr	r0, [pc, #656]	; 1491c <gen_loadx_iphdrlen+0x510>
   14688:	add	r7, r8, #1
   1468c:	cmp	r8, #15
   14690:	add	r0, pc, r0
   14694:	str	r7, [r0]
   14698:	bge	148d0 <gen_loadx_iphdrlen+0x4c4>
   1469c:	mov	r0, #1024	; 0x400
   146a0:	lsl	r5, r0, r7
   146a4:	mov	r0, r5
   146a8:	bl	dec <malloc@plt>
   146ac:	cmp	r0, #0
   146b0:	str	r0, [r6, #12]
   146b4:	beq	148d0 <gen_loadx_iphdrlen+0x4c4>
   146b8:	mov	r1, #0
   146bc:	mov	r2, r5
   146c0:	add	r6, r6, #8
   146c4:	bl	e58 <memset@plt>
   146c8:	cmp	r5, #19
   146cc:	str	r5, [r6]
   146d0:	bhi	146dc <gen_loadx_iphdrlen+0x2d0>
   146d4:	b	148d0 <gen_loadx_iphdrlen+0x4c4>
   146d8:	mov	r7, r8
   146dc:	sub	r1, r5, #20
   146e0:	mov	r2, #84	; 0x54
   146e4:	str	r1, [r6]
   146e8:	ldr	r0, [r6, #4]
   146ec:	str	r2, [r0, r1]!
   146f0:	mov	r1, #15
   146f4:	mov	r2, r4
   146f8:	str	r1, [r0, #12]
   146fc:	mov	r1, r2
   14700:	ldr	r2, [r2, #16]
   14704:	cmp	r2, #0
   14708:	bne	146fc <gen_loadx_iphdrlen+0x2f0>
   1470c:	str	r0, [r1, #16]
   14710:	mov	r6, r9
   14714:	ldr	r5, [r6, r7, lsl #3]!
   14718:	cmp	r5, #19
   1471c:	bhi	14774 <gen_loadx_iphdrlen+0x368>
   14720:	ldr	r0, [pc, #504]	; 14920 <gen_loadx_iphdrlen+0x514>
   14724:	add	r8, r7, #1
   14728:	cmp	r7, #15
   1472c:	add	r0, pc, r0
   14730:	str	r8, [r0]
   14734:	bge	148d0 <gen_loadx_iphdrlen+0x4c4>
   14738:	mov	r0, #1024	; 0x400
   1473c:	lsl	r5, r0, r8
   14740:	mov	r0, r5
   14744:	bl	dec <malloc@plt>
   14748:	cmp	r0, #0
   1474c:	str	r0, [r6, #12]
   14750:	beq	148d0 <gen_loadx_iphdrlen+0x4c4>
   14754:	mov	r1, #0
   14758:	mov	r2, r5
   1475c:	add	r6, r6, #8
   14760:	bl	e58 <memset@plt>
   14764:	cmp	r5, #19
   14768:	str	r5, [r6]
   1476c:	bhi	14778 <gen_loadx_iphdrlen+0x36c>
   14770:	b	148d0 <gen_loadx_iphdrlen+0x4c4>
   14774:	mov	r8, r7
   14778:	sub	r1, r5, #20
   1477c:	mov	r2, #100	; 0x64
   14780:	str	r1, [r6]
   14784:	ldr	r0, [r6, #4]
   14788:	str	r2, [r0, r1]!
   1478c:	mov	r1, #2
   14790:	mov	r2, r4
   14794:	str	r1, [r0, #12]
   14798:	mov	r1, r2
   1479c:	ldr	r2, [r2, #16]
   147a0:	cmp	r2, #0
   147a4:	bne	14798 <gen_loadx_iphdrlen+0x38c>
   147a8:	str	r0, [r1, #16]
   147ac:	mov	r6, r9
   147b0:	ldr	r5, [r6, r8, lsl #3]!
   147b4:	cmp	r5, #19
   147b8:	bhi	14810 <gen_loadx_iphdrlen+0x404>
   147bc:	ldr	r0, [pc, #352]	; 14924 <gen_loadx_iphdrlen+0x518>
   147c0:	add	r7, r8, #1
   147c4:	cmp	r8, #15
   147c8:	add	r0, pc, r0
   147cc:	str	r7, [r0]
   147d0:	bge	148d0 <gen_loadx_iphdrlen+0x4c4>
   147d4:	mov	r0, #1024	; 0x400
   147d8:	lsl	r5, r0, r7
   147dc:	mov	r0, r5
   147e0:	bl	dec <malloc@plt>
   147e4:	cmp	r0, #0
   147e8:	str	r0, [r6, #12]
   147ec:	beq	148d0 <gen_loadx_iphdrlen+0x4c4>
   147f0:	mov	r1, #0
   147f4:	mov	r2, r5
   147f8:	add	r6, r6, #8
   147fc:	bl	e58 <memset@plt>
   14800:	cmp	r5, #19
   14804:	str	r5, [r6]
   14808:	bhi	14814 <gen_loadx_iphdrlen+0x408>
   1480c:	b	148d0 <gen_loadx_iphdrlen+0x4c4>
   14810:	mov	r7, r8
   14814:	sub	r1, r5, #20
   14818:	mov	r2, #12
   1481c:	str	r1, [r6]
   14820:	ldr	r0, [r6, #4]
   14824:	str	r2, [r0, r1]!
   14828:	mov	r2, r4
   1482c:	mov	r1, r2
   14830:	ldr	r2, [r2, #16]
   14834:	cmp	r2, #0
   14838:	bne	1482c <gen_loadx_iphdrlen+0x420>
   1483c:	str	r0, [r1, #16]
   14840:	ldr	r5, [r9, r7, lsl #3]!
   14844:	cmp	r5, #19
   14848:	bhi	1489c <gen_loadx_iphdrlen+0x490>
   1484c:	ldr	r1, [pc, #212]	; 14928 <gen_loadx_iphdrlen+0x51c>
   14850:	add	r0, r7, #1
   14854:	cmp	r7, #15
   14858:	add	r1, pc, r1
   1485c:	str	r0, [r1]
   14860:	bge	148d0 <gen_loadx_iphdrlen+0x4c4>
   14864:	mov	r1, #1024	; 0x400
   14868:	lsl	r5, r1, r0
   1486c:	mov	r0, r5
   14870:	bl	dec <malloc@plt>
   14874:	cmp	r0, #0
   14878:	str	r0, [r9, #12]
   1487c:	beq	148d0 <gen_loadx_iphdrlen+0x4c4>
   14880:	mov	r1, #0
   14884:	mov	r2, r5
   14888:	add	r9, r9, #8
   1488c:	bl	e58 <memset@plt>
   14890:	cmp	r5, #19
   14894:	str	r5, [r9]
   14898:	bls	148d0 <gen_loadx_iphdrlen+0x4c4>
   1489c:	sub	r1, r5, #20
   148a0:	mov	r2, #7
   148a4:	str	r1, [r9]
   148a8:	ldr	r0, [r9, #4]
   148ac:	str	r2, [r0, r1]!
   148b0:	mov	r2, r4
   148b4:	mov	r1, r2
   148b8:	ldr	r2, [r2, #16]
   148bc:	cmp	r2, #0
   148c0:	bne	148b4 <gen_loadx_iphdrlen+0x4a8>
   148c4:	str	r0, [r1, #16]
   148c8:	mov	r0, r4
   148cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   148d0:	ldr	r0, [pc, #84]	; 1492c <gen_loadx_iphdrlen+0x520>
   148d4:	add	r0, pc, r0
   148d8:	bl	2068 <sf_bpf_error>
   148dc:	.word	0x000330e8
   148e0:	.word	0x00033054
   148e4:	.word	0x00033064
   148e8:	.word	0x00032f3c
   148ec:	.word	0x00032e20
   148f0:	.word	0x00032e1c
   148f4:	.word	0x000330d4
   148f8:	.word	0x000330c4
   148fc:	.word	0x000330bc
   14900:	.word	0x000330b4
   14904:	.word	0x00016c41
   14908:	.word	0x0003305c
   1490c:	.word	0x00033040
   14910:	.word	0x00033024
   14914:	.word	0x00032f9c
   14918:	.word	0x00032de8
   1491c:	.word	0x00032e6c
   14920:	.word	0x00032dd0
   14924:	.word	0x00032d34
   14928:	.word	0x00032ca4
   1492c:	.word	0x00015da8

00014930 <sf_gen_relation>:
   14930:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14934:	add	fp, sp, #28
   14938:	sub	sp, sp, #20
   1493c:	str	r3, [sp, #8]
   14940:	str	r0, [sp, #4]
   14944:	mov	r4, r2
   14948:	mov	sl, r1
   1494c:	ldr	r0, [pc, #1276]	; 14e50 <sf_gen_relation+0x520>
   14950:	ldr	r0, [pc, r0]
   14954:	ldr	r8, [pc, #1272]	; 14e54 <sf_gen_relation+0x524>
   14958:	add	r8, pc, r8
   1495c:	mov	r7, r8
   14960:	ldr	r6, [r7, r0, lsl #3]!
   14964:	cmp	r6, #19
   14968:	bhi	149c0 <sf_gen_relation+0x90>
   1496c:	ldr	r1, [pc, #1252]	; 14e58 <sf_gen_relation+0x528>
   14970:	add	r5, r0, #1
   14974:	cmp	r0, #15
   14978:	add	r1, pc, r1
   1497c:	str	r5, [r1]
   14980:	bge	14bd4 <sf_gen_relation+0x2a4>
   14984:	mov	r0, #1024	; 0x400
   14988:	lsl	r6, r0, r5
   1498c:	mov	r0, r6
   14990:	bl	dec <malloc@plt>
   14994:	cmp	r0, #0
   14998:	str	r0, [r7, #12]
   1499c:	beq	14bd4 <sf_gen_relation+0x2a4>
   149a0:	mov	r1, #0
   149a4:	mov	r2, r6
   149a8:	add	r7, r7, #8
   149ac:	bl	e58 <memset@plt>
   149b0:	cmp	r6, #19
   149b4:	str	r6, [r7]
   149b8:	bhi	149c4 <sf_gen_relation+0x94>
   149bc:	b	14bd4 <sf_gen_relation+0x2a4>
   149c0:	mov	r5, r0
   149c4:	sub	r0, r6, #20
   149c8:	mov	r1, #97	; 0x61
   149cc:	str	r0, [r7]
   149d0:	ldr	r7, [r7, #4]
   149d4:	str	r1, [r7, r0]!
   149d8:	str	r4, [sp, #12]
   149dc:	ldr	r0, [r4, #8]
   149e0:	mov	r4, r8
   149e4:	str	r0, [r7, #12]
   149e8:	ldr	r6, [r4, r5, lsl #3]!
   149ec:	cmp	r6, #19
   149f0:	bhi	14a4c <sf_gen_relation+0x11c>
   149f4:	ldr	r0, [pc, #1120]	; 14e5c <sf_gen_relation+0x52c>
   149f8:	add	r9, r5, #1
   149fc:	cmp	r5, #15
   14a00:	add	r0, pc, r0
   14a04:	str	r9, [r0]
   14a08:	bge	14bd4 <sf_gen_relation+0x2a4>
   14a0c:	mov	r0, #1024	; 0x400
   14a10:	lsl	r6, r0, r9
   14a14:	mov	r0, r6
   14a18:	bl	dec <malloc@plt>
   14a1c:	ldr	r5, [sp, #4]
   14a20:	cmp	r0, #0
   14a24:	str	r0, [r4, #12]
   14a28:	beq	14bd4 <sf_gen_relation+0x2a4>
   14a2c:	mov	r1, #0
   14a30:	mov	r2, r6
   14a34:	add	r4, r4, #8
   14a38:	bl	e58 <memset@plt>
   14a3c:	cmp	r6, #19
   14a40:	str	r6, [r4]
   14a44:	bhi	14a54 <sf_gen_relation+0x124>
   14a48:	b	14bd4 <sf_gen_relation+0x2a4>
   14a4c:	mov	r9, r5
   14a50:	ldr	r5, [sp, #4]
   14a54:	sub	r0, r6, #20
   14a58:	mov	r1, #96	; 0x60
   14a5c:	cmp	r5, #16
   14a60:	str	r0, [r4]
   14a64:	ldr	r4, [r4, #4]
   14a68:	str	r1, [r4, r0]!
   14a6c:	ldr	r0, [sl, #8]
   14a70:	str	r0, [r4, #12]
   14a74:	bne	14ae0 <sf_gen_relation+0x1b0>
   14a78:	mov	r5, r8
   14a7c:	str	sl, [sp, #4]
   14a80:	ldr	r6, [r5, r9, lsl #3]!
   14a84:	cmp	r6, #19
   14a88:	bhi	14b5c <sf_gen_relation+0x22c>
   14a8c:	ldr	r0, [pc, #972]	; 14e60 <sf_gen_relation+0x530>
   14a90:	add	sl, r9, #1
   14a94:	cmp	r9, #15
   14a98:	add	r0, pc, r0
   14a9c:	str	sl, [r0]
   14aa0:	bge	14bd4 <sf_gen_relation+0x2a4>
   14aa4:	mov	r0, #1024	; 0x400
   14aa8:	lsl	r6, r0, sl
   14aac:	mov	r0, r6
   14ab0:	bl	dec <malloc@plt>
   14ab4:	cmp	r0, #0
   14ab8:	str	r0, [r5, #12]
   14abc:	beq	14bd4 <sf_gen_relation+0x2a4>
   14ac0:	mov	r1, #0
   14ac4:	mov	r2, r6
   14ac8:	add	r5, r5, #8
   14acc:	bl	e58 <memset@plt>
   14ad0:	cmp	r6, #19
   14ad4:	str	r6, [r5]
   14ad8:	bhi	14b60 <sf_gen_relation+0x230>
   14adc:	b	14bd4 <sf_gen_relation+0x2a4>
   14ae0:	ldr	r6, [r8, r9, lsl #3]!
   14ae4:	cmp	r6, #207	; 0xcf
   14ae8:	bhi	14b3c <sf_gen_relation+0x20c>
   14aec:	ldr	r1, [pc, #884]	; 14e68 <sf_gen_relation+0x538>
   14af0:	add	r0, r9, #1
   14af4:	cmp	r9, #15
   14af8:	add	r1, pc, r1
   14afc:	str	r0, [r1]
   14b00:	bge	14bd4 <sf_gen_relation+0x2a4>
   14b04:	mov	r1, #1024	; 0x400
   14b08:	lsl	r6, r1, r0
   14b0c:	mov	r0, r6
   14b10:	bl	dec <malloc@plt>
   14b14:	cmp	r0, #0
   14b18:	str	r0, [r8, #12]
   14b1c:	beq	14bd4 <sf_gen_relation+0x2a4>
   14b20:	mov	r1, #0
   14b24:	mov	r2, r6
   14b28:	add	r8, r8, #8
   14b2c:	bl	e58 <memset@plt>
   14b30:	cmp	r6, #207	; 0xcf
   14b34:	str	r6, [r8]
   14b38:	bls	14bd4 <sf_gen_relation+0x2a4>
   14b3c:	sub	r0, r6, #208	; 0xd0
   14b40:	orr	r1, r5, #13
   14b44:	str	r0, [r8]
   14b48:	ldr	r2, [r8, #4]
   14b4c:	add	r0, r2, r0
   14b50:	str	r1, [r0, #8]
   14b54:	str	r0, [r0, #96]	; 0x60
   14b58:	b	14c18 <sf_gen_relation+0x2e8>
   14b5c:	mov	sl, r9
   14b60:	sub	r0, r6, #20
   14b64:	mov	r1, #28
   14b68:	str	r0, [r5]
   14b6c:	ldr	r5, [r5, #4]
   14b70:	str	r1, [r5, r0]!
   14b74:	ldr	r6, [r8, sl, lsl #3]!
   14b78:	cmp	r6, #207	; 0xcf
   14b7c:	bhi	14be0 <sf_gen_relation+0x2b0>
   14b80:	ldr	r1, [pc, #732]	; 14e64 <sf_gen_relation+0x534>
   14b84:	add	r0, sl, #1
   14b88:	cmp	sl, #15
   14b8c:	add	r1, pc, r1
   14b90:	str	r0, [r1]
   14b94:	bge	14bd4 <sf_gen_relation+0x2a4>
   14b98:	mov	r1, #1024	; 0x400
   14b9c:	lsl	r6, r1, r0
   14ba0:	mov	r0, r6
   14ba4:	bl	dec <malloc@plt>
   14ba8:	ldr	sl, [sp, #4]
   14bac:	cmp	r0, #0
   14bb0:	str	r0, [r8, #12]
   14bb4:	beq	14bd4 <sf_gen_relation+0x2a4>
   14bb8:	mov	r1, #0
   14bbc:	mov	r2, r6
   14bc0:	add	r8, r8, #8
   14bc4:	bl	e58 <memset@plt>
   14bc8:	cmp	r6, #207	; 0xcf
   14bcc:	str	r6, [r8]
   14bd0:	bhi	14be4 <sf_gen_relation+0x2b4>
   14bd4:	ldr	r0, [pc, #660]	; 14e70 <sf_gen_relation+0x540>
   14bd8:	add	r0, pc, r0
   14bdc:	bl	2068 <sf_bpf_error>
   14be0:	ldr	sl, [sp, #4]
   14be4:	sub	r0, r6, #208	; 0xd0
   14be8:	mov	r2, r4
   14bec:	str	r0, [r8]
   14bf0:	ldr	r1, [r8, #4]
   14bf4:	add	r0, r1, r0
   14bf8:	mov	r1, #21
   14bfc:	str	r1, [r0, #8]
   14c00:	str	r0, [r0, #96]	; 0x60
   14c04:	mov	r1, r2
   14c08:	ldr	r2, [r2, #16]
   14c0c:	cmp	r2, #0
   14c10:	bne	14c04 <sf_gen_relation+0x2d4>
   14c14:	str	r5, [r1, #16]
   14c18:	ldr	r1, [sp, #8]
   14c1c:	cmp	r1, #0
   14c20:	beq	14c34 <sf_gen_relation+0x304>
   14c24:	ldr	r1, [r0, #44]	; 0x2c
   14c28:	clz	r1, r1
   14c2c:	lsr	r1, r1, #5
   14c30:	str	r1, [r0, #44]	; 0x2c
   14c34:	mov	r2, r7
   14c38:	mov	r1, r2
   14c3c:	ldr	r2, [r2, #16]
   14c40:	cmp	r2, #0
   14c44:	bne	14c38 <sf_gen_relation+0x308>
   14c48:	ldr	r6, [sp, #12]
   14c4c:	str	r4, [r1, #16]
   14c50:	ldr	r1, [r6, #4]
   14c54:	mov	r2, r1
   14c58:	ldr	r1, [r1, #16]
   14c5c:	cmp	r1, #0
   14c60:	bne	14c54 <sf_gen_relation+0x324>
   14c64:	str	r7, [r2, #16]
   14c68:	ldr	r1, [r6, #4]
   14c6c:	ldr	r2, [sl, #4]
   14c70:	mov	r3, r2
   14c74:	ldr	r2, [r2, #16]
   14c78:	cmp	r2, #0
   14c7c:	bne	14c70 <sf_gen_relation+0x340>
   14c80:	str	r1, [r3, #16]
   14c84:	mov	r3, #0
   14c88:	ldr	r1, [sl, #4]
   14c8c:	str	r1, [r0, #4]
   14c90:	ldr	r1, [sl, #8]
   14c94:	ldr	r2, [pc, #464]	; 14e6c <sf_gen_relation+0x53c>
   14c98:	add	r2, pc, r2
   14c9c:	str	r3, [r2, r1, lsl #2]
   14ca0:	ldr	r1, [r6, #8]
   14ca4:	str	r3, [r2, r1, lsl #2]
   14ca8:	ldr	r1, [r6]
   14cac:	ldr	r6, [sl]
   14cb0:	cmp	r6, #0
   14cb4:	beq	14d74 <sf_gen_relation+0x444>
   14cb8:	cmp	r1, #0
   14cbc:	beq	14d84 <sf_gen_relation+0x454>
   14cc0:	ldr	r3, [r1, #96]	; 0x60
   14cc4:	mov	r2, r6
   14cc8:	ldr	r7, [r2, #44]	; 0x2c
   14ccc:	add	r5, r2, #84	; 0x54
   14cd0:	cmp	r7, #0
   14cd4:	mov	r7, #84	; 0x54
   14cd8:	movweq	r7, #60	; 0x3c
   14cdc:	addeq	r5, r2, #60	; 0x3c
   14ce0:	ldr	r2, [r2, r7]
   14ce4:	str	r3, [r5]
   14ce8:	cmp	r2, #0
   14cec:	bne	14cc8 <sf_gen_relation+0x398>
   14cf0:	ldr	r2, [r6, #44]	; 0x2c
   14cf4:	clz	r2, r2
   14cf8:	lsr	r2, r2, #5
   14cfc:	str	r2, [r6, #44]	; 0x2c
   14d00:	ldr	r2, [r1, #44]	; 0x2c
   14d04:	clz	r3, r2
   14d08:	cmp	r2, #0
   14d0c:	mov	r2, #60	; 0x3c
   14d10:	lsr	r3, r3, #5
   14d14:	movweq	r2, #84	; 0x54
   14d18:	str	r3, [r1, #44]	; 0x2c
   14d1c:	add	r3, r1, #60	; 0x3c
   14d20:	addeq	r3, r1, #84	; 0x54
   14d24:	ldr	r7, [r1, r2]
   14d28:	cmp	r7, #0
   14d2c:	beq	14d54 <sf_gen_relation+0x424>
   14d30:	ldr	r2, [r7, #44]	; 0x2c
   14d34:	add	r3, r7, #84	; 0x54
   14d38:	cmp	r2, #0
   14d3c:	mov	r2, #84	; 0x54
   14d40:	movweq	r2, #60	; 0x3c
   14d44:	addeq	r3, r7, #60	; 0x3c
   14d48:	ldr	r7, [r7, r2]
   14d4c:	cmp	r7, #0
   14d50:	bne	14d30 <sf_gen_relation+0x400>
   14d54:	str	r6, [r3]
   14d58:	ldr	r2, [r1, #44]	; 0x2c
   14d5c:	clz	r2, r2
   14d60:	lsr	r2, r2, #5
   14d64:	str	r2, [r1, #44]	; 0x2c
   14d68:	ldr	r2, [r6, #96]	; 0x60
   14d6c:	str	r2, [r1, #96]	; 0x60
   14d70:	b	14d88 <sf_gen_relation+0x458>
   14d74:	cmp	r1, #0
   14d78:	bne	14d88 <sf_gen_relation+0x458>
   14d7c:	sub	sp, fp, #28
   14d80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d84:	mov	r1, r6
   14d88:	ldr	r2, [r0, #96]	; 0x60
   14d8c:	mov	r3, r1
   14d90:	ldr	r7, [r3, #44]	; 0x2c
   14d94:	add	r6, r3, #84	; 0x54
   14d98:	cmp	r7, #0
   14d9c:	mov	r7, #84	; 0x54
   14da0:	movweq	r7, #60	; 0x3c
   14da4:	addeq	r6, r3, #60	; 0x3c
   14da8:	ldr	r3, [r3, r7]
   14dac:	str	r2, [r6]
   14db0:	cmp	r3, #0
   14db4:	bne	14d90 <sf_gen_relation+0x460>
   14db8:	ldr	r2, [r1, #44]	; 0x2c
   14dbc:	cmp	r0, #0
   14dc0:	clz	r2, r2
   14dc4:	lsr	r2, r2, #5
   14dc8:	str	r2, [r1, #44]	; 0x2c
   14dcc:	ldr	r2, [r0, #44]	; 0x2c
   14dd0:	clz	r3, r2
   14dd4:	lsr	r3, r3, #5
   14dd8:	str	r3, [r0, #44]	; 0x2c
   14ddc:	str	r0, [sp, #16]
   14de0:	beq	14e28 <sf_gen_relation+0x4f8>
   14de4:	cmp	r2, #0
   14de8:	mov	r7, #60	; 0x3c
   14dec:	mov	r3, r0
   14df0:	movweq	r7, #84	; 0x54
   14df4:	ldr	r2, [r3, r7]!
   14df8:	cmp	r2, #0
   14dfc:	beq	14e2c <sf_gen_relation+0x4fc>
   14e00:	ldr	r7, [r2, #44]	; 0x2c
   14e04:	add	r3, r2, #84	; 0x54
   14e08:	cmp	r7, #0
   14e0c:	mov	r7, #84	; 0x54
   14e10:	movweq	r7, #60	; 0x3c
   14e14:	addeq	r3, r2, #60	; 0x3c
   14e18:	ldr	r2, [r2, r7]
   14e1c:	cmp	r2, #0
   14e20:	bne	14e00 <sf_gen_relation+0x4d0>
   14e24:	b	14e2c <sf_gen_relation+0x4fc>
   14e28:	add	r3, sp, #16
   14e2c:	str	r1, [r3]
   14e30:	ldr	r2, [r0, #44]	; 0x2c
   14e34:	clz	r2, r2
   14e38:	lsr	r2, r2, #5
   14e3c:	str	r2, [r0, #44]	; 0x2c
   14e40:	ldr	r1, [r1, #96]	; 0x60
   14e44:	str	r1, [r0, #96]	; 0x60
   14e48:	sub	sp, fp, #28
   14e4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e50:	.word	0x00032bac
   14e54:	.word	0x00032b24
   14e58:	.word	0x00032b84
   14e5c:	.word	0x00032afc
   14e60:	.word	0x00032a64
   14e64:	.word	0x00032970
   14e68:	.word	0x00032a04
   14e6c:	.word	0x00032878
   14e70:	.word	0x00015aa4

00014e74 <sf_gen_loadlen>:
   14e74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e78:	add	fp, sp, #28
   14e7c:	sub	sp, sp, #4
   14e80:	ldr	r5, [pc, #524]	; 15094 <sf_gen_loadlen+0x220>
   14e84:	mvn	r1, #15
   14e88:	ldr	r5, [pc, r5]
   14e8c:	ldr	r0, [pc, #516]	; 15098 <sf_gen_loadlen+0x224>
   14e90:	ldr	r2, [pc, #516]	; 1509c <sf_gen_loadlen+0x228>
   14e94:	add	r0, pc, r0
   14e98:	add	r2, pc, r2
   14e9c:	ldr	r3, [r0, r5, lsl #2]
   14ea0:	cmp	r3, #0
   14ea4:	beq	14ed4 <sf_gen_loadlen+0x60>
   14ea8:	add	r3, r5, #1
   14eac:	adds	r1, r1, #1
   14eb0:	asr	r7, r3, #31
   14eb4:	add	r7, r3, r7, lsr #28
   14eb8:	bic	r7, r7, #15
   14ebc:	sub	r5, r3, r7
   14ec0:	str	r5, [r2]
   14ec4:	bcc	14e9c <sf_gen_loadlen+0x28>
   14ec8:	ldr	r0, [pc, #464]	; 150a0 <sf_gen_loadlen+0x22c>
   14ecc:	add	r0, pc, r0
   14ed0:	bl	2068 <sf_bpf_error>
   14ed4:	mov	r1, #1
   14ed8:	str	r1, [r0, r5, lsl #2]
   14edc:	ldr	r0, [pc, #448]	; 150a4 <sf_gen_loadlen+0x230>
   14ee0:	ldr	r0, [pc, r0]
   14ee4:	ldr	r9, [pc, #444]	; 150a8 <sf_gen_loadlen+0x234>
   14ee8:	add	r9, pc, r9
   14eec:	mov	r6, r9
   14ef0:	ldr	r4, [r6, r0, lsl #3]!
   14ef4:	cmp	r4, #11
   14ef8:	bhi	14f50 <sf_gen_loadlen+0xdc>
   14efc:	ldr	r1, [pc, #424]	; 150ac <sf_gen_loadlen+0x238>
   14f00:	add	r7, r0, #1
   14f04:	cmp	r0, #15
   14f08:	add	r1, pc, r1
   14f0c:	str	r7, [r1]
   14f10:	bge	15088 <sf_gen_loadlen+0x214>
   14f14:	mov	r0, #1024	; 0x400
   14f18:	lsl	r4, r0, r7
   14f1c:	mov	r0, r4
   14f20:	bl	dec <malloc@plt>
   14f24:	cmp	r0, #0
   14f28:	str	r0, [r6, #12]
   14f2c:	beq	15088 <sf_gen_loadlen+0x214>
   14f30:	mov	r1, #0
   14f34:	mov	r2, r4
   14f38:	add	r6, r6, #8
   14f3c:	bl	e58 <memset@plt>
   14f40:	cmp	r4, #11
   14f44:	str	r4, [r6]
   14f48:	bhi	14f54 <sf_gen_loadlen+0xe0>
   14f4c:	b	15088 <sf_gen_loadlen+0x214>
   14f50:	mov	r7, r0
   14f54:	sub	r2, r4, #12
   14f58:	mov	r8, r9
   14f5c:	str	r2, [r6]
   14f60:	ldr	r4, [r8, r7, lsl #3]!
   14f64:	ldr	r3, [r6, #4]
   14f68:	cmp	r4, #19
   14f6c:	bhi	14fd4 <sf_gen_loadlen+0x160>
   14f70:	str	r3, [sp]
   14f74:	add	sl, r7, #1
   14f78:	cmp	r7, #15
   14f7c:	ldr	r0, [pc, #300]	; 150b0 <sf_gen_loadlen+0x23c>
   14f80:	add	r0, pc, r0
   14f84:	str	sl, [r0]
   14f88:	bge	15088 <sf_gen_loadlen+0x214>
   14f8c:	mov	r0, #1024	; 0x400
   14f90:	mov	r6, r2
   14f94:	lsl	r4, r0, sl
   14f98:	mov	r0, r4
   14f9c:	bl	dec <malloc@plt>
   14fa0:	cmp	r0, #0
   14fa4:	str	r0, [r8, #12]
   14fa8:	beq	15088 <sf_gen_loadlen+0x214>
   14fac:	mov	r1, #0
   14fb0:	mov	r2, r4
   14fb4:	add	r8, r8, #8
   14fb8:	bl	e58 <memset@plt>
   14fbc:	ldr	r3, [sp]
   14fc0:	cmp	r4, #19
   14fc4:	mov	r2, r6
   14fc8:	str	r4, [r8]
   14fcc:	bhi	14fd8 <sf_gen_loadlen+0x164>
   14fd0:	b	15088 <sf_gen_loadlen+0x214>
   14fd4:	mov	sl, r7
   14fd8:	sub	r0, r4, #20
   14fdc:	mov	r1, #128	; 0x80
   14fe0:	str	r0, [r8]
   14fe4:	ldr	r7, [r8, #4]
   14fe8:	str	r1, [r7, r0]!
   14fec:	ldr	r4, [r9, sl, lsl #3]!
   14ff0:	cmp	r4, #19
   14ff4:	bhi	15058 <sf_gen_loadlen+0x1e4>
   14ff8:	ldr	r1, [pc, #180]	; 150b4 <sf_gen_loadlen+0x240>
   14ffc:	add	r0, sl, #1
   15000:	cmp	sl, #15
   15004:	add	r1, pc, r1
   15008:	str	r0, [r1]
   1500c:	bge	15088 <sf_gen_loadlen+0x214>
   15010:	mov	r1, #1024	; 0x400
   15014:	mov	r8, r3
   15018:	mov	r6, r2
   1501c:	lsl	r4, r1, r0
   15020:	mov	r0, r4
   15024:	bl	dec <malloc@plt>
   15028:	cmp	r0, #0
   1502c:	str	r0, [r9, #12]
   15030:	beq	15088 <sf_gen_loadlen+0x214>
   15034:	mov	r1, #0
   15038:	mov	r2, r4
   1503c:	add	r9, r9, #8
   15040:	bl	e58 <memset@plt>
   15044:	cmp	r4, #19
   15048:	mov	r2, r6
   1504c:	mov	r3, r8
   15050:	str	r4, [r9]
   15054:	bls	15088 <sf_gen_loadlen+0x214>
   15058:	sub	r1, r4, #20
   1505c:	add	r0, r3, r2
   15060:	mov	r3, #2
   15064:	str	r1, [r9]
   15068:	ldr	r2, [r9, #4]
   1506c:	str	r3, [r2, r1]!
   15070:	str	r2, [r7, #16]
   15074:	str	r5, [r2, #12]
   15078:	str	r7, [r0, #4]
   1507c:	str	r5, [r0, #8]
   15080:	sub	sp, fp, #28
   15084:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15088:	ldr	r0, [pc, #40]	; 150b8 <sf_gen_loadlen+0x244>
   1508c:	add	r0, pc, r0
   15090:	bl	2068 <sf_bpf_error>
   15094:	.word	0x00032684
   15098:	.word	0x0003267c
   1509c:	.word	0x00032674
   150a0:	.word	0x00016201
   150a4:	.word	0x0003261c
   150a8:	.word	0x00032594
   150ac:	.word	0x000325f4
   150b0:	.word	0x0003257c
   150b4:	.word	0x000324f8
   150b8:	.word	0x000155f0

000150bc <sf_gen_loadi>:
   150bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150c0:	add	fp, sp, #28
   150c4:	sub	sp, sp, #4
   150c8:	mov	r8, r0
   150cc:	ldr	r0, [pc, #512]	; 152d4 <sf_gen_loadi+0x218>
   150d0:	ldr	r0, [pc, r0]
   150d4:	ldr	r9, [pc, #508]	; 152d8 <sf_gen_loadi+0x21c>
   150d8:	add	r9, pc, r9
   150dc:	mov	r6, r9
   150e0:	ldr	r4, [r6, r0, lsl #3]!
   150e4:	cmp	r4, #11
   150e8:	bhi	15140 <sf_gen_loadi+0x84>
   150ec:	ldr	r1, [pc, #488]	; 152dc <sf_gen_loadi+0x220>
   150f0:	add	r5, r0, #1
   150f4:	cmp	r0, #15
   150f8:	add	r1, pc, r1
   150fc:	str	r5, [r1]
   15100:	bge	152c8 <sf_gen_loadi+0x20c>
   15104:	mov	r0, #1024	; 0x400
   15108:	lsl	r4, r0, r5
   1510c:	mov	r0, r4
   15110:	bl	dec <malloc@plt>
   15114:	cmp	r0, #0
   15118:	str	r0, [r6, #12]
   1511c:	beq	152c8 <sf_gen_loadi+0x20c>
   15120:	mov	r1, #0
   15124:	mov	r2, r4
   15128:	add	r6, r6, #8
   1512c:	bl	e58 <memset@plt>
   15130:	cmp	r4, #11
   15134:	str	r4, [r6]
   15138:	bhi	15144 <sf_gen_loadi+0x88>
   1513c:	b	152c8 <sf_gen_loadi+0x20c>
   15140:	mov	r5, r0
   15144:	sub	r0, r4, #12
   15148:	str	r0, [r6]
   1514c:	ldr	r1, [r6, #4]
   15150:	ldr	r4, [pc, #392]	; 152e0 <sf_gen_loadi+0x224>
   15154:	ldr	r4, [pc, r4]
   15158:	ldr	r6, [pc, #388]	; 152e4 <sf_gen_loadi+0x228>
   1515c:	ldr	r2, [pc, #388]	; 152e8 <sf_gen_loadi+0x22c>
   15160:	add	r0, r1, r0
   15164:	mvn	r1, #15
   15168:	add	r6, pc, r6
   1516c:	add	r2, pc, r2
   15170:	ldr	r3, [r6, r4, lsl #2]
   15174:	cmp	r3, #0
   15178:	beq	151a8 <sf_gen_loadi+0xec>
   1517c:	add	r3, r4, #1
   15180:	adds	r1, r1, #1
   15184:	asr	r7, r3, #31
   15188:	add	r7, r3, r7, lsr #28
   1518c:	bic	r7, r7, #15
   15190:	sub	r4, r3, r7
   15194:	str	r4, [r2]
   15198:	bcc	15170 <sf_gen_loadi+0xb4>
   1519c:	ldr	r0, [pc, #328]	; 152ec <sf_gen_loadi+0x230>
   151a0:	add	r0, pc, r0
   151a4:	bl	2068 <sf_bpf_error>
   151a8:	mov	r1, #1
   151ac:	mov	sl, r9
   151b0:	str	r1, [r6, r4, lsl #2]
   151b4:	ldr	r6, [sl, r5, lsl #3]!
   151b8:	cmp	r6, #19
   151bc:	bhi	1521c <sf_gen_loadi+0x160>
   151c0:	str	r0, [sp]
   151c4:	add	r7, r5, #1
   151c8:	cmp	r5, #15
   151cc:	ldr	r0, [pc, #284]	; 152f0 <sf_gen_loadi+0x234>
   151d0:	add	r0, pc, r0
   151d4:	str	r7, [r0]
   151d8:	bge	152c8 <sf_gen_loadi+0x20c>
   151dc:	mov	r0, #1024	; 0x400
   151e0:	lsl	r6, r0, r7
   151e4:	mov	r0, r6
   151e8:	bl	dec <malloc@plt>
   151ec:	cmp	r0, #0
   151f0:	str	r0, [sl, #12]
   151f4:	beq	152c8 <sf_gen_loadi+0x20c>
   151f8:	mov	r1, #0
   151fc:	mov	r2, r6
   15200:	add	sl, sl, #8
   15204:	bl	e58 <memset@plt>
   15208:	ldr	r0, [sp]
   1520c:	cmp	r6, #19
   15210:	str	r6, [sl]
   15214:	bhi	15220 <sf_gen_loadi+0x164>
   15218:	b	152c8 <sf_gen_loadi+0x20c>
   1521c:	mov	r7, r5
   15220:	sub	r2, r6, #20
   15224:	mov	r1, #0
   15228:	str	r2, [sl]
   1522c:	ldr	r6, [sl, #4]
   15230:	str	r1, [r6, r2]!
   15234:	str	r8, [r6, #12]
   15238:	ldr	r5, [r9, r7, lsl #3]!
   1523c:	cmp	r5, #19
   15240:	bhi	1529c <sf_gen_loadi+0x1e0>
   15244:	ldr	r1, [pc, #168]	; 152f4 <sf_gen_loadi+0x238>
   15248:	mov	r8, r0
   1524c:	add	r0, r7, #1
   15250:	cmp	r7, #15
   15254:	add	r1, pc, r1
   15258:	str	r0, [r1]
   1525c:	bge	152c8 <sf_gen_loadi+0x20c>
   15260:	mov	r1, #1024	; 0x400
   15264:	lsl	r5, r1, r0
   15268:	mov	r0, r5
   1526c:	bl	dec <malloc@plt>
   15270:	cmp	r0, #0
   15274:	str	r0, [r9, #12]
   15278:	beq	152c8 <sf_gen_loadi+0x20c>
   1527c:	mov	r1, #0
   15280:	mov	r2, r5
   15284:	add	r9, r9, #8
   15288:	bl	e58 <memset@plt>
   1528c:	cmp	r5, #19
   15290:	mov	r0, r8
   15294:	str	r5, [r9]
   15298:	bls	152c8 <sf_gen_loadi+0x20c>
   1529c:	sub	r3, r5, #20
   152a0:	mov	r2, #2
   152a4:	str	r3, [r9]
   152a8:	ldr	r1, [r9, #4]
   152ac:	str	r2, [r1, r3]!
   152b0:	str	r1, [r6, #16]
   152b4:	str	r4, [r1, #12]
   152b8:	str	r6, [r0, #4]
   152bc:	str	r4, [r0, #8]
   152c0:	sub	sp, fp, #28
   152c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152c8:	ldr	r0, [pc, #40]	; 152f8 <sf_gen_loadi+0x23c>
   152cc:	add	r0, pc, r0
   152d0:	bl	2068 <sf_bpf_error>
   152d4:	.word	0x0003242c
   152d8:	.word	0x000323a4
   152dc:	.word	0x00032404
   152e0:	.word	0x000323b8
   152e4:	.word	0x000323a8
   152e8:	.word	0x000323a0
   152ec:	.word	0x00015f2d
   152f0:	.word	0x0003232c
   152f4:	.word	0x000322a8
   152f8:	.word	0x000153b0

000152fc <sf_gen_neg>:
   152fc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15300:	add	fp, sp, #24
   15304:	mov	r8, r0
   15308:	ldr	r0, [pc, #484]	; 154f4 <sf_gen_neg+0x1f8>
   1530c:	ldr	r0, [pc, r0]
   15310:	ldr	r9, [pc, #480]	; 154f8 <sf_gen_neg+0x1fc>
   15314:	add	r9, pc, r9
   15318:	mov	r4, r9
   1531c:	ldr	r5, [r4, r0, lsl #3]!
   15320:	cmp	r5, #19
   15324:	bhi	1537c <sf_gen_neg+0x80>
   15328:	ldr	r1, [pc, #460]	; 154fc <sf_gen_neg+0x200>
   1532c:	add	r7, r0, #1
   15330:	cmp	r0, #15
   15334:	add	r1, pc, r1
   15338:	str	r7, [r1]
   1533c:	bge	154e8 <sf_gen_neg+0x1ec>
   15340:	mov	r0, #1024	; 0x400
   15344:	lsl	r5, r0, r7
   15348:	mov	r0, r5
   1534c:	bl	dec <malloc@plt>
   15350:	cmp	r0, #0
   15354:	str	r0, [r4, #12]
   15358:	beq	154e8 <sf_gen_neg+0x1ec>
   1535c:	mov	r1, #0
   15360:	mov	r2, r5
   15364:	add	r4, r4, #8
   15368:	bl	e58 <memset@plt>
   1536c:	cmp	r5, #19
   15370:	str	r5, [r4]
   15374:	bhi	15380 <sf_gen_neg+0x84>
   15378:	b	154e8 <sf_gen_neg+0x1ec>
   1537c:	mov	r7, r0
   15380:	sub	r1, r5, #20
   15384:	mov	r2, #96	; 0x60
   15388:	str	r1, [r4]
   1538c:	ldr	r0, [r4, #4]
   15390:	str	r2, [r0, r1]!
   15394:	ldr	r1, [r8, #8]
   15398:	str	r1, [r0, #12]
   1539c:	ldr	r1, [r8, #4]
   153a0:	mov	r2, r1
   153a4:	ldr	r1, [r1, #16]
   153a8:	cmp	r1, #0
   153ac:	bne	153a0 <sf_gen_neg+0xa4>
   153b0:	str	r0, [r2, #16]
   153b4:	mov	r6, r9
   153b8:	ldr	r5, [r6, r7, lsl #3]!
   153bc:	cmp	r5, #19
   153c0:	bhi	15418 <sf_gen_neg+0x11c>
   153c4:	ldr	r0, [pc, #308]	; 15500 <sf_gen_neg+0x204>
   153c8:	add	r4, r7, #1
   153cc:	cmp	r7, #15
   153d0:	add	r0, pc, r0
   153d4:	str	r4, [r0]
   153d8:	bge	154e8 <sf_gen_neg+0x1ec>
   153dc:	mov	r0, #1024	; 0x400
   153e0:	lsl	r5, r0, r4
   153e4:	mov	r0, r5
   153e8:	bl	dec <malloc@plt>
   153ec:	cmp	r0, #0
   153f0:	str	r0, [r6, #12]
   153f4:	beq	154e8 <sf_gen_neg+0x1ec>
   153f8:	mov	r1, #0
   153fc:	mov	r2, r5
   15400:	add	r6, r6, #8
   15404:	bl	e58 <memset@plt>
   15408:	cmp	r5, #19
   1540c:	str	r5, [r6]
   15410:	bhi	1541c <sf_gen_neg+0x120>
   15414:	b	154e8 <sf_gen_neg+0x1ec>
   15418:	mov	r4, r7
   1541c:	sub	r1, r5, #20
   15420:	mov	r2, #132	; 0x84
   15424:	str	r1, [r6]
   15428:	ldr	r0, [r6, #4]
   1542c:	str	r2, [r0, r1]!
   15430:	mov	r1, #0
   15434:	str	r1, [r0, #12]
   15438:	ldr	r1, [r8, #4]
   1543c:	mov	r2, r1
   15440:	ldr	r1, [r1, #16]
   15444:	cmp	r1, #0
   15448:	bne	1543c <sf_gen_neg+0x140>
   1544c:	str	r0, [r2, #16]
   15450:	ldr	r5, [r9, r4, lsl #3]!
   15454:	cmp	r5, #19
   15458:	bhi	154ac <sf_gen_neg+0x1b0>
   1545c:	ldr	r1, [pc, #160]	; 15504 <sf_gen_neg+0x208>
   15460:	add	r0, r4, #1
   15464:	cmp	r4, #15
   15468:	add	r1, pc, r1
   1546c:	str	r0, [r1]
   15470:	bge	154e8 <sf_gen_neg+0x1ec>
   15474:	mov	r1, #1024	; 0x400
   15478:	lsl	r5, r1, r0
   1547c:	mov	r0, r5
   15480:	bl	dec <malloc@plt>
   15484:	cmp	r0, #0
   15488:	str	r0, [r9, #12]
   1548c:	beq	154e8 <sf_gen_neg+0x1ec>
   15490:	mov	r1, #0
   15494:	mov	r2, r5
   15498:	add	r9, r9, #8
   1549c:	bl	e58 <memset@plt>
   154a0:	cmp	r5, #19
   154a4:	str	r5, [r9]
   154a8:	bls	154e8 <sf_gen_neg+0x1ec>
   154ac:	sub	r1, r5, #20
   154b0:	mov	r2, #2
   154b4:	str	r1, [r9]
   154b8:	ldr	r0, [r9, #4]
   154bc:	str	r2, [r0, r1]!
   154c0:	ldr	r1, [r8, #8]
   154c4:	str	r1, [r0, #12]
   154c8:	ldr	r1, [r8, #4]
   154cc:	mov	r2, r1
   154d0:	ldr	r1, [r1, #16]
   154d4:	cmp	r1, #0
   154d8:	bne	154cc <sf_gen_neg+0x1d0>
   154dc:	str	r0, [r2, #16]
   154e0:	mov	r0, r8
   154e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   154e8:	ldr	r0, [pc, #24]	; 15508 <sf_gen_neg+0x20c>
   154ec:	add	r0, pc, r0
   154f0:	bl	2068 <sf_bpf_error>
   154f4:	.word	0x000321f0
   154f8:	.word	0x00032168
   154fc:	.word	0x000321c8
   15500:	.word	0x0003212c
   15504:	.word	0x00032094
   15508:	.word	0x00015190

0001550c <sf_gen_arth>:
   1550c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15510:	add	fp, sp, #28
   15514:	sub	sp, sp, #12
   15518:	mov	r6, r0
   1551c:	ldr	r0, [pc, #820]	; 15858 <sf_gen_arth+0x34c>
   15520:	mov	r8, r2
   15524:	ldr	r0, [pc, r0]
   15528:	ldr	sl, [pc, #812]	; 1585c <sf_gen_arth+0x350>
   1552c:	str	r1, [sp, #8]
   15530:	str	r6, [sp]
   15534:	add	sl, pc, sl
   15538:	mov	r5, sl
   1553c:	ldr	r7, [r5, r0, lsl #3]!
   15540:	cmp	r7, #19
   15544:	bhi	155a0 <sf_gen_arth+0x94>
   15548:	ldr	r1, [pc, #784]	; 15860 <sf_gen_arth+0x354>
   1554c:	add	r4, r0, #1
   15550:	cmp	r0, #15
   15554:	add	r1, pc, r1
   15558:	str	r4, [r1]
   1555c:	bge	1584c <sf_gen_arth+0x340>
   15560:	mov	r0, #1024	; 0x400
   15564:	lsl	r7, r0, r4
   15568:	mov	r0, r7
   1556c:	bl	dec <malloc@plt>
   15570:	cmp	r0, #0
   15574:	str	r0, [r5, #12]
   15578:	beq	1584c <sf_gen_arth+0x340>
   1557c:	mov	r1, #0
   15580:	mov	r2, r7
   15584:	add	r5, r5, #8
   15588:	bl	e58 <memset@plt>
   1558c:	ldr	ip, [sp, #8]
   15590:	cmp	r7, #19
   15594:	str	r7, [r5]
   15598:	bhi	155a8 <sf_gen_arth+0x9c>
   1559c:	b	1584c <sf_gen_arth+0x340>
   155a0:	mov	ip, r1
   155a4:	mov	r4, r0
   155a8:	sub	r0, r7, #20
   155ac:	mov	r1, #97	; 0x61
   155b0:	mov	r6, sl
   155b4:	str	r0, [r5]
   155b8:	ldr	r5, [r5, #4]
   155bc:	str	r1, [r5, r0]!
   155c0:	str	r8, [sp, #4]
   155c4:	ldr	r0, [r8, #8]
   155c8:	str	r0, [r5, #12]
   155cc:	ldr	r7, [r6, r4, lsl #3]!
   155d0:	cmp	r7, #19
   155d4:	bhi	15630 <sf_gen_arth+0x124>
   155d8:	ldr	r0, [pc, #644]	; 15864 <sf_gen_arth+0x358>
   155dc:	add	r9, r4, #1
   155e0:	cmp	r4, #15
   155e4:	add	r0, pc, r0
   155e8:	str	r9, [r0]
   155ec:	bge	1584c <sf_gen_arth+0x340>
   155f0:	mov	r0, #1024	; 0x400
   155f4:	lsl	r7, r0, r9
   155f8:	mov	r0, r7
   155fc:	bl	dec <malloc@plt>
   15600:	cmp	r0, #0
   15604:	str	r0, [r6, #12]
   15608:	beq	1584c <sf_gen_arth+0x340>
   1560c:	mov	r1, #0
   15610:	mov	r2, r7
   15614:	add	r6, r6, #8
   15618:	bl	e58 <memset@plt>
   1561c:	ldr	ip, [sp, #8]
   15620:	cmp	r7, #19
   15624:	str	r7, [r6]
   15628:	bhi	15634 <sf_gen_arth+0x128>
   1562c:	b	1584c <sf_gen_arth+0x340>
   15630:	mov	r9, r4
   15634:	sub	r0, r7, #20
   15638:	mov	r1, #96	; 0x60
   1563c:	str	r0, [r6]
   15640:	ldr	r8, [r6, #4]
   15644:	mov	r6, sl
   15648:	str	r1, [r8, r0]!
   1564c:	ldr	r0, [ip, #8]
   15650:	str	r0, [r8, #12]
   15654:	ldr	r7, [r6, r9, lsl #3]!
   15658:	cmp	r7, #19
   1565c:	bhi	156b8 <sf_gen_arth+0x1ac>
   15660:	ldr	r0, [pc, #512]	; 15868 <sf_gen_arth+0x35c>
   15664:	add	r4, r9, #1
   15668:	cmp	r9, #15
   1566c:	add	r0, pc, r0
   15670:	str	r4, [r0]
   15674:	bge	1584c <sf_gen_arth+0x340>
   15678:	mov	r0, #1024	; 0x400
   1567c:	lsl	r7, r0, r4
   15680:	mov	r0, r7
   15684:	bl	dec <malloc@plt>
   15688:	cmp	r0, #0
   1568c:	str	r0, [r6, #12]
   15690:	beq	1584c <sf_gen_arth+0x340>
   15694:	mov	r1, #0
   15698:	mov	r2, r7
   1569c:	add	r6, r6, #8
   156a0:	bl	e58 <memset@plt>
   156a4:	ldr	ip, [sp, #8]
   156a8:	cmp	r7, #19
   156ac:	str	r7, [r6]
   156b0:	bhi	156bc <sf_gen_arth+0x1b0>
   156b4:	b	1584c <sf_gen_arth+0x340>
   156b8:	mov	r4, r9
   156bc:	ldr	r0, [sp]
   156c0:	sub	r2, r7, #20
   156c4:	str	r2, [r6]
   156c8:	orr	r1, r0, #12
   156cc:	ldr	r0, [r6, #4]
   156d0:	str	r1, [r0, r2]!
   156d4:	mov	r2, r8
   156d8:	mov	r1, r2
   156dc:	ldr	r2, [r2, #16]
   156e0:	cmp	r2, #0
   156e4:	bne	156d8 <sf_gen_arth+0x1cc>
   156e8:	str	r0, [r1, #16]
   156ec:	mov	r1, r5
   156f0:	mov	r0, r1
   156f4:	ldr	r1, [r1, #16]
   156f8:	cmp	r1, #0
   156fc:	bne	156f0 <sf_gen_arth+0x1e4>
   15700:	ldr	r3, [sp, #4]
   15704:	str	r8, [r0, #16]
   15708:	ldr	r0, [r3, #4]
   1570c:	mov	r1, r0
   15710:	ldr	r0, [r0, #16]
   15714:	cmp	r0, #0
   15718:	bne	1570c <sf_gen_arth+0x200>
   1571c:	str	r5, [r1, #16]
   15720:	ldr	r0, [r3, #4]
   15724:	ldr	r1, [ip, #4]
   15728:	mov	r2, r1
   1572c:	ldr	r1, [r1, #16]
   15730:	cmp	r1, #0
   15734:	bne	15728 <sf_gen_arth+0x21c>
   15738:	str	r0, [r2, #16]
   1573c:	mov	r1, #0
   15740:	ldr	r0, [ip, #8]
   15744:	ldr	r7, [pc, #288]	; 1586c <sf_gen_arth+0x360>
   15748:	ldr	r5, [sl, r4, lsl #3]!
   1574c:	add	r7, pc, r7
   15750:	str	r1, [r7, r0, lsl #2]
   15754:	cmp	r5, #19
   15758:	ldr	r0, [r3, #8]
   1575c:	str	r1, [r7, r0, lsl #2]
   15760:	bhi	157b8 <sf_gen_arth+0x2ac>
   15764:	ldr	r1, [pc, #260]	; 15870 <sf_gen_arth+0x364>
   15768:	add	r0, r4, #1
   1576c:	cmp	r4, #15
   15770:	add	r1, pc, r1
   15774:	str	r0, [r1]
   15778:	bge	1584c <sf_gen_arth+0x340>
   1577c:	mov	r1, #1024	; 0x400
   15780:	lsl	r5, r1, r0
   15784:	mov	r0, r5
   15788:	bl	dec <malloc@plt>
   1578c:	cmp	r0, #0
   15790:	str	r0, [sl, #12]
   15794:	beq	1584c <sf_gen_arth+0x340>
   15798:	mov	r1, #0
   1579c:	mov	r2, r5
   157a0:	add	sl, sl, #8
   157a4:	bl	e58 <memset@plt>
   157a8:	ldr	ip, [sp, #8]
   157ac:	cmp	r5, #19
   157b0:	str	r5, [sl]
   157b4:	bls	1584c <sf_gen_arth+0x340>
   157b8:	sub	r1, r5, #20
   157bc:	mov	r2, #2
   157c0:	str	r1, [sl]
   157c4:	ldr	r0, [sl, #4]
   157c8:	str	r2, [r0, r1]!
   157cc:	mvn	r1, #15
   157d0:	ldr	r2, [pc, #156]	; 15874 <sf_gen_arth+0x368>
   157d4:	ldr	r2, [pc, r2]
   157d8:	ldr	r3, [pc, #152]	; 15878 <sf_gen_arth+0x36c>
   157dc:	add	r3, pc, r3
   157e0:	ldr	r6, [r7, r2, lsl #2]
   157e4:	cmp	r6, #0
   157e8:	beq	15818 <sf_gen_arth+0x30c>
   157ec:	add	r2, r2, #1
   157f0:	adds	r1, r1, #1
   157f4:	asr	r6, r2, #31
   157f8:	add	r6, r2, r6, lsr #28
   157fc:	bic	r6, r6, #15
   15800:	sub	r2, r2, r6
   15804:	str	r2, [r3]
   15808:	bcc	157e0 <sf_gen_arth+0x2d4>
   1580c:	ldr	r0, [pc, #104]	; 1587c <sf_gen_arth+0x370>
   15810:	add	r0, pc, r0
   15814:	bl	2068 <sf_bpf_error>
   15818:	mov	r1, #1
   1581c:	str	r1, [r7, r2, lsl #2]
   15820:	str	r2, [r0, #12]
   15824:	str	r2, [ip, #8]
   15828:	ldr	r1, [ip, #4]
   1582c:	mov	r2, r1
   15830:	ldr	r1, [r1, #16]
   15834:	cmp	r1, #0
   15838:	bne	1582c <sf_gen_arth+0x320>
   1583c:	str	r0, [r2, #16]
   15840:	mov	r0, ip
   15844:	sub	sp, fp, #28
   15848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1584c:	ldr	r0, [pc, #44]	; 15880 <sf_gen_arth+0x374>
   15850:	add	r0, pc, r0
   15854:	bl	2068 <sf_bpf_error>
   15858:	.word	0x00031fd8
   1585c:	.word	0x00031f48
   15860:	.word	0x00031fa8
   15864:	.word	0x00031f18
   15868:	.word	0x00031e90
   1586c:	.word	0x00031dc4
   15870:	.word	0x00031d8c
   15874:	.word	0x00031d38
   15878:	.word	0x00031d30
   1587c:	.word	0x000158bd
   15880:	.word	0x00014e2c

00015884 <sf_gen_greater>:
   15884:	mov	r1, r0
   15888:	mov	r0, #48	; 0x30
   1588c:	b	15890 <gen_len>

00015890 <gen_len>:
   15890:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15894:	add	fp, sp, #24
   15898:	mov	r9, r0
   1589c:	ldr	r0, [pc, #280]	; 159bc <gen_len+0x12c>
   158a0:	mov	r8, r1
   158a4:	ldr	r0, [pc, r0]
   158a8:	ldr	r7, [pc, #272]	; 159c0 <gen_len+0x130>
   158ac:	add	r7, pc, r7
   158b0:	mov	r5, r7
   158b4:	ldr	r6, [r5, r0, lsl #3]!
   158b8:	cmp	r6, #19
   158bc:	bhi	15914 <gen_len+0x84>
   158c0:	ldr	r1, [pc, #252]	; 159c4 <gen_len+0x134>
   158c4:	add	r4, r0, #1
   158c8:	cmp	r0, #15
   158cc:	add	r1, pc, r1
   158d0:	str	r4, [r1]
   158d4:	bge	159b0 <gen_len+0x120>
   158d8:	mov	r0, #1024	; 0x400
   158dc:	lsl	r6, r0, r4
   158e0:	mov	r0, r6
   158e4:	bl	dec <malloc@plt>
   158e8:	cmp	r0, #0
   158ec:	str	r0, [r5, #12]
   158f0:	beq	159b0 <gen_len+0x120>
   158f4:	mov	r1, #0
   158f8:	mov	r2, r6
   158fc:	add	r5, r5, #8
   15900:	bl	e58 <memset@plt>
   15904:	cmp	r6, #19
   15908:	str	r6, [r5]
   1590c:	bhi	15918 <gen_len+0x88>
   15910:	b	159b0 <gen_len+0x120>
   15914:	mov	r4, r0
   15918:	sub	r0, r6, #20
   1591c:	mov	r1, #128	; 0x80
   15920:	str	r0, [r5]
   15924:	ldr	r5, [r5, #4]
   15928:	str	r1, [r5, r0]!
   1592c:	ldr	r6, [r7, r4, lsl #3]!
   15930:	cmp	r6, #207	; 0xcf
   15934:	bhi	15988 <gen_len+0xf8>
   15938:	ldr	r1, [pc, #136]	; 159c8 <gen_len+0x138>
   1593c:	add	r0, r4, #1
   15940:	cmp	r4, #15
   15944:	add	r1, pc, r1
   15948:	str	r0, [r1]
   1594c:	bge	159b0 <gen_len+0x120>
   15950:	mov	r1, #1024	; 0x400
   15954:	lsl	r6, r1, r0
   15958:	mov	r0, r6
   1595c:	bl	dec <malloc@plt>
   15960:	cmp	r0, #0
   15964:	str	r0, [r7, #12]
   15968:	beq	159b0 <gen_len+0x120>
   1596c:	mov	r1, #0
   15970:	mov	r2, r6
   15974:	add	r7, r7, #8
   15978:	bl	e58 <memset@plt>
   1597c:	cmp	r6, #207	; 0xcf
   15980:	str	r6, [r7]
   15984:	bls	159b0 <gen_len+0x120>
   15988:	sub	r0, r6, #208	; 0xd0
   1598c:	orr	r1, r9, #5
   15990:	str	r0, [r7]
   15994:	ldr	r2, [r7, #4]
   15998:	add	r0, r2, r0
   1599c:	str	r8, [r0, #20]
   159a0:	str	r5, [r0, #4]
   159a4:	str	r1, [r0, #8]
   159a8:	str	r0, [r0, #96]	; 0x60
   159ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   159b0:	ldr	r0, [pc, #20]	; 159cc <gen_len+0x13c>
   159b4:	add	r0, pc, r0
   159b8:	bl	2068 <sf_bpf_error>
   159bc:	.word	0x00031c58
   159c0:	.word	0x00031bd0
   159c4:	.word	0x00031c30
   159c8:	.word	0x00031bb8
   159cc:	.word	0x00014cc8

000159d0 <sf_gen_less>:
   159d0:	push	{fp, lr}
   159d4:	mov	fp, sp
   159d8:	mov	r1, r0
   159dc:	mov	r0, #32
   159e0:	bl	15890 <gen_len>
   159e4:	ldr	r1, [r0, #44]	; 0x2c
   159e8:	clz	r1, r1
   159ec:	lsr	r1, r1, #5
   159f0:	str	r1, [r0, #44]	; 0x2c
   159f4:	pop	{fp, pc}

000159f8 <sf_gen_byteop>:
   159f8:	push	{r4, r5, r6, r7, fp, lr}
   159fc:	add	fp, sp, #16
   15a00:	mov	r4, r2
   15a04:	sub	r2, r0, #38	; 0x26
   15a08:	cmp	r2, #24
   15a0c:	bhi	15af0 <sf_gen_byteop+0xf8>
   15a10:	add	r0, pc, #4
   15a14:	ldr	r2, [r0, r2, lsl #2]
   15a18:	add	pc, r0, r2
   15a1c:	.word	0x00000064
   15a20:	.word	0x000002d0
   15a24:	.word	0x000002d0
   15a28:	.word	0x000002d0
   15a2c:	.word	0x000002d0
   15a30:	.word	0x000002d0
   15a34:	.word	0x000002d0
   15a38:	.word	0x000002d0
   15a3c:	.word	0x000002d0
   15a40:	.word	0x000002d0
   15a44:	.word	0x000002d0
   15a48:	.word	0x000002d0
   15a4c:	.word	0x000002d0
   15a50:	.word	0x000002d0
   15a54:	.word	0x000002d0
   15a58:	.word	0x000002d0
   15a5c:	.word	0x000002d0
   15a60:	.word	0x000002d0
   15a64:	.word	0x000002d0
   15a68:	.word	0x000002d0
   15a6c:	.word	0x000002d0
   15a70:	.word	0x000002d0
   15a74:	.word	0x00000160
   15a78:	.word	0x000001f8
   15a7c:	.word	0x0000014c
   15a80:	ldr	r0, [pc, #652]	; 15d14 <sf_gen_byteop+0x31c>
   15a84:	ldr	r0, [pc, r0]
   15a88:	ldr	r6, [pc, #648]	; 15d18 <sf_gen_byteop+0x320>
   15a8c:	add	r6, pc, r6
   15a90:	ldr	r5, [r6, r0, lsl #3]!
   15a94:	cmp	r5, #19
   15a98:	bhi	15c28 <sf_gen_byteop+0x230>
   15a9c:	ldr	r1, [pc, #632]	; 15d1c <sf_gen_byteop+0x324>
   15aa0:	add	r7, r0, #1
   15aa4:	cmp	r0, #15
   15aa8:	add	r1, pc, r1
   15aac:	str	r7, [r1]
   15ab0:	bge	15cf0 <sf_gen_byteop+0x2f8>
   15ab4:	mov	r0, #1024	; 0x400
   15ab8:	lsl	r5, r0, r7
   15abc:	mov	r0, r5
   15ac0:	bl	dec <malloc@plt>
   15ac4:	cmp	r0, #0
   15ac8:	str	r0, [r6, #12]
   15acc:	beq	15cf0 <sf_gen_byteop+0x2f8>
   15ad0:	mov	r1, #0
   15ad4:	mov	r2, r5
   15ad8:	add	r6, r6, #8
   15adc:	bl	e58 <memset@plt>
   15ae0:	cmp	r5, #19
   15ae4:	str	r5, [r6]
   15ae8:	bhi	15c2c <sf_gen_byteop+0x234>
   15aec:	b	15cf0 <sf_gen_byteop+0x2f8>
   15af0:	cmp	r0, #124	; 0x7c
   15af4:	bne	15cec <sf_gen_byteop+0x2f4>
   15af8:	ldr	r0, [pc, #520]	; 15d08 <sf_gen_byteop+0x310>
   15afc:	ldr	r0, [pc, r0]
   15b00:	ldr	r6, [pc, #516]	; 15d0c <sf_gen_byteop+0x314>
   15b04:	add	r6, pc, r6
   15b08:	ldr	r5, [r6, r0, lsl #3]!
   15b0c:	cmp	r5, #19
   15b10:	bhi	15c38 <sf_gen_byteop+0x240>
   15b14:	ldr	r1, [pc, #500]	; 15d10 <sf_gen_byteop+0x318>
   15b18:	add	r7, r0, #1
   15b1c:	cmp	r0, #15
   15b20:	add	r1, pc, r1
   15b24:	str	r7, [r1]
   15b28:	bge	15cf0 <sf_gen_byteop+0x2f8>
   15b2c:	mov	r0, #1024	; 0x400
   15b30:	lsl	r5, r0, r7
   15b34:	mov	r0, r5
   15b38:	bl	dec <malloc@plt>
   15b3c:	cmp	r0, #0
   15b40:	str	r0, [r6, #12]
   15b44:	beq	15cf0 <sf_gen_byteop+0x2f8>
   15b48:	mov	r1, #0
   15b4c:	mov	r2, r5
   15b50:	add	r6, r6, #8
   15b54:	bl	e58 <memset@plt>
   15b58:	cmp	r5, #19
   15b5c:	str	r5, [r6]
   15b60:	bhi	15c3c <sf_gen_byteop+0x244>
   15b64:	b	15cf0 <sf_gen_byteop+0x2f8>
   15b68:	mov	r0, #1
   15b6c:	mov	r2, #16
   15b70:	mov	r3, r4
   15b74:	pop	{r4, r5, r6, r7, fp, lr}
   15b78:	b	15d2c <gen_cmp_gt>
   15b7c:	mov	r0, #1
   15b80:	mov	r2, #16
   15b84:	bl	17970 <gen_load_a>
   15b88:	mov	r5, r0
   15b8c:	ldr	r0, [pc, #360]	; 15cfc <sf_gen_byteop+0x304>
   15b90:	ldr	r0, [pc, r0]
   15b94:	ldr	r7, [pc, #356]	; 15d00 <sf_gen_byteop+0x308>
   15b98:	add	r7, pc, r7
   15b9c:	ldr	r6, [r7, r0, lsl #3]!
   15ba0:	cmp	r6, #207	; 0xcf
   15ba4:	bhi	15bf8 <sf_gen_byteop+0x200>
   15ba8:	ldr	r2, [pc, #340]	; 15d04 <sf_gen_byteop+0x30c>
   15bac:	add	r1, r0, #1
   15bb0:	cmp	r0, #15
   15bb4:	add	r2, pc, r2
   15bb8:	str	r1, [r2]
   15bbc:	bge	15cf0 <sf_gen_byteop+0x2f8>
   15bc0:	mov	r0, #1024	; 0x400
   15bc4:	lsl	r6, r0, r1
   15bc8:	mov	r0, r6
   15bcc:	bl	dec <malloc@plt>
   15bd0:	cmp	r0, #0
   15bd4:	str	r0, [r7, #12]
   15bd8:	beq	15cf0 <sf_gen_byteop+0x2f8>
   15bdc:	mov	r1, #0
   15be0:	mov	r2, r6
   15be4:	add	r7, r7, #8
   15be8:	bl	e58 <memset@plt>
   15bec:	cmp	r6, #207	; 0xcf
   15bf0:	str	r6, [r7]
   15bf4:	bls	15cf0 <sf_gen_byteop+0x2f8>
   15bf8:	sub	r0, r6, #208	; 0xd0
   15bfc:	str	r0, [r7]
   15c00:	ldr	r1, [r7, #4]
   15c04:	add	r0, r1, r0
   15c08:	mov	r1, #53	; 0x35
   15c0c:	str	r4, [r0, #20]
   15c10:	b	15ccc <sf_gen_byteop+0x2d4>
   15c14:	mov	r0, #1
   15c18:	mov	r2, #16
   15c1c:	mov	r3, r4
   15c20:	pop	{r4, r5, r6, r7, fp, lr}
   15c24:	b	a8f8 <gen_cmp>
   15c28:	mov	r7, r0
   15c2c:	sub	r0, r5, #20
   15c30:	mov	r1, #84	; 0x54
   15c34:	b	15c44 <sf_gen_byteop+0x24c>
   15c38:	mov	r7, r0
   15c3c:	sub	r0, r5, #20
   15c40:	mov	r1, #68	; 0x44
   15c44:	str	r0, [r6]
   15c48:	ldr	r5, [r6, #4]
   15c4c:	str	r1, [r5, r0]!
   15c50:	str	r4, [r5, #12]
   15c54:	ldr	r6, [pc, #196]	; 15d20 <sf_gen_byteop+0x328>
   15c58:	add	r6, pc, r6
   15c5c:	ldr	r4, [r6, r7, lsl #3]!
   15c60:	cmp	r4, #207	; 0xcf
   15c64:	bhi	15cb8 <sf_gen_byteop+0x2c0>
   15c68:	ldr	r1, [pc, #180]	; 15d24 <sf_gen_byteop+0x32c>
   15c6c:	add	r0, r7, #1
   15c70:	cmp	r7, #15
   15c74:	add	r1, pc, r1
   15c78:	str	r0, [r1]
   15c7c:	bge	15cf0 <sf_gen_byteop+0x2f8>
   15c80:	mov	r1, #1024	; 0x400
   15c84:	lsl	r4, r1, r0
   15c88:	mov	r0, r4
   15c8c:	bl	dec <malloc@plt>
   15c90:	cmp	r0, #0
   15c94:	str	r0, [r6, #12]
   15c98:	beq	15cf0 <sf_gen_byteop+0x2f8>
   15c9c:	mov	r1, #0
   15ca0:	mov	r2, r4
   15ca4:	add	r6, r6, #8
   15ca8:	bl	e58 <memset@plt>
   15cac:	cmp	r4, #207	; 0xcf
   15cb0:	str	r4, [r6]
   15cb4:	bls	15cf0 <sf_gen_byteop+0x2f8>
   15cb8:	sub	r0, r4, #208	; 0xd0
   15cbc:	str	r0, [r6]
   15cc0:	ldr	r1, [r6, #4]
   15cc4:	add	r0, r1, r0
   15cc8:	mov	r1, #21
   15ccc:	str	r5, [r0, #4]
   15cd0:	str	r1, [r0, #8]
   15cd4:	ldr	r1, [r0, #44]	; 0x2c
   15cd8:	clz	r1, r1
   15cdc:	lsr	r1, r1, #5
   15ce0:	str	r1, [r0, #44]	; 0x2c
   15ce4:	str	r0, [r0, #96]	; 0x60
   15ce8:	pop	{r4, r5, r6, r7, fp, pc}
   15cec:	bl	edc <abort@plt>
   15cf0:	ldr	r0, [pc, #48]	; 15d28 <sf_gen_byteop+0x330>
   15cf4:	add	r0, pc, r0
   15cf8:	bl	2068 <sf_bpf_error>
   15cfc:	.word	0x0003196c
   15d00:	.word	0x000318e4
   15d04:	.word	0x00031948
   15d08:	.word	0x00031a00
   15d0c:	.word	0x00031978
   15d10:	.word	0x000319dc
   15d14:	.word	0x00031a78
   15d18:	.word	0x000319f0
   15d1c:	.word	0x00031a54
   15d20:	.word	0x00031824
   15d24:	.word	0x00031888
   15d28:	.word	0x00014988

00015d2c <gen_cmp_gt>:
   15d2c:	push	{r4, r5, r6, r7, fp, lr}
   15d30:	add	fp, sp, #16
   15d34:	mov	r4, r3
   15d38:	bl	17970 <gen_load_a>
   15d3c:	mov	r5, r0
   15d40:	ldr	r0, [pc, #152]	; 15de0 <gen_cmp_gt+0xb4>
   15d44:	ldr	r0, [pc, r0]
   15d48:	ldr	r7, [pc, #148]	; 15de4 <gen_cmp_gt+0xb8>
   15d4c:	add	r7, pc, r7
   15d50:	ldr	r6, [r7, r0, lsl #3]!
   15d54:	cmp	r6, #207	; 0xcf
   15d58:	bhi	15dac <gen_cmp_gt+0x80>
   15d5c:	ldr	r2, [pc, #132]	; 15de8 <gen_cmp_gt+0xbc>
   15d60:	add	r1, r0, #1
   15d64:	cmp	r0, #15
   15d68:	add	r2, pc, r2
   15d6c:	str	r1, [r2]
   15d70:	bge	15dd4 <gen_cmp_gt+0xa8>
   15d74:	mov	r0, #1024	; 0x400
   15d78:	lsl	r6, r0, r1
   15d7c:	mov	r0, r6
   15d80:	bl	dec <malloc@plt>
   15d84:	cmp	r0, #0
   15d88:	str	r0, [r7, #12]
   15d8c:	beq	15dd4 <gen_cmp_gt+0xa8>
   15d90:	mov	r1, #0
   15d94:	mov	r2, r6
   15d98:	add	r7, r7, #8
   15d9c:	bl	e58 <memset@plt>
   15da0:	cmp	r6, #207	; 0xcf
   15da4:	str	r6, [r7]
   15da8:	bls	15dd4 <gen_cmp_gt+0xa8>
   15dac:	sub	r0, r6, #208	; 0xd0
   15db0:	str	r0, [r7]
   15db4:	ldr	r1, [r7, #4]
   15db8:	add	r0, r1, r0
   15dbc:	mov	r1, #37	; 0x25
   15dc0:	str	r4, [r0, #20]
   15dc4:	str	r5, [r0, #4]
   15dc8:	str	r1, [r0, #8]
   15dcc:	str	r0, [r0, #96]	; 0x60
   15dd0:	pop	{r4, r5, r6, r7, fp, pc}
   15dd4:	ldr	r0, [pc, #16]	; 15dec <gen_cmp_gt+0xc0>
   15dd8:	add	r0, pc, r0
   15ddc:	bl	2068 <sf_bpf_error>
   15de0:	.word	0x000317b8
   15de4:	.word	0x00031730
   15de8:	.word	0x00031794
   15dec:	.word	0x000148a4

00015df0 <sf_gen_broadcast>:
   15df0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15df4:	add	fp, sp, #28
   15df8:	sub	sp, sp, #28
   15dfc:	cmp	r0, #2
   15e00:	bcs	15f28 <sf_gen_broadcast+0x138>
   15e04:	ldr	r0, [pc, #3124]	; 16a40 <sf_gen_broadcast+0xc50>
   15e08:	ldr	r0, [pc, r0]
   15e0c:	sub	r1, r0, #105	; 0x69
   15e10:	cmp	r1, #58	; 0x3a
   15e14:	bhi	15fdc <sf_gen_broadcast+0x1ec>
   15e18:	add	r0, pc, #4
   15e1c:	ldr	r1, [r0, r1, lsl #2]
   15e20:	add	pc, r0, r1
   15e24:	.word	0x000000ec
   15e28:	.word	0x00000404
   15e2c:	.word	0x00000404
   15e30:	.word	0x00000404
   15e34:	.word	0x00000404
   15e38:	.word	0x00000404
   15e3c:	.word	0x00000404
   15e40:	.word	0x00000404
   15e44:	.word	0x00000404
   15e48:	.word	0x00000404
   15e4c:	.word	0x00000404
   15e50:	.word	0x00000404
   15e54:	.word	0x00000404
   15e58:	.word	0x00000404
   15e5c:	.word	0x000000ec
   15e60:	.word	0x00000404
   15e64:	.word	0x00000404
   15e68:	.word	0x0000021c
   15e6c:	.word	0x00000430
   15e70:	.word	0x00000404
   15e74:	.word	0x00000404
   15e78:	.word	0x00000404
   15e7c:	.word	0x000000ec
   15e80:	.word	0x00000404
   15e84:	.word	0x00000230
   15e88:	.word	0x00000404
   15e8c:	.word	0x00000404
   15e90:	.word	0x00000404
   15e94:	.word	0x00000404
   15e98:	.word	0x00000404
   15e9c:	.word	0x00000404
   15ea0:	.word	0x00000404
   15ea4:	.word	0x00000404
   15ea8:	.word	0x00000404
   15eac:	.word	0x00000404
   15eb0:	.word	0x00000404
   15eb4:	.word	0x00000404
   15eb8:	.word	0x00000404
   15ebc:	.word	0x00000404
   15ec0:	.word	0x00000404
   15ec4:	.word	0x00000404
   15ec8:	.word	0x00000404
   15ecc:	.word	0x00000404
   15ed0:	.word	0x00000404
   15ed4:	.word	0x00000404
   15ed8:	.word	0x00000404
   15edc:	.word	0x00000404
   15ee0:	.word	0x00000404
   15ee4:	.word	0x00000404
   15ee8:	.word	0x00000404
   15eec:	.word	0x00000404
   15ef0:	.word	0x00000404
   15ef4:	.word	0x00000404
   15ef8:	.word	0x00000404
   15efc:	.word	0x00000404
   15f00:	.word	0x00000404
   15f04:	.word	0x00000404
   15f08:	.word	0x00000404
   15f0c:	.word	0x000000ec
   15f10:	ldr	r0, [pc, #2860]	; 16a44 <sf_gen_broadcast+0xc54>
   15f14:	mov	r1, #2
   15f18:	add	r0, pc, r0
   15f1c:	sub	sp, fp, #28
   15f20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f24:	b	cff4 <gen_wlanhostop>
   15f28:	bne	16a24 <sf_gen_broadcast+0xc34>
   15f2c:	ldr	r0, [pc, #2872]	; 16a6c <sf_gen_broadcast+0xc7c>
   15f30:	ldr	r0, [pc, r0]
   15f34:	cmn	r0, #1
   15f38:	beq	16a30 <sf_gen_broadcast+0xc40>
   15f3c:	mov	r0, #2048	; 0x800
   15f40:	bl	71fc <gen_linktype>
   15f44:	mov	sl, r0
   15f48:	ldr	r0, [pc, #2848]	; 16a70 <sf_gen_broadcast+0xc80>
   15f4c:	add	r0, pc, r0
   15f50:	ldrb	r8, [r0]
   15f54:	ldr	r0, [pc, #2840]	; 16a74 <sf_gen_broadcast+0xc84>
   15f58:	ldr	r0, [pc, r0]
   15f5c:	cmp	r8, #0
   15f60:	add	r0, r0, #16
   15f64:	str	r0, [sp, #4]
   15f68:	ldr	r0, [pc, #2824]	; 16a78 <sf_gen_broadcast+0xc88>
   15f6c:	ldr	r0, [pc, r0]
   15f70:	str	r0, [sp, #8]
   15f74:	ldr	ip, [pc, #2816]	; 16a7c <sf_gen_broadcast+0xc8c>
   15f78:	add	ip, pc, ip
   15f7c:	beq	16034 <sf_gen_broadcast+0x244>
   15f80:	ldr	r4, [pc, #2812]	; 16a84 <sf_gen_broadcast+0xc94>
   15f84:	ldr	r4, [pc, r4]
   15f88:	cmn	r4, #1
   15f8c:	bne	16080 <sf_gen_broadcast+0x290>
   15f90:	ldr	r4, [pc, #2800]	; 16a88 <sf_gen_broadcast+0xc98>
   15f94:	mvn	r1, #15
   15f98:	ldr	r4, [pc, r4]
   15f9c:	ldr	r0, [pc, #2792]	; 16a8c <sf_gen_broadcast+0xc9c>
   15fa0:	ldr	r2, [pc, #2792]	; 16a90 <sf_gen_broadcast+0xca0>
   15fa4:	add	r0, pc, r0
   15fa8:	add	r2, pc, r2
   15fac:	ldr	r3, [r0, r4, lsl #2]
   15fb0:	cmp	r3, #0
   15fb4:	beq	1606c <sf_gen_broadcast+0x27c>
   15fb8:	add	r3, r4, #1
   15fbc:	adds	r1, r1, #1
   15fc0:	asr	r7, r3, #31
   15fc4:	add	r7, r3, r7, lsr #28
   15fc8:	bic	r7, r7, #15
   15fcc:	sub	r4, r3, r7
   15fd0:	str	r4, [r2]
   15fd4:	bcc	15fac <sf_gen_broadcast+0x1bc>
   15fd8:	b	1654c <sf_gen_broadcast+0x75c>
   15fdc:	sub	r1, r0, #1
   15fe0:	cmp	r1, #9
   15fe4:	bhi	16220 <sf_gen_broadcast+0x430>
   15fe8:	add	r0, pc, #4
   15fec:	ldr	r1, [r0, r1, lsl #2]
   15ff0:	add	pc, r0, r1
   15ff4:	.word	0x00000028
   15ff8:	.word	0x00000234
   15ffc:	.word	0x00000234
   16000:	.word	0x00000234
   16004:	.word	0x00000234
   16008:	.word	0x0000004c
   1600c:	.word	0x00000060
   16010:	.word	0x00000234
   16014:	.word	0x00000234
   16018:	.word	0x00000240
   1601c:	ldr	r1, [pc, #2600]	; 16a4c <sf_gen_broadcast+0xc5c>
   16020:	mov	r0, #1
   16024:	ldr	r1, [pc, r1]
   16028:	ldr	r3, [pc, #2592]	; 16a50 <sf_gen_broadcast+0xc60>
   1602c:	add	r3, pc, r3
   16030:	b	16244 <sf_gen_broadcast+0x454>
   16034:	ldr	r6, [pc, #2628]	; 16a80 <sf_gen_broadcast+0xc90>
   16038:	ldr	r6, [pc, r6]
   1603c:	b	16184 <sf_gen_broadcast+0x394>
   16040:	ldr	r3, [pc, #2576]	; 16a58 <sf_gen_broadcast+0xc68>
   16044:	mov	r0, #1
   16048:	mov	r1, #2
   1604c:	add	r3, pc, r3
   16050:	b	16244 <sf_gen_broadcast+0x454>
   16054:	ldr	r3, [pc, #2540]	; 16a48 <sf_gen_broadcast+0xc58>
   16058:	mov	r0, #1
   1605c:	mov	r1, #1
   16060:	mov	r2, #1
   16064:	add	r3, pc, r3
   16068:	b	16248 <sf_gen_broadcast+0x458>
   1606c:	mov	r1, #1
   16070:	str	r1, [r0, r4, lsl #2]
   16074:	ldr	r0, [pc, #2588]	; 16a98 <sf_gen_broadcast+0xca8>
   16078:	add	r0, pc, r0
   1607c:	str	r4, [r0]
   16080:	ldr	r0, [pc, #2580]	; 16a9c <sf_gen_broadcast+0xcac>
   16084:	mov	r7, ip
   16088:	ldr	r0, [pc, r0]
   1608c:	ldr	r5, [r7, r0, lsl #3]!
   16090:	cmp	r5, #19
   16094:	bhi	160f4 <sf_gen_broadcast+0x304>
   16098:	ldr	r1, [pc, #2560]	; 16aa0 <sf_gen_broadcast+0xcb0>
   1609c:	add	r6, r0, #1
   160a0:	cmp	r0, #15
   160a4:	add	r1, pc, r1
   160a8:	str	r6, [r1]
   160ac:	bge	16a18 <sf_gen_broadcast+0xc28>
   160b0:	mov	r0, #1024	; 0x400
   160b4:	lsl	r5, r0, r6
   160b8:	mov	r0, r5
   160bc:	bl	dec <malloc@plt>
   160c0:	cmp	r0, #0
   160c4:	str	r0, [r7, #12]
   160c8:	beq	16a18 <sf_gen_broadcast+0xc28>
   160cc:	mov	r1, #0
   160d0:	mov	r2, r5
   160d4:	add	r7, r7, #8
   160d8:	bl	e58 <memset@plt>
   160dc:	str	r5, [r7]
   160e0:	cmp	r5, #19
   160e4:	ldr	ip, [pc, #2488]	; 16aa4 <sf_gen_broadcast+0xcb4>
   160e8:	add	ip, pc, ip
   160ec:	bhi	160f8 <sf_gen_broadcast+0x308>
   160f0:	b	16a18 <sf_gen_broadcast+0xc28>
   160f4:	mov	r6, r0
   160f8:	sub	r0, r5, #20
   160fc:	mov	r1, #97	; 0x61
   16100:	str	r0, [r7]
   16104:	ldr	r9, [r7, #4]
   16108:	str	r1, [r9, r0]!
   1610c:	cmp	r9, #0
   16110:	str	r4, [r9, #12]
   16114:	beq	16184 <sf_gen_broadcast+0x394>
   16118:	mov	r7, ip
   1611c:	ldr	r5, [r7, r6, lsl #3]!
   16120:	cmp	r5, #19
   16124:	bhi	16358 <sf_gen_broadcast+0x568>
   16128:	ldr	r0, [pc, #2424]	; 16aa8 <sf_gen_broadcast+0xcb8>
   1612c:	add	r4, r6, #1
   16130:	cmp	r6, #15
   16134:	add	r0, pc, r0
   16138:	str	r4, [r0]
   1613c:	bge	16a18 <sf_gen_broadcast+0xc28>
   16140:	mov	r0, #1024	; 0x400
   16144:	lsl	r5, r0, r4
   16148:	mov	r0, r5
   1614c:	bl	dec <malloc@plt>
   16150:	cmp	r0, #0
   16154:	str	r0, [r7, #12]
   16158:	beq	16a18 <sf_gen_broadcast+0xc28>
   1615c:	mov	r1, #0
   16160:	mov	r2, r5
   16164:	add	r7, r7, #8
   16168:	bl	e58 <memset@plt>
   1616c:	str	r5, [r7]
   16170:	cmp	r5, #19
   16174:	ldr	ip, [pc, #2352]	; 16aac <sf_gen_broadcast+0xcbc>
   16178:	add	ip, pc, ip
   1617c:	bhi	1635c <sf_gen_broadcast+0x56c>
   16180:	b	16a18 <sf_gen_broadcast+0xc28>
   16184:	mov	r7, ip
   16188:	ldr	r5, [r7, r6, lsl #3]!
   1618c:	cmp	r5, #19
   16190:	bhi	161f0 <sf_gen_broadcast+0x400>
   16194:	ldr	r0, [pc, #2324]	; 16ab0 <sf_gen_broadcast+0xcc0>
   16198:	add	r4, r6, #1
   1619c:	cmp	r6, #15
   161a0:	add	r0, pc, r0
   161a4:	str	r4, [r0]
   161a8:	bge	16a18 <sf_gen_broadcast+0xc28>
   161ac:	mov	r0, #1024	; 0x400
   161b0:	lsl	r5, r0, r4
   161b4:	mov	r0, r5
   161b8:	bl	dec <malloc@plt>
   161bc:	cmp	r0, #0
   161c0:	str	r0, [r7, #12]
   161c4:	beq	16a18 <sf_gen_broadcast+0xc28>
   161c8:	mov	r1, #0
   161cc:	mov	r2, r5
   161d0:	add	r7, r7, #8
   161d4:	bl	e58 <memset@plt>
   161d8:	str	r5, [r7]
   161dc:	cmp	r5, #19
   161e0:	ldr	ip, [pc, #2252]	; 16ab4 <sf_gen_broadcast+0xcc4>
   161e4:	add	ip, pc, ip
   161e8:	bhi	161f4 <sf_gen_broadcast+0x404>
   161ec:	b	16a18 <sf_gen_broadcast+0xc28>
   161f0:	mov	r4, r6
   161f4:	sub	r0, r5, #20
   161f8:	mov	r1, #32
   161fc:	str	r0, [r7]
   16200:	ldr	r9, [r7, #4]
   16204:	str	r1, [r9, r0]!
   16208:	ldr	r0, [pc, #2216]	; 16ab8 <sf_gen_broadcast+0xcc8>
   1620c:	ldr	r0, [pc, r0]
   16210:	ldr	r1, [sp, #4]
   16214:	add	r0, r0, r1
   16218:	str	r0, [r9, #12]
   1621c:	b	16390 <sf_gen_broadcast+0x5a0>
   16220:	cmp	r0, #192	; 0xc0
   16224:	beq	15f10 <sf_gen_broadcast+0x120>
   16228:	ldr	r0, [pc, #2104]	; 16a68 <sf_gen_broadcast+0xc78>
   1622c:	add	r0, pc, r0
   16230:	bl	2068 <sf_bpf_error>
   16234:	ldr	r3, [pc, #2072]	; 16a54 <sf_gen_broadcast+0xc64>
   16238:	mov	r0, #1
   1623c:	mov	r1, #1
   16240:	add	r3, pc, r3
   16244:	mov	r2, #6
   16248:	sub	sp, fp, #28
   1624c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16250:	b	1c314 <gen_bcmp>
   16254:	ldr	r0, [pc, #2048]	; 16a5c <sf_gen_broadcast+0xc6c>
   16258:	add	r0, pc, r0
   1625c:	ldrb	r0, [r0]
   16260:	cmp	r0, #1
   16264:	bne	16a24 <sf_gen_broadcast+0xc34>
   16268:	mov	r0, #1
   1626c:	mov	r1, #4
   16270:	mov	r2, #8
   16274:	mov	r3, #65280	; 0xff00
   16278:	bl	a8f8 <gen_cmp>
   1627c:	mov	r4, r0
   16280:	ldr	r0, [r0, #44]	; 0x2c
   16284:	mov	r2, #6
   16288:	clz	r0, r0
   1628c:	lsr	r0, r0, #5
   16290:	str	r0, [r4, #44]	; 0x2c
   16294:	mov	r0, #1
   16298:	ldr	r1, [pc, #1984]	; 16a60 <sf_gen_broadcast+0xc70>
   1629c:	ldr	r1, [pc, r1]
   162a0:	ldr	r3, [pc, #1980]	; 16a64 <sf_gen_broadcast+0xc74>
   162a4:	add	r3, pc, r3
   162a8:	bl	1c314 <gen_bcmp>
   162ac:	cmp	r4, #0
   162b0:	beq	162e4 <sf_gen_broadcast+0x4f4>
   162b4:	ldr	r1, [r0, #96]	; 0x60
   162b8:	mov	r2, r4
   162bc:	ldr	r3, [r2, #44]	; 0x2c
   162c0:	add	r7, r2, #84	; 0x54
   162c4:	cmp	r3, #0
   162c8:	mov	r3, #84	; 0x54
   162cc:	movweq	r3, #60	; 0x3c
   162d0:	addeq	r7, r2, #60	; 0x3c
   162d4:	ldr	r2, [r2, r3]
   162d8:	str	r1, [r7]
   162dc:	cmp	r2, #0
   162e0:	bne	162bc <sf_gen_broadcast+0x4cc>
   162e4:	ldr	r1, [r4, #44]	; 0x2c
   162e8:	cmp	r0, #0
   162ec:	clz	r1, r1
   162f0:	lsr	r1, r1, #5
   162f4:	str	r1, [r4, #44]	; 0x2c
   162f8:	ldr	r2, [r0, #44]	; 0x2c
   162fc:	clz	r1, r2
   16300:	lsr	r1, r1, #5
   16304:	str	r1, [r0, #44]	; 0x2c
   16308:	str	r0, [sp, #16]
   1630c:	beq	169f8 <sf_gen_broadcast+0xc08>
   16310:	cmp	r2, #0
   16314:	mov	r2, #60	; 0x3c
   16318:	add	r1, r0, #60	; 0x3c
   1631c:	movweq	r2, #84	; 0x54
   16320:	addeq	r1, r0, #84	; 0x54
   16324:	ldr	r2, [r0, r2]
   16328:	cmp	r2, #0
   1632c:	beq	169fc <sf_gen_broadcast+0xc0c>
   16330:	ldr	r3, [r2, #44]	; 0x2c
   16334:	add	r1, r2, #84	; 0x54
   16338:	cmp	r3, #0
   1633c:	mov	r3, #84	; 0x54
   16340:	movweq	r3, #60	; 0x3c
   16344:	addeq	r1, r2, #60	; 0x3c
   16348:	ldr	r2, [r2, r3]
   1634c:	cmp	r2, #0
   16350:	bne	16330 <sf_gen_broadcast+0x540>
   16354:	b	169fc <sf_gen_broadcast+0xc0c>
   16358:	mov	r4, r6
   1635c:	sub	r1, r5, #20
   16360:	mov	r2, #64	; 0x40
   16364:	str	r1, [r7]
   16368:	ldr	r0, [r7, #4]
   1636c:	str	r2, [r0, r1]!
   16370:	mov	r2, r9
   16374:	ldr	r1, [sp, #4]
   16378:	str	r1, [r0, #12]
   1637c:	mov	r1, r2
   16380:	ldr	r2, [r2, #16]
   16384:	cmp	r2, #0
   16388:	bne	1637c <sf_gen_broadcast+0x58c>
   1638c:	str	r0, [r1, #16]
   16390:	ldr	r0, [sp, #8]
   16394:	mvn	r1, r0
   16398:	cmp	r0, #0
   1639c:	str	r1, [sp, #12]
   163a0:	beq	16410 <sf_gen_broadcast+0x620>
   163a4:	mov	r7, ip
   163a8:	ldr	r5, [r7, r4, lsl #3]!
   163ac:	cmp	r5, #19
   163b0:	bhi	16418 <sf_gen_broadcast+0x628>
   163b4:	ldr	r0, [pc, #1792]	; 16abc <sf_gen_broadcast+0xccc>
   163b8:	add	r6, r4, #1
   163bc:	cmp	r4, #15
   163c0:	add	r0, pc, r0
   163c4:	str	r6, [r0]
   163c8:	bge	16a18 <sf_gen_broadcast+0xc28>
   163cc:	mov	r0, #1024	; 0x400
   163d0:	lsl	r5, r0, r6
   163d4:	mov	r0, r5
   163d8:	bl	dec <malloc@plt>
   163dc:	cmp	r0, #0
   163e0:	str	r0, [r7, #12]
   163e4:	beq	16a18 <sf_gen_broadcast+0xc28>
   163e8:	mov	r1, #0
   163ec:	mov	r2, r5
   163f0:	add	r7, r7, #8
   163f4:	bl	e58 <memset@plt>
   163f8:	str	r5, [r7]
   163fc:	cmp	r5, #19
   16400:	ldr	ip, [pc, #1720]	; 16ac0 <sf_gen_broadcast+0xcd0>
   16404:	add	ip, pc, ip
   16408:	bhi	1641c <sf_gen_broadcast+0x62c>
   1640c:	b	16a18 <sf_gen_broadcast+0xc28>
   16410:	mov	r6, r4
   16414:	b	16450 <sf_gen_broadcast+0x660>
   16418:	mov	r6, r4
   1641c:	sub	r1, r5, #20
   16420:	mov	r2, #84	; 0x54
   16424:	str	r1, [r7]
   16428:	ldr	r0, [r7, #4]
   1642c:	str	r2, [r0, r1]!
   16430:	mov	r2, r9
   16434:	ldr	r1, [sp, #12]
   16438:	str	r1, [r0, #12]
   1643c:	mov	r1, r2
   16440:	ldr	r2, [r2, #16]
   16444:	cmp	r2, #0
   16448:	bne	1643c <sf_gen_broadcast+0x64c>
   1644c:	str	r0, [r1, #16]
   16450:	mov	r7, ip
   16454:	str	sl, [sp]
   16458:	ldr	r5, [r7, r6, lsl #3]!
   1645c:	cmp	r5, #207	; 0xcf
   16460:	bhi	164c0 <sf_gen_broadcast+0x6d0>
   16464:	ldr	r0, [pc, #1624]	; 16ac4 <sf_gen_broadcast+0xcd4>
   16468:	add	r4, r6, #1
   1646c:	cmp	r6, #15
   16470:	add	r0, pc, r0
   16474:	str	r4, [r0]
   16478:	bge	16a18 <sf_gen_broadcast+0xc28>
   1647c:	mov	r0, #1024	; 0x400
   16480:	lsl	r5, r0, r4
   16484:	mov	r0, r5
   16488:	bl	dec <malloc@plt>
   1648c:	cmp	r0, #0
   16490:	str	r0, [r7, #12]
   16494:	beq	16a18 <sf_gen_broadcast+0xc28>
   16498:	mov	r1, #0
   1649c:	mov	r2, r5
   164a0:	add	r7, r7, #8
   164a4:	bl	e58 <memset@plt>
   164a8:	str	r5, [r7]
   164ac:	cmp	r5, #207	; 0xcf
   164b0:	ldr	ip, [pc, #1552]	; 16ac8 <sf_gen_broadcast+0xcd8>
   164b4:	add	ip, pc, ip
   164b8:	bhi	164c4 <sf_gen_broadcast+0x6d4>
   164bc:	b	16a18 <sf_gen_broadcast+0xc28>
   164c0:	mov	r4, r6
   164c4:	sub	r0, r5, #208	; 0xd0
   164c8:	cmp	r8, #0
   164cc:	str	r0, [r7]
   164d0:	ldr	r1, [r7, #4]
   164d4:	add	sl, r1, r0
   164d8:	mov	r1, #0
   164dc:	mov	r0, #21
   164e0:	str	r1, [sl, #20]
   164e4:	str	r9, [sl, #4]
   164e8:	str	r0, [sl, #8]
   164ec:	str	sl, [sl, #96]	; 0x60
   164f0:	beq	1666c <sf_gen_broadcast+0x87c>
   164f4:	ldr	r6, [pc, #1488]	; 16acc <sf_gen_broadcast+0xcdc>
   164f8:	ldr	r6, [pc, r6]
   164fc:	cmn	r6, #1
   16500:	bne	1656c <sf_gen_broadcast+0x77c>
   16504:	ldr	r6, [pc, #1476]	; 16ad0 <sf_gen_broadcast+0xce0>
   16508:	mvn	r1, #15
   1650c:	ldr	r6, [pc, r6]
   16510:	ldr	r0, [pc, #1468]	; 16ad4 <sf_gen_broadcast+0xce4>
   16514:	ldr	r2, [pc, #1468]	; 16ad8 <sf_gen_broadcast+0xce8>
   16518:	add	r0, pc, r0
   1651c:	add	r2, pc, r2
   16520:	ldr	r3, [r0, r6, lsl #2]
   16524:	cmp	r3, #0
   16528:	beq	16558 <sf_gen_broadcast+0x768>
   1652c:	add	r3, r6, #1
   16530:	adds	r1, r1, #1
   16534:	asr	r7, r3, #31
   16538:	add	r7, r3, r7, lsr #28
   1653c:	bic	r7, r7, #15
   16540:	sub	r6, r3, r7
   16544:	str	r6, [r2]
   16548:	bcc	16520 <sf_gen_broadcast+0x730>
   1654c:	ldr	r0, [pc, #1344]	; 16a94 <sf_gen_broadcast+0xca4>
   16550:	add	r0, pc, r0
   16554:	bl	2068 <sf_bpf_error>
   16558:	mov	r1, #1
   1655c:	str	r1, [r0, r6, lsl #2]
   16560:	ldr	r0, [pc, #1396]	; 16adc <sf_gen_broadcast+0xcec>
   16564:	add	r0, pc, r0
   16568:	str	r6, [r0]
   1656c:	mov	r7, ip
   16570:	ldr	r5, [r7, r4, lsl #3]!
   16574:	cmp	r5, #19
   16578:	bhi	165d8 <sf_gen_broadcast+0x7e8>
   1657c:	ldr	r0, [pc, #1372]	; 16ae0 <sf_gen_broadcast+0xcf0>
   16580:	add	r9, r4, #1
   16584:	cmp	r4, #15
   16588:	add	r0, pc, r0
   1658c:	str	r9, [r0]
   16590:	bge	16a18 <sf_gen_broadcast+0xc28>
   16594:	mov	r0, #1024	; 0x400
   16598:	lsl	r5, r0, r9
   1659c:	mov	r0, r5
   165a0:	bl	dec <malloc@plt>
   165a4:	cmp	r0, #0
   165a8:	str	r0, [r7, #12]
   165ac:	beq	16a18 <sf_gen_broadcast+0xc28>
   165b0:	mov	r1, #0
   165b4:	mov	r2, r5
   165b8:	add	r7, r7, #8
   165bc:	bl	e58 <memset@plt>
   165c0:	str	r5, [r7]
   165c4:	cmp	r5, #19
   165c8:	ldr	ip, [pc, #1300]	; 16ae4 <sf_gen_broadcast+0xcf4>
   165cc:	add	ip, pc, ip
   165d0:	bhi	165dc <sf_gen_broadcast+0x7ec>
   165d4:	b	16a18 <sf_gen_broadcast+0xc28>
   165d8:	mov	r9, r4
   165dc:	sub	r0, r5, #20
   165e0:	mov	r1, #97	; 0x61
   165e4:	str	r0, [r7]
   165e8:	ldr	r4, [r7, #4]
   165ec:	str	r1, [r4, r0]!
   165f0:	cmp	r4, #0
   165f4:	str	r6, [r4, #12]
   165f8:	beq	16668 <sf_gen_broadcast+0x878>
   165fc:	mov	r6, ip
   16600:	ldr	r5, [r6, r9, lsl #3]!
   16604:	cmp	r5, #19
   16608:	bhi	16708 <sf_gen_broadcast+0x918>
   1660c:	ldr	r0, [pc, #1236]	; 16ae8 <sf_gen_broadcast+0xcf8>
   16610:	add	r8, r9, #1
   16614:	cmp	r9, #15
   16618:	add	r0, pc, r0
   1661c:	str	r8, [r0]
   16620:	bge	16a18 <sf_gen_broadcast+0xc28>
   16624:	mov	r0, #1024	; 0x400
   16628:	lsl	r5, r0, r8
   1662c:	mov	r0, r5
   16630:	bl	dec <malloc@plt>
   16634:	cmp	r0, #0
   16638:	str	r0, [r6, #12]
   1663c:	beq	16a18 <sf_gen_broadcast+0xc28>
   16640:	mov	r1, #0
   16644:	mov	r2, r5
   16648:	add	r6, r6, #8
   1664c:	bl	e58 <memset@plt>
   16650:	str	r5, [r6]
   16654:	cmp	r5, #19
   16658:	ldr	ip, [pc, #1164]	; 16aec <sf_gen_broadcast+0xcfc>
   1665c:	add	ip, pc, ip
   16660:	bhi	1670c <sf_gen_broadcast+0x91c>
   16664:	b	16a18 <sf_gen_broadcast+0xc28>
   16668:	mov	r4, r9
   1666c:	mov	r6, ip
   16670:	ldr	r5, [r6, r4, lsl #3]!
   16674:	cmp	r5, #19
   16678:	bhi	166d8 <sf_gen_broadcast+0x8e8>
   1667c:	ldr	r0, [pc, #1132]	; 16af0 <sf_gen_broadcast+0xd00>
   16680:	add	r8, r4, #1
   16684:	cmp	r4, #15
   16688:	add	r0, pc, r0
   1668c:	str	r8, [r0]
   16690:	bge	16a18 <sf_gen_broadcast+0xc28>
   16694:	mov	r0, #1024	; 0x400
   16698:	lsl	r5, r0, r8
   1669c:	mov	r0, r5
   166a0:	bl	dec <malloc@plt>
   166a4:	cmp	r0, #0
   166a8:	str	r0, [r6, #12]
   166ac:	beq	16a18 <sf_gen_broadcast+0xc28>
   166b0:	mov	r1, #0
   166b4:	mov	r2, r5
   166b8:	add	r6, r6, #8
   166bc:	bl	e58 <memset@plt>
   166c0:	str	r5, [r6]
   166c4:	cmp	r5, #19
   166c8:	ldr	ip, [pc, #1060]	; 16af4 <sf_gen_broadcast+0xd04>
   166cc:	add	ip, pc, ip
   166d0:	bhi	166dc <sf_gen_broadcast+0x8ec>
   166d4:	b	16a18 <sf_gen_broadcast+0xc28>
   166d8:	mov	r8, r4
   166dc:	sub	r0, r5, #20
   166e0:	mov	r1, #32
   166e4:	str	r0, [r6]
   166e8:	ldr	r4, [r6, #4]
   166ec:	str	r1, [r4, r0]!
   166f0:	ldr	r0, [pc, #1024]	; 16af8 <sf_gen_broadcast+0xd08>
   166f4:	ldr	r0, [pc, r0]
   166f8:	ldr	r1, [sp, #4]
   166fc:	add	r0, r0, r1
   16700:	str	r0, [r4, #12]
   16704:	b	16740 <sf_gen_broadcast+0x950>
   16708:	mov	r8, r9
   1670c:	sub	r1, r5, #20
   16710:	mov	r2, #64	; 0x40
   16714:	str	r1, [r6]
   16718:	ldr	r0, [r6, #4]
   1671c:	str	r2, [r0, r1]!
   16720:	mov	r2, r4
   16724:	ldr	r1, [sp, #4]
   16728:	str	r1, [r0, #12]
   1672c:	mov	r1, r2
   16730:	ldr	r2, [r2, #16]
   16734:	cmp	r2, #0
   16738:	bne	1672c <sf_gen_broadcast+0x93c>
   1673c:	str	r0, [r1, #16]
   16740:	ldr	r0, [sp, #8]
   16744:	cmp	r0, #0
   16748:	beq	167b8 <sf_gen_broadcast+0x9c8>
   1674c:	mov	r7, ip
   16750:	ldr	r5, [r7, r8, lsl #3]!
   16754:	cmp	r5, #19
   16758:	bhi	167c0 <sf_gen_broadcast+0x9d0>
   1675c:	ldr	r0, [pc, #920]	; 16afc <sf_gen_broadcast+0xd0c>
   16760:	add	r6, r8, #1
   16764:	cmp	r8, #15
   16768:	add	r0, pc, r0
   1676c:	str	r6, [r0]
   16770:	bge	16a18 <sf_gen_broadcast+0xc28>
   16774:	mov	r0, #1024	; 0x400
   16778:	lsl	r5, r0, r6
   1677c:	mov	r0, r5
   16780:	bl	dec <malloc@plt>
   16784:	cmp	r0, #0
   16788:	str	r0, [r7, #12]
   1678c:	beq	16a18 <sf_gen_broadcast+0xc28>
   16790:	mov	r1, #0
   16794:	mov	r2, r5
   16798:	add	r7, r7, #8
   1679c:	bl	e58 <memset@plt>
   167a0:	str	r5, [r7]
   167a4:	cmp	r5, #19
   167a8:	ldr	ip, [pc, #848]	; 16b00 <sf_gen_broadcast+0xd10>
   167ac:	add	ip, pc, ip
   167b0:	bhi	167c4 <sf_gen_broadcast+0x9d4>
   167b4:	b	16a18 <sf_gen_broadcast+0xc28>
   167b8:	mov	r6, r8
   167bc:	b	167f8 <sf_gen_broadcast+0xa08>
   167c0:	mov	r6, r8
   167c4:	sub	r1, r5, #20
   167c8:	mov	r2, #84	; 0x54
   167cc:	str	r1, [r7]
   167d0:	ldr	r0, [r7, #4]
   167d4:	str	r2, [r0, r1]!
   167d8:	mov	r2, r4
   167dc:	ldr	r1, [sp, #12]
   167e0:	str	r1, [r0, #12]
   167e4:	mov	r1, r2
   167e8:	ldr	r2, [r2, #16]
   167ec:	cmp	r2, #0
   167f0:	bne	167e4 <sf_gen_broadcast+0x9f4>
   167f4:	str	r0, [r1, #16]
   167f8:	ldr	r5, [ip, r6, lsl #3]!
   167fc:	cmp	r5, #207	; 0xcf
   16800:	bhi	1685c <sf_gen_broadcast+0xa6c>
   16804:	ldr	r1, [pc, #760]	; 16b04 <sf_gen_broadcast+0xd14>
   16808:	add	r0, r6, #1
   1680c:	cmp	r6, #15
   16810:	add	r1, pc, r1
   16814:	str	r0, [r1]
   16818:	bge	16a18 <sf_gen_broadcast+0xc28>
   1681c:	mov	r1, #1024	; 0x400
   16820:	mov	r7, ip
   16824:	lsl	r5, r1, r0
   16828:	mov	r0, r5
   1682c:	bl	dec <malloc@plt>
   16830:	cmp	r0, #0
   16834:	str	r0, [r7, #12]
   16838:	beq	16a18 <sf_gen_broadcast+0xc28>
   1683c:	mov	r1, #0
   16840:	mov	r2, r5
   16844:	add	r7, r7, #8
   16848:	bl	e58 <memset@plt>
   1684c:	mov	ip, r7
   16850:	cmp	r5, #207	; 0xcf
   16854:	str	r5, [r7]
   16858:	bls	16a18 <sf_gen_broadcast+0xc28>
   1685c:	sub	r0, r5, #208	; 0xd0
   16860:	ldr	r2, [sp, #12]
   16864:	cmp	sl, #0
   16868:	str	r0, [ip]
   1686c:	ldr	r1, [ip, #4]
   16870:	add	r0, r1, r0
   16874:	mov	r1, #21
   16878:	str	r2, [r0, #20]
   1687c:	str	r4, [r0, #4]
   16880:	str	r1, [r0, #8]
   16884:	str	r0, [r0, #96]	; 0x60
   16888:	ldr	r1, [sl, #44]	; 0x2c
   1688c:	clz	r1, r1
   16890:	lsr	r1, r1, #5
   16894:	str	r1, [sl, #44]	; 0x2c
   16898:	beq	168d4 <sf_gen_broadcast+0xae4>
   1689c:	ldr	r2, [r0, #96]	; 0x60
   168a0:	mov	r3, sl
   168a4:	cmp	r1, #0
   168a8:	mov	r1, #84	; 0x54
   168ac:	add	r7, r3, #84	; 0x54
   168b0:	movweq	r1, #60	; 0x3c
   168b4:	addeq	r7, r3, #60	; 0x3c
   168b8:	ldr	r3, [r3, r1]
   168bc:	str	r2, [r7]
   168c0:	cmp	r3, #0
   168c4:	beq	168d0 <sf_gen_broadcast+0xae0>
   168c8:	ldr	r1, [r3, #44]	; 0x2c
   168cc:	b	168a4 <sf_gen_broadcast+0xab4>
   168d0:	ldr	r1, [sl, #44]	; 0x2c
   168d4:	clz	r1, r1
   168d8:	cmp	r0, #0
   168dc:	lsr	r1, r1, #5
   168e0:	str	r1, [sl, #44]	; 0x2c
   168e4:	str	r0, [sp, #24]
   168e8:	beq	16918 <sf_gen_broadcast+0xb28>
   168ec:	mov	r2, r0
   168f0:	ldr	r3, [r2, #44]	; 0x2c
   168f4:	add	r1, r2, #84	; 0x54
   168f8:	cmp	r3, #0
   168fc:	mov	r3, #84	; 0x54
   16900:	movweq	r3, #60	; 0x3c
   16904:	addeq	r1, r2, #60	; 0x3c
   16908:	ldr	r2, [r2, r3]
   1690c:	cmp	r2, #0
   16910:	bne	168f0 <sf_gen_broadcast+0xb00>
   16914:	b	1691c <sf_gen_broadcast+0xb2c>
   16918:	add	r1, sp, #24
   1691c:	str	sl, [r1]
   16920:	ldr	r6, [sp]
   16924:	ldr	r1, [sl, #96]	; 0x60
   16928:	cmp	r6, #0
   1692c:	str	r1, [r0, #96]	; 0x60
   16930:	beq	16960 <sf_gen_broadcast+0xb70>
   16934:	mov	r2, r6
   16938:	ldr	r3, [r2, #44]	; 0x2c
   1693c:	add	r7, r2, #84	; 0x54
   16940:	cmp	r3, #0
   16944:	mov	r3, #84	; 0x54
   16948:	movweq	r3, #60	; 0x3c
   1694c:	addeq	r7, r2, #60	; 0x3c
   16950:	ldr	r2, [r2, r3]
   16954:	str	r1, [r7]
   16958:	cmp	r2, #0
   1695c:	bne	16938 <sf_gen_broadcast+0xb48>
   16960:	ldr	r1, [r6, #44]	; 0x2c
   16964:	cmp	r0, #0
   16968:	clz	r1, r1
   1696c:	lsr	r1, r1, #5
   16970:	str	r1, [r6, #44]	; 0x2c
   16974:	ldr	r1, [r0, #44]	; 0x2c
   16978:	clz	r2, r1
   1697c:	lsr	r2, r2, #5
   16980:	str	r2, [r0, #44]	; 0x2c
   16984:	str	r0, [sp, #20]
   16988:	beq	169d0 <sf_gen_broadcast+0xbe0>
   1698c:	cmp	r1, #0
   16990:	mov	r3, #60	; 0x3c
   16994:	mov	r2, r0
   16998:	movweq	r3, #84	; 0x54
   1699c:	ldr	r1, [r2, r3]!
   169a0:	cmp	r1, #0
   169a4:	beq	169d4 <sf_gen_broadcast+0xbe4>
   169a8:	ldr	r3, [r1, #44]	; 0x2c
   169ac:	add	r2, r1, #84	; 0x54
   169b0:	cmp	r3, #0
   169b4:	mov	r3, #84	; 0x54
   169b8:	movweq	r3, #60	; 0x3c
   169bc:	addeq	r2, r1, #60	; 0x3c
   169c0:	ldr	r1, [r1, r3]
   169c4:	cmp	r1, #0
   169c8:	bne	169a8 <sf_gen_broadcast+0xbb8>
   169cc:	b	169d4 <sf_gen_broadcast+0xbe4>
   169d0:	add	r2, sp, #20
   169d4:	str	r6, [r2]
   169d8:	ldr	r1, [r0, #44]	; 0x2c
   169dc:	clz	r1, r1
   169e0:	lsr	r1, r1, #5
   169e4:	str	r1, [r0, #44]	; 0x2c
   169e8:	ldr	r1, [r6, #96]	; 0x60
   169ec:	str	r1, [r0, #96]	; 0x60
   169f0:	sub	sp, fp, #28
   169f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   169f8:	add	r1, sp, #16
   169fc:	str	r4, [r1]
   16a00:	ldr	r1, [r0, #44]	; 0x2c
   16a04:	clz	r1, r1
   16a08:	lsr	r1, r1, #5
   16a0c:	str	r1, [r0, #44]	; 0x2c
   16a10:	ldr	r1, [r4, #96]	; 0x60
   16a14:	b	169ec <sf_gen_broadcast+0xbfc>
   16a18:	ldr	r0, [pc, #236]	; 16b0c <sf_gen_broadcast+0xd1c>
   16a1c:	add	r0, pc, r0
   16a20:	bl	2068 <sf_bpf_error>
   16a24:	ldr	r0, [pc, #16]	; 16a3c <sf_gen_broadcast+0xc4c>
   16a28:	add	r0, pc, r0
   16a2c:	bl	2068 <sf_bpf_error>
   16a30:	ldr	r0, [pc, #208]	; 16b08 <sf_gen_broadcast+0xd18>
   16a34:	add	r0, pc, r0
   16a38:	bl	2068 <sf_bpf_error>
   16a3c:	.word	0x000136ba
   16a40:	.word	0x00031628
   16a44:	.word	0x000311b4
   16a48:	.word	0x000313e0
   16a4c:	.word	0x00031424
   16a50:	.word	0x000310a0
   16a54:	.word	0x00030e8c
   16a58:	.word	0x00031080
   16a5c:	.word	0x000311dc
   16a60:	.word	0x000311ac
   16a64:	.word	0x00030e28
   16a68:	.word	0x00013e6e
   16a6c:	.word	0x000314f8
   16a70:	.word	0x000315b4
   16a74:	.word	0x000314e8
   16a78:	.word	0x000314bc
   16a7c:	.word	0x00031504
   16a80:	.word	0x000314c4
   16a84:	.word	0x00031584
   16a88:	.word	0x00031574
   16a8c:	.word	0x0003156c
   16a90:	.word	0x00031564
   16a94:	.word	0x00014b7d
   16a98:	.word	0x00031490
   16a9c:	.word	0x00031474
   16aa0:	.word	0x00031458
   16aa4:	.word	0x00031394
   16aa8:	.word	0x000313c8
   16aac:	.word	0x00031304
   16ab0:	.word	0x0003135c
   16ab4:	.word	0x00031298
   16ab8:	.word	0x00031230
   16abc:	.word	0x0003113c
   16ac0:	.word	0x00031078
   16ac4:	.word	0x0003108c
   16ac8:	.word	0x00030fc8
   16acc:	.word	0x00031010
   16ad0:	.word	0x00031000
   16ad4:	.word	0x00030ff8
   16ad8:	.word	0x00030ff0
   16adc:	.word	0x00030fa4
   16ae0:	.word	0x00030f74
   16ae4:	.word	0x00030eb0
   16ae8:	.word	0x00030ee4
   16aec:	.word	0x00030e20
   16af0:	.word	0x00030e74
   16af4:	.word	0x00030db0
   16af8:	.word	0x00030d48
   16afc:	.word	0x00030d94
   16b00:	.word	0x00030cd0
   16b04:	.word	0x00030cec
   16b08:	.word	0x0001367b
   16b0c:	.word	0x00013c60

00016b10 <sf_gen_multicast>:
   16b10:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16b14:	add	fp, sp, #24
   16b18:	sub	sp, sp, #8
   16b1c:	cmp	r0, #2
   16b20:	bcc	16c00 <sf_gen_multicast+0xf0>
   16b24:	beq	16e70 <sf_gen_multicast+0x360>
   16b28:	cmp	r0, #17
   16b2c:	bne	17844 <sf_gen_multicast+0xd34>
   16b30:	movw	r0, #34525	; 0x86dd
   16b34:	bl	71fc <gen_linktype>
   16b38:	mov	r5, r0
   16b3c:	mov	r0, #3
   16b40:	mov	r1, #24
   16b44:	mov	r2, #16
   16b48:	mov	r3, #255	; 0xff
   16b4c:	bl	a8f8 <gen_cmp>
   16b50:	mov	r4, r0
   16b54:	cmp	r5, #0
   16b58:	beq	16b8c <sf_gen_multicast+0x7c>
   16b5c:	ldr	r0, [r4, #96]	; 0x60
   16b60:	mov	r1, r5
   16b64:	ldr	r2, [r1, #44]	; 0x2c
   16b68:	add	r3, r1, #84	; 0x54
   16b6c:	cmp	r2, #0
   16b70:	mov	r2, #84	; 0x54
   16b74:	movweq	r2, #60	; 0x3c
   16b78:	addeq	r3, r1, #60	; 0x3c
   16b7c:	ldr	r1, [r1, r2]
   16b80:	str	r0, [r3]
   16b84:	cmp	r1, #0
   16b88:	bne	16b64 <sf_gen_multicast+0x54>
   16b8c:	ldr	r0, [r5, #44]	; 0x2c
   16b90:	cmp	r4, #0
   16b94:	clz	r0, r0
   16b98:	lsr	r0, r0, #5
   16b9c:	str	r0, [r5, #44]	; 0x2c
   16ba0:	ldr	r1, [r4, #44]	; 0x2c
   16ba4:	clz	r0, r1
   16ba8:	lsr	r0, r0, #5
   16bac:	str	r0, [r4, #44]	; 0x2c
   16bb0:	str	r4, [sp, #4]
   16bb4:	beq	17808 <sf_gen_multicast+0xcf8>
   16bb8:	cmp	r1, #0
   16bbc:	mov	r1, #60	; 0x3c
   16bc0:	add	r0, r4, #60	; 0x3c
   16bc4:	movweq	r1, #84	; 0x54
   16bc8:	addeq	r0, r4, #84	; 0x54
   16bcc:	ldr	r1, [r4, r1]
   16bd0:	cmp	r1, #0
   16bd4:	beq	1780c <sf_gen_multicast+0xcfc>
   16bd8:	ldr	r2, [r1, #44]	; 0x2c
   16bdc:	add	r0, r1, #84	; 0x54
   16be0:	cmp	r2, #0
   16be4:	mov	r2, #84	; 0x54
   16be8:	movweq	r2, #60	; 0x3c
   16bec:	addeq	r0, r1, #60	; 0x3c
   16bf0:	ldr	r1, [r1, r2]
   16bf4:	cmp	r1, #0
   16bf8:	bne	16bd8 <sf_gen_multicast+0xc8>
   16bfc:	b	1780c <sf_gen_multicast+0xcfc>
   16c00:	ldr	r0, [pc, #3156]	; 1785c <sf_gen_multicast+0xd4c>
   16c04:	ldr	r0, [pc, r0]
   16c08:	sub	r1, r0, #105	; 0x69
   16c0c:	cmp	r1, #58	; 0x3a
   16c10:	bhi	16f40 <sf_gen_multicast+0x430>
   16c14:	add	r0, pc, #4
   16c18:	ldr	r1, [r0, r1, lsl #2]
   16c1c:	add	pc, r0, r1
   16c20:	.word	0x000000ec
   16c24:	.word	0x00000c24
   16c28:	.word	0x00000c24
   16c2c:	.word	0x00000c24
   16c30:	.word	0x00000c24
   16c34:	.word	0x00000c24
   16c38:	.word	0x00000c24
   16c3c:	.word	0x00000c24
   16c40:	.word	0x00000c24
   16c44:	.word	0x00000c24
   16c48:	.word	0x00000c24
   16c4c:	.word	0x00000c24
   16c50:	.word	0x00000c24
   16c54:	.word	0x00000c24
   16c58:	.word	0x000000ec
   16c5c:	.word	0x00000c24
   16c60:	.word	0x00000c24
   16c64:	.word	0x00000368
   16c68:	.word	0x00000af0
   16c6c:	.word	0x00000c24
   16c70:	.word	0x00000c24
   16c74:	.word	0x00000c24
   16c78:	.word	0x000000ec
   16c7c:	.word	0x00000c24
   16c80:	.word	0x00000370
   16c84:	.word	0x00000c24
   16c88:	.word	0x00000c24
   16c8c:	.word	0x00000c24
   16c90:	.word	0x00000c24
   16c94:	.word	0x00000c24
   16c98:	.word	0x00000c24
   16c9c:	.word	0x00000c24
   16ca0:	.word	0x00000c24
   16ca4:	.word	0x00000c24
   16ca8:	.word	0x00000c24
   16cac:	.word	0x00000c24
   16cb0:	.word	0x00000c24
   16cb4:	.word	0x00000c24
   16cb8:	.word	0x00000c24
   16cbc:	.word	0x00000c24
   16cc0:	.word	0x00000c24
   16cc4:	.word	0x00000c24
   16cc8:	.word	0x00000c24
   16ccc:	.word	0x00000c24
   16cd0:	.word	0x00000c24
   16cd4:	.word	0x00000c24
   16cd8:	.word	0x00000c24
   16cdc:	.word	0x00000c24
   16ce0:	.word	0x00000c24
   16ce4:	.word	0x00000c24
   16ce8:	.word	0x00000c24
   16cec:	.word	0x00000c24
   16cf0:	.word	0x00000c24
   16cf4:	.word	0x00000c24
   16cf8:	.word	0x00000c24
   16cfc:	.word	0x00000c24
   16d00:	.word	0x00000c24
   16d04:	.word	0x00000c24
   16d08:	.word	0x000000ec
   16d0c:	mov	r0, #1
   16d10:	mov	r1, #1
   16d14:	mov	r2, #16
   16d18:	mov	r6, #1
   16d1c:	bl	17970 <gen_load_a>
   16d20:	mov	r4, r0
   16d24:	ldr	r0, [pc, #2868]	; 17860 <sf_gen_multicast+0xd50>
   16d28:	ldr	r0, [pc, r0]
   16d2c:	ldr	r9, [pc, #2864]	; 17864 <sf_gen_multicast+0xd54>
   16d30:	add	r9, pc, r9
   16d34:	mov	r7, r9
   16d38:	ldr	r5, [r7, r0, lsl #3]!
   16d3c:	cmp	r5, #207	; 0xcf
   16d40:	bhi	16d94 <sf_gen_multicast+0x284>
   16d44:	ldr	r2, [pc, #2844]	; 17868 <sf_gen_multicast+0xd58>
   16d48:	add	r1, r0, #1
   16d4c:	cmp	r0, #15
   16d50:	add	r2, pc, r2
   16d54:	str	r1, [r2]
   16d58:	bge	17850 <sf_gen_multicast+0xd40>
   16d5c:	mov	r0, #1024	; 0x400
   16d60:	lsl	r5, r0, r1
   16d64:	mov	r0, r5
   16d68:	bl	dec <malloc@plt>
   16d6c:	cmp	r0, #0
   16d70:	str	r0, [r7, #12]
   16d74:	beq	17850 <sf_gen_multicast+0xd40>
   16d78:	mov	r1, #0
   16d7c:	mov	r2, r5
   16d80:	add	r7, r7, #8
   16d84:	bl	e58 <memset@plt>
   16d88:	cmp	r5, #207	; 0xcf
   16d8c:	str	r5, [r7]
   16d90:	bls	17850 <sf_gen_multicast+0xd40>
   16d94:	sub	r0, r5, #208	; 0xd0
   16d98:	str	r0, [r7]
   16d9c:	ldr	r1, [r7, #4]
   16da0:	add	r5, r1, r0
   16da4:	mov	r0, #69	; 0x45
   16da8:	str	r6, [r5, #20]
   16dac:	str	r4, [r5, #4]
   16db0:	str	r0, [r5, #8]
   16db4:	mov	r0, #16
   16db8:	str	r5, [r5, #96]	; 0x60
   16dbc:	bl	178a0 <gen_mac_multicast>
   16dc0:	mov	r4, r0
   16dc4:	cmp	r5, #0
   16dc8:	beq	16dfc <sf_gen_multicast+0x2ec>
   16dcc:	ldr	r0, [r4, #96]	; 0x60
   16dd0:	mov	r1, r5
   16dd4:	ldr	r2, [r1, #44]	; 0x2c
   16dd8:	add	r3, r1, #84	; 0x54
   16ddc:	cmp	r2, #0
   16de0:	mov	r2, #84	; 0x54
   16de4:	movweq	r2, #60	; 0x3c
   16de8:	addeq	r3, r1, #60	; 0x3c
   16dec:	ldr	r1, [r1, r2]
   16df0:	str	r0, [r3]
   16df4:	cmp	r1, #0
   16df8:	bne	16dd4 <sf_gen_multicast+0x2c4>
   16dfc:	ldr	r0, [r5, #44]	; 0x2c
   16e00:	cmp	r4, #0
   16e04:	clz	r0, r0
   16e08:	lsr	r0, r0, #5
   16e0c:	str	r0, [r5, #44]	; 0x2c
   16e10:	ldr	r1, [r4, #44]	; 0x2c
   16e14:	clz	r0, r1
   16e18:	lsr	r0, r0, #5
   16e1c:	str	r0, [r4, #44]	; 0x2c
   16e20:	str	r4, [sp, #4]
   16e24:	beq	16fb0 <sf_gen_multicast+0x4a0>
   16e28:	cmp	r1, #0
   16e2c:	mov	r1, #60	; 0x3c
   16e30:	add	r0, r4, #60	; 0x3c
   16e34:	movweq	r1, #84	; 0x54
   16e38:	addeq	r0, r4, #84	; 0x54
   16e3c:	ldr	r1, [r4, r1]
   16e40:	cmp	r1, #0
   16e44:	beq	16fb4 <sf_gen_multicast+0x4a4>
   16e48:	ldr	r2, [r1, #44]	; 0x2c
   16e4c:	add	r0, r1, #84	; 0x54
   16e50:	cmp	r2, #0
   16e54:	mov	r2, #84	; 0x54
   16e58:	movweq	r2, #60	; 0x3c
   16e5c:	addeq	r0, r1, #60	; 0x3c
   16e60:	ldr	r1, [r1, r2]
   16e64:	cmp	r1, #0
   16e68:	bne	16e48 <sf_gen_multicast+0x338>
   16e6c:	b	16fb4 <sf_gen_multicast+0x4a4>
   16e70:	mov	r0, #2048	; 0x800
   16e74:	bl	71fc <gen_linktype>
   16e78:	mov	r5, r0
   16e7c:	mov	r0, #3
   16e80:	mov	r1, #16
   16e84:	mov	r2, #16
   16e88:	mov	r3, #224	; 0xe0
   16e8c:	bl	17cdc <gen_cmp_ge>
   16e90:	mov	r4, r0
   16e94:	cmp	r5, #0
   16e98:	beq	16ecc <sf_gen_multicast+0x3bc>
   16e9c:	ldr	r0, [r4, #96]	; 0x60
   16ea0:	mov	r1, r5
   16ea4:	ldr	r2, [r1, #44]	; 0x2c
   16ea8:	add	r3, r1, #84	; 0x54
   16eac:	cmp	r2, #0
   16eb0:	mov	r2, #84	; 0x54
   16eb4:	movweq	r2, #60	; 0x3c
   16eb8:	addeq	r3, r1, #60	; 0x3c
   16ebc:	ldr	r1, [r1, r2]
   16ec0:	str	r0, [r3]
   16ec4:	cmp	r1, #0
   16ec8:	bne	16ea4 <sf_gen_multicast+0x394>
   16ecc:	ldr	r0, [r5, #44]	; 0x2c
   16ed0:	cmp	r4, #0
   16ed4:	clz	r0, r0
   16ed8:	lsr	r0, r0, #5
   16edc:	str	r0, [r5, #44]	; 0x2c
   16ee0:	ldr	r1, [r4, #44]	; 0x2c
   16ee4:	clz	r0, r1
   16ee8:	lsr	r0, r0, #5
   16eec:	str	r0, [r4, #44]	; 0x2c
   16ef0:	str	r4, [sp, #4]
   16ef4:	beq	17808 <sf_gen_multicast+0xcf8>
   16ef8:	cmp	r1, #0
   16efc:	mov	r1, #60	; 0x3c
   16f00:	add	r0, r4, #60	; 0x3c
   16f04:	movweq	r1, #84	; 0x54
   16f08:	addeq	r0, r4, #84	; 0x54
   16f0c:	ldr	r1, [r4, r1]
   16f10:	cmp	r1, #0
   16f14:	beq	1780c <sf_gen_multicast+0xcfc>
   16f18:	ldr	r2, [r1, #44]	; 0x2c
   16f1c:	add	r0, r1, #84	; 0x54
   16f20:	cmp	r2, #0
   16f24:	mov	r2, #84	; 0x54
   16f28:	movweq	r2, #60	; 0x3c
   16f2c:	addeq	r0, r1, #60	; 0x3c
   16f30:	ldr	r1, [r1, r2]
   16f34:	cmp	r1, #0
   16f38:	bne	16f18 <sf_gen_multicast+0x408>
   16f3c:	b	1780c <sf_gen_multicast+0xcfc>
   16f40:	sub	r1, r0, #1
   16f44:	cmp	r1, #9
   16f48:	bhi	17704 <sf_gen_multicast+0xbf4>
   16f4c:	add	r0, pc, #4
   16f50:	ldr	r1, [r0, r1, lsl #2]
   16f54:	add	pc, r0, r1
   16f58:	.word	0x00000028
   16f5c:	.word	0x000008ec
   16f60:	.word	0x000008ec
   16f64:	.word	0x000008ec
   16f68:	.word	0x000008ec
   16f6c:	.word	0x00000030
   16f70:	.word	0x00000038
   16f74:	.word	0x000008ec
   16f78:	.word	0x000008ec
   16f7c:	.word	0x000008dc
   16f80:	mov	r0, #0
   16f84:	b	17838 <sf_gen_multicast+0xd28>
   16f88:	mov	r0, #2
   16f8c:	b	17838 <sf_gen_multicast+0xd28>
   16f90:	ldr	r3, [pc, #2264]	; 17870 <sf_gen_multicast+0xd60>
   16f94:	mov	r0, #1
   16f98:	mov	r1, #1
   16f9c:	mov	r2, #1
   16fa0:	add	r3, pc, r3
   16fa4:	sub	sp, fp, #24
   16fa8:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   16fac:	b	1c314 <gen_bcmp>
   16fb0:	add	r0, sp, #4
   16fb4:	str	r5, [r0]
   16fb8:	mov	r1, #1
   16fbc:	mov	r2, #16
   16fc0:	mov	r8, #1
   16fc4:	ldr	r0, [r4, #44]	; 0x2c
   16fc8:	clz	r0, r0
   16fcc:	lsr	r0, r0, #5
   16fd0:	str	r0, [r4, #44]	; 0x2c
   16fd4:	ldr	r0, [r5, #96]	; 0x60
   16fd8:	str	r0, [r4, #96]	; 0x60
   16fdc:	mov	r0, #1
   16fe0:	bl	17970 <gen_load_a>
   16fe4:	mov	r5, r0
   16fe8:	ldr	r0, [pc, #2180]	; 17874 <sf_gen_multicast+0xd64>
   16fec:	mov	r7, r9
   16ff0:	ldr	r0, [pc, r0]
   16ff4:	ldr	r6, [r7, r0, lsl #3]!
   16ff8:	cmp	r6, #207	; 0xcf
   16ffc:	bhi	17050 <sf_gen_multicast+0x540>
   17000:	ldr	r2, [pc, #2160]	; 17878 <sf_gen_multicast+0xd68>
   17004:	add	r1, r0, #1
   17008:	cmp	r0, #15
   1700c:	add	r2, pc, r2
   17010:	str	r1, [r2]
   17014:	bge	17850 <sf_gen_multicast+0xd40>
   17018:	mov	r0, #1024	; 0x400
   1701c:	lsl	r6, r0, r1
   17020:	mov	r0, r6
   17024:	bl	dec <malloc@plt>
   17028:	cmp	r0, #0
   1702c:	str	r0, [r7, #12]
   17030:	beq	17850 <sf_gen_multicast+0xd40>
   17034:	mov	r1, #0
   17038:	mov	r2, r6
   1703c:	add	r7, r7, #8
   17040:	bl	e58 <memset@plt>
   17044:	cmp	r6, #207	; 0xcf
   17048:	str	r6, [r7]
   1704c:	bls	17850 <sf_gen_multicast+0xd40>
   17050:	sub	r0, r6, #208	; 0xd0
   17054:	str	r0, [r7]
   17058:	ldr	r1, [r7, #4]
   1705c:	add	r6, r1, r0
   17060:	mov	r0, #69	; 0x45
   17064:	str	r8, [r6, #20]
   17068:	str	r5, [r6, #4]
   1706c:	str	r0, [r6, #8]
   17070:	ldr	r0, [r6, #44]	; 0x2c
   17074:	clz	r0, r0
   17078:	lsr	r0, r0, #5
   1707c:	str	r0, [r6, #44]	; 0x2c
   17080:	mov	r0, #4
   17084:	str	r6, [r6, #96]	; 0x60
   17088:	bl	178a0 <gen_mac_multicast>
   1708c:	cmp	r6, #0
   17090:	beq	170c4 <sf_gen_multicast+0x5b4>
   17094:	ldr	r1, [r0, #96]	; 0x60
   17098:	mov	r2, r6
   1709c:	ldr	r3, [r2, #44]	; 0x2c
   170a0:	add	r7, r2, #84	; 0x54
   170a4:	cmp	r3, #0
   170a8:	mov	r3, #84	; 0x54
   170ac:	movweq	r3, #60	; 0x3c
   170b0:	addeq	r7, r2, #60	; 0x3c
   170b4:	ldr	r2, [r2, r3]
   170b8:	str	r1, [r7]
   170bc:	cmp	r2, #0
   170c0:	bne	1709c <sf_gen_multicast+0x58c>
   170c4:	ldr	r1, [r6, #44]	; 0x2c
   170c8:	cmp	r0, #0
   170cc:	clz	r1, r1
   170d0:	lsr	r1, r1, #5
   170d4:	str	r1, [r6, #44]	; 0x2c
   170d8:	ldr	r2, [r0, #44]	; 0x2c
   170dc:	clz	r1, r2
   170e0:	lsr	r1, r1, #5
   170e4:	str	r1, [r0, #44]	; 0x2c
   170e8:	str	r0, [sp, #4]
   170ec:	beq	17138 <sf_gen_multicast+0x628>
   170f0:	cmp	r2, #0
   170f4:	mov	r2, #60	; 0x3c
   170f8:	add	r1, r0, #60	; 0x3c
   170fc:	movweq	r2, #84	; 0x54
   17100:	addeq	r1, r0, #84	; 0x54
   17104:	ldr	r2, [r0, r2]
   17108:	cmp	r2, #0
   1710c:	beq	1713c <sf_gen_multicast+0x62c>
   17110:	ldr	r3, [r2, #44]	; 0x2c
   17114:	add	r1, r2, #84	; 0x54
   17118:	cmp	r3, #0
   1711c:	mov	r3, #84	; 0x54
   17120:	movweq	r3, #60	; 0x3c
   17124:	addeq	r1, r2, #60	; 0x3c
   17128:	ldr	r2, [r2, r3]
   1712c:	cmp	r2, #0
   17130:	bne	17110 <sf_gen_multicast+0x600>
   17134:	b	1713c <sf_gen_multicast+0x62c>
   17138:	add	r1, sp, #4
   1713c:	str	r6, [r1]
   17140:	ldr	r1, [r0, #44]	; 0x2c
   17144:	clz	r2, r1
   17148:	cmp	r1, #0
   1714c:	lsr	r2, r2, #5
   17150:	movwne	r1, #1
   17154:	cmp	r0, #0
   17158:	str	r2, [r0, #44]	; 0x2c
   1715c:	ldr	r2, [r6, #96]	; 0x60
   17160:	str	r1, [r0, #44]	; 0x2c
   17164:	str	r2, [r0, #96]	; 0x60
   17168:	beq	171a4 <sf_gen_multicast+0x694>
   1716c:	ldr	r2, [r4, #96]	; 0x60
   17170:	mov	r3, r0
   17174:	cmp	r1, #0
   17178:	mov	r1, #84	; 0x54
   1717c:	add	r7, r3, #84	; 0x54
   17180:	movweq	r1, #60	; 0x3c
   17184:	addeq	r7, r3, #60	; 0x3c
   17188:	ldr	r3, [r3, r1]
   1718c:	str	r2, [r7]
   17190:	cmp	r3, #0
   17194:	beq	171a0 <sf_gen_multicast+0x690>
   17198:	ldr	r1, [r3, #44]	; 0x2c
   1719c:	b	17174 <sf_gen_multicast+0x664>
   171a0:	ldr	r1, [r0, #44]	; 0x2c
   171a4:	clz	r1, r1
   171a8:	cmp	r4, #0
   171ac:	lsr	r1, r1, #5
   171b0:	str	r1, [r0, #44]	; 0x2c
   171b4:	str	r4, [sp, #4]
   171b8:	beq	171e8 <sf_gen_multicast+0x6d8>
   171bc:	mov	r2, r4
   171c0:	ldr	r3, [r2, #44]	; 0x2c
   171c4:	add	r1, r2, #84	; 0x54
   171c8:	cmp	r3, #0
   171cc:	mov	r3, #84	; 0x54
   171d0:	movweq	r3, #60	; 0x3c
   171d4:	addeq	r1, r2, #60	; 0x3c
   171d8:	ldr	r2, [r2, r3]
   171dc:	cmp	r2, #0
   171e0:	bne	171c0 <sf_gen_multicast+0x6b0>
   171e4:	b	171ec <sf_gen_multicast+0x6dc>
   171e8:	add	r1, sp, #4
   171ec:	str	r0, [r1]
   171f0:	mov	r1, #0
   171f4:	mov	r2, #16
   171f8:	ldr	r0, [r0, #96]	; 0x60
   171fc:	str	r0, [r4, #96]	; 0x60
   17200:	mov	r0, #1
   17204:	bl	17970 <gen_load_a>
   17208:	mov	r5, r0
   1720c:	ldr	r0, [pc, #1640]	; 1787c <sf_gen_multicast+0xd6c>
   17210:	mov	r7, r9
   17214:	ldr	r0, [pc, r0]
   17218:	ldr	r6, [r7, r0, lsl #3]!
   1721c:	cmp	r6, #207	; 0xcf
   17220:	bhi	17274 <sf_gen_multicast+0x764>
   17224:	ldr	r2, [pc, #1620]	; 17880 <sf_gen_multicast+0xd70>
   17228:	add	r1, r0, #1
   1722c:	cmp	r0, #15
   17230:	add	r2, pc, r2
   17234:	str	r1, [r2]
   17238:	bge	17850 <sf_gen_multicast+0xd40>
   1723c:	mov	r0, #1024	; 0x400
   17240:	lsl	r6, r0, r1
   17244:	mov	r0, r6
   17248:	bl	dec <malloc@plt>
   1724c:	cmp	r0, #0
   17250:	str	r0, [r7, #12]
   17254:	beq	17850 <sf_gen_multicast+0xd40>
   17258:	mov	r1, #0
   1725c:	mov	r2, r6
   17260:	add	r7, r7, #8
   17264:	bl	e58 <memset@plt>
   17268:	cmp	r6, #207	; 0xcf
   1726c:	str	r6, [r7]
   17270:	bls	17850 <sf_gen_multicast+0xd40>
   17274:	sub	r0, r6, #208	; 0xd0
   17278:	mov	r2, #8
   1727c:	str	r0, [r7]
   17280:	ldr	r1, [r7, #4]
   17284:	adds	r0, r1, r0
   17288:	mov	r1, #69	; 0x45
   1728c:	str	r2, [r0, #20]
   17290:	str	r5, [r0, #4]
   17294:	str	r1, [r0, #8]
   17298:	str	r0, [r0, #96]	; 0x60
   1729c:	beq	172d0 <sf_gen_multicast+0x7c0>
   172a0:	ldr	r1, [r4, #96]	; 0x60
   172a4:	mov	r2, r0
   172a8:	ldr	r3, [r2, #44]	; 0x2c
   172ac:	add	r7, r2, #84	; 0x54
   172b0:	cmp	r3, #0
   172b4:	mov	r3, #84	; 0x54
   172b8:	movweq	r3, #60	; 0x3c
   172bc:	addeq	r7, r2, #60	; 0x3c
   172c0:	ldr	r2, [r2, r3]
   172c4:	str	r1, [r7]
   172c8:	cmp	r2, #0
   172cc:	bne	172a8 <sf_gen_multicast+0x798>
   172d0:	ldr	r1, [r0, #44]	; 0x2c
   172d4:	cmp	r4, #0
   172d8:	clz	r1, r1
   172dc:	lsr	r1, r1, #5
   172e0:	str	r1, [r0, #44]	; 0x2c
   172e4:	ldr	r2, [r4, #44]	; 0x2c
   172e8:	clz	r1, r2
   172ec:	lsr	r1, r1, #5
   172f0:	str	r1, [r4, #44]	; 0x2c
   172f4:	str	r4, [sp, #4]
   172f8:	beq	17344 <sf_gen_multicast+0x834>
   172fc:	cmp	r2, #0
   17300:	mov	r2, #60	; 0x3c
   17304:	add	r1, r4, #60	; 0x3c
   17308:	movweq	r2, #84	; 0x54
   1730c:	addeq	r1, r4, #84	; 0x54
   17310:	ldr	r2, [r4, r2]
   17314:	cmp	r2, #0
   17318:	beq	17348 <sf_gen_multicast+0x838>
   1731c:	ldr	r3, [r2, #44]	; 0x2c
   17320:	add	r1, r2, #84	; 0x54
   17324:	cmp	r3, #0
   17328:	mov	r3, #84	; 0x54
   1732c:	movweq	r3, #60	; 0x3c
   17330:	addeq	r1, r2, #60	; 0x3c
   17334:	ldr	r2, [r2, r3]
   17338:	cmp	r2, #0
   1733c:	bne	1731c <sf_gen_multicast+0x80c>
   17340:	b	17348 <sf_gen_multicast+0x838>
   17344:	add	r1, sp, #4
   17348:	str	r0, [r1]
   1734c:	mov	r2, #16
   17350:	ldr	r1, [r4, #44]	; 0x2c
   17354:	clz	r1, r1
   17358:	lsr	r1, r1, #5
   1735c:	str	r1, [r4, #44]	; 0x2c
   17360:	mov	r1, #0
   17364:	ldr	r0, [r0, #96]	; 0x60
   17368:	str	r0, [r4, #96]	; 0x60
   1736c:	mov	r0, #1
   17370:	bl	17970 <gen_load_a>
   17374:	mov	r5, r0
   17378:	ldr	r0, [pc, #1284]	; 17884 <sf_gen_multicast+0xd74>
   1737c:	mov	r7, r9
   17380:	ldr	r0, [pc, r0]
   17384:	ldr	r6, [r7, r0, lsl #3]!
   17388:	cmp	r6, #207	; 0xcf
   1738c:	bhi	173e0 <sf_gen_multicast+0x8d0>
   17390:	ldr	r2, [pc, #1264]	; 17888 <sf_gen_multicast+0xd78>
   17394:	add	r1, r0, #1
   17398:	cmp	r0, #15
   1739c:	add	r2, pc, r2
   173a0:	str	r1, [r2]
   173a4:	bge	17850 <sf_gen_multicast+0xd40>
   173a8:	mov	r0, #1024	; 0x400
   173ac:	lsl	r6, r0, r1
   173b0:	mov	r0, r6
   173b4:	bl	dec <malloc@plt>
   173b8:	cmp	r0, #0
   173bc:	str	r0, [r7, #12]
   173c0:	beq	17850 <sf_gen_multicast+0xd40>
   173c4:	mov	r1, #0
   173c8:	mov	r2, r6
   173cc:	add	r7, r7, #8
   173d0:	bl	e58 <memset@plt>
   173d4:	cmp	r6, #207	; 0xcf
   173d8:	str	r6, [r7]
   173dc:	bls	17850 <sf_gen_multicast+0xd40>
   173e0:	sub	r0, r6, #208	; 0xd0
   173e4:	str	r0, [r7]
   173e8:	ldr	r1, [r7, #4]
   173ec:	add	r6, r1, r0
   173f0:	mov	r1, #8
   173f4:	mov	r0, #69	; 0x45
   173f8:	str	r1, [r6, #20]
   173fc:	str	r5, [r6, #4]
   17400:	str	r0, [r6, #8]
   17404:	ldr	r0, [r6, #44]	; 0x2c
   17408:	clz	r0, r0
   1740c:	lsr	r0, r0, #5
   17410:	str	r0, [r6, #44]	; 0x2c
   17414:	mov	r0, #4
   17418:	str	r6, [r6, #96]	; 0x60
   1741c:	bl	178a0 <gen_mac_multicast>
   17420:	cmp	r6, #0
   17424:	beq	17458 <sf_gen_multicast+0x948>
   17428:	ldr	r1, [r0, #96]	; 0x60
   1742c:	mov	r2, r6
   17430:	ldr	r3, [r2, #44]	; 0x2c
   17434:	add	r7, r2, #84	; 0x54
   17438:	cmp	r3, #0
   1743c:	mov	r3, #84	; 0x54
   17440:	movweq	r3, #60	; 0x3c
   17444:	addeq	r7, r2, #60	; 0x3c
   17448:	ldr	r2, [r2, r3]
   1744c:	str	r1, [r7]
   17450:	cmp	r2, #0
   17454:	bne	17430 <sf_gen_multicast+0x920>
   17458:	ldr	r1, [r6, #44]	; 0x2c
   1745c:	cmp	r0, #0
   17460:	clz	r1, r1
   17464:	lsr	r1, r1, #5
   17468:	str	r1, [r6, #44]	; 0x2c
   1746c:	ldr	r2, [r0, #44]	; 0x2c
   17470:	clz	r1, r2
   17474:	lsr	r1, r1, #5
   17478:	str	r1, [r0, #44]	; 0x2c
   1747c:	str	r0, [sp, #4]
   17480:	beq	174cc <sf_gen_multicast+0x9bc>
   17484:	cmp	r2, #0
   17488:	mov	r2, #60	; 0x3c
   1748c:	add	r1, r0, #60	; 0x3c
   17490:	movweq	r2, #84	; 0x54
   17494:	addeq	r1, r0, #84	; 0x54
   17498:	ldr	r2, [r0, r2]
   1749c:	cmp	r2, #0
   174a0:	beq	174d0 <sf_gen_multicast+0x9c0>
   174a4:	ldr	r3, [r2, #44]	; 0x2c
   174a8:	add	r1, r2, #84	; 0x54
   174ac:	cmp	r3, #0
   174b0:	mov	r3, #84	; 0x54
   174b4:	movweq	r3, #60	; 0x3c
   174b8:	addeq	r1, r2, #60	; 0x3c
   174bc:	ldr	r2, [r2, r3]
   174c0:	cmp	r2, #0
   174c4:	bne	174a4 <sf_gen_multicast+0x994>
   174c8:	b	174d0 <sf_gen_multicast+0x9c0>
   174cc:	add	r1, sp, #4
   174d0:	str	r6, [r1]
   174d4:	ldr	r1, [r0, #44]	; 0x2c
   174d8:	clz	r2, r1
   174dc:	cmp	r1, #0
   174e0:	lsr	r2, r2, #5
   174e4:	movwne	r1, #1
   174e8:	cmp	r0, #0
   174ec:	str	r2, [r0, #44]	; 0x2c
   174f0:	ldr	r2, [r6, #96]	; 0x60
   174f4:	str	r1, [r0, #44]	; 0x2c
   174f8:	str	r2, [r0, #96]	; 0x60
   174fc:	beq	17538 <sf_gen_multicast+0xa28>
   17500:	ldr	r2, [r4, #96]	; 0x60
   17504:	mov	r3, r0
   17508:	cmp	r1, #0
   1750c:	mov	r1, #84	; 0x54
   17510:	add	r7, r3, #84	; 0x54
   17514:	movweq	r1, #60	; 0x3c
   17518:	addeq	r7, r3, #60	; 0x3c
   1751c:	ldr	r3, [r3, r1]
   17520:	str	r2, [r7]
   17524:	cmp	r3, #0
   17528:	beq	17534 <sf_gen_multicast+0xa24>
   1752c:	ldr	r1, [r3, #44]	; 0x2c
   17530:	b	17508 <sf_gen_multicast+0x9f8>
   17534:	ldr	r1, [r0, #44]	; 0x2c
   17538:	clz	r1, r1
   1753c:	cmp	r4, #0
   17540:	lsr	r1, r1, #5
   17544:	str	r1, [r0, #44]	; 0x2c
   17548:	str	r4, [sp, #4]
   1754c:	beq	1757c <sf_gen_multicast+0xa6c>
   17550:	mov	r2, r4
   17554:	ldr	r3, [r2, #44]	; 0x2c
   17558:	add	r1, r2, #84	; 0x54
   1755c:	cmp	r3, #0
   17560:	mov	r3, #84	; 0x54
   17564:	movweq	r3, #60	; 0x3c
   17568:	addeq	r1, r2, #60	; 0x3c
   1756c:	ldr	r2, [r2, r3]
   17570:	cmp	r2, #0
   17574:	bne	17554 <sf_gen_multicast+0xa44>
   17578:	b	17580 <sf_gen_multicast+0xa70>
   1757c:	add	r1, sp, #4
   17580:	str	r0, [r1]
   17584:	mov	r1, #0
   17588:	mov	r2, #16
   1758c:	ldr	r0, [r0, #96]	; 0x60
   17590:	str	r0, [r4, #96]	; 0x60
   17594:	mov	r0, #1
   17598:	bl	17970 <gen_load_a>
   1759c:	mov	r5, r0
   175a0:	ldr	r0, [pc, #740]	; 1788c <sf_gen_multicast+0xd7c>
   175a4:	ldr	r0, [pc, r0]
   175a8:	ldr	r6, [r9, r0, lsl #3]!
   175ac:	cmp	r6, #207	; 0xcf
   175b0:	bhi	17604 <sf_gen_multicast+0xaf4>
   175b4:	ldr	r2, [pc, #724]	; 17890 <sf_gen_multicast+0xd80>
   175b8:	add	r1, r0, #1
   175bc:	cmp	r0, #15
   175c0:	add	r2, pc, r2
   175c4:	str	r1, [r2]
   175c8:	bge	17850 <sf_gen_multicast+0xd40>
   175cc:	mov	r0, #1024	; 0x400
   175d0:	lsl	r6, r0, r1
   175d4:	mov	r0, r6
   175d8:	bl	dec <malloc@plt>
   175dc:	cmp	r0, #0
   175e0:	str	r0, [r9, #12]
   175e4:	beq	17850 <sf_gen_multicast+0xd40>
   175e8:	mov	r1, #0
   175ec:	mov	r2, r6
   175f0:	add	r9, r9, #8
   175f4:	bl	e58 <memset@plt>
   175f8:	cmp	r6, #207	; 0xcf
   175fc:	str	r6, [r9]
   17600:	bls	17850 <sf_gen_multicast+0xd40>
   17604:	sub	r0, r6, #208	; 0xd0
   17608:	mov	r2, #4
   1760c:	str	r0, [r9]
   17610:	ldr	r1, [r9, #4]
   17614:	adds	r0, r1, r0
   17618:	mov	r1, #69	; 0x45
   1761c:	str	r2, [r0, #20]
   17620:	str	r5, [r0, #4]
   17624:	str	r1, [r0, #8]
   17628:	ldr	r1, [r0, #44]	; 0x2c
   1762c:	clz	r1, r1
   17630:	lsr	r1, r1, #5
   17634:	str	r1, [r0, #44]	; 0x2c
   17638:	str	r0, [r0, #96]	; 0x60
   1763c:	beq	17674 <sf_gen_multicast+0xb64>
   17640:	ldr	r1, [r4, #96]	; 0x60
   17644:	mov	r2, r0
   17648:	ldr	r3, [r2, #44]	; 0x2c
   1764c:	add	r7, r2, #84	; 0x54
   17650:	cmp	r3, #0
   17654:	mov	r3, #84	; 0x54
   17658:	movweq	r3, #60	; 0x3c
   1765c:	addeq	r7, r2, #60	; 0x3c
   17660:	ldr	r2, [r2, r3]
   17664:	str	r1, [r7]
   17668:	cmp	r2, #0
   1766c:	bne	17648 <sf_gen_multicast+0xb38>
   17670:	ldr	r1, [r0, #44]	; 0x2c
   17674:	clz	r1, r1
   17678:	cmp	r4, #0
   1767c:	lsr	r1, r1, #5
   17680:	str	r1, [r0, #44]	; 0x2c
   17684:	ldr	r2, [r4, #44]	; 0x2c
   17688:	clz	r1, r2
   1768c:	lsr	r1, r1, #5
   17690:	str	r1, [r4, #44]	; 0x2c
   17694:	str	r4, [sp, #4]
   17698:	beq	176e4 <sf_gen_multicast+0xbd4>
   1769c:	cmp	r2, #0
   176a0:	mov	r2, #60	; 0x3c
   176a4:	add	r1, r4, #60	; 0x3c
   176a8:	movweq	r2, #84	; 0x54
   176ac:	addeq	r1, r4, #84	; 0x54
   176b0:	ldr	r2, [r4, r2]
   176b4:	cmp	r2, #0
   176b8:	beq	176e8 <sf_gen_multicast+0xbd8>
   176bc:	ldr	r3, [r2, #44]	; 0x2c
   176c0:	add	r1, r2, #84	; 0x54
   176c4:	cmp	r3, #0
   176c8:	mov	r3, #84	; 0x54
   176cc:	movweq	r3, #60	; 0x3c
   176d0:	addeq	r1, r2, #60	; 0x3c
   176d4:	ldr	r2, [r2, r3]
   176d8:	cmp	r2, #0
   176dc:	bne	176bc <sf_gen_multicast+0xbac>
   176e0:	b	176e8 <sf_gen_multicast+0xbd8>
   176e4:	add	r1, sp, #4
   176e8:	str	r0, [r1]
   176ec:	ldr	r1, [r4, #44]	; 0x2c
   176f0:	clz	r1, r1
   176f4:	lsr	r1, r1, #5
   176f8:	str	r1, [r4, #44]	; 0x2c
   176fc:	ldr	r0, [r0, #96]	; 0x60
   17700:	b	17824 <sf_gen_multicast+0xd14>
   17704:	cmp	r0, #192	; 0xc0
   17708:	beq	16d0c <sf_gen_multicast+0x1fc>
   1770c:	b	17844 <sf_gen_multicast+0xd34>
   17710:	ldr	r0, [pc, #380]	; 17894 <sf_gen_multicast+0xd84>
   17714:	add	r0, pc, r0
   17718:	ldrb	r0, [r0]
   1771c:	cmp	r0, #1
   17720:	bne	17844 <sf_gen_multicast+0xd34>
   17724:	mov	r0, #1
   17728:	mov	r1, #4
   1772c:	mov	r2, #8
   17730:	mov	r3, #65280	; 0xff00
   17734:	bl	a8f8 <gen_cmp>
   17738:	mov	r5, r0
   1773c:	ldr	r0, [r0, #44]	; 0x2c
   17740:	clz	r0, r0
   17744:	lsr	r0, r0, #5
   17748:	str	r0, [r5, #44]	; 0x2c
   1774c:	ldr	r0, [pc, #324]	; 17898 <sf_gen_multicast+0xd88>
   17750:	ldr	r0, [pc, r0]
   17754:	bl	178a0 <gen_mac_multicast>
   17758:	mov	r4, r0
   1775c:	cmp	r5, #0
   17760:	beq	17794 <sf_gen_multicast+0xc84>
   17764:	ldr	r0, [r4, #96]	; 0x60
   17768:	mov	r1, r5
   1776c:	ldr	r2, [r1, #44]	; 0x2c
   17770:	add	r3, r1, #84	; 0x54
   17774:	cmp	r2, #0
   17778:	mov	r2, #84	; 0x54
   1777c:	movweq	r2, #60	; 0x3c
   17780:	addeq	r3, r1, #60	; 0x3c
   17784:	ldr	r1, [r1, r2]
   17788:	str	r0, [r3]
   1778c:	cmp	r1, #0
   17790:	bne	1776c <sf_gen_multicast+0xc5c>
   17794:	ldr	r0, [r5, #44]	; 0x2c
   17798:	cmp	r4, #0
   1779c:	clz	r0, r0
   177a0:	lsr	r0, r0, #5
   177a4:	str	r0, [r5, #44]	; 0x2c
   177a8:	ldr	r1, [r4, #44]	; 0x2c
   177ac:	clz	r0, r1
   177b0:	lsr	r0, r0, #5
   177b4:	str	r0, [r4, #44]	; 0x2c
   177b8:	str	r4, [sp, #4]
   177bc:	beq	17808 <sf_gen_multicast+0xcf8>
   177c0:	cmp	r1, #0
   177c4:	mov	r1, #60	; 0x3c
   177c8:	add	r0, r4, #60	; 0x3c
   177cc:	movweq	r1, #84	; 0x54
   177d0:	addeq	r0, r4, #84	; 0x54
   177d4:	ldr	r1, [r4, r1]
   177d8:	cmp	r1, #0
   177dc:	beq	1780c <sf_gen_multicast+0xcfc>
   177e0:	ldr	r2, [r1, #44]	; 0x2c
   177e4:	add	r0, r1, #84	; 0x54
   177e8:	cmp	r2, #0
   177ec:	mov	r2, #84	; 0x54
   177f0:	movweq	r2, #60	; 0x3c
   177f4:	addeq	r0, r1, #60	; 0x3c
   177f8:	ldr	r1, [r1, r2]
   177fc:	cmp	r1, #0
   17800:	bne	177e0 <sf_gen_multicast+0xcd0>
   17804:	b	1780c <sf_gen_multicast+0xcfc>
   17808:	add	r0, sp, #4
   1780c:	str	r5, [r0]
   17810:	ldr	r0, [r4, #44]	; 0x2c
   17814:	clz	r0, r0
   17818:	lsr	r0, r0, #5
   1781c:	str	r0, [r4, #44]	; 0x2c
   17820:	ldr	r0, [r5, #96]	; 0x60
   17824:	str	r0, [r4, #96]	; 0x60
   17828:	mov	r0, r4
   1782c:	sub	sp, fp, #24
   17830:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17834:	mov	r0, #1
   17838:	sub	sp, fp, #24
   1783c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   17840:	b	178a0 <gen_mac_multicast>
   17844:	ldr	r0, [pc, #80]	; 1789c <sf_gen_multicast+0xd8c>
   17848:	add	r0, pc, r0
   1784c:	bl	2068 <sf_bpf_error>
   17850:	ldr	r0, [pc, #20]	; 1786c <sf_gen_multicast+0xd5c>
   17854:	add	r0, pc, r0
   17858:	bl	2068 <sf_bpf_error>
   1785c:	.word	0x0003082c
   17860:	.word	0x000307d4
   17864:	.word	0x0003074c
   17868:	.word	0x000307ac
   1786c:	.word	0x00012e28
   17870:	.word	0x000304a4
   17874:	.word	0x0003050c
   17878:	.word	0x000304f0
   1787c:	.word	0x000302e8
   17880:	.word	0x000302cc
   17884:	.word	0x0003017c
   17888:	.word	0x00030160
   1788c:	.word	0x0002ff58
   17890:	.word	0x0002ff3c
   17894:	.word	0x0002fd20
   17898:	.word	0x0002fcf8
   1789c:	.word	0x000128c9

000178a0 <gen_mac_multicast>:
   178a0:	push	{r4, r5, r6, r7, fp, lr}
   178a4:	add	fp, sp, #16
   178a8:	mov	r1, r0
   178ac:	mov	r0, #1
   178b0:	mov	r2, #16
   178b4:	mov	r6, #1
   178b8:	bl	17970 <gen_load_a>
   178bc:	mov	r4, r0
   178c0:	ldr	r0, [pc, #152]	; 17960 <gen_mac_multicast+0xc0>
   178c4:	ldr	r0, [pc, r0]
   178c8:	ldr	r7, [pc, #148]	; 17964 <gen_mac_multicast+0xc4>
   178cc:	add	r7, pc, r7
   178d0:	ldr	r5, [r7, r0, lsl #3]!
   178d4:	cmp	r5, #207	; 0xcf
   178d8:	bhi	1792c <gen_mac_multicast+0x8c>
   178dc:	ldr	r2, [pc, #132]	; 17968 <gen_mac_multicast+0xc8>
   178e0:	add	r1, r0, #1
   178e4:	cmp	r0, #15
   178e8:	add	r2, pc, r2
   178ec:	str	r1, [r2]
   178f0:	bge	17954 <gen_mac_multicast+0xb4>
   178f4:	mov	r0, #1024	; 0x400
   178f8:	lsl	r5, r0, r1
   178fc:	mov	r0, r5
   17900:	bl	dec <malloc@plt>
   17904:	cmp	r0, #0
   17908:	str	r0, [r7, #12]
   1790c:	beq	17954 <gen_mac_multicast+0xb4>
   17910:	mov	r1, #0
   17914:	mov	r2, r5
   17918:	add	r7, r7, #8
   1791c:	bl	e58 <memset@plt>
   17920:	cmp	r5, #207	; 0xcf
   17924:	str	r5, [r7]
   17928:	bls	17954 <gen_mac_multicast+0xb4>
   1792c:	sub	r0, r5, #208	; 0xd0
   17930:	str	r0, [r7]
   17934:	ldr	r1, [r7, #4]
   17938:	add	r0, r1, r0
   1793c:	mov	r1, #69	; 0x45
   17940:	str	r6, [r0, #20]
   17944:	str	r4, [r0, #4]
   17948:	str	r1, [r0, #8]
   1794c:	str	r0, [r0, #96]	; 0x60
   17950:	pop	{r4, r5, r6, r7, fp, pc}
   17954:	ldr	r0, [pc, #16]	; 1796c <gen_mac_multicast+0xcc>
   17958:	add	r0, pc, r0
   1795c:	bl	2068 <sf_bpf_error>
   17960:	.word	0x0002fc38
   17964:	.word	0x0002fbb0
   17968:	.word	0x0002fc14
   1796c:	.word	0x00012d24

00017970 <gen_load_a>:
   17970:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17974:	add	fp, sp, #24
   17978:	cmp	r0, #6
   1797c:	bhi	17c88 <gen_load_a+0x318>
   17980:	mov	r8, r1
   17984:	add	r1, pc, #8
   17988:	mov	r5, r2
   1798c:	ldr	r0, [r1, r0, lsl #2]
   17990:	add	pc, r1, r0
   17994:	.word	0x000000c8
   17998:	.word	0x0000001c
   1799c:	.word	0x00000164
   179a0:	.word	0x00000198
   179a4:	.word	0x00000154
   179a8:	.word	0x000001d8
   179ac:	.word	0x00000224
   179b0:	bl	14084 <gen_llprefixlen>
   179b4:	cmp	r0, #0
   179b8:	beq	17a5c <gen_load_a+0xec>
   179bc:	mov	r6, r0
   179c0:	ldr	r0, [pc, #732]	; 17ca4 <gen_load_a+0x334>
   179c4:	ldr	r0, [pc, r0]
   179c8:	ldr	r4, [pc, #728]	; 17ca8 <gen_load_a+0x338>
   179cc:	add	r4, pc, r4
   179d0:	ldr	r7, [r4, r0, lsl #3]!
   179d4:	cmp	r7, #19
   179d8:	bhi	17a2c <gen_load_a+0xbc>
   179dc:	ldr	r2, [pc, #712]	; 17cac <gen_load_a+0x33c>
   179e0:	add	r1, r0, #1
   179e4:	cmp	r0, #15
   179e8:	add	r2, pc, r2
   179ec:	str	r1, [r2]
   179f0:	bge	17c8c <gen_load_a+0x31c>
   179f4:	mov	r0, #1024	; 0x400
   179f8:	lsl	r7, r0, r1
   179fc:	mov	r0, r7
   17a00:	bl	dec <malloc@plt>
   17a04:	cmp	r0, #0
   17a08:	str	r0, [r4, #12]
   17a0c:	beq	17c8c <gen_load_a+0x31c>
   17a10:	mov	r1, #0
   17a14:	mov	r2, r7
   17a18:	add	r4, r4, #8
   17a1c:	bl	e58 <memset@plt>
   17a20:	cmp	r7, #19
   17a24:	str	r7, [r4]
   17a28:	bls	17c8c <gen_load_a+0x31c>
   17a2c:	sub	r2, r7, #20
   17a30:	orr	r1, r5, #64	; 0x40
   17a34:	str	r2, [r4]
   17a38:	ldr	r0, [r4, #4]
   17a3c:	str	r1, [r0, r2]!
   17a40:	mov	r2, r6
   17a44:	str	r8, [r0, #12]
   17a48:	mov	r1, r2
   17a4c:	ldr	r2, [r2, #16]
   17a50:	cmp	r2, #0
   17a54:	bne	17a48 <gen_load_a+0xd8>
   17a58:	b	17bac <gen_load_a+0x23c>
   17a5c:	ldr	r0, [pc, #564]	; 17c98 <gen_load_a+0x328>
   17a60:	ldr	r0, [pc, r0]
   17a64:	ldr	r4, [pc, #560]	; 17c9c <gen_load_a+0x32c>
   17a68:	add	r4, pc, r4
   17a6c:	ldr	r6, [r4, r0, lsl #3]!
   17a70:	cmp	r6, #19
   17a74:	bhi	17ac8 <gen_load_a+0x158>
   17a78:	ldr	r2, [pc, #544]	; 17ca0 <gen_load_a+0x330>
   17a7c:	add	r1, r0, #1
   17a80:	cmp	r0, #15
   17a84:	add	r2, pc, r2
   17a88:	str	r1, [r2]
   17a8c:	bge	17c8c <gen_load_a+0x31c>
   17a90:	mov	r0, #1024	; 0x400
   17a94:	lsl	r6, r0, r1
   17a98:	mov	r0, r6
   17a9c:	bl	dec <malloc@plt>
   17aa0:	cmp	r0, #0
   17aa4:	str	r0, [r4, #12]
   17aa8:	beq	17c8c <gen_load_a+0x31c>
   17aac:	mov	r1, #0
   17ab0:	mov	r2, r6
   17ab4:	add	r4, r4, #8
   17ab8:	bl	e58 <memset@plt>
   17abc:	cmp	r6, #19
   17ac0:	str	r6, [r4]
   17ac4:	bls	17c8c <gen_load_a+0x31c>
   17ac8:	sub	r1, r6, #20
   17acc:	orr	r0, r5, #32
   17ad0:	str	r1, [r4]
   17ad4:	ldr	r6, [r4, #4]
   17ad8:	str	r0, [r6, r1]!
   17adc:	mov	r0, r6
   17ae0:	str	r8, [r6, #12]
   17ae4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17ae8:	ldr	r0, [pc, #472]	; 17cc8 <gen_load_a+0x358>
   17aec:	ldr	r0, [pc, r0]
   17af0:	add	r0, r0, r8
   17af4:	b	17bc8 <gen_load_a+0x258>
   17af8:	bl	1433c <gen_off_macpl>
   17afc:	cmp	r0, #0
   17b00:	beq	17bd4 <gen_load_a+0x264>
   17b04:	mov	r6, r0
   17b08:	orr	r0, r5, #64	; 0x40
   17b0c:	bl	13fdc <new_stmt>
   17b10:	mov	r2, r6
   17b14:	str	r8, [r0, #12]
   17b18:	mov	r1, r2
   17b1c:	ldr	r2, [r2, #16]
   17b20:	cmp	r2, #0
   17b24:	bne	17b18 <gen_load_a+0x1a8>
   17b28:	b	17bac <gen_load_a+0x23c>
   17b2c:	ldr	r0, [pc, #400]	; 17cc4 <gen_load_a+0x354>
   17b30:	ldr	r0, [pc, r0]
   17b34:	add	r4, r0, r8
   17b38:	bl	1433c <gen_off_macpl>
   17b3c:	cmp	r0, #0
   17b40:	beq	17c64 <gen_load_a+0x2f4>
   17b44:	mov	r6, r0
   17b48:	orr	r0, r5, #64	; 0x40
   17b4c:	bl	13fdc <new_stmt>
   17b50:	mov	r2, r6
   17b54:	str	r4, [r0, #12]
   17b58:	mov	r1, r2
   17b5c:	ldr	r2, [r2, #16]
   17b60:	cmp	r2, #0
   17b64:	bne	17b58 <gen_load_a+0x1e8>
   17b68:	b	17bac <gen_load_a+0x23c>
   17b6c:	bl	1440c <gen_loadx_iphdrlen>
   17b70:	mov	r6, r0
   17b74:	orr	r0, r5, #64	; 0x40
   17b78:	bl	13fdc <new_stmt>
   17b7c:	ldr	r1, [pc, #328]	; 17ccc <gen_load_a+0x35c>
   17b80:	ldr	r1, [pc, r1]
   17b84:	ldr	r2, [pc, #324]	; 17cd0 <gen_load_a+0x360>
   17b88:	ldr	r2, [pc, r2]
   17b8c:	add	r1, r1, r8
   17b90:	add	r1, r1, r2
   17b94:	mov	r2, r6
   17b98:	str	r1, [r0, #12]
   17b9c:	mov	r1, r2
   17ba0:	ldr	r2, [r2, #16]
   17ba4:	cmp	r2, #0
   17ba8:	bne	17b9c <gen_load_a+0x22c>
   17bac:	str	r0, [r1, #16]
   17bb0:	mov	r0, r6
   17bb4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17bb8:	ldr	r0, [pc, #276]	; 17cd4 <gen_load_a+0x364>
   17bbc:	ldr	r0, [pc, r0]
   17bc0:	add	r0, r8, r0
   17bc4:	add	r0, r0, #40	; 0x28
   17bc8:	mov	r1, r5
   17bcc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   17bd0:	b	202e0 <gen_load_macplrel>
   17bd4:	ldr	r0, [pc, #216]	; 17cb4 <gen_load_a+0x344>
   17bd8:	ldr	r0, [pc, r0]
   17bdc:	ldr	r4, [pc, #212]	; 17cb8 <gen_load_a+0x348>
   17be0:	add	r4, pc, r4
   17be4:	ldr	r6, [r4, r0, lsl #3]!
   17be8:	cmp	r6, #19
   17bec:	bhi	17c40 <gen_load_a+0x2d0>
   17bf0:	ldr	r2, [pc, #196]	; 17cbc <gen_load_a+0x34c>
   17bf4:	add	r1, r0, #1
   17bf8:	cmp	r0, #15
   17bfc:	add	r2, pc, r2
   17c00:	str	r1, [r2]
   17c04:	bge	17c8c <gen_load_a+0x31c>
   17c08:	mov	r0, #1024	; 0x400
   17c0c:	lsl	r6, r0, r1
   17c10:	mov	r0, r6
   17c14:	bl	dec <malloc@plt>
   17c18:	cmp	r0, #0
   17c1c:	str	r0, [r4, #12]
   17c20:	beq	17c8c <gen_load_a+0x31c>
   17c24:	mov	r1, #0
   17c28:	mov	r2, r6
   17c2c:	add	r4, r4, #8
   17c30:	bl	e58 <memset@plt>
   17c34:	cmp	r6, #19
   17c38:	str	r6, [r4]
   17c3c:	bls	17c8c <gen_load_a+0x31c>
   17c40:	sub	r1, r6, #20
   17c44:	orr	r0, r5, #32
   17c48:	str	r1, [r4]
   17c4c:	ldr	r6, [r4, #4]
   17c50:	str	r0, [r6, r1]!
   17c54:	ldr	r0, [pc, #100]	; 17cc0 <gen_load_a+0x350>
   17c58:	ldr	r0, [pc, r0]
   17c5c:	add	r0, r0, r8
   17c60:	b	17c7c <gen_load_a+0x30c>
   17c64:	orr	r0, r5, #32
   17c68:	bl	13fdc <new_stmt>
   17c6c:	mov	r6, r0
   17c70:	ldr	r0, [pc, #96]	; 17cd8 <gen_load_a+0x368>
   17c74:	ldr	r0, [pc, r0]
   17c78:	add	r0, r0, r4
   17c7c:	str	r0, [r6, #12]
   17c80:	mov	r0, r6
   17c84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17c88:	bl	edc <abort@plt>
   17c8c:	ldr	r0, [pc, #28]	; 17cb0 <gen_load_a+0x340>
   17c90:	add	r0, pc, r0
   17c94:	bl	2068 <sf_bpf_error>
   17c98:	.word	0x0002fa9c
   17c9c:	.word	0x0002fa14
   17ca0:	.word	0x0002fa78
   17ca4:	.word	0x0002fb38
   17ca8:	.word	0x0002fab0
   17cac:	.word	0x0002fb14
   17cb0:	.word	0x000129ec
   17cb4:	.word	0x0002f924
   17cb8:	.word	0x0002f89c
   17cbc:	.word	0x0002f900
   17cc0:	.word	0x0002f7e4
   17cc4:	.word	0x0002f910
   17cc8:	.word	0x0002f960
   17ccc:	.word	0x0002f8bc
   17cd0:	.word	0x0002f8b8
   17cd4:	.word	0x0002f884
   17cd8:	.word	0x0002f7c8

00017cdc <gen_cmp_ge>:
   17cdc:	push	{r4, r5, r6, r7, fp, lr}
   17ce0:	add	fp, sp, #16
   17ce4:	mov	r4, r3
   17ce8:	bl	17970 <gen_load_a>
   17cec:	mov	r5, r0
   17cf0:	ldr	r0, [pc, #152]	; 17d90 <gen_cmp_ge+0xb4>
   17cf4:	ldr	r0, [pc, r0]
   17cf8:	ldr	r7, [pc, #148]	; 17d94 <gen_cmp_ge+0xb8>
   17cfc:	add	r7, pc, r7
   17d00:	ldr	r6, [r7, r0, lsl #3]!
   17d04:	cmp	r6, #207	; 0xcf
   17d08:	bhi	17d5c <gen_cmp_ge+0x80>
   17d0c:	ldr	r2, [pc, #132]	; 17d98 <gen_cmp_ge+0xbc>
   17d10:	add	r1, r0, #1
   17d14:	cmp	r0, #15
   17d18:	add	r2, pc, r2
   17d1c:	str	r1, [r2]
   17d20:	bge	17d84 <gen_cmp_ge+0xa8>
   17d24:	mov	r0, #1024	; 0x400
   17d28:	lsl	r6, r0, r1
   17d2c:	mov	r0, r6
   17d30:	bl	dec <malloc@plt>
   17d34:	cmp	r0, #0
   17d38:	str	r0, [r7, #12]
   17d3c:	beq	17d84 <gen_cmp_ge+0xa8>
   17d40:	mov	r1, #0
   17d44:	mov	r2, r6
   17d48:	add	r7, r7, #8
   17d4c:	bl	e58 <memset@plt>
   17d50:	cmp	r6, #207	; 0xcf
   17d54:	str	r6, [r7]
   17d58:	bls	17d84 <gen_cmp_ge+0xa8>
   17d5c:	sub	r0, r6, #208	; 0xd0
   17d60:	str	r0, [r7]
   17d64:	ldr	r1, [r7, #4]
   17d68:	add	r0, r1, r0
   17d6c:	mov	r1, #53	; 0x35
   17d70:	str	r4, [r0, #20]
   17d74:	str	r5, [r0, #4]
   17d78:	str	r1, [r0, #8]
   17d7c:	str	r0, [r0, #96]	; 0x60
   17d80:	pop	{r4, r5, r6, r7, fp, pc}
   17d84:	ldr	r0, [pc, #16]	; 17d9c <gen_cmp_ge+0xc0>
   17d88:	add	r0, pc, r0
   17d8c:	bl	2068 <sf_bpf_error>
   17d90:	.word	0x0002f808
   17d94:	.word	0x0002f780
   17d98:	.word	0x0002f7e4
   17d9c:	.word	0x000128f4

00017da0 <sf_gen_inbound>:
   17da0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17da4:	add	fp, sp, #24
   17da8:	ldr	r1, [pc, #1684]	; 18444 <sf_gen_inbound+0x6a4>
   17dac:	mov	r6, r0
   17db0:	ldr	r1, [pc, r1]
   17db4:	sub	r0, r1, #8
   17db8:	cmp	r0, #218	; 0xda
   17dbc:	bhi	18438 <sf_gen_inbound+0x698>
   17dc0:	add	r2, pc, #4
   17dc4:	ldr	r0, [r2, r0, lsl #2]
   17dc8:	add	pc, r2, r0
   17dcc:	.word	0x000005b8
   17dd0:	.word	0x0000066c
   17dd4:	.word	0x0000066c
   17dd8:	.word	0x0000066c
   17ddc:	.word	0x0000066c
   17de0:	.word	0x0000066c
   17de4:	.word	0x0000066c
   17de8:	.word	0x0000066c
   17dec:	.word	0x0000066c
   17df0:	.word	0x0000066c
   17df4:	.word	0x0000066c
   17df8:	.word	0x0000066c
   17dfc:	.word	0x0000066c
   17e00:	.word	0x0000066c
   17e04:	.word	0x0000066c
   17e08:	.word	0x0000066c
   17e0c:	.word	0x0000066c
   17e10:	.word	0x0000066c
   17e14:	.word	0x0000066c
   17e18:	.word	0x0000066c
   17e1c:	.word	0x0000066c
   17e20:	.word	0x0000066c
   17e24:	.word	0x0000066c
   17e28:	.word	0x0000066c
   17e2c:	.word	0x0000066c
   17e30:	.word	0x0000066c
   17e34:	.word	0x0000066c
   17e38:	.word	0x0000066c
   17e3c:	.word	0x0000066c
   17e40:	.word	0x0000066c
   17e44:	.word	0x0000066c
   17e48:	.word	0x0000066c
   17e4c:	.word	0x0000066c
   17e50:	.word	0x0000066c
   17e54:	.word	0x0000066c
   17e58:	.word	0x0000066c
   17e5c:	.word	0x0000066c
   17e60:	.word	0x0000066c
   17e64:	.word	0x0000066c
   17e68:	.word	0x0000066c
   17e6c:	.word	0x0000066c
   17e70:	.word	0x0000066c
   17e74:	.word	0x0000066c
   17e78:	.word	0x0000066c
   17e7c:	.word	0x0000066c
   17e80:	.word	0x0000066c
   17e84:	.word	0x0000066c
   17e88:	.word	0x0000066c
   17e8c:	.word	0x0000066c
   17e90:	.word	0x0000066c
   17e94:	.word	0x0000066c
   17e98:	.word	0x0000066c
   17e9c:	.word	0x0000066c
   17ea0:	.word	0x0000066c
   17ea4:	.word	0x0000066c
   17ea8:	.word	0x0000066c
   17eac:	.word	0x0000066c
   17eb0:	.word	0x0000066c
   17eb4:	.word	0x0000066c
   17eb8:	.word	0x0000066c
   17ebc:	.word	0x0000066c
   17ec0:	.word	0x0000066c
   17ec4:	.word	0x0000066c
   17ec8:	.word	0x0000066c
   17ecc:	.word	0x0000066c
   17ed0:	.word	0x0000066c
   17ed4:	.word	0x0000066c
   17ed8:	.word	0x0000066c
   17edc:	.word	0x0000066c
   17ee0:	.word	0x0000066c
   17ee4:	.word	0x0000066c
   17ee8:	.word	0x0000066c
   17eec:	.word	0x0000066c
   17ef0:	.word	0x0000066c
   17ef4:	.word	0x0000066c
   17ef8:	.word	0x0000066c
   17efc:	.word	0x0000066c
   17f00:	.word	0x0000066c
   17f04:	.word	0x0000066c
   17f08:	.word	0x0000066c
   17f0c:	.word	0x0000066c
   17f10:	.word	0x0000066c
   17f14:	.word	0x0000066c
   17f18:	.word	0x0000066c
   17f1c:	.word	0x0000066c
   17f20:	.word	0x0000066c
   17f24:	.word	0x0000066c
   17f28:	.word	0x0000066c
   17f2c:	.word	0x0000066c
   17f30:	.word	0x0000066c
   17f34:	.word	0x0000066c
   17f38:	.word	0x0000066c
   17f3c:	.word	0x0000066c
   17f40:	.word	0x0000066c
   17f44:	.word	0x0000066c
   17f48:	.word	0x0000066c
   17f4c:	.word	0x0000066c
   17f50:	.word	0x0000066c
   17f54:	.word	0x0000066c
   17f58:	.word	0x0000066c
   17f5c:	.word	0x0000066c
   17f60:	.word	0x0000066c
   17f64:	.word	0x0000066c
   17f68:	.word	0x0000066c
   17f6c:	.word	0x0000066c
   17f70:	.word	0x000005f4
   17f74:	.word	0x0000066c
   17f78:	.word	0x0000066c
   17f7c:	.word	0x0000066c
   17f80:	.word	0x0000066c
   17f84:	.word	0x0000066c
   17f88:	.word	0x0000066c
   17f8c:	.word	0x0000066c
   17f90:	.word	0x0000066c
   17f94:	.word	0x0000066c
   17f98:	.word	0x0000066c
   17f9c:	.word	0x0000066c
   17fa0:	.word	0x0000066c
   17fa4:	.word	0x0000066c
   17fa8:	.word	0x0000066c
   17fac:	.word	0x0000066c
   17fb0:	.word	0x0000066c
   17fb4:	.word	0x0000036c
   17fb8:	.word	0x0000036c
   17fbc:	.word	0x0000036c
   17fc0:	.word	0x0000036c
   17fc4:	.word	0x0000036c
   17fc8:	.word	0x0000036c
   17fcc:	.word	0x0000036c
   17fd0:	.word	0x0000036c
   17fd4:	.word	0x0000066c
   17fd8:	.word	0x0000066c
   17fdc:	.word	0x0000066c
   17fe0:	.word	0x0000066c
   17fe4:	.word	0x0000066c
   17fe8:	.word	0x0000066c
   17fec:	.word	0x0000066c
   17ff0:	.word	0x0000066c
   17ff4:	.word	0x0000066c
   17ff8:	.word	0x0000066c
   17ffc:	.word	0x0000066c
   18000:	.word	0x0000066c
   18004:	.word	0x0000066c
   18008:	.word	0x0000066c
   1800c:	.word	0x0000066c
   18010:	.word	0x0000066c
   18014:	.word	0x0000066c
   18018:	.word	0x0000066c
   1801c:	.word	0x0000066c
   18020:	.word	0x0000066c
   18024:	.word	0x0000066c
   18028:	.word	0x0000066c
   1802c:	.word	0x0000066c
   18030:	.word	0x0000066c
   18034:	.word	0x0000066c
   18038:	.word	0x0000066c
   1803c:	.word	0x0000036c
   18040:	.word	0x0000066c
   18044:	.word	0x00000614
   18048:	.word	0x0000036c
   1804c:	.word	0x0000036c
   18050:	.word	0x0000066c
   18054:	.word	0x0000066c
   18058:	.word	0x0000066c
   1805c:	.word	0x0000066c
   18060:	.word	0x0000066c
   18064:	.word	0x0000066c
   18068:	.word	0x0000066c
   1806c:	.word	0x0000066c
   18070:	.word	0x0000066c
   18074:	.word	0x0000036c
   18078:	.word	0x0000036c
   1807c:	.word	0x0000036c
   18080:	.word	0x0000036c
   18084:	.word	0x0000066c
   18088:	.word	0x0000036c
   1808c:	.word	0x0000066c
   18090:	.word	0x0000066c
   18094:	.word	0x0000066c
   18098:	.word	0x0000066c
   1809c:	.word	0x0000066c
   180a0:	.word	0x0000066c
   180a4:	.word	0x0000066c
   180a8:	.word	0x0000066c
   180ac:	.word	0x0000066c
   180b0:	.word	0x0000066c
   180b4:	.word	0x0000036c
   180b8:	.word	0x0000066c
   180bc:	.word	0x0000066c
   180c0:	.word	0x0000066c
   180c4:	.word	0x0000066c
   180c8:	.word	0x0000066c
   180cc:	.word	0x0000036c
   180d0:	.word	0x0000066c
   180d4:	.word	0x0000066c
   180d8:	.word	0x0000066c
   180dc:	.word	0x0000066c
   180e0:	.word	0x0000066c
   180e4:	.word	0x0000066c
   180e8:	.word	0x0000066c
   180ec:	.word	0x0000066c
   180f0:	.word	0x0000066c
   180f4:	.word	0x0000066c
   180f8:	.word	0x0000066c
   180fc:	.word	0x0000066c
   18100:	.word	0x0000066c
   18104:	.word	0x0000066c
   18108:	.word	0x0000066c
   1810c:	.word	0x0000066c
   18110:	.word	0x0000066c
   18114:	.word	0x0000066c
   18118:	.word	0x0000066c
   1811c:	.word	0x0000066c
   18120:	.word	0x0000066c
   18124:	.word	0x0000066c
   18128:	.word	0x0000066c
   1812c:	.word	0x0000066c
   18130:	.word	0x0000066c
   18134:	.word	0x00000634
   18138:	mov	r0, #1
   1813c:	mov	r1, #3
   18140:	mov	r2, #16
   18144:	bl	17970 <gen_load_a>
   18148:	mov	r8, r0
   1814c:	ldr	r0, [pc, #756]	; 18448 <sf_gen_inbound+0x6a8>
   18150:	cmp	r6, #0
   18154:	ldr	r0, [pc, r0]
   18158:	ldr	r4, [pc, #748]	; 1844c <sf_gen_inbound+0x6ac>
   1815c:	add	r4, pc, r4
   18160:	mov	r7, r4
   18164:	ldr	r5, [r7, r0, lsl #3]!
   18168:	beq	181c8 <sf_gen_inbound+0x428>
   1816c:	cmp	r5, #19
   18170:	bhi	18224 <sf_gen_inbound+0x484>
   18174:	ldr	r1, [pc, #724]	; 18450 <sf_gen_inbound+0x6b0>
   18178:	add	r6, r0, #1
   1817c:	cmp	r0, #15
   18180:	add	r1, pc, r1
   18184:	str	r6, [r1]
   18188:	bge	1842c <sf_gen_inbound+0x68c>
   1818c:	mov	r0, #1024	; 0x400
   18190:	lsl	r5, r0, r6
   18194:	mov	r0, r5
   18198:	bl	dec <malloc@plt>
   1819c:	cmp	r0, #0
   181a0:	str	r0, [r7, #12]
   181a4:	beq	1842c <sf_gen_inbound+0x68c>
   181a8:	mov	r1, #0
   181ac:	mov	r2, r5
   181b0:	add	r7, r7, #8
   181b4:	bl	e58 <memset@plt>
   181b8:	cmp	r5, #19
   181bc:	str	r5, [r7]
   181c0:	bhi	18228 <sf_gen_inbound+0x488>
   181c4:	b	1842c <sf_gen_inbound+0x68c>
   181c8:	cmp	r5, #19
   181cc:	bhi	182c4 <sf_gen_inbound+0x524>
   181d0:	ldr	r1, [pc, #640]	; 18458 <sf_gen_inbound+0x6b8>
   181d4:	add	r6, r0, #1
   181d8:	cmp	r0, #15
   181dc:	add	r1, pc, r1
   181e0:	str	r6, [r1]
   181e4:	bge	1842c <sf_gen_inbound+0x68c>
   181e8:	mov	r0, #1024	; 0x400
   181ec:	lsl	r5, r0, r6
   181f0:	mov	r0, r5
   181f4:	bl	dec <malloc@plt>
   181f8:	cmp	r0, #0
   181fc:	str	r0, [r7, #12]
   18200:	beq	1842c <sf_gen_inbound+0x68c>
   18204:	mov	r1, #0
   18208:	mov	r2, r5
   1820c:	add	r7, r7, #8
   18210:	bl	e58 <memset@plt>
   18214:	cmp	r5, #19
   18218:	str	r5, [r7]
   1821c:	bhi	182c8 <sf_gen_inbound+0x528>
   18220:	b	1842c <sf_gen_inbound+0x68c>
   18224:	mov	r6, r0
   18228:	sub	r1, r5, #20
   1822c:	mov	r2, #84	; 0x54
   18230:	str	r1, [r7]
   18234:	ldr	r0, [r7, #4]
   18238:	str	r2, [r0, r1]!
   1823c:	mov	r1, #1
   18240:	mov	r2, r8
   18244:	str	r1, [r0, #12]
   18248:	mov	r1, r2
   1824c:	ldr	r2, [r2, #16]
   18250:	cmp	r2, #0
   18254:	bne	18248 <sf_gen_inbound+0x4a8>
   18258:	str	r0, [r1, #16]
   1825c:	ldr	r5, [r4, r6, lsl #3]!
   18260:	cmp	r5, #207	; 0xcf
   18264:	bhi	182b8 <sf_gen_inbound+0x518>
   18268:	ldr	r1, [pc, #484]	; 18454 <sf_gen_inbound+0x6b4>
   1826c:	add	r0, r6, #1
   18270:	cmp	r6, #15
   18274:	add	r1, pc, r1
   18278:	str	r0, [r1]
   1827c:	bge	1842c <sf_gen_inbound+0x68c>
   18280:	mov	r1, #1024	; 0x400
   18284:	lsl	r5, r1, r0
   18288:	mov	r0, r5
   1828c:	bl	dec <malloc@plt>
   18290:	cmp	r0, #0
   18294:	str	r0, [r4, #12]
   18298:	beq	1842c <sf_gen_inbound+0x68c>
   1829c:	mov	r1, #0
   182a0:	mov	r2, r5
   182a4:	add	r4, r4, #8
   182a8:	bl	e58 <memset@plt>
   182ac:	cmp	r5, #207	; 0xcf
   182b0:	str	r5, [r4]
   182b4:	bls	1842c <sf_gen_inbound+0x68c>
   182b8:	sub	r0, r5, #208	; 0xd0
   182bc:	mov	r2, #0
   182c0:	b	18360 <sf_gen_inbound+0x5c0>
   182c4:	mov	r6, r0
   182c8:	sub	r1, r5, #20
   182cc:	mov	r2, #84	; 0x54
   182d0:	str	r1, [r7]
   182d4:	ldr	r0, [r7, #4]
   182d8:	str	r2, [r0, r1]!
   182dc:	mov	r1, #1
   182e0:	mov	r2, r8
   182e4:	str	r1, [r0, #12]
   182e8:	mov	r1, r2
   182ec:	ldr	r2, [r2, #16]
   182f0:	cmp	r2, #0
   182f4:	bne	182e8 <sf_gen_inbound+0x548>
   182f8:	str	r0, [r1, #16]
   182fc:	ldr	r5, [r4, r6, lsl #3]!
   18300:	cmp	r5, #207	; 0xcf
   18304:	bhi	18358 <sf_gen_inbound+0x5b8>
   18308:	ldr	r1, [pc, #332]	; 1845c <sf_gen_inbound+0x6bc>
   1830c:	add	r0, r6, #1
   18310:	cmp	r6, #15
   18314:	add	r1, pc, r1
   18318:	str	r0, [r1]
   1831c:	bge	1842c <sf_gen_inbound+0x68c>
   18320:	mov	r1, #1024	; 0x400
   18324:	lsl	r5, r1, r0
   18328:	mov	r0, r5
   1832c:	bl	dec <malloc@plt>
   18330:	cmp	r0, #0
   18334:	str	r0, [r4, #12]
   18338:	beq	1842c <sf_gen_inbound+0x68c>
   1833c:	mov	r1, #0
   18340:	mov	r2, r5
   18344:	add	r4, r4, #8
   18348:	bl	e58 <memset@plt>
   1834c:	cmp	r5, #207	; 0xcf
   18350:	str	r5, [r4]
   18354:	bls	1842c <sf_gen_inbound+0x68c>
   18358:	sub	r0, r5, #208	; 0xd0
   1835c:	mov	r2, #1
   18360:	str	r0, [r4]
   18364:	ldr	r1, [r4, #4]
   18368:	add	r0, r1, r0
   1836c:	mov	r1, #21
   18370:	str	r2, [r0, #20]
   18374:	str	r8, [r0, #4]
   18378:	str	r1, [r0, #8]
   1837c:	str	r0, [r0, #96]	; 0x60
   18380:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18384:	mov	r0, #0
   18388:	bl	150bc <sf_gen_loadi>
   1838c:	mov	r1, r0
   18390:	mov	r0, #1
   18394:	mov	r2, #1
   18398:	bl	12a88 <sf_gen_load>
   1839c:	mov	r4, r0
   183a0:	mov	r0, #0
   183a4:	bl	150bc <sf_gen_loadi>
   183a8:	mov	r2, r0
   183ac:	mov	r0, #16
   183b0:	mov	r1, r4
   183b4:	mov	r3, r6
   183b8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   183bc:	b	14930 <sf_gen_relation>
   183c0:	mov	r0, #1
   183c4:	mov	r1, #0
   183c8:	mov	r2, #8
   183cc:	cmp	r6, #0
   183d0:	beq	183f4 <sf_gen_inbound+0x654>
   183d4:	mov	r3, #4
   183d8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   183dc:	b	a8f8 <gen_cmp>
   183e0:	mov	r0, #1
   183e4:	mov	r1, #0
   183e8:	mov	r2, #16
   183ec:	cmp	r6, #0
   183f0:	bne	18414 <sf_gen_inbound+0x674>
   183f4:	mov	r3, #0
   183f8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   183fc:	b	a8f8 <gen_cmp>
   18400:	mov	r0, #1
   18404:	mov	r1, #2
   18408:	mov	r2, #8
   1840c:	cmp	r6, #0
   18410:	beq	18420 <sf_gen_inbound+0x680>
   18414:	mov	r3, #1
   18418:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1841c:	b	a8f8 <gen_cmp>
   18420:	mov	r3, #2
   18424:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   18428:	b	a8f8 <gen_cmp>
   1842c:	ldr	r0, [pc, #48]	; 18464 <sf_gen_inbound+0x6c4>
   18430:	add	r0, pc, r0
   18434:	bl	2068 <sf_bpf_error>
   18438:	ldr	r0, [pc, #32]	; 18460 <sf_gen_inbound+0x6c0>
   1843c:	add	r0, pc, r0
   18440:	bl	2068 <sf_bpf_error>
   18444:	.word	0x0002f680
   18448:	.word	0x0002f3a8
   1844c:	.word	0x0002f320
   18450:	.word	0x0002f37c
   18454:	.word	0x0002f288
   18458:	.word	0x0002f320
   1845c:	.word	0x0002f1e8
   18460:	.word	0x00011d42
   18464:	.word	0x0001224c

00018468 <sf_gen_pf_ifname>:
   18468:	push	{fp, lr}
   1846c:	mov	fp, sp
   18470:	ldr	r0, [pc, #4]	; 1847c <sf_gen_pf_ifname+0x14>
   18474:	add	r0, pc, r0
   18478:	bl	2068 <sf_bpf_error>
   1847c:	.word	0x00011d38

00018480 <sf_gen_pf_ruleset>:
   18480:	push	{fp, lr}
   18484:	mov	fp, sp
   18488:	ldr	r0, [pc, #4]	; 18494 <sf_gen_pf_ruleset+0x14>
   1848c:	add	r0, pc, r0
   18490:	bl	2068 <sf_bpf_error>
   18494:	.word	0x00011d48

00018498 <sf_gen_pf_rnr>:
   18498:	push	{fp, lr}
   1849c:	mov	fp, sp
   184a0:	ldr	r0, [pc, #4]	; 184ac <sf_gen_pf_rnr+0x14>
   184a4:	add	r0, pc, r0
   184a8:	bl	2068 <sf_bpf_error>
   184ac:	.word	0x00011d30

000184b0 <sf_gen_pf_srnr>:
   184b0:	push	{fp, lr}
   184b4:	mov	fp, sp
   184b8:	ldr	r0, [pc, #4]	; 184c4 <sf_gen_pf_srnr+0x14>
   184bc:	add	r0, pc, r0
   184c0:	bl	2068 <sf_bpf_error>
   184c4:	.word	0x00011d18

000184c8 <sf_gen_pf_reason>:
   184c8:	push	{fp, lr}
   184cc:	mov	fp, sp
   184d0:	ldr	r0, [pc, #4]	; 184dc <sf_gen_pf_reason+0x14>
   184d4:	add	r0, pc, r0
   184d8:	bl	2068 <sf_bpf_error>
   184dc:	.word	0x00011d00

000184e0 <sf_gen_pf_action>:
   184e0:	push	{fp, lr}
   184e4:	mov	fp, sp
   184e8:	ldr	r0, [pc, #4]	; 184f4 <sf_gen_pf_action+0x14>
   184ec:	add	r0, pc, r0
   184f0:	bl	2068 <sf_bpf_error>
   184f4:	.word	0x00011ce8

000184f8 <sf_gen_p80211_type>:
   184f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   184fc:	add	fp, sp, #28
   18500:	sub	sp, sp, #4
   18504:	mov	r8, r0
   18508:	ldr	r0, [pc, #408]	; 186a8 <sf_gen_p80211_type+0x1b0>
   1850c:	mov	r6, r1
   18510:	ldr	r0, [pc, r0]
   18514:	sub	r1, r0, #105	; 0x69
   18518:	cmp	r1, #22
   1851c:	bhi	18534 <sf_gen_p80211_type+0x3c>
   18520:	movw	r3, #16385	; 0x4001
   18524:	mov	r2, #1
   18528:	movt	r3, #64	; 0x40
   1852c:	tst	r3, r2, lsl r1
   18530:	bne	1853c <sf_gen_p80211_type+0x44>
   18534:	cmp	r0, #163	; 0xa3
   18538:	bne	1869c <sf_gen_p80211_type+0x1a4>
   1853c:	mov	r0, #1
   18540:	mov	r1, #0
   18544:	mov	r2, #16
   18548:	bl	17970 <gen_load_a>
   1854c:	mov	r9, r0
   18550:	ldr	r0, [pc, #344]	; 186b0 <sf_gen_p80211_type+0x1b8>
   18554:	cmn	r6, #1
   18558:	ldr	r0, [pc, r0]
   1855c:	ldr	r5, [pc, #336]	; 186b4 <sf_gen_p80211_type+0x1bc>
   18560:	add	r5, pc, r5
   18564:	beq	185cc <sf_gen_p80211_type+0xd4>
   18568:	mov	r4, r5
   1856c:	ldr	r7, [r4, r0, lsl #3]!
   18570:	cmp	r7, #19
   18574:	bhi	185d4 <sf_gen_p80211_type+0xdc>
   18578:	ldr	r1, [pc, #312]	; 186b8 <sf_gen_p80211_type+0x1c0>
   1857c:	add	sl, r0, #1
   18580:	cmp	r0, #15
   18584:	add	r1, pc, r1
   18588:	str	sl, [r1]
   1858c:	bge	18690 <sf_gen_p80211_type+0x198>
   18590:	mov	r0, #1024	; 0x400
   18594:	lsl	r7, r0, sl
   18598:	mov	r0, r7
   1859c:	bl	dec <malloc@plt>
   185a0:	cmp	r0, #0
   185a4:	str	r0, [r4, #12]
   185a8:	beq	18690 <sf_gen_p80211_type+0x198>
   185ac:	mov	r1, #0
   185b0:	mov	r2, r7
   185b4:	add	r4, r4, #8
   185b8:	bl	e58 <memset@plt>
   185bc:	cmp	r7, #19
   185c0:	str	r7, [r4]
   185c4:	bhi	185d8 <sf_gen_p80211_type+0xe0>
   185c8:	b	18690 <sf_gen_p80211_type+0x198>
   185cc:	mov	sl, r0
   185d0:	b	18608 <sf_gen_p80211_type+0x110>
   185d4:	mov	sl, r0
   185d8:	sub	r1, r7, #20
   185dc:	mov	r2, #84	; 0x54
   185e0:	str	r1, [r4]
   185e4:	ldr	r0, [r4, #4]
   185e8:	str	r2, [r0, r1]!
   185ec:	mov	r2, r9
   185f0:	str	r6, [r0, #12]
   185f4:	mov	r1, r2
   185f8:	ldr	r2, [r2, #16]
   185fc:	cmp	r2, #0
   18600:	bne	185f4 <sf_gen_p80211_type+0xfc>
   18604:	str	r0, [r1, #16]
   18608:	ldr	r6, [r5, sl, lsl #3]!
   1860c:	cmp	r6, #207	; 0xcf
   18610:	bhi	18664 <sf_gen_p80211_type+0x16c>
   18614:	ldr	r1, [pc, #160]	; 186bc <sf_gen_p80211_type+0x1c4>
   18618:	add	r0, sl, #1
   1861c:	cmp	sl, #15
   18620:	add	r1, pc, r1
   18624:	str	r0, [r1]
   18628:	bge	18690 <sf_gen_p80211_type+0x198>
   1862c:	mov	r1, #1024	; 0x400
   18630:	lsl	r6, r1, r0
   18634:	mov	r0, r6
   18638:	bl	dec <malloc@plt>
   1863c:	cmp	r0, #0
   18640:	str	r0, [r5, #12]
   18644:	beq	18690 <sf_gen_p80211_type+0x198>
   18648:	mov	r1, #0
   1864c:	mov	r2, r6
   18650:	add	r5, r5, #8
   18654:	bl	e58 <memset@plt>
   18658:	cmp	r6, #207	; 0xcf
   1865c:	str	r6, [r5]
   18660:	bls	18690 <sf_gen_p80211_type+0x198>
   18664:	sub	r0, r6, #208	; 0xd0
   18668:	str	r0, [r5]
   1866c:	ldr	r1, [r5, #4]
   18670:	add	r0, r1, r0
   18674:	mov	r1, #21
   18678:	str	r8, [r0, #20]
   1867c:	str	r9, [r0, #4]
   18680:	str	r1, [r0, #8]
   18684:	str	r0, [r0, #96]	; 0x60
   18688:	sub	sp, fp, #28
   1868c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18690:	ldr	r0, [pc, #40]	; 186c0 <sf_gen_p80211_type+0x1c8>
   18694:	add	r0, pc, r0
   18698:	bl	2068 <sf_bpf_error>
   1869c:	ldr	r0, [pc, #8]	; 186ac <sf_gen_p80211_type+0x1b4>
   186a0:	add	r0, pc, r0
   186a4:	bl	2068 <sf_bpf_error>
   186a8:	.word	0x0002ef20
   186ac:	.word	0x00011b69
   186b0:	.word	0x0002efa4
   186b4:	.word	0x0002ef1c
   186b8:	.word	0x0002ef78
   186bc:	.word	0x0002eedc
   186c0:	.word	0x00011fe8

000186c4 <sf_gen_p80211_fcdir>:
   186c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   186c8:	add	fp, sp, #24
   186cc:	mov	r8, r0
   186d0:	ldr	r0, [pc, #388]	; 1885c <sf_gen_p80211_fcdir+0x198>
   186d4:	ldr	r0, [pc, r0]
   186d8:	sub	r1, r0, #105	; 0x69
   186dc:	cmp	r1, #22
   186e0:	bhi	186f8 <sf_gen_p80211_fcdir+0x34>
   186e4:	movw	r3, #16385	; 0x4001
   186e8:	mov	r2, #1
   186ec:	movt	r3, #64	; 0x40
   186f0:	tst	r3, r2, lsl r1
   186f4:	bne	18700 <sf_gen_p80211_fcdir+0x3c>
   186f8:	cmp	r0, #163	; 0xa3
   186fc:	bne	18850 <sf_gen_p80211_fcdir+0x18c>
   18700:	mov	r0, #1
   18704:	mov	r1, #1
   18708:	mov	r2, #16
   1870c:	bl	17970 <gen_load_a>
   18710:	mov	r9, r0
   18714:	ldr	r0, [pc, #328]	; 18864 <sf_gen_p80211_fcdir+0x1a0>
   18718:	ldr	r0, [pc, r0]
   1871c:	ldr	r5, [pc, #324]	; 18868 <sf_gen_p80211_fcdir+0x1a4>
   18720:	add	r5, pc, r5
   18724:	mov	r7, r5
   18728:	ldr	r6, [r7, r0, lsl #3]!
   1872c:	cmp	r6, #19
   18730:	bhi	18788 <sf_gen_p80211_fcdir+0xc4>
   18734:	ldr	r1, [pc, #304]	; 1886c <sf_gen_p80211_fcdir+0x1a8>
   18738:	add	r4, r0, #1
   1873c:	cmp	r0, #15
   18740:	add	r1, pc, r1
   18744:	str	r4, [r1]
   18748:	bge	18844 <sf_gen_p80211_fcdir+0x180>
   1874c:	mov	r0, #1024	; 0x400
   18750:	lsl	r6, r0, r4
   18754:	mov	r0, r6
   18758:	bl	dec <malloc@plt>
   1875c:	cmp	r0, #0
   18760:	str	r0, [r7, #12]
   18764:	beq	18844 <sf_gen_p80211_fcdir+0x180>
   18768:	mov	r1, #0
   1876c:	mov	r2, r6
   18770:	add	r7, r7, #8
   18774:	bl	e58 <memset@plt>
   18778:	cmp	r6, #19
   1877c:	str	r6, [r7]
   18780:	bhi	1878c <sf_gen_p80211_fcdir+0xc8>
   18784:	b	18844 <sf_gen_p80211_fcdir+0x180>
   18788:	mov	r4, r0
   1878c:	sub	r1, r6, #20
   18790:	mov	r2, #84	; 0x54
   18794:	str	r1, [r7]
   18798:	ldr	r0, [r7, #4]
   1879c:	str	r2, [r0, r1]!
   187a0:	mov	r1, #3
   187a4:	mov	r2, r9
   187a8:	str	r1, [r0, #12]
   187ac:	mov	r1, r2
   187b0:	ldr	r2, [r2, #16]
   187b4:	cmp	r2, #0
   187b8:	bne	187ac <sf_gen_p80211_fcdir+0xe8>
   187bc:	str	r0, [r1, #16]
   187c0:	ldr	r6, [r5, r4, lsl #3]!
   187c4:	cmp	r6, #207	; 0xcf
   187c8:	bhi	1881c <sf_gen_p80211_fcdir+0x158>
   187cc:	ldr	r1, [pc, #156]	; 18870 <sf_gen_p80211_fcdir+0x1ac>
   187d0:	add	r0, r4, #1
   187d4:	cmp	r4, #15
   187d8:	add	r1, pc, r1
   187dc:	str	r0, [r1]
   187e0:	bge	18844 <sf_gen_p80211_fcdir+0x180>
   187e4:	mov	r1, #1024	; 0x400
   187e8:	lsl	r6, r1, r0
   187ec:	mov	r0, r6
   187f0:	bl	dec <malloc@plt>
   187f4:	cmp	r0, #0
   187f8:	str	r0, [r5, #12]
   187fc:	beq	18844 <sf_gen_p80211_fcdir+0x180>
   18800:	mov	r1, #0
   18804:	mov	r2, r6
   18808:	add	r5, r5, #8
   1880c:	bl	e58 <memset@plt>
   18810:	cmp	r6, #207	; 0xcf
   18814:	str	r6, [r5]
   18818:	bls	18844 <sf_gen_p80211_fcdir+0x180>
   1881c:	sub	r0, r6, #208	; 0xd0
   18820:	str	r0, [r5]
   18824:	ldr	r1, [r5, #4]
   18828:	add	r0, r1, r0
   1882c:	mov	r1, #21
   18830:	str	r8, [r0, #20]
   18834:	str	r9, [r0, #4]
   18838:	str	r1, [r0, #8]
   1883c:	str	r0, [r0, #96]	; 0x60
   18840:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18844:	ldr	r0, [pc, #40]	; 18874 <sf_gen_p80211_fcdir+0x1b0>
   18848:	add	r0, pc, r0
   1884c:	bl	2068 <sf_bpf_error>
   18850:	ldr	r0, [pc, #8]	; 18860 <sf_gen_p80211_fcdir+0x19c>
   18854:	add	r0, pc, r0
   18858:	bl	2068 <sf_bpf_error>
   1885c:	.word	0x0002ed5c
   18860:	.word	0x000119e6
   18864:	.word	0x0002ede4
   18868:	.word	0x0002ed5c
   1886c:	.word	0x0002edbc
   18870:	.word	0x0002ed24
   18874:	.word	0x00011e34

00018878 <sf_gen_acode>:
   18878:	push	{r4, r5, fp, lr}
   1887c:	add	fp, sp, #8
   18880:	sub	sp, sp, #8
   18884:	mov	r5, r0
   18888:	ldr	r0, [pc, #604]	; 18aec <sf_gen_acode+0x274>
   1888c:	ldr	r0, [pc, r0]
   18890:	cmp	r0, #129	; 0x81
   18894:	cmpne	r0, #7
   18898:	bne	18ad0 <sf_gen_acode+0x258>
   1889c:	movw	r0, #65534	; 0xfffe
   188a0:	and	r0, r1, r0
   188a4:	cmp	r0, #256	; 0x100
   188a8:	bne	18adc <sf_gen_acode+0x264>
   188ac:	lsr	r0, r1, #16
   188b0:	uxtb	r0, r0
   188b4:	cmp	r0, #4
   188b8:	bhi	18ae8 <sf_gen_acode+0x270>
   188bc:	add	r1, pc, #4
   188c0:	ldr	r0, [r1, r0, lsl #2]
   188c4:	add	pc, r1, r0
   188c8:	.word	0x00000014
   188cc:	.word	0x000001ac
   188d0:	.word	0x000001b8
   188d4:	.word	0x00000014
   188d8:	.word	0x000000d4
   188dc:	mov	r0, #1
   188e0:	mov	r1, #0
   188e4:	mov	r2, #1
   188e8:	mov	r3, r5
   188ec:	bl	1c314 <gen_bcmp>
   188f0:	mov	r4, r0
   188f4:	mov	r0, #1
   188f8:	mov	r1, #1
   188fc:	mov	r2, #1
   18900:	mov	r3, r5
   18904:	bl	1c314 <gen_bcmp>
   18908:	ldr	r1, [r4, #44]	; 0x2c
   1890c:	cmp	r4, #0
   18910:	clz	r1, r1
   18914:	lsr	r1, r1, #5
   18918:	str	r1, [r4, #44]	; 0x2c
   1891c:	beq	18958 <sf_gen_acode+0xe0>
   18920:	ldr	r2, [r0, #96]	; 0x60
   18924:	mov	r3, r4
   18928:	cmp	r1, #0
   1892c:	mov	r1, #84	; 0x54
   18930:	add	r5, r3, #84	; 0x54
   18934:	movweq	r1, #60	; 0x3c
   18938:	addeq	r5, r3, #60	; 0x3c
   1893c:	ldr	r3, [r3, r1]
   18940:	str	r2, [r5]
   18944:	cmp	r3, #0
   18948:	beq	18954 <sf_gen_acode+0xdc>
   1894c:	ldr	r1, [r3, #44]	; 0x2c
   18950:	b	18928 <sf_gen_acode+0xb0>
   18954:	ldr	r1, [r4, #44]	; 0x2c
   18958:	clz	r1, r1
   1895c:	cmp	r0, #0
   18960:	lsr	r1, r1, #5
   18964:	str	r1, [r4, #44]	; 0x2c
   18968:	str	r0, [sp]
   1896c:	beq	18a9c <sf_gen_acode+0x224>
   18970:	mov	r2, r0
   18974:	ldr	r3, [r2, #44]	; 0x2c
   18978:	add	r1, r2, #84	; 0x54
   1897c:	cmp	r3, #0
   18980:	mov	r3, #84	; 0x54
   18984:	movweq	r3, #60	; 0x3c
   18988:	addeq	r1, r2, #60	; 0x3c
   1898c:	ldr	r2, [r2, r3]
   18990:	cmp	r2, #0
   18994:	bne	18974 <sf_gen_acode+0xfc>
   18998:	b	18aa0 <sf_gen_acode+0x228>
   1899c:	mov	r0, #1
   189a0:	mov	r1, #0
   189a4:	mov	r2, #1
   189a8:	mov	r3, r5
   189ac:	bl	1c314 <gen_bcmp>
   189b0:	mov	r4, r0
   189b4:	mov	r0, #1
   189b8:	mov	r1, #1
   189bc:	mov	r2, #1
   189c0:	mov	r3, r5
   189c4:	bl	1c314 <gen_bcmp>
   189c8:	cmp	r4, #0
   189cc:	beq	18a00 <sf_gen_acode+0x188>
   189d0:	ldr	r1, [r0, #96]	; 0x60
   189d4:	mov	r2, r4
   189d8:	ldr	r3, [r2, #44]	; 0x2c
   189dc:	add	r5, r2, #84	; 0x54
   189e0:	cmp	r3, #0
   189e4:	mov	r3, #84	; 0x54
   189e8:	movweq	r3, #60	; 0x3c
   189ec:	addeq	r5, r2, #60	; 0x3c
   189f0:	ldr	r2, [r2, r3]
   189f4:	str	r1, [r5]
   189f8:	cmp	r2, #0
   189fc:	bne	189d8 <sf_gen_acode+0x160>
   18a00:	ldr	r1, [r4, #44]	; 0x2c
   18a04:	cmp	r0, #0
   18a08:	clz	r1, r1
   18a0c:	lsr	r1, r1, #5
   18a10:	str	r1, [r4, #44]	; 0x2c
   18a14:	ldr	r2, [r0, #44]	; 0x2c
   18a18:	clz	r1, r2
   18a1c:	lsr	r1, r1, #5
   18a20:	str	r1, [r0, #44]	; 0x2c
   18a24:	str	r0, [sp, #4]
   18a28:	beq	18aa8 <sf_gen_acode+0x230>
   18a2c:	cmp	r2, #0
   18a30:	mov	r2, #60	; 0x3c
   18a34:	add	r1, r0, #60	; 0x3c
   18a38:	movweq	r2, #84	; 0x54
   18a3c:	addeq	r1, r0, #84	; 0x54
   18a40:	ldr	r2, [r0, r2]
   18a44:	cmp	r2, #0
   18a48:	beq	18aac <sf_gen_acode+0x234>
   18a4c:	ldr	r3, [r2, #44]	; 0x2c
   18a50:	add	r1, r2, #84	; 0x54
   18a54:	cmp	r3, #0
   18a58:	mov	r3, #84	; 0x54
   18a5c:	movweq	r3, #60	; 0x3c
   18a60:	addeq	r1, r2, #60	; 0x3c
   18a64:	ldr	r2, [r2, r3]
   18a68:	cmp	r2, #0
   18a6c:	bne	18a4c <sf_gen_acode+0x1d4>
   18a70:	b	18aac <sf_gen_acode+0x234>
   18a74:	mov	r0, #1
   18a78:	mov	r1, #0
   18a7c:	b	18a88 <sf_gen_acode+0x210>
   18a80:	mov	r0, #1
   18a84:	mov	r1, #1
   18a88:	mov	r2, #1
   18a8c:	mov	r3, r5
   18a90:	sub	sp, fp, #8
   18a94:	pop	{r4, r5, fp, lr}
   18a98:	b	1c314 <gen_bcmp>
   18a9c:	mov	r1, sp
   18aa0:	str	r4, [r1]
   18aa4:	b	18ac0 <sf_gen_acode+0x248>
   18aa8:	add	r1, sp, #4
   18aac:	str	r4, [r1]
   18ab0:	ldr	r1, [r0, #44]	; 0x2c
   18ab4:	clz	r1, r1
   18ab8:	lsr	r1, r1, #5
   18abc:	str	r1, [r0, #44]	; 0x2c
   18ac0:	ldr	r1, [r4, #96]	; 0x60
   18ac4:	str	r1, [r0, #96]	; 0x60
   18ac8:	sub	sp, fp, #8
   18acc:	pop	{r4, r5, fp, pc}
   18ad0:	ldr	r0, [pc, #28]	; 18af4 <sf_gen_acode+0x27c>
   18ad4:	add	r0, pc, r0
   18ad8:	bl	2068 <sf_bpf_error>
   18adc:	ldr	r0, [pc, #12]	; 18af0 <sf_gen_acode+0x278>
   18ae0:	add	r0, pc, r0
   18ae4:	bl	2068 <sf_bpf_error>
   18ae8:	bl	edc <abort@plt>
   18aec:	.word	0x0002eba4
   18af0:	.word	0x0001178d
   18af4:	.word	0x000117c3

00018af8 <sf_gen_vlan>:
   18af8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18afc:	add	fp, sp, #28
   18b00:	sub	sp, sp, #4
   18b04:	mov	r9, r0
   18b08:	ldr	r0, [pc, #696]	; 18dc8 <sf_gen_vlan+0x2d0>
   18b0c:	ldr	r0, [pc, r0]
   18b10:	cmp	r0, #0
   18b14:	bne	18db0 <sf_gen_vlan+0x2b8>
   18b18:	ldr	r0, [pc, #684]	; 18dcc <sf_gen_vlan+0x2d4>
   18b1c:	ldr	r0, [pc, r0]
   18b20:	ldr	r1, [pc, #680]	; 18dd0 <sf_gen_vlan+0x2d8>
   18b24:	add	r1, pc, r1
   18b28:	str	r0, [r1]
   18b2c:	ldr	r1, [pc, #672]	; 18dd4 <sf_gen_vlan+0x2dc>
   18b30:	ldr	r1, [pc, r1]
   18b34:	cmp	r1, #1
   18b38:	bne	18dbc <sf_gen_vlan+0x2c4>
   18b3c:	ldr	r1, [pc, #660]	; 18dd8 <sf_gen_vlan+0x2e0>
   18b40:	mov	r0, #1
   18b44:	mov	r2, #8
   18b48:	mov	r3, #33024	; 0x8100
   18b4c:	ldr	r1, [pc, r1]
   18b50:	bl	a8f8 <gen_cmp>
   18b54:	mov	sl, r0
   18b58:	cmp	r9, #0
   18b5c:	bmi	18be8 <sf_gen_vlan+0xf0>
   18b60:	mov	r0, #2
   18b64:	mov	r1, #0
   18b68:	mov	r2, #8
   18b6c:	bl	17970 <gen_load_a>
   18b70:	mov	r8, r0
   18b74:	ldr	r0, [pc, #608]	; 18ddc <sf_gen_vlan+0x2e4>
   18b78:	ldr	r0, [pc, r0]
   18b7c:	ldr	r4, [pc, #604]	; 18de0 <sf_gen_vlan+0x2e8>
   18b80:	add	r4, pc, r4
   18b84:	mov	r6, r4
   18b88:	ldr	r7, [r6, r0, lsl #3]!
   18b8c:	cmp	r7, #19
   18b90:	bhi	18bf0 <sf_gen_vlan+0xf8>
   18b94:	ldr	r1, [pc, #584]	; 18de4 <sf_gen_vlan+0x2ec>
   18b98:	add	r5, r0, #1
   18b9c:	cmp	r0, #15
   18ba0:	add	r1, pc, r1
   18ba4:	str	r5, [r1]
   18ba8:	bge	18da4 <sf_gen_vlan+0x2ac>
   18bac:	mov	r0, #1024	; 0x400
   18bb0:	lsl	r7, r0, r5
   18bb4:	mov	r0, r7
   18bb8:	bl	dec <malloc@plt>
   18bbc:	cmp	r0, #0
   18bc0:	str	r0, [r6, #12]
   18bc4:	beq	18da4 <sf_gen_vlan+0x2ac>
   18bc8:	mov	r1, #0
   18bcc:	mov	r2, r7
   18bd0:	add	r6, r6, #8
   18bd4:	bl	e58 <memset@plt>
   18bd8:	cmp	r7, #19
   18bdc:	str	r7, [r6]
   18be0:	bhi	18bf4 <sf_gen_vlan+0xfc>
   18be4:	b	18da4 <sf_gen_vlan+0x2ac>
   18be8:	mov	r0, sl
   18bec:	b	18d6c <sf_gen_vlan+0x274>
   18bf0:	mov	r5, r0
   18bf4:	sub	r1, r7, #20
   18bf8:	mov	r2, #84	; 0x54
   18bfc:	str	r1, [r6]
   18c00:	ldr	r0, [r6, #4]
   18c04:	str	r2, [r0, r1]!
   18c08:	movw	r1, #4095	; 0xfff
   18c0c:	mov	r2, r8
   18c10:	str	r1, [r0, #12]
   18c14:	mov	r1, r2
   18c18:	ldr	r2, [r2, #16]
   18c1c:	cmp	r2, #0
   18c20:	bne	18c14 <sf_gen_vlan+0x11c>
   18c24:	str	r0, [r1, #16]
   18c28:	ldr	r7, [r4, r5, lsl #3]!
   18c2c:	cmp	r7, #207	; 0xcf
   18c30:	bhi	18c84 <sf_gen_vlan+0x18c>
   18c34:	ldr	r1, [pc, #428]	; 18de8 <sf_gen_vlan+0x2f0>
   18c38:	add	r0, r5, #1
   18c3c:	cmp	r5, #15
   18c40:	add	r1, pc, r1
   18c44:	str	r0, [r1]
   18c48:	bge	18da4 <sf_gen_vlan+0x2ac>
   18c4c:	mov	r1, #1024	; 0x400
   18c50:	lsl	r7, r1, r0
   18c54:	mov	r0, r7
   18c58:	bl	dec <malloc@plt>
   18c5c:	cmp	r0, #0
   18c60:	str	r0, [r4, #12]
   18c64:	beq	18da4 <sf_gen_vlan+0x2ac>
   18c68:	mov	r1, #0
   18c6c:	mov	r2, r7
   18c70:	add	r4, r4, #8
   18c74:	bl	e58 <memset@plt>
   18c78:	cmp	r7, #207	; 0xcf
   18c7c:	str	r7, [r4]
   18c80:	bls	18da4 <sf_gen_vlan+0x2ac>
   18c84:	sub	r0, r7, #208	; 0xd0
   18c88:	cmp	sl, #0
   18c8c:	str	r0, [r4]
   18c90:	ldr	r1, [r4, #4]
   18c94:	add	r0, r1, r0
   18c98:	mov	r1, #21
   18c9c:	str	r9, [r0, #20]
   18ca0:	str	r8, [r0, #4]
   18ca4:	str	r1, [r0, #8]
   18ca8:	str	r0, [r0, #96]	; 0x60
   18cac:	beq	18cdc <sf_gen_vlan+0x1e4>
   18cb0:	mov	r1, sl
   18cb4:	ldr	r2, [r1, #44]	; 0x2c
   18cb8:	add	r3, r1, #84	; 0x54
   18cbc:	cmp	r2, #0
   18cc0:	mov	r2, #84	; 0x54
   18cc4:	movweq	r2, #60	; 0x3c
   18cc8:	addeq	r3, r1, #60	; 0x3c
   18ccc:	ldr	r1, [r1, r2]
   18cd0:	str	r0, [r3]
   18cd4:	cmp	r1, #0
   18cd8:	bne	18cb4 <sf_gen_vlan+0x1bc>
   18cdc:	ldr	r1, [sl, #44]	; 0x2c
   18ce0:	cmp	r0, #0
   18ce4:	clz	r1, r1
   18ce8:	lsr	r1, r1, #5
   18cec:	str	r1, [sl, #44]	; 0x2c
   18cf0:	ldr	r1, [r0, #44]	; 0x2c
   18cf4:	clz	r2, r1
   18cf8:	lsr	r2, r2, #5
   18cfc:	str	r2, [r0, #44]	; 0x2c
   18d00:	str	r0, [sp]
   18d04:	beq	18d4c <sf_gen_vlan+0x254>
   18d08:	cmp	r1, #0
   18d0c:	mov	r3, #60	; 0x3c
   18d10:	mov	r2, r0
   18d14:	movweq	r3, #84	; 0x54
   18d18:	ldr	r1, [r2, r3]!
   18d1c:	cmp	r1, #0
   18d20:	beq	18d50 <sf_gen_vlan+0x258>
   18d24:	ldr	r3, [r1, #44]	; 0x2c
   18d28:	add	r2, r1, #84	; 0x54
   18d2c:	cmp	r3, #0
   18d30:	mov	r3, #84	; 0x54
   18d34:	movweq	r3, #60	; 0x3c
   18d38:	addeq	r2, r1, #60	; 0x3c
   18d3c:	ldr	r1, [r1, r3]
   18d40:	cmp	r1, #0
   18d44:	bne	18d24 <sf_gen_vlan+0x22c>
   18d48:	b	18d50 <sf_gen_vlan+0x258>
   18d4c:	mov	r2, sp
   18d50:	str	sl, [r2]
   18d54:	ldr	r1, [r0, #44]	; 0x2c
   18d58:	clz	r1, r1
   18d5c:	lsr	r1, r1, #5
   18d60:	str	r1, [r0, #44]	; 0x2c
   18d64:	ldr	r1, [sl, #96]	; 0x60
   18d68:	str	r1, [r0, #96]	; 0x60
   18d6c:	ldr	r1, [pc, #120]	; 18dec <sf_gen_vlan+0x2f4>
   18d70:	ldr	r1, [pc, r1]
   18d74:	ldr	r2, [pc, #116]	; 18df0 <sf_gen_vlan+0x2f8>
   18d78:	add	r1, r1, #4
   18d7c:	add	r2, pc, r2
   18d80:	str	r1, [r2]
   18d84:	ldr	r1, [pc, #104]	; 18df4 <sf_gen_vlan+0x2fc>
   18d88:	ldr	r1, [pc, r1]
   18d8c:	ldr	r2, [pc, #100]	; 18df8 <sf_gen_vlan+0x300>
   18d90:	add	r1, r1, #4
   18d94:	add	r2, pc, r2
   18d98:	str	r1, [r2]
   18d9c:	sub	sp, fp, #28
   18da0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18da4:	ldr	r0, [pc, #88]	; 18e04 <sf_gen_vlan+0x30c>
   18da8:	add	r0, pc, r0
   18dac:	bl	2068 <sf_bpf_error>
   18db0:	ldr	r0, [pc, #72]	; 18e00 <sf_gen_vlan+0x308>
   18db4:	add	r0, pc, r0
   18db8:	bl	2068 <sf_bpf_error>
   18dbc:	ldr	r0, [pc, #56]	; 18dfc <sf_gen_vlan+0x304>
   18dc0:	add	r0, pc, r0
   18dc4:	bl	2068 <sf_bpf_error>
   18dc8:	.word	0x0002e5c8
   18dcc:	.word	0x0002e924
   18dd0:	.word	0x0002e5b4
   18dd4:	.word	0x0002e900
   18dd8:	.word	0x0002e8ec
   18ddc:	.word	0x0002e984
   18de0:	.word	0x0002e8fc
   18de4:	.word	0x0002e95c
   18de8:	.word	0x0002e8bc
   18dec:	.word	0x0002e6cc
   18df0:	.word	0x0002e6c0
   18df4:	.word	0x0002e6b0
   18df8:	.word	0x0002e6a4
   18dfc:	.word	0x0001150d
   18e00:	.word	0x00011500
   18e04:	.word	0x000118d4

00018e08 <sf_gen_mpls>:
   18e08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18e0c:	add	fp, sp, #28
   18e10:	sub	sp, sp, #4
   18e14:	mov	r9, r0
   18e18:	ldr	r0, [pc, #1056]	; 19240 <sf_gen_mpls+0x438>
   18e1c:	ldr	r0, [pc, r0]
   18e20:	ldr	r1, [pc, #1052]	; 19244 <sf_gen_mpls+0x43c>
   18e24:	add	r1, pc, r1
   18e28:	str	r0, [r1]
   18e2c:	ldr	r1, [pc, #1044]	; 19248 <sf_gen_mpls+0x440>
   18e30:	ldr	r1, [pc, r1]
   18e34:	ldr	r8, [pc, #1040]	; 1924c <sf_gen_mpls+0x444>
   18e38:	cmp	r1, #0
   18e3c:	add	r8, pc, r8
   18e40:	beq	18ec4 <sf_gen_mpls+0xbc>
   18e44:	sub	r1, r0, #2
   18e48:	mov	r0, #2
   18e4c:	mov	r2, #16
   18e50:	bl	17970 <gen_load_a>
   18e54:	mov	r7, r0
   18e58:	ldr	r0, [pc, #1008]	; 19250 <sf_gen_mpls+0x448>
   18e5c:	mov	r4, r8
   18e60:	ldr	r0, [pc, r0]
   18e64:	ldr	r5, [r4, r0, lsl #3]!
   18e68:	cmp	r5, #19
   18e6c:	bhi	18eec <sf_gen_mpls+0xe4>
   18e70:	ldr	r1, [pc, #988]	; 19254 <sf_gen_mpls+0x44c>
   18e74:	add	r6, r0, #1
   18e78:	cmp	r0, #15
   18e7c:	add	r1, pc, r1
   18e80:	str	r6, [r1]
   18e84:	bge	19228 <sf_gen_mpls+0x420>
   18e88:	mov	r0, #1024	; 0x400
   18e8c:	lsl	r5, r0, r6
   18e90:	mov	r0, r5
   18e94:	bl	dec <malloc@plt>
   18e98:	cmp	r0, #0
   18e9c:	str	r0, [r4, #12]
   18ea0:	beq	19228 <sf_gen_mpls+0x420>
   18ea4:	mov	r1, #0
   18ea8:	mov	r2, r5
   18eac:	add	r4, r4, #8
   18eb0:	bl	e58 <memset@plt>
   18eb4:	cmp	r5, #19
   18eb8:	str	r5, [r4]
   18ebc:	bhi	18ef0 <sf_gen_mpls+0xe8>
   18ec0:	b	19228 <sf_gen_mpls+0x420>
   18ec4:	ldr	r1, [pc, #912]	; 1925c <sf_gen_mpls+0x454>
   18ec8:	ldr	r1, [pc, r1]
   18ecc:	cmp	r1, #104	; 0x68
   18ed0:	beq	18ee4 <sf_gen_mpls+0xdc>
   18ed4:	cmp	r1, #9
   18ed8:	beq	191c0 <sf_gen_mpls+0x3b8>
   18edc:	cmp	r1, #1
   18ee0:	bne	19234 <sf_gen_mpls+0x42c>
   18ee4:	movw	r0, #34887	; 0x8847
   18ee8:	b	191c4 <sf_gen_mpls+0x3bc>
   18eec:	mov	r6, r0
   18ef0:	sub	r1, r5, #20
   18ef4:	mov	r2, #84	; 0x54
   18ef8:	str	r1, [r4]
   18efc:	ldr	r0, [r4, #4]
   18f00:	str	r2, [r0, r1]!
   18f04:	mov	r1, #1
   18f08:	mov	r2, r7
   18f0c:	str	r1, [r0, #12]
   18f10:	mov	r1, r2
   18f14:	ldr	r2, [r2, #16]
   18f18:	cmp	r2, #0
   18f1c:	bne	18f10 <sf_gen_mpls+0x108>
   18f20:	str	r0, [r1, #16]
   18f24:	mov	r4, r8
   18f28:	ldr	r5, [r4, r6, lsl #3]!
   18f2c:	cmp	r5, #207	; 0xcf
   18f30:	bhi	18f84 <sf_gen_mpls+0x17c>
   18f34:	ldr	r1, [pc, #796]	; 19258 <sf_gen_mpls+0x450>
   18f38:	add	r0, r6, #1
   18f3c:	cmp	r6, #15
   18f40:	add	r1, pc, r1
   18f44:	str	r0, [r1]
   18f48:	bge	19228 <sf_gen_mpls+0x420>
   18f4c:	mov	r1, #1024	; 0x400
   18f50:	lsl	r5, r1, r0
   18f54:	mov	r0, r5
   18f58:	bl	dec <malloc@plt>
   18f5c:	cmp	r0, #0
   18f60:	str	r0, [r4, #12]
   18f64:	beq	19228 <sf_gen_mpls+0x420>
   18f68:	mov	r1, #0
   18f6c:	mov	r2, r5
   18f70:	add	r4, r4, #8
   18f74:	bl	e58 <memset@plt>
   18f78:	cmp	r5, #207	; 0xcf
   18f7c:	str	r5, [r4]
   18f80:	bls	19228 <sf_gen_mpls+0x420>
   18f84:	sub	r0, r5, #208	; 0xd0
   18f88:	str	r0, [r4]
   18f8c:	ldr	r1, [r4, #4]
   18f90:	add	r5, r1, r0
   18f94:	mov	r1, #0
   18f98:	mov	r0, #21
   18f9c:	str	r1, [r5, #20]
   18fa0:	str	r7, [r5, #4]
   18fa4:	str	r0, [r5, #8]
   18fa8:	str	r5, [r5, #96]	; 0x60
   18fac:	cmp	r9, #0
   18fb0:	bmi	191d4 <sf_gen_mpls+0x3cc>
   18fb4:	ldr	r1, [pc, #680]	; 19264 <sf_gen_mpls+0x45c>
   18fb8:	mov	r0, #2
   18fbc:	mov	r2, #0
   18fc0:	ldr	r1, [pc, r1]
   18fc4:	bl	17970 <gen_load_a>
   18fc8:	mov	r4, r0
   18fcc:	ldr	r0, [pc, #660]	; 19268 <sf_gen_mpls+0x460>
   18fd0:	mov	sl, r8
   18fd4:	ldr	r0, [pc, r0]
   18fd8:	ldr	r7, [sl, r0, lsl #3]!
   18fdc:	cmp	r7, #19
   18fe0:	bhi	19038 <sf_gen_mpls+0x230>
   18fe4:	ldr	r1, [pc, #640]	; 1926c <sf_gen_mpls+0x464>
   18fe8:	add	r6, r0, #1
   18fec:	cmp	r0, #15
   18ff0:	add	r1, pc, r1
   18ff4:	str	r6, [r1]
   18ff8:	bge	19228 <sf_gen_mpls+0x420>
   18ffc:	mov	r0, #1024	; 0x400
   19000:	lsl	r7, r0, r6
   19004:	mov	r0, r7
   19008:	bl	dec <malloc@plt>
   1900c:	cmp	r0, #0
   19010:	str	r0, [sl, #12]
   19014:	beq	19228 <sf_gen_mpls+0x420>
   19018:	mov	r1, #0
   1901c:	mov	r2, r7
   19020:	add	sl, sl, #8
   19024:	bl	e58 <memset@plt>
   19028:	cmp	r7, #19
   1902c:	str	r7, [sl]
   19030:	bhi	1903c <sf_gen_mpls+0x234>
   19034:	b	19228 <sf_gen_mpls+0x420>
   19038:	mov	r6, r0
   1903c:	sub	r1, r7, #20
   19040:	mov	r2, #84	; 0x54
   19044:	lsl	r9, r9, #12
   19048:	mov	r7, r4
   1904c:	str	r1, [sl]
   19050:	ldr	r0, [sl, #4]
   19054:	str	r2, [r0, r1]!
   19058:	movw	r1, #61440	; 0xf000
   1905c:	movt	r1, #65535	; 0xffff
   19060:	str	r1, [r0, #12]
   19064:	mov	r1, r4
   19068:	ldr	r4, [r4, #16]
   1906c:	cmp	r4, #0
   19070:	bne	19064 <sf_gen_mpls+0x25c>
   19074:	str	r0, [r1, #16]
   19078:	ldr	r4, [r8, r6, lsl #3]!
   1907c:	cmp	r4, #207	; 0xcf
   19080:	bhi	190d4 <sf_gen_mpls+0x2cc>
   19084:	ldr	r1, [pc, #484]	; 19270 <sf_gen_mpls+0x468>
   19088:	add	r0, r6, #1
   1908c:	cmp	r6, #15
   19090:	add	r1, pc, r1
   19094:	str	r0, [r1]
   19098:	bge	19228 <sf_gen_mpls+0x420>
   1909c:	mov	r1, #1024	; 0x400
   190a0:	lsl	r4, r1, r0
   190a4:	mov	r0, r4
   190a8:	bl	dec <malloc@plt>
   190ac:	cmp	r0, #0
   190b0:	str	r0, [r8, #12]
   190b4:	beq	19228 <sf_gen_mpls+0x420>
   190b8:	mov	r1, #0
   190bc:	mov	r2, r4
   190c0:	add	r8, r8, #8
   190c4:	bl	e58 <memset@plt>
   190c8:	cmp	r4, #207	; 0xcf
   190cc:	str	r4, [r8]
   190d0:	bls	19228 <sf_gen_mpls+0x420>
   190d4:	sub	r0, r4, #208	; 0xd0
   190d8:	cmp	r5, #0
   190dc:	str	r0, [r8]
   190e0:	ldr	r1, [r8, #4]
   190e4:	add	r0, r1, r0
   190e8:	mov	r1, #21
   190ec:	str	r9, [r0, #20]
   190f0:	str	r7, [r0, #4]
   190f4:	str	r1, [r0, #8]
   190f8:	str	r0, [r0, #96]	; 0x60
   190fc:	beq	1912c <sf_gen_mpls+0x324>
   19100:	mov	r1, r5
   19104:	ldr	r2, [r1, #44]	; 0x2c
   19108:	add	r3, r1, #84	; 0x54
   1910c:	cmp	r2, #0
   19110:	mov	r2, #84	; 0x54
   19114:	movweq	r2, #60	; 0x3c
   19118:	addeq	r3, r1, #60	; 0x3c
   1911c:	ldr	r1, [r1, r2]
   19120:	str	r0, [r3]
   19124:	cmp	r1, #0
   19128:	bne	19104 <sf_gen_mpls+0x2fc>
   1912c:	ldr	r1, [r5, #44]	; 0x2c
   19130:	cmp	r0, #0
   19134:	clz	r1, r1
   19138:	lsr	r1, r1, #5
   1913c:	str	r1, [r5, #44]	; 0x2c
   19140:	ldr	r1, [r0, #44]	; 0x2c
   19144:	clz	r2, r1
   19148:	lsr	r2, r2, #5
   1914c:	str	r2, [r0, #44]	; 0x2c
   19150:	str	r0, [sp]
   19154:	beq	1919c <sf_gen_mpls+0x394>
   19158:	cmp	r1, #0
   1915c:	mov	r3, #60	; 0x3c
   19160:	mov	r2, r0
   19164:	movweq	r3, #84	; 0x54
   19168:	ldr	r1, [r2, r3]!
   1916c:	cmp	r1, #0
   19170:	beq	191a0 <sf_gen_mpls+0x398>
   19174:	ldr	r3, [r1, #44]	; 0x2c
   19178:	add	r2, r1, #84	; 0x54
   1917c:	cmp	r3, #0
   19180:	mov	r3, #84	; 0x54
   19184:	movweq	r3, #60	; 0x3c
   19188:	addeq	r2, r1, #60	; 0x3c
   1918c:	ldr	r1, [r1, r3]
   19190:	cmp	r1, #0
   19194:	bne	19174 <sf_gen_mpls+0x36c>
   19198:	b	191a0 <sf_gen_mpls+0x398>
   1919c:	mov	r2, sp
   191a0:	str	r5, [r2]
   191a4:	ldr	r1, [r0, #44]	; 0x2c
   191a8:	clz	r1, r1
   191ac:	lsr	r1, r1, #5
   191b0:	str	r1, [r0, #44]	; 0x2c
   191b4:	ldr	r1, [r5, #96]	; 0x60
   191b8:	str	r1, [r0, #96]	; 0x60
   191bc:	b	191d8 <sf_gen_mpls+0x3d0>
   191c0:	movw	r0, #641	; 0x281
   191c4:	bl	71fc <gen_linktype>
   191c8:	mov	r5, r0
   191cc:	cmp	r9, #0
   191d0:	bpl	18fb4 <sf_gen_mpls+0x1ac>
   191d4:	mov	r0, r5
   191d8:	ldr	r1, [pc, #148]	; 19274 <sf_gen_mpls+0x46c>
   191dc:	ldr	r1, [pc, r1]
   191e0:	ldr	r2, [pc, #144]	; 19278 <sf_gen_mpls+0x470>
   191e4:	add	r1, r1, #4
   191e8:	add	r2, pc, r2
   191ec:	str	r1, [r2]
   191f0:	ldr	r1, [pc, #132]	; 1927c <sf_gen_mpls+0x474>
   191f4:	ldr	r1, [pc, r1]
   191f8:	ldr	r2, [pc, #128]	; 19280 <sf_gen_mpls+0x478>
   191fc:	add	r1, r1, #4
   19200:	add	r2, pc, r2
   19204:	str	r1, [r2]
   19208:	ldr	r1, [pc, #116]	; 19284 <sf_gen_mpls+0x47c>
   1920c:	ldr	r1, [pc, r1]
   19210:	ldr	r2, [pc, #112]	; 19288 <sf_gen_mpls+0x480>
   19214:	add	r1, r1, #1
   19218:	add	r2, pc, r2
   1921c:	str	r1, [r2]
   19220:	sub	sp, fp, #28
   19224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19228:	ldr	r0, [pc, #92]	; 1928c <sf_gen_mpls+0x484>
   1922c:	add	r0, pc, r0
   19230:	bl	2068 <sf_bpf_error>
   19234:	ldr	r0, [pc, #36]	; 19260 <sf_gen_mpls+0x458>
   19238:	add	r0, pc, r0
   1923c:	bl	2068 <sf_bpf_error>
   19240:	.word	0x0002e624
   19244:	.word	0x0002e2b4
   19248:	.word	0x0002e2a4
   1924c:	.word	0x0002e640
   19250:	.word	0x0002e69c
   19254:	.word	0x0002e680
   19258:	.word	0x0002e5bc
   1925c:	.word	0x0002e568
   19260:	.word	0x000110bb
   19264:	.word	0x0002e118
   19268:	.word	0x0002e528
   1926c:	.word	0x0002e50c
   19270:	.word	0x0002e46c
   19274:	.word	0x0002e270
   19278:	.word	0x0002e264
   1927c:	.word	0x0002e24c
   19280:	.word	0x0002e240
   19284:	.word	0x0002dec8
   19288:	.word	0x0002debc
   1928c:	.word	0x00011450

00019290 <sf_gen_pppoed>:
   19290:	movw	r0, #34915	; 0x8863
   19294:	b	71fc <gen_linktype>

00019298 <sf_gen_pppoes>:
   19298:	push	{fp, lr}
   1929c:	mov	fp, sp
   192a0:	movw	r0, #34916	; 0x8864
   192a4:	bl	71fc <gen_linktype>
   192a8:	ldr	r1, [pc, #76]	; 192fc <sf_gen_pppoes+0x64>
   192ac:	mov	r2, #1
   192b0:	add	r1, pc, r1
   192b4:	strb	r2, [r1]
   192b8:	mov	r2, #8
   192bc:	ldr	r1, [pc, #60]	; 19300 <sf_gen_pppoes+0x68>
   192c0:	add	r1, pc, r1
   192c4:	str	r2, [r1]
   192c8:	ldr	r1, [pc, #52]	; 19304 <sf_gen_pppoes+0x6c>
   192cc:	ldr	r1, [pc, r1]
   192d0:	ldr	r3, [pc, #48]	; 19308 <sf_gen_pppoes+0x70>
   192d4:	add	r3, pc, r3
   192d8:	str	r2, [r3]
   192dc:	ldr	r2, [pc, #40]	; 1930c <sf_gen_pppoes+0x74>
   192e0:	add	r2, pc, r2
   192e4:	str	r1, [r2]
   192e8:	add	r1, r1, #6
   192ec:	ldr	r2, [pc, #28]	; 19310 <sf_gen_pppoes+0x78>
   192f0:	add	r2, pc, r2
   192f4:	str	r1, [r2]
   192f8:	pop	{fp, pc}
   192fc:	.word	0x0002e1a0
   19300:	.word	0x0002e18c
   19304:	.word	0x0002e174
   19308:	.word	0x0002e16c
   1930c:	.word	0x0002ddf8
   19310:	.word	0x0002e148

00019314 <sf_gen_atmfield_code>:
   19314:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19318:	add	fp, sp, #28
   1931c:	sub	sp, sp, #4
   19320:	sub	r0, r0, #51	; 0x33
   19324:	cmp	r0, #4
   19328:	bhi	19620 <sf_gen_atmfield_code+0x30c>
   1932c:	mov	sl, r1
   19330:	add	r1, pc, #12
   19334:	mov	r9, r3
   19338:	mov	r4, r2
   1933c:	ldr	r0, [r1, r0, lsl #2]
   19340:	add	pc, r1, r0
   19344:	.word	0x00000014
   19348:	.word	0x00000134
   1934c:	.word	0x00000070
   19350:	.word	0x00000114
   19354:	.word	0x0000003c
   19358:	ldr	r0, [pc, #756]	; 19654 <sf_gen_atmfield_code+0x340>
   1935c:	add	r0, pc, r0
   19360:	ldrb	r0, [r0]
   19364:	cmp	r0, #0
   19368:	beq	19630 <sf_gen_atmfield_code+0x31c>
   1936c:	ldr	r1, [pc, #740]	; 19658 <sf_gen_atmfield_code+0x344>
   19370:	ldr	r1, [pc, r1]
   19374:	cmn	r1, #1
   19378:	bne	1946c <sf_gen_atmfield_code+0x158>
   1937c:	b	19620 <sf_gen_atmfield_code+0x30c>
   19380:	ldr	r0, [pc, #772]	; 1968c <sf_gen_atmfield_code+0x378>
   19384:	add	r0, pc, r0
   19388:	ldrb	r0, [r0]
   1938c:	cmp	r0, #0
   19390:	beq	1963c <sf_gen_atmfield_code+0x328>
   19394:	ldr	r0, [pc, #756]	; 19690 <sf_gen_atmfield_code+0x37c>
   19398:	add	r0, pc, r0
   1939c:	ldrb	r0, [r0]
   193a0:	cmp	r0, #1
   193a4:	beq	19620 <sf_gen_atmfield_code+0x30c>
   193a8:	mov	r0, #1
   193ac:	mov	r1, #0
   193b0:	b	19470 <sf_gen_atmfield_code+0x15c>
   193b4:	ldr	r0, [pc, #696]	; 19674 <sf_gen_atmfield_code+0x360>
   193b8:	add	r0, pc, r0
   193bc:	ldrb	r0, [r0]
   193c0:	cmp	r0, #1
   193c4:	beq	19620 <sf_gen_atmfield_code+0x30c>
   193c8:	mov	r0, #1
   193cc:	mov	r1, #0
   193d0:	mov	r2, #16
   193d4:	bl	17970 <gen_load_a>
   193d8:	mov	r3, r0
   193dc:	ldr	r0, [pc, #660]	; 19678 <sf_gen_atmfield_code+0x364>
   193e0:	ldr	r0, [pc, r0]
   193e4:	ldr	r6, [pc, #656]	; 1967c <sf_gen_atmfield_code+0x368>
   193e8:	add	r6, pc, r6
   193ec:	mov	r5, r6
   193f0:	ldr	r7, [r5, r0, lsl #3]!
   193f4:	cmp	r7, #19
   193f8:	bhi	19564 <sf_gen_atmfield_code+0x250>
   193fc:	str	r3, [sp]
   19400:	add	r8, r0, #1
   19404:	cmp	r0, #15
   19408:	ldr	r1, [pc, #624]	; 19680 <sf_gen_atmfield_code+0x36c>
   1940c:	add	r1, pc, r1
   19410:	str	r8, [r1]
   19414:	bge	19624 <sf_gen_atmfield_code+0x310>
   19418:	mov	r0, #1024	; 0x400
   1941c:	lsl	r7, r0, r8
   19420:	mov	r0, r7
   19424:	bl	dec <malloc@plt>
   19428:	cmp	r0, #0
   1942c:	str	r0, [r5, #12]
   19430:	beq	19624 <sf_gen_atmfield_code+0x310>
   19434:	mov	r1, #0
   19438:	mov	r2, r7
   1943c:	add	r5, r5, #8
   19440:	bl	e58 <memset@plt>
   19444:	ldr	r3, [sp]
   19448:	cmp	r7, #19
   1944c:	str	r7, [r5]
   19450:	bhi	19568 <sf_gen_atmfield_code+0x254>
   19454:	b	19624 <sf_gen_atmfield_code+0x310>
   19458:	ldr	r0, [pc, #552]	; 19688 <sf_gen_atmfield_code+0x374>
   1945c:	ldr	r0, [pc, r0]
   19460:	cmn	r0, #1
   19464:	beq	19620 <sf_gen_atmfield_code+0x30c>
   19468:	add	r1, r0, #5
   1946c:	mov	r0, #1
   19470:	mov	r2, #16
   19474:	b	194a4 <sf_gen_atmfield_code+0x190>
   19478:	ldr	r0, [pc, #488]	; 19668 <sf_gen_atmfield_code+0x354>
   1947c:	add	r0, pc, r0
   19480:	ldrb	r0, [r0]
   19484:	cmp	r0, #0
   19488:	beq	19648 <sf_gen_atmfield_code+0x334>
   1948c:	ldr	r1, [pc, #472]	; 1966c <sf_gen_atmfield_code+0x358>
   19490:	ldr	r1, [pc, r1]
   19494:	cmn	r1, #1
   19498:	beq	19620 <sf_gen_atmfield_code+0x30c>
   1949c:	mov	r0, #1
   194a0:	mov	r2, #8
   194a4:	bl	17970 <gen_load_a>
   194a8:	mov	r7, r0
   194ac:	ldr	r0, [pc, #424]	; 1965c <sf_gen_atmfield_code+0x348>
   194b0:	ldr	r0, [pc, r0]
   194b4:	ldr	r6, [pc, #420]	; 19660 <sf_gen_atmfield_code+0x34c>
   194b8:	add	r6, pc, r6
   194bc:	ldr	r5, [r6, r0, lsl #3]!
   194c0:	cmp	r5, #207	; 0xcf
   194c4:	bhi	19518 <sf_gen_atmfield_code+0x204>
   194c8:	ldr	r2, [pc, #404]	; 19664 <sf_gen_atmfield_code+0x350>
   194cc:	add	r1, r0, #1
   194d0:	cmp	r0, #15
   194d4:	add	r2, pc, r2
   194d8:	str	r1, [r2]
   194dc:	bge	19624 <sf_gen_atmfield_code+0x310>
   194e0:	mov	r0, #1024	; 0x400
   194e4:	lsl	r5, r0, r1
   194e8:	mov	r0, r5
   194ec:	bl	dec <malloc@plt>
   194f0:	cmp	r0, #0
   194f4:	str	r0, [r6, #12]
   194f8:	beq	19624 <sf_gen_atmfield_code+0x310>
   194fc:	mov	r1, #0
   19500:	mov	r2, r5
   19504:	add	r6, r6, #8
   19508:	bl	e58 <memset@plt>
   1950c:	cmp	r5, #207	; 0xcf
   19510:	str	r5, [r6]
   19514:	bls	19624 <sf_gen_atmfield_code+0x310>
   19518:	sub	r0, r5, #208	; 0xd0
   1951c:	orr	r1, r4, #5
   19520:	str	r0, [r6]
   19524:	ldr	r2, [r6, #4]
   19528:	add	r0, r2, r0
   1952c:	str	sl, [r0, #20]
   19530:	str	r7, [r0, #4]
   19534:	cmp	r9, #0
   19538:	str	r1, [r0, #8]
   1953c:	str	r0, [r0, #96]	; 0x60
   19540:	beq	1955c <sf_gen_atmfield_code+0x248>
   19544:	orr	r1, r4, #16
   19548:	cmp	r1, #48	; 0x30
   1954c:	ldreq	r1, [r0, #44]	; 0x2c
   19550:	clzeq	r1, r1
   19554:	lsreq	r1, r1, #5
   19558:	streq	r1, [r0, #44]	; 0x2c
   1955c:	sub	sp, fp, #28
   19560:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19564:	mov	r8, r0
   19568:	sub	r1, r7, #20
   1956c:	mov	r2, #84	; 0x54
   19570:	str	r1, [r5]
   19574:	ldr	r0, [r5, #4]
   19578:	str	r2, [r0, r1]!
   1957c:	mov	r1, #15
   19580:	mov	r2, r3
   19584:	str	r1, [r0, #12]
   19588:	mov	r1, r2
   1958c:	ldr	r2, [r2, #16]
   19590:	cmp	r2, #0
   19594:	bne	19588 <sf_gen_atmfield_code+0x274>
   19598:	str	r0, [r1, #16]
   1959c:	ldr	r5, [r6, r8, lsl #3]!
   195a0:	cmp	r5, #207	; 0xcf
   195a4:	bhi	19600 <sf_gen_atmfield_code+0x2ec>
   195a8:	ldr	r1, [pc, #212]	; 19684 <sf_gen_atmfield_code+0x370>
   195ac:	add	r0, r8, #1
   195b0:	cmp	r8, #15
   195b4:	add	r1, pc, r1
   195b8:	str	r0, [r1]
   195bc:	bge	19624 <sf_gen_atmfield_code+0x310>
   195c0:	mov	r1, #1024	; 0x400
   195c4:	mov	r7, r3
   195c8:	lsl	r5, r1, r0
   195cc:	mov	r0, r5
   195d0:	bl	dec <malloc@plt>
   195d4:	cmp	r0, #0
   195d8:	str	r0, [r6, #12]
   195dc:	beq	19624 <sf_gen_atmfield_code+0x310>
   195e0:	mov	r1, #0
   195e4:	mov	r2, r5
   195e8:	add	r6, r6, #8
   195ec:	bl	e58 <memset@plt>
   195f0:	cmp	r5, #207	; 0xcf
   195f4:	mov	r3, r7
   195f8:	str	r5, [r6]
   195fc:	bls	19624 <sf_gen_atmfield_code+0x310>
   19600:	sub	r0, r5, #208	; 0xd0
   19604:	orr	r1, r4, #5
   19608:	str	r0, [r6]
   1960c:	ldr	r2, [r6, #4]
   19610:	add	r0, r2, r0
   19614:	str	sl, [r0, #20]
   19618:	str	r3, [r0, #4]
   1961c:	b	19534 <sf_gen_atmfield_code+0x220>
   19620:	bl	edc <abort@plt>
   19624:	ldr	r0, [pc, #68]	; 19670 <sf_gen_atmfield_code+0x35c>
   19628:	add	r0, pc, r0
   1962c:	bl	2068 <sf_bpf_error>
   19630:	ldr	r0, [pc, #92]	; 19694 <sf_gen_atmfield_code+0x380>
   19634:	add	r0, pc, r0
   19638:	bl	2068 <sf_bpf_error>
   1963c:	ldr	r0, [pc, #88]	; 1969c <sf_gen_atmfield_code+0x388>
   19640:	add	r0, pc, r0
   19644:	bl	2068 <sf_bpf_error>
   19648:	ldr	r0, [pc, #72]	; 19698 <sf_gen_atmfield_code+0x384>
   1964c:	add	r0, pc, r0
   19650:	bl	2068 <sf_bpf_error>
   19654:	.word	0x0002e0f8
   19658:	.word	0x0002e0e8
   1965c:	.word	0x0002e04c
   19660:	.word	0x0002dfc4
   19664:	.word	0x0002e028
   19668:	.word	0x0002dfd8
   1966c:	.word	0x0002dfcc
   19670:	.word	0x00011054
   19674:	.word	0x0002e0a8
   19678:	.word	0x0002e11c
   1967c:	.word	0x0002e094
   19680:	.word	0x0002e0f0
   19684:	.word	0x0002df48
   19688:	.word	0x0002e008
   1968c:	.word	0x0002e0d0
   19690:	.word	0x0002e0c8
   19694:	.word	0x00010ce5
   19698:	.word	0x00010ced
   1969c:	.word	0x00010d19

000196a0 <sf_gen_atmtype_abbrev>:
   196a0:	push	{r4, r5, fp, lr}
   196a4:	add	fp, sp, #8
   196a8:	sub	sp, sp, #8
   196ac:	sub	r0, r0, #22
   196b0:	cmp	r0, #9
   196b4:	bhi	19d94 <sf_gen_atmtype_abbrev+0x6f4>
   196b8:	add	r1, pc, #4
   196bc:	ldr	r0, [r1, r0, lsl #2]
   196c0:	add	pc, r1, r0
   196c4:	.word	0x00000028
   196c8:	.word	0x0000032c
   196cc:	.word	0x00000240
   196d0:	.word	0x00000114
   196d4:	.word	0x0000059c
   196d8:	.word	0x00000418
   196dc:	.word	0x000006d0
   196e0:	.word	0x000006d0
   196e4:	.word	0x00000504
   196e8:	.word	0x00000200
   196ec:	ldr	r0, [pc, #1796]	; 19df8 <sf_gen_atmtype_abbrev+0x758>
   196f0:	add	r0, pc, r0
   196f4:	ldrb	r0, [r0]
   196f8:	cmp	r0, #0
   196fc:	beq	19d98 <sf_gen_atmtype_abbrev+0x6f8>
   19700:	mov	r0, #51	; 0x33
   19704:	mov	r1, #0
   19708:	mov	r2, #16
   1970c:	mov	r3, #0
   19710:	bl	19314 <sf_gen_atmfield_code>
   19714:	mov	r5, r0
   19718:	mov	r0, #52	; 0x34
   1971c:	mov	r1, #1
   19720:	mov	r2, #16
   19724:	mov	r3, #0
   19728:	bl	19314 <sf_gen_atmfield_code>
   1972c:	cmp	r5, #0
   19730:	beq	19764 <sf_gen_atmtype_abbrev+0xc4>
   19734:	ldr	r1, [r0, #96]	; 0x60
   19738:	mov	r2, r5
   1973c:	ldr	r3, [r2, #44]	; 0x2c
   19740:	add	r4, r2, #84	; 0x54
   19744:	cmp	r3, #0
   19748:	mov	r3, #84	; 0x54
   1974c:	movweq	r3, #60	; 0x3c
   19750:	addeq	r4, r2, #60	; 0x3c
   19754:	ldr	r2, [r2, r3]
   19758:	str	r1, [r4]
   1975c:	cmp	r2, #0
   19760:	bne	1973c <sf_gen_atmtype_abbrev+0x9c>
   19764:	ldr	r1, [r5, #44]	; 0x2c
   19768:	cmp	r0, #0
   1976c:	clz	r1, r1
   19770:	lsr	r1, r1, #5
   19774:	str	r1, [r5, #44]	; 0x2c
   19778:	ldr	r2, [r0, #44]	; 0x2c
   1977c:	clz	r1, r2
   19780:	lsr	r1, r1, #5
   19784:	str	r1, [r0, #44]	; 0x2c
   19788:	str	r0, [sp, #4]
   1978c:	beq	19d74 <sf_gen_atmtype_abbrev+0x6d4>
   19790:	cmp	r2, #0
   19794:	mov	r2, #60	; 0x3c
   19798:	add	r1, r0, #60	; 0x3c
   1979c:	movweq	r2, #84	; 0x54
   197a0:	addeq	r1, r0, #84	; 0x54
   197a4:	ldr	r2, [r0, r2]
   197a8:	cmp	r2, #0
   197ac:	beq	19d78 <sf_gen_atmtype_abbrev+0x6d8>
   197b0:	ldr	r3, [r2, #44]	; 0x2c
   197b4:	add	r1, r2, #84	; 0x54
   197b8:	cmp	r3, #0
   197bc:	mov	r3, #84	; 0x54
   197c0:	movweq	r3, #60	; 0x3c
   197c4:	addeq	r1, r2, #60	; 0x3c
   197c8:	ldr	r2, [r2, r3]
   197cc:	cmp	r2, #0
   197d0:	bne	197b0 <sf_gen_atmtype_abbrev+0x110>
   197d4:	b	19d78 <sf_gen_atmtype_abbrev+0x6d8>
   197d8:	ldr	r0, [pc, #1572]	; 19e04 <sf_gen_atmtype_abbrev+0x764>
   197dc:	add	r0, pc, r0
   197e0:	ldrb	r0, [r0]
   197e4:	cmp	r0, #0
   197e8:	beq	19da4 <sf_gen_atmtype_abbrev+0x704>
   197ec:	mov	r0, #51	; 0x33
   197f0:	mov	r1, #0
   197f4:	mov	r2, #16
   197f8:	mov	r3, #0
   197fc:	bl	19314 <sf_gen_atmfield_code>
   19800:	mov	r4, r0
   19804:	mov	r0, #52	; 0x34
   19808:	mov	r1, #4
   1980c:	mov	r2, #16
   19810:	mov	r3, #0
   19814:	bl	19314 <sf_gen_atmfield_code>
   19818:	cmp	r4, #0
   1981c:	beq	19850 <sf_gen_atmtype_abbrev+0x1b0>
   19820:	ldr	r1, [r0, #96]	; 0x60
   19824:	mov	r2, r4
   19828:	ldr	r3, [r2, #44]	; 0x2c
   1982c:	add	r5, r2, #84	; 0x54
   19830:	cmp	r3, #0
   19834:	mov	r3, #84	; 0x54
   19838:	movweq	r3, #60	; 0x3c
   1983c:	addeq	r5, r2, #60	; 0x3c
   19840:	ldr	r2, [r2, r3]
   19844:	str	r1, [r5]
   19848:	cmp	r2, #0
   1984c:	bne	19828 <sf_gen_atmtype_abbrev+0x188>
   19850:	ldr	r1, [r4, #44]	; 0x2c
   19854:	cmp	r0, #0
   19858:	clz	r1, r1
   1985c:	lsr	r1, r1, #5
   19860:	str	r1, [r4, #44]	; 0x2c
   19864:	ldr	r2, [r0, #44]	; 0x2c
   19868:	clz	r1, r2
   1986c:	lsr	r1, r1, #5
   19870:	str	r1, [r0, #44]	; 0x2c
   19874:	str	r0, [sp, #4]
   19878:	beq	19d4c <sf_gen_atmtype_abbrev+0x6ac>
   1987c:	cmp	r2, #0
   19880:	mov	r2, #60	; 0x3c
   19884:	add	r1, r0, #60	; 0x3c
   19888:	movweq	r2, #84	; 0x54
   1988c:	addeq	r1, r0, #84	; 0x54
   19890:	ldr	r2, [r0, r2]
   19894:	cmp	r2, #0
   19898:	beq	19d50 <sf_gen_atmtype_abbrev+0x6b0>
   1989c:	ldr	r3, [r2, #44]	; 0x2c
   198a0:	add	r1, r2, #84	; 0x54
   198a4:	cmp	r3, #0
   198a8:	mov	r3, #84	; 0x54
   198ac:	movweq	r3, #60	; 0x3c
   198b0:	addeq	r1, r2, #60	; 0x3c
   198b4:	ldr	r2, [r2, r3]
   198b8:	cmp	r2, #0
   198bc:	bne	1989c <sf_gen_atmtype_abbrev+0x1fc>
   198c0:	b	19d50 <sf_gen_atmtype_abbrev+0x6b0>
   198c4:	ldr	r0, [pc, #1380]	; 19e30 <sf_gen_atmtype_abbrev+0x790>
   198c8:	add	r0, pc, r0
   198cc:	ldrb	r0, [r0]
   198d0:	cmp	r0, #0
   198d4:	beq	19db0 <sf_gen_atmtype_abbrev+0x710>
   198d8:	mov	r0, #53	; 0x35
   198dc:	mov	r1, #2
   198e0:	mov	r2, #16
   198e4:	mov	r3, #0
   198e8:	mov	r4, #0
   198ec:	bl	19314 <sf_gen_atmfield_code>
   198f0:	ldr	r1, [pc, #1340]	; 19e34 <sf_gen_atmtype_abbrev+0x794>
   198f4:	add	r1, pc, r1
   198f8:	strb	r4, [r1]
   198fc:	sub	sp, fp, #8
   19900:	pop	{r4, r5, fp, pc}
   19904:	ldr	r0, [pc, #1268]	; 19e00 <sf_gen_atmtype_abbrev+0x760>
   19908:	add	r0, pc, r0
   1990c:	ldrb	r0, [r0]
   19910:	cmp	r0, #0
   19914:	beq	19dbc <sf_gen_atmtype_abbrev+0x71c>
   19918:	mov	r0, #51	; 0x33
   1991c:	mov	r1, #0
   19920:	mov	r2, #16
   19924:	mov	r3, #0
   19928:	bl	19314 <sf_gen_atmfield_code>
   1992c:	mov	r4, r0
   19930:	mov	r0, #52	; 0x34
   19934:	mov	r1, #3
   19938:	mov	r2, #16
   1993c:	mov	r3, #0
   19940:	bl	19314 <sf_gen_atmfield_code>
   19944:	cmp	r4, #0
   19948:	beq	1997c <sf_gen_atmtype_abbrev+0x2dc>
   1994c:	ldr	r1, [r0, #96]	; 0x60
   19950:	mov	r2, r4
   19954:	ldr	r3, [r2, #44]	; 0x2c
   19958:	add	r5, r2, #84	; 0x54
   1995c:	cmp	r3, #0
   19960:	mov	r3, #84	; 0x54
   19964:	movweq	r3, #60	; 0x3c
   19968:	addeq	r5, r2, #60	; 0x3c
   1996c:	ldr	r2, [r2, r3]
   19970:	str	r1, [r5]
   19974:	cmp	r2, #0
   19978:	bne	19954 <sf_gen_atmtype_abbrev+0x2b4>
   1997c:	ldr	r1, [r4, #44]	; 0x2c
   19980:	cmp	r0, #0
   19984:	clz	r1, r1
   19988:	lsr	r1, r1, #5
   1998c:	str	r1, [r4, #44]	; 0x2c
   19990:	ldr	r2, [r0, #44]	; 0x2c
   19994:	clz	r1, r2
   19998:	lsr	r1, r1, #5
   1999c:	str	r1, [r0, #44]	; 0x2c
   199a0:	str	r0, [sp, #4]
   199a4:	beq	19d4c <sf_gen_atmtype_abbrev+0x6ac>
   199a8:	cmp	r2, #0
   199ac:	mov	r2, #60	; 0x3c
   199b0:	add	r1, r0, #60	; 0x3c
   199b4:	movweq	r2, #84	; 0x54
   199b8:	addeq	r1, r0, #84	; 0x54
   199bc:	ldr	r2, [r0, r2]
   199c0:	cmp	r2, #0
   199c4:	beq	19d50 <sf_gen_atmtype_abbrev+0x6b0>
   199c8:	ldr	r3, [r2, #44]	; 0x2c
   199cc:	add	r1, r2, #84	; 0x54
   199d0:	cmp	r3, #0
   199d4:	mov	r3, #84	; 0x54
   199d8:	movweq	r3, #60	; 0x3c
   199dc:	addeq	r1, r2, #60	; 0x3c
   199e0:	ldr	r2, [r2, r3]
   199e4:	cmp	r2, #0
   199e8:	bne	199c8 <sf_gen_atmtype_abbrev+0x328>
   199ec:	b	19d50 <sf_gen_atmtype_abbrev+0x6b0>
   199f0:	ldr	r0, [pc, #1028]	; 19dfc <sf_gen_atmtype_abbrev+0x75c>
   199f4:	add	r0, pc, r0
   199f8:	ldrb	r0, [r0]
   199fc:	cmp	r0, #0
   19a00:	beq	19dc8 <sf_gen_atmtype_abbrev+0x728>
   19a04:	mov	r0, #51	; 0x33
   19a08:	mov	r1, #0
   19a0c:	mov	r2, #16
   19a10:	mov	r3, #0
   19a14:	bl	19314 <sf_gen_atmfield_code>
   19a18:	mov	r4, r0
   19a1c:	mov	r0, #52	; 0x34
   19a20:	mov	r1, #2
   19a24:	mov	r2, #16
   19a28:	mov	r3, #0
   19a2c:	bl	19314 <sf_gen_atmfield_code>
   19a30:	cmp	r4, #0
   19a34:	beq	19a68 <sf_gen_atmtype_abbrev+0x3c8>
   19a38:	ldr	r1, [r0, #96]	; 0x60
   19a3c:	mov	r2, r4
   19a40:	ldr	r3, [r2, #44]	; 0x2c
   19a44:	add	r5, r2, #84	; 0x54
   19a48:	cmp	r3, #0
   19a4c:	mov	r3, #84	; 0x54
   19a50:	movweq	r3, #60	; 0x3c
   19a54:	addeq	r5, r2, #60	; 0x3c
   19a58:	ldr	r2, [r2, r3]
   19a5c:	str	r1, [r5]
   19a60:	cmp	r2, #0
   19a64:	bne	19a40 <sf_gen_atmtype_abbrev+0x3a0>
   19a68:	ldr	r1, [r4, #44]	; 0x2c
   19a6c:	cmp	r0, #0
   19a70:	clz	r1, r1
   19a74:	lsr	r1, r1, #5
   19a78:	str	r1, [r4, #44]	; 0x2c
   19a7c:	ldr	r2, [r0, #44]	; 0x2c
   19a80:	clz	r1, r2
   19a84:	lsr	r1, r1, #5
   19a88:	str	r1, [r0, #44]	; 0x2c
   19a8c:	str	r0, [sp, #4]
   19a90:	beq	19d4c <sf_gen_atmtype_abbrev+0x6ac>
   19a94:	cmp	r2, #0
   19a98:	mov	r2, #60	; 0x3c
   19a9c:	add	r1, r0, #60	; 0x3c
   19aa0:	movweq	r2, #84	; 0x54
   19aa4:	addeq	r1, r0, #84	; 0x54
   19aa8:	ldr	r2, [r0, r2]
   19aac:	cmp	r2, #0
   19ab0:	beq	19d50 <sf_gen_atmtype_abbrev+0x6b0>
   19ab4:	ldr	r3, [r2, #44]	; 0x2c
   19ab8:	add	r1, r2, #84	; 0x54
   19abc:	cmp	r3, #0
   19ac0:	mov	r3, #84	; 0x54
   19ac4:	movweq	r3, #60	; 0x3c
   19ac8:	addeq	r1, r2, #60	; 0x3c
   19acc:	ldr	r2, [r2, r3]
   19ad0:	cmp	r2, #0
   19ad4:	bne	19ab4 <sf_gen_atmtype_abbrev+0x414>
   19ad8:	b	19d50 <sf_gen_atmtype_abbrev+0x6b0>
   19adc:	ldr	r0, [pc, #808]	; 19e0c <sf_gen_atmtype_abbrev+0x76c>
   19ae0:	add	r0, pc, r0
   19ae4:	ldrb	r0, [r0]
   19ae8:	cmp	r0, #0
   19aec:	beq	19dd4 <sf_gen_atmtype_abbrev+0x734>
   19af0:	mov	r0, #51	; 0x33
   19af4:	mov	r1, #0
   19af8:	mov	r2, #16
   19afc:	mov	r3, #0
   19b00:	bl	19314 <sf_gen_atmfield_code>
   19b04:	mov	r4, r0
   19b08:	mov	r0, #52	; 0x34
   19b0c:	mov	r1, #16
   19b10:	mov	r2, #16
   19b14:	mov	r3, #0
   19b18:	bl	19314 <sf_gen_atmfield_code>
   19b1c:	cmp	r4, #0
   19b20:	beq	19b54 <sf_gen_atmtype_abbrev+0x4b4>
   19b24:	ldr	r1, [r0, #96]	; 0x60
   19b28:	mov	r2, r4
   19b2c:	ldr	r3, [r2, #44]	; 0x2c
   19b30:	add	r5, r2, #84	; 0x54
   19b34:	cmp	r3, #0
   19b38:	mov	r3, #84	; 0x54
   19b3c:	movweq	r3, #60	; 0x3c
   19b40:	addeq	r5, r2, #60	; 0x3c
   19b44:	ldr	r2, [r2, r3]
   19b48:	str	r1, [r5]
   19b4c:	cmp	r2, #0
   19b50:	bne	19b2c <sf_gen_atmtype_abbrev+0x48c>
   19b54:	ldr	r1, [r4, #44]	; 0x2c
   19b58:	cmp	r0, #0
   19b5c:	clz	r1, r1
   19b60:	lsr	r1, r1, #5
   19b64:	str	r1, [r4, #44]	; 0x2c
   19b68:	ldr	r2, [r0, #44]	; 0x2c
   19b6c:	clz	r1, r2
   19b70:	lsr	r1, r1, #5
   19b74:	str	r1, [r0, #44]	; 0x2c
   19b78:	str	r0, [sp, #4]
   19b7c:	beq	19d4c <sf_gen_atmtype_abbrev+0x6ac>
   19b80:	cmp	r2, #0
   19b84:	mov	r2, #60	; 0x3c
   19b88:	add	r1, r0, #60	; 0x3c
   19b8c:	movweq	r2, #84	; 0x54
   19b90:	addeq	r1, r0, #84	; 0x54
   19b94:	ldr	r2, [r0, r2]
   19b98:	cmp	r2, #0
   19b9c:	beq	19d50 <sf_gen_atmtype_abbrev+0x6b0>
   19ba0:	ldr	r3, [r2, #44]	; 0x2c
   19ba4:	add	r1, r2, #84	; 0x54
   19ba8:	cmp	r3, #0
   19bac:	mov	r3, #84	; 0x54
   19bb0:	movweq	r3, #60	; 0x3c
   19bb4:	addeq	r1, r2, #60	; 0x3c
   19bb8:	ldr	r2, [r2, r3]
   19bbc:	cmp	r2, #0
   19bc0:	bne	19ba0 <sf_gen_atmtype_abbrev+0x500>
   19bc4:	b	19d50 <sf_gen_atmtype_abbrev+0x6b0>
   19bc8:	ldr	r0, [pc, #576]	; 19e10 <sf_gen_atmtype_abbrev+0x770>
   19bcc:	add	r0, pc, r0
   19bd0:	ldrb	r0, [r0]
   19bd4:	cmp	r0, #0
   19bd8:	beq	19de0 <sf_gen_atmtype_abbrev+0x740>
   19bdc:	mov	r0, #53	; 0x35
   19be0:	mov	r1, #1
   19be4:	mov	r2, #16
   19be8:	mov	r3, #0
   19bec:	mov	r4, #1
   19bf0:	mov	r5, #0
   19bf4:	bl	19314 <sf_gen_atmfield_code>
   19bf8:	ldr	r1, [pc, #532]	; 19e14 <sf_gen_atmtype_abbrev+0x774>
   19bfc:	mov	r2, #3
   19c00:	add	r1, pc, r1
   19c04:	strb	r4, [r1]
   19c08:	ldr	r1, [pc, #520]	; 19e18 <sf_gen_atmtype_abbrev+0x778>
   19c0c:	add	r1, pc, r1
   19c10:	str	r5, [r1]
   19c14:	ldr	r1, [pc, #512]	; 19e1c <sf_gen_atmtype_abbrev+0x77c>
   19c18:	add	r1, pc, r1
   19c1c:	str	r2, [r1]
   19c20:	ldr	r1, [pc, #504]	; 19e20 <sf_gen_atmtype_abbrev+0x780>
   19c24:	ldr	r1, [pc, r1]
   19c28:	ldr	r3, [pc, #500]	; 19e24 <sf_gen_atmtype_abbrev+0x784>
   19c2c:	add	r2, r1, #2
   19c30:	add	r3, pc, r3
   19c34:	str	r2, [r3]
   19c38:	add	r2, r1, #14
   19c3c:	add	r1, r1, #16
   19c40:	ldr	r3, [pc, #480]	; 19e28 <sf_gen_atmtype_abbrev+0x788>
   19c44:	add	r3, pc, r3
   19c48:	str	r2, [r3]
   19c4c:	ldr	r2, [pc, #472]	; 19e2c <sf_gen_atmtype_abbrev+0x78c>
   19c50:	add	r2, pc, r2
   19c54:	str	r1, [r2]
   19c58:	sub	sp, fp, #8
   19c5c:	pop	{r4, r5, fp, pc}
   19c60:	ldr	r0, [pc, #416]	; 19e08 <sf_gen_atmtype_abbrev+0x768>
   19c64:	add	r0, pc, r0
   19c68:	ldrb	r0, [r0]
   19c6c:	cmp	r0, #0
   19c70:	beq	19dec <sf_gen_atmtype_abbrev+0x74c>
   19c74:	mov	r0, #51	; 0x33
   19c78:	mov	r1, #0
   19c7c:	mov	r2, #16
   19c80:	mov	r3, #0
   19c84:	bl	19314 <sf_gen_atmfield_code>
   19c88:	mov	r4, r0
   19c8c:	mov	r0, #52	; 0x34
   19c90:	mov	r1, #5
   19c94:	mov	r2, #16
   19c98:	mov	r3, #0
   19c9c:	bl	19314 <sf_gen_atmfield_code>
   19ca0:	cmp	r4, #0
   19ca4:	beq	19cd8 <sf_gen_atmtype_abbrev+0x638>
   19ca8:	ldr	r1, [r0, #96]	; 0x60
   19cac:	mov	r2, r4
   19cb0:	ldr	r3, [r2, #44]	; 0x2c
   19cb4:	add	r5, r2, #84	; 0x54
   19cb8:	cmp	r3, #0
   19cbc:	mov	r3, #84	; 0x54
   19cc0:	movweq	r3, #60	; 0x3c
   19cc4:	addeq	r5, r2, #60	; 0x3c
   19cc8:	ldr	r2, [r2, r3]
   19ccc:	str	r1, [r5]
   19cd0:	cmp	r2, #0
   19cd4:	bne	19cb0 <sf_gen_atmtype_abbrev+0x610>
   19cd8:	ldr	r1, [r4, #44]	; 0x2c
   19cdc:	cmp	r0, #0
   19ce0:	clz	r1, r1
   19ce4:	lsr	r1, r1, #5
   19ce8:	str	r1, [r4, #44]	; 0x2c
   19cec:	ldr	r2, [r0, #44]	; 0x2c
   19cf0:	clz	r1, r2
   19cf4:	lsr	r1, r1, #5
   19cf8:	str	r1, [r0, #44]	; 0x2c
   19cfc:	str	r0, [sp, #4]
   19d00:	beq	19d4c <sf_gen_atmtype_abbrev+0x6ac>
   19d04:	cmp	r2, #0
   19d08:	mov	r2, #60	; 0x3c
   19d0c:	add	r1, r0, #60	; 0x3c
   19d10:	movweq	r2, #84	; 0x54
   19d14:	addeq	r1, r0, #84	; 0x54
   19d18:	ldr	r2, [r0, r2]
   19d1c:	cmp	r2, #0
   19d20:	beq	19d50 <sf_gen_atmtype_abbrev+0x6b0>
   19d24:	ldr	r3, [r2, #44]	; 0x2c
   19d28:	add	r1, r2, #84	; 0x54
   19d2c:	cmp	r3, #0
   19d30:	mov	r3, #84	; 0x54
   19d34:	movweq	r3, #60	; 0x3c
   19d38:	addeq	r1, r2, #60	; 0x3c
   19d3c:	ldr	r2, [r2, r3]
   19d40:	cmp	r2, #0
   19d44:	bne	19d24 <sf_gen_atmtype_abbrev+0x684>
   19d48:	b	19d50 <sf_gen_atmtype_abbrev+0x6b0>
   19d4c:	add	r1, sp, #4
   19d50:	str	r4, [r1]
   19d54:	ldr	r1, [r0, #44]	; 0x2c
   19d58:	clz	r1, r1
   19d5c:	lsr	r1, r1, #5
   19d60:	str	r1, [r0, #44]	; 0x2c
   19d64:	ldr	r1, [r4, #96]	; 0x60
   19d68:	str	r1, [r0, #96]	; 0x60
   19d6c:	sub	sp, fp, #8
   19d70:	pop	{r4, r5, fp, pc}
   19d74:	add	r1, sp, #4
   19d78:	str	r5, [r1]
   19d7c:	ldr	r1, [r0, #44]	; 0x2c
   19d80:	clz	r1, r1
   19d84:	lsr	r1, r1, #5
   19d88:	str	r1, [r0, #44]	; 0x2c
   19d8c:	ldr	r1, [r5, #96]	; 0x60
   19d90:	b	19d68 <sf_gen_atmtype_abbrev+0x6c8>
   19d94:	bl	edc <abort@plt>
   19d98:	ldr	r0, [pc, #152]	; 19e38 <sf_gen_atmtype_abbrev+0x798>
   19d9c:	add	r0, pc, r0
   19da0:	bl	2068 <sf_bpf_error>
   19da4:	ldr	r0, [pc, #152]	; 19e44 <sf_gen_atmtype_abbrev+0x7a4>
   19da8:	add	r0, pc, r0
   19dac:	bl	2068 <sf_bpf_error>
   19db0:	ldr	r0, [pc, #156]	; 19e54 <sf_gen_atmtype_abbrev+0x7b4>
   19db4:	add	r0, pc, r0
   19db8:	bl	2068 <sf_bpf_error>
   19dbc:	ldr	r0, [pc, #124]	; 19e40 <sf_gen_atmtype_abbrev+0x7a0>
   19dc0:	add	r0, pc, r0
   19dc4:	bl	2068 <sf_bpf_error>
   19dc8:	ldr	r0, [pc, #108]	; 19e3c <sf_gen_atmtype_abbrev+0x79c>
   19dcc:	add	r0, pc, r0
   19dd0:	bl	2068 <sf_bpf_error>
   19dd4:	ldr	r0, [pc, #112]	; 19e4c <sf_gen_atmtype_abbrev+0x7ac>
   19dd8:	add	r0, pc, r0
   19ddc:	bl	2068 <sf_bpf_error>
   19de0:	ldr	r0, [pc, #104]	; 19e50 <sf_gen_atmtype_abbrev+0x7b0>
   19de4:	add	r0, pc, r0
   19de8:	bl	2068 <sf_bpf_error>
   19dec:	ldr	r0, [pc, #84]	; 19e48 <sf_gen_atmtype_abbrev+0x7a8>
   19df0:	add	r0, pc, r0
   19df4:	bl	2068 <sf_bpf_error>
   19df8:	.word	0x0002dd64
   19dfc:	.word	0x0002da60
   19e00:	.word	0x0002db4c
   19e04:	.word	0x0002dc78
   19e08:	.word	0x0002d7f0
   19e0c:	.word	0x0002d974
   19e10:	.word	0x0002d888
   19e14:	.word	0x0002d834
   19e18:	.word	0x0002d834
   19e1c:	.word	0x0002d834
   19e20:	.word	0x0002d840
   19e24:	.word	0x0002d818
   19e28:	.word	0x0002d7f4
   19e2c:	.word	0x0002d7ec
   19e30:	.word	0x0002db8c
   19e34:	.word	0x0002db40
   19e38:	.word	0x000105e1
   19e3c:	.word	0x000105d3
   19e40:	.word	0x000105ff
   19e44:	.word	0x0001063a
   19e48:	.word	0x00010615
   19e4c:	.word	0x0001064c
   19e50:	.word	0x00010662
   19e54:	.word	0x000106b3

00019e58 <sf_gen_mtp2type_abbrev>:
   19e58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19e5c:	add	fp, sp, #28
   19e60:	sub	sp, sp, #12
   19e64:	cmp	r0, #24
   19e68:	beq	19fac <sf_gen_mtp2type_abbrev+0x154>
   19e6c:	cmp	r0, #23
   19e70:	beq	19f14 <sf_gen_mtp2type_abbrev+0xbc>
   19e74:	cmp	r0, #22
   19e78:	bne	1a694 <sf_gen_mtp2type_abbrev+0x83c>
   19e7c:	ldr	r0, [pc, #2104]	; 1a6bc <sf_gen_mtp2type_abbrev+0x864>
   19e80:	ldr	r0, [pc, r0]
   19e84:	sub	r1, r0, #139	; 0x8b
   19e88:	cmp	r1, #2
   19e8c:	bcc	19e98 <sf_gen_mtp2type_abbrev+0x40>
   19e90:	cmp	r0, #197	; 0xc5
   19e94:	bne	1a698 <sf_gen_mtp2type_abbrev+0x840>
   19e98:	ldr	r0, [pc, #2080]	; 1a6c0 <sf_gen_mtp2type_abbrev+0x868>
   19e9c:	ldr	r0, [pc, r0]
   19ea0:	ldr	sl, [pc, #2076]	; 1a6c4 <sf_gen_mtp2type_abbrev+0x86c>
   19ea4:	add	sl, pc, sl
   19ea8:	mov	r5, sl
   19eac:	ldr	r4, [r5, r0, lsl #3]!
   19eb0:	ldr	r9, [pc, #2064]	; 1a6c8 <sf_gen_mtp2type_abbrev+0x870>
   19eb4:	ldr	r9, [pc, r9]
   19eb8:	cmp	r4, #19
   19ebc:	bhi	1a044 <sf_gen_mtp2type_abbrev+0x1ec>
   19ec0:	ldr	r1, [pc, #2052]	; 1a6cc <sf_gen_mtp2type_abbrev+0x874>
   19ec4:	add	r7, r0, #1
   19ec8:	cmp	r0, #15
   19ecc:	add	r1, pc, r1
   19ed0:	str	r7, [r1]
   19ed4:	bge	1a688 <sf_gen_mtp2type_abbrev+0x830>
   19ed8:	mov	r0, #1024	; 0x400
   19edc:	lsl	r4, r0, r7
   19ee0:	mov	r0, r4
   19ee4:	bl	dec <malloc@plt>
   19ee8:	cmp	r0, #0
   19eec:	str	r0, [r5, #12]
   19ef0:	beq	1a688 <sf_gen_mtp2type_abbrev+0x830>
   19ef4:	mov	r1, #0
   19ef8:	mov	r2, r4
   19efc:	add	r5, r5, #8
   19f00:	bl	e58 <memset@plt>
   19f04:	cmp	r4, #19
   19f08:	str	r4, [r5]
   19f0c:	bhi	1a048 <sf_gen_mtp2type_abbrev+0x1f0>
   19f10:	b	1a688 <sf_gen_mtp2type_abbrev+0x830>
   19f14:	ldr	r0, [pc, #1980]	; 1a6d8 <sf_gen_mtp2type_abbrev+0x880>
   19f18:	ldr	r0, [pc, r0]
   19f1c:	sub	r1, r0, #139	; 0x8b
   19f20:	cmp	r1, #2
   19f24:	bcc	19f30 <sf_gen_mtp2type_abbrev+0xd8>
   19f28:	cmp	r0, #197	; 0xc5
   19f2c:	bne	1a6a4 <sf_gen_mtp2type_abbrev+0x84c>
   19f30:	ldr	r0, [pc, #1956]	; 1a6dc <sf_gen_mtp2type_abbrev+0x884>
   19f34:	ldr	r0, [pc, r0]
   19f38:	ldr	r9, [pc, #1952]	; 1a6e0 <sf_gen_mtp2type_abbrev+0x888>
   19f3c:	add	r9, pc, r9
   19f40:	mov	r5, r9
   19f44:	ldr	r4, [r5, r0, lsl #3]!
   19f48:	ldr	r8, [pc, #1940]	; 1a6e4 <sf_gen_mtp2type_abbrev+0x88c>
   19f4c:	ldr	r8, [pc, r8]
   19f50:	cmp	r4, #19
   19f54:	bhi	1a0c4 <sf_gen_mtp2type_abbrev+0x26c>
   19f58:	ldr	r1, [pc, #1928]	; 1a6e8 <sf_gen_mtp2type_abbrev+0x890>
   19f5c:	add	r6, r0, #1
   19f60:	cmp	r0, #15
   19f64:	add	r1, pc, r1
   19f68:	str	r6, [r1]
   19f6c:	bge	1a688 <sf_gen_mtp2type_abbrev+0x830>
   19f70:	mov	r0, #1024	; 0x400
   19f74:	lsl	r4, r0, r6
   19f78:	mov	r0, r4
   19f7c:	bl	dec <malloc@plt>
   19f80:	cmp	r0, #0
   19f84:	str	r0, [r5, #12]
   19f88:	beq	1a688 <sf_gen_mtp2type_abbrev+0x830>
   19f8c:	mov	r1, #0
   19f90:	mov	r2, r4
   19f94:	add	r5, r5, #8
   19f98:	bl	e58 <memset@plt>
   19f9c:	cmp	r4, #19
   19fa0:	str	r4, [r5]
   19fa4:	bhi	1a0c8 <sf_gen_mtp2type_abbrev+0x270>
   19fa8:	b	1a688 <sf_gen_mtp2type_abbrev+0x830>
   19fac:	ldr	r0, [pc, #1868]	; 1a700 <sf_gen_mtp2type_abbrev+0x8a8>
   19fb0:	ldr	r0, [pc, r0]
   19fb4:	sub	r1, r0, #139	; 0x8b
   19fb8:	cmp	r1, #2
   19fbc:	bcc	19fc8 <sf_gen_mtp2type_abbrev+0x170>
   19fc0:	cmp	r0, #197	; 0xc5
   19fc4:	bne	1a6b0 <sf_gen_mtp2type_abbrev+0x858>
   19fc8:	ldr	r0, [pc, #1844]	; 1a704 <sf_gen_mtp2type_abbrev+0x8ac>
   19fcc:	ldr	r0, [pc, r0]
   19fd0:	ldr	sl, [pc, #1840]	; 1a708 <sf_gen_mtp2type_abbrev+0x8b0>
   19fd4:	add	sl, pc, sl
   19fd8:	mov	r5, sl
   19fdc:	ldr	r4, [r5, r0, lsl #3]!
   19fe0:	ldr	r9, [pc, #1828]	; 1a70c <sf_gen_mtp2type_abbrev+0x8b4>
   19fe4:	ldr	r9, [pc, r9]
   19fe8:	cmp	r4, #19
   19fec:	bhi	1a1f4 <sf_gen_mtp2type_abbrev+0x39c>
   19ff0:	ldr	r1, [pc, #1816]	; 1a710 <sf_gen_mtp2type_abbrev+0x8b8>
   19ff4:	add	r7, r0, #1
   19ff8:	cmp	r0, #15
   19ffc:	add	r1, pc, r1
   1a000:	str	r7, [r1]
   1a004:	bge	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a008:	mov	r0, #1024	; 0x400
   1a00c:	lsl	r4, r0, r7
   1a010:	mov	r0, r4
   1a014:	bl	dec <malloc@plt>
   1a018:	cmp	r0, #0
   1a01c:	str	r0, [r5, #12]
   1a020:	beq	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a024:	mov	r1, #0
   1a028:	mov	r2, r4
   1a02c:	add	r5, r5, #8
   1a030:	bl	e58 <memset@plt>
   1a034:	cmp	r4, #19
   1a038:	str	r4, [r5]
   1a03c:	bhi	1a1f8 <sf_gen_mtp2type_abbrev+0x3a0>
   1a040:	b	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a044:	mov	r7, r0
   1a048:	sub	r0, r4, #20
   1a04c:	mov	r1, #48	; 0x30
   1a050:	mov	r6, sl
   1a054:	str	r0, [r5]
   1a058:	ldr	r8, [r5, #4]
   1a05c:	str	r1, [r8, r0]!
   1a060:	str	r9, [r8, #12]
   1a064:	ldr	r4, [r6, r7, lsl #3]!
   1a068:	cmp	r4, #19
   1a06c:	bhi	1a144 <sf_gen_mtp2type_abbrev+0x2ec>
   1a070:	ldr	r0, [pc, #1624]	; 1a6d0 <sf_gen_mtp2type_abbrev+0x878>
   1a074:	add	r5, r7, #1
   1a078:	cmp	r7, #15
   1a07c:	add	r0, pc, r0
   1a080:	str	r5, [r0]
   1a084:	bge	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a088:	mov	r0, #1024	; 0x400
   1a08c:	lsl	r4, r0, r5
   1a090:	mov	r0, r4
   1a094:	bl	dec <malloc@plt>
   1a098:	cmp	r0, #0
   1a09c:	str	r0, [r6, #12]
   1a0a0:	beq	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a0a4:	mov	r1, #0
   1a0a8:	mov	r2, r4
   1a0ac:	add	r6, r6, #8
   1a0b0:	bl	e58 <memset@plt>
   1a0b4:	cmp	r4, #19
   1a0b8:	str	r4, [r6]
   1a0bc:	bhi	1a148 <sf_gen_mtp2type_abbrev+0x2f0>
   1a0c0:	b	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a0c4:	mov	r6, r0
   1a0c8:	sub	r0, r4, #20
   1a0cc:	mov	r1, #48	; 0x30
   1a0d0:	mov	r7, r9
   1a0d4:	str	r0, [r5]
   1a0d8:	ldr	sl, [r5, #4]
   1a0dc:	str	r1, [sl, r0]!
   1a0e0:	str	r8, [sl, #12]
   1a0e4:	ldr	r4, [r7, r6, lsl #3]!
   1a0e8:	cmp	r4, #19
   1a0ec:	bhi	1a274 <sf_gen_mtp2type_abbrev+0x41c>
   1a0f0:	ldr	r0, [pc, #1524]	; 1a6ec <sf_gen_mtp2type_abbrev+0x894>
   1a0f4:	add	r5, r6, #1
   1a0f8:	cmp	r6, #15
   1a0fc:	add	r0, pc, r0
   1a100:	str	r5, [r0]
   1a104:	bge	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a108:	mov	r0, #1024	; 0x400
   1a10c:	lsl	r4, r0, r5
   1a110:	mov	r0, r4
   1a114:	bl	dec <malloc@plt>
   1a118:	cmp	r0, #0
   1a11c:	str	r0, [r7, #12]
   1a120:	beq	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a124:	mov	r1, #0
   1a128:	mov	r2, r4
   1a12c:	add	r7, r7, #8
   1a130:	bl	e58 <memset@plt>
   1a134:	cmp	r4, #19
   1a138:	str	r4, [r7]
   1a13c:	bhi	1a278 <sf_gen_mtp2type_abbrev+0x420>
   1a140:	b	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a144:	mov	r5, r7
   1a148:	sub	r1, r4, #20
   1a14c:	mov	r2, #84	; 0x54
   1a150:	str	r1, [r6]
   1a154:	ldr	r0, [r6, #4]
   1a158:	str	r2, [r0, r1]!
   1a15c:	mov	r1, #63	; 0x3f
   1a160:	mov	r2, r8
   1a164:	str	r1, [r0, #12]
   1a168:	mov	r1, r2
   1a16c:	ldr	r2, [r2, #16]
   1a170:	cmp	r2, #0
   1a174:	bne	1a168 <sf_gen_mtp2type_abbrev+0x310>
   1a178:	str	r0, [r1, #16]
   1a17c:	ldr	r4, [sl, r5, lsl #3]!
   1a180:	cmp	r4, #207	; 0xcf
   1a184:	bhi	1a1d8 <sf_gen_mtp2type_abbrev+0x380>
   1a188:	ldr	r1, [pc, #1348]	; 1a6d4 <sf_gen_mtp2type_abbrev+0x87c>
   1a18c:	add	r0, r5, #1
   1a190:	cmp	r5, #15
   1a194:	add	r1, pc, r1
   1a198:	str	r0, [r1]
   1a19c:	bge	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a1a0:	mov	r1, #1024	; 0x400
   1a1a4:	lsl	r4, r1, r0
   1a1a8:	mov	r0, r4
   1a1ac:	bl	dec <malloc@plt>
   1a1b0:	cmp	r0, #0
   1a1b4:	str	r0, [sl, #12]
   1a1b8:	beq	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a1bc:	mov	r1, #0
   1a1c0:	mov	r2, r4
   1a1c4:	add	sl, sl, #8
   1a1c8:	bl	e58 <memset@plt>
   1a1cc:	cmp	r4, #207	; 0xcf
   1a1d0:	str	r4, [sl]
   1a1d4:	bls	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a1d8:	sub	r0, r4, #208	; 0xd0
   1a1dc:	str	r0, [sl]
   1a1e0:	ldr	r1, [sl, #4]
   1a1e4:	add	r4, r1, r0
   1a1e8:	mov	r0, #21
   1a1ec:	mov	r1, #0
   1a1f0:	b	1a3c0 <sf_gen_mtp2type_abbrev+0x568>
   1a1f4:	mov	r7, r0
   1a1f8:	sub	r0, r4, #20
   1a1fc:	mov	r1, #48	; 0x30
   1a200:	mov	r6, sl
   1a204:	str	r0, [r5]
   1a208:	ldr	r8, [r5, #4]
   1a20c:	str	r1, [r8, r0]!
   1a210:	str	r9, [r8, #12]
   1a214:	ldr	r4, [r6, r7, lsl #3]!
   1a218:	cmp	r4, #19
   1a21c:	bhi	1a314 <sf_gen_mtp2type_abbrev+0x4bc>
   1a220:	ldr	r0, [pc, #1260]	; 1a714 <sf_gen_mtp2type_abbrev+0x8bc>
   1a224:	add	r5, r7, #1
   1a228:	cmp	r7, #15
   1a22c:	add	r0, pc, r0
   1a230:	str	r5, [r0]
   1a234:	bge	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a238:	mov	r0, #1024	; 0x400
   1a23c:	lsl	r4, r0, r5
   1a240:	mov	r0, r4
   1a244:	bl	dec <malloc@plt>
   1a248:	cmp	r0, #0
   1a24c:	str	r0, [r6, #12]
   1a250:	beq	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a254:	mov	r1, #0
   1a258:	mov	r2, r4
   1a25c:	add	r6, r6, #8
   1a260:	bl	e58 <memset@plt>
   1a264:	cmp	r4, #19
   1a268:	str	r4, [r6]
   1a26c:	bhi	1a318 <sf_gen_mtp2type_abbrev+0x4c0>
   1a270:	b	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a274:	mov	r5, r6
   1a278:	sub	r1, r4, #20
   1a27c:	mov	r2, #84	; 0x54
   1a280:	str	r1, [r7]
   1a284:	ldr	r0, [r7, #4]
   1a288:	str	r2, [r0, r1]!
   1a28c:	mov	r1, #63	; 0x3f
   1a290:	mov	r2, sl
   1a294:	str	r1, [r0, #12]
   1a298:	mov	r1, r2
   1a29c:	ldr	r2, [r2, #16]
   1a2a0:	cmp	r2, #0
   1a2a4:	bne	1a298 <sf_gen_mtp2type_abbrev+0x440>
   1a2a8:	str	r0, [r1, #16]
   1a2ac:	mov	r6, r9
   1a2b0:	str	r8, [sp, #4]
   1a2b4:	ldr	r4, [r6, r5, lsl #3]!
   1a2b8:	cmp	r4, #207	; 0xcf
   1a2bc:	bhi	1a3d4 <sf_gen_mtp2type_abbrev+0x57c>
   1a2c0:	ldr	r0, [pc, #1064]	; 1a6f0 <sf_gen_mtp2type_abbrev+0x898>
   1a2c4:	add	r8, r5, #1
   1a2c8:	cmp	r5, #15
   1a2cc:	add	r0, pc, r0
   1a2d0:	str	r8, [r0]
   1a2d4:	bge	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a2d8:	mov	r0, #1024	; 0x400
   1a2dc:	lsl	r4, r0, r8
   1a2e0:	mov	r0, r4
   1a2e4:	bl	dec <malloc@plt>
   1a2e8:	cmp	r0, #0
   1a2ec:	str	r0, [r6, #12]
   1a2f0:	beq	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a2f4:	mov	r1, #0
   1a2f8:	mov	r2, r4
   1a2fc:	add	r6, r6, #8
   1a300:	bl	e58 <memset@plt>
   1a304:	cmp	r4, #207	; 0xcf
   1a308:	str	r4, [r6]
   1a30c:	bhi	1a3d8 <sf_gen_mtp2type_abbrev+0x580>
   1a310:	b	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a314:	mov	r5, r7
   1a318:	sub	r1, r4, #20
   1a31c:	mov	r2, #84	; 0x54
   1a320:	str	r1, [r6]
   1a324:	ldr	r0, [r6, #4]
   1a328:	str	r2, [r0, r1]!
   1a32c:	mov	r1, #63	; 0x3f
   1a330:	mov	r2, r8
   1a334:	str	r1, [r0, #12]
   1a338:	mov	r1, r2
   1a33c:	ldr	r2, [r2, #16]
   1a340:	cmp	r2, #0
   1a344:	bne	1a338 <sf_gen_mtp2type_abbrev+0x4e0>
   1a348:	str	r0, [r1, #16]
   1a34c:	ldr	r4, [sl, r5, lsl #3]!
   1a350:	cmp	r4, #207	; 0xcf
   1a354:	bhi	1a3a8 <sf_gen_mtp2type_abbrev+0x550>
   1a358:	ldr	r1, [pc, #952]	; 1a718 <sf_gen_mtp2type_abbrev+0x8c0>
   1a35c:	add	r0, r5, #1
   1a360:	cmp	r5, #15
   1a364:	add	r1, pc, r1
   1a368:	str	r0, [r1]
   1a36c:	bge	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a370:	mov	r1, #1024	; 0x400
   1a374:	lsl	r4, r1, r0
   1a378:	mov	r0, r4
   1a37c:	bl	dec <malloc@plt>
   1a380:	cmp	r0, #0
   1a384:	str	r0, [sl, #12]
   1a388:	beq	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a38c:	mov	r1, #0
   1a390:	mov	r2, r4
   1a394:	add	sl, sl, #8
   1a398:	bl	e58 <memset@plt>
   1a39c:	cmp	r4, #207	; 0xcf
   1a3a0:	str	r4, [sl]
   1a3a4:	bls	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a3a8:	sub	r0, r4, #208	; 0xd0
   1a3ac:	str	r0, [sl]
   1a3b0:	ldr	r1, [sl, #4]
   1a3b4:	add	r4, r1, r0
   1a3b8:	mov	r0, #37	; 0x25
   1a3bc:	mov	r1, #2
   1a3c0:	str	r1, [r4, #20]
   1a3c4:	str	r8, [r4, #4]
   1a3c8:	str	r0, [r4, #8]
   1a3cc:	str	r4, [r4, #96]	; 0x60
   1a3d0:	b	1a67c <sf_gen_mtp2type_abbrev+0x824>
   1a3d4:	mov	r8, r5
   1a3d8:	sub	r0, r4, #208	; 0xd0
   1a3dc:	mov	r7, r9
   1a3e0:	str	r0, [r6]
   1a3e4:	ldr	r1, [r6, #4]
   1a3e8:	add	r4, r1, r0
   1a3ec:	mov	r1, #2
   1a3f0:	mov	r0, #37	; 0x25
   1a3f4:	str	r1, [r4, #20]
   1a3f8:	str	sl, [r4, #4]
   1a3fc:	str	r0, [r4, #8]
   1a400:	ldr	r0, [r4, #44]	; 0x2c
   1a404:	clz	r0, r0
   1a408:	lsr	r0, r0, #5
   1a40c:	str	r0, [r4, #44]	; 0x2c
   1a410:	str	r4, [r4, #96]	; 0x60
   1a414:	ldr	r5, [r7, r8, lsl #3]!
   1a418:	cmp	r5, #19
   1a41c:	bhi	1a478 <sf_gen_mtp2type_abbrev+0x620>
   1a420:	ldr	r0, [pc, #716]	; 1a6f4 <sf_gen_mtp2type_abbrev+0x89c>
   1a424:	add	r6, r8, #1
   1a428:	cmp	r8, #15
   1a42c:	add	r0, pc, r0
   1a430:	str	r6, [r0]
   1a434:	bge	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a438:	mov	r0, #1024	; 0x400
   1a43c:	lsl	r5, r0, r6
   1a440:	mov	r0, r5
   1a444:	bl	dec <malloc@plt>
   1a448:	ldr	r8, [sp, #4]
   1a44c:	cmp	r0, #0
   1a450:	str	r0, [r7, #12]
   1a454:	beq	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a458:	mov	r1, #0
   1a45c:	mov	r2, r5
   1a460:	add	r7, r7, #8
   1a464:	bl	e58 <memset@plt>
   1a468:	cmp	r5, #19
   1a46c:	str	r5, [r7]
   1a470:	bhi	1a480 <sf_gen_mtp2type_abbrev+0x628>
   1a474:	b	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a478:	mov	r6, r8
   1a47c:	ldr	r8, [sp, #4]
   1a480:	sub	r0, r5, #20
   1a484:	mov	r1, #48	; 0x30
   1a488:	str	r0, [r7]
   1a48c:	ldr	sl, [r7, #4]
   1a490:	mov	r7, r9
   1a494:	str	r1, [sl, r0]!
   1a498:	str	r8, [sl, #12]
   1a49c:	ldr	r5, [r7, r6, lsl #3]!
   1a4a0:	cmp	r5, #19
   1a4a4:	bhi	1a4fc <sf_gen_mtp2type_abbrev+0x6a4>
   1a4a8:	ldr	r0, [pc, #584]	; 1a6f8 <sf_gen_mtp2type_abbrev+0x8a0>
   1a4ac:	add	r8, r6, #1
   1a4b0:	cmp	r6, #15
   1a4b4:	add	r0, pc, r0
   1a4b8:	str	r8, [r0]
   1a4bc:	bge	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a4c0:	mov	r0, #1024	; 0x400
   1a4c4:	lsl	r5, r0, r8
   1a4c8:	mov	r0, r5
   1a4cc:	bl	dec <malloc@plt>
   1a4d0:	cmp	r0, #0
   1a4d4:	str	r0, [r7, #12]
   1a4d8:	beq	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a4dc:	mov	r1, #0
   1a4e0:	mov	r2, r5
   1a4e4:	add	r7, r7, #8
   1a4e8:	bl	e58 <memset@plt>
   1a4ec:	cmp	r5, #19
   1a4f0:	str	r5, [r7]
   1a4f4:	bhi	1a500 <sf_gen_mtp2type_abbrev+0x6a8>
   1a4f8:	b	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a4fc:	mov	r8, r6
   1a500:	sub	r1, r5, #20
   1a504:	mov	r2, #84	; 0x54
   1a508:	str	r1, [r7]
   1a50c:	ldr	r0, [r7, #4]
   1a510:	str	r2, [r0, r1]!
   1a514:	mov	r1, #63	; 0x3f
   1a518:	mov	r2, sl
   1a51c:	str	r1, [r0, #12]
   1a520:	mov	r1, r2
   1a524:	ldr	r2, [r2, #16]
   1a528:	cmp	r2, #0
   1a52c:	bne	1a520 <sf_gen_mtp2type_abbrev+0x6c8>
   1a530:	str	r0, [r1, #16]
   1a534:	ldr	r5, [r9, r8, lsl #3]!
   1a538:	cmp	r5, #207	; 0xcf
   1a53c:	bhi	1a590 <sf_gen_mtp2type_abbrev+0x738>
   1a540:	ldr	r1, [pc, #436]	; 1a6fc <sf_gen_mtp2type_abbrev+0x8a4>
   1a544:	add	r0, r8, #1
   1a548:	cmp	r8, #15
   1a54c:	add	r1, pc, r1
   1a550:	str	r0, [r1]
   1a554:	bge	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a558:	mov	r1, #1024	; 0x400
   1a55c:	lsl	r5, r1, r0
   1a560:	mov	r0, r5
   1a564:	bl	dec <malloc@plt>
   1a568:	cmp	r0, #0
   1a56c:	str	r0, [r9, #12]
   1a570:	beq	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a574:	mov	r1, #0
   1a578:	mov	r2, r5
   1a57c:	add	r9, r9, #8
   1a580:	bl	e58 <memset@plt>
   1a584:	cmp	r5, #207	; 0xcf
   1a588:	str	r5, [r9]
   1a58c:	bls	1a688 <sf_gen_mtp2type_abbrev+0x830>
   1a590:	sub	r0, r5, #208	; 0xd0
   1a594:	mov	r2, #0
   1a598:	str	r0, [r9]
   1a59c:	ldr	r1, [r9, #4]
   1a5a0:	adds	r0, r1, r0
   1a5a4:	mov	r1, #37	; 0x25
   1a5a8:	str	r2, [r0, #20]
   1a5ac:	str	sl, [r0, #4]
   1a5b0:	str	r1, [r0, #8]
   1a5b4:	str	r0, [r0, #96]	; 0x60
   1a5b8:	beq	1a5ec <sf_gen_mtp2type_abbrev+0x794>
   1a5bc:	ldr	r1, [r4, #96]	; 0x60
   1a5c0:	mov	r2, r0
   1a5c4:	ldr	r3, [r2, #44]	; 0x2c
   1a5c8:	add	r7, r2, #84	; 0x54
   1a5cc:	cmp	r3, #0
   1a5d0:	mov	r3, #84	; 0x54
   1a5d4:	movweq	r3, #60	; 0x3c
   1a5d8:	addeq	r7, r2, #60	; 0x3c
   1a5dc:	ldr	r2, [r2, r3]
   1a5e0:	str	r1, [r7]
   1a5e4:	cmp	r2, #0
   1a5e8:	bne	1a5c4 <sf_gen_mtp2type_abbrev+0x76c>
   1a5ec:	ldr	r1, [r0, #44]	; 0x2c
   1a5f0:	cmp	r4, #0
   1a5f4:	clz	r1, r1
   1a5f8:	lsr	r1, r1, #5
   1a5fc:	str	r1, [r0, #44]	; 0x2c
   1a600:	ldr	r1, [r4, #44]	; 0x2c
   1a604:	clz	r2, r1
   1a608:	lsr	r2, r2, #5
   1a60c:	str	r2, [r4, #44]	; 0x2c
   1a610:	str	r4, [sp, #8]
   1a614:	beq	1a65c <sf_gen_mtp2type_abbrev+0x804>
   1a618:	cmp	r1, #0
   1a61c:	mov	r3, #60	; 0x3c
   1a620:	mov	r2, r4
   1a624:	movweq	r3, #84	; 0x54
   1a628:	ldr	r1, [r2, r3]!
   1a62c:	cmp	r1, #0
   1a630:	beq	1a660 <sf_gen_mtp2type_abbrev+0x808>
   1a634:	ldr	r3, [r1, #44]	; 0x2c
   1a638:	add	r2, r1, #84	; 0x54
   1a63c:	cmp	r3, #0
   1a640:	mov	r3, #84	; 0x54
   1a644:	movweq	r3, #60	; 0x3c
   1a648:	addeq	r2, r1, #60	; 0x3c
   1a64c:	ldr	r1, [r1, r3]
   1a650:	cmp	r1, #0
   1a654:	bne	1a634 <sf_gen_mtp2type_abbrev+0x7dc>
   1a658:	b	1a660 <sf_gen_mtp2type_abbrev+0x808>
   1a65c:	add	r2, sp, #8
   1a660:	str	r0, [r2]
   1a664:	ldr	r1, [r4, #44]	; 0x2c
   1a668:	clz	r1, r1
   1a66c:	lsr	r1, r1, #5
   1a670:	str	r1, [r4, #44]	; 0x2c
   1a674:	ldr	r0, [r0, #96]	; 0x60
   1a678:	str	r0, [r4, #96]	; 0x60
   1a67c:	mov	r0, r4
   1a680:	sub	sp, fp, #28
   1a684:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a688:	ldr	r0, [pc, #144]	; 1a720 <sf_gen_mtp2type_abbrev+0x8c8>
   1a68c:	add	r0, pc, r0
   1a690:	bl	2068 <sf_bpf_error>
   1a694:	bl	edc <abort@plt>
   1a698:	ldr	r0, [pc, #124]	; 1a71c <sf_gen_mtp2type_abbrev+0x8c4>
   1a69c:	add	r0, pc, r0
   1a6a0:	bl	2068 <sf_bpf_error>
   1a6a4:	ldr	r0, [pc, #120]	; 1a724 <sf_gen_mtp2type_abbrev+0x8cc>
   1a6a8:	add	r0, pc, r0
   1a6ac:	bl	2068 <sf_bpf_error>
   1a6b0:	ldr	r0, [pc, #112]	; 1a728 <sf_gen_mtp2type_abbrev+0x8d0>
   1a6b4:	add	r0, pc, r0
   1a6b8:	bl	2068 <sf_bpf_error>
   1a6bc:	.word	0x0002d5b0
   1a6c0:	.word	0x0002d660
   1a6c4:	.word	0x0002d5d8
   1a6c8:	.word	0x0002d5b4
   1a6cc:	.word	0x0002d630
   1a6d0:	.word	0x0002d480
   1a6d4:	.word	0x0002d368
   1a6d8:	.word	0x0002d518
   1a6dc:	.word	0x0002d5c8
   1a6e0:	.word	0x0002d540
   1a6e4:	.word	0x0002d51c
   1a6e8:	.word	0x0002d598
   1a6ec:	.word	0x0002d400
   1a6f0:	.word	0x0002d230
   1a6f4:	.word	0x0002d0d0
   1a6f8:	.word	0x0002d048
   1a6fc:	.word	0x0002cfb0
   1a700:	.word	0x0002d480
   1a704:	.word	0x0002d530
   1a708:	.word	0x0002d4a8
   1a70c:	.word	0x0002d484
   1a710:	.word	0x0002d500
   1a714:	.word	0x0002d2d0
   1a718:	.word	0x0002d198
   1a71c:	.word	0x0000fdeb
   1a720:	.word	0x0000fff0
   1a724:	.word	0x0000fdfd
   1a728:	.word	0x0000fe0f

0001a72c <sf_gen_mtp3field_code>:
   1a72c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a730:	add	fp, sp, #28
   1a734:	sub	sp, sp, #12
   1a738:	sub	r0, r0, #1
   1a73c:	cmp	r0, #3
   1a740:	bhi	1ae98 <sf_gen_mtp3field_code+0x76c>
   1a744:	mov	r9, r1
   1a748:	add	r1, pc, #12
   1a74c:	mov	sl, r2
   1a750:	str	r3, [sp, #8]
   1a754:	ldr	r0, [r1, r0, lsl #2]
   1a758:	add	pc, r1, r0
   1a75c:	.word	0x00000010
   1a760:	.word	0x000001bc
   1a764:	.word	0x0000009c
   1a768:	.word	0x0000012c
   1a76c:	ldr	r8, [pc, #1944]	; 1af0c <sf_gen_mtp3field_code+0x7e0>
   1a770:	ldr	r8, [pc, r8]
   1a774:	cmn	r8, #1
   1a778:	beq	1ae9c <sf_gen_mtp3field_code+0x770>
   1a77c:	cmp	r9, #256	; 0x100
   1a780:	bcs	1aea8 <sf_gen_mtp3field_code+0x77c>
   1a784:	ldr	r0, [pc, #1924]	; 1af10 <sf_gen_mtp3field_code+0x7e4>
   1a788:	ldr	r0, [pc, r0]
   1a78c:	ldr	r4, [pc, #1920]	; 1af14 <sf_gen_mtp3field_code+0x7e8>
   1a790:	add	r4, pc, r4
   1a794:	mov	r5, r4
   1a798:	ldr	r7, [r5, r0, lsl #3]!
   1a79c:	cmp	r7, #19
   1a7a0:	bhi	1aab0 <sf_gen_mtp3field_code+0x384>
   1a7a4:	ldr	r1, [pc, #1900]	; 1af18 <sf_gen_mtp3field_code+0x7ec>
   1a7a8:	add	r6, r0, #1
   1a7ac:	cmp	r0, #15
   1a7b0:	add	r1, pc, r1
   1a7b4:	str	r6, [r1]
   1a7b8:	bge	1ae38 <sf_gen_mtp3field_code+0x70c>
   1a7bc:	mov	r0, #1024	; 0x400
   1a7c0:	lsl	r7, r0, r6
   1a7c4:	mov	r0, r7
   1a7c8:	bl	dec <malloc@plt>
   1a7cc:	cmp	r0, #0
   1a7d0:	str	r0, [r5, #12]
   1a7d4:	beq	1ae38 <sf_gen_mtp3field_code+0x70c>
   1a7d8:	mov	r1, #0
   1a7dc:	mov	r2, r7
   1a7e0:	add	r5, r5, #8
   1a7e4:	bl	e58 <memset@plt>
   1a7e8:	cmp	r7, #19
   1a7ec:	str	r7, [r5]
   1a7f0:	bhi	1aab4 <sf_gen_mtp3field_code+0x388>
   1a7f4:	b	1ae38 <sf_gen_mtp3field_code+0x70c>
   1a7f8:	ldr	r4, [pc, #1848]	; 1af38 <sf_gen_mtp3field_code+0x80c>
   1a7fc:	ldr	r4, [pc, r4]
   1a800:	cmn	r4, #1
   1a804:	beq	1aeb8 <sf_gen_mtp3field_code+0x78c>
   1a808:	cmp	r9, #16384	; 0x4000
   1a80c:	str	sl, [sp, #4]
   1a810:	bcs	1aec4 <sf_gen_mtp3field_code+0x798>
   1a814:	ldr	r0, [pc, #1824]	; 1af3c <sf_gen_mtp3field_code+0x810>
   1a818:	ldr	r0, [pc, r0]
   1a81c:	ldr	sl, [pc, #1820]	; 1af40 <sf_gen_mtp3field_code+0x814>
   1a820:	add	sl, pc, sl
   1a824:	mov	r5, sl
   1a828:	ldr	r7, [r5, r0, lsl #3]!
   1a82c:	cmp	r7, #19
   1a830:	bhi	1a9b0 <sf_gen_mtp3field_code+0x284>
   1a834:	ldr	r1, [pc, #1800]	; 1af44 <sf_gen_mtp3field_code+0x818>
   1a838:	add	r6, r0, #1
   1a83c:	cmp	r0, #15
   1a840:	add	r1, pc, r1
   1a844:	str	r6, [r1]
   1a848:	bge	1ae38 <sf_gen_mtp3field_code+0x70c>
   1a84c:	mov	r0, #1024	; 0x400
   1a850:	lsl	r7, r0, r6
   1a854:	mov	r0, r7
   1a858:	bl	dec <malloc@plt>
   1a85c:	cmp	r0, #0
   1a860:	str	r0, [r5, #12]
   1a864:	beq	1ae38 <sf_gen_mtp3field_code+0x70c>
   1a868:	mov	r1, #0
   1a86c:	mov	r2, r7
   1a870:	add	r5, r5, #8
   1a874:	bl	e58 <memset@plt>
   1a878:	cmp	r7, #19
   1a87c:	str	r7, [r5]
   1a880:	bhi	1a9b4 <sf_gen_mtp3field_code+0x288>
   1a884:	b	1ae38 <sf_gen_mtp3field_code+0x70c>
   1a888:	ldr	r4, [pc, #1728]	; 1af50 <sf_gen_mtp3field_code+0x824>
   1a88c:	ldr	r4, [pc, r4]
   1a890:	cmn	r4, #1
   1a894:	beq	1aed4 <sf_gen_mtp3field_code+0x7a8>
   1a898:	cmp	r9, #16
   1a89c:	bcs	1aee0 <sf_gen_mtp3field_code+0x7b4>
   1a8a0:	ldr	r0, [pc, #1708]	; 1af54 <sf_gen_mtp3field_code+0x828>
   1a8a4:	ldr	r0, [pc, r0]
   1a8a8:	ldr	r8, [pc, #1704]	; 1af58 <sf_gen_mtp3field_code+0x82c>
   1a8ac:	str	sl, [sp, #4]
   1a8b0:	add	r8, pc, r8
   1a8b4:	mov	r5, r8
   1a8b8:	ldr	r7, [r5, r0, lsl #3]!
   1a8bc:	cmp	r7, #19
   1a8c0:	bhi	1aa30 <sf_gen_mtp3field_code+0x304>
   1a8c4:	ldr	r1, [pc, #1680]	; 1af5c <sf_gen_mtp3field_code+0x830>
   1a8c8:	add	r6, r0, #1
   1a8cc:	cmp	r0, #15
   1a8d0:	add	r1, pc, r1
   1a8d4:	str	r6, [r1]
   1a8d8:	bge	1ae38 <sf_gen_mtp3field_code+0x70c>
   1a8dc:	mov	r0, #1024	; 0x400
   1a8e0:	lsl	r7, r0, r6
   1a8e4:	mov	r0, r7
   1a8e8:	bl	dec <malloc@plt>
   1a8ec:	cmp	r0, #0
   1a8f0:	str	r0, [r5, #12]
   1a8f4:	beq	1ae38 <sf_gen_mtp3field_code+0x70c>
   1a8f8:	mov	r1, #0
   1a8fc:	mov	r2, r7
   1a900:	add	r5, r5, #8
   1a904:	bl	e58 <memset@plt>
   1a908:	cmp	r7, #19
   1a90c:	str	r7, [r5]
   1a910:	bhi	1aa34 <sf_gen_mtp3field_code+0x308>
   1a914:	b	1ae38 <sf_gen_mtp3field_code+0x70c>
   1a918:	ldr	r6, [pc, #1536]	; 1af20 <sf_gen_mtp3field_code+0x7f4>
   1a91c:	ldr	r6, [pc, r6]
   1a920:	cmn	r6, #1
   1a924:	beq	1aef0 <sf_gen_mtp3field_code+0x7c4>
   1a928:	cmp	r9, #16384	; 0x4000
   1a92c:	bcs	1aefc <sf_gen_mtp3field_code+0x7d0>
   1a930:	ubfx	r2, r9, #10, #4
   1a934:	ldr	r0, [pc, #1512]	; 1af24 <sf_gen_mtp3field_code+0x7f8>
   1a938:	ldr	r0, [pc, r0]
   1a93c:	ldr	r5, [pc, #1508]	; 1af28 <sf_gen_mtp3field_code+0x7fc>
   1a940:	str	r2, [sp]
   1a944:	add	r5, pc, r5
   1a948:	mov	r4, r5
   1a94c:	ldr	r7, [r4, r0, lsl #3]!
   1a950:	cmp	r7, #19
   1a954:	bhi	1ab30 <sf_gen_mtp3field_code+0x404>
   1a958:	ldr	r1, [pc, #1484]	; 1af2c <sf_gen_mtp3field_code+0x800>
   1a95c:	add	r8, r0, #1
   1a960:	cmp	r0, #15
   1a964:	add	r1, pc, r1
   1a968:	str	r8, [r1]
   1a96c:	bge	1ae38 <sf_gen_mtp3field_code+0x70c>
   1a970:	mov	r0, #1024	; 0x400
   1a974:	lsl	r7, r0, r8
   1a978:	mov	r0, r7
   1a97c:	bl	dec <malloc@plt>
   1a980:	cmp	r0, #0
   1a984:	str	r0, [r4, #12]
   1a988:	beq	1ae38 <sf_gen_mtp3field_code+0x70c>
   1a98c:	mov	r1, #0
   1a990:	mov	r2, r7
   1a994:	add	r4, r4, #8
   1a998:	bl	e58 <memset@plt>
   1a99c:	ldr	r2, [sp]
   1a9a0:	cmp	r7, #19
   1a9a4:	str	r7, [r4]
   1a9a8:	bhi	1ab34 <sf_gen_mtp3field_code+0x408>
   1a9ac:	b	1ae38 <sf_gen_mtp3field_code+0x70c>
   1a9b0:	mov	r6, r0
   1a9b4:	sub	r0, r7, #20
   1a9b8:	mov	r1, #32
   1a9bc:	str	r0, [r5]
   1a9c0:	ldr	r8, [r5, #4]
   1a9c4:	mov	r5, sl
   1a9c8:	str	r1, [r8, r0]!
   1a9cc:	str	r4, [r8, #12]
   1a9d0:	ldr	r7, [r5, r6, lsl #3]!
   1a9d4:	cmp	r7, #19
   1a9d8:	bhi	1abb8 <sf_gen_mtp3field_code+0x48c>
   1a9dc:	ldr	r0, [pc, #1380]	; 1af48 <sf_gen_mtp3field_code+0x81c>
   1a9e0:	add	r4, r6, #1
   1a9e4:	cmp	r6, #15
   1a9e8:	add	r0, pc, r0
   1a9ec:	str	r4, [r0]
   1a9f0:	bge	1ae38 <sf_gen_mtp3field_code+0x70c>
   1a9f4:	mov	r0, #1024	; 0x400
   1a9f8:	lsl	r7, r0, r4
   1a9fc:	mov	r0, r7
   1aa00:	bl	dec <malloc@plt>
   1aa04:	cmp	r0, #0
   1aa08:	str	r0, [r5, #12]
   1aa0c:	beq	1ae38 <sf_gen_mtp3field_code+0x70c>
   1aa10:	mov	r1, #0
   1aa14:	mov	r2, r7
   1aa18:	add	r5, r5, #8
   1aa1c:	bl	e58 <memset@plt>
   1aa20:	cmp	r7, #19
   1aa24:	str	r7, [r5]
   1aa28:	bhi	1abbc <sf_gen_mtp3field_code+0x490>
   1aa2c:	b	1ae38 <sf_gen_mtp3field_code+0x70c>
   1aa30:	mov	r6, r0
   1aa34:	sub	r0, r7, #20
   1aa38:	mov	r1, #48	; 0x30
   1aa3c:	str	r0, [r5]
   1aa40:	ldr	sl, [r5, #4]
   1aa44:	mov	r5, r8
   1aa48:	str	r1, [sl, r0]!
   1aa4c:	str	r4, [sl, #12]
   1aa50:	ldr	r7, [r5, r6, lsl #3]!
   1aa54:	cmp	r7, #19
   1aa58:	bhi	1ac80 <sf_gen_mtp3field_code+0x554>
   1aa5c:	ldr	r0, [pc, #1276]	; 1af60 <sf_gen_mtp3field_code+0x834>
   1aa60:	add	r4, r6, #1
   1aa64:	cmp	r6, #15
   1aa68:	add	r0, pc, r0
   1aa6c:	str	r4, [r0]
   1aa70:	bge	1ae38 <sf_gen_mtp3field_code+0x70c>
   1aa74:	mov	r0, #1024	; 0x400
   1aa78:	lsl	r7, r0, r4
   1aa7c:	mov	r0, r7
   1aa80:	bl	dec <malloc@plt>
   1aa84:	cmp	r0, #0
   1aa88:	str	r0, [r5, #12]
   1aa8c:	beq	1ae38 <sf_gen_mtp3field_code+0x70c>
   1aa90:	mov	r1, #0
   1aa94:	mov	r2, r7
   1aa98:	add	r5, r5, #8
   1aa9c:	bl	e58 <memset@plt>
   1aaa0:	cmp	r7, #19
   1aaa4:	str	r7, [r5]
   1aaa8:	bhi	1ac84 <sf_gen_mtp3field_code+0x558>
   1aaac:	b	1ae38 <sf_gen_mtp3field_code+0x70c>
   1aab0:	mov	r6, r0
   1aab4:	sub	r0, r7, #20
   1aab8:	mov	r1, #48	; 0x30
   1aabc:	str	r0, [r5]
   1aac0:	ldr	r5, [r5, #4]
   1aac4:	str	r1, [r5, r0]!
   1aac8:	str	r8, [r5, #12]
   1aacc:	ldr	r7, [r4, r6, lsl #3]!
   1aad0:	cmp	r7, #207	; 0xcf
   1aad4:	bhi	1ad54 <sf_gen_mtp3field_code+0x628>
   1aad8:	ldr	r1, [pc, #1084]	; 1af1c <sf_gen_mtp3field_code+0x7f0>
   1aadc:	add	r0, r6, #1
   1aae0:	cmp	r6, #15
   1aae4:	add	r1, pc, r1
   1aae8:	str	r0, [r1]
   1aaec:	bge	1ae38 <sf_gen_mtp3field_code+0x70c>
   1aaf0:	mov	r1, #1024	; 0x400
   1aaf4:	lsl	r7, r1, r0
   1aaf8:	mov	r0, r7
   1aafc:	bl	dec <malloc@plt>
   1ab00:	ldr	r6, [sp, #8]
   1ab04:	cmp	r0, #0
   1ab08:	str	r0, [r4, #12]
   1ab0c:	beq	1ae38 <sf_gen_mtp3field_code+0x70c>
   1ab10:	mov	r1, #0
   1ab14:	mov	r2, r7
   1ab18:	add	r4, r4, #8
   1ab1c:	bl	e58 <memset@plt>
   1ab20:	cmp	r7, #207	; 0xcf
   1ab24:	str	r7, [r4]
   1ab28:	bhi	1ad58 <sf_gen_mtp3field_code+0x62c>
   1ab2c:	b	1ae38 <sf_gen_mtp3field_code+0x70c>
   1ab30:	mov	r8, r0
   1ab34:	sub	r0, r7, #20
   1ab38:	mov	r1, #32
   1ab3c:	str	sl, [sp, #4]
   1ab40:	str	r0, [r4]
   1ab44:	ldr	r4, [r4, #4]
   1ab48:	str	r1, [r4, r0]!
   1ab4c:	str	r6, [r4, #12]
   1ab50:	mov	r6, r5
   1ab54:	ldr	r7, [r6, r8, lsl #3]!
   1ab58:	cmp	r7, #19
   1ab5c:	bhi	1ad8c <sf_gen_mtp3field_code+0x660>
   1ab60:	ldr	r0, [pc, #968]	; 1af30 <sf_gen_mtp3field_code+0x804>
   1ab64:	add	sl, r8, #1
   1ab68:	cmp	r8, #15
   1ab6c:	add	r0, pc, r0
   1ab70:	str	sl, [r0]
   1ab74:	bge	1ae38 <sf_gen_mtp3field_code+0x70c>
   1ab78:	mov	r0, #1024	; 0x400
   1ab7c:	lsl	r7, r0, sl
   1ab80:	mov	r0, r7
   1ab84:	bl	dec <malloc@plt>
   1ab88:	cmp	r0, #0
   1ab8c:	str	r0, [r6, #12]
   1ab90:	beq	1ae38 <sf_gen_mtp3field_code+0x70c>
   1ab94:	mov	r1, #0
   1ab98:	mov	r2, r7
   1ab9c:	add	r6, r6, #8
   1aba0:	bl	e58 <memset@plt>
   1aba4:	ldr	r2, [sp]
   1aba8:	cmp	r7, #19
   1abac:	str	r7, [r6]
   1abb0:	bhi	1ad90 <sf_gen_mtp3field_code+0x664>
   1abb4:	b	1ae38 <sf_gen_mtp3field_code+0x70c>
   1abb8:	mov	r4, r6
   1abbc:	mov	r0, #4128768	; 0x3f0000
   1abc0:	sub	r1, r7, #20
   1abc4:	mov	r2, #84	; 0x54
   1abc8:	and	r0, r0, r9, lsl #8
   1abcc:	str	r1, [r5]
   1abd0:	orr	r9, r0, r9, lsl #24
   1abd4:	ldr	r0, [r5, #4]
   1abd8:	str	r2, [r0, r1]!
   1abdc:	movw	r1, #0
   1abe0:	mov	r2, r8
   1abe4:	movt	r1, #65343	; 0xff3f
   1abe8:	str	r1, [r0, #12]
   1abec:	mov	r1, r2
   1abf0:	ldr	r2, [r2, #16]
   1abf4:	cmp	r2, #0
   1abf8:	bne	1abec <sf_gen_mtp3field_code+0x4c0>
   1abfc:	str	r0, [r1, #16]
   1ac00:	ldr	r6, [sl, r4, lsl #3]!
   1ac04:	cmp	r6, #207	; 0xcf
   1ac08:	bhi	1ac5c <sf_gen_mtp3field_code+0x530>
   1ac0c:	ldr	r1, [pc, #824]	; 1af4c <sf_gen_mtp3field_code+0x820>
   1ac10:	add	r0, r4, #1
   1ac14:	cmp	r4, #15
   1ac18:	add	r1, pc, r1
   1ac1c:	str	r0, [r1]
   1ac20:	bge	1ae38 <sf_gen_mtp3field_code+0x70c>
   1ac24:	mov	r1, #1024	; 0x400
   1ac28:	lsl	r6, r1, r0
   1ac2c:	mov	r0, r6
   1ac30:	bl	dec <malloc@plt>
   1ac34:	cmp	r0, #0
   1ac38:	str	r0, [sl, #12]
   1ac3c:	beq	1ae38 <sf_gen_mtp3field_code+0x70c>
   1ac40:	mov	r1, #0
   1ac44:	mov	r2, r6
   1ac48:	add	sl, sl, #8
   1ac4c:	bl	e58 <memset@plt>
   1ac50:	cmp	r6, #207	; 0xcf
   1ac54:	str	r6, [sl]
   1ac58:	bls	1ae38 <sf_gen_mtp3field_code+0x70c>
   1ac5c:	sub	r0, r6, #208	; 0xd0
   1ac60:	ldr	r3, [sp, #4]
   1ac64:	str	r0, [sl]
   1ac68:	ldr	r2, [sl, #4]
   1ac6c:	orr	r1, r3, #5
   1ac70:	add	r0, r2, r0
   1ac74:	str	r9, [r0, #20]
   1ac78:	str	r8, [r0, #4]
   1ac7c:	b	1ad38 <sf_gen_mtp3field_code+0x60c>
   1ac80:	mov	r4, r6
   1ac84:	sub	r1, r7, #20
   1ac88:	mov	r2, #84	; 0x54
   1ac8c:	lsl	r9, r9, #4
   1ac90:	str	r1, [r5]
   1ac94:	ldr	r0, [r5, #4]
   1ac98:	str	r2, [r0, r1]!
   1ac9c:	mov	r1, #240	; 0xf0
   1aca0:	mov	r2, sl
   1aca4:	str	r1, [r0, #12]
   1aca8:	mov	r1, r2
   1acac:	ldr	r2, [r2, #16]
   1acb0:	cmp	r2, #0
   1acb4:	bne	1aca8 <sf_gen_mtp3field_code+0x57c>
   1acb8:	str	r0, [r1, #16]
   1acbc:	ldr	r6, [r8, r4, lsl #3]!
   1acc0:	cmp	r6, #207	; 0xcf
   1acc4:	bhi	1ad18 <sf_gen_mtp3field_code+0x5ec>
   1acc8:	ldr	r1, [pc, #660]	; 1af64 <sf_gen_mtp3field_code+0x838>
   1accc:	add	r0, r4, #1
   1acd0:	cmp	r4, #15
   1acd4:	add	r1, pc, r1
   1acd8:	str	r0, [r1]
   1acdc:	bge	1ae38 <sf_gen_mtp3field_code+0x70c>
   1ace0:	mov	r1, #1024	; 0x400
   1ace4:	lsl	r6, r1, r0
   1ace8:	mov	r0, r6
   1acec:	bl	dec <malloc@plt>
   1acf0:	cmp	r0, #0
   1acf4:	str	r0, [r8, #12]
   1acf8:	beq	1ae38 <sf_gen_mtp3field_code+0x70c>
   1acfc:	mov	r1, #0
   1ad00:	mov	r2, r6
   1ad04:	add	r8, r8, #8
   1ad08:	bl	e58 <memset@plt>
   1ad0c:	cmp	r6, #207	; 0xcf
   1ad10:	str	r6, [r8]
   1ad14:	bls	1ae38 <sf_gen_mtp3field_code+0x70c>
   1ad18:	sub	r0, r6, #208	; 0xd0
   1ad1c:	ldr	r3, [sp, #4]
   1ad20:	str	r0, [r8]
   1ad24:	ldr	r2, [r8, #4]
   1ad28:	orr	r1, r3, #5
   1ad2c:	add	r0, r2, r0
   1ad30:	str	r9, [r0, #20]
   1ad34:	str	sl, [r0, #4]
   1ad38:	str	r1, [r0, #8]
   1ad3c:	str	r0, [r0, #96]	; 0x60
   1ad40:	ldr	r1, [sp, #8]
   1ad44:	cmp	r1, #0
   1ad48:	beq	1ae90 <sf_gen_mtp3field_code+0x764>
   1ad4c:	orr	r1, r3, #16
   1ad50:	b	1ae7c <sf_gen_mtp3field_code+0x750>
   1ad54:	ldr	r6, [sp, #8]
   1ad58:	sub	r0, r7, #208	; 0xd0
   1ad5c:	orr	r1, sl, #5
   1ad60:	cmp	r6, #0
   1ad64:	str	r0, [r4]
   1ad68:	ldr	r2, [r4, #4]
   1ad6c:	add	r0, r2, r0
   1ad70:	str	r9, [r0, #20]
   1ad74:	str	r5, [r0, #4]
   1ad78:	str	r1, [r0, #8]
   1ad7c:	str	r0, [r0, #96]	; 0x60
   1ad80:	beq	1ae90 <sf_gen_mtp3field_code+0x764>
   1ad84:	orr	r1, sl, #16
   1ad88:	b	1ae7c <sf_gen_mtp3field_code+0x750>
   1ad8c:	mov	sl, r8
   1ad90:	and	r0, r9, #1020	; 0x3fc
   1ad94:	and	r1, r9, #3
   1ad98:	orr	r0, r2, r0, lsl #6
   1ad9c:	mov	r2, #84	; 0x54
   1ada0:	orr	r8, r0, r1, lsl #22
   1ada4:	sub	r1, r7, #20
   1ada8:	str	r1, [r6]
   1adac:	ldr	r0, [r6, #4]
   1adb0:	str	r2, [r0, r1]!
   1adb4:	movw	r1, #65295	; 0xff0f
   1adb8:	mov	r2, r4
   1adbc:	movt	r1, #192	; 0xc0
   1adc0:	str	r1, [r0, #12]
   1adc4:	mov	r1, r2
   1adc8:	ldr	r2, [r2, #16]
   1adcc:	cmp	r2, #0
   1add0:	bne	1adc4 <sf_gen_mtp3field_code+0x698>
   1add4:	str	r0, [r1, #16]
   1add8:	ldr	r6, [r5, sl, lsl #3]!
   1addc:	cmp	r6, #207	; 0xcf
   1ade0:	bhi	1ae44 <sf_gen_mtp3field_code+0x718>
   1ade4:	ldr	r1, [pc, #328]	; 1af34 <sf_gen_mtp3field_code+0x808>
   1ade8:	add	r0, sl, #1
   1adec:	cmp	sl, #15
   1adf0:	add	r1, pc, r1
   1adf4:	str	r0, [r1]
   1adf8:	bge	1ae38 <sf_gen_mtp3field_code+0x70c>
   1adfc:	mov	r1, #1024	; 0x400
   1ae00:	lsl	r6, r1, r0
   1ae04:	mov	r0, r6
   1ae08:	bl	dec <malloc@plt>
   1ae0c:	ldr	r7, [sp, #4]
   1ae10:	cmp	r0, #0
   1ae14:	str	r0, [r5, #12]
   1ae18:	beq	1ae38 <sf_gen_mtp3field_code+0x70c>
   1ae1c:	mov	r1, #0
   1ae20:	mov	r2, r6
   1ae24:	add	r5, r5, #8
   1ae28:	bl	e58 <memset@plt>
   1ae2c:	cmp	r6, #207	; 0xcf
   1ae30:	str	r6, [r5]
   1ae34:	bhi	1ae48 <sf_gen_mtp3field_code+0x71c>
   1ae38:	ldr	r0, [pc, #304]	; 1af70 <sf_gen_mtp3field_code+0x844>
   1ae3c:	add	r0, pc, r0
   1ae40:	bl	2068 <sf_bpf_error>
   1ae44:	ldr	r7, [sp, #4]
   1ae48:	sub	r0, r6, #208	; 0xd0
   1ae4c:	orr	r1, r7, #5
   1ae50:	str	r0, [r5]
   1ae54:	ldr	r2, [r5, #4]
   1ae58:	add	r0, r2, r0
   1ae5c:	str	r8, [r0, #20]
   1ae60:	str	r4, [r0, #4]
   1ae64:	str	r1, [r0, #8]
   1ae68:	ldr	r1, [sp, #8]
   1ae6c:	str	r0, [r0, #96]	; 0x60
   1ae70:	cmp	r1, #0
   1ae74:	beq	1ae90 <sf_gen_mtp3field_code+0x764>
   1ae78:	orr	r1, r7, #16
   1ae7c:	cmp	r1, #48	; 0x30
   1ae80:	ldreq	r1, [r0, #44]	; 0x2c
   1ae84:	clzeq	r1, r1
   1ae88:	lsreq	r1, r1, #5
   1ae8c:	streq	r1, [r0, #44]	; 0x2c
   1ae90:	sub	sp, fp, #28
   1ae94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ae98:	bl	edc <abort@plt>
   1ae9c:	ldr	r0, [pc, #196]	; 1af68 <sf_gen_mtp3field_code+0x83c>
   1aea0:	add	r0, pc, r0
   1aea4:	bl	2068 <sf_bpf_error>
   1aea8:	ldr	r0, [pc, #188]	; 1af6c <sf_gen_mtp3field_code+0x840>
   1aeac:	mov	r1, r9
   1aeb0:	add	r0, pc, r0
   1aeb4:	bl	2068 <sf_bpf_error>
   1aeb8:	ldr	r0, [pc, #188]	; 1af7c <sf_gen_mtp3field_code+0x850>
   1aebc:	add	r0, pc, r0
   1aec0:	bl	2068 <sf_bpf_error>
   1aec4:	ldr	r0, [pc, #180]	; 1af80 <sf_gen_mtp3field_code+0x854>
   1aec8:	mov	r1, r9
   1aecc:	add	r0, pc, r0
   1aed0:	bl	2068 <sf_bpf_error>
   1aed4:	ldr	r0, [pc, #168]	; 1af84 <sf_gen_mtp3field_code+0x858>
   1aed8:	add	r0, pc, r0
   1aedc:	bl	2068 <sf_bpf_error>
   1aee0:	ldr	r0, [pc, #160]	; 1af88 <sf_gen_mtp3field_code+0x85c>
   1aee4:	mov	r1, r9
   1aee8:	add	r0, pc, r0
   1aeec:	bl	2068 <sf_bpf_error>
   1aef0:	ldr	r0, [pc, #124]	; 1af74 <sf_gen_mtp3field_code+0x848>
   1aef4:	add	r0, pc, r0
   1aef8:	bl	2068 <sf_bpf_error>
   1aefc:	ldr	r0, [pc, #116]	; 1af78 <sf_gen_mtp3field_code+0x84c>
   1af00:	mov	r1, r9
   1af04:	add	r0, pc, r0
   1af08:	bl	2068 <sf_bpf_error>
   1af0c:	.word	0x0002ccfc
   1af10:	.word	0x0002cd74
   1af14:	.word	0x0002ccec
   1af18:	.word	0x0002cd4c
   1af1c:	.word	0x0002ca18
   1af20:	.word	0x0002cb54
   1af24:	.word	0x0002cbc4
   1af28:	.word	0x0002cb38
   1af2c:	.word	0x0002cb98
   1af30:	.word	0x0002c990
   1af34:	.word	0x0002c70c
   1af38:	.word	0x0002cc78
   1af3c:	.word	0x0002cce4
   1af40:	.word	0x0002cc5c
   1af44:	.word	0x0002ccbc
   1af48:	.word	0x0002cb14
   1af4c:	.word	0x0002c8e4
   1af50:	.word	0x0002cbec
   1af54:	.word	0x0002cc58
   1af58:	.word	0x0002cbcc
   1af5c:	.word	0x0002cc2c
   1af60:	.word	0x0002ca94
   1af64:	.word	0x0002c828
   1af68:	.word	0x0000f640
   1af6c:	.word	0x0000f64c
   1af70:	.word	0x0000f840
   1af74:	.word	0x0000f62e
   1af78:	.word	0x0000f63a
   1af7c:	.word	0x0000f6aa
   1af80:	.word	0x0000f6b6
   1af84:	.word	0x0000f6d2
   1af88:	.word	0x0000f6de

0001af8c <sf_gen_atmmulti_abbrev>:
   1af8c:	push	{r4, r5, fp, lr}
   1af90:	add	fp, sp, #8
   1af94:	sub	sp, sp, #8
   1af98:	cmp	r0, #69	; 0x45
   1af9c:	bgt	1afcc <sf_gen_atmmulti_abbrev+0x40>
   1afa0:	cmp	r0, #28
   1afa4:	bne	1b064 <sf_gen_atmmulti_abbrev+0xd8>
   1afa8:	ldr	r0, [pc, #2688]	; 1ba30 <sf_gen_atmmulti_abbrev+0xaa4>
   1afac:	add	r0, pc, r0
   1afb0:	ldrb	r0, [r0]
   1afb4:	cmp	r0, #0
   1afb8:	beq	1b9fc <sf_gen_atmmulti_abbrev+0xa70>
   1afbc:	mov	r0, #29
   1afc0:	sub	sp, fp, #8
   1afc4:	pop	{r4, r5, fp, lr}
   1afc8:	b	1af8c <sf_gen_atmmulti_abbrev>
   1afcc:	cmp	r0, #70	; 0x46
   1afd0:	bne	1b0fc <sf_gen_atmmulti_abbrev+0x170>
   1afd4:	ldr	r0, [pc, #2648]	; 1ba34 <sf_gen_atmmulti_abbrev+0xaa8>
   1afd8:	add	r0, pc, r0
   1afdc:	ldrb	r0, [r0]
   1afe0:	cmp	r0, #0
   1afe4:	beq	1ba08 <sf_gen_atmmulti_abbrev+0xa7c>
   1afe8:	mov	r0, #54	; 0x36
   1afec:	mov	r1, #5
   1aff0:	mov	r2, #16
   1aff4:	mov	r3, #0
   1aff8:	bl	19314 <sf_gen_atmfield_code>
   1affc:	mov	r5, r0
   1b000:	mov	r0, #54	; 0x36
   1b004:	mov	r1, #2
   1b008:	mov	r2, #16
   1b00c:	mov	r3, #0
   1b010:	bl	19314 <sf_gen_atmfield_code>
   1b014:	mov	r4, r0
   1b018:	ldr	r0, [r5, #44]	; 0x2c
   1b01c:	cmp	r5, #0
   1b020:	clz	r0, r0
   1b024:	lsr	r0, r0, #5
   1b028:	str	r0, [r5, #44]	; 0x2c
   1b02c:	beq	1b198 <sf_gen_atmmulti_abbrev+0x20c>
   1b030:	ldr	r1, [r4, #96]	; 0x60
   1b034:	mov	r2, r5
   1b038:	cmp	r0, #0
   1b03c:	mov	r0, #84	; 0x54
   1b040:	add	r3, r2, #84	; 0x54
   1b044:	movweq	r0, #60	; 0x3c
   1b048:	addeq	r3, r2, #60	; 0x3c
   1b04c:	ldr	r2, [r2, r0]
   1b050:	str	r1, [r3]
   1b054:	cmp	r2, #0
   1b058:	beq	1b194 <sf_gen_atmmulti_abbrev+0x208>
   1b05c:	ldr	r0, [r2, #44]	; 0x2c
   1b060:	b	1b038 <sf_gen_atmmulti_abbrev+0xac>
   1b064:	cmp	r0, #29
   1b068:	bne	1b9f8 <sf_gen_atmmulti_abbrev+0xa6c>
   1b06c:	ldr	r0, [pc, #2488]	; 1ba2c <sf_gen_atmmulti_abbrev+0xaa0>
   1b070:	add	r0, pc, r0
   1b074:	ldrb	r0, [r0]
   1b078:	cmp	r0, #0
   1b07c:	beq	1ba14 <sf_gen_atmmulti_abbrev+0xa88>
   1b080:	mov	r0, #52	; 0x34
   1b084:	mov	r1, #3
   1b088:	mov	r2, #16
   1b08c:	mov	r3, #0
   1b090:	bl	19314 <sf_gen_atmfield_code>
   1b094:	mov	r5, r0
   1b098:	mov	r0, #52	; 0x34
   1b09c:	mov	r1, #4
   1b0a0:	mov	r2, #16
   1b0a4:	mov	r3, #0
   1b0a8:	bl	19314 <sf_gen_atmfield_code>
   1b0ac:	mov	r4, r0
   1b0b0:	ldr	r0, [r5, #44]	; 0x2c
   1b0b4:	cmp	r5, #0
   1b0b8:	clz	r0, r0
   1b0bc:	lsr	r0, r0, #5
   1b0c0:	str	r0, [r5, #44]	; 0x2c
   1b0c4:	beq	1b1e0 <sf_gen_atmmulti_abbrev+0x254>
   1b0c8:	ldr	r1, [r4, #96]	; 0x60
   1b0cc:	mov	r2, r5
   1b0d0:	cmp	r0, #0
   1b0d4:	mov	r0, #84	; 0x54
   1b0d8:	add	r3, r2, #84	; 0x54
   1b0dc:	movweq	r0, #60	; 0x3c
   1b0e0:	addeq	r3, r2, #60	; 0x3c
   1b0e4:	ldr	r2, [r2, r0]
   1b0e8:	str	r1, [r3]
   1b0ec:	cmp	r2, #0
   1b0f0:	beq	1b1dc <sf_gen_atmmulti_abbrev+0x250>
   1b0f4:	ldr	r0, [r2, #44]	; 0x2c
   1b0f8:	b	1b0d0 <sf_gen_atmmulti_abbrev+0x144>
   1b0fc:	cmp	r0, #71	; 0x47
   1b100:	bne	1b9f8 <sf_gen_atmmulti_abbrev+0xa6c>
   1b104:	ldr	r0, [pc, #2348]	; 1ba38 <sf_gen_atmmulti_abbrev+0xaac>
   1b108:	add	r0, pc, r0
   1b10c:	ldrb	r0, [r0]
   1b110:	cmp	r0, #0
   1b114:	beq	1ba20 <sf_gen_atmmulti_abbrev+0xa94>
   1b118:	mov	r0, #54	; 0x36
   1b11c:	mov	r1, #5
   1b120:	mov	r2, #16
   1b124:	mov	r3, #0
   1b128:	bl	19314 <sf_gen_atmfield_code>
   1b12c:	mov	r5, r0
   1b130:	mov	r0, #54	; 0x36
   1b134:	mov	r1, #2
   1b138:	mov	r2, #16
   1b13c:	mov	r3, #0
   1b140:	bl	19314 <sf_gen_atmfield_code>
   1b144:	mov	r4, r0
   1b148:	ldr	r0, [r5, #44]	; 0x2c
   1b14c:	cmp	r5, #0
   1b150:	clz	r0, r0
   1b154:	lsr	r0, r0, #5
   1b158:	str	r0, [r5, #44]	; 0x2c
   1b15c:	beq	1b228 <sf_gen_atmmulti_abbrev+0x29c>
   1b160:	ldr	r1, [r4, #96]	; 0x60
   1b164:	mov	r2, r5
   1b168:	cmp	r0, #0
   1b16c:	mov	r0, #84	; 0x54
   1b170:	add	r3, r2, #84	; 0x54
   1b174:	movweq	r0, #60	; 0x3c
   1b178:	addeq	r3, r2, #60	; 0x3c
   1b17c:	ldr	r2, [r2, r0]
   1b180:	str	r1, [r3]
   1b184:	cmp	r2, #0
   1b188:	beq	1b224 <sf_gen_atmmulti_abbrev+0x298>
   1b18c:	ldr	r0, [r2, #44]	; 0x2c
   1b190:	b	1b168 <sf_gen_atmmulti_abbrev+0x1dc>
   1b194:	ldr	r0, [r5, #44]	; 0x2c
   1b198:	clz	r0, r0
   1b19c:	cmp	r4, #0
   1b1a0:	lsr	r0, r0, #5
   1b1a4:	str	r0, [r5, #44]	; 0x2c
   1b1a8:	str	r4, [sp, #4]
   1b1ac:	beq	1b26c <sf_gen_atmmulti_abbrev+0x2e0>
   1b1b0:	mov	r1, r4
   1b1b4:	ldr	r2, [r1, #44]	; 0x2c
   1b1b8:	add	r0, r1, #84	; 0x54
   1b1bc:	cmp	r2, #0
   1b1c0:	mov	r2, #84	; 0x54
   1b1c4:	movweq	r2, #60	; 0x3c
   1b1c8:	addeq	r0, r1, #60	; 0x3c
   1b1cc:	ldr	r1, [r1, r2]
   1b1d0:	cmp	r1, #0
   1b1d4:	bne	1b1b4 <sf_gen_atmmulti_abbrev+0x228>
   1b1d8:	b	1b270 <sf_gen_atmmulti_abbrev+0x2e4>
   1b1dc:	ldr	r0, [r5, #44]	; 0x2c
   1b1e0:	clz	r0, r0
   1b1e4:	cmp	r4, #0
   1b1e8:	lsr	r0, r0, #5
   1b1ec:	str	r0, [r5, #44]	; 0x2c
   1b1f0:	str	r4, [sp, #4]
   1b1f4:	beq	1b610 <sf_gen_atmmulti_abbrev+0x684>
   1b1f8:	mov	r1, r4
   1b1fc:	ldr	r2, [r1, #44]	; 0x2c
   1b200:	add	r0, r1, #84	; 0x54
   1b204:	cmp	r2, #0
   1b208:	mov	r2, #84	; 0x54
   1b20c:	movweq	r2, #60	; 0x3c
   1b210:	addeq	r0, r1, #60	; 0x3c
   1b214:	ldr	r1, [r1, r2]
   1b218:	cmp	r1, #0
   1b21c:	bne	1b1fc <sf_gen_atmmulti_abbrev+0x270>
   1b220:	b	1b614 <sf_gen_atmmulti_abbrev+0x688>
   1b224:	ldr	r0, [r5, #44]	; 0x2c
   1b228:	clz	r0, r0
   1b22c:	cmp	r4, #0
   1b230:	lsr	r0, r0, #5
   1b234:	str	r0, [r5, #44]	; 0x2c
   1b238:	str	r4, [sp, #4]
   1b23c:	beq	1b6e0 <sf_gen_atmmulti_abbrev+0x754>
   1b240:	mov	r1, r4
   1b244:	ldr	r2, [r1, #44]	; 0x2c
   1b248:	add	r0, r1, #84	; 0x54
   1b24c:	cmp	r2, #0
   1b250:	mov	r2, #84	; 0x54
   1b254:	movweq	r2, #60	; 0x3c
   1b258:	addeq	r0, r1, #60	; 0x3c
   1b25c:	ldr	r1, [r1, r2]
   1b260:	cmp	r1, #0
   1b264:	bne	1b244 <sf_gen_atmmulti_abbrev+0x2b8>
   1b268:	b	1b6e4 <sf_gen_atmmulti_abbrev+0x758>
   1b26c:	add	r0, sp, #4
   1b270:	str	r5, [r0]
   1b274:	mov	r1, #7
   1b278:	mov	r2, #16
   1b27c:	mov	r3, #0
   1b280:	ldr	r0, [r5, #96]	; 0x60
   1b284:	str	r0, [r4, #96]	; 0x60
   1b288:	mov	r0, #54	; 0x36
   1b28c:	bl	19314 <sf_gen_atmfield_code>
   1b290:	ldr	r1, [r0, #44]	; 0x2c
   1b294:	cmp	r0, #0
   1b298:	clz	r1, r1
   1b29c:	lsr	r1, r1, #5
   1b2a0:	str	r1, [r0, #44]	; 0x2c
   1b2a4:	beq	1b2e0 <sf_gen_atmmulti_abbrev+0x354>
   1b2a8:	ldr	r2, [r4, #96]	; 0x60
   1b2ac:	mov	r3, r0
   1b2b0:	cmp	r1, #0
   1b2b4:	mov	r1, #84	; 0x54
   1b2b8:	add	r5, r3, #84	; 0x54
   1b2bc:	movweq	r1, #60	; 0x3c
   1b2c0:	addeq	r5, r3, #60	; 0x3c
   1b2c4:	ldr	r3, [r3, r1]
   1b2c8:	str	r2, [r5]
   1b2cc:	cmp	r3, #0
   1b2d0:	beq	1b2dc <sf_gen_atmmulti_abbrev+0x350>
   1b2d4:	ldr	r1, [r3, #44]	; 0x2c
   1b2d8:	b	1b2b0 <sf_gen_atmmulti_abbrev+0x324>
   1b2dc:	ldr	r1, [r0, #44]	; 0x2c
   1b2e0:	clz	r1, r1
   1b2e4:	cmp	r4, #0
   1b2e8:	lsr	r1, r1, #5
   1b2ec:	str	r1, [r0, #44]	; 0x2c
   1b2f0:	str	r4, [sp, #4]
   1b2f4:	beq	1b324 <sf_gen_atmmulti_abbrev+0x398>
   1b2f8:	mov	r2, r4
   1b2fc:	ldr	r3, [r2, #44]	; 0x2c
   1b300:	add	r1, r2, #84	; 0x54
   1b304:	cmp	r3, #0
   1b308:	mov	r3, #84	; 0x54
   1b30c:	movweq	r3, #60	; 0x3c
   1b310:	addeq	r1, r2, #60	; 0x3c
   1b314:	ldr	r2, [r2, r3]
   1b318:	cmp	r2, #0
   1b31c:	bne	1b2fc <sf_gen_atmmulti_abbrev+0x370>
   1b320:	b	1b328 <sf_gen_atmmulti_abbrev+0x39c>
   1b324:	add	r1, sp, #4
   1b328:	str	r0, [r1]
   1b32c:	mov	r1, #15
   1b330:	mov	r2, #16
   1b334:	mov	r3, #0
   1b338:	ldr	r0, [r0, #96]	; 0x60
   1b33c:	str	r0, [r4, #96]	; 0x60
   1b340:	mov	r0, #54	; 0x36
   1b344:	bl	19314 <sf_gen_atmfield_code>
   1b348:	ldr	r1, [r0, #44]	; 0x2c
   1b34c:	cmp	r0, #0
   1b350:	clz	r1, r1
   1b354:	lsr	r1, r1, #5
   1b358:	str	r1, [r0, #44]	; 0x2c
   1b35c:	beq	1b398 <sf_gen_atmmulti_abbrev+0x40c>
   1b360:	ldr	r2, [r4, #96]	; 0x60
   1b364:	mov	r3, r0
   1b368:	cmp	r1, #0
   1b36c:	mov	r1, #84	; 0x54
   1b370:	add	r5, r3, #84	; 0x54
   1b374:	movweq	r1, #60	; 0x3c
   1b378:	addeq	r5, r3, #60	; 0x3c
   1b37c:	ldr	r3, [r3, r1]
   1b380:	str	r2, [r5]
   1b384:	cmp	r3, #0
   1b388:	beq	1b394 <sf_gen_atmmulti_abbrev+0x408>
   1b38c:	ldr	r1, [r3, #44]	; 0x2c
   1b390:	b	1b368 <sf_gen_atmmulti_abbrev+0x3dc>
   1b394:	ldr	r1, [r0, #44]	; 0x2c
   1b398:	clz	r1, r1
   1b39c:	cmp	r4, #0
   1b3a0:	lsr	r1, r1, #5
   1b3a4:	str	r1, [r0, #44]	; 0x2c
   1b3a8:	str	r4, [sp, #4]
   1b3ac:	beq	1b3dc <sf_gen_atmmulti_abbrev+0x450>
   1b3b0:	mov	r2, r4
   1b3b4:	ldr	r3, [r2, #44]	; 0x2c
   1b3b8:	add	r1, r2, #84	; 0x54
   1b3bc:	cmp	r3, #0
   1b3c0:	mov	r3, #84	; 0x54
   1b3c4:	movweq	r3, #60	; 0x3c
   1b3c8:	addeq	r1, r2, #60	; 0x3c
   1b3cc:	ldr	r2, [r2, r3]
   1b3d0:	cmp	r2, #0
   1b3d4:	bne	1b3b4 <sf_gen_atmmulti_abbrev+0x428>
   1b3d8:	b	1b3e0 <sf_gen_atmmulti_abbrev+0x454>
   1b3dc:	add	r1, sp, #4
   1b3e0:	str	r0, [r1]
   1b3e4:	mov	r1, #77	; 0x4d
   1b3e8:	mov	r2, #16
   1b3ec:	mov	r3, #0
   1b3f0:	ldr	r0, [r0, #96]	; 0x60
   1b3f4:	str	r0, [r4, #96]	; 0x60
   1b3f8:	mov	r0, #54	; 0x36
   1b3fc:	bl	19314 <sf_gen_atmfield_code>
   1b400:	ldr	r1, [r0, #44]	; 0x2c
   1b404:	cmp	r0, #0
   1b408:	clz	r1, r1
   1b40c:	lsr	r1, r1, #5
   1b410:	str	r1, [r0, #44]	; 0x2c
   1b414:	beq	1b450 <sf_gen_atmmulti_abbrev+0x4c4>
   1b418:	ldr	r2, [r4, #96]	; 0x60
   1b41c:	mov	r3, r0
   1b420:	cmp	r1, #0
   1b424:	mov	r1, #84	; 0x54
   1b428:	add	r5, r3, #84	; 0x54
   1b42c:	movweq	r1, #60	; 0x3c
   1b430:	addeq	r5, r3, #60	; 0x3c
   1b434:	ldr	r3, [r3, r1]
   1b438:	str	r2, [r5]
   1b43c:	cmp	r3, #0
   1b440:	beq	1b44c <sf_gen_atmmulti_abbrev+0x4c0>
   1b444:	ldr	r1, [r3, #44]	; 0x2c
   1b448:	b	1b420 <sf_gen_atmmulti_abbrev+0x494>
   1b44c:	ldr	r1, [r0, #44]	; 0x2c
   1b450:	clz	r1, r1
   1b454:	cmp	r4, #0
   1b458:	lsr	r1, r1, #5
   1b45c:	str	r1, [r0, #44]	; 0x2c
   1b460:	str	r4, [sp, #4]
   1b464:	beq	1b494 <sf_gen_atmmulti_abbrev+0x508>
   1b468:	mov	r2, r4
   1b46c:	ldr	r3, [r2, #44]	; 0x2c
   1b470:	add	r1, r2, #84	; 0x54
   1b474:	cmp	r3, #0
   1b478:	mov	r3, #84	; 0x54
   1b47c:	movweq	r3, #60	; 0x3c
   1b480:	addeq	r1, r2, #60	; 0x3c
   1b484:	ldr	r2, [r2, r3]
   1b488:	cmp	r2, #0
   1b48c:	bne	1b46c <sf_gen_atmmulti_abbrev+0x4e0>
   1b490:	b	1b498 <sf_gen_atmmulti_abbrev+0x50c>
   1b494:	add	r1, sp, #4
   1b498:	str	r0, [r1]
   1b49c:	mov	r1, #90	; 0x5a
   1b4a0:	mov	r2, #16
   1b4a4:	mov	r3, #0
   1b4a8:	ldr	r0, [r0, #96]	; 0x60
   1b4ac:	str	r0, [r4, #96]	; 0x60
   1b4b0:	mov	r0, #54	; 0x36
   1b4b4:	bl	19314 <sf_gen_atmfield_code>
   1b4b8:	ldr	r1, [r0, #44]	; 0x2c
   1b4bc:	cmp	r0, #0
   1b4c0:	clz	r1, r1
   1b4c4:	lsr	r1, r1, #5
   1b4c8:	str	r1, [r0, #44]	; 0x2c
   1b4cc:	beq	1b508 <sf_gen_atmmulti_abbrev+0x57c>
   1b4d0:	ldr	r2, [r4, #96]	; 0x60
   1b4d4:	mov	r3, r0
   1b4d8:	cmp	r1, #0
   1b4dc:	mov	r1, #84	; 0x54
   1b4e0:	add	r5, r3, #84	; 0x54
   1b4e4:	movweq	r1, #60	; 0x3c
   1b4e8:	addeq	r5, r3, #60	; 0x3c
   1b4ec:	ldr	r3, [r3, r1]
   1b4f0:	str	r2, [r5]
   1b4f4:	cmp	r3, #0
   1b4f8:	beq	1b504 <sf_gen_atmmulti_abbrev+0x578>
   1b4fc:	ldr	r1, [r3, #44]	; 0x2c
   1b500:	b	1b4d8 <sf_gen_atmmulti_abbrev+0x54c>
   1b504:	ldr	r1, [r0, #44]	; 0x2c
   1b508:	clz	r1, r1
   1b50c:	cmp	r4, #0
   1b510:	lsr	r1, r1, #5
   1b514:	str	r1, [r0, #44]	; 0x2c
   1b518:	str	r4, [sp, #4]
   1b51c:	beq	1b54c <sf_gen_atmmulti_abbrev+0x5c0>
   1b520:	mov	r2, r4
   1b524:	ldr	r3, [r2, #44]	; 0x2c
   1b528:	add	r1, r2, #84	; 0x54
   1b52c:	cmp	r3, #0
   1b530:	mov	r3, #84	; 0x54
   1b534:	movweq	r3, #60	; 0x3c
   1b538:	addeq	r1, r2, #60	; 0x3c
   1b53c:	ldr	r2, [r2, r3]
   1b540:	cmp	r2, #0
   1b544:	bne	1b524 <sf_gen_atmmulti_abbrev+0x598>
   1b548:	b	1b550 <sf_gen_atmmulti_abbrev+0x5c4>
   1b54c:	add	r1, sp, #4
   1b550:	str	r0, [r1]
   1b554:	ldr	r0, [r0, #96]	; 0x60
   1b558:	str	r0, [r4, #96]	; 0x60
   1b55c:	mov	r0, #26
   1b560:	bl	196a0 <sf_gen_atmtype_abbrev>
   1b564:	cmp	r0, #0
   1b568:	beq	1b59c <sf_gen_atmmulti_abbrev+0x610>
   1b56c:	ldr	r1, [r4, #96]	; 0x60
   1b570:	mov	r2, r0
   1b574:	ldr	r3, [r2, #44]	; 0x2c
   1b578:	add	r5, r2, #84	; 0x54
   1b57c:	cmp	r3, #0
   1b580:	mov	r3, #84	; 0x54
   1b584:	movweq	r3, #60	; 0x3c
   1b588:	addeq	r5, r2, #60	; 0x3c
   1b58c:	ldr	r2, [r2, r3]
   1b590:	str	r1, [r5]
   1b594:	cmp	r2, #0
   1b598:	bne	1b574 <sf_gen_atmmulti_abbrev+0x5e8>
   1b59c:	ldr	r1, [r0, #44]	; 0x2c
   1b5a0:	cmp	r4, #0
   1b5a4:	clz	r1, r1
   1b5a8:	lsr	r1, r1, #5
   1b5ac:	str	r1, [r0, #44]	; 0x2c
   1b5b0:	ldr	r2, [r4, #44]	; 0x2c
   1b5b4:	clz	r1, r2
   1b5b8:	lsr	r1, r1, #5
   1b5bc:	str	r1, [r4, #44]	; 0x2c
   1b5c0:	str	r4, [sp, #4]
   1b5c4:	beq	1b9cc <sf_gen_atmmulti_abbrev+0xa40>
   1b5c8:	cmp	r2, #0
   1b5cc:	mov	r2, #60	; 0x3c
   1b5d0:	add	r1, r4, #60	; 0x3c
   1b5d4:	movweq	r2, #84	; 0x54
   1b5d8:	addeq	r1, r4, #84	; 0x54
   1b5dc:	ldr	r2, [r4, r2]
   1b5e0:	cmp	r2, #0
   1b5e4:	beq	1b9d0 <sf_gen_atmmulti_abbrev+0xa44>
   1b5e8:	ldr	r3, [r2, #44]	; 0x2c
   1b5ec:	add	r1, r2, #84	; 0x54
   1b5f0:	cmp	r3, #0
   1b5f4:	mov	r3, #84	; 0x54
   1b5f8:	movweq	r3, #60	; 0x3c
   1b5fc:	addeq	r1, r2, #60	; 0x3c
   1b600:	ldr	r2, [r2, r3]
   1b604:	cmp	r2, #0
   1b608:	bne	1b5e8 <sf_gen_atmmulti_abbrev+0x65c>
   1b60c:	b	1b9d0 <sf_gen_atmmulti_abbrev+0xa44>
   1b610:	add	r0, sp, #4
   1b614:	str	r5, [r0]
   1b618:	mov	r1, #0
   1b61c:	mov	r2, #16
   1b620:	mov	r3, #0
   1b624:	ldr	r0, [r5, #96]	; 0x60
   1b628:	str	r0, [r4, #96]	; 0x60
   1b62c:	mov	r0, #51	; 0x33
   1b630:	bl	19314 <sf_gen_atmfield_code>
   1b634:	cmp	r0, #0
   1b638:	beq	1b66c <sf_gen_atmmulti_abbrev+0x6e0>
   1b63c:	ldr	r1, [r4, #96]	; 0x60
   1b640:	mov	r2, r0
   1b644:	ldr	r3, [r2, #44]	; 0x2c
   1b648:	add	r5, r2, #84	; 0x54
   1b64c:	cmp	r3, #0
   1b650:	mov	r3, #84	; 0x54
   1b654:	movweq	r3, #60	; 0x3c
   1b658:	addeq	r5, r2, #60	; 0x3c
   1b65c:	ldr	r2, [r2, r3]
   1b660:	str	r1, [r5]
   1b664:	cmp	r2, #0
   1b668:	bne	1b644 <sf_gen_atmmulti_abbrev+0x6b8>
   1b66c:	ldr	r1, [r0, #44]	; 0x2c
   1b670:	cmp	r4, #0
   1b674:	clz	r1, r1
   1b678:	lsr	r1, r1, #5
   1b67c:	str	r1, [r0, #44]	; 0x2c
   1b680:	ldr	r2, [r4, #44]	; 0x2c
   1b684:	clz	r1, r2
   1b688:	lsr	r1, r1, #5
   1b68c:	str	r1, [r4, #44]	; 0x2c
   1b690:	str	r4, [sp, #4]
   1b694:	beq	1b9cc <sf_gen_atmmulti_abbrev+0xa40>
   1b698:	cmp	r2, #0
   1b69c:	mov	r2, #60	; 0x3c
   1b6a0:	add	r1, r4, #60	; 0x3c
   1b6a4:	movweq	r2, #84	; 0x54
   1b6a8:	addeq	r1, r4, #84	; 0x54
   1b6ac:	ldr	r2, [r4, r2]
   1b6b0:	cmp	r2, #0
   1b6b4:	beq	1b9d0 <sf_gen_atmmulti_abbrev+0xa44>
   1b6b8:	ldr	r3, [r2, #44]	; 0x2c
   1b6bc:	add	r1, r2, #84	; 0x54
   1b6c0:	cmp	r3, #0
   1b6c4:	mov	r3, #84	; 0x54
   1b6c8:	movweq	r3, #60	; 0x3c
   1b6cc:	addeq	r1, r2, #60	; 0x3c
   1b6d0:	ldr	r2, [r2, r3]
   1b6d4:	cmp	r2, #0
   1b6d8:	bne	1b6b8 <sf_gen_atmmulti_abbrev+0x72c>
   1b6dc:	b	1b9d0 <sf_gen_atmmulti_abbrev+0xa44>
   1b6e0:	add	r0, sp, #4
   1b6e4:	str	r5, [r0]
   1b6e8:	mov	r1, #7
   1b6ec:	mov	r2, #16
   1b6f0:	mov	r3, #0
   1b6f4:	ldr	r0, [r5, #96]	; 0x60
   1b6f8:	str	r0, [r4, #96]	; 0x60
   1b6fc:	mov	r0, #54	; 0x36
   1b700:	bl	19314 <sf_gen_atmfield_code>
   1b704:	ldr	r1, [r0, #44]	; 0x2c
   1b708:	cmp	r0, #0
   1b70c:	clz	r1, r1
   1b710:	lsr	r1, r1, #5
   1b714:	str	r1, [r0, #44]	; 0x2c
   1b718:	beq	1b754 <sf_gen_atmmulti_abbrev+0x7c8>
   1b71c:	ldr	r2, [r4, #96]	; 0x60
   1b720:	mov	r3, r0
   1b724:	cmp	r1, #0
   1b728:	mov	r1, #84	; 0x54
   1b72c:	add	r5, r3, #84	; 0x54
   1b730:	movweq	r1, #60	; 0x3c
   1b734:	addeq	r5, r3, #60	; 0x3c
   1b738:	ldr	r3, [r3, r1]
   1b73c:	str	r2, [r5]
   1b740:	cmp	r3, #0
   1b744:	beq	1b750 <sf_gen_atmmulti_abbrev+0x7c4>
   1b748:	ldr	r1, [r3, #44]	; 0x2c
   1b74c:	b	1b724 <sf_gen_atmmulti_abbrev+0x798>
   1b750:	ldr	r1, [r0, #44]	; 0x2c
   1b754:	clz	r1, r1
   1b758:	cmp	r4, #0
   1b75c:	lsr	r1, r1, #5
   1b760:	str	r1, [r0, #44]	; 0x2c
   1b764:	str	r4, [sp, #4]
   1b768:	beq	1b798 <sf_gen_atmmulti_abbrev+0x80c>
   1b76c:	mov	r2, r4
   1b770:	ldr	r3, [r2, #44]	; 0x2c
   1b774:	add	r1, r2, #84	; 0x54
   1b778:	cmp	r3, #0
   1b77c:	mov	r3, #84	; 0x54
   1b780:	movweq	r3, #60	; 0x3c
   1b784:	addeq	r1, r2, #60	; 0x3c
   1b788:	ldr	r2, [r2, r3]
   1b78c:	cmp	r2, #0
   1b790:	bne	1b770 <sf_gen_atmmulti_abbrev+0x7e4>
   1b794:	b	1b79c <sf_gen_atmmulti_abbrev+0x810>
   1b798:	add	r1, sp, #4
   1b79c:	str	r0, [r1]
   1b7a0:	mov	r1, #77	; 0x4d
   1b7a4:	mov	r2, #16
   1b7a8:	mov	r3, #0
   1b7ac:	ldr	r0, [r0, #96]	; 0x60
   1b7b0:	str	r0, [r4, #96]	; 0x60
   1b7b4:	mov	r0, #54	; 0x36
   1b7b8:	bl	19314 <sf_gen_atmfield_code>
   1b7bc:	ldr	r1, [r0, #44]	; 0x2c
   1b7c0:	cmp	r0, #0
   1b7c4:	clz	r1, r1
   1b7c8:	lsr	r1, r1, #5
   1b7cc:	str	r1, [r0, #44]	; 0x2c
   1b7d0:	beq	1b80c <sf_gen_atmmulti_abbrev+0x880>
   1b7d4:	ldr	r2, [r4, #96]	; 0x60
   1b7d8:	mov	r3, r0
   1b7dc:	cmp	r1, #0
   1b7e0:	mov	r1, #84	; 0x54
   1b7e4:	add	r5, r3, #84	; 0x54
   1b7e8:	movweq	r1, #60	; 0x3c
   1b7ec:	addeq	r5, r3, #60	; 0x3c
   1b7f0:	ldr	r3, [r3, r1]
   1b7f4:	str	r2, [r5]
   1b7f8:	cmp	r3, #0
   1b7fc:	beq	1b808 <sf_gen_atmmulti_abbrev+0x87c>
   1b800:	ldr	r1, [r3, #44]	; 0x2c
   1b804:	b	1b7dc <sf_gen_atmmulti_abbrev+0x850>
   1b808:	ldr	r1, [r0, #44]	; 0x2c
   1b80c:	clz	r1, r1
   1b810:	cmp	r4, #0
   1b814:	lsr	r1, r1, #5
   1b818:	str	r1, [r0, #44]	; 0x2c
   1b81c:	str	r4, [sp, #4]
   1b820:	beq	1b850 <sf_gen_atmmulti_abbrev+0x8c4>
   1b824:	mov	r2, r4
   1b828:	ldr	r3, [r2, #44]	; 0x2c
   1b82c:	add	r1, r2, #84	; 0x54
   1b830:	cmp	r3, #0
   1b834:	mov	r3, #84	; 0x54
   1b838:	movweq	r3, #60	; 0x3c
   1b83c:	addeq	r1, r2, #60	; 0x3c
   1b840:	ldr	r2, [r2, r3]
   1b844:	cmp	r2, #0
   1b848:	bne	1b828 <sf_gen_atmmulti_abbrev+0x89c>
   1b84c:	b	1b854 <sf_gen_atmmulti_abbrev+0x8c8>
   1b850:	add	r1, sp, #4
   1b854:	str	r0, [r1]
   1b858:	mov	r1, #90	; 0x5a
   1b85c:	mov	r2, #16
   1b860:	mov	r3, #0
   1b864:	ldr	r0, [r0, #96]	; 0x60
   1b868:	str	r0, [r4, #96]	; 0x60
   1b86c:	mov	r0, #54	; 0x36
   1b870:	bl	19314 <sf_gen_atmfield_code>
   1b874:	ldr	r1, [r0, #44]	; 0x2c
   1b878:	cmp	r0, #0
   1b87c:	clz	r1, r1
   1b880:	lsr	r1, r1, #5
   1b884:	str	r1, [r0, #44]	; 0x2c
   1b888:	beq	1b8c4 <sf_gen_atmmulti_abbrev+0x938>
   1b88c:	ldr	r2, [r4, #96]	; 0x60
   1b890:	mov	r3, r0
   1b894:	cmp	r1, #0
   1b898:	mov	r1, #84	; 0x54
   1b89c:	add	r5, r3, #84	; 0x54
   1b8a0:	movweq	r1, #60	; 0x3c
   1b8a4:	addeq	r5, r3, #60	; 0x3c
   1b8a8:	ldr	r3, [r3, r1]
   1b8ac:	str	r2, [r5]
   1b8b0:	cmp	r3, #0
   1b8b4:	beq	1b8c0 <sf_gen_atmmulti_abbrev+0x934>
   1b8b8:	ldr	r1, [r3, #44]	; 0x2c
   1b8bc:	b	1b894 <sf_gen_atmmulti_abbrev+0x908>
   1b8c0:	ldr	r1, [r0, #44]	; 0x2c
   1b8c4:	clz	r1, r1
   1b8c8:	cmp	r4, #0
   1b8cc:	lsr	r1, r1, #5
   1b8d0:	str	r1, [r0, #44]	; 0x2c
   1b8d4:	str	r4, [sp, #4]
   1b8d8:	beq	1b908 <sf_gen_atmmulti_abbrev+0x97c>
   1b8dc:	mov	r2, r4
   1b8e0:	ldr	r3, [r2, #44]	; 0x2c
   1b8e4:	add	r1, r2, #84	; 0x54
   1b8e8:	cmp	r3, #0
   1b8ec:	mov	r3, #84	; 0x54
   1b8f0:	movweq	r3, #60	; 0x3c
   1b8f4:	addeq	r1, r2, #60	; 0x3c
   1b8f8:	ldr	r2, [r2, r3]
   1b8fc:	cmp	r2, #0
   1b900:	bne	1b8e0 <sf_gen_atmmulti_abbrev+0x954>
   1b904:	b	1b90c <sf_gen_atmmulti_abbrev+0x980>
   1b908:	add	r1, sp, #4
   1b90c:	str	r0, [r1]
   1b910:	ldr	r0, [r0, #96]	; 0x60
   1b914:	str	r0, [r4, #96]	; 0x60
   1b918:	mov	r0, #22
   1b91c:	bl	196a0 <sf_gen_atmtype_abbrev>
   1b920:	cmp	r0, #0
   1b924:	beq	1b958 <sf_gen_atmmulti_abbrev+0x9cc>
   1b928:	ldr	r1, [r4, #96]	; 0x60
   1b92c:	mov	r2, r0
   1b930:	ldr	r3, [r2, #44]	; 0x2c
   1b934:	add	r5, r2, #84	; 0x54
   1b938:	cmp	r3, #0
   1b93c:	mov	r3, #84	; 0x54
   1b940:	movweq	r3, #60	; 0x3c
   1b944:	addeq	r5, r2, #60	; 0x3c
   1b948:	ldr	r2, [r2, r3]
   1b94c:	str	r1, [r5]
   1b950:	cmp	r2, #0
   1b954:	bne	1b930 <sf_gen_atmmulti_abbrev+0x9a4>
   1b958:	ldr	r1, [r0, #44]	; 0x2c
   1b95c:	cmp	r4, #0
   1b960:	clz	r1, r1
   1b964:	lsr	r1, r1, #5
   1b968:	str	r1, [r0, #44]	; 0x2c
   1b96c:	ldr	r2, [r4, #44]	; 0x2c
   1b970:	clz	r1, r2
   1b974:	lsr	r1, r1, #5
   1b978:	str	r1, [r4, #44]	; 0x2c
   1b97c:	str	r4, [sp, #4]
   1b980:	beq	1b9cc <sf_gen_atmmulti_abbrev+0xa40>
   1b984:	cmp	r2, #0
   1b988:	mov	r2, #60	; 0x3c
   1b98c:	add	r1, r4, #60	; 0x3c
   1b990:	movweq	r2, #84	; 0x54
   1b994:	addeq	r1, r4, #84	; 0x54
   1b998:	ldr	r2, [r4, r2]
   1b99c:	cmp	r2, #0
   1b9a0:	beq	1b9d0 <sf_gen_atmmulti_abbrev+0xa44>
   1b9a4:	ldr	r3, [r2, #44]	; 0x2c
   1b9a8:	add	r1, r2, #84	; 0x54
   1b9ac:	cmp	r3, #0
   1b9b0:	mov	r3, #84	; 0x54
   1b9b4:	movweq	r3, #60	; 0x3c
   1b9b8:	addeq	r1, r2, #60	; 0x3c
   1b9bc:	ldr	r2, [r2, r3]
   1b9c0:	cmp	r2, #0
   1b9c4:	bne	1b9a4 <sf_gen_atmmulti_abbrev+0xa18>
   1b9c8:	b	1b9d0 <sf_gen_atmmulti_abbrev+0xa44>
   1b9cc:	add	r1, sp, #4
   1b9d0:	str	r0, [r1]
   1b9d4:	ldr	r1, [r4, #44]	; 0x2c
   1b9d8:	clz	r1, r1
   1b9dc:	lsr	r1, r1, #5
   1b9e0:	str	r1, [r4, #44]	; 0x2c
   1b9e4:	ldr	r0, [r0, #96]	; 0x60
   1b9e8:	str	r0, [r4, #96]	; 0x60
   1b9ec:	mov	r0, r4
   1b9f0:	sub	sp, fp, #8
   1b9f4:	pop	{r4, r5, fp, pc}
   1b9f8:	bl	edc <abort@plt>
   1b9fc:	ldr	r0, [pc, #56]	; 1ba3c <sf_gen_atmmulti_abbrev+0xab0>
   1ba00:	add	r0, pc, r0
   1ba04:	bl	2068 <sf_bpf_error>
   1ba08:	ldr	r0, [pc, #52]	; 1ba44 <sf_gen_atmmulti_abbrev+0xab8>
   1ba0c:	add	r0, pc, r0
   1ba10:	bl	2068 <sf_bpf_error>
   1ba14:	ldr	r0, [pc, #36]	; 1ba40 <sf_gen_atmmulti_abbrev+0xab4>
   1ba18:	add	r0, pc, r0
   1ba1c:	bl	2068 <sf_bpf_error>
   1ba20:	ldr	r0, [pc, #32]	; 1ba48 <sf_gen_atmmulti_abbrev+0xabc>
   1ba24:	add	r0, pc, r0
   1ba28:	bl	2068 <sf_bpf_error>
   1ba2c:	.word	0x0002c3e4
   1ba30:	.word	0x0002c4a8
   1ba34:	.word	0x0002c47c
   1ba38:	.word	0x0002c34c
   1ba3c:	.word	0x0000ebeb
   1ba40:	.word	0x0000ebf3
   1ba44:	.word	0x0000ec21
   1ba48:	.word	0x0000ec30

0001ba4c <gen_ether_linktype>:
   1ba4c:	push	{r4, r5, r6, r7, fp, lr}
   1ba50:	add	fp, sp, #16
   1ba54:	sub	sp, sp, #8
   1ba58:	mov	r5, r0
   1ba5c:	cmp	r0, #253	; 0xfd
   1ba60:	bgt	1bb6c <gen_ether_linktype+0x120>
   1ba64:	cmp	r5, #6
   1ba68:	beq	1ba7c <gen_ether_linktype+0x30>
   1ba6c:	cmp	r5, #224	; 0xe0
   1ba70:	beq	1bebc <gen_ether_linktype+0x470>
   1ba74:	cmp	r5, #240	; 0xf0
   1ba78:	bne	1bd98 <gen_ether_linktype+0x34c>
   1ba7c:	ldr	r1, [pc, #1976]	; 1c23c <gen_ether_linktype+0x7f0>
   1ba80:	mov	r0, #1
   1ba84:	mov	r2, #8
   1ba88:	movw	r3, #1500	; 0x5dc
   1ba8c:	ldr	r1, [pc, r1]
   1ba90:	bl	15d2c <gen_cmp_gt>
   1ba94:	mov	r6, r0
   1ba98:	ldr	r0, [r0, #44]	; 0x2c
   1ba9c:	orr	r3, r5, r5, lsl #8
   1baa0:	mov	r1, #0
   1baa4:	mov	r2, #8
   1baa8:	clz	r0, r0
   1baac:	lsr	r0, r0, #5
   1bab0:	str	r0, [r6, #44]	; 0x2c
   1bab4:	mov	r0, #2
   1bab8:	bl	a8f8 <gen_cmp>
   1babc:	mov	r4, r0
   1bac0:	cmp	r6, #0
   1bac4:	beq	1baf8 <gen_ether_linktype+0xac>
   1bac8:	ldr	r0, [r4, #96]	; 0x60
   1bacc:	mov	r1, r6
   1bad0:	ldr	r2, [r1, #44]	; 0x2c
   1bad4:	add	r3, r1, #84	; 0x54
   1bad8:	cmp	r2, #0
   1badc:	mov	r2, #84	; 0x54
   1bae0:	movweq	r2, #60	; 0x3c
   1bae4:	addeq	r3, r1, #60	; 0x3c
   1bae8:	ldr	r1, [r1, r2]
   1baec:	str	r0, [r3]
   1baf0:	cmp	r1, #0
   1baf4:	bne	1bad0 <gen_ether_linktype+0x84>
   1baf8:	ldr	r0, [r6, #44]	; 0x2c
   1bafc:	cmp	r4, #0
   1bb00:	clz	r0, r0
   1bb04:	lsr	r0, r0, #5
   1bb08:	str	r0, [r6, #44]	; 0x2c
   1bb0c:	ldr	r1, [r4, #44]	; 0x2c
   1bb10:	clz	r0, r1
   1bb14:	lsr	r0, r0, #5
   1bb18:	str	r0, [r4, #44]	; 0x2c
   1bb1c:	str	r4, [sp]
   1bb20:	beq	1be9c <gen_ether_linktype+0x450>
   1bb24:	cmp	r1, #0
   1bb28:	mov	r1, #60	; 0x3c
   1bb2c:	add	r0, r4, #60	; 0x3c
   1bb30:	movweq	r1, #84	; 0x54
   1bb34:	addeq	r0, r4, #84	; 0x54
   1bb38:	ldr	r1, [r4, r1]
   1bb3c:	cmp	r1, #0
   1bb40:	beq	1bea0 <gen_ether_linktype+0x454>
   1bb44:	ldr	r2, [r1, #44]	; 0x2c
   1bb48:	add	r0, r1, #84	; 0x54
   1bb4c:	cmp	r2, #0
   1bb50:	mov	r2, #84	; 0x54
   1bb54:	movweq	r2, #60	; 0x3c
   1bb58:	addeq	r0, r1, #60	; 0x3c
   1bb5c:	ldr	r1, [r1, r2]
   1bb60:	cmp	r1, #0
   1bb64:	bne	1bb44 <gen_ether_linktype+0xf8>
   1bb68:	b	1bea0 <gen_ether_linktype+0x454>
   1bb6c:	movw	r0, #33011	; 0x80f3
   1bb70:	cmp	r5, r0
   1bb74:	movwne	r0, #32923	; 0x809b
   1bb78:	cmpne	r5, r0
   1bb7c:	bne	1bd90 <gen_ether_linktype+0x344>
   1bb80:	ldr	r1, [pc, #1728]	; 1c248 <gen_ether_linktype+0x7fc>
   1bb84:	mov	r0, #1
   1bb88:	mov	r2, #8
   1bb8c:	movw	r3, #1500	; 0x5dc
   1bb90:	ldr	r1, [pc, r1]
   1bb94:	bl	15d2c <gen_cmp_gt>
   1bb98:	mov	r6, r0
   1bb9c:	ldr	r0, [r0, #44]	; 0x2c
   1bba0:	mvn	r1, #12
   1bba4:	mov	r2, #0
   1bba8:	mov	r7, sp
   1bbac:	mov	r3, r7
   1bbb0:	clz	r0, r0
   1bbb4:	lsr	r0, r0, #5
   1bbb8:	str	r0, [r6, #44]	; 0x2c
   1bbbc:	movw	r0, #32923	; 0x809b
   1bbc0:	cmp	r5, r0
   1bbc4:	mvneq	r1, #100	; 0x64
   1bbc8:	cmp	r5, r0
   1bbcc:	sub	r0, r5, r0
   1bbd0:	clz	r0, r0
   1bbd4:	strb	r1, [sp, #7]
   1bbd8:	mov	r1, #128	; 0x80
   1bbdc:	movweq	r2, #7
   1bbe0:	lsr	r0, r0, #5
   1bbe4:	strb	r1, [sp, #6]
   1bbe8:	mov	r1, #0
   1bbec:	strb	r2, [sp, #5]
   1bbf0:	mov	r2, #8
   1bbf4:	lsl	r0, r0, #3
   1bbf8:	strb	r1, [sp, #4]
   1bbfc:	mov	r1, #0
   1bc00:	strb	r0, [sp, #3]
   1bc04:	mov	r0, #3
   1bc08:	strb	r0, [sp, #2]
   1bc0c:	movw	r0, #43690	; 0xaaaa
   1bc10:	strh	r0, [sp]
   1bc14:	mov	r0, #2
   1bc18:	bl	1c314 <gen_bcmp>
   1bc1c:	mov	r4, r0
   1bc20:	cmp	r6, #0
   1bc24:	beq	1bc58 <gen_ether_linktype+0x20c>
   1bc28:	ldr	r0, [r4, #96]	; 0x60
   1bc2c:	mov	r1, r6
   1bc30:	ldr	r2, [r1, #44]	; 0x2c
   1bc34:	add	r3, r1, #84	; 0x54
   1bc38:	cmp	r2, #0
   1bc3c:	mov	r2, #84	; 0x54
   1bc40:	movweq	r2, #60	; 0x3c
   1bc44:	addeq	r3, r1, #60	; 0x3c
   1bc48:	ldr	r1, [r1, r2]
   1bc4c:	str	r0, [r3]
   1bc50:	cmp	r1, #0
   1bc54:	bne	1bc30 <gen_ether_linktype+0x1e4>
   1bc58:	ldr	r0, [r6, #44]	; 0x2c
   1bc5c:	cmp	r4, #0
   1bc60:	clz	r0, r0
   1bc64:	lsr	r0, r0, #5
   1bc68:	str	r0, [r6, #44]	; 0x2c
   1bc6c:	ldr	r0, [r4, #44]	; 0x2c
   1bc70:	clz	r1, r0
   1bc74:	lsr	r1, r1, #5
   1bc78:	str	r1, [r4, #44]	; 0x2c
   1bc7c:	str	r4, [sp]
   1bc80:	beq	1bcc8 <gen_ether_linktype+0x27c>
   1bc84:	cmp	r0, #0
   1bc88:	mov	r0, #60	; 0x3c
   1bc8c:	add	r7, r4, #60	; 0x3c
   1bc90:	movweq	r0, #84	; 0x54
   1bc94:	addeq	r7, r4, #84	; 0x54
   1bc98:	ldr	r0, [r4, r0]
   1bc9c:	cmp	r0, #0
   1bca0:	beq	1bcc8 <gen_ether_linktype+0x27c>
   1bca4:	ldr	r1, [r0, #44]	; 0x2c
   1bca8:	add	r7, r0, #84	; 0x54
   1bcac:	cmp	r1, #0
   1bcb0:	mov	r1, #84	; 0x54
   1bcb4:	movweq	r1, #60	; 0x3c
   1bcb8:	addeq	r7, r0, #60	; 0x3c
   1bcbc:	ldr	r0, [r0, r1]
   1bcc0:	cmp	r0, #0
   1bcc4:	bne	1bca4 <gen_ether_linktype+0x258>
   1bcc8:	str	r6, [r7]
   1bccc:	mov	r2, #8
   1bcd0:	mov	r3, r5
   1bcd4:	ldr	r0, [r4, #44]	; 0x2c
   1bcd8:	clz	r0, r0
   1bcdc:	lsr	r0, r0, #5
   1bce0:	str	r0, [r4, #44]	; 0x2c
   1bce4:	ldr	r0, [r6, #96]	; 0x60
   1bce8:	str	r0, [r4, #96]	; 0x60
   1bcec:	mov	r0, #1
   1bcf0:	ldr	r1, [pc, #1364]	; 1c24c <gen_ether_linktype+0x800>
   1bcf4:	ldr	r1, [pc, r1]
   1bcf8:	bl	a8f8 <gen_cmp>
   1bcfc:	ldr	r1, [r0, #44]	; 0x2c
   1bd00:	cmp	r0, #0
   1bd04:	clz	r1, r1
   1bd08:	lsr	r1, r1, #5
   1bd0c:	str	r1, [r0, #44]	; 0x2c
   1bd10:	beq	1bd4c <gen_ether_linktype+0x300>
   1bd14:	ldr	r2, [r4, #96]	; 0x60
   1bd18:	mov	r3, r0
   1bd1c:	cmp	r1, #0
   1bd20:	mov	r1, #84	; 0x54
   1bd24:	add	r7, r3, #84	; 0x54
   1bd28:	movweq	r1, #60	; 0x3c
   1bd2c:	addeq	r7, r3, #60	; 0x3c
   1bd30:	ldr	r3, [r3, r1]
   1bd34:	str	r2, [r7]
   1bd38:	cmp	r3, #0
   1bd3c:	beq	1bd48 <gen_ether_linktype+0x2fc>
   1bd40:	ldr	r1, [r3, #44]	; 0x2c
   1bd44:	b	1bd1c <gen_ether_linktype+0x2d0>
   1bd48:	ldr	r1, [r0, #44]	; 0x2c
   1bd4c:	clz	r1, r1
   1bd50:	cmp	r4, #0
   1bd54:	lsr	r1, r1, #5
   1bd58:	str	r1, [r0, #44]	; 0x2c
   1bd5c:	str	r4, [sp]
   1bd60:	beq	1c218 <gen_ether_linktype+0x7cc>
   1bd64:	mov	r2, r4
   1bd68:	ldr	r3, [r2, #44]	; 0x2c
   1bd6c:	add	r1, r2, #84	; 0x54
   1bd70:	cmp	r3, #0
   1bd74:	mov	r3, #84	; 0x54
   1bd78:	movweq	r3, #60	; 0x3c
   1bd7c:	addeq	r1, r2, #60	; 0x3c
   1bd80:	ldr	r2, [r2, r3]
   1bd84:	cmp	r2, #0
   1bd88:	bne	1bd68 <gen_ether_linktype+0x31c>
   1bd8c:	b	1c21c <gen_ether_linktype+0x7d0>
   1bd90:	cmp	r5, #254	; 0xfe
   1bd94:	beq	1ba7c <gen_ether_linktype+0x30>
   1bd98:	ldr	r1, [pc, #1172]	; 1c234 <gen_ether_linktype+0x7e8>
   1bd9c:	movw	r0, #1500	; 0x5dc
   1bda0:	cmp	r5, r0
   1bda4:	ldr	r1, [pc, r1]
   1bda8:	bgt	1bf80 <gen_ether_linktype+0x534>
   1bdac:	mov	r0, #1
   1bdb0:	mov	r2, #8
   1bdb4:	movw	r3, #1500	; 0x5dc
   1bdb8:	bl	15d2c <gen_cmp_gt>
   1bdbc:	mov	r6, r0
   1bdc0:	ldr	r0, [r0, #44]	; 0x2c
   1bdc4:	mov	r2, #16
   1bdc8:	mov	r3, r5
   1bdcc:	clz	r0, r0
   1bdd0:	lsr	r0, r0, #5
   1bdd4:	str	r0, [r6, #44]	; 0x2c
   1bdd8:	ldr	r0, [pc, #1112]	; 1c238 <gen_ether_linktype+0x7ec>
   1bddc:	ldr	r0, [pc, r0]
   1bde0:	add	r1, r0, #2
   1bde4:	mov	r0, #1
   1bde8:	bl	a8f8 <gen_cmp>
   1bdec:	mov	r4, r0
   1bdf0:	cmp	r6, #0
   1bdf4:	beq	1be28 <gen_ether_linktype+0x3dc>
   1bdf8:	ldr	r0, [r4, #96]	; 0x60
   1bdfc:	mov	r1, r6
   1be00:	ldr	r2, [r1, #44]	; 0x2c
   1be04:	add	r3, r1, #84	; 0x54
   1be08:	cmp	r2, #0
   1be0c:	mov	r2, #84	; 0x54
   1be10:	movweq	r2, #60	; 0x3c
   1be14:	addeq	r3, r1, #60	; 0x3c
   1be18:	ldr	r1, [r1, r2]
   1be1c:	str	r0, [r3]
   1be20:	cmp	r1, #0
   1be24:	bne	1be00 <gen_ether_linktype+0x3b4>
   1be28:	ldr	r0, [r6, #44]	; 0x2c
   1be2c:	cmp	r4, #0
   1be30:	clz	r0, r0
   1be34:	lsr	r0, r0, #5
   1be38:	str	r0, [r6, #44]	; 0x2c
   1be3c:	ldr	r1, [r4, #44]	; 0x2c
   1be40:	clz	r0, r1
   1be44:	lsr	r0, r0, #5
   1be48:	str	r0, [r4, #44]	; 0x2c
   1be4c:	str	r4, [sp]
   1be50:	beq	1be9c <gen_ether_linktype+0x450>
   1be54:	cmp	r1, #0
   1be58:	mov	r1, #60	; 0x3c
   1be5c:	add	r0, r4, #60	; 0x3c
   1be60:	movweq	r1, #84	; 0x54
   1be64:	addeq	r0, r4, #84	; 0x54
   1be68:	ldr	r1, [r4, r1]
   1be6c:	cmp	r1, #0
   1be70:	beq	1bea0 <gen_ether_linktype+0x454>
   1be74:	ldr	r2, [r1, #44]	; 0x2c
   1be78:	add	r0, r1, #84	; 0x54
   1be7c:	cmp	r2, #0
   1be80:	mov	r2, #84	; 0x54
   1be84:	movweq	r2, #60	; 0x3c
   1be88:	addeq	r0, r1, #60	; 0x3c
   1be8c:	ldr	r1, [r1, r2]
   1be90:	cmp	r1, #0
   1be94:	bne	1be74 <gen_ether_linktype+0x428>
   1be98:	b	1bea0 <gen_ether_linktype+0x454>
   1be9c:	mov	r0, sp
   1bea0:	str	r6, [r0]
   1bea4:	ldr	r0, [r4, #44]	; 0x2c
   1bea8:	clz	r0, r0
   1beac:	lsr	r0, r0, #5
   1beb0:	str	r0, [r4, #44]	; 0x2c
   1beb4:	ldr	r0, [r6, #96]	; 0x60
   1beb8:	b	1c224 <gen_ether_linktype+0x7d8>
   1bebc:	mov	r0, #2
   1bec0:	mov	r1, #0
   1bec4:	mov	r2, #16
   1bec8:	mov	r3, #224	; 0xe0
   1becc:	bl	a8f8 <gen_cmp>
   1bed0:	mov	r5, r0
   1bed4:	mov	r0, #2
   1bed8:	mov	r1, #0
   1bedc:	mov	r2, #8
   1bee0:	movw	r3, #65535	; 0xffff
   1bee4:	bl	a8f8 <gen_cmp>
   1bee8:	mov	r4, r0
   1beec:	ldr	r0, [r5, #44]	; 0x2c
   1bef0:	cmp	r5, #0
   1bef4:	clz	r0, r0
   1bef8:	lsr	r0, r0, #5
   1befc:	str	r0, [r5, #44]	; 0x2c
   1bf00:	beq	1bf3c <gen_ether_linktype+0x4f0>
   1bf04:	ldr	r1, [r4, #96]	; 0x60
   1bf08:	mov	r2, r5
   1bf0c:	cmp	r0, #0
   1bf10:	mov	r0, #84	; 0x54
   1bf14:	add	r3, r2, #84	; 0x54
   1bf18:	movweq	r0, #60	; 0x3c
   1bf1c:	addeq	r3, r2, #60	; 0x3c
   1bf20:	ldr	r2, [r2, r0]
   1bf24:	str	r1, [r3]
   1bf28:	cmp	r2, #0
   1bf2c:	beq	1bf38 <gen_ether_linktype+0x4ec>
   1bf30:	ldr	r0, [r2, #44]	; 0x2c
   1bf34:	b	1bf0c <gen_ether_linktype+0x4c0>
   1bf38:	ldr	r0, [r5, #44]	; 0x2c
   1bf3c:	clz	r0, r0
   1bf40:	cmp	r4, #0
   1bf44:	lsr	r0, r0, #5
   1bf48:	str	r0, [r5, #44]	; 0x2c
   1bf4c:	str	r4, [sp]
   1bf50:	beq	1bf98 <gen_ether_linktype+0x54c>
   1bf54:	mov	r1, r4
   1bf58:	ldr	r2, [r1, #44]	; 0x2c
   1bf5c:	add	r0, r1, #84	; 0x54
   1bf60:	cmp	r2, #0
   1bf64:	mov	r2, #84	; 0x54
   1bf68:	movweq	r2, #60	; 0x3c
   1bf6c:	addeq	r0, r1, #60	; 0x3c
   1bf70:	ldr	r1, [r1, r2]
   1bf74:	cmp	r1, #0
   1bf78:	bne	1bf58 <gen_ether_linktype+0x50c>
   1bf7c:	b	1bf9c <gen_ether_linktype+0x550>
   1bf80:	mov	r0, #1
   1bf84:	mov	r2, #8
   1bf88:	mov	r3, r5
   1bf8c:	sub	sp, fp, #16
   1bf90:	pop	{r4, r5, r6, r7, fp, lr}
   1bf94:	b	a8f8 <gen_cmp>
   1bf98:	mov	r0, sp
   1bf9c:	str	r5, [r0]
   1bfa0:	mov	r1, #0
   1bfa4:	mov	r2, #8
   1bfa8:	ldr	r0, [r5, #96]	; 0x60
   1bfac:	mov	r5, sp
   1bfb0:	mov	r3, r5
   1bfb4:	str	r0, [r4, #96]	; 0x60
   1bfb8:	movw	r0, #0
   1bfbc:	movt	r0, #14209	; 0x3781
   1bfc0:	str	r0, [sp, #4]
   1bfc4:	movw	r0, #43690	; 0xaaaa
   1bfc8:	movt	r0, #3
   1bfcc:	str	r0, [sp]
   1bfd0:	mov	r0, #2
   1bfd4:	bl	1c314 <gen_bcmp>
   1bfd8:	ldr	r1, [r0, #44]	; 0x2c
   1bfdc:	cmp	r0, #0
   1bfe0:	clz	r1, r1
   1bfe4:	lsr	r1, r1, #5
   1bfe8:	str	r1, [r0, #44]	; 0x2c
   1bfec:	beq	1c028 <gen_ether_linktype+0x5dc>
   1bff0:	ldr	r2, [r4, #96]	; 0x60
   1bff4:	mov	r3, r0
   1bff8:	cmp	r1, #0
   1bffc:	mov	r1, #84	; 0x54
   1c000:	add	r7, r3, #84	; 0x54
   1c004:	movweq	r1, #60	; 0x3c
   1c008:	addeq	r7, r3, #60	; 0x3c
   1c00c:	ldr	r3, [r3, r1]
   1c010:	str	r2, [r7]
   1c014:	cmp	r3, #0
   1c018:	beq	1c024 <gen_ether_linktype+0x5d8>
   1c01c:	ldr	r1, [r3, #44]	; 0x2c
   1c020:	b	1bff8 <gen_ether_linktype+0x5ac>
   1c024:	ldr	r1, [r0, #44]	; 0x2c
   1c028:	clz	r1, r1
   1c02c:	cmp	r4, #0
   1c030:	lsr	r1, r1, #5
   1c034:	str	r1, [r0, #44]	; 0x2c
   1c038:	str	r4, [sp]
   1c03c:	beq	1c068 <gen_ether_linktype+0x61c>
   1c040:	mov	r1, r4
   1c044:	ldr	r2, [r1, #44]	; 0x2c
   1c048:	add	r5, r1, #84	; 0x54
   1c04c:	cmp	r2, #0
   1c050:	mov	r2, #84	; 0x54
   1c054:	movweq	r2, #60	; 0x3c
   1c058:	addeq	r5, r1, #60	; 0x3c
   1c05c:	ldr	r1, [r1, r2]
   1c060:	cmp	r1, #0
   1c064:	bne	1c044 <gen_ether_linktype+0x5f8>
   1c068:	str	r0, [r5]
   1c06c:	mov	r2, #8
   1c070:	movw	r3, #1500	; 0x5dc
   1c074:	ldr	r0, [r0, #96]	; 0x60
   1c078:	str	r0, [r4, #96]	; 0x60
   1c07c:	mov	r0, #1
   1c080:	ldr	r1, [pc, #440]	; 1c240 <gen_ether_linktype+0x7f4>
   1c084:	ldr	r1, [pc, r1]
   1c088:	bl	15d2c <gen_cmp_gt>
   1c08c:	ldr	r1, [r0, #44]	; 0x2c
   1c090:	cmp	r0, #0
   1c094:	clz	r1, r1
   1c098:	lsr	r1, r1, #5
   1c09c:	str	r1, [r0, #44]	; 0x2c
   1c0a0:	beq	1c0dc <gen_ether_linktype+0x690>
   1c0a4:	ldr	r2, [r4, #96]	; 0x60
   1c0a8:	mov	r3, r0
   1c0ac:	cmp	r1, #0
   1c0b0:	mov	r1, #84	; 0x54
   1c0b4:	add	r7, r3, #84	; 0x54
   1c0b8:	movweq	r1, #60	; 0x3c
   1c0bc:	addeq	r7, r3, #60	; 0x3c
   1c0c0:	ldr	r3, [r3, r1]
   1c0c4:	str	r2, [r7]
   1c0c8:	cmp	r3, #0
   1c0cc:	beq	1c0d8 <gen_ether_linktype+0x68c>
   1c0d0:	ldr	r1, [r3, #44]	; 0x2c
   1c0d4:	b	1c0ac <gen_ether_linktype+0x660>
   1c0d8:	ldr	r1, [r0, #44]	; 0x2c
   1c0dc:	clz	r1, r1
   1c0e0:	cmp	r4, #0
   1c0e4:	lsr	r1, r1, #5
   1c0e8:	str	r1, [r0, #44]	; 0x2c
   1c0ec:	ldr	r2, [r4, #44]	; 0x2c
   1c0f0:	clz	r1, r2
   1c0f4:	lsr	r1, r1, #5
   1c0f8:	str	r1, [r4, #44]	; 0x2c
   1c0fc:	str	r4, [sp]
   1c100:	beq	1c14c <gen_ether_linktype+0x700>
   1c104:	cmp	r2, #0
   1c108:	mov	r2, #60	; 0x3c
   1c10c:	add	r1, r4, #60	; 0x3c
   1c110:	movweq	r2, #84	; 0x54
   1c114:	addeq	r1, r4, #84	; 0x54
   1c118:	ldr	r2, [r4, r2]
   1c11c:	cmp	r2, #0
   1c120:	beq	1c150 <gen_ether_linktype+0x704>
   1c124:	ldr	r3, [r2, #44]	; 0x2c
   1c128:	add	r1, r2, #84	; 0x54
   1c12c:	cmp	r3, #0
   1c130:	mov	r3, #84	; 0x54
   1c134:	movweq	r3, #60	; 0x3c
   1c138:	addeq	r1, r2, #60	; 0x3c
   1c13c:	ldr	r2, [r2, r3]
   1c140:	cmp	r2, #0
   1c144:	bne	1c124 <gen_ether_linktype+0x6d8>
   1c148:	b	1c150 <gen_ether_linktype+0x704>
   1c14c:	mov	r1, sp
   1c150:	str	r0, [r1]
   1c154:	mov	r2, #8
   1c158:	movw	r3, #33079	; 0x8137
   1c15c:	ldr	r1, [r4, #44]	; 0x2c
   1c160:	clz	r1, r1
   1c164:	lsr	r1, r1, #5
   1c168:	str	r1, [r4, #44]	; 0x2c
   1c16c:	ldr	r0, [r0, #96]	; 0x60
   1c170:	str	r0, [r4, #96]	; 0x60
   1c174:	mov	r0, #1
   1c178:	ldr	r1, [pc, #196]	; 1c244 <gen_ether_linktype+0x7f8>
   1c17c:	ldr	r1, [pc, r1]
   1c180:	bl	a8f8 <gen_cmp>
   1c184:	ldr	r1, [r0, #44]	; 0x2c
   1c188:	cmp	r0, #0
   1c18c:	clz	r1, r1
   1c190:	lsr	r1, r1, #5
   1c194:	str	r1, [r0, #44]	; 0x2c
   1c198:	beq	1c1d4 <gen_ether_linktype+0x788>
   1c19c:	ldr	r2, [r4, #96]	; 0x60
   1c1a0:	mov	r3, r0
   1c1a4:	cmp	r1, #0
   1c1a8:	mov	r1, #84	; 0x54
   1c1ac:	add	r7, r3, #84	; 0x54
   1c1b0:	movweq	r1, #60	; 0x3c
   1c1b4:	addeq	r7, r3, #60	; 0x3c
   1c1b8:	ldr	r3, [r3, r1]
   1c1bc:	str	r2, [r7]
   1c1c0:	cmp	r3, #0
   1c1c4:	beq	1c1d0 <gen_ether_linktype+0x784>
   1c1c8:	ldr	r1, [r3, #44]	; 0x2c
   1c1cc:	b	1c1a4 <gen_ether_linktype+0x758>
   1c1d0:	ldr	r1, [r0, #44]	; 0x2c
   1c1d4:	clz	r1, r1
   1c1d8:	cmp	r4, #0
   1c1dc:	lsr	r1, r1, #5
   1c1e0:	str	r1, [r0, #44]	; 0x2c
   1c1e4:	str	r4, [sp]
   1c1e8:	beq	1c218 <gen_ether_linktype+0x7cc>
   1c1ec:	mov	r2, r4
   1c1f0:	ldr	r3, [r2, #44]	; 0x2c
   1c1f4:	add	r1, r2, #84	; 0x54
   1c1f8:	cmp	r3, #0
   1c1fc:	mov	r3, #84	; 0x54
   1c200:	movweq	r3, #60	; 0x3c
   1c204:	addeq	r1, r2, #60	; 0x3c
   1c208:	ldr	r2, [r2, r3]
   1c20c:	cmp	r2, #0
   1c210:	bne	1c1f0 <gen_ether_linktype+0x7a4>
   1c214:	b	1c21c <gen_ether_linktype+0x7d0>
   1c218:	mov	r1, sp
   1c21c:	str	r0, [r1]
   1c220:	ldr	r0, [r0, #96]	; 0x60
   1c224:	str	r0, [r4, #96]	; 0x60
   1c228:	mov	r0, r4
   1c22c:	sub	sp, fp, #16
   1c230:	pop	{r4, r5, r6, r7, fp, pc}
   1c234:	.word	0x0002b694
   1c238:	.word	0x0002b65c
   1c23c:	.word	0x0002b9ac
   1c240:	.word	0x0002b3b4
   1c244:	.word	0x0002b2bc
   1c248:	.word	0x0002b8a8
   1c24c:	.word	0x0002b744

0001c250 <gen_llc_linktype>:
   1c250:	mov	r3, r0
   1c254:	cmp	r0, #239	; 0xef
   1c258:	ble	1c27c <gen_llc_linktype+0x2c>
   1c25c:	cmp	r3, #240	; 0xf0
   1c260:	beq	1c2a0 <gen_llc_linktype+0x50>
   1c264:	movw	r0, #32923	; 0x809b
   1c268:	cmp	r3, r0
   1c26c:	beq	1c2b4 <gen_llc_linktype+0x64>
   1c270:	cmp	r3, #254	; 0xfe
   1c274:	beq	1c2a0 <gen_llc_linktype+0x50>
   1c278:	b	1c2f4 <gen_llc_linktype+0xa4>
   1c27c:	cmp	r3, #6
   1c280:	beq	1c2a0 <gen_llc_linktype+0x50>
   1c284:	cmp	r3, #224	; 0xe0
   1c288:	bne	1c2f4 <gen_llc_linktype+0xa4>
   1c28c:	mov	r0, #2
   1c290:	mov	r1, #0
   1c294:	mov	r2, #16
   1c298:	mov	r3, #224	; 0xe0
   1c29c:	b	a8f8 <gen_cmp>
   1c2a0:	orr	r3, r3, r3, lsl #8
   1c2a4:	mov	r0, #2
   1c2a8:	mov	r1, #0
   1c2ac:	mov	r2, #8
   1c2b0:	b	a8f8 <gen_cmp>
   1c2b4:	push	{fp, lr}
   1c2b8:	mov	fp, sp
   1c2bc:	sub	sp, sp, #8
   1c2c0:	movw	r0, #1792	; 0x700
   1c2c4:	mov	r3, sp
   1c2c8:	mov	r1, #0
   1c2cc:	mov	r2, #8
   1c2d0:	movt	r0, #39808	; 0x9b80
   1c2d4:	str	r0, [sp, #4]
   1c2d8:	movw	r0, #43690	; 0xaaaa
   1c2dc:	movt	r0, #2051	; 0x803
   1c2e0:	str	r0, [sp]
   1c2e4:	mov	r0, #2
   1c2e8:	bl	1c314 <gen_bcmp>
   1c2ec:	mov	sp, fp
   1c2f0:	pop	{fp, pc}
   1c2f4:	movw	r0, #1500	; 0x5dc
   1c2f8:	cmp	r3, r0
   1c2fc:	mov	r0, #2
   1c300:	movgt	r1, #6
   1c304:	movgt	r2, #8
   1c308:	movle	r1, #0
   1c30c:	movle	r2, #16
   1c310:	b	a8f8 <gen_cmp>

0001c314 <gen_bcmp>:
   1c314:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c318:	add	fp, sp, #28
   1c31c:	sub	sp, sp, #12
   1c320:	mov	r6, r3
   1c324:	mov	r7, r2
   1c328:	mov	r8, r1
   1c32c:	mov	r9, r0
   1c330:	mov	r4, #0
   1c334:	cmp	r2, #4
   1c338:	bcc	1c440 <gen_bcmp+0x12c>
   1c33c:	mov	r5, #0
   1c340:	mov	sl, sp
   1c344:	b	1c370 <gen_bcmp+0x5c>
   1c348:	str	r5, [r0]
   1c34c:	ldr	r0, [r4, #44]	; 0x2c
   1c350:	clz	r0, r0
   1c354:	lsr	r0, r0, #5
   1c358:	str	r0, [r4, #44]	; 0x2c
   1c35c:	ldr	r0, [r5, #96]	; 0x60
   1c360:	str	r0, [r4, #96]	; 0x60
   1c364:	cmp	r7, #3
   1c368:	mov	r5, r4
   1c36c:	bls	1c440 <gen_bcmp+0x12c>
   1c370:	sub	r7, r7, #4
   1c374:	mov	r2, #0
   1c378:	ldr	r0, [r6, r7]
   1c37c:	add	r1, r7, r8
   1c380:	rev	r3, r0
   1c384:	mov	r0, r9
   1c388:	bl	a8f8 <gen_cmp>
   1c38c:	mov	r4, r0
   1c390:	cmp	r5, #0
   1c394:	beq	1c364 <gen_bcmp+0x50>
   1c398:	ldr	r0, [r4, #96]	; 0x60
   1c39c:	mov	r1, r5
   1c3a0:	ldr	r2, [r1, #44]	; 0x2c
   1c3a4:	add	r3, r1, #84	; 0x54
   1c3a8:	cmp	r2, #0
   1c3ac:	mov	r2, #84	; 0x54
   1c3b0:	movweq	r2, #60	; 0x3c
   1c3b4:	addeq	r3, r1, #60	; 0x3c
   1c3b8:	ldr	r1, [r1, r2]
   1c3bc:	str	r0, [r3]
   1c3c0:	cmp	r1, #0
   1c3c4:	bne	1c3a0 <gen_bcmp+0x8c>
   1c3c8:	ldr	r0, [r5, #44]	; 0x2c
   1c3cc:	cmp	r4, #0
   1c3d0:	clz	r0, r0
   1c3d4:	lsr	r0, r0, #5
   1c3d8:	str	r0, [r5, #44]	; 0x2c
   1c3dc:	ldr	r1, [r4, #44]	; 0x2c
   1c3e0:	clz	r0, r1
   1c3e4:	lsr	r0, r0, #5
   1c3e8:	str	r0, [r4, #44]	; 0x2c
   1c3ec:	mov	r0, sl
   1c3f0:	str	r4, [sp]
   1c3f4:	beq	1c348 <gen_bcmp+0x34>
   1c3f8:	cmp	r1, #0
   1c3fc:	mov	r1, #60	; 0x3c
   1c400:	add	r0, r4, #60	; 0x3c
   1c404:	movweq	r1, #84	; 0x54
   1c408:	addeq	r0, r4, #84	; 0x54
   1c40c:	ldr	r1, [r4, r1]
   1c410:	cmp	r1, #0
   1c414:	beq	1c348 <gen_bcmp+0x34>
   1c418:	ldr	r2, [r1, #44]	; 0x2c
   1c41c:	add	r0, r1, #84	; 0x54
   1c420:	cmp	r2, #0
   1c424:	mov	r2, #84	; 0x54
   1c428:	movweq	r2, #60	; 0x3c
   1c42c:	addeq	r0, r1, #60	; 0x3c
   1c430:	ldr	r1, [r1, r2]
   1c434:	cmp	r1, #0
   1c438:	bne	1c418 <gen_bcmp+0x104>
   1c43c:	b	1c348 <gen_bcmp+0x34>
   1c440:	cmp	r7, #2
   1c444:	bcc	1c550 <gen_bcmp+0x23c>
   1c448:	add	sl, sp, #8
   1c44c:	b	1c478 <gen_bcmp+0x164>
   1c450:	str	r4, [r0]
   1c454:	ldr	r0, [r5, #44]	; 0x2c
   1c458:	clz	r0, r0
   1c45c:	lsr	r0, r0, #5
   1c460:	str	r0, [r5, #44]	; 0x2c
   1c464:	ldr	r0, [r4, #96]	; 0x60
   1c468:	str	r0, [r5, #96]	; 0x60
   1c46c:	cmp	r7, #1
   1c470:	mov	r4, r5
   1c474:	bls	1c554 <gen_bcmp+0x240>
   1c478:	sub	r7, r7, #2
   1c47c:	mov	r0, r6
   1c480:	mov	r2, #8
   1c484:	ldrb	r1, [r0, r7]!
   1c488:	ldrb	r0, [r0, #1]
   1c48c:	orr	r3, r0, r1, lsl #8
   1c490:	add	r1, r7, r8
   1c494:	mov	r0, r9
   1c498:	bl	a8f8 <gen_cmp>
   1c49c:	mov	r5, r0
   1c4a0:	cmp	r4, #0
   1c4a4:	beq	1c46c <gen_bcmp+0x158>
   1c4a8:	ldr	r0, [r5, #96]	; 0x60
   1c4ac:	mov	r1, r4
   1c4b0:	ldr	r2, [r1, #44]	; 0x2c
   1c4b4:	add	r3, r1, #84	; 0x54
   1c4b8:	cmp	r2, #0
   1c4bc:	mov	r2, #84	; 0x54
   1c4c0:	movweq	r2, #60	; 0x3c
   1c4c4:	addeq	r3, r1, #60	; 0x3c
   1c4c8:	ldr	r1, [r1, r2]
   1c4cc:	str	r0, [r3]
   1c4d0:	cmp	r1, #0
   1c4d4:	bne	1c4b0 <gen_bcmp+0x19c>
   1c4d8:	ldr	r0, [r4, #44]	; 0x2c
   1c4dc:	cmp	r5, #0
   1c4e0:	clz	r0, r0
   1c4e4:	lsr	r0, r0, #5
   1c4e8:	str	r0, [r4, #44]	; 0x2c
   1c4ec:	ldr	r1, [r5, #44]	; 0x2c
   1c4f0:	clz	r0, r1
   1c4f4:	lsr	r0, r0, #5
   1c4f8:	str	r0, [r5, #44]	; 0x2c
   1c4fc:	mov	r0, sl
   1c500:	str	r5, [sp, #8]
   1c504:	beq	1c450 <gen_bcmp+0x13c>
   1c508:	cmp	r1, #0
   1c50c:	mov	r1, #60	; 0x3c
   1c510:	add	r0, r5, #60	; 0x3c
   1c514:	movweq	r1, #84	; 0x54
   1c518:	addeq	r0, r5, #84	; 0x54
   1c51c:	ldr	r1, [r5, r1]
   1c520:	cmp	r1, #0
   1c524:	beq	1c450 <gen_bcmp+0x13c>
   1c528:	ldr	r2, [r1, #44]	; 0x2c
   1c52c:	add	r0, r1, #84	; 0x54
   1c530:	cmp	r2, #0
   1c534:	mov	r2, #84	; 0x54
   1c538:	movweq	r2, #60	; 0x3c
   1c53c:	addeq	r0, r1, #60	; 0x3c
   1c540:	ldr	r1, [r1, r2]
   1c544:	cmp	r1, #0
   1c548:	bne	1c528 <gen_bcmp+0x214>
   1c54c:	b	1c450 <gen_bcmp+0x13c>
   1c550:	mov	r5, r4
   1c554:	cmp	r7, #1
   1c558:	bne	1c61c <gen_bcmp+0x308>
   1c55c:	ldrb	r3, [r6]
   1c560:	mov	r0, r9
   1c564:	mov	r1, r8
   1c568:	mov	r2, #16
   1c56c:	bl	a8f8 <gen_cmp>
   1c570:	cmp	r5, #0
   1c574:	beq	1c648 <gen_bcmp+0x334>
   1c578:	ldr	r1, [r0, #96]	; 0x60
   1c57c:	mov	r2, r5
   1c580:	ldr	r3, [r2, #44]	; 0x2c
   1c584:	add	r7, r2, #84	; 0x54
   1c588:	cmp	r3, #0
   1c58c:	mov	r3, #84	; 0x54
   1c590:	movweq	r3, #60	; 0x3c
   1c594:	addeq	r7, r2, #60	; 0x3c
   1c598:	ldr	r2, [r2, r3]
   1c59c:	str	r1, [r7]
   1c5a0:	cmp	r2, #0
   1c5a4:	bne	1c580 <gen_bcmp+0x26c>
   1c5a8:	ldr	r1, [r5, #44]	; 0x2c
   1c5ac:	cmp	r0, #0
   1c5b0:	clz	r1, r1
   1c5b4:	lsr	r1, r1, #5
   1c5b8:	str	r1, [r5, #44]	; 0x2c
   1c5bc:	ldr	r2, [r0, #44]	; 0x2c
   1c5c0:	clz	r1, r2
   1c5c4:	lsr	r1, r1, #5
   1c5c8:	str	r1, [r0, #44]	; 0x2c
   1c5cc:	str	r0, [sp, #4]
   1c5d0:	beq	1c628 <gen_bcmp+0x314>
   1c5d4:	cmp	r2, #0
   1c5d8:	mov	r2, #60	; 0x3c
   1c5dc:	add	r1, r0, #60	; 0x3c
   1c5e0:	movweq	r2, #84	; 0x54
   1c5e4:	addeq	r1, r0, #84	; 0x54
   1c5e8:	ldr	r2, [r0, r2]
   1c5ec:	cmp	r2, #0
   1c5f0:	beq	1c62c <gen_bcmp+0x318>
   1c5f4:	ldr	r3, [r2, #44]	; 0x2c
   1c5f8:	add	r1, r2, #84	; 0x54
   1c5fc:	cmp	r3, #0
   1c600:	mov	r3, #84	; 0x54
   1c604:	movweq	r3, #60	; 0x3c
   1c608:	addeq	r1, r2, #60	; 0x3c
   1c60c:	ldr	r2, [r2, r3]
   1c610:	cmp	r2, #0
   1c614:	bne	1c5f4 <gen_bcmp+0x2e0>
   1c618:	b	1c62c <gen_bcmp+0x318>
   1c61c:	mov	r0, r5
   1c620:	sub	sp, fp, #28
   1c624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c628:	add	r1, sp, #4
   1c62c:	str	r5, [r1]
   1c630:	ldr	r1, [r0, #44]	; 0x2c
   1c634:	clz	r1, r1
   1c638:	lsr	r1, r1, #5
   1c63c:	str	r1, [r0, #44]	; 0x2c
   1c640:	ldr	r1, [r5, #96]	; 0x60
   1c644:	str	r1, [r0, #96]	; 0x60
   1c648:	sub	sp, fp, #28
   1c64c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c650 <gen_uncond>:
   1c650:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c654:	add	fp, sp, #24
   1c658:	mov	r4, r0
   1c65c:	ldr	r0, [pc, #284]	; 1c780 <gen_uncond+0x130>
   1c660:	ldr	r0, [pc, r0]
   1c664:	ldr	r7, [pc, #280]	; 1c784 <gen_uncond+0x134>
   1c668:	add	r7, pc, r7
   1c66c:	mov	r6, r7
   1c670:	ldr	r5, [r6, r0, lsl #3]!
   1c674:	cmp	r5, #19
   1c678:	bhi	1c6d0 <gen_uncond+0x80>
   1c67c:	ldr	r1, [pc, #260]	; 1c788 <gen_uncond+0x138>
   1c680:	add	r8, r0, #1
   1c684:	cmp	r0, #15
   1c688:	add	r1, pc, r1
   1c68c:	str	r8, [r1]
   1c690:	bge	1c774 <gen_uncond+0x124>
   1c694:	mov	r0, #1024	; 0x400
   1c698:	lsl	r5, r0, r8
   1c69c:	mov	r0, r5
   1c6a0:	bl	dec <malloc@plt>
   1c6a4:	cmp	r0, #0
   1c6a8:	str	r0, [r6, #12]
   1c6ac:	beq	1c774 <gen_uncond+0x124>
   1c6b0:	mov	r1, #0
   1c6b4:	mov	r2, r5
   1c6b8:	add	r6, r6, #8
   1c6bc:	bl	e58 <memset@plt>
   1c6c0:	cmp	r5, #19
   1c6c4:	str	r5, [r6]
   1c6c8:	bhi	1c6d4 <gen_uncond+0x84>
   1c6cc:	b	1c774 <gen_uncond+0x124>
   1c6d0:	mov	r8, r0
   1c6d4:	sub	r0, r5, #20
   1c6d8:	mov	r1, #0
   1c6dc:	str	r0, [r6]
   1c6e0:	ldr	r5, [r6, #4]
   1c6e4:	str	r1, [r5, r0]!
   1c6e8:	clz	r0, r4
   1c6ec:	lsr	r0, r0, #5
   1c6f0:	str	r0, [r5, #12]
   1c6f4:	ldr	r4, [r7, r8, lsl #3]!
   1c6f8:	cmp	r4, #207	; 0xcf
   1c6fc:	bhi	1c750 <gen_uncond+0x100>
   1c700:	ldr	r1, [pc, #132]	; 1c78c <gen_uncond+0x13c>
   1c704:	add	r0, r8, #1
   1c708:	cmp	r8, #15
   1c70c:	add	r1, pc, r1
   1c710:	str	r0, [r1]
   1c714:	bge	1c774 <gen_uncond+0x124>
   1c718:	mov	r1, #1024	; 0x400
   1c71c:	lsl	r4, r1, r0
   1c720:	mov	r0, r4
   1c724:	bl	dec <malloc@plt>
   1c728:	cmp	r0, #0
   1c72c:	str	r0, [r7, #12]
   1c730:	beq	1c774 <gen_uncond+0x124>
   1c734:	mov	r1, #0
   1c738:	mov	r2, r4
   1c73c:	add	r7, r7, #8
   1c740:	bl	e58 <memset@plt>
   1c744:	cmp	r4, #207	; 0xcf
   1c748:	str	r4, [r7]
   1c74c:	bls	1c774 <gen_uncond+0x124>
   1c750:	sub	r0, r4, #208	; 0xd0
   1c754:	str	r0, [r7]
   1c758:	ldr	r1, [r7, #4]
   1c75c:	add	r0, r1, r0
   1c760:	mov	r1, #21
   1c764:	str	r5, [r0, #4]
   1c768:	str	r1, [r0, #8]
   1c76c:	str	r0, [r0, #96]	; 0x60
   1c770:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c774:	ldr	r0, [pc, #20]	; 1c790 <gen_uncond+0x140>
   1c778:	add	r0, pc, r0
   1c77c:	bl	2068 <sf_bpf_error>
   1c780:	.word	0x0002ae9c
   1c784:	.word	0x0002ae14
   1c788:	.word	0x0002ae74
   1c78c:	.word	0x0002adf0
   1c790:	.word	0x0000df04

0001c794 <gen_cmp_le>:
   1c794:	push	{r4, r5, r6, r7, fp, lr}
   1c798:	add	fp, sp, #16
   1c79c:	mov	r4, r3
   1c7a0:	bl	17970 <gen_load_a>
   1c7a4:	mov	r5, r0
   1c7a8:	ldr	r0, [pc, #168]	; 1c858 <gen_cmp_le+0xc4>
   1c7ac:	ldr	r0, [pc, r0]
   1c7b0:	ldr	r7, [pc, #164]	; 1c85c <gen_cmp_le+0xc8>
   1c7b4:	add	r7, pc, r7
   1c7b8:	ldr	r6, [r7, r0, lsl #3]!
   1c7bc:	cmp	r6, #207	; 0xcf
   1c7c0:	bhi	1c814 <gen_cmp_le+0x80>
   1c7c4:	ldr	r2, [pc, #148]	; 1c860 <gen_cmp_le+0xcc>
   1c7c8:	add	r1, r0, #1
   1c7cc:	cmp	r0, #15
   1c7d0:	add	r2, pc, r2
   1c7d4:	str	r1, [r2]
   1c7d8:	bge	1c84c <gen_cmp_le+0xb8>
   1c7dc:	mov	r0, #1024	; 0x400
   1c7e0:	lsl	r6, r0, r1
   1c7e4:	mov	r0, r6
   1c7e8:	bl	dec <malloc@plt>
   1c7ec:	cmp	r0, #0
   1c7f0:	str	r0, [r7, #12]
   1c7f4:	beq	1c84c <gen_cmp_le+0xb8>
   1c7f8:	mov	r1, #0
   1c7fc:	mov	r2, r6
   1c800:	add	r7, r7, #8
   1c804:	bl	e58 <memset@plt>
   1c808:	cmp	r6, #207	; 0xcf
   1c80c:	str	r6, [r7]
   1c810:	bls	1c84c <gen_cmp_le+0xb8>
   1c814:	sub	r0, r6, #208	; 0xd0
   1c818:	str	r0, [r7]
   1c81c:	ldr	r1, [r7, #4]
   1c820:	add	r0, r1, r0
   1c824:	mov	r1, #37	; 0x25
   1c828:	str	r4, [r0, #20]
   1c82c:	str	r5, [r0, #4]
   1c830:	str	r1, [r0, #8]
   1c834:	ldr	r1, [r0, #44]	; 0x2c
   1c838:	clz	r1, r1
   1c83c:	lsr	r1, r1, #5
   1c840:	str	r1, [r0, #44]	; 0x2c
   1c844:	str	r0, [r0, #96]	; 0x60
   1c848:	pop	{r4, r5, r6, r7, fp, pc}
   1c84c:	ldr	r0, [pc, #16]	; 1c864 <gen_cmp_le+0xd0>
   1c850:	add	r0, pc, r0
   1c854:	bl	2068 <sf_bpf_error>
   1c858:	.word	0x0002ad50
   1c85c:	.word	0x0002acc8
   1c860:	.word	0x0002ad2c
   1c864:	.word	0x0000de2c

0001c868 <gen_hostop>:
   1c868:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c86c:	add	fp, sp, #28
   1c870:	sub	sp, sp, #28
   1c874:	cmp	r2, #4
   1c878:	bhi	1d3e0 <gen_hostop+0xb78>
   1c87c:	mov	r9, r0
   1c880:	add	r0, pc, #20
   1c884:	mov	sl, r1
   1c888:	ldr	r6, [fp, #12]
   1c88c:	ldr	r7, [fp, #8]
   1c890:	mov	r4, r3
   1c894:	ldr	r1, [r0, r2, lsl #2]
   1c898:	add	pc, r0, r1
   1c89c:	.word	0x00000014
   1c8a0:	.word	0x00000184
   1c8a4:	.word	0x00000180
   1c8a8:	.word	0x00000014
   1c8ac:	.word	0x000000e8
   1c8b0:	mov	r0, r9
   1c8b4:	mov	r1, sl
   1c8b8:	mov	r2, #1
   1c8bc:	mov	r3, r4
   1c8c0:	str	r7, [sp]
   1c8c4:	str	r6, [sp, #4]
   1c8c8:	bl	1c868 <gen_hostop>
   1c8cc:	mov	r5, r0
   1c8d0:	mov	r0, r9
   1c8d4:	mov	r1, sl
   1c8d8:	mov	r2, #2
   1c8dc:	mov	r3, r4
   1c8e0:	str	r7, [sp]
   1c8e4:	str	r6, [sp, #4]
   1c8e8:	bl	1c868 <gen_hostop>
   1c8ec:	ldr	r1, [r5, #44]	; 0x2c
   1c8f0:	cmp	r5, #0
   1c8f4:	clz	r1, r1
   1c8f8:	lsr	r3, r1, #5
   1c8fc:	mov	r1, r0
   1c900:	str	r3, [r5, #44]	; 0x2c
   1c904:	ldr	r2, [r1, #96]!	; 0x60
   1c908:	beq	1c940 <gen_hostop+0xd8>
   1c90c:	mov	r7, r5
   1c910:	cmp	r3, #0
   1c914:	mov	r3, #84	; 0x54
   1c918:	add	r6, r7, #84	; 0x54
   1c91c:	movweq	r3, #60	; 0x3c
   1c920:	addeq	r6, r7, #60	; 0x3c
   1c924:	ldr	r7, [r7, r3]
   1c928:	str	r2, [r6]
   1c92c:	cmp	r7, #0
   1c930:	beq	1c93c <gen_hostop+0xd4>
   1c934:	ldr	r3, [r7, #44]	; 0x2c
   1c938:	b	1c910 <gen_hostop+0xa8>
   1c93c:	ldr	r3, [r5, #44]	; 0x2c
   1c940:	clz	r2, r3
   1c944:	cmp	r0, #0
   1c948:	lsr	r2, r2, #5
   1c94c:	str	r2, [r5, #44]	; 0x2c
   1c950:	str	r0, [sp, #24]
   1c954:	beq	1cac4 <gen_hostop+0x25c>
   1c958:	mov	r3, r0
   1c95c:	ldr	r7, [r3, #44]	; 0x2c
   1c960:	add	r2, r3, #84	; 0x54
   1c964:	cmp	r7, #0
   1c968:	mov	r7, #84	; 0x54
   1c96c:	movweq	r7, #60	; 0x3c
   1c970:	addeq	r2, r3, #60	; 0x3c
   1c974:	ldr	r3, [r3, r7]
   1c978:	cmp	r3, #0
   1c97c:	bne	1c95c <gen_hostop+0xf4>
   1c980:	b	1cac8 <gen_hostop+0x260>
   1c984:	mov	r0, r4
   1c988:	bl	71fc <gen_linktype>
   1c98c:	ldr	r1, [pc, #2640]	; 1d3e4 <gen_hostop+0xb7c>
   1c990:	ldr	r1, [pc, r1]
   1c994:	add	ip, r1, r7
   1c998:	ldr	r1, [pc, #2632]	; 1d3e8 <gen_hostop+0xb80>
   1c99c:	add	r1, pc, r1
   1c9a0:	ldrb	r1, [r1]
   1c9a4:	ldr	r6, [pc, #2624]	; 1d3ec <gen_hostop+0xb84>
   1c9a8:	str	r9, [sp, #20]
   1c9ac:	cmp	r1, #0
   1c9b0:	add	r6, pc, r6
   1c9b4:	add	r1, sp, #8
   1c9b8:	stm	r1, {r0, r4, sl}
   1c9bc:	beq	1cad4 <gen_hostop+0x26c>
   1c9c0:	ldr	r5, [pc, #2604]	; 1d3f4 <gen_hostop+0xb8c>
   1c9c4:	ldr	r5, [pc, r5]
   1c9c8:	cmn	r5, #1
   1c9cc:	bne	1cee8 <gen_hostop+0x680>
   1c9d0:	ldr	r5, [pc, #2592]	; 1d3f8 <gen_hostop+0xb90>
   1c9d4:	mvn	r1, #15
   1c9d8:	ldr	r5, [pc, r5]
   1c9dc:	ldr	r0, [pc, #2584]	; 1d3fc <gen_hostop+0xb94>
   1c9e0:	ldr	r2, [pc, #2584]	; 1d400 <gen_hostop+0xb98>
   1c9e4:	add	r0, pc, r0
   1c9e8:	add	r2, pc, r2
   1c9ec:	ldr	r3, [r0, r5, lsl #2]
   1c9f0:	cmp	r3, #0
   1c9f4:	beq	1ced4 <gen_hostop+0x66c>
   1c9f8:	add	r3, r5, #1
   1c9fc:	adds	r1, r1, #1
   1ca00:	asr	r7, r3, #31
   1ca04:	add	r7, r3, r7, lsr #28
   1ca08:	bic	r7, r7, #15
   1ca0c:	sub	r5, r3, r7
   1ca10:	str	r5, [r2]
   1ca14:	bcc	1c9ec <gen_hostop+0x184>
   1ca18:	b	1caac <gen_hostop+0x244>
   1ca1c:	mov	r7, r6
   1ca20:	mov	r0, r4
   1ca24:	bl	71fc <gen_linktype>
   1ca28:	mov	r5, r0
   1ca2c:	ldr	r0, [pc, #2552]	; 1d42c <gen_hostop+0xbc4>
   1ca30:	ldr	r0, [pc, r0]
   1ca34:	add	r6, r0, r7
   1ca38:	ldr	r0, [pc, #2544]	; 1d430 <gen_hostop+0xbc8>
   1ca3c:	str	r9, [sp, #20]
   1ca40:	add	r0, pc, r0
   1ca44:	ldrb	r0, [r0]
   1ca48:	cmp	r0, #0
   1ca4c:	beq	1cab8 <gen_hostop+0x250>
   1ca50:	str	r5, [sp, #12]
   1ca54:	ldr	r5, [pc, #2528]	; 1d43c <gen_hostop+0xbd4>
   1ca58:	ldr	r5, [pc, r5]
   1ca5c:	cmn	r5, #1
   1ca60:	bne	1caf4 <gen_hostop+0x28c>
   1ca64:	ldr	r5, [pc, #2516]	; 1d440 <gen_hostop+0xbd8>
   1ca68:	mvn	r1, #15
   1ca6c:	ldr	r5, [pc, r5]
   1ca70:	ldr	r0, [pc, #2508]	; 1d444 <gen_hostop+0xbdc>
   1ca74:	ldr	r2, [pc, #2508]	; 1d448 <gen_hostop+0xbe0>
   1ca78:	add	r0, pc, r0
   1ca7c:	add	r2, pc, r2
   1ca80:	ldr	r3, [r0, r5, lsl #2]
   1ca84:	cmp	r3, #0
   1ca88:	beq	1cae0 <gen_hostop+0x278>
   1ca8c:	add	r3, r5, #1
   1ca90:	adds	r1, r1, #1
   1ca94:	asr	r7, r3, #31
   1ca98:	add	r7, r3, r7, lsr #28
   1ca9c:	bic	r7, r7, #15
   1caa0:	sub	r5, r3, r7
   1caa4:	str	r5, [r2]
   1caa8:	bcc	1ca80 <gen_hostop+0x218>
   1caac:	ldr	r0, [pc, #2384]	; 1d404 <gen_hostop+0xb9c>
   1cab0:	add	r0, pc, r0
   1cab4:	bl	2068 <sf_bpf_error>
   1cab8:	ldr	r8, [pc, #2420]	; 1d434 <gen_hostop+0xbcc>
   1cabc:	ldr	r8, [pc, r8]
   1cac0:	b	1cbfc <gen_hostop+0x394>
   1cac4:	add	r2, sp, #24
   1cac8:	str	r5, [r2]
   1cacc:	add	r2, r5, #96	; 0x60
   1cad0:	b	1d3d0 <gen_hostop+0xb68>
   1cad4:	ldr	r9, [pc, #2324]	; 1d3f0 <gen_hostop+0xb88>
   1cad8:	ldr	r9, [pc, r9]
   1cadc:	b	1cff4 <gen_hostop+0x78c>
   1cae0:	mov	r1, #1
   1cae4:	str	r1, [r0, r5, lsl #2]
   1cae8:	ldr	r0, [pc, #2396]	; 1d44c <gen_hostop+0xbe4>
   1caec:	add	r0, pc, r0
   1caf0:	str	r5, [r0]
   1caf4:	str	sl, [sp, #16]
   1caf8:	ldr	r0, [pc, #2384]	; 1d450 <gen_hostop+0xbe8>
   1cafc:	ldr	r0, [pc, r0]
   1cb00:	ldr	sl, [pc, #2380]	; 1d454 <gen_hostop+0xbec>
   1cb04:	add	sl, pc, sl
   1cb08:	mov	r4, sl
   1cb0c:	ldr	r7, [r4, r0, lsl #3]!
   1cb10:	cmp	r7, #19
   1cb14:	bhi	1cb6c <gen_hostop+0x304>
   1cb18:	ldr	r1, [pc, #2360]	; 1d458 <gen_hostop+0xbf0>
   1cb1c:	add	r8, r0, #1
   1cb20:	cmp	r0, #15
   1cb24:	add	r1, pc, r1
   1cb28:	str	r8, [r1]
   1cb2c:	bge	1d1e8 <gen_hostop+0x980>
   1cb30:	mov	r0, #1024	; 0x400
   1cb34:	lsl	r7, r0, r8
   1cb38:	mov	r0, r7
   1cb3c:	bl	dec <malloc@plt>
   1cb40:	cmp	r0, #0
   1cb44:	str	r0, [r4, #12]
   1cb48:	beq	1d1e8 <gen_hostop+0x980>
   1cb4c:	mov	r1, #0
   1cb50:	mov	r2, r7
   1cb54:	add	r4, r4, #8
   1cb58:	bl	e58 <memset@plt>
   1cb5c:	cmp	r7, #19
   1cb60:	str	r7, [r4]
   1cb64:	bhi	1cb70 <gen_hostop+0x308>
   1cb68:	b	1d1e8 <gen_hostop+0x980>
   1cb6c:	mov	r8, r0
   1cb70:	sub	r0, r7, #20
   1cb74:	mov	r1, #97	; 0x61
   1cb78:	str	r0, [r4]
   1cb7c:	ldr	r4, [r4, #4]
   1cb80:	str	r1, [r4, r0]!
   1cb84:	cmp	r4, #0
   1cb88:	str	r5, [r4, #12]
   1cb8c:	beq	1cbf4 <gen_hostop+0x38c>
   1cb90:	ldr	r7, [sl, r8, lsl #3]!
   1cb94:	ldr	r5, [sp, #12]
   1cb98:	cmp	r7, #19
   1cb9c:	bhi	1cc90 <gen_hostop+0x428>
   1cba0:	ldr	r0, [pc, #2228]	; 1d45c <gen_hostop+0xbf4>
   1cba4:	add	r9, r8, #1
   1cba8:	cmp	r8, #15
   1cbac:	add	r0, pc, r0
   1cbb0:	str	r9, [r0]
   1cbb4:	bge	1d1e8 <gen_hostop+0x980>
   1cbb8:	mov	r0, #1024	; 0x400
   1cbbc:	lsl	r7, r0, r9
   1cbc0:	mov	r0, r7
   1cbc4:	bl	dec <malloc@plt>
   1cbc8:	cmp	r0, #0
   1cbcc:	str	r0, [sl, #12]
   1cbd0:	beq	1d1e8 <gen_hostop+0x980>
   1cbd4:	mov	r1, #0
   1cbd8:	mov	r2, r7
   1cbdc:	add	sl, sl, #8
   1cbe0:	bl	e58 <memset@plt>
   1cbe4:	cmp	r7, #19
   1cbe8:	str	r7, [sl]
   1cbec:	bhi	1cc94 <gen_hostop+0x42c>
   1cbf0:	b	1d1e8 <gen_hostop+0x980>
   1cbf4:	ldr	sl, [sp, #16]
   1cbf8:	ldr	r5, [sp, #12]
   1cbfc:	ldr	r4, [pc, #2100]	; 1d438 <gen_hostop+0xbd0>
   1cc00:	add	r4, pc, r4
   1cc04:	ldr	r7, [r4, r8, lsl #3]!
   1cc08:	cmp	r7, #19
   1cc0c:	bhi	1cc64 <gen_hostop+0x3fc>
   1cc10:	ldr	r0, [pc, #2120]	; 1d460 <gen_hostop+0xbf8>
   1cc14:	add	r9, r8, #1
   1cc18:	cmp	r8, #15
   1cc1c:	add	r0, pc, r0
   1cc20:	str	r9, [r0]
   1cc24:	bge	1d1e8 <gen_hostop+0x980>
   1cc28:	mov	r0, #1024	; 0x400
   1cc2c:	lsl	r7, r0, r9
   1cc30:	mov	r0, r7
   1cc34:	bl	dec <malloc@plt>
   1cc38:	cmp	r0, #0
   1cc3c:	str	r0, [r4, #12]
   1cc40:	beq	1d1e8 <gen_hostop+0x980>
   1cc44:	mov	r1, #0
   1cc48:	mov	r2, r7
   1cc4c:	add	r4, r4, #8
   1cc50:	bl	e58 <memset@plt>
   1cc54:	cmp	r7, #19
   1cc58:	str	r7, [r4]
   1cc5c:	bhi	1cc68 <gen_hostop+0x400>
   1cc60:	b	1d1e8 <gen_hostop+0x980>
   1cc64:	mov	r9, r8
   1cc68:	sub	r0, r7, #20
   1cc6c:	mov	r1, #32
   1cc70:	str	r0, [r4]
   1cc74:	ldr	r4, [r4, #4]
   1cc78:	str	r1, [r4, r0]!
   1cc7c:	ldr	r0, [pc, #2016]	; 1d464 <gen_hostop+0xbfc>
   1cc80:	ldr	r0, [pc, r0]
   1cc84:	add	r0, r0, r6
   1cc88:	str	r0, [r4, #12]
   1cc8c:	b	1ccc8 <gen_hostop+0x460>
   1cc90:	mov	r9, r8
   1cc94:	sub	r1, r7, #20
   1cc98:	mov	r2, #64	; 0x40
   1cc9c:	str	r1, [sl]
   1cca0:	ldr	r0, [sl, #4]
   1cca4:	str	r2, [r0, r1]!
   1cca8:	mov	r2, r4
   1ccac:	str	r6, [r0, #12]
   1ccb0:	mov	r1, r2
   1ccb4:	ldr	r2, [r2, #16]
   1ccb8:	cmp	r2, #0
   1ccbc:	bne	1ccb0 <gen_hostop+0x448>
   1ccc0:	ldr	sl, [sp, #16]
   1ccc4:	str	r0, [r1, #16]
   1ccc8:	mov	r8, r5
   1cccc:	cmn	sl, #1
   1ccd0:	beq	1cd40 <gen_hostop+0x4d8>
   1ccd4:	ldr	r5, [pc, #1932]	; 1d468 <gen_hostop+0xc00>
   1ccd8:	add	r5, pc, r5
   1ccdc:	ldr	r7, [r5, r9, lsl #3]!
   1cce0:	cmp	r7, #19
   1cce4:	bhi	1cd4c <gen_hostop+0x4e4>
   1cce8:	ldr	r0, [pc, #1916]	; 1d46c <gen_hostop+0xc04>
   1ccec:	add	r6, r9, #1
   1ccf0:	cmp	r9, #15
   1ccf4:	add	r0, pc, r0
   1ccf8:	str	r6, [r0]
   1ccfc:	bge	1d1e8 <gen_hostop+0x980>
   1cd00:	mov	r0, #1024	; 0x400
   1cd04:	lsl	r7, r0, r6
   1cd08:	mov	r0, r7
   1cd0c:	bl	dec <malloc@plt>
   1cd10:	ldr	r9, [sp, #20]
   1cd14:	cmp	r0, #0
   1cd18:	str	r0, [r5, #12]
   1cd1c:	beq	1d1e8 <gen_hostop+0x980>
   1cd20:	mov	r1, #0
   1cd24:	mov	r2, r7
   1cd28:	add	r5, r5, #8
   1cd2c:	bl	e58 <memset@plt>
   1cd30:	cmp	r7, #19
   1cd34:	str	r7, [r5]
   1cd38:	bhi	1cd54 <gen_hostop+0x4ec>
   1cd3c:	b	1d1e8 <gen_hostop+0x980>
   1cd40:	mov	r6, r9
   1cd44:	ldr	r9, [sp, #20]
   1cd48:	b	1cd84 <gen_hostop+0x51c>
   1cd4c:	mov	r6, r9
   1cd50:	ldr	r9, [sp, #20]
   1cd54:	sub	r1, r7, #20
   1cd58:	mov	r2, #84	; 0x54
   1cd5c:	str	r1, [r5]
   1cd60:	ldr	r0, [r5, #4]
   1cd64:	str	r2, [r0, r1]!
   1cd68:	mov	r2, r4
   1cd6c:	str	sl, [r0, #12]
   1cd70:	mov	r1, r2
   1cd74:	ldr	r2, [r2, #16]
   1cd78:	cmp	r2, #0
   1cd7c:	bne	1cd70 <gen_hostop+0x508>
   1cd80:	str	r0, [r1, #16]
   1cd84:	ldr	r7, [pc, #1764]	; 1d470 <gen_hostop+0xc08>
   1cd88:	add	r7, pc, r7
   1cd8c:	ldr	r5, [r7, r6, lsl #3]!
   1cd90:	cmp	r5, #207	; 0xcf
   1cd94:	bhi	1cde8 <gen_hostop+0x580>
   1cd98:	ldr	r1, [pc, #1748]	; 1d474 <gen_hostop+0xc0c>
   1cd9c:	add	r0, r6, #1
   1cda0:	cmp	r6, #15
   1cda4:	add	r1, pc, r1
   1cda8:	str	r0, [r1]
   1cdac:	bge	1d1e8 <gen_hostop+0x980>
   1cdb0:	mov	r1, #1024	; 0x400
   1cdb4:	lsl	r5, r1, r0
   1cdb8:	mov	r0, r5
   1cdbc:	bl	dec <malloc@plt>
   1cdc0:	cmp	r0, #0
   1cdc4:	str	r0, [r7, #12]
   1cdc8:	beq	1d1e8 <gen_hostop+0x980>
   1cdcc:	mov	r1, #0
   1cdd0:	mov	r2, r5
   1cdd4:	add	r7, r7, #8
   1cdd8:	bl	e58 <memset@plt>
   1cddc:	cmp	r5, #207	; 0xcf
   1cde0:	str	r5, [r7]
   1cde4:	bls	1d1e8 <gen_hostop+0x980>
   1cde8:	sub	r0, r5, #208	; 0xd0
   1cdec:	cmp	r8, #0
   1cdf0:	str	r0, [r7]
   1cdf4:	ldr	r1, [r7, #4]
   1cdf8:	add	r0, r1, r0
   1cdfc:	mov	r1, #21
   1ce00:	str	r9, [r0, #20]
   1ce04:	str	r4, [r0, #4]
   1ce08:	str	r1, [r0, #8]
   1ce0c:	str	r0, [r0, #96]	; 0x60
   1ce10:	beq	1ce40 <gen_hostop+0x5d8>
   1ce14:	mov	r1, r8
   1ce18:	ldr	r2, [r1, #44]	; 0x2c
   1ce1c:	add	r3, r1, #84	; 0x54
   1ce20:	cmp	r2, #0
   1ce24:	mov	r2, #84	; 0x54
   1ce28:	movweq	r2, #60	; 0x3c
   1ce2c:	addeq	r3, r1, #60	; 0x3c
   1ce30:	ldr	r1, [r1, r2]
   1ce34:	str	r0, [r3]
   1ce38:	cmp	r1, #0
   1ce3c:	bne	1ce18 <gen_hostop+0x5b0>
   1ce40:	ldr	r2, [r8, #44]	; 0x2c
   1ce44:	add	r1, r0, #96	; 0x60
   1ce48:	cmp	r0, #0
   1ce4c:	clz	r2, r2
   1ce50:	lsr	r2, r2, #5
   1ce54:	str	r2, [r8, #44]	; 0x2c
   1ce58:	ldr	r2, [r0, #44]	; 0x2c
   1ce5c:	clz	r3, r2
   1ce60:	lsr	r3, r3, #5
   1ce64:	str	r3, [r0, #44]	; 0x2c
   1ce68:	str	r0, [sp, #24]
   1ce6c:	beq	1ceb4 <gen_hostop+0x64c>
   1ce70:	cmp	r2, #0
   1ce74:	mov	r7, #60	; 0x3c
   1ce78:	mov	r3, r0
   1ce7c:	movweq	r7, #84	; 0x54
   1ce80:	ldr	r2, [r3, r7]!
   1ce84:	cmp	r2, #0
   1ce88:	beq	1ceb8 <gen_hostop+0x650>
   1ce8c:	ldr	r7, [r2, #44]	; 0x2c
   1ce90:	add	r3, r2, #84	; 0x54
   1ce94:	cmp	r7, #0
   1ce98:	mov	r7, #84	; 0x54
   1ce9c:	movweq	r7, #60	; 0x3c
   1cea0:	addeq	r3, r2, #60	; 0x3c
   1cea4:	ldr	r2, [r2, r7]
   1cea8:	cmp	r2, #0
   1ceac:	bne	1ce8c <gen_hostop+0x624>
   1ceb0:	b	1ceb8 <gen_hostop+0x650>
   1ceb4:	add	r3, sp, #24
   1ceb8:	str	r8, [r3]
   1cebc:	ldr	r2, [r0, #44]	; 0x2c
   1cec0:	clz	r2, r2
   1cec4:	lsr	r2, r2, #5
   1cec8:	str	r2, [r0, #44]	; 0x2c
   1cecc:	add	r2, r8, #96	; 0x60
   1ced0:	b	1d3d0 <gen_hostop+0xb68>
   1ced4:	mov	r1, #1
   1ced8:	str	r1, [r0, r5, lsl #2]
   1cedc:	ldr	r0, [pc, #1316]	; 1d408 <gen_hostop+0xba0>
   1cee0:	add	r0, pc, r0
   1cee4:	str	r5, [r0]
   1cee8:	ldr	r0, [pc, #1308]	; 1d40c <gen_hostop+0xba4>
   1ceec:	ldr	r0, [pc, r0]
   1cef0:	ldr	r7, [r6, r0, lsl #3]!
   1cef4:	cmp	r7, #19
   1cef8:	bhi	1cf58 <gen_hostop+0x6f0>
   1cefc:	ldr	r1, [pc, #1292]	; 1d410 <gen_hostop+0xba8>
   1cf00:	add	r9, r0, #1
   1cf04:	cmp	r0, #15
   1cf08:	add	r1, pc, r1
   1cf0c:	str	r9, [r1]
   1cf10:	bge	1d1e8 <gen_hostop+0x980>
   1cf14:	mov	r0, #1024	; 0x400
   1cf18:	mov	r4, ip
   1cf1c:	lsl	r7, r0, r9
   1cf20:	mov	r0, r7
   1cf24:	bl	dec <malloc@plt>
   1cf28:	cmp	r0, #0
   1cf2c:	str	r0, [r6, #12]
   1cf30:	beq	1d1e8 <gen_hostop+0x980>
   1cf34:	mov	r1, #0
   1cf38:	mov	r2, r7
   1cf3c:	add	r6, r6, #8
   1cf40:	bl	e58 <memset@plt>
   1cf44:	cmp	r7, #19
   1cf48:	mov	ip, r4
   1cf4c:	str	r7, [r6]
   1cf50:	bhi	1cf5c <gen_hostop+0x6f4>
   1cf54:	b	1d1e8 <gen_hostop+0x980>
   1cf58:	mov	r9, r0
   1cf5c:	sub	r0, r7, #20
   1cf60:	mov	r1, #97	; 0x61
   1cf64:	str	r0, [r6]
   1cf68:	ldr	r8, [r6, #4]
   1cf6c:	str	r1, [r8, r0]!
   1cf70:	str	r5, [r8, #12]
   1cf74:	cmp	r8, #0
   1cf78:	ldr	r6, [pc, #1172]	; 1d414 <gen_hostop+0xbac>
   1cf7c:	add	r6, pc, r6
   1cf80:	beq	1cff4 <gen_hostop+0x78c>
   1cf84:	mov	r5, r6
   1cf88:	ldr	r7, [r5, r9, lsl #3]!
   1cf8c:	cmp	r7, #19
   1cf90:	bhi	1d094 <gen_hostop+0x82c>
   1cf94:	ldr	r0, [pc, #1148]	; 1d418 <gen_hostop+0xbb0>
   1cf98:	add	sl, r9, #1
   1cf9c:	cmp	r9, #15
   1cfa0:	add	r0, pc, r0
   1cfa4:	str	sl, [r0]
   1cfa8:	bge	1d1e8 <gen_hostop+0x980>
   1cfac:	mov	r0, #1024	; 0x400
   1cfb0:	mov	r4, ip
   1cfb4:	lsl	r7, r0, sl
   1cfb8:	mov	r0, r7
   1cfbc:	bl	dec <malloc@plt>
   1cfc0:	ldr	r9, [sp, #20]
   1cfc4:	cmp	r0, #0
   1cfc8:	str	r0, [r5, #12]
   1cfcc:	beq	1d1e8 <gen_hostop+0x980>
   1cfd0:	mov	r1, #0
   1cfd4:	mov	r2, r7
   1cfd8:	add	r5, r5, #8
   1cfdc:	bl	e58 <memset@plt>
   1cfe0:	cmp	r7, #19
   1cfe4:	mov	ip, r4
   1cfe8:	str	r7, [r5]
   1cfec:	bhi	1d09c <gen_hostop+0x834>
   1cff0:	b	1d1e8 <gen_hostop+0x980>
   1cff4:	mov	r5, r6
   1cff8:	ldr	r7, [r5, r9, lsl #3]!
   1cffc:	cmp	r7, #19
   1d000:	bhi	1d064 <gen_hostop+0x7fc>
   1d004:	ldr	r0, [pc, #1040]	; 1d41c <gen_hostop+0xbb4>
   1d008:	add	sl, r9, #1
   1d00c:	cmp	r9, #15
   1d010:	add	r0, pc, r0
   1d014:	str	sl, [r0]
   1d018:	bge	1d1e8 <gen_hostop+0x980>
   1d01c:	mov	r0, #1024	; 0x400
   1d020:	mov	r4, ip
   1d024:	lsl	r7, r0, sl
   1d028:	mov	r0, r7
   1d02c:	bl	dec <malloc@plt>
   1d030:	ldr	r9, [sp, #20]
   1d034:	cmp	r0, #0
   1d038:	str	r0, [r5, #12]
   1d03c:	beq	1d1e8 <gen_hostop+0x980>
   1d040:	mov	r1, #0
   1d044:	mov	r2, r7
   1d048:	add	r5, r5, #8
   1d04c:	bl	e58 <memset@plt>
   1d050:	cmp	r7, #19
   1d054:	mov	ip, r4
   1d058:	str	r7, [r5]
   1d05c:	bhi	1d06c <gen_hostop+0x804>
   1d060:	b	1d1e8 <gen_hostop+0x980>
   1d064:	mov	sl, r9
   1d068:	ldr	r9, [sp, #20]
   1d06c:	sub	r0, r7, #20
   1d070:	mov	r1, #32
   1d074:	str	r0, [r5]
   1d078:	ldr	r8, [r5, #4]
   1d07c:	str	r1, [r8, r0]!
   1d080:	ldr	r0, [pc, #920]	; 1d420 <gen_hostop+0xbb8>
   1d084:	ldr	r0, [pc, r0]
   1d088:	add	r0, r0, ip
   1d08c:	str	r0, [r8, #12]
   1d090:	b	1d0cc <gen_hostop+0x864>
   1d094:	mov	sl, r9
   1d098:	ldr	r9, [sp, #20]
   1d09c:	sub	r1, r7, #20
   1d0a0:	mov	r2, #64	; 0x40
   1d0a4:	str	r1, [r5]
   1d0a8:	ldr	r0, [r5, #4]
   1d0ac:	str	r2, [r0, r1]!
   1d0b0:	mov	r2, r8
   1d0b4:	str	ip, [r0, #12]
   1d0b8:	mov	r1, r2
   1d0bc:	ldr	r2, [r2, #16]
   1d0c0:	cmp	r2, #0
   1d0c4:	bne	1d0b8 <gen_hostop+0x850>
   1d0c8:	str	r0, [r1, #16]
   1d0cc:	ldr	r0, [sp, #16]
   1d0d0:	cmn	r0, #1
   1d0d4:	beq	1d140 <gen_hostop+0x8d8>
   1d0d8:	mov	r4, r6
   1d0dc:	ldr	r7, [r6, sl, lsl #3]!
   1d0e0:	cmp	r7, #19
   1d0e4:	bhi	1d14c <gen_hostop+0x8e4>
   1d0e8:	ldr	r0, [pc, #820]	; 1d424 <gen_hostop+0xbbc>
   1d0ec:	add	r5, sl, #1
   1d0f0:	cmp	sl, #15
   1d0f4:	add	r0, pc, r0
   1d0f8:	str	r5, [r0]
   1d0fc:	bge	1d1e8 <gen_hostop+0x980>
   1d100:	mov	r0, #1024	; 0x400
   1d104:	lsl	r7, r0, r5
   1d108:	mov	r0, r7
   1d10c:	bl	dec <malloc@plt>
   1d110:	ldr	sl, [sp, #16]
   1d114:	cmp	r0, #0
   1d118:	str	r0, [r6, #12]
   1d11c:	beq	1d1e8 <gen_hostop+0x980>
   1d120:	mov	r1, #0
   1d124:	mov	r2, r7
   1d128:	add	r6, r6, #8
   1d12c:	bl	e58 <memset@plt>
   1d130:	cmp	r7, #19
   1d134:	str	r7, [r6]
   1d138:	bhi	1d154 <gen_hostop+0x8ec>
   1d13c:	b	1d1e8 <gen_hostop+0x980>
   1d140:	mov	r5, sl
   1d144:	ldr	sl, [sp, #16]
   1d148:	b	1d188 <gen_hostop+0x920>
   1d14c:	mov	r5, sl
   1d150:	ldr	sl, [sp, #16]
   1d154:	sub	r1, r7, #20
   1d158:	mov	r2, #84	; 0x54
   1d15c:	str	r1, [r6]
   1d160:	ldr	r0, [r6, #4]
   1d164:	str	r2, [r0, r1]!
   1d168:	mov	r2, r8
   1d16c:	str	sl, [r0, #12]
   1d170:	mov	r1, r2
   1d174:	ldr	r2, [r2, #16]
   1d178:	cmp	r2, #0
   1d17c:	bne	1d170 <gen_hostop+0x908>
   1d180:	mov	r6, r4
   1d184:	str	r0, [r1, #16]
   1d188:	ldr	r7, [r6, r5, lsl #3]!
   1d18c:	cmp	r7, #207	; 0xcf
   1d190:	bhi	1d1f4 <gen_hostop+0x98c>
   1d194:	ldr	r1, [pc, #652]	; 1d428 <gen_hostop+0xbc0>
   1d198:	add	r0, r5, #1
   1d19c:	cmp	r5, #15
   1d1a0:	add	r1, pc, r1
   1d1a4:	str	r0, [r1]
   1d1a8:	bge	1d1e8 <gen_hostop+0x980>
   1d1ac:	mov	r1, #1024	; 0x400
   1d1b0:	lsl	r7, r1, r0
   1d1b4:	mov	r0, r7
   1d1b8:	bl	dec <malloc@plt>
   1d1bc:	ldr	r4, [sp, #8]
   1d1c0:	cmp	r0, #0
   1d1c4:	str	r0, [r6, #12]
   1d1c8:	beq	1d1e8 <gen_hostop+0x980>
   1d1cc:	mov	r1, #0
   1d1d0:	mov	r2, r7
   1d1d4:	add	r6, r6, #8
   1d1d8:	bl	e58 <memset@plt>
   1d1dc:	cmp	r7, #207	; 0xcf
   1d1e0:	str	r7, [r6]
   1d1e4:	bhi	1d1f8 <gen_hostop+0x990>
   1d1e8:	ldr	r0, [pc, #648]	; 1d478 <gen_hostop+0xc10>
   1d1ec:	add	r0, pc, r0
   1d1f0:	bl	2068 <sf_bpf_error>
   1d1f4:	ldr	r4, [sp, #8]
   1d1f8:	sub	r0, r7, #208	; 0xd0
   1d1fc:	cmp	r4, #0
   1d200:	str	r0, [r6]
   1d204:	ldr	r1, [r6, #4]
   1d208:	add	r7, r1, r0
   1d20c:	mov	r0, #21
   1d210:	str	r9, [r7, #20]
   1d214:	str	r8, [r7, #4]
   1d218:	str	r0, [r7, #8]
   1d21c:	str	r7, [r7, #96]	; 0x60
   1d220:	beq	1d250 <gen_hostop+0x9e8>
   1d224:	mov	r0, r4
   1d228:	ldr	r1, [r0, #44]	; 0x2c
   1d22c:	add	r2, r0, #84	; 0x54
   1d230:	cmp	r1, #0
   1d234:	mov	r1, #84	; 0x54
   1d238:	movweq	r1, #60	; 0x3c
   1d23c:	addeq	r2, r0, #60	; 0x3c
   1d240:	ldr	r0, [r0, r1]
   1d244:	str	r7, [r2]
   1d248:	cmp	r0, #0
   1d24c:	bne	1d228 <gen_hostop+0x9c0>
   1d250:	ldr	r0, [r4, #44]	; 0x2c
   1d254:	cmp	r7, #0
   1d258:	clz	r0, r0
   1d25c:	lsr	r0, r0, #5
   1d260:	str	r0, [r4, #44]	; 0x2c
   1d264:	ldr	r0, [r7, #44]	; 0x2c
   1d268:	clz	r1, r0
   1d26c:	lsr	r1, r1, #5
   1d270:	str	r1, [r7, #44]	; 0x2c
   1d274:	str	r7, [sp, #24]
   1d278:	beq	1d2c0 <gen_hostop+0xa58>
   1d27c:	cmp	r0, #0
   1d280:	mov	r2, #60	; 0x3c
   1d284:	mov	r1, r7
   1d288:	movweq	r2, #84	; 0x54
   1d28c:	ldr	r0, [r1, r2]!
   1d290:	cmp	r0, #0
   1d294:	beq	1d2c4 <gen_hostop+0xa5c>
   1d298:	ldr	r2, [r0, #44]	; 0x2c
   1d29c:	add	r1, r0, #84	; 0x54
   1d2a0:	cmp	r2, #0
   1d2a4:	mov	r2, #84	; 0x54
   1d2a8:	movweq	r2, #60	; 0x3c
   1d2ac:	addeq	r1, r0, #60	; 0x3c
   1d2b0:	ldr	r0, [r0, r2]
   1d2b4:	cmp	r0, #0
   1d2b8:	bne	1d298 <gen_hostop+0xa30>
   1d2bc:	b	1d2c4 <gen_hostop+0xa5c>
   1d2c0:	add	r1, sp, #24
   1d2c4:	str	r4, [r1]
   1d2c8:	ldr	r3, [sp, #12]
   1d2cc:	mov	r1, sl
   1d2d0:	mov	r2, #2
   1d2d4:	ldr	r0, [r7, #44]	; 0x2c
   1d2d8:	clz	r0, r0
   1d2dc:	lsr	r0, r0, #5
   1d2e0:	str	r0, [r7, #44]	; 0x2c
   1d2e4:	ldr	r0, [r4, #96]	; 0x60
   1d2e8:	str	r0, [r7, #96]	; 0x60
   1d2ec:	ldr	r0, [fp, #8]
   1d2f0:	str	r0, [sp]
   1d2f4:	ldr	r0, [fp, #12]
   1d2f8:	str	r0, [sp, #4]
   1d2fc:	mov	r0, r9
   1d300:	bl	1c868 <gen_hostop>
   1d304:	mov	r1, r0
   1d308:	cmp	r7, #0
   1d30c:	ldr	r2, [r1, #96]!	; 0x60
   1d310:	beq	1d340 <gen_hostop+0xad8>
   1d314:	mov	r3, r7
   1d318:	ldr	r6, [r3, #44]	; 0x2c
   1d31c:	add	r5, r3, #84	; 0x54
   1d320:	cmp	r6, #0
   1d324:	mov	r6, #84	; 0x54
   1d328:	movweq	r6, #60	; 0x3c
   1d32c:	addeq	r5, r3, #60	; 0x3c
   1d330:	ldr	r3, [r3, r6]
   1d334:	str	r2, [r5]
   1d338:	cmp	r3, #0
   1d33c:	bne	1d318 <gen_hostop+0xab0>
   1d340:	ldr	r3, [r7, #44]	; 0x2c
   1d344:	add	r2, r7, #96	; 0x60
   1d348:	cmp	r0, #0
   1d34c:	clz	r3, r3
   1d350:	lsr	r3, r3, #5
   1d354:	str	r3, [r7, #44]	; 0x2c
   1d358:	ldr	r6, [r0, #44]	; 0x2c
   1d35c:	clz	r3, r6
   1d360:	lsr	r3, r3, #5
   1d364:	str	r3, [r0, #44]	; 0x2c
   1d368:	str	r0, [sp, #24]
   1d36c:	beq	1d3b8 <gen_hostop+0xb50>
   1d370:	cmp	r6, #0
   1d374:	mov	r6, #60	; 0x3c
   1d378:	add	r3, r0, #60	; 0x3c
   1d37c:	movweq	r6, #84	; 0x54
   1d380:	addeq	r3, r0, #84	; 0x54
   1d384:	ldr	r6, [r0, r6]
   1d388:	cmp	r6, #0
   1d38c:	beq	1d3bc <gen_hostop+0xb54>
   1d390:	ldr	r5, [r6, #44]	; 0x2c
   1d394:	add	r3, r6, #84	; 0x54
   1d398:	cmp	r5, #0
   1d39c:	mov	r5, #84	; 0x54
   1d3a0:	movweq	r5, #60	; 0x3c
   1d3a4:	addeq	r3, r6, #60	; 0x3c
   1d3a8:	ldr	r6, [r6, r5]
   1d3ac:	cmp	r6, #0
   1d3b0:	bne	1d390 <gen_hostop+0xb28>
   1d3b4:	b	1d3bc <gen_hostop+0xb54>
   1d3b8:	add	r3, sp, #24
   1d3bc:	str	r7, [r3]
   1d3c0:	ldr	r3, [r0, #44]	; 0x2c
   1d3c4:	clz	r3, r3
   1d3c8:	lsr	r3, r3, #5
   1d3cc:	str	r3, [r0, #44]	; 0x2c
   1d3d0:	ldr	r2, [r2]
   1d3d4:	str	r2, [r1]
   1d3d8:	sub	sp, fp, #28
   1d3dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d3e0:	bl	edc <abort@plt>
   1d3e4:	.word	0x0002aab0
   1d3e8:	.word	0x0002ab64
   1d3ec:	.word	0x0002aacc
   1d3f0:	.word	0x0002aa24
   1d3f4:	.word	0x0002ab44
   1d3f8:	.word	0x0002ab34
   1d3fc:	.word	0x0002ab2c
   1d400:	.word	0x0002ab24
   1d404:	.word	0x0000e61d
   1d408:	.word	0x0002a628
   1d40c:	.word	0x0002a610
   1d410:	.word	0x0002a5f4
   1d414:	.word	0x0002a500
   1d418:	.word	0x0002a55c
   1d41c:	.word	0x0002a4ec
   1d420:	.word	0x0002a3b8
   1d424:	.word	0x0002a408
   1d428:	.word	0x0002a35c
   1d42c:	.word	0x0002aa10
   1d430:	.word	0x0002aac0
   1d434:	.word	0x0002aa40
   1d438:	.word	0x0002a87c
   1d43c:	.word	0x0002aab0
   1d440:	.word	0x0002aaa0
   1d444:	.word	0x0002aa98
   1d448:	.word	0x0002aa90
   1d44c:	.word	0x0002aa1c
   1d450:	.word	0x0002aa00
   1d454:	.word	0x0002a978
   1d458:	.word	0x0002a9d8
   1d45c:	.word	0x0002a950
   1d460:	.word	0x0002a8e0
   1d464:	.word	0x0002a7bc
   1d468:	.word	0x0002a7a4
   1d46c:	.word	0x0002a808
   1d470:	.word	0x0002a6f4
   1d474:	.word	0x0002a758
   1d478:	.word	0x0000d490

0001d47c <gen_dnhostop>:
   1d47c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d480:	add	fp, sp, #28
   1d484:	sub	sp, sp, #20
   1d488:	cmp	r1, #24
   1d48c:	bhi	1ebe0 <gen_dnhostop+0x1764>
   1d490:	mov	r9, r0
   1d494:	add	r0, pc, #12
   1d498:	mov	r2, #1
   1d49c:	mov	r3, #7
   1d4a0:	ldr	r1, [r0, r1, lsl #2]
   1d4a4:	add	pc, r0, r1
   1d4a8:	.word	0x00000064
   1d4ac:	.word	0x0000011c
   1d4b0:	.word	0x00000124
   1d4b4:	.word	0x00000064
   1d4b8:	.word	0x000001c0
   1d4bc:	.word	0x00001738
   1d4c0:	.word	0x00001738
   1d4c4:	.word	0x00001738
   1d4c8:	.word	0x00001738
   1d4cc:	.word	0x00001738
   1d4d0:	.word	0x00001738
   1d4d4:	.word	0x00001738
   1d4d8:	.word	0x00001738
   1d4dc:	.word	0x00001738
   1d4e0:	.word	0x00001738
   1d4e4:	.word	0x00001738
   1d4e8:	.word	0x00001738
   1d4ec:	.word	0x00001738
   1d4f0:	.word	0x00001738
   1d4f4:	.word	0x00001738
   1d4f8:	.word	0x00001738
   1d4fc:	.word	0x00001738
   1d500:	.word	0x00001738
   1d504:	.word	0x00001738
   1d508:	.word	0x00001744
   1d50c:	mov	r0, r9
   1d510:	mov	r1, #1
   1d514:	bl	1d47c <gen_dnhostop>
   1d518:	mov	r5, r0
   1d51c:	mov	r0, r9
   1d520:	mov	r1, #2
   1d524:	bl	1d47c <gen_dnhostop>
   1d528:	mov	sl, r0
   1d52c:	ldr	r0, [r5, #44]	; 0x2c
   1d530:	cmp	r5, #0
   1d534:	clz	r0, r0
   1d538:	lsr	r0, r0, #5
   1d53c:	str	r0, [r5, #44]	; 0x2c
   1d540:	beq	1d57c <gen_dnhostop+0x100>
   1d544:	ldr	r1, [sl, #96]	; 0x60
   1d548:	mov	r2, r5
   1d54c:	cmp	r0, #0
   1d550:	mov	r0, #84	; 0x54
   1d554:	add	r3, r2, #84	; 0x54
   1d558:	movweq	r0, #60	; 0x3c
   1d55c:	addeq	r3, r2, #60	; 0x3c
   1d560:	ldr	r2, [r2, r0]
   1d564:	str	r1, [r3]
   1d568:	cmp	r2, #0
   1d56c:	beq	1d578 <gen_dnhostop+0xfc>
   1d570:	ldr	r0, [r2, #44]	; 0x2c
   1d574:	b	1d54c <gen_dnhostop+0xd0>
   1d578:	ldr	r0, [r5, #44]	; 0x2c
   1d57c:	clz	r0, r0
   1d580:	cmp	sl, #0
   1d584:	lsr	r0, r0, #5
   1d588:	str	r0, [r5, #44]	; 0x2c
   1d58c:	str	sl, [sp, #16]
   1d590:	beq	1d734 <gen_dnhostop+0x2b8>
   1d594:	mov	r1, sl
   1d598:	ldr	r2, [r1, #44]	; 0x2c
   1d59c:	add	r0, r1, #84	; 0x54
   1d5a0:	cmp	r2, #0
   1d5a4:	mov	r2, #84	; 0x54
   1d5a8:	movweq	r2, #60	; 0x3c
   1d5ac:	addeq	r0, r1, #60	; 0x3c
   1d5b0:	ldr	r1, [r1, r2]
   1d5b4:	cmp	r1, #0
   1d5b8:	bne	1d598 <gen_dnhostop+0x11c>
   1d5bc:	str	r5, [r0]
   1d5c0:	b	1ebbc <gen_dnhostop+0x1740>
   1d5c4:	mov	r2, #3
   1d5c8:	mov	r3, #15
   1d5cc:	movw	r0, #24579	; 0x6003
   1d5d0:	str	r3, [sp, #4]
   1d5d4:	str	r2, [sp, #8]
   1d5d8:	bl	71fc <gen_linktype>
   1d5dc:	ldr	r1, [pc, #3968]	; 1e564 <gen_dnhostop+0x10e8>
   1d5e0:	add	r1, pc, r1
   1d5e4:	ldrb	r2, [r1]
   1d5e8:	ldr	r1, [pc, #3960]	; 1e568 <gen_dnhostop+0x10ec>
   1d5ec:	ldr	r1, [pc, r1]
   1d5f0:	cmp	r2, #0
   1d5f4:	str	r0, [sp]
   1d5f8:	add	r5, r1, #2
   1d5fc:	beq	1d65c <gen_dnhostop+0x1e0>
   1d600:	ldr	r4, [pc, #4092]	; 1e604 <gen_dnhostop+0x1188>
   1d604:	ldr	r4, [pc, r4]
   1d608:	cmn	r4, #1
   1d60c:	bne	1d754 <gen_dnhostop+0x2d8>
   1d610:	ldr	r4, [pc, #4092]	; 1e614 <gen_dnhostop+0x1198>
   1d614:	mvn	r1, #15
   1d618:	ldr	r4, [pc, r4]
   1d61c:	ldr	r6, [pc, #4084]	; 1e618 <gen_dnhostop+0x119c>
   1d620:	ldr	r2, [pc, #4084]	; 1e61c <gen_dnhostop+0x11a0>
   1d624:	add	r6, pc, r6
   1d628:	add	r2, pc, r2
   1d62c:	ldr	r3, [r6, r4, lsl #2]
   1d630:	cmp	r3, #0
   1d634:	beq	1d740 <gen_dnhostop+0x2c4>
   1d638:	add	r3, r4, #1
   1d63c:	adds	r1, r1, #1
   1d640:	asr	r7, r3, #31
   1d644:	add	r7, r3, r7, lsr #28
   1d648:	bic	r7, r7, #15
   1d64c:	sub	r4, r3, r7
   1d650:	str	r4, [r2]
   1d654:	bcc	1d62c <gen_dnhostop+0x1b0>
   1d658:	b	1e5f8 <gen_dnhostop+0x117c>
   1d65c:	ldr	sl, [pc, #4028]	; 1e620 <gen_dnhostop+0x11a4>
   1d660:	ldr	sl, [pc, sl]
   1d664:	b	1d85c <gen_dnhostop+0x3e0>
   1d668:	mov	r0, r9
   1d66c:	mov	r1, #1
   1d670:	bl	1d47c <gen_dnhostop>
   1d674:	mov	r5, r0
   1d678:	mov	r0, r9
   1d67c:	mov	r1, #2
   1d680:	bl	1d47c <gen_dnhostop>
   1d684:	mov	sl, r0
   1d688:	cmp	r5, #0
   1d68c:	beq	1d6c0 <gen_dnhostop+0x244>
   1d690:	ldr	r0, [sl, #96]	; 0x60
   1d694:	mov	r1, r5
   1d698:	ldr	r2, [r1, #44]	; 0x2c
   1d69c:	add	r3, r1, #84	; 0x54
   1d6a0:	cmp	r2, #0
   1d6a4:	mov	r2, #84	; 0x54
   1d6a8:	movweq	r2, #60	; 0x3c
   1d6ac:	addeq	r3, r1, #60	; 0x3c
   1d6b0:	ldr	r1, [r1, r2]
   1d6b4:	str	r0, [r3]
   1d6b8:	cmp	r1, #0
   1d6bc:	bne	1d698 <gen_dnhostop+0x21c>
   1d6c0:	ldr	r0, [r5, #44]	; 0x2c
   1d6c4:	cmp	sl, #0
   1d6c8:	clz	r0, r0
   1d6cc:	lsr	r0, r0, #5
   1d6d0:	str	r0, [r5, #44]	; 0x2c
   1d6d4:	ldr	r1, [sl, #44]	; 0x2c
   1d6d8:	clz	r0, r1
   1d6dc:	lsr	r0, r0, #5
   1d6e0:	str	r0, [sl, #44]	; 0x2c
   1d6e4:	str	sl, [sp, #16]
   1d6e8:	beq	1eba4 <gen_dnhostop+0x1728>
   1d6ec:	cmp	r1, #0
   1d6f0:	mov	r1, #60	; 0x3c
   1d6f4:	add	r0, sl, #60	; 0x3c
   1d6f8:	movweq	r1, #84	; 0x54
   1d6fc:	addeq	r0, sl, #84	; 0x54
   1d700:	ldr	r1, [sl, r1]
   1d704:	cmp	r1, #0
   1d708:	beq	1eba8 <gen_dnhostop+0x172c>
   1d70c:	ldr	r2, [r1, #44]	; 0x2c
   1d710:	add	r0, r1, #84	; 0x54
   1d714:	cmp	r2, #0
   1d718:	mov	r2, #84	; 0x54
   1d71c:	movweq	r2, #60	; 0x3c
   1d720:	addeq	r0, r1, #60	; 0x3c
   1d724:	ldr	r1, [r1, r2]
   1d728:	cmp	r1, #0
   1d72c:	bne	1d70c <gen_dnhostop+0x290>
   1d730:	b	1eba8 <gen_dnhostop+0x172c>
   1d734:	add	r0, sp, #16
   1d738:	str	r5, [r0]
   1d73c:	b	1ebbc <gen_dnhostop+0x1740>
   1d740:	mov	r1, #1
   1d744:	str	r1, [r6, r4, lsl #2]
   1d748:	ldr	r1, [pc, #4064]	; 1e730 <gen_dnhostop+0x12b4>
   1d74c:	add	r1, pc, r1
   1d750:	str	r4, [r1]
   1d754:	ldr	r0, [pc, #4056]	; 1e734 <gen_dnhostop+0x12b8>
   1d758:	mov	r8, r5
   1d75c:	ldr	r0, [pc, r0]
   1d760:	ldr	r5, [pc, #4048]	; 1e738 <gen_dnhostop+0x12bc>
   1d764:	add	r5, pc, r5
   1d768:	ldr	r6, [r5, r0, lsl #3]!
   1d76c:	cmp	r6, #19
   1d770:	bhi	1d7c8 <gen_dnhostop+0x34c>
   1d774:	ldr	r1, [pc, #4032]	; 1e73c <gen_dnhostop+0x12c0>
   1d778:	add	sl, r0, #1
   1d77c:	cmp	r0, #15
   1d780:	add	r1, pc, r1
   1d784:	str	sl, [r1]
   1d788:	bge	1ebd4 <gen_dnhostop+0x1758>
   1d78c:	mov	r0, #1024	; 0x400
   1d790:	lsl	r6, r0, sl
   1d794:	mov	r0, r6
   1d798:	bl	dec <malloc@plt>
   1d79c:	cmp	r0, #0
   1d7a0:	str	r0, [r5, #12]
   1d7a4:	beq	1ebd4 <gen_dnhostop+0x1758>
   1d7a8:	mov	r1, #0
   1d7ac:	mov	r2, r6
   1d7b0:	add	r5, r5, #8
   1d7b4:	bl	e58 <memset@plt>
   1d7b8:	cmp	r6, #19
   1d7bc:	str	r6, [r5]
   1d7c0:	bhi	1d7cc <gen_dnhostop+0x350>
   1d7c4:	b	1ebd4 <gen_dnhostop+0x1758>
   1d7c8:	mov	sl, r0
   1d7cc:	sub	r0, r6, #20
   1d7d0:	mov	r1, #97	; 0x61
   1d7d4:	str	r0, [r5]
   1d7d8:	ldr	r7, [r5, #4]
   1d7dc:	str	r1, [r7, r0]!
   1d7e0:	cmp	r7, #0
   1d7e4:	str	r4, [r7, #12]
   1d7e8:	beq	1d858 <gen_dnhostop+0x3dc>
   1d7ec:	ldr	r4, [pc, #4064]	; 1e7d4 <gen_dnhostop+0x1358>
   1d7f0:	mov	r5, r8
   1d7f4:	add	r4, pc, r4
   1d7f8:	ldr	r6, [r4, sl, lsl #3]!
   1d7fc:	cmp	r6, #19
   1d800:	bhi	1d8f0 <gen_dnhostop+0x474>
   1d804:	ldr	r0, [pc, #4044]	; 1e7d8 <gen_dnhostop+0x135c>
   1d808:	add	r8, sl, #1
   1d80c:	cmp	sl, #15
   1d810:	add	r0, pc, r0
   1d814:	str	r8, [r0]
   1d818:	bge	1ebd4 <gen_dnhostop+0x1758>
   1d81c:	mov	r0, #1024	; 0x400
   1d820:	lsl	r6, r0, r8
   1d824:	mov	r0, r6
   1d828:	bl	dec <malloc@plt>
   1d82c:	cmp	r0, #0
   1d830:	str	r0, [r4, #12]
   1d834:	beq	1ebd4 <gen_dnhostop+0x1758>
   1d838:	mov	r1, #0
   1d83c:	mov	r2, r6
   1d840:	add	r4, r4, #8
   1d844:	bl	e58 <memset@plt>
   1d848:	cmp	r6, #19
   1d84c:	str	r6, [r4]
   1d850:	bhi	1d8f4 <gen_dnhostop+0x478>
   1d854:	b	1ebd4 <gen_dnhostop+0x1758>
   1d858:	mov	r5, r8
   1d85c:	ldr	r4, [pc, #3960]	; 1e7dc <gen_dnhostop+0x1360>
   1d860:	add	r4, pc, r4
   1d864:	ldr	r6, [r4, sl, lsl #3]!
   1d868:	cmp	r6, #19
   1d86c:	bhi	1d8c4 <gen_dnhostop+0x448>
   1d870:	ldr	r0, [pc, #3944]	; 1e7e0 <gen_dnhostop+0x1364>
   1d874:	add	r8, sl, #1
   1d878:	cmp	sl, #15
   1d87c:	add	r0, pc, r0
   1d880:	str	r8, [r0]
   1d884:	bge	1ebd4 <gen_dnhostop+0x1758>
   1d888:	mov	r0, #1024	; 0x400
   1d88c:	lsl	r6, r0, r8
   1d890:	mov	r0, r6
   1d894:	bl	dec <malloc@plt>
   1d898:	cmp	r0, #0
   1d89c:	str	r0, [r4, #12]
   1d8a0:	beq	1ebd4 <gen_dnhostop+0x1758>
   1d8a4:	mov	r1, #0
   1d8a8:	mov	r2, r6
   1d8ac:	add	r4, r4, #8
   1d8b0:	bl	e58 <memset@plt>
   1d8b4:	cmp	r6, #19
   1d8b8:	str	r6, [r4]
   1d8bc:	bhi	1d8c8 <gen_dnhostop+0x44c>
   1d8c0:	b	1ebd4 <gen_dnhostop+0x1758>
   1d8c4:	mov	r8, sl
   1d8c8:	sub	r0, r6, #20
   1d8cc:	mov	r1, #40	; 0x28
   1d8d0:	str	r0, [r4]
   1d8d4:	ldr	r7, [r4, #4]
   1d8d8:	str	r1, [r7, r0]!
   1d8dc:	ldr	r0, [pc, #4004]	; 1e888 <gen_dnhostop+0x140c>
   1d8e0:	ldr	r0, [pc, r0]
   1d8e4:	add	r0, r0, r5
   1d8e8:	str	r0, [r7, #12]
   1d8ec:	b	1d924 <gen_dnhostop+0x4a8>
   1d8f0:	mov	r8, sl
   1d8f4:	sub	r1, r6, #20
   1d8f8:	mov	r2, #72	; 0x48
   1d8fc:	str	r1, [r4]
   1d900:	ldr	r0, [r4, #4]
   1d904:	str	r2, [r0, r1]!
   1d908:	mov	r2, r7
   1d90c:	str	r5, [r0, #12]
   1d910:	mov	r1, r2
   1d914:	ldr	r2, [r2, #16]
   1d918:	cmp	r2, #0
   1d91c:	bne	1d910 <gen_dnhostop+0x494>
   1d920:	str	r0, [r1, #16]
   1d924:	ldr	r5, [pc, #3936]	; 1e88c <gen_dnhostop+0x1410>
   1d928:	add	r5, pc, r5
   1d92c:	ldr	r6, [r5, r8, lsl #3]!
   1d930:	cmp	r6, #19
   1d934:	bhi	1d990 <gen_dnhostop+0x514>
   1d938:	ldr	r0, [pc, #3920]	; 1e890 <gen_dnhostop+0x1414>
   1d93c:	add	r4, r8, #1
   1d940:	cmp	r8, #15
   1d944:	add	r0, pc, r0
   1d948:	str	r4, [r0]
   1d94c:	bge	1ebd4 <gen_dnhostop+0x1758>
   1d950:	mov	r0, #1024	; 0x400
   1d954:	lsl	r6, r0, r4
   1d958:	mov	r0, r6
   1d95c:	bl	dec <malloc@plt>
   1d960:	ldr	r8, [sp, #4]
   1d964:	cmp	r0, #0
   1d968:	str	r0, [r5, #12]
   1d96c:	beq	1ebd4 <gen_dnhostop+0x1758>
   1d970:	mov	r1, #0
   1d974:	mov	r2, r6
   1d978:	add	r5, r5, #8
   1d97c:	bl	e58 <memset@plt>
   1d980:	cmp	r6, #19
   1d984:	str	r6, [r5]
   1d988:	bhi	1d998 <gen_dnhostop+0x51c>
   1d98c:	b	1ebd4 <gen_dnhostop+0x1758>
   1d990:	mov	r4, r8
   1d994:	ldr	r8, [sp, #4]
   1d998:	sub	r1, r6, #20
   1d99c:	mov	r2, #84	; 0x54
   1d9a0:	str	r1, [r5]
   1d9a4:	ldr	r0, [r5, #4]
   1d9a8:	str	r2, [r0, r1]!
   1d9ac:	movw	r1, #65287	; 0xff07
   1d9b0:	mov	r2, r7
   1d9b4:	str	r1, [r0, #12]
   1d9b8:	mov	r1, r2
   1d9bc:	ldr	r2, [r2, #16]
   1d9c0:	cmp	r2, #0
   1d9c4:	bne	1d9b8 <gen_dnhostop+0x53c>
   1d9c8:	str	r0, [r1, #16]
   1d9cc:	ldr	r5, [pc, #3776]	; 1e894 <gen_dnhostop+0x1418>
   1d9d0:	add	r5, pc, r5
   1d9d4:	ldr	r6, [r5, r4, lsl #3]!
   1d9d8:	cmp	r6, #207	; 0xcf
   1d9dc:	bhi	1da30 <gen_dnhostop+0x5b4>
   1d9e0:	ldr	r1, [pc, #3760]	; 1e898 <gen_dnhostop+0x141c>
   1d9e4:	add	r0, r4, #1
   1d9e8:	cmp	r4, #15
   1d9ec:	add	r1, pc, r1
   1d9f0:	str	r0, [r1]
   1d9f4:	bge	1ebd4 <gen_dnhostop+0x1758>
   1d9f8:	mov	r1, #1024	; 0x400
   1d9fc:	lsl	r6, r1, r0
   1da00:	mov	r0, r6
   1da04:	bl	dec <malloc@plt>
   1da08:	cmp	r0, #0
   1da0c:	str	r0, [r5, #12]
   1da10:	beq	1ebd4 <gen_dnhostop+0x1758>
   1da14:	mov	r1, #0
   1da18:	mov	r2, r6
   1da1c:	add	r5, r5, #8
   1da20:	bl	e58 <memset@plt>
   1da24:	cmp	r6, #207	; 0xcf
   1da28:	str	r6, [r5]
   1da2c:	bls	1ebd4 <gen_dnhostop+0x1758>
   1da30:	sub	r0, r6, #208	; 0xd0
   1da34:	mov	r2, #8
   1da38:	str	r0, [r5]
   1da3c:	ldr	r1, [r5, #4]
   1da40:	add	r4, r1, r0
   1da44:	movw	r1, #33030	; 0x8106
   1da48:	mov	r0, #21
   1da4c:	str	r1, [r4, #20]
   1da50:	str	r7, [r4, #4]
   1da54:	str	r0, [r4, #8]
   1da58:	rev	r0, r9
   1da5c:	add	r1, r8, #3
   1da60:	str	r4, [r4, #96]	; 0x60
   1da64:	lsr	r3, r0, #16
   1da68:	mov	r0, #3
   1da6c:	str	r3, [sp, #12]
   1da70:	bl	a8f8 <gen_cmp>
   1da74:	mov	sl, r0
   1da78:	cmp	r4, #0
   1da7c:	beq	1dab0 <gen_dnhostop+0x634>
   1da80:	ldr	r0, [sl, #96]	; 0x60
   1da84:	mov	r1, r4
   1da88:	ldr	r2, [r1, #44]	; 0x2c
   1da8c:	add	r3, r1, #84	; 0x54
   1da90:	cmp	r2, #0
   1da94:	mov	r2, #84	; 0x54
   1da98:	movweq	r2, #60	; 0x3c
   1da9c:	addeq	r3, r1, #60	; 0x3c
   1daa0:	ldr	r1, [r1, r2]
   1daa4:	str	r0, [r3]
   1daa8:	cmp	r1, #0
   1daac:	bne	1da88 <gen_dnhostop+0x60c>
   1dab0:	ldr	r0, [r4, #44]	; 0x2c
   1dab4:	cmp	sl, #0
   1dab8:	clz	r0, r0
   1dabc:	lsr	r0, r0, #5
   1dac0:	str	r0, [r4, #44]	; 0x2c
   1dac4:	ldr	r1, [sl, #44]	; 0x2c
   1dac8:	clz	r0, r1
   1dacc:	lsr	r0, r0, #5
   1dad0:	str	r0, [sl, #44]	; 0x2c
   1dad4:	str	sl, [sp, #16]
   1dad8:	ldr	r9, [pc, #4080]	; 1ead0 <gen_dnhostop+0x1654>
   1dadc:	add	r9, pc, r9
   1dae0:	beq	1db2c <gen_dnhostop+0x6b0>
   1dae4:	cmp	r1, #0
   1dae8:	mov	r1, #60	; 0x3c
   1daec:	add	r0, sl, #60	; 0x3c
   1daf0:	movweq	r1, #84	; 0x54
   1daf4:	addeq	r0, sl, #84	; 0x54
   1daf8:	ldr	r1, [sl, r1]
   1dafc:	cmp	r1, #0
   1db00:	beq	1db30 <gen_dnhostop+0x6b4>
   1db04:	ldr	r2, [r1, #44]	; 0x2c
   1db08:	add	r0, r1, #84	; 0x54
   1db0c:	cmp	r2, #0
   1db10:	mov	r2, #84	; 0x54
   1db14:	movweq	r2, #60	; 0x3c
   1db18:	addeq	r0, r1, #60	; 0x3c
   1db1c:	ldr	r1, [r1, r2]
   1db20:	cmp	r1, #0
   1db24:	bne	1db04 <gen_dnhostop+0x688>
   1db28:	b	1db30 <gen_dnhostop+0x6b4>
   1db2c:	add	r0, sp, #16
   1db30:	str	r4, [r0]
   1db34:	ldr	r0, [sl, #44]	; 0x2c
   1db38:	clz	r0, r0
   1db3c:	lsr	r0, r0, #5
   1db40:	str	r0, [sl, #44]	; 0x2c
   1db44:	ldr	r0, [r4, #96]	; 0x60
   1db48:	str	r0, [sl, #96]	; 0x60
   1db4c:	ldr	r0, [pc, #3968]	; 1ead4 <gen_dnhostop+0x1658>
   1db50:	add	r0, pc, r0
   1db54:	ldrb	r0, [r0]
   1db58:	ldr	r1, [pc, #3960]	; 1ead8 <gen_dnhostop+0x165c>
   1db5c:	ldr	r1, [pc, r1]
   1db60:	cmp	r0, #0
   1db64:	add	r4, r1, #2
   1db68:	beq	1dbcc <gen_dnhostop+0x750>
   1db6c:	mov	r8, r4
   1db70:	ldr	r4, [pc, #3940]	; 1eadc <gen_dnhostop+0x1660>
   1db74:	ldr	r4, [pc, r4]
   1db78:	cmn	r4, #1
   1db7c:	bne	1dbec <gen_dnhostop+0x770>
   1db80:	ldr	r4, [pc, #3928]	; 1eae0 <gen_dnhostop+0x1664>
   1db84:	mvn	r1, #15
   1db88:	ldr	r4, [pc, r4]
   1db8c:	ldr	r0, [pc, #3920]	; 1eae4 <gen_dnhostop+0x1668>
   1db90:	ldr	r2, [pc, #3920]	; 1eae8 <gen_dnhostop+0x166c>
   1db94:	add	r0, pc, r0
   1db98:	add	r2, pc, r2
   1db9c:	ldr	r3, [r0, r4, lsl #2]
   1dba0:	cmp	r3, #0
   1dba4:	beq	1dbd8 <gen_dnhostop+0x75c>
   1dba8:	add	r3, r4, #1
   1dbac:	adds	r1, r1, #1
   1dbb0:	asr	r7, r3, #31
   1dbb4:	add	r7, r3, r7, lsr #28
   1dbb8:	bic	r7, r7, #15
   1dbbc:	sub	r4, r3, r7
   1dbc0:	str	r4, [r2]
   1dbc4:	bcc	1db9c <gen_dnhostop+0x720>
   1dbc8:	b	1e5f8 <gen_dnhostop+0x117c>
   1dbcc:	ldr	r5, [pc, #4092]	; 1ebd0 <gen_dnhostop+0x1754>
   1dbd0:	ldr	r5, [pc, r5]
   1dbd4:	b	1dce8 <gen_dnhostop+0x86c>
   1dbd8:	mov	r1, #1
   1dbdc:	str	r1, [r0, r4, lsl #2]
   1dbe0:	ldr	r0, [pc, #4092]	; 1ebe4 <gen_dnhostop+0x1768>
   1dbe4:	add	r0, pc, r0
   1dbe8:	str	r4, [r0]
   1dbec:	ldr	r0, [pc, #4084]	; 1ebe8 <gen_dnhostop+0x176c>
   1dbf0:	mov	r6, r9
   1dbf4:	ldr	r0, [pc, r0]
   1dbf8:	ldr	r7, [r6, r0, lsl #3]!
   1dbfc:	cmp	r7, #19
   1dc00:	bhi	1dc58 <gen_dnhostop+0x7dc>
   1dc04:	ldr	r1, [pc, #4084]	; 1ec00 <gen_dnhostop+0x1784>
   1dc08:	add	r5, r0, #1
   1dc0c:	cmp	r0, #15
   1dc10:	add	r1, pc, r1
   1dc14:	str	r5, [r1]
   1dc18:	bge	1ebd4 <gen_dnhostop+0x1758>
   1dc1c:	mov	r0, #1024	; 0x400
   1dc20:	lsl	r7, r0, r5
   1dc24:	mov	r0, r7
   1dc28:	bl	dec <malloc@plt>
   1dc2c:	cmp	r0, #0
   1dc30:	str	r0, [r6, #12]
   1dc34:	beq	1ebd4 <gen_dnhostop+0x1758>
   1dc38:	mov	r1, #0
   1dc3c:	mov	r2, r7
   1dc40:	add	r6, r6, #8
   1dc44:	bl	e58 <memset@plt>
   1dc48:	cmp	r7, #19
   1dc4c:	str	r7, [r6]
   1dc50:	bhi	1dc5c <gen_dnhostop+0x7e0>
   1dc54:	b	1ebd4 <gen_dnhostop+0x1758>
   1dc58:	mov	r5, r0
   1dc5c:	sub	r0, r7, #20
   1dc60:	mov	r1, #97	; 0x61
   1dc64:	str	r0, [r6]
   1dc68:	ldr	r6, [r6, #4]
   1dc6c:	str	r1, [r6, r0]!
   1dc70:	cmp	r6, #0
   1dc74:	str	r4, [r6, #12]
   1dc78:	beq	1dce4 <gen_dnhostop+0x868>
   1dc7c:	mov	r7, r9
   1dc80:	mov	r4, r8
   1dc84:	ldr	r9, [r7, r5, lsl #3]!
   1dc88:	cmp	r9, #19
   1dc8c:	bhi	1dd78 <gen_dnhostop+0x8fc>
   1dc90:	ldr	r0, [pc, #3948]	; 1ec04 <gen_dnhostop+0x1788>
   1dc94:	add	r8, r5, #1
   1dc98:	cmp	r5, #15
   1dc9c:	add	r0, pc, r0
   1dca0:	str	r8, [r0]
   1dca4:	bge	1ebd4 <gen_dnhostop+0x1758>
   1dca8:	mov	r0, #1024	; 0x400
   1dcac:	lsl	r9, r0, r8
   1dcb0:	mov	r0, r9
   1dcb4:	bl	dec <malloc@plt>
   1dcb8:	cmp	r0, #0
   1dcbc:	str	r0, [r7, #12]
   1dcc0:	beq	1ebd4 <gen_dnhostop+0x1758>
   1dcc4:	mov	r1, #0
   1dcc8:	mov	r2, r9
   1dccc:	add	r7, r7, #8
   1dcd0:	bl	e58 <memset@plt>
   1dcd4:	cmp	r9, #19
   1dcd8:	str	r9, [r7]
   1dcdc:	bhi	1dd7c <gen_dnhostop+0x900>
   1dce0:	b	1ebd4 <gen_dnhostop+0x1758>
   1dce4:	mov	r4, r8
   1dce8:	mov	r6, r9
   1dcec:	ldr	r7, [r6, r5, lsl #3]!
   1dcf0:	cmp	r7, #19
   1dcf4:	bhi	1dd4c <gen_dnhostop+0x8d0>
   1dcf8:	ldr	r0, [pc, #3852]	; 1ec0c <gen_dnhostop+0x1790>
   1dcfc:	add	r8, r5, #1
   1dd00:	cmp	r5, #15
   1dd04:	add	r0, pc, r0
   1dd08:	str	r8, [r0]
   1dd0c:	bge	1ebd4 <gen_dnhostop+0x1758>
   1dd10:	mov	r0, #1024	; 0x400
   1dd14:	lsl	r7, r0, r8
   1dd18:	mov	r0, r7
   1dd1c:	bl	dec <malloc@plt>
   1dd20:	cmp	r0, #0
   1dd24:	str	r0, [r6, #12]
   1dd28:	beq	1ebd4 <gen_dnhostop+0x1758>
   1dd2c:	mov	r1, #0
   1dd30:	mov	r2, r7
   1dd34:	add	r6, r6, #8
   1dd38:	bl	e58 <memset@plt>
   1dd3c:	cmp	r7, #19
   1dd40:	str	r7, [r6]
   1dd44:	bhi	1dd50 <gen_dnhostop+0x8d4>
   1dd48:	b	1ebd4 <gen_dnhostop+0x1758>
   1dd4c:	mov	r8, r5
   1dd50:	sub	r0, r7, #20
   1dd54:	mov	r1, #48	; 0x30
   1dd58:	str	r0, [r6]
   1dd5c:	ldr	r6, [r6, #4]
   1dd60:	str	r1, [r6, r0]!
   1dd64:	ldr	r0, [pc, #3748]	; 1ec10 <gen_dnhostop+0x1794>
   1dd68:	ldr	r0, [pc, r0]
   1dd6c:	add	r0, r0, r4
   1dd70:	str	r0, [r6, #12]
   1dd74:	b	1ddb4 <gen_dnhostop+0x938>
   1dd78:	mov	r8, r5
   1dd7c:	sub	r1, r9, #20
   1dd80:	mov	r2, #80	; 0x50
   1dd84:	str	r1, [r7]
   1dd88:	ldr	r0, [r7, #4]
   1dd8c:	str	r2, [r0, r1]!
   1dd90:	mov	r2, r6
   1dd94:	str	r4, [r0, #12]
   1dd98:	mov	r1, r2
   1dd9c:	ldr	r2, [r2, #16]
   1dda0:	cmp	r2, #0
   1dda4:	bne	1dd98 <gen_dnhostop+0x91c>
   1dda8:	str	r0, [r1, #16]
   1ddac:	ldr	r9, [pc, #3668]	; 1ec08 <gen_dnhostop+0x178c>
   1ddb0:	add	r9, pc, r9
   1ddb4:	mov	r4, r9
   1ddb8:	ldr	r7, [r4, r8, lsl #3]!
   1ddbc:	cmp	r7, #19
   1ddc0:	bhi	1de1c <gen_dnhostop+0x9a0>
   1ddc4:	ldr	r0, [pc, #3656]	; 1ec14 <gen_dnhostop+0x1798>
   1ddc8:	add	r5, r8, #1
   1ddcc:	cmp	r8, #15
   1ddd0:	add	r0, pc, r0
   1ddd4:	str	r5, [r0]
   1ddd8:	bge	1ebd4 <gen_dnhostop+0x1758>
   1dddc:	mov	r0, #1024	; 0x400
   1dde0:	lsl	r7, r0, r5
   1dde4:	mov	r0, r7
   1dde8:	bl	dec <malloc@plt>
   1ddec:	ldr	r8, [sp, #4]
   1ddf0:	cmp	r0, #0
   1ddf4:	str	r0, [r4, #12]
   1ddf8:	beq	1ebd4 <gen_dnhostop+0x1758>
   1ddfc:	mov	r1, #0
   1de00:	mov	r2, r7
   1de04:	add	r4, r4, #8
   1de08:	bl	e58 <memset@plt>
   1de0c:	cmp	r7, #19
   1de10:	str	r7, [r4]
   1de14:	bhi	1de24 <gen_dnhostop+0x9a8>
   1de18:	b	1ebd4 <gen_dnhostop+0x1758>
   1de1c:	mov	r5, r8
   1de20:	ldr	r8, [sp, #4]
   1de24:	sub	r1, r7, #20
   1de28:	mov	r2, #84	; 0x54
   1de2c:	str	r1, [r4]
   1de30:	ldr	r0, [r4, #4]
   1de34:	str	r2, [r0, r1]!
   1de38:	mov	r1, #7
   1de3c:	mov	r2, r6
   1de40:	str	r1, [r0, #12]
   1de44:	mov	r1, r2
   1de48:	ldr	r2, [r2, #16]
   1de4c:	cmp	r2, #0
   1de50:	bne	1de44 <gen_dnhostop+0x9c8>
   1de54:	str	r0, [r1, #16]
   1de58:	mov	r4, r9
   1de5c:	ldr	r7, [r4, r5, lsl #3]!
   1de60:	cmp	r7, #207	; 0xcf
   1de64:	bhi	1deb8 <gen_dnhostop+0xa3c>
   1de68:	ldr	r1, [pc, #3496]	; 1ec18 <gen_dnhostop+0x179c>
   1de6c:	add	r0, r5, #1
   1de70:	cmp	r5, #15
   1de74:	add	r1, pc, r1
   1de78:	str	r0, [r1]
   1de7c:	bge	1ebd4 <gen_dnhostop+0x1758>
   1de80:	mov	r1, #1024	; 0x400
   1de84:	lsl	r7, r1, r0
   1de88:	mov	r0, r7
   1de8c:	bl	dec <malloc@plt>
   1de90:	cmp	r0, #0
   1de94:	str	r0, [r4, #12]
   1de98:	beq	1ebd4 <gen_dnhostop+0x1758>
   1de9c:	mov	r1, #0
   1dea0:	mov	r2, r7
   1dea4:	add	r4, r4, #8
   1dea8:	bl	e58 <memset@plt>
   1deac:	cmp	r7, #207	; 0xcf
   1deb0:	str	r7, [r4]
   1deb4:	bls	1ebd4 <gen_dnhostop+0x1758>
   1deb8:	sub	r0, r7, #208	; 0xd0
   1debc:	ldr	r3, [sp, #12]
   1dec0:	mov	r2, #8
   1dec4:	str	r0, [r4]
   1dec8:	ldr	r1, [r4, #4]
   1decc:	add	r4, r1, r0
   1ded0:	mov	r1, #6
   1ded4:	mov	r0, #21
   1ded8:	str	r1, [r4, #20]
   1dedc:	str	r6, [r4, #4]
   1dee0:	str	r0, [r4, #8]
   1dee4:	add	r1, r8, #2
   1dee8:	mov	r0, #3
   1deec:	str	r4, [r4, #96]	; 0x60
   1def0:	bl	a8f8 <gen_cmp>
   1def4:	cmp	r4, #0
   1def8:	beq	1df2c <gen_dnhostop+0xab0>
   1defc:	ldr	r1, [r0, #96]	; 0x60
   1df00:	mov	r2, r4
   1df04:	ldr	r3, [r2, #44]	; 0x2c
   1df08:	add	r7, r2, #84	; 0x54
   1df0c:	cmp	r3, #0
   1df10:	mov	r3, #84	; 0x54
   1df14:	movweq	r3, #60	; 0x3c
   1df18:	addeq	r7, r2, #60	; 0x3c
   1df1c:	ldr	r2, [r2, r3]
   1df20:	str	r1, [r7]
   1df24:	cmp	r2, #0
   1df28:	bne	1df04 <gen_dnhostop+0xa88>
   1df2c:	ldr	r1, [r4, #44]	; 0x2c
   1df30:	cmp	r0, #0
   1df34:	clz	r1, r1
   1df38:	lsr	r1, r1, #5
   1df3c:	str	r1, [r4, #44]	; 0x2c
   1df40:	ldr	r2, [r0, #44]	; 0x2c
   1df44:	clz	r1, r2
   1df48:	lsr	r1, r1, #5
   1df4c:	str	r1, [r0, #44]	; 0x2c
   1df50:	str	r0, [sp, #16]
   1df54:	beq	1dfa0 <gen_dnhostop+0xb24>
   1df58:	cmp	r2, #0
   1df5c:	mov	r2, #60	; 0x3c
   1df60:	add	r1, r0, #60	; 0x3c
   1df64:	movweq	r2, #84	; 0x54
   1df68:	addeq	r1, r0, #84	; 0x54
   1df6c:	ldr	r2, [r0, r2]
   1df70:	cmp	r2, #0
   1df74:	beq	1dfa4 <gen_dnhostop+0xb28>
   1df78:	ldr	r3, [r2, #44]	; 0x2c
   1df7c:	add	r1, r2, #84	; 0x54
   1df80:	cmp	r3, #0
   1df84:	mov	r3, #84	; 0x54
   1df88:	movweq	r3, #60	; 0x3c
   1df8c:	addeq	r1, r2, #60	; 0x3c
   1df90:	ldr	r2, [r2, r3]
   1df94:	cmp	r2, #0
   1df98:	bne	1df78 <gen_dnhostop+0xafc>
   1df9c:	b	1dfa4 <gen_dnhostop+0xb28>
   1dfa0:	add	r1, sp, #16
   1dfa4:	str	r4, [r1]
   1dfa8:	ldr	r1, [r0, #44]	; 0x2c
   1dfac:	clz	r2, r1
   1dfb0:	cmp	r1, #0
   1dfb4:	lsr	r2, r2, #5
   1dfb8:	movwne	r1, #1
   1dfbc:	cmp	r0, #0
   1dfc0:	str	r2, [r0, #44]	; 0x2c
   1dfc4:	ldr	r2, [r4, #96]	; 0x60
   1dfc8:	str	r1, [r0, #44]	; 0x2c
   1dfcc:	str	r2, [r0, #96]	; 0x60
   1dfd0:	beq	1e00c <gen_dnhostop+0xb90>
   1dfd4:	ldr	r2, [sl, #96]	; 0x60
   1dfd8:	mov	r3, r0
   1dfdc:	cmp	r1, #0
   1dfe0:	mov	r1, #84	; 0x54
   1dfe4:	add	r7, r3, #84	; 0x54
   1dfe8:	movweq	r1, #60	; 0x3c
   1dfec:	addeq	r7, r3, #60	; 0x3c
   1dff0:	ldr	r3, [r3, r1]
   1dff4:	str	r2, [r7]
   1dff8:	cmp	r3, #0
   1dffc:	beq	1e008 <gen_dnhostop+0xb8c>
   1e000:	ldr	r1, [r3, #44]	; 0x2c
   1e004:	b	1dfdc <gen_dnhostop+0xb60>
   1e008:	ldr	r1, [r0, #44]	; 0x2c
   1e00c:	clz	r1, r1
   1e010:	cmp	sl, #0
   1e014:	lsr	r1, r1, #5
   1e018:	str	r1, [r0, #44]	; 0x2c
   1e01c:	str	sl, [sp, #16]
   1e020:	beq	1e050 <gen_dnhostop+0xbd4>
   1e024:	mov	r2, sl
   1e028:	ldr	r3, [r2, #44]	; 0x2c
   1e02c:	add	r1, r2, #84	; 0x54
   1e030:	cmp	r3, #0
   1e034:	mov	r3, #84	; 0x54
   1e038:	movweq	r3, #60	; 0x3c
   1e03c:	addeq	r1, r2, #60	; 0x3c
   1e040:	ldr	r2, [r2, r3]
   1e044:	cmp	r2, #0
   1e048:	bne	1e028 <gen_dnhostop+0xbac>
   1e04c:	b	1e054 <gen_dnhostop+0xbd8>
   1e050:	add	r1, sp, #16
   1e054:	str	r0, [r1]
   1e058:	ldr	r0, [r0, #96]	; 0x60
   1e05c:	str	r0, [sl, #96]	; 0x60
   1e060:	ldr	r0, [pc, #2996]	; 1ec1c <gen_dnhostop+0x17a0>
   1e064:	add	r0, pc, r0
   1e068:	ldrb	r0, [r0]
   1e06c:	ldr	r1, [pc, #2988]	; 1ec20 <gen_dnhostop+0x17a4>
   1e070:	ldr	r1, [pc, r1]
   1e074:	cmp	r0, #0
   1e078:	add	r4, r1, #2
   1e07c:	beq	1e0e0 <gen_dnhostop+0xc64>
   1e080:	mov	r8, r4
   1e084:	ldr	r4, [pc, #2972]	; 1ec28 <gen_dnhostop+0x17ac>
   1e088:	ldr	r4, [pc, r4]
   1e08c:	cmn	r4, #1
   1e090:	bne	1e100 <gen_dnhostop+0xc84>
   1e094:	ldr	r4, [pc, #2960]	; 1ec2c <gen_dnhostop+0x17b0>
   1e098:	mvn	r1, #15
   1e09c:	ldr	r4, [pc, r4]
   1e0a0:	ldr	r0, [pc, #2952]	; 1ec30 <gen_dnhostop+0x17b4>
   1e0a4:	ldr	r2, [pc, #2952]	; 1ec34 <gen_dnhostop+0x17b8>
   1e0a8:	add	r0, pc, r0
   1e0ac:	add	r2, pc, r2
   1e0b0:	ldr	r3, [r0, r4, lsl #2]
   1e0b4:	cmp	r3, #0
   1e0b8:	beq	1e0ec <gen_dnhostop+0xc70>
   1e0bc:	add	r3, r4, #1
   1e0c0:	adds	r1, r1, #1
   1e0c4:	asr	r7, r3, #31
   1e0c8:	add	r7, r3, r7, lsr #28
   1e0cc:	bic	r7, r7, #15
   1e0d0:	sub	r4, r3, r7
   1e0d4:	str	r4, [r2]
   1e0d8:	bcc	1e0b0 <gen_dnhostop+0xc34>
   1e0dc:	b	1e5f8 <gen_dnhostop+0x117c>
   1e0e0:	ldr	r5, [pc, #2876]	; 1ec24 <gen_dnhostop+0x17a8>
   1e0e4:	ldr	r5, [pc, r5]
   1e0e8:	b	1e1fc <gen_dnhostop+0xd80>
   1e0ec:	mov	r1, #1
   1e0f0:	str	r1, [r0, r4, lsl #2]
   1e0f4:	ldr	r0, [pc, #2876]	; 1ec38 <gen_dnhostop+0x17bc>
   1e0f8:	add	r0, pc, r0
   1e0fc:	str	r4, [r0]
   1e100:	ldr	r0, [pc, #2868]	; 1ec3c <gen_dnhostop+0x17c0>
   1e104:	mov	r6, r9
   1e108:	ldr	r0, [pc, r0]
   1e10c:	ldr	r7, [r6, r0, lsl #3]!
   1e110:	cmp	r7, #19
   1e114:	bhi	1e16c <gen_dnhostop+0xcf0>
   1e118:	ldr	r1, [pc, #2848]	; 1ec40 <gen_dnhostop+0x17c4>
   1e11c:	add	r5, r0, #1
   1e120:	cmp	r0, #15
   1e124:	add	r1, pc, r1
   1e128:	str	r5, [r1]
   1e12c:	bge	1ebd4 <gen_dnhostop+0x1758>
   1e130:	mov	r0, #1024	; 0x400
   1e134:	lsl	r7, r0, r5
   1e138:	mov	r0, r7
   1e13c:	bl	dec <malloc@plt>
   1e140:	cmp	r0, #0
   1e144:	str	r0, [r6, #12]
   1e148:	beq	1ebd4 <gen_dnhostop+0x1758>
   1e14c:	mov	r1, #0
   1e150:	mov	r2, r7
   1e154:	add	r6, r6, #8
   1e158:	bl	e58 <memset@plt>
   1e15c:	cmp	r7, #19
   1e160:	str	r7, [r6]
   1e164:	bhi	1e170 <gen_dnhostop+0xcf4>
   1e168:	b	1ebd4 <gen_dnhostop+0x1758>
   1e16c:	mov	r5, r0
   1e170:	sub	r0, r7, #20
   1e174:	mov	r1, #97	; 0x61
   1e178:	str	r0, [r6]
   1e17c:	ldr	r6, [r6, #4]
   1e180:	str	r1, [r6, r0]!
   1e184:	cmp	r6, #0
   1e188:	str	r4, [r6, #12]
   1e18c:	beq	1e1f8 <gen_dnhostop+0xd7c>
   1e190:	mov	r7, r9
   1e194:	mov	r4, r8
   1e198:	ldr	r9, [r7, r5, lsl #3]!
   1e19c:	cmp	r9, #19
   1e1a0:	bhi	1e28c <gen_dnhostop+0xe10>
   1e1a4:	ldr	r0, [pc, #2712]	; 1ec44 <gen_dnhostop+0x17c8>
   1e1a8:	add	r8, r5, #1
   1e1ac:	cmp	r5, #15
   1e1b0:	add	r0, pc, r0
   1e1b4:	str	r8, [r0]
   1e1b8:	bge	1ebd4 <gen_dnhostop+0x1758>
   1e1bc:	mov	r0, #1024	; 0x400
   1e1c0:	lsl	r9, r0, r8
   1e1c4:	mov	r0, r9
   1e1c8:	bl	dec <malloc@plt>
   1e1cc:	cmp	r0, #0
   1e1d0:	str	r0, [r7, #12]
   1e1d4:	beq	1ebd4 <gen_dnhostop+0x1758>
   1e1d8:	mov	r1, #0
   1e1dc:	mov	r2, r9
   1e1e0:	add	r7, r7, #8
   1e1e4:	bl	e58 <memset@plt>
   1e1e8:	cmp	r9, #19
   1e1ec:	str	r9, [r7]
   1e1f0:	bhi	1e290 <gen_dnhostop+0xe14>
   1e1f4:	b	1ebd4 <gen_dnhostop+0x1758>
   1e1f8:	mov	r4, r8
   1e1fc:	mov	r6, r9
   1e200:	ldr	r7, [r6, r5, lsl #3]!
   1e204:	cmp	r7, #19
   1e208:	bhi	1e260 <gen_dnhostop+0xde4>
   1e20c:	ldr	r0, [pc, #2616]	; 1ec4c <gen_dnhostop+0x17d0>
   1e210:	add	r8, r5, #1
   1e214:	cmp	r5, #15
   1e218:	add	r0, pc, r0
   1e21c:	str	r8, [r0]
   1e220:	bge	1ebd4 <gen_dnhostop+0x1758>
   1e224:	mov	r0, #1024	; 0x400
   1e228:	lsl	r7, r0, r8
   1e22c:	mov	r0, r7
   1e230:	bl	dec <malloc@plt>
   1e234:	cmp	r0, #0
   1e238:	str	r0, [r6, #12]
   1e23c:	beq	1ebd4 <gen_dnhostop+0x1758>
   1e240:	mov	r1, #0
   1e244:	mov	r2, r7
   1e248:	add	r6, r6, #8
   1e24c:	bl	e58 <memset@plt>
   1e250:	cmp	r7, #19
   1e254:	str	r7, [r6]
   1e258:	bhi	1e264 <gen_dnhostop+0xde8>
   1e25c:	b	1ebd4 <gen_dnhostop+0x1758>
   1e260:	mov	r8, r5
   1e264:	sub	r0, r7, #20
   1e268:	mov	r1, #40	; 0x28
   1e26c:	str	r0, [r6]
   1e270:	ldr	r6, [r6, #4]
   1e274:	str	r1, [r6, r0]!
   1e278:	ldr	r0, [pc, #2512]	; 1ec50 <gen_dnhostop+0x17d4>
   1e27c:	ldr	r0, [pc, r0]
   1e280:	add	r0, r0, r4
   1e284:	str	r0, [r6, #12]
   1e288:	b	1e2c8 <gen_dnhostop+0xe4c>
   1e28c:	mov	r8, r5
   1e290:	sub	r1, r9, #20
   1e294:	mov	r2, #72	; 0x48
   1e298:	str	r1, [r7]
   1e29c:	ldr	r0, [r7, #4]
   1e2a0:	str	r2, [r0, r1]!
   1e2a4:	mov	r2, r6
   1e2a8:	str	r4, [r0, #12]
   1e2ac:	mov	r1, r2
   1e2b0:	ldr	r2, [r2, #16]
   1e2b4:	cmp	r2, #0
   1e2b8:	bne	1e2ac <gen_dnhostop+0xe30>
   1e2bc:	str	r0, [r1, #16]
   1e2c0:	ldr	r9, [pc, #2432]	; 1ec48 <gen_dnhostop+0x17cc>
   1e2c4:	add	r9, pc, r9
   1e2c8:	mov	r4, r9
   1e2cc:	ldr	r7, [r4, r8, lsl #3]!
   1e2d0:	cmp	r7, #19
   1e2d4:	bhi	1e330 <gen_dnhostop+0xeb4>
   1e2d8:	ldr	r0, [pc, #2420]	; 1ec54 <gen_dnhostop+0x17d8>
   1e2dc:	add	r5, r8, #1
   1e2e0:	cmp	r8, #15
   1e2e4:	add	r0, pc, r0
   1e2e8:	str	r5, [r0]
   1e2ec:	bge	1ebd4 <gen_dnhostop+0x1758>
   1e2f0:	mov	r0, #1024	; 0x400
   1e2f4:	lsl	r7, r0, r5
   1e2f8:	mov	r0, r7
   1e2fc:	bl	dec <malloc@plt>
   1e300:	ldr	r8, [sp, #8]
   1e304:	cmp	r0, #0
   1e308:	str	r0, [r4, #12]
   1e30c:	beq	1ebd4 <gen_dnhostop+0x1758>
   1e310:	mov	r1, #0
   1e314:	mov	r2, r7
   1e318:	add	r4, r4, #8
   1e31c:	bl	e58 <memset@plt>
   1e320:	cmp	r7, #19
   1e324:	str	r7, [r4]
   1e328:	bhi	1e338 <gen_dnhostop+0xebc>
   1e32c:	b	1ebd4 <gen_dnhostop+0x1758>
   1e330:	mov	r5, r8
   1e334:	ldr	r8, [sp, #8]
   1e338:	sub	r1, r7, #20
   1e33c:	mov	r2, #84	; 0x54
   1e340:	str	r1, [r4]
   1e344:	ldr	r0, [r4, #4]
   1e348:	str	r2, [r0, r1]!
   1e34c:	movw	r1, #65287	; 0xff07
   1e350:	mov	r2, r6
   1e354:	str	r1, [r0, #12]
   1e358:	mov	r1, r2
   1e35c:	ldr	r2, [r2, #16]
   1e360:	cmp	r2, #0
   1e364:	bne	1e358 <gen_dnhostop+0xedc>
   1e368:	str	r0, [r1, #16]
   1e36c:	mov	r4, r9
   1e370:	ldr	r7, [r4, r5, lsl #3]!
   1e374:	cmp	r7, #207	; 0xcf
   1e378:	bhi	1e3cc <gen_dnhostop+0xf50>
   1e37c:	ldr	r1, [pc, #2260]	; 1ec58 <gen_dnhostop+0x17dc>
   1e380:	add	r0, r5, #1
   1e384:	cmp	r5, #15
   1e388:	add	r1, pc, r1
   1e38c:	str	r0, [r1]
   1e390:	bge	1ebd4 <gen_dnhostop+0x1758>
   1e394:	mov	r1, #1024	; 0x400
   1e398:	lsl	r7, r1, r0
   1e39c:	mov	r0, r7
   1e3a0:	bl	dec <malloc@plt>
   1e3a4:	cmp	r0, #0
   1e3a8:	str	r0, [r4, #12]
   1e3ac:	beq	1ebd4 <gen_dnhostop+0x1758>
   1e3b0:	mov	r1, #0
   1e3b4:	mov	r2, r7
   1e3b8:	add	r4, r4, #8
   1e3bc:	bl	e58 <memset@plt>
   1e3c0:	cmp	r7, #207	; 0xcf
   1e3c4:	str	r7, [r4]
   1e3c8:	bls	1ebd4 <gen_dnhostop+0x1758>
   1e3cc:	sub	r0, r7, #208	; 0xd0
   1e3d0:	ldr	r3, [sp, #12]
   1e3d4:	mov	r2, #8
   1e3d8:	str	r0, [r4]
   1e3dc:	ldr	r1, [r4, #4]
   1e3e0:	add	r4, r1, r0
   1e3e4:	movw	r1, #33026	; 0x8102
   1e3e8:	mov	r0, #21
   1e3ec:	str	r1, [r4, #20]
   1e3f0:	str	r6, [r4, #4]
   1e3f4:	str	r0, [r4, #8]
   1e3f8:	add	r1, r8, #3
   1e3fc:	mov	r0, #3
   1e400:	str	r4, [r4, #96]	; 0x60
   1e404:	bl	a8f8 <gen_cmp>
   1e408:	cmp	r4, #0
   1e40c:	beq	1e440 <gen_dnhostop+0xfc4>
   1e410:	ldr	r1, [r0, #96]	; 0x60
   1e414:	mov	r2, r4
   1e418:	ldr	r3, [r2, #44]	; 0x2c
   1e41c:	add	r7, r2, #84	; 0x54
   1e420:	cmp	r3, #0
   1e424:	mov	r3, #84	; 0x54
   1e428:	movweq	r3, #60	; 0x3c
   1e42c:	addeq	r7, r2, #60	; 0x3c
   1e430:	ldr	r2, [r2, r3]
   1e434:	str	r1, [r7]
   1e438:	cmp	r2, #0
   1e43c:	bne	1e418 <gen_dnhostop+0xf9c>
   1e440:	ldr	r1, [r4, #44]	; 0x2c
   1e444:	cmp	r0, #0
   1e448:	clz	r1, r1
   1e44c:	lsr	r1, r1, #5
   1e450:	str	r1, [r4, #44]	; 0x2c
   1e454:	ldr	r2, [r0, #44]	; 0x2c
   1e458:	clz	r1, r2
   1e45c:	lsr	r1, r1, #5
   1e460:	str	r1, [r0, #44]	; 0x2c
   1e464:	str	r0, [sp, #16]
   1e468:	beq	1e4b4 <gen_dnhostop+0x1038>
   1e46c:	cmp	r2, #0
   1e470:	mov	r2, #60	; 0x3c
   1e474:	add	r1, r0, #60	; 0x3c
   1e478:	movweq	r2, #84	; 0x54
   1e47c:	addeq	r1, r0, #84	; 0x54
   1e480:	ldr	r2, [r0, r2]
   1e484:	cmp	r2, #0
   1e488:	beq	1e4b8 <gen_dnhostop+0x103c>
   1e48c:	ldr	r3, [r2, #44]	; 0x2c
   1e490:	add	r1, r2, #84	; 0x54
   1e494:	cmp	r3, #0
   1e498:	mov	r3, #84	; 0x54
   1e49c:	movweq	r3, #60	; 0x3c
   1e4a0:	addeq	r1, r2, #60	; 0x3c
   1e4a4:	ldr	r2, [r2, r3]
   1e4a8:	cmp	r2, #0
   1e4ac:	bne	1e48c <gen_dnhostop+0x1010>
   1e4b0:	b	1e4b8 <gen_dnhostop+0x103c>
   1e4b4:	add	r1, sp, #16
   1e4b8:	str	r4, [r1]
   1e4bc:	ldr	r1, [r0, #44]	; 0x2c
   1e4c0:	clz	r2, r1
   1e4c4:	cmp	r1, #0
   1e4c8:	lsr	r2, r2, #5
   1e4cc:	movwne	r1, #1
   1e4d0:	cmp	r0, #0
   1e4d4:	str	r2, [r0, #44]	; 0x2c
   1e4d8:	ldr	r2, [r4, #96]	; 0x60
   1e4dc:	str	r1, [r0, #44]	; 0x2c
   1e4e0:	str	r2, [r0, #96]	; 0x60
   1e4e4:	beq	1e520 <gen_dnhostop+0x10a4>
   1e4e8:	ldr	r2, [sl, #96]	; 0x60
   1e4ec:	mov	r3, r0
   1e4f0:	cmp	r1, #0
   1e4f4:	mov	r1, #84	; 0x54
   1e4f8:	add	r7, r3, #84	; 0x54
   1e4fc:	movweq	r1, #60	; 0x3c
   1e500:	addeq	r7, r3, #60	; 0x3c
   1e504:	ldr	r3, [r3, r1]
   1e508:	str	r2, [r7]
   1e50c:	cmp	r3, #0
   1e510:	beq	1e51c <gen_dnhostop+0x10a0>
   1e514:	ldr	r1, [r3, #44]	; 0x2c
   1e518:	b	1e4f0 <gen_dnhostop+0x1074>
   1e51c:	ldr	r1, [r0, #44]	; 0x2c
   1e520:	clz	r1, r1
   1e524:	cmp	sl, #0
   1e528:	lsr	r1, r1, #5
   1e52c:	str	r1, [r0, #44]	; 0x2c
   1e530:	str	sl, [sp, #16]
   1e534:	beq	1e56c <gen_dnhostop+0x10f0>
   1e538:	mov	r2, sl
   1e53c:	ldr	r3, [r2, #44]	; 0x2c
   1e540:	add	r1, r2, #84	; 0x54
   1e544:	cmp	r3, #0
   1e548:	mov	r3, #84	; 0x54
   1e54c:	movweq	r3, #60	; 0x3c
   1e550:	addeq	r1, r2, #60	; 0x3c
   1e554:	ldr	r2, [r2, r3]
   1e558:	cmp	r2, #0
   1e55c:	bne	1e53c <gen_dnhostop+0x10c0>
   1e560:	b	1e570 <gen_dnhostop+0x10f4>
   1e564:	.word	0x00029f20
   1e568:	.word	0x00029e54
   1e56c:	add	r1, sp, #16
   1e570:	str	r0, [r1]
   1e574:	ldr	r0, [r0, #96]	; 0x60
   1e578:	str	r0, [sl, #96]	; 0x60
   1e57c:	ldr	r0, [pc, #1752]	; 1ec5c <gen_dnhostop+0x17e0>
   1e580:	add	r0, pc, r0
   1e584:	ldrb	r0, [r0]
   1e588:	ldr	r1, [pc, #1744]	; 1ec60 <gen_dnhostop+0x17e4>
   1e58c:	ldr	r1, [pc, r1]
   1e590:	cmp	r0, #0
   1e594:	add	r4, r1, #2
   1e598:	beq	1e608 <gen_dnhostop+0x118c>
   1e59c:	mov	r8, r4
   1e5a0:	ldr	r4, [pc, #1728]	; 1ec68 <gen_dnhostop+0x17ec>
   1e5a4:	ldr	r4, [pc, r4]
   1e5a8:	cmn	r4, #1
   1e5ac:	bne	1e638 <gen_dnhostop+0x11bc>
   1e5b0:	ldr	r4, [pc, #1716]	; 1ec6c <gen_dnhostop+0x17f0>
   1e5b4:	mvn	r1, #15
   1e5b8:	ldr	r4, [pc, r4]
   1e5bc:	ldr	r0, [pc, #1708]	; 1ec70 <gen_dnhostop+0x17f4>
   1e5c0:	ldr	r2, [pc, #1708]	; 1ec74 <gen_dnhostop+0x17f8>
   1e5c4:	add	r0, pc, r0
   1e5c8:	add	r2, pc, r2
   1e5cc:	ldr	r3, [r0, r4, lsl #2]
   1e5d0:	cmp	r3, #0
   1e5d4:	beq	1e624 <gen_dnhostop+0x11a8>
   1e5d8:	add	r3, r4, #1
   1e5dc:	adds	r1, r1, #1
   1e5e0:	asr	r7, r3, #31
   1e5e4:	add	r7, r3, r7, lsr #28
   1e5e8:	bic	r7, r7, #15
   1e5ec:	sub	r4, r3, r7
   1e5f0:	str	r4, [r2]
   1e5f4:	bcc	1e5cc <gen_dnhostop+0x1150>
   1e5f8:	ldr	r0, [pc, #1532]	; 1ebfc <gen_dnhostop+0x1780>
   1e5fc:	add	r0, pc, r0
   1e600:	bl	2068 <sf_bpf_error>
   1e604:	.word	0x00029f04
   1e608:	ldr	r5, [pc, #1620]	; 1ec64 <gen_dnhostop+0x17e8>
   1e60c:	ldr	r5, [pc, r5]
   1e610:	b	1e744 <gen_dnhostop+0x12c8>
   1e614:	.word	0x00029ef4
   1e618:	.word	0x00029eec
   1e61c:	.word	0x00029ee4
   1e620:	.word	0x00029e9c
   1e624:	mov	r1, #1
   1e628:	str	r1, [r0, r4, lsl #2]
   1e62c:	ldr	r0, [pc, #1604]	; 1ec78 <gen_dnhostop+0x17fc>
   1e630:	add	r0, pc, r0
   1e634:	str	r4, [r0]
   1e638:	ldr	r0, [pc, #1596]	; 1ec7c <gen_dnhostop+0x1800>
   1e63c:	mov	r6, r9
   1e640:	ldr	r0, [pc, r0]
   1e644:	ldr	r7, [r6, r0, lsl #3]!
   1e648:	cmp	r7, #19
   1e64c:	bhi	1e6a4 <gen_dnhostop+0x1228>
   1e650:	ldr	r1, [pc, #1576]	; 1ec80 <gen_dnhostop+0x1804>
   1e654:	add	r5, r0, #1
   1e658:	cmp	r0, #15
   1e65c:	add	r1, pc, r1
   1e660:	str	r5, [r1]
   1e664:	bge	1ebd4 <gen_dnhostop+0x1758>
   1e668:	mov	r0, #1024	; 0x400
   1e66c:	lsl	r7, r0, r5
   1e670:	mov	r0, r7
   1e674:	bl	dec <malloc@plt>
   1e678:	cmp	r0, #0
   1e67c:	str	r0, [r6, #12]
   1e680:	beq	1ebd4 <gen_dnhostop+0x1758>
   1e684:	mov	r1, #0
   1e688:	mov	r2, r7
   1e68c:	add	r6, r6, #8
   1e690:	bl	e58 <memset@plt>
   1e694:	cmp	r7, #19
   1e698:	str	r7, [r6]
   1e69c:	bhi	1e6a8 <gen_dnhostop+0x122c>
   1e6a0:	b	1ebd4 <gen_dnhostop+0x1758>
   1e6a4:	mov	r5, r0
   1e6a8:	sub	r0, r7, #20
   1e6ac:	mov	r1, #97	; 0x61
   1e6b0:	str	r0, [r6]
   1e6b4:	ldr	r6, [r6, #4]
   1e6b8:	str	r1, [r6, r0]!
   1e6bc:	cmp	r6, #0
   1e6c0:	str	r4, [r6, #12]
   1e6c4:	beq	1e740 <gen_dnhostop+0x12c4>
   1e6c8:	mov	r7, r9
   1e6cc:	mov	r4, r8
   1e6d0:	ldr	r9, [r7, r5, lsl #3]!
   1e6d4:	cmp	r9, #19
   1e6d8:	bhi	1e7e4 <gen_dnhostop+0x1368>
   1e6dc:	ldr	r0, [pc, #1440]	; 1ec84 <gen_dnhostop+0x1808>
   1e6e0:	add	r8, r5, #1
   1e6e4:	cmp	r5, #15
   1e6e8:	add	r0, pc, r0
   1e6ec:	str	r8, [r0]
   1e6f0:	bge	1ebd4 <gen_dnhostop+0x1758>
   1e6f4:	mov	r0, #1024	; 0x400
   1e6f8:	lsl	r9, r0, r8
   1e6fc:	mov	r0, r9
   1e700:	bl	dec <malloc@plt>
   1e704:	cmp	r0, #0
   1e708:	str	r0, [r7, #12]
   1e70c:	beq	1ebd4 <gen_dnhostop+0x1758>
   1e710:	mov	r1, #0
   1e714:	mov	r2, r9
   1e718:	add	r7, r7, #8
   1e71c:	bl	e58 <memset@plt>
   1e720:	cmp	r9, #19
   1e724:	str	r9, [r7]
   1e728:	bhi	1e7e8 <gen_dnhostop+0x136c>
   1e72c:	b	1ebd4 <gen_dnhostop+0x1758>
   1e730:	.word	0x00029dbc
   1e734:	.word	0x00029da0
   1e738:	.word	0x00029d18
   1e73c:	.word	0x00029d7c
   1e740:	mov	r4, r8
   1e744:	mov	r6, r9
   1e748:	ldr	r7, [r6, r5, lsl #3]!
   1e74c:	cmp	r7, #19
   1e750:	bhi	1e7a8 <gen_dnhostop+0x132c>
   1e754:	ldr	r0, [pc, #1328]	; 1ec8c <gen_dnhostop+0x1810>
   1e758:	add	r8, r5, #1
   1e75c:	cmp	r5, #15
   1e760:	add	r0, pc, r0
   1e764:	str	r8, [r0]
   1e768:	bge	1ebd4 <gen_dnhostop+0x1758>
   1e76c:	mov	r0, #1024	; 0x400
   1e770:	lsl	r7, r0, r8
   1e774:	mov	r0, r7
   1e778:	bl	dec <malloc@plt>
   1e77c:	cmp	r0, #0
   1e780:	str	r0, [r6, #12]
   1e784:	beq	1ebd4 <gen_dnhostop+0x1758>
   1e788:	mov	r1, #0
   1e78c:	mov	r2, r7
   1e790:	add	r6, r6, #8
   1e794:	bl	e58 <memset@plt>
   1e798:	cmp	r7, #19
   1e79c:	str	r7, [r6]
   1e7a0:	bhi	1e7ac <gen_dnhostop+0x1330>
   1e7a4:	b	1ebd4 <gen_dnhostop+0x1758>
   1e7a8:	mov	r8, r5
   1e7ac:	sub	r0, r7, #20
   1e7b0:	mov	r1, #48	; 0x30
   1e7b4:	str	r0, [r6]
   1e7b8:	ldr	r6, [r6, #4]
   1e7bc:	str	r1, [r6, r0]!
   1e7c0:	ldr	r0, [pc, #1224]	; 1ec90 <gen_dnhostop+0x1814>
   1e7c4:	ldr	r0, [pc, r0]
   1e7c8:	add	r0, r0, r4
   1e7cc:	str	r0, [r6, #12]
   1e7d0:	b	1e820 <gen_dnhostop+0x13a4>
   1e7d4:	.word	0x00029c88
   1e7d8:	.word	0x00029cec
   1e7dc:	.word	0x00029c1c
   1e7e0:	.word	0x00029c80
   1e7e4:	mov	r8, r5
   1e7e8:	sub	r1, r9, #20
   1e7ec:	mov	r2, #80	; 0x50
   1e7f0:	str	r1, [r7]
   1e7f4:	ldr	r0, [r7, #4]
   1e7f8:	str	r2, [r0, r1]!
   1e7fc:	mov	r2, r6
   1e800:	str	r4, [r0, #12]
   1e804:	mov	r1, r2
   1e808:	ldr	r2, [r2, #16]
   1e80c:	cmp	r2, #0
   1e810:	bne	1e804 <gen_dnhostop+0x1388>
   1e814:	str	r0, [r1, #16]
   1e818:	ldr	r9, [pc, #1128]	; 1ec88 <gen_dnhostop+0x180c>
   1e81c:	add	r9, pc, r9
   1e820:	mov	r4, r9
   1e824:	ldr	r7, [r4, r8, lsl #3]!
   1e828:	cmp	r7, #19
   1e82c:	bhi	1e89c <gen_dnhostop+0x1420>
   1e830:	ldr	r0, [pc, #1116]	; 1ec94 <gen_dnhostop+0x1818>
   1e834:	add	r5, r8, #1
   1e838:	cmp	r8, #15
   1e83c:	add	r0, pc, r0
   1e840:	str	r5, [r0]
   1e844:	bge	1ebd4 <gen_dnhostop+0x1758>
   1e848:	mov	r0, #1024	; 0x400
   1e84c:	lsl	r7, r0, r5
   1e850:	mov	r0, r7
   1e854:	bl	dec <malloc@plt>
   1e858:	ldr	r8, [sp, #8]
   1e85c:	cmp	r0, #0
   1e860:	str	r0, [r4, #12]
   1e864:	beq	1ebd4 <gen_dnhostop+0x1758>
   1e868:	mov	r1, #0
   1e86c:	mov	r2, r7
   1e870:	add	r4, r4, #8
   1e874:	bl	e58 <memset@plt>
   1e878:	cmp	r7, #19
   1e87c:	str	r7, [r4]
   1e880:	bhi	1e8a4 <gen_dnhostop+0x1428>
   1e884:	b	1ebd4 <gen_dnhostop+0x1758>
   1e888:	.word	0x00029b5c
   1e88c:	.word	0x00029b54
   1e890:	.word	0x00029bb8
   1e894:	.word	0x00029aac
   1e898:	.word	0x00029b10
   1e89c:	mov	r5, r8
   1e8a0:	ldr	r8, [sp, #8]
   1e8a4:	sub	r1, r7, #20
   1e8a8:	mov	r2, #84	; 0x54
   1e8ac:	str	r1, [r4]
   1e8b0:	ldr	r0, [r4, #4]
   1e8b4:	str	r2, [r0, r1]!
   1e8b8:	mov	r1, #7
   1e8bc:	mov	r2, r6
   1e8c0:	str	r1, [r0, #12]
   1e8c4:	mov	r1, r2
   1e8c8:	ldr	r2, [r2, #16]
   1e8cc:	cmp	r2, #0
   1e8d0:	bne	1e8c4 <gen_dnhostop+0x1448>
   1e8d4:	str	r0, [r1, #16]
   1e8d8:	ldr	r7, [r9, r5, lsl #3]!
   1e8dc:	cmp	r7, #207	; 0xcf
   1e8e0:	bhi	1e934 <gen_dnhostop+0x14b8>
   1e8e4:	ldr	r1, [pc, #940]	; 1ec98 <gen_dnhostop+0x181c>
   1e8e8:	add	r0, r5, #1
   1e8ec:	cmp	r5, #15
   1e8f0:	add	r1, pc, r1
   1e8f4:	str	r0, [r1]
   1e8f8:	bge	1ebd4 <gen_dnhostop+0x1758>
   1e8fc:	mov	r1, #1024	; 0x400
   1e900:	lsl	r7, r1, r0
   1e904:	mov	r0, r7
   1e908:	bl	dec <malloc@plt>
   1e90c:	cmp	r0, #0
   1e910:	str	r0, [r9, #12]
   1e914:	beq	1ebd4 <gen_dnhostop+0x1758>
   1e918:	mov	r1, #0
   1e91c:	mov	r2, r7
   1e920:	add	r9, r9, #8
   1e924:	bl	e58 <memset@plt>
   1e928:	cmp	r7, #207	; 0xcf
   1e92c:	str	r7, [r9]
   1e930:	bls	1ebd4 <gen_dnhostop+0x1758>
   1e934:	sub	r0, r7, #208	; 0xd0
   1e938:	ldr	r3, [sp, #12]
   1e93c:	mov	r2, #8
   1e940:	str	r0, [r9]
   1e944:	ldr	r1, [r9, #4]
   1e948:	add	r4, r1, r0
   1e94c:	mov	r1, #2
   1e950:	mov	r0, #21
   1e954:	str	r1, [r4, #20]
   1e958:	str	r6, [r4, #4]
   1e95c:	str	r0, [r4, #8]
   1e960:	add	r1, r8, #2
   1e964:	mov	r0, #3
   1e968:	str	r4, [r4, #96]	; 0x60
   1e96c:	bl	a8f8 <gen_cmp>
   1e970:	cmp	r4, #0
   1e974:	beq	1e9a8 <gen_dnhostop+0x152c>
   1e978:	ldr	r1, [r0, #96]	; 0x60
   1e97c:	mov	r2, r4
   1e980:	ldr	r3, [r2, #44]	; 0x2c
   1e984:	add	r7, r2, #84	; 0x54
   1e988:	cmp	r3, #0
   1e98c:	mov	r3, #84	; 0x54
   1e990:	movweq	r3, #60	; 0x3c
   1e994:	addeq	r7, r2, #60	; 0x3c
   1e998:	ldr	r2, [r2, r3]
   1e99c:	str	r1, [r7]
   1e9a0:	cmp	r2, #0
   1e9a4:	bne	1e980 <gen_dnhostop+0x1504>
   1e9a8:	ldr	r1, [r4, #44]	; 0x2c
   1e9ac:	ldr	r5, [sp]
   1e9b0:	cmp	r0, #0
   1e9b4:	clz	r1, r1
   1e9b8:	lsr	r1, r1, #5
   1e9bc:	str	r1, [r4, #44]	; 0x2c
   1e9c0:	ldr	r2, [r0, #44]	; 0x2c
   1e9c4:	clz	r1, r2
   1e9c8:	lsr	r1, r1, #5
   1e9cc:	str	r1, [r0, #44]	; 0x2c
   1e9d0:	str	r0, [sp, #16]
   1e9d4:	beq	1ea20 <gen_dnhostop+0x15a4>
   1e9d8:	cmp	r2, #0
   1e9dc:	mov	r2, #60	; 0x3c
   1e9e0:	add	r1, r0, #60	; 0x3c
   1e9e4:	movweq	r2, #84	; 0x54
   1e9e8:	addeq	r1, r0, #84	; 0x54
   1e9ec:	ldr	r2, [r0, r2]
   1e9f0:	cmp	r2, #0
   1e9f4:	beq	1ea24 <gen_dnhostop+0x15a8>
   1e9f8:	ldr	r3, [r2, #44]	; 0x2c
   1e9fc:	add	r1, r2, #84	; 0x54
   1ea00:	cmp	r3, #0
   1ea04:	mov	r3, #84	; 0x54
   1ea08:	movweq	r3, #60	; 0x3c
   1ea0c:	addeq	r1, r2, #60	; 0x3c
   1ea10:	ldr	r2, [r2, r3]
   1ea14:	cmp	r2, #0
   1ea18:	bne	1e9f8 <gen_dnhostop+0x157c>
   1ea1c:	b	1ea24 <gen_dnhostop+0x15a8>
   1ea20:	add	r1, sp, #16
   1ea24:	str	r4, [r1]
   1ea28:	ldr	r1, [r0, #44]	; 0x2c
   1ea2c:	clz	r2, r1
   1ea30:	cmp	r1, #0
   1ea34:	lsr	r2, r2, #5
   1ea38:	movwne	r1, #1
   1ea3c:	cmp	r0, #0
   1ea40:	str	r2, [r0, #44]	; 0x2c
   1ea44:	ldr	r2, [r4, #96]	; 0x60
   1ea48:	str	r1, [r0, #44]	; 0x2c
   1ea4c:	str	r2, [r0, #96]	; 0x60
   1ea50:	beq	1ea8c <gen_dnhostop+0x1610>
   1ea54:	ldr	r2, [sl, #96]	; 0x60
   1ea58:	mov	r3, r0
   1ea5c:	cmp	r1, #0
   1ea60:	mov	r1, #84	; 0x54
   1ea64:	add	r7, r3, #84	; 0x54
   1ea68:	movweq	r1, #60	; 0x3c
   1ea6c:	addeq	r7, r3, #60	; 0x3c
   1ea70:	ldr	r3, [r3, r1]
   1ea74:	str	r2, [r7]
   1ea78:	cmp	r3, #0
   1ea7c:	beq	1ea88 <gen_dnhostop+0x160c>
   1ea80:	ldr	r1, [r3, #44]	; 0x2c
   1ea84:	b	1ea5c <gen_dnhostop+0x15e0>
   1ea88:	ldr	r1, [r0, #44]	; 0x2c
   1ea8c:	clz	r1, r1
   1ea90:	cmp	sl, #0
   1ea94:	lsr	r1, r1, #5
   1ea98:	str	r1, [r0, #44]	; 0x2c
   1ea9c:	str	sl, [sp, #16]
   1eaa0:	beq	1eaec <gen_dnhostop+0x1670>
   1eaa4:	mov	r2, sl
   1eaa8:	ldr	r3, [r2, #44]	; 0x2c
   1eaac:	add	r1, r2, #84	; 0x54
   1eab0:	cmp	r3, #0
   1eab4:	mov	r3, #84	; 0x54
   1eab8:	movweq	r3, #60	; 0x3c
   1eabc:	addeq	r1, r2, #60	; 0x3c
   1eac0:	ldr	r2, [r2, r3]
   1eac4:	cmp	r2, #0
   1eac8:	bne	1eaa8 <gen_dnhostop+0x162c>
   1eacc:	b	1eaf0 <gen_dnhostop+0x1674>
   1ead0:	.word	0x000299a0
   1ead4:	.word	0x000299b0
   1ead8:	.word	0x000298e4
   1eadc:	.word	0x00029994
   1eae0:	.word	0x00029984
   1eae4:	.word	0x0002997c
   1eae8:	.word	0x00029974
   1eaec:	add	r1, sp, #16
   1eaf0:	str	r0, [r1]
   1eaf4:	cmp	r5, #0
   1eaf8:	ldr	r0, [r0, #96]	; 0x60
   1eafc:	str	r0, [sl, #96]	; 0x60
   1eb00:	beq	1eb30 <gen_dnhostop+0x16b4>
   1eb04:	mov	r1, r5
   1eb08:	ldr	r2, [r1, #44]	; 0x2c
   1eb0c:	add	r3, r1, #84	; 0x54
   1eb10:	cmp	r2, #0
   1eb14:	mov	r2, #84	; 0x54
   1eb18:	movweq	r2, #60	; 0x3c
   1eb1c:	addeq	r3, r1, #60	; 0x3c
   1eb20:	ldr	r1, [r1, r2]
   1eb24:	str	r0, [r3]
   1eb28:	cmp	r1, #0
   1eb2c:	bne	1eb08 <gen_dnhostop+0x168c>
   1eb30:	ldr	r0, [r5, #44]	; 0x2c
   1eb34:	cmp	sl, #0
   1eb38:	clz	r0, r0
   1eb3c:	lsr	r0, r0, #5
   1eb40:	str	r0, [r5, #44]	; 0x2c
   1eb44:	ldr	r1, [sl, #44]	; 0x2c
   1eb48:	clz	r0, r1
   1eb4c:	lsr	r0, r0, #5
   1eb50:	str	r0, [sl, #44]	; 0x2c
   1eb54:	str	sl, [sp, #16]
   1eb58:	beq	1eba4 <gen_dnhostop+0x1728>
   1eb5c:	cmp	r1, #0
   1eb60:	mov	r1, #60	; 0x3c
   1eb64:	add	r0, sl, #60	; 0x3c
   1eb68:	movweq	r1, #84	; 0x54
   1eb6c:	addeq	r0, sl, #84	; 0x54
   1eb70:	ldr	r1, [sl, r1]
   1eb74:	cmp	r1, #0
   1eb78:	beq	1eba8 <gen_dnhostop+0x172c>
   1eb7c:	ldr	r2, [r1, #44]	; 0x2c
   1eb80:	add	r0, r1, #84	; 0x54
   1eb84:	cmp	r2, #0
   1eb88:	mov	r2, #84	; 0x54
   1eb8c:	movweq	r2, #60	; 0x3c
   1eb90:	addeq	r0, r1, #60	; 0x3c
   1eb94:	ldr	r1, [r1, r2]
   1eb98:	cmp	r1, #0
   1eb9c:	bne	1eb7c <gen_dnhostop+0x1700>
   1eba0:	b	1eba8 <gen_dnhostop+0x172c>
   1eba4:	add	r0, sp, #16
   1eba8:	str	r5, [r0]
   1ebac:	ldr	r0, [sl, #44]	; 0x2c
   1ebb0:	clz	r0, r0
   1ebb4:	lsr	r0, r0, #5
   1ebb8:	str	r0, [sl, #44]	; 0x2c
   1ebbc:	ldr	r0, [r5, #96]	; 0x60
   1ebc0:	str	r0, [sl, #96]	; 0x60
   1ebc4:	mov	r0, sl
   1ebc8:	sub	sp, fp, #28
   1ebcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ebd0:	.word	0x0002992c
   1ebd4:	ldr	r0, [pc, #192]	; 1ec9c <gen_dnhostop+0x1820>
   1ebd8:	add	r0, pc, r0
   1ebdc:	bl	2068 <sf_bpf_error>
   1ebe0:	bl	edc <abort@plt>
   1ebe4:	.word	0x00029924
   1ebe8:	.word	0x00029908
   1ebec:	ldr	r0, [pc, #4]	; 1ebf8 <gen_dnhostop+0x177c>
   1ebf0:	add	r0, pc, r0
   1ebf4:	bl	2068 <sf_bpf_error>
   1ebf8:	.word	0x0000c293
   1ebfc:	.word	0x0000cad1
   1ec00:	.word	0x000298ec
   1ec04:	.word	0x00029860
   1ec08:	.word	0x000296cc
   1ec0c:	.word	0x000297f8
   1ec10:	.word	0x000296d4
   1ec14:	.word	0x0002972c
   1ec18:	.word	0x00029688
   1ec1c:	.word	0x0002949c
   1ec20:	.word	0x000293d0
   1ec24:	.word	0x00029418
   1ec28:	.word	0x00029480
   1ec2c:	.word	0x00029470
   1ec30:	.word	0x00029468
   1ec34:	.word	0x00029460
   1ec38:	.word	0x00029410
   1ec3c:	.word	0x000293f4
   1ec40:	.word	0x000293d8
   1ec44:	.word	0x0002934c
   1ec48:	.word	0x000291b8
   1ec4c:	.word	0x000292e4
   1ec50:	.word	0x000291c0
   1ec54:	.word	0x00029218
   1ec58:	.word	0x00029174
   1ec5c:	.word	0x00028f80
   1ec60:	.word	0x00028eb4
   1ec64:	.word	0x00028ef0
   1ec68:	.word	0x00028f64
   1ec6c:	.word	0x00028f54
   1ec70:	.word	0x00028f4c
   1ec74:	.word	0x00028f44
   1ec78:	.word	0x00028ed8
   1ec7c:	.word	0x00028ebc
   1ec80:	.word	0x00028ea0
   1ec84:	.word	0x00028e14
   1ec88:	.word	0x00028c60
   1ec8c:	.word	0x00028d9c
   1ec90:	.word	0x00028c78
   1ec94:	.word	0x00028cc0
   1ec98:	.word	0x00028c0c
   1ec9c:	.word	0x0000baa4

0001eca0 <gen_hostop6>:
   1eca0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eca4:	add	fp, sp, #28
   1eca8:	sub	sp, sp, #44	; 0x2c
   1ecac:	cmp	r2, #4
   1ecb0:	bhi	20210 <gen_hostop6+0x1570>
   1ecb4:	mov	r6, r0
   1ecb8:	add	r0, pc, #20
   1ecbc:	mov	r7, r1
   1ecc0:	ldr	r8, [fp, #12]
   1ecc4:	ldr	r5, [fp, #8]
   1ecc8:	mov	r9, r3
   1eccc:	ldr	r1, [r0, r2, lsl #2]
   1ecd0:	add	pc, r0, r1
   1ecd4:	.word	0x00000014
   1ecd8:	.word	0x000001d8
   1ecdc:	.word	0x000001d4
   1ece0:	.word	0x00000014
   1ece4:	.word	0x000000e8
   1ece8:	mov	r0, r6
   1ecec:	mov	r1, r7
   1ecf0:	mov	r2, #1
   1ecf4:	mov	r3, r9
   1ecf8:	stm	sp, {r5, r8}
   1ecfc:	bl	1eca0 <gen_hostop6>
   1ed00:	mov	r4, r0
   1ed04:	mov	r0, r6
   1ed08:	mov	r1, r7
   1ed0c:	mov	r2, #2
   1ed10:	mov	r3, r9
   1ed14:	stm	sp, {r5, r8}
   1ed18:	bl	1eca0 <gen_hostop6>
   1ed1c:	mov	r8, r0
   1ed20:	ldr	r0, [r4, #44]	; 0x2c
   1ed24:	cmp	r4, #0
   1ed28:	mov	r5, r8
   1ed2c:	clz	r0, r0
   1ed30:	lsr	r1, r0, #5
   1ed34:	str	r1, [r4, #44]	; 0x2c
   1ed38:	ldr	r0, [r5, #96]!	; 0x60
   1ed3c:	beq	1ed74 <gen_hostop6+0xd4>
   1ed40:	mov	r2, r4
   1ed44:	cmp	r1, #0
   1ed48:	mov	r1, #84	; 0x54
   1ed4c:	add	r3, r2, #84	; 0x54
   1ed50:	movweq	r1, #60	; 0x3c
   1ed54:	addeq	r3, r2, #60	; 0x3c
   1ed58:	ldr	r2, [r2, r1]
   1ed5c:	str	r0, [r3]
   1ed60:	cmp	r2, #0
   1ed64:	beq	1ed70 <gen_hostop6+0xd0>
   1ed68:	ldr	r1, [r2, #44]	; 0x2c
   1ed6c:	b	1ed44 <gen_hostop6+0xa4>
   1ed70:	ldr	r1, [r4, #44]	; 0x2c
   1ed74:	clz	r0, r1
   1ed78:	cmp	r8, #0
   1ed7c:	lsr	r0, r0, #5
   1ed80:	str	r0, [r4, #44]	; 0x2c
   1ed84:	str	r8, [fp, #-32]	; 0xffffffe0
   1ed88:	beq	1ef60 <gen_hostop6+0x2c0>
   1ed8c:	mov	r1, r8
   1ed90:	ldr	r2, [r1, #44]	; 0x2c
   1ed94:	add	r0, r1, #84	; 0x54
   1ed98:	cmp	r2, #0
   1ed9c:	mov	r2, #84	; 0x54
   1eda0:	movweq	r2, #60	; 0x3c
   1eda4:	addeq	r0, r1, #60	; 0x3c
   1eda8:	ldr	r1, [r1, r2]
   1edac:	cmp	r1, #0
   1edb0:	bne	1ed90 <gen_hostop6+0xf0>
   1edb4:	str	r4, [r0]
   1edb8:	b	201fc <gen_hostop6+0x155c>
   1edbc:	mov	r0, r6
   1edc0:	mov	r1, r7
   1edc4:	mov	r2, #1
   1edc8:	mov	r3, r9
   1edcc:	stm	sp, {r5, r8}
   1edd0:	bl	1eca0 <gen_hostop6>
   1edd4:	mov	r4, r0
   1edd8:	mov	r0, r6
   1eddc:	mov	r1, r7
   1ede0:	mov	r2, #2
   1ede4:	mov	r3, r9
   1ede8:	stm	sp, {r5, r8}
   1edec:	bl	1eca0 <gen_hostop6>
   1edf0:	mov	r5, r0
   1edf4:	mov	r8, r0
   1edf8:	cmp	r4, #0
   1edfc:	ldr	r0, [r5, #96]!	; 0x60
   1ee00:	beq	1ee30 <gen_hostop6+0x190>
   1ee04:	mov	r1, r4
   1ee08:	ldr	r2, [r1, #44]	; 0x2c
   1ee0c:	add	r3, r1, #84	; 0x54
   1ee10:	cmp	r2, #0
   1ee14:	mov	r2, #84	; 0x54
   1ee18:	movweq	r2, #60	; 0x3c
   1ee1c:	addeq	r3, r1, #60	; 0x3c
   1ee20:	ldr	r1, [r1, r2]
   1ee24:	str	r0, [r3]
   1ee28:	cmp	r1, #0
   1ee2c:	bne	1ee08 <gen_hostop6+0x168>
   1ee30:	ldr	r0, [r4, #44]	; 0x2c
   1ee34:	cmp	r8, #0
   1ee38:	clz	r0, r0
   1ee3c:	lsr	r0, r0, #5
   1ee40:	str	r0, [r4, #44]	; 0x2c
   1ee44:	ldr	r1, [r8, #44]	; 0x2c
   1ee48:	clz	r0, r1
   1ee4c:	lsr	r0, r0, #5
   1ee50:	str	r0, [r8, #44]	; 0x2c
   1ee54:	str	r8, [fp, #-32]	; 0xffffffe0
   1ee58:	beq	1ef6c <gen_hostop6+0x2cc>
   1ee5c:	cmp	r1, #0
   1ee60:	mov	r1, #60	; 0x3c
   1ee64:	add	r0, r8, #60	; 0x3c
   1ee68:	movweq	r1, #84	; 0x54
   1ee6c:	addeq	r0, r8, #84	; 0x54
   1ee70:	ldr	r1, [r8, r1]
   1ee74:	cmp	r1, #0
   1ee78:	beq	1eea0 <gen_hostop6+0x200>
   1ee7c:	ldr	r2, [r1, #44]	; 0x2c
   1ee80:	add	r0, r1, #84	; 0x54
   1ee84:	cmp	r2, #0
   1ee88:	mov	r2, #84	; 0x54
   1ee8c:	movweq	r2, #60	; 0x3c
   1ee90:	addeq	r0, r1, #60	; 0x3c
   1ee94:	ldr	r1, [r1, r2]
   1ee98:	cmp	r1, #0
   1ee9c:	bne	1ee7c <gen_hostop6+0x1dc>
   1eea0:	str	r4, [r0]
   1eea4:	b	201ec <gen_hostop6+0x154c>
   1eea8:	mov	r5, r8
   1eeac:	ldr	r0, [pc, #3980]	; 1fe40 <gen_hostop6+0x11a0>
   1eeb0:	ldr	r0, [pc, r0]
   1eeb4:	add	r0, r0, r5
   1eeb8:	str	r0, [sp, #36]	; 0x24
   1eebc:	add	lr, r0, #12
   1eec0:	ldr	r0, [pc, #3964]	; 1fe44 <gen_hostop6+0x11a4>
   1eec4:	str	r7, [sp, #32]
   1eec8:	ldr	r8, [r7, #12]
   1eecc:	ldr	r4, [r6, #12]
   1eed0:	add	r0, pc, r0
   1eed4:	ldrb	r0, [r0]
   1eed8:	str	r0, [sp, #24]
   1eedc:	cmp	r0, #0
   1eee0:	ldr	ip, [pc, #3936]	; 1fe48 <gen_hostop6+0x11a8>
   1eee4:	str	r6, [sp, #28]
   1eee8:	str	r9, [sp, #16]
   1eeec:	str	r4, [sp, #20]
   1eef0:	add	ip, pc, ip
   1eef4:	beq	1ef54 <gen_hostop6+0x2b4>
   1eef8:	ldr	r5, [pc, #3916]	; 1fe4c <gen_hostop6+0x11ac>
   1eefc:	ldr	r5, [pc, r5]
   1ef00:	cmn	r5, #1
   1ef04:	bne	1ef8c <gen_hostop6+0x2ec>
   1ef08:	ldr	r5, [pc, #4084]	; 1ff04 <gen_hostop6+0x1264>
   1ef0c:	mvn	r1, #15
   1ef10:	ldr	r5, [pc, r5]
   1ef14:	ldr	r0, [pc, #4076]	; 1ff08 <gen_hostop6+0x1268>
   1ef18:	ldr	r2, [pc, #4076]	; 1ff0c <gen_hostop6+0x126c>
   1ef1c:	add	r0, pc, r0
   1ef20:	add	r2, pc, r2
   1ef24:	ldr	r3, [r0, r5, lsl #2]
   1ef28:	cmp	r3, #0
   1ef2c:	beq	1ef78 <gen_hostop6+0x2d8>
   1ef30:	add	r3, r5, #1
   1ef34:	adds	r1, r1, #1
   1ef38:	asr	r7, r3, #31
   1ef3c:	add	r7, r3, r7, lsr #28
   1ef40:	bic	r7, r7, #15
   1ef44:	sub	r5, r3, r7
   1ef48:	str	r5, [r2]
   1ef4c:	bcc	1ef24 <gen_hostop6+0x284>
   1ef50:	b	1fc90 <gen_hostop6+0xff0>
   1ef54:	ldr	r7, [pc, #4084]	; 1ff50 <gen_hostop6+0x12b0>
   1ef58:	ldr	r7, [pc, r7]
   1ef5c:	b	1f0a0 <gen_hostop6+0x400>
   1ef60:	sub	r0, fp, #32
   1ef64:	str	r4, [r0]
   1ef68:	b	201fc <gen_hostop6+0x155c>
   1ef6c:	sub	r0, fp, #32
   1ef70:	str	r4, [r0]
   1ef74:	b	201ec <gen_hostop6+0x154c>
   1ef78:	mov	r1, #1
   1ef7c:	str	r1, [r0, r5, lsl #2]
   1ef80:	ldr	r0, [pc, #4044]	; 1ff54 <gen_hostop6+0x12b4>
   1ef84:	add	r0, pc, r0
   1ef88:	str	r5, [r0]
   1ef8c:	ldr	r0, [pc, #4036]	; 1ff58 <gen_hostop6+0x12b8>
   1ef90:	mov	r6, ip
   1ef94:	ldr	r0, [pc, r0]
   1ef98:	ldr	r4, [r6, r0, lsl #3]!
   1ef9c:	cmp	r4, #19
   1efa0:	bhi	1f008 <gen_hostop6+0x368>
   1efa4:	ldr	r1, [pc, #4016]	; 1ff5c <gen_hostop6+0x12bc>
   1efa8:	add	r7, r0, #1
   1efac:	cmp	r0, #15
   1efb0:	add	r1, pc, r1
   1efb4:	str	r7, [r1]
   1efb8:	bge	20018 <gen_hostop6+0x1378>
   1efbc:	mov	r0, #1024	; 0x400
   1efc0:	mov	sl, lr
   1efc4:	lsl	r4, r0, r7
   1efc8:	mov	r0, r4
   1efcc:	bl	dec <malloc@plt>
   1efd0:	cmp	r0, #0
   1efd4:	str	r0, [r6, #12]
   1efd8:	beq	20018 <gen_hostop6+0x1378>
   1efdc:	mov	r1, #0
   1efe0:	mov	r2, r4
   1efe4:	add	r6, r6, #8
   1efe8:	bl	e58 <memset@plt>
   1efec:	str	r4, [r6]
   1eff0:	cmp	r4, #19
   1eff4:	mov	lr, sl
   1eff8:	ldr	ip, [pc, #3936]	; 1ff60 <gen_hostop6+0x12c0>
   1effc:	add	ip, pc, ip
   1f000:	bhi	1f00c <gen_hostop6+0x36c>
   1f004:	b	20018 <gen_hostop6+0x1378>
   1f008:	mov	r7, r0
   1f00c:	sub	r0, r4, #20
   1f010:	mov	r1, #97	; 0x61
   1f014:	str	r0, [r6]
   1f018:	ldr	sl, [r6, #4]
   1f01c:	str	r1, [sl, r0]!
   1f020:	cmp	sl, #0
   1f024:	str	r5, [sl, #12]
   1f028:	beq	1f0a0 <gen_hostop6+0x400>
   1f02c:	mov	r5, ip
   1f030:	ldr	r4, [r5, r7, lsl #3]!
   1f034:	cmp	r4, #19
   1f038:	bhi	1f1ec <gen_hostop6+0x54c>
   1f03c:	ldr	r0, [pc, #4064]	; 20024 <gen_hostop6+0x1384>
   1f040:	add	r9, r7, #1
   1f044:	cmp	r7, #15
   1f048:	add	r0, pc, r0
   1f04c:	str	r9, [r0]
   1f050:	bge	20018 <gen_hostop6+0x1378>
   1f054:	mov	r0, #1024	; 0x400
   1f058:	mov	r6, lr
   1f05c:	lsl	r4, r0, r9
   1f060:	mov	r0, r4
   1f064:	bl	dec <malloc@plt>
   1f068:	cmp	r0, #0
   1f06c:	str	r0, [r5, #12]
   1f070:	beq	20018 <gen_hostop6+0x1378>
   1f074:	mov	r1, #0
   1f078:	mov	r2, r4
   1f07c:	add	r5, r5, #8
   1f080:	bl	e58 <memset@plt>
   1f084:	str	r4, [r5]
   1f088:	cmp	r4, #19
   1f08c:	mov	lr, r6
   1f090:	ldr	ip, [pc, #3984]	; 20028 <gen_hostop6+0x1388>
   1f094:	add	ip, pc, ip
   1f098:	bhi	1f1f0 <gen_hostop6+0x550>
   1f09c:	b	20018 <gen_hostop6+0x1378>
   1f0a0:	mov	r5, ip
   1f0a4:	ldr	r4, [r5, r7, lsl #3]!
   1f0a8:	cmp	r4, #19
   1f0ac:	bhi	1f114 <gen_hostop6+0x474>
   1f0b0:	ldr	r0, [pc, #3956]	; 2002c <gen_hostop6+0x138c>
   1f0b4:	add	r9, r7, #1
   1f0b8:	cmp	r7, #15
   1f0bc:	add	r0, pc, r0
   1f0c0:	str	r9, [r0]
   1f0c4:	bge	20018 <gen_hostop6+0x1378>
   1f0c8:	mov	r0, #1024	; 0x400
   1f0cc:	mov	r6, lr
   1f0d0:	lsl	r4, r0, r9
   1f0d4:	mov	r0, r4
   1f0d8:	bl	dec <malloc@plt>
   1f0dc:	cmp	r0, #0
   1f0e0:	str	r0, [r5, #12]
   1f0e4:	beq	20018 <gen_hostop6+0x1378>
   1f0e8:	mov	r1, #0
   1f0ec:	mov	r2, r4
   1f0f0:	add	r5, r5, #8
   1f0f4:	bl	e58 <memset@plt>
   1f0f8:	str	r4, [r5]
   1f0fc:	cmp	r4, #19
   1f100:	mov	lr, r6
   1f104:	ldr	ip, [pc, #4084]	; 20100 <gen_hostop6+0x1460>
   1f108:	add	ip, pc, ip
   1f10c:	bhi	1f118 <gen_hostop6+0x478>
   1f110:	b	20018 <gen_hostop6+0x1378>
   1f114:	mov	r9, r7
   1f118:	sub	r0, r4, #20
   1f11c:	mov	r1, #32
   1f120:	str	r0, [r5]
   1f124:	ldr	sl, [r5, #4]
   1f128:	str	r1, [sl, r0]!
   1f12c:	ldr	r0, [pc, #4048]	; 20104 <gen_hostop6+0x1464>
   1f130:	ldr	r0, [pc, r0]
   1f134:	add	r0, r0, lr
   1f138:	str	r0, [sl, #12]
   1f13c:	cmn	r8, #1
   1f140:	beq	1f228 <gen_hostop6+0x588>
   1f144:	mov	r7, ip
   1f148:	ldr	r4, [r7, r9, lsl #3]!
   1f14c:	cmp	r4, #19
   1f150:	bhi	1f1b0 <gen_hostop6+0x510>
   1f154:	ldr	r0, [pc, #4012]	; 20108 <gen_hostop6+0x1468>
   1f158:	add	r5, r9, #1
   1f15c:	cmp	r9, #15
   1f160:	add	r0, pc, r0
   1f164:	str	r5, [r0]
   1f168:	bge	20018 <gen_hostop6+0x1378>
   1f16c:	mov	r0, #1024	; 0x400
   1f170:	lsl	r4, r0, r5
   1f174:	mov	r0, r4
   1f178:	bl	dec <malloc@plt>
   1f17c:	cmp	r0, #0
   1f180:	str	r0, [r7, #12]
   1f184:	beq	20018 <gen_hostop6+0x1378>
   1f188:	mov	r1, #0
   1f18c:	mov	r2, r4
   1f190:	add	r7, r7, #8
   1f194:	bl	e58 <memset@plt>
   1f198:	str	r4, [r7]
   1f19c:	cmp	r4, #19
   1f1a0:	ldr	ip, [pc, #3940]	; 2010c <gen_hostop6+0x146c>
   1f1a4:	add	ip, pc, ip
   1f1a8:	bhi	1f1b4 <gen_hostop6+0x514>
   1f1ac:	b	20018 <gen_hostop6+0x1378>
   1f1b0:	mov	r5, r9
   1f1b4:	sub	r2, r4, #20
   1f1b8:	mov	r3, #84	; 0x54
   1f1bc:	rev	r1, r8
   1f1c0:	str	r2, [r7]
   1f1c4:	ldr	r0, [r7, #4]
   1f1c8:	str	r3, [r0, r2]!
   1f1cc:	mov	r2, sl
   1f1d0:	str	r1, [r0, #12]
   1f1d4:	mov	r1, r2
   1f1d8:	ldr	r2, [r2, #16]
   1f1dc:	cmp	r2, #0
   1f1e0:	bne	1f1d4 <gen_hostop6+0x534>
   1f1e4:	str	r0, [r1, #16]
   1f1e8:	b	1f22c <gen_hostop6+0x58c>
   1f1ec:	mov	r9, r7
   1f1f0:	sub	r1, r4, #20
   1f1f4:	mov	r2, #64	; 0x40
   1f1f8:	str	r1, [r5]
   1f1fc:	ldr	r0, [r5, #4]
   1f200:	str	r2, [r0, r1]!
   1f204:	mov	r2, sl
   1f208:	str	lr, [r0, #12]
   1f20c:	mov	r1, r2
   1f210:	ldr	r2, [r2, #16]
   1f214:	cmp	r2, #0
   1f218:	bne	1f20c <gen_hostop6+0x56c>
   1f21c:	str	r0, [r1, #16]
   1f220:	cmn	r8, #1
   1f224:	bne	1f144 <gen_hostop6+0x4a4>
   1f228:	mov	r5, r9
   1f22c:	mov	r6, ip
   1f230:	ldr	r4, [r6, r5, lsl #3]!
   1f234:	cmp	r4, #207	; 0xcf
   1f238:	bhi	1f298 <gen_hostop6+0x5f8>
   1f23c:	ldr	r0, [pc, #4052]	; 20218 <gen_hostop6+0x1578>
   1f240:	add	r7, r5, #1
   1f244:	cmp	r5, #15
   1f248:	add	r0, pc, r0
   1f24c:	str	r7, [r0]
   1f250:	bge	20018 <gen_hostop6+0x1378>
   1f254:	mov	r0, #1024	; 0x400
   1f258:	lsl	r4, r0, r7
   1f25c:	mov	r0, r4
   1f260:	bl	dec <malloc@plt>
   1f264:	cmp	r0, #0
   1f268:	str	r0, [r6, #12]
   1f26c:	beq	20018 <gen_hostop6+0x1378>
   1f270:	mov	r1, #0
   1f274:	mov	r2, r4
   1f278:	add	r6, r6, #8
   1f27c:	bl	e58 <memset@plt>
   1f280:	str	r4, [r6]
   1f284:	cmp	r4, #207	; 0xcf
   1f288:	ldr	ip, [pc, #3980]	; 2021c <gen_hostop6+0x157c>
   1f28c:	add	ip, pc, ip
   1f290:	bhi	1f29c <gen_hostop6+0x5fc>
   1f294:	b	20018 <gen_hostop6+0x1378>
   1f298:	mov	r7, r5
   1f29c:	sub	r1, r4, #208	; 0xd0
   1f2a0:	ldr	r0, [sp, #20]
   1f2a4:	str	r1, [r6]
   1f2a8:	ldr	r2, [r6, #4]
   1f2ac:	rev	r0, r0
   1f2b0:	add	r8, r2, r1
   1f2b4:	mov	r1, #21
   1f2b8:	str	r0, [r8, #20]
   1f2bc:	ldr	r0, [sp, #36]	; 0x24
   1f2c0:	str	sl, [r8, #4]
   1f2c4:	str	r1, [r8, #8]
   1f2c8:	str	r8, [r8, #96]	; 0x60
   1f2cc:	add	r6, r0, #8
   1f2d0:	ldr	r0, [sp, #32]
   1f2d4:	ldr	r5, [r0, #8]
   1f2d8:	ldr	r0, [sp, #28]
   1f2dc:	ldr	sl, [r0, #8]
   1f2e0:	ldr	r0, [sp, #24]
   1f2e4:	str	r5, [sp, #20]
   1f2e8:	cmp	r0, #0
   1f2ec:	str	sl, [sp, #12]
   1f2f0:	beq	1f468 <gen_hostop6+0x7c8>
   1f2f4:	str	r6, [sp, #8]
   1f2f8:	ldr	r6, [pc, #3872]	; 20220 <gen_hostop6+0x1580>
   1f2fc:	ldr	r6, [pc, r6]
   1f300:	cmn	r6, #1
   1f304:	bne	1f368 <gen_hostop6+0x6c8>
   1f308:	ldr	r6, [pc, #3860]	; 20224 <gen_hostop6+0x1584>
   1f30c:	mvn	r1, #15
   1f310:	ldr	r6, [pc, r6]
   1f314:	ldr	r0, [pc, #3852]	; 20228 <gen_hostop6+0x1588>
   1f318:	ldr	r2, [pc, #3852]	; 2022c <gen_hostop6+0x158c>
   1f31c:	add	r0, pc, r0
   1f320:	add	r2, pc, r2
   1f324:	ldr	r3, [r0, r6, lsl #2]
   1f328:	cmp	r3, #0
   1f32c:	beq	1f354 <gen_hostop6+0x6b4>
   1f330:	add	r3, r6, #1
   1f334:	adds	r1, r1, #1
   1f338:	asr	r6, r3, #31
   1f33c:	add	r6, r3, r6, lsr #28
   1f340:	bic	r6, r6, #15
   1f344:	sub	r6, r3, r6
   1f348:	str	r6, [r2]
   1f34c:	bcc	1f324 <gen_hostop6+0x684>
   1f350:	b	1fc90 <gen_hostop6+0xff0>
   1f354:	mov	r1, #1
   1f358:	str	r1, [r0, r6, lsl #2]
   1f35c:	ldr	r0, [pc, #3788]	; 20230 <gen_hostop6+0x1590>
   1f360:	add	r0, pc, r0
   1f364:	str	r6, [r0]
   1f368:	mov	r5, ip
   1f36c:	ldr	r4, [r5, r7, lsl #3]!
   1f370:	cmp	r4, #19
   1f374:	bhi	1f3d4 <gen_hostop6+0x734>
   1f378:	ldr	r0, [pc, #3764]	; 20234 <gen_hostop6+0x1594>
   1f37c:	add	r1, r7, #1
   1f380:	cmp	r7, #15
   1f384:	add	r0, pc, r0
   1f388:	str	r1, [r0]
   1f38c:	bge	20018 <gen_hostop6+0x1378>
   1f390:	mov	r0, #1024	; 0x400
   1f394:	mov	r7, r1
   1f398:	lsl	r4, r0, r1
   1f39c:	mov	r0, r4
   1f3a0:	bl	dec <malloc@plt>
   1f3a4:	cmp	r0, #0
   1f3a8:	str	r0, [r5, #12]
   1f3ac:	beq	20018 <gen_hostop6+0x1378>
   1f3b0:	mov	r1, #0
   1f3b4:	mov	r2, r4
   1f3b8:	add	r5, r5, #8
   1f3bc:	bl	e58 <memset@plt>
   1f3c0:	str	r4, [r5]
   1f3c4:	cmp	r4, #19
   1f3c8:	ldr	ip, [pc, #3688]	; 20238 <gen_hostop6+0x1598>
   1f3cc:	add	ip, pc, ip
   1f3d0:	bls	20018 <gen_hostop6+0x1378>
   1f3d4:	sub	r0, r4, #20
   1f3d8:	mov	r1, #97	; 0x61
   1f3dc:	str	r0, [r5]
   1f3e0:	ldr	r9, [r5, #4]
   1f3e4:	str	r1, [r9, r0]!
   1f3e8:	cmp	r9, #0
   1f3ec:	str	r6, [r9, #12]
   1f3f0:	beq	1f464 <gen_hostop6+0x7c4>
   1f3f4:	mov	r5, ip
   1f3f8:	ldr	r6, [sp, #8]
   1f3fc:	ldr	r4, [r5, r7, lsl #3]!
   1f400:	cmp	r4, #19
   1f404:	bhi	1f500 <gen_hostop6+0x860>
   1f408:	ldr	r0, [pc, #3628]	; 2023c <gen_hostop6+0x159c>
   1f40c:	add	sl, r7, #1
   1f410:	cmp	r7, #15
   1f414:	add	r0, pc, r0
   1f418:	str	sl, [r0]
   1f41c:	bge	20018 <gen_hostop6+0x1378>
   1f420:	mov	r0, #1024	; 0x400
   1f424:	lsl	r4, r0, sl
   1f428:	mov	r0, r4
   1f42c:	bl	dec <malloc@plt>
   1f430:	cmp	r0, #0
   1f434:	str	r0, [r5, #12]
   1f438:	beq	20018 <gen_hostop6+0x1378>
   1f43c:	mov	r1, #0
   1f440:	mov	r2, r4
   1f444:	add	r5, r5, #8
   1f448:	bl	e58 <memset@plt>
   1f44c:	str	r4, [r5]
   1f450:	cmp	r4, #19
   1f454:	ldr	ip, [pc, #3556]	; 20240 <gen_hostop6+0x15a0>
   1f458:	add	ip, pc, ip
   1f45c:	bhi	1f504 <gen_hostop6+0x864>
   1f460:	b	20018 <gen_hostop6+0x1378>
   1f464:	ldr	r6, [sp, #8]
   1f468:	mov	r5, ip
   1f46c:	ldr	r4, [r5, r7, lsl #3]!
   1f470:	cmp	r4, #19
   1f474:	bhi	1f4d4 <gen_hostop6+0x834>
   1f478:	ldr	r0, [pc, #3524]	; 20244 <gen_hostop6+0x15a4>
   1f47c:	add	sl, r7, #1
   1f480:	cmp	r7, #15
   1f484:	add	r0, pc, r0
   1f488:	str	sl, [r0]
   1f48c:	bge	20018 <gen_hostop6+0x1378>
   1f490:	mov	r0, #1024	; 0x400
   1f494:	lsl	r4, r0, sl
   1f498:	mov	r0, r4
   1f49c:	bl	dec <malloc@plt>
   1f4a0:	cmp	r0, #0
   1f4a4:	str	r0, [r5, #12]
   1f4a8:	beq	20018 <gen_hostop6+0x1378>
   1f4ac:	mov	r1, #0
   1f4b0:	mov	r2, r4
   1f4b4:	add	r5, r5, #8
   1f4b8:	bl	e58 <memset@plt>
   1f4bc:	str	r4, [r5]
   1f4c0:	cmp	r4, #19
   1f4c4:	ldr	ip, [pc, #3452]	; 20248 <gen_hostop6+0x15a8>
   1f4c8:	add	ip, pc, ip
   1f4cc:	bhi	1f4d8 <gen_hostop6+0x838>
   1f4d0:	b	20018 <gen_hostop6+0x1378>
   1f4d4:	mov	sl, r7
   1f4d8:	sub	r0, r4, #20
   1f4dc:	mov	r1, #32
   1f4e0:	str	r0, [r5]
   1f4e4:	ldr	r9, [r5, #4]
   1f4e8:	str	r1, [r9, r0]!
   1f4ec:	ldr	r0, [pc, #3416]	; 2024c <gen_hostop6+0x15ac>
   1f4f0:	ldr	r0, [pc, r0]
   1f4f4:	add	r0, r0, r6
   1f4f8:	str	r0, [r9, #12]
   1f4fc:	b	1f534 <gen_hostop6+0x894>
   1f500:	mov	sl, r7
   1f504:	sub	r1, r4, #20
   1f508:	mov	r2, #64	; 0x40
   1f50c:	str	r1, [r5]
   1f510:	ldr	r0, [r5, #4]
   1f514:	str	r2, [r0, r1]!
   1f518:	mov	r2, r9
   1f51c:	str	r6, [r0, #12]
   1f520:	mov	r1, r2
   1f524:	ldr	r2, [r2, #16]
   1f528:	cmp	r2, #0
   1f52c:	bne	1f520 <gen_hostop6+0x880>
   1f530:	str	r0, [r1, #16]
   1f534:	ldr	r5, [sp, #20]
   1f538:	cmn	r5, #1
   1f53c:	beq	1f5ac <gen_hostop6+0x90c>
   1f540:	mov	r6, ip
   1f544:	ldr	r4, [r6, sl, lsl #3]!
   1f548:	cmp	r4, #19
   1f54c:	bhi	1f5b4 <gen_hostop6+0x914>
   1f550:	ldr	r0, [pc, #3320]	; 20250 <gen_hostop6+0x15b0>
   1f554:	add	r7, sl, #1
   1f558:	cmp	sl, #15
   1f55c:	add	r0, pc, r0
   1f560:	str	r7, [r0]
   1f564:	bge	20018 <gen_hostop6+0x1378>
   1f568:	mov	r0, #1024	; 0x400
   1f56c:	lsl	r4, r0, r7
   1f570:	mov	r0, r4
   1f574:	bl	dec <malloc@plt>
   1f578:	cmp	r0, #0
   1f57c:	str	r0, [r6, #12]
   1f580:	beq	20018 <gen_hostop6+0x1378>
   1f584:	mov	r1, #0
   1f588:	mov	r2, r4
   1f58c:	add	r6, r6, #8
   1f590:	bl	e58 <memset@plt>
   1f594:	str	r4, [r6]
   1f598:	cmp	r4, #19
   1f59c:	ldr	ip, [pc, #3248]	; 20254 <gen_hostop6+0x15b4>
   1f5a0:	add	ip, pc, ip
   1f5a4:	bhi	1f5b8 <gen_hostop6+0x918>
   1f5a8:	b	20018 <gen_hostop6+0x1378>
   1f5ac:	mov	r7, sl
   1f5b0:	b	1f5ec <gen_hostop6+0x94c>
   1f5b4:	mov	r7, sl
   1f5b8:	sub	r2, r4, #20
   1f5bc:	mov	r3, #84	; 0x54
   1f5c0:	rev	r1, r5
   1f5c4:	str	r2, [r6]
   1f5c8:	ldr	r0, [r6, #4]
   1f5cc:	str	r3, [r0, r2]!
   1f5d0:	mov	r2, r9
   1f5d4:	str	r1, [r0, #12]
   1f5d8:	mov	r1, r2
   1f5dc:	ldr	r2, [r2, #16]
   1f5e0:	cmp	r2, #0
   1f5e4:	bne	1f5d8 <gen_hostop6+0x938>
   1f5e8:	str	r0, [r1, #16]
   1f5ec:	mov	r6, ip
   1f5f0:	ldr	r4, [r6, r7, lsl #3]!
   1f5f4:	cmp	r4, #207	; 0xcf
   1f5f8:	bhi	1f658 <gen_hostop6+0x9b8>
   1f5fc:	ldr	r0, [pc, #3156]	; 20258 <gen_hostop6+0x15b8>
   1f600:	add	sl, r7, #1
   1f604:	cmp	r7, #15
   1f608:	add	r0, pc, r0
   1f60c:	str	sl, [r0]
   1f610:	bge	20018 <gen_hostop6+0x1378>
   1f614:	mov	r0, #1024	; 0x400
   1f618:	lsl	r4, r0, sl
   1f61c:	mov	r0, r4
   1f620:	bl	dec <malloc@plt>
   1f624:	cmp	r0, #0
   1f628:	str	r0, [r6, #12]
   1f62c:	beq	20018 <gen_hostop6+0x1378>
   1f630:	mov	r1, #0
   1f634:	mov	r2, r4
   1f638:	add	r6, r6, #8
   1f63c:	bl	e58 <memset@plt>
   1f640:	str	r4, [r6]
   1f644:	cmp	r4, #207	; 0xcf
   1f648:	ldr	ip, [pc, #3084]	; 2025c <gen_hostop6+0x15bc>
   1f64c:	add	ip, pc, ip
   1f650:	bhi	1f65c <gen_hostop6+0x9bc>
   1f654:	b	20018 <gen_hostop6+0x1378>
   1f658:	mov	sl, r7
   1f65c:	ldr	r0, [sp, #12]
   1f660:	add	r5, r8, #96	; 0x60
   1f664:	rev	r1, r0
   1f668:	sub	r0, r4, #208	; 0xd0
   1f66c:	str	r0, [r6]
   1f670:	ldr	r2, [r6, #4]
   1f674:	adds	r0, r2, r0
   1f678:	mov	r2, #21
   1f67c:	str	r1, [r0, #20]
   1f680:	str	r9, [r0, #4]
   1f684:	str	r2, [r0, #8]
   1f688:	str	r0, [r0, #96]	; 0x60
   1f68c:	beq	1f6c0 <gen_hostop6+0xa20>
   1f690:	ldr	r1, [r5]
   1f694:	mov	r2, r0
   1f698:	ldr	r3, [r2, #44]	; 0x2c
   1f69c:	add	r7, r2, #84	; 0x54
   1f6a0:	cmp	r3, #0
   1f6a4:	mov	r3, #84	; 0x54
   1f6a8:	movweq	r3, #60	; 0x3c
   1f6ac:	addeq	r7, r2, #60	; 0x3c
   1f6b0:	ldr	r2, [r2, r3]
   1f6b4:	str	r1, [r7]
   1f6b8:	cmp	r2, #0
   1f6bc:	bne	1f698 <gen_hostop6+0x9f8>
   1f6c0:	ldr	r1, [r0, #44]	; 0x2c
   1f6c4:	cmp	r8, #0
   1f6c8:	clz	r1, r1
   1f6cc:	lsr	r1, r1, #5
   1f6d0:	str	r1, [r0, #44]	; 0x2c
   1f6d4:	ldr	r1, [r8, #44]	; 0x2c
   1f6d8:	clz	r2, r1
   1f6dc:	lsr	r2, r2, #5
   1f6e0:	str	r2, [r8, #44]	; 0x2c
   1f6e4:	str	r8, [fp, #-32]	; 0xffffffe0
   1f6e8:	beq	1f730 <gen_hostop6+0xa90>
   1f6ec:	cmp	r1, #0
   1f6f0:	mov	r3, #60	; 0x3c
   1f6f4:	mov	r2, r8
   1f6f8:	movweq	r3, #84	; 0x54
   1f6fc:	ldr	r1, [r2, r3]!
   1f700:	cmp	r1, #0
   1f704:	beq	1f734 <gen_hostop6+0xa94>
   1f708:	ldr	r3, [r1, #44]	; 0x2c
   1f70c:	add	r2, r1, #84	; 0x54
   1f710:	cmp	r3, #0
   1f714:	mov	r3, #84	; 0x54
   1f718:	movweq	r3, #60	; 0x3c
   1f71c:	addeq	r2, r1, #60	; 0x3c
   1f720:	ldr	r1, [r1, r3]
   1f724:	cmp	r1, #0
   1f728:	bne	1f708 <gen_hostop6+0xa68>
   1f72c:	b	1f734 <gen_hostop6+0xa94>
   1f730:	sub	r2, fp, #32
   1f734:	str	r0, [r2]
   1f738:	str	r5, [sp, #20]
   1f73c:	ldr	r1, [r8, #44]	; 0x2c
   1f740:	clz	r1, r1
   1f744:	lsr	r1, r1, #5
   1f748:	str	r1, [r8, #44]	; 0x2c
   1f74c:	ldr	r0, [r0, #96]	; 0x60
   1f750:	str	r0, [r8, #96]	; 0x60
   1f754:	ldr	r0, [sp, #36]	; 0x24
   1f758:	add	r2, r0, #4
   1f75c:	ldr	r0, [sp, #32]
   1f760:	ldr	lr, [r0, #4]
   1f764:	ldr	r0, [sp, #28]
   1f768:	ldr	r9, [r0, #4]
   1f76c:	ldr	r0, [sp, #24]
   1f770:	cmp	r0, #0
   1f774:	beq	1f910 <gen_hostop6+0xc70>
   1f778:	str	r2, [sp, #12]
   1f77c:	ldr	r7, [pc, #2780]	; 20260 <gen_hostop6+0x15c0>
   1f780:	ldr	r7, [pc, r7]
   1f784:	cmn	r7, #1
   1f788:	bne	1f7ec <gen_hostop6+0xb4c>
   1f78c:	ldr	r7, [pc, #2768]	; 20264 <gen_hostop6+0x15c4>
   1f790:	mvn	r1, #15
   1f794:	ldr	r7, [pc, r7]
   1f798:	ldr	r0, [pc, #2760]	; 20268 <gen_hostop6+0x15c8>
   1f79c:	ldr	r2, [pc, #2760]	; 2026c <gen_hostop6+0x15cc>
   1f7a0:	add	r0, pc, r0
   1f7a4:	add	r2, pc, r2
   1f7a8:	ldr	r3, [r0, r7, lsl #2]
   1f7ac:	cmp	r3, #0
   1f7b0:	beq	1f7d8 <gen_hostop6+0xb38>
   1f7b4:	add	r3, r7, #1
   1f7b8:	adds	r1, r1, #1
   1f7bc:	asr	r7, r3, #31
   1f7c0:	add	r7, r3, r7, lsr #28
   1f7c4:	bic	r7, r7, #15
   1f7c8:	sub	r7, r3, r7
   1f7cc:	str	r7, [r2]
   1f7d0:	bcc	1f7a8 <gen_hostop6+0xb08>
   1f7d4:	b	1fc90 <gen_hostop6+0xff0>
   1f7d8:	mov	r1, #1
   1f7dc:	str	r1, [r0, r7, lsl #2]
   1f7e0:	ldr	r0, [pc, #2696]	; 20270 <gen_hostop6+0x15d0>
   1f7e4:	add	r0, pc, r0
   1f7e8:	str	r7, [r0]
   1f7ec:	mov	r5, ip
   1f7f0:	str	r9, [sp, #8]
   1f7f4:	ldr	r4, [r5, sl, lsl #3]!
   1f7f8:	cmp	r4, #19
   1f7fc:	bhi	1f864 <gen_hostop6+0xbc4>
   1f800:	ldr	r0, [pc, #2668]	; 20274 <gen_hostop6+0x15d4>
   1f804:	add	r9, sl, #1
   1f808:	cmp	sl, #15
   1f80c:	add	r0, pc, r0
   1f810:	str	r9, [r0]
   1f814:	bge	20018 <gen_hostop6+0x1378>
   1f818:	mov	r0, #1024	; 0x400
   1f81c:	mov	r6, lr
   1f820:	lsl	r4, r0, r9
   1f824:	mov	r0, r4
   1f828:	bl	dec <malloc@plt>
   1f82c:	cmp	r0, #0
   1f830:	str	r0, [r5, #12]
   1f834:	beq	20018 <gen_hostop6+0x1378>
   1f838:	mov	r1, #0
   1f83c:	mov	r2, r4
   1f840:	add	r5, r5, #8
   1f844:	bl	e58 <memset@plt>
   1f848:	str	r4, [r5]
   1f84c:	cmp	r4, #19
   1f850:	mov	lr, r6
   1f854:	ldr	ip, [pc, #2588]	; 20278 <gen_hostop6+0x15d8>
   1f858:	add	ip, pc, ip
   1f85c:	bhi	1f868 <gen_hostop6+0xbc8>
   1f860:	b	20018 <gen_hostop6+0x1378>
   1f864:	mov	r9, sl
   1f868:	sub	r0, r4, #20
   1f86c:	mov	r1, #97	; 0x61
   1f870:	str	r0, [r5]
   1f874:	ldr	sl, [r5, #4]
   1f878:	str	r1, [sl, r0]!
   1f87c:	cmp	sl, #0
   1f880:	str	r7, [sl, #12]
   1f884:	beq	1f904 <gen_hostop6+0xc64>
   1f888:	mov	r6, ip
   1f88c:	ldr	r4, [r6, r9, lsl #3]!
   1f890:	cmp	r4, #19
   1f894:	bhi	1fa74 <gen_hostop6+0xdd4>
   1f898:	ldr	r0, [pc, #2524]	; 2027c <gen_hostop6+0x15dc>
   1f89c:	add	r5, r9, #1
   1f8a0:	cmp	r9, #15
   1f8a4:	add	r0, pc, r0
   1f8a8:	str	r5, [r0]
   1f8ac:	bge	20018 <gen_hostop6+0x1378>
   1f8b0:	mov	r0, #1024	; 0x400
   1f8b4:	mov	r7, lr
   1f8b8:	lsl	r4, r0, r5
   1f8bc:	mov	r0, r4
   1f8c0:	bl	dec <malloc@plt>
   1f8c4:	ldr	r9, [sp, #8]
   1f8c8:	cmp	r0, #0
   1f8cc:	str	r0, [r6, #12]
   1f8d0:	beq	20018 <gen_hostop6+0x1378>
   1f8d4:	mov	r1, #0
   1f8d8:	mov	r2, r4
   1f8dc:	add	r6, r6, #8
   1f8e0:	bl	e58 <memset@plt>
   1f8e4:	str	r4, [r6]
   1f8e8:	cmp	r4, #19
   1f8ec:	mov	lr, r7
   1f8f0:	ldr	ip, [pc, #2440]	; 20280 <gen_hostop6+0x15e0>
   1f8f4:	ldr	r3, [sp, #12]
   1f8f8:	add	ip, pc, ip
   1f8fc:	bhi	1fa80 <gen_hostop6+0xde0>
   1f900:	b	20018 <gen_hostop6+0x1378>
   1f904:	mov	sl, r9
   1f908:	ldr	r9, [sp, #8]
   1f90c:	ldr	r2, [sp, #12]
   1f910:	mov	r6, ip
   1f914:	ldr	r4, [r6, sl, lsl #3]!
   1f918:	cmp	r4, #19
   1f91c:	bhi	1f98c <gen_hostop6+0xcec>
   1f920:	str	r2, [sp, #12]
   1f924:	add	r5, sl, #1
   1f928:	cmp	sl, #15
   1f92c:	ldr	r0, [pc, #2384]	; 20284 <gen_hostop6+0x15e4>
   1f930:	add	r0, pc, r0
   1f934:	str	r5, [r0]
   1f938:	bge	20018 <gen_hostop6+0x1378>
   1f93c:	mov	r0, #1024	; 0x400
   1f940:	mov	r7, lr
   1f944:	lsl	r4, r0, r5
   1f948:	mov	r0, r4
   1f94c:	bl	dec <malloc@plt>
   1f950:	cmp	r0, #0
   1f954:	str	r0, [r6, #12]
   1f958:	beq	20018 <gen_hostop6+0x1378>
   1f95c:	mov	r1, #0
   1f960:	mov	r2, r4
   1f964:	add	r6, r6, #8
   1f968:	bl	e58 <memset@plt>
   1f96c:	str	r4, [r6]
   1f970:	cmp	r4, #19
   1f974:	mov	lr, r7
   1f978:	ldr	ip, [pc, #2312]	; 20288 <gen_hostop6+0x15e8>
   1f97c:	ldr	r2, [sp, #12]
   1f980:	add	ip, pc, ip
   1f984:	bhi	1f990 <gen_hostop6+0xcf0>
   1f988:	b	20018 <gen_hostop6+0x1378>
   1f98c:	mov	r5, sl
   1f990:	sub	r0, r4, #20
   1f994:	mov	r1, #32
   1f998:	str	r0, [r6]
   1f99c:	ldr	sl, [r6, #4]
   1f9a0:	str	r1, [sl, r0]!
   1f9a4:	ldr	r0, [pc, #2272]	; 2028c <gen_hostop6+0x15ec>
   1f9a8:	ldr	r0, [pc, r0]
   1f9ac:	add	r0, r0, r2
   1f9b0:	str	r0, [sl, #12]
   1f9b4:	cmn	lr, #1
   1f9b8:	beq	1fab8 <gen_hostop6+0xe18>
   1f9bc:	mov	r7, ip
   1f9c0:	ldr	r4, [r7, r5, lsl #3]!
   1f9c4:	cmp	r4, #19
   1f9c8:	bhi	1fa38 <gen_hostop6+0xd98>
   1f9cc:	str	r9, [sp, #8]
   1f9d0:	add	r6, r5, #1
   1f9d4:	cmp	r5, #15
   1f9d8:	ldr	r0, [pc, #2224]	; 20290 <gen_hostop6+0x15f0>
   1f9dc:	add	r0, pc, r0
   1f9e0:	str	r6, [r0]
   1f9e4:	bge	20018 <gen_hostop6+0x1378>
   1f9e8:	mov	r0, #1024	; 0x400
   1f9ec:	mov	r9, lr
   1f9f0:	lsl	r4, r0, r6
   1f9f4:	mov	r0, r4
   1f9f8:	bl	dec <malloc@plt>
   1f9fc:	cmp	r0, #0
   1fa00:	str	r0, [r7, #12]
   1fa04:	beq	20018 <gen_hostop6+0x1378>
   1fa08:	mov	r1, #0
   1fa0c:	mov	r2, r4
   1fa10:	add	r7, r7, #8
   1fa14:	bl	e58 <memset@plt>
   1fa18:	str	r4, [r7]
   1fa1c:	mov	lr, r9
   1fa20:	cmp	r4, #19
   1fa24:	ldr	ip, [pc, #2152]	; 20294 <gen_hostop6+0x15f4>
   1fa28:	ldr	r9, [sp, #8]
   1fa2c:	add	ip, pc, ip
   1fa30:	bhi	1fa3c <gen_hostop6+0xd9c>
   1fa34:	b	20018 <gen_hostop6+0x1378>
   1fa38:	mov	r6, r5
   1fa3c:	sub	r2, r4, #20
   1fa40:	mov	r3, #84	; 0x54
   1fa44:	rev	r1, lr
   1fa48:	str	r2, [r7]
   1fa4c:	ldr	r0, [r7, #4]
   1fa50:	str	r3, [r0, r2]!
   1fa54:	mov	r2, sl
   1fa58:	str	r1, [r0, #12]
   1fa5c:	mov	r1, r2
   1fa60:	ldr	r2, [r2, #16]
   1fa64:	cmp	r2, #0
   1fa68:	bne	1fa5c <gen_hostop6+0xdbc>
   1fa6c:	str	r0, [r1, #16]
   1fa70:	b	1fabc <gen_hostop6+0xe1c>
   1fa74:	mov	r5, r9
   1fa78:	ldr	r9, [sp, #8]
   1fa7c:	ldr	r3, [sp, #12]
   1fa80:	sub	r1, r4, #20
   1fa84:	mov	r2, #64	; 0x40
   1fa88:	str	r1, [r6]
   1fa8c:	ldr	r0, [r6, #4]
   1fa90:	str	r2, [r0, r1]!
   1fa94:	mov	r2, sl
   1fa98:	str	r3, [r0, #12]
   1fa9c:	mov	r1, r2
   1faa0:	ldr	r2, [r2, #16]
   1faa4:	cmp	r2, #0
   1faa8:	bne	1fa9c <gen_hostop6+0xdfc>
   1faac:	str	r0, [r1, #16]
   1fab0:	cmn	lr, #1
   1fab4:	bne	1f9bc <gen_hostop6+0xd1c>
   1fab8:	mov	r6, r5
   1fabc:	mov	r7, ip
   1fac0:	ldr	r4, [r7, r6, lsl #3]!
   1fac4:	cmp	r4, #207	; 0xcf
   1fac8:	bhi	1fb28 <gen_hostop6+0xe88>
   1facc:	ldr	r0, [pc, #1988]	; 20298 <gen_hostop6+0x15f8>
   1fad0:	add	r5, r6, #1
   1fad4:	cmp	r6, #15
   1fad8:	add	r0, pc, r0
   1fadc:	str	r5, [r0]
   1fae0:	bge	20018 <gen_hostop6+0x1378>
   1fae4:	mov	r0, #1024	; 0x400
   1fae8:	lsl	r4, r0, r5
   1faec:	mov	r0, r4
   1faf0:	bl	dec <malloc@plt>
   1faf4:	cmp	r0, #0
   1faf8:	str	r0, [r7, #12]
   1fafc:	beq	20018 <gen_hostop6+0x1378>
   1fb00:	mov	r1, #0
   1fb04:	mov	r2, r4
   1fb08:	add	r7, r7, #8
   1fb0c:	bl	e58 <memset@plt>
   1fb10:	str	r4, [r7]
   1fb14:	cmp	r4, #207	; 0xcf
   1fb18:	ldr	ip, [pc, #1916]	; 2029c <gen_hostop6+0x15fc>
   1fb1c:	add	ip, pc, ip
   1fb20:	bhi	1fb2c <gen_hostop6+0xe8c>
   1fb24:	b	20018 <gen_hostop6+0x1378>
   1fb28:	mov	r5, r6
   1fb2c:	sub	r0, r4, #208	; 0xd0
   1fb30:	rev	r1, r9
   1fb34:	str	r0, [r7]
   1fb38:	ldr	r2, [r7, #4]
   1fb3c:	adds	r0, r2, r0
   1fb40:	mov	r2, #21
   1fb44:	str	r1, [r0, #20]
   1fb48:	str	sl, [r0, #4]
   1fb4c:	str	r2, [r0, #8]
   1fb50:	str	r0, [r0, #96]	; 0x60
   1fb54:	beq	1fb8c <gen_hostop6+0xeec>
   1fb58:	ldr	r1, [sp, #20]
   1fb5c:	mov	r2, r0
   1fb60:	ldr	r1, [r1]
   1fb64:	ldr	r3, [r2, #44]	; 0x2c
   1fb68:	add	r7, r2, #84	; 0x54
   1fb6c:	cmp	r3, #0
   1fb70:	mov	r3, #84	; 0x54
   1fb74:	movweq	r3, #60	; 0x3c
   1fb78:	addeq	r7, r2, #60	; 0x3c
   1fb7c:	ldr	r2, [r2, r3]
   1fb80:	str	r1, [r7]
   1fb84:	cmp	r2, #0
   1fb88:	bne	1fb64 <gen_hostop6+0xec4>
   1fb8c:	ldr	r1, [r0, #44]	; 0x2c
   1fb90:	ldr	r7, [sp, #28]
   1fb94:	cmp	r8, #0
   1fb98:	clz	r1, r1
   1fb9c:	lsr	r1, r1, #5
   1fba0:	str	r1, [r0, #44]	; 0x2c
   1fba4:	ldr	r1, [r8, #44]	; 0x2c
   1fba8:	clz	r2, r1
   1fbac:	lsr	r2, r2, #5
   1fbb0:	str	r2, [r8, #44]	; 0x2c
   1fbb4:	str	r8, [fp, #-32]	; 0xffffffe0
   1fbb8:	beq	1fc00 <gen_hostop6+0xf60>
   1fbbc:	cmp	r1, #0
   1fbc0:	mov	r3, #60	; 0x3c
   1fbc4:	mov	r2, r8
   1fbc8:	movweq	r3, #84	; 0x54
   1fbcc:	ldr	r1, [r2, r3]!
   1fbd0:	cmp	r1, #0
   1fbd4:	beq	1fc04 <gen_hostop6+0xf64>
   1fbd8:	ldr	r3, [r1, #44]	; 0x2c
   1fbdc:	add	r2, r1, #84	; 0x54
   1fbe0:	cmp	r3, #0
   1fbe4:	mov	r3, #84	; 0x54
   1fbe8:	movweq	r3, #60	; 0x3c
   1fbec:	addeq	r2, r1, #60	; 0x3c
   1fbf0:	ldr	r1, [r1, r3]
   1fbf4:	cmp	r1, #0
   1fbf8:	bne	1fbd8 <gen_hostop6+0xf38>
   1fbfc:	b	1fc04 <gen_hostop6+0xf64>
   1fc00:	sub	r2, fp, #32
   1fc04:	str	r0, [r2]
   1fc08:	ldr	r1, [r8, #44]	; 0x2c
   1fc0c:	clz	r1, r1
   1fc10:	lsr	r1, r1, #5
   1fc14:	str	r1, [r8, #44]	; 0x2c
   1fc18:	ldr	r0, [r0, #96]	; 0x60
   1fc1c:	str	r0, [r8, #96]	; 0x60
   1fc20:	ldr	r0, [sp, #32]
   1fc24:	ldr	sl, [r7]
   1fc28:	ldr	lr, [r0]
   1fc2c:	ldr	r0, [sp, #24]
   1fc30:	cmp	r0, #0
   1fc34:	beq	1fdcc <gen_hostop6+0x112c>
   1fc38:	ldr	r6, [pc, #1632]	; 202a0 <gen_hostop6+0x1600>
   1fc3c:	ldr	r6, [pc, r6]
   1fc40:	cmn	r6, #1
   1fc44:	bne	1fcb0 <gen_hostop6+0x1010>
   1fc48:	ldr	r6, [pc, #1620]	; 202a4 <gen_hostop6+0x1604>
   1fc4c:	mvn	r1, #15
   1fc50:	ldr	r6, [pc, r6]
   1fc54:	ldr	r0, [pc, #1612]	; 202a8 <gen_hostop6+0x1608>
   1fc58:	ldr	r2, [pc, #1612]	; 202ac <gen_hostop6+0x160c>
   1fc5c:	add	r0, pc, r0
   1fc60:	add	r2, pc, r2
   1fc64:	ldr	r3, [r0, r6, lsl #2]
   1fc68:	cmp	r3, #0
   1fc6c:	beq	1fc9c <gen_hostop6+0xffc>
   1fc70:	add	r3, r6, #1
   1fc74:	adds	r1, r1, #1
   1fc78:	asr	r7, r3, #31
   1fc7c:	add	r7, r3, r7, lsr #28
   1fc80:	bic	r7, r7, #15
   1fc84:	sub	r6, r3, r7
   1fc88:	str	r6, [r2]
   1fc8c:	bcc	1fc64 <gen_hostop6+0xfc4>
   1fc90:	ldr	r0, [pc, #1404]	; 20214 <gen_hostop6+0x1574>
   1fc94:	add	r0, pc, r0
   1fc98:	bl	2068 <sf_bpf_error>
   1fc9c:	mov	r1, #1
   1fca0:	str	r1, [r0, r6, lsl #2]
   1fca4:	ldr	r0, [pc, #1540]	; 202b0 <gen_hostop6+0x1610>
   1fca8:	add	r0, pc, r0
   1fcac:	str	r6, [r0]
   1fcb0:	mov	r7, ip
   1fcb4:	str	sl, [sp, #32]
   1fcb8:	ldr	r4, [r7, r5, lsl #3]!
   1fcbc:	cmp	r4, #19
   1fcc0:	bhi	1fd28 <gen_hostop6+0x1088>
   1fcc4:	ldr	r0, [pc, #1512]	; 202b4 <gen_hostop6+0x1614>
   1fcc8:	add	sl, r5, #1
   1fccc:	cmp	r5, #15
   1fcd0:	add	r0, pc, r0
   1fcd4:	str	sl, [r0]
   1fcd8:	bge	20018 <gen_hostop6+0x1378>
   1fcdc:	mov	r0, #1024	; 0x400
   1fce0:	mov	r9, lr
   1fce4:	lsl	r4, r0, sl
   1fce8:	mov	r0, r4
   1fcec:	bl	dec <malloc@plt>
   1fcf0:	cmp	r0, #0
   1fcf4:	str	r0, [r7, #12]
   1fcf8:	beq	20018 <gen_hostop6+0x1378>
   1fcfc:	mov	r1, #0
   1fd00:	mov	r2, r4
   1fd04:	add	r7, r7, #8
   1fd08:	bl	e58 <memset@plt>
   1fd0c:	str	r4, [r7]
   1fd10:	cmp	r4, #19
   1fd14:	mov	lr, r9
   1fd18:	ldr	ip, [pc, #1432]	; 202b8 <gen_hostop6+0x1618>
   1fd1c:	add	ip, pc, ip
   1fd20:	bhi	1fd2c <gen_hostop6+0x108c>
   1fd24:	b	20018 <gen_hostop6+0x1378>
   1fd28:	mov	sl, r5
   1fd2c:	sub	r0, r4, #20
   1fd30:	mov	r1, #97	; 0x61
   1fd34:	str	r0, [r7]
   1fd38:	ldr	r7, [r7, #4]
   1fd3c:	str	r1, [r7, r0]!
   1fd40:	cmp	r7, #0
   1fd44:	str	r6, [r7, #12]
   1fd48:	beq	1fdc4 <gen_hostop6+0x1124>
   1fd4c:	mov	r5, ip
   1fd50:	ldr	r4, [r5, sl, lsl #3]!
   1fd54:	cmp	r4, #19
   1fd58:	bhi	1ff64 <gen_hostop6+0x12c4>
   1fd5c:	ldr	r0, [pc, #1368]	; 202bc <gen_hostop6+0x161c>
   1fd60:	add	r9, sl, #1
   1fd64:	cmp	sl, #15
   1fd68:	add	r0, pc, r0
   1fd6c:	str	r9, [r0]
   1fd70:	bge	20018 <gen_hostop6+0x1378>
   1fd74:	mov	r0, #1024	; 0x400
   1fd78:	mov	r6, lr
   1fd7c:	lsl	r4, r0, r9
   1fd80:	mov	r0, r4
   1fd84:	bl	dec <malloc@plt>
   1fd88:	ldr	sl, [sp, #32]
   1fd8c:	cmp	r0, #0
   1fd90:	str	r0, [r5, #12]
   1fd94:	beq	20018 <gen_hostop6+0x1378>
   1fd98:	mov	r1, #0
   1fd9c:	mov	r2, r4
   1fda0:	add	r5, r5, #8
   1fda4:	bl	e58 <memset@plt>
   1fda8:	str	r4, [r5]
   1fdac:	cmp	r4, #19
   1fdb0:	mov	lr, r6
   1fdb4:	ldr	ip, [pc, #1284]	; 202c0 <gen_hostop6+0x1620>
   1fdb8:	add	ip, pc, ip
   1fdbc:	bhi	1ff6c <gen_hostop6+0x12cc>
   1fdc0:	b	20018 <gen_hostop6+0x1378>
   1fdc4:	mov	r5, sl
   1fdc8:	ldr	sl, [sp, #32]
   1fdcc:	mov	r6, ip
   1fdd0:	ldr	r4, [r6, r5, lsl #3]!
   1fdd4:	cmp	r4, #19
   1fdd8:	bhi	1fe50 <gen_hostop6+0x11b0>
   1fddc:	ldr	r0, [pc, #1248]	; 202c4 <gen_hostop6+0x1624>
   1fde0:	add	r9, r5, #1
   1fde4:	cmp	r5, #15
   1fde8:	add	r0, pc, r0
   1fdec:	str	r9, [r0]
   1fdf0:	bge	20018 <gen_hostop6+0x1378>
   1fdf4:	mov	r0, #1024	; 0x400
   1fdf8:	mov	r7, lr
   1fdfc:	lsl	r4, r0, r9
   1fe00:	mov	r0, r4
   1fe04:	bl	dec <malloc@plt>
   1fe08:	cmp	r0, #0
   1fe0c:	str	r0, [r6, #12]
   1fe10:	beq	20018 <gen_hostop6+0x1378>
   1fe14:	mov	r1, #0
   1fe18:	mov	r2, r4
   1fe1c:	add	r6, r6, #8
   1fe20:	bl	e58 <memset@plt>
   1fe24:	str	r4, [r6]
   1fe28:	cmp	r4, #19
   1fe2c:	mov	lr, r7
   1fe30:	ldr	ip, [pc, #1168]	; 202c8 <gen_hostop6+0x1628>
   1fe34:	add	ip, pc, ip
   1fe38:	bhi	1fe54 <gen_hostop6+0x11b4>
   1fe3c:	b	20018 <gen_hostop6+0x1378>
   1fe40:	.word	0x00028590
   1fe44:	.word	0x00028630
   1fe48:	.word	0x0002858c
   1fe4c:	.word	0x0002860c
   1fe50:	mov	r9, r5
   1fe54:	sub	r0, r4, #20
   1fe58:	mov	r1, #32
   1fe5c:	str	r0, [r6]
   1fe60:	ldr	r7, [r6, #4]
   1fe64:	str	r1, [r7, r0]!
   1fe68:	ldr	r0, [pc, #1116]	; 202cc <gen_hostop6+0x162c>
   1fe6c:	ldr	r0, [pc, r0]
   1fe70:	ldr	r1, [sp, #36]	; 0x24
   1fe74:	add	r0, r0, r1
   1fe78:	str	r0, [r7, #12]
   1fe7c:	cmn	lr, #1
   1fe80:	beq	1ffa8 <gen_hostop6+0x1308>
   1fe84:	mov	r5, ip
   1fe88:	ldr	r4, [r5, r9, lsl #3]!
   1fe8c:	cmp	r4, #19
   1fe90:	bhi	1ff10 <gen_hostop6+0x1270>
   1fe94:	str	sl, [sp, #32]
   1fe98:	add	r6, r9, #1
   1fe9c:	cmp	r9, #15
   1fea0:	ldr	r0, [pc, #1064]	; 202d0 <gen_hostop6+0x1630>
   1fea4:	add	r0, pc, r0
   1fea8:	str	r6, [r0]
   1feac:	bge	20018 <gen_hostop6+0x1378>
   1feb0:	mov	r0, #1024	; 0x400
   1feb4:	mov	sl, lr
   1feb8:	lsl	r4, r0, r6
   1febc:	mov	r0, r4
   1fec0:	bl	dec <malloc@plt>
   1fec4:	ldr	r9, [sp, #16]
   1fec8:	cmp	r0, #0
   1fecc:	str	r0, [r5, #12]
   1fed0:	beq	20018 <gen_hostop6+0x1378>
   1fed4:	mov	r1, #0
   1fed8:	mov	r2, r4
   1fedc:	add	r5, r5, #8
   1fee0:	bl	e58 <memset@plt>
   1fee4:	str	r4, [r5]
   1fee8:	mov	lr, sl
   1feec:	cmp	r4, #19
   1fef0:	ldr	ip, [pc, #988]	; 202d4 <gen_hostop6+0x1634>
   1fef4:	ldr	sl, [sp, #32]
   1fef8:	add	ip, pc, ip
   1fefc:	bhi	1ff18 <gen_hostop6+0x1278>
   1ff00:	b	20018 <gen_hostop6+0x1378>
   1ff04:	.word	0x000285fc
   1ff08:	.word	0x000285f4
   1ff0c:	.word	0x000285ec
   1ff10:	mov	r6, r9
   1ff14:	ldr	r9, [sp, #16]
   1ff18:	sub	r2, r4, #20
   1ff1c:	mov	r3, #84	; 0x54
   1ff20:	rev	r1, lr
   1ff24:	str	r2, [r5]
   1ff28:	ldr	r0, [r5, #4]
   1ff2c:	str	r3, [r0, r2]!
   1ff30:	mov	r2, r7
   1ff34:	str	r1, [r0, #12]
   1ff38:	mov	r1, r2
   1ff3c:	ldr	r2, [r2, #16]
   1ff40:	cmp	r2, #0
   1ff44:	bne	1ff38 <gen_hostop6+0x1298>
   1ff48:	str	r0, [r1, #16]
   1ff4c:	b	1ffb0 <gen_hostop6+0x1310>
   1ff50:	.word	0x000285a4
   1ff54:	.word	0x00028584
   1ff58:	.word	0x00028568
   1ff5c:	.word	0x0002854c
   1ff60:	.word	0x00028480
   1ff64:	mov	r9, sl
   1ff68:	ldr	sl, [sp, #32]
   1ff6c:	sub	r1, r4, #20
   1ff70:	mov	r2, #64	; 0x40
   1ff74:	str	r1, [r5]
   1ff78:	ldr	r0, [r5, #4]
   1ff7c:	str	r2, [r0, r1]!
   1ff80:	mov	r2, r7
   1ff84:	ldr	r1, [sp, #36]	; 0x24
   1ff88:	str	r1, [r0, #12]
   1ff8c:	mov	r1, r2
   1ff90:	ldr	r2, [r2, #16]
   1ff94:	cmp	r2, #0
   1ff98:	bne	1ff8c <gen_hostop6+0x12ec>
   1ff9c:	str	r0, [r1, #16]
   1ffa0:	cmn	lr, #1
   1ffa4:	bne	1fe84 <gen_hostop6+0x11e4>
   1ffa8:	mov	r6, r9
   1ffac:	ldr	r9, [sp, #16]
   1ffb0:	ldr	r4, [ip, r6, lsl #3]!
   1ffb4:	cmp	r4, #207	; 0xcf
   1ffb8:	bhi	20030 <gen_hostop6+0x1390>
   1ffbc:	ldr	r1, [pc, #788]	; 202d8 <gen_hostop6+0x1638>
   1ffc0:	add	r0, r6, #1
   1ffc4:	cmp	r6, #15
   1ffc8:	add	r1, pc, r1
   1ffcc:	str	r0, [r1]
   1ffd0:	bge	20018 <gen_hostop6+0x1378>
   1ffd4:	mov	r1, #1024	; 0x400
   1ffd8:	mov	r5, ip
   1ffdc:	lsl	r4, r1, r0
   1ffe0:	mov	r0, r4
   1ffe4:	bl	dec <malloc@plt>
   1ffe8:	cmp	r0, #0
   1ffec:	str	r0, [r5, #12]
   1fff0:	beq	20018 <gen_hostop6+0x1378>
   1fff4:	mov	r1, #0
   1fff8:	mov	r2, r4
   1fffc:	add	r5, r5, #8
   20000:	bl	e58 <memset@plt>
   20004:	mov	ip, r5
   20008:	str	r4, [r5]
   2000c:	ldr	r5, [sp, #20]
   20010:	cmp	r4, #207	; 0xcf
   20014:	bhi	20034 <gen_hostop6+0x1394>
   20018:	ldr	r0, [pc, #700]	; 202dc <gen_hostop6+0x163c>
   2001c:	add	r0, pc, r0
   20020:	bl	2068 <sf_bpf_error>
   20024:	.word	0x000284b4
   20028:	.word	0x000283e8
   2002c:	.word	0x00028440
   20030:	ldr	r5, [sp, #20]
   20034:	sub	r0, r4, #208	; 0xd0
   20038:	rev	r1, sl
   2003c:	str	r0, [ip]
   20040:	ldr	r2, [ip, #4]
   20044:	adds	r0, r2, r0
   20048:	mov	r2, #21
   2004c:	str	r1, [r0, #20]
   20050:	str	r7, [r0, #4]
   20054:	str	r2, [r0, #8]
   20058:	str	r0, [r0, #96]	; 0x60
   2005c:	beq	20090 <gen_hostop6+0x13f0>
   20060:	ldr	r1, [r5]
   20064:	mov	r2, r0
   20068:	ldr	r3, [r2, #44]	; 0x2c
   2006c:	add	r7, r2, #84	; 0x54
   20070:	cmp	r3, #0
   20074:	mov	r3, #84	; 0x54
   20078:	movweq	r3, #60	; 0x3c
   2007c:	addeq	r7, r2, #60	; 0x3c
   20080:	ldr	r2, [r2, r3]
   20084:	str	r1, [r7]
   20088:	cmp	r2, #0
   2008c:	bne	20068 <gen_hostop6+0x13c8>
   20090:	ldr	r1, [r0, #44]	; 0x2c
   20094:	cmp	r8, #0
   20098:	clz	r1, r1
   2009c:	lsr	r1, r1, #5
   200a0:	str	r1, [r0, #44]	; 0x2c
   200a4:	ldr	r1, [r8, #44]	; 0x2c
   200a8:	clz	r2, r1
   200ac:	lsr	r2, r2, #5
   200b0:	str	r2, [r8, #44]	; 0x2c
   200b4:	str	r8, [fp, #-32]	; 0xffffffe0
   200b8:	beq	20110 <gen_hostop6+0x1470>
   200bc:	cmp	r1, #0
   200c0:	mov	r3, #60	; 0x3c
   200c4:	mov	r2, r8
   200c8:	movweq	r3, #84	; 0x54
   200cc:	ldr	r1, [r2, r3]!
   200d0:	cmp	r1, #0
   200d4:	beq	20114 <gen_hostop6+0x1474>
   200d8:	ldr	r3, [r1, #44]	; 0x2c
   200dc:	add	r2, r1, #84	; 0x54
   200e0:	cmp	r3, #0
   200e4:	mov	r3, #84	; 0x54
   200e8:	movweq	r3, #60	; 0x3c
   200ec:	addeq	r2, r1, #60	; 0x3c
   200f0:	ldr	r1, [r1, r3]
   200f4:	cmp	r1, #0
   200f8:	bne	200d8 <gen_hostop6+0x1438>
   200fc:	b	20114 <gen_hostop6+0x1474>
   20100:	.word	0x00028374
   20104:	.word	0x0002830c
   20108:	.word	0x0002839c
   2010c:	.word	0x000282d8
   20110:	sub	r2, fp, #32
   20114:	str	r0, [r2]
   20118:	ldr	r1, [r8, #44]	; 0x2c
   2011c:	clz	r1, r1
   20120:	lsr	r1, r1, #5
   20124:	str	r1, [r8, #44]	; 0x2c
   20128:	ldr	r0, [r0, #96]	; 0x60
   2012c:	str	r0, [r8, #96]	; 0x60
   20130:	mov	r0, r9
   20134:	bl	71fc <gen_linktype>
   20138:	mov	r4, r0
   2013c:	cmp	r0, #0
   20140:	beq	20174 <gen_hostop6+0x14d4>
   20144:	ldr	r0, [r8, #96]	; 0x60
   20148:	mov	r1, r4
   2014c:	ldr	r2, [r1, #44]	; 0x2c
   20150:	add	r3, r1, #84	; 0x54
   20154:	cmp	r2, #0
   20158:	mov	r2, #84	; 0x54
   2015c:	movweq	r2, #60	; 0x3c
   20160:	addeq	r3, r1, #60	; 0x3c
   20164:	ldr	r1, [r1, r2]
   20168:	str	r0, [r3]
   2016c:	cmp	r1, #0
   20170:	bne	2014c <gen_hostop6+0x14ac>
   20174:	ldr	r0, [r4, #44]	; 0x2c
   20178:	cmp	r8, #0
   2017c:	clz	r0, r0
   20180:	lsr	r0, r0, #5
   20184:	str	r0, [r4, #44]	; 0x2c
   20188:	ldr	r0, [r8, #44]	; 0x2c
   2018c:	clz	r1, r0
   20190:	lsr	r1, r1, #5
   20194:	str	r1, [r8, #44]	; 0x2c
   20198:	str	r8, [fp, #-32]	; 0xffffffe0
   2019c:	beq	201e4 <gen_hostop6+0x1544>
   201a0:	cmp	r0, #0
   201a4:	mov	r2, #60	; 0x3c
   201a8:	mov	r1, r8
   201ac:	movweq	r2, #84	; 0x54
   201b0:	ldr	r0, [r1, r2]!
   201b4:	cmp	r0, #0
   201b8:	beq	201e8 <gen_hostop6+0x1548>
   201bc:	ldr	r2, [r0, #44]	; 0x2c
   201c0:	add	r1, r0, #84	; 0x54
   201c4:	cmp	r2, #0
   201c8:	mov	r2, #84	; 0x54
   201cc:	movweq	r2, #60	; 0x3c
   201d0:	addeq	r1, r0, #60	; 0x3c
   201d4:	ldr	r0, [r0, r2]
   201d8:	cmp	r0, #0
   201dc:	bne	201bc <gen_hostop6+0x151c>
   201e0:	b	201e8 <gen_hostop6+0x1548>
   201e4:	sub	r1, fp, #32
   201e8:	str	r4, [r1]
   201ec:	ldr	r0, [r8, #44]	; 0x2c
   201f0:	clz	r0, r0
   201f4:	lsr	r0, r0, #5
   201f8:	str	r0, [r8, #44]	; 0x2c
   201fc:	ldr	r0, [r4, #96]	; 0x60
   20200:	str	r0, [r5]
   20204:	mov	r0, r8
   20208:	sub	sp, fp, #28
   2020c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20210:	bl	edc <abort@plt>
   20214:	.word	0x0000b439
   20218:	.word	0x000282b4
   2021c:	.word	0x000281f0
   20220:	.word	0x0002820c
   20224:	.word	0x000281fc
   20228:	.word	0x000281f4
   2022c:	.word	0x000281ec
   20230:	.word	0x000281a8
   20234:	.word	0x00028178
   20238:	.word	0x000280b0
   2023c:	.word	0x000280e8
   20240:	.word	0x00028024
   20244:	.word	0x00028078
   20248:	.word	0x00027fb4
   2024c:	.word	0x00027f4c
   20250:	.word	0x00027fa0
   20254:	.word	0x00027edc
   20258:	.word	0x00027ef4
   2025c:	.word	0x00027e30
   20260:	.word	0x00027d88
   20264:	.word	0x00027d78
   20268:	.word	0x00027d70
   2026c:	.word	0x00027d68
   20270:	.word	0x00027d24
   20274:	.word	0x00027cf0
   20278:	.word	0x00027c24
   2027c:	.word	0x00027c58
   20280:	.word	0x00027b84
   20284:	.word	0x00027bcc
   20288:	.word	0x00027afc
   2028c:	.word	0x00027a94
   20290:	.word	0x00027b20
   20294:	.word	0x00027a50
   20298:	.word	0x00027a24
   2029c:	.word	0x00027960
   202a0:	.word	0x000278cc
   202a4:	.word	0x000278bc
   202a8:	.word	0x000278b4
   202ac:	.word	0x000278ac
   202b0:	.word	0x00027860
   202b4:	.word	0x0002782c
   202b8:	.word	0x00027760
   202bc:	.word	0x00027794
   202c0:	.word	0x000276c4
   202c4:	.word	0x00027714
   202c8:	.word	0x00027648
   202cc:	.word	0x000275d0
   202d0:	.word	0x00027658
   202d4:	.word	0x00027584
   202d8:	.word	0x00027534
   202dc:	.word	0x0000a660

000202e0 <gen_load_macplrel>:
   202e0:	push	{r4, r5, r6, sl, fp, lr}
   202e4:	add	fp, sp, #16
   202e8:	mov	r6, r1
   202ec:	mov	r5, r0
   202f0:	bl	1433c <gen_off_macpl>
   202f4:	cmp	r0, #0
   202f8:	beq	2032c <gen_load_macplrel+0x4c>
   202fc:	mov	r4, r0
   20300:	orr	r0, r6, #64	; 0x40
   20304:	bl	13fdc <new_stmt>
   20308:	mov	r2, r4
   2030c:	str	r5, [r0, #12]
   20310:	mov	r1, r2
   20314:	ldr	r2, [r2, #16]
   20318:	cmp	r2, #0
   2031c:	bne	20310 <gen_load_macplrel+0x30>
   20320:	str	r0, [r1, #16]
   20324:	mov	r0, r4
   20328:	pop	{r4, r5, r6, sl, fp, pc}
   2032c:	orr	r0, r6, #32
   20330:	bl	13fdc <new_stmt>
   20334:	mov	r4, r0
   20338:	ldr	r0, [pc, #16]	; 20350 <gen_load_macplrel+0x70>
   2033c:	ldr	r0, [pc, r0]
   20340:	add	r0, r0, r5
   20344:	str	r0, [r4, #12]
   20348:	mov	r0, r4
   2034c:	pop	{r4, r5, r6, sl, fp, pc}
   20350:	.word	0x00027100

00020354 <pcap_nametoaddr>:
   20354:	push	{fp, lr}
   20358:	mov	fp, sp
   2035c:	bl	ec4 <gethostbyname@plt>
   20360:	cmp	r0, #0
   20364:	beq	203a0 <pcap_nametoaddr+0x4c>
   20368:	ldr	r1, [r0, #16]
   2036c:	ldr	r2, [r1]
   20370:	cmp	r2, #0
   20374:	beq	20398 <pcap_nametoaddr+0x44>
   20378:	add	r1, r1, #4
   2037c:	ldr	r3, [r2]
   20380:	rev	r3, r3
   20384:	str	r3, [r2]
   20388:	ldr	r2, [r1], #4
   2038c:	cmp	r2, #0
   20390:	bne	2037c <pcap_nametoaddr+0x28>
   20394:	ldr	r1, [r0, #16]
   20398:	mov	r0, r1
   2039c:	pop	{fp, pc}
   203a0:	mov	r1, #0
   203a4:	mov	r0, r1
   203a8:	pop	{fp, pc}

000203ac <pcap_nametoaddrinfo>:
   203ac:	push	{r4, sl, fp, lr}
   203b0:	add	fp, sp, #8
   203b4:	sub	sp, sp, #40	; 0x28
   203b8:	vmov.i32	q8, #0	; 0x00000000
   203bc:	add	r2, sp, #8
   203c0:	mov	r4, #0
   203c4:	add	r1, r2, #16
   203c8:	mov	r3, r2
   203cc:	vst1.64	{d16-d17}, [r1]
   203d0:	mov	r1, #12
   203d4:	vst1.64	{d16-d17}, [r3], r1
   203d8:	mov	r1, #6
   203dc:	str	r1, [r3]
   203e0:	mov	r1, #1
   203e4:	add	r3, sp, #4
   203e8:	str	r1, [sp, #16]
   203ec:	mov	r1, #0
   203f0:	bl	eb8 <getaddrinfo@plt>
   203f4:	cmp	r0, #0
   203f8:	ldr	r1, [sp, #4]
   203fc:	movne	r1, r4
   20400:	mov	r0, r1
   20404:	sub	sp, fp, #8
   20408:	pop	{r4, sl, fp, pc}

0002040c <pcap_nametonetaddr>:
   2040c:	push	{fp, lr}
   20410:	mov	fp, sp
   20414:	bl	d80 <getnetbyname@plt>
   20418:	cmp	r0, #0
   2041c:	ldrne	r0, [r0, #12]
   20420:	moveq	r0, #0
   20424:	pop	{fp, pc}

00020428 <pcap_nametoport>:
   20428:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2042c:	add	fp, sp, #24
   20430:	mov	r5, r1
   20434:	ldr	r1, [pc, #136]	; 204c4 <pcap_nametoport+0x9c>
   20438:	mov	r8, r2
   2043c:	mov	r6, r0
   20440:	add	r1, pc, r1
   20444:	bl	e4c <getservbyname@plt>
   20448:	cmp	r0, #0
   2044c:	mvn	r4, #0
   20450:	mvn	r7, #0
   20454:	ldrhne	r0, [r0, #8]
   20458:	ldr	r1, [pc, #104]	; 204c8 <pcap_nametoport+0xa0>
   2045c:	rev16ne	r4, r0
   20460:	add	r1, pc, r1
   20464:	mov	r0, r6
   20468:	bl	e4c <getservbyname@plt>
   2046c:	cmp	r0, #0
   20470:	ldrhne	r0, [r0, #8]
   20474:	rev16ne	r7, r0
   20478:	cmp	r4, #0
   2047c:	bmi	204a8 <pcap_nametoport+0x80>
   20480:	cmp	r7, r4
   20484:	mov	r1, #6
   20488:	mov	r0, #6
   2048c:	str	r4, [r5]
   20490:	mvneq	r1, #0
   20494:	cmn	r7, #1
   20498:	movle	r1, r0
   2049c:	mov	r0, #1
   204a0:	str	r1, [r8]
   204a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   204a8:	cmp	r7, #0
   204ac:	movmi	r0, #0
   204b0:	movpl	r0, #17
   204b4:	strpl	r7, [r5]
   204b8:	strpl	r0, [r8]
   204bc:	movpl	r0, #1
   204c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   204c4:	.word	0x0000997c
   204c8:	.word	0x00009991

000204cc <pcap_nametoportrange>:
   204cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   204d0:	add	fp, sp, #28
   204d4:	sub	sp, sp, #12
   204d8:	mov	r7, r1
   204dc:	ldr	r1, [pc, #412]	; 20680 <pcap_nametoportrange+0x1b4>
   204e0:	mov	r8, r3
   204e4:	mov	r9, r2
   204e8:	add	r2, sp, #8
   204ec:	add	r3, sp, #4
   204f0:	mov	r4, r0
   204f4:	add	r1, pc, r1
   204f8:	bl	e88 <sscanf@plt>
   204fc:	cmp	r0, #2
   20500:	bne	2051c <pcap_nametoportrange+0x50>
   20504:	ldr	r0, [sp, #8]
   20508:	str	r0, [r7]
   2050c:	ldr	r0, [sp, #4]
   20510:	str	r0, [r9]
   20514:	mvn	r0, #0
   20518:	b	2065c <pcap_nametoportrange+0x190>
   2051c:	mov	r0, r4
   20520:	bl	da4 <strdup@plt>
   20524:	mov	r5, #0
   20528:	cmp	r0, #0
   2052c:	beq	20664 <pcap_nametoportrange+0x198>
   20530:	mov	r1, #45	; 0x2d
   20534:	mov	r6, r0
   20538:	bl	e28 <strchr@plt>
   2053c:	cmp	r0, #0
   20540:	beq	205b8 <pcap_nametoportrange+0xec>
   20544:	mov	r4, r0
   20548:	mov	r0, #0
   2054c:	strb	r0, [r4]
   20550:	mov	r0, r6
   20554:	ldr	r1, [pc, #296]	; 20684 <pcap_nametoportrange+0x1b8>
   20558:	add	r1, pc, r1
   2055c:	bl	e4c <getservbyname@plt>
   20560:	cmp	r0, #0
   20564:	mvn	r5, #0
   20568:	mvn	sl, #0
   2056c:	ldrhne	r0, [r0, #8]
   20570:	ldr	r1, [pc, #272]	; 20688 <pcap_nametoportrange+0x1bc>
   20574:	rev16ne	r5, r0
   20578:	add	r1, pc, r1
   2057c:	mov	r0, r6
   20580:	bl	e4c <getservbyname@plt>
   20584:	cmp	r0, #0
   20588:	ldrhne	r0, [r0, #8]
   2058c:	rev16ne	sl, r0
   20590:	cmp	r5, #0
   20594:	bmi	205c4 <pcap_nametoportrange+0xf8>
   20598:	cmp	sl, r5
   2059c:	str	r5, [r7]
   205a0:	mov	r7, #6
   205a4:	mov	r0, #6
   205a8:	mvneq	r7, #0
   205ac:	cmn	sl, #1
   205b0:	movle	r7, r0
   205b4:	b	205d4 <pcap_nametoportrange+0x108>
   205b8:	mov	r0, r6
   205bc:	bl	d74 <free@plt>
   205c0:	b	20664 <pcap_nametoportrange+0x198>
   205c4:	cmp	sl, #0
   205c8:	bmi	20670 <pcap_nametoportrange+0x1a4>
   205cc:	str	sl, [r7]
   205d0:	mov	r7, #17
   205d4:	str	r7, [r8]
   205d8:	add	r4, r4, #1
   205dc:	ldr	r1, [pc, #168]	; 2068c <pcap_nametoportrange+0x1c0>
   205e0:	mov	r0, r4
   205e4:	add	r1, pc, r1
   205e8:	bl	e4c <getservbyname@plt>
   205ec:	cmp	r0, #0
   205f0:	mvn	r5, #0
   205f4:	mvn	sl, #0
   205f8:	ldrhne	r0, [r0, #8]
   205fc:	ldr	r1, [pc, #140]	; 20690 <pcap_nametoportrange+0x1c4>
   20600:	rev16ne	r5, r0
   20604:	add	r1, pc, r1
   20608:	mov	r0, r4
   2060c:	bl	e4c <getservbyname@plt>
   20610:	cmp	r0, #0
   20614:	ldrhne	r0, [r0, #8]
   20618:	rev16ne	sl, r0
   2061c:	cmp	r5, #0
   20620:	bmi	20644 <pcap_nametoportrange+0x178>
   20624:	cmp	sl, r5
   20628:	mov	r0, #6
   2062c:	mov	r1, #6
   20630:	str	r5, [r9]
   20634:	mvneq	r0, #0
   20638:	cmn	sl, #1
   2063c:	movle	r0, r1
   20640:	b	20654 <pcap_nametoportrange+0x188>
   20644:	cmp	sl, #0
   20648:	bmi	20670 <pcap_nametoportrange+0x1a4>
   2064c:	mov	r0, #17
   20650:	str	sl, [r9]
   20654:	cmp	r0, r7
   20658:	mvnne	r0, #0
   2065c:	mov	r5, #1
   20660:	str	r0, [r8]
   20664:	mov	r0, r5
   20668:	sub	sp, fp, #28
   2066c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20670:	mov	r0, r6
   20674:	bl	d74 <free@plt>
   20678:	mov	r5, #0
   2067c:	b	20664 <pcap_nametoportrange+0x198>
   20680:	.word	0x0000ac2c
   20684:	.word	0x00009864
   20688:	.word	0x00009879
   2068c:	.word	0x000097d8
   20690:	.word	0x000097ed

00020694 <pcap_nametoproto>:
   20694:	push	{fp, lr}
   20698:	mov	fp, sp
   2069c:	bl	d50 <getprotobyname@plt>
   206a0:	cmp	r0, #0
   206a4:	ldrne	r0, [r0, #8]
   206a8:	mvneq	r0, #0
   206ac:	pop	{fp, pc}

000206b0 <pcap_nametoeproto>:
   206b0:	push	{r4, r5, r6, sl, fp, lr}
   206b4:	add	fp, sp, #16
   206b8:	mov	r5, r0
   206bc:	ldr	r0, [pc, #80]	; 20714 <pcap_nametoeproto+0x64>
   206c0:	mvn	r4, #0
   206c4:	ldr	r0, [pc, r0]
   206c8:	cmp	r0, #0
   206cc:	beq	20700 <pcap_nametoeproto+0x50>
   206d0:	ldr	r1, [pc, #64]	; 20718 <pcap_nametoeproto+0x68>
   206d4:	add	r1, pc, r1
   206d8:	add	r6, r1, #4
   206dc:	mov	r1, r5
   206e0:	bl	d20 <strcmp@plt>
   206e4:	cmp	r0, #0
   206e8:	beq	20708 <pcap_nametoeproto+0x58>
   206ec:	ldr	r0, [r6, #4]
   206f0:	add	r1, r6, #8
   206f4:	mov	r6, r1
   206f8:	cmp	r0, #0
   206fc:	bne	206dc <pcap_nametoeproto+0x2c>
   20700:	mov	r0, r4
   20704:	pop	{r4, r5, r6, sl, fp, pc}
   20708:	ldrh	r4, [r6]
   2070c:	mov	r0, r4
   20710:	pop	{r4, r5, r6, sl, fp, pc}
   20714:	.word	0x00026a18
   20718:	.word	0x00026a08

0002071c <pcap_nametollc>:
   2071c:	push	{r4, r5, fp, lr}
   20720:	add	fp, sp, #8
   20724:	mov	r4, r0
   20728:	ldr	r0, [pc, #156]	; 207cc <pcap_nametollc+0xb0>
   2072c:	mov	r1, r4
   20730:	add	r0, pc, r0
   20734:	bl	d20 <strcmp@plt>
   20738:	cmp	r0, #0
   2073c:	beq	207a4 <pcap_nametollc+0x88>
   20740:	ldr	r0, [pc, #140]	; 207d4 <pcap_nametollc+0xb8>
   20744:	mov	r1, r4
   20748:	add	r0, pc, r0
   2074c:	bl	d20 <strcmp@plt>
   20750:	ldr	r5, [pc, #128]	; 207d8 <pcap_nametollc+0xbc>
   20754:	cmp	r0, #0
   20758:	add	r5, pc, r5
   2075c:	beq	207b4 <pcap_nametollc+0x98>
   20760:	ldr	r0, [pc, #116]	; 207dc <pcap_nametollc+0xc0>
   20764:	mov	r1, r4
   20768:	add	r0, pc, r0
   2076c:	bl	d20 <strcmp@plt>
   20770:	cmp	r0, #0
   20774:	beq	207c0 <pcap_nametollc+0xa4>
   20778:	ldr	r0, [pc, #96]	; 207e0 <pcap_nametollc+0xc4>
   2077c:	mov	r1, r4
   20780:	add	r0, pc, r0
   20784:	bl	d20 <strcmp@plt>
   20788:	mov	r1, r0
   2078c:	mvn	r0, #0
   20790:	cmp	r1, #0
   20794:	popne	{r4, r5, fp, pc}
   20798:	add	r0, r5, #24
   2079c:	ldrh	r0, [r0, #4]
   207a0:	pop	{r4, r5, fp, pc}
   207a4:	ldr	r0, [pc, #36]	; 207d0 <pcap_nametollc+0xb4>
   207a8:	add	r0, pc, r0
   207ac:	ldrh	r0, [r0, #4]
   207b0:	pop	{r4, r5, fp, pc}
   207b4:	add	r0, r5, #8
   207b8:	ldrh	r0, [r0, #4]
   207bc:	pop	{r4, r5, fp, pc}
   207c0:	add	r0, r5, #16
   207c4:	ldrh	r0, [r0, #4]
   207c8:	pop	{r4, r5, fp, pc}
   207cc:	.word	0x0000aad4
   207d0:	.word	0x00026588
   207d4:	.word	0x0000aac0
   207d8:	.word	0x000265d8
   207dc:	.word	0x0000aaa4
   207e0:	.word	0x0000aa90

000207e4 <__pcap_atoin>:
   207e4:	push	{fp, lr}
   207e8:	mov	fp, sp
   207ec:	mov	lr, #0
   207f0:	mov	ip, #0
   207f4:	str	lr, [r1]
   207f8:	add	r0, r0, #1
   207fc:	mov	r2, #0
   20800:	b	20814 <__pcap_atoin+0x30>
   20804:	add	r2, r2, r2, lsl #2
   20808:	add	r0, r0, #1
   2080c:	add	r2, r3, r2, lsl #1
   20810:	sub	r2, r2, #48	; 0x30
   20814:	ldrb	r3, [r0, #-1]
   20818:	cmp	r3, #0
   2081c:	cmpne	r3, #46	; 0x2e
   20820:	bne	20804 <__pcap_atoin+0x20>
   20824:	uxtb	r2, r2
   20828:	add	ip, ip, #8
   2082c:	orr	lr, r2, lr, lsl #8
   20830:	str	lr, [r1]
   20834:	ldrb	r2, [r0, #-1]
   20838:	cmp	r2, #0
   2083c:	bne	207f8 <__pcap_atoin+0x14>
   20840:	mov	r0, ip
   20844:	pop	{fp, pc}

00020848 <__pcap_atodn>:
   20848:	push	{r4, r5, fp, lr}
   2084c:	add	fp, sp, #8
   20850:	sub	sp, sp, #8
   20854:	mov	r4, r1
   20858:	ldr	r1, [pc, #76]	; 208ac <__pcap_atodn+0x64>
   2085c:	mov	r2, sp
   20860:	add	r3, sp, #4
   20864:	mov	r5, r0
   20868:	add	r1, pc, r1
   2086c:	bl	e88 <sscanf@plt>
   20870:	cmp	r0, #2
   20874:	ldreq	r1, [sp]
   20878:	ldreq	r0, [sp, #4]
   2087c:	lsleq	r1, r1, #10
   20880:	bfceq	r0, #10, #22
   20884:	uxtheq	r1, r1
   20888:	orreq	r0, r0, r1
   2088c:	streq	r0, [r4]
   20890:	moveq	r0, #32
   20894:	subeq	sp, fp, #8
   20898:	popeq	{r4, r5, fp, pc}
   2089c:	ldr	r0, [pc, #12]	; 208b0 <__pcap_atodn+0x68>
   208a0:	mov	r1, r5
   208a4:	add	r0, pc, r0
   208a8:	bl	2068 <sf_bpf_error>
   208ac:	.word	0x0000a92f
   208b0:	.word	0x0000a8f9

000208b4 <pcap_ether_aton>:
   208b4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   208b8:	add	fp, sp, #24
   208bc:	mov	r4, r0
   208c0:	mov	r0, #6
   208c4:	bl	dec <malloc@plt>
   208c8:	mov	r8, r0
   208cc:	cmp	r0, #0
   208d0:	beq	20988 <pcap_ether_aton+0xd4>
   208d4:	mov	r9, #1
   208d8:	movw	r7, #8195	; 0x2003
   208dc:	mov	r5, r8
   208e0:	b	208ec <pcap_ether_aton+0x38>
   208e4:	mov	r4, r0
   208e8:	strb	r3, [r5], #1
   208ec:	ldrb	r6, [r4]
   208f0:	sub	r0, r6, #45	; 0x2d
   208f4:	cmp	r0, #13
   208f8:	bhi	2090c <pcap_ether_aton+0x58>
   208fc:	tst	r7, r9, lsl r0
   20900:	beq	2090c <pcap_ether_aton+0x58>
   20904:	ldrb	r6, [r4, #1]!
   20908:	b	20914 <pcap_ether_aton+0x60>
   2090c:	cmp	r6, #0
   20910:	beq	20988 <pcap_ether_aton+0xd4>
   20914:	bl	e04 <__ctype_b_loc@plt>
   20918:	ldr	r2, [r0]
   2091c:	mvn	r1, #47	; 0x2f
   20920:	add	r0, r2, r6, lsl #1
   20924:	ldrh	r3, [r0]
   20928:	add	r0, r4, #1
   2092c:	tst	r3, #2048	; 0x800
   20930:	bne	20940 <pcap_ether_aton+0x8c>
   20934:	tst	r3, #512	; 0x200
   20938:	mvn	r1, #86	; 0x56
   2093c:	mvneq	r1, #54	; 0x36
   20940:	add	r3, r1, r6
   20944:	ldrb	r1, [r0]
   20948:	add	r2, r2, r1, lsl #1
   2094c:	ldrh	r2, [r2]
   20950:	tst	r2, #4096	; 0x1000
   20954:	beq	208e4 <pcap_ether_aton+0x30>
   20958:	lsl	r0, r3, #4
   2095c:	mvn	r3, #47	; 0x2f
   20960:	tst	r2, #2048	; 0x800
   20964:	bne	20974 <pcap_ether_aton+0xc0>
   20968:	tst	r2, #512	; 0x200
   2096c:	mvn	r3, #86	; 0x56
   20970:	mvneq	r3, #54	; 0x36
   20974:	add	r1, r3, r1
   20978:	add	r4, r4, #2
   2097c:	orr	r3, r1, r0
   20980:	strb	r3, [r5], #1
   20984:	b	208ec <pcap_ether_aton+0x38>
   20988:	mov	r0, r8
   2098c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00020990 <pcap_ether_hostton>:
   20990:	push	{r4, r5, r6, sl, fp, lr}
   20994:	add	fp, sp, #16
   20998:	mov	r4, r0
   2099c:	ldr	r0, [pc, #200]	; 20a6c <pcap_ether_hostton+0xdc>
   209a0:	ldr	r0, [pc, r0]
   209a4:	cmp	r0, #0
   209a8:	beq	209c4 <pcap_ether_hostton+0x34>
   209ac:	ldr	r0, [pc, #208]	; 20a84 <pcap_ether_hostton+0xf4>
   209b0:	ldr	r0, [pc, r0]
   209b4:	cmp	r0, #0
   209b8:	beq	20a60 <pcap_ether_hostton+0xd0>
   209bc:	bl	db0 <rewind@plt>
   209c0:	b	20a04 <pcap_ether_hostton+0x74>
   209c4:	ldr	r0, [pc, #164]	; 20a70 <pcap_ether_hostton+0xe0>
   209c8:	ldr	r1, [pc, #164]	; 20a74 <pcap_ether_hostton+0xe4>
   209cc:	add	r0, pc, r0
   209d0:	add	r1, pc, r1
   209d4:	bl	d44 <fopen@plt>
   209d8:	ldr	r1, [pc, #152]	; 20a78 <pcap_ether_hostton+0xe8>
   209dc:	cmp	r0, #0
   209e0:	add	r1, pc, r1
   209e4:	str	r0, [r1]
   209e8:	ldr	r1, [pc, #140]	; 20a7c <pcap_ether_hostton+0xec>
   209ec:	ldr	r1, [pc, r1]
   209f0:	ldr	r2, [pc, #136]	; 20a80 <pcap_ether_hostton+0xf0>
   209f4:	add	r1, r1, #1
   209f8:	add	r2, pc, r2
   209fc:	str	r1, [r2]
   20a00:	beq	20a60 <pcap_ether_hostton+0xd0>
   20a04:	mov	r5, #0
   20a08:	ldr	r0, [pc, #120]	; 20a88 <pcap_ether_hostton+0xf8>
   20a0c:	ldr	r0, [pc, r0]
   20a10:	bl	252e0 <pcap_next_etherent>
   20a14:	cmp	r0, #0
   20a18:	beq	20a58 <pcap_ether_hostton+0xc8>
   20a1c:	mov	r6, r0
   20a20:	add	r0, r0, #6
   20a24:	mov	r1, r4
   20a28:	bl	d20 <strcmp@plt>
   20a2c:	cmp	r0, #0
   20a30:	bne	20a08 <pcap_ether_hostton+0x78>
   20a34:	mov	r0, #6
   20a38:	bl	dec <malloc@plt>
   20a3c:	cmp	r0, #0
   20a40:	beq	20a58 <pcap_ether_hostton+0xc8>
   20a44:	ldrh	r1, [r6, #4]
   20a48:	mov	r5, r0
   20a4c:	strh	r1, [r0, #4]
   20a50:	ldr	r1, [r6]
   20a54:	str	r1, [r0]
   20a58:	mov	r0, r5
   20a5c:	pop	{r4, r5, r6, sl, fp, pc}
   20a60:	mov	r5, #0
   20a64:	mov	r0, r5
   20a68:	pop	{r4, r5, r6, sl, fp, pc}
   20a6c:	.word	0x00026bb4
   20a70:	.word	0x0000a7ef
   20a74:	.word	0x0000bc54
   20a78:	.word	0x00026b70
   20a7c:	.word	0x00026b68
   20a80:	.word	0x00026b5c
   20a84:	.word	0x00026ba0
   20a88:	.word	0x00026b44

00020a8c <__pcap_nametodnaddr>:
   20a8c:	push	{fp, lr}
   20a90:	mov	fp, sp
   20a94:	mov	r1, r0
   20a98:	ldr	r0, [pc, #4]	; 20aa4 <__pcap_nametodnaddr+0x18>
   20a9c:	add	r0, pc, r0
   20aa0:	bl	2068 <sf_bpf_error>
   20aa4:	.word	0x0000a72b

00020aa8 <sf_bpf_optimize>:
   20aa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20aac:	add	fp, sp, #28
   20ab0:	sub	sp, sp, #36	; 0x24
   20ab4:	ldr	sl, [r0]
   20ab8:	ldr	r4, [pc, #2108]	; 212fc <sf_bpf_optimize+0x854>
   20abc:	mov	r9, r0
   20ac0:	ldr	r4, [pc, r4]
   20ac4:	ldr	r6, [pc, #2100]	; 21300 <sf_bpf_optimize+0x858>
   20ac8:	add	r0, r4, #1
   20acc:	add	r6, pc, r6
   20ad0:	str	r0, [r6]
   20ad4:	mov	r0, sl
   20ad8:	bl	251c0 <count_blocks>
   20adc:	mov	r1, #4
   20ae0:	mov	r8, r0
   20ae4:	bl	d14 <calloc@plt>
   20ae8:	ldr	r1, [pc, #2068]	; 21304 <sf_bpf_optimize+0x85c>
   20aec:	cmp	r0, #0
   20af0:	add	r1, pc, r1
   20af4:	str	r0, [r1]
   20af8:	beq	20f24 <sf_bpf_optimize+0x47c>
   20afc:	ldr	r0, [pc, #2052]	; 21308 <sf_bpf_optimize+0x860>
   20b00:	mov	r1, #0
   20b04:	add	r0, pc, r0
   20b08:	str	r1, [r0]
   20b0c:	add	r0, r4, #2
   20b10:	str	r0, [r6]
   20b14:	mov	r0, sl
   20b18:	bl	25218 <number_blks_r>
   20b1c:	ldr	r4, [pc, #2024]	; 2130c <sf_bpf_optimize+0x864>
   20b20:	ldr	r4, [pc, r4]
   20b24:	ldr	r1, [pc, #2020]	; 21310 <sf_bpf_optimize+0x868>
   20b28:	lsl	r0, r4, #1
   20b2c:	add	r1, pc, r1
   20b30:	str	r0, [r1]
   20b34:	mov	r1, #4
   20b38:	bl	d14 <calloc@plt>
   20b3c:	mov	r6, r0
   20b40:	ldr	r0, [pc, #1996]	; 21314 <sf_bpf_optimize+0x86c>
   20b44:	cmp	r6, #0
   20b48:	add	r0, pc, r0
   20b4c:	str	r6, [r0]
   20b50:	beq	20f24 <sf_bpf_optimize+0x47c>
   20b54:	mov	r0, r4
   20b58:	mov	r1, #4
   20b5c:	bl	d14 <calloc@plt>
   20b60:	ldr	r1, [pc, #1968]	; 21318 <sf_bpf_optimize+0x870>
   20b64:	cmp	r0, #0
   20b68:	add	r1, pc, r1
   20b6c:	str	r0, [r1]
   20b70:	beq	20f24 <sf_bpf_optimize+0x47c>
   20b74:	ldr	r1, [pc, #1952]	; 2131c <sf_bpf_optimize+0x874>
   20b78:	mov	r0, #1
   20b7c:	add	r0, r0, r4, lsr #5
   20b80:	add	r1, pc, r1
   20b84:	str	r0, [r1]
   20b88:	ubfx	r7, r4, #4, #27
   20b8c:	ldr	r1, [pc, #1932]	; 21320 <sf_bpf_optimize+0x878>
   20b90:	add	r5, r7, #1
   20b94:	add	r0, r5, r0
   20b98:	mul	r0, r4, r0
   20b9c:	add	r1, pc, r1
   20ba0:	str	r5, [r1]
   20ba4:	lsl	r0, r0, #3
   20ba8:	bl	dec <malloc@plt>
   20bac:	ldr	r1, [pc, #1904]	; 21324 <sf_bpf_optimize+0x87c>
   20bb0:	cmp	r0, #0
   20bb4:	add	r1, pc, r1
   20bb8:	str	r0, [r1]
   20bbc:	beq	20f24 <sf_bpf_optimize+0x47c>
   20bc0:	ldr	r1, [pc, #1888]	; 21328 <sf_bpf_optimize+0x880>
   20bc4:	cmp	r8, #1
   20bc8:	str	r9, [sp, #8]
   20bcc:	str	sl, [sp, #24]
   20bd0:	add	r1, pc, r1
   20bd4:	str	r0, [r1]
   20bd8:	blt	20c1c <sf_bpf_optimize+0x174>
   20bdc:	str	r5, [sp, #12]
   20be0:	str	r7, [sp]
   20be4:	str	r6, [sp, #16]
   20be8:	str	r4, [sp, #20]
   20bec:	sub	r1, r8, #1
   20bf0:	lsr	r2, r4, #5
   20bf4:	and	r4, r8, #3
   20bf8:	ldr	r7, [pc, #1836]	; 2132c <sf_bpf_optimize+0x884>
   20bfc:	cmp	r1, #3
   20c00:	ldr	r7, [pc, r7]
   20c04:	str	r1, [sp, #4]
   20c08:	str	r7, [sp, #32]
   20c0c:	str	r2, [sp, #28]
   20c10:	bcs	20c3c <sf_bpf_optimize+0x194>
   20c14:	mov	r1, #0
   20c18:	b	20cac <sf_bpf_optimize+0x204>
   20c1c:	ldr	r1, [pc, #1896]	; 2138c <sf_bpf_optimize+0x8e4>
   20c20:	mov	r6, #0
   20c24:	add	r1, pc, r1
   20c28:	str	r0, [r1]
   20c2c:	ldr	r1, [pc, #1884]	; 21390 <sf_bpf_optimize+0x8e8>
   20c30:	add	r1, pc, r1
   20c34:	str	r0, [r1]
   20c38:	b	20ed8 <sf_bpf_optimize+0x430>
   20c3c:	mov	r1, #4
   20c40:	sub	ip, r8, r4
   20c44:	add	r7, r7, #8
   20c48:	add	sl, r1, r2, lsl #2
   20c4c:	mov	r1, #8
   20c50:	add	r3, r1, r2, lsl #3
   20c54:	mov	r1, #16
   20c58:	add	r9, r1, r2, lsl #4
   20c5c:	add	r1, r2, r2, lsl #1
   20c60:	mov	r2, #12
   20c64:	add	r2, r2, r1, lsl #2
   20c68:	mov	r1, #0
   20c6c:	ldr	r6, [r7, #-8]
   20c70:	add	r1, r1, #4
   20c74:	cmp	ip, r1
   20c78:	str	r0, [r6, #104]	; 0x68
   20c7c:	add	r6, r0, sl
   20c80:	ldr	lr, [r7, #-4]
   20c84:	str	r6, [lr, #104]	; 0x68
   20c88:	add	r6, r0, r3
   20c8c:	ldr	r5, [r7]
   20c90:	str	r6, [r5, #104]	; 0x68
   20c94:	add	r6, r0, r2
   20c98:	add	r0, r0, r9
   20c9c:	ldr	r5, [r7, #4]
   20ca0:	add	r7, r7, #16
   20ca4:	str	r6, [r5, #104]	; 0x68
   20ca8:	bne	20c6c <sf_bpf_optimize+0x1c4>
   20cac:	ldr	r5, [sp, #32]
   20cb0:	ldr	r6, [sp, #28]
   20cb4:	cmp	r4, #0
   20cb8:	beq	20cdc <sf_bpf_optimize+0x234>
   20cbc:	mov	r2, #4
   20cc0:	add	r1, r5, r1, lsl #2
   20cc4:	add	r2, r2, r6, lsl #2
   20cc8:	ldr	r3, [r1], #4
   20ccc:	subs	r4, r4, #1
   20cd0:	str	r0, [r3, #104]	; 0x68
   20cd4:	add	r0, r0, r2
   20cd8:	bne	20cc8 <sf_bpf_optimize+0x220>
   20cdc:	ldr	r1, [pc, #1612]	; 21330 <sf_bpf_optimize+0x888>
   20ce0:	ldr	sl, [sp, #24]
   20ce4:	and	r4, r8, #3
   20ce8:	add	r1, pc, r1
   20cec:	str	r0, [r1]
   20cf0:	ldr	r1, [sp, #4]
   20cf4:	cmp	r1, #3
   20cf8:	bcs	20d04 <sf_bpf_optimize+0x25c>
   20cfc:	mov	r1, #0
   20d00:	b	20d74 <sf_bpf_optimize+0x2cc>
   20d04:	mov	r1, #4
   20d08:	mov	r3, #12
   20d0c:	sub	r7, r8, r4
   20d10:	add	ip, r1, r6, lsl #2
   20d14:	mov	r1, #8
   20d18:	add	lr, r1, r6, lsl #3
   20d1c:	mov	r1, #16
   20d20:	add	r9, r1, r6, lsl #4
   20d24:	add	r1, r6, r6, lsl #1
   20d28:	add	r6, r3, r1, lsl #2
   20d2c:	add	r3, r5, #8
   20d30:	mov	r1, #0
   20d34:	ldr	r5, [r3, #-8]
   20d38:	add	r1, r1, #4
   20d3c:	cmp	r7, r1
   20d40:	str	r0, [r5, #108]	; 0x6c
   20d44:	add	r5, r0, ip
   20d48:	ldr	r2, [r3, #-4]
   20d4c:	str	r5, [r2, #108]	; 0x6c
   20d50:	add	r2, r0, lr
   20d54:	ldr	r5, [r3]
   20d58:	str	r2, [r5, #108]	; 0x6c
   20d5c:	add	r2, r0, r6
   20d60:	add	r0, r0, r9
   20d64:	ldr	r5, [r3, #4]
   20d68:	add	r3, r3, #16
   20d6c:	str	r2, [r5, #108]	; 0x6c
   20d70:	bne	20d34 <sf_bpf_optimize+0x28c>
   20d74:	ldr	r7, [sp, #32]
   20d78:	cmp	r4, #0
   20d7c:	beq	20da4 <sf_bpf_optimize+0x2fc>
   20d80:	ldr	r3, [sp, #28]
   20d84:	mov	r2, #4
   20d88:	add	r1, r7, r1, lsl #2
   20d8c:	add	r2, r2, r3, lsl #2
   20d90:	ldr	r3, [r1], #4
   20d94:	subs	r4, r4, #1
   20d98:	str	r0, [r3, #108]	; 0x6c
   20d9c:	add	r0, r0, r2
   20da0:	bne	20d90 <sf_bpf_optimize+0x2e8>
   20da4:	ldr	r1, [pc, #1416]	; 21334 <sf_bpf_optimize+0x88c>
   20da8:	ldr	r9, [sp, #20]
   20dac:	cmp	r8, #1
   20db0:	add	r1, pc, r1
   20db4:	str	r0, [r1]
   20db8:	ldr	r1, [sp, #12]
   20dbc:	ldr	r2, [r7]
   20dc0:	ldr	r7, [sp, #16]
   20dc4:	add	r1, r0, r1, lsl #2
   20dc8:	mov	r3, r2
   20dcc:	str	r1, [r2, #80]	; 0x50
   20dd0:	mov	r1, #0
   20dd4:	str	r0, [r2, #56]	; 0x38
   20dd8:	str	r1, [r3, #48]!	; 0x30
   20ddc:	str	r3, [r7]
   20de0:	mov	r3, r2
   20de4:	str	r9, [r3, #72]!	; 0x48
   20de8:	ldr	r7, [pc, #1352]	; 21338 <sf_bpf_optimize+0x890>
   20dec:	ldr	r7, [pc, r7]
   20df0:	str	r3, [r7, r9, lsl #2]
   20df4:	str	r2, [r2, #88]	; 0x58
   20df8:	str	r2, [r2, #64]	; 0x40
   20dfc:	beq	20e80 <sf_bpf_optimize+0x3d8>
   20e00:	ldr	r3, [sp]
   20e04:	mov	r2, #8
   20e08:	mov	r7, #12
   20e0c:	mov	r6, #1
   20e10:	add	ip, r2, r3, lsl #3
   20e14:	add	r3, r3, r3, lsl #1
   20e18:	add	lr, r7, r3, lsl #2
   20e1c:	lsl	r7, r9, #2
   20e20:	ldr	r5, [pc, #1300]	; 2133c <sf_bpf_optimize+0x894>
   20e24:	add	r4, r0, lr
   20e28:	add	r0, r0, ip
   20e2c:	ldr	r5, [pc, r5]
   20e30:	ldr	r3, [r5, r6, lsl #2]
   20e34:	ldr	r2, [pc, #1284]	; 21340 <sf_bpf_optimize+0x898>
   20e38:	ldr	r2, [pc, r2]
   20e3c:	mov	r5, r3
   20e40:	str	r4, [r3, #80]	; 0x50
   20e44:	str	r0, [r3, #56]	; 0x38
   20e48:	mov	r4, r3
   20e4c:	str	r6, [r5, #48]!	; 0x30
   20e50:	str	r5, [r2, r6, lsl #2]
   20e54:	add	r2, r9, r6
   20e58:	str	r2, [r4, #72]!	; 0x48
   20e5c:	ldr	r2, [pc, #1248]	; 21344 <sf_bpf_optimize+0x89c>
   20e60:	ldr	r2, [pc, r2]
   20e64:	add	r2, r2, r7
   20e68:	str	r4, [r2, r6, lsl #2]
   20e6c:	add	r6, r6, #1
   20e70:	str	r3, [r3, #88]	; 0x58
   20e74:	str	r3, [r3, #64]	; 0x40
   20e78:	cmp	r8, r6
   20e7c:	bne	20e20 <sf_bpf_optimize+0x378>
   20e80:	ldr	r0, [pc, #1216]	; 21348 <sf_bpf_optimize+0x8a0>
   20e84:	mov	r2, #0
   20e88:	ldr	r0, [pc, r0]
   20e8c:	b	20ea4 <sf_bpf_optimize+0x3fc>
   20e90:	add	r1, r1, r3
   20e94:	add	r2, r2, #1
   20e98:	add	r1, r1, #1
   20e9c:	cmp	r2, r8
   20ea0:	beq	20ed4 <sf_bpf_optimize+0x42c>
   20ea4:	ldr	r3, [r0, r2, lsl #2]
   20ea8:	ldr	r7, [r3, #4]
   20eac:	mov	r3, #0
   20eb0:	cmp	r7, #0
   20eb4:	beq	20e90 <sf_bpf_optimize+0x3e8>
   20eb8:	ldr	r6, [r7]
   20ebc:	ldr	r7, [r7, #16]
   20ec0:	cmn	r6, #1
   20ec4:	addne	r3, r3, #1
   20ec8:	cmp	r7, #0
   20ecc:	bne	20eb8 <sf_bpf_optimize+0x410>
   20ed0:	b	20e90 <sf_bpf_optimize+0x3e8>
   20ed4:	add	r6, r1, r1, lsl #1
   20ed8:	ldr	r0, [pc, #1132]	; 2134c <sf_bpf_optimize+0x8a4>
   20edc:	mov	r1, #8
   20ee0:	add	r0, pc, r0
   20ee4:	str	r6, [r0]
   20ee8:	mov	r0, r6
   20eec:	bl	d14 <calloc@plt>
   20ef0:	mov	r7, r0
   20ef4:	ldr	r0, [pc, #1108]	; 21350 <sf_bpf_optimize+0x8a8>
   20ef8:	mov	r1, #20
   20efc:	add	r0, pc, r0
   20f00:	str	r7, [r0]
   20f04:	mov	r0, r6
   20f08:	bl	d14 <calloc@plt>
   20f0c:	ldr	r1, [pc, #1088]	; 21354 <sf_bpf_optimize+0x8ac>
   20f10:	cmp	r7, #0
   20f14:	cmpne	r0, #0
   20f18:	add	r1, pc, r1
   20f1c:	str	r0, [r1]
   20f20:	bne	20f30 <sf_bpf_optimize+0x488>
   20f24:	ldr	r0, [pc, #1116]	; 21388 <sf_bpf_optimize+0x8e0>
   20f28:	add	r0, pc, r0
   20f2c:	bl	2068 <sf_bpf_error>
   20f30:	mov	r0, sl
   20f34:	mov	r1, #0
   20f38:	mov	r4, #0
   20f3c:	bl	21394 <opt_loop>
   20f40:	mov	r0, sl
   20f44:	mov	r1, #1
   20f48:	bl	21394 <opt_loop>
   20f4c:	ldr	r8, [pc, #1028]	; 21358 <sf_bpf_optimize+0x8b0>
   20f50:	ldr	r8, [pc, r8]
   20f54:	and	r0, r8, #3
   20f58:	str	r0, [sp, #20]
   20f5c:	sub	r0, r8, r0
   20f60:	str	r0, [sp, #16]
   20f64:	sub	r0, r8, #1
   20f68:	str	r0, [sp, #28]
   20f6c:	sub	r0, r8, #2
   20f70:	str	r0, [sp, #12]
   20f74:	b	20f80 <sf_bpf_optimize+0x4d8>
   20f78:	cmp	r2, #0
   20f7c:	bne	21228 <sf_bpf_optimize+0x780>
   20f80:	ldr	r7, [pc, #980]	; 2135c <sf_bpf_optimize+0x8b4>
   20f84:	cmp	r8, #1
   20f88:	add	r7, pc, r7
   20f8c:	blt	21008 <sf_bpf_optimize+0x560>
   20f90:	ldr	r0, [pc, #968]	; 21360 <sf_bpf_optimize+0x8b8>
   20f94:	mov	r1, #0
   20f98:	ldr	r0, [pc, r0]
   20f9c:	ldr	r2, [sp, #28]
   20fa0:	ldr	r6, [sp, #16]
   20fa4:	cmp	r2, #3
   20fa8:	bcc	20fe4 <sf_bpf_optimize+0x53c>
   20fac:	add	r2, r0, #8
   20fb0:	mov	r1, #0
   20fb4:	ldr	r3, [r2, #-8]
   20fb8:	add	r1, r1, #4
   20fbc:	cmp	r6, r1
   20fc0:	str	r4, [r3, #100]	; 0x64
   20fc4:	ldr	r3, [r2, #-4]
   20fc8:	str	r4, [r3, #100]	; 0x64
   20fcc:	ldr	r3, [r2]
   20fd0:	str	r4, [r3, #100]	; 0x64
   20fd4:	ldr	r3, [r2, #4]
   20fd8:	add	r2, r2, #16
   20fdc:	str	r4, [r3, #100]	; 0x64
   20fe0:	bne	20fb4 <sf_bpf_optimize+0x50c>
   20fe4:	ldr	r2, [sp, #20]
   20fe8:	cmp	r2, #0
   20fec:	beq	21008 <sf_bpf_optimize+0x560>
   20ff0:	add	r0, r0, r1, lsl #2
   20ff4:	ldr	r1, [sp, #20]
   20ff8:	ldr	r2, [r0], #4
   20ffc:	subs	r1, r1, #1
   21000:	str	r4, [r2, #100]	; 0x64
   21004:	bne	20ff8 <sf_bpf_optimize+0x550>
   21008:	ldr	r0, [pc, #852]	; 21364 <sf_bpf_optimize+0x8bc>
   2100c:	ldr	r0, [pc, r0]
   21010:	add	r9, r0, #1
   21014:	mov	r0, sl
   21018:	str	r9, [r7]
   2101c:	bl	25174 <make_marks>
   21020:	ldr	r0, [sp, #28]
   21024:	cmp	r0, #1
   21028:	blt	211c0 <sf_bpf_optimize+0x718>
   2102c:	ldr	r0, [pc, #820]	; 21368 <sf_bpf_optimize+0x8c0>
   21030:	ldr	r0, [pc, r0]
   21034:	ldr	r1, [sp, #12]
   21038:	ldr	lr, [sp, #28]
   2103c:	b	2105c <sf_bpf_optimize+0x5b4>
   21040:	ldr	r1, [r5, #100]	; 0x64
   21044:	cmp	r1, #0
   21048:	moveq	r1, r5
   2104c:	str	r1, [r3, #100]	; 0x64
   21050:	sub	r1, lr, #1
   21054:	cmp	lr, #0
   21058:	ble	211c0 <sf_bpf_optimize+0x718>
   2105c:	mov	r2, lr
   21060:	mov	lr, r1
   21064:	cmp	r2, r8
   21068:	bge	21050 <sf_bpf_optimize+0x5a8>
   2106c:	ldr	r3, [r0, lr, lsl #2]
   21070:	ldr	r1, [r3, #24]
   21074:	cmp	r1, r9
   21078:	bne	21050 <sf_bpf_optimize+0x5a8>
   2107c:	add	r1, r3, #4
   21080:	str	r1, [sp, #32]
   21084:	b	210a0 <sf_bpf_optimize+0x5f8>
   21088:	cmp	r4, #0
   2108c:	mov	r8, ip
   21090:	bne	21040 <sf_bpf_optimize+0x598>
   21094:	add	r2, r2, #1
   21098:	cmp	r2, r8
   2109c:	beq	21050 <sf_bpf_optimize+0x5a8>
   210a0:	ldr	r5, [r0, r2, lsl #2]
   210a4:	ldr	r1, [r5, #24]
   210a8:	cmp	r1, r9
   210ac:	bne	21094 <sf_bpf_optimize+0x5ec>
   210b0:	ldr	r1, [r5, #8]
   210b4:	ldr	r4, [r3, #8]
   210b8:	cmp	r4, r1
   210bc:	bne	21094 <sf_bpf_optimize+0x5ec>
   210c0:	ldr	r1, [r5, #20]
   210c4:	ldr	r4, [r3, #20]
   210c8:	cmp	r4, r1
   210cc:	bne	21094 <sf_bpf_optimize+0x5ec>
   210d0:	ldr	r1, [r5, #60]	; 0x3c
   210d4:	ldr	r4, [r3, #60]	; 0x3c
   210d8:	cmp	r4, r1
   210dc:	bne	21094 <sf_bpf_optimize+0x5ec>
   210e0:	ldr	r1, [r5, #84]	; 0x54
   210e4:	ldr	r4, [r3, #84]	; 0x54
   210e8:	cmp	r4, r1
   210ec:	bne	21094 <sf_bpf_optimize+0x5ec>
   210f0:	ldr	r1, [sp, #32]
   210f4:	mov	ip, r8
   210f8:	add	r4, r5, #4
   210fc:	b	21108 <sf_bpf_optimize+0x660>
   21100:	add	r4, r6, #16
   21104:	add	r1, sl, #16
   21108:	ldr	r1, [r1]
   2110c:	ldr	r6, [r4]
   21110:	mov	r4, #1
   21114:	mov	sl, #0
   21118:	mov	r8, #1
   2111c:	cmp	r1, #0
   21120:	beq	21144 <sf_bpf_optimize+0x69c>
   21124:	ldr	r7, [r1]
   21128:	cmn	r7, #1
   2112c:	bne	21174 <sf_bpf_optimize+0x6cc>
   21130:	ldr	r1, [r1, #16]
   21134:	cmp	r1, #0
   21138:	bne	21124 <sf_bpf_optimize+0x67c>
   2113c:	mov	sl, #0
   21140:	mov	r8, #1
   21144:	cmp	r6, #0
   21148:	beq	21164 <sf_bpf_optimize+0x6bc>
   2114c:	ldr	r1, [r6]
   21150:	cmn	r1, #1
   21154:	bne	21188 <sf_bpf_optimize+0x6e0>
   21158:	ldr	r6, [r6, #16]
   2115c:	cmp	r6, #0
   21160:	bne	2114c <sf_bpf_optimize+0x6a4>
   21164:	mov	r6, #0
   21168:	cmp	r8, #0
   2116c:	beq	21194 <sf_bpf_optimize+0x6ec>
   21170:	b	21088 <sf_bpf_optimize+0x5e0>
   21174:	mov	r8, #0
   21178:	mov	sl, r1
   2117c:	cmp	r6, #0
   21180:	bne	2114c <sf_bpf_optimize+0x6a4>
   21184:	b	21164 <sf_bpf_optimize+0x6bc>
   21188:	mov	r4, #0
   2118c:	cmp	r8, #0
   21190:	bne	21088 <sf_bpf_optimize+0x5e0>
   21194:	cmp	r4, #0
   21198:	mov	r8, ip
   2119c:	bne	21094 <sf_bpf_optimize+0x5ec>
   211a0:	ldr	r1, [r6]
   211a4:	ldr	r4, [sl]
   211a8:	cmp	r4, r1
   211ac:	ldreq	r1, [r6, #12]
   211b0:	ldreq	r4, [sl, #12]
   211b4:	cmpeq	r4, r1
   211b8:	bne	21094 <sf_bpf_optimize+0x5ec>
   211bc:	b	21100 <sf_bpf_optimize+0x658>
   211c0:	ldr	sl, [sp, #24]
   211c4:	cmp	r8, #1
   211c8:	mov	r4, #0
   211cc:	blt	21228 <sf_bpf_optimize+0x780>
   211d0:	ldr	r0, [pc, #404]	; 2136c <sf_bpf_optimize+0x8c4>
   211d4:	mov	r2, #1
   211d8:	mov	r1, r8
   211dc:	ldr	r0, [pc, r0]
   211e0:	b	211f0 <sf_bpf_optimize+0x748>
   211e4:	add	r0, r0, #4
   211e8:	subs	r1, r1, #1
   211ec:	beq	20f78 <sf_bpf_optimize+0x4d0>
   211f0:	ldr	r3, [r0]
   211f4:	ldr	r6, [r3, #60]	; 0x3c
   211f8:	cmp	r6, #0
   211fc:	beq	211e4 <sf_bpf_optimize+0x73c>
   21200:	ldr	r6, [r6, #100]	; 0x64
   21204:	cmp	r6, #0
   21208:	strne	r6, [r3, #60]	; 0x3c
   2120c:	movne	r2, #0
   21210:	ldr	r7, [r3, #84]	; 0x54
   21214:	ldr	r6, [r7, #100]	; 0x64
   21218:	cmp	r6, #0
   2121c:	movne	r2, #0
   21220:	strne	r6, [r3, #84]	; 0x54
   21224:	b	211e4 <sf_bpf_optimize+0x73c>
   21228:	ldr	r4, [sp, #8]
   2122c:	mov	r1, #0
   21230:	ldr	r0, [r4]
   21234:	ldr	r5, [r0, #4]
   21238:	str	r1, [r0, #4]
   2123c:	ldr	r0, [r4]
   21240:	ldr	r1, [r0, #8]
   21244:	and	r1, r1, #7
   21248:	cmp	r1, #5
   2124c:	bne	21278 <sf_bpf_optimize+0x7d0>
   21250:	ldr	r1, [r0, #60]	; 0x3c
   21254:	ldr	r2, [r0, #84]	; 0x54
   21258:	cmp	r1, r2
   2125c:	bne	21278 <sf_bpf_optimize+0x7d0>
   21260:	str	r1, [r4]
   21264:	ldr	r0, [r1, #8]
   21268:	and	r0, r0, #7
   2126c:	cmp	r0, #5
   21270:	mov	r0, r1
   21274:	beq	21250 <sf_bpf_optimize+0x7a8>
   21278:	ldr	r1, [r0, #4]
   2127c:	cmp	r1, #0
   21280:	beq	21290 <sf_bpf_optimize+0x7e8>
   21284:	mov	r0, r5
   21288:	bl	12a70 <sf_append>
   2128c:	ldr	r0, [r4]
   21290:	str	r5, [r0, #4]
   21294:	ldr	r0, [r4]
   21298:	ldr	r1, [r0, #8]
   2129c:	and	r1, r1, #7
   212a0:	cmp	r1, #6
   212a4:	moveq	r1, #0
   212a8:	streq	r1, [r0, #4]
   212ac:	ldr	r0, [pc, #188]	; 21370 <sf_bpf_optimize+0x8c8>
   212b0:	ldr	r0, [pc, r0]
   212b4:	bl	d74 <free@plt>
   212b8:	ldr	r0, [pc, #180]	; 21374 <sf_bpf_optimize+0x8cc>
   212bc:	ldr	r0, [pc, r0]
   212c0:	bl	d74 <free@plt>
   212c4:	ldr	r0, [pc, #172]	; 21378 <sf_bpf_optimize+0x8d0>
   212c8:	ldr	r0, [pc, r0]
   212cc:	bl	d74 <free@plt>
   212d0:	ldr	r0, [pc, #164]	; 2137c <sf_bpf_optimize+0x8d4>
   212d4:	ldr	r0, [pc, r0]
   212d8:	bl	d74 <free@plt>
   212dc:	ldr	r0, [pc, #156]	; 21380 <sf_bpf_optimize+0x8d8>
   212e0:	ldr	r0, [pc, r0]
   212e4:	bl	d74 <free@plt>
   212e8:	ldr	r0, [pc, #148]	; 21384 <sf_bpf_optimize+0x8dc>
   212ec:	ldr	r0, [pc, r0]
   212f0:	sub	sp, fp, #28
   212f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   212f8:	b	d74 <free@plt>
   212fc:	.word	0x00026a98
   21300:	.word	0x00026a8c
   21304:	.word	0x00026ec0
   21308:	.word	0x00026a64
   2130c:	.word	0x00026a48
   21310:	.word	0x00026a50
   21314:	.word	0x00026e6c
   21318:	.word	0x00026e44
   2131c:	.word	0x000269f0
   21320:	.word	0x000269e4
   21324:	.word	0x00026df4
   21328:	.word	0x0002699c
   2132c:	.word	0x00026db0
   21330:	.word	0x0002688c
   21334:	.word	0x000267c8
   21338:	.word	0x00026bc8
   2133c:	.word	0x00026b84
   21340:	.word	0x00026b7c
   21344:	.word	0x00026b54
   21348:	.word	0x00026b28
   2134c:	.word	0x000266a8
   21350:	.word	0x00026ac4
   21354:	.word	0x00026aa4
   21358:	.word	0x00026618
   2135c:	.word	0x000265d0
   21360:	.word	0x00026a18
   21364:	.word	0x0002654c
   21368:	.word	0x00026980
   2136c:	.word	0x000267d4
   21370:	.word	0x0002670c
   21374:	.word	0x00026704
   21378:	.word	0x000266ec
   2137c:	.word	0x000266d4
   21380:	.word	0x000266cc
   21384:	.word	0x000266c4
   21388:	.word	0x0000a2f0
   2138c:	.word	0x00026954
   21390:	.word	0x00026944

00021394 <opt_loop>:
   21394:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21398:	add	fp, sp, #28
   2139c:	sub	sp, sp, #4
   213a0:	vpush	{d8-d9}
   213a4:	sub	sp, sp, #96	; 0x60
   213a8:	str	r1, [sp, #20]
   213ac:	str	r0, [sp, #4]
   213b0:	vmov.i32	q4, #0	; 0x00000000
   213b4:	mov	r8, #0
   213b8:	ldr	r1, [pc, #4064]	; 223a0 <opt_loop+0x100c>
   213bc:	ldr	sl, [pc, #4064]	; 223a4 <opt_loop+0x1010>
   213c0:	add	r1, pc, r1
   213c4:	add	sl, pc, sl
   213c8:	b	213ec <opt_loop+0x58>
   213cc:	ldr	r0, [sp, #20]
   213d0:	cmp	r0, #0
   213d4:	beq	24214 <opt_loop+0x2e80>
   213d8:	ldr	r1, [pc, #4040]	; 223a8 <opt_loop+0x1014>
   213dc:	add	r1, pc, r1
   213e0:	ldrb	r0, [r1]
   213e4:	cmp	r0, #1
   213e8:	beq	24714 <opt_loop+0x3380>
   213ec:	mov	r0, #1
   213f0:	strb	r0, [r1]
   213f4:	mov	r1, #0
   213f8:	ldr	r0, [pc, #4092]	; 223fc <opt_loop+0x1068>
   213fc:	ldr	r0, [pc, r0]
   21400:	ldr	r4, [pc, #4088]	; 22400 <opt_loop+0x106c>
   21404:	ldr	r4, [pc, r4]
   21408:	lsl	r9, r4, #2
   2140c:	mov	r2, r9
   21410:	bl	e58 <memset@plt>
   21414:	ldr	r0, [pc, #4072]	; 22404 <opt_loop+0x1070>
   21418:	ldr	r0, [pc, r0]
   2141c:	ldr	r1, [pc, #4068]	; 22408 <opt_loop+0x1074>
   21420:	add	r0, r0, #1
   21424:	add	r1, pc, r1
   21428:	str	r0, [r1]
   2142c:	ldr	r0, [sp, #4]
   21430:	bl	24d34 <find_levels_r>
   21434:	ldr	r5, [pc, #4048]	; 2240c <opt_loop+0x1078>
   21438:	ldr	r5, [pc, r5]
   2143c:	mul	r0, r5, r4
   21440:	cmp	r0, #1
   21444:	blt	2145c <opt_loop+0xc8>
   21448:	lsl	r2, r0, #2
   2144c:	ldr	r0, [pc, #4092]	; 22450 <opt_loop+0x10bc>
   21450:	mov	r1, #255	; 0xff
   21454:	ldr	r0, [pc, r0]
   21458:	bl	e58 <memset@plt>
   2145c:	ldr	r3, [sp, #4]
   21460:	cmp	r5, #1
   21464:	blt	214e0 <opt_loop+0x14c>
   21468:	ands	r2, r5, #3
   2146c:	sub	r1, r5, #1
   21470:	mov	r0, r5
   21474:	beq	2149c <opt_loop+0x108>
   21478:	mov	r0, r1
   2147c:	ldr	r3, [sp, #4]
   21480:	subs	r2, r2, #1
   21484:	ldr	r3, [r3, #104]	; 0x68
   21488:	str	r8, [r3, r0, lsl #2]
   2148c:	ldr	r3, [sp, #4]
   21490:	sub	r0, r0, #1
   21494:	bne	2147c <opt_loop+0xe8>
   21498:	add	r0, r0, #1
   2149c:	cmp	r1, #3
   214a0:	bcc	214e0 <opt_loop+0x14c>
   214a4:	ldr	r1, [r3, #104]	; 0x68
   214a8:	add	r1, r1, r0, lsl #2
   214ac:	str	r8, [r1, #-4]
   214b0:	ldr	r1, [r3, #104]	; 0x68
   214b4:	add	r1, r1, r0, lsl #2
   214b8:	str	r8, [r1, #-8]
   214bc:	ldr	r1, [r3, #104]	; 0x68
   214c0:	add	r1, r1, r0, lsl #2
   214c4:	str	r8, [r1, #-12]
   214c8:	ldr	r1, [r3, #104]	; 0x68
   214cc:	add	r1, r1, r0, lsl #2
   214d0:	sub	r0, r0, #4
   214d4:	cmp	r0, #0
   214d8:	str	r8, [r1, #-16]
   214dc:	bgt	214a4 <opt_loop+0x110>
   214e0:	ldr	r1, [r3, #36]	; 0x24
   214e4:	cmp	r1, #0
   214e8:	bpl	21504 <opt_loop+0x170>
   214ec:	b	21764 <opt_loop+0x3d0>
   214f0:	ldr	r1, [sp, #8]
   214f4:	sub	r0, r1, #1
   214f8:	cmp	r1, #0
   214fc:	mov	r1, r0
   21500:	ble	21750 <opt_loop+0x3bc>
   21504:	ldr	r0, [pc, #3912]	; 22454 <opt_loop+0x10c0>
   21508:	ldr	r0, [pc, r0]
   2150c:	str	r1, [sp, #8]
   21510:	ldr	r9, [r0, r1, lsl #2]
   21514:	cmp	r9, #0
   21518:	bne	2152c <opt_loop+0x198>
   2151c:	b	214f0 <opt_loop+0x15c>
   21520:	ldr	r9, [r9, #100]	; 0x64
   21524:	cmp	r9, #0
   21528:	beq	214f0 <opt_loop+0x15c>
   2152c:	ldr	r0, [r9]
   21530:	ldr	r2, [r9, #104]	; 0x68
   21534:	mov	r1, #1
   21538:	lsr	r3, r0, #5
   2153c:	and	r0, r0, #31
   21540:	ldr	r7, [r2, r3, lsl #2]
   21544:	orr	r0, r7, r1, lsl r0
   21548:	str	r0, [r2, r3, lsl #2]
   2154c:	ldr	r0, [r9, #60]	; 0x3c
   21550:	cmp	r0, #0
   21554:	beq	21520 <opt_loop+0x18c>
   21558:	ldr	r2, [pc, #3832]	; 22458 <opt_loop+0x10c4>
   2155c:	ldr	r2, [pc, r2]
   21560:	cmp	r2, #1
   21564:	blt	21520 <opt_loop+0x18c>
   21568:	ldr	r3, [r0, #104]	; 0x68
   2156c:	ldr	r5, [r9, #104]	; 0x68
   21570:	cmp	r2, #4
   21574:	bcc	21634 <opt_loop+0x2a0>
   21578:	add	r0, r5, r2, lsl #2
   2157c:	cmp	r3, r0
   21580:	addcc	r0, r3, r2, lsl #2
   21584:	cmpcc	r5, r0
   21588:	bcc	21634 <opt_loop+0x2a0>
   2158c:	bic	r0, r2, #3
   21590:	mov	r7, #1
   21594:	str	r0, [sp, #16]
   21598:	subs	r0, r0, #4
   2159c:	add	r0, r7, r0, lsr #2
   215a0:	and	r1, r0, #1
   215a4:	str	r1, [sp, #12]
   215a8:	beq	215f8 <opt_loop+0x264>
   215ac:	sub	r0, r0, r1
   215b0:	mov	r6, #0
   215b4:	mov	lr, r3
   215b8:	mov	r4, r5
   215bc:	mov	r1, #32
   215c0:	mov	r7, lr
   215c4:	add	ip, r4, #16
   215c8:	vld1.32	{d16-d17}, [r4], r1
   215cc:	subs	r0, r0, #2
   215d0:	add	r6, r6, #8
   215d4:	vld1.32	{d18-d19}, [r7]!
   215d8:	vand	q8, q9, q8
   215dc:	vst1.32	{d16-d17}, [lr], r1
   215e0:	vld1.32	{d16-d17}, [r7]
   215e4:	vld1.32	{d18-d19}, [ip]
   215e8:	vand	q8, q8, q9
   215ec:	vst1.32	{d16-d17}, [r7]
   215f0:	bne	215c0 <opt_loop+0x22c>
   215f4:	b	215fc <opt_loop+0x268>
   215f8:	mov	r6, #0
   215fc:	ldr	r0, [sp, #12]
   21600:	cmp	r0, #0
   21604:	beq	21620 <opt_loop+0x28c>
   21608:	add	r0, r3, r6, lsl #2
   2160c:	add	r7, r5, r6, lsl #2
   21610:	vld1.32	{d16-d17}, [r7]
   21614:	vld1.32	{d18-d19}, [r0]
   21618:	vand	q8, q9, q8
   2161c:	vst1.32	{d16-d17}, [r0]
   21620:	ldr	r0, [sp, #16]
   21624:	subs	r2, r2, r0
   21628:	beq	21650 <opt_loop+0x2bc>
   2162c:	add	r3, r3, r0, lsl #2
   21630:	add	r5, r5, r0, lsl #2
   21634:	ldr	r0, [r5], #4
   21638:	ldr	r7, [r3]
   2163c:	sub	r2, r2, #1
   21640:	cmp	r2, #0
   21644:	and	r0, r7, r0
   21648:	str	r0, [r3], #4
   2164c:	bgt	21634 <opt_loop+0x2a0>
   21650:	ldr	r2, [pc, #3588]	; 2245c <opt_loop+0x10c8>
   21654:	ldr	r2, [pc, r2]
   21658:	cmp	r2, #1
   2165c:	blt	21520 <opt_loop+0x18c>
   21660:	ldr	r0, [r9, #84]	; 0x54
   21664:	ldr	r3, [r9, #104]	; 0x68
   21668:	cmp	r2, #4
   2166c:	ldr	r5, [r0, #104]	; 0x68
   21670:	bcc	21730 <opt_loop+0x39c>
   21674:	add	r0, r3, r2, lsl #2
   21678:	cmp	r5, r0
   2167c:	addcc	r0, r5, r2, lsl #2
   21680:	cmpcc	r3, r0
   21684:	bcc	21730 <opt_loop+0x39c>
   21688:	bic	r0, r2, #3
   2168c:	mov	r1, #1
   21690:	str	r0, [sp, #16]
   21694:	subs	r0, r0, #4
   21698:	add	r0, r1, r0, lsr #2
   2169c:	and	r1, r0, #1
   216a0:	str	r1, [sp, #12]
   216a4:	beq	216f4 <opt_loop+0x360>
   216a8:	sub	r0, r0, r1
   216ac:	mov	r6, #0
   216b0:	mov	lr, r5
   216b4:	mov	r4, r3
   216b8:	mov	ip, #32
   216bc:	mov	r7, lr
   216c0:	add	r1, r4, #16
   216c4:	vld1.32	{d16-d17}, [r4], ip
   216c8:	subs	r0, r0, #2
   216cc:	add	r6, r6, #8
   216d0:	vld1.32	{d18-d19}, [r7]!
   216d4:	vand	q8, q9, q8
   216d8:	vst1.32	{d16-d17}, [lr], ip
   216dc:	vld1.32	{d16-d17}, [r7]
   216e0:	vld1.32	{d18-d19}, [r1]
   216e4:	vand	q8, q8, q9
   216e8:	vst1.32	{d16-d17}, [r7]
   216ec:	bne	216bc <opt_loop+0x328>
   216f0:	b	216f8 <opt_loop+0x364>
   216f4:	mov	r6, #0
   216f8:	ldr	r0, [sp, #12]
   216fc:	cmp	r0, #0
   21700:	beq	2171c <opt_loop+0x388>
   21704:	add	r0, r5, r6, lsl #2
   21708:	add	r1, r3, r6, lsl #2
   2170c:	vld1.32	{d16-d17}, [r1]
   21710:	vld1.32	{d18-d19}, [r0]
   21714:	vand	q8, q9, q8
   21718:	vst1.32	{d16-d17}, [r0]
   2171c:	ldr	r0, [sp, #16]
   21720:	subs	r2, r2, r0
   21724:	beq	21520 <opt_loop+0x18c>
   21728:	add	r5, r5, r0, lsl #2
   2172c:	add	r3, r3, r0, lsl #2
   21730:	ldr	r0, [r3], #4
   21734:	ldr	r1, [r5]
   21738:	sub	r2, r2, #1
   2173c:	cmp	r2, #0
   21740:	and	r0, r1, r0
   21744:	str	r0, [r5], #4
   21748:	bgt	21730 <opt_loop+0x39c>
   2174c:	b	21520 <opt_loop+0x18c>
   21750:	ldr	r0, [pc, #4048]	; 22728 <opt_loop+0x1394>
   21754:	ldr	r0, [pc, r0]
   21758:	ldr	r5, [pc, #4044]	; 2272c <opt_loop+0x1398>
   2175c:	ldr	r5, [pc, r5]
   21760:	lsl	r9, r0, #2
   21764:	ldr	r0, [pc, #4036]	; 22730 <opt_loop+0x139c>
   21768:	mul	r2, r9, r5
   2176c:	mov	r1, #0
   21770:	ldr	r0, [pc, r0]
   21774:	bl	e58 <memset@plt>
   21778:	ldr	r0, [sp, #4]
   2177c:	ldr	r1, [r0, #36]	; 0x24
   21780:	cmp	r1, #0
   21784:	bpl	217a0 <opt_loop+0x40c>
   21788:	b	21ca4 <opt_loop+0x910>
   2178c:	ldr	r1, [sp, #8]
   21790:	sub	r0, r1, #1
   21794:	cmp	r1, #0
   21798:	mov	r1, r0
   2179c:	ble	219ec <opt_loop+0x658>
   217a0:	ldr	r0, [pc, #4076]	; 22794 <opt_loop+0x1400>
   217a4:	ldr	r0, [pc, r0]
   217a8:	str	r1, [sp, #8]
   217ac:	ldr	r9, [r0, r1, lsl #2]
   217b0:	cmp	r9, #0
   217b4:	bne	217c8 <opt_loop+0x434>
   217b8:	b	2178c <opt_loop+0x3f8>
   217bc:	ldr	r9, [r9, #100]	; 0x64
   217c0:	cmp	r9, #0
   217c4:	beq	2178c <opt_loop+0x3f8>
   217c8:	ldr	r0, [r9]
   217cc:	ldr	r2, [r9, #108]	; 0x6c
   217d0:	mov	r1, #1
   217d4:	lsr	r3, r0, #5
   217d8:	and	r0, r0, #31
   217dc:	ldr	r7, [r2, r3, lsl #2]
   217e0:	orr	r0, r7, r1, lsl r0
   217e4:	str	r0, [r2, r3, lsl #2]
   217e8:	ldr	r0, [r9, #60]	; 0x3c
   217ec:	cmp	r0, #0
   217f0:	beq	217bc <opt_loop+0x428>
   217f4:	ldr	r2, [pc, #4052]	; 227d0 <opt_loop+0x143c>
   217f8:	ldr	r2, [pc, r2]
   217fc:	cmp	r2, #1
   21800:	blt	217bc <opt_loop+0x428>
   21804:	ldr	r3, [r0, #108]	; 0x6c
   21808:	ldr	r5, [r9, #108]	; 0x6c
   2180c:	cmp	r2, #4
   21810:	bcc	218d0 <opt_loop+0x53c>
   21814:	add	r0, r5, r2, lsl #2
   21818:	cmp	r3, r0
   2181c:	addcc	r0, r3, r2, lsl #2
   21820:	cmpcc	r5, r0
   21824:	bcc	218d0 <opt_loop+0x53c>
   21828:	bic	r0, r2, #3
   2182c:	mov	r7, #1
   21830:	str	r0, [sp, #16]
   21834:	subs	r0, r0, #4
   21838:	add	r0, r7, r0, lsr #2
   2183c:	and	r1, r0, #1
   21840:	str	r1, [sp, #12]
   21844:	beq	21894 <opt_loop+0x500>
   21848:	sub	r0, r0, r1
   2184c:	mov	r6, #0
   21850:	mov	lr, r3
   21854:	mov	r4, r5
   21858:	mov	r1, #32
   2185c:	mov	r7, lr
   21860:	add	ip, r4, #16
   21864:	vld1.32	{d16-d17}, [r4], r1
   21868:	subs	r0, r0, #2
   2186c:	add	r6, r6, #8
   21870:	vld1.32	{d18-d19}, [r7]!
   21874:	vorr	q8, q9, q8
   21878:	vst1.32	{d16-d17}, [lr], r1
   2187c:	vld1.32	{d16-d17}, [r7]
   21880:	vld1.32	{d18-d19}, [ip]
   21884:	vorr	q8, q8, q9
   21888:	vst1.32	{d16-d17}, [r7]
   2188c:	bne	2185c <opt_loop+0x4c8>
   21890:	b	21898 <opt_loop+0x504>
   21894:	mov	r6, #0
   21898:	ldr	r0, [sp, #12]
   2189c:	cmp	r0, #0
   218a0:	beq	218bc <opt_loop+0x528>
   218a4:	add	r0, r3, r6, lsl #2
   218a8:	add	r7, r5, r6, lsl #2
   218ac:	vld1.32	{d16-d17}, [r7]
   218b0:	vld1.32	{d18-d19}, [r0]
   218b4:	vorr	q8, q9, q8
   218b8:	vst1.32	{d16-d17}, [r0]
   218bc:	ldr	r0, [sp, #16]
   218c0:	subs	r2, r2, r0
   218c4:	beq	218ec <opt_loop+0x558>
   218c8:	add	r3, r3, r0, lsl #2
   218cc:	add	r5, r5, r0, lsl #2
   218d0:	ldr	r0, [r5], #4
   218d4:	ldr	r7, [r3]
   218d8:	sub	r2, r2, #1
   218dc:	cmp	r2, #0
   218e0:	orr	r0, r7, r0
   218e4:	str	r0, [r3], #4
   218e8:	bgt	218d0 <opt_loop+0x53c>
   218ec:	ldr	r2, [pc, #4052]	; 228c8 <opt_loop+0x1534>
   218f0:	ldr	r2, [pc, r2]
   218f4:	cmp	r2, #1
   218f8:	blt	217bc <opt_loop+0x428>
   218fc:	ldr	r0, [r9, #84]	; 0x54
   21900:	ldr	r3, [r9, #108]	; 0x6c
   21904:	cmp	r2, #4
   21908:	ldr	r5, [r0, #108]	; 0x6c
   2190c:	bcc	219cc <opt_loop+0x638>
   21910:	add	r0, r3, r2, lsl #2
   21914:	cmp	r5, r0
   21918:	addcc	r0, r5, r2, lsl #2
   2191c:	cmpcc	r3, r0
   21920:	bcc	219cc <opt_loop+0x638>
   21924:	bic	r0, r2, #3
   21928:	mov	r1, #1
   2192c:	str	r0, [sp, #16]
   21930:	subs	r0, r0, #4
   21934:	add	r0, r1, r0, lsr #2
   21938:	and	r1, r0, #1
   2193c:	str	r1, [sp, #12]
   21940:	beq	21990 <opt_loop+0x5fc>
   21944:	sub	r0, r0, r1
   21948:	mov	r6, #0
   2194c:	mov	lr, r5
   21950:	mov	r4, r3
   21954:	mov	ip, #32
   21958:	mov	r7, lr
   2195c:	add	r1, r4, #16
   21960:	vld1.32	{d16-d17}, [r4], ip
   21964:	subs	r0, r0, #2
   21968:	add	r6, r6, #8
   2196c:	vld1.32	{d18-d19}, [r7]!
   21970:	vorr	q8, q9, q8
   21974:	vst1.32	{d16-d17}, [lr], ip
   21978:	vld1.32	{d16-d17}, [r7]
   2197c:	vld1.32	{d18-d19}, [r1]
   21980:	vorr	q8, q8, q9
   21984:	vst1.32	{d16-d17}, [r7]
   21988:	bne	21958 <opt_loop+0x5c4>
   2198c:	b	21994 <opt_loop+0x600>
   21990:	mov	r6, #0
   21994:	ldr	r0, [sp, #12]
   21998:	cmp	r0, #0
   2199c:	beq	219b8 <opt_loop+0x624>
   219a0:	add	r0, r5, r6, lsl #2
   219a4:	add	r1, r3, r6, lsl #2
   219a8:	vld1.32	{d16-d17}, [r1]
   219ac:	vld1.32	{d18-d19}, [r0]
   219b0:	vorr	q8, q9, q8
   219b4:	vst1.32	{d16-d17}, [r0]
   219b8:	ldr	r0, [sp, #16]
   219bc:	subs	r2, r2, r0
   219c0:	beq	217bc <opt_loop+0x428>
   219c4:	add	r5, r5, r0, lsl #2
   219c8:	add	r3, r3, r0, lsl #2
   219cc:	ldr	r0, [r3], #4
   219d0:	ldr	r1, [r5]
   219d4:	sub	r2, r2, #1
   219d8:	cmp	r2, #0
   219dc:	orr	r0, r1, r0
   219e0:	str	r0, [r5], #4
   219e4:	bgt	219cc <opt_loop+0x638>
   219e8:	b	217bc <opt_loop+0x428>
   219ec:	ldr	r0, [sp, #4]
   219f0:	ldr	r9, [r0, #36]	; 0x24
   219f4:	cmp	r9, #0
   219f8:	bmi	21ca4 <opt_loop+0x910>
   219fc:	ldr	r0, [pc, #4068]	; 229e8 <opt_loop+0x1654>
   21a00:	ldr	r0, [pc, r0]
   21a04:	str	r9, [sp, #12]
   21a08:	str	r0, [sp, #16]
   21a0c:	b	21a20 <opt_loop+0x68c>
   21a10:	sub	r0, r9, #1
   21a14:	cmp	r9, #0
   21a18:	mov	r9, r0
   21a1c:	ble	21c28 <opt_loop+0x894>
   21a20:	ldr	r0, [sp, #16]
   21a24:	ldr	r3, [r0, r9, lsl #2]
   21a28:	cmp	r3, #0
   21a2c:	bne	21a5c <opt_loop+0x6c8>
   21a30:	b	21a10 <opt_loop+0x67c>
   21a34:	mov	r2, #65536	; 0x10000
   21a38:	bic	r2, r2, r0
   21a3c:	orr	r1, r2, r1
   21a40:	str	r0, [r3, #116]	; 0x74
   21a44:	str	r5, [r3, #120]	; 0x78
   21a48:	str	r1, [r3, #124]	; 0x7c
   21a4c:	str	r8, [r3, #128]	; 0x80
   21a50:	ldr	r3, [r3, #100]	; 0x64
   21a54:	cmp	r3, #0
   21a58:	beq	21a10 <opt_loop+0x67c>
   21a5c:	ldr	r2, [r3, #4]
   21a60:	cmp	r2, #0
   21a64:	beq	21be0 <opt_loop+0x84c>
   21a68:	mov	r5, #0
   21a6c:	mov	r1, #0
   21a70:	mov	r0, #0
   21a74:	b	21aa0 <opt_loop+0x70c>
   21a78:	tst	ip, #248	; 0xf8
   21a7c:	mov	r4, #16
   21a80:	movweq	r4, #17
   21a84:	mov	r7, #1
   21a88:	tst	r1, r7, lsl r4
   21a8c:	orr	r0, r0, r7, lsl r4
   21a90:	orreq	r5, r5, r7, lsl r4
   21a94:	ldr	r2, [r2, #16]
   21a98:	cmp	r2, #0
   21a9c:	beq	21bec <opt_loop+0x858>
   21aa0:	ldr	ip, [r2]
   21aa4:	cmn	ip, #1
   21aa8:	beq	21a94 <opt_loop+0x700>
   21aac:	and	lr, ip, #7
   21ab0:	add	r6, pc, #8
   21ab4:	mov	r4, #16
   21ab8:	ldr	r7, [r6, lr, lsl #2]
   21abc:	add	pc, r6, r7
   21ac0:	.word	0x00000020
   21ac4:	.word	0x00000020
   21ac8:	.word	0x000000b8
   21acc:	.word	0x00000084
   21ad0:	.word	0x00000058
   21ad4:	.word	0x00000058
   21ad8:	.word	0x000000a0
   21adc:	.word	0x0000008c
   21ae0:	and	r4, ip, #224	; 0xe0
   21ae4:	cmp	r4, #64	; 0x40
   21ae8:	beq	21b44 <opt_loop+0x7b0>
   21aec:	cmp	r4, #96	; 0x60
   21af0:	bne	21b84 <opt_loop+0x7f0>
   21af4:	ldr	r6, [r2, #12]
   21af8:	cmp	r6, #0
   21afc:	bmi	21b84 <opt_loop+0x7f0>
   21b00:	cmp	r6, #18
   21b04:	beq	21b20 <opt_loop+0x78c>
   21b08:	cmp	r6, #17
   21b0c:	mov	r4, r6
   21b10:	ble	21b78 <opt_loop+0x7e4>
   21b14:	b	24724 <opt_loop+0x3390>
   21b18:	tst	ip, #8
   21b1c:	beq	21b78 <opt_loop+0x7e4>
   21b20:	mov	r6, #131072	; 0x20000
   21b24:	mov	r4, #65536	; 0x10000
   21b28:	bic	r6, r6, r0
   21b2c:	bic	r4, r4, r0
   21b30:	orr	r1, r6, r1
   21b34:	orr	r1, r1, r4
   21b38:	cmp	lr, #7
   21b3c:	bls	21b8c <opt_loop+0x7f8>
   21b40:	b	21a94 <opt_loop+0x700>
   21b44:	mov	r4, #17
   21b48:	b	21b78 <opt_loop+0x7e4>
   21b4c:	and	r4, ip, #248	; 0xf8
   21b50:	cmp	r4, #128	; 0x80
   21b54:	mov	r4, #16
   21b58:	movweq	r4, #17
   21b5c:	b	21b78 <opt_loop+0x7e4>
   21b60:	and	r7, ip, #24
   21b64:	mvn	r6, #0
   21b68:	cmp	r7, #8
   21b6c:	movweq	r6, #17
   21b70:	cmp	r7, #16
   21b74:	bne	21bcc <opt_loop+0x838>
   21b78:	mov	r6, #1
   21b7c:	tst	r0, r6, lsl r4
   21b80:	orreq	r1, r1, r6, lsl r4
   21b84:	cmp	lr, #7
   21b88:	bhi	21a94 <opt_loop+0x700>
   21b8c:	add	r6, pc, #8
   21b90:	mov	r4, #16
   21b94:	ldr	r7, [r6, lr, lsl #2]
   21b98:	add	pc, r6, r7
   21b9c:	.word	0xfffffee8
   21ba0:	.word	0x0000003c
   21ba4:	.word	0x00000020
   21ba8:	.word	0x00000020
   21bac:	.word	0xfffffee8
   21bb0:	.word	0xfffffef8
   21bb4:	.word	0xfffffef8
   21bb8:	.word	0xfffffedc
   21bbc:	ldr	r4, [r2, #12]
   21bc0:	cmp	r4, #0
   21bc4:	bpl	21a84 <opt_loop+0x6f0>
   21bc8:	b	21a94 <opt_loop+0x700>
   21bcc:	cmp	r6, #0
   21bd0:	bpl	21b00 <opt_loop+0x76c>
   21bd4:	b	21b84 <opt_loop+0x7f0>
   21bd8:	mov	r4, #17
   21bdc:	b	21a84 <opt_loop+0x6f0>
   21be0:	mov	r0, #0
   21be4:	mov	r1, #0
   21be8:	mov	r5, #0
   21bec:	ldr	r2, [r3, #8]
   21bf0:	cmn	r2, #1
   21bf4:	beq	21a40 <opt_loop+0x6ac>
   21bf8:	and	r7, r2, #7
   21bfc:	cmp	r7, #5
   21c00:	bne	21a40 <opt_loop+0x6ac>
   21c04:	tst	r2, #8
   21c08:	beq	21a34 <opt_loop+0x6a0>
   21c0c:	mov	r7, #131072	; 0x20000
   21c10:	mov	r2, #65536	; 0x10000
   21c14:	bic	r7, r7, r0
   21c18:	bic	r2, r2, r0
   21c1c:	orr	r1, r7, r1
   21c20:	orr	r1, r1, r2
   21c24:	b	21a40 <opt_loop+0x6ac>
   21c28:	ldr	r5, [sp, #12]
   21c2c:	cmp	r5, #1
   21c30:	blt	21ca4 <opt_loop+0x910>
   21c34:	mov	r0, #1
   21c38:	b	21c4c <opt_loop+0x8b8>
   21c3c:	add	r1, r0, #1
   21c40:	cmp	r0, r5
   21c44:	mov	r0, r1
   21c48:	beq	21ca4 <opt_loop+0x910>
   21c4c:	ldr	r1, [sp, #16]
   21c50:	ldr	r1, [r1, r0, lsl #2]
   21c54:	cmp	r1, #0
   21c58:	beq	21c3c <opt_loop+0x8a8>
   21c5c:	ldr	r2, [r1, #60]	; 0x3c
   21c60:	ldr	r3, [r1, #84]	; 0x54
   21c64:	ldr	r7, [r1, #100]	; 0x64
   21c68:	ldr	r6, [r1, #120]	; 0x78
   21c6c:	ldr	r2, [r2, #124]	; 0x7c
   21c70:	ldr	r3, [r3, #124]	; 0x7c
   21c74:	cmp	r7, #0
   21c78:	orr	r2, r3, r2
   21c7c:	ldr	r3, [r1, #128]	; 0x80
   21c80:	orr	r2, r2, r3
   21c84:	str	r2, [r1, #128]	; 0x80
   21c88:	bic	r2, r2, r6
   21c8c:	ldr	r3, [r1, #124]	; 0x7c
   21c90:	orr	r2, r3, r2
   21c94:	str	r2, [r1, #124]	; 0x7c
   21c98:	mov	r1, r7
   21c9c:	bne	21c5c <opt_loop+0x8c8>
   21ca0:	b	21c3c <opt_loop+0x8a8>
   21ca4:	ldr	r0, [pc, #3992]	; 22c44 <opt_loop+0x18b0>
   21ca8:	ldr	r0, [pc, r0]
   21cac:	ldr	r4, [pc, #3988]	; 22c48 <opt_loop+0x18b4>
   21cb0:	ldr	r4, [pc, r4]
   21cb4:	mul	r0, r4, r0
   21cb8:	cmp	r0, #1
   21cbc:	blt	21cd4 <opt_loop+0x940>
   21cc0:	lsl	r2, r0, #2
   21cc4:	ldr	r0, [pc, #3968]	; 22c4c <opt_loop+0x18b8>
   21cc8:	mov	r1, #255	; 0xff
   21ccc:	ldr	r0, [pc, r0]
   21cd0:	bl	e58 <memset@plt>
   21cd4:	ldr	r6, [sp, #4]
   21cd8:	lsl	r5, r4, #2
   21cdc:	mov	r1, #0
   21ce0:	mov	r2, r5
   21ce4:	ldr	r0, [r6, #56]	; 0x38
   21ce8:	bl	e58 <memset@plt>
   21cec:	ldr	r0, [r6, #80]	; 0x50
   21cf0:	mov	r1, #0
   21cf4:	mov	r2, r5
   21cf8:	bl	e58 <memset@plt>
   21cfc:	ldr	r1, [r6, #36]	; 0x24
   21d00:	cmp	r1, #0
   21d04:	bpl	21d20 <opt_loop+0x98c>
   21d08:	b	2218c <opt_loop+0xdf8>
   21d0c:	ldr	r1, [sp, #8]
   21d10:	sub	r0, r1, #1
   21d14:	cmp	r1, #0
   21d18:	mov	r1, r0
   21d1c:	ble	2218c <opt_loop+0xdf8>
   21d20:	ldr	r0, [pc, #4020]	; 22cdc <opt_loop+0x1948>
   21d24:	ldr	r0, [pc, r0]
   21d28:	str	r1, [sp, #8]
   21d2c:	ldr	r9, [r0, r1, lsl #2]
   21d30:	cmp	r9, #0
   21d34:	bne	21d48 <opt_loop+0x9b4>
   21d38:	b	21d0c <opt_loop+0x978>
   21d3c:	ldr	r9, [r9, #100]	; 0x64
   21d40:	cmp	r9, #0
   21d44:	beq	21d0c <opt_loop+0x978>
   21d48:	ldr	r0, [r9, #48]	; 0x30
   21d4c:	ldr	r2, [r9, #56]	; 0x38
   21d50:	mov	r1, #1
   21d54:	lsr	r3, r0, #5
   21d58:	and	r0, r0, #31
   21d5c:	ldr	r7, [r2, r3, lsl #2]
   21d60:	orr	r0, r7, r1, lsl r0
   21d64:	str	r0, [r2, r3, lsl #2]
   21d68:	ldr	r2, [r9, #60]	; 0x3c
   21d6c:	cmp	r2, #0
   21d70:	beq	21f68 <opt_loop+0xbd4>
   21d74:	ldr	r0, [pc, #4088]	; 22d74 <opt_loop+0x19e0>
   21d78:	ldr	r0, [pc, r0]
   21d7c:	cmp	r0, #1
   21d80:	blt	21f68 <opt_loop+0xbd4>
   21d84:	ldr	r3, [r2, #56]	; 0x38
   21d88:	ldr	r5, [r9, #56]	; 0x38
   21d8c:	cmp	r0, #4
   21d90:	bcs	21d9c <opt_loop+0xa08>
   21d94:	mov	r2, r0
   21d98:	b	21e60 <opt_loop+0xacc>
   21d9c:	add	r2, r5, r0, lsl #2
   21da0:	cmp	r3, r2
   21da4:	addcc	r2, r3, r0, lsl #2
   21da8:	cmpcc	r5, r2
   21dac:	bcc	21e1c <opt_loop+0xa88>
   21db0:	bic	r1, r0, #3
   21db4:	mov	r7, #1
   21db8:	subs	r2, r1, #4
   21dbc:	str	r1, [sp, #16]
   21dc0:	add	r2, r7, r2, lsr #2
   21dc4:	and	r1, r2, #1
   21dc8:	str	r1, [sp, #12]
   21dcc:	beq	21e24 <opt_loop+0xa90>
   21dd0:	sub	r2, r2, r1
   21dd4:	mov	r6, #0
   21dd8:	mov	lr, r3
   21ddc:	mov	r4, r5
   21de0:	mov	r1, #32
   21de4:	mov	r7, lr
   21de8:	add	ip, r4, #16
   21dec:	vld1.32	{d16-d17}, [r4], r1
   21df0:	subs	r2, r2, #2
   21df4:	add	r6, r6, #8
   21df8:	vld1.32	{d18-d19}, [r7]!
   21dfc:	vand	q8, q9, q8
   21e00:	vst1.32	{d16-d17}, [lr], r1
   21e04:	vld1.32	{d16-d17}, [r7]
   21e08:	vld1.32	{d18-d19}, [ip]
   21e0c:	vand	q8, q8, q9
   21e10:	vst1.32	{d16-d17}, [r7]
   21e14:	bne	21de4 <opt_loop+0xa50>
   21e18:	b	21e28 <opt_loop+0xa94>
   21e1c:	mov	r2, r0
   21e20:	b	21e60 <opt_loop+0xacc>
   21e24:	mov	r6, #0
   21e28:	ldr	r1, [sp, #12]
   21e2c:	cmp	r1, #0
   21e30:	beq	21e4c <opt_loop+0xab8>
   21e34:	add	r2, r3, r6, lsl #2
   21e38:	add	r7, r5, r6, lsl #2
   21e3c:	vld1.32	{d16-d17}, [r7]
   21e40:	vld1.32	{d18-d19}, [r2]
   21e44:	vand	q8, q9, q8
   21e48:	vst1.32	{d16-d17}, [r2]
   21e4c:	ldr	r1, [sp, #16]
   21e50:	subs	r2, r0, r1
   21e54:	beq	21e7c <opt_loop+0xae8>
   21e58:	add	r3, r3, r1, lsl #2
   21e5c:	add	r5, r5, r1, lsl #2
   21e60:	ldr	r7, [r5], #4
   21e64:	ldr	r6, [r3]
   21e68:	sub	r2, r2, #1
   21e6c:	cmp	r2, #0
   21e70:	and	r7, r6, r7
   21e74:	str	r7, [r3], #4
   21e78:	bgt	21e60 <opt_loop+0xacc>
   21e7c:	ldr	r2, [r9, #60]	; 0x3c
   21e80:	ldr	r3, [r9, #56]	; 0x38
   21e84:	cmp	r0, #4
   21e88:	ldr	r5, [r2, #80]	; 0x50
   21e8c:	bcc	21f4c <opt_loop+0xbb8>
   21e90:	add	r2, r3, r0, lsl #2
   21e94:	cmp	r5, r2
   21e98:	addcc	r2, r5, r0, lsl #2
   21e9c:	cmpcc	r3, r2
   21ea0:	bcc	21f4c <opt_loop+0xbb8>
   21ea4:	bic	r1, r0, #3
   21ea8:	str	r1, [sp, #16]
   21eac:	subs	r2, r1, #4
   21eb0:	mov	r1, #1
   21eb4:	add	r2, r1, r2, lsr #2
   21eb8:	and	r1, r2, #1
   21ebc:	str	r1, [sp, #12]
   21ec0:	beq	21f10 <opt_loop+0xb7c>
   21ec4:	sub	r2, r2, r1
   21ec8:	mov	r6, #0
   21ecc:	mov	lr, r5
   21ed0:	mov	r4, r3
   21ed4:	mov	ip, #32
   21ed8:	mov	r7, lr
   21edc:	add	r1, r4, #16
   21ee0:	vld1.32	{d16-d17}, [r4], ip
   21ee4:	subs	r2, r2, #2
   21ee8:	add	r6, r6, #8
   21eec:	vld1.32	{d18-d19}, [r7]!
   21ef0:	vand	q8, q9, q8
   21ef4:	vst1.32	{d16-d17}, [lr], ip
   21ef8:	vld1.32	{d16-d17}, [r7]
   21efc:	vld1.32	{d18-d19}, [r1]
   21f00:	vand	q8, q8, q9
   21f04:	vst1.32	{d16-d17}, [r7]
   21f08:	bne	21ed8 <opt_loop+0xb44>
   21f0c:	b	21f14 <opt_loop+0xb80>
   21f10:	mov	r6, #0
   21f14:	ldr	r1, [sp, #12]
   21f18:	cmp	r1, #0
   21f1c:	beq	21f38 <opt_loop+0xba4>
   21f20:	add	r1, r5, r6, lsl #2
   21f24:	add	r2, r3, r6, lsl #2
   21f28:	vld1.32	{d16-d17}, [r2]
   21f2c:	vld1.32	{d18-d19}, [r1]
   21f30:	vand	q8, q9, q8
   21f34:	vst1.32	{d16-d17}, [r1]
   21f38:	ldr	r1, [sp, #16]
   21f3c:	subs	r0, r0, r1
   21f40:	beq	21f68 <opt_loop+0xbd4>
   21f44:	add	r5, r5, r1, lsl #2
   21f48:	add	r3, r3, r1, lsl #2
   21f4c:	ldr	r1, [r3], #4
   21f50:	ldr	r2, [r5]
   21f54:	sub	r0, r0, #1
   21f58:	cmp	r0, #0
   21f5c:	and	r1, r2, r1
   21f60:	str	r1, [r5], #4
   21f64:	bgt	21f4c <opt_loop+0xbb8>
   21f68:	ldr	r0, [r9, #72]	; 0x48
   21f6c:	ldr	r1, [r9, #80]	; 0x50
   21f70:	mov	r7, #1
   21f74:	lsr	r2, r0, #5
   21f78:	and	r0, r0, #31
   21f7c:	ldr	r3, [r1, r2, lsl #2]
   21f80:	orr	r0, r3, r7, lsl r0
   21f84:	str	r0, [r1, r2, lsl #2]
   21f88:	ldr	r0, [r9, #84]	; 0x54
   21f8c:	cmp	r0, #0
   21f90:	beq	21d3c <opt_loop+0x9a8>
   21f94:	ldr	r2, [pc, #4084]	; 22f90 <opt_loop+0x1bfc>
   21f98:	ldr	r2, [pc, r2]
   21f9c:	cmp	r2, #1
   21fa0:	blt	21d3c <opt_loop+0x9a8>
   21fa4:	ldr	r3, [r0, #56]	; 0x38
   21fa8:	ldr	r5, [r9, #80]	; 0x50
   21fac:	cmp	r2, #4
   21fb0:	bcs	21fbc <opt_loop+0xc28>
   21fb4:	mov	r0, r2
   21fb8:	b	22080 <opt_loop+0xcec>
   21fbc:	add	r0, r5, r2, lsl #2
   21fc0:	cmp	r3, r0
   21fc4:	addcc	r0, r3, r2, lsl #2
   21fc8:	cmpcc	r5, r0
   21fcc:	bcc	2203c <opt_loop+0xca8>
   21fd0:	bic	r0, r2, #3
   21fd4:	mov	r1, #1
   21fd8:	str	r0, [sp, #16]
   21fdc:	subs	r0, r0, #4
   21fe0:	add	r0, r1, r0, lsr #2
   21fe4:	and	r1, r0, #1
   21fe8:	str	r1, [sp, #12]
   21fec:	beq	22044 <opt_loop+0xcb0>
   21ff0:	sub	r0, r0, r1
   21ff4:	mov	r6, #0
   21ff8:	mov	lr, r3
   21ffc:	mov	r4, r5
   22000:	mov	ip, #32
   22004:	mov	r7, lr
   22008:	add	r1, r4, #16
   2200c:	vld1.32	{d16-d17}, [r4], ip
   22010:	subs	r0, r0, #2
   22014:	add	r6, r6, #8
   22018:	vld1.32	{d18-d19}, [r7]!
   2201c:	vand	q8, q9, q8
   22020:	vst1.32	{d16-d17}, [lr], ip
   22024:	vld1.32	{d16-d17}, [r7]
   22028:	vld1.32	{d18-d19}, [r1]
   2202c:	vand	q8, q8, q9
   22030:	vst1.32	{d16-d17}, [r7]
   22034:	bne	22004 <opt_loop+0xc70>
   22038:	b	22048 <opt_loop+0xcb4>
   2203c:	mov	r0, r2
   22040:	b	22080 <opt_loop+0xcec>
   22044:	mov	r6, #0
   22048:	ldr	r0, [sp, #12]
   2204c:	cmp	r0, #0
   22050:	beq	2206c <opt_loop+0xcd8>
   22054:	add	r0, r3, r6, lsl #2
   22058:	add	r1, r5, r6, lsl #2
   2205c:	vld1.32	{d16-d17}, [r1]
   22060:	vld1.32	{d18-d19}, [r0]
   22064:	vand	q8, q9, q8
   22068:	vst1.32	{d16-d17}, [r0]
   2206c:	ldr	r1, [sp, #16]
   22070:	subs	r0, r2, r1
   22074:	beq	2209c <opt_loop+0xd08>
   22078:	add	r3, r3, r1, lsl #2
   2207c:	add	r5, r5, r1, lsl #2
   22080:	ldr	r1, [r5], #4
   22084:	ldr	r7, [r3]
   22088:	sub	r0, r0, #1
   2208c:	cmp	r0, #0
   22090:	and	r1, r7, r1
   22094:	str	r1, [r3], #4
   22098:	bgt	22080 <opt_loop+0xcec>
   2209c:	ldr	r0, [r9, #84]	; 0x54
   220a0:	ldr	r3, [r9, #80]	; 0x50
   220a4:	cmp	r2, #4
   220a8:	ldr	r5, [r0, #80]	; 0x50
   220ac:	bcc	2216c <opt_loop+0xdd8>
   220b0:	add	r0, r3, r2, lsl #2
   220b4:	cmp	r5, r0
   220b8:	addcc	r0, r5, r2, lsl #2
   220bc:	cmpcc	r3, r0
   220c0:	bcc	2216c <opt_loop+0xdd8>
   220c4:	bic	r0, r2, #3
   220c8:	mov	r1, #1
   220cc:	str	r0, [sp, #16]
   220d0:	subs	r0, r0, #4
   220d4:	add	r0, r1, r0, lsr #2
   220d8:	and	r1, r0, #1
   220dc:	str	r1, [sp, #12]
   220e0:	beq	22130 <opt_loop+0xd9c>
   220e4:	sub	r0, r0, r1
   220e8:	mov	r6, #0
   220ec:	mov	lr, r5
   220f0:	mov	r4, r3
   220f4:	mov	ip, #32
   220f8:	mov	r7, lr
   220fc:	add	r1, r4, #16
   22100:	vld1.32	{d16-d17}, [r4], ip
   22104:	subs	r0, r0, #2
   22108:	add	r6, r6, #8
   2210c:	vld1.32	{d18-d19}, [r7]!
   22110:	vand	q8, q9, q8
   22114:	vst1.32	{d16-d17}, [lr], ip
   22118:	vld1.32	{d16-d17}, [r7]
   2211c:	vld1.32	{d18-d19}, [r1]
   22120:	vand	q8, q8, q9
   22124:	vst1.32	{d16-d17}, [r7]
   22128:	bne	220f8 <opt_loop+0xd64>
   2212c:	b	22134 <opt_loop+0xda0>
   22130:	mov	r6, #0
   22134:	ldr	r0, [sp, #12]
   22138:	cmp	r0, #0
   2213c:	beq	22158 <opt_loop+0xdc4>
   22140:	add	r0, r5, r6, lsl #2
   22144:	add	r1, r3, r6, lsl #2
   22148:	vld1.32	{d16-d17}, [r1]
   2214c:	vld1.32	{d18-d19}, [r0]
   22150:	vand	q8, q9, q8
   22154:	vst1.32	{d16-d17}, [r0]
   22158:	ldr	r0, [sp, #16]
   2215c:	subs	r2, r2, r0
   22160:	beq	21d3c <opt_loop+0x9a8>
   22164:	add	r5, r5, r0, lsl #2
   22168:	add	r3, r3, r0, lsl #2
   2216c:	ldr	r0, [r3], #4
   22170:	ldr	r1, [r5]
   22174:	sub	r2, r2, #1
   22178:	cmp	r2, #0
   2217c:	and	r0, r1, r0
   22180:	str	r0, [r5], #4
   22184:	bgt	2216c <opt_loop+0xdd8>
   22188:	b	21d3c <opt_loop+0x9a8>
   2218c:	ldr	r0, [pc, #4088]	; 2318c <opt_loop+0x1df8>
   22190:	add	r0, pc, r0
   22194:	str	r8, [r0]
   22198:	ldr	r0, [pc, #4080]	; 23190 <opt_loop+0x1dfc>
   2219c:	ldr	r0, [pc, r0]
   221a0:	ldr	r1, [pc, #4076]	; 23194 <opt_loop+0x1e00>
   221a4:	add	r1, pc, r1
   221a8:	str	r0, [r1]
   221ac:	ldr	r0, [pc, #4068]	; 23198 <opt_loop+0x1e04>
   221b0:	ldr	r0, [pc, r0]
   221b4:	ldr	r1, [pc, #4064]	; 2319c <opt_loop+0x1e08>
   221b8:	ldr	r1, [pc, r1]
   221bc:	lsl	r2, r1, #3
   221c0:	mov	r1, #0
   221c4:	bl	e58 <memset@plt>
   221c8:	mov	r0, sl
   221cc:	mov	r1, #0
   221d0:	mov	r2, #852	; 0x354
   221d4:	bl	e58 <memset@plt>
   221d8:	ldr	r0, [sp, #4]
   221dc:	ldr	r5, [r0, #36]	; 0x24
   221e0:	ldr	r3, [pc, #4024]	; 231a0 <opt_loop+0x1e0c>
   221e4:	ldr	r3, [pc, r3]
   221e8:	ldr	ip, [pc, #4020]	; 231a4 <opt_loop+0x1e10>
   221ec:	mov	r0, r5
   221f0:	cmp	r3, #1
   221f4:	add	ip, pc, ip
   221f8:	blt	22278 <opt_loop+0xee4>
   221fc:	ldr	r1, [pc, #4004]	; 231a8 <opt_loop+0x1e14>
   22200:	sub	r7, r3, #1
   22204:	and	r0, r3, #3
   22208:	mov	r2, #0
   2220c:	cmp	r7, #3
   22210:	ldr	r1, [pc, r1]
   22214:	bcc	22254 <opt_loop+0xec0>
   22218:	sub	r3, r3, r0
   2221c:	add	r7, r1, #8
   22220:	mov	r2, #0
   22224:	ldr	r6, [r7, #-8]
   22228:	add	r2, r2, #4
   2222c:	cmp	r3, r2
   22230:	str	r8, [r6, #112]	; 0x70
   22234:	ldr	r6, [r7, #-4]
   22238:	str	r8, [r6, #112]	; 0x70
   2223c:	ldr	r6, [r7]
   22240:	str	r8, [r6, #112]	; 0x70
   22244:	ldr	r6, [r7, #4]
   22248:	add	r7, r7, #16
   2224c:	str	r8, [r6, #112]	; 0x70
   22250:	bne	22224 <opt_loop+0xe90>
   22254:	cmp	r0, #0
   22258:	beq	22270 <opt_loop+0xedc>
   2225c:	add	r1, r1, r2, lsl #2
   22260:	ldr	r2, [r1], #4
   22264:	subs	r0, r0, #1
   22268:	str	r8, [r2, #112]	; 0x70
   2226c:	bne	22260 <opt_loop+0xecc>
   22270:	ldr	r0, [sp, #4]
   22274:	ldr	r0, [r0, #36]	; 0x24
   22278:	cmp	r0, #1
   2227c:	blt	222d4 <opt_loop+0xf40>
   22280:	ldr	r1, [pc, #4068]	; 2326c <opt_loop+0x1ed8>
   22284:	ldr	r1, [pc, r1]
   22288:	ldr	r2, [r1, r0, lsl #2]
   2228c:	cmp	r2, #0
   22290:	beq	222c8 <opt_loop+0xf34>
   22294:	ldr	r3, [r2, #60]	; 0x3c
   22298:	ldr	r7, [r3, #112]	; 0x70
   2229c:	str	r7, [r2, #68]	; 0x44
   222a0:	add	r7, r2, #48	; 0x30
   222a4:	str	r7, [r3, #112]	; 0x70
   222a8:	ldr	r3, [r2, #84]	; 0x54
   222ac:	ldr	r7, [r3, #112]	; 0x70
   222b0:	str	r7, [r2, #92]	; 0x5c
   222b4:	add	r7, r2, #72	; 0x48
   222b8:	str	r7, [r3, #112]	; 0x70
   222bc:	ldr	r2, [r2, #100]	; 0x64
   222c0:	cmp	r2, #0
   222c4:	bne	22294 <opt_loop+0xf00>
   222c8:	sub	r0, r0, #1
   222cc:	cmp	r0, #0
   222d0:	bgt	22288 <opt_loop+0xef4>
   222d4:	cmp	r5, #0
   222d8:	str	r5, [sp]
   222dc:	bmi	213cc <opt_loop+0x38>
   222e0:	ldr	r1, [sp]
   222e4:	b	222fc <opt_loop+0xf68>
   222e8:	ldr	r1, [sp, #8]
   222ec:	sub	r0, r1, #1
   222f0:	cmp	r1, #0
   222f4:	mov	r1, r0
   222f8:	ble	213cc <opt_loop+0x38>
   222fc:	ldr	r0, [pc, #4064]	; 232e4 <opt_loop+0x1f50>
   22300:	ldr	r0, [pc, r0]
   22304:	str	r1, [sp, #8]
   22308:	ldr	r9, [r0, r1, lsl #2]
   2230c:	cmp	r9, #0
   22310:	bne	22338 <opt_loop+0xfa4>
   22314:	b	222e8 <opt_loop+0xf54>
   22318:	ldr	r3, [r9, #204]	; 0xcc
   2231c:	str	r0, [r9, #52]	; 0x34
   22320:	rsb	r0, r0, #0
   22324:	str	r3, [r9, #132]	; 0x84
   22328:	str	r0, [r9, #76]	; 0x4c
   2232c:	ldr	r9, [r9, #100]	; 0x64
   22330:	cmp	r9, #0
   22334:	beq	222e8 <opt_loop+0xf54>
   22338:	ldr	r4, [r9, #112]	; 0x70
   2233c:	add	r0, r9, #136	; 0x88
   22340:	cmp	r4, #0
   22344:	beq	223ac <opt_loop+0x1018>
   22348:	ldr	r1, [r4, #16]
   2234c:	mov	r2, #72	; 0x48
   22350:	add	r1, r1, #136	; 0x88
   22354:	bl	d98 <memcpy@plt>
   22358:	ldr	ip, [pc, #4052]	; 23334 <opt_loop+0x1fa0>
   2235c:	ldr	r0, [r4, #20]
   22360:	add	ip, pc, ip
   22364:	cmp	r0, #0
   22368:	beq	223d8 <opt_loop+0x1044>
   2236c:	mov	r1, #34	; 0x22
   22370:	ldr	r3, [r0, #16]
   22374:	ldr	r2, [r9, r1, lsl #2]
   22378:	ldr	r3, [r3, r1, lsl #2]
   2237c:	cmp	r2, r3
   22380:	strne	r8, [r9, r1, lsl #2]
   22384:	add	r1, r1, #1
   22388:	cmp	r1, #52	; 0x34
   2238c:	bne	22370 <opt_loop+0xfdc>
   22390:	ldr	r0, [r0, #20]
   22394:	cmp	r0, #0
   22398:	bne	2236c <opt_loop+0xfd8>
   2239c:	b	223d8 <opt_loop+0x1044>
   223a0:	.word	0x000261a4
   223a4:	.word	0x000261cc
   223a8:	.word	0x00026188
   223ac:	mov	r1, r0
   223b0:	mov	r2, #68	; 0x44
   223b4:	str	r8, [r0, #64]	; 0x40
   223b8:	vst1.32	{d8-d9}, [r1], r2
   223bc:	str	r8, [r1]
   223c0:	add	r1, r0, #48	; 0x30
   223c4:	vst1.32	{d8-d9}, [r1]
   223c8:	add	r1, r0, #32
   223cc:	add	r0, r0, #16
   223d0:	vst1.32	{d8-d9}, [r1]
   223d4:	vst1.32	{d8-d9}, [r0]
   223d8:	mov	lr, r9
   223dc:	ldr	r0, [lr, #200]!	; 0xc8
   223e0:	ldr	r3, [lr, #-196]	; 0xffffff3c
   223e4:	str	r0, [sp, #16]
   223e8:	ldr	r0, [lr, #4]
   223ec:	str	r0, [sp, #12]
   223f0:	cmp	r3, #0
   223f4:	bne	22438 <opt_loop+0x10a4>
   223f8:	b	23b68 <opt_loop+0x27d4>
   223fc:	.word	0x000265b0
   22400:	.word	0x00026164
   22404:	.word	0x00026140
   22408:	.word	0x00026134
   2240c:	.word	0x00026138
   22410:	tst	r5, #176	; 0xb0
   22414:	andne	r1, r5, #240	; 0xf0
   22418:	orrne	r0, r1, #16
   2241c:	cmpne	r0, #112	; 0x70
   22420:	bne	236fc <opt_loop+0x2368>
   22424:	mvn	r0, #0
   22428:	str	r0, [r3]
   2242c:	ldr	r3, [r3, #16]
   22430:	cmp	r3, #0
   22434:	beq	23b68 <opt_loop+0x27d4>
   22438:	ldr	r5, [r3]
   2243c:	cmp	r5, #177	; 0xb1
   22440:	bhi	2343c <opt_loop+0x20a8>
   22444:	add	r1, pc, #20
   22448:	ldr	r2, [r1, r5, lsl #2]
   2244c:	add	pc, r1, r2
   22450:	.word	0x00026118
   22454:	.word	0x000264a4
   22458:	.word	0x00026014
   2245c:	.word	0x00025f1c
   22460:	.word	0x00000ed8
   22464:	.word	0x00000f44
   22468:	.word	0x00000e78
   2246c:	.word	0x00000fb0
   22470:	.word	0x000002d4
   22474:	.word	0x00000fdc
   22478:	.word	0x00000fdc
   2247c:	.word	0x00000df8
   22480:	.word	0x00000fdc
   22484:	.word	0x00000fdc
   22488:	.word	0x00000fdc
   2248c:	.word	0x00000fdc
   22490:	.word	0x00000374
   22494:	.word	0x00000fdc
   22498:	.word	0x00000fdc
   2249c:	.word	0x00000fdc
   224a0:	.word	0x00000fdc
   224a4:	.word	0x00000fdc
   224a8:	.word	0x00000fdc
   224ac:	.word	0x00000fdc
   224b0:	.word	0x000002d4
   224b4:	.word	0x00000fdc
   224b8:	.word	0x00000fdc
   224bc:	.word	0x00000fdc
   224c0:	.word	0x00000fdc
   224c4:	.word	0x00000fdc
   224c8:	.word	0x00000fdc
   224cc:	.word	0x00000fdc
   224d0:	.word	0x00000374
   224d4:	.word	0x00000fdc
   224d8:	.word	0x00000fdc
   224dc:	.word	0x00000fdc
   224e0:	.word	0x00000400
   224e4:	.word	0x00000fdc
   224e8:	.word	0x00000fdc
   224ec:	.word	0x00000fdc
   224f0:	.word	0x000002d4
   224f4:	.word	0x00000fdc
   224f8:	.word	0x00000fdc
   224fc:	.word	0x00000fdc
   22500:	.word	0x00000400
   22504:	.word	0x00000fdc
   22508:	.word	0x00000fdc
   2250c:	.word	0x00000fdc
   22510:	.word	0x00000374
   22514:	.word	0x00000fdc
   22518:	.word	0x00000fdc
   2251c:	.word	0x00000fdc
   22520:	.word	0x00000400
   22524:	.word	0x00000fdc
   22528:	.word	0x00000fdc
   2252c:	.word	0x00000fdc
   22530:	.word	0x000002d4
   22534:	.word	0x00000fdc
   22538:	.word	0x00000fdc
   2253c:	.word	0x00000fdc
   22540:	.word	0x00000fdc
   22544:	.word	0x00000fdc
   22548:	.word	0x00000fdc
   2254c:	.word	0x00000fdc
   22550:	.word	0x00000374
   22554:	.word	0x00000fdc
   22558:	.word	0x00000fdc
   2255c:	.word	0x00000fdc
   22560:	.word	0x0000046c
   22564:	.word	0x00000fdc
   22568:	.word	0x00000fdc
   2256c:	.word	0x00000fdc
   22570:	.word	0x000002d4
   22574:	.word	0x00000fdc
   22578:	.word	0x00000fdc
   2257c:	.word	0x00000fdc
   22580:	.word	0x0000046c
   22584:	.word	0x00000fdc
   22588:	.word	0x00000fdc
   2258c:	.word	0x00000fdc
   22590:	.word	0x00000374
   22594:	.word	0x00000fdc
   22598:	.word	0x00000fdc
   2259c:	.word	0x00000fdc
   225a0:	.word	0x0000046c
   225a4:	.word	0x00000fdc
   225a8:	.word	0x00000fdc
   225ac:	.word	0x00000fdc
   225b0:	.word	0x000002d4
   225b4:	.word	0x00000fdc
   225b8:	.word	0x00000fdc
   225bc:	.word	0x00000fdc
   225c0:	.word	0x00000fdc
   225c4:	.word	0x00000fdc
   225c8:	.word	0x00000fdc
   225cc:	.word	0x00000fdc
   225d0:	.word	0x00000374
   225d4:	.word	0x00000fdc
   225d8:	.word	0x00000fdc
   225dc:	.word	0x00000fdc
   225e0:	.word	0x00000e88
   225e4:	.word	0x00000fec
   225e8:	.word	0x00000fdc
   225ec:	.word	0x00000fdc
   225f0:	.word	0x000002d4
   225f4:	.word	0x00000fdc
   225f8:	.word	0x00000fdc
   225fc:	.word	0x00000fdc
   22600:	.word	0x00000fdc
   22604:	.word	0x00000fdc
   22608:	.word	0x00000fdc
   2260c:	.word	0x00000fdc
   22610:	.word	0x00000374
   22614:	.word	0x00000fdc
   22618:	.word	0x00000fdc
   2261c:	.word	0x00000fdc
   22620:	.word	0x00000fdc
   22624:	.word	0x00000fdc
   22628:	.word	0x00000fdc
   2262c:	.word	0x00000fdc
   22630:	.word	0x000002d4
   22634:	.word	0x00000fdc
   22638:	.word	0x00000fdc
   2263c:	.word	0x00000fdc
   22640:	.word	0x00000fdc
   22644:	.word	0x00000fdc
   22648:	.word	0x00000fdc
   2264c:	.word	0x00000fdc
   22650:	.word	0x00000374
   22654:	.word	0x00000fdc
   22658:	.word	0x00000fdc
   2265c:	.word	0x00000fdc
   22660:	.word	0x00001060
   22664:	.word	0x00000fdc
   22668:	.word	0x00000fdc
   2266c:	.word	0x00000fdc
   22670:	.word	0x00000d4c
   22674:	.word	0x00000fdc
   22678:	.word	0x00000fdc
   2267c:	.word	0x00001058
   22680:	.word	0x00000fdc
   22684:	.word	0x00000fdc
   22688:	.word	0x00000fdc
   2268c:	.word	0x00000fdc
   22690:	.word	0x00000fdc
   22694:	.word	0x00000fdc
   22698:	.word	0x00000fdc
   2269c:	.word	0x00000fdc
   226a0:	.word	0x00000fdc
   226a4:	.word	0x00000fdc
   226a8:	.word	0x00000fdc
   226ac:	.word	0x00000fdc
   226b0:	.word	0x00000fdc
   226b4:	.word	0x00000fdc
   226b8:	.word	0x00000fdc
   226bc:	.word	0x00000fdc
   226c0:	.word	0x00000fdc
   226c4:	.word	0x00000fdc
   226c8:	.word	0x00000fdc
   226cc:	.word	0x00000fdc
   226d0:	.word	0x00000fdc
   226d4:	.word	0x00000fdc
   226d8:	.word	0x00000fdc
   226dc:	.word	0x00000fdc
   226e0:	.word	0x00000fdc
   226e4:	.word	0x00000fdc
   226e8:	.word	0x00000fdc
   226ec:	.word	0x00000fdc
   226f0:	.word	0x00000fdc
   226f4:	.word	0x00000fdc
   226f8:	.word	0x00000fdc
   226fc:	.word	0x00000fdc
   22700:	.word	0x00000fdc
   22704:	.word	0x00000fdc
   22708:	.word	0x00000fdc
   2270c:	.word	0x00000fdc
   22710:	.word	0x00000fdc
   22714:	.word	0x00000fdc
   22718:	.word	0x00000fdc
   2271c:	.word	0x00000fdc
   22720:	.word	0x00000fdc
   22724:	.word	0x00000e10
   22728:	.word	0x00025e14
   2272c:	.word	0x00025e14
   22730:	.word	0x00025e04
   22734:	ldr	r0, [sp, #20]
   22738:	cmp	r0, #0
   2273c:	beq	22a64 <opt_loop+0x16d0>
   22740:	ldr	r2, [r3, #12]
   22744:	cmp	r2, #0
   22748:	beq	22410 <opt_loop+0x107c>
   2274c:	ldr	r1, [lr]
   22750:	ldr	r4, [pc, #4040]	; 23720 <opt_loop+0x238c>
   22754:	ldr	r4, [pc, r4]
   22758:	ldr	r0, [r4, r1, lsl #3]
   2275c:	cmp	r0, #0
   22760:	beq	22a6c <opt_loop+0x16d8>
   22764:	movw	r6, #8923	; 0x22db
   22768:	lsl	r0, r2, #4
   2276c:	movt	r6, #39383	; 0x99d7
   22770:	umull	r0, r7, r0, r6
   22774:	mov	r6, #213	; 0xd5
   22778:	lsr	r0, r7, #7
   2277c:	mul	r0, r0, r6
   22780:	rsb	r6, r0, r2, lsl #4
   22784:	ldr	r7, [sl, r6, lsl #2]
   22788:	cmp	r7, #0
   2278c:	bne	227a4 <opt_loop+0x1410>
   22790:	b	22ce0 <opt_loop+0x194c>
   22794:	.word	0x00026208
   22798:	ldr	r7, [r7, #16]
   2279c:	cmp	r7, #0
   227a0:	beq	22ce0 <opt_loop+0x194c>
   227a4:	ldr	r0, [r7]
   227a8:	cmp	r0, #0
   227ac:	bne	22798 <opt_loop+0x1404>
   227b0:	ldr	r0, [r7, #4]
   227b4:	cmp	r0, r2
   227b8:	bne	22798 <opt_loop+0x1404>
   227bc:	ldr	r0, [r7, #8]
   227c0:	cmp	r0, #0
   227c4:	bne	22798 <opt_loop+0x1404>
   227c8:	ldr	r7, [r7, #12]
   227cc:	b	22d4c <opt_loop+0x19b8>
   227d0:	.word	0x00025d78
   227d4:	ldr	r0, [sp, #20]
   227d8:	cmp	r0, #0
   227dc:	beq	2297c <opt_loop+0x15e8>
   227e0:	ldr	r1, [r9, #200]	; 0xc8
   227e4:	ldr	r2, [r9, #204]	; 0xcc
   227e8:	ldr	r6, [pc, #4064]	; 237d0 <opt_loop+0x243c>
   227ec:	and	r7, r5, #240	; 0xf0
   227f0:	ldr	r6, [pc, r6]
   227f4:	ldr	r0, [r6, r2, lsl #3]
   227f8:	ldr	r4, [r6, r1, lsl #3]
   227fc:	cmp	r0, #0
   22800:	beq	22da4 <opt_loop+0x1a10>
   22804:	cmp	r4, #0
   22808:	beq	22f34 <opt_loop+0x1ba0>
   2280c:	ubfx	r7, r5, #4, #4
   22810:	cmp	r7, #8
   22814:	bhi	24724 <opt_loop+0x3390>
   22818:	add	r0, r6, r2, lsl #3
   2281c:	ldr	r2, [r0, #4]
   22820:	add	r0, r6, r1, lsl #3
   22824:	ldr	r1, [r0, #4]
   22828:	add	r0, pc, #4
   2282c:	ldr	r7, [r0, r7, lsl #2]
   22830:	add	pc, r0, r7
   22834:	.word	0x00000024
   22838:	.word	0x00001140
   2283c:	.word	0x00001128
   22840:	.word	0x00001130
   22844:	.word	0x00001120
   22848:	.word	0x00001150
   2284c:	.word	0x00001158
   22850:	.word	0x00001148
   22854:	.word	0x00001160
   22858:	add	r1, r2, r1
   2285c:	b	23998 <opt_loop+0x2604>
   22860:	ldr	r2, [r3, #12]
   22864:	movw	r0, #8923	; 0x22db
   22868:	movt	r0, #39383	; 0x99d7
   2286c:	eor	r1, r5, r2, lsl #4
   22870:	umull	r7, r6, r1, r0
   22874:	mov	r0, #213	; 0xd5
   22878:	lsr	r7, r6, #7
   2287c:	mls	r1, r7, r0, r1
   22880:	ldr	r7, [sl, r1, lsl #2]
   22884:	cmp	r7, #0
   22888:	bne	2289c <opt_loop+0x1508>
   2288c:	b	22c50 <opt_loop+0x18bc>
   22890:	ldr	r7, [r7, #16]
   22894:	cmp	r7, #0
   22898:	beq	22c50 <opt_loop+0x18bc>
   2289c:	ldr	r6, [r7]
   228a0:	cmp	r6, r5
   228a4:	bne	22890 <opt_loop+0x14fc>
   228a8:	ldr	r6, [r7, #4]
   228ac:	cmp	r6, r2
   228b0:	bne	22890 <opt_loop+0x14fc>
   228b4:	ldr	r6, [r7, #8]
   228b8:	cmp	r6, #0
   228bc:	bne	22890 <opt_loop+0x14fc>
   228c0:	ldr	r7, [r7, #12]
   228c4:	b	22cc0 <opt_loop+0x192c>
   228c8:	.word	0x00025c80
   228cc:	ldr	r0, [sp, #20]
   228d0:	ldr	r1, [r9, #204]	; 0xcc
   228d4:	cmp	r0, #0
   228d8:	beq	22e38 <opt_loop+0x1aa4>
   228dc:	ldr	r2, [pc, #4084]	; 238d8 <opt_loop+0x2544>
   228e0:	ldr	r2, [pc, r2]
   228e4:	ldr	r2, [r2, r1, lsl #3]
   228e8:	cmp	r2, #0
   228ec:	beq	22e38 <opt_loop+0x1aa4>
   228f0:	and	r2, r5, #24
   228f4:	movw	r0, #8923	; 0x22db
   228f8:	orr	r6, r2, #32
   228fc:	movt	r0, #39383	; 0x99d7
   22900:	str	r6, [r3]
   22904:	ldr	r2, [pc, #4048]	; 238dc <opt_loop+0x2548>
   22908:	ldr	r2, [pc, r2]
   2290c:	add	r1, r2, r1, lsl #3
   22910:	ldr	r2, [r3, #12]
   22914:	ldr	r1, [r1, #4]
   22918:	add	r1, r2, r1
   2291c:	eor	r2, r6, r1, lsl #4
   22920:	str	r1, [r3, #12]
   22924:	umull	r7, r5, r2, r0
   22928:	mov	r0, #213	; 0xd5
   2292c:	lsr	r7, r5, #7
   22930:	mls	r7, r7, r0, r2
   22934:	ldr	r2, [sl, r7, lsl #2]
   22938:	cmp	r2, #0
   2293c:	bne	22950 <opt_loop+0x15bc>
   22940:	b	230bc <opt_loop+0x1d28>
   22944:	ldr	r2, [r2, #16]
   22948:	cmp	r2, #0
   2294c:	beq	230bc <opt_loop+0x1d28>
   22950:	ldr	r5, [r2]
   22954:	cmp	r5, r6
   22958:	bne	22944 <opt_loop+0x15b0>
   2295c:	ldr	r5, [r2, #4]
   22960:	cmp	r5, r1
   22964:	bne	22944 <opt_loop+0x15b0>
   22968:	ldr	r5, [r2, #8]
   2296c:	cmp	r5, #0
   22970:	bne	22944 <opt_loop+0x15b0>
   22974:	ldr	r2, [r2, #12]
   22978:	b	23104 <opt_loop+0x1d70>
   2297c:	ldr	r1, [r9, #200]	; 0xc8
   22980:	ldr	r2, [r9, #204]	; 0xcc
   22984:	eor	r0, r5, r2, lsl #8
   22988:	movw	r4, #8923	; 0x22db
   2298c:	movt	r4, #39383	; 0x99d7
   22990:	eor	r0, r0, r1, lsl #4
   22994:	umull	r7, r6, r0, r4
   22998:	mov	r4, #213	; 0xd5
   2299c:	lsr	r7, r6, #7
   229a0:	mls	r4, r7, r4, r0
   229a4:	ldr	r7, [sl, r4, lsl #2]
   229a8:	cmp	r7, #0
   229ac:	bne	229c0 <opt_loop+0x162c>
   229b0:	b	229ec <opt_loop+0x1658>
   229b4:	ldr	r7, [r7, #16]
   229b8:	cmp	r7, #0
   229bc:	beq	229ec <opt_loop+0x1658>
   229c0:	ldr	r0, [r7]
   229c4:	cmp	r0, r5
   229c8:	bne	229b4 <opt_loop+0x1620>
   229cc:	ldr	r0, [r7, #4]
   229d0:	cmp	r0, r1
   229d4:	bne	229b4 <opt_loop+0x1620>
   229d8:	ldr	r0, [r7, #8]
   229dc:	cmp	r0, r2
   229e0:	bne	229b4 <opt_loop+0x1620>
   229e4:	b	23a10 <opt_loop+0x267c>
   229e8:	.word	0x00025fac
   229ec:	ldr	r0, [pc, #4064]	; 239d4 <opt_loop+0x2640>
   229f0:	tst	r5, #230	; 0xe6
   229f4:	ldr	r0, [pc, r0]
   229f8:	add	r7, r0, #1
   229fc:	ldr	r0, [pc, #4052]	; 239d8 <opt_loop+0x2644>
   22a00:	add	r0, pc, r0
   22a04:	str	r7, [r0]
   22a08:	bne	22a2c <opt_loop+0x1698>
   22a0c:	ldr	r0, [pc, #4040]	; 239dc <opt_loop+0x2648>
   22a10:	mov	r6, #1
   22a14:	ldr	r0, [pc, r0]
   22a18:	add	r0, r0, r7, lsl #3
   22a1c:	str	r1, [r0, #4]
   22a20:	ldr	r0, [pc, #4080]	; 23a18 <opt_loop+0x2684>
   22a24:	ldr	r0, [pc, r0]
   22a28:	str	r6, [r0, r7, lsl #3]
   22a2c:	ldr	r0, [pc, #4072]	; 23a1c <opt_loop+0x2688>
   22a30:	ldr	r0, [pc, r0]
   22a34:	ldr	sl, [pc, #4068]	; 23a20 <opt_loop+0x268c>
   22a38:	add	r6, r0, #20
   22a3c:	add	sl, pc, sl
   22a40:	str	r6, [sl]
   22a44:	str	r5, [r0]
   22a48:	stmib	r0, {r1, r2, r7}
   22a4c:	ldr	sl, [pc, #4048]	; 23a24 <opt_loop+0x2690>
   22a50:	add	sl, pc, sl
   22a54:	ldr	r1, [sl, r4, lsl #2]
   22a58:	str	r1, [r0, #16]
   22a5c:	str	r0, [sl, r4, lsl #2]
   22a60:	b	23588 <opt_loop+0x21f4>
   22a64:	ldr	r2, [r3, #12]
   22a68:	ldr	r1, [lr]
   22a6c:	movw	r7, #8923	; 0x22db
   22a70:	lsl	r0, r2, #4
   22a74:	movt	r7, #39383	; 0x99d7
   22a78:	umull	r0, r7, r0, r7
   22a7c:	lsr	r0, r7, #7
   22a80:	mov	r7, #213	; 0xd5
   22a84:	mul	r0, r0, r7
   22a88:	rsb	r4, r0, r2, lsl #4
   22a8c:	ldr	r7, [sl, r4, lsl #2]
   22a90:	cmp	r7, #0
   22a94:	bne	22aa8 <opt_loop+0x1714>
   22a98:	b	22ad4 <opt_loop+0x1740>
   22a9c:	ldr	r7, [r7, #16]
   22aa0:	cmp	r7, #0
   22aa4:	beq	22ad4 <opt_loop+0x1740>
   22aa8:	ldr	r0, [r7]
   22aac:	cmp	r0, #0
   22ab0:	bne	22a9c <opt_loop+0x1708>
   22ab4:	ldr	r0, [r7, #4]
   22ab8:	cmp	r0, r2
   22abc:	bne	22a9c <opt_loop+0x1708>
   22ac0:	ldr	r0, [r7, #8]
   22ac4:	cmp	r0, #0
   22ac8:	bne	22a9c <opt_loop+0x1708>
   22acc:	ldr	ip, [r7, #12]
   22ad0:	b	22b38 <opt_loop+0x17a4>
   22ad4:	ldr	r0, [pc, #4044]	; 23aa8 <opt_loop+0x2714>
   22ad8:	mov	r6, #1
   22adc:	ldr	r0, [pc, r0]
   22ae0:	add	ip, r0, #1
   22ae4:	ldr	r0, [pc, #4032]	; 23aac <opt_loop+0x2718>
   22ae8:	add	r0, pc, r0
   22aec:	str	ip, [r0]
   22af0:	ldr	r0, [pc, #4024]	; 23ab0 <opt_loop+0x271c>
   22af4:	ldr	r0, [pc, r0]
   22af8:	add	r0, r0, ip, lsl #3
   22afc:	str	r2, [r0, #4]
   22b00:	ldr	r0, [pc, #4012]	; 23ab4 <opt_loop+0x2720>
   22b04:	ldr	r0, [pc, r0]
   22b08:	str	r6, [r0, ip, lsl #3]
   22b0c:	ldr	r0, [pc, #4004]	; 23ab8 <opt_loop+0x2724>
   22b10:	ldr	r0, [pc, r0]
   22b14:	ldr	r7, [pc, #4000]	; 23abc <opt_loop+0x2728>
   22b18:	add	r6, r0, #20
   22b1c:	add	r7, pc, r7
   22b20:	str	r6, [r7]
   22b24:	str	r8, [r0]
   22b28:	stmib	r0, {r2, r8, ip}
   22b2c:	ldr	r2, [sl, r4, lsl #2]
   22b30:	str	r2, [r0, #16]
   22b34:	str	r0, [sl, r4, lsl #2]
   22b38:	eor	r0, r5, r1, lsl #4
   22b3c:	movw	r2, #8923	; 0x22db
   22b40:	movt	r2, #39383	; 0x99d7
   22b44:	eor	r0, r0, ip, lsl #8
   22b48:	umull	r2, r4, r0, r2
   22b4c:	lsr	r2, r4, #7
   22b50:	mov	r4, #213	; 0xd5
   22b54:	mls	r2, r2, r4, r0
   22b58:	ldr	r4, [sl, r2, lsl #2]
   22b5c:	cmp	r4, #0
   22b60:	bne	22b74 <opt_loop+0x17e0>
   22b64:	b	22bb8 <opt_loop+0x1824>
   22b68:	ldr	r4, [r4, #16]
   22b6c:	cmp	r4, #0
   22b70:	beq	22bb8 <opt_loop+0x1824>
   22b74:	ldr	r0, [r4]
   22b78:	cmp	r0, r5
   22b7c:	bne	22b68 <opt_loop+0x17d4>
   22b80:	ldr	r0, [r4, #4]
   22b84:	cmp	r0, r1
   22b88:	bne	22b68 <opt_loop+0x17d4>
   22b8c:	ldr	r0, [r4, #8]
   22b90:	cmp	r0, ip
   22b94:	bne	22b68 <opt_loop+0x17d4>
   22b98:	ldr	r0, [r4, #12]
   22b9c:	str	r0, [lr]
   22ba0:	ldr	ip, [pc, #4020]	; 23b5c <opt_loop+0x27c8>
   22ba4:	ldr	r3, [r3, #16]
   22ba8:	add	ip, pc, ip
   22bac:	cmp	r3, #0
   22bb0:	bne	22438 <opt_loop+0x10a4>
   22bb4:	b	23b68 <opt_loop+0x27d4>
   22bb8:	ldr	r0, [pc, #4000]	; 23b60 <opt_loop+0x27cc>
   22bbc:	tst	r5, #230	; 0xe6
   22bc0:	ldr	r0, [pc, r0]
   22bc4:	add	r4, r0, #1
   22bc8:	ldr	r0, [pc, #3988]	; 23b64 <opt_loop+0x27d0>
   22bcc:	add	r0, pc, r0
   22bd0:	str	r4, [r0]
   22bd4:	bne	22bf8 <opt_loop+0x1864>
   22bd8:	ldr	r0, [pc, #4092]	; 23bdc <opt_loop+0x2848>
   22bdc:	mov	r6, #1
   22be0:	ldr	r0, [pc, r0]
   22be4:	add	r0, r0, r4, lsl #3
   22be8:	str	r1, [r0, #4]
   22bec:	ldr	r0, [pc, #4076]	; 23be0 <opt_loop+0x284c>
   22bf0:	ldr	r0, [pc, r0]
   22bf4:	str	r6, [r0, r4, lsl #3]
   22bf8:	ldr	r0, [pc, #4068]	; 23be4 <opt_loop+0x2850>
   22bfc:	ldr	r0, [pc, r0]
   22c00:	ldr	r7, [pc, #4064]	; 23be8 <opt_loop+0x2854>
   22c04:	add	r6, r0, #20
   22c08:	add	r7, pc, r7
   22c0c:	str	r6, [r7]
   22c10:	stmib	r0, {r1, ip}
   22c14:	str	r5, [r0]
   22c18:	str	r4, [r0, #12]
   22c1c:	ldr	r1, [sl, r2, lsl #2]
   22c20:	str	r1, [r0, #16]
   22c24:	str	r0, [sl, r2, lsl #2]
   22c28:	str	r4, [lr]
   22c2c:	ldr	ip, [pc, #4076]	; 23c20 <opt_loop+0x288c>
   22c30:	ldr	r3, [r3, #16]
   22c34:	add	ip, pc, ip
   22c38:	cmp	r3, #0
   22c3c:	bne	22438 <opt_loop+0x10a4>
   22c40:	b	23b68 <opt_loop+0x27d4>
   22c44:	.word	0x000258d4
   22c48:	.word	0x000258d0
   22c4c:	.word	0x000258ac
   22c50:	ldr	r7, [pc, #4044]	; 23c24 <opt_loop+0x2890>
   22c54:	tst	r5, #230	; 0xe6
   22c58:	ldr	r7, [pc, r7]
   22c5c:	ldr	r0, [pc, #4036]	; 23c28 <opt_loop+0x2894>
   22c60:	add	r7, r7, #1
   22c64:	add	r0, pc, r0
   22c68:	str	r7, [r0]
   22c6c:	bne	22c90 <opt_loop+0x18fc>
   22c70:	ldr	r6, [pc, #4020]	; 23c2c <opt_loop+0x2898>
   22c74:	mov	r0, #1
   22c78:	ldr	r6, [pc, r6]
   22c7c:	add	r6, r6, r7, lsl #3
   22c80:	str	r2, [r6, #4]
   22c84:	ldr	r6, [pc, #4004]	; 23c30 <opt_loop+0x289c>
   22c88:	ldr	r6, [pc, r6]
   22c8c:	str	r0, [r6, r7, lsl #3]
   22c90:	ldr	r6, [pc, #4088]	; 23c90 <opt_loop+0x28fc>
   22c94:	ldr	r6, [pc, r6]
   22c98:	ldr	r0, [pc, #4084]	; 23c94 <opt_loop+0x2900>
   22c9c:	add	r4, r6, #20
   22ca0:	add	r0, pc, r0
   22ca4:	str	r4, [r0]
   22ca8:	stmib	r6, {r2, r8}
   22cac:	str	r5, [r6]
   22cb0:	str	r7, [r6, #12]
   22cb4:	ldr	r2, [sl, r1, lsl #2]
   22cb8:	str	r2, [r6, #16]
   22cbc:	str	r6, [sl, r1, lsl #2]
   22cc0:	ldr	r0, [sp, #20]
   22cc4:	cmp	r0, #0
   22cc8:	beq	23588 <opt_loop+0x21f4>
   22ccc:	ldr	r1, [lr]
   22cd0:	cmp	r1, r7
   22cd4:	beq	22424 <opt_loop+0x1090>
   22cd8:	b	23588 <opt_loop+0x21f4>
   22cdc:	.word	0x00025c88
   22ce0:	ldr	r0, [pc, #4016]	; 23c98 <opt_loop+0x2904>
   22ce4:	ldr	r0, [pc, r0]
   22ce8:	add	r7, r0, #1
   22cec:	ldr	r0, [pc, #4008]	; 23c9c <opt_loop+0x2908>
   22cf0:	add	r0, pc, r0
   22cf4:	str	r7, [r0]
   22cf8:	add	r0, r4, r7, lsl #3
   22cfc:	mov	r4, #1
   22d00:	str	r2, [r0, #4]
   22d04:	ldr	r0, [pc, #3988]	; 23ca0 <opt_loop+0x290c>
   22d08:	ldr	r0, [pc, r0]
   22d0c:	str	r4, [r0, r7, lsl #3]
   22d10:	ldr	r0, [pc, #4088]	; 23d10 <opt_loop+0x297c>
   22d14:	ldr	r0, [pc, r0]
   22d18:	ldr	r4, [pc, #4084]	; 23d14 <opt_loop+0x2980>
   22d1c:	add	r5, r0, #20
   22d20:	add	r4, pc, r4
   22d24:	str	r5, [r4]
   22d28:	stmib	r0, {r2, r8}
   22d2c:	str	r8, [r0]
   22d30:	str	r7, [r0, #12]
   22d34:	ldr	r2, [sl, r6, lsl #2]
   22d38:	str	r2, [r0, #16]
   22d3c:	str	r0, [sl, r6, lsl #2]
   22d40:	ldr	r5, [r3]
   22d44:	ldr	r4, [pc, #4092]	; 23d48 <opt_loop+0x29b4>
   22d48:	ldr	r4, [pc, r4]
   22d4c:	ubfx	r6, r5, #4, #4
   22d50:	cmp	r6, #8
   22d54:	bhi	24724 <opt_loop+0x3390>
   22d58:	add	r0, r4, r7, lsl #3
   22d5c:	ldr	r2, [r0, #4]
   22d60:	add	r0, r4, r1, lsl #3
   22d64:	ldr	r1, [r0, #4]
   22d68:	add	r0, pc, #8
   22d6c:	ldr	r7, [r0, r6, lsl #2]
   22d70:	add	pc, r0, r7
   22d74:	.word	0x00025808
   22d78:	.word	0x00000024
   22d7c:	.word	0x00000b30
   22d80:	.word	0x00000b28
   22d84:	.word	0x00000b38
   22d88:	.word	0x00000b20
   22d8c:	.word	0x00000b50
   22d90:	.word	0x00000b58
   22d94:	.word	0x00000b48
   22d98:	.word	0x00000b68
   22d9c:	add	r1, r2, r1
   22da0:	b	238e4 <opt_loop+0x2550>
   22da4:	cmp	r4, #0
   22da8:	beq	22984 <opt_loop+0x15f0>
   22dac:	add	r0, r6, r1, lsl #3
   22db0:	ldr	r0, [r0, #4]
   22db4:	cmp	r0, #0
   22db8:	bne	22984 <opt_loop+0x15f0>
   22dbc:	tst	r5, #176	; 0xb0
   22dc0:	beq	23b34 <opt_loop+0x27a0>
   22dc4:	sub	r0, r7, #32
   22dc8:	lsr	r7, r0, #4
   22dcc:	cmp	r7, #6
   22dd0:	bhi	22984 <opt_loop+0x15f0>
   22dd4:	mov	r0, #1
   22dd8:	mov	r4, #59	; 0x3b
   22ddc:	tst	r4, r0, lsl r7
   22de0:	beq	23b50 <opt_loop+0x27bc>
   22de4:	str	r8, [r3, #12]
   22de8:	str	r8, [r3]
   22dec:	ldr	r1, [pc, #3976]	; 23d7c <opt_loop+0x29e8>
   22df0:	ldr	r1, [pc, r1]
   22df4:	cmp	r1, #0
   22df8:	bne	22e0c <opt_loop+0x1a78>
   22dfc:	b	23ac0 <opt_loop+0x272c>
   22e00:	ldr	r1, [r1, #16]
   22e04:	cmp	r1, #0
   22e08:	beq	23ac0 <opt_loop+0x272c>
   22e0c:	ldr	r0, [r1]
   22e10:	cmp	r0, #0
   22e14:	bne	22e00 <opt_loop+0x1a6c>
   22e18:	ldr	r0, [r1, #4]
   22e1c:	cmp	r0, #0
   22e20:	bne	22e00 <opt_loop+0x1a6c>
   22e24:	ldr	r0, [r1, #8]
   22e28:	cmp	r0, #0
   22e2c:	bne	22e00 <opt_loop+0x1a6c>
   22e30:	ldr	r1, [r1, #12]
   22e34:	b	23664 <opt_loop+0x22d0>
   22e38:	ldr	r6, [r3, #12]
   22e3c:	eor	r2, r5, r1, lsl #8
   22e40:	movw	r0, #8923	; 0x22db
   22e44:	movt	r0, #39383	; 0x99d7
   22e48:	eor	r2, r2, r6, lsl #4
   22e4c:	umull	r7, r4, r2, r0
   22e50:	mov	r0, sl
   22e54:	lsr	r7, r4, #7
   22e58:	mov	r4, #213	; 0xd5
   22e5c:	mls	sl, r7, r4, r2
   22e60:	ldr	r2, [r0, sl, lsl #2]
   22e64:	cmp	r2, #0
   22e68:	bne	22e7c <opt_loop+0x1ae8>
   22e6c:	b	22eb0 <opt_loop+0x1b1c>
   22e70:	ldr	r2, [r2, #16]
   22e74:	cmp	r2, #0
   22e78:	beq	22eb0 <opt_loop+0x1b1c>
   22e7c:	ldr	r7, [r2]
   22e80:	cmp	r7, r5
   22e84:	bne	22e70 <opt_loop+0x1adc>
   22e88:	ldr	r7, [r2, #4]
   22e8c:	cmp	r7, r6
   22e90:	bne	22e70 <opt_loop+0x1adc>
   22e94:	ldr	r7, [r2, #8]
   22e98:	cmp	r7, r1
   22e9c:	bne	22e70 <opt_loop+0x1adc>
   22ea0:	ldr	r2, [r2, #12]
   22ea4:	ldr	sl, [pc, #4052]	; 23e80 <opt_loop+0x2aec>
   22ea8:	add	sl, pc, sl
   22eac:	b	23108 <opt_loop+0x1d74>
   22eb0:	ldr	r2, [pc, #4044]	; 23e84 <opt_loop+0x2af0>
   22eb4:	tst	r5, #230	; 0xe6
   22eb8:	ldr	r2, [pc, r2]
   22ebc:	ldr	r0, [pc, #4036]	; 23e88 <opt_loop+0x2af4>
   22ec0:	add	r2, r2, #1
   22ec4:	add	r0, pc, r0
   22ec8:	str	r2, [r0]
   22ecc:	bne	22ef0 <opt_loop+0x1b5c>
   22ed0:	ldr	r7, [pc, #4080]	; 23ec8 <opt_loop+0x2b34>
   22ed4:	mov	r0, #1
   22ed8:	ldr	r7, [pc, r7]
   22edc:	add	r7, r7, r2, lsl #3
   22ee0:	str	r6, [r7, #4]
   22ee4:	ldr	r7, [pc, #4064]	; 23ecc <opt_loop+0x2b38>
   22ee8:	ldr	r7, [pc, r7]
   22eec:	str	r0, [r7, r2, lsl #3]
   22ef0:	ldr	r7, [pc, #4056]	; 23ed0 <opt_loop+0x2b3c>
   22ef4:	ldr	r7, [pc, r7]
   22ef8:	ldr	r4, [pc, #4052]	; 23ed4 <opt_loop+0x2b40>
   22efc:	add	r0, r7, #20
   22f00:	add	r4, pc, r4
   22f04:	str	r0, [r4]
   22f08:	str	r1, [r7, #8]
   22f0c:	stm	r7, {r5, r6}
   22f10:	str	r2, [r7, #12]
   22f14:	ldr	r0, [pc, #4088]	; 23f14 <opt_loop+0x2b80>
   22f18:	add	r0, pc, r0
   22f1c:	mov	r1, r0
   22f20:	ldr	r0, [r0, sl, lsl #2]
   22f24:	str	r0, [r7, #16]
   22f28:	str	r7, [r1, sl, lsl #2]
   22f2c:	mov	sl, r1
   22f30:	b	23108 <opt_loop+0x1d74>
   22f34:	orr	r1, r7, #4
   22f38:	movw	r2, #8923	; 0x22db
   22f3c:	str	r1, [r3]
   22f40:	movt	r2, #39383	; 0x99d7
   22f44:	ldr	r0, [r9, #204]	; 0xcc
   22f48:	ldr	r7, [pc, #4040]	; 23f18 <opt_loop+0x2b84>
   22f4c:	ldr	r7, [pc, r7]
   22f50:	add	r0, r7, r0, lsl #3
   22f54:	ldr	r6, [r0, #4]
   22f58:	lsl	r0, r6, #4
   22f5c:	str	r6, [r3, #12]
   22f60:	strb	r8, [ip]
   22f64:	umull	r0, r2, r0, r2
   22f68:	lsr	r0, r2, #7
   22f6c:	mov	r2, #213	; 0xd5
   22f70:	mul	r0, r0, r2
   22f74:	mov	r2, sl
   22f78:	rsb	sl, r0, r6, lsl #4
   22f7c:	ldr	r5, [r2, sl, lsl #2]
   22f80:	ldr	r2, [r9, #200]	; 0xc8
   22f84:	cmp	r5, #0
   22f88:	bne	22fa0 <opt_loop+0x1c0c>
   22f8c:	b	22fd4 <opt_loop+0x1c40>
   22f90:	.word	0x000255e8
   22f94:	ldr	r5, [r5, #16]
   22f98:	cmp	r5, #0
   22f9c:	beq	22fd4 <opt_loop+0x1c40>
   22fa0:	ldr	r0, [r5]
   22fa4:	cmp	r0, #0
   22fa8:	bne	22f94 <opt_loop+0x1c00>
   22fac:	ldr	r0, [r5, #4]
   22fb0:	cmp	r0, r6
   22fb4:	bne	22f94 <opt_loop+0x1c00>
   22fb8:	ldr	r0, [r5, #8]
   22fbc:	cmp	r0, #0
   22fc0:	bne	22f94 <opt_loop+0x1c00>
   22fc4:	ldr	r5, [r5, #12]
   22fc8:	ldr	r4, [pc, #4076]	; 23fbc <opt_loop+0x2c28>
   22fcc:	add	r4, pc, r4
   22fd0:	b	2303c <opt_loop+0x1ca8>
   22fd4:	ldr	r0, [pc, #4088]	; 23fd4 <opt_loop+0x2c40>
   22fd8:	ldr	r0, [pc, r0]
   22fdc:	add	r5, r0, #1
   22fe0:	ldr	r0, [pc, #4080]	; 23fd8 <opt_loop+0x2c44>
   22fe4:	add	r0, pc, r0
   22fe8:	str	r5, [r0]
   22fec:	add	r0, r7, r5, lsl #3
   22ff0:	mov	r7, #1
   22ff4:	str	r6, [r0, #4]
   22ff8:	ldr	r0, [pc, #4080]	; 23ff0 <opt_loop+0x2c5c>
   22ffc:	ldr	r0, [pc, r0]
   23000:	str	r7, [r0, r5, lsl #3]
   23004:	ldr	r0, [pc, #4072]	; 23ff4 <opt_loop+0x2c60>
   23008:	ldr	r0, [pc, r0]
   2300c:	ldr	r4, [pc, #4068]	; 23ff8 <opt_loop+0x2c64>
   23010:	add	r7, r0, #20
   23014:	add	r4, pc, r4
   23018:	str	r7, [r4]
   2301c:	stmib	r0, {r6, r8}
   23020:	str	r8, [r0]
   23024:	str	r5, [r0, #12]
   23028:	ldr	r4, [pc, #4044]	; 23ffc <opt_loop+0x2c68>
   2302c:	add	r4, pc, r4
   23030:	ldr	r7, [r4, sl, lsl #2]
   23034:	str	r7, [r0, #16]
   23038:	str	r0, [r4, sl, lsl #2]
   2303c:	eor	r0, r1, r2, lsl #4
   23040:	movw	r6, #8923	; 0x22db
   23044:	movt	r6, #39383	; 0x99d7
   23048:	eor	r0, r0, r5, lsl #8
   2304c:	umull	r7, r6, r0, r6
   23050:	lsr	r7, r6, #7
   23054:	mov	r6, #213	; 0xd5
   23058:	mls	sl, r7, r6, r0
   2305c:	ldr	r6, [r4, sl, lsl #2]
   23060:	cmp	r6, #0
   23064:	bne	23078 <opt_loop+0x1ce4>
   23068:	b	23134 <opt_loop+0x1da0>
   2306c:	ldr	r6, [r6, #16]
   23070:	cmp	r6, #0
   23074:	beq	23134 <opt_loop+0x1da0>
   23078:	ldr	r0, [r6]
   2307c:	cmp	r0, r1
   23080:	bne	2306c <opt_loop+0x1cd8>
   23084:	ldr	r0, [r6, #4]
   23088:	cmp	r0, r2
   2308c:	bne	2306c <opt_loop+0x1cd8>
   23090:	ldr	r0, [r6, #8]
   23094:	cmp	r0, r5
   23098:	bne	2306c <opt_loop+0x1cd8>
   2309c:	ldr	r0, [r6, #12]
   230a0:	str	r0, [lr]
   230a4:	ldr	sl, [pc, #4092]	; 240a8 <opt_loop+0x2d14>
   230a8:	ldr	r3, [r3, #16]
   230ac:	add	sl, pc, sl
   230b0:	cmp	r3, #0
   230b4:	bne	22438 <opt_loop+0x10a4>
   230b8:	b	23b68 <opt_loop+0x27d4>
   230bc:	ldr	r2, [pc, #4072]	; 240ac <opt_loop+0x2d18>
   230c0:	ldr	r2, [pc, r2]
   230c4:	ldr	r0, [pc, #4068]	; 240b0 <opt_loop+0x2d1c>
   230c8:	add	r2, r2, #1
   230cc:	add	r0, pc, r0
   230d0:	str	r2, [r0]
   230d4:	ldr	r5, [pc, #4056]	; 240b4 <opt_loop+0x2d20>
   230d8:	ldr	r5, [pc, r5]
   230dc:	ldr	r0, [pc, #4052]	; 240b8 <opt_loop+0x2d24>
   230e0:	add	r4, r5, #20
   230e4:	add	r0, pc, r0
   230e8:	str	r4, [r0]
   230ec:	stmib	r5, {r1, r8}
   230f0:	str	r6, [r5]
   230f4:	str	r2, [r5, #12]
   230f8:	ldr	r1, [sl, r7, lsl #2]
   230fc:	str	r1, [r5, #16]
   23100:	str	r5, [sl, r7, lsl #2]
   23104:	strb	r8, [ip]
   23108:	ldr	r0, [sp, #20]
   2310c:	cmp	r0, #0
   23110:	beq	23120 <opt_loop+0x1d8c>
   23114:	ldr	r0, [lr]
   23118:	cmp	r0, r2
   2311c:	beq	22424 <opt_loop+0x1090>
   23120:	str	r2, [lr]
   23124:	ldr	r3, [r3, #16]
   23128:	cmp	r3, #0
   2312c:	bne	22438 <opt_loop+0x10a4>
   23130:	b	23b68 <opt_loop+0x27d4>
   23134:	ldr	r0, [pc, #4084]	; 24130 <opt_loop+0x2d9c>
   23138:	ldr	r0, [pc, r0]
   2313c:	ldr	r4, [pc, #4080]	; 24134 <opt_loop+0x2da0>
   23140:	add	r0, r0, #1
   23144:	add	r4, pc, r4
   23148:	str	r0, [r4]
   2314c:	ldr	r6, [pc, #4068]	; 24138 <opt_loop+0x2da4>
   23150:	ldr	r6, [pc, r6]
   23154:	ldr	r7, [pc, #4064]	; 2413c <opt_loop+0x2da8>
   23158:	add	r4, r6, #20
   2315c:	add	r7, pc, r7
   23160:	str	r4, [r7]
   23164:	stm	r6, {r1, r2, r5}
   23168:	str	r0, [r6, #12]
   2316c:	ldr	r1, [pc, #4044]	; 24140 <opt_loop+0x2dac>
   23170:	add	r1, pc, r1
   23174:	mov	r2, r1
   23178:	ldr	r1, [r1, sl, lsl #2]
   2317c:	str	r1, [r6, #16]
   23180:	str	r6, [r2, sl, lsl #2]
   23184:	mov	sl, r2
   23188:	b	23a94 <opt_loop+0x2700>
   2318c:	.word	0x000253f4
   23190:	.word	0x00025820
   23194:	.word	0x00025814
   23198:	.word	0x00025810
   2319c:	.word	0x000253d0
   231a0:	.word	0x00025384
   231a4:	.word	0x00025370
   231a8:	.word	0x000257a0
   231ac:	ldr	r0, [sp, #20]
   231b0:	cmp	r0, #0
   231b4:	beq	237d4 <opt_loop+0x2440>
   231b8:	ldr	r1, [lr]
   231bc:	ldr	r0, [pc, #4024]	; 2417c <opt_loop+0x2de8>
   231c0:	ldr	r0, [pc, r0]
   231c4:	ldr	r0, [r0, r1, lsl #3]
   231c8:	cmp	r0, #0
   231cc:	beq	237d8 <opt_loop+0x2444>
   231d0:	str	r8, [r3]
   231d4:	movw	r2, #8923	; 0x22db
   231d8:	ldr	r0, [lr]
   231dc:	ldr	r7, [pc, #3996]	; 24180 <opt_loop+0x2dec>
   231e0:	movt	r2, #39383	; 0x99d7
   231e4:	ldr	r7, [pc, r7]
   231e8:	add	r0, r7, r0, lsl #3
   231ec:	ldr	r0, [r0, #4]
   231f0:	rsb	r1, r0, #0
   231f4:	lsl	r0, r1, #4
   231f8:	str	r1, [r3, #12]
   231fc:	umull	r0, r2, r0, r2
   23200:	lsr	r0, r2, #7
   23204:	mov	r2, #213	; 0xd5
   23208:	mul	r0, r0, r2
   2320c:	rsb	r2, r0, r1, lsl #4
   23210:	ldr	r6, [sl, r2, lsl #2]
   23214:	cmp	r6, #0
   23218:	bne	2322c <opt_loop+0x1e98>
   2321c:	b	2387c <opt_loop+0x24e8>
   23220:	ldr	r6, [r6, #16]
   23224:	cmp	r6, #0
   23228:	beq	2387c <opt_loop+0x24e8>
   2322c:	ldr	r0, [r6]
   23230:	cmp	r0, #0
   23234:	bne	23220 <opt_loop+0x1e8c>
   23238:	ldr	r0, [r6, #4]
   2323c:	cmp	r0, r1
   23240:	bne	23220 <opt_loop+0x1e8c>
   23244:	ldr	r0, [r6, #8]
   23248:	cmp	r0, #0
   2324c:	bne	23220 <opt_loop+0x1e8c>
   23250:	ldr	r0, [r6, #12]
   23254:	b	23a94 <opt_loop+0x2700>
   23258:	ldr	r0, [sp, #20]
   2325c:	ldr	r1, [lr]
   23260:	cmp	r0, #0
   23264:	bne	23498 <opt_loop+0x2104>
   23268:	b	234a4 <opt_loop+0x2110>
   2326c:	.word	0x00025728
   23270:	ldr	r2, [r3, #12]
   23274:	mov	r0, #177	; 0xb1
   23278:	movw	r1, #8923	; 0x22db
   2327c:	mov	r4, #213	; 0xd5
   23280:	movt	r1, #39383	; 0x99d7
   23284:	eor	r0, r0, r2, lsl #4
   23288:	umull	r1, r7, r0, r1
   2328c:	lsr	r1, r7, #7
   23290:	mls	r1, r1, r4, r0
   23294:	ldr	r7, [sl, r1, lsl #2]
   23298:	cmp	r7, #0
   2329c:	bne	232b0 <opt_loop+0x1f1c>
   232a0:	b	23684 <opt_loop+0x22f0>
   232a4:	ldr	r7, [r7, #16]
   232a8:	cmp	r7, #0
   232ac:	beq	23684 <opt_loop+0x22f0>
   232b0:	ldr	r0, [r7]
   232b4:	cmp	r0, #177	; 0xb1
   232b8:	bne	232a4 <opt_loop+0x1f10>
   232bc:	ldr	r0, [r7, #4]
   232c0:	cmp	r0, r2
   232c4:	bne	232a4 <opt_loop+0x1f10>
   232c8:	ldr	r0, [r7, #8]
   232cc:	cmp	r0, #0
   232d0:	bne	232a4 <opt_loop+0x1f10>
   232d4:	b	23408 <opt_loop+0x2074>
   232d8:	ldr	r0, [r3, #12]
   232dc:	ldr	r2, [r9, #200]	; 0xc8
   232e0:	b	23418 <opt_loop+0x2084>
   232e4:	.word	0x000256ac
   232e8:	ldr	r0, [r3, #12]
   232ec:	add	r0, r9, r0, lsl #2
   232f0:	ldr	r1, [r0, #136]	; 0x88
   232f4:	ldr	r0, [sp, #20]
   232f8:	cmp	r0, #0
   232fc:	beq	23670 <opt_loop+0x22dc>
   23300:	ldr	r0, [pc, #3844]	; 2420c <opt_loop+0x2e78>
   23304:	ldr	r0, [pc, r0]
   23308:	ldr	r0, [r0, r1, lsl #3]
   2330c:	cmp	r0, #0
   23310:	beq	23664 <opt_loop+0x22d0>
   23314:	str	r8, [r3]
   23318:	ldr	r0, [pc, #3824]	; 24210 <opt_loop+0x2e7c>
   2331c:	ldr	r0, [pc, r0]
   23320:	add	r0, r0, r1, lsl #3
   23324:	ldr	r0, [r0, #4]
   23328:	str	r0, [r3, #12]
   2332c:	strb	r8, [ip]
   23330:	b	23664 <opt_loop+0x22d0>
   23334:	.word	0x00025204
   23338:	ldr	r1, [r3, #12]
   2333c:	movw	r2, #8923	; 0x22db
   23340:	movt	r2, #39383	; 0x99d7
   23344:	lsl	r0, r1, #4
   23348:	umull	r0, r2, r0, r2
   2334c:	lsr	r0, r2, #7
   23350:	mov	r2, #213	; 0xd5
   23354:	mul	r0, r0, r2
   23358:	rsb	r2, r0, r1, lsl #4
   2335c:	ldr	r7, [sl, r2, lsl #2]
   23360:	cmp	r7, #0
   23364:	bne	23378 <opt_loop+0x1fe4>
   23368:	b	23508 <opt_loop+0x2174>
   2336c:	ldr	r7, [r7, #16]
   23370:	cmp	r7, #0
   23374:	beq	23508 <opt_loop+0x2174>
   23378:	ldr	r0, [r7]
   2337c:	cmp	r0, #0
   23380:	bne	2336c <opt_loop+0x1fd8>
   23384:	ldr	r0, [r7, #4]
   23388:	cmp	r0, r1
   2338c:	bne	2336c <opt_loop+0x1fd8>
   23390:	ldr	r0, [r7, #8]
   23394:	cmp	r0, #0
   23398:	bne	2336c <opt_loop+0x1fd8>
   2339c:	ldr	r7, [r7, #12]
   233a0:	b	23570 <opt_loop+0x21dc>
   233a4:	ldr	r1, [r3, #12]
   233a8:	movw	r2, #8923	; 0x22db
   233ac:	movt	r2, #39383	; 0x99d7
   233b0:	lsl	r0, r1, #4
   233b4:	umull	r0, r2, r0, r2
   233b8:	lsr	r0, r2, #7
   233bc:	mov	r2, #213	; 0xd5
   233c0:	mul	r0, r0, r2
   233c4:	rsb	r2, r0, r1, lsl #4
   233c8:	ldr	r7, [sl, r2, lsl #2]
   233cc:	cmp	r7, #0
   233d0:	bne	233e4 <opt_loop+0x2050>
   233d4:	b	2359c <opt_loop+0x2208>
   233d8:	ldr	r7, [r7, #16]
   233dc:	cmp	r7, #0
   233e0:	beq	2359c <opt_loop+0x2208>
   233e4:	ldr	r0, [r7]
   233e8:	cmp	r0, #0
   233ec:	bne	233d8 <opt_loop+0x2044>
   233f0:	ldr	r0, [r7, #4]
   233f4:	cmp	r0, r1
   233f8:	bne	233d8 <opt_loop+0x2044>
   233fc:	ldr	r0, [r7, #8]
   23400:	cmp	r0, #0
   23404:	bne	233d8 <opt_loop+0x2044>
   23408:	ldr	r7, [r7, #12]
   2340c:	b	236d0 <opt_loop+0x233c>
   23410:	ldr	r0, [r3, #12]
   23414:	ldr	r2, [r9, #204]	; 0xcc
   23418:	add	r0, r9, r0, lsl #2
   2341c:	add	r1, r0, #136	; 0x88
   23420:	ldr	r0, [sp, #20]
   23424:	cmp	r0, #0
   23428:	beq	23438 <opt_loop+0x20a4>
   2342c:	ldr	r0, [r1]
   23430:	cmp	r0, r2
   23434:	beq	22424 <opt_loop+0x1090>
   23438:	str	r2, [r1]
   2343c:	ldr	r3, [r3, #16]
   23440:	cmp	r3, #0
   23444:	bne	22438 <opt_loop+0x10a4>
   23448:	b	23b68 <opt_loop+0x27d4>
   2344c:	ldr	r0, [r3, #12]
   23450:	add	r0, r9, r0, lsl #2
   23454:	ldr	r1, [r0, #136]	; 0x88
   23458:	ldr	r0, [sp, #20]
   2345c:	cmp	r0, #0
   23460:	beq	234a4 <opt_loop+0x2110>
   23464:	ldr	r0, [pc, #4004]	; 24410 <opt_loop+0x307c>
   23468:	ldr	r0, [pc, r0]
   2346c:	ldr	r0, [r0, r1, lsl #3]
   23470:	cmp	r0, #0
   23474:	beq	23498 <opt_loop+0x2104>
   23478:	mov	r0, #1
   2347c:	str	r0, [r3]
   23480:	ldr	r0, [pc, #3980]	; 24414 <opt_loop+0x3080>
   23484:	ldr	r0, [pc, r0]
   23488:	add	r0, r0, r1, lsl #3
   2348c:	ldr	r0, [r0, #4]
   23490:	str	r0, [r3, #12]
   23494:	strb	r8, [ip]
   23498:	ldr	r0, [r9, #204]	; 0xcc
   2349c:	cmp	r0, r1
   234a0:	beq	22424 <opt_loop+0x1090>
   234a4:	str	r1, [r9, #204]	; 0xcc
   234a8:	ldr	r3, [r3, #16]
   234ac:	cmp	r3, #0
   234b0:	bne	22438 <opt_loop+0x10a4>
   234b4:	b	23b68 <opt_loop+0x27d4>
   234b8:	ldr	r1, [r9, #204]	; 0xcc
   234bc:	b	23658 <opt_loop+0x22c4>
   234c0:	ldr	r1, [sl, #512]	; 0x200
   234c4:	cmp	r1, #0
   234c8:	bne	234dc <opt_loop+0x2148>
   234cc:	b	23608 <opt_loop+0x2274>
   234d0:	ldr	r1, [r1, #16]
   234d4:	cmp	r1, #0
   234d8:	beq	23608 <opt_loop+0x2274>
   234dc:	ldr	r0, [r1]
   234e0:	cmp	r0, #128	; 0x80
   234e4:	bne	234d0 <opt_loop+0x213c>
   234e8:	ldr	r0, [r1, #4]
   234ec:	cmp	r0, #0
   234f0:	bne	234d0 <opt_loop+0x213c>
   234f4:	ldr	r0, [r1, #8]
   234f8:	cmp	r0, #0
   234fc:	bne	234d0 <opt_loop+0x213c>
   23500:	ldr	r1, [r1, #12]
   23504:	b	23658 <opt_loop+0x22c4>
   23508:	ldr	r0, [pc, #3848]	; 24418 <opt_loop+0x3084>
   2350c:	mov	r4, #1
   23510:	ldr	r0, [pc, r0]
   23514:	add	r7, r0, #1
   23518:	ldr	r0, [pc, #3836]	; 2441c <opt_loop+0x3088>
   2351c:	add	r0, pc, r0
   23520:	str	r7, [r0]
   23524:	ldr	r0, [pc, #4092]	; 24528 <opt_loop+0x3194>
   23528:	ldr	r0, [pc, r0]
   2352c:	add	r0, r0, r7, lsl #3
   23530:	str	r1, [r0, #4]
   23534:	ldr	r0, [pc, #4080]	; 2452c <opt_loop+0x3198>
   23538:	ldr	r0, [pc, r0]
   2353c:	str	r4, [r0, r7, lsl #3]
   23540:	ldr	r0, [pc, #4072]	; 24530 <opt_loop+0x319c>
   23544:	ldr	r0, [pc, r0]
   23548:	ldr	r4, [pc, #4068]	; 24534 <opt_loop+0x31a0>
   2354c:	add	r6, r0, #20
   23550:	add	r4, pc, r4
   23554:	str	r6, [r4]
   23558:	stmib	r0, {r1, r8}
   2355c:	str	r8, [r0]
   23560:	str	r7, [r0, #12]
   23564:	ldr	r1, [sl, r2, lsl #2]
   23568:	str	r1, [r0, #16]
   2356c:	str	r0, [sl, r2, lsl #2]
   23570:	ldr	r0, [sp, #20]
   23574:	cmp	r0, #0
   23578:	beq	23588 <opt_loop+0x21f4>
   2357c:	ldr	r0, [lr]
   23580:	cmp	r0, r7
   23584:	beq	22424 <opt_loop+0x1090>
   23588:	str	r7, [lr]
   2358c:	ldr	r3, [r3, #16]
   23590:	cmp	r3, #0
   23594:	bne	22438 <opt_loop+0x10a4>
   23598:	b	23b68 <opt_loop+0x27d4>
   2359c:	ldr	r0, [pc, #3988]	; 24538 <opt_loop+0x31a4>
   235a0:	mov	r4, #1
   235a4:	ldr	r0, [pc, r0]
   235a8:	add	r7, r0, #1
   235ac:	ldr	r0, [pc, #3976]	; 2453c <opt_loop+0x31a8>
   235b0:	add	r0, pc, r0
   235b4:	str	r7, [r0]
   235b8:	ldr	r0, [pc, #3968]	; 24540 <opt_loop+0x31ac>
   235bc:	ldr	r0, [pc, r0]
   235c0:	add	r0, r0, r7, lsl #3
   235c4:	str	r1, [r0, #4]
   235c8:	ldr	r0, [pc, #3956]	; 24544 <opt_loop+0x31b0>
   235cc:	ldr	r0, [pc, r0]
   235d0:	str	r4, [r0, r7, lsl #3]
   235d4:	ldr	r0, [pc, #3948]	; 24548 <opt_loop+0x31b4>
   235d8:	ldr	r0, [pc, r0]
   235dc:	ldr	r4, [pc, #3944]	; 2454c <opt_loop+0x31b8>
   235e0:	add	r6, r0, #20
   235e4:	add	r4, pc, r4
   235e8:	str	r6, [r4]
   235ec:	stmib	r0, {r1, r8}
   235f0:	str	r8, [r0]
   235f4:	str	r7, [r0, #12]
   235f8:	ldr	r1, [sl, r2, lsl #2]
   235fc:	str	r1, [r0, #16]
   23600:	str	r0, [sl, r2, lsl #2]
   23604:	b	236d0 <opt_loop+0x233c>
   23608:	ldr	r0, [pc, #3904]	; 24550 <opt_loop+0x31bc>
   2360c:	ldr	r0, [pc, r0]
   23610:	add	r1, r0, #1
   23614:	ldr	r0, [pc, #3896]	; 24554 <opt_loop+0x31c0>
   23618:	add	r0, pc, r0
   2361c:	str	r1, [r0]
   23620:	ldr	r0, [pc, #3888]	; 24558 <opt_loop+0x31c4>
   23624:	ldr	r0, [pc, r0]
   23628:	ldr	r4, [pc, #3884]	; 2455c <opt_loop+0x31c8>
   2362c:	add	r2, r0, #20
   23630:	add	r4, pc, r4
   23634:	str	r2, [r4]
   23638:	mov	r2, #128	; 0x80
   2363c:	str	r8, [r0, #8]
   23640:	str	r8, [r0, #4]
   23644:	str	r2, [r0]
   23648:	str	r1, [r0, #12]
   2364c:	ldr	r2, [sl, #512]	; 0x200
   23650:	str	r2, [r0, #16]
   23654:	str	r0, [sl, #512]	; 0x200
   23658:	ldr	r0, [sp, #20]
   2365c:	cmp	r0, #0
   23660:	beq	23670 <opt_loop+0x22dc>
   23664:	ldr	r0, [lr]
   23668:	cmp	r0, r1
   2366c:	beq	22424 <opt_loop+0x1090>
   23670:	str	r1, [lr]
   23674:	ldr	r3, [r3, #16]
   23678:	cmp	r3, #0
   2367c:	bne	22438 <opt_loop+0x10a4>
   23680:	b	23b68 <opt_loop+0x27d4>
   23684:	ldr	r0, [pc, #4092]	; 24688 <opt_loop+0x32f4>
   23688:	ldr	r0, [pc, r0]
   2368c:	add	r7, r0, #1
   23690:	ldr	r0, [pc, #4084]	; 2468c <opt_loop+0x32f8>
   23694:	add	r0, pc, r0
   23698:	str	r7, [r0]
   2369c:	ldr	r0, [pc, #4076]	; 24690 <opt_loop+0x32fc>
   236a0:	ldr	r0, [pc, r0]
   236a4:	ldr	r4, [pc, #4092]	; 246a8 <opt_loop+0x3314>
   236a8:	add	r6, r0, #20
   236ac:	add	r4, pc, r4
   236b0:	str	r6, [r4]
   236b4:	stmib	r0, {r2, r8}
   236b8:	mov	r2, #177	; 0xb1
   236bc:	str	r2, [r0]
   236c0:	str	r7, [r0, #12]
   236c4:	ldr	r2, [sl, r1, lsl #2]
   236c8:	str	r2, [r0, #16]
   236cc:	str	r0, [sl, r1, lsl #2]
   236d0:	ldr	r0, [sp, #20]
   236d4:	cmp	r0, #0
   236d8:	beq	236e8 <opt_loop+0x2354>
   236dc:	ldr	r0, [r9, #204]	; 0xcc
   236e0:	cmp	r0, r7
   236e4:	beq	22424 <opt_loop+0x1090>
   236e8:	str	r7, [r9, #204]	; 0xcc
   236ec:	ldr	r3, [r3, #16]
   236f0:	cmp	r3, #0
   236f4:	bne	22438 <opt_loop+0x10a4>
   236f8:	b	23b68 <opt_loop+0x27d4>
   236fc:	cmp	r1, #80	; 0x50
   23700:	cmpne	r1, #32
   23704:	bne	2274c <opt_loop+0x13b8>
   23708:	str	r8, [r3]
   2370c:	ldr	r1, [pc, #4092]	; 24710 <opt_loop+0x337c>
   23710:	ldr	r1, [pc, r1]
   23714:	cmp	r1, #0
   23718:	bne	23730 <opt_loop+0x239c>
   2371c:	b	2375c <opt_loop+0x23c8>
   23720:	.word	0x0002526c
   23724:	ldr	r1, [r1, #16]
   23728:	cmp	r1, #0
   2372c:	beq	2375c <opt_loop+0x23c8>
   23730:	ldr	r0, [r1]
   23734:	cmp	r0, #0
   23738:	bne	23724 <opt_loop+0x2390>
   2373c:	ldr	r0, [r1, #4]
   23740:	cmp	r0, #0
   23744:	bne	23724 <opt_loop+0x2390>
   23748:	ldr	r0, [r1, #8]
   2374c:	cmp	r0, #0
   23750:	bne	23724 <opt_loop+0x2390>
   23754:	ldr	r0, [r1, #12]
   23758:	b	23a94 <opt_loop+0x2700>
   2375c:	ldr	r0, [pc, #4084]	; 24758 <opt_loop+0x33c4>
   23760:	mov	r2, #1
   23764:	ldr	r0, [pc, r0]
   23768:	ldr	r1, [pc, #4076]	; 2475c <opt_loop+0x33c8>
   2376c:	add	r0, r0, #1
   23770:	add	r1, pc, r1
   23774:	str	r0, [r1]
   23778:	ldr	r1, [pc, #4064]	; 24760 <opt_loop+0x33cc>
   2377c:	ldr	r1, [pc, r1]
   23780:	add	r1, r1, r0, lsl #3
   23784:	str	r8, [r1, #4]
   23788:	ldr	r1, [pc, #4052]	; 24764 <opt_loop+0x33d0>
   2378c:	ldr	r1, [pc, r1]
   23790:	str	r2, [r1, r0, lsl #3]
   23794:	ldr	r1, [pc, #4044]	; 24768 <opt_loop+0x33d4>
   23798:	ldr	r1, [pc, r1]
   2379c:	ldr	r4, [pc, #4040]	; 2476c <opt_loop+0x33d8>
   237a0:	add	r2, r1, #20
   237a4:	add	r4, pc, r4
   237a8:	str	r2, [r4]
   237ac:	str	r8, [r1, #8]
   237b0:	str	r8, [r1, #4]
   237b4:	str	r8, [r1]
   237b8:	str	r0, [r1, #12]
   237bc:	ldr	r2, [pc, #4012]	; 24770 <opt_loop+0x33dc>
   237c0:	ldr	r2, [pc, r2]
   237c4:	str	r2, [r1, #16]
   237c8:	str	r1, [sl]
   237cc:	b	23a94 <opt_loop+0x2700>
   237d0:	.word	0x000251d0
   237d4:	ldr	r1, [lr]
   237d8:	mov	r0, #132	; 0x84
   237dc:	movw	r2, #8923	; 0x22db
   237e0:	mov	r4, #213	; 0xd5
   237e4:	eor	r0, r0, r1, lsl #4
   237e8:	movt	r2, #39383	; 0x99d7
   237ec:	umull	r2, r7, r0, r2
   237f0:	lsr	r2, r7, #7
   237f4:	mls	r2, r2, r4, r0
   237f8:	ldr	r7, [sl, r2, lsl #2]
   237fc:	cmp	r7, #0
   23800:	bne	23814 <opt_loop+0x2480>
   23804:	b	2383c <opt_loop+0x24a8>
   23808:	ldr	r7, [r7, #16]
   2380c:	cmp	r7, #0
   23810:	beq	2383c <opt_loop+0x24a8>
   23814:	ldr	r0, [r7]
   23818:	cmp	r0, #132	; 0x84
   2381c:	bne	23808 <opt_loop+0x2474>
   23820:	ldr	r0, [r7, #4]
   23824:	cmp	r0, r1
   23828:	bne	23808 <opt_loop+0x2474>
   2382c:	ldr	r0, [r7, #8]
   23830:	cmp	r0, #0
   23834:	bne	23808 <opt_loop+0x2474>
   23838:	b	23a10 <opt_loop+0x267c>
   2383c:	ldr	r0, [pc, #3844]	; 24748 <opt_loop+0x33b4>
   23840:	ldr	r0, [pc, r0]
   23844:	ldr	r4, [pc, #3840]	; 2474c <opt_loop+0x33b8>
   23848:	add	r0, r0, #1
   2384c:	add	r4, pc, r4
   23850:	str	r0, [r4]
   23854:	ldr	r7, [pc, #3828]	; 24750 <opt_loop+0x33bc>
   23858:	ldr	r7, [pc, r7]
   2385c:	ldr	r4, [pc, #3824]	; 24754 <opt_loop+0x33c0>
   23860:	add	r6, r7, #20
   23864:	add	r4, pc, r4
   23868:	str	r6, [r4]
   2386c:	stmib	r7, {r1, r8}
   23870:	mov	r1, #132	; 0x84
   23874:	str	r1, [r7]
   23878:	b	23a84 <opt_loop+0x26f0>
   2387c:	ldr	r0, [pc, #3760]	; 24734 <opt_loop+0x33a0>
   23880:	ldr	r0, [pc, r0]
   23884:	ldr	r4, [pc, #3756]	; 24738 <opt_loop+0x33a4>
   23888:	add	r0, r0, #1
   2388c:	add	r4, pc, r4
   23890:	str	r0, [r4]
   23894:	b	23a48 <opt_loop+0x26b4>
   23898:	orr	r1, r2, r1
   2389c:	b	238e4 <opt_loop+0x2550>
   238a0:	mul	r1, r2, r1
   238a4:	b	238e4 <opt_loop+0x2550>
   238a8:	sub	r1, r1, r2
   238ac:	b	238e4 <opt_loop+0x2550>
   238b0:	cmp	r2, #0
   238b4:	beq	24728 <opt_loop+0x3394>
   238b8:	udiv	r1, r1, r2
   238bc:	b	238e4 <opt_loop+0x2550>
   238c0:	lsr	r1, r1, r2
   238c4:	b	238e4 <opt_loop+0x2550>
   238c8:	and	r1, r2, r1
   238cc:	b	238e4 <opt_loop+0x2550>
   238d0:	lsl	r1, r1, r2
   238d4:	b	238e4 <opt_loop+0x2550>
   238d8:	.word	0x000250e0
   238dc:	.word	0x000250b8
   238e0:	rsb	r1, r1, #0
   238e4:	movw	r2, #8923	; 0x22db
   238e8:	lsl	r0, r1, #4
   238ec:	str	r8, [r3]
   238f0:	str	r1, [r3, #12]
   238f4:	strb	r8, [ip]
   238f8:	movt	r2, #39383	; 0x99d7
   238fc:	umull	r0, r2, r0, r2
   23900:	lsr	r0, r2, #7
   23904:	mov	r2, #213	; 0xd5
   23908:	mul	r0, r0, r2
   2390c:	rsb	r2, r0, r1, lsl #4
   23910:	ldr	r7, [sl, r2, lsl #2]
   23914:	cmp	r7, #0
   23918:	bne	2392c <opt_loop+0x2598>
   2391c:	b	23a28 <opt_loop+0x2694>
   23920:	ldr	r7, [r7, #16]
   23924:	cmp	r7, #0
   23928:	beq	23a28 <opt_loop+0x2694>
   2392c:	ldr	r0, [r7]
   23930:	cmp	r0, #0
   23934:	bne	23920 <opt_loop+0x258c>
   23938:	ldr	r0, [r7, #4]
   2393c:	cmp	r0, r1
   23940:	bne	23920 <opt_loop+0x258c>
   23944:	ldr	r0, [r7, #8]
   23948:	cmp	r0, #0
   2394c:	bne	23920 <opt_loop+0x258c>
   23950:	b	23a10 <opt_loop+0x267c>
   23954:	orr	r1, r2, r1
   23958:	b	23998 <opt_loop+0x2604>
   2395c:	mul	r1, r2, r1
   23960:	b	23998 <opt_loop+0x2604>
   23964:	cmp	r2, #0
   23968:	beq	24728 <opt_loop+0x3394>
   2396c:	udiv	r1, r1, r2
   23970:	b	23998 <opt_loop+0x2604>
   23974:	sub	r1, r1, r2
   23978:	b	23998 <opt_loop+0x2604>
   2397c:	lsr	r1, r1, r2
   23980:	b	23998 <opt_loop+0x2604>
   23984:	and	r1, r2, r1
   23988:	b	23998 <opt_loop+0x2604>
   2398c:	lsl	r1, r1, r2
   23990:	b	23998 <opt_loop+0x2604>
   23994:	rsb	r1, r1, #0
   23998:	movw	r2, #8923	; 0x22db
   2399c:	lsl	r0, r1, #4
   239a0:	str	r8, [r3]
   239a4:	str	r1, [r3, #12]
   239a8:	strb	r8, [ip]
   239ac:	movt	r2, #39383	; 0x99d7
   239b0:	umull	r0, r2, r0, r2
   239b4:	lsr	r0, r2, #7
   239b8:	mov	r2, #213	; 0xd5
   239bc:	mul	r0, r0, r2
   239c0:	rsb	r2, r0, r1, lsl #4
   239c4:	ldr	r7, [sl, r2, lsl #2]
   239c8:	cmp	r7, #0
   239cc:	bne	239ec <opt_loop+0x2658>
   239d0:	b	23a28 <opt_loop+0x2694>
   239d4:	.word	0x00024b90
   239d8:	.word	0x00024b84
   239dc:	.word	0x00024fac
   239e0:	ldr	r7, [r7, #16]
   239e4:	cmp	r7, #0
   239e8:	beq	23a28 <opt_loop+0x2694>
   239ec:	ldr	r0, [r7]
   239f0:	cmp	r0, #0
   239f4:	bne	239e0 <opt_loop+0x264c>
   239f8:	ldr	r0, [r7, #4]
   239fc:	cmp	r0, r1
   23a00:	bne	239e0 <opt_loop+0x264c>
   23a04:	ldr	r0, [r7, #8]
   23a08:	cmp	r0, #0
   23a0c:	bne	239e0 <opt_loop+0x264c>
   23a10:	ldr	r0, [r7, #12]
   23a14:	b	23a94 <opt_loop+0x2700>
   23a18:	.word	0x00024f9c
   23a1c:	.word	0x00024f88
   23a20:	.word	0x00024f7c
   23a24:	.word	0x00024b40
   23a28:	ldr	r0, [pc, #3396]	; 24774 <opt_loop+0x33e0>
   23a2c:	ldr	r0, [pc, r0]
   23a30:	ldr	r4, [pc, #3392]	; 24778 <opt_loop+0x33e4>
   23a34:	add	r0, r0, #1
   23a38:	add	r4, pc, r4
   23a3c:	str	r0, [r4]
   23a40:	ldr	r7, [pc, #3380]	; 2477c <opt_loop+0x33e8>
   23a44:	ldr	r7, [pc, r7]
   23a48:	add	r7, r7, r0, lsl #3
   23a4c:	mov	r4, #1
   23a50:	str	r1, [r7, #4]
   23a54:	ldr	r7, [pc, #3296]	; 2473c <opt_loop+0x33a8>
   23a58:	ldr	r7, [pc, r7]
   23a5c:	str	r4, [r7, r0, lsl #3]
   23a60:	ldr	r7, [pc, #3288]	; 24740 <opt_loop+0x33ac>
   23a64:	ldr	r7, [pc, r7]
   23a68:	ldr	r4, [pc, #3284]	; 24744 <opt_loop+0x33b0>
   23a6c:	add	r6, r7, #20
   23a70:	add	r4, pc, r4
   23a74:	str	r6, [r4]
   23a78:	str	r8, [r7, #8]
   23a7c:	str	r1, [r7, #4]
   23a80:	str	r8, [r7]
   23a84:	str	r0, [r7, #12]
   23a88:	ldr	r1, [sl, r2, lsl #2]
   23a8c:	str	r1, [r7, #16]
   23a90:	str	r7, [sl, r2, lsl #2]
   23a94:	str	r0, [lr]
   23a98:	ldr	r3, [r3, #16]
   23a9c:	cmp	r3, #0
   23aa0:	bne	22438 <opt_loop+0x10a4>
   23aa4:	b	23b68 <opt_loop+0x27d4>
   23aa8:	.word	0x00024aa8
   23aac:	.word	0x00024a9c
   23ab0:	.word	0x00024ecc
   23ab4:	.word	0x00024ebc
   23ab8:	.word	0x00024ea8
   23abc:	.word	0x00024e9c
   23ac0:	ldr	r0, [pc, #3256]	; 24780 <opt_loop+0x33ec>
   23ac4:	mov	r2, #1
   23ac8:	ldr	r0, [pc, r0]
   23acc:	add	r1, r0, #1
   23ad0:	ldr	r0, [pc, #3244]	; 24784 <opt_loop+0x33f0>
   23ad4:	add	r0, pc, r0
   23ad8:	str	r1, [r0]
   23adc:	ldr	r0, [pc, #3236]	; 24788 <opt_loop+0x33f4>
   23ae0:	ldr	r0, [pc, r0]
   23ae4:	add	r0, r0, r1, lsl #3
   23ae8:	str	r8, [r0, #4]
   23aec:	ldr	r0, [pc, #3224]	; 2478c <opt_loop+0x33f8>
   23af0:	ldr	r0, [pc, r0]
   23af4:	str	r2, [r0, r1, lsl #3]
   23af8:	ldr	r0, [pc, #3216]	; 24790 <opt_loop+0x33fc>
   23afc:	ldr	r0, [pc, r0]
   23b00:	ldr	r4, [pc, #3212]	; 24794 <opt_loop+0x3400>
   23b04:	add	r2, r0, #20
   23b08:	add	r4, pc, r4
   23b0c:	str	r2, [r4]
   23b10:	str	r8, [r0, #8]
   23b14:	str	r8, [r0, #4]
   23b18:	str	r8, [r0]
   23b1c:	str	r1, [r0, #12]
   23b20:	ldr	r2, [pc, #3184]	; 24798 <opt_loop+0x3404>
   23b24:	ldr	r2, [pc, r2]
   23b28:	str	r2, [r0, #16]
   23b2c:	str	r0, [sl]
   23b30:	b	23664 <opt_loop+0x22d0>
   23b34:	mov	r0, #135	; 0x87
   23b38:	str	r0, [r3]
   23b3c:	ldr	r0, [r9, #200]	; 0xc8
   23b40:	ldr	r1, [r9, #204]	; 0xcc
   23b44:	cmp	r0, r1
   23b48:	beq	22424 <opt_loop+0x1090>
   23b4c:	b	23670 <opt_loop+0x22dc>
   23b50:	cmp	r7, #6
   23b54:	beq	22424 <opt_loop+0x1090>
   23b58:	b	22984 <opt_loop+0x15f0>
   23b5c:	.word	0x000249bc
   23b60:	.word	0x000249c4
   23b64:	.word	0x000249b8
   23b68:	ldr	r0, [sp, #20]
   23b6c:	cmp	r0, #0
   23b70:	beq	23bec <opt_loop+0x2858>
   23b74:	ldr	r0, [sp, #16]
   23b78:	cmp	r0, #0
   23b7c:	beq	23bb8 <opt_loop+0x2824>
   23b80:	ldr	r0, [r9, #128]	; 0x80
   23b84:	cmp	r0, #0
   23b88:	bne	23bb8 <opt_loop+0x2824>
   23b8c:	ldr	r0, [sp, #12]
   23b90:	cmp	r0, #0
   23b94:	beq	23bb8 <opt_loop+0x2824>
   23b98:	ldr	r0, [lr]
   23b9c:	ldr	r1, [sp, #16]
   23ba0:	cmp	r0, r1
   23ba4:	bne	23bb8 <opt_loop+0x2824>
   23ba8:	ldr	r0, [r9, #204]	; 0xcc
   23bac:	ldr	r1, [sp, #12]
   23bb0:	cmp	r0, r1
   23bb4:	beq	23bc8 <opt_loop+0x2834>
   23bb8:	ldr	r0, [r9, #8]
   23bbc:	and	r0, r0, #7
   23bc0:	cmp	r0, #6
   23bc4:	bne	23bec <opt_loop+0x2858>
   23bc8:	ldr	r0, [r9, #4]
   23bcc:	cmp	r0, #0
   23bd0:	strne	r8, [r9, #4]
   23bd4:	strbne	r8, [ip]
   23bd8:	b	240f0 <opt_loop+0x2d5c>
   23bdc:	.word	0x00024de0
   23be0:	.word	0x00024dd0
   23be4:	.word	0x00024dbc
   23be8:	.word	0x00024db0
   23bec:	ldr	r1, [r9, #4]
   23bf0:	cmp	r1, #0
   23bf4:	beq	23e2c <opt_loop+0x2a98>
   23bf8:	mov	r3, r1
   23bfc:	mov	r2, r1
   23c00:	ldr	r7, [r2]
   23c04:	ldr	r1, [r2, #16]
   23c08:	cmn	r7, #1
   23c0c:	bne	23c38 <opt_loop+0x28a4>
   23c10:	cmp	r1, #0
   23c14:	mov	r2, r1
   23c18:	bne	23c00 <opt_loop+0x286c>
   23c1c:	b	23dbc <opt_loop+0x2a28>
   23c20:	.word	0x00024930
   23c24:	.word	0x0002492c
   23c28:	.word	0x00024920
   23c2c:	.word	0x00024d48
   23c30:	.word	0x00024d38
   23c34:	ldr	r1, [r1, #16]
   23c38:	cmp	r1, #0
   23c3c:	beq	23dbc <opt_loop+0x2a28>
   23c40:	ldr	r6, [r1]
   23c44:	cmn	r6, #1
   23c48:	beq	23c34 <opt_loop+0x28a0>
   23c4c:	cmp	r7, #2
   23c50:	bne	23c7c <opt_loop+0x28e8>
   23c54:	cmp	r6, #97	; 0x61
   23c58:	bne	23c84 <opt_loop+0x28f0>
   23c5c:	ldr	r0, [r1, #12]
   23c60:	ldr	r3, [r2, #12]
   23c64:	cmp	r3, r0
   23c68:	bne	23c84 <opt_loop+0x28f0>
   23c6c:	mov	r6, #7
   23c70:	strb	r8, [ip]
   23c74:	str	r6, [r1]
   23c78:	ldr	r7, [r2]
   23c7c:	cmp	r7, #0
   23c80:	beq	23ca4 <opt_loop+0x2910>
   23c84:	cmp	r1, #0
   23c88:	bne	23bf8 <opt_loop+0x2864>
   23c8c:	b	23db8 <opt_loop+0x2a24>
   23c90:	.word	0x00024d24
   23c94:	.word	0x00024d18
   23c98:	.word	0x000248a0
   23c9c:	.word	0x00024894
   23ca0:	.word	0x00024cb8
   23ca4:	cmp	r6, #7
   23ca8:	bne	23ccc <opt_loop+0x2938>
   23cac:	mov	r0, #1
   23cb0:	str	r0, [r2]
   23cb4:	mov	r0, #135	; 0x87
   23cb8:	str	r0, [r1]
   23cbc:	strb	r8, [ip]
   23cc0:	ldr	r0, [r2]
   23cc4:	cmp	r0, #0
   23cc8:	bne	23c84 <opt_loop+0x28f0>
   23ccc:	ldrb	r0, [r9, #130]	; 0x82
   23cd0:	tst	r0, #2
   23cd4:	bne	23c84 <opt_loop+0x28f0>
   23cd8:	ldr	r7, [r1]
   23cdc:	mov	r3, r1
   23ce0:	cmp	r7, #177	; 0xb1
   23ce4:	bne	23d18 <opt_loop+0x2984>
   23ce8:	ldr	r3, [r1, #16]
   23cec:	cmp	r3, #0
   23cf0:	beq	23c84 <opt_loop+0x28f0>
   23cf4:	ldr	r7, [r3]
   23cf8:	cmn	r7, #1
   23cfc:	bne	23d18 <opt_loop+0x2984>
   23d00:	ldr	r3, [r3, #16]
   23d04:	cmp	r3, #0
   23d08:	bne	23cf4 <opt_loop+0x2960>
   23d0c:	b	23c84 <opt_loop+0x28f0>
   23d10:	.word	0x00024ca4
   23d14:	.word	0x00024c98
   23d18:	cmp	r7, #12
   23d1c:	bne	23c84 <opt_loop+0x28f0>
   23d20:	ldr	r5, [r3, #16]
   23d24:	cmp	r5, #0
   23d28:	beq	23c84 <opt_loop+0x28f0>
   23d2c:	ldr	r7, [r5]
   23d30:	cmn	r7, #1
   23d34:	bne	23d4c <opt_loop+0x29b8>
   23d38:	ldr	r5, [r5, #16]
   23d3c:	cmp	r5, #0
   23d40:	bne	23d2c <opt_loop+0x2998>
   23d44:	b	23c84 <opt_loop+0x28f0>
   23d48:	.word	0x00024c78
   23d4c:	cmp	r7, #7
   23d50:	bne	23c84 <opt_loop+0x28f0>
   23d54:	ldr	r7, [r5, #16]
   23d58:	cmp	r7, #0
   23d5c:	beq	23c84 <opt_loop+0x28f0>
   23d60:	ldr	r6, [r7]
   23d64:	cmn	r6, #1
   23d68:	bne	23d80 <opt_loop+0x29ec>
   23d6c:	ldr	r7, [r7, #16]
   23d70:	cmp	r7, #0
   23d74:	bne	23d60 <opt_loop+0x29cc>
   23d78:	b	23c84 <opt_loop+0x28f0>
   23d7c:	.word	0x000247a0
   23d80:	and	r0, r6, #231	; 0xe7
   23d84:	cmp	r0, #64	; 0x40
   23d88:	bne	23c84 <opt_loop+0x28f0>
   23d8c:	ldr	r0, [r2, #12]
   23d90:	ldr	r6, [r7, #12]
   23d94:	add	r0, r6, r0
   23d98:	str	r0, [r7, #12]
   23d9c:	mvn	r0, #0
   23da0:	str	r0, [r2]
   23da4:	str	r0, [r3]
   23da8:	str	r0, [r5]
   23dac:	strb	r8, [ip]
   23db0:	cmp	r1, #0
   23db4:	bne	23bf8 <opt_loop+0x2864>
   23db8:	mov	r3, #0
   23dbc:	ldr	r1, [r9, #8]
   23dc0:	cmp	r1, #21
   23dc4:	bne	23ee8 <opt_loop+0x2b54>
   23dc8:	ldrb	r0, [r9, #130]	; 0x82
   23dcc:	tst	r0, #1
   23dd0:	bne	23ee4 <opt_loop+0x2b50>
   23dd4:	ldr	r1, [r3]
   23dd8:	cmp	r1, #20
   23ddc:	beq	23e60 <opt_loop+0x2acc>
   23de0:	cmp	r1, #84	; 0x54
   23de4:	beq	23e8c <opt_loop+0x2af8>
   23de8:	cmp	r1, #28
   23dec:	bne	23ee4 <opt_loop+0x2b50>
   23df0:	ldr	r1, [r9, #204]	; 0xcc
   23df4:	ldr	r2, [pc, #2464]	; 2479c <opt_loop+0x3408>
   23df8:	ldr	r2, [pc, r2]
   23dfc:	ldr	r0, [r2, r1, lsl #3]
   23e00:	cmp	r0, #0
   23e04:	beq	23ed8 <opt_loop+0x2b44>
   23e08:	add	r0, r2, r1, lsl #3
   23e0c:	ldr	r1, [r9, #20]
   23e10:	ldr	r0, [r0, #4]
   23e14:	add	r0, r1, r0
   23e18:	str	r0, [r9, #20]
   23e1c:	mvn	r0, #0
   23e20:	str	r0, [r3]
   23e24:	strb	r8, [ip]
   23e28:	b	23ee4 <opt_loop+0x2b50>
   23e2c:	add	r2, sp, #24
   23e30:	mov	r1, #68	; 0x44
   23e34:	str	r8, [sp, #88]	; 0x58
   23e38:	mov	r0, r2
   23e3c:	vst1.64	{d8-d9}, [r0], r1
   23e40:	str	r8, [r0]
   23e44:	add	r0, r2, #48	; 0x30
   23e48:	vst1.64	{d8-d9}, [r0]
   23e4c:	add	r0, r2, #32
   23e50:	vst1.64	{d8-d9}, [r0]
   23e54:	add	r0, r2, #16
   23e58:	vst1.64	{d8-d9}, [r0]
   23e5c:	b	24088 <opt_loop+0x2cf4>
   23e60:	mvn	r0, #0
   23e64:	str	r0, [r3]
   23e68:	ldr	r0, [r3, #12]
   23e6c:	ldr	r1, [r9, #20]
   23e70:	add	r0, r1, r0
   23e74:	str	r0, [r9, #20]
   23e78:	strb	r8, [ip]
   23e7c:	b	23ee4 <opt_loop+0x2b50>
   23e80:	.word	0x000246e8
   23e84:	.word	0x000246cc
   23e88:	.word	0x000246c0
   23e8c:	ldr	r0, [r9, #20]
   23e90:	cmp	r0, #0
   23e94:	bne	23ee4 <opt_loop+0x2b50>
   23e98:	ldr	r0, [r3, #12]
   23e9c:	mov	r1, #69	; 0x45
   23ea0:	str	r1, [r9, #8]
   23ea4:	str	r0, [r9, #20]
   23ea8:	mvn	r0, #0
   23eac:	str	r0, [r3]
   23eb0:	strb	r8, [ip]
   23eb4:	ldr	r0, [r9, #60]	; 0x3c
   23eb8:	ldr	r1, [r9, #84]	; 0x54
   23ebc:	str	r0, [r9, #84]	; 0x54
   23ec0:	str	r1, [r9, #60]	; 0x3c
   23ec4:	b	23ee4 <opt_loop+0x2b50>
   23ec8:	.word	0x00024ae8
   23ecc:	.word	0x00024ad8
   23ed0:	.word	0x00024ac4
   23ed4:	.word	0x00024ab8
   23ed8:	ldr	r0, [r9, #20]
   23edc:	cmp	r0, #0
   23ee0:	beq	241f4 <opt_loop+0x2e60>
   23ee4:	ldr	r1, [r9, #8]
   23ee8:	cmp	r1, #69	; 0x45
   23eec:	bne	23f24 <opt_loop+0x2b90>
   23ef0:	ldr	r2, [r9, #20]
   23ef4:	mov	r1, #69	; 0x45
   23ef8:	cmn	r2, #1
   23efc:	beq	23f1c <opt_loop+0x2b88>
   23f00:	cmp	r2, #0
   23f04:	bne	23f24 <opt_loop+0x2b90>
   23f08:	ldr	r0, [r9, #84]	; 0x54
   23f0c:	str	r0, [r9, #60]	; 0x3c
   23f10:	b	23f24 <opt_loop+0x2b90>
   23f14:	.word	0x00024678
   23f18:	.word	0x00024a74
   23f1c:	ldr	r0, [r9, #60]	; 0x3c
   23f20:	str	r0, [r9, #84]	; 0x54
   23f24:	ldr	r2, [pc, #2164]	; 247a0 <opt_loop+0x340c>
   23f28:	tst	r1, #8
   23f2c:	ldr	r2, [pc, r2]
   23f30:	beq	23f58 <opt_loop+0x2bc4>
   23f34:	ldr	r3, [r9, #204]	; 0xcc
   23f38:	ldr	r0, [r2, r3, lsl #3]
   23f3c:	cmp	r0, #0
   23f40:	beq	23f58 <opt_loop+0x2bc4>
   23f44:	add	r0, r2, r3, lsl #3
   23f48:	bic	r1, r1, #8
   23f4c:	ldr	r0, [r0, #4]
   23f50:	str	r1, [r9, #8]
   23f54:	str	r0, [r9, #20]
   23f58:	tst	r1, #8
   23f5c:	bne	24030 <opt_loop+0x2c9c>
   23f60:	ldr	r0, [lr]
   23f64:	ldr	r3, [r2, r0, lsl #3]
   23f68:	cmp	r3, #0
   23f6c:	beq	24030 <opt_loop+0x2c9c>
   23f70:	and	r1, r1, #240	; 0xf0
   23f74:	sub	r1, r1, #16
   23f78:	lsr	r1, r1, #4
   23f7c:	cmp	r1, #3
   23f80:	bhi	24724 <opt_loop+0x3390>
   23f84:	add	r0, r2, r0, lsl #3
   23f88:	ldr	r0, [r0, #4]
   23f8c:	add	r2, pc, #4
   23f90:	ldr	r1, [r2, r1, lsl #2]
   23f94:	add	pc, r2, r1
   23f98:	.word	0x00000010
   23f9c:	.word	0x00000044
   23fa0:	.word	0x00000028
   23fa4:	.word	0x00000068
   23fa8:	ldr	r1, [r9, #20]
   23fac:	sub	r0, r0, r1
   23fb0:	clz	r0, r0
   23fb4:	lsr	r0, r0, #5
   23fb8:	b	24008 <opt_loop+0x2c74>
   23fbc:	.word	0x000245c4
   23fc0:	ldr	r1, [r9, #20]
   23fc4:	cmp	r0, r1
   23fc8:	mov	r0, #0
   23fcc:	movwcs	r0, #1
   23fd0:	b	24008 <opt_loop+0x2c74>
   23fd4:	.word	0x000245ac
   23fd8:	.word	0x000245a0
   23fdc:	ldr	r1, [r9, #20]
   23fe0:	cmp	r0, r1
   23fe4:	mov	r0, #0
   23fe8:	movwhi	r0, #1
   23fec:	b	24008 <opt_loop+0x2c74>
   23ff0:	.word	0x000249c4
   23ff4:	.word	0x000249b0
   23ff8:	.word	0x000249a4
   23ffc:	.word	0x00024564
   24000:	ldr	r1, [r9, #20]
   24004:	and	r0, r1, r0
   24008:	mov	r3, r9
   2400c:	ldr	r1, [r3, #60]!	; 0x3c
   24010:	mov	r2, r3
   24014:	ldr	r7, [r2, #24]!
   24018:	cmp	r7, r1
   2401c:	strbne	r8, [ip]
   24020:	cmp	r0, #0
   24024:	moveq	r2, r3
   24028:	moveq	r1, r7
   2402c:	str	r1, [r2]
   24030:	add	r2, sp, #24
   24034:	ldr	r5, [r9, #4]
   24038:	mov	r1, #68	; 0x44
   2403c:	str	r8, [sp, #88]	; 0x58
   24040:	add	r0, r2, #48	; 0x30
   24044:	vst1.64	{d8-d9}, [r0]
   24048:	add	r0, r2, #32
   2404c:	vst1.64	{d8-d9}, [r0]
   24050:	add	r0, r2, #16
   24054:	vst1.64	{d8-d9}, [r0]
   24058:	mov	r0, r2
   2405c:	vst1.64	{d8-d9}, [r0], r1
   24060:	str	r8, [r0]
   24064:	cmp	r5, #0
   24068:	beq	24088 <opt_loop+0x2cf4>
   2406c:	mov	r0, r5
   24070:	mov	r1, r2
   24074:	bl	25004 <deadstmt>
   24078:	ldr	r5, [r5, #16]
   2407c:	add	r2, sp, #24
   24080:	cmp	r5, #0
   24084:	bne	2406c <opt_loop+0x2cd8>
   24088:	add	r0, r9, #8
   2408c:	mov	r1, r2
   24090:	bl	25004 <deadstmt>
   24094:	ldr	ip, [pc, #1800]	; 247a4 <opt_loop+0x3410>
   24098:	add	r7, sp, #24
   2409c:	mov	r0, #0
   240a0:	add	ip, pc, ip
   240a4:	b	240c8 <opt_loop+0x2d34>
   240a8:	.word	0x000244e4
   240ac:	.word	0x000244c4
   240b0:	.word	0x000244b8
   240b4:	.word	0x000248e0
   240b8:	.word	0x000248d4
   240bc:	add	r0, r0, #1
   240c0:	cmp	r0, #18
   240c4:	beq	240f0 <opt_loop+0x2d5c>
   240c8:	ldr	r1, [r7, r0, lsl #2]
   240cc:	cmp	r1, #0
   240d0:	beq	240bc <opt_loop+0x2d28>
   240d4:	ldr	r2, [r9, #128]	; 0x80
   240d8:	mov	r3, #1
   240dc:	tst	r2, r3, lsl r0
   240e0:	mvneq	r2, #0
   240e4:	streq	r2, [r1]
   240e8:	strbeq	r8, [ip]
   240ec:	b	240bc <opt_loop+0x2d28>
   240f0:	ldr	r0, [r9, #8]
   240f4:	tst	r0, #8
   240f8:	bne	22318 <opt_loop+0xf84>
   240fc:	ldr	r1, [r9, #20]
   24100:	movw	r3, #8923	; 0x22db
   24104:	movt	r3, #39383	; 0x99d7
   24108:	lsl	r2, r1, #4
   2410c:	umull	r2, r3, r2, r3
   24110:	lsr	r2, r3, #7
   24114:	mov	r3, #213	; 0xd5
   24118:	mul	r2, r2, r3
   2411c:	rsb	r2, r2, r1, lsl #4
   24120:	ldr	r3, [sl, r2, lsl #2]
   24124:	cmp	r3, #0
   24128:	bne	24150 <opt_loop+0x2dbc>
   2412c:	b	24184 <opt_loop+0x2df0>
   24130:	.word	0x0002444c
   24134:	.word	0x00024440
   24138:	.word	0x00024868
   2413c:	.word	0x0002485c
   24140:	.word	0x00024420
   24144:	ldr	r3, [r3, #16]
   24148:	cmp	r3, #0
   2414c:	beq	24184 <opt_loop+0x2df0>
   24150:	ldr	r7, [r3]
   24154:	cmp	r7, #0
   24158:	bne	24144 <opt_loop+0x2db0>
   2415c:	ldr	r7, [r3, #4]
   24160:	cmp	r7, r1
   24164:	bne	24144 <opt_loop+0x2db0>
   24168:	ldr	r7, [r3, #8]
   2416c:	cmp	r7, #0
   24170:	bne	24144 <opt_loop+0x2db0>
   24174:	ldr	r3, [r3, #12]
   24178:	b	2231c <opt_loop+0xf88>
   2417c:	.word	0x00024800
   24180:	.word	0x000247dc
   24184:	ldr	r0, [pc, #1564]	; 247a8 <opt_loop+0x3414>
   24188:	mov	r7, #1
   2418c:	ldr	r0, [pc, r0]
   24190:	add	r3, r0, #1
   24194:	ldr	r0, [pc, #1552]	; 247ac <opt_loop+0x3418>
   24198:	add	r0, pc, r0
   2419c:	str	r3, [r0]
   241a0:	ldr	r0, [pc, #1544]	; 247b0 <opt_loop+0x341c>
   241a4:	ldr	r0, [pc, r0]
   241a8:	add	r0, r0, r3, lsl #3
   241ac:	str	r1, [r0, #4]
   241b0:	ldr	r0, [pc, #1532]	; 247b4 <opt_loop+0x3420>
   241b4:	ldr	r0, [pc, r0]
   241b8:	str	r7, [r0, r3, lsl #3]
   241bc:	ldr	r0, [pc, #1524]	; 247b8 <opt_loop+0x3424>
   241c0:	ldr	r0, [pc, r0]
   241c4:	ldr	r6, [pc, #1520]	; 247bc <opt_loop+0x3428>
   241c8:	add	r7, r0, #20
   241cc:	add	r6, pc, r6
   241d0:	str	r7, [r6]
   241d4:	stmib	r0, {r1, r8}
   241d8:	str	r8, [r0]
   241dc:	str	r3, [r0, #12]
   241e0:	ldr	r1, [sl, r2, lsl #2]
   241e4:	str	r1, [r0, #16]
   241e8:	str	r0, [sl, r2, lsl #2]
   241ec:	ldr	r0, [r9, #8]
   241f0:	b	2231c <opt_loop+0xf88>
   241f4:	mvn	r0, #0
   241f8:	mov	r1, #29
   241fc:	str	r0, [r3]
   24200:	str	r1, [r9, #8]
   24204:	strb	r8, [ip]
   24208:	b	23f24 <opt_loop+0x2b90>
   2420c:	.word	0x000246bc
   24210:	.word	0x000246a4
   24214:	ldr	r9, [sp]
   24218:	cmp	r9, #1
   2421c:	blt	24264 <opt_loop+0x2ed0>
   24220:	mov	r4, #1
   24224:	ldr	r0, [pc, #1428]	; 247c0 <opt_loop+0x342c>
   24228:	ldr	r0, [pc, r0]
   2422c:	ldr	r5, [r0, r4, lsl #2]
   24230:	cmp	r5, #0
   24234:	beq	24254 <opt_loop+0x2ec0>
   24238:	add	r0, r5, #48	; 0x30
   2423c:	bl	24db8 <opt_j>
   24240:	add	r0, r5, #72	; 0x48
   24244:	bl	24db8 <opt_j>
   24248:	ldr	r5, [r5, #100]	; 0x64
   2424c:	cmp	r5, #0
   24250:	bne	24238 <opt_loop+0x2ea4>
   24254:	add	r0, r4, #1
   24258:	cmp	r4, r9
   2425c:	mov	r4, r0
   24260:	bne	24224 <opt_loop+0x2e90>
   24264:	ldr	r3, [pc, #1368]	; 247c4 <opt_loop+0x3430>
   24268:	ldr	r3, [pc, r3]
   2426c:	cmp	r3, #1
   24270:	blt	242e8 <opt_loop+0x2f54>
   24274:	ldr	r1, [pc, #1356]	; 247c8 <opt_loop+0x3434>
   24278:	sub	r7, r3, #1
   2427c:	and	r0, r3, #3
   24280:	mov	r2, #0
   24284:	cmp	r7, #3
   24288:	ldr	r1, [pc, r1]
   2428c:	bcc	242cc <opt_loop+0x2f38>
   24290:	sub	r3, r3, r0
   24294:	add	r7, r1, #8
   24298:	mov	r2, #0
   2429c:	ldr	r6, [r7, #-8]
   242a0:	add	r2, r2, #4
   242a4:	cmp	r3, r2
   242a8:	str	r8, [r6, #112]	; 0x70
   242ac:	ldr	r6, [r7, #-4]
   242b0:	str	r8, [r6, #112]	; 0x70
   242b4:	ldr	r6, [r7]
   242b8:	str	r8, [r6, #112]	; 0x70
   242bc:	ldr	r6, [r7, #4]
   242c0:	add	r7, r7, #16
   242c4:	str	r8, [r6, #112]	; 0x70
   242c8:	bne	2429c <opt_loop+0x2f08>
   242cc:	cmp	r0, #0
   242d0:	beq	242e8 <opt_loop+0x2f54>
   242d4:	add	r1, r1, r2, lsl #2
   242d8:	ldr	r2, [r1], #4
   242dc:	subs	r0, r0, #1
   242e0:	str	r8, [r2, #112]	; 0x70
   242e4:	bne	242d8 <opt_loop+0x2f44>
   242e8:	ldr	r0, [sp, #4]
   242ec:	ldr	r0, [r0, #36]	; 0x24
   242f0:	cmp	r0, #1
   242f4:	blt	2434c <opt_loop+0x2fb8>
   242f8:	ldr	r1, [pc, #1228]	; 247cc <opt_loop+0x3438>
   242fc:	ldr	r1, [pc, r1]
   24300:	ldr	r2, [r1, r0, lsl #2]
   24304:	cmp	r2, #0
   24308:	beq	24340 <opt_loop+0x2fac>
   2430c:	ldr	r3, [r2, #60]	; 0x3c
   24310:	ldr	r7, [r3, #112]	; 0x70
   24314:	str	r7, [r2, #68]	; 0x44
   24318:	add	r7, r2, #48	; 0x30
   2431c:	str	r7, [r3, #112]	; 0x70
   24320:	ldr	r3, [r2, #84]	; 0x54
   24324:	ldr	r7, [r3, #112]	; 0x70
   24328:	str	r7, [r2, #92]	; 0x5c
   2432c:	add	r7, r2, #72	; 0x48
   24330:	str	r7, [r3, #112]	; 0x70
   24334:	ldr	r2, [r2, #100]	; 0x64
   24338:	cmp	r2, #0
   2433c:	bne	2430c <opt_loop+0x2f78>
   24340:	sub	r0, r0, #1
   24344:	cmp	r0, #0
   24348:	bgt	24300 <opt_loop+0x2f6c>
   2434c:	cmp	r9, #1
   24350:	blt	213d8 <opt_loop+0x44>
   24354:	mov	r1, #1
   24358:	b	24374 <opt_loop+0x2fe0>
   2435c:	ldr	r2, [sp, #16]
   24360:	ldr	r1, [sp]
   24364:	add	r0, r2, #1
   24368:	cmp	r2, r1
   2436c:	mov	r1, r0
   24370:	beq	213d8 <opt_loop+0x44>
   24374:	ldr	r0, [pc, #1108]	; 247d0 <opt_loop+0x343c>
   24378:	ldr	r0, [pc, r0]
   2437c:	str	r1, [sp, #16]
   24380:	ldr	lr, [r0, r1, lsl #2]
   24384:	cmp	lr, #0
   24388:	bne	243ac <opt_loop+0x3018>
   2438c:	b	2435c <opt_loop+0x2fc8>
   24390:	str	r6, [r2]
   24394:	ldr	r3, [pc, #1124]	; 24800 <opt_loop+0x346c>
   24398:	add	r3, pc, r3
   2439c:	strb	r8, [r3]
   243a0:	ldr	lr, [lr, #100]	; 0x64
   243a4:	cmp	lr, #0
   243a8:	beq	2435c <opt_loop+0x2fc8>
   243ac:	ldr	r2, [lr, #112]	; 0x70
   243b0:	cmp	r2, #0
   243b4:	beq	243a0 <opt_loop+0x300c>
   243b8:	ldr	r0, [r2, #16]
   243bc:	mov	r1, r2
   243c0:	ldr	r3, [r0, #200]	; 0xc8
   243c4:	ldr	r1, [r1, #20]
   243c8:	cmp	r1, #0
   243cc:	beq	24420 <opt_loop+0x308c>
   243d0:	ldr	r7, [r1, #16]
   243d4:	ldr	r7, [r7, #200]	; 0xc8
   243d8:	cmp	r3, r7
   243dc:	beq	243c4 <opt_loop+0x3030>
   243e0:	cmp	r2, #0
   243e4:	beq	243a0 <opt_loop+0x300c>
   243e8:	ldr	r0, [r2, #16]
   243ec:	ldr	r3, [r0, #200]	; 0xc8
   243f0:	ldr	r2, [r2, #20]
   243f4:	cmp	r2, #0
   243f8:	beq	24560 <opt_loop+0x31cc>
   243fc:	ldr	r1, [r2, #16]
   24400:	ldr	r1, [r1, #200]	; 0xc8
   24404:	cmp	r3, r1
   24408:	beq	243f0 <opt_loop+0x305c>
   2440c:	b	243a0 <opt_loop+0x300c>
   24410:	.word	0x00024558
   24414:	.word	0x0002453c
   24418:	.word	0x00024074
   2441c:	.word	0x00024068
   24420:	ldr	r1, [r0, #60]!	; 0x3c
   24424:	mov	r6, #1
   24428:	cmp	r1, lr
   2442c:	addne	r0, r0, #24
   24430:	mov	r9, r6
   24434:	ldr	r6, [r0]
   24438:	cmp	r6, #0
   2443c:	beq	24660 <opt_loop+0x32cc>
   24440:	mov	sl, r0
   24444:	ldr	r7, [r6, #60]	; 0x3c
   24448:	ldr	r0, [lr, #60]	; 0x3c
   2444c:	cmp	r7, r0
   24450:	bne	24674 <opt_loop+0x32e0>
   24454:	ldr	r0, [lr]
   24458:	ldr	r5, [r6, #104]	; 0x68
   2445c:	lsr	r1, r0, #5
   24460:	and	r4, r0, #31
   24464:	ldr	r0, [r5, r1, lsl #2]
   24468:	mov	r5, #1
   2446c:	tst	r0, r5, lsl r4
   24470:	beq	24694 <opt_loop+0x3300>
   24474:	ldr	r5, [r6, #200]	; 0xc8
   24478:	add	r0, r6, #84	; 0x54
   2447c:	mov	r6, #0
   24480:	cmp	r5, r3
   24484:	beq	24430 <opt_loop+0x309c>
   24488:	mov	r6, #1
   2448c:	lsl	r4, r6, r4
   24490:	ldr	r6, [r0]
   24494:	cmp	r6, #0
   24498:	beq	246ac <opt_loop+0x3318>
   2449c:	mov	ip, r0
   244a0:	ldr	r0, [r6, #60]	; 0x3c
   244a4:	cmp	r0, r7
   244a8:	bne	246c0 <opt_loop+0x332c>
   244ac:	ldr	r0, [r6, #104]	; 0x68
   244b0:	ldr	r0, [r0, r1, lsl #2]
   244b4:	tst	r0, r4
   244b8:	beq	246d4 <opt_loop+0x3340>
   244bc:	ldr	r5, [r6, #200]	; 0xc8
   244c0:	add	r0, r6, #84	; 0x54
   244c4:	cmp	r5, r3
   244c8:	bne	24490 <opt_loop+0x30fc>
   244cc:	ldr	r1, [r0]
   244d0:	cmp	r9, #0
   244d4:	str	r1, [ip]
   244d8:	ldr	r1, [sl]
   244dc:	str	r1, [r0]
   244e0:	beq	246e8 <opt_loop+0x3354>
   244e4:	ldr	r0, [lr, #112]	; 0x70
   244e8:	ldr	r3, [pc, #764]	; 247ec <opt_loop+0x3458>
   244ec:	ldr	sl, [pc, #764]	; 247f0 <opt_loop+0x345c>
   244f0:	cmp	r0, #0
   244f4:	add	r3, pc, r3
   244f8:	add	sl, pc, sl
   244fc:	beq	246fc <opt_loop+0x3368>
   24500:	ldr	r1, [r0, #16]
   24504:	ldr	r2, [r1, #60]	; 0x3c
   24508:	cmp	r2, lr
   2450c:	mov	r2, #84	; 0x54
   24510:	movweq	r2, #60	; 0x3c
   24514:	str	r6, [r1, r2]
   24518:	ldr	r0, [r0, #20]
   2451c:	cmp	r0, #0
   24520:	bne	24500 <opt_loop+0x316c>
   24524:	b	246fc <opt_loop+0x3368>
   24528:	.word	0x00024498
   2452c:	.word	0x00024488
   24530:	.word	0x00024474
   24534:	.word	0x00024468
   24538:	.word	0x00023fe0
   2453c:	.word	0x00023fd4
   24540:	.word	0x00024404
   24544:	.word	0x000243f4
   24548:	.word	0x000243e0
   2454c:	.word	0x000243d4
   24550:	.word	0x00023f78
   24554:	.word	0x00023f6c
   24558:	.word	0x00024394
   2455c:	.word	0x00024388
   24560:	ldr	r1, [r0, #60]!	; 0x3c
   24564:	cmp	r1, lr
   24568:	mov	r1, #1
   2456c:	addne	r0, r0, #24
   24570:	mov	ip, r1
   24574:	ldr	r1, [r0]
   24578:	cmp	r1, #0
   2457c:	beq	243a0 <opt_loop+0x300c>
   24580:	mov	r2, r0
   24584:	ldr	r4, [r1, #84]	; 0x54
   24588:	ldr	r0, [lr, #84]	; 0x54
   2458c:	cmp	r4, r0
   24590:	bne	243a0 <opt_loop+0x300c>
   24594:	ldr	r0, [lr]
   24598:	ldr	r5, [r1, #104]	; 0x68
   2459c:	lsr	r7, r0, #5
   245a0:	and	r6, r0, #31
   245a4:	ldr	r0, [r5, r7, lsl #2]
   245a8:	mov	r5, #1
   245ac:	tst	r0, r5, lsl r6
   245b0:	beq	243a0 <opt_loop+0x300c>
   245b4:	ldr	r5, [r1, #200]	; 0xc8
   245b8:	add	r0, r1, #60	; 0x3c
   245bc:	mov	r1, #0
   245c0:	cmp	r5, r3
   245c4:	beq	24570 <opt_loop+0x31dc>
   245c8:	mov	r1, #1
   245cc:	lsl	r9, r1, r6
   245d0:	ldr	r6, [r0]
   245d4:	cmp	r6, #0
   245d8:	beq	243a0 <opt_loop+0x300c>
   245dc:	mov	r1, r0
   245e0:	ldr	r0, [r6, #84]	; 0x54
   245e4:	cmp	r0, r4
   245e8:	bne	243a0 <opt_loop+0x300c>
   245ec:	ldr	r0, [r6, #104]	; 0x68
   245f0:	ldr	r0, [r0, r7, lsl #2]
   245f4:	tst	r0, r9
   245f8:	beq	243a0 <opt_loop+0x300c>
   245fc:	ldr	r5, [r6, #200]	; 0xc8
   24600:	add	r0, r6, #60	; 0x3c
   24604:	cmp	r5, r3
   24608:	bne	245d0 <opt_loop+0x323c>
   2460c:	ldr	r3, [r0]
   24610:	cmp	ip, #0
   24614:	str	r3, [r1]
   24618:	ldr	r1, [r2]
   2461c:	str	r1, [r0]
   24620:	beq	24390 <opt_loop+0x2ffc>
   24624:	ldr	r0, [lr, #112]	; 0x70
   24628:	ldr	r3, [pc, #460]	; 247fc <opt_loop+0x3468>
   2462c:	cmp	r0, #0
   24630:	add	r3, pc, r3
   24634:	beq	2439c <opt_loop+0x3008>
   24638:	ldr	r1, [r0, #16]
   2463c:	ldr	r2, [r1, #60]	; 0x3c
   24640:	cmp	r2, lr
   24644:	mov	r2, #84	; 0x54
   24648:	movweq	r2, #60	; 0x3c
   2464c:	str	r6, [r1, r2]
   24650:	ldr	r0, [r0, #20]
   24654:	cmp	r0, #0
   24658:	bne	24638 <opt_loop+0x32a4>
   2465c:	b	2439c <opt_loop+0x3008>
   24660:	ldr	sl, [pc, #364]	; 247d4 <opt_loop+0x3440>
   24664:	add	sl, pc, sl
   24668:	cmp	r2, #0
   2466c:	bne	243e8 <opt_loop+0x3054>
   24670:	b	243a0 <opt_loop+0x300c>
   24674:	ldr	sl, [pc, #348]	; 247d8 <opt_loop+0x3444>
   24678:	add	sl, pc, sl
   2467c:	cmp	r2, #0
   24680:	bne	243e8 <opt_loop+0x3054>
   24684:	b	243a0 <opt_loop+0x300c>
   24688:	.word	0x00023efc
   2468c:	.word	0x00023ef0
   24690:	.word	0x00024318
   24694:	ldr	sl, [pc, #320]	; 247dc <opt_loop+0x3448>
   24698:	add	sl, pc, sl
   2469c:	cmp	r2, #0
   246a0:	bne	243e8 <opt_loop+0x3054>
   246a4:	b	243a0 <opt_loop+0x300c>
   246a8:	.word	0x0002430c
   246ac:	ldr	sl, [pc, #300]	; 247e0 <opt_loop+0x344c>
   246b0:	add	sl, pc, sl
   246b4:	cmp	r2, #0
   246b8:	bne	243e8 <opt_loop+0x3054>
   246bc:	b	243a0 <opt_loop+0x300c>
   246c0:	ldr	sl, [pc, #284]	; 247e4 <opt_loop+0x3450>
   246c4:	add	sl, pc, sl
   246c8:	cmp	r2, #0
   246cc:	bne	243e8 <opt_loop+0x3054>
   246d0:	b	243a0 <opt_loop+0x300c>
   246d4:	ldr	sl, [pc, #268]	; 247e8 <opt_loop+0x3454>
   246d8:	add	sl, pc, sl
   246dc:	cmp	r2, #0
   246e0:	bne	243e8 <opt_loop+0x3054>
   246e4:	b	243a0 <opt_loop+0x300c>
   246e8:	str	r6, [sl]
   246ec:	ldr	r3, [pc, #256]	; 247f4 <opt_loop+0x3460>
   246f0:	ldr	sl, [pc, #256]	; 247f8 <opt_loop+0x3464>
   246f4:	add	r3, pc, r3
   246f8:	add	sl, pc, sl
   246fc:	strb	r8, [r3]
   24700:	ldr	r2, [lr, #112]	; 0x70
   24704:	cmp	r2, #0
   24708:	bne	243e8 <opt_loop+0x3054>
   2470c:	b	243a0 <opt_loop+0x300c>
   24710:	.word	0x00023e80
   24714:	sub	sp, fp, #48	; 0x30
   24718:	vpop	{d8-d9}
   2471c:	add	sp, sp, #4
   24720:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24724:	bl	edc <abort@plt>
   24728:	ldr	r0, [pc, #212]	; 24804 <opt_loop+0x3470>
   2472c:	add	r0, pc, r0
   24730:	bl	2068 <sf_bpf_error>
   24734:	.word	0x00023d04
   24738:	.word	0x00023cf8
   2473c:	.word	0x00023f68
   24740:	.word	0x00023f54
   24744:	.word	0x00023f48
   24748:	.word	0x00023d44
   2474c:	.word	0x00023d38
   24750:	.word	0x00024160
   24754:	.word	0x00024154
   24758:	.word	0x00023e20
   2475c:	.word	0x00023e14
   24760:	.word	0x00024244
   24764:	.word	0x00024234
   24768:	.word	0x00024220
   2476c:	.word	0x00024214
   24770:	.word	0x00023dd0
   24774:	.word	0x00023b58
   24778:	.word	0x00023b4c
   2477c:	.word	0x00023f7c
   24780:	.word	0x00023abc
   24784:	.word	0x00023ab0
   24788:	.word	0x00023ee0
   2478c:	.word	0x00023ed0
   24790:	.word	0x00023ebc
   24794:	.word	0x00023eb0
   24798:	.word	0x00023a6c
   2479c:	.word	0x00023bc8
   247a0:	.word	0x00023a94
   247a4:	.word	0x000234c4
   247a8:	.word	0x000233f8
   247ac:	.word	0x000233ec
   247b0:	.word	0x0002381c
   247b4:	.word	0x0002380c
   247b8:	.word	0x000237f8
   247bc:	.word	0x000237ec
   247c0:	.word	0x00023784
   247c4:	.word	0x00023300
   247c8:	.word	0x00023728
   247cc:	.word	0x000236b0
   247d0:	.word	0x00023634
   247d4:	.word	0x00022f2c
   247d8:	.word	0x00022f18
   247dc:	.word	0x00022ef8
   247e0:	.word	0x00022ee0
   247e4:	.word	0x00022ecc
   247e8:	.word	0x00022eb8
   247ec:	.word	0x00023070
   247f0:	.word	0x00023098
   247f4:	.word	0x00022e70
   247f8:	.word	0x00022e98
   247fc:	.word	0x00022f34
   24800:	.word	0x000231cc
   24804:	.word	0x00006af3

00024808 <sf_icode_to_fcode>:
   24808:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2480c:	add	fp, sp, #28
   24810:	sub	sp, sp, #4
   24814:	ldr	r5, [pc, #220]	; 248f8 <sf_icode_to_fcode+0xf0>
   24818:	mov	sl, r0
   2481c:	mov	r8, r1
   24820:	ldr	r5, [pc, r5]
   24824:	ldr	r9, [pc, #208]	; 248fc <sf_icode_to_fcode+0xf4>
   24828:	add	r0, r5, #1
   2482c:	add	r9, pc, r9
   24830:	str	r0, [r9]
   24834:	mov	r0, sl
   24838:	bl	24910 <count_stmts>
   2483c:	lsl	r4, r0, #3
   24840:	mov	r7, r0
   24844:	str	r0, [r8]
   24848:	mov	r0, r4
   2484c:	bl	dec <malloc@plt>
   24850:	cmp	r0, #0
   24854:	beq	248e0 <sf_icode_to_fcode+0xd8>
   24858:	mov	r6, r0
   2485c:	mov	r0, r6
   24860:	mov	r1, #0
   24864:	mov	r2, r4
   24868:	bl	e58 <memset@plt>
   2486c:	ldr	r0, [pc, #140]	; 24900 <sf_icode_to_fcode+0xf8>
   24870:	add	r0, pc, r0
   24874:	str	r6, [r0]
   24878:	add	r0, r6, r7, lsl #3
   2487c:	ldr	r1, [pc, #128]	; 24904 <sf_icode_to_fcode+0xfc>
   24880:	add	r1, pc, r1
   24884:	str	r0, [r1]
   24888:	add	r0, r5, #2
   2488c:	str	r0, [r9]
   24890:	mov	r0, sl
   24894:	bl	249a0 <convert_code_r>
   24898:	cmp	r0, #0
   2489c:	bne	248ec <sf_icode_to_fcode+0xe4>
   248a0:	mov	r0, r6
   248a4:	bl	d74 <free@plt>
   248a8:	ldr	r5, [pc, #88]	; 24908 <sf_icode_to_fcode+0x100>
   248ac:	ldr	r5, [pc, r5]
   248b0:	add	r0, r5, #1
   248b4:	str	r0, [r9]
   248b8:	mov	r0, sl
   248bc:	bl	24910 <count_stmts>
   248c0:	lsl	r4, r0, #3
   248c4:	mov	r7, r0
   248c8:	str	r0, [r8]
   248cc:	mov	r0, r4
   248d0:	bl	dec <malloc@plt>
   248d4:	mov	r6, r0
   248d8:	cmp	r0, #0
   248dc:	bne	2485c <sf_icode_to_fcode+0x54>
   248e0:	ldr	r0, [pc, #36]	; 2490c <sf_icode_to_fcode+0x104>
   248e4:	add	r0, pc, r0
   248e8:	bl	2068 <sf_bpf_error>
   248ec:	mov	r0, r6
   248f0:	sub	sp, fp, #28
   248f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   248f8:	.word	0x00022d38
   248fc:	.word	0x00022d2c
   24900:	.word	0x00022cec
   24904:	.word	0x00022ce0
   24908:	.word	0x00022cac
   2490c:	.word	0x00006934

00024910 <count_stmts>:
   24910:	push	{r4, r5, fp, lr}
   24914:	add	fp, sp, #8
   24918:	mov	r4, r0
   2491c:	mov	r0, #0
   24920:	cmp	r4, #0
   24924:	beq	24998 <count_stmts+0x88>
   24928:	ldr	r2, [r4, #24]
   2492c:	ldr	r1, [pc, #104]	; 2499c <count_stmts+0x8c>
   24930:	ldr	r1, [pc, r1]
   24934:	cmp	r2, r1
   24938:	popeq	{r4, r5, fp, pc}
   2493c:	str	r1, [r4, #24]
   24940:	ldr	r0, [r4, #60]	; 0x3c
   24944:	bl	24910 <count_stmts>
   24948:	mov	r5, r0
   2494c:	ldr	r0, [r4, #84]	; 0x54
   24950:	bl	24910 <count_stmts>
   24954:	ldr	r2, [r4, #4]
   24958:	mov	r1, #0
   2495c:	cmp	r2, #0
   24960:	beq	2497c <count_stmts+0x6c>
   24964:	ldr	r3, [r2]
   24968:	ldr	r2, [r2, #16]
   2496c:	cmn	r3, #1
   24970:	addne	r1, r1, #1
   24974:	cmp	r2, #0
   24978:	bne	24964 <count_stmts+0x54>
   2497c:	add	r0, r5, r0
   24980:	ldr	r2, [r4, #32]
   24984:	add	r0, r0, r1
   24988:	ldr	r1, [r4, #28]
   2498c:	add	r0, r0, r1
   24990:	add	r0, r0, r2
   24994:	add	r0, r0, #1
   24998:	pop	{r4, r5, fp, pc}
   2499c:	.word	0x00022c28

000249a0 <convert_code_r>:
   249a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   249a4:	add	fp, sp, #28
   249a8:	sub	sp, sp, #20
   249ac:	cmp	r0, #0
   249b0:	beq	249cc <convert_code_r+0x2c>
   249b4:	mov	r4, r0
   249b8:	ldr	r1, [r0, #24]
   249bc:	ldr	r0, [pc, #836]	; 24d08 <convert_code_r+0x368>
   249c0:	ldr	r0, [pc, r0]
   249c4:	cmp	r1, r0
   249c8:	bne	249dc <convert_code_r+0x3c>
   249cc:	mov	r5, #1
   249d0:	mov	r0, r5
   249d4:	sub	sp, fp, #28
   249d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   249dc:	str	r0, [r4, #24]
   249e0:	ldr	r0, [r4, #84]	; 0x54
   249e4:	bl	249a0 <convert_code_r>
   249e8:	mov	r5, #0
   249ec:	cmp	r0, #0
   249f0:	beq	249d0 <convert_code_r+0x30>
   249f4:	ldr	r0, [r4, #60]	; 0x3c
   249f8:	bl	249a0 <convert_code_r>
   249fc:	cmp	r0, #0
   24a00:	beq	249d0 <convert_code_r+0x30>
   24a04:	ldr	r7, [r4, #4]
   24a08:	mov	r0, #0
   24a0c:	mov	r9, #0
   24a10:	str	r4, [sp, #4]
   24a14:	cmp	r7, #0
   24a18:	beq	24a3c <convert_code_r+0x9c>
   24a1c:	mov	r9, #0
   24a20:	mov	r1, r7
   24a24:	ldr	r2, [r1]
   24a28:	ldr	r1, [r1, #16]
   24a2c:	cmn	r2, #1
   24a30:	addne	r9, r9, #1
   24a34:	cmp	r1, #0
   24a38:	bne	24a24 <convert_code_r+0x84>
   24a3c:	ldr	r3, [sp, #4]
   24a40:	cmp	r9, #0
   24a44:	ldr	r1, [r3, #28]
   24a48:	ldr	r2, [r3, #32]
   24a4c:	add	r1, r9, r1
   24a50:	add	r1, r1, r2
   24a54:	ldr	r2, [pc, #688]	; 24d0c <convert_code_r+0x36c>
   24a58:	ldr	r2, [pc, r2]
   24a5c:	sub	r1, r2, r1, lsl #3
   24a60:	sub	sl, r1, #8
   24a64:	ldr	r1, [pc, #676]	; 24d10 <convert_code_r+0x370>
   24a68:	add	r1, pc, r1
   24a6c:	str	sl, [r1]
   24a70:	ldr	r1, [pc, #668]	; 24d14 <convert_code_r+0x374>
   24a74:	ldr	r1, [pc, r1]
   24a78:	sub	r1, sl, r1
   24a7c:	asr	r1, r1, #3
   24a80:	str	r1, [r3, #40]	; 0x28
   24a84:	beq	24ac8 <convert_code_r+0x128>
   24a88:	mov	r0, r9
   24a8c:	mov	r1, #4
   24a90:	bl	d14 <calloc@plt>
   24a94:	cmp	r0, #0
   24a98:	beq	24cfc <convert_code_r+0x35c>
   24a9c:	cmp	r7, #0
   24aa0:	beq	24ac8 <convert_code_r+0x128>
   24aa4:	mov	r1, #0
   24aa8:	mov	r2, r7
   24aac:	str	r2, [r0, r1, lsl #2]
   24ab0:	add	r1, r1, #1
   24ab4:	cmp	r1, r9
   24ab8:	bcs	24ac8 <convert_code_r+0x128>
   24abc:	ldr	r2, [r2, #16]
   24ac0:	cmp	r2, #0
   24ac4:	bne	24aac <convert_code_r+0x10c>
   24ac8:	cmp	r7, #0
   24acc:	beq	24be4 <convert_code_r+0x244>
   24ad0:	sub	r1, r9, #1
   24ad4:	sub	r3, r9, #2
   24ad8:	mov	r2, #0
   24adc:	str	r0, [sp, #8]
   24ae0:	str	r1, [sp, #16]
   24ae4:	str	r3, [sp, #12]
   24ae8:	b	24b00 <convert_code_r+0x160>
   24aec:	add	r2, r2, #1
   24af0:	add	sl, sl, #8
   24af4:	ldr	r7, [r7, #16]
   24af8:	cmp	r7, #0
   24afc:	beq	24be4 <convert_code_r+0x244>
   24b00:	ldr	r1, [r7]
   24b04:	cmn	r1, #1
   24b08:	beq	24af4 <convert_code_r+0x154>
   24b0c:	strh	r1, [sl]
   24b10:	cmp	r2, r3
   24b14:	ldr	r1, [r7, #12]
   24b18:	str	r1, [sl, #4]
   24b1c:	ldrne	r1, [r7]
   24b20:	cmpne	r1, #5
   24b24:	beq	24aec <convert_code_r+0x14c>
   24b28:	and	r1, r1, #7
   24b2c:	cmp	r1, #5
   24b30:	bne	24aec <convert_code_r+0x14c>
   24b34:	ldr	ip, [r7, #4]
   24b38:	cmp	ip, #0
   24b3c:	ldrne	r1, [r7, #8]
   24b40:	cmpne	r1, #0
   24b44:	beq	24c58 <convert_code_r+0x2b8>
   24b48:	cmp	r9, #1
   24b4c:	blt	24bd0 <convert_code_r+0x230>
   24b50:	ldr	r5, [sp, #16]
   24b54:	eor	r1, r2, #255	; 0xff
   24b58:	mov	r8, #0
   24b5c:	mov	r4, r0
   24b60:	mov	r6, #0
   24b64:	ldr	lr, [r4]
   24b68:	cmp	lr, ip
   24b6c:	bne	24b84 <convert_code_r+0x1e4>
   24b70:	cmp	r6, #0
   24b74:	bne	24ce8 <convert_code_r+0x348>
   24b78:	strb	r1, [sl, #2]
   24b7c:	mov	r6, #1
   24b80:	ldr	lr, [r4]
   24b84:	ldr	r3, [r7, #8]
   24b88:	cmp	lr, r3
   24b8c:	bne	24ba0 <convert_code_r+0x200>
   24b90:	cmp	r8, #0
   24b94:	bne	24ce8 <convert_code_r+0x348>
   24b98:	mov	r8, #1
   24b9c:	strb	r1, [sl, #3]
   24ba0:	cmp	r5, #0
   24ba4:	beq	24bbc <convert_code_r+0x21c>
   24ba8:	ldr	ip, [r7, #4]
   24bac:	add	r1, r1, #1
   24bb0:	add	r4, r4, #4
   24bb4:	sub	r5, r5, #1
   24bb8:	b	24b64 <convert_code_r+0x1c4>
   24bbc:	ldr	r3, [sp, #12]
   24bc0:	ldr	r0, [sp, #8]
   24bc4:	cmp	r6, #0
   24bc8:	cmpne	r8, #0
   24bcc:	bne	24aec <convert_code_r+0x14c>
   24bd0:	ldr	r0, [pc, #340]	; 24d2c <convert_code_r+0x38c>
   24bd4:	ldr	r1, [pc, #340]	; 24d30 <convert_code_r+0x390>
   24bd8:	add	r0, pc, r0
   24bdc:	add	r1, pc, r1
   24be0:	bl	2068 <sf_bpf_error>
   24be4:	cmp	r0, #0
   24be8:	beq	24bf0 <convert_code_r+0x250>
   24bec:	bl	d74 <free@plt>
   24bf0:	ldr	r3, [sp, #4]
   24bf4:	ldr	r0, [r3, #8]
   24bf8:	strh	r0, [sl]
   24bfc:	ldr	r0, [r3, #20]
   24c00:	str	r0, [sl, #4]
   24c04:	ldr	r0, [r3, #60]	; 0x3c
   24c08:	cmp	r0, #0
   24c0c:	beq	249cc <convert_code_r+0x2c>
   24c10:	ldr	r1, [r3, #40]	; 0x28
   24c14:	ldr	r0, [r0, #40]	; 0x28
   24c18:	add	r1, r1, r9
   24c1c:	mvn	r1, r1
   24c20:	add	r0, r0, r1
   24c24:	cmp	r0, #256	; 0x100
   24c28:	bcc	24c6c <convert_code_r+0x2cc>
   24c2c:	ldr	r1, [r3, #28]
   24c30:	cmp	r1, #0
   24c34:	beq	24cc8 <convert_code_r+0x328>
   24c38:	mov	r1, #5
   24c3c:	sub	r0, r0, #1
   24c40:	strh	r1, [sl, #8]
   24c44:	mov	r1, #0
   24c48:	strb	r1, [sl, #2]
   24c4c:	str	r0, [sl, #12]
   24c50:	mov	r0, #1
   24c54:	b	24c74 <convert_code_r+0x2d4>
   24c58:	ldr	r0, [pc, #192]	; 24d20 <convert_code_r+0x380>
   24c5c:	ldr	r1, [pc, #192]	; 24d24 <convert_code_r+0x384>
   24c60:	add	r0, pc, r0
   24c64:	add	r1, pc, r1
   24c68:	bl	2068 <sf_bpf_error>
   24c6c:	strb	r0, [sl, #2]
   24c70:	mov	r0, #0
   24c74:	ldr	r2, [r3, #84]	; 0x54
   24c78:	ldr	r1, [r3, #40]	; 0x28
   24c7c:	ldr	r2, [r2, #40]	; 0x28
   24c80:	add	r1, r1, r9
   24c84:	mvn	r1, r1
   24c88:	add	r1, r2, r1
   24c8c:	cmp	r1, #256	; 0x100
   24c90:	bcc	24cc0 <convert_code_r+0x320>
   24c94:	ldr	r2, [r3, #32]
   24c98:	cmp	r2, #0
   24c9c:	beq	24cd8 <convert_code_r+0x338>
   24ca0:	strb	r0, [sl, #3]
   24ca4:	add	r0, r0, #1
   24ca8:	mov	r3, #5
   24cac:	lsl	r2, r0, #3
   24cb0:	sub	r0, r1, r0
   24cb4:	strh	r3, [sl, r2]!
   24cb8:	str	r0, [sl, #4]
   24cbc:	b	249cc <convert_code_r+0x2c>
   24cc0:	strb	r1, [sl, #3]
   24cc4:	b	249cc <convert_code_r+0x2c>
   24cc8:	mov	r0, #1
   24ccc:	mov	r5, #0
   24cd0:	str	r0, [r3, #28]
   24cd4:	b	249d0 <convert_code_r+0x30>
   24cd8:	mov	r0, #1
   24cdc:	mov	r5, #0
   24ce0:	str	r0, [r3, #32]
   24ce4:	b	249d0 <convert_code_r+0x30>
   24ce8:	ldr	r0, [pc, #40]	; 24d18 <convert_code_r+0x378>
   24cec:	ldr	r1, [pc, #40]	; 24d1c <convert_code_r+0x37c>
   24cf0:	add	r0, pc, r0
   24cf4:	add	r1, pc, r1
   24cf8:	bl	2068 <sf_bpf_error>
   24cfc:	ldr	r0, [pc, #36]	; 24d28 <convert_code_r+0x388>
   24d00:	add	r0, pc, r0
   24d04:	bl	2068 <sf_bpf_error>
   24d08:	.word	0x00022b98
   24d0c:	.word	0x00022b08
   24d10:	.word	0x00022af8
   24d14:	.word	0x00022ae8
   24d18:	.word	0x00006550
   24d1c:	.word	0x00006588
   24d20:	.word	0x000065e0
   24d24:	.word	0x00006605
   24d28:	.word	0x00006530
   24d2c:	.word	0x00006668
   24d30:	.word	0x000066b1

00024d34 <find_levels_r>:
   24d34:	push	{r4, sl, fp, lr}
   24d38:	add	fp, sp, #8
   24d3c:	mov	r4, r0
   24d40:	ldr	r1, [r0, #24]
   24d44:	ldr	r0, [pc, #100]	; 24db0 <find_levels_r+0x7c>
   24d48:	ldr	r0, [pc, r0]
   24d4c:	cmp	r1, r0
   24d50:	popeq	{r4, sl, fp, pc}
   24d54:	mov	r1, #0
   24d58:	str	r1, [r4, #100]	; 0x64
   24d5c:	str	r0, [r4, #24]
   24d60:	ldr	r0, [r4, #60]	; 0x3c
   24d64:	cmp	r0, #0
   24d68:	beq	24d94 <find_levels_r+0x60>
   24d6c:	bl	24d34 <find_levels_r>
   24d70:	ldr	r0, [r4, #84]	; 0x54
   24d74:	bl	24d34 <find_levels_r>
   24d78:	ldr	r0, [r4, #60]	; 0x3c
   24d7c:	ldr	r1, [r4, #84]	; 0x54
   24d80:	ldr	r0, [r0, #36]	; 0x24
   24d84:	ldr	r1, [r1, #36]	; 0x24
   24d88:	cmp	r0, r1
   24d8c:	movgt	r1, r0
   24d90:	add	r1, r1, #1
   24d94:	str	r1, [r4, #36]	; 0x24
   24d98:	ldr	r0, [pc, #20]	; 24db4 <find_levels_r+0x80>
   24d9c:	ldr	r0, [pc, r0]
   24da0:	ldr	r2, [r0, r1, lsl #2]
   24da4:	str	r2, [r4, #100]	; 0x64
   24da8:	str	r4, [r0, r1, lsl #2]
   24dac:	pop	{r4, sl, fp, pc}
   24db0:	.word	0x00022810
   24db4:	.word	0x00022c10

00024db8 <opt_j>:
   24db8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24dbc:	add	fp, sp, #28
   24dc0:	sub	sp, sp, #24
   24dc4:	ldr	r1, [r0, #12]
   24dc8:	str	r0, [sp, #8]
   24dcc:	ldr	r5, [r1, #60]	; 0x3c
   24dd0:	cmp	r5, #0
   24dd4:	beq	24fec <opt_j+0x234>
   24dd8:	ldr	r0, [r1, #84]	; 0x54
   24ddc:	cmp	r5, r0
   24de0:	beq	24dec <opt_j+0x34>
   24de4:	mov	r5, r1
   24de8:	b	24e58 <opt_j+0xa0>
   24dec:	ldr	r2, [r5, #128]	; 0x80
   24df0:	cmp	r2, #0
   24df4:	beq	24e40 <opt_j+0x88>
   24df8:	ldr	r0, [sp, #8]
   24dfc:	add	r3, r5, #136	; 0x88
   24e00:	mov	r7, #0
   24e04:	mov	ip, #1
   24e08:	ldr	r0, [r0, #16]
   24e0c:	add	r0, r0, #136	; 0x88
   24e10:	tst	r2, ip, lsl r7
   24e14:	bne	24e2c <opt_j+0x74>
   24e18:	add	r7, r7, #1
   24e1c:	cmp	r7, #18
   24e20:	beq	24e40 <opt_j+0x88>
   24e24:	tst	r2, ip, lsl r7
   24e28:	beq	24e18 <opt_j+0x60>
   24e2c:	ldr	r6, [r3, r7, lsl #2]
   24e30:	ldr	r4, [r0, r7, lsl #2]
   24e34:	cmp	r4, r6
   24e38:	beq	24e18 <opt_j+0x60>
   24e3c:	b	24de4 <opt_j+0x2c>
   24e40:	ldr	r0, [pc, #428]	; 24ff4 <opt_j+0x23c>
   24e44:	mov	r1, #0
   24e48:	add	r0, pc, r0
   24e4c:	strb	r1, [r0]
   24e50:	ldr	r0, [sp, #8]
   24e54:	str	r5, [r0, #12]
   24e58:	ldr	r0, [pc, #408]	; 24ff8 <opt_j+0x240>
   24e5c:	ldr	r0, [pc, r0]
   24e60:	cmp	r0, #1
   24e64:	str	r0, [sp]
   24e68:	blt	24fec <opt_j+0x234>
   24e6c:	ldr	r0, [sp, #8]
   24e70:	mov	r1, #1
   24e74:	ldr	r0, [r0, #8]
   24e78:	str	r0, [sp, #4]
   24e7c:	ldr	r0, [pc, #376]	; 24ffc <opt_j+0x244>
   24e80:	ldr	r0, [pc, r0]
   24e84:	str	r0, [sp, #20]
   24e88:	b	24eb4 <opt_j+0xfc>
   24e8c:	ldr	r2, [pc, #364]	; 25000 <opt_j+0x248>
   24e90:	mov	r0, #0
   24e94:	mov	r5, r9
   24e98:	add	r2, pc, r2
   24e9c:	strb	r0, [r2]
   24ea0:	ldr	r0, [sp, #8]
   24ea4:	str	r9, [r0, #12]
   24ea8:	ldr	r0, [r9, #60]	; 0x3c
   24eac:	cmp	r0, #0
   24eb0:	beq	24fec <opt_j+0x234>
   24eb4:	add	r0, r5, #84	; 0x54
   24eb8:	mov	r2, #0
   24ebc:	str	r0, [sp, #12]
   24ec0:	b	24ed8 <opt_j+0x120>
   24ec4:	ldr	r2, [sp, #16]
   24ec8:	ldr	r0, [sp]
   24ecc:	add	r2, r2, #1
   24ed0:	cmp	r2, r0
   24ed4:	beq	24fec <opt_j+0x234>
   24ed8:	ldr	r0, [sp, #4]
   24edc:	str	r2, [sp, #16]
   24ee0:	ldr	r2, [r0, r2, lsl #2]
   24ee4:	cmp	r2, #0
   24ee8:	beq	24ec4 <opt_j+0x10c>
   24eec:	ldr	r0, [sp, #16]
   24ef0:	ldr	lr, [r5, #8]
   24ef4:	lsl	r6, r0, #5
   24ef8:	b	24f08 <opt_j+0x150>
   24efc:	bic	r2, r2, r1, lsl r8
   24f00:	cmp	r2, #0
   24f04:	beq	24ec4 <opt_j+0x10c>
   24f08:	ldr	r3, [sp, #20]
   24f0c:	rbit	r0, r2
   24f10:	mov	r4, #0
   24f14:	clz	r8, r0
   24f18:	orr	r0, r8, r6
   24f1c:	ldr	r0, [r3, r0, lsl #2]
   24f20:	ldr	ip, [r0, #4]
   24f24:	cmn	ip, #1
   24f28:	mov	r3, ip
   24f2c:	movwgt	r4, #1
   24f30:	cmp	ip, #0
   24f34:	rsbmi	r3, ip, #0
   24f38:	cmp	lr, r3
   24f3c:	bne	24efc <opt_j+0x144>
   24f40:	ldr	r0, [r0, #16]
   24f44:	ldr	r3, [r5, #200]	; 0xc8
   24f48:	ldr	r7, [r0, #200]	; 0xc8
   24f4c:	cmp	r3, r7
   24f50:	bne	24efc <opt_j+0x144>
   24f54:	ldr	r0, [r0, #132]	; 0x84
   24f58:	ldr	r3, [r5, #132]	; 0x84
   24f5c:	cmp	r3, r0
   24f60:	bne	24f74 <opt_j+0x1bc>
   24f64:	cmp	ip, #0
   24f68:	ldr	r0, [sp, #12]
   24f6c:	addpl	r0, r5, #60	; 0x3c
   24f70:	b	24f8c <opt_j+0x1d4>
   24f74:	subs	r0, lr, #21
   24f78:	eor	r3, r4, #1
   24f7c:	movwne	r0, #1
   24f80:	orrs	r0, r0, r3
   24f84:	ldr	r0, [sp, #12]
   24f88:	bne	24efc <opt_j+0x144>
   24f8c:	ldr	r0, [r0]
   24f90:	cmp	r0, #0
   24f94:	beq	24efc <opt_j+0x144>
   24f98:	ldr	r3, [r0, #128]	; 0x80
   24f9c:	mov	r9, r0
   24fa0:	cmp	r3, #0
   24fa4:	beq	24e8c <opt_j+0xd4>
   24fa8:	ldr	r0, [sp, #8]
   24fac:	add	r4, r9, #136	; 0x88
   24fb0:	mov	sl, #0
   24fb4:	ldr	r0, [r0, #16]
   24fb8:	add	r0, r0, #136	; 0x88
   24fbc:	tst	r3, r1, lsl sl
   24fc0:	bne	24fd8 <opt_j+0x220>
   24fc4:	add	sl, sl, #1
   24fc8:	cmp	sl, #18
   24fcc:	beq	24e8c <opt_j+0xd4>
   24fd0:	tst	r3, r1, lsl sl
   24fd4:	beq	24fc4 <opt_j+0x20c>
   24fd8:	ldr	r7, [r4, sl, lsl #2]
   24fdc:	ldr	ip, [r0, sl, lsl #2]
   24fe0:	cmp	ip, r7
   24fe4:	beq	24fc4 <opt_j+0x20c>
   24fe8:	b	24efc <opt_j+0x144>
   24fec:	sub	sp, fp, #28
   24ff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24ff4:	.word	0x0002271c
   24ff8:	.word	0x00022724
   24ffc:	.word	0x00022b34
   25000:	.word	0x000226cc

00025004 <deadstmt>:
   25004:	push	{r4, sl, fp, lr}
   25008:	add	fp, sp, #8
   2500c:	ldr	r3, [r0]
   25010:	cmn	r3, #1
   25014:	beq	2516c <deadstmt+0x168>
   25018:	and	lr, r3, #7
   2501c:	add	r4, pc, #8
   25020:	mov	ip, #16
   25024:	ldr	r2, [r4, lr, lsl #2]
   25028:	add	pc, r4, r2
   2502c:	.word	0x00000020
   25030:	.word	0x00000020
   25034:	.word	0x000000a4
   25038:	.word	0x00000050
   2503c:	.word	0x00000044
   25040:	.word	0x00000044
   25044:	.word	0x00000058
   25048:	.word	0x00000094
   2504c:	and	r2, r3, #224	; 0xe0
   25050:	cmp	r2, #64	; 0x40
   25054:	beq	2507c <deadstmt+0x78>
   25058:	cmp	r2, #96	; 0x60
   2505c:	bne	250d8 <deadstmt+0xd4>
   25060:	ldr	r3, [r0, #12]
   25064:	cmp	r3, #0
   25068:	bpl	250a4 <deadstmt+0xa0>
   2506c:	b	250d8 <deadstmt+0xd4>
   25070:	tst	r3, #8
   25074:	bne	250b0 <deadstmt+0xac>
   25078:	b	250d0 <deadstmt+0xcc>
   2507c:	mov	ip, #17
   25080:	b	250d0 <deadstmt+0xcc>
   25084:	and	r2, r3, #24
   25088:	mvn	r3, #0
   2508c:	cmp	r2, #8
   25090:	movweq	r3, #17
   25094:	cmp	r2, #16
   25098:	beq	250d0 <deadstmt+0xcc>
   2509c:	cmp	r3, #0
   250a0:	bmi	250d8 <deadstmt+0xd4>
   250a4:	cmp	r3, #18
   250a8:	mov	ip, r3
   250ac:	bne	250d0 <deadstmt+0xcc>
   250b0:	mov	r2, #0
   250b4:	str	r2, [r1, #64]	; 0x40
   250b8:	str	r2, [r1, #68]	; 0x44
   250bc:	b	250d8 <deadstmt+0xd4>
   250c0:	and	r2, r3, #248	; 0xf8
   250c4:	mov	ip, #16
   250c8:	cmp	r2, #128	; 0x80
   250cc:	movweq	ip, #17
   250d0:	mov	r2, #0
   250d4:	str	r2, [r1, ip, lsl #2]
   250d8:	ldr	r3, [r0]
   250dc:	cmn	r3, #1
   250e0:	beq	2516c <deadstmt+0x168>
   250e4:	and	r2, r3, #7
   250e8:	cmp	r2, #7
   250ec:	bhi	2516c <deadstmt+0x168>
   250f0:	add	r4, pc, #8
   250f4:	mov	ip, #16
   250f8:	ldr	r2, [r4, r2, lsl #2]
   250fc:	add	pc, r4, r2
   25100:	.word	0x00000044
   25104:	.word	0x00000030
   25108:	.word	0x00000020
   2510c:	.word	0x00000020
   25110:	.word	0x00000044
   25114:	.word	0x0000006c
   25118:	.word	0x0000006c
   2511c:	.word	0x00000038
   25120:	ldr	ip, [r0, #12]
   25124:	cmp	ip, #0
   25128:	popmi	{r4, sl, fp, pc}
   2512c:	b	25144 <deadstmt+0x140>
   25130:	mov	ip, #17
   25134:	b	25144 <deadstmt+0x140>
   25138:	tst	r3, #248	; 0xf8
   2513c:	mov	ip, #16
   25140:	movweq	ip, #17
   25144:	ldr	r3, [r1, ip, lsl #2]
   25148:	cmp	r3, #0
   2514c:	beq	25168 <deadstmt+0x164>
   25150:	ldr	r2, [pc, #24]	; 25170 <deadstmt+0x16c>
   25154:	mov	r4, #0
   25158:	add	r2, pc, r2
   2515c:	strb	r4, [r2]
   25160:	mvn	r2, #0
   25164:	str	r2, [r3]
   25168:	str	r0, [r1, ip, lsl #2]
   2516c:	pop	{r4, sl, fp, pc}
   25170:	.word	0x0002240c

00025174 <make_marks>:
   25174:	push	{r4, r5, fp, lr}
   25178:	add	fp, sp, #8
   2517c:	mov	r4, r0
   25180:	ldr	r0, [r0, #24]
   25184:	ldr	r5, [pc, #48]	; 251bc <make_marks+0x48>
   25188:	ldr	r5, [pc, r5]
   2518c:	b	251a0 <make_marks+0x2c>
   25190:	ldr	r0, [r4, #60]	; 0x3c
   25194:	bl	25174 <make_marks>
   25198:	ldr	r4, [r4, #84]	; 0x54
   2519c:	ldr	r0, [r4, #24]
   251a0:	cmp	r0, r5
   251a4:	strne	r5, [r4, #24]
   251a8:	ldrne	r0, [r4, #8]
   251ac:	andne	r0, r0, #7
   251b0:	cmpne	r0, #6
   251b4:	bne	25190 <make_marks+0x1c>
   251b8:	pop	{r4, r5, fp, pc}
   251bc:	.word	0x000223d0

000251c0 <count_blocks>:
   251c0:	push	{r4, r5, fp, lr}
   251c4:	add	fp, sp, #8
   251c8:	cmp	r0, #0
   251cc:	beq	251e8 <count_blocks+0x28>
   251d0:	mov	r4, r0
   251d4:	ldr	r1, [r0, #24]
   251d8:	ldr	r0, [pc, #52]	; 25214 <count_blocks+0x54>
   251dc:	ldr	r0, [pc, r0]
   251e0:	cmp	r1, r0
   251e4:	bne	251f0 <count_blocks+0x30>
   251e8:	mov	r0, #0
   251ec:	pop	{r4, r5, fp, pc}
   251f0:	str	r0, [r4, #24]
   251f4:	ldr	r0, [r4, #60]	; 0x3c
   251f8:	bl	251c0 <count_blocks>
   251fc:	mov	r5, r0
   25200:	ldr	r0, [r4, #84]	; 0x54
   25204:	bl	251c0 <count_blocks>
   25208:	add	r0, r5, r0
   2520c:	add	r0, r0, #1
   25210:	pop	{r4, r5, fp, pc}
   25214:	.word	0x0002237c

00025218 <number_blks_r>:
   25218:	push	{r4, r5, r6, sl, fp, lr}
   2521c:	add	fp, sp, #16
   25220:	cmp	r0, #0
   25224:	beq	25280 <number_blks_r+0x68>
   25228:	ldr	r5, [pc, #84]	; 25284 <number_blks_r+0x6c>
   2522c:	mov	r4, r0
   25230:	ldr	r5, [pc, r5]
   25234:	ldr	r6, [pc, #76]	; 25288 <number_blks_r+0x70>
   25238:	add	r6, pc, r6
   2523c:	ldr	r0, [r4, #24]
   25240:	cmp	r0, r5
   25244:	beq	25280 <number_blks_r+0x68>
   25248:	str	r5, [r4, #24]
   2524c:	ldr	r0, [pc, #56]	; 2528c <number_blks_r+0x74>
   25250:	ldr	r0, [pc, r0]
   25254:	add	r1, r0, #1
   25258:	str	r1, [r6]
   2525c:	str	r0, [r4]
   25260:	ldr	r1, [pc, #40]	; 25290 <number_blks_r+0x78>
   25264:	ldr	r1, [pc, r1]
   25268:	str	r4, [r1, r0, lsl #2]
   2526c:	ldr	r0, [r4, #60]	; 0x3c
   25270:	bl	25218 <number_blks_r>
   25274:	ldr	r4, [r4, #84]	; 0x54
   25278:	cmp	r4, #0
   2527c:	bne	2523c <number_blks_r+0x24>
   25280:	pop	{r4, r5, r6, sl, fp, pc}
   25284:	.word	0x00022328
   25288:	.word	0x00022330
   2528c:	.word	0x00022318
   25290:	.word	0x0002274c

00025294 <sfbpf_strcasecmp>:
   25294:	push	{fp, lr}
   25298:	mov	fp, sp
   2529c:	ldr	ip, [pc, #56]	; 252dc <sfbpf_strcasecmp+0x48>
   252a0:	add	ip, pc, ip
   252a4:	ldrb	r2, [r1]
   252a8:	ldrb	r3, [r0]
   252ac:	ldrb	lr, [ip, r2]
   252b0:	ldrb	r2, [ip, r3]
   252b4:	cmp	r2, lr
   252b8:	bne	252d4 <sfbpf_strcasecmp+0x40>
   252bc:	add	r0, r0, #1
   252c0:	add	r1, r1, #1
   252c4:	cmp	r3, #0
   252c8:	bne	252a4 <sfbpf_strcasecmp+0x10>
   252cc:	mov	r0, #0
   252d0:	pop	{fp, pc}
   252d4:	sub	r0, r2, lr
   252d8:	pop	{fp, pc}
   252dc:	.word	0x00006002

000252e0 <pcap_next_etherent>:
   252e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   252e4:	add	fp, sp, #24
   252e8:	ldr	r8, [pc, #580]	; 25534 <pcap_next_etherent+0x254>
   252ec:	vmov.i32	q8, #0	; 0x00000000
   252f0:	mov	r5, r0
   252f4:	mov	r0, #112	; 0x70
   252f8:	add	r8, pc, r8
   252fc:	mov	r1, r8
   25300:	vst1.64	{d16-d17}, [r1], r0
   25304:	add	r0, r8, #96	; 0x60
   25308:	vst1.64	{d16-d17}, [r0]
   2530c:	add	r0, r8, #80	; 0x50
   25310:	vst1.64	{d16-d17}, [r1]
   25314:	vst1.64	{d16-d17}, [r0]
   25318:	add	r0, r8, #64	; 0x40
   2531c:	vst1.64	{d16-d17}, [r0]
   25320:	add	r0, r8, #48	; 0x30
   25324:	vst1.64	{d16-d17}, [r0]
   25328:	add	r0, r8, #32
   2532c:	vst1.64	{d16-d17}, [r0]
   25330:	add	r0, r8, #16
   25334:	vst1.64	{d16-d17}, [r0]
   25338:	b	25344 <pcap_next_etherent+0x64>
   2533c:	cmn	r0, #1
   25340:	beq	254c8 <pcap_next_etherent+0x1e8>
   25344:	mov	r0, r5
   25348:	bl	ee8 <getc@plt>
   2534c:	mov	r7, r0
   25350:	bl	e04 <__ctype_b_loc@plt>
   25354:	mov	r9, r0
   25358:	ldr	r0, [r0]
   2535c:	cmp	r7, #10
   25360:	add	r0, r0, r7, lsl #1
   25364:	ldrh	r1, [r0]
   25368:	andsne	r0, r1, #8192	; 0x2000
   2536c:	bne	25344 <pcap_next_etherent+0x64>
   25370:	mov	r0, #10
   25374:	cmp	r7, #10
   25378:	beq	2533c <pcap_next_etherent+0x5c>
   2537c:	tst	r1, #4096	; 0x1000
   25380:	bne	253a0 <pcap_next_etherent+0xc0>
   25384:	mov	r0, r5
   25388:	bl	ee8 <getc@plt>
   2538c:	cmn	r0, #1
   25390:	beq	2533c <pcap_next_etherent+0x5c>
   25394:	cmp	r0, #10
   25398:	bne	25384 <pcap_next_etherent+0xa4>
   2539c:	b	2533c <pcap_next_etherent+0x5c>
   253a0:	mov	r4, #0
   253a4:	mvn	r0, #47	; 0x2f
   253a8:	tst	r1, #2048	; 0x800
   253ac:	bne	253c0 <pcap_next_etherent+0xe0>
   253b0:	uxth	r0, r1
   253b4:	tst	r0, #512	; 0x200
   253b8:	mvn	r0, #86	; 0x56
   253bc:	mvneq	r0, #54	; 0x36
   253c0:	add	r6, r7, r0
   253c4:	mov	r0, r5
   253c8:	bl	ee8 <getc@plt>
   253cc:	mov	r7, r0
   253d0:	ldr	r0, [r9]
   253d4:	add	r0, r0, r7, lsl #1
   253d8:	ldrh	r1, [r0]
   253dc:	tst	r1, #4096	; 0x1000
   253e0:	beq	25414 <pcap_next_etherent+0x134>
   253e4:	lsl	r0, r6, #4
   253e8:	mvn	r2, #47	; 0x2f
   253ec:	tst	r1, #2048	; 0x800
   253f0:	bne	25400 <pcap_next_etherent+0x120>
   253f4:	tst	r1, #512	; 0x200
   253f8:	mvn	r2, #86	; 0x56
   253fc:	mvneq	r2, #54	; 0x36
   25400:	add	r1, r7, r2
   25404:	orr	r6, r1, r0
   25408:	mov	r0, r5
   2540c:	bl	ee8 <getc@plt>
   25410:	mov	r7, r0
   25414:	cmp	r7, #58	; 0x3a
   25418:	strb	r6, [r8, -r4]
   2541c:	bne	25448 <pcap_next_etherent+0x168>
   25420:	mov	r0, r5
   25424:	bl	ee8 <getc@plt>
   25428:	mov	r7, r0
   2542c:	cmn	r4, #5
   25430:	beq	25448 <pcap_next_etherent+0x168>
   25434:	ldr	r0, [r9]
   25438:	sub	r4, r4, #1
   2543c:	add	r0, r0, r7, lsl #1
   25440:	ldrh	r1, [r0]
   25444:	b	253a4 <pcap_next_etherent+0xc4>
   25448:	cmn	r7, #1
   2544c:	beq	254c8 <pcap_next_etherent+0x1e8>
   25450:	ldr	r0, [r9]
   25454:	add	r0, r0, r7, lsl #1
   25458:	ldrb	r0, [r0, #1]
   2545c:	tst	r0, #32
   25460:	bne	25480 <pcap_next_etherent+0x1a0>
   25464:	mov	r0, r5
   25468:	bl	ee8 <getc@plt>
   2546c:	cmn	r0, #1
   25470:	beq	2533c <pcap_next_etherent+0x5c>
   25474:	cmp	r0, #10
   25478:	bne	25464 <pcap_next_etherent+0x184>
   2547c:	b	2533c <pcap_next_etherent+0x5c>
   25480:	mov	r0, r5
   25484:	bl	ee8 <getc@plt>
   25488:	cmp	r0, #10
   2548c:	ldrne	r1, [r9]
   25490:	addne	r1, r1, r0, lsl #1
   25494:	ldrhne	r1, [r1]
   25498:	andsne	r1, r1, #8192	; 0x2000
   2549c:	bne	25480 <pcap_next_etherent+0x1a0>
   254a0:	cmp	r0, #10
   254a4:	beq	2533c <pcap_next_etherent+0x5c>
   254a8:	cmp	r0, #35	; 0x23
   254ac:	bne	254d4 <pcap_next_etherent+0x1f4>
   254b0:	mov	r0, r5
   254b4:	bl	ee8 <getc@plt>
   254b8:	cmn	r0, #1
   254bc:	cmpne	r0, #10
   254c0:	bne	254b0 <pcap_next_etherent+0x1d0>
   254c4:	b	2533c <pcap_next_etherent+0x5c>
   254c8:	mov	r8, #0
   254cc:	mov	r0, r8
   254d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   254d4:	mvn	r4, #5
   254d8:	strb	r0, [r8, -r4]
   254dc:	mov	r0, r5
   254e0:	bl	ee8 <getc@plt>
   254e4:	ldr	r1, [r9]
   254e8:	add	r1, r1, r0, lsl #1
   254ec:	ldrb	r2, [r1, #1]
   254f0:	sub	r1, r4, #1
   254f4:	tst	r2, #32
   254f8:	bne	25510 <pcap_next_etherent+0x230>
   254fc:	cmn	r0, #1
   25500:	beq	25510 <pcap_next_etherent+0x230>
   25504:	cmn	r4, #126	; 0x7e
   25508:	mov	r4, r1
   2550c:	bne	254d8 <pcap_next_etherent+0x1f8>
   25510:	mov	r2, #0
   25514:	strb	r2, [r8, -r1]
   25518:	cmp	r0, #10
   2551c:	beq	254cc <pcap_next_etherent+0x1ec>
   25520:	mov	r0, r5
   25524:	bl	ee8 <getc@plt>
   25528:	cmn	r0, #1
   2552c:	bne	25518 <pcap_next_etherent+0x238>
   25530:	b	254cc <pcap_next_etherent+0x1ec>
   25534:	.word	0x000225f0

00025538 <sfbpf_parse>:
   25538:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2553c:	add	fp, sp, #28
   25540:	sub	sp, sp, #564	; 0x234
   25544:	sub	sp, sp, #3072	; 0xc00
   25548:	ldr	r0, [pc, #4084]	; 26544 <sfbpf_parse+0x100c>
   2554c:	mov	sl, #0
   25550:	sub	r4, fp, #432	; 0x1b0
   25554:	mvn	r1, #1
   25558:	add	r9, sp, #32
   2555c:	mov	ip, #200	; 0xc8
   25560:	mov	r6, #15
   25564:	mov	r8, r4
   25568:	add	r0, pc, r0
   2556c:	str	sl, [r0]
   25570:	ldr	r0, [pc, #4092]	; 26574 <sfbpf_parse+0x103c>
   25574:	str	r9, [sp, #20]
   25578:	add	r0, pc, r0
   2557c:	str	r1, [r0]
   25580:	b	255a0 <sfbpf_parse+0x68>
   25584:	ldr	r1, [pc, #4076]	; 26578 <sfbpf_parse+0x1040>
   25588:	add	r1, pc, r1
   2558c:	add	r0, r1, r0, lsl #1
   25590:	ldrsh	sl, [r0]
   25594:	ldr	r4, [sp, #24]
   25598:	mov	r6, #15
   2559c:	add	r8, r8, #2
   255a0:	add	r0, r4, ip, lsl #1
   255a4:	strh	sl, [r8]
   255a8:	sub	r0, r0, #2
   255ac:	cmp	r0, r8
   255b0:	bhi	25668 <sfbpf_parse+0x130>
   255b4:	movw	r0, #9999	; 0x270f
   255b8:	cmp	ip, r0
   255bc:	bhi	26c84 <sfbpf_parse+0x174c>
   255c0:	lsl	r0, ip, #1
   255c4:	movw	r1, #10000	; 0x2710
   255c8:	movw	r7, #10000	; 0x2710
   255cc:	cmp	r0, r1
   255d0:	lslcc	r7, ip, #1
   255d4:	add	r0, r7, r7, lsl #3
   255d8:	add	r0, r6, r0, lsl #1
   255dc:	bl	dec <malloc@plt>
   255e0:	cmp	r0, #0
   255e4:	beq	26c84 <sfbpf_parse+0x174c>
   255e8:	mov	r5, r0
   255ec:	sub	r0, r8, r4
   255f0:	mov	r1, #1
   255f4:	mov	r8, r4
   255f8:	add	r4, r1, r0, asr #1
   255fc:	asr	r9, r0, #1
   25600:	mov	r0, r5
   25604:	mov	r1, r8
   25608:	lsl	r2, r4, #1
   2560c:	bl	d98 <memcpy@plt>
   25610:	add	r0, r6, r7, lsl #1
   25614:	ldr	r1, [sp, #20]
   25618:	lsl	r2, r4, #4
   2561c:	bic	r0, r0, #15
   25620:	add	r6, r5, r0
   25624:	mov	r0, r6
   25628:	bl	d98 <memcpy@plt>
   2562c:	sub	r0, fp, #432	; 0x1b0
   25630:	cmp	r8, r0
   25634:	beq	25640 <sfbpf_parse+0x108>
   25638:	mov	r0, r8
   2563c:	bl	d74 <free@plt>
   25640:	add	r0, r5, r7, lsl #1
   25644:	add	r8, r5, r9, lsl #1
   25648:	sub	r0, r0, #2
   2564c:	cmp	r0, r8
   25650:	bls	26c68 <sfbpf_parse+0x1730>
   25654:	add	r9, r6, r9, lsl #4
   25658:	str	r6, [sp, #20]
   2565c:	mov	ip, r7
   25660:	mov	r4, r5
   25664:	mov	r6, #15
   25668:	cmp	sl, #3
   2566c:	beq	26c54 <sfbpf_parse+0x171c>
   25670:	ldr	r0, [pc, #4044]	; 26644 <sfbpf_parse+0x110c>
   25674:	str	r4, [sp, #24]
   25678:	add	r0, pc, r0
   2567c:	add	r0, r0, sl, lsl #1
   25680:	ldrsh	r5, [r0]
   25684:	cmn	r5, #198	; 0xc6
   25688:	beq	25754 <sfbpf_parse+0x21c>
   2568c:	ldr	r0, [pc, #4092]	; 26690 <sfbpf_parse+0x1158>
   25690:	ldr	r0, [pc, r0]
   25694:	cmn	r0, #2
   25698:	bne	256b4 <sfbpf_parse+0x17c>
   2569c:	mov	r7, ip
   256a0:	bl	26e64 <sfbpf_lex>
   256a4:	ldr	r1, [pc, #4084]	; 266a0 <sfbpf_parse+0x1168>
   256a8:	mov	ip, r7
   256ac:	add	r1, pc, r1
   256b0:	str	r0, [r1]
   256b4:	cmp	r0, #0
   256b8:	ble	256dc <sfbpf_parse+0x1a4>
   256bc:	lsr	r2, r0, #1
   256c0:	mov	r1, #2
   256c4:	cmp	r2, #182	; 0xb6
   256c8:	bhi	256ec <sfbpf_parse+0x1b4>
   256cc:	ldr	r1, [pc, #4092]	; 266d0 <sfbpf_parse+0x1198>
   256d0:	add	r1, pc, r1
   256d4:	ldrb	r1, [r1, r0]
   256d8:	b	256ec <sfbpf_parse+0x1b4>
   256dc:	ldr	r0, [pc, #4088]	; 266dc <sfbpf_parse+0x11a4>
   256e0:	mov	r1, #0
   256e4:	add	r0, pc, r0
   256e8:	str	r1, [r0]
   256ec:	add	r0, r1, r5
   256f0:	movw	r2, #669	; 0x29d
   256f4:	cmp	r0, r2
   256f8:	bhi	25754 <sfbpf_parse+0x21c>
   256fc:	ldr	r2, [pc, #4088]	; 266fc <sfbpf_parse+0x11c4>
   25700:	add	r2, pc, r2
   25704:	add	r2, r2, r0, lsl #1
   25708:	ldrsh	r2, [r2]
   2570c:	cmp	r1, r2
   25710:	bne	25754 <sfbpf_parse+0x21c>
   25714:	ldr	r1, [pc, #4076]	; 26708 <sfbpf_parse+0x11d0>
   25718:	add	r1, pc, r1
   2571c:	add	r0, r1, r0, lsl #1
   25720:	ldrsh	sl, [r0]
   25724:	cmp	sl, #0
   25728:	ble	25aec <sfbpf_parse+0x5b4>
   2572c:	ldr	r0, [pc, #4092]	; 26730 <sfbpf_parse+0x11f8>
   25730:	add	r9, r9, #16
   25734:	mvn	r1, #1
   25738:	add	r0, pc, r0
   2573c:	vld1.32	{d16-d17}, [r0]
   25740:	ldr	r0, [pc, #4076]	; 26734 <sfbpf_parse+0x11fc>
   25744:	add	r0, pc, r0
   25748:	str	r1, [r0]
   2574c:	vst1.32	{d16-d17}, [r9]
   25750:	b	2559c <sfbpf_parse+0x64>
   25754:	ldr	r0, [pc, #4092]	; 26758 <sfbpf_parse+0x1220>
   25758:	add	r0, pc, r0
   2575c:	ldrb	r7, [r0, sl]
   25760:	cmp	r7, #0
   25764:	beq	26c98 <sfbpf_parse+0x1760>
   25768:	ldr	r0, [pc, #4076]	; 2675c <sfbpf_parse+0x1224>
   2576c:	mov	r1, r9
   25770:	add	r0, pc, r0
   25774:	ldrb	r3, [r0, r7]
   25778:	rsb	r0, r3, #1
   2577c:	ldr	r6, [r1, r0, lsl #4]!
   25780:	sub	r0, r7, #2
   25784:	cmp	r0, #200	; 0xc8
   25788:	ldr	lr, [r1, #4]
   2578c:	ldr	r2, [r1, #8]
   25790:	ldr	r1, [r1, #12]
   25794:	lsr	r5, r6, #24
   25798:	lsr	r4, r6, #16
   2579c:	lsr	sl, r6, #8
   257a0:	str	r1, [sp, #28]
   257a4:	bhi	269cc <sfbpf_parse+0x1494>
   257a8:	add	r1, pc, #4
   257ac:	ldr	r0, [r1, r0, lsl #2]
   257b0:	add	pc, r1, r0
   257b4:	.word	0x00001068
   257b8:	.word	0x00001218
   257bc:	.word	0x00000df4
   257c0:	.word	0x00001218
   257c4:	.word	0x00000358
   257c8:	.word	0x00000358
   257cc:	.word	0x00000340
   257d0:	.word	0x00000340
   257d4:	.word	0x00000324
   257d8:	.word	0x00000324
   257dc:	.word	0x00001218
   257e0:	.word	0x000003a8
   257e4:	.word	0x00000324
   257e8:	.word	0x00000680
   257ec:	.word	0x000004b4
   257f0:	.word	0x000005bc
   257f4:	.word	0x000004d8
   257f8:	.word	0x0000046c
   257fc:	.word	0x000011d0
   25800:	.word	0x000011ac
   25804:	.word	0x000012a8
   25808:	.word	0x000003dc
   2580c:	.word	0x00000324
   25810:	.word	0x00000324
   25814:	.word	0x00001218
   25818:	.word	0x00000358
   2581c:	.word	0x00000340
   25820:	.word	0x000003a8
   25824:	.word	0x00001218
   25828:	.word	0x00001218
   2582c:	.word	0x000003dc
   25830:	.word	0x0000053c
   25834:	.word	0x00000570
   25838:	.word	0x00000418
   2583c:	.word	0x00000580
   25840:	.word	0x000005e8
   25844:	.word	0x00000418
   25848:	.word	0x000003f4
   2584c:	.word	0x00000c70
   25850:	.word	0x0000061c
   25854:	.word	0x000006f0
   25858:	.word	0x00000c78
   2585c:	.word	0x00000484
   25860:	.word	0x000007c0
   25864:	.word	0x00000498
   25868:	.word	0x00000408
   2586c:	.word	0x00000dc8
   25870:	.word	0x00000408
   25874:	.word	0x00001218
   25878:	.word	0x0000070c
   2587c:	.word	0x0000039c
   25880:	.word	0x00000370
   25884:	.word	0x00000390
   25888:	.word	0x00000390
   2588c:	.word	0x00000384
   25890:	.word	0x00000384
   25894:	.word	0x000007e4
   25898:	.word	0x0000090c
   2589c:	.word	0x00000450
   258a0:	.word	0x00000e08
   258a4:	.word	0x0000039c
   258a8:	.word	0x00000370
   258ac:	.word	0x00000390
   258b0:	.word	0x00000450
   258b4:	.word	0x00000384
   258b8:	.word	0x0000039c
   258bc:	.word	0x00000370
   258c0:	.word	0x00000cb0
   258c4:	.word	0x00000fc8
   258c8:	.word	0x00001198
   258cc:	.word	0x000004cc
   258d0:	.word	0x000008b4
   258d4:	.word	0x00000598
   258d8:	.word	0x00000e14
   258dc:	.word	0x00000e20
   258e0:	.word	0x000007f8
   258e4:	.word	0x00000ee0
   258e8:	.word	0x00000e2c
   258ec:	.word	0x000006ac
   258f0:	.word	0x00000714
   258f4:	.word	0x00000e38
   258f8:	.word	0x00000f98
   258fc:	.word	0x0000048c
   25900:	.word	0x0000054c
   25904:	.word	0x00000720
   25908:	.word	0x0000072c
   2590c:	.word	0x00000564
   25910:	.word	0x000005b0
   25914:	.word	0x00000fd4
   25918:	.word	0x00001014
   2591c:	.word	0x00000668
   25920:	.word	0x0000108c
   25924:	.word	0x000010e4
   25928:	.word	0x00001184
   2592c:	.word	0x00000cbc
   25930:	.word	0x00001178
   25934:	.word	0x000005a4
   25938:	.word	0x000010d8
   2593c:	.word	0x00000cc8
   25940:	.word	0x00000610
   25944:	.word	0x00000cd4
   25948:	.word	0x00000558
   2594c:	.word	0x000010f0
   25950:	.word	0x000010fc
   25954:	.word	0x00000638
   25958:	.word	0x00000fe0
   2595c:	.word	0x00000d74
   25960:	.word	0x00000d94
   25964:	.word	0x00001134
   25968:	.word	0x0000113c
   2596c:	.word	0x00000804
   25970:	.word	0x000008c0
   25974:	.word	0x000006b8
   25978:	.word	0x00000590
   2597c:	.word	0x00000ffc
   25980:	.word	0x000005f8
   25984:	.word	0x0000037c
   25988:	.word	0x0000037c
   2598c:	.word	0x00000fac
   25990:	.word	0x00000f58
   25994:	.word	0x000006d4
   25998:	.word	0x00001118
   2599c:	.word	0x0000074c
   259a0:	.word	0x00001098
   259a4:	.word	0x000007a0
   259a8:	.word	0x00000674
   259ac:	.word	0x000009bc
   259b0:	.word	0x0000080c
   259b4:	.word	0x00001218
   259b8:	.word	0x00000918
   259bc:	.word	0x00001218
   259c0:	.word	0x000009dc
   259c4:	.word	0x00000a10
   259c8:	.word	0x00001218
   259cc:	.word	0x00000828
   259d0:	.word	0x0000037c
   259d4:	.word	0x000014dc
   259d8:	.word	0x000014e0
   259dc:	.word	0x0000045c
   259e0:	.word	0x00000464
   259e4:	.word	0x00000410
   259e8:	.word	0x0000045c
   259ec:	.word	0x00000464
   259f0:	.word	0x00000410
   259f4:	.word	0x00000768
   259f8:	.word	0x00001218
   259fc:	.word	0x00001020
   25a00:	.word	0x000010b4
   25a04:	.word	0x00000654
   25a08:	.word	0x00000ce0
   25a0c:	.word	0x000009a8
   25a10:	.word	0x00000784
   25a14:	.word	0x00001034
   25a18:	.word	0x00000ef0
   25a1c:	.word	0x000008dc
   25a20:	.word	0x00000738
   25a24:	.word	0x00000f2c
   25a28:	.word	0x00000440
   25a2c:	.word	0x00000f04
   25a30:	.word	0x00000f74
   25a34:	.word	0x00000798
   25a38:	.word	0x000007b0
   25a3c:	.word	0x000007b8
   25a40:	.word	0x000007dc
   25a44:	.word	0x00001218
   25a48:	.word	0x00000440
   25a4c:	.word	0x000008f0
   25a50:	.word	0x00000e44
   25a54:	.word	0x00000438
   25a58:	.word	0x00000428
   25a5c:	.word	0x000007f0
   25a60:	.word	0x00000430
   25a64:	.word	0x00000d30
   25a68:	.word	0x00000f84
   25a6c:	.word	0x00000f20
   25a70:	.word	0x00000e4c
   25a74:	.word	0x00000e54
   25a78:	.word	0x00000f4c
   25a7c:	.word	0x00000e5c
   25a80:	.word	0x00000db8
   25a84:	.word	0x00001218
   25a88:	.word	0x000008f8
   25a8c:	.word	0x00000d38
   25a90:	.word	0x00000448
   25a94:	.word	0x00000cfc
   25a98:	.word	0x00001218
   25a9c:	.word	0x00000340
   25aa0:	.word	0x00000438
   25aa4:	.word	0x00000428
   25aa8:	.word	0x00000430
   25aac:	.word	0x00000cf4
   25ab0:	.word	0x00000e64
   25ab4:	.word	0x00000d28
   25ab8:	.word	0x00000e6c
   25abc:	.word	0x00001218
   25ac0:	.word	0x00000d60
   25ac4:	.word	0x00000e74
   25ac8:	.word	0x00000448
   25acc:	.word	0x00000e94
   25ad0:	.word	0x00001218
   25ad4:	.word	0x00000340
   25ad8:	ldr	r6, [r9, #-16]
   25adc:	ldr	lr, [r9, #-12]
   25ae0:	ldr	r2, [r9, #-8]
   25ae4:	ldr	r0, [r9, #-4]
   25ae8:	b	269bc <sfbpf_parse+0x1484>
   25aec:	rsb	r7, sl, #0
   25af0:	b	25768 <sfbpf_parse+0x230>
   25af4:	ldr	r0, [r9, #-20]	; 0xffffffec
   25af8:	ldr	r1, [r9, #12]
   25afc:	mov	r4, ip
   25b00:	mov	r5, r3
   25b04:	bl	5640 <sf_gen_or>
   25b08:	b	25ba0 <sfbpf_parse+0x668>
   25b0c:	ldr	r0, [r9, #-20]	; 0xffffffec
   25b10:	ldr	r1, [r9, #12]
   25b14:	mov	r4, ip
   25b18:	mov	r5, r3
   25b1c:	bl	5560 <sf_gen_and>
   25b20:	b	25ba0 <sfbpf_parse+0x668>
   25b24:	mov	sl, #0
   25b28:	mov	r6, #2
   25b2c:	b	26740 <sfbpf_parse+0x1208>
   25b30:	ldr	r6, [r9]
   25b34:	b	269c0 <sfbpf_parse+0x1488>
   25b38:	mov	sl, #0
   25b3c:	mov	r6, #4
   25b40:	b	26740 <sfbpf_parse+0x1208>
   25b44:	mov	sl, #0
   25b48:	mov	r6, #3
   25b4c:	b	26740 <sfbpf_parse+0x1208>
   25b50:	mov	sl, #0
   25b54:	mov	r6, #1
   25b58:	b	26740 <sfbpf_parse+0x1208>
   25b5c:	ldr	r6, [r9, #-16]
   25b60:	ldr	r1, [r9]
   25b64:	str	r2, [sp, #16]
   25b68:	mov	r0, #0
   25b6c:	mov	r4, ip
   25b70:	mov	r5, r3
   25b74:	mov	sl, lr
   25b78:	mov	r2, r6
   25b7c:	bl	12210 <sf_gen_ncode>
   25b80:	ldr	r2, [sp, #16]
   25b84:	mov	lr, sl
   25b88:	mov	r3, r5
   25b8c:	b	269b8 <sfbpf_parse+0x1480>
   25b90:	ldr	r0, [r9, #12]
   25b94:	mov	r4, ip
   25b98:	mov	r5, r3
   25b9c:	bl	56f8 <sf_gen_not>
   25ba0:	mov	r3, r5
   25ba4:	mov	ip, r4
   25ba8:	ldr	r6, [r9]
   25bac:	ldr	lr, [r9, #4]
   25bb0:	ldr	r2, [r9, #8]
   25bb4:	ldr	r0, [r9, #12]
   25bb8:	b	269bc <sfbpf_parse+0x1484>
   25bbc:	ldr	r0, [r9, #12]
   25bc0:	b	265a4 <sfbpf_parse+0x106c>
   25bc4:	mov	r6, #16
   25bc8:	b	2673c <sfbpf_parse+0x1204>
   25bcc:	ldrb	r6, [r9]
   25bd0:	ldr	sl, [r9, #-16]
   25bd4:	mov	r4, #0
   25bd8:	b	269cc <sfbpf_parse+0x1494>
   25bdc:	mov	r6, #23
   25be0:	b	2673c <sfbpf_parse+0x1204>
   25be4:	mov	r6, #24
   25be8:	b	2673c <sfbpf_parse+0x1204>
   25bec:	mov	r6, #22
   25bf0:	b	2673c <sfbpf_parse+0x1204>
   25bf4:	ldr	r6, [r9, #-16]
   25bf8:	b	269c0 <sfbpf_parse+0x1488>
   25bfc:	ldr	r0, [r9, #-4]
   25c00:	b	265a4 <sfbpf_parse+0x106c>
   25c04:	mov	sl, #0
   25c08:	mov	r6, #7
   25c0c:	b	26740 <sfbpf_parse+0x1208>
   25c10:	mov	r6, #32
   25c14:	b	2673c <sfbpf_parse+0x1204>
   25c18:	mov	r6, #48	; 0x30
   25c1c:	b	2673c <sfbpf_parse+0x1204>
   25c20:	str	r2, [sp, #16]
   25c24:	ldr	r6, [r9, #-48]	; 0xffffffd0
   25c28:	ldr	r0, [r9, #-32]	; 0xffffffe0
   25c2c:	ldr	r2, [r9]
   25c30:	mov	r1, #0
   25c34:	b	26998 <sfbpf_parse+0x1460>
   25c38:	ldr	r0, [r9]
   25c3c:	b	265a4 <sfbpf_parse+0x106c>
   25c40:	mov	r4, #0
   25c44:	mov	r6, #16
   25c48:	b	26954 <sfbpf_parse+0x141c>
   25c4c:	ldr	r0, [r9]
   25c50:	mov	sl, ip
   25c54:	mov	r5, r3
   25c58:	mov	r6, lr
   25c5c:	mov	r4, r2
   25c60:	bl	1af8c <sf_gen_atmmulti_abbrev>
   25c64:	b	26594 <sfbpf_parse+0x105c>
   25c68:	str	r2, [sp, #16]
   25c6c:	ldr	r6, [r9, #-48]	; 0xffffffd0
   25c70:	ldr	r0, [r9, #-32]	; 0xffffffe0
   25c74:	ldr	r2, [r9]
   25c78:	mov	r1, #0
   25c7c:	b	25d84 <sfbpf_parse+0x84c>
   25c80:	mov	r4, #0
   25c84:	mov	r6, #6
   25c88:	b	26954 <sfbpf_parse+0x141c>
   25c8c:	ldr	r6, [r9, #-16]
   25c90:	mvn	r0, #2
   25c94:	str	r2, [sp, #16]
   25c98:	stmib	sp, {r3, lr}
   25c9c:	str	ip, [sp, #12]
   25ca0:	uxtab	r0, r0, r6
   25ca4:	cmp	r0, #4
   25ca8:	bhi	25ccc <sfbpf_parse+0x794>
   25cac:	add	r1, pc, #4
   25cb0:	ldr	r0, [r1, r0, lsl #2]
   25cb4:	add	pc, r1, r0
   25cb8:	.word	0x00001058
   25cbc:	.word	0x00000014
   25cc0:	.word	0x00001010
   25cc4:	.word	0x0000101c
   25cc8:	.word	0x00001028
   25ccc:	ldr	r0, [r9]
   25cd0:	mov	r1, #0
   25cd4:	mov	r2, r6
   25cd8:	bl	12210 <sf_gen_ncode>
   25cdc:	str	r0, [sp, #28]
   25ce0:	lsr	sl, r6, #8
   25ce4:	lsr	r4, r6, #16
   25ce8:	lsr	r5, r6, #24
   25cec:	b	26b64 <sfbpf_parse+0x162c>
   25cf0:	ldrb	r6, [r9]
   25cf4:	ldr	sl, [r9, #-32]	; 0xffffffe0
   25cf8:	ldr	r4, [r9, #-16]
   25cfc:	b	269cc <sfbpf_parse+0x1494>
   25d00:	mov	r4, #0
   25d04:	mov	r6, #15
   25d08:	b	26954 <sfbpf_parse+0x141c>
   25d0c:	mov	r5, #0
   25d10:	mov	r6, #30
   25d14:	b	26940 <sfbpf_parse+0x1408>
   25d18:	mov	r5, #0
   25d1c:	mov	r6, #19
   25d20:	b	26940 <sfbpf_parse+0x1408>
   25d24:	ldr	sl, [r9, #-16]
   25d28:	ldr	r4, [r9]
   25d2c:	mov	r6, #0
   25d30:	b	269cc <sfbpf_parse+0x1494>
   25d34:	ldr	sl, [r9, #-16]
   25d38:	mov	r4, #0
   25d3c:	mov	r6, #5
   25d40:	b	269cc <sfbpf_parse+0x1494>
   25d44:	mvn	r0, #0
   25d48:	b	25e70 <sfbpf_parse+0x938>
   25d4c:	mov	r4, #0
   25d50:	mov	r6, #8
   25d54:	b	26954 <sfbpf_parse+0x141c>
   25d58:	mov	r5, #0
   25d5c:	mov	r6, #38	; 0x26
   25d60:	b	26940 <sfbpf_parse+0x1408>
   25d64:	mov	r5, #0
   25d68:	mov	r6, #20
   25d6c:	b	26940 <sfbpf_parse+0x1408>
   25d70:	ldr	r6, [r9, #-48]	; 0xffffffd0
   25d74:	ldr	r0, [r9, #-32]	; 0xffffffe0
   25d78:	ldr	r1, [r9]
   25d7c:	str	r2, [sp, #16]
   25d80:	mov	r2, #0
   25d84:	mov	sl, r3
   25d88:	mov	r3, r6
   25d8c:	mov	r4, ip
   25d90:	mov	r5, lr
   25d94:	bl	120fc <sf_gen_mcode>
   25d98:	b	269ac <sfbpf_parse+0x1474>
   25d9c:	ldr	sl, [r9, #-16]
   25da0:	mov	r4, #0
   25da4:	mov	r6, #6
   25da8:	b	269cc <sfbpf_parse+0x1494>
   25dac:	mov	sl, ip
   25db0:	mov	r5, r3
   25db4:	mov	r6, lr
   25db8:	mov	r4, r2
   25dbc:	bl	19298 <sf_gen_pppoes>
   25dc0:	b	26908 <sfbpf_parse+0x13d0>
   25dc4:	mov	r5, #0
   25dc8:	mov	r6, #28
   25dcc:	b	26940 <sfbpf_parse+0x1408>
   25dd0:	ldr	r0, [r9]
   25dd4:	mov	sl, ip
   25dd8:	mov	r5, r3
   25ddc:	mov	r6, lr
   25de0:	mov	r4, r2
   25de4:	bl	570c <sf_gen_proto_abbrev>
   25de8:	b	26594 <sfbpf_parse+0x105c>
   25dec:	ldr	r0, [r9, #-16]
   25df0:	mov	sl, ip
   25df4:	mov	r5, r3
   25df8:	mov	r6, lr
   25dfc:	mov	r4, r2
   25e00:	bl	16b10 <sf_gen_multicast>
   25e04:	b	26908 <sfbpf_parse+0x13d0>
   25e08:	mov	sl, r2
   25e0c:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25e10:	ldr	r2, [r9]
   25e14:	mov	r0, #0
   25e18:	b	267f8 <sfbpf_parse+0x12c0>
   25e1c:	mov	r5, #0
   25e20:	mov	r6, #26
   25e24:	b	26940 <sfbpf_parse+0x1408>
   25e28:	ldr	r0, [r9]
   25e2c:	mov	r1, #12
   25e30:	b	26178 <sfbpf_parse+0xc40>
   25e34:	ldr	r6, [r9, #-16]
   25e38:	ldr	r0, [r9]
   25e3c:	str	ip, [sp, #12]
   25e40:	stmib	sp, {r3, lr}
   25e44:	str	r2, [sp, #16]
   25e48:	mov	r1, r6
   25e4c:	lsr	r5, r6, #24
   25e50:	lsr	r4, r6, #16
   25e54:	lsr	sl, r6, #8
   25e58:	bl	b96c <sf_gen_scode>
   25e5c:	b	2667c <sfbpf_parse+0x1144>
   25e60:	mov	r4, #0
   25e64:	mov	r6, #23
   25e68:	b	26954 <sfbpf_parse+0x141c>
   25e6c:	ldr	r0, [r9]
   25e70:	mov	sl, ip
   25e74:	mov	r5, r3
   25e78:	mov	r6, lr
   25e7c:	mov	r4, r2
   25e80:	bl	18e08 <sf_gen_mpls>
   25e84:	b	26908 <sfbpf_parse+0x13d0>
   25e88:	ldr	r0, [r9]
   25e8c:	mov	sl, ip
   25e90:	mov	r5, r3
   25e94:	mov	r6, lr
   25e98:	mov	r4, r2
   25e9c:	bl	18498 <sf_gen_pf_rnr>
   25ea0:	b	26908 <sfbpf_parse+0x13d0>
   25ea4:	mov	sl, r2
   25ea8:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25eac:	ldr	r0, [r9, #-16]
   25eb0:	ldr	r2, [r9]
   25eb4:	mov	r5, r3
   25eb8:	mov	r3, #0
   25ebc:	b	26444 <sfbpf_parse+0xf0c>
   25ec0:	mov	r6, #0
   25ec4:	b	2673c <sfbpf_parse+0x1204>
   25ec8:	mov	r4, #0
   25ecc:	mov	r6, #12
   25ed0:	b	26954 <sfbpf_parse+0x141c>
   25ed4:	mov	r4, #0
   25ed8:	mov	r6, #17
   25edc:	b	26954 <sfbpf_parse+0x141c>
   25ee0:	mov	r5, #0
   25ee4:	mov	r6, #18
   25ee8:	b	26940 <sfbpf_parse+0x1408>
   25eec:	mov	sl, r2
   25ef0:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25ef4:	ldr	r2, [r9]
   25ef8:	mov	r0, #112	; 0x70
   25efc:	b	267f8 <sfbpf_parse+0x12c0>
   25f00:	ldr	r0, [r9]
   25f04:	mov	sl, ip
   25f08:	mov	r5, r3
   25f0c:	mov	r6, lr
   25f10:	mov	r4, r2
   25f14:	bl	184c8 <sf_gen_pf_reason>
   25f18:	b	26908 <sfbpf_parse+0x13d0>
   25f1c:	ldr	r0, [r9]
   25f20:	mov	sl, ip
   25f24:	mov	r5, r3
   25f28:	mov	r6, lr
   25f2c:	mov	r4, r2
   25f30:	bl	150bc <sf_gen_loadi>
   25f34:	b	26908 <sfbpf_parse+0x13d0>
   25f38:	mov	sl, r2
   25f3c:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25f40:	ldr	r2, [r9]
   25f44:	mov	r0, #48	; 0x30
   25f48:	b	267f8 <sfbpf_parse+0x12c0>
   25f4c:	mov	r6, #124	; 0x7c
   25f50:	b	2673c <sfbpf_parse+0x1204>
   25f54:	ldr	r0, [r9, #-32]	; 0xffffffe0
   25f58:	ldr	r1, [r9]
   25f5c:	orr	r0, r1, r0
   25f60:	b	26174 <sfbpf_parse+0xc3c>
   25f64:	mov	r6, #60	; 0x3c
   25f68:	b	2673c <sfbpf_parse+0x1204>
   25f6c:	mov	r6, #62	; 0x3e
   25f70:	b	2673c <sfbpf_parse+0x1204>
   25f74:	ldr	r0, [r9]
   25f78:	mov	sl, ip
   25f7c:	mov	r5, r3
   25f80:	mov	r6, lr
   25f84:	mov	r4, r2
   25f88:	bl	196a0 <sf_gen_atmtype_abbrev>
   25f8c:	b	26594 <sfbpf_parse+0x105c>
   25f90:	mov	r6, #61	; 0x3d
   25f94:	b	2673c <sfbpf_parse+0x1204>
   25f98:	mov	sl, #0
   25f9c:	mov	r6, #5
   25fa0:	b	26740 <sfbpf_parse+0x1208>
   25fa4:	mov	r6, #25
   25fa8:	b	2673c <sfbpf_parse+0x1204>
   25fac:	mov	r4, #0
   25fb0:	mov	r6, #21
   25fb4:	b	26954 <sfbpf_parse+0x141c>
   25fb8:	ldr	r0, [r9]
   25fbc:	b	26078 <sfbpf_parse+0xb40>
   25fc0:	ldr	r0, [r9]
   25fc4:	mov	sl, ip
   25fc8:	mov	r5, r3
   25fcc:	mov	r6, lr
   25fd0:	mov	r4, r2
   25fd4:	bl	186c4 <sf_gen_p80211_fcdir>
   25fd8:	b	26908 <sfbpf_parse+0x13d0>
   25fdc:	str	r2, [sp, #16]
   25fe0:	stmib	sp, {r3, lr}
   25fe4:	str	ip, [sp, #12]
   25fe8:	ldr	r0, [r9]
   25fec:	ldr	r1, [pc, #3428]	; 26d58 <sfbpf_parse+0x1820>
   25ff0:	add	r1, pc, r1
   25ff4:	bl	25294 <sfbpf_strcasecmp>
   25ff8:	mov	sl, #0
   25ffc:	cmp	r0, #0
   26000:	beq	26aa8 <sfbpf_parse+0x1570>
   26004:	ldr	r0, [r9]
   26008:	ldr	r1, [pc, #3404]	; 26d5c <sfbpf_parse+0x1824>
   2600c:	add	r1, pc, r1
   26010:	bl	25294 <sfbpf_strcasecmp>
   26014:	cmp	r0, #0
   26018:	beq	26b10 <sfbpf_parse+0x15d8>
   2601c:	ldr	r0, [r9]
   26020:	ldr	r1, [pc, #3384]	; 26d60 <sfbpf_parse+0x1828>
   26024:	add	r1, pc, r1
   26028:	bl	25294 <sfbpf_strcasecmp>
   2602c:	cmp	r0, #0
   26030:	beq	26b28 <sfbpf_parse+0x15f0>
   26034:	ldr	r0, [r9]
   26038:	ldr	r1, [pc, #3364]	; 26d64 <sfbpf_parse+0x182c>
   2603c:	add	r1, pc, r1
   26040:	bl	25294 <sfbpf_strcasecmp>
   26044:	ldr	ip, [sp, #12]
   26048:	ldr	r2, [sp, #16]
   2604c:	ldmib	sp, {r3, lr}
   26050:	mov	r6, #3
   26054:	cmp	r0, #0
   26058:	mov	r4, #0
   2605c:	mov	r5, #0
   26060:	beq	269cc <sfbpf_parse+0x1494>
   26064:	b	26cec <sfbpf_parse+0x17b4>
   26068:	mov	r4, #0
   2606c:	mov	r6, #7
   26070:	b	26954 <sfbpf_parse+0x141c>
   26074:	mvn	r0, #0
   26078:	mov	sl, ip
   2607c:	mov	r5, r3
   26080:	mov	r6, lr
   26084:	mov	r4, r2
   26088:	bl	18af8 <sf_gen_vlan>
   2608c:	b	26908 <sfbpf_parse+0x13d0>
   26090:	mov	sl, r2
   26094:	ldr	r1, [r9, #-32]	; 0xffffffe0
   26098:	ldr	r2, [r9]
   2609c:	mov	r0, #96	; 0x60
   260a0:	b	267f8 <sfbpf_parse+0x12c0>
   260a4:	mov	r6, #30
   260a8:	b	2673c <sfbpf_parse+0x1204>
   260ac:	str	r2, [sp, #16]
   260b0:	ldr	r0, [r9, #-28]	; 0xffffffe4
   260b4:	ldr	r2, [r9, #-16]
   260b8:	ldr	r1, [r9]
   260bc:	b	264d0 <sfbpf_parse+0xf98>
   260c0:	mov	sl, #0
   260c4:	mov	r6, #6
   260c8:	b	26740 <sfbpf_parse+0x1208>
   260cc:	str	r2, [sp, #16]
   260d0:	stmib	sp, {r3, lr}
   260d4:	str	ip, [sp, #12]
   260d8:	ldr	r6, [r9]
   260dc:	ldr	r0, [pc, #3152]	; 26d34 <sfbpf_parse+0x17fc>
   260e0:	mov	r1, r6
   260e4:	add	r0, pc, r0
   260e8:	bl	25294 <sfbpf_strcasecmp>
   260ec:	cmp	r0, #0
   260f0:	beq	26ab0 <sfbpf_parse+0x1578>
   260f4:	ldr	r0, [pc, #3132]	; 26d38 <sfbpf_parse+0x1800>
   260f8:	mov	r1, r6
   260fc:	add	r0, pc, r0
   26100:	bl	25294 <sfbpf_strcasecmp>
   26104:	cmp	r0, #0
   26108:	beq	26b18 <sfbpf_parse+0x15e0>
   2610c:	ldr	r0, [pc, #3212]	; 26da0 <sfbpf_parse+0x1868>
   26110:	mov	r1, r6
   26114:	add	r0, pc, r0
   26118:	bl	25294 <sfbpf_strcasecmp>
   2611c:	cmp	r0, #0
   26120:	beq	26b38 <sfbpf_parse+0x1600>
   26124:	ldr	r0, [pc, #3192]	; 26da4 <sfbpf_parse+0x186c>
   26128:	mov	r1, r6
   2612c:	add	r0, pc, r0
   26130:	bl	25294 <sfbpf_strcasecmp>
   26134:	cmp	r0, #0
   26138:	beq	26b48 <sfbpf_parse+0x1610>
   2613c:	ldr	r0, [pc, #3172]	; 26da8 <sfbpf_parse+0x1870>
   26140:	mov	r1, r6
   26144:	add	r0, pc, r0
   26148:	bl	25294 <sfbpf_strcasecmp>
   2614c:	mov	r1, #4
   26150:	cmp	r0, #0
   26154:	beq	26b4c <sfbpf_parse+0x1614>
   26158:	b	26d04 <sfbpf_parse+0x17cc>
   2615c:	mov	sl, r2
   26160:	ldr	r1, [r9, #-32]	; 0xffffffe0
   26164:	ldr	r2, [r9]
   26168:	mov	r0, #32
   2616c:	b	267f8 <sfbpf_parse+0x12c0>
   26170:	ldr	r0, [r9]
   26174:	mov	r1, #252	; 0xfc
   26178:	mov	sl, ip
   2617c:	mov	r5, r3
   26180:	mov	r6, lr
   26184:	mov	r4, r2
   26188:	bl	184f8 <sf_gen_p80211_type>
   2618c:	b	26908 <sfbpf_parse+0x13d0>
   26190:	ldr	r0, [r9, #-32]	; 0xffffffe0
   26194:	str	ip, [sp, #12]
   26198:	stmib	sp, {r3, lr}
   2619c:	str	r2, [sp, #16]
   261a0:	cmp	r0, #0
   261a4:	beq	26ab8 <sfbpf_parse+0x1580>
   261a8:	cmp	r0, #4
   261ac:	beq	26ac4 <sfbpf_parse+0x158c>
   261b0:	cmp	r0, #8
   261b4:	bne	26cf8 <sfbpf_parse+0x17c0>
   261b8:	ldr	r1, [pc, #2912]	; 26d20 <sfbpf_parse+0x17e8>
   261bc:	add	r1, pc, r1
   261c0:	b	26acc <sfbpf_parse+0x1594>
   261c4:	str	r2, [sp, #16]
   261c8:	str	lr, [sp, #8]
   261cc:	ldr	r6, [r9]
   261d0:	mov	sl, r3
   261d4:	mov	r5, ip
   261d8:	mov	r4, #0
   261dc:	ldr	r0, [pc, #2916]	; 26d48 <sfbpf_parse+0x1810>
   261e0:	add	r0, pc, r0
   261e4:	mov	r1, r6
   261e8:	bl	25294 <sfbpf_strcasecmp>
   261ec:	cmp	r0, #0
   261f0:	ldr	r0, [pc, #2900]	; 26d4c <sfbpf_parse+0x1814>
   261f4:	add	r0, pc, r0
   261f8:	beq	26a9c <sfbpf_parse+0x1564>
   261fc:	sub	r0, r0, r4
   26200:	sub	r4, r4, #8
   26204:	ldr	r0, [r0, #12]
   26208:	cmn	r4, #160	; 0xa0
   2620c:	bne	261e4 <sfbpf_parse+0xcac>
   26210:	ldr	r6, [r9]
   26214:	ldr	r0, [pc, #2868]	; 26d50 <sfbpf_parse+0x1818>
   26218:	add	r0, pc, r0
   2621c:	mov	r1, r6
   26220:	bl	25294 <sfbpf_strcasecmp>
   26224:	cmp	r0, #0
   26228:	beq	26b20 <sfbpf_parse+0x15e8>
   2622c:	ldr	r0, [pc, #2904]	; 26d8c <sfbpf_parse+0x1854>
   26230:	mov	r1, r6
   26234:	add	r0, pc, r0
   26238:	bl	25294 <sfbpf_strcasecmp>
   2623c:	cmp	r0, #0
   26240:	beq	26b40 <sfbpf_parse+0x1608>
   26244:	ldr	r0, [pc, #2916]	; 26db0 <sfbpf_parse+0x1878>
   26248:	mov	r1, r6
   2624c:	add	r0, pc, r0
   26250:	bl	25294 <sfbpf_strcasecmp>
   26254:	cmp	r0, #0
   26258:	beq	26b74 <sfbpf_parse+0x163c>
   2625c:	ldr	r0, [pc, #2896]	; 26db4 <sfbpf_parse+0x187c>
   26260:	mov	r1, r6
   26264:	add	r0, pc, r0
   26268:	bl	25294 <sfbpf_strcasecmp>
   2626c:	cmp	r0, #0
   26270:	beq	26b7c <sfbpf_parse+0x1644>
   26274:	ldr	r0, [pc, #2876]	; 26db8 <sfbpf_parse+0x1880>
   26278:	mov	r1, r6
   2627c:	add	r0, pc, r0
   26280:	bl	25294 <sfbpf_strcasecmp>
   26284:	cmp	r0, #0
   26288:	beq	26b84 <sfbpf_parse+0x164c>
   2628c:	ldr	r0, [pc, #2856]	; 26dbc <sfbpf_parse+0x1884>
   26290:	mov	r1, r6
   26294:	add	r0, pc, r0
   26298:	bl	25294 <sfbpf_strcasecmp>
   2629c:	cmp	r0, #0
   262a0:	beq	26b8c <sfbpf_parse+0x1654>
   262a4:	ldr	r6, [r9]
   262a8:	ldr	r0, [pc, #2832]	; 26dc0 <sfbpf_parse+0x1888>
   262ac:	add	r0, pc, r0
   262b0:	mov	r1, r6
   262b4:	bl	25294 <sfbpf_strcasecmp>
   262b8:	cmp	r0, #0
   262bc:	beq	26bc8 <sfbpf_parse+0x1690>
   262c0:	ldr	r0, [pc, #2764]	; 26d94 <sfbpf_parse+0x185c>
   262c4:	mov	r1, r6
   262c8:	add	r0, pc, r0
   262cc:	bl	25294 <sfbpf_strcasecmp>
   262d0:	cmp	r0, #0
   262d4:	beq	26bd0 <sfbpf_parse+0x1698>
   262d8:	ldr	r0, [pc, #2788]	; 26dc4 <sfbpf_parse+0x188c>
   262dc:	mov	r1, r6
   262e0:	add	r0, pc, r0
   262e4:	bl	25294 <sfbpf_strcasecmp>
   262e8:	cmp	r0, #0
   262ec:	beq	26bd8 <sfbpf_parse+0x16a0>
   262f0:	ldr	r0, [pc, #2768]	; 26dc8 <sfbpf_parse+0x1890>
   262f4:	mov	r1, r6
   262f8:	add	r0, pc, r0
   262fc:	bl	25294 <sfbpf_strcasecmp>
   26300:	cmp	r0, #0
   26304:	beq	26be0 <sfbpf_parse+0x16a8>
   26308:	ldr	r0, [pc, #2748]	; 26dcc <sfbpf_parse+0x1894>
   2630c:	mov	r1, r6
   26310:	add	r0, pc, r0
   26314:	bl	25294 <sfbpf_strcasecmp>
   26318:	cmp	r0, #0
   2631c:	beq	26be8 <sfbpf_parse+0x16b0>
   26320:	ldr	r0, [pc, #2728]	; 26dd0 <sfbpf_parse+0x1898>
   26324:	mov	r1, r6
   26328:	add	r0, pc, r0
   2632c:	bl	25294 <sfbpf_strcasecmp>
   26330:	cmp	r0, #0
   26334:	beq	26bf0 <sfbpf_parse+0x16b8>
   26338:	ldr	r0, [pc, #2708]	; 26dd4 <sfbpf_parse+0x189c>
   2633c:	mov	r1, r6
   26340:	add	r0, pc, r0
   26344:	bl	25294 <sfbpf_strcasecmp>
   26348:	cmp	r0, #0
   2634c:	beq	26bf8 <sfbpf_parse+0x16c0>
   26350:	ldr	r0, [pc, #2688]	; 26dd8 <sfbpf_parse+0x18a0>
   26354:	mov	r1, r6
   26358:	add	r0, pc, r0
   2635c:	bl	25294 <sfbpf_strcasecmp>
   26360:	cmp	r0, #0
   26364:	beq	26c00 <sfbpf_parse+0x16c8>
   26368:	ldr	r0, [pc, #2668]	; 26ddc <sfbpf_parse+0x18a4>
   2636c:	mov	r1, r6
   26370:	add	r0, pc, r0
   26374:	bl	25294 <sfbpf_strcasecmp>
   26378:	cmp	r0, #0
   2637c:	beq	26c08 <sfbpf_parse+0x16d0>
   26380:	ldr	r0, [pc, #2648]	; 26de0 <sfbpf_parse+0x18a8>
   26384:	mov	r1, r6
   26388:	add	r0, pc, r0
   2638c:	bl	25294 <sfbpf_strcasecmp>
   26390:	cmp	r0, #0
   26394:	beq	26c10 <sfbpf_parse+0x16d8>
   26398:	ldr	r0, [pc, #2628]	; 26de4 <sfbpf_parse+0x18ac>
   2639c:	mov	r1, r6
   263a0:	add	r0, pc, r0
   263a4:	bl	25294 <sfbpf_strcasecmp>
   263a8:	cmp	r0, #0
   263ac:	beq	26c18 <sfbpf_parse+0x16e0>
   263b0:	ldr	r0, [pc, #2608]	; 26de8 <sfbpf_parse+0x18b0>
   263b4:	mov	r1, r6
   263b8:	add	r0, pc, r0
   263bc:	bl	25294 <sfbpf_strcasecmp>
   263c0:	cmp	r0, #0
   263c4:	beq	26c20 <sfbpf_parse+0x16e8>
   263c8:	ldr	r0, [pc, #2588]	; 26dec <sfbpf_parse+0x18b4>
   263cc:	mov	r1, r6
   263d0:	add	r0, pc, r0
   263d4:	bl	25294 <sfbpf_strcasecmp>
   263d8:	cmp	r0, #0
   263dc:	beq	26c28 <sfbpf_parse+0x16f0>
   263e0:	ldr	r0, [pc, #2568]	; 26df0 <sfbpf_parse+0x18b8>
   263e4:	mov	r1, r6
   263e8:	add	r0, pc, r0
   263ec:	bl	25294 <sfbpf_strcasecmp>
   263f0:	cmp	r0, #0
   263f4:	beq	26c30 <sfbpf_parse+0x16f8>
   263f8:	ldr	r0, [pc, #2548]	; 26df4 <sfbpf_parse+0x18bc>
   263fc:	mov	r1, r6
   26400:	add	r0, pc, r0
   26404:	bl	25294 <sfbpf_strcasecmp>
   26408:	ldr	lr, [sp, #8]
   2640c:	mov	r1, #14
   26410:	cmp	r0, #0
   26414:	mov	ip, r5
   26418:	mov	r3, sl
   2641c:	beq	26c40 <sfbpf_parse+0x1708>
   26420:	b	26d04 <sfbpf_parse+0x17cc>
   26424:	ldr	r6, [r9, #-32]	; 0xffffffe0
   26428:	b	25ae4 <sfbpf_parse+0x5ac>
   2642c:	mov	sl, r2
   26430:	ldr	r1, [r9, #-32]	; 0xffffffe0
   26434:	ldr	r0, [r9, #-16]
   26438:	ldr	r2, [r9]
   2643c:	mov	r5, r3
   26440:	mov	r3, #1
   26444:	mov	r4, ip
   26448:	mov	r6, lr
   2644c:	bl	14930 <sf_gen_relation>
   26450:	mov	r2, sl
   26454:	mov	lr, r6
   26458:	mov	r3, r5
   2645c:	mov	ip, r4
   26460:	b	265a4 <sfbpf_parse+0x106c>
   26464:	mov	r4, #0
   26468:	mov	r6, #3
   2646c:	b	26954 <sfbpf_parse+0x141c>
   26470:	mov	r5, #0
   26474:	mov	r6, #39	; 0x27
   26478:	b	26940 <sfbpf_parse+0x1408>
   2647c:	mov	r5, #0
   26480:	mov	r6, #27
   26484:	b	26940 <sfbpf_parse+0x1408>
   26488:	mov	r5, #0
   2648c:	mov	r6, #29
   26490:	b	26940 <sfbpf_parse+0x1408>
   26494:	mov	sl, r2
   26498:	ldr	r1, [r9, #-32]	; 0xffffffe0
   2649c:	ldr	r2, [r9]
   264a0:	mov	r0, #16
   264a4:	b	267f8 <sfbpf_parse+0x12c0>
   264a8:	mov	r2, #1
   264ac:	b	269cc <sfbpf_parse+0x1494>
   264b0:	ldr	lr, [r9, #-12]
   264b4:	sub	r0, lr, #51	; 0x33
   264b8:	cmp	r0, #1
   264bc:	bhi	269cc <sfbpf_parse+0x1494>
   264c0:	ldr	r1, [r9]
   264c4:	str	r2, [sp, #16]
   264c8:	mov	r0, lr
   264cc:	mov	r2, #16
   264d0:	str	r3, [sp, #4]
   264d4:	mov	r3, #0
   264d8:	b	26504 <sfbpf_parse+0xfcc>
   264dc:	mov	r2, #3
   264e0:	b	269cc <sfbpf_parse+0x1494>
   264e4:	mov	r6, #26
   264e8:	b	2673c <sfbpf_parse+0x1204>
   264ec:	str	r2, [sp, #16]
   264f0:	ldr	r0, [r9, #-28]	; 0xffffffe4
   264f4:	ldr	r2, [r9, #-16]
   264f8:	ldr	r1, [r9]
   264fc:	str	r3, [sp, #4]
   26500:	mov	r3, #1
   26504:	str	ip, [sp, #12]
   26508:	str	lr, [sp, #8]
   2650c:	bl	19314 <sf_gen_atmfield_code>
   26510:	b	2667c <sfbpf_parse+0x1144>
   26514:	str	r2, [sp, #16]
   26518:	ldr	r0, [r9, #-24]	; 0xffffffe8
   2651c:	ldr	r2, [r9, #-16]
   26520:	ldr	r1, [r9]
   26524:	b	26668 <sfbpf_parse+0x1130>
   26528:	ldr	r0, [r9]
   2652c:	mov	sl, ip
   26530:	mov	r5, r3
   26534:	mov	r6, lr
   26538:	mov	r4, r2
   2653c:	bl	15884 <sf_gen_greater>
   26540:	b	26908 <sfbpf_parse+0x13d0>
   26544:	.word	0x00022460
   26548:	mov	sl, r2
   2654c:	ldr	r1, [r9, #-32]	; 0xffffffe0
   26550:	ldr	r0, [r9, #-16]
   26554:	ldr	r2, [r9]
   26558:	mov	r4, ip
   2655c:	mov	r5, r3
   26560:	mov	r6, lr
   26564:	bl	159f8 <sf_gen_byteop>
   26568:	b	26808 <sfbpf_parse+0x12d0>
   2656c:	mov	lr, #52	; 0x34
   26570:	b	269cc <sfbpf_parse+0x1494>
   26574:	.word	0x0002244c
   26578:	.word	0x00006f28
   2657c:	ldr	r0, [r9]
   26580:	mov	sl, ip
   26584:	mov	r5, r3
   26588:	mov	r6, lr
   2658c:	mov	r4, r2
   26590:	bl	19e58 <sf_gen_mtp2type_abbrev>
   26594:	mov	r2, r4
   26598:	mov	lr, r6
   2659c:	mov	r3, r5
   265a0:	mov	ip, sl
   265a4:	str	r0, [sp, #28]
   265a8:	mov	r6, #255	; 0xff
   265ac:	mov	sl, #255	; 0xff
   265b0:	mov	r4, #255	; 0xff
   265b4:	mov	r5, #255	; 0xff
   265b8:	b	269cc <sfbpf_parse+0x1494>
   265bc:	mov	sl, #0
   265c0:	mov	r6, #8
   265c4:	b	26740 <sfbpf_parse+0x1208>
   265c8:	mov	r4, #0
   265cc:	mov	r6, #9
   265d0:	b	26954 <sfbpf_parse+0x141c>
   265d4:	mov	r4, #0
   265d8:	mov	r6, #10
   265dc:	b	26954 <sfbpf_parse+0x141c>
   265e0:	mov	r4, #0
   265e4:	mov	r6, #11
   265e8:	b	26954 <sfbpf_parse+0x141c>
   265ec:	mov	r4, #0
   265f0:	mov	r6, #13
   265f4:	b	26954 <sfbpf_parse+0x141c>
   265f8:	mov	r6, #31
   265fc:	b	2673c <sfbpf_parse+0x1204>
   26600:	mov	r6, #29
   26604:	b	2673c <sfbpf_parse+0x1204>
   26608:	mov	r6, #70	; 0x46
   2660c:	b	2673c <sfbpf_parse+0x1204>
   26610:	mov	lr, #51	; 0x33
   26614:	b	269cc <sfbpf_parse+0x1494>
   26618:	mov	r2, #2
   2661c:	b	269cc <sfbpf_parse+0x1494>
   26620:	mov	r2, #4
   26624:	b	269cc <sfbpf_parse+0x1494>
   26628:	str	r2, [sp, #16]
   2662c:	ldr	r0, [r9, #-24]	; 0xffffffe8
   26630:	ldr	r2, [r9, #-16]
   26634:	ldr	r1, [r9]
   26638:	str	r3, [sp, #4]
   2663c:	mov	r3, #1
   26640:	b	26670 <sfbpf_parse+0x1138>
   26644:	.word	0x00005d2a
   26648:	ldr	r2, [r9, #-8]
   2664c:	sub	r0, r2, #1
   26650:	cmp	r0, #3
   26654:	bhi	269cc <sfbpf_parse+0x1494>
   26658:	ldr	r1, [r9]
   2665c:	mov	r0, r2
   26660:	str	r2, [sp, #16]
   26664:	mov	r2, #16
   26668:	str	r3, [sp, #4]
   2666c:	mov	r3, #0
   26670:	str	ip, [sp, #12]
   26674:	str	lr, [sp, #8]
   26678:	bl	1a72c <sf_gen_mtp3field_code>
   2667c:	ldr	r2, [sp, #16]
   26680:	ldr	ip, [sp, #12]
   26684:	ldmib	sp, {r3, lr}
   26688:	str	r0, [sp, #28]
   2668c:	b	269cc <sfbpf_parse+0x1494>
   26690:	.word	0x00022334
   26694:	mov	r4, #0
   26698:	mov	r6, #22
   2669c:	b	26954 <sfbpf_parse+0x141c>
   266a0:	.word	0x00022318
   266a4:	mov	sl, r2
   266a8:	ldr	r1, [r9, #-32]	; 0xffffffe0
   266ac:	ldr	r2, [r9]
   266b0:	mov	r0, #64	; 0x40
   266b4:	b	267f8 <sfbpf_parse+0x12c0>
   266b8:	mov	sl, ip
   266bc:	mov	r5, r3
   266c0:	mov	r6, lr
   266c4:	mov	r4, r2
   266c8:	bl	14e74 <sf_gen_loadlen>
   266cc:	b	26908 <sfbpf_parse+0x13d0>
   266d0:	.word	0x00005ef6
   266d4:	mov	r6, #28
   266d8:	b	2673c <sfbpf_parse+0x1204>
   266dc:	.word	0x000222e0
   266e0:	ldr	r0, [r9]
   266e4:	mov	sl, ip
   266e8:	mov	r5, r3
   266ec:	mov	r6, lr
   266f0:	mov	r4, r2
   266f4:	bl	152fc <sf_gen_neg>
   266f8:	b	26908 <sfbpf_parse+0x13d0>
   266fc:	.word	0x00006034
   26700:	mov	r6, #71	; 0x47
   26704:	b	2673c <sfbpf_parse+0x1204>
   26708:	.word	0x00006558
   2670c:	ldr	r0, [r9]
   26710:	mov	sl, ip
   26714:	mov	r5, r3
   26718:	mov	r6, lr
   2671c:	mov	r4, r2
   26720:	bl	18480 <sf_gen_pf_ruleset>
   26724:	b	26908 <sfbpf_parse+0x13d0>
   26728:	mov	r6, #38	; 0x26
   2672c:	b	2673c <sfbpf_parse+0x1204>
   26730:	.word	0x00022294
   26734:	.word	0x00022280
   26738:	mov	r6, #27
   2673c:	mov	sl, #0
   26740:	mov	r4, #0
   26744:	mov	r5, #0
   26748:	b	269cc <sfbpf_parse+0x1494>
   2674c:	mov	r4, #0
   26750:	mov	r6, #14
   26754:	b	26954 <sfbpf_parse+0x141c>
   26758:	.word	0x00006a54
   2675c:	.word	0x00006b4e
   26760:	ldr	r0, [r9]
   26764:	mov	sl, ip
   26768:	mov	r5, r3
   2676c:	mov	r6, lr
   26770:	mov	r4, r2
   26774:	bl	18468 <sf_gen_pf_ifname>
   26778:	b	26908 <sfbpf_parse+0x13d0>
   2677c:	mov	r4, #0
   26780:	mov	r6, #4
   26784:	b	26954 <sfbpf_parse+0x141c>
   26788:	mov	r5, #0
   2678c:	mov	r6, #24
   26790:	b	26940 <sfbpf_parse+0x1408>
   26794:	ldr	r0, [r9]
   26798:	mov	sl, ip
   2679c:	mov	r5, r3
   267a0:	mov	r6, lr
   267a4:	mov	r4, r2
   267a8:	bl	159d0 <sf_gen_less>
   267ac:	b	26908 <sfbpf_parse+0x13d0>
   267b0:	mov	sl, ip
   267b4:	mov	r5, r3
   267b8:	mov	r6, lr
   267bc:	mov	r4, r2
   267c0:	bl	19290 <sf_gen_pppoed>
   267c4:	b	26908 <sfbpf_parse+0x13d0>
   267c8:	mov	r5, #0
   267cc:	mov	r6, #25
   267d0:	b	26940 <sfbpf_parse+0x1408>
   267d4:	ldr	r0, [r9, #-48]	; 0xffffffd0
   267d8:	ldr	r1, [r9, #-16]
   267dc:	mov	sl, r2
   267e0:	mov	r2, #1
   267e4:	b	26878 <sfbpf_parse+0x1340>
   267e8:	mov	sl, r2
   267ec:	ldr	r1, [r9, #-32]	; 0xffffffe0
   267f0:	ldr	r2, [r9]
   267f4:	mov	r0, #80	; 0x50
   267f8:	mov	r4, ip
   267fc:	mov	r5, r3
   26800:	mov	r6, lr
   26804:	bl	1550c <sf_gen_arth>
   26808:	mov	r2, sl
   2680c:	mov	lr, r6
   26810:	mov	r3, r5
   26814:	mov	ip, r4
   26818:	b	26918 <sfbpf_parse+0x13e0>
   2681c:	ldr	r0, [r9, #12]
   26820:	str	ip, [sp, #12]
   26824:	stmib	sp, {r3, lr}
   26828:	str	r2, [sp, #16]
   2682c:	bl	3210 <sf_finish_parse>
   26830:	ldr	r2, [sp, #16]
   26834:	ldr	ip, [sp, #12]
   26838:	ldmib	sp, {r3, lr}
   2683c:	b	269cc <sfbpf_parse+0x1494>
   26840:	mov	r5, #0
   26844:	mov	r6, #31
   26848:	b	26940 <sfbpf_parse+0x1408>
   2684c:	ldr	r0, [r9]
   26850:	mov	sl, ip
   26854:	mov	r5, r3
   26858:	mov	r6, lr
   2685c:	mov	r4, r2
   26860:	bl	184e0 <sf_gen_pf_action>
   26864:	b	26908 <sfbpf_parse+0x13d0>
   26868:	mov	sl, r2
   2686c:	ldr	r0, [r9, #-80]	; 0xffffffb0
   26870:	ldr	r1, [r9, #-48]	; 0xffffffd0
   26874:	ldr	r2, [r9, #-16]
   26878:	mov	r4, ip
   2687c:	mov	r5, r3
   26880:	mov	r6, lr
   26884:	bl	12a88 <sf_gen_load>
   26888:	b	26808 <sfbpf_parse+0x12d0>
   2688c:	mov	r5, #0
   26890:	mov	r6, #37	; 0x25
   26894:	b	26940 <sfbpf_parse+0x1408>
   26898:	mov	r5, #0
   2689c:	mov	r6, #32
   268a0:	b	26940 <sfbpf_parse+0x1408>
   268a4:	mov	r5, #0
   268a8:	mov	r6, #40	; 0x28
   268ac:	b	26940 <sfbpf_parse+0x1408>
   268b0:	ldr	r0, [r9, #-16]
   268b4:	mov	sl, ip
   268b8:	mov	r5, r3
   268bc:	mov	r6, lr
   268c0:	mov	r4, r2
   268c4:	bl	15df0 <sf_gen_broadcast>
   268c8:	b	26908 <sfbpf_parse+0x13d0>
   268cc:	ldr	r0, [r9]
   268d0:	mov	sl, ip
   268d4:	mov	r5, r3
   268d8:	mov	r6, lr
   268dc:	mov	r4, r2
   268e0:	bl	184b0 <sf_gen_pf_srnr>
   268e4:	b	26908 <sfbpf_parse+0x13d0>
   268e8:	mov	r0, #0
   268ec:	b	268f4 <sfbpf_parse+0x13bc>
   268f0:	mov	r0, #1
   268f4:	mov	sl, ip
   268f8:	mov	r5, r3
   268fc:	mov	r6, lr
   26900:	mov	r4, r2
   26904:	bl	17da0 <sf_gen_inbound>
   26908:	mov	r2, r4
   2690c:	mov	lr, r6
   26910:	mov	r3, r5
   26914:	mov	ip, sl
   26918:	mov	r6, r0
   2691c:	lsr	r5, r0, #24
   26920:	lsr	r4, r0, #16
   26924:	lsr	sl, r0, #8
   26928:	b	269cc <sfbpf_parse+0x1494>
   2692c:	mov	r5, #0
   26930:	mov	r6, #36	; 0x24
   26934:	b	26940 <sfbpf_parse+0x1408>
   26938:	mov	r5, #0
   2693c:	mov	r6, #33	; 0x21
   26940:	mov	sl, #0
   26944:	mov	r4, #0
   26948:	b	269cc <sfbpf_parse+0x1494>
   2694c:	mov	r4, #0
   26950:	mov	r6, #5
   26954:	mov	sl, #0
   26958:	mov	r5, #0
   2695c:	b	269cc <sfbpf_parse+0x1494>
   26960:	ldr	r6, [r9, #-16]
   26964:	ldr	r0, [r9]
   26968:	str	ip, [sp, #12]
   2696c:	mov	r5, r3
   26970:	mov	r4, lr
   26974:	mov	sl, r2
   26978:	mov	r1, r6
   2697c:	bl	1276c <sf_gen_ecode>
   26980:	b	26a7c <sfbpf_parse+0x1544>
   26984:	ldr	r6, [r9, #-16]
   26988:	ldr	r0, [r9]
   2698c:	str	r2, [sp, #16]
   26990:	mov	r1, #0
   26994:	mov	r2, #128	; 0x80
   26998:	mov	sl, r3
   2699c:	mov	r3, r6
   269a0:	mov	r4, ip
   269a4:	mov	r5, lr
   269a8:	bl	125a8 <sf_gen_mcode6>
   269ac:	ldr	r2, [sp, #16]
   269b0:	mov	lr, r5
   269b4:	mov	r3, sl
   269b8:	mov	ip, r4
   269bc:	str	r0, [sp, #28]
   269c0:	lsr	r5, r6, #24
   269c4:	lsr	r4, r6, #16
   269c8:	lsr	sl, r6, #8
   269cc:	uxtb	r0, r6
   269d0:	uxtb	r1, r4
   269d4:	sub	r9, r9, r3, lsl #4
   269d8:	bfi	r0, sl, #8, #8
   269dc:	orr	r0, r0, r1, lsl #16
   269e0:	orr	r0, r0, r5, lsl #24
   269e4:	str	r0, [r9, #16]!
   269e8:	ldr	r0, [sp, #28]
   269ec:	str	lr, [r9, #4]
   269f0:	str	r2, [r9, #8]
   269f4:	str	r0, [r9, #12]
   269f8:	lsl	r0, r3, #1
   269fc:	movw	r3, #669	; 0x29d
   26a00:	ldrsh	r2, [r8, -r0]!
   26a04:	ldr	r0, [pc, #864]	; 26d6c <sfbpf_parse+0x1834>
   26a08:	ldr	r1, [pc, #864]	; 26d70 <sfbpf_parse+0x1838>
   26a0c:	add	r0, pc, r0
   26a10:	add	r1, pc, r1
   26a14:	ldrb	r0, [r0, r7]
   26a18:	sub	r0, r0, #126	; 0x7e
   26a1c:	add	r1, r1, r0, lsl #1
   26a20:	ldrsh	r1, [r1]
   26a24:	add	r1, r2, r1
   26a28:	cmp	r1, r3
   26a2c:	bhi	25584 <sfbpf_parse+0x4c>
   26a30:	ldr	r3, [pc, #828]	; 26d74 <sfbpf_parse+0x183c>
   26a34:	uxth	r2, r2
   26a38:	add	r3, pc, r3
   26a3c:	add	r3, r3, r1, lsl #1
   26a40:	ldrh	r3, [r3]
   26a44:	cmp	r3, r2
   26a48:	bne	25584 <sfbpf_parse+0x4c>
   26a4c:	ldr	r0, [pc, #804]	; 26d78 <sfbpf_parse+0x1840>
   26a50:	add	r0, pc, r0
   26a54:	add	r0, r0, r1, lsl #1
   26a58:	b	25590 <sfbpf_parse+0x58>
   26a5c:	ldr	r6, [r9, #-16]
   26a60:	ldr	r0, [r9]
   26a64:	str	ip, [sp, #12]
   26a68:	mov	r5, r3
   26a6c:	mov	r4, lr
   26a70:	mov	sl, r2
   26a74:	mov	r1, r6
   26a78:	bl	18878 <sf_gen_acode>
   26a7c:	str	r0, [sp, #28]
   26a80:	ldr	r0, [r9]
   26a84:	bl	d74 <free@plt>
   26a88:	ldr	ip, [sp, #12]
   26a8c:	mov	r2, sl
   26a90:	mov	lr, r4
   26a94:	mov	r3, r5
   26a98:	b	269c0 <sfbpf_parse+0x1488>
   26a9c:	sub	r0, r0, r4
   26aa0:	mov	r1, #0
   26aa4:	b	26ba0 <sfbpf_parse+0x1668>
   26aa8:	mov	r6, #0
   26aac:	b	26b2c <sfbpf_parse+0x15f4>
   26ab0:	mov	r1, #0
   26ab4:	b	26b4c <sfbpf_parse+0x1614>
   26ab8:	ldr	r1, [pc, #604]	; 26d1c <sfbpf_parse+0x17e4>
   26abc:	add	r1, pc, r1
   26ac0:	b	26acc <sfbpf_parse+0x1594>
   26ac4:	ldr	r1, [pc, #628]	; 26d40 <sfbpf_parse+0x1808>
   26ac8:	add	r1, pc, r1
   26acc:	ldr	r0, [r1, #4]
   26ad0:	cmp	r0, #0
   26ad4:	beq	26cbc <sfbpf_parse+0x1784>
   26ad8:	ldr	r6, [r9]
   26adc:	add	r4, r1, #12
   26ae0:	mov	r1, r6
   26ae4:	bl	25294 <sfbpf_strcasecmp>
   26ae8:	cmp	r0, #0
   26aec:	beq	26b00 <sfbpf_parse+0x15c8>
   26af0:	ldr	r0, [r4], #8
   26af4:	cmp	r0, #0
   26af8:	bne	26ae0 <sfbpf_parse+0x15a8>
   26afc:	b	26cbc <sfbpf_parse+0x1784>
   26b00:	ldr	r6, [r4, #-12]
   26b04:	cmn	r6, #1
   26b08:	bne	26b58 <sfbpf_parse+0x1620>
   26b0c:	b	26cbc <sfbpf_parse+0x1784>
   26b10:	mov	r6, #1
   26b14:	b	26b2c <sfbpf_parse+0x15f4>
   26b18:	mov	r1, #1
   26b1c:	b	26b4c <sfbpf_parse+0x1614>
   26b20:	mov	r0, #0
   26b24:	b	26b90 <sfbpf_parse+0x1658>
   26b28:	mov	r6, #2
   26b2c:	mov	r4, #0
   26b30:	mov	r5, #0
   26b34:	b	26b64 <sfbpf_parse+0x162c>
   26b38:	mov	r1, #2
   26b3c:	b	26b4c <sfbpf_parse+0x1614>
   26b40:	mov	r0, #1
   26b44:	b	26b90 <sfbpf_parse+0x1658>
   26b48:	mov	r1, #3
   26b4c:	ldr	r0, [pc, #488]	; 26d3c <sfbpf_parse+0x1804>
   26b50:	add	r0, pc, r0
   26b54:	ldr	r6, [r0, r1, lsl #3]
   26b58:	lsr	r5, r6, #24
   26b5c:	lsr	r4, r6, #16
   26b60:	lsr	sl, r6, #8
   26b64:	ldr	ip, [sp, #12]
   26b68:	ldr	r2, [sp, #16]
   26b6c:	ldmib	sp, {r3, lr}
   26b70:	b	269cc <sfbpf_parse+0x1494>
   26b74:	mov	r0, #2
   26b78:	b	26b90 <sfbpf_parse+0x1658>
   26b7c:	mov	r0, #3
   26b80:	b	26b90 <sfbpf_parse+0x1658>
   26b84:	mov	r0, #4
   26b88:	b	26b90 <sfbpf_parse+0x1658>
   26b8c:	mov	r0, #5
   26b90:	ldr	r1, [pc, #504]	; 26d90 <sfbpf_parse+0x1858>
   26b94:	add	r1, pc, r1
   26b98:	add	r0, r1, r0, lsl #3
   26b9c:	mov	r1, #1
   26ba0:	ldr	lr, [sp, #8]
   26ba4:	mov	ip, r5
   26ba8:	mov	r3, sl
   26bac:	ldr	r2, [pc, #416]	; 26d54 <sfbpf_parse+0x181c>
   26bb0:	ldr	r0, [r0]
   26bb4:	add	r2, pc, r2
   26bb8:	ldr	r1, [r2, r1, lsl #3]
   26bbc:	ldr	r2, [sp, #16]
   26bc0:	orr	r6, r1, r0
   26bc4:	b	269c0 <sfbpf_parse+0x1488>
   26bc8:	mov	r1, #0
   26bcc:	b	26c34 <sfbpf_parse+0x16fc>
   26bd0:	mov	r1, #1
   26bd4:	b	26c34 <sfbpf_parse+0x16fc>
   26bd8:	mov	r1, #2
   26bdc:	b	26c34 <sfbpf_parse+0x16fc>
   26be0:	mov	r1, #3
   26be4:	b	26c34 <sfbpf_parse+0x16fc>
   26be8:	mov	r1, #4
   26bec:	b	26c34 <sfbpf_parse+0x16fc>
   26bf0:	mov	r1, #5
   26bf4:	b	26c34 <sfbpf_parse+0x16fc>
   26bf8:	mov	r1, #6
   26bfc:	b	26c34 <sfbpf_parse+0x16fc>
   26c00:	mov	r1, #7
   26c04:	b	26c34 <sfbpf_parse+0x16fc>
   26c08:	mov	r1, #8
   26c0c:	b	26c34 <sfbpf_parse+0x16fc>
   26c10:	mov	r1, #9
   26c14:	b	26c34 <sfbpf_parse+0x16fc>
   26c18:	mov	r1, #10
   26c1c:	b	26c34 <sfbpf_parse+0x16fc>
   26c20:	mov	r1, #11
   26c24:	b	26c34 <sfbpf_parse+0x16fc>
   26c28:	mov	r1, #12
   26c2c:	b	26c34 <sfbpf_parse+0x16fc>
   26c30:	mov	r1, #13
   26c34:	ldr	lr, [sp, #8]
   26c38:	mov	ip, r5
   26c3c:	mov	r3, sl
   26c40:	ldr	r0, [pc, #336]	; 26d98 <sfbpf_parse+0x1860>
   26c44:	add	r0, pc, r0
   26c48:	add	r0, r0, r1, lsl #3
   26c4c:	mov	r1, #2
   26c50:	b	26bac <sfbpf_parse+0x1674>
   26c54:	sub	r0, fp, #432	; 0x1b0
   26c58:	mov	r6, #0
   26c5c:	cmp	r4, r0
   26c60:	bne	26c70 <sfbpf_parse+0x1738>
   26c64:	b	26c78 <sfbpf_parse+0x1740>
   26c68:	mov	r6, #1
   26c6c:	mov	r4, r5
   26c70:	mov	r0, r4
   26c74:	bl	d74 <free@plt>
   26c78:	mov	r0, r6
   26c7c:	sub	sp, fp, #28
   26c80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26c84:	ldr	r0, [pc, #252]	; 26d88 <sfbpf_parse+0x1850>
   26c88:	add	r0, pc, r0
   26c8c:	bl	26e28 <sfbpf_error>
   26c90:	bl	26df8 <pfreason_to_num>
   26c94:	bl	26e10 <pfaction_to_num>
   26c98:	ldr	r0, [pc, #220]	; 26d7c <sfbpf_parse+0x1844>
   26c9c:	ldr	r0, [pc, r0]
   26ca0:	ldr	r1, [pc, #216]	; 26d80 <sfbpf_parse+0x1848>
   26ca4:	add	r0, r0, #1
   26ca8:	add	r1, pc, r1
   26cac:	str	r0, [r1]
   26cb0:	ldr	r0, [pc, #204]	; 26d84 <sfbpf_parse+0x184c>
   26cb4:	add	r0, pc, r0
   26cb8:	bl	26e28 <sfbpf_error>
   26cbc:	ldr	r0, [pc, #128]	; 26d44 <sfbpf_parse+0x180c>
   26cc0:	add	r0, pc, r0
   26cc4:	bl	2068 <sf_bpf_error>
   26cc8:	ldr	r0, [pc, #92]	; 26d2c <sfbpf_parse+0x17f4>
   26ccc:	add	r0, pc, r0
   26cd0:	bl	2068 <sf_bpf_error>
   26cd4:	ldr	r0, [pc, #84]	; 26d30 <sfbpf_parse+0x17f8>
   26cd8:	add	r0, pc, r0
   26cdc:	bl	2068 <sf_bpf_error>
   26ce0:	ldr	r0, [pc, #64]	; 26d28 <sfbpf_parse+0x17f0>
   26ce4:	add	r0, pc, r0
   26ce8:	bl	2068 <sf_bpf_error>
   26cec:	ldr	r0, [pc, #116]	; 26d68 <sfbpf_parse+0x1830>
   26cf0:	add	r0, pc, r0
   26cf4:	bl	2068 <sf_bpf_error>
   26cf8:	ldr	r0, [pc, #156]	; 26d9c <sfbpf_parse+0x1864>
   26cfc:	add	r0, pc, r0
   26d00:	bl	2068 <sf_bpf_error>
   26d04:	ldr	r0, [pc, #160]	; 26dac <sfbpf_parse+0x1874>
   26d08:	add	r0, pc, r0
   26d0c:	bl	2068 <sf_bpf_error>
   26d10:	ldr	r0, [pc, #12]	; 26d24 <sfbpf_parse+0x17ec>
   26d14:	add	r0, pc, r0
   26d18:	bl	2068 <sf_bpf_error>
   26d1c:	.word	0x000202ec
   26d20:	.word	0x00020ccc
   26d24:	.word	0x000057f8
   26d28:	.word	0x0000584b
   26d2c:	.word	0x0000588b
   26d30:	.word	0x000058a3
   26d34:	.word	0x0000662d
   26d38:	.word	0x0000653b
   26d3c:	.word	0x00020208
   26d40:	.word	0x00020388
   26d44:	.word	0x00005911
   26d48:	.word	0x00006474
   26d4c:	.word	0x00020bb4
   26d50:	.word	0x000064ce
   26d54:	.word	0x000201d4
   26d58:	.word	0x000065fd
   26d5c:	.word	0x000065ef
   26d60:	.word	0x000065ce
   26d64:	.word	0x000065bd
   26d68:	.word	0x00005910
   26d6c:	.word	0x0000597d
   26d70:	.word	0x00005a44
   26d74:	.word	0x00004cfc
   26d78:	.word	0x00005220
   26d7c:	.word	0x00020d2c
   26d80:	.word	0x00020d20
   26d84:	.word	0x00005965
   26d88:	.word	0x0000599e
   26d8c:	.word	0x000064ba
   26d90:	.word	0x000202bc
   26d94:	.word	0x00006452
   26d98:	.word	0x00020244
   26d9c:	.word	0x000058c1
   26da0:	.word	0x00006527
   26da4:	.word	0x0000651a
   26da8:	.word	0x00006506
   26dac:	.word	0x0000589c
   26db0:	.word	0x000064a6
   26db4:	.word	0x000064a0
   26db8:	.word	0x0000647a
   26dbc:	.word	0x00006469
   26dc0:	.word	0x00006465
   26dc4:	.word	0x0000644a
   26dc8:	.word	0x00006443
   26dcc:	.word	0x000063f8
   26dd0:	.word	0x000063f7
   26dd4:	.word	0x000063ef
   26dd8:	.word	0x000063e8
   26ddc:	.word	0x0000639d
   26de0:	.word	0x0000638e
   26de4:	.word	0x00006386
   26de8:	.word	0x0000637f
   26dec:	.word	0x0000637c
   26df0:	.word	0x00006368
   26df4:	.word	0x0000635c

00026df8 <pfreason_to_num>:
   26df8:	push	{fp, lr}
   26dfc:	mov	fp, sp
   26e00:	ldr	r0, [pc, #4]	; 26e0c <pfreason_to_num+0x14>
   26e04:	add	r0, pc, r0
   26e08:	bl	2068 <sf_bpf_error>
   26e0c:	.word	0x000033d0

00026e10 <pfaction_to_num>:
   26e10:	push	{fp, lr}
   26e14:	mov	fp, sp
   26e18:	ldr	r0, [pc, #4]	; 26e24 <pfaction_to_num+0x14>
   26e1c:	add	r0, pc, r0
   26e20:	bl	2068 <sf_bpf_error>
   26e24:	.word	0x000033b8

00026e28 <sfbpf_error>:
   26e28:	push	{fp, lr}
   26e2c:	mov	fp, sp
   26e30:	mov	r1, r0
   26e34:	ldr	r0, [pc, #28]	; 26e58 <sfbpf_error+0x30>
   26e38:	ldr	r0, [pc, r0]
   26e3c:	ldr	r2, [pc, #24]	; 26e5c <sfbpf_error+0x34>
   26e40:	add	r0, r0, #1
   26e44:	add	r2, pc, r2
   26e48:	str	r0, [r2]
   26e4c:	ldr	r0, [pc, #12]	; 26e60 <sfbpf_error+0x38>
   26e50:	add	r0, pc, r0
   26e54:	bl	2068 <sf_bpf_error>
   26e58:	.word	0x00020b30
   26e5c:	.word	0x00020b24
   26e60:	.word	0x0000414d

00026e64 <sfbpf_lex>:
   26e64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26e68:	add	fp, sp, #28
   26e6c:	sub	sp, sp, #84	; 0x54
   26e70:	ldr	r0, [pc, #4072]	; 27e60 <sfbpf_lex+0xffc>
   26e74:	add	r0, pc, r0
   26e78:	ldrb	r1, [r0]
   26e7c:	ldr	lr, [pc, #4064]	; 27e64 <sfbpf_lex+0x1000>
   26e80:	ldr	ip, [pc, #4064]	; 27e68 <sfbpf_lex+0x1004>
   26e84:	cmp	r1, #0
   26e88:	add	lr, pc, lr
   26e8c:	add	ip, pc, ip
   26e90:	bne	26f94 <sfbpf_lex+0x130>
   26e94:	mov	r1, #1
   26e98:	strb	r1, [r0]
   26e9c:	ldrb	r0, [ip]
   26ea0:	cmp	r0, #0
   26ea4:	strbeq	r1, [ip]
   26ea8:	ldr	r0, [pc, #4080]	; 27ea0 <sfbpf_lex+0x103c>
   26eac:	ldr	r0, [pc, r0]
   26eb0:	ldr	r4, [pc, #4076]	; 27ea4 <sfbpf_lex+0x1040>
   26eb4:	cmp	r0, #0
   26eb8:	add	r4, pc, r4
   26ebc:	bne	26ed0 <sfbpf_lex+0x6c>
   26ec0:	ldr	r0, [pc, #4064]	; 27ea8 <sfbpf_lex+0x1044>
   26ec4:	ldr	r0, [pc, r0]
   26ec8:	ldr	r0, [r0]
   26ecc:	str	r0, [r4]
   26ed0:	ldr	r0, [pc, #4052]	; 27eac <sfbpf_lex+0x1048>
   26ed4:	mov	r6, ip
   26ed8:	ldr	r0, [pc, r0]
   26edc:	cmp	r0, #0
   26ee0:	bne	26efc <sfbpf_lex+0x98>
   26ee4:	ldr	r0, [pc, #4036]	; 27eb0 <sfbpf_lex+0x104c>
   26ee8:	ldr	r0, [pc, r0]
   26eec:	ldr	r0, [r0]
   26ef0:	ldr	r1, [pc, #4092]	; 27ef4 <sfbpf_lex+0x1090>
   26ef4:	add	r1, pc, r1
   26ef8:	str	r0, [r1]
   26efc:	ldr	r1, [pc, #4084]	; 27ef8 <sfbpf_lex+0x1094>
   26f00:	ldr	r1, [pc, r1]
   26f04:	cmp	r1, #0
   26f08:	beq	26f20 <sfbpf_lex+0xbc>
   26f0c:	ldr	r2, [pc, #4072]	; 27efc <sfbpf_lex+0x1098>
   26f10:	ldr	r2, [pc, r2]
   26f14:	ldr	r0, [r1, r2, lsl #2]
   26f18:	cmp	r0, #0
   26f1c:	bne	26f50 <sfbpf_lex+0xec>
   26f20:	mov	r5, lr
   26f24:	bl	28b28 <sfbpf_ensure_buffer_stack>
   26f28:	ldr	r0, [pc, #4048]	; 27f00 <sfbpf_lex+0x109c>
   26f2c:	mov	r1, #16384	; 0x4000
   26f30:	ldr	r0, [pc, r0]
   26f34:	bl	28c18 <sfbpf__create_buffer>
   26f38:	ldr	r1, [pc, #4036]	; 27f04 <sfbpf_lex+0x10a0>
   26f3c:	mov	lr, r5
   26f40:	ldr	r1, [pc, r1]
   26f44:	ldr	r2, [pc, #4028]	; 27f08 <sfbpf_lex+0x10a4>
   26f48:	ldr	r2, [pc, r2]
   26f4c:	str	r0, [r1, r2, lsl #2]
   26f50:	ldr	r3, [r0, #16]
   26f54:	ldr	r7, [pc, #4016]	; 27f0c <sfbpf_lex+0x10a8>
   26f58:	mov	ip, r6
   26f5c:	add	r7, pc, r7
   26f60:	str	r3, [r7]
   26f64:	ldr	r0, [r0, #8]
   26f68:	ldr	r3, [pc, #4080]	; 27f60 <sfbpf_lex+0x10fc>
   26f6c:	add	r3, pc, r3
   26f70:	str	r0, [r3]
   26f74:	ldr	r3, [pc, #4072]	; 27f64 <sfbpf_lex+0x1100>
   26f78:	add	r3, pc, r3
   26f7c:	str	r0, [r3]
   26f80:	ldr	r1, [r1, r2, lsl #2]
   26f84:	ldr	r1, [r1]
   26f88:	str	r1, [r4]
   26f8c:	ldrb	r0, [r0]
   26f90:	strb	r0, [lr]
   26f94:	ldr	r4, [pc, #4044]	; 27f68 <sfbpf_lex+0x1104>
   26f98:	ldr	r6, [pc, #4044]	; 27f6c <sfbpf_lex+0x1108>
   26f9c:	ldr	sl, [pc, #4044]	; 27f70 <sfbpf_lex+0x110c>
   26fa0:	ldr	r5, [pc, #4044]	; 27f74 <sfbpf_lex+0x1110>
   26fa4:	ldr	r9, [pc, #4044]	; 27f78 <sfbpf_lex+0x1114>
   26fa8:	movw	r8, #1434	; 0x59a
   26fac:	add	r4, pc, r4
   26fb0:	add	r6, pc, r6
   26fb4:	add	sl, pc, sl
   26fb8:	add	r5, pc, r5
   26fbc:	add	r9, pc, r9
   26fc0:	ldrb	r0, [lr]
   26fc4:	ldr	r7, [pc, #4088]	; 27fc4 <sfbpf_lex+0x1160>
   26fc8:	ldr	r7, [pc, r7]
   26fcc:	strb	r0, [r7]
   26fd0:	str	r7, [sp, #40]	; 0x28
   26fd4:	ldrb	r0, [ip]
   26fd8:	b	27014 <sfbpf_lex+0x1b0>
   26fdc:	ldr	r4, [pc, #4080]	; 27fd4 <sfbpf_lex+0x1170>
   26fe0:	ldr	r6, [pc, #4080]	; 27fd8 <sfbpf_lex+0x1174>
   26fe4:	add	r4, pc, r4
   26fe8:	add	r6, pc, r6
   26fec:	ldr	r0, [pc, #4072]	; 27fdc <sfbpf_lex+0x1178>
   26ff0:	movw	r2, #7401	; 0x1ce9
   26ff4:	add	r7, r7, #1
   26ff8:	add	r0, pc, r0
   26ffc:	add	r0, r0, r3, lsl #1
   27000:	ldrsh	r0, [r0]
   27004:	add	r1, sl, r0, lsl #1
   27008:	ldrh	r1, [r1]
   2700c:	cmp	r1, r2
   27010:	beq	270ac <sfbpf_lex+0x248>
   27014:	ldrb	r1, [r7]
   27018:	add	r2, r6, r0, lsl #1
   2701c:	ldrh	r2, [r2]
   27020:	ldrb	r1, [r4, r1]
   27024:	cmp	r2, #0
   27028:	beq	27044 <sfbpf_lex+0x1e0>
   2702c:	ldr	r2, [pc, #4036]	; 27ff8 <sfbpf_lex+0x1194>
   27030:	add	r2, pc, r2
   27034:	str	r7, [r2]
   27038:	ldr	r2, [pc, #4028]	; 27ffc <sfbpf_lex+0x1198>
   2703c:	add	r2, pc, r2
   27040:	str	r0, [r2]
   27044:	add	r2, sl, r0, lsl #1
   27048:	ldrsh	r2, [r2]
   2704c:	add	r3, r2, r1
   27050:	add	r2, r5, r3, lsl #1
   27054:	ldrsh	r2, [r2]
   27058:	cmp	r0, r2
   2705c:	beq	26fec <sfbpf_lex+0x188>
   27060:	mov	r2, r1
   27064:	b	2708c <sfbpf_lex+0x228>
   27068:	add	r1, sl, r0, lsl #1
   2706c:	uxth	r4, r0
   27070:	ldrsh	r1, [r1]
   27074:	uxtab	r3, r1, r2
   27078:	add	r1, r5, r3, lsl #1
   2707c:	ldrh	r6, [r1]
   27080:	uxtb	r1, r2
   27084:	cmp	r4, r6
   27088:	beq	26fdc <sfbpf_lex+0x178>
   2708c:	add	r0, r9, r0, lsl #1
   27090:	ldrsh	r0, [r0]
   27094:	cmp	r0, r8
   27098:	blt	27068 <sfbpf_lex+0x204>
   2709c:	ldr	r2, [pc, #4084]	; 28098 <sfbpf_lex+0x1234>
   270a0:	add	r2, pc, r2
   270a4:	ldrb	r2, [r2, r1]
   270a8:	b	27068 <sfbpf_lex+0x204>
   270ac:	ldr	r2, [sp, #40]	; 0x28
   270b0:	str	r2, [sp, #36]	; 0x24
   270b4:	add	r0, r6, r0, lsl #1
   270b8:	ldrh	r0, [r0]
   270bc:	cmp	r0, #0
   270c0:	bne	270dc <sfbpf_lex+0x278>
   270c4:	ldr	r0, [pc, #4080]	; 280bc <sfbpf_lex+0x1258>
   270c8:	ldr	r0, [pc, r0]
   270cc:	ldr	r7, [pc, #4092]	; 280d0 <sfbpf_lex+0x126c>
   270d0:	add	r0, r6, r0, lsl #1
   270d4:	ldr	r7, [pc, r7]
   270d8:	ldrh	r0, [r0]
   270dc:	ldr	r1, [pc, #4092]	; 280e0 <sfbpf_lex+0x127c>
   270e0:	sxth	r0, r0
   270e4:	add	r1, pc, r1
   270e8:	str	r2, [r1]
   270ec:	sub	r1, r7, r2
   270f0:	ldr	r2, [pc, #4076]	; 280e4 <sfbpf_lex+0x1280>
   270f4:	add	r2, pc, r2
   270f8:	str	r1, [r2]
   270fc:	ldrb	r1, [r7]
   27100:	strb	r1, [lr]
   27104:	mov	r1, #0
   27108:	strb	r1, [r7]
   2710c:	ldr	r1, [pc, #4088]	; 2810c <sfbpf_lex+0x12a8>
   27110:	add	r1, pc, r1
   27114:	str	r7, [r1]
   27118:	cmp	r0, #146	; 0x92
   2711c:	bhi	28938 <sfbpf_lex+0x1ad4>
   27120:	add	r1, pc, #4
   27124:	ldr	r0, [r1, r0, lsl #2]
   27128:	add	pc, r1, r0
   2712c:	.word	0x00000a08
   27130:	.word	0x00001254
   27134:	.word	0x00001108
   27138:	.word	0x00000f40
   2713c:	.word	0x00000f40
   27140:	.word	0x0000134c
   27144:	.word	0x000012c8
   27148:	.word	0x00001340
   2714c:	.word	0x00001428
   27150:	.word	0x00001274
   27154:	.word	0x000012bc
   27158:	.word	0x000015b4
   2715c:	.word	0x000016a4
   27160:	.word	0x00001068
   27164:	.word	0x00001670
   27168:	.word	0x000013e0
   2716c:	.word	0x00001560
   27170:	.word	0x000013ec
   27174:	.word	0x00001614
   27178:	.word	0x0000153c
   2717c:	.word	0x0000159c
   27180:	.word	0x00001590
   27184:	.word	0x0000162c
   27188:	.word	0x00001454
   2718c:	.word	0x0000163c
   27190:	.word	0x0000141c
   27194:	.word	0x00001244
   27198:	.word	0x00001178
   2719c:	.word	0x00001184
   271a0:	.word	0x00000fa8
   271a4:	.word	0x00000fa8
   271a8:	.word	0x00000f28
   271ac:	.word	0x00000f28
   271b0:	.word	0x000015d0
   271b4:	.word	0x00001210
   271b8:	.word	0x00001380
   271bc:	.word	0x000013f8
   271c0:	.word	0x000015f0
   271c4:	.word	0x00001438
   271c8:	.word	0x000012ac
   271cc:	.word	0x000010f0
   271d0:	.word	0x00001044
   271d4:	.word	0x00001474
   271d8:	.word	0x00001050
   271dc:	.word	0x000015c0
   271e0:	.word	0x000015e4
   271e4:	.word	0x00001608
   271e8:	.word	0x00000fe4
   271ec:	.word	0x0000105c
   271f0:	.word	0x00001510
   271f4:	.word	0x000016b0
   271f8:	.word	0x00001554
   271fc:	.word	0x000014f8
   27200:	.word	0x00001584
   27204:	.word	0x000011a8
   27208:	.word	0x0000122c
   2720c:	.word	0x00001280
   27210:	.word	0x00001160
   27214:	.word	0x000010e4
   27218:	.word	0x000012a0
   2721c:	.word	0x00001268
   27220:	.word	0x00001374
   27224:	.word	0x0000109c
   27228:	.word	0x00001404
   2722c:	.word	0x0000116c
   27230:	.word	0x00001074
   27234:	.word	0x000010fc
   27238:	.word	0x00001304
   2723c:	.word	0x000011e8
   27240:	.word	0x000010d8
   27244:	.word	0x00001144
   27248:	.word	0x00001120
   2724c:	.word	0x00001014
   27250:	.word	0x000015fc
   27254:	.word	0x000010a8
   27258:	.word	0x0000152c
   2725c:	.word	0x0000156c
   27260:	.word	0x00001460
   27264:	.word	0x00001620
   27268:	.word	0x00001548
   2726c:	.word	0x00001520
   27270:	.word	0x00000ff0
   27274:	.word	0x000015a8
   27278:	.word	0x000011dc
   2727c:	.word	0x000011b4
   27280:	.word	0x00001114
   27284:	.word	0x000011c0
   27288:	.word	0x00001238
   2728c:	.word	0x00001138
   27290:	.word	0x00001290
   27294:	.word	0x00001080
   27298:	.word	0x0000112c
   2729c:	.word	0x000012e0
   272a0:	.word	0x00001190
   272a4:	.word	0x0000138c
   272a8:	.word	0x00000f34
   272ac:	.word	0x00000f34
   272b0:	.word	0x00001008
   272b4:	.word	0x00001410
   272b8:	.word	0x00001358
   272bc:	.word	0x000012d4
   272c0:	.word	0x000013d4
   272c4:	.word	0xfffffe94
   272c8:	.word	0x00001030
   272cc:	.word	0x00000ffc
   272d0:	.word	0x0000119c
   272d4:	.word	0x00001578
   272d8:	.word	0x00001310
   272dc:	.word	0x00001504
   272e0:	.word	0x000016ec
   272e4:	.word	0x000016c4
   272e8:	.word	0x00000fbc
   272ec:	.word	0x00001398
   272f0:	.word	0x0000131c
   272f4:	.word	0x00001484
   272f8:	.word	0x000017cc
   272fc:	.word	0x00000f80
   27300:	.word	0x00000f18
   27304:	.word	0x00000f80
   27308:	.word	0x00001650
   2730c:	.word	0x00000f5c
   27310:	.word	0x00001694
   27314:	.word	0x00000f70
   27318:	.word	0x00001444
   2731c:	.word	0x00001660
   27320:	.word	0x00001020
   27324:	.word	0x0000167c
   27328:	.word	0x00000f94
   2732c:	.word	0x0000121c
   27330:	.word	0x00001150
   27334:	.word	0x00000f4c
   27338:	.word	0x000012f4
   2733c:	.word	0x000011f4
   27340:	.word	0x00000f94
   27344:	.word	0x00000f18
   27348:	.word	0x00001364
   2734c:	.word	0x00000f5c
   27350:	.word	0x00000f70
   27354:	.word	0x00000f4c
   27358:	.word	0x000011cc
   2735c:	.word	0x000010b4
   27360:	.word	0x0000108c
   27364:	.word	0x000017ac
   27368:	.word	0x00001838
   2736c:	.word	0x00000ed4
   27370:	.word	0x0000024c
   27374:	.word	0x00001204
   27378:	ldrb	r0, [lr]
   2737c:	ldr	r1, [pc, #4088]	; 2837c <sfbpf_lex+0x1518>
   27380:	ldr	r1, [pc, r1]
   27384:	strb	r0, [r7]
   27388:	str	r1, [sp, #8]
   2738c:	ldr	r1, [pc, #4088]	; 2838c <sfbpf_lex+0x1528>
   27390:	ldr	r1, [pc, r1]
   27394:	ldr	r3, [pc, #4084]	; 28390 <sfbpf_lex+0x152c>
   27398:	ldr	r3, [pc, r3]
   2739c:	str	r1, [sp, #24]
   273a0:	ldr	r2, [r3, r1, lsl #2]
   273a4:	str	r3, [sp, #32]
   273a8:	ldr	r0, [r2, #44]	; 0x2c
   273ac:	cmp	r0, #0
   273b0:	beq	273c4 <sfbpf_lex+0x560>
   273b4:	mov	r1, r2
   273b8:	ldr	r2, [pc, #4088]	; 283b8 <sfbpf_lex+0x1554>
   273bc:	ldr	r2, [pc, r2]
   273c0:	b	27408 <sfbpf_lex+0x5a4>
   273c4:	ldr	r0, [r2, #16]
   273c8:	str	r0, [sp, #16]
   273cc:	ldr	r0, [pc, #4084]	; 283c8 <sfbpf_lex+0x1564>
   273d0:	str	r2, [sp, #20]
   273d4:	ldr	r2, [sp, #16]
   273d8:	add	r0, pc, r0
   273dc:	str	r2, [r0]
   273e0:	ldr	r0, [pc, #4092]	; 283e4 <sfbpf_lex+0x1580>
   273e4:	ldr	r0, [pc, r0]
   273e8:	ldr	r2, [sp, #20]
   273ec:	str	r0, [r2]
   273f0:	mov	r2, #1
   273f4:	ldr	r0, [r3, r1, lsl #2]
   273f8:	str	r2, [r0, #44]	; 0x2c
   273fc:	ldr	r0, [sp, #32]
   27400:	ldr	r2, [sp, #16]
   27404:	ldr	r1, [r0, r1, lsl #2]
   27408:	str	r1, [sp, #20]
   2740c:	str	r2, [sp, #16]
   27410:	ldr	r0, [r1, #4]
   27414:	ldr	r3, [pc, #4092]	; 28418 <sfbpf_lex+0x15b4>
   27418:	add	r2, r0, r2
   2741c:	ldr	r3, [pc, r3]
   27420:	str	r3, [sp, #40]	; 0x28
   27424:	ldr	r3, [pc, #4080]	; 2841c <sfbpf_lex+0x15b8>
   27428:	ldr	r3, [pc, r3]
   2742c:	cmp	r3, r2
   27430:	bls	27b54 <sfbpf_lex+0xcf0>
   27434:	add	r2, r2, #1
   27438:	cmp	r3, r2
   2743c:	bhi	2894c <sfbpf_lex+0x1ae8>
   27440:	ldr	r2, [sp, #40]	; 0x28
   27444:	ldr	r1, [sp, #20]
   27448:	str	r3, [sp, #12]
   2744c:	sub	r3, r3, r2
   27450:	ldr	r2, [r1, #40]	; 0x28
   27454:	cmp	r2, #0
   27458:	beq	27494 <sfbpf_lex+0x630>
   2745c:	sub	r1, r3, #1
   27460:	str	r3, [sp, #28]
   27464:	cmp	r1, #1
   27468:	str	r1, [sp, #16]
   2746c:	blt	27650 <sfbpf_lex+0x7ec>
   27470:	ldr	ip, [sp, #40]	; 0x28
   27474:	ldr	r2, [sp, #12]
   27478:	mov	lr, #0
   2747c:	mvn	r1, ip
   27480:	add	r1, r1, r2
   27484:	cmp	r1, #16
   27488:	bcs	274a0 <sfbpf_lex+0x63c>
   2748c:	mov	r3, ip
   27490:	b	275b8 <sfbpf_lex+0x754>
   27494:	cmp	r3, #1
   27498:	beq	27afc <sfbpf_lex+0xc98>
   2749c:	b	27d48 <sfbpf_lex+0xee4>
   274a0:	str	r1, [sp, #4]
   274a4:	sub	r1, r2, #1
   274a8:	cmp	r0, r1
   274ac:	bcs	274d0 <sfbpf_lex+0x66c>
   274b0:	ldr	r1, [sp, #28]
   274b4:	add	r1, r0, r1
   274b8:	sub	r1, r1, #1
   274bc:	cmp	ip, r1
   274c0:	bcs	274d0 <sfbpf_lex+0x66c>
   274c4:	ldr	r1, [sp, #4]
   274c8:	mov	r3, ip
   274cc:	b	275b8 <sfbpf_lex+0x754>
   274d0:	ldr	r1, [sp, #4]
   274d4:	mov	r3, #0
   274d8:	bic	lr, r1, #15
   274dc:	mov	r1, #1
   274e0:	sub	r4, lr, #16
   274e4:	add	r2, r1, r4, lsr #4
   274e8:	cmp	r4, #48	; 0x30
   274ec:	and	r1, r2, #3
   274f0:	str	r1, [sp]
   274f4:	bcc	27560 <sfbpf_lex+0x6fc>
   274f8:	ldr	r1, [sp]
   274fc:	mov	r3, #0
   27500:	sub	r2, r1, r2
   27504:	add	r4, ip, r3
   27508:	mov	r6, #48	; 0x30
   2750c:	add	ip, r0, r3
   27510:	adds	r2, r2, #4
   27514:	add	r3, r3, #64	; 0x40
   27518:	mov	r1, r4
   2751c:	vld1.8	{d16-d17}, [r1], r6
   27520:	str	r1, [sp, #20]
   27524:	mov	r1, ip
   27528:	vst1.8	{d16-d17}, [r1], r6
   2752c:	add	r6, r4, #16
   27530:	add	r4, r4, #32
   27534:	vld1.8	{d16-d17}, [r6]
   27538:	add	r6, ip, #16
   2753c:	vst1.8	{d16-d17}, [r6]
   27540:	add	r6, ip, #32
   27544:	ldr	ip, [sp, #40]	; 0x28
   27548:	vld1.8	{d16-d17}, [r4]
   2754c:	ldr	r4, [sp, #20]
   27550:	vst1.8	{d16-d17}, [r6]
   27554:	vld1.8	{d16-d17}, [r4]
   27558:	vst1.8	{d16-d17}, [r1]
   2755c:	bne	27504 <sfbpf_lex+0x6a0>
   27560:	ldr	r1, [sp]
   27564:	ldr	r4, [pc, #4084]	; 28560 <sfbpf_lex+0x16fc>
   27568:	cmp	r1, #0
   2756c:	add	r4, pc, r4
   27570:	beq	27590 <sfbpf_lex+0x72c>
   27574:	add	r2, r0, r3
   27578:	add	r3, ip, r3
   2757c:	rsb	r1, r1, #0
   27580:	vld1.8	{d16-d17}, [r3]!
   27584:	adds	r1, r1, #1
   27588:	vst1.8	{d16-d17}, [r2]!
   2758c:	bcc	27580 <sfbpf_lex+0x71c>
   27590:	ldr	r1, [sp, #4]
   27594:	ldr	ip, [pc, #4092]	; 28598 <sfbpf_lex+0x1734>
   27598:	ldr	r6, [pc, #4092]	; 2859c <sfbpf_lex+0x1738>
   2759c:	cmp	r1, lr
   275a0:	add	ip, pc, ip
   275a4:	add	r6, pc, r6
   275a8:	beq	27638 <sfbpf_lex+0x7d4>
   275ac:	ldr	ip, [sp, #40]	; 0x28
   275b0:	add	r0, r0, lr
   275b4:	add	r3, ip, lr
   275b8:	ands	r2, r1, #3
   275bc:	ldr	r1, [sp, #12]
   275c0:	sub	r1, r1, lr
   275c4:	sub	r1, r1, ip
   275c8:	sub	ip, r1, #2
   275cc:	beq	275e4 <sfbpf_lex+0x780>
   275d0:	ldrb	r1, [r3], #1
   275d4:	subs	r2, r2, #1
   275d8:	add	lr, lr, #1
   275dc:	strb	r1, [r0], #1
   275e0:	bne	275d0 <sfbpf_lex+0x76c>
   275e4:	cmp	ip, #3
   275e8:	ldr	ip, [pc, #4028]	; 285ac <sfbpf_lex+0x1748>
   275ec:	add	ip, pc, ip
   275f0:	bcc	27638 <sfbpf_lex+0x7d4>
   275f4:	ldr	r1, [sp, #40]	; 0x28
   275f8:	ldr	r2, [sp, #12]
   275fc:	add	r1, lr, r1
   27600:	sub	r1, r1, r2
   27604:	add	r1, r1, #1
   27608:	ldrb	r2, [r3]
   2760c:	adds	r1, r1, #4
   27610:	strb	r2, [r0]
   27614:	ldrb	r2, [r3, #1]
   27618:	strb	r2, [r0, #1]
   2761c:	ldrb	r2, [r3, #2]
   27620:	strb	r2, [r0, #2]
   27624:	ldrb	r2, [r3, #3]
   27628:	add	r3, r3, #4
   2762c:	strb	r2, [r0, #3]
   27630:	add	r0, r0, #4
   27634:	bne	27608 <sfbpf_lex+0x7a4>
   27638:	ldr	r0, [sp, #32]
   2763c:	ldr	r1, [sp, #24]
   27640:	ldr	r0, [r0, r1, lsl #2]
   27644:	str	r0, [sp, #20]
   27648:	ldr	lr, [pc, #4088]	; 28648 <sfbpf_lex+0x17e4>
   2764c:	add	lr, pc, lr
   27650:	ldr	r1, [sp, #20]
   27654:	ldr	r0, [r1, #44]	; 0x2c
   27658:	cmp	r0, #2
   2765c:	bne	27678 <sfbpf_lex+0x814>
   27660:	ldr	r2, [pc, #4092]	; 28664 <sfbpf_lex+0x1800>
   27664:	mov	r0, #0
   27668:	add	r2, pc, r2
   2766c:	str	r0, [r2]
   27670:	str	r0, [r1, #16]
   27674:	b	2795c <sfbpf_lex+0xaf8>
   27678:	ldr	r3, [r1, #12]
   2767c:	ldr	r1, [sp, #28]
   27680:	sub	r1, r3, r1
   27684:	cmp	r1, #0
   27688:	ble	2769c <sfbpf_lex+0x838>
   2768c:	ldr	r6, [sp, #20]
   27690:	ldr	r2, [sp, #32]
   27694:	ldr	ip, [sp, #24]
   27698:	b	27730 <sfbpf_lex+0x8cc>
   2769c:	ldr	r4, [sp, #12]
   276a0:	ldr	r6, [sp, #20]
   276a4:	ldr	r1, [r6, #20]
   276a8:	cmp	r1, #0
   276ac:	beq	28924 <sfbpf_lex+0x1ac0>
   276b0:	ldr	r0, [r6, #4]
   276b4:	cmp	r3, #0
   276b8:	str	r4, [sp, #32]
   276bc:	ble	276c8 <sfbpf_lex+0x864>
   276c0:	lsl	r1, r3, #1
   276c4:	b	276d4 <sfbpf_lex+0x870>
   276c8:	asr	r1, r3, #31
   276cc:	add	r1, r3, r1, lsr #29
   276d0:	add	r1, r3, r1, asr #3
   276d4:	str	r1, [r6, #12]
   276d8:	add	r1, r1, #2
   276dc:	mov	r4, r0
   276e0:	bl	dbc <realloc@plt>
   276e4:	cmp	r0, #0
   276e8:	str	r0, [r6, #4]
   276ec:	beq	2892c <sfbpf_lex+0x1ac8>
   276f0:	ldr	r1, [sp, #32]
   276f4:	sub	r1, r1, r4
   276f8:	add	r4, r0, r1
   276fc:	ldr	r0, [pc, #4084]	; 286f8 <sfbpf_lex+0x1894>
   27700:	add	r0, pc, r0
   27704:	str	r4, [r0]
   27708:	ldr	ip, [pc, #4088]	; 28708 <sfbpf_lex+0x18a4>
   2770c:	ldr	ip, [pc, ip]
   27710:	ldr	r2, [pc, #4084]	; 2870c <sfbpf_lex+0x18a8>
   27714:	ldr	r2, [pc, r2]
   27718:	ldr	r1, [sp, #28]
   2771c:	ldr	r6, [r2, ip, lsl #2]
   27720:	ldr	r3, [r6, #12]
   27724:	sub	r1, r3, r1
   27728:	cmp	r1, #1
   2772c:	blt	276a4 <sfbpf_lex+0x840>
   27730:	ldr	r0, [r6, #24]
   27734:	cmp	r1, #8192	; 0x2000
   27738:	movge	r1, #8192	; 0x2000
   2773c:	mov	r6, r1
   27740:	cmp	r0, #0
   27744:	beq	277f8 <sfbpf_lex+0x994>
   27748:	ldr	r0, [sp, #40]	; 0x28
   2774c:	ldr	r1, [sp, #12]
   27750:	mov	r4, #0
   27754:	mvn	r0, r0
   27758:	add	r0, r0, r1
   2775c:	str	r0, [sp, #40]	; 0x28
   27760:	ldr	r0, [pc, #4092]	; 28764 <sfbpf_lex+0x1900>
   27764:	ldr	r0, [pc, r0]
   27768:	bl	ee8 <getc@plt>
   2776c:	cmn	r0, #1
   27770:	cmpne	r0, #10
   27774:	beq	277a8 <sfbpf_lex+0x944>
   27778:	ldr	r1, [pc, #4084]	; 28774 <sfbpf_lex+0x1910>
   2777c:	ldr	r1, [pc, r1]
   27780:	ldr	r2, [pc, #4080]	; 28778 <sfbpf_lex+0x1914>
   27784:	ldr	r2, [pc, r2]
   27788:	ldr	r1, [r2, r1, lsl #2]
   2778c:	ldr	r2, [sp, #40]	; 0x28
   27790:	ldr	r1, [r1, #4]
   27794:	add	r1, r1, r2
   27798:	strb	r0, [r1, r4]
   2779c:	add	r4, r4, #1
   277a0:	cmp	r4, r6
   277a4:	blt	27760 <sfbpf_lex+0x8fc>
   277a8:	cmn	r0, #1
   277ac:	beq	278ec <sfbpf_lex+0xa88>
   277b0:	cmp	r0, #10
   277b4:	bne	277e4 <sfbpf_lex+0x980>
   277b8:	ldr	r0, [pc, #4088]	; 287b8 <sfbpf_lex+0x1954>
   277bc:	ldr	r0, [pc, r0]
   277c0:	ldr	r1, [pc, #4084]	; 287bc <sfbpf_lex+0x1958>
   277c4:	ldr	r1, [pc, r1]
   277c8:	ldr	r0, [r1, r0, lsl #2]
   277cc:	ldr	r1, [sp, #16]
   277d0:	ldr	r0, [r0, #4]
   277d4:	add	r0, r0, r1
   277d8:	mov	r1, #10
   277dc:	strb	r1, [r0, r4]
   277e0:	add	r4, r4, #1
   277e4:	ldr	lr, [pc, #4092]	; 287e8 <sfbpf_lex+0x1984>
   277e8:	ldr	ip, [pc, #4092]	; 287ec <sfbpf_lex+0x1988>
   277ec:	add	lr, pc, lr
   277f0:	add	ip, pc, ip
   277f4:	b	27910 <sfbpf_lex+0xaac>
   277f8:	str	r6, [sp, #32]
   277fc:	mov	r6, ip
   27800:	mov	r4, r2
   27804:	bl	e40 <__errno_location@plt>
   27808:	mov	r1, #0
   2780c:	str	r0, [sp, #40]	; 0x28
   27810:	str	r1, [r0]
   27814:	ldr	r1, [sp, #16]
   27818:	ldr	r0, [r4, r6, lsl #2]
   2781c:	ldr	r6, [sp, #32]
   27820:	ldr	r0, [r0, #4]
   27824:	ldr	r3, [pc, #4088]	; 28824 <sfbpf_lex+0x19c0>
   27828:	mov	r2, r6
   2782c:	ldr	r3, [pc, r3]
   27830:	add	r0, r0, r1
   27834:	mov	r1, #1
   27838:	bl	dd4 <fread@plt>
   2783c:	mov	r4, r0
   27840:	ldr	r0, [pc, #4080]	; 28838 <sfbpf_lex+0x19d4>
   27844:	cmp	r4, #0
   27848:	add	r0, pc, r0
   2784c:	str	r4, [r0]
   27850:	ldr	lr, [pc, #4068]	; 2883c <sfbpf_lex+0x19d8>
   27854:	ldr	ip, [pc, #4068]	; 28840 <sfbpf_lex+0x19dc>
   27858:	add	lr, pc, lr
   2785c:	add	ip, pc, ip
   27860:	bne	2791c <sfbpf_lex+0xab8>
   27864:	mov	r6, r0
   27868:	ldr	r0, [pc, #4088]	; 28868 <sfbpf_lex+0x1a04>
   2786c:	ldr	r0, [pc, r0]
   27870:	bl	d8c <ferror@plt>
   27874:	cmp	r0, #0
   27878:	beq	27b1c <sfbpf_lex+0xcb8>
   2787c:	ldr	r1, [sp, #40]	; 0x28
   27880:	ldr	r0, [r1]
   27884:	cmp	r0, #4
   27888:	bne	28910 <sfbpf_lex+0x1aac>
   2788c:	mov	r0, #0
   27890:	str	r0, [r1]
   27894:	ldr	r0, [pc, #4048]	; 2886c <sfbpf_lex+0x1a08>
   27898:	ldr	r0, [pc, r0]
   2789c:	bl	e94 <clearerr@plt>
   278a0:	ldr	r0, [pc, #4040]	; 28870 <sfbpf_lex+0x1a0c>
   278a4:	ldr	r0, [pc, r0]
   278a8:	ldr	r1, [pc, #4036]	; 28874 <sfbpf_lex+0x1a10>
   278ac:	ldr	r1, [pc, r1]
   278b0:	ldr	r0, [r1, r0, lsl #2]
   278b4:	ldr	r1, [sp, #16]
   278b8:	ldr	r0, [r0, #4]
   278bc:	ldr	r3, [pc, #4084]	; 288b8 <sfbpf_lex+0x1a54>
   278c0:	ldr	r3, [pc, r3]
   278c4:	ldr	r2, [sp, #32]
   278c8:	add	r0, r0, r1
   278cc:	mov	r1, #1
   278d0:	bl	dd4 <fread@plt>
   278d4:	mov	r4, r0
   278d8:	mov	r0, r6
   278dc:	cmp	r4, #0
   278e0:	str	r4, [r6]
   278e4:	beq	27864 <sfbpf_lex+0xa00>
   278e8:	b	27b20 <sfbpf_lex+0xcbc>
   278ec:	ldr	r0, [pc, #4088]	; 288ec <sfbpf_lex+0x1a88>
   278f0:	ldr	r0, [pc, r0]
   278f4:	bl	d8c <ferror@plt>
   278f8:	ldr	lr, [pc, #4080]	; 288f0 <sfbpf_lex+0x1a8c>
   278fc:	ldr	ip, [pc, #4080]	; 288f4 <sfbpf_lex+0x1a90>
   27900:	cmp	r0, #0
   27904:	add	lr, pc, lr
   27908:	add	ip, pc, ip
   2790c:	bne	28910 <sfbpf_lex+0x1aac>
   27910:	ldr	r0, [pc, #4084]	; 2890c <sfbpf_lex+0x1aa8>
   27914:	add	r0, pc, r0
   27918:	str	r4, [r0]
   2791c:	ldr	r1, [pc, #4088]	; 2891c <sfbpf_lex+0x1ab8>
   27920:	cmp	r4, #0
   27924:	ldr	r1, [pc, r1]
   27928:	ldr	r0, [pc, #4080]	; 28920 <sfbpf_lex+0x1abc>
   2792c:	ldr	r0, [pc, r0]
   27930:	str	r1, [sp, #24]
   27934:	str	r0, [sp, #32]
   27938:	ldr	r0, [r0, r1, lsl #2]
   2793c:	mov	r1, #0
   27940:	str	r4, [r0, #16]
   27944:	mov	r0, r4
   27948:	ldr	r4, [pc, #4084]	; 28944 <sfbpf_lex+0x1ae0>
   2794c:	ldr	r6, [pc, #4084]	; 28948 <sfbpf_lex+0x1ae4>
   27950:	add	r4, pc, r4
   27954:	add	r6, pc, r6
   27958:	bne	279d4 <sfbpf_lex+0xb70>
   2795c:	ldr	r0, [sp, #16]
   27960:	cmp	r0, #0
   27964:	beq	27984 <sfbpf_lex+0xb20>
   27968:	ldr	r0, [sp, #32]
   2796c:	ldr	r1, [sp, #24]
   27970:	ldr	r0, [r0, r1, lsl #2]
   27974:	mov	r1, #2
   27978:	str	r1, [r0, #44]	; 0x2c
   2797c:	mov	r0, #0
   27980:	b	279d4 <sfbpf_lex+0xb70>
   27984:	ldr	r0, [pc, #4080]	; 2897c <sfbpf_lex+0x1b18>
   27988:	mov	r4, lr
   2798c:	mov	r6, ip
   27990:	ldr	r0, [pc, r0]
   27994:	bl	28db4 <sfbpf_restart>
   27998:	mov	ip, r6
   2799c:	ldr	r6, [pc, #4080]	; 28994 <sfbpf_lex+0x1b30>
   279a0:	mov	lr, r4
   279a4:	ldr	r4, [pc, #4076]	; 28998 <sfbpf_lex+0x1b34>
   279a8:	ldr	r0, [pc, #4076]	; 2899c <sfbpf_lex+0x1b38>
   279ac:	mov	r1, #1
   279b0:	ldr	r0, [pc, r0]
   279b4:	add	r6, pc, r6
   279b8:	add	r4, pc, r4
   279bc:	str	r0, [sp, #24]
   279c0:	ldr	r0, [pc, #4056]	; 289a0 <sfbpf_lex+0x1b3c>
   279c4:	ldr	r0, [pc, r0]
   279c8:	str	r0, [sp, #32]
   279cc:	ldr	r0, [pc, #4048]	; 289a4 <sfbpf_lex+0x1b40>
   279d0:	ldr	r0, [pc, r0]
   279d4:	str	r1, [sp, #20]
   279d8:	mov	r1, r0
   279dc:	ldr	r0, [sp, #16]
   279e0:	ldr	r2, [sp, #24]
   279e4:	str	r1, [sp, #40]	; 0x28
   279e8:	add	r0, r1, r0
   279ec:	ldr	r1, [sp, #32]
   279f0:	mov	r3, r2
   279f4:	ldr	r1, [r1, r2, lsl #2]
   279f8:	ldr	r2, [r1, #12]
   279fc:	cmp	r0, r2
   27a00:	ble	27a8c <sfbpf_lex+0xc28>
   27a04:	ldr	r2, [sp, #40]	; 0x28
   27a08:	mov	r4, lr
   27a0c:	add	r6, r0, r2, asr #1
   27a10:	ldr	r0, [r1, #4]
   27a14:	mov	r1, r6
   27a18:	bl	dbc <realloc@plt>
   27a1c:	ldr	r2, [pc, #3972]	; 289a8 <sfbpf_lex+0x1b44>
   27a20:	ldr	r2, [pc, r2]
   27a24:	ldr	r3, [pc, #3968]	; 289ac <sfbpf_lex+0x1b48>
   27a28:	ldr	r3, [pc, r3]
   27a2c:	ldr	r1, [r3, r2, lsl #2]
   27a30:	str	r0, [r1, #4]
   27a34:	ldr	r0, [r3, r2, lsl #2]
   27a38:	ldr	r1, [r0, #4]
   27a3c:	cmp	r1, #0
   27a40:	beq	28958 <sfbpf_lex+0x1af4>
   27a44:	sub	r1, r6, #2
   27a48:	mov	lr, r4
   27a4c:	str	r1, [r0, #12]
   27a50:	ldr	r1, [r3, r2, lsl #2]
   27a54:	ldr	r6, [pc, #3924]	; 289b0 <sfbpf_lex+0x1b4c>
   27a58:	ldr	r6, [pc, r6]
   27a5c:	ldr	r0, [sp, #16]
   27a60:	str	r6, [sp, #40]	; 0x28
   27a64:	add	r0, r6, r0
   27a68:	ldr	ip, [pc, #3908]	; 289b4 <sfbpf_lex+0x1b50>
   27a6c:	ldr	r4, [pc, #3908]	; 289b8 <sfbpf_lex+0x1b54>
   27a70:	ldr	r6, [pc, #3908]	; 289bc <sfbpf_lex+0x1b58>
   27a74:	str	r3, [sp, #32]
   27a78:	str	r2, [sp, #24]
   27a7c:	add	ip, pc, ip
   27a80:	add	r4, pc, r4
   27a84:	add	r6, pc, r6
   27a88:	b	27a90 <sfbpf_lex+0xc2c>
   27a8c:	str	r3, [sp, #24]
   27a90:	ldr	r2, [pc, #3880]	; 289c0 <sfbpf_lex+0x1b5c>
   27a94:	ldr	r3, [sp, #24]
   27a98:	add	r2, pc, r2
   27a9c:	str	r0, [r2]
   27aa0:	mov	r2, #0
   27aa4:	ldr	r1, [r1, #4]
   27aa8:	strb	r2, [r1, r0]
   27aac:	ldr	r0, [sp, #40]	; 0x28
   27ab0:	ldr	r1, [sp, #28]
   27ab4:	mov	r2, #0
   27ab8:	add	r0, r0, r1
   27abc:	str	r0, [sp, #40]	; 0x28
   27ac0:	ldr	r0, [sp, #32]
   27ac4:	ldr	r1, [r0, r3, lsl #2]
   27ac8:	ldr	r0, [sp, #40]	; 0x28
   27acc:	ldr	r1, [r1, #4]
   27ad0:	strb	r2, [r1, r0]
   27ad4:	ldr	r0, [sp, #32]
   27ad8:	ldr	r0, [r0, r3, lsl #2]
   27adc:	ldr	r1, [r0, #4]
   27ae0:	ldr	r0, [pc, #4060]	; 28ac4 <sfbpf_lex+0x1c60>
   27ae4:	add	r0, pc, r0
   27ae8:	str	r1, [sp, #40]	; 0x28
   27aec:	str	r1, [r0]
   27af0:	ldr	r0, [sp, #20]
   27af4:	cmp	r0, #1
   27af8:	bne	27d14 <sfbpf_lex+0xeb0>
   27afc:	ldr	r0, [pc, #4016]	; 28ab4 <sfbpf_lex+0x1c50>
   27b00:	ldr	r1, [sp, #40]	; 0x28
   27b04:	add	r0, pc, r0
   27b08:	str	r1, [r0]
   27b0c:	mov	r0, #146	; 0x92
   27b10:	cmp	r0, #146	; 0x92
   27b14:	bls	27120 <sfbpf_lex+0x2bc>
   27b18:	b	28938 <sfbpf_lex+0x1ad4>
   27b1c:	mov	r4, #0
   27b20:	ldr	lr, [pc, #3988]	; 28abc <sfbpf_lex+0x1c58>
   27b24:	ldr	ip, [pc, #3988]	; 28ac0 <sfbpf_lex+0x1c5c>
   27b28:	add	lr, pc, lr
   27b2c:	add	ip, pc, ip
   27b30:	b	2791c <sfbpf_lex+0xab8>
   27b34:	ldrb	r0, [lr]
   27b38:	strb	r0, [r7]
   27b3c:	ldr	r0, [pc, #3716]	; 289c8 <sfbpf_lex+0x1b64>
   27b40:	ldr	r0, [pc, r0]
   27b44:	ldr	r7, [pc, #3712]	; 289cc <sfbpf_lex+0x1b68>
   27b48:	ldr	r7, [pc, r7]
   27b4c:	ldr	r2, [sp, #36]	; 0x24
   27b50:	b	270b4 <sfbpf_lex+0x250>
   27b54:	ldr	r0, [sp, #8]
   27b58:	ldr	r2, [sp, #40]	; 0x28
   27b5c:	mvn	r0, r0
   27b60:	add	r1, r0, r7
   27b64:	ldr	r0, [pc, #3860]	; 28a80 <sfbpf_lex+0x1c1c>
   27b68:	add	r7, r2, r1
   27b6c:	cmp	r1, #1
   27b70:	add	r0, pc, r0
   27b74:	str	r7, [r0]
   27b78:	ldrb	r0, [ip]
   27b7c:	blt	27c68 <sfbpf_lex+0xe04>
   27b80:	mov	ip, r2
   27b84:	b	27bb4 <sfbpf_lex+0xd50>
   27b88:	ldr	r4, [pc, #3840]	; 28a90 <sfbpf_lex+0x1c2c>
   27b8c:	ldr	r6, [pc, #3840]	; 28a94 <sfbpf_lex+0x1c30>
   27b90:	add	r4, pc, r4
   27b94:	add	r6, pc, r6
   27b98:	ldr	r0, [pc, #3832]	; 28a98 <sfbpf_lex+0x1c34>
   27b9c:	add	ip, ip, #1
   27ba0:	cmp	ip, r7
   27ba4:	add	r0, pc, r0
   27ba8:	add	r0, r0, r1, lsl #1
   27bac:	ldrsh	r0, [r0]
   27bb0:	bcs	27c60 <sfbpf_lex+0xdfc>
   27bb4:	ldrb	r1, [ip]
   27bb8:	cmp	r1, #0
   27bbc:	beq	27bc8 <sfbpf_lex+0xd64>
   27bc0:	ldrb	r2, [r4, r1]
   27bc4:	b	27bcc <sfbpf_lex+0xd68>
   27bc8:	mov	r2, #1
   27bcc:	add	r1, r6, r0, lsl #1
   27bd0:	ldrh	r1, [r1]
   27bd4:	cmp	r1, #0
   27bd8:	beq	27bf4 <sfbpf_lex+0xd90>
   27bdc:	ldr	r1, [pc, #3744]	; 28a84 <sfbpf_lex+0x1c20>
   27be0:	add	r1, pc, r1
   27be4:	str	ip, [r1]
   27be8:	ldr	r1, [pc, #3736]	; 28a88 <sfbpf_lex+0x1c24>
   27bec:	add	r1, pc, r1
   27bf0:	str	r0, [r1]
   27bf4:	add	r1, sl, r0, lsl #1
   27bf8:	ldrsh	r1, [r1]
   27bfc:	add	r1, r1, r2
   27c00:	add	r3, r5, r1, lsl #1
   27c04:	ldrsh	r3, [r3]
   27c08:	cmp	r0, r3
   27c0c:	beq	27b98 <sfbpf_lex+0xd34>
   27c10:	mov	r3, r2
   27c14:	b	27c3c <sfbpf_lex+0xdd8>
   27c18:	add	r1, sl, r0, lsl #1
   27c1c:	uxth	r4, r0
   27c20:	ldrsh	r1, [r1]
   27c24:	uxtab	r1, r1, r3
   27c28:	add	r2, r5, r1, lsl #1
   27c2c:	ldrh	r6, [r2]
   27c30:	uxtb	r2, r3
   27c34:	cmp	r4, r6
   27c38:	beq	27b88 <sfbpf_lex+0xd24>
   27c3c:	add	r0, r9, r0, lsl #1
   27c40:	movw	r1, #1434	; 0x59a
   27c44:	ldrsh	r0, [r0]
   27c48:	cmp	r0, r1
   27c4c:	blt	27c18 <sfbpf_lex+0xdb4>
   27c50:	ldr	r1, [pc, #3636]	; 28a8c <sfbpf_lex+0x1c28>
   27c54:	add	r1, pc, r1
   27c58:	ldrb	r3, [r1, r2]
   27c5c:	b	27c18 <sfbpf_lex+0xdb4>
   27c60:	ldr	ip, [pc, #3636]	; 28a9c <sfbpf_lex+0x1c38>
   27c64:	add	ip, pc, ip
   27c68:	add	r1, r6, r0, lsl #1
   27c6c:	ldrh	r1, [r1]
   27c70:	cmp	r1, #0
   27c74:	beq	27c90 <sfbpf_lex+0xe2c>
   27c78:	ldr	r1, [pc, #3616]	; 28aa0 <sfbpf_lex+0x1c3c>
   27c7c:	add	r1, pc, r1
   27c80:	str	r7, [r1]
   27c84:	ldr	r1, [pc, #3608]	; 28aa4 <sfbpf_lex+0x1c40>
   27c88:	add	r1, pc, r1
   27c8c:	str	r0, [r1]
   27c90:	add	r1, sl, r0, lsl #1
   27c94:	ldrsh	r1, [r1]
   27c98:	add	r1, r1, #1
   27c9c:	add	r2, r5, r1, lsl #1
   27ca0:	ldrsh	r2, [r2]
   27ca4:	cmp	r0, r2
   27ca8:	beq	27cd8 <sfbpf_lex+0xe74>
   27cac:	mov	r2, r0
   27cb0:	add	r1, r9, r2, lsl #1
   27cb4:	ldrh	r3, [r1]
   27cb8:	sxth	r2, r3
   27cbc:	add	r1, sl, r2, lsl #1
   27cc0:	ldrsh	r1, [r1]
   27cc4:	add	r1, r1, #1
   27cc8:	add	r6, r5, r1, lsl #1
   27ccc:	ldrh	r6, [r6]
   27cd0:	cmp	r3, r6
   27cd4:	bne	27cb0 <sfbpf_lex+0xe4c>
   27cd8:	ldr	r2, [pc, #3528]	; 28aa8 <sfbpf_lex+0x1c44>
   27cdc:	ldr	r3, [sp, #40]	; 0x28
   27ce0:	ldr	r6, [pc, #3524]	; 28aac <sfbpf_lex+0x1c48>
   27ce4:	add	r2, pc, r2
   27ce8:	add	r6, pc, r6
   27cec:	add	r1, r2, r1, lsl #1
   27cf0:	mov	r2, r3
   27cf4:	ldrh	r1, [r1]
   27cf8:	cmp	r1, #0
   27cfc:	beq	270b0 <sfbpf_lex+0x24c>
   27d00:	movw	r2, #1433	; 0x599
   27d04:	cmp	r1, r2
   27d08:	mov	r2, r3
   27d0c:	beq	270b0 <sfbpf_lex+0x24c>
   27d10:	b	27fe0 <sfbpf_lex+0x117c>
   27d14:	cmp	r0, #0
   27d18:	beq	27e6c <sfbpf_lex+0x1008>
   27d1c:	cmp	r0, #2
   27d20:	bne	26fc0 <sfbpf_lex+0x15c>
   27d24:	ldr	r0, [pc, #3484]	; 28ac8 <sfbpf_lex+0x1c64>
   27d28:	ldr	r0, [pc, r0]
   27d2c:	ldr	r1, [pc, #3480]	; 28acc <sfbpf_lex+0x1c68>
   27d30:	ldr	r1, [pc, r1]
   27d34:	ldr	r0, [r1, r0, lsl #2]
   27d38:	ldr	r0, [r0, #4]
   27d3c:	ldr	r1, [pc, #3468]	; 28ad0 <sfbpf_lex+0x1c6c>
   27d40:	ldr	r1, [pc, r1]
   27d44:	str	r1, [sp, #16]
   27d48:	ldr	r1, [sp, #16]
   27d4c:	add	r7, r0, r1
   27d50:	ldr	r0, [pc, #3452]	; 28ad4 <sfbpf_lex+0x1c70>
   27d54:	ldr	r1, [sp, #40]	; 0x28
   27d58:	add	r0, pc, r0
   27d5c:	cmp	r1, r7
   27d60:	mov	r2, r1
   27d64:	str	r7, [r0]
   27d68:	ldrb	r0, [ip]
   27d6c:	bcs	270b0 <sfbpf_lex+0x24c>
   27d70:	mov	ip, r1
   27d74:	b	27da4 <sfbpf_lex+0xf40>
   27d78:	ldr	r4, [pc, #3456]	; 28b00 <sfbpf_lex+0x1c9c>
   27d7c:	ldr	r6, [pc, #3456]	; 28b04 <sfbpf_lex+0x1ca0>
   27d80:	add	r4, pc, r4
   27d84:	add	r6, pc, r6
   27d88:	ldr	r0, [pc, #3448]	; 28b08 <sfbpf_lex+0x1ca4>
   27d8c:	add	ip, ip, #1
   27d90:	cmp	ip, r7
   27d94:	add	r0, pc, r0
   27d98:	add	r0, r0, r1, lsl #1
   27d9c:	ldrsh	r0, [r0]
   27da0:	beq	27e50 <sfbpf_lex+0xfec>
   27da4:	ldrb	r1, [ip]
   27da8:	cmp	r1, #0
   27dac:	beq	27db8 <sfbpf_lex+0xf54>
   27db0:	ldrb	r2, [r4, r1]
   27db4:	b	27dbc <sfbpf_lex+0xf58>
   27db8:	mov	r2, #1
   27dbc:	add	r1, r6, r0, lsl #1
   27dc0:	ldrh	r1, [r1]
   27dc4:	cmp	r1, #0
   27dc8:	beq	27de4 <sfbpf_lex+0xf80>
   27dcc:	ldr	r1, [pc, #3360]	; 28af4 <sfbpf_lex+0x1c90>
   27dd0:	add	r1, pc, r1
   27dd4:	str	ip, [r1]
   27dd8:	ldr	r1, [pc, #3352]	; 28af8 <sfbpf_lex+0x1c94>
   27ddc:	add	r1, pc, r1
   27de0:	str	r0, [r1]
   27de4:	add	r1, sl, r0, lsl #1
   27de8:	ldrsh	r1, [r1]
   27dec:	add	r1, r1, r2
   27df0:	add	r3, r5, r1, lsl #1
   27df4:	ldrsh	r3, [r3]
   27df8:	cmp	r0, r3
   27dfc:	beq	27d88 <sfbpf_lex+0xf24>
   27e00:	mov	r3, r2
   27e04:	b	27e2c <sfbpf_lex+0xfc8>
   27e08:	add	r1, sl, r0, lsl #1
   27e0c:	uxth	r4, r0
   27e10:	ldrsh	r1, [r1]
   27e14:	uxtab	r1, r1, r3
   27e18:	add	r2, r5, r1, lsl #1
   27e1c:	ldrh	r6, [r2]
   27e20:	uxtb	r2, r3
   27e24:	cmp	r4, r6
   27e28:	beq	27d78 <sfbpf_lex+0xf14>
   27e2c:	add	r0, r9, r0, lsl #1
   27e30:	movw	r1, #1434	; 0x59a
   27e34:	ldrsh	r0, [r0]
   27e38:	cmp	r0, r1
   27e3c:	blt	27e08 <sfbpf_lex+0xfa4>
   27e40:	ldr	r1, [pc, #3252]	; 28afc <sfbpf_lex+0x1c98>
   27e44:	add	r1, pc, r1
   27e48:	ldrb	r3, [r1, r2]
   27e4c:	b	27e08 <sfbpf_lex+0xfa4>
   27e50:	ldr	r2, [sp, #40]	; 0x28
   27e54:	ldr	ip, [pc, #3248]	; 28b0c <sfbpf_lex+0x1ca8>
   27e58:	add	ip, pc, ip
   27e5c:	b	270b0 <sfbpf_lex+0x24c>
   27e60:	.word	0x00020b04
   27e64:	.word	0x00020b04
   27e68:	.word	0x00020af0
   27e6c:	ldr	r0, [sp, #8]
   27e70:	mvn	r0, r0
   27e74:	add	r1, r0, r7
   27e78:	ldr	r0, [sp, #40]	; 0x28
   27e7c:	cmp	r1, #1
   27e80:	add	r7, r0, r1
   27e84:	ldr	r0, [pc, #3148]	; 28ad8 <sfbpf_lex+0x1c74>
   27e88:	add	r0, pc, r0
   27e8c:	str	r7, [r0]
   27e90:	ldrb	r0, [ip]
   27e94:	blt	27014 <sfbpf_lex+0x1b0>
   27e98:	ldr	ip, [sp, #40]	; 0x28
   27e9c:	b	27ee0 <sfbpf_lex+0x107c>
   27ea0:	.word	0x00020ac0
   27ea4:	.word	0x00020ab4
   27ea8:	.word	0x000201f4
   27eac:	.word	0x00020a98
   27eb0:	.word	0x000201d4
   27eb4:	ldr	r4, [pc, #3116]	; 28ae8 <sfbpf_lex+0x1c84>
   27eb8:	ldr	r6, [pc, #3116]	; 28aec <sfbpf_lex+0x1c88>
   27ebc:	add	r4, pc, r4
   27ec0:	add	r6, pc, r6
   27ec4:	ldr	r0, [pc, #3108]	; 28af0 <sfbpf_lex+0x1c8c>
   27ec8:	add	ip, ip, #1
   27ecc:	cmp	ip, r7
   27ed0:	add	r0, pc, r0
   27ed4:	add	r0, r0, r1, lsl #1
   27ed8:	ldrsh	r0, [r0]
   27edc:	bcs	27fc8 <sfbpf_lex+0x1164>
   27ee0:	ldrb	r1, [ip]
   27ee4:	cmp	r1, #0
   27ee8:	beq	27f10 <sfbpf_lex+0x10ac>
   27eec:	ldrb	r2, [r4, r1]
   27ef0:	b	27f14 <sfbpf_lex+0x10b0>
   27ef4:	.word	0x00020a7c
   27ef8:	.word	0x00020a80
   27efc:	.word	0x00020a74
   27f00:	.word	0x00020a3c
   27f04:	.word	0x00020a40
   27f08:	.word	0x00020a3c
   27f0c:	.word	0x00020a3c
   27f10:	mov	r2, #1
   27f14:	add	r1, r6, r0, lsl #1
   27f18:	ldrh	r1, [r1]
   27f1c:	cmp	r1, #0
   27f20:	beq	27f3c <sfbpf_lex+0x10d8>
   27f24:	ldr	r1, [pc, #2992]	; 28adc <sfbpf_lex+0x1c78>
   27f28:	add	r1, pc, r1
   27f2c:	str	ip, [r1]
   27f30:	ldr	r1, [pc, #2984]	; 28ae0 <sfbpf_lex+0x1c7c>
   27f34:	add	r1, pc, r1
   27f38:	str	r0, [r1]
   27f3c:	add	r1, sl, r0, lsl #1
   27f40:	ldrsh	r1, [r1]
   27f44:	add	r1, r1, r2
   27f48:	add	r3, r5, r1, lsl #1
   27f4c:	ldrsh	r3, [r3]
   27f50:	cmp	r0, r3
   27f54:	beq	27ec4 <sfbpf_lex+0x1060>
   27f58:	mov	r3, r2
   27f5c:	b	27fa0 <sfbpf_lex+0x113c>
   27f60:	.word	0x00020a74
   27f64:	.word	0x00020a10
   27f68:	.word	0x000057c0
   27f6c:	.word	0x000058bc
   27f70:	.word	0x00009e2a
   27f74:	.word	0x000063e8
   27f78:	.word	0x0000acee
   27f7c:	add	r1, sl, r0, lsl #1
   27f80:	uxth	r4, r0
   27f84:	ldrsh	r1, [r1]
   27f88:	uxtab	r1, r1, r3
   27f8c:	add	r2, r5, r1, lsl #1
   27f90:	ldrh	r6, [r2]
   27f94:	uxtb	r2, r3
   27f98:	cmp	r4, r6
   27f9c:	beq	27eb4 <sfbpf_lex+0x1050>
   27fa0:	add	r0, r9, r0, lsl #1
   27fa4:	movw	r1, #1434	; 0x59a
   27fa8:	ldrsh	r0, [r0]
   27fac:	cmp	r0, r1
   27fb0:	blt	27f7c <sfbpf_lex+0x1118>
   27fb4:	ldr	r1, [pc, #2856]	; 28ae4 <sfbpf_lex+0x1c80>
   27fb8:	add	r1, pc, r1
   27fbc:	ldrb	r3, [r1, r2]
   27fc0:	b	27f7c <sfbpf_lex+0x1118>
   27fc4:	.word	0x000209c0
   27fc8:	ldr	ip, [pc, #2548]	; 289c4 <sfbpf_lex+0x1b60>
   27fcc:	add	ip, pc, ip
   27fd0:	b	27014 <sfbpf_lex+0x1b0>
   27fd4:	.word	0x00005788
   27fd8:	.word	0x00005884
   27fdc:	.word	0x0000bbb4
   27fe0:	sxth	r0, r1
   27fe4:	ldr	r1, [pc, #2756]	; 28ab0 <sfbpf_lex+0x1c4c>
   27fe8:	add	r7, r7, #1
   27fec:	add	r1, pc, r1
   27ff0:	str	r7, [r1]
   27ff4:	b	27014 <sfbpf_lex+0x1b0>
   27ff8:	.word	0x00020964
   27ffc:	.word	0x00020954
   28000:	ldr	r3, [pc, #2660]	; 28a6c <sfbpf_lex+0x1c08>
   28004:	mov	r2, #1
   28008:	mov	r4, lr
   2800c:	mov	r6, ip
   28010:	ldr	r3, [pc, r3]
   28014:	ldr	r1, [pc, #2644]	; 28a70 <sfbpf_lex+0x1c0c>
   28018:	ldr	r1, [pc, r1]
   2801c:	ldr	r0, [pc, #2640]	; 28a74 <sfbpf_lex+0x1c10>
   28020:	ldr	r0, [pc, r0]
   28024:	bl	dc8 <fwrite@plt>
   28028:	mov	ip, r6
   2802c:	ldr	r6, [pc, #2628]	; 28a78 <sfbpf_lex+0x1c14>
   28030:	mov	lr, r4
   28034:	ldr	r4, [pc, #2624]	; 28a7c <sfbpf_lex+0x1c18>
   28038:	add	r6, pc, r6
   2803c:	add	r4, pc, r4
   28040:	b	26fc0 <sfbpf_lex+0x15c>
   28044:	ldr	r0, [pc, #2540]	; 28a38 <sfbpf_lex+0x1bd4>
   28048:	mov	r1, #1
   2804c:	ldr	r0, [pc, r0]
   28050:	b	288c8 <sfbpf_lex+0x1a64>
   28054:	movw	r0, #330	; 0x14a
   28058:	sub	sp, fp, #28
   2805c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28060:	movw	r0, #357	; 0x165
   28064:	sub	sp, fp, #28
   28068:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2806c:	movw	r0, #307	; 0x133
   28070:	sub	sp, fp, #28
   28074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28078:	ldr	r0, [pc, #2504]	; 28a48 <sfbpf_lex+0x1be4>
   2807c:	mov	r1, #16
   28080:	ldr	r0, [pc, r0]
   28084:	b	288c8 <sfbpf_lex+0x1a64>
   28088:	ldr	r0, [pc, #2480]	; 28a40 <sfbpf_lex+0x1bdc>
   2808c:	mov	r1, #4
   28090:	ldr	r0, [pc, r0]
   28094:	b	288c8 <sfbpf_lex+0x1a64>
   28098:	.word	0x0000bad6
   2809c:	ldr	r0, [pc, #2464]	; 28a44 <sfbpf_lex+0x1be0>
   280a0:	mov	r1, #8
   280a4:	ldr	r0, [pc, r0]
   280a8:	b	288c8 <sfbpf_lex+0x1a64>
   280ac:	ldr	r0, [pc, #2388]	; 28a08 <sfbpf_lex+0x1ba4>
   280b0:	mov	r1, #0
   280b4:	ldr	r0, [pc, r0]
   280b8:	b	288c8 <sfbpf_lex+0x1a64>
   280bc:	.word	0x000208c8
   280c0:	ldr	r0, [pc, #2412]	; 28a34 <sfbpf_lex+0x1bd0>
   280c4:	mov	r1, #13
   280c8:	ldr	r0, [pc, r0]
   280cc:	b	288c8 <sfbpf_lex+0x1a64>
   280d0:	.word	0x000208c0
   280d4:	mov	r0, #328	; 0x148
   280d8:	sub	sp, fp, #28
   280dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   280e0:	.word	0x000208fc
   280e4:	.word	0x000208e8
   280e8:	ldr	r0, [pc, #2284]	; 289dc <sfbpf_lex+0x1b78>
   280ec:	ldr	r0, [pc, r0]
   280f0:	bl	208b4 <pcap_ether_aton>
   280f4:	ldr	r1, [pc, #2276]	; 289e0 <sfbpf_lex+0x1b7c>
   280f8:	ldr	r1, [pc, r1]
   280fc:	str	r0, [r1]
   28100:	mov	r0, #312	; 0x138
   28104:	sub	sp, fp, #28
   28108:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2810c:	.word	0x00020878
   28110:	mov	r0, #264	; 0x108
   28114:	sub	sp, fp, #28
   28118:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2811c:	mov	r0, #348	; 0x15c
   28120:	sub	sp, fp, #28
   28124:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28128:	mov	r0, #308	; 0x134
   2812c:	sub	sp, fp, #28
   28130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28134:	movw	r0, #358	; 0x166
   28138:	sub	sp, fp, #28
   2813c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28140:	movw	r0, #325	; 0x145
   28144:	sub	sp, fp, #28
   28148:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2814c:	ldr	r0, [pc, #2248]	; 28a1c <sfbpf_lex+0x1bb8>
   28150:	mov	r1, #11
   28154:	ldr	r0, [pc, r0]
   28158:	b	288c8 <sfbpf_lex+0x1a64>
   2815c:	ldr	r0, [pc, #2156]	; 289d0 <sfbpf_lex+0x1b6c>
   28160:	ldr	r0, [pc, r0]
   28164:	ldrb	r0, [r0]
   28168:	sub	sp, fp, #28
   2816c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28170:	movw	r0, #338	; 0x152
   28174:	sub	sp, fp, #28
   28178:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2817c:	mov	r0, #340	; 0x154
   28180:	sub	sp, fp, #28
   28184:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28188:	movw	r0, #265	; 0x109
   2818c:	sub	sp, fp, #28
   28190:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28194:	movw	r0, #279	; 0x117
   28198:	sub	sp, fp, #28
   2819c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   281a0:	movw	r0, #363	; 0x16b
   281a4:	sub	sp, fp, #28
   281a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   281ac:	mov	r0, #296	; 0x128
   281b0:	sub	sp, fp, #28
   281b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   281b8:	ldr	r0, [pc, #2200]	; 28a58 <sfbpf_lex+0x1bf4>
   281bc:	ldr	r0, [pc, r0]
   281c0:	add	r0, r0, #1
   281c4:	b	281e8 <sfbpf_lex+0x1384>
   281c8:	movw	r0, #289	; 0x121
   281cc:	sub	sp, fp, #28
   281d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   281d4:	movw	r0, #341	; 0x155
   281d8:	sub	sp, fp, #28
   281dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   281e0:	ldr	r0, [pc, #2152]	; 28a50 <sfbpf_lex+0x1bec>
   281e4:	ldr	r0, [pc, r0]
   281e8:	bl	20b8 <sf_sdup>
   281ec:	ldr	r1, [pc, #2144]	; 28a54 <sfbpf_lex+0x1bf0>
   281f0:	ldr	r1, [pc, r1]
   281f4:	str	r0, [r1]
   281f8:	movw	r0, #311	; 0x137
   281fc:	sub	sp, fp, #28
   28200:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28204:	movw	r0, #293	; 0x125
   28208:	sub	sp, fp, #28
   2820c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28210:	movw	r0, #306	; 0x132
   28214:	sub	sp, fp, #28
   28218:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2821c:	movw	r0, #329	; 0x149
   28220:	sub	sp, fp, #28
   28224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28228:	mov	r0, #33	; 0x21
   2822c:	sub	sp, fp, #28
   28230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28234:	movw	r0, #259	; 0x103
   28238:	sub	sp, fp, #28
   2823c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28240:	movw	r0, #354	; 0x162
   28244:	sub	sp, fp, #28
   28248:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2824c:	mov	r0, #324	; 0x144
   28250:	sub	sp, fp, #28
   28254:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28258:	movw	r0, #297	; 0x129
   2825c:	sub	sp, fp, #28
   28260:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28264:	movw	r0, #294	; 0x126
   28268:	sub	sp, fp, #28
   2826c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28270:	movw	r0, #323	; 0x143
   28274:	sub	sp, fp, #28
   28278:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2827c:	ldr	r0, [pc, #1956]	; 28a28 <sfbpf_lex+0x1bc4>
   28280:	mov	r1, #15
   28284:	ldr	r0, [pc, r0]
   28288:	b	288c8 <sfbpf_lex+0x1a64>
   2828c:	movw	r0, #305	; 0x131
   28290:	sub	sp, fp, #28
   28294:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28298:	mov	r0, #364	; 0x16c
   2829c:	sub	sp, fp, #28
   282a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   282a4:	mov	r0, #288	; 0x120
   282a8:	sub	sp, fp, #28
   282ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   282b0:	movw	r0, #327	; 0x147
   282b4:	sub	sp, fp, #28
   282b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   282bc:	movw	r0, #299	; 0x12b
   282c0:	sub	sp, fp, #28
   282c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   282c8:	movw	r0, #309	; 0x135
   282cc:	sub	sp, fp, #28
   282d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   282d4:	movw	r0, #302	; 0x12e
   282d8:	sub	sp, fp, #28
   282dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   282e0:	movw	r0, #353	; 0x161
   282e4:	sub	sp, fp, #28
   282e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   282ec:	movw	r0, #351	; 0x15f
   282f0:	sub	sp, fp, #28
   282f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   282f8:	ldr	r0, [pc, #1868]	; 28a4c <sfbpf_lex+0x1be8>
   282fc:	mov	r1, #32
   28300:	ldr	r0, [pc, r0]
   28304:	b	288c8 <sfbpf_lex+0x1a64>
   28308:	movw	r0, #346	; 0x15a
   2830c:	sub	sp, fp, #28
   28310:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28314:	mov	r0, #292	; 0x124
   28318:	sub	sp, fp, #28
   2831c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28320:	ldr	r0, [pc, #1800]	; 28a30 <sfbpf_lex+0x1bcc>
   28324:	mov	r1, #18
   28328:	ldr	r0, [pc, r0]
   2832c:	b	288c8 <sfbpf_lex+0x1a64>
   28330:	mov	r0, #0
   28334:	sub	sp, fp, #28
   28338:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2833c:	mov	r0, #332	; 0x14c
   28340:	sub	sp, fp, #28
   28344:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28348:	ldr	r0, [pc, #1748]	; 28a24 <sfbpf_lex+0x1bc0>
   2834c:	mov	r1, #14
   28350:	ldr	r0, [pc, r0]
   28354:	b	288c8 <sfbpf_lex+0x1a64>
   28358:	movw	r0, #303	; 0x12f
   2835c:	sub	sp, fp, #28
   28360:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28364:	mov	r0, #352	; 0x160
   28368:	sub	sp, fp, #28
   2836c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28370:	movw	r0, #287	; 0x11f
   28374:	sub	sp, fp, #28
   28378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2837c:	.word	0x00020660
   28380:	movw	r0, #258	; 0x102
   28384:	sub	sp, fp, #28
   28388:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2838c:	.word	0x000205f4
   28390:	.word	0x000205e8
   28394:	movw	r0, #267	; 0x10b
   28398:	sub	sp, fp, #28
   2839c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   283a0:	movw	r0, #275	; 0x113
   283a4:	sub	sp, fp, #28
   283a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   283ac:	mov	r0, #304	; 0x130
   283b0:	sub	sp, fp, #28
   283b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   283b8:	.word	0x000205dc
   283bc:	movw	r0, #295	; 0x127
   283c0:	sub	sp, fp, #28
   283c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   283c8:	.word	0x000205c0
   283cc:	movw	r0, #266	; 0x10a
   283d0:	sub	sp, fp, #28
   283d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   283d8:	movw	r0, #337	; 0x151
   283dc:	sub	sp, fp, #28
   283e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   283e4:	.word	0x00020588
   283e8:	mov	r0, #276	; 0x114
   283ec:	sub	sp, fp, #28
   283f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   283f4:	mov	r0, #272	; 0x110
   283f8:	sub	sp, fp, #28
   283fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28400:	movw	r0, #361	; 0x169
   28404:	sub	sp, fp, #28
   28408:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2840c:	movw	r0, #298	; 0x12a
   28410:	sub	sp, fp, #28
   28414:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28418:	.word	0x000205c4
   2841c:	.word	0x00020560
   28420:	ldr	r0, [pc, #1540]	; 28a2c <sfbpf_lex+0x1bc8>
   28424:	mov	r1, #17
   28428:	ldr	r0, [pc, r0]
   2842c:	b	288c8 <sfbpf_lex+0x1a64>
   28430:	movw	r0, #318	; 0x13e
   28434:	sub	sp, fp, #28
   28438:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2843c:	mov	r0, #61	; 0x3d
   28440:	sub	sp, fp, #28
   28444:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28448:	ldr	r0, [pc, #1436]	; 289ec <sfbpf_lex+0x1b88>
   2844c:	ldr	r0, [pc, r0]
   28450:	bl	20b8 <sf_sdup>
   28454:	ldr	r1, [pc, #1428]	; 289f0 <sfbpf_lex+0x1b8c>
   28458:	ldr	r1, [pc, r1]
   2845c:	str	r0, [r1]
   28460:	movw	r0, #313	; 0x139
   28464:	sub	sp, fp, #28
   28468:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2846c:	movw	r0, #273	; 0x111
   28470:	sub	sp, fp, #28
   28474:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28478:	movw	r0, #271	; 0x10f
   2847c:	sub	sp, fp, #28
   28480:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28484:	mov	r0, #360	; 0x168
   28488:	sub	sp, fp, #28
   2848c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28490:	ldr	r0, [pc, #1444]	; 28a3c <sfbpf_lex+0x1bd8>
   28494:	mov	r1, #2
   28498:	ldr	r0, [pc, r0]
   2849c:	b	288c8 <sfbpf_lex+0x1a64>
   284a0:	movw	r0, #270	; 0x10e
   284a4:	sub	sp, fp, #28
   284a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   284ac:	movw	r0, #333	; 0x14d
   284b0:	sub	sp, fp, #28
   284b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   284b8:	mov	r0, #356	; 0x164
   284bc:	sub	sp, fp, #28
   284c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   284c4:	ldr	r0, [pc, #1304]	; 289e4 <sfbpf_lex+0x1b80>
   284c8:	ldr	r0, [pc, r0]
   284cc:	ldrb	r5, [r0]
   284d0:	cmp	r5, #48	; 0x30
   284d4:	bne	28828 <sfbpf_lex+0x19c4>
   284d8:	mov	r1, r0
   284dc:	ldrb	r5, [r1, #1]!
   284e0:	orr	r2, r5, #32
   284e4:	cmp	r2, #120	; 0x78
   284e8:	bne	28844 <sfbpf_lex+0x19e0>
   284ec:	ldrb	r5, [r0, #2]!
   284f0:	mov	r4, #16
   284f4:	cmp	r5, #0
   284f8:	bne	28854 <sfbpf_lex+0x19f0>
   284fc:	b	288bc <sfbpf_lex+0x1a58>
   28500:	movw	r0, #362	; 0x16a
   28504:	sub	sp, fp, #28
   28508:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2850c:	movw	r0, #281	; 0x119
   28510:	sub	sp, fp, #28
   28514:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28518:	movw	r0, #319	; 0x13f
   2851c:	sub	sp, fp, #28
   28520:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28524:	movw	r0, #334	; 0x14e
   28528:	sub	sp, fp, #28
   2852c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28530:	movw	r0, #290	; 0x122
   28534:	sub	sp, fp, #28
   28538:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2853c:	movw	r0, #359	; 0x167
   28540:	sub	sp, fp, #28
   28544:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28548:	movw	r0, #286	; 0x11e
   2854c:	sub	sp, fp, #28
   28550:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28554:	movw	r0, #274	; 0x112
   28558:	sub	sp, fp, #28
   2855c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28560:	.word	0x00005200
   28564:	mov	r0, #336	; 0x150
   28568:	sub	sp, fp, #28
   2856c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28570:	ldr	r0, [pc, #1180]	; 28a14 <sfbpf_lex+0x1bb0>
   28574:	mov	r1, #9
   28578:	ldr	r0, [pc, r0]
   2857c:	b	288c8 <sfbpf_lex+0x1a64>
   28580:	mov	r0, #284	; 0x11c
   28584:	sub	sp, fp, #28
   28588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2858c:	mov	r0, #344	; 0x158
   28590:	sub	sp, fp, #28
   28594:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28598:	.word	0x000203dc
   2859c:	.word	0x000052c8
   285a0:	movw	r0, #339	; 0x153
   285a4:	sub	sp, fp, #28
   285a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   285ac:	.word	0x00020390
   285b0:	vmov.i32	q8, #0	; 0x00000000
   285b4:	add	r2, sp, #48	; 0x30
   285b8:	add	r3, sp, #44	; 0x2c
   285bc:	mov	r1, #0
   285c0:	add	r0, r2, #8
   285c4:	vst1.64	{d16-d17}, [r0]
   285c8:	mov	r0, #0
   285cc:	str	r0, [sp, #76]	; 0x4c
   285d0:	str	r0, [sp, #72]	; 0x48
   285d4:	mov	r0, #10
   285d8:	str	r0, [sp, #52]	; 0x34
   285dc:	mov	r0, #4
   285e0:	str	r0, [sp, #48]	; 0x30
   285e4:	ldr	r0, [pc, #1032]	; 289f4 <sfbpf_lex+0x1b90>
   285e8:	ldr	r0, [pc, r0]
   285ec:	bl	eb8 <getaddrinfo@plt>
   285f0:	cmp	r0, #0
   285f4:	bne	28980 <sfbpf_lex+0x1b1c>
   285f8:	ldr	r0, [sp, #44]	; 0x2c
   285fc:	bl	eac <freeaddrinfo@plt>
   28600:	ldr	r0, [pc, #1008]	; 289f8 <sfbpf_lex+0x1b94>
   28604:	ldr	r0, [pc, r0]
   28608:	bl	20b8 <sf_sdup>
   2860c:	ldr	r1, [pc, #1000]	; 289fc <sfbpf_lex+0x1b98>
   28610:	ldr	r1, [pc, r1]
   28614:	str	r0, [r1]
   28618:	movw	r0, #314	; 0x13a
   2861c:	sub	sp, fp, #28
   28620:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28624:	mov	r0, #300	; 0x12c
   28628:	sub	sp, fp, #28
   2862c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28630:	mov	r0, #316	; 0x13c
   28634:	sub	sp, fp, #28
   28638:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2863c:	mov	r0, #268	; 0x10c
   28640:	sub	sp, fp, #28
   28644:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28648:	.word	0x00020340
   2864c:	movw	r0, #347	; 0x15b
   28650:	sub	sp, fp, #28
   28654:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28658:	movw	r0, #342	; 0x156
   2865c:	sub	sp, fp, #28
   28660:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28664:	.word	0x00020330
   28668:	movw	r0, #321	; 0x141
   2866c:	sub	sp, fp, #28
   28670:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28674:	movw	r0, #350	; 0x15e
   28678:	sub	sp, fp, #28
   2867c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28680:	movw	r0, #261	; 0x105
   28684:	sub	sp, fp, #28
   28688:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2868c:	movw	r0, #355	; 0x163
   28690:	sub	sp, fp, #28
   28694:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28698:	movw	r0, #343	; 0x157
   2869c:	sub	sp, fp, #28
   286a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   286a4:	movw	r0, #310	; 0x136
   286a8:	sub	sp, fp, #28
   286ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   286b0:	movw	r0, #301	; 0x12d
   286b4:	sub	sp, fp, #28
   286b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   286bc:	movw	r0, #282	; 0x11a
   286c0:	sub	sp, fp, #28
   286c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   286c8:	movw	r0, #322	; 0x142
   286cc:	sub	sp, fp, #28
   286d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   286d4:	movw	r0, #345	; 0x159
   286d8:	sub	sp, fp, #28
   286dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   286e0:	movw	r0, #277	; 0x115
   286e4:	sub	sp, fp, #28
   286e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   286ec:	mov	r0, #260	; 0x104
   286f0:	sub	sp, fp, #28
   286f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   286f8:	.word	0x00020288
   286fc:	movw	r0, #331	; 0x14b
   28700:	sub	sp, fp, #28
   28704:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28708:	.word	0x00020278
   2870c:	.word	0x0002026c
   28710:	movw	r0, #262	; 0x106
   28714:	sub	sp, fp, #28
   28718:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2871c:	movw	r0, #335	; 0x14f
   28720:	sub	sp, fp, #28
   28724:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28728:	movw	r0, #326	; 0x146
   2872c:	sub	sp, fp, #28
   28730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28734:	movw	r0, #263	; 0x107
   28738:	sub	sp, fp, #28
   2873c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28740:	mov	r0, #320	; 0x140
   28744:	sub	sp, fp, #28
   28748:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2874c:	movw	r0, #349	; 0x15d
   28750:	sub	sp, fp, #28
   28754:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28758:	movw	r0, #283	; 0x11b
   2875c:	sub	sp, fp, #28
   28760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28764:	.word	0x00020208
   28768:	movw	r0, #285	; 0x11d
   2876c:	sub	sp, fp, #28
   28770:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28774:	.word	0x00020208
   28778:	.word	0x000201fc
   2877c:	ldr	r0, [pc, #648]	; 28a0c <sfbpf_lex+0x1ba8>
   28780:	mov	r1, #3
   28784:	ldr	r0, [pc, r0]
   28788:	b	288c8 <sfbpf_lex+0x1a64>
   2878c:	ldr	r0, [pc, #644]	; 28a18 <sfbpf_lex+0x1bb4>
   28790:	mov	r1, #10
   28794:	ldr	r0, [pc, r0]
   28798:	b	288c8 <sfbpf_lex+0x1a64>
   2879c:	mov	r0, #280	; 0x118
   287a0:	sub	sp, fp, #28
   287a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   287a8:	ldr	r0, [pc, #624]	; 28a20 <sfbpf_lex+0x1bbc>
   287ac:	mov	r1, #12
   287b0:	ldr	r0, [pc, r0]
   287b4:	b	288c8 <sfbpf_lex+0x1a64>
   287b8:	.word	0x000201c8
   287bc:	.word	0x000201bc
   287c0:	ldr	r0, [pc, #584]	; 28a10 <sfbpf_lex+0x1bac>
   287c4:	mov	r1, #5
   287c8:	ldr	r0, [pc, r0]
   287cc:	b	288c8 <sfbpf_lex+0x1a64>
   287d0:	movw	r0, #278	; 0x116
   287d4:	sub	sp, fp, #28
   287d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   287dc:	movw	r0, #269	; 0x10d
   287e0:	sub	sp, fp, #28
   287e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   287e8:	.word	0x000201a0
   287ec:	.word	0x0002018c
   287f0:	ldr	r0, [pc, #476]	; 289d4 <sfbpf_lex+0x1b70>
   287f4:	ldr	r0, [pc, r0]
   287f8:	add	r0, r0, #1
   287fc:	bl	208b4 <pcap_ether_aton>
   28800:	ldr	r1, [pc, #464]	; 289d8 <sfbpf_lex+0x1b74>
   28804:	ldr	r1, [pc, r1]
   28808:	str	r0, [r1]
   2880c:	movw	r0, #315	; 0x13b
   28810:	sub	sp, fp, #28
   28814:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28818:	movw	r0, #317	; 0x13d
   2881c:	sub	sp, fp, #28
   28820:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28824:	.word	0x00020140
   28828:	mov	r4, #10
   2882c:	cmp	r5, #0
   28830:	bne	28854 <sfbpf_lex+0x19f0>
   28834:	b	288bc <sfbpf_lex+0x1a58>
   28838:	.word	0x00020150
   2883c:	.word	0x00020134
   28840:	.word	0x00020120
   28844:	mov	r4, #8
   28848:	mov	r0, r1
   2884c:	cmp	r5, #0
   28850:	beq	288bc <sfbpf_lex+0x1a58>
   28854:	add	r6, r0, #1
   28858:	bl	e04 <__ctype_b_loc@plt>
   2885c:	ldr	r0, [r0]
   28860:	mov	r1, #0
   28864:	b	2888c <sfbpf_lex+0x1a28>
   28868:	.word	0x00020100
   2886c:	.word	0x000200d4
   28870:	.word	0x000200e0
   28874:	.word	0x000200d4
   28878:	ldrb	r5, [r6], #1
   2887c:	add	r2, r3, r2
   28880:	add	r1, r2, r1
   28884:	cmp	r5, #0
   28888:	beq	288c0 <sfbpf_lex+0x1a5c>
   2888c:	uxtb	r2, r5
   28890:	mul	r1, r1, r4
   28894:	add	r3, r0, r2, lsl #1
   28898:	ldrh	r7, [r3]
   2889c:	mvn	r3, #47	; 0x2f
   288a0:	tst	r7, #2048	; 0x800
   288a4:	bne	28878 <sfbpf_lex+0x1a14>
   288a8:	tst	r7, #512	; 0x200
   288ac:	mvn	r3, #86	; 0x56
   288b0:	mvneq	r3, #54	; 0x36
   288b4:	b	28878 <sfbpf_lex+0x1a14>
   288b8:	.word	0x000200ac
   288bc:	mov	r1, #0
   288c0:	ldr	r0, [pc, #288]	; 289e8 <sfbpf_lex+0x1b84>
   288c4:	ldr	r0, [pc, r0]
   288c8:	str	r1, [r0]
   288cc:	movw	r0, #291	; 0x123
   288d0:	sub	sp, fp, #28
   288d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   288d8:	ldr	r1, [pc, #380]	; 28a5c <sfbpf_lex+0x1bf8>
   288dc:	ldr	r1, [pc, r1]
   288e0:	ldr	r0, [pc, #376]	; 28a60 <sfbpf_lex+0x1bfc>
   288e4:	add	r0, pc, r0
   288e8:	bl	2068 <sf_bpf_error>
   288ec:	.word	0x0002007c
   288f0:	.word	0x00020088
   288f4:	.word	0x00020074
   288f8:	ldr	r1, [pc, #256]	; 28a00 <sfbpf_lex+0x1b9c>
   288fc:	ldr	r1, [pc, r1]
   28900:	ldr	r0, [pc, #252]	; 28a04 <sfbpf_lex+0x1ba0>
   28904:	add	r0, pc, r0
   28908:	bl	2068 <sf_bpf_error>
   2890c:	.word	0x00020084
   28910:	ldr	r0, [pc, #520]	; 28b20 <sfbpf_lex+0x1cbc>
   28914:	add	r0, pc, r0
   28918:	bl	28fa8 <yy_fatal_error>
   2891c:	.word	0x00020060
   28920:	.word	0x00020054
   28924:	mov	r0, #0
   28928:	str	r0, [r6, #4]
   2892c:	ldr	r0, [pc, #388]	; 28ab8 <sfbpf_lex+0x1c54>
   28930:	add	r0, pc, r0
   28934:	bl	28fa8 <yy_fatal_error>
   28938:	ldr	r0, [pc, #464]	; 28b10 <sfbpf_lex+0x1cac>
   2893c:	add	r0, pc, r0
   28940:	bl	28fa8 <yy_fatal_error>
   28944:	.word	0x00004e1c
   28948:	.word	0x00004f18
   2894c:	ldr	r0, [pc, #456]	; 28b1c <sfbpf_lex+0x1cb8>
   28950:	add	r0, pc, r0
   28954:	bl	28fa8 <yy_fatal_error>
   28958:	ldr	r0, [pc, #452]	; 28b24 <sfbpf_lex+0x1cc0>
   2895c:	add	r0, pc, r0
   28960:	bl	28fa8 <yy_fatal_error>
   28964:	ldr	r0, [pc, #248]	; 28a64 <sfbpf_lex+0x1c00>
   28968:	ldr	r0, [pc, r0]
   2896c:	ldrb	r1, [r0]
   28970:	ldr	r0, [pc, #240]	; 28a68 <sfbpf_lex+0x1c04>
   28974:	add	r0, pc, r0
   28978:	bl	2068 <sf_bpf_error>
   2897c:	.word	0x0001ffdc
   28980:	ldr	r1, [pc, #396]	; 28b14 <sfbpf_lex+0x1cb0>
   28984:	ldr	r1, [pc, r1]
   28988:	ldr	r0, [pc, #392]	; 28b18 <sfbpf_lex+0x1cb4>
   2898c:	add	r0, pc, r0
   28990:	bl	2068 <sf_bpf_error>
   28994:	.word	0x00004eb8
   28998:	.word	0x00004db4
   2899c:	.word	0x0001ffd4
   289a0:	.word	0x0001ffbc
   289a4:	.word	0x0001ffc8
   289a8:	.word	0x0001ff64
   289ac:	.word	0x0001ff58
   289b0:	.word	0x0001ff40
   289b4:	.word	0x0001ff00
   289b8:	.word	0x00004cec
   289bc:	.word	0x00004de8
   289c0:	.word	0x0001ff00
   289c4:	.word	0x0001f9b0
   289c8:	.word	0x0001fe50
   289cc:	.word	0x0001fe4c
   289d0:	.word	0x0001f880
   289d4:	.word	0x0001f1ec
   289d8:	.word	0x0001e8bc
   289dc:	.word	0x0001f8f4
   289e0:	.word	0x0001efc8
   289e4:	.word	0x0001f518
   289e8:	.word	0x0001e7fc
   289ec:	.word	0x0001f594
   289f0:	.word	0x0001ec68
   289f4:	.word	0x0001f3f8
   289f8:	.word	0x0001f3dc
   289fc:	.word	0x0001eab0
   28a00:	.word	0x0001f0e4
   28a04:	.word	0x0000dcfc
   28a08:	.word	0x0001f00c
   28a0c:	.word	0x0001e93c
   28a10:	.word	0x0001e8f8
   28a14:	.word	0x0001eb48
   28a18:	.word	0x0001e92c
   28a1c:	.word	0x0001ef6c
   28a20:	.word	0x0001e910
   28a24:	.word	0x0001ed70
   28a28:	.word	0x0001ee3c
   28a2c:	.word	0x0001ec98
   28a30:	.word	0x0001ed98
   28a34:	.word	0x0001eff8
   28a38:	.word	0x0001f074
   28a3c:	.word	0x0001ec28
   28a40:	.word	0x0001f030
   28a44:	.word	0x0001f01c
   28a48:	.word	0x0001f040
   28a4c:	.word	0x0001edc0
   28a50:	.word	0x0001f7fc
   28a54:	.word	0x0001eed0
   28a58:	.word	0x0001f824
   28a5c:	.word	0x0001f104
   28a60:	.word	0x0000dd36
   28a64:	.word	0x0001f078
   28a68:	.word	0x0000dcb8
   28a6c:	.word	0x0001f960
   28a70:	.word	0x0001f9c4
   28a74:	.word	0x0001f9c0
   28a78:	.word	0x00004834
   28a7c:	.word	0x00004730
   28a80:	.word	0x0001fe18
   28a84:	.word	0x0001fdb4
   28a88:	.word	0x0001fda4
   28a8c:	.word	0x0000af22
   28a90:	.word	0x00004bdc
   28a94:	.word	0x00004cd8
   28a98:	.word	0x0000b008
   28a9c:	.word	0x0001fd18
   28aa0:	.word	0x0001fd18
   28aa4:	.word	0x0001fd08
   28aa8:	.word	0x0000aec8
   28aac:	.word	0x00004b84
   28ab0:	.word	0x0001f99c
   28ab4:	.word	0x0001fe84
   28ab8:	.word	0x0000de16
   28abc:	.word	0x0001fe64
   28ac0:	.word	0x0001fe50
   28ac4:	.word	0x0001fefc
   28ac8:	.word	0x0001fc5c
   28acc:	.word	0x0001fc50
   28ad0:	.word	0x0001fc58
   28ad4:	.word	0x0001fc30
   28ad8:	.word	0x0001fb00
   28adc:	.word	0x0001fa6c
   28ae0:	.word	0x0001fa5c
   28ae4:	.word	0x0000abbe
   28ae8:	.word	0x000048b0
   28aec:	.word	0x000049ac
   28af0:	.word	0x0000acdc
   28af4:	.word	0x0001fbc4
   28af8:	.word	0x0001fbb4
   28afc:	.word	0x0000ad32
   28b00:	.word	0x000049ec
   28b04:	.word	0x00004ae8
   28b08:	.word	0x0000ae18
   28b0c:	.word	0x0001fb24
   28b10:	.word	0x0000dd02
   28b14:	.word	0x0001f05c
   28b18:	.word	0x0000dc5e
   28b1c:	.word	0x0000ddbe
   28b20:	.word	0x0000de5e
   28b24:	.word	0x0000de33

00028b28 <sfbpf_ensure_buffer_stack>:
   28b28:	push	{r4, sl, fp, lr}
   28b2c:	add	fp, sp, #8
   28b30:	ldr	r0, [pc, #184]	; 28bf0 <sfbpf_ensure_buffer_stack+0xc8>
   28b34:	ldr	r0, [pc, r0]
   28b38:	cmp	r0, #0
   28b3c:	beq	28ba4 <sfbpf_ensure_buffer_stack+0x7c>
   28b40:	ldr	r1, [pc, #184]	; 28c00 <sfbpf_ensure_buffer_stack+0xd8>
   28b44:	ldr	r1, [pc, r1]
   28b48:	ldr	r3, [pc, #180]	; 28c04 <sfbpf_ensure_buffer_stack+0xdc>
   28b4c:	ldr	r3, [pc, r3]
   28b50:	sub	r2, r1, #1
   28b54:	cmp	r3, r2
   28b58:	popcc	{r4, sl, fp, pc}
   28b5c:	add	r4, r1, #8
   28b60:	lsl	r1, r4, #2
   28b64:	bl	dbc <realloc@plt>
   28b68:	ldr	r1, [pc, #152]	; 28c08 <sfbpf_ensure_buffer_stack+0xe0>
   28b6c:	cmp	r0, #0
   28b70:	add	r1, pc, r1
   28b74:	str	r0, [r1]
   28b78:	beq	28be4 <sfbpf_ensure_buffer_stack+0xbc>
   28b7c:	ldr	r1, [pc, #136]	; 28c0c <sfbpf_ensure_buffer_stack+0xe4>
   28b80:	vmov.i32	q8, #0	; 0x00000000
   28b84:	ldr	r1, [pc, r1]
   28b88:	add	r0, r0, r1, lsl #2
   28b8c:	vst1.32	{d16-d17}, [r0]!
   28b90:	vst1.32	{d16-d17}, [r0]
   28b94:	ldr	r0, [pc, #116]	; 28c10 <sfbpf_ensure_buffer_stack+0xe8>
   28b98:	add	r0, pc, r0
   28b9c:	str	r4, [r0]
   28ba0:	pop	{r4, sl, fp, pc}
   28ba4:	mov	r0, #4
   28ba8:	bl	dec <malloc@plt>
   28bac:	ldr	r1, [pc, #64]	; 28bf4 <sfbpf_ensure_buffer_stack+0xcc>
   28bb0:	cmp	r0, #0
   28bb4:	add	r1, pc, r1
   28bb8:	str	r0, [r1]
   28bbc:	movne	r1, #0
   28bc0:	strne	r1, [r0]
   28bc4:	ldrne	r0, [pc, #44]	; 28bf8 <sfbpf_ensure_buffer_stack+0xd0>
   28bc8:	addne	r0, pc, r0
   28bcc:	strne	r1, [r0]
   28bd0:	movne	r1, #1
   28bd4:	ldrne	r0, [pc, #32]	; 28bfc <sfbpf_ensure_buffer_stack+0xd4>
   28bd8:	addne	r0, pc, r0
   28bdc:	strne	r1, [r0]
   28be0:	popne	{r4, sl, fp, pc}
   28be4:	ldr	r0, [pc, #40]	; 28c14 <sfbpf_ensure_buffer_stack+0xec>
   28be8:	add	r0, pc, r0
   28bec:	bl	28fa8 <yy_fatal_error>
   28bf0:	.word	0x0001ee4c
   28bf4:	.word	0x0001edcc
   28bf8:	.word	0x0001edbc
   28bfc:	.word	0x0001edc8
   28c00:	.word	0x0001ee5c
   28c04:	.word	0x0001ee38
   28c08:	.word	0x0001ee10
   28c0c:	.word	0x0001ee1c
   28c10:	.word	0x0001ee08
   28c14:	.word	0x0000dbd5

00028c18 <sfbpf__create_buffer>:
   28c18:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   28c1c:	add	fp, sp, #24
   28c20:	mov	r5, r0
   28c24:	mov	r0, #48	; 0x30
   28c28:	mov	r6, r1
   28c2c:	bl	dec <malloc@plt>
   28c30:	cmp	r0, #0
   28c34:	beq	28d78 <sfbpf__create_buffer+0x160>
   28c38:	mov	r4, r0
   28c3c:	str	r6, [r0, #12]
   28c40:	add	r0, r6, #2
   28c44:	bl	dec <malloc@plt>
   28c48:	cmp	r0, #0
   28c4c:	str	r0, [r4, #4]
   28c50:	beq	28d78 <sfbpf__create_buffer+0x160>
   28c54:	mov	r6, #1
   28c58:	mov	r7, r0
   28c5c:	str	r6, [r4, #20]
   28c60:	bl	e40 <__errno_location@plt>
   28c64:	mov	r1, #0
   28c68:	ldr	r8, [r0]
   28c6c:	mov	r9, r0
   28c70:	str	r1, [r4, #16]
   28c74:	str	r7, [r4, #8]
   28c78:	str	r6, [r4, #28]
   28c7c:	strh	r1, [r7]
   28c80:	str	r1, [r4, #44]	; 0x2c
   28c84:	ldr	r0, [pc, #248]	; 28d84 <sfbpf__create_buffer+0x16c>
   28c88:	ldr	r0, [pc, r0]
   28c8c:	cmp	r0, #0
   28c90:	beq	28ca0 <sfbpf__create_buffer+0x88>
   28c94:	ldr	r1, [pc, #236]	; 28d88 <sfbpf__create_buffer+0x170>
   28c98:	ldr	r1, [pc, r1]
   28c9c:	ldr	r1, [r0, r1, lsl #2]
   28ca0:	cmp	r1, r4
   28ca4:	bne	28d04 <sfbpf__create_buffer+0xec>
   28ca8:	ldr	r1, [pc, #220]	; 28d8c <sfbpf__create_buffer+0x174>
   28cac:	ldr	r1, [pc, r1]
   28cb0:	ldr	r2, [r0, r1, lsl #2]
   28cb4:	ldr	r3, [r2, #16]
   28cb8:	ldr	r7, [pc, #208]	; 28d90 <sfbpf__create_buffer+0x178>
   28cbc:	add	r7, pc, r7
   28cc0:	str	r3, [r7]
   28cc4:	ldr	r2, [r2, #8]
   28cc8:	ldr	r3, [pc, #196]	; 28d94 <sfbpf__create_buffer+0x17c>
   28ccc:	add	r3, pc, r3
   28cd0:	str	r2, [r3]
   28cd4:	ldr	r3, [pc, #188]	; 28d98 <sfbpf__create_buffer+0x180>
   28cd8:	add	r3, pc, r3
   28cdc:	str	r2, [r3]
   28ce0:	ldr	r1, [r0, r1, lsl #2]
   28ce4:	ldr	r1, [r1]
   28ce8:	ldr	r3, [pc, #172]	; 28d9c <sfbpf__create_buffer+0x184>
   28cec:	add	r3, pc, r3
   28cf0:	str	r1, [r3]
   28cf4:	ldrb	r1, [r2]
   28cf8:	ldr	r2, [pc, #160]	; 28da0 <sfbpf__create_buffer+0x188>
   28cfc:	add	r2, pc, r2
   28d00:	strb	r1, [r2]
   28d04:	mov	r1, #1
   28d08:	cmp	r0, #0
   28d0c:	str	r1, [r4, #40]	; 0x28
   28d10:	str	r5, [r4]
   28d14:	beq	28d28 <sfbpf__create_buffer+0x110>
   28d18:	ldr	r1, [pc, #132]	; 28da4 <sfbpf__create_buffer+0x18c>
   28d1c:	ldr	r1, [pc, r1]
   28d20:	ldr	r0, [r0, r1, lsl #2]
   28d24:	b	28d2c <sfbpf__create_buffer+0x114>
   28d28:	mov	r0, #0
   28d2c:	cmp	r0, r4
   28d30:	movne	r1, #1
   28d34:	movne	r0, #0
   28d38:	strne	r1, [r4, #32]
   28d3c:	strne	r0, [r4, #36]	; 0x24
   28d40:	cmp	r5, #0
   28d44:	beq	28d64 <sfbpf__create_buffer+0x14c>
   28d48:	mov	r0, r5
   28d4c:	bl	e7c <fileno@plt>
   28d50:	bl	ed0 <isatty@plt>
   28d54:	cmp	r0, #0
   28d58:	mov	r1, #0
   28d5c:	movwgt	r1, #1
   28d60:	b	28d68 <sfbpf__create_buffer+0x150>
   28d64:	mov	r1, #0
   28d68:	mov	r0, r4
   28d6c:	str	r1, [r4, #24]
   28d70:	str	r8, [r9]
   28d74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   28d78:	ldr	r0, [pc, #40]	; 28da8 <sfbpf__create_buffer+0x190>
   28d7c:	add	r0, pc, r0
   28d80:	bl	28fa8 <yy_fatal_error>
   28d84:	.word	0x0001ecf8
   28d88:	.word	0x0001ecec
   28d8c:	.word	0x0001ecd8
   28d90:	.word	0x0001ecdc
   28d94:	.word	0x0001ecbc
   28d98:	.word	0x0001ed08
   28d9c:	.word	0x0001ec80
   28da0:	.word	0x0001ec90
   28da4:	.word	0x0001ec68
   28da8:	.word	0x0000d8f5

00028dac <sfbpf_wrap>:
   28dac:	mov	r0, #1
   28db0:	bx	lr

00028db4 <sfbpf_restart>:
   28db4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28db8:	add	fp, sp, #28
   28dbc:	sub	sp, sp, #4
   28dc0:	ldr	r7, [pc, #428]	; 28f74 <sfbpf_restart+0x1c0>
   28dc4:	mov	r9, r0
   28dc8:	ldr	r7, [pc, r7]
   28dcc:	cmp	r7, #0
   28dd0:	beq	28de8 <sfbpf_restart+0x34>
   28dd4:	ldr	r6, [pc, #412]	; 28f78 <sfbpf_restart+0x1c4>
   28dd8:	ldr	r6, [pc, r6]
   28ddc:	ldr	r4, [r7, r6, lsl #2]
   28de0:	cmp	r4, #0
   28de4:	bne	28e1c <sfbpf_restart+0x68>
   28de8:	bl	28b28 <sfbpf_ensure_buffer_stack>
   28dec:	ldr	r0, [pc, #392]	; 28f7c <sfbpf_restart+0x1c8>
   28df0:	mov	r1, #16384	; 0x4000
   28df4:	ldr	r0, [pc, r0]
   28df8:	bl	28c18 <sfbpf__create_buffer>
   28dfc:	ldr	r7, [pc, #380]	; 28f80 <sfbpf_restart+0x1cc>
   28e00:	mov	r4, r0
   28e04:	ldr	r7, [pc, r7]
   28e08:	ldr	r6, [pc, #372]	; 28f84 <sfbpf_restart+0x1d0>
   28e0c:	ldr	r6, [pc, r6]
   28e10:	cmp	r7, #0
   28e14:	str	r0, [r7, r6, lsl #2]
   28e18:	beq	28f70 <sfbpf_restart+0x1bc>
   28e1c:	bl	e40 <__errno_location@plt>
   28e20:	ldr	sl, [r0]
   28e24:	ldr	r3, [pc, #348]	; 28f88 <sfbpf_restart+0x1d4>
   28e28:	ldr	r5, [pc, #348]	; 28f8c <sfbpf_restart+0x1d8>
   28e2c:	ldr	r2, [pc, #348]	; 28f90 <sfbpf_restart+0x1dc>
   28e30:	ldr	lr, [pc, #348]	; 28f94 <sfbpf_restart+0x1e0>
   28e34:	ldr	ip, [pc, #348]	; 28f98 <sfbpf_restart+0x1e4>
   28e38:	mov	r8, r0
   28e3c:	cmp	r4, #0
   28e40:	add	r3, pc, r3
   28e44:	add	r5, pc, r5
   28e48:	add	r2, pc, r2
   28e4c:	add	lr, pc, lr
   28e50:	add	ip, pc, ip
   28e54:	beq	28ebc <sfbpf_restart+0x108>
   28e58:	mov	r0, #0
   28e5c:	str	r0, [r4, #16]
   28e60:	ldr	r1, [r4, #4]
   28e64:	strb	r0, [r1]
   28e68:	ldr	r1, [r4, #4]
   28e6c:	strb	r0, [r1, #1]
   28e70:	str	r0, [r4, #44]	; 0x2c
   28e74:	mov	r0, #1
   28e78:	str	r0, [r4, #28]
   28e7c:	ldr	r0, [r4, #4]
   28e80:	str	r0, [r4, #8]
   28e84:	ldr	r0, [r7, r6, lsl #2]
   28e88:	cmp	r0, r4
   28e8c:	bne	28ebc <sfbpf_restart+0x108>
   28e90:	ldr	r0, [r7, r6, lsl #2]
   28e94:	ldr	r1, [r0, #16]
   28e98:	str	r1, [r3]
   28e9c:	ldr	r0, [r0, #8]
   28ea0:	str	r0, [r5]
   28ea4:	str	r0, [r2]
   28ea8:	ldr	r1, [r7, r6, lsl #2]
   28eac:	ldr	r1, [r1]
   28eb0:	str	r1, [lr]
   28eb4:	ldrb	r0, [r0]
   28eb8:	strb	r0, [ip]
   28ebc:	mov	r0, #1
   28ec0:	str	r0, [r4, #40]	; 0x28
   28ec4:	str	r9, [r4]
   28ec8:	ldr	r1, [r7, r6, lsl #2]
   28ecc:	cmp	r1, r4
   28ed0:	movne	r1, #0
   28ed4:	strne	r0, [r4, #32]
   28ed8:	strne	r1, [r4, #36]	; 0x24
   28edc:	cmp	r9, #0
   28ee0:	beq	28f30 <sfbpf_restart+0x17c>
   28ee4:	mov	r0, r9
   28ee8:	mov	r6, lr
   28eec:	mov	r7, r2
   28ef0:	mov	r9, r3
   28ef4:	bl	e7c <fileno@plt>
   28ef8:	bl	ed0 <isatty@plt>
   28efc:	ldr	ip, [pc, #152]	; 28f9c <sfbpf_restart+0x1e8>
   28f00:	mov	lr, r6
   28f04:	ldr	r6, [pc, #148]	; 28fa0 <sfbpf_restart+0x1ec>
   28f08:	mov	r2, r7
   28f0c:	cmp	r0, #0
   28f10:	mov	r1, #0
   28f14:	mov	r3, r9
   28f18:	movwgt	r1, #1
   28f1c:	ldr	r6, [pc, r6]
   28f20:	ldr	r7, [pc, #124]	; 28fa4 <sfbpf_restart+0x1f0>
   28f24:	add	ip, pc, ip
   28f28:	ldr	r7, [pc, r7]
   28f2c:	b	28f34 <sfbpf_restart+0x180>
   28f30:	mov	r1, #0
   28f34:	str	r1, [r4, #24]
   28f38:	str	sl, [r8]
   28f3c:	ldr	r0, [r7, r6, lsl #2]
   28f40:	ldr	r1, [r0, #16]
   28f44:	str	r1, [r3]
   28f48:	ldr	r0, [r0, #8]
   28f4c:	str	r0, [r5]
   28f50:	str	r0, [r2]
   28f54:	ldr	r1, [r7, r6, lsl #2]
   28f58:	ldr	r1, [r1]
   28f5c:	str	r1, [lr]
   28f60:	ldrb	r0, [r0]
   28f64:	strb	r0, [ip]
   28f68:	sub	sp, fp, #28
   28f6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28f70:	udf	#65006	; 0xfdee
   28f74:	.word	0x0001ebb8
   28f78:	.word	0x0001ebac
   28f7c:	.word	0x0001eb78
   28f80:	.word	0x0001eb7c
   28f84:	.word	0x0001eb78
   28f88:	.word	0x0001eb58
   28f8c:	.word	0x0001eb9c
   28f90:	.word	0x0001eb40
   28f94:	.word	0x0001eb20
   28f98:	.word	0x0001eb3c
   28f9c:	.word	0x0001ea68
   28fa0:	.word	0x0001ea68
   28fa4:	.word	0x0001ea58

00028fa8 <yy_fatal_error>:
   28fa8:	push	{fp, lr}
   28fac:	mov	fp, sp
   28fb0:	mov	r2, r0
   28fb4:	ldr	r0, [pc, #24]	; 28fd4 <yy_fatal_error+0x2c>
   28fb8:	ldr	r0, [pc, r0]
   28fbc:	ldr	r0, [r0]
   28fc0:	ldr	r1, [pc, #16]	; 28fd8 <yy_fatal_error+0x30>
   28fc4:	add	r1, pc, r1
   28fc8:	bl	e34 <fprintf@plt>
   28fcc:	mov	r0, #2
   28fd0:	bl	e10 <exit@plt>
   28fd4:	.word	0x0001e0f4
   28fd8:	.word	0x000009cd

00028fdc <sfbpf__switch_to_buffer>:
   28fdc:	push	{r4, sl, fp, lr}
   28fe0:	add	fp, sp, #8
   28fe4:	mov	r4, r0
   28fe8:	bl	28b28 <sfbpf_ensure_buffer_stack>
   28fec:	ldr	r0, [pc, #192]	; 290b4 <sfbpf__switch_to_buffer+0xd8>
   28ff0:	ldr	r0, [pc, r0]
   28ff4:	cmp	r0, #0
   28ff8:	beq	2900c <sfbpf__switch_to_buffer+0x30>
   28ffc:	ldr	r1, [pc, #180]	; 290b8 <sfbpf__switch_to_buffer+0xdc>
   29000:	ldr	r1, [pc, r1]
   29004:	ldr	r1, [r0, r1, lsl #2]
   29008:	b	29010 <sfbpf__switch_to_buffer+0x34>
   2900c:	mov	r1, #0
   29010:	cmp	r1, r4
   29014:	popeq	{r4, sl, fp, pc}
   29018:	ldr	r2, [pc, #156]	; 290bc <sfbpf__switch_to_buffer+0xe0>
   2901c:	cmp	r0, #0
   29020:	ldr	r2, [pc, r2]
   29024:	ldr	ip, [pc, #148]	; 290c0 <sfbpf__switch_to_buffer+0xe4>
   29028:	add	ip, pc, ip
   2902c:	beq	29064 <sfbpf__switch_to_buffer+0x88>
   29030:	ldr	r3, [r0, r2, lsl #2]
   29034:	cmp	r3, #0
   29038:	beq	29064 <sfbpf__switch_to_buffer+0x88>
   2903c:	ldrb	r3, [ip]
   29040:	ldr	r1, [pc, #124]	; 290c4 <sfbpf__switch_to_buffer+0xe8>
   29044:	ldr	r1, [pc, r1]
   29048:	strb	r3, [r1]
   2904c:	ldr	r3, [r0, r2, lsl #2]
   29050:	str	r1, [r3, #8]
   29054:	ldr	r1, [r0, r2, lsl #2]
   29058:	ldr	r3, [pc, #104]	; 290c8 <sfbpf__switch_to_buffer+0xec>
   2905c:	ldr	r3, [pc, r3]
   29060:	str	r3, [r1, #16]
   29064:	str	r4, [r0, r2, lsl #2]
   29068:	ldr	r1, [r4, #16]
   2906c:	ldr	r3, [pc, #88]	; 290cc <sfbpf__switch_to_buffer+0xf0>
   29070:	add	r3, pc, r3
   29074:	str	r1, [r3]
   29078:	ldr	r1, [r4, #8]
   2907c:	ldr	r3, [pc, #76]	; 290d0 <sfbpf__switch_to_buffer+0xf4>
   29080:	add	r3, pc, r3
   29084:	str	r1, [r3]
   29088:	ldr	r3, [pc, #68]	; 290d4 <sfbpf__switch_to_buffer+0xf8>
   2908c:	add	r3, pc, r3
   29090:	str	r1, [r3]
   29094:	ldr	r0, [r0, r2, lsl #2]
   29098:	ldr	r0, [r0]
   2909c:	ldr	r2, [pc, #52]	; 290d8 <sfbpf__switch_to_buffer+0xfc>
   290a0:	add	r2, pc, r2
   290a4:	str	r0, [r2]
   290a8:	ldrb	r0, [r1]
   290ac:	strb	r0, [ip]
   290b0:	pop	{r4, sl, fp, pc}
   290b4:	.word	0x0001e990
   290b8:	.word	0x0001e984
   290bc:	.word	0x0001e964
   290c0:	.word	0x0001e964
   290c4:	.word	0x0001e944
   290c8:	.word	0x0001e93c
   290cc:	.word	0x0001e928
   290d0:	.word	0x0001e960
   290d4:	.word	0x0001e8fc
   290d8:	.word	0x0001e8cc

000290dc <sfbpf_alloc>:
   290dc:	b	dec <malloc@plt>

000290e0 <sfbpf__delete_buffer>:
   290e0:	cmp	r0, #0
   290e4:	bxeq	lr
   290e8:	push	{r4, sl, fp, lr}
   290ec:	add	fp, sp, #8
   290f0:	mov	r4, r0
   290f4:	ldr	r0, [pc, #92]	; 29158 <sfbpf__delete_buffer+0x78>
   290f8:	ldr	r0, [pc, r0]
   290fc:	cmp	r0, #0
   29100:	beq	29148 <sfbpf__delete_buffer+0x68>
   29104:	ldr	r1, [pc, #80]	; 2915c <sfbpf__delete_buffer+0x7c>
   29108:	ldr	r1, [pc, r1]
   2910c:	ldr	r1, [r0, r1, lsl #2]
   29110:	cmp	r1, r4
   29114:	bne	29128 <sfbpf__delete_buffer+0x48>
   29118:	ldr	r1, [pc, #64]	; 29160 <sfbpf__delete_buffer+0x80>
   2911c:	mov	r2, #0
   29120:	ldr	r1, [pc, r1]
   29124:	str	r2, [r0, r1, lsl #2]
   29128:	ldr	r0, [r4, #20]
   2912c:	cmp	r0, #0
   29130:	beq	2913c <sfbpf__delete_buffer+0x5c>
   29134:	ldr	r0, [r4, #4]
   29138:	bl	d74 <free@plt>
   2913c:	mov	r0, r4
   29140:	pop	{r4, sl, fp, lr}
   29144:	b	d74 <free@plt>
   29148:	mov	r1, #0
   2914c:	cmp	r1, r4
   29150:	bne	29128 <sfbpf__delete_buffer+0x48>
   29154:	b	29118 <sfbpf__delete_buffer+0x38>
   29158:	.word	0x0001e888
   2915c:	.word	0x0001e87c
   29160:	.word	0x0001e864

00029164 <sfbpf_free>:
   29164:	b	d74 <free@plt>

00029168 <sfbpf__flush_buffer>:
   29168:	cmp	r0, #0
   2916c:	beq	2921c <sfbpf__flush_buffer+0xb4>
   29170:	mov	r2, #0
   29174:	str	r2, [r0, #16]
   29178:	ldr	r1, [r0, #4]
   2917c:	strb	r2, [r1]
   29180:	ldr	r1, [r0, #4]
   29184:	strb	r2, [r1, #1]
   29188:	mov	r1, #1
   2918c:	str	r2, [r0, #44]	; 0x2c
   29190:	str	r1, [r0, #28]
   29194:	ldr	r1, [r0, #4]
   29198:	str	r1, [r0, #8]
   2919c:	ldr	r1, [pc, #124]	; 29220 <sfbpf__flush_buffer+0xb8>
   291a0:	ldr	r1, [pc, r1]
   291a4:	cmp	r1, #0
   291a8:	beq	291b8 <sfbpf__flush_buffer+0x50>
   291ac:	ldr	r2, [pc, #112]	; 29224 <sfbpf__flush_buffer+0xbc>
   291b0:	ldr	r2, [pc, r2]
   291b4:	ldr	r2, [r1, r2, lsl #2]
   291b8:	cmp	r2, r0
   291bc:	bxne	lr
   291c0:	ldr	r0, [pc, #96]	; 29228 <sfbpf__flush_buffer+0xc0>
   291c4:	ldr	r0, [pc, r0]
   291c8:	ldr	r2, [r1, r0, lsl #2]
   291cc:	ldr	ip, [r2, #16]
   291d0:	ldr	r3, [pc, #84]	; 2922c <sfbpf__flush_buffer+0xc4>
   291d4:	add	r3, pc, r3
   291d8:	str	ip, [r3]
   291dc:	ldr	r2, [r2, #8]
   291e0:	ldr	r3, [pc, #72]	; 29230 <sfbpf__flush_buffer+0xc8>
   291e4:	add	r3, pc, r3
   291e8:	str	r2, [r3]
   291ec:	ldr	r3, [pc, #64]	; 29234 <sfbpf__flush_buffer+0xcc>
   291f0:	add	r3, pc, r3
   291f4:	str	r2, [r3]
   291f8:	ldr	r0, [r1, r0, lsl #2]
   291fc:	ldr	r0, [r0]
   29200:	ldr	r1, [pc, #48]	; 29238 <sfbpf__flush_buffer+0xd0>
   29204:	add	r1, pc, r1
   29208:	str	r0, [r1]
   2920c:	ldrb	r0, [r2]
   29210:	ldr	r1, [pc, #36]	; 2923c <sfbpf__flush_buffer+0xd4>
   29214:	add	r1, pc, r1
   29218:	strb	r0, [r1]
   2921c:	bx	lr
   29220:	.word	0x0001e7e0
   29224:	.word	0x0001e7d4
   29228:	.word	0x0001e7c0
   2922c:	.word	0x0001e7c4
   29230:	.word	0x0001e7a4
   29234:	.word	0x0001e7f0
   29238:	.word	0x0001e768
   2923c:	.word	0x0001e778

00029240 <sfbpf_push_buffer_state>:
   29240:	cmp	r0, #0
   29244:	bxeq	lr
   29248:	push	{r4, sl, fp, lr}
   2924c:	add	fp, sp, #8
   29250:	mov	r4, r0
   29254:	bl	28b28 <sfbpf_ensure_buffer_stack>
   29258:	ldr	r1, [pc, #188]	; 2931c <sfbpf_push_buffer_state+0xdc>
   2925c:	ldr	r1, [pc, r1]
   29260:	ldr	r2, [pc, #184]	; 29320 <sfbpf_push_buffer_state+0xe0>
   29264:	ldr	r2, [pc, r2]
   29268:	ldr	ip, [pc, #180]	; 29324 <sfbpf_push_buffer_state+0xe4>
   2926c:	cmp	r2, #0
   29270:	add	ip, pc, ip
   29274:	beq	292c8 <sfbpf_push_buffer_state+0x88>
   29278:	ldr	r3, [r2, r1, lsl #2]
   2927c:	cmp	r3, #0
   29280:	beq	292c8 <sfbpf_push_buffer_state+0x88>
   29284:	ldrb	r3, [ip]
   29288:	ldr	r0, [pc, #152]	; 29328 <sfbpf_push_buffer_state+0xe8>
   2928c:	ldr	r0, [pc, r0]
   29290:	strb	r3, [r0]
   29294:	ldr	r3, [r2, r1, lsl #2]
   29298:	str	r0, [r3, #8]
   2929c:	ldr	r0, [r2, r1, lsl #2]
   292a0:	ldr	r3, [pc, #132]	; 2932c <sfbpf_push_buffer_state+0xec>
   292a4:	ldr	r3, [pc, r3]
   292a8:	str	r3, [r0, #16]
   292ac:	ldr	r0, [r2, r1, lsl #2]
   292b0:	cmp	r0, #0
   292b4:	beq	292c8 <sfbpf_push_buffer_state+0x88>
   292b8:	ldr	r0, [pc, #112]	; 29330 <sfbpf_push_buffer_state+0xf0>
   292bc:	add	r1, r1, #1
   292c0:	add	r0, pc, r0
   292c4:	str	r1, [r0]
   292c8:	str	r4, [r2, r1, lsl #2]
   292cc:	ldr	r0, [r4, #16]
   292d0:	ldr	r3, [pc, #92]	; 29334 <sfbpf_push_buffer_state+0xf4>
   292d4:	add	r3, pc, r3
   292d8:	str	r0, [r3]
   292dc:	ldr	r0, [r4, #8]
   292e0:	ldr	r3, [pc, #80]	; 29338 <sfbpf_push_buffer_state+0xf8>
   292e4:	add	r3, pc, r3
   292e8:	str	r0, [r3]
   292ec:	ldr	r3, [pc, #72]	; 2933c <sfbpf_push_buffer_state+0xfc>
   292f0:	add	r3, pc, r3
   292f4:	str	r0, [r3]
   292f8:	ldr	r1, [r2, r1, lsl #2]
   292fc:	ldr	r1, [r1]
   29300:	ldr	r2, [pc, #56]	; 29340 <sfbpf_push_buffer_state+0x100>
   29304:	add	r2, pc, r2
   29308:	str	r1, [r2]
   2930c:	ldrb	r0, [r0]
   29310:	strb	r0, [ip]
   29314:	pop	{r4, sl, fp, lr}
   29318:	bx	lr
   2931c:	.word	0x0001e728
   29320:	.word	0x0001e71c
   29324:	.word	0x0001e71c
   29328:	.word	0x0001e6fc
   2932c:	.word	0x0001e6f4
   29330:	.word	0x0001e6c4
   29334:	.word	0x0001e6c4
   29338:	.word	0x0001e6fc
   2933c:	.word	0x0001e698
   29340:	.word	0x0001e668

00029344 <sfbpf_pop_buffer_state>:
   29344:	push	{r4, r5, fp, lr}
   29348:	add	fp, sp, #8
   2934c:	ldr	r0, [pc, #212]	; 29428 <sfbpf_pop_buffer_state+0xe4>
   29350:	ldr	r0, [pc, r0]
   29354:	cmp	r0, #0
   29358:	beq	29424 <sfbpf_pop_buffer_state+0xe0>
   2935c:	ldr	r1, [pc, #200]	; 2942c <sfbpf_pop_buffer_state+0xe8>
   29360:	ldr	r1, [pc, r1]
   29364:	ldr	r4, [r0, r1, lsl #2]
   29368:	cmp	r4, #0
   2936c:	beq	29424 <sfbpf_pop_buffer_state+0xe0>
   29370:	mov	r5, #0
   29374:	str	r5, [r0, r1, lsl #2]
   29378:	ldr	r0, [r4, #20]
   2937c:	cmp	r0, #0
   29380:	beq	2938c <sfbpf_pop_buffer_state+0x48>
   29384:	ldr	r0, [r4, #4]
   29388:	bl	d74 <free@plt>
   2938c:	mov	r0, r4
   29390:	bl	d74 <free@plt>
   29394:	ldr	r1, [pc, #148]	; 29430 <sfbpf_pop_buffer_state+0xec>
   29398:	ldr	r1, [pc, r1]
   2939c:	ldr	r0, [pc, #144]	; 29434 <sfbpf_pop_buffer_state+0xf0>
   293a0:	ldr	r0, [pc, r0]
   293a4:	cmp	r1, #0
   293a8:	str	r5, [r0, r1, lsl #2]
   293ac:	beq	293c0 <sfbpf_pop_buffer_state+0x7c>
   293b0:	sub	r5, r1, #1
   293b4:	ldr	r1, [pc, #124]	; 29438 <sfbpf_pop_buffer_state+0xf4>
   293b8:	add	r1, pc, r1
   293bc:	str	r5, [r1]
   293c0:	cmp	r0, #0
   293c4:	beq	29424 <sfbpf_pop_buffer_state+0xe0>
   293c8:	ldr	r1, [r0, r5, lsl #2]
   293cc:	cmp	r1, #0
   293d0:	popeq	{r4, r5, fp, pc}
   293d4:	ldr	r2, [r1, #16]
   293d8:	ldr	r3, [pc, #92]	; 2943c <sfbpf_pop_buffer_state+0xf8>
   293dc:	add	r3, pc, r3
   293e0:	str	r2, [r3]
   293e4:	ldr	r1, [r1, #8]
   293e8:	ldr	r2, [pc, #80]	; 29440 <sfbpf_pop_buffer_state+0xfc>
   293ec:	add	r2, pc, r2
   293f0:	str	r1, [r2]
   293f4:	ldr	r2, [pc, #72]	; 29444 <sfbpf_pop_buffer_state+0x100>
   293f8:	add	r2, pc, r2
   293fc:	str	r1, [r2]
   29400:	ldr	r0, [r0, r5, lsl #2]
   29404:	ldr	r0, [r0]
   29408:	ldr	r2, [pc, #56]	; 29448 <sfbpf_pop_buffer_state+0x104>
   2940c:	add	r2, pc, r2
   29410:	str	r0, [r2]
   29414:	ldrb	r0, [r1]
   29418:	ldr	r1, [pc, #44]	; 2944c <sfbpf_pop_buffer_state+0x108>
   2941c:	add	r1, pc, r1
   29420:	strb	r0, [r1]
   29424:	pop	{r4, r5, fp, pc}
   29428:	.word	0x0001e630
   2942c:	.word	0x0001e624
   29430:	.word	0x0001e5ec
   29434:	.word	0x0001e5e0
   29438:	.word	0x0001e5cc
   2943c:	.word	0x0001e5bc
   29440:	.word	0x0001e5f4
   29444:	.word	0x0001e590
   29448:	.word	0x0001e560
   2944c:	.word	0x0001e570

00029450 <sfbpf__scan_buffer>:
   29450:	push	{r4, r5, r6, r7, fp, lr}
   29454:	add	fp, sp, #16
   29458:	mov	r4, #0
   2945c:	cmp	r1, #2
   29460:	bcc	2958c <sfbpf__scan_buffer+0x13c>
   29464:	sub	r6, r1, #2
   29468:	mov	r5, r0
   2946c:	ldrb	r0, [r0, r6]
   29470:	cmp	r0, #0
   29474:	bne	2958c <sfbpf__scan_buffer+0x13c>
   29478:	add	r0, r1, r5
   2947c:	ldrb	r0, [r0, #-1]
   29480:	cmp	r0, #0
   29484:	bne	2958c <sfbpf__scan_buffer+0x13c>
   29488:	mov	r0, #48	; 0x30
   2948c:	bl	dec <malloc@plt>
   29490:	cmp	r0, #0
   29494:	beq	29594 <sfbpf__scan_buffer+0x144>
   29498:	mov	r7, #0
   2949c:	mov	r4, r0
   294a0:	str	r7, [r0, #40]	; 0x28
   294a4:	str	r7, [r0, #44]	; 0x2c
   294a8:	mov	r0, #1
   294ac:	str	r7, [r4]
   294b0:	str	r5, [r4, #4]
   294b4:	str	r5, [r4, #8]
   294b8:	str	r6, [r4, #12]
   294bc:	str	r6, [r4, #16]
   294c0:	str	r7, [r4, #20]
   294c4:	str	r7, [r4, #24]
   294c8:	str	r0, [r4, #28]
   294cc:	bl	28b28 <sfbpf_ensure_buffer_stack>
   294d0:	ldr	r0, [pc, #200]	; 295a0 <sfbpf__scan_buffer+0x150>
   294d4:	ldr	r0, [pc, r0]
   294d8:	cmp	r0, #0
   294dc:	beq	294ec <sfbpf__scan_buffer+0x9c>
   294e0:	ldr	r1, [pc, #188]	; 295a4 <sfbpf__scan_buffer+0x154>
   294e4:	ldr	r1, [pc, r1]
   294e8:	ldr	r7, [r0, r1, lsl #2]
   294ec:	cmp	r7, r4
   294f0:	beq	2958c <sfbpf__scan_buffer+0x13c>
   294f4:	ldr	r2, [pc, #172]	; 295a8 <sfbpf__scan_buffer+0x158>
   294f8:	cmp	r0, #0
   294fc:	ldr	r2, [pc, r2]
   29500:	ldr	r1, [pc, #164]	; 295ac <sfbpf__scan_buffer+0x15c>
   29504:	add	r1, pc, r1
   29508:	beq	29540 <sfbpf__scan_buffer+0xf0>
   2950c:	ldr	r3, [r0, r2, lsl #2]
   29510:	cmp	r3, #0
   29514:	beq	29540 <sfbpf__scan_buffer+0xf0>
   29518:	ldrb	r3, [r1]
   2951c:	ldr	r7, [pc, #140]	; 295b0 <sfbpf__scan_buffer+0x160>
   29520:	ldr	r7, [pc, r7]
   29524:	strb	r3, [r7]
   29528:	ldr	r3, [r0, r2, lsl #2]
   2952c:	str	r7, [r3, #8]
   29530:	ldr	r3, [r0, r2, lsl #2]
   29534:	ldr	r7, [pc, #120]	; 295b4 <sfbpf__scan_buffer+0x164>
   29538:	ldr	r7, [pc, r7]
   2953c:	str	r7, [r3, #16]
   29540:	str	r4, [r0, r2, lsl #2]
   29544:	ldr	r3, [r4, #16]
   29548:	ldr	r7, [pc, #104]	; 295b8 <sfbpf__scan_buffer+0x168>
   2954c:	add	r7, pc, r7
   29550:	str	r3, [r7]
   29554:	ldr	r3, [r4, #8]
   29558:	ldr	r7, [pc, #92]	; 295bc <sfbpf__scan_buffer+0x16c>
   2955c:	add	r7, pc, r7
   29560:	str	r3, [r7]
   29564:	ldr	r7, [pc, #84]	; 295c0 <sfbpf__scan_buffer+0x170>
   29568:	add	r7, pc, r7
   2956c:	str	r3, [r7]
   29570:	ldr	r0, [r0, r2, lsl #2]
   29574:	ldr	r0, [r0]
   29578:	ldr	r2, [pc, #68]	; 295c4 <sfbpf__scan_buffer+0x174>
   2957c:	add	r2, pc, r2
   29580:	str	r0, [r2]
   29584:	ldrb	r0, [r3]
   29588:	strb	r0, [r1]
   2958c:	mov	r0, r4
   29590:	pop	{r4, r5, r6, r7, fp, pc}
   29594:	ldr	r0, [pc, #44]	; 295c8 <sfbpf__scan_buffer+0x178>
   29598:	add	r0, pc, r0
   2959c:	bl	28fa8 <yy_fatal_error>
   295a0:	.word	0x0001e4ac
   295a4:	.word	0x0001e4a0
   295a8:	.word	0x0001e488
   295ac:	.word	0x0001e488
   295b0:	.word	0x0001e468
   295b4:	.word	0x0001e460
   295b8:	.word	0x0001e44c
   295bc:	.word	0x0001e484
   295c0:	.word	0x0001e420
   295c4:	.word	0x0001e3f0
   295c8:	.word	0x0000d105

000295cc <sfbpf__scan_string>:
   295cc:	push	{r4, r5, r6, r7, fp, lr}
   295d0:	add	fp, sp, #16
   295d4:	mov	r6, r0
   295d8:	bl	e1c <strlen@plt>
   295dc:	add	r4, r0, #2
   295e0:	mov	r5, r0
   295e4:	mov	r0, r4
   295e8:	bl	dec <malloc@plt>
   295ec:	cmp	r0, #0
   295f0:	beq	29644 <sfbpf__scan_string+0x78>
   295f4:	mov	r7, r0
   295f8:	cmp	r5, #1
   295fc:	blt	29610 <sfbpf__scan_string+0x44>
   29600:	mov	r0, r7
   29604:	mov	r1, r6
   29608:	mov	r2, r5
   2960c:	bl	d98 <memcpy@plt>
   29610:	add	r0, r7, r5
   29614:	mov	r1, #0
   29618:	strh	r1, [r0]
   2961c:	mov	r0, r7
   29620:	mov	r1, r4
   29624:	bl	29450 <sfbpf__scan_buffer>
   29628:	cmp	r0, #0
   2962c:	movne	r1, #1
   29630:	strne	r1, [r0, #20]
   29634:	popne	{r4, r5, r6, r7, fp, pc}
   29638:	ldr	r0, [pc, #20]	; 29654 <sfbpf__scan_string+0x88>
   2963c:	add	r0, pc, r0
   29640:	bl	28fa8 <yy_fatal_error>
   29644:	ldr	r0, [pc, #4]	; 29650 <sfbpf__scan_string+0x84>
   29648:	add	r0, pc, r0
   2964c:	bl	28fa8 <yy_fatal_error>
   29650:	.word	0x0000d07f
   29654:	.word	0x0000d0b4

00029658 <sfbpf__scan_bytes>:
   29658:	push	{r4, r5, r6, r7, fp, lr}
   2965c:	add	fp, sp, #16
   29660:	add	r4, r1, #2
   29664:	mov	r7, r0
   29668:	mov	r5, r1
   2966c:	mov	r0, r4
   29670:	bl	dec <malloc@plt>
   29674:	cmp	r0, #0
   29678:	beq	296cc <sfbpf__scan_bytes+0x74>
   2967c:	mov	r6, r0
   29680:	cmp	r5, #1
   29684:	blt	29698 <sfbpf__scan_bytes+0x40>
   29688:	mov	r0, r6
   2968c:	mov	r1, r7
   29690:	mov	r2, r5
   29694:	bl	d98 <memcpy@plt>
   29698:	add	r0, r6, r5
   2969c:	mov	r1, #0
   296a0:	strh	r1, [r0]
   296a4:	mov	r0, r6
   296a8:	mov	r1, r4
   296ac:	bl	29450 <sfbpf__scan_buffer>
   296b0:	cmp	r0, #0
   296b4:	movne	r1, #1
   296b8:	strne	r1, [r0, #20]
   296bc:	popne	{r4, r5, r6, r7, fp, pc}
   296c0:	ldr	r0, [pc, #20]	; 296dc <sfbpf__scan_bytes+0x84>
   296c4:	add	r0, pc, r0
   296c8:	bl	28fa8 <yy_fatal_error>
   296cc:	ldr	r0, [pc, #4]	; 296d8 <sfbpf__scan_bytes+0x80>
   296d0:	add	r0, pc, r0
   296d4:	bl	28fa8 <yy_fatal_error>
   296d8:	.word	0x0000cff7
   296dc:	.word	0x0000d02c

000296e0 <sfbpf_get_debug>:
   296e0:	ldr	r0, [pc, #4]	; 296ec <sfbpf_get_debug+0xc>
   296e4:	ldr	r0, [pc, r0]
   296e8:	bx	lr
   296ec:	.word	0x0001e290

000296f0 <sfbpf_set_debug>:
   296f0:	ldr	r1, [pc, #8]	; 29700 <sfbpf_set_debug+0x10>
   296f4:	add	r1, pc, r1
   296f8:	str	r0, [r1]
   296fc:	bx	lr
   29700:	.word	0x0001e280

00029704 <sfbpf_lex_destroy>:
   29704:	push	{r4, r5, r6, sl, fp, lr}
   29708:	add	fp, sp, #16
   2970c:	ldr	r0, [pc, #236]	; 29800 <sfbpf_lex_destroy+0xfc>
   29710:	mov	r5, #0
   29714:	mov	r4, #0
   29718:	ldr	r0, [pc, r0]
   2971c:	cmp	r0, #0
   29720:	beq	29790 <sfbpf_lex_destroy+0x8c>
   29724:	ldr	r1, [pc, #216]	; 29804 <sfbpf_lex_destroy+0x100>
   29728:	mov	r6, #0
   2972c:	ldr	r1, [pc, r1]
   29730:	ldr	r4, [r0, r1, lsl #2]
   29734:	cmp	r4, #0
   29738:	bne	29770 <sfbpf_lex_destroy+0x6c>
   2973c:	b	2978c <sfbpf_lex_destroy+0x88>
   29740:	mov	r0, r4
   29744:	bl	d74 <free@plt>
   29748:	ldr	r1, [pc, #184]	; 29808 <sfbpf_lex_destroy+0x104>
   2974c:	mov	r4, #0
   29750:	ldr	r1, [pc, r1]
   29754:	ldr	r0, [pc, #176]	; 2980c <sfbpf_lex_destroy+0x108>
   29758:	ldr	r0, [pc, r0]
   2975c:	cmp	r0, #0
   29760:	str	r4, [r0, r1, lsl #2]
   29764:	beq	29790 <sfbpf_lex_destroy+0x8c>
   29768:	cmp	r4, #0
   2976c:	beq	2978c <sfbpf_lex_destroy+0x88>
   29770:	str	r6, [r0, r1, lsl #2]
   29774:	ldr	r0, [r4, #20]
   29778:	cmp	r0, #0
   2977c:	beq	29740 <sfbpf_lex_destroy+0x3c>
   29780:	ldr	r0, [r4, #4]
   29784:	bl	d74 <free@plt>
   29788:	b	29740 <sfbpf_lex_destroy+0x3c>
   2978c:	mov	r4, r0
   29790:	mov	r0, r4
   29794:	bl	d74 <free@plt>
   29798:	ldr	r0, [pc, #112]	; 29810 <sfbpf_lex_destroy+0x10c>
   2979c:	add	r0, pc, r0
   297a0:	str	r5, [r0]
   297a4:	ldr	r0, [pc, #104]	; 29814 <sfbpf_lex_destroy+0x110>
   297a8:	add	r0, pc, r0
   297ac:	str	r5, [r0]
   297b0:	ldr	r0, [pc, #96]	; 29818 <sfbpf_lex_destroy+0x114>
   297b4:	add	r0, pc, r0
   297b8:	str	r5, [r0]
   297bc:	ldr	r0, [pc, #88]	; 2981c <sfbpf_lex_destroy+0x118>
   297c0:	add	r0, pc, r0
   297c4:	str	r5, [r0]
   297c8:	ldr	r0, [pc, #80]	; 29820 <sfbpf_lex_destroy+0x11c>
   297cc:	add	r0, pc, r0
   297d0:	strb	r5, [r0]
   297d4:	ldr	r0, [pc, #72]	; 29824 <sfbpf_lex_destroy+0x120>
   297d8:	add	r0, pc, r0
   297dc:	strb	r5, [r0]
   297e0:	ldr	r0, [pc, #64]	; 29828 <sfbpf_lex_destroy+0x124>
   297e4:	add	r0, pc, r0
   297e8:	str	r5, [r0]
   297ec:	ldr	r0, [pc, #56]	; 2982c <sfbpf_lex_destroy+0x128>
   297f0:	add	r0, pc, r0
   297f4:	str	r5, [r0]
   297f8:	mov	r0, #0
   297fc:	pop	{r4, r5, r6, sl, fp, pc}
   29800:	.word	0x0001e268
   29804:	.word	0x0001e258
   29808:	.word	0x0001e234
   2980c:	.word	0x0001e228
   29810:	.word	0x0001e1e8
   29814:	.word	0x0001e1d8
   29818:	.word	0x0001e1ec
   2981c:	.word	0x0001e1c8
   29820:	.word	0x0001e1ac
   29824:	.word	0x0001e1a4
   29828:	.word	0x0001e188
   2982c:	.word	0x0001e180

00029830 <sfbpf_realloc>:
   29830:	b	dbc <realloc@plt>

00029834 <sf_lex_init>:
   29834:	push	{r4, r5, r6, r7, fp, lr}
   29838:	add	fp, sp, #16
   2983c:	mov	r6, r0
   29840:	bl	e1c <strlen@plt>
   29844:	add	r4, r0, #2
   29848:	mov	r5, r0
   2984c:	mov	r0, r4
   29850:	bl	dec <malloc@plt>
   29854:	cmp	r0, #0
   29858:	beq	298b8 <sf_lex_init+0x84>
   2985c:	mov	r7, r0
   29860:	cmp	r5, #1
   29864:	blt	29878 <sf_lex_init+0x44>
   29868:	mov	r0, r7
   2986c:	mov	r1, r6
   29870:	mov	r2, r5
   29874:	bl	d98 <memcpy@plt>
   29878:	add	r0, r7, r5
   2987c:	mov	r1, #0
   29880:	strh	r1, [r0]
   29884:	mov	r0, r7
   29888:	mov	r1, r4
   2988c:	bl	29450 <sfbpf__scan_buffer>
   29890:	cmp	r0, #0
   29894:	movne	r1, #1
   29898:	strne	r1, [r0, #20]
   2989c:	ldrne	r1, [pc, #32]	; 298c4 <sf_lex_init+0x90>
   298a0:	addne	r1, pc, r1
   298a4:	strne	r0, [r1]
   298a8:	popne	{r4, r5, r6, r7, fp, pc}
   298ac:	ldr	r0, [pc, #24]	; 298cc <sf_lex_init+0x98>
   298b0:	add	r0, pc, r0
   298b4:	bl	28fa8 <yy_fatal_error>
   298b8:	ldr	r0, [pc, #8]	; 298c8 <sf_lex_init+0x94>
   298bc:	add	r0, pc, r0
   298c0:	bl	28fa8 <yy_fatal_error>
   298c4:	.word	0x0001e0fc
   298c8:	.word	0x0000ce0b
   298cc:	.word	0x0000ce40

000298d0 <sf_lex_cleanup>:
   298d0:	push	{r4, sl, fp, lr}
   298d4:	add	fp, sp, #8
   298d8:	ldr	r4, [pc, #124]	; 2995c <sf_lex_cleanup+0x8c>
   298dc:	ldr	r4, [pc, r4]
   298e0:	cmp	r4, #0
   298e4:	beq	29938 <sf_lex_cleanup+0x68>
   298e8:	ldr	r0, [pc, #112]	; 29960 <sf_lex_cleanup+0x90>
   298ec:	ldr	r0, [pc, r0]
   298f0:	cmp	r0, #0
   298f4:	beq	2994c <sf_lex_cleanup+0x7c>
   298f8:	ldr	r1, [pc, #100]	; 29964 <sf_lex_cleanup+0x94>
   298fc:	ldr	r1, [pc, r1]
   29900:	ldr	r1, [r0, r1, lsl #2]
   29904:	cmp	r1, r4
   29908:	bne	2991c <sf_lex_cleanup+0x4c>
   2990c:	ldr	r1, [pc, #84]	; 29968 <sf_lex_cleanup+0x98>
   29910:	mov	r2, #0
   29914:	ldr	r1, [pc, r1]
   29918:	str	r2, [r0, r1, lsl #2]
   2991c:	ldr	r0, [r4, #20]
   29920:	cmp	r0, #0
   29924:	beq	29930 <sf_lex_cleanup+0x60>
   29928:	ldr	r0, [r4, #4]
   2992c:	bl	d74 <free@plt>
   29930:	mov	r0, r4
   29934:	bl	d74 <free@plt>
   29938:	ldr	r0, [pc, #44]	; 2996c <sf_lex_cleanup+0x9c>
   2993c:	mov	r1, #0
   29940:	add	r0, pc, r0
   29944:	str	r1, [r0]
   29948:	pop	{r4, sl, fp, pc}
   2994c:	mov	r1, #0
   29950:	cmp	r1, r4
   29954:	bne	2991c <sf_lex_cleanup+0x4c>
   29958:	b	2990c <sf_lex_cleanup+0x3c>
   2995c:	.word	0x0001e0c0
   29960:	.word	0x0001e094
   29964:	.word	0x0001e088
   29968:	.word	0x0001e070
   2996c:	.word	0x0001e05c

Disassembly of section .fini:

00029970 <_fini>:
   29970:	push	{r3, lr}
   29974:	pop	{r3, pc}
