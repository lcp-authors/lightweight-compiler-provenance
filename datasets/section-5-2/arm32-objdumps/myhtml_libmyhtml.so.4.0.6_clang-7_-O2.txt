
../repos/myhtml/libmyhtml.so.4.0.6:     file format elf32-littlearm


Disassembly of section .init:

00010d84 <.init>:
   10d84:	push	{r3, lr}
   10d88:	bl	11ce0 <mythread_init@plt+0xc>
   10d8c:	pop	{r3, pc}

Disassembly of section .plt:

00010d90 <pthread_mutex_unlock@plt-0x14>:
   10d90:	push	{lr}		; (str lr, [sp, #-4]!)
   10d94:	ldr	lr, [pc, #4]	; 10da0 <pthread_mutex_unlock@plt-0x4>
   10d98:	add	lr, pc, lr
   10d9c:	ldr	pc, [lr, #8]!
   10da0:	andseq	sl, r0, r0, ror #4

00010da4 <pthread_mutex_unlock@plt>:
   10da4:	add	ip, pc, #1048576	; 0x100000
   10da8:	add	ip, ip, #40960	; 0xa000
   10dac:	ldr	pc, [ip, #608]!	; 0x260

00010db0 <mycore_realloc@plt>:
   10db0:	add	ip, pc, #1048576	; 0x100000
   10db4:	add	ip, ip, #40960	; 0xa000
   10db8:	ldr	pc, [ip, #600]!	; 0x258

00010dbc <calloc@plt>:
   10dbc:	add	ip, pc, #1048576	; 0x100000
   10dc0:	add	ip, ip, #40960	; 0xa000
   10dc4:	ldr	pc, [ip, #592]!	; 0x250

00010dc8 <mycore_strcmp@plt>:
   10dc8:	add	ip, pc, #1048576	; 0x100000
   10dcc:	add	ip, ip, #40960	; 0xa000
   10dd0:	ldr	pc, [ip, #584]!	; 0x248

00010dd4 <myhtml_tree_node_insert_root@plt>:
   10dd4:	add	ip, pc, #1048576	; 0x100000
   10dd8:	add	ip, ip, #40960	; 0xa000
   10ddc:	ldr	pc, [ip, #576]!	; 0x240

00010de0 <mythread_queue_list_entry_delete@plt>:
   10de0:	add	ip, pc, #1048576	; 0x100000
   10de4:	add	ip, ip, #40960	; 0xa000
   10de8:	ldr	pc, [ip, #568]!	; 0x238

00010dec <myencoding_string_append_chunk@plt>:
   10dec:	add	ip, pc, #1048576	; 0x100000
   10df0:	add	ip, ip, #40960	; 0xa000
   10df4:	ldr	pc, [ip, #560]!	; 0x230

00010df8 <myhtml_token_release_and_check_doctype_attributes@plt>:
   10df8:	add	ip, pc, #1048576	; 0x100000
   10dfc:	add	ip, ip, #40960	; 0xa000
   10e00:	ldr	pc, [ip, #552]!	; 0x228

00010e04 <myencoding_detect_unicode@plt>:
   10e04:	add	ip, pc, #1048576	; 0x100000
   10e08:	add	ip, ip, #40960	; 0xa000
   10e0c:	ldr	pc, [ip, #544]!	; 0x220

00010e10 <myhtml_tree_element_in_scope_by_node@plt>:
   10e10:	add	ip, pc, #1048576	; 0x100000
   10e14:	add	ip, ip, #40960	; 0xa000
   10e18:	ldr	pc, [ip, #536]!	; 0x218

00010e1c <mythread_nanosleep_clean@plt>:
   10e1c:	add	ip, pc, #1048576	; 0x100000
   10e20:	add	ip, ip, #40960	; 0xa000
   10e24:	ldr	pc, [ip, #528]!	; 0x210

00010e28 <myhtml_tree_node_insert_html_element@plt>:
   10e28:	add	ip, pc, #1048576	; 0x100000
   10e2c:	add	ip, ip, #40960	; 0xa000
   10e30:	ldr	pc, [ip, #520]!	; 0x208

00010e34 <mcobject_async_init@plt>:
   10e34:	add	ip, pc, #1048576	; 0x100000
   10e38:	add	ip, ip, #40960	; 0xa000
   10e3c:	ldr	pc, [ip, #512]!	; 0x200

00010e40 <myhtml_tokenizer_fragment_init@plt>:
   10e40:	add	ip, pc, #1048576	; 0x100000
   10e44:	add	ip, ip, #40960	; 0xa000
   10e48:	ldr	pc, [ip, #504]!	; 0x1f8

00010e4c <mythread_nanosleep_create@plt>:
   10e4c:	add	ip, pc, #1048576	; 0x100000
   10e50:	add	ip, ip, #40960	; 0xa000
   10e54:	ldr	pc, [ip, #496]!	; 0x1f0

00010e58 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>:
   10e58:	add	ip, pc, #1048576	; 0x100000
   10e5c:	add	ip, ip, #40960	; 0xa000
   10e60:	ldr	pc, [ip, #488]!	; 0x1e8

00010e64 <myhtml_tokenizer_state_init@plt>:
   10e64:	add	ip, pc, #1048576	; 0x100000
   10e68:	add	ip, ip, #40960	; 0xa000
   10e6c:	ldr	pc, [ip, #480]!	; 0x1e0

00010e70 <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>:
   10e70:	add	ip, pc, #1048576	; 0x100000
   10e74:	add	ip, ip, #40960	; 0xa000
   10e78:	ldr	pc, [ip, #472]!	; 0x1d8

00010e7c <mycore_ustrcasecmp_without_checks_by_secondary@plt>:
   10e7c:	add	ip, pc, #1048576	; 0x100000
   10e80:	add	ip, ip, #40960	; 0xa000
   10e84:	ldr	pc, [ip, #464]!	; 0x1d0

00010e88 <myhtml_tree_wait_for_last_done_token@plt>:
   10e88:	add	ip, pc, #1048576	; 0x100000
   10e8c:	add	ip, ip, #40960	; 0xa000
   10e90:	ldr	pc, [ip, #456]!	; 0x1c8

00010e94 <mythread_queue_get_prev_node@plt>:
   10e94:	add	ip, pc, #1048576	; 0x100000
   10e98:	add	ip, ip, #40960	; 0xa000
   10e9c:	ldr	pc, [ip, #448]!	; 0x1c0

00010ea0 <setbuf@plt>:
   10ea0:	add	ip, pc, #1048576	; 0x100000
   10ea4:	add	ip, ip, #40960	; 0xa000
   10ea8:	ldr	pc, [ip, #440]!	; 0x1b8

00010eac <myhtml_insertion_mode_in_body_other_end_tag@plt>:
   10eac:	add	ip, pc, #1048576	; 0x100000
   10eb0:	add	ip, ip, #40960	; 0xa000
   10eb4:	ldr	pc, [ip, #432]!	; 0x1b0

00010eb8 <myhtml_stream_buffer_destroy@plt>:
   10eb8:	add	ip, pc, #1048576	; 0x100000
   10ebc:	add	ip, ip, #40960	; 0xa000
   10ec0:	ldr	pc, [ip, #424]!	; 0x1a8

00010ec4 <myhtml_token_attr_match_case@plt>:
   10ec4:	add	ip, pc, #1048576	; 0x100000
   10ec8:	add	ip, ip, #40960	; 0xa000
   10ecc:	ldr	pc, [ip, #416]!	; 0x1a0

00010ed0 <__cxa_finalize@plt>:
   10ed0:	add	ip, pc, #1048576	; 0x100000
   10ed4:	add	ip, ip, #40960	; 0xa000
   10ed8:	ldr	pc, [ip, #408]!	; 0x198

00010edc <mcobject_async_create@plt>:
   10edc:	add	ip, pc, #1048576	; 0x100000
   10ee0:	add	ip, ip, #40960	; 0xa000
   10ee4:	ldr	pc, [ip, #400]!	; 0x190

00010ee8 <mythread_queue_clean@plt>:
   10ee8:	add	ip, pc, #1048576	; 0x100000
   10eec:	add	ip, ip, #40960	; 0xa000
   10ef0:	ldr	pc, [ip, #392]!	; 0x188

00010ef4 <mcsync_mutex_destroy@plt>:
   10ef4:	add	ip, pc, #1048576	; 0x100000
   10ef8:	add	ip, ip, #40960	; 0xa000
   10efc:	ldr	pc, [ip, #384]!	; 0x180

00010f00 <myhtml_parser_worker@plt>:
   10f00:	add	ip, pc, #1048576	; 0x100000
   10f04:	add	ip, ip, #40960	; 0xa000
   10f08:	ldr	pc, [ip, #376]!	; 0x178

00010f0c <mythread_thread_create@plt>:
   10f0c:	add	ip, pc, #1048576	; 0x100000
   10f10:	add	ip, ip, #40960	; 0xa000
   10f14:	ldr	pc, [ip, #368]!	; 0x170

00010f18 <mcsync_create@plt>:
   10f18:	add	ip, pc, #1048576	; 0x100000
   10f1c:	add	ip, ip, #40960	; 0xa000
   10f20:	ldr	pc, [ip, #360]!	; 0x168

00010f24 <fopen@plt>:
   10f24:	add	ip, pc, #1048576	; 0x100000
   10f28:	add	ip, ip, #40960	; 0xa000
   10f2c:	ldr	pc, [ip, #352]!	; 0x160

00010f30 <mcobject_destroy@plt>:
   10f30:	add	ip, pc, #1048576	; 0x100000
   10f34:	add	ip, ip, #40960	; 0xa000
   10f38:	ldr	pc, [ip, #344]!	; 0x158

00010f3c <pthread_attr_destroy@plt>:
   10f3c:	add	ip, pc, #1048576	; 0x100000
   10f40:	add	ip, ip, #40960	; 0xa000
   10f44:	ldr	pc, [ip, #336]!	; 0x150

00010f48 <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>:
   10f48:	add	ip, pc, #1048576	; 0x100000
   10f4c:	add	ip, ip, #40960	; 0xa000
   10f50:	ldr	pc, [ip, #328]!	; 0x148

00010f54 <pthread_mutex_destroy@plt>:
   10f54:	add	ip, pc, #1048576	; 0x100000
   10f58:	add	ip, ip, #40960	; 0xa000
   10f5c:	ldr	pc, [ip, #320]!	; 0x140

00010f60 <fflush@plt>:
   10f60:	add	ip, pc, #1048576	; 0x100000
   10f64:	add	ip, ip, #40960	; 0xa000
   10f68:	ldr	pc, [ip, #312]!	; 0x138

00010f6c <mythread_create@plt>:
   10f6c:	add	ip, pc, #1048576	; 0x100000
   10f70:	add	ip, ip, #40960	; 0xa000
   10f74:	ldr	pc, [ip, #304]!	; 0x130

00010f78 <myhtml_insertion_mode_in_foreign_content@plt>:
   10f78:	add	ip, pc, #1048576	; 0x100000
   10f7c:	add	ip, ip, #40960	; 0xa000
   10f80:	ldr	pc, [ip, #296]!	; 0x128

00010f84 <myhtml_tree_generate_all_implied_end_tags@plt>:
   10f84:	add	ip, pc, #1048576	; 0x100000
   10f88:	add	ip, ip, #40960	; 0xa000
   10f8c:	ldr	pc, [ip, #288]!	; 0x120

00010f90 <myencoding_string_append_lowercase_ascii@plt>:
   10f90:	add	ip, pc, #1048576	; 0x100000
   10f94:	add	ip, ip, #40960	; 0xa000
   10f98:	ldr	pc, [ip, #280]!	; 0x118

00010f9c <myhread_increase_id_by_entry_id@plt>:
   10f9c:	add	ip, pc, #1048576	; 0x100000
   10fa0:	add	ip, ip, #40960	; 0xa000
   10fa4:	ldr	pc, [ip, #272]!	; 0x110

00010fa8 <myhtml_tree_incomming_buffer_make_data@plt>:
   10fa8:	add	ip, pc, #1048576	; 0x100000
   10fac:	add	ip, ip, #40960	; 0xa000
   10fb0:	ldr	pc, [ip, #264]!	; 0x108

00010fb4 <memmove@plt>:
   10fb4:	add	ip, pc, #1048576	; 0x100000
   10fb8:	add	ip, ip, #40960	; 0xa000
   10fbc:	ldr	pc, [ip, #256]!	; 0x100

00010fc0 <mythread_thread_attr_init@plt>:
   10fc0:	add	ip, pc, #1048576	; 0x100000
   10fc4:	add	ip, ip, #40960	; 0xa000
   10fc8:	ldr	pc, [ip, #248]!	; 0xf8

00010fcc <myhtml_rules_tree_dispatcher@plt>:
   10fcc:	add	ip, pc, #1048576	; 0x100000
   10fd0:	add	ip, ip, #40960	; 0xa000
   10fd4:	ldr	pc, [ip, #240]!	; 0xf0

00010fd8 <myhtml_get_nodes_by_attribute_key_recursion@plt>:
   10fd8:	add	ip, pc, #1048576	; 0x100000
   10fdc:	add	ip, ip, #40960	; 0xa000
   10fe0:	ldr	pc, [ip, #232]!	; 0xe8

00010fe4 <free@plt>:
   10fe4:	add	ip, pc, #1048576	; 0x100000
   10fe8:	add	ip, ip, #40960	; 0xa000
   10fec:	ldr	pc, [ip, #224]!	; 0xe0

00010ff0 <mythread_function_see_opt@plt>:
   10ff0:	add	ip, pc, #1048576	; 0x100000
   10ff4:	add	ip, ip, #40960	; 0xa000
   10ff8:	ldr	pc, [ip, #216]!	; 0xd8

00010ffc <myhtml_insertion_fix_split_for_text_begin_ws@plt>:
   10ffc:	add	ip, pc, #1048576	; 0x100000
   11000:	add	ip, ip, #40960	; 0xa000
   11004:	ldr	pc, [ip, #208]!	; 0xd0

00011008 <mcsync_mutex_unlock@plt>:
   11008:	add	ip, pc, #1048576	; 0x100000
   1100c:	add	ip, ip, #40960	; 0xa000
   11010:	ldr	pc, [ip, #200]!	; 0xc8

00011014 <pthread_mutex_lock@plt>:
   11014:	add	ip, pc, #1048576	; 0x100000
   11018:	add	ip, ip, #40960	; 0xa000
   1101c:	ldr	pc, [ip, #192]!	; 0xc0

00011020 <mycore_calloc@plt>:
   11020:	add	ip, pc, #1048576	; 0x100000
   11024:	add	ip, ip, #40960	; 0xa000
   11028:	ldr	pc, [ip, #184]!	; 0xb8

0001102c <nanosleep@plt>:
   1102c:	add	ip, pc, #1048576	; 0x100000
   11030:	add	ip, ip, #40960	; 0xa000
   11034:	ldr	pc, [ip, #176]!	; 0xb0

00011038 <myhtml_token_node_clone@plt>:
   11038:	add	ip, pc, #1048576	; 0x100000
   1103c:	add	ip, ip, #40960	; 0xa000
   11040:	ldr	pc, [ip, #168]!	; 0xa8

00011044 <ferror@plt>:
   11044:	add	ip, pc, #1048576	; 0x100000
   11048:	add	ip, ip, #40960	; 0xa000
   1104c:	ldr	pc, [ip, #160]!	; 0xa0

00011050 <memcpy@plt>:
   11050:	add	ip, pc, #1048576	; 0x100000
   11054:	add	ip, ip, #40960	; 0xa000
   11058:	ldr	pc, [ip, #152]!	; 0x98

0001105c <myhtml_token_adjust_mathml_attributes@plt>:
   1105c:	add	ip, pc, #1048576	; 0x100000
   11060:	add	ip, ip, #40960	; 0xa000
   11064:	ldr	pc, [ip, #144]!	; 0x90

00011068 <mcobject_free@plt>:
   11068:	add	ip, pc, #1048576	; 0x100000
   1106c:	add	ip, ip, #40960	; 0xa000
   11070:	ldr	pc, [ip, #136]!	; 0x88

00011074 <myhtml_tree_node_insert_text@plt>:
   11074:	add	ip, pc, #1048576	; 0x100000
   11078:	add	ip, ip, #40960	; 0xa000
   1107c:	ldr	pc, [ip, #128]!	; 0x80

00011080 <myhtml_tag_set_category@plt>:
   11080:	add	ip, pc, #1048576	; 0x100000
   11084:	add	ip, ip, #40960	; 0xa000
   11088:	ldr	pc, [ip, #120]!	; 0x78

0001108c <mcsync_spin_destroy@plt>:
   1108c:	add	ip, pc, #1048576	; 0x100000
   11090:	add	ip, ip, #40960	; 0xa000
   11094:	ldr	pc, [ip, #112]!	; 0x70

00011098 <myhtml_tree_template_insertion_append@plt>:
   11098:	add	ip, pc, #1048576	; 0x100000
   1109c:	add	ip, ip, #40960	; 0xa000
   110a0:	ldr	pc, [ip, #104]!	; 0x68

000110a4 <mchar_async_realloc@plt>:
   110a4:	add	ip, pc, #1048576	; 0x100000
   110a8:	add	ip, ip, #40960	; 0xa000
   110ac:	ldr	pc, [ip, #96]!	; 0x60

000110b0 <pthread_mutex_init@plt>:
   110b0:	add	ip, pc, #1048576	; 0x100000
   110b4:	add	ip, ip, #40960	; 0xa000
   110b8:	ldr	pc, [ip, #88]!	; 0x58

000110bc <myhtml_tokenizer_state_bogus_comment@plt>:
   110bc:	add	ip, pc, #1048576	; 0x100000
   110c0:	add	ip, ip, #40960	; 0xa000
   110c4:	ldr	pc, [ip, #80]!	; 0x50

000110c8 <myhtml_tree_node_create@plt>:
   110c8:	add	ip, pc, #1048576	; 0x100000
   110cc:	add	ip, ip, #40960	; 0xa000
   110d0:	ldr	pc, [ip, #72]!	; 0x48

000110d4 <myhtml_tree_node_delete_recursive@plt>:
   110d4:	add	ip, pc, #1048576	; 0x100000
   110d8:	add	ip, ip, #40960	; 0xa000
   110dc:	ldr	pc, [ip, #64]!	; 0x40

000110e0 <myhtml_tag_static_get_by_id@plt>:
   110e0:	add	ip, pc, #1048576	; 0x100000
   110e4:	add	ip, ip, #40960	; 0xa000
   110e8:	ldr	pc, [ip, #56]!	; 0x38

000110ec <myhtml_tag_add@plt>:
   110ec:	add	ip, pc, #1048576	; 0x100000
   110f0:	add	ip, ip, #40960	; 0xa000
   110f4:	ldr	pc, [ip, #48]!	; 0x30

000110f8 <mcobject_create@plt>:
   110f8:	add	ip, pc, #1048576	; 0x100000
   110fc:	add	ip, ip, #40960	; 0xa000
   11100:	ldr	pc, [ip, #40]!	; 0x28

00011104 <myhtml_queue_add@plt>:
   11104:	add	ip, pc, #1048576	; 0x100000
   11108:	add	ip, ip, #40960	; 0xa000
   1110c:	ldr	pc, [ip, #32]!

00011110 <pthread_mutex_trylock@plt>:
   11110:	add	ip, pc, #1048576	; 0x100000
   11114:	add	ip, ip, #40960	; 0xa000
   11118:	ldr	pc, [ip, #24]!

0001111c <myhtml_tree_is_mathml_integration_point@plt>:
   1111c:	add	ip, pc, #1048576	; 0x100000
   11120:	add	ip, ip, #40960	; 0xa000
   11124:	ldr	pc, [ip, #16]!

00011128 <mcobject_async_free@plt>:
   11128:	add	ip, pc, #1048576	; 0x100000
   1112c:	add	ip, ip, #40960	; 0xa000
   11130:	ldr	pc, [ip, #8]!

00011134 <myhtml_insertion_mode_in_head@plt>:
   11134:	add	ip, pc, #1048576	; 0x100000
   11138:	add	ip, ip, #40960	; 0xa000
   1113c:	ldr	pc, [ip, #0]!

00011140 <ftell@plt>:
   11140:	add	ip, pc, #1048576	; 0x100000
   11144:	add	ip, ip, #36864	; 0x9000
   11148:	ldr	pc, [ip, #4088]!	; 0xff8

0001114c <memcmp@plt>:
   1114c:	add	ip, pc, #1048576	; 0x100000
   11150:	add	ip, ip, #36864	; 0x9000
   11154:	ldr	pc, [ip, #4080]!	; 0xff0

00011158 <mycore_incoming_buffer_add@plt>:
   11158:	add	ip, pc, #1048576	; 0x100000
   1115c:	add	ip, ip, #36864	; 0x9000
   11160:	ldr	pc, [ip, #4072]!	; 0xfe8

00011164 <mythread_nanosleep_sleep@plt>:
   11164:	add	ip, pc, #1048576	; 0x100000
   11168:	add	ip, ip, #36864	; 0x9000
   1116c:	ldr	pc, [ip, #4064]!	; 0xfe0

00011170 <mctree_destroy@plt>:
   11170:	add	ip, pc, #1048576	; 0x100000
   11174:	add	ip, ip, #36864	; 0x9000
   11178:	ldr	pc, [ip, #4056]!	; 0xfd8

0001117c <myhtml_tokenizer_chunk@plt>:
   1117c:	add	ip, pc, #1048576	; 0x100000
   11180:	add	ip, ip, #36864	; 0x9000
   11184:	ldr	pc, [ip, #4048]!	; 0xfd0

00011188 <myhtml_tree_active_formatting_append@plt>:
   11188:	add	ip, pc, #1048576	; 0x100000
   1118c:	add	ip, ip, #36864	; 0x9000
   11190:	ldr	pc, [ip, #4040]!	; 0xfc8

00011194 <mythread_suspend@plt>:
   11194:	add	ip, pc, #1048576	; 0x100000
   11198:	add	ip, ip, #36864	; 0x9000
   1119c:	ldr	pc, [ip, #4032]!	; 0xfc0

000111a0 <myhtml_tokenizer_state_destroy@plt>:
   111a0:	add	ip, pc, #1048576	; 0x100000
   111a4:	add	ip, ip, #36864	; 0x9000
   111a8:	ldr	pc, [ip, #4024]!	; 0xfb8

000111ac <mycore_incoming_buffer_find_by_position@plt>:
   111ac:	add	ip, pc, #1048576	; 0x100000
   111b0:	add	ip, ip, #36864	; 0x9000
   111b4:	ldr	pc, [ip, #4016]!	; 0xfb0

000111b8 <mythread_queue_list_destroy@plt>:
   111b8:	add	ip, pc, #1048576	; 0x100000
   111bc:	add	ip, ip, #36864	; 0x9000
   111c0:	ldr	pc, [ip, #4008]!	; 0xfa8

000111c4 <myhtml_tree_open_elements_pop_until_by_node@plt>:
   111c4:	add	ip, pc, #1048576	; 0x100000
   111c8:	add	ip, ip, #36864	; 0x9000
   111cc:	ldr	pc, [ip, #4000]!	; 0xfa0

000111d0 <myhtml_tokenizer_begin@plt>:
   111d0:	add	ip, pc, #1048576	; 0x100000
   111d4:	add	ip, ip, #36864	; 0x9000
   111d8:	ldr	pc, [ip, #3992]!	; 0xf98

000111dc <mchar_async_create@plt>:
   111dc:	add	ip, pc, #1048576	; 0x100000
   111e0:	add	ip, ip, #36864	; 0x9000
   111e4:	ldr	pc, [ip, #3984]!	; 0xf90

000111e8 <mycore_string_copy@plt>:
   111e8:	add	ip, pc, #1048576	; 0x100000
   111ec:	add	ip, ip, #36864	; 0x9000
   111f0:	ldr	pc, [ip, #3976]!	; 0xf88

000111f4 <mythread_queue_list_entry_push@plt>:
   111f4:	add	ip, pc, #1048576	; 0x100000
   111f8:	add	ip, ip, #36864	; 0x9000
   111fc:	ldr	pc, [ip, #3968]!	; 0xf80

00011200 <mythread_queue_get_current_node@plt>:
   11200:	add	ip, pc, #1048576	; 0x100000
   11204:	add	ip, ip, #36864	; 0x9000
   11208:	ldr	pc, [ip, #3960]!	; 0xf78

0001120c <myhtml_tree_open_elements_pop@plt>:
   1120c:	add	ip, pc, #1048576	; 0x100000
   11210:	add	ip, ip, #36864	; 0x9000
   11214:	ldr	pc, [ip, #3952]!	; 0xf70

00011218 <mcsync_destroy@plt>:
   11218:	add	ip, pc, #1048576	; 0x100000
   1121c:	add	ip, ip, #36864	; 0x9000
   11220:	ldr	pc, [ip, #3944]!	; 0xf68

00011224 <myencoding_result_clean@plt>:
   11224:	add	ip, pc, #1048576	; 0x100000
   11228:	add	ip, ip, #36864	; 0x9000
   1122c:	ldr	pc, [ip, #3936]!	; 0xf60

00011230 <myhtml_string_append_with_preprocessing@plt>:
   11230:	add	ip, pc, #1048576	; 0x100000
   11234:	add	ip, ip, #36864	; 0x9000
   11238:	ldr	pc, [ip, #3928]!	; 0xf58

0001123c <myhtml_token_adjust_svg_attributes@plt>:
   1123c:	add	ip, pc, #1048576	; 0x100000
   11240:	add	ip, ip, #36864	; 0x9000
   11244:	ldr	pc, [ip, #3920]!	; 0xf50

00011248 <realloc@plt>:
   11248:	add	ip, pc, #1048576	; 0x100000
   1124c:	add	ip, ip, #36864	; 0x9000
   11250:	ldr	pc, [ip, #3912]!	; 0xf48

00011254 <myhtml_tree_is_html_integration_point@plt>:
   11254:	add	ip, pc, #1048576	; 0x100000
   11258:	add	ip, ip, #36864	; 0x9000
   1125c:	ldr	pc, [ip, #3904]!	; 0xf40

00011260 <myhtml_tokenizer_calc_current_namespace@plt>:
   11260:	add	ip, pc, #1048576	; 0x100000
   11264:	add	ip, ip, #36864	; 0x9000
   11268:	ldr	pc, [ip, #3896]!	; 0xf38

0001126c <myhtml_tree_open_elements_remove@plt>:
   1126c:	add	ip, pc, #1048576	; 0x100000
   11270:	add	ip, ip, #36864	; 0x9000
   11274:	ldr	pc, [ip, #3888]!	; 0xf30

00011278 <mcsimple_clean@plt>:
   11278:	add	ip, pc, #1048576	; 0x100000
   1127c:	add	ip, ip, #36864	; 0x9000
   11280:	ldr	pc, [ip, #3880]!	; 0xf28

00011284 <myhtml_tree_node_insert_comment@plt>:
   11284:	add	ip, pc, #1048576	; 0x100000
   11288:	add	ip, ip, #36864	; 0x9000
   1128c:	ldr	pc, [ip, #3872]!	; 0xf20

00011290 <myhtml_tokenizer_end@plt>:
   11290:	add	ip, pc, #1048576	; 0x100000
   11294:	add	ip, ip, #36864	; 0x9000
   11298:	ldr	pc, [ip, #3864]!	; 0xf18

0001129c <mycore_utils_avl_tree_list_all_nodes@plt>:
   1129c:	add	ip, pc, #1048576	; 0x100000
   112a0:	add	ip, ip, #36864	; 0x9000
   112a4:	ldr	pc, [ip, #3856]!	; 0xf10

000112a8 <mchar_async_node_add@plt>:
   112a8:	add	ip, pc, #1048576	; 0x100000
   112ac:	add	ip, ip, #36864	; 0x9000
   112b0:	ldr	pc, [ip, #3848]!	; 0xf08

000112b4 <mycore_strncasecmp@plt>:
   112b4:	add	ip, pc, #1048576	; 0x100000
   112b8:	add	ip, ip, #36864	; 0x9000
   112bc:	ldr	pc, [ip, #3840]!	; 0xf00

000112c0 <mcsimple_create@plt>:
   112c0:	add	ip, pc, #1048576	; 0x100000
   112c4:	add	ip, ip, #36864	; 0x9000
   112c8:	ldr	pc, [ip, #3832]!	; 0xef8

000112cc <mythread_queue_destroy@plt>:
   112cc:	add	ip, pc, #1048576	; 0x100000
   112d0:	add	ip, ip, #36864	; 0x9000
   112d4:	ldr	pc, [ip, #3824]!	; 0xef0

000112d8 <mycore_string_raw_copy@plt>:
   112d8:	add	ip, pc, #1048576	; 0x100000
   112dc:	add	ip, ip, #36864	; 0x9000
   112e0:	ldr	pc, [ip, #3816]!	; 0xee8

000112e4 <mycore_string_stay_only_whitespace@plt>:
   112e4:	add	ip, pc, #1048576	; 0x100000
   112e8:	add	ip, ip, #36864	; 0x9000
   112ec:	ldr	pc, [ip, #3808]!	; 0xee0

000112f0 <mctree_clean@plt>:
   112f0:	add	ip, pc, #1048576	; 0x100000
   112f4:	add	ip, ip, #36864	; 0x9000
   112f8:	ldr	pc, [ip, #3800]!	; 0xed8

000112fc <myhtml_token_set_replacement_character_for_null_token@plt>:
   112fc:	add	ip, pc, #1048576	; 0x100000
   11300:	add	ip, ip, #36864	; 0x9000
   11304:	ldr	pc, [ip, #3792]!	; 0xed0

00011308 <fwrite@plt>:
   11308:	add	ip, pc, #1048576	; 0x100000
   1130c:	add	ip, ip, #36864	; 0x9000
   11310:	ldr	pc, [ip, #3784]!	; 0xec8

00011314 <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>:
   11314:	add	ip, pc, #1048576	; 0x100000
   11318:	add	ip, ip, #36864	; 0x9000
   1131c:	ldr	pc, [ip, #3776]!	; 0xec0

00011320 <myhtml_tree_node_insert_by_mode@plt>:
   11320:	add	ip, pc, #1048576	; 0x100000
   11324:	add	ip, ip, #36864	; 0x9000
   11328:	ldr	pc, [ip, #3768]!	; 0xeb8

0001132c <myhtml_tree_node_insert_after@plt>:
   1132c:	add	ip, pc, #1048576	; 0x100000
   11330:	add	ip, ip, #36864	; 0x9000
   11334:	ldr	pc, [ip, #3760]!	; 0xeb0

00011338 <mycore_string_append_with_replacement_null_characters@plt>:
   11338:	add	ip, pc, #1048576	; 0x100000
   1133c:	add	ip, ip, #36864	; 0x9000
   11340:	ldr	pc, [ip, #3752]!	; 0xea8

00011344 <myhtml_tree_clear_stack_back_table_body_context@plt>:
   11344:	add	ip, pc, #1048576	; 0x100000
   11348:	add	ip, ip, #36864	; 0x9000
   1134c:	ldr	pc, [ip, #3744]!	; 0xea0

00011350 <mcsimple_destroy@plt>:
   11350:	add	ip, pc, #1048576	; 0x100000
   11354:	add	ip, ip, #36864	; 0x9000
   11358:	ldr	pc, [ip, #3736]!	; 0xe98

0001135c <__mtree_insert_to_start@plt>:
   1135c:	add	ip, pc, #1048576	; 0x100000
   11360:	add	ip, ip, #36864	; 0x9000
   11364:	ldr	pc, [ip, #3728]!	; 0xe90

00011368 <fread@plt>:
   11368:	add	ip, pc, #1048576	; 0x100000
   1136c:	add	ip, ip, #36864	; 0x9000
   11370:	ldr	pc, [ip, #3720]!	; 0xe88

00011374 <pthread_create@plt>:
   11374:	add	ip, pc, #1048576	; 0x100000
   11378:	add	ip, ip, #36864	; 0x9000
   1137c:	ldr	pc, [ip, #3712]!	; 0xe80

00011380 <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>:
   11380:	add	ip, pc, #1048576	; 0x100000
   11384:	add	ip, ip, #36864	; 0x9000
   11388:	ldr	pc, [ip, #3704]!	; 0xe78

0001138c <myhtml_tree_node_insert_before@plt>:
   1138c:	add	ip, pc, #1048576	; 0x100000
   11390:	add	ip, ip, #36864	; 0x9000
   11394:	ldr	pc, [ip, #3696]!	; 0xe70

00011398 <myhtml_parser_token_data_to_string_charef@plt>:
   11398:	add	ip, pc, #1048576	; 0x100000
   1139c:	add	ip, ip, #36864	; 0x9000
   113a0:	ldr	pc, [ip, #3688]!	; 0xe68

000113a4 <mythread_thread_attr_clean@plt>:
   113a4:	add	ip, pc, #1048576	; 0x100000
   113a8:	add	ip, ip, #36864	; 0x9000
   113ac:	ldr	pc, [ip, #3680]!	; 0xe60

000113b0 <myhtml_tree_clear_stack_back_table_row_context@plt>:
   113b0:	add	ip, pc, #1048576	; 0x100000
   113b4:	add	ip, ip, #36864	; 0x9000
   113b8:	ldr	pc, [ip, #3672]!	; 0xe58

000113bc <myhtml_tokenizer_chunk_process@plt>:
   113bc:	add	ip, pc, #1048576	; 0x100000
   113c0:	add	ip, ip, #36864	; 0x9000
   113c4:	ldr	pc, [ip, #3664]!	; 0xe50

000113c8 <myhtml_tree_tags_close_p@plt>:
   113c8:	add	ip, pc, #1048576	; 0x100000
   113cc:	add	ip, ip, #36864	; 0x9000
   113d0:	ldr	pc, [ip, #3656]!	; 0xe48

000113d4 <mcsimple_init@plt>:
   113d4:	add	ip, pc, #1048576	; 0x100000
   113d8:	add	ip, ip, #36864	; 0x9000
   113dc:	ldr	pc, [ip, #3648]!	; 0xe40

000113e0 <myencoding_string_append@plt>:
   113e0:	add	ip, pc, #1048576	; 0x100000
   113e4:	add	ip, ip, #36864	; 0x9000
   113e8:	ldr	pc, [ip, #3640]!	; 0xe38

000113ec <myhtml_stream_buffer_clean@plt>:
   113ec:	add	ip, pc, #1048576	; 0x100000
   113f0:	add	ip, ip, #36864	; 0x9000
   113f4:	ldr	pc, [ip, #3632]!	; 0xe30

000113f8 <mycore_utils_avl_tree_rotate_for_delete@plt>:
   113f8:	add	ip, pc, #1048576	; 0x100000
   113fc:	add	ip, ip, #36864	; 0x9000
   11400:	ldr	pc, [ip, #3624]!	; 0xe28

00011404 <myhtml_token_merged_two_token_string@plt>:
   11404:	add	ip, pc, #1048576	; 0x100000
   11408:	add	ip, ip, #36864	; 0x9000
   1140c:	ldr	pc, [ip, #3616]!	; 0xe20

00011410 <myhtml_attribute_value@plt>:
   11410:	add	ip, pc, #1048576	; 0x100000
   11414:	add	ip, ip, #36864	; 0x9000
   11418:	ldr	pc, [ip, #3608]!	; 0xe18

0001141c <myhtml_token_strict_doctype_by_token@plt>:
   1141c:	add	ip, pc, #1048576	; 0x100000
   11420:	add	ip, ip, #36864	; 0x9000
   11424:	ldr	pc, [ip, #3600]!	; 0xe10

00011428 <mchar_async_init@plt>:
   11428:	add	ip, pc, #1048576	; 0x100000
   1142c:	add	ip, ip, #36864	; 0x9000
   11430:	ldr	pc, [ip, #3592]!	; 0xe08

00011434 <mycore_string_crop_whitespace_from_begin@plt>:
   11434:	add	ip, pc, #1048576	; 0x100000
   11438:	add	ip, ip, #36864	; 0x9000
   1143c:	ldr	pc, [ip, #3584]!	; 0xe00

00011440 <mythread_resume@plt>:
   11440:	add	ip, pc, #1048576	; 0x100000
   11444:	add	ip, ip, #36864	; 0x9000
   11448:	ldr	pc, [ip, #3576]!	; 0xdf8

0001144c <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>:
   1144c:	add	ip, pc, #1048576	; 0x100000
   11450:	add	ip, ip, #36864	; 0x9000
   11454:	ldr	pc, [ip, #3568]!	; 0xdf0

00011458 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>:
   11458:	add	ip, pc, #1048576	; 0x100000
   1145c:	add	ip, ip, #36864	; 0x9000
   11460:	ldr	pc, [ip, #3560]!	; 0xde8

00011464 <myhtml_create_stream_and_batch@plt>:
   11464:	add	ip, pc, #1048576	; 0x100000
   11468:	add	ip, ip, #36864	; 0x9000
   1146c:	ldr	pc, [ip, #3552]!	; 0xde0

00011470 <myhtml_data_process_entry_clean@plt>:
   11470:	add	ip, pc, #1048576	; 0x100000
   11474:	add	ip, ip, #36864	; 0x9000
   11478:	ldr	pc, [ip, #3544]!	; 0xdd8

0001147c <mcsync_spin_init@plt>:
   1147c:	add	ip, pc, #1048576	; 0x100000
   11480:	add	ip, ip, #36864	; 0x9000
   11484:	ldr	pc, [ip, #3536]!	; 0xdd0

00011488 <malloc@plt>:
   11488:	add	ip, pc, #1048576	; 0x100000
   1148c:	add	ip, ip, #36864	; 0x9000
   11490:	ldr	pc, [ip, #3528]!	; 0xdc8

00011494 <mythread_check_status@plt>:
   11494:	add	ip, pc, #1048576	; 0x100000
   11498:	add	ip, ip, #36864	; 0x9000
   1149c:	ldr	pc, [ip, #3520]!	; 0xdc0

000114a0 <mycore_strcasecmp@plt>:
   114a0:	add	ip, pc, #1048576	; 0x100000
   114a4:	add	ip, ip, #36864	; 0x9000
   114a8:	ldr	pc, [ip, #3512]!	; 0xdb8

000114ac <mythread_queue_node_malloc_round@plt>:
   114ac:	add	ip, pc, #1048576	; 0x100000
   114b0:	add	ip, ip, #36864	; 0x9000
   114b4:	ldr	pc, [ip, #3504]!	; 0xdb0

000114b8 <myhtml_tree_active_formatting_reconstruction@plt>:
   114b8:	add	ip, pc, #1048576	; 0x100000
   114bc:	add	ip, ip, #36864	; 0x9000
   114c0:	ldr	pc, [ip, #3496]!	; 0xda8

000114c4 <myhtml_token_set_done@plt>:
   114c4:	add	ip, pc, #1048576	; 0x100000
   114c8:	add	ip, ip, #36864	; 0x9000
   114cc:	ldr	pc, [ip, #3488]!	; 0xda0

000114d0 <mcsync_spin_create@plt>:
   114d0:	add	ip, pc, #1048576	; 0x100000
   114d4:	add	ip, ip, #36864	; 0x9000
   114d8:	ldr	pc, [ip, #3480]!	; 0xd98

000114dc <mythread_thread_join@plt>:
   114dc:	add	ip, pc, #1048576	; 0x100000
   114e0:	add	ip, ip, #36864	; 0x9000
   114e4:	ldr	pc, [ip, #3472]!	; 0xd90

000114e8 <myhtml_token_attr_remove@plt>:
   114e8:	add	ip, pc, #1048576	; 0x100000
   114ec:	add	ip, ip, #36864	; 0x9000
   114f0:	ldr	pc, [ip, #3464]!	; 0xd88

000114f4 <mcsync_spin_lock@plt>:
   114f4:	add	ip, pc, #1048576	; 0x100000
   114f8:	add	ip, ip, #36864	; 0x9000
   114fc:	ldr	pc, [ip, #3456]!	; 0xd80

00011500 <myhtml_token_clean@plt>:
   11500:	add	ip, pc, #1048576	; 0x100000
   11504:	add	ip, ip, #36864	; 0x9000
   11508:	ldr	pc, [ip, #3448]!	; 0xd78

0001150c <mythread_queue_list_get_count@plt>:
   1150c:	add	ip, pc, #1048576	; 0x100000
   11510:	add	ip, ip, #36864	; 0x9000
   11514:	ldr	pc, [ip, #3440]!	; 0xd70

00011518 <__gmon_start__@plt>:
   11518:	add	ip, pc, #1048576	; 0x100000
   1151c:	add	ip, ip, #36864	; 0x9000
   11520:	ldr	pc, [ip, #3432]!	; 0xd68

00011524 <mycore_string_init@plt>:
   11524:	add	ip, pc, #1048576	; 0x100000
   11528:	add	ip, ip, #36864	; 0x9000
   1152c:	ldr	pc, [ip, #3424]!	; 0xd60

00011530 <myhtml_tree_current_node@plt>:
   11530:	add	ip, pc, #1048576	; 0x100000
   11534:	add	ip, ip, #36864	; 0x9000
   11538:	ldr	pc, [ip, #3416]!	; 0xd58

0001153c <mythread_mutex_close@plt>:
   1153c:	add	ip, pc, #1048576	; 0x100000
   11540:	add	ip, ip, #36864	; 0x9000
   11544:	ldr	pc, [ip, #3408]!	; 0xd50

00011548 <myhtml_insertion_mode_in_body@plt>:
   11548:	add	ip, pc, #1048576	; 0x100000
   1154c:	add	ip, ip, #36864	; 0x9000
   11550:	ldr	pc, [ip, #3400]!	; 0xd48

00011554 <myhtml_tree_active_formatting_between_last_marker@plt>:
   11554:	add	ip, pc, #1048576	; 0x100000
   11558:	add	ip, ip, #36864	; 0x9000
   1155c:	ldr	pc, [ip, #3392]!	; 0xd40

00011560 <mctree_create@plt>:
   11560:	add	ip, pc, #1048576	; 0x100000
   11564:	add	ip, ip, #36864	; 0x9000
   11568:	ldr	pc, [ip, #3384]!	; 0xd38

0001156c <strlen@plt>:
   1156c:	add	ip, pc, #1048576	; 0x100000
   11570:	add	ip, ip, #36864	; 0x9000
   11574:	ldr	pc, [ip, #3376]!	; 0xd30

00011578 <myhtml_token_node_wait_for_done@plt>:
   11578:	add	ip, pc, #1048576	; 0x100000
   1157c:	add	ip, ip, #36864	; 0x9000
   11580:	ldr	pc, [ip, #3368]!	; 0xd28

00011584 <mycore_string_append_lowercase@plt>:
   11584:	add	ip, pc, #1048576	; 0x100000
   11588:	add	ip, ip, #36864	; 0x9000
   1158c:	ldr	pc, [ip, #3360]!	; 0xd20

00011590 <myhtml_token_node_attr_copy_with_check@plt>:
   11590:	add	ip, pc, #1048576	; 0x100000
   11594:	add	ip, ip, #36864	; 0x9000
   11598:	ldr	pc, [ip, #3352]!	; 0xd18

0001159c <mythread_queue_init@plt>:
   1159c:	add	ip, pc, #1048576	; 0x100000
   115a0:	add	ip, ip, #36864	; 0x9000
   115a4:	ldr	pc, [ip, #3344]!	; 0xd10

000115a8 <myhtml_tree_node_add_child@plt>:
   115a8:	add	ip, pc, #1048576	; 0x100000
   115ac:	add	ip, ip, #36864	; 0x9000
   115b0:	ldr	pc, [ip, #3336]!	; 0xd08

000115b4 <myhtml_tree_clean@plt>:
   115b4:	add	ip, pc, #1048576	; 0x100000
   115b8:	add	ip, ip, #36864	; 0x9000
   115bc:	ldr	pc, [ip, #3328]!	; 0xd00

000115c0 <myhtml_tree_generate_implied_end_tags@plt>:
   115c0:	add	ip, pc, #1048576	; 0x100000
   115c4:	add	ip, ip, #36864	; 0x9000
   115c8:	ldr	pc, [ip, #3320]!	; 0xcf8

000115cc <mchar_async_node_clean@plt>:
   115cc:	add	ip, pc, #1048576	; 0x100000
   115d0:	add	ip, ip, #36864	; 0x9000
   115d4:	ldr	pc, [ip, #3312]!	; 0xcf0

000115d8 <myhtml_serialization_node_callback@plt>:
   115d8:	add	ip, pc, #1048576	; 0x100000
   115dc:	add	ip, ip, #36864	; 0x9000
   115e0:	ldr	pc, [ip, #3304]!	; 0xce8

000115e4 <mchar_async_free@plt>:
   115e4:	add	ip, pc, #1048576	; 0x100000
   115e8:	add	ip, ip, #36864	; 0x9000
   115ec:	ldr	pc, [ip, #3296]!	; 0xce0

000115f0 <myhtml_tree_reset_insertion_mode_appropriately@plt>:
   115f0:	add	ip, pc, #1048576	; 0x100000
   115f4:	add	ip, ip, #36864	; 0x9000
   115f8:	ldr	pc, [ip, #3288]!	; 0xcd8

000115fc <mcsimple_malloc@plt>:
   115fc:	add	ip, pc, #1048576	; 0x100000
   11600:	add	ip, ip, #36864	; 0x9000
   11604:	ldr	pc, [ip, #3280]!	; 0xcd0

00011608 <mctree_search_lowercase@plt>:
   11608:	add	ip, pc, #1048576	; 0x100000
   1160c:	add	ip, ip, #36864	; 0x9000
   11610:	ldr	pc, [ip, #3272]!	; 0xcc8

00011614 <myhtml_data_process@plt>:
   11614:	add	ip, pc, #1048576	; 0x100000
   11618:	add	ip, ip, #36864	; 0x9000
   1161c:	ldr	pc, [ip, #3264]!	; 0xcc0

00011620 <myhtml_token_attr_copy@plt>:
   11620:	add	ip, pc, #1048576	; 0x100000
   11624:	add	ip, ip, #36864	; 0x9000
   11628:	ldr	pc, [ip, #3256]!	; 0xcb8

0001162c <mcobject_init@plt>:
   1162c:	add	ip, pc, #1048576	; 0x100000
   11630:	add	ip, ip, #36864	; 0x9000
   11634:	ldr	pc, [ip, #3248]!	; 0xcb0

00011638 <myhtml_token_destroy@plt>:
   11638:	add	ip, pc, #1048576	; 0x100000
   1163c:	add	ip, ip, #36864	; 0x9000
   11640:	ldr	pc, [ip, #3240]!	; 0xca8

00011644 <pthread_attr_init@plt>:
   11644:	add	ip, pc, #1048576	; 0x100000
   11648:	add	ip, ip, #36864	; 0x9000
   1164c:	ldr	pc, [ip, #3232]!	; 0xca0

00011650 <myhtml_charef_find_by_pos@plt>:
   11650:	add	ip, pc, #1048576	; 0x100000
   11654:	add	ip, ip, #36864	; 0x9000
   11658:	ldr	pc, [ip, #3224]!	; 0xc98

0001165c <mythread_queue_list_create@plt>:
   1165c:	add	ip, pc, #1048576	; 0x100000
   11660:	add	ip, ip, #36864	; 0x9000
   11664:	ldr	pc, [ip, #3216]!	; 0xc90

00011668 <myhtml_token_attr_delete_all@plt>:
   11668:	add	ip, pc, #1048576	; 0x100000
   1166c:	add	ip, ip, #36864	; 0x9000
   11670:	ldr	pc, [ip, #3208]!	; 0xc88

00011674 <myhtml_token_node_attr_append_with_convert_encoding@plt>:
   11674:	add	ip, pc, #1048576	; 0x100000
   11678:	add	ip, ip, #36864	; 0x9000
   1167c:	ldr	pc, [ip, #3200]!	; 0xc80

00011680 <myhtml_tree_open_elements_find_by_tag_idx@plt>:
   11680:	add	ip, pc, #1048576	; 0x100000
   11684:	add	ip, ip, #36864	; 0x9000
   11688:	ldr	pc, [ip, #3192]!	; 0xc78

0001168c <myhtml_tree_active_formatting_append_with_check@plt>:
   1168c:	add	ip, pc, #1048576	; 0x100000
   11690:	add	ip, ip, #36864	; 0x9000
   11694:	ldr	pc, [ip, #3184]!	; 0xc70

00011698 <myencoding_get_function_by_id@plt>:
   11698:	add	ip, pc, #1048576	; 0x100000
   1169c:	add	ip, ip, #36864	; 0x9000
   116a0:	ldr	pc, [ip, #3176]!	; 0xc68

000116a4 <myencoding_extracting_character_encoding_from_charset_with_found@plt>:
   116a4:	add	ip, pc, #1048576	; 0x100000
   116a8:	add	ip, ip, #36864	; 0x9000
   116ac:	ldr	pc, [ip, #3168]!	; 0xc60

000116b0 <mcsync_lock@plt>:
   116b0:	add	ip, pc, #1048576	; 0x100000
   116b4:	add	ip, ip, #36864	; 0x9000
   116b8:	ldr	pc, [ip, #3160]!	; 0xc58

000116bc <mcsync_init@plt>:
   116bc:	add	ip, pc, #1048576	; 0x100000
   116c0:	add	ip, ip, #36864	; 0x9000
   116c4:	ldr	pc, [ip, #3152]!	; 0xc50

000116c8 <mcobject_async_node_clean@plt>:
   116c8:	add	ip, pc, #1048576	; 0x100000
   116cc:	add	ip, ip, #36864	; 0x9000
   116d0:	ldr	pc, [ip, #3144]!	; 0xc48

000116d4 <myhtml_tree_adoption_agency_algorithm@plt>:
   116d4:	add	ip, pc, #1048576	; 0x100000
   116d8:	add	ip, ip, #36864	; 0x9000
   116dc:	ldr	pc, [ip, #3136]!	; 0xc40

000116e0 <myhtml_tree_active_formatting_remove@plt>:
   116e0:	add	ip, pc, #1048576	; 0x100000
   116e4:	add	ip, ip, #36864	; 0x9000
   116e8:	ldr	pc, [ip, #3128]!	; 0xc38

000116ec <memset@plt>:
   116ec:	add	ip, pc, #1048576	; 0x100000
   116f0:	add	ip, ip, #36864	; 0x9000
   116f4:	ldr	pc, [ip, #3120]!	; 0xc30

000116f8 <myhread_entry_create@plt>:
   116f8:	add	ip, pc, #1048576	; 0x100000
   116fc:	add	ip, ip, #36864	; 0x9000
   11700:	ldr	pc, [ip, #3112]!	; 0xc28

00011704 <mcsync_mutex_create@plt>:
   11704:	add	ip, pc, #1048576	; 0x100000
   11708:	add	ip, ip, #36864	; 0x9000
   1170c:	ldr	pc, [ip, #3104]!	; 0xc20

00011710 <mycore_string_append@plt>:
   11710:	add	ip, pc, #1048576	; 0x100000
   11714:	add	ip, ip, #36864	; 0x9000
   11718:	ldr	pc, [ip, #3096]!	; 0xc18

0001171c <mcobject_async_chunk_malloc_without_lock@plt>:
   1171c:	add	ip, pc, #1048576	; 0x100000
   11720:	add	ip, ip, #36864	; 0x9000
   11724:	ldr	pc, [ip, #3088]!	; 0xc10

00011728 <strncpy@plt>:
   11728:	add	ip, pc, #1048576	; 0x100000
   1172c:	add	ip, ip, #36864	; 0x9000
   11730:	ldr	pc, [ip, #3080]!	; 0xc08

00011734 <pthread_cancel@plt>:
   11734:	add	ip, pc, #1048576	; 0x100000
   11738:	add	ip, ip, #36864	; 0x9000
   1173c:	ldr	pc, [ip, #3072]!	; 0xc00

00011740 <myhtml_token_attr_create@plt>:
   11740:	add	ip, pc, #1048576	; 0x100000
   11744:	add	ip, ip, #36864	; 0x9000
   11748:	ldr	pc, [ip, #3064]!	; 0xbf8

0001174c <mchar_async_malloc@plt>:
   1174c:	add	ip, pc, #1048576	; 0x100000
   11750:	add	ip, ip, #36864	; 0x9000
   11754:	ldr	pc, [ip, #3056]!	; 0xbf0

00011758 <myhtml_tag_static_search@plt>:
   11758:	add	ip, pc, #1048576	; 0x100000
   1175c:	add	ip, ip, #36864	; 0x9000
   11760:	ldr	pc, [ip, #3048]!	; 0xbe8

00011764 <myhtml_data_process_end@plt>:
   11764:	add	ip, pc, #1048576	; 0x100000
   11768:	add	ip, ip, #36864	; 0x9000
   1176c:	ldr	pc, [ip, #3040]!	; 0xbe0

00011770 <myhtml_stream_buffer_add_entry@plt>:
   11770:	add	ip, pc, #1048576	; 0x100000
   11774:	add	ip, ip, #36864	; 0x9000
   11778:	ldr	pc, [ip, #3032]!	; 0xbd8

0001177c <myhtml_tree_open_elements_pop_until@plt>:
   1177c:	add	ip, pc, #1048576	; 0x100000
   11780:	add	ip, ip, #36864	; 0x9000
   11784:	ldr	pc, [ip, #3024]!	; 0xbd0

00011788 <mctree_insert@plt>:
   11788:	add	ip, pc, #1048576	; 0x100000
   1178c:	add	ip, ip, #36864	; 0x9000
   11790:	ldr	pc, [ip, #3016]!	; 0xbc8

00011794 <mycore_string_realloc@plt>:
   11794:	add	ip, pc, #1048576	; 0x100000
   11798:	add	ip, ip, #36864	; 0x9000
   1179c:	ldr	pc, [ip, #3008]!	; 0xbc0

000117a0 <myhtml_tree_node_insert@plt>:
   117a0:	add	ip, pc, #1048576	; 0x100000
   117a4:	add	ip, ip, #36864	; 0x9000
   117a8:	ldr	pc, [ip, #3000]!	; 0xbb8

000117ac <mythread_queue_list_entry_wait_for_done@plt>:
   117ac:	add	ip, pc, #1048576	; 0x100000
   117b0:	add	ip, ip, #36864	; 0x9000
   117b4:	ldr	pc, [ip, #2992]!	; 0xbb0

000117b8 <myhtml_tree_open_elements_append@plt>:
   117b8:	add	ip, pc, #1048576	; 0x100000
   117bc:	add	ip, ip, #36864	; 0x9000
   117c0:	ldr	pc, [ip, #2984]!	; 0xba8

000117c4 <mythread_queue_list_entry_clean@plt>:
   117c4:	add	ip, pc, #1048576	; 0x100000
   117c8:	add	ip, ip, #36864	; 0x9000
   117cc:	ldr	pc, [ip, #2976]!	; 0xba0

000117d0 <mythread_destroy@plt>:
   117d0:	add	ip, pc, #1048576	; 0x100000
   117d4:	add	ip, ip, #36864	; 0x9000
   117d8:	ldr	pc, [ip, #2968]!	; 0xb98

000117dc <myhtml_tree_template_insertion_pop@plt>:
   117dc:	add	ip, pc, #1048576	; 0x100000
   117e0:	add	ip, ip, #36864	; 0x9000
   117e4:	ldr	pc, [ip, #2960]!	; 0xb90

000117e8 <mythread_thread_destroy@plt>:
   117e8:	add	ip, pc, #1048576	; 0x100000
   117ec:	add	ip, ip, #36864	; 0x9000
   117f0:	ldr	pc, [ip, #2952]!	; 0xb88

000117f4 <fclose@plt>:
   117f4:	add	ip, pc, #1048576	; 0x100000
   117f8:	add	ip, ip, #36864	; 0x9000
   117fc:	ldr	pc, [ip, #2944]!	; 0xb80

00011800 <myhtml_token_node_create@plt>:
   11800:	add	ip, pc, #1048576	; 0x100000
   11804:	add	ip, ip, #36864	; 0x9000
   11808:	ldr	pc, [ip, #2936]!	; 0xb78

0001180c <mycore_utils_avl_tree_node_balance@plt>:
   1180c:	add	ip, pc, #1048576	; 0x100000
   11810:	add	ip, ip, #36864	; 0x9000
   11814:	ldr	pc, [ip, #2928]!	; 0xb70

00011818 <myhtml_tag_get_by_id@plt>:
   11818:	add	ip, pc, #1048576	; 0x100000
   1181c:	add	ip, ip, #36864	; 0x9000
   11820:	ldr	pc, [ip, #2920]!	; 0xb68

00011824 <myhtml_tree_appropriate_place_inserting_in_tree@plt>:
   11824:	add	ip, pc, #1048576	; 0x100000
   11828:	add	ip, ip, #36864	; 0x9000
   1182c:	ldr	pc, [ip, #2912]!	; 0xb60

00011830 <mycore_utils_mhash_rebuld@plt>:
   11830:	add	ip, pc, #1048576	; 0x100000
   11834:	add	ip, ip, #36864	; 0x9000
   11838:	ldr	pc, [ip, #2904]!	; 0xb58

0001183c <myhtml_charef_get_first_position@plt>:
   1183c:	add	ip, pc, #1048576	; 0x100000
   11840:	add	ip, ip, #36864	; 0x9000
   11844:	ldr	pc, [ip, #2896]!	; 0xb50

00011848 <mcobject_malloc@plt>:
   11848:	add	ip, pc, #1048576	; 0x100000
   1184c:	add	ip, ip, #36864	; 0x9000
   11850:	ldr	pc, [ip, #2888]!	; 0xb48

00011854 <mcsync_spin_clean@plt>:
   11854:	add	ip, pc, #1048576	; 0x100000
   11858:	add	ip, ip, #36864	; 0x9000
   1185c:	ldr	pc, [ip, #2880]!	; 0xb40

00011860 <mythread_queue_create@plt>:
   11860:	add	ip, pc, #1048576	; 0x100000
   11864:	add	ip, ip, #36864	; 0x9000
   11868:	ldr	pc, [ip, #2872]!	; 0xb38

0001186c <mcobject_async_node_add@plt>:
   1186c:	add	ip, pc, #1048576	; 0x100000
   11870:	add	ip, ip, #36864	; 0x9000
   11874:	ldr	pc, [ip, #2864]!	; 0xb30

00011878 <myhtml_tokenizer_doctype_system_identifier_dsq@plt>:
   11878:	add	ip, pc, #1048576	; 0x100000
   1187c:	add	ip, ip, #36864	; 0x9000
   11880:	ldr	pc, [ip, #2856]!	; 0xb28

00011884 <myhtml_is_html_node@plt>:
   11884:	add	ip, pc, #1048576	; 0x100000
   11888:	add	ip, ip, #36864	; 0x9000
   1188c:	ldr	pc, [ip, #2848]!	; 0xb20

00011890 <myhtml_parser_token_data_to_string@plt>:
   11890:	add	ip, pc, #1048576	; 0x100000
   11894:	add	ip, ip, #36864	; 0x9000
   11898:	ldr	pc, [ip, #2840]!	; 0xb18

0001189c <mythread_stop@plt>:
   1189c:	add	ip, pc, #1048576	; 0x100000
   118a0:	add	ip, ip, #36864	; 0x9000
   118a4:	ldr	pc, [ip, #2832]!	; 0xb10

000118a8 <myhtml_tag_name_by_id@plt>:
   118a8:	add	ip, pc, #1048576	; 0x100000
   118ac:	add	ip, ip, #36864	; 0x9000
   118b0:	ldr	pc, [ip, #2824]!	; 0xb08

000118b4 <mythread_mutex_create@plt>:
   118b4:	add	ip, pc, #1048576	; 0x100000
   118b8:	add	ip, ip, #36864	; 0x9000
   118bc:	ldr	pc, [ip, #2816]!	; 0xb00

000118c0 <myhtml_attribute_key@plt>:
   118c0:	add	ip, pc, #1048576	; 0x100000
   118c4:	add	ip, ip, #36864	; 0x9000
   118c8:	ldr	pc, [ip, #2808]!	; 0xaf8

000118cc <mcobject_async_destroy@plt>:
   118cc:	add	ip, pc, #1048576	; 0x100000
   118d0:	add	ip, ip, #36864	; 0x9000
   118d4:	ldr	pc, [ip, #2800]!	; 0xaf0

000118d8 <myhtml_token_attr_compare@plt>:
   118d8:	add	ip, pc, #1048576	; 0x100000
   118dc:	add	ip, ip, #36864	; 0x9000
   118e0:	ldr	pc, [ip, #2792]!	; 0xae8

000118e4 <mcsync_mutex_init@plt>:
   118e4:	add	ip, pc, #1048576	; 0x100000
   118e8:	add	ip, ip, #36864	; 0x9000
   118ec:	ldr	pc, [ip, #2784]!	; 0xae0

000118f0 <myhtml_tag_init@plt>:
   118f0:	add	ip, pc, #1048576	; 0x100000
   118f4:	add	ip, ip, #36864	; 0x9000
   118f8:	ldr	pc, [ip, #2776]!	; 0xad8

000118fc <pthread_join@plt>:
   118fc:	add	ip, pc, #1048576	; 0x100000
   11900:	add	ip, ip, #36864	; 0x9000
   11904:	ldr	pc, [ip, #2768]!	; 0xad0

00011908 <myhtml_tag_get_by_name@plt>:
   11908:	add	ip, pc, #1048576	; 0x100000
   1190c:	add	ip, ip, #36864	; 0x9000
   11910:	ldr	pc, [ip, #2760]!	; 0xac8

00011914 <myhtml_stream_buffer_current_entry@plt>:
   11914:	add	ip, pc, #1048576	; 0x100000
   11918:	add	ip, ip, #36864	; 0x9000
   1191c:	ldr	pc, [ip, #2752]!	; 0xac0

00011920 <mchar_async_chunk_malloc_without_lock@plt>:
   11920:	add	ip, pc, #1048576	; 0x100000
   11924:	add	ip, ip, #36864	; 0x9000
   11928:	ldr	pc, [ip, #2744]!	; 0xab8

0001192c <mcobject_async_malloc@plt>:
   1192c:	add	ip, pc, #1048576	; 0x100000
   11930:	add	ip, ip, #36864	; 0x9000
   11934:	ldr	pc, [ip, #2736]!	; 0xab0

00011938 <mchar_async_clean@plt>:
   11938:	add	ip, pc, #1048576	; 0x100000
   1193c:	add	ip, ip, #36864	; 0x9000
   11940:	ldr	pc, [ip, #2728]!	; 0xaa8

00011944 <myhtml_token_adjust_foreign_attributes@plt>:
   11944:	add	ip, pc, #1048576	; 0x100000
   11948:	add	ip, ip, #36864	; 0x9000
   1194c:	ldr	pc, [ip, #2720]!	; 0xaa0

00011950 <myhtml_rules_init@plt>:
   11950:	add	ip, pc, #1048576	; 0x100000
   11954:	add	ip, ip, #36864	; 0x9000
   11958:	ldr	pc, [ip, #2712]!	; 0xa98

0001195c <mythread_nanosleep_destroy@plt>:
   1195c:	add	ip, pc, #1048576	; 0x100000
   11960:	add	ip, ip, #36864	; 0x9000
   11964:	ldr	pc, [ip, #2704]!	; 0xa90

00011968 <myhtml_string_before_append_any_preprocessing@plt>:
   11968:	add	ip, pc, #1048576	; 0x100000
   1196c:	add	ip, ip, #36864	; 0x9000
   11970:	ldr	pc, [ip, #2696]!	; 0xa88

00011974 <myhtml_check_tag_parser@plt>:
   11974:	add	ip, pc, #1048576	; 0x100000
   11978:	add	ip, ip, #36864	; 0x9000
   1197c:	ldr	pc, [ip, #2688]!	; 0xa80

00011980 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>:
   11980:	add	ip, pc, #1048576	; 0x100000
   11984:	add	ip, ip, #36864	; 0x9000
   11988:	ldr	pc, [ip, #2680]!	; 0xa78

0001198c <mchar_async_node_delete@plt>:
   1198c:	add	ip, pc, #1048576	; 0x100000
   11990:	add	ip, ip, #36864	; 0x9000
   11994:	ldr	pc, [ip, #2672]!	; 0xa70

00011998 <mchar_async_crop_first_chars_without_cache@plt>:
   11998:	add	ip, pc, #1048576	; 0x100000
   1199c:	add	ip, ip, #36864	; 0x9000
   119a0:	ldr	pc, [ip, #2664]!	; 0xa68

000119a4 <_myhtml_tokenizer_state_andata_end_tag_name@plt>:
   119a4:	add	ip, pc, #1048576	; 0x100000
   119a8:	add	ip, ip, #36864	; 0x9000
   119ac:	ldr	pc, [ip, #2656]!	; 0xa60

000119b0 <mchar_async_cache_add@plt>:
   119b0:	add	ip, pc, #1048576	; 0x100000
   119b4:	add	ip, ip, #36864	; 0x9000
   119b8:	ldr	pc, [ip, #2648]!	; 0xa58

000119bc <myencoding_string_append_chunk_lowercase_ascii@plt>:
   119bc:	add	ip, pc, #1048576	; 0x100000
   119c0:	add	ip, ip, #36864	; 0x9000
   119c4:	ldr	pc, [ip, #2640]!	; 0xa50

000119c8 <mycore_malloc@plt>:
   119c8:	add	ip, pc, #1048576	; 0x100000
   119cc:	add	ip, ip, #36864	; 0x9000
   119d0:	ldr	pc, [ip, #2632]!	; 0xa48

000119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>:
   119d4:	add	ip, pc, #1048576	; 0x100000
   119d8:	add	ip, ip, #36864	; 0x9000
   119dc:	ldr	pc, [ip, #2624]!	; 0xa40

000119e0 <mythread_queue_node_malloc_limit@plt>:
   119e0:	add	ip, pc, #1048576	; 0x100000
   119e4:	add	ip, ip, #36864	; 0x9000
   119e8:	ldr	pc, [ip, #2616]!	; 0xa38

000119ec <myhtml_tree_node_insert_by_token@plt>:
   119ec:	add	ip, pc, #1048576	; 0x100000
   119f0:	add	ip, ip, #36864	; 0x9000
   119f4:	ldr	pc, [ip, #2608]!	; 0xa30

000119f8 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>:
   119f8:	add	ip, pc, #1048576	; 0x100000
   119fc:	add	ip, ip, #36864	; 0x9000
   11a00:	ldr	pc, [ip, #2600]!	; 0xa28

00011a04 <myhtml_tree_node_free@plt>:
   11a04:	add	ip, pc, #1048576	; 0x100000
   11a08:	add	ip, ip, #36864	; 0x9000
   11a0c:	ldr	pc, [ip, #2592]!	; 0xa20

00011a10 <mythread_mutex_post@plt>:
   11a10:	add	ip, pc, #1048576	; 0x100000
   11a14:	add	ip, ip, #36864	; 0x9000
   11a18:	ldr	pc, [ip, #2584]!	; 0xa18

00011a1c <mycore_string_clean@plt>:
   11a1c:	add	ip, pc, #1048576	; 0x100000
   11a20:	add	ip, ip, #36864	; 0x9000
   11a24:	ldr	pc, [ip, #2576]!	; 0xa10

00011a28 <mythread_queue_list_entry_make_batch@plt>:
   11a28:	add	ip, pc, #1048576	; 0x100000
   11a2c:	add	ip, ip, #36864	; 0x9000
   11a30:	ldr	pc, [ip, #2568]!	; 0xa08

00011a34 <myhtml_tag_create@plt>:
   11a34:	add	ip, pc, #1048576	; 0x100000
   11a38:	add	ip, ip, #36864	; 0x9000
   11a3c:	ldr	pc, [ip, #2560]!	; 0xa00

00011a40 <myhtml_tree_close_cell@plt>:
   11a40:	add	ip, pc, #1048576	; 0x100000
   11a44:	add	ip, ip, #36864	; 0x9000
   11a48:	ldr	pc, [ip, #2552]!	; 0x9f8

00011a4c <myhtml_tree_adjusted_current_node@plt>:
   11a4c:	add	ip, pc, #1048576	; 0x100000
   11a50:	add	ip, ip, #36864	; 0x9000
   11a54:	ldr	pc, [ip, #2544]!	; 0x9f0

00011a58 <myhtml_stream_buffer_init@plt>:
   11a58:	add	ip, pc, #1048576	; 0x100000
   11a5c:	add	ip, ip, #36864	; 0x9000
   11a60:	ldr	pc, [ip, #2536]!	; 0x9e8

00011a64 <mythread_queue_node_clean@plt>:
   11a64:	add	ip, pc, #1048576	; 0x100000
   11a68:	add	ip, ip, #36864	; 0x9000
   11a6c:	ldr	pc, [ip, #2528]!	; 0x9e0

00011a70 <myhtml_tree_node_insert_foreign_element@plt>:
   11a70:	add	ip, pc, #1048576	; 0x100000
   11a74:	add	ip, ip, #36864	; 0x9000
   11a78:	ldr	pc, [ip, #2520]!	; 0x9d8

00011a7c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>:
   11a7c:	add	ip, pc, #1048576	; 0x100000
   11a80:	add	ip, ip, #36864	; 0x9000
   11a84:	ldr	pc, [ip, #2512]!	; 0x9d0

00011a88 <mythread_mutex_wait@plt>:
   11a88:	add	ip, pc, #1048576	; 0x100000
   11a8c:	add	ip, ip, #36864	; 0x9000
   11a90:	ldr	pc, [ip, #2504]!	; 0x9c8

00011a94 <mchar_async_destroy@plt>:
   11a94:	add	ip, pc, #1048576	; 0x100000
   11a98:	add	ip, ip, #36864	; 0x9000
   11a9c:	ldr	pc, [ip, #2496]!	; 0x9c0

00011aa0 <mycore_utils_mhash_add_with_choice@plt>:
   11aa0:	add	ip, pc, #1048576	; 0x100000
   11aa4:	add	ip, ip, #36864	; 0x9000
   11aa8:	ldr	pc, [ip, #2488]!	; 0x9b8

00011aac <myhtml_tree_node_delete@plt>:
   11aac:	add	ip, pc, #1048576	; 0x100000
   11ab0:	add	ip, ip, #36864	; 0x9000
   11ab4:	ldr	pc, [ip, #2480]!	; 0x9b0

00011ab8 <mycore_free@plt>:
   11ab8:	add	ip, pc, #1048576	; 0x100000
   11abc:	add	ip, ip, #36864	; 0x9000
   11ac0:	ldr	pc, [ip, #2472]!	; 0x9a8

00011ac4 <mythread_queue_list_wait_for_done@plt>:
   11ac4:	add	ip, pc, #1048576	; 0x100000
   11ac8:	add	ip, ip, #36864	; 0x9000
   11acc:	ldr	pc, [ip, #2464]!	; 0x9a0

00011ad0 <mycore_string_whitespace_from_begin@plt>:
   11ad0:	add	ip, pc, #1048576	; 0x100000
   11ad4:	add	ip, ip, #36864	; 0x9000
   11ad8:	ldr	pc, [ip, #2456]!	; 0x998

00011adc <myhtml_tree_node_remove@plt>:
   11adc:	add	ip, pc, #1048576	; 0x100000
   11ae0:	add	ip, ip, #36864	; 0x9000
   11ae4:	ldr	pc, [ip, #2448]!	; 0x990

00011ae8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>:
   11ae8:	add	ip, pc, #1048576	; 0x100000
   11aec:	add	ip, ip, #36864	; 0x9000
   11af0:	ldr	pc, [ip, #2440]!	; 0x988

00011af4 <myhtml_tree_node_insert_doctype@plt>:
   11af4:	add	ip, pc, #1048576	; 0x100000
   11af8:	add	ip, ip, #36864	; 0x9000
   11afc:	ldr	pc, [ip, #2432]!	; 0x980

00011b00 <myhtml_tag_destroy@plt>:
   11b00:	add	ip, pc, #1048576	; 0x100000
   11b04:	add	ip, ip, #36864	; 0x9000
   11b08:	ldr	pc, [ip, #2424]!	; 0x978

00011b0c <mcsync_mutex_clean@plt>:
   11b0c:	add	ip, pc, #1048576	; 0x100000
   11b10:	add	ip, ip, #36864	; 0x9000
   11b14:	ldr	pc, [ip, #2416]!	; 0x970

00011b18 <myhtml_tree_active_formatting_up_to_last_marker@plt>:
   11b18:	add	ip, pc, #1048576	; 0x100000
   11b1c:	add	ip, ip, #36864	; 0x9000
   11b20:	ldr	pc, [ip, #2408]!	; 0x968

00011b24 <myhtml_stream_buffer_create@plt>:
   11b24:	add	ip, pc, #1048576	; 0x100000
   11b28:	add	ip, ip, #36864	; 0x9000
   11b2c:	ldr	pc, [ip, #2400]!	; 0x960

00011b30 <myhtml_tree_appropriate_place_inserting@plt>:
   11b30:	add	ip, pc, #1048576	; 0x100000
   11b34:	add	ip, ip, #36864	; 0x9000
   11b38:	ldr	pc, [ip, #2392]!	; 0x958

00011b3c <myencoding_codepoint_to_ascii_utf_8@plt>:
   11b3c:	add	ip, pc, #1048576	; 0x100000
   11b40:	add	ip, ip, #36864	; 0x9000
   11b44:	ldr	pc, [ip, #2384]!	; 0x950

00011b48 <myhtml_token_attr_remove_by_name@plt>:
   11b48:	add	ip, pc, #1048576	; 0x100000
   11b4c:	add	ip, ip, #36864	; 0x9000
   11b50:	ldr	pc, [ip, #2376]!	; 0x948

00011b54 <myhtml_token_attr_by_name@plt>:
   11b54:	add	ip, pc, #1048576	; 0x100000
   11b58:	add	ip, ip, #36864	; 0x9000
   11b5c:	ldr	pc, [ip, #2368]!	; 0x940

00011b60 <mcsync_unlock@plt>:
   11b60:	add	ip, pc, #1048576	; 0x100000
   11b64:	add	ip, ip, #36864	; 0x9000
   11b68:	ldr	pc, [ip, #2360]!	; 0x938

00011b6c <myhtml_tree_token_list_append@plt>:
   11b6c:	add	ip, pc, #1048576	; 0x100000
   11b70:	add	ip, ip, #36864	; 0x9000
   11b74:	ldr	pc, [ip, #2352]!	; 0x930

00011b78 <mythread_queue_list_entry_make_stream@plt>:
   11b78:	add	ip, pc, #1048576	; 0x100000
   11b7c:	add	ip, ip, #36864	; 0x9000
   11b80:	ldr	pc, [ip, #2344]!	; 0x928

00011b84 <mycore_strncmp@plt>:
   11b84:	add	ip, pc, #1048576	; 0x100000
   11b88:	add	ip, ip, #36864	; 0x9000
   11b8c:	ldr	pc, [ip, #2336]!	; 0x920

00011b90 <myhtml_tree_element_in_scope@plt>:
   11b90:	add	ip, pc, #1048576	; 0x100000
   11b94:	add	ip, ip, #36864	; 0x9000
   11b98:	ldr	pc, [ip, #2328]!	; 0x918

00011b9c <fseek@plt>:
   11b9c:	add	ip, pc, #1048576	; 0x100000
   11ba0:	add	ip, ip, #36864	; 0x9000
   11ba4:	ldr	pc, [ip, #2320]!	; 0x910

00011ba8 <myhtml_node_clone@plt>:
   11ba8:	add	ip, pc, #1048576	; 0x100000
   11bac:	add	ip, ip, #36864	; 0x9000
   11bb0:	ldr	pc, [ip, #2312]!	; 0x908

00011bb4 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>:
   11bb4:	add	ip, pc, #1048576	; 0x100000
   11bb8:	add	ip, ip, #36864	; 0x9000
   11bbc:	ldr	pc, [ip, #2304]!	; 0x900

00011bc0 <pthread_attr_setdetachstate@plt>:
   11bc0:	add	ip, pc, #1048576	; 0x100000
   11bc4:	add	ip, ip, #36864	; 0x9000
   11bc8:	ldr	pc, [ip, #2296]!	; 0x8f8

00011bcc <mchar_async_cache_delete@plt>:
   11bcc:	add	ip, pc, #1048576	; 0x100000
   11bd0:	add	ip, ip, #36864	; 0x9000
   11bd4:	ldr	pc, [ip, #2288]!	; 0x8f0

00011bd8 <mcobject_clean@plt>:
   11bd8:	add	ip, pc, #1048576	; 0x100000
   11bdc:	add	ip, ip, #36864	; 0x9000
   11be0:	ldr	pc, [ip, #2280]!	; 0x8e8

00011be4 <myhtml_token_node_clean@plt>:
   11be4:	add	ip, pc, #1048576	; 0x100000
   11be8:	add	ip, ip, #36864	; 0x9000
   11bec:	ldr	pc, [ip, #2272]!	; 0x8e0

00011bf0 <myhtml_token_delete@plt>:
   11bf0:	add	ip, pc, #1048576	; 0x100000
   11bf4:	add	ip, ip, #36864	; 0x9000
   11bf8:	ldr	pc, [ip, #2264]!	; 0x8d8

00011bfc <strncmp@plt>:
   11bfc:	add	ip, pc, #1048576	; 0x100000
   11c00:	add	ip, ip, #36864	; 0x9000
   11c04:	ldr	pc, [ip, #2256]!	; 0x8d0

00011c08 <mcsimple_get_by_absolute_position@plt>:
   11c08:	add	ip, pc, #1048576	; 0x100000
   11c0c:	add	ip, ip, #36864	; 0x9000
   11c10:	ldr	pc, [ip, #2248]!	; 0x8c8

00011c14 <mcsync_mutex_try_lock@plt>:
   11c14:	add	ip, pc, #1048576	; 0x100000
   11c18:	add	ip, ip, #36864	; 0x9000
   11c1c:	ldr	pc, [ip, #2240]!	; 0x8c0

00011c20 <myhtml_tree_clear_stack_back_table_context@plt>:
   11c20:	add	ip, pc, #1048576	; 0x100000
   11c24:	add	ip, ip, #36864	; 0x9000
   11c28:	ldr	pc, [ip, #2232]!	; 0x8b8

00011c2c <myhtml_tree_node_clone@plt>:
   11c2c:	add	ip, pc, #1048576	; 0x100000
   11c30:	add	ip, ip, #36864	; 0x9000
   11c34:	ldr	pc, [ip, #2224]!	; 0x8b0

00011c38 <myhtml_tree_token_list_clean@plt>:
   11c38:	add	ip, pc, #1048576	; 0x100000
   11c3c:	add	ip, ip, #36864	; 0x9000
   11c40:	ldr	pc, [ip, #2216]!	; 0x8a8

00011c44 <myhtml_parser_stream@plt>:
   11c44:	add	ip, pc, #1048576	; 0x100000
   11c48:	add	ip, ip, #36864	; 0x9000
   11c4c:	ldr	pc, [ip, #2208]!	; 0x8a0

00011c50 <myhtml_token_create@plt>:
   11c50:	add	ip, pc, #1048576	; 0x100000
   11c54:	add	ip, ip, #36864	; 0x9000
   11c58:	ldr	pc, [ip, #2200]!	; 0x898

00011c5c <myhtml_parser_token_data_to_string_lowercase@plt>:
   11c5c:	add	ip, pc, #1048576	; 0x100000
   11c60:	add	ip, ip, #36864	; 0x9000
   11c64:	ldr	pc, [ip, #2192]!	; 0x890

00011c68 <myencoding_detect_utf_8@plt>:
   11c68:	add	ip, pc, #1048576	; 0x100000
   11c6c:	add	ip, ip, #36864	; 0x9000
   11c70:	ldr	pc, [ip, #2184]!	; 0x888

00011c74 <mcsync_spin_unlock@plt>:
   11c74:	add	ip, pc, #1048576	; 0x100000
   11c78:	add	ip, ip, #36864	; 0x9000
   11c7c:	ldr	pc, [ip, #2176]!	; 0x880

00011c80 <myhtml_string_append_lowercase_with_preprocessing@plt>:
   11c80:	add	ip, pc, #1048576	; 0x100000
   11c84:	add	ip, ip, #36864	; 0x9000
   11c88:	ldr	pc, [ip, #2168]!	; 0x878

00011c8c <mcsync_mutex_lock@plt>:
   11c8c:	add	ip, pc, #1048576	; 0x100000
   11c90:	add	ip, ip, #36864	; 0x9000
   11c94:	ldr	pc, [ip, #2160]!	; 0x870

00011c98 <mcobject_async_clean@plt>:
   11c98:	add	ip, pc, #1048576	; 0x100000
   11c9c:	add	ip, ip, #36864	; 0x9000
   11ca0:	ldr	pc, [ip, #2152]!	; 0x868

00011ca4 <myhtml_tag_clean@plt>:
   11ca4:	add	ip, pc, #1048576	; 0x100000
   11ca8:	add	ip, ip, #36864	; 0x9000
   11cac:	ldr	pc, [ip, #2144]!	; 0x860

00011cb0 <mythread_thread_attr_destroy@plt>:
   11cb0:	add	ip, pc, #1048576	; 0x100000
   11cb4:	add	ip, ip, #36864	; 0x9000
   11cb8:	ldr	pc, [ip, #2136]!	; 0x858

00011cbc <mycore_string_clean_all@plt>:
   11cbc:	add	ip, pc, #1048576	; 0x100000
   11cc0:	add	ip, ip, #36864	; 0x9000
   11cc4:	ldr	pc, [ip, #2128]!	; 0x850

00011cc8 <myhtml_tree_node_clean@plt>:
   11cc8:	add	ip, pc, #1048576	; 0x100000
   11ccc:	add	ip, ip, #36864	; 0x9000
   11cd0:	ldr	pc, [ip, #2120]!	; 0x848

00011cd4 <mythread_init@plt>:
   11cd4:	add	ip, pc, #1048576	; 0x100000
   11cd8:	add	ip, ip, #36864	; 0x9000
   11cdc:	ldr	pc, [ip, #2112]!	; 0x840

Disassembly of section .text:

00011ce0 <mycore_incoming_buffer_add@@Base-0x124>:
   11ce0:	ldr	r3, [pc, #20]	; 11cfc <mythread_init@plt+0x28>
   11ce4:	ldr	r2, [pc, #20]	; 11d00 <mythread_init@plt+0x2c>
   11ce8:	add	r3, pc, r3
   11cec:	ldr	r2, [r3, r2]
   11cf0:	cmp	r2, #0
   11cf4:	bxeq	lr
   11cf8:	b	11518 <__gmon_start__@plt>
   11cfc:	andseq	r9, r0, r0, lsl r3
   11d00:	muleq	r0, r0, r6
   11d04:	ldr	r0, [pc, #44]	; 11d38 <mythread_init@plt+0x64>
   11d08:	ldr	r3, [pc, #44]	; 11d3c <mythread_init@plt+0x68>
   11d0c:	add	r0, pc, r0
   11d10:	add	r3, pc, r3
   11d14:	cmp	r3, r0
   11d18:	ldr	r3, [pc, #32]	; 11d40 <mythread_init@plt+0x6c>
   11d1c:	add	r3, pc, r3
   11d20:	bxeq	lr
   11d24:	ldr	r2, [pc, #24]	; 11d44 <mythread_init@plt+0x70>
   11d28:	ldr	r3, [r3, r2]
   11d2c:	cmp	r3, #0
   11d30:	bxeq	lr
   11d34:	bx	r3
   11d38:			; <UNDEFINED> instruction: 0x00109ad8
   11d3c:			; <UNDEFINED> instruction: 0x00109ad4
   11d40:			; <UNDEFINED> instruction: 0x001092dc
   11d44:	andeq	r0, r0, ip, asr r5
   11d48:	ldr	r0, [pc, #56]	; 11d88 <mythread_init@plt+0xb4>
   11d4c:	ldr	r3, [pc, #56]	; 11d8c <mythread_init@plt+0xb8>
   11d50:	add	r0, pc, r0
   11d54:	add	r3, pc, r3
   11d58:	sub	r1, r3, r0
   11d5c:	ldr	r3, [pc, #44]	; 11d90 <mythread_init@plt+0xbc>
   11d60:	asr	r1, r1, #2
   11d64:	add	r3, pc, r3
   11d68:	add	r1, r1, r1, lsr #31
   11d6c:	asrs	r1, r1, #1
   11d70:	bxeq	lr
   11d74:	ldr	r2, [pc, #24]	; 11d94 <mythread_init@plt+0xc0>
   11d78:	ldr	r3, [r3, r2]
   11d7c:	cmp	r3, #0
   11d80:	bxeq	lr
   11d84:	bx	r3
   11d88:	mulseq	r0, r4, sl
   11d8c:	mulseq	r0, r0, sl
   11d90:	mulseq	r0, r4, r2
   11d94:	andeq	r0, r0, r0, lsr #15
   11d98:	ldr	r3, [pc, #76]	; 11dec <mythread_init@plt+0x118>
   11d9c:	ldr	r2, [pc, #76]	; 11df0 <mythread_init@plt+0x11c>
   11da0:	add	r3, pc, r3
   11da4:	add	r2, pc, r2
   11da8:	ldrb	r3, [r3]
   11dac:	cmp	r3, #0
   11db0:	bxne	lr
   11db4:	ldr	r3, [pc, #56]	; 11df4 <mythread_init@plt+0x120>
   11db8:	push	{r4, lr}
   11dbc:	ldr	r3, [r2, r3]
   11dc0:	cmp	r3, #0
   11dc4:	beq	11dd4 <mythread_init@plt+0x100>
   11dc8:	ldr	r3, [pc, #40]	; 11df8 <mythread_init@plt+0x124>
   11dcc:	ldr	r0, [pc, r3]
   11dd0:	bl	10ed0 <__cxa_finalize@plt>
   11dd4:	bl	11d04 <mythread_init@plt+0x30>
   11dd8:	ldr	r3, [pc, #28]	; 11dfc <mythread_init@plt+0x128>
   11ddc:	mov	r2, #1
   11de0:	add	r3, pc, r3
   11de4:	strb	r2, [r3]
   11de8:	pop	{r4, pc}
   11dec:	andseq	r9, r0, r4, asr #20
   11df0:	andseq	r9, r0, r4, asr r2
   11df4:	andeq	r0, r0, r8, asr #10
   11df8:	andseq	r9, r0, r4, lsl sl
   11dfc:	andseq	r9, r0, r4, lsl #20
   11e00:	b	11d48 <mythread_init@plt+0x74>

00011e04 <mycore_incoming_buffer_add@@Base>:
   11e04:	push	{r4, r5, r6, r7, fp, lr}
   11e08:	add	fp, sp, #16
   11e0c:	mov	r4, r0
   11e10:	mov	r0, r1
   11e14:	mov	r1, #0
   11e18:	mov	r5, r3
   11e1c:	mov	r6, r2
   11e20:	mov	r7, #0
   11e24:	bl	11848 <mcobject_malloc@plt>
   11e28:	cmp	r4, #0
   11e2c:	stm	r0, {r6, r7}
   11e30:	str	r5, [r0, #8]
   11e34:	beq	11e50 <mycore_incoming_buffer_add@@Base+0x4c>
   11e38:	ldr	r1, [r4, #8]
   11e3c:	ldr	r2, [r4, #12]
   11e40:	add	r1, r1, r2
   11e44:	str	r1, [r0, #12]
   11e48:	str	r0, [r4, #20]
   11e4c:	b	11e54 <mycore_incoming_buffer_add@@Base+0x50>
   11e50:	str	r7, [r0, #12]
   11e54:	mov	r1, #0
   11e58:	str	r4, [r0, #16]
   11e5c:	str	r1, [r0, #20]
   11e60:	pop	{r4, r5, r6, r7, fp, pc}

00011e64 <mycore_incoming_buffer_clean@@Base>:
   11e64:	mov	r1, #0
   11e68:	vmov.i32	q8, #0	; 0x00000000
   11e6c:	mov	r2, #20
   11e70:	str	r1, [r0, #16]
   11e74:	vst1.32	{d16-d17}, [r0], r2
   11e78:	str	r1, [r0]
   11e7c:	bx	lr

00011e80 <mycore_incoming_buffer_split@@Base>:
   11e80:	push	{r4, r5, r6, sl, fp, lr}
   11e84:	add	fp, sp, #16
   11e88:	mov	r4, r0
   11e8c:	ldr	r0, [r0, #12]
   11e90:	mov	r6, #0
   11e94:	sub	r5, r2, r0
   11e98:	mov	r0, r1
   11e9c:	mov	r1, #0
   11ea0:	bl	11848 <mcobject_malloc@plt>
   11ea4:	ldr	r1, [r4, #8]
   11ea8:	sub	r1, r1, r5
   11eac:	str	r1, [r0, #4]
   11eb0:	str	r1, [r0, #8]
   11eb4:	ldr	r1, [r4]
   11eb8:	add	r1, r1, r5
   11ebc:	str	r1, [r0]
   11ec0:	ldr	r1, [r4, #12]
   11ec4:	str	r4, [r0, #16]
   11ec8:	str	r6, [r0, #20]
   11ecc:	add	r1, r1, r5
   11ed0:	str	r1, [r0, #12]
   11ed4:	str	r0, [r4, #20]
   11ed8:	str	r5, [r4, #4]
   11edc:	str	r5, [r4, #8]
   11ee0:	pop	{r4, r5, r6, sl, fp, pc}

00011ee4 <mycore_incoming_buffer_find_by_position@@Base>:
   11ee4:	ldr	r2, [r0, #12]
   11ee8:	cmp	r2, r1
   11eec:	bcs	11f20 <mycore_incoming_buffer_find_by_position@@Base+0x3c>
   11ef0:	ldr	r3, [r0, #8]
   11ef4:	add	r2, r3, r2
   11ef8:	cmp	r2, r1
   11efc:	bxcs	lr
   11f00:	ldr	r0, [r0, #20]
   11f04:	cmp	r0, #0
   11f08:	moveq	r0, #0
   11f0c:	bxeq	lr
   11f10:	ldr	r2, [r0, #8]
   11f14:	ldr	r3, [r0, #12]
   11f18:	add	r2, r2, r3
   11f1c:	b	11ef8 <mycore_incoming_buffer_find_by_position@@Base+0x14>
   11f20:	bls	11f40 <mycore_incoming_buffer_find_by_position@@Base+0x5c>
   11f24:	ldr	r0, [r0, #16]
   11f28:	cmp	r0, #0
   11f2c:	moveq	r0, #0
   11f30:	bxeq	lr
   11f34:	ldr	r2, [r0, #12]
   11f38:	cmp	r2, r1
   11f3c:	bhi	11f24 <mycore_incoming_buffer_find_by_position@@Base+0x40>
   11f40:	bx	lr

00011f44 <mycore_incoming_buffer_data@@Base>:
   11f44:	ldr	r0, [r0]
   11f48:	bx	lr

00011f4c <mycore_incoming_buffer_length@@Base>:
   11f4c:	ldr	r0, [r0, #4]
   11f50:	bx	lr

00011f54 <mycore_incoming_buffer_size@@Base>:
   11f54:	ldr	r0, [r0, #8]
   11f58:	bx	lr

00011f5c <mycore_incoming_buffer_offset@@Base>:
   11f5c:	ldr	r0, [r0, #12]
   11f60:	bx	lr

00011f64 <mycore_incoming_buffer_relative_begin@@Base>:
   11f64:	ldr	r0, [r0, #12]
   11f68:	sub	r0, r1, r0
   11f6c:	bx	lr

00011f70 <mycore_incoming_buffer_available_length@@Base>:
   11f70:	ldr	r0, [r0, #8]
   11f74:	add	r3, r2, r1
   11f78:	cmp	r3, r0
   11f7c:	subhi	r2, r0, r1
   11f80:	mov	r0, r2
   11f84:	bx	lr

00011f88 <mycore_incoming_buffer_next@@Base>:
   11f88:	ldr	r0, [r0, #20]
   11f8c:	bx	lr

00011f90 <mycore_incoming_buffer_prev@@Base>:
   11f90:	ldr	r0, [r0, #16]
   11f94:	bx	lr

00011f98 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base>:
   11f98:	push	{r4, r5, r6, r7, fp, lr}
   11f9c:	add	fp, sp, #16
   11fa0:	ldr	r3, [r0]
   11fa4:	ldr	r2, [r1]
   11fa8:	mov	ip, #0
   11fac:	ldr	r6, [r3, #8]
   11fb0:	cmp	r2, r6
   11fb4:	movcs	r2, #0
   11fb8:	strcs	r2, [r1]
   11fbc:	ldrcs	r3, [r3, #20]
   11fc0:	cmp	r3, #0
   11fc4:	beq	12040 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xa8>
   11fc8:	ldr	lr, [r3]
   11fcc:	ldrb	r6, [lr, r2]
   11fd0:	sub	r4, r6, #48	; 0x30
   11fd4:	cmp	r4, #9
   11fd8:	bhi	12044 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xac>
   11fdc:	ldr	r5, [pc, #108]	; 12050 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xb8>
   11fe0:	mov	ip, #0
   11fe4:	mov	r4, #1
   11fe8:	add	r5, pc, r5
   11fec:	ldrb	r6, [r5, r6]
   11ff0:	add	r2, r2, #1
   11ff4:	str	r2, [r1]
   11ff8:	orr	ip, r6, ip, lsl #4
   11ffc:	ldr	r6, [r3, #8]
   12000:	cmp	r2, r6
   12004:	bcc	12024 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x8c>
   12008:	ldr	r6, [r3, #20]
   1200c:	cmp	r6, #0
   12010:	beq	12044 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xac>
   12014:	mov	r2, #0
   12018:	str	r2, [r1]
   1201c:	ldr	lr, [r3]
   12020:	mov	r3, r6
   12024:	cmp	r4, #5
   12028:	ldrbls	r6, [lr, r2]
   1202c:	addls	r4, r4, #1
   12030:	subls	r7, r6, #48	; 0x30
   12034:	cmpls	r7, #10
   12038:	bcc	11fec <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x54>
   1203c:	b	12044 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xac>
   12040:	mov	r3, #0
   12044:	str	r3, [r0]
   12048:	mov	r0, ip
   1204c:	pop	{r4, r5, r6, r7, fp, pc}
   12050:	andeq	r1, r2, r8, ror #16

00012054 <mycore_incoming_buffer_escaped_case_cmp@@Base>:
   12054:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12058:	add	fp, sp, #28
   1205c:	sub	sp, sp, #4
   12060:	ldr	sl, [r0]
   12064:	mov	ip, r2
   12068:	ldr	r4, [r3]
   1206c:	ldr	r2, [sl, #8]
   12070:	cmp	r4, r2
   12074:	bcc	1208c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x38>
   12078:	ldr	sl, [sl, #20]
   1207c:	cmp	sl, #0
   12080:	beq	121e0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x18c>
   12084:	mov	r4, #0
   12088:	str	r4, [r3]
   1208c:	cmp	ip, #0
   12090:	str	r0, [sp]
   12094:	beq	121d0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x17c>
   12098:	ldr	r7, [sl]
   1209c:	ldr	r0, [pc, #328]	; 121ec <mycore_incoming_buffer_escaped_case_cmp@@Base+0x198>
   120a0:	ldr	r9, [pc, #328]	; 121f0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x19c>
   120a4:	mov	lr, #0
   120a8:	add	r0, pc, r0
   120ac:	add	r9, pc, r9
   120b0:	ldrb	r2, [r7, r4]
   120b4:	cmp	r2, #92	; 0x5c
   120b8:	bne	12158 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x104>
   120bc:	add	r4, r4, #1
   120c0:	str	r4, [r3]
   120c4:	ldr	r2, [sl, #8]
   120c8:	cmp	r4, r2
   120cc:	movcs	r4, #0
   120d0:	strcs	r4, [r3]
   120d4:	ldrcs	sl, [sl, #20]
   120d8:	cmp	sl, #0
   120dc:	beq	12178 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x124>
   120e0:	ldr	r5, [sl]
   120e4:	mov	r7, #0
   120e8:	ldrb	r2, [r5, r4]
   120ec:	sub	r6, r2, #48	; 0x30
   120f0:	cmp	r6, #9
   120f4:	bhi	12180 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x12c>
   120f8:	mov	r6, #1
   120fc:	ldrb	r2, [r9, r2]
   12100:	add	r4, r4, #1
   12104:	str	r4, [r3]
   12108:	orr	r7, r2, r7, lsl #4
   1210c:	ldr	r2, [sl, #8]
   12110:	cmp	r4, r2
   12114:	bcc	12134 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xe0>
   12118:	ldr	r2, [sl, #20]
   1211c:	cmp	r2, #0
   12120:	beq	1214c <mycore_incoming_buffer_escaped_case_cmp@@Base+0xf8>
   12124:	mov	r4, #0
   12128:	str	r4, [r3]
   1212c:	ldr	r5, [sl]
   12130:	mov	sl, r2
   12134:	cmp	r6, #5
   12138:	ldrbls	r2, [r5, r4]
   1213c:	addls	r6, r6, #1
   12140:	subls	r8, r2, #48	; 0x30
   12144:	cmpls	r8, #10
   12148:	bcc	120fc <mycore_incoming_buffer_escaped_case_cmp@@Base+0xa8>
   1214c:	cmp	r7, #255	; 0xff
   12150:	bls	12180 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x12c>
   12154:	b	121d4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x180>
   12158:	ldrb	r5, [r1, lr]
   1215c:	ldrb	r2, [r0, r2]
   12160:	ldrb	r5, [r0, r5]
   12164:	cmp	r2, r5
   12168:	bne	121d4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x180>
   1216c:	add	r4, r4, #1
   12170:	str	r4, [r3]
   12174:	b	12198 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x144>
   12178:	mov	sl, #0
   1217c:	mov	r7, #0
   12180:	ldrb	r5, [r1, lr]
   12184:	ldrb	r2, [r0, r7]
   12188:	ldrb	r5, [r0, r5]
   1218c:	cmp	r2, r5
   12190:	bne	121d4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x180>
   12194:	ldr	r7, [sl]
   12198:	ldr	r2, [sl, #8]
   1219c:	add	lr, lr, #1
   121a0:	cmp	r4, r2
   121a4:	bcc	121c4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x170>
   121a8:	ldr	r2, [sl, #20]
   121ac:	cmp	r2, #0
   121b0:	beq	121d4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x180>
   121b4:	ldr	r7, [r2]
   121b8:	mov	r4, #0
   121bc:	mov	sl, r2
   121c0:	str	r4, [r3]
   121c4:	cmp	lr, ip
   121c8:	bcc	120b0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x5c>
   121cc:	b	121d4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x180>
   121d0:	mov	lr, #0
   121d4:	ldr	r0, [sp]
   121d8:	sub	ip, ip, lr
   121dc:	str	sl, [r0]
   121e0:	mov	r0, ip
   121e4:	sub	sp, fp, #28
   121e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121ec:	andeq	r1, r2, r8, lsr #17
   121f0:	andeq	r1, r2, r4, lsr #15

000121f4 <mycore_string_init@@Base>:
   121f4:	push	{r4, r5, r6, r7, fp, lr}
   121f8:	add	fp, sp, #16
   121fc:	mov	r5, r2
   12200:	mov	r2, r3
   12204:	mov	r4, r3
   12208:	mov	r6, r1
   1220c:	mov	r7, r0
   12210:	bl	1174c <mchar_async_malloc@plt>
   12214:	mov	r1, #0
   12218:	stm	r5, {r0, r4}
   1221c:	str	r1, [r5, #8]
   12220:	str	r7, [r5, #12]
   12224:	str	r6, [r5, #16]
   12228:	pop	{r4, r5, r6, r7, fp, pc}

0001222c <mycore_string_clean@@Base>:
   1222c:	mov	r1, #0
   12230:	str	r1, [r0, #8]
   12234:	bx	lr

00012238 <mycore_string_clean_all@@Base>:
   12238:	vmov.i32	q8, #0	; 0x00000000
   1223c:	mov	r1, #0
   12240:	vst1.32	{d16-d17}, [r0]!
   12244:	str	r1, [r0]
   12248:	bx	lr

0001224c <mycore_string_destroy@@Base>:
   1224c:	push	{r4, r5, r6, sl, fp, lr}
   12250:	add	fp, sp, #16
   12254:	mov	r4, #0
   12258:	cmp	r0, #0
   1225c:	beq	12298 <mycore_string_destroy@@Base+0x4c>
   12260:	ldr	r2, [r0]
   12264:	mov	r5, r0
   12268:	mov	r6, r1
   1226c:	cmp	r2, #0
   12270:	ldrne	r0, [r5, #12]
   12274:	cmpne	r0, #0
   12278:	beq	12284 <mycore_string_destroy@@Base+0x38>
   1227c:	ldr	r1, [r5, #16]
   12280:	bl	115e4 <mchar_async_free@plt>
   12284:	cmp	r6, #0
   12288:	moveq	r0, r5
   1228c:	popeq	{r4, r5, r6, sl, fp, pc}
   12290:	mov	r0, r5
   12294:	bl	11ab8 <mycore_free@plt>
   12298:	mov	r0, r4
   1229c:	pop	{r4, r5, r6, sl, fp, pc}

000122a0 <mycore_string_raw_clean@@Base>:
   122a0:	mov	r1, #0
   122a4:	str	r1, [r0, #8]
   122a8:	bx	lr

000122ac <mycore_string_raw_clean_all@@Base>:
   122ac:	mov	r1, #0
   122b0:	str	r1, [r0]
   122b4:	str	r1, [r0, #4]
   122b8:	str	r1, [r0, #8]
   122bc:	bx	lr

000122c0 <mycore_string_raw_destroy@@Base>:
   122c0:	push	{r4, r5, r6, sl, fp, lr}
   122c4:	add	fp, sp, #16
   122c8:	mov	r4, #0
   122cc:	cmp	r0, #0
   122d0:	beq	12308 <mycore_string_raw_destroy@@Base+0x48>
   122d4:	mov	r5, r0
   122d8:	ldr	r0, [r0]
   122dc:	mov	r6, r1
   122e0:	cmp	r0, #0
   122e4:	beq	122f4 <mycore_string_raw_destroy@@Base+0x34>
   122e8:	bl	11ab8 <mycore_free@plt>
   122ec:	mov	r0, #0
   122f0:	str	r0, [r5]
   122f4:	cmp	r6, #0
   122f8:	moveq	r0, r5
   122fc:	popeq	{r4, r5, r6, sl, fp, pc}
   12300:	mov	r0, r5
   12304:	bl	11ab8 <mycore_free@plt>
   12308:	mov	r0, r4
   1230c:	pop	{r4, r5, r6, sl, fp, pc}

00012310 <mycore_string_realloc@@Base>:
   12310:	push	{r4, r5, r6, sl, fp, lr}
   12314:	add	fp, sp, #16
   12318:	sub	sp, sp, #8
   1231c:	mov	r4, #0
   12320:	cmp	r0, #0
   12324:	beq	12354 <mycore_string_realloc@@Base+0x44>
   12328:	mov	r6, r0
   1232c:	mov	r5, r1
   12330:	ldr	r2, [r0]
   12334:	ldr	r3, [r0, #8]
   12338:	ldr	r0, [r0, #12]
   1233c:	ldr	r1, [r6, #16]
   12340:	str	r5, [sp]
   12344:	bl	110a4 <mchar_async_realloc@plt>
   12348:	cmp	r0, #0
   1234c:	movne	r4, r0
   12350:	stmne	r6, {r0, r5}
   12354:	mov	r0, r4
   12358:	sub	sp, fp, #16
   1235c:	pop	{r4, r5, r6, sl, fp, pc}

00012360 <mycore_string_data_alloc@@Base>:
   12360:	b	1174c <mchar_async_malloc@plt>

00012364 <mycore_string_data_realloc@@Base>:
   12364:	b	110a4 <mchar_async_realloc@plt>

00012368 <mycore_string_data_free@@Base>:
   12368:	b	115e4 <mchar_async_free@plt>

0001236c <mycore_string_data@@Base>:
   1236c:	cmp	r0, #0
   12370:	ldrne	r0, [r0]
   12374:	moveq	r0, #0
   12378:	bx	lr

0001237c <mycore_string_length@@Base>:
   1237c:	cmp	r0, #0
   12380:	ldrne	r0, [r0, #8]
   12384:	moveq	r0, #0
   12388:	bx	lr

0001238c <mycore_string_size@@Base>:
   1238c:	cmp	r0, #0
   12390:	ldrne	r0, [r0, #4]
   12394:	moveq	r0, #0
   12398:	bx	lr

0001239c <mycore_string_data_set@@Base>:
   1239c:	cmp	r0, #0
   123a0:	strne	r1, [r0]
   123a4:	moveq	r1, #0
   123a8:	mov	r0, r1
   123ac:	bx	lr

000123b0 <mycore_string_size_set@@Base>:
   123b0:	cmp	r0, #0
   123b4:	strne	r1, [r0, #4]
   123b8:	moveq	r1, #0
   123bc:	mov	r0, r1
   123c0:	bx	lr

000123c4 <mycore_string_length_set@@Base>:
   123c4:	cmp	r0, #0
   123c8:	strne	r1, [r0, #8]
   123cc:	moveq	r1, #0
   123d0:	mov	r0, r1
   123d4:	bx	lr

000123d8 <mycore_string_append@@Base>:
   123d8:	push	{r4, r5, r6, r7, fp, lr}
   123dc:	add	fp, sp, #16
   123e0:	sub	sp, sp, #8
   123e4:	mov	r5, r0
   123e8:	ldr	r0, [r0, #4]
   123ec:	mov	r6, r1
   123f0:	mov	r4, r2
   123f4:	ldr	r3, [r5, #8]
   123f8:	add	r1, r2, r3
   123fc:	add	r7, r1, #1
   12400:	cmp	r7, r0
   12404:	bcc	12424 <mycore_string_append@@Base+0x4c>
   12408:	ldr	r2, [r5]
   1240c:	ldr	r0, [r5, #12]
   12410:	ldr	r1, [r5, #16]
   12414:	str	r7, [sp]
   12418:	bl	110a4 <mchar_async_realloc@plt>
   1241c:	cmp	r0, #0
   12420:	stmne	r5, {r0, r7}
   12424:	ldr	r0, [r5]
   12428:	ldr	r1, [r5, #8]
   1242c:	mov	r2, r4
   12430:	add	r0, r0, r1
   12434:	mov	r1, r6
   12438:	bl	11050 <memcpy@plt>
   1243c:	ldr	r1, [r5, #8]
   12440:	ldr	r0, [r5]
   12444:	mov	r2, #0
   12448:	add	r1, r1, r4
   1244c:	str	r1, [r5, #8]
   12450:	strb	r2, [r0, r1]
   12454:	sub	sp, fp, #16
   12458:	pop	{r4, r5, r6, r7, fp, pc}

0001245c <mycore_string_append_one@@Base>:
   1245c:	push	{r4, r5, r6, sl, fp, lr}
   12460:	add	fp, sp, #16
   12464:	sub	sp, sp, #8
   12468:	mov	r4, r0
   1246c:	ldr	r0, [r0, #4]
   12470:	mov	r5, r1
   12474:	ldr	r3, [r4, #8]
   12478:	add	r1, r3, #2
   1247c:	cmp	r1, r0
   12480:	bcc	124a4 <mycore_string_append_one@@Base+0x48>
   12484:	ldr	r2, [r4]
   12488:	ldr	r0, [r4, #12]
   1248c:	ldr	r1, [r4, #16]
   12490:	add	r6, r3, #3
   12494:	str	r6, [sp]
   12498:	bl	110a4 <mchar_async_realloc@plt>
   1249c:	cmp	r0, #0
   124a0:	stmne	r4, {r0, r6}
   124a4:	ldr	r0, [r4]
   124a8:	ldr	r1, [r4, #8]
   124ac:	mov	r2, #0
   124b0:	strb	r5, [r0, r1]
   124b4:	ldr	r1, [r4, #8]
   124b8:	ldr	r0, [r4]
   124bc:	add	r1, r1, #1
   124c0:	str	r1, [r4, #8]
   124c4:	strb	r2, [r0, r1]
   124c8:	sub	sp, fp, #16
   124cc:	pop	{r4, r5, r6, sl, fp, pc}

000124d0 <mycore_string_append_lowercase@@Base>:
   124d0:	push	{r4, r5, r6, r7, fp, lr}
   124d4:	add	fp, sp, #16
   124d8:	sub	sp, sp, #8
   124dc:	mov	r5, r0
   124e0:	ldr	r0, [r0, #4]
   124e4:	mov	r6, r1
   124e8:	mov	r4, r2
   124ec:	ldr	r3, [r5, #8]
   124f0:	add	r1, r2, r3
   124f4:	add	r7, r1, #1
   124f8:	cmp	r7, r0
   124fc:	bcc	1251c <mycore_string_append_lowercase@@Base+0x4c>
   12500:	ldr	r2, [r5]
   12504:	ldr	r0, [r5, #12]
   12508:	ldr	r1, [r5, #16]
   1250c:	str	r7, [sp]
   12510:	bl	110a4 <mchar_async_realloc@plt>
   12514:	cmp	r0, #0
   12518:	stmne	r5, {r0, r7}
   1251c:	ldr	r0, [r5]
   12520:	ldr	r1, [r5, #8]
   12524:	cmp	r4, #0
   12528:	add	r0, r0, r1
   1252c:	beq	12554 <mycore_string_append_lowercase@@Base+0x84>
   12530:	ldr	r1, [pc, #56]	; 12570 <mycore_string_append_lowercase@@Base+0xa0>
   12534:	mov	r2, r4
   12538:	mov	r3, r0
   1253c:	add	r1, pc, r1
   12540:	ldrb	r7, [r6], #1
   12544:	subs	r2, r2, #1
   12548:	ldrb	r7, [r1, r7]
   1254c:	strb	r7, [r3], #1
   12550:	bne	12540 <mycore_string_append_lowercase@@Base+0x70>
   12554:	mov	r1, #0
   12558:	strb	r1, [r0, r4]
   1255c:	ldr	r0, [r5, #8]
   12560:	add	r0, r0, r4
   12564:	str	r0, [r5, #8]
   12568:	sub	sp, fp, #16
   1256c:	pop	{r4, r5, r6, r7, fp, pc}
   12570:	andeq	r1, r2, r4, lsl r5

00012574 <mycore_string_copy@@Base>:
   12574:	push	{r4, r5, r6, r7, fp, lr}
   12578:	add	fp, sp, #16
   1257c:	sub	sp, sp, #8
   12580:	mov	r4, r0
   12584:	ldr	r5, [r1, #8]
   12588:	ldr	r0, [r0, #4]
   1258c:	ldr	r6, [r1]
   12590:	ldr	r3, [r4, #8]
   12594:	add	r1, r5, r3
   12598:	add	r7, r1, #1
   1259c:	cmp	r7, r0
   125a0:	bcc	125c0 <mycore_string_copy@@Base+0x4c>
   125a4:	ldr	r2, [r4]
   125a8:	ldr	r0, [r4, #12]
   125ac:	ldr	r1, [r4, #16]
   125b0:	str	r7, [sp]
   125b4:	bl	110a4 <mchar_async_realloc@plt>
   125b8:	cmp	r0, #0
   125bc:	stmne	r4, {r0, r7}
   125c0:	ldr	r0, [r4]
   125c4:	ldr	r1, [r4, #8]
   125c8:	mov	r2, r5
   125cc:	add	r0, r0, r1
   125d0:	mov	r1, r6
   125d4:	bl	11050 <memcpy@plt>
   125d8:	ldr	r1, [r4, #8]
   125dc:	ldr	r0, [r4]
   125e0:	mov	r2, #0
   125e4:	add	r1, r1, r5
   125e8:	str	r1, [r4, #8]
   125ec:	strb	r2, [r0, r1]
   125f0:	sub	sp, fp, #16
   125f4:	pop	{r4, r5, r6, r7, fp, pc}

000125f8 <mycore_string_raw_copy@@Base>:
   125f8:	mov	r3, #0
   125fc:	cmp	r2, #0
   12600:	strb	r3, [r0, r2]
   12604:	beq	12684 <mycore_string_raw_copy@@Base+0x8c>
   12608:	cmp	r2, #16
   1260c:	bcc	12668 <mycore_string_raw_copy@@Base+0x70>
   12610:	add	r3, r1, r2
   12614:	cmp	r3, r0
   12618:	addhi	r3, r0, r2
   1261c:	cmphi	r3, r1
   12620:	bhi	12668 <mycore_string_raw_copy@@Base+0x70>
   12624:	push	{r4, r5, r6, sl, fp, lr}
   12628:	add	fp, sp, #16
   1262c:	sub	r3, r2, #16
   12630:	bic	lr, r2, #15
   12634:	mvn	r5, #15
   12638:	add	ip, r1, r3
   1263c:	add	r4, r0, r3
   12640:	sub	r3, r2, lr
   12644:	mov	r6, lr
   12648:	vld1.8	{d16-d17}, [ip], r5
   1264c:	subs	r6, r6, #16
   12650:	vst1.8	{d16-d17}, [r4], r5
   12654:	bne	12648 <mycore_string_raw_copy@@Base+0x50>
   12658:	cmp	lr, r2
   1265c:	pop	{r4, r5, r6, sl, fp, lr}
   12660:	bne	1266c <mycore_string_raw_copy@@Base+0x74>
   12664:	b	12684 <mycore_string_raw_copy@@Base+0x8c>
   12668:	mov	r3, r2
   1266c:	sub	r1, r1, #1
   12670:	sub	r0, r0, #1
   12674:	ldrb	r2, [r1, r3]
   12678:	strb	r2, [r0, r3]
   1267c:	subs	r3, r3, #1
   12680:	bne	12674 <mycore_string_raw_copy@@Base+0x7c>
   12684:	mov	r0, #0
   12688:	bx	lr

0001268c <mycore_string_raw_set_replacement_character@@Base>:
   1268c:	ldr	r2, [r0]
   12690:	mov	r3, #239	; 0xef
   12694:	strb	r3, [r2, r1]
   12698:	mov	r3, #191	; 0xbf
   1269c:	ldr	r2, [r0]
   126a0:	add	r2, r2, r1
   126a4:	strb	r3, [r2, #1]
   126a8:	ldr	r0, [r0]
   126ac:	add	r0, r0, r1
   126b0:	mov	r1, #189	; 0xbd
   126b4:	strb	r1, [r0, #2]
   126b8:	mov	r0, #3
   126bc:	bx	lr

000126c0 <mycore_string_append_with_replacement_null_characters@@Base>:
   126c0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   126c4:	add	fp, sp, #24
   126c8:	sub	sp, sp, #8
   126cc:	mov	r4, r0
   126d0:	ldr	r0, [r0, #4]
   126d4:	mov	r6, r1
   126d8:	mov	r5, r2
   126dc:	ldr	r3, [r4, #8]
   126e0:	add	r1, r2, r3
   126e4:	add	r7, r1, #1
   126e8:	cmp	r7, r0
   126ec:	bcc	1270c <mycore_string_append_with_replacement_null_characters@@Base+0x4c>
   126f0:	ldr	r2, [r4]
   126f4:	ldr	r0, [r4, #12]
   126f8:	ldr	r1, [r4, #16]
   126fc:	str	r7, [sp]
   12700:	bl	110a4 <mchar_async_realloc@plt>
   12704:	cmp	r0, #0
   12708:	stmne	r4, {r0, r7}
   1270c:	cmp	r5, #0
   12710:	beq	127ac <mycore_string_append_with_replacement_null_characters@@Base+0xec>
   12714:	ldr	r0, [r4]
   12718:	mov	r8, #239	; 0xef
   1271c:	mov	r9, #191	; 0xbf
   12720:	ldrb	r1, [r6]
   12724:	cmp	r1, #0
   12728:	beq	12738 <mycore_string_append_with_replacement_null_characters@@Base+0x78>
   1272c:	ldr	r2, [r4, #8]
   12730:	add	r2, r0, r2
   12734:	b	1278c <mycore_string_append_with_replacement_null_characters@@Base+0xcc>
   12738:	ldm	r4, {r2, r7}
   1273c:	ldr	r3, [r4, #8]
   12740:	ldr	r0, [r4, #12]
   12744:	ldr	r1, [r4, #16]
   12748:	add	r7, r7, #5
   1274c:	str	r7, [sp]
   12750:	bl	110a4 <mchar_async_realloc@plt>
   12754:	cmp	r0, #0
   12758:	stmne	r4, {r0, r7}
   1275c:	ldreq	r0, [r4]
   12760:	ldr	r1, [r4, #8]
   12764:	strb	r8, [r0, r1]
   12768:	ldr	r1, [r4, #8]
   1276c:	add	r1, r1, #1
   12770:	str	r1, [r4, #8]
   12774:	strb	r9, [r0, r1]
   12778:	ldr	r1, [r4, #8]
   1277c:	add	r1, r1, #1
   12780:	str	r1, [r4, #8]
   12784:	add	r2, r0, r1
   12788:	mov	r1, #189	; 0xbd
   1278c:	strb	r1, [r2]
   12790:	subs	r5, r5, #1
   12794:	add	r6, r6, #1
   12798:	ldr	r1, [r4, #8]
   1279c:	add	r1, r1, #1
   127a0:	str	r1, [r4, #8]
   127a4:	bne	12720 <mycore_string_append_with_replacement_null_characters@@Base+0x60>
   127a8:	b	127b0 <mycore_string_append_with_replacement_null_characters@@Base+0xf0>
   127ac:	ldr	r1, [r4, #8]
   127b0:	ldr	r0, [r4]
   127b4:	mov	r2, #0
   127b8:	strb	r2, [r0, r1]
   127bc:	sub	sp, fp, #24
   127c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000127c4 <mycore_string_stay_only_whitespace@@Base>:
   127c4:	push	{r4, r5, r6, sl, fp, lr}
   127c8:	add	fp, sp, #16
   127cc:	ldr	r2, [r0, #8]
   127d0:	cmp	r2, #0
   127d4:	beq	12824 <mycore_string_stay_only_whitespace@@Base+0x60>
   127d8:	ldr	ip, [r0]
   127dc:	movw	r4, #27
   127e0:	mov	r3, #0
   127e4:	mov	lr, #1
   127e8:	mov	r1, #0
   127ec:	movt	r4, #128	; 0x80
   127f0:	ldrb	r5, [ip, r3]
   127f4:	sub	r6, r5, #9
   127f8:	cmp	r6, #23
   127fc:	bhi	12810 <mycore_string_stay_only_whitespace@@Base+0x4c>
   12800:	tst	r4, lr, lsl r6
   12804:	strbne	r5, [ip, r1]
   12808:	addne	r1, r1, #1
   1280c:	ldrne	r2, [r0, #8]
   12810:	add	r3, r3, #1
   12814:	cmp	r3, r2
   12818:	bcc	127f0 <mycore_string_stay_only_whitespace@@Base+0x2c>
   1281c:	str	r1, [r0, #8]
   12820:	pop	{r4, r5, r6, sl, fp, pc}
   12824:	mov	r1, #0
   12828:	str	r1, [r0, #8]
   1282c:	pop	{r4, r5, r6, sl, fp, pc}

00012830 <mycore_string_crop_whitespace_from_begin@@Base>:
   12830:	push	{r4, r5, r6, sl, fp, lr}
   12834:	add	fp, sp, #16
   12838:	ldr	r1, [r0, #8]
   1283c:	mov	r6, r0
   12840:	cmp	r1, #0
   12844:	beq	12884 <mycore_string_crop_whitespace_from_begin@@Base+0x54>
   12848:	ldr	r0, [r6]
   1284c:	movw	r3, #27
   12850:	mov	r5, #0
   12854:	mov	r2, #1
   12858:	movt	r3, #128	; 0x80
   1285c:	ldrb	r4, [r0, r5]
   12860:	sub	r4, r4, #9
   12864:	cmp	r4, #23
   12868:	bhi	12890 <mycore_string_crop_whitespace_from_begin@@Base+0x60>
   1286c:	tst	r3, r2, lsl r4
   12870:	beq	12890 <mycore_string_crop_whitespace_from_begin@@Base+0x60>
   12874:	add	r5, r5, #1
   12878:	cmp	r5, r1
   1287c:	bcc	1285c <mycore_string_crop_whitespace_from_begin@@Base+0x2c>
   12880:	b	12898 <mycore_string_crop_whitespace_from_begin@@Base+0x68>
   12884:	mov	r5, #0
   12888:	mov	r1, #0
   1288c:	b	128a8 <mycore_string_crop_whitespace_from_begin@@Base+0x78>
   12890:	cmp	r5, #0
   12894:	beq	128b8 <mycore_string_crop_whitespace_from_begin@@Base+0x88>
   12898:	mov	r1, r5
   1289c:	bl	11998 <mchar_async_crop_first_chars_without_cache@plt>
   128a0:	str	r0, [r6]
   128a4:	ldr	r1, [r6, #8]
   128a8:	sub	r0, r1, r5
   128ac:	str	r0, [r6, #8]
   128b0:	mov	r0, r5
   128b4:	pop	{r4, r5, r6, sl, fp, pc}
   128b8:	mov	r5, #0
   128bc:	b	128a8 <mycore_string_crop_whitespace_from_begin@@Base+0x78>

000128c0 <mycore_string_whitespace_from_begin@@Base>:
   128c0:	push	{fp, lr}
   128c4:	mov	fp, sp
   128c8:	ldr	r1, [r0, #8]
   128cc:	cmp	r1, #0
   128d0:	moveq	r0, #0
   128d4:	popeq	{fp, pc}
   128d8:	ldr	r2, [r0]
   128dc:	movw	lr, #27
   128e0:	mov	r0, #0
   128e4:	mov	ip, #1
   128e8:	movt	lr, #128	; 0x80
   128ec:	ldrb	r3, [r2, r0]
   128f0:	sub	r3, r3, #9
   128f4:	cmp	r3, #23
   128f8:	bhi	12910 <mycore_string_whitespace_from_begin@@Base+0x50>
   128fc:	tst	lr, ip, lsl r3
   12900:	popeq	{fp, pc}
   12904:	add	r0, r0, #1
   12908:	cmp	r0, r1
   1290c:	bcc	128ec <mycore_string_whitespace_from_begin@@Base+0x2c>
   12910:	pop	{fp, pc}

00012914 <mythread_create@@Base>:
   12914:	mov	r0, #1
   12918:	mov	r1, #40	; 0x28
   1291c:	b	11020 <mycore_calloc@plt>

00012920 <mythread_init@@Base>:
   12920:	push	{r4, sl, fp, lr}
   12924:	add	fp, sp, #8
   12928:	cmp	r2, #0
   1292c:	moveq	r0, #1
   12930:	popeq	{r4, sl, fp, pc}
   12934:	mov	r4, r0
   12938:	mov	r0, #0
   1293c:	stmib	r4, {r0, r2, r3}
   12940:	str	r1, [r4, #32]
   12944:	mov	r0, r2
   12948:	mov	r1, #40	; 0x28
   1294c:	bl	11020 <mycore_calloc@plt>
   12950:	cmp	r0, #0
   12954:	str	r0, [r4]
   12958:	moveq	r0, #2
   1295c:	popeq	{r4, sl, fp, pc}
   12960:	mov	r0, r4
   12964:	bl	10fc0 <mythread_thread_attr_init@plt>
   12968:	cmp	r0, #0
   1296c:	str	r0, [r4, #20]
   12970:	moveq	r0, #12
   12974:	popeq	{r4, sl, fp, pc}
   12978:	mov	r0, r4
   1297c:	bl	10e4c <mythread_nanosleep_create@plt>
   12980:	str	r0, [r4, #24]
   12984:	mov	r0, #0
   12988:	pop	{r4, sl, fp, pc}

0001298c <mythread_clean@@Base>:
   1298c:	push	{r4, sl, fp, lr}
   12990:	add	fp, sp, #8
   12994:	ldr	r1, [r0, #20]
   12998:	mov	r4, r0
   1299c:	bl	113a4 <mythread_thread_attr_clean@plt>
   129a0:	ldr	r0, [r4, #24]
   129a4:	bl	10e1c <mythread_nanosleep_clean@plt>
   129a8:	mov	r0, #0
   129ac:	str	r0, [r4, #28]
   129b0:	pop	{r4, sl, fp, pc}

000129b4 <mythread_destroy@@Base>:
   129b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129b8:	add	fp, sp, #28
   129bc:	sub	sp, sp, #4
   129c0:	mov	sl, #0
   129c4:	cmp	r0, #0
   129c8:	beq	12b10 <mythread_destroy@@Base+0x15c>
   129cc:	mov	r6, r1
   129d0:	ldr	r1, [r0]
   129d4:	mov	r4, r3
   129d8:	mov	r5, r0
   129dc:	cmp	r1, #0
   129e0:	beq	12ae4 <mythread_destroy@@Base+0x130>
   129e4:	str	r4, [sp]
   129e8:	mov	r9, r2
   129ec:	mov	r2, #2
   129f0:	ldr	r0, [r5, #36]	; 0x24
   129f4:	str	r2, [r5, #36]	; 0x24
   129f8:	tst	r0, #1
   129fc:	bne	12a5c <mythread_destroy@@Base+0xa8>
   12a00:	ldr	r0, [r5, #4]
   12a04:	cmp	r0, #0
   12a08:	beq	12a5c <mythread_destroy@@Base+0xa8>
   12a0c:	mov	r7, #1
   12a10:	mov	r4, #0
   12a14:	mov	r8, #2
   12a18:	b	12a28 <mythread_destroy@@Base+0x74>
   12a1c:	ldr	r1, [r5]
   12a20:	add	r4, r4, #40	; 0x28
   12a24:	add	r7, r7, #1
   12a28:	add	r1, r1, r4
   12a2c:	ldr	r2, [r1, #16]
   12a30:	tst	r2, #4
   12a34:	beq	12a54 <mythread_destroy@@Base+0xa0>
   12a38:	str	r8, [r1, #16]
   12a3c:	mov	r0, r5
   12a40:	ldr	r1, [r1, #24]
   12a44:	bl	11a10 <mythread_mutex_post@plt>
   12a48:	cmp	r0, #0
   12a4c:	bne	12a5c <mythread_destroy@@Base+0xa8>
   12a50:	ldr	r0, [r5, #4]
   12a54:	cmp	r7, r0
   12a58:	bcc	12a1c <mythread_destroy@@Base+0x68>
   12a5c:	mov	r0, #2
   12a60:	str	r0, [r5, #36]	; 0x24
   12a64:	ldr	r0, [r5, #4]
   12a68:	cmp	r0, #0
   12a6c:	beq	12ad8 <mythread_destroy@@Base+0x124>
   12a70:	mov	r4, #0
   12a74:	mov	r7, #0
   12a78:	cmp	r6, #0
   12a7c:	beq	12a94 <mythread_destroy@@Base+0xe0>
   12a80:	ldr	r0, [r5]
   12a84:	mov	r2, r9
   12a88:	add	r1, r0, r4
   12a8c:	mov	r0, r5
   12a90:	blx	r6
   12a94:	ldr	r0, [r5]
   12a98:	ldr	r1, [r0, r4]
   12a9c:	mov	r0, r5
   12aa0:	bl	114dc <mythread_thread_join@plt>
   12aa4:	cmp	r0, #0
   12aa8:	bne	12ad8 <mythread_destroy@@Base+0x124>
   12aac:	ldr	r0, [r5]
   12ab0:	ldr	r1, [r0, r4]
   12ab4:	mov	r0, r5
   12ab8:	bl	117e8 <mythread_thread_destroy@plt>
   12abc:	cmp	r0, #0
   12ac0:	bne	12ad8 <mythread_destroy@@Base+0x124>
   12ac4:	ldr	r0, [r5, #4]
   12ac8:	add	r7, r7, #1
   12acc:	add	r4, r4, #40	; 0x28
   12ad0:	cmp	r7, r0
   12ad4:	bcc	12a78 <mythread_destroy@@Base+0xc4>
   12ad8:	ldr	r0, [r5]
   12adc:	bl	11ab8 <mycore_free@plt>
   12ae0:	ldr	r4, [sp]
   12ae4:	ldr	r1, [r5, #20]
   12ae8:	mov	r0, r5
   12aec:	bl	11cb0 <mythread_thread_attr_destroy@plt>
   12af0:	ldr	r0, [r5, #24]
   12af4:	bl	1195c <mythread_nanosleep_destroy@plt>
   12af8:	cmp	r4, #0
   12afc:	beq	12b0c <mythread_destroy@@Base+0x158>
   12b00:	mov	r0, r5
   12b04:	bl	11ab8 <mycore_free@plt>
   12b08:	b	12b10 <mythread_destroy@@Base+0x15c>
   12b0c:	mov	sl, r5
   12b10:	mov	r0, sl
   12b14:	sub	sp, fp, #28
   12b18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012b1c <mythread_resume@@Base>:
   12b1c:	push	{r4, r5, r6, r7, fp, lr}
   12b20:	add	fp, sp, #16
   12b24:	mov	r4, r1
   12b28:	ldr	r1, [r0, #36]	; 0x24
   12b2c:	mov	r5, r0
   12b30:	str	r4, [r0, #36]	; 0x24
   12b34:	mov	r0, #0
   12b38:	tst	r1, #1
   12b3c:	bne	12b9c <mythread_resume@@Base+0x80>
   12b40:	ldr	r1, [r5, #4]
   12b44:	cmp	r1, #0
   12b48:	popeq	{r4, r5, r6, r7, fp, pc}
   12b4c:	mov	r6, #0
   12b50:	mov	r7, #0
   12b54:	ldr	r0, [r5]
   12b58:	add	r0, r0, r6
   12b5c:	ldr	r2, [r0, #16]
   12b60:	tst	r2, #4
   12b64:	beq	12b88 <mythread_resume@@Base+0x6c>
   12b68:	str	r4, [r0, #16]
   12b6c:	ldr	r1, [r0, #24]
   12b70:	mov	r0, r5
   12b74:	bl	11a10 <mythread_mutex_post@plt>
   12b78:	cmp	r0, #0
   12b7c:	movne	r0, #1
   12b80:	popne	{r4, r5, r6, r7, fp, pc}
   12b84:	ldr	r1, [r5, #4]
   12b88:	add	r7, r7, #1
   12b8c:	add	r6, r6, #40	; 0x28
   12b90:	cmp	r7, r1
   12b94:	bcc	12b54 <mythread_resume@@Base+0x38>
   12b98:	mov	r0, #0
   12b9c:	pop	{r4, r5, r6, r7, fp, pc}

00012ba0 <mythread_quit@@Base>:
   12ba0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12ba4:	add	fp, sp, #24
   12ba8:	mov	r6, r0
   12bac:	mov	r0, #2
   12bb0:	str	r0, [r6, #36]	; 0x24
   12bb4:	ldr	r0, [r6, #4]
   12bb8:	cmp	r0, #0
   12bbc:	beq	12c34 <mythread_quit@@Base+0x94>
   12bc0:	mov	r8, r2
   12bc4:	mov	r9, r1
   12bc8:	mov	r4, #0
   12bcc:	mov	r5, #0
   12bd0:	mov	r7, #1
   12bd4:	cmp	r9, #0
   12bd8:	beq	12bf0 <mythread_quit@@Base+0x50>
   12bdc:	ldr	r0, [r6]
   12be0:	mov	r2, r8
   12be4:	add	r1, r0, r4
   12be8:	mov	r0, r6
   12bec:	blx	r9
   12bf0:	ldr	r0, [r6]
   12bf4:	ldr	r1, [r0, r4]
   12bf8:	mov	r0, r6
   12bfc:	bl	114dc <mythread_thread_join@plt>
   12c00:	cmp	r0, #0
   12c04:	bne	12c40 <mythread_quit@@Base+0xa0>
   12c08:	ldr	r0, [r6]
   12c0c:	ldr	r1, [r0, r4]
   12c10:	mov	r0, r6
   12c14:	bl	117e8 <mythread_thread_destroy@plt>
   12c18:	cmp	r0, #0
   12c1c:	bne	12c40 <mythread_quit@@Base+0xa0>
   12c20:	ldr	r0, [r6, #4]
   12c24:	add	r5, r5, #1
   12c28:	add	r4, r4, #40	; 0x28
   12c2c:	cmp	r5, r0
   12c30:	bcc	12bd4 <mythread_quit@@Base+0x34>
   12c34:	mov	r7, #0
   12c38:	mov	r0, r7
   12c3c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12c40:	mov	r0, r7
   12c44:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012c48 <myhread_entry_create@@Base>:
   12c48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c4c:	add	fp, sp, #28
   12c50:	sub	sp, sp, #4
   12c54:	mov	r8, r1
   12c58:	mov	r1, #0
   12c5c:	mov	r4, r0
   12c60:	str	r1, [r0, #28]
   12c64:	ldr	r7, [r0, #4]
   12c68:	ldr	r5, [r0, #8]
   12c6c:	mov	r0, #15
   12c70:	cmp	r7, r5
   12c74:	bcs	12d20 <myhread_entry_create@@Base+0xd8>
   12c78:	ldr	sl, [r4]
   12c7c:	add	r9, r7, r7, lsl #2
   12c80:	mov	r0, r4
   12c84:	add	r6, sl, r9, lsl #3
   12c88:	str	r7, [r6, #4]!
   12c8c:	str	r5, [r6, #8]
   12c90:	str	r2, [r6, #4]
   12c94:	str	r4, [r6, #28]
   12c98:	str	r1, [r6, #16]
   12c9c:	str	r3, [r6, #12]
   12ca0:	bl	10e4c <mythread_nanosleep_create@plt>
   12ca4:	str	r0, [r6, #24]
   12ca8:	mov	r0, r4
   12cac:	bl	118b4 <mythread_mutex_create@plt>
   12cb0:	cmp	r0, #0
   12cb4:	str	r0, [r6, #20]
   12cb8:	moveq	r0, #71	; 0x47
   12cbc:	subeq	sp, fp, #28
   12cc0:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12cc4:	mov	r1, r0
   12cc8:	mov	r0, r4
   12ccc:	add	r5, r6, #20
   12cd0:	bl	11a88 <mythread_mutex_wait@plt>
   12cd4:	cmp	r0, #0
   12cd8:	beq	12cf4 <myhread_entry_create@@Base+0xac>
   12cdc:	ldr	r1, [r5]
   12ce0:	mov	r0, r4
   12ce4:	bl	1153c <mythread_mutex_close@plt>
   12ce8:	mov	r0, #72	; 0x48
   12cec:	sub	sp, fp, #28
   12cf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12cf4:	mov	r0, r4
   12cf8:	mov	r1, r8
   12cfc:	mov	r2, r6
   12d00:	bl	10f0c <mythread_thread_create@plt>
   12d04:	cmp	r0, #0
   12d08:	str	r0, [sl, r9, lsl #3]
   12d0c:	beq	12d28 <myhread_entry_create@@Base+0xe0>
   12d10:	ldr	r0, [r4, #4]
   12d14:	add	r0, r0, #1
   12d18:	str	r0, [r4, #4]
   12d1c:	mov	r0, #0
   12d20:	sub	sp, fp, #28
   12d24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d28:	ldr	r1, [r5]
   12d2c:	mov	r0, r4
   12d30:	bl	1153c <mythread_mutex_close@plt>
   12d34:	mov	r0, #1
   12d38:	sub	sp, fp, #28
   12d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012d40 <myhread_increase_id_by_entry_id@@Base>:
   12d40:	ldr	r0, [r0, #12]
   12d44:	add	r0, r0, r1
   12d48:	bx	lr

00012d4c <mythread_join@@Base>:
   12d4c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12d50:	add	fp, sp, #24
   12d54:	mov	r6, r0
   12d58:	ldr	r0, [r0, #4]
   12d5c:	cmp	r0, #0
   12d60:	moveq	r0, #0
   12d64:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   12d68:	mov	r8, r2
   12d6c:	mov	r5, r1
   12d70:	mov	r7, #0
   12d74:	mov	r4, #0
   12d78:	cmp	r5, #0
   12d7c:	bne	12dbc <mythread_join@@Base+0x70>
   12d80:	ldr	r0, [r6]
   12d84:	ldr	r1, [r0, r7]
   12d88:	mov	r0, r6
   12d8c:	bl	114dc <mythread_thread_join@plt>
   12d90:	cmp	r0, #0
   12d94:	movne	r0, #1
   12d98:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   12d9c:	ldr	r0, [r6, #4]
   12da0:	add	r4, r4, #1
   12da4:	add	r7, r7, #40	; 0x28
   12da8:	cmp	r4, r0
   12dac:	movcs	r0, #0
   12db0:	popcs	{r4, r5, r6, r7, r8, sl, fp, pc}
   12db4:	cmp	r5, #0
   12db8:	beq	12d80 <mythread_join@@Base+0x34>
   12dbc:	ldr	r0, [r6]
   12dc0:	mov	r2, r8
   12dc4:	add	r1, r0, r7
   12dc8:	mov	r0, r6
   12dcc:	blx	r5
   12dd0:	b	12d80 <mythread_join@@Base+0x34>

00012dd4 <mythread_option_set@@Base>:
   12dd4:	str	r1, [r0, #36]	; 0x24
   12dd8:	bx	lr

00012ddc <mythread_stop@@Base>:
   12ddc:	push	{r4, r5, r6, sl, fp, lr}
   12de0:	add	fp, sp, #16
   12de4:	mov	r4, r0
   12de8:	ldr	r0, [r0, #36]	; 0x24
   12dec:	tst	r0, #4
   12df0:	bne	12e50 <mythread_stop@@Base+0x74>
   12df4:	mov	r0, #4
   12df8:	str	r0, [r4, #36]	; 0x24
   12dfc:	ldr	r1, [r4, #4]
   12e00:	cmp	r1, #0
   12e04:	beq	12e50 <mythread_stop@@Base+0x74>
   12e08:	ldr	r0, [r4]
   12e0c:	mov	r5, #0
   12e10:	add	r6, r5, r5, lsl #2
   12e14:	add	r2, r0, r6, lsl #3
   12e18:	ldr	r2, [r2, #16]
   12e1c:	tst	r2, #4
   12e20:	bne	12e44 <mythread_stop@@Base+0x68>
   12e24:	ldr	r0, [r4, #24]
   12e28:	bl	11164 <mythread_nanosleep_sleep@plt>
   12e2c:	ldr	r0, [r4]
   12e30:	add	r1, r0, r6, lsl #3
   12e34:	ldr	r1, [r1, #16]
   12e38:	tst	r1, #4
   12e3c:	beq	12e24 <mythread_stop@@Base+0x48>
   12e40:	ldr	r1, [r4, #4]
   12e44:	add	r5, r5, #1
   12e48:	cmp	r5, r1
   12e4c:	bcc	12e10 <mythread_stop@@Base+0x34>
   12e50:	mov	r0, #0
   12e54:	pop	{r4, r5, r6, sl, fp, pc}

00012e58 <mythread_suspend@@Base>:
   12e58:	push	{r4, r5, r6, sl, fp, lr}
   12e5c:	add	fp, sp, #16
   12e60:	mov	r4, r0
   12e64:	ldr	r0, [r0, #36]	; 0x24
   12e68:	tst	r0, #1
   12e6c:	bne	12ee8 <mythread_suspend@@Base+0x90>
   12e70:	mov	r0, #1
   12e74:	str	r0, [r4, #36]	; 0x24
   12e78:	ldr	r1, [r4, #4]
   12e7c:	cmp	r1, #0
   12e80:	beq	12ee8 <mythread_suspend@@Base+0x90>
   12e84:	ldr	r0, [r4]
   12e88:	mov	r5, #0
   12e8c:	add	r6, r5, r5, lsl #2
   12e90:	add	r2, r0, r6, lsl #3
   12e94:	ldr	r3, [r2, #16]!
   12e98:	tst	r3, #4
   12e9c:	bne	12edc <mythread_suspend@@Base+0x84>
   12ea0:	ldr	r1, [r2]
   12ea4:	tst	r1, #1
   12ea8:	beq	12ebc <mythread_suspend@@Base+0x64>
   12eac:	b	12ed8 <mythread_suspend@@Base+0x80>
   12eb0:	ldr	r1, [r1]
   12eb4:	tst	r1, #1
   12eb8:	bne	12ed8 <mythread_suspend@@Base+0x80>
   12ebc:	ldr	r0, [r4, #24]
   12ec0:	bl	11164 <mythread_nanosleep_sleep@plt>
   12ec4:	ldr	r0, [r4]
   12ec8:	add	r1, r0, r6, lsl #3
   12ecc:	ldr	r2, [r1, #16]!
   12ed0:	tst	r2, #4
   12ed4:	beq	12eb0 <mythread_suspend@@Base+0x58>
   12ed8:	ldr	r1, [r4, #4]
   12edc:	add	r5, r5, #1
   12ee0:	cmp	r5, r1
   12ee4:	bcc	12e8c <mythread_suspend@@Base+0x34>
   12ee8:	mov	r0, #0
   12eec:	pop	{r4, r5, r6, sl, fp, pc}

00012ef0 <mythread_check_status@@Base>:
   12ef0:	ldr	r1, [r0, #4]
   12ef4:	cmp	r1, #0
   12ef8:	moveq	r0, #0
   12efc:	bxeq	lr
   12f00:	ldr	r0, [r0]
   12f04:	mov	r3, #0
   12f08:	add	r2, r0, #20
   12f0c:	ldr	r0, [r2]
   12f10:	cmp	r0, #0
   12f14:	bxne	lr
   12f18:	add	r3, r3, #1
   12f1c:	add	r2, r2, #40	; 0x28
   12f20:	cmp	r3, r1
   12f24:	movcs	r0, #0
   12f28:	bxcs	lr
   12f2c:	b	12f0c <mythread_check_status@@Base+0x1c>

00012f30 <mythread_option@@Base>:
   12f30:	ldr	r0, [r0, #36]	; 0x24
   12f34:	bx	lr

00012f38 <mythread_entry_join@@Base>:
   12f38:	push	{r4, sl, fp, lr}
   12f3c:	add	fp, sp, #8
   12f40:	mov	r4, r0
   12f44:	cmp	r1, #0
   12f48:	beq	12f5c <mythread_entry_join@@Base+0x24>
   12f4c:	ldr	r0, [r4, #32]
   12f50:	mov	r3, r1
   12f54:	mov	r1, r4
   12f58:	blx	r3
   12f5c:	ldr	r1, [r4]
   12f60:	ldr	r0, [r4, #32]
   12f64:	bl	114dc <mythread_thread_join@plt>
   12f68:	cmp	r0, #0
   12f6c:	movwne	r0, #1
   12f70:	pop	{r4, sl, fp, pc}

00012f74 <mythread_entry_quit@@Base>:
   12f74:	push	{r4, sl, fp, lr}
   12f78:	add	fp, sp, #8
   12f7c:	mov	r4, r0
   12f80:	cmp	r1, #0
   12f84:	beq	12f98 <mythread_entry_quit@@Base+0x24>
   12f88:	ldr	r0, [r4, #32]
   12f8c:	mov	r3, r1
   12f90:	mov	r1, r4
   12f94:	blx	r3
   12f98:	ldr	r1, [r4]
   12f9c:	ldr	r0, [r4, #32]
   12fa0:	bl	114dc <mythread_thread_join@plt>
   12fa4:	cmp	r0, #0
   12fa8:	movne	r0, #1
   12fac:	popne	{r4, sl, fp, pc}
   12fb0:	ldr	r1, [r4]
   12fb4:	ldr	r0, [r4, #32]
   12fb8:	bl	117e8 <mythread_thread_destroy@plt>
   12fbc:	cmp	r0, #0
   12fc0:	movwne	r0, #1
   12fc4:	pop	{r4, sl, fp, pc}

00012fc8 <mythread_entry_stop@@Base>:
   12fc8:	push	{r4, sl, fp, lr}
   12fcc:	add	fp, sp, #8
   12fd0:	mov	r4, r0
   12fd4:	ldr	r0, [r0, #16]
   12fd8:	tst	r0, #4
   12fdc:	bne	13004 <mythread_entry_stop@@Base+0x3c>
   12fe0:	mov	r0, #4
   12fe4:	str	r0, [r4, #16]
   12fe8:	b	12ff8 <mythread_entry_stop@@Base+0x30>
   12fec:	ldr	r0, [r4, #32]
   12ff0:	ldr	r0, [r0, #24]
   12ff4:	bl	11164 <mythread_nanosleep_sleep@plt>
   12ff8:	ldr	r0, [r4, #16]
   12ffc:	tst	r0, #4
   13000:	beq	12fec <mythread_entry_stop@@Base+0x24>
   13004:	mov	r0, #0
   13008:	pop	{r4, sl, fp, pc}

0001300c <mythread_entry_suspend@@Base>:
   1300c:	push	{r4, sl, fp, lr}
   13010:	add	fp, sp, #8
   13014:	mov	r4, r0
   13018:	ldr	r0, [r0, #16]
   1301c:	tst	r0, #1
   13020:	bne	13050 <mythread_entry_suspend@@Base+0x44>
   13024:	mov	r0, #1
   13028:	str	r0, [r4, #16]
   1302c:	b	1303c <mythread_entry_suspend@@Base+0x30>
   13030:	ldr	r0, [r4, #32]
   13034:	ldr	r0, [r0, #24]
   13038:	bl	11164 <mythread_nanosleep_sleep@plt>
   1303c:	ldr	r0, [r4, #16]
   13040:	tst	r0, #4
   13044:	ldreq	r0, [r4, #16]
   13048:	tsteq	r0, #1
   1304c:	beq	13030 <mythread_entry_suspend@@Base+0x24>
   13050:	mov	r0, #0
   13054:	pop	{r4, sl, fp, pc}

00013058 <mythread_entry_resume@@Base>:
   13058:	ldr	r2, [r0, #16]
   1305c:	tst	r2, #1
   13060:	bne	130a0 <mythread_entry_resume@@Base+0x48>
   13064:	ldr	r2, [r0, #16]
   13068:	str	r1, [r0, #16]
   1306c:	tst	r2, #4
   13070:	beq	130a4 <mythread_entry_resume@@Base+0x4c>
   13074:	push	{fp, lr}
   13078:	mov	fp, sp
   1307c:	ldr	r1, [r0, #24]
   13080:	ldr	r0, [r0, #32]
   13084:	bl	11a10 <mythread_mutex_post@plt>
   13088:	mov	r1, r0
   1308c:	mov	r0, #1
   13090:	cmp	r1, #0
   13094:	pop	{fp, lr}
   13098:	moveq	r0, #0
   1309c:	bx	lr
   130a0:	str	r1, [r0, #16]
   130a4:	mov	r0, #0
   130a8:	bx	lr

000130ac <mythread_entry_status@@Base>:
   130ac:	ldr	r0, [r0, #20]
   130b0:	bx	lr

000130b4 <mythread_entry_mythread@@Base>:
   130b4:	ldr	r0, [r0, #32]
   130b8:	bx	lr

000130bc <mythread_callback_quit@@Base>:
   130bc:	push	{r4, r5, fp, lr}
   130c0:	add	fp, sp, #8
   130c4:	mov	r5, r0
   130c8:	ldr	r0, [r1, #16]
   130cc:	tst	r0, #2
   130d0:	popne	{r4, r5, fp, pc}
   130d4:	mov	r4, r1
   130d8:	ldr	r0, [r5, #24]
   130dc:	bl	11164 <mythread_nanosleep_sleep@plt>
   130e0:	ldr	r0, [r4, #16]
   130e4:	tst	r0, #2
   130e8:	beq	130d8 <mythread_callback_quit@@Base+0x1c>
   130ec:	pop	{r4, r5, fp, pc}

000130f0 <mythread_queue_create@@Base>:
   130f0:	mov	r0, #1
   130f4:	mov	r1, #28
   130f8:	b	11020 <mycore_calloc@plt>

000130fc <mythread_queue_init@@Base>:
   130fc:	push	{r4, sl, fp, lr}
   13100:	add	fp, sp, #8
   13104:	cmp	r1, #32
   13108:	mov	r4, r0
   1310c:	mov	r0, #512	; 0x200
   13110:	movls	r1, #32
   13114:	str	r0, [r4, #8]
   13118:	mov	r0, #512	; 0x200
   1311c:	str	r1, [r4, #20]
   13120:	mov	r1, #4
   13124:	bl	11020 <mycore_calloc@plt>
   13128:	cmp	r0, #0
   1312c:	str	r0, [r4]
   13130:	moveq	r0, #61	; 0x3d
   13134:	popeq	{r4, sl, fp, pc}
   13138:	ldr	r0, [r4, #20]
   1313c:	add	r0, r0, r0, lsl #1
   13140:	lsl	r0, r0, #2
   13144:	bl	119c8 <mycore_malloc@plt>
   13148:	ldm	r4, {r1, r2}
   1314c:	str	r0, [r1, r2, lsl #2]
   13150:	mov	r0, #0
   13154:	ldr	r1, [r4]
   13158:	ldr	r2, [r1, r2, lsl #2]
   1315c:	cmp	r2, #0
   13160:	popne	{r4, sl, fp, pc}
   13164:	mov	r0, r1
   13168:	bl	11ab8 <mycore_free@plt>
   1316c:	str	r0, [r4]
   13170:	mov	r0, #62	; 0x3e
   13174:	pop	{r4, sl, fp, pc}

00013178 <mythread_queue_clean@@Base>:
   13178:	mov	r1, #0
   1317c:	str	r1, [r0, #24]
   13180:	str	r1, [r0, #4]
   13184:	str	r1, [r0, #12]
   13188:	str	r1, [r0, #16]
   1318c:	bx	lr

00013190 <mythread_queue_destroy@@Base>:
   13190:	cmp	r0, #0
   13194:	beq	131f8 <mythread_queue_destroy@@Base+0x68>
   13198:	push	{r4, r5, fp, lr}
   1319c:	add	fp, sp, #8
   131a0:	mov	r4, r0
   131a4:	ldr	r0, [r0]
   131a8:	cmp	r0, #0
   131ac:	beq	131ec <mythread_queue_destroy@@Base+0x5c>
   131b0:	ldr	r0, [r0]
   131b4:	bl	11ab8 <mycore_free@plt>
   131b8:	ldr	r0, [r4, #4]
   131bc:	cmp	r0, #0
   131c0:	beq	131e4 <mythread_queue_destroy@@Base+0x54>
   131c4:	mov	r5, #1
   131c8:	ldr	r0, [r4]
   131cc:	ldr	r0, [r0, r5, lsl #2]
   131d0:	bl	11ab8 <mycore_free@plt>
   131d4:	ldr	r0, [r4, #4]
   131d8:	add	r5, r5, #1
   131dc:	cmp	r5, r0
   131e0:	bls	131c8 <mythread_queue_destroy@@Base+0x38>
   131e4:	ldr	r0, [r4]
   131e8:	bl	11ab8 <mycore_free@plt>
   131ec:	mov	r0, r4
   131f0:	bl	11ab8 <mycore_free@plt>
   131f4:	pop	{r4, r5, fp, lr}
   131f8:	mov	r0, #0
   131fc:	bx	lr

00013200 <mythread_queue_node_clean@@Base>:
   13200:	mov	r1, #0
   13204:	str	r1, [r0]
   13208:	str	r1, [r0, #4]
   1320c:	str	r1, [r0, #8]
   13210:	bx	lr

00013214 <mythread_queue_get_prev_node@@Base>:
   13214:	ldr	r0, [r0, #8]
   13218:	bx	lr

0001321c <mythread_queue_get_current_node@@Base>:
   1321c:	ldm	r0, {r1, r2}
   13220:	ldr	r0, [r0, #12]
   13224:	ldr	r1, [r1, r2, lsl #2]
   13228:	add	r0, r0, r0, lsl #1
   1322c:	add	r0, r1, r0, lsl #2
   13230:	bx	lr

00013234 <mythread_queue_get_first_node@@Base>:
   13234:	ldr	r0, [r0]
   13238:	ldr	r0, [r0]
   1323c:	bx	lr

00013240 <mythread_queue_count_used_node@@Base>:
   13240:	ldr	r0, [r0, #16]
   13244:	bx	lr

00013248 <mythread_queue_node_malloc@@Base>:
   13248:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1324c:	add	fp, sp, #24
   13250:	mov	r6, r0
   13254:	ldr	r0, [r1, #12]
   13258:	mov	r9, r1
   1325c:	ldr	r1, [r1, #20]
   13260:	add	r0, r0, #1
   13264:	cmp	r0, r1
   13268:	str	r0, [r9, #12]
   1326c:	bcs	1327c <mythread_queue_node_malloc@@Base+0x34>
   13270:	ldr	r6, [r9]
   13274:	ldr	r1, [r9, #4]
   13278:	b	133a8 <mythread_queue_node_malloc@@Base+0x160>
   1327c:	mov	r8, r2
   13280:	ldmib	r9, {r0, r2}
   13284:	add	r1, r0, #1
   13288:	cmp	r1, r2
   1328c:	str	r1, [r9, #4]
   13290:	bcs	1329c <mythread_queue_node_malloc@@Base+0x54>
   13294:	ldr	r6, [r9]
   13298:	b	13368 <mythread_queue_node_malloc@@Base+0x120>
   1329c:	cmp	r6, #0
   132a0:	beq	13328 <mythread_queue_node_malloc@@Base+0xe0>
   132a4:	ldr	r0, [r6, #16]
   132a8:	cmp	r0, #0
   132ac:	ldrne	r7, [r0]
   132b0:	cmpne	r7, #0
   132b4:	beq	13328 <mythread_queue_node_malloc@@Base+0xe0>
   132b8:	ldr	r0, [r6, #4]
   132bc:	mov	r3, r0
   132c0:	cmp	r3, #0
   132c4:	beq	13314 <mythread_queue_node_malloc@@Base+0xcc>
   132c8:	ldm	r7, {r1, r2}
   132cc:	mov	r5, #0
   132d0:	ldr	r3, [r2, r5, lsl #2]
   132d4:	ldr	r4, [r1, #16]
   132d8:	cmp	r3, r4
   132dc:	bcs	13300 <mythread_queue_node_malloc@@Base+0xb8>
   132e0:	ldr	r0, [r6, #24]
   132e4:	bl	11164 <mythread_nanosleep_sleep@plt>
   132e8:	ldm	r7, {r1, r2}
   132ec:	ldr	r0, [r2, r5, lsl #2]
   132f0:	ldr	r3, [r1, #16]
   132f4:	cmp	r0, r3
   132f8:	bcc	132e0 <mythread_queue_node_malloc@@Base+0x98>
   132fc:	ldr	r0, [r6, #4]
   13300:	add	r5, r5, #1
   13304:	mov	r3, r0
   13308:	cmp	r5, r0
   1330c:	bcc	132d0 <mythread_queue_node_malloc@@Base+0x88>
   13310:	b	13318 <mythread_queue_node_malloc@@Base+0xd0>
   13314:	mov	r3, #0
   13318:	ldr	r7, [r7, #12]
   1331c:	cmp	r7, #0
   13320:	bne	132c0 <mythread_queue_node_malloc@@Base+0x78>
   13324:	ldr	r2, [r9, #8]
   13328:	ldr	r0, [r9]
   1332c:	add	r5, r2, #512	; 0x200
   13330:	lsl	r1, r5, #2
   13334:	bl	10db0 <mycore_realloc@plt>
   13338:	cmp	r0, #0
   1333c:	beq	133c4 <mythread_queue_node_malloc@@Base+0x17c>
   13340:	ldr	r1, [r9, #4]
   13344:	mov	r6, r0
   13348:	add	r0, r0, r1, lsl #2
   1334c:	sub	r1, r5, r1
   13350:	lsl	r2, r1, #2
   13354:	mov	r1, #0
   13358:	bl	116ec <memset@plt>
   1335c:	str	r6, [r9]
   13360:	str	r5, [r9, #8]
   13364:	ldr	r1, [r9, #4]
   13368:	ldr	r0, [r6, r1, lsl #2]
   1336c:	cmp	r0, #0
   13370:	bne	133a0 <mythread_queue_node_malloc@@Base+0x158>
   13374:	ldr	r0, [r9, #20]
   13378:	add	r0, r0, r0, lsl #1
   1337c:	lsl	r0, r0, #2
   13380:	bl	119c8 <mycore_malloc@plt>
   13384:	ldr	r2, [r9]
   13388:	ldr	r1, [r9, #4]
   1338c:	str	r0, [r2, r1, lsl #2]
   13390:	ldr	r6, [r9]
   13394:	ldr	r0, [r6, r1, lsl #2]
   13398:	cmp	r0, #0
   1339c:	beq	133dc <mythread_queue_node_malloc@@Base+0x194>
   133a0:	mov	r0, #0
   133a4:	str	r0, [r9, #12]
   133a8:	ldr	r2, [r9, #16]
   133ac:	add	r0, r0, r0, lsl #1
   133b0:	add	r2, r2, #1
   133b4:	str	r2, [r9, #16]
   133b8:	ldr	r1, [r6, r1, lsl #2]
   133bc:	add	r0, r1, r0, lsl #2
   133c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   133c4:	cmp	r8, #0
   133c8:	mov	r0, #0
   133cc:	movne	r1, #61	; 0x3d
   133d0:	strne	r1, [r8]
   133d4:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   133d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   133dc:	cmp	r8, #0
   133e0:	mov	r0, #0
   133e4:	movne	r1, #62	; 0x3e
   133e8:	strne	r1, [r8]
   133ec:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   133f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000133f4 <mythread_queue_list_wait_for_done@@Base>:
   133f4:	push	{r4, r5, r6, sl, fp, lr}
   133f8:	add	fp, sp, #16
   133fc:	cmp	r1, #0
   13400:	ldrne	r5, [r1]
   13404:	cmpne	r5, #0
   13408:	bne	13410 <mythread_queue_list_wait_for_done@@Base+0x1c>
   1340c:	pop	{r4, r5, r6, sl, fp, pc}
   13410:	ldr	ip, [r0, #4]
   13414:	mov	r4, r0
   13418:	mov	r3, ip
   1341c:	cmp	r3, #0
   13420:	bne	1343c <mythread_queue_list_wait_for_done@@Base+0x48>
   13424:	b	13488 <mythread_queue_list_wait_for_done@@Base+0x94>
   13428:	ldr	r5, [r5, #12]
   1342c:	cmp	r5, #0
   13430:	popeq	{r4, r5, r6, sl, fp, pc}
   13434:	cmp	r3, #0
   13438:	beq	13488 <mythread_queue_list_wait_for_done@@Base+0x94>
   1343c:	ldm	r5, {r1, r2}
   13440:	mov	r6, #0
   13444:	ldr	r3, [r2, r6, lsl #2]
   13448:	ldr	r0, [r1, #16]
   1344c:	cmp	r3, r0
   13450:	bcs	13474 <mythread_queue_list_wait_for_done@@Base+0x80>
   13454:	ldr	r0, [r4, #24]
   13458:	bl	11164 <mythread_nanosleep_sleep@plt>
   1345c:	ldm	r5, {r1, r2}
   13460:	ldr	r0, [r2, r6, lsl #2]
   13464:	ldr	r3, [r1, #16]
   13468:	cmp	r0, r3
   1346c:	bcc	13454 <mythread_queue_list_wait_for_done@@Base+0x60>
   13470:	ldr	ip, [r4, #4]
   13474:	add	r6, r6, #1
   13478:	mov	r3, ip
   1347c:	cmp	r6, ip
   13480:	bcc	13444 <mythread_queue_list_wait_for_done@@Base+0x50>
   13484:	b	13428 <mythread_queue_list_wait_for_done@@Base+0x34>
   13488:	mov	r3, #0
   1348c:	b	13428 <mythread_queue_list_wait_for_done@@Base+0x34>

00013490 <mythread_queue_node_malloc_limit@@Base>:
   13490:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13494:	add	fp, sp, #24
   13498:	mov	r5, r0
   1349c:	ldr	r0, [r1, #12]
   134a0:	mov	r9, r1
   134a4:	ldr	r1, [r1, #16]
   134a8:	add	r0, r0, #1
   134ac:	cmp	r1, r2
   134b0:	str	r0, [r9, #12]
   134b4:	bcs	134e8 <mythread_queue_node_malloc_limit@@Base+0x58>
   134b8:	ldr	r1, [r9, #4]
   134bc:	ldr	r2, [r9, #20]
   134c0:	cmp	r0, r2
   134c4:	bcc	136a4 <mythread_queue_node_malloc_limit@@Base+0x214>
   134c8:	add	r1, r1, #1
   134cc:	mov	r8, r3
   134d0:	str	r1, [r9, #4]
   134d4:	ldr	r2, [r9, #8]
   134d8:	cmp	r1, r2
   134dc:	bcs	13598 <mythread_queue_node_malloc_limit@@Base+0x108>
   134e0:	ldr	r5, [r9]
   134e4:	b	13664 <mythread_queue_node_malloc_limit@@Base+0x1d4>
   134e8:	ldr	r0, [r9, #16]
   134ec:	cmp	r5, #0
   134f0:	add	r0, r0, #1
   134f4:	str	r0, [r9, #16]
   134f8:	beq	1357c <mythread_queue_node_malloc_limit@@Base+0xec>
   134fc:	ldr	r0, [r5, #16]
   13500:	cmp	r0, #0
   13504:	ldrne	r6, [r0]
   13508:	cmpne	r6, #0
   1350c:	beq	1357c <mythread_queue_node_malloc_limit@@Base+0xec>
   13510:	ldr	r0, [r5, #4]
   13514:	mov	r3, r0
   13518:	cmp	r3, #0
   1351c:	beq	1356c <mythread_queue_node_malloc_limit@@Base+0xdc>
   13520:	ldm	r6, {r1, r2}
   13524:	mov	r7, #0
   13528:	ldr	r3, [r2, r7, lsl #2]
   1352c:	ldr	r4, [r1, #16]
   13530:	cmp	r3, r4
   13534:	bcs	13558 <mythread_queue_node_malloc_limit@@Base+0xc8>
   13538:	ldr	r0, [r5, #24]
   1353c:	bl	11164 <mythread_nanosleep_sleep@plt>
   13540:	ldm	r6, {r1, r2}
   13544:	ldr	r0, [r2, r7, lsl #2]
   13548:	ldr	r3, [r1, #16]
   1354c:	cmp	r0, r3
   13550:	bcc	13538 <mythread_queue_node_malloc_limit@@Base+0xa8>
   13554:	ldr	r0, [r5, #4]
   13558:	add	r7, r7, #1
   1355c:	mov	r3, r0
   13560:	cmp	r7, r0
   13564:	bcc	13528 <mythread_queue_node_malloc_limit@@Base+0x98>
   13568:	b	13570 <mythread_queue_node_malloc_limit@@Base+0xe0>
   1356c:	mov	r3, #0
   13570:	ldr	r6, [r6, #12]
   13574:	cmp	r6, #0
   13578:	bne	13518 <mythread_queue_node_malloc_limit@@Base+0x88>
   1357c:	mov	r0, #0
   13580:	mov	r1, #0
   13584:	str	r0, [r9, #24]
   13588:	str	r0, [r9, #4]
   1358c:	str	r0, [r9, #12]
   13590:	str	r0, [r9, #16]
   13594:	b	136a4 <mythread_queue_node_malloc_limit@@Base+0x214>
   13598:	cmp	r5, #0
   1359c:	beq	13624 <mythread_queue_node_malloc_limit@@Base+0x194>
   135a0:	ldr	r0, [r5, #16]
   135a4:	cmp	r0, #0
   135a8:	ldrne	r7, [r0]
   135ac:	cmpne	r7, #0
   135b0:	beq	13624 <mythread_queue_node_malloc_limit@@Base+0x194>
   135b4:	ldr	r0, [r5, #4]
   135b8:	mov	r3, r0
   135bc:	cmp	r3, #0
   135c0:	beq	13610 <mythread_queue_node_malloc_limit@@Base+0x180>
   135c4:	ldm	r7, {r1, r2}
   135c8:	mov	r6, #0
   135cc:	ldr	r3, [r2, r6, lsl #2]
   135d0:	ldr	r4, [r1, #16]
   135d4:	cmp	r3, r4
   135d8:	bcs	135fc <mythread_queue_node_malloc_limit@@Base+0x16c>
   135dc:	ldr	r0, [r5, #24]
   135e0:	bl	11164 <mythread_nanosleep_sleep@plt>
   135e4:	ldm	r7, {r1, r2}
   135e8:	ldr	r0, [r2, r6, lsl #2]
   135ec:	ldr	r3, [r1, #16]
   135f0:	cmp	r0, r3
   135f4:	bcc	135dc <mythread_queue_node_malloc_limit@@Base+0x14c>
   135f8:	ldr	r0, [r5, #4]
   135fc:	add	r6, r6, #1
   13600:	mov	r3, r0
   13604:	cmp	r6, r0
   13608:	bcc	135cc <mythread_queue_node_malloc_limit@@Base+0x13c>
   1360c:	b	13614 <mythread_queue_node_malloc_limit@@Base+0x184>
   13610:	mov	r3, #0
   13614:	ldr	r7, [r7, #12]
   13618:	cmp	r7, #0
   1361c:	bne	135bc <mythread_queue_node_malloc_limit@@Base+0x12c>
   13620:	ldr	r2, [r9, #8]
   13624:	ldr	r0, [r9]
   13628:	add	r6, r2, #512	; 0x200
   1362c:	lsl	r1, r6, #2
   13630:	bl	10db0 <mycore_realloc@plt>
   13634:	cmp	r0, #0
   13638:	beq	136c4 <mythread_queue_node_malloc_limit@@Base+0x234>
   1363c:	ldr	r1, [r9, #4]
   13640:	mov	r5, r0
   13644:	add	r0, r0, r1, lsl #2
   13648:	sub	r1, r6, r1
   1364c:	lsl	r2, r1, #2
   13650:	mov	r1, #0
   13654:	bl	116ec <memset@plt>
   13658:	str	r5, [r9]
   1365c:	str	r6, [r9, #8]
   13660:	ldr	r1, [r9, #4]
   13664:	ldr	r0, [r5, r1, lsl #2]
   13668:	cmp	r0, #0
   1366c:	bne	1369c <mythread_queue_node_malloc_limit@@Base+0x20c>
   13670:	ldr	r0, [r9, #20]
   13674:	add	r0, r0, r0, lsl #1
   13678:	lsl	r0, r0, #2
   1367c:	bl	119c8 <mycore_malloc@plt>
   13680:	ldr	r2, [r9]
   13684:	ldr	r1, [r9, #4]
   13688:	str	r0, [r2, r1, lsl #2]
   1368c:	ldr	r0, [r9]
   13690:	ldr	r0, [r0, r1, lsl #2]
   13694:	cmp	r0, #0
   13698:	beq	136dc <mythread_queue_node_malloc_limit@@Base+0x24c>
   1369c:	mov	r0, #0
   136a0:	str	r0, [r9, #12]
   136a4:	ldr	r2, [r9]
   136a8:	ldr	r3, [r9, #16]
   136ac:	add	r0, r0, r0, lsl #1
   136b0:	add	r3, r3, #1
   136b4:	str	r3, [r9, #16]
   136b8:	ldr	r1, [r2, r1, lsl #2]
   136bc:	add	r0, r1, r0, lsl #2
   136c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   136c4:	cmp	r8, #0
   136c8:	mov	r0, #0
   136cc:	movne	r1, #61	; 0x3d
   136d0:	strne	r1, [r8]
   136d4:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   136d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   136dc:	cmp	r8, #0
   136e0:	mov	r0, #0
   136e4:	movne	r1, #62	; 0x3e
   136e8:	strne	r1, [r8]
   136ec:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   136f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000136f4 <mythread_queue_node_malloc_round@@Base>:
   136f4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   136f8:	add	fp, sp, #24
   136fc:	ldr	r8, [r1]
   13700:	mov	r5, r0
   13704:	mov	r4, r1
   13708:	ldr	r0, [r8, #12]
   1370c:	add	r0, r0, #1
   13710:	str	r0, [r8, #12]
   13714:	ldr	r1, [r8, #20]
   13718:	ldr	r2, [r8, #16]
   1371c:	add	r2, r2, #1
   13720:	cmp	r0, r1
   13724:	str	r2, [r8, #16]
   13728:	bcc	137ac <mythread_queue_node_malloc_round@@Base+0xb8>
   1372c:	cmp	r5, #0
   13730:	mov	r0, r8
   13734:	beq	13798 <mythread_queue_node_malloc_round@@Base+0xa4>
   13738:	ldr	r2, [r4, #8]
   1373c:	mov	r0, r8
   13740:	cmp	r2, #0
   13744:	beq	13798 <mythread_queue_node_malloc_round@@Base+0xa4>
   13748:	ldr	r1, [r4, #4]
   1374c:	mov	r7, #0
   13750:	mov	r0, r8
   13754:	ldr	r3, [r1, r7, lsl #2]
   13758:	ldr	r6, [r0, #16]
   1375c:	cmp	r3, r6
   13760:	bcs	13784 <mythread_queue_node_malloc_round@@Base+0x90>
   13764:	ldr	r0, [r5, #24]
   13768:	bl	11164 <mythread_nanosleep_sleep@plt>
   1376c:	ldm	r4, {r0, r1}
   13770:	ldr	r2, [r1, r7, lsl #2]
   13774:	ldr	r3, [r0, #16]
   13778:	cmp	r2, r3
   1377c:	bcc	13764 <mythread_queue_node_malloc_round@@Base+0x70>
   13780:	ldr	r2, [r4, #8]
   13784:	add	r7, r7, #1
   13788:	cmp	r7, r2
   1378c:	bcc	13754 <mythread_queue_node_malloc_round@@Base+0x60>
   13790:	cmp	r4, #0
   13794:	beq	137ac <mythread_queue_node_malloc_round@@Base+0xb8>
   13798:	mov	r1, #0
   1379c:	str	r1, [r0, #24]
   137a0:	str	r1, [r0, #4]
   137a4:	str	r1, [r0, #12]
   137a8:	str	r1, [r0, #16]
   137ac:	ldm	r8, {r0, r1}
   137b0:	ldr	r2, [r8, #12]
   137b4:	ldr	r0, [r0, r1, lsl #2]
   137b8:	add	r1, r2, r2, lsl #1
   137bc:	add	r0, r0, r1, lsl #2
   137c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000137c4 <mythread_queue_list_entry_wait_for_done@@Base>:
   137c4:	push	{r4, r5, r6, sl, fp, lr}
   137c8:	add	fp, sp, #16
   137cc:	cmp	r1, #0
   137d0:	beq	1382c <mythread_queue_list_entry_wait_for_done@@Base+0x68>
   137d4:	ldr	ip, [r1, #8]
   137d8:	mov	r4, r1
   137dc:	cmp	ip, #0
   137e0:	popeq	{r4, r5, r6, sl, fp, pc}
   137e4:	mov	r5, r0
   137e8:	ldm	r4, {r0, r1}
   137ec:	mov	r6, #0
   137f0:	ldr	r3, [r1, r6, lsl #2]
   137f4:	ldr	r2, [r0, #16]
   137f8:	cmp	r3, r2
   137fc:	bcs	13820 <mythread_queue_list_entry_wait_for_done@@Base+0x5c>
   13800:	ldr	r0, [r5, #24]
   13804:	bl	11164 <mythread_nanosleep_sleep@plt>
   13808:	ldm	r4, {r0, r1}
   1380c:	ldr	r2, [r1, r6, lsl #2]
   13810:	ldr	r3, [r0, #16]
   13814:	cmp	r2, r3
   13818:	bcc	13800 <mythread_queue_list_entry_wait_for_done@@Base+0x3c>
   1381c:	ldr	ip, [r4, #8]
   13820:	add	r6, r6, #1
   13824:	cmp	r6, ip
   13828:	bcc	137f0 <mythread_queue_list_entry_wait_for_done@@Base+0x2c>
   1382c:	pop	{r4, r5, r6, sl, fp, pc}

00013830 <mythread_queue_list_entry_clean@@Base>:
   13830:	cmp	r0, #0
   13834:	bxeq	lr
   13838:	ldr	r0, [r0]
   1383c:	mov	r1, #0
   13840:	str	r1, [r0, #24]
   13844:	str	r1, [r0, #4]
   13848:	str	r1, [r0, #12]
   1384c:	str	r1, [r0, #16]
   13850:	bx	lr

00013854 <mythread_queue_list_create@@Base>:
   13854:	mov	r0, #1
   13858:	mov	r1, #12
   1385c:	b	11020 <mycore_calloc@plt>

00013860 <mythread_queue_list_destroy@@Base>:
   13860:	cmp	r0, #0
   13864:	bxeq	lr
   13868:	b	11ab8 <mycore_free@plt>

0001386c <mythread_queue_list_get_count@@Base>:
   1386c:	ldr	r0, [r0, #8]
   13870:	bx	lr

00013874 <mythread_queue_list_see_for_done@@Base>:
   13874:	push	{r4, r5, fp, lr}
   13878:	add	fp, sp, #8
   1387c:	cmp	r1, #0
   13880:	mov	r2, r0
   13884:	mov	r0, #1
   13888:	ldrne	ip, [r1]
   1388c:	cmpne	ip, #0
   13890:	bne	13898 <mythread_queue_list_see_for_done@@Base+0x24>
   13894:	pop	{r4, r5, fp, pc}
   13898:	ldr	lr, [r2, #4]
   1389c:	cmp	lr, #0
   138a0:	bne	138b8 <mythread_queue_list_see_for_done@@Base+0x44>
   138a4:	ldr	ip, [ip, #12]
   138a8:	cmp	ip, #0
   138ac:	popeq	{r4, r5, fp, pc}
   138b0:	cmp	lr, #0
   138b4:	beq	138a4 <mythread_queue_list_see_for_done@@Base+0x30>
   138b8:	ldr	r3, [ip]
   138bc:	ldr	r1, [ip, #4]
   138c0:	mov	r2, #0
   138c4:	ldr	r4, [r1, r2, lsl #2]
   138c8:	ldr	r5, [r3, #16]
   138cc:	cmp	r4, r5
   138d0:	movcc	r0, #0
   138d4:	popcc	{r4, r5, fp, pc}
   138d8:	add	r2, r2, #1
   138dc:	cmp	r2, lr
   138e0:	bcc	138c4 <mythread_queue_list_see_for_done@@Base+0x50>
   138e4:	b	138a4 <mythread_queue_list_see_for_done@@Base+0x30>

000138e8 <mythread_queue_list_see_for_done_by_thread@@Base>:
   138e8:	push	{fp, lr}
   138ec:	mov	fp, sp
   138f0:	mov	r0, #1
   138f4:	cmp	r1, #0
   138f8:	beq	1392c <mythread_queue_list_see_for_done_by_thread@@Base+0x44>
   138fc:	ldr	r1, [r1]
   13900:	b	13908 <mythread_queue_list_see_for_done_by_thread@@Base+0x20>
   13904:	ldr	r1, [r1, #12]
   13908:	cmp	r1, #0
   1390c:	popeq	{fp, pc}
   13910:	ldr	ip, [r1]
   13914:	ldr	r3, [r1, #4]
   13918:	ldr	lr, [r3, r2, lsl #2]
   1391c:	ldr	r3, [ip, #16]
   13920:	cmp	lr, r3
   13924:	bcs	13904 <mythread_queue_list_see_for_done_by_thread@@Base+0x1c>
   13928:	mov	r0, #0
   1392c:	pop	{fp, pc}

00013930 <mythread_queue_list_entry_push@@Base>:
   13930:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13934:	add	fp, sp, #28
   13938:	sub	sp, sp, #4
   1393c:	ldr	r4, [fp, #12]
   13940:	mov	r8, r0
   13944:	mov	sl, r1
   13948:	mov	r1, #20
   1394c:	mov	r7, r3
   13950:	str	r2, [sp]
   13954:	cmp	r4, #0
   13958:	movne	r0, #0
   1395c:	strne	r0, [r4]
   13960:	mov	r0, #1
   13964:	bl	11020 <mycore_calloc@plt>
   13968:	cmp	r0, #0
   1396c:	beq	139a0 <mythread_queue_list_entry_push@@Base+0x70>
   13970:	mov	r9, r0
   13974:	ldr	r0, [fp, #8]
   13978:	cmp	r0, #0
   1397c:	str	r0, [r9, #8]
   13980:	beq	139b4 <mythread_queue_list_entry_push@@Base+0x84>
   13984:	mov	r1, #4
   13988:	bl	11020 <mycore_calloc@plt>
   1398c:	cmp	r0, #0
   13990:	str	r0, [r9, #4]
   13994:	bne	139bc <mythread_queue_list_entry_push@@Base+0x8c>
   13998:	mov	r0, r9
   1399c:	bl	11ab8 <mycore_free@plt>
   139a0:	cmp	r4, #0
   139a4:	mov	r9, #0
   139a8:	movne	r0, #60	; 0x3c
   139ac:	strne	r0, [r4]
   139b0:	b	13aac <mythread_queue_list_entry_push@@Base+0x17c>
   139b4:	mov	r0, #0
   139b8:	str	r0, [r9, #4]
   139bc:	cmp	sl, #0
   139c0:	str	r7, [r9]
   139c4:	beq	13a48 <mythread_queue_list_entry_push@@Base+0x118>
   139c8:	mov	r7, #0
   139cc:	mov	r4, #0
   139d0:	ldr	r0, [r8, r4, lsl #2]
   139d4:	ldr	r3, [r0, #32]
   139d8:	ldr	r1, [r0, #4]
   139dc:	ldr	r2, [r0, #12]
   139e0:	cmp	r3, #1
   139e4:	bne	13a14 <mythread_queue_list_entry_push@@Base+0xe4>
   139e8:	cmp	r2, r1
   139ec:	bhi	13a38 <mythread_queue_list_entry_push@@Base+0x108>
   139f0:	ldr	r3, [r9, #4]
   139f4:	mov	r5, #0
   139f8:	add	r3, r3, r2, lsl #2
   139fc:	str	r5, [r3, r5, lsl #2]
   13a00:	add	r5, r5, #1
   13a04:	add	r6, r2, r5
   13a08:	cmp	r6, r1
   13a0c:	bls	139fc <mythread_queue_list_entry_push@@Base+0xcc>
   13a10:	b	13a30 <mythread_queue_list_entry_push@@Base+0x100>
   13a14:	cmp	r2, r1
   13a18:	bhi	13a38 <mythread_queue_list_entry_push@@Base+0x108>
   13a1c:	ldr	r3, [r9, #4]
   13a20:	str	r7, [r3, r2, lsl #2]
   13a24:	add	r2, r2, #1
   13a28:	cmp	r2, r1
   13a2c:	bls	13a20 <mythread_queue_list_entry_push@@Base+0xf0>
   13a30:	cmp	r0, #0
   13a34:	beq	13a3c <mythread_queue_list_entry_push@@Base+0x10c>
   13a38:	bl	11194 <mythread_suspend@plt>
   13a3c:	add	r4, r4, #1
   13a40:	cmp	r4, sl
   13a44:	bne	139d0 <mythread_queue_list_entry_push@@Base+0xa0>
   13a48:	ldr	r2, [sp]
   13a4c:	ldr	r0, [r2]
   13a50:	cmp	r0, #0
   13a54:	beq	13a6c <mythread_queue_list_entry_push@@Base+0x13c>
   13a58:	mov	r0, r2
   13a5c:	ldr	r1, [r0, #4]!
   13a60:	str	r9, [r1, #12]
   13a64:	str	r1, [r9, #16]
   13a68:	b	13a74 <mythread_queue_list_entry_push@@Base+0x144>
   13a6c:	mov	r0, r2
   13a70:	str	r9, [r0], #4
   13a74:	str	r9, [r0]
   13a78:	cmp	sl, #0
   13a7c:	ldr	r0, [r2, #8]
   13a80:	add	r0, r0, #1
   13a84:	str	r0, [r2, #8]
   13a88:	beq	13aac <mythread_queue_list_entry_push@@Base+0x17c>
   13a8c:	ldr	r0, [r8]
   13a90:	cmp	r0, #0
   13a94:	beq	13aa0 <mythread_queue_list_entry_push@@Base+0x170>
   13a98:	mov	r1, #0
   13a9c:	bl	11440 <mythread_resume@plt>
   13aa0:	subs	sl, sl, #1
   13aa4:	add	r8, r8, #4
   13aa8:	bne	13a8c <mythread_queue_list_entry_push@@Base+0x15c>
   13aac:	mov	r0, r9
   13ab0:	sub	sp, fp, #28
   13ab4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013ab8 <mythread_queue_list_entry_make_batch@@Base>:
   13ab8:	cmp	r1, #0
   13abc:	beq	13af0 <mythread_queue_list_entry_make_batch@@Base+0x38>
   13ac0:	ldr	ip, [r0, #4]
   13ac4:	ldr	r0, [r0, #12]
   13ac8:	cmp	r0, ip
   13acc:	bxhi	lr
   13ad0:	ldr	r1, [r1, #4]
   13ad4:	mov	r3, #0
   13ad8:	add	r1, r1, r0, lsl #2
   13adc:	str	r3, [r1, r3, lsl #2]
   13ae0:	add	r3, r3, #1
   13ae4:	add	r2, r0, r3
   13ae8:	cmp	r2, ip
   13aec:	bls	13adc <mythread_queue_list_entry_make_batch@@Base+0x24>
   13af0:	bx	lr

00013af4 <mythread_queue_list_entry_make_stream@@Base>:
   13af4:	cmp	r1, #0
   13af8:	beq	13b24 <mythread_queue_list_entry_make_stream@@Base+0x30>
   13afc:	ldr	r2, [r0, #4]
   13b00:	ldr	r0, [r0, #12]
   13b04:	cmp	r0, r2
   13b08:	bxhi	lr
   13b0c:	ldr	r1, [r1, #4]
   13b10:	mov	r3, #0
   13b14:	str	r3, [r1, r0, lsl #2]
   13b18:	add	r0, r0, #1
   13b1c:	cmp	r0, r2
   13b20:	bls	13b14 <mythread_queue_list_entry_make_stream@@Base+0x20>
   13b24:	bx	lr

00013b28 <mythread_queue_list_entry_delete@@Base>:
   13b28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b2c:	add	fp, sp, #28
   13b30:	sub	sp, sp, #4
   13b34:	mov	r9, r3
   13b38:	mov	sl, r2
   13b3c:	mov	r4, r1
   13b40:	mov	r7, r0
   13b44:	cmp	r1, #0
   13b48:	beq	13b70 <mythread_queue_list_entry_delete@@Base+0x48>
   13b4c:	mov	r5, r4
   13b50:	mov	r6, r7
   13b54:	ldr	r0, [r6]
   13b58:	cmp	r0, #0
   13b5c:	beq	13b64 <mythread_queue_list_entry_delete@@Base+0x3c>
   13b60:	bl	11194 <mythread_suspend@plt>
   13b64:	subs	r5, r5, #1
   13b68:	add	r6, r6, #4
   13b6c:	bne	13b54 <mythread_queue_list_entry_delete@@Base+0x2c>
   13b70:	ldr	r0, [r9, #16]
   13b74:	ldr	r1, [r9, #12]
   13b78:	ldr	r8, [fp, #8]
   13b7c:	cmp	r0, #0
   13b80:	strne	r1, [r0, #12]
   13b84:	cmp	r1, #0
   13b88:	strne	r0, [r1, #16]
   13b8c:	ldr	r2, [sl]
   13b90:	cmp	r2, r9
   13b94:	streq	r1, [sl]
   13b98:	ldr	r1, [sl, #4]
   13b9c:	cmp	r1, r9
   13ba0:	streq	r0, [sl, #4]
   13ba4:	cmp	r4, #0
   13ba8:	ldr	r0, [sl, #8]
   13bac:	sub	r0, r0, #1
   13bb0:	str	r0, [sl, #8]
   13bb4:	beq	13bd8 <mythread_queue_list_entry_delete@@Base+0xb0>
   13bb8:	ldr	r0, [r7]
   13bbc:	cmp	r0, #0
   13bc0:	beq	13bcc <mythread_queue_list_entry_delete@@Base+0xa4>
   13bc4:	mov	r1, #0
   13bc8:	bl	11440 <mythread_resume@plt>
   13bcc:	subs	r4, r4, #1
   13bd0:	add	r7, r7, #4
   13bd4:	bne	13bb8 <mythread_queue_list_entry_delete@@Base+0x90>
   13bd8:	cmp	r8, #0
   13bdc:	ldrne	r5, [r9]
   13be0:	cmpne	r5, #0
   13be4:	bne	13c0c <mythread_queue_list_entry_delete@@Base+0xe4>
   13be8:	ldr	r0, [r9, #4]
   13bec:	cmp	r0, #0
   13bf0:	beq	13bf8 <mythread_queue_list_entry_delete@@Base+0xd0>
   13bf4:	bl	11ab8 <mycore_free@plt>
   13bf8:	mov	r0, r9
   13bfc:	bl	11ab8 <mycore_free@plt>
   13c00:	mov	r0, #0
   13c04:	sub	sp, fp, #28
   13c08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c0c:	ldr	r0, [r5]
   13c10:	cmp	r0, #0
   13c14:	beq	13c54 <mythread_queue_list_entry_delete@@Base+0x12c>
   13c18:	ldr	r0, [r0]
   13c1c:	bl	11ab8 <mycore_free@plt>
   13c20:	ldr	r0, [r5, #4]
   13c24:	cmp	r0, #0
   13c28:	beq	13c4c <mythread_queue_list_entry_delete@@Base+0x124>
   13c2c:	mov	r4, #1
   13c30:	ldr	r0, [r5]
   13c34:	ldr	r0, [r0, r4, lsl #2]
   13c38:	bl	11ab8 <mycore_free@plt>
   13c3c:	ldr	r0, [r5, #4]
   13c40:	add	r4, r4, #1
   13c44:	cmp	r4, r0
   13c48:	bls	13c30 <mythread_queue_list_entry_delete@@Base+0x108>
   13c4c:	ldr	r0, [r5]
   13c50:	bl	11ab8 <mycore_free@plt>
   13c54:	mov	r0, r5
   13c58:	bl	11ab8 <mycore_free@plt>
   13c5c:	b	13be8 <mythread_queue_list_entry_delete@@Base+0xc0>

00013c60 <mythread_queue_list_entry_see_for_done@@Base>:
   13c60:	push	{r4, sl, fp, lr}
   13c64:	add	fp, sp, #8
   13c68:	mov	r1, r0
   13c6c:	mov	r0, #1
   13c70:	cmp	r1, #0
   13c74:	ldrne	ip, [r1, #8]
   13c78:	cmpne	ip, #0
   13c7c:	bne	13c84 <mythread_queue_list_entry_see_for_done@@Base+0x24>
   13c80:	pop	{r4, sl, fp, pc}
   13c84:	ldr	lr, [r1]
   13c88:	ldr	r1, [r1, #4]
   13c8c:	mov	r2, #0
   13c90:	b	13ca0 <mythread_queue_list_entry_see_for_done@@Base+0x40>
   13c94:	add	r2, r2, #1
   13c98:	cmp	r2, ip
   13c9c:	popcs	{r4, sl, fp, pc}
   13ca0:	ldr	r3, [r1, r2, lsl #2]
   13ca4:	ldr	r4, [lr, #16]
   13ca8:	cmp	r3, r4
   13cac:	bcs	13c94 <mythread_queue_list_entry_see_for_done@@Base+0x34>
   13cb0:	mov	r0, #0
   13cb4:	pop	{r4, sl, fp, pc}

00013cb8 <mythread_function_see_opt@@Base>:
   13cb8:	push	{r4, r5, r6, sl, fp, lr}
   13cbc:	add	fp, sp, #16
   13cc0:	sub	sp, sp, #8
   13cc4:	str	r1, [sp, #4]
   13cc8:	mov	r4, r0
   13ccc:	mov	r6, #0
   13cd0:	ldr	r0, [r0, #28]
   13cd4:	ldr	r1, [r0, #16]
   13cd8:	ldr	r5, [r1, #8]
   13cdc:	cmp	r5, r3
   13ce0:	bne	13db4 <mythread_function_see_opt@@Base+0xfc>
   13ce4:	ldr	r3, [sp, #4]
   13ce8:	tst	r3, #4
   13cec:	bne	13d38 <mythread_function_see_opt@@Base+0x80>
   13cf0:	ldr	r3, [sp, #4]
   13cf4:	tst	r3, #2
   13cf8:	beq	13d70 <mythread_function_see_opt@@Base+0xb8>
   13cfc:	cmp	r1, #0
   13d00:	beq	13d98 <mythread_function_see_opt@@Base+0xe0>
   13d04:	ldr	r1, [r1]
   13d08:	cmp	r1, #0
   13d0c:	bne	13d20 <mythread_function_see_opt@@Base+0x68>
   13d10:	b	13d98 <mythread_function_see_opt@@Base+0xe0>
   13d14:	ldr	r1, [r1, #12]
   13d18:	cmp	r1, #0
   13d1c:	beq	13d98 <mythread_function_see_opt@@Base+0xe0>
   13d20:	ldm	r1, {r3, r5}
   13d24:	ldr	r5, [r5, r2, lsl #2]
   13d28:	ldr	r3, [r3, #16]
   13d2c:	cmp	r5, r3
   13d30:	bcs	13d14 <mythread_function_see_opt@@Base+0x5c>
   13d34:	b	13d70 <mythread_function_see_opt@@Base+0xb8>
   13d38:	cmp	r1, #0
   13d3c:	beq	13d7c <mythread_function_see_opt@@Base+0xc4>
   13d40:	ldr	r1, [r1]
   13d44:	cmp	r1, #0
   13d48:	bne	13d5c <mythread_function_see_opt@@Base+0xa4>
   13d4c:	b	13d7c <mythread_function_see_opt@@Base+0xc4>
   13d50:	ldr	r1, [r1, #12]
   13d54:	cmp	r1, #0
   13d58:	beq	13d7c <mythread_function_see_opt@@Base+0xc4>
   13d5c:	ldm	r1, {r3, r5}
   13d60:	ldr	r5, [r5, r2, lsl #2]
   13d64:	ldr	r3, [r3, #16]
   13d68:	cmp	r5, r3
   13d6c:	bcs	13d50 <mythread_function_see_opt@@Base+0x98>
   13d70:	ldr	r0, [fp, #8]
   13d74:	bl	11164 <mythread_nanosleep_sleep@plt>
   13d78:	b	13db4 <mythread_function_see_opt@@Base+0xfc>
   13d7c:	mov	r1, #4
   13d80:	str	r1, [r4, #12]
   13d84:	ldr	r1, [r4, #20]
   13d88:	bl	11a88 <mythread_mutex_wait@plt>
   13d8c:	mov	r6, #0
   13d90:	str	r6, [r4, #12]
   13d94:	b	13db4 <mythread_function_see_opt@@Base+0xfc>
   13d98:	ldr	r1, [r4, #20]
   13d9c:	bl	1153c <mythread_mutex_close@plt>
   13da0:	ldr	r0, [r4, #24]
   13da4:	bl	1195c <mythread_nanosleep_destroy@plt>
   13da8:	mov	r0, #2
   13dac:	mov	r6, #1
   13db0:	str	r0, [r4, #12]
   13db4:	mov	r0, r6
   13db8:	sub	sp, fp, #16
   13dbc:	pop	{r4, r5, r6, sl, fp, pc}

00013dc0 <mythread_function_queue_batch@@Base>:
   13dc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13dc4:	add	fp, sp, #28
   13dc8:	sub	sp, sp, #12
   13dcc:	ldr	r4, [r0, #28]
   13dd0:	ldr	r1, [r0]
   13dd4:	mov	r5, r0
   13dd8:	ldr	r6, [r4, #16]
   13ddc:	mov	r0, r4
   13de0:	bl	10f9c <myhread_increase_id_by_entry_id@plt>
   13de4:	ldr	r1, [r5, #20]
   13de8:	mov	r7, r0
   13dec:	mov	r0, r4
   13df0:	bl	11a88 <mythread_mutex_wait@plt>
   13df4:	str	r6, [sp, #8]
   13df8:	ldr	r0, [r4, #36]	; 0x24
   13dfc:	tst	r0, #1
   13e00:	beq	13e2c <mythread_function_queue_batch@@Base+0x6c>
   13e04:	mov	r0, #1
   13e08:	str	r0, [r5, #12]
   13e0c:	b	13e18 <mythread_function_queue_batch@@Base+0x58>
   13e10:	ldr	r0, [r5, #24]
   13e14:	bl	11164 <mythread_nanosleep_sleep@plt>
   13e18:	ldr	r0, [r4, #36]	; 0x24
   13e1c:	tst	r0, #1
   13e20:	bne	13e10 <mythread_function_queue_batch@@Base+0x50>
   13e24:	mov	r0, #0
   13e28:	str	r0, [r5, #12]
   13e2c:	ldr	r9, [r6]
   13e30:	mov	r8, #0
   13e34:	cmp	r9, #0
   13e38:	bne	13ea8 <mythread_function_queue_batch@@Base+0xe8>
   13e3c:	b	13ecc <mythread_function_queue_batch@@Base+0x10c>
   13e40:	ldr	ip, [sl, r7, lsl #2]
   13e44:	ldr	r2, [r0, #20]
   13e48:	ldr	r3, [sl, r7, lsl #2]
   13e4c:	mov	r6, r5
   13e50:	ldr	r5, [r0]
   13e54:	ldr	r0, [r0, #20]
   13e58:	mov	r1, r7
   13e5c:	mov	r7, r4
   13e60:	udiv	r4, r3, r0
   13e64:	mls	r0, r4, r0, r3
   13e68:	mov	r4, r7
   13e6c:	mov	r7, r1
   13e70:	udiv	r1, ip, r2
   13e74:	ldr	r1, [r5, r1, lsl #2]
   13e78:	add	r0, r0, r0, lsl #1
   13e7c:	mov	r5, r6
   13e80:	add	r1, r1, r0, lsl #2
   13e84:	ldm	r6, {r0, r2}
   13e88:	blx	r2
   13e8c:	ldr	r0, [r4, #4]
   13e90:	ldr	r1, [sl, r7, lsl #2]
   13e94:	add	r0, r1, r0
   13e98:	str	r0, [sl, r7, lsl #2]
   13e9c:	ldr	r9, [r9, #12]
   13ea0:	cmp	r9, #0
   13ea4:	beq	13ecc <mythread_function_queue_batch@@Base+0x10c>
   13ea8:	ldm	r9, {r0, sl}
   13eac:	ldr	r1, [sl, r7, lsl #2]
   13eb0:	ldr	r2, [r0, #16]
   13eb4:	cmp	r1, r2
   13eb8:	bcc	13e40 <mythread_function_queue_batch@@Base+0x80>
   13ebc:	ldr	r9, [r9, #12]
   13ec0:	add	r8, r8, #1
   13ec4:	cmp	r9, #0
   13ec8:	bne	13ea8 <mythread_function_queue_batch@@Base+0xe8>
   13ecc:	ldr	r6, [sp, #8]
   13ed0:	ldr	r0, [r6, #8]
   13ed4:	cmp	r8, r0
   13ed8:	bne	13df8 <mythread_function_queue_batch@@Base+0x38>
   13edc:	ldr	r1, [r4, #36]	; 0x24
   13ee0:	ldr	r0, [r5, #24]
   13ee4:	mov	r2, r7
   13ee8:	mov	r3, r8
   13eec:	str	r0, [sp]
   13ef0:	mov	r0, r5
   13ef4:	bl	10ff0 <mythread_function_see_opt@plt>
   13ef8:	cmp	r0, #0
   13efc:	beq	13df8 <mythread_function_queue_batch@@Base+0x38>
   13f00:	mov	r0, #0
   13f04:	sub	sp, fp, #28
   13f08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013f0c <mythread_function_queue_stream@@Base>:
   13f0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f10:	add	fp, sp, #28
   13f14:	sub	sp, sp, #12
   13f18:	ldr	r4, [r0, #28]
   13f1c:	ldr	r1, [r0]
   13f20:	mov	r8, r0
   13f24:	ldr	r5, [r4, #16]
   13f28:	mov	r0, r4
   13f2c:	bl	10f9c <myhread_increase_id_by_entry_id@plt>
   13f30:	ldr	r1, [r8, #20]
   13f34:	mov	r6, r0
   13f38:	mov	r0, r4
   13f3c:	bl	11a88 <mythread_mutex_wait@plt>
   13f40:	str	r4, [sp, #8]
   13f44:	str	r5, [sp, #4]
   13f48:	ldr	r0, [r4, #36]	; 0x24
   13f4c:	tst	r0, #1
   13f50:	beq	13f7c <mythread_function_queue_stream@@Base+0x70>
   13f54:	mov	r0, #1
   13f58:	str	r0, [r8, #12]
   13f5c:	b	13f68 <mythread_function_queue_stream@@Base+0x5c>
   13f60:	ldr	r0, [r8, #24]
   13f64:	bl	11164 <mythread_nanosleep_sleep@plt>
   13f68:	ldr	r0, [r4, #36]	; 0x24
   13f6c:	tst	r0, #1
   13f70:	bne	13f60 <mythread_function_queue_stream@@Base+0x54>
   13f74:	mov	r0, #0
   13f78:	str	r0, [r8, #12]
   13f7c:	ldr	r9, [r5]
   13f80:	mov	r7, #0
   13f84:	cmp	r9, #0
   13f88:	bne	13fdc <mythread_function_queue_stream@@Base+0xd0>
   13f8c:	b	14000 <mythread_function_queue_stream@@Base+0xf4>
   13f90:	ldr	r1, [sl, r6, lsl #2]
   13f94:	ldr	r2, [r0, #20]
   13f98:	ldr	r3, [sl, r6, lsl #2]
   13f9c:	ldr	r5, [r0]
   13fa0:	ldr	r0, [r0, #20]
   13fa4:	udiv	r1, r1, r2
   13fa8:	udiv	r4, r3, r0
   13fac:	ldr	r1, [r5, r1, lsl #2]
   13fb0:	mls	r0, r4, r0, r3
   13fb4:	add	r0, r0, r0, lsl #1
   13fb8:	add	r1, r1, r0, lsl #2
   13fbc:	ldm	r8, {r0, r2}
   13fc0:	blx	r2
   13fc4:	ldr	r0, [sl, r6, lsl #2]
   13fc8:	add	r0, r0, #1
   13fcc:	str	r0, [sl, r6, lsl #2]
   13fd0:	ldr	r9, [r9, #12]
   13fd4:	cmp	r9, #0
   13fd8:	beq	14000 <mythread_function_queue_stream@@Base+0xf4>
   13fdc:	ldm	r9, {r0, sl}
   13fe0:	ldr	r1, [sl, r6, lsl #2]
   13fe4:	ldr	r2, [r0, #16]
   13fe8:	cmp	r1, r2
   13fec:	bcc	13f90 <mythread_function_queue_stream@@Base+0x84>
   13ff0:	ldr	r9, [r9, #12]
   13ff4:	add	r7, r7, #1
   13ff8:	cmp	r9, #0
   13ffc:	bne	13fdc <mythread_function_queue_stream@@Base+0xd0>
   14000:	ldr	r5, [sp, #4]
   14004:	ldr	r0, [r5, #8]
   14008:	ldr	r4, [sp, #8]
   1400c:	cmp	r7, r0
   14010:	bne	13f48 <mythread_function_queue_stream@@Base+0x3c>
   14014:	ldr	r1, [r4, #36]	; 0x24
   14018:	ldr	r0, [r8, #24]
   1401c:	mov	r2, r6
   14020:	mov	r3, r7
   14024:	str	r0, [sp]
   14028:	mov	r0, r8
   1402c:	bl	10ff0 <mythread_function_see_opt@plt>
   14030:	cmp	r0, #0
   14034:	beq	13f48 <mythread_function_queue_stream@@Base+0x3c>
   14038:	mov	r0, #0
   1403c:	sub	sp, fp, #28
   14040:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014044 <mythread_function@@Base>:
   14044:	push	{r4, r5, r6, sl, fp, lr}
   14048:	add	fp, sp, #16
   1404c:	ldr	r5, [r0, #28]
   14050:	ldr	r1, [r0, #20]
   14054:	mov	r4, r0
   14058:	mov	r0, r5
   1405c:	bl	11a88 <mythread_mutex_wait@plt>
   14060:	mov	r6, #0
   14064:	b	1406c <mythread_function@@Base+0x28>
   14068:	str	r6, [r4, #12]
   1406c:	ldm	r4, {r0, r2}
   14070:	mov	r1, r4
   14074:	blx	r2
   14078:	ldr	r0, [r4, #12]
   1407c:	orr	r0, r0, #8
   14080:	str	r0, [r4, #12]
   14084:	ldr	r1, [r4, #12]
   14088:	ldr	r0, [r4, #12]
   1408c:	tst	r1, #1
   14090:	bne	140b8 <mythread_function@@Base+0x74>
   14094:	orr	r0, r0, #4
   14098:	str	r0, [r4, #12]
   1409c:	mov	r0, r5
   140a0:	ldr	r1, [r4, #20]
   140a4:	bl	11a88 <mythread_mutex_wait@plt>
   140a8:	b	140c0 <mythread_function@@Base+0x7c>
   140ac:	ldr	r0, [r4, #24]
   140b0:	bl	11164 <mythread_nanosleep_sleep@plt>
   140b4:	ldr	r0, [r4, #12]
   140b8:	tst	r0, #1
   140bc:	bne	140ac <mythread_function@@Base+0x68>
   140c0:	ldr	r0, [r5, #36]	; 0x24
   140c4:	tst	r0, #2
   140c8:	ldreq	r0, [r4, #12]
   140cc:	tsteq	r0, #2
   140d0:	beq	14068 <mythread_function@@Base+0x24>
   140d4:	ldr	r1, [r4, #20]
   140d8:	mov	r0, r5
   140dc:	bl	1153c <mythread_mutex_close@plt>
   140e0:	ldr	r0, [r4, #24]
   140e4:	bl	1195c <mythread_nanosleep_destroy@plt>
   140e8:	mov	r0, #2
   140ec:	str	r0, [r4, #12]
   140f0:	mov	r0, #0
   140f4:	pop	{r4, r5, r6, sl, fp, pc}

000140f8 <mycore_power@@Base>:
   140f8:	cmp	r1, #0
   140fc:	moveq	r0, #1
   14100:	bxeq	lr
   14104:	mov	r3, r0
   14108:	mov	r0, #1
   1410c:	mov	ip, #0
   14110:	mov	r2, r3
   14114:	tst	r1, #1
   14118:	mul	r3, r3, r3
   1411c:	movweq	r2, #1
   14120:	cmp	ip, r1, lsr #1
   14124:	mul	r0, r2, r0
   14128:	lsr	r2, r1, #1
   1412c:	mov	r1, r2
   14130:	bne	14110 <mycore_power@@Base+0x18>
   14134:	bx	lr

00014138 <mycore_strncasecmp@@Base>:
   14138:	push	{r4, sl, fp, lr}
   1413c:	add	fp, sp, #8
   14140:	cmp	r0, #0
   14144:	cmpne	r1, #0
   14148:	bne	14158 <mycore_strncasecmp@@Base+0x20>
   1414c:	subs	r0, r0, r1
   14150:	movwne	r0, #1
   14154:	pop	{r4, sl, fp, pc}
   14158:	cmp	r2, #0
   1415c:	beq	14194 <mycore_strncasecmp@@Base+0x5c>
   14160:	ldr	ip, [pc, #52]	; 1419c <mycore_strncasecmp@@Base+0x64>
   14164:	mov	lr, #0
   14168:	add	ip, pc, ip
   1416c:	ldrb	r3, [r1, lr]
   14170:	ldrb	r4, [r0, lr]
   14174:	ldrb	r3, [ip, r3]
   14178:	ldrb	r4, [ip, r4]
   1417c:	cmp	r4, r3
   14180:	subne	r0, r2, lr
   14184:	popne	{r4, sl, fp, pc}
   14188:	add	lr, lr, #1
   1418c:	cmp	lr, r2
   14190:	bcc	1416c <mycore_strncasecmp@@Base+0x34>
   14194:	mov	r0, #0
   14198:	pop	{r4, sl, fp, pc}
   1419c:	andeq	pc, r1, r8, ror #19

000141a0 <mycore_strcasecmp@@Base>:
   141a0:	push	{r4, sl, fp, lr}
   141a4:	add	fp, sp, #8
   141a8:	cmp	r0, #0
   141ac:	cmpne	r1, #0
   141b0:	bne	141c4 <mycore_strcasecmp@@Base+0x24>
   141b4:	subs	r2, r0, r1
   141b8:	movwne	r2, #1
   141bc:	mov	r0, r2
   141c0:	pop	{r4, sl, fp, pc}
   141c4:	ldrb	r2, [r1]
   141c8:	ldr	ip, [pc, #84]	; 14224 <mycore_strcasecmp@@Base+0x84>
   141cc:	ldrb	r3, [r0]
   141d0:	add	ip, pc, ip
   141d4:	ldrb	lr, [ip, r2]
   141d8:	ldrb	r4, [ip, r3]
   141dc:	mov	r2, #1
   141e0:	cmp	r4, lr
   141e4:	bne	14210 <mycore_strcasecmp@@Base+0x70>
   141e8:	mov	r2, #1
   141ec:	tst	r3, #255	; 0xff
   141f0:	beq	14218 <mycore_strcasecmp@@Base+0x78>
   141f4:	ldrb	r3, [r1, r2]
   141f8:	ldrb	lr, [ip, r3]
   141fc:	ldrb	r3, [r0, r2]
   14200:	add	r2, r2, #1
   14204:	ldrb	r4, [ip, r3]
   14208:	cmp	r4, lr
   1420c:	beq	141ec <mycore_strcasecmp@@Base+0x4c>
   14210:	mov	r0, r2
   14214:	pop	{r4, sl, fp, pc}
   14218:	mov	r2, #0
   1421c:	mov	r0, r2
   14220:	pop	{r4, sl, fp, pc}
   14224:	andeq	pc, r1, r0, lsl #19

00014228 <mycore_strncmp@@Base>:
   14228:	push	{fp, lr}
   1422c:	mov	fp, sp
   14230:	cmp	r0, #0
   14234:	cmpne	r1, #0
   14238:	bne	14248 <mycore_strncmp@@Base+0x20>
   1423c:	subs	r0, r0, r1
   14240:	movwne	r0, #1
   14244:	pop	{fp, pc}
   14248:	cmp	r2, #0
   1424c:	beq	14274 <mycore_strncmp@@Base+0x4c>
   14250:	mov	lr, #0
   14254:	ldrb	ip, [r1, lr]
   14258:	ldrb	r3, [r0, lr]
   1425c:	cmp	r3, ip
   14260:	subne	r0, r2, lr
   14264:	popne	{fp, pc}
   14268:	add	lr, lr, #1
   1426c:	cmp	lr, r2
   14270:	bcc	14254 <mycore_strncmp@@Base+0x2c>
   14274:	mov	r0, #0
   14278:	pop	{fp, pc}

0001427c <mycore_strcmp@@Base>:
   1427c:	cmp	r0, #0
   14280:	cmpne	r1, #0
   14284:	bne	14298 <mycore_strcmp@@Base+0x1c>
   14288:	subs	r2, r0, r1
   1428c:	movwne	r2, #1
   14290:	mov	r0, r2
   14294:	bx	lr
   14298:	ldrb	r3, [r0]
   1429c:	ldrb	ip, [r1]
   142a0:	mov	r2, #1
   142a4:	cmp	r3, ip
   142a8:	bne	142cc <mycore_strcmp@@Base+0x50>
   142ac:	mov	r2, #1
   142b0:	tst	r3, #255	; 0xff
   142b4:	beq	142d4 <mycore_strcmp@@Base+0x58>
   142b8:	ldrb	r3, [r0, r2]
   142bc:	ldrb	ip, [r1, r2]
   142c0:	add	r2, r2, #1
   142c4:	cmp	r3, ip
   142c8:	beq	142b0 <mycore_strcmp@@Base+0x34>
   142cc:	mov	r0, r2
   142d0:	bx	lr
   142d4:	mov	r2, #0
   142d8:	mov	r0, r2
   142dc:	bx	lr

000142e0 <mycore_strcmp_ws@@Base>:
   142e0:	cmp	r0, #0
   142e4:	cmpne	r1, #0
   142e8:	bne	142fc <mycore_strcmp_ws@@Base+0x1c>
   142ec:	subs	r2, r0, r1
   142f0:	movwne	r2, #1
   142f4:	mov	r0, r2
   142f8:	bx	lr
   142fc:	ldrb	r3, [r0]
   14300:	ldrb	ip, [r1]
   14304:	mov	r2, #1
   14308:	cmp	r3, ip
   1430c:	bne	143c4 <mycore_strcmp_ws@@Base+0xe4>
   14310:	mov	r2, #1
   14314:	uxtb	r3, r3
   14318:	cmp	r3, #32
   1431c:	bhi	143b0 <mycore_strcmp_ws@@Base+0xd0>
   14320:	add	ip, pc, #4
   14324:	ldr	r3, [ip, r3, lsl #2]
   14328:	add	pc, ip, r3
   1432c:	andeq	r0, r0, r0, lsr #1
   14330:	andeq	r0, r0, r4, lsl #1
   14334:	andeq	r0, r0, r4, lsl #1
   14338:	andeq	r0, r0, r4, lsl #1
   1433c:	andeq	r0, r0, r4, lsl #1
   14340:	andeq	r0, r0, r4, lsl #1
   14344:	andeq	r0, r0, r4, lsl #1
   14348:	andeq	r0, r0, r4, lsl #1
   1434c:	andeq	r0, r0, r4, lsl #1
   14350:	andeq	r0, r0, r0, lsr #1
   14354:	andeq	r0, r0, r0, lsr #1
   14358:	andeq	r0, r0, r4, lsl #1
   1435c:	andeq	r0, r0, r0, lsr #1
   14360:	andeq	r0, r0, r0, lsr #1
   14364:	andeq	r0, r0, r4, lsl #1
   14368:	andeq	r0, r0, r4, lsl #1
   1436c:	andeq	r0, r0, r4, lsl #1
   14370:	andeq	r0, r0, r4, lsl #1
   14374:	andeq	r0, r0, r4, lsl #1
   14378:	andeq	r0, r0, r4, lsl #1
   1437c:	andeq	r0, r0, r4, lsl #1
   14380:	andeq	r0, r0, r4, lsl #1
   14384:	andeq	r0, r0, r4, lsl #1
   14388:	andeq	r0, r0, r4, lsl #1
   1438c:	andeq	r0, r0, r4, lsl #1
   14390:	andeq	r0, r0, r4, lsl #1
   14394:	andeq	r0, r0, r4, lsl #1
   14398:	andeq	r0, r0, r4, lsl #1
   1439c:	andeq	r0, r0, r4, lsl #1
   143a0:	andeq	r0, r0, r4, lsl #1
   143a4:	andeq	r0, r0, r4, lsl #1
   143a8:	andeq	r0, r0, r4, lsl #1
   143ac:	andeq	r0, r0, r0, lsr #1
   143b0:	ldrb	r3, [r0, r2]
   143b4:	ldrb	ip, [r1, r2]
   143b8:	add	r2, r2, #1
   143bc:	cmp	r3, ip
   143c0:	beq	14314 <mycore_strcmp_ws@@Base+0x34>
   143c4:	mov	r0, r2
   143c8:	bx	lr
   143cc:	mov	r2, #0
   143d0:	mov	r0, r2
   143d4:	bx	lr

000143d8 <mycore_ustrcasecmp_without_checks_by_secondary@@Base>:
   143d8:	push	{fp, lr}
   143dc:	mov	fp, sp
   143e0:	ldrb	r3, [r0]
   143e4:	mov	r2, r0
   143e8:	mov	r0, #1
   143ec:	cmp	r3, #0
   143f0:	popeq	{fp, pc}
   143f4:	ldr	ip, [pc, #52]	; 14430 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x58>
   143f8:	add	r2, r2, #1
   143fc:	add	ip, pc, ip
   14400:	uxtb	r3, r3
   14404:	ldrb	lr, [ip, r3]
   14408:	ldrb	r3, [r1]
   1440c:	ldrb	r3, [ip, r3]
   14410:	cmp	lr, r3
   14414:	movne	r0, #0
   14418:	popne	{fp, pc}
   1441c:	ldrb	r3, [r2], #1
   14420:	add	r1, r1, #1
   14424:	cmp	r3, #0
   14428:	bne	14400 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x28>
   1442c:	pop	{fp, pc}
   14430:	andeq	pc, r1, r4, asr r7	; <UNPREDICTABLE>

00014434 <mycore_utils_avl_tree_create@@Base>:
   14434:	mov	r0, #1
   14438:	mov	r1, #4
   1443c:	b	11020 <mycore_calloc@plt>

00014440 <mycore_utils_avl_tree_init@@Base>:
   14440:	push	{r4, sl, fp, lr}
   14444:	add	fp, sp, #8
   14448:	mov	r4, r0
   1444c:	bl	110f8 <mcobject_create@plt>
   14450:	cmp	r0, #0
   14454:	str	r0, [r4]
   14458:	moveq	r0, #2
   1445c:	popeq	{r4, sl, fp, pc}
   14460:	mov	r1, #256	; 0x100
   14464:	mov	r2, #24
   14468:	bl	1162c <mcobject_init@plt>
   1446c:	cmp	r0, #0
   14470:	movwne	r0, #1
   14474:	pop	{r4, sl, fp, pc}

00014478 <mycore_utils_avl_tree_clean@@Base>:
   14478:	ldr	r0, [r0]
   1447c:	b	11bd8 <mcobject_clean@plt>

00014480 <mycore_utils_avl_tree_destroy@@Base>:
   14480:	push	{r4, r5, r6, sl, fp, lr}
   14484:	add	fp, sp, #16
   14488:	mov	r4, #0
   1448c:	cmp	r0, #0
   14490:	beq	144bc <mycore_utils_avl_tree_destroy@@Base+0x3c>
   14494:	mov	r5, r0
   14498:	ldr	r0, [r0]
   1449c:	mov	r6, r1
   144a0:	mov	r1, #1
   144a4:	bl	10f30 <mcobject_destroy@plt>
   144a8:	cmp	r6, #0
   144ac:	moveq	r0, r5
   144b0:	popeq	{r4, r5, r6, sl, fp, pc}
   144b4:	mov	r0, r5
   144b8:	bl	11ab8 <mycore_free@plt>
   144bc:	mov	r0, r4
   144c0:	pop	{r4, r5, r6, sl, fp, pc}

000144c4 <mycore_utils_avl_tree_node_create_root@@Base>:
   144c4:	push	{r4, r5, fp, lr}
   144c8:	add	fp, sp, #8
   144cc:	ldr	r0, [r0]
   144d0:	mov	r5, r1
   144d4:	mov	r1, #0
   144d8:	mov	r4, r2
   144dc:	bl	11848 <mcobject_malloc@plt>
   144e0:	vmov.i32	q8, #0	; 0x00000000
   144e4:	add	r1, r0, #8
   144e8:	stm	r0, {r4, r5}
   144ec:	vst1.32	{d16-d17}, [r1]
   144f0:	pop	{r4, r5, fp, pc}

000144f4 <mycore_utils_avl_tree_node_clean@@Base>:
   144f4:	mov	r1, #0
   144f8:	vmov.i32	q8, #0	; 0x00000000
   144fc:	mov	r2, #20
   14500:	str	r1, [r0, #16]
   14504:	vst1.32	{d16-d17}, [r0], r2
   14508:	str	r1, [r0]
   1450c:	bx	lr

00014510 <mycore_utils_avl_tree_node_height@@Base>:
   14510:	cmp	r0, #0
   14514:	ldrhne	r0, [r0, #20]
   14518:	moveq	r0, #0
   1451c:	sxth	r0, r0
   14520:	bx	lr

00014524 <mycore_utils_avl_tree_node_balance_factor@@Base>:
   14524:	ldr	r3, [r0, #12]
   14528:	ldr	r0, [r0, #8]
   1452c:	mov	r2, #0
   14530:	mov	r1, #0
   14534:	cmp	r3, #0
   14538:	ldrhne	r2, [r3, #20]
   1453c:	cmp	r0, #0
   14540:	ldrhne	r1, [r0, #20]
   14544:	sub	r0, r2, r1
   14548:	sxth	r0, r0
   1454c:	bx	lr

00014550 <mycore_utils_avl_tree_node_set_height@@Base>:
   14550:	ldr	r3, [r0, #8]
   14554:	mov	r2, #0
   14558:	mov	r1, #0
   1455c:	cmp	r3, #0
   14560:	ldrhne	r2, [r3, #20]
   14564:	ldr	r3, [r0, #12]
   14568:	cmp	r3, #0
   1456c:	ldrhne	r1, [r3, #20]
   14570:	sxth	r3, r2
   14574:	sxth	ip, r1
   14578:	cmp	r3, ip
   1457c:	movgt	r1, r2
   14580:	add	r1, r1, #1
   14584:	strh	r1, [r0, #20]
   14588:	bx	lr

0001458c <mycore_utils_avl_tree_node_rotate_right@@Base>:
   1458c:	mov	r1, r0
   14590:	ldr	r0, [r0, #8]
   14594:	ldr	r2, [r1, #16]
   14598:	str	r2, [r0, #16]
   1459c:	ldr	r2, [r0, #12]
   145a0:	cmp	r2, #0
   145a4:	beq	145c0 <mycore_utils_avl_tree_node_rotate_right@@Base+0x34>
   145a8:	str	r1, [r2, #16]
   145ac:	str	r0, [r1, #16]
   145b0:	str	r2, [r1, #8]
   145b4:	str	r1, [r0, #12]
   145b8:	ldrh	ip, [r2, #20]
   145bc:	b	145d0 <mycore_utils_avl_tree_node_rotate_right@@Base+0x44>
   145c0:	str	r0, [r1, #16]
   145c4:	str	r2, [r1, #8]
   145c8:	str	r1, [r0, #12]
   145cc:	mov	ip, #0
   145d0:	push	{r4, sl, fp, lr}
   145d4:	add	fp, sp, #8
   145d8:	ldr	r2, [r1, #12]
   145dc:	mov	r3, #0
   145e0:	sxth	r4, ip
   145e4:	mov	lr, #0
   145e8:	cmp	r2, #0
   145ec:	ldrhne	r3, [r2, #20]
   145f0:	sxth	r2, r3
   145f4:	cmp	r4, r2
   145f8:	movgt	r3, ip
   145fc:	add	r2, r3, #1
   14600:	strh	r2, [r1, #20]
   14604:	sxth	r1, r2
   14608:	ldr	r2, [r0, #8]
   1460c:	cmp	r2, #0
   14610:	ldrhne	lr, [r2, #20]
   14614:	sxth	r2, lr
   14618:	cmp	r2, r1
   1461c:	movgt	r1, lr
   14620:	add	r1, r1, #1
   14624:	strh	r1, [r0, #20]
   14628:	pop	{r4, sl, fp, pc}

0001462c <mycore_utils_avl_tree_node_rotate_left@@Base>:
   1462c:	mov	r1, r0
   14630:	ldr	r0, [r0, #12]
   14634:	ldr	r2, [r1, #16]
   14638:	str	r2, [r0, #16]
   1463c:	ldr	r2, [r0, #8]
   14640:	cmp	r2, #0
   14644:	strne	r1, [r2, #16]
   14648:	push	{fp, lr}
   1464c:	mov	fp, sp
   14650:	str	r2, [r1, #12]
   14654:	str	r0, [r1, #16]
   14658:	str	r1, [r0, #8]
   1465c:	mov	ip, #0
   14660:	mov	r3, #0
   14664:	ldr	lr, [r1, #8]
   14668:	cmp	lr, #0
   1466c:	ldrhne	ip, [lr, #20]
   14670:	cmp	r2, #0
   14674:	ldrhne	r3, [r2, #20]
   14678:	sxth	r2, ip
   1467c:	sxth	lr, r3
   14680:	cmp	r2, lr
   14684:	movgt	r3, ip
   14688:	add	r2, r3, #1
   1468c:	strh	r2, [r1, #20]
   14690:	sxth	r1, r2
   14694:	ldr	r2, [r0, #12]
   14698:	cmp	r2, #0
   1469c:	pop	{fp, lr}
   146a0:	ldrhne	r2, [r2, #20]
   146a4:	moveq	r2, #0
   146a8:	sxth	r3, r2
   146ac:	cmp	r1, r3
   146b0:	movgt	r2, r1
   146b4:	add	r1, r2, #1
   146b8:	strh	r1, [r0, #20]
   146bc:	bx	lr

000146c0 <mycore_utils_avl_tree_node_balance@@Base>:
   146c0:	ldr	r3, [r0, #8]
   146c4:	mov	r2, #0
   146c8:	mov	ip, r0
   146cc:	mov	r0, #0
   146d0:	cmp	r3, #0
   146d4:	ldrhne	r2, [r3, #20]
   146d8:	push	{r4, r5, r6, sl, fp, lr}
   146dc:	add	fp, sp, #16
   146e0:	ldr	lr, [ip, #12]
   146e4:	sxth	r4, r2
   146e8:	cmp	lr, #0
   146ec:	ldrhne	r0, [lr, #20]
   146f0:	sxth	r5, r0
   146f4:	cmp	r5, r4
   146f8:	movlt	r0, r2
   146fc:	add	r0, r0, #1
   14700:	strh	r0, [ip, #20]
   14704:	sub	r0, r5, r4
   14708:	cmn	r0, #2
   1470c:	beq	14754 <mycore_utils_avl_tree_node_balance@@Base+0x94>
   14710:	cmp	r0, #2
   14714:	bne	14808 <mycore_utils_avl_tree_node_balance@@Base+0x148>
   14718:	ldr	r0, [lr, #12]
   1471c:	mov	r2, #0
   14720:	mov	r1, #0
   14724:	cmp	r0, #0
   14728:	ldrhne	r2, [r0, #20]
   1472c:	ldr	r0, [lr, #8]
   14730:	cmp	r0, #0
   14734:	ldrhne	r1, [r0, #20]
   14738:	sub	r1, r2, r1
   1473c:	sxth	r1, r1
   14740:	cmn	r1, #1
   14744:	ble	1481c <mycore_utils_avl_tree_node_balance@@Base+0x15c>
   14748:	mov	r1, r0
   1474c:	mov	r0, lr
   14750:	b	1497c <mycore_utils_avl_tree_node_balance@@Base+0x2bc>
   14754:	ldr	r0, [r3, #12]
   14758:	ldr	r5, [r3, #8]
   1475c:	mov	r2, #0
   14760:	mov	r1, #0
   14764:	cmp	r0, #0
   14768:	ldrhne	r2, [r0, #20]
   1476c:	cmp	r5, #0
   14770:	ldrhne	r1, [r5, #20]
   14774:	sub	r1, r2, r1
   14778:	sxth	r1, r1
   1477c:	cmp	r1, #1
   14780:	blt	14848 <mycore_utils_avl_tree_node_balance@@Base+0x188>
   14784:	ldr	r1, [r3, #16]
   14788:	mov	r4, #0
   1478c:	mov	r2, #0
   14790:	str	r1, [r0, #16]
   14794:	ldr	r1, [r0, #8]
   14798:	cmp	r1, #0
   1479c:	strne	r3, [r1, #16]
   147a0:	str	r1, [r3, #12]
   147a4:	str	r0, [r3, #16]
   147a8:	str	r3, [r0, #8]
   147ac:	ldr	r5, [r3, #8]
   147b0:	cmp	r5, #0
   147b4:	ldrhne	r4, [r5, #20]
   147b8:	cmp	r1, #0
   147bc:	ldrhne	r2, [r1, #20]
   147c0:	sxth	r5, r4
   147c4:	sxth	r1, r2
   147c8:	cmp	r5, r1
   147cc:	movgt	r2, r4
   147d0:	add	r1, r2, #1
   147d4:	strh	r1, [r3, #20]
   147d8:	sxth	r1, r1
   147dc:	ldr	r2, [r0, #12]
   147e0:	cmp	r2, #0
   147e4:	ldrhne	r3, [r2, #20]
   147e8:	moveq	r3, #0
   147ec:	sxth	r5, r3
   147f0:	cmp	r1, r5
   147f4:	movgt	r3, r1
   147f8:	add	r1, r3, #1
   147fc:	strh	r1, [r0, #20]
   14800:	str	r0, [ip, #8]
   14804:	b	14850 <mycore_utils_avl_tree_node_balance@@Base+0x190>
   14808:	ldr	r0, [ip, #16]
   1480c:	cmp	r0, #0
   14810:	streq	ip, [r1]
   14814:	ldreq	r0, [ip, #16]
   14818:	pop	{r4, r5, r6, sl, fp, pc}
   1481c:	ldr	r1, [lr, #16]
   14820:	str	r1, [r0, #16]
   14824:	ldr	r1, [r0, #12]
   14828:	cmp	r1, #0
   1482c:	beq	14918 <mycore_utils_avl_tree_node_balance@@Base+0x258>
   14830:	str	lr, [r1, #16]
   14834:	str	r0, [lr, #16]
   14838:	str	r1, [lr, #8]
   1483c:	str	lr, [r0, #12]
   14840:	ldrh	r1, [r1, #20]
   14844:	b	14928 <mycore_utils_avl_tree_node_balance@@Base+0x268>
   14848:	mov	r2, r0
   1484c:	mov	r0, r3
   14850:	ldr	r1, [ip, #16]
   14854:	cmp	r1, #0
   14858:	beq	14884 <mycore_utils_avl_tree_node_balance@@Base+0x1c4>
   1485c:	ldr	lr, [r1, #12]
   14860:	cmp	r2, #0
   14864:	str	r1, [r0, #16]
   14868:	beq	148a8 <mycore_utils_avl_tree_node_balance@@Base+0x1e8>
   1486c:	str	ip, [r2, #16]
   14870:	str	r0, [ip, #16]
   14874:	str	r2, [ip, #8]
   14878:	str	ip, [r0, #12]
   1487c:	ldrh	r3, [r2, #20]
   14880:	b	148b8 <mycore_utils_avl_tree_node_balance@@Base+0x1f8>
   14884:	cmp	r2, #0
   14888:	str	r1, [r0, #16]
   1488c:	beq	14a7c <mycore_utils_avl_tree_node_balance@@Base+0x3bc>
   14890:	str	ip, [r2, #16]
   14894:	str	r0, [ip, #16]
   14898:	str	r2, [ip, #8]
   1489c:	str	ip, [r0, #12]
   148a0:	ldrh	r2, [r2, #20]
   148a4:	b	14a8c <mycore_utils_avl_tree_node_balance@@Base+0x3cc>
   148a8:	str	r0, [ip, #16]
   148ac:	str	r2, [ip, #8]
   148b0:	str	ip, [r0, #12]
   148b4:	mov	r3, #0
   148b8:	ldr	r5, [ip, #12]
   148bc:	mov	r4, #0
   148c0:	sxth	r6, r3
   148c4:	mov	r2, #0
   148c8:	cmp	r5, #0
   148cc:	ldrhne	r4, [r5, #20]
   148d0:	sxth	r5, r4
   148d4:	cmp	r6, r5
   148d8:	movgt	r4, r3
   148dc:	add	r3, r4, #1
   148e0:	strh	r3, [ip, #20]
   148e4:	sxth	r3, r3
   148e8:	ldr	r4, [r0, #8]
   148ec:	cmp	r4, #0
   148f0:	ldrhne	r2, [r4, #20]
   148f4:	sxth	r4, r2
   148f8:	cmp	r4, r3
   148fc:	movgt	r3, r2
   14900:	cmp	lr, ip
   14904:	add	r2, r3, #1
   14908:	strh	r2, [r0, #20]
   1490c:	streq	r0, [r1, #12]
   14910:	strne	r0, [r1, #8]
   14914:	pop	{r4, r5, r6, sl, fp, pc}
   14918:	str	r0, [lr, #16]
   1491c:	str	r1, [lr, #8]
   14920:	str	lr, [r0, #12]
   14924:	mov	r1, #0
   14928:	ldr	r4, [lr, #12]
   1492c:	mov	r2, #0
   14930:	sxth	r5, r1
   14934:	mov	r3, #0
   14938:	cmp	r4, #0
   1493c:	ldrhne	r2, [r4, #20]
   14940:	sxth	r4, r2
   14944:	cmp	r5, r4
   14948:	movgt	r2, r1
   1494c:	add	r1, r2, #1
   14950:	strh	r1, [lr, #20]
   14954:	sxth	r2, r1
   14958:	ldr	r1, [r0, #8]
   1495c:	cmp	r1, #0
   14960:	ldrhne	r3, [r1, #20]
   14964:	sxth	r5, r3
   14968:	cmp	r5, r2
   1496c:	movgt	r2, r3
   14970:	add	r2, r2, #1
   14974:	strh	r2, [r0, #20]
   14978:	str	r0, [ip, #12]
   1497c:	ldr	r2, [ip, #16]
   14980:	cmp	r2, #0
   14984:	beq	14a10 <mycore_utils_avl_tree_node_balance@@Base+0x350>
   14988:	cmp	r1, #0
   1498c:	ldr	lr, [r2, #12]
   14990:	str	r2, [r0, #16]
   14994:	mov	r4, #0
   14998:	mov	r3, #0
   1499c:	strne	ip, [r1, #16]
   149a0:	str	r1, [ip, #12]
   149a4:	str	r0, [ip, #16]
   149a8:	str	ip, [r0, #8]
   149ac:	ldr	r5, [ip, #8]
   149b0:	cmp	r5, #0
   149b4:	ldrhne	r4, [r5, #20]
   149b8:	cmp	r1, #0
   149bc:	ldrhne	r3, [r1, #20]
   149c0:	sxth	r5, r4
   149c4:	sxth	r1, r3
   149c8:	cmp	r5, r1
   149cc:	movgt	r3, r4
   149d0:	add	r1, r3, #1
   149d4:	strh	r1, [ip, #20]
   149d8:	sxth	r1, r1
   149dc:	ldr	r3, [r0, #12]
   149e0:	cmp	r3, #0
   149e4:	ldrhne	r3, [r3, #20]
   149e8:	moveq	r3, #0
   149ec:	sxth	r4, r3
   149f0:	cmp	r1, r4
   149f4:	movgt	r3, r1
   149f8:	cmp	lr, ip
   149fc:	add	r1, r3, #1
   14a00:	strh	r1, [r0, #20]
   14a04:	streq	r0, [r2, #12]
   14a08:	strne	r0, [r2, #8]
   14a0c:	pop	{r4, r5, r6, sl, fp, pc}
   14a10:	cmp	r1, #0
   14a14:	str	r2, [r0, #16]
   14a18:	mov	r3, #0
   14a1c:	mov	r2, #0
   14a20:	strne	ip, [r1, #16]
   14a24:	str	r1, [ip, #12]
   14a28:	str	r0, [ip, #16]
   14a2c:	str	ip, [r0, #8]
   14a30:	ldr	r5, [ip, #8]
   14a34:	cmp	r5, #0
   14a38:	ldrhne	r3, [r5, #20]
   14a3c:	cmp	r1, #0
   14a40:	ldrhne	r2, [r1, #20]
   14a44:	sxth	r5, r3
   14a48:	sxth	r1, r2
   14a4c:	cmp	r5, r1
   14a50:	movgt	r2, r3
   14a54:	add	r1, r2, #1
   14a58:	strh	r1, [ip, #20]
   14a5c:	sxth	r1, r1
   14a60:	ldr	r2, [r0, #12]
   14a64:	cmp	r2, #0
   14a68:	ldrhne	r2, [r2, #20]
   14a6c:	moveq	r2, #0
   14a70:	sxth	r3, r2
   14a74:	cmp	r1, r3
   14a78:	b	14ad0 <mycore_utils_avl_tree_node_balance@@Base+0x410>
   14a7c:	str	r0, [ip, #16]
   14a80:	str	r2, [ip, #8]
   14a84:	str	ip, [r0, #12]
   14a88:	mov	r2, #0
   14a8c:	ldr	r5, [ip, #12]
   14a90:	mov	r3, #0
   14a94:	mov	r1, #0
   14a98:	cmp	r5, #0
   14a9c:	ldrhne	r3, [r5, #20]
   14aa0:	sxth	r5, r2
   14aa4:	sxth	r6, r3
   14aa8:	cmp	r5, r6
   14aac:	movgt	r3, r2
   14ab0:	add	r2, r3, #1
   14ab4:	strh	r2, [ip, #20]
   14ab8:	sxth	r2, r2
   14abc:	ldr	r3, [r0, #8]
   14ac0:	cmp	r3, #0
   14ac4:	ldrhne	r1, [r3, #20]
   14ac8:	sxth	r3, r1
   14acc:	cmp	r3, r2
   14ad0:	movgt	r2, r1
   14ad4:	add	r1, r2, #1
   14ad8:	strh	r1, [r0, #20]
   14adc:	pop	{r4, r5, r6, sl, fp, pc}

00014ae0 <mycore_utils_avl_tree_add@@Base>:
   14ae0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14ae4:	add	fp, sp, #24
   14ae8:	ldr	r0, [r0]
   14aec:	ldr	r7, [r1]
   14af0:	mov	r4, r1
   14af4:	mov	r1, #0
   14af8:	mov	r8, r3
   14afc:	mov	r6, r2
   14b00:	mov	r5, #0
   14b04:	bl	11848 <mcobject_malloc@plt>
   14b08:	vmov.i32	q8, #0	; 0x00000000
   14b0c:	cmp	r7, #0
   14b10:	beq	14b7c <mycore_utils_avl_tree_add@@Base+0x9c>
   14b14:	mov	r1, #20
   14b18:	mov	r2, r0
   14b1c:	str	r5, [r0, #16]
   14b20:	vst1.32	{d16-d17}, [r2], r1
   14b24:	str	r5, [r2]
   14b28:	ldr	r2, [r7, #4]
   14b2c:	cmp	r2, r6
   14b30:	bne	14b40 <mycore_utils_avl_tree_add@@Base+0x60>
   14b34:	mov	r1, r7
   14b38:	str	r8, [r1]
   14b3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14b40:	cmp	r2, r6
   14b44:	bls	14b58 <mycore_utils_avl_tree_add@@Base+0x78>
   14b48:	ldr	r1, [r7, #8]
   14b4c:	cmp	r1, #0
   14b50:	bne	14b64 <mycore_utils_avl_tree_add@@Base+0x84>
   14b54:	b	14b94 <mycore_utils_avl_tree_add@@Base+0xb4>
   14b58:	ldr	r1, [r7, #12]
   14b5c:	cmp	r1, #0
   14b60:	beq	14b9c <mycore_utils_avl_tree_add@@Base+0xbc>
   14b64:	ldr	r2, [r1, #4]
   14b68:	mov	r7, r1
   14b6c:	cmp	r2, r6
   14b70:	bne	14b40 <mycore_utils_avl_tree_add@@Base+0x60>
   14b74:	str	r8, [r1]
   14b78:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14b7c:	add	r1, r0, #8
   14b80:	str	r8, [r0]
   14b84:	str	r6, [r0, #4]
   14b88:	vst1.32	{d16-d17}, [r1]
   14b8c:	str	r0, [r4]
   14b90:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14b94:	add	r1, r7, #8
   14b98:	b	14ba0 <mycore_utils_avl_tree_add@@Base+0xc0>
   14b9c:	add	r1, r7, #12
   14ba0:	str	r0, [r1]
   14ba4:	str	r7, [r0, #16]
   14ba8:	str	r8, [r0]
   14bac:	str	r6, [r0, #4]
   14bb0:	mov	r1, r4
   14bb4:	bl	1180c <mycore_utils_avl_tree_node_balance@plt>
   14bb8:	cmp	r0, #0
   14bbc:	bne	14bb0 <mycore_utils_avl_tree_add@@Base+0xd0>
   14bc0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014bc4 <mycore_utils_avl_tree_find_min@@Base>:
   14bc4:	cmp	r0, #0
   14bc8:	moveq	r1, #0
   14bcc:	moveq	r0, r1
   14bd0:	bxeq	lr
   14bd4:	mov	r1, r0
   14bd8:	ldr	r0, [r0, #12]
   14bdc:	cmp	r0, #0
   14be0:	bne	14bd4 <mycore_utils_avl_tree_find_min@@Base+0x10>
   14be4:	mov	r0, r1
   14be8:	bx	lr

00014bec <mycore_utils_avl_tree_rotate_for_delete@@Base>:
   14bec:	push	{r4, sl, fp, lr}
   14bf0:	add	fp, sp, #8
   14bf4:	mov	r4, r2
   14bf8:	cmp	r1, #0
   14bfc:	beq	14c50 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x64>
   14c00:	ldr	lr, [r0, #8]
   14c04:	cmp	lr, r1
   14c08:	beq	14c74 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x88>
   14c0c:	ldr	ip, [r1, #16]
   14c10:	mov	r3, #0
   14c14:	str	r3, [ip, #12]
   14c18:	mov	r3, r0
   14c1c:	ldr	r2, [r3, #16]!
   14c20:	str	r2, [r1, #16]
   14c24:	ldr	r2, [r3, #-4]
   14c28:	str	lr, [r1, #8]
   14c2c:	str	r2, [r1, #12]
   14c30:	ldr	r2, [r3, #-8]
   14c34:	cmp	r2, #0
   14c38:	strne	r1, [r2, #16]
   14c3c:	ldr	r2, [r0, #12]
   14c40:	cmp	r2, #0
   14c44:	strne	r1, [r2, #16]
   14c48:	mov	r2, r1
   14c4c:	b	14ca0 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xb4>
   14c50:	ldr	r2, [r0, #16]
   14c54:	cmp	r2, #0
   14c58:	beq	14ce0 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xf4>
   14c5c:	ldr	r3, [r2, #8]
   14c60:	ldr	r1, [r0, #12]
   14c64:	cmp	r3, r0
   14c68:	streq	r1, [r2, #8]
   14c6c:	strne	r1, [r2, #12]
   14c70:	b	14cc4 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xd8>
   14c74:	mov	r3, r0
   14c78:	ldr	r2, [r3, #16]!
   14c7c:	str	r2, [r1, #16]
   14c80:	ldr	r2, [r3, #-4]
   14c84:	str	r2, [r1, #12]
   14c88:	ldr	r2, [r1, #8]
   14c8c:	ldr	ip, [r3, #-4]
   14c90:	cmp	r2, #0
   14c94:	moveq	r2, r1
   14c98:	cmp	ip, #0
   14c9c:	strne	r1, [ip, #16]
   14ca0:	ldr	lr, [r3]
   14ca4:	mov	ip, r4
   14ca8:	cmp	lr, #0
   14cac:	beq	14cc0 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xd4>
   14cb0:	ldr	r3, [lr, #8]!
   14cb4:	cmp	r3, r0
   14cb8:	addne	lr, lr, #4
   14cbc:	mov	ip, lr
   14cc0:	str	r1, [ip]
   14cc4:	mov	r0, r2
   14cc8:	mov	r1, r4
   14ccc:	bl	1180c <mycore_utils_avl_tree_node_balance@plt>
   14cd0:	mov	r2, r0
   14cd4:	cmp	r0, #0
   14cd8:	bne	14cc4 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xd8>
   14cdc:	pop	{r4, sl, fp, pc}
   14ce0:	ldr	r0, [r0, #12]
   14ce4:	str	r0, [r4]
   14ce8:	pop	{r4, sl, fp, pc}

00014cec <mycore_utils_avl_tree_delete@@Base>:
   14cec:	push	{r4, r5, r6, sl, fp, lr}
   14cf0:	add	fp, sp, #16
   14cf4:	ldr	r4, [r1]
   14cf8:	mov	r6, #0
   14cfc:	cmp	r4, #0
   14d00:	beq	14d2c <mycore_utils_avl_tree_delete@@Base+0x40>
   14d04:	mov	r3, r1
   14d08:	mov	r5, r0
   14d0c:	ldr	r0, [r4, #4]
   14d10:	cmp	r0, r2
   14d14:	beq	14d34 <mycore_utils_avl_tree_delete@@Base+0x48>
   14d18:	mov	r0, #12
   14d1c:	movwhi	r0, #8
   14d20:	ldr	r4, [r4, r0]
   14d24:	cmp	r4, #0
   14d28:	bne	14d0c <mycore_utils_avl_tree_delete@@Base+0x20>
   14d2c:	mov	r0, r6
   14d30:	pop	{r4, r5, r6, sl, fp, pc}
   14d34:	ldr	r0, [r4, #8]
   14d38:	cmp	r0, #0
   14d3c:	beq	14d54 <mycore_utils_avl_tree_delete@@Base+0x68>
   14d40:	mov	r1, r0
   14d44:	ldr	r0, [r0, #12]
   14d48:	cmp	r0, #0
   14d4c:	bne	14d40 <mycore_utils_avl_tree_delete@@Base+0x54>
   14d50:	b	14d58 <mycore_utils_avl_tree_delete@@Base+0x6c>
   14d54:	mov	r1, #0
   14d58:	mov	r0, r4
   14d5c:	mov	r2, r3
   14d60:	bl	113f8 <mycore_utils_avl_tree_rotate_for_delete@plt>
   14d64:	ldr	r0, [r5]
   14d68:	ldr	r6, [r4]
   14d6c:	mov	r1, r4
   14d70:	bl	11068 <mcobject_free@plt>
   14d74:	mov	r0, r6
   14d78:	pop	{r4, r5, r6, sl, fp, pc}

00014d7c <mycore_utils_avl_tree_search_by_type@@Base>:
   14d7c:	mov	r0, #0
   14d80:	b	14d90 <mycore_utils_avl_tree_search_by_type@@Base+0x14>
   14d84:	mov	r3, #12
   14d88:	movwhi	r3, #8
   14d8c:	ldr	r1, [r1, r3]
   14d90:	cmp	r1, #0
   14d94:	bxeq	lr
   14d98:	ldr	r3, [r1, #4]
   14d9c:	cmp	r3, r2
   14da0:	bne	14d84 <mycore_utils_avl_tree_search_by_type@@Base+0x8>
   14da4:	mov	r0, r1
   14da8:	bx	lr

00014dac <mycore_utils_avl_tree_list_all_nodes@@Base>:
   14dac:	push	{r4, r5, r6, r7, fp, lr}
   14db0:	add	fp, sp, #16
   14db4:	cmp	r1, #0
   14db8:	popeq	{r4, r5, r6, r7, fp, pc}
   14dbc:	mov	r4, r3
   14dc0:	mov	r5, r2
   14dc4:	mov	r6, r1
   14dc8:	mov	r7, r0
   14dcc:	mov	r0, r6
   14dd0:	mov	r1, r4
   14dd4:	blx	r5
   14dd8:	ldr	r1, [r6, #8]
   14ddc:	mov	r0, r7
   14de0:	mov	r2, r5
   14de4:	mov	r3, r4
   14de8:	bl	1129c <mycore_utils_avl_tree_list_all_nodes@plt>
   14dec:	ldr	r6, [r6, #12]
   14df0:	cmp	r6, #0
   14df4:	bne	14dcc <mycore_utils_avl_tree_list_all_nodes@@Base+0x20>
   14df8:	pop	{r4, r5, r6, r7, fp, pc}
   14dfc:	andeq	r0, r0, r0

00014e00 <mchar_async_create@@Base>:
   14e00:	mov	r0, #1
   14e04:	mov	r1, #84	; 0x54
   14e08:	b	11020 <mycore_calloc@plt>
   14e0c:	nop	{0}

00014e10 <mchar_async_init@@Base>:
   14e10:	push	{r4, r5, fp, lr}
   14e14:	add	fp, sp, #8
   14e18:	cmp	r2, #4096	; 0x1000
   14e1c:	str	r1, [r0, #16]
   14e20:	mov	r4, r0
   14e24:	mov	r0, #1024	; 0x400
   14e28:	mov	r1, #4
   14e2c:	str	r0, [r4, #8]
   14e30:	movls	r2, #4096	; 0x1000
   14e34:	mov	r0, #1024	; 0x400
   14e38:	str	r2, [r4]
   14e3c:	bl	11020 <mycore_calloc@plt>
   14e40:	mov	r5, #2
   14e44:	cmp	r0, #0
   14e48:	str	r0, [r4, #4]
   14e4c:	beq	14f38 <mchar_async_init@@Base+0x128>
   14e50:	ldr	r0, [r4, #16]
   14e54:	mov	r1, #20
   14e58:	bl	11020 <mycore_calloc@plt>
   14e5c:	ldr	r1, [r4, #4]
   14e60:	str	r0, [r1]
   14e64:	ldr	r0, [r4, #4]
   14e68:	ldr	r1, [r0]
   14e6c:	cmp	r1, #0
   14e70:	beq	14f30 <mchar_async_init@@Base+0x120>
   14e74:	add	r0, pc, #244	; 0xf4
   14e78:	vld1.64	{d16-d17}, [r0 :128]
   14e7c:	add	r0, r4, #28
   14e80:	vst1.32	{d16-d17}, [r0]
   14e84:	mov	r0, #20480	; 0x5000
   14e88:	bl	119c8 <mycore_malloc@plt>
   14e8c:	cmp	r0, #0
   14e90:	str	r0, [r4, #24]
   14e94:	beq	14f4c <mchar_async_init@@Base+0x13c>
   14e98:	vmov.i32	q8, #0	; 0x00000000
   14e9c:	mov	r5, #0
   14ea0:	vst1.32	{d16-d17}, [r0]
   14ea4:	ldr	r0, [r4, #28]
   14ea8:	str	r5, [r4, #48]	; 0x30
   14eac:	str	r0, [r4, #52]	; 0x34
   14eb0:	lsl	r0, r0, #2
   14eb4:	bl	119c8 <mycore_malloc@plt>
   14eb8:	cmp	r0, #0
   14ebc:	str	r0, [r4, #44]	; 0x2c
   14ec0:	beq	14f40 <mchar_async_init@@Base+0x130>
   14ec4:	mov	r0, #64	; 0x40
   14ec8:	str	r5, [r4, #60]	; 0x3c
   14ecc:	mov	r1, #36	; 0x24
   14ed0:	str	r0, [r4, #64]	; 0x40
   14ed4:	mov	r0, #64	; 0x40
   14ed8:	bl	11020 <mycore_calloc@plt>
   14edc:	cmp	r0, #0
   14ee0:	str	r0, [r4, #56]	; 0x38
   14ee4:	beq	14f38 <mchar_async_init@@Base+0x128>
   14ee8:	ldr	r0, [r4, #64]	; 0x40
   14eec:	mov	r5, #0
   14ef0:	str	r5, [r4, #72]	; 0x48
   14ef4:	str	r0, [r4, #76]	; 0x4c
   14ef8:	lsl	r0, r0, #2
   14efc:	bl	119c8 <mycore_malloc@plt>
   14f00:	cmp	r0, #0
   14f04:	str	r0, [r4, #68]	; 0x44
   14f08:	beq	14f38 <mchar_async_init@@Base+0x128>
   14f0c:	mov	r0, r4
   14f10:	bl	11938 <mchar_async_clean@plt>
   14f14:	bl	10f18 <mcsync_create@plt>
   14f18:	cmp	r0, #0
   14f1c:	mov	r5, #2
   14f20:	str	r0, [r4, #80]	; 0x50
   14f24:	beq	14f38 <mchar_async_init@@Base+0x128>
   14f28:	pop	{r4, r5, fp, lr}
   14f2c:	b	116bc <mcsync_init@plt>
   14f30:	bl	11ab8 <mycore_free@plt>
   14f34:	str	r0, [r4, #4]
   14f38:	mov	r0, r5
   14f3c:	pop	{r4, r5, fp, pc}
   14f40:	ldr	r0, [r4, #24]
   14f44:	bl	11ab8 <mycore_free@plt>
   14f48:	str	r0, [r4, #24]
   14f4c:	ldr	r0, [r4, #4]
   14f50:	ldr	r0, [r0]
   14f54:	bl	11ab8 <mycore_free@plt>
   14f58:	ldr	r0, [r4, #4]
   14f5c:	bl	11ab8 <mycore_free@plt>
   14f60:	mov	r5, #2
   14f64:	str	r0, [r4, #4]
   14f68:	mov	r0, r5
   14f6c:	pop	{r4, r5, fp, pc}
   14f70:	andeq	r0, r0, r0, lsl #8
   14f74:	andeq	r0, r0, r1
	...

00014f80 <mchar_async_cache_init@@Base>:
   14f80:	push	{r4, r5, fp, lr}
   14f84:	add	fp, sp, #8
   14f88:	mov	r4, r0
   14f8c:	add	r0, pc, #124	; 0x7c
   14f90:	vld1.64	{d16-d17}, [r0 :128]
   14f94:	add	r0, r4, #4
   14f98:	vst1.32	{d16-d17}, [r0]
   14f9c:	mov	r0, #20480	; 0x5000
   14fa0:	bl	119c8 <mycore_malloc@plt>
   14fa4:	mov	r5, #2
   14fa8:	cmp	r0, #0
   14fac:	str	r0, [r4]
   14fb0:	beq	14fe8 <mchar_async_cache_init@@Base+0x68>
   14fb4:	mov	r5, #0
   14fb8:	str	r5, [r0]
   14fbc:	str	r5, [r0, #4]
   14fc0:	str	r5, [r0, #8]
   14fc4:	str	r5, [r0, #12]
   14fc8:	ldr	r0, [r4, #4]
   14fcc:	str	r5, [r4, #24]
   14fd0:	str	r0, [r4, #28]
   14fd4:	lsl	r0, r0, #2
   14fd8:	bl	119c8 <mycore_malloc@plt>
   14fdc:	cmp	r0, #0
   14fe0:	str	r0, [r4, #20]
   14fe4:	beq	14ff0 <mchar_async_cache_init@@Base+0x70>
   14fe8:	mov	r0, r5
   14fec:	pop	{r4, r5, fp, pc}
   14ff0:	ldr	r0, [r4]
   14ff4:	bl	11ab8 <mycore_free@plt>
   14ff8:	mov	r5, #2
   14ffc:	str	r0, [r4]
   15000:	mov	r0, r5
   15004:	pop	{r4, r5, fp, pc}
   15008:	nop	{0}
   1500c:	nop	{0}
   15010:	andeq	r0, r0, r0, lsl #8
   15014:	andeq	r0, r0, r1
	...

00015020 <mchar_async_clean@@Base>:
   15020:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15024:	add	fp, sp, #28
   15028:	sub	sp, sp, #4
   1502c:	vpush	{d8-d9}
   15030:	mov	r1, #1
   15034:	mov	r4, r0
   15038:	str	r1, [r0, #12]
   1503c:	mov	r0, #0
   15040:	str	r0, [r4, #20]
   15044:	str	r1, [r4, #32]
   15048:	str	r0, [r4, #36]	; 0x24
   1504c:	str	r0, [r4, #40]	; 0x28
   15050:	str	r0, [r4, #48]	; 0x30
   15054:	ldr	r1, [r4, #24]
   15058:	cmp	r1, #0
   1505c:	beq	15068 <mchar_async_clean@@Base+0x48>
   15060:	vmov.i32	q8, #0	; 0x00000000
   15064:	vst1.32	{d16-d17}, [r1]
   15068:	ldr	r1, [r4, #60]	; 0x3c
   1506c:	cmp	r1, #0
   15070:	beq	15104 <mchar_async_clean@@Base+0xe4>
   15074:	mov	r9, #0
   15078:	mov	r8, #1
   1507c:	vmov.i32	q4, #0	; 0x00000000
   15080:	mov	r7, #0
   15084:	mov	r6, #0
   15088:	ldr	sl, [r4, #56]	; 0x38
   1508c:	add	r0, sl, r7
   15090:	str	r8, [r0, #12]
   15094:	str	r9, [r0, #16]
   15098:	str	r9, [r0, #20]
   1509c:	str	r9, [r0, #28]
   150a0:	ldr	r0, [r0, #4]
   150a4:	cmp	r0, #0
   150a8:	beq	150b0 <mchar_async_clean@@Base+0x90>
   150ac:	vst1.32	{d8-d9}, [r0]
   150b0:	ldr	r0, [r4, #80]	; 0x50
   150b4:	ldr	r5, [r4]
   150b8:	bl	116b0 <mcsync_lock@plt>
   150bc:	mov	r0, r4
   150c0:	mov	r2, r5
   150c4:	bl	11920 <mchar_async_chunk_malloc_without_lock@plt>
   150c8:	mov	r5, r0
   150cc:	ldr	r0, [r4, #80]	; 0x50
   150d0:	bl	11b60 <mcsync_unlock@plt>
   150d4:	cmp	r5, #0
   150d8:	str	r5, [sl, r7]
   150dc:	beq	15100 <mchar_async_clean@@Base+0xe0>
   150e0:	mov	r0, #0
   150e4:	add	r6, r6, #1
   150e8:	add	r7, r7, #36	; 0x24
   150ec:	str	r0, [r5, #16]
   150f0:	ldr	r1, [r4, #60]	; 0x3c
   150f4:	cmp	r6, r1
   150f8:	bcc	15088 <mchar_async_clean@@Base+0x68>
   150fc:	b	15104 <mchar_async_clean@@Base+0xe4>
   15100:	mov	r0, #2
   15104:	vpop	{d8-d9}
   15108:	add	sp, sp, #4
   1510c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015110 <mchar_async_cache_clean@@Base>:
   15110:	mov	r2, #1
   15114:	mov	r1, #0
   15118:	str	r2, [r0, #8]
   1511c:	str	r1, [r0, #12]
   15120:	str	r1, [r0, #16]
   15124:	str	r1, [r0, #24]
   15128:	ldr	r0, [r0]
   1512c:	cmp	r0, #0
   15130:	bxeq	lr
   15134:	vmov.i32	q8, #0	; 0x00000000
   15138:	vst1.32	{d16-d17}, [r0]
   1513c:	bx	lr

00015140 <mchar_async_chunk_malloc@@Base>:
   15140:	push	{r4, r5, fp, lr}
   15144:	add	fp, sp, #8
   15148:	mov	r5, r0
   1514c:	ldr	r0, [r0, #80]	; 0x50
   15150:	mov	r4, r2
   15154:	bl	116b0 <mcsync_lock@plt>
   15158:	mov	r0, r5
   1515c:	mov	r2, r4
   15160:	bl	11920 <mchar_async_chunk_malloc_without_lock@plt>
   15164:	mov	r4, r0
   15168:	ldr	r0, [r5, #80]	; 0x50
   1516c:	bl	11b60 <mcsync_unlock@plt>
   15170:	mov	r0, r4
   15174:	pop	{r4, r5, fp, pc}

00015178 <mchar_async_destroy@@Base>:
   15178:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1517c:	add	fp, sp, #24
   15180:	cmp	r0, #0
   15184:	moveq	r6, #0
   15188:	moveq	r0, r6
   1518c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   15190:	mov	r4, r0
   15194:	ldr	r0, [r0, #56]	; 0x38
   15198:	mov	r8, r1
   1519c:	cmp	r0, #0
   151a0:	beq	15208 <mchar_async_destroy@@Base+0x90>
   151a4:	ldr	r1, [r4, #60]	; 0x3c
   151a8:	cmp	r1, #0
   151ac:	beq	151fc <mchar_async_destroy@@Base+0x84>
   151b0:	mov	r5, #1
   151b4:	mov	r6, #0
   151b8:	b	151c8 <mchar_async_destroy@@Base+0x50>
   151bc:	ldr	r0, [r4, #56]	; 0x38
   151c0:	add	r6, r6, #36	; 0x24
   151c4:	add	r5, r5, #1
   151c8:	add	r7, r0, r6
   151cc:	ldr	r0, [r7, #4]
   151d0:	cmp	r0, #0
   151d4:	beq	151dc <mchar_async_destroy@@Base+0x64>
   151d8:	bl	11ab8 <mycore_free@plt>
   151dc:	ldr	r0, [r7, #24]
   151e0:	cmp	r0, #0
   151e4:	beq	151ec <mchar_async_destroy@@Base+0x74>
   151e8:	bl	11ab8 <mycore_free@plt>
   151ec:	ldr	r0, [r4, #60]	; 0x3c
   151f0:	cmp	r5, r0
   151f4:	bcc	151bc <mchar_async_destroy@@Base+0x44>
   151f8:	ldr	r0, [r4, #56]	; 0x38
   151fc:	bl	11ab8 <mycore_free@plt>
   15200:	mov	r0, #0
   15204:	str	r0, [r4, #56]	; 0x38
   15208:	ldr	r0, [r4, #68]	; 0x44
   1520c:	cmp	r0, #0
   15210:	beq	15218 <mchar_async_destroy@@Base+0xa0>
   15214:	bl	11ab8 <mycore_free@plt>
   15218:	ldr	r0, [r4, #4]
   1521c:	cmp	r0, #0
   15220:	beq	152c0 <mchar_async_destroy@@Base+0x148>
   15224:	ldr	r2, [r4, #12]
   15228:	cmp	r2, #0
   1522c:	beq	152b4 <mchar_async_destroy@@Base+0x13c>
   15230:	mov	r6, #0
   15234:	b	1523c <mchar_async_destroy@@Base+0xc4>
   15238:	ldr	r0, [r4, #4]
   1523c:	mov	r1, r0
   15240:	ldr	r3, [r1, r6, lsl #2]!
   15244:	cmp	r3, #0
   15248:	beq	152a4 <mchar_async_destroy@@Base+0x12c>
   1524c:	ldr	r2, [r4, #16]
   15250:	cmp	r2, #0
   15254:	beq	15298 <mchar_async_destroy@@Base+0x120>
   15258:	mov	r7, #1
   1525c:	mov	r5, #0
   15260:	b	15270 <mchar_async_destroy@@Base+0xf8>
   15264:	ldr	r3, [r1]
   15268:	add	r5, r5, #20
   1526c:	add	r7, r7, #1
   15270:	ldr	r1, [r3, r5]
   15274:	cmp	r1, #0
   15278:	beq	1528c <mchar_async_destroy@@Base+0x114>
   1527c:	mov	r0, r1
   15280:	bl	11ab8 <mycore_free@plt>
   15284:	ldr	r0, [r4, #4]
   15288:	ldr	r2, [r4, #16]
   1528c:	add	r1, r0, r6, lsl #2
   15290:	cmp	r7, r2
   15294:	bcc	15264 <mchar_async_destroy@@Base+0xec>
   15298:	ldr	r0, [r1]
   1529c:	bl	11ab8 <mycore_free@plt>
   152a0:	ldr	r2, [r4, #12]
   152a4:	add	r6, r6, #1
   152a8:	cmp	r6, r2
   152ac:	bcc	15238 <mchar_async_destroy@@Base+0xc0>
   152b0:	ldr	r0, [r4, #4]
   152b4:	bl	11ab8 <mycore_free@plt>
   152b8:	mov	r0, #0
   152bc:	str	r0, [r4, #4]
   152c0:	ldr	r0, [r4, #24]
   152c4:	cmp	r0, #0
   152c8:	beq	152d0 <mchar_async_destroy@@Base+0x158>
   152cc:	bl	11ab8 <mycore_free@plt>
   152d0:	ldr	r0, [r4, #44]	; 0x2c
   152d4:	cmp	r0, #0
   152d8:	beq	152e0 <mchar_async_destroy@@Base+0x168>
   152dc:	bl	11ab8 <mycore_free@plt>
   152e0:	ldr	r0, [r4, #80]	; 0x50
   152e4:	mov	r1, #1
   152e8:	bl	11218 <mcsync_destroy@plt>
   152ec:	vmov.i32	q8, #0	; 0x00000000
   152f0:	add	r0, r4, #48	; 0x30
   152f4:	mov	r1, r4
   152f8:	cmp	r8, #0
   152fc:	mov	r6, #0
   15300:	vst1.32	{d16-d17}, [r0]
   15304:	add	r0, r4, #32
   15308:	str	r6, [r4, #80]	; 0x50
   1530c:	vst1.32	{d16-d17}, [r0]
   15310:	add	r0, r4, #16
   15314:	vst1.32	{d16-d17}, [r0]
   15318:	mov	r0, #64	; 0x40
   1531c:	vst1.32	{d16-d17}, [r1], r0
   15320:	moveq	r0, r4
   15324:	vst1.32	{d16-d17}, [r1]
   15328:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1532c:	mov	r0, r4
   15330:	bl	11ab8 <mycore_free@plt>
   15334:	mov	r0, r6
   15338:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001533c <mchar_async_cache_destroy@@Base>:
   1533c:	push	{r4, r5, r6, sl, fp, lr}
   15340:	add	fp, sp, #16
   15344:	mov	r4, #0
   15348:	cmp	r0, #0
   1534c:	beq	1538c <mchar_async_cache_destroy@@Base+0x50>
   15350:	mov	r5, r0
   15354:	ldr	r0, [r0]
   15358:	mov	r6, r1
   1535c:	cmp	r0, #0
   15360:	beq	15368 <mchar_async_cache_destroy@@Base+0x2c>
   15364:	bl	11ab8 <mycore_free@plt>
   15368:	ldr	r0, [r5, #20]
   1536c:	cmp	r0, #0
   15370:	beq	15378 <mchar_async_cache_destroy@@Base+0x3c>
   15374:	bl	11ab8 <mycore_free@plt>
   15378:	cmp	r6, #0
   1537c:	moveq	r0, r5
   15380:	popeq	{r4, r5, r6, sl, fp, pc}
   15384:	mov	r0, r5
   15388:	bl	11ab8 <mycore_free@plt>
   1538c:	mov	r0, r4
   15390:	pop	{r4, r5, r6, sl, fp, pc}

00015394 <mchar_async_mem_malloc@@Base>:
   15394:	cmp	r2, #0
   15398:	bxeq	lr
   1539c:	push	{r4, r5, r6, sl, fp, lr}
   153a0:	add	fp, sp, #16
   153a4:	mov	r6, r0
   153a8:	ldr	r0, [r2]
   153ac:	mov	r5, r3
   153b0:	mov	r4, r2
   153b4:	cmp	r0, #0
   153b8:	beq	153d8 <mchar_async_mem_malloc@@Base+0x44>
   153bc:	ldr	r1, [r4, #8]
   153c0:	cmp	r1, r5
   153c4:	bcs	153f0 <mchar_async_mem_malloc@@Base+0x5c>
   153c8:	bl	11ab8 <mycore_free@plt>
   153cc:	ldr	r0, [r6]
   153d0:	add	r0, r0, r5
   153d4:	b	153e4 <mchar_async_mem_malloc@@Base+0x50>
   153d8:	ldr	r0, [r6]
   153dc:	cmp	r0, r5
   153e0:	movcc	r0, r5
   153e4:	str	r0, [r4, #8]
   153e8:	bl	119c8 <mycore_malloc@plt>
   153ec:	str	r0, [r4]
   153f0:	mov	r0, #0
   153f4:	str	r0, [r4, #4]
   153f8:	pop	{r4, r5, r6, sl, fp, lr}
   153fc:	bx	lr

00015400 <mchar_async_chunk_malloc_without_lock@@Base>:
   15400:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15404:	add	fp, sp, #24
   15408:	mov	r5, r0
   1540c:	ldr	r0, [r0, #40]	; 0x28
   15410:	mov	r4, r2
   15414:	cmp	r0, #0
   15418:	beq	15450 <mchar_async_chunk_malloc_without_lock@@Base+0x50>
   1541c:	add	r5, r5, #24
   15420:	mov	r1, r4
   15424:	mov	r0, r5
   15428:	bl	11bcc <mchar_async_cache_delete@plt>
   1542c:	cmp	r0, #0
   15430:	ldrne	r1, [r5]
   15434:	addne	r0, r0, r0, lsl #2
   15438:	ldrne	r6, [r1, r0, lsl #2]
   1543c:	movne	r0, r6
   15440:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   15444:	mov	r6, #0
   15448:	mov	r0, r6
   1544c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15450:	ldr	r1, [r5, #16]
   15454:	ldr	r0, [r5, #20]
   15458:	cmp	r0, r1
   1545c:	bcc	154f4 <mchar_async_chunk_malloc_without_lock@@Base+0xf4>
   15460:	ldr	r8, [r5, #12]
   15464:	ldr	r1, [r5, #8]
   15468:	mov	r7, r5
   1546c:	add	r0, r8, #1
   15470:	cmp	r0, r1
   15474:	str	r0, [r5, #12]
   15478:	bcs	15484 <mchar_async_chunk_malloc_without_lock@@Base+0x84>
   1547c:	ldr	r6, [r7, #4]!
   15480:	b	154c4 <mchar_async_chunk_malloc_without_lock@@Base+0xc4>
   15484:	ldr	r0, [r7, #4]!
   15488:	lsl	r2, r1, #1
   1548c:	lsl	r1, r1, #3
   15490:	str	r2, [r7, #4]
   15494:	bl	10db0 <mycore_realloc@plt>
   15498:	cmp	r0, #0
   1549c:	beq	15444 <mchar_async_chunk_malloc_without_lock@@Base+0x44>
   154a0:	ldr	r1, [r5, #8]
   154a4:	ldr	r2, [r5, #12]
   154a8:	mov	r6, r0
   154ac:	sub	r1, r1, r2
   154b0:	add	r0, r0, r2, lsl #2
   154b4:	lsl	r2, r1, #2
   154b8:	mov	r1, #0
   154bc:	bl	116ec <memset@plt>
   154c0:	str	r6, [r5, #4]
   154c4:	ldr	r0, [r6, r8, lsl #2]
   154c8:	cmp	r0, #0
   154cc:	bne	154ec <mchar_async_chunk_malloc_without_lock@@Base+0xec>
   154d0:	ldr	r0, [r5, #16]
   154d4:	mov	r1, #20
   154d8:	bl	11020 <mycore_calloc@plt>
   154dc:	cmp	r0, #0
   154e0:	beq	15444 <mchar_async_chunk_malloc_without_lock@@Base+0x44>
   154e4:	ldr	r1, [r7]
   154e8:	str	r0, [r1, r8, lsl #2]
   154ec:	mov	r0, #0
   154f0:	str	r0, [r5, #20]
   154f4:	ldr	r1, [r5, #4]
   154f8:	ldr	r2, [r5, #12]
   154fc:	add	r1, r1, r2, lsl #2
   15500:	add	r2, r0, #1
   15504:	add	r0, r0, r0, lsl #2
   15508:	ldr	r1, [r1, #-4]
   1550c:	str	r2, [r5, #20]
   15510:	add	r6, r1, r0, lsl #2
   15514:	cmp	r6, #0
   15518:	beq	1554c <mchar_async_chunk_malloc_without_lock@@Base+0x14c>
   1551c:	ldr	r0, [r6]
   15520:	cmp	r0, #0
   15524:	beq	15550 <mchar_async_chunk_malloc_without_lock@@Base+0x150>
   15528:	mov	r7, r6
   1552c:	ldr	r1, [r7, #8]!
   15530:	cmp	r1, r4
   15534:	bcs	15568 <mchar_async_chunk_malloc_without_lock@@Base+0x168>
   15538:	bl	11ab8 <mycore_free@plt>
   1553c:	ldr	r0, [r5]
   15540:	add	r0, r0, r4
   15544:	str	r0, [r7]
   15548:	b	15560 <mchar_async_chunk_malloc_without_lock@@Base+0x160>
   1554c:	b	15570 <mchar_async_chunk_malloc_without_lock@@Base+0x170>
   15550:	ldr	r0, [r5]
   15554:	cmp	r0, r4
   15558:	movcc	r0, r4
   1555c:	str	r0, [r6, #8]
   15560:	bl	119c8 <mycore_malloc@plt>
   15564:	str	r0, [r6]
   15568:	mov	r1, #0
   1556c:	str	r1, [r6, #4]
   15570:	cmp	r0, #0
   15574:	moveq	r6, r0
   15578:	mov	r0, r6
   1557c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015580 <mchar_async_cache_delete@@Base>:
   15580:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15584:	add	fp, sp, #28
   15588:	sub	sp, sp, #4
   1558c:	ldr	r2, [r0, #12]
   15590:	mov	r8, #0
   15594:	cmp	r2, #0
   15598:	beq	157c0 <mchar_async_cache_delete@@Base+0x240>
   1559c:	mov	sl, r0
   155a0:	ldr	r0, [r0]
   155a4:	add	r3, r2, r2, lsl #2
   155a8:	add	r3, r0, r3, lsl #2
   155ac:	ldr	r7, [r3, #4]
   155b0:	cmp	r7, r1
   155b4:	bcs	155c8 <mchar_async_cache_delete@@Base+0x48>
   155b8:	ldr	r2, [r3, #12]
   155bc:	cmp	r2, #0
   155c0:	bne	155a4 <mchar_async_cache_delete@@Base+0x24>
   155c4:	b	157c0 <mchar_async_cache_delete@@Base+0x240>
   155c8:	mov	r6, r2
   155cc:	add	r2, r2, r2, lsl #2
   155d0:	add	r5, r0, r2, lsl #2
   155d4:	mov	r3, r5
   155d8:	ldr	r2, [r3, #12]!
   155dc:	add	r7, r2, r2, lsl #2
   155e0:	add	r7, r0, r7, lsl #2
   155e4:	ldr	r4, [r7, #4]
   155e8:	cmp	r4, r1
   155ec:	beq	155c8 <mchar_async_cache_delete@@Base+0x48>
   155f0:	ldr	lr, [r5, #16]
   155f4:	cmp	lr, #0
   155f8:	beq	15668 <mchar_async_cache_delete@@Base+0xe8>
   155fc:	add	r1, lr, lr, lsl #2
   15600:	add	ip, r0, r1, lsl #2
   15604:	mov	r9, ip
   15608:	ldr	r1, [r9, #8]!
   1560c:	cmp	r1, r6
   15610:	bne	156c0 <mchar_async_cache_delete@@Base+0x140>
   15614:	ldr	ip, [r5, #8]!
   15618:	cmp	r2, #0
   1561c:	beq	15724 <mchar_async_cache_delete@@Base+0x1a4>
   15620:	cmp	ip, #0
   15624:	beq	15750 <mchar_async_cache_delete@@Base+0x1d0>
   15628:	ldr	r3, [r7, #8]!
   1562c:	add	r1, r3, r3, lsl #2
   15630:	mov	r4, r3
   15634:	add	r1, r0, r1, lsl #2
   15638:	ldr	r3, [r1, #8]!
   1563c:	cmp	r3, #0
   15640:	bne	1562c <mchar_async_cache_delete@@Base+0xac>
   15644:	cmp	r4, #0
   15648:	beq	1574c <mchar_async_cache_delete@@Base+0x1cc>
   1564c:	str	ip, [r1]
   15650:	ldr	r1, [r5]
   15654:	add	r1, r1, r1, lsl #2
   15658:	add	r1, r0, r1, lsl #2
   1565c:	str	r4, [r1, #16]
   15660:	str	r2, [r9]
   15664:	b	15764 <mchar_async_cache_delete@@Base+0x1e4>
   15668:	ldr	r1, [r5, #8]
   1566c:	cmp	r1, #0
   15670:	beq	15718 <mchar_async_cache_delete@@Base+0x198>
   15674:	cmp	r2, #0
   15678:	beq	15740 <mchar_async_cache_delete@@Base+0x1c0>
   1567c:	add	r7, r1, r1, lsl #2
   15680:	add	ip, r0, r7, lsl #2
   15684:	ldr	r5, [ip, #12]!
   15688:	add	r7, r5, r5, lsl #2
   1568c:	mov	r4, r5
   15690:	add	r7, r0, r7, lsl #2
   15694:	ldr	r5, [r7, #12]!
   15698:	cmp	r5, #0
   1569c:	bne	15688 <mchar_async_cache_delete@@Base+0x108>
   156a0:	cmp	r4, #0
   156a4:	beq	1573c <mchar_async_cache_delete@@Base+0x1bc>
   156a8:	str	r2, [r7]
   156ac:	ldr	r2, [r3]
   156b0:	add	r2, r2, r2, lsl #2
   156b4:	add	r2, r0, r2, lsl #2
   156b8:	str	r4, [r2, #16]
   156bc:	b	15740 <mchar_async_cache_delete@@Base+0x1c0>
   156c0:	ldr	r1, [r5, #8]
   156c4:	cmp	r1, #0
   156c8:	beq	15730 <mchar_async_cache_delete@@Base+0x1b0>
   156cc:	cmp	r2, #0
   156d0:	beq	1575c <mchar_async_cache_delete@@Base+0x1dc>
   156d4:	add	r4, r1, r1, lsl #2
   156d8:	add	r9, r0, r4, lsl #2
   156dc:	ldr	r4, [r9, #12]!
   156e0:	mov	r7, r4
   156e4:	add	r4, r4, r4, lsl #2
   156e8:	add	r5, r0, r4, lsl #2
   156ec:	ldr	r4, [r5, #12]!
   156f0:	cmp	r4, #0
   156f4:	bne	156e0 <mchar_async_cache_delete@@Base+0x160>
   156f8:	cmp	r7, #0
   156fc:	beq	15758 <mchar_async_cache_delete@@Base+0x1d8>
   15700:	str	r2, [r5]
   15704:	ldr	r2, [r3]
   15708:	add	r2, r2, r2, lsl #2
   1570c:	add	r2, r0, r2, lsl #2
   15710:	str	r7, [r2, #16]
   15714:	b	1575c <mchar_async_cache_delete@@Base+0x1dc>
   15718:	mov	lr, #0
   1571c:	str	r2, [sl, #12]
   15720:	b	15764 <mchar_async_cache_delete@@Base+0x1e4>
   15724:	str	ip, [r9]
   15728:	ldr	r2, [r5]
   1572c:	b	15764 <mchar_async_cache_delete@@Base+0x1e4>
   15730:	str	r2, [ip, #12]
   15734:	ldr	r2, [r3]
   15738:	b	15764 <mchar_async_cache_delete@@Base+0x1e4>
   1573c:	str	r2, [ip]
   15740:	str	r1, [sl, #12]
   15744:	mov	lr, #0
   15748:	b	15760 <mchar_async_cache_delete@@Base+0x1e0>
   1574c:	str	ip, [r7]
   15750:	str	r2, [r9]
   15754:	b	15764 <mchar_async_cache_delete@@Base+0x1e4>
   15758:	str	r2, [r9]
   1575c:	str	r1, [ip, #12]
   15760:	mov	r2, r1
   15764:	add	r1, r2, r2, lsl #2
   15768:	add	r0, r0, r1, lsl #2
   1576c:	str	lr, [r0, #16]
   15770:	ldr	r0, [sl, #20]
   15774:	ldr	r1, [sl, #24]
   15778:	str	r6, [r0, r1, lsl #2]
   1577c:	ldr	r1, [sl, #24]
   15780:	ldr	r5, [sl, #28]
   15784:	add	r1, r1, #1
   15788:	cmp	r1, r5
   1578c:	str	r1, [sl, #24]
   15790:	bcc	157b0 <mchar_async_cache_delete@@Base+0x230>
   15794:	lsl	r1, r5, #3
   15798:	bl	10db0 <mycore_realloc@plt>
   1579c:	cmp	r0, #0
   157a0:	beq	157c0 <mchar_async_cache_delete@@Base+0x240>
   157a4:	str	r0, [sl, #20]
   157a8:	lsl	r0, r5, #1
   157ac:	str	r0, [sl, #28]
   157b0:	ldr	r0, [sl, #16]
   157b4:	mov	r8, r6
   157b8:	sub	r0, r0, #1
   157bc:	str	r0, [sl, #16]
   157c0:	mov	r0, r8
   157c4:	sub	sp, fp, #28
   157c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   157cc:	nop	{0}

000157d0 <mchar_async_node_add@@Base>:
   157d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157d4:	add	fp, sp, #28
   157d8:	sub	sp, sp, #4
   157dc:	mov	r5, r0
   157e0:	ldr	r0, [r0, #80]	; 0x50
   157e4:	mov	sl, r1
   157e8:	bl	116b0 <mcsync_lock@plt>
   157ec:	cmp	r0, #0
   157f0:	beq	15808 <mchar_async_node_add@@Base+0x38>
   157f4:	cmp	sl, #0
   157f8:	mov	r6, #0
   157fc:	movne	r0, #96	; 0x60
   15800:	strne	r0, [sl]
   15804:	b	15910 <mchar_async_node_add@@Base+0x140>
   15808:	ldr	r0, [r5, #72]	; 0x48
   1580c:	cmp	r0, #0
   15810:	beq	15828 <mchar_async_node_add@@Base+0x58>
   15814:	sub	r0, r0, #1
   15818:	str	r0, [r5, #72]	; 0x48
   1581c:	ldr	r1, [r5, #68]	; 0x44
   15820:	ldr	r6, [r1, r0, lsl #2]
   15824:	b	15840 <mchar_async_node_add@@Base+0x70>
   15828:	ldr	r6, [r5, #60]	; 0x3c
   1582c:	ldr	r0, [r5, #64]	; 0x40
   15830:	cmp	r6, r0
   15834:	bcs	158d4 <mchar_async_node_add@@Base+0x104>
   15838:	add	r0, r6, #1
   1583c:	str	r0, [r5, #60]	; 0x3c
   15840:	ldr	r8, [r5, #56]	; 0x38
   15844:	add	r0, pc, #212	; 0xd4
   15848:	add	r9, r6, r6, lsl #3
   1584c:	vld1.64	{d16-d17}, [r0 :128]
   15850:	mov	r0, #20480	; 0x5000
   15854:	add	r7, r8, r9, lsl #2
   15858:	add	r4, r7, #8
   1585c:	vst1.32	{d16-d17}, [r4]
   15860:	bl	119c8 <mycore_malloc@plt>
   15864:	cmp	r0, #0
   15868:	str	r0, [r7, #4]
   1586c:	beq	158f4 <mchar_async_node_add@@Base+0x124>
   15870:	vmov.i32	q8, #0	; 0x00000000
   15874:	vst1.32	{d16-d17}, [r0]
   15878:	mov	r0, #0
   1587c:	ldr	r1, [r4]
   15880:	str	r0, [r7, #28]
   15884:	lsl	r0, r1, #2
   15888:	str	r1, [r7, #32]
   1588c:	bl	119c8 <mycore_malloc@plt>
   15890:	cmp	r0, #0
   15894:	str	r0, [r7, #24]
   15898:	beq	158e4 <mchar_async_node_add@@Base+0x114>
   1589c:	ldr	r2, [r5]
   158a0:	mov	r0, r5
   158a4:	bl	11920 <mchar_async_chunk_malloc_without_lock@plt>
   158a8:	cmp	r0, #0
   158ac:	str	r0, [r8, r9, lsl #2]
   158b0:	beq	158f4 <mchar_async_node_add@@Base+0x124>
   158b4:	mov	r4, #0
   158b8:	str	r4, [r0, #12]
   158bc:	str	r4, [r0, #16]
   158c0:	ldr	r0, [r5, #80]	; 0x50
   158c4:	bl	11b60 <mcsync_unlock@plt>
   158c8:	cmp	sl, #0
   158cc:	strne	r4, [sl]
   158d0:	b	15910 <mchar_async_node_add@@Base+0x140>
   158d4:	cmp	sl, #0
   158d8:	beq	15904 <mchar_async_node_add@@Base+0x134>
   158dc:	mov	r0, #98	; 0x62
   158e0:	b	15900 <mchar_async_node_add@@Base+0x130>
   158e4:	add	r4, r7, #4
   158e8:	ldr	r0, [r4]
   158ec:	bl	11ab8 <mycore_free@plt>
   158f0:	str	r0, [r4]
   158f4:	cmp	sl, #0
   158f8:	beq	15904 <mchar_async_node_add@@Base+0x134>
   158fc:	mov	r0, #2
   15900:	str	r0, [sl]
   15904:	ldr	r0, [r5, #80]	; 0x50
   15908:	bl	11b60 <mcsync_unlock@plt>
   1590c:	mov	r6, #0
   15910:	mov	r0, r6
   15914:	sub	sp, fp, #28
   15918:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1591c:	nop	{0}
   15920:	andeq	r0, r0, r0, lsl #8
   15924:	andeq	r0, r0, r1
	...

00015930 <mchar_async_node_clean@@Base>:
   15930:	ldr	r2, [r0, #60]	; 0x3c
   15934:	cmp	r2, r1
   15938:	bls	159a0 <mchar_async_node_clean@@Base+0x70>
   1593c:	ldr	ip, [r0, #56]	; 0x38
   15940:	add	r1, r1, r1, lsl #3
   15944:	mov	r3, ip
   15948:	ldr	r0, [r3, r1, lsl #2]!
   1594c:	ldr	r2, [r0, #16]
   15950:	cmp	r2, #0
   15954:	beq	1596c <mchar_async_node_clean@@Base+0x3c>
   15958:	mov	r0, r2
   1595c:	ldr	r2, [r2, #16]
   15960:	cmp	r2, #0
   15964:	bne	15958 <mchar_async_node_clean@@Base+0x28>
   15968:	str	r0, [r3]
   1596c:	mov	r2, #0
   15970:	str	r2, [r0, #4]
   15974:	add	r0, ip, r1, lsl #2
   15978:	mov	r1, #1
   1597c:	str	r1, [r0, #12]
   15980:	str	r2, [r0, #16]
   15984:	str	r2, [r0, #20]
   15988:	str	r2, [r0, #28]
   1598c:	ldr	r0, [r0, #4]
   15990:	cmp	r0, #0
   15994:	bxeq	lr
   15998:	vmov.i32	q8, #0	; 0x00000000
   1599c:	vst1.32	{d16-d17}, [r0]
   159a0:	bx	lr

000159a4 <mchar_async_node_delete@@Base>:
   159a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159a8:	add	fp, sp, #28
   159ac:	sub	sp, sp, #4
   159b0:	mov	r4, r0
   159b4:	ldr	r0, [r0, #80]	; 0x50
   159b8:	mov	r8, r1
   159bc:	bl	116b0 <mcsync_lock@plt>
   159c0:	ldr	r0, [r4, #60]	; 0x3c
   159c4:	cmp	r0, r8
   159c8:	bls	15aa0 <mchar_async_node_delete@@Base+0xfc>
   159cc:	ldr	r9, [r4, #56]	; 0x38
   159d0:	add	sl, r8, r8, lsl #3
   159d4:	mov	r5, r9
   159d8:	ldr	r0, [r5, sl, lsl #2]!
   159dc:	mov	r6, r0
   159e0:	ldr	r0, [r0, #12]
   159e4:	cmp	r0, #0
   159e8:	bne	159dc <mchar_async_node_delete@@Base+0x38>
   159ec:	cmp	r6, #0
   159f0:	beq	15a14 <mchar_async_node_delete@@Base+0x70>
   159f4:	add	r7, r4, #24
   159f8:	ldr	r2, [r6, #8]
   159fc:	mov	r0, r7
   15a00:	mov	r1, r6
   15a04:	bl	119b0 <mchar_async_cache_add@plt>
   15a08:	ldr	r6, [r6, #16]
   15a0c:	cmp	r6, #0
   15a10:	bne	159f8 <mchar_async_node_delete@@Base+0x54>
   15a14:	add	r6, r9, sl, lsl #2
   15a18:	ldr	r0, [r6, #4]
   15a1c:	cmp	r0, #0
   15a20:	beq	15a38 <mchar_async_node_delete@@Base+0x94>
   15a24:	bl	11ab8 <mycore_free@plt>
   15a28:	ldr	r0, [r6, #24]
   15a2c:	cmp	r0, #0
   15a30:	beq	15a38 <mchar_async_node_delete@@Base+0x94>
   15a34:	bl	11ab8 <mycore_free@plt>
   15a38:	vmov.i32	q8, #0	; 0x00000000
   15a3c:	mov	r0, #32
   15a40:	add	r1, r5, #16
   15a44:	vst1.32	{d16-d17}, [r5], r0
   15a48:	mov	r0, #0
   15a4c:	vst1.32	{d16-d17}, [r1]
   15a50:	str	r0, [r5]
   15a54:	ldr	r0, [r4, #72]	; 0x48
   15a58:	ldr	r5, [r4, #76]	; 0x4c
   15a5c:	cmp	r0, r5
   15a60:	bcc	15a80 <mchar_async_node_delete@@Base+0xdc>
   15a64:	ldr	r0, [r4, #68]	; 0x44
   15a68:	lsl	r1, r5, #2
   15a6c:	bl	10db0 <mycore_realloc@plt>
   15a70:	cmp	r0, #0
   15a74:	strne	r0, [r4, #68]	; 0x44
   15a78:	lslne	r0, r5, #1
   15a7c:	strne	r0, [r4, #76]	; 0x4c
   15a80:	ldr	r0, [r4, #68]	; 0x44
   15a84:	ldr	r1, [r4, #72]	; 0x48
   15a88:	str	r8, [r0, r1, lsl #2]
   15a8c:	ldr	r1, [r4, #72]	; 0x48
   15a90:	ldr	r0, [r4, #80]	; 0x50
   15a94:	add	r1, r1, #1
   15a98:	str	r1, [r4, #72]	; 0x48
   15a9c:	b	15aa4 <mchar_async_node_delete@@Base+0x100>
   15aa0:	ldr	r0, [r4, #80]	; 0x50
   15aa4:	sub	sp, fp, #28
   15aa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15aac:	b	11b60 <mcsync_unlock@plt>

00015ab0 <mchar_async_cache_add@@Base>:
   15ab0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15ab4:	add	fp, sp, #24
   15ab8:	mov	r4, r0
   15abc:	mov	r6, r0
   15ac0:	mov	r5, r2
   15ac4:	mov	r8, r1
   15ac8:	ldr	r7, [r4, #12]!
   15acc:	ldr	r0, [r4, #4]
   15ad0:	cmp	r7, #0
   15ad4:	add	r0, r0, #1
   15ad8:	str	r0, [r4, #4]
   15adc:	beq	15b00 <mchar_async_cache_add@@Base+0x50>
   15ae0:	ldr	r0, [r6, #24]
   15ae4:	cmp	r0, #0
   15ae8:	beq	15b24 <mchar_async_cache_add@@Base+0x74>
   15aec:	sub	r0, r0, #1
   15af0:	str	r0, [r6, #24]
   15af4:	ldr	r1, [r6, #20]
   15af8:	ldr	r1, [r1, r0, lsl #2]
   15afc:	b	15b64 <mchar_async_cache_add@@Base+0xb4>
   15b00:	ldr	r0, [r6, #24]
   15b04:	ldr	r7, [r6]
   15b08:	cmp	r0, #0
   15b0c:	beq	15c30 <mchar_async_cache_add@@Base+0x180>
   15b10:	sub	r0, r0, #1
   15b14:	str	r0, [r6, #24]
   15b18:	ldr	r1, [r6, #20]
   15b1c:	ldr	r0, [r1, r0, lsl #2]
   15b20:	b	15c6c <mchar_async_cache_add@@Base+0x1bc>
   15b24:	ldr	r0, [r6, #8]
   15b28:	ldr	r1, [r6, #4]
   15b2c:	add	r0, r0, #1
   15b30:	cmp	r0, r1
   15b34:	str	r0, [r6, #8]
   15b38:	bcc	15b5c <mchar_async_cache_add@@Base+0xac>
   15b3c:	lsl	r0, r1, #1
   15b40:	add	r1, r1, r1, lsl #2
   15b44:	str	r0, [r6, #4]
   15b48:	lsl	r1, r1, #3
   15b4c:	ldr	r0, [r6]
   15b50:	bl	10db0 <mycore_realloc@plt>
   15b54:	cmp	r0, #0
   15b58:	strne	r0, [r6]
   15b5c:	ldr	r0, [r6, #8]
   15b60:	sub	r1, r0, #1
   15b64:	ldr	r3, [r6]
   15b68:	add	r2, r7, r7, lsl #2
   15b6c:	mov	r0, r7
   15b70:	add	r2, r3, r2, lsl #2
   15b74:	ldr	r7, [r2, #4]
   15b78:	cmp	r7, r5
   15b7c:	beq	15bb0 <mchar_async_cache_add@@Base+0x100>
   15b80:	bhi	15be0 <mchar_async_cache_add@@Base+0x130>
   15b84:	ldr	r7, [r2, #12]!
   15b88:	cmp	r7, #0
   15b8c:	bne	15b68 <mchar_async_cache_add@@Base+0xb8>
   15b90:	str	r1, [r2]
   15b94:	add	r1, r1, r1, lsl #2
   15b98:	add	r7, r3, r1, lsl #2
   15b9c:	mov	r1, #0
   15ba0:	str	r5, [r7, #4]
   15ba4:	str	r1, [r7, #8]
   15ba8:	str	r1, [r7, #12]
   15bac:	b	15c88 <mchar_async_cache_add@@Base+0x1d8>
   15bb0:	ldr	r4, [r2, #12]!
   15bb4:	add	r7, r1, r1, lsl #2
   15bb8:	add	r7, r3, r7, lsl #2
   15bbc:	add	r6, r7, #12
   15bc0:	cmp	r4, #0
   15bc4:	beq	15c94 <mchar_async_cache_add@@Base+0x1e4>
   15bc8:	str	r4, [r6]
   15bcc:	ldr	r6, [r2]
   15bd0:	add	r6, r6, r6, lsl #2
   15bd4:	add	r3, r3, r6, lsl #2
   15bd8:	str	r1, [r3, #16]
   15bdc:	b	15c9c <mchar_async_cache_add@@Base+0x1ec>
   15be0:	ldr	r7, [r2, #16]!
   15be4:	mov	ip, #0
   15be8:	mov	r6, #0
   15bec:	cmp	r7, #0
   15bf0:	beq	15c0c <mchar_async_cache_add@@Base+0x15c>
   15bf4:	add	r6, r7, r7, lsl #2
   15bf8:	add	r4, r3, r6, lsl #2
   15bfc:	ldr	r6, [r4, #8]!
   15c00:	cmp	r6, r0
   15c04:	mov	r6, r7
   15c08:	addne	r4, r4, #4
   15c0c:	add	r7, r1, r1, lsl #2
   15c10:	str	r1, [r4]
   15c14:	add	r7, r3, r7, lsl #2
   15c18:	str	r6, [r7, #16]
   15c1c:	str	r1, [r2]
   15c20:	str	r0, [r7, #12]
   15c24:	stmib	r7, {r5, ip}
   15c28:	str	r8, [r7]
   15c2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15c30:	ldmib	r6, {r0, r1}
   15c34:	add	r1, r1, #1
   15c38:	cmp	r1, r0
   15c3c:	str	r1, [r6, #8]
   15c40:	bcc	15c64 <mchar_async_cache_add@@Base+0x1b4>
   15c44:	lsl	r1, r0, #1
   15c48:	add	r0, r0, r0, lsl #2
   15c4c:	str	r1, [r6, #4]
   15c50:	lsl	r1, r0, #3
   15c54:	mov	r0, r7
   15c58:	bl	10db0 <mycore_realloc@plt>
   15c5c:	cmp	r0, #0
   15c60:	strne	r0, [r6]
   15c64:	ldr	r0, [r6, #8]
   15c68:	sub	r0, r0, #1
   15c6c:	str	r0, [r4]
   15c70:	add	r0, r0, r0, lsl #2
   15c74:	add	r7, r7, r0, lsl #2
   15c78:	mov	r0, #0
   15c7c:	str	r5, [r7, #4]
   15c80:	str	r0, [r7, #8]
   15c84:	str	r0, [r7, #12]
   15c88:	str	r0, [r7, #16]
   15c8c:	str	r8, [r7]
   15c90:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15c94:	mov	r3, #0
   15c98:	str	r3, [r6]
   15c9c:	str	r1, [r2]
   15ca0:	mov	r1, #0
   15ca4:	str	r0, [r7, #16]
   15ca8:	str	r5, [r7, #4]
   15cac:	str	r1, [r7, #8]
   15cb0:	str	r8, [r7]
   15cb4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015cb8 <mchar_sync_chunk_find_by_size@@Base>:
   15cb8:	ldr	r0, [r0]
   15cbc:	ldr	r0, [r0, #12]
   15cc0:	cmp	r0, #0
   15cc4:	bxeq	lr
   15cc8:	ldr	r2, [r0, #8]
   15ccc:	cmp	r2, r1
   15cd0:	bcc	15cbc <mchar_sync_chunk_find_by_size@@Base+0x4>
   15cd4:	bx	lr

00015cd8 <mchar_sync_chunk_insert_after@@Base>:
   15cd8:	ldr	r2, [r0, #12]
   15cdc:	cmp	r2, r1
   15ce0:	bxeq	lr
   15ce4:	ldr	r2, [r1, #16]
   15ce8:	cmp	r2, #0
   15cec:	ldrne	r3, [r1, #12]
   15cf0:	strne	r3, [r2, #12]
   15cf4:	ldr	r3, [r1, #12]
   15cf8:	cmp	r3, #0
   15cfc:	strne	r2, [r3, #16]
   15d00:	ldr	r2, [r0, #12]
   15d04:	cmp	r2, #0
   15d08:	strne	r1, [r2, #16]
   15d0c:	str	r2, [r1, #12]
   15d10:	str	r0, [r1, #16]
   15d14:	str	r1, [r0, #12]
   15d18:	bx	lr

00015d1c <mchar_async_malloc@@Base>:
   15d1c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15d20:	add	fp, sp, #24
   15d24:	cmp	r2, #0
   15d28:	moveq	r0, #0
   15d2c:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   15d30:	ldr	r6, [r0, #56]	; 0x38
   15d34:	mov	r8, r0
   15d38:	add	r0, r1, r1, lsl #3
   15d3c:	mov	r9, r2
   15d40:	ldr	r5, [r6, r0, lsl #2]!
   15d44:	ldr	r0, [r6, #20]
   15d48:	add	r7, r6, #4
   15d4c:	cmp	r0, #0
   15d50:	beq	15d74 <mchar_async_malloc@@Base+0x58>
   15d54:	mov	r0, r7
   15d58:	mov	r1, r9
   15d5c:	bl	11bcc <mchar_async_cache_delete@plt>
   15d60:	cmp	r0, #0
   15d64:	ldrne	r1, [r7]
   15d68:	addne	r0, r0, r0, lsl #2
   15d6c:	ldrne	r0, [r1, r0, lsl #2]
   15d70:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   15d74:	ldmib	r5, {r0, r2}
   15d78:	add	r4, r9, #4
   15d7c:	add	r1, r4, r0
   15d80:	cmp	r1, r2
   15d84:	bls	15e70 <mchar_async_malloc@@Base+0x154>
   15d88:	add	r1, r0, #4
   15d8c:	cmp	r1, r2
   15d90:	bcs	15dbc <mchar_async_malloc@@Base+0xa0>
   15d94:	sub	r2, r2, r0
   15d98:	subs	r2, r2, #4
   15d9c:	beq	15dbc <mchar_async_malloc@@Base+0xa0>
   15da0:	ldr	r3, [r5]
   15da4:	str	r2, [r3, r0]
   15da8:	add	r1, r3, r1
   15dac:	ldr	r0, [r5, #8]
   15db0:	str	r0, [r5, #4]
   15db4:	mov	r0, r7
   15db8:	bl	119b0 <mchar_async_cache_add@plt>
   15dbc:	ldr	r5, [r6]
   15dc0:	ldr	r5, [r5, #12]
   15dc4:	cmp	r5, #0
   15dc8:	beq	15de4 <mchar_async_malloc@@Base+0xc8>
   15dcc:	ldr	r0, [r5, #8]
   15dd0:	cmp	r0, r4
   15dd4:	bcc	15dc0 <mchar_async_malloc@@Base+0xa4>
   15dd8:	mov	r0, #0
   15ddc:	str	r0, [r5, #4]
   15de0:	b	15e24 <mchar_async_malloc@@Base+0x108>
   15de4:	ldr	r5, [r8]
   15de8:	cmp	r4, r5
   15dec:	bls	15e04 <mchar_async_malloc@@Base+0xe8>
   15df0:	ldr	r0, [r8, #80]	; 0x50
   15df4:	bl	116b0 <mcsync_lock@plt>
   15df8:	add	r2, r5, r4
   15dfc:	mov	r0, r8
   15e00:	b	15e14 <mchar_async_malloc@@Base+0xf8>
   15e04:	ldr	r0, [r8, #80]	; 0x50
   15e08:	bl	116b0 <mcsync_lock@plt>
   15e0c:	mov	r0, r8
   15e10:	mov	r2, r5
   15e14:	bl	11920 <mchar_async_chunk_malloc_without_lock@plt>
   15e18:	mov	r5, r0
   15e1c:	ldr	r0, [r8, #80]	; 0x50
   15e20:	bl	11b60 <mcsync_unlock@plt>
   15e24:	ldr	r0, [r6]
   15e28:	ldr	r1, [r0, #12]
   15e2c:	cmp	r1, r5
   15e30:	beq	15e68 <mchar_async_malloc@@Base+0x14c>
   15e34:	ldr	r1, [r5, #16]
   15e38:	cmp	r1, #0
   15e3c:	ldrne	r2, [r5, #12]
   15e40:	strne	r2, [r1, #12]
   15e44:	ldr	r2, [r5, #12]
   15e48:	cmp	r2, #0
   15e4c:	strne	r1, [r2, #16]
   15e50:	ldr	r1, [r0, #12]
   15e54:	cmp	r1, #0
   15e58:	strne	r5, [r1, #16]
   15e5c:	str	r1, [r5, #12]
   15e60:	str	r0, [r5, #16]
   15e64:	str	r5, [r0, #12]
   15e68:	str	r5, [r6]
   15e6c:	ldr	r0, [r5, #4]
   15e70:	ldr	r1, [r5]
   15e74:	str	r9, [r1, r0]!
   15e78:	ldr	r0, [r5, #4]
   15e7c:	add	r0, r4, r0
   15e80:	str	r0, [r5, #4]
   15e84:	add	r0, r1, #4
   15e88:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015e8c <mchar_async_realloc@@Base>:
   15e8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e90:	add	fp, sp, #28
   15e94:	sub	sp, sp, #4
   15e98:	mov	r5, #0
   15e9c:	cmp	r2, #0
   15ea0:	beq	15f3c <mchar_async_realloc@@Base+0xb0>
   15ea4:	mov	r4, r2
   15ea8:	ldr	r2, [fp, #8]
   15eac:	ldr	r7, [r4, #-4]
   15eb0:	cmp	r7, r2
   15eb4:	bcs	15f38 <mchar_async_realloc@@Base+0xac>
   15eb8:	ldr	r9, [r0, #56]	; 0x38
   15ebc:	add	sl, r1, r1, lsl #3
   15ec0:	mov	r8, r3
   15ec4:	str	r9, [sp]
   15ec8:	ldr	r6, [r9, sl, lsl #2]!
   15ecc:	ldr	r3, [r6, #4]
   15ed0:	cmp	r3, r7
   15ed4:	bcc	15efc <mchar_async_realloc@@Base+0x70>
   15ed8:	sub	lr, r3, r7
   15edc:	ldr	r3, [r6]
   15ee0:	add	ip, r3, lr
   15ee4:	cmp	ip, r4
   15ee8:	bne	15efc <mchar_async_realloc@@Base+0x70>
   15eec:	ldr	r3, [r6, #8]
   15ef0:	add	lr, lr, r2
   15ef4:	cmp	lr, r3
   15ef8:	bls	15f48 <mchar_async_realloc@@Base+0xbc>
   15efc:	bl	1174c <mchar_async_malloc@plt>
   15f00:	cmp	r0, #0
   15f04:	beq	15f3c <mchar_async_realloc@@Base+0xb0>
   15f08:	mov	r1, r4
   15f0c:	mov	r2, r8
   15f10:	mov	r6, r0
   15f14:	bl	11050 <memcpy@plt>
   15f18:	ldr	r0, [sp]
   15f1c:	mov	r1, r4
   15f20:	mov	r2, r7
   15f24:	add	r0, r0, sl, lsl #2
   15f28:	add	r0, r0, #4
   15f2c:	bl	119b0 <mchar_async_cache_add@plt>
   15f30:	mov	r5, r6
   15f34:	b	15f3c <mchar_async_realloc@@Base+0xb0>
   15f38:	mov	r5, r4
   15f3c:	mov	r0, r5
   15f40:	sub	sp, fp, #28
   15f44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f48:	str	r2, [ip, #-4]
   15f4c:	mov	r5, r4
   15f50:	ldr	r0, [r9]
   15f54:	str	lr, [r0, #4]
   15f58:	b	15f3c <mchar_async_realloc@@Base+0xb0>

00015f5c <mchar_async_crop_first_chars@@Base>:
   15f5c:	push	{r4, r5, fp, lr}
   15f60:	add	fp, sp, #8
   15f64:	cmp	r2, #0
   15f68:	moveq	r5, #0
   15f6c:	moveq	r0, r5
   15f70:	popeq	{r4, r5, fp, pc}
   15f74:	ldr	r4, [r2, #-4]
   15f78:	add	r5, r2, r3
   15f7c:	sub	r4, r4, r3
   15f80:	str	r4, [r5, #-4]
   15f84:	add	r4, r3, #4
   15f88:	cmp	r4, #5
   15f8c:	bcc	15fb4 <mchar_async_crop_first_chars@@Base+0x58>
   15f90:	sub	r3, r3, #4
   15f94:	add	r1, r1, r1, lsl #3
   15f98:	str	r3, [r2, #-4]
   15f9c:	ldr	r0, [r0, #56]	; 0x38
   15fa0:	add	r0, r0, r1, lsl #2
   15fa4:	mov	r1, r2
   15fa8:	mov	r2, r3
   15fac:	add	r0, r0, #4
   15fb0:	bl	119b0 <mchar_async_cache_add@plt>
   15fb4:	mov	r0, r5
   15fb8:	pop	{r4, r5, fp, pc}

00015fbc <mchar_async_crop_first_chars_without_cache@@Base>:
   15fbc:	cmp	r0, #0
   15fc0:	moveq	r0, #0
   15fc4:	bxeq	lr
   15fc8:	mov	r2, r0
   15fcc:	add	r0, r0, r1
   15fd0:	ldr	r2, [r2, #-4]
   15fd4:	sub	r1, r2, r1
   15fd8:	str	r1, [r0, #-4]
   15fdc:	bx	lr

00015fe0 <mchar_async_get_size_by_data@@Base>:
   15fe0:	cmp	r0, #0
   15fe4:	ldrne	r0, [r0, #-4]
   15fe8:	moveq	r0, #0
   15fec:	bx	lr

00015ff0 <mchar_async_free@@Base>:
   15ff0:	cmp	r2, #0
   15ff4:	bxeq	lr
   15ff8:	ldr	r0, [r0, #56]	; 0x38
   15ffc:	ldr	r3, [r2, #-4]
   16000:	add	r1, r1, r1, lsl #3
   16004:	add	r0, r0, r1, lsl #2
   16008:	mov	r1, r2
   1600c:	mov	r2, r3
   16010:	add	r0, r0, #4
   16014:	b	15ab0 <mchar_async_cache_add@@Base>

00016018 <mchar_async_cache_malloc@@Base>:
   16018:	push	{r4, sl, fp, lr}
   1601c:	add	fp, sp, #8
   16020:	mov	r4, r0
   16024:	ldr	r0, [r0, #24]
   16028:	cmp	r0, #0
   1602c:	subne	r0, r0, #1
   16030:	strne	r0, [r4, #24]
   16034:	ldrne	r1, [r4, #20]
   16038:	ldrne	r0, [r1, r0, lsl #2]
   1603c:	popne	{r4, sl, fp, pc}
   16040:	ldr	r0, [r4, #8]
   16044:	ldr	r1, [r4, #4]
   16048:	add	r0, r0, #1
   1604c:	cmp	r0, r1
   16050:	str	r0, [r4, #8]
   16054:	bcc	16078 <mchar_async_cache_malloc@@Base+0x60>
   16058:	lsl	r0, r1, #1
   1605c:	add	r1, r1, r1, lsl #2
   16060:	str	r0, [r4, #4]
   16064:	lsl	r1, r1, #3
   16068:	ldr	r0, [r4]
   1606c:	bl	10db0 <mycore_realloc@plt>
   16070:	cmp	r0, #0
   16074:	strne	r0, [r4]
   16078:	ldr	r0, [r4, #8]
   1607c:	sub	r0, r0, #1
   16080:	pop	{r4, sl, fp, pc}

00016084 <mcobject_create@@Base>:
   16084:	mov	r0, #1
   16088:	mov	r1, #24
   1608c:	b	11020 <mycore_calloc@plt>

00016090 <mcobject_init@@Base>:
   16090:	push	{r4, r5, fp, lr}
   16094:	add	fp, sp, #8
   16098:	mov	r5, #0
   1609c:	mov	r4, r0
   160a0:	str	r5, [r0]
   160a4:	str	r1, [r0, #8]
   160a8:	str	r5, [r0, #12]
   160ac:	str	r2, [r0, #16]
   160b0:	str	r1, [r0, #20]
   160b4:	lsl	r0, r1, #2
   160b8:	bl	119c8 <mycore_malloc@plt>
   160bc:	cmp	r0, #0
   160c0:	str	r0, [r4, #4]
   160c4:	movweq	r5, #85	; 0x55
   160c8:	mov	r0, r5
   160cc:	pop	{r4, r5, fp, pc}

000160d0 <mcobject_clean@@Base>:
   160d0:	push	{r4, r5, r6, sl, fp, lr}
   160d4:	add	fp, sp, #16
   160d8:	mov	r4, r0
   160dc:	ldr	r0, [r0]
   160e0:	cmp	r0, #0
   160e4:	popeq	{r4, r5, r6, sl, fp, pc}
   160e8:	mov	r5, r0
   160ec:	ldr	r0, [r0, #12]
   160f0:	cmp	r0, #0
   160f4:	bne	160e8 <mcobject_clean@@Base+0x18>
   160f8:	ldr	r0, [r5]
   160fc:	ldr	r6, [r5, #16]
   16100:	cmp	r0, #0
   16104:	beq	1610c <mcobject_clean@@Base+0x3c>
   16108:	bl	11ab8 <mycore_free@plt>
   1610c:	mov	r0, r5
   16110:	bl	11ab8 <mycore_free@plt>
   16114:	cmp	r6, #0
   16118:	mov	r5, r6
   1611c:	bne	160f8 <mcobject_clean@@Base+0x28>
   16120:	mov	r0, #0
   16124:	str	r0, [r4, #12]
   16128:	str	r0, [r4]
   1612c:	pop	{r4, r5, r6, sl, fp, pc}

00016130 <mcobject_destroy@@Base>:
   16130:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16134:	add	fp, sp, #24
   16138:	mov	r4, #0
   1613c:	cmp	r0, #0
   16140:	beq	161c8 <mcobject_destroy@@Base+0x98>
   16144:	mov	r5, r0
   16148:	ldr	r0, [r0]
   1614c:	mov	r8, r1
   16150:	cmp	r0, #0
   16154:	beq	1619c <mcobject_destroy@@Base+0x6c>
   16158:	mov	r7, r0
   1615c:	ldr	r0, [r0, #12]
   16160:	cmp	r0, #0
   16164:	bne	16158 <mcobject_destroy@@Base+0x28>
   16168:	ldr	r0, [r7]
   1616c:	ldr	r6, [r7, #16]
   16170:	cmp	r0, #0
   16174:	beq	1617c <mcobject_destroy@@Base+0x4c>
   16178:	bl	11ab8 <mycore_free@plt>
   1617c:	mov	r0, r7
   16180:	bl	11ab8 <mycore_free@plt>
   16184:	cmp	r6, #0
   16188:	mov	r7, r6
   1618c:	bne	16168 <mcobject_destroy@@Base+0x38>
   16190:	mov	r0, #0
   16194:	str	r0, [r5, #12]
   16198:	str	r0, [r5]
   1619c:	ldr	r0, [r5, #4]
   161a0:	cmp	r0, #0
   161a4:	beq	161b4 <mcobject_destroy@@Base+0x84>
   161a8:	bl	11ab8 <mycore_free@plt>
   161ac:	mov	r0, #0
   161b0:	str	r0, [r5, #4]
   161b4:	cmp	r8, #0
   161b8:	moveq	r0, r5
   161bc:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   161c0:	mov	r0, r5
   161c4:	bl	11ab8 <mycore_free@plt>
   161c8:	mov	r0, r4
   161cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000161d0 <mcobject_chunk_malloc@@Base>:
   161d0:	push	{r4, r5, r6, sl, fp, lr}
   161d4:	add	fp, sp, #16
   161d8:	cmp	r1, #0
   161dc:	mov	r5, r0
   161e0:	mov	r4, r1
   161e4:	movne	r0, #0
   161e8:	strne	r0, [r4]
   161ec:	ldr	r0, [r5]
   161f0:	cmp	r0, #0
   161f4:	ldrne	r0, [r0, #12]
   161f8:	cmpne	r0, #0
   161fc:	bne	16254 <mcobject_chunk_malloc@@Base+0x84>
   16200:	mov	r0, #1
   16204:	mov	r1, #20
   16208:	bl	11020 <mycore_calloc@plt>
   1620c:	cmp	r0, #0
   16210:	beq	16264 <mcobject_chunk_malloc@@Base+0x94>
   16214:	mov	r6, r0
   16218:	ldr	r0, [r5, #16]
   1621c:	ldr	r1, [r5, #20]
   16220:	mul	r0, r1, r0
   16224:	bl	119c8 <mycore_malloc@plt>
   16228:	cmp	r0, #0
   1622c:	str	r0, [r6]
   16230:	beq	16278 <mcobject_chunk_malloc@@Base+0xa8>
   16234:	ldr	r0, [r5, #20]
   16238:	str	r0, [r6, #8]
   1623c:	ldr	r0, [r5]
   16240:	cmp	r0, #0
   16244:	strne	r0, [r6, #16]
   16248:	strne	r6, [r0, #12]
   1624c:	str	r6, [r5]
   16250:	pop	{r4, r5, r6, sl, fp, pc}
   16254:	mov	r1, #0
   16258:	str	r0, [r5]
   1625c:	str	r1, [r0, #4]
   16260:	pop	{r4, r5, r6, sl, fp, pc}
   16264:	cmp	r4, #0
   16268:	movne	r0, #86	; 0x56
   1626c:	strne	r0, [r4]
   16270:	popne	{r4, r5, r6, sl, fp, pc}
   16274:	pop	{r4, r5, r6, sl, fp, pc}
   16278:	cmp	r4, #0
   1627c:	movne	r0, #87	; 0x57
   16280:	strne	r0, [r4]
   16284:	mov	r0, r6
   16288:	pop	{r4, r5, r6, sl, fp, lr}
   1628c:	b	11ab8 <mycore_free@plt>

00016290 <mcobject_malloc@@Base>:
   16290:	push	{r4, r5, r6, sl, fp, lr}
   16294:	add	fp, sp, #16
   16298:	mov	r5, r0
   1629c:	ldr	r0, [r0, #12]
   162a0:	mov	r4, r1
   162a4:	cmp	r0, #0
   162a8:	beq	162d0 <mcobject_malloc@@Base+0x40>
   162ac:	cmp	r4, #0
   162b0:	movne	r0, #0
   162b4:	strne	r0, [r4]
   162b8:	ldrne	r0, [r5, #12]
   162bc:	sub	r0, r0, #1
   162c0:	str	r0, [r5, #12]
   162c4:	ldr	r1, [r5, #4]
   162c8:	ldr	r0, [r1, r0, lsl #2]
   162cc:	pop	{r4, r5, r6, sl, fp, pc}
   162d0:	ldr	r6, [r5]
   162d4:	cmp	r6, #0
   162d8:	beq	16304 <mcobject_malloc@@Base+0x74>
   162dc:	ldmib	r6, {r0, r1}
   162e0:	cmp	r0, r1
   162e4:	bcc	16354 <mcobject_malloc@@Base+0xc4>
   162e8:	ldr	r6, [r6, #12]
   162ec:	cmp	r6, #0
   162f0:	beq	16304 <mcobject_malloc@@Base+0x74>
   162f4:	mov	r0, #0
   162f8:	str	r6, [r5]
   162fc:	str	r0, [r6, #4]
   16300:	b	16354 <mcobject_malloc@@Base+0xc4>
   16304:	mov	r0, #1
   16308:	mov	r1, #20
   1630c:	bl	11020 <mycore_calloc@plt>
   16310:	cmp	r0, #0
   16314:	beq	16378 <mcobject_malloc@@Base+0xe8>
   16318:	mov	r6, r0
   1631c:	ldr	r0, [r5, #16]
   16320:	ldr	r1, [r5, #20]
   16324:	mul	r0, r1, r0
   16328:	bl	119c8 <mycore_malloc@plt>
   1632c:	cmp	r0, #0
   16330:	str	r0, [r6]
   16334:	beq	16380 <mcobject_malloc@@Base+0xf0>
   16338:	ldr	r0, [r5, #20]
   1633c:	str	r0, [r6, #8]
   16340:	ldr	r0, [r5]
   16344:	cmp	r0, #0
   16348:	strne	r0, [r6, #16]
   1634c:	strne	r6, [r0, #12]
   16350:	str	r6, [r5]
   16354:	cmp	r4, #0
   16358:	movne	r0, #0
   1635c:	strne	r0, [r4]
   16360:	ldm	r6, {r0, r1}
   16364:	add	r2, r1, #1
   16368:	str	r2, [r6, #4]
   1636c:	ldr	r2, [r5, #16]
   16370:	mla	r0, r2, r1, r0
   16374:	pop	{r4, r5, r6, sl, fp, pc}
   16378:	mov	r1, #86	; 0x56
   1637c:	b	1638c <mcobject_malloc@@Base+0xfc>
   16380:	mov	r0, r6
   16384:	bl	11ab8 <mycore_free@plt>
   16388:	mov	r1, #87	; 0x57
   1638c:	cmp	r4, #0
   16390:	mov	r0, #0
   16394:	strne	r1, [r4]
   16398:	popne	{r4, r5, r6, sl, fp, pc}
   1639c:	pop	{r4, r5, r6, sl, fp, pc}

000163a0 <mcobject_free@@Base>:
   163a0:	push	{r4, r5, r6, sl, fp, lr}
   163a4:	add	fp, sp, #16
   163a8:	mov	r5, r1
   163ac:	ldr	r6, [r0, #8]
   163b0:	ldr	r1, [r0, #12]
   163b4:	mov	r4, r0
   163b8:	cmp	r1, r6
   163bc:	bcs	163c8 <mcobject_free@@Base+0x28>
   163c0:	ldr	r0, [r4, #4]
   163c4:	b	163ec <mcobject_free@@Base+0x4c>
   163c8:	ldr	r0, [r4, #4]
   163cc:	lsl	r1, r6, #3
   163d0:	bl	10db0 <mycore_realloc@plt>
   163d4:	cmp	r0, #0
   163d8:	moveq	r0, #88	; 0x58
   163dc:	popeq	{r4, r5, r6, sl, fp, pc}
   163e0:	lsl	r1, r6, #1
   163e4:	stmib	r4, {r0, r1}
   163e8:	ldr	r1, [r4, #12]
   163ec:	str	r5, [r0, r1, lsl #2]
   163f0:	add	r0, r1, #1
   163f4:	str	r0, [r4, #12]
   163f8:	mov	r0, #0
   163fc:	pop	{r4, r5, r6, sl, fp, pc}

00016400 <mcobject_async_create@@Base>:
   16400:	mov	r0, #1
   16404:	mov	r1, #72	; 0x48
   16408:	b	11020 <mycore_calloc@plt>

0001640c <mcobject_async_chunk_up@@Base>:
   1640c:	push	{r4, r5, fp, lr}
   16410:	add	fp, sp, #8
   16414:	mov	r4, #0
   16418:	mov	r5, r0
   1641c:	str	r4, [r0, #40]	; 0x28
   16420:	ldr	r0, [r0, #24]
   16424:	ldr	r1, [r5, #32]
   16428:	ldr	r0, [r0, r1, lsl #2]
   1642c:	cmp	r0, #0
   16430:	beq	1643c <mcobject_async_chunk_up@@Base+0x30>
   16434:	mov	r0, r4
   16438:	pop	{r4, r5, fp, pc}
   1643c:	ldr	r0, [r5, #36]	; 0x24
   16440:	mov	r1, #20
   16444:	bl	11020 <mycore_calloc@plt>
   16448:	ldr	r1, [r5, #24]
   1644c:	ldr	r2, [r5, #32]
   16450:	str	r0, [r1, r2, lsl #2]
   16454:	ldr	r0, [r5, #24]
   16458:	ldr	r0, [r0, r2, lsl #2]
   1645c:	cmp	r0, #0
   16460:	moveq	r4, #2
   16464:	mov	r0, r4
   16468:	pop	{r4, r5, fp, pc}

0001646c <mcobject_async_init@@Base>:
   1646c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16470:	add	fp, sp, #24
   16474:	mov	r4, r0
   16478:	mov	r0, #128	; 0x80
   1647c:	mov	r5, #0
   16480:	str	r0, [r4, #28]
   16484:	add	r0, r3, #4
   16488:	str	r5, [r4, #32]
   1648c:	str	r1, [r4, #36]	; 0x24
   16490:	stm	r4, {r2, r3}
   16494:	mov	r1, #4
   16498:	str	r0, [r4, #8]
   1649c:	mov	r0, #128	; 0x80
   164a0:	bl	11020 <mycore_calloc@plt>
   164a4:	cmp	r0, #0
   164a8:	str	r0, [r4, #24]
   164ac:	moveq	r5, #2
   164b0:	moveq	r0, r5
   164b4:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   164b8:	str	r5, [r4, #40]	; 0x28
   164bc:	ldr	r1, [r4, #32]
   164c0:	ldr	r0, [r0, r1, lsl #2]
   164c4:	cmp	r0, #0
   164c8:	bne	164e4 <mcobject_async_init@@Base+0x78>
   164cc:	ldr	r0, [r4, #36]	; 0x24
   164d0:	mov	r1, #20
   164d4:	bl	11020 <mycore_calloc@plt>
   164d8:	ldr	r1, [r4, #24]
   164dc:	ldr	r2, [r4, #32]
   164e0:	str	r0, [r1, r2, lsl #2]
   164e4:	ldr	r0, [r4, #36]	; 0x24
   164e8:	mov	r1, #4
   164ec:	mov	r5, #4
   164f0:	str	r0, [r4, #16]
   164f4:	bl	11020 <mycore_calloc@plt>
   164f8:	cmp	r0, #0
   164fc:	str	r0, [r4, #12]
   16500:	moveq	r5, #3
   16504:	moveq	r0, r5
   16508:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   1650c:	mov	r6, #0
   16510:	mov	r0, #64	; 0x40
   16514:	mov	r1, #16
   16518:	str	r6, [r4, #48]	; 0x30
   1651c:	str	r0, [r4, #52]	; 0x34
   16520:	mov	r0, #64	; 0x40
   16524:	bl	11020 <mycore_calloc@plt>
   16528:	cmp	r0, #0
   1652c:	str	r0, [r4, #44]	; 0x2c
   16530:	beq	1660c <mcobject_async_init@@Base+0x1a0>
   16534:	ldr	r0, [r4, #52]	; 0x34
   16538:	str	r6, [r4, #60]	; 0x3c
   1653c:	str	r0, [r4, #64]	; 0x40
   16540:	lsl	r0, r0, #2
   16544:	bl	119c8 <mycore_malloc@plt>
   16548:	cmp	r0, #0
   1654c:	str	r0, [r4, #56]	; 0x38
   16550:	beq	1660c <mcobject_async_init@@Base+0x1a0>
   16554:	ldr	r1, [r4, #24]
   16558:	ldr	r0, [r4, #48]	; 0x30
   1655c:	mov	r8, #0
   16560:	ldr	r1, [r1]
   16564:	str	r8, [r4, #40]	; 0x28
   16568:	str	r8, [r4, #20]
   1656c:	cmp	r1, #0
   16570:	movwne	r1, #1
   16574:	cmp	r0, #0
   16578:	str	r1, [r4, #32]
   1657c:	beq	165e4 <mcobject_async_init@@Base+0x178>
   16580:	mov	r7, #0
   16584:	ldr	r5, [r4, #44]	; 0x2c
   16588:	mov	r1, r5
   1658c:	ldr	r2, [r1, r7, lsl #4]!
   16590:	cmp	r2, #0
   16594:	str	r8, [r1, #12]
   16598:	beq	165d8 <mcobject_async_init@@Base+0x16c>
   1659c:	ldr	r0, [r4, #68]	; 0x44
   165a0:	ldr	r9, [r4]
   165a4:	bl	116b0 <mcsync_lock@plt>
   165a8:	mov	r6, #0
   165ac:	cmp	r0, #0
   165b0:	bne	165d0 <mcobject_async_init@@Base+0x164>
   165b4:	mov	r0, r4
   165b8:	mov	r1, r9
   165bc:	mov	r2, #0
   165c0:	bl	1171c <mcobject_async_chunk_malloc_without_lock@plt>
   165c4:	mov	r6, r0
   165c8:	ldr	r0, [r4, #68]	; 0x44
   165cc:	bl	11b60 <mcsync_unlock@plt>
   165d0:	str	r6, [r5, r7, lsl #4]
   165d4:	ldr	r0, [r4, #48]	; 0x30
   165d8:	add	r7, r7, #1
   165dc:	cmp	r7, r0
   165e0:	bcc	16584 <mcobject_async_init@@Base+0x118>
   165e4:	bl	10f18 <mcsync_create@plt>
   165e8:	cmp	r0, #0
   165ec:	str	r0, [r4, #68]	; 0x44
   165f0:	moveq	r5, #1
   165f4:	moveq	r0, r5
   165f8:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   165fc:	bl	116bc <mcsync_init@plt>
   16600:	mov	r5, r0
   16604:	cmp	r0, #0
   16608:	movwne	r5, #1
   1660c:	mov	r0, r5
   16610:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00016614 <mcobject_async_clean@@Base>:
   16614:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16618:	add	fp, sp, #24
   1661c:	ldr	r1, [r0, #24]
   16620:	mov	r4, r0
   16624:	ldr	r0, [r0, #48]	; 0x30
   16628:	mov	r8, #0
   1662c:	ldr	r1, [r1]
   16630:	str	r8, [r4, #40]	; 0x28
   16634:	str	r8, [r4, #20]
   16638:	cmp	r1, #0
   1663c:	movwne	r1, #1
   16640:	cmp	r0, #0
   16644:	str	r1, [r4, #32]
   16648:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   1664c:	mov	r7, #0
   16650:	ldr	r5, [r4, #44]	; 0x2c
   16654:	mov	r1, r5
   16658:	ldr	r2, [r1, r7, lsl #4]!
   1665c:	cmp	r2, #0
   16660:	str	r8, [r1, #12]
   16664:	beq	166a4 <mcobject_async_clean@@Base+0x90>
   16668:	ldr	r0, [r4, #68]	; 0x44
   1666c:	ldr	r9, [r4]
   16670:	bl	116b0 <mcsync_lock@plt>
   16674:	mov	r6, #0
   16678:	cmp	r0, #0
   1667c:	bne	1669c <mcobject_async_clean@@Base+0x88>
   16680:	mov	r0, r4
   16684:	mov	r1, r9
   16688:	mov	r2, #0
   1668c:	bl	1171c <mcobject_async_chunk_malloc_without_lock@plt>
   16690:	mov	r6, r0
   16694:	ldr	r0, [r4, #68]	; 0x44
   16698:	bl	11b60 <mcsync_unlock@plt>
   1669c:	str	r6, [r5, r7, lsl #4]
   166a0:	ldr	r0, [r4, #48]	; 0x30
   166a4:	add	r7, r7, #1
   166a8:	cmp	r7, r0
   166ac:	bcc	16650 <mcobject_async_clean@@Base+0x3c>
   166b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000166b4 <mcobject_async_chunk_malloc@@Base>:
   166b4:	push	{r4, r5, r6, sl, fp, lr}
   166b8:	add	fp, sp, #16
   166bc:	mov	r5, r0
   166c0:	ldr	r0, [r0, #68]	; 0x44
   166c4:	mov	r4, r2
   166c8:	mov	r6, r1
   166cc:	bl	116b0 <mcsync_lock@plt>
   166d0:	cmp	r0, #0
   166d4:	beq	166ec <mcobject_async_chunk_malloc@@Base+0x38>
   166d8:	cmp	r4, #0
   166dc:	movne	r0, #1
   166e0:	strne	r0, [r4]
   166e4:	mov	r0, #0
   166e8:	pop	{r4, r5, r6, sl, fp, pc}
   166ec:	mov	r0, r5
   166f0:	mov	r1, r6
   166f4:	mov	r2, r4
   166f8:	bl	1171c <mcobject_async_chunk_malloc_without_lock@plt>
   166fc:	mov	r4, r0
   16700:	ldr	r0, [r5, #68]	; 0x44
   16704:	bl	11b60 <mcsync_unlock@plt>
   16708:	mov	r0, r4
   1670c:	pop	{r4, r5, r6, sl, fp, pc}

00016710 <mcobject_async_destroy@@Base>:
   16710:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16714:	add	fp, sp, #24
   16718:	cmp	r0, #0
   1671c:	moveq	r6, #0
   16720:	moveq	r0, r6
   16724:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   16728:	mov	r4, r0
   1672c:	ldr	r0, [r0, #44]	; 0x2c
   16730:	mov	r8, r1
   16734:	cmp	r0, #0
   16738:	beq	16780 <mcobject_async_destroy@@Base+0x70>
   1673c:	ldr	r1, [r4, #48]	; 0x30
   16740:	cmp	r1, #0
   16744:	beq	1677c <mcobject_async_destroy@@Base+0x6c>
   16748:	mov	r5, #0
   1674c:	b	16754 <mcobject_async_destroy@@Base+0x44>
   16750:	ldr	r0, [r4, #44]	; 0x2c
   16754:	add	r0, r0, r5, lsl #4
   16758:	ldr	r0, [r0, #4]
   1675c:	cmp	r0, #0
   16760:	beq	1676c <mcobject_async_destroy@@Base+0x5c>
   16764:	bl	11ab8 <mycore_free@plt>
   16768:	ldr	r1, [r4, #48]	; 0x30
   1676c:	add	r5, r5, #1
   16770:	cmp	r5, r1
   16774:	bcc	16750 <mcobject_async_destroy@@Base+0x40>
   16778:	ldr	r0, [r4, #44]	; 0x2c
   1677c:	bl	11ab8 <mycore_free@plt>
   16780:	ldr	r0, [r4, #56]	; 0x38
   16784:	cmp	r0, #0
   16788:	beq	16790 <mcobject_async_destroy@@Base+0x80>
   1678c:	bl	11ab8 <mycore_free@plt>
   16790:	ldr	r0, [r4, #24]
   16794:	cmp	r0, #0
   16798:	beq	16830 <mcobject_async_destroy@@Base+0x120>
   1679c:	ldr	r2, [r4, #32]
   167a0:	cmp	r2, #0
   167a4:	beq	1682c <mcobject_async_destroy@@Base+0x11c>
   167a8:	mov	r6, #0
   167ac:	b	167b4 <mcobject_async_destroy@@Base+0xa4>
   167b0:	ldr	r0, [r4, #24]
   167b4:	mov	r1, r0
   167b8:	ldr	r3, [r1, r6, lsl #2]!
   167bc:	cmp	r3, #0
   167c0:	beq	1681c <mcobject_async_destroy@@Base+0x10c>
   167c4:	ldr	r2, [r4, #36]	; 0x24
   167c8:	cmp	r2, #0
   167cc:	beq	16810 <mcobject_async_destroy@@Base+0x100>
   167d0:	mov	r7, #1
   167d4:	mov	r5, #0
   167d8:	b	167e8 <mcobject_async_destroy@@Base+0xd8>
   167dc:	ldr	r3, [r1]
   167e0:	add	r5, r5, #20
   167e4:	add	r7, r7, #1
   167e8:	ldr	r1, [r3, r5]
   167ec:	cmp	r1, #0
   167f0:	beq	16804 <mcobject_async_destroy@@Base+0xf4>
   167f4:	mov	r0, r1
   167f8:	bl	11ab8 <mycore_free@plt>
   167fc:	ldr	r0, [r4, #24]
   16800:	ldr	r2, [r4, #36]	; 0x24
   16804:	add	r1, r0, r6, lsl #2
   16808:	cmp	r7, r2
   1680c:	bcc	167dc <mcobject_async_destroy@@Base+0xcc>
   16810:	ldr	r0, [r1]
   16814:	bl	11ab8 <mycore_free@plt>
   16818:	ldr	r2, [r4, #32]
   1681c:	add	r6, r6, #1
   16820:	cmp	r6, r2
   16824:	bcc	167b0 <mcobject_async_destroy@@Base+0xa0>
   16828:	ldr	r0, [r4, #24]
   1682c:	bl	11ab8 <mycore_free@plt>
   16830:	ldr	r0, [r4, #12]
   16834:	cmp	r0, #0
   16838:	beq	16840 <mcobject_async_destroy@@Base+0x130>
   1683c:	bl	11ab8 <mycore_free@plt>
   16840:	ldr	r0, [r4, #68]	; 0x44
   16844:	mov	r1, #1
   16848:	bl	11218 <mcsync_destroy@plt>
   1684c:	vmov.i32	q8, #0	; 0x00000000
   16850:	add	r0, r4, #48	; 0x30
   16854:	mov	r1, r4
   16858:	cmp	r8, #0
   1685c:	mov	r6, #0
   16860:	vst1.32	{d16-d17}, [r0]
   16864:	add	r0, r4, #32
   16868:	str	r6, [r4, #68]	; 0x44
   1686c:	vst1.32	{d16-d17}, [r0]
   16870:	add	r0, r4, #16
   16874:	vst1.32	{d16-d17}, [r0]
   16878:	mov	r0, #64	; 0x40
   1687c:	vst1.32	{d16-d17}, [r1], r0
   16880:	moveq	r0, r4
   16884:	str	r6, [r1]
   16888:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1688c:	mov	r0, r4
   16890:	bl	11ab8 <mycore_free@plt>
   16894:	mov	r0, r6
   16898:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001689c <mcobject_async_mem_malloc@@Base>:
   1689c:	push	{r4, r5, r6, sl, fp, lr}
   168a0:	add	fp, sp, #16
   168a4:	mov	r5, r0
   168a8:	ldr	r0, [r1]
   168ac:	mov	r6, r2
   168b0:	mov	r4, r1
   168b4:	cmp	r0, #0
   168b8:	beq	168e0 <mcobject_async_mem_malloc@@Base+0x44>
   168bc:	ldr	r1, [r4, #8]
   168c0:	cmp	r1, r6
   168c4:	bcs	16900 <mcobject_async_mem_malloc@@Base+0x64>
   168c8:	bl	11ab8 <mycore_free@plt>
   168cc:	ldr	r0, [r5]
   168d0:	add	r1, r0, r6
   168d4:	str	r1, [r4, #8]
   168d8:	ldr	r0, [r5, #8]
   168dc:	b	168f4 <mcobject_async_mem_malloc@@Base+0x58>
   168e0:	ldr	r0, [r5]
   168e4:	cmp	r0, r6
   168e8:	addcc	r0, r0, r6
   168ec:	str	r0, [r4, #8]
   168f0:	ldr	r1, [r5, #8]
   168f4:	mul	r0, r0, r1
   168f8:	bl	119c8 <mycore_malloc@plt>
   168fc:	str	r0, [r4]
   16900:	clz	r0, r0
   16904:	mov	r1, #0
   16908:	lsr	r0, r0, #5
   1690c:	str	r1, [r4, #4]
   16910:	lsl	r0, r0, #1
   16914:	pop	{r4, r5, r6, sl, fp, pc}

00016918 <mcobject_async_chunk_malloc_without_lock@@Base>:
   16918:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1691c:	add	fp, sp, #28
   16920:	sub	sp, sp, #4
   16924:	cmp	r2, #0
   16928:	mov	r5, r0
   1692c:	mov	r9, r2
   16930:	mov	r8, r1
   16934:	movne	r0, #0
   16938:	strne	r0, [r9]
   1693c:	ldr	r0, [r5, #20]
   16940:	cmp	r0, #0
   16944:	beq	16974 <mcobject_async_chunk_malloc_without_lock@@Base+0x5c>
   16948:	sub	r0, r0, #1
   1694c:	mov	r3, #0
   16950:	str	r0, [r5, #20]
   16954:	ldr	r1, [r5, #12]
   16958:	ldr	r2, [r1, r0, lsl #2]
   1695c:	str	r3, [r2, #12]
   16960:	str	r3, [r2, #4]
   16964:	ldr	r2, [r1, r0, lsl #2]
   16968:	str	r3, [r2, #16]
   1696c:	ldr	r7, [r1, r0, lsl #2]
   16970:	b	16ad0 <mcobject_async_chunk_malloc_without_lock@@Base+0x1b8>
   16974:	ldr	r1, [r5, #36]	; 0x24
   16978:	ldr	r0, [r5, #40]	; 0x28
   1697c:	cmp	r0, r1
   16980:	bcs	16990 <mcobject_async_chunk_malloc_without_lock@@Base+0x78>
   16984:	ldr	r7, [r5, #24]
   16988:	ldr	r1, [r5, #32]
   1698c:	b	16a30 <mcobject_async_chunk_malloc_without_lock@@Base+0x118>
   16990:	ldr	r4, [r5, #28]
   16994:	ldr	r1, [r5, #32]
   16998:	cmp	r1, r4
   1699c:	bcs	169a8 <mcobject_async_chunk_malloc_without_lock@@Base+0x90>
   169a0:	ldr	r7, [r5, #24]
   169a4:	b	169e8 <mcobject_async_chunk_malloc_without_lock@@Base+0xd0>
   169a8:	ldr	r0, [r5, #24]
   169ac:	lsl	r1, r4, #3
   169b0:	bl	10db0 <mycore_realloc@plt>
   169b4:	cmp	r0, #0
   169b8:	beq	16adc <mcobject_async_chunk_malloc_without_lock@@Base+0x1c4>
   169bc:	ldr	r1, [r5, #32]
   169c0:	lsl	r4, r4, #1
   169c4:	mov	r7, r0
   169c8:	add	r0, r0, r1, lsl #2
   169cc:	sub	r1, r4, r1
   169d0:	lsl	r2, r1, #2
   169d4:	mov	r1, #0
   169d8:	bl	116ec <memset@plt>
   169dc:	str	r7, [r5, #24]
   169e0:	str	r4, [r5, #28]
   169e4:	ldr	r1, [r5, #32]
   169e8:	mov	r0, #0
   169ec:	str	r0, [r5, #40]	; 0x28
   169f0:	ldr	r2, [r7, r1, lsl #2]
   169f4:	cmp	r2, #0
   169f8:	bne	16a28 <mcobject_async_chunk_malloc_without_lock@@Base+0x110>
   169fc:	ldr	r0, [r5, #36]	; 0x24
   16a00:	mov	r1, #20
   16a04:	bl	11020 <mycore_calloc@plt>
   16a08:	ldr	r2, [r5, #24]
   16a0c:	ldr	r1, [r5, #32]
   16a10:	str	r0, [r2, r1, lsl #2]
   16a14:	ldr	r7, [r5, #24]
   16a18:	ldr	r0, [r7, r1, lsl #2]
   16a1c:	cmp	r0, #0
   16a20:	beq	16adc <mcobject_async_chunk_malloc_without_lock@@Base+0x1c4>
   16a24:	ldr	r0, [r5, #40]	; 0x28
   16a28:	add	r1, r1, #1
   16a2c:	str	r1, [r5, #32]
   16a30:	add	r1, r7, r1, lsl #2
   16a34:	add	r4, r0, r0, lsl #2
   16a38:	ldr	sl, [r1, #-4]
   16a3c:	add	r1, r0, #1
   16a40:	str	r1, [r5, #40]	; 0x28
   16a44:	mov	r1, #0
   16a48:	mov	r7, sl
   16a4c:	ldr	r0, [r7, r4, lsl #2]!
   16a50:	cmp	r0, #0
   16a54:	str	r1, [r7, #12]
   16a58:	str	r1, [r7, #16]
   16a5c:	beq	16a88 <mcobject_async_chunk_malloc_without_lock@@Base+0x170>
   16a60:	add	r6, sl, r4, lsl #2
   16a64:	ldr	r1, [r6, #8]!
   16a68:	cmp	r1, r8
   16a6c:	bcs	16aac <mcobject_async_chunk_malloc_without_lock@@Base+0x194>
   16a70:	bl	11ab8 <mycore_free@plt>
   16a74:	ldr	r0, [r5]
   16a78:	add	r1, r0, r8
   16a7c:	str	r1, [r6]
   16a80:	ldr	r0, [r5, #8]
   16a84:	b	16aa0 <mcobject_async_chunk_malloc_without_lock@@Base+0x188>
   16a88:	ldr	r0, [r5]
   16a8c:	add	r1, sl, r4, lsl #2
   16a90:	cmp	r0, r8
   16a94:	addcc	r0, r0, r8
   16a98:	str	r0, [r1, #8]
   16a9c:	ldr	r1, [r5, #8]
   16aa0:	mul	r0, r0, r1
   16aa4:	bl	119c8 <mycore_malloc@plt>
   16aa8:	str	r0, [r7]
   16aac:	cmp	r9, #0
   16ab0:	add	r1, sl, r4, lsl #2
   16ab4:	mov	r2, #0
   16ab8:	str	r2, [r1, #4]
   16abc:	beq	16ad0 <mcobject_async_chunk_malloc_without_lock@@Base+0x1b8>
   16ac0:	clz	r0, r0
   16ac4:	lsr	r0, r0, #5
   16ac8:	lsl	r0, r0, #1
   16acc:	str	r0, [r9]
   16ad0:	mov	r0, r7
   16ad4:	sub	sp, fp, #28
   16ad8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16adc:	mov	r7, #0
   16ae0:	cmp	r9, #0
   16ae4:	beq	16ad0 <mcobject_async_chunk_malloc_without_lock@@Base+0x1b8>
   16ae8:	mov	r0, #2
   16aec:	b	16acc <mcobject_async_chunk_malloc_without_lock@@Base+0x1b4>

00016af0 <mcobject_async_node_add@@Base>:
   16af0:	push	{r4, r5, r6, r7, fp, lr}
   16af4:	add	fp, sp, #16
   16af8:	mov	r4, r0
   16afc:	ldr	r0, [r0, #68]	; 0x44
   16b00:	mov	r5, r1
   16b04:	bl	116b0 <mcsync_lock@plt>
   16b08:	cmp	r5, #0
   16b0c:	movne	r0, #0
   16b10:	strne	r0, [r5]
   16b14:	ldr	r0, [r4, #60]	; 0x3c
   16b18:	cmp	r0, #0
   16b1c:	beq	16b34 <mcobject_async_node_add@@Base+0x44>
   16b20:	sub	r0, r0, #1
   16b24:	str	r0, [r4, #60]	; 0x3c
   16b28:	ldr	r1, [r4, #56]	; 0x38
   16b2c:	ldr	r6, [r1, r0, lsl #2]
   16b30:	b	16b4c <mcobject_async_node_add@@Base+0x5c>
   16b34:	ldr	r6, [r4, #48]	; 0x30
   16b38:	ldr	r0, [r4, #52]	; 0x34
   16b3c:	cmp	r6, r0
   16b40:	bcs	16bc0 <mcobject_async_node_add@@Base+0xd0>
   16b44:	add	r0, r6, #1
   16b48:	str	r0, [r4, #48]	; 0x30
   16b4c:	ldr	r1, [r4]
   16b50:	ldr	r7, [r4, #44]	; 0x2c
   16b54:	mov	r0, r4
   16b58:	mov	r2, r5
   16b5c:	bl	1171c <mcobject_async_chunk_malloc_without_lock@plt>
   16b60:	str	r0, [r7, r6, lsl #4]
   16b64:	cmp	r5, #0
   16b68:	ldrne	r1, [r5]
   16b6c:	cmpne	r1, #0
   16b70:	bne	16bc0 <mcobject_async_node_add@@Base+0xd0>
   16b74:	mov	r1, #0
   16b78:	add	r7, r7, r6, lsl #4
   16b7c:	str	r1, [r0, #12]
   16b80:	str	r1, [r0, #16]
   16b84:	str	r1, [r7, #12]
   16b88:	ldr	r0, [r4]
   16b8c:	str	r0, [r7, #8]
   16b90:	lsl	r0, r0, #2
   16b94:	bl	119c8 <mycore_malloc@plt>
   16b98:	cmp	r0, #0
   16b9c:	str	r0, [r7, #4]
   16ba0:	beq	16bb4 <mcobject_async_node_add@@Base+0xc4>
   16ba4:	ldr	r0, [r4, #68]	; 0x44
   16ba8:	bl	11b60 <mcsync_unlock@plt>
   16bac:	mov	r0, r6
   16bb0:	pop	{r4, r5, r6, r7, fp, pc}
   16bb4:	cmp	r5, #0
   16bb8:	movne	r0, #3
   16bbc:	strne	r0, [r5]
   16bc0:	ldr	r0, [r4, #68]	; 0x44
   16bc4:	bl	11b60 <mcsync_unlock@plt>
   16bc8:	mov	r6, #0
   16bcc:	mov	r0, r6
   16bd0:	pop	{r4, r5, r6, r7, fp, pc}

00016bd4 <mcobject_async_node_clean@@Base>:
   16bd4:	ldr	r2, [r0, #48]	; 0x30
   16bd8:	cmp	r2, r1
   16bdc:	bls	16c28 <mcobject_async_node_clean@@Base+0x54>
   16be0:	ldr	ip, [r0, #44]	; 0x2c
   16be4:	mov	r3, #0
   16be8:	mov	r0, ip
   16bec:	ldr	r2, [r0, r1, lsl #4]!
   16bf0:	cmp	r2, #0
   16bf4:	str	r3, [r0, #12]!
   16bf8:	bxeq	lr
   16bfc:	ldr	r3, [r2, #16]
   16c00:	cmp	r3, #0
   16c04:	beq	16c1c <mcobject_async_node_clean@@Base+0x48>
   16c08:	mov	r2, r3
   16c0c:	ldr	r3, [r3, #16]
   16c10:	cmp	r3, #0
   16c14:	bne	16c08 <mcobject_async_node_clean@@Base+0x34>
   16c18:	str	r2, [ip, r1, lsl #4]
   16c1c:	mov	r1, #0
   16c20:	str	r1, [r2, #4]
   16c24:	str	r1, [r0]
   16c28:	bx	lr

00016c2c <mcobject_async_node_all_clean@@Base>:
   16c2c:	push	{r4, sl, fp, lr}
   16c30:	add	fp, sp, #8
   16c34:	ldr	ip, [r0, #48]	; 0x30
   16c38:	cmp	ip, #0
   16c3c:	popeq	{r4, sl, fp, pc}
   16c40:	ldr	r1, [r0, #44]	; 0x2c
   16c44:	mov	lr, #0
   16c48:	mov	r3, #0
   16c4c:	mov	r0, r1
   16c50:	ldr	r2, [r0, r3, lsl #4]!
   16c54:	str	lr, [r0, #12]!
   16c58:	cmp	r2, #0
   16c5c:	beq	16c88 <mcobject_async_node_all_clean@@Base+0x5c>
   16c60:	ldr	r4, [r2, #16]
   16c64:	cmp	r4, #0
   16c68:	beq	16c80 <mcobject_async_node_all_clean@@Base+0x54>
   16c6c:	mov	r2, r4
   16c70:	ldr	r4, [r4, #16]
   16c74:	cmp	r4, #0
   16c78:	bne	16c6c <mcobject_async_node_all_clean@@Base+0x40>
   16c7c:	str	r2, [r1, r3, lsl #4]
   16c80:	str	lr, [r2, #4]
   16c84:	str	lr, [r0]
   16c88:	add	r3, r3, #1
   16c8c:	cmp	r3, ip
   16c90:	bcc	16c4c <mcobject_async_node_all_clean@@Base+0x20>
   16c94:	pop	{r4, sl, fp, pc}

00016c98 <mcobject_async_node_delete@@Base>:
   16c98:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16c9c:	add	fp, sp, #24
   16ca0:	mov	r4, r0
   16ca4:	ldr	r0, [r0, #68]	; 0x44
   16ca8:	mov	r5, r1
   16cac:	bl	116b0 <mcsync_lock@plt>
   16cb0:	ldr	r0, [r4, #48]	; 0x30
   16cb4:	cmp	r0, r5
   16cb8:	bls	16da0 <mcobject_async_node_delete@@Base+0x108>
   16cbc:	ldr	r8, [r4, #44]	; 0x2c
   16cc0:	mov	r9, r8
   16cc4:	ldr	r0, [r9, r5, lsl #4]!
   16cc8:	mov	r7, r0
   16ccc:	ldr	r0, [r0, #12]
   16cd0:	cmp	r0, #0
   16cd4:	bne	16cc8 <mcobject_async_node_delete@@Base+0x30>
   16cd8:	cmp	r7, #0
   16cdc:	beq	16d34 <mcobject_async_node_delete@@Base+0x9c>
   16ce0:	ldr	r1, [r4, #20]
   16ce4:	ldr	r6, [r4, #16]
   16ce8:	cmp	r1, r6
   16cec:	bcs	16cf8 <mcobject_async_node_delete@@Base+0x60>
   16cf0:	ldr	r0, [r4, #12]
   16cf4:	b	16d1c <mcobject_async_node_delete@@Base+0x84>
   16cf8:	ldr	r0, [r4, #12]
   16cfc:	lsl	r1, r6, #3
   16d00:	bl	10db0 <mycore_realloc@plt>
   16d04:	cmp	r0, #0
   16d08:	beq	16da0 <mcobject_async_node_delete@@Base+0x108>
   16d0c:	lsl	r1, r6, #1
   16d10:	str	r0, [r4, #12]
   16d14:	str	r1, [r4, #16]
   16d18:	ldr	r1, [r4, #20]
   16d1c:	str	r7, [r0, r1, lsl #2]
   16d20:	add	r1, r1, #1
   16d24:	str	r1, [r4, #20]
   16d28:	ldr	r7, [r7, #16]
   16d2c:	cmp	r7, #0
   16d30:	bne	16ce4 <mcobject_async_node_delete@@Base+0x4c>
   16d34:	add	r0, r8, r5, lsl #4
   16d38:	ldr	r0, [r0, #4]
   16d3c:	cmp	r0, #0
   16d40:	beq	16d48 <mcobject_async_node_delete@@Base+0xb0>
   16d44:	bl	11ab8 <mycore_free@plt>
   16d48:	vmov.i32	q8, #0	; 0x00000000
   16d4c:	vst1.32	{d16-d17}, [r9]
   16d50:	ldr	r0, [r4, #60]	; 0x3c
   16d54:	ldr	r6, [r4, #64]	; 0x40
   16d58:	cmp	r0, r6
   16d5c:	bcc	16d7c <mcobject_async_node_delete@@Base+0xe4>
   16d60:	ldr	r0, [r4, #56]	; 0x38
   16d64:	lsl	r1, r6, #2
   16d68:	bl	10db0 <mycore_realloc@plt>
   16d6c:	cmp	r0, #0
   16d70:	strne	r0, [r4, #56]	; 0x38
   16d74:	lslne	r0, r6, #1
   16d78:	strne	r0, [r4, #64]	; 0x40
   16d7c:	ldr	r0, [r4, #56]	; 0x38
   16d80:	ldr	r1, [r4, #60]	; 0x3c
   16d84:	str	r5, [r0, r1, lsl #2]
   16d88:	ldr	r1, [r4, #60]	; 0x3c
   16d8c:	ldr	r0, [r4, #68]	; 0x44
   16d90:	add	r1, r1, #1
   16d94:	str	r1, [r4, #60]	; 0x3c
   16d98:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   16d9c:	b	11b60 <mcsync_unlock@plt>
   16da0:	ldr	r0, [r4, #68]	; 0x44
   16da4:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   16da8:	b	11b60 <mcsync_unlock@plt>

00016dac <mcobject_async_malloc@@Base>:
   16dac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16db0:	add	fp, sp, #24
   16db4:	sub	sp, sp, #8
   16db8:	ldr	r7, [r0, #44]	; 0x2c
   16dbc:	mov	r6, r0
   16dc0:	mov	r5, r1
   16dc4:	mov	r4, r2
   16dc8:	add	r0, r7, r1, lsl #4
   16dcc:	mov	r1, r0
   16dd0:	ldr	r2, [r1, #12]!
   16dd4:	cmp	r2, #0
   16dd8:	beq	16e04 <mcobject_async_malloc@@Base+0x58>
   16ddc:	cmp	r4, #0
   16de0:	movne	r2, #0
   16de4:	strne	r2, [r4]
   16de8:	ldrne	r2, [r1]
   16dec:	sub	r2, r2, #1
   16df0:	str	r2, [r1]
   16df4:	ldr	r0, [r0, #4]
   16df8:	ldr	r0, [r0, r2, lsl #2]
   16dfc:	sub	sp, fp, #24
   16e00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16e04:	ldr	r0, [r7, r5, lsl #4]
   16e08:	ldmib	r0, {r1, r2}
   16e0c:	cmp	r1, r2
   16e10:	bcc	16e2c <mcobject_async_malloc@@Base+0x80>
   16e14:	ldr	r0, [r0, #12]
   16e18:	cmp	r0, #0
   16e1c:	beq	16e64 <mcobject_async_malloc@@Base+0xb8>
   16e20:	mov	r1, #0
   16e24:	str	r0, [r7, r5, lsl #4]
   16e28:	str	r1, [r0, #4]
   16e2c:	cmp	r4, #0
   16e30:	movne	r0, #0
   16e34:	strne	r0, [r4]
   16e38:	ldr	r0, [r7, r5, lsl #4]
   16e3c:	ldm	r0, {r1, r2}
   16e40:	ldr	r3, [r6, #8]
   16e44:	mul	r2, r3, r2
   16e48:	str	r5, [r1, r2]!
   16e4c:	ldr	r2, [r0, #4]
   16e50:	add	r2, r2, #1
   16e54:	str	r2, [r0, #4]
   16e58:	add	r0, r1, #4
   16e5c:	sub	sp, fp, #24
   16e60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16e64:	ldr	r0, [r6, #68]	; 0x44
   16e68:	ldr	r8, [r6]
   16e6c:	bl	116b0 <mcsync_lock@plt>
   16e70:	cmp	r0, #0
   16e74:	beq	16e84 <mcobject_async_malloc@@Base+0xd8>
   16e78:	mov	r0, #1
   16e7c:	str	r0, [sp, #4]
   16e80:	b	16eac <mcobject_async_malloc@@Base+0x100>
   16e84:	add	r2, sp, #4
   16e88:	mov	r0, r6
   16e8c:	mov	r1, r8
   16e90:	bl	1171c <mcobject_async_chunk_malloc_without_lock@plt>
   16e94:	mov	r8, r0
   16e98:	ldr	r0, [r6, #68]	; 0x44
   16e9c:	bl	11b60 <mcsync_unlock@plt>
   16ea0:	ldr	r0, [sp, #4]
   16ea4:	cmp	r0, #0
   16ea8:	beq	16ec0 <mcobject_async_malloc@@Base+0x114>
   16eac:	cmp	r4, #0
   16eb0:	strne	r0, [r4]
   16eb4:	mov	r0, #0
   16eb8:	sub	sp, fp, #24
   16ebc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16ec0:	ldr	r0, [r7, r5, lsl #4]
   16ec4:	str	r0, [r8, #16]
   16ec8:	str	r8, [r0, #12]
   16ecc:	str	r8, [r7, r5, lsl #4]
   16ed0:	b	16e2c <mcobject_async_malloc@@Base+0x80>

00016ed4 <mcobject_async_free@@Base>:
   16ed4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16ed8:	add	fp, sp, #24
   16edc:	mov	r4, r1
   16ee0:	ldr	r3, [r0, #48]	; 0x30
   16ee4:	mov	r1, r0
   16ee8:	mov	r0, #5
   16eec:	ldr	r2, [r4, #-4]
   16ef0:	cmp	r2, r3
   16ef4:	popcs	{r4, r5, r6, r7, r8, sl, fp, pc}
   16ef8:	ldr	r0, [r1, #44]	; 0x2c
   16efc:	add	r5, r0, r2, lsl #4
   16f00:	ldr	r1, [r5, #12]!
   16f04:	mov	r7, r5
   16f08:	sub	r8, r5, #8
   16f0c:	ldr	r6, [r7, #-4]!
   16f10:	cmp	r1, r6
   16f14:	bcs	16f20 <mcobject_async_free@@Base+0x4c>
   16f18:	ldr	r0, [r8]
   16f1c:	b	16f48 <mcobject_async_free@@Base+0x74>
   16f20:	ldr	r0, [r8]
   16f24:	lsl	r1, r6, #3
   16f28:	bl	10db0 <mycore_realloc@plt>
   16f2c:	cmp	r0, #0
   16f30:	moveq	r0, #6
   16f34:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   16f38:	lsl	r1, r6, #1
   16f3c:	str	r0, [r8]
   16f40:	str	r1, [r7]
   16f44:	ldr	r1, [r5]
   16f48:	str	r4, [r0, r1, lsl #2]
   16f4c:	add	r0, r1, #1
   16f50:	str	r0, [r5]
   16f54:	mov	r0, #0
   16f58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016f5c <mcsimple_create@@Base>:
   16f5c:	mov	r0, #1
   16f60:	mov	r1, #28
   16f64:	b	11020 <mycore_calloc@plt>

00016f68 <mcsimple_init@@Base>:
   16f68:	push	{r4, r5, r6, sl, fp, lr}
   16f6c:	add	fp, sp, #16
   16f70:	mov	r4, r0
   16f74:	mov	r0, #0
   16f78:	mov	r5, r3
   16f7c:	mov	r6, r2
   16f80:	str	r3, [r4]
   16f84:	str	r1, [r4, #8]
   16f88:	str	r0, [r4, #12]
   16f8c:	str	r0, [r4, #16]
   16f90:	mov	r0, r1
   16f94:	mov	r1, #4
   16f98:	bl	11020 <mycore_calloc@plt>
   16f9c:	cmp	r0, #0
   16fa0:	str	r0, [r4, #4]
   16fa4:	beq	17028 <mcsimple_init@@Base+0xc0>
   16fa8:	mul	r1, r5, r6
   16fac:	str	r1, [r4, #20]
   16fb0:	ldr	r6, [r4, #8]
   16fb4:	ldr	r5, [r4, #12]
   16fb8:	cmp	r5, r6
   16fbc:	bcc	16ff8 <mcsimple_init@@Base+0x90>
   16fc0:	lsl	r1, r6, #2
   16fc4:	bl	10db0 <mycore_realloc@plt>
   16fc8:	cmp	r0, #0
   16fcc:	beq	17028 <mcsimple_init@@Base+0xc0>
   16fd0:	str	r0, [r4, #4]
   16fd4:	add	r6, r6, #128	; 0x80
   16fd8:	add	r0, r0, r5, lsl #2
   16fdc:	ldr	r1, [r4, #8]
   16fe0:	sub	r1, r6, r1
   16fe4:	lsl	r2, r1, #2
   16fe8:	mov	r1, #0
   16fec:	bl	116ec <memset@plt>
   16ff0:	str	r6, [r4, #8]
   16ff4:	ldr	r0, [r4, #4]
   16ff8:	mov	r1, #0
   16ffc:	str	r1, [r4, #24]
   17000:	ldr	r0, [r0, r5, lsl #2]
   17004:	cmp	r0, #0
   17008:	popne	{r4, r5, r6, sl, fp, pc}
   1700c:	ldr	r1, [r4, #16]
   17010:	ldr	r0, [r4, #20]
   17014:	add	r1, r1, #1
   17018:	str	r1, [r4, #16]
   1701c:	bl	119c8 <mycore_malloc@plt>
   17020:	ldr	r1, [r4, #4]
   17024:	str	r0, [r1, r5, lsl #2]
   17028:	pop	{r4, r5, r6, sl, fp, pc}

0001702c <mcsimple_init_list_entries@@Base>:
   1702c:	push	{r4, r5, r6, sl, fp, lr}
   17030:	add	fp, sp, #16
   17034:	mov	r5, r0
   17038:	ldr	r6, [r0, #8]
   1703c:	ldr	r0, [r0, #12]
   17040:	mov	r4, r1
   17044:	cmp	r0, r6
   17048:	bcc	17088 <mcsimple_init_list_entries@@Base+0x5c>
   1704c:	ldr	r0, [r5, #4]
   17050:	lsl	r1, r6, #2
   17054:	bl	10db0 <mycore_realloc@plt>
   17058:	cmp	r0, #0
   1705c:	moveq	r0, #0
   17060:	popeq	{r4, r5, r6, sl, fp, pc}
   17064:	str	r0, [r5, #4]
   17068:	add	r6, r6, #128	; 0x80
   1706c:	add	r0, r0, r4, lsl #2
   17070:	ldr	r1, [r5, #8]
   17074:	sub	r1, r6, r1
   17078:	lsl	r2, r1, #2
   1707c:	mov	r1, #0
   17080:	bl	116ec <memset@plt>
   17084:	str	r6, [r5, #8]
   17088:	mov	r0, #0
   1708c:	str	r0, [r5, #24]
   17090:	ldr	r0, [r5, #4]
   17094:	ldr	r0, [r0, r4, lsl #2]
   17098:	cmp	r0, #0
   1709c:	popne	{r4, r5, r6, sl, fp, pc}
   170a0:	ldr	r1, [r5, #16]
   170a4:	ldr	r0, [r5, #20]
   170a8:	add	r1, r1, #1
   170ac:	str	r1, [r5, #16]
   170b0:	bl	119c8 <mycore_malloc@plt>
   170b4:	ldr	r1, [r5, #4]
   170b8:	str	r0, [r1, r4, lsl #2]
   170bc:	ldr	r0, [r5, #4]
   170c0:	ldr	r0, [r0, r4, lsl #2]
   170c4:	pop	{r4, r5, r6, sl, fp, pc}

000170c8 <mcsimple_clean@@Base>:
   170c8:	mov	r1, #0
   170cc:	str	r1, [r0, #12]
   170d0:	str	r1, [r0, #24]
   170d4:	bx	lr

000170d8 <mcsimple_destroy@@Base>:
   170d8:	push	{r4, r5, r6, r7, fp, lr}
   170dc:	add	fp, sp, #16
   170e0:	mov	r4, #0
   170e4:	cmp	r0, #0
   170e8:	beq	17154 <mcsimple_destroy@@Base+0x7c>
   170ec:	mov	r5, r0
   170f0:	ldr	r0, [r0, #4]
   170f4:	mov	r6, r1
   170f8:	cmp	r0, #0
   170fc:	beq	17140 <mcsimple_destroy@@Base+0x68>
   17100:	ldr	r1, [r5, #16]
   17104:	cmp	r1, #0
   17108:	beq	1713c <mcsimple_destroy@@Base+0x64>
   1710c:	mov	r7, #0
   17110:	b	17118 <mcsimple_destroy@@Base+0x40>
   17114:	ldr	r0, [r5, #4]
   17118:	ldr	r0, [r0, r7, lsl #2]
   1711c:	cmp	r0, #0
   17120:	beq	1712c <mcsimple_destroy@@Base+0x54>
   17124:	bl	11ab8 <mycore_free@plt>
   17128:	ldr	r1, [r5, #16]
   1712c:	add	r7, r7, #1
   17130:	cmp	r7, r1
   17134:	bcc	17114 <mcsimple_destroy@@Base+0x3c>
   17138:	ldr	r0, [r5, #4]
   1713c:	bl	11ab8 <mycore_free@plt>
   17140:	cmp	r6, #0
   17144:	moveq	r0, r5
   17148:	popeq	{r4, r5, r6, r7, fp, pc}
   1714c:	mov	r0, r5
   17150:	bl	11ab8 <mycore_free@plt>
   17154:	mov	r0, r4
   17158:	pop	{r4, r5, r6, r7, fp, pc}

0001715c <mcsimple_malloc@@Base>:
   1715c:	push	{r4, r5, r6, sl, fp, lr}
   17160:	add	fp, sp, #16
   17164:	mov	r4, r0
   17168:	ldr	r1, [r0, #20]
   1716c:	ldr	r0, [r0, #24]
   17170:	cmp	r0, r1
   17174:	bcs	17180 <mcsimple_malloc@@Base+0x24>
   17178:	ldr	r1, [r4, #4]
   1717c:	b	17218 <mcsimple_malloc@@Base+0xbc>
   17180:	ldr	r0, [r4, #12]
   17184:	ldr	r6, [r4, #8]
   17188:	add	r5, r0, #1
   1718c:	cmp	r5, r6
   17190:	str	r5, [r4, #12]
   17194:	bcc	171d0 <mcsimple_malloc@@Base+0x74>
   17198:	ldr	r0, [r4, #4]
   1719c:	lsl	r1, r6, #2
   171a0:	bl	10db0 <mycore_realloc@plt>
   171a4:	cmp	r0, #0
   171a8:	beq	17234 <mcsimple_malloc@@Base+0xd8>
   171ac:	str	r0, [r4, #4]
   171b0:	add	r6, r6, #128	; 0x80
   171b4:	add	r0, r0, r5, lsl #2
   171b8:	ldr	r1, [r4, #8]
   171bc:	sub	r1, r6, r1
   171c0:	lsl	r2, r1, #2
   171c4:	mov	r1, #0
   171c8:	bl	116ec <memset@plt>
   171cc:	str	r6, [r4, #8]
   171d0:	mov	r0, #0
   171d4:	str	r0, [r4, #24]
   171d8:	ldr	r1, [r4, #4]
   171dc:	ldr	r2, [r1, r5, lsl #2]
   171e0:	cmp	r2, #0
   171e4:	bne	17218 <mcsimple_malloc@@Base+0xbc>
   171e8:	ldr	r1, [r4, #16]
   171ec:	ldr	r0, [r4, #20]
   171f0:	add	r1, r1, #1
   171f4:	str	r1, [r4, #16]
   171f8:	bl	119c8 <mycore_malloc@plt>
   171fc:	ldr	r1, [r4, #4]
   17200:	str	r0, [r1, r5, lsl #2]
   17204:	ldr	r1, [r4, #4]
   17208:	ldr	r0, [r1, r5, lsl #2]
   1720c:	cmp	r0, #0
   17210:	beq	17234 <mcsimple_malloc@@Base+0xd8>
   17214:	ldr	r0, [r4, #24]
   17218:	ldr	r2, [r4]
   1721c:	ldr	r3, [r4, #12]
   17220:	add	r2, r2, r0
   17224:	str	r2, [r4, #24]
   17228:	ldr	r1, [r1, r3, lsl #2]
   1722c:	add	r0, r1, r0
   17230:	pop	{r4, r5, r6, sl, fp, pc}
   17234:	mov	r0, #0
   17238:	pop	{r4, r5, r6, sl, fp, pc}

0001723c <mcsimple_get_by_absolute_position@@Base>:
   1723c:	push	{fp, lr}
   17240:	mov	fp, sp
   17244:	ldr	r2, [r0]
   17248:	ldr	ip, [r0, #20]
   1724c:	ldr	lr, [r0, #16]
   17250:	mul	r2, r2, r1
   17254:	mov	r1, #0
   17258:	udiv	r3, r2, ip
   1725c:	cmp	r3, lr
   17260:	ldrcc	r0, [r0, #4]
   17264:	mlscc	r1, r3, ip, r2
   17268:	ldrcc	r0, [r0, r3, lsl #2]
   1726c:	addcc	r1, r0, r1
   17270:	mov	r0, r1
   17274:	pop	{fp, pc}

00017278 <mcsync_create@@Base>:
   17278:	mov	r0, #1
   1727c:	mov	r1, #8
   17280:	b	11020 <mycore_calloc@plt>

00017284 <mcsync_init@@Base>:
   17284:	push	{r4, r5, r6, sl, fp, lr}
   17288:	add	fp, sp, #16
   1728c:	mov	r5, r0
   17290:	bl	114d0 <mcsync_spin_create@plt>
   17294:	mov	r4, #1
   17298:	cmp	r0, #0
   1729c:	str	r0, [r5]
   172a0:	beq	172fc <mcsync_init@@Base+0x78>
   172a4:	bl	1147c <mcsync_spin_init@plt>
   172a8:	cmp	r0, #0
   172ac:	beq	172c4 <mcsync_init@@Base+0x40>
   172b0:	mov	r6, r0
   172b4:	ldr	r0, [r5]
   172b8:	bl	1108c <mcsync_spin_destroy@plt>
   172bc:	mov	r0, r6
   172c0:	pop	{r4, r5, r6, sl, fp, pc}
   172c4:	bl	11704 <mcsync_mutex_create@plt>
   172c8:	cmp	r0, #0
   172cc:	str	r0, [r5, #4]
   172d0:	beq	172fc <mcsync_init@@Base+0x78>
   172d4:	bl	118e4 <mcsync_mutex_init@plt>
   172d8:	cmp	r0, #0
   172dc:	moveq	r4, #0
   172e0:	moveq	r0, r4
   172e4:	popeq	{r4, r5, r6, sl, fp, pc}
   172e8:	mov	r4, r0
   172ec:	ldr	r0, [r5]
   172f0:	bl	1108c <mcsync_spin_destroy@plt>
   172f4:	ldr	r0, [r5, #4]
   172f8:	bl	10ef4 <mcsync_mutex_destroy@plt>
   172fc:	mov	r0, r4
   17300:	pop	{r4, r5, r6, sl, fp, pc}

00017304 <mcsync_clean@@Base>:
   17304:	push	{r4, sl, fp, lr}
   17308:	add	fp, sp, #8
   1730c:	mov	r4, r0
   17310:	ldr	r0, [r0]
   17314:	bl	11854 <mcsync_spin_clean@plt>
   17318:	ldr	r0, [r4, #4]
   1731c:	pop	{r4, sl, fp, lr}
   17320:	b	11b0c <mcsync_mutex_clean@plt>

00017324 <mcsync_destroy@@Base>:
   17324:	push	{r4, r5, r6, sl, fp, lr}
   17328:	add	fp, sp, #16
   1732c:	mov	r4, #0
   17330:	cmp	r0, #0
   17334:	beq	17364 <mcsync_destroy@@Base+0x40>
   17338:	mov	r5, r0
   1733c:	ldr	r0, [r0]
   17340:	mov	r6, r1
   17344:	bl	1108c <mcsync_spin_destroy@plt>
   17348:	ldr	r0, [r5, #4]
   1734c:	bl	10ef4 <mcsync_mutex_destroy@plt>
   17350:	cmp	r6, #0
   17354:	moveq	r0, r5
   17358:	popeq	{r4, r5, r6, sl, fp, pc}
   1735c:	mov	r0, r5
   17360:	bl	11ab8 <mycore_free@plt>
   17364:	mov	r0, r4
   17368:	pop	{r4, r5, r6, sl, fp, pc}

0001736c <mcsync_lock@@Base>:
   1736c:	ldr	r0, [r0]
   17370:	b	114f4 <mcsync_spin_lock@plt>

00017374 <mcsync_unlock@@Base>:
   17374:	ldr	r0, [r0]
   17378:	b	11c74 <mcsync_spin_unlock@plt>

0001737c <mctree_create@@Base>:
   1737c:	push	{r4, r5, r6, sl, fp, lr}
   17380:	add	fp, sp, #16
   17384:	mov	r5, r0
   17388:	mov	r0, #16
   1738c:	bl	119c8 <mycore_malloc@plt>
   17390:	mov	r4, #0
   17394:	cmp	r0, #0
   17398:	beq	173cc <mctree_create@@Base+0x50>
   1739c:	mov	r6, r0
   173a0:	add	r1, r5, #1
   173a4:	add	r0, r5, #512	; 0x200
   173a8:	str	r1, [r6, #4]
   173ac:	mov	r1, #28
   173b0:	str	r0, [r6, #8]
   173b4:	bl	11020 <mycore_calloc@plt>
   173b8:	cmp	r0, #0
   173bc:	str	r0, [r6]
   173c0:	beq	173d4 <mctree_create@@Base+0x58>
   173c4:	mov	r4, r6
   173c8:	str	r5, [r6, #12]
   173cc:	mov	r0, r4
   173d0:	pop	{r4, r5, r6, sl, fp, pc}
   173d4:	mov	r0, r6
   173d8:	bl	11ab8 <mycore_free@plt>
   173dc:	mov	r0, r4
   173e0:	pop	{r4, r5, r6, sl, fp, pc}

000173e4 <mctree_clean@@Base>:
   173e4:	ldr	r3, [r0, #12]
   173e8:	ldr	r2, [r0, #8]
   173ec:	ldr	r1, [r0]
   173f0:	add	r3, r3, #1
   173f4:	str	r3, [r0, #4]
   173f8:	rsb	r0, r2, r2, lsl #3
   173fc:	lsl	r2, r0, #2
   17400:	mov	r0, r1
   17404:	mov	r1, #0
   17408:	b	116ec <memset@plt>

0001740c <mctree_destroy@@Base>:
   1740c:	cmp	r0, #0
   17410:	beq	1743c <mctree_destroy@@Base+0x30>
   17414:	push	{r4, sl, fp, lr}
   17418:	add	fp, sp, #8
   1741c:	mov	r4, r0
   17420:	ldr	r0, [r0]
   17424:	cmp	r0, #0
   17428:	beq	17430 <mctree_destroy@@Base+0x24>
   1742c:	bl	11ab8 <mycore_free@plt>
   17430:	mov	r0, r4
   17434:	bl	11ab8 <mycore_free@plt>
   17438:	pop	{r4, sl, fp, lr}
   1743c:	mov	r0, #0
   17440:	bx	lr

00017444 <__mtree_search_lowercase_to_start@@Base>:
   17444:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17448:	add	fp, sp, #24
   1744c:	cmp	r1, #0
   17450:	beq	174e0 <__mtree_search_lowercase_to_start@@Base+0x9c>
   17454:	ldr	r7, [r0]
   17458:	mov	r5, r3
   1745c:	mov	r8, r2
   17460:	mov	r4, r1
   17464:	rsb	r0, r4, r4, lsl #3
   17468:	add	r6, r7, r0, lsl #2
   1746c:	ldr	r1, [r6, #4]
   17470:	cmp	r1, r5
   17474:	bne	174a0 <__mtree_search_lowercase_to_start@@Base+0x5c>
   17478:	ldr	r1, [r7, r0, lsl #2]
   1747c:	mov	r0, r8
   17480:	mov	r2, r5
   17484:	bl	112b4 <mycore_strncasecmp@plt>
   17488:	cmp	r0, #0
   1748c:	beq	174e4 <__mtree_search_lowercase_to_start@@Base+0xa0>
   17490:	ldr	r4, [r6, #24]
   17494:	cmp	r4, #0
   17498:	bne	17464 <__mtree_search_lowercase_to_start@@Base+0x20>
   1749c:	b	174e0 <__mtree_search_lowercase_to_start@@Base+0x9c>
   174a0:	bcs	174c8 <__mtree_search_lowercase_to_start@@Base+0x84>
   174a4:	ldr	r4, [r6, #20]
   174a8:	rsb	r0, r4, r4, lsl #3
   174ac:	add	r0, r7, r0, lsl #2
   174b0:	ldr	r0, [r0, #4]
   174b4:	cmp	r0, r5
   174b8:	bhi	174e0 <__mtree_search_lowercase_to_start@@Base+0x9c>
   174bc:	cmp	r4, #0
   174c0:	bne	17464 <__mtree_search_lowercase_to_start@@Base+0x20>
   174c4:	b	174e0 <__mtree_search_lowercase_to_start@@Base+0x9c>
   174c8:	ldr	r4, [r6, #16]
   174cc:	rsb	r0, r4, r4, lsl #3
   174d0:	add	r0, r7, r0, lsl #2
   174d4:	ldr	r0, [r0, #4]
   174d8:	cmp	r0, r5
   174dc:	bcs	174bc <__mtree_search_lowercase_to_start@@Base+0x78>
   174e0:	mov	r4, #0
   174e4:	mov	r0, r4
   174e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000174ec <__mtree_search_to_start@@Base>:
   174ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   174f0:	add	fp, sp, #24
   174f4:	cmp	r1, #0
   174f8:	beq	17588 <__mtree_search_to_start@@Base+0x9c>
   174fc:	ldr	r7, [r0]
   17500:	mov	r5, r3
   17504:	mov	r8, r2
   17508:	mov	r4, r1
   1750c:	rsb	r0, r4, r4, lsl #3
   17510:	add	r6, r7, r0, lsl #2
   17514:	ldr	r1, [r6, #4]
   17518:	cmp	r1, r5
   1751c:	bne	17548 <__mtree_search_to_start@@Base+0x5c>
   17520:	ldr	r1, [r7, r0, lsl #2]
   17524:	mov	r0, r8
   17528:	mov	r2, r5
   1752c:	bl	1114c <memcmp@plt>
   17530:	cmp	r0, #0
   17534:	beq	1758c <__mtree_search_to_start@@Base+0xa0>
   17538:	ldr	r4, [r6, #24]
   1753c:	cmp	r4, #0
   17540:	bne	1750c <__mtree_search_to_start@@Base+0x20>
   17544:	b	17588 <__mtree_search_to_start@@Base+0x9c>
   17548:	bcs	17570 <__mtree_search_to_start@@Base+0x84>
   1754c:	ldr	r4, [r6, #20]
   17550:	rsb	r0, r4, r4, lsl #3
   17554:	add	r0, r7, r0, lsl #2
   17558:	ldr	r0, [r0, #4]
   1755c:	cmp	r0, r5
   17560:	bhi	17588 <__mtree_search_to_start@@Base+0x9c>
   17564:	cmp	r4, #0
   17568:	bne	1750c <__mtree_search_to_start@@Base+0x20>
   1756c:	b	17588 <__mtree_search_to_start@@Base+0x9c>
   17570:	ldr	r4, [r6, #16]
   17574:	rsb	r0, r4, r4, lsl #3
   17578:	add	r0, r7, r0, lsl #2
   1757c:	ldr	r0, [r0, #4]
   17580:	cmp	r0, r5
   17584:	bcs	17564 <__mtree_search_to_start@@Base+0x78>
   17588:	mov	r4, #0
   1758c:	mov	r0, r4
   17590:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017594 <mctree_insert_child@@Base>:
   17594:	push	{r4, r5, fp, lr}
   17598:	add	fp, sp, #8
   1759c:	mov	r5, r0
   175a0:	ldr	r0, [r0]
   175a4:	rsb	r1, r1, r1, lsl #3
   175a8:	ldr	r4, [r5, #4]
   175ac:	add	r1, r0, r1, lsl #2
   175b0:	str	r4, [r1, #24]
   175b4:	rsb	ip, r4, r4, lsl #3
   175b8:	mov	r1, r0
   175bc:	str	r2, [r1, ip, lsl #2]!
   175c0:	ldr	r2, [fp, #8]
   175c4:	str	r3, [r1, #4]
   175c8:	str	r2, [r1, #8]
   175cc:	add	r1, r4, #1
   175d0:	str	r1, [r5, #4]
   175d4:	ldr	r2, [r5, #8]
   175d8:	cmp	r1, r2
   175dc:	bcc	17600 <mctree_insert_child@@Base+0x6c>
   175e0:	movw	r1, #4097	; 0x1001
   175e4:	add	r1, r4, r1
   175e8:	str	r1, [r5, #8]
   175ec:	rsb	r1, r1, r1, lsl #3
   175f0:	lsl	r1, r1, #2
   175f4:	bl	10db0 <mycore_realloc@plt>
   175f8:	str	r0, [r5]
   175fc:	ldr	r1, [r5, #4]
   17600:	rsb	r1, r1, r1, lsl #3
   17604:	mov	r2, #0
   17608:	vmov.i32	q8, #0	; 0x00000000
   1760c:	str	r2, [r0, r1, lsl #2]!
   17610:	str	r2, [r0, #24]
   17614:	add	r0, r0, #8
   17618:	vst1.32	{d16-d17}, [r0]
   1761c:	mov	r0, r4
   17620:	pop	{r4, r5, fp, pc}

00017624 <mctree_insert_after@@Base>:
   17624:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17628:	add	fp, sp, #24
   1762c:	mov	r5, r0
   17630:	ldr	r0, [r0]
   17634:	rsb	r6, r1, r1, lsl #3
   17638:	ldr	ip, [fp, #8]
   1763c:	ldr	r8, [r5, #4]
   17640:	add	r4, r0, r6, lsl #2
   17644:	ldr	r6, [r4, #20]!
   17648:	cmp	r6, #0
   1764c:	beq	17668 <mctree_insert_after@@Base+0x44>
   17650:	rsb	r7, r6, r6, lsl #3
   17654:	add	r7, r0, r7, lsl #2
   17658:	str	r8, [r7, #16]
   1765c:	rsb	r7, r8, r8, lsl #3
   17660:	add	r7, r0, r7, lsl #2
   17664:	str	r6, [r7, #20]
   17668:	rsb	r7, r8, r8, lsl #3
   1766c:	mov	r6, r0
   17670:	str	r8, [r4]
   17674:	str	r2, [r6, r7, lsl #2]!
   17678:	str	r1, [r6, #16]
   1767c:	add	r1, r8, #1
   17680:	stmib	r6, {r3, ip}
   17684:	str	r1, [r5, #4]
   17688:	ldr	r2, [r5, #8]
   1768c:	cmp	r1, r2
   17690:	bcc	176b4 <mctree_insert_after@@Base+0x90>
   17694:	movw	r1, #4097	; 0x1001
   17698:	add	r1, r8, r1
   1769c:	str	r1, [r5, #8]
   176a0:	rsb	r1, r1, r1, lsl #3
   176a4:	lsl	r1, r1, #2
   176a8:	bl	10db0 <mycore_realloc@plt>
   176ac:	str	r0, [r5]
   176b0:	ldr	r1, [r5, #4]
   176b4:	rsb	r1, r1, r1, lsl #3
   176b8:	mov	r2, #0
   176bc:	vmov.i32	q8, #0	; 0x00000000
   176c0:	str	r2, [r0, r1, lsl #2]!
   176c4:	str	r2, [r0, #24]
   176c8:	add	r0, r0, #8
   176cc:	vst1.32	{d16-d17}, [r0]
   176d0:	mov	r0, r8
   176d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000176d8 <mctree_insert_before@@Base>:
   176d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   176dc:	add	fp, sp, #24
   176e0:	mov	r5, r0
   176e4:	ldr	r0, [r0]
   176e8:	rsb	r6, r1, r1, lsl #3
   176ec:	ldr	ip, [fp, #8]
   176f0:	ldr	r8, [r5, #4]
   176f4:	add	r4, r0, r6, lsl #2
   176f8:	ldr	r6, [r4, #16]!
   176fc:	cmp	r6, #0
   17700:	beq	1771c <mctree_insert_before@@Base+0x44>
   17704:	rsb	r7, r6, r6, lsl #3
   17708:	add	r7, r0, r7, lsl #2
   1770c:	str	r8, [r7, #20]
   17710:	rsb	r7, r8, r8, lsl #3
   17714:	add	r7, r0, r7, lsl #2
   17718:	str	r6, [r7, #16]
   1771c:	rsb	r7, r8, r8, lsl #3
   17720:	mov	r6, r0
   17724:	str	r8, [r4]
   17728:	str	r2, [r6, r7, lsl #2]!
   1772c:	str	r1, [r6, #20]
   17730:	add	r1, r8, #1
   17734:	stmib	r6, {r3, ip}
   17738:	str	r1, [r5, #4]
   1773c:	ldr	r2, [r5, #8]
   17740:	cmp	r1, r2
   17744:	bcc	17768 <mctree_insert_before@@Base+0x90>
   17748:	movw	r1, #4097	; 0x1001
   1774c:	add	r1, r8, r1
   17750:	str	r1, [r5, #8]
   17754:	rsb	r1, r1, r1, lsl #3
   17758:	lsl	r1, r1, #2
   1775c:	bl	10db0 <mycore_realloc@plt>
   17760:	str	r0, [r5]
   17764:	ldr	r1, [r5, #4]
   17768:	rsb	r1, r1, r1, lsl #3
   1776c:	mov	r2, #0
   17770:	vmov.i32	q8, #0	; 0x00000000
   17774:	str	r2, [r0, r1, lsl #2]!
   17778:	str	r2, [r0, #24]
   1777c:	add	r0, r0, #8
   17780:	vst1.32	{d16-d17}, [r0]
   17784:	mov	r0, r8
   17788:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001778c <__mtree_insert_to_start@@Base>:
   1778c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17790:	add	fp, sp, #28
   17794:	sub	sp, sp, #4
   17798:	cmp	r1, #0
   1779c:	beq	17878 <__mtree_insert_to_start@@Base+0xec>
   177a0:	mov	sl, r0
   177a4:	ldr	r4, [r0]
   177a8:	ldr	r0, [fp, #8]
   177ac:	mov	r6, r3
   177b0:	mov	r8, r2
   177b4:	str	r0, [sp]
   177b8:	rsb	r7, r1, r1, lsl #3
   177bc:	mov	r5, r1
   177c0:	add	r9, r4, r7, lsl #2
   177c4:	ldr	r0, [r9, #4]
   177c8:	cmp	r0, r6
   177cc:	bne	177f8 <__mtree_insert_to_start@@Base+0x6c>
   177d0:	ldr	r1, [r4, r7, lsl #2]
   177d4:	mov	r0, r8
   177d8:	mov	r2, r6
   177dc:	bl	1114c <memcmp@plt>
   177e0:	cmp	r0, #0
   177e4:	beq	17880 <__mtree_insert_to_start@@Base+0xf4>
   177e8:	ldr	r1, [r9, #24]!
   177ec:	cmp	r1, #0
   177f0:	bne	177b8 <__mtree_insert_to_start@@Base+0x2c>
   177f4:	b	17894 <__mtree_insert_to_start@@Base+0x108>
   177f8:	bcs	17820 <__mtree_insert_to_start@@Base+0x94>
   177fc:	ldr	r1, [r9, #20]!
   17800:	cmp	r1, #0
   17804:	beq	178c8 <__mtree_insert_to_start@@Base+0x13c>
   17808:	rsb	r0, r1, r1, lsl #3
   1780c:	add	r0, r4, r0, lsl #2
   17810:	ldr	r0, [r0, #4]
   17814:	cmp	r0, r6
   17818:	bls	177b8 <__mtree_insert_to_start@@Base+0x2c>
   1781c:	b	178c8 <__mtree_insert_to_start@@Base+0x13c>
   17820:	ldr	r1, [r9, #16]!
   17824:	cmp	r1, #0
   17828:	beq	17840 <__mtree_insert_to_start@@Base+0xb4>
   1782c:	rsb	r0, r1, r1, lsl #3
   17830:	add	r0, r4, r0, lsl #2
   17834:	ldr	r0, [r0, #4]
   17838:	cmp	r0, r6
   1783c:	bcs	177b8 <__mtree_insert_to_start@@Base+0x2c>
   17840:	ldr	r3, [fp, #12]
   17844:	cmp	r3, #0
   17848:	beq	17900 <__mtree_insert_to_start@@Base+0x174>
   1784c:	add	r2, fp, #8
   17850:	mov	r0, r8
   17854:	mov	r1, r6
   17858:	blx	r3
   1785c:	ldr	r4, [sl]
   17860:	ldr	r2, [fp, #8]
   17864:	mov	r0, sl
   17868:	add	r9, r4, r7, lsl #2
   1786c:	str	r2, [sp]
   17870:	ldr	r1, [r9, #16]!
   17874:	b	17904 <__mtree_insert_to_start@@Base+0x178>
   17878:	mov	sl, #0
   1787c:	b	17a50 <__mtree_insert_to_start@@Base+0x2c4>
   17880:	ldr	r0, [sp]
   17884:	mov	sl, r5
   17888:	cmp	r0, #0
   1788c:	strne	r0, [r9, #8]
   17890:	b	17a50 <__mtree_insert_to_start@@Base+0x2c4>
   17894:	ldr	r3, [fp, #12]
   17898:	cmp	r3, #0
   1789c:	beq	17944 <__mtree_insert_to_start@@Base+0x1b8>
   178a0:	add	r2, fp, #8
   178a4:	mov	r0, r8
   178a8:	mov	r1, r6
   178ac:	blx	r3
   178b0:	ldr	r4, [sl]
   178b4:	ldr	r3, [fp, #8]
   178b8:	mov	r2, sl
   178bc:	add	r0, r4, r7, lsl #2
   178c0:	add	r9, r0, #24
   178c4:	b	1794c <__mtree_insert_to_start@@Base+0x1c0>
   178c8:	ldr	r3, [fp, #12]
   178cc:	cmp	r3, #0
   178d0:	beq	179ac <__mtree_insert_to_start@@Base+0x220>
   178d4:	add	r2, fp, #8
   178d8:	mov	r0, r8
   178dc:	mov	r1, r6
   178e0:	blx	r3
   178e4:	ldr	r4, [sl]
   178e8:	ldr	r2, [fp, #8]
   178ec:	mov	r0, sl
   178f0:	add	r9, r4, r7, lsl #2
   178f4:	str	r2, [sp]
   178f8:	ldr	r1, [r9, #20]!
   178fc:	b	179b0 <__mtree_insert_to_start@@Base+0x224>
   17900:	mov	r0, sl
   17904:	ldr	sl, [r0, #4]
   17908:	cmp	r1, #0
   1790c:	mov	r7, r0
   17910:	beq	1792c <__mtree_insert_to_start@@Base+0x1a0>
   17914:	rsb	r0, r1, r1, lsl #3
   17918:	add	r0, r4, r0, lsl #2
   1791c:	str	sl, [r0, #20]
   17920:	rsb	r0, sl, sl, lsl #3
   17924:	add	r0, r4, r0, lsl #2
   17928:	str	r1, [r0, #16]
   1792c:	rsb	r0, sl, sl, lsl #3
   17930:	mov	r1, r4
   17934:	str	sl, [r9]
   17938:	str	r8, [r1, r0, lsl #2]!
   1793c:	str	r5, [r1, #20]
   17940:	b	179ec <__mtree_insert_to_start@@Base+0x260>
   17944:	ldr	r3, [sp]
   17948:	mov	r2, sl
   1794c:	ldr	sl, [r2, #4]
   17950:	mov	r1, r4
   17954:	rsb	r0, sl, sl, lsl #3
   17958:	str	sl, [r9]
   1795c:	str	r8, [r1, r0, lsl #2]!
   17960:	add	r0, sl, #1
   17964:	str	r6, [r1, #4]
   17968:	str	r3, [r1, #8]
   1796c:	str	r0, [r2, #4]
   17970:	ldr	r1, [r2, #8]
   17974:	cmp	r0, r1
   17978:	bcc	17a34 <__mtree_insert_to_start@@Base+0x2a8>
   1797c:	movw	r0, #4097	; 0x1001
   17980:	mov	r5, r2
   17984:	add	r0, sl, r0
   17988:	str	r0, [r2, #8]
   1798c:	rsb	r0, r0, r0, lsl #3
   17990:	lsl	r1, r0, #2
   17994:	mov	r0, r4
   17998:	bl	10db0 <mycore_realloc@plt>
   1799c:	str	r0, [r5]
   179a0:	mov	r4, r0
   179a4:	ldr	r0, [r5, #4]
   179a8:	b	17a34 <__mtree_insert_to_start@@Base+0x2a8>
   179ac:	mov	r0, sl
   179b0:	ldr	sl, [r0, #4]
   179b4:	cmp	r1, #0
   179b8:	mov	r7, r0
   179bc:	beq	179d8 <__mtree_insert_to_start@@Base+0x24c>
   179c0:	rsb	r0, r1, r1, lsl #3
   179c4:	add	r0, r4, r0, lsl #2
   179c8:	str	sl, [r0, #16]
   179cc:	rsb	r0, sl, sl, lsl #3
   179d0:	add	r0, r4, r0, lsl #2
   179d4:	str	r1, [r0, #20]
   179d8:	rsb	r0, sl, sl, lsl #3
   179dc:	mov	r1, r4
   179e0:	str	sl, [r9]
   179e4:	str	r8, [r1, r0, lsl #2]!
   179e8:	str	r5, [r1, #16]
   179ec:	str	r6, [r1, #4]
   179f0:	ldr	r0, [sp]
   179f4:	str	r0, [r1, #8]
   179f8:	add	r0, sl, #1
   179fc:	str	r0, [r7, #4]
   17a00:	ldr	r1, [r7, #8]
   17a04:	cmp	r0, r1
   17a08:	bcc	17a34 <__mtree_insert_to_start@@Base+0x2a8>
   17a0c:	movw	r0, #4097	; 0x1001
   17a10:	add	r0, sl, r0
   17a14:	str	r0, [r7, #8]
   17a18:	rsb	r0, r0, r0, lsl #3
   17a1c:	lsl	r1, r0, #2
   17a20:	mov	r0, r4
   17a24:	bl	10db0 <mycore_realloc@plt>
   17a28:	str	r0, [r7]
   17a2c:	mov	r4, r0
   17a30:	ldr	r0, [r7, #4]
   17a34:	rsb	r0, r0, r0, lsl #3
   17a38:	mov	r1, #0
   17a3c:	vmov.i32	q8, #0	; 0x00000000
   17a40:	str	r1, [r4, r0, lsl #2]!
   17a44:	add	r0, r4, #8
   17a48:	str	r1, [r4, #24]
   17a4c:	vst1.32	{d16-d17}, [r0]
   17a50:	mov	r0, sl
   17a54:	sub	sp, fp, #28
   17a58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017a5c <mctree_insert@@Base>:
   17a5c:	push	{r4, r5, r6, r7, fp, lr}
   17a60:	add	fp, sp, #16
   17a64:	sub	sp, sp, #16
   17a68:	cmp	r2, #0
   17a6c:	str	r3, [sp, #12]
   17a70:	beq	17ae8 <mctree_insert@@Base+0x8c>
   17a74:	mov	r4, r0
   17a78:	mov	r0, r1
   17a7c:	mov	r6, r1
   17a80:	mov	r5, r2
   17a84:	ldr	ip, [fp, #8]
   17a88:	ldrb	r1, [r0], r2
   17a8c:	ldr	r2, [pc, #252]	; 17b90 <mctree_insert@@Base+0x134>
   17a90:	ldrb	r0, [r0, #-1]
   17a94:	add	r2, pc, r2
   17a98:	ldrb	r1, [r2, r1]
   17a9c:	ldrb	r0, [r2, r0]
   17aa0:	ldr	r2, [r4, #12]
   17aa4:	add	r1, r0, r1
   17aa8:	ldr	r0, [r4]
   17aac:	udiv	r7, r1, r2
   17ab0:	mls	r1, r7, r2, r1
   17ab4:	add	r1, r1, #1
   17ab8:	rsb	r7, r1, r1, lsl #3
   17abc:	add	r2, r0, r7, lsl #2
   17ac0:	ldr	r1, [r2, #24]!
   17ac4:	cmp	r1, #0
   17ac8:	beq	17af0 <mctree_insert@@Base+0x94>
   17acc:	stm	sp, {r3, ip}
   17ad0:	mov	r0, r4
   17ad4:	mov	r2, r6
   17ad8:	mov	r3, r5
   17adc:	bl	1135c <__mtree_insert_to_start@plt>
   17ae0:	sub	sp, fp, #16
   17ae4:	pop	{r4, r5, r6, r7, fp, pc}
   17ae8:	mov	r7, #0
   17aec:	b	17b84 <mctree_insert@@Base+0x128>
   17af0:	cmp	ip, #0
   17af4:	beq	17b18 <mctree_insert@@Base+0xbc>
   17af8:	add	r2, sp, #12
   17afc:	mov	r0, r6
   17b00:	mov	r1, r5
   17b04:	blx	ip
   17b08:	ldr	r0, [r4]
   17b0c:	ldr	r3, [sp, #12]
   17b10:	add	r1, r0, r7, lsl #2
   17b14:	add	r2, r1, #24
   17b18:	ldr	r7, [r4, #4]
   17b1c:	str	r7, [r2]
   17b20:	rsb	r1, r7, r7, lsl #3
   17b24:	mov	r2, r0
   17b28:	str	r6, [r2, r1, lsl #2]!
   17b2c:	add	r1, r7, #1
   17b30:	str	r5, [r2, #4]
   17b34:	str	r3, [r2, #8]
   17b38:	str	r1, [r4, #4]
   17b3c:	ldr	r2, [r4, #8]
   17b40:	cmp	r1, r2
   17b44:	bcc	17b68 <mctree_insert@@Base+0x10c>
   17b48:	movw	r1, #4097	; 0x1001
   17b4c:	add	r1, r7, r1
   17b50:	str	r1, [r4, #8]
   17b54:	rsb	r1, r1, r1, lsl #3
   17b58:	lsl	r1, r1, #2
   17b5c:	bl	10db0 <mycore_realloc@plt>
   17b60:	str	r0, [r4]
   17b64:	ldr	r1, [r4, #4]
   17b68:	rsb	r1, r1, r1, lsl #3
   17b6c:	mov	r2, #0
   17b70:	vmov.i32	q8, #0	; 0x00000000
   17b74:	str	r2, [r0, r1, lsl #2]!
   17b78:	str	r2, [r0, #24]
   17b7c:	add	r0, r0, #8
   17b80:	vst1.32	{d16-d17}, [r0]
   17b84:	mov	r0, r7
   17b88:	sub	sp, fp, #16
   17b8c:	pop	{r4, r5, r6, r7, fp, pc}
   17b90:			; <UNDEFINED> instruction: 0x0001c1bc

00017b94 <mctree_search@@Base>:
   17b94:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17b98:	add	fp, sp, #24
   17b9c:	cmp	r2, #0
   17ba0:	beq	17c5c <mctree_search@@Base+0xc8>
   17ba4:	mov	r4, r2
   17ba8:	mov	r8, r1
   17bac:	ldrb	r2, [r1], r2
   17bb0:	ldr	r3, [pc, #176]	; 17c68 <mctree_search@@Base+0xd4>
   17bb4:	ldr	r7, [r0]
   17bb8:	ldr	r0, [r0, #12]
   17bbc:	ldrb	r1, [r1, #-1]
   17bc0:	add	r3, pc, r3
   17bc4:	ldrb	r2, [r3, r2]
   17bc8:	ldrb	r1, [r3, r1]
   17bcc:	add	r1, r1, r2
   17bd0:	udiv	r2, r1, r0
   17bd4:	mls	r0, r2, r0, r1
   17bd8:	rsb	r0, r0, r0, lsl #3
   17bdc:	add	r0, r7, r0, lsl #2
   17be0:	ldr	r6, [r0, #52]	; 0x34
   17be4:	b	17bec <mctree_search@@Base+0x58>
   17be8:	ldr	r6, [r5, #24]
   17bec:	cmp	r6, #0
   17bf0:	beq	17c5c <mctree_search@@Base+0xc8>
   17bf4:	rsb	r0, r6, r6, lsl #3
   17bf8:	add	r5, r7, r0, lsl #2
   17bfc:	ldr	r1, [r5, #4]
   17c00:	cmp	r1, r4
   17c04:	bne	17c24 <mctree_search@@Base+0x90>
   17c08:	ldr	r1, [r7, r0, lsl #2]
   17c0c:	mov	r0, r8
   17c10:	mov	r2, r4
   17c14:	bl	1114c <memcmp@plt>
   17c18:	cmp	r0, #0
   17c1c:	bne	17be8 <mctree_search@@Base+0x54>
   17c20:	b	17c60 <mctree_search@@Base+0xcc>
   17c24:	bcs	17c44 <mctree_search@@Base+0xb0>
   17c28:	ldr	r6, [r5, #20]
   17c2c:	rsb	r0, r6, r6, lsl #3
   17c30:	add	r0, r7, r0, lsl #2
   17c34:	ldr	r0, [r0, #4]
   17c38:	cmp	r0, r4
   17c3c:	bls	17bec <mctree_search@@Base+0x58>
   17c40:	b	17c5c <mctree_search@@Base+0xc8>
   17c44:	ldr	r6, [r5, #16]
   17c48:	rsb	r0, r6, r6, lsl #3
   17c4c:	add	r0, r7, r0, lsl #2
   17c50:	ldr	r0, [r0, #4]
   17c54:	cmp	r0, r4
   17c58:	bcs	17bec <mctree_search@@Base+0x58>
   17c5c:	mov	r6, #0
   17c60:	mov	r0, r6
   17c64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17c68:	muleq	r1, r0, r0

00017c6c <mctree_search_lowercase@@Base>:
   17c6c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17c70:	add	fp, sp, #24
   17c74:	cmp	r2, #0
   17c78:	beq	17d34 <mctree_search_lowercase@@Base+0xc8>
   17c7c:	mov	r4, r2
   17c80:	mov	r8, r1
   17c84:	ldrb	r2, [r1], r2
   17c88:	ldr	r3, [pc, #176]	; 17d40 <mctree_search_lowercase@@Base+0xd4>
   17c8c:	ldr	r7, [r0]
   17c90:	ldr	r0, [r0, #12]
   17c94:	ldrb	r1, [r1, #-1]
   17c98:	add	r3, pc, r3
   17c9c:	ldrb	r2, [r3, r2]
   17ca0:	ldrb	r1, [r3, r1]
   17ca4:	add	r1, r1, r2
   17ca8:	udiv	r2, r1, r0
   17cac:	mls	r0, r2, r0, r1
   17cb0:	rsb	r0, r0, r0, lsl #3
   17cb4:	add	r0, r7, r0, lsl #2
   17cb8:	ldr	r6, [r0, #52]	; 0x34
   17cbc:	b	17cc4 <mctree_search_lowercase@@Base+0x58>
   17cc0:	ldr	r6, [r5, #24]
   17cc4:	cmp	r6, #0
   17cc8:	beq	17d34 <mctree_search_lowercase@@Base+0xc8>
   17ccc:	rsb	r0, r6, r6, lsl #3
   17cd0:	add	r5, r7, r0, lsl #2
   17cd4:	ldr	r1, [r5, #4]
   17cd8:	cmp	r1, r4
   17cdc:	bne	17cfc <mctree_search_lowercase@@Base+0x90>
   17ce0:	ldr	r1, [r7, r0, lsl #2]
   17ce4:	mov	r0, r8
   17ce8:	mov	r2, r4
   17cec:	bl	112b4 <mycore_strncasecmp@plt>
   17cf0:	cmp	r0, #0
   17cf4:	bne	17cc0 <mctree_search_lowercase@@Base+0x54>
   17cf8:	b	17d38 <mctree_search_lowercase@@Base+0xcc>
   17cfc:	bcs	17d1c <mctree_search_lowercase@@Base+0xb0>
   17d00:	ldr	r6, [r5, #20]
   17d04:	rsb	r0, r6, r6, lsl #3
   17d08:	add	r0, r7, r0, lsl #2
   17d0c:	ldr	r0, [r0, #4]
   17d10:	cmp	r0, r4
   17d14:	bls	17cc4 <mctree_search_lowercase@@Base+0x58>
   17d18:	b	17d34 <mctree_search_lowercase@@Base+0xc8>
   17d1c:	ldr	r6, [r5, #16]
   17d20:	rsb	r0, r6, r6, lsl #3
   17d24:	add	r0, r7, r0, lsl #2
   17d28:	ldr	r0, [r0, #4]
   17d2c:	cmp	r0, r4
   17d30:	bcs	17cc4 <mctree_search_lowercase@@Base+0x58>
   17d34:	mov	r6, #0
   17d38:	mov	r0, r6
   17d3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17d40:			; <UNDEFINED> instruction: 0x0001bfb8

00017d44 <mycore_utils_mhash_hash@@Base>:
   17d44:	cmp	r1, #0
   17d48:	beq	17d70 <mycore_utils_mhash_hash@@Base+0x2c>
   17d4c:	mov	ip, #0
   17d50:	ldrb	r3, [r0], #1
   17d54:	subs	r1, r1, #1
   17d58:	add	r3, ip, r3
   17d5c:	add	r3, r3, r3, lsl #10
   17d60:	eor	ip, r3, r3, lsr #6
   17d64:	bne	17d50 <mycore_utils_mhash_hash@@Base+0xc>
   17d68:	add	r0, ip, ip, lsl #3
   17d6c:	b	17d74 <mycore_utils_mhash_hash@@Base+0x30>
   17d70:	mov	r0, #0
   17d74:	eor	r0, r0, r0, lsr #11
   17d78:	add	r0, r0, r0, lsl #15
   17d7c:	udiv	r1, r0, r2
   17d80:	mls	r0, r1, r2, r0
   17d84:	bx	lr

00017d88 <mycore_utils_mhash_create@@Base>:
   17d88:	mov	r0, #1
   17d8c:	mov	r1, #24
   17d90:	b	11020 <mycore_calloc@plt>

00017d94 <mycore_utils_mhash_init@@Base>:
   17d94:	push	{r4, r5, r6, sl, fp, lr}
   17d98:	add	fp, sp, #16
   17d9c:	sub	sp, sp, #8
   17da0:	mov	r4, r2
   17da4:	mov	r6, r1
   17da8:	mov	r5, r0
   17dac:	bl	111dc <mchar_async_create@plt>
   17db0:	mov	r1, r0
   17db4:	str	r0, [r5]
   17db8:	mov	r0, #2
   17dbc:	cmp	r1, #0
   17dc0:	beq	17e34 <mycore_utils_mhash_init@@Base+0xa0>
   17dc4:	mov	r0, r1
   17dc8:	mov	r1, #128	; 0x80
   17dcc:	mov	r2, #4096	; 0x1000
   17dd0:	bl	11428 <mchar_async_init@plt>
   17dd4:	cmp	r0, #0
   17dd8:	str	r0, [sp, #4]
   17ddc:	bne	17e34 <mycore_utils_mhash_init@@Base+0xa0>
   17de0:	ldr	r0, [r5]
   17de4:	add	r1, sp, #4
   17de8:	bl	112a8 <mchar_async_node_add@plt>
   17dec:	str	r0, [r5, #4]
   17df0:	ldr	r0, [sp, #4]
   17df4:	cmp	r0, #0
   17df8:	bne	17e34 <mycore_utils_mhash_init@@Base+0xa0>
   17dfc:	cmp	r6, #128	; 0x80
   17e00:	mov	r1, #4
   17e04:	movls	r6, #128	; 0x80
   17e08:	mov	r0, r6
   17e0c:	bl	11020 <mycore_calloc@plt>
   17e10:	str	r0, [r5, #8]
   17e14:	cmp	r0, #0
   17e18:	mov	r0, #2
   17e1c:	beq	17e34 <mycore_utils_mhash_init@@Base+0xa0>
   17e20:	cmp	r4, #0
   17e24:	mov	r0, #0
   17e28:	str	r6, [r5, #12]
   17e2c:	movweq	r4, #1
   17e30:	str	r4, [r5, #20]
   17e34:	sub	sp, fp, #16
   17e38:	pop	{r4, r5, r6, sl, fp, pc}

00017e3c <mycore_utils_mhash_clean@@Base>:
   17e3c:	push	{r4, sl, fp, lr}
   17e40:	add	fp, sp, #8
   17e44:	mov	r4, r0
   17e48:	ldr	r0, [r0]
   17e4c:	bl	11938 <mchar_async_clean@plt>
   17e50:	ldr	r1, [r4, #12]
   17e54:	ldr	r0, [r4, #8]
   17e58:	lsl	r2, r1, #2
   17e5c:	mov	r1, #0
   17e60:	pop	{r4, sl, fp, lr}
   17e64:	b	116ec <memset@plt>

00017e68 <mycore_utils_mhash_destroy@@Base>:
   17e68:	push	{r4, r5, fp, lr}
   17e6c:	add	fp, sp, #8
   17e70:	cmp	r0, #0
   17e74:	beq	17ea4 <mycore_utils_mhash_destroy@@Base+0x3c>
   17e78:	mov	r4, r0
   17e7c:	ldr	r0, [r0, #8]
   17e80:	mov	r5, r1
   17e84:	cmp	r0, #0
   17e88:	beq	17e98 <mycore_utils_mhash_destroy@@Base+0x30>
   17e8c:	bl	11ab8 <mycore_free@plt>
   17e90:	mov	r0, #0
   17e94:	str	r0, [r4, #8]
   17e98:	cmp	r5, #0
   17e9c:	beq	17ea8 <mycore_utils_mhash_destroy@@Base+0x40>
   17ea0:	bl	11ab8 <mycore_free@plt>
   17ea4:	mov	r4, #0
   17ea8:	mov	r0, r4
   17eac:	pop	{r4, r5, fp, pc}

00017eb0 <mycore_utils_mhash_create_entry@@Base>:
   17eb0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17eb4:	add	fp, sp, #24
   17eb8:	mov	r5, r0
   17ebc:	mov	r7, r1
   17ec0:	ldr	r0, [r0]
   17ec4:	mov	r6, r2
   17ec8:	mov	r2, #16
   17ecc:	mov	r8, r3
   17ed0:	ldr	r1, [r5, #4]
   17ed4:	bl	1174c <mchar_async_malloc@plt>
   17ed8:	mov	r4, r0
   17edc:	ldm	r5, {r0, r1}
   17ee0:	add	r2, r6, #1
   17ee4:	bl	1174c <mchar_async_malloc@plt>
   17ee8:	cmp	r0, #0
   17eec:	str	r0, [r4]
   17ef0:	beq	17f1c <mycore_utils_mhash_create_entry@@Base+0x6c>
   17ef4:	mov	r1, r7
   17ef8:	mov	r2, r6
   17efc:	bl	11050 <memcpy@plt>
   17f00:	ldr	r0, [r4]
   17f04:	mov	r1, #0
   17f08:	strb	r1, [r0, r6]
   17f0c:	mov	r0, r4
   17f10:	stmib	r4, {r6, r8}
   17f14:	str	r1, [r4, #12]
   17f18:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17f1c:	ldm	r5, {r0, r1}
   17f20:	mov	r2, r4
   17f24:	bl	115e4 <mchar_async_free@plt>
   17f28:	mov	r4, #0
   17f2c:	mov	r0, r4
   17f30:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017f34 <mycore_utils_mhash_add_with_choice@@Base>:
   17f34:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17f38:	add	fp, sp, #24
   17f3c:	cmp	r1, #0
   17f40:	mov	r9, #0
   17f44:	movne	r5, r2
   17f48:	cmpne	r2, #0
   17f4c:	bne	17f58 <mycore_utils_mhash_add_with_choice@@Base+0x24>
   17f50:	mov	r0, r9
   17f54:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17f58:	mov	r8, r0
   17f5c:	ldr	r0, [r0, #12]
   17f60:	mov	r6, r1
   17f64:	mov	r1, #0
   17f68:	mov	r2, #0
   17f6c:	ldrb	r3, [r6, r1]
   17f70:	add	r1, r1, #1
   17f74:	cmp	r5, r1
   17f78:	add	r2, r2, r3
   17f7c:	add	r2, r2, r2, lsl #10
   17f80:	eor	r2, r2, r2, lsr #6
   17f84:	bne	17f6c <mycore_utils_mhash_add_with_choice@@Base+0x38>
   17f88:	add	r1, r2, r2, lsl #3
   17f8c:	eor	r1, r1, r1, lsr #11
   17f90:	add	r1, r1, r1, lsl #15
   17f94:	udiv	r2, r1, r0
   17f98:	mls	r4, r2, r0, r1
   17f9c:	ldr	r1, [r8, #8]
   17fa0:	ldr	r7, [r1, r4, lsl #2]
   17fa4:	cmp	r7, #0
   17fa8:	beq	18040 <mycore_utils_mhash_add_with_choice@@Base+0x10c>
   17fac:	mov	r4, #0
   17fb0:	b	17fbc <mycore_utils_mhash_add_with_choice@@Base+0x88>
   17fb4:	add	r4, r4, #1
   17fb8:	mov	r7, r0
   17fbc:	ldr	r0, [r7, #4]
   17fc0:	cmp	r0, r5
   17fc4:	bne	17fe4 <mycore_utils_mhash_add_with_choice@@Base+0xb0>
   17fc8:	ldr	r0, [r7]
   17fcc:	mov	r1, r6
   17fd0:	mov	r2, r5
   17fd4:	bl	11bfc <strncmp@plt>
   17fd8:	cmp	r0, #0
   17fdc:	moveq	r0, r7
   17fe0:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   17fe4:	ldr	r0, [r7, #12]
   17fe8:	cmp	r0, #0
   17fec:	bne	17fb4 <mycore_utils_mhash_add_with_choice@@Base+0x80>
   17ff0:	ldm	r8, {r0, r1}
   17ff4:	mov	r2, #16
   17ff8:	bl	1174c <mchar_async_malloc@plt>
   17ffc:	mov	r9, r0
   18000:	ldm	r8, {r0, r1}
   18004:	add	r2, r5, #1
   18008:	bl	1174c <mchar_async_malloc@plt>
   1800c:	cmp	r0, #0
   18010:	str	r0, [r9]
   18014:	beq	180a4 <mycore_utils_mhash_add_with_choice@@Base+0x170>
   18018:	mov	r1, r6
   1801c:	mov	r2, r5
   18020:	bl	11050 <memcpy@plt>
   18024:	ldr	r0, [r9]
   18028:	mov	r1, #0
   1802c:	strb	r1, [r0, r5]
   18030:	str	r5, [r9, #4]
   18034:	str	r1, [r9, #8]
   18038:	str	r1, [r9, #12]
   1803c:	b	180b4 <mycore_utils_mhash_add_with_choice@@Base+0x180>
   18040:	ldr	r1, [r8, #16]
   18044:	sub	r0, r0, r0, lsr #2
   18048:	cmp	r1, r0
   1804c:	movcs	r0, r8
   18050:	blcs	11830 <mycore_utils_mhash_rebuld@plt>
   18054:	ldm	r8, {r0, r1}
   18058:	mov	r2, #16
   1805c:	bl	1174c <mchar_async_malloc@plt>
   18060:	mov	r7, r0
   18064:	ldm	r8, {r0, r1}
   18068:	add	r2, r5, #1
   1806c:	bl	1174c <mchar_async_malloc@plt>
   18070:	cmp	r0, #0
   18074:	str	r0, [r7]
   18078:	beq	180d0 <mycore_utils_mhash_add_with_choice@@Base+0x19c>
   1807c:	mov	r1, r6
   18080:	mov	r2, r5
   18084:	bl	11050 <memcpy@plt>
   18088:	ldr	r0, [r7]
   1808c:	mov	r1, #0
   18090:	strb	r1, [r0, r5]
   18094:	str	r5, [r7, #4]
   18098:	str	r1, [r7, #8]
   1809c:	str	r1, [r7, #12]
   180a0:	b	180e0 <mycore_utils_mhash_add_with_choice@@Base+0x1ac>
   180a4:	ldm	r8, {r0, r1}
   180a8:	mov	r2, r9
   180ac:	bl	115e4 <mchar_async_free@plt>
   180b0:	mov	r9, #0
   180b4:	str	r9, [r7, #12]
   180b8:	ldr	r0, [r8, #20]
   180bc:	cmp	r4, r0
   180c0:	movhi	r0, r8
   180c4:	blhi	11830 <mycore_utils_mhash_rebuld@plt>
   180c8:	mov	r0, r9
   180cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   180d0:	ldm	r8, {r0, r1}
   180d4:	mov	r2, r7
   180d8:	bl	115e4 <mchar_async_free@plt>
   180dc:	mov	r7, #0
   180e0:	ldr	r0, [r8, #8]
   180e4:	str	r7, [r0, r4, lsl #2]
   180e8:	ldr	r0, [r8, #8]
   180ec:	ldr	r9, [r0, r4, lsl #2]
   180f0:	mov	r0, r9
   180f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000180f8 <mycore_utils_mhash_rebuld@@Base>:
   180f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   180fc:	add	fp, sp, #24
   18100:	ldr	r5, [r0, #12]
   18104:	ldr	r8, [r0, #8]
   18108:	mov	r4, r0
   1810c:	mov	r1, #4
   18110:	lsl	r0, r5, #1
   18114:	str	r0, [r4, #12]
   18118:	bl	11020 <mycore_calloc@plt>
   1811c:	cmp	r0, #0
   18120:	str	r0, [r4, #8]
   18124:	beq	181e4 <mycore_utils_mhash_rebuld@@Base+0xec>
   18128:	ldr	r0, [r4, #12]
   1812c:	cmp	r0, #0
   18130:	beq	181d4 <mycore_utils_mhash_rebuld@@Base+0xdc>
   18134:	mov	r1, #0
   18138:	ldr	r2, [r8, r1, lsl #2]
   1813c:	cmp	r2, #0
   18140:	bne	18154 <mycore_utils_mhash_rebuld@@Base+0x5c>
   18144:	b	181c8 <mycore_utils_mhash_rebuld@@Base+0xd0>
   18148:	ldr	r2, [r2, #12]
   1814c:	cmp	r2, #0
   18150:	beq	181c8 <mycore_utils_mhash_rebuld@@Base+0xd0>
   18154:	ldr	r3, [r2]
   18158:	cmp	r3, #0
   1815c:	ldrne	r5, [r2, #4]
   18160:	cmpne	r5, #0
   18164:	beq	18148 <mycore_utils_mhash_rebuld@@Base+0x50>
   18168:	mov	r6, #0
   1816c:	str	r6, [r2, #12]
   18170:	ldrb	r7, [r3], #1
   18174:	subs	r5, r5, #1
   18178:	add	r7, r6, r7
   1817c:	add	r7, r7, r7, lsl #10
   18180:	eor	r6, r7, r7, lsr #6
   18184:	bne	18170 <mycore_utils_mhash_rebuld@@Base+0x78>
   18188:	add	r3, r6, r6, lsl #3
   1818c:	ldr	r6, [r4, #8]
   18190:	eor	r3, r3, r3, lsr #11
   18194:	add	r3, r3, r3, lsl #15
   18198:	udiv	r7, r3, r0
   1819c:	mls	r3, r7, r0, r3
   181a0:	ldr	r3, [r6, r3, lsl #2]!
   181a4:	cmp	r3, #0
   181a8:	beq	181c0 <mycore_utils_mhash_rebuld@@Base+0xc8>
   181ac:	mov	r6, r3
   181b0:	ldr	r3, [r3, #12]
   181b4:	cmp	r3, #0
   181b8:	bne	181ac <mycore_utils_mhash_rebuld@@Base+0xb4>
   181bc:	add	r6, r6, #12
   181c0:	str	r2, [r6]
   181c4:	b	18148 <mycore_utils_mhash_rebuld@@Base+0x50>
   181c8:	add	r1, r1, #1
   181cc:	cmp	r1, r0
   181d0:	bcc	18138 <mycore_utils_mhash_rebuld@@Base+0x40>
   181d4:	mov	r0, r8
   181d8:	bl	11ab8 <mycore_free@plt>
   181dc:	ldr	r0, [r4, #8]
   181e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   181e4:	mov	r0, #0
   181e8:	str	r8, [r4, #8]
   181ec:	str	r5, [r4, #12]
   181f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000181f4 <mycore_utils_mhash_add@@Base>:
   181f4:	push	{r4, sl, fp, lr}
   181f8:	add	fp, sp, #8
   181fc:	mov	r4, r3
   18200:	bl	11aa0 <mycore_utils_mhash_add_with_choice@plt>
   18204:	cmp	r0, #0
   18208:	strne	r4, [r0, #8]
   1820c:	pop	{r4, sl, fp, pc}

00018210 <mycore_utils_mhash_search@@Base>:
   18210:	push	{r4, r5, r6, r7, fp, lr}
   18214:	add	fp, sp, #16
   18218:	cmp	r1, #0
   1821c:	mov	r6, #0
   18220:	movne	r4, r2
   18224:	cmpne	r2, #0
   18228:	bne	18234 <mycore_utils_mhash_search@@Base+0x24>
   1822c:	mov	r0, r6
   18230:	pop	{r4, r5, r6, r7, fp, pc}
   18234:	mov	r5, r1
   18238:	ldr	r1, [r0, #12]
   1823c:	mov	r2, #0
   18240:	mov	r3, #0
   18244:	ldrb	r7, [r5, r2]
   18248:	add	r2, r2, #1
   1824c:	cmp	r4, r2
   18250:	add	r3, r3, r7
   18254:	add	r3, r3, r3, lsl #10
   18258:	eor	r3, r3, r3, lsr #6
   1825c:	bne	18244 <mycore_utils_mhash_search@@Base+0x34>
   18260:	add	r2, r3, r3, lsl #3
   18264:	ldr	r0, [r0, #8]
   18268:	mov	r6, #0
   1826c:	eor	r2, r2, r2, lsr #11
   18270:	add	r2, r2, r2, lsl #15
   18274:	udiv	r3, r2, r1
   18278:	mls	r1, r3, r1, r2
   1827c:	ldr	r7, [r0, r1, lsl #2]
   18280:	cmp	r7, #0
   18284:	bne	18298 <mycore_utils_mhash_search@@Base+0x88>
   18288:	b	1822c <mycore_utils_mhash_search@@Base+0x1c>
   1828c:	ldr	r7, [r7, #12]
   18290:	cmp	r7, #0
   18294:	beq	1822c <mycore_utils_mhash_search@@Base+0x1c>
   18298:	ldr	r0, [r7, #4]
   1829c:	cmp	r0, r4
   182a0:	bne	1828c <mycore_utils_mhash_search@@Base+0x7c>
   182a4:	ldr	r0, [r7]
   182a8:	mov	r1, r5
   182ac:	mov	r2, r4
   182b0:	bl	11bfc <strncmp@plt>
   182b4:	cmp	r0, #0
   182b8:	bne	1828c <mycore_utils_mhash_search@@Base+0x7c>
   182bc:	mov	r6, r7
   182c0:	mov	r0, r6
   182c4:	pop	{r4, r5, r6, r7, fp, pc}

000182c8 <mycore_utils_mhash_entry_by_id@@Base>:
   182c8:	ldr	r3, [r0, #12]
   182cc:	mov	r2, r0
   182d0:	mov	r0, #0
   182d4:	cmp	r3, r1
   182d8:	ldrhi	r0, [r2, #8]
   182dc:	ldrhi	r0, [r0, r1, lsl #2]
   182e0:	bx	lr

000182e4 <mycore_utils_mhash_get_table_size@@Base>:
   182e4:	ldr	r0, [r0, #12]
   182e8:	bx	lr

000182ec <mycore_utils_mhash_rebuild_add_entry@@Base>:
   182ec:	cmp	r1, #0
   182f0:	mov	ip, #0
   182f4:	cmpne	r2, #0
   182f8:	bne	18304 <mycore_utils_mhash_rebuild_add_entry@@Base+0x18>
   182fc:	mov	r0, ip
   18300:	bx	lr
   18304:	push	{r4, sl, fp, lr}
   18308:	add	fp, sp, #8
   1830c:	mov	lr, #0
   18310:	str	lr, [r3, #12]
   18314:	ldr	ip, [r0, #12]
   18318:	ldrb	r4, [r1], #1
   1831c:	subs	r2, r2, #1
   18320:	add	r4, lr, r4
   18324:	add	r4, r4, r4, lsl #10
   18328:	eor	lr, r4, r4, lsr #6
   1832c:	bne	18318 <mycore_utils_mhash_rebuild_add_entry@@Base+0x2c>
   18330:	add	r1, lr, lr, lsl #3
   18334:	eor	r1, r1, r1, lsr #11
   18338:	add	r1, r1, r1, lsl #15
   1833c:	udiv	r2, r1, ip
   18340:	mls	r2, r2, ip, r1
   18344:	ldr	r1, [r0, #8]
   18348:	ldr	r0, [r1, r2, lsl #2]!
   1834c:	cmp	r0, #0
   18350:	pop	{r4, sl, fp, lr}
   18354:	beq	1836c <mycore_utils_mhash_rebuild_add_entry@@Base+0x80>
   18358:	mov	r1, r0
   1835c:	ldr	r0, [r0, #12]
   18360:	cmp	r0, #0
   18364:	bne	18358 <mycore_utils_mhash_rebuild_add_entry@@Base+0x6c>
   18368:	add	r1, r1, #12
   1836c:	mov	ip, r3
   18370:	str	r3, [r1]
   18374:	mov	r0, ip
   18378:	bx	lr

0001837c <myencoding_detect_by_trigram@@Base>:
   1837c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18380:	add	fp, sp, #28
   18384:	sub	sp, sp, #20
   18388:	mov	r7, #0
   1838c:	str	r3, [sp, #12]
   18390:	mov	r3, #0
   18394:	subs	sl, r2, #3
   18398:	str	r0, [sp]
   1839c:	str	r2, [sp, #4]
   183a0:	str	r7, [r0]
   183a4:	str	r3, [sp, #16]
   183a8:	str	r7, [r0, #4]
   183ac:	beq	18450 <myencoding_detect_by_trigram@@Base+0xd4>
   183b0:	ldr	r9, [fp, #8]
   183b4:	mov	r0, #0
   183b8:	mov	r8, r1
   183bc:	mov	r7, #0
   183c0:	str	r0, [sp, #8]
   183c4:	mov	r6, r8
   183c8:	ldrsb	r0, [r6, r7]!
   183cc:	cmn	r0, #1
   183d0:	bgt	18444 <myencoding_detect_by_trigram@@Base+0xc8>
   183d4:	cmp	r9, #0
   183d8:	beq	18444 <myencoding_detect_by_trigram@@Base+0xc8>
   183dc:	ldr	r4, [sp, #12]
   183e0:	mov	r5, #0
   183e4:	mov	r0, r4
   183e8:	mov	r1, r6
   183ec:	mov	r2, #3
   183f0:	bl	1114c <memcmp@plt>
   183f4:	cmp	r0, #0
   183f8:	beq	18410 <myencoding_detect_by_trigram@@Base+0x94>
   183fc:	add	r5, r5, #1
   18400:	add	r4, r4, #8
   18404:	cmp	r5, r9
   18408:	bcc	183e4 <myencoding_detect_by_trigram@@Base+0x68>
   1840c:	b	18444 <myencoding_detect_by_trigram@@Base+0xc8>
   18410:	ldr	r0, [r4, #4]
   18414:	ldr	r2, [sp, #8]
   18418:	ldr	r1, [sp, #16]
   1841c:	add	r2, r2, r0
   18420:	ldr	r0, [sp]
   18424:	add	r1, r1, #1
   18428:	str	r1, [sp, #16]
   1842c:	stm	r0, {r1, r2}
   18430:	ldr	r0, [fp, #12]
   18434:	str	r2, [sp, #8]
   18438:	cmp	r2, r0
   1843c:	ldr	r0, [sp, #4]
   18440:	movcs	r7, r0
   18444:	add	r7, r7, #1
   18448:	cmp	r7, sl
   1844c:	bcc	183c4 <myencoding_detect_by_trigram@@Base+0x48>
   18450:	sub	sp, fp, #28
   18454:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00018458 <myencoding_detect_russian_has_end@@Base>:
   18458:	ldr	r3, [r0, #4]
   1845c:	cmp	r3, r2
   18460:	movcs	r0, #1
   18464:	bxcs	lr
   18468:	ldr	r2, [r0]
   1846c:	mov	r0, #0
   18470:	cmp	r2, r1
   18474:	movwcs	r0, #1
   18478:	bx	lr

0001847c <myencoding_detect_unicode_has_end@@Base>:
   1847c:	ldmib	r0, {r2, ip}
   18480:	clz	r3, ip
   18484:	cmp	r2, #0
   18488:	mov	r0, r2
   1848c:	movwne	r0, #1
   18490:	lsr	r3, r3, #5
   18494:	cmpne	ip, #0
   18498:	orr	r0, r3, r0
   1849c:	bne	184a4 <myencoding_detect_unicode_has_end@@Base+0x28>
   184a0:	bx	lr
   184a4:	mov	r0, #100	; 0x64
   184a8:	mul	r0, ip, r0
   184ac:	udiv	r2, r0, r2
   184b0:	mov	r0, #0
   184b4:	cmp	r2, r1
   184b8:	movwcc	r0, #1
   184bc:	bx	lr

000184c0 <myencoding_detect_utf_8@@Base>:
   184c0:	push	{r4, r5, r6, sl, fp, lr}
   184c4:	add	fp, sp, #16
   184c8:	mov	r3, #0
   184cc:	cmp	r2, #0
   184d0:	str	r3, [r0]
   184d4:	str	r3, [r0, #4]
   184d8:	str	r3, [r0, #8]
   184dc:	beq	185d4 <myencoding_detect_utf_8@@Base+0x114>
   184e0:	mov	ip, #0
   184e4:	mov	lr, #0
   184e8:	mov	r4, #0
   184ec:	ldrb	r5, [r1, r4]
   184f0:	tst	r5, #128	; 0x80
   184f4:	bne	18510 <myencoding_detect_utf_8@@Base+0x50>
   184f8:	add	r3, r3, #1
   184fc:	str	r3, [r0]
   18500:	add	r4, r4, #1
   18504:	cmp	r4, r2
   18508:	bcc	184ec <myencoding_detect_utf_8@@Base+0x2c>
   1850c:	b	185d4 <myencoding_detect_utf_8@@Base+0x114>
   18510:	and	r6, r5, #224	; 0xe0
   18514:	cmp	r6, #192	; 0xc0
   18518:	bne	18530 <myencoding_detect_utf_8@@Base+0x70>
   1851c:	add	r5, r4, #2
   18520:	cmp	r5, r2
   18524:	bcs	185d4 <myencoding_detect_utf_8@@Base+0x114>
   18528:	add	r4, r1, r4
   1852c:	b	1855c <myencoding_detect_utf_8@@Base+0x9c>
   18530:	and	r6, r5, #240	; 0xf0
   18534:	cmp	r6, #224	; 0xe0
   18538:	bne	18584 <myencoding_detect_utf_8@@Base+0xc4>
   1853c:	add	r5, r4, #3
   18540:	cmp	r5, r2
   18544:	bcs	185d4 <myencoding_detect_utf_8@@Base+0x114>
   18548:	add	r4, r1, r4
   1854c:	ldrb	r6, [r4, #2]
   18550:	and	r6, r6, #192	; 0xc0
   18554:	cmp	r6, #128	; 0x80
   18558:	bne	185b0 <myencoding_detect_utf_8@@Base+0xf0>
   1855c:	ldrb	r4, [r4, #1]
   18560:	and	r4, r4, #192	; 0xc0
   18564:	cmp	r4, #128	; 0x80
   18568:	bne	185b0 <myencoding_detect_utf_8@@Base+0xf0>
   1856c:	add	ip, ip, #1
   18570:	mov	r4, r5
   18574:	str	ip, [r0, #4]
   18578:	cmp	r4, r2
   1857c:	bcc	184ec <myencoding_detect_utf_8@@Base+0x2c>
   18580:	b	185d4 <myencoding_detect_utf_8@@Base+0x114>
   18584:	and	r5, r5, #248	; 0xf8
   18588:	cmp	r5, #240	; 0xf0
   1858c:	bne	185c8 <myencoding_detect_utf_8@@Base+0x108>
   18590:	add	r5, r4, #4
   18594:	cmp	r5, r2
   18598:	popcs	{r4, r5, r6, sl, fp, pc}
   1859c:	add	r4, r1, r4
   185a0:	ldrb	r6, [r4, #3]
   185a4:	and	r6, r6, #192	; 0xc0
   185a8:	cmp	r6, #128	; 0x80
   185ac:	beq	1854c <myencoding_detect_utf_8@@Base+0x8c>
   185b0:	add	lr, lr, #1
   185b4:	mov	r4, r5
   185b8:	str	lr, [r0, #8]
   185bc:	cmp	r4, r2
   185c0:	bcc	184ec <myencoding_detect_utf_8@@Base+0x2c>
   185c4:	b	185d4 <myencoding_detect_utf_8@@Base+0x114>
   185c8:	add	lr, lr, #1
   185cc:	str	lr, [r0, #8]
   185d0:	b	18500 <myencoding_detect_utf_8@@Base+0x40>
   185d4:	pop	{r4, r5, r6, sl, fp, pc}

000185d8 <myencoding_detect_utf_16@@Base>:
   185d8:	push	{r4, sl, fp, lr}
   185dc:	add	fp, sp, #8
   185e0:	mov	lr, #0
   185e4:	cmp	r2, #0
   185e8:	str	lr, [r0]
   185ec:	str	lr, [r0, #4]
   185f0:	str	lr, [r0, #8]
   185f4:	popeq	{r4, sl, fp, pc}
   185f8:	mov	ip, #0
   185fc:	mov	r3, #0
   18600:	ldrb	r4, [r1, r3]
   18604:	cmp	r4, #0
   18608:	bne	18658 <myencoding_detect_utf_16@@Base+0x80>
   1860c:	tst	r3, #1
   18610:	bne	1863c <myencoding_detect_utf_16@@Base+0x64>
   18614:	add	r3, r3, #1
   18618:	ldrb	r4, [r1, r3]
   1861c:	sub	r4, r4, #32
   18620:	uxtb	r4, r4
   18624:	cmp	r4, #94	; 0x5e
   18628:	addls	lr, lr, #1
   1862c:	strls	lr, [r0, #8]
   18630:	cmp	r3, r2
   18634:	bcc	18600 <myencoding_detect_utf_16@@Base+0x28>
   18638:	b	18664 <myencoding_detect_utf_16@@Base+0x8c>
   1863c:	add	r4, r1, r3
   18640:	ldrb	r4, [r4, #-1]
   18644:	sub	r4, r4, #32
   18648:	uxtb	r4, r4
   1864c:	cmp	r4, #94	; 0x5e
   18650:	addls	ip, ip, #1
   18654:	strls	ip, [r0, #4]
   18658:	add	r3, r3, #1
   1865c:	cmp	r3, r2
   18660:	bcc	18600 <myencoding_detect_utf_16@@Base+0x28>
   18664:	pop	{r4, sl, fp, pc}

00018668 <myencoding_detect_bom@@Base>:
   18668:	mov	r3, r0
   1866c:	cmp	r1, #3
   18670:	bcc	186a0 <myencoding_detect_bom@@Base+0x38>
   18674:	ldrb	r1, [r3]
   18678:	cmp	r1, #239	; 0xef
   1867c:	bne	186b0 <myencoding_detect_bom@@Base+0x48>
   18680:	ldrb	r1, [r3, #1]
   18684:	mov	r0, #0
   18688:	cmp	r1, #187	; 0xbb
   1868c:	ldrbeq	r1, [r3, #2]
   18690:	cmpeq	r1, #191	; 0xbf
   18694:	bne	186cc <myencoding_detect_bom@@Base+0x64>
   18698:	mov	r0, #0
   1869c:	b	186e8 <myencoding_detect_bom@@Base+0x80>
   186a0:	mov	r0, #0
   186a4:	cmp	r1, #2
   186a8:	bne	186cc <myencoding_detect_bom@@Base+0x64>
   186ac:	ldrb	r1, [r3]
   186b0:	mov	r0, #0
   186b4:	cmp	r1, #255	; 0xff
   186b8:	beq	186d0 <myencoding_detect_bom@@Base+0x68>
   186bc:	cmp	r1, #254	; 0xfe
   186c0:	ldrbeq	r1, [r3, #1]
   186c4:	cmpeq	r1, #255	; 0xff
   186c8:	beq	186e4 <myencoding_detect_bom@@Base+0x7c>
   186cc:	bx	lr
   186d0:	ldrb	r1, [r3, #1]
   186d4:	cmp	r1, #254	; 0xfe
   186d8:	bxne	lr
   186dc:	mov	r0, #4
   186e0:	b	186e8 <myencoding_detect_bom@@Base+0x80>
   186e4:	mov	r0, #5
   186e8:	str	r0, [r2]
   186ec:	mov	r0, #1
   186f0:	bx	lr

000186f4 <myencoding_detect_and_cut_bom@@Base>:
   186f4:	push	{r4, r5, fp, lr}
   186f8:	add	fp, sp, #8
   186fc:	cmp	r1, #3
   18700:	bcc	1873c <myencoding_detect_and_cut_bom@@Base+0x48>
   18704:	ldrb	r4, [r0]
   18708:	cmp	r4, #239	; 0xef
   1870c:	bne	1874c <myencoding_detect_and_cut_bom@@Base+0x58>
   18710:	ldrb	r4, [r0, #1]
   18714:	mov	ip, #0
   18718:	cmp	r4, #187	; 0xbb
   1871c:	bne	187ac <myencoding_detect_and_cut_bom@@Base+0xb8>
   18720:	ldrb	r4, [r0, #2]
   18724:	mov	ip, #0
   18728:	cmp	r4, #191	; 0xbf
   1872c:	bne	187ac <myencoding_detect_and_cut_bom@@Base+0xb8>
   18730:	mvn	lr, #2
   18734:	mov	r4, #3
   18738:	b	18790 <myencoding_detect_and_cut_bom@@Base+0x9c>
   1873c:	mov	ip, #0
   18740:	cmp	r1, #2
   18744:	bne	187ac <myencoding_detect_and_cut_bom@@Base+0xb8>
   18748:	ldrb	r4, [r0]
   1874c:	mov	ip, #0
   18750:	cmp	r4, #255	; 0xff
   18754:	beq	18778 <myencoding_detect_and_cut_bom@@Base+0x84>
   18758:	cmp	r4, #254	; 0xfe
   1875c:	ldrbeq	r4, [r0, #1]
   18760:	cmpeq	r4, #255	; 0xff
   18764:	bne	187ac <myencoding_detect_and_cut_bom@@Base+0xb8>
   18768:	mvn	lr, #1
   1876c:	mov	r4, #2
   18770:	mov	ip, #5
   18774:	b	18790 <myencoding_detect_and_cut_bom@@Base+0x9c>
   18778:	ldrb	r4, [r0, #1]
   1877c:	cmp	r4, #254	; 0xfe
   18780:	bne	187ac <myencoding_detect_and_cut_bom@@Base+0xb8>
   18784:	mvn	lr, #1
   18788:	mov	r4, #2
   1878c:	mov	ip, #4
   18790:	ldr	r5, [fp, #8]
   18794:	add	r0, r0, r4
   18798:	str	ip, [r2]
   1879c:	mov	ip, #1
   187a0:	str	r0, [r3]
   187a4:	add	r0, lr, r1
   187a8:	str	r0, [r5]
   187ac:	mov	r0, ip
   187b0:	pop	{r4, r5, fp, pc}

000187b4 <myencoding_detect_unicode@@Base>:
   187b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   187b8:	add	fp, sp, #24
   187bc:	sub	sp, sp, #16
   187c0:	mov	r8, r2
   187c4:	mov	r2, r1
   187c8:	mov	r1, r0
   187cc:	mov	r0, #0
   187d0:	cmp	r2, #0
   187d4:	str	r0, [r8]
   187d8:	beq	18888 <myencoding_detect_unicode@@Base+0xd4>
   187dc:	mov	ip, #0
   187e0:	mov	r4, #0
   187e4:	mov	r5, #0
   187e8:	mov	r6, #0
   187ec:	ldrb	r7, [r1, r6]
   187f0:	cmp	r7, #0
   187f4:	bne	1884c <myencoding_detect_unicode@@Base+0x98>
   187f8:	tst	r6, #1
   187fc:	bne	1882c <myencoding_detect_unicode@@Base+0x78>
   18800:	add	r6, r6, #1
   18804:	add	r3, r4, #1
   18808:	ldrb	r7, [r1, r6]
   1880c:	sub	r7, r7, #32
   18810:	uxtb	r7, r7
   18814:	cmp	r7, #95	; 0x5f
   18818:	movcc	r4, r3
   1881c:	movcc	r0, r3
   18820:	cmp	r6, r2
   18824:	bcc	187ec <myencoding_detect_unicode@@Base+0x38>
   18828:	b	18858 <myencoding_detect_unicode@@Base+0xa4>
   1882c:	add	r3, r1, r6
   18830:	add	r7, r5, #1
   18834:	ldrb	r3, [r3, #-1]
   18838:	sub	r3, r3, #32
   1883c:	uxtb	r3, r3
   18840:	cmp	r3, #95	; 0x5f
   18844:	movcc	r5, r7
   18848:	movcc	ip, r7
   1884c:	add	r6, r6, #1
   18850:	cmp	r6, r2
   18854:	bcc	187ec <myencoding_detect_unicode@@Base+0x38>
   18858:	cmp	r0, #0
   1885c:	beq	18878 <myencoding_detect_unicode@@Base+0xc4>
   18860:	cmp	r0, #3
   18864:	bcc	18888 <myencoding_detect_unicode@@Base+0xd4>
   18868:	cmp	ip, #0
   1886c:	bne	18888 <myencoding_detect_unicode@@Base+0xd4>
   18870:	mov	r0, #5
   18874:	b	188dc <myencoding_detect_unicode@@Base+0x128>
   18878:	cmp	ip, #3
   1887c:	bcc	18888 <myencoding_detect_unicode@@Base+0xd4>
   18880:	mov	r0, #4
   18884:	b	188dc <myencoding_detect_unicode@@Base+0x128>
   18888:	add	r0, sp, #4
   1888c:	bl	11c68 <myencoding_detect_utf_8@plt>
   18890:	ldr	r1, [sp, #8]
   18894:	ldr	r0, [sp, #12]
   18898:	cmp	r1, #0
   1889c:	cmpne	r0, #0
   188a0:	bne	188c0 <myencoding_detect_unicode@@Base+0x10c>
   188a4:	cmp	r0, #0
   188a8:	beq	188d8 <myencoding_detect_unicode@@Base+0x124>
   188ac:	mov	r0, #0
   188b0:	cmp	r1, #0
   188b4:	bne	188d8 <myencoding_detect_unicode@@Base+0x124>
   188b8:	sub	sp, fp, #24
   188bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   188c0:	mov	r2, #100	; 0x64
   188c4:	mul	r0, r0, r2
   188c8:	udiv	r1, r0, r1
   188cc:	mov	r0, #0
   188d0:	cmp	r1, #10
   188d4:	bcs	188b8 <myencoding_detect_unicode@@Base+0x104>
   188d8:	mov	r0, #0
   188dc:	str	r0, [r8]
   188e0:	mov	r0, #1
   188e4:	sub	sp, fp, #24
   188e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000188ec <myencoding_detect_russian@@Base>:
   188ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   188f0:	add	fp, sp, #28
   188f4:	sub	sp, sp, #20
   188f8:	mov	r3, #0
   188fc:	mov	r4, r0
   18900:	mov	r0, #0
   18904:	str	r2, [sp, #4]
   18908:	subs	r8, r1, #3
   1890c:	mov	r9, #0
   18910:	str	r1, [sp, #12]
   18914:	str	r3, [r2]
   18918:	mov	r2, #0
   1891c:	str	r0, [sp, #16]
   18920:	beq	18a84 <myencoding_detect_russian@@Base+0x198>
   18924:	mov	r0, #0
   18928:	mov	r5, #0
   1892c:	mov	sl, #0
   18930:	str	r0, [sp, #16]
   18934:	mov	r7, r4
   18938:	ldrsb	r0, [r7, sl]!
   1893c:	cmn	r0, #1
   18940:	bgt	189a8 <myencoding_detect_russian@@Base+0xbc>
   18944:	ldr	r6, [pc, #1028]	; 18d50 <myencoding_detect_russian@@Base+0x464>
   18948:	mov	r9, #0
   1894c:	add	r6, pc, r6
   18950:	mov	r0, r6
   18954:	mov	r1, r7
   18958:	mov	r2, #3
   1895c:	bl	1114c <memcmp@plt>
   18960:	cmp	r0, #0
   18964:	beq	1897c <myencoding_detect_russian@@Base+0x90>
   18968:	add	r9, r9, #1
   1896c:	add	r6, r6, #8
   18970:	cmp	r9, #1000	; 0x3e8
   18974:	bcc	18950 <myencoding_detect_russian@@Base+0x64>
   18978:	b	189a8 <myencoding_detect_russian@@Base+0xbc>
   1897c:	ldr	r0, [r6, #4]
   18980:	ldr	r1, [sp, #16]
   18984:	add	r5, r5, #1
   18988:	add	r1, r0, r1
   1898c:	movw	r0, #34463	; 0x869f
   18990:	movt	r0, #1
   18994:	str	r1, [sp, #16]
   18998:	add	r0, r0, #1
   1899c:	cmp	r1, r0
   189a0:	ldr	r0, [sp, #12]
   189a4:	movcs	sl, r0
   189a8:	add	sl, sl, #1
   189ac:	cmp	sl, r8
   189b0:	bcc	18934 <myencoding_detect_russian@@Base+0x48>
   189b4:	ldr	r2, [sp, #16]
   189b8:	movw	r1, #34463	; 0x869f
   189bc:	mov	r0, #1
   189c0:	mov	r3, #32
   189c4:	movt	r1, #1
   189c8:	cmp	r2, r1
   189cc:	cmpls	r5, #49	; 0x31
   189d0:	bhi	18d40 <myencoding_detect_russian@@Base+0x454>
   189d4:	ldr	r0, [sp, #16]
   189d8:	mov	r9, #0
   189dc:	mov	r5, #0
   189e0:	cmp	r0, #0
   189e4:	ldrne	r1, [sp, #4]
   189e8:	movne	r0, #32
   189ec:	strne	r0, [r1]
   189f0:	movw	r0, #34463	; 0x869f
   189f4:	movt	r0, #1
   189f8:	add	r0, r0, #1
   189fc:	str	r0, [sp]
   18a00:	mov	r0, #0
   18a04:	str	r0, [sp, #8]
   18a08:	mov	r7, r4
   18a0c:	ldrsb	r0, [r7, r5]!
   18a10:	cmn	r0, #1
   18a14:	bgt	18a74 <myencoding_detect_russian@@Base+0x188>
   18a18:	ldr	r6, [pc, #820]	; 18d54 <myencoding_detect_russian@@Base+0x468>
   18a1c:	mov	sl, #0
   18a20:	add	r6, pc, r6
   18a24:	mov	r0, r6
   18a28:	mov	r1, r7
   18a2c:	mov	r2, #3
   18a30:	bl	1114c <memcmp@plt>
   18a34:	cmp	r0, #0
   18a38:	beq	18a50 <myencoding_detect_russian@@Base+0x164>
   18a3c:	add	sl, sl, #1
   18a40:	add	r6, r6, #8
   18a44:	cmp	sl, #1000	; 0x3e8
   18a48:	bcc	18a24 <myencoding_detect_russian@@Base+0x138>
   18a4c:	b	18a74 <myencoding_detect_russian@@Base+0x188>
   18a50:	ldr	r0, [r6, #4]
   18a54:	add	r9, r0, r9
   18a58:	ldr	r0, [sp]
   18a5c:	cmp	r9, r0
   18a60:	ldr	r0, [sp, #12]
   18a64:	movcs	r5, r0
   18a68:	ldr	r0, [sp, #8]
   18a6c:	add	r0, r0, #1
   18a70:	str	r0, [sp, #8]
   18a74:	add	r5, r5, #1
   18a78:	cmp	r5, r8
   18a7c:	bcc	18a08 <myencoding_detect_russian@@Base+0x11c>
   18a80:	ldr	r2, [sp, #8]
   18a84:	movw	r1, #34463	; 0x869f
   18a88:	mov	r0, #1
   18a8c:	mov	r3, #27
   18a90:	movt	r1, #1
   18a94:	cmp	r9, r1
   18a98:	cmpls	r2, #49	; 0x31
   18a9c:	bhi	18d40 <myencoding_detect_russian@@Base+0x454>
   18aa0:	ldr	r0, [sp, #16]
   18aa4:	mov	sl, #0
   18aa8:	cmp	r0, r9
   18aac:	ldrcc	r1, [sp, #4]
   18ab0:	movcc	r0, #27
   18ab4:	strcc	r9, [sp, #16]
   18ab8:	strcc	r0, [r1]
   18abc:	mov	r0, #0
   18ac0:	cmp	r8, #0
   18ac4:	beq	18b54 <myencoding_detect_russian@@Base+0x268>
   18ac8:	mov	r9, #0
   18acc:	str	r0, [sp, #8]
   18ad0:	mov	r6, r4
   18ad4:	ldrsb	r0, [r6, r9]!
   18ad8:	cmn	r0, #1
   18adc:	bgt	18b44 <myencoding_detect_russian@@Base+0x258>
   18ae0:	ldr	r7, [pc, #624]	; 18d58 <myencoding_detect_russian@@Base+0x46c>
   18ae4:	mov	r5, #0
   18ae8:	add	r7, pc, r7
   18aec:	mov	r0, r7
   18af0:	mov	r1, r6
   18af4:	mov	r2, #3
   18af8:	bl	1114c <memcmp@plt>
   18afc:	cmp	r0, #0
   18b00:	beq	18b18 <myencoding_detect_russian@@Base+0x22c>
   18b04:	add	r5, r5, #1
   18b08:	add	r7, r7, #8
   18b0c:	cmp	r5, #1000	; 0x3e8
   18b10:	bcc	18aec <myencoding_detect_russian@@Base+0x200>
   18b14:	b	18b44 <myencoding_detect_russian@@Base+0x258>
   18b18:	ldr	r0, [r7, #4]
   18b1c:	add	sl, r0, sl
   18b20:	movw	r0, #34463	; 0x869f
   18b24:	movt	r0, #1
   18b28:	add	r0, r0, #1
   18b2c:	cmp	sl, r0
   18b30:	ldr	r0, [sp, #12]
   18b34:	movcs	r9, r0
   18b38:	ldr	r0, [sp, #8]
   18b3c:	add	r0, r0, #1
   18b40:	str	r0, [sp, #8]
   18b44:	add	r9, r9, #1
   18b48:	cmp	r9, r8
   18b4c:	bcc	18ad0 <myencoding_detect_russian@@Base+0x1e4>
   18b50:	b	18b58 <myencoding_detect_russian@@Base+0x26c>
   18b54:	str	r0, [sp, #8]
   18b58:	movw	r1, #34463	; 0x869f
   18b5c:	mov	r3, #22
   18b60:	movt	r1, #1
   18b64:	cmp	sl, r1
   18b68:	bhi	18d3c <myencoding_detect_russian@@Base+0x450>
   18b6c:	ldr	r0, [sp, #8]
   18b70:	cmp	r0, #49	; 0x31
   18b74:	bhi	18d3c <myencoding_detect_russian@@Base+0x450>
   18b78:	ldr	r0, [sp, #16]
   18b7c:	cmp	r0, sl
   18b80:	ldrcc	r1, [sp, #4]
   18b84:	movcc	r0, #22
   18b88:	strcc	sl, [sp, #16]
   18b8c:	mov	sl, #0
   18b90:	strcc	r0, [r1]
   18b94:	mov	r0, #0
   18b98:	cmp	r8, #0
   18b9c:	beq	18c2c <myencoding_detect_russian@@Base+0x340>
   18ba0:	mov	r9, #0
   18ba4:	str	r0, [sp, #8]
   18ba8:	mov	r6, r4
   18bac:	ldrsb	r0, [r6, r9]!
   18bb0:	cmn	r0, #1
   18bb4:	bgt	18c1c <myencoding_detect_russian@@Base+0x330>
   18bb8:	ldr	r7, [pc, #412]	; 18d5c <myencoding_detect_russian@@Base+0x470>
   18bbc:	mov	r5, #0
   18bc0:	add	r7, pc, r7
   18bc4:	mov	r0, r7
   18bc8:	mov	r1, r6
   18bcc:	mov	r2, #3
   18bd0:	bl	1114c <memcmp@plt>
   18bd4:	cmp	r0, #0
   18bd8:	beq	18bf0 <myencoding_detect_russian@@Base+0x304>
   18bdc:	add	r5, r5, #1
   18be0:	add	r7, r7, #8
   18be4:	cmp	r5, #1000	; 0x3e8
   18be8:	bcc	18bc4 <myencoding_detect_russian@@Base+0x2d8>
   18bec:	b	18c1c <myencoding_detect_russian@@Base+0x330>
   18bf0:	ldr	r0, [r7, #4]
   18bf4:	add	sl, r0, sl
   18bf8:	movw	r0, #34463	; 0x869f
   18bfc:	movt	r0, #1
   18c00:	add	r0, r0, #1
   18c04:	cmp	sl, r0
   18c08:	ldr	r0, [sp, #12]
   18c0c:	movcs	r9, r0
   18c10:	ldr	r0, [sp, #8]
   18c14:	add	r0, r0, #1
   18c18:	str	r0, [sp, #8]
   18c1c:	add	r9, r9, #1
   18c20:	cmp	r9, r8
   18c24:	bcc	18ba8 <myencoding_detect_russian@@Base+0x2bc>
   18c28:	b	18c30 <myencoding_detect_russian@@Base+0x344>
   18c2c:	str	r0, [sp, #8]
   18c30:	movw	r1, #34463	; 0x869f
   18c34:	mov	r3, #41	; 0x29
   18c38:	movt	r1, #1
   18c3c:	cmp	sl, r1
   18c40:	bhi	18d3c <myencoding_detect_russian@@Base+0x450>
   18c44:	ldr	r0, [sp, #8]
   18c48:	cmp	r0, #49	; 0x31
   18c4c:	bhi	18d3c <myencoding_detect_russian@@Base+0x450>
   18c50:	ldr	r0, [sp, #16]
   18c54:	cmp	r0, sl
   18c58:	ldrcc	r1, [sp, #4]
   18c5c:	movcc	r0, #41	; 0x29
   18c60:	strcc	sl, [sp, #16]
   18c64:	mov	sl, #0
   18c68:	strcc	r0, [r1]
   18c6c:	mov	r0, #0
   18c70:	cmp	r8, #0
   18c74:	beq	18d04 <myencoding_detect_russian@@Base+0x418>
   18c78:	mov	r9, #0
   18c7c:	str	r0, [sp, #8]
   18c80:	mov	r6, r4
   18c84:	ldrsb	r0, [r6, r9]!
   18c88:	cmn	r0, #1
   18c8c:	bgt	18cf4 <myencoding_detect_russian@@Base+0x408>
   18c90:	ldr	r7, [pc, #200]	; 18d60 <myencoding_detect_russian@@Base+0x474>
   18c94:	mov	r5, #0
   18c98:	add	r7, pc, r7
   18c9c:	mov	r0, r7
   18ca0:	mov	r1, r6
   18ca4:	mov	r2, #3
   18ca8:	bl	1114c <memcmp@plt>
   18cac:	cmp	r0, #0
   18cb0:	beq	18cc8 <myencoding_detect_russian@@Base+0x3dc>
   18cb4:	add	r5, r5, #1
   18cb8:	add	r7, r7, #8
   18cbc:	cmp	r5, #1000	; 0x3e8
   18cc0:	bcc	18c9c <myencoding_detect_russian@@Base+0x3b0>
   18cc4:	b	18cf4 <myencoding_detect_russian@@Base+0x408>
   18cc8:	ldr	r0, [r7, #4]
   18ccc:	add	sl, r0, sl
   18cd0:	movw	r0, #34463	; 0x869f
   18cd4:	movt	r0, #1
   18cd8:	add	r0, r0, #1
   18cdc:	cmp	sl, r0
   18ce0:	ldr	r0, [sp, #12]
   18ce4:	movcs	r9, r0
   18ce8:	ldr	r0, [sp, #8]
   18cec:	add	r0, r0, #1
   18cf0:	str	r0, [sp, #8]
   18cf4:	add	r9, r9, #1
   18cf8:	cmp	r9, r8
   18cfc:	bcc	18c80 <myencoding_detect_russian@@Base+0x394>
   18d00:	b	18d08 <myencoding_detect_russian@@Base+0x41c>
   18d04:	str	r0, [sp, #8]
   18d08:	movw	r1, #34463	; 0x869f
   18d0c:	mov	r3, #12
   18d10:	movt	r1, #1
   18d14:	cmp	sl, r1
   18d18:	bhi	18d3c <myencoding_detect_russian@@Base+0x450>
   18d1c:	ldr	r0, [sp, #8]
   18d20:	cmp	r0, #49	; 0x31
   18d24:	bhi	18d3c <myencoding_detect_russian@@Base+0x450>
   18d28:	ldr	r1, [sp, #16]
   18d2c:	mov	r0, #0
   18d30:	cmp	r1, sl
   18d34:	bcc	18d40 <myencoding_detect_russian@@Base+0x454>
   18d38:	b	18d48 <myencoding_detect_russian@@Base+0x45c>
   18d3c:	mov	r0, #1
   18d40:	ldr	r1, [sp, #4]
   18d44:	str	r3, [r1]
   18d48:	sub	sp, fp, #28
   18d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d50:	andeq	fp, r1, r4, lsl #8
   18d54:	andeq	sp, r1, r0, lsr #5
   18d58:	andeq	pc, r1, r8, asr #2
   18d5c:	andeq	r0, r2, r0, ror #31
   18d60:	andeq	r2, r2, r8, ror lr

00018d64 <myencoding_detect@@Base>:
   18d64:	push	{r4, r5, r6, sl, fp, lr}
   18d68:	add	fp, sp, #16
   18d6c:	mov	r6, r0
   18d70:	mov	r0, #0
   18d74:	mov	r4, r2
   18d78:	mov	r5, r1
   18d7c:	str	r0, [r2]
   18d80:	mov	r0, r6
   18d84:	bl	10e04 <myencoding_detect_unicode@plt>
   18d88:	cmp	r0, #0
   18d8c:	movne	r0, #1
   18d90:	popne	{r4, r5, r6, sl, fp, pc}
   18d94:	mov	r0, r6
   18d98:	mov	r1, r5
   18d9c:	mov	r2, r4
   18da0:	pop	{r4, r5, r6, sl, fp, lr}
   18da4:	b	188ec <myencoding_detect_russian@@Base>

00018da8 <myencoding_name_entry_by_name@@Base>:
   18da8:	push	{r4, r5, r6, r7, fp, lr}
   18dac:	add	fp, sp, #16
   18db0:	mov	r4, r1
   18db4:	mov	r5, r0
   18db8:	ldrb	r1, [r0], r1
   18dbc:	ldrb	r0, [r0, #-1]
   18dc0:	ldr	r2, [pc, #168]	; 18e70 <myencoding_name_entry_by_name@@Base+0xc8>
   18dc4:	ldr	r7, [pc, #168]	; 18e74 <myencoding_name_entry_by_name@@Base+0xcc>
   18dc8:	add	r2, pc, r2
   18dcc:	add	r7, pc, r7
   18dd0:	ldrb	r1, [r2, r1]
   18dd4:	ldrb	r0, [r2, r0]
   18dd8:	mul	r1, r1, r4
   18ddc:	mul	r0, r1, r0
   18de0:	movw	r1, #11575	; 0x2d37
   18de4:	movt	r1, #14546	; 0x38d2
   18de8:	umull	r1, r2, r0, r1
   18dec:	sub	r1, r0, r2
   18df0:	add	r1, r2, r1, lsr #1
   18df4:	movw	r2, #419	; 0x1a3
   18df8:	lsr	r1, r1, #8
   18dfc:	mls	r0, r1, r2, r0
   18e00:	add	r1, r0, #1
   18e04:	rsb	r0, r1, r1, lsl #3
   18e08:	b	18e10 <myencoding_name_entry_by_name@@Base+0x68>
   18e0c:	rsb	r0, r1, r1, lsl #3
   18e10:	add	r0, r7, r0, lsl #2
   18e14:	ldr	r0, [r0, #8]
   18e18:	cmp	r0, #0
   18e1c:	beq	18e64 <myencoding_name_entry_by_name@@Base+0xbc>
   18e20:	rsb	r1, r1, r1, lsl #3
   18e24:	add	r6, r7, r1, lsl #2
   18e28:	ldr	r1, [r6, #12]
   18e2c:	cmp	r1, r4
   18e30:	bne	18e58 <myencoding_name_entry_by_name@@Base+0xb0>
   18e34:	mov	r1, r5
   18e38:	mov	r2, r4
   18e3c:	bl	112b4 <mycore_strncasecmp@plt>
   18e40:	cmp	r0, #0
   18e44:	beq	18e68 <myencoding_name_entry_by_name@@Base+0xc0>
   18e48:	ldr	r1, [r6, #20]
   18e4c:	cmp	r1, #0
   18e50:	bne	18e0c <myencoding_name_entry_by_name@@Base+0x64>
   18e54:	b	18e64 <myencoding_name_entry_by_name@@Base+0xbc>
   18e58:	bhi	18e64 <myencoding_name_entry_by_name@@Base+0xbc>
   18e5c:	ldr	r1, [r6, #20]
   18e60:	b	18e0c <myencoding_name_entry_by_name@@Base+0x64>
   18e64:	mov	r6, #0
   18e68:	mov	r0, r6
   18e6c:	pop	{r4, r5, r6, r7, fp, pc}
   18e70:			; <UNDEFINED> instruction: 0x00024cb8
   18e74:	andeq	r9, pc, r0, lsl lr	; <UNPREDICTABLE>

00018e78 <myencoding_by_name@@Base>:
   18e78:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18e7c:	add	fp, sp, #24
   18e80:	mov	r6, r1
   18e84:	mov	r7, r0
   18e88:	ldrb	r1, [r0], r1
   18e8c:	mov	r8, r2
   18e90:	mov	r9, #0
   18e94:	ldrb	r0, [r0, #-1]
   18e98:	ldr	r2, [pc, #196]	; 18f64 <myencoding_by_name@@Base+0xec>
   18e9c:	ldr	r4, [pc, #196]	; 18f68 <myencoding_by_name@@Base+0xf0>
   18ea0:	add	r2, pc, r2
   18ea4:	add	r4, pc, r4
   18ea8:	ldrb	r1, [r2, r1]
   18eac:	ldrb	r0, [r2, r0]
   18eb0:	mul	r1, r1, r6
   18eb4:	mul	r0, r1, r0
   18eb8:	movw	r1, #11575	; 0x2d37
   18ebc:	movt	r1, #14546	; 0x38d2
   18ec0:	umull	r1, r2, r0, r1
   18ec4:	sub	r1, r0, r2
   18ec8:	add	r1, r2, r1, lsr #1
   18ecc:	movw	r2, #419	; 0x1a3
   18ed0:	lsr	r1, r1, #8
   18ed4:	mls	r0, r1, r2, r0
   18ed8:	add	r1, r0, #1
   18edc:	rsb	r0, r1, r1, lsl #3
   18ee0:	add	r0, r4, r0, lsl #2
   18ee4:	ldr	r0, [r0, #8]
   18ee8:	cmp	r0, #0
   18eec:	bne	18f08 <myencoding_by_name@@Base+0x90>
   18ef0:	b	18f5c <myencoding_by_name@@Base+0xe4>
   18ef4:	rsb	r0, r1, r1, lsl #3
   18ef8:	add	r0, r4, r0, lsl #2
   18efc:	ldr	r0, [r0, #8]
   18f00:	cmp	r0, #0
   18f04:	beq	18f5c <myencoding_by_name@@Base+0xe4>
   18f08:	rsb	r1, r1, r1, lsl #3
   18f0c:	add	r5, r4, r1, lsl #2
   18f10:	ldr	r1, [r5, #12]
   18f14:	cmp	r1, r6
   18f18:	bne	18f40 <myencoding_by_name@@Base+0xc8>
   18f1c:	mov	r1, r7
   18f20:	mov	r2, r6
   18f24:	bl	112b4 <mycore_strncasecmp@plt>
   18f28:	cmp	r0, #0
   18f2c:	beq	18f4c <myencoding_by_name@@Base+0xd4>
   18f30:	ldr	r1, [r5, #20]
   18f34:	cmp	r1, #0
   18f38:	bne	18ef4 <myencoding_by_name@@Base+0x7c>
   18f3c:	b	18f5c <myencoding_by_name@@Base+0xe4>
   18f40:	bhi	18f5c <myencoding_by_name@@Base+0xe4>
   18f44:	ldr	r1, [r5, #20]
   18f48:	b	18ef4 <myencoding_by_name@@Base+0x7c>
   18f4c:	cmp	r8, #0
   18f50:	mov	r9, #1
   18f54:	ldrne	r0, [r5, #16]
   18f58:	strne	r0, [r8]
   18f5c:	mov	r0, r9
   18f60:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18f64:	andeq	r4, r2, r0, ror #23
   18f68:	andeq	r9, pc, r8, lsr sp	; <UNPREDICTABLE>

00018f6c <myencoding_name_by_id@@Base>:
   18f6c:	cmp	r0, #42	; 0x2a
   18f70:	bcc	18f88 <myencoding_name_by_id@@Base+0x1c>
   18f74:	mov	r0, #0
   18f78:	cmp	r1, #0
   18f7c:	strne	r0, [r1]
   18f80:	bxne	lr
   18f84:	bx	lr
   18f88:	cmp	r1, #0
   18f8c:	ldrne	r2, [pc, #28]	; 18fb0 <myencoding_name_by_id@@Base+0x44>
   18f90:	addne	r2, pc, r2
   18f94:	addne	r2, r2, r0, lsl #3
   18f98:	ldrne	r2, [r2, #4]
   18f9c:	strne	r2, [r1]
   18fa0:	ldr	r1, [pc, #12]	; 18fb4 <myencoding_name_by_id@@Base+0x48>
   18fa4:	add	r1, pc, r1
   18fa8:	ldr	r0, [r1, r0, lsl #3]
   18fac:	bx	lr
   18fb0:	andeq	sp, pc, r4, asr r2	; <UNPREDICTABLE>
   18fb4:	andeq	sp, pc, r0, asr #4

00018fb8 <myencoding_extracting_character_encoding_from_charset@@Base>:
   18fb8:	push	{fp, lr}
   18fbc:	mov	fp, sp
   18fc0:	sub	sp, sp, #8
   18fc4:	mov	r3, #0
   18fc8:	str	r3, [sp]
   18fcc:	mov	r3, #0
   18fd0:	bl	116a4 <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   18fd4:	mov	sp, fp
   18fd8:	pop	{fp, pc}

00018fdc <myencoding_extracting_character_encoding_from_charset_with_found@@Base>:
   18fdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18fe0:	add	fp, sp, #28
   18fe4:	sub	sp, sp, #12
   18fe8:	mov	r7, r1
   18fec:	ldr	r1, [fp, #8]
   18ff0:	mov	r4, r0
   18ff4:	mov	r0, #2
   18ff8:	cmp	r3, #0
   18ffc:	mov	r6, #0
   19000:	str	r2, [sp, #8]
   19004:	str	r0, [r2]
   19008:	movne	r0, #0
   1900c:	strne	r0, [r3]
   19010:	cmp	r1, #0
   19014:	movne	r0, #0
   19018:	strne	r0, [r1]
   1901c:	cmp	r7, #8
   19020:	bcc	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   19024:	str	r3, [sp, #4]
   19028:	movw	sl, #27
   1902c:	mov	r9, #0
   19030:	mov	r8, #7
   19034:	mov	r6, #1
   19038:	ldr	r5, [pc, #1508]	; 19624 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x648>
   1903c:	movt	sl, #128	; 0x80
   19040:	add	r5, pc, r5
   19044:	add	r1, r4, r9
   19048:	mov	r0, r5
   1904c:	bl	10e7c <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   19050:	cmp	r0, #0
   19054:	bne	19060 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x84>
   19058:	b	19090 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb4>
   1905c:	add	r8, r8, #1
   19060:	cmp	r8, r7
   19064:	bcs	19080 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xa4>
   19068:	ldrb	r0, [r4, r8]
   1906c:	sub	r0, r0, #9
   19070:	cmp	r0, #23
   19074:	bhi	19080 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xa4>
   19078:	tst	sl, r6, lsl r0
   1907c:	bne	1905c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x80>
   19080:	ldrb	r0, [r4, r8]
   19084:	cmp	r0, #61	; 0x3d
   19088:	beq	190b0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xd4>
   1908c:	mov	r9, r8
   19090:	add	r8, r9, #8
   19094:	add	r9, r9, #1
   19098:	cmp	r8, r7
   1909c:	bcc	19044 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x68>
   190a0:	mov	r6, #0
   190a4:	mov	r0, r6
   190a8:	sub	sp, fp, #28
   190ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   190b0:	ldr	ip, [fp, #8]
   190b4:	ldr	lr, [sp, #4]
   190b8:	add	r0, r8, #1
   190bc:	mov	r6, #0
   190c0:	cmp	r0, r7
   190c4:	bcs	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   190c8:	add	r1, r4, r8
   190cc:	mov	r0, #0
   190d0:	mov	r2, #1
   190d4:	add	r4, r1, r0
   190d8:	ldrb	r3, [r4, #1]
   190dc:	sub	r6, r3, #9
   190e0:	cmp	r6, #30
   190e4:	bhi	191a8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1cc>
   190e8:	tst	sl, r2, lsl r6
   190ec:	beq	19108 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x12c>
   190f0:	add	r0, r0, #1
   190f4:	add	r3, r8, r0
   190f8:	add	r3, r3, #1
   190fc:	cmp	r3, r7
   19100:	bcc	190d4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xf8>
   19104:	b	190a0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc4>
   19108:	cmp	r6, #25
   1910c:	beq	19160 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x184>
   19110:	cmp	r6, #30
   19114:	bne	191a8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1cc>
   19118:	add	r2, r8, r0
   1911c:	mov	r6, #0
   19120:	add	r3, r2, #2
   19124:	cmp	r3, r7
   19128:	bcs	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   1912c:	mov	r5, #0
   19130:	add	r3, r1, r5
   19134:	add	r3, r3, r0
   19138:	ldrb	r6, [r3, #2]
   1913c:	cmp	r6, #39	; 0x27
   19140:	beq	191fc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x220>
   19144:	add	r3, r2, r5
   19148:	add	r5, r5, #1
   1914c:	mov	r6, #0
   19150:	add	r3, r3, #3
   19154:	cmp	r3, r7
   19158:	bcc	19130 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x154>
   1915c:	b	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   19160:	add	r2, r8, r0
   19164:	mov	r6, #0
   19168:	add	r3, r2, #2
   1916c:	cmp	r3, r7
   19170:	bcs	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   19174:	mov	r5, #0
   19178:	add	r3, r1, r5
   1917c:	add	r3, r3, r0
   19180:	ldrb	r6, [r3, #2]
   19184:	cmp	r6, #34	; 0x22
   19188:	beq	192cc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2f0>
   1918c:	add	r3, r2, r5
   19190:	add	r5, r5, #1
   19194:	mov	r6, #0
   19198:	add	r3, r3, #3
   1919c:	cmp	r3, r7
   191a0:	bcc	19178 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x19c>
   191a4:	b	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   191a8:	add	r2, r8, r0
   191ac:	mov	r6, #0
   191b0:	add	r2, r2, #1
   191b4:	cmp	r2, r7
   191b8:	bcs	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   191bc:	mvn	r2, #8
   191c0:	mov	r5, #1
   191c4:	b	191d4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1f8>
   191c8:	add	r3, r1, r0
   191cc:	add	r0, r0, #1
   191d0:	ldrb	r3, [r3, #2]
   191d4:	uxtab	r4, r2, r3
   191d8:	cmp	r4, #23
   191dc:	bhi	1939c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x3c0>
   191e0:	tst	sl, r5, lsl r4
   191e4:	beq	1939c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x3c0>
   191e8:	add	r3, r8, r0
   191ec:	add	r3, r3, #2
   191f0:	cmp	r3, r7
   191f4:	bcc	191c8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1ec>
   191f8:	b	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   191fc:	cmp	lr, #0
   19200:	mov	r6, #0
   19204:	addne	r0, r4, #2
   19208:	strne	r0, [lr]
   1920c:	cmp	ip, #0
   19210:	strne	r5, [ip]
   19214:	ldrb	r0, [r3, #1]
   19218:	ldr	r1, [pc, #1048]	; 19638 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x65c>
   1921c:	ldrb	r2, [r4, #2]!
   19220:	ldr	r8, [pc, #1044]	; 1963c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x660>
   19224:	add	r1, pc, r1
   19228:	add	r8, pc, r8
   1922c:	ldrb	r0, [r1, r0]
   19230:	ldrb	r1, [r1, r2]
   19234:	mul	r1, r5, r1
   19238:	mul	r0, r1, r0
   1923c:	movw	r1, #11575	; 0x2d37
   19240:	movt	r1, #14546	; 0x38d2
   19244:	umull	r1, r2, r0, r1
   19248:	sub	r1, r0, r2
   1924c:	add	r1, r2, r1, lsr #1
   19250:	movw	r2, #419	; 0x1a3
   19254:	lsr	r1, r1, #8
   19258:	mls	r0, r1, r2, r0
   1925c:	add	r1, r0, #1
   19260:	rsb	r0, r1, r1, lsl #3
   19264:	add	r0, r8, r0, lsl #2
   19268:	ldr	r0, [r0, #8]
   1926c:	cmp	r0, #0
   19270:	beq	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   19274:	rsb	r1, r1, r1, lsl #3
   19278:	add	r7, r8, r1, lsl #2
   1927c:	ldr	r1, [r7, #12]
   19280:	cmp	r1, r5
   19284:	bne	192ac <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2d0>
   19288:	mov	r1, r4
   1928c:	mov	r2, r5
   19290:	bl	112b4 <mycore_strncasecmp@plt>
   19294:	cmp	r0, #0
   19298:	beq	193c8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x3ec>
   1929c:	ldr	r1, [r7, #20]
   192a0:	cmp	r1, #0
   192a4:	bne	192b4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2d8>
   192a8:	b	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   192ac:	bhi	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   192b0:	ldr	r1, [r7, #20]
   192b4:	rsb	r0, r1, r1, lsl #3
   192b8:	add	r0, r8, r0, lsl #2
   192bc:	ldr	r0, [r0, #8]
   192c0:	cmp	r0, #0
   192c4:	bne	19274 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x298>
   192c8:	b	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   192cc:	cmp	lr, #0
   192d0:	mov	r6, #0
   192d4:	addne	r0, r4, #2
   192d8:	strne	r0, [lr]
   192dc:	cmp	ip, #0
   192e0:	strne	r5, [ip]
   192e4:	ldrb	r0, [r3, #1]
   192e8:	ldr	r1, [pc, #832]	; 19630 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x654>
   192ec:	ldrb	r2, [r4, #2]!
   192f0:	ldr	r8, [pc, #828]	; 19634 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x658>
   192f4:	add	r1, pc, r1
   192f8:	add	r8, pc, r8
   192fc:	ldrb	r0, [r1, r0]
   19300:	ldrb	r1, [r1, r2]
   19304:	mul	r1, r5, r1
   19308:	mul	r0, r1, r0
   1930c:	movw	r1, #11575	; 0x2d37
   19310:	movt	r1, #14546	; 0x38d2
   19314:	umull	r1, r2, r0, r1
   19318:	sub	r1, r0, r2
   1931c:	add	r1, r2, r1, lsr #1
   19320:	movw	r2, #419	; 0x1a3
   19324:	lsr	r1, r1, #8
   19328:	mls	r0, r1, r2, r0
   1932c:	add	r1, r0, #1
   19330:	rsb	r0, r1, r1, lsl #3
   19334:	add	r0, r8, r0, lsl #2
   19338:	ldr	r0, [r0, #8]
   1933c:	cmp	r0, #0
   19340:	beq	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   19344:	rsb	r1, r1, r1, lsl #3
   19348:	add	r7, r8, r1, lsl #2
   1934c:	ldr	r1, [r7, #12]
   19350:	cmp	r1, r5
   19354:	bne	1937c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x3a0>
   19358:	mov	r1, r4
   1935c:	mov	r2, r5
   19360:	bl	112b4 <mycore_strncasecmp@plt>
   19364:	cmp	r0, #0
   19368:	beq	193c8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x3ec>
   1936c:	ldr	r1, [r7, #20]
   19370:	cmp	r1, #0
   19374:	bne	19384 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x3a8>
   19378:	b	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   1937c:	bhi	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   19380:	ldr	r1, [r7, #20]
   19384:	rsb	r0, r1, r1, lsl #3
   19388:	add	r0, r8, r0, lsl #2
   1938c:	ldr	r0, [r0, #8]
   19390:	cmp	r0, #0
   19394:	bne	19344 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x368>
   19398:	b	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   1939c:	add	sl, r8, r0
   193a0:	add	r1, r1, r0
   193a4:	add	r2, sl, #1
   193a8:	add	r4, r1, #1
   193ac:	cmp	r2, r7
   193b0:	bcs	194fc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x520>
   193b4:	uxtb	r3, r3
   193b8:	cmp	r3, #59	; 0x3b
   193bc:	bne	193e0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x404>
   193c0:	mov	r1, r2
   193c4:	b	19400 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x424>
   193c8:	ldr	r1, [sp, #8]
   193cc:	mov	r6, #1
   193d0:	cmp	r1, #0
   193d4:	ldrne	r0, [r7, #16]
   193d8:	strne	r0, [r1]
   193dc:	b	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   193e0:	add	r3, r1, #2
   193e4:	add	r1, r2, #1
   193e8:	cmp	r1, r7
   193ec:	bcs	194f8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x51c>
   193f0:	ldrb	r2, [r3], #1
   193f4:	cmp	r2, #59	; 0x3b
   193f8:	mov	r2, r1
   193fc:	bne	193e4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x408>
   19400:	mvn	r2, r8
   19404:	cmp	lr, #0
   19408:	add	r2, r1, r2
   1940c:	strne	r4, [lr]
   19410:	cmp	ip, #0
   19414:	sub	r9, r2, r0
   19418:	mvn	r2, #1
   1941c:	sub	r2, r2, r8
   19420:	strne	r9, [ip]
   19424:	add	r2, r1, r2
   19428:	sub	r0, r2, r0
   1942c:	ldrb	r0, [r4, r0]
   19430:	ldr	r2, [pc, #496]	; 19628 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x64c>
   19434:	ldrb	r3, [r4]
   19438:	ldr	r7, [pc, #492]	; 1962c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x650>
   1943c:	add	r2, pc, r2
   19440:	add	r7, pc, r7
   19444:	ldrb	r0, [r2, r0]
   19448:	ldrb	r2, [r2, r3]
   1944c:	mul	r2, r9, r2
   19450:	mul	r0, r2, r0
   19454:	movw	r2, #11575	; 0x2d37
   19458:	movt	r2, #14546	; 0x38d2
   1945c:	umull	r2, r3, r0, r2
   19460:	sub	r2, r0, r3
   19464:	add	r2, r3, r2, lsr #1
   19468:	movw	r3, #419	; 0x1a3
   1946c:	lsr	r2, r2, #8
   19470:	mls	r0, r2, r3, r0
   19474:	add	r2, r0, #1
   19478:	rsb	r0, r2, r2, lsl #3
   1947c:	add	r0, r7, r0, lsl #2
   19480:	ldr	r0, [r0, #8]
   19484:	cmp	r0, #0
   19488:	beq	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   1948c:	mov	r8, r4
   19490:	rsb	r5, r1, #0
   19494:	rsb	r1, r2, r2, lsl #3
   19498:	add	r4, r7, r1, lsl #2
   1949c:	ldr	r1, [r4, #12]
   194a0:	add	r2, r5, r1
   194a4:	add	r2, sl, r2
   194a8:	cmn	r2, #1
   194ac:	beq	194c0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x4e4>
   194b0:	cmp	r1, r9
   194b4:	bhi	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   194b8:	ldr	r2, [r4, #20]
   194bc:	b	194e0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x504>
   194c0:	mov	r1, r8
   194c4:	mov	r2, r9
   194c8:	bl	112b4 <mycore_strncasecmp@plt>
   194cc:	cmp	r0, #0
   194d0:	beq	1960c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x630>
   194d4:	ldr	r2, [r4, #20]
   194d8:	cmp	r2, #0
   194dc:	beq	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   194e0:	rsb	r0, r2, r2, lsl #3
   194e4:	add	r0, r7, r0, lsl #2
   194e8:	ldr	r0, [r0, #8]
   194ec:	cmp	r0, #0
   194f0:	bne	19494 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x4b8>
   194f4:	b	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   194f8:	add	r2, r2, #1
   194fc:	mvn	r1, r8
   19500:	cmp	lr, #0
   19504:	add	r1, r2, r1
   19508:	strne	r4, [lr]
   1950c:	cmp	ip, #0
   19510:	sub	r9, r1, r0
   19514:	mvn	r1, #1
   19518:	sub	r1, r1, r8
   1951c:	strne	r9, [ip]
   19520:	add	r1, r2, r1
   19524:	sub	r0, r1, r0
   19528:	ldrb	r0, [r4, r0]
   1952c:	ldr	r1, [pc, #268]	; 19640 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x664>
   19530:	ldrb	r3, [r4]
   19534:	ldr	r7, [pc, #264]	; 19644 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x668>
   19538:	add	r1, pc, r1
   1953c:	add	r7, pc, r7
   19540:	ldrb	r0, [r1, r0]
   19544:	ldrb	r1, [r1, r3]
   19548:	mul	r1, r9, r1
   1954c:	mul	r0, r1, r0
   19550:	movw	r1, #11575	; 0x2d37
   19554:	movt	r1, #14546	; 0x38d2
   19558:	umull	r1, r3, r0, r1
   1955c:	sub	r1, r0, r3
   19560:	add	r1, r3, r1, lsr #1
   19564:	movw	r3, #419	; 0x1a3
   19568:	lsr	r1, r1, #8
   1956c:	mls	r0, r1, r3, r0
   19570:	add	r1, r0, #1
   19574:	rsb	r0, r1, r1, lsl #3
   19578:	add	r0, r7, r0, lsl #2
   1957c:	ldr	r0, [r0, #8]
   19580:	cmp	r0, #0
   19584:	beq	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   19588:	mov	r8, r4
   1958c:	rsb	r4, r2, #0
   19590:	rsb	r1, r1, r1, lsl #3
   19594:	add	r5, r7, r1, lsl #2
   19598:	ldr	r1, [r5, #12]
   1959c:	add	r2, r4, r1
   195a0:	add	r2, sl, r2
   195a4:	cmn	r2, #1
   195a8:	beq	195bc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x5e0>
   195ac:	cmp	r1, r9
   195b0:	bhi	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   195b4:	ldr	r1, [r5, #20]
   195b8:	b	195dc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x600>
   195bc:	mov	r1, r8
   195c0:	mov	r2, r9
   195c4:	bl	112b4 <mycore_strncasecmp@plt>
   195c8:	cmp	r0, #0
   195cc:	beq	195f4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x618>
   195d0:	ldr	r1, [r5, #20]
   195d4:	cmp	r1, #0
   195d8:	beq	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   195dc:	rsb	r0, r1, r1, lsl #3
   195e0:	add	r0, r7, r0, lsl #2
   195e4:	ldr	r0, [r0, #8]
   195e8:	cmp	r0, #0
   195ec:	bne	19590 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x5b4>
   195f0:	b	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   195f4:	ldr	r1, [sp, #8]
   195f8:	mov	r6, #1
   195fc:	cmp	r1, #0
   19600:	ldrne	r0, [r5, #16]
   19604:	strne	r0, [r1]
   19608:	b	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   1960c:	ldr	r1, [sp, #8]
   19610:	mov	r6, #1
   19614:	cmp	r1, #0
   19618:	ldrne	r0, [r4, #16]
   1961c:	strne	r0, [r1]
   19620:	b	190a4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc8>
   19624:	andeq	r4, r2, r0, asr #24
   19628:	andeq	r4, r2, r4, asr #12
   1962c:	muleq	pc, ip, r7	; <UNPREDICTABLE>
   19630:	andeq	r4, r2, ip, lsl #15
   19634:	andeq	r9, pc, r4, ror #17
   19638:	andeq	r4, r2, ip, asr r8
   1963c:			; <UNDEFINED> instruction: 0x000f99b4
   19640:	andeq	r4, r2, r8, asr #10
   19644:	andeq	r9, pc, r0, lsr #13

00019648 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base>:
   19648:	push	{r4, sl, fp, lr}
   1964c:	add	fp, sp, #8
   19650:	mov	ip, r0
   19654:	ldr	r0, [r3]
   19658:	ldr	lr, [r1]
   1965c:	sub	r0, lr, r0
   19660:	str	r0, [r3, #4]
   19664:	mov	r0, #0
   19668:	cmp	lr, r2
   1966c:	bcc	19680 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x38>
   19670:	b	19778 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x130>
   19674:	add	lr, lr, #1
   19678:	cmp	lr, r2
   1967c:	bcs	19778 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x130>
   19680:	ldrb	r3, [ip, lr]
   19684:	sub	r3, r3, #9
   19688:	cmp	r3, #52	; 0x34
   1968c:	bhi	19778 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x130>
   19690:	add	r4, pc, #4
   19694:	ldr	r3, [r4, r3, lsl #2]
   19698:	add	pc, r4, r3
   1969c:			; <UNDEFINED> instruction: 0xffffffd8
   196a0:			; <UNDEFINED> instruction: 0xffffffd8
   196a4:	ldrdeq	r0, [r0], -ip
   196a8:			; <UNDEFINED> instruction: 0xffffffd8
   196ac:			; <UNDEFINED> instruction: 0xffffffd8
   196b0:	ldrdeq	r0, [r0], -ip
   196b4:	ldrdeq	r0, [r0], -ip
   196b8:	ldrdeq	r0, [r0], -ip
   196bc:	ldrdeq	r0, [r0], -ip
   196c0:	ldrdeq	r0, [r0], -ip
   196c4:	ldrdeq	r0, [r0], -ip
   196c8:	ldrdeq	r0, [r0], -ip
   196cc:	ldrdeq	r0, [r0], -ip
   196d0:	ldrdeq	r0, [r0], -ip
   196d4:	ldrdeq	r0, [r0], -ip
   196d8:	ldrdeq	r0, [r0], -ip
   196dc:	ldrdeq	r0, [r0], -ip
   196e0:	ldrdeq	r0, [r0], -ip
   196e4:	ldrdeq	r0, [r0], -ip
   196e8:	ldrdeq	r0, [r0], -ip
   196ec:	ldrdeq	r0, [r0], -ip
   196f0:	ldrdeq	r0, [r0], -ip
   196f4:	ldrdeq	r0, [r0], -ip
   196f8:			; <UNDEFINED> instruction: 0xffffffd8
   196fc:	ldrdeq	r0, [r0], -ip
   19700:	ldrdeq	r0, [r0], -ip
   19704:	ldrdeq	r0, [r0], -ip
   19708:	ldrdeq	r0, [r0], -ip
   1970c:	ldrdeq	r0, [r0], -ip
   19710:	ldrdeq	r0, [r0], -ip
   19714:	ldrdeq	r0, [r0], -ip
   19718:	ldrdeq	r0, [r0], -ip
   1971c:	ldrdeq	r0, [r0], -ip
   19720:	ldrdeq	r0, [r0], -ip
   19724:	ldrdeq	r0, [r0], -ip
   19728:	ldrdeq	r0, [r0], -ip
   1972c:	ldrdeq	r0, [r0], -ip
   19730:	ldrdeq	r0, [r0], -ip
   19734:			; <UNDEFINED> instruction: 0xffffffd8
   19738:	ldrdeq	r0, [r0], -ip
   1973c:	ldrdeq	r0, [r0], -ip
   19740:	ldrdeq	r0, [r0], -ip
   19744:	ldrdeq	r0, [r0], -ip
   19748:	ldrdeq	r0, [r0], -ip
   1974c:	ldrdeq	r0, [r0], -ip
   19750:	ldrdeq	r0, [r0], -ip
   19754:	ldrdeq	r0, [r0], -ip
   19758:	ldrdeq	r0, [r0], -ip
   1975c:	ldrdeq	r0, [r0], -ip
   19760:	ldrdeq	r0, [r0], -ip
   19764:	ldrdeq	r0, [r0], -ip
   19768:	ldrdeq	r0, [r0], -ip
   1976c:	ldrdeq	r0, [r0], -r4
   19770:	add	lr, lr, #1
   19774:	mov	r0, #1
   19778:	str	lr, [r1]
   1977c:	pop	{r4, sl, fp, pc}

00019780 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base>:
   19780:	push	{r4, r5, fp, lr}
   19784:	add	fp, sp, #8
   19788:	ldr	lr, [fp, #8]
   1978c:	cmp	r1, r2
   19790:	bcs	198a8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x128>
   19794:	add	r4, r1, #2
   19798:	add	ip, r0, r4
   1979c:	ldrb	r1, [ip, #-2]
   197a0:	sub	r1, r1, #9
   197a4:	cmp	r1, #53	; 0x35
   197a8:	bhi	198b8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x138>
   197ac:	add	r5, pc, #4
   197b0:	ldr	r1, [r5, r1, lsl #2]
   197b4:	add	pc, r5, r1
   197b8:	ldrdeq	r0, [r0], -r8
   197bc:	ldrdeq	r0, [r0], -r8
   197c0:	andeq	r0, r0, r0, lsl #2
   197c4:	ldrdeq	r0, [r0], -r8
   197c8:	ldrdeq	r0, [r0], -r8
   197cc:	andeq	r0, r0, r0, lsl #2
   197d0:	andeq	r0, r0, r0, lsl #2
   197d4:	andeq	r0, r0, r0, lsl #2
   197d8:	andeq	r0, r0, r0, lsl #2
   197dc:	andeq	r0, r0, r0, lsl #2
   197e0:	andeq	r0, r0, r0, lsl #2
   197e4:	andeq	r0, r0, r0, lsl #2
   197e8:	andeq	r0, r0, r0, lsl #2
   197ec:	andeq	r0, r0, r0, lsl #2
   197f0:	andeq	r0, r0, r0, lsl #2
   197f4:	andeq	r0, r0, r0, lsl #2
   197f8:	andeq	r0, r0, r0, lsl #2
   197fc:	andeq	r0, r0, r0, lsl #2
   19800:	andeq	r0, r0, r0, lsl #2
   19804:	andeq	r0, r0, r0, lsl #2
   19808:	andeq	r0, r0, r0, lsl #2
   1980c:	andeq	r0, r0, r0, lsl #2
   19810:	andeq	r0, r0, r0, lsl #2
   19814:	ldrdeq	r0, [r0], -r8
   19818:	andeq	r0, r0, r0, lsl #2
   1981c:	andeq	r0, r0, ip, lsr #4
   19820:	andeq	r0, r0, r0, lsl #2
   19824:	andeq	r0, r0, r0, lsl #2
   19828:	andeq	r0, r0, r0, lsl #2
   1982c:	andeq	r0, r0, r0, lsl #2
   19830:	andeq	r0, r0, r4, ror #4
   19834:	andeq	r0, r0, r0, lsl #2
   19838:	andeq	r0, r0, r0, lsl #2
   1983c:	andeq	r0, r0, r0, lsl #2
   19840:	andeq	r0, r0, r0, lsl #2
   19844:	andeq	r0, r0, r0, lsl #2
   19848:	andeq	r0, r0, r0, lsl #2
   1984c:	andeq	r0, r0, r0, lsl #2
   19850:	andeq	r0, r0, r0, lsl #2
   19854:	andeq	r0, r0, r0, lsl #2
   19858:	andeq	r0, r0, r0, lsl #2
   1985c:	andeq	r0, r0, r0, lsl #2
   19860:	andeq	r0, r0, r0, lsl #2
   19864:	andeq	r0, r0, r0, lsl #2
   19868:	andeq	r0, r0, r0, lsl #2
   1986c:	andeq	r0, r0, r0, lsl #2
   19870:	andeq	r0, r0, r0, lsl #2
   19874:	andeq	r0, r0, r0, lsl #2
   19878:	andeq	r0, r0, r0, lsl #2
   1987c:	andeq	r0, r0, r0, lsl #2
   19880:	andeq	r0, r0, r0, lsl #2
   19884:	andeq	r0, r0, r0, lsl #2
   19888:	andeq	r0, r0, r0, lsl #2
   1988c:			; <UNDEFINED> instruction: 0x000002b8
   19890:	sub	r5, r4, #1
   19894:	add	r1, r4, #1
   19898:	cmp	r5, r2
   1989c:	mov	r4, r1
   198a0:	bcc	19798 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x18>
   198a4:	sub	r1, r1, #2
   198a8:	mov	r0, #1
   198ac:	strb	r0, [lr]
   198b0:	mov	r0, r1
   198b4:	pop	{r4, r5, fp, pc}
   198b8:	sub	lr, r4, #2
   198bc:	cmp	lr, r2
   198c0:	str	lr, [r3, #8]
   198c4:	bcs	19a5c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x2dc>
   198c8:	mov	r0, #0
   198cc:	add	r1, ip, r0
   198d0:	ldrb	r1, [r1, #-2]
   198d4:	sub	r1, r1, #9
   198d8:	cmp	r1, #53	; 0x35
   198dc:	bhi	199c4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x244>
   198e0:	add	r5, pc, #4
   198e4:	ldr	r1, [r5, r1, lsl #2]
   198e8:	add	pc, r5, r1
   198ec:	andeq	r0, r0, r8, lsr #3
   198f0:	andeq	r0, r0, r8, lsr #3
   198f4:	ldrdeq	r0, [r0], -r8
   198f8:	andeq	r0, r0, r8, lsr #3
   198fc:	andeq	r0, r0, r8, lsr #3
   19900:	ldrdeq	r0, [r0], -r8
   19904:	ldrdeq	r0, [r0], -r8
   19908:	ldrdeq	r0, [r0], -r8
   1990c:	ldrdeq	r0, [r0], -r8
   19910:	ldrdeq	r0, [r0], -r8
   19914:	ldrdeq	r0, [r0], -r8
   19918:	ldrdeq	r0, [r0], -r8
   1991c:	ldrdeq	r0, [r0], -r8
   19920:	ldrdeq	r0, [r0], -r8
   19924:	ldrdeq	r0, [r0], -r8
   19928:	ldrdeq	r0, [r0], -r8
   1992c:	ldrdeq	r0, [r0], -r8
   19930:	ldrdeq	r0, [r0], -r8
   19934:	ldrdeq	r0, [r0], -r8
   19938:	ldrdeq	r0, [r0], -r8
   1993c:	ldrdeq	r0, [r0], -r8
   19940:	ldrdeq	r0, [r0], -r8
   19944:	ldrdeq	r0, [r0], -r8
   19948:	andeq	r0, r0, r8, lsr #3
   1994c:	ldrdeq	r0, [r0], -r8
   19950:	ldrdeq	r0, [r0], -r8
   19954:	ldrdeq	r0, [r0], -r8
   19958:	ldrdeq	r0, [r0], -r8
   1995c:	ldrdeq	r0, [r0], -r8
   19960:	ldrdeq	r0, [r0], -r8
   19964:	ldrdeq	r0, [r0], -r8
   19968:	ldrdeq	r0, [r0], -r8
   1996c:	ldrdeq	r0, [r0], -r8
   19970:	ldrdeq	r0, [r0], -r8
   19974:	ldrdeq	r0, [r0], -r8
   19978:	ldrdeq	r0, [r0], -r8
   1997c:	ldrdeq	r0, [r0], -r8
   19980:	ldrdeq	r0, [r0], -r8
   19984:	ldrdeq	r0, [r0], -r8
   19988:	ldrdeq	r0, [r0], -r8
   1998c:	ldrdeq	r0, [r0], -r8
   19990:	ldrdeq	r0, [r0], -r8
   19994:	ldrdeq	r0, [r0], -r8
   19998:	ldrdeq	r0, [r0], -r8
   1999c:	ldrdeq	r0, [r0], -r8
   199a0:	ldrdeq	r0, [r0], -r8
   199a4:	ldrdeq	r0, [r0], -r8
   199a8:	ldrdeq	r0, [r0], -r8
   199ac:	ldrdeq	r0, [r0], -r8
   199b0:	ldrdeq	r0, [r0], -r8
   199b4:	ldrdeq	r0, [r0], -r8
   199b8:	ldrdeq	r0, [r0], -r8
   199bc:	ldrdeq	r0, [r0], -r8
   199c0:	andeq	r0, r0, r8, lsr #3
   199c4:	add	r1, r4, r0
   199c8:	add	r0, r0, #1
   199cc:	sub	r1, r1, #1
   199d0:	cmp	r1, r2
   199d4:	bcc	198cc <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x14c>
   199d8:	add	r0, r4, r0
   199dc:	sub	r1, r0, #2
   199e0:	b	19a60 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x2e0>
   199e4:	sub	lr, r4, #1
   199e8:	cmp	lr, r2
   199ec:	str	lr, [r3, #8]
   199f0:	bcs	19a5c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x2dc>
   199f4:	mov	r0, #0
   199f8:	add	r1, ip, r0
   199fc:	ldrb	r1, [r1, #-1]
   19a00:	cmp	r1, #34	; 0x22
   19a04:	beq	19a84 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x304>
   19a08:	add	r1, r4, r0
   19a0c:	add	r0, r0, #1
   19a10:	cmp	r1, r2
   19a14:	bcc	199f8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x278>
   19a18:	b	19a50 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x2d0>
   19a1c:	sub	lr, r4, #1
   19a20:	cmp	lr, r2
   19a24:	str	lr, [r3, #8]
   19a28:	bcs	19a5c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x2dc>
   19a2c:	mov	r0, #0
   19a30:	add	r1, ip, r0
   19a34:	ldrb	r1, [r1, #-1]
   19a38:	cmp	r1, #39	; 0x27
   19a3c:	beq	19a84 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x304>
   19a40:	add	r1, r4, r0
   19a44:	add	r0, r0, #1
   19a48:	cmp	r1, r2
   19a4c:	bcc	19a30 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x2b0>
   19a50:	add	r0, r4, r0
   19a54:	sub	r1, r0, #1
   19a58:	b	19a60 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x2e0>
   19a5c:	mov	r1, lr
   19a60:	sub	r0, r1, lr
   19a64:	str	r0, [r3, #12]
   19a68:	mov	r0, r1
   19a6c:	pop	{r4, r5, fp, pc}
   19a70:	mov	r0, #1
   19a74:	sub	r1, r4, #1
   19a78:	strb	r0, [lr]
   19a7c:	mov	r0, r1
   19a80:	pop	{r4, r5, fp, pc}
   19a84:	add	r1, r4, r0
   19a88:	str	r0, [r3, #12]
   19a8c:	mov	r0, r1
   19a90:	pop	{r4, r5, fp, pc}
   19a94:	str	r0, [r3, #12]
   19a98:	add	r0, r4, r0
   19a9c:	sub	r1, r0, #1
   19aa0:	mov	r0, r1
   19aa4:	pop	{r4, r5, fp, pc}

00019aa8 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base>:
   19aa8:	push	{r4, r5, r6, r7, fp, lr}
   19aac:	add	fp, sp, #16
   19ab0:	sub	sp, sp, #8
   19ab4:	mov	r6, r0
   19ab8:	vmov.i32	q8, #0	; 0x00000000
   19abc:	mov	r0, r3
   19ac0:	mov	r5, r2
   19ac4:	str	r1, [sp, #4]
   19ac8:	mov	r2, #0
   19acc:	vst1.32	{d16-d17}, [r0]!
   19ad0:	cmp	r1, r5
   19ad4:	str	r2, [r0]
   19ad8:	ldr	r7, [fp, #8]
   19adc:	bcs	19bac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x104>
   19ae0:	mov	r4, r3
   19ae4:	ldrb	r0, [r6, r1]
   19ae8:	sub	r2, r0, #9
   19aec:	cmp	r2, #38	; 0x26
   19af0:	bhi	19bc0 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x118>
   19af4:	add	r3, pc, #4
   19af8:	ldr	r2, [r3, r2, lsl #2]
   19afc:	add	pc, r3, r2
   19b00:	muleq	r0, ip, r0
   19b04:	muleq	r0, ip, r0
   19b08:	andeq	r0, r0, r0, asr #1
   19b0c:	muleq	r0, ip, r0
   19b10:	muleq	r0, ip, r0
   19b14:	andeq	r0, r0, r0, asr #1
   19b18:	andeq	r0, r0, r0, asr #1
   19b1c:	andeq	r0, r0, r0, asr #1
   19b20:	andeq	r0, r0, r0, asr #1
   19b24:	andeq	r0, r0, r0, asr #1
   19b28:	andeq	r0, r0, r0, asr #1
   19b2c:	andeq	r0, r0, r0, asr #1
   19b30:	andeq	r0, r0, r0, asr #1
   19b34:	andeq	r0, r0, r0, asr #1
   19b38:	andeq	r0, r0, r0, asr #1
   19b3c:	andeq	r0, r0, r0, asr #1
   19b40:	andeq	r0, r0, r0, asr #1
   19b44:	andeq	r0, r0, r0, asr #1
   19b48:	andeq	r0, r0, r0, asr #1
   19b4c:	andeq	r0, r0, r0, asr #1
   19b50:	andeq	r0, r0, r0, asr #1
   19b54:	andeq	r0, r0, r0, asr #1
   19b58:	andeq	r0, r0, r0, asr #1
   19b5c:	muleq	r0, ip, r0
   19b60:	andeq	r0, r0, r0, asr #1
   19b64:	andeq	r0, r0, r0, asr #1
   19b68:	andeq	r0, r0, r0, asr #1
   19b6c:	andeq	r0, r0, r0, asr #1
   19b70:	andeq	r0, r0, r0, asr #1
   19b74:	andeq	r0, r0, r0, asr #1
   19b78:	andeq	r0, r0, r0, asr #1
   19b7c:	andeq	r0, r0, r0, asr #1
   19b80:	andeq	r0, r0, r0, asr #1
   19b84:	andeq	r0, r0, r0, asr #1
   19b88:	andeq	r0, r0, r0, asr #1
   19b8c:	andeq	r0, r0, r0, asr #1
   19b90:	andeq	r0, r0, r0, asr #1
   19b94:	andeq	r0, r0, r0, asr #1
   19b98:	muleq	r0, ip, r0
   19b9c:	add	r1, r1, #1
   19ba0:	cmp	r1, r5
   19ba4:	bcc	19ae4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x3c>
   19ba8:	str	r1, [sp, #4]
   19bac:	mov	r0, #1
   19bb0:	strb	r0, [r7]
   19bb4:	mov	r0, r1
   19bb8:	sub	sp, fp, #16
   19bbc:	pop	{r4, r5, r6, r7, fp, pc}
   19bc0:	cmp	r0, #62	; 0x3e
   19bc4:	str	r1, [sp, #4]
   19bc8:	bne	19bdc <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x134>
   19bcc:	mov	r0, #1
   19bd0:	strb	r0, [r7]
   19bd4:	add	r1, r1, #1
   19bd8:	b	19bb4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x10c>
   19bdc:	cmp	r1, r5
   19be0:	str	r1, [r4]
   19be4:	bcs	19d14 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x26c>
   19be8:	mov	r0, #0
   19bec:	add	r2, r6, r0
   19bf0:	ldrb	r2, [r2, r1]
   19bf4:	sub	r2, r2, #9
   19bf8:	cmp	r2, #53	; 0x35
   19bfc:	bhi	19ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x23c>
   19c00:	add	r3, pc, #4
   19c04:	ldr	r2, [r3, r2, lsl #2]
   19c08:	add	pc, r3, r2
   19c0c:	strdeq	r0, [r0], -r4
   19c10:	strdeq	r0, [r0], -r4
   19c14:	ldrdeq	r0, [r0], -r8
   19c18:	strdeq	r0, [r0], -r4
   19c1c:	strdeq	r0, [r0], -r4
   19c20:	ldrdeq	r0, [r0], -r8
   19c24:	ldrdeq	r0, [r0], -r8
   19c28:	ldrdeq	r0, [r0], -r8
   19c2c:	ldrdeq	r0, [r0], -r8
   19c30:	ldrdeq	r0, [r0], -r8
   19c34:	ldrdeq	r0, [r0], -r8
   19c38:	ldrdeq	r0, [r0], -r8
   19c3c:	ldrdeq	r0, [r0], -r8
   19c40:	ldrdeq	r0, [r0], -r8
   19c44:	ldrdeq	r0, [r0], -r8
   19c48:	ldrdeq	r0, [r0], -r8
   19c4c:	ldrdeq	r0, [r0], -r8
   19c50:	ldrdeq	r0, [r0], -r8
   19c54:	ldrdeq	r0, [r0], -r8
   19c58:	ldrdeq	r0, [r0], -r8
   19c5c:	ldrdeq	r0, [r0], -r8
   19c60:	ldrdeq	r0, [r0], -r8
   19c64:	ldrdeq	r0, [r0], -r8
   19c68:	strdeq	r0, [r0], -r4
   19c6c:	ldrdeq	r0, [r0], -r8
   19c70:	ldrdeq	r0, [r0], -r8
   19c74:	ldrdeq	r0, [r0], -r8
   19c78:	ldrdeq	r0, [r0], -r8
   19c7c:	ldrdeq	r0, [r0], -r8
   19c80:	ldrdeq	r0, [r0], -r8
   19c84:	ldrdeq	r0, [r0], -r8
   19c88:	ldrdeq	r0, [r0], -r8
   19c8c:	ldrdeq	r0, [r0], -r8
   19c90:	ldrdeq	r0, [r0], -r8
   19c94:	ldrdeq	r0, [r0], -r8
   19c98:	ldrdeq	r0, [r0], -r8
   19c9c:	ldrdeq	r0, [r0], -r8
   19ca0:	ldrdeq	r0, [r0], -r8
   19ca4:	andeq	r0, r0, r0, asr r1
   19ca8:	ldrdeq	r0, [r0], -r8
   19cac:	ldrdeq	r0, [r0], -r8
   19cb0:	ldrdeq	r0, [r0], -r8
   19cb4:	ldrdeq	r0, [r0], -r8
   19cb8:	ldrdeq	r0, [r0], -r8
   19cbc:	ldrdeq	r0, [r0], -r8
   19cc0:	ldrdeq	r0, [r0], -r8
   19cc4:	ldrdeq	r0, [r0], -r8
   19cc8:	ldrdeq	r0, [r0], -r8
   19ccc:	ldrdeq	r0, [r0], -r8
   19cd0:	ldrdeq	r0, [r0], -r8
   19cd4:	ldrdeq	r0, [r0], -r8
   19cd8:	ldrdeq	r0, [r0], -r8
   19cdc:	andeq	r0, r0, r8, ror #2
   19ce0:	andeq	r0, r0, r0, asr r1
   19ce4:	add	r2, r1, r0
   19ce8:	add	r0, r0, #1
   19cec:	add	r2, r2, #1
   19cf0:	cmp	r2, r5
   19cf4:	bcc	19bec <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x144>
   19cf8:	add	r0, r1, r0
   19cfc:	b	19d10 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x268>
   19d00:	add	r2, r1, r0
   19d04:	str	r2, [sp, #4]
   19d08:	add	r0, r1, r0
   19d0c:	add	r0, r0, #1
   19d10:	str	r0, [sp, #4]
   19d14:	add	r1, sp, #4
   19d18:	mov	r0, r6
   19d1c:	mov	r2, r5
   19d20:	mov	r3, r4
   19d24:	bl	1144c <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>
   19d28:	cmp	r0, #0
   19d2c:	beq	19d4c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2a4>
   19d30:	ldr	r1, [sp, #4]
   19d34:	mov	r0, r6
   19d38:	mov	r2, r5
   19d3c:	mov	r3, r4
   19d40:	sub	sp, fp, #16
   19d44:	pop	{r4, r5, r6, r7, fp, lr}
   19d48:	b	19780 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base>
   19d4c:	mov	r0, #1
   19d50:	strb	r0, [r7]
   19d54:	ldr	r1, [sp, #4]
   19d58:	b	19bb4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x10c>
   19d5c:	add	r1, r1, r0
   19d60:	mov	r2, #1
   19d64:	str	r1, [sp, #4]
   19d68:	strb	r2, [r7]
   19d6c:	str	r0, [r4, #4]
   19d70:	b	19bd4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x12c>
   19d74:	add	r2, r1, r0
   19d78:	cmp	r0, #1
   19d7c:	str	r2, [sp, #4]
   19d80:	beq	19d08 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x260>
   19d84:	add	r1, r2, #1
   19d88:	str	r0, [r4, #4]
   19d8c:	str	r1, [sp, #4]
   19d90:	b	19d34 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>

00019d94 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base>:
   19d94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d98:	add	fp, sp, #28
   19d9c:	sub	sp, sp, #44	; 0x2c
   19da0:	mov	r8, r0
   19da4:	mov	sl, #0
   19da8:	mov	r0, #0
   19dac:	mov	r9, r3
   19db0:	mov	r5, r2
   19db4:	mov	r6, r1
   19db8:	add	r7, sp, #23
   19dbc:	mov	r4, #0
   19dc0:	strb	sl, [sp, #23]
   19dc4:	str	r0, [sp, #16]
   19dc8:	ldr	r1, [r6]
   19dcc:	cmp	r1, r5
   19dd0:	bcs	1a01c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x288>
   19dd4:	mov	r0, r8
   19dd8:	mov	r2, r5
   19ddc:	add	r3, sp, #24
   19de0:	str	r7, [sp]
   19de4:	bl	119f8 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   19de8:	str	r0, [r6]
   19dec:	ldr	r0, [sp, #28]
   19df0:	cmp	r0, #7
   19df4:	beq	19e50 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xbc>
   19df8:	cmp	r0, #10
   19dfc:	bne	19fec <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x258>
   19e00:	ldr	r0, [sp, #24]
   19e04:	add	r1, r8, r0
   19e08:	ldr	r0, [pc, #616]	; 1a078 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2e4>
   19e0c:	add	r0, pc, r0
   19e10:	bl	10e7c <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   19e14:	tst	r4, #1
   19e18:	bne	19fec <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x258>
   19e1c:	cmp	r0, #0
   19e20:	beq	19fec <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x258>
   19e24:	ldr	r0, [sp, #36]	; 0x24
   19e28:	orr	r4, r4, #1
   19e2c:	cmp	r0, #12
   19e30:	bne	19fec <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x258>
   19e34:	ldr	r0, [sp, #32]
   19e38:	add	r1, r8, r0
   19e3c:	ldr	r0, [pc, #568]	; 1a07c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2e8>
   19e40:	add	r0, pc, r0
   19e44:	bl	10e7c <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   19e48:	orr	sl, sl, r0
   19e4c:	b	19fec <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x258>
   19e50:	ldr	r0, [sp, #24]
   19e54:	add	r7, r8, r0
   19e58:	ldr	r0, [pc, #544]	; 1a080 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2ec>
   19e5c:	mov	r1, r7
   19e60:	add	r0, pc, r0
   19e64:	bl	10e7c <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   19e68:	cmp	r0, #0
   19e6c:	beq	19eb4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x120>
   19e70:	tst	r4, #2
   19e74:	bne	19fe8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x254>
   19e78:	ldr	r0, [sp, #32]
   19e7c:	ldr	r2, [fp, #12]
   19e80:	ldr	r1, [sp, #36]	; 0x24
   19e84:	ldr	r3, [fp, #8]
   19e88:	str	r2, [sp]
   19e8c:	add	r0, r8, r0
   19e90:	mov	r2, r9
   19e94:	bl	116a4 <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   19e98:	cmp	r0, #0
   19e9c:	ldr	r0, [sp, #16]
   19ea0:	orr	r4, r4, #2
   19ea4:	add	r7, sp, #23
   19ea8:	movwne	r0, #2
   19eac:	str	r0, [sp, #16]
   19eb0:	b	19fec <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x258>
   19eb4:	ldr	r0, [pc, #456]	; 1a084 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2f0>
   19eb8:	mov	r1, r7
   19ebc:	add	r0, pc, r0
   19ec0:	bl	10e7c <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   19ec4:	tst	r4, #4
   19ec8:	bne	19fe8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x254>
   19ecc:	ldr	r1, [fp, #12]
   19ed0:	cmp	r0, #0
   19ed4:	add	r7, sp, #23
   19ed8:	beq	19fec <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x258>
   19edc:	ldr	r2, [fp, #8]
   19ee0:	str	sl, [sp, #12]
   19ee4:	mov	r7, r8
   19ee8:	orr	r4, r4, #4
   19eec:	cmp	r2, #0
   19ef0:	ldrne	r0, [sp, #32]
   19ef4:	addne	r0, r8, r0
   19ef8:	strne	r0, [r2]
   19efc:	cmp	r1, #0
   19f00:	ldr	sl, [sp, #36]	; 0x24
   19f04:	strne	sl, [r1]
   19f08:	ldr	r0, [sp, #32]
   19f0c:	ldrb	r0, [r7, r0]!
   19f10:	add	r1, r7, sl
   19f14:	ldrb	r1, [r1, #-1]
   19f18:	ldr	r2, [pc, #360]	; 1a088 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2f4>
   19f1c:	add	r2, pc, r2
   19f20:	ldrb	r0, [r2, r0]
   19f24:	ldrb	r1, [r2, r1]
   19f28:	mul	r0, sl, r0
   19f2c:	mul	r0, r0, r1
   19f30:	movw	r1, #11575	; 0x2d37
   19f34:	movt	r1, #14546	; 0x38d2
   19f38:	umull	r1, r2, r0, r1
   19f3c:	sub	r1, r0, r2
   19f40:	add	r1, r2, r1, lsr #1
   19f44:	movw	r2, #419	; 0x1a3
   19f48:	lsr	r1, r1, #8
   19f4c:	mls	r0, r1, r2, r0
   19f50:	ldr	r2, [pc, #308]	; 1a08c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2f8>
   19f54:	add	r1, r0, #1
   19f58:	rsb	r0, r1, r1, lsl #3
   19f5c:	add	r2, pc, r2
   19f60:	add	r0, r2, r0, lsl #2
   19f64:	mov	r2, #1
   19f68:	ldr	r0, [r0, #8]
   19f6c:	str	r2, [sp, #16]
   19f70:	cmp	r0, #0
   19f74:	beq	19fe4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x250>
   19f78:	str	r9, [sp, #8]
   19f7c:	ldr	r2, [pc, #268]	; 1a090 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2fc>
   19f80:	add	r2, pc, r2
   19f84:	rsb	r1, r1, r1, lsl #3
   19f88:	add	r9, r2, r1, lsl #2
   19f8c:	ldr	r1, [r9, #12]
   19f90:	cmp	r1, sl
   19f94:	bne	19fbc <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x228>
   19f98:	mov	r1, r7
   19f9c:	mov	r2, sl
   19fa0:	bl	112b4 <mycore_strncasecmp@plt>
   19fa4:	cmp	r0, #0
   19fa8:	beq	19ffc <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x268>
   19fac:	ldr	r1, [r9, #20]
   19fb0:	cmp	r1, #0
   19fb4:	bne	19fc4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x230>
   19fb8:	b	19fe0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x24c>
   19fbc:	bhi	19fe0 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x24c>
   19fc0:	ldr	r1, [r9, #20]
   19fc4:	ldr	r2, [pc, #200]	; 1a094 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x300>
   19fc8:	rsb	r0, r1, r1, lsl #3
   19fcc:	add	r2, pc, r2
   19fd0:	add	r0, r2, r0, lsl #2
   19fd4:	ldr	r0, [r0, #8]
   19fd8:	cmp	r0, #0
   19fdc:	bne	19f84 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1f0>
   19fe0:	ldr	r9, [sp, #8]
   19fe4:	ldr	sl, [sp, #12]
   19fe8:	add	r7, sp, #23
   19fec:	ldrb	r0, [sp, #23]
   19ff0:	cmp	r0, #0
   19ff4:	beq	19dc8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x34>
   19ff8:	b	1a01c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x288>
   19ffc:	ldr	r1, [sp, #8]
   1a000:	ldr	sl, [sp, #12]
   1a004:	add	r7, sp, #23
   1a008:	cmp	r1, #0
   1a00c:	ldrne	r0, [r9, #16]
   1a010:	mov	r9, r1
   1a014:	strne	r0, [r1]
   1a018:	b	19fec <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x258>
   1a01c:	ldr	r2, [sp, #16]
   1a020:	mov	r0, #0
   1a024:	mov	r1, #2
   1a028:	cmp	r2, #0
   1a02c:	beq	1a054 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2c0>
   1a030:	cmp	r2, #2
   1a034:	tsteq	sl, #1
   1a038:	beq	1a054 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2c0>
   1a03c:	ldr	r2, [r9]
   1a040:	bic	r0, r2, #1
   1a044:	cmp	r0, #4
   1a048:	bne	1a060 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x2cc>
   1a04c:	mov	r0, #1
   1a050:	mov	r1, #0
   1a054:	str	r1, [r9]
   1a058:	sub	sp, fp, #28
   1a05c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a060:	mov	r1, #33	; 0x21
   1a064:	cmp	r2, #6
   1a068:	mov	r0, #1
   1a06c:	streq	r1, [r9]
   1a070:	sub	sp, fp, #28
   1a074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a078:	andeq	r3, r2, ip, ror lr
   1a07c:	andeq	r3, r2, r3, asr lr
   1a080:	andeq	r3, r2, r0, asr #28
   1a084:	andeq	r3, r2, r4, asr #27
   1a088:	andeq	r3, r2, r4, ror #22
   1a08c:	andeq	r8, pc, r0, lsl #25
   1a090:	andeq	r8, pc, ip, asr ip	; <UNPREDICTABLE>
   1a094:	andeq	r8, pc, r0, lsl ip	; <UNPREDICTABLE>

0001a098 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base>:
   1a098:	push	{r4, r5, r6, r7, fp, lr}
   1a09c:	add	fp, sp, #16
   1a0a0:	sub	sp, sp, #32
   1a0a4:	cmp	r1, r2
   1a0a8:	bcs	1a1fc <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x164>
   1a0ac:	mov	r4, r2
   1a0b0:	mov	r5, r0
   1a0b4:	ldrb	r0, [r5, r1]
   1a0b8:	sub	r0, r0, #9
   1a0bc:	cmp	r0, #53	; 0x35
   1a0c0:	bhi	1a1b8 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x120>
   1a0c4:	add	r2, pc, #4
   1a0c8:	ldr	r0, [r2, r0, lsl #2]
   1a0cc:	add	pc, r2, r0
   1a0d0:	ldrdeq	r0, [r0], -r8
   1a0d4:	ldrdeq	r0, [r0], -r8
   1a0d8:	andeq	r0, r0, r8, ror #1
   1a0dc:	ldrdeq	r0, [r0], -r8
   1a0e0:	ldrdeq	r0, [r0], -r8
   1a0e4:	andeq	r0, r0, r8, ror #1
   1a0e8:	andeq	r0, r0, r8, ror #1
   1a0ec:	andeq	r0, r0, r8, ror #1
   1a0f0:	andeq	r0, r0, r8, ror #1
   1a0f4:	andeq	r0, r0, r8, ror #1
   1a0f8:	andeq	r0, r0, r8, ror #1
   1a0fc:	andeq	r0, r0, r8, ror #1
   1a100:	andeq	r0, r0, r8, ror #1
   1a104:	andeq	r0, r0, r8, ror #1
   1a108:	andeq	r0, r0, r8, ror #1
   1a10c:	andeq	r0, r0, r8, ror #1
   1a110:	andeq	r0, r0, r8, ror #1
   1a114:	andeq	r0, r0, r8, ror #1
   1a118:	andeq	r0, r0, r8, ror #1
   1a11c:	andeq	r0, r0, r8, ror #1
   1a120:	andeq	r0, r0, r8, ror #1
   1a124:	andeq	r0, r0, r8, ror #1
   1a128:	andeq	r0, r0, r8, ror #1
   1a12c:	ldrdeq	r0, [r0], -r8
   1a130:	andeq	r0, r0, r8, ror #1
   1a134:	andeq	r0, r0, r8, ror #1
   1a138:	andeq	r0, r0, r8, ror #1
   1a13c:	andeq	r0, r0, r8, ror #1
   1a140:	andeq	r0, r0, r8, ror #1
   1a144:	andeq	r0, r0, r8, ror #1
   1a148:	andeq	r0, r0, r8, ror #1
   1a14c:	andeq	r0, r0, r8, ror #1
   1a150:	andeq	r0, r0, r8, ror #1
   1a154:	andeq	r0, r0, r8, ror #1
   1a158:	andeq	r0, r0, r8, ror #1
   1a15c:	andeq	r0, r0, r8, ror #1
   1a160:	andeq	r0, r0, r8, ror #1
   1a164:	andeq	r0, r0, r8, ror #1
   1a168:	andeq	r0, r0, r8, ror #1
   1a16c:	andeq	r0, r0, r8, ror #1
   1a170:	andeq	r0, r0, r8, ror #1
   1a174:	andeq	r0, r0, r8, ror #1
   1a178:	andeq	r0, r0, r8, ror #1
   1a17c:	andeq	r0, r0, r8, ror #1
   1a180:	andeq	r0, r0, r8, ror #1
   1a184:	andeq	r0, r0, r8, ror #1
   1a188:	andeq	r0, r0, r8, ror #1
   1a18c:	andeq	r0, r0, r8, ror #1
   1a190:	andeq	r0, r0, r8, ror #1
   1a194:	andeq	r0, r0, r8, ror #1
   1a198:	andeq	r0, r0, r8, ror #1
   1a19c:	andeq	r0, r0, r8, ror #1
   1a1a0:	andeq	r0, r0, r8, ror #1
   1a1a4:	andeq	r0, r0, r8, lsr #2
   1a1a8:	add	r1, r1, #1
   1a1ac:	cmp	r1, r4
   1a1b0:	bcc	1a0b4 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x1c>
   1a1b4:	b	1a1fc <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x164>
   1a1b8:	mov	r0, #0
   1a1bc:	add	r7, sp, #11
   1a1c0:	add	r6, sp, #12
   1a1c4:	strb	r0, [sp, #11]
   1a1c8:	cmp	r1, r4
   1a1cc:	bcs	1a1fc <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x164>
   1a1d0:	mov	r0, r5
   1a1d4:	mov	r2, r4
   1a1d8:	mov	r3, r6
   1a1dc:	str	r7, [sp]
   1a1e0:	bl	119f8 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   1a1e4:	mov	r1, r0
   1a1e8:	ldrb	r0, [sp, #11]
   1a1ec:	cmp	r0, #0
   1a1f0:	beq	1a1c8 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x130>
   1a1f4:	b	1a1fc <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x164>
   1a1f8:	add	r1, r1, #1
   1a1fc:	mov	r0, r1
   1a200:	sub	sp, fp, #16
   1a204:	pop	{r4, r5, r6, r7, fp, pc}

0001a208 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base>:
   1a208:	push	{r4, r5, r6, r7, fp, lr}
   1a20c:	add	fp, sp, #16
   1a210:	sub	sp, sp, #32
   1a214:	mov	r5, r0
   1a218:	ldrb	r0, [r0, r1]
   1a21c:	mov	r4, r2
   1a220:	cmp	r0, #33	; 0x21
   1a224:	beq	1a3a8 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1a0>
   1a228:	cmp	r0, #63	; 0x3f
   1a22c:	beq	1a388 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x180>
   1a230:	cmp	r0, #47	; 0x2f
   1a234:	bne	1a444 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x23c>
   1a238:	add	r2, r1, #1
   1a23c:	cmp	r2, r4
   1a240:	bcs	1a560 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x358>
   1a244:	ldrb	r3, [r5, r2]
   1a248:	ldr	r0, [pc, #948]	; 1a604 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x3fc>
   1a24c:	add	r0, pc, r0
   1a250:	ldrb	r0, [r0, r3]
   1a254:	cmp	r0, #1
   1a258:	bne	1a268 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x60>
   1a25c:	add	r2, r1, #2
   1a260:	mvn	r0, #8
   1a264:	b	1a28c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x84>
   1a268:	cmp	r2, r4
   1a26c:	bcs	1a560 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x358>
   1a270:	ldrb	r0, [r5, r2]
   1a274:	add	r2, r2, #1
   1a278:	cmp	r0, #62	; 0x3e
   1a27c:	beq	1a268 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x60>
   1a280:	b	1a560 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x358>
   1a284:	ldrb	r3, [r5, r2]
   1a288:	add	r2, r2, #1
   1a28c:	uxtab	r1, r0, r3
   1a290:	cmp	r1, #53	; 0x35
   1a294:	bhi	1a5b4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x3ac>
   1a298:	add	r3, pc, #4
   1a29c:	ldr	r1, [r3, r1, lsl #2]
   1a2a0:	add	pc, r3, r1
   1a2a4:	ldrdeq	r0, [r0], -r8
   1a2a8:	ldrdeq	r0, [r0], -r8
   1a2ac:	andeq	r0, r0, r0, lsl r3
   1a2b0:	ldrdeq	r0, [r0], -r8
   1a2b4:	ldrdeq	r0, [r0], -r8
   1a2b8:	andeq	r0, r0, r0, lsl r3
   1a2bc:	andeq	r0, r0, r0, lsl r3
   1a2c0:	andeq	r0, r0, r0, lsl r3
   1a2c4:	andeq	r0, r0, r0, lsl r3
   1a2c8:	andeq	r0, r0, r0, lsl r3
   1a2cc:	andeq	r0, r0, r0, lsl r3
   1a2d0:	andeq	r0, r0, r0, lsl r3
   1a2d4:	andeq	r0, r0, r0, lsl r3
   1a2d8:	andeq	r0, r0, r0, lsl r3
   1a2dc:	andeq	r0, r0, r0, lsl r3
   1a2e0:	andeq	r0, r0, r0, lsl r3
   1a2e4:	andeq	r0, r0, r0, lsl r3
   1a2e8:	andeq	r0, r0, r0, lsl r3
   1a2ec:	andeq	r0, r0, r0, lsl r3
   1a2f0:	andeq	r0, r0, r0, lsl r3
   1a2f4:	andeq	r0, r0, r0, lsl r3
   1a2f8:	andeq	r0, r0, r0, lsl r3
   1a2fc:	andeq	r0, r0, r0, lsl r3
   1a300:	ldrdeq	r0, [r0], -r8
   1a304:	andeq	r0, r0, r0, lsl r3
   1a308:	andeq	r0, r0, r0, lsl r3
   1a30c:	andeq	r0, r0, r0, lsl r3
   1a310:	andeq	r0, r0, r0, lsl r3
   1a314:	andeq	r0, r0, r0, lsl r3
   1a318:	andeq	r0, r0, r0, lsl r3
   1a31c:	andeq	r0, r0, r0, lsl r3
   1a320:	andeq	r0, r0, r0, lsl r3
   1a324:	andeq	r0, r0, r0, lsl r3
   1a328:	andeq	r0, r0, r0, lsl r3
   1a32c:	andeq	r0, r0, r0, lsl r3
   1a330:	andeq	r0, r0, r0, lsl r3
   1a334:	andeq	r0, r0, r0, lsl r3
   1a338:	andeq	r0, r0, r0, lsl r3
   1a33c:	andeq	r0, r0, r0, lsl r3
   1a340:	andeq	r0, r0, r0, lsl r3
   1a344:	andeq	r0, r0, r0, lsl r3
   1a348:	andeq	r0, r0, r0, lsl r3
   1a34c:	andeq	r0, r0, r0, lsl r3
   1a350:	andeq	r0, r0, r0, lsl r3
   1a354:	andeq	r0, r0, r0, lsl r3
   1a358:	andeq	r0, r0, r0, lsl r3
   1a35c:	andeq	r0, r0, r0, lsl r3
   1a360:	andeq	r0, r0, r0, lsl r3
   1a364:	andeq	r0, r0, r0, lsl r3
   1a368:	andeq	r0, r0, r0, lsl r3
   1a36c:	andeq	r0, r0, r0, lsl r3
   1a370:	andeq	r0, r0, r0, lsl r3
   1a374:	andeq	r0, r0, r0, lsl r3
   1a378:			; <UNDEFINED> instruction: 0x000002bc
   1a37c:	cmp	r2, r4
   1a380:	bcc	1a284 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x7c>
   1a384:	b	1a560 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x358>
   1a388:	add	r2, r1, #1
   1a38c:	cmp	r2, r4
   1a390:	bcs	1a560 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x358>
   1a394:	ldrb	r0, [r5, r2]
   1a398:	add	r2, r2, #1
   1a39c:	cmp	r0, #62	; 0x3e
   1a3a0:	beq	1a38c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x184>
   1a3a4:	b	1a560 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x358>
   1a3a8:	add	r0, r1, #3
   1a3ac:	add	r2, r1, #1
   1a3b0:	cmp	r0, r4
   1a3b4:	bcs	1a3e4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1dc>
   1a3b8:	ldrb	r0, [r5, r2]
   1a3bc:	cmp	r0, #45	; 0x2d
   1a3c0:	bne	1a3e4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1dc>
   1a3c4:	add	r0, r5, r1
   1a3c8:	ldrb	r0, [r0, #2]
   1a3cc:	cmp	r0, #45	; 0x2d
   1a3d0:	bne	1a3e4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1dc>
   1a3d4:	cmp	r2, r4
   1a3d8:	bcs	1a560 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x358>
   1a3dc:	mov	r0, #45	; 0x2d
   1a3e0:	b	1a40c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x204>
   1a3e4:	cmp	r2, r4
   1a3e8:	bcs	1a560 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x358>
   1a3ec:	ldrb	r0, [r5, r2]
   1a3f0:	add	r2, r2, #1
   1a3f4:	cmp	r0, #62	; 0x3e
   1a3f8:	beq	1a3e4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1dc>
   1a3fc:	b	1a560 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x358>
   1a400:	add	r0, r5, r1
   1a404:	add	r1, r1, #1
   1a408:	ldrb	r0, [r0, #2]
   1a40c:	uxtb	r0, r0
   1a410:	cmp	r0, #62	; 0x3e
   1a414:	beq	1a434 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x22c>
   1a418:	ldrb	r0, [r5, r1]
   1a41c:	cmp	r0, #45	; 0x2d
   1a420:	bne	1a434 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x22c>
   1a424:	add	r0, r5, r1
   1a428:	ldrb	r0, [r0, #-1]
   1a42c:	cmp	r0, #45	; 0x2d
   1a430:	beq	1a5fc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x3f4>
   1a434:	add	r2, r1, #2
   1a438:	cmp	r2, r4
   1a43c:	bcc	1a400 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x1f8>
   1a440:	b	1a560 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x358>
   1a444:	cmp	r1, r4
   1a448:	bcs	1a55c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x354>
   1a44c:	add	r2, r1, #1
   1a450:	mvn	r1, #8
   1a454:	b	1a460 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x258>
   1a458:	ldrb	r0, [r5, r2]
   1a45c:	add	r2, r2, #1
   1a460:	uxtab	r0, r1, r0
   1a464:	cmp	r0, #53	; 0x35
   1a468:	bhi	1a56c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x364>
   1a46c:	add	r3, pc, #4
   1a470:	ldr	r0, [r3, r0, lsl #2]
   1a474:	add	pc, r3, r0
   1a478:	ldrdeq	r0, [r0], -r8
   1a47c:	ldrdeq	r0, [r0], -r8
   1a480:	strdeq	r0, [r0], -r4
   1a484:	ldrdeq	r0, [r0], -r8
   1a488:	ldrdeq	r0, [r0], -r8
   1a48c:	strdeq	r0, [r0], -r4
   1a490:	strdeq	r0, [r0], -r4
   1a494:	strdeq	r0, [r0], -r4
   1a498:	strdeq	r0, [r0], -r4
   1a49c:	strdeq	r0, [r0], -r4
   1a4a0:	strdeq	r0, [r0], -r4
   1a4a4:	strdeq	r0, [r0], -r4
   1a4a8:	strdeq	r0, [r0], -r4
   1a4ac:	strdeq	r0, [r0], -r4
   1a4b0:	strdeq	r0, [r0], -r4
   1a4b4:	strdeq	r0, [r0], -r4
   1a4b8:	strdeq	r0, [r0], -r4
   1a4bc:	strdeq	r0, [r0], -r4
   1a4c0:	strdeq	r0, [r0], -r4
   1a4c4:	strdeq	r0, [r0], -r4
   1a4c8:	strdeq	r0, [r0], -r4
   1a4cc:	strdeq	r0, [r0], -r4
   1a4d0:	strdeq	r0, [r0], -r4
   1a4d4:	ldrdeq	r0, [r0], -r8
   1a4d8:	strdeq	r0, [r0], -r4
   1a4dc:	strdeq	r0, [r0], -r4
   1a4e0:	strdeq	r0, [r0], -r4
   1a4e4:	strdeq	r0, [r0], -r4
   1a4e8:	strdeq	r0, [r0], -r4
   1a4ec:	strdeq	r0, [r0], -r4
   1a4f0:	strdeq	r0, [r0], -r4
   1a4f4:	strdeq	r0, [r0], -r4
   1a4f8:	strdeq	r0, [r0], -r4
   1a4fc:	strdeq	r0, [r0], -r4
   1a500:	strdeq	r0, [r0], -r4
   1a504:	strdeq	r0, [r0], -r4
   1a508:	strdeq	r0, [r0], -r4
   1a50c:	strdeq	r0, [r0], -r4
   1a510:	strdeq	r0, [r0], -r4
   1a514:	strdeq	r0, [r0], -r4
   1a518:	strdeq	r0, [r0], -r4
   1a51c:	strdeq	r0, [r0], -r4
   1a520:	strdeq	r0, [r0], -r4
   1a524:	strdeq	r0, [r0], -r4
   1a528:	strdeq	r0, [r0], -r4
   1a52c:	strdeq	r0, [r0], -r4
   1a530:	strdeq	r0, [r0], -r4
   1a534:	strdeq	r0, [r0], -r4
   1a538:	strdeq	r0, [r0], -r4
   1a53c:	strdeq	r0, [r0], -r4
   1a540:	strdeq	r0, [r0], -r4
   1a544:	strdeq	r0, [r0], -r4
   1a548:	strdeq	r0, [r0], -r4
   1a54c:	andeq	r0, r0, r8, ror #1
   1a550:	cmp	r2, r4
   1a554:	bcc	1a458 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x250>
   1a558:	b	1a560 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x358>
   1a55c:	mov	r2, r1
   1a560:	mov	r0, r2
   1a564:	sub	sp, fp, #16
   1a568:	pop	{r4, r5, r6, r7, fp, pc}
   1a56c:	mov	r0, #0
   1a570:	sub	r2, r2, #1
   1a574:	add	r7, sp, #11
   1a578:	add	r6, sp, #12
   1a57c:	strb	r0, [sp, #11]
   1a580:	cmp	r2, r4
   1a584:	bcs	1a560 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x358>
   1a588:	mov	r1, r2
   1a58c:	mov	r0, r5
   1a590:	mov	r2, r4
   1a594:	mov	r3, r6
   1a598:	str	r7, [sp]
   1a59c:	bl	119f8 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   1a5a0:	mov	r2, r0
   1a5a4:	ldrb	r0, [sp, #11]
   1a5a8:	cmp	r0, #0
   1a5ac:	beq	1a580 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x378>
   1a5b0:	b	1a560 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x358>
   1a5b4:	mov	r0, #0
   1a5b8:	sub	r2, r2, #1
   1a5bc:	add	r7, sp, #11
   1a5c0:	add	r6, sp, #12
   1a5c4:	strb	r0, [sp, #11]
   1a5c8:	cmp	r2, r4
   1a5cc:	bcs	1a560 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x358>
   1a5d0:	mov	r1, r2
   1a5d4:	mov	r0, r5
   1a5d8:	mov	r2, r4
   1a5dc:	mov	r3, r6
   1a5e0:	str	r7, [sp]
   1a5e4:	bl	119f8 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   1a5e8:	mov	r2, r0
   1a5ec:	ldrb	r0, [sp, #11]
   1a5f0:	cmp	r0, #0
   1a5f4:	beq	1a5c8 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x3c0>
   1a5f8:	b	1a560 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x358>
   1a5fc:	add	r2, r1, #2
   1a600:	b	1a560 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x358>
   1a604:	andeq	r3, r2, r4, lsr r9

0001a608 <myencoding_prescan_stream_to_determine_encoding@@Base>:
   1a608:	mov	r2, #0
   1a60c:	mov	r3, #0
   1a610:	b	1a614 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base>

0001a614 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base>:
   1a614:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a618:	add	fp, sp, #28
   1a61c:	sub	sp, sp, #20
   1a620:	mov	r7, r0
   1a624:	mov	r0, #2
   1a628:	cmp	r2, #0
   1a62c:	mov	r4, r3
   1a630:	mov	r5, r2
   1a634:	mov	r6, r1
   1a638:	mov	r9, #0
   1a63c:	str	r0, [sp, #16]
   1a640:	movne	r0, #0
   1a644:	strne	r0, [r5]
   1a648:	cmp	r4, #0
   1a64c:	movne	r0, #0
   1a650:	strne	r0, [r4]
   1a654:	cmp	r6, #0
   1a658:	str	r9, [sp, #12]
   1a65c:	moveq	r0, #2
   1a660:	subeq	sp, fp, #28
   1a664:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a668:	ldrb	r0, [r7, r9]
   1a66c:	mov	sl, r9
   1a670:	cmp	r0, #60	; 0x3c
   1a674:	bne	1a7b0 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x19c>
   1a678:	add	r8, sl, #5
   1a67c:	cmp	r8, r6
   1a680:	bcs	1a7f4 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1e0>
   1a684:	add	r9, sl, #1
   1a688:	mov	r1, r7
   1a68c:	str	r9, [sp, #12]
   1a690:	ldrb	r0, [r1, r9]!
   1a694:	orr	r0, r0, #32
   1a698:	cmp	r0, #109	; 0x6d
   1a69c:	bne	1a7c4 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1b0>
   1a6a0:	ldr	r0, [pc, #344]	; 1a800 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1ec>
   1a6a4:	add	r0, pc, r0
   1a6a8:	bl	10e7c <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   1a6ac:	cmp	r0, #0
   1a6b0:	beq	1a7a4 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x190>
   1a6b4:	str	r8, [sp, #12]
   1a6b8:	ldrb	r0, [r7, r8]
   1a6bc:	sub	r0, r0, #9
   1a6c0:	cmp	r0, #38	; 0x26
   1a6c4:	bhi	1a7e8 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1d4>
   1a6c8:	add	r1, pc, #8
   1a6cc:	mov	r9, r8
   1a6d0:	ldr	r0, [r1, r0, lsl #2]
   1a6d4:	add	pc, r1, r0
   1a6d8:	muleq	r0, ip, r0
   1a6dc:	muleq	r0, ip, r0
   1a6e0:	andeq	r0, r0, ip, asr #1
   1a6e4:	muleq	r0, ip, r0
   1a6e8:	muleq	r0, ip, r0
   1a6ec:	andeq	r0, r0, ip, asr #1
   1a6f0:	andeq	r0, r0, ip, asr #1
   1a6f4:	andeq	r0, r0, ip, asr #1
   1a6f8:	andeq	r0, r0, ip, asr #1
   1a6fc:	andeq	r0, r0, ip, asr #1
   1a700:	andeq	r0, r0, ip, asr #1
   1a704:	andeq	r0, r0, ip, asr #1
   1a708:	andeq	r0, r0, ip, asr #1
   1a70c:	andeq	r0, r0, ip, asr #1
   1a710:	andeq	r0, r0, ip, asr #1
   1a714:	andeq	r0, r0, ip, asr #1
   1a718:	andeq	r0, r0, ip, asr #1
   1a71c:	andeq	r0, r0, ip, asr #1
   1a720:	andeq	r0, r0, ip, asr #1
   1a724:	andeq	r0, r0, ip, asr #1
   1a728:	andeq	r0, r0, ip, asr #1
   1a72c:	andeq	r0, r0, ip, asr #1
   1a730:	andeq	r0, r0, ip, asr #1
   1a734:	muleq	r0, ip, r0
   1a738:	andeq	r0, r0, ip, asr #1
   1a73c:	andeq	r0, r0, ip, asr #1
   1a740:	andeq	r0, r0, ip, asr #1
   1a744:	andeq	r0, r0, ip, asr #1
   1a748:	andeq	r0, r0, ip, asr #1
   1a74c:	andeq	r0, r0, ip, asr #1
   1a750:	andeq	r0, r0, ip, asr #1
   1a754:	andeq	r0, r0, ip, asr #1
   1a758:	andeq	r0, r0, ip, asr #1
   1a75c:	andeq	r0, r0, ip, asr #1
   1a760:	andeq	r0, r0, ip, asr #1
   1a764:	andeq	r0, r0, ip, asr #1
   1a768:	andeq	r0, r0, ip, asr #1
   1a76c:	andeq	r0, r0, ip, asr #1
   1a770:	muleq	r0, ip, r0
   1a774:	add	r0, sl, #6
   1a778:	add	r1, sp, #12
   1a77c:	mov	r2, r6
   1a780:	add	r3, sp, #16
   1a784:	str	r5, [sp]
   1a788:	str	r4, [sp, #4]
   1a78c:	str	r0, [sp, #12]
   1a790:	mov	r0, r7
   1a794:	bl	11380 <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>
   1a798:	cmp	r0, #0
   1a79c:	bne	1a7f4 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1e0>
   1a7a0:	ldr	r9, [sp, #12]
   1a7a4:	cmp	r9, r6
   1a7a8:	bcc	1a668 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x54>
   1a7ac:	b	1a7f4 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1e0>
   1a7b0:	add	r9, sl, #1
   1a7b4:	str	r9, [sp, #12]
   1a7b8:	cmp	r9, r6
   1a7bc:	bcc	1a668 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x54>
   1a7c0:	b	1a7f4 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1e0>
   1a7c4:	mov	r0, r7
   1a7c8:	mov	r1, r9
   1a7cc:	mov	r2, r6
   1a7d0:	bl	11314 <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>
   1a7d4:	mov	r9, r0
   1a7d8:	str	r0, [sp, #12]
   1a7dc:	cmp	r9, r6
   1a7e0:	bcc	1a668 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x54>
   1a7e4:	b	1a7f4 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1e0>
   1a7e8:	mov	r9, r8
   1a7ec:	cmp	r9, r6
   1a7f0:	bcc	1a668 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x54>
   1a7f4:	ldr	r0, [sp, #16]
   1a7f8:	sub	sp, fp, #28
   1a7fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a800:	andeq	r3, r2, r4, lsl #12
	...

0001a810 <myencoding_get_function_by_id@@Base>:
   1a810:	ldr	r1, [pc, #8]	; 1a820 <myencoding_get_function_by_id@@Base+0x10>
   1a814:	add	r1, pc, r1
   1a818:	ldr	r0, [r1, r0, lsl #2]
   1a81c:	bx	lr
   1a820:	andeq	fp, pc, r8, lsr #22
   1a824:	nop	{0}
   1a828:	nop	{0}
   1a82c:	nop	{0}

0001a830 <myencoding_decode_utf_8@@Base>:
   1a830:	ldr	r2, [r1, #20]
   1a834:	cmp	r2, #0
   1a838:	beq	1a8c8 <myencoding_decode_utf_8@@Base+0x98>
   1a83c:	ldr	r3, [r1]
   1a840:	cmp	r3, r0
   1a844:	bls	1a878 <myencoding_decode_utf_8@@Base+0x48>
   1a848:	ldr	r3, [r1, #4]
   1a84c:	cmp	r3, r0
   1a850:	bcs	1a878 <myencoding_decode_utf_8@@Base+0x48>
   1a854:	add	r0, pc, #324	; 0x144
   1a858:	mov	r2, #5
   1a85c:	vld1.64	{d16-d17}, [r0 :128]
   1a860:	mov	r0, #20
   1a864:	vst1.32	{d16-d17}, [r1], r0
   1a868:	mov	r0, #0
   1a86c:	str	r0, [r1]
   1a870:	mov	r0, r2
   1a874:	bx	lr
   1a878:	mov	r3, #191	; 0xbf
   1a87c:	sub	r0, r0, #128	; 0x80
   1a880:	str	r3, [r1, #4]
   1a884:	mov	r3, #128	; 0x80
   1a888:	str	r3, [r1]
   1a88c:	ldr	r3, [r1, #8]
   1a890:	ldr	ip, [r1, #12]
   1a894:	add	r3, r3, #1
   1a898:	subs	r2, r2, r3
   1a89c:	str	r3, [r1, #8]
   1a8a0:	add	r2, r2, r2, lsl #1
   1a8a4:	lsl	r2, r2, #1
   1a8a8:	add	r0, ip, r0, lsl r2
   1a8ac:	mov	r2, #2
   1a8b0:	moveq	r2, #0
   1a8b4:	str	r0, [r1, #12]
   1a8b8:	streq	r2, [r1, #8]
   1a8bc:	streq	r2, [r1, #20]
   1a8c0:	mov	r0, r2
   1a8c4:	bx	lr
   1a8c8:	sxtb	r2, r0
   1a8cc:	cmp	r2, #0
   1a8d0:	movge	r2, #0
   1a8d4:	strge	r0, [r1, #12]
   1a8d8:	movge	r0, r2
   1a8dc:	bxge	lr
   1a8e0:	add	r2, r0, #62	; 0x3e
   1a8e4:	uxtb	r2, r2
   1a8e8:	cmp	r2, #29
   1a8ec:	bhi	1a908 <myencoding_decode_utf_8@@Base+0xd8>
   1a8f0:	sub	r0, r0, #192	; 0xc0
   1a8f4:	mov	r2, #1
   1a8f8:	str	r0, [r1, #12]!
   1a8fc:	str	r2, [r1, #8]
   1a900:	mov	r2, #6
   1a904:	b	1a98c <myencoding_decode_utf_8@@Base+0x15c>
   1a908:	and	r2, r0, #240	; 0xf0
   1a90c:	cmp	r2, #224	; 0xe0
   1a910:	bne	1a934 <myencoding_decode_utf_8@@Base+0x104>
   1a914:	cmp	r0, #237	; 0xed
   1a918:	beq	1a960 <myencoding_decode_utf_8@@Base+0x130>
   1a91c:	cmp	r0, #224	; 0xe0
   1a920:	bne	1a968 <myencoding_decode_utf_8@@Base+0x138>
   1a924:	mov	r2, #160	; 0xa0
   1a928:	sub	r0, r0, #224	; 0xe0
   1a92c:	str	r2, [r1]
   1a930:	b	1a97c <myencoding_decode_utf_8@@Base+0x14c>
   1a934:	add	r2, r0, #16
   1a938:	uxtb	r3, r2
   1a93c:	mov	r2, #1
   1a940:	cmp	r3, #4
   1a944:	bhi	1a8c0 <myencoding_decode_utf_8@@Base+0x90>
   1a948:	cmp	r0, #244	; 0xf4
   1a94c:	beq	1a970 <myencoding_decode_utf_8@@Base+0x140>
   1a950:	cmp	r0, #240	; 0xf0
   1a954:	moveq	r2, #144	; 0x90
   1a958:	streq	r2, [r1]
   1a95c:	b	1a978 <myencoding_decode_utf_8@@Base+0x148>
   1a960:	mov	r2, #159	; 0x9f
   1a964:	str	r2, [r1, #4]
   1a968:	sub	r0, r0, #224	; 0xe0
   1a96c:	b	1a97c <myencoding_decode_utf_8@@Base+0x14c>
   1a970:	mov	r2, #143	; 0x8f
   1a974:	str	r2, [r1, #4]
   1a978:	sub	r0, r0, #240	; 0xf0
   1a97c:	str	r0, [r1, #12]!
   1a980:	mov	r2, #2
   1a984:	str	r2, [r1, #8]
   1a988:	mov	r2, #12
   1a98c:	lsl	r0, r0, r2
   1a990:	mov	r2, #2
   1a994:	str	r0, [r1]
   1a998:	mov	r0, r2
   1a99c:	bx	lr
   1a9a0:	andeq	r0, r0, r0, lsl #1
   1a9a4:	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
	...

0001a9b0 <myencoding_decode_ibm866@@Base>:
   1a9b0:	sxtb	r2, r0
   1a9b4:	cmn	r2, #1
   1a9b8:	bgt	1a9cc <myencoding_decode_ibm866@@Base+0x1c>
   1a9bc:	ldr	r2, [pc, #20]	; 1a9d8 <myencoding_decode_ibm866@@Base+0x28>
   1a9c0:	add	r2, pc, r2
   1a9c4:	add	r0, r2, r0, lsl #2
   1a9c8:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1a9cc:	str	r0, [r1, #12]
   1a9d0:	mov	r0, #0
   1a9d4:	bx	lr
   1a9d8:	andeq	r3, r2, r4, lsr ip

0001a9dc <myencoding_decode_iso_8859_2@@Base>:
   1a9dc:	sxtb	r2, r0
   1a9e0:	cmn	r2, #1
   1a9e4:	bgt	1a9f8 <myencoding_decode_iso_8859_2@@Base+0x1c>
   1a9e8:	ldr	r2, [pc, #20]	; 1aa04 <myencoding_decode_iso_8859_2@@Base+0x28>
   1a9ec:	add	r2, pc, r2
   1a9f0:	add	r0, r2, r0, lsl #2
   1a9f4:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1a9f8:	str	r0, [r1, #12]
   1a9fc:	mov	r0, #0
   1aa00:	bx	lr
   1aa04:	andeq	r3, r2, r8, lsl #28

0001aa08 <myencoding_decode_iso_8859_3@@Base>:
   1aa08:	sxtb	r2, r0
   1aa0c:	cmn	r2, #1
   1aa10:	bgt	1aa24 <myencoding_decode_iso_8859_3@@Base+0x1c>
   1aa14:	ldr	r2, [pc, #20]	; 1aa30 <myencoding_decode_iso_8859_3@@Base+0x28>
   1aa18:	add	r2, pc, r2
   1aa1c:	add	r0, r2, r0, lsl #2
   1aa20:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1aa24:	str	r0, [r1, #12]
   1aa28:	mov	r0, #0
   1aa2c:	bx	lr
   1aa30:	ldrdeq	r3, [r2], -ip

0001aa34 <myencoding_decode_iso_8859_4@@Base>:
   1aa34:	sxtb	r2, r0
   1aa38:	cmn	r2, #1
   1aa3c:	bgt	1aa50 <myencoding_decode_iso_8859_4@@Base+0x1c>
   1aa40:	ldr	r2, [pc, #20]	; 1aa5c <myencoding_decode_iso_8859_4@@Base+0x28>
   1aa44:	add	r2, pc, r2
   1aa48:	add	r0, r2, r0, lsl #2
   1aa4c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1aa50:	str	r0, [r1, #12]
   1aa54:	mov	r0, #0
   1aa58:	bx	lr
   1aa5c:			; <UNDEFINED> instruction: 0x000241b0

0001aa60 <myencoding_decode_iso_8859_5@@Base>:
   1aa60:	sxtb	r2, r0
   1aa64:	cmn	r2, #1
   1aa68:	bgt	1aa7c <myencoding_decode_iso_8859_5@@Base+0x1c>
   1aa6c:	ldr	r2, [pc, #20]	; 1aa88 <myencoding_decode_iso_8859_5@@Base+0x28>
   1aa70:	add	r2, pc, r2
   1aa74:	add	r0, r2, r0, lsl #2
   1aa78:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1aa7c:	str	r0, [r1, #12]
   1aa80:	mov	r0, #0
   1aa84:	bx	lr
   1aa88:	andeq	r4, r2, r4, lsl #7

0001aa8c <myencoding_decode_iso_8859_6@@Base>:
   1aa8c:	sxtb	r2, r0
   1aa90:	cmn	r2, #1
   1aa94:	bgt	1aaa8 <myencoding_decode_iso_8859_6@@Base+0x1c>
   1aa98:	ldr	r2, [pc, #20]	; 1aab4 <myencoding_decode_iso_8859_6@@Base+0x28>
   1aa9c:	add	r2, pc, r2
   1aaa0:	add	r0, r2, r0, lsl #2
   1aaa4:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1aaa8:	str	r0, [r1, #12]
   1aaac:	mov	r0, #0
   1aab0:	bx	lr
   1aab4:	strdeq	r2, [r5], -r8

0001aab8 <myencoding_decode_iso_8859_7@@Base>:
   1aab8:	sxtb	r2, r0
   1aabc:	cmn	r2, #1
   1aac0:	bgt	1aad4 <myencoding_decode_iso_8859_7@@Base+0x1c>
   1aac4:	ldr	r2, [pc, #20]	; 1aae0 <myencoding_decode_iso_8859_7@@Base+0x28>
   1aac8:	add	r2, pc, r2
   1aacc:	add	r0, r2, r0, lsl #2
   1aad0:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1aad4:	str	r0, [r1, #12]
   1aad8:	mov	r0, #0
   1aadc:	bx	lr
   1aae0:	andeq	r4, r2, ip, lsr #10

0001aae4 <myencoding_decode_iso_8859_8@@Base>:
   1aae4:	sxtb	r2, r0
   1aae8:	cmn	r2, #1
   1aaec:	bgt	1ab00 <myencoding_decode_iso_8859_8@@Base+0x1c>
   1aaf0:	ldr	r2, [pc, #20]	; 1ab0c <myencoding_decode_iso_8859_8@@Base+0x28>
   1aaf4:	add	r2, pc, r2
   1aaf8:	add	r0, r2, r0, lsl #2
   1aafc:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1ab00:	str	r0, [r1, #12]
   1ab04:	mov	r0, #0
   1ab08:	bx	lr
   1ab0c:	andeq	r4, r2, r0, lsl #14

0001ab10 <myencoding_decode_iso_8859_8_i@@Base>:
   1ab10:	sxtb	r2, r0
   1ab14:	cmn	r2, #1
   1ab18:	bgt	1ab2c <myencoding_decode_iso_8859_8_i@@Base+0x1c>
   1ab1c:	ldr	r2, [pc, #20]	; 1ab38 <myencoding_decode_iso_8859_8_i@@Base+0x28>
   1ab20:	add	r2, pc, r2
   1ab24:	add	r0, r2, r0, lsl #2
   1ab28:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1ab2c:	str	r0, [r1, #12]
   1ab30:	mov	r0, #0
   1ab34:	bx	lr
   1ab38:	ldrdeq	r4, [r2], -r4	; <UNPREDICTABLE>

0001ab3c <myencoding_decode_iso_8859_10@@Base>:
   1ab3c:	sxtb	r2, r0
   1ab40:	cmn	r2, #1
   1ab44:	bgt	1ab58 <myencoding_decode_iso_8859_10@@Base+0x1c>
   1ab48:	ldr	r2, [pc, #20]	; 1ab64 <myencoding_decode_iso_8859_10@@Base+0x28>
   1ab4c:	add	r2, pc, r2
   1ab50:	add	r0, r2, r0, lsl #2
   1ab54:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1ab58:	str	r0, [r1, #12]
   1ab5c:	mov	r0, #0
   1ab60:	bx	lr
   1ab64:	andeq	r4, r2, r8, lsr #17

0001ab68 <myencoding_decode_iso_8859_13@@Base>:
   1ab68:	sxtb	r2, r0
   1ab6c:	cmn	r2, #1
   1ab70:	bgt	1ab84 <myencoding_decode_iso_8859_13@@Base+0x1c>
   1ab74:	ldr	r2, [pc, #20]	; 1ab90 <myencoding_decode_iso_8859_13@@Base+0x28>
   1ab78:	add	r2, pc, r2
   1ab7c:	add	r0, r2, r0, lsl #2
   1ab80:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1ab84:	str	r0, [r1, #12]
   1ab88:	mov	r0, #0
   1ab8c:	bx	lr
   1ab90:	andeq	r4, r2, ip, ror sl

0001ab94 <myencoding_decode_iso_8859_14@@Base>:
   1ab94:	sxtb	r2, r0
   1ab98:	cmn	r2, #1
   1ab9c:	bgt	1abb0 <myencoding_decode_iso_8859_14@@Base+0x1c>
   1aba0:	ldr	r2, [pc, #20]	; 1abbc <myencoding_decode_iso_8859_14@@Base+0x28>
   1aba4:	add	r2, pc, r2
   1aba8:	add	r0, r2, r0, lsl #2
   1abac:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1abb0:	str	r0, [r1, #12]
   1abb4:	mov	r0, #0
   1abb8:	bx	lr
   1abbc:	andeq	r4, r2, r0, asr ip

0001abc0 <myencoding_decode_iso_8859_15@@Base>:
   1abc0:	sxtb	r2, r0
   1abc4:	cmn	r2, #1
   1abc8:	bgt	1abdc <myencoding_decode_iso_8859_15@@Base+0x1c>
   1abcc:	ldr	r2, [pc, #20]	; 1abe8 <myencoding_decode_iso_8859_15@@Base+0x28>
   1abd0:	add	r2, pc, r2
   1abd4:	add	r0, r2, r0, lsl #2
   1abd8:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1abdc:	str	r0, [r1, #12]
   1abe0:	mov	r0, #0
   1abe4:	bx	lr
   1abe8:	andeq	r4, r2, r4, lsr #28

0001abec <myencoding_decode_iso_8859_16@@Base>:
   1abec:	sxtb	r2, r0
   1abf0:	cmn	r2, #1
   1abf4:	bgt	1ac08 <myencoding_decode_iso_8859_16@@Base+0x1c>
   1abf8:	ldr	r2, [pc, #20]	; 1ac14 <myencoding_decode_iso_8859_16@@Base+0x28>
   1abfc:	add	r2, pc, r2
   1ac00:	add	r0, r2, r0, lsl #2
   1ac04:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1ac08:	str	r0, [r1, #12]
   1ac0c:	mov	r0, #0
   1ac10:	bx	lr
   1ac14:	strdeq	r4, [r2], -r8

0001ac18 <myencoding_decode_koi8_r@@Base>:
   1ac18:	sxtb	r2, r0
   1ac1c:	cmn	r2, #1
   1ac20:	bgt	1ac34 <myencoding_decode_koi8_r@@Base+0x1c>
   1ac24:	ldr	r2, [pc, #20]	; 1ac40 <myencoding_decode_koi8_r@@Base+0x28>
   1ac28:	add	r2, pc, r2
   1ac2c:	add	r0, r2, r0, lsl #2
   1ac30:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1ac34:	str	r0, [r1, #12]
   1ac38:	mov	r0, #0
   1ac3c:	bx	lr
   1ac40:	andeq	r5, r2, ip, asr #3

0001ac44 <myencoding_decode_koi8_u@@Base>:
   1ac44:	sxtb	r2, r0
   1ac48:	cmn	r2, #1
   1ac4c:	bgt	1ac60 <myencoding_decode_koi8_u@@Base+0x1c>
   1ac50:	ldr	r2, [pc, #20]	; 1ac6c <myencoding_decode_koi8_u@@Base+0x28>
   1ac54:	add	r2, pc, r2
   1ac58:	add	r0, r2, r0, lsl #2
   1ac5c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1ac60:	str	r0, [r1, #12]
   1ac64:	mov	r0, #0
   1ac68:	bx	lr
   1ac6c:	andeq	r5, r2, r0, lsr #7

0001ac70 <myencoding_decode_macintosh@@Base>:
   1ac70:	sxtb	r2, r0
   1ac74:	cmn	r2, #1
   1ac78:	bgt	1ac8c <myencoding_decode_macintosh@@Base+0x1c>
   1ac7c:	ldr	r2, [pc, #20]	; 1ac98 <myencoding_decode_macintosh@@Base+0x28>
   1ac80:	add	r2, pc, r2
   1ac84:	add	r0, r2, r0, lsl #2
   1ac88:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1ac8c:	str	r0, [r1, #12]
   1ac90:	mov	r0, #0
   1ac94:	bx	lr
   1ac98:	andeq	r5, r2, r4, ror r5

0001ac9c <myencoding_decode_windows_874@@Base>:
   1ac9c:	sxtb	r2, r0
   1aca0:	cmn	r2, #1
   1aca4:	bgt	1acb8 <myencoding_decode_windows_874@@Base+0x1c>
   1aca8:	ldr	r2, [pc, #20]	; 1acc4 <myencoding_decode_windows_874@@Base+0x28>
   1acac:	add	r2, pc, r2
   1acb0:	add	r0, r2, r0, lsl #2
   1acb4:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1acb8:	str	r0, [r1, #12]
   1acbc:	mov	r0, #0
   1acc0:	bx	lr
   1acc4:	andeq	r5, r2, r8, asr #14

0001acc8 <myencoding_decode_windows_1250@@Base>:
   1acc8:	sxtb	r2, r0
   1accc:	cmn	r2, #1
   1acd0:	bgt	1ace4 <myencoding_decode_windows_1250@@Base+0x1c>
   1acd4:	ldr	r2, [pc, #20]	; 1acf0 <myencoding_decode_windows_1250@@Base+0x28>
   1acd8:	add	r2, pc, r2
   1acdc:	add	r0, r2, r0, lsl #2
   1ace0:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1ace4:	str	r0, [r1, #12]
   1ace8:	mov	r0, #0
   1acec:	bx	lr
   1acf0:	andeq	r5, r2, ip, lsl r9

0001acf4 <myencoding_decode_windows_1251@@Base>:
   1acf4:	sxtb	r2, r0
   1acf8:	cmn	r2, #1
   1acfc:	bgt	1ad10 <myencoding_decode_windows_1251@@Base+0x1c>
   1ad00:	ldr	r2, [pc, #20]	; 1ad1c <myencoding_decode_windows_1251@@Base+0x28>
   1ad04:	add	r2, pc, r2
   1ad08:	add	r0, r2, r0, lsl #2
   1ad0c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1ad10:	str	r0, [r1, #12]
   1ad14:	mov	r0, #0
   1ad18:	bx	lr
   1ad1c:	strdeq	r5, [r2], -r0

0001ad20 <myencoding_decode_windows_1252@@Base>:
   1ad20:	sxtb	r2, r0
   1ad24:	cmn	r2, #1
   1ad28:	bgt	1ad3c <myencoding_decode_windows_1252@@Base+0x1c>
   1ad2c:	ldr	r2, [pc, #20]	; 1ad48 <myencoding_decode_windows_1252@@Base+0x28>
   1ad30:	add	r2, pc, r2
   1ad34:	add	r0, r2, r0, lsl #2
   1ad38:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1ad3c:	str	r0, [r1, #12]
   1ad40:	mov	r0, #0
   1ad44:	bx	lr
   1ad48:	andeq	r5, r2, r4, asr #25

0001ad4c <myencoding_decode_windows_1253@@Base>:
   1ad4c:	sxtb	r2, r0
   1ad50:	cmn	r2, #1
   1ad54:	bgt	1ad68 <myencoding_decode_windows_1253@@Base+0x1c>
   1ad58:	ldr	r2, [pc, #20]	; 1ad74 <myencoding_decode_windows_1253@@Base+0x28>
   1ad5c:	add	r2, pc, r2
   1ad60:	add	r0, r2, r0, lsl #2
   1ad64:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1ad68:	str	r0, [r1, #12]
   1ad6c:	mov	r0, #0
   1ad70:	bx	lr
   1ad74:	muleq	r2, r8, lr

0001ad78 <myencoding_decode_windows_1254@@Base>:
   1ad78:	sxtb	r2, r0
   1ad7c:	cmn	r2, #1
   1ad80:	bgt	1ad94 <myencoding_decode_windows_1254@@Base+0x1c>
   1ad84:	ldr	r2, [pc, #20]	; 1ada0 <myencoding_decode_windows_1254@@Base+0x28>
   1ad88:	add	r2, pc, r2
   1ad8c:	add	r0, r2, r0, lsl #2
   1ad90:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1ad94:	str	r0, [r1, #12]
   1ad98:	mov	r0, #0
   1ad9c:	bx	lr
   1ada0:	andeq	r6, r2, ip, rrx

0001ada4 <myencoding_decode_windows_1255@@Base>:
   1ada4:	sxtb	r2, r0
   1ada8:	cmn	r2, #1
   1adac:	bgt	1adc0 <myencoding_decode_windows_1255@@Base+0x1c>
   1adb0:	ldr	r2, [pc, #20]	; 1adcc <myencoding_decode_windows_1255@@Base+0x28>
   1adb4:	add	r2, pc, r2
   1adb8:	add	r0, r2, r0, lsl #2
   1adbc:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1adc0:	str	r0, [r1, #12]
   1adc4:	mov	r0, #0
   1adc8:	bx	lr
   1adcc:	andeq	r6, r2, r0, asr #4

0001add0 <myencoding_decode_windows_1256@@Base>:
   1add0:	sxtb	r2, r0
   1add4:	cmn	r2, #1
   1add8:	bgt	1adec <myencoding_decode_windows_1256@@Base+0x1c>
   1addc:	ldr	r2, [pc, #20]	; 1adf8 <myencoding_decode_windows_1256@@Base+0x28>
   1ade0:	add	r2, pc, r2
   1ade4:	add	r0, r2, r0, lsl #2
   1ade8:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1adec:	str	r0, [r1, #12]
   1adf0:	mov	r0, #0
   1adf4:	bx	lr
   1adf8:	andeq	r6, r2, r4, lsl r4

0001adfc <myencoding_decode_windows_1257@@Base>:
   1adfc:	sxtb	r2, r0
   1ae00:	cmn	r2, #1
   1ae04:	bgt	1ae18 <myencoding_decode_windows_1257@@Base+0x1c>
   1ae08:	ldr	r2, [pc, #20]	; 1ae24 <myencoding_decode_windows_1257@@Base+0x28>
   1ae0c:	add	r2, pc, r2
   1ae10:	add	r0, r2, r0, lsl #2
   1ae14:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1ae18:	str	r0, [r1, #12]
   1ae1c:	mov	r0, #0
   1ae20:	bx	lr
   1ae24:	andeq	r6, r2, r8, ror #11

0001ae28 <myencoding_decode_windows_1258@@Base>:
   1ae28:	sxtb	r2, r0
   1ae2c:	cmn	r2, #1
   1ae30:	bgt	1ae44 <myencoding_decode_windows_1258@@Base+0x1c>
   1ae34:	ldr	r2, [pc, #20]	; 1ae50 <myencoding_decode_windows_1258@@Base+0x28>
   1ae38:	add	r2, pc, r2
   1ae3c:	add	r0, r2, r0, lsl #2
   1ae40:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1ae44:	str	r0, [r1, #12]
   1ae48:	mov	r0, #0
   1ae4c:	bx	lr
   1ae50:			; <UNDEFINED> instruction: 0x000267bc

0001ae54 <myencoding_decode_x_mac_cyrillic@@Base>:
   1ae54:	sxtb	r2, r0
   1ae58:	cmn	r2, #1
   1ae5c:	bgt	1ae70 <myencoding_decode_x_mac_cyrillic@@Base+0x1c>
   1ae60:	ldr	r2, [pc, #20]	; 1ae7c <myencoding_decode_x_mac_cyrillic@@Base+0x28>
   1ae64:	add	r2, pc, r2
   1ae68:	add	r0, r2, r0, lsl #2
   1ae6c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1ae70:	str	r0, [r1, #12]
   1ae74:	mov	r0, #0
   1ae78:	bx	lr
   1ae7c:	muleq	r2, r0, r9

0001ae80 <myencoding_decode_gbk@@Base>:
   1ae80:	b	1ae84 <myencoding_decode_gb18030@@Base>

0001ae84 <myencoding_decode_gb18030@@Base>:
   1ae84:	push	{fp, lr}
   1ae88:	mov	fp, sp
   1ae8c:	ldr	r2, [r1, #8]
   1ae90:	cmp	r2, #0
   1ae94:	beq	1af40 <myencoding_decode_gb18030@@Base+0xbc>
   1ae98:	sub	r3, r0, #48	; 0x30
   1ae9c:	uxtb	r3, r3
   1aea0:	cmp	r3, #10
   1aea4:	bcs	1af64 <myencoding_decode_gb18030@@Base+0xe0>
   1aea8:	ldm	r1, {r3, ip}
   1aeac:	add	r3, r3, r3, lsl #2
   1aeb0:	add	r3, ip, r3, lsl #1
   1aeb4:	rsb	r3, r3, r3, lsl #6
   1aeb8:	add	r2, r2, r3, lsl #1
   1aebc:	movw	r3, #57927	; 0xe247
   1aec0:	add	r2, r2, r2, lsl #2
   1aec4:	movt	r3, #18
   1aec8:	add	ip, r0, r2, lsl #1
   1aecc:	movw	r0, #16718	; 0x414e
   1aed0:	mov	r2, #0
   1aed4:	movt	r0, #65510	; 0xffe6
   1aed8:	add	lr, ip, r0
   1aedc:	cmp	lr, r3
   1aee0:	bhi	1b04c <myencoding_decode_gb18030@@Base+0x1c8>
   1aee4:	movw	r3, #42834	; 0xa752
   1aee8:	movt	r3, #65509	; 0xffe5
   1aeec:	add	ip, ip, r3
   1aef0:	movw	r3, #18508	; 0x484c
   1aef4:	movt	r3, #2
   1aef8:	cmp	ip, r3
   1aefc:	bcc	1b04c <myencoding_decode_gb18030@@Base+0x1c8>
   1af00:	movw	r3, #7457	; 0x1d21
   1af04:	movw	r2, #59335	; 0xe7c7
   1af08:	cmp	lr, r3
   1af0c:	beq	1b04c <myencoding_decode_gb18030@@Base+0x1c8>
   1af10:	ldr	r2, [pc, #352]	; 1b078 <myencoding_decode_gb18030@@Base+0x1f4>
   1af14:	add	r2, pc, r2
   1af18:	add	r3, r2, #1648	; 0x670
   1af1c:	mvn	r2, #206	; 0xce
   1af20:	cmp	r2, #0
   1af24:	beq	1b03c <myencoding_decode_gb18030@@Base+0x1b8>
   1af28:	ldr	r0, [r3], #-8
   1af2c:	add	r2, r2, #1
   1af30:	cmp	r0, lr
   1af34:	bhi	1af20 <myencoding_decode_gb18030@@Base+0x9c>
   1af38:	ldr	r3, [r3, #12]
   1af3c:	b	1b044 <myencoding_decode_gb18030@@Base+0x1c0>
   1af40:	ldr	r2, [r1, #4]
   1af44:	cmp	r2, #0
   1af48:	beq	1af6c <myencoding_decode_gb18030@@Base+0xe8>
   1af4c:	cmp	r0, #129	; 0x81
   1af50:	bcc	1af98 <myencoding_decode_gb18030@@Base+0x114>
   1af54:	cmp	r0, #255	; 0xff
   1af58:	beq	1af98 <myencoding_decode_gb18030@@Base+0x114>
   1af5c:	str	r0, [r1, #8]
   1af60:	b	1af8c <myencoding_decode_gb18030@@Base+0x108>
   1af64:	ldr	r2, [r1, #12]
   1af68:	b	1b050 <myencoding_decode_gb18030@@Base+0x1cc>
   1af6c:	ldr	lr, [r1]
   1af70:	cmp	lr, #0
   1af74:	beq	1afb0 <myencoding_decode_gb18030@@Base+0x12c>
   1af78:	sub	r2, r0, #48	; 0x30
   1af7c:	uxtb	r2, r2
   1af80:	cmp	r2, #9
   1af84:	bhi	1afd4 <myencoding_decode_gb18030@@Base+0x150>
   1af88:	str	r0, [r1, #4]
   1af8c:	mov	r2, #2
   1af90:	mov	r0, r2
   1af94:	pop	{fp, pc}
   1af98:	mov	r0, #0
   1af9c:	str	r0, [r1]
   1afa0:	str	r0, [r1, #4]
   1afa4:	mov	r2, #1
   1afa8:	mov	r0, r2
   1afac:	pop	{fp, pc}
   1afb0:	sxtb	r2, r0
   1afb4:	cmp	r2, #0
   1afb8:	bge	1b02c <myencoding_decode_gb18030@@Base+0x1a8>
   1afbc:	cmp	r0, #255	; 0xff
   1afc0:	beq	1afa4 <myencoding_decode_gb18030@@Base+0x120>
   1afc4:	cmp	r0, #128	; 0x80
   1afc8:	bne	1b070 <myencoding_decode_gb18030@@Base+0x1ec>
   1afcc:	movw	r0, #8364	; 0x20ac
   1afd0:	b	1b02c <myencoding_decode_gb18030@@Base+0x1a8>
   1afd4:	mov	r2, #0
   1afd8:	str	r2, [r1]
   1afdc:	sxtb	r2, r0
   1afe0:	cmn	r2, #1
   1afe4:	blt	1affc <myencoding_decode_gb18030@@Base+0x178>
   1afe8:	sub	ip, r0, #64	; 0x40
   1afec:	mov	r2, #1
   1aff0:	uxtb	r3, ip
   1aff4:	cmp	r3, #62	; 0x3e
   1aff8:	bhi	1af90 <myencoding_decode_gb18030@@Base+0x10c>
   1affc:	mvn	r2, #64	; 0x40
   1b000:	cmp	r0, #127	; 0x7f
   1b004:	mvncc	r2, #63	; 0x3f
   1b008:	add	r0, r0, r2
   1b00c:	mov	r2, #190	; 0xbe
   1b010:	mla	r0, lr, r2, r0
   1b014:	ldr	r2, [pc, #96]	; 1b07c <myencoding_decode_gb18030@@Base+0x1f8>
   1b018:	add	r2, pc, r2
   1b01c:	add	r0, r2, r0, lsl #2
   1b020:	movw	r2, #33032	; 0x8108
   1b024:	movt	r2, #65534	; 0xfffe
   1b028:	ldr	r0, [r0, r2]
   1b02c:	mov	r2, #0
   1b030:	str	r0, [r1, #12]
   1b034:	mov	r0, r2
   1b038:	pop	{fp, pc}
   1b03c:	mov	r2, #0
   1b040:	mov	r3, #0
   1b044:	add	r0, r2, lr
   1b048:	add	r2, r0, r3
   1b04c:	str	r2, [r1, #12]
   1b050:	mov	r0, #0
   1b054:	str	r0, [r1]
   1b058:	str	r0, [r1, #4]
   1b05c:	str	r0, [r1, #8]
   1b060:	clz	r0, r2
   1b064:	lsr	r2, r0, #5
   1b068:	mov	r0, r2
   1b06c:	pop	{fp, pc}
   1b070:	str	r0, [r1]
   1b074:	b	1af8c <myencoding_decode_gb18030@@Base+0x108>
   1b078:	andeq	r6, r2, r0, ror #21
   1b07c:	andeq	r7, r2, r4, asr r0

0001b080 <myencoding_index_gb18030_ranges_code_point@@Base>:
   1b080:	movw	r2, #57927	; 0xe247
   1b084:	mov	r1, #0
   1b088:	movt	r2, #18
   1b08c:	cmp	r0, r2
   1b090:	bhi	1b0fc <myencoding_index_gb18030_ranges_code_point@@Base+0x7c>
   1b094:	movw	r2, #39420	; 0x99fc
   1b098:	movw	r3, #18508	; 0x484c
   1b09c:	sub	r2, r0, r2
   1b0a0:	movt	r3, #2
   1b0a4:	cmp	r2, r3
   1b0a8:	bcc	1b0fc <myencoding_index_gb18030_ranges_code_point@@Base+0x7c>
   1b0ac:	movw	r2, #7457	; 0x1d21
   1b0b0:	movw	r1, #59335	; 0xe7c7
   1b0b4:	cmp	r0, r2
   1b0b8:	beq	1b0fc <myencoding_index_gb18030_ranges_code_point@@Base+0x7c>
   1b0bc:	ldr	r1, [pc, #64]	; 1b104 <myencoding_index_gb18030_ranges_code_point@@Base+0x84>
   1b0c0:	add	r1, pc, r1
   1b0c4:	add	r2, r1, #1648	; 0x670
   1b0c8:	mvn	r1, #206	; 0xce
   1b0cc:	cmp	r1, #0
   1b0d0:	beq	1b0ec <myencoding_index_gb18030_ranges_code_point@@Base+0x6c>
   1b0d4:	ldr	r3, [r2], #-8
   1b0d8:	add	r1, r1, #1
   1b0dc:	cmp	r3, r0
   1b0e0:	bhi	1b0cc <myencoding_index_gb18030_ranges_code_point@@Base+0x4c>
   1b0e4:	ldr	r2, [r2, #12]
   1b0e8:	b	1b0f4 <myencoding_index_gb18030_ranges_code_point@@Base+0x74>
   1b0ec:	mov	r1, #0
   1b0f0:	mov	r2, #0
   1b0f4:	add	r0, r1, r0
   1b0f8:	add	r1, r0, r2
   1b0fc:	mov	r0, r1
   1b100:	bx	lr
   1b104:	andeq	r6, r2, r4, lsr r9

0001b108 <myencoding_decode_big5@@Base>:
   1b108:	ldr	ip, [r1]
   1b10c:	mov	r2, r0
   1b110:	cmp	ip, #0
   1b114:	beq	1b210 <myencoding_decode_big5@@Base+0x108>
   1b118:	mov	r0, #0
   1b11c:	mov	r3, #98	; 0x62
   1b120:	cmp	r2, #127	; 0x7f
   1b124:	str	r0, [r1]
   1b128:	sub	r0, r2, #64	; 0x40
   1b12c:	movwcc	r3, #64	; 0x40
   1b130:	uxtb	r0, r0
   1b134:	cmp	r0, #63	; 0x3f
   1b138:	bcc	1b150 <myencoding_decode_big5@@Base+0x48>
   1b13c:	mov	r0, #1
   1b140:	cmp	r2, #161	; 0xa1
   1b144:	bcc	1b238 <myencoding_decode_big5@@Base+0x130>
   1b148:	cmp	r2, #255	; 0xff
   1b14c:	beq	1b238 <myencoding_decode_big5@@Base+0x130>
   1b150:	sub	r0, r2, r3
   1b154:	mov	r2, #157	; 0x9d
   1b158:	movw	r3, #21386	; 0x538a
   1b15c:	mla	r0, ip, r2, r0
   1b160:	movw	r2, #20253	; 0x4f1d
   1b164:	sub	r2, r0, r2
   1b168:	sub	r0, r0, r3
   1b16c:	cmp	r0, #33	; 0x21
   1b170:	bhi	1b23c <myencoding_decode_big5@@Base+0x134>
   1b174:	add	r3, pc, #4
   1b178:	ldr	r0, [r3, r0, lsl #2]
   1b17c:	add	pc, r3, r0
   1b180:	andeq	r0, r0, r8, lsl #1
   1b184:	andeq	r0, r0, r8, asr #1
   1b188:	andeq	r0, r0, r4, ror #1
   1b18c:	andeq	r0, r0, r8, asr #1
   1b190:	andeq	r0, r0, r8, asr #1
   1b194:	andeq	r0, r0, r8, asr #1
   1b198:	andeq	r0, r0, r8, asr #1
   1b19c:	andeq	r0, r0, r8, asr #1
   1b1a0:	andeq	r0, r0, r8, asr #1
   1b1a4:	andeq	r0, r0, r8, asr #1
   1b1a8:	andeq	r0, r0, r8, asr #1
   1b1ac:	andeq	r0, r0, r8, asr #1
   1b1b0:	andeq	r0, r0, r8, asr #1
   1b1b4:	andeq	r0, r0, r8, asr #1
   1b1b8:	andeq	r0, r0, r8, asr #1
   1b1bc:	andeq	r0, r0, r8, asr #1
   1b1c0:	andeq	r0, r0, r8, asr #1
   1b1c4:	andeq	r0, r0, r8, asr #1
   1b1c8:	andeq	r0, r0, r8, asr #1
   1b1cc:	andeq	r0, r0, r8, asr #1
   1b1d0:	andeq	r0, r0, r8, asr #1
   1b1d4:	andeq	r0, r0, r8, asr #1
   1b1d8:	andeq	r0, r0, r8, asr #1
   1b1dc:	andeq	r0, r0, r8, asr #1
   1b1e0:	andeq	r0, r0, r8, asr #1
   1b1e4:	andeq	r0, r0, r8, asr #1
   1b1e8:	andeq	r0, r0, r8, asr #1
   1b1ec:	andeq	r0, r0, r8, asr #1
   1b1f0:	andeq	r0, r0, r8, asr #1
   1b1f4:	andeq	r0, r0, r8, asr #1
   1b1f8:	andeq	r0, r0, r8, asr #1
   1b1fc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1b200:	andeq	r0, r0, r8, asr #1
   1b204:	strdeq	r0, [r0], -r8
   1b208:	mov	r0, #772	; 0x304
   1b20c:	b	1b268 <myencoding_decode_big5@@Base+0x160>
   1b210:	sxtb	r0, r2
   1b214:	cmp	r0, #0
   1b218:	movge	r0, #0
   1b21c:	strge	r2, [r1, #12]
   1b220:	bxge	lr
   1b224:	cmp	r2, #128	; 0x80
   1b228:	mov	r0, #1
   1b22c:	cmpne	r2, #255	; 0xff
   1b230:	movne	r0, #2
   1b234:	strne	r2, [r1]
   1b238:	bx	lr
   1b23c:	mov	r0, #1
   1b240:	cmp	r2, #0
   1b244:	bxeq	lr
   1b248:	mov	r0, #0
   1b24c:	str	r0, [r1, #16]
   1b250:	ldr	r3, [pc, #56]	; 1b290 <myencoding_decode_big5@@Base+0x188>
   1b254:	add	r3, pc, r3
   1b258:	ldr	r2, [r3, r2, lsl #2]
   1b25c:	str	r2, [r1, #12]
   1b260:	bx	lr
   1b264:	mov	r0, #780	; 0x30c
   1b268:	mov	r2, #202	; 0xca
   1b26c:	b	1b280 <myencoding_decode_big5@@Base+0x178>
   1b270:	mov	r0, #772	; 0x304
   1b274:	b	1b27c <myencoding_decode_big5@@Base+0x174>
   1b278:	mov	r0, #780	; 0x30c
   1b27c:	mov	r2, #234	; 0xea
   1b280:	str	r2, [r1, #12]
   1b284:	str	r0, [r1, #16]
   1b288:	mov	r0, #0
   1b28c:	bx	lr
   1b290:	andeq	lr, r3, r8, lsr #8

0001b294 <myencoding_decode_euc_jp@@Base>:
   1b294:	ldr	r2, [r1]
   1b298:	cmp	r2, #0
   1b29c:	beq	1b37c <myencoding_decode_euc_jp@@Base+0xe8>
   1b2a0:	cmp	r2, #143	; 0x8f
   1b2a4:	beq	1b2dc <myencoding_decode_euc_jp@@Base+0x48>
   1b2a8:	cmp	r2, #142	; 0x8e
   1b2ac:	bne	1b2fc <myencoding_decode_euc_jp@@Base+0x68>
   1b2b0:	add	r2, r0, #95	; 0x5f
   1b2b4:	uxtb	r2, r2
   1b2b8:	cmp	r2, #62	; 0x3e
   1b2bc:	bhi	1b374 <myencoding_decode_euc_jp@@Base+0xe0>
   1b2c0:	movw	r3, #65216	; 0xfec0
   1b2c4:	mov	r2, #0
   1b2c8:	add	r0, r0, r3
   1b2cc:	str	r2, [r1]
   1b2d0:	str	r0, [r1, #12]
   1b2d4:	mov	r0, r2
   1b2d8:	bx	lr
   1b2dc:	cmp	r0, #161	; 0xa1
   1b2e0:	bcc	1b374 <myencoding_decode_euc_jp@@Base+0xe0>
   1b2e4:	cmp	r0, #255	; 0xff
   1b2e8:	beq	1b374 <myencoding_decode_euc_jp@@Base+0xe0>
   1b2ec:	str	r0, [r1]
   1b2f0:	mov	r0, #1
   1b2f4:	str	r0, [r1, #20]
   1b2f8:	b	1b3b8 <myencoding_decode_euc_jp@@Base+0x124>
   1b2fc:	mov	r3, #0
   1b300:	str	r3, [r1]
   1b304:	sub	r3, r2, #161	; 0xa1
   1b308:	cmp	r3, #93	; 0x5d
   1b30c:	bhi	1b37c <myencoding_decode_euc_jp@@Base+0xe8>
   1b310:	cmp	r0, #161	; 0xa1
   1b314:	bcc	1b37c <myencoding_decode_euc_jp@@Base+0xe8>
   1b318:	cmp	r0, #255	; 0xff
   1b31c:	beq	1b37c <myencoding_decode_euc_jp@@Base+0xe8>
   1b320:	mov	r3, #0
   1b324:	ldr	ip, [r1, #20]
   1b328:	str	r3, [r1, #20]
   1b32c:	mov	r3, #94	; 0x5e
   1b330:	mla	r0, r2, r3, r0
   1b334:	movw	r2, #4356	; 0x1104
   1b338:	movt	r2, #65535	; 0xffff
   1b33c:	add	r0, r2, r0, lsl #2
   1b340:	ldr	r2, [pc, #124]	; 1b3c4 <myencoding_decode_euc_jp@@Base+0x130>
   1b344:	ldr	r3, [pc, #124]	; 1b3c8 <myencoding_decode_euc_jp@@Base+0x134>
   1b348:	cmp	ip, #0
   1b34c:	add	r3, pc, r3
   1b350:	add	r2, pc, r2
   1b354:	add	r3, r3, r0
   1b358:	addeq	r3, r2, r0
   1b35c:	ldr	r0, [r3]
   1b360:	str	r0, [r1, #12]
   1b364:	clz	r0, r0
   1b368:	lsr	r2, r0, #5
   1b36c:	mov	r0, r2
   1b370:	bx	lr
   1b374:	mov	r2, #0
   1b378:	str	r2, [r1]
   1b37c:	sxtb	r2, r0
   1b380:	cmp	r2, #0
   1b384:	movge	r2, #0
   1b388:	strge	r0, [r1, #12]
   1b38c:	movge	r0, r2
   1b390:	bxge	lr
   1b394:	and	r2, r0, #254	; 0xfe
   1b398:	cmp	r2, #142	; 0x8e
   1b39c:	beq	1b3b4 <myencoding_decode_euc_jp@@Base+0x120>
   1b3a0:	mov	r2, #1
   1b3a4:	cmp	r0, #161	; 0xa1
   1b3a8:	bcc	1b3bc <myencoding_decode_euc_jp@@Base+0x128>
   1b3ac:	cmp	r0, #255	; 0xff
   1b3b0:	beq	1b3bc <myencoding_decode_euc_jp@@Base+0x128>
   1b3b4:	str	r0, [r1]
   1b3b8:	mov	r2, #2
   1b3bc:	mov	r0, r2
   1b3c0:	bx	lr
   1b3c4:	andeq	sl, r5, r4, asr r5
   1b3c8:	andeq	r1, r5, r8, asr #22

0001b3cc <myencoding_decode_iso_2022_jp@@Base>:
   1b3cc:	ldr	r3, [r1, #4]
   1b3d0:	mov	ip, #0
   1b3d4:	cmp	r3, #7
   1b3d8:	bhi	1b614 <myencoding_decode_iso_2022_jp@@Base+0x248>
   1b3dc:	add	r2, pc, #4
   1b3e0:	ldr	r3, [r2, r3, lsl #2]
   1b3e4:	add	pc, r2, r3
   1b3e8:	andeq	r0, r0, r0, lsr #32
   1b3ec:	andeq	r0, r0, r4, asr r0
   1b3f0:	andeq	r0, r0, ip, lsr #4
   1b3f4:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   1b3f8:	andeq	r0, r0, ip, ror #1
   1b3fc:	andeq	r0, r0, r0, lsl #2
   1b400:	andeq	r0, r0, ip, lsl r1
   1b404:	andeq	r0, r0, r0, lsr r1
   1b408:	cmp	r0, #27
   1b40c:	beq	1b4dc <myencoding_decode_iso_2022_jp@@Base+0x110>
   1b410:	sxtb	r2, r0
   1b414:	cmp	r2, #0
   1b418:	blt	1b48c <myencoding_decode_iso_2022_jp@@Base+0xc0>
   1b41c:	cmp	r0, #27
   1b420:	bhi	1b64c <myencoding_decode_iso_2022_jp@@Base+0x280>
   1b424:	movw	r3, #49152	; 0xc000
   1b428:	mov	r2, #1
   1b42c:	movt	r3, #2048	; 0x800
   1b430:	tst	r3, r2, lsl r0
   1b434:	bne	1b48c <myencoding_decode_iso_2022_jp@@Base+0xc0>
   1b438:	b	1b64c <myencoding_decode_iso_2022_jp@@Base+0x280>
   1b43c:	cmp	r0, #126	; 0x7e
   1b440:	beq	1b640 <myencoding_decode_iso_2022_jp@@Base+0x274>
   1b444:	cmp	r0, #92	; 0x5c
   1b448:	beq	1b648 <myencoding_decode_iso_2022_jp@@Base+0x27c>
   1b44c:	cmp	r0, #27
   1b450:	beq	1b4dc <myencoding_decode_iso_2022_jp@@Base+0x110>
   1b454:	sxtb	r2, r0
   1b458:	cmp	r2, #0
   1b45c:	blt	1b48c <myencoding_decode_iso_2022_jp@@Base+0xc0>
   1b460:	cmp	r0, #27
   1b464:	bhi	1b47c <myencoding_decode_iso_2022_jp@@Base+0xb0>
   1b468:	movw	r3, #49152	; 0xc000
   1b46c:	mov	r2, #1
   1b470:	movt	r3, #2048	; 0x800
   1b474:	tst	r3, r2, lsl r0
   1b478:	bne	1b48c <myencoding_decode_iso_2022_jp@@Base+0xc0>
   1b47c:	cmp	r0, #92	; 0x5c
   1b480:	beq	1b48c <myencoding_decode_iso_2022_jp@@Base+0xc0>
   1b484:	cmp	r0, #126	; 0x7e
   1b488:	bne	1b64c <myencoding_decode_iso_2022_jp@@Base+0x280>
   1b48c:	mov	r0, #0
   1b490:	str	r0, [r1, #20]
   1b494:	b	1b634 <myencoding_decode_iso_2022_jp@@Base+0x268>
   1b498:	cmp	r0, #27
   1b49c:	beq	1b4dc <myencoding_decode_iso_2022_jp@@Base+0x110>
   1b4a0:	mov	r2, #0
   1b4a4:	mov	ip, #1
   1b4a8:	str	r2, [r1, #20]
   1b4ac:	sub	r2, r0, #33	; 0x21
   1b4b0:	uxtb	r2, r2
   1b4b4:	cmp	r2, #62	; 0x3e
   1b4b8:	bhi	1b614 <myencoding_decode_iso_2022_jp@@Base+0x248>
   1b4bc:	movw	r2, #65344	; 0xff40
   1b4c0:	mov	ip, #0
   1b4c4:	add	r0, r0, r2
   1b4c8:	str	r0, [r1, #12]
   1b4cc:	mov	r0, ip
   1b4d0:	bx	lr
   1b4d4:	cmp	r0, #27
   1b4d8:	bne	1b58c <myencoding_decode_iso_2022_jp@@Base+0x1c0>
   1b4dc:	mov	r0, #6
   1b4e0:	str	r0, [r1, #4]
   1b4e4:	b	1b5b4 <myencoding_decode_iso_2022_jp@@Base+0x1e8>
   1b4e8:	cmp	r0, #27
   1b4ec:	bne	1b5c0 <myencoding_decode_iso_2022_jp@@Base+0x1f4>
   1b4f0:	mov	r0, #6
   1b4f4:	mov	ip, #3
   1b4f8:	str	r0, [r1, #4]
   1b4fc:	mov	r0, ip
   1b500:	bx	lr
   1b504:	cmp	r0, #40	; 0x28
   1b508:	cmpne	r0, #36	; 0x24
   1b50c:	bne	1b624 <myencoding_decode_iso_2022_jp@@Base+0x258>
   1b510:	mov	r2, #7
   1b514:	b	1b5ac <myencoding_decode_iso_2022_jp@@Base+0x1e0>
   1b518:	mov	r3, #0
   1b51c:	cmp	r0, #66	; 0x42
   1b520:	str	r3, [r1, #4]
   1b524:	ldr	r2, [r1]
   1b528:	str	r3, [r1]
   1b52c:	cmpeq	r2, #40	; 0x28
   1b530:	beq	1b61c <myencoding_decode_iso_2022_jp@@Base+0x250>
   1b534:	cmp	r0, #74	; 0x4a
   1b538:	moveq	r3, #1
   1b53c:	cmpeq	r2, #40	; 0x28
   1b540:	beq	1b56c <myencoding_decode_iso_2022_jp@@Base+0x1a0>
   1b544:	cmp	r0, #73	; 0x49
   1b548:	moveq	r3, #2
   1b54c:	cmpeq	r2, #40	; 0x28
   1b550:	beq	1b56c <myencoding_decode_iso_2022_jp@@Base+0x1a0>
   1b554:	cmp	r2, #36	; 0x24
   1b558:	bne	1b624 <myencoding_decode_iso_2022_jp@@Base+0x258>
   1b55c:	orr	r0, r0, #2
   1b560:	mov	r3, #4
   1b564:	cmp	r0, #66	; 0x42
   1b568:	bne	1b624 <myencoding_decode_iso_2022_jp@@Base+0x258>
   1b56c:	str	r3, [r1, #4]
   1b570:	str	r3, [r1, #8]
   1b574:	mov	ip, #1
   1b578:	ldr	r0, [r1, #20]
   1b57c:	str	ip, [r1, #20]
   1b580:	cmp	r0, #0
   1b584:	movweq	ip, #2
   1b588:	b	1b614 <myencoding_decode_iso_2022_jp@@Base+0x248>
   1b58c:	mov	r2, #0
   1b590:	mov	ip, #1
   1b594:	str	r2, [r1, #20]
   1b598:	sub	r2, r0, #33	; 0x21
   1b59c:	uxtb	r2, r2
   1b5a0:	cmp	r2, #93	; 0x5d
   1b5a4:	bhi	1b614 <myencoding_decode_iso_2022_jp@@Base+0x248>
   1b5a8:	mov	r2, #5
   1b5ac:	str	r0, [r1]
   1b5b0:	str	r2, [r1, #4]
   1b5b4:	mov	ip, #2
   1b5b8:	mov	r0, ip
   1b5bc:	bx	lr
   1b5c0:	mov	r2, #4
   1b5c4:	mov	ip, #1
   1b5c8:	str	r2, [r1, #4]
   1b5cc:	sub	r2, r0, #33	; 0x21
   1b5d0:	uxtb	r2, r2
   1b5d4:	cmp	r2, #93	; 0x5d
   1b5d8:	bhi	1b614 <myencoding_decode_iso_2022_jp@@Base+0x248>
   1b5dc:	ldr	r2, [r1]
   1b5e0:	mov	r3, #94	; 0x5e
   1b5e4:	mla	r0, r2, r3, r0
   1b5e8:	ldr	r2, [pc, #112]	; 1b660 <myencoding_decode_iso_2022_jp@@Base+0x294>
   1b5ec:	add	r2, pc, r2
   1b5f0:	add	r0, r2, r0, lsl #2
   1b5f4:	movw	r2, #52996	; 0xcf04
   1b5f8:	movt	r2, #65535	; 0xffff
   1b5fc:	ldr	r0, [r0, r2]
   1b600:	str	r0, [r1, #12]
   1b604:	clz	r0, r0
   1b608:	lsr	ip, r0, #5
   1b60c:	mov	r0, ip
   1b610:	bx	lr
   1b614:	mov	r0, ip
   1b618:	bx	lr
   1b61c:	mov	r0, #0
   1b620:	str	r0, [r1, #4]
   1b624:	mov	r0, #0
   1b628:	str	r0, [r1, #20]
   1b62c:	ldr	r0, [r1, #8]
   1b630:	str	r0, [r1, #4]
   1b634:	mov	ip, #1
   1b638:	mov	r0, ip
   1b63c:	bx	lr
   1b640:	movw	r0, #8254	; 0x203e
   1b644:	b	1b64c <myencoding_decode_iso_2022_jp@@Base+0x280>
   1b648:	mov	r0, #165	; 0xa5
   1b64c:	mov	ip, #0
   1b650:	str	r0, [r1, #12]
   1b654:	mov	r0, ip
   1b658:	str	ip, [r1, #20]
   1b65c:	bx	lr
   1b660:			; <UNDEFINED> instruction: 0x0005a2b8

0001b664 <myencoding_decode_shift_jis@@Base>:
   1b664:	ldr	r2, [r1]
   1b668:	cmp	r2, #0
   1b66c:	beq	1b6fc <myencoding_decode_shift_jis@@Base+0x98>
   1b670:	sub	r3, r0, #64	; 0x40
   1b674:	mov	ip, #193	; 0xc1
   1b678:	cmp	r2, #160	; 0xa0
   1b67c:	uxtb	r3, r3
   1b680:	movwcc	ip, #129	; 0x81
   1b684:	cmp	r3, #63	; 0x3f
   1b688:	bcc	1b6a0 <myencoding_decode_shift_jis@@Base+0x3c>
   1b68c:	sxtb	r3, r0
   1b690:	cmn	r3, #1
   1b694:	bgt	1b738 <myencoding_decode_shift_jis@@Base+0xd4>
   1b698:	cmp	r0, #252	; 0xfc
   1b69c:	bhi	1b738 <myencoding_decode_shift_jis@@Base+0xd4>
   1b6a0:	mvn	r3, #64	; 0x40
   1b6a4:	cmp	r0, #127	; 0x7f
   1b6a8:	sub	r2, r2, ip
   1b6ac:	mvncc	r3, #63	; 0x3f
   1b6b0:	add	r0, r3, r0
   1b6b4:	mov	r3, #188	; 0xbc
   1b6b8:	mla	r2, r2, r3, r0
   1b6bc:	cmp	r2, #0
   1b6c0:	beq	1b738 <myencoding_decode_shift_jis@@Base+0xd4>
   1b6c4:	ldr	r0, [pc, #172]	; 1b778 <myencoding_decode_shift_jis@@Base+0x114>
   1b6c8:	movw	r3, #8836	; 0x2284
   1b6cc:	sub	ip, r2, r3
   1b6d0:	movw	r3, #1692	; 0x69c
   1b6d4:	cmp	ip, r3
   1b6d8:	add	r0, pc, r0
   1b6dc:	ldr	r0, [r0, r2, lsl #2]
   1b6e0:	str	r0, [r1, #12]
   1b6e4:	bhi	1b740 <myencoding_decode_shift_jis@@Base+0xdc>
   1b6e8:	cmp	r0, #0
   1b6ec:	bne	1b740 <myencoding_decode_shift_jis@@Base+0xdc>
   1b6f0:	movw	r0, #48508	; 0xbd7c
   1b6f4:	add	r0, r2, r0
   1b6f8:	b	1b73c <myencoding_decode_shift_jis@@Base+0xd8>
   1b6fc:	sxtb	r2, r0
   1b700:	cmn	r2, #1
   1b704:	bgt	1b728 <myencoding_decode_shift_jis@@Base+0xc4>
   1b708:	cmp	r0, #128	; 0x80
   1b70c:	beq	1b728 <myencoding_decode_shift_jis@@Base+0xc4>
   1b710:	add	r2, r0, #95	; 0x5f
   1b714:	uxtb	r2, r2
   1b718:	cmp	r2, #62	; 0x3e
   1b71c:	bhi	1b750 <myencoding_decode_shift_jis@@Base+0xec>
   1b720:	movw	r2, #65216	; 0xfec0
   1b724:	add	r0, r0, r2
   1b728:	mov	r2, #0
   1b72c:	str	r0, [r1, #12]
   1b730:	mov	r0, r2
   1b734:	bx	lr
   1b738:	mov	r0, #0
   1b73c:	str	r0, [r1, #12]
   1b740:	clz	r0, r0
   1b744:	lsr	r2, r0, #5
   1b748:	mov	r0, r2
   1b74c:	bx	lr
   1b750:	cmp	r0, #160	; 0xa0
   1b754:	addcs	r3, r0, #32
   1b758:	movcs	r2, #1
   1b75c:	uxtbcs	r3, r3
   1b760:	cmpcs	r3, #28
   1b764:	bhi	1b770 <myencoding_decode_shift_jis@@Base+0x10c>
   1b768:	mov	r2, #2
   1b76c:	str	r0, [r1]
   1b770:	mov	r0, r2
   1b774:	bx	lr
   1b778:	andeq	sl, r5, ip, asr #3

0001b77c <myencoding_decode_euc_kr@@Base>:
   1b77c:	ldr	r2, [r1]
   1b780:	cmp	r2, #0
   1b784:	beq	1b7d0 <myencoding_decode_euc_kr@@Base+0x54>
   1b788:	mov	r3, #0
   1b78c:	cmp	r0, #65	; 0x41
   1b790:	str	r3, [r1]
   1b794:	bcc	1b7bc <myencoding_decode_euc_kr@@Base+0x40>
   1b798:	cmp	r0, #255	; 0xff
   1b79c:	movne	r3, #190	; 0xbe
   1b7a0:	mlane	r0, r2, r3, r0
   1b7a4:	movwne	r2, #24575	; 0x5fff
   1b7a8:	subsne	r0, r0, r2
   1b7ac:	ldrne	r2, [pc, #80]	; 1b804 <myencoding_decode_euc_kr@@Base+0x88>
   1b7b0:	addne	r2, pc, r2
   1b7b4:	ldrne	r0, [r2, r0, lsl #2]
   1b7b8:	strne	r0, [r1, #12]
   1b7bc:	ldr	r0, [r1, #12]
   1b7c0:	clz	r0, r0
   1b7c4:	lsr	r2, r0, #5
   1b7c8:	mov	r0, r2
   1b7cc:	bx	lr
   1b7d0:	sxtb	r2, r0
   1b7d4:	cmp	r2, #0
   1b7d8:	movge	r2, #0
   1b7dc:	strge	r0, [r1, #12]
   1b7e0:	movge	r0, r2
   1b7e4:	bxge	lr
   1b7e8:	cmp	r0, #128	; 0x80
   1b7ec:	mov	r2, #1
   1b7f0:	cmpne	r0, #255	; 0xff
   1b7f4:	movne	r2, #2
   1b7f8:	strne	r0, [r1]
   1b7fc:	mov	r0, r2
   1b800:	bx	lr
   1b804:	andeq	r5, r6, r4, lsr r1

0001b808 <myencoding_decode_shared_utf_16@@Base>:
   1b808:	push	{fp, lr}
   1b80c:	mov	fp, sp
   1b810:	ldr	r3, [r1]
   1b814:	cmp	r3, #0
   1b818:	streq	r0, [r1]
   1b81c:	moveq	r0, #2
   1b820:	popeq	{fp, pc}
   1b824:	ldr	r2, [r1, #20]
   1b828:	mov	ip, #0
   1b82c:	str	ip, [r1]
   1b830:	cmp	r2, #0
   1b834:	addeq	lr, r3, r0, lsl #8
   1b838:	orrne	lr, r0, r3, lsl #8
   1b83c:	ldr	r3, [r1, #4]
   1b840:	cmp	r3, #0
   1b844:	beq	1b874 <myencoding_decode_shared_utf_16@@Base+0x6c>
   1b848:	mov	r0, lr
   1b84c:	str	ip, [r1, #4]
   1b850:	bfc	r0, #0, #10
   1b854:	cmp	r0, #56320	; 0xdc00
   1b858:	bne	1b8a4 <myencoding_decode_shared_utf_16@@Base+0x9c>
   1b85c:	add	r0, lr, r3, lsl #10
   1b860:	sub	r0, r0, #252928	; 0x3dc00
   1b864:	sub	r0, r0, #56360960	; 0x35c0000
   1b868:	str	r0, [r1, #12]
   1b86c:	mov	r0, #0
   1b870:	pop	{fp, pc}
   1b874:	mov	r2, lr
   1b878:	bfc	r2, #0, #10
   1b87c:	cmp	r2, #56320	; 0xdc00
   1b880:	moveq	r0, #1
   1b884:	popeq	{fp, pc}
   1b888:	cmp	r2, #55296	; 0xd800
   1b88c:	moveq	r0, #2
   1b890:	streq	lr, [r1, #4]
   1b894:	popeq	{fp, pc}
   1b898:	mov	r0, #0
   1b89c:	str	lr, [r1, #12]
   1b8a0:	pop	{fp, pc}
   1b8a4:	lsr	r3, lr, #8
   1b8a8:	cmp	r2, #0
   1b8ac:	beq	1b8bc <myencoding_decode_shared_utf_16@@Base+0xb4>
   1b8b0:	uxtb	r0, lr
   1b8b4:	uxtb	r2, r3
   1b8b8:	b	1b8c4 <myencoding_decode_shared_utf_16@@Base+0xbc>
   1b8bc:	uxtb	r0, r3
   1b8c0:	uxtb	r2, lr
   1b8c4:	str	r2, [r1, #12]
   1b8c8:	str	r0, [r1, #16]
   1b8cc:	mov	r0, #5
   1b8d0:	pop	{fp, pc}

0001b8d4 <myencoding_decode_utf_16be@@Base>:
   1b8d4:	ldr	r2, [r1, #20]
   1b8d8:	cmp	r2, #0
   1b8dc:	moveq	r2, #1
   1b8e0:	streq	r2, [r1, #20]
   1b8e4:	push	{r4, sl, fp, lr}
   1b8e8:	add	fp, sp, #8
   1b8ec:	ldr	r3, [r1]
   1b8f0:	cmp	r3, #0
   1b8f4:	streq	r0, [r1]
   1b8f8:	moveq	r0, #2
   1b8fc:	popeq	{r4, sl, fp, pc}
   1b900:	mov	lr, #0
   1b904:	orr	ip, r0, r3, lsl #8
   1b908:	str	lr, [r1]
   1b90c:	ldr	r4, [r1, #4]
   1b910:	cmp	r4, #0
   1b914:	beq	1b948 <myencoding_decode_utf_16be@@Base+0x74>
   1b918:	movw	r2, #65532	; 0xfffc
   1b91c:	str	lr, [r1, #4]
   1b920:	movt	r2, #255	; 0xff
   1b924:	and	r2, r3, r2
   1b928:	cmp	r2, #220	; 0xdc
   1b92c:	bne	1b978 <myencoding_decode_utf_16be@@Base+0xa4>
   1b930:	add	r0, ip, r4, lsl #10
   1b934:	sub	r0, r0, #252928	; 0x3dc00
   1b938:	sub	r0, r0, #56360960	; 0x35c0000
   1b93c:	str	r0, [r1, #12]
   1b940:	mov	r0, #0
   1b944:	pop	{r4, sl, fp, pc}
   1b948:	lsl	r0, r3, #8
   1b94c:	bfc	r0, #0, #10
   1b950:	cmp	r0, #56320	; 0xdc00
   1b954:	moveq	r0, #1
   1b958:	popeq	{r4, sl, fp, pc}
   1b95c:	cmp	r0, #55296	; 0xd800
   1b960:	moveq	r0, #2
   1b964:	streq	ip, [r1, #4]
   1b968:	popeq	{r4, sl, fp, pc}
   1b96c:	mov	r0, #0
   1b970:	str	ip, [r1, #12]
   1b974:	pop	{r4, sl, fp, pc}
   1b978:	uxtb	r2, r3
   1b97c:	str	r2, [r1, #12]
   1b980:	str	r0, [r1, #16]
   1b984:	mov	r0, #5
   1b988:	pop	{r4, sl, fp, pc}

0001b98c <myencoding_decode_utf_16le@@Base>:
   1b98c:	ldr	r2, [r1, #20]
   1b990:	cmp	r2, #0
   1b994:	movne	r2, #0
   1b998:	strne	r2, [r1, #20]
   1b99c:	ldr	r2, [r1]
   1b9a0:	cmp	r2, #0
   1b9a4:	streq	r0, [r1]
   1b9a8:	moveq	r0, #2
   1b9ac:	bxeq	lr
   1b9b0:	mov	r3, #0
   1b9b4:	add	r0, r2, r0, lsl #8
   1b9b8:	str	r3, [r1]
   1b9bc:	ldr	r2, [r1, #4]
   1b9c0:	cmp	r2, #0
   1b9c4:	beq	1b9ec <myencoding_decode_utf_16le@@Base+0x60>
   1b9c8:	str	r3, [r1, #4]
   1b9cc:	mov	r3, r0
   1b9d0:	bfc	r3, #0, #10
   1b9d4:	cmp	r3, #56320	; 0xdc00
   1b9d8:	bne	1ba1c <myencoding_decode_utf_16le@@Base+0x90>
   1b9dc:	add	r0, r0, r2, lsl #10
   1b9e0:	sub	r0, r0, #252928	; 0x3dc00
   1b9e4:	sub	r0, r0, #56360960	; 0x35c0000
   1b9e8:	b	1ba10 <myencoding_decode_utf_16le@@Base+0x84>
   1b9ec:	mov	r2, r0
   1b9f0:	bfc	r2, #0, #10
   1b9f4:	cmp	r2, #56320	; 0xdc00
   1b9f8:	moveq	r0, #1
   1b9fc:	bxeq	lr
   1ba00:	cmp	r2, #55296	; 0xd800
   1ba04:	streq	r0, [r1, #4]
   1ba08:	moveq	r0, #2
   1ba0c:	bxeq	lr
   1ba10:	str	r0, [r1, #12]
   1ba14:	mov	r0, #0
   1ba18:	bx	lr
   1ba1c:	ubfx	r2, r0, #8, #8
   1ba20:	uxtb	r0, r0
   1ba24:	str	r0, [r1, #12]
   1ba28:	mov	r0, #5
   1ba2c:	str	r2, [r1, #16]
   1ba30:	bx	lr

0001ba34 <myencoding_decode_x_user_defined@@Base>:
   1ba34:	sxtb	r2, r0
   1ba38:	cmn	r2, #1
   1ba3c:	orrle	r0, r0, #63232	; 0xf700
   1ba40:	str	r0, [r1, #12]
   1ba44:	mov	r0, #0
   1ba48:	bx	lr

0001ba4c <myencoding_result_clean@@Base>:
   1ba4c:	mov	r1, #0
   1ba50:	vmov.i32	q8, #0	; 0x00000000
   1ba54:	mov	r2, #20
   1ba58:	str	r1, [r0, #16]
   1ba5c:	vst1.32	{d16-d17}, [r0], r2
   1ba60:	str	r1, [r0]
   1ba64:	bx	lr

0001ba68 <myencoding_codepoint_ascii_length@@Base>:
   1ba68:	mov	r1, #1
   1ba6c:	cmp	r0, #128	; 0x80
   1ba70:	bcc	1ba88 <myencoding_codepoint_ascii_length@@Base+0x20>
   1ba74:	mov	r1, #2
   1ba78:	cmp	r0, #2048	; 0x800
   1ba7c:	movcs	r1, #3
   1ba80:	cmpcs	r0, #65536	; 0x10000
   1ba84:	bcs	1ba90 <myencoding_codepoint_ascii_length@@Base+0x28>
   1ba88:	mov	r0, r1
   1ba8c:	bx	lr
   1ba90:	mov	r1, #4
   1ba94:	cmp	r0, #2097152	; 0x200000
   1ba98:	movcs	r1, #5
   1ba9c:	cmpcs	r0, #67108864	; 0x4000000
   1baa0:	bcc	1ba88 <myencoding_codepoint_ascii_length@@Base+0x20>
   1baa4:	mov	r1, #0
   1baa8:	cmn	r0, #1
   1baac:	movwgt	r1, #6
   1bab0:	mov	r0, r1
   1bab4:	bx	lr

0001bab8 <myencoding_ascii_utf_8_length@@Base>:
   1bab8:	sxtb	r2, r0
   1babc:	mov	r1, #1
   1bac0:	cmn	r2, #1
   1bac4:	bgt	1bb14 <myencoding_ascii_utf_8_length@@Base+0x5c>
   1bac8:	and	r2, r0, #224	; 0xe0
   1bacc:	mov	r1, #2
   1bad0:	cmp	r2, #192	; 0xc0
   1bad4:	beq	1bb14 <myencoding_ascii_utf_8_length@@Base+0x5c>
   1bad8:	and	r2, r0, #240	; 0xf0
   1badc:	mov	r1, #3
   1bae0:	cmp	r2, #224	; 0xe0
   1bae4:	beq	1bb14 <myencoding_ascii_utf_8_length@@Base+0x5c>
   1bae8:	and	r2, r0, #248	; 0xf8
   1baec:	mov	r1, #4
   1baf0:	cmp	r2, #240	; 0xf0
   1baf4:	beq	1bb14 <myencoding_ascii_utf_8_length@@Base+0x5c>
   1baf8:	and	r2, r0, #252	; 0xfc
   1bafc:	mov	r1, #5
   1bb00:	cmp	r2, #248	; 0xf8
   1bb04:	beq	1bb14 <myencoding_ascii_utf_8_length@@Base+0x5c>
   1bb08:	mov	r1, #0
   1bb0c:	cmp	r0, #252	; 0xfc
   1bb10:	movweq	r1, #6
   1bb14:	mov	r0, r1
   1bb18:	bx	lr

0001bb1c <myencoding_codepoint_to_ascii_utf_8@@Base>:
   1bb1c:	cmp	r0, #127	; 0x7f
   1bb20:	movls	r2, #1
   1bb24:	strbls	r0, [r1]
   1bb28:	movls	r0, r2
   1bb2c:	bxls	lr
   1bb30:	mov	r2, #0
   1bb34:	cmp	r2, r0, lsr #11
   1bb38:	bne	1bb60 <myencoding_codepoint_to_ascii_utf_8@@Base+0x44>
   1bb3c:	mov	r2, #2
   1bb40:	mov	r3, r0
   1bb44:	bfi	r3, r2, #6, #26
   1bb48:	strb	r3, [r1, #1]
   1bb4c:	mov	r3, #192	; 0xc0
   1bb50:	orr	r0, r3, r0, lsr #6
   1bb54:	strb	r0, [r1]
   1bb58:	mov	r0, r2
   1bb5c:	bx	lr
   1bb60:	cmp	r2, r0, lsr #16
   1bb64:	bne	1bb98 <myencoding_codepoint_to_ascii_utf_8@@Base+0x7c>
   1bb68:	mov	r2, #224	; 0xe0
   1bb6c:	lsr	r3, r0, #6
   1bb70:	orr	r2, r2, r0, lsr #12
   1bb74:	strb	r2, [r1]
   1bb78:	mov	r2, #2
   1bb7c:	bfi	r0, r2, #6, #26
   1bb80:	bfi	r3, r2, #6, #26
   1bb84:	mov	r2, #3
   1bb88:	strb	r0, [r1, #2]
   1bb8c:	mov	r0, r2
   1bb90:	strb	r3, [r1, #1]
   1bb94:	bx	lr
   1bb98:	mov	r2, #0
   1bb9c:	cmp	r2, r0, lsr #21
   1bba0:	bne	1bbdc <myencoding_codepoint_to_ascii_utf_8@@Base+0xc0>
   1bba4:	mov	r2, #240	; 0xf0
   1bba8:	mov	r3, r0
   1bbac:	orr	r2, r2, r0, lsr #18
   1bbb0:	strb	r2, [r1]
   1bbb4:	mov	r2, #2
   1bbb8:	bfi	r3, r2, #6, #26
   1bbbc:	strb	r3, [r1, #3]
   1bbc0:	lsr	r3, r0, #12
   1bbc4:	lsr	r0, r0, #6
   1bbc8:	bfi	r3, r2, #6, #26
   1bbcc:	bfi	r0, r2, #6, #26
   1bbd0:	mov	r2, #4
   1bbd4:	strb	r3, [r1, #1]
   1bbd8:	strb	r0, [r1, #2]
   1bbdc:	mov	r0, r2
   1bbe0:	bx	lr

0001bbe4 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base>:
   1bbe4:	cmp	r0, #127	; 0x7f
   1bbe8:	bhi	1bc08 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x24>
   1bbec:	ldr	r2, [pc, #200]	; 1bcbc <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xd8>
   1bbf0:	add	r2, pc, r2
   1bbf4:	ldrb	r0, [r2, r0]
   1bbf8:	mov	r2, #1
   1bbfc:	strb	r0, [r1]
   1bc00:	mov	r0, r2
   1bc04:	bx	lr
   1bc08:	mov	r2, #0
   1bc0c:	cmp	r2, r0, lsr #11
   1bc10:	bne	1bc38 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x54>
   1bc14:	mov	r2, #2
   1bc18:	mov	r3, r0
   1bc1c:	bfi	r3, r2, #6, #26
   1bc20:	strb	r3, [r1, #1]
   1bc24:	mov	r3, #192	; 0xc0
   1bc28:	orr	r0, r3, r0, lsr #6
   1bc2c:	strb	r0, [r1]
   1bc30:	mov	r0, r2
   1bc34:	bx	lr
   1bc38:	cmp	r2, r0, lsr #16
   1bc3c:	bne	1bc70 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x8c>
   1bc40:	mov	r2, #224	; 0xe0
   1bc44:	lsr	r3, r0, #6
   1bc48:	orr	r2, r2, r0, lsr #12
   1bc4c:	strb	r2, [r1]
   1bc50:	mov	r2, #2
   1bc54:	bfi	r0, r2, #6, #26
   1bc58:	bfi	r3, r2, #6, #26
   1bc5c:	mov	r2, #3
   1bc60:	strb	r0, [r1, #2]
   1bc64:	mov	r0, r2
   1bc68:	strb	r3, [r1, #1]
   1bc6c:	bx	lr
   1bc70:	mov	r2, #0
   1bc74:	cmp	r2, r0, lsr #21
   1bc78:	bne	1bcb4 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xd0>
   1bc7c:	mov	r2, #240	; 0xf0
   1bc80:	mov	r3, r0
   1bc84:	orr	r2, r2, r0, lsr #18
   1bc88:	strb	r2, [r1]
   1bc8c:	mov	r2, #2
   1bc90:	bfi	r3, r2, #6, #26
   1bc94:	strb	r3, [r1, #3]
   1bc98:	lsr	r3, r0, #12
   1bc9c:	lsr	r0, r0, #6
   1bca0:	bfi	r3, r2, #6, #26
   1bca4:	bfi	r0, r2, #6, #26
   1bca8:	mov	r2, #4
   1bcac:	strb	r3, [r1, #1]
   1bcb0:	strb	r0, [r1, #2]
   1bcb4:	mov	r0, r2
   1bcb8:	bx	lr
   1bcbc:	andeq	r0, r5, r4, lsr #31

0001bcc0 <myencoding_ascii_utf_8_to_codepoint@@Base>:
   1bcc0:	ldrsb	r2, [r0]
   1bcc4:	uxtb	r3, r2
   1bcc8:	cmn	r2, #1
   1bccc:	ble	1bcd8 <myencoding_ascii_utf_8_to_codepoint@@Base+0x18>
   1bcd0:	mov	r2, #1
   1bcd4:	b	1bd78 <myencoding_ascii_utf_8_to_codepoint@@Base+0xb8>
   1bcd8:	and	r2, r3, #224	; 0xe0
   1bcdc:	cmp	r2, #192	; 0xc0
   1bce0:	bne	1bcf8 <myencoding_ascii_utf_8_to_codepoint@@Base+0x38>
   1bce4:	mov	r2, #4032	; 0xfc0
   1bce8:	mov	ip, #1
   1bcec:	and	r3, r2, r3, lsl #6
   1bcf0:	mov	r2, #2
   1bcf4:	b	1bd68 <myencoding_ascii_utf_8_to_codepoint@@Base+0xa8>
   1bcf8:	and	r2, r3, #240	; 0xf0
   1bcfc:	cmp	r2, #224	; 0xe0
   1bd00:	bne	1bd28 <myencoding_ascii_utf_8_to_codepoint@@Base+0x68>
   1bd04:	mov	r2, #126976	; 0x1f000
   1bd08:	mov	ip, #2
   1bd0c:	and	r2, r2, r3, lsl #12
   1bd10:	str	r2, [r1]
   1bd14:	ldrb	r3, [r0, #1]
   1bd18:	and	r3, r3, #127	; 0x7f
   1bd1c:	orr	r3, r2, r3, lsl #6
   1bd20:	mov	r2, #3
   1bd24:	b	1bd68 <myencoding_ascii_utf_8_to_codepoint@@Base+0xa8>
   1bd28:	and	ip, r3, #248	; 0xf8
   1bd2c:	mov	r2, #0
   1bd30:	cmp	ip, #240	; 0xf0
   1bd34:	bne	1bd7c <myencoding_ascii_utf_8_to_codepoint@@Base+0xbc>
   1bd38:	mov	r2, #3932160	; 0x3c0000
   1bd3c:	mov	ip, #3
   1bd40:	and	r2, r2, r3, lsl #18
   1bd44:	str	r2, [r1]
   1bd48:	ldrb	r3, [r0, #1]
   1bd4c:	and	r3, r3, #127	; 0x7f
   1bd50:	orr	r2, r2, r3, lsl #12
   1bd54:	str	r2, [r1]
   1bd58:	ldrb	r3, [r0, #2]
   1bd5c:	and	r3, r3, #127	; 0x7f
   1bd60:	orr	r3, r2, r3, lsl #6
   1bd64:	mov	r2, #4
   1bd68:	str	r3, [r1]
   1bd6c:	ldrb	r0, [r0, ip]
   1bd70:	and	r0, r0, #127	; 0x7f
   1bd74:	orr	r3, r3, r0
   1bd78:	str	r3, [r1]
   1bd7c:	mov	r0, r2
   1bd80:	bx	lr

0001bd84 <myencoding_codepoint_to_ascii_utf_16@@Base>:
   1bd84:	cmp	r0, #65536	; 0x10000
   1bd88:	bcc	1bdbc <myencoding_codepoint_to_ascii_utf_16@@Base+0x38>
   1bd8c:	sub	r0, r0, #65536	; 0x10000
   1bd90:	mov	r2, #216	; 0xd8
   1bd94:	mov	r3, #55	; 0x37
   1bd98:	orr	r2, r2, r0, lsr #18
   1bd9c:	strb	r0, [r1, #3]
   1bda0:	strb	r2, [r1]
   1bda4:	lsr	r2, r0, #8
   1bda8:	lsr	r0, r0, #10
   1bdac:	bfi	r2, r3, #2, #30
   1bdb0:	strb	r2, [r1, #2]
   1bdb4:	mov	r2, #4
   1bdb8:	b	1bdc8 <myencoding_codepoint_to_ascii_utf_16@@Base+0x44>
   1bdbc:	lsr	r2, r0, #8
   1bdc0:	strb	r2, [r1]
   1bdc4:	mov	r2, #2
   1bdc8:	strb	r0, [r1, #1]
   1bdcc:	mov	r0, r2
   1bdd0:	bx	lr

0001bdd4 <myencoding_convert_to_ascii_utf_8@@Base>:
   1bdd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bdd8:	add	fp, sp, #28
   1bddc:	sub	sp, sp, #36	; 0x24
   1bde0:	mov	r6, r0
   1bde4:	ldr	r0, [r0]
   1bde8:	mov	r8, r3
   1bdec:	mov	sl, r2
   1bdf0:	mov	r9, r1
   1bdf4:	cmp	r0, #0
   1bdf8:	bne	1be18 <myencoding_convert_to_ascii_utf_8@@Base+0x44>
   1bdfc:	add	r0, sl, #1
   1be00:	mov	r7, #0
   1be04:	stmib	r6, {r0, r7}
   1be08:	bl	119c8 <mycore_malloc@plt>
   1be0c:	cmp	r0, #0
   1be10:	str	r0, [r6]
   1be14:	beq	1bf84 <myencoding_convert_to_ascii_utf_8@@Base+0x1b0>
   1be18:	vmov.i32	q8, #0	; 0x00000000
   1be1c:	mov	r0, #20
   1be20:	add	r1, sp, #8
   1be24:	mov	r7, #0
   1be28:	cmp	sl, #0
   1be2c:	vst1.64	{d16-d17}, [r1], r0
   1be30:	str	r7, [sp, #24]
   1be34:	str	r7, [r1]
   1be38:	beq	1bf84 <myencoding_convert_to_ascii_utf_8@@Base+0x1b0>
   1be3c:	ldr	r0, [pc, #340]	; 1bf98 <myencoding_convert_to_ascii_utf_8@@Base+0x1c4>
   1be40:	mov	r5, #0
   1be44:	mov	r7, #0
   1be48:	add	r0, pc, r0
   1be4c:	ldr	r4, [r0, r8, lsl #2]
   1be50:	lsr	r0, sl, #1
   1be54:	add	r8, sp, #8
   1be58:	str	r0, [sp, #4]
   1be5c:	ldrb	r0, [r9, r7]
   1be60:	mov	r1, r8
   1be64:	blx	r4
   1be68:	cmp	r0, #0
   1be6c:	bne	1bf78 <myencoding_convert_to_ascii_utf_8@@Base+0x1a4>
   1be70:	ldr	r1, [r6, #8]
   1be74:	ldr	r2, [r6, #4]
   1be78:	add	r0, r1, #6
   1be7c:	cmp	r0, r2
   1be80:	bcs	1be8c <myencoding_convert_to_ascii_utf_8@@Base+0xb8>
   1be84:	ldr	r0, [r6]
   1be88:	b	1beb4 <myencoding_convert_to_ascii_utf_8@@Base+0xe0>
   1be8c:	ldr	r1, [sp, #4]
   1be90:	add	r5, r0, r1
   1be94:	ldr	r0, [r6]
   1be98:	mov	r1, r5
   1be9c:	bl	10db0 <mycore_realloc@plt>
   1bea0:	cmp	r0, #0
   1bea4:	beq	1bf90 <myencoding_convert_to_ascii_utf_8@@Base+0x1bc>
   1bea8:	stm	r6, {r0, r5}
   1beac:	mov	r5, #0
   1beb0:	ldr	r1, [r6, #8]
   1beb4:	add	r0, r0, r1
   1beb8:	ldr	r1, [sp, #20]
   1bebc:	cmp	r1, #127	; 0x7f
   1bec0:	bhi	1bed0 <myencoding_convert_to_ascii_utf_8@@Base+0xfc>
   1bec4:	strb	r1, [r0]
   1bec8:	mov	r2, #1
   1becc:	b	1bf6c <myencoding_convert_to_ascii_utf_8@@Base+0x198>
   1bed0:	cmp	r5, r1, lsr #11
   1bed4:	bne	1bef4 <myencoding_convert_to_ascii_utf_8@@Base+0x120>
   1bed8:	mov	r3, #192	; 0xc0
   1bedc:	mov	r2, #2
   1bee0:	orr	r3, r3, r1, lsr #6
   1bee4:	bfi	r1, r2, #6, #26
   1bee8:	strb	r1, [r0, #1]
   1beec:	strb	r3, [r0]
   1bef0:	b	1bf6c <myencoding_convert_to_ascii_utf_8@@Base+0x198>
   1bef4:	cmp	r5, r1, lsr #16
   1bef8:	bne	1bf28 <myencoding_convert_to_ascii_utf_8@@Base+0x154>
   1befc:	mov	r2, #224	; 0xe0
   1bf00:	mov	r3, #2
   1bf04:	orr	r2, r2, r1, lsr #12
   1bf08:	strb	r2, [r0]
   1bf0c:	lsr	r2, r1, #6
   1bf10:	bfi	r1, r3, #6, #26
   1bf14:	bfi	r2, r3, #6, #26
   1bf18:	strb	r1, [r0, #2]
   1bf1c:	strb	r2, [r0, #1]
   1bf20:	mov	r2, #3
   1bf24:	b	1bf6c <myencoding_convert_to_ascii_utf_8@@Base+0x198>
   1bf28:	mov	r2, #0
   1bf2c:	cmp	r2, r1, lsr #21
   1bf30:	bne	1bf6c <myencoding_convert_to_ascii_utf_8@@Base+0x198>
   1bf34:	mov	r2, #240	; 0xf0
   1bf38:	mov	r3, #2
   1bf3c:	orr	r2, r2, r1, lsr #18
   1bf40:	strb	r2, [r0]
   1bf44:	mov	r2, r1
   1bf48:	bfi	r2, r3, #6, #26
   1bf4c:	strb	r2, [r0, #3]
   1bf50:	lsr	r2, r1, #12
   1bf54:	lsr	r1, r1, #6
   1bf58:	bfi	r2, r3, #6, #26
   1bf5c:	bfi	r1, r3, #6, #26
   1bf60:	strb	r2, [r0, #1]
   1bf64:	mov	r2, #4
   1bf68:	strb	r1, [r0, #2]
   1bf6c:	ldr	r0, [r6, #8]
   1bf70:	add	r0, r0, r2
   1bf74:	str	r0, [r6, #8]
   1bf78:	add	r7, r7, #1
   1bf7c:	cmp	r7, sl
   1bf80:	bcc	1be5c <myencoding_convert_to_ascii_utf_8@@Base+0x88>
   1bf84:	mov	r0, r7
   1bf88:	sub	sp, fp, #28
   1bf8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bf90:	mov	r7, #0
   1bf94:	b	1bf84 <myencoding_convert_to_ascii_utf_8@@Base+0x1b0>
   1bf98:	strdeq	sl, [pc], -r4

0001bf9c <myencoding_string_append@@Base>:
   1bf9c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1bfa0:	add	fp, sp, #24
   1bfa4:	sub	sp, sp, #32
   1bfa8:	add	r8, sp, #8
   1bfac:	mov	r7, r0
   1bfb0:	mov	r4, r3
   1bfb4:	mov	r5, r2
   1bfb8:	mov	r6, r1
   1bfbc:	mov	r0, r8
   1bfc0:	bl	11224 <myencoding_result_clean@plt>
   1bfc4:	mov	r0, r7
   1bfc8:	mov	r1, r8
   1bfcc:	mov	r2, r6
   1bfd0:	mov	r3, r5
   1bfd4:	str	r4, [sp]
   1bfd8:	bl	10dec <myencoding_string_append_chunk@plt>
   1bfdc:	sub	sp, fp, #24
   1bfe0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001bfe4 <myencoding_string_append_chunk@@Base>:
   1bfe4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1bfe8:	add	fp, sp, #24
   1bfec:	mov	r4, r0
   1bff0:	ldr	r0, [fp, #8]
   1bff4:	mov	r5, r3
   1bff8:	mov	r6, r2
   1bffc:	mov	r7, r1
   1c000:	bl	11698 <myencoding_get_function_by_id@plt>
   1c004:	cmp	r5, #0
   1c008:	beq	1c06c <myencoding_string_append_chunk@@Base+0x88>
   1c00c:	mov	r8, r0
   1c010:	ldrb	r0, [r6]
   1c014:	mov	r1, r7
   1c018:	blx	r8
   1c01c:	cmp	r0, #0
   1c020:	bne	1c060 <myencoding_string_append_chunk@@Base+0x7c>
   1c024:	ldr	r0, [r4, #8]
   1c028:	ldr	r2, [r4, #4]
   1c02c:	add	r1, r0, #5
   1c030:	cmp	r1, r2
   1c034:	bcc	1c044 <myencoding_string_append_chunk@@Base+0x60>
   1c038:	mov	r0, r4
   1c03c:	bl	11794 <mycore_string_realloc@plt>
   1c040:	ldr	r0, [r4, #8]
   1c044:	ldr	r1, [r4]
   1c048:	add	r1, r1, r0
   1c04c:	ldr	r0, [r7, #12]
   1c050:	bl	11b3c <myencoding_codepoint_to_ascii_utf_8@plt>
   1c054:	ldr	r1, [r4, #8]
   1c058:	add	r0, r1, r0
   1c05c:	str	r0, [r4, #8]
   1c060:	subs	r5, r5, #1
   1c064:	add	r6, r6, #1
   1c068:	bne	1c010 <myencoding_string_append_chunk@@Base+0x2c>
   1c06c:	ldr	r1, [r4, #4]
   1c070:	ldr	r0, [r4, #8]
   1c074:	cmp	r0, r1
   1c078:	bcc	1c08c <myencoding_string_append_chunk@@Base+0xa8>
   1c07c:	add	r1, r0, #1
   1c080:	mov	r0, r4
   1c084:	bl	11794 <mycore_string_realloc@plt>
   1c088:	ldr	r0, [r4, #8]
   1c08c:	ldr	r1, [r4]
   1c090:	mov	r2, #0
   1c094:	strb	r2, [r1, r0]
   1c098:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001c09c <myencoding_string_append_one@@Base>:
   1c09c:	push	{r4, r5, r6, sl, fp, lr}
   1c0a0:	add	fp, sp, #16
   1c0a4:	mov	r4, r0
   1c0a8:	mov	r0, r3
   1c0ac:	mov	r6, r2
   1c0b0:	mov	r5, r1
   1c0b4:	bl	11698 <myencoding_get_function_by_id@plt>
   1c0b8:	mov	r2, r0
   1c0bc:	mov	r0, r6
   1c0c0:	mov	r1, r5
   1c0c4:	blx	r2
   1c0c8:	cmp	r0, #0
   1c0cc:	popne	{r4, r5, r6, sl, fp, pc}
   1c0d0:	ldr	r0, [r4, #8]
   1c0d4:	ldr	r2, [r4, #4]
   1c0d8:	add	r1, r0, #5
   1c0dc:	cmp	r1, r2
   1c0e0:	bcc	1c0f0 <myencoding_string_append_one@@Base+0x54>
   1c0e4:	mov	r0, r4
   1c0e8:	bl	11794 <mycore_string_realloc@plt>
   1c0ec:	ldr	r0, [r4, #8]
   1c0f0:	ldr	r1, [r4]
   1c0f4:	add	r1, r1, r0
   1c0f8:	ldr	r0, [r5, #12]
   1c0fc:	bl	11b3c <myencoding_codepoint_to_ascii_utf_8@plt>
   1c100:	ldr	r2, [r4, #8]
   1c104:	ldr	r1, [r4]
   1c108:	add	r0, r2, r0
   1c10c:	mov	r2, #0
   1c110:	str	r0, [r4, #8]
   1c114:	strb	r2, [r1, r0]
   1c118:	pop	{r4, r5, r6, sl, fp, pc}

0001c11c <myencoding_string_append_lowercase_ascii@@Base>:
   1c11c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c120:	add	fp, sp, #24
   1c124:	sub	sp, sp, #32
   1c128:	add	r8, sp, #8
   1c12c:	mov	r7, r0
   1c130:	mov	r4, r3
   1c134:	mov	r5, r2
   1c138:	mov	r6, r1
   1c13c:	mov	r0, r8
   1c140:	bl	11224 <myencoding_result_clean@plt>
   1c144:	mov	r0, r7
   1c148:	mov	r1, r8
   1c14c:	mov	r2, r6
   1c150:	mov	r3, r5
   1c154:	str	r4, [sp]
   1c158:	bl	119bc <myencoding_string_append_chunk_lowercase_ascii@plt>
   1c15c:	sub	sp, fp, #24
   1c160:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001c164 <myencoding_string_append_chunk_lowercase_ascii@@Base>:
   1c164:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1c168:	add	fp, sp, #24
   1c16c:	mov	r4, r0
   1c170:	ldr	r0, [fp, #8]
   1c174:	mov	r5, r3
   1c178:	mov	r6, r2
   1c17c:	mov	r7, r1
   1c180:	bl	11698 <myencoding_get_function_by_id@plt>
   1c184:	cmp	r5, #0
   1c188:	beq	1c214 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xb0>
   1c18c:	ldr	r9, [pc, #176]	; 1c244 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xe0>
   1c190:	mov	r8, r0
   1c194:	add	r9, pc, r9
   1c198:	ldrb	r0, [r6]
   1c19c:	mov	r1, r7
   1c1a0:	blx	r8
   1c1a4:	cmp	r0, #0
   1c1a8:	bne	1c208 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xa4>
   1c1ac:	ldr	r0, [r4, #8]
   1c1b0:	ldr	r1, [r4, #4]
   1c1b4:	add	r2, r0, #5
   1c1b8:	cmp	r2, r1
   1c1bc:	bcc	1c1d0 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x6c>
   1c1c0:	add	r1, r0, #6
   1c1c4:	mov	r0, r4
   1c1c8:	bl	11794 <mycore_string_realloc@plt>
   1c1cc:	ldr	r0, [r4, #8]
   1c1d0:	ldr	r1, [r4]
   1c1d4:	add	r1, r1, r0
   1c1d8:	ldr	r0, [r7, #12]
   1c1dc:	bl	11b3c <myencoding_codepoint_to_ascii_utf_8@plt>
   1c1e0:	cmp	r0, #1
   1c1e4:	bne	1c1fc <myencoding_string_append_chunk_lowercase_ascii@@Base+0x98>
   1c1e8:	ldrb	r1, [r6]
   1c1ec:	ldr	r2, [r4]
   1c1f0:	ldr	r3, [r4, #8]
   1c1f4:	ldrb	r1, [r9, r1]
   1c1f8:	strb	r1, [r2, r3]
   1c1fc:	ldr	r1, [r4, #8]
   1c200:	add	r0, r1, r0
   1c204:	str	r0, [r4, #8]
   1c208:	subs	r5, r5, #1
   1c20c:	add	r6, r6, #1
   1c210:	bne	1c198 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x34>
   1c214:	ldr	r1, [r4, #4]
   1c218:	ldr	r0, [r4, #8]
   1c21c:	cmp	r0, r1
   1c220:	bcc	1c234 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xd0>
   1c224:	add	r1, r0, #1
   1c228:	mov	r0, r4
   1c22c:	bl	11794 <mycore_string_realloc@plt>
   1c230:	ldr	r0, [r4, #8]
   1c234:	ldr	r1, [r4]
   1c238:	mov	r2, #0
   1c23c:	strb	r2, [r1, r0]
   1c240:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1c244:	andeq	fp, r7, r0, ror #26

0001c248 <myhtml_callback_before_token_done@@Base>:
   1c248:	ldr	r0, [r0, #220]	; 0xdc
   1c24c:	bx	lr

0001c250 <myhtml_callback_after_token_done@@Base>:
   1c250:	ldr	r0, [r0, #224]	; 0xe0
   1c254:	bx	lr

0001c258 <myhtml_callback_before_token_done_set@@Base>:
   1c258:	str	r2, [r0, #228]	; 0xe4
   1c25c:	str	r1, [r0, #220]	; 0xdc
   1c260:	bx	lr

0001c264 <myhtml_callback_after_token_done_set@@Base>:
   1c264:	str	r2, [r0, #232]	; 0xe8
   1c268:	str	r1, [r0, #224]	; 0xe0
   1c26c:	bx	lr

0001c270 <myhtml_callback_tree_node_insert@@Base>:
   1c270:	ldr	r0, [r0, #236]	; 0xec
   1c274:	bx	lr

0001c278 <myhtml_callback_tree_node_remove@@Base>:
   1c278:	ldr	r0, [r0, #240]	; 0xf0
   1c27c:	bx	lr

0001c280 <myhtml_callback_tree_node_insert_set@@Base>:
   1c280:	str	r2, [r0, #244]	; 0xf4
   1c284:	str	r1, [r0, #236]	; 0xec
   1c288:	bx	lr

0001c28c <myhtml_callback_tree_node_remove_set@@Base>:
   1c28c:	str	r2, [r0, #248]	; 0xf8
   1c290:	str	r1, [r0, #240]	; 0xf0
   1c294:	bx	lr

0001c298 <myhtml_charef_find@@Base>:
   1c298:	push	{r4, r5, r6, r7, fp, lr}
   1c29c:	add	fp, sp, #16
   1c2a0:	ldrb	r4, [r0]
   1c2a4:	ldr	lr, [pc, #160]	; 1c34c <myhtml_charef_find@@Base+0xb4>
   1c2a8:	mov	ip, r0
   1c2ac:	add	lr, pc, lr
   1c2b0:	add	r5, r4, r4, lsl #1
   1c2b4:	mov	r0, lr
   1c2b8:	ldrb	r6, [r0, r5, lsl #3]!
   1c2bc:	cmp	r6, #0
   1c2c0:	beq	1c320 <myhtml_charef_find@@Base+0x88>
   1c2c4:	ldr	r5, [r1]
   1c2c8:	ldrb	r7, [ip, r5]
   1c2cc:	uxtb	r6, r6
   1c2d0:	cmp	r6, r7
   1c2d4:	bne	1c300 <myhtml_charef_find@@Base+0x68>
   1c2d8:	add	r5, r5, #1
   1c2dc:	add	r4, r4, r4, lsl #1
   1c2e0:	add	r6, lr, r4, lsl #3
   1c2e4:	cmp	r5, r2
   1c2e8:	str	r5, [r1]
   1c2ec:	bcs	1c33c <myhtml_charef_find@@Base+0xa4>
   1c2f0:	ldr	r4, [r6, #4]
   1c2f4:	cmp	r4, #0
   1c2f8:	bne	1c30c <myhtml_charef_find@@Base+0x74>
   1c2fc:	b	1c33c <myhtml_charef_find@@Base+0xa4>
   1c300:	cmp	r7, r6
   1c304:	bls	1c320 <myhtml_charef_find@@Base+0x88>
   1c308:	add	r4, r4, #1
   1c30c:	add	r6, r4, r4, lsl #1
   1c310:	mov	r0, lr
   1c314:	ldrb	r6, [r0, r6, lsl #3]!
   1c318:	cmp	r6, #0
   1c31c:	bne	1c2c8 <myhtml_charef_find@@Base+0x30>
   1c320:	cmp	r3, #0
   1c324:	popeq	{r4, r5, r6, r7, fp, pc}
   1c328:	add	r1, r4, r4, lsl #1
   1c32c:	add	r1, lr, r1, lsl #3
   1c330:	ldr	r1, [r1, #20]
   1c334:	str	r1, [r3]
   1c338:	pop	{r4, r5, r6, r7, fp, pc}
   1c33c:	cmp	r3, #0
   1c340:	beq	1c338 <myhtml_charef_find@@Base+0xa0>
   1c344:	ldr	r1, [r6, #20]
   1c348:	b	1c334 <myhtml_charef_find@@Base+0x9c>
   1c34c:	andeq	fp, r7, r8, asr #26

0001c350 <myhtml_charef_get_first_position@@Base>:
   1c350:	ldr	r1, [pc, #12]	; 1c364 <myhtml_charef_get_first_position@@Base+0x14>
   1c354:	add	r0, r0, r0, lsl #1
   1c358:	add	r1, pc, r1
   1c35c:	add	r0, r1, r0, lsl #3
   1c360:	bx	lr
   1c364:	muleq	r7, ip, ip

0001c368 <myhtml_charef_find_by_pos@@Base>:
   1c368:	push	{r4, r5, r6, r7, fp, lr}
   1c36c:	add	fp, sp, #16
   1c370:	mov	ip, r0
   1c374:	ldr	r0, [r2]
   1c378:	ldr	lr, [fp, #8]
   1c37c:	ldrb	r0, [r1, r0]
   1c380:	cmp	r0, #38	; 0x26
   1c384:	bne	1c3bc <myhtml_charef_find_by_pos@@Base+0x54>
   1c388:	mov	r0, #1
   1c38c:	str	r0, [lr, #12]
   1c390:	ldr	r0, [lr]
   1c394:	ldr	r1, [r0, #20]
   1c398:	cmp	r1, #0
   1c39c:	popne	{r4, r5, r6, r7, fp, pc}
   1c3a0:	ldr	r0, [lr, #4]
   1c3a4:	cmp	r0, #0
   1c3a8:	ldreq	r0, [pc, #276]	; 1c4c4 <myhtml_charef_find_by_pos@@Base+0x15c>
   1c3ac:	ldrne	r1, [lr, #8]
   1c3b0:	addeq	r0, pc, r0
   1c3b4:	strne	r1, [r2]
   1c3b8:	pop	{r4, r5, r6, r7, fp, pc}
   1c3bc:	mov	r0, #0
   1c3c0:	add	r5, ip, ip, lsl #1
   1c3c4:	str	r0, [lr, #12]
   1c3c8:	ldr	r4, [pc, #248]	; 1c4c8 <myhtml_charef_find_by_pos@@Base+0x160>
   1c3cc:	add	r4, pc, r4
   1c3d0:	b	1c3d8 <myhtml_charef_find_by_pos@@Base+0x70>
   1c3d4:	add	r5, ip, ip, lsl #1
   1c3d8:	mov	r0, r4
   1c3dc:	ldrb	r5, [r0, r5, lsl #3]!
   1c3e0:	cmp	r5, #0
   1c3e4:	beq	1c45c <myhtml_charef_find_by_pos@@Base+0xf4>
   1c3e8:	ldr	r6, [r2]
   1c3ec:	uxtb	r5, r5
   1c3f0:	ldrb	r7, [r1, r6]
   1c3f4:	cmp	r5, r7
   1c3f8:	bne	1c44c <myhtml_charef_find_by_pos@@Base+0xe4>
   1c3fc:	cmp	r5, #59	; 0x3b
   1c400:	beq	1c480 <myhtml_charef_find_by_pos@@Base+0x118>
   1c404:	add	r7, ip, ip, lsl #1
   1c408:	add	r5, r6, #1
   1c40c:	add	r6, r4, r7, lsl #3
   1c410:	str	r5, [r2]
   1c414:	ldr	ip, [r6, #4]
   1c418:	cmp	ip, #0
   1c41c:	beq	1c484 <myhtml_charef_find_by_pos@@Base+0x11c>
   1c420:	cmp	r5, r3
   1c424:	bcs	1c490 <myhtml_charef_find_by_pos@@Base+0x128>
   1c428:	ldrb	r7, [r1, r5]
   1c42c:	cmp	r7, #38	; 0x26
   1c430:	beq	1c4a8 <myhtml_charef_find_by_pos@@Base+0x140>
   1c434:	ldr	r6, [r6, #20]
   1c438:	cmp	r6, #0
   1c43c:	beq	1c3d4 <myhtml_charef_find_by_pos@@Base+0x6c>
   1c440:	stmib	lr, {r0, r5}
   1c444:	add	r5, ip, ip, lsl #1
   1c448:	b	1c3d8 <myhtml_charef_find_by_pos@@Base+0x70>
   1c44c:	cmp	r7, r5
   1c450:	bls	1c45c <myhtml_charef_find_by_pos@@Base+0xf4>
   1c454:	add	ip, ip, #1
   1c458:	b	1c3d4 <myhtml_charef_find_by_pos@@Base+0x6c>
   1c45c:	mov	r0, #1
   1c460:	str	r0, [lr, #12]
   1c464:	ldr	r1, [lr, #4]
   1c468:	mov	r0, r4
   1c46c:	cmp	r1, #0
   1c470:	ldrne	r0, [lr, #8]
   1c474:	strne	r0, [r2]
   1c478:	movne	r0, r1
   1c47c:	pop	{r4, r5, r6, r7, fp, pc}
   1c480:	str	r0, [lr]
   1c484:	mov	r1, #1
   1c488:	str	r1, [lr, #12]
   1c48c:	pop	{r4, r5, r6, r7, fp, pc}
   1c490:	ldr	r1, [r6, #20]
   1c494:	str	r0, [lr]
   1c498:	cmp	r1, #0
   1c49c:	stmibne	lr, {r0, r5}
   1c4a0:	popne	{r4, r5, r6, r7, fp, pc}
   1c4a4:	pop	{r4, r5, r6, r7, fp, pc}
   1c4a8:	mov	r1, #1
   1c4ac:	str	r0, [lr]
   1c4b0:	str	r1, [lr, #12]
   1c4b4:	ldr	r1, [r6, #20]
   1c4b8:	cmp	r1, #0
   1c4bc:	bne	1c47c <myhtml_charef_find_by_pos@@Base+0x114>
   1c4c0:	b	1c464 <myhtml_charef_find_by_pos@@Base+0xfc>
   1c4c4:	andeq	fp, r7, r4, asr #24
   1c4c8:	andeq	fp, r7, r8, lsr #24

0001c4cc <myhtml_data_process_entry_clean@@Base>:
   1c4cc:	vmov.i32	q8, #0	; 0x00000000
   1c4d0:	add	r1, r0, #48	; 0x30
   1c4d4:	vst1.32	{d16-d17}, [r1]
   1c4d8:	add	r1, r0, #36	; 0x24
   1c4dc:	vst1.32	{d16-d17}, [r1]
   1c4e0:	add	r1, r0, #4
   1c4e4:	vst1.32	{d16-d17}, [r1]
   1c4e8:	ldr	r1, [pc, #12]	; 1c4fc <myhtml_data_process_entry_clean@@Base+0x30>
   1c4ec:	ldr	r1, [pc, r1]
   1c4f0:	str	r1, [r0], #20
   1c4f4:	vst1.32	{d16-d17}, [r0]
   1c4f8:	bx	lr
   1c4fc:	ldrdeq	pc, [pc], -r8

0001c500 <myhtml_data_process_state_data@@Base>:
   1c500:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c504:	add	fp, sp, #28
   1c508:	sub	sp, sp, #12
   1c50c:	mov	sl, r0
   1c510:	ldr	r0, [fp, #8]
   1c514:	mov	r5, r3
   1c518:	mov	r9, r2
   1c51c:	mov	r8, r1
   1c520:	mov	r6, r3
   1c524:	cmp	r3, r0
   1c528:	bcs	1c550 <myhtml_data_process_state_data@@Base+0x50>
   1c52c:	add	r4, r9, r5
   1c530:	mov	r7, #0
   1c534:	ldrb	r1, [r4, r7]
   1c538:	cmp	r1, #38	; 0x26
   1c53c:	beq	1c59c <myhtml_data_process_state_data@@Base+0x9c>
   1c540:	add	r7, r7, #1
   1c544:	add	r6, r5, r7
   1c548:	cmp	r6, r0
   1c54c:	bcc	1c534 <myhtml_data_process_state_data@@Base+0x34>
   1c550:	ldr	r3, [sl, #32]
   1c554:	add	r1, r9, r5
   1c558:	sub	r2, r6, r5
   1c55c:	mov	r0, r8
   1c560:	bl	11968 <myhtml_string_before_append_any_preprocessing@plt>
   1c564:	add	r0, r0, r5
   1c568:	cmp	r6, r0
   1c56c:	beq	1c688 <myhtml_data_process_state_data@@Base+0x188>
   1c570:	ldr	r1, [sl, #4]
   1c574:	cmp	r1, #0
   1c578:	beq	1c5f4 <myhtml_data_process_state_data@@Base+0xf4>
   1c57c:	ldrb	r2, [sl, #61]	; 0x3d
   1c580:	sub	r3, r6, r0
   1c584:	stm	sp, {r1, r2}
   1c588:	add	r2, r9, r0
   1c58c:	add	r1, sl, #8
   1c590:	mov	r0, r8
   1c594:	bl	11ae8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1c598:	b	1c608 <myhtml_data_process_state_data@@Base+0x108>
   1c59c:	ldr	r3, [sl, #32]
   1c5a0:	mov	r0, r8
   1c5a4:	mov	r1, r4
   1c5a8:	mov	r2, r7
   1c5ac:	bl	11968 <myhtml_string_before_append_any_preprocessing@plt>
   1c5b0:	subs	r3, r7, r0
   1c5b4:	beq	1c62c <myhtml_data_process_state_data@@Base+0x12c>
   1c5b8:	ldr	r1, [sl, #4]
   1c5bc:	add	r0, r0, r5
   1c5c0:	cmp	r1, #0
   1c5c4:	beq	1c610 <myhtml_data_process_state_data@@Base+0x110>
   1c5c8:	ldrb	r2, [sl, #61]	; 0x3d
   1c5cc:	add	r6, sl, #8
   1c5d0:	stm	sp, {r1, r2}
   1c5d4:	add	r2, r9, r0
   1c5d8:	mov	r0, r8
   1c5dc:	mov	r1, r6
   1c5e0:	bl	11ae8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1c5e4:	str	r0, [sl, #32]
   1c5e8:	mov	r0, r6
   1c5ec:	bl	11224 <myencoding_result_clean@plt>
   1c5f0:	b	1c62c <myhtml_data_process_state_data@@Base+0x12c>
   1c5f4:	ldrb	r3, [sl, #61]	; 0x3d
   1c5f8:	add	r1, r9, r0
   1c5fc:	sub	r2, r6, r0
   1c600:	mov	r0, r8
   1c604:	bl	11230 <myhtml_string_append_with_preprocessing@plt>
   1c608:	str	r0, [sl, #32]
   1c60c:	b	1c688 <myhtml_data_process_state_data@@Base+0x188>
   1c610:	ldrb	r6, [sl, #61]	; 0x3d
   1c614:	add	r1, r9, r0
   1c618:	mov	r2, r3
   1c61c:	mov	r0, r8
   1c620:	mov	r3, r6
   1c624:	bl	11230 <myhtml_string_append_with_preprocessing@plt>
   1c628:	str	r0, [sl, #32]
   1c62c:	ldr	r0, [r8, #8]
   1c630:	ldr	r1, [pc, #92]	; 1c694 <myhtml_data_process_state_data@@Base+0x194>
   1c634:	ldr	r1, [pc, r1]
   1c638:	str	r1, [sl]
   1c63c:	str	r0, [sl, #36]	; 0x24
   1c640:	add	r1, r0, #2
   1c644:	ldr	r2, [r8, #4]
   1c648:	ldrb	r4, [r4, r7]
   1c64c:	cmp	r1, r2
   1c650:	bcc	1c660 <myhtml_data_process_state_data@@Base+0x160>
   1c654:	mov	r0, r8
   1c658:	bl	11794 <mycore_string_realloc@plt>
   1c65c:	ldr	r0, [r8, #8]
   1c660:	ldr	r1, [r8]
   1c664:	mov	r2, #0
   1c668:	strb	r4, [r1, r0]
   1c66c:	ldr	r1, [r8, #8]
   1c670:	ldr	r0, [r8]
   1c674:	add	r1, r1, #1
   1c678:	str	r1, [r8, #8]
   1c67c:	strb	r2, [r0, r1]
   1c680:	add	r0, r5, r7
   1c684:	add	r6, r0, #1
   1c688:	mov	r0, r6
   1c68c:	sub	sp, fp, #28
   1c690:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c694:	andeq	pc, pc, r4, asr r1	; <UNPREDICTABLE>

0001c698 <myhtml_data_process_string_append_char@@Base>:
   1c698:	push	{r4, r5, fp, lr}
   1c69c:	add	fp, sp, #8
   1c6a0:	mov	r4, r0
   1c6a4:	ldr	r2, [r0, #4]
   1c6a8:	ldr	r0, [r0, #8]
   1c6ac:	mov	r5, r1
   1c6b0:	add	r1, r0, #2
   1c6b4:	cmp	r1, r2
   1c6b8:	bcc	1c6c8 <myhtml_data_process_string_append_char@@Base+0x30>
   1c6bc:	mov	r0, r4
   1c6c0:	bl	11794 <mycore_string_realloc@plt>
   1c6c4:	ldr	r0, [r4, #8]
   1c6c8:	ldr	r1, [r4]
   1c6cc:	mov	r2, #0
   1c6d0:	strb	r5, [r1, r0]
   1c6d4:	ldr	r1, [r4, #8]
   1c6d8:	ldr	r0, [r4]
   1c6dc:	add	r1, r1, #1
   1c6e0:	str	r1, [r4, #8]
   1c6e4:	strb	r2, [r0, r1]
   1c6e8:	pop	{r4, r5, fp, pc}

0001c6ec <myhtml_data_process_state_ampersand@@Base>:
   1c6ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c6f0:	add	fp, sp, #24
   1c6f4:	mov	r6, r0
   1c6f8:	ldrb	r0, [r2, r3]
   1c6fc:	mov	r4, r3
   1c700:	mov	r7, r2
   1c704:	mov	r5, r1
   1c708:	cmp	r0, #35	; 0x23
   1c70c:	bne	1c7d8 <myhtml_data_process_state_ampersand@@Base+0xec>
   1c710:	ldr	r0, [r5, #8]
   1c714:	ldr	r2, [r5, #4]
   1c718:	ldr	r8, [fp, #8]
   1c71c:	add	r1, r0, #2
   1c720:	cmp	r1, r2
   1c724:	bcc	1c734 <myhtml_data_process_state_ampersand@@Base+0x48>
   1c728:	mov	r0, r5
   1c72c:	bl	11794 <mycore_string_realloc@plt>
   1c730:	ldr	r0, [r5, #8]
   1c734:	ldr	r1, [r5]
   1c738:	mov	r2, #35	; 0x23
   1c73c:	strb	r2, [r1, r0]
   1c740:	mov	r2, #0
   1c744:	ldr	r1, [r5, #8]
   1c748:	ldr	r0, [r5]
   1c74c:	add	r1, r1, #1
   1c750:	str	r1, [r5, #8]
   1c754:	strb	r2, [r0, r1]
   1c758:	add	r0, r4, #1
   1c75c:	str	r2, [r6, #40]	; 0x28
   1c760:	cmp	r0, r8
   1c764:	ldrcs	r1, [pc, #264]	; 1c874 <myhtml_data_process_state_ampersand@@Base+0x188>
   1c768:	ldrcs	r1, [pc, r1]
   1c76c:	strcs	r1, [r6]
   1c770:	popcs	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c774:	ldrb	r7, [r7, r0]
   1c778:	orr	r1, r7, #32
   1c77c:	cmp	r1, #120	; 0x78
   1c780:	bne	1c864 <myhtml_data_process_state_ampersand@@Base+0x178>
   1c784:	ldr	r0, [r5, #8]
   1c788:	ldr	r2, [r5, #4]
   1c78c:	add	r1, r0, #2
   1c790:	cmp	r1, r2
   1c794:	bcc	1c7a4 <myhtml_data_process_state_ampersand@@Base+0xb8>
   1c798:	mov	r0, r5
   1c79c:	bl	11794 <mycore_string_realloc@plt>
   1c7a0:	ldr	r0, [r5, #8]
   1c7a4:	ldr	r1, [r5]
   1c7a8:	mov	r2, #0
   1c7ac:	strb	r7, [r1, r0]
   1c7b0:	ldr	r1, [r5, #8]
   1c7b4:	ldr	r0, [r5]
   1c7b8:	add	r1, r1, #1
   1c7bc:	str	r1, [r5, #8]
   1c7c0:	strb	r2, [r0, r1]
   1c7c4:	ldr	r0, [pc, #172]	; 1c878 <myhtml_data_process_state_ampersand@@Base+0x18c>
   1c7c8:	ldr	r0, [pc, r0]
   1c7cc:	str	r0, [r6]
   1c7d0:	add	r0, r4, #2
   1c7d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c7d8:	mov	r0, #0
   1c7dc:	str	r0, [r6, #48]	; 0x30
   1c7e0:	ldrb	r0, [r7, r4]
   1c7e4:	bl	1183c <myhtml_charef_get_first_position@plt>
   1c7e8:	str	r0, [r6, #44]	; 0x2c
   1c7ec:	ldrb	r0, [r0]
   1c7f0:	cmp	r0, #0
   1c7f4:	beq	1c850 <myhtml_data_process_state_ampersand@@Base+0x164>
   1c7f8:	ldr	r0, [pc, #132]	; 1c884 <myhtml_data_process_state_ampersand@@Base+0x198>
   1c7fc:	ldr	r0, [pc, r0]
   1c800:	str	r0, [r6]
   1c804:	ldr	r0, [r5, #8]
   1c808:	ldr	r2, [r5, #4]
   1c80c:	ldrb	r6, [r7, r4]
   1c810:	add	r1, r0, #2
   1c814:	cmp	r1, r2
   1c818:	bcc	1c828 <myhtml_data_process_state_ampersand@@Base+0x13c>
   1c81c:	mov	r0, r5
   1c820:	bl	11794 <mycore_string_realloc@plt>
   1c824:	ldr	r0, [r5, #8]
   1c828:	ldr	r1, [r5]
   1c82c:	mov	r2, #0
   1c830:	strb	r6, [r1, r0]
   1c834:	ldr	r1, [r5, #8]
   1c838:	ldr	r0, [r5]
   1c83c:	add	r1, r1, #1
   1c840:	str	r1, [r5, #8]
   1c844:	strb	r2, [r0, r1]
   1c848:	add	r0, r4, #1
   1c84c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c850:	ldr	r0, [pc, #40]	; 1c880 <myhtml_data_process_state_ampersand@@Base+0x194>
   1c854:	ldr	r0, [pc, r0]
   1c858:	str	r0, [r6]
   1c85c:	mov	r0, r4
   1c860:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c864:	ldr	r1, [pc, #16]	; 1c87c <myhtml_data_process_state_ampersand@@Base+0x190>
   1c868:	ldr	r1, [pc, r1]
   1c86c:	str	r1, [r6]
   1c870:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c874:	andeq	lr, pc, r8, lsl lr	; <UNPREDICTABLE>
   1c878:	andeq	lr, pc, r0, asr #27
   1c87c:	andeq	lr, pc, r4, asr #30
   1c880:	andeq	lr, pc, r0, ror pc	; <UNPREDICTABLE>
   1c884:	andeq	lr, pc, r0, ror #28

0001c888 <myhtml_data_process_state_ampersand_hash@@Base>:
   1c888:	push	{r4, r5, r6, r7, fp, lr}
   1c88c:	add	fp, sp, #16
   1c890:	ldrb	r7, [r2, r3]
   1c894:	mov	r5, r0
   1c898:	mov	r4, r3
   1c89c:	orr	r0, r7, #32
   1c8a0:	cmp	r0, #120	; 0x78
   1c8a4:	bne	1c8fc <myhtml_data_process_state_ampersand_hash@@Base+0x74>
   1c8a8:	ldr	r0, [r1, #8]
   1c8ac:	ldr	r2, [r1, #4]
   1c8b0:	mov	r6, r1
   1c8b4:	add	r1, r0, #2
   1c8b8:	cmp	r1, r2
   1c8bc:	bcc	1c8cc <myhtml_data_process_state_ampersand_hash@@Base+0x44>
   1c8c0:	mov	r0, r6
   1c8c4:	bl	11794 <mycore_string_realloc@plt>
   1c8c8:	ldr	r0, [r6, #8]
   1c8cc:	ldr	r1, [r6]
   1c8d0:	mov	r2, #0
   1c8d4:	add	r4, r4, #1
   1c8d8:	strb	r7, [r1, r0]
   1c8dc:	ldr	r1, [r6, #8]
   1c8e0:	ldr	r0, [r6]
   1c8e4:	add	r1, r1, #1
   1c8e8:	str	r1, [r6, #8]
   1c8ec:	strb	r2, [r0, r1]
   1c8f0:	ldr	r0, [pc, #28]	; 1c914 <myhtml_data_process_state_ampersand_hash@@Base+0x8c>
   1c8f4:	ldr	r0, [pc, r0]
   1c8f8:	b	1c904 <myhtml_data_process_state_ampersand_hash@@Base+0x7c>
   1c8fc:	ldr	r0, [pc, #12]	; 1c910 <myhtml_data_process_state_ampersand_hash@@Base+0x88>
   1c900:	ldr	r0, [pc, r0]
   1c904:	str	r0, [r5]
   1c908:	mov	r0, r4
   1c90c:	pop	{r4, r5, r6, r7, fp, pc}
   1c910:	andeq	lr, pc, ip, lsr #29
   1c914:	muleq	pc, r4, ip	; <UNPREDICTABLE>

0001c918 <myhtml_data_process_state_ampersand_hash_x_data@@Base>:
   1c918:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1c91c:	add	fp, sp, #24
   1c920:	sub	sp, sp, #8
   1c924:	mov	r4, r0
   1c928:	ldr	r0, [fp, #8]
   1c92c:	mov	r7, r3
   1c930:	mov	r9, r2
   1c934:	mov	r8, r1
   1c938:	mov	r6, r3
   1c93c:	cmp	r3, r0
   1c940:	bcs	1c99c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x84>
   1c944:	ldr	r2, [pc, #432]	; 1cafc <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1e4>
   1c948:	add	r1, r9, r7
   1c94c:	mov	r5, #0
   1c950:	add	r2, pc, r2
   1c954:	ldrb	r3, [r1, r5]
   1c958:	ldrb	r3, [r2, r3]
   1c95c:	cmp	r3, #255	; 0xff
   1c960:	beq	1c9e8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xd0>
   1c964:	ldr	r3, [r4, #40]	; 0x28
   1c968:	lsr	r6, r3, #16
   1c96c:	cmp	r6, #16
   1c970:	bhi	1c98c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x74>
   1c974:	lsl	r6, r3, #4
   1c978:	str	r6, [r4, #40]	; 0x28
   1c97c:	ldrb	r6, [r1, r5]
   1c980:	ldrb	r6, [r2, r6]
   1c984:	orr	r3, r6, r3, lsl #4
   1c988:	str	r3, [r4, #40]	; 0x28
   1c98c:	add	r5, r5, #1
   1c990:	add	r6, r7, r5
   1c994:	cmp	r6, r0
   1c998:	bcc	1c954 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x3c>
   1c99c:	ldr	r3, [r4, #32]
   1c9a0:	add	r1, r9, r7
   1c9a4:	sub	r2, r6, r7
   1c9a8:	mov	r0, r8
   1c9ac:	bl	11968 <myhtml_string_before_append_any_preprocessing@plt>
   1c9b0:	add	r0, r0, r7
   1c9b4:	cmp	r6, r0
   1c9b8:	beq	1cad8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1c0>
   1c9bc:	ldr	r1, [r4, #4]
   1c9c0:	cmp	r1, #0
   1c9c4:	beq	1ca3c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x124>
   1c9c8:	ldrb	r2, [r4, #61]	; 0x3d
   1c9cc:	sub	r3, r6, r0
   1c9d0:	stm	sp, {r1, r2}
   1c9d4:	add	r2, r9, r0
   1c9d8:	add	r1, r4, #8
   1c9dc:	mov	r0, r8
   1c9e0:	bl	11ae8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1c9e4:	b	1ca50 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x138>
   1c9e8:	ldr	r0, [pc, #272]	; 1cb00 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1e8>
   1c9ec:	cmp	r5, #0
   1c9f0:	ldr	r0, [pc, r0]
   1c9f4:	str	r0, [r4]
   1c9f8:	beq	1ca58 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x140>
   1c9fc:	ldrb	r0, [r1, r5]
   1ca00:	cmp	r0, #59	; 0x3b
   1ca04:	ldmib	r8, {r0, r1}
   1ca08:	addeq	r7, r7, #1
   1ca0c:	add	r1, r1, #5
   1ca10:	cmp	r1, r0
   1ca14:	bcc	1ca20 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x108>
   1ca18:	mov	r0, r8
   1ca1c:	bl	11794 <mycore_string_realloc@plt>
   1ca20:	ldr	r0, [r4, #40]	; 0x28
   1ca24:	cmp	r0, #159	; 0x9f
   1ca28:	bhi	1ca8c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x174>
   1ca2c:	ldr	r1, [pc, #208]	; 1cb04 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1ec>
   1ca30:	add	r1, pc, r1
   1ca34:	ldr	r1, [r1, r0, lsl #2]
   1ca38:	b	1caa8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x190>
   1ca3c:	ldrb	r3, [r4, #61]	; 0x3d
   1ca40:	add	r1, r9, r0
   1ca44:	sub	r2, r6, r0
   1ca48:	mov	r0, r8
   1ca4c:	bl	11230 <myhtml_string_append_with_preprocessing@plt>
   1ca50:	str	r0, [r4, #32]
   1ca54:	b	1cad8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1c0>
   1ca58:	ldr	r3, [r4, #32]
   1ca5c:	mov	r0, r8
   1ca60:	mov	r2, #0
   1ca64:	add	r6, r7, r5
   1ca68:	bl	11968 <myhtml_string_before_append_any_preprocessing@plt>
   1ca6c:	subs	r3, r5, r0
   1ca70:	beq	1cad8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1c0>
   1ca74:	ldr	r1, [r4, #4]
   1ca78:	add	r0, r0, r7
   1ca7c:	cmp	r1, #0
   1ca80:	beq	1cae4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1cc>
   1ca84:	ldrb	r2, [r4, #61]	; 0x3d
   1ca88:	b	1c9d0 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xb8>
   1ca8c:	mov	r2, r0
   1ca90:	movw	r1, #65533	; 0xfffd
   1ca94:	bfc	r2, #0, #11
   1ca98:	cmp	r2, #55296	; 0xd800
   1ca9c:	beq	1caa8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x190>
   1caa0:	cmp	r0, #1114112	; 0x110000
   1caa4:	bcc	1cab0 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x198>
   1caa8:	mov	r0, r1
   1caac:	str	r1, [r4, #40]	; 0x28
   1cab0:	ldr	r4, [r4, #36]	; 0x24
   1cab4:	ldr	r1, [r8]
   1cab8:	add	r6, r7, r5
   1cabc:	add	r1, r1, r4
   1cac0:	bl	11b3c <myencoding_codepoint_to_ascii_utf_8@plt>
   1cac4:	add	r0, r0, r4
   1cac8:	mov	r2, #0
   1cacc:	str	r0, [r8, #8]
   1cad0:	ldr	r1, [r8]
   1cad4:	strb	r2, [r1, r0]
   1cad8:	mov	r0, r6
   1cadc:	sub	sp, fp, #24
   1cae0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1cae4:	ldrb	r7, [r4, #61]	; 0x3d
   1cae8:	add	r1, r9, r0
   1caec:	mov	r2, r3
   1caf0:	mov	r0, r8
   1caf4:	mov	r3, r7
   1caf8:	b	1ca4c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x134>
   1cafc:	andeq	r3, lr, r4, lsl pc
   1cb00:	ldrdeq	lr, [pc], -r4
   1cb04:	andeq	r3, lr, r4, lsr pc

0001cb08 <myhtml_data_process_state_ampersand_hash_data@@Base>:
   1cb08:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1cb0c:	add	fp, sp, #24
   1cb10:	sub	sp, sp, #8
   1cb14:	mov	r4, r0
   1cb18:	ldr	r0, [fp, #8]
   1cb1c:	mov	r7, r3
   1cb20:	mov	r9, r2
   1cb24:	mov	r8, r1
   1cb28:	mov	r6, r3
   1cb2c:	cmp	r3, r0
   1cb30:	bcs	1cb80 <myhtml_data_process_state_ampersand_hash_data@@Base+0x78>
   1cb34:	ldr	ip, [pc, #420]	; 1cce0 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1d8>
   1cb38:	add	r1, r9, r7
   1cb3c:	mov	r5, #0
   1cb40:	add	ip, pc, ip
   1cb44:	ldrb	r3, [r1, r5]
   1cb48:	sub	r6, r3, #48	; 0x30
   1cb4c:	cmp	r6, #10
   1cb50:	bcs	1cbcc <myhtml_data_process_state_ampersand_hash_data@@Base+0xc4>
   1cb54:	ldr	r6, [r4, #40]	; 0x28
   1cb58:	add	r5, r5, #1
   1cb5c:	lsr	r2, r6, #16
   1cb60:	cmp	r2, #16
   1cb64:	ldrbls	r2, [ip, r3]
   1cb68:	addls	r3, r6, r6, lsl #2
   1cb6c:	add	r6, r7, r5
   1cb70:	addls	r2, r2, r3, lsl #1
   1cb74:	strls	r2, [r4, #40]	; 0x28
   1cb78:	cmp	r6, r0
   1cb7c:	bcc	1cb44 <myhtml_data_process_state_ampersand_hash_data@@Base+0x3c>
   1cb80:	ldr	r3, [r4, #32]
   1cb84:	add	r1, r9, r7
   1cb88:	sub	r2, r6, r7
   1cb8c:	mov	r0, r8
   1cb90:	bl	11968 <myhtml_string_before_append_any_preprocessing@plt>
   1cb94:	add	r0, r0, r7
   1cb98:	cmp	r6, r0
   1cb9c:	beq	1ccbc <myhtml_data_process_state_ampersand_hash_data@@Base+0x1b4>
   1cba0:	ldr	r1, [r4, #4]
   1cba4:	cmp	r1, #0
   1cba8:	beq	1cc20 <myhtml_data_process_state_ampersand_hash_data@@Base+0x118>
   1cbac:	ldrb	r2, [r4, #61]	; 0x3d
   1cbb0:	sub	r3, r6, r0
   1cbb4:	stm	sp, {r1, r2}
   1cbb8:	add	r2, r9, r0
   1cbbc:	add	r1, r4, #8
   1cbc0:	mov	r0, r8
   1cbc4:	bl	11ae8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1cbc8:	b	1cc34 <myhtml_data_process_state_ampersand_hash_data@@Base+0x12c>
   1cbcc:	ldr	r0, [pc, #272]	; 1cce4 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1dc>
   1cbd0:	cmp	r5, #0
   1cbd4:	ldr	r0, [pc, r0]
   1cbd8:	str	r0, [r4]
   1cbdc:	beq	1cc3c <myhtml_data_process_state_ampersand_hash_data@@Base+0x134>
   1cbe0:	ldrb	r0, [r1, r5]
   1cbe4:	cmp	r0, #59	; 0x3b
   1cbe8:	ldmib	r8, {r0, r1}
   1cbec:	addeq	r7, r7, #1
   1cbf0:	add	r1, r1, #5
   1cbf4:	cmp	r1, r0
   1cbf8:	bcc	1cc04 <myhtml_data_process_state_ampersand_hash_data@@Base+0xfc>
   1cbfc:	mov	r0, r8
   1cc00:	bl	11794 <mycore_string_realloc@plt>
   1cc04:	ldr	r0, [r4, #40]	; 0x28
   1cc08:	cmp	r0, #159	; 0x9f
   1cc0c:	bhi	1cc70 <myhtml_data_process_state_ampersand_hash_data@@Base+0x168>
   1cc10:	ldr	r1, [pc, #208]	; 1cce8 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1e0>
   1cc14:	add	r1, pc, r1
   1cc18:	ldr	r1, [r1, r0, lsl #2]
   1cc1c:	b	1cc8c <myhtml_data_process_state_ampersand_hash_data@@Base+0x184>
   1cc20:	ldrb	r3, [r4, #61]	; 0x3d
   1cc24:	add	r1, r9, r0
   1cc28:	sub	r2, r6, r0
   1cc2c:	mov	r0, r8
   1cc30:	bl	11230 <myhtml_string_append_with_preprocessing@plt>
   1cc34:	str	r0, [r4, #32]
   1cc38:	b	1ccbc <myhtml_data_process_state_ampersand_hash_data@@Base+0x1b4>
   1cc3c:	ldr	r3, [r4, #32]
   1cc40:	mov	r0, r8
   1cc44:	mov	r2, #0
   1cc48:	add	r6, r7, r5
   1cc4c:	bl	11968 <myhtml_string_before_append_any_preprocessing@plt>
   1cc50:	subs	r3, r5, r0
   1cc54:	beq	1ccbc <myhtml_data_process_state_ampersand_hash_data@@Base+0x1b4>
   1cc58:	ldr	r1, [r4, #4]
   1cc5c:	add	r0, r0, r7
   1cc60:	cmp	r1, #0
   1cc64:	beq	1ccc8 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1c0>
   1cc68:	ldrb	r2, [r4, #61]	; 0x3d
   1cc6c:	b	1cbb4 <myhtml_data_process_state_ampersand_hash_data@@Base+0xac>
   1cc70:	mov	r2, r0
   1cc74:	movw	r1, #65533	; 0xfffd
   1cc78:	bfc	r2, #0, #11
   1cc7c:	cmp	r2, #55296	; 0xd800
   1cc80:	beq	1cc8c <myhtml_data_process_state_ampersand_hash_data@@Base+0x184>
   1cc84:	cmp	r0, #1114112	; 0x110000
   1cc88:	bcc	1cc94 <myhtml_data_process_state_ampersand_hash_data@@Base+0x18c>
   1cc8c:	mov	r0, r1
   1cc90:	str	r1, [r4, #40]	; 0x28
   1cc94:	ldr	r4, [r4, #36]	; 0x24
   1cc98:	ldr	r1, [r8]
   1cc9c:	add	r6, r7, r5
   1cca0:	add	r1, r1, r4
   1cca4:	bl	11b3c <myencoding_codepoint_to_ascii_utf_8@plt>
   1cca8:	add	r0, r0, r4
   1ccac:	mov	r2, #0
   1ccb0:	str	r0, [r8, #8]
   1ccb4:	ldr	r1, [r8]
   1ccb8:	strb	r2, [r1, r0]
   1ccbc:	mov	r0, r6
   1ccc0:	sub	sp, fp, #24
   1ccc4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ccc8:	ldrb	r7, [r4, #61]	; 0x3d
   1cccc:	add	r1, r9, r0
   1ccd0:	mov	r2, r3
   1ccd4:	mov	r0, r8
   1ccd8:	mov	r3, r7
   1ccdc:	b	1cc30 <myhtml_data_process_state_ampersand_hash_data@@Base+0x128>
   1cce0:	andeq	r3, lr, r4, lsr #24
   1cce4:	strdeq	lr, [pc], -r0
   1cce8:	andeq	r3, lr, r0, asr sp

0001ccec <myhtml_data_process_state_ampersand_data@@Base>:
   1ccec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1ccf0:	add	fp, sp, #24
   1ccf4:	sub	sp, sp, #16
   1ccf8:	str	r3, [sp, #12]
   1ccfc:	mov	r6, r0
   1cd00:	mov	r4, r0
   1cd04:	mov	r7, r3
   1cd08:	ldr	r3, [fp, #8]
   1cd0c:	mov	r8, r2
   1cd10:	mov	r5, r1
   1cd14:	add	r2, sp, #12
   1cd18:	ldr	r0, [r6, #44]!	; 0x2c
   1cd1c:	mov	r1, r8
   1cd20:	ldr	r0, [r0, #4]
   1cd24:	str	r6, [sp]
   1cd28:	bl	11650 <myhtml_charef_find_by_pos@plt>
   1cd2c:	mov	r9, r0
   1cd30:	ldr	r0, [r6, #12]
   1cd34:	cmp	r0, #0
   1cd38:	beq	1cd64 <myhtml_data_process_state_ampersand_data@@Base+0x78>
   1cd3c:	ldr	r0, [pc, #424]	; 1ceec <myhtml_data_process_state_ampersand_data@@Base+0x200>
   1cd40:	ldr	r0, [pc, r0]
   1cd44:	str	r0, [r4]
   1cd48:	ldr	r0, [sp, #12]
   1cd4c:	ldrb	r1, [r8, r0]
   1cd50:	cmp	r1, #59	; 0x3b
   1cd54:	bne	1cd6c <myhtml_data_process_state_ampersand_data@@Base+0x80>
   1cd58:	add	r0, r0, #1
   1cd5c:	str	r0, [sp, #12]
   1cd60:	b	1cd94 <myhtml_data_process_state_ampersand_data@@Base+0xa8>
   1cd64:	ldr	r0, [sp, #12]
   1cd68:	b	1ce04 <myhtml_data_process_state_ampersand_data@@Base+0x118>
   1cd6c:	ldrb	r2, [r4, #60]	; 0x3c
   1cd70:	cmp	r2, #0
   1cd74:	beq	1cd94 <myhtml_data_process_state_ampersand_data@@Base+0xa8>
   1cd78:	cmp	r1, #61	; 0x3d
   1cd7c:	beq	1ce04 <myhtml_data_process_state_ampersand_data@@Base+0x118>
   1cd80:	ldr	r2, [pc, #360]	; 1cef0 <myhtml_data_process_state_ampersand_data@@Base+0x204>
   1cd84:	add	r2, pc, r2
   1cd88:	ldr	r1, [r2, r1, lsl #2]
   1cd8c:	cmp	r1, #255	; 0xff
   1cd90:	bne	1ce04 <myhtml_data_process_state_ampersand_data@@Base+0x118>
   1cd94:	ldr	r1, [r9, #20]
   1cd98:	cmp	r1, #0
   1cd9c:	beq	1ce54 <myhtml_data_process_state_ampersand_data@@Base+0x168>
   1cda0:	add	r7, r9, #12
   1cda4:	mov	r6, #0
   1cda8:	ldmib	r5, {r0, r1}
   1cdac:	add	r1, r1, #5
   1cdb0:	cmp	r1, r0
   1cdb4:	bcc	1cdc0 <myhtml_data_process_state_ampersand_data@@Base+0xd4>
   1cdb8:	mov	r0, r5
   1cdbc:	bl	11794 <mycore_string_realloc@plt>
   1cdc0:	ldr	r1, [r4, #36]	; 0x24
   1cdc4:	ldr	r2, [r5]
   1cdc8:	ldr	r0, [r7, r6, lsl #2]
   1cdcc:	add	r1, r2, r1
   1cdd0:	bl	11b3c <myencoding_codepoint_to_ascii_utf_8@plt>
   1cdd4:	ldr	r1, [r4, #36]	; 0x24
   1cdd8:	add	r6, r6, #1
   1cddc:	add	r0, r1, r0
   1cde0:	str	r0, [r4, #36]	; 0x24
   1cde4:	ldr	r1, [r9, #20]
   1cde8:	cmp	r6, r1
   1cdec:	bcc	1cda8 <myhtml_data_process_state_ampersand_data@@Base+0xbc>
   1cdf0:	str	r0, [r5, #8]
   1cdf4:	mov	r2, #0
   1cdf8:	ldr	r1, [r5]
   1cdfc:	strb	r2, [r1, r0]
   1ce00:	b	1ced8 <myhtml_data_process_state_ampersand_data@@Base+0x1ec>
   1ce04:	add	r1, r8, r7
   1ce08:	ldr	r3, [r4, #32]
   1ce0c:	sub	r2, r0, r7
   1ce10:	mov	r0, r5
   1ce14:	bl	11968 <myhtml_string_before_append_any_preprocessing@plt>
   1ce18:	ldr	r3, [sp, #12]
   1ce1c:	add	r0, r0, r7
   1ce20:	cmp	r3, r0
   1ce24:	beq	1cee0 <myhtml_data_process_state_ampersand_data@@Base+0x1f4>
   1ce28:	ldr	r1, [r4, #4]
   1ce2c:	cmp	r1, #0
   1ce30:	beq	1cea4 <myhtml_data_process_state_ampersand_data@@Base+0x1b8>
   1ce34:	ldrb	r2, [r4, #61]	; 0x3d
   1ce38:	sub	r3, r3, r0
   1ce3c:	stm	sp, {r1, r2}
   1ce40:	add	r2, r8, r0
   1ce44:	add	r1, r4, #8
   1ce48:	mov	r0, r5
   1ce4c:	bl	11ae8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1ce50:	b	1ceb8 <myhtml_data_process_state_ampersand_data@@Base+0x1cc>
   1ce54:	ldr	r3, [r4, #32]
   1ce58:	sub	r2, r0, r7
   1ce5c:	add	r1, r8, r7
   1ce60:	mov	r0, r5
   1ce64:	bl	11968 <myhtml_string_before_append_any_preprocessing@plt>
   1ce68:	ldr	r3, [sp, #12]
   1ce6c:	add	r0, r0, r7
   1ce70:	cmp	r3, r0
   1ce74:	beq	1ced8 <myhtml_data_process_state_ampersand_data@@Base+0x1ec>
   1ce78:	ldr	r1, [r4, #4]
   1ce7c:	cmp	r1, #0
   1ce80:	beq	1cec0 <myhtml_data_process_state_ampersand_data@@Base+0x1d4>
   1ce84:	ldrb	r2, [r4, #61]	; 0x3d
   1ce88:	sub	r3, r3, r0
   1ce8c:	stm	sp, {r1, r2}
   1ce90:	add	r2, r8, r0
   1ce94:	add	r1, r4, #8
   1ce98:	mov	r0, r5
   1ce9c:	bl	11ae8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1cea0:	b	1ced4 <myhtml_data_process_state_ampersand_data@@Base+0x1e8>
   1cea4:	sub	r2, r3, r0
   1cea8:	ldrb	r3, [r4, #61]	; 0x3d
   1ceac:	add	r1, r8, r0
   1ceb0:	mov	r0, r5
   1ceb4:	bl	11230 <myhtml_string_append_with_preprocessing@plt>
   1ceb8:	str	r0, [r4, #32]
   1cebc:	b	1cee0 <myhtml_data_process_state_ampersand_data@@Base+0x1f4>
   1cec0:	sub	r2, r3, r0
   1cec4:	ldrb	r3, [r4, #61]	; 0x3d
   1cec8:	add	r1, r8, r0
   1cecc:	mov	r0, r5
   1ced0:	bl	11230 <myhtml_string_append_with_preprocessing@plt>
   1ced4:	str	r0, [r4, #32]
   1ced8:	mov	r0, #0
   1cedc:	str	r0, [r4, #48]	; 0x30
   1cee0:	ldr	r0, [sp, #12]
   1cee4:	sub	sp, fp, #24
   1cee8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ceec:	andeq	lr, pc, r4, lsl #21
   1cef0:	andeq	r3, lr, r0, ror #11

0001cef4 <myhtml_data_process_state_end@@Base>:
   1cef4:	push	{r4, r5, fp, lr}
   1cef8:	add	fp, sp, #8
   1cefc:	mov	r4, r1
   1cf00:	mov	r5, r0
   1cf04:	ldmib	r1, {r0, r1}
   1cf08:	add	r1, r1, #5
   1cf0c:	cmp	r1, r0
   1cf10:	bcc	1cf1c <myhtml_data_process_state_end@@Base+0x28>
   1cf14:	mov	r0, r4
   1cf18:	bl	11794 <mycore_string_realloc@plt>
   1cf1c:	ldr	r0, [r5, #40]	; 0x28
   1cf20:	cmp	r0, #159	; 0x9f
   1cf24:	bhi	1cf40 <myhtml_data_process_state_end@@Base+0x4c>
   1cf28:	ldr	r1, [pc, #84]	; 1cf84 <myhtml_data_process_state_end@@Base+0x90>
   1cf2c:	add	r1, pc, r1
   1cf30:	ldr	r1, [r1, r0, lsl #2]
   1cf34:	mov	r0, r1
   1cf38:	str	r1, [r5, #40]	; 0x28
   1cf3c:	b	1cf5c <myhtml_data_process_state_end@@Base+0x68>
   1cf40:	mov	r2, r0
   1cf44:	movw	r1, #65533	; 0xfffd
   1cf48:	bfc	r2, #0, #11
   1cf4c:	cmp	r2, #55296	; 0xd800
   1cf50:	beq	1cf34 <myhtml_data_process_state_end@@Base+0x40>
   1cf54:	cmp	r0, #1114112	; 0x110000
   1cf58:	bcs	1cf34 <myhtml_data_process_state_end@@Base+0x40>
   1cf5c:	ldr	r5, [r5, #36]	; 0x24
   1cf60:	ldr	r1, [r4]
   1cf64:	add	r1, r1, r5
   1cf68:	bl	11b3c <myencoding_codepoint_to_ascii_utf_8@plt>
   1cf6c:	add	r0, r0, r5
   1cf70:	mov	r2, #0
   1cf74:	str	r0, [r4, #8]
   1cf78:	ldr	r1, [r4]
   1cf7c:	strb	r2, [r1, r0]
   1cf80:	pop	{r4, r5, fp, pc}
   1cf84:	andeq	r3, lr, r8, lsr sl

0001cf88 <myhtml_data_process@@Base>:
   1cf88:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1cf8c:	add	fp, sp, #24
   1cf90:	sub	sp, sp, #8
   1cf94:	cmp	r3, #0
   1cf98:	beq	1cfd4 <myhtml_data_process@@Base+0x4c>
   1cf9c:	mov	r4, r3
   1cfa0:	mov	r8, r2
   1cfa4:	mov	r6, r1
   1cfa8:	mov	r7, r0
   1cfac:	mov	r3, #0
   1cfb0:	ldr	r5, [r7]
   1cfb4:	mov	r0, r7
   1cfb8:	mov	r1, r6
   1cfbc:	mov	r2, r8
   1cfc0:	str	r4, [sp]
   1cfc4:	blx	r5
   1cfc8:	mov	r3, r0
   1cfcc:	cmp	r0, r4
   1cfd0:	bcc	1cfb0 <myhtml_data_process@@Base+0x28>
   1cfd4:	sub	sp, fp, #24
   1cfd8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001cfdc <myhtml_data_process_end@@Base>:
   1cfdc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1cfe0:	add	fp, sp, #24
   1cfe4:	mov	r5, r0
   1cfe8:	mov	r4, r1
   1cfec:	ldr	r0, [r0]
   1cff0:	ldr	r1, [pc, #336]	; 1d148 <myhtml_data_process_end@@Base+0x16c>
   1cff4:	ldr	r1, [pc, r1]
   1cff8:	cmp	r0, r1
   1cffc:	beq	1d038 <myhtml_data_process_end@@Base+0x5c>
   1d000:	ldr	r1, [pc, #324]	; 1d14c <myhtml_data_process_end@@Base+0x170>
   1d004:	ldr	r1, [pc, r1]
   1d008:	cmp	r0, r1
   1d00c:	beq	1d0a4 <myhtml_data_process_end@@Base+0xc8>
   1d010:	ldr	r1, [pc, #316]	; 1d154 <myhtml_data_process_end@@Base+0x178>
   1d014:	ldr	r1, [pc, r1]
   1d018:	cmp	r0, r1
   1d01c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d020:	ldr	r1, [r5, #36]	; 0x24
   1d024:	ldr	r0, [r4, #8]
   1d028:	add	r1, r1, #3
   1d02c:	cmp	r0, r1
   1d030:	bne	1d0b8 <myhtml_data_process_end@@Base+0xdc>
   1d034:	b	1d144 <myhtml_data_process_end@@Base+0x168>
   1d038:	ldr	r6, [r5, #48]	; 0x30
   1d03c:	cmp	r6, #0
   1d040:	beq	1d144 <myhtml_data_process_end@@Base+0x168>
   1d044:	ldr	r0, [r6, #20]
   1d048:	cmp	r0, #0
   1d04c:	beq	1d130 <myhtml_data_process_end@@Base+0x154>
   1d050:	add	r8, r6, #12
   1d054:	mov	r7, #0
   1d058:	ldmib	r4, {r0, r1}
   1d05c:	add	r1, r1, #5
   1d060:	cmp	r1, r0
   1d064:	bcc	1d070 <myhtml_data_process_end@@Base+0x94>
   1d068:	mov	r0, r4
   1d06c:	bl	11794 <mycore_string_realloc@plt>
   1d070:	ldr	r1, [r5, #36]	; 0x24
   1d074:	ldr	r2, [r4]
   1d078:	ldr	r0, [r8, r7, lsl #2]
   1d07c:	add	r1, r2, r1
   1d080:	bl	11b3c <myencoding_codepoint_to_ascii_utf_8@plt>
   1d084:	ldr	r1, [r5, #36]	; 0x24
   1d088:	add	r7, r7, #1
   1d08c:	add	r0, r1, r0
   1d090:	str	r0, [r5, #36]	; 0x24
   1d094:	ldr	r1, [r6, #20]
   1d098:	cmp	r7, r1
   1d09c:	bcc	1d058 <myhtml_data_process_end@@Base+0x7c>
   1d0a0:	b	1d134 <myhtml_data_process_end@@Base+0x158>
   1d0a4:	ldr	r1, [r5, #36]	; 0x24
   1d0a8:	ldr	r0, [r4, #8]
   1d0ac:	add	r1, r1, #2
   1d0b0:	cmp	r0, r1
   1d0b4:	beq	1d144 <myhtml_data_process_end@@Base+0x168>
   1d0b8:	ldr	r2, [r4, #4]
   1d0bc:	add	r1, r0, #5
   1d0c0:	cmp	r1, r2
   1d0c4:	bcc	1d0d0 <myhtml_data_process_end@@Base+0xf4>
   1d0c8:	mov	r0, r4
   1d0cc:	bl	11794 <mycore_string_realloc@plt>
   1d0d0:	ldr	r0, [r5, #40]	; 0x28
   1d0d4:	cmp	r0, #159	; 0x9f
   1d0d8:	bhi	1d0ec <myhtml_data_process_end@@Base+0x110>
   1d0dc:	ldr	r1, [pc, #108]	; 1d150 <myhtml_data_process_end@@Base+0x174>
   1d0e0:	add	r1, pc, r1
   1d0e4:	ldr	r1, [r1, r0, lsl #2]
   1d0e8:	b	1d110 <myhtml_data_process_end@@Base+0x134>
   1d0ec:	mov	r2, r0
   1d0f0:	movw	r1, #65533	; 0xfffd
   1d0f4:	bfc	r2, #0, #11
   1d0f8:	cmp	r2, #55296	; 0xd800
   1d0fc:	beq	1d110 <myhtml_data_process_end@@Base+0x134>
   1d100:	movw	r2, #65535	; 0xffff
   1d104:	movt	r2, #16
   1d108:	cmp	r0, r2
   1d10c:	bls	1d118 <myhtml_data_process_end@@Base+0x13c>
   1d110:	mov	r0, r1
   1d114:	str	r1, [r5, #40]	; 0x28
   1d118:	ldr	r5, [r5, #36]	; 0x24
   1d11c:	ldr	r1, [r4]
   1d120:	add	r1, r1, r5
   1d124:	bl	11b3c <myencoding_codepoint_to_ascii_utf_8@plt>
   1d128:	add	r0, r0, r5
   1d12c:	b	1d134 <myhtml_data_process_end@@Base+0x158>
   1d130:	ldr	r0, [r5, #36]	; 0x24
   1d134:	str	r0, [r4, #8]
   1d138:	mov	r2, #0
   1d13c:	ldr	r1, [r4]
   1d140:	strb	r2, [r1, r0]
   1d144:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d148:	andeq	lr, pc, r8, ror #12
   1d14c:	andeq	lr, pc, r8, lsr #15
   1d150:	andeq	r3, lr, r4, lsl #17
   1d154:	andeq	lr, pc, r4, ror r5	; <UNPREDICTABLE>

0001d158 <myhtml_init_marker@@Base>:
   1d158:	push	{r4, sl, fp, lr}
   1d15c:	add	fp, sp, #8
   1d160:	mov	r4, r0
   1d164:	mov	r0, #44	; 0x2c
   1d168:	bl	119c8 <mycore_malloc@plt>
   1d16c:	cmp	r0, #0
   1d170:	str	r0, [r4, #36]	; 0x24
   1d174:	popeq	{r4, sl, fp, pc}
   1d178:	pop	{r4, sl, fp, lr}
   1d17c:	b	11cc8 <myhtml_tree_node_clean@plt>

0001d180 <myhtml_destroy_marker@@Base>:
   1d180:	ldr	r0, [r0, #36]	; 0x24
   1d184:	cmp	r0, #0
   1d188:	bxeq	lr
   1d18c:	b	11ab8 <mycore_free@plt>

0001d190 <myhtml_stream_create@@Base>:
   1d190:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d194:	add	fp, sp, #24
   1d198:	mov	r4, r1
   1d19c:	mov	r5, r0
   1d1a0:	cmp	r2, #0
   1d1a4:	beq	1d208 <myhtml_stream_create@@Base+0x78>
   1d1a8:	mov	r8, r3
   1d1ac:	mov	r7, r2
   1d1b0:	bl	10f6c <mythread_create@plt>
   1d1b4:	cmp	r0, #0
   1d1b8:	str	r0, [r5]
   1d1bc:	mov	r2, r7
   1d1c0:	mov	r3, r8
   1d1c4:	mov	r6, #0
   1d1c8:	moveq	r1, #9
   1d1cc:	streq	r1, [r4]
   1d1d0:	mov	r1, #0
   1d1d4:	bl	11cd4 <mythread_init@plt>
   1d1d8:	cmp	r0, #0
   1d1dc:	str	r0, [r4]
   1d1e0:	beq	1d200 <myhtml_stream_create@@Base+0x70>
   1d1e4:	ldr	r0, [r5]
   1d1e8:	mov	r1, #0
   1d1ec:	mov	r2, #0
   1d1f0:	mov	r3, #1
   1d1f4:	bl	117d0 <mythread_destroy@plt>
   1d1f8:	str	r0, [r5]
   1d1fc:	ldr	r6, [r4]
   1d200:	mov	r0, r6
   1d204:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d208:	mov	r6, #0
   1d20c:	mov	r0, r6
   1d210:	str	r6, [r5]
   1d214:	str	r6, [r4]
   1d218:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001d21c <myhtml_batch_create@@Base>:
   1d21c:	push	{r4, r5, r6, r7, fp, lr}
   1d220:	add	fp, sp, #16
   1d224:	mov	r4, r1
   1d228:	mov	r5, r0
   1d22c:	cmp	r2, #0
   1d230:	beq	1d2b4 <myhtml_batch_create@@Base+0x98>
   1d234:	mov	r6, r3
   1d238:	mov	r7, r2
   1d23c:	bl	10f6c <mythread_create@plt>
   1d240:	str	r0, [r5, #4]
   1d244:	ldr	r1, [r5]
   1d248:	cmp	r1, #0
   1d24c:	bne	1d274 <myhtml_batch_create@@Base+0x58>
   1d250:	mov	r0, #0
   1d254:	mov	r1, #0
   1d258:	mov	r2, #0
   1d25c:	mov	r3, #1
   1d260:	bl	117d0 <mythread_destroy@plt>
   1d264:	str	r0, [r5]
   1d268:	mov	r0, #9
   1d26c:	str	r0, [r4]
   1d270:	ldr	r0, [r5, #4]
   1d274:	mov	r1, #1
   1d278:	mov	r2, r7
   1d27c:	mov	r3, r6
   1d280:	bl	11cd4 <mythread_init@plt>
   1d284:	cmp	r0, #0
   1d288:	str	r0, [r4]
   1d28c:	moveq	r0, #0
   1d290:	popeq	{r4, r5, r6, r7, fp, pc}
   1d294:	ldr	r0, [r5, #4]
   1d298:	mov	r1, #0
   1d29c:	mov	r2, #0
   1d2a0:	mov	r3, #1
   1d2a4:	bl	117d0 <mythread_destroy@plt>
   1d2a8:	str	r0, [r5, #4]
   1d2ac:	ldr	r0, [r4]
   1d2b0:	pop	{r4, r5, r6, r7, fp, pc}
   1d2b4:	mov	r0, #0
   1d2b8:	str	r0, [r5, #4]
   1d2bc:	str	r0, [r4]
   1d2c0:	pop	{r4, r5, r6, r7, fp, pc}

0001d2c4 <myhtml_create_stream_and_batch@@Base>:
   1d2c4:	push	{r4, r5, r6, r7, fp, lr}
   1d2c8:	add	fp, sp, #16
   1d2cc:	mov	r6, r2
   1d2d0:	mov	r5, r1
   1d2d4:	mov	r4, r0
   1d2d8:	cmp	r1, #0
   1d2dc:	beq	1d308 <myhtml_create_stream_and_batch@@Base+0x44>
   1d2e0:	bl	10f6c <mythread_create@plt>
   1d2e4:	mov	r1, #0
   1d2e8:	mov	r2, r5
   1d2ec:	mov	r3, #0
   1d2f0:	str	r0, [r4]
   1d2f4:	bl	11cd4 <mythread_init@plt>
   1d2f8:	cmp	r0, #0
   1d2fc:	beq	1d310 <myhtml_create_stream_and_batch@@Base+0x4c>
   1d300:	mov	r7, r0
   1d304:	b	1d384 <myhtml_create_stream_and_batch@@Base+0xc0>
   1d308:	mov	r0, #0
   1d30c:	str	r0, [r4]
   1d310:	cmp	r6, #0
   1d314:	beq	1d3a4 <myhtml_create_stream_and_batch@@Base+0xe0>
   1d318:	bl	10f6c <mythread_create@plt>
   1d31c:	str	r0, [r4, #4]
   1d320:	ldr	r1, [r4]
   1d324:	cmp	r1, #0
   1d328:	bne	1d348 <myhtml_create_stream_and_batch@@Base+0x84>
   1d32c:	mov	r0, #0
   1d330:	mov	r1, #0
   1d334:	mov	r2, #0
   1d338:	mov	r3, #1
   1d33c:	bl	117d0 <mythread_destroy@plt>
   1d340:	str	r0, [r4]
   1d344:	ldr	r0, [r4, #4]
   1d348:	mov	r1, #1
   1d34c:	mov	r2, r6
   1d350:	mov	r3, r5
   1d354:	bl	11cd4 <mythread_init@plt>
   1d358:	cmp	r0, #0
   1d35c:	moveq	r7, #0
   1d360:	moveq	r0, r7
   1d364:	popeq	{r4, r5, r6, r7, fp, pc}
   1d368:	mov	r7, r0
   1d36c:	ldr	r0, [r4, #4]
   1d370:	mov	r1, #0
   1d374:	mov	r2, #0
   1d378:	mov	r3, #1
   1d37c:	bl	117d0 <mythread_destroy@plt>
   1d380:	str	r0, [r4, #4]
   1d384:	ldr	r0, [r4]
   1d388:	mov	r1, #0
   1d38c:	mov	r2, #0
   1d390:	mov	r3, #1
   1d394:	bl	117d0 <mythread_destroy@plt>
   1d398:	str	r0, [r4]
   1d39c:	mov	r0, r7
   1d3a0:	pop	{r4, r5, r6, r7, fp, pc}
   1d3a4:	mov	r7, #0
   1d3a8:	mov	r0, r7
   1d3ac:	str	r7, [r4, #4]
   1d3b0:	pop	{r4, r5, r6, r7, fp, pc}

0001d3b4 <myhtml_create@@Base>:
   1d3b4:	mov	r0, #1
   1d3b8:	mov	r1, #40	; 0x28
   1d3bc:	b	11020 <mycore_calloc@plt>

0001d3c0 <myhtml_init@@Base>:
   1d3c0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1d3c4:	add	fp, sp, #24
   1d3c8:	sub	sp, sp, #8
   1d3cc:	mov	r4, r0
   1d3d0:	str	r1, [r0, #32]
   1d3d4:	mov	r0, #44	; 0x2c
   1d3d8:	mov	r5, r2
   1d3dc:	mov	r7, r1
   1d3e0:	bl	119c8 <mycore_malloc@plt>
   1d3e4:	cmp	r0, #0
   1d3e8:	str	r0, [r4, #36]	; 0x24
   1d3ec:	beq	1d3f4 <myhtml_init@@Base+0x34>
   1d3f0:	bl	11cc8 <myhtml_tree_node_clean@plt>
   1d3f4:	mov	r0, r4
   1d3f8:	bl	10e64 <myhtml_tokenizer_state_init@plt>
   1d3fc:	mov	r6, r0
   1d400:	cmp	r0, #0
   1d404:	str	r0, [sp, #4]
   1d408:	bne	1d5b8 <myhtml_init@@Base+0x1f8>
   1d40c:	mov	r0, r4
   1d410:	bl	11950 <myhtml_rules_init@plt>
   1d414:	mov	r6, r0
   1d418:	cmp	r0, #0
   1d41c:	str	r0, [sp, #4]
   1d420:	bne	1d5b8 <myhtml_init@@Base+0x1f8>
   1d424:	cmp	r5, #0
   1d428:	movweq	r5, #1
   1d42c:	cmp	r7, #2
   1d430:	beq	1d454 <myhtml_init@@Base+0x94>
   1d434:	cmp	r7, #1
   1d438:	bne	1d49c <myhtml_init@@Base+0xdc>
   1d43c:	mov	r6, #0
   1d440:	mov	r0, #0
   1d444:	str	r6, [r4]
   1d448:	str	r6, [r4, #4]
   1d44c:	str	r6, [sp, #4]
   1d450:	b	1d5a4 <myhtml_init@@Base+0x1e4>
   1d454:	bl	10f6c <mythread_create@plt>
   1d458:	mov	r1, #0
   1d45c:	mov	r2, #1
   1d460:	mov	r3, #0
   1d464:	str	r0, [r4]
   1d468:	mov	r7, #0
   1d46c:	bl	11cd4 <mythread_init@plt>
   1d470:	cmp	r0, #0
   1d474:	beq	1d564 <myhtml_init@@Base+0x1a4>
   1d478:	mov	r6, r0
   1d47c:	ldr	r0, [r4]
   1d480:	mov	r1, #0
   1d484:	mov	r2, #0
   1d488:	mov	r3, #1
   1d48c:	bl	117d0 <mythread_destroy@plt>
   1d490:	str	r0, [r4]
   1d494:	str	r6, [sp, #4]
   1d498:	b	1d5b8 <myhtml_init@@Base+0x1f8>
   1d49c:	cmp	r5, #2
   1d4a0:	mov	r0, r4
   1d4a4:	mov	r1, #1
   1d4a8:	movls	r5, #2
   1d4ac:	sub	r2, r5, #1
   1d4b0:	bl	11464 <myhtml_create_stream_and_batch@plt>
   1d4b4:	mov	r6, r0
   1d4b8:	cmp	r0, #0
   1d4bc:	str	r0, [sp, #4]
   1d4c0:	bne	1d5b8 <myhtml_init@@Base+0x1f8>
   1d4c4:	add	r0, sp, #4
   1d4c8:	bl	1165c <mythread_queue_list_create@plt>
   1d4cc:	ldr	r3, [r4]
   1d4d0:	str	r0, [r3, #16]
   1d4d4:	ldr	r1, [r4, #4]
   1d4d8:	str	r0, [r1, #16]
   1d4dc:	mov	r0, r3
   1d4e0:	mov	r3, #4
   1d4e4:	ldr	r1, [pc, #232]	; 1d5d4 <myhtml_init@@Base+0x214>
   1d4e8:	ldr	r1, [pc, r1]
   1d4ec:	ldr	r2, [pc, #228]	; 1d5d8 <myhtml_init@@Base+0x218>
   1d4f0:	ldr	r2, [pc, r2]
   1d4f4:	bl	116f8 <myhread_entry_create@plt>
   1d4f8:	mov	r6, r0
   1d4fc:	cmp	r0, #0
   1d500:	str	r0, [sp, #4]
   1d504:	bne	1d5b8 <myhtml_init@@Base+0x1f8>
   1d508:	ldr	r0, [r4, #4]
   1d50c:	ldr	r1, [r0, #8]
   1d510:	cmp	r1, #0
   1d514:	beq	1d55c <myhtml_init@@Base+0x19c>
   1d518:	ldr	r8, [pc, #188]	; 1d5dc <myhtml_init@@Base+0x21c>
   1d51c:	mov	r7, #0
   1d520:	ldr	r8, [pc, r8]
   1d524:	ldr	r9, [pc, #180]	; 1d5e0 <myhtml_init@@Base+0x220>
   1d528:	ldr	r9, [pc, r9]
   1d52c:	mov	r1, r8
   1d530:	mov	r2, r9
   1d534:	mov	r3, #4
   1d538:	bl	116f8 <myhread_entry_create@plt>
   1d53c:	cmp	r0, #0
   1d540:	str	r0, [sp, #4]
   1d544:	bne	1d5c4 <myhtml_init@@Base+0x204>
   1d548:	ldr	r0, [r4, #4]
   1d54c:	add	r7, r7, #1
   1d550:	ldr	r1, [r0, #8]
   1d554:	cmp	r7, r1
   1d558:	bcc	1d52c <myhtml_init@@Base+0x16c>
   1d55c:	mov	r6, #0
   1d560:	b	1d5a4 <myhtml_init@@Base+0x1e4>
   1d564:	add	r0, sp, #4
   1d568:	str	r7, [r4, #4]
   1d56c:	str	r7, [sp, #4]
   1d570:	bl	1165c <mythread_queue_list_create@plt>
   1d574:	ldr	r3, [r4]
   1d578:	str	r0, [r3, #16]
   1d57c:	mov	r0, r3
   1d580:	mov	r3, #4
   1d584:	ldr	r1, [pc, #64]	; 1d5cc <myhtml_init@@Base+0x20c>
   1d588:	ldr	r1, [pc, r1]
   1d58c:	ldr	r2, [pc, #60]	; 1d5d0 <myhtml_init@@Base+0x210>
   1d590:	ldr	r2, [pc, r2]
   1d594:	bl	116f8 <myhread_entry_create@plt>
   1d598:	str	r0, [sp, #4]
   1d59c:	mov	r6, r0
   1d5a0:	ldr	r0, [r4, #4]
   1d5a4:	ldr	r2, [r4]
   1d5a8:	mov	r1, #0
   1d5ac:	str	r2, [r4, #8]
   1d5b0:	add	r2, r4, #12
   1d5b4:	stm	r2, {r0, r1, r5}
   1d5b8:	mov	r0, r6
   1d5bc:	sub	sp, fp, #24
   1d5c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d5c4:	mov	r6, r0
   1d5c8:	b	1d5b8 <myhtml_init@@Base+0x1f8>
   1d5cc:	andeq	sp, pc, r8, asr #31
   1d5d0:	andeq	sp, pc, ip, asr #31
   1d5d4:	andeq	lr, pc, r8, rrx
   1d5d8:	andeq	lr, pc, r8, ror #5
   1d5dc:	andeq	lr, pc, r4, lsr #32
   1d5e0:	andeq	lr, pc, ip, lsr r0	; <UNPREDICTABLE>

0001d5e4 <myhtml_clean@@Base>:
   1d5e4:	bx	lr

0001d5e8 <myhtml_destroy@@Base>:
   1d5e8:	cmp	r0, #0
   1d5ec:	beq	1d6a0 <myhtml_destroy@@Base+0xb8>
   1d5f0:	push	{r4, r5, fp, lr}
   1d5f4:	add	fp, sp, #8
   1d5f8:	mov	r4, r0
   1d5fc:	ldr	r0, [r0, #36]	; 0x24
   1d600:	cmp	r0, #0
   1d604:	beq	1d60c <myhtml_destroy@@Base+0x24>
   1d608:	bl	11ab8 <mycore_free@plt>
   1d60c:	ldr	r0, [r4]
   1d610:	cmp	r0, #0
   1d614:	beq	1d67c <myhtml_destroy@@Base+0x94>
   1d618:	ldr	r5, [r0, #16]
   1d61c:	cmp	r5, #0
   1d620:	beq	1d630 <myhtml_destroy@@Base+0x48>
   1d624:	mov	r1, r5
   1d628:	bl	11ac4 <mythread_queue_list_wait_for_done@plt>
   1d62c:	ldr	r0, [r4]
   1d630:	ldr	r1, [pc, #112]	; 1d6a8 <myhtml_destroy@@Base+0xc0>
   1d634:	mov	r2, #0
   1d638:	mov	r3, #1
   1d63c:	ldr	r1, [pc, r1]
   1d640:	bl	117d0 <mythread_destroy@plt>
   1d644:	str	r0, [r4]
   1d648:	ldr	r0, [r4, #4]
   1d64c:	cmp	r0, #0
   1d650:	beq	1d66c <myhtml_destroy@@Base+0x84>
   1d654:	ldr	r1, [pc, #80]	; 1d6ac <myhtml_destroy@@Base+0xc4>
   1d658:	mov	r2, #0
   1d65c:	mov	r3, #1
   1d660:	ldr	r1, [pc, r1]
   1d664:	bl	117d0 <mythread_destroy@plt>
   1d668:	str	r0, [r4, #4]
   1d66c:	cmp	r5, #0
   1d670:	beq	1d67c <myhtml_destroy@@Base+0x94>
   1d674:	mov	r0, r5
   1d678:	bl	111b8 <mythread_queue_list_destroy@plt>
   1d67c:	mov	r0, r4
   1d680:	bl	111a0 <myhtml_tokenizer_state_destroy@plt>
   1d684:	ldr	r0, [r4, #28]
   1d688:	cmp	r0, #0
   1d68c:	beq	1d694 <myhtml_destroy@@Base+0xac>
   1d690:	bl	11ab8 <mycore_free@plt>
   1d694:	mov	r0, r4
   1d698:	bl	11ab8 <mycore_free@plt>
   1d69c:	pop	{r4, r5, fp, lr}
   1d6a0:	mov	r0, #0
   1d6a4:	bx	lr
   1d6a8:	andeq	lr, pc, ip, lsr r0	; <UNPREDICTABLE>
   1d6ac:	andeq	lr, pc, r8, lsl r0	; <UNPREDICTABLE>

0001d6b0 <myhtml_parse@@Base>:
   1d6b0:	push	{r4, r5, r6, r7, fp, lr}
   1d6b4:	add	fp, sp, #16
   1d6b8:	mov	r4, r0
   1d6bc:	ldr	r0, [r0, #180]	; 0xb4
   1d6c0:	mov	r5, r3
   1d6c4:	mov	r6, r2
   1d6c8:	mov	r7, r1
   1d6cc:	tst	r0, #32
   1d6d0:	beq	1d6dc <myhtml_parse@@Base+0x2c>
   1d6d4:	mov	r0, r4
   1d6d8:	bl	115b4 <myhtml_tree_clean@plt>
   1d6dc:	cmp	r7, #41	; 0x29
   1d6e0:	mov	r0, r4
   1d6e4:	mov	r1, r6
   1d6e8:	mov	r2, r5
   1d6ec:	strls	r7, [r4, #200]	; 0xc8
   1d6f0:	strls	r7, [r4, #204]	; 0xcc
   1d6f4:	bl	111d0 <myhtml_tokenizer_begin@plt>
   1d6f8:	cmp	r0, #0
   1d6fc:	popne	{r4, r5, r6, r7, fp, pc}
   1d700:	mov	r0, r4
   1d704:	pop	{r4, r5, r6, r7, fp, lr}
   1d708:	b	11290 <myhtml_tokenizer_end@plt>

0001d70c <myhtml_encoding_set@@Base>:
   1d70c:	cmp	r1, #41	; 0x29
   1d710:	strls	r1, [r0, #200]	; 0xc8
   1d714:	strls	r1, [r0, #204]	; 0xcc
   1d718:	bx	lr

0001d71c <myhtml_parse_fragment@@Base>:
   1d71c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1d720:	add	fp, sp, #24
   1d724:	mov	r4, r0
   1d728:	ldr	r0, [r0, #180]	; 0xb4
   1d72c:	ldr	r5, [fp, #12]
   1d730:	ldr	r6, [fp, #8]
   1d734:	mov	r8, r3
   1d738:	mov	r9, r2
   1d73c:	mov	r7, r1
   1d740:	tst	r0, #32
   1d744:	beq	1d750 <myhtml_parse_fragment@@Base+0x34>
   1d748:	mov	r0, r4
   1d74c:	bl	115b4 <myhtml_tree_clean@plt>
   1d750:	cmp	r6, #0
   1d754:	mov	r0, r4
   1d758:	movweq	r6, #42	; 0x2a
   1d75c:	cmp	r5, #0
   1d760:	movweq	r5, #1
   1d764:	mov	r1, r6
   1d768:	mov	r2, r5
   1d76c:	bl	10e40 <myhtml_tokenizer_fragment_init@plt>
   1d770:	cmp	r0, #0
   1d774:	beq	1d7a8 <myhtml_parse_fragment@@Base+0x8c>
   1d778:	cmp	r7, #41	; 0x29
   1d77c:	mov	r0, r4
   1d780:	mov	r1, r9
   1d784:	mov	r2, r8
   1d788:	strls	r7, [r4, #200]	; 0xc8
   1d78c:	strls	r7, [r4, #204]	; 0xcc
   1d790:	bl	111d0 <myhtml_tokenizer_begin@plt>
   1d794:	cmp	r0, #0
   1d798:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d79c:	mov	r0, r4
   1d7a0:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1d7a4:	b	11290 <myhtml_tokenizer_end@plt>
   1d7a8:	movw	r0, #37165	; 0x912d
   1d7ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001d7b0 <myhtml_parse_single@@Base>:
   1d7b0:	push	{r4, r5, r6, r7, fp, lr}
   1d7b4:	add	fp, sp, #16
   1d7b8:	mov	r4, r0
   1d7bc:	ldr	r0, [r0, #180]	; 0xb4
   1d7c0:	mov	r5, r3
   1d7c4:	mov	r6, r2
   1d7c8:	mov	r7, r1
   1d7cc:	tst	r0, #32
   1d7d0:	beq	1d7dc <myhtml_parse_single@@Base+0x2c>
   1d7d4:	mov	r0, r4
   1d7d8:	bl	115b4 <myhtml_tree_clean@plt>
   1d7dc:	ldr	r0, [r4, #180]	; 0xb4
   1d7e0:	cmp	r7, #41	; 0x29
   1d7e4:	mov	r1, r6
   1d7e8:	mov	r2, r5
   1d7ec:	orr	r0, r0, #16
   1d7f0:	str	r0, [r4, #180]	; 0xb4
   1d7f4:	mov	r0, r4
   1d7f8:	strls	r7, [r4, #200]	; 0xc8
   1d7fc:	strls	r7, [r4, #204]	; 0xcc
   1d800:	bl	111d0 <myhtml_tokenizer_begin@plt>
   1d804:	cmp	r0, #0
   1d808:	popne	{r4, r5, r6, r7, fp, pc}
   1d80c:	mov	r0, r4
   1d810:	pop	{r4, r5, r6, r7, fp, lr}
   1d814:	b	11290 <myhtml_tokenizer_end@plt>

0001d818 <myhtml_parse_fragment_single@@Base>:
   1d818:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1d81c:	add	fp, sp, #24
   1d820:	mov	r4, r0
   1d824:	ldr	r0, [r0, #180]	; 0xb4
   1d828:	ldr	r5, [fp, #12]
   1d82c:	ldr	r6, [fp, #8]
   1d830:	mov	r8, r3
   1d834:	mov	r9, r2
   1d838:	mov	r7, r1
   1d83c:	tst	r0, #32
   1d840:	beq	1d84c <myhtml_parse_fragment_single@@Base+0x34>
   1d844:	mov	r0, r4
   1d848:	bl	115b4 <myhtml_tree_clean@plt>
   1d84c:	ldr	r0, [r4, #180]	; 0xb4
   1d850:	cmp	r6, #0
   1d854:	movweq	r6, #42	; 0x2a
   1d858:	cmp	r5, #0
   1d85c:	movweq	r5, #1
   1d860:	mov	r1, r6
   1d864:	mov	r2, r5
   1d868:	orr	r0, r0, #16
   1d86c:	str	r0, [r4, #180]	; 0xb4
   1d870:	mov	r0, r4
   1d874:	bl	10e40 <myhtml_tokenizer_fragment_init@plt>
   1d878:	cmp	r0, #0
   1d87c:	beq	1d8b0 <myhtml_parse_fragment_single@@Base+0x98>
   1d880:	cmp	r7, #41	; 0x29
   1d884:	mov	r0, r4
   1d888:	mov	r1, r9
   1d88c:	mov	r2, r8
   1d890:	strls	r7, [r4, #200]	; 0xc8
   1d894:	strls	r7, [r4, #204]	; 0xcc
   1d898:	bl	111d0 <myhtml_tokenizer_begin@plt>
   1d89c:	cmp	r0, #0
   1d8a0:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d8a4:	mov	r0, r4
   1d8a8:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1d8ac:	b	11290 <myhtml_tokenizer_end@plt>
   1d8b0:	movw	r0, #37165	; 0x912d
   1d8b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001d8b8 <myhtml_parse_chunk@@Base>:
   1d8b8:	push	{r4, r5, r6, sl, fp, lr}
   1d8bc:	add	fp, sp, #16
   1d8c0:	mov	r6, r0
   1d8c4:	ldr	r0, [r0, #180]	; 0xb4
   1d8c8:	mov	r4, r2
   1d8cc:	mov	r5, r1
   1d8d0:	tst	r0, #32
   1d8d4:	beq	1d8e0 <myhtml_parse_chunk@@Base+0x28>
   1d8d8:	mov	r0, r6
   1d8dc:	bl	115b4 <myhtml_tree_clean@plt>
   1d8e0:	mov	r0, r6
   1d8e4:	mov	r1, r5
   1d8e8:	mov	r2, r4
   1d8ec:	pop	{r4, r5, r6, sl, fp, lr}
   1d8f0:	b	1117c <myhtml_tokenizer_chunk@plt>

0001d8f4 <myhtml_parse_chunk_fragment@@Base>:
   1d8f4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d8f8:	add	fp, sp, #24
   1d8fc:	mov	r6, r0
   1d900:	ldr	r0, [r0, #180]	; 0xb4
   1d904:	ldr	r4, [fp, #8]
   1d908:	mov	r7, r3
   1d90c:	mov	r8, r2
   1d910:	mov	r5, r1
   1d914:	tst	r0, #32
   1d918:	beq	1d924 <myhtml_parse_chunk_fragment@@Base+0x30>
   1d91c:	mov	r0, r6
   1d920:	bl	115b4 <myhtml_tree_clean@plt>
   1d924:	cmp	r7, #0
   1d928:	mov	r0, r6
   1d92c:	movweq	r7, #42	; 0x2a
   1d930:	cmp	r4, #0
   1d934:	movweq	r4, #1
   1d938:	mov	r1, r7
   1d93c:	mov	r2, r4
   1d940:	bl	10e40 <myhtml_tokenizer_fragment_init@plt>
   1d944:	cmp	r0, #0
   1d948:	movweq	r0, #37165	; 0x912d
   1d94c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d950:	mov	r0, r6
   1d954:	mov	r1, r5
   1d958:	mov	r2, r8
   1d95c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d960:	b	1117c <myhtml_tokenizer_chunk@plt>

0001d964 <myhtml_parse_chunk_single@@Base>:
   1d964:	push	{r4, r5, r6, sl, fp, lr}
   1d968:	add	fp, sp, #16
   1d96c:	mov	r6, r0
   1d970:	ldr	r0, [r0, #180]	; 0xb4
   1d974:	mov	r4, r2
   1d978:	mov	r5, r1
   1d97c:	tst	r0, #16
   1d980:	ldreq	r0, [r6, #180]	; 0xb4
   1d984:	orreq	r0, r0, #16
   1d988:	streq	r0, [r6, #180]	; 0xb4
   1d98c:	ldr	r0, [r6, #180]	; 0xb4
   1d990:	tst	r0, #32
   1d994:	beq	1d9a0 <myhtml_parse_chunk_single@@Base+0x3c>
   1d998:	mov	r0, r6
   1d99c:	bl	115b4 <myhtml_tree_clean@plt>
   1d9a0:	mov	r0, r6
   1d9a4:	mov	r1, r5
   1d9a8:	mov	r2, r4
   1d9ac:	pop	{r4, r5, r6, sl, fp, lr}
   1d9b0:	b	1117c <myhtml_tokenizer_chunk@plt>

0001d9b4 <myhtml_parse_chunk_fragment_single@@Base>:
   1d9b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d9b8:	add	fp, sp, #24
   1d9bc:	mov	r6, r0
   1d9c0:	ldr	r0, [r0, #180]	; 0xb4
   1d9c4:	ldr	r4, [fp, #8]
   1d9c8:	mov	r7, r3
   1d9cc:	mov	r8, r2
   1d9d0:	mov	r5, r1
   1d9d4:	tst	r0, #16
   1d9d8:	ldreq	r0, [r6, #180]	; 0xb4
   1d9dc:	orreq	r0, r0, #16
   1d9e0:	streq	r0, [r6, #180]	; 0xb4
   1d9e4:	ldr	r0, [r6, #180]	; 0xb4
   1d9e8:	tst	r0, #32
   1d9ec:	beq	1d9f8 <myhtml_parse_chunk_fragment_single@@Base+0x44>
   1d9f0:	mov	r0, r6
   1d9f4:	bl	115b4 <myhtml_tree_clean@plt>
   1d9f8:	cmp	r7, #0
   1d9fc:	mov	r0, r6
   1da00:	movweq	r7, #42	; 0x2a
   1da04:	cmp	r4, #0
   1da08:	movweq	r4, #1
   1da0c:	mov	r1, r7
   1da10:	mov	r2, r4
   1da14:	bl	10e40 <myhtml_tokenizer_fragment_init@plt>
   1da18:	cmp	r0, #0
   1da1c:	movweq	r0, #37165	; 0x912d
   1da20:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1da24:	mov	r0, r6
   1da28:	mov	r1, r5
   1da2c:	mov	r2, r8
   1da30:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1da34:	b	1117c <myhtml_tokenizer_chunk@plt>

0001da38 <myhtml_parse_chunk_end@@Base>:
   1da38:	b	11290 <myhtml_tokenizer_end@plt>

0001da3c <myhtml_encoding_get@@Base>:
   1da3c:	ldr	r0, [r0, #200]	; 0xc8
   1da40:	bx	lr

0001da44 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base>:
   1da44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1da48:	add	fp, sp, #28
   1da4c:	sub	sp, sp, #4
   1da50:	mov	r8, #0
   1da54:	cmp	r0, #0
   1da58:	beq	1dae4 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0xa0>
   1da5c:	mov	r5, r2
   1da60:	mov	r6, r1
   1da64:	mov	r7, r0
   1da68:	movw	sl, #1025	; 0x401
   1da6c:	movw	r9, #1026	; 0x402
   1da70:	ldr	r0, [r7, #4]
   1da74:	cmp	r0, r5
   1da78:	bne	1dac0 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x7c>
   1da7c:	ldr	r0, [r6, #8]
   1da80:	ldr	r1, [r6]
   1da84:	add	r2, r0, #1
   1da88:	str	r7, [r1, r0, lsl #2]
   1da8c:	str	r2, [r6, #8]
   1da90:	ldr	r1, [r6, #4]
   1da94:	cmp	r2, r1
   1da98:	addcs	r2, r0, sl
   1da9c:	cmpcs	r2, r1
   1daa0:	bcc	1dac0 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x7c>
   1daa4:	add	r4, r0, r9
   1daa8:	ldr	r0, [r6]
   1daac:	lsl	r1, r4, #2
   1dab0:	bl	10db0 <mycore_realloc@plt>
   1dab4:	cmp	r0, #0
   1dab8:	beq	1daf0 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0xac>
   1dabc:	stm	r6, {r0, r4}
   1dac0:	ldr	r0, [r7, #20]
   1dac4:	cmp	r0, #0
   1dac8:	beq	1dad8 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x94>
   1dacc:	mov	r1, r6
   1dad0:	mov	r2, r5
   1dad4:	bl	11980 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1dad8:	ldr	r7, [r7, #16]
   1dadc:	cmp	r7, #0
   1dae0:	bne	1da70 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x2c>
   1dae4:	mov	r0, r8
   1dae8:	sub	sp, fp, #28
   1daec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1daf0:	mov	r8, #2
   1daf4:	b	1dae4 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0xa0>

0001daf8 <myhtml_collection_check_size@@Base>:
   1daf8:	push	{r4, r5, r6, sl, fp, lr}
   1dafc:	add	fp, sp, #16
   1db00:	mov	r5, r0
   1db04:	ldr	r3, [r0, #4]
   1db08:	ldr	r0, [r0, #8]
   1db0c:	mov	r4, #0
   1db10:	add	r0, r0, r1
   1db14:	cmp	r0, r3
   1db18:	bcc	1db44 <myhtml_collection_check_size@@Base+0x4c>
   1db1c:	add	r0, r2, r0
   1db20:	add	r6, r0, #1
   1db24:	ldr	r0, [r5]
   1db28:	lsl	r1, r6, #2
   1db2c:	bl	10db0 <mycore_realloc@plt>
   1db30:	cmp	r0, #0
   1db34:	moveq	r4, #2
   1db38:	moveq	r0, r4
   1db3c:	popeq	{r4, r5, r6, sl, fp, pc}
   1db40:	stm	r5, {r0, r6}
   1db44:	mov	r0, r4
   1db48:	pop	{r4, r5, r6, sl, fp, pc}

0001db4c <myhtml_get_nodes_by_tag_id_in_scope@@Base>:
   1db4c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1db50:	add	fp, sp, #24
   1db54:	mov	r5, #0
   1db58:	cmp	r2, #0
   1db5c:	beq	1dbb4 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x68>
   1db60:	ldr	r8, [fp, #8]
   1db64:	mov	r6, r3
   1db68:	mov	r7, r2
   1db6c:	mov	r4, r1
   1db70:	cmp	r1, #0
   1db74:	beq	1dbbc <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x70>
   1db78:	ldr	r1, [r7, #20]
   1db7c:	mov	r5, #0
   1db80:	mov	r0, #0
   1db84:	cmp	r1, #0
   1db88:	beq	1db9c <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x50>
   1db8c:	mov	r0, r1
   1db90:	mov	r1, r4
   1db94:	mov	r2, r6
   1db98:	bl	11980 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1db9c:	ldr	r1, [r4]
   1dba0:	ldr	r2, [r4, #8]
   1dba4:	cmp	r8, #0
   1dba8:	str	r5, [r1, r2, lsl #2]
   1dbac:	mov	r5, r4
   1dbb0:	strne	r0, [r8]
   1dbb4:	mov	r0, r5
   1dbb8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1dbbc:	mov	r0, #12
   1dbc0:	bl	119c8 <mycore_malloc@plt>
   1dbc4:	cmp	r0, #0
   1dbc8:	beq	1dbfc <myhtml_get_nodes_by_tag_id_in_scope@@Base+0xb0>
   1dbcc:	mov	r4, r0
   1dbd0:	mov	r1, #1024	; 0x400
   1dbd4:	mov	r0, #0
   1dbd8:	str	r1, [r4, #4]
   1dbdc:	str	r0, [r4, #8]
   1dbe0:	mov	r0, #4096	; 0x1000
   1dbe4:	bl	119c8 <mycore_malloc@plt>
   1dbe8:	cmp	r0, #0
   1dbec:	str	r0, [r4]
   1dbf0:	bne	1db78 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x2c>
   1dbf4:	mov	r0, r4
   1dbf8:	bl	11ab8 <mycore_free@plt>
   1dbfc:	cmp	r8, #0
   1dc00:	movne	r0, #2
   1dc04:	strne	r0, [r8]
   1dc08:	movne	r0, r5
   1dc0c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   1dc10:	mov	r0, r5
   1dc14:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001dc18 <myhtml_collection_create@@Base>:
   1dc18:	push	{r4, r5, r6, r7, fp, lr}
   1dc1c:	add	fp, sp, #16
   1dc20:	mov	r7, r0
   1dc24:	mov	r0, #12
   1dc28:	mov	r4, r1
   1dc2c:	bl	119c8 <mycore_malloc@plt>
   1dc30:	cmp	r0, #0
   1dc34:	beq	1dc74 <myhtml_collection_create@@Base+0x5c>
   1dc38:	mov	r5, #0
   1dc3c:	str	r7, [r0, #4]
   1dc40:	mov	r6, r0
   1dc44:	str	r5, [r0, #8]
   1dc48:	lsl	r0, r7, #2
   1dc4c:	bl	119c8 <mycore_malloc@plt>
   1dc50:	cmp	r0, #0
   1dc54:	str	r0, [r6]
   1dc58:	beq	1dc7c <myhtml_collection_create@@Base+0x64>
   1dc5c:	cmp	r4, #0
   1dc60:	mov	r5, r6
   1dc64:	movne	r0, #0
   1dc68:	strne	r0, [r4]
   1dc6c:	mov	r0, r5
   1dc70:	pop	{r4, r5, r6, r7, fp, pc}
   1dc74:	mov	r5, #0
   1dc78:	b	1dc84 <myhtml_collection_create@@Base+0x6c>
   1dc7c:	mov	r0, r6
   1dc80:	bl	11ab8 <mycore_free@plt>
   1dc84:	cmp	r4, #0
   1dc88:	movne	r0, #2
   1dc8c:	strne	r0, [r4]
   1dc90:	movne	r0, r5
   1dc94:	popne	{r4, r5, r6, r7, fp, pc}
   1dc98:	mov	r0, r5
   1dc9c:	pop	{r4, r5, r6, r7, fp, pc}

0001dca0 <myhtml_get_nodes_by_name_in_scope@@Base>:
   1dca0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1dca4:	add	fp, sp, #24
   1dca8:	mov	r6, r2
   1dcac:	ldr	r0, [r0, #28]
   1dcb0:	ldr	r2, [fp, #8]
   1dcb4:	mov	r4, r1
   1dcb8:	mov	r1, r3
   1dcbc:	bl	11908 <myhtml_tag_get_by_name@plt>
   1dcc0:	cmp	r0, #0
   1dcc4:	mov	r5, #0
   1dcc8:	cmpne	r6, #0
   1dccc:	bne	1dcd8 <myhtml_get_nodes_by_name_in_scope@@Base+0x38>
   1dcd0:	mov	r0, r5
   1dcd4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1dcd8:	ldr	r8, [fp, #12]
   1dcdc:	ldr	r7, [r0]
   1dce0:	cmp	r4, #0
   1dce4:	beq	1dd2c <myhtml_get_nodes_by_name_in_scope@@Base+0x8c>
   1dce8:	ldr	r1, [r6, #20]
   1dcec:	mov	r5, #0
   1dcf0:	mov	r0, #0
   1dcf4:	cmp	r1, #0
   1dcf8:	beq	1dd0c <myhtml_get_nodes_by_name_in_scope@@Base+0x6c>
   1dcfc:	mov	r0, r1
   1dd00:	mov	r1, r4
   1dd04:	mov	r2, r7
   1dd08:	bl	11980 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1dd0c:	ldr	r1, [r4]
   1dd10:	ldr	r2, [r4, #8]
   1dd14:	cmp	r8, #0
   1dd18:	str	r5, [r1, r2, lsl #2]
   1dd1c:	mov	r5, r4
   1dd20:	strne	r0, [r8]
   1dd24:	mov	r0, r5
   1dd28:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1dd2c:	mov	r0, #12
   1dd30:	bl	119c8 <mycore_malloc@plt>
   1dd34:	cmp	r0, #0
   1dd38:	beq	1dd6c <myhtml_get_nodes_by_name_in_scope@@Base+0xcc>
   1dd3c:	mov	r4, r0
   1dd40:	mov	r1, #1024	; 0x400
   1dd44:	mov	r0, #0
   1dd48:	str	r1, [r4, #4]
   1dd4c:	str	r0, [r4, #8]
   1dd50:	mov	r0, #4096	; 0x1000
   1dd54:	bl	119c8 <mycore_malloc@plt>
   1dd58:	cmp	r0, #0
   1dd5c:	str	r0, [r4]
   1dd60:	bne	1dce8 <myhtml_get_nodes_by_name_in_scope@@Base+0x48>
   1dd64:	mov	r0, r4
   1dd68:	bl	11ab8 <mycore_free@plt>
   1dd6c:	cmp	r8, #0
   1dd70:	movne	r0, #2
   1dd74:	strne	r0, [r8]
   1dd78:	movne	r0, r5
   1dd7c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   1dd80:	mov	r0, r5
   1dd84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001dd88 <myhtml_get_nodes_by_tag_id@@Base>:
   1dd88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dd8c:	add	fp, sp, #28
   1dd90:	sub	sp, sp, #4
   1dd94:	mov	r9, r3
   1dd98:	mov	r6, r2
   1dd9c:	mov	r4, r1
   1dda0:	mov	sl, r0
   1dda4:	cmp	r1, #0
   1dda8:	beq	1de58 <myhtml_get_nodes_by_tag_id@@Base+0xd0>
   1ddac:	ldr	r1, [sl, #96]	; 0x60
   1ddb0:	cmp	r1, #0
   1ddb4:	beq	1de40 <myhtml_get_nodes_by_tag_id@@Base+0xb8>
   1ddb8:	movw	r8, #1026	; 0x402
   1ddbc:	ldr	r0, [r1, #4]
   1ddc0:	mov	r5, r1
   1ddc4:	cmp	r0, r6
   1ddc8:	bne	1de10 <myhtml_get_nodes_by_tag_id@@Base+0x88>
   1ddcc:	ldmib	r4, {r0, r1}
   1ddd0:	add	r2, r1, #1
   1ddd4:	cmp	r2, r0
   1ddd8:	bcs	1dde4 <myhtml_get_nodes_by_tag_id@@Base+0x5c>
   1dddc:	ldr	r0, [r4]
   1dde0:	b	1de08 <myhtml_get_nodes_by_tag_id@@Base+0x80>
   1dde4:	ldr	r0, [r4]
   1dde8:	add	r7, r1, r8
   1ddec:	lsl	r1, r7, #2
   1ddf0:	bl	10db0 <mycore_realloc@plt>
   1ddf4:	cmp	r0, #0
   1ddf8:	beq	1ded0 <myhtml_get_nodes_by_tag_id@@Base+0x148>
   1ddfc:	stm	r4, {r0, r7}
   1de00:	ldr	r1, [r4, #8]
   1de04:	add	r2, r1, #1
   1de08:	str	r5, [r0, r1, lsl #2]
   1de0c:	str	r2, [r4, #8]
   1de10:	ldr	r1, [r5, #20]
   1de14:	cmp	r1, #0
   1de18:	bne	1ddbc <myhtml_get_nodes_by_tag_id@@Base+0x34>
   1de1c:	ldr	r0, [sl, #96]	; 0x60
   1de20:	cmp	r5, r0
   1de24:	beq	1de40 <myhtml_get_nodes_by_tag_id@@Base+0xb8>
   1de28:	ldr	r1, [r5, #16]
   1de2c:	cmp	r1, #0
   1de30:	bne	1ddbc <myhtml_get_nodes_by_tag_id@@Base+0x34>
   1de34:	ldr	r5, [r5, #24]
   1de38:	cmp	r5, r0
   1de3c:	bne	1de28 <myhtml_get_nodes_by_tag_id@@Base+0xa0>
   1de40:	ldmib	r4, {r0, r1}
   1de44:	add	r2, r1, #1
   1de48:	cmp	r2, r0
   1de4c:	bcs	1dea0 <myhtml_get_nodes_by_tag_id@@Base+0x118>
   1de50:	ldr	r0, [r4]
   1de54:	b	1dec4 <myhtml_get_nodes_by_tag_id@@Base+0x13c>
   1de58:	mov	r0, #12
   1de5c:	bl	119c8 <mycore_malloc@plt>
   1de60:	cmp	r0, #0
   1de64:	beq	1de98 <myhtml_get_nodes_by_tag_id@@Base+0x110>
   1de68:	mov	r4, r0
   1de6c:	mov	r1, #1024	; 0x400
   1de70:	mov	r0, #0
   1de74:	str	r1, [r4, #4]
   1de78:	str	r0, [r4, #8]
   1de7c:	mov	r0, #4096	; 0x1000
   1de80:	bl	119c8 <mycore_malloc@plt>
   1de84:	cmp	r0, #0
   1de88:	str	r0, [r4]
   1de8c:	bne	1ddac <myhtml_get_nodes_by_tag_id@@Base+0x24>
   1de90:	mov	r0, r4
   1de94:	bl	11ab8 <mycore_free@plt>
   1de98:	mov	r4, #0
   1de9c:	b	1dedc <myhtml_get_nodes_by_tag_id@@Base+0x154>
   1dea0:	movw	r0, #1026	; 0x402
   1dea4:	add	r5, r1, r0
   1dea8:	ldr	r0, [r4]
   1deac:	lsl	r1, r5, #2
   1deb0:	bl	10db0 <mycore_realloc@plt>
   1deb4:	cmp	r0, #0
   1deb8:	beq	1ded0 <myhtml_get_nodes_by_tag_id@@Base+0x148>
   1debc:	stm	r4, {r0, r5}
   1dec0:	ldr	r1, [r4, #8]
   1dec4:	mov	r2, #0
   1dec8:	str	r2, [r0, r1, lsl #2]
   1decc:	b	1dedc <myhtml_get_nodes_by_tag_id@@Base+0x154>
   1ded0:	cmp	r9, #0
   1ded4:	movne	r0, #2
   1ded8:	strne	r0, [r9]
   1dedc:	mov	r0, r4
   1dee0:	sub	sp, fp, #28
   1dee4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001dee8 <myhtml_get_nodes_by_name@@Base>:
   1dee8:	push	{r4, r5, fp, lr}
   1deec:	add	fp, sp, #8
   1def0:	mov	r5, r0
   1def4:	ldr	r0, [r0, #28]
   1def8:	mov	r4, r1
   1defc:	mov	r1, r2
   1df00:	mov	r2, r3
   1df04:	bl	11908 <myhtml_tag_get_by_name@plt>
   1df08:	cmp	r0, #0
   1df0c:	moveq	r0, #0
   1df10:	popeq	{r4, r5, fp, pc}
   1df14:	ldr	r2, [r0]
   1df18:	ldr	r3, [fp, #8]
   1df1c:	mov	r0, r5
   1df20:	mov	r1, r4
   1df24:	pop	{r4, r5, fp, lr}
   1df28:	b	1dd88 <myhtml_get_nodes_by_tag_id@@Base>

0001df2c <myhtml_node_first@@Base>:
   1df2c:	ldr	r1, [r0, #84]	; 0x54
   1df30:	ldr	r0, [r0, #88]	; 0x58
   1df34:	cmp	r0, #0
   1df38:	beq	1df54 <myhtml_node_first@@Base+0x28>
   1df3c:	cmp	r1, #0
   1df40:	mov	r0, #0
   1df44:	ldrne	r1, [r1, #20]
   1df48:	cmpne	r1, #0
   1df4c:	bne	1df5c <myhtml_node_first@@Base+0x30>
   1df50:	bx	lr
   1df54:	cmp	r1, #0
   1df58:	beq	1df64 <myhtml_node_first@@Base+0x38>
   1df5c:	ldr	r0, [r1, #20]
   1df60:	bx	lr
   1df64:	mov	r0, #0
   1df68:	bx	lr

0001df6c <myhtml_node_next@@Base>:
   1df6c:	ldr	r0, [r0, #16]
   1df70:	bx	lr

0001df74 <myhtml_node_prev@@Base>:
   1df74:	ldr	r0, [r0, #12]
   1df78:	bx	lr

0001df7c <myhtml_node_parent@@Base>:
   1df7c:	ldr	r0, [r0, #24]
   1df80:	bx	lr

0001df84 <myhtml_node_child@@Base>:
   1df84:	ldr	r0, [r0, #20]
   1df88:	bx	lr

0001df8c <myhtml_node_last_child@@Base>:
   1df8c:	ldr	r0, [r0, #28]
   1df90:	bx	lr

0001df94 <myhtml_node_create@@Base>:
   1df94:	push	{r4, r5, fp, lr}
   1df98:	add	fp, sp, #8
   1df9c:	mov	r4, r2
   1dfa0:	mov	r5, r1
   1dfa4:	bl	110c8 <myhtml_tree_node_create@plt>
   1dfa8:	str	r5, [r0, #4]
   1dfac:	str	r4, [r0, #8]
   1dfb0:	pop	{r4, r5, fp, pc}

0001dfb4 <myhtml_node_remove@@Base>:
   1dfb4:	b	11adc <myhtml_tree_node_remove@plt>

0001dfb8 <myhtml_node_delete@@Base>:
   1dfb8:	b	11aac <myhtml_tree_node_delete@plt>

0001dfbc <myhtml_node_delete_recursive@@Base>:
   1dfbc:	b	110d4 <myhtml_tree_node_delete_recursive@plt>

0001dfc0 <myhtml_node_free@@Base>:
   1dfc0:	b	11a04 <myhtml_tree_node_free@plt>

0001dfc4 <myhtml_node_insert_before@@Base>:
   1dfc4:	push	{r4, sl, fp, lr}
   1dfc8:	add	fp, sp, #8
   1dfcc:	mov	r4, r1
   1dfd0:	mov	r1, r0
   1dfd4:	mov	r0, #0
   1dfd8:	cmp	r1, #0
   1dfdc:	cmpne	r4, #0
   1dfe0:	bne	1dfe8 <myhtml_node_insert_before@@Base+0x24>
   1dfe4:	pop	{r4, sl, fp, pc}
   1dfe8:	mov	r0, r1
   1dfec:	mov	r1, r4
   1dff0:	bl	1138c <myhtml_tree_node_insert_before@plt>
   1dff4:	mov	r0, r4
   1dff8:	pop	{r4, sl, fp, pc}

0001dffc <myhtml_node_insert_after@@Base>:
   1dffc:	push	{r4, sl, fp, lr}
   1e000:	add	fp, sp, #8
   1e004:	mov	r4, r1
   1e008:	mov	r1, r0
   1e00c:	mov	r0, #0
   1e010:	cmp	r1, #0
   1e014:	cmpne	r4, #0
   1e018:	bne	1e020 <myhtml_node_insert_after@@Base+0x24>
   1e01c:	pop	{r4, sl, fp, pc}
   1e020:	mov	r0, r1
   1e024:	mov	r1, r4
   1e028:	bl	1132c <myhtml_tree_node_insert_after@plt>
   1e02c:	mov	r0, r4
   1e030:	pop	{r4, sl, fp, pc}

0001e034 <myhtml_node_append_child@@Base>:
   1e034:	push	{r4, sl, fp, lr}
   1e038:	add	fp, sp, #8
   1e03c:	mov	r4, r1
   1e040:	mov	r1, r0
   1e044:	mov	r0, #0
   1e048:	cmp	r1, #0
   1e04c:	cmpne	r4, #0
   1e050:	bne	1e058 <myhtml_node_append_child@@Base+0x24>
   1e054:	pop	{r4, sl, fp, pc}
   1e058:	mov	r0, r1
   1e05c:	mov	r1, r4
   1e060:	bl	115a8 <myhtml_tree_node_add_child@plt>
   1e064:	mov	r0, r4
   1e068:	pop	{r4, sl, fp, pc}

0001e06c <myhtml_node_insert_to_appropriate_place@@Base>:
   1e06c:	push	{r4, sl, fp, lr}
   1e070:	add	fp, sp, #8
   1e074:	sub	sp, sp, #8
   1e078:	mov	r4, r1
   1e07c:	cmp	r0, #0
   1e080:	mov	r1, #0
   1e084:	cmpne	r4, #0
   1e088:	beq	1e0bc <myhtml_node_insert_to_appropriate_place@@Base+0x50>
   1e08c:	ldr	r1, [r0, #40]	; 0x28
   1e090:	mov	r2, #1
   1e094:	strb	r2, [r1, #188]	; 0xbc
   1e098:	add	r1, sp, #4
   1e09c:	bl	11824 <myhtml_tree_appropriate_place_inserting_in_tree@plt>
   1e0a0:	ldr	r1, [r0, #40]	; 0x28
   1e0a4:	mov	r2, #0
   1e0a8:	strb	r2, [r1, #188]	; 0xbc
   1e0ac:	mov	r1, r4
   1e0b0:	ldr	r2, [sp, #4]
   1e0b4:	bl	11320 <myhtml_tree_node_insert_by_mode@plt>
   1e0b8:	mov	r1, r4
   1e0bc:	mov	r0, r1
   1e0c0:	sub	sp, fp, #8
   1e0c4:	pop	{r4, sl, fp, pc}

0001e0c8 <myhtml_node_text_set@@Base>:
   1e0c8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e0cc:	add	fp, sp, #24
   1e0d0:	mov	r7, #0
   1e0d4:	cmp	r0, #0
   1e0d8:	beq	1e1c8 <myhtml_node_text_set@@Base+0x100>
   1e0dc:	mov	r6, r3
   1e0e0:	cmp	r3, #41	; 0x29
   1e0e4:	bhi	1e1c8 <myhtml_node_text_set@@Base+0x100>
   1e0e8:	mov	r4, r0
   1e0ec:	ldr	r0, [r0, #32]
   1e0f0:	mov	r9, r2
   1e0f4:	mov	r8, r1
   1e0f8:	ldr	r5, [r4, #40]	; 0x28
   1e0fc:	cmp	r0, #0
   1e100:	bne	1e128 <myhtml_node_text_set@@Base+0x60>
   1e104:	ldr	r0, [r5, #8]
   1e108:	ldr	r1, [r5, #40]	; 0x28
   1e10c:	bl	11800 <myhtml_token_node_create@plt>
   1e110:	cmp	r0, #0
   1e114:	str	r0, [r4, #32]
   1e118:	beq	1e1c8 <myhtml_node_text_set@@Base+0x100>
   1e11c:	ldr	r1, [r0, #48]	; 0x30
   1e120:	orr	r1, r1, #4
   1e124:	str	r1, [r0, #48]	; 0x30
   1e128:	mov	r7, r0
   1e12c:	ldr	r2, [r7, #4]!
   1e130:	cmp	r2, #0
   1e134:	beq	1e16c <myhtml_node_text_set@@Base+0xa4>
   1e138:	ldr	r1, [r0, #8]
   1e13c:	cmp	r1, r9
   1e140:	bcs	1e184 <myhtml_node_text_set@@Base+0xbc>
   1e144:	ldr	r1, [r0, #20]
   1e148:	ldr	r0, [r5, #4]
   1e14c:	bl	115e4 <mchar_async_free@plt>
   1e150:	ldr	r2, [r4, #32]
   1e154:	ldr	r0, [r5, #4]
   1e158:	ldr	r1, [r5, #52]	; 0x34
   1e15c:	mov	r3, r9
   1e160:	add	r2, r2, #4
   1e164:	bl	11524 <mycore_string_init@plt>
   1e168:	b	1e18c <myhtml_node_text_set@@Base+0xc4>
   1e16c:	ldr	r0, [r5, #4]
   1e170:	ldr	r1, [r5, #52]	; 0x34
   1e174:	add	r3, r9, #2
   1e178:	mov	r2, r7
   1e17c:	bl	11524 <mycore_string_init@plt>
   1e180:	b	1e18c <myhtml_node_text_set@@Base+0xc4>
   1e184:	mov	r1, #0
   1e188:	str	r1, [r0, #12]
   1e18c:	ldr	r0, [r4, #32]
   1e190:	mov	r1, r8
   1e194:	mov	r2, r9
   1e198:	cmp	r6, #0
   1e19c:	add	r0, r0, #4
   1e1a0:	beq	1e1b0 <myhtml_node_text_set@@Base+0xe8>
   1e1a4:	mov	r3, r6
   1e1a8:	bl	113e0 <myencoding_string_append@plt>
   1e1ac:	b	1e1b4 <myhtml_node_text_set@@Base+0xec>
   1e1b0:	bl	11710 <mycore_string_append@plt>
   1e1b4:	ldr	r0, [r4, #32]
   1e1b8:	mov	r1, #0
   1e1bc:	add	r7, r0, #4
   1e1c0:	str	r1, [r0, #24]
   1e1c4:	str	r1, [r0, #28]
   1e1c8:	mov	r0, r7
   1e1cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001e1d0 <myhtml_node_text_set_with_charef@@Base>:
   1e1d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e1d4:	add	fp, sp, #24
   1e1d8:	sub	sp, sp, #64	; 0x40
   1e1dc:	mov	r6, #0
   1e1e0:	cmp	r0, #0
   1e1e4:	beq	1e2ec <myhtml_node_text_set_with_charef@@Base+0x11c>
   1e1e8:	mov	r7, r3
   1e1ec:	cmp	r3, #41	; 0x29
   1e1f0:	bhi	1e2ec <myhtml_node_text_set_with_charef@@Base+0x11c>
   1e1f4:	mov	r4, r0
   1e1f8:	ldr	r0, [r0, #32]
   1e1fc:	mov	r9, r2
   1e200:	mov	r8, r1
   1e204:	ldr	r5, [r4, #40]	; 0x28
   1e208:	cmp	r0, #0
   1e20c:	bne	1e234 <myhtml_node_text_set_with_charef@@Base+0x64>
   1e210:	ldr	r0, [r5, #8]
   1e214:	ldr	r1, [r5, #40]	; 0x28
   1e218:	bl	11800 <myhtml_token_node_create@plt>
   1e21c:	cmp	r0, #0
   1e220:	str	r0, [r4, #32]
   1e224:	beq	1e2ec <myhtml_node_text_set_with_charef@@Base+0x11c>
   1e228:	ldr	r1, [r0, #48]	; 0x30
   1e22c:	orr	r1, r1, #4
   1e230:	str	r1, [r0, #48]	; 0x30
   1e234:	mov	r6, r0
   1e238:	ldr	r2, [r6, #4]!
   1e23c:	cmp	r2, #0
   1e240:	beq	1e278 <myhtml_node_text_set_with_charef@@Base+0xa8>
   1e244:	ldr	r1, [r0, #8]
   1e248:	cmp	r1, r9
   1e24c:	bcs	1e290 <myhtml_node_text_set_with_charef@@Base+0xc0>
   1e250:	ldr	r1, [r0, #20]
   1e254:	ldr	r0, [r5, #4]
   1e258:	bl	115e4 <mchar_async_free@plt>
   1e25c:	ldr	r2, [r4, #32]
   1e260:	ldr	r0, [r5, #4]
   1e264:	ldr	r1, [r5, #52]	; 0x34
   1e268:	mov	r3, r9
   1e26c:	add	r2, r2, #4
   1e270:	bl	11524 <mycore_string_init@plt>
   1e274:	b	1e298 <myhtml_node_text_set_with_charef@@Base+0xc8>
   1e278:	ldr	r0, [r5, #4]
   1e27c:	ldr	r1, [r5, #52]	; 0x34
   1e280:	add	r3, r9, #2
   1e284:	mov	r2, r6
   1e288:	bl	11524 <mycore_string_init@plt>
   1e28c:	b	1e298 <myhtml_node_text_set_with_charef@@Base+0xc8>
   1e290:	mov	r1, #0
   1e294:	str	r1, [r0, #12]
   1e298:	mov	r6, sp
   1e29c:	mov	r0, r6
   1e2a0:	bl	11470 <myhtml_data_process_entry_clean@plt>
   1e2a4:	add	r0, r6, #8
   1e2a8:	str	r7, [sp, #4]
   1e2ac:	bl	11224 <myencoding_result_clean@plt>
   1e2b0:	ldr	r0, [r4, #32]
   1e2b4:	mov	r2, r8
   1e2b8:	mov	r3, r9
   1e2bc:	add	r1, r0, #4
   1e2c0:	mov	r0, r6
   1e2c4:	bl	11614 <myhtml_data_process@plt>
   1e2c8:	ldr	r0, [r4, #32]
   1e2cc:	add	r1, r0, #4
   1e2d0:	mov	r0, r6
   1e2d4:	bl	11764 <myhtml_data_process_end@plt>
   1e2d8:	ldr	r0, [r4, #32]
   1e2dc:	mov	r1, #0
   1e2e0:	add	r6, r0, #4
   1e2e4:	str	r1, [r0, #24]
   1e2e8:	str	r1, [r0, #28]
   1e2ec:	mov	r0, r6
   1e2f0:	sub	sp, fp, #24
   1e2f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001e2f8 <myhtml_node_token@@Base>:
   1e2f8:	ldr	r0, [r0, #32]
   1e2fc:	bx	lr

0001e300 <myhtml_node_namespace@@Base>:
   1e300:	ldr	r0, [r0, #8]
   1e304:	bx	lr

0001e308 <myhtml_node_namespace_set@@Base>:
   1e308:	str	r1, [r0, #8]
   1e30c:	bx	lr

0001e310 <myhtml_node_tag_id@@Base>:
   1e310:	ldr	r0, [r0, #4]
   1e314:	bx	lr

0001e318 <myhtml_tag_name_by_id@@Base>:
   1e318:	push	{r4, r5, fp, lr}
   1e31c:	add	fp, sp, #8
   1e320:	cmp	r2, #0
   1e324:	mov	r4, r2
   1e328:	mov	r5, #0
   1e32c:	movne	r2, #0
   1e330:	strne	r2, [r4]
   1e334:	cmp	r0, #0
   1e338:	ldrne	r0, [r0, #28]
   1e33c:	cmpne	r0, #0
   1e340:	bne	1e34c <myhtml_tag_name_by_id@@Base+0x34>
   1e344:	mov	r0, r5
   1e348:	pop	{r4, r5, fp, pc}
   1e34c:	bl	11818 <myhtml_tag_get_by_id@plt>
   1e350:	cmp	r0, #0
   1e354:	beq	1e344 <myhtml_tag_name_by_id@@Base+0x2c>
   1e358:	cmp	r4, #0
   1e35c:	ldrne	r1, [r0, #8]
   1e360:	strne	r1, [r4]
   1e364:	ldr	r5, [r0, #4]
   1e368:	mov	r0, r5
   1e36c:	pop	{r4, r5, fp, pc}

0001e370 <myhtml_tag_id_by_name@@Base>:
   1e370:	push	{r4, sl, fp, lr}
   1e374:	add	fp, sp, #8
   1e378:	cmp	r0, #0
   1e37c:	mov	r4, #0
   1e380:	ldrne	r0, [r0, #28]
   1e384:	cmpne	r0, #0
   1e388:	bne	1e394 <myhtml_tag_id_by_name@@Base+0x24>
   1e38c:	mov	r0, r4
   1e390:	pop	{r4, sl, fp, pc}
   1e394:	bl	11908 <myhtml_tag_get_by_name@plt>
   1e398:	cmp	r0, #0
   1e39c:	ldrne	r4, [r0]
   1e3a0:	mov	r0, r4
   1e3a4:	pop	{r4, sl, fp, pc}

0001e3a8 <myhtml_node_is_close_self@@Base>:
   1e3a8:	ldr	r0, [r0, #32]
   1e3ac:	cmp	r0, #0
   1e3b0:	moveq	r0, #0
   1e3b4:	ldrne	r0, [r0, #48]	; 0x30
   1e3b8:	ubfxne	r0, r0, #1, #1
   1e3bc:	bx	lr

0001e3c0 <myhtml_node_is_void_element@@Base>:
   1e3c0:	ldr	r0, [r0, #4]
   1e3c4:	sub	r1, r0, #10
   1e3c8:	cmp	r1, #132	; 0x84
   1e3cc:	bhi	1e5f8 <myhtml_node_is_void_element@@Base+0x238>
   1e3d0:	add	r2, pc, #8
   1e3d4:	mov	r0, #1
   1e3d8:	ldr	r1, [r2, r1, lsl #2]
   1e3dc:	add	pc, r2, r1
   1e3e0:	andeq	r0, r0, r4, lsl r2
   1e3e4:	andeq	r0, r0, r8, lsl r2
   1e3e8:	andeq	r0, r0, r8, lsl r2
   1e3ec:	andeq	r0, r0, r8, lsl r2
   1e3f0:	andeq	r0, r0, r8, lsl r2
   1e3f4:	andeq	r0, r0, r4, lsl r2
   1e3f8:	andeq	r0, r0, r8, lsl r2
   1e3fc:	andeq	r0, r0, r8, lsl r2
   1e400:	andeq	r0, r0, r8, lsl r2
   1e404:	andeq	r0, r0, r8, lsl r2
   1e408:	andeq	r0, r0, r8, lsl r2
   1e40c:	andeq	r0, r0, r8, lsl r2
   1e410:	andeq	r0, r0, r8, lsl r2
   1e414:	andeq	r0, r0, r8, lsl r2
   1e418:	andeq	r0, r0, r4, lsl r2
   1e41c:	andeq	r0, r0, r8, lsl r2
   1e420:	andeq	r0, r0, r8, lsl r2
   1e424:	andeq	r0, r0, r8, lsl r2
   1e428:	andeq	r0, r0, r8, lsl r2
   1e42c:	andeq	r0, r0, r8, lsl r2
   1e430:	andeq	r0, r0, r8, lsl r2
   1e434:	andeq	r0, r0, r4, lsl r2
   1e438:	andeq	r0, r0, r8, lsl r2
   1e43c:	andeq	r0, r0, r4, lsl r2
   1e440:	andeq	r0, r0, r8, lsl r2
   1e444:	andeq	r0, r0, r8, lsl r2
   1e448:	andeq	r0, r0, r8, lsl r2
   1e44c:	andeq	r0, r0, r8, lsl r2
   1e450:	andeq	r0, r0, r8, lsl r2
   1e454:	andeq	r0, r0, r8, lsl r2
   1e458:	andeq	r0, r0, r8, lsl r2
   1e45c:	andeq	r0, r0, r8, lsl r2
   1e460:	andeq	r0, r0, r8, lsl r2
   1e464:	andeq	r0, r0, r8, lsl r2
   1e468:	andeq	r0, r0, r8, lsl r2
   1e46c:	andeq	r0, r0, r8, lsl r2
   1e470:	andeq	r0, r0, r4, lsl r2
   1e474:	andeq	r0, r0, r8, lsl r2
   1e478:	andeq	r0, r0, r8, lsl r2
   1e47c:	andeq	r0, r0, r8, lsl r2
   1e480:	andeq	r0, r0, r8, lsl r2
   1e484:	andeq	r0, r0, r8, lsl r2
   1e488:	andeq	r0, r0, r8, lsl r2
   1e48c:	andeq	r0, r0, r8, lsl r2
   1e490:	andeq	r0, r0, r8, lsl r2
   1e494:	andeq	r0, r0, r8, lsl r2
   1e498:	andeq	r0, r0, r8, lsl r2
   1e49c:	andeq	r0, r0, r8, lsl r2
   1e4a0:	andeq	r0, r0, r8, lsl r2
   1e4a4:	andeq	r0, r0, r8, lsl r2
   1e4a8:	andeq	r0, r0, r8, lsl r2
   1e4ac:	andeq	r0, r0, r8, lsl r2
   1e4b0:	andeq	r0, r0, r8, lsl r2
   1e4b4:	andeq	r0, r0, r8, lsl r2
   1e4b8:	andeq	r0, r0, r4, lsl r2
   1e4bc:	andeq	r0, r0, r8, lsl r2
   1e4c0:	andeq	r0, r0, r8, lsl r2
   1e4c4:	andeq	r0, r0, r8, lsl r2
   1e4c8:	andeq	r0, r0, r8, lsl r2
   1e4cc:	andeq	r0, r0, r4, lsl r2
   1e4d0:	andeq	r0, r0, r4, lsl r2
   1e4d4:	andeq	r0, r0, r8, lsl r2
   1e4d8:	andeq	r0, r0, r8, lsl r2
   1e4dc:	andeq	r0, r0, r8, lsl r2
   1e4e0:	andeq	r0, r0, r4, lsl r2
   1e4e4:	andeq	r0, r0, r8, lsl r2
   1e4e8:	andeq	r0, r0, r8, lsl r2
   1e4ec:	andeq	r0, r0, r8, lsl r2
   1e4f0:	andeq	r0, r0, r4, lsl r2
   1e4f4:	andeq	r0, r0, r8, lsl r2
   1e4f8:	andeq	r0, r0, r8, lsl r2
   1e4fc:	andeq	r0, r0, r8, lsl r2
   1e500:	andeq	r0, r0, r8, lsl r2
   1e504:	andeq	r0, r0, r8, lsl r2
   1e508:	andeq	r0, r0, r8, lsl r2
   1e50c:	andeq	r0, r0, r8, lsl r2
   1e510:	andeq	r0, r0, r4, lsl r2
   1e514:	andeq	r0, r0, r8, lsl r2
   1e518:	andeq	r0, r0, r8, lsl r2
   1e51c:	andeq	r0, r0, r8, lsl r2
   1e520:	andeq	r0, r0, r8, lsl r2
   1e524:	andeq	r0, r0, r8, lsl r2
   1e528:	andeq	r0, r0, r8, lsl r2
   1e52c:	andeq	r0, r0, r8, lsl r2
   1e530:	andeq	r0, r0, r8, lsl r2
   1e534:	andeq	r0, r0, r8, lsl r2
   1e538:	andeq	r0, r0, r8, lsl r2
   1e53c:	andeq	r0, r0, r8, lsl r2
   1e540:	andeq	r0, r0, r8, lsl r2
   1e544:	andeq	r0, r0, r8, lsl r2
   1e548:	andeq	r0, r0, r4, lsl r2
   1e54c:	andeq	r0, r0, r8, lsl r2
   1e550:	andeq	r0, r0, r8, lsl r2
   1e554:	andeq	r0, r0, r8, lsl r2
   1e558:	andeq	r0, r0, r8, lsl r2
   1e55c:	andeq	r0, r0, r8, lsl r2
   1e560:	andeq	r0, r0, r8, lsl r2
   1e564:	andeq	r0, r0, r8, lsl r2
   1e568:	andeq	r0, r0, r8, lsl r2
   1e56c:	andeq	r0, r0, r8, lsl r2
   1e570:	andeq	r0, r0, r8, lsl r2
   1e574:	andeq	r0, r0, r8, lsl r2
   1e578:	andeq	r0, r0, r8, lsl r2
   1e57c:	andeq	r0, r0, r8, lsl r2
   1e580:	andeq	r0, r0, r8, lsl r2
   1e584:	andeq	r0, r0, r8, lsl r2
   1e588:	andeq	r0, r0, r4, lsl r2
   1e58c:	andeq	r0, r0, r8, lsl r2
   1e590:	andeq	r0, r0, r8, lsl r2
   1e594:	andeq	r0, r0, r8, lsl r2
   1e598:	andeq	r0, r0, r8, lsl r2
   1e59c:	andeq	r0, r0, r8, lsl r2
   1e5a0:	andeq	r0, r0, r8, lsl r2
   1e5a4:	andeq	r0, r0, r8, lsl r2
   1e5a8:	andeq	r0, r0, r8, lsl r2
   1e5ac:	andeq	r0, r0, r8, lsl r2
   1e5b0:	andeq	r0, r0, r8, lsl r2
   1e5b4:	andeq	r0, r0, r8, lsl r2
   1e5b8:	andeq	r0, r0, r8, lsl r2
   1e5bc:	andeq	r0, r0, r8, lsl r2
   1e5c0:	andeq	r0, r0, r8, lsl r2
   1e5c4:	andeq	r0, r0, r8, lsl r2
   1e5c8:	andeq	r0, r0, r8, lsl r2
   1e5cc:	andeq	r0, r0, r8, lsl r2
   1e5d0:	andeq	r0, r0, r8, lsl r2
   1e5d4:	andeq	r0, r0, r8, lsl r2
   1e5d8:	andeq	r0, r0, r4, lsl r2
   1e5dc:	andeq	r0, r0, r8, lsl r2
   1e5e0:	andeq	r0, r0, r8, lsl r2
   1e5e4:	andeq	r0, r0, r8, lsl r2
   1e5e8:	andeq	r0, r0, r8, lsl r2
   1e5ec:	andeq	r0, r0, r8, lsl r2
   1e5f0:	andeq	r0, r0, r4, lsl r2
   1e5f4:	bx	lr
   1e5f8:	mov	r0, #0
   1e5fc:	bx	lr

0001e600 <myhtml_node_attribute_first@@Base>:
   1e600:	ldr	r0, [r0, #32]
   1e604:	cmp	r0, #0
   1e608:	ldrne	r0, [r0, #40]	; 0x28
   1e60c:	moveq	r0, #0
   1e610:	bx	lr

0001e614 <myhtml_node_attribute_last@@Base>:
   1e614:	ldr	r0, [r0, #32]
   1e618:	cmp	r0, #0
   1e61c:	ldrne	r0, [r0, #44]	; 0x2c
   1e620:	moveq	r0, #0
   1e624:	bx	lr

0001e628 <myhtml_node_text@@Base>:
   1e628:	ldr	r0, [r0, #32]
   1e62c:	cmp	r0, #0
   1e630:	beq	1e648 <myhtml_node_text@@Base+0x20>
   1e634:	ldr	r2, [r0, #12]
   1e638:	cmp	r2, #0
   1e63c:	ldrne	r0, [r0, #4]
   1e640:	cmpne	r0, #0
   1e644:	bne	1e658 <myhtml_node_text@@Base+0x30>
   1e648:	mov	r0, #0
   1e64c:	cmp	r1, #0
   1e650:	strne	r0, [r1]
   1e654:	bx	lr
   1e658:	cmp	r1, #0
   1e65c:	strne	r2, [r1]
   1e660:	bxne	lr
   1e664:	bx	lr

0001e668 <myhtml_node_string@@Base>:
   1e668:	cmp	r0, #0
   1e66c:	moveq	r0, #0
   1e670:	bxeq	lr
   1e674:	ldr	r0, [r0, #32]
   1e678:	cmp	r0, #0
   1e67c:	addne	r0, r0, #4
   1e680:	bx	lr

0001e684 <myhtml_node_raw_position@@Base>:
   1e684:	cmp	r1, #0
   1e688:	ldrne	r1, [r1, #32]
   1e68c:	cmpne	r1, #0
   1e690:	bne	1e6a4 <myhtml_node_raw_position@@Base+0x20>
   1e694:	mov	r1, #0
   1e698:	str	r1, [r0]
   1e69c:	str	r1, [r0, #4]
   1e6a0:	bx	lr
   1e6a4:	ldr	r2, [r1, #24]
   1e6a8:	ldr	r1, [r1, #28]
   1e6ac:	str	r2, [r0]
   1e6b0:	str	r1, [r0, #4]
   1e6b4:	bx	lr

0001e6b8 <myhtml_node_element_position@@Base>:
   1e6b8:	cmp	r1, #0
   1e6bc:	ldrne	r1, [r1, #32]
   1e6c0:	cmpne	r1, #0
   1e6c4:	bne	1e6d8 <myhtml_node_element_position@@Base+0x20>
   1e6c8:	mov	r1, #0
   1e6cc:	str	r1, [r0]
   1e6d0:	str	r1, [r0, #4]
   1e6d4:	bx	lr
   1e6d8:	ldr	r2, [r1, #32]
   1e6dc:	ldr	r1, [r1, #36]	; 0x24
   1e6e0:	str	r2, [r0]
   1e6e4:	str	r1, [r0, #4]
   1e6e8:	bx	lr

0001e6ec <myhtml_node_set_data@@Base>:
   1e6ec:	str	r1, [r0, #36]	; 0x24
   1e6f0:	bx	lr

0001e6f4 <myhtml_node_get_data@@Base>:
   1e6f4:	ldr	r0, [r0, #36]	; 0x24
   1e6f8:	bx	lr

0001e6fc <myhtml_node_tree@@Base>:
   1e6fc:	ldr	r0, [r0, #40]	; 0x28
   1e700:	bx	lr

0001e704 <myhtml_get_nodes_by_attribute_key_recursion@@Base>:
   1e704:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e708:	add	fp, sp, #28
   1e70c:	sub	sp, sp, #4
   1e710:	mov	r4, r0
   1e714:	mov	r0, #0
   1e718:	cmp	r4, #0
   1e71c:	beq	1e7f8 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xf4>
   1e720:	mov	r5, r3
   1e724:	mov	r6, r2
   1e728:	mov	r7, r1
   1e72c:	mov	r0, r4
   1e730:	mov	sl, r0
   1e734:	ldr	r0, [r0, #32]
   1e738:	cmp	r0, #0
   1e73c:	beq	1e7d0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xcc>
   1e740:	ldr	r8, [r0, #40]	; 0x28
   1e744:	cmp	r8, #0
   1e748:	bne	1e75c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x58>
   1e74c:	b	1e7d0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xcc>
   1e750:	ldr	r8, [r8]
   1e754:	cmp	r8, #0
   1e758:	beq	1e7d0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xcc>
   1e75c:	ldr	r0, [r8, #16]
   1e760:	cmp	r0, r5
   1e764:	bne	1e750 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x4c>
   1e768:	ldr	r0, [r8, #8]
   1e76c:	mov	r1, r6
   1e770:	mov	r2, r5
   1e774:	bl	112b4 <mycore_strncasecmp@plt>
   1e778:	cmp	r0, #0
   1e77c:	bne	1e750 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x4c>
   1e780:	ldr	r0, [r7, #8]
   1e784:	ldr	r1, [r7]
   1e788:	add	r2, r0, #1
   1e78c:	str	sl, [r1, r0, lsl #2]
   1e790:	str	r2, [r7, #8]
   1e794:	ldr	r1, [r7, #4]
   1e798:	cmp	r2, r1
   1e79c:	movwcs	r2, #1025	; 0x401
   1e7a0:	addcs	r2, r0, r2
   1e7a4:	cmpcs	r2, r1
   1e7a8:	bcc	1e750 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x4c>
   1e7ac:	movw	r1, #1026	; 0x402
   1e7b0:	add	r9, r0, r1
   1e7b4:	ldr	r0, [r7]
   1e7b8:	lsl	r1, r9, #2
   1e7bc:	bl	10db0 <mycore_realloc@plt>
   1e7c0:	cmp	r0, #0
   1e7c4:	beq	1e800 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xfc>
   1e7c8:	stm	r7, {r0, r9}
   1e7cc:	b	1e750 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x4c>
   1e7d0:	ldr	r0, [sl, #20]
   1e7d4:	cmp	r0, #0
   1e7d8:	bne	1e730 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x2c>
   1e7dc:	ldr	r0, [sl, #16]
   1e7e0:	cmp	r0, #0
   1e7e4:	bne	1e730 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x2c>
   1e7e8:	ldr	sl, [sl, #24]
   1e7ec:	cmp	sl, r4
   1e7f0:	bne	1e7dc <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xd8>
   1e7f4:	mov	r0, #0
   1e7f8:	sub	sp, fp, #28
   1e7fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e800:	mov	r0, #2
   1e804:	sub	sp, fp, #28
   1e808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001e80c <myhtml_get_nodes_by_attribute_key@@Base>:
   1e80c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e810:	add	fp, sp, #24
   1e814:	ldr	r9, [fp, #12]
   1e818:	mov	r5, r3
   1e81c:	mov	r6, r2
   1e820:	mov	r4, r1
   1e824:	mov	r8, r0
   1e828:	cmp	r1, #0
   1e82c:	beq	1e864 <myhtml_get_nodes_by_attribute_key@@Base+0x58>
   1e830:	cmp	r6, #0
   1e834:	ldr	r3, [fp, #8]
   1e838:	mov	r1, r4
   1e83c:	mov	r2, r5
   1e840:	ldreq	r6, [r8, #96]	; 0x60
   1e844:	mov	r0, r6
   1e848:	bl	10fd8 <myhtml_get_nodes_by_attribute_key_recursion@plt>
   1e84c:	cmp	r9, #0
   1e850:	mov	r7, r4
   1e854:	cmpne	r0, #0
   1e858:	strne	r0, [r9]
   1e85c:	mov	r0, r7
   1e860:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e864:	mov	r0, #12
   1e868:	bl	119c8 <mycore_malloc@plt>
   1e86c:	cmp	r0, #0
   1e870:	beq	1e8a8 <myhtml_get_nodes_by_attribute_key@@Base+0x9c>
   1e874:	mov	r4, r0
   1e878:	mov	r7, #0
   1e87c:	mov	r0, #1024	; 0x400
   1e880:	stmib	r4, {r0, r7}
   1e884:	mov	r0, #4096	; 0x1000
   1e888:	bl	119c8 <mycore_malloc@plt>
   1e88c:	cmp	r0, #0
   1e890:	str	r0, [r4]
   1e894:	beq	1e8b0 <myhtml_get_nodes_by_attribute_key@@Base+0xa4>
   1e898:	cmp	r9, #0
   1e89c:	movne	r0, #0
   1e8a0:	strne	r0, [r9]
   1e8a4:	b	1e830 <myhtml_get_nodes_by_attribute_key@@Base+0x24>
   1e8a8:	mov	r7, #0
   1e8ac:	b	1e8b8 <myhtml_get_nodes_by_attribute_key@@Base+0xac>
   1e8b0:	mov	r0, r4
   1e8b4:	bl	11ab8 <mycore_free@plt>
   1e8b8:	cmp	r9, #0
   1e8bc:	movne	r0, #2
   1e8c0:	strne	r0, [r9]
   1e8c4:	movne	r0, r7
   1e8c8:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e8cc:	mov	r0, r7
   1e8d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001e8d4 <myhtml_get_nodes_by_attribute_value_recursion_eq@@Base>:
   1e8d4:	ldr	ip, [r0, #8]
   1e8d8:	mov	r3, r0
   1e8dc:	mov	r0, #0
   1e8e0:	cmp	ip, r2
   1e8e4:	bxne	lr
   1e8e8:	push	{fp, lr}
   1e8ec:	mov	fp, sp
   1e8f0:	ldr	r0, [r3]
   1e8f4:	bl	11b84 <mycore_strncmp@plt>
   1e8f8:	clz	r0, r0
   1e8fc:	lsr	r0, r0, #5
   1e900:	pop	{fp, lr}
   1e904:	bx	lr

0001e908 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base>:
   1e908:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e90c:	add	fp, sp, #28
   1e910:	sub	sp, sp, #4
   1e914:	mov	r6, r0
   1e918:	ldr	r0, [r0, #8]
   1e91c:	cmp	r0, r2
   1e920:	bcc	1ea2c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x124>
   1e924:	ldr	r7, [r6]
   1e928:	mov	r4, r2
   1e92c:	mov	sl, r1
   1e930:	mov	r0, r7
   1e934:	bl	11b84 <mycore_strncmp@plt>
   1e938:	ldr	r1, [r6, #8]
   1e93c:	cmp	r0, #0
   1e940:	bne	1e98c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x84>
   1e944:	cmp	r1, r4
   1e948:	bls	1e980 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x78>
   1e94c:	ldrb	r0, [r7, r4]
   1e950:	sub	r0, r0, #9
   1e954:	uxtb	r2, r0
   1e958:	cmp	r2, #24
   1e95c:	bcs	1e980 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x78>
   1e960:	movw	r3, #27
   1e964:	mov	r0, #1
   1e968:	movt	r3, #128	; 0x80
   1e96c:	tst	r0, r3, lsr r2
   1e970:	bne	1ea38 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x130>
   1e974:	cmp	r1, r4
   1e978:	bne	1e98c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x84>
   1e97c:	b	1ea38 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x130>
   1e980:	mov	r0, #1
   1e984:	cmp	r1, r4
   1e988:	beq	1ea38 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x130>
   1e98c:	sub	r0, r1, #1
   1e990:	cmp	r0, r4
   1e994:	bcc	1ea2c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x124>
   1e998:	movw	r9, #27
   1e99c:	mov	r8, #1
   1e9a0:	mov	r5, #1
   1e9a4:	movt	r9, #128	; 0x80
   1e9a8:	add	r0, r7, r5
   1e9ac:	ldrb	r2, [r0, #-1]
   1e9b0:	sub	r2, r2, #9
   1e9b4:	cmp	r2, #23
   1e9b8:	bhi	1ea1c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x114>
   1e9bc:	tst	r9, r8, lsl r2
   1e9c0:	beq	1ea1c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x114>
   1e9c4:	mov	r1, sl
   1e9c8:	mov	r2, r4
   1e9cc:	bl	11b84 <mycore_strncmp@plt>
   1e9d0:	cmp	r0, #0
   1e9d4:	beq	1e9e0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xd8>
   1e9d8:	ldr	r1, [r6, #8]
   1e9dc:	b	1ea1c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x114>
   1e9e0:	cmp	r5, r4
   1e9e4:	bls	1ea0c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x104>
   1e9e8:	add	r0, r5, r4
   1e9ec:	ldrb	r0, [r7, r0]
   1e9f0:	sub	r0, r0, #9
   1e9f4:	uxtb	r1, r0
   1e9f8:	cmp	r1, #24
   1e9fc:	bcs	1ea0c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x104>
   1ea00:	mov	r0, #1
   1ea04:	tst	r0, r9, lsr r1
   1ea08:	bne	1ea38 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x130>
   1ea0c:	ldr	r1, [r6, #8]
   1ea10:	sub	r0, r1, r5
   1ea14:	cmp	r0, r4
   1ea18:	beq	1ea40 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x138>
   1ea1c:	add	r5, r5, #1
   1ea20:	sub	r0, r1, r5
   1ea24:	cmp	r0, r4
   1ea28:	bcs	1e9a8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xa0>
   1ea2c:	mov	r0, #0
   1ea30:	sub	sp, fp, #28
   1ea34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ea38:	sub	sp, fp, #28
   1ea3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ea40:	mov	r0, #1
   1ea44:	sub	sp, fp, #28
   1ea48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001ea4c <myhtml_get_nodes_by_attribute_value_recursion_begin@@Base>:
   1ea4c:	ldr	ip, [r0, #8]
   1ea50:	mov	r3, r0
   1ea54:	mov	r0, #0
   1ea58:	cmp	ip, r2
   1ea5c:	bxcc	lr
   1ea60:	push	{fp, lr}
   1ea64:	mov	fp, sp
   1ea68:	ldr	r0, [r3]
   1ea6c:	bl	11b84 <mycore_strncmp@plt>
   1ea70:	clz	r0, r0
   1ea74:	lsr	r0, r0, #5
   1ea78:	pop	{fp, lr}
   1ea7c:	bx	lr

0001ea80 <myhtml_get_nodes_by_attribute_value_recursion_end@@Base>:
   1ea80:	ldr	r3, [r0, #8]
   1ea84:	mov	ip, #0
   1ea88:	cmp	r3, r2
   1ea8c:	bcc	1eab4 <myhtml_get_nodes_by_attribute_value_recursion_end@@Base+0x34>
   1ea90:	push	{fp, lr}
   1ea94:	mov	fp, sp
   1ea98:	ldr	r0, [r0]
   1ea9c:	sub	r3, r3, r2
   1eaa0:	add	r0, r0, r3
   1eaa4:	bl	11b84 <mycore_strncmp@plt>
   1eaa8:	clz	r0, r0
   1eaac:	lsr	ip, r0, #5
   1eab0:	pop	{fp, lr}
   1eab4:	mov	r0, ip
   1eab8:	bx	lr

0001eabc <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base>:
   1eabc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1eac0:	add	fp, sp, #24
   1eac4:	mov	r8, r1
   1eac8:	ldr	r1, [r0, #8]
   1eacc:	mov	r6, r0
   1ead0:	mov	r0, #0
   1ead4:	cmp	r1, r2
   1ead8:	popcc	{r4, r5, r6, r7, r8, sl, fp, pc}
   1eadc:	ldr	r7, [r6]
   1eae0:	mov	r4, r2
   1eae4:	mov	r5, #0
   1eae8:	b	1eb08 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x4c>
   1eaec:	ldr	r0, [r6, #8]
   1eaf0:	sub	r5, r5, #1
   1eaf4:	add	r7, r7, #1
   1eaf8:	add	r0, r0, r5
   1eafc:	cmp	r0, r4
   1eb00:	movcc	r0, #0
   1eb04:	popcc	{r4, r5, r6, r7, r8, sl, fp, pc}
   1eb08:	mov	r0, r7
   1eb0c:	mov	r1, r8
   1eb10:	mov	r2, r4
   1eb14:	bl	11b84 <mycore_strncmp@plt>
   1eb18:	cmp	r0, #0
   1eb1c:	bne	1eaec <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x30>
   1eb20:	mov	r0, #1
   1eb24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001eb28 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base>:
   1eb28:	push	{r4, r5, r6, sl, fp, lr}
   1eb2c:	add	fp, sp, #16
   1eb30:	mov	r4, r2
   1eb34:	ldr	r2, [r0, #8]
   1eb38:	mov	r6, r1
   1eb3c:	mov	r1, r0
   1eb40:	mov	r0, #0
   1eb44:	cmp	r2, r4
   1eb48:	popcc	{r4, r5, r6, sl, fp, pc}
   1eb4c:	ldr	r5, [r1]
   1eb50:	bne	1eb70 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x48>
   1eb54:	mov	r0, r5
   1eb58:	mov	r1, r6
   1eb5c:	mov	r2, r4
   1eb60:	bl	11b84 <mycore_strncmp@plt>
   1eb64:	cmp	r0, #0
   1eb68:	moveq	r0, #1
   1eb6c:	popeq	{r4, r5, r6, sl, fp, pc}
   1eb70:	mov	r0, r5
   1eb74:	mov	r1, r6
   1eb78:	mov	r2, r4
   1eb7c:	bl	11b84 <mycore_strncmp@plt>
   1eb80:	cmp	r0, #0
   1eb84:	beq	1eb90 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x68>
   1eb88:	mov	r0, #0
   1eb8c:	pop	{r4, r5, r6, sl, fp, pc}
   1eb90:	ldrb	r1, [r5, r4]
   1eb94:	mov	r0, #1
   1eb98:	cmp	r1, #45	; 0x2d
   1eb9c:	movne	r0, #0
   1eba0:	pop	{r4, r5, r6, sl, fp, pc}

0001eba4 <myhtml_get_nodes_by_attribute_value_recursion_eq_i@@Base>:
   1eba4:	ldr	ip, [r0, #8]
   1eba8:	mov	r3, r0
   1ebac:	mov	r0, #0
   1ebb0:	cmp	ip, r2
   1ebb4:	bxne	lr
   1ebb8:	push	{fp, lr}
   1ebbc:	mov	fp, sp
   1ebc0:	ldr	r0, [r3]
   1ebc4:	bl	112b4 <mycore_strncasecmp@plt>
   1ebc8:	clz	r0, r0
   1ebcc:	lsr	r0, r0, #5
   1ebd0:	pop	{fp, lr}
   1ebd4:	bx	lr

0001ebd8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base>:
   1ebd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ebdc:	add	fp, sp, #28
   1ebe0:	sub	sp, sp, #4
   1ebe4:	mov	r6, r0
   1ebe8:	ldr	r0, [r0, #8]
   1ebec:	cmp	r0, r2
   1ebf0:	bcc	1ecfc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x124>
   1ebf4:	ldr	r7, [r6]
   1ebf8:	mov	r4, r2
   1ebfc:	mov	sl, r1
   1ec00:	mov	r0, r7
   1ec04:	bl	112b4 <mycore_strncasecmp@plt>
   1ec08:	ldr	r1, [r6, #8]
   1ec0c:	cmp	r0, #0
   1ec10:	bne	1ec5c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x84>
   1ec14:	cmp	r1, r4
   1ec18:	bls	1ec50 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x78>
   1ec1c:	ldrb	r0, [r7, r4]
   1ec20:	sub	r0, r0, #9
   1ec24:	uxtb	r2, r0
   1ec28:	cmp	r2, #24
   1ec2c:	bcs	1ec50 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x78>
   1ec30:	movw	r3, #27
   1ec34:	mov	r0, #1
   1ec38:	movt	r3, #128	; 0x80
   1ec3c:	tst	r0, r3, lsr r2
   1ec40:	bne	1ed08 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x130>
   1ec44:	cmp	r1, r4
   1ec48:	bne	1ec5c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x84>
   1ec4c:	b	1ed08 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x130>
   1ec50:	mov	r0, #1
   1ec54:	cmp	r1, r4
   1ec58:	beq	1ed08 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x130>
   1ec5c:	sub	r0, r1, #1
   1ec60:	cmp	r0, r4
   1ec64:	bcc	1ecfc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x124>
   1ec68:	movw	r9, #27
   1ec6c:	mov	r8, #1
   1ec70:	mov	r5, #1
   1ec74:	movt	r9, #128	; 0x80
   1ec78:	add	r0, r7, r5
   1ec7c:	ldrb	r2, [r0, #-1]
   1ec80:	sub	r2, r2, #9
   1ec84:	cmp	r2, #23
   1ec88:	bhi	1ecec <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x114>
   1ec8c:	tst	r9, r8, lsl r2
   1ec90:	beq	1ecec <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x114>
   1ec94:	mov	r1, sl
   1ec98:	mov	r2, r4
   1ec9c:	bl	112b4 <mycore_strncasecmp@plt>
   1eca0:	cmp	r0, #0
   1eca4:	beq	1ecb0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xd8>
   1eca8:	ldr	r1, [r6, #8]
   1ecac:	b	1ecec <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x114>
   1ecb0:	cmp	r5, r4
   1ecb4:	bls	1ecdc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x104>
   1ecb8:	add	r0, r5, r4
   1ecbc:	ldrb	r0, [r7, r0]
   1ecc0:	sub	r0, r0, #9
   1ecc4:	uxtb	r1, r0
   1ecc8:	cmp	r1, #24
   1eccc:	bcs	1ecdc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x104>
   1ecd0:	mov	r0, #1
   1ecd4:	tst	r0, r9, lsr r1
   1ecd8:	bne	1ed08 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x130>
   1ecdc:	ldr	r1, [r6, #8]
   1ece0:	sub	r0, r1, r5
   1ece4:	cmp	r0, r4
   1ece8:	beq	1ed10 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x138>
   1ecec:	add	r5, r5, #1
   1ecf0:	sub	r0, r1, r5
   1ecf4:	cmp	r0, r4
   1ecf8:	bcs	1ec78 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xa0>
   1ecfc:	mov	r0, #0
   1ed00:	sub	sp, fp, #28
   1ed04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ed08:	sub	sp, fp, #28
   1ed0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ed10:	mov	r0, #1
   1ed14:	sub	sp, fp, #28
   1ed18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001ed1c <myhtml_get_nodes_by_attribute_value_recursion_begin_i@@Base>:
   1ed1c:	ldr	ip, [r0, #8]
   1ed20:	mov	r3, r0
   1ed24:	mov	r0, #0
   1ed28:	cmp	ip, r2
   1ed2c:	bxcc	lr
   1ed30:	push	{fp, lr}
   1ed34:	mov	fp, sp
   1ed38:	ldr	r0, [r3]
   1ed3c:	bl	112b4 <mycore_strncasecmp@plt>
   1ed40:	clz	r0, r0
   1ed44:	lsr	r0, r0, #5
   1ed48:	pop	{fp, lr}
   1ed4c:	bx	lr

0001ed50 <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base>:
   1ed50:	ldr	r3, [r0, #8]
   1ed54:	mov	ip, #0
   1ed58:	cmp	r3, r2
   1ed5c:	bcc	1ed84 <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base+0x34>
   1ed60:	push	{fp, lr}
   1ed64:	mov	fp, sp
   1ed68:	ldr	r0, [r0]
   1ed6c:	sub	r3, r3, r2
   1ed70:	add	r0, r0, r3
   1ed74:	bl	112b4 <mycore_strncasecmp@plt>
   1ed78:	clz	r0, r0
   1ed7c:	lsr	ip, r0, #5
   1ed80:	pop	{fp, lr}
   1ed84:	mov	r0, ip
   1ed88:	bx	lr

0001ed8c <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base>:
   1ed8c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ed90:	add	fp, sp, #24
   1ed94:	mov	r8, r1
   1ed98:	ldr	r1, [r0, #8]
   1ed9c:	mov	r6, r0
   1eda0:	mov	r0, #0
   1eda4:	cmp	r1, r2
   1eda8:	popcc	{r4, r5, r6, r7, r8, sl, fp, pc}
   1edac:	ldr	r7, [r6]
   1edb0:	mov	r4, r2
   1edb4:	mov	r5, #0
   1edb8:	b	1edd8 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x4c>
   1edbc:	ldr	r0, [r6, #8]
   1edc0:	sub	r5, r5, #1
   1edc4:	add	r7, r7, #1
   1edc8:	add	r0, r0, r5
   1edcc:	cmp	r0, r4
   1edd0:	movcc	r0, #0
   1edd4:	popcc	{r4, r5, r6, r7, r8, sl, fp, pc}
   1edd8:	mov	r0, r7
   1eddc:	mov	r1, r8
   1ede0:	mov	r2, r4
   1ede4:	bl	112b4 <mycore_strncasecmp@plt>
   1ede8:	cmp	r0, #0
   1edec:	bne	1edbc <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x30>
   1edf0:	mov	r0, #1
   1edf4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001edf8 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base>:
   1edf8:	push	{r4, r5, r6, sl, fp, lr}
   1edfc:	add	fp, sp, #16
   1ee00:	mov	r4, r2
   1ee04:	ldr	r2, [r0, #8]
   1ee08:	mov	r6, r1
   1ee0c:	mov	r1, r0
   1ee10:	mov	r0, #0
   1ee14:	cmp	r2, r4
   1ee18:	popcc	{r4, r5, r6, sl, fp, pc}
   1ee1c:	ldr	r5, [r1]
   1ee20:	bne	1ee40 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x48>
   1ee24:	mov	r0, r5
   1ee28:	mov	r1, r6
   1ee2c:	mov	r2, r4
   1ee30:	bl	112b4 <mycore_strncasecmp@plt>
   1ee34:	cmp	r0, #0
   1ee38:	moveq	r0, #1
   1ee3c:	popeq	{r4, r5, r6, sl, fp, pc}
   1ee40:	mov	r0, r5
   1ee44:	mov	r1, r6
   1ee48:	mov	r2, r4
   1ee4c:	bl	112b4 <mycore_strncasecmp@plt>
   1ee50:	cmp	r0, #0
   1ee54:	beq	1ee60 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x68>
   1ee58:	mov	r0, #0
   1ee5c:	pop	{r4, r5, r6, sl, fp, pc}
   1ee60:	ldrb	r1, [r5, r4]
   1ee64:	mov	r0, #1
   1ee68:	cmp	r1, #45	; 0x2d
   1ee6c:	movne	r0, #0
   1ee70:	pop	{r4, r5, r6, sl, fp, pc}

0001ee74 <myhtml_get_nodes_by_attribute_value_recursion@@Base>:
   1ee74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ee78:	add	fp, sp, #28
   1ee7c:	sub	sp, sp, #4
   1ee80:	mov	r7, r1
   1ee84:	mov	r1, r0
   1ee88:	mov	r0, #0
   1ee8c:	cmp	r1, #0
   1ee90:	beq	1ef68 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xf4>
   1ee94:	ldr	r4, [fp, #8]
   1ee98:	mov	r5, r3
   1ee9c:	mov	r6, r2
   1eea0:	mov	r0, r1
   1eea4:	str	r1, [sp]
   1eea8:	mov	r8, r0
   1eeac:	ldr	r0, [r0, #32]
   1eeb0:	cmp	r0, #0
   1eeb4:	beq	1ef3c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xc8>
   1eeb8:	ldr	sl, [r0, #40]	; 0x28
   1eebc:	cmp	sl, #0
   1eec0:	bne	1eed4 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x60>
   1eec4:	b	1ef3c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xc8>
   1eec8:	ldr	sl, [sl]
   1eecc:	cmp	sl, #0
   1eed0:	beq	1ef3c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xc8>
   1eed4:	add	r0, sl, #28
   1eed8:	mov	r1, r5
   1eedc:	mov	r2, r4
   1eee0:	blx	r6
   1eee4:	cmp	r0, #0
   1eee8:	beq	1eec8 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x54>
   1eeec:	ldr	r0, [r7, #8]
   1eef0:	ldr	r1, [r7]
   1eef4:	add	r2, r0, #1
   1eef8:	str	r8, [r1, r0, lsl #2]
   1eefc:	str	r2, [r7, #8]
   1ef00:	ldr	r1, [r7, #4]
   1ef04:	cmp	r2, r1
   1ef08:	movwcs	r2, #1025	; 0x401
   1ef0c:	addcs	r2, r0, r2
   1ef10:	cmpcs	r2, r1
   1ef14:	bcc	1eec8 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x54>
   1ef18:	movw	r1, #1026	; 0x402
   1ef1c:	add	r9, r0, r1
   1ef20:	ldr	r0, [r7]
   1ef24:	lsl	r1, r9, #2
   1ef28:	bl	10db0 <mycore_realloc@plt>
   1ef2c:	cmp	r0, #0
   1ef30:	beq	1ef70 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xfc>
   1ef34:	stm	r7, {r0, r9}
   1ef38:	b	1eec8 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x54>
   1ef3c:	ldr	r0, [r8, #20]
   1ef40:	ldr	r1, [sp]
   1ef44:	cmp	r0, #0
   1ef48:	bne	1eea8 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x34>
   1ef4c:	ldr	r0, [r8, #16]
   1ef50:	cmp	r0, #0
   1ef54:	bne	1eea8 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x34>
   1ef58:	ldr	r8, [r8, #24]
   1ef5c:	cmp	r8, r1
   1ef60:	bne	1ef4c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xd8>
   1ef64:	mov	r0, #0
   1ef68:	sub	sp, fp, #28
   1ef6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ef70:	mov	r0, #2
   1ef74:	sub	sp, fp, #28
   1ef78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001ef7c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base>:
   1ef7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ef80:	add	fp, sp, #28
   1ef84:	sub	sp, sp, #4
   1ef88:	mov	r4, r0
   1ef8c:	mov	r0, #0
   1ef90:	cmp	r4, #0
   1ef94:	beq	1f09c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x120>
   1ef98:	ldr	r8, [fp, #8]
   1ef9c:	mov	r5, r3
   1efa0:	mov	r6, r2
   1efa4:	mov	r7, r1
   1efa8:	mov	r0, r4
   1efac:	str	r3, [sp]
   1efb0:	mov	r9, r0
   1efb4:	ldr	r0, [r0, #32]
   1efb8:	cmp	r0, #0
   1efbc:	beq	1f074 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xf8>
   1efc0:	ldr	sl, [r0, #40]	; 0x28
   1efc4:	cmp	sl, #0
   1efc8:	bne	1efdc <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x60>
   1efcc:	b	1f074 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xf8>
   1efd0:	ldr	sl, [sl]
   1efd4:	cmp	sl, #0
   1efd8:	beq	1f074 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xf8>
   1efdc:	ldr	r0, [sl, #16]
   1efe0:	cmp	r0, r8
   1efe4:	bne	1efd0 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x54>
   1efe8:	ldr	r0, [sl, #8]
   1efec:	mov	r1, r5
   1eff0:	mov	r2, r8
   1eff4:	bl	112b4 <mycore_strncasecmp@plt>
   1eff8:	cmp	r0, #0
   1effc:	bne	1efd0 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x54>
   1f000:	ldr	r1, [fp, #12]
   1f004:	ldr	r2, [fp, #16]
   1f008:	add	r0, sl, #28
   1f00c:	blx	r6
   1f010:	cmp	r0, #0
   1f014:	beq	1efd0 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x54>
   1f018:	ldr	r0, [r7, #8]
   1f01c:	ldr	r1, [r7]
   1f020:	add	r2, r0, #1
   1f024:	str	r9, [r1, r0, lsl #2]
   1f028:	str	r2, [r7, #8]
   1f02c:	ldr	r1, [r7, #4]
   1f030:	cmp	r2, r1
   1f034:	movwcs	r2, #1025	; 0x401
   1f038:	addcs	r2, r0, r2
   1f03c:	cmpcs	r2, r1
   1f040:	bcc	1efd0 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x54>
   1f044:	movw	r1, #1026	; 0x402
   1f048:	mov	r5, r6
   1f04c:	add	r6, r0, r1
   1f050:	ldr	r0, [r7]
   1f054:	lsl	r1, r6, #2
   1f058:	bl	10db0 <mycore_realloc@plt>
   1f05c:	cmp	r0, #0
   1f060:	beq	1f0a4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x128>
   1f064:	stm	r7, {r0, r6}
   1f068:	mov	r6, r5
   1f06c:	ldr	r5, [sp]
   1f070:	b	1efd0 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x54>
   1f074:	ldr	r0, [r9, #20]
   1f078:	cmp	r0, #0
   1f07c:	bne	1efb0 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x34>
   1f080:	ldr	r0, [r9, #16]
   1f084:	cmp	r0, #0
   1f088:	bne	1efb0 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x34>
   1f08c:	ldr	r9, [r9, #24]
   1f090:	cmp	r9, r4
   1f094:	bne	1f080 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x104>
   1f098:	mov	r0, #0
   1f09c:	sub	sp, fp, #28
   1f0a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f0a4:	mov	r0, #2
   1f0a8:	sub	sp, fp, #28
   1f0ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001f0b0 <_myhtml_get_nodes_by_attribute_value@@Base>:
   1f0b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f0b4:	add	fp, sp, #28
   1f0b8:	sub	sp, sp, #20
   1f0bc:	ldr	r9, [fp, #24]
   1f0c0:	mov	r5, r2
   1f0c4:	mov	r4, r1
   1f0c8:	mov	r8, r0
   1f0cc:	cmp	r1, #0
   1f0d0:	str	r3, [sp, #16]
   1f0d4:	beq	1f1cc <_myhtml_get_nodes_by_attribute_value@@Base+0x11c>
   1f0d8:	ldr	r3, [fp, #8]
   1f0dc:	cmp	r5, #0
   1f0e0:	ldr	r7, [fp, #20]
   1f0e4:	ldr	r6, [fp, #16]
   1f0e8:	ldreq	r5, [r8, #96]	; 0x60
   1f0ec:	cmp	r3, #0
   1f0f0:	ldrne	r0, [fp, #12]
   1f0f4:	cmpne	r0, #0
   1f0f8:	bne	1f210 <_myhtml_get_nodes_by_attribute_value@@Base+0x160>
   1f0fc:	cmp	r5, #0
   1f100:	beq	1f234 <_myhtml_get_nodes_by_attribute_value@@Base+0x184>
   1f104:	ldr	r8, [sp, #16]
   1f108:	mov	r0, r5
   1f10c:	mov	r9, r0
   1f110:	ldr	r0, [r0, #32]
   1f114:	cmp	r0, #0
   1f118:	beq	1f1a4 <_myhtml_get_nodes_by_attribute_value@@Base+0xf4>
   1f11c:	ldr	sl, [r0, #40]	; 0x28
   1f120:	cmp	sl, #0
   1f124:	bne	1f138 <_myhtml_get_nodes_by_attribute_value@@Base+0x88>
   1f128:	b	1f1a4 <_myhtml_get_nodes_by_attribute_value@@Base+0xf4>
   1f12c:	ldr	sl, [sl]
   1f130:	cmp	sl, #0
   1f134:	beq	1f1a4 <_myhtml_get_nodes_by_attribute_value@@Base+0xf4>
   1f138:	add	r0, sl, #28
   1f13c:	mov	r1, r6
   1f140:	mov	r2, r7
   1f144:	blx	r8
   1f148:	cmp	r0, #0
   1f14c:	beq	1f12c <_myhtml_get_nodes_by_attribute_value@@Base+0x7c>
   1f150:	ldr	r0, [r4, #8]
   1f154:	ldr	r1, [r4]
   1f158:	add	r2, r0, #1
   1f15c:	str	r9, [r1, r0, lsl #2]
   1f160:	str	r2, [r4, #8]
   1f164:	ldr	r1, [r4, #4]
   1f168:	cmp	r2, r1
   1f16c:	movwcs	r2, #1025	; 0x401
   1f170:	addcs	r2, r0, r2
   1f174:	cmpcs	r2, r1
   1f178:	bcc	1f12c <_myhtml_get_nodes_by_attribute_value@@Base+0x7c>
   1f17c:	movw	r1, #1026	; 0x402
   1f180:	add	r8, r0, r1
   1f184:	ldr	r0, [r4]
   1f188:	lsl	r1, r8, #2
   1f18c:	bl	10db0 <mycore_realloc@plt>
   1f190:	cmp	r0, #0
   1f194:	beq	1f264 <_myhtml_get_nodes_by_attribute_value@@Base+0x1b4>
   1f198:	stm	r4, {r0, r8}
   1f19c:	ldr	r8, [sp, #16]
   1f1a0:	b	1f12c <_myhtml_get_nodes_by_attribute_value@@Base+0x7c>
   1f1a4:	ldr	r0, [r9, #20]
   1f1a8:	cmp	r0, #0
   1f1ac:	bne	1f10c <_myhtml_get_nodes_by_attribute_value@@Base+0x5c>
   1f1b0:	ldr	r0, [r9, #16]
   1f1b4:	cmp	r0, #0
   1f1b8:	bne	1f10c <_myhtml_get_nodes_by_attribute_value@@Base+0x5c>
   1f1bc:	ldr	r9, [r9, #24]
   1f1c0:	cmp	r9, r5
   1f1c4:	bne	1f1b0 <_myhtml_get_nodes_by_attribute_value@@Base+0x100>
   1f1c8:	b	1f234 <_myhtml_get_nodes_by_attribute_value@@Base+0x184>
   1f1cc:	mov	r0, #12
   1f1d0:	bl	119c8 <mycore_malloc@plt>
   1f1d4:	cmp	r0, #0
   1f1d8:	beq	1f23c <_myhtml_get_nodes_by_attribute_value@@Base+0x18c>
   1f1dc:	mov	r4, r0
   1f1e0:	mov	r7, #0
   1f1e4:	mov	r0, #1024	; 0x400
   1f1e8:	stmib	r4, {r0, r7}
   1f1ec:	mov	r0, #4096	; 0x1000
   1f1f0:	bl	119c8 <mycore_malloc@plt>
   1f1f4:	cmp	r0, #0
   1f1f8:	str	r0, [r4]
   1f1fc:	beq	1f244 <_myhtml_get_nodes_by_attribute_value@@Base+0x194>
   1f200:	cmp	r9, #0
   1f204:	movne	r0, #0
   1f208:	strne	r0, [r9]
   1f20c:	b	1f0d8 <_myhtml_get_nodes_by_attribute_value@@Base+0x28>
   1f210:	stm	sp, {r0, r6, r7}
   1f214:	mov	r0, r5
   1f218:	mov	r1, r4
   1f21c:	ldr	r2, [sp, #16]
   1f220:	bl	10f48 <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>
   1f224:	cmp	r9, #0
   1f228:	beq	1f234 <_myhtml_get_nodes_by_attribute_value@@Base+0x184>
   1f22c:	cmp	r0, #0
   1f230:	strne	r0, [r9]
   1f234:	mov	r7, r4
   1f238:	b	1f258 <_myhtml_get_nodes_by_attribute_value@@Base+0x1a8>
   1f23c:	mov	r7, #0
   1f240:	b	1f24c <_myhtml_get_nodes_by_attribute_value@@Base+0x19c>
   1f244:	mov	r0, r4
   1f248:	bl	11ab8 <mycore_free@plt>
   1f24c:	cmp	r9, #0
   1f250:	movne	r0, #2
   1f254:	strne	r0, [r9]
   1f258:	mov	r0, r7
   1f25c:	sub	sp, fp, #28
   1f260:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f264:	ldr	r9, [fp, #24]
   1f268:	mov	r0, #2
   1f26c:	cmp	r9, #0
   1f270:	bne	1f22c <_myhtml_get_nodes_by_attribute_value@@Base+0x17c>
   1f274:	b	1f234 <_myhtml_get_nodes_by_attribute_value@@Base+0x184>

0001f278 <myhtml_get_nodes_by_attribute_value@@Base>:
   1f278:	push	{fp, lr}
   1f27c:	mov	fp, sp
   1f280:	ldr	lr, [pc, #28]	; 1f2a4 <myhtml_get_nodes_by_attribute_value@@Base+0x2c>
   1f284:	cmp	r3, #0
   1f288:	ldr	lr, [pc, lr]
   1f28c:	ldr	ip, [pc, #20]	; 1f2a8 <myhtml_get_nodes_by_attribute_value@@Base+0x30>
   1f290:	ldr	ip, [pc, ip]
   1f294:	movne	ip, lr
   1f298:	mov	r3, ip
   1f29c:	pop	{fp, lr}
   1f2a0:	b	1f0b0 <_myhtml_get_nodes_by_attribute_value@@Base>
   1f2a4:	andeq	ip, pc, ip, lsl #8
   1f2a8:	andeq	ip, pc, ip, lsr #8

0001f2ac <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base>:
   1f2ac:	push	{fp, lr}
   1f2b0:	mov	fp, sp
   1f2b4:	ldr	lr, [pc, #28]	; 1f2d8 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x2c>
   1f2b8:	cmp	r3, #0
   1f2bc:	ldr	lr, [pc, lr]
   1f2c0:	ldr	ip, [pc, #20]	; 1f2dc <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x30>
   1f2c4:	ldr	ip, [pc, ip]
   1f2c8:	movne	ip, lr
   1f2cc:	mov	r3, ip
   1f2d0:	pop	{fp, lr}
   1f2d4:	b	1f0b0 <_myhtml_get_nodes_by_attribute_value@@Base>
   1f2d8:	andeq	ip, pc, ip, ror #4
   1f2dc:	andeq	ip, pc, r4, ror r4	; <UNPREDICTABLE>

0001f2e0 <myhtml_get_nodes_by_attribute_value_begin@@Base>:
   1f2e0:	push	{fp, lr}
   1f2e4:	mov	fp, sp
   1f2e8:	ldr	lr, [pc, #28]	; 1f30c <myhtml_get_nodes_by_attribute_value_begin@@Base+0x2c>
   1f2ec:	cmp	r3, #0
   1f2f0:	ldr	lr, [pc, lr]
   1f2f4:	ldr	ip, [pc, #20]	; 1f310 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x30>
   1f2f8:	ldr	ip, [pc, ip]
   1f2fc:	movne	ip, lr
   1f300:	mov	r3, ip
   1f304:	pop	{fp, lr}
   1f308:	b	1f0b0 <_myhtml_get_nodes_by_attribute_value@@Base>
   1f30c:	muleq	pc, r4, r2	; <UNPREDICTABLE>
   1f310:	andeq	ip, pc, ip, ror r2	; <UNPREDICTABLE>

0001f314 <myhtml_get_nodes_by_attribute_value_end@@Base>:
   1f314:	push	{fp, lr}
   1f318:	mov	fp, sp
   1f31c:	ldr	lr, [pc, #28]	; 1f340 <myhtml_get_nodes_by_attribute_value_end@@Base+0x2c>
   1f320:	cmp	r3, #0
   1f324:	ldr	lr, [pc, lr]
   1f328:	ldr	ip, [pc, #20]	; 1f344 <myhtml_get_nodes_by_attribute_value_end@@Base+0x30>
   1f32c:	ldr	ip, [pc, ip]
   1f330:	movne	ip, lr
   1f334:	mov	r3, ip
   1f338:	pop	{fp, lr}
   1f33c:	b	1f0b0 <_myhtml_get_nodes_by_attribute_value@@Base>
   1f340:	andeq	ip, pc, ip, ror #8
   1f344:	ldrdeq	ip, [pc], -r8

0001f348 <myhtml_get_nodes_by_attribute_value_contain@@Base>:
   1f348:	push	{fp, lr}
   1f34c:	mov	fp, sp
   1f350:	ldr	lr, [pc, #28]	; 1f374 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x2c>
   1f354:	cmp	r3, #0
   1f358:	ldr	lr, [pc, lr]
   1f35c:	ldr	ip, [pc, #20]	; 1f378 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x30>
   1f360:	ldr	ip, [pc, ip]
   1f364:	movne	ip, lr
   1f368:	mov	r3, ip
   1f36c:	pop	{fp, lr}
   1f370:	b	1f0b0 <_myhtml_get_nodes_by_attribute_value@@Base>
   1f374:	andeq	ip, pc, r0, lsr #4
   1f378:	andeq	ip, pc, r8, lsr r3	; <UNPREDICTABLE>

0001f37c <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base>:
   1f37c:	push	{fp, lr}
   1f380:	mov	fp, sp
   1f384:	ldr	lr, [pc, #28]	; 1f3a8 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x2c>
   1f388:	cmp	r3, #0
   1f38c:	ldr	lr, [pc, lr]
   1f390:	ldr	ip, [pc, #20]	; 1f3ac <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x30>
   1f394:	ldr	ip, [pc, ip]
   1f398:	movne	ip, lr
   1f39c:	mov	r3, ip
   1f3a0:	pop	{fp, lr}
   1f3a4:	b	1f0b0 <_myhtml_get_nodes_by_attribute_value@@Base>
   1f3a8:	andeq	ip, pc, r8, lsl #5
   1f3ac:	andeq	ip, pc, ip, ror #5

0001f3b0 <myhtml_attribute_next@@Base>:
   1f3b0:	ldr	r0, [r0]
   1f3b4:	bx	lr

0001f3b8 <myhtml_attribute_prev@@Base>:
   1f3b8:	ldr	r0, [r0, #4]
   1f3bc:	bx	lr

0001f3c0 <myhtml_attribute_namespace@@Base>:
   1f3c0:	ldr	r0, [r0, #64]	; 0x40
   1f3c4:	bx	lr

0001f3c8 <myhtml_attribute_namespace_set@@Base>:
   1f3c8:	str	r1, [r0, #64]	; 0x40
   1f3cc:	bx	lr

0001f3d0 <myhtml_attribute_key@@Base>:
   1f3d0:	mov	r2, r0
   1f3d4:	ldr	r0, [r0, #8]
   1f3d8:	cmp	r0, #0
   1f3dc:	ldrne	r2, [r2, #16]
   1f3e0:	cmpne	r2, #0
   1f3e4:	bne	1f3f8 <myhtml_attribute_key@@Base+0x28>
   1f3e8:	mov	r0, #0
   1f3ec:	cmp	r1, #0
   1f3f0:	strne	r0, [r1]
   1f3f4:	bx	lr
   1f3f8:	cmp	r1, #0
   1f3fc:	strne	r2, [r1]
   1f400:	bxne	lr
   1f404:	bx	lr

0001f408 <myhtml_attribute_value@@Base>:
   1f408:	mov	r2, r0
   1f40c:	ldr	r0, [r0, #28]
   1f410:	cmp	r0, #0
   1f414:	ldrne	r2, [r2, #36]	; 0x24
   1f418:	cmpne	r2, #0
   1f41c:	bne	1f430 <myhtml_attribute_value@@Base+0x28>
   1f420:	mov	r0, #0
   1f424:	cmp	r1, #0
   1f428:	strne	r0, [r1]
   1f42c:	bx	lr
   1f430:	cmp	r1, #0
   1f434:	strne	r2, [r1]
   1f438:	bxne	lr
   1f43c:	bx	lr

0001f440 <myhtml_attribute_key_string@@Base>:
   1f440:	cmp	r0, #0
   1f444:	addne	r0, r0, #8
   1f448:	bx	lr

0001f44c <myhtml_attribute_value_string@@Base>:
   1f44c:	cmp	r0, #0
   1f450:	addne	r0, r0, #28
   1f454:	bx	lr

0001f458 <myhtml_attribute_by_key@@Base>:
   1f458:	cmp	r0, #0
   1f45c:	ldrne	r0, [r0, #32]
   1f460:	cmpne	r0, #0
   1f464:	bne	1f470 <myhtml_attribute_by_key@@Base+0x18>
   1f468:	mov	r0, #0
   1f46c:	bx	lr
   1f470:	b	11b54 <myhtml_token_attr_by_name@plt>

0001f474 <myhtml_attribute_add@@Base>:
   1f474:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1f478:	add	fp, sp, #24
   1f47c:	sub	sp, sp, #16
   1f480:	cmp	r0, #0
   1f484:	beq	1f500 <myhtml_attribute_add@@Base+0x8c>
   1f488:	mov	r5, r1
   1f48c:	ldr	r1, [r0, #32]
   1f490:	ldr	r4, [r0, #40]	; 0x28
   1f494:	mov	r6, r3
   1f498:	mov	r8, r2
   1f49c:	mov	r7, r0
   1f4a0:	cmp	r1, #0
   1f4a4:	bne	1f4d0 <myhtml_attribute_add@@Base+0x5c>
   1f4a8:	ldr	r0, [r4, #8]
   1f4ac:	ldr	r1, [r4, #40]	; 0x28
   1f4b0:	bl	11800 <myhtml_token_node_create@plt>
   1f4b4:	cmp	r0, #0
   1f4b8:	str	r0, [r7, #32]
   1f4bc:	beq	1f500 <myhtml_attribute_add@@Base+0x8c>
   1f4c0:	mov	r1, r0
   1f4c4:	ldr	r0, [r0, #48]	; 0x30
   1f4c8:	orr	r0, r0, #4
   1f4cc:	str	r0, [r1, #48]	; 0x30
   1f4d0:	ldr	r2, [fp, #12]
   1f4d4:	ldr	r3, [fp, #8]
   1f4d8:	ldr	r7, [r4, #40]	; 0x28
   1f4dc:	ldr	r0, [r4, #8]
   1f4e0:	str	r6, [sp]
   1f4e4:	stmib	sp, {r3, r7}
   1f4e8:	str	r2, [sp, #12]
   1f4ec:	mov	r2, r5
   1f4f0:	mov	r3, r8
   1f4f4:	bl	11674 <myhtml_token_node_attr_append_with_convert_encoding@plt>
   1f4f8:	sub	sp, fp, #24
   1f4fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1f500:	mov	r0, #0
   1f504:	sub	sp, fp, #24
   1f508:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001f50c <myhtml_attribute_remove@@Base>:
   1f50c:	cmp	r0, #0
   1f510:	ldrne	r0, [r0, #32]
   1f514:	cmpne	r0, #0
   1f518:	bne	1f524 <myhtml_attribute_remove@@Base+0x18>
   1f51c:	mov	r0, #0
   1f520:	bx	lr
   1f524:	b	114e8 <myhtml_token_attr_remove@plt>

0001f528 <myhtml_attribute_remove_by_key@@Base>:
   1f528:	cmp	r0, #0
   1f52c:	ldrne	r0, [r0, #32]
   1f530:	cmpne	r0, #0
   1f534:	bne	1f540 <myhtml_attribute_remove_by_key@@Base+0x18>
   1f538:	mov	r0, #0
   1f53c:	bx	lr
   1f540:	b	11b48 <myhtml_token_attr_remove_by_name@plt>

0001f544 <myhtml_attribute_delete@@Base>:
   1f544:	push	{r4, r5, fp, lr}
   1f548:	add	fp, sp, #8
   1f54c:	cmp	r1, #0
   1f550:	beq	1f5b4 <myhtml_attribute_delete@@Base+0x70>
   1f554:	mov	r5, r0
   1f558:	ldr	r0, [r1, #32]
   1f55c:	cmp	r0, #0
   1f560:	popeq	{r4, r5, fp, pc}
   1f564:	mov	r1, r2
   1f568:	mov	r4, r2
   1f56c:	bl	114e8 <myhtml_token_attr_remove@plt>
   1f570:	ldr	r2, [r4, #8]
   1f574:	cmp	r2, #0
   1f578:	beq	1f588 <myhtml_attribute_delete@@Base+0x44>
   1f57c:	ldr	r0, [r4, #20]
   1f580:	ldr	r1, [r4, #24]
   1f584:	bl	115e4 <mchar_async_free@plt>
   1f588:	ldr	r2, [r4, #28]
   1f58c:	cmp	r2, #0
   1f590:	beq	1f5a0 <myhtml_attribute_delete@@Base+0x5c>
   1f594:	ldr	r0, [r4, #40]	; 0x28
   1f598:	ldr	r1, [r4, #44]	; 0x2c
   1f59c:	bl	115e4 <mchar_async_free@plt>
   1f5a0:	ldr	r0, [r5, #8]
   1f5a4:	mov	r1, r4
   1f5a8:	ldr	r0, [r0, #8]
   1f5ac:	pop	{r4, r5, fp, lr}
   1f5b0:	b	11128 <mcobject_async_free@plt>
   1f5b4:	pop	{r4, r5, fp, pc}

0001f5b8 <myhtml_attribute_free@@Base>:
   1f5b8:	push	{r4, r5, fp, lr}
   1f5bc:	add	fp, sp, #8
   1f5c0:	ldr	r2, [r1, #8]
   1f5c4:	mov	r4, r1
   1f5c8:	mov	r5, r0
   1f5cc:	cmp	r2, #0
   1f5d0:	beq	1f5e0 <myhtml_attribute_free@@Base+0x28>
   1f5d4:	ldr	r0, [r4, #20]
   1f5d8:	ldr	r1, [r4, #24]
   1f5dc:	bl	115e4 <mchar_async_free@plt>
   1f5e0:	ldr	r2, [r4, #28]
   1f5e4:	cmp	r2, #0
   1f5e8:	beq	1f5f8 <myhtml_attribute_free@@Base+0x40>
   1f5ec:	ldr	r0, [r4, #40]	; 0x28
   1f5f0:	ldr	r1, [r4, #44]	; 0x2c
   1f5f4:	bl	115e4 <mchar_async_free@plt>
   1f5f8:	ldr	r0, [r5, #8]
   1f5fc:	mov	r1, r4
   1f600:	ldr	r0, [r0, #8]
   1f604:	pop	{r4, r5, fp, lr}
   1f608:	b	11128 <mcobject_async_free@plt>

0001f60c <myhtml_attribute_key_raw_position@@Base>:
   1f60c:	cmp	r1, #0
   1f610:	ldrne	r2, [r1, #48]	; 0x30
   1f614:	ldrne	r1, [r1, #52]	; 0x34
   1f618:	strne	r2, [r0]
   1f61c:	strne	r1, [r0, #4]
   1f620:	bxne	lr
   1f624:	mov	r1, #0
   1f628:	str	r1, [r0]
   1f62c:	str	r1, [r0, #4]
   1f630:	bx	lr

0001f634 <myhtml_attribute_value_raw_position@@Base>:
   1f634:	cmp	r1, #0
   1f638:	ldrne	r2, [r1, #56]	; 0x38
   1f63c:	ldrne	r1, [r1, #60]	; 0x3c
   1f640:	strne	r2, [r0]
   1f644:	strne	r1, [r0, #4]
   1f648:	bxne	lr
   1f64c:	mov	r1, #0
   1f650:	str	r1, [r0]
   1f654:	str	r1, [r0, #4]
   1f658:	bx	lr

0001f65c <myhtml_collection_clean@@Base>:
   1f65c:	cmp	r0, #0
   1f660:	movne	r1, #0
   1f664:	strne	r1, [r0, #8]
   1f668:	bx	lr

0001f66c <myhtml_collection_destroy@@Base>:
   1f66c:	cmp	r0, #0
   1f670:	beq	1f69c <myhtml_collection_destroy@@Base+0x30>
   1f674:	push	{r4, sl, fp, lr}
   1f678:	add	fp, sp, #8
   1f67c:	mov	r4, r0
   1f680:	ldr	r0, [r0]
   1f684:	cmp	r0, #0
   1f688:	beq	1f690 <myhtml_collection_destroy@@Base+0x24>
   1f68c:	bl	11ab8 <mycore_free@plt>
   1f690:	mov	r0, r4
   1f694:	bl	11ab8 <mycore_free@plt>
   1f698:	pop	{r4, sl, fp, lr}
   1f69c:	mov	r0, #0
   1f6a0:	bx	lr

0001f6a4 <myhtml_queue_add@@Base>:
   1f6a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1f6a8:	add	fp, sp, #24
   1f6ac:	mov	r5, r0
   1f6b0:	ldr	r7, [r0, #68]	; 0x44
   1f6b4:	ldr	r0, [r0, #184]	; 0xb8
   1f6b8:	cmp	r2, #0
   1f6bc:	mov	r6, r2
   1f6c0:	mov	r8, r1
   1f6c4:	andsne	r0, r0, #4
   1f6c8:	bne	1f7c8 <myhtml_queue_add@@Base+0x124>
   1f6cc:	ldr	r0, [r5, #180]	; 0xb4
   1f6d0:	tst	r0, #16
   1f6d4:	bne	1f72c <myhtml_queue_add@@Base+0x88>
   1f6d8:	cmp	r7, #0
   1f6dc:	strne	r6, [r7, #4]
   1f6e0:	ldr	r0, [r5]
   1f6e4:	ldr	r1, [r5, #20]
   1f6e8:	ldr	r0, [r0]
   1f6ec:	bl	114ac <mythread_queue_node_malloc_round@plt>
   1f6f0:	str	r0, [r5, #68]	; 0x44
   1f6f4:	ldr	r1, [r5, #20]
   1f6f8:	ldr	r2, [r1]
   1f6fc:	ldr	r2, [r2, #12]
   1f700:	cmp	r2, #0
   1f704:	bne	1f770 <myhtml_queue_add@@Base+0xcc>
   1f708:	ldr	r0, [r5]
   1f70c:	ldr	r0, [r0, #4]
   1f710:	bl	11a28 <mythread_queue_list_entry_make_batch@plt>
   1f714:	ldr	r0, [r5]
   1f718:	ldr	r1, [r5, #20]
   1f71c:	ldr	r0, [r0]
   1f720:	bl	11b78 <mythread_queue_list_entry_make_stream@plt>
   1f724:	ldr	r0, [r5, #68]	; 0x44
   1f728:	b	1f770 <myhtml_queue_add@@Base+0xcc>
   1f72c:	cmp	r6, #0
   1f730:	cmpne	r7, #0
   1f734:	beq	1f754 <myhtml_queue_add@@Base+0xb0>
   1f738:	mov	r0, #0
   1f73c:	mov	r1, r7
   1f740:	str	r6, [r7, #4]
   1f744:	bl	10f00 <myhtml_parser_worker@plt>
   1f748:	mov	r0, #0
   1f74c:	mov	r1, r7
   1f750:	bl	11c44 <myhtml_parser_stream@plt>
   1f754:	ldr	r0, [r5]
   1f758:	ldr	r1, [r5, #24]
   1f75c:	mov	r2, #4
   1f760:	mov	r3, #0
   1f764:	ldr	r0, [r0]
   1f768:	bl	119e0 <mythread_queue_node_malloc_limit@plt>
   1f76c:	str	r0, [r5, #68]	; 0x44
   1f770:	mov	r4, #2
   1f774:	cmp	r0, #0
   1f778:	beq	1f7fc <myhtml_queue_add@@Base+0x158>
   1f77c:	cmp	r6, #0
   1f780:	str	r7, [r0, #8]
   1f784:	str	r5, [r0]
   1f788:	cmpne	r7, #0
   1f78c:	beq	1f79c <myhtml_queue_add@@Base+0xf8>
   1f790:	mov	r0, r5
   1f794:	mov	r1, r6
   1f798:	bl	11260 <myhtml_tokenizer_calc_current_namespace@plt>
   1f79c:	ldr	r0, [r5, #8]
   1f7a0:	ldr	r1, [r0, #12]
   1f7a4:	bl	11800 <myhtml_token_node_create@plt>
   1f7a8:	cmp	r0, #0
   1f7ac:	str	r0, [r5, #64]	; 0x40
   1f7b0:	beq	1f7fc <myhtml_queue_add@@Base+0x158>
   1f7b4:	ldr	r1, [r5, #192]	; 0xc0
   1f7b8:	add	r1, r1, r8
   1f7bc:	str	r1, [r0, #24]
   1f7c0:	str	r1, [r0, #32]
   1f7c4:	b	1f7f8 <myhtml_queue_add@@Base+0x154>
   1f7c8:	ldr	r0, [r6]
   1f7cc:	cmp	r0, #1
   1f7d0:	bne	1f6cc <myhtml_queue_add@@Base+0x28>
   1f7d4:	ldr	r0, [r6, #48]	; 0x30
   1f7d8:	tst	r0, #8
   1f7dc:	beq	1f6cc <myhtml_queue_add@@Base+0x28>
   1f7e0:	mov	r0, r6
   1f7e4:	bl	11be4 <myhtml_token_node_clean@plt>
   1f7e8:	ldr	r0, [r5, #192]	; 0xc0
   1f7ec:	add	r0, r0, r8
   1f7f0:	str	r0, [r6, #24]
   1f7f4:	str	r0, [r6, #32]
   1f7f8:	mov	r4, #0
   1f7fc:	mov	r0, r4
   1f800:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001f804 <myhtml_utils_strcmp@@Base>:
   1f804:	push	{fp, lr}
   1f808:	mov	fp, sp
   1f80c:	mov	ip, r0
   1f810:	mov	r0, #1
   1f814:	cmp	r2, #0
   1f818:	bne	1f830 <myhtml_utils_strcmp@@Base+0x2c>
   1f81c:	pop	{fp, pc}
   1f820:	subs	r2, r2, #1
   1f824:	add	ip, ip, #1
   1f828:	add	r1, r1, #1
   1f82c:	popeq	{fp, pc}
   1f830:	ldrb	lr, [r1]
   1f834:	sub	r3, lr, #65	; 0x41
   1f838:	uxtb	r3, r3
   1f83c:	cmp	r3, #26
   1f840:	ldrb	r3, [ip]
   1f844:	orrcc	lr, lr, #96	; 0x60
   1f848:	uxtb	lr, lr
   1f84c:	cmp	lr, r3
   1f850:	beq	1f820 <myhtml_utils_strcmp@@Base+0x1c>
   1f854:	mov	r0, #0
   1f858:	pop	{fp, pc}

0001f85c <myhtml_is_html_node@@Base>:
   1f85c:	mov	r2, r0
   1f860:	mov	r0, #0
   1f864:	cmp	r2, #0
   1f868:	bxeq	lr
   1f86c:	ldr	r3, [r2, #4]
   1f870:	cmp	r3, r1
   1f874:	ldreq	r0, [r2, #8]
   1f878:	subeq	r0, r0, #1
   1f87c:	clzeq	r0, r0
   1f880:	lsreq	r0, r0, #5
   1f884:	bx	lr

0001f888 <myhtml_version@@Base>:
   1f888:	mov	r2, #4
   1f88c:	mov	r1, #0
   1f890:	mov	r3, #5
   1f894:	str	r2, [r0]
   1f898:	stmib	r0, {r1, r3}
   1f89c:	bx	lr

0001f8a0 <myhtml_node_clone@@Base>:
   1f8a0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1f8a4:	add	fp, sp, #24
   1f8a8:	sub	sp, sp, #8
   1f8ac:	mov	r5, r1
   1f8b0:	mov	r6, r0
   1f8b4:	bl	110c8 <myhtml_tree_node_create@plt>
   1f8b8:	ldr	r7, [r5, #4]
   1f8bc:	mov	r4, r0
   1f8c0:	cmp	r7, #252	; 0xfc
   1f8c4:	bcc	1f934 <myhtml_node_clone@@Base+0x94>
   1f8c8:	ldr	r0, [r6, #28]
   1f8cc:	mov	r1, r7
   1f8d0:	bl	11818 <myhtml_tag_get_by_id@plt>
   1f8d4:	mov	r9, r0
   1f8d8:	ldr	r0, [r5, #40]	; 0x28
   1f8dc:	ldr	r1, [r5, #4]
   1f8e0:	ldr	r0, [r0, #28]
   1f8e4:	bl	11818 <myhtml_tag_get_by_id@plt>
   1f8e8:	mov	r8, r0
   1f8ec:	cmp	r9, #0
   1f8f0:	beq	1f918 <myhtml_node_clone@@Base+0x78>
   1f8f4:	ldr	r2, [r9, #8]
   1f8f8:	ldr	r0, [r8, #8]
   1f8fc:	cmp	r2, r0
   1f900:	bne	1f918 <myhtml_node_clone@@Base+0x78>
   1f904:	ldr	r1, [r8, #4]
   1f908:	ldr	r0, [r9, #4]
   1f90c:	bl	11b84 <mycore_strncmp@plt>
   1f910:	cmp	r0, #0
   1f914:	beq	1f934 <myhtml_node_clone@@Base+0x94>
   1f918:	ldmib	r8, {r1, r2}
   1f91c:	ldr	r0, [r6, #28]
   1f920:	mov	r3, #1
   1f924:	str	r3, [sp]
   1f928:	mov	r3, #0
   1f92c:	bl	110ec <myhtml_tag_add@plt>
   1f930:	mov	r7, r0
   1f934:	ldr	r1, [r5, #32]
   1f938:	ldr	r0, [r6, #8]
   1f93c:	ldr	r2, [r6, #40]	; 0x28
   1f940:	ldr	r3, [r6, #44]	; 0x2c
   1f944:	bl	11038 <myhtml_token_node_clone@plt>
   1f948:	str	r0, [r4, #32]
   1f94c:	str	r7, [r4, #4]
   1f950:	cmp	r0, #0
   1f954:	ldr	r1, [r5, #8]
   1f958:	str	r1, [r4, #8]
   1f95c:	strne	r7, [r0]
   1f960:	ldrne	r1, [r0, #48]	; 0x30
   1f964:	orrne	r1, r1, #4
   1f968:	strne	r1, [r0, #48]	; 0x30
   1f96c:	mov	r0, r4
   1f970:	sub	sp, fp, #24
   1f974:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001f978 <myhtml_node_clone_deep@@Base>:
   1f978:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f97c:	add	fp, sp, #28
   1f980:	sub	sp, sp, #4
   1f984:	mov	r5, r1
   1f988:	mov	r9, r0
   1f98c:	mov	r7, #0
   1f990:	cmp	r1, #0
   1f994:	mov	r4, #0
   1f998:	beq	1f9bc <myhtml_node_clone_deep@@Base+0x44>
   1f99c:	ldr	r0, [r5, #40]	; 0x28
   1f9a0:	mov	r4, r5
   1f9a4:	cmp	r0, #0
   1f9a8:	beq	1f9bc <myhtml_node_clone_deep@@Base+0x44>
   1f9ac:	ldr	r0, [r0, #84]	; 0x54
   1f9b0:	mov	r4, r5
   1f9b4:	cmp	r0, r5
   1f9b8:	ldreq	r4, [r5, #20]
   1f9bc:	mov	r0, r9
   1f9c0:	mov	r1, r4
   1f9c4:	bl	11ba8 <myhtml_node_clone@plt>
   1f9c8:	cmp	r0, #0
   1f9cc:	beq	1fa64 <myhtml_node_clone_deep@@Base+0xec>
   1f9d0:	ldr	r4, [r4, #20]
   1f9d4:	mov	sl, r0
   1f9d8:	cmp	r4, #0
   1f9dc:	beq	1fa60 <myhtml_node_clone_deep@@Base+0xe8>
   1f9e0:	mov	r0, r9
   1f9e4:	mov	r1, r4
   1f9e8:	bl	11ba8 <myhtml_node_clone@plt>
   1f9ec:	cmp	r0, #0
   1f9f0:	beq	1fa64 <myhtml_node_clone_deep@@Base+0xec>
   1f9f4:	mov	r6, r0
   1f9f8:	mov	r7, sl
   1f9fc:	mov	r0, r7
   1fa00:	mov	r1, r6
   1fa04:	bl	115a8 <myhtml_tree_node_add_child@plt>
   1fa08:	ldr	r8, [r4, #20]
   1fa0c:	cmp	r8, #0
   1fa10:	bne	1fa38 <myhtml_node_clone_deep@@Base+0xc0>
   1fa14:	b	1fa20 <myhtml_node_clone_deep@@Base+0xa8>
   1fa18:	ldr	r4, [r4, #24]
   1fa1c:	ldr	r7, [r7, #24]
   1fa20:	cmp	r4, r5
   1fa24:	beq	1fa60 <myhtml_node_clone_deep@@Base+0xe8>
   1fa28:	ldr	r8, [r4, #16]
   1fa2c:	cmp	r8, #0
   1fa30:	beq	1fa18 <myhtml_node_clone_deep@@Base+0xa0>
   1fa34:	mov	r6, r7
   1fa38:	mov	r0, r9
   1fa3c:	mov	r1, r8
   1fa40:	mov	r7, r6
   1fa44:	bl	11ba8 <myhtml_node_clone@plt>
   1fa48:	mov	r6, r0
   1fa4c:	cmp	r0, #0
   1fa50:	mov	r4, r8
   1fa54:	bne	1f9fc <myhtml_node_clone_deep@@Base+0x84>
   1fa58:	mov	r7, #0
   1fa5c:	b	1fa64 <myhtml_node_clone_deep@@Base+0xec>
   1fa60:	mov	r7, sl
   1fa64:	mov	r0, r7
   1fa68:	sub	sp, fp, #28
   1fa6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001fa70 <myhtml_namespace_name_entry_by_name@@Base>:
   1fa70:	push	{r4, sl, fp, lr}
   1fa74:	add	fp, sp, #8
   1fa78:	mov	r2, r1
   1fa7c:	mov	ip, r0
   1fa80:	ldrb	r1, [r0], r1
   1fa84:	ldrb	r0, [r0, #-1]
   1fa88:	ldr	r3, [pc, #156]	; 1fb2c <myhtml_namespace_name_entry_by_name@@Base+0xbc>
   1fa8c:	ldr	lr, [pc, #156]	; 1fb30 <myhtml_namespace_name_entry_by_name@@Base+0xc0>
   1fa90:	add	r3, pc, r3
   1fa94:	add	lr, pc, lr
   1fa98:	ldrb	r1, [r3, r1]
   1fa9c:	ldrb	r0, [r3, r0]
   1faa0:	mul	r1, r1, r2
   1faa4:	mul	r0, r1, r0
   1faa8:	movw	r1, #27595	; 0x6bcb
   1faac:	movt	r1, #44840	; 0xaf28
   1fab0:	umull	r1, r3, r0, r1
   1fab4:	sub	r1, r0, r3
   1fab8:	add	r1, r3, r1, lsr #1
   1fabc:	mov	r3, #19
   1fac0:	lsr	r1, r1, #4
   1fac4:	mls	r0, r1, r3, r0
   1fac8:	add	r1, r0, #1
   1facc:	add	r3, r1, r1, lsl #2
   1fad0:	b	1fae4 <myhtml_namespace_name_entry_by_name@@Base+0x74>
   1fad4:	add	r0, r1, r1, lsl #2
   1fad8:	add	r0, lr, r0, lsl #2
   1fadc:	ldr	r1, [r0, #12]
   1fae0:	add	r3, r1, r1, lsl #2
   1fae4:	mov	r4, lr
   1fae8:	ldr	r0, [r4, r3, lsl #2]!
   1faec:	cmp	r0, #0
   1faf0:	beq	1fb0c <myhtml_namespace_name_entry_by_name@@Base+0x9c>
   1faf4:	add	r3, lr, r3, lsl #2
   1faf8:	ldr	r3, [r3, #4]
   1fafc:	cmp	r3, r2
   1fb00:	beq	1fb14 <myhtml_namespace_name_entry_by_name@@Base+0xa4>
   1fb04:	cmp	r3, r2
   1fb08:	bls	1fad4 <myhtml_namespace_name_entry_by_name@@Base+0x64>
   1fb0c:	mov	r0, #0
   1fb10:	pop	{r4, sl, fp, pc}
   1fb14:	mov	r1, ip
   1fb18:	bl	112b4 <mycore_strncasecmp@plt>
   1fb1c:	cmp	r0, #0
   1fb20:	movne	r4, #0
   1fb24:	mov	r0, r4
   1fb28:	pop	{r4, sl, fp, pc}
   1fb2c:	andeq	r1, lr, r4, asr r1
   1fb30:	andeq	r6, pc, r4, asr r9	; <UNPREDICTABLE>

0001fb34 <myhtml_namespace_id_by_name@@Base>:
   1fb34:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1fb38:	add	fp, sp, #24
   1fb3c:	mov	r8, r2
   1fb40:	mov	r2, r1
   1fb44:	mov	r1, r0
   1fb48:	mov	r9, #0
   1fb4c:	ldrb	r3, [r0], r2
   1fb50:	ldrb	r0, [r0, #-1]
   1fb54:	ldr	r7, [pc, #184]	; 1fc14 <myhtml_namespace_id_by_name@@Base+0xe0>
   1fb58:	add	r7, pc, r7
   1fb5c:	ldrb	r3, [r7, r3]
   1fb60:	ldrb	r0, [r7, r0]
   1fb64:	mul	r3, r3, r2
   1fb68:	mul	r0, r3, r0
   1fb6c:	movw	r3, #27595	; 0x6bcb
   1fb70:	movt	r3, #44840	; 0xaf28
   1fb74:	umull	r3, r7, r0, r3
   1fb78:	sub	r3, r0, r7
   1fb7c:	add	r3, r7, r3, lsr #1
   1fb80:	mov	r7, #19
   1fb84:	lsr	r3, r3, #4
   1fb88:	mls	r3, r3, r7, r0
   1fb8c:	movw	r7, #58783	; 0xe59f
   1fb90:	mov	r0, #1
   1fb94:	movt	r7, #3
   1fb98:	tst	r0, r7, lsr r3
   1fb9c:	bne	1fbec <myhtml_namespace_id_by_name@@Base+0xb8>
   1fba0:	add	r6, r3, #1
   1fba4:	ldr	r3, [pc, #108]	; 1fc18 <myhtml_namespace_id_by_name@@Base+0xe4>
   1fba8:	movw	r4, #52031	; 0xcb3f
   1fbac:	movt	r4, #7
   1fbb0:	add	r3, pc, r3
   1fbb4:	add	r7, r6, r6, lsl #2
   1fbb8:	add	r6, r3, r7, lsl #2
   1fbbc:	ldr	r5, [r6, #4]
   1fbc0:	cmp	r5, r2
   1fbc4:	beq	1fbdc <myhtml_namespace_id_by_name@@Base+0xa8>
   1fbc8:	bhi	1fbec <myhtml_namespace_id_by_name@@Base+0xb8>
   1fbcc:	ldr	r6, [r6, #12]
   1fbd0:	tst	r0, r4, lsr r6
   1fbd4:	beq	1fbb4 <myhtml_namespace_id_by_name@@Base+0x80>
   1fbd8:	b	1fbec <myhtml_namespace_id_by_name@@Base+0xb8>
   1fbdc:	ldr	r0, [r3, r7, lsl #2]
   1fbe0:	bl	112b4 <mycore_strncasecmp@plt>
   1fbe4:	cmp	r0, #0
   1fbe8:	beq	1fbf4 <myhtml_namespace_id_by_name@@Base+0xc0>
   1fbec:	mov	r0, r9
   1fbf0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1fbf4:	cmp	r8, #0
   1fbf8:	mov	r9, #1
   1fbfc:	ldrne	r0, [r6, #8]
   1fc00:	strne	r0, [r8]
   1fc04:	movne	r0, r9
   1fc08:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   1fc0c:	mov	r0, r9
   1fc10:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1fc14:	andeq	r1, lr, ip, lsl #1
   1fc18:	andeq	r6, pc, r8, lsr r8	; <UNPREDICTABLE>

0001fc1c <myhtml_namespace_name_by_id@@Base>:
   1fc1c:	push	{r4, r5, fp, lr}
   1fc20:	add	fp, sp, #8
   1fc24:	mov	r5, r1
   1fc28:	cmp	r0, #8
   1fc2c:	bcc	1fc4c <myhtml_namespace_name_by_id@@Base+0x30>
   1fc30:	mov	r4, #0
   1fc34:	cmp	r5, #0
   1fc38:	movne	r0, r4
   1fc3c:	strne	r4, [r5]
   1fc40:	popne	{r4, r5, fp, pc}
   1fc44:	mov	r0, r4
   1fc48:	pop	{r4, r5, fp, pc}
   1fc4c:	ldr	r1, [pc, #32]	; 1fc74 <myhtml_namespace_name_by_id@@Base+0x58>
   1fc50:	cmp	r5, #0
   1fc54:	add	r1, pc, r1
   1fc58:	add	r4, r1, r0, lsl #3
   1fc5c:	beq	1fc6c <myhtml_namespace_name_by_id@@Base+0x50>
   1fc60:	mov	r0, r4
   1fc64:	bl	1156c <strlen@plt>
   1fc68:	str	r0, [r5]
   1fc6c:	mov	r0, r4
   1fc70:	pop	{r4, r5, fp, pc}
   1fc74:	muleq	lr, r0, r0

0001fc78 <myhtml_namespace_url_by_id@@Base>:
   1fc78:	cmp	r0, #8
   1fc7c:	bcc	1fc94 <myhtml_namespace_url_by_id@@Base+0x1c>
   1fc80:	mov	r0, #0
   1fc84:	cmp	r1, #0
   1fc88:	strne	r0, [r1]
   1fc8c:	bxne	lr
   1fc90:	bx	lr
   1fc94:	cmp	r1, #0
   1fc98:	beq	1fcb4 <myhtml_namespace_url_by_id@@Base+0x3c>
   1fc9c:	ldr	r3, [pc, #36]	; 1fcc8 <myhtml_namespace_url_by_id@@Base+0x50>
   1fca0:	add	r2, r0, r0, lsl #1
   1fca4:	add	r3, pc, r3
   1fca8:	add	r2, r3, r2, lsl #2
   1fcac:	ldr	r2, [r2, #4]
   1fcb0:	str	r2, [r1]
   1fcb4:	ldr	r1, [pc, #16]	; 1fccc <myhtml_namespace_url_by_id@@Base+0x54>
   1fcb8:	add	r0, r0, r0, lsl #1
   1fcbc:	add	r1, pc, r1
   1fcc0:	ldr	r0, [r1, r0, lsl #2]
   1fcc4:	bx	lr
   1fcc8:	ldrdeq	r6, [pc], -r4
   1fccc:			; <UNDEFINED> instruction: 0x000f68bc

0001fcd0 <myhtml_namespace_id_by_url@@Base>:
   1fcd0:	mov	r0, #0
   1fcd4:	bx	lr

0001fcd8 <myhtml_string_append_with_preprocessing@@Base>:
   1fcd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fcdc:	add	fp, sp, #28
   1fce0:	sub	sp, sp, #4
   1fce4:	mov	r4, r0
   1fce8:	mov	r7, r1
   1fcec:	ldr	r0, [r0, #4]
   1fcf0:	mov	r8, r3
   1fcf4:	mov	r6, r2
   1fcf8:	ldr	r1, [r4, #8]
   1fcfc:	add	r1, r2, r1
   1fd00:	add	r1, r1, #1
   1fd04:	cmp	r1, r0
   1fd08:	bcc	1fd14 <myhtml_string_append_with_preprocessing@@Base+0x3c>
   1fd0c:	mov	r0, r4
   1fd10:	bl	11794 <mycore_string_realloc@plt>
   1fd14:	ldr	r1, [r4]
   1fd18:	cmp	r6, #0
   1fd1c:	beq	1fddc <myhtml_string_append_with_preprocessing@@Base+0x104>
   1fd20:	mov	r5, #0
   1fd24:	mov	r9, #189	; 0xbd
   1fd28:	mov	sl, #10
   1fd2c:	ldrb	r0, [r7, r5]
   1fd30:	cmp	r0, #0
   1fd34:	beq	1fd64 <myhtml_string_append_with_preprocessing@@Base+0x8c>
   1fd38:	cmp	r0, #13
   1fd3c:	bne	1fd6c <myhtml_string_append_with_preprocessing@@Base+0x94>
   1fd40:	ldr	r0, [r4, #8]
   1fd44:	strb	sl, [r1, r0]
   1fd48:	add	r0, r5, #1
   1fd4c:	cmp	r0, r6
   1fd50:	bcs	1fdf0 <myhtml_string_append_with_preprocessing@@Base+0x118>
   1fd54:	ldrb	r2, [r7, r0]
   1fd58:	cmp	r2, #10
   1fd5c:	moveq	r5, r0
   1fd60:	b	1fdbc <myhtml_string_append_with_preprocessing@@Base+0xe4>
   1fd64:	cmp	r8, #0
   1fd68:	beq	1fd78 <myhtml_string_append_with_preprocessing@@Base+0xa0>
   1fd6c:	ldr	r2, [r4, #8]
   1fd70:	strb	r0, [r1, r2]
   1fd74:	b	1fdbc <myhtml_string_append_with_preprocessing@@Base+0xe4>
   1fd78:	ldr	r0, [r4, #4]
   1fd7c:	add	r1, r0, #5
   1fd80:	mov	r0, r4
   1fd84:	bl	11794 <mycore_string_realloc@plt>
   1fd88:	ldr	r1, [r4]
   1fd8c:	ldr	r0, [r4, #8]
   1fd90:	mov	r2, #239	; 0xef
   1fd94:	strb	r2, [r1, r0]
   1fd98:	mov	r2, #191	; 0xbf
   1fd9c:	ldr	r0, [r4, #8]
   1fda0:	add	r0, r0, #1
   1fda4:	str	r0, [r4, #8]
   1fda8:	strb	r2, [r1, r0]
   1fdac:	ldr	r0, [r4, #8]
   1fdb0:	add	r0, r0, #1
   1fdb4:	str	r0, [r4, #8]
   1fdb8:	strb	r9, [r1, r0]
   1fdbc:	ldr	r0, [r4, #8]
   1fdc0:	add	r5, r5, #1
   1fdc4:	cmp	r5, r6
   1fdc8:	add	r2, r0, #1
   1fdcc:	str	r2, [r4, #8]
   1fdd0:	bcc	1fd2c <myhtml_string_append_with_preprocessing@@Base+0x54>
   1fdd4:	ldr	r1, [r4]
   1fdd8:	b	1fde0 <myhtml_string_append_with_preprocessing@@Base+0x108>
   1fddc:	ldr	r2, [r4, #8]
   1fde0:	mov	r0, #0
   1fde4:	strb	r0, [r1, r2]
   1fde8:	sub	sp, fp, #28
   1fdec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fdf0:	ldr	r1, [r4, #8]
   1fdf4:	ldr	r2, [r4, #4]
   1fdf8:	add	r0, r1, #1
   1fdfc:	cmp	r0, r2
   1fe00:	str	r0, [r4, #8]
   1fe04:	bcc	1fe18 <myhtml_string_append_with_preprocessing@@Base+0x140>
   1fe08:	add	r1, r1, #3
   1fe0c:	mov	r0, r4
   1fe10:	bl	11794 <mycore_string_realloc@plt>
   1fe14:	ldr	r0, [r4, #8]
   1fe18:	ldr	r1, [r4]
   1fe1c:	mov	r2, #0
   1fe20:	strb	r2, [r1, r0]
   1fe24:	ldr	r0, [r4, #8]
   1fe28:	sub	sp, fp, #28
   1fe2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001fe30 <myhtml_string_append_lowercase_with_preprocessing@@Base>:
   1fe30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fe34:	add	fp, sp, #28
   1fe38:	sub	sp, sp, #4
   1fe3c:	mov	r4, r0
   1fe40:	mov	r7, r1
   1fe44:	ldr	r0, [r0, #4]
   1fe48:	mov	r8, r3
   1fe4c:	mov	r6, r2
   1fe50:	ldr	r1, [r4, #8]
   1fe54:	add	r1, r2, r1
   1fe58:	add	r1, r1, #1
   1fe5c:	cmp	r1, r0
   1fe60:	bcc	1fe6c <myhtml_string_append_lowercase_with_preprocessing@@Base+0x3c>
   1fe64:	mov	r0, r4
   1fe68:	bl	11794 <mycore_string_realloc@plt>
   1fe6c:	ldr	r1, [r4]
   1fe70:	cmp	r6, #0
   1fe74:	beq	1ff40 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x110>
   1fe78:	ldr	sl, [pc, #276]	; 1ff94 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x164>
   1fe7c:	mov	r5, #0
   1fe80:	mov	r9, #10
   1fe84:	add	sl, pc, sl
   1fe88:	ldrb	r0, [r7, r5]
   1fe8c:	cmp	r0, #0
   1fe90:	beq	1fec0 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x90>
   1fe94:	cmp	r0, #13
   1fe98:	bne	1fec8 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x98>
   1fe9c:	ldr	r0, [r4, #8]
   1fea0:	strb	r9, [r1, r0]
   1fea4:	add	r0, r5, #1
   1fea8:	cmp	r0, r6
   1feac:	bcs	1ff54 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x124>
   1feb0:	ldrb	r2, [r7, r0]
   1feb4:	cmp	r2, #10
   1feb8:	moveq	r5, r0
   1febc:	b	1ff20 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xf0>
   1fec0:	cmp	r8, #0
   1fec4:	beq	1fed8 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xa8>
   1fec8:	ldrb	r0, [sl, r0]
   1fecc:	ldr	r2, [r4, #8]
   1fed0:	strb	r0, [r1, r2]
   1fed4:	b	1ff20 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xf0>
   1fed8:	ldr	r0, [r4, #4]
   1fedc:	add	r1, r0, #5
   1fee0:	mov	r0, r4
   1fee4:	bl	11794 <mycore_string_realloc@plt>
   1fee8:	ldr	r1, [r4]
   1feec:	ldr	r0, [r4, #8]
   1fef0:	mov	r2, #239	; 0xef
   1fef4:	strb	r2, [r1, r0]
   1fef8:	mov	r2, #191	; 0xbf
   1fefc:	ldr	r0, [r4, #8]
   1ff00:	add	r0, r0, #1
   1ff04:	str	r0, [r4, #8]
   1ff08:	strb	r2, [r1, r0]
   1ff0c:	mov	r2, #189	; 0xbd
   1ff10:	ldr	r0, [r4, #8]
   1ff14:	add	r0, r0, #1
   1ff18:	str	r0, [r4, #8]
   1ff1c:	strb	r2, [r1, r0]
   1ff20:	ldr	r0, [r4, #8]
   1ff24:	add	r5, r5, #1
   1ff28:	cmp	r5, r6
   1ff2c:	add	r2, r0, #1
   1ff30:	str	r2, [r4, #8]
   1ff34:	bcc	1fe88 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x58>
   1ff38:	ldr	r1, [r4]
   1ff3c:	b	1ff44 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x114>
   1ff40:	ldr	r2, [r4, #8]
   1ff44:	mov	r0, #0
   1ff48:	strb	r0, [r1, r2]
   1ff4c:	sub	sp, fp, #28
   1ff50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ff54:	ldr	r1, [r4, #8]
   1ff58:	ldr	r2, [r4, #4]
   1ff5c:	add	r0, r1, #1
   1ff60:	cmp	r0, r2
   1ff64:	str	r0, [r4, #8]
   1ff68:	bcc	1ff7c <myhtml_string_append_lowercase_with_preprocessing@@Base+0x14c>
   1ff6c:	add	r1, r1, #3
   1ff70:	mov	r0, r4
   1ff74:	bl	11794 <mycore_string_realloc@plt>
   1ff78:	ldr	r0, [r4, #8]
   1ff7c:	ldr	r1, [r4]
   1ff80:	mov	r2, #0
   1ff84:	strb	r2, [r1, r0]
   1ff88:	ldr	r0, [r4, #8]
   1ff8c:	sub	sp, fp, #28
   1ff90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ff94:	andeq	r0, lr, fp, ror pc

0001ff98 <myhtml_string_before_append_any_preprocessing@@Base>:
   1ff98:	cmp	r2, #0
   1ff9c:	mov	r0, #0
   1ffa0:	cmpne	r3, #0
   1ffa4:	ldrbne	r0, [r1]
   1ffa8:	subne	r0, r0, #10
   1ffac:	clzne	r0, r0
   1ffb0:	lsrne	r0, r0, #5
   1ffb4:	bx	lr

0001ffb8 <myhtml_string_append_with_convert_encoding_with_preprocessing@@Base>:
   1ffb8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ffbc:	add	fp, sp, #24
   1ffc0:	sub	sp, sp, #32
   1ffc4:	add	r8, sp, #8
   1ffc8:	mov	r7, r0
   1ffcc:	mov	r4, r3
   1ffd0:	mov	r5, r2
   1ffd4:	mov	r6, r1
   1ffd8:	mov	r0, r8
   1ffdc:	bl	11224 <myencoding_result_clean@plt>
   1ffe0:	ldr	r0, [fp, #8]
   1ffe4:	mov	r1, r8
   1ffe8:	mov	r2, r6
   1ffec:	mov	r3, r5
   1fff0:	str	r4, [sp]
   1fff4:	str	r0, [sp, #4]
   1fff8:	mov	r0, r7
   1fffc:	bl	11ae8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   20000:	sub	sp, fp, #24
   20004:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00020008 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base>:
   20008:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2000c:	add	fp, sp, #28
   20010:	sub	sp, sp, #4
   20014:	mov	r4, r0
   20018:	mov	r7, r1
   2001c:	ldr	r0, [r0, #4]
   20020:	ldr	r6, [fp, #8]
   20024:	mov	r5, r3
   20028:	mov	r8, r2
   2002c:	ldr	r1, [r4, #8]
   20030:	add	r1, r3, r1
   20034:	add	r1, r1, #1
   20038:	cmp	r1, r0
   2003c:	bcc	20048 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x40>
   20040:	mov	r0, r4
   20044:	bl	11794 <mycore_string_realloc@plt>
   20048:	mov	r0, r6
   2004c:	bl	11698 <myencoding_get_function_by_id@plt>
   20050:	cmp	r5, #0
   20054:	beq	20168 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x160>
   20058:	mov	r9, r0
   2005c:	mov	sl, #0
   20060:	ldrb	r0, [r8, sl]
   20064:	mov	r1, r7
   20068:	blx	r9
   2006c:	cmp	r0, #0
   20070:	bne	2015c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x154>
   20074:	ldr	r0, [r4, #8]
   20078:	ldr	r1, [r4, #4]
   2007c:	add	r2, r0, #5
   20080:	cmp	r2, r1
   20084:	bcc	20098 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x90>
   20088:	add	r1, r0, #6
   2008c:	mov	r0, r4
   20090:	bl	11794 <mycore_string_realloc@plt>
   20094:	ldr	r0, [r4, #8]
   20098:	ldr	r1, [r4]
   2009c:	add	r1, r1, r0
   200a0:	ldr	r0, [r7, #12]
   200a4:	bl	11b3c <myencoding_codepoint_to_ascii_utf_8@plt>
   200a8:	mov	r6, r0
   200ac:	cmp	r0, #1
   200b0:	bne	20150 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   200b4:	ldr	r0, [r4]
   200b8:	ldr	r1, [r4, #8]
   200bc:	ldrb	r2, [r0, r1]
   200c0:	cmp	r2, #0
   200c4:	beq	200f4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0xec>
   200c8:	cmp	r2, #13
   200cc:	bne	20150 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   200d0:	mov	r2, #10
   200d4:	strb	r2, [r0, r1]
   200d8:	add	r0, sl, #1
   200dc:	cmp	r0, r5
   200e0:	bcs	20198 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x190>
   200e4:	ldrb	r1, [r8, r0]
   200e8:	cmp	r1, #10
   200ec:	moveq	sl, r0
   200f0:	b	20150 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   200f4:	ldr	r0, [fp, #12]
   200f8:	cmp	r0, #0
   200fc:	bne	20150 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   20100:	ldr	r0, [r4, #4]
   20104:	add	r1, r0, #5
   20108:	mov	r0, r4
   2010c:	bl	11794 <mycore_string_realloc@plt>
   20110:	ldr	r0, [r4]
   20114:	ldr	r1, [r4, #8]
   20118:	mov	r2, #239	; 0xef
   2011c:	strb	r2, [r0, r1]
   20120:	mov	r2, #191	; 0xbf
   20124:	ldr	r1, [r4, #8]
   20128:	ldr	r0, [r4]
   2012c:	add	r1, r1, #1
   20130:	str	r1, [r4, #8]
   20134:	strb	r2, [r0, r1]
   20138:	mov	r2, #189	; 0xbd
   2013c:	ldr	r1, [r4, #8]
   20140:	ldr	r0, [r4]
   20144:	add	r1, r1, #1
   20148:	str	r1, [r4, #8]
   2014c:	strb	r2, [r0, r1]
   20150:	ldr	r0, [r4, #8]
   20154:	add	r0, r0, r6
   20158:	str	r0, [r4, #8]
   2015c:	add	sl, sl, #1
   20160:	cmp	sl, r5
   20164:	bcc	20060 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x58>
   20168:	ldmib	r4, {r0, r1}
   2016c:	cmp	r1, r0
   20170:	bcc	20184 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x17c>
   20174:	add	r1, r1, #1
   20178:	mov	r0, r4
   2017c:	bl	11794 <mycore_string_realloc@plt>
   20180:	ldr	r1, [r4, #8]
   20184:	ldr	r2, [r4]
   20188:	mov	r0, #0
   2018c:	strb	r0, [r2, r1]
   20190:	sub	sp, fp, #28
   20194:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20198:	ldr	r1, [r4, #8]
   2019c:	ldr	r2, [r4, #4]
   201a0:	add	r0, r1, #1
   201a4:	cmp	r0, r2
   201a8:	str	r0, [r4, #8]
   201ac:	bcc	201c0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1b8>
   201b0:	add	r1, r1, #3
   201b4:	mov	r0, r4
   201b8:	bl	11794 <mycore_string_realloc@plt>
   201bc:	ldr	r0, [r4, #8]
   201c0:	ldr	r1, [r4]
   201c4:	mov	r2, #0
   201c8:	strb	r2, [r1, r0]
   201cc:	ldr	r0, [r4, #8]
   201d0:	sub	sp, fp, #28
   201d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000201d8 <myhtml_string_append_lowercase_with_convert_encoding_with_preprocessing@@Base>:
   201d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   201dc:	add	fp, sp, #24
   201e0:	sub	sp, sp, #32
   201e4:	add	r8, sp, #8
   201e8:	mov	r7, r0
   201ec:	mov	r4, r3
   201f0:	mov	r5, r2
   201f4:	mov	r6, r1
   201f8:	mov	r0, r8
   201fc:	bl	11224 <myencoding_result_clean@plt>
   20200:	ldr	r0, [fp, #8]
   20204:	mov	r1, r8
   20208:	mov	r2, r6
   2020c:	mov	r3, r5
   20210:	str	r4, [sp]
   20214:	str	r0, [sp, #4]
   20218:	mov	r0, r7
   2021c:	bl	11a7c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   20220:	sub	sp, fp, #24
   20224:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00020228 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base>:
   20228:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2022c:	add	fp, sp, #28
   20230:	sub	sp, sp, #4
   20234:	mov	r4, r0
   20238:	mov	r7, r1
   2023c:	ldr	r0, [r0, #4]
   20240:	ldr	r6, [fp, #8]
   20244:	mov	r5, r3
   20248:	mov	r8, r2
   2024c:	ldr	r1, [r4, #8]
   20250:	add	r1, r3, r1
   20254:	add	r1, r1, #1
   20258:	cmp	r1, r0
   2025c:	bcc	20268 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x40>
   20260:	mov	r0, r4
   20264:	bl	11794 <mycore_string_realloc@plt>
   20268:	mov	r0, r6
   2026c:	bl	11698 <myencoding_get_function_by_id@plt>
   20270:	cmp	r5, #0
   20274:	beq	20388 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x160>
   20278:	mov	r9, r0
   2027c:	mov	sl, #0
   20280:	ldrb	r0, [r8, sl]
   20284:	mov	r1, r7
   20288:	blx	r9
   2028c:	cmp	r0, #0
   20290:	bne	2037c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x154>
   20294:	ldr	r0, [r4, #8]
   20298:	ldr	r1, [r4, #4]
   2029c:	add	r2, r0, #5
   202a0:	cmp	r2, r1
   202a4:	bcc	202b8 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x90>
   202a8:	add	r1, r0, #6
   202ac:	mov	r0, r4
   202b0:	bl	11794 <mycore_string_realloc@plt>
   202b4:	ldr	r0, [r4, #8]
   202b8:	ldr	r1, [r4]
   202bc:	add	r1, r1, r0
   202c0:	ldr	r0, [r7, #12]
   202c4:	bl	10e70 <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>
   202c8:	mov	r6, r0
   202cc:	cmp	r0, #1
   202d0:	bne	20370 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   202d4:	ldr	r0, [r4]
   202d8:	ldr	r1, [r4, #8]
   202dc:	ldrb	r2, [r0, r1]
   202e0:	cmp	r2, #0
   202e4:	beq	20314 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0xec>
   202e8:	cmp	r2, #13
   202ec:	bne	20370 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   202f0:	mov	r2, #10
   202f4:	strb	r2, [r0, r1]
   202f8:	add	r0, sl, #1
   202fc:	cmp	r0, r5
   20300:	bcs	203b8 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x190>
   20304:	ldrb	r1, [r8, r0]
   20308:	cmp	r1, #10
   2030c:	moveq	sl, r0
   20310:	b	20370 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   20314:	ldr	r0, [fp, #12]
   20318:	cmp	r0, #0
   2031c:	bne	20370 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x148>
   20320:	ldr	r0, [r4, #4]
   20324:	add	r1, r0, #5
   20328:	mov	r0, r4
   2032c:	bl	11794 <mycore_string_realloc@plt>
   20330:	ldr	r0, [r4]
   20334:	ldr	r1, [r4, #8]
   20338:	mov	r2, #239	; 0xef
   2033c:	strb	r2, [r0, r1]
   20340:	mov	r2, #191	; 0xbf
   20344:	ldr	r1, [r4, #8]
   20348:	ldr	r0, [r4]
   2034c:	add	r1, r1, #1
   20350:	str	r1, [r4, #8]
   20354:	strb	r2, [r0, r1]
   20358:	mov	r2, #189	; 0xbd
   2035c:	ldr	r1, [r4, #8]
   20360:	ldr	r0, [r4]
   20364:	add	r1, r1, #1
   20368:	str	r1, [r4, #8]
   2036c:	strb	r2, [r0, r1]
   20370:	ldr	r0, [r4, #8]
   20374:	add	r0, r0, r6
   20378:	str	r0, [r4, #8]
   2037c:	add	sl, sl, #1
   20380:	cmp	sl, r5
   20384:	bcc	20280 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x58>
   20388:	ldmib	r4, {r0, r1}
   2038c:	cmp	r1, r0
   20390:	bcc	203a4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x17c>
   20394:	add	r1, r1, #1
   20398:	mov	r0, r4
   2039c:	bl	11794 <mycore_string_realloc@plt>
   203a0:	ldr	r1, [r4, #8]
   203a4:	ldr	r2, [r4]
   203a8:	mov	r0, #0
   203ac:	strb	r0, [r2, r1]
   203b0:	sub	sp, fp, #28
   203b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   203b8:	ldr	r1, [r4, #8]
   203bc:	ldr	r2, [r4, #4]
   203c0:	add	r0, r1, #1
   203c4:	cmp	r0, r2
   203c8:	str	r0, [r4, #8]
   203cc:	bcc	203e0 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1b8>
   203d0:	add	r1, r1, #3
   203d4:	mov	r0, r4
   203d8:	bl	11794 <mycore_string_realloc@plt>
   203dc:	ldr	r0, [r4, #8]
   203e0:	ldr	r1, [r4]
   203e4:	mov	r2, #0
   203e8:	strb	r2, [r1, r0]
   203ec:	ldr	r0, [r4, #8]
   203f0:	sub	sp, fp, #28
   203f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000203f8 <myhtml_parser_stream@@Base>:
   203f8:	push	{r4, sl, fp, lr}
   203fc:	add	fp, sp, #8
   20400:	ldr	r0, [r1]
   20404:	mov	r4, r1
   20408:	ldr	r1, [r0, #184]	; 0xb8
   2040c:	tst	r1, #1
   20410:	beq	2041c <myhtml_parser_stream@@Base+0x24>
   20414:	pop	{r4, sl, fp, pc}
   20418:	ldr	r0, [r4]
   2041c:	ldr	r1, [r4, #4]
   20420:	bl	10fcc <myhtml_rules_tree_dispatcher@plt>
   20424:	cmp	r0, #0
   20428:	popeq	{r4, sl, fp, pc}
   2042c:	b	20418 <myhtml_parser_stream@@Base+0x20>

00020430 <myhtml_parser_token_data_to_string_lowercase@@Base>:
   20430:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20434:	add	fp, sp, #28
   20438:	sub	sp, sp, #20
   2043c:	mov	r4, r0
   20440:	ldr	r0, [r0, #80]	; 0x50
   20444:	mov	sl, r1
   20448:	mov	r1, r3
   2044c:	mov	r5, r3
   20450:	str	r2, [sp, #16]
   20454:	bl	111ac <mycore_incoming_buffer_find_by_position@plt>
   20458:	mov	r7, r0
   2045c:	ldr	r6, [fp, #8]
   20460:	ldr	r0, [r0, #8]
   20464:	ldr	r1, [r7, #12]
   20468:	sub	r8, r5, r1
   2046c:	add	r1, r8, r6
   20470:	cmp	r1, r0
   20474:	bls	20594 <myhtml_parser_token_data_to_string_lowercase@@Base+0x164>
   20478:	cmp	r7, #0
   2047c:	beq	20604 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1d4>
   20480:	ldr	r2, [sp, #16]
   20484:	mov	r5, #0
   20488:	cmp	r1, r0
   2048c:	add	r2, r2, #8
   20490:	str	r2, [sp, #12]
   20494:	bls	2053c <myhtml_parser_token_data_to_string_lowercase@@Base+0x10c>
   20498:	mov	r5, #0
   2049c:	sub	r9, r0, r8
   204a0:	ldr	r0, [r7]
   204a4:	mov	r3, r5
   204a8:	mov	r2, r9
   204ac:	add	r1, r0, r8
   204b0:	mov	r0, sl
   204b4:	bl	11968 <myhtml_string_before_append_any_preprocessing@plt>
   204b8:	cmp	r9, #0
   204bc:	beq	2051c <myhtml_parser_token_data_to_string_lowercase@@Base+0xec>
   204c0:	ldr	r1, [r7]
   204c4:	sub	r3, r9, r0
   204c8:	add	r0, r0, r8
   204cc:	add	r2, r1, r0
   204d0:	ldr	r0, [r4, #200]	; 0xc8
   204d4:	cmp	r0, #0
   204d8:	beq	204fc <myhtml_parser_token_data_to_string_lowercase@@Base+0xcc>
   204dc:	ldr	r1, [sp, #16]
   204e0:	ldr	r0, [r1, #4]
   204e4:	ldrb	r1, [r1, #61]	; 0x3d
   204e8:	stm	sp, {r0, r1}
   204ec:	mov	r0, sl
   204f0:	ldr	r1, [sp, #12]
   204f4:	bl	11a7c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   204f8:	b	20518 <myhtml_parser_token_data_to_string_lowercase@@Base+0xe8>
   204fc:	ldr	r0, [sp, #16]
   20500:	mov	r1, r2
   20504:	mov	r2, r3
   20508:	ldrb	r5, [r0, #61]	; 0x3d
   2050c:	mov	r0, sl
   20510:	mov	r3, r5
   20514:	bl	11c80 <myhtml_string_append_lowercase_with_preprocessing@plt>
   20518:	mov	r5, r0
   2051c:	ldr	r7, [r7, #20]
   20520:	cmp	r7, #0
   20524:	beq	20604 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1d4>
   20528:	ldr	r0, [r7, #8]
   2052c:	sub	r6, r6, r9
   20530:	mov	r8, #0
   20534:	cmp	r6, r0
   20538:	bhi	2049c <myhtml_parser_token_data_to_string_lowercase@@Base+0x6c>
   2053c:	ldr	r0, [r7]
   20540:	mov	r2, r6
   20544:	mov	r3, r5
   20548:	add	r1, r0, r8
   2054c:	mov	r0, sl
   20550:	bl	11968 <myhtml_string_before_append_any_preprocessing@plt>
   20554:	cmp	r6, #0
   20558:	beq	20604 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1d4>
   2055c:	ldr	r1, [r7]
   20560:	sub	r3, r6, r0
   20564:	add	r0, r0, r8
   20568:	add	r2, r1, r0
   2056c:	ldr	r0, [r4, #200]	; 0xc8
   20570:	cmp	r0, #0
   20574:	beq	205e8 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1b8>
   20578:	ldr	r1, [sp, #16]
   2057c:	ldr	r0, [r1, #4]
   20580:	ldrb	r1, [r1, #61]	; 0x3d
   20584:	stm	sp, {r0, r1}
   20588:	mov	r0, sl
   2058c:	ldr	r1, [sp, #12]
   20590:	b	205c4 <myhtml_parser_token_data_to_string_lowercase@@Base+0x194>
   20594:	ldr	r0, [r4, #200]	; 0xc8
   20598:	cmp	r0, #0
   2059c:	beq	205cc <myhtml_parser_token_data_to_string_lowercase@@Base+0x19c>
   205a0:	ldr	r3, [sp, #16]
   205a4:	ldr	r0, [r7]
   205a8:	ldr	r1, [r3, #4]
   205ac:	ldrb	r2, [r3, #61]	; 0x3d
   205b0:	stm	sp, {r1, r2}
   205b4:	add	r2, r0, r8
   205b8:	add	r1, r3, #8
   205bc:	mov	r0, sl
   205c0:	mov	r3, r6
   205c4:	bl	11a7c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   205c8:	b	20604 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1d4>
   205cc:	ldr	r0, [r7]
   205d0:	mov	r2, r6
   205d4:	add	r1, r0, r8
   205d8:	ldr	r0, [sp, #16]
   205dc:	ldrb	r3, [r0, #61]	; 0x3d
   205e0:	mov	r0, sl
   205e4:	b	20600 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1d0>
   205e8:	ldr	r0, [sp, #16]
   205ec:	mov	r1, r2
   205f0:	mov	r2, r3
   205f4:	ldrb	r7, [r0, #61]	; 0x3d
   205f8:	mov	r0, sl
   205fc:	mov	r3, r7
   20600:	bl	11c80 <myhtml_string_append_lowercase_with_preprocessing@plt>
   20604:	ldr	r0, [sl, #8]
   20608:	sub	sp, fp, #28
   2060c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00020610 <myhtml_parser_token_data_to_string@@Base>:
   20610:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20614:	add	fp, sp, #28
   20618:	sub	sp, sp, #20
   2061c:	mov	r4, r0
   20620:	ldr	r0, [r0, #80]	; 0x50
   20624:	mov	sl, r1
   20628:	mov	r1, r3
   2062c:	mov	r5, r3
   20630:	str	r2, [sp, #16]
   20634:	bl	111ac <mycore_incoming_buffer_find_by_position@plt>
   20638:	mov	r7, r0
   2063c:	ldr	r6, [fp, #8]
   20640:	ldr	r0, [r0, #8]
   20644:	ldr	r1, [r7, #12]
   20648:	sub	r8, r5, r1
   2064c:	add	r1, r8, r6
   20650:	cmp	r1, r0
   20654:	bls	20774 <myhtml_parser_token_data_to_string@@Base+0x164>
   20658:	cmp	r7, #0
   2065c:	beq	207e4 <myhtml_parser_token_data_to_string@@Base+0x1d4>
   20660:	ldr	r2, [sp, #16]
   20664:	mov	r5, #0
   20668:	cmp	r1, r0
   2066c:	add	r2, r2, #8
   20670:	str	r2, [sp, #12]
   20674:	bls	2071c <myhtml_parser_token_data_to_string@@Base+0x10c>
   20678:	mov	r5, #0
   2067c:	sub	r9, r0, r8
   20680:	ldr	r0, [r7]
   20684:	mov	r3, r5
   20688:	mov	r2, r9
   2068c:	add	r1, r0, r8
   20690:	mov	r0, sl
   20694:	bl	11968 <myhtml_string_before_append_any_preprocessing@plt>
   20698:	cmp	r9, #0
   2069c:	beq	206fc <myhtml_parser_token_data_to_string@@Base+0xec>
   206a0:	ldr	r1, [r7]
   206a4:	sub	r3, r9, r0
   206a8:	add	r0, r0, r8
   206ac:	add	r2, r1, r0
   206b0:	ldr	r0, [r4, #200]	; 0xc8
   206b4:	cmp	r0, #0
   206b8:	beq	206dc <myhtml_parser_token_data_to_string@@Base+0xcc>
   206bc:	ldr	r1, [sp, #16]
   206c0:	ldr	r0, [r1, #4]
   206c4:	ldrb	r1, [r1, #61]	; 0x3d
   206c8:	stm	sp, {r0, r1}
   206cc:	mov	r0, sl
   206d0:	ldr	r1, [sp, #12]
   206d4:	bl	11ae8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   206d8:	b	206f8 <myhtml_parser_token_data_to_string@@Base+0xe8>
   206dc:	ldr	r0, [sp, #16]
   206e0:	mov	r1, r2
   206e4:	mov	r2, r3
   206e8:	ldrb	r5, [r0, #61]	; 0x3d
   206ec:	mov	r0, sl
   206f0:	mov	r3, r5
   206f4:	bl	11230 <myhtml_string_append_with_preprocessing@plt>
   206f8:	mov	r5, r0
   206fc:	ldr	r7, [r7, #20]
   20700:	cmp	r7, #0
   20704:	beq	207e4 <myhtml_parser_token_data_to_string@@Base+0x1d4>
   20708:	ldr	r0, [r7, #8]
   2070c:	sub	r6, r6, r9
   20710:	mov	r8, #0
   20714:	cmp	r6, r0
   20718:	bhi	2067c <myhtml_parser_token_data_to_string@@Base+0x6c>
   2071c:	ldr	r0, [r7]
   20720:	mov	r2, r6
   20724:	mov	r3, r5
   20728:	add	r1, r0, r8
   2072c:	mov	r0, sl
   20730:	bl	11968 <myhtml_string_before_append_any_preprocessing@plt>
   20734:	cmp	r6, #0
   20738:	beq	207e4 <myhtml_parser_token_data_to_string@@Base+0x1d4>
   2073c:	ldr	r1, [r7]
   20740:	sub	r3, r6, r0
   20744:	add	r0, r0, r8
   20748:	add	r2, r1, r0
   2074c:	ldr	r0, [r4, #200]	; 0xc8
   20750:	cmp	r0, #0
   20754:	beq	207c8 <myhtml_parser_token_data_to_string@@Base+0x1b8>
   20758:	ldr	r1, [sp, #16]
   2075c:	ldr	r0, [r1, #4]
   20760:	ldrb	r1, [r1, #61]	; 0x3d
   20764:	stm	sp, {r0, r1}
   20768:	mov	r0, sl
   2076c:	ldr	r1, [sp, #12]
   20770:	b	207a4 <myhtml_parser_token_data_to_string@@Base+0x194>
   20774:	ldr	r0, [r4, #200]	; 0xc8
   20778:	cmp	r0, #0
   2077c:	beq	207ac <myhtml_parser_token_data_to_string@@Base+0x19c>
   20780:	ldr	r3, [sp, #16]
   20784:	ldr	r0, [r7]
   20788:	ldr	r1, [r3, #4]
   2078c:	ldrb	r2, [r3, #61]	; 0x3d
   20790:	stm	sp, {r1, r2}
   20794:	add	r2, r0, r8
   20798:	add	r1, r3, #8
   2079c:	mov	r0, sl
   207a0:	mov	r3, r6
   207a4:	bl	11ae8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   207a8:	b	207e4 <myhtml_parser_token_data_to_string@@Base+0x1d4>
   207ac:	ldr	r0, [r7]
   207b0:	mov	r2, r6
   207b4:	add	r1, r0, r8
   207b8:	ldr	r0, [sp, #16]
   207bc:	ldrb	r3, [r0, #61]	; 0x3d
   207c0:	mov	r0, sl
   207c4:	b	207e0 <myhtml_parser_token_data_to_string@@Base+0x1d0>
   207c8:	ldr	r0, [sp, #16]
   207cc:	mov	r1, r2
   207d0:	mov	r2, r3
   207d4:	ldrb	r7, [r0, #61]	; 0x3d
   207d8:	mov	r0, sl
   207dc:	mov	r3, r7
   207e0:	bl	11230 <myhtml_string_append_with_preprocessing@plt>
   207e4:	ldr	r0, [sl, #8]
   207e8:	sub	sp, fp, #28
   207ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000207f0 <myhtml_parser_token_data_to_string_charef@@Base>:
   207f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   207f4:	add	fp, sp, #24
   207f8:	ldr	r0, [r0, #80]	; 0x50
   207fc:	mov	r4, r1
   20800:	mov	r1, r3
   20804:	mov	r5, r3
   20808:	mov	r8, r2
   2080c:	bl	111ac <mycore_incoming_buffer_find_by_position@plt>
   20810:	mov	r7, r0
   20814:	ldr	r1, [r0, #8]
   20818:	ldr	r0, [r0, #12]
   2081c:	ldr	r6, [fp, #8]
   20820:	sub	r0, r5, r0
   20824:	add	r2, r0, r6
   20828:	cmp	r2, r1
   2082c:	bls	2087c <myhtml_parser_token_data_to_string_charef@@Base+0x8c>
   20830:	cmp	r7, #0
   20834:	beq	20894 <myhtml_parser_token_data_to_string_charef@@Base+0xa4>
   20838:	cmp	r2, r1
   2083c:	bls	2087c <myhtml_parser_token_data_to_string_charef@@Base+0x8c>
   20840:	sub	r5, r1, r0
   20844:	ldr	r1, [r7]
   20848:	mov	r3, r5
   2084c:	add	r2, r1, r0
   20850:	mov	r0, r8
   20854:	mov	r1, r4
   20858:	bl	11614 <myhtml_data_process@plt>
   2085c:	ldr	r7, [r7, #20]
   20860:	cmp	r7, #0
   20864:	beq	20894 <myhtml_parser_token_data_to_string_charef@@Base+0xa4>
   20868:	ldr	r1, [r7, #8]
   2086c:	sub	r6, r6, r5
   20870:	mov	r0, #0
   20874:	cmp	r6, r1
   20878:	bhi	20840 <myhtml_parser_token_data_to_string_charef@@Base+0x50>
   2087c:	ldr	r1, [r7]
   20880:	mov	r3, r6
   20884:	add	r2, r1, r0
   20888:	mov	r0, r8
   2088c:	mov	r1, r4
   20890:	bl	11614 <myhtml_data_process@plt>
   20894:	mov	r0, r8
   20898:	mov	r1, r4
   2089c:	bl	11764 <myhtml_data_process_end@plt>
   208a0:	ldr	r0, [r4, #8]
   208a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000208a8 <myhtml_parser_worker@@Base>:
   208a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   208ac:	add	fp, sp, #28
   208b0:	sub	sp, sp, #68	; 0x44
   208b4:	ldm	r1, {r4, r8}
   208b8:	ldr	r1, [r4, #184]	; 0xb8
   208bc:	tst	r1, #3
   208c0:	ldrne	r1, [r4, #184]	; 0xb8
   208c4:	tstne	r1, #2
   208c8:	bne	20a8c <myhtml_parser_worker@@Base+0x1e4>
   208cc:	ldr	r2, [r4]
   208d0:	ldr	r1, [r4, #144]	; 0x90
   208d4:	ldr	r3, [r4, #220]	; 0xdc
   208d8:	ldr	r2, [r2, #4]
   208dc:	cmp	r2, #0
   208e0:	ldrne	r2, [r2, #12]
   208e4:	addne	r0, r2, r0
   208e8:	cmp	r3, #0
   208ec:	ldr	r9, [r1, r0, lsl #2]
   208f0:	beq	20908 <myhtml_parser_worker@@Base+0x60>
   208f4:	ldr	r2, [r4, #228]	; 0xe4
   208f8:	mov	r0, r4
   208fc:	mov	r1, r8
   20900:	blx	r3
   20904:	str	r0, [r4, #228]	; 0xe4
   20908:	ldr	r0, [r8]
   2090c:	sub	r0, r0, #1
   20910:	cmp	r0, #1
   20914:	bhi	20990 <myhtml_parser_worker@@Base+0xe8>
   20918:	ldr	r1, [r8, #28]
   2091c:	ldr	r0, [r4, #4]
   20920:	add	r7, r8, #4
   20924:	mov	r2, r7
   20928:	add	r3, r1, #1
   2092c:	mov	r1, r9
   20930:	bl	11524 <mycore_string_init@plt>
   20934:	mov	r0, #0
   20938:	str	r0, [r8, #40]	; 0x28
   2093c:	str	r0, [r8, #44]	; 0x2c
   20940:	add	r0, sp, #4
   20944:	bl	11470 <myhtml_data_process_entry_clean@plt>
   20948:	ldr	r0, [r4, #200]	; 0xc8
   2094c:	str	r0, [sp, #8]
   20950:	ldr	r0, [r8, #48]	; 0x30
   20954:	tst	r0, #512	; 0x200
   20958:	bne	20ab0 <myhtml_parser_worker@@Base+0x208>
   2095c:	ldr	r0, [r8, #48]	; 0x30
   20960:	tst	r0, #16
   20964:	ldreq	r0, [r8, #48]	; 0x30
   20968:	tsteq	r0, #256	; 0x100
   2096c:	bne	20ab8 <myhtml_parser_worker@@Base+0x210>
   20970:	ldr	r0, [r8, #28]
   20974:	ldr	r3, [r8, #24]
   20978:	add	r2, sp, #4
   2097c:	mov	r1, r7
   20980:	str	r0, [sp]
   20984:	mov	r0, r4
   20988:	bl	11890 <myhtml_parser_token_data_to_string@plt>
   2098c:	b	20aec <myhtml_parser_worker@@Base+0x244>
   20990:	ldr	r0, [r8, #40]	; 0x28
   20994:	cmp	r0, #0
   20998:	beq	20ad8 <myhtml_parser_worker@@Base+0x230>
   2099c:	add	r0, r8, #4
   209a0:	bl	11cbc <mycore_string_clean_all@plt>
   209a4:	ldr	r6, [r8, #40]	; 0x28
   209a8:	cmp	r6, #0
   209ac:	beq	20aec <myhtml_parser_worker@@Base+0x244>
   209b0:	add	r7, sp, #4
   209b4:	mov	sl, #1
   209b8:	ldr	r0, [r6, #52]	; 0x34
   209bc:	cmp	r0, #0
   209c0:	beq	20a10 <myhtml_parser_worker@@Base+0x168>
   209c4:	mov	r0, r7
   209c8:	bl	11470 <myhtml_data_process_entry_clean@plt>
   209cc:	ldr	r0, [r4, #200]	; 0xc8
   209d0:	add	r5, r6, #8
   209d4:	mov	r2, r5
   209d8:	str	r0, [sp, #8]
   209dc:	ldr	r1, [r6, #52]	; 0x34
   209e0:	ldr	r0, [r4, #4]
   209e4:	add	r3, r1, #1
   209e8:	mov	r1, r9
   209ec:	bl	11524 <mycore_string_init@plt>
   209f0:	ldr	r0, [r6, #52]	; 0x34
   209f4:	ldr	r3, [r6, #48]	; 0x30
   209f8:	mov	r1, r5
   209fc:	mov	r2, r7
   20a00:	str	r0, [sp]
   20a04:	mov	r0, r4
   20a08:	bl	11c5c <myhtml_parser_token_data_to_string_lowercase@plt>
   20a0c:	b	20a18 <myhtml_parser_worker@@Base+0x170>
   20a10:	add	r0, r6, #8
   20a14:	bl	11cbc <mycore_string_clean_all@plt>
   20a18:	ldr	r0, [r6, #60]	; 0x3c
   20a1c:	cmp	r0, #0
   20a20:	beq	20a74 <myhtml_parser_worker@@Base+0x1cc>
   20a24:	mov	r0, r7
   20a28:	bl	11470 <myhtml_data_process_entry_clean@plt>
   20a2c:	ldr	r0, [r4, #200]	; 0xc8
   20a30:	strb	sl, [sp, #64]	; 0x40
   20a34:	add	r5, r6, #28
   20a38:	mov	r2, r5
   20a3c:	str	r0, [sp, #8]
   20a40:	ldr	r1, [r6, #60]	; 0x3c
   20a44:	ldr	r0, [r4, #4]
   20a48:	add	r3, r1, #1
   20a4c:	mov	r1, r9
   20a50:	bl	11524 <mycore_string_init@plt>
   20a54:	ldr	r0, [r6, #60]	; 0x3c
   20a58:	ldr	r3, [r6, #56]	; 0x38
   20a5c:	mov	r1, r5
   20a60:	mov	r2, r7
   20a64:	str	r0, [sp]
   20a68:	mov	r0, r4
   20a6c:	bl	11398 <myhtml_parser_token_data_to_string_charef@plt>
   20a70:	b	20a7c <myhtml_parser_worker@@Base+0x1d4>
   20a74:	add	r0, r6, #28
   20a78:	bl	11cbc <mycore_string_clean_all@plt>
   20a7c:	ldr	r6, [r6]
   20a80:	cmp	r6, #0
   20a84:	bne	209b8 <myhtml_parser_worker@@Base+0x110>
   20a88:	b	20aec <myhtml_parser_worker@@Base+0x244>
   20a8c:	ldr	r3, [r4, #220]	; 0xdc
   20a90:	cmp	r3, #0
   20a94:	beq	20aec <myhtml_parser_worker@@Base+0x244>
   20a98:	ldr	r2, [r4, #228]	; 0xe4
   20a9c:	mov	r0, r4
   20aa0:	mov	r1, r8
   20aa4:	blx	r3
   20aa8:	str	r0, [r4, #228]	; 0xe4
   20aac:	b	20aec <myhtml_parser_worker@@Base+0x244>
   20ab0:	mov	r0, #1
   20ab4:	strb	r0, [sp, #65]	; 0x41
   20ab8:	ldr	r0, [r8, #28]
   20abc:	ldr	r3, [r8, #24]
   20ac0:	add	r2, sp, #4
   20ac4:	mov	r1, r7
   20ac8:	str	r0, [sp]
   20acc:	mov	r0, r4
   20ad0:	bl	11398 <myhtml_parser_token_data_to_string_charef@plt>
   20ad4:	b	20aec <myhtml_parser_worker@@Base+0x244>
   20ad8:	mov	r0, #0
   20adc:	str	r0, [r8, #40]	; 0x28
   20ae0:	str	r0, [r8, #44]	; 0x2c
   20ae4:	add	r0, r8, #4
   20ae8:	bl	11cbc <mycore_string_clean_all@plt>
   20aec:	ldr	r0, [r8, #48]	; 0x30
   20af0:	orr	r0, r0, #4
   20af4:	str	r0, [r8, #48]	; 0x30
   20af8:	ldr	r3, [r4, #224]	; 0xe0
   20afc:	cmp	r3, #0
   20b00:	beq	20b18 <myhtml_parser_worker@@Base+0x270>
   20b04:	ldr	r2, [r4, #232]	; 0xe8
   20b08:	mov	r0, r4
   20b0c:	mov	r1, r8
   20b10:	blx	r3
   20b14:	str	r0, [r4, #232]	; 0xe8
   20b18:	sub	sp, fp, #28
   20b1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00020b20 <myhtml_parser_worker_stream@@Base>:
   20b20:	push	{r4, sl, fp, lr}
   20b24:	add	fp, sp, #8
   20b28:	mov	r4, r1
   20b2c:	bl	10f00 <myhtml_parser_worker@plt>
   20b30:	ldr	r0, [r4]
   20b34:	ldr	r1, [r0, #184]	; 0xb8
   20b38:	tst	r1, #1
   20b3c:	beq	20b48 <myhtml_parser_worker_stream@@Base+0x28>
   20b40:	pop	{r4, sl, fp, pc}
   20b44:	ldr	r0, [r4]
   20b48:	ldr	r1, [r4, #4]
   20b4c:	bl	10fcc <myhtml_rules_tree_dispatcher@plt>
   20b50:	cmp	r0, #0
   20b54:	popeq	{r4, sl, fp, pc}
   20b58:	b	20b44 <myhtml_parser_worker_stream@@Base+0x24>

00020b5c <myhtml_insertion_fix_emit_for_text_begin_ws@@Base>:
   20b5c:	push	{r4, sl, fp, lr}
   20b60:	add	fp, sp, #8
   20b64:	mov	r4, r1
   20b68:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   20b6c:	add	r0, r4, #4
   20b70:	pop	{r4, sl, fp, lr}
   20b74:	b	11434 <mycore_string_crop_whitespace_from_begin@plt>

00020b78 <myhtml_insertion_fix_split_for_text_begin_ws@@Base>:
   20b78:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   20b7c:	add	fp, sp, #24
   20b80:	mov	r7, r0
   20b84:	ldr	r0, [r0, #8]
   20b88:	mov	r4, r1
   20b8c:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   20b90:	add	r0, r4, #4
   20b94:	bl	11ad0 <mycore_string_whitespace_from_begin@plt>
   20b98:	mov	r6, #0
   20b9c:	cmp	r0, #0
   20ba0:	beq	20c14 <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x9c>
   20ba4:	mov	r5, r0
   20ba8:	ldr	r0, [r7, #8]
   20bac:	ldr	r1, [r7, #40]	; 0x28
   20bb0:	bl	11800 <myhtml_token_node_create@plt>
   20bb4:	cmp	r0, #0
   20bb8:	beq	20c14 <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x9c>
   20bbc:	mov	r8, r0
   20bc0:	ldr	r0, [r7, #4]
   20bc4:	ldr	r1, [r7, #52]	; 0x34
   20bc8:	add	r3, r5, #2
   20bcc:	add	r6, r8, #4
   20bd0:	mov	r2, r6
   20bd4:	bl	11524 <mycore_string_init@plt>
   20bd8:	ldr	r1, [r4, #4]
   20bdc:	mov	r0, r6
   20be0:	mov	r2, r5
   20be4:	bl	11710 <mycore_string_append@plt>
   20be8:	ldr	r0, [r8, #48]	; 0x30
   20bec:	mov	r1, r5
   20bf0:	orr	r0, r0, #4
   20bf4:	str	r0, [r8, #48]	; 0x30
   20bf8:	ldr	r0, [r4, #4]
   20bfc:	bl	11998 <mchar_async_crop_first_chars_without_cache@plt>
   20c00:	str	r0, [r4, #4]
   20c04:	mov	r6, r8
   20c08:	ldr	r0, [r4, #12]
   20c0c:	sub	r0, r0, r5
   20c10:	str	r0, [r4, #12]
   20c14:	mov	r0, r6
   20c18:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00020c1c <myhtml_insertion_fix_for_null_char_drop_all@@Base>:
   20c1c:	push	{r4, r5, r6, r7, fp, lr}
   20c20:	add	fp, sp, #16
   20c24:	ldr	r0, [r0, #8]
   20c28:	mov	r4, r1
   20c2c:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   20c30:	ldr	r5, [r4, #12]
   20c34:	cmp	r5, #0
   20c38:	popeq	{r4, r5, r6, r7, fp, pc}
   20c3c:	mov	r0, #0
   20c40:	mov	r6, #0
   20c44:	ldr	r3, [r4, #4]
   20c48:	ldrb	r1, [r3, r0]
   20c4c:	cmp	r1, #0
   20c50:	bne	20cd4 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xb8>
   20c54:	cmp	r0, r5
   20c58:	mov	r2, r0
   20c5c:	bcs	20c80 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x64>
   20c60:	add	r1, r0, #1
   20c64:	mov	r2, r1
   20c68:	cmp	r1, r5
   20c6c:	bcs	20c80 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x64>
   20c70:	ldrb	r7, [r3, r2]
   20c74:	add	r1, r2, #1
   20c78:	cmp	r7, #0
   20c7c:	beq	20c64 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x48>
   20c80:	ldr	r7, [r4, #12]
   20c84:	sub	r1, r0, r2
   20c88:	cmp	r2, r5
   20c8c:	add	r1, r1, r7
   20c90:	mov	r7, r2
   20c94:	str	r1, [r4, #12]
   20c98:	bcs	20cb8 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x9c>
   20c9c:	mov	r7, r2
   20ca0:	ldrb	r1, [r3, r7]
   20ca4:	cmp	r1, #0
   20ca8:	beq	20cb8 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x9c>
   20cac:	add	r7, r7, #1
   20cb0:	cmp	r7, r5
   20cb4:	bcc	20ca0 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x84>
   20cb8:	sub	r0, r0, r6
   20cbc:	add	r1, r3, r2
   20cc0:	sub	r2, r7, r2
   20cc4:	add	r0, r3, r0
   20cc8:	bl	10fb4 <memmove@plt>
   20ccc:	add	r6, r6, #1
   20cd0:	sub	r0, r7, #1
   20cd4:	add	r0, r0, #1
   20cd8:	cmp	r0, r5
   20cdc:	bcc	20c44 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x28>
   20ce0:	pop	{r4, r5, r6, r7, fp, pc}

00020ce4 <myhtml_insertion_mode_initial@@Base>:
   20ce4:	push	{r4, r5, r6, sl, fp, lr}
   20ce8:	add	fp, sp, #16
   20cec:	mov	r4, r0
   20cf0:	ldr	r0, [r1]
   20cf4:	mov	r5, r1
   20cf8:	cmp	r0, #3
   20cfc:	beq	20d44 <myhtml_insertion_mode_initial@@Base+0x60>
   20d00:	cmp	r0, #2
   20d04:	beq	20db4 <myhtml_insertion_mode_initial@@Base+0xd0>
   20d08:	cmp	r0, #1
   20d0c:	bne	20dcc <myhtml_insertion_mode_initial@@Base+0xe8>
   20d10:	ldr	r1, [r5, #48]	; 0x30
   20d14:	mov	r0, #0
   20d18:	tst	r1, #8
   20d1c:	popne	{r4, r5, r6, sl, fp, pc}
   20d20:	ldr	r0, [r4, #8]
   20d24:	mov	r1, r5
   20d28:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   20d2c:	add	r0, r5, #4
   20d30:	bl	11434 <mycore_string_crop_whitespace_from_begin@plt>
   20d34:	mov	r0, #1
   20d38:	str	r0, [r4, #176]	; 0xb0
   20d3c:	str	r0, [r4, #168]	; 0xa8
   20d40:	pop	{r4, r5, r6, sl, fp, pc}
   20d44:	ldr	r0, [r4, #8]
   20d48:	mov	r1, r5
   20d4c:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   20d50:	ldr	r0, [r4, #8]
   20d54:	add	r6, r4, #108	; 0x6c
   20d58:	mov	r1, r5
   20d5c:	mov	r2, r6
   20d60:	bl	10df8 <myhtml_token_release_and_check_doctype_attributes@plt>
   20d64:	ldr	r0, [r4, #184]	; 0xb8
   20d68:	tst	r0, #8
   20d6c:	bne	20d7c <myhtml_insertion_mode_initial@@Base+0x98>
   20d70:	mov	r0, r4
   20d74:	mov	r1, r5
   20d78:	bl	11af4 <myhtml_tree_node_insert_doctype@plt>
   20d7c:	ldrb	r0, [r6]
   20d80:	cmp	r0, #0
   20d84:	bne	20da4 <myhtml_insertion_mode_initial@@Base+0xc0>
   20d88:	ldr	r0, [r4, #116]	; 0x74
   20d8c:	cmp	r0, #0
   20d90:	ldrne	r0, [r4, #120]	; 0x78
   20d94:	cmpne	r0, #0
   20d98:	bne	20da4 <myhtml_insertion_mode_initial@@Base+0xc0>
   20d9c:	mov	r0, #1
   20da0:	str	r0, [r4, #176]	; 0xb0
   20da4:	mov	r0, #1
   20da8:	str	r0, [r4, #168]	; 0xa8
   20dac:	mov	r0, #0
   20db0:	pop	{r4, r5, r6, sl, fp, pc}
   20db4:	ldr	r2, [r4, #84]	; 0x54
   20db8:	mov	r0, r4
   20dbc:	mov	r1, r5
   20dc0:	bl	11284 <myhtml_tree_node_insert_comment@plt>
   20dc4:	mov	r0, #0
   20dc8:	pop	{r4, r5, r6, sl, fp, pc}
   20dcc:	mov	r0, #1
   20dd0:	str	r0, [r4, #168]	; 0xa8
   20dd4:	str	r0, [r4, #176]	; 0xb0
   20dd8:	pop	{r4, r5, r6, sl, fp, pc}

00020ddc <myhtml_insertion_mode_before_html@@Base>:
   20ddc:	push	{r4, r5, r6, sl, fp, lr}
   20de0:	add	fp, sp, #16
   20de4:	mov	r4, r0
   20de8:	mov	r6, r1
   20dec:	ldr	r0, [r1]
   20df0:	ldr	r1, [r1, #48]	; 0x30
   20df4:	tst	r1, #1
   20df8:	bne	20e30 <myhtml_insertion_mode_before_html@@Base+0x54>
   20dfc:	mov	r5, #0
   20e00:	cmp	r0, #2
   20e04:	bgt	20e54 <myhtml_insertion_mode_before_html@@Base+0x78>
   20e08:	cmp	r0, #1
   20e0c:	beq	20e70 <myhtml_insertion_mode_before_html@@Base+0x94>
   20e10:	cmp	r0, #2
   20e14:	bne	20e90 <myhtml_insertion_mode_before_html@@Base+0xb4>
   20e18:	ldr	r2, [r4, #84]	; 0x54
   20e1c:	mov	r0, r4
   20e20:	mov	r1, r6
   20e24:	bl	11284 <myhtml_tree_node_insert_comment@plt>
   20e28:	mov	r0, r5
   20e2c:	pop	{r4, r5, r6, sl, fp, pc}
   20e30:	sub	r1, r0, #23
   20e34:	cmp	r1, #2
   20e38:	bcc	20e90 <myhtml_insertion_mode_before_html@@Base+0xb4>
   20e3c:	cmp	r0, #65	; 0x41
   20e40:	beq	20e90 <myhtml_insertion_mode_before_html@@Base+0xb4>
   20e44:	mov	r5, #0
   20e48:	cmp	r0, #61	; 0x3d
   20e4c:	beq	20e90 <myhtml_insertion_mode_before_html@@Base+0xb4>
   20e50:	b	20eac <myhtml_insertion_mode_before_html@@Base+0xd0>
   20e54:	cmp	r0, #3
   20e58:	beq	20eac <myhtml_insertion_mode_before_html@@Base+0xd0>
   20e5c:	cmp	r0, #65	; 0x41
   20e60:	bne	20e90 <myhtml_insertion_mode_before_html@@Base+0xb4>
   20e64:	mov	r0, r4
   20e68:	mov	r1, r6
   20e6c:	b	20e9c <myhtml_insertion_mode_before_html@@Base+0xc0>
   20e70:	ldr	r0, [r6, #48]	; 0x30
   20e74:	tst	r0, #8
   20e78:	bne	20eac <myhtml_insertion_mode_before_html@@Base+0xd0>
   20e7c:	ldr	r0, [r4, #8]
   20e80:	mov	r1, r6
   20e84:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   20e88:	add	r0, r6, #4
   20e8c:	bl	11434 <mycore_string_crop_whitespace_from_begin@plt>
   20e90:	mov	r5, #1
   20e94:	mov	r0, r4
   20e98:	mov	r1, #0
   20e9c:	mov	r2, #1
   20ea0:	bl	10dd4 <myhtml_tree_node_insert_root@plt>
   20ea4:	mov	r0, #2
   20ea8:	str	r0, [r4, #168]	; 0xa8
   20eac:	mov	r0, r5
   20eb0:	pop	{r4, r5, r6, sl, fp, pc}

00020eb4 <myhtml_insertion_mode_before_head@@Base>:
   20eb4:	push	{r4, r5, r6, sl, fp, lr}
   20eb8:	add	fp, sp, #16
   20ebc:	mov	r4, r0
   20ec0:	mov	r6, r1
   20ec4:	ldr	r0, [r1]
   20ec8:	ldr	r1, [r1, #48]	; 0x30
   20ecc:	tst	r1, #1
   20ed0:	bne	20f08 <myhtml_insertion_mode_before_head@@Base+0x54>
   20ed4:	mov	r5, #0
   20ed8:	cmp	r0, #2
   20edc:	ble	20f2c <myhtml_insertion_mode_before_head@@Base+0x78>
   20ee0:	cmp	r0, #3
   20ee4:	beq	20fa8 <myhtml_insertion_mode_before_head@@Base+0xf4>
   20ee8:	cmp	r0, #61	; 0x3d
   20eec:	beq	20f58 <myhtml_insertion_mode_before_head@@Base+0xa4>
   20ef0:	cmp	r0, #65	; 0x41
   20ef4:	bne	20f88 <myhtml_insertion_mode_before_head@@Base+0xd4>
   20ef8:	mov	r0, r4
   20efc:	mov	r1, r6
   20f00:	pop	{r4, r5, r6, sl, fp, lr}
   20f04:	b	20fb0 <myhtml_insertion_mode_in_body@@Base>
   20f08:	sub	r1, r0, #23
   20f0c:	cmp	r1, #2
   20f10:	bcc	20f88 <myhtml_insertion_mode_before_head@@Base+0xd4>
   20f14:	cmp	r0, #65	; 0x41
   20f18:	beq	20f88 <myhtml_insertion_mode_before_head@@Base+0xd4>
   20f1c:	mov	r5, #0
   20f20:	cmp	r0, #61	; 0x3d
   20f24:	beq	20f88 <myhtml_insertion_mode_before_head@@Base+0xd4>
   20f28:	b	20fa8 <myhtml_insertion_mode_before_head@@Base+0xf4>
   20f2c:	cmp	r0, #1
   20f30:	beq	20f68 <myhtml_insertion_mode_before_head@@Base+0xb4>
   20f34:	cmp	r0, #2
   20f38:	bne	20f88 <myhtml_insertion_mode_before_head@@Base+0xd4>
   20f3c:	mov	r0, r4
   20f40:	mov	r1, r6
   20f44:	mov	r2, #0
   20f48:	mov	r5, #0
   20f4c:	bl	11284 <myhtml_tree_node_insert_comment@plt>
   20f50:	mov	r0, r5
   20f54:	pop	{r4, r5, r6, sl, fp, pc}
   20f58:	mov	r0, r4
   20f5c:	mov	r1, r6
   20f60:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   20f64:	b	20f9c <myhtml_insertion_mode_before_head@@Base+0xe8>
   20f68:	ldr	r0, [r6, #48]	; 0x30
   20f6c:	tst	r0, #8
   20f70:	bne	20fa8 <myhtml_insertion_mode_before_head@@Base+0xf4>
   20f74:	ldr	r0, [r4, #8]
   20f78:	mov	r1, r6
   20f7c:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   20f80:	add	r0, r6, #4
   20f84:	bl	11434 <mycore_string_crop_whitespace_from_begin@plt>
   20f88:	mov	r0, r4
   20f8c:	mov	r1, #61	; 0x3d
   20f90:	mov	r2, #1
   20f94:	mov	r5, #1
   20f98:	bl	117a0 <myhtml_tree_node_insert@plt>
   20f9c:	str	r0, [r4, #92]	; 0x5c
   20fa0:	mov	r0, #3
   20fa4:	str	r0, [r4, #168]	; 0xa8
   20fa8:	mov	r0, r5
   20fac:	pop	{r4, r5, r6, sl, fp, pc}

00020fb0 <myhtml_insertion_mode_in_body@@Base>:
   20fb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20fb4:	add	fp, sp, #28
   20fb8:	sub	sp, sp, #12
   20fbc:	mov	r5, r0
   20fc0:	ldr	r2, [r1]
   20fc4:	ldr	r0, [r1, #48]	; 0x30
   20fc8:	mov	r6, r1
   20fcc:	tst	r0, #1
   20fd0:	bne	21408 <myhtml_insertion_mode_in_body@@Base+0x458>
   20fd4:	sub	r0, r2, #1
   20fd8:	mov	r8, #0
   20fdc:	cmp	r0, #250	; 0xfa
   20fe0:	bhi	222dc <myhtml_insertion_mode_in_body@@Base+0x132c>
   20fe4:	add	r1, pc, #4
   20fe8:	ldr	r0, [r1, r0, lsl #2]
   20fec:	add	pc, r1, r0
   20ff0:			; <UNDEFINED> instruction: 0x00000cb8
   20ff4:			; <UNDEFINED> instruction: 0x00000db4
   20ff8:	andeq	r1, r0, r0, lsl #6
   20ffc:	andeq	r0, r0, ip, asr #27
   21000:	andeq	r1, r0, ip, ror #5
   21004:	andeq	r1, r0, ip, ror #5
   21008:	andeq	r0, r0, ip, ror #7
   2100c:	andeq	r1, r0, ip, ror #5
   21010:	andeq	r0, r0, r0, lsl r9
   21014:	andeq	r0, r0, ip, lsr r7
   21018:	andeq	r0, r0, ip, ror #7
   2101c:	andeq	r0, r0, ip, ror #7
   21020:	andeq	r1, r0, ip, ror #5
   21024:			; <UNDEFINED> instruction: 0x000012bc
   21028:			; <UNDEFINED> instruction: 0x000006bc
   2102c:			; <UNDEFINED> instruction: 0x000006bc
   21030:	andeq	r1, r0, ip, ror #5
   21034:	andeq	r1, r0, ip, ror #5
   21038:			; <UNDEFINED> instruction: 0x000006bc
   2103c:			; <UNDEFINED> instruction: 0x000012bc
   21040:	andeq	r1, r0, ip, ror #5
   21044:	andeq	r0, r0, ip, ror #7
   21048:	andeq	r0, r0, r0, lsr lr
   2104c:	andeq	r0, r0, ip, lsr r7
   21050:	andeq	r0, r0, ip, lsr #29
   21054:	andeq	r1, r0, ip, ror #5
   21058:	andeq	r1, r0, r0, lsl #6
   2105c:	andeq	r0, r0, ip, ror #7
   21060:	andeq	r1, r0, ip, ror #5
   21064:			; <UNDEFINED> instruction: 0x000012bc
   21068:	andeq	r1, r0, r0, lsl #6
   2106c:	andeq	r1, r0, r0, lsl #6
   21070:	andeq	r1, r0, ip, ror #5
   21074:	andeq	r1, r0, ip, ror #5
   21078:	andeq	r1, r0, ip, ror #5
   2107c:	andeq	r0, r0, r8, asr #18
   21080:	andeq	r1, r0, ip, ror #5
   21084:	andeq	r0, r0, ip, ror #7
   21088:	andeq	r1, r0, ip, ror #5
   2108c:	andeq	r0, r0, ip, ror #7
   21090:	andeq	r0, r0, ip, ror #7
   21094:	andeq	r0, r0, ip, ror #7
   21098:	andeq	r0, r0, ip, ror #7
   2109c:	andeq	r0, r0, r8, asr #18
   210a0:			; <UNDEFINED> instruction: 0x000012bc
   210a4:	andeq	r0, r0, ip, lsr r7
   210a8:	andeq	r0, r0, ip, ror #7
   210ac:	andeq	r0, r0, ip, ror #7
   210b0:	andeq	r0, r0, ip, ror #7
   210b4:			; <UNDEFINED> instruction: 0x000012bc
   210b8:	andeq	r0, r0, ip, ror #7
   210bc:	andeq	r0, r0, r4, lsl #30
   210c0:	andeq	r1, r0, r0, lsl #6
   210c4:	andeq	r0, r0, r4, ror pc
   210c8:	andeq	r0, r0, r8, asr #14
   210cc:	andeq	r0, r0, r8, asr #14
   210d0:	andeq	r0, r0, r8, asr #14
   210d4:	andeq	r0, r0, r8, asr #14
   210d8:	andeq	r0, r0, r8, asr #14
   210dc:	andeq	r0, r0, r8, asr #14
   210e0:	andeq	r1, r0, r0, lsl #6
   210e4:	andeq	r0, r0, ip, ror #7
   210e8:	andeq	r0, r0, ip, ror #7
   210ec:	ldrdeq	r0, [r0], -ip
   210f0:	andeq	r1, r0, r0, asr r0
   210f4:			; <UNDEFINED> instruction: 0x000012bc
   210f8:	muleq	r0, r0, r4
   210fc:	andeq	r1, r0, r4, asr #1
   21100:	andeq	r0, r0, ip, lsr r7
   21104:	ldrdeq	r1, [r0], -r4
   21108:	andeq	r1, r0, ip, ror #5
   2110c:	andeq	r1, r0, ip, ror #5
   21110:	andeq	r1, r0, ip, ror #5
   21114:	andeq	r0, r0, ip, lsr r7
   21118:	andeq	r1, r0, ip, ror #5
   2111c:	andeq	r1, r0, ip, ror #5
   21120:	andeq	r1, r0, r4, lsr r1
   21124:			; <UNDEFINED> instruction: 0x000006bc
   21128:	andeq	r0, r0, r0, asr #20
   2112c:	andeq	r0, r0, ip, ror #7
   21130:	andeq	r1, r0, ip, ror #5
   21134:	andeq	r1, r0, ip, ror #5
   21138:	andeq	r0, r0, r0, lsl r9
   2113c:	andeq	r1, r0, r8, lsl r2
   21140:	andeq	r1, r0, r4, ror #4
   21144:			; <UNDEFINED> instruction: 0x000006bc
   21148:	andeq	r1, r0, ip, ror #5
   2114c:	andeq	r1, r0, ip, ror #5
   21150:	andeq	r0, r0, ip, ror #7
   21154:	andeq	r1, r0, r8, lsl #5
   21158:	andeq	r1, r0, ip, lsl #6
   2115c:			; <UNDEFINED> instruction: 0x000006bc
   21160:	andeq	r1, r0, r0, ror #5
   21164:	andeq	r0, r0, r0, lsl r9
   21168:	andeq	r0, r0, ip, ror #7
   2116c:	andeq	r0, r0, r4, lsl #21
   21170:	andeq	r0, r0, r4, lsl #21
   21174:	andeq	r1, r0, ip, ror #5
   21178:	andeq	r0, r0, ip, ror #7
   2117c:	andeq	r0, r0, r8, lsr r9
   21180:	andeq	r1, r0, r8, lsl r3
   21184:	andeq	r0, r0, r0, asr #20
   21188:	andeq	r1, r0, ip, ror #5
   2118c:	andeq	r1, r0, ip, ror #5
   21190:	muleq	r0, r4, sl
   21194:	andeq	r0, r0, r0, asr #21
   21198:	andeq	r0, r0, r0, asr #21
   2119c:	muleq	r0, r4, sl
   211a0:	andeq	r1, r0, ip, ror #5
   211a4:			; <UNDEFINED> instruction: 0x000012bc
   211a8:	andeq	r1, r0, ip, ror #5
   211ac:			; <UNDEFINED> instruction: 0x000006bc
   211b0:	andeq	r0, r0, ip, ror #7
   211b4:	andeq	r1, r0, r8, asr r3
   211b8:			; <UNDEFINED> instruction: 0x000012bc
   211bc:	andeq	r0, r0, r8, lsr r9
   211c0:	andeq	r1, r0, ip, ror #5
   211c4:			; <UNDEFINED> instruction: 0x000012bc
   211c8:			; <UNDEFINED> instruction: 0x000012bc
   211cc:			; <UNDEFINED> instruction: 0x000006bc
   211d0:	andeq	r1, r0, ip, ror #5
   211d4:	andeq	r0, r0, ip, ror #7
   211d8:	andeq	r1, r0, ip, ror #5
   211dc:	andeq	r1, r0, r8, lsr #7
   211e0:	andeq	r1, r0, r0, ror #7
   211e4:	andeq	r1, r0, r0, lsl #6
   211e8:	andeq	r1, r0, r0, lsl #6
   211ec:			; <UNDEFINED> instruction: 0x000006bc
   211f0:	andeq	r1, r0, ip, lsr #8
   211f4:	andeq	r1, r0, r0, lsl #6
   211f8:	andeq	r1, r0, r0, lsl #6
   211fc:	andeq	r1, r0, r0, lsl #6
   21200:	andeq	r1, r0, ip, ror #5
   21204:			; <UNDEFINED> instruction: 0x000006bc
   21208:	andeq	r1, r0, r0, lsl #6
   2120c:	andeq	r0, r0, r8, lsr r9
   21210:			; <UNDEFINED> instruction: 0x000012bc
   21214:			; <UNDEFINED> instruction: 0x000012bc
   21218:	andeq	r0, r0, ip, ror #7
   2121c:	andeq	r1, r0, ip, ror #5
   21220:	andeq	r1, r0, ip, ror #5
   21224:	andeq	r0, r0, ip, lsr r7
   21228:	andeq	r1, r0, r0, ror #8
   2122c:	andeq	r1, r0, ip, ror #5
   21230:	andeq	r1, r0, ip, ror #5
   21234:	andeq	r1, r0, ip, ror #5
   21238:	andeq	r1, r0, ip, ror #5
   2123c:	andeq	r1, r0, ip, ror #5
   21240:	andeq	r1, r0, ip, ror #5
   21244:	andeq	r1, r0, ip, ror #5
   21248:	andeq	r1, r0, ip, ror #5
   2124c:	andeq	r1, r0, ip, ror #5
   21250:	andeq	r1, r0, ip, ror #5
   21254:	andeq	r1, r0, ip, ror #5
   21258:	andeq	r1, r0, ip, ror #5
   2125c:	andeq	r1, r0, ip, ror #5
   21260:	andeq	r1, r0, ip, ror #5
   21264:	andeq	r1, r0, ip, ror #5
   21268:	andeq	r1, r0, ip, ror #5
   2126c:	andeq	r1, r0, ip, ror #5
   21270:	andeq	r1, r0, ip, ror #5
   21274:	andeq	r1, r0, ip, ror #5
   21278:	andeq	r1, r0, ip, ror #5
   2127c:	andeq	r1, r0, ip, ror #5
   21280:	andeq	r1, r0, ip, ror #5
   21284:	andeq	r1, r0, ip, ror #5
   21288:	andeq	r1, r0, ip, ror #5
   2128c:	andeq	r1, r0, ip, ror #5
   21290:	andeq	r1, r0, ip, ror #5
   21294:	andeq	r1, r0, ip, ror #5
   21298:	andeq	r1, r0, ip, ror #5
   2129c:	andeq	r1, r0, ip, ror #5
   212a0:	andeq	r1, r0, ip, ror #5
   212a4:	andeq	r1, r0, ip, ror #5
   212a8:	andeq	r1, r0, ip, ror #5
   212ac:	andeq	r1, r0, ip, ror #5
   212b0:	andeq	r1, r0, ip, ror #5
   212b4:	andeq	r1, r0, ip, ror #5
   212b8:	andeq	r1, r0, ip, ror #5
   212bc:	andeq	r1, r0, ip, ror #5
   212c0:	andeq	r1, r0, ip, ror #5
   212c4:	andeq	r1, r0, ip, ror #5
   212c8:	andeq	r1, r0, ip, ror #5
   212cc:	andeq	r1, r0, ip, ror #5
   212d0:	andeq	r1, r0, ip, ror #5
   212d4:	andeq	r1, r0, ip, ror #5
   212d8:	andeq	r1, r0, ip, ror #5
   212dc:	andeq	r1, r0, ip, ror #5
   212e0:	andeq	r1, r0, ip, ror #5
   212e4:	andeq	r1, r0, ip, ror #5
   212e8:	andeq	r1, r0, ip, ror #5
   212ec:	andeq	r1, r0, ip, ror #5
   212f0:	andeq	r1, r0, ip, ror #5
   212f4:	andeq	r1, r0, ip, ror #5
   212f8:	andeq	r1, r0, ip, ror #5
   212fc:	andeq	r1, r0, ip, ror #5
   21300:	andeq	r1, r0, ip, ror #5
   21304:	andeq	r1, r0, ip, ror #5
   21308:	andeq	r1, r0, ip, ror #5
   2130c:	andeq	r1, r0, ip, ror #5
   21310:	andeq	r1, r0, ip, ror #5
   21314:	andeq	r1, r0, ip, ror #5
   21318:	andeq	r1, r0, ip, ror #5
   2131c:	andeq	r1, r0, ip, ror #5
   21320:	andeq	r1, r0, ip, ror #5
   21324:	andeq	r1, r0, ip, ror #5
   21328:	andeq	r1, r0, ip, ror #5
   2132c:	andeq	r1, r0, ip, ror #5
   21330:	andeq	r1, r0, ip, ror #5
   21334:	andeq	r1, r0, ip, ror #5
   21338:	andeq	r1, r0, ip, ror #5
   2133c:	andeq	r1, r0, ip, ror #5
   21340:	andeq	r1, r0, ip, ror #5
   21344:	andeq	r1, r0, ip, ror #5
   21348:	andeq	r1, r0, ip, ror #5
   2134c:	andeq	r1, r0, ip, ror #5
   21350:	andeq	r1, r0, ip, ror #5
   21354:			; <UNDEFINED> instruction: 0x000014bc
   21358:	andeq	r1, r0, ip, ror #5
   2135c:	andeq	r1, r0, ip, ror #5
   21360:	andeq	r1, r0, ip, ror #5
   21364:	andeq	r1, r0, ip, ror #5
   21368:	andeq	r1, r0, ip, ror #5
   2136c:	andeq	r1, r0, ip, ror #5
   21370:	andeq	r1, r0, ip, ror #5
   21374:	andeq	r1, r0, ip, ror #5
   21378:	andeq	r1, r0, ip, ror #5
   2137c:	andeq	r1, r0, ip, ror #5
   21380:	andeq	r1, r0, ip, ror #5
   21384:	andeq	r1, r0, ip, ror #5
   21388:	andeq	r1, r0, ip, ror #5
   2138c:	andeq	r1, r0, ip, ror #5
   21390:	andeq	r1, r0, ip, ror #5
   21394:	andeq	r1, r0, ip, ror #5
   21398:	andeq	r1, r0, ip, ror #5
   2139c:	andeq	r1, r0, ip, ror #5
   213a0:	andeq	r1, r0, ip, ror #5
   213a4:	andeq	r1, r0, ip, ror #5
   213a8:	andeq	r1, r0, ip, ror #5
   213ac:	andeq	r1, r0, ip, ror #5
   213b0:	andeq	r1, r0, ip, ror #5
   213b4:	andeq	r1, r0, ip, ror #5
   213b8:	andeq	r1, r0, ip, ror #5
   213bc:	andeq	r1, r0, ip, ror #5
   213c0:	andeq	r1, r0, ip, ror #5
   213c4:	andeq	r1, r0, ip, ror #5
   213c8:	andeq	r1, r0, ip, ror #5
   213cc:	andeq	r1, r0, ip, ror #5
   213d0:	andeq	r1, r0, ip, ror #5
   213d4:	andeq	r1, r0, ip, ror #5
   213d8:	andeq	r1, r0, ip, lsl #10
   213dc:	mov	r0, r5
   213e0:	mov	r1, #99	; 0x63
   213e4:	mov	r2, #1
   213e8:	mov	r3, #32
   213ec:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   213f0:	cmp	r0, #0
   213f4:	beq	222e4 <myhtml_insertion_mode_in_body@@Base+0x1334>
   213f8:	mov	r0, r5
   213fc:	mov	r1, r6
   21400:	bl	113c8 <myhtml_tree_tags_close_p@plt>
   21404:	b	222e4 <myhtml_insertion_mode_in_body@@Base+0x1334>
   21408:	sub	r0, r2, #4
   2140c:	cmp	r0, #135	; 0x87
   21410:	bhi	21ae8 <myhtml_insertion_mode_in_body@@Base+0xb38>
   21414:	add	r1, pc, #4
   21418:	ldr	r0, [r1, r0, lsl #2]
   2141c:	add	pc, r1, r0
   21420:	andeq	r0, r0, r8, ror r2
   21424:	andeq	r0, r0, r8, asr #13
   21428:	andeq	r0, r0, r8, asr #13
   2142c:	andeq	r0, r0, r0, lsr #4
   21430:	andeq	r0, r0, r8, asr #13
   21434:	andeq	r0, r0, r8, ror #6
   21438:	andeq	r0, r0, r8, asr #13
   2143c:	andeq	r0, r0, r0, lsr #4
   21440:	andeq	r0, r0, r0, lsr #4
   21444:	andeq	r0, r0, r8, asr #13
   21448:	andeq	r0, r0, r8, ror r2
   2144c:	andeq	r0, r0, r8, asr #13
   21450:	andeq	r0, r0, r8, asr #13
   21454:	andeq	r0, r0, r8, asr #13
   21458:	andeq	r0, r0, r8, asr #13
   2145c:	andeq	r0, r0, r8, asr #13
   21460:	andeq	r0, r0, r8, ror r2
   21464:	andeq	r0, r0, r8, asr #13
   21468:	andeq	r0, r0, r0, lsr #4
   2146c:	ldrdeq	r0, [r0], -r8
   21470:	andeq	r0, r0, ip, lsl r7
   21474:	andeq	r0, r0, r0, lsr #4
   21478:	andeq	r0, r0, r8, asr #13
   2147c:	andeq	r0, r0, r8, asr #13
   21480:	andeq	r0, r0, r0, lsr #4
   21484:	andeq	r0, r0, r8, asr #13
   21488:	andeq	r0, r0, r8, ror r2
   2148c:	andeq	r0, r0, r8, asr #13
   21490:	andeq	r0, r0, r8, asr #13
   21494:	andeq	r0, r0, r8, asr #13
   21498:	andeq	r0, r0, r8, asr #13
   2149c:	andeq	r0, r0, r8, asr #13
   214a0:	andeq	r0, r0, r8, asr #7
   214a4:	andeq	r0, r0, r8, asr #13
   214a8:	andeq	r0, r0, r0, lsr #4
   214ac:	andeq	r0, r0, r8, asr #13
   214b0:	andeq	r0, r0, r0, lsr #4
   214b4:	andeq	r0, r0, r0, lsr #4
   214b8:	andeq	r0, r0, r0, lsr #4
   214bc:	andeq	r0, r0, r0, lsr #4
   214c0:	andeq	r0, r0, r8, asr #7
   214c4:	andeq	r0, r0, r8, ror r2
   214c8:	andeq	r0, r0, r8, asr #13
   214cc:	andeq	r0, r0, r0, lsr #4
   214d0:	andeq	r0, r0, r0, lsr #4
   214d4:	andeq	r0, r0, r0, lsr #4
   214d8:	andeq	r0, r0, r8, ror r2
   214dc:	andeq	r0, r0, r0, lsr #4
   214e0:	andeq	r0, r0, r0, asr r7
   214e4:	andeq	r0, r0, r8, asr #13
   214e8:	andeq	r0, r0, r8, asr #13
   214ec:	andeq	r0, r0, r0, lsr #5
   214f0:	andeq	r0, r0, r0, lsr #5
   214f4:	andeq	r0, r0, r0, lsr #5
   214f8:	andeq	r0, r0, r0, lsr #5
   214fc:	andeq	r0, r0, r0, lsr #5
   21500:	andeq	r0, r0, r0, lsr #5
   21504:	andeq	r0, r0, r8, asr #13
   21508:	andeq	r0, r0, r0, lsr #4
   2150c:	andeq	r0, r0, r0, lsr #4
   21510:	andeq	r0, r0, r8, asr #13
   21514:			; <UNDEFINED> instruction: 0x000007bc
   21518:	andeq	r0, r0, r8, ror r2
   2151c:	andeq	r0, r0, r8, asr #13
   21520:	andeq	r0, r0, r8, asr #13
   21524:	andeq	r0, r0, r8, asr #13
   21528:	andeq	r0, r0, r8, asr #13
   2152c:	andeq	r0, r0, r8, asr #13
   21530:	andeq	r0, r0, r8, asr #13
   21534:	andeq	r0, r0, r8, asr #13
   21538:	andeq	r0, r0, r8, asr #13
   2153c:	andeq	r0, r0, r8, asr #13
   21540:	andeq	r0, r0, r8, asr #13
   21544:	andeq	r0, r0, r0, lsl #16
   21548:	andeq	r0, r0, r8, asr #13
   2154c:	andeq	r0, r0, r0, lsr #4
   21550:	andeq	r0, r0, r0, lsr #4
   21554:	andeq	r0, r0, r8, asr #13
   21558:	andeq	r0, r0, r8, asr #13
   2155c:	andeq	r0, r0, r8, ror #6
   21560:	andeq	r0, r0, r0, lsr #4
   21564:	andeq	r0, r0, r8, asr #13
   21568:	andeq	r0, r0, r8, asr #13
   2156c:	andeq	r0, r0, r8, asr #13
   21570:	andeq	r0, r0, r8, asr #13
   21574:	andeq	r0, r0, r0, lsr #4
   21578:	andeq	r0, r0, r8, ror r2
   2157c:	andeq	r0, r0, r8, asr #13
   21580:	andeq	r0, r0, r8, asr #13
   21584:	andeq	r0, r0, r8, asr #13
   21588:	andeq	r0, r0, r8, ror #6
   2158c:	andeq	r0, r0, r0, lsr #4
   21590:	andeq	r0, r0, r8, asr #13
   21594:	andeq	r0, r0, r8, asr #13
   21598:	andeq	r0, r0, r8, asr #13
   2159c:	andeq	r0, r0, ip, asr #16
   215a0:	andeq	r0, r0, r8, asr #13
   215a4:	andeq	r0, r0, r8, asr #13
   215a8:	andeq	r0, r0, r0, lsr #4
   215ac:	andeq	r0, r0, r8, asr #13
   215b0:	andeq	r0, r0, r8, asr #13
   215b4:	andeq	r0, r0, r8, asr #13
   215b8:	andeq	r0, r0, r8, asr #13
   215bc:	andeq	r0, r0, r8, asr #13
   215c0:	andeq	r0, r0, r8, asr #13
   215c4:	andeq	r0, r0, r8, asr #13
   215c8:	andeq	r0, r0, r8, ror r2
   215cc:	andeq	r0, r0, r8, asr #13
   215d0:	andeq	r0, r0, r8, asr #13
   215d4:	andeq	r0, r0, r0, lsr #4
   215d8:	andeq	r0, r0, r8, asr #13
   215dc:	andeq	r0, r0, r8, ror r2
   215e0:	andeq	r0, r0, r8, asr #13
   215e4:	andeq	r0, r0, r8, asr #13
   215e8:	andeq	r0, r0, r8, ror r2
   215ec:	andeq	r0, r0, r8, ror r2
   215f0:	andeq	r0, r0, r8, asr #13
   215f4:	andeq	r0, r0, r8, asr #13
   215f8:	andeq	r0, r0, r0, lsr #4
   215fc:	andeq	r0, r0, r8, asr #13
   21600:	andeq	r0, r0, r8, asr #13
   21604:	andeq	r0, r0, r8, asr #13
   21608:	andeq	r0, r0, r8, asr #13
   2160c:	andeq	r0, r0, r8, asr #13
   21610:	andeq	r0, r0, ip, lsl #5
   21614:	andeq	r0, r0, r8, asr #13
   21618:	andeq	r0, r0, r8, asr #13
   2161c:	andeq	r0, r0, r8, asr #13
   21620:	andeq	r0, r0, r8, asr #13
   21624:	andeq	r0, r0, r8, asr #13
   21628:	andeq	r0, r0, r8, asr #13
   2162c:	andeq	r0, r0, r8, asr #13
   21630:	andeq	r0, r0, r8, asr #13
   21634:	andeq	r0, r0, r8, ror r2
   21638:	andeq	r0, r0, r8, ror r2
   2163c:	andeq	r0, r0, r0, lsr #4
   21640:	mov	r1, r2
   21644:	mov	r0, r5
   21648:	mov	r2, #1
   2164c:	mov	r3, #8
   21650:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   21654:	mov	r8, #0
   21658:	cmp	r0, #0
   2165c:	beq	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   21660:	mov	r0, r5
   21664:	mov	r1, #0
   21668:	mov	r2, #0
   2166c:	bl	115c0 <myhtml_tree_generate_implied_end_tags@plt>
   21670:	mov	r0, r5
   21674:	bl	11530 <myhtml_tree_current_node@plt>
   21678:	ldr	r1, [r6]
   2167c:	bl	11884 <myhtml_is_html_node@plt>
   21680:	ldr	r1, [r6]
   21684:	mov	r0, r5
   21688:	mov	r2, #1
   2168c:	mov	r3, #0
   21690:	bl	1177c <myhtml_tree_open_elements_pop_until@plt>
   21694:	b	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   21698:	mov	r0, r5
   2169c:	mov	r1, r6
   216a0:	bl	116d4 <myhtml_tree_adoption_agency_algorithm@plt>
   216a4:	mov	r8, #0
   216a8:	b	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   216ac:	mov	r0, r5
   216b0:	mov	r1, r6
   216b4:	sub	sp, fp, #28
   216b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   216bc:	b	2263c <myhtml_insertion_mode_in_head@@Base>
   216c0:	ldr	r1, [r5, #128]	; 0x80
   216c4:	mov	r8, #0
   216c8:	ldr	r0, [r1, #4]
   216cc:	cmp	r0, #0
   216d0:	beq	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   216d4:	ldr	r4, [r1]
   216d8:	rsb	r7, r0, #1
   216dc:	ldr	r0, [r4, -r7, lsl #2]
   216e0:	ldr	r1, [r0, #4]
   216e4:	ldr	r0, [r5, #28]
   216e8:	bl	11818 <myhtml_tag_get_by_id@plt>
   216ec:	ldr	r1, [r4, -r7, lsl #2]
   216f0:	ldr	r2, [r1, #4]
   216f4:	ldr	r1, [r1, #8]
   216f8:	sub	r2, r2, #55	; 0x37
   216fc:	cmp	r2, #5
   21700:	bhi	2170c <myhtml_insertion_mode_in_body@@Base+0x75c>
   21704:	cmp	r1, #1
   21708:	beq	21830 <myhtml_insertion_mode_in_body@@Base+0x880>
   2170c:	cmp	r7, #0
   21710:	beq	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   21714:	add	r0, r0, r1, lsl #2
   21718:	add	r7, r7, #1
   2171c:	ldr	r0, [r0, #16]
   21720:	ands	r0, r0, #8
   21724:	beq	216dc <myhtml_insertion_mode_in_body@@Base+0x72c>
   21728:	b	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   2172c:	mov	r0, r5
   21730:	bl	114b8 <myhtml_tree_active_formatting_reconstruction@plt>
   21734:	b	22014 <myhtml_insertion_mode_in_body@@Base+0x1064>
   21738:	mov	r0, r5
   2173c:	mov	r1, #99	; 0x63
   21740:	mov	r2, #1
   21744:	mov	r3, #32
   21748:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   2174c:	cmp	r0, #0
   21750:	beq	21760 <myhtml_insertion_mode_in_body@@Base+0x7b0>
   21754:	mov	r0, r5
   21758:	mov	r1, r6
   2175c:	bl	113c8 <myhtml_tree_tags_close_p@plt>
   21760:	mov	r0, r5
   21764:	bl	11530 <myhtml_tree_current_node@plt>
   21768:	ldr	r1, [r0, #4]
   2176c:	sub	r1, r1, #55	; 0x37
   21770:	cmp	r1, #5
   21774:	bhi	222e4 <myhtml_insertion_mode_in_body@@Base+0x1334>
   21778:	ldr	r0, [r0, #8]
   2177c:	cmp	r0, #1
   21780:	beq	22248 <myhtml_insertion_mode_in_body@@Base+0x1298>
   21784:	b	222e4 <myhtml_insertion_mode_in_body@@Base+0x1334>
   21788:	mov	r1, r2
   2178c:	mov	r0, r5
   21790:	mov	r2, #1
   21794:	mov	r3, #8
   21798:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   2179c:	mov	r8, #0
   217a0:	cmp	r0, #0
   217a4:	beq	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   217a8:	mov	r0, r5
   217ac:	mov	r1, #0
   217b0:	mov	r2, #0
   217b4:	bl	115c0 <myhtml_tree_generate_implied_end_tags@plt>
   217b8:	mov	r0, r5
   217bc:	bl	11530 <myhtml_tree_current_node@plt>
   217c0:	ldr	r1, [r6]
   217c4:	bl	11884 <myhtml_is_html_node@plt>
   217c8:	ldr	r1, [r6]
   217cc:	mov	r0, r5
   217d0:	mov	r2, #1
   217d4:	mov	r3, #0
   217d8:	bl	1177c <myhtml_tree_open_elements_pop_until@plt>
   217dc:	mov	r0, r5
   217e0:	bl	11b18 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   217e4:	b	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   217e8:	mov	r1, r2
   217ec:	mov	r0, r5
   217f0:	mov	r2, #1
   217f4:	mov	r3, #8
   217f8:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   217fc:	cmp	r0, #0
   21800:	beq	216a4 <myhtml_insertion_mode_in_body@@Base+0x6f4>
   21804:	ldr	r1, [r6]
   21808:	mov	r0, r5
   2180c:	mov	r2, #1
   21810:	bl	115c0 <myhtml_tree_generate_implied_end_tags@plt>
   21814:	mov	r0, r5
   21818:	bl	11530 <myhtml_tree_current_node@plt>
   2181c:	ldr	r1, [r6]
   21820:	bl	11884 <myhtml_is_html_node@plt>
   21824:	ldr	r1, [r6]
   21828:	mov	r8, #0
   2182c:	b	21684 <myhtml_insertion_mode_in_body@@Base+0x6d4>
   21830:	mov	r0, r5
   21834:	mov	r1, #0
   21838:	mov	r2, #0
   2183c:	mov	r8, #0
   21840:	bl	115c0 <myhtml_tree_generate_implied_end_tags@plt>
   21844:	mov	r0, r5
   21848:	bl	11530 <myhtml_tree_current_node@plt>
   2184c:	ldr	r1, [r6]
   21850:	bl	11884 <myhtml_is_html_node@plt>
   21854:	ldr	r0, [r5, #128]	; 0x80
   21858:	ldr	r1, [r0, #4]
   2185c:	cmp	r1, #0
   21860:	beq	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   21864:	ldr	r1, [r0, #4]
   21868:	sub	r1, r1, #1
   2186c:	str	r1, [r0, #4]
   21870:	ldr	r1, [r0, #4]
   21874:	ldr	r1, [r4, r1, lsl #2]
   21878:	ldr	r1, [r1, #4]
   2187c:	cmp	r1, #55	; 0x37
   21880:	beq	218e8 <myhtml_insertion_mode_in_body@@Base+0x938>
   21884:	ldr	r1, [r0, #4]
   21888:	ldr	r1, [r4, r1, lsl #2]
   2188c:	ldr	r1, [r1, #4]
   21890:	cmp	r1, #56	; 0x38
   21894:	beq	218e8 <myhtml_insertion_mode_in_body@@Base+0x938>
   21898:	ldr	r1, [r0, #4]
   2189c:	ldr	r1, [r4, r1, lsl #2]
   218a0:	ldr	r1, [r1, #4]
   218a4:	cmp	r1, #57	; 0x39
   218a8:	beq	218e8 <myhtml_insertion_mode_in_body@@Base+0x938>
   218ac:	ldr	r1, [r0, #4]
   218b0:	ldr	r1, [r4, r1, lsl #2]
   218b4:	ldr	r1, [r1, #4]
   218b8:	cmp	r1, #58	; 0x3a
   218bc:	beq	218e8 <myhtml_insertion_mode_in_body@@Base+0x938>
   218c0:	ldr	r1, [r0, #4]
   218c4:	ldr	r1, [r4, r1, lsl #2]
   218c8:	ldr	r1, [r1, #4]
   218cc:	cmp	r1, #59	; 0x3b
   218d0:	beq	218e8 <myhtml_insertion_mode_in_body@@Base+0x938>
   218d4:	ldr	r1, [r0, #4]
   218d8:	ldr	r1, [r4, r1, lsl #2]
   218dc:	ldr	r1, [r1, #4]
   218e0:	cmp	r1, #60	; 0x3c
   218e4:	bne	21858 <myhtml_insertion_mode_in_body@@Base+0x8a8>
   218e8:	ldr	r1, [r0, #4]
   218ec:	ldr	r1, [r4, r1, lsl #2]
   218f0:	ldr	r1, [r1, #8]
   218f4:	cmp	r1, #1
   218f8:	bne	21858 <myhtml_insertion_mode_in_body@@Base+0x8a8>
   218fc:	b	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   21900:	mov	r0, r5
   21904:	bl	114b8 <myhtml_tree_active_formatting_reconstruction@plt>
   21908:	mov	r0, r5
   2190c:	mov	r1, r6
   21910:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   21914:	ldr	r0, [r5]
   21918:	ldr	r1, [r0, #36]	; 0x24
   2191c:	mov	r0, r5
   21920:	bl	11188 <myhtml_tree_active_formatting_append@plt>
   21924:	b	22028 <myhtml_insertion_mode_in_body@@Base+0x1078>
   21928:	mov	r0, r5
   2192c:	mov	r1, r6
   21930:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   21934:	b	224f0 <myhtml_insertion_mode_in_body@@Base+0x1540>
   21938:	ldr	r0, [r5, #128]	; 0x80
   2193c:	ldr	r1, [r5, #180]	; 0xb4
   21940:	ldr	r2, [r5, #180]	; 0xb4
   21944:	and	r1, r1, #2
   21948:	eor	r1, r2, r1
   2194c:	str	r1, [r5, #180]	; 0xb4
   21950:	ldr	sl, [r0, #4]
   21954:	cmp	sl, #0
   21958:	beq	213dc <myhtml_insertion_mode_in_body@@Base+0x42c>
   2195c:	ldr	r0, [r0]
   21960:	add	r0, r0, sl, lsl #2
   21964:	ldr	r4, [r0, #-4]
   21968:	ldr	r0, [r5, #28]
   2196c:	mov	r7, r4
   21970:	ldr	r1, [r7, #4]!
   21974:	bl	11818 <myhtml_tag_get_by_id@plt>
   21978:	mov	r9, r0
   2197c:	mov	r0, r4
   21980:	mov	r1, #36	; 0x24
   21984:	bl	11884 <myhtml_is_html_node@plt>
   21988:	cmp	r0, #0
   2198c:	bne	22520 <myhtml_insertion_mode_in_body@@Base+0x1570>
   21990:	rsb	sl, sl, #2
   21994:	mov	r0, r4
   21998:	mov	r1, #44	; 0x2c
   2199c:	bl	11884 <myhtml_is_html_node@plt>
   219a0:	cmp	r0, #0
   219a4:	bne	225e8 <myhtml_insertion_mode_in_body@@Base+0x1638>
   219a8:	ldr	r0, [r4, #8]
   219ac:	add	r1, r9, r0, lsl #2
   219b0:	ldrb	r1, [r1, #16]
   219b4:	tst	r1, #2
   219b8:	bne	219c8 <myhtml_insertion_mode_in_body@@Base+0xa18>
   219bc:	cmp	sl, #1
   219c0:	bne	219e8 <myhtml_insertion_mode_in_body@@Base+0xa38>
   219c4:	b	213dc <myhtml_insertion_mode_in_body@@Base+0x42c>
   219c8:	ldr	r1, [r7]
   219cc:	cmp	r1, #7
   219d0:	cmpne	r1, #99	; 0x63
   219d4:	bne	21a24 <myhtml_insertion_mode_in_body@@Base+0xa74>
   219d8:	cmp	sl, #1
   219dc:	beq	213dc <myhtml_insertion_mode_in_body@@Base+0x42c>
   219e0:	cmp	r0, #1
   219e4:	bne	213dc <myhtml_insertion_mode_in_body@@Base+0x42c>
   219e8:	ldr	r1, [r5, #128]	; 0x80
   219ec:	ldr	r0, [r5, #28]
   219f0:	ldr	r1, [r1]
   219f4:	ldr	r4, [r1, -sl, lsl #2]
   219f8:	mov	r7, r4
   219fc:	ldr	r1, [r7, #4]!
   21a00:	bl	11818 <myhtml_tag_get_by_id@plt>
   21a04:	mov	r9, r0
   21a08:	mov	r0, r4
   21a0c:	mov	r1, #36	; 0x24
   21a10:	bl	11884 <myhtml_is_html_node@plt>
   21a14:	add	sl, sl, #1
   21a18:	cmp	r0, #0
   21a1c:	beq	21994 <myhtml_insertion_mode_in_body@@Base+0x9e4>
   21a20:	b	22520 <myhtml_insertion_mode_in_body@@Base+0x1570>
   21a24:	cmp	r1, #42	; 0x2a
   21a28:	beq	219d8 <myhtml_insertion_mode_in_body@@Base+0xa28>
   21a2c:	b	213dc <myhtml_insertion_mode_in_body@@Base+0x42c>
   21a30:	mov	r0, r5
   21a34:	mov	r1, #99	; 0x63
   21a38:	mov	r2, #1
   21a3c:	mov	r3, #32
   21a40:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   21a44:	cmp	r0, #0
   21a48:	beq	21a58 <myhtml_insertion_mode_in_body@@Base+0xaa8>
   21a4c:	mov	r0, r5
   21a50:	mov	r1, r6
   21a54:	bl	113c8 <myhtml_tree_tags_close_p@plt>
   21a58:	mov	r0, r5
   21a5c:	mov	r1, r6
   21a60:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   21a64:	ldr	r0, [r5, #180]	; 0xb4
   21a68:	orr	r0, r0, #192	; 0xc0
   21a6c:	str	r0, [r5, #180]	; 0xb4
   21a70:	b	22028 <myhtml_insertion_mode_in_body@@Base+0x1078>
   21a74:	mov	r0, r5
   21a78:	bl	11530 <myhtml_tree_current_node@plt>
   21a7c:	mov	r1, #97	; 0x61
   21a80:	b	22260 <myhtml_insertion_mode_in_body@@Base+0x12b0>
   21a84:	mov	r0, r5
   21a88:	mov	r1, #109	; 0x6d
   21a8c:	mov	r2, #1
   21a90:	mov	r3, #8
   21a94:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   21a98:	cmp	r0, #0
   21a9c:	beq	21adc <myhtml_insertion_mode_in_body@@Base+0xb2c>
   21aa0:	mov	r0, r5
   21aa4:	mov	r1, #0
   21aa8:	mov	r2, #0
   21aac:	b	21ad8 <myhtml_insertion_mode_in_body@@Base+0xb28>
   21ab0:	mov	r0, r5
   21ab4:	mov	r1, #109	; 0x6d
   21ab8:	mov	r2, #1
   21abc:	mov	r3, #8
   21ac0:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   21ac4:	cmp	r0, #0
   21ac8:	beq	21adc <myhtml_insertion_mode_in_body@@Base+0xb2c>
   21acc:	mov	r0, r5
   21ad0:	mov	r1, #108	; 0x6c
   21ad4:	mov	r2, #1
   21ad8:	bl	115c0 <myhtml_tree_generate_implied_end_tags@plt>
   21adc:	mov	r0, r5
   21ae0:	bl	11530 <myhtml_tree_current_node@plt>
   21ae4:	b	222e4 <myhtml_insertion_mode_in_body@@Base+0x1334>
   21ae8:	mov	r0, r5
   21aec:	mov	r1, r6
   21af0:	bl	10eac <myhtml_insertion_mode_in_body_other_end_tag@plt>
   21af4:	b	216a4 <myhtml_insertion_mode_in_body@@Base+0x6f4>
   21af8:	mov	r0, r5
   21afc:	mov	r1, #23
   21b00:	mov	r2, #1
   21b04:	mov	r3, #8
   21b08:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   21b0c:	mov	r8, #0
   21b10:	cmp	r0, #0
   21b14:	beq	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   21b18:	ldr	r0, [r5, #128]	; 0x80
   21b1c:	mvn	r1, #0
   21b20:	ldr	r2, [r0, #4]
   21b24:	add	r1, r1, #1
   21b28:	cmp	r1, r2
   21b2c:	bcc	21b20 <myhtml_insertion_mode_in_body@@Base+0xb70>
   21b30:	mov	r0, #18
   21b34:	str	r0, [r5, #168]	; 0xa8
   21b38:	b	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   21b3c:	ldr	r0, [r6, #40]	; 0x28
   21b40:	cmp	r0, #0
   21b44:	movne	r0, #0
   21b48:	strne	r0, [r6, #40]	; 0x28
   21b4c:	ldr	r0, [r6, #44]	; 0x2c
   21b50:	cmp	r0, #0
   21b54:	movne	r0, #0
   21b58:	strne	r0, [r6, #44]	; 0x2c
   21b5c:	mov	r0, r5
   21b60:	bl	114b8 <myhtml_tree_active_formatting_reconstruction@plt>
   21b64:	mov	r8, #0
   21b68:	str	r8, [r6, #48]	; 0x30
   21b6c:	b	22014 <myhtml_insertion_mode_in_body@@Base+0x1064>
   21b70:	mov	r0, r5
   21b74:	mov	r1, #128	; 0x80
   21b78:	mov	r2, #1
   21b7c:	mov	r3, #0
   21b80:	mov	r8, #0
   21b84:	bl	11680 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   21b88:	cmp	r0, #0
   21b8c:	beq	2254c <myhtml_insertion_mode_in_body@@Base+0x159c>
   21b90:	mov	r0, r5
   21b94:	mov	r1, #52	; 0x34
   21b98:	mov	r2, #1
   21b9c:	mov	r3, #8
   21ba0:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   21ba4:	cmp	r0, #0
   21ba8:	beq	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   21bac:	mov	r0, r5
   21bb0:	mov	r1, #0
   21bb4:	mov	r2, #0
   21bb8:	mov	r8, #0
   21bbc:	bl	115c0 <myhtml_tree_generate_implied_end_tags@plt>
   21bc0:	mov	r0, r5
   21bc4:	bl	11530 <myhtml_tree_current_node@plt>
   21bc8:	mov	r1, #52	; 0x34
   21bcc:	bl	11884 <myhtml_is_html_node@plt>
   21bd0:	mov	r0, r5
   21bd4:	mov	r1, #52	; 0x34
   21bd8:	b	21688 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   21bdc:	mov	r0, r5
   21be0:	mov	r1, #23
   21be4:	mov	r2, #1
   21be8:	mov	r3, #8
   21bec:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   21bf0:	cmp	r0, #0
   21bf4:	beq	216a4 <myhtml_insertion_mode_in_body@@Base+0x6f4>
   21bf8:	ldr	r0, [r5, #128]	; 0x80
   21bfc:	mvn	r1, #0
   21c00:	ldr	r2, [r0, #4]
   21c04:	add	r1, r1, #1
   21c08:	cmp	r1, r2
   21c0c:	bcc	21c00 <myhtml_insertion_mode_in_body@@Base+0xc50>
   21c10:	mov	r0, #18
   21c14:	mov	r8, #1
   21c18:	str	r0, [r5, #168]	; 0xa8
   21c1c:	b	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   21c20:	mov	r0, r5
   21c24:	mov	r1, #77	; 0x4d
   21c28:	mov	r2, #1
   21c2c:	mov	r3, #16
   21c30:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   21c34:	cmp	r0, #0
   21c38:	beq	216a4 <myhtml_insertion_mode_in_body@@Base+0x6f4>
   21c3c:	mov	r0, r5
   21c40:	mov	r1, #77	; 0x4d
   21c44:	mov	r2, #1
   21c48:	bl	115c0 <myhtml_tree_generate_implied_end_tags@plt>
   21c4c:	mov	r0, r5
   21c50:	bl	11530 <myhtml_tree_current_node@plt>
   21c54:	mov	r1, #77	; 0x4d
   21c58:	bl	11884 <myhtml_is_html_node@plt>
   21c5c:	mov	r8, #0
   21c60:	mov	r0, r5
   21c64:	mov	r1, #77	; 0x4d
   21c68:	b	21688 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   21c6c:	mov	r0, r5
   21c70:	mov	r1, #99	; 0x63
   21c74:	mov	r2, #1
   21c78:	mov	r3, #32
   21c7c:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   21c80:	cmp	r0, #0
   21c84:	bne	21c98 <myhtml_insertion_mode_in_body@@Base+0xce8>
   21c88:	mov	r0, r5
   21c8c:	mov	r1, #99	; 0x63
   21c90:	mov	r2, #1
   21c94:	bl	117a0 <myhtml_tree_node_insert@plt>
   21c98:	mov	r0, r5
   21c9c:	mov	r1, r6
   21ca0:	bl	113c8 <myhtml_tree_tags_close_p@plt>
   21ca4:	b	216a4 <myhtml_insertion_mode_in_body@@Base+0x6f4>
   21ca8:	ldr	r0, [r6, #48]	; 0x30
   21cac:	tst	r0, #2048	; 0x800
   21cb0:	beq	21d80 <myhtml_insertion_mode_in_body@@Base+0xdd0>
   21cb4:	ldr	r0, [r5, #8]
   21cb8:	mov	r1, r6
   21cbc:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   21cc0:	ldr	r4, [r6, #12]
   21cc4:	cmp	r4, #0
   21cc8:	beq	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   21ccc:	mov	r0, #0
   21cd0:	mov	r8, #0
   21cd4:	ldr	r3, [r6, #4]
   21cd8:	ldrb	r1, [r3, r0]
   21cdc:	cmp	r1, #0
   21ce0:	bne	21d64 <myhtml_insertion_mode_in_body@@Base+0xdb4>
   21ce4:	cmp	r0, r4
   21ce8:	mov	r2, r0
   21cec:	bcs	21d10 <myhtml_insertion_mode_in_body@@Base+0xd60>
   21cf0:	add	r1, r0, #1
   21cf4:	mov	r2, r1
   21cf8:	cmp	r1, r4
   21cfc:	bcs	21d10 <myhtml_insertion_mode_in_body@@Base+0xd60>
   21d00:	ldrb	r7, [r3, r2]
   21d04:	add	r1, r2, #1
   21d08:	cmp	r7, #0
   21d0c:	beq	21cf4 <myhtml_insertion_mode_in_body@@Base+0xd44>
   21d10:	ldr	r7, [r6, #12]
   21d14:	sub	r1, r0, r2
   21d18:	cmp	r2, r4
   21d1c:	add	r1, r1, r7
   21d20:	mov	r7, r2
   21d24:	str	r1, [r6, #12]
   21d28:	bcs	21d48 <myhtml_insertion_mode_in_body@@Base+0xd98>
   21d2c:	mov	r7, r2
   21d30:	ldrb	r1, [r3, r7]
   21d34:	cmp	r1, #0
   21d38:	beq	21d48 <myhtml_insertion_mode_in_body@@Base+0xd98>
   21d3c:	add	r7, r7, #1
   21d40:	cmp	r7, r4
   21d44:	bcc	21d30 <myhtml_insertion_mode_in_body@@Base+0xd80>
   21d48:	sub	r0, r0, r8
   21d4c:	add	r1, r3, r2
   21d50:	sub	r2, r7, r2
   21d54:	add	r0, r3, r0
   21d58:	bl	10fb4 <memmove@plt>
   21d5c:	add	r8, r8, #1
   21d60:	sub	r0, r7, #1
   21d64:	add	r0, r0, #1
   21d68:	cmp	r0, r4
   21d6c:	bcc	21cd4 <myhtml_insertion_mode_in_body@@Base+0xd24>
   21d70:	ldr	r0, [r6, #12]
   21d74:	mov	r8, #0
   21d78:	cmp	r0, #0
   21d7c:	beq	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   21d80:	mov	r0, r5
   21d84:	bl	114b8 <myhtml_tree_active_formatting_reconstruction@plt>
   21d88:	mov	r0, r5
   21d8c:	mov	r1, r6
   21d90:	bl	11074 <myhtml_tree_node_insert_text@plt>
   21d94:	ldr	r0, [r6, #48]	; 0x30
   21d98:	tst	r0, #8
   21d9c:	beq	22028 <myhtml_insertion_mode_in_body@@Base+0x1078>
   21da0:	b	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   21da4:	mov	r0, r5
   21da8:	mov	r1, r6
   21dac:	mov	r2, #0
   21db0:	mov	r8, #0
   21db4:	bl	11284 <myhtml_tree_node_insert_comment@plt>
   21db8:	b	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   21dbc:	mov	r0, r5
   21dc0:	mov	r1, #4
   21dc4:	mov	r2, #0
   21dc8:	mov	r8, #0
   21dcc:	bl	11554 <myhtml_tree_active_formatting_between_last_marker@plt>
   21dd0:	cmp	r0, #0
   21dd4:	beq	222ac <myhtml_insertion_mode_in_body@@Base+0x12fc>
   21dd8:	mov	r0, r5
   21ddc:	mov	r1, r6
   21de0:	mov	r2, #4
   21de4:	bl	116d4 <myhtml_tree_adoption_agency_algorithm@plt>
   21de8:	mov	r0, r5
   21dec:	mov	r1, #4
   21df0:	mov	r2, #0
   21df4:	bl	11554 <myhtml_tree_active_formatting_between_last_marker@plt>
   21df8:	cmp	r0, #0
   21dfc:	beq	222ac <myhtml_insertion_mode_in_body@@Base+0x12fc>
   21e00:	mov	r4, r0
   21e04:	mov	r0, r5
   21e08:	mov	r1, r4
   21e0c:	bl	1126c <myhtml_tree_open_elements_remove@plt>
   21e10:	mov	r0, r5
   21e14:	mov	r1, r4
   21e18:	bl	116e0 <myhtml_tree_active_formatting_remove@plt>
   21e1c:	b	222ac <myhtml_insertion_mode_in_body@@Base+0x12fc>
   21e20:	ldr	r0, [r5, #128]	; 0x80
   21e24:	ldr	r1, [r0, #4]
   21e28:	cmp	r1, #2
   21e2c:	bcc	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   21e30:	ldr	r0, [r0]
   21e34:	ldr	r0, [r0, #4]
   21e38:	ldr	r1, [r0, #4]
   21e3c:	cmp	r1, #23
   21e40:	ldreq	r0, [r0, #8]
   21e44:	cmpeq	r0, #1
   21e48:	bne	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   21e4c:	mov	r0, r5
   21e50:	mov	r1, #128	; 0x80
   21e54:	mov	r2, #1
   21e58:	mov	r3, #0
   21e5c:	mov	r8, #0
   21e60:	bl	11680 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   21e64:	cmp	r0, #0
   21e68:	bne	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   21e6c:	ldr	r0, [r5, #128]	; 0x80
   21e70:	ldr	r1, [r5, #180]	; 0xb4
   21e74:	ldr	r2, [r5, #180]	; 0xb4
   21e78:	and	r1, r1, #2
   21e7c:	eor	r1, r2, r1
   21e80:	str	r1, [r5, #180]	; 0xb4
   21e84:	ldr	r1, [r0, #4]
   21e88:	cmp	r1, #2
   21e8c:	bcc	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   21e90:	ldr	r0, [r0]
   21e94:	ldr	r4, [r0, #4]
   21e98:	b	22078 <myhtml_insertion_mode_in_body@@Base+0x10c8>
   21e9c:	mov	r0, r5
   21ea0:	mov	r1, #25
   21ea4:	mov	r2, #1
   21ea8:	mov	r3, #8
   21eac:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   21eb0:	cmp	r0, #0
   21eb4:	beq	21edc <myhtml_insertion_mode_in_body@@Base+0xf2c>
   21eb8:	mov	r0, r5
   21ebc:	mov	r1, #0
   21ec0:	mov	r2, #0
   21ec4:	bl	115c0 <myhtml_tree_generate_implied_end_tags@plt>
   21ec8:	mov	r0, r5
   21ecc:	mov	r1, #25
   21ed0:	mov	r2, #1
   21ed4:	mov	r3, #0
   21ed8:	bl	1177c <myhtml_tree_open_elements_pop_until@plt>
   21edc:	mov	r0, r5
   21ee0:	bl	114b8 <myhtml_tree_active_formatting_reconstruction@plt>
   21ee4:	mov	r0, r5
   21ee8:	mov	r1, r6
   21eec:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   21ef0:	b	22028 <myhtml_insertion_mode_in_body@@Base+0x1078>
   21ef4:	mov	r0, r5
   21ef8:	mov	r1, #128	; 0x80
   21efc:	mov	r2, #1
   21f00:	mov	r3, #0
   21f04:	mov	r8, #0
   21f08:	bl	11680 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   21f0c:	mov	r4, r0
   21f10:	cmp	r0, #0
   21f14:	bne	21f24 <myhtml_insertion_mode_in_body@@Base+0xf74>
   21f18:	ldr	r0, [r5, #104]	; 0x68
   21f1c:	cmp	r0, #0
   21f20:	bne	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   21f24:	mov	r0, r5
   21f28:	mov	r1, #99	; 0x63
   21f2c:	mov	r2, #1
   21f30:	mov	r3, #32
   21f34:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   21f38:	cmp	r0, #0
   21f3c:	beq	21f4c <myhtml_insertion_mode_in_body@@Base+0xf9c>
   21f40:	mov	r0, r5
   21f44:	mov	r1, r6
   21f48:	bl	113c8 <myhtml_tree_tags_close_p@plt>
   21f4c:	mov	r0, r5
   21f50:	mov	r1, r6
   21f54:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   21f58:	cmp	r4, #0
   21f5c:	streq	r0, [r5, #104]	; 0x68
   21f60:	b	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   21f64:	ldr	r0, [r5, #128]	; 0x80
   21f68:	ldr	r1, [r0, #4]
   21f6c:	cmp	r1, #2
   21f70:	bcc	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   21f74:	ldr	r0, [r0]
   21f78:	ldr	r0, [r0, #4]
   21f7c:	ldr	r1, [r0, #4]
   21f80:	cmp	r1, #23
   21f84:	ldreq	r1, [r0, #8]
   21f88:	cmpeq	r1, #1
   21f8c:	bne	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   21f90:	ldr	r1, [r5, #180]	; 0xb4
   21f94:	tst	r1, #2
   21f98:	beq	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   21f9c:	bl	11adc <myhtml_tree_node_remove@plt>
   21fa0:	mov	r0, r5
   21fa4:	mov	r1, #65	; 0x41
   21fa8:	mov	r2, #1
   21fac:	mov	r3, #1
   21fb0:	bl	1177c <myhtml_tree_open_elements_pop_until@plt>
   21fb4:	mov	r0, r5
   21fb8:	mov	r1, r6
   21fbc:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   21fc0:	mov	r0, #19
   21fc4:	str	r0, [r5, #168]	; 0xa8
   21fc8:	b	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   21fcc:	mov	r0, r5
   21fd0:	mov	r1, #99	; 0x63
   21fd4:	mov	r2, #1
   21fd8:	mov	r3, #32
   21fdc:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   21fe0:	cmp	r0, #0
   21fe4:	beq	21ff4 <myhtml_insertion_mode_in_body@@Base+0x1044>
   21fe8:	mov	r0, r5
   21fec:	mov	r1, r6
   21ff0:	bl	113c8 <myhtml_tree_tags_close_p@plt>
   21ff4:	mov	r0, r5
   21ff8:	bl	11530 <myhtml_tree_current_node@plt>
   21ffc:	mov	r1, #85	; 0x55
   22000:	bl	11884 <myhtml_is_html_node@plt>
   22004:	cmp	r0, #0
   22008:	beq	22014 <myhtml_insertion_mode_in_body@@Base+0x1064>
   2200c:	mov	r0, r5
   22010:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   22014:	mov	r0, r5
   22018:	mov	r1, r6
   2201c:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   22020:	mov	r0, r5
   22024:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   22028:	ldr	r0, [r5, #180]	; 0xb4
   2202c:	ldr	r1, [r5, #180]	; 0xb4
   22030:	and	r0, r0, #2
   22034:	eor	r0, r1, r0
   22038:	str	r0, [r5, #180]	; 0xb4
   2203c:	b	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   22040:	mov	r0, r5
   22044:	mov	r1, #128	; 0x80
   22048:	mov	r2, #1
   2204c:	mov	r3, #0
   22050:	mov	r8, #0
   22054:	bl	11680 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   22058:	cmp	r0, #0
   2205c:	bne	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   22060:	ldr	r0, [r5, #128]	; 0x80
   22064:	ldr	r1, [r0, #4]
   22068:	cmp	r1, #0
   2206c:	beq	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   22070:	ldr	r0, [r0]
   22074:	ldr	r4, [r0]
   22078:	ldr	r0, [r4, #32]
   2207c:	cmp	r0, #0
   22080:	beq	2262c <myhtml_insertion_mode_in_body@@Base+0x167c>
   22084:	ldr	r0, [r5, #8]
   22088:	mov	r1, r6
   2208c:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   22090:	ldr	r1, [r4, #32]
   22094:	ldr	r0, [r5, #8]
   22098:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   2209c:	ldr	r2, [r4, #32]
   220a0:	ldr	r0, [r5, #8]
   220a4:	ldr	r3, [r5, #44]	; 0x2c
   220a8:	mov	r1, r6
   220ac:	bl	11590 <myhtml_token_node_attr_copy_with_check@plt>
   220b0:	b	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   220b4:	mov	r0, #69	; 0x45
   220b8:	mov	r8, #1
   220bc:	str	r0, [r6]
   220c0:	b	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   220c4:	mov	r0, r5
   220c8:	bl	114b8 <myhtml_tree_active_formatting_reconstruction@plt>
   220cc:	mov	r0, r5
   220d0:	mov	r1, r6
   220d4:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   220d8:	mov	r0, r5
   220dc:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   220e0:	ldr	r0, [r5, #8]
   220e4:	mov	r1, r6
   220e8:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   220ec:	ldr	r0, [r5, #8]
   220f0:	ldr	r2, [pc, #1340]	; 22634 <myhtml_insertion_mode_in_body@@Base+0x1684>
   220f4:	mov	r1, #6
   220f8:	mov	r3, #4
   220fc:	str	r1, [sp, #4]
   22100:	mov	r1, r6
   22104:	add	r2, pc, r2
   22108:	str	r2, [sp]
   2210c:	ldr	r2, [pc, #1316]	; 22638 <myhtml_insertion_mode_in_body@@Base+0x1688>
   22110:	add	r2, pc, r2
   22114:	bl	10ec4 <myhtml_token_attr_match_case@plt>
   22118:	cmp	r0, #0
   2211c:	bne	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   22120:	b	22028 <myhtml_insertion_mode_in_body@@Base+0x1078>
   22124:	ldr	r0, [r5, #128]	; 0x80
   22128:	ldr	r1, [r5, #180]	; 0xb4
   2212c:	ldr	r2, [r5, #180]	; 0xb4
   22130:	and	r1, r1, #2
   22134:	eor	r1, r2, r1
   22138:	str	r1, [r5, #180]	; 0xb4
   2213c:	ldr	r4, [r0, #4]
   22140:	cmp	r4, #0
   22144:	beq	213dc <myhtml_insertion_mode_in_body@@Base+0x42c>
   22148:	ldr	r0, [r0]
   2214c:	add	r0, r0, r4, lsl #2
   22150:	ldr	sl, [r0, #-4]
   22154:	ldr	r0, [r5, #28]
   22158:	mov	r7, sl
   2215c:	ldr	r1, [r7, #4]!
   22160:	bl	11818 <myhtml_tag_get_by_id@plt>
   22164:	mov	r9, r0
   22168:	mov	r0, sl
   2216c:	mov	r1, #77	; 0x4d
   22170:	bl	11884 <myhtml_is_html_node@plt>
   22174:	cmp	r0, #0
   22178:	bne	225a0 <myhtml_insertion_mode_in_body@@Base+0x15f0>
   2217c:	rsb	r4, r4, #2
   22180:	ldr	r0, [sl, #8]
   22184:	add	r1, r9, r0, lsl #2
   22188:	ldrb	r1, [r1, #16]
   2218c:	tst	r1, #2
   22190:	bne	221a0 <myhtml_insertion_mode_in_body@@Base+0x11f0>
   22194:	cmp	r4, #1
   22198:	bne	221c0 <myhtml_insertion_mode_in_body@@Base+0x1210>
   2219c:	b	213dc <myhtml_insertion_mode_in_body@@Base+0x42c>
   221a0:	ldr	r1, [r7]
   221a4:	cmp	r1, #7
   221a8:	cmpne	r1, #99	; 0x63
   221ac:	bne	221fc <myhtml_insertion_mode_in_body@@Base+0x124c>
   221b0:	cmp	r4, #1
   221b4:	beq	213dc <myhtml_insertion_mode_in_body@@Base+0x42c>
   221b8:	cmp	r0, #1
   221bc:	bne	213dc <myhtml_insertion_mode_in_body@@Base+0x42c>
   221c0:	ldr	r1, [r5, #128]	; 0x80
   221c4:	ldr	r0, [r5, #28]
   221c8:	ldr	r1, [r1]
   221cc:	ldr	sl, [r1, -r4, lsl #2]
   221d0:	mov	r7, sl
   221d4:	ldr	r1, [r7, #4]!
   221d8:	bl	11818 <myhtml_tag_get_by_id@plt>
   221dc:	mov	r9, r0
   221e0:	mov	r0, sl
   221e4:	mov	r1, #77	; 0x4d
   221e8:	bl	11884 <myhtml_is_html_node@plt>
   221ec:	add	r4, r4, #1
   221f0:	cmp	r0, #0
   221f4:	beq	22180 <myhtml_insertion_mode_in_body@@Base+0x11d0>
   221f8:	b	225a0 <myhtml_insertion_mode_in_body@@Base+0x15f0>
   221fc:	cmp	r1, #42	; 0x2a
   22200:	beq	221b0 <myhtml_insertion_mode_in_body@@Base+0x1200>
   22204:	b	213dc <myhtml_insertion_mode_in_body@@Base+0x42c>
   22208:	mov	r0, r5
   2220c:	mov	r1, #99	; 0x63
   22210:	mov	r2, #1
   22214:	mov	r3, #32
   22218:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   2221c:	cmp	r0, #0
   22220:	beq	22230 <myhtml_insertion_mode_in_body@@Base+0x1280>
   22224:	mov	r0, r5
   22228:	mov	r1, r6
   2222c:	bl	113c8 <myhtml_tree_tags_close_p@plt>
   22230:	mov	r0, r5
   22234:	bl	11530 <myhtml_tree_current_node@plt>
   22238:	mov	r1, #85	; 0x55
   2223c:	bl	11884 <myhtml_is_html_node@plt>
   22240:	cmp	r0, #0
   22244:	beq	222e4 <myhtml_insertion_mode_in_body@@Base+0x1334>
   22248:	mov	r0, r5
   2224c:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   22250:	b	222e4 <myhtml_insertion_mode_in_body@@Base+0x1334>
   22254:	mov	r0, r5
   22258:	bl	11530 <myhtml_tree_current_node@plt>
   2225c:	mov	r1, #85	; 0x55
   22260:	bl	11884 <myhtml_is_html_node@plt>
   22264:	cmp	r0, #0
   22268:	beq	222dc <myhtml_insertion_mode_in_body@@Base+0x132c>
   2226c:	mov	r0, r5
   22270:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   22274:	b	222dc <myhtml_insertion_mode_in_body@@Base+0x132c>
   22278:	mov	r0, r5
   2227c:	bl	114b8 <myhtml_tree_active_formatting_reconstruction@plt>
   22280:	mov	r0, r5
   22284:	mov	r1, #90	; 0x5a
   22288:	mov	r2, #1
   2228c:	mov	r3, #8
   22290:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   22294:	cmp	r0, #0
   22298:	beq	222b4 <myhtml_insertion_mode_in_body@@Base+0x1304>
   2229c:	mov	r0, r5
   222a0:	mov	r1, r6
   222a4:	mov	r2, #90	; 0x5a
   222a8:	bl	116d4 <myhtml_tree_adoption_agency_algorithm@plt>
   222ac:	mov	r0, r5
   222b0:	bl	114b8 <myhtml_tree_active_formatting_reconstruction@plt>
   222b4:	mov	r0, r5
   222b8:	mov	r1, r6
   222bc:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   222c0:	mov	r1, r0
   222c4:	mov	r0, r5
   222c8:	bl	1168c <myhtml_tree_active_formatting_append_with_check@plt>
   222cc:	b	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   222d0:	ldr	r0, [r5, #180]	; 0xb4
   222d4:	tst	r0, #1
   222d8:	bne	222fc <myhtml_insertion_mode_in_body@@Base+0x134c>
   222dc:	mov	r0, r5
   222e0:	bl	114b8 <myhtml_tree_active_formatting_reconstruction@plt>
   222e4:	mov	r0, r5
   222e8:	mov	r1, r6
   222ec:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   222f0:	mov	r0, r8
   222f4:	sub	sp, fp, #28
   222f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   222fc:	mov	r0, #4
   22300:	str	r0, [r5, #164]	; 0xa4
   22304:	b	2249c <myhtml_insertion_mode_in_body@@Base+0x14ec>
   22308:	mov	r0, r5
   2230c:	mov	r1, #99	; 0x63
   22310:	mov	r2, #1
   22314:	mov	r3, #32
   22318:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   2231c:	cmp	r0, #0
   22320:	beq	22330 <myhtml_insertion_mode_in_body@@Base+0x1380>
   22324:	mov	r0, r5
   22328:	mov	r1, r6
   2232c:	bl	113c8 <myhtml_tree_tags_close_p@plt>
   22330:	mov	r0, r5
   22334:	mov	r1, r6
   22338:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   2233c:	mov	r0, #6
   22340:	str	r0, [r5, #164]	; 0xa4
   22344:	b	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   22348:	mov	r0, r5
   2234c:	bl	114b8 <myhtml_tree_active_formatting_reconstruction@plt>
   22350:	mov	r0, r5
   22354:	mov	r1, r6
   22358:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   2235c:	ldr	r0, [r5, #168]	; 0xa8
   22360:	ldr	r1, [r5, #180]	; 0xb4
   22364:	ldr	r2, [r5, #180]	; 0xb4
   22368:	and	r1, r1, #2
   2236c:	cmp	r0, #14
   22370:	eor	r1, r2, r1
   22374:	str	r1, [r5, #180]	; 0xb4
   22378:	bhi	22620 <myhtml_insertion_mode_in_body@@Base+0x1670>
   2237c:	mov	r1, #1
   22380:	mov	r2, #29952	; 0x7500
   22384:	tst	r2, r1, lsl r0
   22388:	beq	22620 <myhtml_insertion_mode_in_body@@Base+0x1670>
   2238c:	mov	r0, #16
   22390:	str	r0, [r5, #168]	; 0xa8
   22394:	b	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   22398:	mov	r0, r5
   2239c:	bl	114b8 <myhtml_tree_active_formatting_reconstruction@plt>
   223a0:	ldr	r0, [r5, #8]
   223a4:	mov	r1, r6
   223a8:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   223ac:	mov	r0, r6
   223b0:	bl	1123c <myhtml_token_adjust_svg_attributes@plt>
   223b4:	mov	r0, r6
   223b8:	bl	11944 <myhtml_token_adjust_foreign_attributes@plt>
   223bc:	mov	r0, r5
   223c0:	mov	r1, r6
   223c4:	bl	11a70 <myhtml_tree_node_insert_foreign_element@plt>
   223c8:	mov	r1, #3
   223cc:	b	224e0 <myhtml_insertion_mode_in_body@@Base+0x1530>
   223d0:	ldrb	r0, [r5, #176]	; 0xb0
   223d4:	tst	r0, #1
   223d8:	bne	22404 <myhtml_insertion_mode_in_body@@Base+0x1454>
   223dc:	mov	r0, r5
   223e0:	mov	r1, #99	; 0x63
   223e4:	mov	r2, #1
   223e8:	mov	r3, #32
   223ec:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   223f0:	cmp	r0, #0
   223f4:	beq	22404 <myhtml_insertion_mode_in_body@@Base+0x1454>
   223f8:	mov	r0, r5
   223fc:	mov	r1, r6
   22400:	bl	113c8 <myhtml_tree_tags_close_p@plt>
   22404:	mov	r0, r5
   22408:	mov	r1, r6
   2240c:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   22410:	mov	r0, #8
   22414:	str	r0, [r5, #168]	; 0xa8
   22418:	b	22028 <myhtml_insertion_mode_in_body@@Base+0x1078>
   2241c:	mov	r0, r5
   22420:	mov	r1, r6
   22424:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   22428:	ldr	r0, [r5, #168]	; 0xa8
   2242c:	ldr	r1, [r5, #180]	; 0xb4
   22430:	mov	r2, #7
   22434:	orr	r1, r1, #192	; 0xc0
   22438:	str	r1, [r5, #180]	; 0xb4
   2243c:	mov	r1, #2
   22440:	str	r1, [r5, #164]	; 0xa4
   22444:	str	r2, [r5, #168]	; 0xa8
   22448:	str	r0, [r5, #172]	; 0xac
   2244c:	b	22028 <myhtml_insertion_mode_in_body@@Base+0x1078>
   22450:	mov	r0, r5
   22454:	mov	r1, #99	; 0x63
   22458:	mov	r2, #1
   2245c:	mov	r3, #32
   22460:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   22464:	cmp	r0, #0
   22468:	beq	22478 <myhtml_insertion_mode_in_body@@Base+0x14c8>
   2246c:	mov	r0, r5
   22470:	mov	r1, r6
   22474:	bl	113c8 <myhtml_tree_tags_close_p@plt>
   22478:	mov	r0, r5
   2247c:	bl	114b8 <myhtml_tree_active_formatting_reconstruction@plt>
   22480:	mov	r0, #4
   22484:	str	r0, [r5, #164]	; 0xa4
   22488:	ldr	r0, [r5, #180]	; 0xb4
   2248c:	ldr	r1, [r5, #180]	; 0xb4
   22490:	and	r0, r0, #2
   22494:	eor	r0, r1, r0
   22498:	str	r0, [r5, #180]	; 0xb4
   2249c:	mov	r0, r5
   224a0:	mov	r1, r6
   224a4:	bl	11bb4 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>
   224a8:	b	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   224ac:	mov	r0, r5
   224b0:	bl	114b8 <myhtml_tree_active_formatting_reconstruction@plt>
   224b4:	ldr	r0, [r5, #8]
   224b8:	mov	r1, r6
   224bc:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   224c0:	mov	r0, r6
   224c4:	bl	1105c <myhtml_token_adjust_mathml_attributes@plt>
   224c8:	mov	r0, r6
   224cc:	bl	11944 <myhtml_token_adjust_foreign_attributes@plt>
   224d0:	mov	r0, r5
   224d4:	mov	r1, r6
   224d8:	bl	11a70 <myhtml_tree_node_insert_foreign_element@plt>
   224dc:	mov	r1, #2
   224e0:	str	r1, [r0, #8]
   224e4:	ldr	r0, [r6, #48]	; 0x30
   224e8:	tst	r0, #2
   224ec:	beq	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   224f0:	mov	r0, r5
   224f4:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   224f8:	b	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   224fc:	ldr	r0, [r5, #140]	; 0x8c
   22500:	ldr	r0, [r0, #4]
   22504:	cmp	r0, #0
   22508:	beq	225cc <myhtml_insertion_mode_in_body@@Base+0x161c>
   2250c:	mov	r0, r5
   22510:	mov	r1, r6
   22514:	sub	sp, fp, #28
   22518:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2251c:	b	231a0 <myhtml_insertion_mode_in_template@@Base>
   22520:	mov	r0, r5
   22524:	mov	r1, #36	; 0x24
   22528:	mov	r2, #1
   2252c:	bl	115c0 <myhtml_tree_generate_implied_end_tags@plt>
   22530:	mov	r0, r5
   22534:	bl	11530 <myhtml_tree_current_node@plt>
   22538:	mov	r1, #36	; 0x24
   2253c:	bl	11884 <myhtml_is_html_node@plt>
   22540:	mov	r0, r5
   22544:	mov	r1, #36	; 0x24
   22548:	b	22610 <myhtml_insertion_mode_in_body@@Base+0x1660>
   2254c:	ldr	r4, [r5, #104]	; 0x68
   22550:	mov	r8, #0
   22554:	str	r8, [r5, #104]	; 0x68
   22558:	cmp	r4, #0
   2255c:	beq	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   22560:	mov	r0, r4
   22564:	mov	r1, #8
   22568:	bl	10e10 <myhtml_tree_element_in_scope_by_node@plt>
   2256c:	cmp	r0, #0
   22570:	beq	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   22574:	mov	r0, r5
   22578:	mov	r1, #0
   2257c:	mov	r2, #0
   22580:	mov	r8, #0
   22584:	bl	115c0 <myhtml_tree_generate_implied_end_tags@plt>
   22588:	mov	r0, r5
   2258c:	bl	11530 <myhtml_tree_current_node@plt>
   22590:	mov	r0, r5
   22594:	mov	r1, r4
   22598:	bl	1126c <myhtml_tree_open_elements_remove@plt>
   2259c:	b	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   225a0:	mov	r0, r5
   225a4:	mov	r1, #77	; 0x4d
   225a8:	mov	r2, #1
   225ac:	bl	115c0 <myhtml_tree_generate_implied_end_tags@plt>
   225b0:	mov	r0, r5
   225b4:	bl	11530 <myhtml_tree_current_node@plt>
   225b8:	mov	r1, #77	; 0x4d
   225bc:	bl	11884 <myhtml_is_html_node@plt>
   225c0:	mov	r0, r5
   225c4:	mov	r1, #77	; 0x4d
   225c8:	b	22610 <myhtml_insertion_mode_in_body@@Base+0x1660>
   225cc:	ldr	r0, [r5, #128]	; 0x80
   225d0:	mvn	r1, #0
   225d4:	ldr	r2, [r0, #4]
   225d8:	add	r1, r1, #1
   225dc:	cmp	r1, r2
   225e0:	bcc	225d4 <myhtml_insertion_mode_in_body@@Base+0x1624>
   225e4:	b	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   225e8:	mov	r0, r5
   225ec:	mov	r1, #44	; 0x2c
   225f0:	mov	r2, #1
   225f4:	bl	115c0 <myhtml_tree_generate_implied_end_tags@plt>
   225f8:	mov	r0, r5
   225fc:	bl	11530 <myhtml_tree_current_node@plt>
   22600:	mov	r1, #44	; 0x2c
   22604:	bl	11884 <myhtml_is_html_node@plt>
   22608:	mov	r0, r5
   2260c:	mov	r1, #44	; 0x2c
   22610:	mov	r2, #1
   22614:	mov	r3, #0
   22618:	bl	1177c <myhtml_tree_open_elements_pop_until@plt>
   2261c:	b	213dc <myhtml_insertion_mode_in_body@@Base+0x42c>
   22620:	mov	r0, #15
   22624:	str	r0, [r5, #168]	; 0xa8
   22628:	b	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   2262c:	str	r6, [r4, #32]
   22630:	b	222f0 <myhtml_insertion_mode_in_body@@Base+0x1340>
   22634:	strdeq	lr, [sp], -fp
   22638:	andeq	fp, r1, fp, lsl #23

0002263c <myhtml_insertion_mode_in_head@@Base>:
   2263c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   22640:	add	fp, sp, #24
   22644:	sub	sp, sp, #8
   22648:	mov	r5, r0
   2264c:	mov	r6, r1
   22650:	ldr	r0, [r1]
   22654:	ldr	r1, [r1, #48]	; 0x30
   22658:	tst	r1, #1
   2265c:	bne	228ac <myhtml_insertion_mode_in_head@@Base+0x270>
   22660:	sub	r0, r0, #1
   22664:	cmp	r0, #133	; 0x85
   22668:	bhi	2299c <myhtml_insertion_mode_in_head@@Base+0x360>
   2266c:	add	r1, pc, #8
   22670:	mov	r4, #0
   22674:	ldr	r0, [r1, r0, lsl #2]
   22678:	add	pc, r1, r0
   2267c:	strdeq	r0, [r0], -r4
   22680:	andeq	r0, r0, r8, lsr r3
   22684:	andeq	r0, r0, r4, asr r4
   22688:	andeq	r0, r0, r0, lsr #6
   2268c:	andeq	r0, r0, r0, lsr #6
   22690:	andeq	r0, r0, r0, lsr #6
   22694:	andeq	r0, r0, r0, lsr #6
   22698:	andeq	r0, r0, r0, lsr #6
   2269c:	andeq	r0, r0, r0, lsr #6
   226a0:	andeq	r0, r0, r0, lsr #6
   226a4:	andeq	r0, r0, r0, lsr #6
   226a8:	andeq	r0, r0, r0, lsr #6
   226ac:	andeq	r0, r0, r0, lsr #6
   226b0:	andeq	r0, r0, r0, lsr #6
   226b4:	andeq	r0, r0, r8, lsl r2
   226b8:	andeq	r0, r0, r8, lsl r2
   226bc:	andeq	r0, r0, r0, lsr #6
   226c0:	andeq	r0, r0, r0, lsr #6
   226c4:	andeq	r0, r0, r8, lsl r2
   226c8:	andeq	r0, r0, r0, lsr #6
   226cc:	andeq	r0, r0, r0, lsr #6
   226d0:	andeq	r0, r0, r0, lsr #6
   226d4:	andeq	r0, r0, r0, lsr #6
   226d8:	andeq	r0, r0, r0, lsr #6
   226dc:	andeq	r0, r0, r0, lsr #6
   226e0:	andeq	r0, r0, r0, lsr #6
   226e4:	andeq	r0, r0, r0, lsr #6
   226e8:	andeq	r0, r0, r0, lsr #6
   226ec:	andeq	r0, r0, r0, lsr #6
   226f0:	andeq	r0, r0, r0, lsr #6
   226f4:	andeq	r0, r0, r0, lsr #6
   226f8:	andeq	r0, r0, r0, lsr #6
   226fc:	andeq	r0, r0, r0, lsr #6
   22700:	andeq	r0, r0, r0, lsr #6
   22704:	andeq	r0, r0, r0, lsr #6
   22708:	andeq	r0, r0, r0, lsr #6
   2270c:	andeq	r0, r0, r0, lsr #6
   22710:	andeq	r0, r0, r0, lsr #6
   22714:	andeq	r0, r0, r0, lsr #6
   22718:	andeq	r0, r0, r0, lsr #6
   2271c:	andeq	r0, r0, r0, lsr #6
   22720:	andeq	r0, r0, r0, lsr #6
   22724:	andeq	r0, r0, r0, lsr #6
   22728:	andeq	r0, r0, r0, lsr #6
   2272c:	andeq	r0, r0, r0, lsr #6
   22730:	andeq	r0, r0, r0, lsr #6
   22734:	andeq	r0, r0, r0, lsr #6
   22738:	andeq	r0, r0, r0, lsr #6
   2273c:	andeq	r0, r0, r0, lsr #6
   22740:	andeq	r0, r0, r0, lsr #6
   22744:	andeq	r0, r0, r0, lsr #6
   22748:	andeq	r0, r0, r0, lsr #6
   2274c:	andeq	r0, r0, r0, lsr #6
   22750:	andeq	r0, r0, r0, lsr #6
   22754:	andeq	r0, r0, r0, lsr #6
   22758:	andeq	r0, r0, r0, lsr #6
   2275c:	andeq	r0, r0, r0, lsr #6
   22760:	andeq	r0, r0, r0, lsr #6
   22764:	andeq	r0, r0, r0, lsr #6
   22768:	andeq	r0, r0, r0, lsr #6
   2276c:	andeq	r0, r0, r4, asr r4
   22770:	andeq	r0, r0, r0, lsr #6
   22774:	andeq	r0, r0, r0, lsr #6
   22778:	andeq	r0, r0, r0, lsr #6
   2277c:	andeq	r0, r0, r0, asr r3
   22780:	andeq	r0, r0, r0, lsr #6
   22784:	andeq	r0, r0, r0, lsr #6
   22788:	andeq	r0, r0, r0, lsr #6
   2278c:	andeq	r0, r0, r0, lsr #6
   22790:	andeq	r0, r0, r0, lsr #6
   22794:	andeq	r0, r0, r0, lsr #6
   22798:	andeq	r0, r0, r0, lsr #6
   2279c:	andeq	r0, r0, r0, lsr #6
   227a0:	andeq	r0, r0, r0, lsr #6
   227a4:	andeq	r0, r0, r0, lsr #6
   227a8:	andeq	r0, r0, r0, lsr #6
   227ac:	andeq	r0, r0, r0, lsr #6
   227b0:	andeq	r0, r0, r8, lsl r2
   227b4:	andeq	r0, r0, r0, lsr #6
   227b8:	andeq	r0, r0, r0, lsr #6
   227bc:	andeq	r0, r0, r0, lsr #6
   227c0:	andeq	r0, r0, r0, lsr #6
   227c4:	andeq	r0, r0, r0, lsr #6
   227c8:	andeq	r0, r0, r0, lsr #6
   227cc:	andeq	r0, r0, r0, lsr #6
   227d0:	andeq	r0, r0, r8, lsl r2
   227d4:	andeq	r0, r0, r0, lsr #6
   227d8:	andeq	r0, r0, r0, lsr #6
   227dc:	andeq	r0, r0, r0, lsr #6
   227e0:	andeq	r0, r0, r0, lsr #6
   227e4:	andeq	r0, r0, r0, lsr #6
   227e8:	andeq	r0, r0, r0, ror #5
   227ec:	andeq	r0, r0, r4, ror #6
   227f0:	andeq	r0, r0, r0, lsr #6
   227f4:	andeq	r0, r0, r0, lsr #6
   227f8:	andeq	r0, r0, r0, lsr #6
   227fc:	andeq	r0, r0, r0, lsr #6
   22800:	andeq	r0, r0, r0, lsr #6
   22804:	andeq	r0, r0, r0, lsr #6
   22808:	andeq	r0, r0, r0, lsr #6
   2280c:	andeq	r0, r0, r0, lsr #6
   22810:	andeq	r0, r0, r0, lsr #6
   22814:	andeq	r0, r0, r0, lsr #6
   22818:	andeq	r0, r0, r0, lsr #6
   2281c:	andeq	r0, r0, r0, lsr #6
   22820:	andeq	r0, r0, r0, lsr #6
   22824:	andeq	r0, r0, r0, lsr #6
   22828:	andeq	r0, r0, r0, lsr #6
   2282c:	andeq	r0, r0, r0, lsr #6
   22830:	andeq	r0, r0, r0, lsr #6
   22834:	andeq	r0, r0, r0, lsr #6
   22838:	andeq	r0, r0, r8, lsl #7
   2283c:	andeq	r0, r0, r0, lsr #6
   22840:	andeq	r0, r0, r0, lsr #6
   22844:	andeq	r0, r0, r0, lsr #6
   22848:	andeq	r0, r0, r0, lsr #6
   2284c:	andeq	r0, r0, r0, lsr #6
   22850:	andeq	r0, r0, r0, lsr #6
   22854:	andeq	r0, r0, r0, lsr #6
   22858:	andeq	r0, r0, r0, ror #5
   2285c:	andeq	r0, r0, r0, lsr #6
   22860:	andeq	r0, r0, r0, lsr #6
   22864:	andeq	r0, r0, r0, lsr #6
   22868:	andeq	r0, r0, r0, lsr #6
   2286c:	andeq	r0, r0, r0, lsr #6
   22870:	andeq	r0, r0, r0, lsr #6
   22874:	andeq	r0, r0, r0, lsr #6
   22878:	andeq	r0, r0, r8, ror #7
   2287c:	andeq	r0, r0, r0, lsr #6
   22880:	andeq	r0, r0, r0, lsr #6
   22884:	andeq	r0, r0, r0, lsr #6
   22888:	andeq	r0, r0, r0, lsr #6
   2288c:	andeq	r0, r0, r0, lsr #6
   22890:	andeq	r0, r0, r0, lsr r4
   22894:	mov	r0, r5
   22898:	mov	r1, r6
   2289c:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   228a0:	mov	r0, r5
   228a4:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   228a8:	b	22ad0 <myhtml_insertion_mode_in_head@@Base+0x494>
   228ac:	mov	r4, #0
   228b0:	cmp	r0, #64	; 0x40
   228b4:	bgt	228e0 <myhtml_insertion_mode_in_head@@Base+0x2a4>
   228b8:	sub	r1, r0, #23
   228bc:	cmp	r1, #2
   228c0:	bcc	2299c <myhtml_insertion_mode_in_head@@Base+0x360>
   228c4:	cmp	r0, #61	; 0x3d
   228c8:	bne	22ad0 <myhtml_insertion_mode_in_head@@Base+0x494>
   228cc:	mov	r0, r5
   228d0:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   228d4:	mov	r0, #5
   228d8:	str	r0, [r5, #168]	; 0xa8
   228dc:	b	22ad0 <myhtml_insertion_mode_in_head@@Base+0x494>
   228e0:	cmp	r0, #65	; 0x41
   228e4:	beq	2299c <myhtml_insertion_mode_in_head@@Base+0x360>
   228e8:	cmp	r0, #128	; 0x80
   228ec:	bne	22ad0 <myhtml_insertion_mode_in_head@@Base+0x494>
   228f0:	mov	r0, r5
   228f4:	mov	r1, #128	; 0x80
   228f8:	mov	r2, #1
   228fc:	mov	r3, #0
   22900:	mov	r4, #0
   22904:	bl	10e58 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   22908:	cmp	r0, #0
   2290c:	beq	22ad0 <myhtml_insertion_mode_in_head@@Base+0x494>
   22910:	mov	r0, r5
   22914:	mov	r1, #0
   22918:	mov	r2, #0
   2291c:	mov	r4, #0
   22920:	bl	10f84 <myhtml_tree_generate_all_implied_end_tags@plt>
   22924:	mov	r0, r5
   22928:	bl	11530 <myhtml_tree_current_node@plt>
   2292c:	mov	r0, r5
   22930:	mov	r1, #128	; 0x80
   22934:	mov	r2, #1
   22938:	mov	r3, #0
   2293c:	bl	1177c <myhtml_tree_open_elements_pop_until@plt>
   22940:	mov	r0, r5
   22944:	bl	11b18 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   22948:	mov	r0, r5
   2294c:	bl	117dc <myhtml_tree_template_insertion_pop@plt>
   22950:	mov	r0, r5
   22954:	bl	115f0 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   22958:	b	22ad0 <myhtml_insertion_mode_in_head@@Base+0x494>
   2295c:	mov	r0, r5
   22960:	mov	r1, r6
   22964:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   22968:	mov	r0, #4
   2296c:	b	22abc <myhtml_insertion_mode_in_head@@Base+0x480>
   22970:	ldr	r0, [r6, #48]	; 0x30
   22974:	tst	r0, #8
   22978:	bne	22adc <myhtml_insertion_mode_in_head@@Base+0x4a0>
   2297c:	mov	r0, r5
   22980:	mov	r1, r6
   22984:	bl	10ffc <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   22988:	cmp	r0, #0
   2298c:	beq	2299c <myhtml_insertion_mode_in_head@@Base+0x360>
   22990:	mov	r1, r0
   22994:	mov	r0, r5
   22998:	bl	11074 <myhtml_tree_node_insert_text@plt>
   2299c:	mov	r0, r5
   229a0:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   229a4:	mov	r0, #5
   229a8:	mov	r4, #1
   229ac:	str	r0, [r5, #168]	; 0xa8
   229b0:	b	22ad0 <myhtml_insertion_mode_in_head@@Base+0x494>
   229b4:	mov	r0, r5
   229b8:	mov	r1, r6
   229bc:	mov	r2, #0
   229c0:	mov	r4, #0
   229c4:	bl	11284 <myhtml_tree_node_insert_comment@plt>
   229c8:	b	22ad0 <myhtml_insertion_mode_in_head@@Base+0x494>
   229cc:	mov	r0, r5
   229d0:	mov	r1, r6
   229d4:	sub	sp, fp, #24
   229d8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   229dc:	b	20fb0 <myhtml_insertion_mode_in_body@@Base>
   229e0:	ldr	r7, [r5, #180]	; 0xb4
   229e4:	mov	r0, r5
   229e8:	mov	r1, r6
   229ec:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   229f0:	tst	r7, #1
   229f4:	bne	22968 <myhtml_insertion_mode_in_head@@Base+0x32c>
   229f8:	mov	r0, #4
   229fc:	str	r0, [r5, #168]	; 0xa8
   22a00:	b	22ad0 <myhtml_insertion_mode_in_head@@Base+0x494>
   22a04:	add	r2, sp, #4
   22a08:	mov	r0, r5
   22a0c:	mov	r1, #0
   22a10:	mov	r4, #0
   22a14:	bl	11b30 <myhtml_tree_appropriate_place_inserting@plt>
   22a18:	mov	r8, r0
   22a1c:	mov	r0, r5
   22a20:	bl	110c8 <myhtml_tree_node_create@plt>
   22a24:	mov	r7, r0
   22a28:	mov	r0, #112	; 0x70
   22a2c:	mov	r1, #1
   22a30:	mov	r2, #3
   22a34:	str	r6, [r7, #32]
   22a38:	str	r2, [r7]
   22a3c:	stmib	r7, {r0, r1}
   22a40:	mov	r0, r8
   22a44:	mov	r1, r7
   22a48:	ldr	r2, [sp, #4]
   22a4c:	bl	11320 <myhtml_tree_node_insert_by_mode@plt>
   22a50:	mov	r0, r5
   22a54:	mov	r1, r7
   22a58:	bl	117b8 <myhtml_tree_open_elements_append@plt>
   22a5c:	mov	r0, #5
   22a60:	b	22abc <myhtml_insertion_mode_in_head@@Base+0x480>
   22a64:	mov	r0, r5
   22a68:	mov	r1, r6
   22a6c:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   22a70:	ldr	r0, [r5]
   22a74:	ldr	r1, [r0, #36]	; 0x24
   22a78:	mov	r0, r5
   22a7c:	bl	11188 <myhtml_tree_active_formatting_append@plt>
   22a80:	mov	r0, #17
   22a84:	str	r0, [r5, #168]	; 0xa8
   22a88:	ldr	r0, [r5, #180]	; 0xb4
   22a8c:	ldr	r1, [r5, #180]	; 0xb4
   22a90:	and	r0, r0, #2
   22a94:	eor	r0, r1, r0
   22a98:	mov	r1, #17
   22a9c:	str	r0, [r5, #180]	; 0xb4
   22aa0:	mov	r0, r5
   22aa4:	bl	11098 <myhtml_tree_template_insertion_append@plt>
   22aa8:	b	22ad0 <myhtml_insertion_mode_in_head@@Base+0x494>
   22aac:	mov	r0, r5
   22ab0:	mov	r1, r6
   22ab4:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   22ab8:	mov	r0, #2
   22abc:	str	r0, [r5, #164]	; 0xa4
   22ac0:	mov	r1, #7
   22ac4:	ldr	r0, [r5, #168]	; 0xa8
   22ac8:	str	r1, [r5, #168]	; 0xa8
   22acc:	str	r0, [r5, #172]	; 0xac
   22ad0:	mov	r0, r4
   22ad4:	sub	sp, fp, #24
   22ad8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   22adc:	mov	r0, r5
   22ae0:	mov	r1, r6
   22ae4:	bl	11074 <myhtml_tree_node_insert_text@plt>
   22ae8:	b	22ad0 <myhtml_insertion_mode_in_head@@Base+0x494>

00022aec <myhtml_insertion_mode_in_head_noscript@@Base>:
   22aec:	push	{r4, r5, fp, lr}
   22af0:	add	fp, sp, #8
   22af4:	mov	r4, r0
   22af8:	ldr	r0, [r1]
   22afc:	ldr	r2, [r1, #48]	; 0x30
   22b00:	tst	r2, #1
   22b04:	bne	22d10 <myhtml_insertion_mode_in_head_noscript@@Base+0x224>
   22b08:	sub	r0, r0, #1
   22b0c:	cmp	r0, #119	; 0x77
   22b10:	bhi	22d48 <myhtml_insertion_mode_in_head_noscript@@Base+0x25c>
   22b14:	add	r2, pc, #8
   22b18:	mov	r5, #0
   22b1c:	ldr	r0, [r2, r0, lsl #2]
   22b20:	add	pc, r2, r0
   22b24:	andeq	r0, r0, r8, lsl r2
   22b28:	andeq	r0, r0, r0, ror #3
   22b2c:	andeq	r0, r0, r8, lsr r2
   22b30:	andeq	r0, r0, r4, lsr #4
   22b34:	andeq	r0, r0, r4, lsr #4
   22b38:	andeq	r0, r0, r4, lsr #4
   22b3c:	andeq	r0, r0, r4, lsr #4
   22b40:	andeq	r0, r0, r4, lsr #4
   22b44:	andeq	r0, r0, r4, lsr #4
   22b48:	andeq	r0, r0, r4, lsr #4
   22b4c:	andeq	r0, r0, r4, lsr #4
   22b50:	andeq	r0, r0, r4, lsr #4
   22b54:	andeq	r0, r0, r4, lsr #4
   22b58:	andeq	r0, r0, r4, lsr #4
   22b5c:	andeq	r0, r0, r4, lsr #4
   22b60:	andeq	r0, r0, r0, ror #3
   22b64:	andeq	r0, r0, r4, lsr #4
   22b68:	andeq	r0, r0, r4, lsr #4
   22b6c:	andeq	r0, r0, r0, ror #3
   22b70:	andeq	r0, r0, r4, lsr #4
   22b74:	andeq	r0, r0, r4, lsr #4
   22b78:	andeq	r0, r0, r4, lsr #4
   22b7c:	andeq	r0, r0, r4, lsr #4
   22b80:	andeq	r0, r0, r4, lsr #4
   22b84:	andeq	r0, r0, r4, lsr #4
   22b88:	andeq	r0, r0, r4, lsr #4
   22b8c:	andeq	r0, r0, r4, lsr #4
   22b90:	andeq	r0, r0, r4, lsr #4
   22b94:	andeq	r0, r0, r4, lsr #4
   22b98:	andeq	r0, r0, r4, lsr #4
   22b9c:	andeq	r0, r0, r4, lsr #4
   22ba0:	andeq	r0, r0, r4, lsr #4
   22ba4:	andeq	r0, r0, r4, lsr #4
   22ba8:	andeq	r0, r0, r4, lsr #4
   22bac:	andeq	r0, r0, r4, lsr #4
   22bb0:	andeq	r0, r0, r4, lsr #4
   22bb4:	andeq	r0, r0, r4, lsr #4
   22bb8:	andeq	r0, r0, r4, lsr #4
   22bbc:	andeq	r0, r0, r4, lsr #4
   22bc0:	andeq	r0, r0, r4, lsr #4
   22bc4:	andeq	r0, r0, r4, lsr #4
   22bc8:	andeq	r0, r0, r4, lsr #4
   22bcc:	andeq	r0, r0, r4, lsr #4
   22bd0:	andeq	r0, r0, r4, lsr #4
   22bd4:	andeq	r0, r0, r4, lsr #4
   22bd8:	andeq	r0, r0, r4, lsr #4
   22bdc:	andeq	r0, r0, r4, lsr #4
   22be0:	andeq	r0, r0, r4, lsr #4
   22be4:	andeq	r0, r0, r4, lsr #4
   22be8:	andeq	r0, r0, r4, lsr #4
   22bec:	andeq	r0, r0, r4, lsr #4
   22bf0:	andeq	r0, r0, r4, lsr #4
   22bf4:	andeq	r0, r0, r4, lsr #4
   22bf8:	andeq	r0, r0, r4, lsr #4
   22bfc:	andeq	r0, r0, r4, lsr #4
   22c00:	andeq	r0, r0, r4, lsr #4
   22c04:	andeq	r0, r0, r4, lsr #4
   22c08:	andeq	r0, r0, r4, lsr #4
   22c0c:	andeq	r0, r0, r4, lsr #4
   22c10:	andeq	r0, r0, r4, lsr #4
   22c14:	andeq	r0, r0, r8, lsr r2
   22c18:	andeq	r0, r0, r4, lsr #4
   22c1c:	andeq	r0, r0, r4, lsr #4
   22c20:	andeq	r0, r0, r4, lsr #4
   22c24:	andeq	r0, r0, r0, asr #4
   22c28:	andeq	r0, r0, r4, lsr #4
   22c2c:	andeq	r0, r0, r4, lsr #4
   22c30:	andeq	r0, r0, r4, lsr #4
   22c34:	andeq	r0, r0, r4, lsr #4
   22c38:	andeq	r0, r0, r4, lsr #4
   22c3c:	andeq	r0, r0, r4, lsr #4
   22c40:	andeq	r0, r0, r4, lsr #4
   22c44:	andeq	r0, r0, r4, lsr #4
   22c48:	andeq	r0, r0, r4, lsr #4
   22c4c:	andeq	r0, r0, r4, lsr #4
   22c50:	andeq	r0, r0, r4, lsr #4
   22c54:	andeq	r0, r0, r4, lsr #4
   22c58:	andeq	r0, r0, r0, ror #3
   22c5c:	andeq	r0, r0, r4, lsr #4
   22c60:	andeq	r0, r0, r4, lsr #4
   22c64:	andeq	r0, r0, r4, lsr #4
   22c68:	andeq	r0, r0, r4, lsr #4
   22c6c:	andeq	r0, r0, r4, lsr #4
   22c70:	andeq	r0, r0, r4, lsr #4
   22c74:	andeq	r0, r0, r4, lsr #4
   22c78:	andeq	r0, r0, r0, ror #3
   22c7c:	andeq	r0, r0, r4, lsr #4
   22c80:	andeq	r0, r0, r4, lsr #4
   22c84:	andeq	r0, r0, r4, lsr #4
   22c88:	andeq	r0, r0, r4, lsr #4
   22c8c:	andeq	r0, r0, r4, lsr #4
   22c90:	andeq	r0, r0, r0, ror #3
   22c94:	andeq	r0, r0, r8, lsr r2
   22c98:	andeq	r0, r0, r4, lsr #4
   22c9c:	andeq	r0, r0, r4, lsr #4
   22ca0:	andeq	r0, r0, r4, lsr #4
   22ca4:	andeq	r0, r0, r4, lsr #4
   22ca8:	andeq	r0, r0, r4, lsr #4
   22cac:	andeq	r0, r0, r4, lsr #4
   22cb0:	andeq	r0, r0, r4, lsr #4
   22cb4:	andeq	r0, r0, r4, lsr #4
   22cb8:	andeq	r0, r0, r4, lsr #4
   22cbc:	andeq	r0, r0, r4, lsr #4
   22cc0:	andeq	r0, r0, r4, lsr #4
   22cc4:	andeq	r0, r0, r4, lsr #4
   22cc8:	andeq	r0, r0, r4, lsr #4
   22ccc:	andeq	r0, r0, r4, lsr #4
   22cd0:	andeq	r0, r0, r4, lsr #4
   22cd4:	andeq	r0, r0, r4, lsr #4
   22cd8:	andeq	r0, r0, r4, lsr #4
   22cdc:	andeq	r0, r0, r4, lsr #4
   22ce0:	andeq	r0, r0, r4, lsr #4
   22ce4:	andeq	r0, r0, r4, lsr #4
   22ce8:	andeq	r0, r0, r4, lsr #4
   22cec:	andeq	r0, r0, r4, lsr #4
   22cf0:	andeq	r0, r0, r4, lsr #4
   22cf4:	andeq	r0, r0, r4, lsr #4
   22cf8:	andeq	r0, r0, r4, lsr #4
   22cfc:	andeq	r0, r0, r4, lsr #4
   22d00:	andeq	r0, r0, r0, ror #3
   22d04:	mov	r0, r4
   22d08:	pop	{r4, r5, fp, lr}
   22d0c:	b	2263c <myhtml_insertion_mode_in_head@@Base>
   22d10:	cmp	r0, #24
   22d14:	beq	22d48 <myhtml_insertion_mode_in_head_noscript@@Base+0x25c>
   22d18:	mov	r5, #0
   22d1c:	cmp	r0, #93	; 0x5d
   22d20:	bne	22d5c <myhtml_insertion_mode_in_head_noscript@@Base+0x270>
   22d24:	mov	r0, r4
   22d28:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   22d2c:	mov	r0, #3
   22d30:	str	r0, [r4, #168]	; 0xa8
   22d34:	mov	r0, r5
   22d38:	pop	{r4, r5, fp, pc}
   22d3c:	ldr	r0, [r1, #48]	; 0x30
   22d40:	tst	r0, #8
   22d44:	bne	22d04 <myhtml_insertion_mode_in_head_noscript@@Base+0x218>
   22d48:	mov	r0, r4
   22d4c:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   22d50:	mov	r0, #3
   22d54:	mov	r5, #1
   22d58:	str	r0, [r4, #168]	; 0xa8
   22d5c:	mov	r0, r5
   22d60:	pop	{r4, r5, fp, pc}
   22d64:	mov	r0, r4
   22d68:	pop	{r4, r5, fp, lr}
   22d6c:	b	20fb0 <myhtml_insertion_mode_in_body@@Base>

00022d70 <myhtml_insertion_mode_after_head@@Base>:
   22d70:	push	{r4, r5, r6, sl, fp, lr}
   22d74:	add	fp, sp, #16
   22d78:	mov	r4, r0
   22d7c:	mov	r6, r1
   22d80:	ldr	r0, [r1]
   22d84:	ldr	r1, [r1, #48]	; 0x30
   22d88:	tst	r1, #1
   22d8c:	bne	22fec <myhtml_insertion_mode_after_head@@Base+0x27c>
   22d90:	sub	r0, r0, #1
   22d94:	cmp	r0, #133	; 0x85
   22d98:	bhi	2300c <myhtml_insertion_mode_after_head@@Base+0x29c>
   22d9c:	add	r1, pc, #8
   22da0:	mov	r5, #0
   22da4:	ldr	r0, [r1, r0, lsl #2]
   22da8:	add	pc, r1, r0
   22dac:	andeq	r0, r0, r0, lsr #5
   22db0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22db4:	andeq	r0, r0, r8, lsl #5
   22db8:	andeq	r0, r0, r0, ror #4
   22dbc:	andeq	r0, r0, r0, ror #4
   22dc0:	andeq	r0, r0, r0, ror #4
   22dc4:	andeq	r0, r0, r0, ror #4
   22dc8:	andeq	r0, r0, r0, ror #4
   22dcc:	andeq	r0, r0, r0, ror #4
   22dd0:	andeq	r0, r0, r0, ror #4
   22dd4:	andeq	r0, r0, r0, ror #4
   22dd8:	andeq	r0, r0, r0, ror #4
   22ddc:	andeq	r0, r0, r0, ror #4
   22de0:	andeq	r0, r0, r0, ror #4
   22de4:	andeq	r0, r0, r8, lsl r2
   22de8:	andeq	r0, r0, r8, lsl r2
   22dec:	andeq	r0, r0, r0, ror #4
   22df0:	andeq	r0, r0, r0, ror #4
   22df4:	andeq	r0, r0, r8, lsl r2
   22df8:	andeq	r0, r0, r0, ror #4
   22dfc:	andeq	r0, r0, r0, ror #4
   22e00:	andeq	r0, r0, r0, ror #4
   22e04:	andeq	r0, r0, ip, ror #5
   22e08:	andeq	r0, r0, r0, ror #4
   22e0c:	andeq	r0, r0, r0, ror #4
   22e10:	andeq	r0, r0, r0, ror #4
   22e14:	andeq	r0, r0, r0, ror #4
   22e18:	andeq	r0, r0, r0, ror #4
   22e1c:	andeq	r0, r0, r0, ror #4
   22e20:	andeq	r0, r0, r0, ror #4
   22e24:	andeq	r0, r0, r0, ror #4
   22e28:	andeq	r0, r0, r0, ror #4
   22e2c:	andeq	r0, r0, r0, ror #4
   22e30:	andeq	r0, r0, r0, ror #4
   22e34:	andeq	r0, r0, r0, ror #4
   22e38:	andeq	r0, r0, r0, ror #4
   22e3c:	andeq	r0, r0, r0, ror #4
   22e40:	andeq	r0, r0, r0, ror #4
   22e44:	andeq	r0, r0, r0, ror #4
   22e48:	andeq	r0, r0, r0, ror #4
   22e4c:	andeq	r0, r0, r0, ror #4
   22e50:	andeq	r0, r0, r0, ror #4
   22e54:	andeq	r0, r0, r0, ror #4
   22e58:	andeq	r0, r0, r0, ror #4
   22e5c:	andeq	r0, r0, r0, ror #4
   22e60:	andeq	r0, r0, r0, ror #4
   22e64:	andeq	r0, r0, r0, ror #4
   22e68:	andeq	r0, r0, r0, ror #4
   22e6c:	andeq	r0, r0, r0, ror #4
   22e70:	andeq	r0, r0, r0, ror #4
   22e74:	andeq	r0, r0, r0, ror #4
   22e78:	andeq	r0, r0, r0, ror #4
   22e7c:	andeq	r0, r0, r0, ror #4
   22e80:	andeq	r0, r0, r0, lsr #6
   22e84:	andeq	r0, r0, r0, ror #4
   22e88:	andeq	r0, r0, r0, ror #4
   22e8c:	andeq	r0, r0, r0, ror #4
   22e90:	andeq	r0, r0, r0, ror #4
   22e94:	andeq	r0, r0, r0, ror #4
   22e98:	andeq	r0, r0, r0, ror #4
   22e9c:	andeq	r0, r0, r8, lsl #5
   22ea0:	andeq	r0, r0, r0, ror #4
   22ea4:	andeq	r0, r0, r0, ror #4
   22ea8:	andeq	r0, r0, r0, ror #4
   22eac:	andeq	r0, r0, r4, lsr r3
   22eb0:	andeq	r0, r0, r0, ror #4
   22eb4:	andeq	r0, r0, r0, ror #4
   22eb8:	andeq	r0, r0, r0, ror #4
   22ebc:	andeq	r0, r0, r0, ror #4
   22ec0:	andeq	r0, r0, r0, ror #4
   22ec4:	andeq	r0, r0, r0, ror #4
   22ec8:	andeq	r0, r0, r0, ror #4
   22ecc:	andeq	r0, r0, r0, ror #4
   22ed0:	andeq	r0, r0, r0, ror #4
   22ed4:	andeq	r0, r0, r0, ror #4
   22ed8:	andeq	r0, r0, r0, ror #4
   22edc:	andeq	r0, r0, r0, ror #4
   22ee0:	andeq	r0, r0, r8, lsl r2
   22ee4:	andeq	r0, r0, r0, ror #4
   22ee8:	andeq	r0, r0, r0, ror #4
   22eec:	andeq	r0, r0, r0, ror #4
   22ef0:	andeq	r0, r0, r0, ror #4
   22ef4:	andeq	r0, r0, r0, ror #4
   22ef8:	andeq	r0, r0, r0, ror #4
   22efc:	andeq	r0, r0, r0, ror #4
   22f00:	andeq	r0, r0, r8, lsl r2
   22f04:	andeq	r0, r0, r0, ror #4
   22f08:	andeq	r0, r0, r0, ror #4
   22f0c:	andeq	r0, r0, r0, ror #4
   22f10:	andeq	r0, r0, r0, ror #4
   22f14:	andeq	r0, r0, r0, ror #4
   22f18:	andeq	r0, r0, r8, lsl r2
   22f1c:	andeq	r0, r0, r0, ror #4
   22f20:	andeq	r0, r0, r0, ror #4
   22f24:	andeq	r0, r0, r0, ror #4
   22f28:	andeq	r0, r0, r0, ror #4
   22f2c:	andeq	r0, r0, r0, ror #4
   22f30:	andeq	r0, r0, r0, ror #4
   22f34:	andeq	r0, r0, r0, ror #4
   22f38:	andeq	r0, r0, r0, ror #4
   22f3c:	andeq	r0, r0, r0, ror #4
   22f40:	andeq	r0, r0, r0, ror #4
   22f44:	andeq	r0, r0, r0, ror #4
   22f48:	andeq	r0, r0, r0, ror #4
   22f4c:	andeq	r0, r0, r0, ror #4
   22f50:	andeq	r0, r0, r0, ror #4
   22f54:	andeq	r0, r0, r0, ror #4
   22f58:	andeq	r0, r0, r0, ror #4
   22f5c:	andeq	r0, r0, r0, ror #4
   22f60:	andeq	r0, r0, r0, ror #4
   22f64:	andeq	r0, r0, r0, ror #4
   22f68:	andeq	r0, r0, r8, lsl r2
   22f6c:	andeq	r0, r0, r0, ror #4
   22f70:	andeq	r0, r0, r0, ror #4
   22f74:	andeq	r0, r0, r0, ror #4
   22f78:	andeq	r0, r0, r0, ror #4
   22f7c:	andeq	r0, r0, r0, ror #4
   22f80:	andeq	r0, r0, r0, ror #4
   22f84:	andeq	r0, r0, r0, ror #4
   22f88:	andeq	r0, r0, r8, lsl r2
   22f8c:	andeq	r0, r0, r0, ror #4
   22f90:	andeq	r0, r0, r0, ror #4
   22f94:	andeq	r0, r0, r0, ror #4
   22f98:	andeq	r0, r0, r0, ror #4
   22f9c:	andeq	r0, r0, r0, ror #4
   22fa0:	andeq	r0, r0, r0, ror #4
   22fa4:	andeq	r0, r0, r0, ror #4
   22fa8:	andeq	r0, r0, r8, lsl r2
   22fac:	andeq	r0, r0, r0, ror #4
   22fb0:	andeq	r0, r0, r0, ror #4
   22fb4:	andeq	r0, r0, r0, ror #4
   22fb8:	andeq	r0, r0, r0, ror #4
   22fbc:	andeq	r0, r0, r0, ror #4
   22fc0:	andeq	r0, r0, r8, lsl r2
   22fc4:	ldr	r1, [r4, #92]	; 0x5c
   22fc8:	mov	r0, r4
   22fcc:	bl	117b8 <myhtml_tree_open_elements_append@plt>
   22fd0:	mov	r0, r4
   22fd4:	mov	r1, r6
   22fd8:	bl	11134 <myhtml_insertion_mode_in_head@plt>
   22fdc:	ldr	r1, [r4, #92]	; 0x5c
   22fe0:	mov	r0, r4
   22fe4:	bl	1126c <myhtml_tree_open_elements_remove@plt>
   22fe8:	b	23034 <myhtml_insertion_mode_after_head@@Base+0x2c4>
   22fec:	sub	r1, r0, #23
   22ff0:	cmp	r1, #2
   22ff4:	bcc	2300c <myhtml_insertion_mode_after_head@@Base+0x29c>
   22ff8:	cmp	r0, #128	; 0x80
   22ffc:	beq	2303c <myhtml_insertion_mode_after_head@@Base+0x2cc>
   23000:	mov	r5, #0
   23004:	cmp	r0, #65	; 0x41
   23008:	bne	23034 <myhtml_insertion_mode_after_head@@Base+0x2c4>
   2300c:	mov	r0, r4
   23010:	mov	r1, #23
   23014:	mov	r2, #1
   23018:	mov	r5, #1
   2301c:	bl	117a0 <myhtml_tree_node_insert@plt>
   23020:	str	r0, [r4, #100]	; 0x64
   23024:	mov	r0, #6
   23028:	str	r0, [r4, #168]	; 0xa8
   2302c:	mov	r0, r5
   23030:	pop	{r4, r5, r6, sl, fp, pc}
   23034:	mov	r0, r5
   23038:	pop	{r4, r5, r6, sl, fp, pc}
   2303c:	mov	r0, r4
   23040:	mov	r1, r6
   23044:	pop	{r4, r5, r6, sl, fp, lr}
   23048:	b	2263c <myhtml_insertion_mode_in_head@@Base>
   2304c:	ldr	r0, [r6, #48]	; 0x30
   23050:	tst	r0, #8
   23054:	bne	230f0 <myhtml_insertion_mode_after_head@@Base+0x380>
   23058:	mov	r0, r4
   2305c:	mov	r1, r6
   23060:	bl	10ffc <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   23064:	cmp	r0, #0
   23068:	beq	2300c <myhtml_insertion_mode_after_head@@Base+0x29c>
   2306c:	mov	r1, r0
   23070:	mov	r0, r4
   23074:	bl	11074 <myhtml_tree_node_insert_text@plt>
   23078:	b	2300c <myhtml_insertion_mode_after_head@@Base+0x29c>
   2307c:	mov	r0, r4
   23080:	mov	r1, r6
   23084:	mov	r2, #0
   23088:	mov	r5, #0
   2308c:	bl	11284 <myhtml_tree_node_insert_comment@plt>
   23090:	mov	r0, r5
   23094:	pop	{r4, r5, r6, sl, fp, pc}
   23098:	mov	r0, r4
   2309c:	mov	r1, r6
   230a0:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   230a4:	str	r0, [r4, #100]	; 0x64
   230a8:	mov	r0, #6
   230ac:	str	r0, [r4, #168]	; 0xa8
   230b0:	ldr	r0, [r4, #180]	; 0xb4
   230b4:	ldr	r1, [r4, #180]	; 0xb4
   230b8:	and	r0, r0, #2
   230bc:	eor	r0, r1, r0
   230c0:	str	r0, [r4, #180]	; 0xb4
   230c4:	mov	r0, r5
   230c8:	pop	{r4, r5, r6, sl, fp, pc}
   230cc:	mov	r0, r4
   230d0:	mov	r1, r6
   230d4:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   230d8:	mov	r0, #19
   230dc:	b	23028 <myhtml_insertion_mode_after_head@@Base+0x2b8>
   230e0:	mov	r0, r4
   230e4:	mov	r1, r6
   230e8:	pop	{r4, r5, r6, sl, fp, lr}
   230ec:	b	20fb0 <myhtml_insertion_mode_in_body@@Base>
   230f0:	mov	r0, r4
   230f4:	mov	r1, r6
   230f8:	bl	11074 <myhtml_tree_node_insert_text@plt>
   230fc:	mov	r0, r5
   23100:	pop	{r4, r5, r6, sl, fp, pc}

00023104 <myhtml_insertion_mode_in_body_other_end_tag@@Base>:
   23104:	push	{r4, r5, r6, r7, fp, lr}
   23108:	add	fp, sp, #16
   2310c:	mov	r4, r0
   23110:	ldr	r0, [r0, #128]	; 0x80
   23114:	mov	r5, r1
   23118:	ldr	r0, [r0, #4]
   2311c:	rsb	r7, r0, #1
   23120:	cmp	r7, #1
   23124:	beq	2316c <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x68>
   23128:	ldr	r0, [r4, #128]	; 0x80
   2312c:	ldr	r0, [r0]
   23130:	ldr	r6, [r0, -r7, lsl #2]
   23134:	ldr	r0, [r5]
   23138:	ldr	r1, [r6, #4]
   2313c:	cmp	r1, r0
   23140:	ldreq	r0, [r6, #8]
   23144:	cmpeq	r0, #1
   23148:	beq	23174 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x70>
   2314c:	ldr	r0, [r4, #28]
   23150:	bl	11818 <myhtml_tag_get_by_id@plt>
   23154:	ldr	r1, [r6, #8]
   23158:	add	r7, r7, #1
   2315c:	add	r0, r0, r1, lsl #2
   23160:	ldrb	r0, [r0, #16]
   23164:	tst	r0, #2
   23168:	beq	23120 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x1c>
   2316c:	mov	r0, #0
   23170:	pop	{r4, r5, r6, r7, fp, pc}
   23174:	mov	r0, r4
   23178:	mov	r2, #1
   2317c:	bl	115c0 <myhtml_tree_generate_implied_end_tags@plt>
   23180:	mov	r0, r4
   23184:	bl	11530 <myhtml_tree_current_node@plt>
   23188:	mov	r0, r4
   2318c:	mov	r1, r6
   23190:	mov	r2, #0
   23194:	bl	111c4 <myhtml_tree_open_elements_pop_until_by_node@plt>
   23198:	mov	r0, #0
   2319c:	pop	{r4, r5, r6, r7, fp, pc}

000231a0 <myhtml_insertion_mode_in_template@@Base>:
   231a0:	push	{r4, r5, fp, lr}
   231a4:	add	fp, sp, #8
   231a8:	mov	r4, r0
   231ac:	ldr	r0, [r1]
   231b0:	ldr	r2, [r1, #48]	; 0x30
   231b4:	tst	r2, #1
   231b8:	bne	233fc <myhtml_insertion_mode_in_template@@Base+0x25c>
   231bc:	sub	r2, r0, #1
   231c0:	cmp	r2, #134	; 0x86
   231c4:	bhi	23444 <myhtml_insertion_mode_in_template@@Base+0x2a4>
   231c8:	add	r0, pc, #4
   231cc:	ldr	r2, [r0, r2, lsl #2]
   231d0:	add	pc, r0, r2
   231d4:	andeq	r0, r0, r4, lsr r2
   231d8:	andeq	r0, r0, r4, lsr r2
   231dc:	andeq	r0, r0, r4, lsr r2
   231e0:	andeq	r0, r0, r4, asr #5
   231e4:	andeq	r0, r0, r4, asr #5
   231e8:	andeq	r0, r0, r4, asr #5
   231ec:	andeq	r0, r0, r4, asr #5
   231f0:	andeq	r0, r0, r4, asr #5
   231f4:	andeq	r0, r0, r4, asr #5
   231f8:	andeq	r0, r0, r4, asr #5
   231fc:	andeq	r0, r0, r4, asr #5
   23200:	andeq	r0, r0, r4, asr #5
   23204:	andeq	r0, r0, r4, asr #5
   23208:	andeq	r0, r0, r4, asr #5
   2320c:	andeq	r0, r0, ip, lsl r2
   23210:	andeq	r0, r0, ip, lsl r2
   23214:	andeq	r0, r0, r4, asr #5
   23218:	andeq	r0, r0, r4, asr #5
   2321c:	andeq	r0, r0, ip, lsl r2
   23220:	andeq	r0, r0, r4, asr #5
   23224:	andeq	r0, r0, r4, asr #5
   23228:	andeq	r0, r0, r4, asr #5
   2322c:	andeq	r0, r0, r4, asr #5
   23230:	andeq	r0, r0, r4, asr #5
   23234:	andeq	r0, r0, r4, asr #5
   23238:	andeq	r0, r0, r4, asr #5
   2323c:	andeq	r0, r0, r0, asr #4
   23240:	andeq	r0, r0, r4, asr #5
   23244:	andeq	r0, r0, r4, asr #5
   23248:	andeq	r0, r0, r4, asr #5
   2324c:	ldrdeq	r0, [r0], -ip
   23250:	andeq	r0, r0, r0, asr #4
   23254:	andeq	r0, r0, r4, asr #5
   23258:	andeq	r0, r0, r4, asr #5
   2325c:	andeq	r0, r0, r4, asr #5
   23260:	andeq	r0, r0, r4, asr #5
   23264:	andeq	r0, r0, r4, asr #5
   23268:	andeq	r0, r0, r4, asr #5
   2326c:	andeq	r0, r0, r4, asr #5
   23270:	andeq	r0, r0, r4, asr #5
   23274:	andeq	r0, r0, r4, asr #5
   23278:	andeq	r0, r0, r4, asr #5
   2327c:	andeq	r0, r0, r4, asr #5
   23280:	andeq	r0, r0, r4, asr #5
   23284:	andeq	r0, r0, r4, asr #5
   23288:	andeq	r0, r0, r4, asr #5
   2328c:	andeq	r0, r0, r4, asr #5
   23290:	andeq	r0, r0, r4, asr #5
   23294:	andeq	r0, r0, r4, asr #5
   23298:	andeq	r0, r0, r4, asr #5
   2329c:	andeq	r0, r0, r4, asr #5
   232a0:	andeq	r0, r0, r4, asr #5
   232a4:	andeq	r0, r0, r4, asr #5
   232a8:	andeq	r0, r0, r4, asr #5
   232ac:	andeq	r0, r0, r4, asr #5
   232b0:	andeq	r0, r0, r4, asr #5
   232b4:	andeq	r0, r0, r4, asr #5
   232b8:	andeq	r0, r0, r4, asr #5
   232bc:	andeq	r0, r0, r4, asr #5
   232c0:	andeq	r0, r0, r4, asr #5
   232c4:	andeq	r0, r0, r4, asr #5
   232c8:	andeq	r0, r0, r4, asr #5
   232cc:	andeq	r0, r0, r4, asr #5
   232d0:	andeq	r0, r0, r4, asr #5
   232d4:	andeq	r0, r0, r4, asr #5
   232d8:	andeq	r0, r0, r4, asr #5
   232dc:	andeq	r0, r0, r4, asr #5
   232e0:	andeq	r0, r0, r4, asr #5
   232e4:	andeq	r0, r0, r4, asr #5
   232e8:	andeq	r0, r0, r4, asr #5
   232ec:	andeq	r0, r0, r4, asr #5
   232f0:	andeq	r0, r0, r4, asr #5
   232f4:	andeq	r0, r0, r4, asr #5
   232f8:	andeq	r0, r0, r4, asr #5
   232fc:	andeq	r0, r0, r4, asr #5
   23300:	andeq	r0, r0, r4, asr #5
   23304:	andeq	r0, r0, r4, asr #5
   23308:	andeq	r0, r0, ip, lsl r2
   2330c:	andeq	r0, r0, r4, asr #5
   23310:	andeq	r0, r0, r4, asr #5
   23314:	andeq	r0, r0, r4, asr #5
   23318:	andeq	r0, r0, r4, asr #5
   2331c:	andeq	r0, r0, r4, asr #5
   23320:	andeq	r0, r0, r4, asr #5
   23324:	andeq	r0, r0, r4, asr #5
   23328:	andeq	r0, r0, ip, lsl r2
   2332c:	andeq	r0, r0, r4, asr #5
   23330:	andeq	r0, r0, r4, asr #5
   23334:	andeq	r0, r0, r4, asr #5
   23338:	andeq	r0, r0, r4, asr #5
   2333c:	andeq	r0, r0, r4, asr #5
   23340:	andeq	r0, r0, ip, lsl r2
   23344:	andeq	r0, r0, r4, asr #5
   23348:	andeq	r0, r0, r4, asr #5
   2334c:	andeq	r0, r0, r4, asr #5
   23350:	andeq	r0, r0, r4, asr #5
   23354:	andeq	r0, r0, r4, asr #5
   23358:	andeq	r0, r0, r4, asr #5
   2335c:	andeq	r0, r0, r4, asr #5
   23360:	andeq	r0, r0, r4, asr #5
   23364:	andeq	r0, r0, r4, asr #5
   23368:	andeq	r0, r0, r4, asr #5
   2336c:	andeq	r0, r0, r4, asr #5
   23370:	andeq	r0, r0, r4, asr #5
   23374:	andeq	r0, r0, r4, asr #5
   23378:	andeq	r0, r0, r4, asr #5
   2337c:	andeq	r0, r0, r4, asr #5
   23380:	andeq	r0, r0, r4, asr #5
   23384:	andeq	r0, r0, r4, asr #5
   23388:	andeq	r0, r0, r4, asr #5
   2338c:	andeq	r0, r0, r4, asr #5
   23390:	andeq	r0, r0, ip, lsl r2
   23394:	andeq	r0, r0, r4, asr #5
   23398:	andeq	r0, r0, r4, asr #5
   2339c:	andeq	r0, r0, r4, asr #5
   233a0:	andeq	r0, r0, r4, asr #5
   233a4:	andeq	r0, r0, r4, asr #5
   233a8:	andeq	r0, r0, r4, asr #5
   233ac:	andeq	r0, r0, r4, asr #5
   233b0:	andeq	r0, r0, ip, lsl r2
   233b4:	andeq	r0, r0, r4, asr #5
   233b8:	andeq	r0, r0, r4, asr #5
   233bc:	andeq	r0, r0, r4, asr #5
   233c0:	andeq	r0, r0, r4, asr #5
   233c4:	andeq	r0, r0, r4, asr #5
   233c8:	andeq	r0, r0, r0, asr #4
   233cc:	andeq	r0, r0, r8, asr r2
   233d0:	andeq	r0, r0, ip, lsl r2
   233d4:	andeq	r0, r0, r4, asr #5
   233d8:	andeq	r0, r0, r0, asr #4
   233dc:	andeq	r0, r0, r8, asr r2
   233e0:	andeq	r0, r0, r0, asr #4
   233e4:	andeq	r0, r0, r4, asr #5
   233e8:	andeq	r0, r0, ip, lsl r2
   233ec:	strdeq	r0, [r0], -r4
   233f0:	mov	r0, r4
   233f4:	pop	{r4, r5, fp, lr}
   233f8:	b	2263c <myhtml_insertion_mode_in_head@@Base>
   233fc:	mov	r5, #0
   23400:	cmp	r0, #128	; 0x80
   23404:	bne	234e8 <myhtml_insertion_mode_in_template@@Base+0x348>
   23408:	mov	r0, r4
   2340c:	pop	{r4, r5, fp, lr}
   23410:	b	20fb0 <myhtml_insertion_mode_in_body@@Base>
   23414:	mov	r0, r4
   23418:	bl	117dc <myhtml_tree_template_insertion_pop@plt>
   2341c:	mov	r5, #8
   23420:	mov	r0, r4
   23424:	mov	r1, #8
   23428:	b	234dc <myhtml_insertion_mode_in_template@@Base+0x33c>
   2342c:	mov	r0, r4
   23430:	bl	117dc <myhtml_tree_template_insertion_pop@plt>
   23434:	mov	r5, #13
   23438:	mov	r0, r4
   2343c:	mov	r1, #13
   23440:	b	234dc <myhtml_insertion_mode_in_template@@Base+0x33c>
   23444:	cmp	r0, #251	; 0xfb
   23448:	bne	23498 <myhtml_insertion_mode_in_template@@Base+0x2f8>
   2344c:	mov	r0, r4
   23450:	mov	r1, #128	; 0x80
   23454:	mov	r2, #1
   23458:	mov	r3, #0
   2345c:	mov	r5, #0
   23460:	bl	11680 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   23464:	cmp	r0, #0
   23468:	beq	234e8 <myhtml_insertion_mode_in_template@@Base+0x348>
   2346c:	mov	r1, r0
   23470:	mov	r0, r4
   23474:	mov	r2, #0
   23478:	bl	111c4 <myhtml_tree_open_elements_pop_until_by_node@plt>
   2347c:	mov	r0, r4
   23480:	bl	11b18 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   23484:	mov	r0, r4
   23488:	bl	117dc <myhtml_tree_template_insertion_pop@plt>
   2348c:	mov	r0, r4
   23490:	bl	115f0 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   23494:	b	234e4 <myhtml_insertion_mode_in_template@@Base+0x344>
   23498:	mov	r0, r4
   2349c:	bl	117dc <myhtml_tree_template_insertion_pop@plt>
   234a0:	mov	r5, #6
   234a4:	mov	r0, r4
   234a8:	mov	r1, #6
   234ac:	b	234dc <myhtml_insertion_mode_in_template@@Base+0x33c>
   234b0:	mov	r0, r4
   234b4:	bl	117dc <myhtml_tree_template_insertion_pop@plt>
   234b8:	mov	r5, #11
   234bc:	mov	r0, r4
   234c0:	mov	r1, #11
   234c4:	b	234dc <myhtml_insertion_mode_in_template@@Base+0x33c>
   234c8:	mov	r0, r4
   234cc:	bl	117dc <myhtml_tree_template_insertion_pop@plt>
   234d0:	mov	r5, #12
   234d4:	mov	r0, r4
   234d8:	mov	r1, #12
   234dc:	bl	11098 <myhtml_tree_template_insertion_append@plt>
   234e0:	str	r5, [r4, #168]	; 0xa8
   234e4:	mov	r5, #1
   234e8:	mov	r0, r5
   234ec:	pop	{r4, r5, fp, pc}

000234f0 <myhtml_rules_stop_parsing@@Base>:
   234f0:	bx	lr

000234f4 <myhtml_insertion_mode_text@@Base>:
   234f4:	push	{r4, sl, fp, lr}
   234f8:	add	fp, sp, #8
   234fc:	mov	r4, r0
   23500:	ldr	r0, [r1, #48]	; 0x30
   23504:	tst	r0, #1
   23508:	bne	2354c <myhtml_insertion_mode_text@@Base+0x58>
   2350c:	ldr	r0, [r1]
   23510:	cmp	r0, #251	; 0xfb
   23514:	bne	23564 <myhtml_insertion_mode_text@@Base+0x70>
   23518:	mov	r0, r4
   2351c:	bl	11530 <myhtml_tree_current_node@plt>
   23520:	ldr	r1, [r0, #4]
   23524:	cmp	r1, #112	; 0x70
   23528:	ldreq	r1, [r0]
   2352c:	orreq	r1, r1, #8
   23530:	streq	r1, [r0]
   23534:	mov	r0, r4
   23538:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   2353c:	ldr	r0, [r4, #172]	; 0xac
   23540:	str	r0, [r4, #168]	; 0xa8
   23544:	mov	r0, #1
   23548:	pop	{r4, sl, fp, pc}
   2354c:	mov	r0, r4
   23550:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   23554:	ldr	r0, [r4, #172]	; 0xac
   23558:	str	r0, [r4, #168]	; 0xa8
   2355c:	mov	r0, #0
   23560:	pop	{r4, sl, fp, pc}
   23564:	mov	r0, r4
   23568:	bl	11074 <myhtml_tree_node_insert_text@plt>
   2356c:	mov	r0, #0
   23570:	pop	{r4, sl, fp, pc}

00023574 <myhtml_insertion_mode_in_table@@Base>:
   23574:	push	{r4, r5, r6, sl, fp, lr}
   23578:	add	fp, sp, #16
   2357c:	sub	sp, sp, #8
   23580:	mov	r4, r0
   23584:	mov	r6, r1
   23588:	ldr	r0, [r1]
   2358c:	ldr	r1, [r1, #48]	; 0x30
   23590:	tst	r1, #1
   23594:	bne	237e8 <myhtml_insertion_mode_in_table@@Base+0x274>
   23598:	sub	r1, r0, #1
   2359c:	cmp	r1, #134	; 0x86
   235a0:	bhi	23a40 <myhtml_insertion_mode_in_table@@Base+0x4cc>
   235a4:	add	r0, pc, #8
   235a8:	mov	r5, #0
   235ac:	ldr	r1, [r0, r1, lsl #2]
   235b0:	add	pc, r0, r1
   235b4:	muleq	r0, r8, r4
   235b8:	andeq	r0, r0, ip, ror #9
   235bc:	andeq	r0, r0, r4, asr #12
   235c0:	andeq	r0, r0, r8, lsr #12
   235c4:	andeq	r0, r0, r8, lsr #12
   235c8:	andeq	r0, r0, r8, lsr #12
   235cc:	andeq	r0, r0, r8, lsr #12
   235d0:	andeq	r0, r0, r8, lsr #12
   235d4:	andeq	r0, r0, r8, lsr #12
   235d8:	andeq	r0, r0, r8, lsr #12
   235dc:	andeq	r0, r0, r8, lsr #12
   235e0:	andeq	r0, r0, r8, lsr #12
   235e4:	andeq	r0, r0, r8, lsr #12
   235e8:	andeq	r0, r0, r8, lsr #12
   235ec:	andeq	r0, r0, r8, lsr #12
   235f0:	andeq	r0, r0, r8, lsr #12
   235f4:	andeq	r0, r0, r8, lsr #12
   235f8:	andeq	r0, r0, r8, lsr #12
   235fc:	andeq	r0, r0, r8, lsr #12
   23600:	andeq	r0, r0, r8, lsr #12
   23604:	andeq	r0, r0, r8, lsr #12
   23608:	andeq	r0, r0, r8, lsr #12
   2360c:	andeq	r0, r0, r8, lsr #12
   23610:	andeq	r0, r0, r8, lsr #12
   23614:	andeq	r0, r0, r8, lsr #12
   23618:	andeq	r0, r0, r8, lsr #12
   2361c:	andeq	r0, r0, r4, lsl #10
   23620:	andeq	r0, r0, r8, lsr #12
   23624:	andeq	r0, r0, r8, lsr #12
   23628:	andeq	r0, r0, r8, lsr #12
   2362c:	andeq	r0, r0, r4, lsr r5
   23630:	andeq	r0, r0, r4, asr r5
   23634:	andeq	r0, r0, r8, lsr #12
   23638:	andeq	r0, r0, r8, lsr #12
   2363c:	andeq	r0, r0, r8, lsr #12
   23640:	andeq	r0, r0, r8, lsr #12
   23644:	andeq	r0, r0, r8, lsr #12
   23648:	andeq	r0, r0, r8, lsr #12
   2364c:	andeq	r0, r0, r8, lsr #12
   23650:	andeq	r0, r0, r8, lsr #12
   23654:	andeq	r0, r0, r8, lsr #12
   23658:	andeq	r0, r0, r8, lsr #12
   2365c:	andeq	r0, r0, r8, lsr #12
   23660:	andeq	r0, r0, r8, lsr #12
   23664:	andeq	r0, r0, r8, lsr #12
   23668:	andeq	r0, r0, r8, lsr #12
   2366c:	andeq	r0, r0, r8, lsr #12
   23670:	andeq	r0, r0, r8, lsr #12
   23674:	andeq	r0, r0, r8, lsr #12
   23678:	andeq	r0, r0, r8, lsr #12
   2367c:	andeq	r0, r0, r8, lsr #12
   23680:	andeq	r0, r0, r4, ror r5
   23684:	andeq	r0, r0, r8, lsr #12
   23688:	andeq	r0, r0, r8, lsr #12
   2368c:	andeq	r0, r0, r8, lsr #12
   23690:	andeq	r0, r0, r8, lsr #12
   23694:	andeq	r0, r0, r8, lsr #12
   23698:	andeq	r0, r0, r8, lsr #12
   2369c:	andeq	r0, r0, r8, lsr #12
   236a0:	andeq	r0, r0, r8, lsr #12
   236a4:	andeq	r0, r0, r8, lsr #12
   236a8:	andeq	r0, r0, r8, lsr #12
   236ac:	andeq	r0, r0, r8, lsr #12
   236b0:	andeq	r0, r0, r8, lsr #12
   236b4:	andeq	r0, r0, r8, lsr #12
   236b8:	andeq	r0, r0, r8, lsr #12
   236bc:	andeq	r0, r0, r8, lsr #12
   236c0:	andeq	r0, r0, r8, lsr #12
   236c4:	andeq	r0, r0, r8, lsr #12
   236c8:	andeq	r0, r0, r4, asr #11
   236cc:	andeq	r0, r0, r8, lsr #12
   236d0:	andeq	r0, r0, r8, lsr #12
   236d4:	andeq	r0, r0, r8, lsr #12
   236d8:	andeq	r0, r0, r8, lsr #12
   236dc:	andeq	r0, r0, r8, lsr #12
   236e0:	andeq	r0, r0, r8, lsr #12
   236e4:	andeq	r0, r0, r8, lsr #12
   236e8:	andeq	r0, r0, r8, lsr #12
   236ec:	andeq	r0, r0, r8, lsr #12
   236f0:	andeq	r0, r0, r8, lsr #12
   236f4:	andeq	r0, r0, r8, lsr #12
   236f8:	andeq	r0, r0, r8, lsr #12
   236fc:	andeq	r0, r0, r8, lsr #12
   23700:	andeq	r0, r0, r8, lsr #12
   23704:	andeq	r0, r0, r8, lsr #12
   23708:	andeq	r0, r0, r8, lsr #12
   2370c:	andeq	r0, r0, r8, lsr #12
   23710:	andeq	r0, r0, r8, lsr #12
   23714:	andeq	r0, r0, r8, lsr #12
   23718:	andeq	r0, r0, r8, lsr #12
   2371c:	andeq	r0, r0, r8, lsr #12
   23720:	andeq	r0, r0, r8, lsr #12
   23724:	andeq	r0, r0, r8, lsr #12
   23728:	andeq	r0, r0, r8, lsr #12
   2372c:	andeq	r0, r0, r8, lsr #12
   23730:	andeq	r0, r0, r8, lsr #12
   23734:	andeq	r0, r0, r8, lsr #12
   23738:	andeq	r0, r0, r8, lsr #12
   2373c:	andeq	r0, r0, r8, lsr #12
   23740:	andeq	r0, r0, r8, lsr #12
   23744:	andeq	r0, r0, r8, lsr #12
   23748:	andeq	r0, r0, r8, lsr #12
   2374c:	andeq	r0, r0, r8, lsr #12
   23750:	andeq	r0, r0, r8, lsr #12
   23754:	andeq	r0, r0, r8, lsr #12
   23758:	andeq	r0, r0, r8, lsr #12
   2375c:	andeq	r0, r0, r8, lsr #12
   23760:	andeq	r0, r0, r8, lsr #12
   23764:	andeq	r0, r0, r8, lsr #12
   23768:	andeq	r0, r0, r8, lsr #12
   2376c:	andeq	r0, r0, r8, lsr #12
   23770:	andeq	r0, r0, r0, asr r4
   23774:	andeq	r0, r0, r8, lsr #12
   23778:	andeq	r0, r0, r8, lsr #12
   2377c:	andeq	r0, r0, r8, lsr #12
   23780:	andeq	r0, r0, r8, lsr #12
   23784:	andeq	r0, r0, r8, lsr #12
   23788:	andeq	r0, r0, r8, lsr #12
   2378c:	andeq	r0, r0, r8, lsr #12
   23790:	andeq	r0, r0, r0, asr r4
   23794:	andeq	r0, r0, r8, lsr #12
   23798:	andeq	r0, r0, r8, lsr #12
   2379c:	andeq	r0, r0, r8, lsr #12
   237a0:	andeq	r0, r0, r8, lsr #12
   237a4:	andeq	r0, r0, r0, asr r6
   237a8:	andeq	r0, r0, ip, lsl r2
   237ac:	andeq	r0, r0, r4, ror #8
   237b0:	andeq	r0, r0, r0, asr r4
   237b4:	andeq	r0, r0, r8, lsr #12
   237b8:	andeq	r0, r0, ip, lsl r2
   237bc:	andeq	r0, r0, r4, ror #8
   237c0:	andeq	r0, r0, ip, lsl r2
   237c4:	andeq	r0, r0, r8, lsr #12
   237c8:	andeq	r0, r0, r8, lsr #12
   237cc:	andeq	r0, r0, r4, ror #8
   237d0:	mov	r0, r4
   237d4:	bl	11c20 <myhtml_tree_clear_stack_back_table_context@plt>
   237d8:	mov	r0, r4
   237dc:	mov	r1, r6
   237e0:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   237e4:	b	23a34 <myhtml_insertion_mode_in_table@@Base+0x4c0>
   237e8:	sub	r0, r0, #23
   237ec:	cmp	r0, #112	; 0x70
   237f0:	bhi	23bdc <myhtml_insertion_mode_in_table@@Base+0x668>
   237f4:	add	r1, pc, #8
   237f8:	mov	r5, #0
   237fc:	ldr	r0, [r1, r0, lsl #2]
   23800:	add	pc, r1, r0
   23804:	strdeq	r0, [r0], -r4
   23808:	ldrdeq	r0, [r0], -r8
   2380c:	ldrdeq	r0, [r0], -r8
   23810:	ldrdeq	r0, [r0], -r8
   23814:	strdeq	r0, [r0], -r4
   23818:	ldrdeq	r0, [r0], -r8
   2381c:	ldrdeq	r0, [r0], -r8
   23820:	ldrdeq	r0, [r0], -r8
   23824:	strdeq	r0, [r0], -r4
   23828:	strdeq	r0, [r0], -r4
   2382c:	ldrdeq	r0, [r0], -r8
   23830:	ldrdeq	r0, [r0], -r8
   23834:	ldrdeq	r0, [r0], -r8
   23838:	ldrdeq	r0, [r0], -r8
   2383c:	ldrdeq	r0, [r0], -r8
   23840:	ldrdeq	r0, [r0], -r8
   23844:	ldrdeq	r0, [r0], -r8
   23848:	ldrdeq	r0, [r0], -r8
   2384c:	ldrdeq	r0, [r0], -r8
   23850:	ldrdeq	r0, [r0], -r8
   23854:	ldrdeq	r0, [r0], -r8
   23858:	ldrdeq	r0, [r0], -r8
   2385c:	ldrdeq	r0, [r0], -r8
   23860:	ldrdeq	r0, [r0], -r8
   23864:	ldrdeq	r0, [r0], -r8
   23868:	ldrdeq	r0, [r0], -r8
   2386c:	ldrdeq	r0, [r0], -r8
   23870:	ldrdeq	r0, [r0], -r8
   23874:	ldrdeq	r0, [r0], -r8
   23878:	ldrdeq	r0, [r0], -r8
   2387c:	ldrdeq	r0, [r0], -r8
   23880:	ldrdeq	r0, [r0], -r8
   23884:	ldrdeq	r0, [r0], -r8
   23888:	ldrdeq	r0, [r0], -r8
   2388c:	ldrdeq	r0, [r0], -r8
   23890:	ldrdeq	r0, [r0], -r8
   23894:	ldrdeq	r0, [r0], -r8
   23898:	ldrdeq	r0, [r0], -r8
   2389c:	ldrdeq	r0, [r0], -r8
   238a0:	ldrdeq	r0, [r0], -r8
   238a4:	ldrdeq	r0, [r0], -r8
   238a8:	ldrdeq	r0, [r0], -r8
   238ac:	strdeq	r0, [r0], -r4
   238b0:	ldrdeq	r0, [r0], -r8
   238b4:	ldrdeq	r0, [r0], -r8
   238b8:	ldrdeq	r0, [r0], -r8
   238bc:	ldrdeq	r0, [r0], -r8
   238c0:	ldrdeq	r0, [r0], -r8
   238c4:	ldrdeq	r0, [r0], -r8
   238c8:	ldrdeq	r0, [r0], -r8
   238cc:	ldrdeq	r0, [r0], -r8
   238d0:	ldrdeq	r0, [r0], -r8
   238d4:	ldrdeq	r0, [r0], -r8
   238d8:	ldrdeq	r0, [r0], -r8
   238dc:	ldrdeq	r0, [r0], -r8
   238e0:	ldrdeq	r0, [r0], -r8
   238e4:	ldrdeq	r0, [r0], -r8
   238e8:	ldrdeq	r0, [r0], -r8
   238ec:	ldrdeq	r0, [r0], -r8
   238f0:	ldrdeq	r0, [r0], -r8
   238f4:	ldrdeq	r0, [r0], -r8
   238f8:	ldrdeq	r0, [r0], -r8
   238fc:	ldrdeq	r0, [r0], -r8
   23900:	ldrdeq	r0, [r0], -r8
   23904:	ldrdeq	r0, [r0], -r8
   23908:	ldrdeq	r0, [r0], -r8
   2390c:	ldrdeq	r0, [r0], -r8
   23910:	ldrdeq	r0, [r0], -r8
   23914:	ldrdeq	r0, [r0], -r8
   23918:	ldrdeq	r0, [r0], -r8
   2391c:	ldrdeq	r0, [r0], -r8
   23920:	ldrdeq	r0, [r0], -r8
   23924:	ldrdeq	r0, [r0], -r8
   23928:	ldrdeq	r0, [r0], -r8
   2392c:	ldrdeq	r0, [r0], -r8
   23930:	ldrdeq	r0, [r0], -r8
   23934:	ldrdeq	r0, [r0], -r8
   23938:	ldrdeq	r0, [r0], -r8
   2393c:	ldrdeq	r0, [r0], -r8
   23940:	ldrdeq	r0, [r0], -r8
   23944:	ldrdeq	r0, [r0], -r8
   23948:	ldrdeq	r0, [r0], -r8
   2394c:	ldrdeq	r0, [r0], -r8
   23950:	ldrdeq	r0, [r0], -r8
   23954:	ldrdeq	r0, [r0], -r8
   23958:	ldrdeq	r0, [r0], -r8
   2395c:	ldrdeq	r0, [r0], -r8
   23960:	ldrdeq	r0, [r0], -r8
   23964:	ldrdeq	r0, [r0], -r8
   23968:	ldrdeq	r0, [r0], -r8
   2396c:	ldrdeq	r0, [r0], -r8
   23970:	ldrdeq	r0, [r0], -r8
   23974:	ldrdeq	r0, [r0], -r8
   23978:	ldrdeq	r0, [r0], -r8
   2397c:	ldrdeq	r0, [r0], -r8
   23980:	ldrdeq	r0, [r0], -r8
   23984:	ldrdeq	r0, [r0], -r8
   23988:	ldrdeq	r0, [r0], -r8
   2398c:	ldrdeq	r0, [r0], -r8
   23990:	ldrdeq	r0, [r0], -r8
   23994:	ldrdeq	r0, [r0], -r8
   23998:	ldrdeq	r0, [r0], -r8
   2399c:	andeq	r0, r0, r4, asr #3
   239a0:	strdeq	r0, [r0], -r4
   239a4:	strdeq	r0, [r0], -r4
   239a8:	andeq	r0, r0, r0, lsl #4
   239ac:	ldrdeq	r0, [r0], -r8
   239b0:	strdeq	r0, [r0], -r4
   239b4:	strdeq	r0, [r0], -r4
   239b8:	strdeq	r0, [r0], -r4
   239bc:	ldrdeq	r0, [r0], -r8
   239c0:	ldrdeq	r0, [r0], -r8
   239c4:	strdeq	r0, [r0], -r4
   239c8:	mov	r0, r4
   239cc:	mov	r1, #125	; 0x7d
   239d0:	mov	r2, #1
   239d4:	mov	r3, #64	; 0x40
   239d8:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   239dc:	cmp	r0, #0
   239e0:	beq	23bf8 <myhtml_insertion_mode_in_table@@Base+0x684>
   239e4:	mov	r1, r0
   239e8:	mov	r0, r4
   239ec:	mov	r2, #0
   239f0:	mov	r5, #0
   239f4:	bl	111c4 <myhtml_tree_open_elements_pop_until_by_node@plt>
   239f8:	mov	r0, r4
   239fc:	bl	115f0 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   23a00:	b	23bf8 <myhtml_insertion_mode_in_table@@Base+0x684>
   23a04:	mov	r0, r4
   23a08:	mov	r1, r6
   23a0c:	sub	sp, fp, #16
   23a10:	pop	{r4, r5, r6, sl, fp, lr}
   23a14:	b	2263c <myhtml_insertion_mode_in_head@@Base>
   23a18:	mov	r0, r4
   23a1c:	bl	11c20 <myhtml_tree_clear_stack_back_table_context@plt>
   23a20:	mov	r0, r4
   23a24:	mov	r1, #126	; 0x7e
   23a28:	mov	r2, #1
   23a2c:	mov	r5, #1
   23a30:	bl	117a0 <myhtml_tree_node_insert@plt>
   23a34:	mov	r0, #12
   23a38:	str	r0, [r4, #168]	; 0xa8
   23a3c:	b	23bf8 <myhtml_insertion_mode_in_table@@Base+0x684>
   23a40:	cmp	r0, #251	; 0xfb
   23a44:	beq	23b64 <myhtml_insertion_mode_in_table@@Base+0x5f0>
   23a48:	b	23bdc <myhtml_insertion_mode_in_table@@Base+0x668>
   23a4c:	mov	r0, r4
   23a50:	bl	11530 <myhtml_tree_current_node@plt>
   23a54:	ldr	r1, [r0, #4]
   23a58:	sub	r1, r1, #125	; 0x7d
   23a5c:	cmp	r1, #10
   23a60:	bhi	23bdc <myhtml_insertion_mode_in_table@@Base+0x668>
   23a64:	mov	r2, #1
   23a68:	movw	r3, #1187	; 0x4a3
   23a6c:	tst	r3, r2, lsl r1
   23a70:	beq	23bdc <myhtml_insertion_mode_in_table@@Base+0x668>
   23a74:	ldr	r0, [r0, #8]
   23a78:	cmp	r0, #1
   23a7c:	bne	23bdc <myhtml_insertion_mode_in_table@@Base+0x668>
   23a80:	ldr	r0, [r4, #136]	; 0x88
   23a84:	bl	11c38 <myhtml_tree_token_list_clean@plt>
   23a88:	ldr	r0, [r4, #168]	; 0xa8
   23a8c:	mov	r1, #9
   23a90:	mov	r5, #1
   23a94:	str	r1, [r4, #168]	; 0xa8
   23a98:	str	r0, [r4, #172]	; 0xac
   23a9c:	b	23bf8 <myhtml_insertion_mode_in_table@@Base+0x684>
   23aa0:	mov	r0, r4
   23aa4:	mov	r1, r6
   23aa8:	mov	r2, #0
   23aac:	mov	r5, #0
   23ab0:	bl	11284 <myhtml_tree_node_insert_comment@plt>
   23ab4:	b	23bf8 <myhtml_insertion_mode_in_table@@Base+0x684>
   23ab8:	mov	r0, r4
   23abc:	bl	11c20 <myhtml_tree_clear_stack_back_table_context@plt>
   23ac0:	mov	r0, r4
   23ac4:	mov	r1, r6
   23ac8:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   23acc:	ldr	r0, [r4]
   23ad0:	ldr	r1, [r0, #36]	; 0x24
   23ad4:	mov	r0, r4
   23ad8:	bl	11188 <myhtml_tree_active_formatting_append@plt>
   23adc:	mov	r0, #10
   23ae0:	str	r0, [r4, #168]	; 0xa8
   23ae4:	b	23bf8 <myhtml_insertion_mode_in_table@@Base+0x684>
   23ae8:	mov	r0, r4
   23aec:	bl	11c20 <myhtml_tree_clear_stack_back_table_context@plt>
   23af0:	mov	r0, r4
   23af4:	mov	r1, #32
   23af8:	mov	r2, #1
   23afc:	mov	r5, #1
   23b00:	bl	117a0 <myhtml_tree_node_insert@plt>
   23b04:	b	23b1c <myhtml_insertion_mode_in_table@@Base+0x5a8>
   23b08:	mov	r0, r4
   23b0c:	bl	11c20 <myhtml_tree_clear_stack_back_table_context@plt>
   23b10:	mov	r0, r4
   23b14:	mov	r1, r6
   23b18:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   23b1c:	mov	r0, #11
   23b20:	str	r0, [r4, #168]	; 0xa8
   23b24:	b	23bf8 <myhtml_insertion_mode_in_table@@Base+0x684>
   23b28:	mov	r0, r4
   23b2c:	mov	r1, #128	; 0x80
   23b30:	mov	r2, #1
   23b34:	mov	r3, #0
   23b38:	mov	r5, #0
   23b3c:	bl	11680 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   23b40:	ldr	r1, [r4, #104]	; 0x68
   23b44:	orrs	r0, r0, r1
   23b48:	bne	23bf8 <myhtml_insertion_mode_in_table@@Base+0x684>
   23b4c:	mov	r0, r4
   23b50:	mov	r1, r6
   23b54:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   23b58:	str	r0, [r4, #104]	; 0x68
   23b5c:	mov	r0, r4
   23b60:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   23b64:	mov	r0, r4
   23b68:	mov	r1, r6
   23b6c:	sub	sp, fp, #16
   23b70:	pop	{r4, r5, r6, sl, fp, lr}
   23b74:	b	20fb0 <myhtml_insertion_mode_in_body@@Base>
   23b78:	ldr	r0, [r4, #8]
   23b7c:	mov	r1, r6
   23b80:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   23b84:	ldr	r0, [r4, #8]
   23b88:	ldr	r2, [pc, #180]	; 23c44 <myhtml_insertion_mode_in_table@@Base+0x6d0>
   23b8c:	mov	r1, #6
   23b90:	mov	r3, #4
   23b94:	str	r1, [sp, #4]
   23b98:	mov	r1, r6
   23b9c:	add	r2, pc, r2
   23ba0:	str	r2, [sp]
   23ba4:	ldr	r2, [pc, #156]	; 23c48 <myhtml_insertion_mode_in_table@@Base+0x6d4>
   23ba8:	add	r2, pc, r2
   23bac:	bl	10ec4 <myhtml_token_attr_match_case@plt>
   23bb0:	cmp	r0, #0
   23bb4:	beq	23bdc <myhtml_insertion_mode_in_table@@Base+0x668>
   23bb8:	mov	r0, r4
   23bbc:	mov	r1, r6
   23bc0:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   23bc4:	mov	r0, r4
   23bc8:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   23bcc:	ldr	r0, [r6, #48]	; 0x30
   23bd0:	orr	r0, r0, #2
   23bd4:	str	r0, [r6, #48]	; 0x30
   23bd8:	b	23bf8 <myhtml_insertion_mode_in_table@@Base+0x684>
   23bdc:	mov	r0, #1
   23be0:	mov	r1, r6
   23be4:	strb	r0, [r4, #188]	; 0xbc
   23be8:	mov	r0, r4
   23bec:	bl	11548 <myhtml_insertion_mode_in_body@plt>
   23bf0:	mov	r5, #0
   23bf4:	strb	r5, [r4, #188]	; 0xbc
   23bf8:	mov	r0, r5
   23bfc:	sub	sp, fp, #16
   23c00:	pop	{r4, r5, r6, sl, fp, pc}
   23c04:	mov	r0, r4
   23c08:	mov	r1, #125	; 0x7d
   23c0c:	mov	r2, #1
   23c10:	mov	r3, #64	; 0x40
   23c14:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   23c18:	cmp	r0, #0
   23c1c:	beq	23bf8 <myhtml_insertion_mode_in_table@@Base+0x684>
   23c20:	mov	r0, r4
   23c24:	mov	r1, #125	; 0x7d
   23c28:	mov	r2, #1
   23c2c:	mov	r3, #0
   23c30:	bl	1177c <myhtml_tree_open_elements_pop_until@plt>
   23c34:	mov	r0, r4
   23c38:	bl	115f0 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   23c3c:	mov	r5, #1
   23c40:	b	23bf8 <myhtml_insertion_mode_in_table@@Base+0x684>
   23c44:	andeq	sp, sp, r3, ror #6
   23c48:	strdeq	sl, [r1], -r3

00023c4c <myhtml_insertion_mode_in_table_text@@Base>:
   23c4c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   23c50:	add	fp, sp, #24
   23c54:	mov	r4, r0
   23c58:	ldr	r0, [r1]
   23c5c:	cmp	r0, #1
   23c60:	bne	23c84 <myhtml_insertion_mode_in_table_text@@Base+0x38>
   23c64:	ldr	r0, [r1, #48]	; 0x30
   23c68:	mov	r5, r1
   23c6c:	tst	r0, #2048	; 0x800
   23c70:	bne	23ce0 <myhtml_insertion_mode_in_table_text@@Base+0x94>
   23c74:	ldr	r0, [r4, #136]	; 0x88
   23c78:	mov	r1, r5
   23c7c:	bl	11b6c <myhtml_tree_token_list_append@plt>
   23c80:	b	23dc0 <myhtml_insertion_mode_in_table_text@@Base+0x174>
   23c84:	ldr	r5, [r4, #136]	; 0x88
   23c88:	ldr	r0, [r5, #4]
   23c8c:	cmp	r0, #0
   23c90:	beq	23e20 <myhtml_insertion_mode_in_table_text@@Base+0x1d4>
   23c94:	ldr	r1, [r5]
   23c98:	mov	r2, #0
   23c9c:	ldr	r3, [r1, r2, lsl #2]
   23ca0:	ldr	r3, [r3, #48]	; 0x30
   23ca4:	tst	r3, #8
   23ca8:	beq	23dcc <myhtml_insertion_mode_in_table_text@@Base+0x180>
   23cac:	add	r2, r2, #1
   23cb0:	cmp	r2, r0
   23cb4:	bcc	23c9c <myhtml_insertion_mode_in_table_text@@Base+0x50>
   23cb8:	mov	r6, #0
   23cbc:	ldr	r0, [r5]
   23cc0:	ldr	r1, [r0, r6, lsl #2]
   23cc4:	mov	r0, r4
   23cc8:	bl	11074 <myhtml_tree_node_insert_text@plt>
   23ccc:	ldr	r0, [r5, #4]
   23cd0:	add	r6, r6, #1
   23cd4:	cmp	r6, r0
   23cd8:	bcc	23cbc <myhtml_insertion_mode_in_table_text@@Base+0x70>
   23cdc:	b	23e20 <myhtml_insertion_mode_in_table_text@@Base+0x1d4>
   23ce0:	ldr	r0, [r4, #8]
   23ce4:	mov	r1, r5
   23ce8:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   23cec:	ldr	r6, [r5, #12]
   23cf0:	cmp	r6, #0
   23cf4:	beq	23dc0 <myhtml_insertion_mode_in_table_text@@Base+0x174>
   23cf8:	mov	r0, #0
   23cfc:	mov	r8, #0
   23d00:	ldr	r3, [r5, #4]
   23d04:	ldrb	r1, [r3, r0]
   23d08:	cmp	r1, #0
   23d0c:	bne	23d90 <myhtml_insertion_mode_in_table_text@@Base+0x144>
   23d10:	cmp	r0, r6
   23d14:	mov	r2, r0
   23d18:	bcs	23d3c <myhtml_insertion_mode_in_table_text@@Base+0xf0>
   23d1c:	add	r1, r0, #1
   23d20:	mov	r2, r1
   23d24:	cmp	r1, r6
   23d28:	bcs	23d3c <myhtml_insertion_mode_in_table_text@@Base+0xf0>
   23d2c:	ldrb	r7, [r3, r2]
   23d30:	add	r1, r2, #1
   23d34:	cmp	r7, #0
   23d38:	beq	23d20 <myhtml_insertion_mode_in_table_text@@Base+0xd4>
   23d3c:	ldr	r7, [r5, #12]
   23d40:	sub	r1, r0, r2
   23d44:	cmp	r2, r6
   23d48:	add	r1, r1, r7
   23d4c:	mov	r7, r2
   23d50:	str	r1, [r5, #12]
   23d54:	bcs	23d74 <myhtml_insertion_mode_in_table_text@@Base+0x128>
   23d58:	mov	r7, r2
   23d5c:	ldrb	r1, [r3, r7]
   23d60:	cmp	r1, #0
   23d64:	beq	23d74 <myhtml_insertion_mode_in_table_text@@Base+0x128>
   23d68:	add	r7, r7, #1
   23d6c:	cmp	r7, r6
   23d70:	bcc	23d5c <myhtml_insertion_mode_in_table_text@@Base+0x110>
   23d74:	sub	r0, r0, r8
   23d78:	add	r1, r3, r2
   23d7c:	sub	r2, r7, r2
   23d80:	add	r0, r3, r0
   23d84:	bl	10fb4 <memmove@plt>
   23d88:	add	r8, r8, #1
   23d8c:	sub	r0, r7, #1
   23d90:	add	r0, r0, #1
   23d94:	cmp	r0, r6
   23d98:	bcc	23d00 <myhtml_insertion_mode_in_table_text@@Base+0xb4>
   23d9c:	ldr	r0, [r5, #12]
   23da0:	mov	r6, #0
   23da4:	cmp	r0, #0
   23da8:	beq	23e2c <myhtml_insertion_mode_in_table_text@@Base+0x1e0>
   23dac:	ldr	r0, [r4, #136]	; 0x88
   23db0:	mov	r1, r5
   23db4:	bl	11b6c <myhtml_tree_token_list_append@plt>
   23db8:	mov	r0, r6
   23dbc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23dc0:	mov	r6, #0
   23dc4:	mov	r0, r6
   23dc8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23dcc:	mov	r8, #1
   23dd0:	mov	r0, r4
   23dd4:	strb	r8, [r4, #188]	; 0xbc
   23dd8:	ldr	r1, [r1]
   23ddc:	bl	11548 <myhtml_insertion_mode_in_body@plt>
   23de0:	mov	r7, #0
   23de4:	strb	r7, [r4, #188]	; 0xbc
   23de8:	ldr	r0, [r5, #4]
   23dec:	cmp	r0, #2
   23df0:	bcc	23e20 <myhtml_insertion_mode_in_table_text@@Base+0x1d4>
   23df4:	mov	r6, #1
   23df8:	ldr	r0, [r5]
   23dfc:	strb	r8, [r4, #188]	; 0xbc
   23e00:	ldr	r1, [r0, r6, lsl #2]
   23e04:	mov	r0, r4
   23e08:	bl	11548 <myhtml_insertion_mode_in_body@plt>
   23e0c:	strb	r7, [r4, #188]	; 0xbc
   23e10:	add	r6, r6, #1
   23e14:	ldr	r0, [r5, #4]
   23e18:	cmp	r6, r0
   23e1c:	bcc	23df8 <myhtml_insertion_mode_in_table_text@@Base+0x1ac>
   23e20:	ldr	r0, [r4, #172]	; 0xac
   23e24:	mov	r6, #1
   23e28:	str	r0, [r4, #168]	; 0xa8
   23e2c:	mov	r0, r6
   23e30:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00023e34 <myhtml_insertion_mode_in_caption@@Base>:
   23e34:	push	{r4, r5, fp, lr}
   23e38:	add	fp, sp, #8
   23e3c:	mov	r4, r0
   23e40:	ldr	r0, [r1]
   23e44:	ldr	r2, [r1, #48]	; 0x30
   23e48:	tst	r2, #1
   23e4c:	bne	23ef4 <myhtml_insertion_mode_in_caption@@Base+0xc0>
   23e50:	sub	r2, r0, #126	; 0x7e
   23e54:	cmp	r2, #9
   23e58:	bhi	23e6c <myhtml_insertion_mode_in_caption@@Base+0x38>
   23e5c:	mov	r3, #1
   23e60:	movw	r5, #627	; 0x273
   23e64:	tst	r5, r3, lsl r2
   23e68:	bne	23e88 <myhtml_insertion_mode_in_caption@@Base+0x54>
   23e6c:	sub	r0, r0, #27
   23e70:	cmp	r0, #5
   23e74:	bhi	24104 <myhtml_insertion_mode_in_caption@@Base+0x2d0>
   23e78:	mov	r2, #1
   23e7c:	mov	r3, #49	; 0x31
   23e80:	tst	r3, r2, lsl r0
   23e84:	beq	24104 <myhtml_insertion_mode_in_caption@@Base+0x2d0>
   23e88:	mov	r0, r4
   23e8c:	mov	r1, #27
   23e90:	mov	r2, #1
   23e94:	mov	r3, #64	; 0x40
   23e98:	mov	r5, #1
   23e9c:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   23ea0:	cmp	r0, #0
   23ea4:	beq	240f8 <myhtml_insertion_mode_in_caption@@Base+0x2c4>
   23ea8:	mov	r0, r4
   23eac:	mov	r1, #0
   23eb0:	mov	r2, #0
   23eb4:	bl	115c0 <myhtml_tree_generate_implied_end_tags@plt>
   23eb8:	mov	r0, r4
   23ebc:	bl	11530 <myhtml_tree_current_node@plt>
   23ec0:	mov	r1, #27
   23ec4:	bl	11884 <myhtml_is_html_node@plt>
   23ec8:	mov	r0, r4
   23ecc:	mov	r1, #27
   23ed0:	mov	r2, #1
   23ed4:	mov	r3, #0
   23ed8:	bl	1177c <myhtml_tree_open_elements_pop_until@plt>
   23edc:	mov	r0, r4
   23ee0:	bl	11b18 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   23ee4:	mov	r0, #8
   23ee8:	str	r0, [r4, #168]	; 0xa8
   23eec:	mov	r0, r5
   23ef0:	pop	{r4, r5, fp, pc}
   23ef4:	sub	r0, r0, #23
   23ef8:	cmp	r0, #112	; 0x70
   23efc:	bhi	24104 <myhtml_insertion_mode_in_caption@@Base+0x2d0>
   23f00:	add	r2, pc, #8
   23f04:	mov	r5, #0
   23f08:	ldr	r0, [r2, r0, lsl #2]
   23f0c:	add	pc, r2, r0
   23f10:	andeq	r0, r0, ip, ror #3
   23f14:	strdeq	r0, [r0], -r4
   23f18:	strdeq	r0, [r0], -r4
   23f1c:	strdeq	r0, [r0], -r4
   23f20:	andeq	r0, r0, r4, asr #3
   23f24:	strdeq	r0, [r0], -r4
   23f28:	strdeq	r0, [r0], -r4
   23f2c:	strdeq	r0, [r0], -r4
   23f30:	andeq	r0, r0, ip, ror #3
   23f34:	andeq	r0, r0, ip, ror #3
   23f38:	strdeq	r0, [r0], -r4
   23f3c:	strdeq	r0, [r0], -r4
   23f40:	strdeq	r0, [r0], -r4
   23f44:	strdeq	r0, [r0], -r4
   23f48:	strdeq	r0, [r0], -r4
   23f4c:	strdeq	r0, [r0], -r4
   23f50:	strdeq	r0, [r0], -r4
   23f54:	strdeq	r0, [r0], -r4
   23f58:	strdeq	r0, [r0], -r4
   23f5c:	strdeq	r0, [r0], -r4
   23f60:	strdeq	r0, [r0], -r4
   23f64:	strdeq	r0, [r0], -r4
   23f68:	strdeq	r0, [r0], -r4
   23f6c:	strdeq	r0, [r0], -r4
   23f70:	strdeq	r0, [r0], -r4
   23f74:	strdeq	r0, [r0], -r4
   23f78:	strdeq	r0, [r0], -r4
   23f7c:	strdeq	r0, [r0], -r4
   23f80:	strdeq	r0, [r0], -r4
   23f84:	strdeq	r0, [r0], -r4
   23f88:	strdeq	r0, [r0], -r4
   23f8c:	strdeq	r0, [r0], -r4
   23f90:	strdeq	r0, [r0], -r4
   23f94:	strdeq	r0, [r0], -r4
   23f98:	strdeq	r0, [r0], -r4
   23f9c:	strdeq	r0, [r0], -r4
   23fa0:	strdeq	r0, [r0], -r4
   23fa4:	strdeq	r0, [r0], -r4
   23fa8:	strdeq	r0, [r0], -r4
   23fac:	strdeq	r0, [r0], -r4
   23fb0:	strdeq	r0, [r0], -r4
   23fb4:	strdeq	r0, [r0], -r4
   23fb8:	andeq	r0, r0, ip, ror #3
   23fbc:	strdeq	r0, [r0], -r4
   23fc0:	strdeq	r0, [r0], -r4
   23fc4:	strdeq	r0, [r0], -r4
   23fc8:	strdeq	r0, [r0], -r4
   23fcc:	strdeq	r0, [r0], -r4
   23fd0:	strdeq	r0, [r0], -r4
   23fd4:	strdeq	r0, [r0], -r4
   23fd8:	strdeq	r0, [r0], -r4
   23fdc:	strdeq	r0, [r0], -r4
   23fe0:	strdeq	r0, [r0], -r4
   23fe4:	strdeq	r0, [r0], -r4
   23fe8:	strdeq	r0, [r0], -r4
   23fec:	strdeq	r0, [r0], -r4
   23ff0:	strdeq	r0, [r0], -r4
   23ff4:	strdeq	r0, [r0], -r4
   23ff8:	strdeq	r0, [r0], -r4
   23ffc:	strdeq	r0, [r0], -r4
   24000:	strdeq	r0, [r0], -r4
   24004:	strdeq	r0, [r0], -r4
   24008:	strdeq	r0, [r0], -r4
   2400c:	strdeq	r0, [r0], -r4
   24010:	strdeq	r0, [r0], -r4
   24014:	strdeq	r0, [r0], -r4
   24018:	strdeq	r0, [r0], -r4
   2401c:	strdeq	r0, [r0], -r4
   24020:	strdeq	r0, [r0], -r4
   24024:	strdeq	r0, [r0], -r4
   24028:	strdeq	r0, [r0], -r4
   2402c:	strdeq	r0, [r0], -r4
   24030:	strdeq	r0, [r0], -r4
   24034:	strdeq	r0, [r0], -r4
   24038:	strdeq	r0, [r0], -r4
   2403c:	strdeq	r0, [r0], -r4
   24040:	strdeq	r0, [r0], -r4
   24044:	strdeq	r0, [r0], -r4
   24048:	strdeq	r0, [r0], -r4
   2404c:	strdeq	r0, [r0], -r4
   24050:	strdeq	r0, [r0], -r4
   24054:	strdeq	r0, [r0], -r4
   24058:	strdeq	r0, [r0], -r4
   2405c:	strdeq	r0, [r0], -r4
   24060:	strdeq	r0, [r0], -r4
   24064:	strdeq	r0, [r0], -r4
   24068:	strdeq	r0, [r0], -r4
   2406c:	strdeq	r0, [r0], -r4
   24070:	strdeq	r0, [r0], -r4
   24074:	strdeq	r0, [r0], -r4
   24078:	strdeq	r0, [r0], -r4
   2407c:	strdeq	r0, [r0], -r4
   24080:	strdeq	r0, [r0], -r4
   24084:	strdeq	r0, [r0], -r4
   24088:	strdeq	r0, [r0], -r4
   2408c:	strdeq	r0, [r0], -r4
   24090:	strdeq	r0, [r0], -r4
   24094:	strdeq	r0, [r0], -r4
   24098:	strdeq	r0, [r0], -r4
   2409c:	strdeq	r0, [r0], -r4
   240a0:	strdeq	r0, [r0], -r4
   240a4:	strdeq	r0, [r0], -r4
   240a8:	andeq	r0, r0, r0, lsl #4
   240ac:	andeq	r0, r0, ip, ror #3
   240b0:	andeq	r0, r0, ip, ror #3
   240b4:	strdeq	r0, [r0], -r4
   240b8:	strdeq	r0, [r0], -r4
   240bc:	andeq	r0, r0, ip, ror #3
   240c0:	andeq	r0, r0, ip, ror #3
   240c4:	andeq	r0, r0, ip, ror #3
   240c8:	strdeq	r0, [r0], -r4
   240cc:	strdeq	r0, [r0], -r4
   240d0:	andeq	r0, r0, ip, ror #3
   240d4:	mov	r0, r4
   240d8:	mov	r1, #27
   240dc:	mov	r2, #1
   240e0:	mov	r3, #64	; 0x40
   240e4:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   240e8:	cmp	r0, #0
   240ec:	beq	240fc <myhtml_insertion_mode_in_caption@@Base+0x2c8>
   240f0:	mov	r5, #0
   240f4:	b	23ea8 <myhtml_insertion_mode_in_caption@@Base+0x74>
   240f8:	mov	r5, #0
   240fc:	mov	r0, r5
   24100:	pop	{r4, r5, fp, pc}
   24104:	mov	r0, r4
   24108:	pop	{r4, r5, fp, lr}
   2410c:	b	20fb0 <myhtml_insertion_mode_in_body@@Base>
   24110:	mov	r0, r4
   24114:	mov	r1, #27
   24118:	mov	r2, #1
   2411c:	mov	r3, #64	; 0x40
   24120:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   24124:	cmp	r0, #0
   24128:	beq	240fc <myhtml_insertion_mode_in_caption@@Base+0x2c8>
   2412c:	mov	r0, r4
   24130:	mov	r1, #0
   24134:	mov	r2, #0
   24138:	bl	115c0 <myhtml_tree_generate_implied_end_tags@plt>
   2413c:	mov	r0, r4
   24140:	bl	11530 <myhtml_tree_current_node@plt>
   24144:	mov	r1, #27
   24148:	bl	11884 <myhtml_is_html_node@plt>
   2414c:	mov	r0, r4
   24150:	mov	r1, #27
   24154:	mov	r2, #1
   24158:	mov	r3, #0
   2415c:	bl	1177c <myhtml_tree_open_elements_pop_until@plt>
   24160:	mov	r0, r4
   24164:	bl	11b18 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   24168:	mov	r0, #8
   2416c:	mov	r5, #1
   24170:	str	r0, [r4, #168]	; 0xa8
   24174:	mov	r0, r5
   24178:	pop	{r4, r5, fp, pc}

0002417c <myhtml_insertion_mode_in_column_group@@Base>:
   2417c:	push	{r4, r5, fp, lr}
   24180:	add	fp, sp, #8
   24184:	mov	r5, r0
   24188:	ldr	r0, [r1]
   2418c:	ldr	r2, [r1, #48]	; 0x30
   24190:	mov	r4, #0
   24194:	tst	r2, #1
   24198:	bne	24264 <myhtml_insertion_mode_in_column_group@@Base+0xe8>
   2419c:	cmp	r0, #64	; 0x40
   241a0:	bgt	242b0 <myhtml_insertion_mode_in_column_group@@Base+0x134>
   241a4:	sub	r0, r0, #1
   241a8:	cmp	r0, #30
   241ac:	bhi	242d4 <myhtml_insertion_mode_in_column_group@@Base+0x158>
   241b0:	add	r2, pc, #4
   241b4:	ldr	r0, [r2, r0, lsl #2]
   241b8:	add	pc, r2, r0
   241bc:	andeq	r0, r0, ip, ror r0
   241c0:	andeq	r0, r0, r8, ror #2
   241c4:	andeq	r0, r0, r4, asr r1
   241c8:	andeq	r0, r0, r8, lsl r1
   241cc:	andeq	r0, r0, r8, lsl r1
   241d0:	andeq	r0, r0, r8, lsl r1
   241d4:	andeq	r0, r0, r8, lsl r1
   241d8:	andeq	r0, r0, r8, lsl r1
   241dc:	andeq	r0, r0, r8, lsl r1
   241e0:	andeq	r0, r0, r8, lsl r1
   241e4:	andeq	r0, r0, r8, lsl r1
   241e8:	andeq	r0, r0, r8, lsl r1
   241ec:	andeq	r0, r0, r8, lsl r1
   241f0:	andeq	r0, r0, r8, lsl r1
   241f4:	andeq	r0, r0, r8, lsl r1
   241f8:	andeq	r0, r0, r8, lsl r1
   241fc:	andeq	r0, r0, r8, lsl r1
   24200:	andeq	r0, r0, r8, lsl r1
   24204:	andeq	r0, r0, r8, lsl r1
   24208:	andeq	r0, r0, r8, lsl r1
   2420c:	andeq	r0, r0, r8, lsl r1
   24210:	andeq	r0, r0, r8, lsl r1
   24214:	andeq	r0, r0, r8, lsl r1
   24218:	andeq	r0, r0, r8, lsl r1
   2421c:	andeq	r0, r0, r8, lsl r1
   24220:	andeq	r0, r0, r8, lsl r1
   24224:	andeq	r0, r0, r8, lsl r1
   24228:	andeq	r0, r0, r8, lsl r1
   2422c:	andeq	r0, r0, r8, lsl r1
   24230:	andeq	r0, r0, r8, lsl r1
   24234:	andeq	r0, r0, r0, lsl #3
   24238:	ldr	r0, [r1, #48]	; 0x30
   2423c:	tst	r0, #8
   24240:	bne	24354 <myhtml_insertion_mode_in_column_group@@Base+0x1d8>
   24244:	mov	r0, r5
   24248:	bl	10ffc <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   2424c:	cmp	r0, #0
   24250:	beq	242d4 <myhtml_insertion_mode_in_column_group@@Base+0x158>
   24254:	mov	r1, r0
   24258:	mov	r0, r5
   2425c:	bl	11074 <myhtml_tree_node_insert_text@plt>
   24260:	b	242d4 <myhtml_insertion_mode_in_column_group@@Base+0x158>
   24264:	cmp	r0, #31
   24268:	beq	24310 <myhtml_insertion_mode_in_column_group@@Base+0x194>
   2426c:	cmp	r0, #128	; 0x80
   24270:	beq	24318 <myhtml_insertion_mode_in_column_group@@Base+0x19c>
   24274:	cmp	r0, #32
   24278:	bne	242d4 <myhtml_insertion_mode_in_column_group@@Base+0x158>
   2427c:	mov	r0, r5
   24280:	bl	11530 <myhtml_tree_current_node@plt>
   24284:	cmp	r0, #0
   24288:	beq	24310 <myhtml_insertion_mode_in_column_group@@Base+0x194>
   2428c:	mov	r1, #32
   24290:	bl	11884 <myhtml_is_html_node@plt>
   24294:	cmp	r0, #0
   24298:	beq	24310 <myhtml_insertion_mode_in_column_group@@Base+0x194>
   2429c:	mov	r0, r5
   242a0:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   242a4:	mov	r0, #8
   242a8:	str	r0, [r5, #168]	; 0xa8
   242ac:	b	24310 <myhtml_insertion_mode_in_column_group@@Base+0x194>
   242b0:	cmp	r0, #65	; 0x41
   242b4:	beq	242c8 <myhtml_insertion_mode_in_column_group@@Base+0x14c>
   242b8:	cmp	r0, #128	; 0x80
   242bc:	beq	24318 <myhtml_insertion_mode_in_column_group@@Base+0x19c>
   242c0:	cmp	r0, #251	; 0xfb
   242c4:	bne	242d4 <myhtml_insertion_mode_in_column_group@@Base+0x158>
   242c8:	mov	r0, r5
   242cc:	pop	{r4, r5, fp, lr}
   242d0:	b	20fb0 <myhtml_insertion_mode_in_body@@Base>
   242d4:	mov	r0, r5
   242d8:	bl	11530 <myhtml_tree_current_node@plt>
   242dc:	cmp	r0, #0
   242e0:	beq	24310 <myhtml_insertion_mode_in_column_group@@Base+0x194>
   242e4:	mov	r1, #32
   242e8:	bl	11884 <myhtml_is_html_node@plt>
   242ec:	cmp	r0, #0
   242f0:	beq	24310 <myhtml_insertion_mode_in_column_group@@Base+0x194>
   242f4:	mov	r0, r5
   242f8:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   242fc:	mov	r0, #8
   24300:	mov	r4, #1
   24304:	str	r0, [r5, #168]	; 0xa8
   24308:	mov	r0, r4
   2430c:	pop	{r4, r5, fp, pc}
   24310:	mov	r0, r4
   24314:	pop	{r4, r5, fp, pc}
   24318:	mov	r0, r5
   2431c:	pop	{r4, r5, fp, lr}
   24320:	b	2263c <myhtml_insertion_mode_in_head@@Base>
   24324:	mov	r0, r5
   24328:	mov	r2, #0
   2432c:	mov	r4, #0
   24330:	bl	11284 <myhtml_tree_node_insert_comment@plt>
   24334:	mov	r0, r4
   24338:	pop	{r4, r5, fp, pc}
   2433c:	mov	r0, r5
   24340:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   24344:	mov	r0, r5
   24348:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   2434c:	mov	r0, r4
   24350:	pop	{r4, r5, fp, pc}
   24354:	mov	r0, r5
   24358:	bl	11074 <myhtml_tree_node_insert_text@plt>
   2435c:	mov	r0, r4
   24360:	pop	{r4, r5, fp, pc}

00024364 <myhtml_insertion_mode_in_table_body@@Base>:
   24364:	push	{r4, r5, r6, r7, fp, lr}
   24368:	add	fp, sp, #16
   2436c:	mov	r6, r1
   24370:	mov	r4, r0
   24374:	ldr	r1, [r1]
   24378:	ldr	r0, [r6, #48]	; 0x30
   2437c:	tst	r0, #1
   24380:	bne	243d0 <myhtml_insertion_mode_in_table_body@@Base+0x6c>
   24384:	sub	r0, r1, #126	; 0x7e
   24388:	cmp	r0, #9
   2438c:	bhi	24618 <myhtml_insertion_mode_in_table_body@@Base+0x2b4>
   24390:	mov	r2, #1
   24394:	mov	r3, #81	; 0x51
   24398:	tst	r3, r2, lsl r0
   2439c:	bne	24634 <myhtml_insertion_mode_in_table_body@@Base+0x2d0>
   243a0:	mov	r3, #34	; 0x22
   243a4:	tst	r3, r2, lsl r0
   243a8:	beq	245e8 <myhtml_insertion_mode_in_table_body@@Base+0x284>
   243ac:	mov	r0, r4
   243b0:	bl	11344 <myhtml_tree_clear_stack_back_table_body_context@plt>
   243b4:	mov	r0, r4
   243b8:	mov	r1, #135	; 0x87
   243bc:	mov	r2, #1
   243c0:	mov	r5, #1
   243c4:	bl	117a0 <myhtml_tree_node_insert@plt>
   243c8:	mov	r0, #13
   243cc:	b	245dc <myhtml_insertion_mode_in_table_body@@Base+0x278>
   243d0:	sub	r0, r1, #23
   243d4:	cmp	r0, #112	; 0x70
   243d8:	bhi	246bc <myhtml_insertion_mode_in_table_body@@Base+0x358>
   243dc:	add	r2, pc, #8
   243e0:	mov	r5, #0
   243e4:	ldr	r0, [r2, r0, lsl #2]
   243e8:	add	pc, r2, r0
   243ec:	andeq	r0, r0, r8, asr #5
   243f0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   243f4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   243f8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   243fc:	andeq	r0, r0, r8, asr #5
   24400:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24404:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24408:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2440c:	andeq	r0, r0, r8, asr #5
   24410:	andeq	r0, r0, r8, asr #5
   24414:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24418:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2441c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24420:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24424:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24428:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2442c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24430:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24434:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24438:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2443c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24440:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24444:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24448:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2444c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24450:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24454:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24458:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2445c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24460:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24464:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24468:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2446c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24470:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24474:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24478:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2447c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24480:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24484:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24488:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2448c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24490:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24494:	andeq	r0, r0, r8, asr #5
   24498:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2449c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244a0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244a4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244a8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244ac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244b0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244b4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244b8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244bc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244c0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244c4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244c8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244cc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244d0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244d4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244d8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244dc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244e0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244e4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244e8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244ec:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244f0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244f4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244f8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244fc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24500:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24504:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24508:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2450c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24510:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24514:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24518:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2451c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24520:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24524:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24528:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2452c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24530:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24534:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24538:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2453c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24540:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24544:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24548:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2454c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24550:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24554:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24558:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2455c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24560:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24564:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24568:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2456c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24570:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24574:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24578:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2457c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24580:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24584:	andeq	r0, r0, r0, ror #5
   24588:	andeq	r0, r0, r4, asr #3
   2458c:	andeq	r0, r0, r8, asr #5
   24590:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24594:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   24598:	andeq	r0, r0, r4, asr #3
   2459c:	andeq	r0, r0, r8, asr #5
   245a0:	andeq	r0, r0, r4, asr #3
   245a4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   245a8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   245ac:	andeq	r0, r0, r8, asr #5
   245b0:	mov	r0, r4
   245b4:	mov	r2, #1
   245b8:	mov	r3, #64	; 0x40
   245bc:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   245c0:	cmp	r0, #0
   245c4:	beq	246b4 <myhtml_insertion_mode_in_table_body@@Base+0x350>
   245c8:	mov	r0, r4
   245cc:	bl	11344 <myhtml_tree_clear_stack_back_table_body_context@plt>
   245d0:	mov	r0, r4
   245d4:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   245d8:	mov	r0, #8
   245dc:	str	r0, [r4, #168]	; 0xa8
   245e0:	mov	r0, r5
   245e4:	pop	{r4, r5, r6, r7, fp, pc}
   245e8:	cmp	r0, #9
   245ec:	bne	24618 <myhtml_insertion_mode_in_table_body@@Base+0x2b4>
   245f0:	mov	r0, r4
   245f4:	bl	11344 <myhtml_tree_clear_stack_back_table_body_context@plt>
   245f8:	mov	r0, r4
   245fc:	mov	r1, r6
   24600:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   24604:	mov	r0, #13
   24608:	mov	r5, #0
   2460c:	str	r0, [r4, #168]	; 0xa8
   24610:	mov	r0, r5
   24614:	pop	{r4, r5, r6, r7, fp, pc}
   24618:	sub	r0, r1, #27
   2461c:	cmp	r0, #5
   24620:	bhi	246bc <myhtml_insertion_mode_in_table_body@@Base+0x358>
   24624:	mov	r1, #1
   24628:	mov	r2, #49	; 0x31
   2462c:	tst	r2, r1, lsl r0
   24630:	beq	246bc <myhtml_insertion_mode_in_table_body@@Base+0x358>
   24634:	mov	r0, r4
   24638:	mov	r1, #126	; 0x7e
   2463c:	mov	r2, #1
   24640:	mov	r3, #64	; 0x40
   24644:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   24648:	mov	r6, r0
   2464c:	mov	r0, r4
   24650:	mov	r1, #130	; 0x82
   24654:	mov	r2, #1
   24658:	mov	r3, #64	; 0x40
   2465c:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   24660:	mov	r5, r0
   24664:	mov	r0, r4
   24668:	mov	r1, #132	; 0x84
   2466c:	mov	r2, #1
   24670:	mov	r3, #64	; 0x40
   24674:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   24678:	cmp	r6, #0
   2467c:	cmpeq	r5, #0
   24680:	beq	246a8 <myhtml_insertion_mode_in_table_body@@Base+0x344>
   24684:	mov	r0, r4
   24688:	bl	11344 <myhtml_tree_clear_stack_back_table_body_context@plt>
   2468c:	mov	r0, r4
   24690:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   24694:	mov	r0, #8
   24698:	mov	r5, #1
   2469c:	str	r0, [r4, #168]	; 0xa8
   246a0:	mov	r0, r5
   246a4:	pop	{r4, r5, r6, r7, fp, pc}
   246a8:	mov	r5, #0
   246ac:	cmp	r0, #0
   246b0:	bne	24684 <myhtml_insertion_mode_in_table_body@@Base+0x320>
   246b4:	mov	r0, r5
   246b8:	pop	{r4, r5, r6, r7, fp, pc}
   246bc:	mov	r0, r4
   246c0:	mov	r1, r6
   246c4:	pop	{r4, r5, r6, r7, fp, lr}
   246c8:	b	23574 <myhtml_insertion_mode_in_table@@Base>
   246cc:	mov	r0, r4
   246d0:	mov	r1, #126	; 0x7e
   246d4:	mov	r2, #1
   246d8:	mov	r3, #64	; 0x40
   246dc:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   246e0:	mov	r7, r0
   246e4:	mov	r0, r4
   246e8:	mov	r1, #130	; 0x82
   246ec:	mov	r2, #1
   246f0:	mov	r3, #64	; 0x40
   246f4:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   246f8:	mov	r6, r0
   246fc:	mov	r0, r4
   24700:	mov	r1, #132	; 0x84
   24704:	mov	r2, #1
   24708:	mov	r3, #64	; 0x40
   2470c:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   24710:	cmp	r7, #0
   24714:	cmpeq	r6, #0
   24718:	bne	24684 <myhtml_insertion_mode_in_table_body@@Base+0x320>
   2471c:	b	246ac <myhtml_insertion_mode_in_table_body@@Base+0x348>

00024720 <myhtml_insertion_mode_in_row@@Base>:
   24720:	push	{r4, r5, r6, sl, fp, lr}
   24724:	add	fp, sp, #16
   24728:	mov	r6, r1
   2472c:	mov	r4, r0
   24730:	ldr	r1, [r1]
   24734:	ldr	r0, [r6, #48]	; 0x30
   24738:	tst	r0, #1
   2473c:	bne	24798 <myhtml_insertion_mode_in_row@@Base+0x78>
   24740:	sub	r0, r1, #126	; 0x7e
   24744:	cmp	r0, #9
   24748:	bhi	249d0 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   2474c:	mov	r2, #1
   24750:	movw	r3, #593	; 0x251
   24754:	tst	r3, r2, lsl r0
   24758:	bne	249ec <myhtml_insertion_mode_in_row@@Base+0x2cc>
   2475c:	mov	r3, #34	; 0x22
   24760:	tst	r3, r2, lsl r0
   24764:	beq	249d0 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   24768:	mov	r0, r4
   2476c:	bl	113b0 <myhtml_tree_clear_stack_back_table_row_context@plt>
   24770:	mov	r0, r4
   24774:	mov	r1, r6
   24778:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   2477c:	ldr	r0, [r4]
   24780:	ldr	r1, [r0, #36]	; 0x24
   24784:	mov	r0, r4
   24788:	bl	11188 <myhtml_tree_active_formatting_append@plt>
   2478c:	mov	r0, #14
   24790:	str	r0, [r4, #168]	; 0xa8
   24794:	b	24a2c <myhtml_insertion_mode_in_row@@Base+0x30c>
   24798:	sub	r0, r1, #23
   2479c:	cmp	r0, #112	; 0x70
   247a0:	bhi	24a38 <myhtml_insertion_mode_in_row@@Base+0x318>
   247a4:	add	r2, pc, #8
   247a8:	mov	r5, #0
   247ac:	ldr	r0, [r2, r0, lsl #2]
   247b0:	add	pc, r2, r0
   247b4:	andeq	r0, r0, ip, ror r2
   247b8:	andeq	r0, r0, r4, lsl #5
   247bc:	andeq	r0, r0, r4, lsl #5
   247c0:	andeq	r0, r0, r4, lsl #5
   247c4:	andeq	r0, r0, ip, ror r2
   247c8:	andeq	r0, r0, r4, lsl #5
   247cc:	andeq	r0, r0, r4, lsl #5
   247d0:	andeq	r0, r0, r4, lsl #5
   247d4:	andeq	r0, r0, ip, ror r2
   247d8:	andeq	r0, r0, ip, ror r2
   247dc:	andeq	r0, r0, r4, lsl #5
   247e0:	andeq	r0, r0, r4, lsl #5
   247e4:	andeq	r0, r0, r4, lsl #5
   247e8:	andeq	r0, r0, r4, lsl #5
   247ec:	andeq	r0, r0, r4, lsl #5
   247f0:	andeq	r0, r0, r4, lsl #5
   247f4:	andeq	r0, r0, r4, lsl #5
   247f8:	andeq	r0, r0, r4, lsl #5
   247fc:	andeq	r0, r0, r4, lsl #5
   24800:	andeq	r0, r0, r4, lsl #5
   24804:	andeq	r0, r0, r4, lsl #5
   24808:	andeq	r0, r0, r4, lsl #5
   2480c:	andeq	r0, r0, r4, lsl #5
   24810:	andeq	r0, r0, r4, lsl #5
   24814:	andeq	r0, r0, r4, lsl #5
   24818:	andeq	r0, r0, r4, lsl #5
   2481c:	andeq	r0, r0, r4, lsl #5
   24820:	andeq	r0, r0, r4, lsl #5
   24824:	andeq	r0, r0, r4, lsl #5
   24828:	andeq	r0, r0, r4, lsl #5
   2482c:	andeq	r0, r0, r4, lsl #5
   24830:	andeq	r0, r0, r4, lsl #5
   24834:	andeq	r0, r0, r4, lsl #5
   24838:	andeq	r0, r0, r4, lsl #5
   2483c:	andeq	r0, r0, r4, lsl #5
   24840:	andeq	r0, r0, r4, lsl #5
   24844:	andeq	r0, r0, r4, lsl #5
   24848:	andeq	r0, r0, r4, lsl #5
   2484c:	andeq	r0, r0, r4, lsl #5
   24850:	andeq	r0, r0, r4, lsl #5
   24854:	andeq	r0, r0, r4, lsl #5
   24858:	andeq	r0, r0, r4, lsl #5
   2485c:	andeq	r0, r0, ip, ror r2
   24860:	andeq	r0, r0, r4, lsl #5
   24864:	andeq	r0, r0, r4, lsl #5
   24868:	andeq	r0, r0, r4, lsl #5
   2486c:	andeq	r0, r0, r4, lsl #5
   24870:	andeq	r0, r0, r4, lsl #5
   24874:	andeq	r0, r0, r4, lsl #5
   24878:	andeq	r0, r0, r4, lsl #5
   2487c:	andeq	r0, r0, r4, lsl #5
   24880:	andeq	r0, r0, r4, lsl #5
   24884:	andeq	r0, r0, r4, lsl #5
   24888:	andeq	r0, r0, r4, lsl #5
   2488c:	andeq	r0, r0, r4, lsl #5
   24890:	andeq	r0, r0, r4, lsl #5
   24894:	andeq	r0, r0, r4, lsl #5
   24898:	andeq	r0, r0, r4, lsl #5
   2489c:	andeq	r0, r0, r4, lsl #5
   248a0:	andeq	r0, r0, r4, lsl #5
   248a4:	andeq	r0, r0, r4, lsl #5
   248a8:	andeq	r0, r0, r4, lsl #5
   248ac:	andeq	r0, r0, r4, lsl #5
   248b0:	andeq	r0, r0, r4, lsl #5
   248b4:	andeq	r0, r0, r4, lsl #5
   248b8:	andeq	r0, r0, r4, lsl #5
   248bc:	andeq	r0, r0, r4, lsl #5
   248c0:	andeq	r0, r0, r4, lsl #5
   248c4:	andeq	r0, r0, r4, lsl #5
   248c8:	andeq	r0, r0, r4, lsl #5
   248cc:	andeq	r0, r0, r4, lsl #5
   248d0:	andeq	r0, r0, r4, lsl #5
   248d4:	andeq	r0, r0, r4, lsl #5
   248d8:	andeq	r0, r0, r4, lsl #5
   248dc:	andeq	r0, r0, r4, lsl #5
   248e0:	andeq	r0, r0, r4, lsl #5
   248e4:	andeq	r0, r0, r4, lsl #5
   248e8:	andeq	r0, r0, r4, lsl #5
   248ec:	andeq	r0, r0, r4, lsl #5
   248f0:	andeq	r0, r0, r4, lsl #5
   248f4:	andeq	r0, r0, r4, lsl #5
   248f8:	andeq	r0, r0, r4, lsl #5
   248fc:	andeq	r0, r0, r4, lsl #5
   24900:	andeq	r0, r0, r4, lsl #5
   24904:	andeq	r0, r0, r4, lsl #5
   24908:	andeq	r0, r0, r4, lsl #5
   2490c:	andeq	r0, r0, r4, lsl #5
   24910:	andeq	r0, r0, r4, lsl #5
   24914:	andeq	r0, r0, r4, lsl #5
   24918:	andeq	r0, r0, r4, lsl #5
   2491c:	andeq	r0, r0, r4, lsl #5
   24920:	andeq	r0, r0, r4, lsl #5
   24924:	andeq	r0, r0, r4, lsl #5
   24928:	andeq	r0, r0, r4, lsl #5
   2492c:	andeq	r0, r0, r4, lsl #5
   24930:	andeq	r0, r0, r4, lsl #5
   24934:	andeq	r0, r0, r4, lsl #5
   24938:	andeq	r0, r0, r4, lsl #5
   2493c:	andeq	r0, r0, r4, lsl #5
   24940:	andeq	r0, r0, r4, lsl #5
   24944:	andeq	r0, r0, r4, lsl #5
   24948:	andeq	r0, r0, r4, lsl #5
   2494c:	ldrdeq	r0, [r0], -ip
   24950:	andeq	r0, r0, r4, asr #3
   24954:	andeq	r0, r0, ip, ror r2
   24958:	andeq	r0, r0, r4, lsl #5
   2495c:	andeq	r0, r0, r4, lsl #5
   24960:	andeq	r0, r0, r4, asr #3
   24964:	andeq	r0, r0, ip, ror r2
   24968:	andeq	r0, r0, r4, asr #3
   2496c:	andeq	r0, r0, r4, lsl #5
   24970:	andeq	r0, r0, r4, lsl #5
   24974:	muleq	r0, r4, r2
   24978:	mov	r0, r4
   2497c:	mov	r2, #1
   24980:	mov	r3, #64	; 0x40
   24984:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   24988:	cmp	r0, #0
   2498c:	beq	24a30 <myhtml_insertion_mode_in_row@@Base+0x310>
   24990:	mov	r0, r4
   24994:	mov	r1, #135	; 0x87
   24998:	mov	r2, #1
   2499c:	mov	r3, #64	; 0x40
   249a0:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   249a4:	cmp	r0, #0
   249a8:	beq	24a30 <myhtml_insertion_mode_in_row@@Base+0x310>
   249ac:	mov	r0, r4
   249b0:	bl	113b0 <myhtml_tree_clear_stack_back_table_row_context@plt>
   249b4:	mov	r0, r4
   249b8:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   249bc:	mov	r0, #12
   249c0:	mov	r5, #1
   249c4:	str	r0, [r4, #168]	; 0xa8
   249c8:	mov	r0, r5
   249cc:	pop	{r4, r5, r6, sl, fp, pc}
   249d0:	sub	r0, r1, #27
   249d4:	cmp	r0, #5
   249d8:	bhi	24a38 <myhtml_insertion_mode_in_row@@Base+0x318>
   249dc:	mov	r1, #1
   249e0:	mov	r2, #49	; 0x31
   249e4:	tst	r2, r1, lsl r0
   249e8:	beq	24a38 <myhtml_insertion_mode_in_row@@Base+0x318>
   249ec:	mov	r0, r4
   249f0:	mov	r1, #135	; 0x87
   249f4:	mov	r2, #1
   249f8:	mov	r3, #64	; 0x40
   249fc:	mov	r5, #1
   24a00:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   24a04:	cmp	r0, #0
   24a08:	beq	24a2c <myhtml_insertion_mode_in_row@@Base+0x30c>
   24a0c:	mov	r0, r4
   24a10:	bl	113b0 <myhtml_tree_clear_stack_back_table_row_context@plt>
   24a14:	mov	r0, r4
   24a18:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   24a1c:	mov	r0, #12
   24a20:	str	r0, [r4, #168]	; 0xa8
   24a24:	mov	r0, r5
   24a28:	pop	{r4, r5, r6, sl, fp, pc}
   24a2c:	mov	r5, #0
   24a30:	mov	r0, r5
   24a34:	pop	{r4, r5, r6, sl, fp, pc}
   24a38:	mov	r0, r4
   24a3c:	mov	r1, r6
   24a40:	pop	{r4, r5, r6, sl, fp, lr}
   24a44:	b	23574 <myhtml_insertion_mode_in_table@@Base>
   24a48:	mov	r0, r4
   24a4c:	mov	r1, #135	; 0x87
   24a50:	mov	r2, #1
   24a54:	mov	r3, #64	; 0x40
   24a58:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   24a5c:	cmp	r0, #0
   24a60:	bne	24a0c <myhtml_insertion_mode_in_row@@Base+0x2ec>
   24a64:	b	24a30 <myhtml_insertion_mode_in_row@@Base+0x310>

00024a68 <myhtml_insertion_mode_in_cell@@Base>:
   24a68:	push	{r4, r5, r6, r7, fp, lr}
   24a6c:	add	fp, sp, #16
   24a70:	mov	r5, r1
   24a74:	mov	r4, r0
   24a78:	ldr	r1, [r1]
   24a7c:	ldr	r0, [r5, #48]	; 0x30
   24a80:	tst	r0, #1
   24a84:	bne	24b18 <myhtml_insertion_mode_in_cell@@Base+0xb0>
   24a88:	sub	r0, r1, #126	; 0x7e
   24a8c:	cmp	r0, #9
   24a90:	bhi	24aa4 <myhtml_insertion_mode_in_cell@@Base+0x3c>
   24a94:	mov	r2, #1
   24a98:	movw	r3, #627	; 0x273
   24a9c:	tst	r3, r2, lsl r0
   24aa0:	bne	24ac0 <myhtml_insertion_mode_in_cell@@Base+0x58>
   24aa4:	sub	r0, r1, #27
   24aa8:	cmp	r0, #5
   24aac:	bhi	24dd8 <myhtml_insertion_mode_in_cell@@Base+0x370>
   24ab0:	mov	r1, #1
   24ab4:	mov	r2, #49	; 0x31
   24ab8:	tst	r2, r1, lsl r0
   24abc:	beq	24dd8 <myhtml_insertion_mode_in_cell@@Base+0x370>
   24ac0:	mov	r0, r4
   24ac4:	mov	r1, #127	; 0x7f
   24ac8:	mov	r2, #1
   24acc:	mov	r3, #64	; 0x40
   24ad0:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   24ad4:	mov	r7, r0
   24ad8:	mov	r0, r4
   24adc:	mov	r1, #131	; 0x83
   24ae0:	mov	r2, #1
   24ae4:	mov	r3, #64	; 0x40
   24ae8:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   24aec:	mov	r1, r0
   24af0:	orrs	r0, r7, r0
   24af4:	mov	r6, #0
   24af8:	beq	24dd0 <myhtml_insertion_mode_in_cell@@Base+0x368>
   24afc:	cmp	r7, #0
   24b00:	mov	r0, r4
   24b04:	mov	r2, r5
   24b08:	movne	r1, r7
   24b0c:	bl	11a40 <myhtml_tree_close_cell@plt>
   24b10:	mov	r6, #1
   24b14:	b	24dd0 <myhtml_insertion_mode_in_cell@@Base+0x368>
   24b18:	sub	r0, r1, #23
   24b1c:	cmp	r0, #112	; 0x70
   24b20:	bhi	24de8 <myhtml_insertion_mode_in_cell@@Base+0x380>
   24b24:	add	r2, pc, #8
   24b28:	mov	r6, #0
   24b2c:	ldr	r0, [r2, r0, lsl #2]
   24b30:	add	pc, r2, r0
   24b34:	muleq	r0, ip, r2
   24b38:			; <UNDEFINED> instruction: 0x000002b4
   24b3c:			; <UNDEFINED> instruction: 0x000002b4
   24b40:			; <UNDEFINED> instruction: 0x000002b4
   24b44:	muleq	r0, ip, r2
   24b48:			; <UNDEFINED> instruction: 0x000002b4
   24b4c:			; <UNDEFINED> instruction: 0x000002b4
   24b50:			; <UNDEFINED> instruction: 0x000002b4
   24b54:	muleq	r0, ip, r2
   24b58:	muleq	r0, ip, r2
   24b5c:			; <UNDEFINED> instruction: 0x000002b4
   24b60:			; <UNDEFINED> instruction: 0x000002b4
   24b64:			; <UNDEFINED> instruction: 0x000002b4
   24b68:			; <UNDEFINED> instruction: 0x000002b4
   24b6c:			; <UNDEFINED> instruction: 0x000002b4
   24b70:			; <UNDEFINED> instruction: 0x000002b4
   24b74:			; <UNDEFINED> instruction: 0x000002b4
   24b78:			; <UNDEFINED> instruction: 0x000002b4
   24b7c:			; <UNDEFINED> instruction: 0x000002b4
   24b80:			; <UNDEFINED> instruction: 0x000002b4
   24b84:			; <UNDEFINED> instruction: 0x000002b4
   24b88:			; <UNDEFINED> instruction: 0x000002b4
   24b8c:			; <UNDEFINED> instruction: 0x000002b4
   24b90:			; <UNDEFINED> instruction: 0x000002b4
   24b94:			; <UNDEFINED> instruction: 0x000002b4
   24b98:			; <UNDEFINED> instruction: 0x000002b4
   24b9c:			; <UNDEFINED> instruction: 0x000002b4
   24ba0:			; <UNDEFINED> instruction: 0x000002b4
   24ba4:			; <UNDEFINED> instruction: 0x000002b4
   24ba8:			; <UNDEFINED> instruction: 0x000002b4
   24bac:			; <UNDEFINED> instruction: 0x000002b4
   24bb0:			; <UNDEFINED> instruction: 0x000002b4
   24bb4:			; <UNDEFINED> instruction: 0x000002b4
   24bb8:			; <UNDEFINED> instruction: 0x000002b4
   24bbc:			; <UNDEFINED> instruction: 0x000002b4
   24bc0:			; <UNDEFINED> instruction: 0x000002b4
   24bc4:			; <UNDEFINED> instruction: 0x000002b4
   24bc8:			; <UNDEFINED> instruction: 0x000002b4
   24bcc:			; <UNDEFINED> instruction: 0x000002b4
   24bd0:			; <UNDEFINED> instruction: 0x000002b4
   24bd4:			; <UNDEFINED> instruction: 0x000002b4
   24bd8:			; <UNDEFINED> instruction: 0x000002b4
   24bdc:	muleq	r0, ip, r2
   24be0:			; <UNDEFINED> instruction: 0x000002b4
   24be4:			; <UNDEFINED> instruction: 0x000002b4
   24be8:			; <UNDEFINED> instruction: 0x000002b4
   24bec:			; <UNDEFINED> instruction: 0x000002b4
   24bf0:			; <UNDEFINED> instruction: 0x000002b4
   24bf4:			; <UNDEFINED> instruction: 0x000002b4
   24bf8:			; <UNDEFINED> instruction: 0x000002b4
   24bfc:			; <UNDEFINED> instruction: 0x000002b4
   24c00:			; <UNDEFINED> instruction: 0x000002b4
   24c04:			; <UNDEFINED> instruction: 0x000002b4
   24c08:			; <UNDEFINED> instruction: 0x000002b4
   24c0c:			; <UNDEFINED> instruction: 0x000002b4
   24c10:			; <UNDEFINED> instruction: 0x000002b4
   24c14:			; <UNDEFINED> instruction: 0x000002b4
   24c18:			; <UNDEFINED> instruction: 0x000002b4
   24c1c:			; <UNDEFINED> instruction: 0x000002b4
   24c20:			; <UNDEFINED> instruction: 0x000002b4
   24c24:			; <UNDEFINED> instruction: 0x000002b4
   24c28:			; <UNDEFINED> instruction: 0x000002b4
   24c2c:			; <UNDEFINED> instruction: 0x000002b4
   24c30:			; <UNDEFINED> instruction: 0x000002b4
   24c34:			; <UNDEFINED> instruction: 0x000002b4
   24c38:			; <UNDEFINED> instruction: 0x000002b4
   24c3c:			; <UNDEFINED> instruction: 0x000002b4
   24c40:			; <UNDEFINED> instruction: 0x000002b4
   24c44:			; <UNDEFINED> instruction: 0x000002b4
   24c48:			; <UNDEFINED> instruction: 0x000002b4
   24c4c:			; <UNDEFINED> instruction: 0x000002b4
   24c50:			; <UNDEFINED> instruction: 0x000002b4
   24c54:			; <UNDEFINED> instruction: 0x000002b4
   24c58:			; <UNDEFINED> instruction: 0x000002b4
   24c5c:			; <UNDEFINED> instruction: 0x000002b4
   24c60:			; <UNDEFINED> instruction: 0x000002b4
   24c64:			; <UNDEFINED> instruction: 0x000002b4
   24c68:			; <UNDEFINED> instruction: 0x000002b4
   24c6c:			; <UNDEFINED> instruction: 0x000002b4
   24c70:			; <UNDEFINED> instruction: 0x000002b4
   24c74:			; <UNDEFINED> instruction: 0x000002b4
   24c78:			; <UNDEFINED> instruction: 0x000002b4
   24c7c:			; <UNDEFINED> instruction: 0x000002b4
   24c80:			; <UNDEFINED> instruction: 0x000002b4
   24c84:			; <UNDEFINED> instruction: 0x000002b4
   24c88:			; <UNDEFINED> instruction: 0x000002b4
   24c8c:			; <UNDEFINED> instruction: 0x000002b4
   24c90:			; <UNDEFINED> instruction: 0x000002b4
   24c94:			; <UNDEFINED> instruction: 0x000002b4
   24c98:			; <UNDEFINED> instruction: 0x000002b4
   24c9c:			; <UNDEFINED> instruction: 0x000002b4
   24ca0:			; <UNDEFINED> instruction: 0x000002b4
   24ca4:			; <UNDEFINED> instruction: 0x000002b4
   24ca8:			; <UNDEFINED> instruction: 0x000002b4
   24cac:			; <UNDEFINED> instruction: 0x000002b4
   24cb0:			; <UNDEFINED> instruction: 0x000002b4
   24cb4:			; <UNDEFINED> instruction: 0x000002b4
   24cb8:			; <UNDEFINED> instruction: 0x000002b4
   24cbc:			; <UNDEFINED> instruction: 0x000002b4
   24cc0:			; <UNDEFINED> instruction: 0x000002b4
   24cc4:			; <UNDEFINED> instruction: 0x000002b4
   24cc8:			; <UNDEFINED> instruction: 0x000002b4
   24ccc:	andeq	r0, r0, r4, asr #3
   24cd0:	andeq	r0, r0, r4, asr #3
   24cd4:	andeq	r0, r0, r4, lsr r2
   24cd8:			; <UNDEFINED> instruction: 0x000002b4
   24cdc:			; <UNDEFINED> instruction: 0x000002b4
   24ce0:	andeq	r0, r0, r4, asr #3
   24ce4:	andeq	r0, r0, r4, lsr r2
   24ce8:	andeq	r0, r0, r4, asr #3
   24cec:			; <UNDEFINED> instruction: 0x000002b4
   24cf0:			; <UNDEFINED> instruction: 0x000002b4
   24cf4:	andeq	r0, r0, r4, asr #3
   24cf8:	mov	r0, r4
   24cfc:	mov	r2, #1
   24d00:	mov	r3, #64	; 0x40
   24d04:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   24d08:	cmp	r0, #0
   24d0c:	beq	24dd0 <myhtml_insertion_mode_in_cell@@Base+0x368>
   24d10:	mov	r0, r4
   24d14:	mov	r1, #127	; 0x7f
   24d18:	mov	r2, #1
   24d1c:	mov	r3, #64	; 0x40
   24d20:	mov	r6, #1
   24d24:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   24d28:	cmp	r0, #0
   24d2c:	bne	24d50 <myhtml_insertion_mode_in_cell@@Base+0x2e8>
   24d30:	mov	r0, r4
   24d34:	mov	r1, #131	; 0x83
   24d38:	mov	r2, #1
   24d3c:	mov	r3, #64	; 0x40
   24d40:	mov	r6, #1
   24d44:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   24d48:	cmp	r0, #0
   24d4c:	beq	24dd0 <myhtml_insertion_mode_in_cell@@Base+0x368>
   24d50:	mov	r1, r0
   24d54:	mov	r0, r4
   24d58:	mov	r2, r5
   24d5c:	bl	11a40 <myhtml_tree_close_cell@plt>
   24d60:	mov	r0, r6
   24d64:	pop	{r4, r5, r6, r7, fp, pc}
   24d68:	mov	r0, r4
   24d6c:	mov	r2, #1
   24d70:	mov	r3, #64	; 0x40
   24d74:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   24d78:	cmp	r0, #0
   24d7c:	beq	24dd0 <myhtml_insertion_mode_in_cell@@Base+0x368>
   24d80:	mov	r0, r4
   24d84:	mov	r1, #0
   24d88:	mov	r2, #0
   24d8c:	mov	r6, #0
   24d90:	bl	115c0 <myhtml_tree_generate_implied_end_tags@plt>
   24d94:	mov	r0, r4
   24d98:	bl	11530 <myhtml_tree_current_node@plt>
   24d9c:	ldr	r1, [r5]
   24da0:	bl	11884 <myhtml_is_html_node@plt>
   24da4:	ldr	r1, [r5]
   24da8:	mov	r0, r4
   24dac:	mov	r2, #1
   24db0:	mov	r3, #0
   24db4:	bl	1177c <myhtml_tree_open_elements_pop_until@plt>
   24db8:	mov	r0, r4
   24dbc:	bl	11b18 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   24dc0:	mov	r0, #13
   24dc4:	str	r0, [r4, #168]	; 0xa8
   24dc8:	mov	r0, r6
   24dcc:	pop	{r4, r5, r6, r7, fp, pc}
   24dd0:	mov	r0, r6
   24dd4:	pop	{r4, r5, r6, r7, fp, pc}
   24dd8:	mov	r0, r4
   24ddc:	mov	r1, r5
   24de0:	pop	{r4, r5, r6, r7, fp, lr}
   24de4:	b	20fb0 <myhtml_insertion_mode_in_body@@Base>
   24de8:	mov	r0, r4
   24dec:	mov	r1, r5
   24df0:	pop	{r4, r5, r6, r7, fp, lr}
   24df4:	b	23574 <myhtml_insertion_mode_in_table@@Base>

00024df8 <myhtml_insertion_mode_in_select@@Base>:
   24df8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   24dfc:	add	fp, sp, #24
   24e00:	mov	r4, r0
   24e04:	mov	r6, r1
   24e08:	ldr	r0, [r1]
   24e0c:	ldr	r1, [r1, #48]	; 0x30
   24e10:	tst	r1, #1
   24e14:	bne	24f80 <myhtml_insertion_mode_in_select@@Base+0x188>
   24e18:	mov	r5, #0
   24e1c:	cmp	r0, #64	; 0x40
   24e20:	ble	250f4 <myhtml_insertion_mode_in_select@@Base+0x2fc>
   24e24:	sub	r1, r0, #65	; 0x41
   24e28:	cmp	r1, #64	; 0x40
   24e2c:	bhi	25120 <myhtml_insertion_mode_in_select@@Base+0x328>
   24e30:	add	r0, pc, #4
   24e34:	ldr	r1, [r0, r1, lsl #2]
   24e38:	add	pc, r0, r1
   24e3c:	andeq	r0, r0, ip, ror #5
   24e40:	andeq	r0, r0, r0, ror #8
   24e44:	andeq	r0, r0, r0, ror #8
   24e48:	andeq	r0, r0, r0, ror #8
   24e4c:	andeq	r0, r0, r0, ror #8
   24e50:	andeq	r0, r0, r4, lsl #2
   24e54:	andeq	r0, r0, r0, ror #8
   24e58:	andeq	r0, r0, r0, ror #8
   24e5c:	andeq	r0, r0, r0, ror #8
   24e60:	andeq	r0, r0, r4, lsl #2
   24e64:	andeq	r0, r0, r0, ror #8
   24e68:	andeq	r0, r0, r0, ror #8
   24e6c:	andeq	r0, r0, r0, ror #8
   24e70:	andeq	r0, r0, r0, ror #8
   24e74:	andeq	r0, r0, r0, ror #8
   24e78:	andeq	r0, r0, r0, ror #8
   24e7c:	andeq	r0, r0, r0, ror #8
   24e80:	andeq	r0, r0, r0, ror #8
   24e84:	andeq	r0, r0, r0, ror #8
   24e88:	andeq	r0, r0, r0, ror #8
   24e8c:	andeq	r0, r0, r0, ror #8
   24e90:	andeq	r0, r0, r0, ror #8
   24e94:	andeq	r0, r0, r0, ror #8
   24e98:	andeq	r0, r0, r0, ror #8
   24e9c:	andeq	r0, r0, r0, ror #8
   24ea0:	andeq	r0, r0, r0, ror #8
   24ea4:	andeq	r0, r0, r0, ror #8
   24ea8:	andeq	r0, r0, r0, ror #8
   24eac:	andeq	r0, r0, r0, ror #8
   24eb0:	andeq	r0, r0, r0, ror #8
   24eb4:	andeq	r0, r0, r0, ror #8
   24eb8:	strdeq	r0, [r0], -ip
   24ebc:	andeq	r0, r0, r0, asr #6
   24ec0:	andeq	r0, r0, r0, ror #8
   24ec4:	andeq	r0, r0, r0, ror #8
   24ec8:	andeq	r0, r0, r0, ror #8
   24ecc:	andeq	r0, r0, r0, ror #8
   24ed0:	andeq	r0, r0, r0, ror #8
   24ed4:	andeq	r0, r0, r0, ror #8
   24ed8:	andeq	r0, r0, r0, ror #8
   24edc:	andeq	r0, r0, r0, ror #8
   24ee0:	andeq	r0, r0, r0, ror #8
   24ee4:	andeq	r0, r0, r0, ror #8
   24ee8:	andeq	r0, r0, r0, ror #8
   24eec:	andeq	r0, r0, r0, ror #8
   24ef0:	andeq	r0, r0, r0, ror #8
   24ef4:	andeq	r0, r0, r0, ror #8
   24ef8:	andeq	r0, r0, r4, asr #4
   24efc:	andeq	r0, r0, r0, ror #8
   24f00:	andeq	r0, r0, r4, asr r2
   24f04:	andeq	r0, r0, r0, ror #8
   24f08:	andeq	r0, r0, r0, ror #8
   24f0c:	andeq	r0, r0, r0, ror #8
   24f10:	andeq	r0, r0, r0, ror #8
   24f14:	andeq	r0, r0, r0, ror #8
   24f18:	andeq	r0, r0, r0, ror #8
   24f1c:	andeq	r0, r0, r0, ror #8
   24f20:	andeq	r0, r0, r0, ror #8
   24f24:	andeq	r0, r0, r0, ror #8
   24f28:	andeq	r0, r0, r0, ror #8
   24f2c:	andeq	r0, r0, r0, ror #8
   24f30:	andeq	r0, r0, r0, ror #8
   24f34:	andeq	r0, r0, r0, ror #8
   24f38:	andeq	r0, r0, r4, asr #4
   24f3c:	andeq	r0, r0, r4, lsl #2
   24f40:	mov	r0, r4
   24f44:	mov	r1, #114	; 0x72
   24f48:	mov	r2, #1
   24f4c:	mov	r3, #128	; 0x80
   24f50:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   24f54:	cmp	r0, #0
   24f58:	beq	2529c <myhtml_insertion_mode_in_select@@Base+0x4a4>
   24f5c:	mov	r1, r0
   24f60:	mov	r0, r4
   24f64:	mov	r2, #0
   24f68:	bl	111c4 <myhtml_tree_open_elements_pop_until_by_node@plt>
   24f6c:	mov	r0, r4
   24f70:	bl	115f0 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   24f74:	mov	r5, #1
   24f78:	mov	r0, r5
   24f7c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   24f80:	sub	r0, r0, #96	; 0x60
   24f84:	mov	r5, #0
   24f88:	cmp	r0, #32
   24f8c:	bhi	2529c <myhtml_insertion_mode_in_select@@Base+0x4a4>
   24f90:	add	r1, pc, #4
   24f94:	ldr	r0, [r1, r0, lsl #2]
   24f98:	add	pc, r1, r0
   24f9c:	andeq	r0, r0, r4, lsl #1
   24fa0:	andeq	r0, r0, r0, lsr r1
   24fa4:	andeq	r0, r0, r0, lsl #6
   24fa8:	andeq	r0, r0, r0, lsl #6
   24fac:	andeq	r0, r0, r0, lsl #6
   24fb0:	andeq	r0, r0, r0, lsl #6
   24fb4:	andeq	r0, r0, r0, lsl #6
   24fb8:	andeq	r0, r0, r0, lsl #6
   24fbc:	andeq	r0, r0, r0, lsl #6
   24fc0:	andeq	r0, r0, r0, lsl #6
   24fc4:	andeq	r0, r0, r0, lsl #6
   24fc8:	andeq	r0, r0, r0, lsl #6
   24fcc:	andeq	r0, r0, r0, lsl #6
   24fd0:	andeq	r0, r0, r0, lsl #6
   24fd4:	andeq	r0, r0, r0, lsl #6
   24fd8:	andeq	r0, r0, r0, lsl #6
   24fdc:	andeq	r0, r0, r0, lsl #6
   24fe0:	andeq	r0, r0, r0, lsl #6
   24fe4:	strdeq	r0, [r0], -r4
   24fe8:	andeq	r0, r0, r0, lsl #6
   24fec:	andeq	r0, r0, r0, lsl #6
   24ff0:	andeq	r0, r0, r0, lsl #6
   24ff4:	andeq	r0, r0, r0, lsl #6
   24ff8:	andeq	r0, r0, r0, lsl #6
   24ffc:	andeq	r0, r0, r0, lsl #6
   25000:	andeq	r0, r0, r0, lsl #6
   25004:	andeq	r0, r0, r0, lsl #6
   25008:	andeq	r0, r0, r0, lsl #6
   2500c:	andeq	r0, r0, r0, lsl #6
   25010:	andeq	r0, r0, r0, lsl #6
   25014:	andeq	r0, r0, r0, lsl #6
   25018:	andeq	r0, r0, r0, lsl #6
   2501c:	andeq	r0, r0, r4, ror #1
   25020:	mov	r0, r4
   25024:	bl	11530 <myhtml_tree_current_node@plt>
   25028:	mov	r1, #97	; 0x61
   2502c:	bl	11884 <myhtml_is_html_node@plt>
   25030:	cmp	r0, #0
   25034:	beq	25070 <myhtml_insertion_mode_in_select@@Base+0x278>
   25038:	ldr	r0, [r4, #128]	; 0x80
   2503c:	ldr	r1, [r0, #4]
   25040:	cmp	r1, #2
   25044:	bcc	25070 <myhtml_insertion_mode_in_select@@Base+0x278>
   25048:	ldr	r1, [r0]
   2504c:	ldr	r0, [r0, #4]
   25050:	add	r0, r1, r0, lsl #2
   25054:	mov	r1, #96	; 0x60
   25058:	ldr	r0, [r0, #-8]
   2505c:	bl	11884 <myhtml_is_html_node@plt>
   25060:	cmp	r0, #0
   25064:	beq	25070 <myhtml_insertion_mode_in_select@@Base+0x278>
   25068:	mov	r0, r4
   2506c:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   25070:	mov	r0, r4
   25074:	bl	11530 <myhtml_tree_current_node@plt>
   25078:	mov	r1, #96	; 0x60
   2507c:	b	250d8 <myhtml_insertion_mode_in_select@@Base+0x2e0>
   25080:	mov	r0, r4
   25084:	mov	r1, r6
   25088:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   2508c:	b	2263c <myhtml_insertion_mode_in_head@@Base>
   25090:	mov	r0, r4
   25094:	mov	r1, #114	; 0x72
   25098:	mov	r2, #1
   2509c:	mov	r3, #128	; 0x80
   250a0:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   250a4:	cmp	r0, #0
   250a8:	beq	2529c <myhtml_insertion_mode_in_select@@Base+0x4a4>
   250ac:	mov	r1, r0
   250b0:	mov	r0, r4
   250b4:	mov	r2, #0
   250b8:	mov	r5, #0
   250bc:	bl	111c4 <myhtml_tree_open_elements_pop_until_by_node@plt>
   250c0:	mov	r0, r4
   250c4:	bl	115f0 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   250c8:	b	2529c <myhtml_insertion_mode_in_select@@Base+0x4a4>
   250cc:	mov	r0, r4
   250d0:	bl	11530 <myhtml_tree_current_node@plt>
   250d4:	mov	r1, #97	; 0x61
   250d8:	bl	11884 <myhtml_is_html_node@plt>
   250dc:	cmp	r0, #0
   250e0:	beq	2529c <myhtml_insertion_mode_in_select@@Base+0x4a4>
   250e4:	mov	r0, r4
   250e8:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   250ec:	mov	r0, r5
   250f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   250f4:	cmp	r0, #1
   250f8:	beq	251b0 <myhtml_insertion_mode_in_select@@Base+0x3b8>
   250fc:	cmp	r0, #2
   25100:	bne	2529c <myhtml_insertion_mode_in_select@@Base+0x4a4>
   25104:	mov	r0, r4
   25108:	mov	r1, r6
   2510c:	mov	r2, #0
   25110:	mov	r5, #0
   25114:	bl	11284 <myhtml_tree_node_insert_comment@plt>
   25118:	mov	r0, r5
   2511c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   25120:	cmp	r0, #251	; 0xfb
   25124:	bne	2529c <myhtml_insertion_mode_in_select@@Base+0x4a4>
   25128:	mov	r0, r4
   2512c:	mov	r1, r6
   25130:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   25134:	b	20fb0 <myhtml_insertion_mode_in_body@@Base>
   25138:	mov	r0, r4
   2513c:	bl	11530 <myhtml_tree_current_node@plt>
   25140:	ldr	r1, [r0, #4]
   25144:	cmp	r1, #97	; 0x61
   25148:	ldreq	r0, [r0, #8]
   2514c:	cmpeq	r0, #1
   25150:	beq	252a4 <myhtml_insertion_mode_in_select@@Base+0x4ac>
   25154:	mov	r0, r4
   25158:	bl	11530 <myhtml_tree_current_node@plt>
   2515c:	ldr	r1, [r6]
   25160:	ldr	r2, [r0, #4]
   25164:	cmp	r2, r1
   25168:	bne	2519c <myhtml_insertion_mode_in_select@@Base+0x3a4>
   2516c:	ldr	r0, [r0, #8]
   25170:	cmp	r0, #1
   25174:	beq	25194 <myhtml_insertion_mode_in_select@@Base+0x39c>
   25178:	b	2519c <myhtml_insertion_mode_in_select@@Base+0x3a4>
   2517c:	mov	r0, r4
   25180:	bl	11530 <myhtml_tree_current_node@plt>
   25184:	ldr	r1, [r6]
   25188:	bl	11884 <myhtml_is_html_node@plt>
   2518c:	cmp	r0, #0
   25190:	beq	2519c <myhtml_insertion_mode_in_select@@Base+0x3a4>
   25194:	mov	r0, r4
   25198:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   2519c:	mov	r0, r4
   251a0:	mov	r1, r6
   251a4:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   251a8:	mov	r0, r5
   251ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   251b0:	ldr	r0, [r6, #48]	; 0x30
   251b4:	tst	r0, #2048	; 0x800
   251b8:	beq	25288 <myhtml_insertion_mode_in_select@@Base+0x490>
   251bc:	ldr	r0, [r4, #8]
   251c0:	mov	r1, r6
   251c4:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   251c8:	ldr	r7, [r6, #12]
   251cc:	cmp	r7, #0
   251d0:	beq	2529c <myhtml_insertion_mode_in_select@@Base+0x4a4>
   251d4:	mov	r0, #0
   251d8:	mov	r8, #0
   251dc:	ldr	r3, [r6, #4]
   251e0:	ldrb	r1, [r3, r0]
   251e4:	cmp	r1, #0
   251e8:	bne	2526c <myhtml_insertion_mode_in_select@@Base+0x474>
   251ec:	cmp	r0, r7
   251f0:	mov	r2, r0
   251f4:	bcs	25218 <myhtml_insertion_mode_in_select@@Base+0x420>
   251f8:	add	r1, r0, #1
   251fc:	mov	r2, r1
   25200:	cmp	r1, r7
   25204:	bcs	25218 <myhtml_insertion_mode_in_select@@Base+0x420>
   25208:	ldrb	r5, [r3, r2]
   2520c:	add	r1, r2, #1
   25210:	cmp	r5, #0
   25214:	beq	251fc <myhtml_insertion_mode_in_select@@Base+0x404>
   25218:	ldr	r5, [r6, #12]
   2521c:	sub	r1, r0, r2
   25220:	cmp	r2, r7
   25224:	add	r1, r1, r5
   25228:	mov	r5, r2
   2522c:	str	r1, [r6, #12]
   25230:	bcs	25250 <myhtml_insertion_mode_in_select@@Base+0x458>
   25234:	mov	r5, r2
   25238:	ldrb	r1, [r3, r5]
   2523c:	cmp	r1, #0
   25240:	beq	25250 <myhtml_insertion_mode_in_select@@Base+0x458>
   25244:	add	r5, r5, #1
   25248:	cmp	r5, r7
   2524c:	bcc	25238 <myhtml_insertion_mode_in_select@@Base+0x440>
   25250:	sub	r0, r0, r8
   25254:	add	r1, r3, r2
   25258:	sub	r2, r5, r2
   2525c:	add	r0, r3, r0
   25260:	bl	10fb4 <memmove@plt>
   25264:	add	r8, r8, #1
   25268:	sub	r0, r5, #1
   2526c:	add	r0, r0, #1
   25270:	cmp	r0, r7
   25274:	bcc	251dc <myhtml_insertion_mode_in_select@@Base+0x3e4>
   25278:	ldr	r0, [r6, #12]
   2527c:	mov	r5, #0
   25280:	cmp	r0, #0
   25284:	beq	2529c <myhtml_insertion_mode_in_select@@Base+0x4a4>
   25288:	mov	r0, r4
   2528c:	mov	r1, r6
   25290:	bl	11074 <myhtml_tree_node_insert_text@plt>
   25294:	mov	r0, r5
   25298:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2529c:	mov	r0, r5
   252a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   252a4:	mov	r0, r4
   252a8:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   252ac:	b	25154 <myhtml_insertion_mode_in_select@@Base+0x35c>

000252b0 <myhtml_insertion_mode_in_select_in_table@@Base>:
   252b0:	push	{r4, r5, fp, lr}
   252b4:	add	fp, sp, #8
   252b8:	mov	r4, r0
   252bc:	ldr	r2, [r1]
   252c0:	ldr	r0, [r1, #48]	; 0x30
   252c4:	tst	r0, #1
   252c8:	bne	252f0 <myhtml_insertion_mode_in_select_in_table@@Base+0x40>
   252cc:	sub	r0, r2, #125	; 0x7d
   252d0:	cmp	r0, #10
   252d4:	bhi	25358 <myhtml_insertion_mode_in_select_in_table@@Base+0xa8>
   252d8:	mov	r3, #1
   252dc:	movw	r5, #1255	; 0x4e7
   252e0:	tst	r5, r3, lsl r0
   252e4:	beq	25358 <myhtml_insertion_mode_in_select_in_table@@Base+0xa8>
   252e8:	mov	r5, #1
   252ec:	b	25334 <myhtml_insertion_mode_in_select_in_table@@Base+0x84>
   252f0:	sub	r0, r2, #125	; 0x7d
   252f4:	cmp	r0, #10
   252f8:	bhi	25364 <myhtml_insertion_mode_in_select_in_table@@Base+0xb4>
   252fc:	mov	r3, #1
   25300:	movw	r5, #1255	; 0x4e7
   25304:	tst	r5, r3, lsl r0
   25308:	beq	25364 <myhtml_insertion_mode_in_select_in_table@@Base+0xb4>
   2530c:	mov	r1, r2
   25310:	mov	r0, r4
   25314:	mov	r2, #1
   25318:	mov	r3, #64	; 0x40
   2531c:	mov	r5, #1
   25320:	bl	11b90 <myhtml_tree_element_in_scope@plt>
   25324:	cmp	r0, #0
   25328:	moveq	r5, #0
   2532c:	moveq	r0, r5
   25330:	popeq	{r4, r5, fp, pc}
   25334:	mov	r0, r4
   25338:	mov	r1, #114	; 0x72
   2533c:	mov	r2, #1
   25340:	mov	r3, #0
   25344:	bl	1177c <myhtml_tree_open_elements_pop_until@plt>
   25348:	mov	r0, r4
   2534c:	bl	115f0 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   25350:	mov	r0, r5
   25354:	pop	{r4, r5, fp, pc}
   25358:	cmp	r2, #27
   2535c:	beq	252e8 <myhtml_insertion_mode_in_select_in_table@@Base+0x38>
   25360:	b	2536c <myhtml_insertion_mode_in_select_in_table@@Base+0xbc>
   25364:	cmp	r2, #27
   25368:	beq	2530c <myhtml_insertion_mode_in_select_in_table@@Base+0x5c>
   2536c:	mov	r0, r4
   25370:	pop	{r4, r5, fp, lr}
   25374:	b	24df8 <myhtml_insertion_mode_in_select@@Base>

00025378 <myhtml_insertion_mode_after_body@@Base>:
   25378:	push	{r4, r5, r6, sl, fp, lr}
   2537c:	add	fp, sp, #16
   25380:	mov	r5, r1
   25384:	ldr	r1, [r1]
   25388:	ldr	r2, [r5, #48]	; 0x30
   2538c:	tst	r2, #1
   25390:	bne	253bc <myhtml_insertion_mode_after_body@@Base+0x44>
   25394:	mov	r4, #0
   25398:	cmp	r1, #2
   2539c:	ble	253e4 <myhtml_insertion_mode_after_body@@Base+0x6c>
   253a0:	cmp	r1, #3
   253a4:	beq	25450 <myhtml_insertion_mode_after_body@@Base+0xd8>
   253a8:	cmp	r1, #65	; 0x41
   253ac:	beq	25458 <myhtml_insertion_mode_after_body@@Base+0xe0>
   253b0:	cmp	r1, #251	; 0xfb
   253b4:	beq	25450 <myhtml_insertion_mode_after_body@@Base+0xd8>
   253b8:	b	25444 <myhtml_insertion_mode_after_body@@Base+0xcc>
   253bc:	cmp	r1, #65	; 0x41
   253c0:	bne	25444 <myhtml_insertion_mode_after_body@@Base+0xcc>
   253c4:	ldr	r1, [r0, #88]	; 0x58
   253c8:	mov	r4, #0
   253cc:	cmp	r1, #0
   253d0:	bne	25450 <myhtml_insertion_mode_after_body@@Base+0xd8>
   253d4:	mov	r1, #21
   253d8:	str	r1, [r0, #168]	; 0xa8
   253dc:	mov	r0, r4
   253e0:	pop	{r4, r5, r6, sl, fp, pc}
   253e4:	cmp	r1, #1
   253e8:	beq	25438 <myhtml_insertion_mode_after_body@@Base+0xc0>
   253ec:	cmp	r1, #2
   253f0:	bne	25444 <myhtml_insertion_mode_after_body@@Base+0xcc>
   253f4:	ldr	r1, [r0, #128]	; 0x80
   253f8:	ldr	r2, [r1, #4]
   253fc:	cmp	r2, #0
   25400:	beq	25450 <myhtml_insertion_mode_after_body@@Base+0xd8>
   25404:	ldr	r1, [r1]
   25408:	ldr	r6, [r1]
   2540c:	bl	110c8 <myhtml_tree_node_create@plt>
   25410:	mov	r1, r0
   25414:	mov	r0, #2
   25418:	str	r0, [r1, #4]
   2541c:	str	r5, [r1, #32]
   25420:	ldr	r0, [r6, #8]
   25424:	str	r0, [r1, #8]
   25428:	mov	r0, r6
   2542c:	bl	115a8 <myhtml_tree_node_add_child@plt>
   25430:	mov	r0, r4
   25434:	pop	{r4, r5, r6, sl, fp, pc}
   25438:	ldr	r1, [r5, #48]	; 0x30
   2543c:	tst	r1, #8
   25440:	bne	25458 <myhtml_insertion_mode_after_body@@Base+0xe0>
   25444:	mov	r1, #6
   25448:	mov	r4, #1
   2544c:	str	r1, [r0, #168]	; 0xa8
   25450:	mov	r0, r4
   25454:	pop	{r4, r5, r6, sl, fp, pc}
   25458:	mov	r1, r5
   2545c:	pop	{r4, r5, r6, sl, fp, lr}
   25460:	b	20fb0 <myhtml_insertion_mode_in_body@@Base>

00025464 <myhtml_insertion_mode_in_frameset@@Base>:
   25464:	push	{r4, r5, fp, lr}
   25468:	add	fp, sp, #8
   2546c:	mov	r4, r0
   25470:	mov	r5, r1
   25474:	ldr	r0, [r1]
   25478:	ldr	r1, [r1, #48]	; 0x30
   2547c:	tst	r1, #1
   25480:	bne	25560 <myhtml_insertion_mode_in_frameset@@Base+0xfc>
   25484:	cmp	r0, #52	; 0x34
   25488:	ble	255bc <myhtml_insertion_mode_in_frameset@@Base+0x158>
   2548c:	sub	r1, r0, #53	; 0x35
   25490:	cmp	r1, #39	; 0x27
   25494:	bhi	255e4 <myhtml_insertion_mode_in_frameset@@Base+0x180>
   25498:	add	r0, pc, #4
   2549c:	ldr	r1, [r0, r1, lsl #2]
   254a0:	add	pc, r0, r1
   254a4:	andeq	r0, r0, r0, lsr #1
   254a8:	andeq	r0, r0, r8, asr r1
   254ac:	andeq	r0, r0, ip, asr #3
   254b0:	andeq	r0, r0, ip, asr #3
   254b4:	andeq	r0, r0, ip, asr #3
   254b8:	andeq	r0, r0, ip, asr #3
   254bc:	andeq	r0, r0, ip, asr #3
   254c0:	andeq	r0, r0, ip, asr #3
   254c4:	andeq	r0, r0, ip, asr #3
   254c8:	andeq	r0, r0, ip, asr #3
   254cc:	andeq	r0, r0, ip, asr #3
   254d0:	andeq	r0, r0, ip, asr #3
   254d4:	andeq	r0, r0, ip, ror #2
   254d8:	andeq	r0, r0, ip, asr #3
   254dc:	andeq	r0, r0, ip, asr #3
   254e0:	andeq	r0, r0, ip, asr #3
   254e4:	andeq	r0, r0, ip, asr #3
   254e8:	andeq	r0, r0, ip, asr #3
   254ec:	andeq	r0, r0, ip, asr #3
   254f0:	andeq	r0, r0, ip, asr #3
   254f4:	andeq	r0, r0, ip, asr #3
   254f8:	andeq	r0, r0, ip, asr #3
   254fc:	andeq	r0, r0, ip, asr #3
   25500:	andeq	r0, r0, ip, asr #3
   25504:	andeq	r0, r0, ip, asr #3
   25508:	andeq	r0, r0, ip, asr #3
   2550c:	andeq	r0, r0, ip, asr #3
   25510:	andeq	r0, r0, ip, asr #3
   25514:	andeq	r0, r0, ip, asr #3
   25518:	andeq	r0, r0, ip, asr #3
   2551c:	andeq	r0, r0, ip, asr #3
   25520:	andeq	r0, r0, ip, asr #3
   25524:	andeq	r0, r0, ip, asr #3
   25528:	andeq	r0, r0, ip, asr #3
   2552c:	andeq	r0, r0, ip, asr #3
   25530:	andeq	r0, r0, ip, asr #3
   25534:	andeq	r0, r0, ip, asr #3
   25538:	andeq	r0, r0, ip, asr #3
   2553c:	andeq	r0, r0, ip, asr #3
   25540:	andeq	r0, r0, ip, ror r1
   25544:	mov	r0, r4
   25548:	mov	r1, r5
   2554c:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   25550:	mov	r0, r4
   25554:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   25558:	mov	r0, #0
   2555c:	pop	{r4, r5, fp, pc}
   25560:	cmp	r0, #54	; 0x36
   25564:	bne	25670 <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   25568:	mov	r0, r4
   2556c:	bl	11530 <myhtml_tree_current_node@plt>
   25570:	ldr	r1, [r4, #84]	; 0x54
   25574:	ldr	r1, [r1, #20]
   25578:	cmp	r0, r1
   2557c:	beq	25670 <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   25580:	mov	r0, r4
   25584:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   25588:	mov	r0, r4
   2558c:	bl	11530 <myhtml_tree_current_node@plt>
   25590:	ldr	r1, [r4, #88]	; 0x58
   25594:	cmp	r1, #0
   25598:	bne	25670 <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   2559c:	ldr	r1, [r0, #4]
   255a0:	cmp	r1, #54	; 0x36
   255a4:	ldreq	r0, [r0, #8]
   255a8:	cmpeq	r0, #1
   255ac:	beq	25670 <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   255b0:	mov	r0, #20
   255b4:	str	r0, [r4, #168]	; 0xa8
   255b8:	b	25670 <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   255bc:	cmp	r0, #1
   255c0:	beq	25630 <myhtml_insertion_mode_in_frameset@@Base+0x1cc>
   255c4:	cmp	r0, #2
   255c8:	bne	25670 <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   255cc:	mov	r0, r4
   255d0:	mov	r1, r5
   255d4:	mov	r2, #0
   255d8:	bl	11284 <myhtml_tree_node_insert_comment@plt>
   255dc:	mov	r0, #0
   255e0:	pop	{r4, r5, fp, pc}
   255e4:	cmp	r0, #251	; 0xfb
   255e8:	bne	25670 <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   255ec:	mov	r0, r4
   255f0:	bl	11530 <myhtml_tree_current_node@plt>
   255f4:	mov	r0, #0
   255f8:	pop	{r4, r5, fp, pc}
   255fc:	mov	r0, r4
   25600:	mov	r1, r5
   25604:	bl	10e28 <myhtml_tree_node_insert_html_element@plt>
   25608:	mov	r0, #0
   2560c:	pop	{r4, r5, fp, pc}
   25610:	mov	r0, r4
   25614:	mov	r1, r5
   25618:	pop	{r4, r5, fp, lr}
   2561c:	b	20fb0 <myhtml_insertion_mode_in_body@@Base>
   25620:	mov	r0, r4
   25624:	mov	r1, r5
   25628:	pop	{r4, r5, fp, lr}
   2562c:	b	2263c <myhtml_insertion_mode_in_head@@Base>
   25630:	ldr	r0, [r5, #48]	; 0x30
   25634:	tst	r0, #8
   25638:	bne	2565c <myhtml_insertion_mode_in_frameset@@Base+0x1f8>
   2563c:	ldr	r0, [r4, #8]
   25640:	mov	r1, r5
   25644:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   25648:	add	r0, r5, #4
   2564c:	bl	112e4 <mycore_string_stay_only_whitespace@plt>
   25650:	ldr	r0, [r5, #12]
   25654:	cmp	r0, #0
   25658:	beq	25670 <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   2565c:	mov	r0, r4
   25660:	mov	r1, r5
   25664:	bl	11074 <myhtml_tree_node_insert_text@plt>
   25668:	mov	r0, #0
   2566c:	pop	{r4, r5, fp, pc}
   25670:	mov	r0, #0
   25674:	pop	{r4, r5, fp, pc}

00025678 <myhtml_insertion_mode_after_frameset@@Base>:
   25678:	push	{r4, r5, fp, lr}
   2567c:	add	fp, sp, #8
   25680:	mov	r4, r0
   25684:	mov	r5, r1
   25688:	ldr	r0, [r1]
   2568c:	ldr	r1, [r1, #48]	; 0x30
   25690:	tst	r1, #1
   25694:	bne	256c8 <myhtml_insertion_mode_after_frameset@@Base+0x50>
   25698:	cmp	r0, #64	; 0x40
   2569c:	bgt	256dc <myhtml_insertion_mode_after_frameset@@Base+0x64>
   256a0:	cmp	r0, #1
   256a4:	beq	256fc <myhtml_insertion_mode_after_frameset@@Base+0x84>
   256a8:	cmp	r0, #2
   256ac:	bne	256d4 <myhtml_insertion_mode_after_frameset@@Base+0x5c>
   256b0:	mov	r0, r4
   256b4:	mov	r1, r5
   256b8:	mov	r2, #0
   256bc:	bl	11284 <myhtml_tree_node_insert_comment@plt>
   256c0:	mov	r0, #0
   256c4:	pop	{r4, r5, fp, pc}
   256c8:	cmp	r0, #65	; 0x41
   256cc:	moveq	r0, #22
   256d0:	streq	r0, [r4, #168]	; 0xa8
   256d4:	mov	r0, #0
   256d8:	pop	{r4, r5, fp, pc}
   256dc:	cmp	r0, #65	; 0x41
   256e0:	beq	2573c <myhtml_insertion_mode_after_frameset@@Base+0xc4>
   256e4:	cmp	r0, #92	; 0x5c
   256e8:	bne	256d4 <myhtml_insertion_mode_after_frameset@@Base+0x5c>
   256ec:	mov	r0, r4
   256f0:	mov	r1, r5
   256f4:	pop	{r4, r5, fp, lr}
   256f8:	b	2263c <myhtml_insertion_mode_in_head@@Base>
   256fc:	ldr	r0, [r5, #48]	; 0x30
   25700:	tst	r0, #8
   25704:	bne	25728 <myhtml_insertion_mode_after_frameset@@Base+0xb0>
   25708:	ldr	r0, [r4, #8]
   2570c:	mov	r1, r5
   25710:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   25714:	add	r0, r5, #4
   25718:	bl	112e4 <mycore_string_stay_only_whitespace@plt>
   2571c:	ldr	r0, [r5, #12]
   25720:	cmp	r0, #0
   25724:	beq	256d4 <myhtml_insertion_mode_after_frameset@@Base+0x5c>
   25728:	mov	r0, r4
   2572c:	mov	r1, r5
   25730:	bl	11074 <myhtml_tree_node_insert_text@plt>
   25734:	mov	r0, #0
   25738:	pop	{r4, r5, fp, pc}
   2573c:	mov	r0, r4
   25740:	mov	r1, r5
   25744:	pop	{r4, r5, fp, lr}
   25748:	b	20fb0 <myhtml_insertion_mode_in_body@@Base>

0002574c <myhtml_insertion_mode_after_after_body@@Base>:
   2574c:	push	{r4, r5, r6, sl, fp, lr}
   25750:	add	fp, sp, #16
   25754:	mov	r5, r1
   25758:	ldr	r1, [r1, #48]	; 0x30
   2575c:	tst	r1, #1
   25760:	bne	257e8 <myhtml_insertion_mode_after_after_body@@Base+0x9c>
   25764:	ldr	r1, [r5]
   25768:	mov	r4, #0
   2576c:	cmp	r1, #2
   25770:	ble	2578c <myhtml_insertion_mode_after_after_body@@Base+0x40>
   25774:	cmp	r1, #3
   25778:	cmpne	r1, #65	; 0x41
   2577c:	bne	257cc <myhtml_insertion_mode_after_after_body@@Base+0x80>
   25780:	mov	r1, r5
   25784:	pop	{r4, r5, r6, sl, fp, lr}
   25788:	b	20fb0 <myhtml_insertion_mode_in_body@@Base>
   2578c:	cmp	r1, #1
   25790:	beq	257dc <myhtml_insertion_mode_after_after_body@@Base+0x90>
   25794:	cmp	r1, #2
   25798:	bne	257e8 <myhtml_insertion_mode_after_after_body@@Base+0x9c>
   2579c:	ldr	r6, [r0, #84]	; 0x54
   257a0:	bl	110c8 <myhtml_tree_node_create@plt>
   257a4:	mov	r1, r0
   257a8:	mov	r0, #2
   257ac:	str	r0, [r1, #4]
   257b0:	str	r5, [r1, #32]
   257b4:	ldr	r0, [r6, #8]
   257b8:	str	r0, [r1, #8]
   257bc:	mov	r0, r6
   257c0:	bl	115a8 <myhtml_tree_node_add_child@plt>
   257c4:	mov	r0, r4
   257c8:	pop	{r4, r5, r6, sl, fp, pc}
   257cc:	cmp	r1, #251	; 0xfb
   257d0:	bne	257e8 <myhtml_insertion_mode_after_after_body@@Base+0x9c>
   257d4:	mov	r0, r4
   257d8:	pop	{r4, r5, r6, sl, fp, pc}
   257dc:	ldr	r1, [r5, #48]	; 0x30
   257e0:	tst	r1, #8
   257e4:	bne	25780 <myhtml_insertion_mode_after_after_body@@Base+0x34>
   257e8:	mov	r1, #6
   257ec:	mov	r4, #1
   257f0:	str	r1, [r0, #168]	; 0xa8
   257f4:	mov	r0, r4
   257f8:	pop	{r4, r5, r6, sl, fp, pc}

000257fc <myhtml_insertion_mode_after_after_frameset@@Base>:
   257fc:	push	{r4, r5, r6, sl, fp, lr}
   25800:	add	fp, sp, #16
   25804:	mov	r5, r0
   25808:	ldr	r0, [r1, #48]	; 0x30
   2580c:	tst	r0, #1
   25810:	bne	258c8 <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   25814:	ldr	r0, [r1]
   25818:	mov	r4, r1
   2581c:	cmp	r0, #2
   25820:	ble	25840 <myhtml_insertion_mode_after_after_frameset@@Base+0x44>
   25824:	cmp	r0, #3
   25828:	cmpne	r0, #65	; 0x41
   2582c:	bne	25880 <myhtml_insertion_mode_after_after_frameset@@Base+0x84>
   25830:	mov	r0, r5
   25834:	mov	r1, r4
   25838:	pop	{r4, r5, r6, sl, fp, lr}
   2583c:	b	20fb0 <myhtml_insertion_mode_in_body@@Base>
   25840:	cmp	r0, #1
   25844:	beq	25898 <myhtml_insertion_mode_after_after_frameset@@Base+0x9c>
   25848:	cmp	r0, #2
   2584c:	bne	258c8 <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   25850:	ldr	r6, [r5, #84]	; 0x54
   25854:	mov	r0, r5
   25858:	bl	110c8 <myhtml_tree_node_create@plt>
   2585c:	mov	r1, r0
   25860:	mov	r0, #2
   25864:	str	r0, [r1, #4]
   25868:	str	r4, [r1, #32]
   2586c:	ldr	r0, [r6, #8]
   25870:	str	r0, [r1, #8]
   25874:	mov	r0, r6
   25878:	bl	115a8 <myhtml_tree_node_add_child@plt>
   2587c:	b	258c8 <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   25880:	cmp	r0, #92	; 0x5c
   25884:	bne	258c8 <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   25888:	mov	r0, r5
   2588c:	mov	r1, r4
   25890:	pop	{r4, r5, r6, sl, fp, lr}
   25894:	b	2263c <myhtml_insertion_mode_in_head@@Base>
   25898:	ldr	r0, [r4, #48]	; 0x30
   2589c:	tst	r0, #8
   258a0:	bne	25830 <myhtml_insertion_mode_after_after_frameset@@Base+0x34>
   258a4:	mov	r0, r5
   258a8:	mov	r1, r4
   258ac:	bl	10ffc <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   258b0:	cmp	r0, #0
   258b4:	beq	258c8 <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   258b8:	mov	r1, r0
   258bc:	mov	r0, r5
   258c0:	pop	{r4, r5, r6, sl, fp, lr}
   258c4:	b	20fb0 <myhtml_insertion_mode_in_body@@Base>
   258c8:	mov	r0, #0
   258cc:	pop	{r4, r5, r6, sl, fp, pc}

000258d0 <myhtml_insertion_mode_in_foreign_content_end_other@@Base>:
   258d0:	push	{r4, sl, fp, lr}
   258d4:	add	fp, sp, #8
   258d8:	ldr	r1, [r0, #128]	; 0x80
   258dc:	ldr	r3, [r1, #4]
   258e0:	cmp	r3, #0
   258e4:	ldrne	ip, [r1]
   258e8:	ldrne	r3, [r1, #4]
   258ec:	subsne	r1, r3, #1
   258f0:	bne	25910 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x40>
   258f4:	ldr	r1, [r0]
   258f8:	ldr	r3, [r0, #168]	; 0xa8
   258fc:	ldr	r1, [r1, #28]
   25900:	ldr	r3, [r1, r3, lsl #2]
   25904:	mov	r1, r2
   25908:	pop	{r4, sl, fp, lr}
   2590c:	bx	r3
   25910:	ldr	r1, [ip, r1, lsl #2]
   25914:	ldr	lr, [r2]
   25918:	rsb	r3, r3, #2
   2591c:	ldr	r4, [r1, #4]
   25920:	cmp	r4, lr
   25924:	beq	25944 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x74>
   25928:	cmp	r3, #0
   2592c:	ldrne	r1, [ip, -r3, lsl #2]
   25930:	addne	r3, r3, #1
   25934:	ldrne	r4, [r1, #8]
   25938:	cmpne	r4, #1
   2593c:	bne	2591c <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x4c>
   25940:	b	258f4 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x24>
   25944:	mov	r2, #0
   25948:	bl	111c4 <myhtml_tree_open_elements_pop_until_by_node@plt>
   2594c:	mov	r0, #0
   25950:	pop	{r4, sl, fp, pc}

00025954 <myhtml_insertion_mode_in_foreign_content_start_other@@Base>:
   25954:	push	{r4, r5, r6, sl, fp, lr}
   25958:	add	fp, sp, #16
   2595c:	mov	r5, r1
   25960:	mov	r4, r0
   25964:	bl	11a4c <myhtml_tree_adjusted_current_node@plt>
   25968:	mov	r6, r0
   2596c:	ldr	r0, [r4, #8]
   25970:	mov	r1, r5
   25974:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   25978:	ldr	r0, [r6, #8]
   2597c:	cmp	r0, #3
   25980:	beq	25998 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x44>
   25984:	cmp	r0, #2
   25988:	bne	259a0 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x4c>
   2598c:	mov	r0, r5
   25990:	bl	1105c <myhtml_token_adjust_mathml_attributes@plt>
   25994:	b	259a0 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x4c>
   25998:	mov	r0, r5
   2599c:	bl	1123c <myhtml_token_adjust_svg_attributes@plt>
   259a0:	mov	r0, r5
   259a4:	bl	11944 <myhtml_token_adjust_foreign_attributes@plt>
   259a8:	mov	r0, r4
   259ac:	mov	r1, r5
   259b0:	bl	11a70 <myhtml_tree_node_insert_foreign_element@plt>
   259b4:	ldr	r1, [r6, #8]
   259b8:	str	r1, [r0, #8]
   259bc:	ldr	r0, [r5, #48]	; 0x30
   259c0:	tst	r0, #2
   259c4:	beq	259e0 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x8c>
   259c8:	cmp	r1, #3
   259cc:	ldreq	r0, [r5]
   259d0:	cmpeq	r0, #112	; 0x70
   259d4:	beq	259e8 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x94>
   259d8:	mov	r0, r4
   259dc:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   259e0:	mov	r0, #0
   259e4:	pop	{r4, r5, r6, sl, fp, pc}
   259e8:	mov	r0, r4
   259ec:	bl	11530 <myhtml_tree_current_node@plt>
   259f0:	ldr	r1, [r4, #128]	; 0x80
   259f4:	ldr	r0, [r1, #4]
   259f8:	cmp	r0, #0
   259fc:	ldrne	r0, [r1]
   25a00:	ldrne	r2, [r1, #4]
   25a04:	subsne	r1, r2, #1
   25a08:	bne	25a2c <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0xd8>
   25a0c:	ldr	r0, [r4]
   25a10:	ldr	r1, [r4, #168]	; 0xa8
   25a14:	ldr	r0, [r0, #28]
   25a18:	ldr	r2, [r0, r1, lsl #2]
   25a1c:	mov	r0, r4
   25a20:	mov	r1, r5
   25a24:	pop	{r4, r5, r6, sl, fp, lr}
   25a28:	bx	r2
   25a2c:	ldr	r1, [r0, r1, lsl #2]
   25a30:	ldr	r3, [r5]
   25a34:	rsb	r2, r2, #2
   25a38:	ldr	r6, [r1, #4]
   25a3c:	cmp	r6, r3
   25a40:	beq	25a60 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x10c>
   25a44:	cmp	r2, #0
   25a48:	ldrne	r1, [r0, -r2, lsl #2]
   25a4c:	addne	r2, r2, #1
   25a50:	ldrne	r6, [r1, #8]
   25a54:	cmpne	r6, #1
   25a58:	bne	25a38 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0xe4>
   25a5c:	b	25a0c <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0xb8>
   25a60:	mov	r0, r4
   25a64:	mov	r2, #0
   25a68:	bl	111c4 <myhtml_tree_open_elements_pop_until_by_node@plt>
   25a6c:	mov	r0, #0
   25a70:	pop	{r4, r5, r6, sl, fp, pc}

00025a74 <myhtml_insertion_mode_in_foreign_content@@Base>:
   25a74:	push	{r4, r5, r6, sl, fp, lr}
   25a78:	add	fp, sp, #16
   25a7c:	mov	r4, r0
   25a80:	ldr	r0, [r1, #48]	; 0x30
   25a84:	mov	r5, r1
   25a88:	tst	r0, #1
   25a8c:	bne	25cfc <myhtml_insertion_mode_in_foreign_content@@Base+0x288>
   25a90:	ldr	r0, [r5]
   25a94:	sub	r0, r0, #1
   25a98:	cmp	r0, #139	; 0x8b
   25a9c:	bhi	25cec <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   25aa0:	add	r1, pc, #8
   25aa4:	mov	r6, #0
   25aa8:	ldr	r0, [r1, r0, lsl #2]
   25aac:	add	pc, r1, r0
   25ab0:	andeq	r0, r0, r8, ror #6
   25ab4:	andeq	r0, r0, r0, asr #7
   25ab8:	strdeq	r0, [r0], -r8
   25abc:	andeq	r0, r0, ip, lsr r2
   25ac0:	andeq	r0, r0, ip, lsr r2
   25ac4:	andeq	r0, r0, ip, lsr r2
   25ac8:	andeq	r0, r0, ip, lsr r2
   25acc:	andeq	r0, r0, ip, lsr r2
   25ad0:	andeq	r0, r0, ip, lsr r2
   25ad4:	andeq	r0, r0, ip, lsr r2
   25ad8:	andeq	r0, r0, ip, lsr r2
   25adc:	andeq	r0, r0, ip, lsr r2
   25ae0:	andeq	r0, r0, ip, lsr r2
   25ae4:	andeq	r0, r0, r0, lsr r2
   25ae8:	andeq	r0, r0, ip, lsr r2
   25aec:	andeq	r0, r0, ip, lsr r2
   25af0:	andeq	r0, r0, ip, lsr r2
   25af4:	andeq	r0, r0, ip, lsr r2
   25af8:	andeq	r0, r0, ip, lsr r2
   25afc:	andeq	r0, r0, r0, lsr r2
   25b00:	andeq	r0, r0, ip, lsr r2
   25b04:	andeq	r0, r0, r0, lsr r2
   25b08:	andeq	r0, r0, r0, lsr r2
   25b0c:	andeq	r0, r0, r0, lsr r2
   25b10:	andeq	r0, r0, ip, lsr r2
   25b14:	andeq	r0, r0, ip, lsr r2
   25b18:	andeq	r0, r0, ip, lsr r2
   25b1c:	andeq	r0, r0, r0, lsr r2
   25b20:	andeq	r0, r0, ip, lsr r2
   25b24:	andeq	r0, r0, r0, lsr r2
   25b28:	andeq	r0, r0, ip, lsr r2
   25b2c:	andeq	r0, r0, ip, lsr r2
   25b30:	andeq	r0, r0, ip, lsr r2
   25b34:	andeq	r0, r0, ip, lsr r2
   25b38:	andeq	r0, r0, ip, lsr r2
   25b3c:	andeq	r0, r0, r0, lsr r2
   25b40:	andeq	r0, r0, ip, lsr r2
   25b44:	andeq	r0, r0, ip, lsr r2
   25b48:	andeq	r0, r0, ip, lsr r2
   25b4c:	andeq	r0, r0, ip, lsr r2
   25b50:	andeq	r0, r0, ip, lsr r2
   25b54:	andeq	r0, r0, r0, lsr r2
   25b58:	andeq	r0, r0, r0, lsr r2
   25b5c:	andeq	r0, r0, r0, lsr r2
   25b60:	andeq	r0, r0, r0, lsr r2
   25b64:	andeq	r0, r0, r0, lsr r2
   25b68:	andeq	r0, r0, ip, lsr r2
   25b6c:	andeq	r0, r0, ip, lsr r2
   25b70:	andeq	r0, r0, ip, lsr r2
   25b74:	ldrdeq	r0, [r0], -ip
   25b78:	andeq	r0, r0, ip, lsr r2
   25b7c:	andeq	r0, r0, ip, lsr r2
   25b80:	andeq	r0, r0, ip, lsr r2
   25b84:	andeq	r0, r0, ip, lsr r2
   25b88:	andeq	r0, r0, r0, lsr r2
   25b8c:	andeq	r0, r0, r0, lsr r2
   25b90:	andeq	r0, r0, r0, lsr r2
   25b94:	andeq	r0, r0, r0, lsr r2
   25b98:	andeq	r0, r0, r0, lsr r2
   25b9c:	andeq	r0, r0, r0, lsr r2
   25ba0:	andeq	r0, r0, r0, lsr r2
   25ba4:	andeq	r0, r0, ip, lsr r2
   25ba8:	andeq	r0, r0, ip, lsr r2
   25bac:	andeq	r0, r0, r0, lsr r2
   25bb0:	andeq	r0, r0, ip, lsr r2
   25bb4:	andeq	r0, r0, r0, lsr r2
   25bb8:	andeq	r0, r0, ip, lsr r2
   25bbc:	andeq	r0, r0, ip, lsr r2
   25bc0:	andeq	r0, r0, r0, lsr r2
   25bc4:	andeq	r0, r0, ip, lsr r2
   25bc8:	andeq	r0, r0, ip, lsr r2
   25bcc:	andeq	r0, r0, ip, lsr r2
   25bd0:	andeq	r0, r0, ip, lsr r2
   25bd4:	andeq	r0, r0, ip, lsr r2
   25bd8:	andeq	r0, r0, ip, lsr r2
   25bdc:	andeq	r0, r0, ip, lsr r2
   25be0:	andeq	r0, r0, r0, lsr r2
   25be4:	andeq	r0, r0, ip, lsr r2
   25be8:	andeq	r0, r0, r0, lsr r2
   25bec:	andeq	r0, r0, ip, lsr r2
   25bf0:	andeq	r0, r0, ip, lsr r2
   25bf4:	andeq	r0, r0, ip, lsr r2
   25bf8:	andeq	r0, r0, ip, lsr r2
   25bfc:	andeq	r0, r0, r0, lsr r2
   25c00:	andeq	r0, r0, ip, lsr r2
   25c04:	andeq	r0, r0, r0, lsr r2
   25c08:	andeq	r0, r0, ip, lsr r2
   25c0c:	andeq	r0, r0, ip, lsr r2
   25c10:	andeq	r0, r0, ip, lsr r2
   25c14:	andeq	r0, r0, r0, lsr r2
   25c18:	andeq	r0, r0, ip, lsr r2
   25c1c:	andeq	r0, r0, ip, lsr r2
   25c20:	andeq	r0, r0, ip, lsr r2
   25c24:	andeq	r0, r0, ip, lsr r2
   25c28:	andeq	r0, r0, r0, lsr r2
   25c2c:	andeq	r0, r0, ip, lsr r2
   25c30:	andeq	r0, r0, ip, lsr r2
   25c34:	andeq	r0, r0, ip, lsr r2
   25c38:	andeq	r0, r0, r0, lsr r2
   25c3c:	andeq	r0, r0, ip, lsr r2
   25c40:	andeq	r0, r0, ip, lsr r2
   25c44:	andeq	r0, r0, r0, lsr r2
   25c48:	andeq	r0, r0, ip, lsr r2
   25c4c:	andeq	r0, r0, ip, lsr r2
   25c50:	andeq	r0, r0, ip, lsr r2
   25c54:	andeq	r0, r0, ip, lsr r2
   25c58:	andeq	r0, r0, ip, lsr r2
   25c5c:	andeq	r0, r0, ip, lsr r2
   25c60:	andeq	r0, r0, r0, lsr r2
   25c64:	andeq	r0, r0, r0, lsr r2
   25c68:	andeq	r0, r0, ip, lsr r2
   25c6c:	andeq	r0, r0, ip, lsr r2
   25c70:	andeq	r0, r0, ip, lsr r2
   25c74:	andeq	r0, r0, ip, lsr r2
   25c78:	andeq	r0, r0, r0, lsr r2
   25c7c:	andeq	r0, r0, ip, lsr r2
   25c80:	andeq	r0, r0, r0, lsr r2
   25c84:	andeq	r0, r0, r0, lsr r2
   25c88:	andeq	r0, r0, r0, lsr r2
   25c8c:	andeq	r0, r0, ip, lsr r2
   25c90:	andeq	r0, r0, r0, lsr r2
   25c94:	andeq	r0, r0, ip, lsr r2
   25c98:	andeq	r0, r0, r0, lsr r2
   25c9c:	andeq	r0, r0, ip, lsr r2
   25ca0:	andeq	r0, r0, r0, lsr r2
   25ca4:	andeq	r0, r0, ip, lsr r2
   25ca8:	andeq	r0, r0, ip, lsr r2
   25cac:	andeq	r0, r0, ip, lsr r2
   25cb0:	andeq	r0, r0, ip, lsr r2
   25cb4:	andeq	r0, r0, ip, lsr r2
   25cb8:	andeq	r0, r0, ip, lsr r2
   25cbc:	andeq	r0, r0, ip, lsr r2
   25cc0:	andeq	r0, r0, ip, lsr r2
   25cc4:	andeq	r0, r0, ip, lsr r2
   25cc8:	andeq	r0, r0, ip, lsr r2
   25ccc:	andeq	r0, r0, ip, lsr r2
   25cd0:	andeq	r0, r0, r0, lsr r2
   25cd4:	andeq	r0, r0, r0, lsr r2
   25cd8:	andeq	r0, r0, r0, lsr r2
   25cdc:	andeq	r0, r0, r0, lsr r2
   25ce0:	ldr	r0, [r4, #88]	; 0x58
   25ce4:	cmp	r0, #0
   25ce8:	beq	25d54 <myhtml_insertion_mode_in_foreign_content@@Base+0x2e0>
   25cec:	mov	r0, r4
   25cf0:	mov	r1, r5
   25cf4:	pop	{r4, r5, r6, sl, fp, lr}
   25cf8:	b	25954 <myhtml_insertion_mode_in_foreign_content_start_other@@Base>
   25cfc:	mov	r0, r4
   25d00:	bl	11530 <myhtml_tree_current_node@plt>
   25d04:	ldr	r2, [r5]
   25d08:	cmp	r2, #112	; 0x70
   25d0c:	ldreq	r1, [r0, #4]
   25d10:	cmpeq	r1, #112	; 0x70
   25d14:	beq	25de0 <myhtml_insertion_mode_in_foreign_content@@Base+0x36c>
   25d18:	ldr	r1, [r4, #128]	; 0x80
   25d1c:	ldr	r0, [r1, #4]
   25d20:	cmp	r0, #0
   25d24:	ldrne	r0, [r1]
   25d28:	ldrne	r3, [r1, #4]
   25d2c:	subsne	r1, r3, #1
   25d30:	bne	25db0 <myhtml_insertion_mode_in_foreign_content@@Base+0x33c>
   25d34:	ldr	r0, [r4]
   25d38:	ldr	r1, [r4, #168]	; 0xa8
   25d3c:	ldr	r0, [r0, #28]
   25d40:	ldr	r2, [r0, r1, lsl #2]
   25d44:	mov	r0, r4
   25d48:	mov	r1, r5
   25d4c:	pop	{r4, r5, r6, sl, fp, lr}
   25d50:	bx	r2
   25d54:	mov	r6, #1
   25d58:	mov	r0, r4
   25d5c:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   25d60:	mov	r0, r4
   25d64:	bl	11530 <myhtml_tree_current_node@plt>
   25d68:	cmp	r0, #0
   25d6c:	beq	25da8 <myhtml_insertion_mode_in_foreign_content@@Base+0x334>
   25d70:	mov	r5, r0
   25d74:	mov	r0, r4
   25d78:	mov	r1, r5
   25d7c:	bl	1111c <myhtml_tree_is_mathml_integration_point@plt>
   25d80:	cmp	r0, #0
   25d84:	bne	25da8 <myhtml_insertion_mode_in_foreign_content@@Base+0x334>
   25d88:	mov	r0, r4
   25d8c:	mov	r1, r5
   25d90:	bl	11254 <myhtml_tree_is_html_integration_point@plt>
   25d94:	cmp	r0, #0
   25d98:	bne	25da8 <myhtml_insertion_mode_in_foreign_content@@Base+0x334>
   25d9c:	ldr	r0, [r5, #8]
   25da0:	cmp	r0, #1
   25da4:	bne	25d58 <myhtml_insertion_mode_in_foreign_content@@Base+0x2e4>
   25da8:	mov	r0, r6
   25dac:	pop	{r4, r5, r6, sl, fp, pc}
   25db0:	ldr	r1, [r0, r1, lsl #2]
   25db4:	rsb	r3, r3, #2
   25db8:	ldr	r6, [r1, #4]
   25dbc:	cmp	r6, r2
   25dc0:	beq	25e00 <myhtml_insertion_mode_in_foreign_content@@Base+0x38c>
   25dc4:	cmp	r3, #0
   25dc8:	ldrne	r1, [r0, -r3, lsl #2]
   25dcc:	addne	r3, r3, #1
   25dd0:	ldrne	r6, [r1, #8]
   25dd4:	cmpne	r6, #1
   25dd8:	bne	25db8 <myhtml_insertion_mode_in_foreign_content@@Base+0x344>
   25ddc:	b	25d34 <myhtml_insertion_mode_in_foreign_content@@Base+0x2c0>
   25de0:	ldr	r0, [r0, #8]
   25de4:	cmp	r0, #3
   25de8:	bne	25d18 <myhtml_insertion_mode_in_foreign_content@@Base+0x2a4>
   25dec:	mov	r0, r4
   25df0:	bl	1120c <myhtml_tree_open_elements_pop@plt>
   25df4:	mov	r6, #0
   25df8:	mov	r0, r6
   25dfc:	pop	{r4, r5, r6, sl, fp, pc}
   25e00:	mov	r0, r4
   25e04:	mov	r2, #0
   25e08:	mov	r6, #0
   25e0c:	bl	111c4 <myhtml_tree_open_elements_pop_until_by_node@plt>
   25e10:	mov	r0, r6
   25e14:	pop	{r4, r5, r6, sl, fp, pc}
   25e18:	ldr	r0, [r5, #48]	; 0x30
   25e1c:	tst	r0, #2048	; 0x800
   25e20:	beq	25e3c <myhtml_insertion_mode_in_foreign_content@@Base+0x3c8>
   25e24:	ldr	r0, [r4, #8]
   25e28:	mov	r1, r5
   25e2c:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   25e30:	mov	r0, r4
   25e34:	mov	r1, r5
   25e38:	bl	112fc <myhtml_token_set_replacement_character_for_null_token@plt>
   25e3c:	mov	r0, r4
   25e40:	mov	r1, r5
   25e44:	bl	11074 <myhtml_tree_node_insert_text@plt>
   25e48:	ldr	r0, [r5, #48]	; 0x30
   25e4c:	tst	r0, #8
   25e50:	bne	25da8 <myhtml_insertion_mode_in_foreign_content@@Base+0x334>
   25e54:	ldr	r0, [r4, #180]	; 0xb4
   25e58:	ldr	r1, [r4, #180]	; 0xb4
   25e5c:	and	r0, r0, #2
   25e60:	eor	r0, r1, r0
   25e64:	str	r0, [r4, #180]	; 0xb4
   25e68:	mov	r0, r6
   25e6c:	pop	{r4, r5, r6, sl, fp, pc}
   25e70:	mov	r0, r4
   25e74:	mov	r1, r5
   25e78:	mov	r2, #0
   25e7c:	mov	r6, #0
   25e80:	bl	11284 <myhtml_tree_node_insert_comment@plt>
   25e84:	mov	r0, r6
   25e88:	pop	{r4, r5, r6, sl, fp, pc}
   25e8c:	ldr	r0, [r4, #8]
   25e90:	mov	r1, r5
   25e94:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   25e98:	ldr	r1, [pc, #80]	; 25ef0 <myhtml_insertion_mode_in_foreign_content@@Base+0x47c>
   25e9c:	mov	r0, r5
   25ea0:	mov	r2, #5
   25ea4:	add	r1, pc, r1
   25ea8:	bl	11b54 <myhtml_token_attr_by_name@plt>
   25eac:	cmp	r0, #0
   25eb0:	bne	25ce0 <myhtml_insertion_mode_in_foreign_content@@Base+0x26c>
   25eb4:	ldr	r1, [pc, #56]	; 25ef4 <myhtml_insertion_mode_in_foreign_content@@Base+0x480>
   25eb8:	mov	r0, r5
   25ebc:	mov	r2, #4
   25ec0:	add	r1, pc, r1
   25ec4:	bl	11b54 <myhtml_token_attr_by_name@plt>
   25ec8:	cmp	r0, #0
   25ecc:	bne	25ce0 <myhtml_insertion_mode_in_foreign_content@@Base+0x26c>
   25ed0:	ldr	r1, [pc, #32]	; 25ef8 <myhtml_insertion_mode_in_foreign_content@@Base+0x484>
   25ed4:	mov	r0, r5
   25ed8:	mov	r2, #4
   25edc:	add	r1, pc, r1
   25ee0:	bl	11b54 <myhtml_token_attr_by_name@plt>
   25ee4:	cmp	r0, #0
   25ee8:	bne	25ce0 <myhtml_insertion_mode_in_foreign_content@@Base+0x26c>
   25eec:	b	25cec <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   25ef0:	andeq	fp, sp, r2, rrx
   25ef4:	andeq	fp, sp, fp, lsr #12
   25ef8:	andeq	fp, sp, r0, lsr r0

00025efc <myhtml_rules_check_for_first_newline@@Base>:
   25efc:	push	{r4, r5, r6, sl, fp, lr}
   25f00:	add	fp, sp, #16
   25f04:	mov	r5, r0
   25f08:	ldr	r0, [r0, #180]	; 0xb4
   25f0c:	mov	r4, #0
   25f10:	tst	r0, #64	; 0x40
   25f14:	beq	25f8c <myhtml_rules_check_for_first_newline@@Base+0x90>
   25f18:	ldr	r0, [r5, #180]	; 0xb4
   25f1c:	tst	r0, #128	; 0x80
   25f20:	beq	25f78 <myhtml_rules_check_for_first_newline@@Base+0x7c>
   25f24:	ldr	r0, [r1]
   25f28:	mov	r6, r1
   25f2c:	cmp	r0, #1
   25f30:	bne	25f78 <myhtml_rules_check_for_first_newline@@Base+0x7c>
   25f34:	ldr	r0, [r5, #8]
   25f38:	mov	r1, r6
   25f3c:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   25f40:	ldr	r0, [r6, #12]
   25f44:	cmp	r0, #0
   25f48:	beq	25fa8 <myhtml_rules_check_for_first_newline@@Base+0xac>
   25f4c:	ldr	r0, [r6, #4]
   25f50:	ldrb	r1, [r0]
   25f54:	cmp	r1, #10
   25f58:	bne	25f78 <myhtml_rules_check_for_first_newline@@Base+0x7c>
   25f5c:	mov	r1, #1
   25f60:	bl	11998 <mchar_async_crop_first_chars_without_cache@plt>
   25f64:	str	r0, [r6, #4]
   25f68:	ldr	r0, [r6, #12]
   25f6c:	subs	r0, r0, #1
   25f70:	str	r0, [r6, #12]
   25f74:	beq	25f94 <myhtml_rules_check_for_first_newline@@Base+0x98>
   25f78:	ldr	r0, [r5, #180]	; 0xb4
   25f7c:	ldr	r1, [r5, #180]	; 0xb4
   25f80:	and	r0, r0, #64	; 0x40
   25f84:	eor	r0, r1, r0
   25f88:	str	r0, [r5, #180]	; 0xb4
   25f8c:	mov	r0, r4
   25f90:	pop	{r4, r5, r6, sl, fp, pc}
   25f94:	ldr	r0, [r5, #180]	; 0xb4
   25f98:	ldr	r1, [r5, #180]	; 0xb4
   25f9c:	and	r0, r0, #64	; 0x40
   25fa0:	eor	r0, r1, r0
   25fa4:	str	r0, [r5, #180]	; 0xb4
   25fa8:	mov	r4, #1
   25fac:	mov	r0, r4
   25fb0:	pop	{r4, r5, r6, sl, fp, pc}

00025fb4 <myhtml_rules_tree_dispatcher@@Base>:
   25fb4:	push	{r4, r5, r6, sl, fp, lr}
   25fb8:	add	fp, sp, #16
   25fbc:	mov	r5, r0
   25fc0:	ldr	r0, [r0, #180]	; 0xb4
   25fc4:	mov	r4, r1
   25fc8:	tst	r0, #64	; 0x40
   25fcc:	beq	26040 <myhtml_rules_tree_dispatcher@@Base+0x8c>
   25fd0:	ldr	r0, [r5, #180]	; 0xb4
   25fd4:	tst	r0, #128	; 0x80
   25fd8:	beq	2602c <myhtml_rules_tree_dispatcher@@Base+0x78>
   25fdc:	ldr	r0, [r4]
   25fe0:	cmp	r0, #1
   25fe4:	bne	2602c <myhtml_rules_tree_dispatcher@@Base+0x78>
   25fe8:	ldr	r0, [r5, #8]
   25fec:	mov	r1, r4
   25ff0:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   25ff4:	ldr	r0, [r4, #12]
   25ff8:	cmp	r0, #0
   25ffc:	beq	260a0 <myhtml_rules_tree_dispatcher@@Base+0xec>
   26000:	ldr	r0, [r4, #4]
   26004:	ldrb	r1, [r0]
   26008:	cmp	r1, #10
   2600c:	bne	2602c <myhtml_rules_tree_dispatcher@@Base+0x78>
   26010:	mov	r1, #1
   26014:	bl	11998 <mchar_async_crop_first_chars_without_cache@plt>
   26018:	str	r0, [r4, #4]
   2601c:	ldr	r0, [r4, #12]
   26020:	subs	r0, r0, #1
   26024:	str	r0, [r4, #12]
   26028:	beq	26158 <myhtml_rules_tree_dispatcher@@Base+0x1a4>
   2602c:	ldr	r0, [r5, #180]	; 0xb4
   26030:	ldr	r1, [r5, #180]	; 0xb4
   26034:	and	r0, r0, #64	; 0x40
   26038:	eor	r0, r1, r0
   2603c:	str	r0, [r5, #180]	; 0xb4
   26040:	ldr	r0, [r5, #164]	; 0xa4
   26044:	cmp	r0, #0
   26048:	movne	r0, #0
   2604c:	strne	r0, [r5, #164]	; 0xa4
   26050:	mov	r0, r5
   26054:	bl	11a4c <myhtml_tree_adjusted_current_node@plt>
   26058:	mov	r6, r0
   2605c:	ldr	r0, [r5, #128]	; 0x80
   26060:	ldr	r0, [r0, #4]
   26064:	cmp	r0, #0
   26068:	ldrne	r0, [r6, #8]
   2606c:	cmpne	r0, #1
   26070:	bne	260ac <myhtml_rules_tree_dispatcher@@Base+0xf8>
   26074:	ldr	r0, [r5]
   26078:	ldr	r1, [r5, #168]	; 0xa8
   2607c:	ldr	r0, [r0, #28]
   26080:	ldr	r2, [r0, r1, lsl #2]
   26084:	mov	r0, r5
   26088:	mov	r1, r4
   2608c:	blx	r2
   26090:	mov	r1, r0
   26094:	mov	r0, #1
   26098:	cmp	r1, #0
   2609c:	popne	{r4, r5, r6, sl, fp, pc}
   260a0:	mov	r0, #0
   260a4:	str	r4, [r5, #152]	; 0x98
   260a8:	pop	{r4, r5, r6, sl, fp, pc}
   260ac:	mov	r0, r5
   260b0:	mov	r1, r6
   260b4:	bl	1111c <myhtml_tree_is_mathml_integration_point@plt>
   260b8:	cmp	r0, #0
   260bc:	beq	260d0 <myhtml_rules_tree_dispatcher@@Base+0x11c>
   260c0:	ldr	r0, [r4]
   260c4:	cmp	r0, #221	; 0xdd
   260c8:	cmpne	r0, #226	; 0xe2
   260cc:	bne	26138 <myhtml_rules_tree_dispatcher@@Base+0x184>
   260d0:	ldr	r0, [r6, #4]
   260d4:	cmp	r0, #8
   260d8:	bne	260f0 <myhtml_rules_tree_dispatcher@@Base+0x13c>
   260dc:	ldr	r0, [r6, #8]
   260e0:	cmp	r0, #2
   260e4:	ldreq	r0, [r4]
   260e8:	cmpeq	r0, #124	; 0x7c
   260ec:	beq	26148 <myhtml_rules_tree_dispatcher@@Base+0x194>
   260f0:	mov	r0, r5
   260f4:	mov	r1, r6
   260f8:	bl	11254 <myhtml_tree_is_html_integration_point@plt>
   260fc:	cmp	r0, #0
   26100:	beq	2611c <myhtml_rules_tree_dispatcher@@Base+0x168>
   26104:	ldr	r0, [r4, #48]	; 0x30
   26108:	tst	r0, #1
   2610c:	ldrne	r0, [r4]
   26110:	cmpne	r0, #1
   26114:	beq	26074 <myhtml_rules_tree_dispatcher@@Base+0xc0>
   26118:	b	26120 <myhtml_rules_tree_dispatcher@@Base+0x16c>
   2611c:	ldr	r0, [r4]
   26120:	cmp	r0, #251	; 0xfb
   26124:	beq	26074 <myhtml_rules_tree_dispatcher@@Base+0xc0>
   26128:	mov	r0, r5
   2612c:	mov	r1, r4
   26130:	bl	10f78 <myhtml_insertion_mode_in_foreign_content@plt>
   26134:	b	26090 <myhtml_rules_tree_dispatcher@@Base+0xdc>
   26138:	ldr	r0, [r4, #48]	; 0x30
   2613c:	tst	r0, #1
   26140:	beq	26074 <myhtml_rules_tree_dispatcher@@Base+0xc0>
   26144:	b	260d0 <myhtml_rules_tree_dispatcher@@Base+0x11c>
   26148:	ldr	r0, [r4, #48]	; 0x30
   2614c:	tst	r0, #1
   26150:	beq	26074 <myhtml_rules_tree_dispatcher@@Base+0xc0>
   26154:	b	260f0 <myhtml_rules_tree_dispatcher@@Base+0x13c>
   26158:	ldr	r0, [r5, #180]	; 0xb4
   2615c:	ldr	r1, [r5, #180]	; 0xb4
   26160:	and	r0, r0, #64	; 0x40
   26164:	eor	r0, r1, r0
   26168:	str	r0, [r5, #180]	; 0xb4
   2616c:	b	260a0 <myhtml_rules_tree_dispatcher@@Base+0xec>

00026170 <myhtml_rules_init@@Base>:
   26170:	push	{r4, sl, fp, lr}
   26174:	add	fp, sp, #8
   26178:	mov	r4, r0
   2617c:	mov	r0, #92	; 0x5c
   26180:	bl	119c8 <mycore_malloc@plt>
   26184:	cmp	r0, #0
   26188:	str	r0, [r4, #28]!
   2618c:	movweq	r0, #36964	; 0x9064
   26190:	popeq	{r4, sl, fp, pc}
   26194:	ldr	r1, [pc, #364]	; 26308 <myhtml_rules_init@@Base+0x198>
   26198:	ldr	r1, [pc, r1]
   2619c:	str	r1, [r0]
   261a0:	ldr	r0, [r4]
   261a4:	ldr	r1, [pc, #352]	; 2630c <myhtml_rules_init@@Base+0x19c>
   261a8:	ldr	r1, [pc, r1]
   261ac:	str	r1, [r0, #4]
   261b0:	ldr	r0, [r4]
   261b4:	ldr	r1, [pc, #340]	; 26310 <myhtml_rules_init@@Base+0x1a0>
   261b8:	ldr	r1, [pc, r1]
   261bc:	str	r1, [r0, #8]
   261c0:	ldr	r0, [r4]
   261c4:	ldr	r1, [pc, #328]	; 26314 <myhtml_rules_init@@Base+0x1a4>
   261c8:	ldr	r1, [pc, r1]
   261cc:	str	r1, [r0, #12]
   261d0:	ldr	r0, [r4]
   261d4:	ldr	r1, [pc, #316]	; 26318 <myhtml_rules_init@@Base+0x1a8>
   261d8:	ldr	r1, [pc, r1]
   261dc:	str	r1, [r0, #16]
   261e0:	ldr	r0, [r4]
   261e4:	ldr	r1, [pc, #304]	; 2631c <myhtml_rules_init@@Base+0x1ac>
   261e8:	ldr	r1, [pc, r1]
   261ec:	str	r1, [r0, #20]
   261f0:	ldr	r0, [r4]
   261f4:	ldr	r1, [pc, #292]	; 26320 <myhtml_rules_init@@Base+0x1b0>
   261f8:	ldr	r1, [pc, r1]
   261fc:	str	r1, [r0, #24]
   26200:	ldr	r0, [r4]
   26204:	ldr	r1, [pc, #280]	; 26324 <myhtml_rules_init@@Base+0x1b4>
   26208:	ldr	r1, [pc, r1]
   2620c:	str	r1, [r0, #28]
   26210:	ldr	r0, [r4]
   26214:	ldr	r1, [pc, #268]	; 26328 <myhtml_rules_init@@Base+0x1b8>
   26218:	ldr	r1, [pc, r1]
   2621c:	str	r1, [r0, #32]
   26220:	ldr	r0, [r4]
   26224:	ldr	r1, [pc, #256]	; 2632c <myhtml_rules_init@@Base+0x1bc>
   26228:	ldr	r1, [pc, r1]
   2622c:	str	r1, [r0, #36]	; 0x24
   26230:	ldr	r0, [r4]
   26234:	ldr	r1, [pc, #244]	; 26330 <myhtml_rules_init@@Base+0x1c0>
   26238:	ldr	r1, [pc, r1]
   2623c:	str	r1, [r0, #40]	; 0x28
   26240:	ldr	r0, [r4]
   26244:	ldr	r1, [pc, #232]	; 26334 <myhtml_rules_init@@Base+0x1c4>
   26248:	ldr	r1, [pc, r1]
   2624c:	str	r1, [r0, #44]	; 0x2c
   26250:	ldr	r0, [r4]
   26254:	ldr	r1, [pc, #220]	; 26338 <myhtml_rules_init@@Base+0x1c8>
   26258:	ldr	r1, [pc, r1]
   2625c:	str	r1, [r0, #48]	; 0x30
   26260:	ldr	r0, [r4]
   26264:	ldr	r1, [pc, #208]	; 2633c <myhtml_rules_init@@Base+0x1cc>
   26268:	ldr	r1, [pc, r1]
   2626c:	str	r1, [r0, #52]	; 0x34
   26270:	ldr	r0, [r4]
   26274:	ldr	r1, [pc, #196]	; 26340 <myhtml_rules_init@@Base+0x1d0>
   26278:	ldr	r1, [pc, r1]
   2627c:	str	r1, [r0, #56]	; 0x38
   26280:	ldr	r0, [r4]
   26284:	ldr	r1, [pc, #184]	; 26344 <myhtml_rules_init@@Base+0x1d4>
   26288:	ldr	r1, [pc, r1]
   2628c:	str	r1, [r0, #60]	; 0x3c
   26290:	ldr	r0, [r4]
   26294:	ldr	r1, [pc, #172]	; 26348 <myhtml_rules_init@@Base+0x1d8>
   26298:	ldr	r1, [pc, r1]
   2629c:	str	r1, [r0, #64]	; 0x40
   262a0:	ldr	r0, [r4]
   262a4:	ldr	r1, [pc, #160]	; 2634c <myhtml_rules_init@@Base+0x1dc>
   262a8:	ldr	r1, [pc, r1]
   262ac:	str	r1, [r0, #68]	; 0x44
   262b0:	ldr	r0, [r4]
   262b4:	ldr	r1, [pc, #148]	; 26350 <myhtml_rules_init@@Base+0x1e0>
   262b8:	ldr	r1, [pc, r1]
   262bc:	str	r1, [r0, #72]	; 0x48
   262c0:	ldr	r0, [r4]
   262c4:	ldr	r1, [pc, #136]	; 26354 <myhtml_rules_init@@Base+0x1e4>
   262c8:	ldr	r1, [pc, r1]
   262cc:	str	r1, [r0, #76]	; 0x4c
   262d0:	ldr	r0, [r4]
   262d4:	ldr	r1, [pc, #124]	; 26358 <myhtml_rules_init@@Base+0x1e8>
   262d8:	ldr	r1, [pc, r1]
   262dc:	str	r1, [r0, #80]	; 0x50
   262e0:	ldr	r0, [r4]
   262e4:	ldr	r1, [pc, #112]	; 2635c <myhtml_rules_init@@Base+0x1ec>
   262e8:	ldr	r1, [pc, r1]
   262ec:	str	r1, [r0, #84]	; 0x54
   262f0:	ldr	r0, [r4]
   262f4:	ldr	r1, [pc, #100]	; 26360 <myhtml_rules_init@@Base+0x1f0>
   262f8:	ldr	r1, [pc, r1]
   262fc:	str	r1, [r0, #88]	; 0x58
   26300:	mov	r0, #0
   26304:	pop	{r4, sl, fp, pc}
   26308:	andeq	r5, pc, r0, lsr #9
   2630c:			; <UNDEFINED> instruction: 0x000f55bc
   26310:			; <UNDEFINED> instruction: 0x000f55b8
   26314:	strdeq	r5, [pc], -r4
   26318:	andeq	r5, pc, r8, lsr r5	; <UNPREDICTABLE>
   2631c:	andeq	r5, pc, r4, asr r5	; <UNPREDICTABLE>
   26320:			; <UNDEFINED> instruction: 0x000f54b0
   26324:	andeq	r5, pc, r8, lsl #8
   26328:	ldrdeq	r5, [pc], -r4
   2632c:	andeq	r5, pc, ip, asr #9
   26330:	strdeq	r5, [pc], -ip
   26334:	ldrdeq	r5, [pc], -ip
   26338:	ldrdeq	r5, [pc], -r4
   2633c:	andeq	r5, pc, r0, asr r3	; <UNPREDICTABLE>
   26340:	andeq	r5, pc, ip, lsr r5	; <UNPREDICTABLE>
   26344:	andeq	r5, pc, r0, asr #7
   26348:	andeq	r5, pc, r4, lsl r4	; <UNPREDICTABLE>
   2634c:	andeq	r5, pc, r8, asr #5
   26350:	andeq	r5, pc, r4, lsr #10
   26354:			; <UNDEFINED> instruction: 0x000f54b8
   26358:	andeq	r5, pc, ip, asr r2	; <UNPREDICTABLE>
   2635c:	andeq	r5, pc, r8, asr #4
   26360:	andeq	r5, pc, r8, lsr r3	; <UNPREDICTABLE>

00026364 <myhtml_serialization@@Base>:
   26364:	push	{r4, r5, r6, sl, fp, lr}
   26368:	add	fp, sp, #16
   2636c:	cmp	r1, #0
   26370:	moveq	r0, #0
   26374:	popeq	{r4, r5, r6, sl, fp, pc}
   26378:	mov	r5, r0
   2637c:	ldr	r0, [r1]
   26380:	mov	r4, r1
   26384:	cmp	r0, #0
   26388:	bne	263b4 <myhtml_serialization@@Base+0x50>
   2638c:	mov	r6, #0
   26390:	movw	r0, #20490	; 0x500a
   26394:	stmib	r4, {r0, r6}
   26398:	movw	r0, #20490	; 0x500a
   2639c:	bl	119c8 <mycore_malloc@plt>
   263a0:	cmp	r0, #0
   263a4:	str	r0, [r4]
   263a8:	moveq	r0, #2
   263ac:	streq	r6, [r4, #4]
   263b0:	popeq	{r4, r5, r6, sl, fp, pc}
   263b4:	ldr	r1, [pc, #16]	; 263cc <myhtml_serialization@@Base+0x68>
   263b8:	mov	r0, r5
   263bc:	mov	r2, r4
   263c0:	ldr	r1, [pc, r1]
   263c4:	pop	{r4, r5, r6, sl, fp, lr}
   263c8:	b	26514 <myhtml_serialization_tree_callback@@Base>
   263cc:	strdeq	r5, [pc], -r8

000263d0 <myhtml_serialization_tree_buffer@@Base>:
   263d0:	push	{r4, r5, r6, sl, fp, lr}
   263d4:	add	fp, sp, #16
   263d8:	cmp	r1, #0
   263dc:	moveq	r0, #0
   263e0:	popeq	{r4, r5, r6, sl, fp, pc}
   263e4:	mov	r5, r0
   263e8:	ldr	r0, [r1]
   263ec:	mov	r4, r1
   263f0:	cmp	r0, #0
   263f4:	bne	26420 <myhtml_serialization_tree_buffer@@Base+0x50>
   263f8:	mov	r6, #0
   263fc:	movw	r0, #20490	; 0x500a
   26400:	stmib	r4, {r0, r6}
   26404:	movw	r0, #20490	; 0x500a
   26408:	bl	119c8 <mycore_malloc@plt>
   2640c:	cmp	r0, #0
   26410:	str	r0, [r4]
   26414:	moveq	r0, #2
   26418:	streq	r6, [r4, #4]
   2641c:	popeq	{r4, r5, r6, sl, fp, pc}
   26420:	ldr	r1, [pc, #16]	; 26438 <myhtml_serialization_tree_buffer@@Base+0x68>
   26424:	mov	r0, r5
   26428:	mov	r2, r4
   2642c:	ldr	r1, [pc, r1]
   26430:	pop	{r4, r5, r6, sl, fp, lr}
   26434:	b	26514 <myhtml_serialization_tree_callback@@Base>
   26438:	andeq	r5, pc, ip, lsl #5

0002643c <myhtml_serialization_node@@Base>:
   2643c:	push	{r4, r5, r6, sl, fp, lr}
   26440:	add	fp, sp, #16
   26444:	cmp	r1, #0
   26448:	beq	2649c <myhtml_serialization_node@@Base+0x60>
   2644c:	mov	r5, r0
   26450:	ldr	r0, [r1]
   26454:	mov	r4, r1
   26458:	cmp	r0, #0
   2645c:	bne	26480 <myhtml_serialization_node@@Base+0x44>
   26460:	mov	r6, #0
   26464:	mov	r0, #2048	; 0x800
   26468:	stmib	r4, {r0, r6}
   2646c:	mov	r0, #2048	; 0x800
   26470:	bl	119c8 <mycore_malloc@plt>
   26474:	cmp	r0, #0
   26478:	str	r0, [r4]
   2647c:	beq	26498 <myhtml_serialization_node@@Base+0x5c>
   26480:	ldr	r1, [pc, #28]	; 264a4 <myhtml_serialization_node@@Base+0x68>
   26484:	mov	r0, r5
   26488:	mov	r2, r4
   2648c:	ldr	r1, [pc, r1]
   26490:	pop	{r4, r5, r6, sl, fp, lr}
   26494:	b	26614 <myhtml_serialization_node_callback@@Base>
   26498:	str	r6, [r4, #4]
   2649c:	mov	r0, #0
   264a0:	pop	{r4, r5, r6, sl, fp, pc}
   264a4:	andeq	r5, pc, ip, lsr #4

000264a8 <myhtml_serialization_node_buffer@@Base>:
   264a8:	push	{r4, r5, r6, sl, fp, lr}
   264ac:	add	fp, sp, #16
   264b0:	cmp	r1, #0
   264b4:	beq	26508 <myhtml_serialization_node_buffer@@Base+0x60>
   264b8:	mov	r5, r0
   264bc:	ldr	r0, [r1]
   264c0:	mov	r4, r1
   264c4:	cmp	r0, #0
   264c8:	bne	264ec <myhtml_serialization_node_buffer@@Base+0x44>
   264cc:	mov	r6, #0
   264d0:	mov	r0, #2048	; 0x800
   264d4:	stmib	r4, {r0, r6}
   264d8:	mov	r0, #2048	; 0x800
   264dc:	bl	119c8 <mycore_malloc@plt>
   264e0:	cmp	r0, #0
   264e4:	str	r0, [r4]
   264e8:	beq	26504 <myhtml_serialization_node_buffer@@Base+0x5c>
   264ec:	ldr	r1, [pc, #28]	; 26510 <myhtml_serialization_node_buffer@@Base+0x68>
   264f0:	mov	r0, r5
   264f4:	mov	r2, r4
   264f8:	ldr	r1, [pc, r1]
   264fc:	pop	{r4, r5, r6, sl, fp, lr}
   26500:	b	26614 <myhtml_serialization_node_callback@@Base>
   26504:	str	r6, [r4, #4]
   26508:	mov	r0, #0
   2650c:	pop	{r4, r5, r6, sl, fp, pc}
   26510:	andeq	r5, pc, r0, asr #3

00026514 <myhtml_serialization_tree_callback@@Base>:
   26514:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   26518:	add	fp, sp, #24
   2651c:	cmp	r0, #0
   26520:	beq	26608 <myhtml_serialization_tree_callback@@Base+0xf4>
   26524:	mov	r7, r0
   26528:	ldr	r0, [r0, #40]	; 0x28
   2652c:	mov	r9, r2
   26530:	mov	r5, r1
   26534:	mov	r6, r7
   26538:	cmp	r0, #0
   2653c:	beq	2655c <myhtml_serialization_tree_callback@@Base+0x48>
   26540:	ldr	r0, [r0, #84]	; 0x54
   26544:	mov	r6, r7
   26548:	cmp	r0, r7
   2654c:	bne	2655c <myhtml_serialization_tree_callback@@Base+0x48>
   26550:	ldr	r6, [r7, #20]
   26554:	cmp	r6, #0
   26558:	beq	26608 <myhtml_serialization_tree_callback@@Base+0xf4>
   2655c:	mov	r8, #2
   26560:	mov	r0, r6
   26564:	mov	r1, r5
   26568:	mov	r2, r9
   2656c:	bl	115d8 <myhtml_serialization_node_callback@plt>
   26570:	cmp	r0, #0
   26574:	bne	26600 <myhtml_serialization_tree_callback@@Base+0xec>
   26578:	ldr	r0, [r6, #20]
   2657c:	cmp	r0, #0
   26580:	beq	26598 <myhtml_serialization_tree_callback@@Base+0x84>
   26584:	cmp	r0, #0
   26588:	mov	r6, r0
   2658c:	bne	26560 <myhtml_serialization_tree_callback@@Base+0x4c>
   26590:	b	26608 <myhtml_serialization_tree_callback@@Base+0xf4>
   26594:	ldr	r6, [r6, #24]
   26598:	cmp	r6, r7
   2659c:	beq	265d8 <myhtml_serialization_tree_callback@@Base+0xc4>
   265a0:	ldr	r4, [r6, #16]
   265a4:	mov	r0, r6
   265a8:	mov	r1, r5
   265ac:	mov	r2, r9
   265b0:	bl	26d28 <myhtml_serialization_node_callback@@Base+0x714>
   265b4:	cmp	r4, #0
   265b8:	bne	265c8 <myhtml_serialization_tree_callback@@Base+0xb4>
   265bc:	cmp	r0, #0
   265c0:	beq	26594 <myhtml_serialization_tree_callback@@Base+0x80>
   265c4:	b	26600 <myhtml_serialization_tree_callback@@Base+0xec>
   265c8:	cmp	r0, #0
   265cc:	bne	26600 <myhtml_serialization_tree_callback@@Base+0xec>
   265d0:	ldr	r0, [r6, #16]
   265d4:	b	26584 <myhtml_serialization_tree_callback@@Base+0x70>
   265d8:	ldr	r0, [r7, #40]	; 0x28
   265dc:	ldr	r0, [r0, #84]	; 0x54
   265e0:	cmp	r0, r7
   265e4:	beq	26608 <myhtml_serialization_tree_callback@@Base+0xf4>
   265e8:	mov	r0, r7
   265ec:	mov	r1, r5
   265f0:	mov	r2, r9
   265f4:	bl	26d28 <myhtml_serialization_node_callback@@Base+0x714>
   265f8:	cmp	r0, #0
   265fc:	moveq	r8, #0
   26600:	mov	r0, r8
   26604:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   26608:	mov	r8, #0
   2660c:	mov	r0, r8
   26610:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00026614 <myhtml_serialization_node_callback@@Base>:
   26614:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26618:	add	fp, sp, #28
   2661c:	sub	sp, sp, #12
   26620:	mov	r4, r1
   26624:	ldr	r1, [r0, #4]
   26628:	mov	r5, r2
   2662c:	mov	r7, r0
   26630:	cmp	r1, #3
   26634:	beq	26760 <myhtml_serialization_node_callback@@Base+0x14c>
   26638:	cmp	r1, #2
   2663c:	beq	267e8 <myhtml_serialization_node_callback@@Base+0x1d4>
   26640:	cmp	r1, #1
   26644:	bne	2683c <myhtml_serialization_node_callback@@Base+0x228>
   26648:	ldr	r1, [r7, #32]
   2664c:	cmp	r1, #0
   26650:	ldrne	r0, [r1, #4]
   26654:	cmpne	r0, #0
   26658:	beq	26b34 <myhtml_serialization_node_callback@@Base+0x520>
   2665c:	ldr	r2, [r7, #24]
   26660:	cmp	r2, #0
   26664:	beq	26b18 <myhtml_serialization_node_callback@@Base+0x504>
   26668:	ldr	r2, [r2, #4]
   2666c:	sub	r3, r2, #91	; 0x5b
   26670:	cmp	r3, #52	; 0x34
   26674:	bhi	26b10 <myhtml_serialization_node_callback@@Base+0x4fc>
   26678:	add	r2, pc, #4
   2667c:	ldr	r3, [r2, r3, lsl #2]
   26680:	add	pc, r2, r3
   26684:	ldrdeq	r0, [r0], -r4
   26688:	ldrdeq	r0, [r0], -r4
   2668c:	muleq	r0, r4, r4
   26690:	muleq	r0, r4, r4
   26694:	muleq	r0, r4, r4
   26698:	muleq	r0, r4, r4
   2669c:	muleq	r0, r4, r4
   266a0:	muleq	r0, r4, r4
   266a4:	muleq	r0, r4, r4
   266a8:	muleq	r0, r4, r4
   266ac:	ldrdeq	r0, [r0], -r4
   266b0:	muleq	r0, r4, r4
   266b4:	muleq	r0, r4, r4
   266b8:	muleq	r0, r4, r4
   266bc:	muleq	r0, r4, r4
   266c0:	muleq	r0, r4, r4
   266c4:	muleq	r0, r4, r4
   266c8:	muleq	r0, r4, r4
   266cc:	muleq	r0, r4, r4
   266d0:	muleq	r0, r4, r4
   266d4:	muleq	r0, r4, r4
   266d8:	ldrdeq	r0, [r0], -r4
   266dc:	muleq	r0, r4, r4
   266e0:	muleq	r0, r4, r4
   266e4:	muleq	r0, r4, r4
   266e8:	muleq	r0, r4, r4
   266ec:	muleq	r0, r4, r4
   266f0:	muleq	r0, r4, r4
   266f4:	muleq	r0, r4, r4
   266f8:	ldrdeq	r0, [r0], -r4
   266fc:	muleq	r0, r4, r4
   26700:	muleq	r0, r4, r4
   26704:	muleq	r0, r4, r4
   26708:	muleq	r0, r4, r4
   2670c:	muleq	r0, r4, r4
   26710:	muleq	r0, r4, r4
   26714:	muleq	r0, r4, r4
   26718:	muleq	r0, r4, r4
   2671c:	muleq	r0, r4, r4
   26720:	muleq	r0, r4, r4
   26724:	muleq	r0, r4, r4
   26728:	muleq	r0, r4, r4
   2672c:	muleq	r0, r4, r4
   26730:	muleq	r0, r4, r4
   26734:	muleq	r0, r4, r4
   26738:	muleq	r0, r4, r4
   2673c:	muleq	r0, r4, r4
   26740:	muleq	r0, r4, r4
   26744:	muleq	r0, r4, r4
   26748:	muleq	r0, r4, r4
   2674c:	muleq	r0, r4, r4
   26750:	muleq	r0, r4, r4
   26754:	ldrdeq	r0, [r0], -r4
   26758:	ldr	r1, [r1, #12]
   2675c:	b	268a8 <myhtml_serialization_node_callback@@Base+0x294>
   26760:	ldr	r0, [pc, #1384]	; 26cd0 <myhtml_serialization_node_callback@@Base+0x6bc>
   26764:	mov	r1, #9
   26768:	mov	r2, r5
   2676c:	add	r0, pc, r0
   26770:	blx	r4
   26774:	mov	r6, #2
   26778:	cmp	r0, #0
   2677c:	bne	26b38 <myhtml_serialization_node_callback@@Base+0x524>
   26780:	ldr	r0, [pc, #1356]	; 26cd4 <myhtml_serialization_node_callback@@Base+0x6c0>
   26784:	mov	r1, #1
   26788:	mov	r2, r5
   2678c:	add	r0, pc, r0
   26790:	blx	r4
   26794:	cmp	r0, #0
   26798:	bne	26b38 <myhtml_serialization_node_callback@@Base+0x524>
   2679c:	ldr	r0, [r7, #32]
   267a0:	cmp	r0, #0
   267a4:	ldrne	r7, [r0, #40]	; 0x28
   267a8:	cmpne	r7, #0
   267ac:	beq	267c4 <myhtml_serialization_node_callback@@Base+0x1b0>
   267b0:	ldr	r0, [r7, #8]
   267b4:	cmp	r0, #0
   267b8:	ldrne	r1, [r7, #16]
   267bc:	cmpne	r1, #0
   267c0:	bne	26b44 <myhtml_serialization_node_callback@@Base+0x530>
   267c4:	ldr	r0, [pc, #1320]	; 26cf4 <myhtml_serialization_node_callback@@Base+0x6e0>
   267c8:	mov	r1, #1
   267cc:	mov	r2, r5
   267d0:	add	r0, pc, r0
   267d4:	blx	r4
   267d8:	cmp	r0, #0
   267dc:	mov	r6, #2
   267e0:	moveq	r6, #0
   267e4:	b	26b38 <myhtml_serialization_node_callback@@Base+0x524>
   267e8:	ldr	r0, [pc, #1240]	; 26cc8 <myhtml_serialization_node_callback@@Base+0x6b4>
   267ec:	mov	r1, #4
   267f0:	mov	r2, r5
   267f4:	add	r0, pc, r0
   267f8:	blx	r4
   267fc:	mov	r6, #2
   26800:	cmp	r0, #0
   26804:	bne	26b38 <myhtml_serialization_node_callback@@Base+0x524>
   26808:	ldr	r1, [r7, #32]
   2680c:	cmp	r1, #0
   26810:	ldrne	r0, [r1, #4]
   26814:	cmpne	r0, #0
   26818:	bne	268b4 <myhtml_serialization_node_callback@@Base+0x2a0>
   2681c:	ldr	r0, [pc, #1192]	; 26ccc <myhtml_serialization_node_callback@@Base+0x6b8>
   26820:	mov	r1, #3
   26824:	mov	r2, r5
   26828:	add	r0, pc, r0
   2682c:	blx	r4
   26830:	cmp	r0, #0
   26834:	bne	26b38 <myhtml_serialization_node_callback@@Base+0x524>
   26838:	b	26b34 <myhtml_serialization_node_callback@@Base+0x520>
   2683c:	ldr	r0, [r7, #40]	; 0x28
   26840:	add	r2, sp, #4
   26844:	bl	118a8 <myhtml_tag_name_by_id@plt>
   26848:	mov	r6, r0
   2684c:	ldr	r0, [pc, #1188]	; 26cf8 <myhtml_serialization_node_callback@@Base+0x6e4>
   26850:	mov	r1, #1
   26854:	mov	r2, r5
   26858:	add	r0, pc, r0
   2685c:	blx	r4
   26860:	cmp	r0, #0
   26864:	bne	26880 <myhtml_serialization_node_callback@@Base+0x26c>
   26868:	ldr	r1, [sp, #4]
   2686c:	mov	r0, r6
   26870:	mov	r2, r5
   26874:	blx	r4
   26878:	cmp	r0, #0
   2687c:	beq	26888 <myhtml_serialization_node_callback@@Base+0x274>
   26880:	mov	r6, #2
   26884:	b	26b38 <myhtml_serialization_node_callback@@Base+0x524>
   26888:	ldr	r0, [r7, #32]
   2688c:	cmp	r0, #0
   26890:	ldrne	r6, [r0, #40]	; 0x28
   26894:	cmpne	r6, #0
   26898:	bne	268cc <myhtml_serialization_node_callback@@Base+0x2b8>
   2689c:	ldr	r0, [pc, #1152]	; 26d24 <myhtml_serialization_node_callback@@Base+0x710>
   268a0:	mov	r1, #1
   268a4:	add	r0, pc, r0
   268a8:	mov	r2, r5
   268ac:	blx	r4
   268b0:	b	26b28 <myhtml_serialization_node_callback@@Base+0x514>
   268b4:	ldr	r1, [r1, #12]
   268b8:	mov	r2, r5
   268bc:	blx	r4
   268c0:	cmp	r0, #0
   268c4:	bne	26b38 <myhtml_serialization_node_callback@@Base+0x524>
   268c8:	b	2681c <myhtml_serialization_node_callback@@Base+0x208>
   268cc:	add	r7, sp, #8
   268d0:	ldr	r0, [pc, #1060]	; 26cfc <myhtml_serialization_node_callback@@Base+0x6e8>
   268d4:	mov	r1, #1
   268d8:	mov	r2, r5
   268dc:	add	r0, pc, r0
   268e0:	blx	r4
   268e4:	cmp	r0, #0
   268e8:	bne	26880 <myhtml_serialization_node_callback@@Base+0x26c>
   268ec:	ldr	r0, [r6, #64]	; 0x40
   268f0:	cmp	r0, #4
   268f4:	beq	26918 <myhtml_serialization_node_callback@@Base+0x304>
   268f8:	cmp	r0, #6
   268fc:	beq	26ad8 <myhtml_serialization_node_callback@@Base+0x4c4>
   26900:	cmp	r0, #5
   26904:	bne	26934 <myhtml_serialization_node_callback@@Base+0x320>
   26908:	ldr	r0, [pc, #1008]	; 26d00 <myhtml_serialization_node_callback@@Base+0x6ec>
   2690c:	mov	r1, #4
   26910:	add	r0, pc, r0
   26914:	b	26924 <myhtml_serialization_node_callback@@Base+0x310>
   26918:	ldr	r0, [pc, #1004]	; 26d0c <myhtml_serialization_node_callback@@Base+0x6f8>
   2691c:	add	r0, pc, r0
   26920:	mov	r1, #6
   26924:	mov	r2, r5
   26928:	blx	r4
   2692c:	cmp	r0, #0
   26930:	bne	26880 <myhtml_serialization_node_callback@@Base+0x26c>
   26934:	mov	r0, r6
   26938:	mov	r1, r7
   2693c:	bl	118c0 <myhtml_attribute_key@plt>
   26940:	cmp	r0, #0
   26944:	beq	2695c <myhtml_serialization_node_callback@@Base+0x348>
   26948:	ldr	r1, [sp, #8]
   2694c:	mov	r2, r5
   26950:	blx	r4
   26954:	cmp	r0, #0
   26958:	bne	26880 <myhtml_serialization_node_callback@@Base+0x26c>
   2695c:	ldr	r0, [pc, #940]	; 26d10 <myhtml_serialization_node_callback@@Base+0x6fc>
   26960:	mov	r1, #2
   26964:	mov	r2, r5
   26968:	add	r0, pc, r0
   2696c:	blx	r4
   26970:	cmp	r0, #0
   26974:	bne	26880 <myhtml_serialization_node_callback@@Base+0x26c>
   26978:	mov	r0, r6
   2697c:	mov	r1, r7
   26980:	bl	11410 <myhtml_attribute_value@plt>
   26984:	cmp	r0, #0
   26988:	ldrne	r8, [sp, #8]
   2698c:	cmpne	r8, #0
   26990:	bne	269c0 <myhtml_serialization_node_callback@@Base+0x3ac>
   26994:	ldr	r0, [pc, #900]	; 26d20 <myhtml_serialization_node_callback@@Base+0x70c>
   26998:	mov	r1, #1
   2699c:	mov	r2, r5
   269a0:	add	r0, pc, r0
   269a4:	blx	r4
   269a8:	cmp	r0, #0
   269ac:	bne	26880 <myhtml_serialization_node_callback@@Base+0x26c>
   269b0:	ldr	r6, [r6]
   269b4:	cmp	r6, #0
   269b8:	bne	268d0 <myhtml_serialization_node_callback@@Base+0x2bc>
   269bc:	b	2689c <myhtml_serialization_node_callback@@Base+0x288>
   269c0:	mov	r9, r0
   269c4:	mov	sl, #0
   269c8:	mov	r1, #0
   269cc:	ldrb	r0, [r9, sl]
   269d0:	cmp	r0, #34	; 0x22
   269d4:	beq	26a18 <myhtml_serialization_node_callback@@Base+0x404>
   269d8:	cmp	r0, #160	; 0xa0
   269dc:	beq	26a44 <myhtml_serialization_node_callback@@Base+0x430>
   269e0:	cmp	r0, #38	; 0x26
   269e4:	bne	26aa4 <myhtml_serialization_node_callback@@Base+0x490>
   269e8:	cmp	r1, #0
   269ec:	beq	26a08 <myhtml_serialization_node_callback@@Base+0x3f4>
   269f0:	sub	r0, sl, r1
   269f4:	mov	r2, r5
   269f8:	add	r0, r9, r0
   269fc:	blx	r4
   26a00:	cmp	r0, #0
   26a04:	bne	26880 <myhtml_serialization_node_callback@@Base+0x26c>
   26a08:	ldr	r0, [pc, #772]	; 26d14 <myhtml_serialization_node_callback@@Base+0x700>
   26a0c:	mov	r1, #5
   26a10:	add	r0, pc, r0
   26a14:	b	26a8c <myhtml_serialization_node_callback@@Base+0x478>
   26a18:	cmp	r1, #0
   26a1c:	beq	26a38 <myhtml_serialization_node_callback@@Base+0x424>
   26a20:	sub	r0, sl, r1
   26a24:	mov	r2, r5
   26a28:	add	r0, r9, r0
   26a2c:	blx	r4
   26a30:	cmp	r0, #0
   26a34:	bne	26880 <myhtml_serialization_node_callback@@Base+0x26c>
   26a38:	ldr	r0, [pc, #728]	; 26d18 <myhtml_serialization_node_callback@@Base+0x704>
   26a3c:	add	r0, pc, r0
   26a40:	b	26a88 <myhtml_serialization_node_callback@@Base+0x474>
   26a44:	cmp	sl, #0
   26a48:	beq	26aa4 <myhtml_serialization_node_callback@@Base+0x490>
   26a4c:	add	r0, r9, sl
   26a50:	ldrb	r0, [r0, #-1]
   26a54:	cmp	r0, #194	; 0xc2
   26a58:	bne	26aa4 <myhtml_serialization_node_callback@@Base+0x490>
   26a5c:	cmp	r1, #0
   26a60:	beq	26a80 <myhtml_serialization_node_callback@@Base+0x46c>
   26a64:	sub	r0, sl, r1
   26a68:	sub	r1, r1, #1
   26a6c:	mov	r2, r5
   26a70:	add	r0, r9, r0
   26a74:	blx	r4
   26a78:	cmp	r0, #0
   26a7c:	bne	26880 <myhtml_serialization_node_callback@@Base+0x26c>
   26a80:	ldr	r0, [pc, #660]	; 26d1c <myhtml_serialization_node_callback@@Base+0x708>
   26a84:	add	r0, pc, r0
   26a88:	mov	r1, #6
   26a8c:	mov	r2, r5
   26a90:	blx	r4
   26a94:	mov	r1, #0
   26a98:	cmp	r0, #0
   26a9c:	beq	26aa8 <myhtml_serialization_node_callback@@Base+0x494>
   26aa0:	b	26880 <myhtml_serialization_node_callback@@Base+0x26c>
   26aa4:	add	r1, r1, #1
   26aa8:	add	sl, sl, #1
   26aac:	cmp	sl, r8
   26ab0:	bcc	269cc <myhtml_serialization_node_callback@@Base+0x3b8>
   26ab4:	cmp	r1, #0
   26ab8:	beq	26994 <myhtml_serialization_node_callback@@Base+0x380>
   26abc:	add	r0, r9, r8
   26ac0:	mov	r2, r5
   26ac4:	sub	r0, r0, r1
   26ac8:	blx	r4
   26acc:	cmp	r0, #0
   26ad0:	beq	26994 <myhtml_serialization_node_callback@@Base+0x380>
   26ad4:	b	26880 <myhtml_serialization_node_callback@@Base+0x26c>
   26ad8:	ldr	r0, [r6, #8]
   26adc:	cmp	r0, #0
   26ae0:	beq	26934 <myhtml_serialization_node_callback@@Base+0x320>
   26ae4:	ldr	r1, [r6, #16]
   26ae8:	cmp	r1, #5
   26aec:	bne	26934 <myhtml_serialization_node_callback@@Base+0x320>
   26af0:	ldr	r1, [pc, #524]	; 26d04 <myhtml_serialization_node_callback@@Base+0x6f0>
   26af4:	add	r1, pc, r1
   26af8:	bl	10dc8 <mycore_strcmp@plt>
   26afc:	cmp	r0, #0
   26b00:	beq	26934 <myhtml_serialization_node_callback@@Base+0x320>
   26b04:	ldr	r0, [pc, #508]	; 26d08 <myhtml_serialization_node_callback@@Base+0x6f4>
   26b08:	add	r0, pc, r0
   26b0c:	b	26920 <myhtml_serialization_node_callback@@Base+0x30c>
   26b10:	cmp	r2, #67	; 0x43
   26b14:	beq	26758 <myhtml_serialization_node_callback@@Base+0x144>
   26b18:	ldr	r1, [r1, #12]
   26b1c:	mov	r2, r4
   26b20:	mov	r3, r5
   26b24:	bl	270ec <myhtml_serialization_concatenate@@Base+0x90>
   26b28:	mov	r6, #2
   26b2c:	cmp	r0, #0
   26b30:	bne	26b38 <myhtml_serialization_node_callback@@Base+0x524>
   26b34:	mov	r6, #0
   26b38:	mov	r0, r6
   26b3c:	sub	sp, fp, #28
   26b40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26b44:	mov	r2, r5
   26b48:	blx	r4
   26b4c:	cmp	r0, #0
   26b50:	bne	26b38 <myhtml_serialization_node_callback@@Base+0x524>
   26b54:	ldr	r7, [r7]
   26b58:	cmp	r7, #0
   26b5c:	beq	267c4 <myhtml_serialization_node_callback@@Base+0x1b0>
   26b60:	ldr	r0, [r7, #36]	; 0x24
   26b64:	cmp	r0, #6
   26b68:	bne	267c4 <myhtml_serialization_node_callback@@Base+0x1b0>
   26b6c:	ldr	r0, [r7, #28]
   26b70:	ldr	r1, [pc, #352]	; 26cd8 <myhtml_serialization_node_callback@@Base+0x6c4>
   26b74:	add	r1, pc, r1
   26b78:	bl	114a0 <mycore_strcasecmp@plt>
   26b7c:	cmp	r0, #0
   26b80:	beq	26c10 <myhtml_serialization_node_callback@@Base+0x5fc>
   26b84:	ldr	r0, [r7, #28]
   26b88:	ldr	r1, [pc, #332]	; 26cdc <myhtml_serialization_node_callback@@Base+0x6c8>
   26b8c:	add	r1, pc, r1
   26b90:	bl	114a0 <mycore_strcasecmp@plt>
   26b94:	cmp	r0, #0
   26b98:	bne	267c4 <myhtml_serialization_node_callback@@Base+0x1b0>
   26b9c:	ldr	r7, [r7]
   26ba0:	cmp	r7, #0
   26ba4:	beq	267c4 <myhtml_serialization_node_callback@@Base+0x1b0>
   26ba8:	ldr	r0, [r7, #36]	; 0x24
   26bac:	ldr	r8, [r7]
   26bb0:	cmp	r0, #0
   26bb4:	beq	26cac <myhtml_serialization_node_callback@@Base+0x698>
   26bb8:	ldr	r0, [pc, #288]	; 26ce0 <myhtml_serialization_node_callback@@Base+0x6cc>
   26bbc:	mov	r1, #9
   26bc0:	mov	r2, r5
   26bc4:	add	r0, pc, r0
   26bc8:	blx	r4
   26bcc:	cmp	r0, #0
   26bd0:	bne	26b38 <myhtml_serialization_node_callback@@Base+0x524>
   26bd4:	ldr	r0, [r7, #28]
   26bd8:	ldr	r1, [r7, #36]	; 0x24
   26bdc:	mov	r2, r5
   26be0:	blx	r4
   26be4:	cmp	r0, #0
   26be8:	bne	26b38 <myhtml_serialization_node_callback@@Base+0x524>
   26bec:	ldr	r0, [pc, #240]	; 26ce4 <myhtml_serialization_node_callback@@Base+0x6d0>
   26bf0:	mov	r1, #1
   26bf4:	mov	r2, r5
   26bf8:	mov	r9, #1
   26bfc:	add	r0, pc, r0
   26c00:	blx	r4
   26c04:	cmp	r0, #0
   26c08:	bne	26b38 <myhtml_serialization_node_callback@@Base+0x524>
   26c0c:	b	26c1c <myhtml_serialization_node_callback@@Base+0x608>
   26c10:	ldr	r8, [r7]
   26c14:	mov	r9, #0
   26c18:	mov	r7, #0
   26c1c:	cmp	r8, #0
   26c20:	ldrne	r0, [r8, #36]	; 0x24
   26c24:	cmpne	r0, #0
   26c28:	beq	267c4 <myhtml_serialization_node_callback@@Base+0x1b0>
   26c2c:	cmp	r9, #0
   26c30:	ldrne	r0, [r7, #36]	; 0x24
   26c34:	cmpne	r0, #0
   26c38:	bne	26c58 <myhtml_serialization_node_callback@@Base+0x644>
   26c3c:	ldr	r0, [pc, #164]	; 26ce8 <myhtml_serialization_node_callback@@Base+0x6d4>
   26c40:	mov	r1, #7
   26c44:	mov	r2, r5
   26c48:	add	r0, pc, r0
   26c4c:	blx	r4
   26c50:	cmp	r0, #0
   26c54:	bne	26b38 <myhtml_serialization_node_callback@@Base+0x524>
   26c58:	ldr	r0, [pc, #140]	; 26cec <myhtml_serialization_node_callback@@Base+0x6d8>
   26c5c:	mov	r1, #2
   26c60:	mov	r2, r5
   26c64:	mov	r6, #2
   26c68:	add	r0, pc, r0
   26c6c:	blx	r4
   26c70:	cmp	r0, #0
   26c74:	bne	26b38 <myhtml_serialization_node_callback@@Base+0x524>
   26c78:	ldr	r0, [r8, #28]
   26c7c:	cmp	r0, #0
   26c80:	ldrne	r1, [r8, #36]	; 0x24
   26c84:	cmpne	r1, #0
   26c88:	bne	26cb4 <myhtml_serialization_node_callback@@Base+0x6a0>
   26c8c:	ldr	r0, [pc, #92]	; 26cf0 <myhtml_serialization_node_callback@@Base+0x6dc>
   26c90:	mov	r1, #1
   26c94:	mov	r2, r5
   26c98:	add	r0, pc, r0
   26c9c:	blx	r4
   26ca0:	cmp	r0, #0
   26ca4:	bne	26b38 <myhtml_serialization_node_callback@@Base+0x524>
   26ca8:	b	267c4 <myhtml_serialization_node_callback@@Base+0x1b0>
   26cac:	mov	r9, #1
   26cb0:	b	26c1c <myhtml_serialization_node_callback@@Base+0x608>
   26cb4:	mov	r2, r5
   26cb8:	blx	r4
   26cbc:	cmp	r0, #0
   26cc0:	bne	26b38 <myhtml_serialization_node_callback@@Base+0x524>
   26cc4:	b	26c8c <myhtml_serialization_node_callback@@Base+0x678>
   26cc8:	andeq	sl, sp, sp, lsl r7
   26ccc:	andeq	sl, sp, lr, ror #13
   26cd0:	andeq	sl, sp, lr, lsr #15
   26cd4:	muleq	sp, r8, r7
   26cd8:	andeq	sl, sp, r4, asr #7
   26cdc:	muleq	sp, sl, r3
   26ce0:	andeq	sl, sp, r9, ror #6
   26ce4:	andeq	sl, sp, r9, lsr r3
   26ce8:	andeq	sl, sp, pc, ror #5
   26cec:	andeq	sl, sp, ip, asr #5
   26cf0:	muleq	sp, sp, r2
   26cf4:	andeq	sl, sp, r8, asr #14
   26cf8:	andeq	sl, sp, r7, ror #13
   26cfc:	andeq	sl, sp, r8, asr #12
   26d00:	andeq	sl, sp, r1, lsr r6
   26d04:	andeq	sl, sp, r2, asr r4
   26d08:	andeq	sl, sp, r4, asr #8
   26d0c:	andeq	sl, sp, r7, lsr r6
   26d10:	strdeq	sl, [sp], -r2
   26d14:	andeq	sl, sp, sp, asr #10
   26d18:	andeq	sl, sp, r7, lsr #10
   26d1c:	andeq	sl, sp, r6, ror #9
   26d20:	muleq	sp, r5, r5
   26d24:	andeq	sl, sp, r4, ror r6
   26d28:	push	{r4, r5, r6, r7, fp, lr}
   26d2c:	add	fp, sp, #16
   26d30:	sub	sp, sp, #8
   26d34:	mov	r4, r1
   26d38:	ldr	r1, [r0, #4]
   26d3c:	mov	r5, r2
   26d40:	sub	r2, r1, #1
   26d44:	cmp	r2, #141	; 0x8d
   26d48:	bhi	26fa0 <myhtml_serialization_node_callback@@Base+0x98c>
   26d4c:	add	r3, pc, #8
   26d50:	mov	r6, #0
   26d54:	ldr	r2, [r3, r2, lsl #2]
   26d58:	add	pc, r3, r2
   26d5c:	andeq	r0, r0, ip, lsr #5
   26d60:	andeq	r0, r0, ip, lsr #5
   26d64:	andeq	r0, r0, ip, lsr #5
   26d68:	andeq	r0, r0, r4, asr #4
   26d6c:	andeq	r0, r0, r4, asr #4
   26d70:	andeq	r0, r0, r4, asr #4
   26d74:	andeq	r0, r0, r4, asr #4
   26d78:	andeq	r0, r0, r4, asr #4
   26d7c:	andeq	r0, r0, r4, asr #4
   26d80:	andeq	r0, r0, r8, lsr r2
   26d84:	andeq	r0, r0, r4, asr #4
   26d88:	andeq	r0, r0, r4, asr #4
   26d8c:	andeq	r0, r0, r4, asr #4
   26d90:	andeq	r0, r0, r4, asr #4
   26d94:	andeq	r0, r0, r8, lsr r2
   26d98:	andeq	r0, r0, r4, asr #4
   26d9c:	andeq	r0, r0, r4, asr #4
   26da0:	andeq	r0, r0, r4, asr #4
   26da4:	andeq	r0, r0, r8, lsr r2
   26da8:	andeq	r0, r0, r4, asr #4
   26dac:	andeq	r0, r0, r4, asr #4
   26db0:	andeq	r0, r0, r4, asr #4
   26db4:	andeq	r0, r0, r4, asr #4
   26db8:	andeq	r0, r0, r8, lsr r2
   26dbc:	andeq	r0, r0, r4, asr #4
   26dc0:	andeq	r0, r0, r4, asr #4
   26dc4:	andeq	r0, r0, r4, asr #4
   26dc8:	andeq	r0, r0, r4, asr #4
   26dcc:	andeq	r0, r0, r4, asr #4
   26dd0:	andeq	r0, r0, r4, asr #4
   26dd4:	andeq	r0, r0, r8, lsr r2
   26dd8:	andeq	r0, r0, r4, asr #4
   26ddc:	andeq	r0, r0, r4, asr #4
   26de0:	andeq	r0, r0, r4, asr #4
   26de4:	andeq	r0, r0, r4, asr #4
   26de8:	andeq	r0, r0, r4, asr #4
   26dec:	andeq	r0, r0, r4, asr #4
   26df0:	andeq	r0, r0, r4, asr #4
   26df4:	andeq	r0, r0, r4, asr #4
   26df8:	andeq	r0, r0, r4, asr #4
   26dfc:	andeq	r0, r0, r4, asr #4
   26e00:	andeq	r0, r0, r4, asr #4
   26e04:	andeq	r0, r0, r4, asr #4
   26e08:	andeq	r0, r0, r4, asr #4
   26e0c:	andeq	r0, r0, r4, asr #4
   26e10:	andeq	r0, r0, r8, lsr r2
   26e14:	andeq	r0, r0, r4, asr #4
   26e18:	andeq	r0, r0, r4, asr #4
   26e1c:	andeq	r0, r0, r4, asr #4
   26e20:	andeq	r0, r0, r4, asr #4
   26e24:	andeq	r0, r0, r4, asr #4
   26e28:	andeq	r0, r0, r4, asr #4
   26e2c:	andeq	r0, r0, r8, lsr r2
   26e30:	andeq	r0, r0, r4, asr #4
   26e34:	andeq	r0, r0, r4, asr #4
   26e38:	andeq	r0, r0, r4, asr #4
   26e3c:	andeq	r0, r0, r4, asr #4
   26e40:	andeq	r0, r0, r4, asr #4
   26e44:	andeq	r0, r0, r4, asr #4
   26e48:	andeq	r0, r0, r4, asr #4
   26e4c:	andeq	r0, r0, r4, asr #4
   26e50:	andeq	r0, r0, r4, asr #4
   26e54:	andeq	r0, r0, r4, asr #4
   26e58:	andeq	r0, r0, r8, lsr r2
   26e5c:	andeq	r0, r0, r4, asr #4
   26e60:	andeq	r0, r0, r4, asr #4
   26e64:	andeq	r0, r0, r4, asr #4
   26e68:	andeq	r0, r0, r4, asr #4
   26e6c:	andeq	r0, r0, r8, lsr r2
   26e70:	andeq	r0, r0, r8, lsr r2
   26e74:	andeq	r0, r0, r4, asr #4
   26e78:	andeq	r0, r0, r4, asr #4
   26e7c:	andeq	r0, r0, r4, asr #4
   26e80:	andeq	r0, r0, r8, lsr r2
   26e84:	andeq	r0, r0, r4, asr #4
   26e88:	andeq	r0, r0, r4, asr #4
   26e8c:	andeq	r0, r0, r4, asr #4
   26e90:	andeq	r0, r0, r8, lsr r2
   26e94:	andeq	r0, r0, r4, asr #4
   26e98:	andeq	r0, r0, r4, asr #4
   26e9c:	andeq	r0, r0, r4, asr #4
   26ea0:	andeq	r0, r0, r4, asr #4
   26ea4:	andeq	r0, r0, r4, asr #4
   26ea8:	andeq	r0, r0, r4, asr #4
   26eac:	andeq	r0, r0, r4, asr #4
   26eb0:	andeq	r0, r0, r8, lsr r2
   26eb4:	andeq	r0, r0, r4, asr #4
   26eb8:	andeq	r0, r0, r4, asr #4
   26ebc:	andeq	r0, r0, r4, asr #4
   26ec0:	andeq	r0, r0, r4, asr #4
   26ec4:	andeq	r0, r0, r4, asr #4
   26ec8:	andeq	r0, r0, r4, asr #4
   26ecc:	andeq	r0, r0, r4, asr #4
   26ed0:	andeq	r0, r0, r4, asr #4
   26ed4:	andeq	r0, r0, r4, asr #4
   26ed8:	andeq	r0, r0, r4, asr #4
   26edc:	andeq	r0, r0, r4, asr #4
   26ee0:	andeq	r0, r0, r4, asr #4
   26ee4:	andeq	r0, r0, r4, asr #4
   26ee8:	andeq	r0, r0, r8, lsr r2
   26eec:	andeq	r0, r0, r4, asr #4
   26ef0:	andeq	r0, r0, r4, asr #4
   26ef4:	andeq	r0, r0, r4, asr #4
   26ef8:	andeq	r0, r0, r4, asr #4
   26efc:	andeq	r0, r0, r4, asr #4
   26f00:	andeq	r0, r0, r4, asr #4
   26f04:	andeq	r0, r0, r4, asr #4
   26f08:	andeq	r0, r0, r4, asr #4
   26f0c:	andeq	r0, r0, r4, asr #4
   26f10:	andeq	r0, r0, r4, asr #4
   26f14:	andeq	r0, r0, r4, asr #4
   26f18:	andeq	r0, r0, r4, asr #4
   26f1c:	andeq	r0, r0, r4, asr #4
   26f20:	andeq	r0, r0, r4, asr #4
   26f24:	andeq	r0, r0, r4, asr #4
   26f28:	andeq	r0, r0, r8, lsr r2
   26f2c:	andeq	r0, r0, r4, asr #4
   26f30:	andeq	r0, r0, r4, asr #4
   26f34:	andeq	r0, r0, r4, asr #4
   26f38:	andeq	r0, r0, r4, asr #4
   26f3c:	andeq	r0, r0, r4, asr #4
   26f40:	andeq	r0, r0, r4, asr #4
   26f44:	andeq	r0, r0, r4, asr #4
   26f48:	andeq	r0, r0, r4, asr #4
   26f4c:	andeq	r0, r0, r4, asr #4
   26f50:	andeq	r0, r0, r4, asr #4
   26f54:	andeq	r0, r0, r4, asr #4
   26f58:	andeq	r0, r0, r4, asr #4
   26f5c:	andeq	r0, r0, r4, asr #4
   26f60:	andeq	r0, r0, r4, asr #4
   26f64:	andeq	r0, r0, r4, asr #4
   26f68:	andeq	r0, r0, r4, asr #4
   26f6c:	andeq	r0, r0, r4, asr #4
   26f70:	andeq	r0, r0, r4, asr #4
   26f74:	andeq	r0, r0, r4, asr #4
   26f78:	andeq	r0, r0, r8, lsr r2
   26f7c:	andeq	r0, r0, r4, asr #4
   26f80:	andeq	r0, r0, r4, asr #4
   26f84:	andeq	r0, r0, r4, asr #4
   26f88:	andeq	r0, r0, r4, asr #4
   26f8c:	andeq	r0, r0, r4, asr #4
   26f90:	andeq	r0, r0, r8, lsr r2
   26f94:	ldr	r2, [r0, #8]
   26f98:	cmp	r2, #1
   26f9c:	beq	27008 <myhtml_serialization_node_callback@@Base+0x9f4>
   26fa0:	ldr	r0, [r0, #40]	; 0x28
   26fa4:	add	r2, sp, #4
   26fa8:	bl	118a8 <myhtml_tag_name_by_id@plt>
   26fac:	mov	r7, r0
   26fb0:	ldr	r0, [pc, #92]	; 27014 <myhtml_serialization_node_callback@@Base+0xa00>
   26fb4:	mov	r1, #2
   26fb8:	mov	r2, r5
   26fbc:	mov	r6, #2
   26fc0:	add	r0, pc, r0
   26fc4:	blx	r4
   26fc8:	cmp	r0, #0
   26fcc:	bne	27008 <myhtml_serialization_node_callback@@Base+0x9f4>
   26fd0:	ldr	r1, [sp, #4]
   26fd4:	mov	r0, r7
   26fd8:	mov	r2, r5
   26fdc:	blx	r4
   26fe0:	cmp	r0, #0
   26fe4:	bne	27008 <myhtml_serialization_node_callback@@Base+0x9f4>
   26fe8:	ldr	r0, [pc, #40]	; 27018 <myhtml_serialization_node_callback@@Base+0xa04>
   26fec:	mov	r1, #1
   26ff0:	mov	r2, r5
   26ff4:	add	r0, pc, r0
   26ff8:	blx	r4
   26ffc:	mov	r6, r0
   27000:	cmp	r0, #0
   27004:	movwne	r6, #2
   27008:	mov	r0, r6
   2700c:	sub	sp, fp, #16
   27010:	pop	{r4, r5, r6, r7, fp, pc}
   27014:			; <UNDEFINED> instruction: 0x000d9fb1
   27018:	andeq	r9, sp, r4, lsr #30

0002701c <myhtml_serialization_reallocate@@Base>:
   2701c:	push	{r4, r5, fp, lr}
   27020:	add	fp, sp, #8
   27024:	mov	r4, r0
   27028:	ldr	r0, [r0]
   2702c:	mov	r5, r1
   27030:	bl	10db0 <mycore_realloc@plt>
   27034:	cmp	r0, #0
   27038:	stmne	r4, {r0, r5}
   2703c:	movne	r0, #0
   27040:	popne	{r4, r5, fp, pc}
   27044:	mov	r0, #0
   27048:	str	r0, [r4]
   2704c:	str	r0, [r4, #4]
   27050:	str	r0, [r4, #8]
   27054:	mov	r0, #2
   27058:	pop	{r4, r5, fp, pc}

0002705c <myhtml_serialization_concatenate@@Base>:
   2705c:	push	{r4, r5, r6, r7, fp, lr}
   27060:	add	fp, sp, #16
   27064:	mov	r5, r1
   27068:	mov	r6, r0
   2706c:	ldmib	r2, {r0, r1}
   27070:	mov	r4, r2
   27074:	add	r2, r1, r5
   27078:	cmp	r2, r0
   2707c:	bcs	27088 <myhtml_serialization_concatenate@@Base+0x2c>
   27080:	ldr	r0, [r4]
   27084:	b	270a8 <myhtml_serialization_concatenate@@Base+0x4c>
   27088:	ldr	r0, [r4]
   2708c:	add	r7, r2, #4096	; 0x1000
   27090:	mov	r1, r7
   27094:	bl	10db0 <mycore_realloc@plt>
   27098:	cmp	r0, #0
   2709c:	beq	270d4 <myhtml_serialization_concatenate@@Base+0x78>
   270a0:	stm	r4, {r0, r7}
   270a4:	ldr	r1, [r4, #8]
   270a8:	add	r0, r0, r1
   270ac:	mov	r1, r6
   270b0:	mov	r2, r5
   270b4:	bl	11728 <strncpy@plt>
   270b8:	ldr	r0, [r4, #8]
   270bc:	ldr	r1, [r4]
   270c0:	add	r2, r0, r5
   270c4:	mov	r0, #0
   270c8:	str	r2, [r4, #8]
   270cc:	strb	r0, [r1, r2]
   270d0:	pop	{r4, r5, r6, r7, fp, pc}
   270d4:	mov	r0, #0
   270d8:	str	r0, [r4]
   270dc:	str	r0, [r4, #4]
   270e0:	str	r0, [r4, #8]
   270e4:	mov	r0, #2
   270e8:	pop	{r4, r5, r6, r7, fp, pc}
   270ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   270f0:	add	fp, sp, #28
   270f4:	sub	sp, sp, #4
   270f8:	cmp	r1, #0
   270fc:	beq	27278 <myhtml_serialization_concatenate@@Base+0x21c>
   27100:	ldr	r9, [pc, #392]	; 27290 <myhtml_serialization_concatenate@@Base+0x234>
   27104:	ldr	sl, [pc, #392]	; 27294 <myhtml_serialization_concatenate@@Base+0x238>
   27108:	mov	r6, r1
   2710c:	mov	r5, r3
   27110:	mov	r4, r2
   27114:	mov	r7, r0
   27118:	mov	r8, #0
   2711c:	mov	r1, #0
   27120:	add	r9, pc, r9
   27124:	add	sl, pc, sl
   27128:	ldrb	r0, [r7, r8]
   2712c:	cmp	r0, #61	; 0x3d
   27130:	bgt	2716c <myhtml_serialization_concatenate@@Base+0x110>
   27134:	cmp	r0, #38	; 0x26
   27138:	beq	271d0 <myhtml_serialization_concatenate@@Base+0x174>
   2713c:	cmp	r0, #60	; 0x3c
   27140:	bne	271c8 <myhtml_serialization_concatenate@@Base+0x16c>
   27144:	cmp	r1, #0
   27148:	beq	27164 <myhtml_serialization_concatenate@@Base+0x108>
   2714c:	sub	r0, r8, r1
   27150:	mov	r2, r5
   27154:	add	r0, r7, r0
   27158:	blx	r4
   2715c:	cmp	r0, #0
   27160:	bne	27284 <myhtml_serialization_concatenate@@Base+0x228>
   27164:	mov	r0, r9
   27168:	b	27224 <myhtml_serialization_concatenate@@Base+0x1c8>
   2716c:	cmp	r0, #62	; 0x3e
   27170:	beq	27200 <myhtml_serialization_concatenate@@Base+0x1a4>
   27174:	cmp	r0, #160	; 0xa0
   27178:	bne	271c8 <myhtml_serialization_concatenate@@Base+0x16c>
   2717c:	cmp	r8, #0
   27180:	beq	271c8 <myhtml_serialization_concatenate@@Base+0x16c>
   27184:	add	r0, r7, r8
   27188:	ldrb	r0, [r0, #-1]
   2718c:	cmp	r0, #194	; 0xc2
   27190:	bne	271c8 <myhtml_serialization_concatenate@@Base+0x16c>
   27194:	cmp	r1, #0
   27198:	beq	271b8 <myhtml_serialization_concatenate@@Base+0x15c>
   2719c:	sub	r0, r8, r1
   271a0:	sub	r1, r1, #1
   271a4:	mov	r2, r5
   271a8:	add	r0, r7, r0
   271ac:	blx	r4
   271b0:	cmp	r0, #0
   271b4:	bne	27284 <myhtml_serialization_concatenate@@Base+0x228>
   271b8:	ldr	r0, [pc, #220]	; 2729c <myhtml_serialization_concatenate@@Base+0x240>
   271bc:	mov	r1, #6
   271c0:	add	r0, pc, r0
   271c4:	b	27228 <myhtml_serialization_concatenate@@Base+0x1cc>
   271c8:	add	r1, r1, #1
   271cc:	b	2723c <myhtml_serialization_concatenate@@Base+0x1e0>
   271d0:	cmp	r1, #0
   271d4:	beq	271f0 <myhtml_serialization_concatenate@@Base+0x194>
   271d8:	sub	r0, r8, r1
   271dc:	mov	r2, r5
   271e0:	add	r0, r7, r0
   271e4:	blx	r4
   271e8:	cmp	r0, #0
   271ec:	bne	27284 <myhtml_serialization_concatenate@@Base+0x228>
   271f0:	ldr	r0, [pc, #160]	; 27298 <myhtml_serialization_concatenate@@Base+0x23c>
   271f4:	mov	r1, #5
   271f8:	add	r0, pc, r0
   271fc:	b	27228 <myhtml_serialization_concatenate@@Base+0x1cc>
   27200:	cmp	r1, #0
   27204:	beq	27220 <myhtml_serialization_concatenate@@Base+0x1c4>
   27208:	sub	r0, r8, r1
   2720c:	mov	r2, r5
   27210:	add	r0, r7, r0
   27214:	blx	r4
   27218:	cmp	r0, #0
   2721c:	bne	27284 <myhtml_serialization_concatenate@@Base+0x228>
   27220:	mov	r0, sl
   27224:	mov	r1, #4
   27228:	mov	r2, r5
   2722c:	blx	r4
   27230:	mov	r1, #0
   27234:	cmp	r0, #0
   27238:	bne	27284 <myhtml_serialization_concatenate@@Base+0x228>
   2723c:	add	r8, r8, #1
   27240:	cmp	r8, r6
   27244:	bcc	27128 <myhtml_serialization_concatenate@@Base+0xcc>
   27248:	cmp	r1, #0
   2724c:	beq	27278 <myhtml_serialization_concatenate@@Base+0x21c>
   27250:	add	r0, r7, r6
   27254:	mov	r2, r5
   27258:	sub	r0, r0, r1
   2725c:	blx	r4
   27260:	mov	r1, r0
   27264:	mov	r0, #2
   27268:	cmp	r1, #0
   2726c:	moveq	r0, #0
   27270:	sub	sp, fp, #28
   27274:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27278:	mov	r0, #0
   2727c:	sub	sp, fp, #28
   27280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27284:	mov	r0, #2
   27288:	sub	sp, fp, #28
   2728c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27290:	andeq	r9, sp, r4, asr lr
   27294:	andeq	r9, sp, r5, asr lr
   27298:	andeq	r9, sp, r5, ror #26
   2729c:	andeq	r9, sp, sl, lsr #27

000272a0 <myhtml_stream_buffer_create@@Base>:
   272a0:	mov	r0, #1
   272a4:	mov	r1, #36	; 0x24
   272a8:	b	11020 <mycore_calloc@plt>

000272ac <myhtml_stream_buffer_init@@Base>:
   272ac:	push	{r4, r5, fp, lr}
   272b0:	add	fp, sp, #8
   272b4:	mov	r5, #0
   272b8:	mov	r4, r0
   272bc:	str	r5, [r0, #4]
   272c0:	str	r1, [r0, #8]
   272c4:	mov	r0, r1
   272c8:	mov	r1, #12
   272cc:	bl	11020 <mycore_calloc@plt>
   272d0:	cmp	r0, #0
   272d4:	str	r0, [r4]
   272d8:	movweq	r5, #37633	; 0x9301
   272dc:	mov	r0, r5
   272e0:	pop	{r4, r5, fp, pc}

000272e4 <myhtml_stream_buffer_entry_init@@Base>:
   272e4:	push	{r4, r5, r6, sl, fp, lr}
   272e8:	add	fp, sp, #16
   272ec:	mov	r4, r0
   272f0:	ldr	r0, [r0]
   272f4:	mov	r5, r1
   272f8:	cmp	r0, #0
   272fc:	beq	27314 <myhtml_stream_buffer_entry_init@@Base+0x30>
   27300:	ldr	r1, [r4, #8]
   27304:	mov	r6, #0
   27308:	cmp	r1, r5
   2730c:	bcs	27334 <myhtml_stream_buffer_entry_init@@Base+0x50>
   27310:	bl	11ab8 <mycore_free@plt>
   27314:	mov	r6, #0
   27318:	mov	r0, r5
   2731c:	str	r6, [r4, #4]
   27320:	str	r5, [r4, #8]
   27324:	bl	119c8 <mycore_malloc@plt>
   27328:	cmp	r0, #0
   2732c:	str	r0, [r4]
   27330:	movweq	r6, #37635	; 0x9303
   27334:	mov	r0, r6
   27338:	pop	{r4, r5, r6, sl, fp, pc}

0002733c <myhtml_stream_buffer_entry_clean@@Base>:
   2733c:	cmp	r0, #0
   27340:	movne	r1, #0
   27344:	strne	r1, [r0, #4]
   27348:	bx	lr

0002734c <myhtml_stream_buffer_entry_destroy@@Base>:
   2734c:	push	{r4, r5, r6, sl, fp, lr}
   27350:	add	fp, sp, #16
   27354:	mov	r4, #0
   27358:	cmp	r0, #0
   2735c:	beq	2738c <myhtml_stream_buffer_entry_destroy@@Base+0x40>
   27360:	mov	r5, r0
   27364:	ldr	r0, [r0]
   27368:	mov	r6, r1
   2736c:	cmp	r0, #0
   27370:	beq	27378 <myhtml_stream_buffer_entry_destroy@@Base+0x2c>
   27374:	bl	11ab8 <mycore_free@plt>
   27378:	cmp	r6, #0
   2737c:	moveq	r0, r5
   27380:	popeq	{r4, r5, r6, sl, fp, pc}
   27384:	mov	r0, r5
   27388:	bl	11ab8 <mycore_free@plt>
   2738c:	mov	r0, r4
   27390:	pop	{r4, r5, r6, sl, fp, pc}

00027394 <myhtml_stream_buffer_clean@@Base>:
   27394:	cmp	r0, #0
   27398:	movne	r1, #0
   2739c:	strne	r1, [r0, #4]
   273a0:	bx	lr

000273a4 <myhtml_stream_buffer_destroy@@Base>:
   273a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   273a8:	add	fp, sp, #24
   273ac:	mov	r4, #0
   273b0:	cmp	r0, #0
   273b4:	beq	27438 <myhtml_stream_buffer_destroy@@Base+0x94>
   273b8:	mov	r5, r0
   273bc:	ldr	r0, [r0]
   273c0:	mov	r8, r1
   273c4:	cmp	r0, #0
   273c8:	beq	27424 <myhtml_stream_buffer_destroy@@Base+0x80>
   273cc:	ldr	r1, [r5, #4]
   273d0:	cmp	r1, #0
   273d4:	beq	27420 <myhtml_stream_buffer_destroy@@Base+0x7c>
   273d8:	mov	r7, #0
   273dc:	mov	r6, #1
   273e0:	b	273f0 <myhtml_stream_buffer_destroy@@Base+0x4c>
   273e4:	ldr	r0, [r5]
   273e8:	add	r6, r6, #1
   273ec:	sub	r7, r7, #12
   273f0:	cmp	r0, r7
   273f4:	ldrne	r0, [r0, -r7]
   273f8:	cmpne	r0, #0
   273fc:	bne	2740c <myhtml_stream_buffer_destroy@@Base+0x68>
   27400:	cmp	r6, r1
   27404:	bcc	273e4 <myhtml_stream_buffer_destroy@@Base+0x40>
   27408:	b	2741c <myhtml_stream_buffer_destroy@@Base+0x78>
   2740c:	bl	11ab8 <mycore_free@plt>
   27410:	ldr	r1, [r5, #4]
   27414:	cmp	r6, r1
   27418:	bcc	273e4 <myhtml_stream_buffer_destroy@@Base+0x40>
   2741c:	ldr	r0, [r5]
   27420:	bl	11ab8 <mycore_free@plt>
   27424:	cmp	r8, #0
   27428:	moveq	r0, r5
   2742c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   27430:	mov	r0, r5
   27434:	bl	11ab8 <mycore_free@plt>
   27438:	mov	r0, r4
   2743c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00027440 <myhtml_stream_buffer_add_entry@@Base>:
   27440:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   27444:	add	fp, sp, #24
   27448:	mov	r8, r1
   2744c:	ldmib	r0, {r1, r5}
   27450:	mov	r4, r0
   27454:	cmp	r1, r5
   27458:	bcs	27464 <myhtml_stream_buffer_add_entry@@Base+0x24>
   2745c:	ldr	r6, [r4]
   27460:	b	274b0 <myhtml_stream_buffer_add_entry@@Base+0x70>
   27464:	add	r0, r5, r5, lsl #1
   27468:	lsl	r1, r0, #3
   2746c:	mov	r0, r4
   27470:	bl	10db0 <mycore_realloc@plt>
   27474:	cmp	r0, #0
   27478:	moveq	r6, #0
   2747c:	moveq	r0, r6
   27480:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   27484:	mov	r6, r0
   27488:	ldr	r0, [r4, #8]
   2748c:	lsl	r5, r5, #1
   27490:	mov	r1, #0
   27494:	sub	r2, r5, r0
   27498:	add	r0, r0, r0, lsl #1
   2749c:	add	r0, r6, r0, lsl #2
   274a0:	bl	116ec <memset@plt>
   274a4:	str	r6, [r4]
   274a8:	str	r5, [r4, #8]
   274ac:	ldr	r1, [r4, #4]
   274b0:	add	r5, r1, r1, lsl #1
   274b4:	mov	r7, r6
   274b8:	ldr	r0, [r7, r5, lsl #2]!
   274bc:	add	r9, r7, #8
   274c0:	cmp	r0, #0
   274c4:	beq	274d8 <myhtml_stream_buffer_add_entry@@Base+0x98>
   274c8:	ldr	r2, [r9]
   274cc:	cmp	r2, r8
   274d0:	bcs	27500 <myhtml_stream_buffer_add_entry@@Base+0xc0>
   274d4:	bl	11ab8 <mycore_free@plt>
   274d8:	add	r0, r6, r5, lsl #2
   274dc:	mov	r6, #0
   274e0:	str	r6, [r0, #4]
   274e4:	mov	r0, r8
   274e8:	str	r8, [r9]
   274ec:	bl	119c8 <mycore_malloc@plt>
   274f0:	cmp	r0, #0
   274f4:	str	r0, [r7]
   274f8:	beq	2750c <myhtml_stream_buffer_add_entry@@Base+0xcc>
   274fc:	ldr	r1, [r4, #4]
   27500:	add	r0, r1, #1
   27504:	mov	r6, r7
   27508:	str	r0, [r4, #4]
   2750c:	mov	r0, r6
   27510:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00027514 <myhtml_stream_buffer_current_entry@@Base>:
   27514:	ldr	r1, [r0, #4]
   27518:	cmp	r1, #0
   2751c:	ldrne	r0, [r0]
   27520:	addne	r1, r1, r1, lsl #1
   27524:	addne	r0, r0, r1, lsl #2
   27528:	subne	r0, r0, #12
   2752c:	bxne	lr
   27530:	mov	r0, #0
   27534:	bx	lr

00027538 <myhtml_tag_create@@Base>:
   27538:	mov	r0, #20
   2753c:	b	119c8 <mycore_malloc@plt>

00027540 <myhtml_tag_init@@Base>:
   27540:	push	{r4, r5, fp, lr}
   27544:	add	fp, sp, #8
   27548:	sub	sp, sp, #8
   2754c:	mov	r4, r1
   27550:	mov	r5, r0
   27554:	bl	112c0 <mcsimple_create@plt>
   27558:	cmp	r0, #0
   2755c:	str	r0, [r4, #4]
   27560:	movweq	r0, #37264	; 0x9190
   27564:	subeq	sp, fp, #8
   27568:	popeq	{r4, r5, fp, pc}
   2756c:	mov	r1, #128	; 0x80
   27570:	mov	r2, #1024	; 0x400
   27574:	mov	r3, #44	; 0x2c
   27578:	bl	113d4 <mcsimple_init@plt>
   2757c:	ldr	r0, [r5, #4]
   27580:	add	r1, sp, #4
   27584:	bl	112a8 <mchar_async_node_add@plt>
   27588:	str	r0, [r4, #12]
   2758c:	mov	r0, #2
   27590:	bl	11560 <mctree_create@plt>
   27594:	str	r0, [r4]
   27598:	mov	r1, r0
   2759c:	mov	r2, #252	; 0xfc
   275a0:	ldr	r0, [r5, #4]
   275a4:	str	r2, [r4, #8]
   275a8:	str	r0, [r4, #16]
   275ac:	ldr	r0, [sp, #4]
   275b0:	cmp	r0, #0
   275b4:	bne	275ec <myhtml_tag_init@@Base+0xac>
   275b8:	cmp	r1, #0
   275bc:	mov	r0, #2
   275c0:	beq	275ec <myhtml_tag_init@@Base+0xac>
   275c4:	mov	r0, #252	; 0xfc
   275c8:	str	r0, [r4, #8]
   275cc:	ldr	r0, [r4, #4]
   275d0:	bl	11278 <mcsimple_clean@plt>
   275d4:	ldr	r1, [r4, #12]
   275d8:	ldr	r0, [r4, #16]
   275dc:	bl	115cc <mchar_async_node_clean@plt>
   275e0:	ldr	r0, [r4]
   275e4:	bl	112f0 <mctree_clean@plt>
   275e8:	mov	r0, #0
   275ec:	sub	sp, fp, #8
   275f0:	pop	{r4, r5, fp, pc}

000275f4 <myhtml_tag_clean@@Base>:
   275f4:	push	{r4, sl, fp, lr}
   275f8:	add	fp, sp, #8
   275fc:	mov	r4, r0
   27600:	mov	r0, #252	; 0xfc
   27604:	str	r0, [r4, #8]
   27608:	ldr	r0, [r4, #4]
   2760c:	bl	11278 <mcsimple_clean@plt>
   27610:	ldr	r1, [r4, #12]
   27614:	ldr	r0, [r4, #16]
   27618:	bl	115cc <mchar_async_node_clean@plt>
   2761c:	ldr	r0, [r4]
   27620:	pop	{r4, sl, fp, lr}
   27624:	b	112f0 <mctree_clean@plt>

00027628 <myhtml_tag_destroy@@Base>:
   27628:	cmp	r0, #0
   2762c:	beq	27670 <myhtml_tag_destroy@@Base+0x48>
   27630:	push	{r4, sl, fp, lr}
   27634:	add	fp, sp, #8
   27638:	mov	r4, r0
   2763c:	ldr	r0, [r0]
   27640:	bl	11170 <mctree_destroy@plt>
   27644:	str	r0, [r4]
   27648:	mov	r1, #1
   2764c:	ldr	r0, [r4, #4]
   27650:	bl	11350 <mcsimple_destroy@plt>
   27654:	str	r0, [r4, #4]
   27658:	ldr	r1, [r4, #12]
   2765c:	ldr	r0, [r4, #16]
   27660:	bl	1198c <mchar_async_node_delete@plt>
   27664:	mov	r0, r4
   27668:	bl	11ab8 <mycore_free@plt>
   2766c:	pop	{r4, sl, fp, lr}
   27670:	mov	r0, #0
   27674:	bx	lr

00027678 <myhtml_tag_add@@Base>:
   27678:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2767c:	add	fp, sp, #24
   27680:	sub	sp, sp, #8
   27684:	mov	r4, r1
   27688:	mov	r5, r0
   2768c:	ldr	r1, [r0, #12]
   27690:	ldr	r0, [r0, #16]
   27694:	mov	r6, r2
   27698:	add	r2, r2, #1
   2769c:	mov	r8, r3
   276a0:	bl	1174c <mchar_async_malloc@plt>
   276a4:	mov	r9, r0
   276a8:	ldr	r0, [fp, #8]
   276ac:	cmp	r0, #0
   276b0:	beq	27754 <myhtml_tag_add@@Base+0xdc>
   276b4:	cmp	r6, #0
   276b8:	beq	27764 <myhtml_tag_add@@Base+0xec>
   276bc:	mov	r0, #0
   276c0:	cmp	r6, #16
   276c4:	bcc	27724 <myhtml_tag_add@@Base+0xac>
   276c8:	add	r1, r4, r6
   276cc:	cmp	r9, r1
   276d0:	bcs	276e0 <myhtml_tag_add@@Base+0x68>
   276d4:	add	r1, r9, r6
   276d8:	cmp	r1, r4
   276dc:	bhi	27724 <myhtml_tag_add@@Base+0xac>
   276e0:	bic	r0, r6, #15
   276e4:	vmov.i8	q8, #191	; 0xbf
   276e8:	vmov.i8	q9, #96	; 0x60
   276ec:	vmov.i8	q10, #26	; 0x1a
   276f0:	mov	r2, r9
   276f4:	mov	r3, r4
   276f8:	mov	r1, r0
   276fc:	vld1.8	{d22-d23}, [r3]!
   27700:	subs	r1, r1, #16
   27704:	vadd.i8	q12, q11, q8
   27708:	vorr	q13, q11, q9
   2770c:	vcgt.u8	q12, q10, q12
   27710:	vbsl	q12, q13, q11
   27714:	vst1.8	{d24-d25}, [r2]!
   27718:	bne	276fc <myhtml_tag_add@@Base+0x84>
   2771c:	cmp	r0, r6
   27720:	beq	27764 <myhtml_tag_add@@Base+0xec>
   27724:	sub	r1, r6, r0
   27728:	add	r2, r9, r0
   2772c:	add	r0, r4, r0
   27730:	ldrb	r3, [r0], #1
   27734:	sub	r4, r3, #65	; 0x41
   27738:	uxtb	r4, r4
   2773c:	cmp	r4, #26
   27740:	orrcc	r3, r3, #96	; 0x60
   27744:	subs	r1, r1, #1
   27748:	strb	r3, [r2], #1
   2774c:	bne	27730 <myhtml_tag_add@@Base+0xb8>
   27750:	b	27764 <myhtml_tag_add@@Base+0xec>
   27754:	mov	r0, r9
   27758:	mov	r1, r4
   2775c:	mov	r2, r6
   27760:	bl	11728 <strncpy@plt>
   27764:	mov	r7, #0
   27768:	strb	r7, [r9, r6]
   2776c:	ldr	r0, [r5, #4]
   27770:	bl	115fc <mcsimple_malloc@plt>
   27774:	mov	r4, r0
   27778:	ldr	r0, [r5]
   2777c:	mov	r1, r9
   27780:	mov	r2, r6
   27784:	str	r7, [sp]
   27788:	mov	r3, r4
   2778c:	bl	11788 <mctree_insert@plt>
   27790:	ldr	r0, [r5, #8]
   27794:	vmov.i32	q8, #0	; 0x00000000
   27798:	add	r1, r0, #1
   2779c:	stm	r4, {r0, r9}
   277a0:	str	r6, [r4, #8]
   277a4:	str	r8, [r4, #12]
   277a8:	str	r1, [r5, #8]
   277ac:	add	r1, r4, #28
   277b0:	vst1.32	{d16-d17}, [r1]
   277b4:	add	r1, r4, #16
   277b8:	vst1.32	{d16-d17}, [r1]
   277bc:	sub	sp, fp, #24
   277c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000277c4 <myhtml_tag_set_category@@Base>:
   277c4:	cmp	r1, #252	; 0xfc
   277c8:	bxcc	lr
   277cc:	push	{r4, r5, fp, lr}
   277d0:	add	fp, sp, #8
   277d4:	ldr	r0, [r0, #4]
   277d8:	sub	r1, r1, #252	; 0xfc
   277dc:	mov	r4, r3
   277e0:	mov	r5, r2
   277e4:	bl	11c08 <mcsimple_get_by_absolute_position@plt>
   277e8:	add	r0, r0, r5, lsl #2
   277ec:	str	r4, [r0, #16]
   277f0:	pop	{r4, r5, fp, lr}
   277f4:	bx	lr

000277f8 <myhtml_tag_get_by_id@@Base>:
   277f8:	cmp	r1, #252	; 0xfc
   277fc:	bcc	2780c <myhtml_tag_get_by_id@@Base+0x14>
   27800:	ldr	r0, [r0, #4]
   27804:	sub	r1, r1, #252	; 0xfc
   27808:	b	11c08 <mcsimple_get_by_absolute_position@plt>
   2780c:	mov	r0, r1
   27810:	b	110e0 <myhtml_tag_static_get_by_id@plt>

00027814 <myhtml_tag_get_by_name@@Base>:
   27814:	push	{r4, r5, r6, sl, fp, lr}
   27818:	add	fp, sp, #16
   2781c:	mov	r4, r0
   27820:	mov	r6, r1
   27824:	mov	r0, r1
   27828:	mov	r1, r2
   2782c:	mov	r5, r2
   27830:	bl	11758 <myhtml_tag_static_search@plt>
   27834:	cmp	r0, #0
   27838:	popne	{r4, r5, r6, sl, fp, pc}
   2783c:	ldr	r0, [r4]
   27840:	mov	r1, r6
   27844:	mov	r2, r5
   27848:	bl	11608 <mctree_search_lowercase@plt>
   2784c:	ldr	r1, [r4]
   27850:	rsb	r0, r0, r0, lsl #3
   27854:	ldr	r1, [r1]
   27858:	add	r0, r1, r0, lsl #2
   2785c:	ldr	r0, [r0, #8]
   27860:	pop	{r4, r5, r6, sl, fp, pc}

00027864 <myhtml_tag_static_search@@Base>:
   27864:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   27868:	add	fp, sp, #24
   2786c:	mov	r4, r1
   27870:	mov	r8, r0
   27874:	ldrb	r1, [r0], r1
   27878:	ldrb	r0, [r0, #-1]
   2787c:	ldr	r2, [pc, #176]	; 27934 <myhtml_tag_static_search@@Base+0xd0>
   27880:	ldr	r7, [pc, #176]	; 27938 <myhtml_tag_static_search@@Base+0xd4>
   27884:	add	r2, pc, r2
   27888:	add	r7, pc, r7
   2788c:	ldrb	r1, [r2, r1]
   27890:	ldrb	r0, [r2, r0]
   27894:	mul	r1, r1, r4
   27898:	mul	r0, r1, r0
   2789c:	movw	r1, #411	; 0x19b
   278a0:	movt	r1, #4515	; 0x11a3
   278a4:	umull	r1, r2, r0, r1
   278a8:	sub	r1, r0, r2
   278ac:	add	r1, r2, r1, lsr #1
   278b0:	movw	r2, #479	; 0x1df
   278b4:	lsr	r1, r1, #8
   278b8:	mls	r0, r1, r2, r0
   278bc:	add	r5, r0, #1
   278c0:	add	r0, r5, r5, lsl #1
   278c4:	b	278cc <myhtml_tag_static_search@@Base+0x68>
   278c8:	add	r0, r5, r5, lsl #1
   278cc:	ldr	r6, [r7, r0, lsl #2]
   278d0:	cmp	r6, #0
   278d4:	beq	27928 <myhtml_tag_static_search@@Base+0xc4>
   278d8:	ldr	r0, [r6, #8]
   278dc:	cmp	r0, r4
   278e0:	bne	27914 <myhtml_tag_static_search@@Base+0xb0>
   278e4:	ldr	r0, [r6, #4]
   278e8:	mov	r1, r8
   278ec:	mov	r2, r4
   278f0:	bl	112b4 <mycore_strncasecmp@plt>
   278f4:	cmp	r0, #0
   278f8:	beq	2792c <myhtml_tag_static_search@@Base+0xc8>
   278fc:	add	r0, r5, r5, lsl #1
   27900:	add	r0, r7, r0, lsl #2
   27904:	ldr	r5, [r0, #4]
   27908:	cmp	r5, #0
   2790c:	bne	278c8 <myhtml_tag_static_search@@Base+0x64>
   27910:	b	27928 <myhtml_tag_static_search@@Base+0xc4>
   27914:	bhi	27928 <myhtml_tag_static_search@@Base+0xc4>
   27918:	add	r0, r5, r5, lsl #1
   2791c:	add	r0, r7, r0, lsl #2
   27920:	ldr	r5, [r0, #4]
   27924:	b	278c8 <myhtml_tag_static_search@@Base+0x64>
   27928:	mov	r6, #0
   2792c:	mov	r0, r6
   27930:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   27934:	strdeq	r9, [sp], -sl
   27938:	andeq	lr, lr, r0, asr sp

0002793c <myhtml_tag_static_get_by_id@@Base>:
   2793c:	ldr	r1, [pc, #12]	; 27950 <myhtml_tag_static_get_by_id@@Base+0x14>
   27940:	mov	r2, #44	; 0x2c
   27944:	add	r1, pc, r1
   27948:	mla	r0, r0, r2, r1
   2794c:	bx	lr
   27950:	strdeq	r0, [pc], -r0	; <UNPREDICTABLE>

00027954 <myhtml_token_create@@Base>:
   27954:	push	{r4, r5, r6, r7, fp, lr}
   27958:	add	fp, sp, #16
   2795c:	mov	r5, r0
   27960:	mov	r0, #24
   27964:	mov	r6, r1
   27968:	cmp	r1, #0
   2796c:	movweq	r6, #4096	; 0x1000
   27970:	bl	119c8 <mycore_malloc@plt>
   27974:	mov	r7, #0
   27978:	cmp	r0, #0
   2797c:	beq	279f8 <myhtml_token_create@@Base+0xa4>
   27980:	mov	r4, r0
   27984:	bl	10edc <mcobject_async_create@plt>
   27988:	cmp	r0, #0
   2798c:	str	r0, [r4, #4]
   27990:	beq	27a04 <myhtml_token_create@@Base+0xb0>
   27994:	bl	10edc <mcobject_async_create@plt>
   27998:	str	r0, [r4, #8]
   2799c:	mov	r1, r0
   279a0:	ldr	r0, [r4, #4]
   279a4:	cmp	r1, #0
   279a8:	beq	27a00 <myhtml_token_create@@Base+0xac>
   279ac:	mov	r1, #128	; 0x80
   279b0:	mov	r2, r6
   279b4:	mov	r3, #52	; 0x34
   279b8:	bl	10e34 <mcobject_async_init@plt>
   279bc:	ldr	r0, [r4, #8]
   279c0:	mov	r1, #128	; 0x80
   279c4:	mov	r2, r6
   279c8:	mov	r3, #68	; 0x44
   279cc:	bl	10e34 <mcobject_async_init@plt>
   279d0:	ldr	r0, [r4, #4]
   279d4:	mov	r1, #0
   279d8:	bl	1186c <mcobject_async_node_add@plt>
   279dc:	str	r0, [r4, #12]
   279e0:	mov	r1, #0
   279e4:	ldr	r0, [r4, #8]
   279e8:	bl	1186c <mcobject_async_node_add@plt>
   279ec:	mov	r7, r4
   279f0:	str	r0, [r4, #16]
   279f4:	str	r5, [r4]
   279f8:	mov	r0, r7
   279fc:	pop	{r4, r5, r6, r7, fp, pc}
   27a00:	bl	11ab8 <mycore_free@plt>
   27a04:	mov	r0, r4
   27a08:	bl	11ab8 <mycore_free@plt>
   27a0c:	mov	r0, r7
   27a10:	pop	{r4, r5, r6, r7, fp, pc}

00027a14 <myhtml_token_clean@@Base>:
   27a14:	push	{r4, sl, fp, lr}
   27a18:	add	fp, sp, #8
   27a1c:	mov	r4, r0
   27a20:	ldr	r0, [r0, #4]
   27a24:	ldr	r1, [r4, #12]
   27a28:	bl	116c8 <mcobject_async_node_clean@plt>
   27a2c:	ldr	r0, [r4, #8]
   27a30:	ldr	r1, [r4, #16]
   27a34:	pop	{r4, sl, fp, lr}
   27a38:	b	116c8 <mcobject_async_node_clean@plt>

00027a3c <myhtml_token_clean_all@@Base>:
   27a3c:	push	{r4, sl, fp, lr}
   27a40:	add	fp, sp, #8
   27a44:	mov	r4, r0
   27a48:	ldr	r0, [r0, #4]
   27a4c:	bl	11c98 <mcobject_async_clean@plt>
   27a50:	ldr	r0, [r4, #8]
   27a54:	pop	{r4, sl, fp, lr}
   27a58:	b	11c98 <mcobject_async_clean@plt>

00027a5c <myhtml_token_destroy@@Base>:
   27a5c:	cmp	r0, #0
   27a60:	beq	27aac <myhtml_token_destroy@@Base+0x50>
   27a64:	push	{r4, sl, fp, lr}
   27a68:	add	fp, sp, #8
   27a6c:	mov	r4, r0
   27a70:	ldr	r0, [r0, #4]
   27a74:	cmp	r0, #0
   27a78:	beq	27a88 <myhtml_token_destroy@@Base+0x2c>
   27a7c:	mov	r1, #1
   27a80:	bl	118cc <mcobject_async_destroy@plt>
   27a84:	str	r0, [r4, #4]
   27a88:	ldr	r0, [r4, #8]
   27a8c:	cmp	r0, #0
   27a90:	beq	27aa0 <myhtml_token_destroy@@Base+0x44>
   27a94:	mov	r1, #1
   27a98:	bl	118cc <mcobject_async_destroy@plt>
   27a9c:	str	r0, [r4, #8]
   27aa0:	mov	r0, r4
   27aa4:	bl	11ab8 <mycore_free@plt>
   27aa8:	pop	{r4, sl, fp, lr}
   27aac:	mov	r0, #0
   27ab0:	bx	lr

00027ab4 <myhtml_token_node_create@@Base>:
   27ab4:	push	{r4, r5, fp, lr}
   27ab8:	add	fp, sp, #8
   27abc:	ldr	r0, [r0, #4]
   27ac0:	mov	r2, #0
   27ac4:	mov	r5, #0
   27ac8:	bl	1192c <mcobject_async_malloc@plt>
   27acc:	cmp	r0, #0
   27ad0:	beq	27b10 <myhtml_token_node_create@@Base+0x5c>
   27ad4:	mov	r4, r0
   27ad8:	mov	r0, #0
   27adc:	vmov.i32	q8, #0	; 0x00000000
   27ae0:	mov	r1, #4
   27ae4:	str	r0, [r4, #48]	; 0x30
   27ae8:	add	r0, r4, #32
   27aec:	vst1.32	{d16-d17}, [r0]
   27af0:	add	r0, r4, #16
   27af4:	vst1.32	{d16-d17}, [r0]
   27af8:	mov	r0, #8
   27afc:	str	r0, [r4, #48]	; 0x30
   27b00:	mov	r0, r4
   27b04:	vst1.32	{d16-d17}, [r0], r1
   27b08:	bl	11cbc <mycore_string_clean_all@plt>
   27b0c:	mov	r5, r4
   27b10:	mov	r0, r5
   27b14:	pop	{r4, r5, fp, pc}

00027b18 <myhtml_token_node_clean@@Base>:
   27b18:	mov	r1, #0
   27b1c:	vmov.i32	q8, #0	; 0x00000000
   27b20:	str	r1, [r0, #48]	; 0x30
   27b24:	add	r1, r0, #32
   27b28:	vst1.32	{d16-d17}, [r1]
   27b2c:	add	r1, r0, #16
   27b30:	vst1.32	{d16-d17}, [r1]
   27b34:	mov	r1, #8
   27b38:	str	r1, [r0, #48]	; 0x30
   27b3c:	mov	r1, #4
   27b40:	vst1.32	{d16-d17}, [r0], r1
   27b44:	b	11cbc <mycore_string_clean_all@plt>

00027b48 <myhtml_token_attr_create@@Base>:
   27b48:	push	{r4, r5, fp, lr}
   27b4c:	add	fp, sp, #8
   27b50:	ldr	r0, [r0, #8]
   27b54:	mov	r2, #0
   27b58:	mov	r5, #0
   27b5c:	bl	1192c <mcobject_async_malloc@plt>
   27b60:	cmp	r0, #0
   27b64:	beq	27bb0 <myhtml_token_attr_create@@Base+0x68>
   27b68:	mov	r4, r0
   27b6c:	mov	r0, #1
   27b70:	vmov.i32	q8, #0	; 0x00000000
   27b74:	str	r0, [r4, #64]	; 0x40
   27b78:	add	r0, r4, #48	; 0x30
   27b7c:	mov	r5, r4
   27b80:	vst1.32	{d16-d17}, [r0]
   27b84:	add	r0, r4, #32
   27b88:	vst1.32	{d16-d17}, [r0]
   27b8c:	add	r0, r4, #16
   27b90:	vst1.32	{d16-d17}, [r0]
   27b94:	mov	r0, #28
   27b98:	vst1.32	{d16-d17}, [r5], r0
   27b9c:	add	r0, r4, #8
   27ba0:	bl	11cbc <mycore_string_clean_all@plt>
   27ba4:	mov	r0, r5
   27ba8:	bl	11cbc <mycore_string_clean_all@plt>
   27bac:	mov	r5, r4
   27bb0:	mov	r0, r5
   27bb4:	pop	{r4, r5, fp, pc}

00027bb8 <myhtml_token_attr_clean@@Base>:
   27bb8:	push	{r4, sl, fp, lr}
   27bbc:	add	fp, sp, #8
   27bc0:	mov	r1, #1
   27bc4:	vmov.i32	q8, #0	; 0x00000000
   27bc8:	mov	r4, r0
   27bcc:	str	r1, [r0, #64]	; 0x40
   27bd0:	add	r1, r0, #48	; 0x30
   27bd4:	vst1.32	{d16-d17}, [r1]
   27bd8:	add	r1, r0, #32
   27bdc:	vst1.32	{d16-d17}, [r1]
   27be0:	add	r1, r0, #16
   27be4:	add	r0, r0, #8
   27be8:	vst1.32	{d16-d17}, [r1]
   27bec:	mov	r1, #28
   27bf0:	vst1.32	{d16-d17}, [r4], r1
   27bf4:	bl	11cbc <mycore_string_clean_all@plt>
   27bf8:	mov	r0, r4
   27bfc:	pop	{r4, sl, fp, lr}
   27c00:	b	11cbc <mycore_string_clean_all@plt>

00027c04 <myhtml_token_node_tag_id@@Base>:
   27c04:	ldr	r0, [r0]
   27c08:	bx	lr

00027c0c <myhtml_token_node_raw_position@@Base>:
   27c0c:	cmp	r1, #0
   27c10:	ldrne	r2, [r1, #24]
   27c14:	ldrne	r1, [r1, #28]
   27c18:	strne	r2, [r0]
   27c1c:	strne	r1, [r0, #4]
   27c20:	bxne	lr
   27c24:	mov	r1, #0
   27c28:	str	r1, [r0]
   27c2c:	str	r1, [r0, #4]
   27c30:	bx	lr

00027c34 <myhtml_token_node_element_position@@Base>:
   27c34:	cmp	r1, #0
   27c38:	ldrne	r2, [r1, #32]
   27c3c:	ldrne	r1, [r1, #36]	; 0x24
   27c40:	strne	r2, [r0]
   27c44:	strne	r1, [r0, #4]
   27c48:	bxne	lr
   27c4c:	mov	r1, #0
   27c50:	str	r1, [r0]
   27c54:	str	r1, [r0, #4]
   27c58:	bx	lr

00027c5c <myhtml_token_node_attribute_first@@Base>:
   27c5c:	ldr	r0, [r0, #40]	; 0x28
   27c60:	bx	lr

00027c64 <myhtml_token_node_attribute_last@@Base>:
   27c64:	ldr	r0, [r0, #44]	; 0x2c
   27c68:	bx	lr

00027c6c <myhtml_token_node_text@@Base>:
   27c6c:	cmp	r1, #0
   27c70:	ldrne	r2, [r0, #12]
   27c74:	strne	r2, [r1]
   27c78:	ldr	r0, [r0, #4]
   27c7c:	bx	lr

00027c80 <myhtml_token_node_string@@Base>:
   27c80:	add	r0, r0, #4
   27c84:	bx	lr

00027c88 <myhtml_token_node_is_close@@Base>:
   27c88:	ldr	r0, [r0, #48]	; 0x30
   27c8c:	and	r0, r0, #1
   27c90:	bx	lr

00027c94 <myhtml_token_node_is_close_self@@Base>:
   27c94:	ldr	r0, [r0, #48]	; 0x30
   27c98:	ubfx	r0, r0, #1, #1
   27c9c:	bx	lr

00027ca0 <myhtml_token_node_wait_for_done@@Base>:
   27ca0:	push	{r4, r5, fp, lr}
   27ca4:	add	fp, sp, #8
   27ca8:	mov	r5, r0
   27cac:	ldr	r0, [r1, #48]	; 0x30
   27cb0:	tst	r0, #4
   27cb4:	popne	{r4, r5, fp, pc}
   27cb8:	mov	r4, r1
   27cbc:	ldr	r0, [r5]
   27cc0:	ldr	r0, [r0]
   27cc4:	ldr	r0, [r0]
   27cc8:	ldr	r0, [r0, #24]
   27ccc:	bl	11164 <mythread_nanosleep_sleep@plt>
   27cd0:	ldr	r0, [r4, #48]	; 0x30
   27cd4:	tst	r0, #4
   27cd8:	beq	27cbc <myhtml_token_node_wait_for_done@@Base+0x1c>
   27cdc:	pop	{r4, r5, fp, pc}

00027ce0 <myhtml_token_set_done@@Base>:
   27ce0:	ldr	r1, [r0, #48]	; 0x30
   27ce4:	orr	r1, r1, #4
   27ce8:	str	r1, [r0, #48]	; 0x30
   27cec:	bx	lr

00027cf0 <myhtml_token_node_clone@@Base>:
   27cf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27cf4:	add	fp, sp, #28
   27cf8:	sub	sp, sp, #4
   27cfc:	cmp	r1, #0
   27d00:	beq	27dd0 <myhtml_token_node_clone@@Base+0xe0>
   27d04:	mov	r5, r0
   27d08:	ldr	r8, [r0]
   27d0c:	ldr	r0, [r0, #4]
   27d10:	mov	r9, r1
   27d14:	mov	r1, r2
   27d18:	mov	r2, #0
   27d1c:	mov	r4, r3
   27d20:	mov	r7, #0
   27d24:	bl	1192c <mcobject_async_malloc@plt>
   27d28:	cmp	r0, #0
   27d2c:	beq	27e10 <myhtml_token_node_clone@@Base+0x120>
   27d30:	mov	r7, #0
   27d34:	mov	r6, r0
   27d38:	vmov.i32	q8, #0	; 0x00000000
   27d3c:	str	r8, [sp]
   27d40:	str	r7, [r0, #48]	; 0x30
   27d44:	add	r0, r0, #32
   27d48:	mov	sl, r6
   27d4c:	add	r8, r6, #4
   27d50:	vst1.32	{d16-d17}, [r0]
   27d54:	add	r0, r6, #16
   27d58:	vst1.32	{d16-d17}, [r0]
   27d5c:	mov	r0, #8
   27d60:	str	r0, [r6, #48]	; 0x30
   27d64:	mov	r0, #24
   27d68:	vst1.32	{d16-d17}, [sl], r0
   27d6c:	mov	r0, r8
   27d70:	bl	11cbc <mycore_string_clean_all@plt>
   27d74:	ldr	r0, [r9]
   27d78:	str	r0, [r6]
   27d7c:	ldr	r0, [r9, #48]	; 0x30
   27d80:	str	r7, [r6, #40]	; 0x28
   27d84:	str	r7, [r6, #44]	; 0x2c
   27d88:	str	r0, [r6, #48]	; 0x30
   27d8c:	add	r0, r9, #24
   27d90:	vld1.32	{d16-d17}, [r0]
   27d94:	vst1.32	{d16-d17}, [sl]
   27d98:	ldr	r2, [r9, #12]
   27d9c:	cmp	r2, #0
   27da0:	beq	27dd8 <myhtml_token_node_clone@@Base+0xe8>
   27da4:	ldr	r1, [sp]
   27da8:	add	r3, r2, #1
   27dac:	mov	r2, r8
   27db0:	ldr	r0, [r1, #4]
   27db4:	ldr	r1, [r1, #52]	; 0x34
   27db8:	bl	11524 <mycore_string_init@plt>
   27dbc:	ldr	r1, [r9, #4]
   27dc0:	ldr	r2, [r9, #12]
   27dc4:	mov	r0, r8
   27dc8:	bl	11710 <mycore_string_append@plt>
   27dcc:	b	27de0 <myhtml_token_node_clone@@Base+0xf0>
   27dd0:	mov	r7, #0
   27dd4:	b	27e10 <myhtml_token_node_clone@@Base+0x120>
   27dd8:	mov	r0, r8
   27ddc:	bl	11cbc <mycore_string_clean_all@plt>
   27de0:	ldr	r7, [r9, #40]	; 0x28
   27de4:	cmp	r7, #0
   27de8:	beq	27e0c <myhtml_token_node_clone@@Base+0x11c>
   27dec:	mov	r0, r5
   27df0:	mov	r1, r7
   27df4:	mov	r2, r6
   27df8:	mov	r3, r4
   27dfc:	bl	11620 <myhtml_token_attr_copy@plt>
   27e00:	ldr	r7, [r7]
   27e04:	cmp	r7, #0
   27e08:	bne	27dec <myhtml_token_node_clone@@Base+0xfc>
   27e0c:	mov	r7, r6
   27e10:	mov	r0, r7
   27e14:	sub	sp, fp, #28
   27e18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00027e1c <myhtml_token_node_attr_copy@@Base>:
   27e1c:	push	{r4, r5, r6, r7, fp, lr}
   27e20:	add	fp, sp, #16
   27e24:	ldr	r7, [r1, #40]	; 0x28
   27e28:	cmp	r7, #0
   27e2c:	popeq	{r4, r5, r6, r7, fp, pc}
   27e30:	mov	r4, r3
   27e34:	mov	r5, r2
   27e38:	mov	r6, r0
   27e3c:	mov	r0, r6
   27e40:	mov	r1, r7
   27e44:	mov	r2, r5
   27e48:	mov	r3, r4
   27e4c:	bl	11620 <myhtml_token_attr_copy@plt>
   27e50:	ldr	r7, [r7]
   27e54:	cmp	r7, #0
   27e58:	bne	27e3c <myhtml_token_node_attr_copy@@Base+0x20>
   27e5c:	pop	{r4, r5, r6, r7, fp, pc}

00027e60 <myhtml_token_node_text_append@@Base>:
   27e60:	push	{r4, r5, r6, sl, fp, lr}
   27e64:	add	fp, sp, #16
   27e68:	mov	r5, r2
   27e6c:	ldr	r2, [r0]
   27e70:	add	r6, r1, #4
   27e74:	mov	r4, r3
   27e78:	add	r3, r3, #2
   27e7c:	ldr	r0, [r2, #4]
   27e80:	ldr	r2, [r2, #52]	; 0x34
   27e84:	mov	r1, r2
   27e88:	mov	r2, r6
   27e8c:	bl	11524 <mycore_string_init@plt>
   27e90:	mov	r0, r6
   27e94:	mov	r1, r5
   27e98:	mov	r2, r4
   27e9c:	pop	{r4, r5, r6, sl, fp, lr}
   27ea0:	b	11710 <mycore_string_append@plt>

00027ea4 <myhtml_token_node_attr_append@@Base>:
   27ea4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27ea8:	add	fp, sp, #28
   27eac:	sub	sp, sp, #4
   27eb0:	mov	r4, r1
   27eb4:	mov	sl, r0
   27eb8:	ldr	r0, [r0, #8]
   27ebc:	ldr	r1, [fp, #16]
   27ec0:	mov	r9, r2
   27ec4:	mov	r2, #0
   27ec8:	mov	r6, r3
   27ecc:	mov	r7, #0
   27ed0:	bl	1192c <mcobject_async_malloc@plt>
   27ed4:	ldr	r8, [fp, #12]
   27ed8:	mov	r5, r0
   27edc:	cmp	r6, #0
   27ee0:	str	r7, [r0]
   27ee4:	beq	27f50 <myhtml_token_node_attr_append@@Base+0xac>
   27ee8:	ldr	r1, [sl]
   27eec:	add	r7, r5, #8
   27ef0:	add	r3, r6, #1
   27ef4:	mov	r2, r7
   27ef8:	ldr	r0, [r1, #4]
   27efc:	ldr	r1, [r1, #52]	; 0x34
   27f00:	bl	11524 <mycore_string_init@plt>
   27f04:	mov	r0, r7
   27f08:	mov	r1, r9
   27f0c:	mov	r2, r6
   27f10:	bl	11584 <mycore_string_append_lowercase@plt>
   27f14:	cmp	r8, #0
   27f18:	beq	27f60 <myhtml_token_node_attr_append@@Base+0xbc>
   27f1c:	ldr	r1, [sl]
   27f20:	ldr	r6, [fp, #8]
   27f24:	add	r7, r5, #28
   27f28:	add	r3, r8, #1
   27f2c:	mov	r2, r7
   27f30:	ldr	r0, [r1, #4]
   27f34:	ldr	r1, [r1, #52]	; 0x34
   27f38:	bl	11524 <mycore_string_init@plt>
   27f3c:	mov	r0, r7
   27f40:	mov	r1, r6
   27f44:	mov	r2, r8
   27f48:	bl	11710 <mycore_string_append@plt>
   27f4c:	b	27f68 <myhtml_token_node_attr_append@@Base+0xc4>
   27f50:	add	r0, r5, #8
   27f54:	bl	11cbc <mycore_string_clean_all@plt>
   27f58:	cmp	r8, #0
   27f5c:	bne	27f1c <myhtml_token_node_attr_append@@Base+0x78>
   27f60:	add	r0, r5, #28
   27f64:	bl	11cbc <mycore_string_clean_all@plt>
   27f68:	ldr	r0, [r4, #40]	; 0x28
   27f6c:	cmp	r0, #0
   27f70:	beq	27f84 <myhtml_token_node_attr_append@@Base+0xe0>
   27f74:	ldr	r0, [r4, #44]!	; 0x2c
   27f78:	str	r5, [r0]
   27f7c:	str	r0, [r5, #4]
   27f80:	b	27f94 <myhtml_token_node_attr_append@@Base+0xf0>
   27f84:	mov	r0, #0
   27f88:	str	r0, [r5, #4]
   27f8c:	str	r5, [r4, #40]	; 0x28
   27f90:	add	r4, r4, #44	; 0x2c
   27f94:	mov	r0, #1
   27f98:	str	r5, [r4]
   27f9c:	str	r0, [r5, #64]	; 0x40
   27fa0:	mov	r0, r5
   27fa4:	sub	sp, fp, #28
   27fa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00027fac <myhtml_token_node_attr_append_with_convert_encoding@@Base>:
   27fac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27fb0:	add	fp, sp, #28
   27fb4:	sub	sp, sp, #4
   27fb8:	mov	r9, r1
   27fbc:	mov	sl, r0
   27fc0:	ldr	r0, [r0, #8]
   27fc4:	ldr	r1, [fp, #16]
   27fc8:	str	r2, [sp]
   27fcc:	mov	r2, #0
   27fd0:	mov	r6, r3
   27fd4:	mov	r8, #0
   27fd8:	bl	1192c <mcobject_async_malloc@plt>
   27fdc:	ldr	r4, [fp, #20]
   27fe0:	ldr	r7, [fp, #12]
   27fe4:	mov	r5, r0
   27fe8:	cmp	r6, #0
   27fec:	str	r8, [r0]
   27ff0:	beq	28074 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xc8>
   27ff4:	ldr	r1, [sl]
   27ff8:	add	r8, r5, #8
   27ffc:	add	r3, r6, #1
   28000:	mov	r2, r8
   28004:	ldr	r0, [r1, #4]
   28008:	ldr	r1, [r1, #52]	; 0x34
   2800c:	bl	11524 <mycore_string_init@plt>
   28010:	mov	r0, r8
   28014:	cmp	r4, #0
   28018:	beq	28090 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xe4>
   2801c:	ldr	r1, [sp]
   28020:	mov	r2, r6
   28024:	mov	r3, r4
   28028:	bl	10f90 <myencoding_string_append_lowercase_ascii@plt>
   2802c:	cmp	r7, #0
   28030:	beq	28084 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xd8>
   28034:	ldr	r1, [sl]
   28038:	ldr	r8, [fp, #8]
   2803c:	add	r6, r5, #28
   28040:	add	r3, r7, #1
   28044:	mov	r2, r6
   28048:	ldr	r0, [r1, #4]
   2804c:	ldr	r1, [r1, #52]	; 0x34
   28050:	bl	11524 <mycore_string_init@plt>
   28054:	mov	r0, r6
   28058:	mov	r1, r8
   2805c:	mov	r2, r7
   28060:	cmp	r4, #0
   28064:	beq	280a8 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xfc>
   28068:	mov	r3, r4
   2806c:	bl	113e0 <myencoding_string_append@plt>
   28070:	b	280ac <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x100>
   28074:	add	r0, r5, #8
   28078:	bl	11cbc <mycore_string_clean_all@plt>
   2807c:	cmp	r7, #0
   28080:	bne	28034 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x88>
   28084:	add	r0, r5, #28
   28088:	bl	11cbc <mycore_string_clean_all@plt>
   2808c:	b	280ac <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x100>
   28090:	ldr	r1, [sp]
   28094:	mov	r2, r6
   28098:	bl	11584 <mycore_string_append_lowercase@plt>
   2809c:	cmp	r7, #0
   280a0:	bne	28034 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x88>
   280a4:	b	28084 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xd8>
   280a8:	bl	11710 <mycore_string_append@plt>
   280ac:	ldr	r0, [r9, #40]	; 0x28
   280b0:	cmp	r0, #0
   280b4:	beq	280c8 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x11c>
   280b8:	ldr	r0, [r9, #44]!	; 0x2c
   280bc:	str	r5, [r0]
   280c0:	str	r0, [r5, #4]
   280c4:	b	280d8 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x12c>
   280c8:	mov	r0, #0
   280cc:	str	r0, [r5, #4]
   280d0:	str	r5, [r9, #40]	; 0x28
   280d4:	add	r9, r9, #44	; 0x2c
   280d8:	mov	r0, #1
   280dc:	str	r5, [r9]
   280e0:	str	r0, [r5, #64]	; 0x40
   280e4:	mov	r0, r5
   280e8:	sub	sp, fp, #28
   280ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000280f0 <myhtml_token_node_attr_copy_with_check@@Base>:
   280f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   280f4:	add	fp, sp, #28
   280f8:	sub	sp, sp, #4
   280fc:	ldr	r7, [r1, #40]	; 0x28
   28100:	cmp	r7, #0
   28104:	beq	2817c <myhtml_token_node_attr_copy_with_check@@Base+0x8c>
   28108:	mov	r8, r3
   2810c:	mov	sl, r2
   28110:	mov	r9, r0
   28114:	ldr	r6, [r7, #16]
   28118:	cmp	r6, #0
   2811c:	beq	28170 <myhtml_token_node_attr_copy_with_check@@Base+0x80>
   28120:	ldr	r5, [sl, #40]	; 0x28
   28124:	cmp	r5, #0
   28128:	beq	2815c <myhtml_token_node_attr_copy_with_check@@Base+0x6c>
   2812c:	ldr	r4, [r7, #8]
   28130:	ldr	r0, [r5, #16]
   28134:	cmp	r0, r6
   28138:	bne	28150 <myhtml_token_node_attr_copy_with_check@@Base+0x60>
   2813c:	ldr	r0, [r5, #8]
   28140:	mov	r1, r4
   28144:	bl	10dc8 <mycore_strcmp@plt>
   28148:	cmp	r0, #0
   2814c:	beq	28170 <myhtml_token_node_attr_copy_with_check@@Base+0x80>
   28150:	ldr	r5, [r5]
   28154:	cmp	r5, #0
   28158:	bne	28130 <myhtml_token_node_attr_copy_with_check@@Base+0x40>
   2815c:	mov	r0, r9
   28160:	mov	r1, r7
   28164:	mov	r2, sl
   28168:	mov	r3, r8
   2816c:	bl	11620 <myhtml_token_attr_copy@plt>
   28170:	ldr	r7, [r7]
   28174:	cmp	r7, #0
   28178:	bne	28114 <myhtml_token_node_attr_copy_with_check@@Base+0x24>
   2817c:	sub	sp, fp, #28
   28180:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00028184 <myhtml_token_attr_by_name@@Base>:
   28184:	push	{r4, r5, r6, r7, fp, lr}
   28188:	add	fp, sp, #16
   2818c:	ldr	r7, [r0, #40]	; 0x28
   28190:	mov	r4, #0
   28194:	cmp	r7, #0
   28198:	beq	281d4 <myhtml_token_attr_by_name@@Base+0x50>
   2819c:	mov	r5, r2
   281a0:	mov	r6, r1
   281a4:	ldr	r0, [r7, #16]
   281a8:	cmp	r0, r5
   281ac:	bne	281c8 <myhtml_token_attr_by_name@@Base+0x44>
   281b0:	ldr	r0, [r7, #8]
   281b4:	mov	r1, r6
   281b8:	bl	10dc8 <mycore_strcmp@plt>
   281bc:	cmp	r0, #0
   281c0:	moveq	r0, r7
   281c4:	popeq	{r4, r5, r6, r7, fp, pc}
   281c8:	ldr	r7, [r7]
   281cc:	cmp	r7, #0
   281d0:	bne	281a4 <myhtml_token_attr_by_name@@Base+0x20>
   281d4:	mov	r0, r4
   281d8:	pop	{r4, r5, r6, r7, fp, pc}

000281dc <myhtml_token_attr_copy@@Base>:
   281dc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   281e0:	add	fp, sp, #24
   281e4:	mov	r7, r0
   281e8:	ldr	r0, [r0, #8]
   281ec:	mov	r8, r2
   281f0:	mov	r4, r1
   281f4:	mov	r1, r3
   281f8:	mov	r2, #0
   281fc:	mov	r5, #0
   28200:	bl	1192c <mcobject_async_malloc@plt>
   28204:	str	r5, [r0]
   28208:	mov	r6, r0
   2820c:	ldr	r2, [r4, #16]
   28210:	cmp	r2, #0
   28214:	beq	28248 <myhtml_token_attr_copy@@Base+0x6c>
   28218:	ldr	r1, [r7]
   2821c:	add	r5, r6, #8
   28220:	add	r3, r2, #1
   28224:	mov	r2, r5
   28228:	ldr	r0, [r1, #4]
   2822c:	ldr	r1, [r1, #52]	; 0x34
   28230:	bl	11524 <mycore_string_init@plt>
   28234:	ldr	r1, [r4, #8]
   28238:	ldr	r2, [r4, #16]
   2823c:	mov	r0, r5
   28240:	bl	11584 <mycore_string_append_lowercase@plt>
   28244:	b	28250 <myhtml_token_attr_copy@@Base+0x74>
   28248:	add	r0, r6, #8
   2824c:	bl	11cbc <mycore_string_clean_all@plt>
   28250:	ldr	r2, [r4, #36]	; 0x24
   28254:	cmp	r2, #0
   28258:	beq	2828c <myhtml_token_attr_copy@@Base+0xb0>
   2825c:	ldr	r1, [r7]
   28260:	add	r5, r6, #28
   28264:	add	r3, r2, #1
   28268:	mov	r2, r5
   2826c:	ldr	r0, [r1, #4]
   28270:	ldr	r1, [r1, #52]	; 0x34
   28274:	bl	11524 <mycore_string_init@plt>
   28278:	ldr	r1, [r4, #28]
   2827c:	ldr	r2, [r4, #36]	; 0x24
   28280:	mov	r0, r5
   28284:	bl	11710 <mycore_string_append@plt>
   28288:	b	28294 <myhtml_token_attr_copy@@Base+0xb8>
   2828c:	add	r0, r6, #28
   28290:	bl	11cbc <mycore_string_clean_all@plt>
   28294:	ldr	r0, [r8, #40]	; 0x28
   28298:	cmp	r0, #0
   2829c:	beq	282b0 <myhtml_token_attr_copy@@Base+0xd4>
   282a0:	ldr	r0, [r8, #44]!	; 0x2c
   282a4:	str	r6, [r0]
   282a8:	str	r0, [r6, #4]
   282ac:	b	282c0 <myhtml_token_attr_copy@@Base+0xe4>
   282b0:	mov	r0, #0
   282b4:	str	r0, [r6, #4]
   282b8:	str	r6, [r8, #40]	; 0x28
   282bc:	add	r8, r8, #44	; 0x2c
   282c0:	str	r6, [r8]
   282c4:	ldr	r0, [r4, #64]	; 0x40
   282c8:	str	r0, [r6, #64]	; 0x40
   282cc:	mov	r0, #1
   282d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000282d4 <myhtml_token_attr_match@@Base>:
   282d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   282d8:	add	fp, sp, #24
   282dc:	ldr	r4, [r1, #40]	; 0x28
   282e0:	cmp	r4, #0
   282e4:	beq	2834c <myhtml_token_attr_match@@Base+0x78>
   282e8:	ldr	r7, [fp, #12]
   282ec:	ldr	r8, [fp, #8]
   282f0:	mov	r5, r3
   282f4:	mov	r6, r2
   282f8:	ldr	r0, [r4, #16]
   282fc:	cmp	r0, r5
   28300:	ldreq	r0, [r4, #36]	; 0x24
   28304:	cmpeq	r0, r7
   28308:	beq	2831c <myhtml_token_attr_match@@Base+0x48>
   2830c:	ldr	r4, [r4]
   28310:	cmp	r4, #0
   28314:	bne	282f8 <myhtml_token_attr_match@@Base+0x24>
   28318:	b	2834c <myhtml_token_attr_match@@Base+0x78>
   2831c:	ldr	r0, [r4, #8]
   28320:	mov	r1, r6
   28324:	bl	10dc8 <mycore_strcmp@plt>
   28328:	cmp	r0, #0
   2832c:	bne	2830c <myhtml_token_attr_match@@Base+0x38>
   28330:	ldr	r0, [r4, #28]
   28334:	mov	r1, r8
   28338:	bl	10dc8 <mycore_strcmp@plt>
   2833c:	cmp	r0, #0
   28340:	movne	r4, #0
   28344:	mov	r0, r4
   28348:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2834c:	mov	r4, #0
   28350:	mov	r0, r4
   28354:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00028358 <myhtml_token_attr_match_case@@Base>:
   28358:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2835c:	add	fp, sp, #24
   28360:	ldr	r4, [r1, #40]	; 0x28
   28364:	cmp	r4, #0
   28368:	beq	283d0 <myhtml_token_attr_match_case@@Base+0x78>
   2836c:	ldr	r7, [fp, #12]
   28370:	ldr	r8, [fp, #8]
   28374:	mov	r5, r3
   28378:	mov	r6, r2
   2837c:	ldr	r0, [r4, #16]
   28380:	cmp	r0, r5
   28384:	ldreq	r0, [r4, #36]	; 0x24
   28388:	cmpeq	r0, r7
   2838c:	beq	283a0 <myhtml_token_attr_match_case@@Base+0x48>
   28390:	ldr	r4, [r4]
   28394:	cmp	r4, #0
   28398:	bne	2837c <myhtml_token_attr_match_case@@Base+0x24>
   2839c:	b	283d0 <myhtml_token_attr_match_case@@Base+0x78>
   283a0:	ldr	r0, [r4, #8]
   283a4:	mov	r1, r6
   283a8:	bl	10dc8 <mycore_strcmp@plt>
   283ac:	cmp	r0, #0
   283b0:	bne	28390 <myhtml_token_attr_match_case@@Base+0x38>
   283b4:	ldr	r0, [r4, #28]
   283b8:	mov	r1, r8
   283bc:	bl	114a0 <mycore_strcasecmp@plt>
   283c0:	cmp	r0, #0
   283c4:	movne	r4, #0
   283c8:	mov	r0, r4
   283cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   283d0:	mov	r4, #0
   283d4:	mov	r0, r4
   283d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000283dc <myhtml_token_adjust_mathml_attributes@@Base>:
   283dc:	push	{r4, r5, fp, lr}
   283e0:	add	fp, sp, #8
   283e4:	ldr	r5, [r0, #40]	; 0x28
   283e8:	cmp	r5, #0
   283ec:	popeq	{r4, r5, fp, pc}
   283f0:	ldr	r4, [pc, #88]	; 28450 <myhtml_token_adjust_mathml_attributes@@Base+0x74>
   283f4:	add	r4, pc, r4
   283f8:	ldr	r0, [r5, #16]
   283fc:	cmp	r0, #13
   28400:	bne	28418 <myhtml_token_adjust_mathml_attributes@@Base+0x3c>
   28404:	ldr	r0, [r5, #8]
   28408:	mov	r1, r4
   2840c:	bl	10dc8 <mycore_strcmp@plt>
   28410:	cmp	r0, #0
   28414:	beq	28428 <myhtml_token_adjust_mathml_attributes@@Base+0x4c>
   28418:	ldr	r5, [r5]
   2841c:	cmp	r5, #0
   28420:	bne	283f8 <myhtml_token_adjust_mathml_attributes@@Base+0x1c>
   28424:	pop	{r4, r5, fp, pc}
   28428:	ldr	r0, [r5, #8]
   2842c:	ldr	r1, [pc, #32]	; 28454 <myhtml_token_adjust_mathml_attributes@@Base+0x78>
   28430:	add	r1, pc, r1
   28434:	vldr	d16, [r1]
   28438:	add	r1, r1, #5
   2843c:	vld1.8	{d17}, [r1]
   28440:	vst1.8	{d16}, [r0]
   28444:	add	r0, r0, #5
   28448:	vst1.8	{d17}, [r0]
   2844c:	pop	{r4, r5, fp, pc}
   28450:	andeq	r9, sp, sl, ror #5
   28454:	andeq	r9, sp, r8, lsr #20

00028458 <_myhtml_token_create_copy_srt@@Base>:
   28458:	push	{r4, r5, r6, sl, fp, lr}
   2845c:	add	fp, sp, #16
   28460:	mov	r6, r1
   28464:	ldr	r1, [r0]
   28468:	mov	r5, r2
   2846c:	add	r2, r2, #2
   28470:	mov	r4, r3
   28474:	ldr	r0, [r1, #4]
   28478:	ldr	r1, [r1, #52]	; 0x34
   2847c:	bl	1174c <mchar_async_malloc@plt>
   28480:	str	r0, [r4]
   28484:	mov	r1, r6
   28488:	mov	r2, r5
   2848c:	pop	{r4, r5, r6, sl, fp, lr}
   28490:	b	112d8 <mycore_string_raw_copy@plt>

00028494 <myhtml_token_strict_doctype_by_token@@Base>:
   28494:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   28498:	add	fp, sp, #24
   2849c:	ldr	r5, [r1, #40]	; 0x28
   284a0:	mov	r4, r2
   284a4:	mov	r8, r0
   284a8:	cmp	r5, #0
   284ac:	ldrne	r6, [r5, #16]
   284b0:	cmpne	r6, #0
   284b4:	bne	28518 <myhtml_token_strict_doctype_by_token@@Base+0x84>
   284b8:	mov	r5, #0
   284bc:	mov	r2, #3
   284c0:	strb	r5, [r4]
   284c4:	ldr	r1, [r8]
   284c8:	ldr	r0, [r1, #4]
   284cc:	ldr	r1, [r1, #52]	; 0x34
   284d0:	bl	1174c <mchar_async_malloc@plt>
   284d4:	str	r0, [r4, #4]
   284d8:	mov	r2, #1
   284dc:	ldr	r1, [pc, #536]	; 286fc <myhtml_token_strict_doctype_by_token@@Base+0x268>
   284e0:	add	r1, pc, r1
   284e4:	bl	112d8 <mycore_string_raw_copy@plt>
   284e8:	ldr	r0, [r4, #8]
   284ec:	cmp	r0, #0
   284f0:	beq	284f8 <myhtml_token_strict_doctype_by_token@@Base+0x64>
   284f4:	bl	11ab8 <mycore_free@plt>
   284f8:	str	r5, [r4, #8]
   284fc:	ldr	r0, [r4, #12]
   28500:	cmp	r0, #0
   28504:	beq	2850c <myhtml_token_strict_doctype_by_token@@Base+0x78>
   28508:	bl	11ab8 <mycore_free@plt>
   2850c:	mov	r0, #0
   28510:	str	r0, [r4, #12]
   28514:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   28518:	ldr	r1, [r8]
   2851c:	ldr	r7, [r5, #8]
   28520:	add	r2, r6, #2
   28524:	ldr	r0, [r1, #4]
   28528:	ldr	r1, [r1, #52]	; 0x34
   2852c:	bl	1174c <mchar_async_malloc@plt>
   28530:	mov	r1, r7
   28534:	mov	r2, r6
   28538:	str	r0, [r4, #4]
   2853c:	bl	112d8 <mycore_string_raw_copy@plt>
   28540:	ldr	r1, [r4, #4]
   28544:	ldr	r0, [pc, #424]	; 286f4 <myhtml_token_strict_doctype_by_token@@Base+0x260>
   28548:	add	r0, pc, r0
   2854c:	bl	10dc8 <mycore_strcmp@plt>
   28550:	clz	r0, r0
   28554:	lsr	r0, r0, #5
   28558:	strb	r0, [r4]
   2855c:	ldr	r5, [r5]
   28560:	cmp	r5, #0
   28564:	ldrne	r0, [r5, #36]	; 0x24
   28568:	cmpne	r0, #0
   2856c:	bne	28574 <myhtml_token_strict_doctype_by_token@@Base+0xe0>
   28570:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   28574:	ldr	r0, [r5, #28]
   28578:	ldr	r1, [pc, #376]	; 286f8 <myhtml_token_strict_doctype_by_token@@Base+0x264>
   2857c:	add	r1, pc, r1
   28580:	bl	114a0 <mycore_strcasecmp@plt>
   28584:	cmp	r0, #0
   28588:	beq	2860c <myhtml_token_strict_doctype_by_token@@Base+0x178>
   2858c:	ldr	r0, [r5, #28]
   28590:	ldr	r2, [r5, #36]	; 0x24
   28594:	ldr	r1, [pc, #360]	; 28704 <myhtml_token_strict_doctype_by_token@@Base+0x270>
   28598:	add	r1, pc, r1
   2859c:	bl	112b4 <mycore_strncasecmp@plt>
   285a0:	cmp	r0, #0
   285a4:	bne	28620 <myhtml_token_strict_doctype_by_token@@Base+0x18c>
   285a8:	ldr	r6, [r5]
   285ac:	cmp	r6, #0
   285b0:	ldrne	r0, [r6, #36]	; 0x24
   285b4:	cmpne	r0, #0
   285b8:	beq	28620 <myhtml_token_strict_doctype_by_token@@Base+0x18c>
   285bc:	ldr	r1, [r8]
   285c0:	mov	r2, #3
   285c4:	ldr	r0, [r1, #4]
   285c8:	ldr	r1, [r1, #52]	; 0x34
   285cc:	bl	1174c <mchar_async_malloc@plt>
   285d0:	str	r0, [r4, #8]
   285d4:	mov	r2, #1
   285d8:	ldr	r1, [pc, #296]	; 28708 <myhtml_token_strict_doctype_by_token@@Base+0x274>
   285dc:	add	r1, pc, r1
   285e0:	bl	112d8 <mycore_string_raw_copy@plt>
   285e4:	ldr	r1, [r8]
   285e8:	ldr	r5, [r6, #28]
   285ec:	ldr	r6, [r6, #36]	; 0x24
   285f0:	ldr	r0, [r1, #4]
   285f4:	ldr	r1, [r1, #52]	; 0x34
   285f8:	add	r2, r6, #2
   285fc:	bl	1174c <mchar_async_malloc@plt>
   28600:	str	r0, [r4, #12]
   28604:	mov	r1, r5
   28608:	b	286e8 <myhtml_token_strict_doctype_by_token@@Base+0x254>
   2860c:	ldr	r5, [r5]
   28610:	cmp	r5, #0
   28614:	ldrne	r6, [r5, #36]	; 0x24
   28618:	cmpne	r6, #0
   2861c:	bne	28650 <myhtml_token_strict_doctype_by_token@@Base+0x1bc>
   28620:	ldr	r0, [r4, #8]
   28624:	cmp	r0, #0
   28628:	beq	28630 <myhtml_token_strict_doctype_by_token@@Base+0x19c>
   2862c:	bl	11ab8 <mycore_free@plt>
   28630:	mov	r5, #0
   28634:	str	r5, [r4, #8]
   28638:	ldr	r0, [r4, #12]
   2863c:	cmp	r0, #0
   28640:	beq	28648 <myhtml_token_strict_doctype_by_token@@Base+0x1b4>
   28644:	bl	11ab8 <mycore_free@plt>
   28648:	str	r5, [r4, #12]
   2864c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   28650:	ldr	r1, [r8]
   28654:	ldr	r7, [r5, #28]
   28658:	add	r2, r6, #2
   2865c:	ldr	r0, [r1, #4]
   28660:	ldr	r1, [r1, #52]	; 0x34
   28664:	bl	1174c <mchar_async_malloc@plt>
   28668:	mov	r1, r7
   2866c:	mov	r2, r6
   28670:	str	r0, [r4, #8]
   28674:	bl	112d8 <mycore_string_raw_copy@plt>
   28678:	ldr	r0, [r5]
   2867c:	cmp	r0, #0
   28680:	ldrne	r6, [r0, #36]	; 0x24
   28684:	cmpne	r6, #0
   28688:	bne	286c8 <myhtml_token_strict_doctype_by_token@@Base+0x234>
   2868c:	ldr	r0, [r4, #12]
   28690:	cmp	r0, #0
   28694:	beq	2869c <myhtml_token_strict_doctype_by_token@@Base+0x208>
   28698:	bl	11ab8 <mycore_free@plt>
   2869c:	ldr	r1, [r8]
   286a0:	mov	r2, #3
   286a4:	ldr	r0, [r1, #4]
   286a8:	ldr	r1, [r1, #52]	; 0x34
   286ac:	bl	1174c <mchar_async_malloc@plt>
   286b0:	str	r0, [r4, #12]
   286b4:	mov	r2, #1
   286b8:	ldr	r1, [pc, #64]	; 28700 <myhtml_token_strict_doctype_by_token@@Base+0x26c>
   286bc:	add	r1, pc, r1
   286c0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   286c4:	b	112d8 <mycore_string_raw_copy@plt>
   286c8:	ldr	r1, [r8]
   286cc:	ldr	r7, [r0, #28]
   286d0:	add	r2, r6, #2
   286d4:	ldr	r0, [r1, #4]
   286d8:	ldr	r1, [r1, #52]	; 0x34
   286dc:	bl	1174c <mchar_async_malloc@plt>
   286e0:	mov	r1, r7
   286e4:	str	r0, [r4, #12]
   286e8:	mov	r2, r6
   286ec:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   286f0:	b	112d8 <mycore_string_raw_copy@plt>
   286f4:	andeq	r9, sp, r8, lsr sl
   286f8:	andeq	r8, sp, sl, lsr #19
   286fc:	andeq	r9, sp, r8, lsl #19
   28700:	andeq	r9, sp, ip, lsr #15
   28704:	andeq	r8, sp, r0, lsr #19
   28708:	andeq	r9, sp, ip, lsl #17

0002870c <myhtml_token_doctype_check_html_4_0@@Base>:
   2870c:	push	{r4, sl, fp, lr}
   28710:	add	fp, sp, #8
   28714:	mov	r4, r0
   28718:	ldr	r0, [r0, #8]
   2871c:	ldr	r1, [pc, #56]	; 2875c <myhtml_token_doctype_check_html_4_0@@Base+0x50>
   28720:	add	r1, pc, r1
   28724:	bl	10dc8 <mycore_strcmp@plt>
   28728:	cmp	r0, #0
   2872c:	moveq	r0, #0
   28730:	popeq	{r4, sl, fp, pc}
   28734:	ldr	r0, [r4, #12]
   28738:	cmp	r0, #0
   2873c:	moveq	r0, #1
   28740:	popeq	{r4, sl, fp, pc}
   28744:	ldr	r1, [pc, #20]	; 28760 <myhtml_token_doctype_check_html_4_0@@Base+0x54>
   28748:	add	r1, pc, r1
   2874c:	bl	10dc8 <mycore_strcmp@plt>
   28750:	cmp	r0, #0
   28754:	movwne	r0, #1
   28758:	pop	{r4, sl, fp, pc}
   2875c:	andeq	r8, sp, ip, asr #31
   28760:			; <UNDEFINED> instruction: 0x000d8fbd

00028764 <myhtml_token_doctype_check_html_4_01@@Base>:
   28764:	push	{r4, sl, fp, lr}
   28768:	add	fp, sp, #8
   2876c:	mov	r4, r0
   28770:	ldr	r0, [r0, #8]
   28774:	ldr	r1, [pc, #56]	; 287b4 <myhtml_token_doctype_check_html_4_01@@Base+0x50>
   28778:	add	r1, pc, r1
   2877c:	bl	10dc8 <mycore_strcmp@plt>
   28780:	cmp	r0, #0
   28784:	moveq	r0, #0
   28788:	popeq	{r4, sl, fp, pc}
   2878c:	ldr	r0, [r4, #12]
   28790:	cmp	r0, #0
   28794:	moveq	r0, #1
   28798:	popeq	{r4, sl, fp, pc}
   2879c:	ldr	r1, [pc, #20]	; 287b8 <myhtml_token_doctype_check_html_4_01@@Base+0x54>
   287a0:	add	r1, pc, r1
   287a4:	bl	10dc8 <mycore_strcmp@plt>
   287a8:	cmp	r0, #0
   287ac:	movwne	r0, #1
   287b0:	pop	{r4, sl, fp, pc}
   287b4:			; <UNDEFINED> instruction: 0x000d8fb8
   287b8:	andeq	r8, sp, sl, lsr #31

000287bc <myhtml_token_doctype_check_xhtml_1_0@@Base>:
   287bc:	push	{r4, sl, fp, lr}
   287c0:	add	fp, sp, #8
   287c4:	mov	r4, r0
   287c8:	ldr	r0, [r0, #12]
   287cc:	cmp	r0, #0
   287d0:	moveq	r0, #1
   287d4:	popeq	{r4, sl, fp, pc}
   287d8:	ldr	r0, [r4, #8]
   287dc:	ldr	r1, [pc, #44]	; 28810 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x54>
   287e0:	add	r1, pc, r1
   287e4:	bl	10dc8 <mycore_strcmp@plt>
   287e8:	cmp	r0, #0
   287ec:	moveq	r0, #0
   287f0:	popeq	{r4, sl, fp, pc}
   287f4:	ldr	r0, [r4, #12]
   287f8:	ldr	r1, [pc, #20]	; 28814 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x58>
   287fc:	add	r1, pc, r1
   28800:	bl	10dc8 <mycore_strcmp@plt>
   28804:	cmp	r0, #0
   28808:	movwne	r0, #1
   2880c:	pop	{r4, sl, fp, pc}
   28810:	muleq	sp, r0, pc	; <UNPREDICTABLE>
   28814:	muleq	sp, r5, pc	; <UNPREDICTABLE>

00028818 <myhtml_token_doctype_check_xhtml_1_1@@Base>:
   28818:	push	{r4, sl, fp, lr}
   2881c:	add	fp, sp, #8
   28820:	mov	r4, r0
   28824:	ldr	r0, [r0, #12]
   28828:	cmp	r0, #0
   2882c:	moveq	r0, #1
   28830:	popeq	{r4, sl, fp, pc}
   28834:	ldr	r0, [r4, #8]
   28838:	ldr	r1, [pc, #44]	; 2886c <myhtml_token_doctype_check_xhtml_1_1@@Base+0x54>
   2883c:	add	r1, pc, r1
   28840:	bl	10dc8 <mycore_strcmp@plt>
   28844:	cmp	r0, #0
   28848:	moveq	r0, #0
   2884c:	popeq	{r4, sl, fp, pc}
   28850:	ldr	r0, [r4, #12]
   28854:	ldr	r1, [pc, #20]	; 28870 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x58>
   28858:	add	r1, pc, r1
   2885c:	bl	10dc8 <mycore_strcmp@plt>
   28860:	cmp	r0, #0
   28864:	movwne	r0, #1
   28868:	pop	{r4, sl, fp, pc}
   2886c:	andeq	r8, sp, r7, lsl #31
   28870:	andeq	r8, sp, r5, lsl #31

00028874 <myhtml_token_release_and_check_doctype_attributes@@Base>:
   28874:	push	{r4, r5, fp, lr}
   28878:	add	fp, sp, #8
   2887c:	mov	r4, #0
   28880:	cmp	r2, #0
   28884:	beq	289e0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x16c>
   28888:	mov	r5, r2
   2888c:	bl	1141c <myhtml_token_strict_doctype_by_token@plt>
   28890:	ldr	r0, [r5, #4]
   28894:	cmp	r0, #0
   28898:	beq	289e0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x16c>
   2889c:	ldrb	r0, [r5]
   288a0:	cmp	r0, #0
   288a4:	beq	288b8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x44>
   288a8:	ldr	r0, [r5, #8]
   288ac:	cmp	r0, #0
   288b0:	bne	288c4 <myhtml_token_release_and_check_doctype_attributes@@Base+0x50>
   288b4:	b	289e0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x16c>
   288b8:	ldr	r0, [r5, #8]
   288bc:	cmp	r0, #0
   288c0:	beq	289bc <myhtml_token_release_and_check_doctype_attributes@@Base+0x148>
   288c4:	ldrb	r1, [r5]
   288c8:	cmp	r1, #0
   288cc:	beq	289dc <myhtml_token_release_and_check_doctype_attributes@@Base+0x168>
   288d0:	ldr	r1, [pc, #276]	; 289ec <myhtml_token_release_and_check_doctype_attributes@@Base+0x178>
   288d4:	add	r1, pc, r1
   288d8:	bl	10dc8 <mycore_strcmp@plt>
   288dc:	cmp	r0, #0
   288e0:	beq	289dc <myhtml_token_release_and_check_doctype_attributes@@Base+0x168>
   288e4:	ldr	r0, [r5, #12]
   288e8:	cmp	r0, #0
   288ec:	beq	28904 <myhtml_token_release_and_check_doctype_attributes@@Base+0x90>
   288f0:	ldr	r1, [pc, #248]	; 289f0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x17c>
   288f4:	add	r1, pc, r1
   288f8:	bl	10dc8 <mycore_strcmp@plt>
   288fc:	cmp	r0, #0
   28900:	beq	289dc <myhtml_token_release_and_check_doctype_attributes@@Base+0x168>
   28904:	ldr	r0, [r5, #8]
   28908:	ldr	r1, [pc, #228]	; 289f4 <myhtml_token_release_and_check_doctype_attributes@@Base+0x180>
   2890c:	add	r1, pc, r1
   28910:	bl	10dc8 <mycore_strcmp@plt>
   28914:	cmp	r0, #0
   28918:	beq	289dc <myhtml_token_release_and_check_doctype_attributes@@Base+0x168>
   2891c:	ldr	r0, [r5, #12]
   28920:	cmp	r0, #0
   28924:	beq	289e0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x16c>
   28928:	ldr	r1, [pc, #200]	; 289f8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x184>
   2892c:	add	r1, pc, r1
   28930:	bl	10dc8 <mycore_strcmp@plt>
   28934:	cmp	r0, #0
   28938:	beq	289dc <myhtml_token_release_and_check_doctype_attributes@@Base+0x168>
   2893c:	ldr	r0, [r5, #12]
   28940:	cmp	r0, #0
   28944:	beq	289e0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x16c>
   28948:	ldr	r0, [r5, #8]
   2894c:	ldr	r1, [pc, #168]	; 289fc <myhtml_token_release_and_check_doctype_attributes@@Base+0x188>
   28950:	add	r1, pc, r1
   28954:	bl	10dc8 <mycore_strcmp@plt>
   28958:	cmp	r0, #0
   2895c:	beq	289dc <myhtml_token_release_and_check_doctype_attributes@@Base+0x168>
   28960:	ldr	r0, [r5, #12]
   28964:	ldr	r1, [pc, #148]	; 28a00 <myhtml_token_release_and_check_doctype_attributes@@Base+0x18c>
   28968:	add	r1, pc, r1
   2896c:	bl	10dc8 <mycore_strcmp@plt>
   28970:	cmp	r0, #0
   28974:	beq	289dc <myhtml_token_release_and_check_doctype_attributes@@Base+0x168>
   28978:	ldr	r0, [r5, #12]
   2897c:	cmp	r0, #0
   28980:	beq	289e0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x16c>
   28984:	ldr	r0, [r5, #8]
   28988:	ldr	r1, [pc, #116]	; 28a04 <myhtml_token_release_and_check_doctype_attributes@@Base+0x190>
   2898c:	add	r1, pc, r1
   28990:	bl	10dc8 <mycore_strcmp@plt>
   28994:	cmp	r0, #0
   28998:	beq	289dc <myhtml_token_release_and_check_doctype_attributes@@Base+0x168>
   2899c:	ldr	r0, [r5, #12]
   289a0:	ldr	r1, [pc, #96]	; 28a08 <myhtml_token_release_and_check_doctype_attributes@@Base+0x194>
   289a4:	add	r1, pc, r1
   289a8:	bl	10dc8 <mycore_strcmp@plt>
   289ac:	cmp	r0, #0
   289b0:	moveq	r4, #1
   289b4:	mov	r0, r4
   289b8:	pop	{r4, r5, fp, pc}
   289bc:	ldr	r0, [r5, #12]
   289c0:	cmp	r0, #0
   289c4:	beq	289dc <myhtml_token_release_and_check_doctype_attributes@@Base+0x168>
   289c8:	ldr	r1, [pc, #24]	; 289e8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x174>
   289cc:	add	r1, pc, r1
   289d0:	bl	10dc8 <mycore_strcmp@plt>
   289d4:	cmp	r0, #0
   289d8:	bne	288a8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x34>
   289dc:	mov	r4, #1
   289e0:	mov	r0, r4
   289e4:	pop	{r4, r5, fp, pc}
   289e8:	andeq	r8, sp, lr, lsr lr
   289ec:	andeq	r8, sp, r8, lsl lr
   289f0:	andeq	r8, sp, r1, lsl lr
   289f4:	andeq	r8, sp, r4, lsr #28
   289f8:	andeq	r8, sp, lr, lsl lr
   289fc:	andeq	r8, sp, r0, lsr #28
   28a00:	andeq	r8, sp, r9, lsr #28
   28a04:	andeq	r8, sp, r7, lsr lr
   28a08:	andeq	r8, sp, r9, lsr lr

00028a0c <myhtml_token_adjust_svg_attributes@@Base>:
   28a0c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   28a10:	add	fp, sp, #24
   28a14:	ldr	r8, [pc, #132]	; 28aa0 <myhtml_token_adjust_svg_attributes@@Base+0x94>
   28a18:	mov	r9, r0
   28a1c:	mov	r6, #0
   28a20:	add	r8, pc, r8
   28a24:	b	28a34 <myhtml_token_adjust_svg_attributes@@Base+0x28>
   28a28:	add	r6, r6, #1
   28a2c:	cmp	r6, #58	; 0x3a
   28a30:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   28a34:	ldr	r7, [r9, #40]	; 0x28
   28a38:	cmp	r7, #0
   28a3c:	beq	28a28 <myhtml_token_adjust_svg_attributes@@Base+0x1c>
   28a40:	mov	r0, r8
   28a44:	ldr	r5, [r0, r6, lsl #4]!
   28a48:	ldr	r4, [r0, #4]
   28a4c:	ldr	r0, [r7, #16]
   28a50:	cmp	r0, r4
   28a54:	bne	28a6c <myhtml_token_adjust_svg_attributes@@Base+0x60>
   28a58:	ldr	r0, [r7, #8]
   28a5c:	mov	r1, r5
   28a60:	bl	10dc8 <mycore_strcmp@plt>
   28a64:	cmp	r0, #0
   28a68:	beq	28a7c <myhtml_token_adjust_svg_attributes@@Base+0x70>
   28a6c:	ldr	r7, [r7]
   28a70:	cmp	r7, #0
   28a74:	bne	28a4c <myhtml_token_adjust_svg_attributes@@Base+0x40>
   28a78:	b	28a28 <myhtml_token_adjust_svg_attributes@@Base+0x1c>
   28a7c:	add	r5, r7, #8
   28a80:	mov	r0, r5
   28a84:	bl	11a1c <mycore_string_clean@plt>
   28a88:	add	r0, r8, r6, lsl #4
   28a8c:	ldr	r1, [r0, #8]
   28a90:	ldr	r2, [r0, #12]
   28a94:	mov	r0, r5
   28a98:	bl	11710 <mycore_string_append@plt>
   28a9c:	b	28a28 <myhtml_token_adjust_svg_attributes@@Base+0x1c>
   28aa0:	andeq	r2, pc, r4, rrx

00028aa4 <myhtml_token_adjust_foreign_attributes@@Base>:
   28aa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28aa8:	add	fp, sp, #28
   28aac:	sub	sp, sp, #4
   28ab0:	ldr	r8, [pc, #144]	; 28b48 <myhtml_token_adjust_foreign_attributes@@Base+0xa4>
   28ab4:	mov	r9, r0
   28ab8:	mov	r6, #0
   28abc:	add	r8, pc, r8
   28ac0:	b	28ad4 <myhtml_token_adjust_foreign_attributes@@Base+0x30>
   28ac4:	add	r6, r6, #1
   28ac8:	cmp	r6, #11
   28acc:	subeq	sp, fp, #28
   28ad0:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28ad4:	ldr	r7, [r9, #40]	; 0x28
   28ad8:	cmp	r7, #0
   28adc:	beq	28ac4 <myhtml_token_adjust_foreign_attributes@@Base+0x20>
   28ae0:	add	sl, r6, r6, lsl #2
   28ae4:	mov	r0, r8
   28ae8:	ldr	r5, [r0, sl, lsl #2]!
   28aec:	ldr	r4, [r0, #4]
   28af0:	ldr	r0, [r7, #16]
   28af4:	cmp	r0, r4
   28af8:	bne	28b10 <myhtml_token_adjust_foreign_attributes@@Base+0x6c>
   28afc:	ldr	r0, [r7, #8]
   28b00:	mov	r1, r5
   28b04:	bl	10dc8 <mycore_strcmp@plt>
   28b08:	cmp	r0, #0
   28b0c:	beq	28b20 <myhtml_token_adjust_foreign_attributes@@Base+0x7c>
   28b10:	ldr	r7, [r7]
   28b14:	cmp	r7, #0
   28b18:	bne	28af0 <myhtml_token_adjust_foreign_attributes@@Base+0x4c>
   28b1c:	b	28ac4 <myhtml_token_adjust_foreign_attributes@@Base+0x20>
   28b20:	add	r5, r7, #8
   28b24:	mov	r0, r5
   28b28:	bl	11a1c <mycore_string_clean@plt>
   28b2c:	add	r0, r8, sl, lsl #2
   28b30:	add	r4, r0, #8
   28b34:	mov	r0, r5
   28b38:	ldm	r4, {r1, r2, r4}
   28b3c:	bl	11710 <mycore_string_append@plt>
   28b40:	str	r4, [r7, #64]	; 0x40
   28b44:	b	28ac4 <myhtml_token_adjust_foreign_attributes@@Base+0x20>
   28b48:	andeq	r2, pc, r8, ror #6

00028b4c <myhtml_token_attr_compare@@Base>:
   28b4c:	mov	r2, r0
   28b50:	mov	r0, #0
   28b54:	cmp	r2, #0
   28b58:	cmpne	r1, #0
   28b5c:	bne	28b64 <myhtml_token_attr_compare@@Base+0x18>
   28b60:	bx	lr
   28b64:	push	{r4, r5, fp, lr}
   28b68:	add	fp, sp, #8
   28b6c:	ldr	r4, [r2, #40]	; 0x28
   28b70:	ldr	r5, [r1, #40]	; 0x28
   28b74:	b	28b80 <myhtml_token_attr_compare@@Base+0x34>
   28b78:	ldr	r4, [r4]
   28b7c:	ldr	r5, [r5]
   28b80:	cmp	r5, #0
   28b84:	cmpne	r4, #0
   28b88:	beq	28bd0 <myhtml_token_attr_compare@@Base+0x84>
   28b8c:	ldr	r0, [r5, #16]
   28b90:	ldr	r1, [r4, #16]
   28b94:	cmp	r1, r0
   28b98:	ldreq	r0, [r5, #36]	; 0x24
   28b9c:	ldreq	r1, [r4, #36]	; 0x24
   28ba0:	cmpeq	r1, r0
   28ba4:	bne	28bd0 <myhtml_token_attr_compare@@Base+0x84>
   28ba8:	ldr	r1, [r5, #8]
   28bac:	ldr	r0, [r4, #8]
   28bb0:	bl	10dc8 <mycore_strcmp@plt>
   28bb4:	cmp	r0, #0
   28bb8:	bne	28bd0 <myhtml_token_attr_compare@@Base+0x84>
   28bbc:	ldr	r1, [r5, #28]
   28bc0:	ldr	r0, [r4, #28]
   28bc4:	bl	114a0 <mycore_strcasecmp@plt>
   28bc8:	cmp	r0, #0
   28bcc:	beq	28b78 <myhtml_token_attr_compare@@Base+0x2c>
   28bd0:	orr	r0, r5, r4
   28bd4:	clz	r0, r0
   28bd8:	lsr	r0, r0, #5
   28bdc:	pop	{r4, r5, fp, lr}
   28be0:	bx	lr

00028be4 <myhtml_token_delete@@Base>:
   28be4:	push	{r4, r5, fp, lr}
   28be8:	add	fp, sp, #8
   28bec:	ldr	r2, [r1, #4]
   28bf0:	mov	r4, r1
   28bf4:	mov	r5, r0
   28bf8:	cmp	r2, #0
   28bfc:	ldrne	r0, [r4, #16]
   28c00:	cmpne	r0, #0
   28c04:	beq	28c10 <myhtml_token_delete@@Base+0x2c>
   28c08:	ldr	r1, [r4, #20]
   28c0c:	bl	115e4 <mchar_async_free@plt>
   28c10:	ldr	r0, [r5, #4]
   28c14:	mov	r1, r4
   28c18:	pop	{r4, r5, fp, lr}
   28c1c:	b	11128 <mcobject_async_free@plt>

00028c20 <myhtml_token_attr_delete_all@@Base>:
   28c20:	push	{r4, sl, fp, lr}
   28c24:	add	fp, sp, #8
   28c28:	ldr	r4, [r1, #40]	; 0x28
   28c2c:	b	28c34 <myhtml_token_attr_delete_all@@Base+0x14>
   28c30:	ldr	r4, [r4]
   28c34:	cmp	r4, #0
   28c38:	popeq	{r4, sl, fp, pc}
   28c3c:	ldr	r2, [r4, #8]
   28c40:	cmp	r2, #0
   28c44:	ldrne	r0, [r4, #20]
   28c48:	cmpne	r0, #0
   28c4c:	beq	28c58 <myhtml_token_attr_delete_all@@Base+0x38>
   28c50:	ldr	r1, [r4, #24]
   28c54:	bl	115e4 <mchar_async_free@plt>
   28c58:	ldr	r2, [r4, #28]
   28c5c:	cmp	r2, #0
   28c60:	ldrne	r0, [r4, #40]	; 0x28
   28c64:	cmpne	r0, #0
   28c68:	beq	28c30 <myhtml_token_attr_delete_all@@Base+0x10>
   28c6c:	ldr	r1, [r4, #44]	; 0x2c
   28c70:	bl	115e4 <mchar_async_free@plt>
   28c74:	b	28c30 <myhtml_token_attr_delete_all@@Base+0x10>

00028c78 <myhtml_token_attr_remove@@Base>:
   28c78:	cmp	r1, #0
   28c7c:	beq	28cb0 <myhtml_token_attr_remove@@Base+0x38>
   28c80:	ldm	r1, {r3, ip}
   28c84:	cmp	ip, #0
   28c88:	streq	r3, [r0, #40]	; 0x28
   28c8c:	strne	r3, [ip]
   28c90:	ldrne	r3, [r1]
   28c94:	add	r2, r3, #4
   28c98:	cmp	r3, #0
   28c9c:	addeq	r2, r0, #44	; 0x2c
   28ca0:	mov	r0, #0
   28ca4:	str	ip, [r2]
   28ca8:	str	r0, [r1]
   28cac:	str	r0, [r1, #4]
   28cb0:	mov	r0, r1
   28cb4:	bx	lr

00028cb8 <myhtml_token_attr_remove_by_name@@Base>:
   28cb8:	push	{r4, r5, r6, r7, fp, lr}
   28cbc:	add	fp, sp, #16
   28cc0:	ldr	r4, [r0, #40]	; 0x28
   28cc4:	cmp	r4, #0
   28cc8:	beq	28d04 <myhtml_token_attr_remove_by_name@@Base+0x4c>
   28ccc:	mov	r6, r2
   28cd0:	mov	r7, r1
   28cd4:	mov	r5, r0
   28cd8:	ldr	r0, [r4, #16]
   28cdc:	cmp	r0, r6
   28ce0:	bne	28cf8 <myhtml_token_attr_remove_by_name@@Base+0x40>
   28ce4:	ldr	r0, [r4, #8]
   28ce8:	mov	r1, r7
   28cec:	bl	10dc8 <mycore_strcmp@plt>
   28cf0:	cmp	r0, #0
   28cf4:	beq	28d10 <myhtml_token_attr_remove_by_name@@Base+0x58>
   28cf8:	ldr	r4, [r4]
   28cfc:	cmp	r4, #0
   28d00:	bne	28cd8 <myhtml_token_attr_remove_by_name@@Base+0x20>
   28d04:	mov	r4, #0
   28d08:	mov	r0, r4
   28d0c:	pop	{r4, r5, r6, r7, fp, pc}
   28d10:	ldr	r0, [r4, #4]
   28d14:	ldr	r1, [r4]
   28d18:	cmp	r0, #0
   28d1c:	streq	r1, [r5, #40]	; 0x28
   28d20:	strne	r1, [r0]
   28d24:	ldrne	r1, [r4]
   28d28:	add	r2, r1, #4
   28d2c:	cmp	r1, #0
   28d30:	addeq	r2, r5, #44	; 0x2c
   28d34:	str	r0, [r2]
   28d38:	mov	r0, #0
   28d3c:	str	r0, [r4]
   28d40:	str	r0, [r4, #4]
   28d44:	mov	r0, r4
   28d48:	pop	{r4, r5, r6, r7, fp, pc}

00028d4c <myhtml_token_merged_two_token_string@@Base>:
   28d4c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   28d50:	add	fp, sp, #24
   28d54:	sub	sp, sp, #24
   28d58:	mov	r6, r0
   28d5c:	ldr	r7, [r0, #8]
   28d60:	ldr	r0, [r1, #48]	; 0x30
   28d64:	mov	r8, r3
   28d68:	mov	r5, r2
   28d6c:	mov	r4, r1
   28d70:	tst	r0, #4
   28d74:	bne	28db4 <myhtml_token_merged_two_token_string@@Base+0x68>
   28d78:	ldr	r0, [r7]
   28d7c:	ldr	r0, [r0]
   28d80:	ldr	r0, [r0]
   28d84:	ldr	r0, [r0, #24]
   28d88:	bl	11164 <mythread_nanosleep_sleep@plt>
   28d8c:	ldr	r0, [r4, #48]	; 0x30
   28d90:	tst	r0, #4
   28d94:	beq	28d78 <myhtml_token_merged_two_token_string@@Base+0x2c>
   28d98:	ldr	r7, [r6, #8]
   28d9c:	b	28db4 <myhtml_token_merged_two_token_string@@Base+0x68>
   28da0:	ldr	r0, [r7]
   28da4:	ldr	r0, [r0]
   28da8:	ldr	r0, [r0]
   28dac:	ldr	r0, [r0, #24]
   28db0:	bl	11164 <mythread_nanosleep_sleep@plt>
   28db4:	ldr	r0, [r5, #48]	; 0x30
   28db8:	tst	r0, #4
   28dbc:	beq	28da0 <myhtml_token_merged_two_token_string@@Base+0x54>
   28dc0:	mov	r0, #0
   28dc4:	add	r9, r5, #4
   28dc8:	add	r7, r4, #4
   28dcc:	str	r0, [r4, #24]
   28dd0:	str	r0, [r4, #28]
   28dd4:	ldr	r1, [r6, #52]	; 0x34
   28dd8:	ldr	r0, [r4, #20]
   28ddc:	cmp	r0, r1
   28de0:	bne	28dfc <myhtml_token_merged_two_token_string@@Base+0xb0>
   28de4:	cmp	r8, #0
   28de8:	bne	28e98 <myhtml_token_merged_two_token_string@@Base+0x14c>
   28dec:	mov	r0, r7
   28df0:	mov	r1, r9
   28df4:	bl	111e8 <mycore_string_copy@plt>
   28df8:	b	28e98 <myhtml_token_merged_two_token_string@@Base+0x14c>
   28dfc:	ldr	r0, [r5, #20]
   28e00:	cmp	r0, r1
   28e04:	bne	28e1c <myhtml_token_merged_two_token_string@@Base+0xd0>
   28e08:	cmp	r8, #0
   28e0c:	beq	28e60 <myhtml_token_merged_two_token_string@@Base+0x114>
   28e10:	mov	r0, r9
   28e14:	mov	r1, r7
   28e18:	b	28e68 <myhtml_token_merged_two_token_string@@Base+0x11c>
   28e1c:	ldr	r0, [r5, #12]
   28e20:	ldr	r2, [r4, #12]
   28e24:	mov	r5, sp
   28e28:	add	r0, r2, r0
   28e2c:	mov	r2, r5
   28e30:	add	r3, r0, #2
   28e34:	ldr	r0, [r6, #4]
   28e38:	bl	11524 <mycore_string_init@plt>
   28e3c:	mov	r6, sp
   28e40:	cmp	r8, #0
   28e44:	mov	r0, r6
   28e48:	beq	28e74 <myhtml_token_merged_two_token_string@@Base+0x128>
   28e4c:	mov	r1, r9
   28e50:	bl	111e8 <mycore_string_copy@plt>
   28e54:	mov	r0, r6
   28e58:	mov	r1, r7
   28e5c:	b	28e84 <myhtml_token_merged_two_token_string@@Base+0x138>
   28e60:	mov	r0, r7
   28e64:	mov	r1, r9
   28e68:	bl	111e8 <mycore_string_copy@plt>
   28e6c:	mov	r4, r5
   28e70:	b	28e98 <myhtml_token_merged_two_token_string@@Base+0x14c>
   28e74:	mov	r1, r7
   28e78:	bl	111e8 <mycore_string_copy@plt>
   28e7c:	mov	r0, r6
   28e80:	mov	r1, r9
   28e84:	bl	111e8 <mycore_string_copy@plt>
   28e88:	vld1.32	{d16-d17}, [r5]!
   28e8c:	vst1.32	{d16-d17}, [r7]!
   28e90:	ldr	r0, [r5]
   28e94:	str	r0, [r7]
   28e98:	mov	r0, r4
   28e9c:	sub	sp, fp, #24
   28ea0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00028ea4 <myhtml_token_set_replacement_character_for_null_token@@Base>:
   28ea4:	push	{r4, r5, r6, sl, fp, lr}
   28ea8:	add	fp, sp, #16
   28eac:	sub	sp, sp, #24
   28eb0:	mov	r5, r0
   28eb4:	ldr	r6, [r0, #8]
   28eb8:	ldr	r0, [r1, #48]	; 0x30
   28ebc:	mov	r4, r1
   28ec0:	tst	r0, #4
   28ec4:	bne	28ee8 <myhtml_token_set_replacement_character_for_null_token@@Base+0x44>
   28ec8:	ldr	r0, [r6]
   28ecc:	ldr	r0, [r0]
   28ed0:	ldr	r0, [r0]
   28ed4:	ldr	r0, [r0, #24]
   28ed8:	bl	11164 <mythread_nanosleep_sleep@plt>
   28edc:	ldr	r0, [r4, #48]	; 0x30
   28ee0:	tst	r0, #4
   28ee4:	beq	28ec8 <myhtml_token_set_replacement_character_for_null_token@@Base+0x24>
   28ee8:	ldr	r2, [r4, #12]
   28eec:	ldr	r0, [r5, #4]
   28ef0:	ldr	r1, [r5, #52]	; 0x34
   28ef4:	mov	r5, sp
   28ef8:	add	r3, r2, #2
   28efc:	mov	r2, r5
   28f00:	bl	11524 <mycore_string_init@plt>
   28f04:	mov	r6, r4
   28f08:	ldr	r2, [r4, #12]
   28f0c:	mov	r0, r5
   28f10:	ldr	r1, [r6, #4]!
   28f14:	bl	11338 <mycore_string_append_with_replacement_null_characters@plt>
   28f18:	vld1.64	{d16-d17}, [r5]!
   28f1c:	vst1.32	{d16-d17}, [r6]
   28f20:	ldr	r0, [r5]
   28f24:	str	r0, [r6, #16]
   28f28:	sub	sp, fp, #16
   28f2c:	pop	{r4, r5, r6, sl, fp, pc}

00028f30 <myhtml_tokenizer_set_first_settings@@Base>:
   28f30:	push	{r4, sl, fp, lr}
   28f34:	add	fp, sp, #8
   28f38:	mov	r4, r0
   28f3c:	ldr	r0, [r0, #24]
   28f40:	bl	11200 <mythread_queue_get_current_node@plt>
   28f44:	str	r0, [r4, #68]	; 0x44
   28f48:	bl	11a64 <mythread_queue_node_clean@plt>
   28f4c:	ldr	r0, [r4, #68]	; 0x44
   28f50:	str	r4, [r0]
   28f54:	ldr	r0, [r4, #8]
   28f58:	ldr	r1, [r0, #12]
   28f5c:	bl	11800 <myhtml_token_node_create@plt>
   28f60:	cmp	r0, #0
   28f64:	str	r0, [r4, #64]	; 0x40
   28f68:	moveq	r0, #2
   28f6c:	ldrne	r0, [r4, #76]	; 0x4c
   28f70:	strne	r0, [r4, #80]	; 0x50
   28f74:	movne	r0, #0
   28f78:	pop	{r4, sl, fp, pc}

00028f7c <myhtml_tokenizer_begin@@Base>:
   28f7c:	ldr	r3, [r0, #204]	; 0xcc
   28f80:	bic	r3, r3, #1
   28f84:	cmp	r3, #4
   28f88:	bne	28f90 <myhtml_tokenizer_begin@@Base+0x14>
   28f8c:	b	2916c <myhtml_tokenizer_chunk_with_stream_buffer@@Base>
   28f90:	b	28fac <myhtml_tokenizer_chunk_process@@Base>

00028f94 <myhtml_tokenizer_chunk@@Base>:
   28f94:	ldr	r3, [r0, #204]	; 0xcc
   28f98:	bic	r3, r3, #1
   28f9c:	cmp	r3, #4
   28fa0:	bne	28fa8 <myhtml_tokenizer_chunk@@Base+0x14>
   28fa4:	b	2916c <myhtml_tokenizer_chunk_with_stream_buffer@@Base>
   28fa8:	b	28fac <myhtml_tokenizer_chunk_process@@Base>

00028fac <myhtml_tokenizer_chunk_process@@Base>:
   28fac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   28fb0:	add	fp, sp, #24
   28fb4:	sub	sp, sp, #16
   28fb8:	ldr	r8, [r0]
   28fbc:	mov	r6, r1
   28fc0:	mov	r5, r0
   28fc4:	ldr	r1, [r0, #72]	; 0x48
   28fc8:	ldr	r0, [r0, #76]	; 0x4c
   28fcc:	mov	r4, r2
   28fd0:	mov	r2, r6
   28fd4:	mov	r3, r4
   28fd8:	ldr	r9, [r8, #24]
   28fdc:	bl	11158 <mycore_incoming_buffer_add@plt>
   28fe0:	str	r0, [r5, #76]	; 0x4c
   28fe4:	ldrb	r0, [r8, #32]
   28fe8:	tst	r0, #1
   28fec:	ldrne	r0, [r5, #180]	; 0xb4
   28ff0:	orrne	r0, r0, #16
   28ff4:	strne	r0, [r5, #180]	; 0xb4
   28ff8:	ldr	r0, [r5, #180]	; 0xb4
   28ffc:	tst	r0, #16
   29000:	bne	29088 <myhtml_tokenizer_chunk_process@@Base+0xdc>
   29004:	ldr	r0, [r5, #20]
   29008:	cmp	r0, #0
   2900c:	bne	29058 <myhtml_tokenizer_chunk_process@@Base+0xac>
   29010:	mov	r0, #0
   29014:	str	r0, [sp, #12]
   29018:	ldr	r0, [r8]
   2901c:	ldr	r1, [r8, #20]
   29020:	ldr	r3, [r5, #24]
   29024:	ldr	r2, [r0, #16]
   29028:	add	r0, sp, #12
   2902c:	str	r1, [sp]
   29030:	mov	r1, #2
   29034:	str	r0, [sp, #4]
   29038:	add	r0, r8, #8
   2903c:	bl	111f4 <mythread_queue_list_entry_push@plt>
   29040:	str	r0, [r5, #20]
   29044:	ldr	r0, [sp, #12]
   29048:	cmp	r0, #0
   2904c:	beq	29058 <myhtml_tokenizer_chunk_process@@Base+0xac>
   29050:	sub	sp, fp, #24
   29054:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   29058:	ldr	r1, [r5]
   2905c:	ldr	r0, [r1]
   29060:	cmp	r0, #0
   29064:	beq	29074 <myhtml_tokenizer_chunk_process@@Base+0xc8>
   29068:	mov	r1, #0
   2906c:	bl	11440 <mythread_resume@plt>
   29070:	ldr	r1, [r5]
   29074:	ldr	r0, [r1, #4]
   29078:	cmp	r0, #0
   2907c:	beq	29088 <myhtml_tokenizer_chunk_process@@Base+0xdc>
   29080:	mov	r1, #0
   29084:	bl	11440 <mythread_resume@plt>
   29088:	ldr	r0, [r5, #68]	; 0x44
   2908c:	cmp	r0, #0
   29090:	beq	290a0 <myhtml_tokenizer_chunk_process@@Base+0xf4>
   29094:	cmp	r4, #0
   29098:	bne	290e8 <myhtml_tokenizer_chunk_process@@Base+0x13c>
   2909c:	b	29114 <myhtml_tokenizer_chunk_process@@Base+0x168>
   290a0:	ldr	r0, [r5, #24]
   290a4:	bl	11200 <mythread_queue_get_current_node@plt>
   290a8:	str	r0, [r5, #68]	; 0x44
   290ac:	bl	11a64 <mythread_queue_node_clean@plt>
   290b0:	ldr	r0, [r5, #68]	; 0x44
   290b4:	str	r5, [r0]
   290b8:	ldr	r0, [r5, #8]
   290bc:	ldr	r1, [r0, #12]
   290c0:	bl	11800 <myhtml_token_node_create@plt>
   290c4:	cmp	r0, #0
   290c8:	str	r0, [r5, #64]	; 0x40
   290cc:	moveq	r0, #2
   290d0:	subeq	sp, fp, #24
   290d4:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   290d8:	ldr	r0, [r5, #76]	; 0x4c
   290dc:	str	r0, [r5, #80]	; 0x50
   290e0:	cmp	r4, #0
   290e4:	beq	29114 <myhtml_tokenizer_chunk_process@@Base+0x168>
   290e8:	mov	r3, #0
   290ec:	ldr	r0, [r5, #160]	; 0xa0
   290f0:	ldr	r1, [r5, #64]	; 0x40
   290f4:	mov	r2, r6
   290f8:	ldr	r7, [r9, r0, lsl #2]
   290fc:	mov	r0, r5
   29100:	str	r4, [sp]
   29104:	blx	r7
   29108:	mov	r3, r0
   2910c:	cmp	r0, r4
   29110:	bcc	290ec <myhtml_tokenizer_chunk_process@@Base+0x140>
   29114:	ldr	r0, [r5, #192]	; 0xc0
   29118:	add	r0, r0, r4
   2911c:	str	r0, [r5, #192]	; 0xc0
   29120:	mov	r0, #0
   29124:	sub	sp, fp, #24
   29128:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002912c <myhtml_tokenizer_post@@Base>:
   2912c:	push	{r4, sl, fp, lr}
   29130:	add	fp, sp, #8
   29134:	ldr	r1, [r0]
   29138:	mov	r4, r0
   2913c:	ldr	r0, [r1]
   29140:	cmp	r0, #0
   29144:	beq	29154 <myhtml_tokenizer_post@@Base+0x28>
   29148:	mov	r1, #0
   2914c:	bl	11440 <mythread_resume@plt>
   29150:	ldr	r1, [r4]
   29154:	ldr	r0, [r1, #4]
   29158:	cmp	r0, #0
   2915c:	popeq	{r4, sl, fp, pc}
   29160:	mov	r1, #0
   29164:	pop	{r4, sl, fp, lr}
   29168:	b	11440 <mythread_resume@plt>

0002916c <myhtml_tokenizer_chunk_with_stream_buffer@@Base>:
   2916c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29170:	add	fp, sp, #28
   29174:	sub	sp, sp, #12
   29178:	mov	r4, r0
   2917c:	ldr	r0, [r0, #200]	; 0xc8
   29180:	mov	r5, r2
   29184:	str	r1, [sp, #8]
   29188:	bl	11698 <myencoding_get_function_by_id@plt>
   2918c:	ldr	sl, [r4, #148]	; 0x94
   29190:	mov	r7, r0
   29194:	cmp	sl, #0
   29198:	beq	29280 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x114>
   2919c:	mov	r0, sl
   291a0:	bl	11914 <myhtml_stream_buffer_current_entry@plt>
   291a4:	cmp	r5, #0
   291a8:	beq	292c0 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x154>
   291ac:	ldr	r9, [r0, #4]
   291b0:	str	r4, [sp, #4]
   291b4:	mov	r6, r0
   291b8:	add	r4, sl, #12
   291bc:	mov	r8, #0
   291c0:	ldr	r0, [sp, #8]
   291c4:	mov	r1, r4
   291c8:	ldrb	r0, [r0, r8]
   291cc:	blx	r7
   291d0:	cmp	r0, #0
   291d4:	bne	29244 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xd8>
   291d8:	ldr	r3, [r6, #4]
   291dc:	ldr	r1, [r6, #8]
   291e0:	add	r2, r3, #4
   291e4:	cmp	r2, r1
   291e8:	bcc	29228 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xbc>
   291ec:	ldr	r0, [sp, #4]
   291f0:	mov	r1, #0
   291f4:	sub	r2, r3, r9
   291f8:	str	r1, [r0, #200]	; 0xc8
   291fc:	ldr	r1, [r6]
   29200:	add	r1, r1, r9
   29204:	bl	113bc <myhtml_tokenizer_chunk_process@plt>
   29208:	mov	r0, sl
   2920c:	mov	r1, #16384	; 0x4000
   29210:	bl	11770 <myhtml_stream_buffer_add_entry@plt>
   29214:	cmp	r0, #0
   29218:	beq	292d0 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x164>
   2921c:	ldr	r3, [r0, #4]
   29220:	mov	r6, r0
   29224:	mov	r9, r3
   29228:	ldr	r1, [r6]
   2922c:	ldr	r0, [sl, #24]
   29230:	add	r1, r1, r3
   29234:	bl	11b3c <myencoding_codepoint_to_ascii_utf_8@plt>
   29238:	ldr	r1, [r6, #4]
   2923c:	add	r0, r1, r0
   29240:	str	r0, [r6, #4]
   29244:	add	r8, r8, #1
   29248:	cmp	r8, r5
   2924c:	bcc	291c0 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x54>
   29250:	ldr	r1, [r6, #4]
   29254:	ldr	r0, [sp, #4]
   29258:	mov	r8, #0
   2925c:	cmp	r1, r9
   29260:	beq	292d4 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x168>
   29264:	mov	r8, #0
   29268:	sub	r2, r1, r9
   2926c:	str	r8, [r0, #200]	; 0xc8
   29270:	ldr	r1, [r6]
   29274:	add	r1, r1, r9
   29278:	bl	113bc <myhtml_tokenizer_chunk_process@plt>
   2927c:	b	292d4 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x168>
   29280:	bl	11b24 <myhtml_stream_buffer_create@plt>
   29284:	cmp	r0, #0
   29288:	str	r0, [r4, #148]	; 0x94
   2928c:	beq	292c8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x15c>
   29290:	mov	r1, #1024	; 0x400
   29294:	bl	11a58 <myhtml_stream_buffer_init@plt>
   29298:	mov	r8, r0
   2929c:	cmp	r0, #0
   292a0:	bne	292d4 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x168>
   292a4:	ldr	r0, [r4, #148]	; 0x94
   292a8:	mov	r1, #16384	; 0x4000
   292ac:	bl	11770 <myhtml_stream_buffer_add_entry@plt>
   292b0:	cmp	r0, #0
   292b4:	beq	292d0 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x164>
   292b8:	ldr	sl, [r4, #148]	; 0x94
   292bc:	b	2919c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x30>
   292c0:	mov	r8, #0
   292c4:	b	292d4 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x168>
   292c8:	mov	r8, #37632	; 0x9300
   292cc:	b	292d4 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x168>
   292d0:	movw	r8, #37636	; 0x9304
   292d4:	mov	r0, r8
   292d8:	sub	sp, fp, #28
   292dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000292e0 <myhtml_tokenizer_end@@Base>:
   292e0:	push	{r4, r5, fp, lr}
   292e4:	add	fp, sp, #8
   292e8:	sub	sp, sp, #8
   292ec:	mov	r4, r0
   292f0:	ldr	r0, [r0, #76]	; 0x4c
   292f4:	cmp	r0, #0
   292f8:	beq	29334 <myhtml_tokenizer_end@@Base+0x54>
   292fc:	ldr	r3, [r0, #8]
   29300:	ldr	r2, [r4, #192]	; 0xc0
   29304:	ldr	ip, [r4]
   29308:	ldr	r1, [r4, #64]	; 0x40
   2930c:	ldr	r5, [r4, #160]	; 0xa0
   29310:	sub	r2, r2, r3
   29314:	str	r2, [r4, #192]	; 0xc0
   29318:	ldr	r2, [ip, #24]
   2931c:	add	r2, r2, r5, lsl #2
   29320:	ldr	r5, [r2, #280]	; 0x118
   29324:	ldr	r2, [r0]
   29328:	mov	r0, r4
   2932c:	str	r3, [sp]
   29330:	blx	r5
   29334:	ldr	r2, [r4, #64]	; 0x40
   29338:	mov	r0, #251	; 0xfb
   2933c:	mov	r1, #0
   29340:	str	r0, [r2]
   29344:	mov	r0, r4
   29348:	bl	11104 <myhtml_queue_add@plt>
   2934c:	cmp	r0, #0
   29350:	movne	r5, #2
   29354:	strne	r5, [r4, #196]	; 0xc4
   29358:	ldreq	r5, [r4, #196]	; 0xc4
   2935c:	ldr	r0, [r4, #180]	; 0xb4
   29360:	tst	r0, #16
   29364:	bne	293f4 <myhtml_tokenizer_end@@Base+0x114>
   29368:	ldr	r0, [r4]
   2936c:	ldr	r1, [r4, #20]
   29370:	ldr	r0, [r0]
   29374:	bl	117ac <mythread_queue_list_entry_wait_for_done@plt>
   29378:	ldr	r0, [r4]
   2937c:	ldr	r3, [r4, #20]
   29380:	ldr	r1, [r0], #8
   29384:	ldr	r2, [r1, #16]
   29388:	mov	r1, #0
   2938c:	str	r1, [sp]
   29390:	mov	r1, #2
   29394:	bl	10de0 <mythread_queue_list_entry_delete@plt>
   29398:	str	r0, [r4, #20]
   2939c:	ldr	r0, [r4]
   293a0:	ldr	r0, [r0]
   293a4:	ldr	r0, [r0, #16]
   293a8:	bl	1150c <mythread_queue_list_get_count@plt>
   293ac:	cmp	r0, #0
   293b0:	bne	293dc <myhtml_tokenizer_end@@Base+0xfc>
   293b4:	ldr	r1, [r4]
   293b8:	ldr	r0, [r1]
   293bc:	cmp	r0, #0
   293c0:	beq	293cc <myhtml_tokenizer_end@@Base+0xec>
   293c4:	bl	1189c <mythread_stop@plt>
   293c8:	ldr	r1, [r4]
   293cc:	ldr	r0, [r1, #4]
   293d0:	cmp	r0, #0
   293d4:	beq	293dc <myhtml_tokenizer_end@@Base+0xfc>
   293d8:	bl	1189c <mythread_stop@plt>
   293dc:	cmp	r5, #0
   293e0:	bne	293f4 <myhtml_tokenizer_end@@Base+0x114>
   293e4:	ldr	r0, [r4]
   293e8:	ldr	r0, [r0]
   293ec:	bl	11494 <mythread_check_status@plt>
   293f0:	mov	r5, r0
   293f4:	ldr	r0, [r4, #180]	; 0xb4
   293f8:	orr	r0, r0, #32
   293fc:	str	r0, [r4, #180]	; 0xb4
   29400:	mov	r0, r5
   29404:	sub	sp, fp, #8
   29408:	pop	{r4, r5, fp, pc}

0002940c <myhtml_tokenizer_pause@@Base>:
   2940c:	push	{r4, sl, fp, lr}
   29410:	add	fp, sp, #8
   29414:	ldr	r1, [r0]
   29418:	mov	r4, r0
   2941c:	ldr	r0, [r1]
   29420:	cmp	r0, #0
   29424:	beq	29430 <myhtml_tokenizer_pause@@Base+0x24>
   29428:	bl	1189c <mythread_stop@plt>
   2942c:	ldr	r1, [r4]
   29430:	ldr	r0, [r1, #4]
   29434:	cmp	r0, #0
   29438:	popeq	{r4, sl, fp, pc}
   2943c:	pop	{r4, sl, fp, lr}
   29440:	b	1189c <mythread_stop@plt>

00029444 <myhtml_tokenizer_fragment_init@@Base>:
   29444:	push	{r4, r5, r6, sl, fp, lr}
   29448:	add	fp, sp, #16
   2944c:	mov	r6, r2
   29450:	mov	r5, r1
   29454:	mov	r4, r0
   29458:	bl	110c8 <myhtml_tree_node_create@plt>
   2945c:	cmp	r6, #1
   29460:	str	r0, [r4, #88]	; 0x58
   29464:	stmib	r0, {r5, r6}
   29468:	bne	2949c <myhtml_tokenizer_fragment_init@@Base+0x58>
   2946c:	cmp	r5, #93	; 0x5d
   29470:	bne	29488 <myhtml_tokenizer_fragment_init@@Base+0x44>
   29474:	ldr	r0, [r4, #180]	; 0xb4
   29478:	tst	r0, #1
   2947c:	moveq	r0, #0
   29480:	movne	r0, #4
   29484:	b	29498 <myhtml_tokenizer_fragment_init@@Base+0x54>
   29488:	ldr	r0, [r4, #28]
   2948c:	mov	r1, r5
   29490:	bl	11818 <myhtml_tag_get_by_id@plt>
   29494:	ldr	r0, [r0, #12]
   29498:	str	r0, [r4, #160]	; 0xa0
   2949c:	ldr	r0, [r4, #8]
   294a0:	ldr	r1, [r0, #12]
   294a4:	bl	11800 <myhtml_token_node_create@plt>
   294a8:	ldr	r1, [r4, #88]	; 0x58
   294ac:	cmp	r0, #0
   294b0:	moveq	r6, #0
   294b4:	str	r0, [r1, #32]
   294b8:	moveq	r0, r6
   294bc:	popeq	{r4, r5, r6, sl, fp, pc}
   294c0:	bl	114c4 <myhtml_token_set_done@plt>
   294c4:	ldr	r0, [r4, #88]	; 0x58
   294c8:	mov	r1, #0
   294cc:	mov	r2, #1
   294d0:	ldr	r0, [r0, #32]
   294d4:	str	r0, [r4, #156]	; 0x9c
   294d8:	mov	r0, r4
   294dc:	bl	10dd4 <myhtml_tree_node_insert_root@plt>
   294e0:	mov	r6, r0
   294e4:	cmp	r5, #128	; 0x80
   294e8:	bne	294f8 <myhtml_tokenizer_fragment_init@@Base+0xb4>
   294ec:	mov	r0, r4
   294f0:	mov	r1, #17
   294f4:	bl	11098 <myhtml_tree_template_insertion_append@plt>
   294f8:	mov	r0, r4
   294fc:	bl	115f0 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   29500:	mov	r0, r6
   29504:	pop	{r4, r5, r6, sl, fp, pc}

00029508 <myhtml_tokenizer_wait@@Base>:
   29508:	ldr	r1, [r0]
   2950c:	ldr	r2, [r1]
   29510:	cmp	r2, #0
   29514:	bxeq	lr
   29518:	ldr	r1, [r0, #20]
   2951c:	mov	r0, r2
   29520:	b	117ac <mythread_queue_list_entry_wait_for_done@plt>

00029524 <myhtml_tokenizer_calc_current_namespace@@Base>:
   29524:	push	{r4, r5, fp, lr}
   29528:	add	fp, sp, #8
   2952c:	mov	r4, r0
   29530:	ldr	r0, [r0, #184]	; 0xb8
   29534:	tst	r0, #1
   29538:	bne	295ac <myhtml_tokenizer_calc_current_namespace@@Base+0x88>
   2953c:	ldr	r0, [r4, #180]	; 0xb4
   29540:	tst	r0, #16
   29544:	bne	295a4 <myhtml_tokenizer_calc_current_namespace@@Base+0x80>
   29548:	mov	r5, r1
   2954c:	ldr	r1, [r1]
   29550:	cmp	r1, #54	; 0x36
   29554:	beq	29564 <myhtml_tokenizer_calc_current_namespace@@Base+0x40>
   29558:	cmp	r1, #218	; 0xda
   2955c:	cmpne	r1, #124	; 0x7c
   29560:	bne	2956c <myhtml_tokenizer_calc_current_namespace@@Base+0x48>
   29564:	str	r5, [r4, #156]	; 0x9c
   29568:	pop	{r4, r5, fp, pc}
   2956c:	ldr	r0, [r4, #156]	; 0x9c
   29570:	cmp	r0, #0
   29574:	beq	295ac <myhtml_tokenizer_calc_current_namespace@@Base+0x88>
   29578:	ldr	r0, [r5, #48]	; 0x30
   2957c:	tst	r0, #1
   29580:	bne	295ac <myhtml_tokenizer_calc_current_namespace@@Base+0x88>
   29584:	ldr	r0, [r4, #28]
   29588:	bl	11818 <myhtml_tag_get_by_id@plt>
   2958c:	ldr	r0, [r0, #12]
   29590:	cmp	r0, #0
   29594:	popeq	{r4, r5, fp, pc}
   29598:	mov	r0, r4
   2959c:	mov	r1, r5
   295a0:	bl	10e88 <myhtml_tree_wait_for_last_done_token@plt>
   295a4:	ldr	r0, [r4, #164]	; 0xa4
   295a8:	str	r0, [r4, #160]	; 0xa0
   295ac:	pop	{r4, r5, fp, pc}

000295b0 <myhtml_check_tag_parser@@Base>:
   295b0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   295b4:	add	fp, sp, #24
   295b8:	sub	sp, sp, #8
   295bc:	mov	r4, r1
   295c0:	mov	r8, r2
   295c4:	ldr	r1, [r1, #24]
   295c8:	ldr	r5, [r0, #28]
   295cc:	mov	r6, r3
   295d0:	mov	r7, r0
   295d4:	ldr	r2, [r4, #28]
   295d8:	cmp	r2, r3
   295dc:	bls	295f4 <myhtml_check_tag_parser@@Base+0x44>
   295e0:	mov	r0, r7
   295e4:	bl	10fa8 <myhtml_tree_incomming_buffer_make_data@plt>
   295e8:	ldr	r2, [r4, #28]
   295ec:	mov	r1, r0
   295f0:	b	29600 <myhtml_check_tag_parser@@Base+0x50>
   295f4:	ldr	r0, [r7, #192]	; 0xc0
   295f8:	sub	r0, r1, r0
   295fc:	add	r1, r8, r0
   29600:	mov	r0, r5
   29604:	bl	11908 <myhtml_tag_get_by_name@plt>
   29608:	cmp	r0, #0
   2960c:	ldrne	r0, [r0]
   29610:	strne	r0, [r4]
   29614:	subne	sp, fp, #24
   29618:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   2961c:	ldr	r2, [r4, #28]
   29620:	ldr	r1, [r4, #24]
   29624:	cmp	r2, r6
   29628:	bls	29648 <myhtml_check_tag_parser@@Base+0x98>
   2962c:	mov	r0, r7
   29630:	bl	10fa8 <myhtml_tree_incomming_buffer_make_data@plt>
   29634:	ldr	r2, [r4, #28]
   29638:	mov	r1, r0
   2963c:	mov	r0, #1
   29640:	str	r0, [sp]
   29644:	b	2965c <myhtml_check_tag_parser@@Base+0xac>
   29648:	ldr	r0, [r7, #192]	; 0xc0
   2964c:	mov	r3, #1
   29650:	str	r3, [sp]
   29654:	sub	r0, r1, r0
   29658:	add	r1, r8, r0
   2965c:	mov	r0, r5
   29660:	mov	r3, #0
   29664:	bl	110ec <myhtml_tag_add@plt>
   29668:	mov	r1, r0
   2966c:	str	r0, [r4]
   29670:	mov	r0, r5
   29674:	mov	r2, #1
   29678:	mov	r3, #1
   2967c:	sub	sp, fp, #24
   29680:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   29684:	b	11080 <myhtml_tag_set_category@plt>

00029688 <myhtml_tokenizer_queue_create_text_node_if_need@@Base>:
   29688:	push	{r4, sl, fp, lr}
   2968c:	add	fp, sp, #8
   29690:	mov	r4, r0
   29694:	ldr	r0, [r1]
   29698:	mov	r2, r1
   2969c:	cmp	r0, #0
   296a0:	bne	296f0 <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x68>
   296a4:	ldr	r0, [r2, #24]
   296a8:	cmp	r0, r3
   296ac:	bcs	296f0 <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x68>
   296b0:	mov	r1, #1
   296b4:	ldr	ip, [fp, #8]
   296b8:	sub	r3, r3, r0
   296bc:	str	r1, [r2]
   296c0:	ldr	r1, [r2, #32]
   296c4:	ldr	lr, [r2, #48]	; 0x30
   296c8:	str	r3, [r2, #28]
   296cc:	str	r0, [r2, #32]
   296d0:	str	r3, [r2, #36]	; 0x24
   296d4:	orr	r0, lr, ip
   296d8:	str	r0, [r2, #48]	; 0x30
   296dc:	mov	r0, r4
   296e0:	bl	11104 <myhtml_queue_add@plt>
   296e4:	mov	r2, #0
   296e8:	cmp	r0, #0
   296ec:	ldreq	r2, [r4, #64]	; 0x40
   296f0:	mov	r0, r2
   296f4:	pop	{r4, sl, fp, pc}

000296f8 <myhtml_tokenizer_set_state@@Base>:
   296f8:	push	{r4, sl, fp, lr}
   296fc:	add	fp, sp, #8
   29700:	ldr	r2, [r1, #48]	; 0x30
   29704:	mov	r4, r0
   29708:	mov	r0, #0
   2970c:	tst	r2, #1
   29710:	bne	29734 <myhtml_tokenizer_set_state@@Base+0x3c>
   29714:	ldr	r1, [r1]
   29718:	cmp	r1, #93	; 0x5d
   2971c:	ldreq	r2, [r4, #180]	; 0xb4
   29720:	tsteq	r2, #1
   29724:	beq	29734 <myhtml_tokenizer_set_state@@Base+0x3c>
   29728:	ldr	r0, [r4, #28]
   2972c:	bl	11818 <myhtml_tag_get_by_id@plt>
   29730:	ldr	r0, [r0, #12]
   29734:	str	r0, [r4, #160]	; 0xa0
   29738:	pop	{r4, sl, fp, pc}

0002973c <myhtml_tokenizer_state_rcdata@@Base>:
   2973c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29740:	add	fp, sp, #24
   29744:	mov	r5, r0
   29748:	ldr	r0, [r0, #60]	; 0x3c
   2974c:	ldr	r6, [fp, #8]
   29750:	mov	r4, r3
   29754:	mov	r7, r2
   29758:	mov	r8, r1
   2975c:	cmp	r0, #0
   29760:	bne	297b4 <myhtml_tokenizer_state_rcdata@@Base+0x78>
   29764:	ldr	r0, [r5, #192]	; 0xc0
   29768:	add	r0, r0, r4
   2976c:	str	r0, [r8, #24]
   29770:	ldr	r0, [r5, #68]	; 0x44
   29774:	bl	10e94 <mythread_queue_get_prev_node@plt>
   29778:	cmp	r0, #0
   2977c:	ldrne	r0, [r0, #4]
   29780:	cmpne	r0, #0
   29784:	bne	2979c <myhtml_tokenizer_state_rcdata@@Base+0x60>
   29788:	ldr	r0, [r5, #88]	; 0x58
   2978c:	cmp	r0, #0
   29790:	beq	297b4 <myhtml_tokenizer_state_rcdata@@Base+0x78>
   29794:	ldr	r0, [r0, #4]
   29798:	b	297a0 <myhtml_tokenizer_state_rcdata@@Base+0x64>
   2979c:	ldr	r0, [r0]
   297a0:	str	r0, [r5, #60]	; 0x3c
   297a4:	cmp	r4, r6
   297a8:	bcc	297bc <myhtml_tokenizer_state_rcdata@@Base+0x80>
   297ac:	b	297e0 <myhtml_tokenizer_state_rcdata@@Base+0xa4>
   297b0:	add	r4, r4, #1
   297b4:	cmp	r4, r6
   297b8:	bcs	297e0 <myhtml_tokenizer_state_rcdata@@Base+0xa4>
   297bc:	ldrb	r0, [r7, r4]
   297c0:	cmp	r0, #60	; 0x3c
   297c4:	bne	297b0 <myhtml_tokenizer_state_rcdata@@Base+0x74>
   297c8:	ldr	r0, [r5, #192]	; 0xc0
   297cc:	add	r0, r0, r4
   297d0:	add	r4, r4, #1
   297d4:	str	r0, [r8, #32]
   297d8:	mov	r0, #10
   297dc:	str	r0, [r5, #160]	; 0xa0
   297e0:	mov	r0, r4
   297e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000297e8 <myhtml_tokenizer_state_rcdata_less_than_sign@@Base>:
   297e8:	ldrb	r1, [r2, r3]
   297ec:	mov	r2, #2
   297f0:	cmp	r1, #47	; 0x2f
   297f4:	movweq	r2, #11
   297f8:	addeq	r3, r3, #1
   297fc:	str	r2, [r0, #160]	; 0xa0
   29800:	mov	r0, r3
   29804:	bx	lr

00029808 <myhtml_tokenizer_state_rcdata_end_tag_open@@Base>:
   29808:	ldrb	r1, [r2, r3]
   2980c:	ldr	r2, [pc, #28]	; 29830 <myhtml_tokenizer_state_rcdata_end_tag_open@@Base+0x28>
   29810:	add	r2, pc, r2
   29814:	ldrb	r1, [r2, r1]
   29818:	mov	r2, #2
   2981c:	cmp	r1, #1
   29820:	movweq	r2, #12
   29824:	str	r2, [r0, #160]	; 0xa0
   29828:	mov	r0, r3
   2982c:	bx	lr
   29830:	andeq	r8, sp, r2, ror #12

00029834 <_myhtml_tokenizer_state_andata_end_tag_name@@Base>:
   29834:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29838:	add	fp, sp, #24
   2983c:	mov	r5, r0
   29840:	mov	r6, r1
   29844:	ldr	r0, [r3]
   29848:	mov	r4, r3
   2984c:	ldr	r1, [r5, #192]	; 0xc0
   29850:	add	r0, r1, r0
   29854:	ldr	r1, [r6, #24]
   29858:	sub	r0, r0, r1
   2985c:	mov	r1, r6
   29860:	str	r0, [r6, #28]
   29864:	mov	r0, r5
   29868:	ldr	r3, [r3]
   2986c:	bl	11974 <myhtml_check_tag_parser@plt>
   29870:	ldr	r0, [r6]
   29874:	ldr	r2, [r5, #60]	; 0x3c
   29878:	ldr	r1, [fp, #8]
   2987c:	cmp	r0, r2
   29880:	bne	29924 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0xf0>
   29884:	ldr	r7, [r6, #24]
   29888:	sub	r2, r7, #2
   2988c:	cmp	r2, r1
   29890:	bls	298f8 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0xc4>
   29894:	ldr	r8, [r6, #32]
   29898:	ldr	r0, [fp, #12]
   2989c:	ldr	r3, [r6, #48]	; 0x30
   298a0:	orr	r0, r3, r0
   298a4:	str	r0, [r6, #48]	; 0x30
   298a8:	mov	r0, #1
   298ac:	str	r0, [r6]
   298b0:	sub	r0, r2, r1
   298b4:	str	r1, [r6, #24]
   298b8:	mov	r2, r6
   298bc:	str	r0, [r6, #28]
   298c0:	str	r1, [r6, #32]
   298c4:	str	r0, [r6, #36]	; 0x24
   298c8:	ldr	r0, [r6, #48]	; 0x30
   298cc:	ldr	r1, [r6, #48]	; 0x30
   298d0:	and	r0, r0, #8
   298d4:	eor	r0, r1, r0
   298d8:	str	r0, [r6, #48]	; 0x30
   298dc:	mov	r0, r5
   298e0:	ldr	r1, [r4]
   298e4:	bl	11104 <myhtml_queue_add@plt>
   298e8:	ldr	r6, [r5, #64]	; 0x40
   298ec:	str	r7, [r6, #24]
   298f0:	str	r8, [r6, #32]
   298f4:	ldr	r0, [r5, #60]	; 0x3c
   298f8:	str	r0, [r6]
   298fc:	ldr	r0, [r6, #48]	; 0x30
   29900:	orr	r0, r0, #1
   29904:	str	r0, [r6, #48]	; 0x30
   29908:	ldr	r0, [r5, #192]	; 0xc0
   2990c:	ldr	r1, [r4]
   29910:	add	r0, r1, r0
   29914:	sub	r0, r0, r7
   29918:	str	r0, [r6, #28]
   2991c:	mov	r0, #1
   29920:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29924:	mov	r0, #0
   29928:	str	r1, [r6, #24]
   2992c:	mov	r1, #2
   29930:	str	r0, [r6, #28]
   29934:	str	r1, [r5, #160]	; 0xa0
   29938:	ldr	r1, [r4]
   2993c:	add	r1, r1, #1
   29940:	str	r1, [r4]
   29944:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00029948 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base>:
   29948:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2994c:	add	fp, sp, #24
   29950:	sub	sp, sp, #16
   29954:	str	r3, [sp, #12]
   29958:	mov	r4, r0
   2995c:	mov	r5, r1
   29960:	ldr	r0, [r0, #192]	; 0xc0
   29964:	ldr	r8, [r1, #24]
   29968:	add	r0, r0, r3
   2996c:	str	r0, [r1, #24]
   29970:	ldr	r0, [fp, #8]
   29974:	cmp	r3, r0
   29978:	bcs	29a84 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x13c>
   2997c:	ldr	r1, [pc, #292]	; 29aa8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x160>
   29980:	add	r1, pc, r1
   29984:	ldrb	r7, [r2, r3]
   29988:	ldrb	r6, [r1, r7]
   2998c:	cmp	r6, #2
   29990:	cmpne	r7, #47	; 0x2f
   29994:	beq	299bc <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x74>
   29998:	cmp	r7, #62	; 0x3e
   2999c:	beq	29a14 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xcc>
   299a0:	cmp	r6, #1
   299a4:	bne	29a04 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xbc>
   299a8:	add	r3, r3, #1
   299ac:	cmp	r3, r0
   299b0:	bcc	29984 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x3c>
   299b4:	str	r3, [sp, #12]
   299b8:	b	29a84 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x13c>
   299bc:	mov	r0, #16
   299c0:	str	r3, [sp, #12]
   299c4:	add	r3, sp, #12
   299c8:	mov	r1, r5
   299cc:	str	r8, [sp]
   299d0:	str	r0, [sp, #4]
   299d4:	mov	r0, r4
   299d8:	bl	119a4 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   299dc:	cmp	r0, #0
   299e0:	beq	29a84 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x13c>
   299e4:	mov	r0, #0
   299e8:	str	r0, [r4, #60]	; 0x3c
   299ec:	mov	r0, #33	; 0x21
   299f0:	str	r0, [r4, #160]	; 0xa0
   299f4:	ldr	r0, [sp, #12]
   299f8:	add	r5, r0, #1
   299fc:	str	r5, [sp, #12]
   29a00:	b	29a8c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x144>
   29a04:	mov	r0, #2
   29a08:	str	r3, [sp, #12]
   29a0c:	str	r0, [r4, #160]	; 0xa0
   29a10:	b	29a84 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x13c>
   29a14:	mov	r0, #16
   29a18:	str	r3, [sp, #12]
   29a1c:	add	r3, sp, #12
   29a20:	mov	r1, r5
   29a24:	str	r8, [sp]
   29a28:	str	r0, [sp, #4]
   29a2c:	mov	r0, r4
   29a30:	bl	119a4 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   29a34:	cmp	r0, #0
   29a38:	beq	29a84 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x13c>
   29a3c:	ldr	r0, [sp, #12]
   29a40:	add	r5, r0, #1
   29a44:	str	r5, [sp, #12]
   29a48:	ldr	r2, [r4, #64]	; 0x40
   29a4c:	ldr	r0, [r4, #192]	; 0xc0
   29a50:	ldr	r1, [r2, #32]
   29a54:	add	r0, r0, r5
   29a58:	sub	r0, r0, r1
   29a5c:	mov	r1, r5
   29a60:	str	r0, [r2, #36]	; 0x24
   29a64:	mov	r0, r4
   29a68:	bl	11104 <myhtml_queue_add@plt>
   29a6c:	cmp	r0, #0
   29a70:	beq	29a98 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x150>
   29a74:	mov	r0, #69	; 0x45
   29a78:	mov	r5, #0
   29a7c:	str	r0, [r4, #160]	; 0xa0
   29a80:	b	29a8c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x144>
   29a84:	str	r8, [r5, #24]
   29a88:	ldr	r5, [sp, #12]
   29a8c:	mov	r0, r5
   29a90:	sub	sp, fp, #24
   29a94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29a98:	mov	r0, #0
   29a9c:	str	r0, [r4, #160]	; 0xa0
   29aa0:	str	r0, [r4, #60]	; 0x3c
   29aa4:	b	29a8c <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x144>
   29aa8:	strdeq	r8, [sp], -r2

00029aac <myhtml_tokenizer_state_rawtext@@Base>:
   29aac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29ab0:	add	fp, sp, #24
   29ab4:	mov	r5, r0
   29ab8:	ldr	r0, [r0, #60]	; 0x3c
   29abc:	ldr	r6, [fp, #8]
   29ac0:	mov	r4, r3
   29ac4:	mov	r7, r2
   29ac8:	mov	r8, r1
   29acc:	cmp	r0, #0
   29ad0:	bne	29b24 <myhtml_tokenizer_state_rawtext@@Base+0x78>
   29ad4:	ldr	r0, [r5, #192]	; 0xc0
   29ad8:	add	r0, r0, r4
   29adc:	str	r0, [r8, #24]
   29ae0:	ldr	r0, [r5, #68]	; 0x44
   29ae4:	bl	10e94 <mythread_queue_get_prev_node@plt>
   29ae8:	cmp	r0, #0
   29aec:	ldrne	r0, [r0, #4]
   29af0:	cmpne	r0, #0
   29af4:	bne	29b0c <myhtml_tokenizer_state_rawtext@@Base+0x60>
   29af8:	ldr	r0, [r5, #88]	; 0x58
   29afc:	cmp	r0, #0
   29b00:	beq	29b24 <myhtml_tokenizer_state_rawtext@@Base+0x78>
   29b04:	ldr	r0, [r0, #4]
   29b08:	b	29b10 <myhtml_tokenizer_state_rawtext@@Base+0x64>
   29b0c:	ldr	r0, [r0]
   29b10:	str	r0, [r5, #60]	; 0x3c
   29b14:	cmp	r4, r6
   29b18:	bcc	29b2c <myhtml_tokenizer_state_rawtext@@Base+0x80>
   29b1c:	b	29b50 <myhtml_tokenizer_state_rawtext@@Base+0xa4>
   29b20:	add	r4, r4, #1
   29b24:	cmp	r4, r6
   29b28:	bcs	29b50 <myhtml_tokenizer_state_rawtext@@Base+0xa4>
   29b2c:	ldrb	r0, [r7, r4]
   29b30:	cmp	r0, #60	; 0x3c
   29b34:	bne	29b20 <myhtml_tokenizer_state_rawtext@@Base+0x74>
   29b38:	ldr	r0, [r5, #192]	; 0xc0
   29b3c:	add	r0, r0, r4
   29b40:	add	r4, r4, #1
   29b44:	str	r0, [r8, #32]
   29b48:	mov	r0, #13
   29b4c:	str	r0, [r5, #160]	; 0xa0
   29b50:	mov	r0, r4
   29b54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00029b58 <myhtml_tokenizer_state_rawtext_less_than_sign@@Base>:
   29b58:	ldrb	r1, [r2, r3]
   29b5c:	mov	r2, #4
   29b60:	cmp	r1, #47	; 0x2f
   29b64:	movweq	r2, #14
   29b68:	addeq	r3, r3, #1
   29b6c:	str	r2, [r0, #160]	; 0xa0
   29b70:	mov	r0, r3
   29b74:	bx	lr

00029b78 <myhtml_tokenizer_state_rawtext_end_tag_open@@Base>:
   29b78:	ldrb	r1, [r2, r3]
   29b7c:	ldr	r2, [pc, #28]	; 29ba0 <myhtml_tokenizer_state_rawtext_end_tag_open@@Base+0x28>
   29b80:	add	r2, pc, r2
   29b84:	ldrb	r1, [r2, r1]
   29b88:	mov	r2, #4
   29b8c:	cmp	r1, #1
   29b90:	movweq	r2, #15
   29b94:	str	r2, [r0, #160]	; 0xa0
   29b98:	mov	r0, r3
   29b9c:	bx	lr
   29ba0:	strdeq	r8, [sp], -r2

00029ba4 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base>:
   29ba4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29ba8:	add	fp, sp, #24
   29bac:	sub	sp, sp, #16
   29bb0:	str	r3, [sp, #12]
   29bb4:	mov	r8, r0
   29bb8:	mov	r5, r3
   29bbc:	ldr	r0, [r0, #192]	; 0xc0
   29bc0:	add	r3, r0, r3
   29bc4:	ldr	r0, [r1, #24]
   29bc8:	str	r3, [r1, #24]
   29bcc:	ldr	r3, [fp, #8]
   29bd0:	cmp	r5, r3
   29bd4:	bcs	29c18 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x74>
   29bd8:	ldr	r4, [pc, #284]	; 29cfc <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x158>
   29bdc:	add	r4, pc, r4
   29be0:	ldrb	r7, [r2, r5]
   29be4:	ldrb	r6, [r4, r7]
   29be8:	cmp	r6, #2
   29bec:	beq	29c28 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x84>
   29bf0:	cmp	r7, #47	; 0x2f
   29bf4:	beq	29c28 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x84>
   29bf8:	cmp	r7, #62	; 0x3e
   29bfc:	beq	29c84 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xe0>
   29c00:	cmp	r6, #1
   29c04:	bne	29c68 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xc4>
   29c08:	add	r5, r5, #1
   29c0c:	cmp	r5, r3
   29c10:	bcc	29be0 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x3c>
   29c14:	str	r5, [sp, #12]
   29c18:	str	r0, [r1, #24]
   29c1c:	mov	r0, r5
   29c20:	sub	sp, fp, #24
   29c24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29c28:	mov	r3, #32
   29c2c:	str	r5, [sp, #12]
   29c30:	stm	sp, {r0, r3}
   29c34:	add	r3, sp, #12
   29c38:	mov	r0, r8
   29c3c:	bl	119a4 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   29c40:	cmp	r0, #0
   29c44:	beq	29c7c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xd8>
   29c48:	mov	r0, #0
   29c4c:	str	r0, [r8, #60]	; 0x3c
   29c50:	mov	r0, #33	; 0x21
   29c54:	str	r0, [r8, #160]	; 0xa0
   29c58:	ldr	r0, [sp, #12]
   29c5c:	add	r5, r0, #1
   29c60:	str	r5, [sp, #12]
   29c64:	b	29c1c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x78>
   29c68:	str	r5, [sp, #12]
   29c6c:	str	r0, [r1, #24]
   29c70:	mov	r0, #4
   29c74:	str	r0, [r8, #160]	; 0xa0
   29c78:	b	29c1c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x78>
   29c7c:	ldr	r5, [sp, #12]
   29c80:	b	29c1c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x78>
   29c84:	mov	r3, #32
   29c88:	str	r5, [sp, #12]
   29c8c:	stm	sp, {r0, r3}
   29c90:	add	r3, sp, #12
   29c94:	mov	r0, r8
   29c98:	bl	119a4 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   29c9c:	ldr	r5, [sp, #12]
   29ca0:	cmp	r0, #0
   29ca4:	beq	29c1c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x78>
   29ca8:	add	r5, r5, #1
   29cac:	str	r5, [sp, #12]
   29cb0:	ldr	r2, [r8, #64]	; 0x40
   29cb4:	ldr	r0, [r8, #192]	; 0xc0
   29cb8:	ldr	r1, [r2, #32]
   29cbc:	add	r0, r0, r5
   29cc0:	sub	r0, r0, r1
   29cc4:	mov	r1, r5
   29cc8:	str	r0, [r2, #36]	; 0x24
   29ccc:	mov	r0, r8
   29cd0:	bl	11104 <myhtml_queue_add@plt>
   29cd4:	cmp	r0, #0
   29cd8:	beq	29cec <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x148>
   29cdc:	mov	r0, #69	; 0x45
   29ce0:	mov	r5, #0
   29ce4:	str	r0, [r8, #160]	; 0xa0
   29ce8:	b	29c1c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x78>
   29cec:	mov	r0, #0
   29cf0:	str	r0, [r8, #160]	; 0xa0
   29cf4:	str	r0, [r8, #60]	; 0x3c
   29cf8:	b	29c1c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x78>
   29cfc:	muleq	sp, r6, r2

00029d00 <myhtml_tokenizer_state_plaintext@@Base>:
   29d00:	push	{r4, r5, fp, lr}
   29d04:	add	fp, sp, #8
   29d08:	mov	r4, r0
   29d0c:	ldr	r0, [r1, #48]	; 0x30
   29d10:	mov	r2, r1
   29d14:	ldr	r5, [fp, #8]
   29d18:	tst	r0, #128	; 0x80
   29d1c:	ldreq	r0, [r2, #48]	; 0x30
   29d20:	orreq	r0, r0, #128	; 0x80
   29d24:	streq	r0, [r2, #48]	; 0x30
   29d28:	ldr	r0, [r2, #48]	; 0x30
   29d2c:	ldr	r1, [r2, #48]	; 0x30
   29d30:	and	r0, r0, #8
   29d34:	eor	r0, r1, r0
   29d38:	mov	r1, #1
   29d3c:	str	r0, [r2, #48]	; 0x30
   29d40:	ldr	r0, [r4, #192]	; 0xc0
   29d44:	str	r1, [r2]
   29d48:	add	r1, r0, r3
   29d4c:	add	r0, r0, r5
   29d50:	sub	r0, r0, r1
   29d54:	str	r0, [r2, #36]	; 0x24
   29d58:	str	r1, [r2, #24]
   29d5c:	str	r0, [r2, #28]
   29d60:	mov	r0, #0
   29d64:	mov	r1, r5
   29d68:	str	r0, [r4, #160]	; 0xa0
   29d6c:	mov	r0, r4
   29d70:	bl	11104 <myhtml_queue_add@plt>
   29d74:	cmp	r0, #0
   29d78:	movne	r0, #69	; 0x45
   29d7c:	movne	r5, #0
   29d80:	strne	r0, [r4, #160]	; 0xa0
   29d84:	mov	r0, r5
   29d88:	pop	{r4, r5, fp, pc}

00029d8c <myhtml_tokenizer_state_cdata_section@@Base>:
   29d8c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29d90:	add	fp, sp, #24
   29d94:	mov	r5, r0
   29d98:	ldr	r0, [r1, #48]	; 0x30
   29d9c:	mov	r8, r1
   29da0:	ldr	r6, [fp, #8]
   29da4:	mov	r4, r3
   29da8:	mov	r7, r2
   29dac:	tst	r0, #256	; 0x100
   29db0:	ldreq	r0, [r8, #48]	; 0x30
   29db4:	orreq	r0, r0, #256	; 0x100
   29db8:	streq	r0, [r8, #48]	; 0x30
   29dbc:	cmp	r4, r6
   29dc0:	bcs	29e2c <myhtml_tokenizer_state_cdata_section@@Base+0xa0>
   29dc4:	add	r0, r4, #1
   29dc8:	mov	r4, r0
   29dcc:	add	r0, r7, r0
   29dd0:	ldrb	r1, [r0, #-1]
   29dd4:	cmp	r1, #62	; 0x3e
   29dd8:	bne	29e1c <myhtml_tokenizer_state_cdata_section@@Base+0x90>
   29ddc:	sub	r1, r4, #1
   29de0:	cmp	r1, #1
   29de4:	bhi	29e04 <myhtml_tokenizer_state_cdata_section@@Base+0x78>
   29de8:	ldr	r0, [r5, #192]	; 0xc0
   29dec:	mov	r2, #2
   29df0:	add	r0, r4, r0
   29df4:	sub	r1, r0, #3
   29df8:	mov	r0, r5
   29dfc:	bl	10fa8 <myhtml_tree_incomming_buffer_make_data@plt>
   29e00:	b	29e08 <myhtml_tokenizer_state_cdata_section@@Base+0x7c>
   29e04:	sub	r0, r0, #3
   29e08:	ldrb	r1, [r0]
   29e0c:	cmp	r1, #93	; 0x5d
   29e10:	ldrbeq	r0, [r0, #1]
   29e14:	cmpeq	r0, #93	; 0x5d
   29e18:	beq	29e34 <myhtml_tokenizer_state_cdata_section@@Base+0xa8>
   29e1c:	add	r0, r4, #1
   29e20:	cmp	r4, r6
   29e24:	bcc	29dc8 <myhtml_tokenizer_state_cdata_section@@Base+0x3c>
   29e28:	sub	r4, r0, #1
   29e2c:	mov	r0, r4
   29e30:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29e34:	ldr	r1, [r8, #24]
   29e38:	ldr	r0, [r5, #192]	; 0xc0
   29e3c:	sub	r1, r0, r1
   29e40:	add	r1, r1, r4
   29e44:	subs	r1, r1, #3
   29e48:	str	r1, [r8, #28]
   29e4c:	bne	29e5c <myhtml_tokenizer_state_cdata_section@@Base+0xd0>
   29e50:	add	r0, r0, r4
   29e54:	str	r0, [r8, #24]
   29e58:	b	29e94 <myhtml_tokenizer_state_cdata_section@@Base+0x108>
   29e5c:	ldr	r1, [r8, #32]
   29e60:	mov	r2, r8
   29e64:	sub	r0, r0, r1
   29e68:	mov	r1, r4
   29e6c:	add	r0, r0, r4
   29e70:	str	r0, [r8, #36]	; 0x24
   29e74:	mov	r0, r5
   29e78:	bl	11104 <myhtml_queue_add@plt>
   29e7c:	cmp	r0, #0
   29e80:	movne	r0, #69	; 0x45
   29e84:	movne	r4, #0
   29e88:	strne	r0, [r5, #160]	; 0xa0
   29e8c:	movne	r0, r4
   29e90:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   29e94:	mov	r0, #0
   29e98:	str	r0, [r5, #160]	; 0xa0
   29e9c:	mov	r0, r4
   29ea0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00029ea4 <myhtml_tokenizer_state_data@@Base>:
   29ea4:	push	{r4, r5, fp, lr}
   29ea8:	add	fp, sp, #8
   29eac:	ldr	ip, [fp, #8]
   29eb0:	cmp	r3, ip
   29eb4:	bcs	29f30 <myhtml_tokenizer_state_data@@Base+0x8c>
   29eb8:	ldr	lr, [pc, #152]	; 29f58 <myhtml_tokenizer_state_data@@Base+0xb4>
   29ebc:	add	lr, pc, lr
   29ec0:	ldrb	r4, [r2, r3]
   29ec4:	cmp	r4, #0
   29ec8:	beq	29ed8 <myhtml_tokenizer_state_data@@Base+0x34>
   29ecc:	cmp	r4, #60	; 0x3c
   29ed0:	bne	29ef0 <myhtml_tokenizer_state_data@@Base+0x4c>
   29ed4:	b	29f38 <myhtml_tokenizer_state_data@@Base+0x94>
   29ed8:	ldr	r5, [r1, #48]	; 0x30
   29edc:	tst	r5, #2048	; 0x800
   29ee0:	bne	29ef0 <myhtml_tokenizer_state_data@@Base+0x4c>
   29ee4:	ldr	r4, [r1, #48]	; 0x30
   29ee8:	orr	r4, r4, #2048	; 0x800
   29eec:	b	29f20 <myhtml_tokenizer_state_data@@Base+0x7c>
   29ef0:	ldr	r5, [r1, #48]	; 0x30
   29ef4:	tst	r5, #8
   29ef8:	ldrbne	r4, [lr, r4]
   29efc:	cmpne	r4, #2
   29f00:	beq	29f24 <myhtml_tokenizer_state_data@@Base+0x80>
   29f04:	ldr	r4, [r1, #48]	; 0x30
   29f08:	ldr	r5, [r1, #48]	; 0x30
   29f0c:	and	r4, r4, #8
   29f10:	eor	r4, r5, r4
   29f14:	str	r4, [r1, #48]	; 0x30
   29f18:	ldr	r4, [r1, #48]	; 0x30
   29f1c:	orr	r4, r4, #512	; 0x200
   29f20:	str	r4, [r1, #48]	; 0x30
   29f24:	add	r3, r3, #1
   29f28:	cmp	r3, ip
   29f2c:	bcc	29ec0 <myhtml_tokenizer_state_data@@Base+0x1c>
   29f30:	mov	r0, r3
   29f34:	pop	{r4, r5, fp, pc}
   29f38:	ldr	r2, [r0, #192]	; 0xc0
   29f3c:	add	r2, r2, r3
   29f40:	add	r3, r3, #1
   29f44:	str	r2, [r1, #32]
   29f48:	mov	r1, #7
   29f4c:	str	r1, [r0, #160]	; 0xa0
   29f50:	mov	r0, r3
   29f54:	pop	{r4, r5, fp, pc}
   29f58:			; <UNDEFINED> instruction: 0x000d7fb6

00029f5c <myhtml_tokenizer_state_tag_open@@Base>:
   29f5c:	push	{r4, r5, r6, sl, fp, lr}
   29f60:	add	fp, sp, #16
   29f64:	mov	r5, r3
   29f68:	mov	r6, r0
   29f6c:	mov	r3, r1
   29f70:	ldrb	r0, [r2, r5]
   29f74:	ldr	r1, [pc, #516]	; 2a180 <myhtml_tokenizer_state_tag_open@@Base+0x224>
   29f78:	add	r1, pc, r1
   29f7c:	ldrb	r1, [r1, r0]
   29f80:	cmp	r1, #1
   29f84:	bne	2a014 <myhtml_tokenizer_state_tag_open@@Base+0xb8>
   29f88:	ldr	r1, [r3]
   29f8c:	ldr	r0, [r6, #192]	; 0xc0
   29f90:	cmp	r1, #0
   29f94:	bne	2a004 <myhtml_tokenizer_state_tag_open@@Base+0xa8>
   29f98:	ldr	r2, [r3, #24]
   29f9c:	add	r1, r5, r0
   29fa0:	sub	r4, r1, #1
   29fa4:	cmp	r4, r2
   29fa8:	bls	2a004 <myhtml_tokenizer_state_tag_open@@Base+0xa8>
   29fac:	mov	r0, #1
   29fb0:	sub	r4, r4, r2
   29fb4:	str	r0, [r3]
   29fb8:	ldr	r1, [r3, #32]
   29fbc:	ldr	r0, [r3, #48]	; 0x30
   29fc0:	str	r4, [r3, #28]
   29fc4:	str	r2, [r3, #32]
   29fc8:	str	r4, [r3, #36]	; 0x24
   29fcc:	mov	r2, r3
   29fd0:	orr	r0, r0, #512	; 0x200
   29fd4:	str	r0, [r3, #48]	; 0x30
   29fd8:	mov	r0, r6
   29fdc:	bl	11104 <myhtml_queue_add@plt>
   29fe0:	mov	r1, r0
   29fe4:	mov	r0, #0
   29fe8:	mov	r2, #69	; 0x45
   29fec:	cmp	r1, #0
   29ff0:	bne	2a178 <myhtml_tokenizer_state_tag_open@@Base+0x21c>
   29ff4:	ldr	r3, [r6, #64]	; 0x40
   29ff8:	cmp	r3, #0
   29ffc:	beq	2a178 <myhtml_tokenizer_state_tag_open@@Base+0x21c>
   2a000:	ldr	r0, [r6, #192]	; 0xc0
   2a004:	add	r0, r0, r5
   2a008:	mov	r2, #9
   2a00c:	str	r0, [r3, #24]
   2a010:	b	2a174 <myhtml_tokenizer_state_tag_open@@Base+0x218>
   2a014:	cmp	r0, #63	; 0x3f
   2a018:	beq	2a0c0 <myhtml_tokenizer_state_tag_open@@Base+0x164>
   2a01c:	cmp	r0, #47	; 0x2f
   2a020:	beq	2a14c <myhtml_tokenizer_state_tag_open@@Base+0x1f0>
   2a024:	cmp	r0, #33	; 0x21
   2a028:	bne	2a15c <myhtml_tokenizer_state_tag_open@@Base+0x200>
   2a02c:	ldr	r0, [r3]
   2a030:	ldr	r1, [r6, #192]	; 0xc0
   2a034:	cmp	r0, #0
   2a038:	bne	2a0a8 <myhtml_tokenizer_state_tag_open@@Base+0x14c>
   2a03c:	add	r0, r5, r1
   2a040:	sub	r2, r0, #1
   2a044:	ldr	r0, [r3, #24]
   2a048:	cmp	r2, r0
   2a04c:	bls	2a0a8 <myhtml_tokenizer_state_tag_open@@Base+0x14c>
   2a050:	mov	r1, #1
   2a054:	sub	r2, r2, r0
   2a058:	str	r1, [r3]
   2a05c:	ldr	r1, [r3, #32]
   2a060:	ldr	r4, [r3, #48]	; 0x30
   2a064:	str	r2, [r3, #28]
   2a068:	str	r0, [r3, #32]
   2a06c:	str	r2, [r3, #36]	; 0x24
   2a070:	mov	r2, r3
   2a074:	orr	r0, r4, #512	; 0x200
   2a078:	str	r0, [r3, #48]	; 0x30
   2a07c:	mov	r0, r6
   2a080:	bl	11104 <myhtml_queue_add@plt>
   2a084:	mov	r1, r0
   2a088:	mov	r0, #0
   2a08c:	mov	r2, #69	; 0x45
   2a090:	cmp	r1, #0
   2a094:	bne	2a178 <myhtml_tokenizer_state_tag_open@@Base+0x21c>
   2a098:	ldr	r3, [r6, #64]	; 0x40
   2a09c:	cmp	r3, #0
   2a0a0:	beq	2a178 <myhtml_tokenizer_state_tag_open@@Base+0x21c>
   2a0a4:	ldr	r1, [r6, #192]	; 0xc0
   2a0a8:	add	r0, r5, #1
   2a0ac:	mov	r2, #44	; 0x2c
   2a0b0:	add	r1, r1, r0
   2a0b4:	str	r1, [r3, #24]
   2a0b8:	str	r2, [r6, #160]	; 0xa0
   2a0bc:	pop	{r4, r5, r6, sl, fp, pc}
   2a0c0:	ldr	r1, [r3]
   2a0c4:	ldr	r0, [r6, #192]	; 0xc0
   2a0c8:	cmp	r1, #0
   2a0cc:	bne	2a13c <myhtml_tokenizer_state_tag_open@@Base+0x1e0>
   2a0d0:	ldr	r2, [r3, #24]
   2a0d4:	add	r1, r5, r0
   2a0d8:	sub	r4, r1, #1
   2a0dc:	cmp	r4, r2
   2a0e0:	bls	2a13c <myhtml_tokenizer_state_tag_open@@Base+0x1e0>
   2a0e4:	mov	r0, #1
   2a0e8:	sub	r4, r4, r2
   2a0ec:	str	r0, [r3]
   2a0f0:	ldr	r1, [r3, #32]
   2a0f4:	ldr	r0, [r3, #48]	; 0x30
   2a0f8:	str	r4, [r3, #28]
   2a0fc:	str	r2, [r3, #32]
   2a100:	str	r4, [r3, #36]	; 0x24
   2a104:	mov	r2, r3
   2a108:	orr	r0, r0, #512	; 0x200
   2a10c:	str	r0, [r3, #48]	; 0x30
   2a110:	mov	r0, r6
   2a114:	bl	11104 <myhtml_queue_add@plt>
   2a118:	mov	r1, r0
   2a11c:	mov	r0, #0
   2a120:	mov	r2, #69	; 0x45
   2a124:	cmp	r1, #0
   2a128:	bne	2a178 <myhtml_tokenizer_state_tag_open@@Base+0x21c>
   2a12c:	ldr	r3, [r6, #64]	; 0x40
   2a130:	cmp	r3, #0
   2a134:	beq	2a178 <myhtml_tokenizer_state_tag_open@@Base+0x21c>
   2a138:	ldr	r0, [r6, #192]	; 0xc0
   2a13c:	add	r0, r0, r5
   2a140:	mov	r2, #43	; 0x2b
   2a144:	str	r0, [r3, #24]
   2a148:	b	2a174 <myhtml_tokenizer_state_tag_open@@Base+0x218>
   2a14c:	add	r0, r5, #1
   2a150:	mov	r2, #8
   2a154:	str	r2, [r6, #160]	; 0xa0
   2a158:	pop	{r4, r5, r6, sl, fp, pc}
   2a15c:	ldr	r0, [r3, #48]	; 0x30
   2a160:	ldr	r1, [r3, #48]	; 0x30
   2a164:	mov	r2, #0
   2a168:	and	r0, r0, #8
   2a16c:	eor	r0, r1, r0
   2a170:	str	r0, [r3, #48]	; 0x30
   2a174:	mov	r0, r5
   2a178:	str	r2, [r6, #160]	; 0xa0
   2a17c:	pop	{r4, r5, r6, sl, fp, pc}
   2a180:	strdeq	r7, [sp], -sl

0002a184 <myhtml_tokenizer_state_end_tag_open@@Base>:
   2a184:	push	{r4, r5, fp, lr}
   2a188:	add	fp, sp, #8
   2a18c:	mov	r5, r3
   2a190:	mov	r4, r0
   2a194:	mov	r3, r1
   2a198:	ldrb	r0, [r2, r5]
   2a19c:	ldr	r1, [pc, #324]	; 2a2e8 <myhtml_tokenizer_state_end_tag_open@@Base+0x164>
   2a1a0:	add	r1, pc, r1
   2a1a4:	ldrb	r1, [r1, r0]
   2a1a8:	cmp	r1, #1
   2a1ac:	bne	2a240 <myhtml_tokenizer_state_end_tag_open@@Base+0xbc>
   2a1b0:	ldr	r1, [r3]
   2a1b4:	ldr	r0, [r4, #192]	; 0xc0
   2a1b8:	cmp	r1, #0
   2a1bc:	bne	2a22c <myhtml_tokenizer_state_end_tag_open@@Base+0xa8>
   2a1c0:	ldr	r2, [r3, #24]
   2a1c4:	add	r1, r5, r0
   2a1c8:	sub	ip, r1, #2
   2a1cc:	cmp	ip, r2
   2a1d0:	bls	2a22c <myhtml_tokenizer_state_end_tag_open@@Base+0xa8>
   2a1d4:	mov	r0, #1
   2a1d8:	str	r0, [r3]
   2a1dc:	sub	r0, ip, r2
   2a1e0:	ldr	r1, [r3, #32]
   2a1e4:	ldr	lr, [r3, #48]	; 0x30
   2a1e8:	str	r0, [r3, #28]
   2a1ec:	str	r2, [r3, #32]
   2a1f0:	str	r0, [r3, #36]	; 0x24
   2a1f4:	mov	r2, r3
   2a1f8:	orr	r0, lr, #512	; 0x200
   2a1fc:	str	r0, [r3, #48]	; 0x30
   2a200:	mov	r0, r4
   2a204:	bl	11104 <myhtml_queue_add@plt>
   2a208:	mov	r1, r0
   2a20c:	mov	r0, #0
   2a210:	mov	r2, #69	; 0x45
   2a214:	cmp	r1, #0
   2a218:	bne	2a2e0 <myhtml_tokenizer_state_end_tag_open@@Base+0x15c>
   2a21c:	ldr	r3, [r4, #64]	; 0x40
   2a220:	cmp	r3, #0
   2a224:	beq	2a2e0 <myhtml_tokenizer_state_end_tag_open@@Base+0x15c>
   2a228:	ldr	r0, [r4, #192]	; 0xc0
   2a22c:	mov	r1, #1
   2a230:	add	r0, r0, r5
   2a234:	mov	r2, #9
   2a238:	str	r1, [r3, #48]	; 0x30
   2a23c:	b	2a2d8 <myhtml_tokenizer_state_end_tag_open@@Base+0x154>
   2a240:	cmp	r0, #62	; 0x3e
   2a244:	addeq	r0, r5, #1
   2a248:	moveq	r2, #0
   2a24c:	streq	r2, [r4, #160]	; 0xa0
   2a250:	popeq	{r4, r5, fp, pc}
   2a254:	ldr	r1, [r3]
   2a258:	ldr	r0, [r4, #192]	; 0xc0
   2a25c:	cmp	r1, #0
   2a260:	bne	2a2d0 <myhtml_tokenizer_state_end_tag_open@@Base+0x14c>
   2a264:	ldr	r2, [r3, #24]
   2a268:	add	r1, r5, r0
   2a26c:	sub	ip, r1, #2
   2a270:	cmp	ip, r2
   2a274:	bls	2a2d0 <myhtml_tokenizer_state_end_tag_open@@Base+0x14c>
   2a278:	mov	r0, #1
   2a27c:	str	r0, [r3]
   2a280:	sub	r0, ip, r2
   2a284:	ldr	r1, [r3, #32]
   2a288:	ldr	lr, [r3, #48]	; 0x30
   2a28c:	str	r0, [r3, #28]
   2a290:	str	r2, [r3, #32]
   2a294:	str	r0, [r3, #36]	; 0x24
   2a298:	mov	r2, r3
   2a29c:	orr	r0, lr, #512	; 0x200
   2a2a0:	str	r0, [r3, #48]	; 0x30
   2a2a4:	mov	r0, r4
   2a2a8:	bl	11104 <myhtml_queue_add@plt>
   2a2ac:	mov	r1, r0
   2a2b0:	mov	r0, #0
   2a2b4:	mov	r2, #69	; 0x45
   2a2b8:	cmp	r1, #0
   2a2bc:	bne	2a2e0 <myhtml_tokenizer_state_end_tag_open@@Base+0x15c>
   2a2c0:	ldr	r3, [r4, #64]	; 0x40
   2a2c4:	cmp	r3, #0
   2a2c8:	beq	2a2e0 <myhtml_tokenizer_state_end_tag_open@@Base+0x15c>
   2a2cc:	ldr	r0, [r4, #192]	; 0xc0
   2a2d0:	add	r0, r0, r5
   2a2d4:	mov	r2, #43	; 0x2b
   2a2d8:	str	r0, [r3, #24]
   2a2dc:	mov	r0, r5
   2a2e0:	str	r2, [r4, #160]	; 0xa0
   2a2e4:	pop	{r4, r5, fp, pc}
   2a2e8:	ldrdeq	r7, [sp], -r2

0002a2ec <myhtml_tokenizer_state_markup_declaration_open@@Base>:
   2a2ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2a2f0:	add	fp, sp, #24
   2a2f4:	mov	r4, r1
   2a2f8:	mov	r6, r0
   2a2fc:	ldr	r1, [r1, #24]
   2a300:	ldr	r0, [r0, #192]	; 0xc0
   2a304:	ldr	r7, [fp, #8]
   2a308:	mov	r5, r3
   2a30c:	add	r0, r0, r7
   2a310:	add	r2, r1, #2
   2a314:	cmp	r2, r0
   2a318:	bhi	2a354 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x68>
   2a31c:	mov	r0, r6
   2a320:	mov	r2, #2
   2a324:	bl	10fa8 <myhtml_tree_incomming_buffer_make_data@plt>
   2a328:	ldrb	r1, [r0]
   2a32c:	cmp	r1, #45	; 0x2d
   2a330:	ldrbeq	r0, [r0, #1]
   2a334:	cmpeq	r0, #45	; 0x2d
   2a338:	beq	2a3fc <myhtml_tokenizer_state_markup_declaration_open@@Base+0x110>
   2a33c:	ldr	r0, [r6, #192]	; 0xc0
   2a340:	ldr	r1, [r4, #24]
   2a344:	add	r0, r0, r7
   2a348:	add	r2, r1, #7
   2a34c:	cmp	r2, r0
   2a350:	bls	2a364 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x78>
   2a354:	ldr	r0, [r6, #76]	; 0x4c
   2a358:	str	r5, [r0, #4]
   2a35c:	mov	r0, r7
   2a360:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2a364:	mov	r0, r6
   2a368:	mov	r2, #7
   2a36c:	mov	r8, #7
   2a370:	bl	10fa8 <myhtml_tree_incomming_buffer_make_data@plt>
   2a374:	ldr	r1, [pc, #284]	; 2a498 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1ac>
   2a378:	mov	r2, #7
   2a37c:	mov	r7, r0
   2a380:	add	r1, pc, r1
   2a384:	bl	112b4 <mycore_strncasecmp@plt>
   2a388:	cmp	r0, #0
   2a38c:	beq	2a424 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x138>
   2a390:	ldr	r1, [pc, #260]	; 2a49c <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1b0>
   2a394:	mov	r0, r7
   2a398:	mov	r2, #7
   2a39c:	add	r1, pc, r1
   2a3a0:	bl	11bfc <strncmp@plt>
   2a3a4:	cmp	r0, #0
   2a3a8:	bne	2a3e4 <myhtml_tokenizer_state_markup_declaration_open@@Base+0xf8>
   2a3ac:	ldr	r0, [r6, #68]	; 0x44
   2a3b0:	ldr	r0, [r0, #8]
   2a3b4:	cmp	r0, #0
   2a3b8:	ldrne	r1, [r0, #4]
   2a3bc:	cmpne	r1, #0
   2a3c0:	beq	2a3e4 <myhtml_tokenizer_state_markup_declaration_open@@Base+0xf8>
   2a3c4:	mov	r0, r6
   2a3c8:	bl	10e88 <myhtml_tree_wait_for_last_done_token@plt>
   2a3cc:	mov	r0, r6
   2a3d0:	bl	11a4c <myhtml_tree_adjusted_current_node@plt>
   2a3d4:	cmp	r0, #0
   2a3d8:	ldrne	r0, [r0, #8]
   2a3dc:	cmpne	r0, #1
   2a3e0:	bne	2a454 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x168>
   2a3e4:	mov	r0, #0
   2a3e8:	str	r0, [r4, #28]
   2a3ec:	mov	r0, #43	; 0x2b
   2a3f0:	str	r0, [r6, #160]	; 0xa0
   2a3f4:	mov	r0, r5
   2a3f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2a3fc:	mov	r0, #45	; 0x2d
   2a400:	add	r5, r5, #2
   2a404:	mov	r1, #0
   2a408:	str	r0, [r6, #160]	; 0xa0
   2a40c:	ldr	r0, [r6, #192]	; 0xc0
   2a410:	add	r0, r0, r5
   2a414:	str	r0, [r4, #24]
   2a418:	mov	r0, r5
   2a41c:	str	r1, [r4, #28]
   2a420:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2a424:	mov	r0, #51	; 0x33
   2a428:	mov	r1, #3
   2a42c:	str	r0, [r6, #160]	; 0xa0
   2a430:	ldr	r0, [r6, #76]	; 0x4c
   2a434:	ldr	r0, [r0, #12]
   2a438:	str	r8, [r4, #28]
   2a43c:	str	r1, [r4]
   2a440:	ldr	r1, [r4, #24]
   2a444:	add	r1, r1, #7
   2a448:	sub	r5, r1, r0
   2a44c:	mov	r0, r5
   2a450:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2a454:	mov	r0, #67	; 0x43
   2a458:	mov	r1, #0
   2a45c:	str	r0, [r6, #160]	; 0xa0
   2a460:	ldr	r0, [r6, #76]	; 0x4c
   2a464:	ldr	r0, [r0, #12]
   2a468:	str	r1, [r4, #28]
   2a46c:	mov	r1, #1
   2a470:	str	r1, [r4]
   2a474:	ldr	r1, [r4, #24]
   2a478:	add	r1, r1, #7
   2a47c:	str	r1, [r4, #24]
   2a480:	ldr	r2, [r4, #48]	; 0x30
   2a484:	ldr	r3, [r4, #48]	; 0x30
   2a488:	and	r2, r2, #8
   2a48c:	eor	r2, r3, r2
   2a490:	str	r2, [r4, #48]	; 0x30
   2a494:	b	2a448 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x15c>
   2a498:	muleq	sp, ip, fp
   2a49c:	andeq	r7, sp, lr, asr #21

0002a4a0 <myhtml_tokenizer_state_tag_name@@Base>:
   2a4a0:	push	{r4, r5, r6, r7, fp, lr}
   2a4a4:	add	fp, sp, #16
   2a4a8:	mov	r7, r0
   2a4ac:	ldr	r0, [fp, #8]
   2a4b0:	mov	r4, r3
   2a4b4:	cmp	r3, r0
   2a4b8:	bcs	2a4f4 <myhtml_tokenizer_state_tag_name@@Base+0x54>
   2a4bc:	mov	r6, r1
   2a4c0:	ldr	r1, [pc, #316]	; 2a604 <myhtml_tokenizer_state_tag_name@@Base+0x164>
   2a4c4:	add	r1, pc, r1
   2a4c8:	ldrb	r3, [r2, r4]
   2a4cc:	ldrb	r5, [r1, r3]
   2a4d0:	cmp	r5, #2
   2a4d4:	beq	2a4fc <myhtml_tokenizer_state_tag_name@@Base+0x5c>
   2a4d8:	cmp	r3, #62	; 0x3e
   2a4dc:	beq	2a528 <myhtml_tokenizer_state_tag_name@@Base+0x88>
   2a4e0:	cmp	r3, #47	; 0x2f
   2a4e4:	beq	2a5cc <myhtml_tokenizer_state_tag_name@@Base+0x12c>
   2a4e8:	add	r4, r4, #1
   2a4ec:	cmp	r4, r0
   2a4f0:	bcc	2a4c8 <myhtml_tokenizer_state_tag_name@@Base+0x28>
   2a4f4:	mov	r0, r4
   2a4f8:	pop	{r4, r5, r6, r7, fp, pc}
   2a4fc:	ldr	r0, [r6, #24]
   2a500:	ldr	r1, [r7, #192]	; 0xc0
   2a504:	mov	r3, r4
   2a508:	sub	r0, r1, r0
   2a50c:	mov	r1, r6
   2a510:	add	r0, r0, r4
   2a514:	str	r0, [r6, #28]
   2a518:	mov	r0, r7
   2a51c:	bl	11974 <myhtml_check_tag_parser@plt>
   2a520:	mov	r0, #33	; 0x21
   2a524:	b	2a5f4 <myhtml_tokenizer_state_tag_name@@Base+0x154>
   2a528:	ldr	r0, [r6, #24]
   2a52c:	ldr	r1, [r7, #192]	; 0xc0
   2a530:	mov	r3, r4
   2a534:	sub	r0, r1, r0
   2a538:	mov	r1, r6
   2a53c:	add	r0, r0, r4
   2a540:	str	r0, [r6, #28]
   2a544:	mov	r0, r7
   2a548:	bl	11974 <myhtml_check_tag_parser@plt>
   2a54c:	ldr	r1, [r6, #48]	; 0x30
   2a550:	mov	r0, #0
   2a554:	tst	r1, #1
   2a558:	bne	2a57c <myhtml_tokenizer_state_tag_name@@Base+0xdc>
   2a55c:	ldr	r1, [r6]
   2a560:	cmp	r1, #93	; 0x5d
   2a564:	ldreq	r2, [r7, #180]	; 0xb4
   2a568:	tsteq	r2, #1
   2a56c:	beq	2a57c <myhtml_tokenizer_state_tag_name@@Base+0xdc>
   2a570:	ldr	r0, [r7, #28]
   2a574:	bl	11818 <myhtml_tag_get_by_id@plt>
   2a578:	ldr	r0, [r0, #12]
   2a57c:	str	r0, [r7, #160]	; 0xa0
   2a580:	mov	r2, r6
   2a584:	ldr	r0, [r7, #192]	; 0xc0
   2a588:	ldr	r1, [r6, #32]
   2a58c:	sub	r0, r0, r1
   2a590:	add	r0, r0, r4
   2a594:	add	r4, r4, #1
   2a598:	add	r0, r0, #1
   2a59c:	mov	r1, r4
   2a5a0:	str	r0, [r6, #36]	; 0x24
   2a5a4:	mov	r0, r7
   2a5a8:	bl	11104 <myhtml_queue_add@plt>
   2a5ac:	cmp	r0, #0
   2a5b0:	movne	r0, #69	; 0x45
   2a5b4:	movne	r4, #0
   2a5b8:	strne	r0, [r7, #160]	; 0xa0
   2a5bc:	movne	r0, r4
   2a5c0:	popne	{r4, r5, r6, r7, fp, pc}
   2a5c4:	mov	r0, r4
   2a5c8:	pop	{r4, r5, r6, r7, fp, pc}
   2a5cc:	ldr	r0, [r6, #24]
   2a5d0:	ldr	r1, [r7, #192]	; 0xc0
   2a5d4:	mov	r3, r4
   2a5d8:	sub	r0, r1, r0
   2a5dc:	mov	r1, r6
   2a5e0:	add	r0, r0, r4
   2a5e4:	str	r0, [r6, #28]
   2a5e8:	mov	r0, r7
   2a5ec:	bl	11974 <myhtml_check_tag_parser@plt>
   2a5f0:	mov	r0, #42	; 0x2a
   2a5f4:	add	r4, r4, #1
   2a5f8:	str	r0, [r7, #160]	; 0xa0
   2a5fc:	mov	r0, r4
   2a600:	pop	{r4, r5, r6, r7, fp, pc}
   2a604:	andeq	r7, sp, lr, lsr #19

0002a608 <myhtml_tokenizer_state_self_closing_start_tag@@Base>:
   2a608:	push	{r4, r5, r6, r7, fp, lr}
   2a60c:	add	fp, sp, #16
   2a610:	mov	r4, r0
   2a614:	ldrb	r0, [r2, r3]
   2a618:	mov	r5, r1
   2a61c:	mov	r6, r3
   2a620:	mov	r1, #33	; 0x21
   2a624:	cmp	r0, #62	; 0x3e
   2a628:	bne	2a6b4 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0xac>
   2a62c:	ldr	r0, [r5, #48]	; 0x30
   2a630:	mov	r7, #0
   2a634:	orr	r0, r0, #2
   2a638:	str	r0, [r5, #48]	; 0x30
   2a63c:	ldr	r0, [r5, #48]	; 0x30
   2a640:	tst	r0, #1
   2a644:	mov	r0, #0
   2a648:	bne	2a674 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x6c>
   2a64c:	ldr	r1, [r5]
   2a650:	cmp	r1, #93	; 0x5d
   2a654:	bne	2a668 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x60>
   2a658:	ldr	r0, [r4, #180]	; 0xb4
   2a65c:	tst	r0, #1
   2a660:	mov	r0, #0
   2a664:	beq	2a674 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x6c>
   2a668:	ldr	r0, [r4, #28]
   2a66c:	bl	11818 <myhtml_tag_get_by_id@plt>
   2a670:	ldr	r0, [r0, #12]
   2a674:	str	r0, [r4, #160]	; 0xa0
   2a678:	add	r6, r6, #1
   2a67c:	mov	r2, r5
   2a680:	ldr	r0, [r4, #192]	; 0xc0
   2a684:	ldr	r1, [r5, #32]
   2a688:	add	r0, r0, r6
   2a68c:	sub	r0, r0, r1
   2a690:	mov	r1, r6
   2a694:	str	r0, [r5, #36]	; 0x24
   2a698:	mov	r0, r4
   2a69c:	bl	11104 <myhtml_queue_add@plt>
   2a6a0:	mov	r1, #69	; 0x45
   2a6a4:	cmp	r0, #0
   2a6a8:	bne	2a6b8 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0xb0>
   2a6ac:	mov	r0, r6
   2a6b0:	pop	{r4, r5, r6, r7, fp, pc}
   2a6b4:	mov	r7, r6
   2a6b8:	mov	r6, r7
   2a6bc:	str	r1, [r4, #160]	; 0xa0
   2a6c0:	mov	r0, r6
   2a6c4:	pop	{r4, r5, r6, r7, fp, pc}

0002a6c8 <myhtml_tokenizer_state_before_attribute_name@@Base>:
   2a6c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2a6cc:	add	fp, sp, #24
   2a6d0:	mov	r4, r3
   2a6d4:	ldrb	r3, [r2, r3]
   2a6d8:	mov	r8, r0
   2a6dc:	ldr	r0, [fp, #8]
   2a6e0:	mov	r6, r1
   2a6e4:	sub	r7, r3, #9
   2a6e8:	cmp	r7, #23
   2a6ec:	bhi	2a740 <myhtml_tokenizer_state_before_attribute_name@@Base+0x78>
   2a6f0:	movw	r1, #27
   2a6f4:	mov	r5, #1
   2a6f8:	movt	r1, #128	; 0x80
   2a6fc:	tst	r1, r5, lsl r7
   2a700:	beq	2a740 <myhtml_tokenizer_state_before_attribute_name@@Base+0x78>
   2a704:	cmp	r4, r0
   2a708:	bcs	2a740 <myhtml_tokenizer_state_before_attribute_name@@Base+0x78>
   2a70c:	add	r4, r4, #1
   2a710:	mvn	r5, #8
   2a714:	mov	r7, #1
   2a718:	b	2a724 <myhtml_tokenizer_state_before_attribute_name@@Base+0x5c>
   2a71c:	ldrb	r3, [r2, r4]
   2a720:	add	r4, r4, #1
   2a724:	uxtab	r3, r5, r3
   2a728:	cmp	r3, #23
   2a72c:	bhi	2a7d8 <myhtml_tokenizer_state_before_attribute_name@@Base+0x110>
   2a730:	tst	r1, r7, lsl r3
   2a734:	beq	2a7d8 <myhtml_tokenizer_state_before_attribute_name@@Base+0x110>
   2a738:	cmp	r4, r0
   2a73c:	bcc	2a71c <myhtml_tokenizer_state_before_attribute_name@@Base+0x54>
   2a740:	cmp	r4, r0
   2a744:	bcs	2a7e4 <myhtml_tokenizer_state_before_attribute_name@@Base+0x11c>
   2a748:	ldrb	r0, [r2, r4]
   2a74c:	cmp	r0, #47	; 0x2f
   2a750:	beq	2a7ec <myhtml_tokenizer_state_before_attribute_name@@Base+0x124>
   2a754:	cmp	r0, #62	; 0x3e
   2a758:	bne	2a804 <myhtml_tokenizer_state_before_attribute_name@@Base+0x13c>
   2a75c:	ldr	r1, [r6, #48]	; 0x30
   2a760:	mov	r0, #0
   2a764:	tst	r1, #1
   2a768:	bne	2a78c <myhtml_tokenizer_state_before_attribute_name@@Base+0xc4>
   2a76c:	ldr	r1, [r6]
   2a770:	cmp	r1, #93	; 0x5d
   2a774:	ldreq	r2, [r8, #180]	; 0xb4
   2a778:	tsteq	r2, #1
   2a77c:	beq	2a78c <myhtml_tokenizer_state_before_attribute_name@@Base+0xc4>
   2a780:	ldr	r0, [r8, #28]
   2a784:	bl	11818 <myhtml_tag_get_by_id@plt>
   2a788:	ldr	r0, [r0, #12]
   2a78c:	str	r0, [r8, #160]	; 0xa0
   2a790:	add	r4, r4, #1
   2a794:	mov	r2, r6
   2a798:	ldr	r0, [r8, #192]	; 0xc0
   2a79c:	ldr	r1, [r6, #32]
   2a7a0:	add	r0, r0, r4
   2a7a4:	sub	r0, r0, r1
   2a7a8:	mov	r1, r4
   2a7ac:	str	r0, [r6, #36]	; 0x24
   2a7b0:	mov	r0, r8
   2a7b4:	bl	11104 <myhtml_queue_add@plt>
   2a7b8:	cmp	r0, #0
   2a7bc:	movne	r0, #69	; 0x45
   2a7c0:	movne	r4, #0
   2a7c4:	strne	r0, [r8, #160]	; 0xa0
   2a7c8:	movne	r0, r4
   2a7cc:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   2a7d0:	mov	r0, r4
   2a7d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2a7d8:	sub	r4, r4, #1
   2a7dc:	cmp	r4, r0
   2a7e0:	bcc	2a748 <myhtml_tokenizer_state_before_attribute_name@@Base+0x80>
   2a7e4:	mov	r0, r4
   2a7e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2a7ec:	ldr	r0, [r6, #48]	; 0x30
   2a7f0:	add	r4, r4, #1
   2a7f4:	orr	r0, r0, #2
   2a7f8:	str	r0, [r6, #48]	; 0x30
   2a7fc:	mov	r0, r4
   2a800:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2a804:	ldr	r1, [r6, #40]	; 0x28
   2a808:	ldr	r0, [r8, #56]	; 0x38
   2a80c:	cmp	r1, #0
   2a810:	beq	2a828 <myhtml_tokenizer_state_before_attribute_name@@Base+0x160>
   2a814:	ldr	r1, [r6, #44]	; 0x2c
   2a818:	str	r0, [r1]
   2a81c:	str	r0, [r6, #44]	; 0x2c
   2a820:	str	r0, [r8, #56]	; 0x38
   2a824:	b	2a834 <myhtml_tokenizer_state_before_attribute_name@@Base+0x16c>
   2a828:	str	r0, [r6, #40]	; 0x28
   2a82c:	str	r0, [r6, #44]	; 0x2c
   2a830:	mov	r1, #0
   2a834:	mov	r3, #0
   2a838:	str	r3, [r0]
   2a83c:	str	r1, [r0, #4]
   2a840:	ldr	r1, [r8, #192]	; 0xc0
   2a844:	ldr	r0, [r8, #56]	; 0x38
   2a848:	add	r1, r1, r4
   2a84c:	str	r1, [r0, #48]	; 0x30
   2a850:	str	r3, [r0, #52]	; 0x34
   2a854:	str	r3, [r0, #56]	; 0x38
   2a858:	str	r3, [r0, #60]	; 0x3c
   2a85c:	mov	r1, #34	; 0x22
   2a860:	ldrb	r0, [r2, r4]
   2a864:	str	r1, [r8, #160]	; 0xa0
   2a868:	cmp	r0, #61	; 0x3d
   2a86c:	addeq	r4, r4, #1
   2a870:	mov	r0, r4
   2a874:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002a878 <myhtml_tokenizer_state_attribute_name@@Base>:
   2a878:	push	{r4, r5, r6, sl, fp, lr}
   2a87c:	add	fp, sp, #16
   2a880:	mov	r5, r0
   2a884:	ldr	r0, [fp, #8]
   2a888:	mov	r4, r3
   2a88c:	cmp	r3, r0
   2a890:	bcs	2a998 <myhtml_tokenizer_state_attribute_name@@Base+0x120>
   2a894:	mov	r6, r1
   2a898:	ldrb	r1, [r2, r4]
   2a89c:	sub	r1, r1, #9
   2a8a0:	cmp	r1, #53	; 0x35
   2a8a4:	bhi	2a98c <myhtml_tokenizer_state_attribute_name@@Base+0x114>
   2a8a8:	add	r3, pc, #4
   2a8ac:	ldr	r1, [r3, r1, lsl #2]
   2a8b0:	add	pc, r3, r1
   2a8b4:	andeq	r0, r0, ip, ror #1
   2a8b8:	andeq	r0, r0, ip, ror #1
   2a8bc:	ldrdeq	r0, [r0], -r8
   2a8c0:	andeq	r0, r0, ip, ror #1
   2a8c4:	andeq	r0, r0, ip, ror #1
   2a8c8:	ldrdeq	r0, [r0], -r8
   2a8cc:	ldrdeq	r0, [r0], -r8
   2a8d0:	ldrdeq	r0, [r0], -r8
   2a8d4:	ldrdeq	r0, [r0], -r8
   2a8d8:	ldrdeq	r0, [r0], -r8
   2a8dc:	ldrdeq	r0, [r0], -r8
   2a8e0:	ldrdeq	r0, [r0], -r8
   2a8e4:	ldrdeq	r0, [r0], -r8
   2a8e8:	ldrdeq	r0, [r0], -r8
   2a8ec:	ldrdeq	r0, [r0], -r8
   2a8f0:	ldrdeq	r0, [r0], -r8
   2a8f4:	ldrdeq	r0, [r0], -r8
   2a8f8:	ldrdeq	r0, [r0], -r8
   2a8fc:	ldrdeq	r0, [r0], -r8
   2a900:	ldrdeq	r0, [r0], -r8
   2a904:	ldrdeq	r0, [r0], -r8
   2a908:	ldrdeq	r0, [r0], -r8
   2a90c:	ldrdeq	r0, [r0], -r8
   2a910:	andeq	r0, r0, ip, ror #1
   2a914:	ldrdeq	r0, [r0], -r8
   2a918:	ldrdeq	r0, [r0], -r8
   2a91c:	ldrdeq	r0, [r0], -r8
   2a920:	ldrdeq	r0, [r0], -r8
   2a924:	ldrdeq	r0, [r0], -r8
   2a928:	ldrdeq	r0, [r0], -r8
   2a92c:	ldrdeq	r0, [r0], -r8
   2a930:	ldrdeq	r0, [r0], -r8
   2a934:	ldrdeq	r0, [r0], -r8
   2a938:	ldrdeq	r0, [r0], -r8
   2a93c:	ldrdeq	r0, [r0], -r8
   2a940:	ldrdeq	r0, [r0], -r8
   2a944:	ldrdeq	r0, [r0], -r8
   2a948:	ldrdeq	r0, [r0], -r8
   2a94c:	andeq	r0, r0, r8, lsl r1
   2a950:	ldrdeq	r0, [r0], -r8
   2a954:	ldrdeq	r0, [r0], -r8
   2a958:	ldrdeq	r0, [r0], -r8
   2a95c:	ldrdeq	r0, [r0], -r8
   2a960:	ldrdeq	r0, [r0], -r8
   2a964:	ldrdeq	r0, [r0], -r8
   2a968:	ldrdeq	r0, [r0], -r8
   2a96c:	ldrdeq	r0, [r0], -r8
   2a970:	ldrdeq	r0, [r0], -r8
   2a974:	ldrdeq	r0, [r0], -r8
   2a978:	ldrdeq	r0, [r0], -r8
   2a97c:	ldrdeq	r0, [r0], -r8
   2a980:	ldrdeq	r0, [r0], -r8
   2a984:	andeq	r0, r0, r0, ror #2
   2a988:	andeq	r0, r0, r0, lsl #3
   2a98c:	add	r4, r4, #1
   2a990:	cmp	r4, r0
   2a994:	bcc	2a898 <myhtml_tokenizer_state_attribute_name@@Base+0x20>
   2a998:	mov	r0, r4
   2a99c:	pop	{r4, r5, r6, sl, fp, pc}
   2a9a0:	ldr	r0, [r5, #56]	; 0x38
   2a9a4:	ldr	r1, [r5, #192]	; 0xc0
   2a9a8:	ldr	r2, [r0, #48]	; 0x30
   2a9ac:	sub	r1, r1, r2
   2a9b0:	add	r1, r1, r4
   2a9b4:	str	r1, [r0, #52]	; 0x34
   2a9b8:	mov	r0, #35	; 0x23
   2a9bc:	str	r0, [r5, #160]	; 0xa0
   2a9c0:	add	r4, r4, #1
   2a9c4:	mov	r0, r4
   2a9c8:	pop	{r4, r5, r6, sl, fp, pc}
   2a9cc:	ldr	r0, [r5, #56]	; 0x38
   2a9d0:	ldr	r1, [r5, #192]	; 0xc0
   2a9d4:	ldr	r2, [r0, #48]	; 0x30
   2a9d8:	sub	r1, r1, r2
   2a9dc:	add	r1, r1, r4
   2a9e0:	str	r1, [r0, #52]	; 0x34
   2a9e4:	ldr	r0, [r6, #48]	; 0x30
   2a9e8:	orr	r0, r0, #2
   2a9ec:	str	r0, [r6, #48]	; 0x30
   2a9f0:	mov	r0, #33	; 0x21
   2a9f4:	str	r0, [r5, #160]	; 0xa0
   2a9f8:	ldr	r0, [r5, #8]
   2a9fc:	ldr	r1, [r0, #16]
   2aa00:	bl	11740 <myhtml_token_attr_create@plt>
   2aa04:	cmp	r0, #0
   2aa08:	str	r0, [r5, #56]	; 0x38
   2aa0c:	bne	2a9c0 <myhtml_tokenizer_state_attribute_name@@Base+0x148>
   2aa10:	b	2aad4 <myhtml_tokenizer_state_attribute_name@@Base+0x25c>
   2aa14:	ldr	r0, [r5, #56]	; 0x38
   2aa18:	ldr	r1, [r5, #192]	; 0xc0
   2aa1c:	ldr	r2, [r0, #48]	; 0x30
   2aa20:	sub	r1, r1, r2
   2aa24:	add	r1, r1, r4
   2aa28:	str	r1, [r0, #52]	; 0x34
   2aa2c:	mov	r0, #36	; 0x24
   2aa30:	b	2a9bc <myhtml_tokenizer_state_attribute_name@@Base+0x144>
   2aa34:	ldr	r1, [r5, #56]	; 0x38
   2aa38:	ldr	r0, [r5, #192]	; 0xc0
   2aa3c:	ldr	r2, [r1, #48]	; 0x30
   2aa40:	sub	r2, r0, r2
   2aa44:	add	r2, r2, r4
   2aa48:	str	r2, [r1, #52]	; 0x34
   2aa4c:	ldr	r1, [r6, #48]	; 0x30
   2aa50:	tst	r1, #1
   2aa54:	bne	2aa84 <myhtml_tokenizer_state_attribute_name@@Base+0x20c>
   2aa58:	ldr	r1, [r6]
   2aa5c:	cmp	r1, #93	; 0x5d
   2aa60:	ldreq	r2, [r5, #180]	; 0xb4
   2aa64:	tsteq	r2, #1
   2aa68:	beq	2aa84 <myhtml_tokenizer_state_attribute_name@@Base+0x20c>
   2aa6c:	ldr	r0, [r5, #28]
   2aa70:	bl	11818 <myhtml_tag_get_by_id@plt>
   2aa74:	ldr	r0, [r0, #12]
   2aa78:	str	r0, [r5, #160]	; 0xa0
   2aa7c:	ldr	r0, [r5, #192]	; 0xc0
   2aa80:	b	2aa8c <myhtml_tokenizer_state_attribute_name@@Base+0x214>
   2aa84:	mov	r1, #0
   2aa88:	str	r1, [r5, #160]	; 0xa0
   2aa8c:	ldr	r1, [r6, #32]
   2aa90:	mov	r2, r6
   2aa94:	sub	r0, r0, r1
   2aa98:	add	r0, r0, r4
   2aa9c:	add	r4, r4, #1
   2aaa0:	add	r0, r0, #1
   2aaa4:	mov	r1, r4
   2aaa8:	str	r0, [r6, #36]	; 0x24
   2aaac:	mov	r0, r5
   2aab0:	bl	11104 <myhtml_queue_add@plt>
   2aab4:	cmp	r0, #0
   2aab8:	bne	2aad4 <myhtml_tokenizer_state_attribute_name@@Base+0x25c>
   2aabc:	ldr	r0, [r5, #8]
   2aac0:	ldr	r1, [r0, #16]
   2aac4:	bl	11740 <myhtml_token_attr_create@plt>
   2aac8:	cmp	r0, #0
   2aacc:	str	r0, [r5, #56]	; 0x38
   2aad0:	bne	2a998 <myhtml_tokenizer_state_attribute_name@@Base+0x120>
   2aad4:	mov	r0, #69	; 0x45
   2aad8:	mov	r4, #0
   2aadc:	str	r0, [r5, #160]	; 0xa0
   2aae0:	mov	r0, r4
   2aae4:	pop	{r4, r5, r6, sl, fp, pc}

0002aae8 <myhtml_tokenizer_state_after_attribute_name@@Base>:
   2aae8:	push	{r4, r5, r6, sl, fp, lr}
   2aaec:	add	fp, sp, #16
   2aaf0:	mov	r5, r0
   2aaf4:	ldr	r0, [fp, #8]
   2aaf8:	mov	r4, r3
   2aafc:	cmp	r3, r0
   2ab00:	bcs	2ac08 <myhtml_tokenizer_state_after_attribute_name@@Base+0x120>
   2ab04:	mov	r6, r1
   2ab08:	ldrb	r1, [r2, r4]
   2ab0c:	sub	r1, r1, #9
   2ab10:	cmp	r1, #53	; 0x35
   2ab14:	bhi	2ac10 <myhtml_tokenizer_state_after_attribute_name@@Base+0x128>
   2ab18:	add	r3, pc, #4
   2ab1c:	ldr	r1, [r3, r1, lsl #2]
   2ab20:	add	pc, r3, r1
   2ab24:	ldrdeq	r0, [r0], -r8
   2ab28:	ldrdeq	r0, [r0], -r8
   2ab2c:	andeq	r0, r0, ip, ror #1
   2ab30:	ldrdeq	r0, [r0], -r8
   2ab34:	ldrdeq	r0, [r0], -r8
   2ab38:	andeq	r0, r0, ip, ror #1
   2ab3c:	andeq	r0, r0, ip, ror #1
   2ab40:	andeq	r0, r0, ip, ror #1
   2ab44:	andeq	r0, r0, ip, ror #1
   2ab48:	andeq	r0, r0, ip, ror #1
   2ab4c:	andeq	r0, r0, ip, ror #1
   2ab50:	andeq	r0, r0, ip, ror #1
   2ab54:	andeq	r0, r0, ip, ror #1
   2ab58:	andeq	r0, r0, ip, ror #1
   2ab5c:	andeq	r0, r0, ip, ror #1
   2ab60:	andeq	r0, r0, ip, ror #1
   2ab64:	andeq	r0, r0, ip, ror #1
   2ab68:	andeq	r0, r0, ip, ror #1
   2ab6c:	andeq	r0, r0, ip, ror #1
   2ab70:	andeq	r0, r0, ip, ror #1
   2ab74:	andeq	r0, r0, ip, ror #1
   2ab78:	andeq	r0, r0, ip, ror #1
   2ab7c:	andeq	r0, r0, ip, ror #1
   2ab80:	ldrdeq	r0, [r0], -r8
   2ab84:	andeq	r0, r0, ip, ror #1
   2ab88:	andeq	r0, r0, ip, ror #1
   2ab8c:	andeq	r0, r0, ip, ror #1
   2ab90:	andeq	r0, r0, ip, ror #1
   2ab94:	andeq	r0, r0, ip, ror #1
   2ab98:	andeq	r0, r0, ip, ror #1
   2ab9c:	andeq	r0, r0, ip, ror #1
   2aba0:	andeq	r0, r0, ip, ror #1
   2aba4:	andeq	r0, r0, ip, ror #1
   2aba8:	andeq	r0, r0, ip, ror #1
   2abac:	andeq	r0, r0, ip, ror #1
   2abb0:	andeq	r0, r0, ip, ror #1
   2abb4:	andeq	r0, r0, ip, ror #1
   2abb8:	andeq	r0, r0, ip, ror #1
   2abbc:	andeq	r0, r0, ip, ror #1
   2abc0:	andeq	r0, r0, ip, ror #1
   2abc4:	andeq	r0, r0, ip, ror #1
   2abc8:	andeq	r0, r0, ip, ror #1
   2abcc:	andeq	r0, r0, ip, ror #1
   2abd0:	andeq	r0, r0, ip, ror #1
   2abd4:	andeq	r0, r0, ip, ror #1
   2abd8:	andeq	r0, r0, ip, ror #1
   2abdc:	andeq	r0, r0, ip, ror #1
   2abe0:	andeq	r0, r0, ip, ror #1
   2abe4:	andeq	r0, r0, ip, ror #1
   2abe8:	andeq	r0, r0, ip, ror #1
   2abec:	andeq	r0, r0, ip, ror #1
   2abf0:	andeq	r0, r0, ip, ror #1
   2abf4:	andeq	r0, r0, r4, lsr #2
   2abf8:	andeq	r0, r0, r8, lsr r1
   2abfc:	add	r4, r4, #1
   2ac00:	cmp	r4, r0
   2ac04:	bcc	2ab08 <myhtml_tokenizer_state_after_attribute_name@@Base+0x20>
   2ac08:	mov	r0, r4
   2ac0c:	pop	{r4, r5, r6, sl, fp, pc}
   2ac10:	ldr	r0, [r5, #8]
   2ac14:	ldr	r1, [r0, #16]
   2ac18:	bl	11740 <myhtml_token_attr_create@plt>
   2ac1c:	cmp	r0, #0
   2ac20:	str	r0, [r5, #56]	; 0x38
   2ac24:	beq	2acdc <myhtml_tokenizer_state_after_attribute_name@@Base+0x1f4>
   2ac28:	ldr	r1, [r6, #40]	; 0x28
   2ac2c:	cmp	r1, #0
   2ac30:	beq	2acf0 <myhtml_tokenizer_state_after_attribute_name@@Base+0x208>
   2ac34:	ldr	r1, [r6, #44]	; 0x2c
   2ac38:	str	r0, [r1]
   2ac3c:	str	r0, [r6, #44]	; 0x2c
   2ac40:	str	r0, [r5, #56]	; 0x38
   2ac44:	b	2ad00 <myhtml_tokenizer_state_after_attribute_name@@Base+0x218>
   2ac48:	mov	r0, #36	; 0x24
   2ac4c:	add	r4, r4, #1
   2ac50:	str	r0, [r5, #160]	; 0xa0
   2ac54:	mov	r0, r4
   2ac58:	pop	{r4, r5, r6, sl, fp, pc}
   2ac5c:	ldr	r1, [r6, #48]	; 0x30
   2ac60:	mov	r0, #0
   2ac64:	tst	r1, #1
   2ac68:	bne	2ac8c <myhtml_tokenizer_state_after_attribute_name@@Base+0x1a4>
   2ac6c:	ldr	r1, [r6]
   2ac70:	cmp	r1, #93	; 0x5d
   2ac74:	ldreq	r2, [r5, #180]	; 0xb4
   2ac78:	tsteq	r2, #1
   2ac7c:	beq	2ac8c <myhtml_tokenizer_state_after_attribute_name@@Base+0x1a4>
   2ac80:	ldr	r0, [r5, #28]
   2ac84:	bl	11818 <myhtml_tag_get_by_id@plt>
   2ac88:	ldr	r0, [r0, #12]
   2ac8c:	str	r0, [r5, #160]	; 0xa0
   2ac90:	mov	r2, r6
   2ac94:	ldr	r0, [r5, #192]	; 0xc0
   2ac98:	ldr	r1, [r6, #32]
   2ac9c:	sub	r0, r0, r1
   2aca0:	add	r0, r0, r4
   2aca4:	add	r4, r4, #1
   2aca8:	add	r0, r0, #1
   2acac:	mov	r1, r4
   2acb0:	str	r0, [r6, #36]	; 0x24
   2acb4:	mov	r0, r5
   2acb8:	bl	11104 <myhtml_queue_add@plt>
   2acbc:	cmp	r0, #0
   2acc0:	bne	2acdc <myhtml_tokenizer_state_after_attribute_name@@Base+0x1f4>
   2acc4:	ldr	r0, [r5, #8]
   2acc8:	ldr	r1, [r0, #16]
   2accc:	bl	11740 <myhtml_token_attr_create@plt>
   2acd0:	cmp	r0, #0
   2acd4:	str	r0, [r5, #56]	; 0x38
   2acd8:	bne	2ac08 <myhtml_tokenizer_state_after_attribute_name@@Base+0x120>
   2acdc:	mov	r0, #69	; 0x45
   2ace0:	mov	r4, #0
   2ace4:	str	r0, [r5, #160]	; 0xa0
   2ace8:	mov	r0, r4
   2acec:	pop	{r4, r5, r6, sl, fp, pc}
   2acf0:	str	r0, [r6, #40]	; 0x28
   2acf4:	str	r0, [r6, #44]	; 0x2c
   2acf8:	str	r0, [r5, #56]	; 0x38
   2acfc:	mov	r1, #0
   2ad00:	mov	r2, #0
   2ad04:	str	r2, [r0]
   2ad08:	str	r1, [r0, #4]
   2ad0c:	ldr	r1, [r5, #192]	; 0xc0
   2ad10:	ldr	r0, [r5, #56]	; 0x38
   2ad14:	add	r1, r1, r4
   2ad18:	str	r1, [r0, #48]	; 0x30
   2ad1c:	str	r2, [r0, #52]	; 0x34
   2ad20:	str	r2, [r0, #56]	; 0x38
   2ad24:	str	r2, [r0, #60]	; 0x3c
   2ad28:	mov	r0, #34	; 0x22
   2ad2c:	str	r0, [r5, #160]	; 0xa0
   2ad30:	mov	r0, r4
   2ad34:	pop	{r4, r5, r6, sl, fp, pc}

0002ad38 <myhtml_tokenizer_state_before_attribute_value@@Base>:
   2ad38:	push	{r4, r5, r6, sl, fp, lr}
   2ad3c:	add	fp, sp, #16
   2ad40:	mov	r5, r0
   2ad44:	ldr	r0, [fp, #8]
   2ad48:	mov	r4, r3
   2ad4c:	cmp	r3, r0
   2ad50:	bcs	2ae58 <myhtml_tokenizer_state_before_attribute_value@@Base+0x120>
   2ad54:	mov	r6, r1
   2ad58:	ldrb	r1, [r2, r4]
   2ad5c:	sub	r1, r1, #9
   2ad60:	cmp	r1, #53	; 0x35
   2ad64:	bhi	2ae60 <myhtml_tokenizer_state_before_attribute_value@@Base+0x128>
   2ad68:	add	r3, pc, #4
   2ad6c:	ldr	r1, [r3, r1, lsl #2]
   2ad70:	add	pc, r3, r1
   2ad74:	ldrdeq	r0, [r0], -r8
   2ad78:	ldrdeq	r0, [r0], -r8
   2ad7c:	andeq	r0, r0, ip, ror #1
   2ad80:	ldrdeq	r0, [r0], -r8
   2ad84:	ldrdeq	r0, [r0], -r8
   2ad88:	andeq	r0, r0, ip, ror #1
   2ad8c:	andeq	r0, r0, ip, ror #1
   2ad90:	andeq	r0, r0, ip, ror #1
   2ad94:	andeq	r0, r0, ip, ror #1
   2ad98:	andeq	r0, r0, ip, ror #1
   2ad9c:	andeq	r0, r0, ip, ror #1
   2ada0:	andeq	r0, r0, ip, ror #1
   2ada4:	andeq	r0, r0, ip, ror #1
   2ada8:	andeq	r0, r0, ip, ror #1
   2adac:	andeq	r0, r0, ip, ror #1
   2adb0:	andeq	r0, r0, ip, ror #1
   2adb4:	andeq	r0, r0, ip, ror #1
   2adb8:	andeq	r0, r0, ip, ror #1
   2adbc:	andeq	r0, r0, ip, ror #1
   2adc0:	andeq	r0, r0, ip, ror #1
   2adc4:	andeq	r0, r0, ip, ror #1
   2adc8:	andeq	r0, r0, ip, ror #1
   2adcc:	andeq	r0, r0, ip, ror #1
   2add0:	ldrdeq	r0, [r0], -r8
   2add4:	andeq	r0, r0, ip, ror #1
   2add8:	strdeq	r0, [r0], -r4
   2addc:	andeq	r0, r0, ip, ror #1
   2ade0:	andeq	r0, r0, ip, ror #1
   2ade4:	andeq	r0, r0, ip, ror #1
   2ade8:	andeq	r0, r0, ip, ror #1
   2adec:	andeq	r0, r0, r0, lsl #2
   2adf0:	andeq	r0, r0, ip, ror #1
   2adf4:	andeq	r0, r0, ip, ror #1
   2adf8:	andeq	r0, r0, ip, ror #1
   2adfc:	andeq	r0, r0, ip, ror #1
   2ae00:	andeq	r0, r0, ip, ror #1
   2ae04:	andeq	r0, r0, ip, ror #1
   2ae08:	andeq	r0, r0, ip, ror #1
   2ae0c:	andeq	r0, r0, ip, ror #1
   2ae10:	andeq	r0, r0, ip, ror #1
   2ae14:	andeq	r0, r0, ip, ror #1
   2ae18:	andeq	r0, r0, ip, ror #1
   2ae1c:	andeq	r0, r0, ip, ror #1
   2ae20:	andeq	r0, r0, ip, ror #1
   2ae24:	andeq	r0, r0, ip, ror #1
   2ae28:	andeq	r0, r0, ip, ror #1
   2ae2c:	andeq	r0, r0, ip, ror #1
   2ae30:	andeq	r0, r0, ip, ror #1
   2ae34:	andeq	r0, r0, ip, ror #1
   2ae38:	andeq	r0, r0, ip, ror #1
   2ae3c:	andeq	r0, r0, ip, ror #1
   2ae40:	andeq	r0, r0, ip, ror #1
   2ae44:	andeq	r0, r0, ip, ror #1
   2ae48:	andeq	r0, r0, r4, lsr #2
   2ae4c:	add	r4, r4, #1
   2ae50:	cmp	r4, r0
   2ae54:	bcc	2ad58 <myhtml_tokenizer_state_before_attribute_value@@Base+0x20>
   2ae58:	mov	r0, r4
   2ae5c:	pop	{r4, r5, r6, sl, fp, pc}
   2ae60:	mov	r0, #39	; 0x27
   2ae64:	b	2ae7c <myhtml_tokenizer_state_before_attribute_value@@Base+0x144>
   2ae68:	add	r4, r4, #1
   2ae6c:	mov	r0, #37	; 0x25
   2ae70:	b	2ae7c <myhtml_tokenizer_state_before_attribute_value@@Base+0x144>
   2ae74:	add	r4, r4, #1
   2ae78:	mov	r0, #38	; 0x26
   2ae7c:	str	r0, [r5, #160]	; 0xa0
   2ae80:	ldr	r1, [r5, #192]	; 0xc0
   2ae84:	ldr	r0, [r5, #56]	; 0x38
   2ae88:	add	r1, r1, r4
   2ae8c:	str	r1, [r0, #56]	; 0x38
   2ae90:	mov	r0, r4
   2ae94:	pop	{r4, r5, r6, sl, fp, pc}
   2ae98:	ldr	r1, [r6, #48]	; 0x30
   2ae9c:	mov	r0, #0
   2aea0:	tst	r1, #1
   2aea4:	bne	2aec8 <myhtml_tokenizer_state_before_attribute_value@@Base+0x190>
   2aea8:	ldr	r1, [r6]
   2aeac:	cmp	r1, #93	; 0x5d
   2aeb0:	ldreq	r2, [r5, #180]	; 0xb4
   2aeb4:	tsteq	r2, #1
   2aeb8:	beq	2aec8 <myhtml_tokenizer_state_before_attribute_value@@Base+0x190>
   2aebc:	ldr	r0, [r5, #28]
   2aec0:	bl	11818 <myhtml_tag_get_by_id@plt>
   2aec4:	ldr	r0, [r0, #12]
   2aec8:	str	r0, [r5, #160]	; 0xa0
   2aecc:	mov	r2, r6
   2aed0:	ldr	r0, [r5, #192]	; 0xc0
   2aed4:	ldr	r1, [r6, #32]
   2aed8:	sub	r0, r0, r1
   2aedc:	add	r0, r0, r4
   2aee0:	add	r4, r4, #1
   2aee4:	add	r0, r0, #1
   2aee8:	mov	r1, r4
   2aeec:	str	r0, [r6, #36]	; 0x24
   2aef0:	mov	r0, r5
   2aef4:	bl	11104 <myhtml_queue_add@plt>
   2aef8:	cmp	r0, #0
   2aefc:	bne	2af18 <myhtml_tokenizer_state_before_attribute_value@@Base+0x1e0>
   2af00:	ldr	r0, [r5, #8]
   2af04:	ldr	r1, [r0, #16]
   2af08:	bl	11740 <myhtml_token_attr_create@plt>
   2af0c:	cmp	r0, #0
   2af10:	str	r0, [r5, #56]	; 0x38
   2af14:	bne	2ae58 <myhtml_tokenizer_state_before_attribute_value@@Base+0x120>
   2af18:	mov	r0, #69	; 0x45
   2af1c:	mov	r4, #0
   2af20:	str	r0, [r5, #160]	; 0xa0
   2af24:	mov	r0, r4
   2af28:	pop	{r4, r5, r6, sl, fp, pc}

0002af2c <myhtml_tokenizer_state_attribute_value_double_quoted@@Base>:
   2af2c:	push	{r4, r5, fp, lr}
   2af30:	add	fp, sp, #8
   2af34:	mov	r5, r0
   2af38:	ldr	r0, [fp, #8]
   2af3c:	mov	r4, r3
   2af40:	cmp	r3, r0
   2af44:	bcs	2af60 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x34>
   2af48:	ldrb	r1, [r2, r4]
   2af4c:	cmp	r1, #34	; 0x22
   2af50:	beq	2af68 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x3c>
   2af54:	add	r4, r4, #1
   2af58:	cmp	r4, r0
   2af5c:	bcc	2af48 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x1c>
   2af60:	mov	r0, r4
   2af64:	pop	{r4, r5, fp, pc}
   2af68:	ldr	r0, [r5, #56]	; 0x38
   2af6c:	ldr	r1, [r5, #192]	; 0xc0
   2af70:	ldr	r2, [r0, #56]	; 0x38
   2af74:	sub	r1, r1, r2
   2af78:	add	r1, r1, r4
   2af7c:	str	r1, [r0, #60]	; 0x3c
   2af80:	ldr	r0, [r5, #8]
   2af84:	ldr	r1, [r0, #16]
   2af88:	bl	11740 <myhtml_token_attr_create@plt>
   2af8c:	cmp	r0, #0
   2af90:	str	r0, [r5, #56]	; 0x38
   2af94:	movne	r0, #41	; 0x29
   2af98:	addne	r4, r4, #1
   2af9c:	strne	r0, [r5, #160]	; 0xa0
   2afa0:	movne	r0, r4
   2afa4:	popne	{r4, r5, fp, pc}
   2afa8:	mov	r0, #69	; 0x45
   2afac:	mov	r4, #0
   2afb0:	str	r0, [r5, #160]	; 0xa0
   2afb4:	mov	r0, r4
   2afb8:	pop	{r4, r5, fp, pc}

0002afbc <myhtml_tokenizer_state_attribute_value_single_quoted@@Base>:
   2afbc:	push	{r4, r5, fp, lr}
   2afc0:	add	fp, sp, #8
   2afc4:	mov	r5, r0
   2afc8:	ldr	r0, [fp, #8]
   2afcc:	mov	r4, r3
   2afd0:	cmp	r3, r0
   2afd4:	bcs	2aff0 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x34>
   2afd8:	ldrb	r1, [r2, r4]
   2afdc:	cmp	r1, #39	; 0x27
   2afe0:	beq	2aff8 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x3c>
   2afe4:	add	r4, r4, #1
   2afe8:	cmp	r4, r0
   2afec:	bcc	2afd8 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x1c>
   2aff0:	mov	r0, r4
   2aff4:	pop	{r4, r5, fp, pc}
   2aff8:	ldr	r0, [r5, #56]	; 0x38
   2affc:	ldr	r1, [r5, #192]	; 0xc0
   2b000:	ldr	r2, [r0, #56]	; 0x38
   2b004:	sub	r1, r1, r2
   2b008:	add	r1, r1, r4
   2b00c:	str	r1, [r0, #60]	; 0x3c
   2b010:	ldr	r0, [r5, #8]
   2b014:	ldr	r1, [r0, #16]
   2b018:	bl	11740 <myhtml_token_attr_create@plt>
   2b01c:	cmp	r0, #0
   2b020:	str	r0, [r5, #56]	; 0x38
   2b024:	movne	r0, #41	; 0x29
   2b028:	addne	r4, r4, #1
   2b02c:	strne	r0, [r5, #160]	; 0xa0
   2b030:	movne	r0, r4
   2b034:	popne	{r4, r5, fp, pc}
   2b038:	mov	r0, #69	; 0x45
   2b03c:	mov	r4, #0
   2b040:	str	r0, [r5, #160]	; 0xa0
   2b044:	mov	r0, r4
   2b048:	pop	{r4, r5, fp, pc}

0002b04c <myhtml_tokenizer_state_attribute_value_unquoted@@Base>:
   2b04c:	push	{r4, r5, r6, sl, fp, lr}
   2b050:	add	fp, sp, #16
   2b054:	mov	r5, r0
   2b058:	ldr	r0, [fp, #8]
   2b05c:	mov	r4, r3
   2b060:	cmp	r3, r0
   2b064:	bcs	2b16c <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x120>
   2b068:	mov	r6, r1
   2b06c:	ldrb	r1, [r2, r4]
   2b070:	sub	r1, r1, #9
   2b074:	cmp	r1, #53	; 0x35
   2b078:	bhi	2b160 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x114>
   2b07c:	add	r3, pc, #4
   2b080:	ldr	r1, [r3, r1, lsl #2]
   2b084:	add	pc, r3, r1
   2b088:	andeq	r0, r0, ip, ror #1
   2b08c:	andeq	r0, r0, ip, ror #1
   2b090:	ldrdeq	r0, [r0], -r8
   2b094:	andeq	r0, r0, ip, ror #1
   2b098:	andeq	r0, r0, ip, ror #1
   2b09c:	ldrdeq	r0, [r0], -r8
   2b0a0:	ldrdeq	r0, [r0], -r8
   2b0a4:	ldrdeq	r0, [r0], -r8
   2b0a8:	ldrdeq	r0, [r0], -r8
   2b0ac:	ldrdeq	r0, [r0], -r8
   2b0b0:	ldrdeq	r0, [r0], -r8
   2b0b4:	ldrdeq	r0, [r0], -r8
   2b0b8:	ldrdeq	r0, [r0], -r8
   2b0bc:	ldrdeq	r0, [r0], -r8
   2b0c0:	ldrdeq	r0, [r0], -r8
   2b0c4:	ldrdeq	r0, [r0], -r8
   2b0c8:	ldrdeq	r0, [r0], -r8
   2b0cc:	ldrdeq	r0, [r0], -r8
   2b0d0:	ldrdeq	r0, [r0], -r8
   2b0d4:	ldrdeq	r0, [r0], -r8
   2b0d8:	ldrdeq	r0, [r0], -r8
   2b0dc:	ldrdeq	r0, [r0], -r8
   2b0e0:	ldrdeq	r0, [r0], -r8
   2b0e4:	andeq	r0, r0, ip, ror #1
   2b0e8:	ldrdeq	r0, [r0], -r8
   2b0ec:	ldrdeq	r0, [r0], -r8
   2b0f0:	ldrdeq	r0, [r0], -r8
   2b0f4:	ldrdeq	r0, [r0], -r8
   2b0f8:	ldrdeq	r0, [r0], -r8
   2b0fc:	ldrdeq	r0, [r0], -r8
   2b100:	ldrdeq	r0, [r0], -r8
   2b104:	ldrdeq	r0, [r0], -r8
   2b108:	ldrdeq	r0, [r0], -r8
   2b10c:	ldrdeq	r0, [r0], -r8
   2b110:	ldrdeq	r0, [r0], -r8
   2b114:	ldrdeq	r0, [r0], -r8
   2b118:	ldrdeq	r0, [r0], -r8
   2b11c:	ldrdeq	r0, [r0], -r8
   2b120:	ldrdeq	r0, [r0], -r8
   2b124:	ldrdeq	r0, [r0], -r8
   2b128:	ldrdeq	r0, [r0], -r8
   2b12c:	ldrdeq	r0, [r0], -r8
   2b130:	ldrdeq	r0, [r0], -r8
   2b134:	ldrdeq	r0, [r0], -r8
   2b138:	ldrdeq	r0, [r0], -r8
   2b13c:	ldrdeq	r0, [r0], -r8
   2b140:	ldrdeq	r0, [r0], -r8
   2b144:	ldrdeq	r0, [r0], -r8
   2b148:	ldrdeq	r0, [r0], -r8
   2b14c:	ldrdeq	r0, [r0], -r8
   2b150:	ldrdeq	r0, [r0], -r8
   2b154:	ldrdeq	r0, [r0], -r8
   2b158:	ldrdeq	r0, [r0], -r8
   2b15c:	andeq	r0, r0, r0, lsr r1
   2b160:	add	r4, r4, #1
   2b164:	cmp	r4, r0
   2b168:	bcc	2b06c <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x20>
   2b16c:	mov	r0, r4
   2b170:	pop	{r4, r5, r6, sl, fp, pc}
   2b174:	mov	r0, #33	; 0x21
   2b178:	str	r0, [r5, #160]	; 0xa0
   2b17c:	ldr	r0, [r5, #56]	; 0x38
   2b180:	ldr	r1, [r5, #192]	; 0xc0
   2b184:	ldr	r2, [r0, #56]	; 0x38
   2b188:	sub	r1, r1, r2
   2b18c:	add	r1, r1, r4
   2b190:	str	r1, [r0, #60]	; 0x3c
   2b194:	ldr	r0, [r5, #8]
   2b198:	ldr	r1, [r0, #16]
   2b19c:	bl	11740 <myhtml_token_attr_create@plt>
   2b1a0:	cmp	r0, #0
   2b1a4:	str	r0, [r5, #56]	; 0x38
   2b1a8:	addne	r4, r4, #1
   2b1ac:	movne	r0, r4
   2b1b0:	popne	{r4, r5, r6, sl, fp, pc}
   2b1b4:	b	2b258 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x20c>
   2b1b8:	ldr	r1, [r5, #56]	; 0x38
   2b1bc:	ldr	r0, [r5, #192]	; 0xc0
   2b1c0:	ldr	r2, [r1, #56]	; 0x38
   2b1c4:	sub	r2, r0, r2
   2b1c8:	add	r2, r2, r4
   2b1cc:	str	r2, [r1, #60]	; 0x3c
   2b1d0:	ldr	r1, [r6, #48]	; 0x30
   2b1d4:	tst	r1, #1
   2b1d8:	bne	2b208 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x1bc>
   2b1dc:	ldr	r1, [r6]
   2b1e0:	cmp	r1, #93	; 0x5d
   2b1e4:	ldreq	r2, [r5, #180]	; 0xb4
   2b1e8:	tsteq	r2, #1
   2b1ec:	beq	2b208 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x1bc>
   2b1f0:	ldr	r0, [r5, #28]
   2b1f4:	bl	11818 <myhtml_tag_get_by_id@plt>
   2b1f8:	ldr	r0, [r0, #12]
   2b1fc:	str	r0, [r5, #160]	; 0xa0
   2b200:	ldr	r0, [r5, #192]	; 0xc0
   2b204:	b	2b210 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x1c4>
   2b208:	mov	r1, #0
   2b20c:	str	r1, [r5, #160]	; 0xa0
   2b210:	ldr	r1, [r6, #32]
   2b214:	mov	r2, r6
   2b218:	sub	r0, r0, r1
   2b21c:	add	r0, r0, r4
   2b220:	add	r4, r4, #1
   2b224:	add	r0, r0, #1
   2b228:	mov	r1, r4
   2b22c:	str	r0, [r6, #36]	; 0x24
   2b230:	mov	r0, r5
   2b234:	bl	11104 <myhtml_queue_add@plt>
   2b238:	cmp	r0, #0
   2b23c:	bne	2b258 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x20c>
   2b240:	ldr	r0, [r5, #8]
   2b244:	ldr	r1, [r0, #16]
   2b248:	bl	11740 <myhtml_token_attr_create@plt>
   2b24c:	cmp	r0, #0
   2b250:	str	r0, [r5, #56]	; 0x38
   2b254:	bne	2b16c <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x120>
   2b258:	mov	r0, #69	; 0x45
   2b25c:	mov	r4, #0
   2b260:	str	r0, [r5, #160]	; 0xa0
   2b264:	mov	r0, r4
   2b268:	pop	{r4, r5, r6, sl, fp, pc}

0002b26c <myhtml_tokenizer_state_after_attribute_value_quoted@@Base>:
   2b26c:	push	{r4, r5, r6, sl, fp, lr}
   2b270:	add	fp, sp, #16
   2b274:	mov	r5, r0
   2b278:	ldrb	r0, [r2, r3]
   2b27c:	mov	r4, r3
   2b280:	sub	r0, r0, #9
   2b284:	cmp	r0, #53	; 0x35
   2b288:	bhi	2b388 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x11c>
   2b28c:	mov	r6, r1
   2b290:	add	r1, pc, #4
   2b294:	ldr	r0, [r1, r0, lsl #2]
   2b298:	add	pc, r1, r0
   2b29c:	ldrdeq	r0, [r0], -r8
   2b2a0:	ldrdeq	r0, [r0], -r8
   2b2a4:	andeq	r0, r0, ip, ror #1
   2b2a8:	ldrdeq	r0, [r0], -r8
   2b2ac:	ldrdeq	r0, [r0], -r8
   2b2b0:	andeq	r0, r0, ip, ror #1
   2b2b4:	andeq	r0, r0, ip, ror #1
   2b2b8:	andeq	r0, r0, ip, ror #1
   2b2bc:	andeq	r0, r0, ip, ror #1
   2b2c0:	andeq	r0, r0, ip, ror #1
   2b2c4:	andeq	r0, r0, ip, ror #1
   2b2c8:	andeq	r0, r0, ip, ror #1
   2b2cc:	andeq	r0, r0, ip, ror #1
   2b2d0:	andeq	r0, r0, ip, ror #1
   2b2d4:	andeq	r0, r0, ip, ror #1
   2b2d8:	andeq	r0, r0, ip, ror #1
   2b2dc:	andeq	r0, r0, ip, ror #1
   2b2e0:	andeq	r0, r0, ip, ror #1
   2b2e4:	andeq	r0, r0, ip, ror #1
   2b2e8:	andeq	r0, r0, ip, ror #1
   2b2ec:	andeq	r0, r0, ip, ror #1
   2b2f0:	andeq	r0, r0, ip, ror #1
   2b2f4:	andeq	r0, r0, ip, ror #1
   2b2f8:	ldrdeq	r0, [r0], -r8
   2b2fc:	andeq	r0, r0, ip, ror #1
   2b300:	andeq	r0, r0, ip, ror #1
   2b304:	andeq	r0, r0, ip, ror #1
   2b308:	andeq	r0, r0, ip, ror #1
   2b30c:	andeq	r0, r0, ip, ror #1
   2b310:	andeq	r0, r0, ip, ror #1
   2b314:	andeq	r0, r0, ip, ror #1
   2b318:	andeq	r0, r0, ip, ror #1
   2b31c:	andeq	r0, r0, ip, ror #1
   2b320:	andeq	r0, r0, ip, ror #1
   2b324:	andeq	r0, r0, ip, ror #1
   2b328:	andeq	r0, r0, ip, ror #1
   2b32c:	andeq	r0, r0, ip, ror #1
   2b330:	andeq	r0, r0, ip, ror #1
   2b334:	strdeq	r0, [r0], -ip
   2b338:	andeq	r0, r0, ip, ror #1
   2b33c:	andeq	r0, r0, ip, ror #1
   2b340:	andeq	r0, r0, ip, ror #1
   2b344:	andeq	r0, r0, ip, ror #1
   2b348:	andeq	r0, r0, ip, ror #1
   2b34c:	andeq	r0, r0, ip, ror #1
   2b350:	andeq	r0, r0, ip, ror #1
   2b354:	andeq	r0, r0, ip, ror #1
   2b358:	andeq	r0, r0, ip, ror #1
   2b35c:	andeq	r0, r0, ip, ror #1
   2b360:	andeq	r0, r0, ip, ror #1
   2b364:	andeq	r0, r0, ip, ror #1
   2b368:	andeq	r0, r0, ip, ror #1
   2b36c:	andeq	r0, r0, ip, ror #1
   2b370:	andeq	r0, r0, r4, lsl #2
   2b374:	mov	r0, #33	; 0x21
   2b378:	add	r4, r4, #1
   2b37c:	str	r0, [r5, #160]	; 0xa0
   2b380:	mov	r0, r4
   2b384:	pop	{r4, r5, r6, sl, fp, pc}
   2b388:	mov	r0, #33	; 0x21
   2b38c:	str	r0, [r5, #160]	; 0xa0
   2b390:	mov	r0, r4
   2b394:	pop	{r4, r5, r6, sl, fp, pc}
   2b398:	mov	r0, #42	; 0x2a
   2b39c:	b	2b378 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x10c>
   2b3a0:	ldr	r1, [r6, #48]	; 0x30
   2b3a4:	mov	r0, #0
   2b3a8:	tst	r1, #1
   2b3ac:	bne	2b3d0 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x164>
   2b3b0:	ldr	r1, [r6]
   2b3b4:	cmp	r1, #93	; 0x5d
   2b3b8:	ldreq	r2, [r5, #180]	; 0xb4
   2b3bc:	tsteq	r2, #1
   2b3c0:	beq	2b3d0 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x164>
   2b3c4:	ldr	r0, [r5, #28]
   2b3c8:	bl	11818 <myhtml_tag_get_by_id@plt>
   2b3cc:	ldr	r0, [r0, #12]
   2b3d0:	str	r0, [r5, #160]	; 0xa0
   2b3d4:	add	r4, r4, #1
   2b3d8:	mov	r2, r6
   2b3dc:	ldr	r0, [r5, #192]	; 0xc0
   2b3e0:	ldr	r1, [r6, #32]
   2b3e4:	add	r0, r0, r4
   2b3e8:	sub	r0, r0, r1
   2b3ec:	mov	r1, r4
   2b3f0:	str	r0, [r6, #36]	; 0x24
   2b3f4:	mov	r0, r5
   2b3f8:	bl	11104 <myhtml_queue_add@plt>
   2b3fc:	cmp	r0, #0
   2b400:	movne	r0, #69	; 0x45
   2b404:	movne	r4, #0
   2b408:	strne	r0, [r5, #160]	; 0xa0
   2b40c:	movne	r0, r4
   2b410:	popne	{r4, r5, r6, sl, fp, pc}
   2b414:	mov	r0, r4
   2b418:	pop	{r4, r5, r6, sl, fp, pc}

0002b41c <myhtml_tokenizer_state_comment_start@@Base>:
   2b41c:	push	{r4, r5, r6, r7, fp, lr}
   2b420:	add	fp, sp, #16
   2b424:	mov	r4, r0
   2b428:	mov	r0, #2
   2b42c:	str	r0, [r1]
   2b430:	ldrb	r0, [r2, r3]
   2b434:	cmp	r0, #45	; 0x2d
   2b438:	beq	2b49c <myhtml_tokenizer_state_comment_start@@Base+0x80>
   2b43c:	cmp	r0, #62	; 0x3e
   2b440:	bne	2b4a4 <myhtml_tokenizer_state_comment_start@@Base+0x88>
   2b444:	mov	r5, #0
   2b448:	ldr	r0, [r4, #192]	; 0xc0
   2b44c:	mov	r6, r1
   2b450:	add	r7, r3, #1
   2b454:	str	r5, [r1, #28]
   2b458:	mov	r2, r6
   2b45c:	ldr	r1, [r1, #32]
   2b460:	add	r0, r0, r7
   2b464:	sub	r0, r0, r1
   2b468:	mov	r1, r7
   2b46c:	str	r0, [r6, #36]	; 0x24
   2b470:	mov	r0, r4
   2b474:	bl	11104 <myhtml_queue_add@plt>
   2b478:	cmp	r0, #0
   2b47c:	movne	r0, #69	; 0x45
   2b480:	strne	r0, [r4, #160]	; 0xa0
   2b484:	movne	r0, r5
   2b488:	popne	{r4, r5, r6, r7, fp, pc}
   2b48c:	mov	r0, #0
   2b490:	str	r0, [r4, #160]	; 0xa0
   2b494:	mov	r0, r7
   2b498:	pop	{r4, r5, r6, r7, fp, pc}
   2b49c:	mov	r0, #46	; 0x2e
   2b4a0:	b	2b4a8 <myhtml_tokenizer_state_comment_start@@Base+0x8c>
   2b4a4:	mov	r0, #47	; 0x2f
   2b4a8:	add	r5, r3, #1
   2b4ac:	str	r0, [r4, #160]	; 0xa0
   2b4b0:	mov	r0, r5
   2b4b4:	pop	{r4, r5, r6, r7, fp, pc}

0002b4b8 <myhtml_tokenizer_state_comment_start_dash@@Base>:
   2b4b8:	push	{r4, r5, r6, r7, fp, lr}
   2b4bc:	add	fp, sp, #16
   2b4c0:	mov	r4, r0
   2b4c4:	mov	r0, #2
   2b4c8:	str	r0, [r1]
   2b4cc:	ldrb	r0, [r2, r3]
   2b4d0:	cmp	r0, #45	; 0x2d
   2b4d4:	beq	2b538 <myhtml_tokenizer_state_comment_start_dash@@Base+0x80>
   2b4d8:	cmp	r0, #62	; 0x3e
   2b4dc:	bne	2b540 <myhtml_tokenizer_state_comment_start_dash@@Base+0x88>
   2b4e0:	mov	r5, #0
   2b4e4:	ldr	r0, [r4, #192]	; 0xc0
   2b4e8:	mov	r6, r1
   2b4ec:	add	r7, r3, #1
   2b4f0:	str	r5, [r1, #28]
   2b4f4:	mov	r2, r6
   2b4f8:	ldr	r1, [r1, #32]
   2b4fc:	add	r0, r0, r7
   2b500:	sub	r0, r0, r1
   2b504:	mov	r1, r7
   2b508:	str	r0, [r6, #36]	; 0x24
   2b50c:	mov	r0, r4
   2b510:	bl	11104 <myhtml_queue_add@plt>
   2b514:	cmp	r0, #0
   2b518:	movne	r0, #69	; 0x45
   2b51c:	strne	r0, [r4, #160]	; 0xa0
   2b520:	movne	r0, r5
   2b524:	popne	{r4, r5, r6, r7, fp, pc}
   2b528:	mov	r0, #0
   2b52c:	str	r0, [r4, #160]	; 0xa0
   2b530:	mov	r0, r7
   2b534:	pop	{r4, r5, r6, r7, fp, pc}
   2b538:	mov	r0, #49	; 0x31
   2b53c:	b	2b544 <myhtml_tokenizer_state_comment_start_dash@@Base+0x8c>
   2b540:	mov	r0, #47	; 0x2f
   2b544:	add	r5, r3, #1
   2b548:	str	r0, [r4, #160]	; 0xa0
   2b54c:	mov	r0, r5
   2b550:	pop	{r4, r5, r6, r7, fp, pc}

0002b554 <myhtml_tokenizer_state_comment@@Base>:
   2b554:	mov	ip, r3
   2b558:	mov	r3, #2
   2b55c:	str	r3, [r1]
   2b560:	ldr	r1, [sp]
   2b564:	cmp	ip, r1
   2b568:	bcc	2b580 <myhtml_tokenizer_state_comment@@Base+0x2c>
   2b56c:	mov	r0, ip
   2b570:	bx	lr
   2b574:	add	ip, ip, #1
   2b578:	cmp	ip, r1
   2b57c:	bcs	2b56c <myhtml_tokenizer_state_comment@@Base+0x18>
   2b580:	ldrb	r3, [r2, ip]
   2b584:	cmp	r3, #45	; 0x2d
   2b588:	bne	2b574 <myhtml_tokenizer_state_comment@@Base+0x20>
   2b58c:	mov	r1, #48	; 0x30
   2b590:	add	ip, ip, #1
   2b594:	str	r1, [r0, #160]	; 0xa0
   2b598:	mov	r0, ip
   2b59c:	bx	lr

0002b5a0 <myhtml_tokenizer_state_comment_end_dash@@Base>:
   2b5a0:	ldrb	r1, [r2, r3]
   2b5a4:	mov	r2, #47	; 0x2f
   2b5a8:	cmp	r1, #45	; 0x2d
   2b5ac:	movweq	r2, #49	; 0x31
   2b5b0:	str	r2, [r0, #160]	; 0xa0
   2b5b4:	add	r0, r3, #1
   2b5b8:	bx	lr

0002b5bc <myhtml_tokenizer_state_comment_end@@Base>:
   2b5bc:	push	{r4, r5, r6, r7, fp, lr}
   2b5c0:	add	fp, sp, #16
   2b5c4:	mov	r4, r0
   2b5c8:	ldrb	r0, [r2, r3]
   2b5cc:	cmp	r0, #33	; 0x21
   2b5d0:	beq	2b638 <myhtml_tokenizer_state_comment_end@@Base+0x7c>
   2b5d4:	cmp	r0, #62	; 0x3e
   2b5d8:	bne	2b64c <myhtml_tokenizer_state_comment_end@@Base+0x90>
   2b5dc:	mov	r6, r1
   2b5e0:	ldr	r0, [r4, #192]	; 0xc0
   2b5e4:	add	r7, r3, #1
   2b5e8:	ldr	r2, [r6, #24]
   2b5ec:	ldr	r5, [r6, #32]
   2b5f0:	add	r1, r0, r7
   2b5f4:	add	r0, r0, r3
   2b5f8:	sub	r1, r1, r5
   2b5fc:	sub	r0, r0, r2
   2b600:	mov	r2, r6
   2b604:	mov	r5, #0
   2b608:	str	r1, [r6, #36]	; 0x24
   2b60c:	cmp	r0, #1
   2b610:	mov	r1, #0
   2b614:	subhi	r1, r0, #2
   2b618:	mov	r0, r4
   2b61c:	str	r1, [r6, #28]
   2b620:	mov	r1, r7
   2b624:	bl	11104 <myhtml_queue_add@plt>
   2b628:	cmp	r0, #0
   2b62c:	beq	2b668 <myhtml_tokenizer_state_comment_end@@Base+0xac>
   2b630:	mov	r0, #69	; 0x45
   2b634:	b	2b65c <myhtml_tokenizer_state_comment_end@@Base+0xa0>
   2b638:	mov	r0, #50	; 0x32
   2b63c:	add	r5, r3, #1
   2b640:	str	r0, [r4, #160]	; 0xa0
   2b644:	mov	r0, r5
   2b648:	pop	{r4, r5, r6, r7, fp, pc}
   2b64c:	add	r5, r3, #1
   2b650:	cmp	r0, #45	; 0x2d
   2b654:	beq	2b660 <myhtml_tokenizer_state_comment_end@@Base+0xa4>
   2b658:	mov	r0, #47	; 0x2f
   2b65c:	str	r0, [r4, #160]	; 0xa0
   2b660:	mov	r0, r5
   2b664:	pop	{r4, r5, r6, r7, fp, pc}
   2b668:	mov	r0, #0
   2b66c:	str	r0, [r4, #160]	; 0xa0
   2b670:	mov	r0, r7
   2b674:	pop	{r4, r5, r6, r7, fp, pc}

0002b678 <myhtml_tokenizer_state_comment_end_bang@@Base>:
   2b678:	push	{r4, r5, r6, sl, fp, lr}
   2b67c:	add	fp, sp, #16
   2b680:	mov	r6, r0
   2b684:	ldrb	r0, [r2, r3]
   2b688:	cmp	r0, #62	; 0x3e
   2b68c:	bne	2b6b4 <myhtml_tokenizer_state_comment_end_bang@@Base+0x3c>
   2b690:	ldr	r0, [r6, #192]	; 0xc0
   2b694:	mov	r4, r1
   2b698:	ldr	r2, [r4, #24]
   2b69c:	add	r1, r0, r3
   2b6a0:	sub	r5, r1, #3
   2b6a4:	cmp	r5, r2
   2b6a8:	bcs	2b6c8 <myhtml_tokenizer_state_comment_end_bang@@Base+0x50>
   2b6ac:	mov	r1, #0
   2b6b0:	b	2b6d4 <myhtml_tokenizer_state_comment_end_bang@@Base+0x5c>
   2b6b4:	cmp	r0, #45	; 0x2d
   2b6b8:	add	r5, r3, #1
   2b6bc:	movne	r0, #47	; 0x2f
   2b6c0:	moveq	r0, #48	; 0x30
   2b6c4:	b	2b718 <myhtml_tokenizer_state_comment_end_bang@@Base+0xa0>
   2b6c8:	mvn	r5, #2
   2b6cc:	sub	r2, r5, r2
   2b6d0:	add	r1, r2, r1
   2b6d4:	str	r1, [r4, #28]
   2b6d8:	add	r5, r3, #1
   2b6dc:	mov	r2, r4
   2b6e0:	ldr	r1, [r4, #32]
   2b6e4:	add	r0, r0, r5
   2b6e8:	sub	r0, r0, r1
   2b6ec:	mov	r1, r5
   2b6f0:	str	r0, [r4, #36]	; 0x24
   2b6f4:	mov	r0, r6
   2b6f8:	bl	11104 <myhtml_queue_add@plt>
   2b6fc:	cmp	r0, #0
   2b700:	movne	r0, #69	; 0x45
   2b704:	movne	r5, #0
   2b708:	strne	r0, [r6, #160]	; 0xa0
   2b70c:	movne	r0, r5
   2b710:	popne	{r4, r5, r6, sl, fp, pc}
   2b714:	mov	r0, #0
   2b718:	str	r0, [r6, #160]	; 0xa0
   2b71c:	mov	r0, r5
   2b720:	pop	{r4, r5, r6, sl, fp, pc}

0002b724 <myhtml_tokenizer_state_bogus_comment@@Base>:
   2b724:	push	{r4, r5, fp, lr}
   2b728:	add	fp, sp, #8
   2b72c:	mov	r5, r0
   2b730:	mov	r0, #2
   2b734:	mov	r4, r3
   2b738:	str	r0, [r1]
   2b73c:	ldr	r0, [r1, #48]	; 0x30
   2b740:	orr	r0, r0, #1024	; 0x400
   2b744:	str	r0, [r1, #48]	; 0x30
   2b748:	ldr	r0, [fp, #8]
   2b74c:	cmp	r3, r0
   2b750:	bcs	2b770 <myhtml_tokenizer_state_bogus_comment@@Base+0x4c>
   2b754:	mov	r3, r1
   2b758:	ldrb	r1, [r2, r4]
   2b75c:	cmp	r1, #62	; 0x3e
   2b760:	beq	2b778 <myhtml_tokenizer_state_bogus_comment@@Base+0x54>
   2b764:	add	r4, r4, #1
   2b768:	cmp	r4, r0
   2b76c:	bcc	2b758 <myhtml_tokenizer_state_bogus_comment@@Base+0x34>
   2b770:	mov	r0, r4
   2b774:	pop	{r4, r5, fp, pc}
   2b778:	ldr	r0, [r3, #24]
   2b77c:	ldr	r2, [r5, #192]	; 0xc0
   2b780:	ldr	r1, [r3, #32]
   2b784:	sub	r0, r2, r0
   2b788:	add	r0, r0, r4
   2b78c:	str	r0, [r3, #28]
   2b790:	sub	r0, r2, r1
   2b794:	mov	r2, r3
   2b798:	add	r0, r0, r4
   2b79c:	add	r4, r4, #1
   2b7a0:	add	r0, r0, #1
   2b7a4:	mov	r1, r4
   2b7a8:	str	r0, [r3, #36]	; 0x24
   2b7ac:	mov	r0, r5
   2b7b0:	bl	11104 <myhtml_queue_add@plt>
   2b7b4:	cmp	r0, #0
   2b7b8:	movne	r0, #69	; 0x45
   2b7bc:	movne	r4, #0
   2b7c0:	strne	r0, [r5, #160]	; 0xa0
   2b7c4:	movne	r0, r4
   2b7c8:	popne	{r4, r5, fp, pc}
   2b7cc:	mov	r0, #0
   2b7d0:	str	r0, [r5, #160]	; 0xa0
   2b7d4:	mov	r0, r4
   2b7d8:	pop	{r4, r5, fp, pc}

0002b7dc <myhtml_tokenizer_state_parse_error_stop@@Base>:
   2b7dc:	movw	r1, #37164	; 0x912c
   2b7e0:	str	r1, [r0, #196]	; 0xc4
   2b7e4:	ldr	r0, [sp]
   2b7e8:	bx	lr

0002b7ec <myhtml_tokenizer_state_init@@Base>:
   2b7ec:	push	{r4, sl, fp, lr}
   2b7f0:	add	fp, sp, #8
   2b7f4:	mov	r4, r0
   2b7f8:	movw	r0, #19604	; 0x4c94
   2b7fc:	bl	119c8 <mycore_malloc@plt>
   2b800:	cmp	r0, #0
   2b804:	str	r0, [r4, #24]!
   2b808:	movweq	r0, #37164	; 0x912c
   2b80c:	popeq	{r4, sl, fp, pc}
   2b810:	ldr	r1, [pc, #2012]	; 2bff4 <myhtml_tokenizer_state_init@@Base+0x808>
   2b814:	ldr	r1, [pc, r1]
   2b818:	str	r1, [r0]
   2b81c:	ldr	r0, [r4]
   2b820:	ldr	r1, [pc, #2000]	; 2bff8 <myhtml_tokenizer_state_init@@Base+0x80c>
   2b824:	ldr	r1, [pc, r1]
   2b828:	str	r1, [r0, #28]
   2b82c:	ldr	r0, [r4]
   2b830:	ldr	r1, [pc, #1988]	; 2bffc <myhtml_tokenizer_state_init@@Base+0x810>
   2b834:	ldr	r1, [pc, r1]
   2b838:	str	r1, [r0, #36]	; 0x24
   2b83c:	ldr	r0, [r4]
   2b840:	ldr	r1, [pc, #1976]	; 2c000 <myhtml_tokenizer_state_init@@Base+0x814>
   2b844:	ldr	r1, [pc, r1]
   2b848:	str	r1, [r0, #32]
   2b84c:	ldr	r0, [r4]
   2b850:	ldr	r1, [pc, #1964]	; 2c004 <myhtml_tokenizer_state_init@@Base+0x818>
   2b854:	ldr	r1, [pc, r1]
   2b858:	str	r1, [r0, #168]	; 0xa8
   2b85c:	ldr	r0, [r4]
   2b860:	ldr	r1, [pc, #1952]	; 2c008 <myhtml_tokenizer_state_init@@Base+0x81c>
   2b864:	ldr	r1, [pc, r1]
   2b868:	str	r1, [r0, #176]	; 0xb0
   2b86c:	ldr	r0, [r4]
   2b870:	ldr	r1, [pc, #1940]	; 2c00c <myhtml_tokenizer_state_init@@Base+0x820>
   2b874:	ldr	r1, [pc, r1]
   2b878:	str	r1, [r0, #132]	; 0x84
   2b87c:	ldr	r0, [r4]
   2b880:	ldr	r1, [pc, #1928]	; 2c010 <myhtml_tokenizer_state_init@@Base+0x824>
   2b884:	ldr	r1, [pc, r1]
   2b888:	str	r1, [r0, #136]	; 0x88
   2b88c:	ldr	r0, [r4]
   2b890:	ldr	r1, [pc, #1916]	; 2c014 <myhtml_tokenizer_state_init@@Base+0x828>
   2b894:	ldr	r1, [pc, r1]
   2b898:	str	r1, [r0, #140]	; 0x8c
   2b89c:	ldr	r0, [r4]
   2b8a0:	ldr	r1, [pc, #1904]	; 2c018 <myhtml_tokenizer_state_init@@Base+0x82c>
   2b8a4:	ldr	r1, [pc, r1]
   2b8a8:	str	r1, [r0, #144]	; 0x90
   2b8ac:	ldr	r0, [r4]
   2b8b0:	ldr	r1, [pc, #1892]	; 2c01c <myhtml_tokenizer_state_init@@Base+0x830>
   2b8b4:	ldr	r1, [pc, r1]
   2b8b8:	str	r1, [r0, #164]	; 0xa4
   2b8bc:	ldr	r0, [r4]
   2b8c0:	ldr	r1, [pc, #1880]	; 2c020 <myhtml_tokenizer_state_init@@Base+0x834>
   2b8c4:	ldr	r1, [pc, r1]
   2b8c8:	str	r1, [r0, #148]	; 0x94
   2b8cc:	ldr	r0, [r4]
   2b8d0:	ldr	r1, [pc, #1868]	; 2c024 <myhtml_tokenizer_state_init@@Base+0x838>
   2b8d4:	ldr	r1, [pc, r1]
   2b8d8:	str	r1, [r0, #152]	; 0x98
   2b8dc:	ldr	r0, [r4]
   2b8e0:	ldr	r1, [pc, #1856]	; 2c028 <myhtml_tokenizer_state_init@@Base+0x83c>
   2b8e4:	ldr	r1, [pc, r1]
   2b8e8:	str	r1, [r0, #156]	; 0x9c
   2b8ec:	ldr	r0, [r4]
   2b8f0:	ldr	r1, [pc, #1844]	; 2c02c <myhtml_tokenizer_state_init@@Base+0x840>
   2b8f4:	ldr	r1, [pc, r1]
   2b8f8:	str	r1, [r0, #180]	; 0xb4
   2b8fc:	ldr	r0, [r4]
   2b900:	ldr	r1, [pc, #1832]	; 2c030 <myhtml_tokenizer_state_init@@Base+0x844>
   2b904:	ldr	r1, [pc, r1]
   2b908:	str	r1, [r0, #184]	; 0xb8
   2b90c:	ldr	r0, [r4]
   2b910:	ldr	r1, [pc, #1820]	; 2c034 <myhtml_tokenizer_state_init@@Base+0x848>
   2b914:	ldr	r1, [pc, r1]
   2b918:	str	r1, [r0, #188]	; 0xbc
   2b91c:	ldr	r0, [r4]
   2b920:	ldr	r1, [pc, #1808]	; 2c038 <myhtml_tokenizer_state_init@@Base+0x84c>
   2b924:	ldr	r1, [pc, r1]
   2b928:	str	r1, [r0, #196]	; 0xc4
   2b92c:	ldr	r0, [r4]
   2b930:	ldr	r1, [pc, #1796]	; 2c03c <myhtml_tokenizer_state_init@@Base+0x850>
   2b934:	ldr	r1, [pc, r1]
   2b938:	str	r1, [r0, #192]	; 0xc0
   2b93c:	ldr	r0, [r4]
   2b940:	ldr	r1, [pc, #1784]	; 2c040 <myhtml_tokenizer_state_init@@Base+0x854>
   2b944:	ldr	r1, [pc, r1]
   2b948:	str	r1, [r0, #200]	; 0xc8
   2b94c:	ldr	r0, [r4]
   2b950:	ldr	r1, [pc, #1772]	; 2c044 <myhtml_tokenizer_state_init@@Base+0x858>
   2b954:	ldr	r1, [pc, r1]
   2b958:	str	r1, [r0, #172]	; 0xac
   2b95c:	ldr	r0, [r4]
   2b960:	ldr	r1, [pc, #1760]	; 2c048 <myhtml_tokenizer_state_init@@Base+0x85c>
   2b964:	ldr	r1, [pc, r1]
   2b968:	str	r1, [r0, #268]	; 0x10c
   2b96c:	ldr	r0, [r4]
   2b970:	ldr	r1, [pc, #1748]	; 2c04c <myhtml_tokenizer_state_init@@Base+0x860>
   2b974:	ldr	r1, [pc, r1]
   2b978:	str	r1, [r0, #8]
   2b97c:	ldr	r0, [r4]
   2b980:	ldr	r1, [pc, #1736]	; 2c050 <myhtml_tokenizer_state_init@@Base+0x864>
   2b984:	ldr	r1, [pc, r1]
   2b988:	str	r1, [r0, #40]	; 0x28
   2b98c:	ldr	r0, [r4]
   2b990:	ldr	r1, [pc, #1724]	; 2c054 <myhtml_tokenizer_state_init@@Base+0x868>
   2b994:	ldr	r1, [pc, r1]
   2b998:	str	r1, [r0, #44]	; 0x2c
   2b99c:	ldr	r0, [r4]
   2b9a0:	ldr	r1, [pc, #1712]	; 2c058 <myhtml_tokenizer_state_init@@Base+0x86c>
   2b9a4:	ldr	r1, [pc, r1]
   2b9a8:	str	r1, [r0, #48]	; 0x30
   2b9ac:	ldr	r0, [r4]
   2b9b0:	ldr	r1, [pc, #1700]	; 2c05c <myhtml_tokenizer_state_init@@Base+0x870>
   2b9b4:	ldr	r1, [pc, r1]
   2b9b8:	str	r1, [r0, #16]
   2b9bc:	ldr	r0, [r4]
   2b9c0:	ldr	r1, [pc, #1688]	; 2c060 <myhtml_tokenizer_state_init@@Base+0x874>
   2b9c4:	ldr	r1, [pc, r1]
   2b9c8:	str	r1, [r0, #52]	; 0x34
   2b9cc:	ldr	r0, [r4]
   2b9d0:	ldr	r1, [pc, #1676]	; 2c064 <myhtml_tokenizer_state_init@@Base+0x878>
   2b9d4:	ldr	r1, [pc, r1]
   2b9d8:	str	r1, [r0, #56]	; 0x38
   2b9dc:	ldr	r0, [r4]
   2b9e0:	ldr	r1, [pc, #1664]	; 2c068 <myhtml_tokenizer_state_init@@Base+0x87c>
   2b9e4:	ldr	r1, [pc, r1]
   2b9e8:	str	r1, [r0, #60]	; 0x3c
   2b9ec:	ldr	r0, [r4]
   2b9f0:	ldr	r1, [pc, #1652]	; 2c06c <myhtml_tokenizer_state_init@@Base+0x880>
   2b9f4:	ldr	r1, [pc, r1]
   2b9f8:	str	r1, [r0, #24]
   2b9fc:	ldr	r0, [r4]
   2ba00:	ldr	r1, [pc, #1640]	; 2c070 <myhtml_tokenizer_state_init@@Base+0x884>
   2ba04:	ldr	r1, [pc, r1]
   2ba08:	str	r1, [r0, #204]	; 0xcc
   2ba0c:	ldr	r0, [r4]
   2ba10:	ldr	r1, [pc, #1628]	; 2c074 <myhtml_tokenizer_state_init@@Base+0x888>
   2ba14:	ldr	r1, [pc, r1]
   2ba18:	str	r1, [r0, #208]	; 0xd0
   2ba1c:	ldr	r0, [r4]
   2ba20:	ldr	r1, [pc, #1616]	; 2c078 <myhtml_tokenizer_state_init@@Base+0x88c>
   2ba24:	ldr	r1, [pc, r1]
   2ba28:	str	r1, [r0, #212]	; 0xd4
   2ba2c:	ldr	r0, [r4]
   2ba30:	ldr	r1, [pc, #1604]	; 2c07c <myhtml_tokenizer_state_init@@Base+0x890>
   2ba34:	ldr	r1, [pc, r1]
   2ba38:	str	r1, [r0, #216]	; 0xd8
   2ba3c:	ldr	r0, [r4]
   2ba40:	ldr	r1, [pc, #1592]	; 2c080 <myhtml_tokenizer_state_init@@Base+0x894>
   2ba44:	ldr	r1, [pc, r1]
   2ba48:	str	r1, [r0, #272]	; 0x110
   2ba4c:	ldr	r0, [r4]
   2ba50:	ldr	r1, [pc, #1580]	; 2c084 <myhtml_tokenizer_state_init@@Base+0x898>
   2ba54:	ldr	r1, [pc, r1]
   2ba58:	str	r1, [r0, #224]	; 0xe0
   2ba5c:	ldr	r0, [r4]
   2ba60:	ldr	r1, [pc, #1568]	; 2c088 <myhtml_tokenizer_state_init@@Base+0x89c>
   2ba64:	ldr	r1, [pc, r1]
   2ba68:	str	r1, [r0, #228]	; 0xe4
   2ba6c:	ldr	r0, [r4]
   2ba70:	ldr	r1, [pc, #1556]	; 2c08c <myhtml_tokenizer_state_init@@Base+0x8a0>
   2ba74:	ldr	r1, [pc, r1]
   2ba78:	str	r1, [r0, #232]	; 0xe8
   2ba7c:	ldr	r0, [r4]
   2ba80:	ldr	r1, [pc, #1544]	; 2c090 <myhtml_tokenizer_state_init@@Base+0x8a4>
   2ba84:	ldr	r1, [pc, r1]
   2ba88:	str	r1, [r0, #236]	; 0xec
   2ba8c:	ldr	r0, [r4]
   2ba90:	ldr	r1, [pc, #1532]	; 2c094 <myhtml_tokenizer_state_init@@Base+0x8a8>
   2ba94:	ldr	r1, [pc, r1]
   2ba98:	str	r1, [r0, #252]	; 0xfc
   2ba9c:	ldr	r0, [r4]
   2baa0:	ldr	r1, [pc, #1520]	; 2c098 <myhtml_tokenizer_state_init@@Base+0x8ac>
   2baa4:	ldr	r1, [pc, r1]
   2baa8:	str	r1, [r0, #256]	; 0x100
   2baac:	ldr	r0, [r4]
   2bab0:	ldr	r1, [pc, #1508]	; 2c09c <myhtml_tokenizer_state_init@@Base+0x8b0>
   2bab4:	ldr	r1, [pc, r1]
   2bab8:	str	r1, [r0, #260]	; 0x104
   2babc:	ldr	r0, [r4]
   2bac0:	ldr	r1, [pc, #1496]	; 2c0a0 <myhtml_tokenizer_state_init@@Base+0x8b4>
   2bac4:	ldr	r1, [pc, r1]
   2bac8:	str	r1, [r0, #264]	; 0x108
   2bacc:	ldr	r0, [r4]
   2bad0:	ldr	r1, [pc, #1484]	; 2c0a4 <myhtml_tokenizer_state_init@@Base+0x8b8>
   2bad4:	ldr	r1, [pc, r1]
   2bad8:	str	r1, [r0, #20]
   2badc:	ldr	r0, [r4]
   2bae0:	ldr	r1, [pc, #1472]	; 2c0a8 <myhtml_tokenizer_state_init@@Base+0x8bc>
   2bae4:	ldr	r1, [pc, r1]
   2bae8:	str	r1, [r0, #64]	; 0x40
   2baec:	ldr	r0, [r4]
   2baf0:	ldr	r1, [pc, #1460]	; 2c0ac <myhtml_tokenizer_state_init@@Base+0x8c0>
   2baf4:	ldr	r1, [pc, r1]
   2baf8:	str	r1, [r0, #68]	; 0x44
   2bafc:	ldr	r0, [r4]
   2bb00:	ldr	r1, [pc, #1448]	; 2c0b0 <myhtml_tokenizer_state_init@@Base+0x8c4>
   2bb04:	ldr	r1, [pc, r1]
   2bb08:	str	r1, [r0, #72]	; 0x48
   2bb0c:	ldr	r0, [r4]
   2bb10:	ldr	r1, [pc, #1436]	; 2c0b4 <myhtml_tokenizer_state_init@@Base+0x8c8>
   2bb14:	ldr	r1, [pc, r1]
   2bb18:	str	r1, [r0, #76]	; 0x4c
   2bb1c:	ldr	r0, [r4]
   2bb20:	ldr	r1, [pc, #1424]	; 2c0b8 <myhtml_tokenizer_state_init@@Base+0x8cc>
   2bb24:	ldr	r1, [pc, r1]
   2bb28:	str	r1, [r0, #80]	; 0x50
   2bb2c:	ldr	r0, [r4]
   2bb30:	ldr	r1, [pc, #1412]	; 2c0bc <myhtml_tokenizer_state_init@@Base+0x8d0>
   2bb34:	ldr	r1, [pc, r1]
   2bb38:	str	r1, [r0, #84]	; 0x54
   2bb3c:	ldr	r0, [r4]
   2bb40:	ldr	r1, [pc, #1400]	; 2c0c0 <myhtml_tokenizer_state_init@@Base+0x8d4>
   2bb44:	ldr	r1, [pc, r1]
   2bb48:	str	r1, [r0, #88]	; 0x58
   2bb4c:	ldr	r0, [r4]
   2bb50:	ldr	r1, [pc, #1388]	; 2c0c4 <myhtml_tokenizer_state_init@@Base+0x8d8>
   2bb54:	ldr	r1, [pc, r1]
   2bb58:	str	r1, [r0, #92]	; 0x5c
   2bb5c:	ldr	r0, [r4]
   2bb60:	ldr	r1, [pc, #1376]	; 2c0c8 <myhtml_tokenizer_state_init@@Base+0x8dc>
   2bb64:	ldr	r1, [pc, r1]
   2bb68:	str	r1, [r0, #96]	; 0x60
   2bb6c:	ldr	r0, [r4]
   2bb70:	ldr	r1, [pc, #1364]	; 2c0cc <myhtml_tokenizer_state_init@@Base+0x8e0>
   2bb74:	ldr	r1, [pc, r1]
   2bb78:	str	r1, [r0, #100]	; 0x64
   2bb7c:	ldr	r0, [r4]
   2bb80:	ldr	r1, [pc, #1352]	; 2c0d0 <myhtml_tokenizer_state_init@@Base+0x8e4>
   2bb84:	ldr	r1, [pc, r1]
   2bb88:	str	r1, [r0, #104]	; 0x68
   2bb8c:	ldr	r0, [r4]
   2bb90:	ldr	r1, [pc, #1340]	; 2c0d4 <myhtml_tokenizer_state_init@@Base+0x8e8>
   2bb94:	ldr	r1, [pc, r1]
   2bb98:	str	r1, [r0, #108]	; 0x6c
   2bb9c:	ldr	r0, [r4]
   2bba0:	ldr	r1, [pc, #1328]	; 2c0d8 <myhtml_tokenizer_state_init@@Base+0x8ec>
   2bba4:	ldr	r1, [pc, r1]
   2bba8:	str	r1, [r0, #112]	; 0x70
   2bbac:	ldr	r0, [r4]
   2bbb0:	ldr	r1, [pc, #1316]	; 2c0dc <myhtml_tokenizer_state_init@@Base+0x8f0>
   2bbb4:	ldr	r1, [pc, r1]
   2bbb8:	str	r1, [r0, #116]	; 0x74
   2bbbc:	ldr	r0, [r4]
   2bbc0:	ldr	r1, [pc, #1304]	; 2c0e0 <myhtml_tokenizer_state_init@@Base+0x8f4>
   2bbc4:	ldr	r1, [pc, r1]
   2bbc8:	str	r1, [r0, #120]	; 0x78
   2bbcc:	ldr	r0, [r4]
   2bbd0:	ldr	r1, [pc, #1292]	; 2c0e4 <myhtml_tokenizer_state_init@@Base+0x8f8>
   2bbd4:	ldr	r1, [pc, r1]
   2bbd8:	str	r1, [r0, #124]	; 0x7c
   2bbdc:	ldr	r0, [r4]
   2bbe0:	ldr	r1, [pc, #1280]	; 2c0e8 <myhtml_tokenizer_state_init@@Base+0x8fc>
   2bbe4:	ldr	r1, [pc, r1]
   2bbe8:	str	r1, [r0, #128]	; 0x80
   2bbec:	ldr	r0, [r4]
   2bbf0:	ldr	r1, [pc, #1268]	; 2c0ec <myhtml_tokenizer_state_init@@Base+0x900>
   2bbf4:	ldr	r1, [pc, r1]
   2bbf8:	str	r1, [r0, #276]	; 0x114
   2bbfc:	ldr	r0, [r4]
   2bc00:	ldr	r1, [pc, #1256]	; 2c0f0 <myhtml_tokenizer_state_init@@Base+0x904>
   2bc04:	ldr	r1, [pc, r1]
   2bc08:	str	r1, [r0, #280]	; 0x118
   2bc0c:	ldr	r0, [r4]
   2bc10:	ldr	r1, [pc, #1244]	; 2c0f4 <myhtml_tokenizer_state_init@@Base+0x908>
   2bc14:	ldr	r1, [pc, r1]
   2bc18:	str	r1, [r0, #308]	; 0x134
   2bc1c:	ldr	r0, [r4]
   2bc20:	ldr	r1, [pc, #1232]	; 2c0f8 <myhtml_tokenizer_state_init@@Base+0x90c>
   2bc24:	ldr	r1, [pc, r1]
   2bc28:	str	r1, [r0, #316]	; 0x13c
   2bc2c:	ldr	r0, [r4]
   2bc30:	ldr	r1, [pc, #1220]	; 2c0fc <myhtml_tokenizer_state_init@@Base+0x910>
   2bc34:	ldr	r1, [pc, r1]
   2bc38:	str	r1, [r0, #312]	; 0x138
   2bc3c:	ldr	r0, [r4]
   2bc40:	ldr	r1, [pc, #1208]	; 2c100 <myhtml_tokenizer_state_init@@Base+0x914>
   2bc44:	ldr	r1, [pc, r1]
   2bc48:	str	r1, [r0, #448]	; 0x1c0
   2bc4c:	ldr	r0, [r4]
   2bc50:	ldr	r1, [pc, #1196]	; 2c104 <myhtml_tokenizer_state_init@@Base+0x918>
   2bc54:	ldr	r1, [pc, r1]
   2bc58:	str	r1, [r0, #456]	; 0x1c8
   2bc5c:	ldr	r0, [r4]
   2bc60:	ldr	r1, [pc, #1184]	; 2c108 <myhtml_tokenizer_state_init@@Base+0x91c>
   2bc64:	ldr	r1, [pc, r1]
   2bc68:	str	r1, [r0, #412]	; 0x19c
   2bc6c:	ldr	r0, [r4]
   2bc70:	ldr	r1, [pc, #1172]	; 2c10c <myhtml_tokenizer_state_init@@Base+0x920>
   2bc74:	ldr	r1, [pc, r1]
   2bc78:	str	r1, [r0, #416]	; 0x1a0
   2bc7c:	ldr	r0, [r4]
   2bc80:	ldr	r1, [pc, #1160]	; 2c110 <myhtml_tokenizer_state_init@@Base+0x924>
   2bc84:	ldr	r1, [pc, r1]
   2bc88:	str	r1, [r0, #420]	; 0x1a4
   2bc8c:	ldr	r0, [r4]
   2bc90:	ldr	r1, [pc, #1148]	; 2c114 <myhtml_tokenizer_state_init@@Base+0x928>
   2bc94:	ldr	r1, [pc, r1]
   2bc98:	str	r1, [r0, #424]	; 0x1a8
   2bc9c:	ldr	r0, [r4]
   2bca0:	ldr	r1, [pc, #1136]	; 2c118 <myhtml_tokenizer_state_init@@Base+0x92c>
   2bca4:	ldr	r1, [pc, r1]
   2bca8:	str	r1, [r0, #428]	; 0x1ac
   2bcac:	ldr	r0, [r4]
   2bcb0:	ldr	r1, [pc, #1124]	; 2c11c <myhtml_tokenizer_state_init@@Base+0x930>
   2bcb4:	ldr	r1, [pc, r1]
   2bcb8:	str	r1, [r0, #432]	; 0x1b0
   2bcbc:	ldr	r0, [r4]
   2bcc0:	ldr	r1, [pc, #1112]	; 2c120 <myhtml_tokenizer_state_init@@Base+0x934>
   2bcc4:	ldr	r1, [pc, r1]
   2bcc8:	str	r1, [r0, #436]	; 0x1b4
   2bccc:	ldr	r0, [r4]
   2bcd0:	ldr	r1, [pc, #1100]	; 2c124 <myhtml_tokenizer_state_init@@Base+0x938>
   2bcd4:	ldr	r1, [pc, r1]
   2bcd8:	str	r1, [r0, #444]	; 0x1bc
   2bcdc:	ldr	r0, [r4]
   2bce0:	ldr	r1, [pc, #1088]	; 2c128 <myhtml_tokenizer_state_init@@Base+0x93c>
   2bce4:	ldr	r1, [pc, r1]
   2bce8:	str	r1, [r0, #460]	; 0x1cc
   2bcec:	ldr	r0, [r4]
   2bcf0:	ldr	r1, [pc, #1076]	; 2c12c <myhtml_tokenizer_state_init@@Base+0x940>
   2bcf4:	ldr	r1, [pc, r1]
   2bcf8:	str	r1, [r0, #464]	; 0x1d0
   2bcfc:	ldr	r0, [r4]
   2bd00:	ldr	r1, [pc, #1064]	; 2c130 <myhtml_tokenizer_state_init@@Base+0x944>
   2bd04:	ldr	r1, [pc, r1]
   2bd08:	str	r1, [r0, #468]	; 0x1d4
   2bd0c:	ldr	r0, [r4]
   2bd10:	ldr	r1, [pc, #1052]	; 2c134 <myhtml_tokenizer_state_init@@Base+0x948>
   2bd14:	ldr	r1, [pc, r1]
   2bd18:	str	r1, [r0, #476]	; 0x1dc
   2bd1c:	ldr	r0, [r4]
   2bd20:	ldr	r1, [pc, #1040]	; 2c138 <myhtml_tokenizer_state_init@@Base+0x94c>
   2bd24:	ldr	r1, [pc, r1]
   2bd28:	str	r1, [r0, #472]	; 0x1d8
   2bd2c:	ldr	r0, [r4]
   2bd30:	ldr	r1, [pc, #1028]	; 2c13c <myhtml_tokenizer_state_init@@Base+0x950>
   2bd34:	ldr	r1, [pc, r1]
   2bd38:	str	r1, [r0, #480]	; 0x1e0
   2bd3c:	ldr	r0, [r4]
   2bd40:	ldr	r1, [pc, #1016]	; 2c140 <myhtml_tokenizer_state_init@@Base+0x954>
   2bd44:	ldr	r1, [pc, r1]
   2bd48:	str	r1, [r0, #452]	; 0x1c4
   2bd4c:	ldr	r0, [r4]
   2bd50:	ldr	r1, [pc, #1004]	; 2c144 <myhtml_tokenizer_state_init@@Base+0x958>
   2bd54:	ldr	r1, [pc, r1]
   2bd58:	str	r1, [r0, #548]	; 0x224
   2bd5c:	ldr	r0, [r4]
   2bd60:	ldr	r1, [pc, #992]	; 2c148 <myhtml_tokenizer_state_init@@Base+0x95c>
   2bd64:	ldr	r1, [pc, r1]
   2bd68:	str	r1, [r0, #288]	; 0x120
   2bd6c:	ldr	r0, [r4]
   2bd70:	ldr	r1, [pc, #980]	; 2c14c <myhtml_tokenizer_state_init@@Base+0x960>
   2bd74:	ldr	r1, [pc, r1]
   2bd78:	str	r1, [r0, #320]	; 0x140
   2bd7c:	ldr	r0, [r4]
   2bd80:	ldr	r1, [pc, #968]	; 2c150 <myhtml_tokenizer_state_init@@Base+0x964>
   2bd84:	ldr	r1, [pc, r1]
   2bd88:	str	r1, [r0, #324]	; 0x144
   2bd8c:	ldr	r0, [r4]
   2bd90:	ldr	r1, [pc, #956]	; 2c154 <myhtml_tokenizer_state_init@@Base+0x968>
   2bd94:	ldr	r1, [pc, r1]
   2bd98:	str	r1, [r0, #328]	; 0x148
   2bd9c:	ldr	r0, [r4]
   2bda0:	ldr	r1, [pc, #944]	; 2c158 <myhtml_tokenizer_state_init@@Base+0x96c>
   2bda4:	ldr	r1, [pc, r1]
   2bda8:	str	r1, [r0, #296]	; 0x128
   2bdac:	ldr	r0, [r4]
   2bdb0:	ldr	r1, [pc, #932]	; 2c15c <myhtml_tokenizer_state_init@@Base+0x970>
   2bdb4:	ldr	r1, [pc, r1]
   2bdb8:	str	r1, [r0, #332]	; 0x14c
   2bdbc:	ldr	r0, [r4]
   2bdc0:	ldr	r1, [pc, #920]	; 2c160 <myhtml_tokenizer_state_init@@Base+0x974>
   2bdc4:	ldr	r1, [pc, r1]
   2bdc8:	str	r1, [r0, #336]	; 0x150
   2bdcc:	ldr	r0, [r4]
   2bdd0:	ldr	r1, [pc, #908]	; 2c164 <myhtml_tokenizer_state_init@@Base+0x978>
   2bdd4:	ldr	r1, [pc, r1]
   2bdd8:	str	r1, [r0, #340]	; 0x154
   2bddc:	ldr	r0, [r4]
   2bde0:	ldr	r1, [pc, #896]	; 2c168 <myhtml_tokenizer_state_init@@Base+0x97c>
   2bde4:	ldr	r1, [pc, r1]
   2bde8:	str	r1, [r0, #304]	; 0x130
   2bdec:	ldr	r0, [r4]
   2bdf0:	ldr	r1, [pc, #884]	; 2c16c <myhtml_tokenizer_state_init@@Base+0x980>
   2bdf4:	ldr	r1, [pc, r1]
   2bdf8:	str	r1, [r0, #484]	; 0x1e4
   2bdfc:	ldr	r0, [r4]
   2be00:	ldr	r1, [pc, #872]	; 2c170 <myhtml_tokenizer_state_init@@Base+0x984>
   2be04:	ldr	r1, [pc, r1]
   2be08:	str	r1, [r0, #488]	; 0x1e8
   2be0c:	ldr	r0, [r4]
   2be10:	ldr	r1, [pc, #860]	; 2c174 <myhtml_tokenizer_state_init@@Base+0x988>
   2be14:	ldr	r1, [pc, r1]
   2be18:	str	r1, [r0, #492]	; 0x1ec
   2be1c:	ldr	r0, [r4]
   2be20:	ldr	r1, [pc, #848]	; 2c178 <myhtml_tokenizer_state_init@@Base+0x98c>
   2be24:	ldr	r1, [pc, r1]
   2be28:	str	r1, [r0, #496]	; 0x1f0
   2be2c:	ldr	r0, [r4]
   2be30:	ldr	r1, [pc, #836]	; 2c17c <myhtml_tokenizer_state_init@@Base+0x990>
   2be34:	ldr	r1, [pc, r1]
   2be38:	str	r1, [r0, #552]	; 0x228
   2be3c:	ldr	r0, [r4]
   2be40:	ldr	r1, [pc, #824]	; 2c180 <myhtml_tokenizer_state_init@@Base+0x994>
   2be44:	ldr	r1, [pc, r1]
   2be48:	str	r1, [r0, #504]	; 0x1f8
   2be4c:	ldr	r0, [r4]
   2be50:	ldr	r1, [pc, #812]	; 2c184 <myhtml_tokenizer_state_init@@Base+0x998>
   2be54:	ldr	r1, [pc, r1]
   2be58:	str	r1, [r0, #508]	; 0x1fc
   2be5c:	ldr	r0, [r4]
   2be60:	ldr	r1, [pc, #800]	; 2c188 <myhtml_tokenizer_state_init@@Base+0x99c>
   2be64:	ldr	r1, [pc, r1]
   2be68:	str	r1, [r0, #512]	; 0x200
   2be6c:	ldr	r0, [r4]
   2be70:	ldr	r1, [pc, #788]	; 2c18c <myhtml_tokenizer_state_init@@Base+0x9a0>
   2be74:	ldr	r1, [pc, r1]
   2be78:	str	r1, [r0, #516]	; 0x204
   2be7c:	ldr	r0, [r4]
   2be80:	ldr	r1, [pc, #776]	; 2c190 <myhtml_tokenizer_state_init@@Base+0x9a4>
   2be84:	ldr	r1, [pc, r1]
   2be88:	str	r1, [r0, #532]	; 0x214
   2be8c:	ldr	r0, [r4]
   2be90:	ldr	r1, [pc, #764]	; 2c194 <myhtml_tokenizer_state_init@@Base+0x9a8>
   2be94:	ldr	r1, [pc, r1]
   2be98:	str	r1, [r0, #536]	; 0x218
   2be9c:	ldr	r0, [r4]
   2bea0:	ldr	r1, [pc, #752]	; 2c198 <myhtml_tokenizer_state_init@@Base+0x9ac>
   2bea4:	ldr	r1, [pc, r1]
   2bea8:	str	r1, [r0, #540]	; 0x21c
   2beac:	ldr	r0, [r4]
   2beb0:	ldr	r1, [pc, #740]	; 2c19c <myhtml_tokenizer_state_init@@Base+0x9b0>
   2beb4:	ldr	r1, [pc, r1]
   2beb8:	str	r1, [r0, #544]	; 0x220
   2bebc:	ldr	r0, [r4]
   2bec0:	ldr	r1, [pc, #728]	; 2c1a0 <myhtml_tokenizer_state_init@@Base+0x9b4>
   2bec4:	ldr	r1, [pc, r1]
   2bec8:	str	r1, [r0, #300]	; 0x12c
   2becc:	ldr	r0, [r4]
   2bed0:	ldr	r1, [pc, #716]	; 2c1a4 <myhtml_tokenizer_state_init@@Base+0x9b8>
   2bed4:	ldr	r1, [pc, r1]
   2bed8:	str	r1, [r0, #344]	; 0x158
   2bedc:	ldr	r0, [r4]
   2bee0:	ldr	r1, [pc, #704]	; 2c1a8 <myhtml_tokenizer_state_init@@Base+0x9bc>
   2bee4:	ldr	r1, [pc, r1]
   2bee8:	str	r1, [r0, #348]	; 0x15c
   2beec:	ldr	r0, [r4]
   2bef0:	ldr	r1, [pc, #692]	; 2c1ac <myhtml_tokenizer_state_init@@Base+0x9c0>
   2bef4:	ldr	r1, [pc, r1]
   2bef8:	str	r1, [r0, #352]	; 0x160
   2befc:	ldr	r0, [r4]
   2bf00:	ldr	r1, [pc, #680]	; 2c1b0 <myhtml_tokenizer_state_init@@Base+0x9c4>
   2bf04:	ldr	r1, [pc, r1]
   2bf08:	str	r1, [r0, #356]	; 0x164
   2bf0c:	ldr	r0, [r4]
   2bf10:	ldr	r1, [pc, #668]	; 2c1b4 <myhtml_tokenizer_state_init@@Base+0x9c8>
   2bf14:	ldr	r1, [pc, r1]
   2bf18:	str	r1, [r0, #360]	; 0x168
   2bf1c:	ldr	r0, [r4]
   2bf20:	ldr	r1, [pc, #656]	; 2c1b8 <myhtml_tokenizer_state_init@@Base+0x9cc>
   2bf24:	ldr	r1, [pc, r1]
   2bf28:	str	r1, [r0, #364]	; 0x16c
   2bf2c:	ldr	r0, [r4]
   2bf30:	ldr	r1, [pc, #644]	; 2c1bc <myhtml_tokenizer_state_init@@Base+0x9d0>
   2bf34:	ldr	r1, [pc, r1]
   2bf38:	str	r1, [r0, #368]	; 0x170
   2bf3c:	ldr	r0, [r4]
   2bf40:	ldr	r1, [pc, #632]	; 2c1c0 <myhtml_tokenizer_state_init@@Base+0x9d4>
   2bf44:	ldr	r1, [pc, r1]
   2bf48:	str	r1, [r0, #372]	; 0x174
   2bf4c:	ldr	r0, [r4]
   2bf50:	ldr	r1, [pc, #620]	; 2c1c4 <myhtml_tokenizer_state_init@@Base+0x9d8>
   2bf54:	ldr	r1, [pc, r1]
   2bf58:	str	r1, [r0, #376]	; 0x178
   2bf5c:	ldr	r0, [r4]
   2bf60:	ldr	r1, [pc, #608]	; 2c1c8 <myhtml_tokenizer_state_init@@Base+0x9dc>
   2bf64:	ldr	r1, [pc, r1]
   2bf68:	str	r1, [r0, #380]	; 0x17c
   2bf6c:	ldr	r0, [r4]
   2bf70:	ldr	r1, [pc, #596]	; 2c1cc <myhtml_tokenizer_state_init@@Base+0x9e0>
   2bf74:	ldr	r1, [pc, r1]
   2bf78:	str	r1, [r0, #384]	; 0x180
   2bf7c:	ldr	r0, [r4]
   2bf80:	ldr	r1, [pc, #584]	; 2c1d0 <myhtml_tokenizer_state_init@@Base+0x9e4>
   2bf84:	ldr	r1, [pc, r1]
   2bf88:	str	r1, [r0, #388]	; 0x184
   2bf8c:	ldr	r0, [r4]
   2bf90:	ldr	r1, [pc, #572]	; 2c1d4 <myhtml_tokenizer_state_init@@Base+0x9e8>
   2bf94:	ldr	r1, [pc, r1]
   2bf98:	str	r1, [r0, #392]	; 0x188
   2bf9c:	ldr	r0, [r4]
   2bfa0:	ldr	r1, [pc, #560]	; 2c1d8 <myhtml_tokenizer_state_init@@Base+0x9ec>
   2bfa4:	ldr	r1, [pc, r1]
   2bfa8:	str	r1, [r0, #396]	; 0x18c
   2bfac:	ldr	r0, [r4]
   2bfb0:	ldr	r1, [pc, #548]	; 2c1dc <myhtml_tokenizer_state_init@@Base+0x9f0>
   2bfb4:	ldr	r1, [pc, r1]
   2bfb8:	str	r1, [r0, #400]	; 0x190
   2bfbc:	ldr	r0, [r4]
   2bfc0:	ldr	r1, [pc, #536]	; 2c1e0 <myhtml_tokenizer_state_init@@Base+0x9f4>
   2bfc4:	ldr	r1, [pc, r1]
   2bfc8:	str	r1, [r0, #404]	; 0x194
   2bfcc:	ldr	r0, [r4]
   2bfd0:	ldr	r1, [pc, #524]	; 2c1e4 <myhtml_tokenizer_state_init@@Base+0x9f8>
   2bfd4:	ldr	r1, [pc, r1]
   2bfd8:	str	r1, [r0, #408]	; 0x198
   2bfdc:	ldr	r0, [r4]
   2bfe0:	ldr	r1, [pc, #512]	; 2c1e8 <myhtml_tokenizer_state_init@@Base+0x9fc>
   2bfe4:	ldr	r1, [pc, r1]
   2bfe8:	str	r1, [r0, #556]	; 0x22c
   2bfec:	mov	r0, #0
   2bff0:	pop	{r4, sl, fp, pc}
   2bff4:	andeq	pc, lr, ip, lsl #27
   2bff8:	andeq	pc, lr, ip, lsl pc	; <UNPREDICTABLE>
   2bffc:	andeq	pc, lr, r8, asr #29
   2c000:	andeq	pc, lr, r4, lsr #30
   2c004:	andeq	pc, lr, ip, lsr sp	; <UNPREDICTABLE>
   2c008:	muleq	lr, ip, sp
   2c00c:	andeq	pc, lr, r8, ror #28
   2c010:	muleq	lr, r4, ip
   2c014:			; <UNDEFINED> instruction: 0x000efeb4
   2c018:	andeq	pc, lr, r0, ror #29
   2c01c:	andeq	pc, lr, ip, ror lr	; <UNPREDICTABLE>
   2c020:	andeq	pc, lr, r8, asr lr	; <UNPREDICTABLE>
   2c024:	andeq	pc, lr, ip, lsl #29
   2c028:	andeq	pc, lr, r8, ror #26
   2c02c:	andeq	pc, lr, r4, lsl #29
   2c030:	andeq	pc, lr, r8, ror #26
   2c034:	andeq	pc, lr, r4, lsl #28
   2c038:	strdeq	pc, [lr], -r8
   2c03c:	andeq	pc, lr, ip, lsl #25
   2c040:	andeq	pc, lr, r0, ror #26
   2c044:	andeq	pc, lr, r4, asr ip	; <UNPREDICTABLE>
   2c048:	andeq	pc, lr, r0, ror lr	; <UNPREDICTABLE>
   2c04c:	andeq	pc, lr, r0, asr #26
   2c050:	andeq	pc, lr, r4, asr ip	; <UNPREDICTABLE>
   2c054:	andeq	pc, lr, r8, lsr #23
   2c058:	andeq	pc, lr, r8, lsr ip	; <UNPREDICTABLE>
   2c05c:	ldrdeq	pc, [lr], -r8
   2c060:	andeq	pc, lr, r8, lsr ip	; <UNPREDICTABLE>
   2c064:	muleq	lr, r4, fp
   2c068:	andeq	pc, lr, r8, lsl #27
   2c06c:	andeq	pc, lr, r8, asr #27
   2c070:	andeq	pc, lr, r8, lsl ip	; <UNPREDICTABLE>
   2c074:	andeq	pc, lr, r0, lsl fp	; <UNPREDICTABLE>
   2c078:	andeq	pc, lr, r0, asr #24
   2c07c:	andeq	pc, lr, r8, ror #26
   2c080:	andeq	pc, lr, r8, asr #24
   2c084:	andeq	pc, lr, r0, ror fp	; <UNPREDICTABLE>
   2c088:	andeq	pc, lr, r8, lsl ip	; <UNPREDICTABLE>
   2c08c:	andeq	pc, lr, ip, lsl ip	; <UNPREDICTABLE>
   2c090:	andeq	pc, lr, r8, asr #26
   2c094:	andeq	pc, lr, r8, ror #21
   2c098:	andeq	pc, lr, r8, lsl #23
   2c09c:	andeq	pc, lr, ip, lsl fp	; <UNPREDICTABLE>
   2c0a0:	andeq	pc, lr, r8, ror fp	; <UNPREDICTABLE>
   2c0a4:	strdeq	pc, [lr], -r8
   2c0a8:	andeq	pc, lr, r0, asr fp	; <UNPREDICTABLE>
   2c0ac:	strdeq	pc, [lr], -ip
   2c0b0:	andeq	pc, lr, r0, ror ip	; <UNPREDICTABLE>
   2c0b4:	strdeq	pc, [lr], -r8
   2c0b8:	andeq	pc, lr, r4, asr #22
   2c0bc:	andeq	pc, lr, r0, ror #23
   2c0c0:	strdeq	pc, [lr], -ip
   2c0c4:	andeq	pc, lr, ip, lsl #22
   2c0c8:	andeq	pc, lr, r4, asr #24
   2c0cc:	andeq	pc, lr, r0, lsr sl	; <UNPREDICTABLE>
   2c0d0:	andeq	pc, lr, ip, lsr #20
   2c0d4:	muleq	lr, r4, sl
   2c0d8:			; <UNDEFINED> instruction: 0x000efbb4
   2c0dc:	muleq	lr, r4, r9
   2c0e0:	andeq	pc, lr, ip, lsl sl	; <UNPREDICTABLE>
   2c0e4:	andeq	pc, lr, r0, lsl #20
   2c0e8:	andeq	pc, lr, ip, lsr fp	; <UNPREDICTABLE>
   2c0ec:	andeq	pc, lr, r0, asr #19
   2c0f0:	strdeq	pc, [lr], -r4
   2c0f4:	andeq	pc, lr, ip, lsl #20
   2c0f8:	andeq	pc, lr, ip, ror fp	; <UNPREDICTABLE>
   2c0fc:	andeq	pc, lr, r0, ror fp	; <UNPREDICTABLE>
   2c100:	andeq	pc, lr, r0, lsr #21
   2c104:	andeq	pc, lr, ip, lsr #21
   2c108:	andeq	pc, lr, r0, lsr #21
   2c10c:	ldrdeq	pc, [lr], -r8
   2c110:	andeq	pc, lr, r8, ror #17
   2c114:	andeq	pc, lr, ip, lsr #20
   2c118:	andeq	pc, lr, r0, lsr #19
   2c11c:	andeq	pc, lr, r8, asr sl	; <UNPREDICTABLE>
   2c120:	andeq	pc, lr, r0, lsr r9	; <UNPREDICTABLE>
   2c124:	andeq	pc, lr, r0, lsl #20
   2c128:	muleq	lr, r8, sl
   2c12c:	strdeq	pc, [lr], -r4
   2c130:	andeq	pc, lr, ip, lsr #19
   2c134:	andeq	pc, lr, r8, lsl #17
   2c138:	muleq	lr, r4, sl
   2c13c:	andeq	pc, lr, r0, ror #16
   2c140:	andeq	pc, lr, r0, lsr r9	; <UNPREDICTABLE>
   2c144:			; <UNDEFINED> instruction: 0x000ef8b4
   2c148:	strdeq	pc, [lr], -r8
   2c14c:	andeq	pc, lr, r8, lsr r8	; <UNPREDICTABLE>
   2c150:	andeq	pc, lr, ip, ror #18
   2c154:	andeq	pc, lr, r8, lsr r9	; <UNPREDICTABLE>
   2c158:	andeq	pc, lr, r0, ror #17
   2c15c:	andeq	pc, lr, ip, lsl sl	; <UNPREDICTABLE>
   2c160:	andeq	pc, lr, r4, lsr r9	; <UNPREDICTABLE>
   2c164:	strdeq	pc, [lr], -r0
   2c168:	andeq	pc, lr, r4, ror r8	; <UNPREDICTABLE>
   2c16c:	andeq	pc, lr, r8, lsr r7	; <UNPREDICTABLE>
   2c170:	andeq	pc, lr, r4, lsr #18
   2c174:	andeq	pc, lr, r4, lsr #14
   2c178:	andeq	pc, lr, r8, lsr #14
   2c17c:	andeq	pc, lr, r4, lsr #14
   2c180:	andeq	pc, lr, r8, asr r8	; <UNPREDICTABLE>
   2c184:	andeq	pc, lr, r0, lsl #18
   2c188:	andeq	pc, lr, r4, lsr r7	; <UNPREDICTABLE>
   2c18c:	andeq	pc, lr, ip, asr #18
   2c190:	andeq	pc, lr, r0, lsl r9	; <UNPREDICTABLE>
   2c194:	andeq	pc, lr, r4, lsr r8	; <UNPREDICTABLE>
   2c198:	andeq	pc, lr, r8, ror #17
   2c19c:			; <UNDEFINED> instruction: 0x000ef7bc
   2c1a0:	andeq	pc, lr, r4, lsl #14
   2c1a4:	andeq	pc, lr, ip, asr #15
   2c1a8:	andeq	pc, lr, r8, lsl #16
   2c1ac:	strdeq	pc, [lr], -r4
   2c1b0:	andeq	pc, lr, r0, asr #16
   2c1b4:	andeq	pc, lr, r0, lsl r7	; <UNPREDICTABLE>
   2c1b8:	strdeq	pc, [lr], -ip
   2c1bc:	andeq	pc, lr, ip, ror r8	; <UNPREDICTABLE>
   2c1c0:	muleq	lr, ip, r7
   2c1c4:	andeq	pc, lr, r4, ror r8	; <UNPREDICTABLE>
   2c1c8:	strdeq	pc, [lr], -ip
   2c1cc:	andeq	pc, lr, r4, ror #14
   2c1d0:	andeq	pc, lr, r4, lsl #15
   2c1d4:	andeq	pc, lr, r0, asr #13
   2c1d8:	andeq	pc, lr, ip, lsr #15
   2c1dc:	muleq	lr, ip, r6
   2c1e0:	andeq	pc, lr, ip, lsl #14
   2c1e4:	andeq	pc, lr, r0, lsl r6	; <UNPREDICTABLE>
   2c1e8:	andeq	pc, lr, r4, lsr r6	; <UNPREDICTABLE>

0002c1ec <myhtml_tokenizer_state_destroy@@Base>:
   2c1ec:	ldr	r0, [r0, #24]
   2c1f0:	cmp	r0, #0
   2c1f4:	bxeq	lr
   2c1f8:	b	11ab8 <mycore_free@plt>

0002c1fc <myhtml_tokenizer_state_doctype@@Base>:
   2c1fc:	mov	r1, #52	; 0x34
   2c200:	str	r1, [r0, #160]	; 0xa0
   2c204:	mov	r0, r3
   2c208:	bx	lr

0002c20c <myhtml_tokenizer_state_before_doctype_name@@Base>:
   2c20c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2c210:	add	fp, sp, #24
   2c214:	mov	r4, r3
   2c218:	mov	r8, r0
   2c21c:	ldr	r0, [fp, #8]
   2c220:	mov	r3, r1
   2c224:	ldrb	r5, [r2, r4]
   2c228:	sub	r7, r5, #9
   2c22c:	cmp	r7, #23
   2c230:	bhi	2c284 <myhtml_tokenizer_state_before_doctype_name@@Base+0x78>
   2c234:	movw	r1, #27
   2c238:	mov	r6, #1
   2c23c:	movt	r1, #128	; 0x80
   2c240:	tst	r1, r6, lsl r7
   2c244:	beq	2c284 <myhtml_tokenizer_state_before_doctype_name@@Base+0x78>
   2c248:	cmp	r4, r0
   2c24c:	bcs	2c284 <myhtml_tokenizer_state_before_doctype_name@@Base+0x78>
   2c250:	add	r4, r4, #1
   2c254:	mvn	r6, #8
   2c258:	mov	r7, #1
   2c25c:	b	2c268 <myhtml_tokenizer_state_before_doctype_name@@Base+0x5c>
   2c260:	ldrb	r5, [r2, r4]
   2c264:	add	r4, r4, #1
   2c268:	uxtab	r5, r6, r5
   2c26c:	cmp	r5, #23
   2c270:	bhi	2c308 <myhtml_tokenizer_state_before_doctype_name@@Base+0xfc>
   2c274:	tst	r1, r7, lsl r5
   2c278:	beq	2c308 <myhtml_tokenizer_state_before_doctype_name@@Base+0xfc>
   2c27c:	cmp	r4, r0
   2c280:	bcc	2c260 <myhtml_tokenizer_state_before_doctype_name@@Base+0x54>
   2c284:	cmp	r4, r0
   2c288:	bcs	2c314 <myhtml_tokenizer_state_before_doctype_name@@Base+0x108>
   2c28c:	ldrb	r0, [r2, r4]
   2c290:	cmp	r0, #62	; 0x3e
   2c294:	bne	2c2e4 <myhtml_tokenizer_state_before_doctype_name@@Base+0xd8>
   2c298:	mov	r0, #1
   2c29c:	add	r4, r4, #1
   2c2a0:	mov	r2, r3
   2c2a4:	str	r0, [r8, #176]	; 0xb0
   2c2a8:	ldr	r0, [r8, #192]	; 0xc0
   2c2ac:	ldr	r1, [r3, #32]
   2c2b0:	add	r0, r0, r4
   2c2b4:	sub	r0, r0, r1
   2c2b8:	mov	r1, r4
   2c2bc:	str	r0, [r3, #36]	; 0x24
   2c2c0:	mov	r0, r8
   2c2c4:	bl	11104 <myhtml_queue_add@plt>
   2c2c8:	cmp	r0, #0
   2c2cc:	beq	2c31c <myhtml_tokenizer_state_before_doctype_name@@Base+0x110>
   2c2d0:	mov	r0, #69	; 0x45
   2c2d4:	mov	r4, #0
   2c2d8:	str	r0, [r8, #160]	; 0xa0
   2c2dc:	mov	r0, r4
   2c2e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c2e4:	ldr	r1, [r3, #40]	; 0x28
   2c2e8:	ldr	r0, [r8, #56]	; 0x38
   2c2ec:	cmp	r1, #0
   2c2f0:	beq	2c33c <myhtml_tokenizer_state_before_doctype_name@@Base+0x130>
   2c2f4:	ldr	r1, [r3, #44]	; 0x2c
   2c2f8:	str	r0, [r1]
   2c2fc:	str	r0, [r3, #44]	; 0x2c
   2c300:	str	r0, [r8, #56]	; 0x38
   2c304:	b	2c348 <myhtml_tokenizer_state_before_doctype_name@@Base+0x13c>
   2c308:	sub	r4, r4, #1
   2c30c:	cmp	r4, r0
   2c310:	bcc	2c28c <myhtml_tokenizer_state_before_doctype_name@@Base+0x80>
   2c314:	mov	r0, r4
   2c318:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c31c:	ldr	r0, [r8, #8]
   2c320:	ldr	r1, [r0, #16]
   2c324:	bl	11740 <myhtml_token_attr_create@plt>
   2c328:	cmp	r0, #0
   2c32c:	str	r0, [r8, #56]	; 0x38
   2c330:	beq	2c2d0 <myhtml_tokenizer_state_before_doctype_name@@Base+0xc4>
   2c334:	mov	r0, #0
   2c338:	b	2c368 <myhtml_tokenizer_state_before_doctype_name@@Base+0x15c>
   2c33c:	str	r0, [r3, #40]	; 0x28
   2c340:	str	r0, [r3, #44]	; 0x2c
   2c344:	mov	r1, #0
   2c348:	mov	r2, #0
   2c34c:	str	r2, [r0]
   2c350:	str	r1, [r0, #4]
   2c354:	ldr	r1, [r8, #192]	; 0xc0
   2c358:	ldr	r0, [r8, #56]	; 0x38
   2c35c:	add	r1, r1, r4
   2c360:	str	r1, [r0, #48]	; 0x30
   2c364:	mov	r0, #53	; 0x35
   2c368:	str	r0, [r8, #160]	; 0xa0
   2c36c:	mov	r0, r4
   2c370:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002c374 <myhtml_tokenizer_state_doctype_name@@Base>:
   2c374:	push	{r4, r5, fp, lr}
   2c378:	add	fp, sp, #8
   2c37c:	mov	r5, r0
   2c380:	ldr	r0, [fp, #8]
   2c384:	mov	r4, r3
   2c388:	cmp	r3, r0
   2c38c:	bcs	2c494 <myhtml_tokenizer_state_doctype_name@@Base+0x120>
   2c390:	mov	ip, r1
   2c394:	ldrb	r1, [r2, r4]
   2c398:	sub	r1, r1, #9
   2c39c:	cmp	r1, #53	; 0x35
   2c3a0:	bhi	2c488 <myhtml_tokenizer_state_doctype_name@@Base+0x114>
   2c3a4:	add	r3, pc, #4
   2c3a8:	ldr	r1, [r3, r1, lsl #2]
   2c3ac:	add	pc, r3, r1
   2c3b0:	andeq	r0, r0, ip, ror #1
   2c3b4:	andeq	r0, r0, ip, ror #1
   2c3b8:	ldrdeq	r0, [r0], -r8
   2c3bc:	andeq	r0, r0, ip, ror #1
   2c3c0:	andeq	r0, r0, ip, ror #1
   2c3c4:	ldrdeq	r0, [r0], -r8
   2c3c8:	ldrdeq	r0, [r0], -r8
   2c3cc:	ldrdeq	r0, [r0], -r8
   2c3d0:	ldrdeq	r0, [r0], -r8
   2c3d4:	ldrdeq	r0, [r0], -r8
   2c3d8:	ldrdeq	r0, [r0], -r8
   2c3dc:	ldrdeq	r0, [r0], -r8
   2c3e0:	ldrdeq	r0, [r0], -r8
   2c3e4:	ldrdeq	r0, [r0], -r8
   2c3e8:	ldrdeq	r0, [r0], -r8
   2c3ec:	ldrdeq	r0, [r0], -r8
   2c3f0:	ldrdeq	r0, [r0], -r8
   2c3f4:	ldrdeq	r0, [r0], -r8
   2c3f8:	ldrdeq	r0, [r0], -r8
   2c3fc:	ldrdeq	r0, [r0], -r8
   2c400:	ldrdeq	r0, [r0], -r8
   2c404:	ldrdeq	r0, [r0], -r8
   2c408:	ldrdeq	r0, [r0], -r8
   2c40c:	andeq	r0, r0, ip, ror #1
   2c410:	ldrdeq	r0, [r0], -r8
   2c414:	ldrdeq	r0, [r0], -r8
   2c418:	ldrdeq	r0, [r0], -r8
   2c41c:	ldrdeq	r0, [r0], -r8
   2c420:	ldrdeq	r0, [r0], -r8
   2c424:	ldrdeq	r0, [r0], -r8
   2c428:	ldrdeq	r0, [r0], -r8
   2c42c:	ldrdeq	r0, [r0], -r8
   2c430:	ldrdeq	r0, [r0], -r8
   2c434:	ldrdeq	r0, [r0], -r8
   2c438:	ldrdeq	r0, [r0], -r8
   2c43c:	ldrdeq	r0, [r0], -r8
   2c440:	ldrdeq	r0, [r0], -r8
   2c444:	ldrdeq	r0, [r0], -r8
   2c448:	ldrdeq	r0, [r0], -r8
   2c44c:	ldrdeq	r0, [r0], -r8
   2c450:	ldrdeq	r0, [r0], -r8
   2c454:	ldrdeq	r0, [r0], -r8
   2c458:	ldrdeq	r0, [r0], -r8
   2c45c:	ldrdeq	r0, [r0], -r8
   2c460:	ldrdeq	r0, [r0], -r8
   2c464:	ldrdeq	r0, [r0], -r8
   2c468:	ldrdeq	r0, [r0], -r8
   2c46c:	ldrdeq	r0, [r0], -r8
   2c470:	ldrdeq	r0, [r0], -r8
   2c474:	ldrdeq	r0, [r0], -r8
   2c478:	ldrdeq	r0, [r0], -r8
   2c47c:	ldrdeq	r0, [r0], -r8
   2c480:	ldrdeq	r0, [r0], -r8
   2c484:	andeq	r0, r0, r0, lsr r1
   2c488:	add	r4, r4, #1
   2c48c:	cmp	r4, r0
   2c490:	bcc	2c394 <myhtml_tokenizer_state_doctype_name@@Base+0x20>
   2c494:	mov	r0, r4
   2c498:	pop	{r4, r5, fp, pc}
   2c49c:	ldr	r0, [r5, #56]	; 0x38
   2c4a0:	ldr	r1, [r5, #192]	; 0xc0
   2c4a4:	ldr	r2, [r0, #48]	; 0x30
   2c4a8:	sub	r1, r1, r2
   2c4ac:	add	r1, r1, r4
   2c4b0:	str	r1, [r0, #52]	; 0x34
   2c4b4:	ldr	r0, [r5, #8]
   2c4b8:	ldr	r1, [r0, #16]
   2c4bc:	bl	11740 <myhtml_token_attr_create@plt>
   2c4c0:	cmp	r0, #0
   2c4c4:	str	r0, [r5, #56]	; 0x38
   2c4c8:	movne	r0, #54	; 0x36
   2c4cc:	addne	r4, r4, #1
   2c4d0:	strne	r0, [r5, #160]	; 0xa0
   2c4d4:	movne	r0, r4
   2c4d8:	popne	{r4, r5, fp, pc}
   2c4dc:	b	2c528 <myhtml_tokenizer_state_doctype_name@@Base+0x1b4>
   2c4e0:	ldr	r0, [r5, #56]	; 0x38
   2c4e4:	ldr	r1, [r5, #192]	; 0xc0
   2c4e8:	ldr	r2, [r0, #48]	; 0x30
   2c4ec:	sub	r2, r1, r2
   2c4f0:	add	r2, r2, r4
   2c4f4:	str	r2, [r0, #52]	; 0x34
   2c4f8:	mov	r2, ip
   2c4fc:	ldr	r0, [ip, #32]
   2c500:	sub	r0, r1, r0
   2c504:	add	r0, r0, r4
   2c508:	add	r4, r4, #1
   2c50c:	add	r0, r0, #1
   2c510:	mov	r1, r4
   2c514:	str	r0, [ip, #36]	; 0x24
   2c518:	mov	r0, r5
   2c51c:	bl	11104 <myhtml_queue_add@plt>
   2c520:	cmp	r0, #0
   2c524:	beq	2c53c <myhtml_tokenizer_state_doctype_name@@Base+0x1c8>
   2c528:	mov	r0, #69	; 0x45
   2c52c:	mov	r4, #0
   2c530:	str	r0, [r5, #160]	; 0xa0
   2c534:	mov	r0, r4
   2c538:	pop	{r4, r5, fp, pc}
   2c53c:	ldr	r0, [r5, #8]
   2c540:	ldr	r1, [r0, #16]
   2c544:	bl	11740 <myhtml_token_attr_create@plt>
   2c548:	cmp	r0, #0
   2c54c:	str	r0, [r5, #56]	; 0x38
   2c550:	movne	r0, #0
   2c554:	b	2c4d0 <myhtml_tokenizer_state_doctype_name@@Base+0x15c>

0002c558 <myhtml_tokenizer_state_after_doctype_name@@Base>:
   2c558:	push	{r4, r5, r6, r7, fp, lr}
   2c55c:	add	fp, sp, #16
   2c560:	mov	r4, r3
   2c564:	ldrb	r3, [r2, r3]
   2c568:	mov	r7, r0
   2c56c:	ldr	r0, [fp, #8]
   2c570:	mov	ip, r1
   2c574:	sub	r6, r3, #9
   2c578:	cmp	r6, #23
   2c57c:	bhi	2c5d0 <myhtml_tokenizer_state_after_doctype_name@@Base+0x78>
   2c580:	movw	r1, #27
   2c584:	mov	r5, #1
   2c588:	movt	r1, #128	; 0x80
   2c58c:	tst	r1, r5, lsl r6
   2c590:	beq	2c5d0 <myhtml_tokenizer_state_after_doctype_name@@Base+0x78>
   2c594:	cmp	r4, r0
   2c598:	bcs	2c5d0 <myhtml_tokenizer_state_after_doctype_name@@Base+0x78>
   2c59c:	add	r4, r4, #1
   2c5a0:	mvn	r5, #8
   2c5a4:	mov	r6, #1
   2c5a8:	b	2c5b4 <myhtml_tokenizer_state_after_doctype_name@@Base+0x5c>
   2c5ac:	ldrb	r3, [r2, r4]
   2c5b0:	add	r4, r4, #1
   2c5b4:	uxtab	r3, r5, r3
   2c5b8:	cmp	r3, #23
   2c5bc:	bhi	2c648 <myhtml_tokenizer_state_after_doctype_name@@Base+0xf0>
   2c5c0:	tst	r1, r6, lsl r3
   2c5c4:	beq	2c648 <myhtml_tokenizer_state_after_doctype_name@@Base+0xf0>
   2c5c8:	cmp	r4, r0
   2c5cc:	bcc	2c5ac <myhtml_tokenizer_state_after_doctype_name@@Base+0x54>
   2c5d0:	cmp	r4, r0
   2c5d4:	bcs	2c640 <myhtml_tokenizer_state_after_doctype_name@@Base+0xe8>
   2c5d8:	ldrb	r0, [r2, r4]
   2c5dc:	cmp	r0, #62	; 0x3e
   2c5e0:	bne	2c62c <myhtml_tokenizer_state_after_doctype_name@@Base+0xd4>
   2c5e4:	ldr	r0, [r7, #192]	; 0xc0
   2c5e8:	ldr	r1, [ip, #32]
   2c5ec:	add	r4, r4, #1
   2c5f0:	mov	r2, ip
   2c5f4:	add	r0, r0, r4
   2c5f8:	sub	r0, r0, r1
   2c5fc:	mov	r1, r4
   2c600:	str	r0, [ip, #36]	; 0x24
   2c604:	mov	r0, r7
   2c608:	bl	11104 <myhtml_queue_add@plt>
   2c60c:	cmp	r0, #0
   2c610:	movne	r0, #69	; 0x45
   2c614:	movne	r4, #0
   2c618:	strne	r0, [r7, #160]	; 0xa0
   2c61c:	movne	r0, r4
   2c620:	popne	{r4, r5, r6, r7, fp, pc}
   2c624:	mov	r0, #0
   2c628:	b	2c63c <myhtml_tokenizer_state_after_doctype_name@@Base+0xe4>
   2c62c:	ldr	r0, [r7, #192]	; 0xc0
   2c630:	add	r0, r0, r4
   2c634:	str	r0, [ip, #12]
   2c638:	mov	r0, #68	; 0x44
   2c63c:	str	r0, [r7, #160]	; 0xa0
   2c640:	mov	r0, r4
   2c644:	pop	{r4, r5, r6, r7, fp, pc}
   2c648:	sub	r4, r4, #1
   2c64c:	cmp	r4, r0
   2c650:	bcc	2c5d8 <myhtml_tokenizer_state_after_doctype_name@@Base+0x80>
   2c654:	b	2c640 <myhtml_tokenizer_state_after_doctype_name@@Base+0xe8>

0002c658 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base>:
   2c658:	push	{r4, r5, r6, r7, fp, lr}
   2c65c:	add	fp, sp, #16
   2c660:	mov	r5, r1
   2c664:	mov	r4, r0
   2c668:	ldr	r1, [r1, #12]
   2c66c:	ldr	r0, [r0, #192]	; 0xc0
   2c670:	ldr	r6, [fp, #8]
   2c674:	add	r0, r0, r6
   2c678:	add	r2, r1, #6
   2c67c:	cmp	r2, r0
   2c680:	bhi	2c6e0 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x88>
   2c684:	mov	r0, r4
   2c688:	mov	r2, #6
   2c68c:	mov	r7, r3
   2c690:	bl	10fa8 <myhtml_tree_incomming_buffer_make_data@plt>
   2c694:	ldr	r1, [pc, #344]	; 2c7f4 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x19c>
   2c698:	mov	r2, #6
   2c69c:	mov	r6, r0
   2c6a0:	add	r1, pc, r1
   2c6a4:	bl	112b4 <mycore_strncasecmp@plt>
   2c6a8:	cmp	r0, #0
   2c6ac:	beq	2c6e8 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x90>
   2c6b0:	ldr	r1, [pc, #320]	; 2c7f8 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x1a0>
   2c6b4:	mov	r0, r6
   2c6b8:	mov	r2, #6
   2c6bc:	add	r1, pc, r1
   2c6c0:	bl	112b4 <mycore_strncasecmp@plt>
   2c6c4:	cmp	r0, #0
   2c6c8:	beq	2c70c <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xb4>
   2c6cc:	mov	r0, #66	; 0x42
   2c6d0:	mov	r6, r7
   2c6d4:	str	r0, [r4, #160]	; 0xa0
   2c6d8:	mov	r0, #1
   2c6dc:	str	r0, [r4, #176]	; 0xb0
   2c6e0:	mov	r0, r6
   2c6e4:	pop	{r4, r5, r6, r7, fp, pc}
   2c6e8:	ldr	r1, [r5, #40]	; 0x28
   2c6ec:	ldr	r0, [r4, #56]	; 0x38
   2c6f0:	cmp	r1, #0
   2c6f4:	beq	2c730 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xd8>
   2c6f8:	ldr	r1, [r5, #44]	; 0x2c
   2c6fc:	str	r0, [r1]
   2c700:	str	r0, [r5, #44]	; 0x2c
   2c704:	str	r0, [r4, #56]	; 0x38
   2c708:	b	2c73c <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xe4>
   2c70c:	ldr	r1, [r5, #40]	; 0x28
   2c710:	ldr	r0, [r4, #56]	; 0x38
   2c714:	cmp	r1, #0
   2c718:	beq	2c77c <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x124>
   2c71c:	ldr	r1, [r5, #44]	; 0x2c
   2c720:	str	r0, [r1]
   2c724:	str	r0, [r5, #44]	; 0x2c
   2c728:	str	r0, [r4, #56]	; 0x38
   2c72c:	b	2c788 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x130>
   2c730:	str	r0, [r5, #40]	; 0x28
   2c734:	str	r0, [r5, #44]	; 0x2c
   2c738:	mov	r1, #0
   2c73c:	mov	r6, #0
   2c740:	mov	r2, #6
   2c744:	str	r6, [r0]
   2c748:	str	r1, [r0, #4]
   2c74c:	ldr	r0, [r5, #12]
   2c750:	ldr	r1, [r4, #56]	; 0x38
   2c754:	str	r0, [r1, #56]	; 0x38
   2c758:	str	r2, [r1, #60]	; 0x3c
   2c75c:	ldr	r0, [r4, #8]
   2c760:	ldr	r1, [r0, #16]
   2c764:	bl	11740 <myhtml_token_attr_create@plt>
   2c768:	cmp	r0, #0
   2c76c:	str	r0, [r4, #56]	; 0x38
   2c770:	beq	2c7e4 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x18c>
   2c774:	mov	r0, #56	; 0x38
   2c778:	b	2c7c4 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x16c>
   2c77c:	str	r0, [r5, #40]	; 0x28
   2c780:	str	r0, [r5, #44]	; 0x2c
   2c784:	mov	r1, #0
   2c788:	mov	r6, #0
   2c78c:	mov	r2, #6
   2c790:	str	r6, [r0]
   2c794:	str	r1, [r0, #4]
   2c798:	ldr	r0, [r5, #12]
   2c79c:	ldr	r1, [r4, #56]	; 0x38
   2c7a0:	str	r0, [r1, #56]	; 0x38
   2c7a4:	str	r2, [r1, #60]	; 0x3c
   2c7a8:	ldr	r0, [r4, #8]
   2c7ac:	ldr	r1, [r0, #16]
   2c7b0:	bl	11740 <myhtml_token_attr_create@plt>
   2c7b4:	cmp	r0, #0
   2c7b8:	str	r0, [r4, #56]	; 0x38
   2c7bc:	beq	2c7e4 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x18c>
   2c7c0:	mov	r0, #59	; 0x3b
   2c7c4:	str	r0, [r4, #160]	; 0xa0
   2c7c8:	ldr	r0, [r4, #76]	; 0x4c
   2c7cc:	ldr	r1, [r5, #12]
   2c7d0:	ldr	r0, [r0, #12]
   2c7d4:	add	r1, r1, #6
   2c7d8:	sub	r6, r1, r0
   2c7dc:	mov	r0, r6
   2c7e0:	pop	{r4, r5, r6, r7, fp, pc}
   2c7e4:	mov	r0, #69	; 0x45
   2c7e8:	str	r0, [r4, #160]	; 0xa0
   2c7ec:	mov	r0, r6
   2c7f0:	pop	{r4, r5, r6, r7, fp, pc}
   2c7f4:	andeq	r4, sp, r6, lsl #17
   2c7f8:	andeq	r4, sp, ip, ror r8

0002c7fc <myhtml_tokenizer_state_before_doctype_public_identifier@@Base>:
   2c7fc:	push	{r4, r5, r6, r7, fp, lr}
   2c800:	add	fp, sp, #16
   2c804:	mov	r4, r3
   2c808:	ldrb	r3, [r2, r3]
   2c80c:	mov	r7, r0
   2c810:	ldr	r0, [fp, #8]
   2c814:	mov	ip, r1
   2c818:	sub	r6, r3, #9
   2c81c:	cmp	r6, #23
   2c820:	bhi	2c874 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x78>
   2c824:	movw	r1, #27
   2c828:	mov	r5, #1
   2c82c:	movt	r1, #128	; 0x80
   2c830:	tst	r1, r5, lsl r6
   2c834:	beq	2c874 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x78>
   2c838:	cmp	r4, r0
   2c83c:	bcs	2c874 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x78>
   2c840:	add	r4, r4, #1
   2c844:	mvn	r5, #8
   2c848:	mov	r6, #1
   2c84c:	b	2c858 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x5c>
   2c850:	ldrb	r3, [r2, r4]
   2c854:	add	r4, r4, #1
   2c858:	uxtab	r3, r5, r3
   2c85c:	cmp	r3, #23
   2c860:	bhi	2c8b4 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xb8>
   2c864:	tst	r1, r6, lsl r3
   2c868:	beq	2c8b4 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xb8>
   2c86c:	cmp	r4, r0
   2c870:	bcc	2c850 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x54>
   2c874:	cmp	r4, r0
   2c878:	bcs	2c8c0 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xc4>
   2c87c:	ldrb	r0, [r2, r4]
   2c880:	cmp	r0, #39	; 0x27
   2c884:	beq	2c8c8 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xcc>
   2c888:	cmp	r0, #34	; 0x22
   2c88c:	bne	2c8ec <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xf0>
   2c890:	ldr	r1, [r7, #192]	; 0xc0
   2c894:	ldr	r0, [r7, #56]	; 0x38
   2c898:	add	r4, r4, #1
   2c89c:	mov	r2, #0
   2c8a0:	add	r1, r4, r1
   2c8a4:	str	r1, [r0, #56]	; 0x38
   2c8a8:	str	r2, [r0, #60]	; 0x3c
   2c8ac:	mov	r0, #57	; 0x39
   2c8b0:	b	2c940 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x144>
   2c8b4:	sub	r4, r4, #1
   2c8b8:	cmp	r4, r0
   2c8bc:	bcc	2c87c <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x80>
   2c8c0:	mov	r0, r4
   2c8c4:	pop	{r4, r5, r6, r7, fp, pc}
   2c8c8:	ldr	r1, [r7, #192]	; 0xc0
   2c8cc:	ldr	r0, [r7, #56]	; 0x38
   2c8d0:	add	r4, r4, #1
   2c8d4:	mov	r2, #0
   2c8d8:	add	r1, r4, r1
   2c8dc:	str	r1, [r0, #56]	; 0x38
   2c8e0:	str	r2, [r0, #60]	; 0x3c
   2c8e4:	mov	r0, #58	; 0x3a
   2c8e8:	b	2c940 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x144>
   2c8ec:	mov	r1, #1
   2c8f0:	cmp	r0, #62	; 0x3e
   2c8f4:	str	r1, [r7, #176]	; 0xb0
   2c8f8:	bne	2c94c <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x150>
   2c8fc:	ldr	r0, [r7, #192]	; 0xc0
   2c900:	ldr	r1, [ip, #32]
   2c904:	add	r4, r4, #1
   2c908:	mov	r2, ip
   2c90c:	add	r0, r0, r4
   2c910:	sub	r0, r0, r1
   2c914:	mov	r1, r4
   2c918:	str	r0, [ip, #36]	; 0x24
   2c91c:	mov	r0, r7
   2c920:	bl	11104 <myhtml_queue_add@plt>
   2c924:	cmp	r0, #0
   2c928:	movne	r0, #69	; 0x45
   2c92c:	movne	r4, #0
   2c930:	strne	r0, [r7, #160]	; 0xa0
   2c934:	movne	r0, r4
   2c938:	popne	{r4, r5, r6, r7, fp, pc}
   2c93c:	mov	r0, #0
   2c940:	str	r0, [r7, #160]	; 0xa0
   2c944:	mov	r0, r4
   2c948:	pop	{r4, r5, r6, r7, fp, pc}
   2c94c:	mov	r0, #66	; 0x42
   2c950:	add	r4, r4, #1
   2c954:	str	r0, [r7, #160]	; 0xa0
   2c958:	mov	r0, r4
   2c95c:	pop	{r4, r5, r6, r7, fp, pc}

0002c960 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base>:
   2c960:	push	{r4, r5, r6, sl, fp, lr}
   2c964:	add	fp, sp, #16
   2c968:	mov	r5, r0
   2c96c:	ldr	r0, [fp, #8]
   2c970:	mov	r4, r3
   2c974:	cmp	r3, r0
   2c978:	bcs	2c9a4 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x44>
   2c97c:	mov	r6, r1
   2c980:	ldr	r1, [fp, #12]
   2c984:	ldrb	r3, [r2, r4]
   2c988:	cmp	r3, r1
   2c98c:	beq	2c9ac <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x4c>
   2c990:	cmp	r3, #62	; 0x3e
   2c994:	beq	2c9e4 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x84>
   2c998:	add	r4, r4, #1
   2c99c:	cmp	r4, r0
   2c9a0:	bcc	2c984 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x24>
   2c9a4:	mov	r0, r4
   2c9a8:	pop	{r4, r5, r6, sl, fp, pc}
   2c9ac:	ldr	r0, [r5, #56]	; 0x38
   2c9b0:	ldr	r1, [r5, #192]	; 0xc0
   2c9b4:	ldr	r2, [r0, #56]	; 0x38
   2c9b8:	sub	r1, r1, r2
   2c9bc:	add	r1, r1, r4
   2c9c0:	str	r1, [r0, #60]	; 0x3c
   2c9c4:	ldr	r1, [r6, #40]	; 0x28
   2c9c8:	cmp	r1, #0
   2c9cc:	beq	2ca30 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xd0>
   2c9d0:	ldr	r1, [r6, #44]	; 0x2c
   2c9d4:	str	r0, [r1]
   2c9d8:	str	r0, [r6, #44]	; 0x2c
   2c9dc:	str	r0, [r5, #56]	; 0x38
   2c9e0:	b	2ca3c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xdc>
   2c9e4:	mov	r0, #1
   2c9e8:	str	r0, [r5, #176]	; 0xb0
   2c9ec:	ldr	r0, [r5, #56]	; 0x38
   2c9f0:	ldr	r1, [r5, #192]	; 0xc0
   2c9f4:	ldr	r2, [r0, #56]	; 0x38
   2c9f8:	add	r3, r1, r4
   2c9fc:	cmp	r3, r2
   2ca00:	bls	2caa8 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x148>
   2ca04:	sub	r1, r1, r2
   2ca08:	add	r1, r1, r4
   2ca0c:	str	r1, [r0, #60]	; 0x3c
   2ca10:	ldr	r1, [r6, #40]	; 0x28
   2ca14:	cmp	r1, #0
   2ca18:	beq	2ca74 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x114>
   2ca1c:	ldr	r1, [r6, #44]	; 0x2c
   2ca20:	str	r0, [r1]
   2ca24:	str	r0, [r6, #44]	; 0x2c
   2ca28:	str	r0, [r5, #56]	; 0x38
   2ca2c:	b	2ca80 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x120>
   2ca30:	str	r0, [r6, #40]	; 0x28
   2ca34:	str	r0, [r6, #44]	; 0x2c
   2ca38:	mov	r1, #0
   2ca3c:	mov	r2, #0
   2ca40:	str	r2, [r0]
   2ca44:	str	r1, [r0, #4]
   2ca48:	ldr	r0, [r5, #8]
   2ca4c:	ldr	r1, [r0, #16]
   2ca50:	bl	11740 <myhtml_token_attr_create@plt>
   2ca54:	cmp	r0, #0
   2ca58:	str	r0, [r5, #56]	; 0x38
   2ca5c:	movne	r0, #59	; 0x3b
   2ca60:	addne	r4, r4, #1
   2ca64:	strne	r0, [r5, #160]	; 0xa0
   2ca68:	movne	r0, r4
   2ca6c:	popne	{r4, r5, r6, sl, fp, pc}
   2ca70:	b	2cad8 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x178>
   2ca74:	str	r0, [r6, #40]	; 0x28
   2ca78:	str	r0, [r6, #44]	; 0x2c
   2ca7c:	mov	r1, #0
   2ca80:	mov	r2, #0
   2ca84:	str	r2, [r0]
   2ca88:	str	r1, [r0, #4]
   2ca8c:	ldr	r0, [r5, #8]
   2ca90:	ldr	r1, [r0, #16]
   2ca94:	bl	11740 <myhtml_token_attr_create@plt>
   2ca98:	cmp	r0, #0
   2ca9c:	str	r0, [r5, #56]	; 0x38
   2caa0:	beq	2cad8 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x178>
   2caa4:	ldr	r1, [r5, #192]	; 0xc0
   2caa8:	ldr	r0, [r6, #32]
   2caac:	mov	r2, r6
   2cab0:	sub	r0, r1, r0
   2cab4:	add	r0, r0, r4
   2cab8:	add	r4, r4, #1
   2cabc:	add	r0, r0, #1
   2cac0:	mov	r1, r4
   2cac4:	str	r0, [r6, #36]	; 0x24
   2cac8:	mov	r0, r5
   2cacc:	bl	11104 <myhtml_queue_add@plt>
   2cad0:	cmp	r0, #0
   2cad4:	beq	2caec <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x18c>
   2cad8:	mov	r0, #69	; 0x45
   2cadc:	mov	r4, #0
   2cae0:	str	r0, [r5, #160]	; 0xa0
   2cae4:	mov	r0, r4
   2cae8:	pop	{r4, r5, r6, sl, fp, pc}
   2caec:	mov	r0, #0
   2caf0:	str	r0, [r5, #160]	; 0xa0
   2caf4:	mov	r0, r4
   2caf8:	pop	{r4, r5, r6, sl, fp, pc}

0002cafc <myhtml_tokenizer_state_doctype_public_identifier_double_quoted@@Base>:
   2cafc:	push	{fp, lr}
   2cb00:	mov	fp, sp
   2cb04:	sub	sp, sp, #8
   2cb08:	mov	ip, #34	; 0x22
   2cb0c:	str	ip, [sp, #4]
   2cb10:	ldr	ip, [fp, #8]
   2cb14:	str	ip, [sp]
   2cb18:	bl	11458 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   2cb1c:	mov	sp, fp
   2cb20:	pop	{fp, pc}

0002cb24 <myhtml_tokenizer_state_doctype_public_identifier_single_quoted@@Base>:
   2cb24:	push	{fp, lr}
   2cb28:	mov	fp, sp
   2cb2c:	sub	sp, sp, #8
   2cb30:	mov	ip, #39	; 0x27
   2cb34:	str	ip, [sp, #4]
   2cb38:	ldr	ip, [fp, #8]
   2cb3c:	str	ip, [sp]
   2cb40:	bl	11458 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   2cb44:	mov	sp, fp
   2cb48:	pop	{fp, pc}

0002cb4c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base>:
   2cb4c:	push	{r4, r5, r6, r7, fp, lr}
   2cb50:	add	fp, sp, #16
   2cb54:	mov	r4, r3
   2cb58:	ldrb	r3, [r2, r3]
   2cb5c:	mov	r7, r0
   2cb60:	ldr	r0, [fp, #8]
   2cb64:	mov	ip, r1
   2cb68:	sub	r6, r3, #9
   2cb6c:	cmp	r6, #23
   2cb70:	bhi	2cbc4 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x78>
   2cb74:	movw	r1, #27
   2cb78:	mov	r5, #1
   2cb7c:	movt	r1, #128	; 0x80
   2cb80:	tst	r1, r5, lsl r6
   2cb84:	beq	2cbc4 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x78>
   2cb88:	cmp	r4, r0
   2cb8c:	bcs	2cbc4 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x78>
   2cb90:	add	r4, r4, #1
   2cb94:	mvn	r5, #8
   2cb98:	mov	r6, #1
   2cb9c:	b	2cba8 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x5c>
   2cba0:	ldrb	r3, [r2, r4]
   2cba4:	add	r4, r4, #1
   2cba8:	uxtab	r3, r5, r3
   2cbac:	cmp	r3, #23
   2cbb0:	bhi	2cc0c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xc0>
   2cbb4:	tst	r1, r6, lsl r3
   2cbb8:	beq	2cc0c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xc0>
   2cbbc:	cmp	r4, r0
   2cbc0:	bcc	2cba0 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x54>
   2cbc4:	cmp	r4, r0
   2cbc8:	bcs	2cc18 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xcc>
   2cbcc:	ldrb	r0, [r2, r4]
   2cbd0:	cmp	r0, #62	; 0x3e
   2cbd4:	beq	2cc20 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xd4>
   2cbd8:	cmp	r0, #39	; 0x27
   2cbdc:	beq	2cc68 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x11c>
   2cbe0:	cmp	r0, #34	; 0x22
   2cbe4:	bne	2cc94 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x148>
   2cbe8:	ldr	r1, [r7, #192]	; 0xc0
   2cbec:	ldr	r0, [r7, #56]	; 0x38
   2cbf0:	add	r4, r4, #1
   2cbf4:	mov	r2, #0
   2cbf8:	add	r1, r4, r1
   2cbfc:	str	r1, [r0, #56]	; 0x38
   2cc00:	str	r2, [r0, #60]	; 0x3c
   2cc04:	mov	r0, #63	; 0x3f
   2cc08:	b	2cc88 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x13c>
   2cc0c:	sub	r4, r4, #1
   2cc10:	cmp	r4, r0
   2cc14:	bcc	2cbcc <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x80>
   2cc18:	mov	r0, r4
   2cc1c:	pop	{r4, r5, r6, r7, fp, pc}
   2cc20:	ldr	r0, [r7, #192]	; 0xc0
   2cc24:	ldr	r1, [ip, #32]
   2cc28:	add	r4, r4, #1
   2cc2c:	mov	r2, ip
   2cc30:	add	r0, r0, r4
   2cc34:	sub	r0, r0, r1
   2cc38:	mov	r1, r4
   2cc3c:	str	r0, [ip, #36]	; 0x24
   2cc40:	mov	r0, r7
   2cc44:	bl	11104 <myhtml_queue_add@plt>
   2cc48:	cmp	r0, #0
   2cc4c:	movne	r0, #69	; 0x45
   2cc50:	movne	r4, #0
   2cc54:	strne	r0, [r7, #160]	; 0xa0
   2cc58:	movne	r0, r4
   2cc5c:	popne	{r4, r5, r6, r7, fp, pc}
   2cc60:	mov	r0, #0
   2cc64:	b	2cc88 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x13c>
   2cc68:	ldr	r1, [r7, #192]	; 0xc0
   2cc6c:	ldr	r0, [r7, #56]	; 0x38
   2cc70:	add	r4, r4, #1
   2cc74:	mov	r2, #0
   2cc78:	add	r1, r4, r1
   2cc7c:	str	r1, [r0, #56]	; 0x38
   2cc80:	str	r2, [r0, #60]	; 0x3c
   2cc84:	mov	r0, #64	; 0x40
   2cc88:	str	r0, [r7, #160]	; 0xa0
   2cc8c:	mov	r0, r4
   2cc90:	pop	{r4, r5, r6, r7, fp, pc}
   2cc94:	mov	r0, #66	; 0x42
   2cc98:	str	r0, [r7, #160]	; 0xa0
   2cc9c:	mov	r0, #1
   2cca0:	str	r0, [r7, #176]	; 0xb0
   2cca4:	mov	r0, r4
   2cca8:	pop	{r4, r5, r6, r7, fp, pc}

0002ccac <myhtml_tokenizer_doctype_system_identifier_dsq@@Base>:
   2ccac:	push	{r4, r5, r6, sl, fp, lr}
   2ccb0:	add	fp, sp, #16
   2ccb4:	mov	r5, r0
   2ccb8:	ldr	r0, [fp, #8]
   2ccbc:	mov	r4, r3
   2ccc0:	cmp	r3, r0
   2ccc4:	bcs	2ccf0 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x44>
   2ccc8:	mov	r6, r1
   2cccc:	ldr	r1, [fp, #12]
   2ccd0:	ldrb	r3, [r2, r4]
   2ccd4:	cmp	r3, r1
   2ccd8:	beq	2ccf8 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x4c>
   2ccdc:	cmp	r3, #62	; 0x3e
   2cce0:	beq	2cd30 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x84>
   2cce4:	add	r4, r4, #1
   2cce8:	cmp	r4, r0
   2ccec:	bcc	2ccd0 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x24>
   2ccf0:	mov	r0, r4
   2ccf4:	pop	{r4, r5, r6, sl, fp, pc}
   2ccf8:	ldr	r0, [r5, #56]	; 0x38
   2ccfc:	ldr	r1, [r5, #192]	; 0xc0
   2cd00:	ldr	r2, [r0, #56]	; 0x38
   2cd04:	sub	r1, r1, r2
   2cd08:	add	r1, r1, r4
   2cd0c:	str	r1, [r0, #60]	; 0x3c
   2cd10:	ldr	r1, [r6, #40]	; 0x28
   2cd14:	cmp	r1, #0
   2cd18:	beq	2cd7c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xd0>
   2cd1c:	ldr	r1, [r6, #44]	; 0x2c
   2cd20:	str	r0, [r1]
   2cd24:	str	r0, [r6, #44]	; 0x2c
   2cd28:	str	r0, [r5, #56]	; 0x38
   2cd2c:	b	2cd88 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xdc>
   2cd30:	mov	r0, #1
   2cd34:	str	r0, [r5, #176]	; 0xb0
   2cd38:	ldr	r0, [r5, #56]	; 0x38
   2cd3c:	ldr	r1, [r5, #192]	; 0xc0
   2cd40:	ldr	r2, [r0, #56]	; 0x38
   2cd44:	add	r3, r1, r4
   2cd48:	cmp	r3, r2
   2cd4c:	bls	2cdf4 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x148>
   2cd50:	sub	r1, r1, r2
   2cd54:	add	r1, r1, r4
   2cd58:	str	r1, [r0, #60]	; 0x3c
   2cd5c:	ldr	r1, [r6, #40]	; 0x28
   2cd60:	cmp	r1, #0
   2cd64:	beq	2cdc0 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x114>
   2cd68:	ldr	r1, [r6, #44]	; 0x2c
   2cd6c:	str	r0, [r1]
   2cd70:	str	r0, [r6, #44]	; 0x2c
   2cd74:	str	r0, [r5, #56]	; 0x38
   2cd78:	b	2cdcc <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x120>
   2cd7c:	str	r0, [r6, #40]	; 0x28
   2cd80:	str	r0, [r6, #44]	; 0x2c
   2cd84:	mov	r1, #0
   2cd88:	mov	r2, #0
   2cd8c:	str	r2, [r0]
   2cd90:	str	r1, [r0, #4]
   2cd94:	ldr	r0, [r5, #8]
   2cd98:	ldr	r1, [r0, #16]
   2cd9c:	bl	11740 <myhtml_token_attr_create@plt>
   2cda0:	cmp	r0, #0
   2cda4:	str	r0, [r5, #56]	; 0x38
   2cda8:	movne	r0, #65	; 0x41
   2cdac:	addne	r4, r4, #1
   2cdb0:	strne	r0, [r5, #160]	; 0xa0
   2cdb4:	movne	r0, r4
   2cdb8:	popne	{r4, r5, r6, sl, fp, pc}
   2cdbc:	b	2ce24 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x178>
   2cdc0:	str	r0, [r6, #40]	; 0x28
   2cdc4:	str	r0, [r6, #44]	; 0x2c
   2cdc8:	mov	r1, #0
   2cdcc:	mov	r2, #0
   2cdd0:	str	r2, [r0]
   2cdd4:	str	r1, [r0, #4]
   2cdd8:	ldr	r0, [r5, #8]
   2cddc:	ldr	r1, [r0, #16]
   2cde0:	bl	11740 <myhtml_token_attr_create@plt>
   2cde4:	cmp	r0, #0
   2cde8:	str	r0, [r5, #56]	; 0x38
   2cdec:	beq	2ce24 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x178>
   2cdf0:	ldr	r1, [r5, #192]	; 0xc0
   2cdf4:	ldr	r0, [r6, #32]
   2cdf8:	mov	r2, r6
   2cdfc:	sub	r0, r1, r0
   2ce00:	add	r0, r0, r4
   2ce04:	add	r4, r4, #1
   2ce08:	add	r0, r0, #1
   2ce0c:	mov	r1, r4
   2ce10:	str	r0, [r6, #36]	; 0x24
   2ce14:	mov	r0, r5
   2ce18:	bl	11104 <myhtml_queue_add@plt>
   2ce1c:	cmp	r0, #0
   2ce20:	beq	2ce38 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x18c>
   2ce24:	mov	r0, #69	; 0x45
   2ce28:	mov	r4, #0
   2ce2c:	str	r0, [r5, #160]	; 0xa0
   2ce30:	mov	r0, r4
   2ce34:	pop	{r4, r5, r6, sl, fp, pc}
   2ce38:	mov	r0, #0
   2ce3c:	str	r0, [r5, #160]	; 0xa0
   2ce40:	mov	r0, r4
   2ce44:	pop	{r4, r5, r6, sl, fp, pc}

0002ce48 <myhtml_tokenizer_state_doctype_system_identifier_double_quoted@@Base>:
   2ce48:	push	{fp, lr}
   2ce4c:	mov	fp, sp
   2ce50:	sub	sp, sp, #8
   2ce54:	mov	ip, #34	; 0x22
   2ce58:	str	ip, [sp, #4]
   2ce5c:	ldr	ip, [fp, #8]
   2ce60:	str	ip, [sp]
   2ce64:	bl	11878 <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   2ce68:	mov	sp, fp
   2ce6c:	pop	{fp, pc}

0002ce70 <myhtml_tokenizer_state_doctype_system_identifier_single_quoted@@Base>:
   2ce70:	push	{fp, lr}
   2ce74:	mov	fp, sp
   2ce78:	sub	sp, sp, #8
   2ce7c:	mov	ip, #39	; 0x27
   2ce80:	str	ip, [sp, #4]
   2ce84:	ldr	ip, [fp, #8]
   2ce88:	str	ip, [sp]
   2ce8c:	bl	11878 <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   2ce90:	mov	sp, fp
   2ce94:	pop	{fp, pc}

0002ce98 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base>:
   2ce98:	push	{r4, r5, r6, r7, fp, lr}
   2ce9c:	add	fp, sp, #16
   2cea0:	mov	r4, r3
   2cea4:	ldrb	r3, [r2, r3]
   2cea8:	mov	r7, r0
   2ceac:	ldr	r0, [fp, #8]
   2ceb0:	mov	ip, r1
   2ceb4:	sub	r6, r3, #9
   2ceb8:	cmp	r6, #23
   2cebc:	bhi	2cf10 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x78>
   2cec0:	movw	r1, #27
   2cec4:	mov	r5, #1
   2cec8:	movt	r1, #128	; 0x80
   2cecc:	tst	r1, r5, lsl r6
   2ced0:	beq	2cf10 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x78>
   2ced4:	cmp	r4, r0
   2ced8:	bcs	2cf10 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x78>
   2cedc:	add	r4, r4, #1
   2cee0:	mvn	r5, #8
   2cee4:	mov	r6, #1
   2cee8:	b	2cef4 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x5c>
   2ceec:	ldrb	r3, [r2, r4]
   2cef0:	add	r4, r4, #1
   2cef4:	uxtab	r3, r5, r3
   2cef8:	cmp	r3, #23
   2cefc:	bhi	2cf7c <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xe4>
   2cf00:	tst	r1, r6, lsl r3
   2cf04:	beq	2cf7c <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xe4>
   2cf08:	cmp	r4, r0
   2cf0c:	bcc	2ceec <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x54>
   2cf10:	cmp	r4, r0
   2cf14:	bcs	2cf74 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xdc>
   2cf18:	ldrb	r0, [r2, r4]
   2cf1c:	cmp	r0, #62	; 0x3e
   2cf20:	bne	2cf6c <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xd4>
   2cf24:	ldr	r0, [r7, #192]	; 0xc0
   2cf28:	ldr	r1, [ip, #32]
   2cf2c:	add	r4, r4, #1
   2cf30:	mov	r2, ip
   2cf34:	add	r0, r0, r4
   2cf38:	sub	r0, r0, r1
   2cf3c:	mov	r1, r4
   2cf40:	str	r0, [ip, #36]	; 0x24
   2cf44:	mov	r0, r7
   2cf48:	bl	11104 <myhtml_queue_add@plt>
   2cf4c:	cmp	r0, #0
   2cf50:	movne	r0, #69	; 0x45
   2cf54:	movne	r4, #0
   2cf58:	strne	r0, [r7, #160]	; 0xa0
   2cf5c:	movne	r0, r4
   2cf60:	popne	{r4, r5, r6, r7, fp, pc}
   2cf64:	mov	r0, #0
   2cf68:	b	2cf70 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xd8>
   2cf6c:	mov	r0, #66	; 0x42
   2cf70:	str	r0, [r7, #160]	; 0xa0
   2cf74:	mov	r0, r4
   2cf78:	pop	{r4, r5, r6, r7, fp, pc}
   2cf7c:	sub	r4, r4, #1
   2cf80:	cmp	r4, r0
   2cf84:	bcc	2cf18 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x80>
   2cf88:	b	2cf74 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xdc>

0002cf8c <myhtml_tokenizer_state_bogus_doctype@@Base>:
   2cf8c:	push	{r4, r5, fp, lr}
   2cf90:	add	fp, sp, #8
   2cf94:	mov	r5, r0
   2cf98:	ldr	r0, [fp, #8]
   2cf9c:	mov	r4, r3
   2cfa0:	mov	r3, r1
   2cfa4:	cmp	r4, r0
   2cfa8:	bcs	2cff0 <myhtml_tokenizer_state_bogus_doctype@@Base+0x64>
   2cfac:	ldrb	r1, [r2, r4]
   2cfb0:	add	r4, r4, #1
   2cfb4:	cmp	r1, #62	; 0x3e
   2cfb8:	bne	2cfa4 <myhtml_tokenizer_state_bogus_doctype@@Base+0x18>
   2cfbc:	ldr	r0, [r3, #32]
   2cfc0:	ldr	r1, [r5, #192]	; 0xc0
   2cfc4:	mov	r2, r3
   2cfc8:	sub	r0, r1, r0
   2cfcc:	mov	r1, r4
   2cfd0:	add	r0, r0, r4
   2cfd4:	str	r0, [r3, #36]	; 0x24
   2cfd8:	mov	r0, r5
   2cfdc:	bl	11104 <myhtml_queue_add@plt>
   2cfe0:	cmp	r0, #0
   2cfe4:	movwne	r0, #69	; 0x45
   2cfe8:	movne	r4, #0
   2cfec:	str	r0, [r5, #160]	; 0xa0
   2cff0:	mov	r0, r4
   2cff4:	pop	{r4, r5, fp, pc}

0002cff8 <myhtml_tokenizer_end_state_data@@Base>:
   2cff8:	push	{r4, r5, fp, lr}
   2cffc:	add	fp, sp, #8
   2d000:	sub	sp, sp, #8
   2d004:	mov	r5, r3
   2d008:	ldr	r3, [r0, #192]	; 0xc0
   2d00c:	ldr	r4, [fp, #8]
   2d010:	add	r3, r3, r4
   2d014:	ldr	r4, [r1, #32]
   2d018:	sub	r4, r3, r4
   2d01c:	str	r4, [r1, #36]	; 0x24
   2d020:	mov	r4, #512	; 0x200
   2d024:	str	r4, [sp]
   2d028:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2d02c:	mov	r0, r5
   2d030:	sub	sp, fp, #8
   2d034:	pop	{r4, r5, fp, pc}

0002d038 <myhtml_tokenizer_end_state_tag_open@@Base>:
   2d038:	push	{r4, r5, r6, r7, fp, lr}
   2d03c:	add	fp, sp, #16
   2d040:	sub	sp, sp, #8
   2d044:	mov	r6, r1
   2d048:	mov	r5, r0
   2d04c:	ldr	r0, [r0, #192]	; 0xc0
   2d050:	ldr	r1, [fp, #8]
   2d054:	mov	r7, r3
   2d058:	ldr	r4, [r6, #32]
   2d05c:	add	r3, r0, r1
   2d060:	ldr	r1, [r6, #24]
   2d064:	sub	r4, r3, r4
   2d068:	str	r4, [r6, #36]	; 0x24
   2d06c:	cmp	r1, r3
   2d070:	bcs	2d0e4 <myhtml_tokenizer_end_state_tag_open@@Base+0xac>
   2d074:	cmp	r1, #0
   2d078:	beq	2d0bc <myhtml_tokenizer_end_state_tag_open@@Base+0x84>
   2d07c:	add	r0, r0, r7
   2d080:	mov	r3, r7
   2d084:	sub	r0, r0, r1
   2d088:	mov	r1, r6
   2d08c:	str	r0, [r6, #28]
   2d090:	mov	r0, r5
   2d094:	bl	11974 <myhtml_check_tag_parser@plt>
   2d098:	mov	r0, r5
   2d09c:	mov	r1, r7
   2d0a0:	mov	r2, r6
   2d0a4:	bl	11104 <myhtml_queue_add@plt>
   2d0a8:	cmp	r0, #0
   2d0ac:	movne	r0, #69	; 0x45
   2d0b0:	movne	r7, #0
   2d0b4:	strne	r0, [r5, #160]	; 0xa0
   2d0b8:	b	2d0e4 <myhtml_tokenizer_end_state_tag_open@@Base+0xac>
   2d0bc:	ldr	r0, [r6, #48]	; 0x30
   2d0c0:	ldr	r1, [r6, #48]	; 0x30
   2d0c4:	and	r0, r0, #8
   2d0c8:	eor	r0, r1, r0
   2d0cc:	mov	r1, r6
   2d0d0:	str	r0, [r6, #48]	; 0x30
   2d0d4:	mov	r0, #512	; 0x200
   2d0d8:	str	r0, [sp]
   2d0dc:	mov	r0, r5
   2d0e0:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2d0e4:	mov	r0, r7
   2d0e8:	sub	sp, fp, #16
   2d0ec:	pop	{r4, r5, r6, r7, fp, pc}

0002d0f0 <myhtml_tokenizer_end_state_tag_name@@Base>:
   2d0f0:	push	{r4, r5, fp, lr}
   2d0f4:	add	fp, sp, #8
   2d0f8:	sub	sp, sp, #8
   2d0fc:	mov	r5, r3
   2d100:	ldr	r3, [r0, #192]	; 0xc0
   2d104:	ldr	r4, [fp, #8]
   2d108:	add	r3, r3, r4
   2d10c:	ldr	r4, [r1, #32]
   2d110:	sub	r4, r3, r4
   2d114:	str	r4, [r1, #36]	; 0x24
   2d118:	mov	r4, #512	; 0x200
   2d11c:	str	r4, [sp]
   2d120:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2d124:	mov	r0, r5
   2d128:	sub	sp, fp, #8
   2d12c:	pop	{r4, r5, fp, pc}

0002d130 <myhtml_tokenizer_end_state_end_tag_open@@Base>:
   2d130:	push	{r4, r5, r6, r7, fp, lr}
   2d134:	add	fp, sp, #16
   2d138:	sub	sp, sp, #8
   2d13c:	mov	r7, r3
   2d140:	ldr	r4, [r0, #192]	; 0xc0
   2d144:	ldr	r3, [fp, #8]
   2d148:	ldr	r5, [r1, #24]
   2d14c:	ldr	r6, [r1, #32]
   2d150:	add	r3, r4, r3
   2d154:	sub	r6, r3, r6
   2d158:	cmp	r5, r3
   2d15c:	str	r6, [r1, #36]	; 0x24
   2d160:	bcs	2d190 <myhtml_tokenizer_end_state_end_tag_open@@Base+0x60>
   2d164:	add	r6, r4, r7
   2d168:	sub	r6, r6, r5
   2d16c:	str	r6, [r1, #28]
   2d170:	ldr	r6, [r1, #48]	; 0x30
   2d174:	ldr	r5, [r1, #48]	; 0x30
   2d178:	and	r6, r6, #8
   2d17c:	eor	r6, r5, r6
   2d180:	str	r6, [r1, #48]	; 0x30
   2d184:	mov	r6, #512	; 0x200
   2d188:	str	r6, [sp]
   2d18c:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2d190:	mov	r0, r7
   2d194:	sub	sp, fp, #16
   2d198:	pop	{r4, r5, r6, r7, fp, pc}

0002d19c <myhtml_tokenizer_end_state_self_closing_start_tag@@Base>:
   2d19c:	push	{r4, r5, fp, lr}
   2d1a0:	add	fp, sp, #8
   2d1a4:	sub	sp, sp, #8
   2d1a8:	mov	r5, r3
   2d1ac:	ldr	r3, [r0, #192]	; 0xc0
   2d1b0:	ldr	r4, [fp, #8]
   2d1b4:	add	r3, r3, r4
   2d1b8:	ldr	r4, [r1, #32]
   2d1bc:	sub	r4, r3, r4
   2d1c0:	str	r4, [r1, #36]	; 0x24
   2d1c4:	mov	r4, #512	; 0x200
   2d1c8:	str	r4, [sp]
   2d1cc:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2d1d0:	mov	r0, r5
   2d1d4:	sub	sp, fp, #8
   2d1d8:	pop	{r4, r5, fp, pc}

0002d1dc <myhtml_tokenizer_end_state_markup_declaration_open@@Base>:
   2d1dc:	push	{r4, r5, r6, r7, fp, lr}
   2d1e0:	add	fp, sp, #16
   2d1e4:	sub	sp, sp, #8
   2d1e8:	mov	r5, r0
   2d1ec:	ldr	r0, [r0, #192]	; 0xc0
   2d1f0:	ldr	r7, [fp, #8]
   2d1f4:	mov	r4, r3
   2d1f8:	ldr	r3, [r1, #24]
   2d1fc:	mov	r6, r1
   2d200:	ldr	r1, [r1, #32]
   2d204:	add	r0, r0, r7
   2d208:	cmp	r3, #2
   2d20c:	sub	r0, r0, r1
   2d210:	str	r0, [r6, #36]	; 0x24
   2d214:	bcc	2d2e4 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x108>
   2d218:	mov	r0, r5
   2d21c:	mov	r1, r6
   2d220:	str	r7, [sp]
   2d224:	bl	110bc <myhtml_tokenizer_state_bogus_comment@plt>
   2d228:	ldr	r1, [r5, #76]	; 0x4c
   2d22c:	str	r0, [r1, #4]
   2d230:	ldr	r2, [r5, #64]	; 0x40
   2d234:	cmp	r2, r6
   2d238:	beq	2d288 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xac>
   2d23c:	ldr	r0, [r5, #192]	; 0xc0
   2d240:	ldr	r1, [r2, #24]
   2d244:	add	r0, r0, r7
   2d248:	subs	r0, r0, r1
   2d24c:	str	r0, [r2, #28]
   2d250:	beq	2d2e4 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x108>
   2d254:	ldr	r1, [r2, #48]	; 0x30
   2d258:	ldr	r3, [r2, #48]	; 0x30
   2d25c:	and	r1, r1, #8
   2d260:	eor	r1, r3, r1
   2d264:	str	r1, [r2, #48]	; 0x30
   2d268:	mov	r1, #1
   2d26c:	str	r1, [r2]
   2d270:	str	r0, [r2, #28]
   2d274:	mov	r1, r4
   2d278:	ldr	r0, [r2, #48]	; 0x30
   2d27c:	orr	r0, r0, #512	; 0x200
   2d280:	str	r0, [r2, #48]	; 0x30
   2d284:	b	2d2cc <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xf0>
   2d288:	ldr	r0, [r6, #24]
   2d28c:	ldr	r1, [r6, #48]	; 0x30
   2d290:	ldr	r2, [r6, #48]	; 0x30
   2d294:	and	r1, r1, #8
   2d298:	eor	r1, r2, r1
   2d29c:	mov	r2, r6
   2d2a0:	str	r1, [r6, #48]	; 0x30
   2d2a4:	mov	r1, #2
   2d2a8:	str	r1, [r6]
   2d2ac:	ldr	r1, [r6, #48]	; 0x30
   2d2b0:	orr	r1, r1, #1024	; 0x400
   2d2b4:	str	r1, [r6, #48]	; 0x30
   2d2b8:	ldr	r1, [r5, #192]	; 0xc0
   2d2bc:	add	r1, r1, r7
   2d2c0:	sub	r0, r1, r0
   2d2c4:	mov	r1, r4
   2d2c8:	str	r0, [r6, #28]
   2d2cc:	mov	r0, r5
   2d2d0:	bl	11104 <myhtml_queue_add@plt>
   2d2d4:	cmp	r0, #0
   2d2d8:	movne	r0, #69	; 0x45
   2d2dc:	movne	r4, #0
   2d2e0:	strne	r0, [r5, #160]	; 0xa0
   2d2e4:	mov	r0, r4
   2d2e8:	sub	sp, fp, #16
   2d2ec:	pop	{r4, r5, r6, r7, fp, pc}

0002d2f0 <myhtml_tokenizer_end_state_before_attribute_name@@Base>:
   2d2f0:	push	{r4, r5, fp, lr}
   2d2f4:	add	fp, sp, #8
   2d2f8:	mov	r2, r1
   2d2fc:	mov	r5, r0
   2d300:	ldr	r0, [r0, #192]	; 0xc0
   2d304:	ldr	r1, [fp, #8]
   2d308:	mov	r4, r3
   2d30c:	add	r0, r0, r1
   2d310:	ldr	r1, [r2, #32]
   2d314:	sub	r0, r0, r1
   2d318:	mov	r1, r3
   2d31c:	str	r0, [r2, #36]	; 0x24
   2d320:	mov	r0, r5
   2d324:	bl	11104 <myhtml_queue_add@plt>
   2d328:	cmp	r0, #0
   2d32c:	movne	r0, #69	; 0x45
   2d330:	movne	r4, #0
   2d334:	strne	r0, [r5, #160]	; 0xa0
   2d338:	mov	r0, r4
   2d33c:	pop	{r4, r5, fp, pc}

0002d340 <myhtml_tokenizer_end_state_attribute_name@@Base>:
   2d340:	push	{r4, r5, fp, lr}
   2d344:	add	fp, sp, #8
   2d348:	mov	r2, r1
   2d34c:	mov	r5, r0
   2d350:	ldr	r0, [r0, #192]	; 0xc0
   2d354:	ldr	r1, [fp, #8]
   2d358:	mov	r4, r3
   2d35c:	ldr	r3, [r2, #32]
   2d360:	add	r1, r0, r1
   2d364:	add	r0, r0, r4
   2d368:	sub	r1, r1, r3
   2d36c:	str	r1, [r2, #36]	; 0x24
   2d370:	ldr	r1, [r5, #56]	; 0x38
   2d374:	ldr	r3, [r1, #48]	; 0x30
   2d378:	sub	r0, r0, r3
   2d37c:	str	r0, [r1, #52]	; 0x34
   2d380:	mov	r0, r5
   2d384:	mov	r1, r4
   2d388:	bl	11104 <myhtml_queue_add@plt>
   2d38c:	cmp	r0, #0
   2d390:	movne	r0, #69	; 0x45
   2d394:	movne	r4, #0
   2d398:	strne	r0, [r5, #160]	; 0xa0
   2d39c:	mov	r0, r4
   2d3a0:	pop	{r4, r5, fp, pc}

0002d3a4 <myhtml_tokenizer_end_state_after_attribute_name@@Base>:
   2d3a4:	push	{r4, r5, fp, lr}
   2d3a8:	add	fp, sp, #8
   2d3ac:	mov	r2, r1
   2d3b0:	mov	r5, r0
   2d3b4:	ldr	r0, [r0, #192]	; 0xc0
   2d3b8:	ldr	r1, [fp, #8]
   2d3bc:	mov	r4, r3
   2d3c0:	add	r0, r0, r1
   2d3c4:	ldr	r1, [r2, #32]
   2d3c8:	sub	r0, r0, r1
   2d3cc:	mov	r1, r3
   2d3d0:	str	r0, [r2, #36]	; 0x24
   2d3d4:	mov	r0, r5
   2d3d8:	bl	11104 <myhtml_queue_add@plt>
   2d3dc:	cmp	r0, #0
   2d3e0:	movne	r0, #69	; 0x45
   2d3e4:	movne	r4, #0
   2d3e8:	strne	r0, [r5, #160]	; 0xa0
   2d3ec:	mov	r0, r4
   2d3f0:	pop	{r4, r5, fp, pc}

0002d3f4 <myhtml_tokenizer_end_state_before_attribute_value@@Base>:
   2d3f4:	push	{r4, r5, fp, lr}
   2d3f8:	add	fp, sp, #8
   2d3fc:	mov	r2, r1
   2d400:	mov	r5, r0
   2d404:	ldr	r0, [r0, #192]	; 0xc0
   2d408:	ldr	r1, [fp, #8]
   2d40c:	mov	r4, r3
   2d410:	add	r0, r0, r1
   2d414:	ldr	r1, [r2, #32]
   2d418:	sub	r0, r0, r1
   2d41c:	mov	r1, r3
   2d420:	str	r0, [r2, #36]	; 0x24
   2d424:	mov	r0, r5
   2d428:	bl	11104 <myhtml_queue_add@plt>
   2d42c:	cmp	r0, #0
   2d430:	bne	2d454 <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x60>
   2d434:	ldr	r0, [r5, #8]
   2d438:	ldr	r1, [r0, #16]
   2d43c:	bl	11740 <myhtml_token_attr_create@plt>
   2d440:	cmp	r0, #0
   2d444:	str	r0, [r5, #56]	; 0x38
   2d448:	beq	2d454 <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x60>
   2d44c:	mov	r0, r4
   2d450:	pop	{r4, r5, fp, pc}
   2d454:	mov	r0, #69	; 0x45
   2d458:	mov	r4, #0
   2d45c:	str	r0, [r5, #160]	; 0xa0
   2d460:	mov	r0, r4
   2d464:	pop	{r4, r5, fp, pc}

0002d468 <myhtml_tokenizer_end_state_attribute_value_double_quoted@@Base>:
   2d468:	ldr	r0, [r0, #192]	; 0xc0
   2d46c:	ldr	r2, [sp]
   2d470:	add	r0, r0, r2
   2d474:	ldr	r2, [r1, #32]
   2d478:	sub	r0, r0, r2
   2d47c:	str	r0, [r1, #36]	; 0x24
   2d480:	mov	r0, r3
   2d484:	bx	lr

0002d488 <myhtml_tokenizer_end_state_attribute_value_single_quoted@@Base>:
   2d488:	ldr	r0, [r0, #192]	; 0xc0
   2d48c:	ldr	r2, [sp]
   2d490:	add	r0, r0, r2
   2d494:	ldr	r2, [r1, #32]
   2d498:	sub	r0, r0, r2
   2d49c:	str	r0, [r1, #36]	; 0x24
   2d4a0:	mov	r0, r3
   2d4a4:	bx	lr

0002d4a8 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base>:
   2d4a8:	push	{r4, r5, fp, lr}
   2d4ac:	add	fp, sp, #8
   2d4b0:	mov	r2, r1
   2d4b4:	mov	r5, r0
   2d4b8:	ldr	r0, [r0, #192]	; 0xc0
   2d4bc:	ldr	r1, [fp, #8]
   2d4c0:	mov	r4, r3
   2d4c4:	ldr	r3, [r2, #32]
   2d4c8:	add	r1, r0, r1
   2d4cc:	add	r0, r0, r4
   2d4d0:	sub	r1, r1, r3
   2d4d4:	str	r1, [r2, #36]	; 0x24
   2d4d8:	ldr	r1, [r5, #56]	; 0x38
   2d4dc:	ldr	r3, [r1, #56]	; 0x38
   2d4e0:	sub	r0, r0, r3
   2d4e4:	str	r0, [r1, #60]	; 0x3c
   2d4e8:	mov	r0, r5
   2d4ec:	mov	r1, r4
   2d4f0:	bl	11104 <myhtml_queue_add@plt>
   2d4f4:	cmp	r0, #0
   2d4f8:	bne	2d51c <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x74>
   2d4fc:	ldr	r0, [r5, #8]
   2d500:	ldr	r1, [r0, #16]
   2d504:	bl	11740 <myhtml_token_attr_create@plt>
   2d508:	cmp	r0, #0
   2d50c:	str	r0, [r5, #56]	; 0x38
   2d510:	beq	2d51c <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x74>
   2d514:	mov	r0, r4
   2d518:	pop	{r4, r5, fp, pc}
   2d51c:	mov	r0, #69	; 0x45
   2d520:	mov	r4, #0
   2d524:	str	r0, [r5, #160]	; 0xa0
   2d528:	mov	r0, r4
   2d52c:	pop	{r4, r5, fp, pc}

0002d530 <myhtml_tokenizer_end_state_after_attribute_value_quoted@@Base>:
   2d530:	push	{r4, r5, fp, lr}
   2d534:	add	fp, sp, #8
   2d538:	mov	r2, r1
   2d53c:	mov	r5, r0
   2d540:	ldr	r0, [r0, #192]	; 0xc0
   2d544:	ldr	r1, [fp, #8]
   2d548:	mov	r4, r3
   2d54c:	ldr	ip, [r2, #24]
   2d550:	ldr	r3, [r2, #32]
   2d554:	add	r1, r0, r1
   2d558:	add	r0, r0, r4
   2d55c:	sub	r1, r1, r3
   2d560:	sub	r0, r0, ip
   2d564:	str	r1, [r2, #36]	; 0x24
   2d568:	str	r0, [r2, #28]
   2d56c:	mov	r0, r5
   2d570:	mov	r1, r4
   2d574:	bl	11104 <myhtml_queue_add@plt>
   2d578:	cmp	r0, #0
   2d57c:	movne	r0, #69	; 0x45
   2d580:	movne	r4, #0
   2d584:	strne	r0, [r5, #160]	; 0xa0
   2d588:	mov	r0, r4
   2d58c:	pop	{r4, r5, fp, pc}

0002d590 <myhtml_tokenizer_end_state_comment_start@@Base>:
   2d590:	push	{r4, r5, fp, lr}
   2d594:	add	fp, sp, #8
   2d598:	mov	r2, r1
   2d59c:	mov	r5, r0
   2d5a0:	ldr	r0, [r0, #192]	; 0xc0
   2d5a4:	ldr	r1, [fp, #8]
   2d5a8:	mov	r4, r3
   2d5ac:	ldr	ip, [r2, #24]
   2d5b0:	ldr	r3, [r2, #32]
   2d5b4:	add	r1, r0, r1
   2d5b8:	add	r0, r0, r4
   2d5bc:	sub	r1, r1, r3
   2d5c0:	sub	r0, r0, ip
   2d5c4:	str	r1, [r2, #36]	; 0x24
   2d5c8:	str	r0, [r2, #28]
   2d5cc:	mov	r0, r5
   2d5d0:	mov	r1, r4
   2d5d4:	bl	11104 <myhtml_queue_add@plt>
   2d5d8:	cmp	r0, #0
   2d5dc:	movne	r0, #69	; 0x45
   2d5e0:	movne	r4, #0
   2d5e4:	strne	r0, [r5, #160]	; 0xa0
   2d5e8:	mov	r0, r4
   2d5ec:	pop	{r4, r5, fp, pc}

0002d5f0 <myhtml_tokenizer_end_state_comment_start_dash@@Base>:
   2d5f0:	push	{r4, r5, fp, lr}
   2d5f4:	add	fp, sp, #8
   2d5f8:	mov	r2, r1
   2d5fc:	mov	r5, r0
   2d600:	ldr	r0, [r0, #192]	; 0xc0
   2d604:	ldr	r1, [fp, #8]
   2d608:	mov	r4, r3
   2d60c:	ldr	ip, [r2, #24]
   2d610:	ldr	r3, [r2, #32]
   2d614:	add	r1, r0, r1
   2d618:	add	r0, r0, r4
   2d61c:	sub	r1, r1, r3
   2d620:	sub	r0, r0, ip
   2d624:	str	r1, [r2, #36]	; 0x24
   2d628:	str	r0, [r2, #28]
   2d62c:	mov	r0, r5
   2d630:	mov	r1, r4
   2d634:	bl	11104 <myhtml_queue_add@plt>
   2d638:	cmp	r0, #0
   2d63c:	movne	r0, #69	; 0x45
   2d640:	movne	r4, #0
   2d644:	strne	r0, [r5, #160]	; 0xa0
   2d648:	mov	r0, r4
   2d64c:	pop	{r4, r5, fp, pc}

0002d650 <myhtml_tokenizer_end_state_comment@@Base>:
   2d650:	push	{r4, r5, fp, lr}
   2d654:	add	fp, sp, #8
   2d658:	mov	r2, r1
   2d65c:	mov	r5, r0
   2d660:	ldr	r0, [r0, #192]	; 0xc0
   2d664:	ldr	r1, [fp, #8]
   2d668:	mov	r4, r3
   2d66c:	ldr	ip, [r2, #24]
   2d670:	ldr	r3, [r2, #32]
   2d674:	add	r1, r0, r1
   2d678:	add	r0, r0, r4
   2d67c:	sub	r1, r1, r3
   2d680:	sub	r0, r0, ip
   2d684:	str	r1, [r2, #36]	; 0x24
   2d688:	str	r0, [r2, #28]
   2d68c:	mov	r0, r5
   2d690:	mov	r1, r4
   2d694:	bl	11104 <myhtml_queue_add@plt>
   2d698:	cmp	r0, #0
   2d69c:	movne	r0, #69	; 0x45
   2d6a0:	movne	r4, #0
   2d6a4:	strne	r0, [r5, #160]	; 0xa0
   2d6a8:	mov	r0, r4
   2d6ac:	pop	{r4, r5, fp, pc}

0002d6b0 <myhtml_tokenizer_end_state_comment_end@@Base>:
   2d6b0:	push	{r4, r5, r6, sl, fp, lr}
   2d6b4:	add	fp, sp, #16
   2d6b8:	mov	r2, r1
   2d6bc:	mov	r6, r0
   2d6c0:	ldr	r0, [r0, #192]	; 0xc0
   2d6c4:	ldr	r1, [fp, #8]
   2d6c8:	mov	r4, r3
   2d6cc:	ldr	r3, [r2, #24]
   2d6d0:	ldr	r5, [r2, #32]
   2d6d4:	add	r1, r0, r1
   2d6d8:	add	r0, r0, r4
   2d6dc:	sub	r0, r0, r3
   2d6e0:	sub	r1, r1, r5
   2d6e4:	cmp	r0, #3
   2d6e8:	str	r1, [r2, #36]	; 0x24
   2d6ec:	str	r0, [r2, #28]
   2d6f0:	bcc	2d718 <myhtml_tokenizer_end_state_comment_end@@Base+0x68>
   2d6f4:	sub	r0, r0, #2
   2d6f8:	mov	r1, r4
   2d6fc:	str	r0, [r2, #28]
   2d700:	mov	r0, r6
   2d704:	bl	11104 <myhtml_queue_add@plt>
   2d708:	cmp	r0, #0
   2d70c:	movne	r0, #69	; 0x45
   2d710:	movne	r4, #0
   2d714:	strne	r0, [r6, #160]	; 0xa0
   2d718:	mov	r0, r4
   2d71c:	pop	{r4, r5, r6, sl, fp, pc}

0002d720 <myhtml_tokenizer_end_state_comment_end_dash@@Base>:
   2d720:	push	{r4, r5, fp, lr}
   2d724:	add	fp, sp, #8
   2d728:	mov	r2, r1
   2d72c:	mov	r5, r0
   2d730:	ldr	r0, [r0, #192]	; 0xc0
   2d734:	ldr	r1, [fp, #8]
   2d738:	mov	r4, r3
   2d73c:	ldr	ip, [r2, #24]
   2d740:	ldr	r3, [r2, #32]
   2d744:	add	r1, r0, r1
   2d748:	add	r0, r0, r4
   2d74c:	sub	r1, r1, r3
   2d750:	sub	r0, r0, ip
   2d754:	str	r1, [r2, #36]	; 0x24
   2d758:	str	r0, [r2, #28]
   2d75c:	mov	r0, r5
   2d760:	mov	r1, r4
   2d764:	bl	11104 <myhtml_queue_add@plt>
   2d768:	cmp	r0, #0
   2d76c:	movne	r0, #69	; 0x45
   2d770:	movne	r4, #0
   2d774:	strne	r0, [r5, #160]	; 0xa0
   2d778:	mov	r0, r4
   2d77c:	pop	{r4, r5, fp, pc}

0002d780 <myhtml_tokenizer_end_state_comment_end_bang@@Base>:
   2d780:	push	{r4, r5, fp, lr}
   2d784:	add	fp, sp, #8
   2d788:	mov	r2, r1
   2d78c:	mov	r5, r0
   2d790:	ldr	r0, [r0, #192]	; 0xc0
   2d794:	ldr	r1, [fp, #8]
   2d798:	mov	r4, r3
   2d79c:	ldr	ip, [r2, #24]
   2d7a0:	ldr	r3, [r2, #32]
   2d7a4:	add	r1, r0, r1
   2d7a8:	add	r0, r0, r4
   2d7ac:	sub	r1, r1, r3
   2d7b0:	sub	r0, r0, ip
   2d7b4:	str	r1, [r2, #36]	; 0x24
   2d7b8:	str	r0, [r2, #28]
   2d7bc:	mov	r0, r5
   2d7c0:	mov	r1, r4
   2d7c4:	bl	11104 <myhtml_queue_add@plt>
   2d7c8:	cmp	r0, #0
   2d7cc:	movne	r0, #69	; 0x45
   2d7d0:	movne	r4, #0
   2d7d4:	strne	r0, [r5, #160]	; 0xa0
   2d7d8:	mov	r0, r4
   2d7dc:	pop	{r4, r5, fp, pc}

0002d7e0 <myhtml_tokenizer_end_state_bogus_comment@@Base>:
   2d7e0:	push	{r4, r5, fp, lr}
   2d7e4:	add	fp, sp, #8
   2d7e8:	mov	r2, r1
   2d7ec:	mov	r5, r0
   2d7f0:	ldr	r0, [r0, #192]	; 0xc0
   2d7f4:	ldr	r1, [fp, #8]
   2d7f8:	mov	r4, r3
   2d7fc:	ldr	ip, [r2, #24]
   2d800:	ldr	r3, [r2, #32]
   2d804:	add	r1, r0, r1
   2d808:	add	r0, r0, r4
   2d80c:	sub	r1, r1, r3
   2d810:	sub	r0, r0, ip
   2d814:	str	r1, [r2, #36]	; 0x24
   2d818:	str	r0, [r2, #28]
   2d81c:	mov	r0, r5
   2d820:	mov	r1, r4
   2d824:	bl	11104 <myhtml_queue_add@plt>
   2d828:	cmp	r0, #0
   2d82c:	movne	r0, #69	; 0x45
   2d830:	movne	r4, #0
   2d834:	strne	r0, [r5, #160]	; 0xa0
   2d838:	mov	r0, r4
   2d83c:	pop	{r4, r5, fp, pc}

0002d840 <myhtml_tokenizer_end_state_cdata_section@@Base>:
   2d840:	push	{r4, r5, r6, sl, fp, lr}
   2d844:	add	fp, sp, #16
   2d848:	mov	r2, r1
   2d84c:	mov	r6, r0
   2d850:	ldr	r0, [r0, #192]	; 0xc0
   2d854:	ldr	r1, [fp, #8]
   2d858:	mov	r4, r3
   2d85c:	ldr	r3, [r2, #24]
   2d860:	ldr	r5, [r2, #32]
   2d864:	add	r1, r0, r1
   2d868:	add	r0, r0, r4
   2d86c:	sub	r1, r1, r5
   2d870:	subs	r0, r0, r3
   2d874:	str	r1, [r2, #36]	; 0x24
   2d878:	str	r0, [r2, #28]
   2d87c:	beq	2d89c <myhtml_tokenizer_end_state_cdata_section@@Base+0x5c>
   2d880:	mov	r0, r6
   2d884:	mov	r1, r4
   2d888:	bl	11104 <myhtml_queue_add@plt>
   2d88c:	cmp	r0, #0
   2d890:	movne	r0, #69	; 0x45
   2d894:	movne	r4, #0
   2d898:	strne	r0, [r6, #160]	; 0xa0
   2d89c:	mov	r0, r4
   2d8a0:	pop	{r4, r5, r6, sl, fp, pc}

0002d8a4 <myhtml_tokenizer_end_state_rcdata@@Base>:
   2d8a4:	push	{r4, r5, fp, lr}
   2d8a8:	add	fp, sp, #8
   2d8ac:	mov	r2, r1
   2d8b0:	mov	r5, r0
   2d8b4:	ldr	r0, [r0, #192]	; 0xc0
   2d8b8:	ldr	r1, [fp, #8]
   2d8bc:	mov	r4, r3
   2d8c0:	ldr	r3, [r2, #32]
   2d8c4:	add	r0, r0, r1
   2d8c8:	ldr	r1, [r2, #24]
   2d8cc:	sub	r3, r0, r3
   2d8d0:	str	r3, [r2, #36]	; 0x24
   2d8d4:	cmp	r0, r1
   2d8d8:	bls	2d914 <myhtml_tokenizer_end_state_rcdata@@Base+0x70>
   2d8dc:	mov	r3, #1
   2d8e0:	sub	r0, r0, r1
   2d8e4:	mov	r1, #0
   2d8e8:	str	r3, [r2]
   2d8ec:	str	r0, [r2, #28]
   2d8f0:	ldr	r0, [r2, #48]	; 0x30
   2d8f4:	orr	r0, r0, #16
   2d8f8:	str	r0, [r2, #48]	; 0x30
   2d8fc:	mov	r0, r5
   2d900:	bl	11104 <myhtml_queue_add@plt>
   2d904:	cmp	r0, #0
   2d908:	movne	r0, #69	; 0x45
   2d90c:	movne	r4, #0
   2d910:	strne	r0, [r5, #160]	; 0xa0
   2d914:	mov	r0, r4
   2d918:	pop	{r4, r5, fp, pc}

0002d91c <myhtml_tokenizer_end_state_rcdata_less_than_sign@@Base>:
   2d91c:	push	{r4, r5, r6, sl, fp, lr}
   2d920:	add	fp, sp, #16
   2d924:	sub	sp, sp, #8
   2d928:	mov	r6, r3
   2d92c:	ldr	r3, [r0, #192]	; 0xc0
   2d930:	ldr	r4, [fp, #8]
   2d934:	ldr	r5, [r1, #32]
   2d938:	add	r4, r3, r4
   2d93c:	add	r3, r3, r6
   2d940:	sub	r5, r4, r5
   2d944:	str	r5, [r1, #36]	; 0x24
   2d948:	mov	r5, #16
   2d94c:	str	r5, [sp]
   2d950:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2d954:	mov	r0, r6
   2d958:	sub	sp, fp, #16
   2d95c:	pop	{r4, r5, r6, sl, fp, pc}

0002d960 <myhtml_tokenizer_end_state_rcdata_end_tag_open@@Base>:
   2d960:	push	{r4, r5, r6, sl, fp, lr}
   2d964:	add	fp, sp, #16
   2d968:	sub	sp, sp, #8
   2d96c:	mov	r6, r3
   2d970:	ldr	r3, [r0, #192]	; 0xc0
   2d974:	ldr	r4, [fp, #8]
   2d978:	ldr	r5, [r1, #32]
   2d97c:	add	r4, r3, r4
   2d980:	add	r3, r3, r6
   2d984:	sub	r5, r4, r5
   2d988:	str	r5, [r1, #36]	; 0x24
   2d98c:	mov	r5, #16
   2d990:	str	r5, [sp]
   2d994:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2d998:	mov	r0, r6
   2d99c:	sub	sp, fp, #16
   2d9a0:	pop	{r4, r5, r6, sl, fp, pc}

0002d9a4 <myhtml_tokenizer_end_state_rcdata_end_tag_name@@Base>:
   2d9a4:	push	{r4, r5, r6, sl, fp, lr}
   2d9a8:	add	fp, sp, #16
   2d9ac:	sub	sp, sp, #8
   2d9b0:	mov	r6, r3
   2d9b4:	ldr	r3, [r0, #192]	; 0xc0
   2d9b8:	ldr	r4, [fp, #8]
   2d9bc:	ldr	r5, [r1, #32]
   2d9c0:	add	r4, r3, r4
   2d9c4:	add	r3, r3, r6
   2d9c8:	sub	r5, r4, r5
   2d9cc:	str	r5, [r1, #36]	; 0x24
   2d9d0:	mov	r5, #16
   2d9d4:	str	r5, [sp]
   2d9d8:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2d9dc:	mov	r0, r6
   2d9e0:	sub	sp, fp, #16
   2d9e4:	pop	{r4, r5, r6, sl, fp, pc}

0002d9e8 <myhtml_tokenizer_end_state_rawtext@@Base>:
   2d9e8:	push	{r4, r5, r6, sl, fp, lr}
   2d9ec:	add	fp, sp, #16
   2d9f0:	sub	sp, sp, #8
   2d9f4:	mov	r6, r3
   2d9f8:	ldr	r3, [r0, #192]	; 0xc0
   2d9fc:	ldr	r4, [fp, #8]
   2da00:	ldr	r5, [r1, #32]
   2da04:	add	r4, r3, r4
   2da08:	add	r3, r3, r6
   2da0c:	sub	r5, r4, r5
   2da10:	str	r5, [r1, #36]	; 0x24
   2da14:	mov	r5, #32
   2da18:	str	r5, [sp]
   2da1c:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2da20:	mov	r0, r6
   2da24:	sub	sp, fp, #16
   2da28:	pop	{r4, r5, r6, sl, fp, pc}

0002da2c <myhtml_tokenizer_end_state_rawtext_less_than_sign@@Base>:
   2da2c:	push	{r4, r5, r6, sl, fp, lr}
   2da30:	add	fp, sp, #16
   2da34:	sub	sp, sp, #8
   2da38:	mov	r6, r3
   2da3c:	ldr	r3, [r0, #192]	; 0xc0
   2da40:	ldr	r4, [fp, #8]
   2da44:	ldr	r5, [r1, #32]
   2da48:	add	r4, r3, r4
   2da4c:	add	r3, r3, r6
   2da50:	sub	r5, r4, r5
   2da54:	str	r5, [r1, #36]	; 0x24
   2da58:	mov	r5, #32
   2da5c:	str	r5, [sp]
   2da60:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2da64:	mov	r0, r6
   2da68:	sub	sp, fp, #16
   2da6c:	pop	{r4, r5, r6, sl, fp, pc}

0002da70 <myhtml_tokenizer_end_state_rawtext_end_tag_open@@Base>:
   2da70:	push	{r4, r5, r6, sl, fp, lr}
   2da74:	add	fp, sp, #16
   2da78:	sub	sp, sp, #8
   2da7c:	mov	r6, r3
   2da80:	ldr	r3, [r0, #192]	; 0xc0
   2da84:	ldr	r4, [fp, #8]
   2da88:	ldr	r5, [r1, #32]
   2da8c:	add	r4, r3, r4
   2da90:	add	r3, r3, r6
   2da94:	sub	r5, r4, r5
   2da98:	str	r5, [r1, #36]	; 0x24
   2da9c:	mov	r5, #32
   2daa0:	str	r5, [sp]
   2daa4:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2daa8:	mov	r0, r6
   2daac:	sub	sp, fp, #16
   2dab0:	pop	{r4, r5, r6, sl, fp, pc}

0002dab4 <myhtml_tokenizer_end_state_rawtext_end_tag_name@@Base>:
   2dab4:	push	{r4, r5, r6, sl, fp, lr}
   2dab8:	add	fp, sp, #16
   2dabc:	sub	sp, sp, #8
   2dac0:	mov	r6, r3
   2dac4:	ldr	r3, [r0, #192]	; 0xc0
   2dac8:	ldr	r4, [fp, #8]
   2dacc:	ldr	r5, [r1, #32]
   2dad0:	add	r4, r3, r4
   2dad4:	add	r3, r3, r6
   2dad8:	sub	r5, r4, r5
   2dadc:	str	r5, [r1, #36]	; 0x24
   2dae0:	mov	r5, #32
   2dae4:	str	r5, [sp]
   2dae8:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2daec:	mov	r0, r6
   2daf0:	sub	sp, fp, #16
   2daf4:	pop	{r4, r5, r6, sl, fp, pc}

0002daf8 <myhtml_tokenizer_end_state_plaintext@@Base>:
   2daf8:	ldr	r0, [r0, #192]	; 0xc0
   2dafc:	ldr	r2, [sp]
   2db00:	add	r0, r0, r2
   2db04:	ldr	r2, [r1, #32]
   2db08:	sub	r0, r0, r2
   2db0c:	str	r0, [r1, #36]	; 0x24
   2db10:	mov	r0, r3
   2db14:	bx	lr

0002db18 <myhtml_tokenizer_end_state_doctype@@Base>:
   2db18:	push	{r4, r5, r6, sl, fp, lr}
   2db1c:	add	fp, sp, #16
   2db20:	sub	sp, sp, #8
   2db24:	mov	r6, r3
   2db28:	ldr	r3, [r0, #192]	; 0xc0
   2db2c:	ldr	r4, [fp, #8]
   2db30:	ldr	r5, [r1, #32]
   2db34:	add	r4, r3, r4
   2db38:	add	r3, r3, r6
   2db3c:	sub	r5, r4, r5
   2db40:	str	r5, [r1, #36]	; 0x24
   2db44:	mov	r5, #32
   2db48:	str	r5, [sp]
   2db4c:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2db50:	mov	r0, r6
   2db54:	sub	sp, fp, #16
   2db58:	pop	{r4, r5, r6, sl, fp, pc}

0002db5c <myhtml_tokenizer_end_state_before_doctype_name@@Base>:
   2db5c:	push	{r4, r5, fp, lr}
   2db60:	add	fp, sp, #8
   2db64:	mov	r2, r1
   2db68:	mov	r5, r0
   2db6c:	ldr	r0, [r0, #192]	; 0xc0
   2db70:	ldr	r1, [fp, #8]
   2db74:	mov	r4, r3
   2db78:	add	r0, r0, r1
   2db7c:	ldr	r1, [r2, #32]
   2db80:	sub	r0, r0, r1
   2db84:	mov	r1, r3
   2db88:	str	r0, [r2, #36]	; 0x24
   2db8c:	mov	r0, #1
   2db90:	str	r0, [r5, #176]	; 0xb0
   2db94:	mov	r0, r5
   2db98:	bl	11104 <myhtml_queue_add@plt>
   2db9c:	cmp	r0, #0
   2dba0:	movne	r0, #69	; 0x45
   2dba4:	movne	r4, #0
   2dba8:	strne	r0, [r5, #160]	; 0xa0
   2dbac:	mov	r0, r4
   2dbb0:	pop	{r4, r5, fp, pc}

0002dbb4 <myhtml_tokenizer_end_state_doctype_name@@Base>:
   2dbb4:	push	{r4, r5, fp, lr}
   2dbb8:	add	fp, sp, #8
   2dbbc:	mov	r2, r1
   2dbc0:	mov	r5, r0
   2dbc4:	ldr	r0, [r0, #192]	; 0xc0
   2dbc8:	ldr	r1, [fp, #8]
   2dbcc:	mov	r4, r3
   2dbd0:	ldr	r3, [r2, #32]
   2dbd4:	add	r1, r0, r1
   2dbd8:	add	r0, r0, r4
   2dbdc:	sub	r1, r1, r3
   2dbe0:	str	r1, [r2, #36]	; 0x24
   2dbe4:	ldr	r1, [r5, #56]	; 0x38
   2dbe8:	ldr	r3, [r1, #48]	; 0x30
   2dbec:	sub	r0, r0, r3
   2dbf0:	str	r0, [r1, #52]	; 0x34
   2dbf4:	mov	r0, r5
   2dbf8:	mov	r1, r4
   2dbfc:	bl	11104 <myhtml_queue_add@plt>
   2dc00:	cmp	r0, #0
   2dc04:	movne	r0, #69	; 0x45
   2dc08:	movne	r4, #0
   2dc0c:	strne	r0, [r5, #160]	; 0xa0
   2dc10:	mov	r0, r4
   2dc14:	pop	{r4, r5, fp, pc}

0002dc18 <myhtml_tokenizer_end_state_after_doctype_name@@Base>:
   2dc18:	push	{r4, r5, fp, lr}
   2dc1c:	add	fp, sp, #8
   2dc20:	mov	r2, r1
   2dc24:	mov	r5, r0
   2dc28:	ldr	r0, [r0, #192]	; 0xc0
   2dc2c:	ldr	r1, [fp, #8]
   2dc30:	mov	r4, r3
   2dc34:	add	r0, r0, r1
   2dc38:	ldr	r1, [r2, #32]
   2dc3c:	sub	r0, r0, r1
   2dc40:	mov	r1, r3
   2dc44:	str	r0, [r2, #36]	; 0x24
   2dc48:	mov	r0, r5
   2dc4c:	bl	11104 <myhtml_queue_add@plt>
   2dc50:	cmp	r0, #0
   2dc54:	movne	r0, #69	; 0x45
   2dc58:	movne	r4, #0
   2dc5c:	strne	r0, [r5, #160]	; 0xa0
   2dc60:	mov	r0, r4
   2dc64:	pop	{r4, r5, fp, pc}

0002dc68 <myhtml_tokenizer_end_state_custom_after_doctype_name_a_z@@Base>:
   2dc68:	push	{r4, r5, fp, lr}
   2dc6c:	add	fp, sp, #8
   2dc70:	mov	r2, r1
   2dc74:	mov	r5, r0
   2dc78:	ldr	r0, [r0, #192]	; 0xc0
   2dc7c:	ldr	r1, [fp, #8]
   2dc80:	mov	r4, r3
   2dc84:	add	r0, r0, r1
   2dc88:	ldr	r1, [r2, #32]
   2dc8c:	sub	r0, r0, r1
   2dc90:	mov	r1, r3
   2dc94:	str	r0, [r2, #36]	; 0x24
   2dc98:	mov	r0, r5
   2dc9c:	bl	11104 <myhtml_queue_add@plt>
   2dca0:	cmp	r0, #0
   2dca4:	movne	r0, #69	; 0x45
   2dca8:	movne	r4, #0
   2dcac:	strne	r0, [r5, #160]	; 0xa0
   2dcb0:	mov	r0, r4
   2dcb4:	pop	{r4, r5, fp, pc}

0002dcb8 <myhtml_tokenizer_end_state_before_doctype_public_identifier@@Base>:
   2dcb8:	push	{r4, r5, fp, lr}
   2dcbc:	add	fp, sp, #8
   2dcc0:	mov	r2, r1
   2dcc4:	mov	r5, r0
   2dcc8:	ldr	r0, [r0, #192]	; 0xc0
   2dccc:	ldr	r1, [fp, #8]
   2dcd0:	mov	r4, r3
   2dcd4:	add	r0, r0, r1
   2dcd8:	ldr	r1, [r2, #32]
   2dcdc:	sub	r0, r0, r1
   2dce0:	mov	r1, r3
   2dce4:	str	r0, [r2, #36]	; 0x24
   2dce8:	mov	r0, #1
   2dcec:	str	r0, [r5, #176]	; 0xb0
   2dcf0:	mov	r0, r5
   2dcf4:	bl	11104 <myhtml_queue_add@plt>
   2dcf8:	cmp	r0, #0
   2dcfc:	movne	r0, #69	; 0x45
   2dd00:	movne	r4, #0
   2dd04:	strne	r0, [r5, #160]	; 0xa0
   2dd08:	mov	r0, r4
   2dd0c:	pop	{r4, r5, fp, pc}

0002dd10 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@@Base>:
   2dd10:	push	{r4, r5, fp, lr}
   2dd14:	add	fp, sp, #8
   2dd18:	mov	r5, r0
   2dd1c:	ldr	ip, [fp, #8]
   2dd20:	ldr	r0, [r0, #192]	; 0xc0
   2dd24:	mov	r2, r1
   2dd28:	ldr	r1, [r1, #32]
   2dd2c:	mov	r4, r3
   2dd30:	add	r3, r0, ip
   2dd34:	cmp	ip, #0
   2dd38:	sub	r1, r3, r1
   2dd3c:	str	r1, [r2, #36]	; 0x24
   2dd40:	mov	r1, #1
   2dd44:	str	r1, [r5, #176]	; 0xb0
   2dd48:	ldrne	r1, [r5, #56]	; 0x38
   2dd4c:	ldrne	r3, [r1, #48]	; 0x30
   2dd50:	cmpne	r3, #0
   2dd54:	addne	r0, r0, r4
   2dd58:	subne	r0, r0, r3
   2dd5c:	strne	r0, [r1, #52]	; 0x34
   2dd60:	mov	r0, r5
   2dd64:	mov	r1, r4
   2dd68:	bl	11104 <myhtml_queue_add@plt>
   2dd6c:	cmp	r0, #0
   2dd70:	movne	r0, #69	; 0x45
   2dd74:	movne	r4, #0
   2dd78:	strne	r0, [r5, #160]	; 0xa0
   2dd7c:	mov	r0, r4
   2dd80:	pop	{r4, r5, fp, pc}

0002dd84 <myhtml_tokenizer_end_state_doctype_public_identifier_single_quoted@@Base>:
   2dd84:	push	{r4, r5, r6, sl, fp, lr}
   2dd88:	add	fp, sp, #16
   2dd8c:	mov	r6, r3
   2dd90:	mov	r2, r1
   2dd94:	mov	r5, r0
   2dd98:	ldr	r3, [fp, #8]
   2dd9c:	ldr	r0, [r0, #192]	; 0xc0
   2dda0:	ldr	r4, [r2, #32]
   2dda4:	add	r1, r0, r3
   2dda8:	cmp	r3, #0
   2ddac:	sub	r1, r1, r4
   2ddb0:	str	r1, [r2, #36]	; 0x24
   2ddb4:	mov	r1, #1
   2ddb8:	str	r1, [r5, #176]	; 0xb0
   2ddbc:	add	r1, r0, r6
   2ddc0:	ldrne	r3, [r5, #56]	; 0x38
   2ddc4:	ldrne	r4, [r3, #48]	; 0x30
   2ddc8:	cmpne	r4, #0
   2ddcc:	addne	r0, r1, r0
   2ddd0:	subne	r0, r0, r4
   2ddd4:	strne	r0, [r3, #52]	; 0x34
   2ddd8:	mov	r0, r5
   2dddc:	bl	11104 <myhtml_queue_add@plt>
   2dde0:	cmp	r0, #0
   2dde4:	movne	r0, #69	; 0x45
   2dde8:	strne	r0, [r5, #160]	; 0xa0
   2ddec:	mov	r0, r6
   2ddf0:	pop	{r4, r5, r6, sl, fp, pc}

0002ddf4 <myhtml_tokenizer_end_state_after_doctype_public_identifier@@Base>:
   2ddf4:	push	{r4, r5, fp, lr}
   2ddf8:	add	fp, sp, #8
   2ddfc:	mov	r2, r1
   2de00:	mov	r5, r0
   2de04:	ldr	r0, [r0, #192]	; 0xc0
   2de08:	ldr	r1, [fp, #8]
   2de0c:	mov	r4, r3
   2de10:	add	r0, r0, r1
   2de14:	ldr	r1, [r2, #32]
   2de18:	sub	r0, r0, r1
   2de1c:	mov	r1, r3
   2de20:	str	r0, [r2, #36]	; 0x24
   2de24:	mov	r0, r5
   2de28:	bl	11104 <myhtml_queue_add@plt>
   2de2c:	cmp	r0, #0
   2de30:	movne	r0, #69	; 0x45
   2de34:	movne	r4, #0
   2de38:	strne	r0, [r5, #160]	; 0xa0
   2de3c:	mov	r0, r4
   2de40:	pop	{r4, r5, fp, pc}

0002de44 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base>:
   2de44:	push	{r4, r5, fp, lr}
   2de48:	add	fp, sp, #8
   2de4c:	mov	r5, r0
   2de50:	ldr	ip, [fp, #8]
   2de54:	ldr	r0, [r0, #192]	; 0xc0
   2de58:	mov	r2, r1
   2de5c:	ldr	r1, [r1, #32]
   2de60:	mov	r4, r3
   2de64:	add	r3, r0, ip
   2de68:	cmp	ip, #0
   2de6c:	sub	r1, r3, r1
   2de70:	str	r1, [r2, #36]	; 0x24
   2de74:	mov	r1, #1
   2de78:	str	r1, [r5, #176]	; 0xb0
   2de7c:	ldrne	r1, [r5, #56]	; 0x38
   2de80:	ldrne	r3, [r1, #48]	; 0x30
   2de84:	cmpne	r3, #0
   2de88:	addne	r0, r0, r4
   2de8c:	subne	r0, r0, r3
   2de90:	strne	r0, [r1, #52]	; 0x34
   2de94:	mov	r0, r5
   2de98:	mov	r1, r4
   2de9c:	bl	11104 <myhtml_queue_add@plt>
   2dea0:	cmp	r0, #0
   2dea4:	movne	r0, #69	; 0x45
   2dea8:	movne	r4, #0
   2deac:	strne	r0, [r5, #160]	; 0xa0
   2deb0:	mov	r0, r4
   2deb4:	pop	{r4, r5, fp, pc}

0002deb8 <myhtml_tokenizer_end_state_doctype_system_identifier_single_quoted@@Base>:
   2deb8:	push	{r4, r5, r6, sl, fp, lr}
   2debc:	add	fp, sp, #16
   2dec0:	mov	r6, r3
   2dec4:	mov	r2, r1
   2dec8:	mov	r5, r0
   2decc:	ldr	r3, [fp, #8]
   2ded0:	ldr	r0, [r0, #192]	; 0xc0
   2ded4:	ldr	r4, [r2, #32]
   2ded8:	add	r1, r0, r3
   2dedc:	cmp	r3, #0
   2dee0:	sub	r1, r1, r4
   2dee4:	str	r1, [r2, #36]	; 0x24
   2dee8:	mov	r1, #1
   2deec:	str	r1, [r5, #176]	; 0xb0
   2def0:	add	r1, r0, r6
   2def4:	ldrne	r3, [r5, #56]	; 0x38
   2def8:	ldrne	r4, [r3, #48]	; 0x30
   2defc:	cmpne	r4, #0
   2df00:	addne	r0, r1, r0
   2df04:	subne	r0, r0, r4
   2df08:	strne	r0, [r3, #52]	; 0x34
   2df0c:	mov	r0, r5
   2df10:	bl	11104 <myhtml_queue_add@plt>
   2df14:	cmp	r0, #0
   2df18:	movne	r0, #69	; 0x45
   2df1c:	strne	r0, [r5, #160]	; 0xa0
   2df20:	mov	r0, r6
   2df24:	pop	{r4, r5, r6, sl, fp, pc}

0002df28 <myhtml_tokenizer_end_state_after_doctype_system_identifier@@Base>:
   2df28:	push	{r4, r5, fp, lr}
   2df2c:	add	fp, sp, #8
   2df30:	mov	r2, r1
   2df34:	mov	r5, r0
   2df38:	ldr	r0, [r0, #192]	; 0xc0
   2df3c:	ldr	r1, [fp, #8]
   2df40:	mov	r4, r3
   2df44:	add	r0, r0, r1
   2df48:	ldr	r1, [r2, #32]
   2df4c:	sub	r0, r0, r1
   2df50:	mov	r1, r3
   2df54:	str	r0, [r2, #36]	; 0x24
   2df58:	mov	r0, r5
   2df5c:	bl	11104 <myhtml_queue_add@plt>
   2df60:	cmp	r0, #0
   2df64:	movne	r0, #69	; 0x45
   2df68:	movne	r4, #0
   2df6c:	strne	r0, [r5, #160]	; 0xa0
   2df70:	mov	r0, r4
   2df74:	pop	{r4, r5, fp, pc}

0002df78 <myhtml_tokenizer_end_state_bogus_doctype@@Base>:
   2df78:	push	{r4, r5, fp, lr}
   2df7c:	add	fp, sp, #8
   2df80:	mov	r2, r1
   2df84:	mov	r5, r0
   2df88:	ldr	r0, [r0, #192]	; 0xc0
   2df8c:	ldr	r1, [fp, #8]
   2df90:	mov	r4, r3
   2df94:	add	r0, r0, r1
   2df98:	ldr	r1, [r2, #32]
   2df9c:	sub	r0, r0, r1
   2dfa0:	mov	r1, r3
   2dfa4:	str	r0, [r2, #36]	; 0x24
   2dfa8:	mov	r0, r5
   2dfac:	bl	11104 <myhtml_queue_add@plt>
   2dfb0:	cmp	r0, #0
   2dfb4:	movne	r0, #69	; 0x45
   2dfb8:	movne	r4, #0
   2dfbc:	strne	r0, [r5, #160]	; 0xa0
   2dfc0:	mov	r0, r4
   2dfc4:	pop	{r4, r5, fp, pc}

0002dfc8 <myhtml_tokenizer_end_state_script_data@@Base>:
   2dfc8:	push	{r4, r5, r6, sl, fp, lr}
   2dfcc:	add	fp, sp, #16
   2dfd0:	sub	sp, sp, #8
   2dfd4:	mov	r6, r3
   2dfd8:	ldr	r3, [r0, #192]	; 0xc0
   2dfdc:	ldr	r4, [fp, #8]
   2dfe0:	ldr	r5, [r1, #32]
   2dfe4:	add	r4, r3, r4
   2dfe8:	add	r3, r3, r6
   2dfec:	sub	r5, r4, r5
   2dff0:	str	r5, [r1, #36]	; 0x24
   2dff4:	mov	r5, #64	; 0x40
   2dff8:	str	r5, [sp]
   2dffc:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e000:	mov	r0, r6
   2e004:	sub	sp, fp, #16
   2e008:	pop	{r4, r5, r6, sl, fp, pc}

0002e00c <myhtml_tokenizer_end_state_script_data_less_than_sign@@Base>:
   2e00c:	push	{r4, r5, r6, sl, fp, lr}
   2e010:	add	fp, sp, #16
   2e014:	sub	sp, sp, #8
   2e018:	mov	r6, r3
   2e01c:	ldr	r3, [r0, #192]	; 0xc0
   2e020:	ldr	r4, [fp, #8]
   2e024:	ldr	r5, [r1, #32]
   2e028:	add	r4, r3, r4
   2e02c:	add	r3, r3, r6
   2e030:	sub	r5, r4, r5
   2e034:	str	r5, [r1, #36]	; 0x24
   2e038:	mov	r5, #64	; 0x40
   2e03c:	str	r5, [sp]
   2e040:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e044:	mov	r0, r6
   2e048:	sub	sp, fp, #16
   2e04c:	pop	{r4, r5, r6, sl, fp, pc}

0002e050 <myhtml_tokenizer_end_state_script_data_end_tag_open@@Base>:
   2e050:	push	{r4, r5, r6, sl, fp, lr}
   2e054:	add	fp, sp, #16
   2e058:	sub	sp, sp, #8
   2e05c:	mov	r6, r3
   2e060:	ldr	r3, [r0, #192]	; 0xc0
   2e064:	ldr	r4, [fp, #8]
   2e068:	ldr	r5, [r1, #32]
   2e06c:	add	r4, r3, r4
   2e070:	add	r3, r3, r6
   2e074:	sub	r5, r4, r5
   2e078:	str	r5, [r1, #36]	; 0x24
   2e07c:	mov	r5, #64	; 0x40
   2e080:	str	r5, [sp]
   2e084:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e088:	mov	r0, r6
   2e08c:	sub	sp, fp, #16
   2e090:	pop	{r4, r5, r6, sl, fp, pc}

0002e094 <myhtml_tokenizer_end_state_script_data_end_tag_name@@Base>:
   2e094:	push	{r4, r5, r6, sl, fp, lr}
   2e098:	add	fp, sp, #16
   2e09c:	sub	sp, sp, #8
   2e0a0:	mov	r6, r3
   2e0a4:	ldr	r3, [r0, #192]	; 0xc0
   2e0a8:	ldr	r4, [fp, #8]
   2e0ac:	ldr	r5, [r1, #32]
   2e0b0:	add	r4, r3, r4
   2e0b4:	add	r3, r3, r6
   2e0b8:	sub	r5, r4, r5
   2e0bc:	str	r5, [r1, #36]	; 0x24
   2e0c0:	mov	r5, #64	; 0x40
   2e0c4:	str	r5, [sp]
   2e0c8:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e0cc:	mov	r0, r6
   2e0d0:	sub	sp, fp, #16
   2e0d4:	pop	{r4, r5, r6, sl, fp, pc}

0002e0d8 <myhtml_tokenizer_end_state_script_data_escape_start@@Base>:
   2e0d8:	push	{r4, r5, r6, sl, fp, lr}
   2e0dc:	add	fp, sp, #16
   2e0e0:	sub	sp, sp, #8
   2e0e4:	mov	r6, r3
   2e0e8:	ldr	r3, [r0, #192]	; 0xc0
   2e0ec:	ldr	r4, [fp, #8]
   2e0f0:	ldr	r5, [r1, #32]
   2e0f4:	add	r4, r3, r4
   2e0f8:	add	r3, r3, r6
   2e0fc:	sub	r5, r4, r5
   2e100:	str	r5, [r1, #36]	; 0x24
   2e104:	mov	r5, #64	; 0x40
   2e108:	str	r5, [sp]
   2e10c:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e110:	mov	r0, r6
   2e114:	sub	sp, fp, #16
   2e118:	pop	{r4, r5, r6, sl, fp, pc}

0002e11c <myhtml_tokenizer_end_state_script_data_escape_start_dash@@Base>:
   2e11c:	push	{r4, r5, r6, sl, fp, lr}
   2e120:	add	fp, sp, #16
   2e124:	sub	sp, sp, #8
   2e128:	mov	r6, r3
   2e12c:	ldr	r3, [r0, #192]	; 0xc0
   2e130:	ldr	r4, [fp, #8]
   2e134:	ldr	r5, [r1, #32]
   2e138:	add	r4, r3, r4
   2e13c:	add	r3, r3, r6
   2e140:	sub	r5, r4, r5
   2e144:	str	r5, [r1, #36]	; 0x24
   2e148:	mov	r5, #64	; 0x40
   2e14c:	str	r5, [sp]
   2e150:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e154:	mov	r0, r6
   2e158:	sub	sp, fp, #16
   2e15c:	pop	{r4, r5, r6, sl, fp, pc}

0002e160 <myhtml_tokenizer_end_state_script_data_escaped@@Base>:
   2e160:	push	{r4, r5, r6, sl, fp, lr}
   2e164:	add	fp, sp, #16
   2e168:	sub	sp, sp, #8
   2e16c:	mov	r6, r3
   2e170:	ldr	r3, [r0, #192]	; 0xc0
   2e174:	ldr	r4, [fp, #8]
   2e178:	ldr	r5, [r1, #32]
   2e17c:	add	r4, r3, r4
   2e180:	add	r3, r3, r6
   2e184:	sub	r5, r4, r5
   2e188:	str	r5, [r1, #36]	; 0x24
   2e18c:	mov	r5, #64	; 0x40
   2e190:	str	r5, [sp]
   2e194:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e198:	mov	r0, r6
   2e19c:	sub	sp, fp, #16
   2e1a0:	pop	{r4, r5, r6, sl, fp, pc}

0002e1a4 <myhtml_tokenizer_end_state_script_data_escaped_dash@@Base>:
   2e1a4:	push	{r4, r5, r6, sl, fp, lr}
   2e1a8:	add	fp, sp, #16
   2e1ac:	sub	sp, sp, #8
   2e1b0:	mov	r6, r3
   2e1b4:	ldr	r3, [r0, #192]	; 0xc0
   2e1b8:	ldr	r4, [fp, #8]
   2e1bc:	ldr	r5, [r1, #32]
   2e1c0:	add	r4, r3, r4
   2e1c4:	add	r3, r3, r6
   2e1c8:	sub	r5, r4, r5
   2e1cc:	str	r5, [r1, #36]	; 0x24
   2e1d0:	mov	r5, #64	; 0x40
   2e1d4:	str	r5, [sp]
   2e1d8:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e1dc:	mov	r0, r6
   2e1e0:	sub	sp, fp, #16
   2e1e4:	pop	{r4, r5, r6, sl, fp, pc}

0002e1e8 <myhtml_tokenizer_end_state_script_data_escaped_dash_dash@@Base>:
   2e1e8:	push	{r4, r5, r6, sl, fp, lr}
   2e1ec:	add	fp, sp, #16
   2e1f0:	sub	sp, sp, #8
   2e1f4:	mov	r6, r3
   2e1f8:	ldr	r3, [r0, #192]	; 0xc0
   2e1fc:	ldr	r4, [fp, #8]
   2e200:	ldr	r5, [r1, #32]
   2e204:	add	r4, r3, r4
   2e208:	add	r3, r3, r6
   2e20c:	sub	r5, r4, r5
   2e210:	str	r5, [r1, #36]	; 0x24
   2e214:	mov	r5, #64	; 0x40
   2e218:	str	r5, [sp]
   2e21c:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e220:	mov	r0, r6
   2e224:	sub	sp, fp, #16
   2e228:	pop	{r4, r5, r6, sl, fp, pc}

0002e22c <myhtml_tokenizer_end_state_script_data_escaped_less_than_sign@@Base>:
   2e22c:	push	{r4, r5, r6, sl, fp, lr}
   2e230:	add	fp, sp, #16
   2e234:	sub	sp, sp, #8
   2e238:	mov	r6, r3
   2e23c:	ldr	r3, [r0, #192]	; 0xc0
   2e240:	ldr	r4, [fp, #8]
   2e244:	ldr	r5, [r1, #32]
   2e248:	add	r4, r3, r4
   2e24c:	add	r3, r3, r6
   2e250:	sub	r5, r4, r5
   2e254:	str	r5, [r1, #36]	; 0x24
   2e258:	mov	r5, #64	; 0x40
   2e25c:	str	r5, [sp]
   2e260:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e264:	mov	r0, r6
   2e268:	sub	sp, fp, #16
   2e26c:	pop	{r4, r5, r6, sl, fp, pc}

0002e270 <myhtml_tokenizer_end_state_script_data_escaped_end_tag_open@@Base>:
   2e270:	push	{r4, r5, r6, sl, fp, lr}
   2e274:	add	fp, sp, #16
   2e278:	sub	sp, sp, #8
   2e27c:	mov	r6, r3
   2e280:	ldr	r3, [r0, #192]	; 0xc0
   2e284:	ldr	r4, [fp, #8]
   2e288:	ldr	r5, [r1, #32]
   2e28c:	add	r4, r3, r4
   2e290:	add	r3, r3, r6
   2e294:	sub	r5, r4, r5
   2e298:	str	r5, [r1, #36]	; 0x24
   2e29c:	mov	r5, #64	; 0x40
   2e2a0:	str	r5, [sp]
   2e2a4:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e2a8:	mov	r0, r6
   2e2ac:	sub	sp, fp, #16
   2e2b0:	pop	{r4, r5, r6, sl, fp, pc}

0002e2b4 <myhtml_tokenizer_end_state_script_data_escaped_end_tag_name@@Base>:
   2e2b4:	push	{r4, r5, r6, sl, fp, lr}
   2e2b8:	add	fp, sp, #16
   2e2bc:	sub	sp, sp, #8
   2e2c0:	mov	r6, r3
   2e2c4:	ldr	r3, [r0, #192]	; 0xc0
   2e2c8:	ldr	r4, [fp, #8]
   2e2cc:	ldr	r5, [r1, #32]
   2e2d0:	add	r4, r3, r4
   2e2d4:	add	r3, r3, r6
   2e2d8:	sub	r5, r4, r5
   2e2dc:	str	r5, [r1, #36]	; 0x24
   2e2e0:	mov	r5, #64	; 0x40
   2e2e4:	str	r5, [sp]
   2e2e8:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e2ec:	mov	r0, r6
   2e2f0:	sub	sp, fp, #16
   2e2f4:	pop	{r4, r5, r6, sl, fp, pc}

0002e2f8 <myhtml_tokenizer_end_state_script_data_double_escape_start@@Base>:
   2e2f8:	push	{r4, r5, r6, sl, fp, lr}
   2e2fc:	add	fp, sp, #16
   2e300:	sub	sp, sp, #8
   2e304:	mov	r6, r3
   2e308:	ldr	r3, [r0, #192]	; 0xc0
   2e30c:	ldr	r4, [fp, #8]
   2e310:	ldr	r5, [r1, #32]
   2e314:	add	r4, r3, r4
   2e318:	add	r3, r3, r6
   2e31c:	sub	r5, r4, r5
   2e320:	str	r5, [r1, #36]	; 0x24
   2e324:	mov	r5, #64	; 0x40
   2e328:	str	r5, [sp]
   2e32c:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e330:	mov	r0, r6
   2e334:	sub	sp, fp, #16
   2e338:	pop	{r4, r5, r6, sl, fp, pc}

0002e33c <myhtml_tokenizer_end_state_script_data_double_escaped@@Base>:
   2e33c:	push	{r4, r5, r6, sl, fp, lr}
   2e340:	add	fp, sp, #16
   2e344:	sub	sp, sp, #8
   2e348:	mov	r6, r3
   2e34c:	ldr	r3, [r0, #192]	; 0xc0
   2e350:	ldr	r4, [fp, #8]
   2e354:	ldr	r5, [r1, #32]
   2e358:	add	r4, r3, r4
   2e35c:	add	r3, r3, r6
   2e360:	sub	r5, r4, r5
   2e364:	str	r5, [r1, #36]	; 0x24
   2e368:	mov	r5, #64	; 0x40
   2e36c:	str	r5, [sp]
   2e370:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e374:	mov	r0, r6
   2e378:	sub	sp, fp, #16
   2e37c:	pop	{r4, r5, r6, sl, fp, pc}

0002e380 <myhtml_tokenizer_end_state_script_data_double_escaped_dash@@Base>:
   2e380:	push	{r4, r5, r6, sl, fp, lr}
   2e384:	add	fp, sp, #16
   2e388:	sub	sp, sp, #8
   2e38c:	mov	r6, r3
   2e390:	ldr	r3, [r0, #192]	; 0xc0
   2e394:	ldr	r4, [fp, #8]
   2e398:	ldr	r5, [r1, #32]
   2e39c:	add	r4, r3, r4
   2e3a0:	add	r3, r3, r6
   2e3a4:	sub	r5, r4, r5
   2e3a8:	str	r5, [r1, #36]	; 0x24
   2e3ac:	mov	r5, #64	; 0x40
   2e3b0:	str	r5, [sp]
   2e3b4:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e3b8:	mov	r0, r6
   2e3bc:	sub	sp, fp, #16
   2e3c0:	pop	{r4, r5, r6, sl, fp, pc}

0002e3c4 <myhtml_tokenizer_end_state_script_data_double_escaped_dash_dash@@Base>:
   2e3c4:	push	{r4, r5, r6, sl, fp, lr}
   2e3c8:	add	fp, sp, #16
   2e3cc:	sub	sp, sp, #8
   2e3d0:	mov	r6, r3
   2e3d4:	ldr	r3, [r0, #192]	; 0xc0
   2e3d8:	ldr	r4, [fp, #8]
   2e3dc:	ldr	r5, [r1, #32]
   2e3e0:	add	r4, r3, r4
   2e3e4:	add	r3, r3, r6
   2e3e8:	sub	r5, r4, r5
   2e3ec:	str	r5, [r1, #36]	; 0x24
   2e3f0:	mov	r5, #64	; 0x40
   2e3f4:	str	r5, [sp]
   2e3f8:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e3fc:	mov	r0, r6
   2e400:	sub	sp, fp, #16
   2e404:	pop	{r4, r5, r6, sl, fp, pc}

0002e408 <myhtml_tokenizer_end_state_script_data_double_escaped_less_than_sign@@Base>:
   2e408:	push	{r4, r5, r6, sl, fp, lr}
   2e40c:	add	fp, sp, #16
   2e410:	sub	sp, sp, #8
   2e414:	mov	r6, r3
   2e418:	ldr	r3, [r0, #192]	; 0xc0
   2e41c:	ldr	r4, [fp, #8]
   2e420:	ldr	r5, [r1, #32]
   2e424:	add	r4, r3, r4
   2e428:	add	r3, r3, r6
   2e42c:	sub	r5, r4, r5
   2e430:	str	r5, [r1, #36]	; 0x24
   2e434:	mov	r5, #64	; 0x40
   2e438:	str	r5, [sp]
   2e43c:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e440:	mov	r0, r6
   2e444:	sub	sp, fp, #16
   2e448:	pop	{r4, r5, r6, sl, fp, pc}

0002e44c <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>:
   2e44c:	push	{r4, r5, r6, sl, fp, lr}
   2e450:	add	fp, sp, #16
   2e454:	sub	sp, sp, #8
   2e458:	mov	r6, r3
   2e45c:	ldr	r3, [r0, #192]	; 0xc0
   2e460:	ldr	r4, [fp, #8]
   2e464:	ldr	r5, [r1, #32]
   2e468:	add	r4, r3, r4
   2e46c:	add	r3, r3, r6
   2e470:	sub	r5, r4, r5
   2e474:	str	r5, [r1, #36]	; 0x24
   2e478:	mov	r5, #64	; 0x40
   2e47c:	str	r5, [sp]
   2e480:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e484:	mov	r0, r6
   2e488:	sub	sp, fp, #16
   2e48c:	pop	{r4, r5, r6, sl, fp, pc}

0002e490 <myhtml_tokenizer_end_state_parse_error_stop@@Base>:
   2e490:	ldr	r0, [sp]
   2e494:	bx	lr

0002e498 <myhtml_tokenizer_state_script_data@@Base>:
   2e498:	push	{fp, lr}
   2e49c:	mov	fp, sp
   2e4a0:	ldr	ip, [fp, #8]
   2e4a4:	mov	lr, r3
   2e4a8:	cmp	r3, ip
   2e4ac:	bcs	2e4c8 <myhtml_tokenizer_state_script_data@@Base+0x30>
   2e4b0:	ldrb	r3, [r2, lr]
   2e4b4:	cmp	r3, #60	; 0x3c
   2e4b8:	beq	2e4d0 <myhtml_tokenizer_state_script_data@@Base+0x38>
   2e4bc:	add	lr, lr, #1
   2e4c0:	cmp	lr, ip
   2e4c4:	bcc	2e4b0 <myhtml_tokenizer_state_script_data@@Base+0x18>
   2e4c8:	mov	r0, lr
   2e4cc:	pop	{fp, pc}
   2e4d0:	ldr	r2, [r0, #192]	; 0xc0
   2e4d4:	add	r2, r2, lr
   2e4d8:	add	lr, lr, #1
   2e4dc:	str	r2, [r1, #32]
   2e4e0:	mov	r1, #16
   2e4e4:	str	r1, [r0, #160]	; 0xa0
   2e4e8:	mov	r0, lr
   2e4ec:	pop	{fp, pc}

0002e4f0 <myhtml_tokenizer_state_script_data_less_than_sign@@Base>:
   2e4f0:	ldrb	r2, [r2, r3]
   2e4f4:	cmp	r2, #33	; 0x21
   2e4f8:	beq	2e510 <myhtml_tokenizer_state_script_data_less_than_sign@@Base+0x20>
   2e4fc:	cmp	r2, #47	; 0x2f
   2e500:	mov	r1, #5
   2e504:	addeq	r3, r3, #1
   2e508:	moveq	r1, #17
   2e50c:	b	2e518 <myhtml_tokenizer_state_script_data_less_than_sign@@Base+0x28>
   2e510:	add	r3, r3, #1
   2e514:	mov	r1, #19
   2e518:	str	r1, [r0, #160]	; 0xa0
   2e51c:	mov	r0, r3
   2e520:	bx	lr

0002e524 <myhtml_tokenizer_state_script_data_escape_start@@Base>:
   2e524:	ldrb	r1, [r2, r3]
   2e528:	mov	r2, #5
   2e52c:	cmp	r1, #45	; 0x2d
   2e530:	movweq	r2, #20
   2e534:	addeq	r3, r3, #1
   2e538:	str	r2, [r0, #160]	; 0xa0
   2e53c:	mov	r0, r3
   2e540:	bx	lr

0002e544 <myhtml_tokenizer_state_script_data_escape_start_dash@@Base>:
   2e544:	ldrb	r1, [r2, r3]
   2e548:	mov	r2, #5
   2e54c:	cmp	r1, #45	; 0x2d
   2e550:	movweq	r2, #23
   2e554:	addeq	r3, r3, #1
   2e558:	str	r2, [r0, #160]	; 0xa0
   2e55c:	mov	r0, r3
   2e560:	bx	lr

0002e564 <myhtml_tokenizer_state_script_data_end_tag_open@@Base>:
   2e564:	ldrb	r2, [r2, r3]
   2e568:	mov	ip, #5
   2e56c:	and	r2, r2, #223	; 0xdf
   2e570:	sub	r2, r2, #65	; 0x41
   2e574:	uxtb	r2, r2
   2e578:	cmp	r2, #25
   2e57c:	ldrls	r2, [r0, #192]	; 0xc0
   2e580:	movls	ip, #18
   2e584:	addls	r2, r2, r3
   2e588:	strls	r2, [r1, #12]
   2e58c:	str	ip, [r0, #160]	; 0xa0
   2e590:	mov	r0, r3
   2e594:	bx	lr

0002e598 <myhtml_tokenizer_state_script_data_end_tag_name@@Base>:
   2e598:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2e59c:	add	fp, sp, #24
   2e5a0:	sub	sp, sp, #8
   2e5a4:	mov	r5, r0
   2e5a8:	ldr	r0, [fp, #8]
   2e5ac:	mov	r4, r3
   2e5b0:	cmp	r3, r0
   2e5b4:	bcs	2e828 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x290>
   2e5b8:	mov	r6, r2
   2e5bc:	mov	r7, r1
   2e5c0:	add	r4, r4, #1
   2e5c4:	add	r1, r6, r4
   2e5c8:	ldrb	r1, [r1, #-1]
   2e5cc:	sub	r2, r1, #9
   2e5d0:	cmp	r2, #53	; 0x35
   2e5d4:	bhi	2e6bc <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x124>
   2e5d8:	add	r3, pc, #4
   2e5dc:	ldr	r2, [r3, r2, lsl #2]
   2e5e0:	add	pc, r3, r2
   2e5e4:	andeq	r0, r0, ip, lsl r1
   2e5e8:	andeq	r0, r0, ip, lsl r1
   2e5ec:	ldrdeq	r0, [r0], -r8
   2e5f0:	andeq	r0, r0, ip, lsl r1
   2e5f4:	andeq	r0, r0, ip, lsl r1
   2e5f8:	ldrdeq	r0, [r0], -r8
   2e5fc:	ldrdeq	r0, [r0], -r8
   2e600:	ldrdeq	r0, [r0], -r8
   2e604:	ldrdeq	r0, [r0], -r8
   2e608:	ldrdeq	r0, [r0], -r8
   2e60c:	ldrdeq	r0, [r0], -r8
   2e610:	ldrdeq	r0, [r0], -r8
   2e614:	ldrdeq	r0, [r0], -r8
   2e618:	ldrdeq	r0, [r0], -r8
   2e61c:	ldrdeq	r0, [r0], -r8
   2e620:	ldrdeq	r0, [r0], -r8
   2e624:	ldrdeq	r0, [r0], -r8
   2e628:	ldrdeq	r0, [r0], -r8
   2e62c:	ldrdeq	r0, [r0], -r8
   2e630:	ldrdeq	r0, [r0], -r8
   2e634:	ldrdeq	r0, [r0], -r8
   2e638:	ldrdeq	r0, [r0], -r8
   2e63c:	ldrdeq	r0, [r0], -r8
   2e640:	andeq	r0, r0, ip, lsl r1
   2e644:	ldrdeq	r0, [r0], -r8
   2e648:	ldrdeq	r0, [r0], -r8
   2e64c:	ldrdeq	r0, [r0], -r8
   2e650:	ldrdeq	r0, [r0], -r8
   2e654:	ldrdeq	r0, [r0], -r8
   2e658:	ldrdeq	r0, [r0], -r8
   2e65c:	ldrdeq	r0, [r0], -r8
   2e660:	ldrdeq	r0, [r0], -r8
   2e664:	ldrdeq	r0, [r0], -r8
   2e668:	ldrdeq	r0, [r0], -r8
   2e66c:	ldrdeq	r0, [r0], -r8
   2e670:	ldrdeq	r0, [r0], -r8
   2e674:	ldrdeq	r0, [r0], -r8
   2e678:	ldrdeq	r0, [r0], -r8
   2e67c:			; <UNDEFINED> instruction: 0x000001b0
   2e680:	ldrdeq	r0, [r0], -r8
   2e684:	ldrdeq	r0, [r0], -r8
   2e688:	ldrdeq	r0, [r0], -r8
   2e68c:	ldrdeq	r0, [r0], -r8
   2e690:	ldrdeq	r0, [r0], -r8
   2e694:	ldrdeq	r0, [r0], -r8
   2e698:	ldrdeq	r0, [r0], -r8
   2e69c:	ldrdeq	r0, [r0], -r8
   2e6a0:	ldrdeq	r0, [r0], -r8
   2e6a4:	ldrdeq	r0, [r0], -r8
   2e6a8:	ldrdeq	r0, [r0], -r8
   2e6ac:	ldrdeq	r0, [r0], -r8
   2e6b0:	ldrdeq	r0, [r0], -r8
   2e6b4:	ldrdeq	r0, [r0], -r8
   2e6b8:	strdeq	r0, [r0], -ip
   2e6bc:	sub	r2, r1, #97	; 0x61
   2e6c0:	uxtb	r2, r2
   2e6c4:	cmp	r2, #26
   2e6c8:	bcc	2e6dc <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x144>
   2e6cc:	sub	r1, r1, #65	; 0x41
   2e6d0:	uxtb	r1, r1
   2e6d4:	cmp	r1, #26
   2e6d8:	bcs	2e6f4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x15c>
   2e6dc:	add	r1, r4, #1
   2e6e0:	cmp	r4, r0
   2e6e4:	mov	r4, r1
   2e6e8:	bcc	2e5c4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2c>
   2e6ec:	sub	r4, r1, #1
   2e6f0:	b	2e828 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x290>
   2e6f4:	mov	r0, #5
   2e6f8:	sub	r4, r4, #1
   2e6fc:	b	2e824 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x28c>
   2e700:	ldr	r8, [r7, #12]
   2e704:	ldr	r0, [r5, #192]	; 0xc0
   2e708:	sub	r0, r0, r8
   2e70c:	add	r0, r0, r4
   2e710:	cmp	r0, #7
   2e714:	bne	2e820 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x288>
   2e718:	mov	r0, r5
   2e71c:	mov	r1, r8
   2e720:	mov	r2, #6
   2e724:	bl	10fa8 <myhtml_tree_incomming_buffer_make_data@plt>
   2e728:	ldr	r1, [pc, #468]	; 2e904 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x36c>
   2e72c:	mov	r2, #6
   2e730:	add	r1, pc, r1
   2e734:	bl	112b4 <mycore_strncasecmp@plt>
   2e738:	mov	r1, #5
   2e73c:	cmp	r0, #0
   2e740:	bne	2e7d8 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x240>
   2e744:	ldr	r0, [r5, #192]	; 0xc0
   2e748:	mov	r1, #64	; 0x40
   2e74c:	mov	r2, r6
   2e750:	str	r1, [sp]
   2e754:	mov	r1, r7
   2e758:	add	r0, r0, r4
   2e75c:	sub	r3, r0, #9
   2e760:	mov	r0, r5
   2e764:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e768:	cmp	r0, #0
   2e76c:	beq	2e8f0 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x358>
   2e770:	mov	r1, #6
   2e774:	str	r8, [r0, #24]
   2e778:	str	r1, [r0, #28]
   2e77c:	mov	r1, #112	; 0x70
   2e780:	str	r1, [r0]
   2e784:	mov	r1, #1
   2e788:	str	r1, [r0, #48]	; 0x30
   2e78c:	mov	r1, #33	; 0x21
   2e790:	b	2e7d8 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x240>
   2e794:	ldr	r8, [r7, #12]
   2e798:	ldr	r0, [r5, #192]	; 0xc0
   2e79c:	sub	r0, r0, r8
   2e7a0:	add	r0, r0, r4
   2e7a4:	cmp	r0, #7
   2e7a8:	bne	2e820 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x288>
   2e7ac:	mov	r0, r5
   2e7b0:	mov	r1, r8
   2e7b4:	mov	r2, #6
   2e7b8:	bl	10fa8 <myhtml_tree_incomming_buffer_make_data@plt>
   2e7bc:	ldr	r1, [pc, #324]	; 2e908 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x370>
   2e7c0:	mov	r2, #6
   2e7c4:	add	r1, pc, r1
   2e7c8:	bl	112b4 <mycore_strncasecmp@plt>
   2e7cc:	mov	r1, #5
   2e7d0:	cmp	r0, #0
   2e7d4:	beq	2e834 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x29c>
   2e7d8:	str	r1, [r5, #160]	; 0xa0
   2e7dc:	b	2e828 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x290>
   2e7e0:	ldr	r8, [r7, #12]
   2e7e4:	ldr	r0, [r5, #192]	; 0xc0
   2e7e8:	sub	r0, r0, r8
   2e7ec:	add	r0, r0, r4
   2e7f0:	cmp	r0, #7
   2e7f4:	bne	2e820 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x288>
   2e7f8:	mov	r0, r5
   2e7fc:	mov	r1, r8
   2e800:	mov	r2, #6
   2e804:	bl	10fa8 <myhtml_tree_incomming_buffer_make_data@plt>
   2e808:	ldr	r1, [pc, #252]	; 2e90c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x374>
   2e80c:	mov	r2, #6
   2e810:	add	r1, pc, r1
   2e814:	bl	112b4 <mycore_strncasecmp@plt>
   2e818:	cmp	r0, #0
   2e81c:	beq	2e87c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2e4>
   2e820:	mov	r0, #5
   2e824:	str	r0, [r5, #160]	; 0xa0
   2e828:	mov	r0, r4
   2e82c:	sub	sp, fp, #24
   2e830:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e834:	ldr	r0, [r5, #192]	; 0xc0
   2e838:	mov	r1, #64	; 0x40
   2e83c:	mov	r2, r6
   2e840:	str	r1, [sp]
   2e844:	mov	r1, r7
   2e848:	add	r0, r0, r4
   2e84c:	sub	r3, r0, #9
   2e850:	mov	r0, r5
   2e854:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e858:	cmp	r0, #0
   2e85c:	beq	2e8f0 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x358>
   2e860:	mov	r1, #6
   2e864:	str	r8, [r0, #24]
   2e868:	str	r1, [r0, #28]
   2e86c:	mov	r1, #112	; 0x70
   2e870:	str	r1, [r0]
   2e874:	mov	r1, #3
   2e878:	b	2e788 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1f0>
   2e87c:	ldr	r0, [r5, #192]	; 0xc0
   2e880:	mov	r1, #64	; 0x40
   2e884:	mov	r2, r6
   2e888:	str	r1, [sp]
   2e88c:	mov	r1, r7
   2e890:	add	r0, r0, r4
   2e894:	sub	r3, r0, #9
   2e898:	mov	r0, r5
   2e89c:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2e8a0:	cmp	r0, #0
   2e8a4:	beq	2e8f0 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x358>
   2e8a8:	mov	r2, r0
   2e8ac:	mov	r0, #6
   2e8b0:	str	r8, [r2, #24]
   2e8b4:	str	r0, [r2, #28]
   2e8b8:	mov	r0, #112	; 0x70
   2e8bc:	str	r0, [r2]
   2e8c0:	mov	r0, #1
   2e8c4:	str	r0, [r2, #48]	; 0x30
   2e8c8:	ldr	r0, [r2, #32]
   2e8cc:	ldr	r1, [r5, #192]	; 0xc0
   2e8d0:	sub	r0, r1, r0
   2e8d4:	mov	r1, r4
   2e8d8:	add	r0, r0, r4
   2e8dc:	str	r0, [r2, #36]	; 0x24
   2e8e0:	mov	r0, r5
   2e8e4:	bl	11104 <myhtml_queue_add@plt>
   2e8e8:	cmp	r0, #0
   2e8ec:	beq	2e8fc <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x364>
   2e8f0:	mov	r0, #69	; 0x45
   2e8f4:	mov	r4, #0
   2e8f8:	b	2e824 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x28c>
   2e8fc:	mov	r0, #0
   2e900:	b	2e824 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x28c>
   2e904:	andeq	r2, sp, fp, lsl fp
   2e908:	andeq	r2, sp, r7, lsl #21
   2e90c:	andeq	r2, sp, fp, lsr sl

0002e910 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base>:
   2e910:	ldrb	r1, [r2, r3]
   2e914:	cmp	r1, #45	; 0x2d
   2e918:	beq	2e93c <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x2c>
   2e91c:	cmp	r1, #60	; 0x3c
   2e920:	bne	2e92c <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x1c>
   2e924:	mov	r1, #24
   2e928:	b	2e938 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x28>
   2e92c:	cmp	r1, #62	; 0x3e
   2e930:	movne	r1, #21
   2e934:	moveq	r1, #5
   2e938:	str	r1, [r0, #160]	; 0xa0
   2e93c:	add	r0, r3, #1
   2e940:	bx	lr

0002e944 <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base>:
   2e944:	ldrb	r2, [r2, r3]
   2e948:	cmp	r2, #47	; 0x2f
   2e94c:	bne	2e964 <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base+0x20>
   2e950:	mov	r1, #25
   2e954:	add	r3, r3, #1
   2e958:	str	r1, [r0, #160]	; 0xa0
   2e95c:	mov	r0, r3
   2e960:	bx	lr
   2e964:	and	r2, r2, #223	; 0xdf
   2e968:	sub	r2, r2, #65	; 0x41
   2e96c:	uxtb	r2, r2
   2e970:	cmp	r2, #25
   2e974:	bhi	2e98c <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base+0x48>
   2e978:	ldr	r2, [r0, #192]	; 0xc0
   2e97c:	add	r2, r2, r3
   2e980:	str	r2, [r1, #12]
   2e984:	mov	r1, #27
   2e988:	b	2e990 <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base+0x4c>
   2e98c:	mov	r1, #21
   2e990:	str	r1, [r0, #160]	; 0xa0
   2e994:	mov	r0, r3
   2e998:	bx	lr

0002e99c <myhtml_tokenizer_state_script_data_escaped_end_tag_open@@Base>:
   2e99c:	ldrb	r2, [r2, r3]
   2e9a0:	mov	ip, #21
   2e9a4:	and	r2, r2, #223	; 0xdf
   2e9a8:	sub	r2, r2, #65	; 0x41
   2e9ac:	uxtb	r2, r2
   2e9b0:	cmp	r2, #25
   2e9b4:	ldrls	r2, [r0, #192]	; 0xc0
   2e9b8:	movls	ip, #26
   2e9bc:	addls	r2, r2, r3
   2e9c0:	strls	r2, [r1, #12]
   2e9c4:	str	ip, [r0, #160]	; 0xa0
   2e9c8:	mov	r0, r3
   2e9cc:	bx	lr

0002e9d0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base>:
   2e9d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2e9d4:	add	fp, sp, #24
   2e9d8:	sub	sp, sp, #8
   2e9dc:	mov	r5, r0
   2e9e0:	ldr	r0, [fp, #8]
   2e9e4:	mov	r4, r3
   2e9e8:	cmp	r3, r0
   2e9ec:	bcs	2ec60 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x290>
   2e9f0:	mov	r6, r2
   2e9f4:	mov	r7, r1
   2e9f8:	add	r4, r4, #1
   2e9fc:	add	r1, r6, r4
   2ea00:	ldrb	r1, [r1, #-1]
   2ea04:	sub	r2, r1, #9
   2ea08:	cmp	r2, #53	; 0x35
   2ea0c:	bhi	2eaf4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x124>
   2ea10:	add	r3, pc, #4
   2ea14:	ldr	r2, [r3, r2, lsl #2]
   2ea18:	add	pc, r3, r2
   2ea1c:	andeq	r0, r0, ip, lsl r1
   2ea20:	andeq	r0, r0, ip, lsl r1
   2ea24:	ldrdeq	r0, [r0], -r8
   2ea28:	andeq	r0, r0, ip, lsl r1
   2ea2c:	andeq	r0, r0, ip, lsl r1
   2ea30:	ldrdeq	r0, [r0], -r8
   2ea34:	ldrdeq	r0, [r0], -r8
   2ea38:	ldrdeq	r0, [r0], -r8
   2ea3c:	ldrdeq	r0, [r0], -r8
   2ea40:	ldrdeq	r0, [r0], -r8
   2ea44:	ldrdeq	r0, [r0], -r8
   2ea48:	ldrdeq	r0, [r0], -r8
   2ea4c:	ldrdeq	r0, [r0], -r8
   2ea50:	ldrdeq	r0, [r0], -r8
   2ea54:	ldrdeq	r0, [r0], -r8
   2ea58:	ldrdeq	r0, [r0], -r8
   2ea5c:	ldrdeq	r0, [r0], -r8
   2ea60:	ldrdeq	r0, [r0], -r8
   2ea64:	ldrdeq	r0, [r0], -r8
   2ea68:	ldrdeq	r0, [r0], -r8
   2ea6c:	ldrdeq	r0, [r0], -r8
   2ea70:	ldrdeq	r0, [r0], -r8
   2ea74:	ldrdeq	r0, [r0], -r8
   2ea78:	andeq	r0, r0, ip, lsl r1
   2ea7c:	ldrdeq	r0, [r0], -r8
   2ea80:	ldrdeq	r0, [r0], -r8
   2ea84:	ldrdeq	r0, [r0], -r8
   2ea88:	ldrdeq	r0, [r0], -r8
   2ea8c:	ldrdeq	r0, [r0], -r8
   2ea90:	ldrdeq	r0, [r0], -r8
   2ea94:	ldrdeq	r0, [r0], -r8
   2ea98:	ldrdeq	r0, [r0], -r8
   2ea9c:	ldrdeq	r0, [r0], -r8
   2eaa0:	ldrdeq	r0, [r0], -r8
   2eaa4:	ldrdeq	r0, [r0], -r8
   2eaa8:	ldrdeq	r0, [r0], -r8
   2eaac:	ldrdeq	r0, [r0], -r8
   2eab0:	ldrdeq	r0, [r0], -r8
   2eab4:			; <UNDEFINED> instruction: 0x000001b0
   2eab8:	ldrdeq	r0, [r0], -r8
   2eabc:	ldrdeq	r0, [r0], -r8
   2eac0:	ldrdeq	r0, [r0], -r8
   2eac4:	ldrdeq	r0, [r0], -r8
   2eac8:	ldrdeq	r0, [r0], -r8
   2eacc:	ldrdeq	r0, [r0], -r8
   2ead0:	ldrdeq	r0, [r0], -r8
   2ead4:	ldrdeq	r0, [r0], -r8
   2ead8:	ldrdeq	r0, [r0], -r8
   2eadc:	ldrdeq	r0, [r0], -r8
   2eae0:	ldrdeq	r0, [r0], -r8
   2eae4:	ldrdeq	r0, [r0], -r8
   2eae8:	ldrdeq	r0, [r0], -r8
   2eaec:	ldrdeq	r0, [r0], -r8
   2eaf0:	strdeq	r0, [r0], -ip
   2eaf4:	sub	r2, r1, #97	; 0x61
   2eaf8:	uxtb	r2, r2
   2eafc:	cmp	r2, #26
   2eb00:	bcc	2eb14 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x144>
   2eb04:	sub	r1, r1, #65	; 0x41
   2eb08:	uxtb	r1, r1
   2eb0c:	cmp	r1, #26
   2eb10:	bcs	2eb2c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x15c>
   2eb14:	add	r1, r4, #1
   2eb18:	cmp	r4, r0
   2eb1c:	mov	r4, r1
   2eb20:	bcc	2e9fc <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2c>
   2eb24:	sub	r4, r1, #1
   2eb28:	b	2ec60 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x290>
   2eb2c:	mov	r0, #21
   2eb30:	sub	r4, r4, #1
   2eb34:	b	2ec5c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x28c>
   2eb38:	ldr	r8, [r7, #12]
   2eb3c:	ldr	r0, [r5, #192]	; 0xc0
   2eb40:	sub	r0, r0, r8
   2eb44:	add	r0, r0, r4
   2eb48:	cmp	r0, #7
   2eb4c:	bne	2ec58 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x288>
   2eb50:	mov	r0, r5
   2eb54:	mov	r1, r8
   2eb58:	mov	r2, #6
   2eb5c:	bl	10fa8 <myhtml_tree_incomming_buffer_make_data@plt>
   2eb60:	ldr	r1, [pc, #468]	; 2ed3c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x36c>
   2eb64:	mov	r2, #6
   2eb68:	add	r1, pc, r1
   2eb6c:	bl	112b4 <mycore_strncasecmp@plt>
   2eb70:	mov	r1, #21
   2eb74:	cmp	r0, #0
   2eb78:	bne	2ec10 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x240>
   2eb7c:	ldr	r0, [r5, #192]	; 0xc0
   2eb80:	mov	r1, #64	; 0x40
   2eb84:	mov	r2, r6
   2eb88:	str	r1, [sp]
   2eb8c:	mov	r1, r7
   2eb90:	add	r0, r0, r4
   2eb94:	sub	r3, r0, #9
   2eb98:	mov	r0, r5
   2eb9c:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2eba0:	cmp	r0, #0
   2eba4:	beq	2ed30 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x360>
   2eba8:	mov	r1, #6
   2ebac:	str	r8, [r0, #24]
   2ebb0:	str	r1, [r0, #28]
   2ebb4:	mov	r1, #112	; 0x70
   2ebb8:	str	r1, [r0]
   2ebbc:	mov	r1, #1
   2ebc0:	str	r1, [r0, #48]	; 0x30
   2ebc4:	mov	r1, #33	; 0x21
   2ebc8:	b	2ec10 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x240>
   2ebcc:	ldr	r8, [r7, #12]
   2ebd0:	ldr	r0, [r5, #192]	; 0xc0
   2ebd4:	sub	r0, r0, r8
   2ebd8:	add	r0, r0, r4
   2ebdc:	cmp	r0, #7
   2ebe0:	bne	2ec58 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x288>
   2ebe4:	mov	r0, r5
   2ebe8:	mov	r1, r8
   2ebec:	mov	r2, #6
   2ebf0:	bl	10fa8 <myhtml_tree_incomming_buffer_make_data@plt>
   2ebf4:	ldr	r1, [pc, #324]	; 2ed40 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x370>
   2ebf8:	mov	r2, #6
   2ebfc:	add	r1, pc, r1
   2ec00:	bl	112b4 <mycore_strncasecmp@plt>
   2ec04:	mov	r1, #21
   2ec08:	cmp	r0, #0
   2ec0c:	beq	2ec6c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x29c>
   2ec10:	str	r1, [r5, #160]	; 0xa0
   2ec14:	b	2ec60 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x290>
   2ec18:	ldr	r8, [r7, #12]
   2ec1c:	ldr	r0, [r5, #192]	; 0xc0
   2ec20:	sub	r0, r0, r8
   2ec24:	add	r0, r0, r4
   2ec28:	cmp	r0, #7
   2ec2c:	bne	2ec58 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x288>
   2ec30:	mov	r0, r5
   2ec34:	mov	r1, r8
   2ec38:	mov	r2, #6
   2ec3c:	bl	10fa8 <myhtml_tree_incomming_buffer_make_data@plt>
   2ec40:	ldr	r1, [pc, #252]	; 2ed44 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x374>
   2ec44:	mov	r2, #6
   2ec48:	add	r1, pc, r1
   2ec4c:	bl	112b4 <mycore_strncasecmp@plt>
   2ec50:	cmp	r0, #0
   2ec54:	beq	2ecb4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2e4>
   2ec58:	mov	r0, #21
   2ec5c:	str	r0, [r5, #160]	; 0xa0
   2ec60:	mov	r0, r4
   2ec64:	sub	sp, fp, #24
   2ec68:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ec6c:	ldr	r0, [r5, #192]	; 0xc0
   2ec70:	mov	r1, #64	; 0x40
   2ec74:	mov	r2, r6
   2ec78:	str	r1, [sp]
   2ec7c:	mov	r1, r7
   2ec80:	add	r0, r0, r4
   2ec84:	sub	r3, r0, #9
   2ec88:	mov	r0, r5
   2ec8c:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ec90:	cmp	r0, #0
   2ec94:	beq	2ed30 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x360>
   2ec98:	mov	r1, #6
   2ec9c:	str	r8, [r0, #24]
   2eca0:	str	r1, [r0, #28]
   2eca4:	mov	r1, #112	; 0x70
   2eca8:	str	r1, [r0]
   2ecac:	mov	r1, #3
   2ecb0:	b	2ebc0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1f0>
   2ecb4:	ldr	r0, [r5, #192]	; 0xc0
   2ecb8:	mov	r1, #64	; 0x40
   2ecbc:	mov	r2, r6
   2ecc0:	str	r1, [sp]
   2ecc4:	mov	r1, r7
   2ecc8:	add	r0, r0, r4
   2eccc:	sub	r3, r0, #9
   2ecd0:	mov	r0, r5
   2ecd4:	bl	119d4 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ecd8:	cmp	r0, #0
   2ecdc:	beq	2ed30 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x360>
   2ece0:	mov	r2, r0
   2ece4:	mov	r0, #6
   2ece8:	str	r8, [r2, #24]
   2ecec:	str	r0, [r2, #28]
   2ecf0:	mov	r0, #112	; 0x70
   2ecf4:	str	r0, [r2]
   2ecf8:	mov	r0, #1
   2ecfc:	str	r0, [r2, #48]	; 0x30
   2ed00:	mov	r0, #0
   2ed04:	str	r0, [r5, #160]	; 0xa0
   2ed08:	ldr	r0, [r5, #192]	; 0xc0
   2ed0c:	ldr	r1, [r2, #32]
   2ed10:	sub	r0, r0, r1
   2ed14:	mov	r1, r4
   2ed18:	add	r0, r0, r4
   2ed1c:	str	r0, [r2, #36]	; 0x24
   2ed20:	mov	r0, r5
   2ed24:	bl	11104 <myhtml_queue_add@plt>
   2ed28:	cmp	r0, #0
   2ed2c:	beq	2ec60 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x290>
   2ed30:	mov	r0, #69	; 0x45
   2ed34:	mov	r4, #0
   2ed38:	b	2ec5c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x28c>
   2ed3c:	andeq	r2, sp, r3, ror #13
   2ed40:	andeq	r2, sp, pc, asr #12
   2ed44:	andeq	r2, sp, r3, lsl #12

0002ed48 <myhtml_tokenizer_state_script_data_escaped@@Base>:
   2ed48:	ldr	ip, [sp]
   2ed4c:	cmp	r3, ip
   2ed50:	bcc	2ed68 <myhtml_tokenizer_state_script_data_escaped@@Base+0x20>
   2ed54:	mov	r0, r3
   2ed58:	bx	lr
   2ed5c:	add	r3, r3, #1
   2ed60:	cmp	r3, ip
   2ed64:	bcs	2ed54 <myhtml_tokenizer_state_script_data_escaped@@Base+0xc>
   2ed68:	ldrb	r1, [r2, r3]
   2ed6c:	cmp	r1, #60	; 0x3c
   2ed70:	beq	2ed84 <myhtml_tokenizer_state_script_data_escaped@@Base+0x3c>
   2ed74:	cmp	r1, #45	; 0x2d
   2ed78:	bne	2ed5c <myhtml_tokenizer_state_script_data_escaped@@Base+0x14>
   2ed7c:	mov	r1, #22
   2ed80:	b	2ed88 <myhtml_tokenizer_state_script_data_escaped@@Base+0x40>
   2ed84:	mov	r1, #24
   2ed88:	add	r3, r3, #1
   2ed8c:	str	r1, [r0, #160]	; 0xa0
   2ed90:	mov	r0, r3
   2ed94:	bx	lr

0002ed98 <myhtml_tokenizer_state_script_data_escaped_dash@@Base>:
   2ed98:	ldrb	r1, [r2, r3]
   2ed9c:	cmp	r1, #60	; 0x3c
   2eda0:	beq	2edc0 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x28>
   2eda4:	cmp	r1, #45	; 0x2d
   2eda8:	bne	2edd0 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x38>
   2edac:	mov	r1, #23
   2edb0:	add	r3, r3, #1
   2edb4:	str	r1, [r0, #160]	; 0xa0
   2edb8:	mov	r0, r3
   2edbc:	bx	lr
   2edc0:	mov	r1, #24
   2edc4:	str	r1, [r0, #160]	; 0xa0
   2edc8:	mov	r0, r3
   2edcc:	bx	lr
   2edd0:	cmp	r1, #0
   2edd4:	mov	r2, #21
   2edd8:	addne	r3, r3, #1
   2eddc:	str	r2, [r0, #160]	; 0xa0
   2ede0:	mov	r0, r3
   2ede4:	bx	lr

0002ede8 <myhtml_tokenizer_state_script_data_double_escape_start@@Base>:
   2ede8:	push	{r4, r5, r6, r7, fp, lr}
   2edec:	add	fp, sp, #16
   2edf0:	mov	r7, r0
   2edf4:	ldr	r0, [fp, #8]
   2edf8:	mov	r4, r3
   2edfc:	cmp	r3, r0
   2ee00:	bcs	2ef24 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x13c>
   2ee04:	ldrb	r3, [r2, r4]
   2ee08:	sub	r5, r3, #9
   2ee0c:	cmp	r5, #53	; 0x35
   2ee10:	bhi	2eef8 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x110>
   2ee14:	add	r6, pc, #4
   2ee18:	ldr	r5, [r6, r5, lsl #2]
   2ee1c:	add	pc, r6, r5
   2ee20:	andeq	r0, r0, ip, lsl #2
   2ee24:	andeq	r0, r0, ip, lsl #2
   2ee28:	ldrdeq	r0, [r0], -r8
   2ee2c:	andeq	r0, r0, ip, lsl #2
   2ee30:	andeq	r0, r0, ip, lsl #2
   2ee34:	ldrdeq	r0, [r0], -r8
   2ee38:	ldrdeq	r0, [r0], -r8
   2ee3c:	ldrdeq	r0, [r0], -r8
   2ee40:	ldrdeq	r0, [r0], -r8
   2ee44:	ldrdeq	r0, [r0], -r8
   2ee48:	ldrdeq	r0, [r0], -r8
   2ee4c:	ldrdeq	r0, [r0], -r8
   2ee50:	ldrdeq	r0, [r0], -r8
   2ee54:	ldrdeq	r0, [r0], -r8
   2ee58:	ldrdeq	r0, [r0], -r8
   2ee5c:	ldrdeq	r0, [r0], -r8
   2ee60:	ldrdeq	r0, [r0], -r8
   2ee64:	ldrdeq	r0, [r0], -r8
   2ee68:	ldrdeq	r0, [r0], -r8
   2ee6c:	ldrdeq	r0, [r0], -r8
   2ee70:	ldrdeq	r0, [r0], -r8
   2ee74:	ldrdeq	r0, [r0], -r8
   2ee78:	ldrdeq	r0, [r0], -r8
   2ee7c:	andeq	r0, r0, ip, lsl #2
   2ee80:	ldrdeq	r0, [r0], -r8
   2ee84:	ldrdeq	r0, [r0], -r8
   2ee88:	ldrdeq	r0, [r0], -r8
   2ee8c:	ldrdeq	r0, [r0], -r8
   2ee90:	ldrdeq	r0, [r0], -r8
   2ee94:	ldrdeq	r0, [r0], -r8
   2ee98:	ldrdeq	r0, [r0], -r8
   2ee9c:	ldrdeq	r0, [r0], -r8
   2eea0:	ldrdeq	r0, [r0], -r8
   2eea4:	ldrdeq	r0, [r0], -r8
   2eea8:	ldrdeq	r0, [r0], -r8
   2eeac:	ldrdeq	r0, [r0], -r8
   2eeb0:	ldrdeq	r0, [r0], -r8
   2eeb4:	ldrdeq	r0, [r0], -r8
   2eeb8:	andeq	r0, r0, ip, lsl #2
   2eebc:	ldrdeq	r0, [r0], -r8
   2eec0:	ldrdeq	r0, [r0], -r8
   2eec4:	ldrdeq	r0, [r0], -r8
   2eec8:	ldrdeq	r0, [r0], -r8
   2eecc:	ldrdeq	r0, [r0], -r8
   2eed0:	ldrdeq	r0, [r0], -r8
   2eed4:	ldrdeq	r0, [r0], -r8
   2eed8:	ldrdeq	r0, [r0], -r8
   2eedc:	ldrdeq	r0, [r0], -r8
   2eee0:	ldrdeq	r0, [r0], -r8
   2eee4:	ldrdeq	r0, [r0], -r8
   2eee8:	ldrdeq	r0, [r0], -r8
   2eeec:	ldrdeq	r0, [r0], -r8
   2eef0:	ldrdeq	r0, [r0], -r8
   2eef4:	andeq	r0, r0, ip, lsl #2
   2eef8:	sub	r6, r3, #97	; 0x61
   2eefc:	uxtb	r6, r6
   2ef00:	cmp	r6, #26
   2ef04:	bcc	2ef18 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x130>
   2ef08:	sub	r3, r3, #65	; 0x41
   2ef0c:	uxtb	r3, r3
   2ef10:	cmp	r3, #26
   2ef14:	bcs	2ef74 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x18c>
   2ef18:	add	r4, r4, #1
   2ef1c:	cmp	r4, r0
   2ef20:	bcc	2ee04 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x1c>
   2ef24:	mov	r0, r4
   2ef28:	pop	{r4, r5, r6, r7, fp, pc}
   2ef2c:	ldr	r0, [r7, #192]	; 0xc0
   2ef30:	ldr	r1, [r1, #12]
   2ef34:	sub	r0, r1, r0
   2ef38:	add	r0, r0, #6
   2ef3c:	cmp	r0, r4
   2ef40:	bne	2ef84 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x19c>
   2ef44:	mov	r0, r7
   2ef48:	mov	r2, #6
   2ef4c:	bl	10fa8 <myhtml_tree_incomming_buffer_make_data@plt>
   2ef50:	ldr	r1, [pc, #64]	; 2ef98 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x1b0>
   2ef54:	mov	r2, #6
   2ef58:	add	r1, pc, r1
   2ef5c:	bl	112b4 <mycore_strncasecmp@plt>
   2ef60:	mov	r1, #21
   2ef64:	cmp	r0, #0
   2ef68:	movweq	r1, #28
   2ef6c:	str	r1, [r7, #160]	; 0xa0
   2ef70:	b	2ef8c <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x1a4>
   2ef74:	mov	r0, #21
   2ef78:	str	r0, [r7, #160]	; 0xa0
   2ef7c:	mov	r0, r4
   2ef80:	pop	{r4, r5, r6, r7, fp, pc}
   2ef84:	mov	r0, #21
   2ef88:	str	r0, [r7, #160]	; 0xa0
   2ef8c:	add	r4, r4, #1
   2ef90:	mov	r0, r4
   2ef94:	pop	{r4, r5, r6, r7, fp, pc}
   2ef98:	strdeq	r2, [sp], -r3

0002ef9c <myhtml_tokenizer_state_script_data_double_escaped@@Base>:
   2ef9c:	ldr	ip, [sp]
   2efa0:	cmp	r3, ip
   2efa4:	bcc	2efbc <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x20>
   2efa8:	mov	r0, r3
   2efac:	bx	lr
   2efb0:	add	r3, r3, #1
   2efb4:	cmp	r3, ip
   2efb8:	bcs	2efa8 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0xc>
   2efbc:	ldrb	r1, [r2, r3]
   2efc0:	cmp	r1, #60	; 0x3c
   2efc4:	beq	2efd8 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x3c>
   2efc8:	cmp	r1, #45	; 0x2d
   2efcc:	bne	2efb0 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x14>
   2efd0:	mov	r1, #29
   2efd4:	b	2efdc <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x40>
   2efd8:	mov	r1, #31
   2efdc:	add	r3, r3, #1
   2efe0:	str	r1, [r0, #160]	; 0xa0
   2efe4:	mov	r0, r3
   2efe8:	bx	lr

0002efec <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base>:
   2efec:	ldrb	r1, [r2, r3]
   2eff0:	cmp	r1, #45	; 0x2d
   2eff4:	bne	2f000 <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base+0x14>
   2eff8:	mov	r1, #30
   2effc:	b	2f00c <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base+0x20>
   2f000:	cmp	r1, #60	; 0x3c
   2f004:	movne	r1, #28
   2f008:	moveq	r1, #31
   2f00c:	str	r1, [r0, #160]	; 0xa0
   2f010:	add	r0, r3, #1
   2f014:	bx	lr

0002f018 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base>:
   2f018:	ldrb	r1, [r2, r3]
   2f01c:	cmp	r1, #45	; 0x2d
   2f020:	beq	2f044 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x2c>
   2f024:	cmp	r1, #60	; 0x3c
   2f028:	bne	2f034 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x1c>
   2f02c:	mov	r1, #31
   2f030:	b	2f040 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x28>
   2f034:	cmp	r1, #62	; 0x3e
   2f038:	movne	r1, #28
   2f03c:	moveq	r1, #5
   2f040:	str	r1, [r0, #160]	; 0xa0
   2f044:	add	r0, r3, #1
   2f048:	bx	lr

0002f04c <myhtml_tokenizer_state_script_data_double_escaped_less_than_sign@@Base>:
   2f04c:	ldrb	r2, [r2, r3]
   2f050:	cmp	r2, #47	; 0x2f
   2f054:	movne	r1, #28
   2f058:	strne	r1, [r0, #160]	; 0xa0
   2f05c:	movne	r0, r3
   2f060:	bxne	lr
   2f064:	mov	r2, #32
   2f068:	add	r3, r3, #1
   2f06c:	str	r2, [r0, #160]	; 0xa0
   2f070:	ldr	r0, [r0, #192]	; 0xc0
   2f074:	add	r0, r0, r3
   2f078:	str	r0, [r1, #12]
   2f07c:	mov	r0, r3
   2f080:	bx	lr

0002f084 <myhtml_tokenizer_state_script_data_double_escape_end@@Base>:
   2f084:	push	{r4, r5, r6, r7, fp, lr}
   2f088:	add	fp, sp, #16
   2f08c:	mov	r7, r0
   2f090:	ldr	r0, [fp, #8]
   2f094:	mov	r4, r3
   2f098:	cmp	r3, r0
   2f09c:	bcs	2f1c0 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x13c>
   2f0a0:	ldrb	r3, [r2, r4]
   2f0a4:	sub	r5, r3, #9
   2f0a8:	cmp	r5, #53	; 0x35
   2f0ac:	bhi	2f194 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x110>
   2f0b0:	add	r6, pc, #4
   2f0b4:	ldr	r5, [r6, r5, lsl #2]
   2f0b8:	add	pc, r6, r5
   2f0bc:	andeq	r0, r0, ip, lsl #2
   2f0c0:	andeq	r0, r0, ip, lsl #2
   2f0c4:	ldrdeq	r0, [r0], -r8
   2f0c8:	andeq	r0, r0, ip, lsl #2
   2f0cc:	andeq	r0, r0, ip, lsl #2
   2f0d0:	ldrdeq	r0, [r0], -r8
   2f0d4:	ldrdeq	r0, [r0], -r8
   2f0d8:	ldrdeq	r0, [r0], -r8
   2f0dc:	ldrdeq	r0, [r0], -r8
   2f0e0:	ldrdeq	r0, [r0], -r8
   2f0e4:	ldrdeq	r0, [r0], -r8
   2f0e8:	ldrdeq	r0, [r0], -r8
   2f0ec:	ldrdeq	r0, [r0], -r8
   2f0f0:	ldrdeq	r0, [r0], -r8
   2f0f4:	ldrdeq	r0, [r0], -r8
   2f0f8:	ldrdeq	r0, [r0], -r8
   2f0fc:	ldrdeq	r0, [r0], -r8
   2f100:	ldrdeq	r0, [r0], -r8
   2f104:	ldrdeq	r0, [r0], -r8
   2f108:	ldrdeq	r0, [r0], -r8
   2f10c:	ldrdeq	r0, [r0], -r8
   2f110:	ldrdeq	r0, [r0], -r8
   2f114:	ldrdeq	r0, [r0], -r8
   2f118:	andeq	r0, r0, ip, lsl #2
   2f11c:	ldrdeq	r0, [r0], -r8
   2f120:	ldrdeq	r0, [r0], -r8
   2f124:	ldrdeq	r0, [r0], -r8
   2f128:	ldrdeq	r0, [r0], -r8
   2f12c:	ldrdeq	r0, [r0], -r8
   2f130:	ldrdeq	r0, [r0], -r8
   2f134:	ldrdeq	r0, [r0], -r8
   2f138:	ldrdeq	r0, [r0], -r8
   2f13c:	ldrdeq	r0, [r0], -r8
   2f140:	ldrdeq	r0, [r0], -r8
   2f144:	ldrdeq	r0, [r0], -r8
   2f148:	ldrdeq	r0, [r0], -r8
   2f14c:	ldrdeq	r0, [r0], -r8
   2f150:	ldrdeq	r0, [r0], -r8
   2f154:	andeq	r0, r0, ip, lsl #2
   2f158:	ldrdeq	r0, [r0], -r8
   2f15c:	ldrdeq	r0, [r0], -r8
   2f160:	ldrdeq	r0, [r0], -r8
   2f164:	ldrdeq	r0, [r0], -r8
   2f168:	ldrdeq	r0, [r0], -r8
   2f16c:	ldrdeq	r0, [r0], -r8
   2f170:	ldrdeq	r0, [r0], -r8
   2f174:	ldrdeq	r0, [r0], -r8
   2f178:	ldrdeq	r0, [r0], -r8
   2f17c:	ldrdeq	r0, [r0], -r8
   2f180:	ldrdeq	r0, [r0], -r8
   2f184:	ldrdeq	r0, [r0], -r8
   2f188:	ldrdeq	r0, [r0], -r8
   2f18c:	ldrdeq	r0, [r0], -r8
   2f190:	andeq	r0, r0, ip, lsl #2
   2f194:	sub	r6, r3, #97	; 0x61
   2f198:	uxtb	r6, r6
   2f19c:	cmp	r6, #26
   2f1a0:	bcc	2f1b4 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x130>
   2f1a4:	sub	r3, r3, #65	; 0x41
   2f1a8:	uxtb	r3, r3
   2f1ac:	cmp	r3, #26
   2f1b0:	bcs	2f210 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x18c>
   2f1b4:	add	r4, r4, #1
   2f1b8:	cmp	r4, r0
   2f1bc:	bcc	2f0a0 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x1c>
   2f1c0:	mov	r0, r4
   2f1c4:	pop	{r4, r5, r6, r7, fp, pc}
   2f1c8:	ldr	r0, [r7, #192]	; 0xc0
   2f1cc:	ldr	r1, [r1, #12]
   2f1d0:	sub	r0, r1, r0
   2f1d4:	add	r0, r0, #6
   2f1d8:	cmp	r0, r4
   2f1dc:	bne	2f220 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x19c>
   2f1e0:	mov	r0, r7
   2f1e4:	mov	r2, #6
   2f1e8:	bl	10fa8 <myhtml_tree_incomming_buffer_make_data@plt>
   2f1ec:	ldr	r1, [pc, #64]	; 2f234 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x1b0>
   2f1f0:	mov	r2, #6
   2f1f4:	add	r1, pc, r1
   2f1f8:	bl	112b4 <mycore_strncasecmp@plt>
   2f1fc:	mov	r1, #28
   2f200:	cmp	r0, #0
   2f204:	movweq	r1, #21
   2f208:	str	r1, [r7, #160]	; 0xa0
   2f20c:	b	2f228 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x1a4>
   2f210:	mov	r0, #28
   2f214:	str	r0, [r7, #160]	; 0xa0
   2f218:	mov	r0, r4
   2f21c:	pop	{r4, r5, r6, r7, fp, pc}
   2f220:	mov	r0, #28
   2f224:	str	r0, [r7, #160]	; 0xa0
   2f228:	add	r4, r4, #1
   2f22c:	mov	r0, r4
   2f230:	pop	{r4, r5, r6, r7, fp, pc}
   2f234:	andeq	r2, sp, r7, asr r0

0002f238 <myhtml_tree_create@@Base>:
   2f238:	mov	r0, #1
   2f23c:	mov	r1, #252	; 0xfc
   2f240:	b	11020 <mycore_calloc@plt>

0002f244 <myhtml_tree_init@@Base>:
   2f244:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2f248:	add	fp, sp, #24
   2f24c:	sub	sp, sp, #8
   2f250:	mov	r6, #0
   2f254:	mov	r5, r1
   2f258:	mov	r4, r0
   2f25c:	str	r6, [sp, #4]
   2f260:	str	r1, [r0]
   2f264:	mov	r1, #512	; 0x200
   2f268:	bl	11c50 <myhtml_token_create@plt>
   2f26c:	cmp	r0, #0
   2f270:	str	r0, [r4, #8]
   2f274:	beq	2f520 <myhtml_tree_init@@Base+0x2dc>
   2f278:	vmov.i32	q8, #0	; 0x00000000
   2f27c:	add	r0, r4, #236	; 0xec
   2f280:	str	r6, [r4, #148]	; 0x94
   2f284:	str	r6, [r4, #208]	; 0xd0
   2f288:	str	r6, [r4, #184]	; 0xb8
   2f28c:	str	r6, [r4, #36]	; 0x24
   2f290:	vst1.32	{d16-d17}, [r0]
   2f294:	add	r0, r4, #220	; 0xdc
   2f298:	vst1.32	{d16-d17}, [r0]
   2f29c:	bl	11860 <mythread_queue_create@plt>
   2f2a0:	cmp	r0, #0
   2f2a4:	str	r0, [r4, #24]
   2f2a8:	beq	2f528 <myhtml_tree_init@@Base+0x2e4>
   2f2ac:	movw	r1, #9182	; 0x23de
   2f2b0:	bl	1159c <mythread_queue_init@plt>
   2f2b4:	mov	r6, r0
   2f2b8:	cmp	r0, #0
   2f2bc:	str	r0, [sp, #4]
   2f2c0:	bne	2f52c <myhtml_tree_init@@Base+0x2e8>
   2f2c4:	bl	110f8 <mcobject_create@plt>
   2f2c8:	cmp	r0, #0
   2f2cc:	str	r0, [r4, #72]	; 0x48
   2f2d0:	beq	2f538 <myhtml_tree_init@@Base+0x2f4>
   2f2d4:	mov	r1, #256	; 0x100
   2f2d8:	mov	r2, #24
   2f2dc:	bl	1162c <mcobject_init@plt>
   2f2e0:	mov	r6, r0
   2f2e4:	cmp	r0, #0
   2f2e8:	str	r0, [sp, #4]
   2f2ec:	bne	2f52c <myhtml_tree_init@@Base+0x2e8>
   2f2f0:	bl	10edc <mcobject_async_create@plt>
   2f2f4:	cmp	r0, #0
   2f2f8:	str	r0, [r4, #12]
   2f2fc:	beq	2f540 <myhtml_tree_init@@Base+0x2fc>
   2f300:	mov	r1, #128	; 0x80
   2f304:	mov	r2, #1024	; 0x400
   2f308:	mov	r3, #44	; 0x2c
   2f30c:	mov	r8, #1024	; 0x400
   2f310:	bl	10e34 <mcobject_async_init@plt>
   2f314:	movw	r6, #37366	; 0x91f6
   2f318:	cmp	r0, #0
   2f31c:	str	r0, [sp]
   2f320:	bne	2f52c <myhtml_tree_init@@Base+0x2e8>
   2f324:	bl	111dc <mchar_async_create@plt>
   2f328:	str	r0, [r4, #4]
   2f32c:	mov	r0, #12
   2f330:	bl	119c8 <mycore_malloc@plt>
   2f334:	mov	r9, #0
   2f338:	mov	r7, #4096	; 0x1000
   2f33c:	mov	r6, r0
   2f340:	str	r9, [r0, #4]
   2f344:	str	r7, [r0, #8]
   2f348:	mov	r0, #16384	; 0x4000
   2f34c:	bl	119c8 <mycore_malloc@plt>
   2f350:	str	r0, [r6]
   2f354:	mov	r0, #12
   2f358:	str	r6, [r4, #124]	; 0x7c
   2f35c:	bl	119c8 <mycore_malloc@plt>
   2f360:	str	r9, [r0, #4]
   2f364:	mov	r6, r0
   2f368:	str	r7, [r0, #8]
   2f36c:	mov	r0, #16384	; 0x4000
   2f370:	bl	119c8 <mycore_malloc@plt>
   2f374:	str	r0, [r6]
   2f378:	mov	r0, #12
   2f37c:	str	r6, [r4, #128]	; 0x80
   2f380:	bl	119c8 <mycore_malloc@plt>
   2f384:	str	r9, [r0, #4]
   2f388:	mov	r6, r0
   2f38c:	str	r7, [r0, #8]
   2f390:	mov	r0, #16384	; 0x4000
   2f394:	bl	119c8 <mycore_malloc@plt>
   2f398:	str	r0, [r6]
   2f39c:	mov	r0, #12
   2f3a0:	str	r6, [r4, #132]	; 0x84
   2f3a4:	bl	119c8 <mycore_malloc@plt>
   2f3a8:	str	r9, [r0, #4]
   2f3ac:	mov	r6, r0
   2f3b0:	str	r7, [r0, #8]
   2f3b4:	mov	r0, #16384	; 0x4000
   2f3b8:	bl	119c8 <mycore_malloc@plt>
   2f3bc:	str	r0, [r6]
   2f3c0:	mov	r0, #12
   2f3c4:	str	r6, [r4, #136]	; 0x88
   2f3c8:	bl	119c8 <mycore_malloc@plt>
   2f3cc:	str	r9, [r0, #4]
   2f3d0:	mov	r6, r0
   2f3d4:	str	r8, [r0, #8]
   2f3d8:	mov	r0, #4096	; 0x1000
   2f3dc:	bl	119c8 <mycore_malloc@plt>
   2f3e0:	str	r0, [r6]
   2f3e4:	str	r6, [r4, #140]	; 0x8c
   2f3e8:	ldr	r0, [r4, #4]
   2f3ec:	cmp	r0, #0
   2f3f0:	beq	2f528 <myhtml_tree_init@@Base+0x2e4>
   2f3f4:	mov	r1, #128	; 0x80
   2f3f8:	mov	r2, #20480	; 0x5000
   2f3fc:	bl	11428 <mchar_async_init@plt>
   2f400:	mov	r6, r0
   2f404:	cmp	r0, #0
   2f408:	str	r0, [sp, #4]
   2f40c:	bne	2f52c <myhtml_tree_init@@Base+0x2e8>
   2f410:	ldr	r0, [r4, #12]
   2f414:	mov	r1, sp
   2f418:	bl	1186c <mcobject_async_node_add@plt>
   2f41c:	str	r0, [r4, #48]	; 0x30
   2f420:	movw	r6, #37367	; 0x91f7
   2f424:	ldr	r0, [sp]
   2f428:	cmp	r0, #0
   2f42c:	bne	2f52c <myhtml_tree_init@@Base+0x2e8>
   2f430:	ldr	r0, [r4, #8]
   2f434:	mov	r1, sp
   2f438:	ldr	r0, [r0, #4]
   2f43c:	bl	1186c <mcobject_async_node_add@plt>
   2f440:	str	r0, [r4, #40]	; 0x28
   2f444:	ldr	r0, [sp]
   2f448:	cmp	r0, #0
   2f44c:	bne	2f52c <myhtml_tree_init@@Base+0x2e8>
   2f450:	ldr	r0, [r4, #8]
   2f454:	mov	r1, sp
   2f458:	ldr	r0, [r0, #8]
   2f45c:	bl	1186c <mcobject_async_node_add@plt>
   2f460:	str	r0, [r4, #44]	; 0x2c
   2f464:	ldr	r0, [sp]
   2f468:	cmp	r0, #0
   2f46c:	bne	2f52c <myhtml_tree_init@@Base+0x2e8>
   2f470:	ldr	r0, [r5, #20]
   2f474:	mov	r1, #4
   2f478:	bl	11020 <mycore_calloc@plt>
   2f47c:	cmp	r0, #0
   2f480:	str	r0, [r4, #144]	; 0x90
   2f484:	beq	2f528 <myhtml_tree_init@@Base+0x2e4>
   2f488:	ldr	r1, [r5, #20]
   2f48c:	cmp	r1, #0
   2f490:	beq	2f4d0 <myhtml_tree_init@@Base+0x28c>
   2f494:	mov	r7, #0
   2f498:	add	r8, sp, #4
   2f49c:	ldr	r0, [r4, #4]
   2f4a0:	mov	r1, r8
   2f4a4:	bl	112a8 <mchar_async_node_add@plt>
   2f4a8:	mov	r1, r0
   2f4ac:	ldr	r0, [r4, #144]	; 0x90
   2f4b0:	str	r1, [r0, r7, lsl #2]
   2f4b4:	ldr	r6, [sp, #4]
   2f4b8:	cmp	r6, #0
   2f4bc:	bne	2f52c <myhtml_tree_init@@Base+0x2e8>
   2f4c0:	ldr	r1, [r5, #20]
   2f4c4:	add	r7, r7, #1
   2f4c8:	cmp	r7, r1
   2f4cc:	bcc	2f49c <myhtml_tree_init@@Base+0x258>
   2f4d0:	ldr	r0, [r0]
   2f4d4:	str	r0, [r4, #52]	; 0x34
   2f4d8:	bl	10f18 <mcsync_create@plt>
   2f4dc:	cmp	r0, #0
   2f4e0:	str	r0, [r4, #16]
   2f4e4:	beq	2f528 <myhtml_tree_init@@Base+0x2e4>
   2f4e8:	bl	116bc <mcsync_init@plt>
   2f4ec:	cmp	r0, #0
   2f4f0:	mov	r6, #2
   2f4f4:	bne	2f52c <myhtml_tree_init@@Base+0x2e8>
   2f4f8:	bl	11a34 <myhtml_tag_create@plt>
   2f4fc:	mov	r1, r0
   2f500:	str	r0, [r4, #28]
   2f504:	mov	r0, r4
   2f508:	bl	118f0 <myhtml_tag_init@plt>
   2f50c:	str	r0, [sp, #4]
   2f510:	mov	r0, r4
   2f514:	bl	115b4 <myhtml_tree_clean@plt>
   2f518:	ldr	r6, [sp, #4]
   2f51c:	b	2f52c <myhtml_tree_init@@Base+0x2e8>
   2f520:	movw	r6, #37164	; 0x912c
   2f524:	b	2f52c <myhtml_tree_init@@Base+0x2e8>
   2f528:	mov	r6, #2
   2f52c:	mov	r0, r6
   2f530:	sub	sp, fp, #24
   2f534:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2f538:	movw	r6, #37368	; 0x91f8
   2f53c:	b	2f52c <myhtml_tree_init@@Base+0x2e8>
   2f540:	movw	r6, #37365	; 0x91f5
   2f544:	b	2f52c <myhtml_tree_init@@Base+0x2e8>

0002f548 <myhtml_tree_active_formatting_init@@Base>:
   2f548:	push	{r4, sl, fp, lr}
   2f54c:	add	fp, sp, #8
   2f550:	mov	r0, #12
   2f554:	bl	119c8 <mycore_malloc@plt>
   2f558:	mov	r4, r0
   2f55c:	mov	r0, #0
   2f560:	str	r0, [r4, #4]
   2f564:	mov	r0, #4096	; 0x1000
   2f568:	str	r0, [r4, #8]
   2f56c:	mov	r0, #16384	; 0x4000
   2f570:	bl	119c8 <mycore_malloc@plt>
   2f574:	str	r0, [r4]
   2f578:	mov	r0, r4
   2f57c:	pop	{r4, sl, fp, pc}

0002f580 <myhtml_tree_open_elements_init@@Base>:
   2f580:	push	{r4, sl, fp, lr}
   2f584:	add	fp, sp, #8
   2f588:	mov	r0, #12
   2f58c:	bl	119c8 <mycore_malloc@plt>
   2f590:	mov	r4, r0
   2f594:	mov	r0, #0
   2f598:	str	r0, [r4, #4]
   2f59c:	mov	r0, #4096	; 0x1000
   2f5a0:	str	r0, [r4, #8]
   2f5a4:	mov	r0, #16384	; 0x4000
   2f5a8:	bl	119c8 <mycore_malloc@plt>
   2f5ac:	str	r0, [r4]
   2f5b0:	mov	r0, r4
   2f5b4:	pop	{r4, sl, fp, pc}

0002f5b8 <myhtml_tree_list_init@@Base>:
   2f5b8:	push	{r4, sl, fp, lr}
   2f5bc:	add	fp, sp, #8
   2f5c0:	mov	r0, #12
   2f5c4:	bl	119c8 <mycore_malloc@plt>
   2f5c8:	mov	r4, r0
   2f5cc:	mov	r0, #0
   2f5d0:	str	r0, [r4, #4]
   2f5d4:	mov	r0, #4096	; 0x1000
   2f5d8:	str	r0, [r4, #8]
   2f5dc:	mov	r0, #16384	; 0x4000
   2f5e0:	bl	119c8 <mycore_malloc@plt>
   2f5e4:	str	r0, [r4]
   2f5e8:	mov	r0, r4
   2f5ec:	pop	{r4, sl, fp, pc}

0002f5f0 <myhtml_tree_token_list_init@@Base>:
   2f5f0:	push	{r4, sl, fp, lr}
   2f5f4:	add	fp, sp, #8
   2f5f8:	mov	r0, #12
   2f5fc:	bl	119c8 <mycore_malloc@plt>
   2f600:	mov	r4, r0
   2f604:	mov	r0, #0
   2f608:	mov	r1, #4096	; 0x1000
   2f60c:	stmib	r4, {r0, r1}
   2f610:	mov	r0, #16384	; 0x4000
   2f614:	bl	119c8 <mycore_malloc@plt>
   2f618:	str	r0, [r4]
   2f61c:	mov	r0, r4
   2f620:	pop	{r4, sl, fp, pc}

0002f624 <myhtml_tree_template_insertion_init@@Base>:
   2f624:	push	{r4, r5, fp, lr}
   2f628:	add	fp, sp, #8
   2f62c:	mov	r4, r0
   2f630:	mov	r0, #12
   2f634:	bl	119c8 <mycore_malloc@plt>
   2f638:	mov	r5, r0
   2f63c:	mov	r0, #0
   2f640:	mov	r1, #1024	; 0x400
   2f644:	stmib	r5, {r0, r1}
   2f648:	mov	r0, #4096	; 0x1000
   2f64c:	bl	119c8 <mycore_malloc@plt>
   2f650:	str	r0, [r5]
   2f654:	mov	r0, r5
   2f658:	str	r5, [r4, #140]	; 0x8c
   2f65c:	pop	{r4, r5, fp, pc}

0002f660 <myhtml_tree_clean@@Base>:
   2f660:	push	{r4, r5, r6, r7, fp, lr}
   2f664:	add	fp, sp, #16
   2f668:	vpush	{d8-d9}
   2f66c:	ldr	r5, [r0]
   2f670:	mov	r4, r0
   2f674:	ldr	r0, [r5, #20]
   2f678:	cmp	r0, #0
   2f67c:	beq	2f6a4 <myhtml_tree_clean@@Base+0x44>
   2f680:	mov	r6, #0
   2f684:	ldr	r1, [r4, #144]	; 0x90
   2f688:	ldr	r0, [r4, #4]
   2f68c:	ldr	r1, [r1, r6, lsl #2]
   2f690:	bl	115cc <mchar_async_node_clean@plt>
   2f694:	ldr	r0, [r5, #20]
   2f698:	add	r6, r6, #1
   2f69c:	cmp	r6, r0
   2f6a0:	bcc	2f684 <myhtml_tree_clean@@Base+0x24>
   2f6a4:	ldr	r0, [r4, #12]
   2f6a8:	ldr	r1, [r4, #48]	; 0x30
   2f6ac:	bl	116c8 <mcobject_async_node_clean@plt>
   2f6b0:	ldr	r0, [r4, #8]
   2f6b4:	ldr	r1, [r4, #40]	; 0x28
   2f6b8:	ldr	r0, [r0, #4]
   2f6bc:	bl	116c8 <mcobject_async_node_clean@plt>
   2f6c0:	ldr	r0, [r4, #8]
   2f6c4:	ldr	r1, [r4, #44]	; 0x2c
   2f6c8:	ldr	r0, [r0, #8]
   2f6cc:	bl	116c8 <mcobject_async_node_clean@plt>
   2f6d0:	ldr	r0, [r4, #20]
   2f6d4:	bl	117c4 <mythread_queue_list_entry_clean@plt>
   2f6d8:	ldr	r0, [r4]
   2f6dc:	ldr	r1, [r4, #20]
   2f6e0:	ldr	r0, [r0, #4]
   2f6e4:	bl	11a28 <mythread_queue_list_entry_make_batch@plt>
   2f6e8:	ldr	r0, [r4]
   2f6ec:	ldr	r1, [r4, #20]
   2f6f0:	ldr	r0, [r0]
   2f6f4:	bl	11b78 <mythread_queue_list_entry_make_stream@plt>
   2f6f8:	ldr	r0, [r4, #8]
   2f6fc:	bl	11500 <myhtml_token_clean@plt>
   2f700:	ldr	r0, [r4, #12]
   2f704:	ldr	r1, [r4, #48]	; 0x30
   2f708:	mov	r2, #0
   2f70c:	mov	r5, #0
   2f710:	bl	1192c <mcobject_async_malloc@plt>
   2f714:	vmov.i32	q4, #0	; 0x00000000
   2f718:	mov	r6, #36	; 0x24
   2f71c:	mov	r1, r0
   2f720:	mov	r7, #1
   2f724:	str	r5, [r0, #32]
   2f728:	str	r4, [r0, #40]	; 0x28
   2f72c:	mov	r2, #0
   2f730:	vst1.32	{d8-d9}, [r1], r6
   2f734:	str	r7, [r0, #8]
   2f738:	add	r0, r0, #16
   2f73c:	vst1.32	{d8-d9}, [r0]
   2f740:	str	r5, [r1]
   2f744:	ldr	r0, [r4, #12]
   2f748:	ldr	r1, [r4, #48]	; 0x30
   2f74c:	bl	1192c <mcobject_async_malloc@plt>
   2f750:	add	r1, r0, #16
   2f754:	str	r5, [r0, #32]
   2f758:	str	r4, [r0, #40]	; 0x28
   2f75c:	vst1.32	{d8-d9}, [r1]
   2f760:	mov	r1, r0
   2f764:	vst1.32	{d8-d9}, [r1], r6
   2f768:	str	r5, [r1]
   2f76c:	mov	r1, #2
   2f770:	str	r7, [r0, #8]
   2f774:	str	r1, [r4, #180]	; 0xb4
   2f778:	str	r5, [r4, #156]	; 0x9c
   2f77c:	str	r5, [r4, #76]	; 0x4c
   2f780:	str	r5, [r4, #80]	; 0x50
   2f784:	str	r0, [r4, #84]	; 0x54
   2f788:	add	r0, r4, #88	; 0x58
   2f78c:	str	r5, [r4, #192]	; 0xc0
   2f790:	str	r5, [r4, #68]	; 0x44
   2f794:	str	r5, [r4, #112]	; 0x70
   2f798:	str	r5, [r4, #116]	; 0x74
   2f79c:	str	r5, [r4, #120]	; 0x78
   2f7a0:	str	r5, [r4, #60]	; 0x3c
   2f7a4:	str	r5, [r4, #105]	; 0x69
   2f7a8:	vst1.32	{d8-d9}, [r0]
   2f7ac:	add	r0, r4, #160	; 0xa0
   2f7b0:	str	r5, [r4, #101]	; 0x65
   2f7b4:	strb	r5, [r4, #188]	; 0xbc
   2f7b8:	str	r5, [r4, #176]	; 0xb0
   2f7bc:	vst1.32	{d8-d9}, [r0]
   2f7c0:	str	r5, [r4, #152]	; 0x98
   2f7c4:	str	r5, [r4, #200]	; 0xc8
   2f7c8:	str	r5, [r4, #196]	; 0xc4
   2f7cc:	str	r5, [r4, #204]	; 0xcc
   2f7d0:	ldr	r0, [r4, #148]	; 0x94
   2f7d4:	bl	113ec <myhtml_stream_buffer_clean@plt>
   2f7d8:	ldr	r0, [r4, #124]	; 0x7c
   2f7dc:	str	r5, [r0, #4]
   2f7e0:	ldr	r0, [r4, #128]	; 0x80
   2f7e4:	str	r5, [r0, #4]
   2f7e8:	ldr	r0, [r4, #132]	; 0x84
   2f7ec:	str	r5, [r0, #4]
   2f7f0:	ldr	r0, [r4, #136]	; 0x88
   2f7f4:	str	r5, [r0, #4]
   2f7f8:	ldr	r0, [r4, #140]	; 0x8c
   2f7fc:	str	r5, [r0, #4]
   2f800:	ldr	r0, [r4, #72]	; 0x48
   2f804:	bl	11bd8 <mcobject_clean@plt>
   2f808:	ldr	r0, [r4, #28]
   2f80c:	bl	11ca4 <myhtml_tag_clean@plt>
   2f810:	ldr	r0, [r4, #24]
   2f814:	bl	10ee8 <mythread_queue_clean@plt>
   2f818:	ldr	r0, [r4, #8]
   2f81c:	ldr	r1, [r0, #16]
   2f820:	bl	11740 <myhtml_token_attr_create@plt>
   2f824:	str	r0, [r4, #56]	; 0x38
   2f828:	vpop	{d8-d9}
   2f82c:	pop	{r4, r5, r6, r7, fp, pc}

0002f830 <myhtml_tree_node_create@@Base>:
   2f830:	push	{r4, r5, fp, lr}
   2f834:	add	fp, sp, #8
   2f838:	mov	r4, r0
   2f83c:	ldr	r0, [r0, #12]
   2f840:	mov	r2, #0
   2f844:	mov	r5, #0
   2f848:	ldr	r1, [r4, #48]	; 0x30
   2f84c:	bl	1192c <mcobject_async_malloc@plt>
   2f850:	vmov.i32	q8, #0	; 0x00000000
   2f854:	mov	r1, #36	; 0x24
   2f858:	mov	r2, r0
   2f85c:	str	r5, [r0, #32]
   2f860:	str	r4, [r0, #40]	; 0x28
   2f864:	vst1.32	{d16-d17}, [r2], r1
   2f868:	mov	r1, #1
   2f86c:	str	r1, [r0, #8]
   2f870:	add	r1, r0, #16
   2f874:	str	r5, [r2]
   2f878:	vst1.32	{d16-d17}, [r1]
   2f87c:	pop	{r4, r5, fp, pc}

0002f880 <myhtml_tree_active_formatting_clean@@Base>:
   2f880:	ldr	r0, [r0, #124]	; 0x7c
   2f884:	mov	r1, #0
   2f888:	str	r1, [r0, #4]
   2f88c:	bx	lr

0002f890 <myhtml_tree_open_elements_clean@@Base>:
   2f890:	ldr	r0, [r0, #128]	; 0x80
   2f894:	mov	r1, #0
   2f898:	str	r1, [r0, #4]
   2f89c:	bx	lr

0002f8a0 <myhtml_tree_list_clean@@Base>:
   2f8a0:	mov	r1, #0
   2f8a4:	str	r1, [r0, #4]
   2f8a8:	bx	lr

0002f8ac <myhtml_tree_token_list_clean@@Base>:
   2f8ac:	mov	r1, #0
   2f8b0:	str	r1, [r0, #4]
   2f8b4:	bx	lr

0002f8b8 <myhtml_tree_template_insertion_clean@@Base>:
   2f8b8:	ldr	r0, [r0, #140]	; 0x8c
   2f8bc:	mov	r1, #0
   2f8c0:	str	r1, [r0, #4]
   2f8c4:	bx	lr

0002f8c8 <myhtml_tree_clean_all@@Base>:
   2f8c8:	push	{r4, r5, r6, r7, fp, lr}
   2f8cc:	add	fp, sp, #16
   2f8d0:	vpush	{d8-d9}
   2f8d4:	mov	r4, r0
   2f8d8:	ldr	r0, [r0, #12]
   2f8dc:	bl	11c98 <mcobject_async_clean@plt>
   2f8e0:	ldr	r0, [r4, #8]
   2f8e4:	bl	11500 <myhtml_token_clean@plt>
   2f8e8:	ldr	r0, [r4, #4]
   2f8ec:	bl	11938 <mchar_async_clean@plt>
   2f8f0:	ldr	r0, [r4, #12]
   2f8f4:	ldr	r1, [r4, #48]	; 0x30
   2f8f8:	mov	r2, #0
   2f8fc:	mov	r5, #0
   2f900:	bl	1192c <mcobject_async_malloc@plt>
   2f904:	vmov.i32	q4, #0	; 0x00000000
   2f908:	mov	r6, #36	; 0x24
   2f90c:	mov	r1, r0
   2f910:	mov	r7, #1
   2f914:	str	r5, [r0, #32]
   2f918:	str	r4, [r0, #40]	; 0x28
   2f91c:	mov	r2, #0
   2f920:	vst1.32	{d8-d9}, [r1], r6
   2f924:	str	r7, [r0, #8]
   2f928:	add	r0, r0, #16
   2f92c:	vst1.32	{d8-d9}, [r0]
   2f930:	str	r5, [r1]
   2f934:	ldr	r0, [r4, #12]
   2f938:	ldr	r1, [r4, #48]	; 0x30
   2f93c:	bl	1192c <mcobject_async_malloc@plt>
   2f940:	add	r1, r0, #16
   2f944:	str	r5, [r0, #32]
   2f948:	str	r4, [r0, #40]	; 0x28
   2f94c:	vst1.32	{d8-d9}, [r1]
   2f950:	mov	r1, r0
   2f954:	vst1.32	{d8-d9}, [r1], r6
   2f958:	str	r5, [r1]
   2f95c:	mov	r1, #2
   2f960:	str	r7, [r0, #8]
   2f964:	str	r1, [r4, #180]	; 0xb4
   2f968:	str	r5, [r4, #156]	; 0x9c
   2f96c:	str	r5, [r4, #76]	; 0x4c
   2f970:	str	r5, [r4, #80]	; 0x50
   2f974:	str	r0, [r4, #84]	; 0x54
   2f978:	add	r0, r4, #88	; 0x58
   2f97c:	str	r5, [r4, #192]	; 0xc0
   2f980:	str	r5, [r4, #68]	; 0x44
   2f984:	str	r5, [r4, #112]	; 0x70
   2f988:	str	r5, [r4, #116]	; 0x74
   2f98c:	str	r5, [r4, #120]	; 0x78
   2f990:	str	r5, [r4, #60]	; 0x3c
   2f994:	str	r5, [r4, #105]	; 0x69
   2f998:	vst1.32	{d8-d9}, [r0]
   2f99c:	add	r0, r4, #160	; 0xa0
   2f9a0:	str	r5, [r4, #101]	; 0x65
   2f9a4:	strb	r5, [r4, #188]	; 0xbc
   2f9a8:	str	r5, [r4, #176]	; 0xb0
   2f9ac:	vst1.32	{d8-d9}, [r0]
   2f9b0:	str	r5, [r4, #152]	; 0x98
   2f9b4:	str	r5, [r4, #200]	; 0xc8
   2f9b8:	str	r5, [r4, #196]	; 0xc4
   2f9bc:	str	r5, [r4, #204]	; 0xcc
   2f9c0:	ldr	r0, [r4, #148]	; 0x94
   2f9c4:	bl	113ec <myhtml_stream_buffer_clean@plt>
   2f9c8:	ldr	r0, [r4, #124]	; 0x7c
   2f9cc:	str	r5, [r0, #4]
   2f9d0:	ldr	r0, [r4, #128]	; 0x80
   2f9d4:	str	r5, [r0, #4]
   2f9d8:	ldr	r0, [r4, #132]	; 0x84
   2f9dc:	str	r5, [r0, #4]
   2f9e0:	ldr	r0, [r4, #136]	; 0x88
   2f9e4:	str	r5, [r0, #4]
   2f9e8:	ldr	r0, [r4, #140]	; 0x8c
   2f9ec:	str	r5, [r0, #4]
   2f9f0:	ldr	r0, [r4, #72]	; 0x48
   2f9f4:	bl	11bd8 <mcobject_clean@plt>
   2f9f8:	ldr	r0, [r4, #28]
   2f9fc:	bl	11ca4 <myhtml_tag_clean@plt>
   2fa00:	ldr	r0, [r4, #20]
   2fa04:	bl	117c4 <mythread_queue_list_entry_clean@plt>
   2fa08:	ldr	r0, [r4]
   2fa0c:	ldr	r1, [r4, #20]
   2fa10:	ldr	r0, [r0, #4]
   2fa14:	bl	11a28 <mythread_queue_list_entry_make_batch@plt>
   2fa18:	ldr	r0, [r4]
   2fa1c:	ldr	r1, [r4, #20]
   2fa20:	ldr	r0, [r0]
   2fa24:	bl	11b78 <mythread_queue_list_entry_make_stream@plt>
   2fa28:	ldr	r0, [r4, #8]
   2fa2c:	ldr	r1, [r0, #16]
   2fa30:	bl	11740 <myhtml_token_attr_create@plt>
   2fa34:	str	r0, [r4, #56]	; 0x38
   2fa38:	vpop	{d8-d9}
   2fa3c:	pop	{r4, r5, r6, r7, fp, pc}

0002fa40 <myhtml_tree_destroy@@Base>:
   2fa40:	cmp	r0, #0
   2fa44:	beq	2fbd0 <myhtml_tree_destroy@@Base+0x190>
   2fa48:	push	{r4, r5, r6, sl, fp, lr}
   2fa4c:	add	fp, sp, #16
   2fa50:	mov	r4, r0
   2fa54:	ldr	r0, [r0, #28]
   2fa58:	bl	11b00 <myhtml_tag_destroy@plt>
   2fa5c:	str	r0, [r4, #28]
   2fa60:	ldr	r5, [r4, #124]	; 0x7c
   2fa64:	cmp	r5, #0
   2fa68:	beq	2fa84 <myhtml_tree_destroy@@Base+0x44>
   2fa6c:	ldr	r0, [r5]
   2fa70:	cmp	r0, #0
   2fa74:	beq	2fa7c <myhtml_tree_destroy@@Base+0x3c>
   2fa78:	bl	11ab8 <mycore_free@plt>
   2fa7c:	mov	r0, r5
   2fa80:	bl	11ab8 <mycore_free@plt>
   2fa84:	mov	r6, #0
   2fa88:	str	r6, [r4, #124]	; 0x7c
   2fa8c:	ldr	r5, [r4, #128]	; 0x80
   2fa90:	cmp	r5, #0
   2fa94:	beq	2fab0 <myhtml_tree_destroy@@Base+0x70>
   2fa98:	ldr	r0, [r5]
   2fa9c:	cmp	r0, #0
   2faa0:	beq	2faa8 <myhtml_tree_destroy@@Base+0x68>
   2faa4:	bl	11ab8 <mycore_free@plt>
   2faa8:	mov	r0, r5
   2faac:	bl	11ab8 <mycore_free@plt>
   2fab0:	str	r6, [r4, #128]	; 0x80
   2fab4:	ldr	r5, [r4, #132]	; 0x84
   2fab8:	cmp	r5, #0
   2fabc:	beq	2fad8 <myhtml_tree_destroy@@Base+0x98>
   2fac0:	ldr	r0, [r5]
   2fac4:	cmp	r0, #0
   2fac8:	beq	2fad0 <myhtml_tree_destroy@@Base+0x90>
   2facc:	bl	11ab8 <mycore_free@plt>
   2fad0:	mov	r0, r5
   2fad4:	bl	11ab8 <mycore_free@plt>
   2fad8:	mov	r6, #0
   2fadc:	str	r6, [r4, #132]	; 0x84
   2fae0:	ldr	r5, [r4, #136]	; 0x88
   2fae4:	cmp	r5, #0
   2fae8:	beq	2fb04 <myhtml_tree_destroy@@Base+0xc4>
   2faec:	ldr	r0, [r5]
   2faf0:	cmp	r0, #0
   2faf4:	beq	2fafc <myhtml_tree_destroy@@Base+0xbc>
   2faf8:	bl	11ab8 <mycore_free@plt>
   2fafc:	mov	r0, r5
   2fb00:	bl	11ab8 <mycore_free@plt>
   2fb04:	str	r6, [r4, #136]	; 0x88
   2fb08:	ldr	r0, [r4, #140]	; 0x8c
   2fb0c:	cmp	r0, #0
   2fb10:	beq	2fb38 <myhtml_tree_destroy@@Base+0xf8>
   2fb14:	ldr	r1, [r0]
   2fb18:	cmp	r1, #0
   2fb1c:	beq	2fb34 <myhtml_tree_destroy@@Base+0xf4>
   2fb20:	mov	r0, r1
   2fb24:	bl	11ab8 <mycore_free@plt>
   2fb28:	ldr	r0, [r4, #140]	; 0x8c
   2fb2c:	cmp	r0, #0
   2fb30:	beq	2fb38 <myhtml_tree_destroy@@Base+0xf8>
   2fb34:	bl	11ab8 <mycore_free@plt>
   2fb38:	mov	r5, #0
   2fb3c:	mov	r1, #1
   2fb40:	str	r5, [r4, #140]	; 0x8c
   2fb44:	ldr	r0, [r4, #16]
   2fb48:	bl	11218 <mcsync_destroy@plt>
   2fb4c:	str	r0, [r4, #16]
   2fb50:	mov	r1, #1
   2fb54:	ldr	r0, [r4, #12]
   2fb58:	bl	118cc <mcobject_async_destroy@plt>
   2fb5c:	str	r0, [r4, #12]
   2fb60:	ldr	r0, [r4, #8]
   2fb64:	bl	11638 <myhtml_token_destroy@plt>
   2fb68:	str	r0, [r4, #8]
   2fb6c:	mov	r1, #1
   2fb70:	ldr	r0, [r4, #4]
   2fb74:	bl	11a94 <mchar_async_destroy@plt>
   2fb78:	str	r0, [r4, #4]
   2fb7c:	mov	r1, #1
   2fb80:	ldr	r0, [r4, #148]	; 0x94
   2fb84:	bl	10eb8 <myhtml_stream_buffer_destroy@plt>
   2fb88:	str	r0, [r4, #148]	; 0x94
   2fb8c:	ldr	r0, [r4, #24]
   2fb90:	bl	112cc <mythread_queue_destroy@plt>
   2fb94:	str	r0, [r4, #24]
   2fb98:	mov	r1, #1
   2fb9c:	ldr	r0, [r4, #72]	; 0x48
   2fba0:	bl	10f30 <mcobject_destroy@plt>
   2fba4:	str	r0, [r4, #72]	; 0x48
   2fba8:	ldr	r0, [r4, #208]	; 0xd0
   2fbac:	cmp	r0, #0
   2fbb0:	beq	2fbbc <myhtml_tree_destroy@@Base+0x17c>
   2fbb4:	bl	11ab8 <mycore_free@plt>
   2fbb8:	str	r5, [r4, #208]	; 0xd0
   2fbbc:	ldr	r0, [r4, #144]	; 0x90
   2fbc0:	bl	11ab8 <mycore_free@plt>
   2fbc4:	mov	r0, r4
   2fbc8:	bl	11ab8 <mycore_free@plt>
   2fbcc:	pop	{r4, r5, r6, sl, fp, lr}
   2fbd0:	mov	r0, #0
   2fbd4:	bx	lr

0002fbd8 <myhtml_tree_active_formatting_destroy@@Base>:
   2fbd8:	push	{r4, sl, fp, lr}
   2fbdc:	add	fp, sp, #8
   2fbe0:	ldr	r4, [r0, #124]	; 0x7c
   2fbe4:	cmp	r4, #0
   2fbe8:	beq	2fc04 <myhtml_tree_active_formatting_destroy@@Base+0x2c>
   2fbec:	ldr	r0, [r4]
   2fbf0:	cmp	r0, #0
   2fbf4:	beq	2fbfc <myhtml_tree_active_formatting_destroy@@Base+0x24>
   2fbf8:	bl	11ab8 <mycore_free@plt>
   2fbfc:	mov	r0, r4
   2fc00:	bl	11ab8 <mycore_free@plt>
   2fc04:	mov	r0, #0
   2fc08:	pop	{r4, sl, fp, pc}

0002fc0c <myhtml_tree_open_elements_destroy@@Base>:
   2fc0c:	push	{r4, sl, fp, lr}
   2fc10:	add	fp, sp, #8
   2fc14:	ldr	r4, [r0, #128]	; 0x80
   2fc18:	cmp	r4, #0
   2fc1c:	beq	2fc38 <myhtml_tree_open_elements_destroy@@Base+0x2c>
   2fc20:	ldr	r0, [r4]
   2fc24:	cmp	r0, #0
   2fc28:	beq	2fc30 <myhtml_tree_open_elements_destroy@@Base+0x24>
   2fc2c:	bl	11ab8 <mycore_free@plt>
   2fc30:	mov	r0, r4
   2fc34:	bl	11ab8 <mycore_free@plt>
   2fc38:	mov	r0, #0
   2fc3c:	pop	{r4, sl, fp, pc}

0002fc40 <myhtml_tree_list_destroy@@Base>:
   2fc40:	push	{r4, r5, r6, sl, fp, lr}
   2fc44:	add	fp, sp, #16
   2fc48:	mov	r4, #0
   2fc4c:	cmp	r0, #0
   2fc50:	beq	2fc80 <myhtml_tree_list_destroy@@Base+0x40>
   2fc54:	mov	r5, r0
   2fc58:	ldr	r0, [r0]
   2fc5c:	mov	r6, r1
   2fc60:	cmp	r0, #0
   2fc64:	beq	2fc6c <myhtml_tree_list_destroy@@Base+0x2c>
   2fc68:	bl	11ab8 <mycore_free@plt>
   2fc6c:	cmp	r6, #0
   2fc70:	moveq	r0, r5
   2fc74:	popeq	{r4, r5, r6, sl, fp, pc}
   2fc78:	mov	r0, r5
   2fc7c:	bl	11ab8 <mycore_free@plt>
   2fc80:	mov	r0, r4
   2fc84:	pop	{r4, r5, r6, sl, fp, pc}

0002fc88 <myhtml_tree_token_list_destroy@@Base>:
   2fc88:	push	{r4, r5, r6, sl, fp, lr}
   2fc8c:	add	fp, sp, #16
   2fc90:	mov	r4, #0
   2fc94:	cmp	r0, #0
   2fc98:	beq	2fcc8 <myhtml_tree_token_list_destroy@@Base+0x40>
   2fc9c:	mov	r5, r0
   2fca0:	ldr	r0, [r0]
   2fca4:	mov	r6, r1
   2fca8:	cmp	r0, #0
   2fcac:	beq	2fcb4 <myhtml_tree_token_list_destroy@@Base+0x2c>
   2fcb0:	bl	11ab8 <mycore_free@plt>
   2fcb4:	cmp	r6, #0
   2fcb8:	moveq	r0, r5
   2fcbc:	popeq	{r4, r5, r6, sl, fp, pc}
   2fcc0:	mov	r0, r5
   2fcc4:	bl	11ab8 <mycore_free@plt>
   2fcc8:	mov	r0, r4
   2fccc:	pop	{r4, r5, r6, sl, fp, pc}

0002fcd0 <myhtml_tree_template_insertion_destroy@@Base>:
   2fcd0:	push	{r4, sl, fp, lr}
   2fcd4:	add	fp, sp, #8
   2fcd8:	mov	r4, r0
   2fcdc:	ldr	r0, [r0, #140]	; 0x8c
   2fce0:	cmp	r0, #0
   2fce4:	beq	2fd0c <myhtml_tree_template_insertion_destroy@@Base+0x3c>
   2fce8:	ldr	r1, [r0]
   2fcec:	cmp	r1, #0
   2fcf0:	beq	2fd08 <myhtml_tree_template_insertion_destroy@@Base+0x38>
   2fcf4:	mov	r0, r1
   2fcf8:	bl	11ab8 <mycore_free@plt>
   2fcfc:	ldr	r0, [r4, #140]	; 0x8c
   2fd00:	cmp	r0, #0
   2fd04:	beq	2fd0c <myhtml_tree_template_insertion_destroy@@Base+0x3c>
   2fd08:	bl	11ab8 <mycore_free@plt>
   2fd0c:	mov	r0, #0
   2fd10:	pop	{r4, sl, fp, pc}

0002fd14 <myhtml_tree_temp_tag_name_destroy@@Base>:
   2fd14:	push	{r4, r5, r6, sl, fp, lr}
   2fd18:	add	fp, sp, #16
   2fd1c:	mov	r4, #0
   2fd20:	cmp	r0, #0
   2fd24:	beq	2fd5c <myhtml_tree_temp_tag_name_destroy@@Base+0x48>
   2fd28:	mov	r5, r0
   2fd2c:	ldr	r0, [r0]
   2fd30:	mov	r6, r1
   2fd34:	cmp	r0, #0
   2fd38:	beq	2fd48 <myhtml_tree_temp_tag_name_destroy@@Base+0x34>
   2fd3c:	bl	11ab8 <mycore_free@plt>
   2fd40:	mov	r0, #0
   2fd44:	str	r0, [r5]
   2fd48:	cmp	r6, #0
   2fd4c:	moveq	r0, r5
   2fd50:	popeq	{r4, r5, r6, sl, fp, pc}
   2fd54:	mov	r0, r5
   2fd58:	bl	11ab8 <mycore_free@plt>
   2fd5c:	mov	r0, r4
   2fd60:	pop	{r4, r5, r6, sl, fp, pc}

0002fd64 <myhtml_tree_node_clean@@Base>:
   2fd64:	vmov.i32	q8, #0	; 0x00000000
   2fd68:	add	r1, r0, #28
   2fd6c:	vst1.32	{d16-d17}, [r1]
   2fd70:	add	r1, r0, #16
   2fd74:	vst1.32	{d16-d17}, [r1]
   2fd78:	mov	r1, #8
   2fd7c:	vst1.32	{d16-d17}, [r0], r1
   2fd80:	mov	r1, #1
   2fd84:	str	r1, [r0]
   2fd88:	bx	lr

0002fd8c <myhtml_tree_parse_flags@@Base>:
   2fd8c:	ldr	r0, [r0, #184]	; 0xb8
   2fd90:	bx	lr

0002fd94 <myhtml_tree_parse_flags_set@@Base>:
   2fd94:	str	r1, [r0, #184]	; 0xb8
   2fd98:	bx	lr

0002fd9c <myhtml_tree_get_myhtml@@Base>:
   2fd9c:	cmp	r0, #0
   2fda0:	ldrne	r0, [r0]
   2fda4:	moveq	r0, #0
   2fda8:	bx	lr

0002fdac <myhtml_tree_get_tag@@Base>:
   2fdac:	cmp	r0, #0
   2fdb0:	ldrne	r0, [r0, #28]
   2fdb4:	moveq	r0, #0
   2fdb8:	bx	lr

0002fdbc <myhtml_tree_get_document@@Base>:
   2fdbc:	ldr	r0, [r0, #84]	; 0x54
   2fdc0:	bx	lr

0002fdc4 <myhtml_tree_get_node_html@@Base>:
   2fdc4:	ldr	r0, [r0, #96]	; 0x60
   2fdc8:	bx	lr

0002fdcc <myhtml_tree_get_node_body@@Base>:
   2fdcc:	ldr	r0, [r0, #100]	; 0x64
   2fdd0:	bx	lr

0002fdd4 <myhtml_tree_get_node_head@@Base>:
   2fdd4:	ldr	r0, [r0, #92]	; 0x5c
   2fdd8:	bx	lr

0002fddc <myhtml_tree_get_mchar@@Base>:
   2fddc:	ldr	r0, [r0, #4]
   2fde0:	bx	lr

0002fde4 <myhtml_tree_get_mchar_node_id@@Base>:
   2fde4:	ldr	r0, [r0, #52]	; 0x34
   2fde8:	bx	lr

0002fdec <myhtml_tree_node_add_child@@Base>:
   2fdec:	ldr	r2, [r0, #28]
   2fdf0:	cmp	r2, #0
   2fdf4:	streq	r1, [r0, #20]
   2fdf8:	strne	r1, [r2, #16]
   2fdfc:	strne	r2, [r1, #12]
   2fe00:	str	r0, [r1, #24]
   2fe04:	str	r1, [r0, #28]
   2fe08:	ldr	r0, [r1, #40]	; 0x28
   2fe0c:	ldr	r3, [r0, #236]	; 0xec
   2fe10:	cmp	r3, #0
   2fe14:	bxeq	lr
   2fe18:	ldr	r2, [r0, #244]	; 0xf4
   2fe1c:	bx	r3

0002fe20 <myhtml_tree_node_insert_before@@Base>:
   2fe20:	ldr	r2, [r0, #12]
   2fe24:	cmp	r2, #0
   2fe28:	beq	2fe3c <myhtml_tree_node_insert_before@@Base+0x1c>
   2fe2c:	str	r1, [r2, #16]
   2fe30:	str	r2, [r1, #12]
   2fe34:	ldr	r2, [r0, #24]
   2fe38:	b	2fe44 <myhtml_tree_node_insert_before@@Base+0x24>
   2fe3c:	ldr	r2, [r0, #24]
   2fe40:	str	r1, [r2, #20]
   2fe44:	str	r0, [r1, #16]
   2fe48:	str	r2, [r1, #24]
   2fe4c:	str	r1, [r0, #12]
   2fe50:	ldr	r0, [r1, #40]	; 0x28
   2fe54:	ldr	r3, [r0, #236]	; 0xec
   2fe58:	cmp	r3, #0
   2fe5c:	bxeq	lr
   2fe60:	ldr	r2, [r0, #244]	; 0xf4
   2fe64:	bx	r3

0002fe68 <myhtml_tree_node_insert_after@@Base>:
   2fe68:	ldr	r2, [r0, #16]
   2fe6c:	cmp	r2, #0
   2fe70:	beq	2fe84 <myhtml_tree_node_insert_after@@Base+0x1c>
   2fe74:	str	r1, [r2, #12]
   2fe78:	str	r2, [r1, #16]
   2fe7c:	ldr	r2, [r0, #24]
   2fe80:	b	2fe8c <myhtml_tree_node_insert_after@@Base+0x24>
   2fe84:	ldr	r2, [r0, #24]
   2fe88:	str	r1, [r2, #28]
   2fe8c:	str	r0, [r1, #12]
   2fe90:	str	r2, [r1, #24]
   2fe94:	str	r1, [r0, #16]
   2fe98:	ldr	r0, [r1, #40]	; 0x28
   2fe9c:	ldr	r3, [r0, #236]	; 0xec
   2fea0:	cmp	r3, #0
   2fea4:	bxeq	lr
   2fea8:	ldr	r2, [r0, #244]	; 0xf4
   2feac:	bx	r3

0002feb0 <myhtml_tree_node_find_parent_by_tag_id@@Base>:
   2feb0:	ldr	r0, [r0, #24]
   2feb4:	cmp	r0, #0
   2feb8:	ldrne	r2, [r0, #4]
   2febc:	cmpne	r2, r1
   2fec0:	bne	2feb0 <myhtml_tree_node_find_parent_by_tag_id@@Base>
   2fec4:	bx	lr

0002fec8 <myhtml_tree_node_remove@@Base>:
   2fec8:	push	{r4, sl, fp, lr}
   2fecc:	add	fp, sp, #8
   2fed0:	mov	r4, r0
   2fed4:	ldr	r0, [r0, #16]
   2fed8:	cmp	r0, #0
   2fedc:	beq	2feec <myhtml_tree_node_remove@@Base+0x24>
   2fee0:	add	r2, r0, #12
   2fee4:	add	r1, r4, #12
   2fee8:	b	2ff00 <myhtml_tree_node_remove@@Base+0x38>
   2feec:	ldr	r2, [r4, #24]
   2fef0:	add	r1, r4, #12
   2fef4:	cmp	r2, #0
   2fef8:	beq	2ff08 <myhtml_tree_node_remove@@Base+0x40>
   2fefc:	add	r2, r2, #28
   2ff00:	ldr	r3, [r1]
   2ff04:	str	r3, [r2]
   2ff08:	ldr	r1, [r1]
   2ff0c:	cmp	r1, #0
   2ff10:	beq	2ff1c <myhtml_tree_node_remove@@Base+0x54>
   2ff14:	add	r1, r1, #16
   2ff18:	b	2ff2c <myhtml_tree_node_remove@@Base+0x64>
   2ff1c:	ldr	r1, [r4, #24]
   2ff20:	cmp	r1, #0
   2ff24:	beq	2ff30 <myhtml_tree_node_remove@@Base+0x68>
   2ff28:	add	r1, r1, #20
   2ff2c:	str	r0, [r1]
   2ff30:	ldr	r0, [r4, #40]	; 0x28
   2ff34:	ldr	r3, [r0, #240]	; 0xf0
   2ff38:	cmp	r3, #0
   2ff3c:	beq	2ff4c <myhtml_tree_node_remove@@Base+0x84>
   2ff40:	ldr	r2, [r0, #248]	; 0xf8
   2ff44:	mov	r1, r4
   2ff48:	blx	r3
   2ff4c:	mov	r0, #0
   2ff50:	str	r0, [r4, #12]
   2ff54:	str	r0, [r4, #16]
   2ff58:	str	r0, [r4, #24]
   2ff5c:	mov	r0, r4
   2ff60:	pop	{r4, sl, fp, pc}

0002ff64 <myhtml_tree_node_free@@Base>:
   2ff64:	cmp	r0, #0
   2ff68:	bxeq	lr
   2ff6c:	push	{r4, sl, fp, lr}
   2ff70:	add	fp, sp, #8
   2ff74:	ldr	r1, [r0, #32]
   2ff78:	mov	r4, r0
   2ff7c:	cmp	r1, #0
   2ff80:	beq	2ffa0 <myhtml_tree_node_free@@Base+0x3c>
   2ff84:	ldr	r0, [r4, #40]	; 0x28
   2ff88:	ldr	r0, [r0, #8]
   2ff8c:	bl	11668 <myhtml_token_attr_delete_all@plt>
   2ff90:	ldr	r0, [r4, #40]	; 0x28
   2ff94:	ldr	r1, [r4, #32]
   2ff98:	ldr	r0, [r0, #8]
   2ff9c:	bl	11bf0 <myhtml_token_delete@plt>
   2ffa0:	ldr	r0, [r4, #40]	; 0x28
   2ffa4:	mov	r1, r4
   2ffa8:	ldr	r0, [r0, #12]
   2ffac:	pop	{r4, sl, fp, lr}
   2ffb0:	b	11128 <mcobject_async_free@plt>

0002ffb4 <myhtml_tree_node_delete@@Base>:
   2ffb4:	cmp	r0, #0
   2ffb8:	bxeq	lr
   2ffbc:	push	{r4, sl, fp, lr}
   2ffc0:	add	fp, sp, #8
   2ffc4:	mov	r4, r0
   2ffc8:	ldr	r0, [r0, #16]
   2ffcc:	cmp	r0, #0
   2ffd0:	beq	2ffe0 <myhtml_tree_node_delete@@Base+0x2c>
   2ffd4:	add	r2, r0, #12
   2ffd8:	add	r1, r4, #12
   2ffdc:	b	2fff4 <myhtml_tree_node_delete@@Base+0x40>
   2ffe0:	ldr	r2, [r4, #24]
   2ffe4:	add	r1, r4, #12
   2ffe8:	cmp	r2, #0
   2ffec:	beq	2fffc <myhtml_tree_node_delete@@Base+0x48>
   2fff0:	add	r2, r2, #28
   2fff4:	ldr	r3, [r1]
   2fff8:	str	r3, [r2]
   2fffc:	ldr	r1, [r1]
   30000:	cmp	r1, #0
   30004:	beq	30010 <myhtml_tree_node_delete@@Base+0x5c>
   30008:	add	r1, r1, #16
   3000c:	b	30020 <myhtml_tree_node_delete@@Base+0x6c>
   30010:	ldr	r1, [r4, #24]
   30014:	cmp	r1, #0
   30018:	beq	30024 <myhtml_tree_node_delete@@Base+0x70>
   3001c:	add	r1, r1, #20
   30020:	str	r0, [r1]
   30024:	ldr	r0, [r4, #40]	; 0x28
   30028:	ldr	r3, [r0, #240]	; 0xf0
   3002c:	cmp	r3, #0
   30030:	beq	30040 <myhtml_tree_node_delete@@Base+0x8c>
   30034:	ldr	r2, [r0, #248]	; 0xf8
   30038:	mov	r1, r4
   3003c:	blx	r3
   30040:	mov	r0, #0
   30044:	str	r0, [r4, #12]
   30048:	str	r0, [r4, #16]
   3004c:	str	r0, [r4, #24]
   30050:	ldr	r1, [r4, #32]
   30054:	cmp	r1, #0
   30058:	beq	30078 <myhtml_tree_node_delete@@Base+0xc4>
   3005c:	ldr	r0, [r4, #40]	; 0x28
   30060:	ldr	r0, [r0, #8]
   30064:	bl	11668 <myhtml_token_attr_delete_all@plt>
   30068:	ldr	r0, [r4, #40]	; 0x28
   3006c:	ldr	r1, [r4, #32]
   30070:	ldr	r0, [r0, #8]
   30074:	bl	11bf0 <myhtml_token_delete@plt>
   30078:	ldr	r0, [r4, #40]	; 0x28
   3007c:	mov	r1, r4
   30080:	ldr	r0, [r0, #12]
   30084:	pop	{r4, sl, fp, lr}
   30088:	b	11128 <mcobject_async_free@plt>

0003008c <myhtml_tree_node_delete_recursive@@Base>:
   3008c:	cmp	r0, #0
   30090:	bxeq	lr
   30094:	push	{r4, sl, fp, lr}
   30098:	add	fp, sp, #8
   3009c:	mov	r4, r0
   300a0:	ldr	r0, [r0, #20]
   300a4:	cmp	r0, #0
   300a8:	blne	300b8 <myhtml_tree_node_delete_recursive@@Base+0x2c>
   300ac:	mov	r0, r4
   300b0:	pop	{r4, sl, fp, lr}
   300b4:	b	2ffb4 <myhtml_tree_node_delete@@Base>
   300b8:	push	{r4, sl, fp, lr}
   300bc:	add	fp, sp, #8
   300c0:	cmp	r0, #0
   300c4:	popeq	{r4, sl, fp, pc}
   300c8:	mov	r4, r0
   300cc:	ldr	r0, [r4, #20]
   300d0:	cmp	r0, #0
   300d4:	blne	300b8 <myhtml_tree_node_delete_recursive@@Base+0x2c>
   300d8:	ldr	r4, [r4, #16]
   300dc:	mov	r0, r4
   300e0:	bl	11aac <myhtml_tree_node_delete@plt>
   300e4:	cmp	r4, #0
   300e8:	bne	300cc <myhtml_tree_node_delete_recursive@@Base+0x40>
   300ec:	pop	{r4, sl, fp, pc}

000300f0 <myhtml_tree_node_clone@@Base>:
   300f0:	push	{r4, r5, r6, r7, fp, lr}
   300f4:	add	fp, sp, #16
   300f8:	ldr	r7, [r0, #40]	; 0x28
   300fc:	mov	r5, r0
   30100:	mov	r2, #0
   30104:	mov	r6, #0
   30108:	ldr	r0, [r7, #12]
   3010c:	ldr	r1, [r7, #48]	; 0x30
   30110:	bl	1192c <mcobject_async_malloc@plt>
   30114:	mov	r4, r0
   30118:	vmov.i32	q8, #0	; 0x00000000
   3011c:	mov	r0, #36	; 0x24
   30120:	mov	r1, r4
   30124:	vst1.32	{d16-d17}, [r1], r0
   30128:	mov	r0, #1
   3012c:	str	r0, [r4, #8]
   30130:	add	r0, r4, #16
   30134:	str	r6, [r4, #32]
   30138:	str	r7, [r4, #40]	; 0x28
   3013c:	str	r6, [r1]
   30140:	vst1.32	{d16-d17}, [r0]
   30144:	ldr	r1, [r5, #32]
   30148:	cmp	r1, #0
   3014c:	beq	30160 <myhtml_tree_node_clone@@Base+0x70>
   30150:	ldr	r0, [r5, #40]	; 0x28
   30154:	ldr	r0, [r0, #8]
   30158:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   3015c:	ldr	r6, [r5, #32]
   30160:	ldr	r1, [r5, #40]	; 0x28
   30164:	ldr	r0, [r1, #8]
   30168:	ldr	r2, [r1, #40]	; 0x28
   3016c:	ldr	r3, [r1, #44]	; 0x2c
   30170:	mov	r1, r6
   30174:	bl	11038 <myhtml_token_node_clone@plt>
   30178:	str	r0, [r4, #32]
   3017c:	cmp	r0, #0
   30180:	ldr	r1, [r5, #4]
   30184:	str	r1, [r4, #4]
   30188:	ldr	r1, [r5, #8]
   3018c:	str	r1, [r4, #8]
   30190:	ldrne	r1, [r0, #48]	; 0x30
   30194:	orrne	r1, r1, #4
   30198:	strne	r1, [r0, #48]	; 0x30
   3019c:	mov	r0, r4
   301a0:	pop	{r4, r5, r6, r7, fp, pc}

000301a4 <myhtml_tree_node_insert_by_mode@@Base>:
   301a4:	cmp	r2, #1
   301a8:	beq	301e8 <myhtml_tree_node_insert_by_mode@@Base+0x44>
   301ac:	cmp	r2, #0
   301b0:	bne	30204 <myhtml_tree_node_insert_by_mode@@Base+0x60>
   301b4:	ldr	r2, [r0, #28]
   301b8:	cmp	r2, #0
   301bc:	streq	r1, [r0, #20]
   301c0:	strne	r1, [r2, #16]
   301c4:	strne	r2, [r1, #12]
   301c8:	str	r0, [r1, #24]
   301cc:	str	r1, [r0, #28]
   301d0:	ldr	r0, [r1, #40]	; 0x28
   301d4:	ldr	r3, [r0, #236]	; 0xec
   301d8:	cmp	r3, #0
   301dc:	beq	30278 <myhtml_tree_node_insert_by_mode@@Base+0xd4>
   301e0:	ldr	r2, [r0, #244]	; 0xf4
   301e4:	bx	r3
   301e8:	ldr	r2, [r0, #12]
   301ec:	cmp	r2, #0
   301f0:	beq	30220 <myhtml_tree_node_insert_by_mode@@Base+0x7c>
   301f4:	str	r1, [r2, #16]
   301f8:	str	r2, [r1, #12]
   301fc:	ldr	r2, [r0, #24]
   30200:	b	30228 <myhtml_tree_node_insert_by_mode@@Base+0x84>
   30204:	ldr	r2, [r0, #16]
   30208:	cmp	r2, #0
   3020c:	beq	3024c <myhtml_tree_node_insert_by_mode@@Base+0xa8>
   30210:	str	r1, [r2, #12]
   30214:	str	r2, [r1, #16]
   30218:	ldr	r2, [r0, #24]
   3021c:	b	30254 <myhtml_tree_node_insert_by_mode@@Base+0xb0>
   30220:	ldr	r2, [r0, #24]
   30224:	str	r1, [r2, #20]
   30228:	str	r0, [r1, #16]
   3022c:	str	r2, [r1, #24]
   30230:	str	r1, [r0, #12]
   30234:	ldr	r0, [r1, #40]	; 0x28
   30238:	ldr	r3, [r0, #236]	; 0xec
   3023c:	cmp	r3, #0
   30240:	bxeq	lr
   30244:	ldr	r2, [r0, #244]	; 0xf4
   30248:	bx	r3
   3024c:	ldr	r2, [r0, #24]
   30250:	str	r1, [r2, #28]
   30254:	str	r0, [r1, #12]
   30258:	str	r2, [r1, #24]
   3025c:	str	r1, [r0, #16]
   30260:	ldr	r0, [r1, #40]	; 0x28
   30264:	ldr	r3, [r0, #236]	; 0xec
   30268:	cmp	r3, #0
   3026c:	beq	30278 <myhtml_tree_node_insert_by_mode@@Base+0xd4>
   30270:	ldr	r2, [r0, #244]	; 0xf4
   30274:	bx	r3
   30278:	bx	lr

0003027c <myhtml_tree_node_insert_by_token@@Base>:
   3027c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30280:	add	fp, sp, #24
   30284:	sub	sp, sp, #8
   30288:	mov	r5, r0
   3028c:	mov	r7, r1
   30290:	ldr	r0, [r0, #12]
   30294:	mov	r6, r2
   30298:	mov	r2, #0
   3029c:	mov	r8, #0
   302a0:	ldr	r1, [r5, #48]	; 0x30
   302a4:	bl	1192c <mcobject_async_malloc@plt>
   302a8:	mov	r4, r0
   302ac:	str	r8, [r0, #32]
   302b0:	str	r5, [r0, #40]	; 0x28
   302b4:	vmov.i32	q8, #0	; 0x00000000
   302b8:	mov	r0, #36	; 0x24
   302bc:	add	r2, sp, #4
   302c0:	mov	r1, r4
   302c4:	vst1.32	{d16-d17}, [r1], r0
   302c8:	add	r0, r4, #16
   302cc:	str	r8, [r1]
   302d0:	vst1.32	{d16-d17}, [r0]
   302d4:	mov	r1, #0
   302d8:	ldr	r0, [r7]
   302dc:	str	r7, [r4, #32]
   302e0:	stmib	r4, {r0, r6}
   302e4:	mov	r0, r5
   302e8:	bl	11b30 <myhtml_tree_appropriate_place_inserting@plt>
   302ec:	ldr	r2, [sp, #4]
   302f0:	mov	r1, r4
   302f4:	bl	11320 <myhtml_tree_node_insert_by_mode@plt>
   302f8:	ldr	r5, [r5, #128]	; 0x80
   302fc:	ldr	r1, [r5, #8]
   30300:	ldr	r0, [r5, #4]
   30304:	cmp	r0, r1
   30308:	bcc	30328 <myhtml_tree_node_insert_by_token@@Base+0xac>
   3030c:	lsl	r0, r1, #1
   30310:	lsl	r1, r1, #3
   30314:	str	r0, [r5, #8]
   30318:	ldr	r0, [r5]
   3031c:	bl	10db0 <mycore_realloc@plt>
   30320:	cmp	r0, #0
   30324:	strne	r0, [r5]
   30328:	ldr	r0, [r5]
   3032c:	ldr	r1, [r5, #4]
   30330:	str	r4, [r0, r1, lsl #2]
   30334:	ldr	r0, [r5, #4]
   30338:	add	r0, r0, #1
   3033c:	str	r0, [r5, #4]
   30340:	mov	r0, r4
   30344:	sub	sp, fp, #24
   30348:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0003034c <myhtml_tree_appropriate_place_inserting@@Base>:
   3034c:	mov	r3, #0
   30350:	cmp	r1, #0
   30354:	str	r3, [r2]
   30358:	bne	3037c <myhtml_tree_appropriate_place_inserting@@Base+0x30>
   3035c:	ldr	r3, [r0, #128]	; 0x80
   30360:	ldr	r1, [r3, #4]
   30364:	cmp	r1, #0
   30368:	mov	r1, #0
   3036c:	ldrne	r1, [r3]
   30370:	ldrne	r3, [r3, #4]
   30374:	addne	r1, r1, r3, lsl #2
   30378:	ldrne	r1, [r1, #-4]
   3037c:	push	{r4, sl, fp, lr}
   30380:	add	fp, sp, #8
   30384:	ldrb	r3, [r0, #188]	; 0xbc
   30388:	cmp	r3, #0
   3038c:	beq	3045c <myhtml_tree_appropriate_place_inserting@@Base+0x110>
   30390:	ldr	r3, [r1, #8]
   30394:	cmp	r3, #1
   30398:	bne	3045c <myhtml_tree_appropriate_place_inserting@@Base+0x110>
   3039c:	ldr	r3, [r1, #4]
   303a0:	sub	lr, r3, #125	; 0x7d
   303a4:	cmp	lr, #10
   303a8:	bhi	3045c <myhtml_tree_appropriate_place_inserting@@Base+0x110>
   303ac:	mov	ip, #1
   303b0:	movw	r3, #1187	; 0x4a3
   303b4:	tst	r3, ip, lsl lr
   303b8:	beq	3045c <myhtml_tree_appropriate_place_inserting@@Base+0x110>
   303bc:	ldr	r3, [r0, #128]	; 0x80
   303c0:	mov	lr, #0
   303c4:	ldr	r0, [r3, #4]
   303c8:	ldr	ip, [r3]
   303cc:	cmp	r0, #0
   303d0:	beq	30404 <myhtml_tree_appropriate_place_inserting@@Base+0xb8>
   303d4:	sub	r0, r0, #1
   303d8:	ldr	r1, [ip, r0, lsl #2]
   303dc:	ldr	r4, [r1, #4]
   303e0:	cmp	r4, #128	; 0x80
   303e4:	ldreq	r4, [r1, #8]
   303e8:	cmpeq	r4, #1
   303ec:	beq	30408 <myhtml_tree_appropriate_place_inserting@@Base+0xbc>
   303f0:	sub	r0, r0, #1
   303f4:	cmn	r0, #1
   303f8:	bne	303d8 <myhtml_tree_appropriate_place_inserting@@Base+0x8c>
   303fc:	mov	r0, #0
   30400:	b	30404 <myhtml_tree_appropriate_place_inserting@@Base+0xb8>
   30404:	mov	r1, #0
   30408:	ldr	r3, [r3, #4]
   3040c:	cmp	r3, #0
   30410:	beq	30464 <myhtml_tree_appropriate_place_inserting@@Base+0x118>
   30414:	sub	r3, r3, #1
   30418:	ldr	lr, [ip, r3, lsl #2]
   3041c:	ldr	r4, [lr, #4]
   30420:	cmp	r4, #125	; 0x7d
   30424:	ldreq	r4, [lr, #8]
   30428:	cmpeq	r4, #1
   3042c:	beq	30444 <myhtml_tree_appropriate_place_inserting@@Base+0xf8>
   30430:	sub	r3, r3, #1
   30434:	cmn	r3, #1
   30438:	bne	30418 <myhtml_tree_appropriate_place_inserting@@Base+0xcc>
   3043c:	mov	r3, #0
   30440:	mov	lr, #0
   30444:	cmp	r1, #0
   30448:	beq	3046c <myhtml_tree_appropriate_place_inserting@@Base+0x120>
   3044c:	cmp	r0, r3
   30450:	bhi	3045c <myhtml_tree_appropriate_place_inserting@@Base+0x110>
   30454:	cmp	lr, #0
   30458:	bne	3047c <myhtml_tree_appropriate_place_inserting@@Base+0x130>
   3045c:	mov	r0, r1
   30460:	pop	{r4, sl, fp, pc}
   30464:	cmp	r1, #0
   30468:	bne	3044c <myhtml_tree_appropriate_place_inserting@@Base+0x100>
   3046c:	cmp	lr, #0
   30470:	ldreq	r1, [ip]
   30474:	moveq	r0, r1
   30478:	popeq	{r4, sl, fp, pc}
   3047c:	ldr	r0, [lr, #24]
   30480:	cmp	r0, #0
   30484:	beq	304a8 <myhtml_tree_appropriate_place_inserting@@Base+0x15c>
   30488:	ldr	r1, [lr, #12]
   3048c:	mov	r0, #2
   30490:	cmp	r1, #0
   30494:	movweq	r0, #1
   30498:	moveq	r1, lr
   3049c:	str	r0, [r2]
   304a0:	mov	r0, r1
   304a4:	pop	{r4, sl, fp, pc}
   304a8:	add	r0, ip, r3, lsl #2
   304ac:	ldr	r1, [r0, #-4]
   304b0:	mov	r0, r1
   304b4:	pop	{r4, sl, fp, pc}

000304b8 <myhtml_tree_open_elements_append@@Base>:
   304b8:	push	{r4, r5, fp, lr}
   304bc:	add	fp, sp, #8
   304c0:	ldr	r5, [r0, #128]	; 0x80
   304c4:	mov	r4, r1
   304c8:	ldr	r1, [r5, #8]
   304cc:	ldr	r0, [r5, #4]
   304d0:	cmp	r0, r1
   304d4:	bcc	304f4 <myhtml_tree_open_elements_append@@Base+0x3c>
   304d8:	lsl	r0, r1, #1
   304dc:	lsl	r1, r1, #3
   304e0:	str	r0, [r5, #8]
   304e4:	ldr	r0, [r5]
   304e8:	bl	10db0 <mycore_realloc@plt>
   304ec:	cmp	r0, #0
   304f0:	strne	r0, [r5]
   304f4:	ldr	r0, [r5]
   304f8:	ldr	r1, [r5, #4]
   304fc:	str	r4, [r0, r1, lsl #2]
   30500:	ldr	r0, [r5, #4]
   30504:	add	r0, r0, #1
   30508:	str	r0, [r5, #4]
   3050c:	pop	{r4, r5, fp, pc}

00030510 <myhtml_tree_node_insert@@Base>:
   30510:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30514:	add	fp, sp, #24
   30518:	sub	sp, sp, #8
   3051c:	mov	r5, r0
   30520:	mov	r7, r1
   30524:	ldr	r0, [r0, #12]
   30528:	mov	r6, r2
   3052c:	mov	r2, #0
   30530:	mov	r8, #0
   30534:	ldr	r1, [r5, #48]	; 0x30
   30538:	bl	1192c <mcobject_async_malloc@plt>
   3053c:	mov	r4, r0
   30540:	vmov.i32	q8, #0	; 0x00000000
   30544:	mov	r0, #36	; 0x24
   30548:	add	r2, sp, #4
   3054c:	mov	r1, r4
   30550:	vst1.32	{d16-d17}, [r1], r0
   30554:	add	r0, r4, #16
   30558:	str	r7, [r4, #4]
   3055c:	str	r6, [r4, #8]
   30560:	str	r8, [r4, #32]
   30564:	str	r5, [r4, #40]	; 0x28
   30568:	vst1.32	{d16-d17}, [r0]
   3056c:	str	r8, [r1]
   30570:	mov	r0, r5
   30574:	mov	r1, #0
   30578:	bl	11b30 <myhtml_tree_appropriate_place_inserting@plt>
   3057c:	ldr	r2, [sp, #4]
   30580:	mov	r1, r4
   30584:	bl	11320 <myhtml_tree_node_insert_by_mode@plt>
   30588:	ldr	r5, [r5, #128]	; 0x80
   3058c:	ldr	r1, [r5, #8]
   30590:	ldr	r0, [r5, #4]
   30594:	cmp	r0, r1
   30598:	bcc	305b8 <myhtml_tree_node_insert@@Base+0xa8>
   3059c:	lsl	r0, r1, #1
   305a0:	lsl	r1, r1, #3
   305a4:	str	r0, [r5, #8]
   305a8:	ldr	r0, [r5]
   305ac:	bl	10db0 <mycore_realloc@plt>
   305b0:	cmp	r0, #0
   305b4:	strne	r0, [r5]
   305b8:	ldr	r0, [r5]
   305bc:	ldr	r1, [r5, #4]
   305c0:	str	r4, [r0, r1, lsl #2]
   305c4:	ldr	r0, [r5, #4]
   305c8:	add	r0, r0, #1
   305cc:	str	r0, [r5, #4]
   305d0:	mov	r0, r4
   305d4:	sub	sp, fp, #24
   305d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000305dc <myhtml_tree_node_insert_comment@@Base>:
   305dc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   305e0:	add	fp, sp, #24
   305e4:	sub	sp, sp, #8
   305e8:	mov	r7, r0
   305ec:	mov	r8, r1
   305f0:	ldr	r0, [r0, #12]
   305f4:	mov	r4, r2
   305f8:	mov	r2, #0
   305fc:	mov	r6, #0
   30600:	ldr	r1, [r7, #48]	; 0x30
   30604:	bl	1192c <mcobject_async_malloc@plt>
   30608:	mov	r5, r0
   3060c:	vmov.i32	q8, #0	; 0x00000000
   30610:	mov	r0, #36	; 0x24
   30614:	mov	r2, #2
   30618:	cmp	r4, #0
   3061c:	mov	r1, r5
   30620:	vst1.32	{d16-d17}, [r1], r0
   30624:	mov	r0, #1
   30628:	str	r2, [r5, #4]
   3062c:	str	r0, [r5, #8]
   30630:	add	r0, r5, #16
   30634:	str	r8, [r5, #32]
   30638:	str	r7, [r5, #40]	; 0x28
   3063c:	str	r6, [r1]
   30640:	vst1.32	{d16-d17}, [r0]
   30644:	str	r6, [sp, #4]
   30648:	bne	30664 <myhtml_tree_node_insert_comment@@Base+0x88>
   3064c:	add	r2, sp, #4
   30650:	mov	r0, r7
   30654:	mov	r1, #0
   30658:	bl	11b30 <myhtml_tree_appropriate_place_inserting@plt>
   3065c:	ldr	r6, [sp, #4]
   30660:	mov	r4, r0
   30664:	mov	r0, r4
   30668:	mov	r1, r5
   3066c:	mov	r2, r6
   30670:	bl	11320 <myhtml_tree_node_insert_by_mode@plt>
   30674:	ldr	r0, [r4, #8]
   30678:	str	r0, [r5, #8]
   3067c:	mov	r0, r5
   30680:	sub	sp, fp, #24
   30684:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00030688 <myhtml_tree_node_insert_doctype@@Base>:
   30688:	push	{r4, r5, r6, r7, fp, lr}
   3068c:	add	fp, sp, #16
   30690:	mov	r4, r0
   30694:	mov	r6, r1
   30698:	ldr	r0, [r0, #12]
   3069c:	mov	r2, #0
   306a0:	mov	r7, #0
   306a4:	ldr	r1, [r4, #48]	; 0x30
   306a8:	bl	1192c <mcobject_async_malloc@plt>
   306ac:	mov	r5, r0
   306b0:	vmov.i32	q8, #0	; 0x00000000
   306b4:	mov	r0, #36	; 0x24
   306b8:	mov	r2, #3
   306bc:	mov	r1, r5
   306c0:	vst1.32	{d16-d17}, [r1], r0
   306c4:	mov	r0, #1
   306c8:	str	r2, [r5, #4]
   306cc:	str	r0, [r5, #8]
   306d0:	add	r0, r5, #16
   306d4:	str	r6, [r5, #32]
   306d8:	str	r4, [r5, #40]	; 0x28
   306dc:	str	r7, [r1]
   306e0:	vst1.32	{d16-d17}, [r0]
   306e4:	ldr	r0, [r4, #84]	; 0x54
   306e8:	ldr	r1, [r0, #28]
   306ec:	cmp	r1, #0
   306f0:	streq	r5, [r0, #20]
   306f4:	strne	r5, [r1, #16]
   306f8:	strne	r1, [r5, #12]
   306fc:	str	r0, [r5, #24]
   30700:	str	r5, [r0, #28]
   30704:	ldr	r3, [r4, #236]	; 0xec
   30708:	cmp	r3, #0
   3070c:	beq	30720 <myhtml_tree_node_insert_doctype@@Base+0x98>
   30710:	ldr	r2, [r4, #244]	; 0xf4
   30714:	mov	r0, r4
   30718:	mov	r1, r5
   3071c:	blx	r3
   30720:	mov	r0, r5
   30724:	pop	{r4, r5, r6, r7, fp, pc}

00030728 <myhtml_tree_node_insert_root@@Base>:
   30728:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3072c:	add	fp, sp, #24
   30730:	mov	r4, r0
   30734:	mov	r7, r1
   30738:	ldr	r0, [r0, #12]
   3073c:	mov	r8, r2
   30740:	mov	r2, #0
   30744:	mov	r6, #0
   30748:	ldr	r1, [r4, #48]	; 0x30
   3074c:	bl	1192c <mcobject_async_malloc@plt>
   30750:	mov	r5, r0
   30754:	str	r6, [r0, #32]
   30758:	str	r4, [r0, #40]	; 0x28
   3075c:	vmov.i32	q8, #0	; 0x00000000
   30760:	mov	r0, #36	; 0x24
   30764:	cmp	r7, #0
   30768:	mov	r1, r5
   3076c:	vst1.32	{d16-d17}, [r1], r0
   30770:	mov	r0, #1
   30774:	str	r0, [r5, #8]
   30778:	add	r0, r5, #16
   3077c:	str	r6, [r1]
   30780:	vst1.32	{d16-d17}, [r0]
   30784:	ldrne	r0, [r7]
   30788:	str	r7, [r5, #32]
   3078c:	moveq	r0, #65	; 0x41
   30790:	stmib	r5, {r0, r8}
   30794:	ldr	r0, [r4, #84]	; 0x54
   30798:	ldr	r1, [r0, #28]
   3079c:	cmp	r1, #0
   307a0:	streq	r5, [r0, #20]
   307a4:	strne	r5, [r1, #16]
   307a8:	strne	r1, [r5, #12]
   307ac:	str	r0, [r5, #24]
   307b0:	str	r5, [r0, #28]
   307b4:	ldr	r3, [r4, #236]	; 0xec
   307b8:	cmp	r3, #0
   307bc:	beq	307d0 <myhtml_tree_node_insert_root@@Base+0xa8>
   307c0:	ldr	r2, [r4, #244]	; 0xf4
   307c4:	mov	r0, r4
   307c8:	mov	r1, r5
   307cc:	blx	r3
   307d0:	ldr	r6, [r4, #128]	; 0x80
   307d4:	ldr	r1, [r6, #8]
   307d8:	ldr	r0, [r6, #4]
   307dc:	cmp	r0, r1
   307e0:	bcc	30800 <myhtml_tree_node_insert_root@@Base+0xd8>
   307e4:	lsl	r0, r1, #1
   307e8:	lsl	r1, r1, #3
   307ec:	str	r0, [r6, #8]
   307f0:	ldr	r0, [r6]
   307f4:	bl	10db0 <mycore_realloc@plt>
   307f8:	cmp	r0, #0
   307fc:	strne	r0, [r6]
   30800:	ldr	r0, [r6]
   30804:	ldr	r1, [r6, #4]
   30808:	str	r5, [r0, r1, lsl #2]
   3080c:	ldr	r0, [r6, #4]
   30810:	add	r0, r0, #1
   30814:	str	r0, [r6, #4]
   30818:	mov	r0, r5
   3081c:	str	r5, [r4, #96]	; 0x60
   30820:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00030824 <myhtml_tree_node_insert_text@@Base>:
   30824:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   30828:	add	fp, sp, #24
   3082c:	sub	sp, sp, #8
   30830:	mov	r8, r1
   30834:	add	r2, sp, #4
   30838:	mov	r1, #0
   3083c:	mov	r6, r0
   30840:	mov	r4, #0
   30844:	bl	11b30 <myhtml_tree_appropriate_place_inserting@plt>
   30848:	mov	r5, r0
   3084c:	ldr	r0, [r6, #84]	; 0x54
   30850:	cmp	r5, r0
   30854:	beq	30960 <myhtml_tree_node_insert_text@@Base+0x13c>
   30858:	ldr	r7, [sp, #4]
   3085c:	cmp	r7, #1
   30860:	beq	30894 <myhtml_tree_node_insert_text@@Base+0x70>
   30864:	cmp	r7, #2
   30868:	bne	308c4 <myhtml_tree_node_insert_text@@Base+0xa0>
   3086c:	ldr	r0, [r5, #4]
   30870:	cmp	r0, #1
   30874:	bne	30900 <myhtml_tree_node_insert_text@@Base+0xdc>
   30878:	ldr	r1, [r5, #32]
   3087c:	cmp	r1, #0
   30880:	beq	30900 <myhtml_tree_node_insert_text@@Base+0xdc>
   30884:	mov	r0, r6
   30888:	mov	r2, r8
   3088c:	mov	r3, #0
   30890:	b	308b8 <myhtml_tree_node_insert_text@@Base+0x94>
   30894:	ldr	r0, [r5, #4]
   30898:	cmp	r0, #1
   3089c:	bne	30900 <myhtml_tree_node_insert_text@@Base+0xdc>
   308a0:	ldr	r2, [r5, #32]
   308a4:	cmp	r2, #0
   308a8:	beq	30900 <myhtml_tree_node_insert_text@@Base+0xdc>
   308ac:	mov	r0, r6
   308b0:	mov	r1, r8
   308b4:	mov	r3, #1
   308b8:	bl	11404 <myhtml_token_merged_two_token_string@plt>
   308bc:	mov	r4, r5
   308c0:	b	30960 <myhtml_tree_node_insert_text@@Base+0x13c>
   308c4:	ldr	r0, [r5, #28]
   308c8:	cmp	r0, #0
   308cc:	beq	30900 <myhtml_tree_node_insert_text@@Base+0xdc>
   308d0:	ldr	r1, [r0, #4]
   308d4:	cmp	r1, #1
   308d8:	bne	30900 <myhtml_tree_node_insert_text@@Base+0xdc>
   308dc:	ldr	r1, [r0, #32]
   308e0:	cmp	r1, #0
   308e4:	beq	30900 <myhtml_tree_node_insert_text@@Base+0xdc>
   308e8:	mov	r0, r6
   308ec:	mov	r2, r8
   308f0:	mov	r3, #0
   308f4:	bl	11404 <myhtml_token_merged_two_token_string@plt>
   308f8:	ldr	r4, [r5, #28]
   308fc:	b	30960 <myhtml_tree_node_insert_text@@Base+0x13c>
   30900:	ldr	r0, [r6, #12]
   30904:	ldr	r1, [r6, #48]	; 0x30
   30908:	mov	r2, #0
   3090c:	mov	r9, #0
   30910:	bl	1192c <mcobject_async_malloc@plt>
   30914:	mov	r4, r0
   30918:	vmov.i32	q8, #0	; 0x00000000
   3091c:	mov	r0, #36	; 0x24
   30920:	mov	r2, r7
   30924:	mov	r1, r4
   30928:	vst1.32	{d16-d17}, [r1], r0
   3092c:	mov	r0, #1
   30930:	str	r0, [r4, #4]
   30934:	str	r0, [r4, #8]
   30938:	add	r0, r4, #16
   3093c:	str	r8, [r4, #32]
   30940:	str	r6, [r4, #40]	; 0x28
   30944:	str	r9, [r1]
   30948:	mov	r1, r4
   3094c:	vst1.32	{d16-d17}, [r0]
   30950:	ldr	r0, [r5, #8]
   30954:	str	r0, [r4, #8]
   30958:	mov	r0, r5
   3095c:	bl	11320 <myhtml_tree_node_insert_by_mode@plt>
   30960:	mov	r0, r4
   30964:	sub	sp, fp, #24
   30968:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0003096c <myhtml_tree_node_insert_by_node@@Base>:
   3096c:	push	{r4, r5, fp, lr}
   30970:	add	fp, sp, #8
   30974:	sub	sp, sp, #8
   30978:	mov	r4, r1
   3097c:	add	r2, sp, #4
   30980:	mov	r1, #0
   30984:	mov	r5, r0
   30988:	bl	11b30 <myhtml_tree_appropriate_place_inserting@plt>
   3098c:	ldr	r2, [sp, #4]
   30990:	mov	r1, r4
   30994:	bl	11320 <myhtml_tree_node_insert_by_mode@plt>
   30998:	ldr	r5, [r5, #128]	; 0x80
   3099c:	ldr	r1, [r5, #8]
   309a0:	ldr	r0, [r5, #4]
   309a4:	cmp	r0, r1
   309a8:	bcc	309c8 <myhtml_tree_node_insert_by_node@@Base+0x5c>
   309ac:	lsl	r0, r1, #1
   309b0:	lsl	r1, r1, #3
   309b4:	str	r0, [r5, #8]
   309b8:	ldr	r0, [r5]
   309bc:	bl	10db0 <mycore_realloc@plt>
   309c0:	cmp	r0, #0
   309c4:	strne	r0, [r5]
   309c8:	ldr	r0, [r5]
   309cc:	ldr	r1, [r5, #4]
   309d0:	str	r4, [r0, r1, lsl #2]
   309d4:	ldr	r0, [r5, #4]
   309d8:	add	r0, r0, #1
   309dc:	str	r0, [r5, #4]
   309e0:	mov	r0, r4
   309e4:	sub	sp, fp, #8
   309e8:	pop	{r4, r5, fp, pc}

000309ec <myhtml_tree_node_insert_foreign_element@@Base>:
   309ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   309f0:	add	fp, sp, #24
   309f4:	sub	sp, sp, #8
   309f8:	mov	r6, r1
   309fc:	add	r2, sp, #4
   30a00:	mov	r1, #0
   30a04:	mov	r5, r0
   30a08:	mov	r8, #0
   30a0c:	bl	11b30 <myhtml_tree_appropriate_place_inserting@plt>
   30a10:	mov	r7, r0
   30a14:	ldr	r0, [r5, #12]
   30a18:	ldr	r1, [r5, #48]	; 0x30
   30a1c:	mov	r2, #0
   30a20:	bl	1192c <mcobject_async_malloc@plt>
   30a24:	mov	r4, r0
   30a28:	str	r8, [r0, #32]
   30a2c:	str	r5, [r0, #40]	; 0x28
   30a30:	vmov.i32	q8, #0	; 0x00000000
   30a34:	mov	r0, #36	; 0x24
   30a38:	mov	r1, r4
   30a3c:	vst1.32	{d16-d17}, [r1], r0
   30a40:	mov	r0, #1
   30a44:	str	r0, [r4, #8]
   30a48:	add	r0, r4, #16
   30a4c:	str	r8, [r1]
   30a50:	mov	r1, r4
   30a54:	vst1.32	{d16-d17}, [r0]
   30a58:	ldr	r0, [r6]
   30a5c:	str	r0, [r4, #4]
   30a60:	str	r6, [r4, #32]
   30a64:	ldr	r0, [r7, #8]
   30a68:	str	r0, [r4, #8]
   30a6c:	mov	r0, r7
   30a70:	ldr	r2, [sp, #4]
   30a74:	bl	11320 <myhtml_tree_node_insert_by_mode@plt>
   30a78:	ldr	r5, [r5, #128]	; 0x80
   30a7c:	ldr	r1, [r5, #8]
   30a80:	ldr	r0, [r5, #4]
   30a84:	cmp	r0, r1
   30a88:	bcc	30aa8 <myhtml_tree_node_insert_foreign_element@@Base+0xbc>
   30a8c:	lsl	r0, r1, #1
   30a90:	lsl	r1, r1, #3
   30a94:	str	r0, [r5, #8]
   30a98:	ldr	r0, [r5]
   30a9c:	bl	10db0 <mycore_realloc@plt>
   30aa0:	cmp	r0, #0
   30aa4:	strne	r0, [r5]
   30aa8:	ldr	r0, [r5]
   30aac:	ldr	r1, [r5, #4]
   30ab0:	str	r4, [r0, r1, lsl #2]
   30ab4:	ldr	r0, [r5, #4]
   30ab8:	add	r0, r0, #1
   30abc:	str	r0, [r5, #4]
   30ac0:	mov	r0, r4
   30ac4:	sub	sp, fp, #24
   30ac8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00030acc <myhtml_tree_node_insert_html_element@@Base>:
   30acc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30ad0:	add	fp, sp, #24
   30ad4:	sub	sp, sp, #8
   30ad8:	mov	r6, r1
   30adc:	add	r2, sp, #4
   30ae0:	mov	r1, #0
   30ae4:	mov	r5, r0
   30ae8:	mov	r8, #0
   30aec:	bl	11b30 <myhtml_tree_appropriate_place_inserting@plt>
   30af0:	mov	r7, r0
   30af4:	ldr	r0, [r5, #12]
   30af8:	ldr	r1, [r5, #48]	; 0x30
   30afc:	mov	r2, #0
   30b00:	bl	1192c <mcobject_async_malloc@plt>
   30b04:	mov	r4, r0
   30b08:	str	r8, [r0, #32]
   30b0c:	str	r5, [r0, #40]	; 0x28
   30b10:	vmov.i32	q8, #0	; 0x00000000
   30b14:	mov	r0, #36	; 0x24
   30b18:	mov	r1, r4
   30b1c:	vst1.32	{d16-d17}, [r1], r0
   30b20:	add	r0, r4, #16
   30b24:	str	r8, [r1]
   30b28:	vst1.32	{d16-d17}, [r0]
   30b2c:	mov	r1, #1
   30b30:	ldr	r0, [r6]
   30b34:	str	r6, [r4, #32]
   30b38:	stmib	r4, {r0, r1}
   30b3c:	mov	r0, r7
   30b40:	mov	r1, r4
   30b44:	ldr	r2, [sp, #4]
   30b48:	bl	11320 <myhtml_tree_node_insert_by_mode@plt>
   30b4c:	ldr	r5, [r5, #128]	; 0x80
   30b50:	ldr	r1, [r5, #8]
   30b54:	ldr	r0, [r5, #4]
   30b58:	cmp	r0, r1
   30b5c:	bcc	30b7c <myhtml_tree_node_insert_html_element@@Base+0xb0>
   30b60:	lsl	r0, r1, #1
   30b64:	lsl	r1, r1, #3
   30b68:	str	r0, [r5, #8]
   30b6c:	ldr	r0, [r5]
   30b70:	bl	10db0 <mycore_realloc@plt>
   30b74:	cmp	r0, #0
   30b78:	strne	r0, [r5]
   30b7c:	ldr	r0, [r5]
   30b80:	ldr	r1, [r5, #4]
   30b84:	str	r4, [r0, r1, lsl #2]
   30b88:	ldr	r0, [r5, #4]
   30b8c:	add	r0, r0, #1
   30b90:	str	r0, [r5, #4]
   30b94:	mov	r0, r4
   30b98:	sub	sp, fp, #24
   30b9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00030ba0 <myhtml_tree_element_in_scope@@Base>:
   30ba0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   30ba4:	add	fp, sp, #24
   30ba8:	mov	r9, r1
   30bac:	ldr	r1, [r0, #128]	; 0x80
   30bb0:	mov	r7, r0
   30bb4:	ldr	r0, [r1, #4]
   30bb8:	cmp	r0, #0
   30bbc:	beq	30c48 <myhtml_tree_element_in_scope@@Base+0xa8>
   30bc0:	ldr	r5, [r1]
   30bc4:	mov	r4, r3
   30bc8:	mov	r8, r2
   30bcc:	rsb	r6, r0, #1
   30bd0:	b	30bd8 <myhtml_tree_element_in_scope@@Base+0x38>
   30bd4:	add	r6, r6, #1
   30bd8:	ldr	r0, [r5, -r6, lsl #2]
   30bdc:	ldr	r1, [r0, #4]
   30be0:	ldr	r0, [r7, #28]
   30be4:	bl	11818 <myhtml_tag_get_by_id@plt>
   30be8:	mov	r1, r0
   30bec:	ldr	r0, [r5, -r6, lsl #2]
   30bf0:	ldr	r2, [r0, #4]
   30bf4:	cmp	r2, r9
   30bf8:	bne	30c10 <myhtml_tree_element_in_scope@@Base+0x70>
   30bfc:	cmp	r8, #0
   30c00:	ldrne	r2, [r0, #8]
   30c04:	cmpne	r2, r8
   30c08:	beq	30c4c <myhtml_tree_element_in_scope@@Base+0xac>
   30c0c:	b	30c14 <myhtml_tree_element_in_scope@@Base+0x74>
   30c10:	ldr	r2, [r0, #8]
   30c14:	add	r0, r1, r2, lsl #2
   30c18:	cmp	r4, #128	; 0x80
   30c1c:	ldr	r0, [r0, #16]
   30c20:	and	r0, r0, r4
   30c24:	bne	30c38 <myhtml_tree_element_in_scope@@Base+0x98>
   30c28:	cmp	r0, #0
   30c2c:	cmpne	r6, #0
   30c30:	beq	30c48 <myhtml_tree_element_in_scope@@Base+0xa8>
   30c34:	b	30bd4 <myhtml_tree_element_in_scope@@Base+0x34>
   30c38:	cmp	r6, #0
   30c3c:	beq	30c48 <myhtml_tree_element_in_scope@@Base+0xa8>
   30c40:	cmp	r0, #0
   30c44:	beq	30bd4 <myhtml_tree_element_in_scope@@Base+0x34>
   30c48:	mov	r0, #0
   30c4c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00030c50 <myhtml_tree_element_in_scope_by_node@@Base>:
   30c50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30c54:	add	fp, sp, #28
   30c58:	sub	sp, sp, #4
   30c5c:	ldr	r7, [r0, #40]	; 0x28
   30c60:	mov	r9, r0
   30c64:	mov	r8, #0
   30c68:	ldr	r0, [r7, #128]	; 0x80
   30c6c:	ldr	r4, [r0, #4]
   30c70:	cmp	r4, #0
   30c74:	beq	30d04 <myhtml_tree_element_in_scope_by_node@@Base+0xb4>
   30c78:	ldr	sl, [r0]
   30c7c:	mov	r5, r1
   30c80:	add	r6, sl, r4, lsl #2
   30c84:	ldr	r0, [r6, #-4]
   30c88:	ldr	r1, [r0, #4]
   30c8c:	ldr	r0, [r7, #28]
   30c90:	bl	11818 <myhtml_tag_get_by_id@plt>
   30c94:	ldr	r1, [r6, #-4]
   30c98:	cmp	r1, r9
   30c9c:	beq	30d00 <myhtml_tree_element_in_scope_by_node@@Base+0xb0>
   30ca0:	sub	r6, sl, #8
   30ca4:	ldr	r1, [r1, #8]
   30ca8:	cmp	r5, #128	; 0x80
   30cac:	add	r0, r0, r1, lsl #2
   30cb0:	ldr	r0, [r0, #16]
   30cb4:	and	r0, r0, r5
   30cb8:	bne	30cd0 <myhtml_tree_element_in_scope_by_node@@Base+0x80>
   30cbc:	cmp	r0, #0
   30cc0:	beq	30d04 <myhtml_tree_element_in_scope_by_node@@Base+0xb4>
   30cc4:	cmp	r4, #1
   30cc8:	bne	30ce0 <myhtml_tree_element_in_scope_by_node@@Base+0x90>
   30ccc:	b	30d04 <myhtml_tree_element_in_scope_by_node@@Base+0xb4>
   30cd0:	cmp	r4, #1
   30cd4:	beq	30d04 <myhtml_tree_element_in_scope_by_node@@Base+0xb4>
   30cd8:	cmp	r0, #0
   30cdc:	bne	30d04 <myhtml_tree_element_in_scope_by_node@@Base+0xb4>
   30ce0:	ldr	r0, [r6, r4, lsl #2]
   30ce4:	ldr	r1, [r0, #4]
   30ce8:	ldr	r0, [r7, #28]
   30cec:	bl	11818 <myhtml_tag_get_by_id@plt>
   30cf0:	ldr	r1, [r6, r4, lsl #2]
   30cf4:	sub	r4, r4, #1
   30cf8:	cmp	r1, r9
   30cfc:	bne	30ca4 <myhtml_tree_element_in_scope_by_node@@Base+0x54>
   30d00:	mov	r8, #1
   30d04:	mov	r0, r8
   30d08:	sub	sp, fp, #28
   30d0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00030d10 <myhtml_tree_list_append@@Base>:
   30d10:	push	{r4, r5, fp, lr}
   30d14:	add	fp, sp, #8
   30d18:	mov	r4, r0
   30d1c:	mov	r5, r1
   30d20:	ldr	r0, [r0, #4]
   30d24:	ldr	r1, [r4, #8]
   30d28:	cmp	r0, r1
   30d2c:	bcc	30d4c <myhtml_tree_list_append@@Base+0x3c>
   30d30:	lsl	r0, r1, #1
   30d34:	lsl	r1, r1, #3
   30d38:	str	r0, [r4, #8]
   30d3c:	ldr	r0, [r4]
   30d40:	bl	10db0 <mycore_realloc@plt>
   30d44:	cmp	r0, #0
   30d48:	strne	r0, [r4]
   30d4c:	ldr	r0, [r4]
   30d50:	ldr	r1, [r4, #4]
   30d54:	str	r5, [r0, r1, lsl #2]
   30d58:	ldr	r0, [r4, #4]
   30d5c:	add	r0, r0, #1
   30d60:	str	r0, [r4, #4]
   30d64:	pop	{r4, r5, fp, pc}

00030d68 <myhtml_tree_list_append_after_index@@Base>:
   30d68:	push	{r4, r5, r6, r7, fp, lr}
   30d6c:	add	fp, sp, #16
   30d70:	mov	r4, r0
   30d74:	mov	r5, r1
   30d78:	ldr	r0, [r0, #4]
   30d7c:	mov	r6, r2
   30d80:	add	r7, r2, #1
   30d84:	ldr	r1, [r4, #8]
   30d88:	cmp	r0, r1
   30d8c:	bcc	30dac <myhtml_tree_list_append_after_index@@Base+0x44>
   30d90:	lsl	r0, r1, #1
   30d94:	lsl	r1, r1, #3
   30d98:	str	r0, [r4, #8]
   30d9c:	ldr	r0, [r4]
   30da0:	bl	10db0 <mycore_realloc@plt>
   30da4:	cmp	r0, #0
   30da8:	strne	r0, [r4]
   30dac:	ldr	r0, [r4]
   30db0:	ldr	r2, [r4, #4]
   30db4:	sub	r2, r2, r7
   30db8:	add	r1, r0, r7, lsl #2
   30dbc:	add	r0, r0, r6, lsl #2
   30dc0:	add	r0, r0, #8
   30dc4:	lsl	r2, r2, #2
   30dc8:	bl	10fb4 <memmove@plt>
   30dcc:	ldr	r0, [r4]
   30dd0:	str	r5, [r0, r7, lsl #2]
   30dd4:	ldr	r0, [r4, #4]
   30dd8:	add	r0, r0, #1
   30ddc:	str	r0, [r4, #4]
   30de0:	pop	{r4, r5, r6, r7, fp, pc}

00030de4 <myhtml_tree_list_insert_by_index@@Base>:
   30de4:	push	{r4, r5, r6, sl, fp, lr}
   30de8:	add	fp, sp, #16
   30dec:	mov	r4, r0
   30df0:	mov	r6, r1
   30df4:	ldr	r0, [r0, #4]
   30df8:	mov	r5, r2
   30dfc:	ldr	r1, [r4, #8]
   30e00:	cmp	r0, r1
   30e04:	bcc	30e24 <myhtml_tree_list_insert_by_index@@Base+0x40>
   30e08:	lsl	r0, r1, #1
   30e0c:	lsl	r1, r1, #3
   30e10:	str	r0, [r4, #8]
   30e14:	ldr	r0, [r4]
   30e18:	bl	10db0 <mycore_realloc@plt>
   30e1c:	cmp	r0, #0
   30e20:	strne	r0, [r4]
   30e24:	ldr	r0, [r4]
   30e28:	ldr	r2, [r4, #4]
   30e2c:	add	r1, r0, r5, lsl #2
   30e30:	sub	r2, r2, r5
   30e34:	add	r0, r1, #4
   30e38:	lsl	r2, r2, #2
   30e3c:	bl	10fb4 <memmove@plt>
   30e40:	ldr	r0, [r4]
   30e44:	str	r6, [r0, r5, lsl #2]
   30e48:	ldr	r0, [r4, #4]
   30e4c:	add	r0, r0, #1
   30e50:	str	r0, [r4, #4]
   30e54:	pop	{r4, r5, r6, sl, fp, pc}

00030e58 <myhtml_tree_list_current_node@@Base>:
   30e58:	ldr	r1, [r0, #4]
   30e5c:	cmp	r1, #0
   30e60:	ldrne	r1, [r0]
   30e64:	ldrne	r0, [r0, #4]
   30e68:	addne	r0, r1, r0, lsl #2
   30e6c:	ldrne	r0, [r0, #-4]
   30e70:	bxne	lr
   30e74:	mov	r0, #0
   30e78:	bx	lr

00030e7c <myhtml_tree_current_node@@Base>:
   30e7c:	ldr	r0, [r0, #128]	; 0x80
   30e80:	ldr	r1, [r0, #4]
   30e84:	cmp	r1, #0
   30e88:	ldrne	r1, [r0]
   30e8c:	ldrne	r0, [r0, #4]
   30e90:	addne	r0, r1, r0, lsl #2
   30e94:	ldrne	r0, [r0, #-4]
   30e98:	bxne	lr
   30e9c:	mov	r0, #0
   30ea0:	bx	lr

00030ea4 <myhtml_tree_adjusted_current_node@@Base>:
   30ea4:	ldr	r1, [r0, #128]	; 0x80
   30ea8:	ldr	r2, [r1, #4]
   30eac:	cmp	r2, #1
   30eb0:	bne	30ec0 <myhtml_tree_adjusted_current_node@@Base+0x1c>
   30eb4:	ldr	r0, [r0, #88]	; 0x58
   30eb8:	cmp	r0, #0
   30ebc:	bxne	lr
   30ec0:	ldr	r0, [r1, #4]
   30ec4:	cmp	r0, #0
   30ec8:	moveq	r0, #0
   30ecc:	bxeq	lr
   30ed0:	ldr	r0, [r1]
   30ed4:	ldr	r1, [r1, #4]
   30ed8:	add	r0, r0, r1, lsl #2
   30edc:	ldr	r0, [r0, #-4]
   30ee0:	bx	lr

00030ee4 <myhtml_tree_open_elements_append_after_index@@Base>:
   30ee4:	push	{r4, r5, r6, r7, fp, lr}
   30ee8:	add	fp, sp, #16
   30eec:	ldr	r6, [r0, #128]	; 0x80
   30ef0:	mov	r4, r1
   30ef4:	mov	r5, r2
   30ef8:	add	r7, r2, #1
   30efc:	ldr	r1, [r6, #8]
   30f00:	ldr	r0, [r6, #4]
   30f04:	cmp	r0, r1
   30f08:	bcc	30f28 <myhtml_tree_open_elements_append_after_index@@Base+0x44>
   30f0c:	lsl	r0, r1, #1
   30f10:	lsl	r1, r1, #3
   30f14:	str	r0, [r6, #8]
   30f18:	ldr	r0, [r6]
   30f1c:	bl	10db0 <mycore_realloc@plt>
   30f20:	cmp	r0, #0
   30f24:	strne	r0, [r6]
   30f28:	ldr	r0, [r6]
   30f2c:	ldr	r2, [r6, #4]
   30f30:	sub	r2, r2, r7
   30f34:	add	r1, r0, r7, lsl #2
   30f38:	add	r0, r0, r5, lsl #2
   30f3c:	add	r0, r0, #8
   30f40:	lsl	r2, r2, #2
   30f44:	bl	10fb4 <memmove@plt>
   30f48:	ldr	r0, [r6]
   30f4c:	str	r4, [r0, r7, lsl #2]
   30f50:	ldr	r0, [r6, #4]
   30f54:	add	r0, r0, #1
   30f58:	str	r0, [r6, #4]
   30f5c:	pop	{r4, r5, r6, r7, fp, pc}

00030f60 <myhtml_tree_open_elements_pop@@Base>:
   30f60:	ldr	r0, [r0, #128]	; 0x80
   30f64:	ldr	r1, [r0, #4]
   30f68:	cmp	r1, #0
   30f6c:	ldrne	r1, [r0, #4]
   30f70:	subne	r1, r1, #1
   30f74:	strne	r1, [r0, #4]
   30f78:	bx	lr

00030f7c <myhtml_tree_open_elements_remove@@Base>:
   30f7c:	push	{r4, r5, fp, lr}
   30f80:	add	fp, sp, #8
   30f84:	mov	r5, r0
   30f88:	ldr	r0, [r0, #128]	; 0x80
   30f8c:	ldr	r2, [r0, #4]
   30f90:	ldr	r3, [r0]
   30f94:	add	r3, r3, r2, lsl #2
   30f98:	add	r3, r3, #4
   30f9c:	cmp	r2, #0
   30fa0:	popeq	{r4, r5, fp, pc}
   30fa4:	sub	r4, r3, #4
   30fa8:	ldr	r3, [r3, #-8]
   30fac:	sub	r2, r2, #1
   30fb0:	cmp	r3, r1
   30fb4:	mov	r3, r4
   30fb8:	bne	30f9c <myhtml_tree_open_elements_remove@@Base+0x20>
   30fbc:	ldr	r0, [r0, #4]
   30fc0:	mov	r1, r4
   30fc4:	sub	r0, r0, r2
   30fc8:	lsl	r2, r0, #2
   30fcc:	sub	r0, r4, #4
   30fd0:	bl	10fb4 <memmove@plt>
   30fd4:	ldr	r0, [r5, #128]	; 0x80
   30fd8:	ldr	r1, [r0, #4]
   30fdc:	sub	r1, r1, #1
   30fe0:	str	r1, [r0, #4]
   30fe4:	pop	{r4, r5, fp, pc}

00030fe8 <myhtml_tree_open_elements_pop_until@@Base>:
   30fe8:	push	{fp, lr}
   30fec:	mov	fp, sp
   30ff0:	ldr	lr, [r0, #128]	; 0x80
   30ff4:	ldr	ip, [lr]
   30ff8:	ldr	r0, [lr, #4]
   30ffc:	cmp	r0, #0
   31000:	popeq	{fp, pc}
   31004:	ldr	r0, [lr, #4]
   31008:	sub	r0, r0, #1
   3100c:	str	r0, [lr, #4]
   31010:	ldr	r0, [lr, #4]
   31014:	ldr	r0, [ip, r0, lsl #2]
   31018:	ldr	r0, [r0, #4]
   3101c:	cmp	r0, r1
   31020:	bne	30ff8 <myhtml_tree_open_elements_pop_until@@Base+0x10>
   31024:	cmp	r2, #0
   31028:	ldrne	r0, [lr, #4]
   3102c:	ldrne	r0, [ip, r0, lsl #2]
   31030:	ldrne	r0, [r0, #8]
   31034:	cmpne	r0, r2
   31038:	bne	30ff8 <myhtml_tree_open_elements_pop_until@@Base+0x10>
   3103c:	cmp	r3, #0
   31040:	ldrne	r0, [lr, #4]
   31044:	addne	r0, r0, #1
   31048:	strne	r0, [lr, #4]
   3104c:	pop	{fp, pc}

00031050 <myhtml_tree_open_elements_pop_until_by_node@@Base>:
   31050:	ldr	r0, [r0, #128]	; 0x80
   31054:	ldr	ip, [r0]
   31058:	ldr	r3, [r0, #4]
   3105c:	cmp	r3, #0
   31060:	bxeq	lr
   31064:	ldr	r3, [r0, #4]
   31068:	sub	r3, r3, #1
   3106c:	str	r3, [r0, #4]
   31070:	ldr	r3, [r0, #4]
   31074:	ldr	r3, [ip, r3, lsl #2]
   31078:	cmp	r3, r1
   3107c:	bne	31058 <myhtml_tree_open_elements_pop_until_by_node@@Base+0x8>
   31080:	cmp	r2, #0
   31084:	ldrne	r1, [r0, #4]
   31088:	addne	r1, r1, #1
   3108c:	strne	r1, [r0, #4]
   31090:	bx	lr

00031094 <myhtml_tree_open_elements_pop_until_by_index@@Base>:
   31094:	ldr	r0, [r0, #128]	; 0x80
   31098:	ldr	r3, [r0, #4]
   3109c:	cmp	r3, #0
   310a0:	bxeq	lr
   310a4:	ldr	r3, [r0, #4]
   310a8:	sub	r3, r3, #1
   310ac:	str	r3, [r0, #4]
   310b0:	ldr	r3, [r0, #4]
   310b4:	cmp	r3, r1
   310b8:	bne	31098 <myhtml_tree_open_elements_pop_until_by_index@@Base+0x4>
   310bc:	cmp	r2, #0
   310c0:	ldrne	r1, [r0, #4]
   310c4:	addne	r1, r1, #1
   310c8:	strne	r1, [r0, #4]
   310cc:	bx	lr

000310d0 <myhtml_tree_open_elements_find_reverse@@Base>:
   310d0:	ldr	r0, [r0, #128]	; 0x80
   310d4:	ldr	r3, [r0, #4]
   310d8:	ldr	r0, [r0]
   310dc:	sub	ip, r0, #4
   310e0:	cmp	r3, #0
   310e4:	moveq	r0, #0
   310e8:	bxeq	lr
   310ec:	ldr	r0, [ip, r3, lsl #2]
   310f0:	sub	r3, r3, #1
   310f4:	cmp	r0, r1
   310f8:	bne	310e0 <myhtml_tree_open_elements_find_reverse@@Base+0x10>
   310fc:	mov	r0, #1
   31100:	cmp	r2, #0
   31104:	strne	r3, [r2]
   31108:	bx	lr

0003110c <myhtml_tree_open_elements_find@@Base>:
   3110c:	push	{fp, lr}
   31110:	mov	fp, sp
   31114:	ldr	lr, [r0, #128]	; 0x80
   31118:	ldr	ip, [lr]
   3111c:	ldr	r3, [lr, #4]
   31120:	cmp	r3, #0
   31124:	beq	31148 <myhtml_tree_open_elements_find@@Base+0x3c>
   31128:	mov	r3, #0
   3112c:	ldr	r0, [ip, r3, lsl #2]
   31130:	cmp	r0, r1
   31134:	beq	31150 <myhtml_tree_open_elements_find@@Base+0x44>
   31138:	ldr	r0, [lr, #4]
   3113c:	add	r3, r3, #1
   31140:	cmp	r3, r0
   31144:	bcc	3112c <myhtml_tree_open_elements_find@@Base+0x20>
   31148:	mov	r0, #0
   3114c:	pop	{fp, pc}
   31150:	cmp	r2, #0
   31154:	mov	r0, #1
   31158:	strne	r3, [r2]
   3115c:	popne	{fp, pc}
   31160:	pop	{fp, pc}

00031164 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base>:
   31164:	push	{r4, sl, fp, lr}
   31168:	add	fp, sp, #8
   3116c:	ldr	ip, [r0, #128]	; 0x80
   31170:	ldr	r0, [ip, #4]
   31174:	cmp	r0, #0
   31178:	beq	311b0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x4c>
   3117c:	ldr	lr, [ip]
   31180:	rsb	ip, r0, #1
   31184:	ldr	r0, [lr, -ip, lsl #2]
   31188:	ldr	r4, [r0, #4]
   3118c:	cmp	r4, r1
   31190:	bne	311a4 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x40>
   31194:	cmp	r2, #0
   31198:	ldrne	r4, [r0, #8]
   3119c:	cmpne	r4, r2
   311a0:	beq	311b8 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x54>
   311a4:	add	ip, ip, #1
   311a8:	cmp	ip, #1
   311ac:	bne	31184 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x20>
   311b0:	mov	r0, #0
   311b4:	pop	{r4, sl, fp, pc}
   311b8:	cmp	r3, #0
   311bc:	rsbne	r1, ip, #0
   311c0:	strne	r1, [r3]
   311c4:	popne	{r4, sl, fp, pc}
   311c8:	pop	{r4, sl, fp, pc}

000311cc <myhtml_tree_open_elements_find_by_tag_idx@@Base>:
   311cc:	push	{r4, r5, fp, lr}
   311d0:	add	fp, sp, #8
   311d4:	ldr	ip, [r0, #128]	; 0x80
   311d8:	ldr	lr, [ip]
   311dc:	ldr	r0, [ip, #4]
   311e0:	cmp	r0, #0
   311e4:	beq	3121c <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x50>
   311e8:	mov	r4, #0
   311ec:	ldr	r0, [lr, r4, lsl #2]
   311f0:	ldr	r5, [r0, #4]
   311f4:	cmp	r5, r1
   311f8:	bne	3120c <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x40>
   311fc:	cmp	r2, #0
   31200:	ldrne	r5, [r0, #8]
   31204:	cmpne	r5, r2
   31208:	beq	31224 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x58>
   3120c:	ldr	r0, [ip, #4]
   31210:	add	r4, r4, #1
   31214:	cmp	r4, r0
   31218:	bcc	311ec <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x20>
   3121c:	mov	r0, #0
   31220:	pop	{r4, r5, fp, pc}
   31224:	cmp	r3, #0
   31228:	strne	r4, [r3]
   3122c:	popne	{r4, r5, fp, pc}
   31230:	pop	{r4, r5, fp, pc}

00031234 <myhtml_tree_generate_implied_end_tags@@Base>:
   31234:	push	{r4, sl, fp, lr}
   31238:	add	fp, sp, #8
   3123c:	ldr	lr, [r0, #128]	; 0x80
   31240:	ldr	r0, [lr, #4]
   31244:	cmp	r0, #0
   31248:	bne	31264 <myhtml_tree_generate_implied_end_tags@@Base+0x30>
   3124c:	b	313ec <myhtml_tree_generate_implied_end_tags@@Base+0x1b8>
   31250:	ldr	r0, [lr, #4]
   31254:	cmp	r0, #0
   31258:	ldrne	r0, [lr, #4]
   3125c:	subne	r0, r0, #1
   31260:	strne	r0, [lr, #4]
   31264:	ldr	r0, [lr, #4]
   31268:	cmp	r0, #0
   3126c:	beq	313ec <myhtml_tree_generate_implied_end_tags@@Base+0x1b8>
   31270:	ldr	r0, [lr, #4]
   31274:	cmp	r0, #0
   31278:	beq	31290 <myhtml_tree_generate_implied_end_tags@@Base+0x5c>
   3127c:	ldr	r0, [lr]
   31280:	ldr	r3, [lr, #4]
   31284:	add	r0, r0, r3, lsl #2
   31288:	ldr	ip, [r0, #-4]
   3128c:	b	31294 <myhtml_tree_generate_implied_end_tags@@Base+0x60>
   31290:	mov	ip, #0
   31294:	ldr	r3, [ip, #4]
   31298:	sub	r0, r3, #36	; 0x24
   3129c:	cmp	r0, #72	; 0x48
   312a0:	pophi	{r4, sl, fp, pc}
   312a4:	add	r4, pc, #4
   312a8:	ldr	r0, [r4, r0, lsl #2]
   312ac:	add	pc, r4, r0
   312b0:	andeq	r0, r0, r4, lsr #2
   312b4:	andeq	r0, r0, ip, lsr r1
   312b8:	andeq	r0, r0, ip, lsr r1
   312bc:	andeq	r0, r0, ip, lsr r1
   312c0:	andeq	r0, r0, ip, lsr r1
   312c4:	andeq	r0, r0, ip, lsr r1
   312c8:	andeq	r0, r0, ip, lsr r1
   312cc:	andeq	r0, r0, ip, lsr r1
   312d0:	andeq	r0, r0, r4, lsr #2
   312d4:	andeq	r0, r0, ip, lsr r1
   312d8:	andeq	r0, r0, ip, lsr r1
   312dc:	andeq	r0, r0, ip, lsr r1
   312e0:	andeq	r0, r0, ip, lsr r1
   312e4:	andeq	r0, r0, ip, lsr r1
   312e8:	andeq	r0, r0, ip, lsr r1
   312ec:	andeq	r0, r0, ip, lsr r1
   312f0:	andeq	r0, r0, ip, lsr r1
   312f4:	andeq	r0, r0, ip, lsr r1
   312f8:	andeq	r0, r0, ip, lsr r1
   312fc:	andeq	r0, r0, ip, lsr r1
   31300:	andeq	r0, r0, ip, lsr r1
   31304:	andeq	r0, r0, ip, lsr r1
   31308:	andeq	r0, r0, ip, lsr r1
   3130c:	andeq	r0, r0, ip, lsr r1
   31310:	andeq	r0, r0, ip, lsr r1
   31314:	andeq	r0, r0, ip, lsr r1
   31318:	andeq	r0, r0, ip, lsr r1
   3131c:	andeq	r0, r0, ip, lsr r1
   31320:	andeq	r0, r0, ip, lsr r1
   31324:	andeq	r0, r0, ip, lsr r1
   31328:	andeq	r0, r0, ip, lsr r1
   3132c:	andeq	r0, r0, ip, lsr r1
   31330:	andeq	r0, r0, ip, lsr r1
   31334:	andeq	r0, r0, ip, lsr r1
   31338:	andeq	r0, r0, ip, lsr r1
   3133c:	andeq	r0, r0, ip, lsr r1
   31340:	andeq	r0, r0, ip, lsr r1
   31344:	andeq	r0, r0, ip, lsr r1
   31348:	andeq	r0, r0, ip, lsr r1
   3134c:	andeq	r0, r0, ip, lsr r1
   31350:	andeq	r0, r0, ip, lsr r1
   31354:	andeq	r0, r0, r4, lsr #2
   31358:	andeq	r0, r0, ip, lsr r1
   3135c:	andeq	r0, r0, ip, lsr r1
   31360:	andeq	r0, r0, ip, lsr r1
   31364:	andeq	r0, r0, ip, lsr r1
   31368:	andeq	r0, r0, ip, lsr r1
   3136c:	andeq	r0, r0, ip, lsr r1
   31370:	andeq	r0, r0, ip, lsr r1
   31374:	andeq	r0, r0, r4, lsr #2
   31378:	andeq	r0, r0, ip, lsr r1
   3137c:	andeq	r0, r0, ip, lsr r1
   31380:	andeq	r0, r0, ip, lsr r1
   31384:	andeq	r0, r0, ip, lsr r1
   31388:	andeq	r0, r0, ip, lsr r1
   3138c:	andeq	r0, r0, ip, lsr r1
   31390:	andeq	r0, r0, ip, lsr r1
   31394:	andeq	r0, r0, ip, lsr r1
   31398:	andeq	r0, r0, ip, lsr r1
   3139c:	andeq	r0, r0, ip, lsr r1
   313a0:	andeq	r0, r0, r4, lsr #2
   313a4:	andeq	r0, r0, r4, lsr #2
   313a8:	andeq	r0, r0, ip, lsr r1
   313ac:	andeq	r0, r0, r4, lsr #2
   313b0:	andeq	r0, r0, ip, lsr r1
   313b4:	andeq	r0, r0, ip, lsr r1
   313b8:	andeq	r0, r0, ip, lsr r1
   313bc:	andeq	r0, r0, ip, lsr r1
   313c0:	andeq	r0, r0, ip, lsr r1
   313c4:	andeq	r0, r0, r4, lsr #2
   313c8:	andeq	r0, r0, r4, lsr #2
   313cc:	andeq	r0, r0, r4, lsr #2
   313d0:	andeq	r0, r0, r4, lsr #2
   313d4:	cmp	r3, r1
   313d8:	bne	31250 <myhtml_tree_generate_implied_end_tags@@Base+0x1c>
   313dc:	cmp	r2, #0
   313e0:	ldrne	r0, [ip, #8]
   313e4:	cmpne	r0, r2
   313e8:	bne	31250 <myhtml_tree_generate_implied_end_tags@@Base+0x1c>
   313ec:	pop	{r4, sl, fp, pc}

000313f0 <myhtml_tree_generate_all_implied_end_tags@@Base>:
   313f0:	push	{r4, sl, fp, lr}
   313f4:	add	fp, sp, #8
   313f8:	ldr	lr, [r0, #128]	; 0x80
   313fc:	ldr	r0, [lr, #4]
   31400:	cmp	r0, #0
   31404:	bne	31420 <myhtml_tree_generate_all_implied_end_tags@@Base+0x30>
   31408:	b	31638 <myhtml_tree_generate_all_implied_end_tags@@Base+0x248>
   3140c:	ldr	r0, [lr, #4]
   31410:	cmp	r0, #0
   31414:	ldrne	r0, [lr, #4]
   31418:	subne	r0, r0, #1
   3141c:	strne	r0, [lr, #4]
   31420:	ldr	r0, [lr, #4]
   31424:	cmp	r0, #0
   31428:	beq	31638 <myhtml_tree_generate_all_implied_end_tags@@Base+0x248>
   3142c:	ldr	r0, [lr, #4]
   31430:	cmp	r0, #0
   31434:	beq	3144c <myhtml_tree_generate_all_implied_end_tags@@Base+0x5c>
   31438:	ldr	r0, [lr]
   3143c:	ldr	r3, [lr, #4]
   31440:	add	r0, r0, r3, lsl #2
   31444:	ldr	ip, [r0, #-4]
   31448:	b	31450 <myhtml_tree_generate_all_implied_end_tags@@Base+0x60>
   3144c:	mov	ip, #0
   31450:	ldr	r3, [ip, #4]
   31454:	sub	r0, r3, #27
   31458:	cmp	r0, #108	; 0x6c
   3145c:	pophi	{r4, sl, fp, pc}
   31460:	add	r4, pc, #4
   31464:	ldr	r0, [r4, r0, lsl #2]
   31468:	add	pc, r4, r0
   3146c:			; <UNDEFINED> instruction: 0x000001b4
   31470:	andeq	r0, r0, ip, asr #3
   31474:	andeq	r0, r0, ip, asr #3
   31478:	andeq	r0, r0, ip, asr #3
   3147c:	andeq	r0, r0, ip, asr #3
   31480:			; <UNDEFINED> instruction: 0x000001b4
   31484:	andeq	r0, r0, ip, asr #3
   31488:	andeq	r0, r0, ip, asr #3
   3148c:	andeq	r0, r0, ip, asr #3
   31490:			; <UNDEFINED> instruction: 0x000001b4
   31494:	andeq	r0, r0, ip, asr #3
   31498:	andeq	r0, r0, ip, asr #3
   3149c:	andeq	r0, r0, ip, asr #3
   314a0:	andeq	r0, r0, ip, asr #3
   314a4:	andeq	r0, r0, ip, asr #3
   314a8:	andeq	r0, r0, ip, asr #3
   314ac:	andeq	r0, r0, ip, asr #3
   314b0:			; <UNDEFINED> instruction: 0x000001b4
   314b4:	andeq	r0, r0, ip, asr #3
   314b8:	andeq	r0, r0, ip, asr #3
   314bc:	andeq	r0, r0, ip, asr #3
   314c0:	andeq	r0, r0, ip, asr #3
   314c4:	andeq	r0, r0, ip, asr #3
   314c8:	andeq	r0, r0, ip, asr #3
   314cc:	andeq	r0, r0, ip, asr #3
   314d0:	andeq	r0, r0, ip, asr #3
   314d4:	andeq	r0, r0, ip, asr #3
   314d8:	andeq	r0, r0, ip, asr #3
   314dc:	andeq	r0, r0, ip, asr #3
   314e0:	andeq	r0, r0, ip, asr #3
   314e4:	andeq	r0, r0, ip, asr #3
   314e8:	andeq	r0, r0, ip, asr #3
   314ec:	andeq	r0, r0, ip, asr #3
   314f0:	andeq	r0, r0, ip, asr #3
   314f4:	andeq	r0, r0, ip, asr #3
   314f8:	andeq	r0, r0, ip, asr #3
   314fc:	andeq	r0, r0, ip, asr #3
   31500:	andeq	r0, r0, ip, asr #3
   31504:	andeq	r0, r0, ip, asr #3
   31508:	andeq	r0, r0, ip, asr #3
   3150c:	andeq	r0, r0, ip, asr #3
   31510:	andeq	r0, r0, ip, asr #3
   31514:	andeq	r0, r0, ip, asr #3
   31518:	andeq	r0, r0, ip, asr #3
   3151c:	andeq	r0, r0, ip, asr #3
   31520:	andeq	r0, r0, ip, asr #3
   31524:	andeq	r0, r0, ip, asr #3
   31528:	andeq	r0, r0, ip, asr #3
   3152c:	andeq	r0, r0, ip, asr #3
   31530:	andeq	r0, r0, ip, asr #3
   31534:			; <UNDEFINED> instruction: 0x000001b4
   31538:	andeq	r0, r0, ip, asr #3
   3153c:	andeq	r0, r0, ip, asr #3
   31540:	andeq	r0, r0, ip, asr #3
   31544:	andeq	r0, r0, ip, asr #3
   31548:	andeq	r0, r0, ip, asr #3
   3154c:	andeq	r0, r0, ip, asr #3
   31550:	andeq	r0, r0, ip, asr #3
   31554:	andeq	r0, r0, ip, asr #3
   31558:	andeq	r0, r0, ip, asr #3
   3155c:	andeq	r0, r0, ip, asr #3
   31560:	andeq	r0, r0, ip, asr #3
   31564:	andeq	r0, r0, ip, asr #3
   31568:	andeq	r0, r0, ip, asr #3
   3156c:	andeq	r0, r0, ip, asr #3
   31570:	andeq	r0, r0, ip, asr #3
   31574:	andeq	r0, r0, ip, asr #3
   31578:	andeq	r0, r0, ip, asr #3
   3157c:	andeq	r0, r0, ip, asr #3
   31580:			; <UNDEFINED> instruction: 0x000001b4
   31584:			; <UNDEFINED> instruction: 0x000001b4
   31588:	andeq	r0, r0, ip, asr #3
   3158c:			; <UNDEFINED> instruction: 0x000001b4
   31590:	andeq	r0, r0, ip, asr #3
   31594:	andeq	r0, r0, ip, asr #3
   31598:	andeq	r0, r0, ip, asr #3
   3159c:	andeq	r0, r0, ip, asr #3
   315a0:	andeq	r0, r0, ip, asr #3
   315a4:			; <UNDEFINED> instruction: 0x000001b4
   315a8:			; <UNDEFINED> instruction: 0x000001b4
   315ac:			; <UNDEFINED> instruction: 0x000001b4
   315b0:			; <UNDEFINED> instruction: 0x000001b4
   315b4:	andeq	r0, r0, ip, asr #3
   315b8:	andeq	r0, r0, ip, asr #3
   315bc:	andeq	r0, r0, ip, asr #3
   315c0:	andeq	r0, r0, ip, asr #3
   315c4:	andeq	r0, r0, ip, asr #3
   315c8:	andeq	r0, r0, ip, asr #3
   315cc:	andeq	r0, r0, ip, asr #3
   315d0:	andeq	r0, r0, ip, asr #3
   315d4:	andeq	r0, r0, ip, asr #3
   315d8:	andeq	r0, r0, ip, asr #3
   315dc:	andeq	r0, r0, ip, asr #3
   315e0:	andeq	r0, r0, ip, asr #3
   315e4:	andeq	r0, r0, ip, asr #3
   315e8:	andeq	r0, r0, ip, asr #3
   315ec:	andeq	r0, r0, ip, asr #3
   315f0:	andeq	r0, r0, ip, asr #3
   315f4:	andeq	r0, r0, ip, asr #3
   315f8:			; <UNDEFINED> instruction: 0x000001b4
   315fc:			; <UNDEFINED> instruction: 0x000001b4
   31600:	andeq	r0, r0, ip, asr #3
   31604:	andeq	r0, r0, ip, asr #3
   31608:			; <UNDEFINED> instruction: 0x000001b4
   3160c:			; <UNDEFINED> instruction: 0x000001b4
   31610:			; <UNDEFINED> instruction: 0x000001b4
   31614:	andeq	r0, r0, ip, asr #3
   31618:	andeq	r0, r0, ip, asr #3
   3161c:			; <UNDEFINED> instruction: 0x000001b4
   31620:	cmp	r3, r1
   31624:	bne	3140c <myhtml_tree_generate_all_implied_end_tags@@Base+0x1c>
   31628:	cmp	r2, #0
   3162c:	ldrne	r0, [ip, #8]
   31630:	cmpne	r0, r2
   31634:	bne	3140c <myhtml_tree_generate_all_implied_end_tags@@Base+0x1c>
   31638:	pop	{r4, sl, fp, pc}

0003163c <myhtml_tree_reset_insertion_mode_appropriately@@Base>:
   3163c:	push	{r4, sl, fp, lr}
   31640:	add	fp, sp, #8
   31644:	ldr	r1, [r0, #128]	; 0x80
   31648:	ldr	r2, [r1, #4]
   3164c:	cmp	r2, #0
   31650:	popeq	{r4, sl, fp, pc}
   31654:	ldr	ip, [r1]
   31658:	ldr	r2, [r1, #4]
   3165c:	cmp	r2, #0
   31660:	beq	31884 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x248>
   31664:	sub	lr, ip, #4
   31668:	ldr	r3, [lr, r2, lsl #2]
   3166c:	mov	r1, #0
   31670:	cmp	r2, #1
   31674:	bne	31688 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x4c>
   31678:	ldr	r1, [r0, #88]	; 0x58
   3167c:	cmp	r1, #0
   31680:	movne	r3, r1
   31684:	mov	r1, #1
   31688:	ldr	r4, [r3, #8]
   3168c:	cmp	r4, #1
   31690:	bne	31874 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x238>
   31694:	ldr	r3, [r3, #4]
   31698:	sub	r3, r3, #23
   3169c:	cmp	r3, #112	; 0x70
   316a0:	bhi	31874 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x238>
   316a4:	add	r4, pc, #4
   316a8:	ldr	r3, [r4, r3, lsl #2]
   316ac:	add	pc, r4, r3
   316b0:	andeq	r0, r0, ip, lsr #4
   316b4:	andeq	r0, r0, r4, asr #3
   316b8:	andeq	r0, r0, r4, asr #3
   316bc:	andeq	r0, r0, r4, asr #3
   316c0:	andeq	r0, r0, r0, lsl #4
   316c4:	andeq	r0, r0, r4, asr #3
   316c8:	andeq	r0, r0, r4, asr #3
   316cc:	andeq	r0, r0, r4, asr #3
   316d0:	andeq	r0, r0, r4, asr #3
   316d4:	andeq	r0, r0, ip, lsl #4
   316d8:	andeq	r0, r0, r4, asr #3
   316dc:	andeq	r0, r0, r4, asr #3
   316e0:	andeq	r0, r0, r4, asr #3
   316e4:	andeq	r0, r0, r4, asr #3
   316e8:	andeq	r0, r0, r4, asr #3
   316ec:	andeq	r0, r0, r4, asr #3
   316f0:	andeq	r0, r0, r4, asr #3
   316f4:	andeq	r0, r0, r4, asr #3
   316f8:	andeq	r0, r0, r4, asr #3
   316fc:	andeq	r0, r0, r4, asr #3
   31700:	andeq	r0, r0, r4, asr #3
   31704:	andeq	r0, r0, r4, asr #3
   31708:	andeq	r0, r0, r4, asr #3
   3170c:	andeq	r0, r0, r4, asr #3
   31710:	andeq	r0, r0, r4, asr #3
   31714:	andeq	r0, r0, r4, asr #3
   31718:	andeq	r0, r0, r4, asr #3
   3171c:	andeq	r0, r0, r4, asr #3
   31720:	andeq	r0, r0, r4, asr #3
   31724:	andeq	r0, r0, r4, asr #3
   31728:	andeq	r0, r0, r4, asr #3
   3172c:	andeq	r0, r0, r8, lsl r2
   31730:	andeq	r0, r0, r4, asr #3
   31734:	andeq	r0, r0, r4, asr #3
   31738:	andeq	r0, r0, r4, asr #3
   3173c:	andeq	r0, r0, r4, asr #3
   31740:	andeq	r0, r0, r4, asr #3
   31744:	andeq	r0, r0, r4, asr #3
   31748:	andeq	r0, r0, r4, lsr #4
   3174c:	andeq	r0, r0, r4, asr #3
   31750:	andeq	r0, r0, r4, asr #3
   31754:	andeq	r0, r0, r4, asr #3
   31758:	andeq	r0, r0, r8, lsr r2
   3175c:	andeq	r0, r0, r4, asr #3
   31760:	andeq	r0, r0, r4, asr #3
   31764:	andeq	r0, r0, r4, asr #3
   31768:	andeq	r0, r0, r4, asr #3
   3176c:	andeq	r0, r0, r4, asr #3
   31770:	andeq	r0, r0, r4, asr #3
   31774:	andeq	r0, r0, r4, asr #3
   31778:	andeq	r0, r0, r4, asr #3
   3177c:	andeq	r0, r0, r4, asr #3
   31780:	andeq	r0, r0, r4, asr #3
   31784:	andeq	r0, r0, r4, asr #3
   31788:	andeq	r0, r0, r4, asr #3
   3178c:	andeq	r0, r0, r4, asr #3
   31790:	andeq	r0, r0, r4, asr #3
   31794:	andeq	r0, r0, r4, asr #3
   31798:	andeq	r0, r0, r4, asr #3
   3179c:	andeq	r0, r0, r4, asr #3
   317a0:	andeq	r0, r0, r4, asr #3
   317a4:	andeq	r0, r0, r4, asr #3
   317a8:	andeq	r0, r0, r4, asr #3
   317ac:	andeq	r0, r0, r4, asr #3
   317b0:	andeq	r0, r0, r4, asr #3
   317b4:	andeq	r0, r0, r4, asr #3
   317b8:	andeq	r0, r0, r4, asr #3
   317bc:	andeq	r0, r0, r4, asr #3
   317c0:	andeq	r0, r0, r4, asr #3
   317c4:	andeq	r0, r0, r4, asr #3
   317c8:	andeq	r0, r0, r4, asr #3
   317cc:	andeq	r0, r0, r4, asr #3
   317d0:	andeq	r0, r0, r4, asr #3
   317d4:	andeq	r0, r0, r4, asr #3
   317d8:	andeq	r0, r0, r4, asr #3
   317dc:	andeq	r0, r0, r4, asr #3
   317e0:	andeq	r0, r0, r4, asr #3
   317e4:	andeq	r0, r0, r4, asr #3
   317e8:	andeq	r0, r0, r4, asr #3
   317ec:	andeq	r0, r0, r4, asr #3
   317f0:	andeq	r0, r0, r4, asr #3
   317f4:	andeq	r0, r0, r4, asr #3
   317f8:	andeq	r0, r0, r4, asr #3
   317fc:	andeq	r0, r0, r4, asr #3
   31800:	andeq	r0, r0, r4, asr #3
   31804:	andeq	r0, r0, r4, asr #3
   31808:	andeq	r0, r0, r4, asr #3
   3180c:	andeq	r0, r0, r4, asr #3
   31810:	andeq	r0, r0, r4, asr #3
   31814:	andeq	r0, r0, r4, asr #3
   31818:	andeq	r0, r0, r4, asr #3
   3181c:	andeq	r0, r0, r0, asr r2
   31820:	andeq	r0, r0, r4, asr #3
   31824:	andeq	r0, r0, r4, asr #3
   31828:	andeq	r0, r0, r4, asr #3
   3182c:	andeq	r0, r0, r4, asr #3
   31830:	andeq	r0, r0, r4, asr #3
   31834:	andeq	r0, r0, r4, asr #3
   31838:	andeq	r0, r0, r4, asr #3
   3183c:	andeq	r0, r0, r4, asr #3
   31840:	andeq	r0, r0, r4, asr #3
   31844:	andeq	r0, r0, r4, asr #3
   31848:	andeq	r0, r0, ip, lsl #5
   3184c:	andeq	r0, r0, r0, ror #3
   31850:	andeq	r0, r0, ip, ror #3
   31854:	muleq	r0, r8, r2
   31858:	andeq	r0, r0, r4, asr #3
   3185c:	andeq	r0, r0, r0, ror #3
   31860:	andeq	r0, r0, ip, ror #3
   31864:	andeq	r0, r0, r0, ror #3
   31868:	andeq	r0, r0, r4, asr #3
   3186c:	andeq	r0, r0, r4, asr #3
   31870:			; <UNDEFINED> instruction: 0x000002b4
   31874:	cmp	r1, #0
   31878:	bne	318dc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2a0>
   3187c:	subs	r2, r2, #1
   31880:	bne	31668 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2c>
   31884:	mov	r1, #0
   31888:	str	r1, [r0, #168]	; 0xa8
   3188c:	pop	{r4, sl, fp, pc}
   31890:	mov	r1, #12
   31894:	str	r1, [r0, #168]	; 0xa8
   31898:	pop	{r4, sl, fp, pc}
   3189c:	cmp	r1, #0
   318a0:	bne	318dc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2a0>
   318a4:	mov	r1, #14
   318a8:	str	r1, [r0, #168]	; 0xa8
   318ac:	pop	{r4, sl, fp, pc}
   318b0:	mov	r1, #10
   318b4:	str	r1, [r0, #168]	; 0xa8
   318b8:	pop	{r4, sl, fp, pc}
   318bc:	mov	r1, #11
   318c0:	str	r1, [r0, #168]	; 0xa8
   318c4:	pop	{r4, sl, fp, pc}
   318c8:	mov	r1, #19
   318cc:	str	r1, [r0, #168]	; 0xa8
   318d0:	pop	{r4, sl, fp, pc}
   318d4:	cmp	r1, #0
   318d8:	beq	31970 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x334>
   318dc:	mov	r1, #6
   318e0:	str	r1, [r0, #168]	; 0xa8
   318e4:	pop	{r4, sl, fp, pc}
   318e8:	ldr	r1, [r0, #92]	; 0x5c
   318ec:	cmp	r1, #0
   318f0:	moveq	r1, #2
   318f4:	movne	r1, #5
   318f8:	str	r1, [r0, #168]	; 0xa8
   318fc:	pop	{r4, sl, fp, pc}
   31900:	cmp	r1, #0
   31904:	bne	31930 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2f4>
   31908:	rsb	r1, r2, #2
   3190c:	cmp	r1, #1
   31910:	beq	31930 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2f4>
   31914:	ldr	r2, [ip, -r1, lsl #2]
   31918:	ldr	r2, [r2, #4]
   3191c:	cmp	r2, #125	; 0x7d
   31920:	beq	3197c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x340>
   31924:	add	r1, r1, #1
   31928:	cmp	r2, #128	; 0x80
   3192c:	bne	3190c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2d0>
   31930:	mov	r1, #15
   31934:	str	r1, [r0, #168]	; 0xa8
   31938:	pop	{r4, sl, fp, pc}
   3193c:	mov	r1, #8
   31940:	str	r1, [r0, #168]	; 0xa8
   31944:	pop	{r4, sl, fp, pc}
   31948:	ldr	r1, [r0, #140]	; 0x8c
   3194c:	ldr	r2, [r1]
   31950:	ldr	r1, [r1, #4]
   31954:	add	r1, r2, r1, lsl #2
   31958:	ldr	r1, [r1, #-4]
   3195c:	str	r1, [r0, #168]	; 0xa8
   31960:	pop	{r4, sl, fp, pc}
   31964:	mov	r1, #13
   31968:	str	r1, [r0, #168]	; 0xa8
   3196c:	pop	{r4, sl, fp, pc}
   31970:	mov	r1, #3
   31974:	str	r1, [r0, #168]	; 0xa8
   31978:	pop	{r4, sl, fp, pc}
   3197c:	mov	r1, #16
   31980:	str	r1, [r0, #168]	; 0xa8
   31984:	pop	{r4, sl, fp, pc}

00031988 <myhtml_tree_active_formatting_is_marker@@Base>:
   31988:	ldr	r0, [r0]
   3198c:	ldr	r2, [r0, #36]	; 0x24
   31990:	mov	r0, #1
   31994:	cmp	r2, r1
   31998:	bxeq	lr
   3199c:	ldr	r1, [r1, #4]
   319a0:	cmp	r1, #82	; 0x52
   319a4:	ble	319c4 <myhtml_tree_active_formatting_is_marker@@Base+0x3c>
   319a8:	cmp	r1, #126	; 0x7e
   319ac:	bgt	319e4 <myhtml_tree_active_formatting_is_marker@@Base+0x5c>
   319b0:	cmp	r1, #83	; 0x53
   319b4:	beq	319e0 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   319b8:	cmp	r1, #94	; 0x5e
   319bc:	movne	r0, #0
   319c0:	bx	lr
   319c4:	cmp	r1, #27
   319c8:	bhi	319f0 <myhtml_tree_active_formatting_is_marker@@Base+0x68>
   319cc:	movw	r3, #512	; 0x200
   319d0:	mov	r2, #1
   319d4:	movt	r3, #2560	; 0xa00
   319d8:	tst	r3, r2, lsl r1
   319dc:	beq	319f0 <myhtml_tree_active_formatting_is_marker@@Base+0x68>
   319e0:	bx	lr
   319e4:	cmp	r1, #127	; 0x7f
   319e8:	cmpne	r1, #131	; 0x83
   319ec:	beq	319e0 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   319f0:	mov	r0, #0
   319f4:	bx	lr

000319f8 <myhtml_tree_active_formatting_append@@Base>:
   319f8:	push	{r4, r5, fp, lr}
   319fc:	add	fp, sp, #8
   31a00:	ldr	r5, [r0, #124]	; 0x7c
   31a04:	mov	r4, r1
   31a08:	ldr	r1, [r5, #8]
   31a0c:	ldr	r0, [r5, #4]
   31a10:	cmp	r0, r1
   31a14:	bcc	31a34 <myhtml_tree_active_formatting_append@@Base+0x3c>
   31a18:	lsl	r0, r1, #1
   31a1c:	lsl	r1, r1, #3
   31a20:	str	r0, [r5, #8]
   31a24:	ldr	r0, [r5]
   31a28:	bl	10db0 <mycore_realloc@plt>
   31a2c:	cmp	r0, #0
   31a30:	strne	r0, [r5]
   31a34:	ldr	r0, [r5]
   31a38:	ldr	r1, [r5, #4]
   31a3c:	str	r4, [r0, r1, lsl #2]
   31a40:	ldr	r0, [r5, #4]
   31a44:	add	r0, r0, #1
   31a48:	str	r0, [r5, #4]
   31a4c:	pop	{r4, r5, fp, pc}

00031a50 <myhtml_tree_active_formatting_pop@@Base>:
   31a50:	ldr	r0, [r0, #124]	; 0x7c
   31a54:	ldr	r1, [r0, #4]
   31a58:	cmp	r1, #0
   31a5c:	ldrne	r1, [r0, #4]
   31a60:	subne	r1, r1, #1
   31a64:	strne	r1, [r0, #4]
   31a68:	bx	lr

00031a6c <myhtml_tree_active_formatting_remove@@Base>:
   31a6c:	push	{r4, r5, fp, lr}
   31a70:	add	fp, sp, #8
   31a74:	mov	r5, r0
   31a78:	ldr	r0, [r0, #124]	; 0x7c
   31a7c:	ldr	r2, [r0, #4]
   31a80:	ldr	r3, [r0]
   31a84:	add	r3, r3, r2, lsl #2
   31a88:	add	r3, r3, #4
   31a8c:	cmp	r2, #0
   31a90:	popeq	{r4, r5, fp, pc}
   31a94:	sub	r4, r3, #4
   31a98:	ldr	r3, [r3, #-8]
   31a9c:	sub	r2, r2, #1
   31aa0:	cmp	r3, r1
   31aa4:	mov	r3, r4
   31aa8:	bne	31a8c <myhtml_tree_active_formatting_remove@@Base+0x20>
   31aac:	ldr	r0, [r0, #4]
   31ab0:	mov	r1, r4
   31ab4:	sub	r0, r0, r2
   31ab8:	lsl	r2, r0, #2
   31abc:	sub	r0, r4, #4
   31ac0:	bl	10fb4 <memmove@plt>
   31ac4:	ldr	r0, [r5, #124]	; 0x7c
   31ac8:	ldr	r1, [r0, #4]
   31acc:	sub	r1, r1, #1
   31ad0:	str	r1, [r0, #4]
   31ad4:	pop	{r4, r5, fp, pc}

00031ad8 <myhtml_tree_active_formatting_remove_by_index@@Base>:
   31ad8:	push	{r4, sl, fp, lr}
   31adc:	add	fp, sp, #8
   31ae0:	ldr	r2, [r0, #124]	; 0x7c
   31ae4:	mov	r4, r0
   31ae8:	ldr	r0, [r2]
   31aec:	ldr	r2, [r2, #4]
   31af0:	add	r0, r0, r1, lsl #2
   31af4:	sub	r1, r2, r1
   31af8:	add	r3, r0, #4
   31afc:	lsl	r2, r1, #2
   31b00:	mov	r1, r3
   31b04:	bl	10fb4 <memmove@plt>
   31b08:	ldr	r0, [r4, #124]	; 0x7c
   31b0c:	ldr	r1, [r0, #4]
   31b10:	sub	r1, r1, #1
   31b14:	str	r1, [r0, #4]
   31b18:	pop	{r4, sl, fp, pc}

00031b1c <myhtml_tree_active_formatting_append_with_check@@Base>:
   31b1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31b20:	add	fp, sp, #28
   31b24:	sub	sp, sp, #4
   31b28:	mov	r4, r1
   31b2c:	ldr	r1, [r0, #124]	; 0x7c
   31b30:	mov	r5, r0
   31b34:	ldr	r0, [r1, #4]
   31b38:	cmp	r0, #0
   31b3c:	beq	31c70 <myhtml_tree_active_formatting_append_with_check@@Base+0x154>
   31b40:	ldr	r6, [r1]
   31b44:	movw	sl, #512	; 0x200
   31b48:	sub	r7, r0, #1
   31b4c:	mov	r9, #0
   31b50:	movt	sl, #2560	; 0xa00
   31b54:	mov	r8, r7
   31b58:	ldr	r1, [r5]
   31b5c:	ldr	r0, [r6, r7, lsl #2]
   31b60:	ldr	r1, [r1, #36]	; 0x24
   31b64:	cmp	r1, r0
   31b68:	beq	31c30 <myhtml_tree_active_formatting_append_with_check@@Base+0x114>
   31b6c:	ldr	r1, [r0, #4]
   31b70:	cmp	r1, #82	; 0x52
   31b74:	ble	31b94 <myhtml_tree_active_formatting_append_with_check@@Base+0x78>
   31b78:	cmp	r1, #126	; 0x7e
   31b7c:	bgt	31bac <myhtml_tree_active_formatting_append_with_check@@Base+0x90>
   31b80:	cmp	r1, #83	; 0x53
   31b84:	beq	31c30 <myhtml_tree_active_formatting_append_with_check@@Base+0x114>
   31b88:	cmp	r1, #94	; 0x5e
   31b8c:	bne	31bb8 <myhtml_tree_active_formatting_append_with_check@@Base+0x9c>
   31b90:	b	31c30 <myhtml_tree_active_formatting_append_with_check@@Base+0x114>
   31b94:	cmp	r1, #27
   31b98:	bhi	31bb8 <myhtml_tree_active_formatting_append_with_check@@Base+0x9c>
   31b9c:	mov	r2, #1
   31ba0:	tst	sl, r2, lsl r1
   31ba4:	beq	31bb8 <myhtml_tree_active_formatting_append_with_check@@Base+0x9c>
   31ba8:	b	31c30 <myhtml_tree_active_formatting_append_with_check@@Base+0x114>
   31bac:	cmp	r1, #127	; 0x7f
   31bb0:	cmpne	r1, #131	; 0x83
   31bb4:	beq	31c30 <myhtml_tree_active_formatting_append_with_check@@Base+0x114>
   31bb8:	ldr	r1, [r0, #32]
   31bbc:	cmp	r1, #0
   31bc0:	ldrne	r0, [r4, #32]
   31bc4:	cmpne	r0, #0
   31bc8:	bne	31bdc <myhtml_tree_active_formatting_append_with_check@@Base+0xc0>
   31bcc:	sub	r7, r7, #1
   31bd0:	cmn	r7, #1
   31bd4:	bne	31b58 <myhtml_tree_active_formatting_append_with_check@@Base+0x3c>
   31bd8:	b	31c30 <myhtml_tree_active_formatting_append_with_check@@Base+0x114>
   31bdc:	ldr	r0, [r5, #8]
   31be0:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   31be4:	ldr	r1, [r4, #32]
   31be8:	ldr	r0, [r5, #8]
   31bec:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   31bf0:	ldr	r0, [r6, r7, lsl #2]
   31bf4:	ldr	r2, [r4, #8]
   31bf8:	ldr	r1, [r0, #8]
   31bfc:	cmp	r1, r2
   31c00:	bne	31bcc <myhtml_tree_active_formatting_append_with_check@@Base+0xb0>
   31c04:	ldr	r1, [r4, #4]
   31c08:	ldr	r2, [r0, #4]
   31c0c:	cmp	r2, r1
   31c10:	bne	31bcc <myhtml_tree_active_formatting_append_with_check@@Base+0xb0>
   31c14:	ldr	r1, [r4, #32]
   31c18:	ldr	r0, [r0, #32]
   31c1c:	bl	118d8 <myhtml_token_attr_compare@plt>
   31c20:	cmp	r0, #0
   31c24:	add	r9, r9, r0
   31c28:	movne	r8, r7
   31c2c:	b	31bcc <myhtml_tree_active_formatting_append_with_check@@Base+0xb0>
   31c30:	cmp	r9, #2
   31c34:	bls	31c70 <myhtml_tree_active_formatting_append_with_check@@Base+0x154>
   31c38:	ldr	r2, [r5, #124]	; 0x7c
   31c3c:	ldr	r0, [r2]
   31c40:	ldr	r2, [r2, #4]
   31c44:	sub	r2, r2, r8
   31c48:	add	r0, r0, r8, lsl #2
   31c4c:	add	r1, r0, #4
   31c50:	lsl	r2, r2, #2
   31c54:	bl	10fb4 <memmove@plt>
   31c58:	ldr	r6, [r5, #124]	; 0x7c
   31c5c:	mov	r5, r6
   31c60:	ldr	r0, [r5, #4]!
   31c64:	sub	r0, r0, #1
   31c68:	str	r0, [r5]
   31c6c:	b	31c78 <myhtml_tree_active_formatting_append_with_check@@Base+0x15c>
   31c70:	ldr	r6, [r5, #124]	; 0x7c
   31c74:	add	r5, r6, #4
   31c78:	ldr	r0, [r6, #4]
   31c7c:	ldr	r1, [r6, #8]
   31c80:	cmp	r0, r1
   31c84:	bcc	31ca4 <myhtml_tree_active_formatting_append_with_check@@Base+0x188>
   31c88:	lsl	r0, r1, #1
   31c8c:	lsl	r1, r1, #3
   31c90:	str	r0, [r6, #8]
   31c94:	ldr	r0, [r6]
   31c98:	bl	10db0 <mycore_realloc@plt>
   31c9c:	cmp	r0, #0
   31ca0:	strne	r0, [r6]
   31ca4:	ldr	r0, [r6]
   31ca8:	ldr	r1, [r5]
   31cac:	str	r4, [r0, r1, lsl #2]
   31cb0:	ldr	r0, [r5]
   31cb4:	add	r0, r0, #1
   31cb8:	str	r0, [r5]
   31cbc:	sub	sp, fp, #28
   31cc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00031cc4 <myhtml_tree_active_formatting_current_node@@Base>:
   31cc4:	ldr	r0, [r0, #124]	; 0x7c
   31cc8:	ldr	r1, [r0, #4]
   31ccc:	cmp	r1, #0
   31cd0:	ldrne	r1, [r0]
   31cd4:	ldrne	r0, [r0, #4]
   31cd8:	addne	r0, r1, r0, lsl #2
   31cdc:	ldrne	r0, [r0, #-4]
   31ce0:	bxne	lr
   31ce4:	mov	r0, #0
   31ce8:	bx	lr

00031cec <myhtml_tree_active_formatting_find@@Base>:
   31cec:	ldr	r0, [r0, #124]	; 0x7c
   31cf0:	ldr	r3, [r0, #4]
   31cf4:	ldr	r0, [r0]
   31cf8:	sub	ip, r0, #4
   31cfc:	cmp	r3, #0
   31d00:	moveq	r0, #0
   31d04:	bxeq	lr
   31d08:	ldr	r0, [ip, r3, lsl #2]
   31d0c:	sub	r3, r3, #1
   31d10:	cmp	r0, r1
   31d14:	bne	31cfc <myhtml_tree_active_formatting_find@@Base+0x10>
   31d18:	mov	r0, #1
   31d1c:	cmp	r2, #0
   31d20:	strne	r3, [r2]
   31d24:	bx	lr

00031d28 <myhtml_tree_active_formatting_up_to_last_marker@@Base>:
   31d28:	push	{r4, sl, fp, lr}
   31d2c:	add	fp, sp, #8
   31d30:	ldr	r1, [r0, #124]	; 0x7c
   31d34:	ldr	r2, [r1]
   31d38:	ldr	r3, [r1, #4]
   31d3c:	cmp	r3, #0
   31d40:	beq	31dc4 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x9c>
   31d44:	movw	lr, #512	; 0x200
   31d48:	mov	ip, #1
   31d4c:	movt	lr, #2560	; 0xa00
   31d50:	ldr	r3, [r1, #4]
   31d54:	cmp	r3, #0
   31d58:	ldrne	r3, [r1, #4]
   31d5c:	subne	r3, r3, #1
   31d60:	strne	r3, [r1, #4]
   31d64:	ldrne	r3, [r1, #4]
   31d68:	ldrne	r4, [r0]
   31d6c:	ldrne	r3, [r2, r3, lsl #2]
   31d70:	ldrne	r4, [r4, #36]	; 0x24
   31d74:	cmpne	r4, r3
   31d78:	beq	31dc4 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x9c>
   31d7c:	ldr	r3, [r3, #4]
   31d80:	cmp	r3, #82	; 0x52
   31d84:	ble	31da4 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x7c>
   31d88:	cmp	r3, #126	; 0x7e
   31d8c:	bgt	31db8 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x90>
   31d90:	cmp	r3, #83	; 0x53
   31d94:	popeq	{r4, sl, fp, pc}
   31d98:	cmp	r3, #94	; 0x5e
   31d9c:	bne	31d50 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x28>
   31da0:	b	31dc4 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x9c>
   31da4:	cmp	r3, #27
   31da8:	bhi	31d50 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x28>
   31dac:	tst	lr, ip, lsl r3
   31db0:	beq	31d50 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x28>
   31db4:	b	31dc4 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x9c>
   31db8:	cmp	r3, #131	; 0x83
   31dbc:	cmpne	r3, #127	; 0x7f
   31dc0:	bne	31d50 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x28>
   31dc4:	pop	{r4, sl, fp, pc}

00031dc8 <myhtml_tree_active_formatting_between_last_marker@@Base>:
   31dc8:	push	{r4, r5, r6, sl, fp, lr}
   31dcc:	add	fp, sp, #16
   31dd0:	ldr	r6, [r0, #124]	; 0x7c
   31dd4:	ldr	r3, [r6, #4]
   31dd8:	cmp	r3, #0
   31ddc:	beq	31e6c <myhtml_tree_active_formatting_between_last_marker@@Base+0xa4>
   31de0:	ldr	r0, [r0]
   31de4:	ldr	ip, [r6]
   31de8:	movw	r5, #512	; 0x200
   31dec:	rsb	r3, r3, #1
   31df0:	mov	r4, #1
   31df4:	movt	r5, #2560	; 0xa00
   31df8:	ldr	lr, [r0, #36]	; 0x24
   31dfc:	ldr	r0, [ip, -r3, lsl #2]
   31e00:	cmp	lr, r0
   31e04:	beq	31e6c <myhtml_tree_active_formatting_between_last_marker@@Base+0xa4>
   31e08:	ldr	r6, [r0, #4]
   31e0c:	cmp	r6, #82	; 0x52
   31e10:	ble	31e30 <myhtml_tree_active_formatting_between_last_marker@@Base+0x68>
   31e14:	cmp	r6, #126	; 0x7e
   31e18:	bgt	31e44 <myhtml_tree_active_formatting_between_last_marker@@Base+0x7c>
   31e1c:	cmp	r6, #83	; 0x53
   31e20:	beq	31e6c <myhtml_tree_active_formatting_between_last_marker@@Base+0xa4>
   31e24:	cmp	r6, #94	; 0x5e
   31e28:	bne	31e50 <myhtml_tree_active_formatting_between_last_marker@@Base+0x88>
   31e2c:	b	31e6c <myhtml_tree_active_formatting_between_last_marker@@Base+0xa4>
   31e30:	cmp	r6, #27
   31e34:	bhi	31e50 <myhtml_tree_active_formatting_between_last_marker@@Base+0x88>
   31e38:	tst	r5, r4, lsl r6
   31e3c:	beq	31e50 <myhtml_tree_active_formatting_between_last_marker@@Base+0x88>
   31e40:	b	31e6c <myhtml_tree_active_formatting_between_last_marker@@Base+0xa4>
   31e44:	cmp	r6, #127	; 0x7f
   31e48:	cmpne	r6, #131	; 0x83
   31e4c:	beq	31e6c <myhtml_tree_active_formatting_between_last_marker@@Base+0xa4>
   31e50:	cmp	r6, r1
   31e54:	ldreq	r6, [r0, #8]
   31e58:	cmpeq	r6, #1
   31e5c:	beq	31e74 <myhtml_tree_active_formatting_between_last_marker@@Base+0xac>
   31e60:	add	r3, r3, #1
   31e64:	cmp	r3, #1
   31e68:	bne	31dfc <myhtml_tree_active_formatting_between_last_marker@@Base+0x34>
   31e6c:	mov	r0, #0
   31e70:	pop	{r4, r5, r6, sl, fp, pc}
   31e74:	cmp	r2, #0
   31e78:	rsbne	r1, r3, #0
   31e7c:	strne	r1, [r2]
   31e80:	popne	{r4, r5, r6, sl, fp, pc}
   31e84:	pop	{r4, r5, r6, sl, fp, pc}

00031e88 <myhtml_tree_active_formatting_reconstruction@@Base>:
   31e88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31e8c:	add	fp, sp, #28
   31e90:	sub	sp, sp, #4
   31e94:	ldr	r7, [r0, #124]	; 0x7c
   31e98:	mov	sl, r0
   31e9c:	ldr	r9, [r7]
   31ea0:	ldr	r0, [r7, #4]
   31ea4:	cmp	r0, #0
   31ea8:	beq	31f1c <myhtml_tree_active_formatting_reconstruction@@Base+0x94>
   31eac:	ldr	r0, [r7, #4]
   31eb0:	ldr	r1, [sl]
   31eb4:	sub	r0, r0, #1
   31eb8:	ldr	lr, [r1, #36]	; 0x24
   31ebc:	ldr	r6, [r9, r0, lsl #2]
   31ec0:	cmp	lr, r6
   31ec4:	beq	31f1c <myhtml_tree_active_formatting_reconstruction@@Base+0x94>
   31ec8:	ldr	r2, [r6, #4]
   31ecc:	cmp	r2, #82	; 0x52
   31ed0:	ble	31ef0 <myhtml_tree_active_formatting_reconstruction@@Base+0x68>
   31ed4:	cmp	r2, #126	; 0x7e
   31ed8:	bgt	31f10 <myhtml_tree_active_formatting_reconstruction@@Base+0x88>
   31edc:	cmp	r2, #83	; 0x53
   31ee0:	beq	31f1c <myhtml_tree_active_formatting_reconstruction@@Base+0x94>
   31ee4:	cmp	r2, #94	; 0x5e
   31ee8:	beq	31f1c <myhtml_tree_active_formatting_reconstruction@@Base+0x94>
   31eec:	b	31f24 <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   31ef0:	cmp	r2, #27
   31ef4:	bhi	31f24 <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   31ef8:	movw	r5, #512	; 0x200
   31efc:	mov	r3, #1
   31f00:	movt	r5, #2560	; 0xa00
   31f04:	tst	r5, r3, lsl r2
   31f08:	bne	31f1c <myhtml_tree_active_formatting_reconstruction@@Base+0x94>
   31f0c:	b	31f24 <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   31f10:	cmp	r2, #127	; 0x7f
   31f14:	cmpne	r2, #131	; 0x83
   31f18:	bne	31f24 <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   31f1c:	sub	sp, fp, #28
   31f20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31f24:	ldr	r2, [sl, #128]	; 0x80
   31f28:	ldr	r3, [r2]
   31f2c:	ldr	r5, [r2, #4]
   31f30:	cmp	r5, #0
   31f34:	beq	31f58 <myhtml_tree_active_formatting_reconstruction@@Base+0xd0>
   31f38:	mov	r5, #0
   31f3c:	ldr	r4, [r3, r5, lsl #2]
   31f40:	cmp	r4, r6
   31f44:	beq	31f1c <myhtml_tree_active_formatting_reconstruction@@Base+0x94>
   31f48:	ldr	r4, [r2, #4]
   31f4c:	add	r5, r5, #1
   31f50:	cmp	r5, r4
   31f54:	bcc	31f3c <myhtml_tree_active_formatting_reconstruction@@Base+0xb4>
   31f58:	mov	r5, #0
   31f5c:	cmp	r0, #0
   31f60:	beq	3200c <myhtml_tree_active_formatting_reconstruction@@Base+0x184>
   31f64:	sub	r8, r0, #1
   31f68:	ldr	r6, [r9, r8, lsl #2]
   31f6c:	cmp	lr, r6
   31f70:	beq	32008 <myhtml_tree_active_formatting_reconstruction@@Base+0x180>
   31f74:	ldr	ip, [r6, #4]
   31f78:	cmp	ip, #82	; 0x52
   31f7c:	ble	31f9c <myhtml_tree_active_formatting_reconstruction@@Base+0x114>
   31f80:	cmp	ip, #126	; 0x7e
   31f84:	bgt	31fbc <myhtml_tree_active_formatting_reconstruction@@Base+0x134>
   31f88:	cmp	ip, #83	; 0x53
   31f8c:	beq	32008 <myhtml_tree_active_formatting_reconstruction@@Base+0x180>
   31f90:	cmp	ip, #94	; 0x5e
   31f94:	bne	31fcc <myhtml_tree_active_formatting_reconstruction@@Base+0x144>
   31f98:	b	32008 <myhtml_tree_active_formatting_reconstruction@@Base+0x180>
   31f9c:	cmp	ip, #27
   31fa0:	bhi	31fcc <myhtml_tree_active_formatting_reconstruction@@Base+0x144>
   31fa4:	movw	r4, #512	; 0x200
   31fa8:	mov	r1, #1
   31fac:	movt	r4, #2560	; 0xa00
   31fb0:	tst	r4, r1, lsl ip
   31fb4:	beq	31fcc <myhtml_tree_active_formatting_reconstruction@@Base+0x144>
   31fb8:	b	32008 <myhtml_tree_active_formatting_reconstruction@@Base+0x180>
   31fbc:	cmp	ip, #127	; 0x7f
   31fc0:	beq	32008 <myhtml_tree_active_formatting_reconstruction@@Base+0x180>
   31fc4:	cmp	ip, #131	; 0x83
   31fc8:	beq	32008 <myhtml_tree_active_formatting_reconstruction@@Base+0x180>
   31fcc:	ldr	r4, [r2, #4]
   31fd0:	cmp	r4, #0
   31fd4:	beq	31ff8 <myhtml_tree_active_formatting_reconstruction@@Base+0x170>
   31fd8:	mov	r4, #0
   31fdc:	ldr	ip, [r3, r4, lsl #2]
   31fe0:	cmp	ip, r6
   31fe4:	beq	32008 <myhtml_tree_active_formatting_reconstruction@@Base+0x180>
   31fe8:	ldr	r1, [r2, #4]
   31fec:	add	r4, r4, #1
   31ff0:	cmp	r4, r1
   31ff4:	bcc	31fdc <myhtml_tree_active_formatting_reconstruction@@Base+0x154>
   31ff8:	cmp	r8, #0
   31ffc:	mov	r0, r8
   32000:	bne	31f64 <myhtml_tree_active_formatting_reconstruction@@Base+0xdc>
   32004:	b	3200c <myhtml_tree_active_formatting_reconstruction@@Base+0x184>
   32008:	mov	r5, r0
   3200c:	ldr	r0, [r7, #4]
   32010:	cmp	r5, r0
   32014:	bcs	31f1c <myhtml_tree_active_formatting_reconstruction@@Base+0x94>
   32018:	mov	r8, sp
   3201c:	ldr	r0, [r9, r5, lsl #2]
   32020:	bl	11c2c <myhtml_tree_node_clone@plt>
   32024:	mov	r6, r0
   32028:	mov	r0, sl
   3202c:	mov	r1, #0
   32030:	mov	r2, r8
   32034:	bl	11b30 <myhtml_tree_appropriate_place_inserting@plt>
   32038:	ldr	r2, [sp]
   3203c:	mov	r1, r6
   32040:	bl	11320 <myhtml_tree_node_insert_by_mode@plt>
   32044:	ldr	r4, [sl, #128]	; 0x80
   32048:	ldr	r1, [r4, #8]
   3204c:	ldr	r0, [r4, #4]
   32050:	cmp	r0, r1
   32054:	bcc	32074 <myhtml_tree_active_formatting_reconstruction@@Base+0x1ec>
   32058:	lsl	r0, r1, #1
   3205c:	lsl	r1, r1, #3
   32060:	str	r0, [r4, #8]
   32064:	ldr	r0, [r4]
   32068:	bl	10db0 <mycore_realloc@plt>
   3206c:	cmp	r0, #0
   32070:	strne	r0, [r4]
   32074:	ldr	r0, [r4]
   32078:	ldr	r1, [r4, #4]
   3207c:	str	r6, [r0, r1, lsl #2]
   32080:	ldr	r0, [r4, #4]
   32084:	add	r0, r0, #1
   32088:	str	r0, [r4, #4]
   3208c:	str	r6, [r9, r5, lsl #2]
   32090:	add	r5, r5, #1
   32094:	ldr	r0, [r7, #4]
   32098:	cmp	r5, r0
   3209c:	bcc	3201c <myhtml_tree_active_formatting_reconstruction@@Base+0x194>
   320a0:	b	31f1c <myhtml_tree_active_formatting_reconstruction@@Base+0x94>

000320a4 <myhtml_tree_adoption_agency_algorithm@@Base>:
   320a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   320a8:	add	fp, sp, #28
   320ac:	sub	sp, sp, #44	; 0x2c
   320b0:	ldr	r1, [r0, #128]	; 0x80
   320b4:	mov	r4, r0
   320b8:	mov	r8, #0
   320bc:	ldr	r0, [r1, #4]
   320c0:	cmp	r0, #0
   320c4:	beq	328f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x850>
   320c8:	mov	sl, r2
   320cc:	ldr	ip, [r1]
   320d0:	ldr	r2, [r1, #4]
   320d4:	ldr	r0, [r4, #124]	; 0x7c
   320d8:	add	r2, ip, r2, lsl #2
   320dc:	ldr	r3, [r0]
   320e0:	ldr	r2, [r2, #-4]
   320e4:	str	r3, [sp, #36]	; 0x24
   320e8:	ldr	r3, [r2, #8]
   320ec:	cmp	r3, #1
   320f0:	ldreq	r3, [r2, #4]
   320f4:	cmpeq	r3, sl
   320f8:	beq	3210c <myhtml_tree_adoption_agency_algorithm@@Base+0x68>
   320fc:	ldr	r1, [sp, #36]	; 0x24
   32100:	sub	lr, ip, #4
   32104:	mov	r2, #0
   32108:	b	3215c <myhtml_tree_adoption_agency_algorithm@@Base+0xb8>
   3210c:	ldr	r3, [sp, #36]	; 0x24
   32110:	ldr	r7, [r0, #4]
   32114:	sub	r3, r3, #4
   32118:	cmp	r7, #0
   3211c:	beq	32134 <myhtml_tree_adoption_agency_algorithm@@Base+0x90>
   32120:	ldr	r6, [r3, r7, lsl #2]
   32124:	sub	r7, r7, #1
   32128:	cmp	r6, r2
   3212c:	bne	32118 <myhtml_tree_adoption_agency_algorithm@@Base+0x74>
   32130:	b	320fc <myhtml_tree_adoption_agency_algorithm@@Base+0x58>
   32134:	ldr	r0, [r1, #4]
   32138:	cmp	r0, #0
   3213c:	ldrne	r0, [r1, #4]
   32140:	subne	r0, r0, #1
   32144:	strne	r0, [r1, #4]
   32148:	b	328f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x850>
   3214c:	ldr	r4, [sp, #28]
   32150:	ldr	sl, [sp]
   32154:	ldr	r0, [r4, #124]	; 0x7c
   32158:	ldr	r1, [r0]
   3215c:	add	r2, r2, #1
   32160:	sub	r3, r1, #4
   32164:	str	r2, [sp, #24]
   32168:	ldr	r2, [r0, #4]
   3216c:	cmp	r2, #0
   32170:	beq	328f0 <myhtml_tree_adoption_agency_algorithm@@Base+0x84c>
   32174:	ldr	r6, [r4]
   32178:	ldr	r7, [r3, r2, lsl #2]
   3217c:	mov	r8, #0
   32180:	ldr	r6, [r6, #36]	; 0x24
   32184:	cmp	r6, r7
   32188:	beq	328f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x850>
   3218c:	ldr	r5, [r7, #4]
   32190:	cmp	r5, #82	; 0x52
   32194:	ble	321b4 <myhtml_tree_adoption_agency_algorithm@@Base+0x110>
   32198:	cmp	r5, #126	; 0x7e
   3219c:	bgt	321d4 <myhtml_tree_adoption_agency_algorithm@@Base+0x130>
   321a0:	cmp	r5, #83	; 0x53
   321a4:	beq	328f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x850>
   321a8:	cmp	r5, #94	; 0x5e
   321ac:	bne	321e0 <myhtml_tree_adoption_agency_algorithm@@Base+0x13c>
   321b0:	b	328f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x850>
   321b4:	cmp	r5, #27
   321b8:	bhi	321e0 <myhtml_tree_adoption_agency_algorithm@@Base+0x13c>
   321bc:	movw	r9, #512	; 0x200
   321c0:	mov	r6, #1
   321c4:	movt	r9, #2560	; 0xa00
   321c8:	tst	r9, r6, lsl r5
   321cc:	beq	321e0 <myhtml_tree_adoption_agency_algorithm@@Base+0x13c>
   321d0:	b	328f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x850>
   321d4:	cmp	r5, #127	; 0x7f
   321d8:	cmpne	r5, #131	; 0x83
   321dc:	beq	328f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x850>
   321e0:	sub	r2, r2, #1
   321e4:	cmp	r5, sl
   321e8:	bne	3216c <myhtml_tree_adoption_agency_algorithm@@Base+0xc8>
   321ec:	ldr	r3, [r4, #128]	; 0x80
   321f0:	ldr	r6, [r3]
   321f4:	ldr	r5, [r3, #4]
   321f8:	cmp	r5, #0
   321fc:	beq	32900 <myhtml_tree_adoption_agency_algorithm@@Base+0x85c>
   32200:	add	r9, r2, #1
   32204:	mov	r5, #0
   32208:	ldr	r2, [r6, r5, lsl #2]
   3220c:	cmp	r2, r7
   32210:	beq	32228 <myhtml_tree_adoption_agency_algorithm@@Base+0x184>
   32214:	ldr	r2, [r3, #4]
   32218:	add	r5, r5, #1
   3221c:	cmp	r5, r2
   32220:	bcc	32208 <myhtml_tree_adoption_agency_algorithm@@Base+0x164>
   32224:	b	32900 <myhtml_tree_adoption_agency_algorithm@@Base+0x85c>
   32228:	str	r9, [sp, #20]
   3222c:	ldr	r9, [r7, #40]	; 0x28
   32230:	mov	r8, #0
   32234:	ldr	r1, [r9, #128]	; 0x80
   32238:	ldr	r0, [r1, #4]
   3223c:	cmp	r0, #0
   32240:	beq	328f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x850>
   32244:	str	r4, [sp, #28]
   32248:	ldr	r4, [r1]
   3224c:	rsb	r6, r0, #1
   32250:	str	lr, [sp, #12]
   32254:	str	ip, [sp, #32]
   32258:	ldr	r0, [r4, -r6, lsl #2]
   3225c:	ldr	r1, [r0, #4]
   32260:	ldr	r0, [r9, #28]
   32264:	bl	11818 <myhtml_tag_get_by_id@plt>
   32268:	ldr	r1, [r4, -r6, lsl #2]
   3226c:	cmp	r1, r7
   32270:	beq	32298 <myhtml_tree_adoption_agency_algorithm@@Base+0x1f4>
   32274:	cmp	r6, #0
   32278:	beq	328f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x850>
   3227c:	ldr	r1, [r1, #8]
   32280:	add	r6, r6, #1
   32284:	add	r0, r0, r1, lsl #2
   32288:	ldr	r0, [r0, #16]
   3228c:	ands	r0, r0, #8
   32290:	beq	32258 <myhtml_tree_adoption_agency_algorithm@@Base+0x1b4>
   32294:	b	328f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x850>
   32298:	ldr	r4, [sp, #28]
   3229c:	ldr	r0, [r4, #128]	; 0x80
   322a0:	ldr	r1, [r0, #4]
   322a4:	ldr	r2, [sp, #32]
   322a8:	cmp	r1, #0
   322ac:	ldrne	r1, [r0, #4]
   322b0:	ldr	r0, [r0, #4]
   322b4:	cmp	r5, r0
   322b8:	bcs	32954 <myhtml_tree_adoption_agency_algorithm@@Base+0x8b0>
   322bc:	mov	r9, r5
   322c0:	ldr	r0, [r2, r9, lsl #2]
   322c4:	ldr	r1, [r0, #4]
   322c8:	ldr	r0, [r4, #28]
   322cc:	bl	11818 <myhtml_tag_get_by_id@plt>
   322d0:	ldr	r2, [sp, #32]
   322d4:	ldr	r3, [r2, r9, lsl #2]
   322d8:	ldr	r1, [r3, #8]
   322dc:	add	r0, r0, r1, lsl #2
   322e0:	ldrb	r0, [r0, #16]
   322e4:	tst	r0, #2
   322e8:	bne	32304 <myhtml_tree_adoption_agency_algorithm@@Base+0x260>
   322ec:	ldr	r0, [r4, #128]	; 0x80
   322f0:	add	r9, r9, #1
   322f4:	ldr	r0, [r0, #4]
   322f8:	cmp	r9, r0
   322fc:	bcc	322c0 <myhtml_tree_adoption_agency_algorithm@@Base+0x21c>
   32300:	mov	r3, #0
   32304:	ldr	r0, [sp, #12]
   32308:	cmp	r3, #0
   3230c:	beq	32954 <myhtml_tree_adoption_agency_algorithm@@Base+0x8b0>
   32310:	ldr	r0, [r0, r5, lsl #2]
   32314:	str	sl, [sp]
   32318:	mov	ip, #0
   3231c:	mov	sl, r3
   32320:	str	r3, [sp, #16]
   32324:	str	r0, [sp, #4]
   32328:	b	32338 <myhtml_tree_adoption_agency_algorithm@@Base+0x294>
   3232c:	ldr	r2, [r0, #244]	; 0xf4
   32330:	blx	r3
   32334:	mov	ip, r8
   32338:	str	sl, [sp, #8]
   3233c:	b	32380 <myhtml_tree_adoption_agency_algorithm@@Base+0x2dc>
   32340:	ldr	r0, [r5, #4]
   32344:	sub	r0, r0, r4
   32348:	lsl	r2, r0, #2
   3234c:	sub	r0, r1, #4
   32350:	bl	10fb4 <memmove@plt>
   32354:	ldr	r2, [sp, #28]
   32358:	mov	ip, r8
   3235c:	ldr	r0, [r2, #124]	; 0x7c
   32360:	ldr	r1, [r0, #4]
   32364:	sub	r1, r1, #1
   32368:	str	r1, [r0, #4]
   3236c:	ldr	r0, [sp, #20]
   32370:	cmp	r4, r0
   32374:	mov	r4, r2
   32378:	subcc	r0, r0, #1
   3237c:	str	r0, [sp, #20]
   32380:	ldr	lr, [sp, #32]
   32384:	b	3238c <myhtml_tree_adoption_agency_algorithm@@Base+0x2e8>
   32388:	mov	ip, r8
   3238c:	ldr	r0, [r4, #128]	; 0x80
   32390:	ldr	r3, [r0]
   32394:	ldr	r1, [r0, #4]
   32398:	cmp	r1, #0
   3239c:	beq	323c8 <myhtml_tree_adoption_agency_algorithm@@Base+0x324>
   323a0:	mov	r1, #0
   323a4:	ldr	r6, [r3, r1, lsl #2]
   323a8:	cmp	r6, sl
   323ac:	beq	323c4 <myhtml_tree_adoption_agency_algorithm@@Base+0x320>
   323b0:	ldr	r6, [r0, #4]
   323b4:	add	r1, r1, #1
   323b8:	cmp	r1, r6
   323bc:	bcc	323a4 <myhtml_tree_adoption_agency_algorithm@@Base+0x300>
   323c0:	b	323c8 <myhtml_tree_adoption_agency_algorithm@@Base+0x324>
   323c4:	mov	r9, r1
   323c8:	mov	r8, #0
   323cc:	cmp	r9, #0
   323d0:	beq	328f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x850>
   323d4:	sub	r9, r9, #1
   323d8:	ldr	sl, [lr, r9, lsl #2]
   323dc:	cmp	sl, r7
   323e0:	beq	3255c <myhtml_tree_adoption_agency_algorithm@@Base+0x4b8>
   323e4:	ldr	r5, [r4, #124]	; 0x7c
   323e8:	add	r8, ip, #1
   323ec:	ldr	r4, [r5, #4]
   323f0:	ldr	r6, [r5]
   323f4:	add	r1, r6, r4, lsl #2
   323f8:	sub	r6, r6, #4
   323fc:	add	r1, r1, #4
   32400:	cmp	r4, #0
   32404:	beq	32420 <myhtml_tree_adoption_agency_algorithm@@Base+0x37c>
   32408:	ldr	r2, [r6, r4, lsl #2]
   3240c:	sub	r1, r1, #4
   32410:	sub	r4, r4, #1
   32414:	cmp	r2, sl
   32418:	bne	32400 <myhtml_tree_adoption_agency_algorithm@@Base+0x35c>
   3241c:	b	32480 <myhtml_tree_adoption_agency_algorithm@@Base+0x3dc>
   32420:	ldr	r2, [r0, #4]
   32424:	ldr	r4, [sp, #28]
   32428:	add	r1, r3, r2, lsl #2
   3242c:	add	r3, r1, #4
   32430:	cmp	r2, #0
   32434:	beq	32388 <myhtml_tree_adoption_agency_algorithm@@Base+0x2e4>
   32438:	sub	r1, r3, #4
   3243c:	ldr	r3, [r3, #-8]
   32440:	sub	r2, r2, #1
   32444:	cmp	r3, sl
   32448:	mov	r3, r1
   3244c:	bne	32430 <myhtml_tree_adoption_agency_algorithm@@Base+0x38c>
   32450:	ldr	r0, [r0, #4]
   32454:	sub	r0, r0, r2
   32458:	lsl	r2, r0, #2
   3245c:	sub	r0, r1, #4
   32460:	bl	10fb4 <memmove@plt>
   32464:	ldr	r0, [r4, #128]	; 0x80
   32468:	ldr	lr, [sp, #32]
   3246c:	mov	ip, r8
   32470:	ldr	r1, [r0, #4]
   32474:	sub	r1, r1, #1
   32478:	str	r1, [r0, #4]
   3247c:	b	3238c <myhtml_tree_adoption_agency_algorithm@@Base+0x2e8>
   32480:	cmp	ip, #3
   32484:	bcs	32340 <myhtml_tree_adoption_agency_algorithm@@Base+0x29c>
   32488:	mov	r0, sl
   3248c:	bl	11c2c <myhtml_tree_node_clone@plt>
   32490:	mov	sl, r0
   32494:	mov	r0, #1
   32498:	ldr	r1, [sp, #8]
   3249c:	str	r0, [sl, #8]
   324a0:	ldr	r0, [sp, #36]	; 0x24
   324a4:	str	sl, [r0, r4, lsl #2]
   324a8:	ldr	r0, [sp, #32]
   324ac:	str	sl, [r0, r9, lsl #2]
   324b0:	ldr	r0, [sp, #16]
   324b4:	cmp	r1, r0
   324b8:	ldr	r0, [sp, #20]
   324bc:	addeq	r0, r4, #1
   324c0:	ldr	r4, [sp, #28]
   324c4:	str	r0, [sp, #20]
   324c8:	ldr	r0, [r1, #24]
   324cc:	cmp	r0, #0
   324d0:	beq	32528 <myhtml_tree_adoption_agency_algorithm@@Base+0x484>
   324d4:	ldr	r6, [r1, #16]
   324d8:	ldr	r2, [r1, #12]
   324dc:	cmp	r6, #0
   324e0:	streq	r2, [r0, #28]
   324e4:	strne	r2, [r6, #12]
   324e8:	ldrne	r2, [r1, #12]
   324ec:	add	r3, r2, #16
   324f0:	cmp	r2, #0
   324f4:	addeq	r3, r0, #20
   324f8:	str	r6, [r3]
   324fc:	ldr	r0, [r1, #40]	; 0x28
   32500:	ldr	r3, [r0, #240]	; 0xf0
   32504:	cmp	r3, #0
   32508:	beq	32518 <myhtml_tree_adoption_agency_algorithm@@Base+0x474>
   3250c:	ldr	r2, [r0, #248]	; 0xf8
   32510:	blx	r3
   32514:	ldr	r1, [sp, #8]
   32518:	mov	r0, #0
   3251c:	str	r0, [r1, #12]
   32520:	str	r0, [r1, #16]
   32524:	str	r0, [r1, #24]
   32528:	ldr	r0, [sl, #28]
   3252c:	mov	ip, r8
   32530:	cmp	r0, #0
   32534:	streq	r1, [sl, #20]
   32538:	strne	r1, [r0, #16]
   3253c:	strne	r0, [r1, #12]
   32540:	str	sl, [r1, #24]
   32544:	str	r1, [sl, #28]
   32548:	ldr	r0, [r1, #40]	; 0x28
   3254c:	ldr	r3, [r0, #236]	; 0xec
   32550:	cmp	r3, #0
   32554:	beq	32338 <myhtml_tree_adoption_agency_algorithm@@Base+0x294>
   32558:	b	3232c <myhtml_tree_adoption_agency_algorithm@@Base+0x288>
   3255c:	ldr	r5, [sp, #8]
   32560:	ldr	r6, [sp, #20]
   32564:	ldr	r0, [r5, #24]
   32568:	cmp	r0, #0
   3256c:	beq	325c8 <myhtml_tree_adoption_agency_algorithm@@Base+0x524>
   32570:	ldr	r1, [r5, #16]
   32574:	ldr	r2, [r5, #12]
   32578:	cmp	r1, #0
   3257c:	streq	r2, [r0, #28]
   32580:	strne	r2, [r1, #12]
   32584:	ldrne	r2, [r5, #12]
   32588:	add	r3, r2, #16
   3258c:	cmp	r2, #0
   32590:	addeq	r3, r0, #20
   32594:	str	r1, [r3]
   32598:	ldr	r0, [r5, #40]	; 0x28
   3259c:	ldr	r3, [r0, #240]	; 0xf0
   325a0:	cmp	r3, #0
   325a4:	beq	325b8 <myhtml_tree_adoption_agency_algorithm@@Base+0x514>
   325a8:	ldr	r2, [r0, #248]	; 0xf8
   325ac:	mov	r1, r5
   325b0:	blx	r3
   325b4:	ldr	r5, [sp, #8]
   325b8:	mov	r0, #0
   325bc:	str	r0, [r5, #12]
   325c0:	str	r0, [r5, #16]
   325c4:	str	r0, [r5, #24]
   325c8:	ldr	r1, [sp, #4]
   325cc:	mov	r0, r4
   325d0:	sub	r2, fp, #32
   325d4:	bl	11b30 <myhtml_tree_appropriate_place_inserting@plt>
   325d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   325dc:	mov	r1, r5
   325e0:	bl	11320 <myhtml_tree_node_insert_by_mode@plt>
   325e4:	mov	r0, r7
   325e8:	bl	11c2c <myhtml_tree_node_clone@plt>
   325ec:	mov	sl, r0
   325f0:	mov	r0, #1
   325f4:	str	r0, [sl, #8]
   325f8:	ldr	r0, [sp, #16]
   325fc:	ldr	r5, [r0, #20]
   32600:	cmp	r5, #0
   32604:	beq	326d4 <myhtml_tree_adoption_agency_algorithm@@Base+0x630>
   32608:	ldr	r4, [r5, #16]
   3260c:	cmp	r4, #0
   32610:	beq	32620 <myhtml_tree_adoption_agency_algorithm@@Base+0x57c>
   32614:	add	r1, r4, #12
   32618:	add	r0, r5, #12
   3261c:	b	32634 <myhtml_tree_adoption_agency_algorithm@@Base+0x590>
   32620:	ldr	r1, [r5, #24]
   32624:	add	r0, r5, #12
   32628:	cmp	r1, #0
   3262c:	beq	3263c <myhtml_tree_adoption_agency_algorithm@@Base+0x598>
   32630:	add	r1, r1, #28
   32634:	ldr	r2, [r0]
   32638:	str	r2, [r1]
   3263c:	ldr	r0, [r0]
   32640:	cmp	r0, #0
   32644:	beq	32650 <myhtml_tree_adoption_agency_algorithm@@Base+0x5ac>
   32648:	add	r0, r0, #16
   3264c:	b	32660 <myhtml_tree_adoption_agency_algorithm@@Base+0x5bc>
   32650:	ldr	r0, [r5, #24]
   32654:	cmp	r0, #0
   32658:	beq	32664 <myhtml_tree_adoption_agency_algorithm@@Base+0x5c0>
   3265c:	add	r0, r0, #20
   32660:	str	r4, [r0]
   32664:	ldr	r0, [r5, #40]	; 0x28
   32668:	ldr	r3, [r0, #240]	; 0xf0
   3266c:	cmp	r3, #0
   32670:	beq	32680 <myhtml_tree_adoption_agency_algorithm@@Base+0x5dc>
   32674:	ldr	r2, [r0, #248]	; 0xf8
   32678:	mov	r1, r5
   3267c:	blx	r3
   32680:	mov	r0, #0
   32684:	str	r0, [r5, #12]
   32688:	str	r0, [r5, #16]
   3268c:	str	r0, [r5, #24]
   32690:	ldr	r0, [sl, #28]
   32694:	cmp	r0, #0
   32698:	streq	r5, [sl, #20]
   3269c:	strne	r5, [r0, #16]
   326a0:	strne	r0, [r5, #12]
   326a4:	str	sl, [r5, #24]
   326a8:	str	r5, [sl, #28]
   326ac:	ldr	r0, [r5, #40]	; 0x28
   326b0:	ldr	r3, [r0, #236]	; 0xec
   326b4:	cmp	r3, #0
   326b8:	beq	326c8 <myhtml_tree_adoption_agency_algorithm@@Base+0x624>
   326bc:	ldr	r2, [r0, #244]	; 0xf4
   326c0:	mov	r1, r5
   326c4:	blx	r3
   326c8:	cmp	r4, #0
   326cc:	mov	r5, r4
   326d0:	bne	32608 <myhtml_tree_adoption_agency_algorithm@@Base+0x564>
   326d4:	ldr	r1, [sp, #16]
   326d8:	ldr	r4, [sp, #28]
   326dc:	ldr	r0, [r1, #28]
   326e0:	cmp	r0, #0
   326e4:	streq	sl, [r1, #20]
   326e8:	strne	sl, [r0, #16]
   326ec:	strne	r0, [sl, #12]
   326f0:	str	r1, [sl, #24]
   326f4:	str	sl, [r1, #28]
   326f8:	ldr	r0, [sl, #40]	; 0x28
   326fc:	ldr	r3, [r0, #236]	; 0xec
   32700:	cmp	r3, #0
   32704:	beq	32714 <myhtml_tree_adoption_agency_algorithm@@Base+0x670>
   32708:	ldr	r2, [r0, #244]	; 0xf4
   3270c:	mov	r1, sl
   32710:	blx	r3
   32714:	ldr	r0, [r4, #124]	; 0x7c
   32718:	ldr	r5, [r0, #4]
   3271c:	ldr	r1, [r0]
   32720:	add	r1, r1, r5, lsl #2
   32724:	add	r2, r1, #4
   32728:	cmp	r5, #0
   3272c:	beq	328f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x850>
   32730:	sub	r1, r2, #4
   32734:	ldr	r2, [r2, #-8]
   32738:	sub	r5, r5, #1
   3273c:	cmp	r2, r7
   32740:	mov	r2, r1
   32744:	bne	32728 <myhtml_tree_adoption_agency_algorithm@@Base+0x684>
   32748:	ldr	r0, [r0, #4]
   3274c:	sub	r0, r0, r5
   32750:	lsl	r2, r0, #2
   32754:	sub	r0, r1, #4
   32758:	bl	10fb4 <memmove@plt>
   3275c:	ldr	r4, [r4, #124]	; 0x7c
   32760:	cmp	r5, r6
   32764:	subcc	r6, r6, #1
   32768:	ldr	r0, [r4, #4]
   3276c:	sub	r0, r0, #1
   32770:	str	r0, [r4, #4]
   32774:	ldr	r1, [r4, #8]
   32778:	ldr	r0, [r4, #4]
   3277c:	cmp	r0, r1
   32780:	bcc	327a0 <myhtml_tree_adoption_agency_algorithm@@Base+0x6fc>
   32784:	lsl	r0, r1, #1
   32788:	lsl	r1, r1, #3
   3278c:	str	r0, [r4, #8]
   32790:	ldr	r0, [r4]
   32794:	bl	10db0 <mycore_realloc@plt>
   32798:	cmp	r0, #0
   3279c:	strne	r0, [r4]
   327a0:	ldr	r0, [r4]
   327a4:	ldr	r2, [r4, #4]
   327a8:	add	r1, r0, r6, lsl #2
   327ac:	sub	r2, r2, r6
   327b0:	add	r0, r1, #4
   327b4:	lsl	r2, r2, #2
   327b8:	bl	10fb4 <memmove@plt>
   327bc:	ldr	r0, [r4]
   327c0:	str	sl, [r0, r6, lsl #2]
   327c4:	ldr	r0, [r4, #4]
   327c8:	add	r0, r0, #1
   327cc:	str	r0, [r4, #4]
   327d0:	ldr	r4, [sp, #28]
   327d4:	ldr	r6, [r4, #128]	; 0x80
   327d8:	mov	r5, r6
   327dc:	ldr	r2, [r5, #4]!
   327e0:	ldr	r0, [r6]
   327e4:	add	r1, r0, r2, lsl #2
   327e8:	add	r3, r1, #4
   327ec:	cmp	r2, #0
   327f0:	beq	32838 <myhtml_tree_adoption_agency_algorithm@@Base+0x794>
   327f4:	sub	r1, r3, #4
   327f8:	ldr	r3, [r3, #-8]
   327fc:	sub	r2, r2, #1
   32800:	cmp	r3, r7
   32804:	mov	r3, r1
   32808:	bne	327ec <myhtml_tree_adoption_agency_algorithm@@Base+0x748>
   3280c:	ldr	r0, [r5]
   32810:	sub	r0, r0, r2
   32814:	lsl	r2, r0, #2
   32818:	sub	r0, r1, #4
   3281c:	bl	10fb4 <memmove@plt>
   32820:	ldr	r6, [r4, #128]	; 0x80
   32824:	mov	r5, r6
   32828:	ldr	r0, [r5, #4]!
   3282c:	sub	r0, r0, #1
   32830:	str	r0, [r5]
   32834:	ldr	r0, [r6]
   32838:	ldr	r1, [r6, #4]
   3283c:	ldr	ip, [sp, #32]
   32840:	ldr	lr, [sp, #12]
   32844:	cmp	r1, #0
   32848:	beq	328e0 <myhtml_tree_adoption_agency_algorithm@@Base+0x83c>
   3284c:	mov	r4, #0
   32850:	ldr	r1, [r0, r4, lsl #2]
   32854:	ldr	r2, [r5]
   32858:	ldr	r3, [sp, #16]
   3285c:	cmp	r1, r3
   32860:	beq	32874 <myhtml_tree_adoption_agency_algorithm@@Base+0x7d0>
   32864:	add	r4, r4, #1
   32868:	cmp	r4, r2
   3286c:	bcc	32850 <myhtml_tree_adoption_agency_algorithm@@Base+0x7ac>
   32870:	b	328e0 <myhtml_tree_adoption_agency_algorithm@@Base+0x83c>
   32874:	ldr	r1, [r6, #8]
   32878:	cmp	r2, r1
   3287c:	bcc	328a0 <myhtml_tree_adoption_agency_algorithm@@Base+0x7fc>
   32880:	lsl	r0, r1, #1
   32884:	lsl	r1, r1, #3
   32888:	str	r0, [r6, #8]
   3288c:	ldr	r0, [r6]
   32890:	bl	10db0 <mycore_realloc@plt>
   32894:	cmp	r0, #0
   32898:	strne	r0, [r6]
   3289c:	ldreq	r0, [r6]
   328a0:	ldr	r2, [r5]
   328a4:	add	r1, r0, r4, lsl #2
   328a8:	add	r0, r1, #8
   328ac:	add	r1, r1, #4
   328b0:	sub	r2, r2, #1
   328b4:	sub	r2, r2, r4
   328b8:	lsl	r2, r2, #2
   328bc:	bl	10fb4 <memmove@plt>
   328c0:	ldr	r0, [r6]
   328c4:	add	r0, r0, r4, lsl #2
   328c8:	str	sl, [r0, #4]
   328cc:	ldr	r0, [r5]
   328d0:	add	r0, r0, #1
   328d4:	str	r0, [r5]
   328d8:	ldr	ip, [sp, #32]
   328dc:	ldr	lr, [sp, #12]
   328e0:	ldr	r2, [sp, #24]
   328e4:	cmp	r2, #7
   328e8:	bls	3214c <myhtml_tree_adoption_agency_algorithm@@Base+0xa8>
   328ec:	b	328f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x850>
   328f0:	mov	r8, #1
   328f4:	mov	r0, r8
   328f8:	sub	sp, fp, #28
   328fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32900:	ldr	r2, [r0, #4]
   32904:	add	r1, r1, r2, lsl #2
   32908:	add	r3, r1, #4
   3290c:	cmp	r2, #0
   32910:	beq	328f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x850>
   32914:	sub	r1, r3, #4
   32918:	ldr	r3, [r3, #-8]
   3291c:	sub	r2, r2, #1
   32920:	cmp	r3, r7
   32924:	mov	r3, r1
   32928:	bne	3290c <myhtml_tree_adoption_agency_algorithm@@Base+0x868>
   3292c:	ldr	r0, [r0, #4]
   32930:	sub	r0, r0, r2
   32934:	lsl	r2, r0, #2
   32938:	sub	r0, r1, #4
   3293c:	bl	10fb4 <memmove@plt>
   32940:	ldr	r0, [r4, #124]	; 0x7c
   32944:	ldr	r1, [r0, #4]
   32948:	sub	r1, r1, #1
   3294c:	str	r1, [r0, #4]
   32950:	b	328f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x850>
   32954:	ldr	r0, [r4, #128]	; 0x80
   32958:	ldr	r1, [r0, #4]
   3295c:	cmp	r1, #0
   32960:	beq	32978 <myhtml_tree_adoption_agency_algorithm@@Base+0x8d4>
   32964:	ldr	r1, [r0]
   32968:	ldr	r2, [r0, #4]
   3296c:	add	r1, r1, r2, lsl #2
   32970:	ldr	r1, [r1, #-4]
   32974:	b	3297c <myhtml_tree_adoption_agency_algorithm@@Base+0x8d8>
   32978:	mov	r1, #0
   3297c:	ldr	r2, [r0, #4]
   32980:	cmp	r2, #0
   32984:	ldrne	r2, [r0, #4]
   32988:	subne	r2, r2, #1
   3298c:	strne	r2, [r0, #4]
   32990:	cmp	r1, r7
   32994:	bne	32958 <myhtml_tree_adoption_agency_algorithm@@Base+0x8b4>
   32998:	ldr	r0, [r4, #124]	; 0x7c
   3299c:	mov	r8, #0
   329a0:	ldr	r2, [r0, #4]
   329a4:	ldr	r1, [r0]
   329a8:	add	r1, r1, r2, lsl #2
   329ac:	add	r3, r1, #4
   329b0:	cmp	r2, #0
   329b4:	beq	328f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x850>
   329b8:	sub	r1, r3, #4
   329bc:	ldr	r3, [r3, #-8]
   329c0:	sub	r2, r2, #1
   329c4:	cmp	r3, r7
   329c8:	mov	r3, r1
   329cc:	bne	329b0 <myhtml_tree_adoption_agency_algorithm@@Base+0x90c>
   329d0:	b	3292c <myhtml_tree_adoption_agency_algorithm@@Base+0x888>

000329d4 <myhtml_tree_appropriate_place_inserting_in_tree@@Base>:
   329d4:	push	{r4, sl, fp, lr}
   329d8:	add	fp, sp, #8
   329dc:	mov	r2, #1
   329e0:	str	r2, [r1]
   329e4:	ldr	r2, [r0, #40]	; 0x28
   329e8:	ldrb	r2, [r2, #188]	; 0xbc
   329ec:	cmp	r2, #0
   329f0:	beq	32a64 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x90>
   329f4:	ldr	r2, [r0, #8]
   329f8:	cmp	r2, #1
   329fc:	bne	32a6c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x98>
   32a00:	ldr	r2, [r0, #4]
   32a04:	sub	r2, r2, #125	; 0x7d
   32a08:	cmp	r2, #10
   32a0c:	bhi	32a64 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x90>
   32a10:	mov	ip, #1
   32a14:	movw	r3, #1187	; 0x4a3
   32a18:	tst	r3, ip, lsl r2
   32a1c:	beq	32a64 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x90>
   32a20:	mov	lr, r0
   32a24:	ldr	lr, [lr, #24]
   32a28:	cmp	lr, #0
   32a2c:	ldrne	r2, [lr, #4]
   32a30:	cmpne	r2, #128	; 0x80
   32a34:	bne	32a24 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x50>
   32a38:	mov	r3, r0
   32a3c:	ldr	r3, [r3, #24]
   32a40:	cmp	r3, #0
   32a44:	beq	32a78 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xa4>
   32a48:	ldr	r2, [r3, #4]
   32a4c:	cmp	r2, #125	; 0x7d
   32a50:	bne	32a3c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x68>
   32a54:	mov	ip, #0
   32a58:	cmp	lr, #0
   32a5c:	bne	32a84 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xb0>
   32a60:	b	32aac <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xd8>
   32a64:	mov	r2, #0
   32a68:	str	r2, [r1]
   32a6c:	mov	lr, r0
   32a70:	mov	r0, lr
   32a74:	pop	{r4, sl, fp, pc}
   32a78:	mov	ip, #1
   32a7c:	cmp	lr, #0
   32a80:	beq	32aac <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xd8>
   32a84:	mov	r2, lr
   32a88:	ldr	r2, [r2, #24]
   32a8c:	cmp	r2, #0
   32a90:	ldrne	r4, [r2, #4]
   32a94:	cmpne	r4, #125	; 0x7d
   32a98:	bne	32a88 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xb4>
   32a9c:	cmp	r3, #0
   32aa0:	beq	32adc <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x108>
   32aa4:	cmp	r3, r2
   32aa8:	bne	32adc <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x108>
   32aac:	cmp	ip, #0
   32ab0:	bne	32a6c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x98>
   32ab4:	ldr	r2, [r3, #24]
   32ab8:	mov	lr, r0
   32abc:	cmp	r2, #0
   32ac0:	beq	32a70 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x9c>
   32ac4:	ldr	r0, [r3, #12]
   32ac8:	mov	lr, r3
   32acc:	cmp	r0, #0
   32ad0:	beq	32a70 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x9c>
   32ad4:	mov	r2, #2
   32ad8:	b	32a68 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x94>
   32adc:	mov	r0, #0
   32ae0:	str	r0, [r1]
   32ae4:	mov	r0, lr
   32ae8:	pop	{r4, sl, fp, pc}

00032aec <myhtml_tree_template_insertion_append@@Base>:
   32aec:	push	{r4, r5, fp, lr}
   32af0:	add	fp, sp, #8
   32af4:	ldr	r5, [r0, #140]	; 0x8c
   32af8:	mov	r4, r1
   32afc:	ldmib	r5, {r0, r1}
   32b00:	cmp	r0, r1
   32b04:	bcc	32b24 <myhtml_tree_template_insertion_append@@Base+0x38>
   32b08:	lsl	r0, r1, #1
   32b0c:	lsl	r1, r1, #3
   32b10:	str	r0, [r5, #8]
   32b14:	ldr	r0, [r5]
   32b18:	bl	10db0 <mycore_realloc@plt>
   32b1c:	cmp	r0, #0
   32b20:	strne	r0, [r5]
   32b24:	ldm	r5, {r0, r1}
   32b28:	str	r4, [r0, r1, lsl #2]
   32b2c:	ldr	r0, [r5, #4]
   32b30:	add	r0, r0, #1
   32b34:	str	r0, [r5, #4]
   32b38:	pop	{r4, r5, fp, pc}

00032b3c <myhtml_tree_template_insertion_pop@@Base>:
   32b3c:	ldr	r0, [r0, #140]	; 0x8c
   32b40:	ldr	r1, [r0, #4]
   32b44:	cmp	r1, #0
   32b48:	subne	r1, r1, #1
   32b4c:	strne	r1, [r0, #4]
   32b50:	bx	lr

00032b54 <myhtml_tree_template_insertion_length@@Base>:
   32b54:	ldr	r0, [r0, #140]	; 0x8c
   32b58:	ldr	r0, [r0, #4]
   32b5c:	bx	lr

00032b60 <myhtml_tree_token_list_append@@Base>:
   32b60:	push	{r4, r5, fp, lr}
   32b64:	add	fp, sp, #8
   32b68:	mov	r4, r0
   32b6c:	mov	r5, r1
   32b70:	ldr	r0, [r0, #4]
   32b74:	ldr	r1, [r4, #8]
   32b78:	cmp	r0, r1
   32b7c:	bcc	32b9c <myhtml_tree_token_list_append@@Base+0x3c>
   32b80:	lsl	r0, r1, #1
   32b84:	lsl	r1, r1, #3
   32b88:	str	r0, [r4, #8]
   32b8c:	ldr	r0, [r4]
   32b90:	bl	10db0 <mycore_realloc@plt>
   32b94:	cmp	r0, #0
   32b98:	strne	r0, [r4]
   32b9c:	ldm	r4, {r0, r1}
   32ba0:	str	r5, [r0, r1, lsl #2]
   32ba4:	add	r0, r1, #1
   32ba8:	str	r0, [r4, #4]
   32bac:	pop	{r4, r5, fp, pc}

00032bb0 <myhtml_tree_token_list_append_after_index@@Base>:
   32bb0:	push	{r4, r5, r6, r7, fp, lr}
   32bb4:	add	fp, sp, #16
   32bb8:	mov	r4, r0
   32bbc:	mov	r7, r1
   32bc0:	ldr	r0, [r0, #4]
   32bc4:	mov	r6, r2
   32bc8:	ldr	r1, [r4, #8]
   32bcc:	cmp	r0, r1
   32bd0:	bcc	32bf0 <myhtml_tree_token_list_append_after_index@@Base+0x40>
   32bd4:	lsl	r0, r1, #1
   32bd8:	lsl	r1, r1, #3
   32bdc:	str	r0, [r4, #8]
   32be0:	ldr	r0, [r4]
   32be4:	bl	10db0 <mycore_realloc@plt>
   32be8:	cmp	r0, #0
   32bec:	strne	r0, [r4]
   32bf0:	ldr	r0, [r4, #4]
   32bf4:	ldr	r1, [r4]
   32bf8:	cmp	r0, r6
   32bfc:	bcs	32c20 <myhtml_tree_token_list_append_after_index@@Base+0x70>
   32c00:	ldr	r2, [r1, r6, lsl #2]
   32c04:	mov	r3, r6
   32c08:	add	r5, r1, r3, lsl #2
   32c0c:	add	r3, r3, #1
   32c10:	cmp	r3, r0
   32c14:	str	r2, [r5, #4]
   32c18:	bhi	32c08 <myhtml_tree_token_list_append_after_index@@Base+0x58>
   32c1c:	ldr	r1, [r4]
   32c20:	add	r1, r1, r6, lsl #2
   32c24:	add	r0, r0, #1
   32c28:	str	r7, [r1, #4]
   32c2c:	str	r0, [r4, #4]
   32c30:	pop	{r4, r5, r6, r7, fp, pc}

00032c34 <myhtml_tree_token_list_current_node@@Base>:
   32c34:	ldr	r1, [r0, #4]
   32c38:	cmp	r1, #0
   32c3c:	moveq	r0, #0
   32c40:	ldrne	r0, [r0]
   32c44:	addne	r0, r0, r1, lsl #2
   32c48:	ldrne	r0, [r0, #-4]
   32c4c:	bx	lr

00032c50 <myhtml_tree_tags_close_p@@Base>:
   32c50:	push	{r4, sl, fp, lr}
   32c54:	add	fp, sp, #8
   32c58:	mov	r1, #99	; 0x63
   32c5c:	mov	r2, #1
   32c60:	mov	r4, r0
   32c64:	bl	115c0 <myhtml_tree_generate_implied_end_tags@plt>
   32c68:	ldr	r0, [r4, #128]	; 0x80
   32c6c:	ldr	r1, [r0, #4]
   32c70:	cmp	r1, #0
   32c74:	beq	32c8c <myhtml_tree_tags_close_p@@Base+0x3c>
   32c78:	ldr	r1, [r0]
   32c7c:	ldr	r0, [r0, #4]
   32c80:	add	r0, r1, r0, lsl #2
   32c84:	ldr	r0, [r0, #-4]
   32c88:	b	32c90 <myhtml_tree_tags_close_p@@Base+0x40>
   32c8c:	mov	r0, #0
   32c90:	mov	r1, #99	; 0x63
   32c94:	bl	11884 <myhtml_is_html_node@plt>
   32c98:	ldr	r0, [r4, #128]	; 0x80
   32c9c:	ldr	r1, [r0]
   32ca0:	ldr	r2, [r0, #4]
   32ca4:	cmp	r2, #0
   32ca8:	popeq	{r4, sl, fp, pc}
   32cac:	ldr	r2, [r0, #4]
   32cb0:	sub	r2, r2, #1
   32cb4:	str	r2, [r0, #4]
   32cb8:	ldr	r2, [r0, #4]
   32cbc:	ldr	r2, [r1, r2, lsl #2]
   32cc0:	ldr	r2, [r2, #4]
   32cc4:	cmp	r2, #99	; 0x63
   32cc8:	bne	32ca0 <myhtml_tree_tags_close_p@@Base+0x50>
   32ccc:	ldr	r2, [r0, #4]
   32cd0:	ldr	r2, [r1, r2, lsl #2]
   32cd4:	ldr	r2, [r2, #8]
   32cd8:	cmp	r2, #1
   32cdc:	bne	32ca0 <myhtml_tree_tags_close_p@@Base+0x50>
   32ce0:	pop	{r4, sl, fp, pc}

00032ce4 <myhtml_tree_generic_raw_text_element_parsing_algorithm@@Base>:
   32ce4:	push	{r4, sl, fp, lr}
   32ce8:	add	fp, sp, #8
   32cec:	mov	r2, #1
   32cf0:	mov	r4, r0
   32cf4:	bl	119ec <myhtml_tree_node_insert_by_token@plt>
   32cf8:	ldr	r1, [r4, #168]	; 0xa8
   32cfc:	mov	r2, #7
   32d00:	str	r2, [r4, #168]	; 0xa8
   32d04:	str	r1, [r4, #172]	; 0xac
   32d08:	pop	{r4, sl, fp, pc}

00032d0c <myhtml_tree_clear_stack_back_table_context@@Base>:
   32d0c:	ldr	r0, [r0, #128]	; 0x80
   32d10:	ldr	r1, [r0, #4]
   32d14:	cmp	r1, #0
   32d18:	bne	32d24 <myhtml_tree_clear_stack_back_table_context@@Base+0x18>
   32d1c:	mov	r1, #0
   32d20:	b	32d44 <myhtml_tree_clear_stack_back_table_context@@Base+0x38>
   32d24:	ldr	r1, [r0]
   32d28:	ldr	r2, [r0, #4]
   32d2c:	add	r1, r1, r2, lsl #2
   32d30:	ldr	r1, [r1, #-4]
   32d34:	b	32d44 <myhtml_tree_clear_stack_back_table_context@@Base+0x38>
   32d38:	cmp	r2, #125	; 0x7d
   32d3c:	beq	32d54 <myhtml_tree_clear_stack_back_table_context@@Base+0x48>
   32d40:	b	32d60 <myhtml_tree_clear_stack_back_table_context@@Base+0x54>
   32d44:	ldr	r2, [r1, #4]
   32d48:	cmp	r2, #65	; 0x41
   32d4c:	cmpne	r2, #128	; 0x80
   32d50:	bne	32d38 <myhtml_tree_clear_stack_back_table_context@@Base+0x2c>
   32d54:	ldr	r1, [r1, #8]
   32d58:	cmp	r1, #1
   32d5c:	bxeq	lr
   32d60:	ldr	r1, [r0, #4]
   32d64:	cmp	r1, #0
   32d68:	ldrne	r1, [r0, #4]
   32d6c:	subne	r1, r1, #1
   32d70:	strne	r1, [r0, #4]
   32d74:	mov	r1, #0
   32d78:	ldr	r2, [r0, #4]
   32d7c:	cmp	r2, #0
   32d80:	bne	32d24 <myhtml_tree_clear_stack_back_table_context@@Base+0x18>
   32d84:	b	32d44 <myhtml_tree_clear_stack_back_table_context@@Base+0x38>

00032d88 <myhtml_tree_clear_stack_back_table_body_context@@Base>:
   32d88:	ldr	r0, [r0, #128]	; 0x80
   32d8c:	ldr	r1, [r0, #4]
   32d90:	cmp	r1, #0
   32d94:	beq	32dac <myhtml_tree_clear_stack_back_table_body_context@@Base+0x24>
   32d98:	ldr	r1, [r0]
   32d9c:	ldr	r2, [r0, #4]
   32da0:	add	r1, r1, r2, lsl #2
   32da4:	ldr	r3, [r1, #-4]
   32da8:	b	32db0 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x28>
   32dac:	mov	r3, #0
   32db0:	push	{fp, lr}
   32db4:	mov	fp, sp
   32db8:	mov	ip, #1
   32dbc:	mov	lr, #85	; 0x55
   32dc0:	b	32dd4 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x4c>
   32dc4:	ldr	r1, [r0]
   32dc8:	ldr	r2, [r0, #4]
   32dcc:	add	r1, r1, r2, lsl #2
   32dd0:	ldr	r3, [r1, #-4]
   32dd4:	ldr	r1, [r3, #4]
   32dd8:	sub	r2, r1, #126	; 0x7e
   32ddc:	cmp	r2, #6
   32de0:	bhi	32dec <myhtml_tree_clear_stack_back_table_body_context@@Base+0x64>
   32de4:	tst	lr, ip, lsl r2
   32de8:	bne	32df4 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x6c>
   32dec:	cmp	r1, #65	; 0x41
   32df0:	bne	32e00 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x78>
   32df4:	ldr	r1, [r3, #8]
   32df8:	cmp	r1, #1
   32dfc:	popeq	{fp, pc}
   32e00:	ldr	r1, [r0, #4]
   32e04:	mov	r3, #0
   32e08:	cmp	r1, #0
   32e0c:	ldrne	r1, [r0, #4]
   32e10:	subne	r1, r1, #1
   32e14:	strne	r1, [r0, #4]
   32e18:	ldr	r1, [r0, #4]
   32e1c:	cmp	r1, #0
   32e20:	beq	32dd4 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x4c>
   32e24:	b	32dc4 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x3c>

00032e28 <myhtml_tree_clear_stack_back_table_row_context@@Base>:
   32e28:	ldr	r0, [r0, #128]	; 0x80
   32e2c:	ldr	r1, [r0, #4]
   32e30:	cmp	r1, #0
   32e34:	bne	32e40 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x18>
   32e38:	mov	r1, #0
   32e3c:	b	32e60 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x38>
   32e40:	ldr	r1, [r0]
   32e44:	ldr	r2, [r0, #4]
   32e48:	add	r1, r1, r2, lsl #2
   32e4c:	ldr	r1, [r1, #-4]
   32e50:	b	32e60 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x38>
   32e54:	cmp	r2, #128	; 0x80
   32e58:	beq	32e70 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x48>
   32e5c:	b	32e7c <myhtml_tree_clear_stack_back_table_row_context@@Base+0x54>
   32e60:	ldr	r2, [r1, #4]
   32e64:	cmp	r2, #65	; 0x41
   32e68:	cmpne	r2, #135	; 0x87
   32e6c:	bne	32e54 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x2c>
   32e70:	ldr	r1, [r1, #8]
   32e74:	cmp	r1, #1
   32e78:	bxeq	lr
   32e7c:	ldr	r1, [r0, #4]
   32e80:	cmp	r1, #0
   32e84:	ldrne	r1, [r0, #4]
   32e88:	subne	r1, r1, #1
   32e8c:	strne	r1, [r0, #4]
   32e90:	mov	r1, #0
   32e94:	ldr	r2, [r0, #4]
   32e98:	cmp	r2, #0
   32e9c:	bne	32e40 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x18>
   32ea0:	b	32e60 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x38>

00032ea4 <myhtml_tree_close_cell@@Base>:
   32ea4:	push	{r4, r5, fp, lr}
   32ea8:	add	fp, sp, #8
   32eac:	mov	r5, r1
   32eb0:	mov	r1, #0
   32eb4:	mov	r2, #0
   32eb8:	mov	r4, r0
   32ebc:	bl	115c0 <myhtml_tree_generate_implied_end_tags@plt>
   32ec0:	ldr	r0, [r4, #128]	; 0x80
   32ec4:	ldr	r1, [r0, #4]
   32ec8:	cmp	r1, #0
   32ecc:	ldrne	r1, [r0, #4]
   32ed0:	ldmib	r5, {r1, r2}
   32ed4:	ldr	r3, [r0]
   32ed8:	ldr	r5, [r0, #4]
   32edc:	cmp	r5, #0
   32ee0:	beq	32f1c <myhtml_tree_close_cell@@Base+0x78>
   32ee4:	ldr	r5, [r0, #4]
   32ee8:	sub	r5, r5, #1
   32eec:	str	r5, [r0, #4]
   32ef0:	ldr	r5, [r0, #4]
   32ef4:	ldr	r5, [r3, r5, lsl #2]
   32ef8:	ldr	r5, [r5, #4]
   32efc:	cmp	r5, r1
   32f00:	bne	32ed8 <myhtml_tree_close_cell@@Base+0x34>
   32f04:	cmp	r2, #0
   32f08:	ldrne	r5, [r0, #4]
   32f0c:	ldrne	r5, [r3, r5, lsl #2]
   32f10:	ldrne	r5, [r5, #8]
   32f14:	cmpne	r5, r2
   32f18:	bne	32ed8 <myhtml_tree_close_cell@@Base+0x34>
   32f1c:	ldr	r0, [r4, #124]	; 0x7c
   32f20:	ldr	r1, [r0]
   32f24:	ldr	r2, [r0, #4]
   32f28:	cmp	r2, #0
   32f2c:	beq	32fb0 <myhtml_tree_close_cell@@Base+0x10c>
   32f30:	movw	r3, #512	; 0x200
   32f34:	mov	ip, #1
   32f38:	movt	r3, #2560	; 0xa00
   32f3c:	ldr	r5, [r0, #4]
   32f40:	cmp	r5, #0
   32f44:	ldrne	r5, [r0, #4]
   32f48:	subne	r5, r5, #1
   32f4c:	strne	r5, [r0, #4]
   32f50:	ldrne	r5, [r0, #4]
   32f54:	ldrne	r2, [r4]
   32f58:	ldrne	r5, [r1, r5, lsl #2]
   32f5c:	ldrne	r2, [r2, #36]	; 0x24
   32f60:	cmpne	r2, r5
   32f64:	beq	32fb0 <myhtml_tree_close_cell@@Base+0x10c>
   32f68:	ldr	r5, [r5, #4]
   32f6c:	cmp	r5, #82	; 0x52
   32f70:	ble	32f90 <myhtml_tree_close_cell@@Base+0xec>
   32f74:	cmp	r5, #126	; 0x7e
   32f78:	bgt	32fa4 <myhtml_tree_close_cell@@Base+0x100>
   32f7c:	cmp	r5, #83	; 0x53
   32f80:	beq	32fb0 <myhtml_tree_close_cell@@Base+0x10c>
   32f84:	cmp	r5, #94	; 0x5e
   32f88:	bne	32f3c <myhtml_tree_close_cell@@Base+0x98>
   32f8c:	b	32fb0 <myhtml_tree_close_cell@@Base+0x10c>
   32f90:	cmp	r5, #27
   32f94:	bhi	32f3c <myhtml_tree_close_cell@@Base+0x98>
   32f98:	tst	r3, ip, lsl r5
   32f9c:	beq	32f3c <myhtml_tree_close_cell@@Base+0x98>
   32fa0:	b	32fb0 <myhtml_tree_close_cell@@Base+0x10c>
   32fa4:	cmp	r5, #131	; 0x83
   32fa8:	cmpne	r5, #127	; 0x7f
   32fac:	bne	32f3c <myhtml_tree_close_cell@@Base+0x98>
   32fb0:	mov	r0, #13
   32fb4:	str	r0, [r4, #168]	; 0xa8
   32fb8:	pop	{r4, r5, fp, pc}

00032fbc <myhtml_tree_is_mathml_integration_point@@Base>:
   32fbc:	ldr	r0, [r1, #8]
   32fc0:	cmp	r0, #2
   32fc4:	bne	32ff8 <myhtml_tree_is_mathml_integration_point@@Base+0x3c>
   32fc8:	ldr	r1, [r1, #4]
   32fcc:	mov	r0, #1
   32fd0:	sub	r2, r1, #227	; 0xe3
   32fd4:	cmp	r2, #11
   32fd8:	bhi	32ff0 <myhtml_tree_is_mathml_integration_point@@Base+0x34>
   32fdc:	mov	ip, #1
   32fe0:	movw	r3, #2097	; 0x831
   32fe4:	tst	r3, ip, lsl r2
   32fe8:	beq	32ff0 <myhtml_tree_is_mathml_integration_point@@Base+0x34>
   32fec:	bx	lr
   32ff0:	cmp	r1, #88	; 0x58
   32ff4:	bxeq	lr
   32ff8:	mov	r0, #0
   32ffc:	bx	lr

00033000 <myhtml_tree_is_html_integration_point@@Base>:
   33000:	push	{r4, r5, r6, sl, fp, lr}
   33004:	add	fp, sp, #16
   33008:	sub	sp, sp, #8
   3300c:	mov	r5, r0
   33010:	ldr	r0, [r1, #8]
   33014:	mov	r4, r1
   33018:	cmp	r0, #2
   3301c:	beq	33048 <myhtml_tree_is_html_integration_point@@Base+0x48>
   33020:	cmp	r0, #3
   33024:	bne	330e0 <myhtml_tree_is_html_integration_point@@Base+0xe0>
   33028:	ldr	r0, [r4, #4]
   3302c:	mov	r6, #1
   33030:	cmp	r0, #134	; 0x86
   33034:	cmpne	r0, #156	; 0x9c
   33038:	beq	330e4 <myhtml_tree_is_html_integration_point@@Base+0xe4>
   3303c:	cmp	r0, #189	; 0xbd
   33040:	movne	r6, #0
   33044:	b	330e4 <myhtml_tree_is_html_integration_point@@Base+0xe4>
   33048:	ldr	r0, [r4, #4]
   3304c:	cmp	r0, #8
   33050:	bne	330e0 <myhtml_tree_is_html_integration_point@@Base+0xe0>
   33054:	ldr	r1, [r4, #32]
   33058:	cmp	r1, #0
   3305c:	beq	330e0 <myhtml_tree_is_html_integration_point@@Base+0xe0>
   33060:	ldr	r0, [r1, #48]	; 0x30
   33064:	tst	r0, #1
   33068:	bne	330e0 <myhtml_tree_is_html_integration_point@@Base+0xe0>
   3306c:	ldr	r0, [r5, #8]
   33070:	bl	11578 <myhtml_token_node_wait_for_done@plt>
   33074:	ldr	r1, [r4, #32]
   33078:	ldr	r0, [r5, #8]
   3307c:	ldr	r3, [pc, #108]	; 330f0 <myhtml_tree_is_html_integration_point@@Base+0xf0>
   33080:	mov	r2, #9
   33084:	str	r2, [sp, #4]
   33088:	add	r3, pc, r3
   3308c:	str	r3, [sp]
   33090:	mov	r3, #8
   33094:	ldr	r2, [pc, #88]	; 330f4 <myhtml_tree_is_html_integration_point@@Base+0xf4>
   33098:	add	r2, pc, r2
   3309c:	bl	10ec4 <myhtml_token_attr_match_case@plt>
   330a0:	mov	r6, #1
   330a4:	cmp	r0, #0
   330a8:	bne	330e4 <myhtml_tree_is_html_integration_point@@Base+0xe4>
   330ac:	ldr	r1, [r4, #32]
   330b0:	ldr	r0, [r5, #8]
   330b4:	ldr	r3, [pc, #60]	; 330f8 <myhtml_tree_is_html_integration_point@@Base+0xf8>
   330b8:	mov	r2, #21
   330bc:	str	r2, [sp, #4]
   330c0:	add	r3, pc, r3
   330c4:	str	r3, [sp]
   330c8:	mov	r3, #8
   330cc:	ldr	r2, [pc, #40]	; 330fc <myhtml_tree_is_html_integration_point@@Base+0xfc>
   330d0:	add	r2, pc, r2
   330d4:	bl	10ec4 <myhtml_token_attr_match_case@plt>
   330d8:	cmp	r0, #0
   330dc:	bne	330e4 <myhtml_tree_is_html_integration_point@@Base+0xe4>
   330e0:	mov	r6, #0
   330e4:	mov	r0, r6
   330e8:	sub	sp, fp, #16
   330ec:	pop	{r4, r5, r6, sl, fp, pc}
   330f0:	strdeq	lr, [ip], -r3
   330f4:	ldrdeq	lr, [ip], -sl
   330f8:	andeq	lr, ip, r5, asr #29
   330fc:	andeq	lr, ip, r2, lsr #29

00033100 <myhtml_tree_temp_tag_name_init@@Base>:
   33100:	push	{r4, sl, fp, lr}
   33104:	add	fp, sp, #8
   33108:	mov	r4, r0
   3310c:	mov	r0, #0
   33110:	mov	r1, #1024	; 0x400
   33114:	stmib	r4, {r0, r1}
   33118:	mov	r0, #1024	; 0x400
   3311c:	bl	119c8 <mycore_malloc@plt>
   33120:	str	r0, [r4]
   33124:	clz	r0, r0
   33128:	lsr	r0, r0, #5
   3312c:	lsl	r0, r0, #1
   33130:	pop	{r4, sl, fp, pc}

00033134 <myhtml_tree_temp_tag_name_clean@@Base>:
   33134:	mov	r1, #0
   33138:	str	r1, [r0, #4]
   3313c:	bx	lr

00033140 <myhtml_tree_temp_tag_name_append_one@@Base>:
   33140:	push	{r4, r5, r6, sl, fp, lr}
   33144:	add	fp, sp, #16
   33148:	mov	r5, r1
   3314c:	ldmib	r0, {r1, r2}
   33150:	mov	r4, r0
   33154:	cmp	r1, r2
   33158:	bcs	33164 <myhtml_tree_temp_tag_name_append_one@@Base+0x24>
   3315c:	ldr	r0, [r4]
   33160:	b	3318c <myhtml_tree_temp_tag_name_append_one@@Base+0x4c>
   33164:	ldr	r0, [r4]
   33168:	lsl	r6, r2, #1
   3316c:	mov	r1, r6
   33170:	bl	10db0 <mycore_realloc@plt>
   33174:	cmp	r0, #0
   33178:	moveq	r0, #2
   3317c:	popeq	{r4, r5, r6, sl, fp, pc}
   33180:	str	r0, [r4]
   33184:	str	r6, [r4, #8]
   33188:	ldr	r1, [r4, #4]
   3318c:	strb	r5, [r0, r1]
   33190:	ldr	r0, [r4, #4]
   33194:	add	r0, r0, #1
   33198:	str	r0, [r4, #4]
   3319c:	mov	r0, #0
   331a0:	pop	{r4, r5, r6, sl, fp, pc}

000331a4 <myhtml_tree_temp_tag_name_append@@Base>:
   331a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   331a8:	add	fp, sp, #24
   331ac:	cmp	r2, #0
   331b0:	mov	r4, #0
   331b4:	movne	r6, r0
   331b8:	ldrne	r0, [r0]
   331bc:	cmpne	r0, #0
   331c0:	bne	331cc <myhtml_tree_temp_tag_name_append@@Base+0x28>
   331c4:	mov	r0, r4
   331c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   331cc:	mov	r5, r2
   331d0:	mov	r7, r1
   331d4:	ldmib	r6, {r1, r2}
   331d8:	add	r3, r1, r5
   331dc:	cmp	r3, r2
   331e0:	bcc	3320c <myhtml_tree_temp_tag_name_append@@Base+0x68>
   331e4:	add	r8, r5, r2, lsl #1
   331e8:	mov	r1, r8
   331ec:	bl	10db0 <mycore_realloc@plt>
   331f0:	cmp	r0, #0
   331f4:	moveq	r4, #2
   331f8:	moveq	r0, r4
   331fc:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   33200:	str	r0, [r6]
   33204:	str	r8, [r6, #8]
   33208:	ldr	r1, [r6, #4]
   3320c:	add	r0, r0, r1
   33210:	mov	r1, r7
   33214:	mov	r2, r5
   33218:	bl	11050 <memcpy@plt>
   3321c:	ldr	r0, [r6, #4]
   33220:	add	r0, r0, r5
   33224:	str	r0, [r6, #4]
   33228:	mov	r0, r4
   3322c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00033230 <myhtml_tree_wait_for_last_done_token@@Base>:
   33230:	push	{r4, r5, fp, lr}
   33234:	add	fp, sp, #8
   33238:	mov	r5, r0
   3323c:	ldr	r0, [r0, #152]	; 0x98
   33240:	cmp	r0, r1
   33244:	popeq	{r4, r5, fp, pc}
   33248:	mov	r4, r1
   3324c:	ldr	r0, [r5]
   33250:	ldr	r0, [r0]
   33254:	ldr	r0, [r0, #24]
   33258:	bl	11164 <mythread_nanosleep_sleep@plt>
   3325c:	ldr	r0, [r5, #152]	; 0x98
   33260:	cmp	r0, r4
   33264:	bne	3324c <myhtml_tree_wait_for_last_done_token@@Base+0x1c>
   33268:	pop	{r4, r5, fp, pc}

0003326c <myhtml_tree_special_list_init@@Base>:
   3326c:	push	{r4, sl, fp, lr}
   33270:	add	fp, sp, #8
   33274:	mov	r4, r0
   33278:	mov	r0, #0
   3327c:	mov	r1, #1024	; 0x400
   33280:	stmib	r4, {r0, r1}
   33284:	mov	r0, #8192	; 0x2000
   33288:	bl	119c8 <mycore_malloc@plt>
   3328c:	str	r0, [r4]
   33290:	clz	r0, r0
   33294:	lsr	r0, r0, #5
   33298:	lsl	r0, r0, #1
   3329c:	pop	{r4, sl, fp, pc}

000332a0 <myhtml_tree_special_list_clean@@Base>:
   332a0:	mov	r1, #0
   332a4:	str	r1, [r0, #4]
   332a8:	bx	lr

000332ac <myhtml_tree_special_list_destroy@@Base>:
   332ac:	push	{r4, r5, r6, sl, fp, lr}
   332b0:	add	fp, sp, #16
   332b4:	mov	r4, #0
   332b8:	cmp	r0, #0
   332bc:	beq	332f4 <myhtml_tree_special_list_destroy@@Base+0x48>
   332c0:	mov	r5, r0
   332c4:	ldr	r0, [r0]
   332c8:	mov	r6, r1
   332cc:	cmp	r0, #0
   332d0:	beq	332e0 <myhtml_tree_special_list_destroy@@Base+0x34>
   332d4:	bl	11ab8 <mycore_free@plt>
   332d8:	mov	r0, #0
   332dc:	str	r0, [r5]
   332e0:	cmp	r6, #0
   332e4:	moveq	r0, r5
   332e8:	popeq	{r4, r5, r6, sl, fp, pc}
   332ec:	mov	r0, r5
   332f0:	bl	11ab8 <mycore_free@plt>
   332f4:	mov	r0, r4
   332f8:	pop	{r4, r5, r6, sl, fp, pc}

000332fc <myhtml_tree_special_list_append@@Base>:
   332fc:	push	{r4, r5, r6, r7, fp, lr}
   33300:	add	fp, sp, #16
   33304:	mov	r6, r1
   33308:	ldmib	r0, {r1, r7}
   3330c:	mov	r5, r2
   33310:	mov	r4, r0
   33314:	cmp	r1, r7
   33318:	bcs	33324 <myhtml_tree_special_list_append@@Base+0x28>
   3331c:	ldr	r0, [r4]
   33320:	b	3334c <myhtml_tree_special_list_append@@Base+0x50>
   33324:	ldr	r0, [r4]
   33328:	lsl	r1, r7, #4
   3332c:	bl	10db0 <mycore_realloc@plt>
   33330:	cmp	r0, #0
   33334:	moveq	r0, #2
   33338:	popeq	{r4, r5, r6, r7, fp, pc}
   3333c:	lsl	r1, r7, #1
   33340:	str	r0, [r4]
   33344:	str	r1, [r4, #8]
   33348:	ldr	r1, [r4, #4]
   3334c:	str	r6, [r0, r1, lsl #3]!
   33350:	str	r5, [r0, #4]
   33354:	add	r0, r1, #1
   33358:	str	r0, [r4, #4]
   3335c:	mov	r0, #0
   33360:	pop	{r4, r5, r6, r7, fp, pc}

00033364 <myhtml_tree_special_list_length@@Base>:
   33364:	ldr	r0, [r0, #4]
   33368:	bx	lr

0003336c <myhtml_tree_special_list_pop@@Base>:
   3336c:	mov	r1, r0
   33370:	ldr	r0, [r0, #4]
   33374:	cmp	r0, #0
   33378:	moveq	r0, #0
   3337c:	subne	r0, r0, #1
   33380:	strne	r0, [r1, #4]
   33384:	bx	lr

00033388 <myhtml_tree_special_list_get_last@@Base>:
   33388:	ldr	r1, [r0, #4]
   3338c:	cmp	r1, #0
   33390:	moveq	r0, #0
   33394:	ldrne	r0, [r0]
   33398:	addne	r0, r0, r1, lsl #3
   3339c:	bx	lr

000333a0 <myhtml_tree_incoming_buffer_first@@Base>:
   333a0:	ldr	r0, [r0, #80]	; 0x50
   333a4:	bx	lr

000333a8 <myhtml_tree_incomming_buffer_make_data@@Base>:
   333a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   333ac:	add	fp, sp, #28
   333b0:	sub	sp, sp, #4
   333b4:	mov	r9, r0
   333b8:	ldr	r0, [r0, #80]	; 0x50
   333bc:	mov	r5, r2
   333c0:	mov	r7, r1
   333c4:	bl	111ac <mycore_incoming_buffer_find_by_position@plt>
   333c8:	mov	r6, r0
   333cc:	ldr	r0, [r0, #8]
   333d0:	ldr	r1, [r6, #12]
   333d4:	sub	r4, r7, r1
   333d8:	add	r1, r4, r5
   333dc:	cmp	r1, r0
   333e0:	ldrls	r0, [r6]
   333e4:	addls	r0, r0, r4
   333e8:	subls	sp, fp, #28
   333ec:	popls	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   333f0:	ldr	r0, [r9, #208]	; 0xd0
   333f4:	cmp	r0, #0
   333f8:	beq	33410 <myhtml_tree_incomming_buffer_make_data@@Base+0x68>
   333fc:	mov	r0, #0
   33400:	str	r0, [r9, #212]	; 0xd4
   33404:	cmp	r6, #0
   33408:	bne	3344c <myhtml_tree_incomming_buffer_make_data@@Base+0xa4>
   3340c:	b	33528 <myhtml_tree_incomming_buffer_make_data@@Base+0x180>
   33410:	mov	r0, #0
   33414:	mov	r1, #1024	; 0x400
   33418:	str	r0, [r9, #212]	; 0xd4
   3341c:	mov	r0, #1024	; 0x400
   33420:	str	r1, [r9, #216]	; 0xd8
   33424:	bl	119c8 <mycore_malloc@plt>
   33428:	str	r0, [r9, #208]	; 0xd0
   3342c:	cmp	r6, #0
   33430:	bne	3344c <myhtml_tree_incomming_buffer_make_data@@Base+0xa4>
   33434:	b	33528 <myhtml_tree_incomming_buffer_make_data@@Base+0x180>
   33438:	ldr	r6, [r6, #20]
   3343c:	sub	r5, r5, r7
   33440:	mov	r4, #0
   33444:	cmp	r6, #0
   33448:	beq	33528 <myhtml_tree_incomming_buffer_make_data@@Base+0x180>
   3344c:	ldr	r0, [r6, #8]
   33450:	add	r1, r4, r5
   33454:	cmp	r1, r0
   33458:	bls	334c4 <myhtml_tree_incomming_buffer_make_data@@Base+0x11c>
   3345c:	subs	r7, r0, r4
   33460:	ldrne	r0, [r9, #208]	; 0xd0
   33464:	cmpne	r0, #0
   33468:	beq	33438 <myhtml_tree_incomming_buffer_make_data@@Base+0x90>
   3346c:	ldr	r2, [r9, #212]	; 0xd4
   33470:	ldr	r1, [r9, #216]	; 0xd8
   33474:	ldr	sl, [r6]
   33478:	add	r3, r2, r7
   3347c:	cmp	r3, r1
   33480:	bcc	334a4 <myhtml_tree_incomming_buffer_make_data@@Base+0xfc>
   33484:	add	r8, r7, r1, lsl #1
   33488:	mov	r1, r8
   3348c:	bl	10db0 <mycore_realloc@plt>
   33490:	cmp	r0, #0
   33494:	beq	33438 <myhtml_tree_incomming_buffer_make_data@@Base+0x90>
   33498:	str	r0, [r9, #208]	; 0xd0
   3349c:	str	r8, [r9, #216]	; 0xd8
   334a0:	ldr	r2, [r9, #212]	; 0xd4
   334a4:	add	r0, r0, r2
   334a8:	add	r1, sl, r4
   334ac:	mov	r2, r7
   334b0:	bl	11050 <memcpy@plt>
   334b4:	ldr	r0, [r9, #212]	; 0xd4
   334b8:	add	r0, r0, r7
   334bc:	str	r0, [r9, #212]	; 0xd4
   334c0:	b	33438 <myhtml_tree_incomming_buffer_make_data@@Base+0x90>
   334c4:	cmp	r5, #0
   334c8:	ldrne	r0, [r9, #208]	; 0xd0
   334cc:	cmpne	r0, #0
   334d0:	beq	33528 <myhtml_tree_incomming_buffer_make_data@@Base+0x180>
   334d4:	ldr	r2, [r9, #212]	; 0xd4
   334d8:	ldr	r1, [r9, #216]	; 0xd8
   334dc:	ldr	r7, [r6]
   334e0:	add	r3, r2, r5
   334e4:	cmp	r3, r1
   334e8:	bcc	3350c <myhtml_tree_incomming_buffer_make_data@@Base+0x164>
   334ec:	add	r6, r5, r1, lsl #1
   334f0:	mov	r1, r6
   334f4:	bl	10db0 <mycore_realloc@plt>
   334f8:	cmp	r0, #0
   334fc:	beq	33528 <myhtml_tree_incomming_buffer_make_data@@Base+0x180>
   33500:	str	r0, [r9, #208]	; 0xd0
   33504:	str	r6, [r9, #216]	; 0xd8
   33508:	ldr	r2, [r9, #212]	; 0xd4
   3350c:	add	r0, r0, r2
   33510:	add	r1, r7, r4
   33514:	mov	r2, r5
   33518:	bl	11050 <memcpy@plt>
   3351c:	ldr	r0, [r9, #212]	; 0xd4
   33520:	add	r0, r0, r5
   33524:	str	r0, [r9, #212]	; 0xd4
   33528:	ldr	r0, [r9, #208]	; 0xd0
   3352c:	sub	sp, fp, #28
   33530:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00033534 <mycore_fopen@@Base>:
   33534:	b	10f24 <fopen@plt>

00033538 <mycore_fclose@@Base>:
   33538:	b	117f4 <fclose@plt>

0003353c <mycore_fread@@Base>:
   3353c:	b	11368 <fread@plt>

00033540 <mycore_fwrite@@Base>:
   33540:	b	11308 <fwrite@plt>

00033544 <mycore_fflush@@Base>:
   33544:	b	10f60 <fflush@plt>

00033548 <mycore_fseek@@Base>:
   33548:	b	11b9c <fseek@plt>

0003354c <mycore_ftell@@Base>:
   3354c:	b	11140 <ftell@plt>

00033550 <mycore_ferror@@Base>:
   33550:	b	11044 <ferror@plt>

00033554 <mycore_setbuf@@Base>:
   33554:	b	10ea0 <setbuf@plt>

00033558 <mycore_malloc@@Base>:
   33558:	b	11488 <malloc@plt>

0003355c <mycore_realloc@@Base>:
   3355c:	b	11248 <realloc@plt>

00033560 <mycore_calloc@@Base>:
   33560:	b	10dbc <calloc@plt>

00033564 <mycore_free@@Base>:
   33564:	push	{fp, lr}
   33568:	mov	fp, sp
   3356c:	bl	10fe4 <free@plt>
   33570:	mov	r0, #0
   33574:	pop	{fp, pc}

00033578 <mythread_thread_create@@Base>:
   33578:	push	{r4, r5, r6, r7, fp, lr}
   3357c:	add	fp, sp, #16
   33580:	mov	r6, r1
   33584:	mov	r7, r0
   33588:	mov	r0, #1
   3358c:	mov	r1, #4
   33590:	mov	r5, r2
   33594:	bl	11020 <mycore_calloc@plt>
   33598:	cmp	r0, #0
   3359c:	moveq	r4, #0
   335a0:	moveq	r0, r4
   335a4:	popeq	{r4, r5, r6, r7, fp, pc}
   335a8:	ldr	r1, [r7, #20]
   335ac:	mov	r2, r6
   335b0:	mov	r3, r5
   335b4:	mov	r4, r0
   335b8:	bl	11374 <pthread_create@plt>
   335bc:	cmp	r0, #0
   335c0:	movne	r4, #0
   335c4:	mov	r0, r4
   335c8:	pop	{r4, r5, r6, r7, fp, pc}

000335cc <mythread_thread_join@@Base>:
   335cc:	push	{fp, lr}
   335d0:	mov	fp, sp
   335d4:	ldr	r0, [r1]
   335d8:	mov	r1, #0
   335dc:	bl	118fc <pthread_join@plt>
   335e0:	cmp	r0, #0
   335e4:	movwne	r0, #1
   335e8:	pop	{fp, pc}

000335ec <mythread_thread_cancel@@Base>:
   335ec:	push	{fp, lr}
   335f0:	mov	fp, sp
   335f4:	ldr	r0, [r1]
   335f8:	bl	11734 <pthread_cancel@plt>
   335fc:	cmp	r0, #0
   33600:	movwne	r0, #1
   33604:	pop	{fp, pc}

00033608 <mythread_thread_destroy@@Base>:
   33608:	push	{fp, lr}
   3360c:	mov	fp, sp
   33610:	mov	r0, r1
   33614:	bl	11ab8 <mycore_free@plt>
   33618:	mov	r0, #0
   3361c:	pop	{fp, pc}

00033620 <mythread_thread_attr_init@@Base>:
   33620:	push	{r4, r5, r6, sl, fp, lr}
   33624:	add	fp, sp, #16
   33628:	mov	r6, r0
   3362c:	mov	r0, #1
   33630:	mov	r1, #36	; 0x24
   33634:	bl	11020 <mycore_calloc@plt>
   33638:	mov	r4, #0
   3363c:	cmp	r0, #0
   33640:	beq	33680 <mythread_thread_attr_init@@Base+0x60>
   33644:	mov	r5, r0
   33648:	bl	11644 <pthread_attr_init@plt>
   3364c:	cmp	r0, #0
   33650:	str	r0, [r6, #28]
   33654:	bne	33678 <mythread_thread_attr_init@@Base+0x58>
   33658:	mov	r0, r5
   3365c:	mov	r1, #0
   33660:	mov	r4, #0
   33664:	bl	11bc0 <pthread_attr_setdetachstate@plt>
   33668:	cmp	r0, #0
   3366c:	str	r0, [r6, #28]
   33670:	moveq	r0, r5
   33674:	popeq	{r4, r5, r6, sl, fp, pc}
   33678:	mov	r0, r5
   3367c:	bl	11ab8 <mycore_free@plt>
   33680:	mov	r0, r4
   33684:	pop	{r4, r5, r6, sl, fp, pc}

00033688 <mythread_thread_attr_clean@@Base>:
   33688:	bx	lr

0003368c <mythread_thread_attr_destroy@@Base>:
   3368c:	cmp	r1, #0
   33690:	bxeq	lr
   33694:	push	{r4, r5, fp, lr}
   33698:	add	fp, sp, #8
   3369c:	mov	r5, r0
   336a0:	mov	r0, r1
   336a4:	mov	r4, r1
   336a8:	bl	10f3c <pthread_attr_destroy@plt>
   336ac:	str	r0, [r5, #28]
   336b0:	mov	r0, r4
   336b4:	pop	{r4, r5, fp, lr}
   336b8:	b	11ab8 <mycore_free@plt>

000336bc <mythread_mutex_create@@Base>:
   336bc:	push	{r4, r5, fp, lr}
   336c0:	add	fp, sp, #8
   336c4:	bl	11704 <mcsync_mutex_create@plt>
   336c8:	mov	r4, #0
   336cc:	cmp	r0, #0
   336d0:	beq	336f0 <mythread_mutex_create@@Base+0x34>
   336d4:	mov	r5, r0
   336d8:	bl	118e4 <mcsync_mutex_init@plt>
   336dc:	cmp	r0, #0
   336e0:	moveq	r0, r5
   336e4:	popeq	{r4, r5, fp, pc}
   336e8:	mov	r0, r5
   336ec:	bl	11ab8 <mycore_free@plt>
   336f0:	mov	r0, r4
   336f4:	pop	{r4, r5, fp, pc}

000336f8 <mythread_mutex_post@@Base>:
   336f8:	mov	r0, r1
   336fc:	b	11008 <mcsync_mutex_unlock@plt>

00033700 <mythread_mutex_wait@@Base>:
   33700:	mov	r0, r1
   33704:	b	11c8c <mcsync_mutex_lock@plt>

00033708 <mythread_mutex_try_wait@@Base>:
   33708:	mov	r0, r1
   3370c:	b	11c14 <mcsync_mutex_try_lock@plt>

00033710 <mythread_mutex_close@@Base>:
   33710:	mov	r0, r1
   33714:	b	10ef4 <mcsync_mutex_destroy@plt>

00033718 <mythread_nanosleep_create@@Base>:
   33718:	mov	r0, #1
   3371c:	mov	r1, #8
   33720:	b	11020 <mycore_calloc@plt>

00033724 <mythread_nanosleep_clean@@Base>:
   33724:	mov	r1, #0
   33728:	str	r1, [r0, #4]
   3372c:	str	r1, [r0]
   33730:	bx	lr

00033734 <mythread_nanosleep_destroy@@Base>:
   33734:	b	11ab8 <mycore_free@plt>

00033738 <mythread_nanosleep_sleep@@Base>:
   33738:	push	{fp, lr}
   3373c:	mov	fp, sp
   33740:	mov	r1, #0
   33744:	bl	1102c <nanosleep@plt>
   33748:	cmp	r0, #0
   3374c:	movwne	r0, #1
   33750:	pop	{fp, pc}

00033754 <mcsync_spin_create@@Base>:
   33754:	mov	r0, #1
   33758:	mov	r1, #4
   3375c:	b	11020 <mycore_calloc@plt>

00033760 <mcsync_spin_init@@Base>:
   33760:	mov	r0, #0
   33764:	bx	lr

00033768 <mcsync_spin_clean@@Base>:
   33768:	mov	r1, #0
   3376c:	str	r1, [r0]
   33770:	bx	lr

00033774 <mcsync_spin_destroy@@Base>:
   33774:	b	11ab8 <mycore_free@plt>

00033778 <mcsync_spin_lock@@Base>:
   33778:	mov	r2, #0
   3377c:	mov	r1, #1
   33780:	b	33794 <mcsync_spin_lock@@Base+0x1c>
   33784:	stlex	r3, r1, [r0]
   33788:	cmp	r3, #0
   3378c:	moveq	r0, #0
   33790:	bxeq	lr
   33794:	ldaex	r3, [r0]
   33798:	cmp	r3, r2
   3379c:	beq	33784 <mcsync_spin_lock@@Base+0xc>
   337a0:	clrex
   337a4:	mov	r2, r3
   337a8:	b	33794 <mcsync_spin_lock@@Base+0x1c>

000337ac <mcsync_spin_unlock@@Base>:
   337ac:	mov	r1, #0
   337b0:	stl	r1, [r0]
   337b4:	mov	r0, #0
   337b8:	bx	lr

000337bc <mcsync_mutex_create@@Base>:
   337bc:	mov	r0, #1
   337c0:	mov	r1, #24
   337c4:	b	11020 <mycore_calloc@plt>

000337c8 <mcsync_mutex_init@@Base>:
   337c8:	push	{fp, lr}
   337cc:	mov	fp, sp
   337d0:	mov	r1, #0
   337d4:	bl	110b0 <pthread_mutex_init@plt>
   337d8:	cmp	r0, #0
   337dc:	movwne	r0, #1
   337e0:	pop	{fp, pc}

000337e4 <mcsync_mutex_clean@@Base>:
   337e4:	bx	lr

000337e8 <mcsync_mutex_destroy@@Base>:
   337e8:	push	{r4, sl, fp, lr}
   337ec:	add	fp, sp, #8
   337f0:	mov	r4, r0
   337f4:	bl	10f54 <pthread_mutex_destroy@plt>
   337f8:	mov	r0, r4
   337fc:	pop	{r4, sl, fp, lr}
   33800:	b	11ab8 <mycore_free@plt>

00033804 <mcsync_mutex_lock@@Base>:
   33804:	push	{fp, lr}
   33808:	mov	fp, sp
   3380c:	bl	11014 <pthread_mutex_lock@plt>
   33810:	cmp	r0, #0
   33814:	movwne	r0, #1
   33818:	pop	{fp, pc}

0003381c <mcsync_mutex_try_lock@@Base>:
   3381c:	push	{fp, lr}
   33820:	mov	fp, sp
   33824:	bl	11110 <pthread_mutex_trylock@plt>
   33828:	cmp	r0, #0
   3382c:	movwne	r0, #1
   33830:	pop	{fp, pc}

00033834 <mcsync_mutex_unlock@@Base>:
   33834:	push	{fp, lr}
   33838:	mov	fp, sp
   3383c:	bl	10da4 <pthread_mutex_unlock@plt>
   33840:	cmp	r0, #0
   33844:	movwne	r0, #1
   33848:	pop	{fp, pc}

Disassembly of section .fini:

0003384c <.fini>:
   3384c:	push	{r3, lr}
   33850:	pop	{r3, pc}
