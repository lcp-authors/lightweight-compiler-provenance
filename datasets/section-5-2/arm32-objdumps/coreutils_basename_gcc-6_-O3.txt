
../repos/coreutils/src/basename:     file format elf32-littlearm


Disassembly of section .init:

00010b00 <.init>:
   10b00:	push	{r3, lr}
   10b04:	bl	10f88 <abort@plt+0x264>
   10b08:	pop	{r3, pc}

Disassembly of section .plt:

00010b0c <calloc@plt-0x14>:
   10b0c:	push	{lr}		; (str lr, [sp, #-4]!)
   10b10:	ldr	lr, [pc, #4]	; 10b1c <calloc@plt-0x4>
   10b14:	add	lr, pc, lr
   10b18:	ldr	pc, [lr, #8]!
   10b1c:	andeq	r7, r1, r4, ror #9

00010b20 <calloc@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #94208	; 0x17000
   10b28:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b2c <fputs_unlocked@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #94208	; 0x17000
   10b34:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b38 <raise@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #94208	; 0x17000
   10b40:	ldr	pc, [ip, #1236]!	; 0x4d4

00010b44 <strcmp@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #94208	; 0x17000
   10b4c:	ldr	pc, [ip, #1228]!	; 0x4cc

00010b50 <fflush@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #94208	; 0x17000
   10b58:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b5c <free@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #94208	; 0x17000
   10b64:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b68 <_exit@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #94208	; 0x17000
   10b70:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b74 <memcpy@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #94208	; 0x17000
   10b7c:	ldr	pc, [ip, #1196]!	; 0x4ac

00010b80 <mbsinit@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #94208	; 0x17000
   10b88:	ldr	pc, [ip, #1188]!	; 0x4a4

00010b8c <memcmp@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #94208	; 0x17000
   10b94:	ldr	pc, [ip, #1180]!	; 0x49c

00010b98 <fputc_unlocked@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #94208	; 0x17000
   10ba0:	ldr	pc, [ip, #1172]!	; 0x494

00010ba4 <dcgettext@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #94208	; 0x17000
   10bac:	ldr	pc, [ip, #1164]!	; 0x48c

00010bb0 <realloc@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #94208	; 0x17000
   10bb8:	ldr	pc, [ip, #1156]!	; 0x484

00010bbc <textdomain@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #94208	; 0x17000
   10bc4:	ldr	pc, [ip, #1148]!	; 0x47c

00010bc8 <iswprint@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #94208	; 0x17000
   10bd0:	ldr	pc, [ip, #1140]!	; 0x474

00010bd4 <fwrite@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #94208	; 0x17000
   10bdc:	ldr	pc, [ip, #1132]!	; 0x46c

00010be0 <lseek64@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #94208	; 0x17000
   10be8:	ldr	pc, [ip, #1124]!	; 0x464

00010bec <__ctype_get_mb_cur_max@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #94208	; 0x17000
   10bf4:	ldr	pc, [ip, #1116]!	; 0x45c

00010bf8 <__fpending@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #94208	; 0x17000
   10c00:	ldr	pc, [ip, #1108]!	; 0x454

00010c04 <mbrtowc@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #94208	; 0x17000
   10c0c:	ldr	pc, [ip, #1100]!	; 0x44c

00010c10 <error@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #94208	; 0x17000
   10c18:	ldr	pc, [ip, #1092]!	; 0x444

00010c1c <malloc@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #94208	; 0x17000
   10c24:	ldr	pc, [ip, #1084]!	; 0x43c

00010c28 <__libc_start_main@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #94208	; 0x17000
   10c30:	ldr	pc, [ip, #1076]!	; 0x434

00010c34 <__freading@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #94208	; 0x17000
   10c3c:	ldr	pc, [ip, #1068]!	; 0x42c

00010c40 <__gmon_start__@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #94208	; 0x17000
   10c48:	ldr	pc, [ip, #1060]!	; 0x424

00010c4c <getopt_long@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #94208	; 0x17000
   10c54:	ldr	pc, [ip, #1052]!	; 0x41c

00010c58 <__ctype_b_loc@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #94208	; 0x17000
   10c60:	ldr	pc, [ip, #1044]!	; 0x414

00010c64 <exit@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #94208	; 0x17000
   10c6c:	ldr	pc, [ip, #1036]!	; 0x40c

00010c70 <strlen@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #94208	; 0x17000
   10c78:	ldr	pc, [ip, #1028]!	; 0x404

00010c7c <__errno_location@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #94208	; 0x17000
   10c84:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c88 <__cxa_atexit@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #94208	; 0x17000
   10c90:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c94 <memset@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #94208	; 0x17000
   10c9c:	ldr	pc, [ip, #1004]!	; 0x3ec

00010ca0 <__printf_chk@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #94208	; 0x17000
   10ca8:	ldr	pc, [ip, #996]!	; 0x3e4

00010cac <fileno@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #94208	; 0x17000
   10cb4:	ldr	pc, [ip, #988]!	; 0x3dc

00010cb8 <__fprintf_chk@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #94208	; 0x17000
   10cc0:	ldr	pc, [ip, #980]!	; 0x3d4

00010cc4 <fclose@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #94208	; 0x17000
   10ccc:	ldr	pc, [ip, #972]!	; 0x3cc

00010cd0 <fseeko64@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #94208	; 0x17000
   10cd8:	ldr	pc, [ip, #964]!	; 0x3c4

00010cdc <__overflow@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #94208	; 0x17000
   10ce4:	ldr	pc, [ip, #956]!	; 0x3bc

00010ce8 <setlocale@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #94208	; 0x17000
   10cf0:	ldr	pc, [ip, #948]!	; 0x3b4

00010cf4 <strrchr@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #94208	; 0x17000
   10cfc:	ldr	pc, [ip, #940]!	; 0x3ac

00010d00 <nl_langinfo@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #94208	; 0x17000
   10d08:	ldr	pc, [ip, #932]!	; 0x3a4

00010d0c <bindtextdomain@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #94208	; 0x17000
   10d14:	ldr	pc, [ip, #924]!	; 0x39c

00010d18 <strncmp@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #94208	; 0x17000
   10d20:	ldr	pc, [ip, #916]!	; 0x394

00010d24 <abort@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #94208	; 0x17000
   10d2c:	ldr	pc, [ip, #908]!	; 0x38c

Disassembly of section .text:

00010d30 <.text>:
   10d30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d34:	mov	r7, r0
   10d38:	sub	sp, sp, #20
   10d3c:	ldr	r0, [r1]
   10d40:	mov	r5, r1
   10d44:	bl	11674 <abort@plt+0x950>
   10d48:	ldr	r1, [pc, #448]	; 10f10 <abort@plt+0x1ec>
   10d4c:	mov	r0, #6
   10d50:	bl	10ce8 <setlocale@plt>
   10d54:	mov	r4, #0
   10d58:	ldr	r1, [pc, #436]	; 10f14 <abort@plt+0x1f0>
   10d5c:	ldr	r0, [pc, #436]	; 10f18 <abort@plt+0x1f4>
   10d60:	ldr	r9, [pc, #436]	; 10f1c <abort@plt+0x1f8>
   10d64:	ldr	r8, [pc, #436]	; 10f20 <abort@plt+0x1fc>
   10d68:	bl	10d0c <bindtextdomain@plt>
   10d6c:	mov	fp, r4
   10d70:	ldr	r0, [pc, #416]	; 10f18 <abort@plt+0x1f4>
   10d74:	mov	r6, r4
   10d78:	mov	sl, #1
   10d7c:	bl	10bbc <textdomain@plt>
   10d80:	ldr	r0, [pc, #412]	; 10f24 <abort@plt+0x200>
   10d84:	bl	171a4 <abort@plt+0x6480>
   10d88:	str	r4, [sp, #12]
   10d8c:	str	r6, [sp]
   10d90:	mov	r3, r9
   10d94:	mov	r2, r8
   10d98:	mov	r1, r5
   10d9c:	mov	r0, r7
   10da0:	bl	10c4c <getopt_long@plt>
   10da4:	cmn	r0, #1
   10da8:	beq	10e58 <abort@plt+0x134>
   10dac:	cmp	r0, #97	; 0x61
   10db0:	beq	10e50 <abort@plt+0x12c>
   10db4:	bgt	10dd0 <abort@plt+0xac>
   10db8:	cmn	r0, #3
   10dbc:	beq	10de8 <abort@plt+0xc4>
   10dc0:	cmn	r0, #2
   10dc4:	bne	10e48 <abort@plt+0x124>
   10dc8:	mov	r0, #0
   10dcc:	bl	11148 <abort@plt+0x424>
   10dd0:	cmp	r0, #115	; 0x73
   10dd4:	beq	10e18 <abort@plt+0xf4>
   10dd8:	cmp	r0, #122	; 0x7a
   10ddc:	bne	10e48 <abort@plt+0x124>
   10de0:	str	sl, [sp, #12]
   10de4:	b	10d8c <abort@plt+0x68>
   10de8:	ldr	r1, [pc, #312]	; 10f28 <abort@plt+0x204>
   10dec:	ldr	r3, [pc, #312]	; 10f2c <abort@plt+0x208>
   10df0:	ldr	r2, [pc, #312]	; 10f30 <abort@plt+0x20c>
   10df4:	str	r6, [sp, #4]
   10df8:	ldr	r0, [r1]
   10dfc:	ldr	r3, [r3]
   10e00:	ldr	r1, [pc, #300]	; 10f34 <abort@plt+0x210>
   10e04:	str	r2, [sp]
   10e08:	ldr	r2, [pc, #296]	; 10f38 <abort@plt+0x214>
   10e0c:	bl	15f14 <abort@plt+0x51f0>
   10e10:	mov	r0, #0
   10e14:	bl	10c64 <exit@plt>
   10e18:	ldr	r3, [pc, #284]	; 10f3c <abort@plt+0x218>
   10e1c:	mov	fp, sl
   10e20:	ldr	r4, [r3]
   10e24:	b	10d8c <abort@plt+0x68>
   10e28:	mov	r2, #5
   10e2c:	ldr	r1, [pc, #268]	; 10f40 <abort@plt+0x21c>
   10e30:	mov	r0, #0
   10e34:	bl	10ba4 <dcgettext@plt>
   10e38:	mov	r1, #0
   10e3c:	mov	r2, r0
   10e40:	mov	r0, r1
   10e44:	bl	10c10 <error@plt>
   10e48:	mov	r0, #1
   10e4c:	bl	11148 <abort@plt+0x424>
   10e50:	mov	fp, sl
   10e54:	b	10d8c <abort@plt+0x68>
   10e58:	ldr	r6, [pc, #228]	; 10f44 <abort@plt+0x220>
   10e5c:	ldr	r3, [r6]
   10e60:	cmp	r7, r3
   10e64:	ble	10e28 <abort@plt+0x104>
   10e68:	cmp	fp, #0
   10e6c:	bne	10ea4 <abort@plt+0x180>
   10e70:	add	r2, r3, #2
   10e74:	cmp	r7, r2
   10e78:	bgt	10ed0 <abort@plt+0x1ac>
   10e7c:	lsl	r2, r3, #2
   10e80:	ldr	r0, [r5, r3, lsl #2]
   10e84:	addeq	r5, r5, r2
   10e88:	movne	r1, fp
   10e8c:	ldreq	r1, [r5, #4]
   10e90:	ldr	r2, [sp, #12]
   10e94:	bl	11074 <abort@plt+0x350>
   10e98:	mov	r0, #0
   10e9c:	add	sp, sp, #20
   10ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ea4:	ldr	r8, [sp, #12]
   10ea8:	ldr	r0, [r5, r3, lsl #2]
   10eac:	mov	r2, r8
   10eb0:	mov	r1, r4
   10eb4:	bl	11074 <abort@plt+0x350>
   10eb8:	ldr	r3, [r6]
   10ebc:	add	r3, r3, #1
   10ec0:	cmp	r7, r3
   10ec4:	str	r3, [r6]
   10ec8:	bgt	10ea8 <abort@plt+0x184>
   10ecc:	b	10e98 <abort@plt+0x174>
   10ed0:	mov	r2, #5
   10ed4:	ldr	r1, [pc, #108]	; 10f48 <abort@plt+0x224>
   10ed8:	mov	r0, fp
   10edc:	bl	10ba4 <dcgettext@plt>
   10ee0:	ldr	r3, [r6]
   10ee4:	add	r3, r3, #2
   10ee8:	mov	r4, r0
   10eec:	ldr	r0, [r5, r3, lsl #2]
   10ef0:	bl	15540 <abort@plt+0x481c>
   10ef4:	mov	r2, r4
   10ef8:	mov	r1, fp
   10efc:	mov	r3, r0
   10f00:	mov	r0, fp
   10f04:	bl	10c10 <error@plt>
   10f08:	mov	r0, #1
   10f0c:	bl	11148 <abort@plt+0x424>
   10f10:	andeq	r7, r1, ip, ror #10
   10f14:	andeq	r7, r1, ip, asr r6
   10f18:			; <UNDEFINED> instruction: 0x000175b4
   10f1c:	andeq	r7, r1, r0, lsl #4
   10f20:	andeq	r7, r1, r4, ror r6
   10f24:	muleq	r1, ip, r4
   10f28:	andeq	r8, r2, r4, lsr #2
   10f2c:	andeq	r8, r2, r8, asr #1
   10f30:	andeq	r7, r1, ip, ror r6
   10f34:	andeq	r7, r1, r0, ror #4
   10f38:			; <UNDEFINED> instruction: 0x000175b0
   10f3c:	andeq	r8, r2, r8, lsr #2
   10f40:	andeq	r7, r1, ip, lsl #13
   10f44:	andeq	r8, r2, r8, lsl r1
   10f48:	muleq	r1, ip, r6
   10f4c:	mov	fp, #0
   10f50:	mov	lr, #0
   10f54:	pop	{r1}		; (ldr r1, [sp], #4)
   10f58:	mov	r2, sp
   10f5c:	push	{r2}		; (str r2, [sp, #-4]!)
   10f60:	push	{r0}		; (str r0, [sp, #-4]!)
   10f64:	ldr	ip, [pc, #16]	; 10f7c <abort@plt+0x258>
   10f68:	push	{ip}		; (str ip, [sp, #-4]!)
   10f6c:	ldr	r0, [pc, #12]	; 10f80 <abort@plt+0x25c>
   10f70:	ldr	r3, [pc, #12]	; 10f84 <abort@plt+0x260>
   10f74:	bl	10c28 <__libc_start_main@plt>
   10f78:	bl	10d24 <abort@plt>
   10f7c:	andeq	r7, r1, r0, lsr #3
   10f80:	andeq	r0, r1, r0, lsr sp
   10f84:	andeq	r7, r1, r0, asr #2
   10f88:	ldr	r3, [pc, #20]	; 10fa4 <abort@plt+0x280>
   10f8c:	ldr	r2, [pc, #20]	; 10fa8 <abort@plt+0x284>
   10f90:	add	r3, pc, r3
   10f94:	ldr	r2, [r3, r2]
   10f98:	cmp	r2, #0
   10f9c:	bxeq	lr
   10fa0:	b	10c40 <__gmon_start__@plt>
   10fa4:	andeq	r7, r1, r8, rrx
   10fa8:	strheq	r0, [r0], -ip
   10fac:	ldr	r3, [pc, #28]	; 10fd0 <abort@plt+0x2ac>
   10fb0:	ldr	r0, [pc, #28]	; 10fd4 <abort@plt+0x2b0>
   10fb4:	sub	r3, r3, r0
   10fb8:	cmp	r3, #6
   10fbc:	bxls	lr
   10fc0:	ldr	r3, [pc, #16]	; 10fd8 <abort@plt+0x2b4>
   10fc4:	cmp	r3, #0
   10fc8:	bxeq	lr
   10fcc:	bx	r3
   10fd0:	andeq	r8, r2, r3, lsl r1
   10fd4:	andeq	r8, r2, r0, lsl r1
   10fd8:	andeq	r0, r0, r0
   10fdc:	ldr	r1, [pc, #36]	; 11008 <abort@plt+0x2e4>
   10fe0:	ldr	r0, [pc, #36]	; 1100c <abort@plt+0x2e8>
   10fe4:	sub	r1, r1, r0
   10fe8:	asr	r1, r1, #2
   10fec:	add	r1, r1, r1, lsr #31
   10ff0:	asrs	r1, r1, #1
   10ff4:	bxeq	lr
   10ff8:	ldr	r3, [pc, #16]	; 11010 <abort@plt+0x2ec>
   10ffc:	cmp	r3, #0
   11000:	bxeq	lr
   11004:	bx	r3
   11008:	andeq	r8, r2, r0, lsl r1
   1100c:	andeq	r8, r2, r0, lsl r1
   11010:	andeq	r0, r0, r0
   11014:	push	{r4, lr}
   11018:	ldr	r4, [pc, #24]	; 11038 <abort@plt+0x314>
   1101c:	ldrb	r3, [r4]
   11020:	cmp	r3, #0
   11024:	popne	{r4, pc}
   11028:	bl	10fac <abort@plt+0x288>
   1102c:	mov	r3, #1
   11030:	strb	r3, [r4]
   11034:	pop	{r4, pc}
   11038:	andeq	r8, r2, ip, lsr #2
   1103c:	ldr	r0, [pc, #40]	; 1106c <abort@plt+0x348>
   11040:	ldr	r3, [r0]
   11044:	cmp	r3, #0
   11048:	bne	11050 <abort@plt+0x32c>
   1104c:	b	10fdc <abort@plt+0x2b8>
   11050:	ldr	r3, [pc, #24]	; 11070 <abort@plt+0x34c>
   11054:	cmp	r3, #0
   11058:	beq	1104c <abort@plt+0x328>
   1105c:	push	{r4, lr}
   11060:	blx	r3
   11064:	pop	{r4, lr}
   11068:	b	10fdc <abort@plt+0x2b8>
   1106c:	andeq	r7, r2, r4, lsl pc
   11070:	andeq	r0, r0, r0
   11074:	push	{r4, r5, r6, r7, r8, lr}
   11078:	mov	r6, r1
   1107c:	mov	r7, r2
   11080:	bl	11580 <abort@plt+0x85c>
   11084:	mov	r5, r0
   11088:	bl	115e4 <abort@plt+0x8c0>
   1108c:	cmp	r6, #0
   11090:	beq	110e8 <abort@plt+0x3c4>
   11094:	ldrb	r3, [r5]
   11098:	cmp	r3, #47	; 0x2f
   1109c:	beq	110e8 <abort@plt+0x3c4>
   110a0:	mov	r0, r5
   110a4:	bl	10c70 <strlen@plt>
   110a8:	add	r4, r5, r0
   110ac:	mov	r0, r6
   110b0:	bl	10c70 <strlen@plt>
   110b4:	add	r0, r6, r0
   110b8:	b	110cc <abort@plt+0x3a8>
   110bc:	ldrb	r2, [r4, #-1]!
   110c0:	ldrb	r3, [r0, #-1]!
   110c4:	cmp	r2, r3
   110c8:	bne	110e8 <abort@plt+0x3c4>
   110cc:	cmp	r5, r4
   110d0:	cmpcc	r6, r0
   110d4:	movcc	r3, #1
   110d8:	movcs	r3, #0
   110dc:	bcc	110bc <abort@plt+0x398>
   110e0:	cmp	r5, r4
   110e4:	strbcc	r3, [r4]
   110e8:	ldr	r4, [pc, #84]	; 11144 <abort@plt+0x420>
   110ec:	mov	r0, r5
   110f0:	ldr	r1, [r4]
   110f4:	bl	10b2c <fputs_unlocked@plt>
   110f8:	ldr	r0, [r4]
   110fc:	cmp	r7, #0
   11100:	movne	r2, #0
   11104:	ldr	r3, [r0, #20]
   11108:	ldr	ip, [r0, #24]
   1110c:	moveq	r2, #10
   11110:	cmp	r3, ip
   11114:	mov	r1, r2
   11118:	addcc	r1, r3, #1
   1111c:	strcc	r1, [r0, #20]
   11120:	strbcc	r2, [r3]
   11124:	bcs	11134 <abort@plt+0x410>
   11128:	mov	r0, r5
   1112c:	pop	{r4, r5, r6, r7, r8, lr}
   11130:	b	1161c <abort@plt+0x8f8>
   11134:	bl	10cdc <__overflow@plt>
   11138:	mov	r0, r5
   1113c:	pop	{r4, r5, r6, r7, r8, lr}
   11140:	b	1161c <abort@plt+0x8f8>
   11144:	andeq	r8, r2, r4, lsr #2
   11148:	subs	r6, r0, #0
   1114c:	push	{r7, lr}
   11150:	sub	sp, sp, #64	; 0x40
   11154:	beq	11190 <abort@plt+0x46c>
   11158:	ldr	r3, [pc, #708]	; 11424 <abort@plt+0x700>
   1115c:	mov	r2, #5
   11160:	ldr	r1, [pc, #704]	; 11428 <abort@plt+0x704>
   11164:	mov	r0, #0
   11168:	ldr	r4, [r3]
   1116c:	bl	10ba4 <dcgettext@plt>
   11170:	ldr	r3, [pc, #692]	; 1142c <abort@plt+0x708>
   11174:	mov	r1, #1
   11178:	ldr	r3, [r3]
   1117c:	mov	r2, r0
   11180:	mov	r0, r4
   11184:	bl	10cb8 <__fprintf_chk@plt>
   11188:	mov	r0, r6
   1118c:	bl	10c64 <exit@plt>
   11190:	mov	r2, #5
   11194:	ldr	r1, [pc, #660]	; 11430 <abort@plt+0x70c>
   11198:	bl	10ba4 <dcgettext@plt>
   1119c:	ldr	r4, [pc, #648]	; 1142c <abort@plt+0x708>
   111a0:	ldr	r7, [pc, #652]	; 11434 <abort@plt+0x710>
   111a4:	ldr	r3, [r4]
   111a8:	mov	r2, r3
   111ac:	mov	r1, r0
   111b0:	mov	r0, #1
   111b4:	bl	10ca0 <__printf_chk@plt>
   111b8:	mov	r2, #5
   111bc:	ldr	r1, [pc, #628]	; 11438 <abort@plt+0x714>
   111c0:	mov	r0, r6
   111c4:	bl	10ba4 <dcgettext@plt>
   111c8:	ldr	r1, [r7]
   111cc:	bl	10b2c <fputs_unlocked@plt>
   111d0:	mov	r2, #5
   111d4:	ldr	r1, [pc, #608]	; 1143c <abort@plt+0x718>
   111d8:	mov	r0, r6
   111dc:	bl	10ba4 <dcgettext@plt>
   111e0:	ldr	r1, [r7]
   111e4:	bl	10b2c <fputs_unlocked@plt>
   111e8:	mov	r2, #5
   111ec:	ldr	r1, [pc, #588]	; 11440 <abort@plt+0x71c>
   111f0:	mov	r0, r6
   111f4:	bl	10ba4 <dcgettext@plt>
   111f8:	ldr	r1, [r7]
   111fc:	bl	10b2c <fputs_unlocked@plt>
   11200:	mov	r2, #5
   11204:	ldr	r1, [pc, #568]	; 11444 <abort@plt+0x720>
   11208:	mov	r0, r6
   1120c:	bl	10ba4 <dcgettext@plt>
   11210:	ldr	r1, [r7]
   11214:	bl	10b2c <fputs_unlocked@plt>
   11218:	mov	r2, #5
   1121c:	ldr	r1, [pc, #548]	; 11448 <abort@plt+0x724>
   11220:	mov	r0, r6
   11224:	bl	10ba4 <dcgettext@plt>
   11228:	ldr	r1, [r7]
   1122c:	bl	10b2c <fputs_unlocked@plt>
   11230:	mov	r2, #5
   11234:	ldr	r1, [pc, #528]	; 1144c <abort@plt+0x728>
   11238:	mov	r0, r6
   1123c:	bl	10ba4 <dcgettext@plt>
   11240:	ldr	r3, [r4]
   11244:	ldr	r4, [pc, #516]	; 11450 <abort@plt+0x72c>
   11248:	str	r3, [sp, #4]
   1124c:	str	r3, [sp]
   11250:	mov	r2, r3
   11254:	mov	r1, r0
   11258:	mov	r0, #1
   1125c:	bl	10ca0 <__printf_chk@plt>
   11260:	ldm	r4!, {r0, r1, r2, r3}
   11264:	add	lr, sp, #8
   11268:	stmia	lr!, {r0, r1, r2, r3}
   1126c:	ldm	r4!, {r0, r1, r2, r3}
   11270:	ldr	ip, [sp, #8]
   11274:	stmia	lr!, {r0, r1, r2, r3}
   11278:	cmp	ip, #0
   1127c:	ldm	r4!, {r0, r1, r2, r3}
   11280:	stmia	lr!, {r0, r1, r2, r3}
   11284:	ldm	r4, {r0, r1}
   11288:	addeq	r4, sp, #8
   1128c:	stm	lr, {r0, r1}
   11290:	beq	112c0 <abort@plt+0x59c>
   11294:	ldr	r5, [pc, #440]	; 11454 <abort@plt+0x730>
   11298:	add	r4, sp, #8
   1129c:	b	112ac <abort@plt+0x588>
   112a0:	ldr	ip, [r4, #8]!
   112a4:	cmp	ip, #0
   112a8:	beq	112c0 <abort@plt+0x59c>
   112ac:	mov	r1, ip
   112b0:	mov	r0, r5
   112b4:	bl	10b44 <strcmp@plt>
   112b8:	cmp	r0, #0
   112bc:	bne	112a0 <abort@plt+0x57c>
   112c0:	ldr	r4, [r4, #4]
   112c4:	mov	r2, #5
   112c8:	cmp	r4, #0
   112cc:	ldr	r1, [pc, #388]	; 11458 <abort@plt+0x734>
   112d0:	beq	11378 <abort@plt+0x654>
   112d4:	mov	r0, #0
   112d8:	bl	10ba4 <dcgettext@plt>
   112dc:	ldr	r3, [pc, #376]	; 1145c <abort@plt+0x738>
   112e0:	ldr	r2, [pc, #376]	; 11460 <abort@plt+0x73c>
   112e4:	mov	r1, r0
   112e8:	mov	r0, #1
   112ec:	bl	10ca0 <__printf_chk@plt>
   112f0:	mov	r1, #0
   112f4:	mov	r0, #5
   112f8:	bl	10ce8 <setlocale@plt>
   112fc:	cmp	r0, #0
   11300:	ldreq	r5, [pc, #332]	; 11454 <abort@plt+0x730>
   11304:	beq	11320 <abort@plt+0x5fc>
   11308:	mov	r2, #3
   1130c:	ldr	r1, [pc, #336]	; 11464 <abort@plt+0x740>
   11310:	bl	10d18 <strncmp@plt>
   11314:	ldr	r5, [pc, #312]	; 11454 <abort@plt+0x730>
   11318:	cmp	r0, #0
   1131c:	bne	11408 <abort@plt+0x6e4>
   11320:	mov	r2, #5
   11324:	ldr	r1, [pc, #316]	; 11468 <abort@plt+0x744>
   11328:	mov	r0, #0
   1132c:	bl	10ba4 <dcgettext@plt>
   11330:	ldr	r3, [pc, #284]	; 11454 <abort@plt+0x730>
   11334:	ldr	r2, [pc, #288]	; 1145c <abort@plt+0x738>
   11338:	mov	r1, r0
   1133c:	mov	r0, #1
   11340:	bl	10ca0 <__printf_chk@plt>
   11344:	mov	r2, #5
   11348:	ldr	r1, [pc, #284]	; 1146c <abort@plt+0x748>
   1134c:	mov	r0, #0
   11350:	bl	10ba4 <dcgettext@plt>
   11354:	ldr	r2, [pc, #276]	; 11470 <abort@plt+0x74c>
   11358:	cmp	r4, r5
   1135c:	ldr	r3, [pc, #272]	; 11474 <abort@plt+0x750>
   11360:	movne	r3, r2
   11364:	mov	r1, r0
   11368:	mov	r2, r4
   1136c:	mov	r0, #1
   11370:	bl	10ca0 <__printf_chk@plt>
   11374:	b	11188 <abort@plt+0x464>
   11378:	mov	r0, r4
   1137c:	bl	10ba4 <dcgettext@plt>
   11380:	ldr	r3, [pc, #212]	; 1145c <abort@plt+0x738>
   11384:	ldr	r2, [pc, #212]	; 11460 <abort@plt+0x73c>
   11388:	mov	r1, r0
   1138c:	mov	r0, #1
   11390:	bl	10ca0 <__printf_chk@plt>
   11394:	mov	r1, r4
   11398:	mov	r0, #5
   1139c:	bl	10ce8 <setlocale@plt>
   113a0:	cmp	r0, #0
   113a4:	beq	113bc <abort@plt+0x698>
   113a8:	mov	r2, #3
   113ac:	ldr	r1, [pc, #176]	; 11464 <abort@plt+0x740>
   113b0:	bl	10d18 <strncmp@plt>
   113b4:	cmp	r0, #0
   113b8:	bne	11400 <abort@plt+0x6dc>
   113bc:	mov	r2, #5
   113c0:	ldr	r1, [pc, #160]	; 11468 <abort@plt+0x744>
   113c4:	mov	r0, #0
   113c8:	bl	10ba4 <dcgettext@plt>
   113cc:	ldr	r3, [pc, #128]	; 11454 <abort@plt+0x730>
   113d0:	ldr	r2, [pc, #132]	; 1145c <abort@plt+0x738>
   113d4:	mov	r4, r3
   113d8:	mov	r1, r0
   113dc:	mov	r0, #1
   113e0:	bl	10ca0 <__printf_chk@plt>
   113e4:	ldr	r1, [pc, #128]	; 1146c <abort@plt+0x748>
   113e8:	mov	r2, #5
   113ec:	mov	r0, #0
   113f0:	bl	10ba4 <dcgettext@plt>
   113f4:	ldr	r3, [pc, #120]	; 11474 <abort@plt+0x750>
   113f8:	mov	r1, r0
   113fc:	b	11368 <abort@plt+0x644>
   11400:	ldr	r5, [pc, #76]	; 11454 <abort@plt+0x730>
   11404:	mov	r4, r5
   11408:	mov	r2, #5
   1140c:	ldr	r1, [pc, #100]	; 11478 <abort@plt+0x754>
   11410:	mov	r0, #0
   11414:	bl	10ba4 <dcgettext@plt>
   11418:	ldr	r1, [r7]
   1141c:	bl	10b2c <fputs_unlocked@plt>
   11420:	b	11320 <abort@plt+0x5fc>
   11424:	andeq	r8, r2, r0, lsr #2
   11428:	andeq	r7, r1, ip, ror #4
   1142c:	andeq	r8, r2, r8, lsr r1
   11430:	muleq	r1, r4, r2
   11434:	andeq	r8, r2, r4, lsr #2
   11438:	andeq	r7, r1, ip, asr #5
   1143c:	andeq	r7, r1, r4, lsr r3
   11440:	andeq	r7, r1, r0, lsl #7
   11444:	andeq	r7, r1, ip, asr #8
   11448:	andeq	r7, r1, ip, ror r4
   1144c:			; <UNDEFINED> instruction: 0x000174b4
   11450:	andeq	r7, r1, r8, asr #3
   11454:	andeq	r7, r1, r0, ror #4
   11458:	andeq	r7, r1, r0, ror r5
   1145c:	andeq	r7, r1, r8, lsl #11
   11460:			; <UNDEFINED> instruction: 0x000175b0
   11464:	andeq	r7, r1, r0, asr #11
   11468:	andeq	r7, r1, ip, lsl #12
   1146c:	andeq	r7, r1, r8, lsr #12
   11470:	andeq	r7, r1, ip, ror #10
   11474:			; <UNDEFINED> instruction: 0x000176b8
   11478:	andeq	r7, r1, r4, asr #11
   1147c:	ldr	r3, [pc, #4]	; 11488 <abort@plt+0x764>
   11480:	str	r0, [r3]
   11484:	bx	lr
   11488:	andeq	r8, r2, r0, lsr r1
   1148c:	ldr	r3, [pc, #4]	; 11498 <abort@plt+0x774>
   11490:	strb	r0, [r3, #4]
   11494:	bx	lr
   11498:	andeq	r8, r2, r0, lsr r1
   1149c:	ldr	r3, [pc, #192]	; 11564 <abort@plt+0x840>
   114a0:	push	{r4, r5, r6, lr}
   114a4:	sub	sp, sp, #8
   114a8:	ldr	r0, [r3]
   114ac:	bl	16900 <abort@plt+0x5bdc>
   114b0:	cmp	r0, #0
   114b4:	beq	114d8 <abort@plt+0x7b4>
   114b8:	ldr	r4, [pc, #168]	; 11568 <abort@plt+0x844>
   114bc:	ldrb	r3, [r4, #4]
   114c0:	cmp	r3, #0
   114c4:	beq	114f4 <abort@plt+0x7d0>
   114c8:	bl	10c7c <__errno_location@plt>
   114cc:	ldr	r3, [r0]
   114d0:	cmp	r3, #32
   114d4:	bne	114f4 <abort@plt+0x7d0>
   114d8:	ldr	r3, [pc, #140]	; 1156c <abort@plt+0x848>
   114dc:	ldr	r0, [r3]
   114e0:	bl	16900 <abort@plt+0x5bdc>
   114e4:	cmp	r0, #0
   114e8:	bne	1153c <abort@plt+0x818>
   114ec:	add	sp, sp, #8
   114f0:	pop	{r4, r5, r6, pc}
   114f4:	mov	r2, #5
   114f8:	ldr	r1, [pc, #112]	; 11570 <abort@plt+0x84c>
   114fc:	mov	r0, #0
   11500:	bl	10ba4 <dcgettext@plt>
   11504:	ldr	r4, [r4]
   11508:	cmp	r4, #0
   1150c:	mov	r5, r0
   11510:	beq	11548 <abort@plt+0x824>
   11514:	bl	10c7c <__errno_location@plt>
   11518:	ldr	r6, [r0]
   1151c:	mov	r0, r4
   11520:	bl	142e0 <abort@plt+0x35bc>
   11524:	mov	r1, r6
   11528:	str	r5, [sp]
   1152c:	ldr	r2, [pc, #64]	; 11574 <abort@plt+0x850>
   11530:	mov	r3, r0
   11534:	mov	r0, #0
   11538:	bl	10c10 <error@plt>
   1153c:	ldr	r3, [pc, #52]	; 11578 <abort@plt+0x854>
   11540:	ldr	r0, [r3]
   11544:	bl	10b68 <_exit@plt>
   11548:	bl	10c7c <__errno_location@plt>
   1154c:	mov	r3, r5
   11550:	ldr	r2, [pc, #36]	; 1157c <abort@plt+0x858>
   11554:	ldr	r1, [r0]
   11558:	mov	r0, r4
   1155c:	bl	10c10 <error@plt>
   11560:	b	1153c <abort@plt+0x818>
   11564:	andeq	r8, r2, r4, lsr #2
   11568:	andeq	r8, r2, r0, lsr r1
   1156c:	andeq	r8, r2, r0, lsr #2
   11570:	andeq	r7, r1, r8, asr r7
   11574:	andeq	r7, r1, r4, ror #14
   11578:	andeq	r8, r2, ip, asr #1
   1157c:	andeq	r7, r1, r8, ror #14
   11580:	push	{r4, r5, r6, lr}
   11584:	mov	r5, r0
   11588:	bl	16854 <abort@plt+0x5b30>
   1158c:	ldrb	r3, [r0]
   11590:	cmp	r3, #0
   11594:	bne	115c4 <abort@plt+0x8a0>
   11598:	mov	r0, r5
   1159c:	bl	168b0 <abort@plt+0x5b8c>
   115a0:	mov	r4, r0
   115a4:	add	r0, r4, #1
   115a8:	bl	16110 <abort@plt+0x53ec>
   115ac:	mov	r2, r4
   115b0:	mov	r1, r5
   115b4:	bl	10b74 <memcpy@plt>
   115b8:	mov	r2, #0
   115bc:	strb	r2, [r0, r4]
   115c0:	pop	{r4, r5, r6, pc}
   115c4:	mov	r4, r0
   115c8:	bl	168b0 <abort@plt+0x5b8c>
   115cc:	mov	r5, r4
   115d0:	ldrb	r4, [r4, r0]
   115d4:	cmp	r4, #47	; 0x2f
   115d8:	movne	r4, r0
   115dc:	addeq	r4, r0, #1
   115e0:	b	115a4 <abort@plt+0x880>
   115e4:	push	{r4, lr}
   115e8:	mov	r4, r0
   115ec:	bl	16854 <abort@plt+0x5b30>
   115f0:	ldrb	r3, [r0]
   115f4:	cmp	r3, #0
   115f8:	movne	r4, r0
   115fc:	mov	r0, r4
   11600:	bl	168b0 <abort@plt+0x5b8c>
   11604:	mov	r2, #0
   11608:	ldrb	r3, [r4, r0]
   1160c:	strb	r2, [r4, r0]
   11610:	subs	r0, r3, r2
   11614:	movne	r0, #1
   11618:	pop	{r4, pc}
   1161c:	push	{r4, r5, lr}
   11620:	sub	sp, sp, #12
   11624:	mov	r5, r0
   11628:	bl	10c7c <__errno_location@plt>
   1162c:	mov	r2, #0
   11630:	mov	r4, r0
   11634:	ldr	r3, [r0]
   11638:	str	r2, [r4]
   1163c:	mov	r0, r5
   11640:	str	r3, [sp]
   11644:	str	r3, [sp, #4]
   11648:	bl	10b5c <free@plt>
   1164c:	ldr	r3, [r4]
   11650:	add	r2, sp, #8
   11654:	cmp	r3, #0
   11658:	moveq	r3, #4
   1165c:	movne	r3, #0
   11660:	add	r3, r2, r3
   11664:	ldr	r3, [r3, #-8]
   11668:	str	r3, [r4]
   1166c:	add	sp, sp, #12
   11670:	pop	{r4, r5, pc}
   11674:	push	{r4, r5, r6, lr}
   11678:	subs	r4, r0, #0
   1167c:	beq	116f0 <abort@plt+0x9cc>
   11680:	mov	r1, #47	; 0x2f
   11684:	bl	10cf4 <strrchr@plt>
   11688:	subs	r5, r0, #0
   1168c:	beq	116dc <abort@plt+0x9b8>
   11690:	add	r6, r5, #1
   11694:	sub	r3, r6, r4
   11698:	cmp	r3, #6
   1169c:	ble	116dc <abort@plt+0x9b8>
   116a0:	mov	r2, #7
   116a4:	ldr	r1, [pc, #96]	; 1170c <abort@plt+0x9e8>
   116a8:	sub	r0, r5, #6
   116ac:	bl	10d18 <strncmp@plt>
   116b0:	cmp	r0, #0
   116b4:	bne	116dc <abort@plt+0x9b8>
   116b8:	mov	r2, #3
   116bc:	ldr	r1, [pc, #76]	; 11710 <abort@plt+0x9ec>
   116c0:	mov	r0, r6
   116c4:	bl	10d18 <strncmp@plt>
   116c8:	cmp	r0, #0
   116cc:	movne	r4, r6
   116d0:	ldreq	r3, [pc, #60]	; 11714 <abort@plt+0x9f0>
   116d4:	addeq	r4, r5, #4
   116d8:	streq	r4, [r3]
   116dc:	ldr	r2, [pc, #52]	; 11718 <abort@plt+0x9f4>
   116e0:	ldr	r3, [pc, #52]	; 1171c <abort@plt+0x9f8>
   116e4:	str	r4, [r2]
   116e8:	str	r4, [r3]
   116ec:	pop	{r4, r5, r6, pc}
   116f0:	ldr	r3, [pc, #40]	; 11720 <abort@plt+0x9fc>
   116f4:	mov	r2, #55	; 0x37
   116f8:	mov	r1, #1
   116fc:	ldr	r3, [r3]
   11700:	ldr	r0, [pc, #28]	; 11724 <abort@plt+0xa00>
   11704:	bl	10bd4 <fwrite@plt>
   11708:	bl	10d24 <abort@plt>
   1170c:	andeq	r7, r1, r4, lsr #15
   11710:	andeq	r7, r1, ip, lsr #15
   11714:	andeq	r8, r2, r0, lsl r1
   11718:	andeq	r8, r2, r8, lsr r1
   1171c:	andeq	r8, r2, r4, lsl r1
   11720:	andeq	r8, r2, r0, lsr #2
   11724:	andeq	r7, r1, ip, ror #14
   11728:	push	{r4, r5, r6, lr}
   1172c:	mov	r4, r0
   11730:	mov	r5, r1
   11734:	bl	16b1c <abort@plt+0x5df8>
   11738:	ldrb	r3, [r0]
   1173c:	bic	r3, r3, #32
   11740:	cmp	r3, #85	; 0x55
   11744:	bne	117a4 <abort@plt+0xa80>
   11748:	ldrb	r3, [r0, #1]
   1174c:	bic	r3, r3, #32
   11750:	cmp	r3, #84	; 0x54
   11754:	bne	117e0 <abort@plt+0xabc>
   11758:	ldrb	r3, [r0, #2]
   1175c:	bic	r3, r3, #32
   11760:	cmp	r3, #70	; 0x46
   11764:	bne	117e0 <abort@plt+0xabc>
   11768:	ldrb	r3, [r0, #3]
   1176c:	cmp	r3, #45	; 0x2d
   11770:	bne	117e0 <abort@plt+0xabc>
   11774:	ldrb	r3, [r0, #4]
   11778:	cmp	r3, #56	; 0x38
   1177c:	bne	117e0 <abort@plt+0xabc>
   11780:	ldrb	r3, [r0, #5]
   11784:	cmp	r3, #0
   11788:	bne	117e0 <abort@plt+0xabc>
   1178c:	ldrb	r2, [r4]
   11790:	ldr	r3, [pc, #152]	; 11830 <abort@plt+0xb0c>
   11794:	ldr	r0, [pc, #152]	; 11834 <abort@plt+0xb10>
   11798:	cmp	r2, #96	; 0x60
   1179c:	movne	r0, r3
   117a0:	pop	{r4, r5, r6, pc}
   117a4:	cmp	r3, #71	; 0x47
   117a8:	bne	117e0 <abort@plt+0xabc>
   117ac:	ldrb	r3, [r0, #1]
   117b0:	bic	r3, r3, #32
   117b4:	cmp	r3, #66	; 0x42
   117b8:	bne	117e0 <abort@plt+0xabc>
   117bc:	ldrb	r3, [r0, #2]
   117c0:	cmp	r3, #49	; 0x31
   117c4:	bne	117e0 <abort@plt+0xabc>
   117c8:	ldrb	r3, [r0, #3]
   117cc:	cmp	r3, #56	; 0x38
   117d0:	bne	117e0 <abort@plt+0xabc>
   117d4:	ldrb	r3, [r0, #4]
   117d8:	cmp	r3, #48	; 0x30
   117dc:	beq	117f4 <abort@plt+0xad0>
   117e0:	ldr	r3, [pc, #80]	; 11838 <abort@plt+0xb14>
   117e4:	cmp	r5, #9
   117e8:	ldr	r0, [pc, #76]	; 1183c <abort@plt+0xb18>
   117ec:	movne	r0, r3
   117f0:	pop	{r4, r5, r6, pc}
   117f4:	ldrb	r3, [r0, #5]
   117f8:	cmp	r3, #51	; 0x33
   117fc:	bne	117e0 <abort@plt+0xabc>
   11800:	ldrb	r3, [r0, #6]
   11804:	cmp	r3, #48	; 0x30
   11808:	bne	117e0 <abort@plt+0xabc>
   1180c:	ldrb	r3, [r0, #7]
   11810:	cmp	r3, #0
   11814:	bne	117e0 <abort@plt+0xabc>
   11818:	ldrb	r2, [r4]
   1181c:	ldr	r3, [pc, #28]	; 11840 <abort@plt+0xb1c>
   11820:	ldr	r0, [pc, #28]	; 11844 <abort@plt+0xb20>
   11824:	cmp	r2, #96	; 0x60
   11828:	movne	r0, r3
   1182c:	pop	{r4, r5, r6, pc}
   11830:	andeq	r7, r1, r8, lsl #16
   11834:	andeq	r7, r1, r4, lsl #16
   11838:	andeq	r7, r1, r8, lsl r8
   1183c:	andeq	r7, r1, r4, lsl r8
   11840:	andeq	r7, r1, r0, lsl r8
   11844:	andeq	r7, r1, ip, lsl #16
   11848:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1184c:	sub	sp, sp, #140	; 0x8c
   11850:	mov	r9, r1
   11854:	str	r3, [sp, #24]
   11858:	mov	r3, #1
   1185c:	mov	sl, r0
   11860:	str	r2, [sp, #44]	; 0x2c
   11864:	str	r3, [sp, #28]
   11868:	bl	10bec <__ctype_get_mb_cur_max@plt>
   1186c:	ldr	r3, [sp, #180]	; 0xb4
   11870:	mov	fp, r9
   11874:	mov	r9, sl
   11878:	lsr	r3, r3, #1
   1187c:	and	r3, r3, #1
   11880:	str	r3, [sp, #40]	; 0x28
   11884:	ldr	r3, [sp, #180]	; 0xb4
   11888:	mov	r2, #0
   1188c:	and	r3, r3, #4
   11890:	str	r3, [sp, #100]	; 0x64
   11894:	ldr	r3, [sp, #180]	; 0xb4
   11898:	str	r2, [sp, #76]	; 0x4c
   1189c:	and	r3, r3, #1
   118a0:	str	r3, [sp, #96]	; 0x60
   118a4:	str	r2, [sp, #36]	; 0x24
   118a8:	str	r2, [sp, #56]	; 0x38
   118ac:	str	r2, [sp, #68]	; 0x44
   118b0:	str	r2, [sp, #72]	; 0x48
   118b4:	str	r2, [sp, #84]	; 0x54
   118b8:	str	r0, [sp, #80]	; 0x50
   118bc:	ldr	r3, [sp, #176]	; 0xb0
   118c0:	cmp	r3, #10
   118c4:	ldrls	pc, [pc, r3, lsl #2]
   118c8:	b	12aa0 <abort@plt+0x1d7c>
   118cc:	strdeq	r1, [r1], -r8
   118d0:	andeq	r1, r1, r8, lsl ip
   118d4:	andeq	r1, r1, r0, ror sp
   118d8:	andeq	r1, r1, ip, asr #24
   118dc:	andeq	r1, r1, r4, asr #27
   118e0:	andeq	r1, r1, r4, lsr #27
   118e4:	andeq	r1, r1, ip, ror #24
   118e8:	muleq	r1, r0, ip
   118ec:			; <UNDEFINED> instruction: 0x00011cb8
   118f0:			; <UNDEFINED> instruction: 0x00011cb8
   118f4:			; <UNDEFINED> instruction: 0x00011cb8
   118f8:	mov	r3, #0
   118fc:	ldr	r1, [sp, #56]	; 0x38
   11900:	ldr	r2, [sp, #176]	; 0xb0
   11904:	ldr	lr, [sp, #176]	; 0xb0
   11908:	mov	r8, r3
   1190c:	mov	ip, r3
   11910:	str	r3, [sp, #40]	; 0x28
   11914:	mov	r3, r1
   11918:	cmp	r2, #2
   1191c:	moveq	r3, #0
   11920:	andne	r3, r3, #1
   11924:	mov	r0, r3
   11928:	str	r3, [sp, #92]	; 0x5c
   1192c:	ldr	r3, [sp, #68]	; 0x44
   11930:	sub	lr, lr, #2
   11934:	adds	r2, r3, #0
   11938:	movne	r2, #1
   1193c:	and	r3, r1, ip
   11940:	and	r3, r2, r3
   11944:	clz	lr, lr
   11948:	str	r3, [sp, #88]	; 0x58
   1194c:	lsr	lr, lr, #5
   11950:	mov	r3, ip
   11954:	and	r3, r3, lr
   11958:	mov	sl, #0
   1195c:	and	r0, r2, r0
   11960:	str	r3, [sp, #64]	; 0x40
   11964:	eor	r3, r1, #1
   11968:	str	lr, [sp, #52]	; 0x34
   1196c:	str	r0, [sp, #48]	; 0x30
   11970:	str	r3, [sp, #60]	; 0x3c
   11974:	ldr	r3, [sp, #24]
   11978:	cmn	r3, #1
   1197c:	beq	11eac <abort@plt+0x1188>
   11980:	subs	r7, r3, sl
   11984:	movne	r7, #1
   11988:	cmp	r7, #0
   1198c:	beq	11ec4 <abort@plt+0x11a0>
   11990:	ldr	r3, [sp, #48]	; 0x30
   11994:	cmp	r3, #0
   11998:	beq	12230 <abort@plt+0x150c>
   1199c:	ldr	r2, [sp, #68]	; 0x44
   119a0:	ldr	r1, [sp, #24]
   119a4:	cmp	r2, #1
   119a8:	mov	r3, r2
   119ac:	movls	r3, #0
   119b0:	movhi	r3, #1
   119b4:	cmn	r1, #1
   119b8:	movne	r3, #0
   119bc:	cmp	r3, #0
   119c0:	add	r4, sl, r2
   119c4:	beq	119d4 <abort@plt+0xcb0>
   119c8:	ldr	r0, [sp, #44]	; 0x2c
   119cc:	bl	10c70 <strlen@plt>
   119d0:	str	r0, [sp, #24]
   119d4:	ldr	r3, [sp, #24]
   119d8:	cmp	r3, r4
   119dc:	ldr	r3, [sp, #44]	; 0x2c
   119e0:	add	r5, r3, sl
   119e4:	bcc	12238 <abort@plt+0x1514>
   119e8:	mov	r0, r5
   119ec:	ldr	r2, [sp, #68]	; 0x44
   119f0:	ldr	r1, [sp, #72]	; 0x48
   119f4:	bl	10b8c <memcmp@plt>
   119f8:	cmp	r0, #0
   119fc:	bne	12238 <abort@plt+0x1514>
   11a00:	ldr	r3, [sp, #40]	; 0x28
   11a04:	cmp	r3, #0
   11a08:	bne	12bf4 <abort@plt+0x1ed0>
   11a0c:	ldrb	r4, [r5]
   11a10:	cmp	r4, #126	; 0x7e
   11a14:	ldrls	pc, [pc, r4, lsl #2]
   11a18:	b	12b30 <abort@plt+0x1e0c>
   11a1c:	strdeq	r2, [r1], -r0
   11a20:	andeq	r2, r1, r0, lsr fp
   11a24:	andeq	r2, r1, r0, lsr fp
   11a28:	andeq	r2, r1, r0, lsr fp
   11a2c:	andeq	r2, r1, r0, lsr fp
   11a30:	andeq	r2, r1, r0, lsr fp
   11a34:	andeq	r2, r1, r0, lsr fp
   11a38:	ldrdeq	r2, [r1], -ip
   11a3c:	andeq	r2, r1, r8, asr #1
   11a40:	andeq	r2, r1, r4, lsr #1
   11a44:	andeq	r2, r1, r4, lsl #1
   11a48:	strheq	r2, [r1], -r4
   11a4c:	andeq	r1, r1, ip, ror #31
   11a50:	andeq	r2, r1, r0, lsr #4
   11a54:	andeq	r2, r1, r0, lsr fp
   11a58:	andeq	r2, r1, r0, lsr fp
   11a5c:	andeq	r2, r1, r0, lsr fp
   11a60:	andeq	r2, r1, r0, lsr fp
   11a64:	andeq	r2, r1, r0, lsr fp
   11a68:	andeq	r2, r1, r0, lsr fp
   11a6c:	andeq	r2, r1, r0, lsr fp
   11a70:	andeq	r2, r1, r0, lsr fp
   11a74:	andeq	r2, r1, r0, lsr fp
   11a78:	andeq	r2, r1, r0, lsr fp
   11a7c:	andeq	r2, r1, r0, lsr fp
   11a80:	andeq	r2, r1, r0, lsr fp
   11a84:	andeq	r2, r1, r0, lsr fp
   11a88:	andeq	r2, r1, r0, lsr fp
   11a8c:	andeq	r2, r1, r0, lsr fp
   11a90:	andeq	r2, r1, r0, lsr fp
   11a94:	andeq	r2, r1, r0, lsr fp
   11a98:	andeq	r2, r1, r0, lsr fp
   11a9c:	andeq	r2, r1, r0, lsl r2
   11aa0:	strdeq	r2, [r1], -r0
   11aa4:	strdeq	r2, [r1], -r0
   11aa8:	ldrdeq	r2, [r1], -r0
   11aac:	strdeq	r2, [r1], -r0
   11ab0:	ldrdeq	r1, [r1], -ip
   11ab4:	strdeq	r2, [r1], -r0
   11ab8:			; <UNDEFINED> instruction: 0x00011fb8
   11abc:	strdeq	r2, [r1], -r0
   11ac0:	strdeq	r2, [r1], -r0
   11ac4:	strdeq	r2, [r1], -r0
   11ac8:	ldrdeq	r1, [r1], -ip
   11acc:	ldrdeq	r1, [r1], -ip
   11ad0:	ldrdeq	r1, [r1], -ip
   11ad4:	ldrdeq	r1, [r1], -ip
   11ad8:	ldrdeq	r1, [r1], -ip
   11adc:	ldrdeq	r1, [r1], -ip
   11ae0:	ldrdeq	r1, [r1], -ip
   11ae4:	ldrdeq	r1, [r1], -ip
   11ae8:	ldrdeq	r1, [r1], -ip
   11aec:	ldrdeq	r1, [r1], -ip
   11af0:	ldrdeq	r1, [r1], -ip
   11af4:	ldrdeq	r1, [r1], -ip
   11af8:	ldrdeq	r1, [r1], -ip
   11afc:	ldrdeq	r1, [r1], -ip
   11b00:	ldrdeq	r1, [r1], -ip
   11b04:	ldrdeq	r1, [r1], -ip
   11b08:	strdeq	r2, [r1], -r0
   11b0c:	strdeq	r2, [r1], -r0
   11b10:	strdeq	r2, [r1], -r0
   11b14:	strdeq	r2, [r1], -r0
   11b18:	andeq	r1, r1, r8, ror #30
   11b1c:	andeq	r2, r1, r0, lsr fp
   11b20:	ldrdeq	r1, [r1], -ip
   11b24:	ldrdeq	r1, [r1], -ip
   11b28:	ldrdeq	r1, [r1], -ip
   11b2c:	ldrdeq	r1, [r1], -ip
   11b30:	ldrdeq	r1, [r1], -ip
   11b34:	ldrdeq	r1, [r1], -ip
   11b38:	ldrdeq	r1, [r1], -ip
   11b3c:	ldrdeq	r1, [r1], -ip
   11b40:	ldrdeq	r1, [r1], -ip
   11b44:	ldrdeq	r1, [r1], -ip
   11b48:	ldrdeq	r1, [r1], -ip
   11b4c:	ldrdeq	r1, [r1], -ip
   11b50:	ldrdeq	r1, [r1], -ip
   11b54:	ldrdeq	r1, [r1], -ip
   11b58:	ldrdeq	r1, [r1], -ip
   11b5c:	ldrdeq	r1, [r1], -ip
   11b60:	ldrdeq	r1, [r1], -ip
   11b64:	ldrdeq	r1, [r1], -ip
   11b68:	ldrdeq	r1, [r1], -ip
   11b6c:	ldrdeq	r1, [r1], -ip
   11b70:	ldrdeq	r1, [r1], -ip
   11b74:	ldrdeq	r1, [r1], -ip
   11b78:	ldrdeq	r1, [r1], -ip
   11b7c:	ldrdeq	r1, [r1], -ip
   11b80:	ldrdeq	r1, [r1], -ip
   11b84:	ldrdeq	r1, [r1], -ip
   11b88:	strdeq	r2, [r1], -r0
   11b8c:	andeq	r1, r1, r4, lsr pc
   11b90:	ldrdeq	r1, [r1], -ip
   11b94:	strdeq	r2, [r1], -r0
   11b98:	ldrdeq	r1, [r1], -ip
   11b9c:	strdeq	r2, [r1], -r0
   11ba0:	ldrdeq	r1, [r1], -ip
   11ba4:	ldrdeq	r1, [r1], -ip
   11ba8:	ldrdeq	r1, [r1], -ip
   11bac:	ldrdeq	r1, [r1], -ip
   11bb0:	ldrdeq	r1, [r1], -ip
   11bb4:	ldrdeq	r1, [r1], -ip
   11bb8:	ldrdeq	r1, [r1], -ip
   11bbc:	ldrdeq	r1, [r1], -ip
   11bc0:	ldrdeq	r1, [r1], -ip
   11bc4:	ldrdeq	r1, [r1], -ip
   11bc8:	ldrdeq	r1, [r1], -ip
   11bcc:	ldrdeq	r1, [r1], -ip
   11bd0:	ldrdeq	r1, [r1], -ip
   11bd4:	ldrdeq	r1, [r1], -ip
   11bd8:	ldrdeq	r1, [r1], -ip
   11bdc:	ldrdeq	r1, [r1], -ip
   11be0:	ldrdeq	r1, [r1], -ip
   11be4:	ldrdeq	r1, [r1], -ip
   11be8:	ldrdeq	r1, [r1], -ip
   11bec:	ldrdeq	r1, [r1], -ip
   11bf0:	ldrdeq	r1, [r1], -ip
   11bf4:	ldrdeq	r1, [r1], -ip
   11bf8:	ldrdeq	r1, [r1], -ip
   11bfc:	ldrdeq	r1, [r1], -ip
   11c00:	ldrdeq	r1, [r1], -ip
   11c04:	ldrdeq	r1, [r1], -ip
   11c08:	andeq	r1, r1, ip, ror #27
   11c0c:	strdeq	r2, [r1], -r0
   11c10:	andeq	r1, r1, ip, ror #27
   11c14:	ldrdeq	r2, [r1], -r0
   11c18:	mov	r3, #1
   11c1c:	str	r3, [sp, #40]	; 0x28
   11c20:	str	r3, [sp, #68]	; 0x44
   11c24:	mov	r8, #0
   11c28:	ldr	r3, [pc, #4056]	; 12c08 <abort@plt+0x1ee4>
   11c2c:	str	r3, [sp, #72]	; 0x48
   11c30:	mov	r3, #2
   11c34:	str	r3, [sp, #176]	; 0xb0
   11c38:	ldr	r1, [sp, #56]	; 0x38
   11c3c:	mov	r2, r3
   11c40:	ldr	ip, [sp, #40]	; 0x28
   11c44:	mov	lr, r3
   11c48:	b	11914 <abort@plt+0xbf0>
   11c4c:	mov	r3, #1
   11c50:	str	r3, [sp, #56]	; 0x38
   11c54:	str	r3, [sp, #68]	; 0x44
   11c58:	str	r3, [sp, #40]	; 0x28
   11c5c:	ldr	r3, [pc, #4004]	; 12c08 <abort@plt+0x1ee4>
   11c60:	mov	r8, #0
   11c64:	str	r3, [sp, #72]	; 0x48
   11c68:	b	11c30 <abort@plt+0xf0c>
   11c6c:	mov	r3, #1
   11c70:	str	r3, [sp, #56]	; 0x38
   11c74:	str	r3, [sp, #68]	; 0x44
   11c78:	str	r3, [sp, #40]	; 0x28
   11c7c:	ldr	r3, [pc, #3976]	; 12c0c <abort@plt+0x1ee8>
   11c80:	mov	r8, #0
   11c84:	str	r3, [sp, #72]	; 0x48
   11c88:	mov	r3, #5
   11c8c:	b	11c34 <abort@plt+0xf10>
   11c90:	mov	r3, #0
   11c94:	str	r3, [sp, #40]	; 0x28
   11c98:	mov	r3, #1
   11c9c:	str	r3, [sp, #56]	; 0x38
   11ca0:	mov	r8, #0
   11ca4:	mov	r1, r3
   11ca8:	ldr	r2, [sp, #176]	; 0xb0
   11cac:	ldr	ip, [sp, #40]	; 0x28
   11cb0:	ldr	lr, [sp, #176]	; 0xb0
   11cb4:	b	11914 <abort@plt+0xbf0>
   11cb8:	ldr	r3, [sp, #176]	; 0xb0
   11cbc:	cmp	r3, #10
   11cc0:	beq	11d04 <abort@plt+0xfe0>
   11cc4:	mov	r2, #5
   11cc8:	ldr	r1, [pc, #3904]	; 12c10 <abort@plt+0x1eec>
   11ccc:	mov	r0, #0
   11cd0:	bl	10ba4 <dcgettext@plt>
   11cd4:	ldr	r2, [pc, #3892]	; 12c10 <abort@plt+0x1eec>
   11cd8:	cmp	r0, r2
   11cdc:	str	r0, [sp, #188]	; 0xbc
   11ce0:	beq	12d9c <abort@plt+0x2078>
   11ce4:	mov	r2, #5
   11ce8:	ldr	r1, [pc, #3864]	; 12c08 <abort@plt+0x1ee4>
   11cec:	mov	r0, #0
   11cf0:	bl	10ba4 <dcgettext@plt>
   11cf4:	ldr	r2, [pc, #3852]	; 12c08 <abort@plt+0x1ee4>
   11cf8:	cmp	r0, r2
   11cfc:	str	r0, [sp, #192]	; 0xc0
   11d00:	beq	12d8c <abort@plt+0x2068>
   11d04:	ldr	r8, [sp, #40]	; 0x28
   11d08:	cmp	r8, #0
   11d0c:	movne	r8, #0
   11d10:	bne	11d40 <abort@plt+0x101c>
   11d14:	ldr	r3, [sp, #188]	; 0xbc
   11d18:	ldrb	r3, [r3]
   11d1c:	cmp	r3, #0
   11d20:	beq	11d40 <abort@plt+0x101c>
   11d24:	ldr	r2, [sp, #188]	; 0xbc
   11d28:	cmp	fp, r8
   11d2c:	strbhi	r3, [r9, r8]
   11d30:	ldrb	r3, [r2, #1]!
   11d34:	add	r8, r8, #1
   11d38:	cmp	r3, #0
   11d3c:	bne	11d28 <abort@plt+0x1004>
   11d40:	ldr	r0, [sp, #192]	; 0xc0
   11d44:	bl	10c70 <strlen@plt>
   11d48:	ldr	r3, [sp, #192]	; 0xc0
   11d4c:	ldr	r2, [sp, #176]	; 0xb0
   11d50:	str	r3, [sp, #72]	; 0x48
   11d54:	mov	r3, #1
   11d58:	str	r3, [sp, #56]	; 0x38
   11d5c:	mov	r1, r3
   11d60:	ldr	ip, [sp, #40]	; 0x28
   11d64:	ldr	lr, [sp, #176]	; 0xb0
   11d68:	str	r0, [sp, #68]	; 0x44
   11d6c:	b	11914 <abort@plt+0xbf0>
   11d70:	ldr	r3, [sp, #40]	; 0x28
   11d74:	cmp	r3, #0
   11d78:	beq	12a20 <abort@plt+0x1cfc>
   11d7c:	mov	r3, #1
   11d80:	str	r3, [sp, #68]	; 0x44
   11d84:	ldr	r3, [pc, #3708]	; 12c08 <abort@plt+0x1ee4>
   11d88:	str	r3, [sp, #72]	; 0x48
   11d8c:	mov	r8, #0
   11d90:	ldr	r1, [sp, #56]	; 0x38
   11d94:	ldr	r2, [sp, #176]	; 0xb0
   11d98:	ldr	ip, [sp, #40]	; 0x28
   11d9c:	ldr	lr, [sp, #176]	; 0xb0
   11da0:	b	11914 <abort@plt+0xbf0>
   11da4:	ldr	r3, [sp, #40]	; 0x28
   11da8:	cmp	r3, #0
   11dac:	beq	12aa4 <abort@plt+0x1d80>
   11db0:	str	r3, [sp, #56]	; 0x38
   11db4:	mov	r3, #1
   11db8:	str	r3, [sp, #68]	; 0x44
   11dbc:	ldr	r3, [pc, #3656]	; 12c0c <abort@plt+0x1ee8>
   11dc0:	b	11d88 <abort@plt+0x1064>
   11dc4:	ldr	r3, [sp, #40]	; 0x28
   11dc8:	cmp	r3, #0
   11dcc:	mov	r3, #1
   11dd0:	streq	r3, [sp, #56]	; 0x38
   11dd4:	beq	12a20 <abort@plt+0x1cfc>
   11dd8:	str	r3, [sp, #68]	; 0x44
   11ddc:	ldr	r3, [pc, #3620]	; 12c08 <abort@plt+0x1ee4>
   11de0:	mov	r8, #0
   11de4:	str	r3, [sp, #72]	; 0x48
   11de8:	b	11c30 <abort@plt+0xf0c>
   11dec:	ldr	r3, [sp, #24]
   11df0:	ldr	r6, [sp, #48]	; 0x30
   11df4:	cmn	r3, #1
   11df8:	beq	12454 <abort@plt+0x1730>
   11dfc:	subs	r3, r3, #1
   11e00:	movne	r3, #1
   11e04:	cmp	r3, #0
   11e08:	beq	121d4 <abort@plt+0x14b0>
   11e0c:	ldr	r1, [sp, #52]	; 0x34
   11e10:	mov	r7, r3
   11e14:	mov	r3, #0
   11e18:	str	r3, [sp, #32]
   11e1c:	ldr	r3, [sp, #60]	; 0x3c
   11e20:	orr	r2, r1, r3
   11e24:	ldr	r3, [sp, #40]	; 0x28
   11e28:	eor	r2, r2, #1
   11e2c:	orr	r2, r3, r2
   11e30:	tst	r2, #255	; 0xff
   11e34:	bne	12758 <abort@plt+0x1a34>
   11e38:	cmp	r6, #0
   11e3c:	bne	12018 <abort@plt+0x12f4>
   11e40:	ldr	r3, [sp, #36]	; 0x24
   11e44:	add	sl, sl, #1
   11e48:	and	r3, r3, r7
   11e4c:	uxtb	r6, r3
   11e50:	cmp	r6, #0
   11e54:	beq	11e80 <abort@plt+0x115c>
   11e58:	cmp	fp, r8
   11e5c:	movhi	r3, #39	; 0x27
   11e60:	strbhi	r3, [r9, r8]
   11e64:	add	r3, r8, #1
   11e68:	cmp	fp, r3
   11e6c:	movhi	r2, #39	; 0x27
   11e70:	add	r8, r8, #2
   11e74:	strbhi	r2, [r9, r3]
   11e78:	mov	r3, #0
   11e7c:	str	r3, [sp, #36]	; 0x24
   11e80:	ldr	r2, [sp, #32]
   11e84:	cmp	r8, fp
   11e88:	ldr	r3, [sp, #28]
   11e8c:	strbcc	r4, [r9, r8]
   11e90:	cmp	r2, #0
   11e94:	moveq	r3, #0
   11e98:	str	r3, [sp, #28]
   11e9c:	ldr	r3, [sp, #24]
   11ea0:	add	r8, r8, #1
   11ea4:	cmn	r3, #1
   11ea8:	bne	11980 <abort@plt+0xc5c>
   11eac:	ldr	r3, [sp, #44]	; 0x2c
   11eb0:	ldrb	r3, [r3, sl]
   11eb4:	adds	r7, r3, #0
   11eb8:	movne	r7, #1
   11ebc:	cmp	r7, #0
   11ec0:	bne	11990 <abort@plt+0xc6c>
   11ec4:	ldr	r3, [sp, #64]	; 0x40
   11ec8:	cmp	r8, #0
   11ecc:	movne	r3, #0
   11ed0:	andeq	r3, r3, #1
   11ed4:	cmp	r3, #0
   11ed8:	str	r3, [sp, #64]	; 0x40
   11edc:	bne	12980 <abort@plt+0x1c5c>
   11ee0:	ldr	r3, [sp, #40]	; 0x28
   11ee4:	ldr	r2, [sp, #52]	; 0x34
   11ee8:	eor	r3, r3, #1
   11eec:	ands	r2, r2, r3
   11ef0:	beq	12dac <abort@plt+0x2088>
   11ef4:	ldr	r3, [sp, #76]	; 0x4c
   11ef8:	cmp	r3, #0
   11efc:	beq	12d7c <abort@plt+0x2058>
   11f00:	ldr	r3, [sp, #28]
   11f04:	cmp	r3, #0
   11f08:	bne	12d38 <abort@plt+0x2014>
   11f0c:	ldr	r2, [sp, #84]	; 0x54
   11f10:	clz	r3, fp
   11f14:	cmp	r2, #0
   11f18:	lsr	r3, r3, #5
   11f1c:	moveq	r3, #0
   11f20:	cmp	r3, #0
   11f24:	beq	12cd8 <abort@plt+0x1fb4>
   11f28:	mov	fp, r2
   11f2c:	str	r3, [sp, #76]	; 0x4c
   11f30:	b	118bc <abort@plt+0xb98>
   11f34:	ldr	r3, [sp, #176]	; 0xb0
   11f38:	ldr	r6, [sp, #48]	; 0x30
   11f3c:	cmp	r3, #2
   11f40:	beq	12478 <abort@plt+0x1754>
   11f44:	ldr	r3, [sp, #88]	; 0x58
   11f48:	cmp	r3, #0
   11f4c:	beq	129fc <abort@plt+0x1cd8>
   11f50:	mov	r3, #0
   11f54:	add	sl, sl, #1
   11f58:	ldr	r6, [sp, #36]	; 0x24
   11f5c:	str	r3, [sp, #32]
   11f60:	mov	r4, #92	; 0x5c
   11f64:	b	11e50 <abort@plt+0x112c>
   11f68:	ldr	r3, [sp, #176]	; 0xb0
   11f6c:	ldr	r6, [sp, #48]	; 0x30
   11f70:	cmp	r3, #2
   11f74:	beq	124a8 <abort@plt+0x1784>
   11f78:	cmp	r3, #5
   11f7c:	bne	12a0c <abort@plt+0x1ce8>
   11f80:	ldr	r3, [sp, #100]	; 0x64
   11f84:	cmp	r3, #0
   11f88:	beq	12a70 <abort@plt+0x1d4c>
   11f8c:	ldr	r2, [sp, #24]
   11f90:	add	r3, sl, #2
   11f94:	cmp	r2, r3
   11f98:	bls	11fa8 <abort@plt+0x1284>
   11f9c:	ldrb	r4, [r5, #1]
   11fa0:	cmp	r4, #63	; 0x3f
   11fa4:	beq	12c18 <abort@plt+0x1ef4>
   11fa8:	mov	r1, #0
   11fac:	str	r1, [sp, #32]
   11fb0:	mov	r4, #63	; 0x3f
   11fb4:	b	11e1c <abort@plt+0x10f8>
   11fb8:	ldr	r3, [sp, #176]	; 0xb0
   11fbc:	ldr	r6, [sp, #48]	; 0x30
   11fc0:	cmp	r3, #2
   11fc4:	beq	124d4 <abort@plt+0x17b0>
   11fc8:	str	r7, [sp, #32]
   11fcc:	str	r7, [sp, #76]	; 0x4c
   11fd0:	mov	r1, #0
   11fd4:	mov	r4, #39	; 0x27
   11fd8:	b	11e1c <abort@plt+0x10f8>
   11fdc:	ldr	r6, [sp, #48]	; 0x30
   11fe0:	ldr	r1, [sp, #52]	; 0x34
   11fe4:	str	r7, [sp, #32]
   11fe8:	b	11e1c <abort@plt+0x10f8>
   11fec:	ldr	r6, [sp, #48]	; 0x30
   11ff0:	ldr	r1, [sp, #52]	; 0x34
   11ff4:	mov	r4, #12
   11ff8:	mov	r3, #102	; 0x66
   11ffc:	ldr	r2, [sp, #56]	; 0x38
   12000:	cmp	r2, #0
   12004:	streq	r2, [sp, #32]
   12008:	beq	11e1c <abort@plt+0x10f8>
   1200c:	mov	r4, r3
   12010:	mov	r3, #0
   12014:	str	r3, [sp, #32]
   12018:	ldr	r3, [sp, #40]	; 0x28
   1201c:	cmp	r3, #0
   12020:	bne	12790 <abort@plt+0x1a6c>
   12024:	ldr	r3, [sp, #36]	; 0x24
   12028:	eor	r3, r3, #1
   1202c:	and	r3, r3, r1
   12030:	ands	r3, r3, #255	; 0xff
   12034:	beq	1206c <abort@plt+0x1348>
   12038:	cmp	fp, r8
   1203c:	movhi	r2, #39	; 0x27
   12040:	strbhi	r2, [r9, r8]
   12044:	add	r2, r8, #1
   12048:	cmp	fp, r2
   1204c:	movhi	r1, #36	; 0x24
   12050:	strbhi	r1, [r9, r2]
   12054:	add	r2, r8, #2
   12058:	cmp	fp, r2
   1205c:	add	r8, r8, #3
   12060:	movhi	r1, #39	; 0x27
   12064:	strbhi	r1, [r9, r2]
   12068:	str	r3, [sp, #36]	; 0x24
   1206c:	cmp	fp, r8
   12070:	movhi	r3, #92	; 0x5c
   12074:	strbhi	r3, [r9, r8]
   12078:	add	sl, sl, #1
   1207c:	add	r8, r8, #1
   12080:	b	11e80 <abort@plt+0x115c>
   12084:	ldr	r6, [sp, #48]	; 0x30
   12088:	mov	r4, #10
   1208c:	mov	r3, #110	; 0x6e
   12090:	ldr	r2, [sp, #64]	; 0x40
   12094:	cmp	r2, #0
   12098:	bne	12b18 <abort@plt+0x1df4>
   1209c:	ldr	r1, [sp, #52]	; 0x34
   120a0:	b	11ffc <abort@plt+0x12d8>
   120a4:	ldr	r6, [sp, #48]	; 0x30
   120a8:	ldr	r1, [sp, #52]	; 0x34
   120ac:	mov	r3, #116	; 0x74
   120b0:	b	11ffc <abort@plt+0x12d8>
   120b4:	ldr	r6, [sp, #48]	; 0x30
   120b8:	ldr	r1, [sp, #52]	; 0x34
   120bc:	mov	r4, #11
   120c0:	mov	r3, #118	; 0x76
   120c4:	b	11ffc <abort@plt+0x12d8>
   120c8:	ldr	r6, [sp, #48]	; 0x30
   120cc:	ldr	r1, [sp, #52]	; 0x34
   120d0:	mov	r4, #8
   120d4:	mov	r3, #98	; 0x62
   120d8:	b	11ffc <abort@plt+0x12d8>
   120dc:	ldr	r6, [sp, #48]	; 0x30
   120e0:	ldr	r1, [sp, #52]	; 0x34
   120e4:	mov	r4, #7
   120e8:	mov	r3, #97	; 0x61
   120ec:	b	11ffc <abort@plt+0x12d8>
   120f0:	ldr	r3, [sp, #56]	; 0x38
   120f4:	ldr	r6, [sp, #48]	; 0x30
   120f8:	cmp	r3, #0
   120fc:	beq	125c0 <abort@plt+0x189c>
   12100:	ldr	r3, [sp, #40]	; 0x28
   12104:	cmp	r3, #0
   12108:	bne	12bf4 <abort@plt+0x1ed0>
   1210c:	ldr	r3, [sp, #36]	; 0x24
   12110:	ldr	r2, [sp, #52]	; 0x34
   12114:	eor	r3, r3, #1
   12118:	ands	r3, r2, r3
   1211c:	moveq	r2, r8
   12120:	beq	12158 <abort@plt+0x1434>
   12124:	cmp	fp, r8
   12128:	movhi	r2, #39	; 0x27
   1212c:	strbhi	r2, [r9, r8]
   12130:	add	r2, r8, #1
   12134:	cmp	fp, r2
   12138:	movhi	r1, #36	; 0x24
   1213c:	strbhi	r1, [r9, r2]
   12140:	add	r2, r8, #2
   12144:	cmp	fp, r2
   12148:	movhi	r1, #39	; 0x27
   1214c:	strbhi	r1, [r9, r2]
   12150:	add	r2, r8, #3
   12154:	str	r3, [sp, #36]	; 0x24
   12158:	cmp	fp, r2
   1215c:	movhi	r3, #92	; 0x5c
   12160:	strbhi	r3, [r9, r2]
   12164:	ldr	r3, [sp, #92]	; 0x5c
   12168:	add	r8, r2, #1
   1216c:	cmp	r3, #0
   12170:	beq	12af4 <abort@plt+0x1dd0>
   12174:	ldr	r1, [sp, #24]
   12178:	add	r3, sl, #1
   1217c:	cmp	r1, r3
   12180:	bls	121b8 <abort@plt+0x1494>
   12184:	ldr	r1, [sp, #44]	; 0x2c
   12188:	ldrb	r3, [r1, r3]
   1218c:	sub	r3, r3, #48	; 0x30
   12190:	cmp	r3, #9
   12194:	bhi	121b8 <abort@plt+0x1494>
   12198:	cmp	fp, r8
   1219c:	movhi	r3, #48	; 0x30
   121a0:	strbhi	r3, [r9, r8]
   121a4:	add	r3, r2, #2
   121a8:	cmp	fp, r3
   121ac:	add	r8, r2, #3
   121b0:	movhi	r1, #48	; 0x30
   121b4:	strbhi	r1, [r9, r3]
   121b8:	ldr	r3, [sp, #40]	; 0x28
   121bc:	ldr	r1, [sp, #52]	; 0x34
   121c0:	mov	r7, r3
   121c4:	str	r3, [sp, #32]
   121c8:	mov	r4, #48	; 0x30
   121cc:	b	11e1c <abort@plt+0x10f8>
   121d0:	ldr	r6, [sp, #48]	; 0x30
   121d4:	cmp	sl, #0
   121d8:	streq	r7, [sp, #32]
   121dc:	beq	121fc <abort@plt+0x14d8>
   121e0:	mov	r3, #0
   121e4:	ldr	r1, [sp, #52]	; 0x34
   121e8:	str	r3, [sp, #32]
   121ec:	b	11e1c <abort@plt+0x10f8>
   121f0:	ldr	r6, [sp, #48]	; 0x30
   121f4:	mov	r3, #0
   121f8:	str	r3, [sp, #32]
   121fc:	ldr	r3, [sp, #64]	; 0x40
   12200:	cmp	r3, #0
   12204:	bne	12980 <abort@plt+0x1c5c>
   12208:	ldr	r1, [sp, #52]	; 0x34
   1220c:	b	11e1c <abort@plt+0x10f8>
   12210:	ldr	r3, [sp, #48]	; 0x30
   12214:	mov	r6, r3
   12218:	str	r3, [sp, #32]
   1221c:	b	121fc <abort@plt+0x14d8>
   12220:	ldr	r6, [sp, #48]	; 0x30
   12224:	mov	r4, #13
   12228:	mov	r3, #114	; 0x72
   1222c:	b	12090 <abort@plt+0x136c>
   12230:	ldr	r3, [sp, #44]	; 0x2c
   12234:	add	r5, r3, sl
   12238:	ldrb	r4, [r5]
   1223c:	cmp	r4, #126	; 0x7e
   12240:	ldrls	pc, [pc, r4, lsl #2]
   12244:	b	125e0 <abort@plt+0x18bc>
   12248:			; <UNDEFINED> instruction: 0x000125b0
   1224c:	andeq	r2, r1, r0, ror #11
   12250:	andeq	r2, r1, r0, ror #11
   12254:	andeq	r2, r1, r0, ror #11
   12258:	andeq	r2, r1, r0, ror #11
   1225c:	andeq	r2, r1, r0, ror #11
   12260:	andeq	r2, r1, r0, ror #11
   12264:	andeq	r2, r1, r8, lsr #11
   12268:	andeq	r2, r1, r0, lsr #11
   1226c:	muleq	r1, r4, r5
   12270:	andeq	r2, r1, ip, lsl #11
   12274:	andeq	r2, r1, r4, lsl #11
   12278:	andeq	r2, r1, ip, ror r5
   1227c:	andeq	r2, r1, r4, ror r5
   12280:	andeq	r2, r1, r0, ror #11
   12284:	andeq	r2, r1, r0, ror #11
   12288:	andeq	r2, r1, r0, ror #11
   1228c:	andeq	r2, r1, r0, ror #11
   12290:	andeq	r2, r1, r0, ror #11
   12294:	andeq	r2, r1, r0, ror #11
   12298:	andeq	r2, r1, r0, ror #11
   1229c:	andeq	r2, r1, r0, ror #11
   122a0:	andeq	r2, r1, r0, ror #11
   122a4:	andeq	r2, r1, r0, ror #11
   122a8:	andeq	r2, r1, r0, ror #11
   122ac:	andeq	r2, r1, r0, ror #11
   122b0:	andeq	r2, r1, r0, ror #11
   122b4:	andeq	r2, r1, r0, ror #11
   122b8:	andeq	r2, r1, r0, ror #11
   122bc:	andeq	r2, r1, r0, ror #11
   122c0:	andeq	r2, r1, r0, ror #11
   122c4:	andeq	r2, r1, r0, ror #11
   122c8:	andeq	r2, r1, r8, ror #10
   122cc:	andeq	r2, r1, r0, ror #10
   122d0:	andeq	r2, r1, r0, ror #10
   122d4:	andeq	r2, r1, r8, asr r5
   122d8:	andeq	r2, r1, r0, ror #10
   122dc:	andeq	r2, r1, r0, asr r5
   122e0:	andeq	r2, r1, r0, ror #10
   122e4:	andeq	r2, r1, r4, asr #9
   122e8:	andeq	r2, r1, r0, ror #10
   122ec:	andeq	r2, r1, r0, ror #10
   122f0:	andeq	r2, r1, r0, ror #10
   122f4:	andeq	r2, r1, r0, asr r5
   122f8:	andeq	r2, r1, r0, asr r5
   122fc:	andeq	r2, r1, r0, asr r5
   12300:	andeq	r2, r1, r0, asr r5
   12304:	andeq	r2, r1, r0, asr r5
   12308:	andeq	r2, r1, r0, asr r5
   1230c:	andeq	r2, r1, r0, asr r5
   12310:	andeq	r2, r1, r0, asr r5
   12314:	andeq	r2, r1, r0, asr r5
   12318:	andeq	r2, r1, r0, asr r5
   1231c:	andeq	r2, r1, r0, asr r5
   12320:	andeq	r2, r1, r0, asr r5
   12324:	andeq	r2, r1, r0, asr r5
   12328:	andeq	r2, r1, r0, asr r5
   1232c:	andeq	r2, r1, r0, asr r5
   12330:	andeq	r2, r1, r0, asr r5
   12334:	andeq	r2, r1, r0, ror #10
   12338:	andeq	r2, r1, r0, ror #10
   1233c:	andeq	r2, r1, r0, ror #10
   12340:	andeq	r2, r1, r0, ror #10
   12344:	muleq	r1, r8, r4
   12348:	andeq	r2, r1, r0, ror #11
   1234c:	andeq	r2, r1, r0, asr r5
   12350:	andeq	r2, r1, r0, asr r5
   12354:	andeq	r2, r1, r0, asr r5
   12358:	andeq	r2, r1, r0, asr r5
   1235c:	andeq	r2, r1, r0, asr r5
   12360:	andeq	r2, r1, r0, asr r5
   12364:	andeq	r2, r1, r0, asr r5
   12368:	andeq	r2, r1, r0, asr r5
   1236c:	andeq	r2, r1, r0, asr r5
   12370:	andeq	r2, r1, r0, asr r5
   12374:	andeq	r2, r1, r0, asr r5
   12378:	andeq	r2, r1, r0, asr r5
   1237c:	andeq	r2, r1, r0, asr r5
   12380:	andeq	r2, r1, r0, asr r5
   12384:	andeq	r2, r1, r0, asr r5
   12388:	andeq	r2, r1, r0, asr r5
   1238c:	andeq	r2, r1, r0, asr r5
   12390:	andeq	r2, r1, r0, asr r5
   12394:	andeq	r2, r1, r0, asr r5
   12398:	andeq	r2, r1, r0, asr r5
   1239c:	andeq	r2, r1, r0, asr r5
   123a0:	andeq	r2, r1, r0, asr r5
   123a4:	andeq	r2, r1, r0, asr r5
   123a8:	andeq	r2, r1, r0, asr r5
   123ac:	andeq	r2, r1, r0, asr r5
   123b0:	andeq	r2, r1, r0, asr r5
   123b4:	andeq	r2, r1, r0, ror #10
   123b8:	andeq	r2, r1, r8, ror #8
   123bc:	andeq	r2, r1, r0, asr r5
   123c0:	andeq	r2, r1, r0, ror #10
   123c4:	andeq	r2, r1, r0, asr r5
   123c8:	andeq	r2, r1, r0, ror #10
   123cc:	andeq	r2, r1, r0, asr r5
   123d0:	andeq	r2, r1, r0, asr r5
   123d4:	andeq	r2, r1, r0, asr r5
   123d8:	andeq	r2, r1, r0, asr r5
   123dc:	andeq	r2, r1, r0, asr r5
   123e0:	andeq	r2, r1, r0, asr r5
   123e4:	andeq	r2, r1, r0, asr r5
   123e8:	andeq	r2, r1, r0, asr r5
   123ec:	andeq	r2, r1, r0, asr r5
   123f0:	andeq	r2, r1, r0, asr r5
   123f4:	andeq	r2, r1, r0, asr r5
   123f8:	andeq	r2, r1, r0, asr r5
   123fc:	andeq	r2, r1, r0, asr r5
   12400:	andeq	r2, r1, r0, asr r5
   12404:	andeq	r2, r1, r0, asr r5
   12408:	andeq	r2, r1, r0, asr r5
   1240c:	andeq	r2, r1, r0, asr r5
   12410:	andeq	r2, r1, r0, asr r5
   12414:	andeq	r2, r1, r0, asr r5
   12418:	andeq	r2, r1, r0, asr r5
   1241c:	andeq	r2, r1, r0, asr r5
   12420:	andeq	r2, r1, r0, asr r5
   12424:	andeq	r2, r1, r0, asr r5
   12428:	andeq	r2, r1, r0, asr r5
   1242c:	andeq	r2, r1, r0, asr r5
   12430:	andeq	r2, r1, r0, asr r5
   12434:	andeq	r2, r1, r4, asr #8
   12438:	andeq	r2, r1, r0, ror #10
   1243c:	andeq	r2, r1, r4, asr #8
   12440:	andeq	r2, r1, r8, asr r5
   12444:	ldr	r3, [sp, #24]
   12448:	mov	r6, #0
   1244c:	cmn	r3, #1
   12450:	bne	11dfc <abort@plt+0x10d8>
   12454:	ldr	r3, [sp, #44]	; 0x2c
   12458:	ldrb	r3, [r3, #1]
   1245c:	adds	r3, r3, #0
   12460:	movne	r3, #1
   12464:	b	11e04 <abort@plt+0x10e0>
   12468:	ldr	r3, [sp, #176]	; 0xb0
   1246c:	mov	r6, #0
   12470:	cmp	r3, #2
   12474:	bne	11f44 <abort@plt+0x1220>
   12478:	ldr	r3, [sp, #64]	; 0x40
   1247c:	cmp	r3, #0
   12480:	bne	12cb8 <abort@plt+0x1f94>
   12484:	add	sl, sl, #1
   12488:	ldr	r6, [sp, #36]	; 0x24
   1248c:	str	r3, [sp, #32]
   12490:	mov	r4, #92	; 0x5c
   12494:	b	11e50 <abort@plt+0x112c>
   12498:	ldr	r3, [sp, #176]	; 0xb0
   1249c:	mov	r6, #0
   124a0:	cmp	r3, #2
   124a4:	bne	11f78 <abort@plt+0x1254>
   124a8:	ldr	r3, [sp, #40]	; 0x28
   124ac:	cmp	r3, #0
   124b0:	bne	12794 <abort@plt+0x1a70>
   124b4:	mov	r1, r7
   124b8:	str	r3, [sp, #32]
   124bc:	mov	r4, #63	; 0x3f
   124c0:	b	11e1c <abort@plt+0x10f8>
   124c4:	ldr	r3, [sp, #176]	; 0xb0
   124c8:	mov	r6, #0
   124cc:	cmp	r3, #2
   124d0:	bne	11fc8 <abort@plt+0x12a4>
   124d4:	ldr	r3, [sp, #64]	; 0x40
   124d8:	cmp	r3, #0
   124dc:	bne	12cb8 <abort@plt+0x1f94>
   124e0:	ldr	r2, [sp, #84]	; 0x54
   124e4:	adds	r3, fp, #0
   124e8:	movne	r3, #1
   124ec:	cmp	r2, #0
   124f0:	movne	r3, #0
   124f4:	cmp	r3, #0
   124f8:	strne	fp, [sp, #84]	; 0x54
   124fc:	movne	fp, #0
   12500:	bne	12530 <abort@plt+0x180c>
   12504:	cmp	fp, r8
   12508:	movhi	r3, #39	; 0x27
   1250c:	strbhi	r3, [r9, r8]
   12510:	add	r3, r8, #1
   12514:	cmp	fp, r3
   12518:	movhi	r2, #92	; 0x5c
   1251c:	strbhi	r2, [r9, r3]
   12520:	add	r3, r8, #2
   12524:	cmp	fp, r3
   12528:	movhi	r2, #39	; 0x27
   1252c:	strbhi	r2, [r9, r3]
   12530:	ldr	r3, [sp, #64]	; 0x40
   12534:	add	r8, r8, #3
   12538:	mov	r1, r7
   1253c:	str	r7, [sp, #32]
   12540:	str	r7, [sp, #76]	; 0x4c
   12544:	str	r3, [sp, #36]	; 0x24
   12548:	mov	r4, #39	; 0x27
   1254c:	b	11e1c <abort@plt+0x10f8>
   12550:	mov	r6, #0
   12554:	b	11fe0 <abort@plt+0x12bc>
   12558:	mov	r6, #0
   1255c:	b	121d4 <abort@plt+0x14b0>
   12560:	mov	r6, #0
   12564:	b	121f4 <abort@plt+0x14d0>
   12568:	str	r7, [sp, #32]
   1256c:	mov	r6, #0
   12570:	b	121fc <abort@plt+0x14d8>
   12574:	mov	r6, #0
   12578:	b	12224 <abort@plt+0x1500>
   1257c:	mov	r6, #0
   12580:	b	11ff0 <abort@plt+0x12cc>
   12584:	mov	r6, #0
   12588:	b	120b8 <abort@plt+0x1394>
   1258c:	mov	r6, #0
   12590:	b	12088 <abort@plt+0x1364>
   12594:	mov	r6, #0
   12598:	mov	r3, #116	; 0x74
   1259c:	b	12090 <abort@plt+0x136c>
   125a0:	mov	r6, #0
   125a4:	b	120cc <abort@plt+0x13a8>
   125a8:	mov	r6, #0
   125ac:	b	120e0 <abort@plt+0x13bc>
   125b0:	ldr	r3, [sp, #56]	; 0x38
   125b4:	mov	r6, #0
   125b8:	cmp	r3, #0
   125bc:	bne	12100 <abort@plt+0x13dc>
   125c0:	ldr	r3, [sp, #96]	; 0x60
   125c4:	cmp	r3, #0
   125c8:	addne	sl, sl, #1
   125cc:	bne	11974 <abort@plt+0xc50>
   125d0:	ldr	r1, [sp, #52]	; 0x34
   125d4:	str	r3, [sp, #32]
   125d8:	mov	r4, r3
   125dc:	b	11e1c <abort@plt+0x10f8>
   125e0:	mov	r6, #0
   125e4:	ldr	r3, [sp, #80]	; 0x50
   125e8:	cmp	r3, #1
   125ec:	bne	127dc <abort@plt+0x1ab8>
   125f0:	bl	10c58 <__ctype_b_loc@plt>
   125f4:	ldr	r2, [sp, #80]	; 0x50
   125f8:	sxth	r3, r4
   125fc:	mov	r1, r2
   12600:	lsl	r3, r3, #1
   12604:	ldr	r2, [r0]
   12608:	ldrh	r3, [r2, r3]
   1260c:	and	r3, r3, #16384	; 0x4000
   12610:	cmp	r3, #0
   12614:	movne	r3, #1
   12618:	moveq	r3, #0
   1261c:	str	r3, [sp, #32]
   12620:	moveq	r3, #1
   12624:	movne	r3, #0
   12628:	ldr	r2, [sp, #56]	; 0x38
   1262c:	and	r3, r3, r2
   12630:	ands	r3, r3, #255	; 0xff
   12634:	beq	12208 <abort@plt+0x14e4>
   12638:	add	r1, sl, r1
   1263c:	mov	r0, #0
   12640:	ldr	r7, [sp, #40]	; 0x28
   12644:	ldr	r2, [sp, #36]	; 0x24
   12648:	ldr	lr, [sp, #52]	; 0x34
   1264c:	b	126fc <abort@plt+0x19d8>
   12650:	cmp	r7, #0
   12654:	bne	12a50 <abort@plt+0x1d2c>
   12658:	eor	r0, r2, #1
   1265c:	ands	r0, lr, r0
   12660:	beq	12698 <abort@plt+0x1974>
   12664:	cmp	fp, r8
   12668:	movhi	r2, #39	; 0x27
   1266c:	strbhi	r2, [r9, r8]
   12670:	add	r2, r8, #1
   12674:	cmp	fp, r2
   12678:	movhi	ip, #36	; 0x24
   1267c:	strbhi	ip, [r9, r2]
   12680:	add	r2, r8, #2
   12684:	cmp	fp, r2
   12688:	movhi	ip, #39	; 0x27
   1268c:	strbhi	ip, [r9, r2]
   12690:	add	r8, r8, #3
   12694:	mov	r2, r0
   12698:	cmp	fp, r8
   1269c:	movhi	r0, #92	; 0x5c
   126a0:	strbhi	r0, [r9, r8]
   126a4:	add	r0, r8, #1
   126a8:	cmp	fp, r0
   126ac:	lsrhi	ip, r4, #6
   126b0:	addhi	ip, ip, #48	; 0x30
   126b4:	strbhi	ip, [r9, r0]
   126b8:	add	ip, r8, #2
   126bc:	cmp	fp, ip
   126c0:	lsrhi	r0, r4, #3
   126c4:	andhi	r0, r0, #7
   126c8:	addhi	r0, r0, #48	; 0x30
   126cc:	add	sl, sl, #1
   126d0:	strbhi	r0, [r9, ip]
   126d4:	and	r4, r4, #7
   126d8:	cmp	sl, r1
   126dc:	add	r4, r4, #48	; 0x30
   126e0:	add	r8, r8, #3
   126e4:	bcs	12a68 <abort@plt+0x1d44>
   126e8:	mov	r0, r3
   126ec:	cmp	fp, r8
   126f0:	strbhi	r4, [r9, r8]
   126f4:	ldrb	r4, [r5, #1]!
   126f8:	add	r8, r8, #1
   126fc:	cmp	r3, #0
   12700:	bne	12650 <abort@plt+0x192c>
   12704:	cmp	r6, #0
   12708:	bne	127ac <abort@plt+0x1a88>
   1270c:	eor	r6, r0, #1
   12710:	and	r6, r6, r2
   12714:	add	sl, sl, #1
   12718:	cmp	r1, sl
   1271c:	uxtb	r6, r6
   12720:	bls	127d4 <abort@plt+0x1ab0>
   12724:	cmp	r6, #0
   12728:	beq	126ec <abort@plt+0x19c8>
   1272c:	cmp	fp, r8
   12730:	movhi	r2, #39	; 0x27
   12734:	strbhi	r2, [r9, r8]
   12738:	add	r2, r8, #1
   1273c:	cmp	fp, r2
   12740:	movhi	ip, #39	; 0x27
   12744:	strbhi	ip, [r9, r2]
   12748:	add	r8, r8, #2
   1274c:	mov	r6, r3
   12750:	mov	r2, r3
   12754:	b	126ec <abort@plt+0x19c8>
   12758:	ldr	r3, [sp, #184]	; 0xb8
   1275c:	cmp	r3, #0
   12760:	beq	11e38 <abort@plt+0x1114>
   12764:	lsr	r2, r4, #5
   12768:	mov	r0, r3
   1276c:	uxtb	r2, r2
   12770:	and	r3, r4, #31
   12774:	ldr	r2, [r0, r2, lsl #2]
   12778:	lsr	r3, r2, r3
   1277c:	tst	r3, #1
   12780:	beq	11e38 <abort@plt+0x1114>
   12784:	ldr	r3, [sp, #40]	; 0x28
   12788:	cmp	r3, #0
   1278c:	beq	12024 <abort@plt+0x1300>
   12790:	mov	r3, r1
   12794:	str	r3, [sp, #64]	; 0x40
   12798:	mov	sl, r9
   1279c:	ldr	r3, [sp, #56]	; 0x38
   127a0:	mov	r9, fp
   127a4:	ldr	r2, [sp, #64]	; 0x40
   127a8:	b	12998 <abort@plt+0x1c74>
   127ac:	cmp	fp, r8
   127b0:	eor	r6, r0, #1
   127b4:	movhi	ip, #92	; 0x5c
   127b8:	and	r6, r6, r2
   127bc:	add	sl, sl, #1
   127c0:	strbhi	ip, [r9, r8]
   127c4:	cmp	r1, sl
   127c8:	add	r8, r8, #1
   127cc:	uxtb	r6, r6
   127d0:	bhi	12724 <abort@plt+0x1a00>
   127d4:	str	r2, [sp, #36]	; 0x24
   127d8:	b	11e50 <abort@plt+0x112c>
   127dc:	ldr	r3, [sp, #24]
   127e0:	cmn	r3, #1
   127e4:	mov	r3, #0
   127e8:	str	r3, [sp, #128]	; 0x80
   127ec:	str	r3, [sp, #132]	; 0x84
   127f0:	beq	12ae4 <abort@plt+0x1dc0>
   127f4:	mov	r2, r7
   127f8:	mov	r3, #0
   127fc:	str	r7, [sp, #104]	; 0x68
   12800:	str	r5, [sp, #116]	; 0x74
   12804:	mov	r7, r3
   12808:	mov	r5, r2
   1280c:	str	r4, [sp, #32]
   12810:	str	r6, [sp, #108]	; 0x6c
   12814:	str	r8, [sp, #112]	; 0x70
   12818:	ldr	r3, [sp, #44]	; 0x2c
   1281c:	add	r6, sl, r7
   12820:	add	r4, r3, r6
   12824:	ldr	r3, [sp, #24]
   12828:	mov	r1, r4
   1282c:	sub	r2, r3, r6
   12830:	add	r0, sp, #124	; 0x7c
   12834:	add	r3, sp, #128	; 0x80
   12838:	bl	16b50 <abort@plt+0x5e2c>
   1283c:	subs	r8, r0, #0
   12840:	beq	12bc8 <abort@plt+0x1ea4>
   12844:	cmn	r8, #1
   12848:	beq	12ba0 <abort@plt+0x1e7c>
   1284c:	cmn	r8, #2
   12850:	beq	12b38 <abort@plt+0x1e14>
   12854:	ldr	r3, [sp, #64]	; 0x40
   12858:	cmp	r3, #0
   1285c:	beq	1291c <abort@plt+0x1bf8>
   12860:	cmp	r8, #1
   12864:	beq	1291c <abort@plt+0x1bf8>
   12868:	sub	r3, r8, #1
   1286c:	add	r6, r3, r6
   12870:	ldr	r3, [sp, #44]	; 0x2c
   12874:	add	r6, r3, r6
   12878:	ldrb	r3, [r4, #1]!
   1287c:	sub	r3, r3, #91	; 0x5b
   12880:	cmp	r3, #33	; 0x21
   12884:	ldrls	pc, [pc, r3, lsl #2]
   12888:	b	12914 <abort@plt+0x1bf0>
   1288c:	andeq	r2, r1, r0, lsl #19
   12890:	andeq	r2, r1, r0, lsl #19
   12894:	andeq	r2, r1, r4, lsl r9
   12898:	andeq	r2, r1, r0, lsl #19
   1289c:	andeq	r2, r1, r4, lsl r9
   128a0:	andeq	r2, r1, r0, lsl #19
   128a4:	andeq	r2, r1, r4, lsl r9
   128a8:	andeq	r2, r1, r4, lsl r9
   128ac:	andeq	r2, r1, r4, lsl r9
   128b0:	andeq	r2, r1, r4, lsl r9
   128b4:	andeq	r2, r1, r4, lsl r9
   128b8:	andeq	r2, r1, r4, lsl r9
   128bc:	andeq	r2, r1, r4, lsl r9
   128c0:	andeq	r2, r1, r4, lsl r9
   128c4:	andeq	r2, r1, r4, lsl r9
   128c8:	andeq	r2, r1, r4, lsl r9
   128cc:	andeq	r2, r1, r4, lsl r9
   128d0:	andeq	r2, r1, r4, lsl r9
   128d4:	andeq	r2, r1, r4, lsl r9
   128d8:	andeq	r2, r1, r4, lsl r9
   128dc:	andeq	r2, r1, r4, lsl r9
   128e0:	andeq	r2, r1, r4, lsl r9
   128e4:	andeq	r2, r1, r4, lsl r9
   128e8:	andeq	r2, r1, r4, lsl r9
   128ec:	andeq	r2, r1, r4, lsl r9
   128f0:	andeq	r2, r1, r4, lsl r9
   128f4:	andeq	r2, r1, r4, lsl r9
   128f8:	andeq	r2, r1, r4, lsl r9
   128fc:	andeq	r2, r1, r4, lsl r9
   12900:	andeq	r2, r1, r4, lsl r9
   12904:	andeq	r2, r1, r4, lsl r9
   12908:	andeq	r2, r1, r4, lsl r9
   1290c:	andeq	r2, r1, r4, lsl r9
   12910:	andeq	r2, r1, r0, lsl #19
   12914:	cmp	r6, r4
   12918:	bne	12878 <abort@plt+0x1b54>
   1291c:	ldr	r0, [sp, #124]	; 0x7c
   12920:	bl	10bc8 <iswprint@plt>
   12924:	add	r7, r7, r8
   12928:	cmp	r0, #0
   1292c:	add	r0, sp, #128	; 0x80
   12930:	moveq	r5, #0
   12934:	bl	10b80 <mbsinit@plt>
   12938:	cmp	r0, #0
   1293c:	beq	12818 <abort@plt+0x1af4>
   12940:	ldr	r4, [sp, #32]
   12944:	str	r5, [sp, #32]
   12948:	ldr	r3, [sp, #32]
   1294c:	mov	r1, r7
   12950:	eor	r3, r3, #1
   12954:	ldr	r7, [sp, #104]	; 0x68
   12958:	ldr	r6, [sp, #108]	; 0x6c
   1295c:	ldr	r8, [sp, #112]	; 0x70
   12960:	ldr	r5, [sp, #116]	; 0x74
   12964:	uxtb	r3, r3
   12968:	cmp	r1, #1
   1296c:	bls	12628 <abort@plt+0x1904>
   12970:	ldr	r2, [sp, #56]	; 0x38
   12974:	and	r3, r3, r2
   12978:	uxtb	r3, r3
   1297c:	b	12638 <abort@plt+0x1914>
   12980:	mov	r3, #2
   12984:	str	r3, [sp, #176]	; 0xb0
   12988:	ldr	r2, [sp, #64]	; 0x40
   1298c:	ldr	r3, [sp, #56]	; 0x38
   12990:	mov	sl, r9
   12994:	mov	r9, fp
   12998:	and	r3, r3, r2
   1299c:	tst	r3, #255	; 0xff
   129a0:	ldr	r3, [sp, #176]	; 0xb0
   129a4:	movne	r3, #4
   129a8:	str	r3, [sp, #176]	; 0xb0
   129ac:	ldr	r3, [sp, #180]	; 0xb4
   129b0:	mov	ip, #0
   129b4:	bic	r3, r3, #2
   129b8:	str	r3, [sp, #4]
   129bc:	ldr	r3, [sp, #192]	; 0xc0
   129c0:	ldr	r2, [sp, #44]	; 0x2c
   129c4:	str	r3, [sp, #16]
   129c8:	ldr	r3, [sp, #188]	; 0xbc
   129cc:	mov	r1, r9
   129d0:	str	r3, [sp, #12]
   129d4:	ldr	r3, [sp, #176]	; 0xb0
   129d8:	mov	r0, sl
   129dc:	str	r3, [sp]
   129e0:	str	ip, [sp, #8]
   129e4:	ldr	r3, [sp, #24]
   129e8:	bl	11848 <abort@plt+0xb24>
   129ec:	mov	fp, r0
   129f0:	mov	r0, fp
   129f4:	add	sp, sp, #140	; 0x8c
   129f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129fc:	mov	r4, #92	; 0x5c
   12a00:	mov	r1, #0
   12a04:	mov	r3, r4
   12a08:	b	11ffc <abort@plt+0x12d8>
   12a0c:	mov	r3, #0
   12a10:	ldr	r1, [sp, #52]	; 0x34
   12a14:	str	r3, [sp, #32]
   12a18:	mov	r4, #63	; 0x3f
   12a1c:	b	11e1c <abort@plt+0x10f8>
   12a20:	cmp	fp, #0
   12a24:	beq	12a80 <abort@plt+0x1d5c>
   12a28:	mov	r3, #39	; 0x27
   12a2c:	strb	r3, [r9]
   12a30:	mov	r3, #0
   12a34:	str	r3, [sp, #40]	; 0x28
   12a38:	mov	r3, #1
   12a3c:	str	r3, [sp, #68]	; 0x44
   12a40:	ldr	r3, [pc, #448]	; 12c08 <abort@plt+0x1ee4>
   12a44:	mov	r8, #1
   12a48:	str	r3, [sp, #72]	; 0x48
   12a4c:	b	11c30 <abort@plt+0xf0c>
   12a50:	ldr	r3, [sp, #40]	; 0x28
   12a54:	mov	sl, r9
   12a58:	str	r3, [sp, #56]	; 0x38
   12a5c:	mov	r9, fp
   12a60:	ldr	r2, [sp, #64]	; 0x40
   12a64:	b	12998 <abort@plt+0x1c74>
   12a68:	str	r2, [sp, #36]	; 0x24
   12a6c:	b	11e80 <abort@plt+0x115c>
   12a70:	mov	r1, #0
   12a74:	str	r3, [sp, #32]
   12a78:	mov	r4, #63	; 0x3f
   12a7c:	b	11e1c <abort@plt+0x10f8>
   12a80:	ldr	r3, [pc, #384]	; 12c08 <abort@plt+0x1ee4>
   12a84:	str	r3, [sp, #72]	; 0x48
   12a88:	mov	r3, #0
   12a8c:	str	r3, [sp, #40]	; 0x28
   12a90:	mov	r3, #1
   12a94:	str	r3, [sp, #68]	; 0x44
   12a98:	mov	r8, r3
   12a9c:	b	11c30 <abort@plt+0xf0c>
   12aa0:	bl	10d24 <abort@plt>
   12aa4:	cmp	fp, #0
   12aa8:	beq	12b08 <abort@plt+0x1de4>
   12aac:	mov	r2, #1
   12ab0:	mov	r3, #34	; 0x22
   12ab4:	strb	r3, [r9]
   12ab8:	mov	r8, r2
   12abc:	mov	r3, r2
   12ac0:	str	r2, [sp, #68]	; 0x44
   12ac4:	str	r3, [sp, #56]	; 0x38
   12ac8:	ldr	r3, [pc, #316]	; 12c0c <abort@plt+0x1ee8>
   12acc:	ldr	r1, [sp, #56]	; 0x38
   12ad0:	str	r3, [sp, #72]	; 0x48
   12ad4:	ldr	r2, [sp, #176]	; 0xb0
   12ad8:	ldr	ip, [sp, #40]	; 0x28
   12adc:	ldr	lr, [sp, #176]	; 0xb0
   12ae0:	b	11914 <abort@plt+0xbf0>
   12ae4:	ldr	r0, [sp, #44]	; 0x2c
   12ae8:	bl	10c70 <strlen@plt>
   12aec:	str	r0, [sp, #24]
   12af0:	b	127f4 <abort@plt+0x1ad0>
   12af4:	mov	r7, #0
   12af8:	ldr	r1, [sp, #52]	; 0x34
   12afc:	str	r3, [sp, #32]
   12b00:	mov	r4, #48	; 0x30
   12b04:	b	11e1c <abort@plt+0x10f8>
   12b08:	mov	r3, #1
   12b0c:	str	r3, [sp, #68]	; 0x44
   12b10:	mov	r8, r3
   12b14:	b	12ac4 <abort@plt+0x1da0>
   12b18:	mov	r3, #2
   12b1c:	mov	sl, r9
   12b20:	str	r3, [sp, #176]	; 0xb0
   12b24:	mov	r9, fp
   12b28:	ldr	r3, [sp, #56]	; 0x38
   12b2c:	b	12998 <abort@plt+0x1c74>
   12b30:	ldr	r6, [sp, #48]	; 0x30
   12b34:	b	125e4 <abort@plt+0x18c0>
   12b38:	ldr	r0, [sp, #24]
   12b3c:	mov	ip, r6
   12b40:	cmp	r0, ip
   12b44:	mov	r1, r7
   12b48:	mov	r2, r4
   12b4c:	ldr	r7, [sp, #104]	; 0x68
   12b50:	ldr	r4, [sp, #32]
   12b54:	ldr	r6, [sp, #108]	; 0x6c
   12b58:	ldr	r8, [sp, #112]	; 0x70
   12b5c:	ldr	r5, [sp, #116]	; 0x74
   12b60:	bls	12b90 <abort@plt+0x1e6c>
   12b64:	ldrb	r3, [r2]
   12b68:	cmp	r3, #0
   12b6c:	bne	12b80 <abort@plt+0x1e5c>
   12b70:	b	12ca0 <abort@plt+0x1f7c>
   12b74:	ldrb	r3, [r2, #1]!
   12b78:	cmp	r3, #0
   12b7c:	beq	12ca0 <abort@plt+0x1f7c>
   12b80:	add	r1, r1, #1
   12b84:	add	r3, sl, r1
   12b88:	cmp	r0, r3
   12b8c:	bhi	12b74 <abort@plt+0x1e50>
   12b90:	mov	r2, #0
   12b94:	mov	r3, r7
   12b98:	str	r2, [sp, #32]
   12b9c:	b	12968 <abort@plt+0x1c44>
   12ba0:	mov	r1, r7
   12ba4:	ldr	r7, [sp, #104]	; 0x68
   12ba8:	mov	r2, #0
   12bac:	ldr	r4, [sp, #32]
   12bb0:	ldr	r6, [sp, #108]	; 0x6c
   12bb4:	ldr	r8, [sp, #112]	; 0x70
   12bb8:	ldr	r5, [sp, #116]	; 0x74
   12bbc:	mov	r3, r7
   12bc0:	str	r2, [sp, #32]
   12bc4:	b	12968 <abort@plt+0x1c44>
   12bc8:	mov	r3, r5
   12bcc:	eor	r3, r3, #1
   12bd0:	ldr	r4, [sp, #32]
   12bd4:	mov	r1, r7
   12bd8:	str	r5, [sp, #32]
   12bdc:	ldr	r7, [sp, #104]	; 0x68
   12be0:	ldr	r6, [sp, #108]	; 0x6c
   12be4:	ldr	r8, [sp, #112]	; 0x70
   12be8:	ldr	r5, [sp, #116]	; 0x74
   12bec:	uxtb	r3, r3
   12bf0:	b	12968 <abort@plt+0x1c44>
   12bf4:	mov	sl, r9
   12bf8:	str	r3, [sp, #56]	; 0x38
   12bfc:	mov	r9, fp
   12c00:	ldr	r2, [sp, #64]	; 0x40
   12c04:	b	12998 <abort@plt+0x1c74>
   12c08:	andeq	r7, r1, r8, lsl r8
   12c0c:	andeq	r7, r1, r4, lsl r8
   12c10:	andeq	r7, r1, ip, lsl r8
   12c14:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12c18:	ldr	r2, [sp, #44]	; 0x2c
   12c1c:	ldrb	r1, [r2, r3]
   12c20:	sub	r2, r1, #33	; 0x21
   12c24:	uxtb	r2, r2
   12c28:	cmp	r2, #29
   12c2c:	bhi	12cac <abort@plt+0x1f88>
   12c30:	ldr	r0, [pc, #-36]	; 12c14 <abort@plt+0x1ef0>
   12c34:	mov	ip, #1
   12c38:	ands	r2, r0, ip, lsl r2
   12c3c:	beq	12ccc <abort@plt+0x1fa8>
   12c40:	ldr	r2, [sp, #40]	; 0x28
   12c44:	cmp	r2, #0
   12c48:	bne	12dc0 <abort@plt+0x209c>
   12c4c:	add	r2, r8, #1
   12c50:	cmp	fp, r8
   12c54:	strbhi	r4, [r9, r8]
   12c58:	cmp	fp, r2
   12c5c:	movhi	r0, #34	; 0x22
   12c60:	strbhi	r0, [r9, r2]
   12c64:	add	r2, r8, #2
   12c68:	cmp	fp, r2
   12c6c:	movhi	r0, #34	; 0x22
   12c70:	strbhi	r0, [r9, r2]
   12c74:	add	r2, r8, #3
   12c78:	cmp	fp, r2
   12c7c:	mov	sl, r3
   12c80:	ldr	r3, [sp, #40]	; 0x28
   12c84:	movhi	r0, #63	; 0x3f
   12c88:	mov	r4, r1
   12c8c:	strbhi	r0, [r9, r2]
   12c90:	add	r8, r8, #4
   12c94:	mov	r1, r3
   12c98:	str	r3, [sp, #32]
   12c9c:	b	11e1c <abort@plt+0x10f8>
   12ca0:	str	r3, [sp, #32]
   12ca4:	mov	r3, r7
   12ca8:	b	12968 <abort@plt+0x1c44>
   12cac:	mov	r1, #0
   12cb0:	str	r1, [sp, #32]
   12cb4:	b	11e1c <abort@plt+0x10f8>
   12cb8:	mov	sl, r9
   12cbc:	ldr	r3, [sp, #56]	; 0x38
   12cc0:	mov	r9, fp
   12cc4:	ldr	r2, [sp, #64]	; 0x40
   12cc8:	b	12998 <abort@plt+0x1c74>
   12ccc:	str	r2, [sp, #32]
   12cd0:	mov	r1, #0
   12cd4:	b	11e1c <abort@plt+0x10f8>
   12cd8:	ldr	r2, [sp, #76]	; 0x4c
   12cdc:	mov	sl, r9
   12ce0:	mov	r9, fp
   12ce4:	mov	fp, r8
   12ce8:	ldr	r1, [sp, #72]	; 0x48
   12cec:	cmp	r1, #0
   12cf0:	moveq	r3, #0
   12cf4:	andne	r3, r2, #1
   12cf8:	cmp	r3, #0
   12cfc:	beq	12d28 <abort@plt+0x2004>
   12d00:	ldrb	r3, [r1]
   12d04:	cmp	r3, #0
   12d08:	beq	12d28 <abort@plt+0x2004>
   12d0c:	mov	r2, r1
   12d10:	cmp	r9, fp
   12d14:	strbhi	r3, [sl, fp]
   12d18:	ldrb	r3, [r2, #1]!
   12d1c:	add	fp, fp, #1
   12d20:	cmp	r3, #0
   12d24:	bne	12d10 <abort@plt+0x1fec>
   12d28:	cmp	r9, fp
   12d2c:	movhi	r3, #0
   12d30:	strbhi	r3, [sl, fp]
   12d34:	b	129f0 <abort@plt+0x1ccc>
   12d38:	ldr	r3, [sp, #192]	; 0xc0
   12d3c:	mov	ip, #5
   12d40:	str	r3, [sp, #16]
   12d44:	ldr	r3, [sp, #188]	; 0xbc
   12d48:	ldr	r2, [sp, #44]	; 0x2c
   12d4c:	str	r3, [sp, #12]
   12d50:	ldr	r3, [sp, #184]	; 0xb8
   12d54:	ldr	r1, [sp, #84]	; 0x54
   12d58:	str	r3, [sp, #8]
   12d5c:	ldr	r3, [sp, #180]	; 0xb4
   12d60:	mov	r0, r9
   12d64:	str	r3, [sp, #4]
   12d68:	str	ip, [sp]
   12d6c:	ldr	r3, [sp, #24]
   12d70:	bl	11848 <abort@plt+0xb24>
   12d74:	mov	fp, r0
   12d78:	b	129f0 <abort@plt+0x1ccc>
   12d7c:	mov	sl, r9
   12d80:	mov	r9, fp
   12d84:	mov	fp, r8
   12d88:	b	12ce8 <abort@plt+0x1fc4>
   12d8c:	ldr	r1, [sp, #176]	; 0xb0
   12d90:	bl	11728 <abort@plt+0xa04>
   12d94:	str	r0, [sp, #192]	; 0xc0
   12d98:	b	11d04 <abort@plt+0xfe0>
   12d9c:	ldr	r1, [sp, #176]	; 0xb0
   12da0:	bl	11728 <abort@plt+0xa04>
   12da4:	str	r0, [sp, #188]	; 0xbc
   12da8:	b	11ce4 <abort@plt+0xfc0>
   12dac:	mov	sl, r9
   12db0:	mov	r2, r3
   12db4:	mov	r9, fp
   12db8:	mov	fp, r8
   12dbc:	b	12ce8 <abort@plt+0x1fc4>
   12dc0:	mov	sl, r9
   12dc4:	mov	r9, fp
   12dc8:	b	129ac <abort@plt+0x1c88>
   12dcc:	push	{r4, r5, r6, lr}
   12dd0:	mov	r5, r0
   12dd4:	bl	10c7c <__errno_location@plt>
   12dd8:	cmp	r5, #0
   12ddc:	mov	r1, #48	; 0x30
   12de0:	mov	r4, r0
   12de4:	ldr	r0, [pc, #16]	; 12dfc <abort@plt+0x20d8>
   12de8:	ldr	r6, [r4]
   12dec:	movne	r0, r5
   12df0:	bl	16668 <abort@plt+0x5944>
   12df4:	str	r6, [r4]
   12df8:	pop	{r4, r5, r6, pc}
   12dfc:	andeq	r8, r2, ip, lsr r1
   12e00:	ldr	r3, [pc, #12]	; 12e14 <abort@plt+0x20f0>
   12e04:	cmp	r0, #0
   12e08:	moveq	r0, r3
   12e0c:	ldr	r0, [r0]
   12e10:	bx	lr
   12e14:	andeq	r8, r2, ip, lsr r1
   12e18:	ldr	r3, [pc, #12]	; 12e2c <abort@plt+0x2108>
   12e1c:	cmp	r0, #0
   12e20:	moveq	r0, r3
   12e24:	str	r1, [r0]
   12e28:	bx	lr
   12e2c:	andeq	r8, r2, ip, lsr r1
   12e30:	ldr	r3, [pc, #52]	; 12e6c <abort@plt+0x2148>
   12e34:	cmp	r0, #0
   12e38:	moveq	r0, r3
   12e3c:	add	r3, r0, #8
   12e40:	push	{lr}		; (str lr, [sp, #-4]!)
   12e44:	lsr	lr, r1, #5
   12e48:	and	r1, r1, #31
   12e4c:	ldr	ip, [r3, lr, lsl #2]
   12e50:	lsr	r0, ip, r1
   12e54:	eor	r2, r2, r0
   12e58:	and	r2, r2, #1
   12e5c:	and	r0, r0, #1
   12e60:	eor	r1, ip, r2, lsl r1
   12e64:	str	r1, [r3, lr, lsl #2]
   12e68:	pop	{pc}		; (ldr pc, [sp], #4)
   12e6c:	andeq	r8, r2, ip, lsr r1
   12e70:	ldr	r3, [pc, #16]	; 12e88 <abort@plt+0x2164>
   12e74:	cmp	r0, #0
   12e78:	movne	r3, r0
   12e7c:	ldr	r0, [r3, #4]
   12e80:	str	r1, [r3, #4]
   12e84:	bx	lr
   12e88:	andeq	r8, r2, ip, lsr r1
   12e8c:	ldr	r3, [pc, #44]	; 12ec0 <abort@plt+0x219c>
   12e90:	cmp	r0, #0
   12e94:	moveq	r0, r3
   12e98:	mov	ip, #10
   12e9c:	cmp	r2, #0
   12ea0:	cmpne	r1, #0
   12ea4:	str	ip, [r0]
   12ea8:	beq	12eb8 <abort@plt+0x2194>
   12eac:	str	r1, [r0, #40]	; 0x28
   12eb0:	str	r2, [r0, #44]	; 0x2c
   12eb4:	bx	lr
   12eb8:	push	{r4, lr}
   12ebc:	bl	10d24 <abort@plt>
   12ec0:	andeq	r8, r2, ip, lsr r1
   12ec4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12ec8:	sub	sp, sp, #24
   12ecc:	ldr	ip, [pc, #108]	; 12f40 <abort@plt+0x221c>
   12ed0:	ldr	r4, [sp, #56]	; 0x38
   12ed4:	mov	r9, r2
   12ed8:	cmp	r4, #0
   12edc:	moveq	r4, ip
   12ee0:	mov	sl, r3
   12ee4:	mov	r7, r0
   12ee8:	mov	r8, r1
   12eec:	bl	10c7c <__errno_location@plt>
   12ef0:	ldr	r3, [r4, #44]	; 0x2c
   12ef4:	mov	r1, r8
   12ef8:	ldr	r6, [r0]
   12efc:	str	r3, [sp, #16]
   12f00:	ldr	r2, [r4, #40]	; 0x28
   12f04:	add	r3, r4, #8
   12f08:	str	r3, [sp, #8]
   12f0c:	str	r2, [sp, #12]
   12f10:	ldr	r2, [r4, #4]
   12f14:	mov	r5, r0
   12f18:	str	r2, [sp, #4]
   12f1c:	ldr	ip, [r4]
   12f20:	mov	r3, sl
   12f24:	mov	r2, r9
   12f28:	mov	r0, r7
   12f2c:	str	ip, [sp]
   12f30:	bl	11848 <abort@plt+0xb24>
   12f34:	str	r6, [r5]
   12f38:	add	sp, sp, #24
   12f3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12f40:	andeq	r8, r2, ip, lsr r1
   12f44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f48:	cmp	r2, #0
   12f4c:	sub	sp, sp, #36	; 0x24
   12f50:	ldr	r4, [pc, #164]	; 12ffc <abort@plt+0x22d8>
   12f54:	mov	r8, r1
   12f58:	movne	r4, r2
   12f5c:	mov	r7, r0
   12f60:	bl	10c7c <__errno_location@plt>
   12f64:	ldr	r3, [r4, #44]	; 0x2c
   12f68:	ldr	r5, [r4, #4]
   12f6c:	add	r9, r4, #8
   12f70:	orr	r5, r5, #1
   12f74:	mov	r1, #0
   12f78:	mov	r2, r7
   12f7c:	ldr	fp, [r0]
   12f80:	str	r3, [sp, #16]
   12f84:	ldr	r3, [r4, #40]	; 0x28
   12f88:	stmib	sp, {r5, r9}
   12f8c:	str	r3, [sp, #12]
   12f90:	ldr	r3, [r4]
   12f94:	mov	r6, r0
   12f98:	str	r3, [sp]
   12f9c:	mov	r0, r1
   12fa0:	mov	r3, r8
   12fa4:	bl	11848 <abort@plt+0xb24>
   12fa8:	add	r1, r0, #1
   12fac:	mov	r0, r1
   12fb0:	str	r1, [sp, #28]
   12fb4:	bl	16124 <abort@plt+0x5400>
   12fb8:	ldr	r3, [r4, #44]	; 0x2c
   12fbc:	ldr	r1, [sp, #28]
   12fc0:	str	r3, [sp, #16]
   12fc4:	ldr	r3, [r4, #40]	; 0x28
   12fc8:	str	r5, [sp, #4]
   12fcc:	str	r3, [sp, #12]
   12fd0:	str	r9, [sp, #8]
   12fd4:	ldr	ip, [r4]
   12fd8:	mov	r3, r8
   12fdc:	mov	r2, r7
   12fe0:	str	ip, [sp]
   12fe4:	mov	sl, r0
   12fe8:	bl	11848 <abort@plt+0xb24>
   12fec:	mov	r0, sl
   12ff0:	str	fp, [r6]
   12ff4:	add	sp, sp, #36	; 0x24
   12ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ffc:	andeq	r8, r2, ip, lsr r1
   13000:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13004:	cmp	r3, #0
   13008:	sub	sp, sp, #44	; 0x2c
   1300c:	ldr	r4, [pc, #192]	; 130d4 <abort@plt+0x23b0>
   13010:	mov	r6, r2
   13014:	movne	r4, r3
   13018:	mov	r9, r1
   1301c:	mov	r8, r0
   13020:	bl	10c7c <__errno_location@plt>
   13024:	ldr	r3, [r4, #44]	; 0x2c
   13028:	ldr	r5, [r4, #4]
   1302c:	add	sl, r4, #8
   13030:	cmp	r6, #0
   13034:	orreq	r5, r5, #1
   13038:	mov	r1, #0
   1303c:	ldr	r2, [r0]
   13040:	str	r3, [sp, #16]
   13044:	ldr	r3, [r4, #40]	; 0x28
   13048:	stmib	sp, {r5, sl}
   1304c:	str	r3, [sp, #12]
   13050:	ldr	r3, [r4]
   13054:	mov	r7, r0
   13058:	str	r2, [sp, #28]
   1305c:	str	r3, [sp]
   13060:	mov	r2, r8
   13064:	mov	r3, r9
   13068:	mov	r0, r1
   1306c:	bl	11848 <abort@plt+0xb24>
   13070:	add	r1, r0, #1
   13074:	mov	fp, r0
   13078:	mov	r0, r1
   1307c:	str	r1, [sp, #36]	; 0x24
   13080:	bl	16124 <abort@plt+0x5400>
   13084:	ldr	r3, [r4, #44]	; 0x2c
   13088:	mov	r2, r8
   1308c:	str	r3, [sp, #16]
   13090:	ldr	r3, [r4, #40]	; 0x28
   13094:	str	r5, [sp, #4]
   13098:	str	r3, [sp, #12]
   1309c:	str	sl, [sp, #8]
   130a0:	ldr	ip, [r4]
   130a4:	ldr	r1, [sp, #36]	; 0x24
   130a8:	mov	r3, r9
   130ac:	str	ip, [sp]
   130b0:	str	r0, [sp, #32]
   130b4:	bl	11848 <abort@plt+0xb24>
   130b8:	ldr	r2, [sp, #28]
   130bc:	cmp	r6, #0
   130c0:	str	r2, [r7]
   130c4:	ldr	r0, [sp, #32]
   130c8:	strne	fp, [r6]
   130cc:	add	sp, sp, #44	; 0x2c
   130d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130d4:	andeq	r8, r2, ip, lsr r1
   130d8:	push	{r4, r5, r6, r7, r8, lr}
   130dc:	ldr	r6, [pc, #116]	; 13158 <abort@plt+0x2434>
   130e0:	ldr	r3, [r6, #4]
   130e4:	ldr	r7, [r6]
   130e8:	cmp	r3, #1
   130ec:	movgt	r5, r7
   130f0:	movgt	r4, #1
   130f4:	ble	13114 <abort@plt+0x23f0>
   130f8:	ldr	r0, [r5, #12]
   130fc:	bl	1161c <abort@plt+0x8f8>
   13100:	ldr	r3, [r6, #4]
   13104:	add	r4, r4, #1
   13108:	cmp	r3, r4
   1310c:	add	r5, r5, #8
   13110:	bgt	130f8 <abort@plt+0x23d4>
   13114:	ldr	r0, [r7, #4]
   13118:	ldr	r4, [pc, #60]	; 1315c <abort@plt+0x2438>
   1311c:	cmp	r0, r4
   13120:	beq	13134 <abort@plt+0x2410>
   13124:	bl	1161c <abort@plt+0x8f8>
   13128:	mov	r3, #256	; 0x100
   1312c:	str	r4, [r6, #12]
   13130:	str	r3, [r6, #8]
   13134:	ldr	r4, [pc, #36]	; 13160 <abort@plt+0x243c>
   13138:	cmp	r7, r4
   1313c:	beq	1314c <abort@plt+0x2428>
   13140:	mov	r0, r7
   13144:	bl	1161c <abort@plt+0x8f8>
   13148:	str	r4, [r6]
   1314c:	mov	r3, #1
   13150:	str	r3, [r6, #4]
   13154:	pop	{r4, r5, r6, r7, r8, pc}
   13158:	ldrdeq	r8, [r2], -r0
   1315c:	andeq	r8, r2, ip, ror #2
   13160:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   13164:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13168:	sub	sp, sp, #44	; 0x2c
   1316c:	mov	r5, r0
   13170:	mov	sl, r1
   13174:	bl	10c7c <__errno_location@plt>
   13178:	ldr	r4, [pc, #400]	; 13310 <abort@plt+0x25ec>
   1317c:	cmn	r5, #-2147483647	; 0x80000001
   13180:	ldr	r6, [r4]
   13184:	mov	r8, r0
   13188:	movne	r0, #0
   1318c:	moveq	r0, #1
   13190:	ldr	r3, [r8]
   13194:	orrs	r0, r0, r5, lsr #31
   13198:	str	r3, [sp, #24]
   1319c:	bne	1330c <abort@plt+0x25e8>
   131a0:	ldr	r2, [r4, #4]
   131a4:	cmp	r5, r2
   131a8:	blt	13208 <abort@plt+0x24e4>
   131ac:	add	r7, r4, #8
   131b0:	cmp	r6, r7
   131b4:	str	r2, [sp, #36]	; 0x24
   131b8:	beq	132dc <abort@plt+0x25b8>
   131bc:	mov	r3, #8
   131c0:	sub	r2, r5, r2
   131c4:	mov	r0, r6
   131c8:	str	r3, [sp]
   131cc:	add	r2, r2, #1
   131d0:	mvn	r3, #-2147483648	; 0x80000000
   131d4:	add	r1, sp, #36	; 0x24
   131d8:	bl	16340 <abort@plt+0x561c>
   131dc:	mov	r6, r0
   131e0:	str	r0, [r4]
   131e4:	ldr	r0, [r4, #4]
   131e8:	ldr	r2, [sp, #36]	; 0x24
   131ec:	mov	r1, #0
   131f0:	sub	r2, r2, r0
   131f4:	add	r0, r6, r0, lsl #3
   131f8:	lsl	r2, r2, #3
   131fc:	bl	10c94 <memset@plt>
   13200:	ldr	r3, [sp, #36]	; 0x24
   13204:	str	r3, [r4, #4]
   13208:	ldr	r4, [pc, #260]	; 13314 <abort@plt+0x25f0>
   1320c:	add	fp, r6, r5, lsl #3
   13210:	ldr	r9, [r6, r5, lsl #3]
   13214:	ldr	r0, [r4, #4]
   13218:	ldr	r3, [r4]
   1321c:	ldr	r7, [fp, #4]
   13220:	ldr	r1, [r4, #44]	; 0x2c
   13224:	ldr	r2, [r4, #40]	; 0x28
   13228:	orr	r0, r0, #1
   1322c:	str	r3, [sp]
   13230:	add	r3, r4, #8
   13234:	str	r0, [sp, #28]
   13238:	str	r0, [sp, #4]
   1323c:	str	r1, [sp, #16]
   13240:	str	r2, [sp, #12]
   13244:	str	r3, [sp, #8]
   13248:	mov	r0, r7
   1324c:	mov	r1, r9
   13250:	mvn	r3, #0
   13254:	mov	r2, sl
   13258:	bl	11848 <abort@plt+0xb24>
   1325c:	cmp	r9, r0
   13260:	bhi	132c8 <abort@plt+0x25a4>
   13264:	add	r3, r4, #48	; 0x30
   13268:	add	r9, r0, #1
   1326c:	cmp	r7, r3
   13270:	str	r9, [r6, r5, lsl #3]
   13274:	beq	13280 <abort@plt+0x255c>
   13278:	mov	r0, r7
   1327c:	bl	1161c <abort@plt+0x8f8>
   13280:	mov	r0, r9
   13284:	bl	16124 <abort@plt+0x5400>
   13288:	ldr	ip, [r4, #44]	; 0x2c
   1328c:	ldr	r3, [r4]
   13290:	ldr	lr, [r4, #40]	; 0x28
   13294:	ldr	r4, [pc, #124]	; 13318 <abort@plt+0x25f4>
   13298:	mov	r2, sl
   1329c:	mov	r1, r9
   132a0:	str	r0, [fp, #4]
   132a4:	str	r4, [sp, #8]
   132a8:	ldr	r4, [sp, #28]
   132ac:	str	r3, [sp]
   132b0:	str	r4, [sp, #4]
   132b4:	str	ip, [sp, #16]
   132b8:	str	lr, [sp, #12]
   132bc:	mvn	r3, #0
   132c0:	mov	r7, r0
   132c4:	bl	11848 <abort@plt+0xb24>
   132c8:	ldr	r3, [sp, #24]
   132cc:	mov	r0, r7
   132d0:	str	r3, [r8]
   132d4:	add	sp, sp, #44	; 0x2c
   132d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132dc:	mov	r3, #8
   132e0:	sub	r2, r5, r2
   132e4:	str	r3, [sp]
   132e8:	add	r1, sp, #36	; 0x24
   132ec:	add	r2, r2, #1
   132f0:	mvn	r3, #-2147483648	; 0x80000000
   132f4:	bl	16340 <abort@plt+0x561c>
   132f8:	mov	r6, r0
   132fc:	ldm	r7, {r0, r1}
   13300:	str	r6, [r4]
   13304:	stm	r6, {r0, r1}
   13308:	b	131e4 <abort@plt+0x24c0>
   1330c:	bl	10d24 <abort@plt>
   13310:	ldrdeq	r8, [r2], -r0
   13314:	andeq	r8, r2, ip, lsr r1
   13318:	andeq	r8, r2, r4, asr #2
   1331c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13320:	sub	sp, sp, #52	; 0x34
   13324:	mov	r5, r0
   13328:	mov	sl, r1
   1332c:	mov	fp, r2
   13330:	bl	10c7c <__errno_location@plt>
   13334:	ldr	r4, [pc, #408]	; 134d4 <abort@plt+0x27b0>
   13338:	cmn	r5, #-2147483647	; 0x80000001
   1333c:	ldr	r6, [r4]
   13340:	mov	r8, r0
   13344:	movne	r0, #0
   13348:	moveq	r0, #1
   1334c:	ldr	r3, [r8]
   13350:	orrs	r0, r0, r5, lsr #31
   13354:	str	r3, [sp, #28]
   13358:	bne	134d0 <abort@plt+0x27ac>
   1335c:	ldr	r2, [r4, #4]
   13360:	cmp	r5, r2
   13364:	blt	133c4 <abort@plt+0x26a0>
   13368:	add	r7, r4, #8
   1336c:	cmp	r6, r7
   13370:	str	r2, [sp, #44]	; 0x2c
   13374:	beq	134a0 <abort@plt+0x277c>
   13378:	mov	r3, #8
   1337c:	sub	r2, r5, r2
   13380:	mov	r0, r6
   13384:	str	r3, [sp]
   13388:	add	r2, r2, #1
   1338c:	mvn	r3, #-2147483648	; 0x80000000
   13390:	add	r1, sp, #44	; 0x2c
   13394:	bl	16340 <abort@plt+0x561c>
   13398:	mov	r6, r0
   1339c:	str	r0, [r4]
   133a0:	ldr	r0, [r4, #4]
   133a4:	ldr	r2, [sp, #44]	; 0x2c
   133a8:	mov	r1, #0
   133ac:	sub	r2, r2, r0
   133b0:	add	r0, r6, r0, lsl #3
   133b4:	lsl	r2, r2, #3
   133b8:	bl	10c94 <memset@plt>
   133bc:	ldr	r3, [sp, #44]	; 0x2c
   133c0:	str	r3, [r4, #4]
   133c4:	ldr	r4, [pc, #268]	; 134d8 <abort@plt+0x27b4>
   133c8:	add	r3, r6, r5, lsl #3
   133cc:	str	r3, [sp, #32]
   133d0:	ldr	r7, [r3, #4]
   133d4:	ldr	r0, [r4, #4]
   133d8:	ldr	r3, [r4]
   133dc:	ldr	r9, [r6, r5, lsl #3]
   133e0:	ldr	r1, [r4, #44]	; 0x2c
   133e4:	ldr	r2, [r4, #40]	; 0x28
   133e8:	orr	r0, r0, #1
   133ec:	str	r3, [sp]
   133f0:	add	r3, r4, #8
   133f4:	str	r0, [sp, #36]	; 0x24
   133f8:	str	r0, [sp, #4]
   133fc:	str	r1, [sp, #16]
   13400:	str	r2, [sp, #12]
   13404:	str	r3, [sp, #8]
   13408:	mov	r0, r7
   1340c:	mov	r1, r9
   13410:	mov	r3, fp
   13414:	mov	r2, sl
   13418:	bl	11848 <abort@plt+0xb24>
   1341c:	cmp	r9, r0
   13420:	bhi	1348c <abort@plt+0x2768>
   13424:	add	r3, r4, #48	; 0x30
   13428:	add	r9, r0, #1
   1342c:	cmp	r7, r3
   13430:	str	r9, [r6, r5, lsl #3]
   13434:	beq	13440 <abort@plt+0x271c>
   13438:	mov	r0, r7
   1343c:	bl	1161c <abort@plt+0x8f8>
   13440:	mov	r0, r9
   13444:	bl	16124 <abort@plt+0x5400>
   13448:	ldr	ip, [sp, #32]
   1344c:	ldr	lr, [r4, #44]	; 0x2c
   13450:	ldr	r5, [r4, #40]	; 0x28
   13454:	mov	r3, fp
   13458:	mov	r2, sl
   1345c:	mov	r1, r9
   13460:	str	r0, [ip, #4]
   13464:	ldr	ip, [r4]
   13468:	ldr	r4, [pc, #108]	; 134dc <abort@plt+0x27b8>
   1346c:	str	lr, [sp, #16]
   13470:	str	r4, [sp, #8]
   13474:	ldr	r4, [sp, #36]	; 0x24
   13478:	str	r5, [sp, #12]
   1347c:	str	r4, [sp, #4]
   13480:	str	ip, [sp]
   13484:	mov	r7, r0
   13488:	bl	11848 <abort@plt+0xb24>
   1348c:	ldr	r3, [sp, #28]
   13490:	mov	r0, r7
   13494:	str	r3, [r8]
   13498:	add	sp, sp, #52	; 0x34
   1349c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134a0:	mov	r3, #8
   134a4:	sub	r2, r5, r2
   134a8:	str	r3, [sp]
   134ac:	add	r1, sp, #44	; 0x2c
   134b0:	add	r2, r2, #1
   134b4:	mvn	r3, #-2147483648	; 0x80000000
   134b8:	bl	16340 <abort@plt+0x561c>
   134bc:	mov	r6, r0
   134c0:	ldm	r7, {r0, r1}
   134c4:	str	r6, [r4]
   134c8:	stm	r6, {r0, r1}
   134cc:	b	133a0 <abort@plt+0x267c>
   134d0:	bl	10d24 <abort@plt>
   134d4:	ldrdeq	r8, [r2], -r0
   134d8:	andeq	r8, r2, ip, lsr r1
   134dc:	andeq	r8, r2, r4, asr #2
   134e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134e4:	sub	sp, sp, #44	; 0x2c
   134e8:	mov	sl, r0
   134ec:	bl	10c7c <__errno_location@plt>
   134f0:	ldr	r4, [pc, #352]	; 13658 <abort@plt+0x2934>
   134f4:	ldr	r2, [r4, #4]
   134f8:	ldr	r5, [r4]
   134fc:	cmp	r2, #0
   13500:	ldr	r3, [r0]
   13504:	mov	r8, r0
   13508:	str	r3, [sp, #28]
   1350c:	bgt	13568 <abort@plt+0x2844>
   13510:	add	r6, r4, #8
   13514:	cmp	r5, r6
   13518:	str	r2, [sp, #36]	; 0x24
   1351c:	beq	13628 <abort@plt+0x2904>
   13520:	mov	r3, #8
   13524:	mov	r0, r5
   13528:	str	r3, [sp]
   1352c:	rsb	r2, r2, #1
   13530:	mvn	r3, #-2147483648	; 0x80000000
   13534:	add	r1, sp, #36	; 0x24
   13538:	bl	16340 <abort@plt+0x561c>
   1353c:	mov	r5, r0
   13540:	str	r0, [r4]
   13544:	ldr	r0, [r4, #4]
   13548:	ldr	r2, [sp, #36]	; 0x24
   1354c:	mov	r1, #0
   13550:	sub	r2, r2, r0
   13554:	add	r0, r5, r0, lsl #3
   13558:	lsl	r2, r2, #3
   1355c:	bl	10c94 <memset@plt>
   13560:	ldr	r3, [sp, #36]	; 0x24
   13564:	str	r3, [r4, #4]
   13568:	ldr	r4, [pc, #236]	; 1365c <abort@plt+0x2938>
   1356c:	ldr	r9, [r5]
   13570:	ldr	r6, [r5, #4]
   13574:	ldr	r7, [r4, #4]
   13578:	ldr	r1, [r4, #44]	; 0x2c
   1357c:	ldr	r2, [r4, #40]	; 0x28
   13580:	ldr	r3, [r4]
   13584:	orr	r7, r7, #1
   13588:	add	fp, r4, #8
   1358c:	str	r1, [sp, #16]
   13590:	str	r2, [sp, #12]
   13594:	str	r3, [sp]
   13598:	str	r7, [sp, #4]
   1359c:	str	fp, [sp, #8]
   135a0:	mov	r1, r9
   135a4:	mov	r0, r6
   135a8:	mvn	r3, #0
   135ac:	mov	r2, sl
   135b0:	bl	11848 <abort@plt+0xb24>
   135b4:	cmp	r9, r0
   135b8:	bhi	13614 <abort@plt+0x28f0>
   135bc:	add	r3, r4, #48	; 0x30
   135c0:	add	r9, r0, #1
   135c4:	cmp	r6, r3
   135c8:	str	r9, [r5]
   135cc:	beq	135d8 <abort@plt+0x28b4>
   135d0:	mov	r0, r6
   135d4:	bl	1161c <abort@plt+0x8f8>
   135d8:	mov	r0, r9
   135dc:	bl	16124 <abort@plt+0x5400>
   135e0:	ldr	ip, [r4, #44]	; 0x2c
   135e4:	ldr	r3, [r4]
   135e8:	ldr	lr, [r4, #40]	; 0x28
   135ec:	mov	r2, sl
   135f0:	mov	r1, r9
   135f4:	str	r0, [r5, #4]
   135f8:	str	r3, [sp]
   135fc:	stmib	sp, {r7, fp}
   13600:	str	ip, [sp, #16]
   13604:	str	lr, [sp, #12]
   13608:	mvn	r3, #0
   1360c:	mov	r6, r0
   13610:	bl	11848 <abort@plt+0xb24>
   13614:	ldr	r3, [sp, #28]
   13618:	mov	r0, r6
   1361c:	str	r3, [r8]
   13620:	add	sp, sp, #44	; 0x2c
   13624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13628:	mov	r3, #8
   1362c:	str	r3, [sp]
   13630:	add	r1, sp, #36	; 0x24
   13634:	rsb	r2, r2, #1
   13638:	mvn	r3, #-2147483648	; 0x80000000
   1363c:	mov	r0, #0
   13640:	bl	16340 <abort@plt+0x561c>
   13644:	mov	r5, r0
   13648:	ldm	r6, {r0, r1}
   1364c:	str	r5, [r4]
   13650:	stm	r5, {r0, r1}
   13654:	b	13544 <abort@plt+0x2820>
   13658:	ldrdeq	r8, [r2], -r0
   1365c:	andeq	r8, r2, ip, lsr r1
   13660:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13664:	sub	sp, sp, #44	; 0x2c
   13668:	mov	r9, r0
   1366c:	mov	sl, r1
   13670:	bl	10c7c <__errno_location@plt>
   13674:	ldr	r4, [pc, #364]	; 137e8 <abort@plt+0x2ac4>
   13678:	ldr	r2, [r4, #4]
   1367c:	ldr	r5, [r4]
   13680:	cmp	r2, #0
   13684:	ldr	r3, [r0]
   13688:	mov	r7, r0
   1368c:	str	r3, [sp, #24]
   13690:	bgt	136ec <abort@plt+0x29c8>
   13694:	add	r6, r4, #8
   13698:	cmp	r5, r6
   1369c:	str	r2, [sp, #36]	; 0x24
   136a0:	beq	137b8 <abort@plt+0x2a94>
   136a4:	mov	r3, #8
   136a8:	mov	r0, r5
   136ac:	str	r3, [sp]
   136b0:	rsb	r2, r2, #1
   136b4:	mvn	r3, #-2147483648	; 0x80000000
   136b8:	add	r1, sp, #36	; 0x24
   136bc:	bl	16340 <abort@plt+0x561c>
   136c0:	mov	r5, r0
   136c4:	str	r0, [r4]
   136c8:	ldr	r0, [r4, #4]
   136cc:	ldr	r2, [sp, #36]	; 0x24
   136d0:	mov	r1, #0
   136d4:	sub	r2, r2, r0
   136d8:	add	r0, r5, r0, lsl #3
   136dc:	lsl	r2, r2, #3
   136e0:	bl	10c94 <memset@plt>
   136e4:	ldr	r3, [sp, #36]	; 0x24
   136e8:	str	r3, [r4, #4]
   136ec:	ldr	r4, [pc, #248]	; 137ec <abort@plt+0x2ac8>
   136f0:	ldr	r8, [r5]
   136f4:	ldr	r6, [r5, #4]
   136f8:	ldr	r0, [r4, #4]
   136fc:	ldr	r1, [r4, #44]	; 0x2c
   13700:	ldr	r2, [r4, #40]	; 0x28
   13704:	ldr	r3, [r4]
   13708:	orr	r0, r0, #1
   1370c:	add	fp, r4, #8
   13710:	str	r0, [sp, #28]
   13714:	str	r0, [sp, #4]
   13718:	str	r1, [sp, #16]
   1371c:	str	r2, [sp, #12]
   13720:	str	r3, [sp]
   13724:	str	fp, [sp, #8]
   13728:	mov	r1, r8
   1372c:	mov	r0, r6
   13730:	mov	r3, sl
   13734:	mov	r2, r9
   13738:	bl	11848 <abort@plt+0xb24>
   1373c:	cmp	r8, r0
   13740:	bhi	137a4 <abort@plt+0x2a80>
   13744:	add	r3, r4, #48	; 0x30
   13748:	add	r8, r0, #1
   1374c:	cmp	r6, r3
   13750:	str	r8, [r5]
   13754:	beq	13760 <abort@plt+0x2a3c>
   13758:	mov	r0, r6
   1375c:	bl	1161c <abort@plt+0x8f8>
   13760:	mov	r0, r8
   13764:	bl	16124 <abort@plt+0x5400>
   13768:	ldr	lr, [r4, #44]	; 0x2c
   1376c:	ldr	ip, [r4]
   13770:	mov	r3, sl
   13774:	mov	r2, r9
   13778:	mov	r1, r8
   1377c:	str	r0, [r5, #4]
   13780:	ldr	r5, [r4, #40]	; 0x28
   13784:	ldr	r4, [sp, #28]
   13788:	str	fp, [sp, #8]
   1378c:	str	r4, [sp, #4]
   13790:	str	lr, [sp, #16]
   13794:	str	r5, [sp, #12]
   13798:	str	ip, [sp]
   1379c:	mov	r6, r0
   137a0:	bl	11848 <abort@plt+0xb24>
   137a4:	ldr	r3, [sp, #24]
   137a8:	mov	r0, r6
   137ac:	str	r3, [r7]
   137b0:	add	sp, sp, #44	; 0x2c
   137b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   137b8:	mov	r3, #8
   137bc:	str	r3, [sp]
   137c0:	add	r1, sp, #36	; 0x24
   137c4:	rsb	r2, r2, #1
   137c8:	mvn	r3, #-2147483648	; 0x80000000
   137cc:	mov	r0, #0
   137d0:	bl	16340 <abort@plt+0x561c>
   137d4:	mov	r5, r0
   137d8:	ldm	r6, {r0, r1}
   137dc:	str	r5, [r4]
   137e0:	stm	r5, {r0, r1}
   137e4:	b	136c8 <abort@plt+0x29a4>
   137e8:	ldrdeq	r8, [r2], -r0
   137ec:	andeq	r8, r2, ip, lsr r1
   137f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137f4:	sub	sp, sp, #132	; 0x84
   137f8:	mov	r5, r1
   137fc:	mov	r4, r0
   13800:	mov	r9, r2
   13804:	add	r0, sp, #80	; 0x50
   13808:	mov	r2, #48	; 0x30
   1380c:	mov	r1, #0
   13810:	bl	10c94 <memset@plt>
   13814:	cmp	r5, #10
   13818:	beq	139d0 <abort@plt+0x2cac>
   1381c:	add	lr, sp, #80	; 0x50
   13820:	str	r5, [sp, #80]	; 0x50
   13824:	ldm	lr!, {r0, r1, r2, r3}
   13828:	add	ip, sp, #32
   1382c:	ldr	r6, [pc, #416]	; 139d4 <abort@plt+0x2cb0>
   13830:	stmia	ip!, {r0, r1, r2, r3}
   13834:	ldm	lr!, {r0, r1, r2, r3}
   13838:	stmia	ip!, {r0, r1, r2, r3}
   1383c:	ldm	lr, {r0, r1, r2, r3}
   13840:	stm	ip, {r0, r1, r2, r3}
   13844:	bl	10c7c <__errno_location@plt>
   13848:	cmn	r4, #-2147483647	; 0x80000001
   1384c:	ldr	r5, [r6]
   13850:	mov	r7, r0
   13854:	movne	r0, #0
   13858:	moveq	r0, #1
   1385c:	ldr	r3, [r7]
   13860:	orrs	r0, r0, r4, lsr #31
   13864:	str	r3, [sp, #24]
   13868:	bne	139d0 <abort@plt+0x2cac>
   1386c:	ldr	r2, [r6, #4]
   13870:	cmp	r4, r2
   13874:	blt	138d4 <abort@plt+0x2bb0>
   13878:	add	r8, r6, #8
   1387c:	cmp	r5, r8
   13880:	str	r2, [sp, #80]	; 0x50
   13884:	beq	139a0 <abort@plt+0x2c7c>
   13888:	mov	r3, #8
   1388c:	sub	r2, r4, r2
   13890:	mov	r0, r5
   13894:	str	r3, [sp]
   13898:	add	r2, r2, #1
   1389c:	add	r1, sp, #80	; 0x50
   138a0:	mvn	r3, #-2147483648	; 0x80000000
   138a4:	bl	16340 <abort@plt+0x561c>
   138a8:	mov	r5, r0
   138ac:	str	r0, [r6]
   138b0:	ldr	r0, [r6, #4]
   138b4:	ldr	r2, [sp, #80]	; 0x50
   138b8:	mov	r1, #0
   138bc:	sub	r2, r2, r0
   138c0:	add	r0, r5, r0, lsl #3
   138c4:	lsl	r2, r2, #3
   138c8:	bl	10c94 <memset@plt>
   138cc:	ldr	r3, [sp, #80]	; 0x50
   138d0:	str	r3, [r6, #4]
   138d4:	add	fp, r5, r4, lsl #3
   138d8:	ldr	r1, [sp, #36]	; 0x24
   138dc:	ldr	r8, [r5, r4, lsl #3]
   138e0:	ldr	r6, [fp, #4]
   138e4:	ldr	r2, [sp, #72]	; 0x48
   138e8:	ldr	r3, [sp, #32]
   138ec:	ldr	ip, [sp, #76]	; 0x4c
   138f0:	orr	r1, r1, #1
   138f4:	add	sl, sp, #40	; 0x28
   138f8:	str	r1, [sp, #28]
   138fc:	str	r1, [sp, #4]
   13900:	str	r2, [sp, #12]
   13904:	str	r3, [sp]
   13908:	mov	r0, r6
   1390c:	mov	r1, r8
   13910:	str	ip, [sp, #16]
   13914:	str	sl, [sp, #8]
   13918:	mvn	r3, #0
   1391c:	mov	r2, r9
   13920:	bl	11848 <abort@plt+0xb24>
   13924:	cmp	r8, r0
   13928:	bhi	1398c <abort@plt+0x2c68>
   1392c:	ldr	r3, [pc, #164]	; 139d8 <abort@plt+0x2cb4>
   13930:	add	r8, r0, #1
   13934:	cmp	r6, r3
   13938:	str	r8, [r5, r4, lsl #3]
   1393c:	beq	13948 <abort@plt+0x2c24>
   13940:	mov	r0, r6
   13944:	bl	1161c <abort@plt+0x8f8>
   13948:	mov	r0, r8
   1394c:	bl	16124 <abort@plt+0x5400>
   13950:	ldr	lr, [sp, #76]	; 0x4c
   13954:	ldr	r3, [sp, #32]
   13958:	ldr	ip, [sp, #72]	; 0x48
   1395c:	ldr	r4, [sp, #28]
   13960:	mov	r2, r9
   13964:	mov	r1, r8
   13968:	str	r0, [fp, #4]
   1396c:	str	r3, [sp]
   13970:	str	sl, [sp, #8]
   13974:	str	r4, [sp, #4]
   13978:	str	lr, [sp, #16]
   1397c:	str	ip, [sp, #12]
   13980:	mvn	r3, #0
   13984:	mov	r6, r0
   13988:	bl	11848 <abort@plt+0xb24>
   1398c:	ldr	r3, [sp, #24]
   13990:	mov	r0, r6
   13994:	str	r3, [r7]
   13998:	add	sp, sp, #132	; 0x84
   1399c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139a0:	mov	r3, #8
   139a4:	sub	r2, r4, r2
   139a8:	add	r1, sp, #80	; 0x50
   139ac:	str	r3, [sp]
   139b0:	add	r2, r2, #1
   139b4:	mvn	r3, #-2147483648	; 0x80000000
   139b8:	bl	16340 <abort@plt+0x561c>
   139bc:	mov	r5, r0
   139c0:	ldm	r8, {r0, r1}
   139c4:	str	r5, [r6]
   139c8:	stm	r5, {r0, r1}
   139cc:	b	138b0 <abort@plt+0x2b8c>
   139d0:	bl	10d24 <abort@plt>
   139d4:	ldrdeq	r8, [r2], -r0
   139d8:	andeq	r8, r2, ip, ror #2
   139dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   139e0:	sub	sp, sp, #132	; 0x84
   139e4:	mov	r5, r1
   139e8:	mov	r4, r0
   139ec:	mov	r9, r2
   139f0:	add	r0, sp, #80	; 0x50
   139f4:	mov	r2, #48	; 0x30
   139f8:	mov	r1, #0
   139fc:	mov	sl, r3
   13a00:	bl	10c94 <memset@plt>
   13a04:	cmp	r5, #10
   13a08:	beq	13bc4 <abort@plt+0x2ea0>
   13a0c:	add	lr, sp, #80	; 0x50
   13a10:	str	r5, [sp, #80]	; 0x50
   13a14:	ldm	lr!, {r0, r1, r2, r3}
   13a18:	add	ip, sp, #32
   13a1c:	ldr	r6, [pc, #420]	; 13bc8 <abort@plt+0x2ea4>
   13a20:	stmia	ip!, {r0, r1, r2, r3}
   13a24:	ldm	lr!, {r0, r1, r2, r3}
   13a28:	stmia	ip!, {r0, r1, r2, r3}
   13a2c:	ldm	lr, {r0, r1, r2, r3}
   13a30:	stm	ip, {r0, r1, r2, r3}
   13a34:	bl	10c7c <__errno_location@plt>
   13a38:	cmn	r4, #-2147483647	; 0x80000001
   13a3c:	ldr	r5, [r6]
   13a40:	mov	r7, r0
   13a44:	movne	r0, #0
   13a48:	moveq	r0, #1
   13a4c:	ldr	r3, [r7]
   13a50:	orrs	r0, r0, r4, lsr #31
   13a54:	str	r3, [sp, #24]
   13a58:	bne	13bc4 <abort@plt+0x2ea0>
   13a5c:	ldr	r2, [r6, #4]
   13a60:	cmp	r4, r2
   13a64:	blt	13ac4 <abort@plt+0x2da0>
   13a68:	add	r8, r6, #8
   13a6c:	cmp	r5, r8
   13a70:	str	r2, [sp, #80]	; 0x50
   13a74:	beq	13b94 <abort@plt+0x2e70>
   13a78:	mov	r3, #8
   13a7c:	sub	r2, r4, r2
   13a80:	mov	r0, r5
   13a84:	str	r3, [sp]
   13a88:	add	r2, r2, #1
   13a8c:	add	r1, sp, #80	; 0x50
   13a90:	mvn	r3, #-2147483648	; 0x80000000
   13a94:	bl	16340 <abort@plt+0x561c>
   13a98:	mov	r5, r0
   13a9c:	str	r0, [r6]
   13aa0:	ldr	r0, [r6, #4]
   13aa4:	ldr	r2, [sp, #80]	; 0x50
   13aa8:	mov	r1, #0
   13aac:	sub	r2, r2, r0
   13ab0:	add	r0, r5, r0, lsl #3
   13ab4:	lsl	r2, r2, #3
   13ab8:	bl	10c94 <memset@plt>
   13abc:	ldr	r3, [sp, #80]	; 0x50
   13ac0:	str	r3, [r6, #4]
   13ac4:	add	fp, r5, r4, lsl #3
   13ac8:	ldr	r3, [sp, #32]
   13acc:	ldr	r1, [sp, #36]	; 0x24
   13ad0:	ldr	r8, [r5, r4, lsl #3]
   13ad4:	ldr	r6, [fp, #4]
   13ad8:	ldr	r2, [sp, #72]	; 0x48
   13adc:	ldr	ip, [sp, #76]	; 0x4c
   13ae0:	orr	r1, r1, #1
   13ae4:	str	r3, [sp]
   13ae8:	add	r3, sp, #40	; 0x28
   13aec:	str	r1, [sp, #28]
   13af0:	str	r1, [sp, #4]
   13af4:	str	r2, [sp, #12]
   13af8:	str	r3, [sp, #8]
   13afc:	mov	r0, r6
   13b00:	mov	r1, r8
   13b04:	str	ip, [sp, #16]
   13b08:	mov	r3, sl
   13b0c:	mov	r2, r9
   13b10:	bl	11848 <abort@plt+0xb24>
   13b14:	cmp	r8, r0
   13b18:	bhi	13b80 <abort@plt+0x2e5c>
   13b1c:	ldr	r3, [pc, #168]	; 13bcc <abort@plt+0x2ea8>
   13b20:	add	r8, r0, #1
   13b24:	cmp	r6, r3
   13b28:	str	r8, [r5, r4, lsl #3]
   13b2c:	beq	13b38 <abort@plt+0x2e14>
   13b30:	mov	r0, r6
   13b34:	bl	1161c <abort@plt+0x8f8>
   13b38:	mov	r0, r8
   13b3c:	bl	16124 <abort@plt+0x5400>
   13b40:	add	lr, sp, #40	; 0x28
   13b44:	ldr	ip, [sp, #76]	; 0x4c
   13b48:	ldr	r4, [sp, #72]	; 0x48
   13b4c:	ldr	r5, [sp, #28]
   13b50:	mov	r3, sl
   13b54:	mov	r2, r9
   13b58:	mov	r1, r8
   13b5c:	str	r0, [fp, #4]
   13b60:	str	lr, [sp, #8]
   13b64:	ldr	lr, [sp, #32]
   13b68:	str	r5, [sp, #4]
   13b6c:	str	ip, [sp, #16]
   13b70:	str	r4, [sp, #12]
   13b74:	str	lr, [sp]
   13b78:	mov	r6, r0
   13b7c:	bl	11848 <abort@plt+0xb24>
   13b80:	ldr	r3, [sp, #24]
   13b84:	mov	r0, r6
   13b88:	str	r3, [r7]
   13b8c:	add	sp, sp, #132	; 0x84
   13b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b94:	mov	r3, #8
   13b98:	sub	r2, r4, r2
   13b9c:	add	r1, sp, #80	; 0x50
   13ba0:	str	r3, [sp]
   13ba4:	add	r2, r2, #1
   13ba8:	mvn	r3, #-2147483648	; 0x80000000
   13bac:	bl	16340 <abort@plt+0x561c>
   13bb0:	mov	r5, r0
   13bb4:	ldm	r8, {r0, r1}
   13bb8:	str	r5, [r6]
   13bbc:	stm	r5, {r0, r1}
   13bc0:	b	13aa0 <abort@plt+0x2d7c>
   13bc4:	bl	10d24 <abort@plt>
   13bc8:	ldrdeq	r8, [r2], -r0
   13bcc:	andeq	r8, r2, ip, ror #2
   13bd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13bd4:	sub	sp, sp, #124	; 0x7c
   13bd8:	mov	r4, r0
   13bdc:	mov	r9, r1
   13be0:	add	r0, sp, #72	; 0x48
   13be4:	mov	r2, #48	; 0x30
   13be8:	mov	r1, #0
   13bec:	bl	10c94 <memset@plt>
   13bf0:	cmp	r4, #10
   13bf4:	beq	13d80 <abort@plt+0x305c>
   13bf8:	add	lr, sp, #72	; 0x48
   13bfc:	str	r4, [sp, #72]	; 0x48
   13c00:	ldm	lr!, {r0, r1, r2, r3}
   13c04:	add	ip, sp, #24
   13c08:	ldr	r5, [pc, #372]	; 13d84 <abort@plt+0x3060>
   13c0c:	stmia	ip!, {r0, r1, r2, r3}
   13c10:	ldm	lr!, {r0, r1, r2, r3}
   13c14:	stmia	ip!, {r0, r1, r2, r3}
   13c18:	ldm	lr, {r0, r1, r2, r3}
   13c1c:	stm	ip, {r0, r1, r2, r3}
   13c20:	bl	10c7c <__errno_location@plt>
   13c24:	ldr	r2, [r5, #4]
   13c28:	ldr	r4, [r5]
   13c2c:	cmp	r2, #0
   13c30:	mov	r7, r0
   13c34:	ldr	fp, [r0]
   13c38:	bgt	13c94 <abort@plt+0x2f70>
   13c3c:	add	r6, r5, #8
   13c40:	cmp	r4, r6
   13c44:	str	r2, [sp, #72]	; 0x48
   13c48:	beq	13d50 <abort@plt+0x302c>
   13c4c:	mov	r3, #8
   13c50:	mov	r0, r4
   13c54:	str	r3, [sp]
   13c58:	rsb	r2, r2, #1
   13c5c:	add	r1, sp, #72	; 0x48
   13c60:	mvn	r3, #-2147483648	; 0x80000000
   13c64:	bl	16340 <abort@plt+0x561c>
   13c68:	mov	r4, r0
   13c6c:	str	r0, [r5]
   13c70:	ldr	r0, [r5, #4]
   13c74:	ldr	r2, [sp, #72]	; 0x48
   13c78:	mov	r1, #0
   13c7c:	sub	r2, r2, r0
   13c80:	add	r0, r4, r0, lsl #3
   13c84:	lsl	r2, r2, #3
   13c88:	bl	10c94 <memset@plt>
   13c8c:	ldr	r3, [sp, #72]	; 0x48
   13c90:	str	r3, [r5, #4]
   13c94:	ldr	r6, [sp, #28]
   13c98:	ldr	r8, [r4]
   13c9c:	ldr	r5, [r4, #4]
   13ca0:	ldr	r2, [sp, #64]	; 0x40
   13ca4:	ldr	r3, [sp, #24]
   13ca8:	ldr	ip, [sp, #68]	; 0x44
   13cac:	orr	r6, r6, #1
   13cb0:	add	sl, sp, #32
   13cb4:	str	r2, [sp, #12]
   13cb8:	str	r3, [sp]
   13cbc:	str	r6, [sp, #4]
   13cc0:	mov	r1, r8
   13cc4:	mov	r0, r5
   13cc8:	str	ip, [sp, #16]
   13ccc:	str	sl, [sp, #8]
   13cd0:	mvn	r3, #0
   13cd4:	mov	r2, r9
   13cd8:	bl	11848 <abort@plt+0xb24>
   13cdc:	cmp	r8, r0
   13ce0:	bhi	13d40 <abort@plt+0x301c>
   13ce4:	ldr	r3, [pc, #156]	; 13d88 <abort@plt+0x3064>
   13ce8:	add	r8, r0, #1
   13cec:	cmp	r5, r3
   13cf0:	str	r8, [r4]
   13cf4:	beq	13d00 <abort@plt+0x2fdc>
   13cf8:	mov	r0, r5
   13cfc:	bl	1161c <abort@plt+0x8f8>
   13d00:	mov	r0, r8
   13d04:	bl	16124 <abort@plt+0x5400>
   13d08:	ldr	lr, [sp, #68]	; 0x44
   13d0c:	ldr	r3, [sp, #24]
   13d10:	ldr	ip, [sp, #64]	; 0x40
   13d14:	mov	r2, r9
   13d18:	mov	r1, r8
   13d1c:	str	r0, [r4, #4]
   13d20:	str	r3, [sp]
   13d24:	str	sl, [sp, #8]
   13d28:	str	r6, [sp, #4]
   13d2c:	str	lr, [sp, #16]
   13d30:	str	ip, [sp, #12]
   13d34:	mvn	r3, #0
   13d38:	mov	r5, r0
   13d3c:	bl	11848 <abort@plt+0xb24>
   13d40:	mov	r0, r5
   13d44:	str	fp, [r7]
   13d48:	add	sp, sp, #124	; 0x7c
   13d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d50:	mov	r3, #8
   13d54:	add	r1, sp, #72	; 0x48
   13d58:	str	r3, [sp]
   13d5c:	rsb	r2, r2, #1
   13d60:	mvn	r3, #-2147483648	; 0x80000000
   13d64:	mov	r0, #0
   13d68:	bl	16340 <abort@plt+0x561c>
   13d6c:	mov	r4, r0
   13d70:	ldm	r6, {r0, r1}
   13d74:	str	r4, [r5]
   13d78:	stm	r4, {r0, r1}
   13d7c:	b	13c70 <abort@plt+0x2f4c>
   13d80:	bl	10d24 <abort@plt>
   13d84:	ldrdeq	r8, [r2], -r0
   13d88:	andeq	r8, r2, ip, ror #2
   13d8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d90:	sub	sp, sp, #132	; 0x84
   13d94:	mov	r4, r0
   13d98:	mov	r9, r1
   13d9c:	mov	sl, r2
   13da0:	add	r0, sp, #80	; 0x50
   13da4:	mov	r2, #48	; 0x30
   13da8:	mov	r1, #0
   13dac:	bl	10c94 <memset@plt>
   13db0:	cmp	r4, #10
   13db4:	beq	13f48 <abort@plt+0x3224>
   13db8:	add	lr, sp, #80	; 0x50
   13dbc:	str	r4, [sp, #80]	; 0x50
   13dc0:	ldm	lr!, {r0, r1, r2, r3}
   13dc4:	add	ip, sp, #32
   13dc8:	ldr	r5, [pc, #380]	; 13f4c <abort@plt+0x3228>
   13dcc:	stmia	ip!, {r0, r1, r2, r3}
   13dd0:	ldm	lr!, {r0, r1, r2, r3}
   13dd4:	stmia	ip!, {r0, r1, r2, r3}
   13dd8:	ldm	lr, {r0, r1, r2, r3}
   13ddc:	stm	ip, {r0, r1, r2, r3}
   13de0:	bl	10c7c <__errno_location@plt>
   13de4:	ldr	r2, [r5, #4]
   13de8:	ldr	r4, [r5]
   13dec:	cmp	r2, #0
   13df0:	ldr	r3, [r0]
   13df4:	mov	r7, r0
   13df8:	str	r3, [sp, #28]
   13dfc:	bgt	13e58 <abort@plt+0x3134>
   13e00:	add	r6, r5, #8
   13e04:	cmp	r4, r6
   13e08:	str	r2, [sp, #80]	; 0x50
   13e0c:	beq	13f18 <abort@plt+0x31f4>
   13e10:	mov	r3, #8
   13e14:	mov	r0, r4
   13e18:	str	r3, [sp]
   13e1c:	rsb	r2, r2, #1
   13e20:	add	r1, sp, #80	; 0x50
   13e24:	mvn	r3, #-2147483648	; 0x80000000
   13e28:	bl	16340 <abort@plt+0x561c>
   13e2c:	mov	r4, r0
   13e30:	str	r0, [r5]
   13e34:	ldr	r0, [r5, #4]
   13e38:	ldr	r2, [sp, #80]	; 0x50
   13e3c:	mov	r1, #0
   13e40:	sub	r2, r2, r0
   13e44:	add	r0, r4, r0, lsl #3
   13e48:	lsl	r2, r2, #3
   13e4c:	bl	10c94 <memset@plt>
   13e50:	ldr	r3, [sp, #80]	; 0x50
   13e54:	str	r3, [r5, #4]
   13e58:	ldr	r6, [sp, #36]	; 0x24
   13e5c:	ldr	r8, [r4]
   13e60:	ldr	r5, [r4, #4]
   13e64:	ldr	r2, [sp, #72]	; 0x48
   13e68:	ldr	r3, [sp, #32]
   13e6c:	ldr	ip, [sp, #76]	; 0x4c
   13e70:	orr	r6, r6, #1
   13e74:	add	fp, sp, #40	; 0x28
   13e78:	str	r2, [sp, #12]
   13e7c:	str	r3, [sp]
   13e80:	str	r6, [sp, #4]
   13e84:	mov	r1, r8
   13e88:	mov	r0, r5
   13e8c:	str	ip, [sp, #16]
   13e90:	str	fp, [sp, #8]
   13e94:	mov	r3, sl
   13e98:	mov	r2, r9
   13e9c:	bl	11848 <abort@plt+0xb24>
   13ea0:	cmp	r8, r0
   13ea4:	bhi	13f04 <abort@plt+0x31e0>
   13ea8:	ldr	r3, [pc, #160]	; 13f50 <abort@plt+0x322c>
   13eac:	add	r8, r0, #1
   13eb0:	cmp	r5, r3
   13eb4:	str	r8, [r4]
   13eb8:	beq	13ec4 <abort@plt+0x31a0>
   13ebc:	mov	r0, r5
   13ec0:	bl	1161c <abort@plt+0x8f8>
   13ec4:	mov	r0, r8
   13ec8:	bl	16124 <abort@plt+0x5400>
   13ecc:	ldr	ip, [sp, #76]	; 0x4c
   13ed0:	ldr	lr, [sp, #32]
   13ed4:	mov	r3, sl
   13ed8:	mov	r2, r9
   13edc:	mov	r1, r8
   13ee0:	str	r0, [r4, #4]
   13ee4:	ldr	r4, [sp, #72]	; 0x48
   13ee8:	str	fp, [sp, #8]
   13eec:	str	r6, [sp, #4]
   13ef0:	str	ip, [sp, #16]
   13ef4:	str	r4, [sp, #12]
   13ef8:	str	lr, [sp]
   13efc:	mov	r5, r0
   13f00:	bl	11848 <abort@plt+0xb24>
   13f04:	ldr	r3, [sp, #28]
   13f08:	mov	r0, r5
   13f0c:	str	r3, [r7]
   13f10:	add	sp, sp, #132	; 0x84
   13f14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f18:	mov	r3, #8
   13f1c:	add	r1, sp, #80	; 0x50
   13f20:	str	r3, [sp]
   13f24:	rsb	r2, r2, #1
   13f28:	mvn	r3, #-2147483648	; 0x80000000
   13f2c:	mov	r0, #0
   13f30:	bl	16340 <abort@plt+0x561c>
   13f34:	mov	r4, r0
   13f38:	ldm	r6, {r0, r1}
   13f3c:	str	r4, [r5]
   13f40:	stm	r4, {r0, r1}
   13f44:	b	13e34 <abort@plt+0x3110>
   13f48:	bl	10d24 <abort@plt>
   13f4c:	ldrdeq	r8, [r2], -r0
   13f50:	andeq	r8, r2, ip, ror #2
   13f54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f58:	mov	r4, r2
   13f5c:	ldr	lr, [pc, #432]	; 14114 <abort@plt+0x33f0>
   13f60:	mov	sl, r0
   13f64:	mov	fp, r1
   13f68:	ldm	lr!, {r0, r1, r2, r3}
   13f6c:	sub	sp, sp, #92	; 0x5c
   13f70:	add	ip, sp, #40	; 0x28
   13f74:	lsr	r7, r4, #5
   13f78:	stmia	ip!, {r0, r1, r2, r3}
   13f7c:	add	r6, sp, #48	; 0x30
   13f80:	ldm	lr!, {r0, r1, r2, r3}
   13f84:	and	r4, r4, #31
   13f88:	ldr	r5, [pc, #392]	; 14118 <abort@plt+0x33f4>
   13f8c:	stmia	ip!, {r0, r1, r2, r3}
   13f90:	ldm	lr, {r0, r1, r2, r3}
   13f94:	stm	ip, {r0, r1, r2, r3}
   13f98:	ldr	r2, [r6, r7, lsl #2]
   13f9c:	lsr	r3, r2, r4
   13fa0:	eor	r3, r3, #1
   13fa4:	and	r3, r3, #1
   13fa8:	eor	r4, r2, r3, lsl r4
   13fac:	str	r4, [r6, r7, lsl #2]
   13fb0:	bl	10c7c <__errno_location@plt>
   13fb4:	ldr	r2, [r5, #4]
   13fb8:	ldr	r4, [r5]
   13fbc:	cmp	r2, #0
   13fc0:	ldr	r3, [r0]
   13fc4:	mov	r8, r0
   13fc8:	str	r3, [sp, #28]
   13fcc:	bgt	14028 <abort@plt+0x3304>
   13fd0:	add	r7, r5, #8
   13fd4:	cmp	r4, r7
   13fd8:	str	r2, [sp, #36]	; 0x24
   13fdc:	beq	140e4 <abort@plt+0x33c0>
   13fe0:	mov	r3, #8
   13fe4:	mov	r0, r4
   13fe8:	str	r3, [sp]
   13fec:	rsb	r2, r2, #1
   13ff0:	mvn	r3, #-2147483648	; 0x80000000
   13ff4:	add	r1, sp, #36	; 0x24
   13ff8:	bl	16340 <abort@plt+0x561c>
   13ffc:	mov	r4, r0
   14000:	str	r0, [r5]
   14004:	ldr	r0, [r5, #4]
   14008:	ldr	r2, [sp, #36]	; 0x24
   1400c:	mov	r1, #0
   14010:	sub	r2, r2, r0
   14014:	add	r0, r4, r0, lsl #3
   14018:	lsl	r2, r2, #3
   1401c:	bl	10c94 <memset@plt>
   14020:	ldr	r3, [sp, #36]	; 0x24
   14024:	str	r3, [r5, #4]
   14028:	ldr	r7, [sp, #44]	; 0x2c
   1402c:	ldr	r9, [r4]
   14030:	ldr	r5, [r4, #4]
   14034:	ldr	r2, [sp, #80]	; 0x50
   14038:	ldr	r3, [sp, #40]	; 0x28
   1403c:	ldr	ip, [sp, #84]	; 0x54
   14040:	orr	r7, r7, #1
   14044:	str	r2, [sp, #12]
   14048:	str	r3, [sp]
   1404c:	str	r7, [sp, #4]
   14050:	str	r6, [sp, #8]
   14054:	mov	r1, r9
   14058:	mov	r0, r5
   1405c:	str	ip, [sp, #16]
   14060:	mov	r3, fp
   14064:	mov	r2, sl
   14068:	bl	11848 <abort@plt+0xb24>
   1406c:	cmp	r9, r0
   14070:	bhi	140d0 <abort@plt+0x33ac>
   14074:	ldr	r3, [pc, #160]	; 1411c <abort@plt+0x33f8>
   14078:	add	r9, r0, #1
   1407c:	cmp	r5, r3
   14080:	str	r9, [r4]
   14084:	beq	14090 <abort@plt+0x336c>
   14088:	mov	r0, r5
   1408c:	bl	1161c <abort@plt+0x8f8>
   14090:	mov	r0, r9
   14094:	bl	16124 <abort@plt+0x5400>
   14098:	ldr	ip, [sp, #84]	; 0x54
   1409c:	ldr	lr, [sp, #40]	; 0x28
   140a0:	mov	r3, fp
   140a4:	mov	r2, sl
   140a8:	mov	r1, r9
   140ac:	str	r0, [r4, #4]
   140b0:	ldr	r4, [sp, #80]	; 0x50
   140b4:	str	r6, [sp, #8]
   140b8:	str	r7, [sp, #4]
   140bc:	str	ip, [sp, #16]
   140c0:	str	r4, [sp, #12]
   140c4:	str	lr, [sp]
   140c8:	mov	r5, r0
   140cc:	bl	11848 <abort@plt+0xb24>
   140d0:	ldr	r3, [sp, #28]
   140d4:	mov	r0, r5
   140d8:	str	r3, [r8]
   140dc:	add	sp, sp, #92	; 0x5c
   140e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   140e4:	mov	r3, #8
   140e8:	str	r3, [sp]
   140ec:	add	r1, sp, #36	; 0x24
   140f0:	rsb	r2, r2, #1
   140f4:	mvn	r3, #-2147483648	; 0x80000000
   140f8:	mov	r0, #0
   140fc:	bl	16340 <abort@plt+0x561c>
   14100:	mov	r4, r0
   14104:	ldm	r7, {r0, r1}
   14108:	str	r4, [r5]
   1410c:	stm	r4, {r0, r1}
   14110:	b	14004 <abort@plt+0x32e0>
   14114:	andeq	r8, r2, ip, lsr r1
   14118:	ldrdeq	r8, [r2], -r0
   1411c:	andeq	r8, r2, ip, ror #2
   14120:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14124:	mov	r4, r1
   14128:	ldr	lr, [pc, #420]	; 142d4 <abort@plt+0x35b0>
   1412c:	mov	r6, r0
   14130:	sub	sp, sp, #84	; 0x54
   14134:	ldm	lr!, {r0, r1, r2, r3}
   14138:	add	ip, sp, #32
   1413c:	lsr	r8, r4, #5
   14140:	add	r5, sp, #40	; 0x28
   14144:	stmia	ip!, {r0, r1, r2, r3}
   14148:	and	r4, r4, #31
   1414c:	ldm	lr!, {r0, r1, r2, r3}
   14150:	ldr	r7, [pc, #384]	; 142d8 <abort@plt+0x35b4>
   14154:	stmia	ip!, {r0, r1, r2, r3}
   14158:	ldm	lr, {r0, r1, r2, r3}
   1415c:	stm	ip, {r0, r1, r2, r3}
   14160:	ldr	r2, [r5, r8, lsl #2]
   14164:	lsr	r3, r2, r4
   14168:	eor	r3, r3, #1
   1416c:	and	r3, r3, #1
   14170:	eor	r4, r2, r3, lsl r4
   14174:	str	r4, [r5, r8, lsl #2]
   14178:	bl	10c7c <__errno_location@plt>
   1417c:	ldr	r2, [r7, #4]
   14180:	ldr	r4, [r7]
   14184:	cmp	r2, #0
   14188:	mov	r9, r0
   1418c:	ldr	sl, [r0]
   14190:	bgt	141ec <abort@plt+0x34c8>
   14194:	add	r8, r7, #8
   14198:	cmp	r4, r8
   1419c:	str	r2, [sp, #28]
   141a0:	beq	142a4 <abort@plt+0x3580>
   141a4:	mov	r3, #8
   141a8:	mov	r0, r4
   141ac:	str	r3, [sp]
   141b0:	rsb	r2, r2, #1
   141b4:	mvn	r3, #-2147483648	; 0x80000000
   141b8:	add	r1, sp, #28
   141bc:	bl	16340 <abort@plt+0x561c>
   141c0:	mov	r4, r0
   141c4:	str	r0, [r7]
   141c8:	ldr	r0, [r7, #4]
   141cc:	ldr	r2, [sp, #28]
   141d0:	mov	r1, #0
   141d4:	sub	r2, r2, r0
   141d8:	add	r0, r4, r0, lsl #3
   141dc:	lsl	r2, r2, #3
   141e0:	bl	10c94 <memset@plt>
   141e4:	ldr	r3, [sp, #28]
   141e8:	str	r3, [r7, #4]
   141ec:	ldr	r8, [sp, #36]	; 0x24
   141f0:	ldr	fp, [r4]
   141f4:	ldr	r7, [r4, #4]
   141f8:	ldr	r2, [sp, #72]	; 0x48
   141fc:	ldr	r3, [sp, #32]
   14200:	ldr	ip, [sp, #76]	; 0x4c
   14204:	orr	r8, r8, #1
   14208:	str	r2, [sp, #12]
   1420c:	str	r3, [sp]
   14210:	str	r8, [sp, #4]
   14214:	str	r5, [sp, #8]
   14218:	mov	r1, fp
   1421c:	mov	r0, r7
   14220:	str	ip, [sp, #16]
   14224:	mvn	r3, #0
   14228:	mov	r2, r6
   1422c:	bl	11848 <abort@plt+0xb24>
   14230:	cmp	fp, r0
   14234:	bhi	14294 <abort@plt+0x3570>
   14238:	ldr	r3, [pc, #156]	; 142dc <abort@plt+0x35b8>
   1423c:	add	fp, r0, #1
   14240:	cmp	r7, r3
   14244:	str	fp, [r4]
   14248:	beq	14254 <abort@plt+0x3530>
   1424c:	mov	r0, r7
   14250:	bl	1161c <abort@plt+0x8f8>
   14254:	mov	r0, fp
   14258:	bl	16124 <abort@plt+0x5400>
   1425c:	ldr	lr, [sp, #76]	; 0x4c
   14260:	ldr	r3, [sp, #32]
   14264:	ldr	ip, [sp, #72]	; 0x48
   14268:	mov	r2, r6
   1426c:	mov	r1, fp
   14270:	str	r0, [r4, #4]
   14274:	str	r3, [sp]
   14278:	str	r5, [sp, #8]
   1427c:	str	r8, [sp, #4]
   14280:	str	lr, [sp, #16]
   14284:	str	ip, [sp, #12]
   14288:	mvn	r3, #0
   1428c:	mov	r7, r0
   14290:	bl	11848 <abort@plt+0xb24>
   14294:	mov	r0, r7
   14298:	str	sl, [r9]
   1429c:	add	sp, sp, #84	; 0x54
   142a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142a4:	mov	r3, #8
   142a8:	str	r3, [sp]
   142ac:	add	r1, sp, #28
   142b0:	rsb	r2, r2, #1
   142b4:	mvn	r3, #-2147483648	; 0x80000000
   142b8:	mov	r0, #0
   142bc:	bl	16340 <abort@plt+0x561c>
   142c0:	mov	r4, r0
   142c4:	ldm	r8, {r0, r1}
   142c8:	str	r4, [r7]
   142cc:	stm	r4, {r0, r1}
   142d0:	b	141c8 <abort@plt+0x34a4>
   142d4:	andeq	r8, r2, ip, lsr r1
   142d8:	ldrdeq	r8, [r2], -r0
   142dc:	andeq	r8, r2, ip, ror #2
   142e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   142e4:	mov	r6, r0
   142e8:	ldr	lr, [pc, #404]	; 14484 <abort@plt+0x3760>
   142ec:	sub	sp, sp, #84	; 0x54
   142f0:	add	ip, sp, #32
   142f4:	ldm	lr!, {r0, r1, r2, r3}
   142f8:	ldr	r5, [pc, #392]	; 14488 <abort@plt+0x3764>
   142fc:	stmia	ip!, {r0, r1, r2, r3}
   14300:	ldm	lr!, {r0, r1, r2, r3}
   14304:	ldr	r4, [sp, #44]	; 0x2c
   14308:	stmia	ip!, {r0, r1, r2, r3}
   1430c:	ldm	lr, {r0, r1, r2, r3}
   14310:	mvn	lr, r4
   14314:	and	lr, lr, #67108864	; 0x4000000
   14318:	eor	lr, lr, r4
   1431c:	stm	ip, {r0, r1, r2, r3}
   14320:	str	lr, [sp, #44]	; 0x2c
   14324:	bl	10c7c <__errno_location@plt>
   14328:	ldr	r2, [r5, #4]
   1432c:	ldr	r4, [r5]
   14330:	cmp	r2, #0
   14334:	mov	r8, r0
   14338:	ldr	sl, [r0]
   1433c:	bgt	14398 <abort@plt+0x3674>
   14340:	add	r7, r5, #8
   14344:	cmp	r4, r7
   14348:	str	r2, [sp, #28]
   1434c:	beq	14454 <abort@plt+0x3730>
   14350:	mov	r3, #8
   14354:	mov	r0, r4
   14358:	str	r3, [sp]
   1435c:	rsb	r2, r2, #1
   14360:	mvn	r3, #-2147483648	; 0x80000000
   14364:	add	r1, sp, #28
   14368:	bl	16340 <abort@plt+0x561c>
   1436c:	mov	r4, r0
   14370:	str	r0, [r5]
   14374:	ldr	r0, [r5, #4]
   14378:	ldr	r2, [sp, #28]
   1437c:	mov	r1, #0
   14380:	sub	r2, r2, r0
   14384:	add	r0, r4, r0, lsl #3
   14388:	lsl	r2, r2, #3
   1438c:	bl	10c94 <memset@plt>
   14390:	ldr	r3, [sp, #28]
   14394:	str	r3, [r5, #4]
   14398:	ldr	r7, [sp, #36]	; 0x24
   1439c:	ldr	r9, [r4]
   143a0:	ldr	r5, [r4, #4]
   143a4:	ldr	r2, [sp, #72]	; 0x48
   143a8:	ldr	r3, [sp, #32]
   143ac:	ldr	ip, [sp, #76]	; 0x4c
   143b0:	orr	r7, r7, #1
   143b4:	add	fp, sp, #40	; 0x28
   143b8:	str	r2, [sp, #12]
   143bc:	str	r3, [sp]
   143c0:	str	r7, [sp, #4]
   143c4:	mov	r1, r9
   143c8:	mov	r0, r5
   143cc:	str	ip, [sp, #16]
   143d0:	str	fp, [sp, #8]
   143d4:	mvn	r3, #0
   143d8:	mov	r2, r6
   143dc:	bl	11848 <abort@plt+0xb24>
   143e0:	cmp	r9, r0
   143e4:	bhi	14444 <abort@plt+0x3720>
   143e8:	ldr	r3, [pc, #156]	; 1448c <abort@plt+0x3768>
   143ec:	add	r9, r0, #1
   143f0:	cmp	r5, r3
   143f4:	str	r9, [r4]
   143f8:	beq	14404 <abort@plt+0x36e0>
   143fc:	mov	r0, r5
   14400:	bl	1161c <abort@plt+0x8f8>
   14404:	mov	r0, r9
   14408:	bl	16124 <abort@plt+0x5400>
   1440c:	ldr	lr, [sp, #76]	; 0x4c
   14410:	ldr	r3, [sp, #32]
   14414:	ldr	ip, [sp, #72]	; 0x48
   14418:	mov	r2, r6
   1441c:	mov	r1, r9
   14420:	str	r0, [r4, #4]
   14424:	str	r3, [sp]
   14428:	str	fp, [sp, #8]
   1442c:	str	r7, [sp, #4]
   14430:	str	lr, [sp, #16]
   14434:	str	ip, [sp, #12]
   14438:	mvn	r3, #0
   1443c:	mov	r5, r0
   14440:	bl	11848 <abort@plt+0xb24>
   14444:	mov	r0, r5
   14448:	str	sl, [r8]
   1444c:	add	sp, sp, #84	; 0x54
   14450:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14454:	mov	r3, #8
   14458:	str	r3, [sp]
   1445c:	add	r1, sp, #28
   14460:	rsb	r2, r2, #1
   14464:	mvn	r3, #-2147483648	; 0x80000000
   14468:	mov	r0, #0
   1446c:	bl	16340 <abort@plt+0x561c>
   14470:	mov	r4, r0
   14474:	ldm	r7, {r0, r1}
   14478:	str	r4, [r5]
   1447c:	stm	r4, {r0, r1}
   14480:	b	14374 <abort@plt+0x3650>
   14484:	andeq	r8, r2, ip, lsr r1
   14488:	ldrdeq	r8, [r2], -r0
   1448c:	andeq	r8, r2, ip, ror #2
   14490:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14494:	mov	r9, r0
   14498:	ldr	lr, [pc, #416]	; 14640 <abort@plt+0x391c>
   1449c:	mov	sl, r1
   144a0:	sub	sp, sp, #92	; 0x5c
   144a4:	ldm	lr!, {r0, r1, r2, r3}
   144a8:	add	ip, sp, #40	; 0x28
   144ac:	ldr	r5, [pc, #400]	; 14644 <abort@plt+0x3920>
   144b0:	stmia	ip!, {r0, r1, r2, r3}
   144b4:	ldm	lr!, {r0, r1, r2, r3}
   144b8:	ldr	r4, [sp, #52]	; 0x34
   144bc:	stmia	ip!, {r0, r1, r2, r3}
   144c0:	ldm	lr, {r0, r1, r2, r3}
   144c4:	mvn	lr, r4
   144c8:	and	lr, lr, #67108864	; 0x4000000
   144cc:	eor	lr, lr, r4
   144d0:	stm	ip, {r0, r1, r2, r3}
   144d4:	str	lr, [sp, #52]	; 0x34
   144d8:	bl	10c7c <__errno_location@plt>
   144dc:	ldr	r2, [r5, #4]
   144e0:	ldr	r4, [r5]
   144e4:	cmp	r2, #0
   144e8:	ldr	r3, [r0]
   144ec:	mov	r7, r0
   144f0:	str	r3, [sp, #28]
   144f4:	bgt	14550 <abort@plt+0x382c>
   144f8:	add	r6, r5, #8
   144fc:	cmp	r4, r6
   14500:	str	r2, [sp, #36]	; 0x24
   14504:	beq	14610 <abort@plt+0x38ec>
   14508:	mov	r3, #8
   1450c:	mov	r0, r4
   14510:	str	r3, [sp]
   14514:	rsb	r2, r2, #1
   14518:	mvn	r3, #-2147483648	; 0x80000000
   1451c:	add	r1, sp, #36	; 0x24
   14520:	bl	16340 <abort@plt+0x561c>
   14524:	mov	r4, r0
   14528:	str	r0, [r5]
   1452c:	ldr	r0, [r5, #4]
   14530:	ldr	r2, [sp, #36]	; 0x24
   14534:	mov	r1, #0
   14538:	sub	r2, r2, r0
   1453c:	add	r0, r4, r0, lsl #3
   14540:	lsl	r2, r2, #3
   14544:	bl	10c94 <memset@plt>
   14548:	ldr	r3, [sp, #36]	; 0x24
   1454c:	str	r3, [r5, #4]
   14550:	ldr	r6, [sp, #44]	; 0x2c
   14554:	ldr	r8, [r4]
   14558:	ldr	r5, [r4, #4]
   1455c:	ldr	r2, [sp, #80]	; 0x50
   14560:	ldr	r3, [sp, #40]	; 0x28
   14564:	ldr	ip, [sp, #84]	; 0x54
   14568:	orr	r6, r6, #1
   1456c:	add	fp, sp, #48	; 0x30
   14570:	str	r2, [sp, #12]
   14574:	str	r3, [sp]
   14578:	str	r6, [sp, #4]
   1457c:	mov	r1, r8
   14580:	mov	r0, r5
   14584:	str	ip, [sp, #16]
   14588:	str	fp, [sp, #8]
   1458c:	mov	r3, sl
   14590:	mov	r2, r9
   14594:	bl	11848 <abort@plt+0xb24>
   14598:	cmp	r8, r0
   1459c:	bhi	145fc <abort@plt+0x38d8>
   145a0:	ldr	r3, [pc, #160]	; 14648 <abort@plt+0x3924>
   145a4:	add	r8, r0, #1
   145a8:	cmp	r5, r3
   145ac:	str	r8, [r4]
   145b0:	beq	145bc <abort@plt+0x3898>
   145b4:	mov	r0, r5
   145b8:	bl	1161c <abort@plt+0x8f8>
   145bc:	mov	r0, r8
   145c0:	bl	16124 <abort@plt+0x5400>
   145c4:	ldr	ip, [sp, #84]	; 0x54
   145c8:	ldr	lr, [sp, #40]	; 0x28
   145cc:	mov	r3, sl
   145d0:	mov	r2, r9
   145d4:	mov	r1, r8
   145d8:	str	r0, [r4, #4]
   145dc:	ldr	r4, [sp, #80]	; 0x50
   145e0:	str	fp, [sp, #8]
   145e4:	str	r6, [sp, #4]
   145e8:	str	ip, [sp, #16]
   145ec:	str	r4, [sp, #12]
   145f0:	str	lr, [sp]
   145f4:	mov	r5, r0
   145f8:	bl	11848 <abort@plt+0xb24>
   145fc:	ldr	r3, [sp, #28]
   14600:	mov	r0, r5
   14604:	str	r3, [r7]
   14608:	add	sp, sp, #92	; 0x5c
   1460c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14610:	mov	r3, #8
   14614:	str	r3, [sp]
   14618:	add	r1, sp, #36	; 0x24
   1461c:	rsb	r2, r2, #1
   14620:	mvn	r3, #-2147483648	; 0x80000000
   14624:	mov	r0, #0
   14628:	bl	16340 <abort@plt+0x561c>
   1462c:	mov	r4, r0
   14630:	ldm	r6, {r0, r1}
   14634:	str	r4, [r5]
   14638:	stm	r4, {r0, r1}
   1463c:	b	1452c <abort@plt+0x3808>
   14640:	andeq	r8, r2, ip, lsr r1
   14644:	ldrdeq	r8, [r2], -r0
   14648:	andeq	r8, r2, ip, ror #2
   1464c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14650:	sub	sp, sp, #180	; 0xb4
   14654:	mov	r6, r1
   14658:	mov	r4, r0
   1465c:	mov	r9, r2
   14660:	add	r0, sp, #80	; 0x50
   14664:	mov	r2, #48	; 0x30
   14668:	mov	r1, #0
   1466c:	bl	10c94 <memset@plt>
   14670:	cmp	r6, #10
   14674:	beq	14854 <abort@plt+0x3b30>
   14678:	add	r5, sp, #80	; 0x50
   1467c:	str	r6, [sp, #80]	; 0x50
   14680:	ldm	r5!, {r0, r1, r2, r3}
   14684:	add	ip, sp, #128	; 0x80
   14688:	mov	r7, ip
   1468c:	add	lr, sp, #32
   14690:	stmia	ip!, {r0, r1, r2, r3}
   14694:	mov	r8, #67108864	; 0x4000000
   14698:	ldm	r5!, {r0, r1, r2, r3}
   1469c:	ldr	r6, [pc, #436]	; 14858 <abort@plt+0x3b34>
   146a0:	stmia	ip!, {r0, r1, r2, r3}
   146a4:	ldm	r5, {r0, r1, r2, r3}
   146a8:	stm	ip, {r0, r1, r2, r3}
   146ac:	ldm	r7!, {r0, r1, r2, r3}
   146b0:	stmia	lr!, {r0, r1, r2, r3}
   146b4:	ldm	r7!, {r0, r1, r2, r3}
   146b8:	str	r8, [sp, #44]	; 0x2c
   146bc:	stmia	lr!, {r0, r1, r2, r3}
   146c0:	ldm	ip, {r0, r1, r2, r3}
   146c4:	stm	lr, {r0, r1, r2, r3}
   146c8:	bl	10c7c <__errno_location@plt>
   146cc:	cmn	r4, #-2147483647	; 0x80000001
   146d0:	ldr	r5, [r6]
   146d4:	mov	r7, r0
   146d8:	movne	r0, #0
   146dc:	moveq	r0, #1
   146e0:	ldr	r3, [r7]
   146e4:	orrs	r0, r0, r4, lsr #31
   146e8:	str	r3, [sp, #24]
   146ec:	bne	14854 <abort@plt+0x3b30>
   146f0:	ldr	r2, [r6, #4]
   146f4:	cmp	r4, r2
   146f8:	blt	14758 <abort@plt+0x3a34>
   146fc:	add	r8, r6, #8
   14700:	cmp	r5, r8
   14704:	str	r2, [sp, #80]	; 0x50
   14708:	beq	14824 <abort@plt+0x3b00>
   1470c:	mov	r3, #8
   14710:	sub	r2, r4, r2
   14714:	mov	r0, r5
   14718:	str	r3, [sp]
   1471c:	add	r2, r2, #1
   14720:	add	r1, sp, #80	; 0x50
   14724:	mvn	r3, #-2147483648	; 0x80000000
   14728:	bl	16340 <abort@plt+0x561c>
   1472c:	mov	r5, r0
   14730:	str	r0, [r6]
   14734:	ldr	r0, [r6, #4]
   14738:	ldr	r2, [sp, #80]	; 0x50
   1473c:	mov	r1, #0
   14740:	sub	r2, r2, r0
   14744:	add	r0, r5, r0, lsl #3
   14748:	lsl	r2, r2, #3
   1474c:	bl	10c94 <memset@plt>
   14750:	ldr	r3, [sp, #80]	; 0x50
   14754:	str	r3, [r6, #4]
   14758:	add	fp, r5, r4, lsl #3
   1475c:	ldr	r1, [sp, #36]	; 0x24
   14760:	ldr	r8, [r5, r4, lsl #3]
   14764:	ldr	r6, [fp, #4]
   14768:	ldr	r2, [sp, #72]	; 0x48
   1476c:	ldr	r3, [sp, #32]
   14770:	ldr	ip, [sp, #76]	; 0x4c
   14774:	orr	r1, r1, #1
   14778:	add	sl, sp, #40	; 0x28
   1477c:	str	r1, [sp, #28]
   14780:	str	r1, [sp, #4]
   14784:	str	r2, [sp, #12]
   14788:	str	r3, [sp]
   1478c:	mov	r0, r6
   14790:	mov	r1, r8
   14794:	str	ip, [sp, #16]
   14798:	str	sl, [sp, #8]
   1479c:	mvn	r3, #0
   147a0:	mov	r2, r9
   147a4:	bl	11848 <abort@plt+0xb24>
   147a8:	cmp	r8, r0
   147ac:	bhi	14810 <abort@plt+0x3aec>
   147b0:	ldr	r3, [pc, #164]	; 1485c <abort@plt+0x3b38>
   147b4:	add	r8, r0, #1
   147b8:	cmp	r6, r3
   147bc:	str	r8, [r5, r4, lsl #3]
   147c0:	beq	147cc <abort@plt+0x3aa8>
   147c4:	mov	r0, r6
   147c8:	bl	1161c <abort@plt+0x8f8>
   147cc:	mov	r0, r8
   147d0:	bl	16124 <abort@plt+0x5400>
   147d4:	ldr	lr, [sp, #76]	; 0x4c
   147d8:	ldr	r3, [sp, #32]
   147dc:	ldr	ip, [sp, #72]	; 0x48
   147e0:	ldr	r4, [sp, #28]
   147e4:	mov	r2, r9
   147e8:	mov	r1, r8
   147ec:	str	r0, [fp, #4]
   147f0:	str	r3, [sp]
   147f4:	str	sl, [sp, #8]
   147f8:	str	r4, [sp, #4]
   147fc:	str	lr, [sp, #16]
   14800:	str	ip, [sp, #12]
   14804:	mvn	r3, #0
   14808:	mov	r6, r0
   1480c:	bl	11848 <abort@plt+0xb24>
   14810:	ldr	r3, [sp, #24]
   14814:	mov	r0, r6
   14818:	str	r3, [r7]
   1481c:	add	sp, sp, #180	; 0xb4
   14820:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14824:	mov	r3, #8
   14828:	sub	r2, r4, r2
   1482c:	add	r1, sp, #80	; 0x50
   14830:	str	r3, [sp]
   14834:	add	r2, r2, #1
   14838:	mvn	r3, #-2147483648	; 0x80000000
   1483c:	bl	16340 <abort@plt+0x561c>
   14840:	mov	r5, r0
   14844:	ldm	r8, {r0, r1}
   14848:	str	r5, [r6]
   1484c:	stm	r5, {r0, r1}
   14850:	b	14734 <abort@plt+0x3a10>
   14854:	bl	10d24 <abort@plt>
   14858:	ldrdeq	r8, [r2], -r0
   1485c:	andeq	r8, r2, ip, ror #2
   14860:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14864:	mov	r7, r1
   14868:	ldr	lr, [pc, #492]	; 14a5c <abort@plt+0x3d38>
   1486c:	mov	r8, r2
   14870:	mov	r4, r0
   14874:	mov	fp, r3
   14878:	ldm	lr!, {r0, r1, r2, r3}
   1487c:	sub	sp, sp, #100	; 0x64
   14880:	add	ip, sp, #48	; 0x30
   14884:	mov	sl, #10
   14888:	stmia	ip!, {r0, r1, r2, r3}
   1488c:	cmp	r8, #0
   14890:	cmpne	r7, #0
   14894:	ldm	lr!, {r0, r1, r2, r3}
   14898:	str	sl, [sp, #48]	; 0x30
   1489c:	stmia	ip!, {r0, r1, r2, r3}
   148a0:	ldm	lr, {r0, r1, r2, r3}
   148a4:	stm	ip, {r0, r1, r2, r3}
   148a8:	beq	14a58 <abort@plt+0x3d34>
   148ac:	str	r7, [sp, #88]	; 0x58
   148b0:	str	r8, [sp, #92]	; 0x5c
   148b4:	bl	10c7c <__errno_location@plt>
   148b8:	ldr	r6, [pc, #416]	; 14a60 <abort@plt+0x3d3c>
   148bc:	cmn	r4, #-2147483647	; 0x80000001
   148c0:	ldr	r5, [r6]
   148c4:	mov	r9, r0
   148c8:	movne	r0, #0
   148cc:	moveq	r0, #1
   148d0:	ldr	r3, [r9]
   148d4:	orrs	r0, r0, r4, lsr #31
   148d8:	str	r3, [sp, #28]
   148dc:	bne	14a58 <abort@plt+0x3d34>
   148e0:	ldr	r2, [r6, #4]
   148e4:	cmp	r4, r2
   148e8:	movlt	r3, sl
   148ec:	blt	14958 <abort@plt+0x3c34>
   148f0:	add	r7, r6, #8
   148f4:	cmp	r5, r7
   148f8:	str	r2, [sp, #44]	; 0x2c
   148fc:	beq	14a28 <abort@plt+0x3d04>
   14900:	mov	r3, #8
   14904:	sub	r2, r4, r2
   14908:	mov	r0, r5
   1490c:	str	r3, [sp]
   14910:	add	r2, r2, #1
   14914:	mvn	r3, #-2147483648	; 0x80000000
   14918:	add	r1, sp, #44	; 0x2c
   1491c:	bl	16340 <abort@plt+0x561c>
   14920:	mov	r5, r0
   14924:	str	r0, [r6]
   14928:	ldr	r0, [r6, #4]
   1492c:	ldr	r2, [sp, #44]	; 0x2c
   14930:	mov	r1, #0
   14934:	sub	r2, r2, r0
   14938:	add	r0, r5, r0, lsl #3
   1493c:	lsl	r2, r2, #3
   14940:	bl	10c94 <memset@plt>
   14944:	ldr	r3, [sp, #48]	; 0x30
   14948:	ldr	r7, [sp, #88]	; 0x58
   1494c:	ldr	r8, [sp, #92]	; 0x5c
   14950:	ldr	r2, [sp, #44]	; 0x2c
   14954:	str	r2, [r6, #4]
   14958:	add	r2, r5, r4, lsl #3
   1495c:	mov	r1, r2
   14960:	str	r2, [sp, #32]
   14964:	ldr	r2, [sp, #52]	; 0x34
   14968:	ldr	r6, [r1, #4]
   1496c:	ldr	sl, [r5, r4, lsl #3]
   14970:	orr	r2, r2, #1
   14974:	str	r3, [sp]
   14978:	add	r3, sp, #56	; 0x38
   1497c:	str	r2, [sp, #36]	; 0x24
   14980:	str	r2, [sp, #4]
   14984:	str	r3, [sp, #8]
   14988:	mov	r0, r6
   1498c:	str	r8, [sp, #16]
   14990:	str	r7, [sp, #12]
   14994:	mov	r1, sl
   14998:	mvn	r3, #0
   1499c:	mov	r2, fp
   149a0:	bl	11848 <abort@plt+0xb24>
   149a4:	cmp	sl, r0
   149a8:	bhi	14a14 <abort@plt+0x3cf0>
   149ac:	ldr	r3, [pc, #176]	; 14a64 <abort@plt+0x3d40>
   149b0:	add	r7, r0, #1
   149b4:	cmp	r6, r3
   149b8:	str	r7, [r5, r4, lsl #3]
   149bc:	beq	149c8 <abort@plt+0x3ca4>
   149c0:	mov	r0, r6
   149c4:	bl	1161c <abort@plt+0x8f8>
   149c8:	mov	r0, r7
   149cc:	bl	16124 <abort@plt+0x5400>
   149d0:	ldr	r3, [sp, #32]
   149d4:	ldr	lr, [sp, #92]	; 0x5c
   149d8:	ldr	ip, [sp, #88]	; 0x58
   149dc:	ldr	r4, [sp, #36]	; 0x24
   149e0:	mov	r2, fp
   149e4:	mov	r1, r7
   149e8:	str	r0, [r3, #4]
   149ec:	add	r3, sp, #56	; 0x38
   149f0:	str	r3, [sp, #8]
   149f4:	ldr	r3, [sp, #48]	; 0x30
   149f8:	str	r4, [sp, #4]
   149fc:	str	r3, [sp]
   14a00:	str	lr, [sp, #16]
   14a04:	str	ip, [sp, #12]
   14a08:	mvn	r3, #0
   14a0c:	mov	r6, r0
   14a10:	bl	11848 <abort@plt+0xb24>
   14a14:	ldr	r3, [sp, #28]
   14a18:	mov	r0, r6
   14a1c:	str	r3, [r9]
   14a20:	add	sp, sp, #100	; 0x64
   14a24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a28:	mov	r3, #8
   14a2c:	sub	r2, r4, r2
   14a30:	str	r3, [sp]
   14a34:	add	r1, sp, #44	; 0x2c
   14a38:	add	r2, r2, #1
   14a3c:	mvn	r3, #-2147483648	; 0x80000000
   14a40:	bl	16340 <abort@plt+0x561c>
   14a44:	mov	r5, r0
   14a48:	ldm	r7, {r0, r1}
   14a4c:	str	r5, [r6]
   14a50:	stm	r5, {r0, r1}
   14a54:	b	14928 <abort@plt+0x3c04>
   14a58:	bl	10d24 <abort@plt>
   14a5c:	andeq	r8, r2, ip, lsr r1
   14a60:	ldrdeq	r8, [r2], -r0
   14a64:	andeq	r8, r2, ip, ror #2
   14a68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a6c:	mov	r7, r1
   14a70:	ldr	lr, [pc, #492]	; 14c64 <abort@plt+0x3f40>
   14a74:	mov	r8, r2
   14a78:	mov	r4, r0
   14a7c:	mov	fp, r3
   14a80:	ldm	lr!, {r0, r1, r2, r3}
   14a84:	sub	sp, sp, #100	; 0x64
   14a88:	add	ip, sp, #48	; 0x30
   14a8c:	mov	sl, #10
   14a90:	stmia	ip!, {r0, r1, r2, r3}
   14a94:	cmp	r8, #0
   14a98:	cmpne	r7, #0
   14a9c:	ldm	lr!, {r0, r1, r2, r3}
   14aa0:	str	sl, [sp, #48]	; 0x30
   14aa4:	stmia	ip!, {r0, r1, r2, r3}
   14aa8:	ldm	lr, {r0, r1, r2, r3}
   14aac:	stm	ip, {r0, r1, r2, r3}
   14ab0:	beq	14c60 <abort@plt+0x3f3c>
   14ab4:	str	r7, [sp, #88]	; 0x58
   14ab8:	str	r8, [sp, #92]	; 0x5c
   14abc:	bl	10c7c <__errno_location@plt>
   14ac0:	ldr	r6, [pc, #416]	; 14c68 <abort@plt+0x3f44>
   14ac4:	cmn	r4, #-2147483647	; 0x80000001
   14ac8:	ldr	r5, [r6]
   14acc:	mov	r9, r0
   14ad0:	movne	r0, #0
   14ad4:	moveq	r0, #1
   14ad8:	ldr	r3, [r9]
   14adc:	orrs	r0, r0, r4, lsr #31
   14ae0:	str	r3, [sp, #28]
   14ae4:	bne	14c60 <abort@plt+0x3f3c>
   14ae8:	ldr	r2, [r6, #4]
   14aec:	cmp	r4, r2
   14af0:	movlt	r3, sl
   14af4:	blt	14b60 <abort@plt+0x3e3c>
   14af8:	add	r7, r6, #8
   14afc:	cmp	r5, r7
   14b00:	str	r2, [sp, #44]	; 0x2c
   14b04:	beq	14c30 <abort@plt+0x3f0c>
   14b08:	mov	r3, #8
   14b0c:	sub	r2, r4, r2
   14b10:	mov	r0, r5
   14b14:	str	r3, [sp]
   14b18:	add	r2, r2, #1
   14b1c:	mvn	r3, #-2147483648	; 0x80000000
   14b20:	add	r1, sp, #44	; 0x2c
   14b24:	bl	16340 <abort@plt+0x561c>
   14b28:	mov	r5, r0
   14b2c:	str	r0, [r6]
   14b30:	ldr	r0, [r6, #4]
   14b34:	ldr	r2, [sp, #44]	; 0x2c
   14b38:	mov	r1, #0
   14b3c:	sub	r2, r2, r0
   14b40:	add	r0, r5, r0, lsl #3
   14b44:	lsl	r2, r2, #3
   14b48:	bl	10c94 <memset@plt>
   14b4c:	ldr	r3, [sp, #48]	; 0x30
   14b50:	ldr	r7, [sp, #88]	; 0x58
   14b54:	ldr	r8, [sp, #92]	; 0x5c
   14b58:	ldr	r2, [sp, #44]	; 0x2c
   14b5c:	str	r2, [r6, #4]
   14b60:	add	r2, r5, r4, lsl #3
   14b64:	mov	r1, r2
   14b68:	str	r2, [sp, #32]
   14b6c:	ldr	r2, [sp, #52]	; 0x34
   14b70:	ldr	r6, [r1, #4]
   14b74:	ldr	sl, [r5, r4, lsl #3]
   14b78:	orr	r2, r2, #1
   14b7c:	str	r3, [sp]
   14b80:	add	r3, sp, #56	; 0x38
   14b84:	str	r2, [sp, #36]	; 0x24
   14b88:	str	r2, [sp, #4]
   14b8c:	str	r3, [sp, #8]
   14b90:	mov	r0, r6
   14b94:	str	r8, [sp, #16]
   14b98:	str	r7, [sp, #12]
   14b9c:	mov	r1, sl
   14ba0:	ldr	r3, [sp, #136]	; 0x88
   14ba4:	mov	r2, fp
   14ba8:	bl	11848 <abort@plt+0xb24>
   14bac:	cmp	sl, r0
   14bb0:	bhi	14c1c <abort@plt+0x3ef8>
   14bb4:	ldr	r3, [pc, #176]	; 14c6c <abort@plt+0x3f48>
   14bb8:	add	r7, r0, #1
   14bbc:	cmp	r6, r3
   14bc0:	str	r7, [r5, r4, lsl #3]
   14bc4:	beq	14bd0 <abort@plt+0x3eac>
   14bc8:	mov	r0, r6
   14bcc:	bl	1161c <abort@plt+0x8f8>
   14bd0:	mov	r0, r7
   14bd4:	bl	16124 <abort@plt+0x5400>
   14bd8:	ldr	r3, [sp, #32]
   14bdc:	ldr	lr, [sp, #92]	; 0x5c
   14be0:	ldr	ip, [sp, #88]	; 0x58
   14be4:	ldr	r4, [sp, #36]	; 0x24
   14be8:	mov	r2, fp
   14bec:	mov	r1, r7
   14bf0:	str	r0, [r3, #4]
   14bf4:	add	r3, sp, #56	; 0x38
   14bf8:	str	r3, [sp, #8]
   14bfc:	ldr	r3, [sp, #48]	; 0x30
   14c00:	str	r4, [sp, #4]
   14c04:	str	r3, [sp]
   14c08:	str	lr, [sp, #16]
   14c0c:	str	ip, [sp, #12]
   14c10:	ldr	r3, [sp, #136]	; 0x88
   14c14:	mov	r6, r0
   14c18:	bl	11848 <abort@plt+0xb24>
   14c1c:	ldr	r3, [sp, #28]
   14c20:	mov	r0, r6
   14c24:	str	r3, [r9]
   14c28:	add	sp, sp, #100	; 0x64
   14c2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c30:	mov	r3, #8
   14c34:	sub	r2, r4, r2
   14c38:	str	r3, [sp]
   14c3c:	add	r1, sp, #44	; 0x2c
   14c40:	add	r2, r2, #1
   14c44:	mvn	r3, #-2147483648	; 0x80000000
   14c48:	bl	16340 <abort@plt+0x561c>
   14c4c:	mov	r5, r0
   14c50:	ldm	r7, {r0, r1}
   14c54:	str	r5, [r6]
   14c58:	stm	r5, {r0, r1}
   14c5c:	b	14b30 <abort@plt+0x3e0c>
   14c60:	bl	10d24 <abort@plt>
   14c64:	andeq	r8, r2, ip, lsr r1
   14c68:	ldrdeq	r8, [r2], -r0
   14c6c:	andeq	r8, r2, ip, ror #2
   14c70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c74:	mov	r5, r0
   14c78:	ldr	lr, [pc, #452]	; 14e44 <abort@plt+0x4120>
   14c7c:	mov	r6, r1
   14c80:	mov	sl, r2
   14c84:	ldm	lr!, {r0, r1, r2, r3}
   14c88:	sub	sp, sp, #92	; 0x5c
   14c8c:	add	ip, sp, #40	; 0x28
   14c90:	cmp	r6, #0
   14c94:	cmpne	r5, #0
   14c98:	stmia	ip!, {r0, r1, r2, r3}
   14c9c:	mov	r9, #10
   14ca0:	ldm	lr!, {r0, r1, r2, r3}
   14ca4:	moveq	fp, #1
   14ca8:	movne	fp, #0
   14cac:	str	r9, [sp, #40]	; 0x28
   14cb0:	stmia	ip!, {r0, r1, r2, r3}
   14cb4:	ldm	lr, {r0, r1, r2, r3}
   14cb8:	stm	ip, {r0, r1, r2, r3}
   14cbc:	beq	14e40 <abort@plt+0x411c>
   14cc0:	str	r5, [sp, #80]	; 0x50
   14cc4:	str	r6, [sp, #84]	; 0x54
   14cc8:	bl	10c7c <__errno_location@plt>
   14ccc:	ldr	r7, [pc, #372]	; 14e48 <abort@plt+0x4124>
   14cd0:	ldr	r2, [r7, #4]
   14cd4:	ldr	r4, [r7]
   14cd8:	cmp	r2, #0
   14cdc:	ldr	r3, [r0]
   14ce0:	mov	r8, r0
   14ce4:	str	r3, [sp, #24]
   14ce8:	movgt	r3, r9
   14cec:	bgt	14d54 <abort@plt+0x4030>
   14cf0:	add	r5, r7, #8
   14cf4:	cmp	r4, r5
   14cf8:	str	r2, [sp, #36]	; 0x24
   14cfc:	beq	14e10 <abort@plt+0x40ec>
   14d00:	mov	r3, #8
   14d04:	mov	r0, r4
   14d08:	str	r3, [sp]
   14d0c:	rsb	r2, r2, #1
   14d10:	mvn	r3, #-2147483648	; 0x80000000
   14d14:	add	r1, sp, #36	; 0x24
   14d18:	bl	16340 <abort@plt+0x561c>
   14d1c:	mov	r4, r0
   14d20:	str	r0, [r7]
   14d24:	ldr	r0, [r7, #4]
   14d28:	ldr	r2, [sp, #36]	; 0x24
   14d2c:	mov	r1, #0
   14d30:	sub	r2, r2, r0
   14d34:	add	r0, r4, r0, lsl #3
   14d38:	lsl	r2, r2, #3
   14d3c:	bl	10c94 <memset@plt>
   14d40:	ldr	r3, [sp, #40]	; 0x28
   14d44:	ldr	r5, [sp, #80]	; 0x50
   14d48:	ldr	r6, [sp, #84]	; 0x54
   14d4c:	ldr	r2, [sp, #36]	; 0x24
   14d50:	str	r2, [r7, #4]
   14d54:	ldr	r2, [sp, #44]	; 0x2c
   14d58:	ldr	r9, [r4]
   14d5c:	ldr	r7, [r4, #4]
   14d60:	orr	r2, r2, #1
   14d64:	add	fp, sp, #48	; 0x30
   14d68:	str	r2, [sp, #28]
   14d6c:	str	r2, [sp, #4]
   14d70:	str	r3, [sp]
   14d74:	str	r6, [sp, #16]
   14d78:	str	r5, [sp, #12]
   14d7c:	mov	r1, r9
   14d80:	mov	r0, r7
   14d84:	str	fp, [sp, #8]
   14d88:	mvn	r3, #0
   14d8c:	mov	r2, sl
   14d90:	bl	11848 <abort@plt+0xb24>
   14d94:	cmp	r9, r0
   14d98:	bhi	14dfc <abort@plt+0x40d8>
   14d9c:	ldr	r3, [pc, #168]	; 14e4c <abort@plt+0x4128>
   14da0:	add	r5, r0, #1
   14da4:	cmp	r7, r3
   14da8:	str	r5, [r4]
   14dac:	beq	14db8 <abort@plt+0x4094>
   14db0:	mov	r0, r7
   14db4:	bl	1161c <abort@plt+0x8f8>
   14db8:	mov	r0, r5
   14dbc:	bl	16124 <abort@plt+0x5400>
   14dc0:	ldr	lr, [sp, #84]	; 0x54
   14dc4:	ldr	r3, [sp, #40]	; 0x28
   14dc8:	ldr	ip, [sp, #80]	; 0x50
   14dcc:	mov	r2, sl
   14dd0:	mov	r1, r5
   14dd4:	str	r0, [r4, #4]
   14dd8:	ldr	r4, [sp, #28]
   14ddc:	str	r3, [sp]
   14de0:	str	fp, [sp, #8]
   14de4:	str	r4, [sp, #4]
   14de8:	str	lr, [sp, #16]
   14dec:	str	ip, [sp, #12]
   14df0:	mvn	r3, #0
   14df4:	mov	r7, r0
   14df8:	bl	11848 <abort@plt+0xb24>
   14dfc:	ldr	r3, [sp, #24]
   14e00:	mov	r0, r7
   14e04:	str	r3, [r8]
   14e08:	add	sp, sp, #92	; 0x5c
   14e0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e10:	mov	r3, #8
   14e14:	str	r3, [sp]
   14e18:	add	r1, sp, #36	; 0x24
   14e1c:	rsb	r2, r2, #1
   14e20:	mov	r0, fp
   14e24:	mvn	r3, #-2147483648	; 0x80000000
   14e28:	bl	16340 <abort@plt+0x561c>
   14e2c:	mov	r4, r0
   14e30:	ldm	r5, {r0, r1}
   14e34:	str	r4, [r7]
   14e38:	stm	r4, {r0, r1}
   14e3c:	b	14d24 <abort@plt+0x4000>
   14e40:	bl	10d24 <abort@plt>
   14e44:	andeq	r8, r2, ip, lsr r1
   14e48:	ldrdeq	r8, [r2], -r0
   14e4c:	andeq	r8, r2, ip, ror #2
   14e50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e54:	mov	r5, r0
   14e58:	ldr	lr, [pc, #464]	; 15030 <abort@plt+0x430c>
   14e5c:	mov	r6, r1
   14e60:	mov	sl, r2
   14e64:	mov	fp, r3
   14e68:	ldm	lr!, {r0, r1, r2, r3}
   14e6c:	sub	sp, sp, #92	; 0x5c
   14e70:	add	ip, sp, #40	; 0x28
   14e74:	cmp	r6, #0
   14e78:	cmpne	r5, #0
   14e7c:	stmia	ip!, {r0, r1, r2, r3}
   14e80:	moveq	r4, #1
   14e84:	ldm	lr!, {r0, r1, r2, r3}
   14e88:	movne	r4, #0
   14e8c:	mov	r9, #10
   14e90:	str	r4, [sp, #28]
   14e94:	stmia	ip!, {r0, r1, r2, r3}
   14e98:	ldm	lr, {r0, r1, r2, r3}
   14e9c:	str	r9, [sp, #40]	; 0x28
   14ea0:	stm	ip, {r0, r1, r2, r3}
   14ea4:	beq	1502c <abort@plt+0x4308>
   14ea8:	str	r5, [sp, #80]	; 0x50
   14eac:	str	r6, [sp, #84]	; 0x54
   14eb0:	bl	10c7c <__errno_location@plt>
   14eb4:	ldr	r7, [pc, #376]	; 15034 <abort@plt+0x4310>
   14eb8:	ldr	r2, [r7, #4]
   14ebc:	ldr	r4, [r7]
   14ec0:	cmp	r2, #0
   14ec4:	ldr	r3, [r0]
   14ec8:	mov	r8, r0
   14ecc:	str	r3, [sp, #24]
   14ed0:	movgt	r3, r9
   14ed4:	bgt	14f3c <abort@plt+0x4218>
   14ed8:	add	r5, r7, #8
   14edc:	cmp	r4, r5
   14ee0:	str	r2, [sp, #36]	; 0x24
   14ee4:	beq	14ffc <abort@plt+0x42d8>
   14ee8:	mov	r3, #8
   14eec:	mov	r0, r4
   14ef0:	str	r3, [sp]
   14ef4:	rsb	r2, r2, #1
   14ef8:	mvn	r3, #-2147483648	; 0x80000000
   14efc:	add	r1, sp, #36	; 0x24
   14f00:	bl	16340 <abort@plt+0x561c>
   14f04:	mov	r4, r0
   14f08:	str	r0, [r7]
   14f0c:	ldr	r0, [r7, #4]
   14f10:	ldr	r2, [sp, #36]	; 0x24
   14f14:	mov	r1, #0
   14f18:	sub	r2, r2, r0
   14f1c:	add	r0, r4, r0, lsl #3
   14f20:	lsl	r2, r2, #3
   14f24:	bl	10c94 <memset@plt>
   14f28:	ldr	r3, [sp, #40]	; 0x28
   14f2c:	ldr	r5, [sp, #80]	; 0x50
   14f30:	ldr	r6, [sp, #84]	; 0x54
   14f34:	ldr	r2, [sp, #36]	; 0x24
   14f38:	str	r2, [r7, #4]
   14f3c:	ldr	r2, [sp, #44]	; 0x2c
   14f40:	ldr	r9, [r4]
   14f44:	ldr	r7, [r4, #4]
   14f48:	orr	r2, r2, #1
   14f4c:	str	r3, [sp]
   14f50:	add	r3, sp, #48	; 0x30
   14f54:	str	r2, [sp, #28]
   14f58:	str	r2, [sp, #4]
   14f5c:	str	r3, [sp, #8]
   14f60:	str	r6, [sp, #16]
   14f64:	str	r5, [sp, #12]
   14f68:	mov	r1, r9
   14f6c:	mov	r0, r7
   14f70:	mov	r3, fp
   14f74:	mov	r2, sl
   14f78:	bl	11848 <abort@plt+0xb24>
   14f7c:	cmp	r9, r0
   14f80:	bhi	14fe8 <abort@plt+0x42c4>
   14f84:	ldr	r3, [pc, #172]	; 15038 <abort@plt+0x4314>
   14f88:	add	r5, r0, #1
   14f8c:	cmp	r7, r3
   14f90:	str	r5, [r4]
   14f94:	beq	14fa0 <abort@plt+0x427c>
   14f98:	mov	r0, r7
   14f9c:	bl	1161c <abort@plt+0x8f8>
   14fa0:	mov	r0, r5
   14fa4:	bl	16124 <abort@plt+0x5400>
   14fa8:	add	lr, sp, #48	; 0x30
   14fac:	ldr	ip, [sp, #84]	; 0x54
   14fb0:	mov	r1, r5
   14fb4:	ldr	r5, [sp, #28]
   14fb8:	mov	r3, fp
   14fbc:	mov	r2, sl
   14fc0:	str	r0, [r4, #4]
   14fc4:	ldr	r4, [sp, #80]	; 0x50
   14fc8:	str	lr, [sp, #8]
   14fcc:	ldr	lr, [sp, #40]	; 0x28
   14fd0:	str	r5, [sp, #4]
   14fd4:	str	ip, [sp, #16]
   14fd8:	str	r4, [sp, #12]
   14fdc:	str	lr, [sp]
   14fe0:	mov	r7, r0
   14fe4:	bl	11848 <abort@plt+0xb24>
   14fe8:	ldr	r3, [sp, #24]
   14fec:	mov	r0, r7
   14ff0:	str	r3, [r8]
   14ff4:	add	sp, sp, #92	; 0x5c
   14ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ffc:	mov	r3, #8
   15000:	str	r3, [sp]
   15004:	add	r1, sp, #36	; 0x24
   15008:	rsb	r2, r2, #1
   1500c:	ldr	r0, [sp, #28]
   15010:	mvn	r3, #-2147483648	; 0x80000000
   15014:	bl	16340 <abort@plt+0x561c>
   15018:	mov	r4, r0
   1501c:	ldm	r5, {r0, r1}
   15020:	str	r4, [r7]
   15024:	stm	r4, {r0, r1}
   15028:	b	14f0c <abort@plt+0x41e8>
   1502c:	bl	10d24 <abort@plt>
   15030:	andeq	r8, r2, ip, lsr r1
   15034:	ldrdeq	r8, [r2], -r0
   15038:	andeq	r8, r2, ip, ror #2
   1503c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15040:	sub	sp, sp, #52	; 0x34
   15044:	mov	r5, r0
   15048:	mov	sl, r1
   1504c:	mov	fp, r2
   15050:	bl	10c7c <__errno_location@plt>
   15054:	ldr	r4, [pc, #404]	; 151f0 <abort@plt+0x44cc>
   15058:	cmn	r5, #-2147483647	; 0x80000001
   1505c:	ldr	r6, [r4]
   15060:	mov	r8, r0
   15064:	movne	r0, #0
   15068:	moveq	r0, #1
   1506c:	ldr	r3, [r8]
   15070:	orrs	r0, r0, r5, lsr #31
   15074:	str	r3, [sp, #28]
   15078:	bne	151ec <abort@plt+0x44c8>
   1507c:	ldr	r2, [r4, #4]
   15080:	cmp	r5, r2
   15084:	blt	150e4 <abort@plt+0x43c0>
   15088:	add	r7, r4, #8
   1508c:	cmp	r6, r7
   15090:	str	r2, [sp, #44]	; 0x2c
   15094:	beq	151bc <abort@plt+0x4498>
   15098:	mov	r3, #8
   1509c:	sub	r2, r5, r2
   150a0:	mov	r0, r6
   150a4:	str	r3, [sp]
   150a8:	add	r2, r2, #1
   150ac:	mvn	r3, #-2147483648	; 0x80000000
   150b0:	add	r1, sp, #44	; 0x2c
   150b4:	bl	16340 <abort@plt+0x561c>
   150b8:	mov	r6, r0
   150bc:	str	r0, [r4]
   150c0:	ldr	r0, [r4, #4]
   150c4:	ldr	r2, [sp, #44]	; 0x2c
   150c8:	mov	r1, #0
   150cc:	sub	r2, r2, r0
   150d0:	add	r0, r6, r0, lsl #3
   150d4:	lsl	r2, r2, #3
   150d8:	bl	10c94 <memset@plt>
   150dc:	ldr	r3, [sp, #44]	; 0x2c
   150e0:	str	r3, [r4, #4]
   150e4:	ldr	r2, [r4, #56]	; 0x38
   150e8:	add	r3, r6, r5, lsl #3
   150ec:	ldr	r1, [r4, #20]
   150f0:	ldr	r7, [r3, #4]
   150f4:	ldr	r9, [r6, r5, lsl #3]
   150f8:	ldr	ip, [r4, #60]	; 0x3c
   150fc:	str	r3, [sp, #32]
   15100:	ldr	r3, [r4, #16]
   15104:	str	r2, [sp, #12]
   15108:	ldr	r2, [pc, #228]	; 151f4 <abort@plt+0x44d0>
   1510c:	orr	r1, r1, #1
   15110:	str	r1, [sp, #36]	; 0x24
   15114:	str	r1, [sp, #4]
   15118:	str	r2, [sp, #8]
   1511c:	str	r3, [sp]
   15120:	mov	r0, r7
   15124:	mov	r1, r9
   15128:	str	ip, [sp, #16]
   1512c:	mov	r3, fp
   15130:	mov	r2, sl
   15134:	bl	11848 <abort@plt+0xb24>
   15138:	cmp	r9, r0
   1513c:	bhi	151a8 <abort@plt+0x4484>
   15140:	ldr	r3, [pc, #176]	; 151f8 <abort@plt+0x44d4>
   15144:	add	r9, r0, #1
   15148:	cmp	r7, r3
   1514c:	str	r9, [r6, r5, lsl #3]
   15150:	beq	1515c <abort@plt+0x4438>
   15154:	mov	r0, r7
   15158:	bl	1161c <abort@plt+0x8f8>
   1515c:	mov	r0, r9
   15160:	bl	16124 <abort@plt+0x5400>
   15164:	ldr	ip, [sp, #32]
   15168:	ldr	lr, [r4, #60]	; 0x3c
   1516c:	ldr	r5, [r4, #56]	; 0x38
   15170:	mov	r3, fp
   15174:	mov	r2, sl
   15178:	mov	r1, r9
   1517c:	str	r0, [ip, #4]
   15180:	ldr	ip, [r4, #16]
   15184:	ldr	r4, [pc, #104]	; 151f4 <abort@plt+0x44d0>
   15188:	str	lr, [sp, #16]
   1518c:	str	r4, [sp, #8]
   15190:	ldr	r4, [sp, #36]	; 0x24
   15194:	str	r5, [sp, #12]
   15198:	str	r4, [sp, #4]
   1519c:	str	ip, [sp]
   151a0:	mov	r7, r0
   151a4:	bl	11848 <abort@plt+0xb24>
   151a8:	ldr	r3, [sp, #28]
   151ac:	mov	r0, r7
   151b0:	str	r3, [r8]
   151b4:	add	sp, sp, #52	; 0x34
   151b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   151bc:	mov	r3, #8
   151c0:	sub	r2, r5, r2
   151c4:	str	r3, [sp]
   151c8:	add	r1, sp, #44	; 0x2c
   151cc:	add	r2, r2, #1
   151d0:	mvn	r3, #-2147483648	; 0x80000000
   151d4:	bl	16340 <abort@plt+0x561c>
   151d8:	mov	r6, r0
   151dc:	ldm	r7, {r0, r1}
   151e0:	str	r6, [r4]
   151e4:	stm	r6, {r0, r1}
   151e8:	b	150c0 <abort@plt+0x439c>
   151ec:	bl	10d24 <abort@plt>
   151f0:	ldrdeq	r8, [r2], -r0
   151f4:	andeq	r8, r2, r8, ror #1
   151f8:	andeq	r8, r2, ip, ror #2
   151fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15200:	sub	sp, sp, #44	; 0x2c
   15204:	mov	r9, r0
   15208:	mov	sl, r1
   1520c:	bl	10c7c <__errno_location@plt>
   15210:	ldr	r4, [pc, #360]	; 15380 <abort@plt+0x465c>
   15214:	ldr	r2, [r4, #4]
   15218:	ldr	r5, [r4]
   1521c:	cmp	r2, #0
   15220:	ldr	r3, [r0]
   15224:	mov	r7, r0
   15228:	str	r3, [sp, #24]
   1522c:	bgt	15288 <abort@plt+0x4564>
   15230:	add	r6, r4, #8
   15234:	cmp	r5, r6
   15238:	str	r2, [sp, #36]	; 0x24
   1523c:	beq	15350 <abort@plt+0x462c>
   15240:	mov	r3, #8
   15244:	mov	r0, r5
   15248:	str	r3, [sp]
   1524c:	rsb	r2, r2, #1
   15250:	mvn	r3, #-2147483648	; 0x80000000
   15254:	add	r1, sp, #36	; 0x24
   15258:	bl	16340 <abort@plt+0x561c>
   1525c:	mov	r5, r0
   15260:	str	r0, [r4]
   15264:	ldr	r0, [r4, #4]
   15268:	ldr	r2, [sp, #36]	; 0x24
   1526c:	mov	r1, #0
   15270:	sub	r2, r2, r0
   15274:	add	r0, r5, r0, lsl #3
   15278:	lsl	r2, r2, #3
   1527c:	bl	10c94 <memset@plt>
   15280:	ldr	r3, [sp, #36]	; 0x24
   15284:	str	r3, [r4, #4]
   15288:	ldr	r1, [r4, #20]
   1528c:	ldr	r8, [r5]
   15290:	ldr	r6, [r5, #4]
   15294:	ldr	r2, [r4, #56]	; 0x38
   15298:	ldr	r3, [r4, #16]
   1529c:	ldr	ip, [r4, #60]	; 0x3c
   152a0:	ldr	fp, [pc, #220]	; 15384 <abort@plt+0x4660>
   152a4:	orr	r1, r1, #1
   152a8:	str	r1, [sp, #28]
   152ac:	str	r1, [sp, #4]
   152b0:	str	r2, [sp, #12]
   152b4:	str	r3, [sp]
   152b8:	mov	r1, r8
   152bc:	mov	r0, r6
   152c0:	str	ip, [sp, #16]
   152c4:	str	fp, [sp, #8]
   152c8:	mov	r3, sl
   152cc:	mov	r2, r9
   152d0:	bl	11848 <abort@plt+0xb24>
   152d4:	cmp	r8, r0
   152d8:	bhi	1533c <abort@plt+0x4618>
   152dc:	ldr	r3, [pc, #164]	; 15388 <abort@plt+0x4664>
   152e0:	add	r8, r0, #1
   152e4:	cmp	r6, r3
   152e8:	str	r8, [r5]
   152ec:	beq	152f8 <abort@plt+0x45d4>
   152f0:	mov	r0, r6
   152f4:	bl	1161c <abort@plt+0x8f8>
   152f8:	mov	r0, r8
   152fc:	bl	16124 <abort@plt+0x5400>
   15300:	ldr	lr, [r4, #60]	; 0x3c
   15304:	ldr	ip, [r4, #16]
   15308:	mov	r3, sl
   1530c:	mov	r2, r9
   15310:	mov	r1, r8
   15314:	str	r0, [r5, #4]
   15318:	ldr	r5, [r4, #56]	; 0x38
   1531c:	ldr	r4, [sp, #28]
   15320:	str	fp, [sp, #8]
   15324:	str	r4, [sp, #4]
   15328:	str	lr, [sp, #16]
   1532c:	str	r5, [sp, #12]
   15330:	str	ip, [sp]
   15334:	mov	r6, r0
   15338:	bl	11848 <abort@plt+0xb24>
   1533c:	ldr	r3, [sp, #24]
   15340:	mov	r0, r6
   15344:	str	r3, [r7]
   15348:	add	sp, sp, #44	; 0x2c
   1534c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15350:	mov	r3, #8
   15354:	str	r3, [sp]
   15358:	add	r1, sp, #36	; 0x24
   1535c:	rsb	r2, r2, #1
   15360:	mvn	r3, #-2147483648	; 0x80000000
   15364:	mov	r0, #0
   15368:	bl	16340 <abort@plt+0x561c>
   1536c:	mov	r5, r0
   15370:	ldm	r6, {r0, r1}
   15374:	str	r5, [r4]
   15378:	stm	r5, {r0, r1}
   1537c:	b	15264 <abort@plt+0x4540>
   15380:	ldrdeq	r8, [r2], -r0
   15384:	andeq	r8, r2, r8, ror #1
   15388:	andeq	r8, r2, ip, ror #2
   1538c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15390:	sub	sp, sp, #44	; 0x2c
   15394:	mov	r5, r0
   15398:	mov	sl, r1
   1539c:	bl	10c7c <__errno_location@plt>
   153a0:	ldr	r4, [pc, #396]	; 15534 <abort@plt+0x4810>
   153a4:	cmn	r5, #-2147483647	; 0x80000001
   153a8:	ldr	r6, [r4]
   153ac:	mov	r8, r0
   153b0:	movne	r0, #0
   153b4:	moveq	r0, #1
   153b8:	ldr	r3, [r8]
   153bc:	orrs	r0, r0, r5, lsr #31
   153c0:	str	r3, [sp, #24]
   153c4:	bne	15530 <abort@plt+0x480c>
   153c8:	ldr	r2, [r4, #4]
   153cc:	cmp	r5, r2
   153d0:	blt	15430 <abort@plt+0x470c>
   153d4:	add	r7, r4, #8
   153d8:	cmp	r6, r7
   153dc:	str	r2, [sp, #36]	; 0x24
   153e0:	beq	15500 <abort@plt+0x47dc>
   153e4:	mov	r3, #8
   153e8:	sub	r2, r5, r2
   153ec:	mov	r0, r6
   153f0:	str	r3, [sp]
   153f4:	add	r2, r2, #1
   153f8:	mvn	r3, #-2147483648	; 0x80000000
   153fc:	add	r1, sp, #36	; 0x24
   15400:	bl	16340 <abort@plt+0x561c>
   15404:	mov	r6, r0
   15408:	str	r0, [r4]
   1540c:	ldr	r0, [r4, #4]
   15410:	ldr	r2, [sp, #36]	; 0x24
   15414:	mov	r1, #0
   15418:	sub	r2, r2, r0
   1541c:	add	r0, r6, r0, lsl #3
   15420:	lsl	r2, r2, #3
   15424:	bl	10c94 <memset@plt>
   15428:	ldr	r3, [sp, #36]	; 0x24
   1542c:	str	r3, [r4, #4]
   15430:	ldr	r2, [r4, #56]	; 0x38
   15434:	add	fp, r6, r5, lsl #3
   15438:	ldr	r1, [r4, #20]
   1543c:	ldr	r9, [r6, r5, lsl #3]
   15440:	ldr	r7, [fp, #4]
   15444:	ldr	r3, [r4, #16]
   15448:	ldr	ip, [r4, #60]	; 0x3c
   1544c:	str	r2, [sp, #12]
   15450:	ldr	r2, [pc, #224]	; 15538 <abort@plt+0x4814>
   15454:	orr	r1, r1, #1
   15458:	str	r1, [sp, #28]
   1545c:	str	r1, [sp, #4]
   15460:	str	r2, [sp, #8]
   15464:	str	r3, [sp]
   15468:	mov	r0, r7
   1546c:	mov	r1, r9
   15470:	str	ip, [sp, #16]
   15474:	mvn	r3, #0
   15478:	mov	r2, sl
   1547c:	bl	11848 <abort@plt+0xb24>
   15480:	cmp	r9, r0
   15484:	bhi	154ec <abort@plt+0x47c8>
   15488:	ldr	r3, [pc, #172]	; 1553c <abort@plt+0x4818>
   1548c:	add	r9, r0, #1
   15490:	cmp	r7, r3
   15494:	str	r9, [r6, r5, lsl #3]
   15498:	beq	154a4 <abort@plt+0x4780>
   1549c:	mov	r0, r7
   154a0:	bl	1161c <abort@plt+0x8f8>
   154a4:	mov	r0, r9
   154a8:	bl	16124 <abort@plt+0x5400>
   154ac:	ldr	ip, [r4, #60]	; 0x3c
   154b0:	ldr	r3, [r4, #16]
   154b4:	ldr	lr, [r4, #56]	; 0x38
   154b8:	ldr	r4, [pc, #120]	; 15538 <abort@plt+0x4814>
   154bc:	mov	r2, sl
   154c0:	mov	r1, r9
   154c4:	str	r0, [fp, #4]
   154c8:	str	r4, [sp, #8]
   154cc:	ldr	r4, [sp, #28]
   154d0:	str	r3, [sp]
   154d4:	str	r4, [sp, #4]
   154d8:	str	ip, [sp, #16]
   154dc:	str	lr, [sp, #12]
   154e0:	mvn	r3, #0
   154e4:	mov	r7, r0
   154e8:	bl	11848 <abort@plt+0xb24>
   154ec:	ldr	r3, [sp, #24]
   154f0:	mov	r0, r7
   154f4:	str	r3, [r8]
   154f8:	add	sp, sp, #44	; 0x2c
   154fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15500:	mov	r3, #8
   15504:	sub	r2, r5, r2
   15508:	str	r3, [sp]
   1550c:	add	r1, sp, #36	; 0x24
   15510:	add	r2, r2, #1
   15514:	mvn	r3, #-2147483648	; 0x80000000
   15518:	bl	16340 <abort@plt+0x561c>
   1551c:	mov	r6, r0
   15520:	ldm	r7, {r0, r1}
   15524:	str	r6, [r4]
   15528:	stm	r6, {r0, r1}
   1552c:	b	1540c <abort@plt+0x46e8>
   15530:	bl	10d24 <abort@plt>
   15534:	ldrdeq	r8, [r2], -r0
   15538:	andeq	r8, r2, r8, ror #1
   1553c:	andeq	r8, r2, ip, ror #2
   15540:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15544:	sub	sp, sp, #44	; 0x2c
   15548:	mov	sl, r0
   1554c:	bl	10c7c <__errno_location@plt>
   15550:	ldr	r4, [pc, #348]	; 156b4 <abort@plt+0x4990>
   15554:	ldr	r2, [r4, #4]
   15558:	ldr	r5, [r4]
   1555c:	cmp	r2, #0
   15560:	ldr	r3, [r0]
   15564:	mov	r8, r0
   15568:	str	r3, [sp, #28]
   1556c:	bgt	155c8 <abort@plt+0x48a4>
   15570:	add	r6, r4, #8
   15574:	cmp	r5, r6
   15578:	str	r2, [sp, #36]	; 0x24
   1557c:	beq	15684 <abort@plt+0x4960>
   15580:	mov	r3, #8
   15584:	mov	r0, r5
   15588:	str	r3, [sp]
   1558c:	rsb	r2, r2, #1
   15590:	mvn	r3, #-2147483648	; 0x80000000
   15594:	add	r1, sp, #36	; 0x24
   15598:	bl	16340 <abort@plt+0x561c>
   1559c:	mov	r5, r0
   155a0:	str	r0, [r4]
   155a4:	ldr	r0, [r4, #4]
   155a8:	ldr	r2, [sp, #36]	; 0x24
   155ac:	mov	r1, #0
   155b0:	sub	r2, r2, r0
   155b4:	add	r0, r5, r0, lsl #3
   155b8:	lsl	r2, r2, #3
   155bc:	bl	10c94 <memset@plt>
   155c0:	ldr	r3, [sp, #36]	; 0x24
   155c4:	str	r3, [r4, #4]
   155c8:	ldr	r7, [r4, #20]
   155cc:	ldr	r9, [r5]
   155d0:	ldr	r6, [r5, #4]
   155d4:	ldr	r2, [r4, #56]	; 0x38
   155d8:	ldr	r3, [r4, #16]
   155dc:	ldr	ip, [r4, #60]	; 0x3c
   155e0:	ldr	fp, [pc, #208]	; 156b8 <abort@plt+0x4994>
   155e4:	orr	r7, r7, #1
   155e8:	str	r2, [sp, #12]
   155ec:	str	r3, [sp]
   155f0:	str	r7, [sp, #4]
   155f4:	mov	r1, r9
   155f8:	mov	r0, r6
   155fc:	str	ip, [sp, #16]
   15600:	str	fp, [sp, #8]
   15604:	mvn	r3, #0
   15608:	mov	r2, sl
   1560c:	bl	11848 <abort@plt+0xb24>
   15610:	cmp	r9, r0
   15614:	bhi	15670 <abort@plt+0x494c>
   15618:	ldr	r3, [pc, #156]	; 156bc <abort@plt+0x4998>
   1561c:	add	r9, r0, #1
   15620:	cmp	r6, r3
   15624:	str	r9, [r5]
   15628:	beq	15634 <abort@plt+0x4910>
   1562c:	mov	r0, r6
   15630:	bl	1161c <abort@plt+0x8f8>
   15634:	mov	r0, r9
   15638:	bl	16124 <abort@plt+0x5400>
   1563c:	ldr	ip, [r4, #60]	; 0x3c
   15640:	ldr	r3, [r4, #16]
   15644:	ldr	lr, [r4, #56]	; 0x38
   15648:	mov	r2, sl
   1564c:	mov	r1, r9
   15650:	str	r0, [r5, #4]
   15654:	str	r3, [sp]
   15658:	stmib	sp, {r7, fp}
   1565c:	str	ip, [sp, #16]
   15660:	str	lr, [sp, #12]
   15664:	mvn	r3, #0
   15668:	mov	r6, r0
   1566c:	bl	11848 <abort@plt+0xb24>
   15670:	ldr	r3, [sp, #28]
   15674:	mov	r0, r6
   15678:	str	r3, [r8]
   1567c:	add	sp, sp, #44	; 0x2c
   15680:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15684:	mov	r3, #8
   15688:	str	r3, [sp]
   1568c:	add	r1, sp, #36	; 0x24
   15690:	rsb	r2, r2, #1
   15694:	mvn	r3, #-2147483648	; 0x80000000
   15698:	mov	r0, #0
   1569c:	bl	16340 <abort@plt+0x561c>
   156a0:	mov	r5, r0
   156a4:	ldm	r6, {r0, r1}
   156a8:	str	r5, [r4]
   156ac:	stm	r5, {r0, r1}
   156b0:	b	155a4 <abort@plt+0x4880>
   156b4:	ldrdeq	r8, [r2], -r0
   156b8:	andeq	r8, r2, r8, ror #1
   156bc:	andeq	r8, r2, ip, ror #2
   156c0:	push	{r4, r5, r6, lr}
   156c4:	sub	sp, sp, #32
   156c8:	cmp	r1, #0
   156cc:	mov	r4, r0
   156d0:	ldr	r5, [sp, #48]	; 0x30
   156d4:	ldr	r6, [sp, #52]	; 0x34
   156d8:	beq	159f0 <abort@plt+0x4ccc>
   156dc:	stm	sp, {r2, r3}
   156e0:	mov	r3, r1
   156e4:	ldr	r2, [pc, #808]	; 15a14 <abort@plt+0x4cf0>
   156e8:	mov	r1, #1
   156ec:	bl	10cb8 <__fprintf_chk@plt>
   156f0:	mov	r2, #5
   156f4:	ldr	r1, [pc, #796]	; 15a18 <abort@plt+0x4cf4>
   156f8:	mov	r0, #0
   156fc:	bl	10ba4 <dcgettext@plt>
   15700:	ldr	r3, [pc, #788]	; 15a1c <abort@plt+0x4cf8>
   15704:	ldr	r2, [pc, #788]	; 15a20 <abort@plt+0x4cfc>
   15708:	str	r3, [sp]
   1570c:	mov	r1, #1
   15710:	mov	r3, r0
   15714:	mov	r0, r4
   15718:	bl	10cb8 <__fprintf_chk@plt>
   1571c:	mov	r1, r4
   15720:	mov	r0, #10
   15724:	bl	10b98 <fputc_unlocked@plt>
   15728:	mov	r2, #5
   1572c:	ldr	r1, [pc, #752]	; 15a24 <abort@plt+0x4d00>
   15730:	mov	r0, #0
   15734:	bl	10ba4 <dcgettext@plt>
   15738:	mov	r1, #1
   1573c:	ldr	r3, [pc, #740]	; 15a28 <abort@plt+0x4d04>
   15740:	mov	r2, r0
   15744:	mov	r0, r4
   15748:	bl	10cb8 <__fprintf_chk@plt>
   1574c:	mov	r1, r4
   15750:	mov	r0, #10
   15754:	bl	10b98 <fputc_unlocked@plt>
   15758:	cmp	r6, #9
   1575c:	ldrls	pc, [pc, r6, lsl #2]
   15760:	b	15a08 <abort@plt+0x4ce4>
   15764:	andeq	r5, r1, r8, ror #15
   15768:	strdeq	r5, [r1], -r0
   1576c:	andeq	r5, r1, ip, lsl r8
   15770:	andeq	r5, r1, r0, asr r8
   15774:	andeq	r5, r1, ip, lsl #17
   15778:	andeq	r5, r1, r8, asr #17
   1577c:	andeq	r5, r1, r4, lsl #18
   15780:	andeq	r5, r1, r8, asr #18
   15784:	muleq	r1, r8, r9
   15788:	andeq	r5, r1, ip, lsl #15
   1578c:	ldr	r1, [pc, #664]	; 15a2c <abort@plt+0x4d08>
   15790:	mov	r2, #5
   15794:	mov	r0, #0
   15798:	bl	10ba4 <dcgettext@plt>
   1579c:	ldr	ip, [r5, #32]
   157a0:	ldr	r1, [r5, #28]
   157a4:	ldr	r2, [r5, #24]
   157a8:	ldr	r3, [r5]
   157ac:	ldr	r6, [r5, #20]
   157b0:	str	ip, [sp, #28]
   157b4:	ldr	lr, [r5, #16]
   157b8:	str	r1, [sp, #24]
   157bc:	ldr	ip, [r5, #12]
   157c0:	str	r2, [sp, #20]
   157c4:	ldr	r1, [r5, #8]
   157c8:	ldr	r2, [r5, #4]
   157cc:	str	r6, [sp, #16]
   157d0:	stmib	sp, {r1, ip, lr}
   157d4:	mov	r1, #1
   157d8:	str	r2, [sp]
   157dc:	mov	r2, r0
   157e0:	mov	r0, r4
   157e4:	bl	10cb8 <__fprintf_chk@plt>
   157e8:	add	sp, sp, #32
   157ec:	pop	{r4, r5, r6, pc}
   157f0:	mov	r2, #5
   157f4:	ldr	r1, [pc, #564]	; 15a30 <abort@plt+0x4d0c>
   157f8:	mov	r0, #0
   157fc:	bl	10ba4 <dcgettext@plt>
   15800:	ldr	r3, [r5]
   15804:	mov	r1, #1
   15808:	mov	r2, r0
   1580c:	mov	r0, r4
   15810:	add	sp, sp, #32
   15814:	pop	{r4, r5, r6, lr}
   15818:	b	10cb8 <__fprintf_chk@plt>
   1581c:	mov	r2, #5
   15820:	ldr	r1, [pc, #524]	; 15a34 <abort@plt+0x4d10>
   15824:	mov	r0, #0
   15828:	bl	10ba4 <dcgettext@plt>
   1582c:	ldr	r2, [r5, #4]
   15830:	ldr	r3, [r5]
   15834:	mov	r1, #1
   15838:	str	r2, [sp, #48]	; 0x30
   1583c:	mov	r2, r0
   15840:	mov	r0, r4
   15844:	add	sp, sp, #32
   15848:	pop	{r4, r5, r6, lr}
   1584c:	b	10cb8 <__fprintf_chk@plt>
   15850:	mov	r2, #5
   15854:	ldr	r1, [pc, #476]	; 15a38 <abort@plt+0x4d14>
   15858:	mov	r0, #0
   1585c:	bl	10ba4 <dcgettext@plt>
   15860:	ldr	r1, [r5, #8]
   15864:	ldr	r2, [r5, #4]
   15868:	ldr	r3, [r5]
   1586c:	str	r1, [sp, #52]	; 0x34
   15870:	str	r2, [sp, #48]	; 0x30
   15874:	mov	r1, #1
   15878:	mov	r2, r0
   1587c:	mov	r0, r4
   15880:	add	sp, sp, #32
   15884:	pop	{r4, r5, r6, lr}
   15888:	b	10cb8 <__fprintf_chk@plt>
   1588c:	mov	r2, #5
   15890:	ldr	r1, [pc, #420]	; 15a3c <abort@plt+0x4d18>
   15894:	mov	r0, #0
   15898:	bl	10ba4 <dcgettext@plt>
   1589c:	ldr	r1, [r5, #8]
   158a0:	ldr	ip, [r5, #12]
   158a4:	ldr	r2, [r5, #4]
   158a8:	ldr	r3, [r5]
   158ac:	stmib	sp, {r1, ip}
   158b0:	str	r2, [sp]
   158b4:	mov	r1, #1
   158b8:	mov	r2, r0
   158bc:	mov	r0, r4
   158c0:	bl	10cb8 <__fprintf_chk@plt>
   158c4:	b	157e8 <abort@plt+0x4ac4>
   158c8:	mov	r2, #5
   158cc:	ldr	r1, [pc, #364]	; 15a40 <abort@plt+0x4d1c>
   158d0:	mov	r0, #0
   158d4:	bl	10ba4 <dcgettext@plt>
   158d8:	add	r1, r5, #8
   158dc:	ldr	r2, [r5, #4]
   158e0:	ldm	r1, {r1, ip, lr}
   158e4:	ldr	r3, [r5]
   158e8:	str	r2, [sp]
   158ec:	stmib	sp, {r1, ip, lr}
   158f0:	mov	r1, #1
   158f4:	mov	r2, r0
   158f8:	mov	r0, r4
   158fc:	bl	10cb8 <__fprintf_chk@plt>
   15900:	b	157e8 <abort@plt+0x4ac4>
   15904:	mov	r2, #5
   15908:	ldr	r1, [pc, #308]	; 15a44 <abort@plt+0x4d20>
   1590c:	mov	r0, #0
   15910:	bl	10ba4 <dcgettext@plt>
   15914:	add	r1, r5, #8
   15918:	ldr	r2, [r5, #4]
   1591c:	ldm	r1, {r1, ip, lr}
   15920:	ldr	r6, [r5, #20]
   15924:	ldr	r3, [r5]
   15928:	stmib	sp, {r1, ip, lr}
   1592c:	mov	r1, #1
   15930:	str	r2, [sp]
   15934:	str	r6, [sp, #16]
   15938:	mov	r2, r0
   1593c:	mov	r0, r4
   15940:	bl	10cb8 <__fprintf_chk@plt>
   15944:	b	157e8 <abort@plt+0x4ac4>
   15948:	mov	r2, #5
   1594c:	ldr	r1, [pc, #244]	; 15a48 <abort@plt+0x4d24>
   15950:	mov	r0, #0
   15954:	bl	10ba4 <dcgettext@plt>
   15958:	ldr	r2, [r5, #24]
   1595c:	ldr	r3, [r5]
   15960:	ldr	r6, [r5, #20]
   15964:	ldr	lr, [r5, #16]
   15968:	ldr	ip, [r5, #12]
   1596c:	str	r2, [sp, #20]
   15970:	ldr	r1, [r5, #8]
   15974:	ldr	r2, [r5, #4]
   15978:	str	r6, [sp, #16]
   1597c:	stmib	sp, {r1, ip, lr}
   15980:	mov	r1, #1
   15984:	str	r2, [sp]
   15988:	mov	r2, r0
   1598c:	mov	r0, r4
   15990:	bl	10cb8 <__fprintf_chk@plt>
   15994:	b	157e8 <abort@plt+0x4ac4>
   15998:	mov	r2, #5
   1599c:	ldr	r1, [pc, #168]	; 15a4c <abort@plt+0x4d28>
   159a0:	mov	r0, #0
   159a4:	bl	10ba4 <dcgettext@plt>
   159a8:	ldr	r1, [r5, #28]
   159ac:	ldr	r2, [r5, #24]
   159b0:	ldr	r3, [r5]
   159b4:	ldr	r6, [r5, #20]
   159b8:	ldr	lr, [r5, #16]
   159bc:	str	r1, [sp, #24]
   159c0:	ldr	ip, [r5, #12]
   159c4:	str	r2, [sp, #20]
   159c8:	ldr	r1, [r5, #8]
   159cc:	ldr	r2, [r5, #4]
   159d0:	str	r6, [sp, #16]
   159d4:	stmib	sp, {r1, ip, lr}
   159d8:	mov	r1, #1
   159dc:	str	r2, [sp]
   159e0:	mov	r2, r0
   159e4:	mov	r0, r4
   159e8:	bl	10cb8 <__fprintf_chk@plt>
   159ec:	b	157e8 <abort@plt+0x4ac4>
   159f0:	str	r3, [sp]
   159f4:	mov	r1, #1
   159f8:	mov	r3, r2
   159fc:	ldr	r2, [pc, #76]	; 15a50 <abort@plt+0x4d2c>
   15a00:	bl	10cb8 <__fprintf_chk@plt>
   15a04:	b	156f0 <abort@plt+0x49cc>
   15a08:	mov	r2, #5
   15a0c:	ldr	r1, [pc, #64]	; 15a54 <abort@plt+0x4d30>
   15a10:	b	15794 <abort@plt+0x4a70>
   15a14:	andeq	r7, r1, r8, lsl #17
   15a18:	muleq	r1, ip, r8
   15a1c:	andeq	r0, r0, r6, ror #15
   15a20:	andeq	r7, r1, r4, ror fp
   15a24:	andeq	r7, r1, r0, lsr #17
   15a28:	andeq	r7, r1, ip, asr #18
   15a2c:	andeq	r7, r1, ip, ror sl
   15a30:	andeq	r7, r1, r0, ror r9
   15a34:	andeq	r7, r1, r0, lsl #19
   15a38:	muleq	r1, r8, r9
   15a3c:			; <UNDEFINED> instruction: 0x000179b4
   15a40:	ldrdeq	r7, [r1], -r4
   15a44:	strdeq	r7, [r1], -r8
   15a48:	andeq	r7, r1, r0, lsr #20
   15a4c:	andeq	r7, r1, ip, asr #20
   15a50:	muleq	r1, r4, r8
   15a54:			; <UNDEFINED> instruction: 0x00017ab0
   15a58:	push	{r4, r5, lr}
   15a5c:	sub	sp, sp, #12
   15a60:	ldr	r5, [sp, #24]
   15a64:	ldr	ip, [r5]
   15a68:	cmp	ip, #0
   15a6c:	beq	15a88 <abort@plt+0x4d64>
   15a70:	mov	lr, r5
   15a74:	mov	ip, #0
   15a78:	ldr	r4, [lr, #4]!
   15a7c:	add	ip, ip, #1
   15a80:	cmp	r4, #0
   15a84:	bne	15a78 <abort@plt+0x4d54>
   15a88:	stm	sp, {r5, ip}
   15a8c:	bl	156c0 <abort@plt+0x499c>
   15a90:	add	sp, sp, #12
   15a94:	pop	{r4, r5, pc}
   15a98:	push	{r4, r5, lr}
   15a9c:	sub	sp, sp, #76	; 0x4c
   15aa0:	mov	r5, r0
   15aa4:	ldr	ip, [sp, #88]	; 0x58
   15aa8:	ldr	r0, [ip]
   15aac:	cmp	r0, #0
   15ab0:	str	r0, [sp, #32]
   15ab4:	beq	15e88 <abort@plt+0x5164>
   15ab8:	ldr	r0, [ip, #4]
   15abc:	cmp	r0, #0
   15ac0:	str	r0, [sp, #36]	; 0x24
   15ac4:	beq	15e90 <abort@plt+0x516c>
   15ac8:	ldr	r0, [ip, #8]
   15acc:	cmp	r0, #0
   15ad0:	str	r0, [sp, #40]	; 0x28
   15ad4:	beq	15e98 <abort@plt+0x5174>
   15ad8:	ldr	r0, [ip, #12]
   15adc:	cmp	r0, #0
   15ae0:	str	r0, [sp, #44]	; 0x2c
   15ae4:	beq	15ea0 <abort@plt+0x517c>
   15ae8:	ldr	r0, [ip, #16]
   15aec:	cmp	r0, #0
   15af0:	str	r0, [sp, #48]	; 0x30
   15af4:	beq	15ea8 <abort@plt+0x5184>
   15af8:	ldr	r0, [ip, #20]
   15afc:	cmp	r0, #0
   15b00:	str	r0, [sp, #52]	; 0x34
   15b04:	beq	15eb0 <abort@plt+0x518c>
   15b08:	ldr	r0, [ip, #24]
   15b0c:	cmp	r0, #0
   15b10:	str	r0, [sp, #56]	; 0x38
   15b14:	beq	15eb8 <abort@plt+0x5194>
   15b18:	ldr	r0, [ip, #28]
   15b1c:	cmp	r0, #0
   15b20:	str	r0, [sp, #60]	; 0x3c
   15b24:	beq	15ec0 <abort@plt+0x519c>
   15b28:	ldr	r0, [ip, #32]
   15b2c:	cmp	r0, #0
   15b30:	str	r0, [sp, #64]	; 0x40
   15b34:	beq	15ec8 <abort@plt+0x51a4>
   15b38:	ldr	r0, [ip, #36]	; 0x24
   15b3c:	cmp	r0, #0
   15b40:	movne	r4, #10
   15b44:	moveq	r4, #9
   15b48:	cmp	r1, #0
   15b4c:	beq	15e60 <abort@plt+0x513c>
   15b50:	stm	sp, {r2, r3}
   15b54:	mov	r0, r5
   15b58:	mov	r3, r1
   15b5c:	ldr	r2, [pc, #876]	; 15ed0 <abort@plt+0x51ac>
   15b60:	mov	r1, #1
   15b64:	bl	10cb8 <__fprintf_chk@plt>
   15b68:	mov	r2, #5
   15b6c:	ldr	r1, [pc, #864]	; 15ed4 <abort@plt+0x51b0>
   15b70:	mov	r0, #0
   15b74:	bl	10ba4 <dcgettext@plt>
   15b78:	ldr	r3, [pc, #856]	; 15ed8 <abort@plt+0x51b4>
   15b7c:	ldr	r2, [pc, #856]	; 15edc <abort@plt+0x51b8>
   15b80:	str	r3, [sp]
   15b84:	mov	r1, #1
   15b88:	mov	r3, r0
   15b8c:	mov	r0, r5
   15b90:	bl	10cb8 <__fprintf_chk@plt>
   15b94:	mov	r1, r5
   15b98:	mov	r0, #10
   15b9c:	bl	10b98 <fputc_unlocked@plt>
   15ba0:	mov	r2, #5
   15ba4:	ldr	r1, [pc, #820]	; 15ee0 <abort@plt+0x51bc>
   15ba8:	mov	r0, #0
   15bac:	bl	10ba4 <dcgettext@plt>
   15bb0:	mov	r1, #1
   15bb4:	ldr	r3, [pc, #808]	; 15ee4 <abort@plt+0x51c0>
   15bb8:	mov	r2, r0
   15bbc:	mov	r0, r5
   15bc0:	bl	10cb8 <__fprintf_chk@plt>
   15bc4:	mov	r1, r5
   15bc8:	mov	r0, #10
   15bcc:	bl	10b98 <fputc_unlocked@plt>
   15bd0:	cmp	r4, #9
   15bd4:	ldrls	pc, [pc, r4, lsl #2]
   15bd8:	b	15e7c <abort@plt+0x5158>
   15bdc:	andeq	r5, r1, r0, ror #24
   15be0:	andeq	r5, r1, r8, ror #24
   15be4:	muleq	r1, r4, ip
   15be8:	andeq	r5, r1, r8, asr #25
   15bec:	andeq	r5, r1, r0, lsl #26
   15bf0:	andeq	r5, r1, ip, lsr sp
   15bf4:	andeq	r5, r1, r8, ror sp
   15bf8:			; <UNDEFINED> instruction: 0x00015dbc
   15bfc:	andeq	r5, r1, r8, lsl #28
   15c00:	andeq	r5, r1, r4, lsl #24
   15c04:	ldr	r1, [pc, #732]	; 15ee8 <abort@plt+0x51c4>
   15c08:	mov	r2, #5
   15c0c:	mov	r0, #0
   15c10:	bl	10ba4 <dcgettext@plt>
   15c14:	ldr	ip, [sp, #64]	; 0x40
   15c18:	ldr	r1, [sp, #60]	; 0x3c
   15c1c:	ldr	r2, [sp, #56]	; 0x38
   15c20:	ldr	lr, [sp, #48]	; 0x30
   15c24:	str	ip, [sp, #28]
   15c28:	str	r1, [sp, #24]
   15c2c:	ldr	ip, [sp, #44]	; 0x2c
   15c30:	ldr	r1, [sp, #40]	; 0x28
   15c34:	ldr	r4, [sp, #52]	; 0x34
   15c38:	str	r2, [sp, #20]
   15c3c:	ldr	r2, [sp, #36]	; 0x24
   15c40:	stmib	sp, {r1, ip, lr}
   15c44:	mov	r1, #1
   15c48:	str	r2, [sp]
   15c4c:	ldr	r3, [sp, #32]
   15c50:	str	r4, [sp, #16]
   15c54:	mov	r2, r0
   15c58:	mov	r0, r5
   15c5c:	bl	10cb8 <__fprintf_chk@plt>
   15c60:	add	sp, sp, #76	; 0x4c
   15c64:	pop	{r4, r5, pc}
   15c68:	mov	r2, #5
   15c6c:	ldr	r1, [pc, #632]	; 15eec <abort@plt+0x51c8>
   15c70:	mov	r0, #0
   15c74:	bl	10ba4 <dcgettext@plt>
   15c78:	ldr	r3, [sp, #32]
   15c7c:	mov	r1, #1
   15c80:	mov	r2, r0
   15c84:	mov	r0, r5
   15c88:	add	sp, sp, #76	; 0x4c
   15c8c:	pop	{r4, r5, lr}
   15c90:	b	10cb8 <__fprintf_chk@plt>
   15c94:	mov	r2, #5
   15c98:	ldr	r1, [pc, #592]	; 15ef0 <abort@plt+0x51cc>
   15c9c:	mov	r0, #0
   15ca0:	bl	10ba4 <dcgettext@plt>
   15ca4:	ldr	r2, [sp, #36]	; 0x24
   15ca8:	ldr	r3, [sp, #32]
   15cac:	str	r2, [sp, #88]	; 0x58
   15cb0:	mov	r1, #1
   15cb4:	mov	r2, r0
   15cb8:	mov	r0, r5
   15cbc:	add	sp, sp, #76	; 0x4c
   15cc0:	pop	{r4, r5, lr}
   15cc4:	b	10cb8 <__fprintf_chk@plt>
   15cc8:	mov	r2, #5
   15ccc:	ldr	r1, [pc, #544]	; 15ef4 <abort@plt+0x51d0>
   15cd0:	mov	r0, #0
   15cd4:	bl	10ba4 <dcgettext@plt>
   15cd8:	ldr	r1, [sp, #40]	; 0x28
   15cdc:	ldr	r2, [sp, #36]	; 0x24
   15ce0:	str	r1, [sp, #4]
   15ce4:	str	r2, [sp]
   15ce8:	ldr	r3, [sp, #32]
   15cec:	mov	r1, #1
   15cf0:	mov	r2, r0
   15cf4:	mov	r0, r5
   15cf8:	bl	10cb8 <__fprintf_chk@plt>
   15cfc:	b	15c60 <abort@plt+0x4f3c>
   15d00:	mov	r2, #5
   15d04:	ldr	r1, [pc, #492]	; 15ef8 <abort@plt+0x51d4>
   15d08:	mov	r0, #0
   15d0c:	bl	10ba4 <dcgettext@plt>
   15d10:	ldr	r1, [sp, #40]	; 0x28
   15d14:	ldr	ip, [sp, #44]	; 0x2c
   15d18:	ldr	r2, [sp, #36]	; 0x24
   15d1c:	ldr	r3, [sp, #32]
   15d20:	stmib	sp, {r1, ip}
   15d24:	str	r2, [sp]
   15d28:	mov	r1, #1
   15d2c:	mov	r2, r0
   15d30:	mov	r0, r5
   15d34:	bl	10cb8 <__fprintf_chk@plt>
   15d38:	b	15c60 <abort@plt+0x4f3c>
   15d3c:	mov	r2, #5
   15d40:	ldr	r1, [pc, #436]	; 15efc <abort@plt+0x51d8>
   15d44:	mov	r0, #0
   15d48:	bl	10ba4 <dcgettext@plt>
   15d4c:	add	r1, sp, #40	; 0x28
   15d50:	ldr	r2, [sp, #36]	; 0x24
   15d54:	ldm	r1, {r1, ip, lr}
   15d58:	ldr	r3, [sp, #32]
   15d5c:	str	r2, [sp]
   15d60:	stmib	sp, {r1, ip, lr}
   15d64:	mov	r1, #1
   15d68:	mov	r2, r0
   15d6c:	mov	r0, r5
   15d70:	bl	10cb8 <__fprintf_chk@plt>
   15d74:	b	15c60 <abort@plt+0x4f3c>
   15d78:	mov	r2, #5
   15d7c:	ldr	r1, [pc, #380]	; 15f00 <abort@plt+0x51dc>
   15d80:	mov	r0, #0
   15d84:	bl	10ba4 <dcgettext@plt>
   15d88:	add	r1, sp, #40	; 0x28
   15d8c:	ldr	r2, [sp, #36]	; 0x24
   15d90:	ldm	r1, {r1, ip, lr}
   15d94:	ldr	r4, [sp, #52]	; 0x34
   15d98:	str	r2, [sp]
   15d9c:	stmib	sp, {r1, ip, lr}
   15da0:	mov	r1, #1
   15da4:	ldr	r3, [sp, #32]
   15da8:	str	r4, [sp, #16]
   15dac:	mov	r2, r0
   15db0:	mov	r0, r5
   15db4:	bl	10cb8 <__fprintf_chk@plt>
   15db8:	b	15c60 <abort@plt+0x4f3c>
   15dbc:	mov	r2, #5
   15dc0:	ldr	r1, [pc, #316]	; 15f04 <abort@plt+0x51e0>
   15dc4:	mov	r0, #0
   15dc8:	bl	10ba4 <dcgettext@plt>
   15dcc:	add	r1, sp, #40	; 0x28
   15dd0:	ldr	r2, [sp, #56]	; 0x38
   15dd4:	ldm	r1, {r1, ip, lr}
   15dd8:	ldr	r4, [sp, #52]	; 0x34
   15ddc:	str	r2, [sp, #20]
   15de0:	ldr	r2, [sp, #36]	; 0x24
   15de4:	stmib	sp, {r1, ip, lr}
   15de8:	mov	r1, #1
   15dec:	str	r2, [sp]
   15df0:	ldr	r3, [sp, #32]
   15df4:	str	r4, [sp, #16]
   15df8:	mov	r2, r0
   15dfc:	mov	r0, r5
   15e00:	bl	10cb8 <__fprintf_chk@plt>
   15e04:	b	15c60 <abort@plt+0x4f3c>
   15e08:	mov	r2, #5
   15e0c:	ldr	r1, [pc, #244]	; 15f08 <abort@plt+0x51e4>
   15e10:	mov	r0, #0
   15e14:	bl	10ba4 <dcgettext@plt>
   15e18:	ldr	r1, [sp, #60]	; 0x3c
   15e1c:	ldr	r2, [sp, #56]	; 0x38
   15e20:	ldr	lr, [sp, #48]	; 0x30
   15e24:	ldr	ip, [sp, #44]	; 0x2c
   15e28:	str	r1, [sp, #24]
   15e2c:	ldr	r1, [sp, #40]	; 0x28
   15e30:	ldr	r4, [sp, #52]	; 0x34
   15e34:	str	r2, [sp, #20]
   15e38:	ldr	r2, [sp, #36]	; 0x24
   15e3c:	stmib	sp, {r1, ip, lr}
   15e40:	mov	r1, #1
   15e44:	str	r2, [sp]
   15e48:	ldr	r3, [sp, #32]
   15e4c:	str	r4, [sp, #16]
   15e50:	mov	r2, r0
   15e54:	mov	r0, r5
   15e58:	bl	10cb8 <__fprintf_chk@plt>
   15e5c:	b	15c60 <abort@plt+0x4f3c>
   15e60:	str	r3, [sp]
   15e64:	mov	r1, #1
   15e68:	mov	r3, r2
   15e6c:	mov	r0, r5
   15e70:	ldr	r2, [pc, #148]	; 15f0c <abort@plt+0x51e8>
   15e74:	bl	10cb8 <__fprintf_chk@plt>
   15e78:	b	15b68 <abort@plt+0x4e44>
   15e7c:	mov	r2, #5
   15e80:	ldr	r1, [pc, #136]	; 15f10 <abort@plt+0x51ec>
   15e84:	b	15c0c <abort@plt+0x4ee8>
   15e88:	mov	r4, r0
   15e8c:	b	15b48 <abort@plt+0x4e24>
   15e90:	mov	r4, #1
   15e94:	b	15b48 <abort@plt+0x4e24>
   15e98:	mov	r4, #2
   15e9c:	b	15b48 <abort@plt+0x4e24>
   15ea0:	mov	r4, #3
   15ea4:	b	15b48 <abort@plt+0x4e24>
   15ea8:	mov	r4, #4
   15eac:	b	15b48 <abort@plt+0x4e24>
   15eb0:	mov	r4, #5
   15eb4:	b	15b48 <abort@plt+0x4e24>
   15eb8:	mov	r4, #6
   15ebc:	b	15b48 <abort@plt+0x4e24>
   15ec0:	mov	r4, #7
   15ec4:	b	15b48 <abort@plt+0x4e24>
   15ec8:	mov	r4, #8
   15ecc:	b	15b48 <abort@plt+0x4e24>
   15ed0:	andeq	r7, r1, r8, lsl #17
   15ed4:	muleq	r1, ip, r8
   15ed8:	andeq	r0, r0, r6, ror #15
   15edc:	andeq	r7, r1, r4, ror fp
   15ee0:	andeq	r7, r1, r0, lsr #17
   15ee4:	andeq	r7, r1, ip, asr #18
   15ee8:	andeq	r7, r1, ip, ror sl
   15eec:	andeq	r7, r1, r0, ror r9
   15ef0:	andeq	r7, r1, r0, lsl #19
   15ef4:	muleq	r1, r8, r9
   15ef8:			; <UNDEFINED> instruction: 0x000179b4
   15efc:	ldrdeq	r7, [r1], -r4
   15f00:	strdeq	r7, [r1], -r8
   15f04:	andeq	r7, r1, r0, lsr #20
   15f08:	andeq	r7, r1, ip, asr #20
   15f0c:	muleq	r1, r4, r8
   15f10:			; <UNDEFINED> instruction: 0x00017ab0
   15f14:	push	{r3}		; (str r3, [sp, #-4]!)
   15f18:	push	{lr}		; (str lr, [sp, #-4]!)
   15f1c:	sub	sp, sp, #56	; 0x38
   15f20:	add	r3, sp, #64	; 0x40
   15f24:	ldr	ip, [sp, #64]	; 0x40
   15f28:	str	r3, [sp, #12]
   15f2c:	cmp	ip, #0
   15f30:	str	ip, [sp, #16]
   15f34:	beq	15fcc <abort@plt+0x52a8>
   15f38:	ldr	ip, [sp, #68]	; 0x44
   15f3c:	cmp	ip, #0
   15f40:	str	ip, [sp, #20]
   15f44:	beq	15fec <abort@plt+0x52c8>
   15f48:	ldr	ip, [sp, #72]	; 0x48
   15f4c:	cmp	ip, #0
   15f50:	str	ip, [sp, #24]
   15f54:	beq	15ff4 <abort@plt+0x52d0>
   15f58:	ldr	ip, [sp, #76]	; 0x4c
   15f5c:	cmp	ip, #0
   15f60:	str	ip, [sp, #28]
   15f64:	beq	15ffc <abort@plt+0x52d8>
   15f68:	ldr	ip, [sp, #80]	; 0x50
   15f6c:	cmp	ip, #0
   15f70:	str	ip, [sp, #32]
   15f74:	beq	16004 <abort@plt+0x52e0>
   15f78:	ldr	ip, [sp, #84]	; 0x54
   15f7c:	cmp	ip, #0
   15f80:	str	ip, [sp, #36]	; 0x24
   15f84:	beq	1600c <abort@plt+0x52e8>
   15f88:	ldr	ip, [sp, #88]	; 0x58
   15f8c:	cmp	ip, #0
   15f90:	str	ip, [sp, #40]	; 0x28
   15f94:	beq	16014 <abort@plt+0x52f0>
   15f98:	ldr	ip, [sp, #92]	; 0x5c
   15f9c:	cmp	ip, #0
   15fa0:	str	ip, [sp, #44]	; 0x2c
   15fa4:	beq	1601c <abort@plt+0x52f8>
   15fa8:	ldr	ip, [sp, #96]	; 0x60
   15fac:	cmp	ip, #0
   15fb0:	str	ip, [sp, #48]	; 0x30
   15fb4:	beq	16024 <abort@plt+0x5300>
   15fb8:	ldr	ip, [sp, #100]	; 0x64
   15fbc:	cmp	ip, #0
   15fc0:	str	ip, [sp, #52]	; 0x34
   15fc4:	movne	ip, #10
   15fc8:	moveq	ip, #9
   15fcc:	add	r3, sp, #16
   15fd0:	stm	sp, {r3, ip}
   15fd4:	ldr	r3, [sp, #60]	; 0x3c
   15fd8:	bl	156c0 <abort@plt+0x499c>
   15fdc:	add	sp, sp, #56	; 0x38
   15fe0:	pop	{lr}		; (ldr lr, [sp], #4)
   15fe4:	add	sp, sp, #4
   15fe8:	bx	lr
   15fec:	mov	ip, #1
   15ff0:	b	15fcc <abort@plt+0x52a8>
   15ff4:	mov	ip, #2
   15ff8:	b	15fcc <abort@plt+0x52a8>
   15ffc:	mov	ip, #3
   16000:	b	15fcc <abort@plt+0x52a8>
   16004:	mov	ip, #4
   16008:	b	15fcc <abort@plt+0x52a8>
   1600c:	mov	ip, #5
   16010:	b	15fcc <abort@plt+0x52a8>
   16014:	mov	ip, #6
   16018:	b	15fcc <abort@plt+0x52a8>
   1601c:	mov	ip, #7
   16020:	b	15fcc <abort@plt+0x52a8>
   16024:	mov	ip, #8
   16028:	b	15fcc <abort@plt+0x52a8>
   1602c:	ldr	r3, [pc, #116]	; 160a8 <abort@plt+0x5384>
   16030:	push	{r4, lr}
   16034:	mov	r0, #10
   16038:	ldr	r1, [r3]
   1603c:	bl	10b98 <fputc_unlocked@plt>
   16040:	mov	r2, #5
   16044:	ldr	r1, [pc, #96]	; 160ac <abort@plt+0x5388>
   16048:	mov	r0, #0
   1604c:	bl	10ba4 <dcgettext@plt>
   16050:	ldr	r2, [pc, #88]	; 160b0 <abort@plt+0x538c>
   16054:	mov	r1, r0
   16058:	mov	r0, #1
   1605c:	bl	10ca0 <__printf_chk@plt>
   16060:	mov	r2, #5
   16064:	ldr	r1, [pc, #72]	; 160b4 <abort@plt+0x5390>
   16068:	mov	r0, #0
   1606c:	bl	10ba4 <dcgettext@plt>
   16070:	ldr	r3, [pc, #64]	; 160b8 <abort@plt+0x5394>
   16074:	ldr	r2, [pc, #64]	; 160bc <abort@plt+0x5398>
   16078:	mov	r1, r0
   1607c:	mov	r0, #1
   16080:	bl	10ca0 <__printf_chk@plt>
   16084:	mov	r2, #5
   16088:	ldr	r1, [pc, #48]	; 160c0 <abort@plt+0x539c>
   1608c:	mov	r0, #0
   16090:	bl	10ba4 <dcgettext@plt>
   16094:	ldr	r2, [pc, #40]	; 160c4 <abort@plt+0x53a0>
   16098:	pop	{r4, lr}
   1609c:	mov	r1, r0
   160a0:	mov	r0, #1
   160a4:	b	10ca0 <__printf_chk@plt>
   160a8:	andeq	r8, r2, r4, lsr #2
   160ac:	andeq	r7, r1, ip, ror #21
   160b0:	andeq	r7, r1, r0, lsl #22
   160b4:	andeq	r7, r1, r8, lsl fp
   160b8:	andeq	r7, r1, r8, lsl #11
   160bc:			; <UNDEFINED> instruction: 0x000175b0
   160c0:	andeq	r7, r1, ip, lsr #22
   160c4:	andeq	r7, r1, r4, asr fp
   160c8:	push	{r4, r5, r6, lr}
   160cc:	mov	r6, r0
   160d0:	mov	r5, r1
   160d4:	mov	r4, r2
   160d8:	bl	16ba4 <abort@plt+0x5e80>
   160dc:	cmp	r0, #0
   160e0:	popne	{r4, r5, r6, pc}
   160e4:	cmp	r6, #0
   160e8:	beq	160f8 <abort@plt+0x53d4>
   160ec:	cmp	r5, #0
   160f0:	cmpne	r4, #0
   160f4:	popeq	{r4, r5, r6, pc}
   160f8:	bl	16744 <abort@plt+0x5a20>
   160fc:	push	{r4, lr}
   16100:	bl	167cc <abort@plt+0x5aa8>
   16104:	cmp	r0, #0
   16108:	popne	{r4, pc}
   1610c:	bl	16744 <abort@plt+0x5a20>
   16110:	push	{r4, lr}
   16114:	bl	167cc <abort@plt+0x5aa8>
   16118:	cmp	r0, #0
   1611c:	popne	{r4, pc}
   16120:	bl	16744 <abort@plt+0x5a20>
   16124:	push	{r4, lr}
   16128:	bl	167cc <abort@plt+0x5aa8>
   1612c:	cmp	r0, #0
   16130:	popne	{r4, pc}
   16134:	bl	16744 <abort@plt+0x5a20>
   16138:	push	{r4, r5, r6, lr}
   1613c:	mov	r5, r0
   16140:	mov	r4, r1
   16144:	bl	167f8 <abort@plt+0x5ad4>
   16148:	cmp	r0, #0
   1614c:	popne	{r4, r5, r6, pc}
   16150:	adds	r4, r4, #0
   16154:	movne	r4, #1
   16158:	cmp	r5, #0
   1615c:	orreq	r4, r4, #1
   16160:	cmp	r4, #0
   16164:	popeq	{r4, r5, r6, pc}
   16168:	bl	16744 <abort@plt+0x5a20>
   1616c:	push	{r4, lr}
   16170:	cmp	r1, #0
   16174:	orreq	r1, r1, #1
   16178:	bl	167f8 <abort@plt+0x5ad4>
   1617c:	cmp	r0, #0
   16180:	popne	{r4, pc}
   16184:	bl	16744 <abort@plt+0x5a20>
   16188:	push	{r4, r5, r6, lr}
   1618c:	mov	r6, r0
   16190:	mov	r5, r1
   16194:	mov	r4, r2
   16198:	bl	16ba4 <abort@plt+0x5e80>
   1619c:	cmp	r0, #0
   161a0:	popne	{r4, r5, r6, pc}
   161a4:	cmp	r6, #0
   161a8:	beq	161b8 <abort@plt+0x5494>
   161ac:	cmp	r5, #0
   161b0:	cmpne	r4, #0
   161b4:	popeq	{r4, r5, r6, pc}
   161b8:	bl	16744 <abort@plt+0x5a20>
   161bc:	cmp	r2, #0
   161c0:	cmpne	r1, #0
   161c4:	moveq	r2, #1
   161c8:	moveq	r1, r2
   161cc:	push	{r4, lr}
   161d0:	bl	16ba4 <abort@plt+0x5e80>
   161d4:	cmp	r0, #0
   161d8:	popne	{r4, pc}
   161dc:	bl	16744 <abort@plt+0x5a20>
   161e0:	push	{r4, lr}
   161e4:	mov	r2, r1
   161e8:	mov	r1, r0
   161ec:	mov	r0, #0
   161f0:	bl	16ba4 <abort@plt+0x5e80>
   161f4:	cmp	r0, #0
   161f8:	popne	{r4, pc}
   161fc:	bl	16744 <abort@plt+0x5a20>
   16200:	cmp	r1, #0
   16204:	cmpne	r0, #0
   16208:	moveq	r2, #1
   1620c:	movne	r2, r1
   16210:	moveq	r1, r2
   16214:	movne	r1, r0
   16218:	push	{r4, lr}
   1621c:	mov	r0, #0
   16220:	bl	16ba4 <abort@plt+0x5e80>
   16224:	cmp	r0, #0
   16228:	popne	{r4, pc}
   1622c:	bl	16744 <abort@plt+0x5a20>
   16230:	cmp	r0, #0
   16234:	push	{r4, r5, r6, lr}
   16238:	mov	r5, r1
   1623c:	ldr	r4, [r1]
   16240:	beq	1627c <abort@plt+0x5558>
   16244:	lsr	r2, r4, #1
   16248:	add	r3, r2, #1
   1624c:	mvn	r3, r3
   16250:	cmp	r4, r3
   16254:	bhi	16298 <abort@plt+0x5574>
   16258:	add	r4, r4, #1
   1625c:	add	r4, r4, r2
   16260:	mov	r1, r4
   16264:	mov	r2, #1
   16268:	bl	16ba4 <abort@plt+0x5e80>
   1626c:	cmp	r0, #0
   16270:	beq	1629c <abort@plt+0x5578>
   16274:	str	r4, [r5]
   16278:	pop	{r4, r5, r6, pc}
   1627c:	cmp	r4, #0
   16280:	moveq	r4, #64	; 0x40
   16284:	mov	r1, r4
   16288:	mov	r2, #1
   1628c:	bl	16ba4 <abort@plt+0x5e80>
   16290:	cmp	r0, #0
   16294:	bne	16274 <abort@plt+0x5550>
   16298:	bl	16744 <abort@plt+0x5a20>
   1629c:	cmp	r4, #0
   162a0:	bne	16298 <abort@plt+0x5574>
   162a4:	str	r4, [r5]
   162a8:	pop	{r4, r5, r6, pc}
   162ac:	cmp	r0, #0
   162b0:	push	{r4, r5, r6, lr}
   162b4:	mov	r5, r1
   162b8:	ldr	r4, [r1]
   162bc:	mov	r6, r2
   162c0:	beq	16304 <abort@plt+0x55e0>
   162c4:	lsr	r1, r4, #1
   162c8:	add	r3, r1, #1
   162cc:	mvn	r3, r3
   162d0:	cmp	r4, r3
   162d4:	bhi	1633c <abort@plt+0x5618>
   162d8:	add	r4, r4, #1
   162dc:	add	r4, r4, r1
   162e0:	mov	r1, r4
   162e4:	bl	16ba4 <abort@plt+0x5e80>
   162e8:	cmp	r0, #0
   162ec:	bne	162fc <abort@plt+0x55d8>
   162f0:	cmp	r4, #0
   162f4:	cmpne	r6, #0
   162f8:	bne	1633c <abort@plt+0x5618>
   162fc:	str	r4, [r5]
   16300:	pop	{r4, r5, r6, pc}
   16304:	cmp	r4, #0
   16308:	bne	16324 <abort@plt+0x5600>
   1630c:	mov	r1, r2
   16310:	mov	r0, #64	; 0x40
   16314:	bl	16ce4 <abort@plt+0x5fc0>
   16318:	cmp	r0, #0
   1631c:	movne	r4, r0
   16320:	addeq	r4, r0, #1
   16324:	mov	r2, r6
   16328:	mov	r1, r4
   1632c:	mov	r0, #0
   16330:	bl	16ba4 <abort@plt+0x5e80>
   16334:	cmp	r0, #0
   16338:	bne	162fc <abort@plt+0x55d8>
   1633c:	bl	16744 <abort@plt+0x5a20>
   16340:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16344:	sub	sp, sp, #12
   16348:	ldr	r6, [r1]
   1634c:	mov	r8, r1
   16350:	mov	r9, r0
   16354:	asrs	r4, r6, #1
   16358:	mov	sl, r2
   1635c:	mov	fp, r3
   16360:	ldr	r7, [sp, #48]	; 0x30
   16364:	bmi	164e0 <abort@plt+0x57bc>
   16368:	mvn	r1, #-2147483648	; 0x80000000
   1636c:	sub	r1, r1, r4
   16370:	cmp	r6, r1
   16374:	movle	r1, #0
   16378:	movgt	r1, #1
   1637c:	mvn	r3, fp
   16380:	cmp	r1, #0
   16384:	addeq	r4, r4, r6
   16388:	mvnne	r4, #-2147483648	; 0x80000000
   1638c:	lsr	r3, r3, #31
   16390:	cmp	fp, r4
   16394:	movge	r2, #0
   16398:	andlt	r2, r3, #1
   1639c:	cmp	r2, #0
   163a0:	beq	16490 <abort@plt+0x576c>
   163a4:	cmp	r7, #0
   163a8:	blt	16578 <abort@plt+0x5854>
   163ac:	bne	16570 <abort@plt+0x584c>
   163b0:	mov	r5, #64	; 0x40
   163b4:	mov	r1, r7
   163b8:	mov	r0, r5
   163bc:	str	r3, [sp, #4]
   163c0:	bl	16ef0 <abort@plt+0x61cc>
   163c4:	mov	r1, r7
   163c8:	mov	r4, r0
   163cc:	mov	r0, r5
   163d0:	bl	17110 <abort@plt+0x63ec>
   163d4:	ldr	r3, [sp, #4]
   163d8:	sub	r5, r5, r1
   163dc:	cmp	r9, #0
   163e0:	sub	r2, r4, r6
   163e4:	streq	r9, [r8]
   163e8:	cmp	r2, sl
   163ec:	bge	16470 <abort@plt+0x574c>
   163f0:	cmp	sl, #0
   163f4:	blt	16510 <abort@plt+0x57ec>
   163f8:	cmp	r6, #0
   163fc:	blt	1641c <abort@plt+0x56f8>
   16400:	mvn	r2, #-2147483648	; 0x80000000
   16404:	sub	r2, r2, sl
   16408:	cmp	r6, r2
   1640c:	movle	r2, #0
   16410:	movgt	r2, #1
   16414:	cmp	r2, #0
   16418:	bne	1650c <abort@plt+0x57e8>
   1641c:	add	r6, r6, sl
   16420:	cmp	fp, r6
   16424:	movge	r3, #0
   16428:	andlt	r3, r3, #1
   1642c:	cmp	r3, #0
   16430:	mov	r4, r6
   16434:	bne	1650c <abort@plt+0x57e8>
   16438:	cmp	r7, #0
   1643c:	blt	16524 <abort@plt+0x5800>
   16440:	beq	1646c <abort@plt+0x5748>
   16444:	cmp	r6, #0
   16448:	blt	165c8 <abort@plt+0x58a4>
   1644c:	mov	r1, r7
   16450:	mvn	r0, #-2147483648	; 0x80000000
   16454:	bl	16ef0 <abort@plt+0x61cc>
   16458:	cmp	r6, r0
   1645c:	movle	r0, #0
   16460:	movgt	r0, #1
   16464:	cmp	r0, #0
   16468:	bne	1650c <abort@plt+0x57e8>
   1646c:	mul	r5, r6, r7
   16470:	mov	r1, r5
   16474:	mov	r0, r9
   16478:	bl	167f8 <abort@plt+0x5ad4>
   1647c:	cmp	r0, #0
   16480:	beq	164f4 <abort@plt+0x57d0>
   16484:	str	r4, [r8]
   16488:	add	sp, sp, #12
   1648c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16490:	cmp	r7, #0
   16494:	blt	16550 <abort@plt+0x582c>
   16498:	beq	163b0 <abort@plt+0x568c>
   1649c:	cmp	r4, #0
   164a0:	blt	16580 <abort@plt+0x585c>
   164a4:	mov	r1, r7
   164a8:	mvn	r0, #-2147483648	; 0x80000000
   164ac:	str	r3, [sp, #4]
   164b0:	bl	16ef0 <abort@plt+0x61cc>
   164b4:	ldr	r3, [sp, #4]
   164b8:	cmp	r0, r4
   164bc:	movge	r0, #0
   164c0:	movlt	r0, #1
   164c4:	cmp	r0, #0
   164c8:	mvnne	r5, #-2147483648	; 0x80000000
   164cc:	bne	163b4 <abort@plt+0x5690>
   164d0:	mul	r5, r7, r4
   164d4:	cmp	r5, #63	; 0x3f
   164d8:	bgt	163dc <abort@plt+0x56b8>
   164dc:	b	163b0 <abort@plt+0x568c>
   164e0:	rsb	r1, r4, #-2147483648	; 0x80000000
   164e4:	cmp	r6, r1
   164e8:	movge	r1, #0
   164ec:	movlt	r1, #1
   164f0:	b	1637c <abort@plt+0x5658>
   164f4:	adds	r5, r5, #0
   164f8:	movne	r5, #1
   164fc:	cmp	r9, #0
   16500:	orreq	r5, r5, #1
   16504:	cmp	r5, #0
   16508:	beq	16484 <abort@plt+0x5760>
   1650c:	bl	16744 <abort@plt+0x5a20>
   16510:	rsb	r2, sl, #-2147483648	; 0x80000000
   16514:	cmp	r6, r2
   16518:	movge	r2, #0
   1651c:	movlt	r2, #1
   16520:	b	16414 <abort@plt+0x56f0>
   16524:	cmp	r6, #0
   16528:	blt	165ac <abort@plt+0x5888>
   1652c:	cmn	r7, #1
   16530:	beq	1646c <abort@plt+0x5748>
   16534:	mov	r1, r7
   16538:	mov	r0, #-2147483648	; 0x80000000
   1653c:	bl	16ef0 <abort@plt+0x61cc>
   16540:	cmp	r6, r0
   16544:	movle	r0, #0
   16548:	movgt	r0, #1
   1654c:	b	16464 <abort@plt+0x5740>
   16550:	cmp	r4, #0
   16554:	blt	165ec <abort@plt+0x58c8>
   16558:	cmn	r7, #1
   1655c:	beq	164d0 <abort@plt+0x57ac>
   16560:	str	r3, [sp, #4]
   16564:	mov	r1, r7
   16568:	mov	r0, #-2147483648	; 0x80000000
   1656c:	b	164b0 <abort@plt+0x578c>
   16570:	mov	r4, fp
   16574:	b	164a4 <abort@plt+0x5780>
   16578:	mov	r4, fp
   1657c:	b	16558 <abort@plt+0x5834>
   16580:	cmn	r4, #1
   16584:	beq	164d0 <abort@plt+0x57ac>
   16588:	mov	r1, r4
   1658c:	mov	r0, #-2147483648	; 0x80000000
   16590:	str	r3, [sp, #4]
   16594:	bl	16ef0 <abort@plt+0x61cc>
   16598:	ldr	r3, [sp, #4]
   1659c:	cmp	r7, r0
   165a0:	movle	r0, #0
   165a4:	movgt	r0, #1
   165a8:	b	164c4 <abort@plt+0x57a0>
   165ac:	mov	r1, r7
   165b0:	mvn	r0, #-2147483648	; 0x80000000
   165b4:	bl	16ef0 <abort@plt+0x61cc>
   165b8:	cmp	r6, r0
   165bc:	movge	r0, #0
   165c0:	movlt	r0, #1
   165c4:	b	16464 <abort@plt+0x5740>
   165c8:	cmn	r6, #1
   165cc:	beq	1646c <abort@plt+0x5748>
   165d0:	mov	r1, r6
   165d4:	mov	r0, #-2147483648	; 0x80000000
   165d8:	bl	16ef0 <abort@plt+0x61cc>
   165dc:	cmp	r7, r0
   165e0:	movle	r0, #0
   165e4:	movgt	r0, #1
   165e8:	b	16464 <abort@plt+0x5740>
   165ec:	mov	r1, r7
   165f0:	mvn	r0, #-2147483648	; 0x80000000
   165f4:	str	r3, [sp, #4]
   165f8:	bl	16ef0 <abort@plt+0x61cc>
   165fc:	ldr	r3, [sp, #4]
   16600:	cmp	r0, r4
   16604:	movle	r0, #0
   16608:	movgt	r0, #1
   1660c:	b	164c4 <abort@plt+0x57a0>
   16610:	push	{r4, lr}
   16614:	mov	r1, #1
   16618:	bl	16784 <abort@plt+0x5a60>
   1661c:	cmp	r0, #0
   16620:	popne	{r4, pc}
   16624:	bl	16744 <abort@plt+0x5a20>
   16628:	push	{r4, lr}
   1662c:	mov	r1, #1
   16630:	bl	16784 <abort@plt+0x5a60>
   16634:	cmp	r0, #0
   16638:	popne	{r4, pc}
   1663c:	bl	16744 <abort@plt+0x5a20>
   16640:	push	{r4, lr}
   16644:	bl	16784 <abort@plt+0x5a60>
   16648:	cmp	r0, #0
   1664c:	popne	{r4, pc}
   16650:	bl	16744 <abort@plt+0x5a20>
   16654:	push	{r4, lr}
   16658:	bl	16784 <abort@plt+0x5a60>
   1665c:	cmp	r0, #0
   16660:	popne	{r4, pc}
   16664:	bl	16744 <abort@plt+0x5a20>
   16668:	push	{r4, r5, r6, lr}
   1666c:	mov	r6, r0
   16670:	mov	r0, r1
   16674:	mov	r4, r1
   16678:	bl	167cc <abort@plt+0x5aa8>
   1667c:	subs	r5, r0, #0
   16680:	beq	16698 <abort@plt+0x5974>
   16684:	mov	r2, r4
   16688:	mov	r1, r6
   1668c:	bl	10b74 <memcpy@plt>
   16690:	mov	r0, r5
   16694:	pop	{r4, r5, r6, pc}
   16698:	bl	16744 <abort@plt+0x5a20>
   1669c:	push	{r4, r5, r6, lr}
   166a0:	mov	r6, r0
   166a4:	mov	r0, r1
   166a8:	mov	r4, r1
   166ac:	bl	167cc <abort@plt+0x5aa8>
   166b0:	subs	r5, r0, #0
   166b4:	beq	166cc <abort@plt+0x59a8>
   166b8:	mov	r2, r4
   166bc:	mov	r1, r6
   166c0:	bl	10b74 <memcpy@plt>
   166c4:	mov	r0, r5
   166c8:	pop	{r4, r5, r6, pc}
   166cc:	bl	16744 <abort@plt+0x5a20>
   166d0:	push	{r4, r5, r6, lr}
   166d4:	mov	r6, r0
   166d8:	add	r0, r1, #1
   166dc:	mov	r4, r1
   166e0:	bl	167cc <abort@plt+0x5aa8>
   166e4:	subs	r5, r0, #0
   166e8:	beq	16708 <abort@plt+0x59e4>
   166ec:	mov	r3, #0
   166f0:	mov	r1, r6
   166f4:	strb	r3, [r5, r4]
   166f8:	mov	r2, r4
   166fc:	bl	10b74 <memcpy@plt>
   16700:	mov	r0, r5
   16704:	pop	{r4, r5, r6, pc}
   16708:	bl	16744 <abort@plt+0x5a20>
   1670c:	push	{r4, r5, r6, lr}
   16710:	mov	r6, r0
   16714:	bl	10c70 <strlen@plt>
   16718:	add	r4, r0, #1
   1671c:	mov	r0, r4
   16720:	bl	167cc <abort@plt+0x5aa8>
   16724:	subs	r5, r0, #0
   16728:	beq	16740 <abort@plt+0x5a1c>
   1672c:	mov	r2, r4
   16730:	mov	r1, r6
   16734:	bl	10b74 <memcpy@plt>
   16738:	mov	r0, r5
   1673c:	pop	{r4, r5, r6, pc}
   16740:	bl	16744 <abort@plt+0x5a20>
   16744:	ldr	r3, [pc, #44]	; 16778 <abort@plt+0x5a54>
   16748:	push	{r4, lr}
   1674c:	mov	r2, #5
   16750:	ldr	r1, [pc, #36]	; 1677c <abort@plt+0x5a58>
   16754:	mov	r0, #0
   16758:	ldr	r4, [r3]
   1675c:	bl	10ba4 <dcgettext@plt>
   16760:	ldr	r2, [pc, #24]	; 16780 <abort@plt+0x5a5c>
   16764:	mov	r1, #0
   16768:	mov	r3, r0
   1676c:	mov	r0, r4
   16770:	bl	10c10 <error@plt>
   16774:	bl	10d24 <abort@plt>
   16778:	andeq	r8, r2, ip, asr #1
   1677c:	andeq	r7, r1, r4, lsr #23
   16780:	andeq	r7, r1, r8, ror #14
   16784:	cmp	r1, #0
   16788:	cmpne	r0, #0
   1678c:	moveq	r1, #1
   16790:	moveq	r0, r1
   16794:	umull	r2, r3, r0, r1
   16798:	adds	r3, r3, #0
   1679c:	movne	r3, #1
   167a0:	cmp	r2, #0
   167a4:	blt	167b4 <abort@plt+0x5a90>
   167a8:	cmp	r3, #0
   167ac:	bne	167b4 <abort@plt+0x5a90>
   167b0:	b	10b20 <calloc@plt>
   167b4:	push	{r4, lr}
   167b8:	bl	10c7c <__errno_location@plt>
   167bc:	mov	r3, #12
   167c0:	str	r3, [r0]
   167c4:	mov	r0, #0
   167c8:	pop	{r4, pc}
   167cc:	cmp	r0, #0
   167d0:	moveq	r0, #1
   167d4:	cmp	r0, #0
   167d8:	blt	167e0 <abort@plt+0x5abc>
   167dc:	b	10c1c <malloc@plt>
   167e0:	push	{r4, lr}
   167e4:	bl	10c7c <__errno_location@plt>
   167e8:	mov	r3, #12
   167ec:	str	r3, [r0]
   167f0:	mov	r0, #0
   167f4:	pop	{r4, pc}
   167f8:	cmp	r0, #0
   167fc:	beq	16820 <abort@plt+0x5afc>
   16800:	cmp	r1, #0
   16804:	push	{lr}		; (str lr, [sp, #-4]!)
   16808:	sub	sp, sp, #12
   1680c:	beq	16828 <abort@plt+0x5b04>
   16810:	blt	16840 <abort@plt+0x5b1c>
   16814:	add	sp, sp, #12
   16818:	pop	{lr}		; (ldr lr, [sp], #4)
   1681c:	b	10bb0 <realloc@plt>
   16820:	mov	r0, r1
   16824:	b	167cc <abort@plt+0x5aa8>
   16828:	str	r1, [sp, #4]
   1682c:	bl	1161c <abort@plt+0x8f8>
   16830:	ldr	r3, [sp, #4]
   16834:	mov	r0, r3
   16838:	add	sp, sp, #12
   1683c:	pop	{pc}		; (ldr pc, [sp], #4)
   16840:	bl	10c7c <__errno_location@plt>
   16844:	mov	r2, #12
   16848:	mov	r3, #0
   1684c:	str	r2, [r0]
   16850:	b	16834 <abort@plt+0x5b10>
   16854:	ldrb	r3, [r0]
   16858:	cmp	r3, #47	; 0x2f
   1685c:	bne	1686c <abort@plt+0x5b48>
   16860:	ldrb	r3, [r0, #1]!
   16864:	cmp	r3, #47	; 0x2f
   16868:	beq	16860 <abort@plt+0x5b3c>
   1686c:	cmp	r3, #0
   16870:	bxeq	lr
   16874:	mov	r2, #0
   16878:	push	{lr}		; (str lr, [sp, #-4]!)
   1687c:	mov	ip, r2
   16880:	mov	r1, r0
   16884:	mov	lr, #1
   16888:	cmp	r3, #47	; 0x2f
   1688c:	moveq	r2, lr
   16890:	beq	168a0 <abort@plt+0x5b7c>
   16894:	cmp	r2, #0
   16898:	movne	r0, r1
   1689c:	movne	r2, ip
   168a0:	ldrb	r3, [r1, #1]!
   168a4:	cmp	r3, #0
   168a8:	bne	16888 <abort@plt+0x5b64>
   168ac:	pop	{pc}		; (ldr pc, [sp], #4)
   168b0:	push	{r4, lr}
   168b4:	mov	r4, r0
   168b8:	bl	10c70 <strlen@plt>
   168bc:	cmp	r0, #1
   168c0:	popls	{r4, pc}
   168c4:	sub	r3, r0, #1
   168c8:	add	r2, r4, r3
   168cc:	ldrb	r1, [r4, r3]
   168d0:	cmp	r1, #47	; 0x2f
   168d4:	popne	{r4, pc}
   168d8:	cmp	r3, #1
   168dc:	beq	168f0 <abort@plt+0x5bcc>
   168e0:	ldrb	r1, [r2, #-1]!
   168e4:	sub	r0, r3, #1
   168e8:	cmp	r1, #47	; 0x2f
   168ec:	beq	168f8 <abort@plt+0x5bd4>
   168f0:	mov	r0, r3
   168f4:	pop	{r4, pc}
   168f8:	mov	r3, r0
   168fc:	b	168d8 <abort@plt+0x5bb4>
   16900:	push	{r4, r5, r6, lr}
   16904:	mov	r4, r0
   16908:	bl	10bf8 <__fpending@plt>
   1690c:	ldr	r5, [r4]
   16910:	and	r5, r5, #32
   16914:	mov	r6, r0
   16918:	mov	r0, r4
   1691c:	bl	1697c <abort@plt+0x5c58>
   16920:	cmp	r5, #0
   16924:	mov	r4, r0
   16928:	bne	16948 <abort@plt+0x5c24>
   1692c:	cmp	r0, #0
   16930:	beq	16940 <abort@plt+0x5c1c>
   16934:	cmp	r6, #0
   16938:	beq	16964 <abort@plt+0x5c40>
   1693c:	mvn	r4, #0
   16940:	mov	r0, r4
   16944:	pop	{r4, r5, r6, pc}
   16948:	cmp	r0, #0
   1694c:	bne	1693c <abort@plt+0x5c18>
   16950:	bl	10c7c <__errno_location@plt>
   16954:	str	r4, [r0]
   16958:	mvn	r4, #0
   1695c:	mov	r0, r4
   16960:	pop	{r4, r5, r6, pc}
   16964:	bl	10c7c <__errno_location@plt>
   16968:	ldr	r4, [r0]
   1696c:	subs	r4, r4, #9
   16970:	mvnne	r4, #0
   16974:	mov	r0, r4
   16978:	pop	{r4, r5, r6, pc}
   1697c:	push	{r4, r5, lr}
   16980:	sub	sp, sp, #12
   16984:	mov	r4, r0
   16988:	bl	10cac <fileno@plt>
   1698c:	cmp	r0, #0
   16990:	mov	r0, r4
   16994:	blt	16a10 <abort@plt+0x5cec>
   16998:	bl	10c34 <__freading@plt>
   1699c:	cmp	r0, #0
   169a0:	bne	169dc <abort@plt+0x5cb8>
   169a4:	mov	r0, r4
   169a8:	bl	16a1c <abort@plt+0x5cf8>
   169ac:	cmp	r0, #0
   169b0:	beq	16a0c <abort@plt+0x5ce8>
   169b4:	bl	10c7c <__errno_location@plt>
   169b8:	mov	r5, r0
   169bc:	mov	r0, r4
   169c0:	ldr	r4, [r5]
   169c4:	bl	10cc4 <fclose@plt>
   169c8:	cmp	r4, #0
   169cc:	mvnne	r0, #0
   169d0:	strne	r4, [r5]
   169d4:	add	sp, sp, #12
   169d8:	pop	{r4, r5, pc}
   169dc:	mov	r0, r4
   169e0:	bl	10cac <fileno@plt>
   169e4:	mov	r3, #1
   169e8:	str	r3, [sp]
   169ec:	mov	r2, #0
   169f0:	mov	r3, #0
   169f4:	bl	10be0 <lseek64@plt>
   169f8:	mvn	r3, #0
   169fc:	mvn	r2, #0
   16a00:	cmp	r1, r3
   16a04:	cmpeq	r0, r2
   16a08:	bne	169a4 <abort@plt+0x5c80>
   16a0c:	mov	r0, r4
   16a10:	add	sp, sp, #12
   16a14:	pop	{r4, r5, lr}
   16a18:	b	10cc4 <fclose@plt>
   16a1c:	push	{r4, lr}
   16a20:	subs	r4, r0, #0
   16a24:	sub	sp, sp, #8
   16a28:	beq	16a44 <abort@plt+0x5d20>
   16a2c:	bl	10c34 <__freading@plt>
   16a30:	cmp	r0, #0
   16a34:	beq	16a44 <abort@plt+0x5d20>
   16a38:	ldr	r3, [r4]
   16a3c:	tst	r3, #256	; 0x100
   16a40:	bne	16a54 <abort@plt+0x5d30>
   16a44:	mov	r0, r4
   16a48:	add	sp, sp, #8
   16a4c:	pop	{r4, lr}
   16a50:	b	10b50 <fflush@plt>
   16a54:	mov	r3, #1
   16a58:	str	r3, [sp]
   16a5c:	mov	r2, #0
   16a60:	mov	r3, #0
   16a64:	mov	r0, r4
   16a68:	bl	16a7c <abort@plt+0x5d58>
   16a6c:	mov	r0, r4
   16a70:	add	sp, sp, #8
   16a74:	pop	{r4, lr}
   16a78:	b	10b50 <fflush@plt>
   16a7c:	push	{r4, r5, r6, r7, r8, lr}
   16a80:	sub	sp, sp, #8
   16a84:	ldmib	r0, {ip, lr}
   16a88:	mov	r4, r0
   16a8c:	ldr	r5, [sp, #32]
   16a90:	cmp	lr, ip
   16a94:	beq	16aac <abort@plt+0x5d88>
   16a98:	str	r5, [sp, #32]
   16a9c:	mov	r0, r4
   16aa0:	add	sp, sp, #8
   16aa4:	pop	{r4, r5, r6, r7, r8, lr}
   16aa8:	b	10cd0 <fseeko64@plt>
   16aac:	ldr	lr, [r0, #20]
   16ab0:	ldr	ip, [r0, #16]
   16ab4:	cmp	lr, ip
   16ab8:	bne	16a98 <abort@plt+0x5d74>
   16abc:	ldr	r8, [r0, #36]	; 0x24
   16ac0:	cmp	r8, #0
   16ac4:	bne	16a98 <abort@plt+0x5d74>
   16ac8:	mov	r6, r2
   16acc:	mov	r7, r3
   16ad0:	bl	10cac <fileno@plt>
   16ad4:	mov	r2, r6
   16ad8:	mov	r3, r7
   16adc:	str	r5, [sp]
   16ae0:	bl	10be0 <lseek64@plt>
   16ae4:	mvn	r3, #0
   16ae8:	mvn	r2, #0
   16aec:	cmp	r1, r3
   16af0:	cmpeq	r0, r2
   16af4:	beq	16b14 <abort@plt+0x5df0>
   16af8:	ldr	r3, [r4]
   16afc:	strd	r0, [r4, #80]	; 0x50
   16b00:	mov	r0, r8
   16b04:	bic	r3, r3, #16
   16b08:	str	r3, [r4]
   16b0c:	add	sp, sp, #8
   16b10:	pop	{r4, r5, r6, r7, r8, pc}
   16b14:	mvn	r0, #0
   16b18:	b	16b0c <abort@plt+0x5de8>
   16b1c:	push	{r4, lr}
   16b20:	mov	r0, #14
   16b24:	bl	10d00 <nl_langinfo@plt>
   16b28:	cmp	r0, #0
   16b2c:	beq	16b44 <abort@plt+0x5e20>
   16b30:	ldrb	r2, [r0]
   16b34:	ldr	r3, [pc, #16]	; 16b4c <abort@plt+0x5e28>
   16b38:	cmp	r2, #0
   16b3c:	moveq	r0, r3
   16b40:	pop	{r4, pc}
   16b44:	ldr	r0, [pc]	; 16b4c <abort@plt+0x5e28>
   16b48:	pop	{r4, pc}
   16b4c:			; <UNDEFINED> instruction: 0x00017bb8
   16b50:	push	{r4, r5, r6, r7, lr}
   16b54:	subs	r6, r0, #0
   16b58:	sub	sp, sp, #12
   16b5c:	addeq	r6, sp, #4
   16b60:	mov	r0, r6
   16b64:	mov	r5, r2
   16b68:	mov	r7, r1
   16b6c:	bl	10c04 <mbrtowc@plt>
   16b70:	cmp	r5, #0
   16b74:	cmnne	r0, #3
   16b78:	mov	r4, r0
   16b7c:	bls	16b98 <abort@plt+0x5e74>
   16b80:	mov	r0, #0
   16b84:	bl	16bf0 <abort@plt+0x5ecc>
   16b88:	cmp	r0, #0
   16b8c:	moveq	r4, #1
   16b90:	ldrbeq	r3, [r7]
   16b94:	streq	r3, [r6]
   16b98:	mov	r0, r4
   16b9c:	add	sp, sp, #12
   16ba0:	pop	{r4, r5, r6, r7, pc}
   16ba4:	push	{r4, r5, r6, lr}
   16ba8:	subs	r4, r2, #0
   16bac:	mov	r6, r0
   16bb0:	mov	r5, r1
   16bb4:	beq	16be0 <abort@plt+0x5ebc>
   16bb8:	mov	r1, r4
   16bbc:	mvn	r0, #0
   16bc0:	bl	16ce4 <abort@plt+0x5fc0>
   16bc4:	cmp	r0, r5
   16bc8:	bcs	16be0 <abort@plt+0x5ebc>
   16bcc:	bl	10c7c <__errno_location@plt>
   16bd0:	mov	r3, #12
   16bd4:	str	r3, [r0]
   16bd8:	mov	r0, #0
   16bdc:	pop	{r4, r5, r6, pc}
   16be0:	mul	r1, r5, r4
   16be4:	mov	r0, r6
   16be8:	pop	{r4, r5, r6, lr}
   16bec:	b	167f8 <abort@plt+0x5ad4>
   16bf0:	push	{lr}		; (str lr, [sp, #-4]!)
   16bf4:	sub	sp, sp, #268	; 0x10c
   16bf8:	add	r1, sp, #4
   16bfc:	ldr	r2, [pc, #60]	; 16c40 <abort@plt+0x5f1c>
   16c00:	bl	16c4c <abort@plt+0x5f28>
   16c04:	cmp	r0, #0
   16c08:	movne	r0, #0
   16c0c:	bne	16c38 <abort@plt+0x5f14>
   16c10:	ldr	r1, [pc, #44]	; 16c44 <abort@plt+0x5f20>
   16c14:	add	r0, sp, #4
   16c18:	bl	10b44 <strcmp@plt>
   16c1c:	cmp	r0, #0
   16c20:	beq	16c38 <abort@plt+0x5f14>
   16c24:	add	r0, sp, #4
   16c28:	ldr	r1, [pc, #24]	; 16c48 <abort@plt+0x5f24>
   16c2c:	bl	10b44 <strcmp@plt>
   16c30:	adds	r0, r0, #0
   16c34:	movne	r0, #1
   16c38:	add	sp, sp, #268	; 0x10c
   16c3c:	pop	{pc}		; (ldr pc, [sp], #4)
   16c40:	andeq	r0, r0, r1, lsl #2
   16c44:	andeq	r7, r1, r0, asr #23
   16c48:	andeq	r7, r1, r4, asr #23
   16c4c:	push	{r4, r5, r6, lr}
   16c50:	mov	r5, r1
   16c54:	mov	r1, #0
   16c58:	mov	r4, r2
   16c5c:	bl	10ce8 <setlocale@plt>
   16c60:	subs	r6, r0, #0
   16c64:	beq	16cc0 <abort@plt+0x5f9c>
   16c68:	bl	10c70 <strlen@plt>
   16c6c:	cmp	r4, r0
   16c70:	bhi	16ca8 <abort@plt+0x5f84>
   16c74:	cmp	r4, #0
   16c78:	bne	16c84 <abort@plt+0x5f60>
   16c7c:	mov	r0, #34	; 0x22
   16c80:	pop	{r4, r5, r6, pc}
   16c84:	sub	r4, r4, #1
   16c88:	mov	r1, r6
   16c8c:	mov	r2, r4
   16c90:	mov	r0, r5
   16c94:	bl	10b74 <memcpy@plt>
   16c98:	mov	r3, #0
   16c9c:	strb	r3, [r5, r4]
   16ca0:	mov	r0, #34	; 0x22
   16ca4:	pop	{r4, r5, r6, pc}
   16ca8:	add	r2, r0, #1
   16cac:	mov	r1, r6
   16cb0:	mov	r0, r5
   16cb4:	bl	10b74 <memcpy@plt>
   16cb8:	mov	r0, #0
   16cbc:	pop	{r4, r5, r6, pc}
   16cc0:	cmp	r4, #0
   16cc4:	beq	16cd4 <abort@plt+0x5fb0>
   16cc8:	strb	r6, [r5]
   16ccc:	mov	r0, #22
   16cd0:	pop	{r4, r5, r6, pc}
   16cd4:	mov	r0, #22
   16cd8:	pop	{r4, r5, r6, pc}
   16cdc:	mov	r1, #0
   16ce0:	b	10ce8 <setlocale@plt>
   16ce4:	subs	r2, r1, #1
   16ce8:	bxeq	lr
   16cec:	bcc	16ec4 <abort@plt+0x61a0>
   16cf0:	cmp	r0, r1
   16cf4:	bls	16ea8 <abort@plt+0x6184>
   16cf8:	tst	r1, r2
   16cfc:	beq	16eb4 <abort@plt+0x6190>
   16d00:	clz	r3, r0
   16d04:	clz	r2, r1
   16d08:	sub	r3, r2, r3
   16d0c:	rsbs	r3, r3, #31
   16d10:	addne	r3, r3, r3, lsl #1
   16d14:	mov	r2, #0
   16d18:	addne	pc, pc, r3, lsl #2
   16d1c:	nop			; (mov r0, r0)
   16d20:	cmp	r0, r1, lsl #31
   16d24:	adc	r2, r2, r2
   16d28:	subcs	r0, r0, r1, lsl #31
   16d2c:	cmp	r0, r1, lsl #30
   16d30:	adc	r2, r2, r2
   16d34:	subcs	r0, r0, r1, lsl #30
   16d38:	cmp	r0, r1, lsl #29
   16d3c:	adc	r2, r2, r2
   16d40:	subcs	r0, r0, r1, lsl #29
   16d44:	cmp	r0, r1, lsl #28
   16d48:	adc	r2, r2, r2
   16d4c:	subcs	r0, r0, r1, lsl #28
   16d50:	cmp	r0, r1, lsl #27
   16d54:	adc	r2, r2, r2
   16d58:	subcs	r0, r0, r1, lsl #27
   16d5c:	cmp	r0, r1, lsl #26
   16d60:	adc	r2, r2, r2
   16d64:	subcs	r0, r0, r1, lsl #26
   16d68:	cmp	r0, r1, lsl #25
   16d6c:	adc	r2, r2, r2
   16d70:	subcs	r0, r0, r1, lsl #25
   16d74:	cmp	r0, r1, lsl #24
   16d78:	adc	r2, r2, r2
   16d7c:	subcs	r0, r0, r1, lsl #24
   16d80:	cmp	r0, r1, lsl #23
   16d84:	adc	r2, r2, r2
   16d88:	subcs	r0, r0, r1, lsl #23
   16d8c:	cmp	r0, r1, lsl #22
   16d90:	adc	r2, r2, r2
   16d94:	subcs	r0, r0, r1, lsl #22
   16d98:	cmp	r0, r1, lsl #21
   16d9c:	adc	r2, r2, r2
   16da0:	subcs	r0, r0, r1, lsl #21
   16da4:	cmp	r0, r1, lsl #20
   16da8:	adc	r2, r2, r2
   16dac:	subcs	r0, r0, r1, lsl #20
   16db0:	cmp	r0, r1, lsl #19
   16db4:	adc	r2, r2, r2
   16db8:	subcs	r0, r0, r1, lsl #19
   16dbc:	cmp	r0, r1, lsl #18
   16dc0:	adc	r2, r2, r2
   16dc4:	subcs	r0, r0, r1, lsl #18
   16dc8:	cmp	r0, r1, lsl #17
   16dcc:	adc	r2, r2, r2
   16dd0:	subcs	r0, r0, r1, lsl #17
   16dd4:	cmp	r0, r1, lsl #16
   16dd8:	adc	r2, r2, r2
   16ddc:	subcs	r0, r0, r1, lsl #16
   16de0:	cmp	r0, r1, lsl #15
   16de4:	adc	r2, r2, r2
   16de8:	subcs	r0, r0, r1, lsl #15
   16dec:	cmp	r0, r1, lsl #14
   16df0:	adc	r2, r2, r2
   16df4:	subcs	r0, r0, r1, lsl #14
   16df8:	cmp	r0, r1, lsl #13
   16dfc:	adc	r2, r2, r2
   16e00:	subcs	r0, r0, r1, lsl #13
   16e04:	cmp	r0, r1, lsl #12
   16e08:	adc	r2, r2, r2
   16e0c:	subcs	r0, r0, r1, lsl #12
   16e10:	cmp	r0, r1, lsl #11
   16e14:	adc	r2, r2, r2
   16e18:	subcs	r0, r0, r1, lsl #11
   16e1c:	cmp	r0, r1, lsl #10
   16e20:	adc	r2, r2, r2
   16e24:	subcs	r0, r0, r1, lsl #10
   16e28:	cmp	r0, r1, lsl #9
   16e2c:	adc	r2, r2, r2
   16e30:	subcs	r0, r0, r1, lsl #9
   16e34:	cmp	r0, r1, lsl #8
   16e38:	adc	r2, r2, r2
   16e3c:	subcs	r0, r0, r1, lsl #8
   16e40:	cmp	r0, r1, lsl #7
   16e44:	adc	r2, r2, r2
   16e48:	subcs	r0, r0, r1, lsl #7
   16e4c:	cmp	r0, r1, lsl #6
   16e50:	adc	r2, r2, r2
   16e54:	subcs	r0, r0, r1, lsl #6
   16e58:	cmp	r0, r1, lsl #5
   16e5c:	adc	r2, r2, r2
   16e60:	subcs	r0, r0, r1, lsl #5
   16e64:	cmp	r0, r1, lsl #4
   16e68:	adc	r2, r2, r2
   16e6c:	subcs	r0, r0, r1, lsl #4
   16e70:	cmp	r0, r1, lsl #3
   16e74:	adc	r2, r2, r2
   16e78:	subcs	r0, r0, r1, lsl #3
   16e7c:	cmp	r0, r1, lsl #2
   16e80:	adc	r2, r2, r2
   16e84:	subcs	r0, r0, r1, lsl #2
   16e88:	cmp	r0, r1, lsl #1
   16e8c:	adc	r2, r2, r2
   16e90:	subcs	r0, r0, r1, lsl #1
   16e94:	cmp	r0, r1
   16e98:	adc	r2, r2, r2
   16e9c:	subcs	r0, r0, r1
   16ea0:	mov	r0, r2
   16ea4:	bx	lr
   16ea8:	moveq	r0, #1
   16eac:	movne	r0, #0
   16eb0:	bx	lr
   16eb4:	clz	r2, r1
   16eb8:	rsb	r2, r2, #31
   16ebc:	lsr	r0, r0, r2
   16ec0:	bx	lr
   16ec4:	cmp	r0, #0
   16ec8:	mvnne	r0, #0
   16ecc:	b	17130 <abort@plt+0x640c>
   16ed0:	cmp	r1, #0
   16ed4:	beq	16ec4 <abort@plt+0x61a0>
   16ed8:	push	{r0, r1, lr}
   16edc:	bl	16ce4 <abort@plt+0x5fc0>
   16ee0:	pop	{r1, r2, lr}
   16ee4:	mul	r3, r2, r0
   16ee8:	sub	r1, r1, r3
   16eec:	bx	lr
   16ef0:	cmp	r1, #0
   16ef4:	beq	17100 <abort@plt+0x63dc>
   16ef8:	eor	ip, r0, r1
   16efc:	rsbmi	r1, r1, #0
   16f00:	subs	r2, r1, #1
   16f04:	beq	170cc <abort@plt+0x63a8>
   16f08:	movs	r3, r0
   16f0c:	rsbmi	r3, r0, #0
   16f10:	cmp	r3, r1
   16f14:	bls	170d8 <abort@plt+0x63b4>
   16f18:	tst	r1, r2
   16f1c:	beq	170e8 <abort@plt+0x63c4>
   16f20:	clz	r2, r3
   16f24:	clz	r0, r1
   16f28:	sub	r2, r0, r2
   16f2c:	rsbs	r2, r2, #31
   16f30:	addne	r2, r2, r2, lsl #1
   16f34:	mov	r0, #0
   16f38:	addne	pc, pc, r2, lsl #2
   16f3c:	nop			; (mov r0, r0)
   16f40:	cmp	r3, r1, lsl #31
   16f44:	adc	r0, r0, r0
   16f48:	subcs	r3, r3, r1, lsl #31
   16f4c:	cmp	r3, r1, lsl #30
   16f50:	adc	r0, r0, r0
   16f54:	subcs	r3, r3, r1, lsl #30
   16f58:	cmp	r3, r1, lsl #29
   16f5c:	adc	r0, r0, r0
   16f60:	subcs	r3, r3, r1, lsl #29
   16f64:	cmp	r3, r1, lsl #28
   16f68:	adc	r0, r0, r0
   16f6c:	subcs	r3, r3, r1, lsl #28
   16f70:	cmp	r3, r1, lsl #27
   16f74:	adc	r0, r0, r0
   16f78:	subcs	r3, r3, r1, lsl #27
   16f7c:	cmp	r3, r1, lsl #26
   16f80:	adc	r0, r0, r0
   16f84:	subcs	r3, r3, r1, lsl #26
   16f88:	cmp	r3, r1, lsl #25
   16f8c:	adc	r0, r0, r0
   16f90:	subcs	r3, r3, r1, lsl #25
   16f94:	cmp	r3, r1, lsl #24
   16f98:	adc	r0, r0, r0
   16f9c:	subcs	r3, r3, r1, lsl #24
   16fa0:	cmp	r3, r1, lsl #23
   16fa4:	adc	r0, r0, r0
   16fa8:	subcs	r3, r3, r1, lsl #23
   16fac:	cmp	r3, r1, lsl #22
   16fb0:	adc	r0, r0, r0
   16fb4:	subcs	r3, r3, r1, lsl #22
   16fb8:	cmp	r3, r1, lsl #21
   16fbc:	adc	r0, r0, r0
   16fc0:	subcs	r3, r3, r1, lsl #21
   16fc4:	cmp	r3, r1, lsl #20
   16fc8:	adc	r0, r0, r0
   16fcc:	subcs	r3, r3, r1, lsl #20
   16fd0:	cmp	r3, r1, lsl #19
   16fd4:	adc	r0, r0, r0
   16fd8:	subcs	r3, r3, r1, lsl #19
   16fdc:	cmp	r3, r1, lsl #18
   16fe0:	adc	r0, r0, r0
   16fe4:	subcs	r3, r3, r1, lsl #18
   16fe8:	cmp	r3, r1, lsl #17
   16fec:	adc	r0, r0, r0
   16ff0:	subcs	r3, r3, r1, lsl #17
   16ff4:	cmp	r3, r1, lsl #16
   16ff8:	adc	r0, r0, r0
   16ffc:	subcs	r3, r3, r1, lsl #16
   17000:	cmp	r3, r1, lsl #15
   17004:	adc	r0, r0, r0
   17008:	subcs	r3, r3, r1, lsl #15
   1700c:	cmp	r3, r1, lsl #14
   17010:	adc	r0, r0, r0
   17014:	subcs	r3, r3, r1, lsl #14
   17018:	cmp	r3, r1, lsl #13
   1701c:	adc	r0, r0, r0
   17020:	subcs	r3, r3, r1, lsl #13
   17024:	cmp	r3, r1, lsl #12
   17028:	adc	r0, r0, r0
   1702c:	subcs	r3, r3, r1, lsl #12
   17030:	cmp	r3, r1, lsl #11
   17034:	adc	r0, r0, r0
   17038:	subcs	r3, r3, r1, lsl #11
   1703c:	cmp	r3, r1, lsl #10
   17040:	adc	r0, r0, r0
   17044:	subcs	r3, r3, r1, lsl #10
   17048:	cmp	r3, r1, lsl #9
   1704c:	adc	r0, r0, r0
   17050:	subcs	r3, r3, r1, lsl #9
   17054:	cmp	r3, r1, lsl #8
   17058:	adc	r0, r0, r0
   1705c:	subcs	r3, r3, r1, lsl #8
   17060:	cmp	r3, r1, lsl #7
   17064:	adc	r0, r0, r0
   17068:	subcs	r3, r3, r1, lsl #7
   1706c:	cmp	r3, r1, lsl #6
   17070:	adc	r0, r0, r0
   17074:	subcs	r3, r3, r1, lsl #6
   17078:	cmp	r3, r1, lsl #5
   1707c:	adc	r0, r0, r0
   17080:	subcs	r3, r3, r1, lsl #5
   17084:	cmp	r3, r1, lsl #4
   17088:	adc	r0, r0, r0
   1708c:	subcs	r3, r3, r1, lsl #4
   17090:	cmp	r3, r1, lsl #3
   17094:	adc	r0, r0, r0
   17098:	subcs	r3, r3, r1, lsl #3
   1709c:	cmp	r3, r1, lsl #2
   170a0:	adc	r0, r0, r0
   170a4:	subcs	r3, r3, r1, lsl #2
   170a8:	cmp	r3, r1, lsl #1
   170ac:	adc	r0, r0, r0
   170b0:	subcs	r3, r3, r1, lsl #1
   170b4:	cmp	r3, r1
   170b8:	adc	r0, r0, r0
   170bc:	subcs	r3, r3, r1
   170c0:	cmp	ip, #0
   170c4:	rsbmi	r0, r0, #0
   170c8:	bx	lr
   170cc:	teq	ip, r0
   170d0:	rsbmi	r0, r0, #0
   170d4:	bx	lr
   170d8:	movcc	r0, #0
   170dc:	asreq	r0, ip, #31
   170e0:	orreq	r0, r0, #1
   170e4:	bx	lr
   170e8:	clz	r2, r1
   170ec:	rsb	r2, r2, #31
   170f0:	cmp	ip, #0
   170f4:	lsr	r0, r3, r2
   170f8:	rsbmi	r0, r0, #0
   170fc:	bx	lr
   17100:	cmp	r0, #0
   17104:	mvngt	r0, #-2147483648	; 0x80000000
   17108:	movlt	r0, #-2147483648	; 0x80000000
   1710c:	b	17130 <abort@plt+0x640c>
   17110:	cmp	r1, #0
   17114:	beq	17100 <abort@plt+0x63dc>
   17118:	push	{r0, r1, lr}
   1711c:	bl	16ef8 <abort@plt+0x61d4>
   17120:	pop	{r1, r2, lr}
   17124:	mul	r3, r2, r0
   17128:	sub	r1, r1, r3
   1712c:	bx	lr
   17130:	push	{r1, lr}
   17134:	mov	r0, #8
   17138:	bl	10b38 <raise@plt>
   1713c:	pop	{r1, pc}
   17140:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17144:	mov	r7, r0
   17148:	ldr	r6, [pc, #72]	; 17198 <abort@plt+0x6474>
   1714c:	ldr	r5, [pc, #72]	; 1719c <abort@plt+0x6478>
   17150:	add	r6, pc, r6
   17154:	add	r5, pc, r5
   17158:	sub	r6, r6, r5
   1715c:	mov	r8, r1
   17160:	mov	r9, r2
   17164:	bl	10b00 <calloc@plt-0x20>
   17168:	asrs	r6, r6, #2
   1716c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17170:	mov	r4, #0
   17174:	add	r4, r4, #1
   17178:	ldr	r3, [r5], #4
   1717c:	mov	r2, r9
   17180:	mov	r1, r8
   17184:	mov	r0, r7
   17188:	blx	r3
   1718c:	cmp	r6, r4
   17190:	bne	17174 <abort@plt+0x6450>
   17194:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17198:			; <UNDEFINED> instruction: 0x00010db8
   1719c:			; <UNDEFINED> instruction: 0x00010db0
   171a0:	bx	lr
   171a4:	ldr	r3, [pc, #12]	; 171b8 <abort@plt+0x6494>
   171a8:	mov	r1, #0
   171ac:	add	r3, pc, r3
   171b0:	ldr	r2, [r3]
   171b4:	b	10c88 <__cxa_atexit@plt>
   171b8:	andeq	r0, r1, r0, lsl pc

Disassembly of section .fini:

000171bc <.fini>:
   171bc:	push	{r3, lr}
   171c0:	pop	{r3, pc}
