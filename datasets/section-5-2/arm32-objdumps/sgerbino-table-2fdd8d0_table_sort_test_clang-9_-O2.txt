
../repos/sgerbino-table-2fdd8d0/bin/table_sort_test:     file format elf32-littlearm


Disassembly of section .init:

00011f5c <.init>:
   11f5c:	push	{r3, lr}
   11f60:	bl	12084 <_start@@Base+0x3c>
   11f64:	pop	{r3, pc}

Disassembly of section .plt:

00011f68 <calloc@plt-0x14>:
   11f68:	push	{lr}		; (str lr, [sp, #-4]!)
   11f6c:	ldr	lr, [pc, #4]	; 11f78 <calloc@plt-0x4>
   11f70:	add	lr, pc, lr
   11f74:	ldr	pc, [lr, #8]!
   11f78:	andeq	r5, r1, r8, lsl #1

00011f7c <calloc@plt>:
   11f7c:	add	ip, pc, #0, 12
   11f80:	add	ip, ip, #86016	; 0x15000
   11f84:	ldr	pc, [ip, #136]!	; 0x88

00011f88 <strcmp@plt>:
   11f88:	add	ip, pc, #0, 12
   11f8c:	add	ip, ip, #86016	; 0x15000
   11f90:	ldr	pc, [ip, #128]!	; 0x80

00011f94 <printf@plt>:
   11f94:	add	ip, pc, #0, 12
   11f98:	add	ip, ip, #86016	; 0x15000
   11f9c:	ldr	pc, [ip, #120]!	; 0x78

00011fa0 <free@plt>:
   11fa0:	add	ip, pc, #0, 12
   11fa4:	add	ip, ip, #86016	; 0x15000
   11fa8:	ldr	pc, [ip, #112]!	; 0x70

00011fac <time@plt>:
   11fac:	add	ip, pc, #0, 12
   11fb0:	add	ip, ip, #86016	; 0x15000
   11fb4:	ldr	pc, [ip, #104]!	; 0x68

00011fb8 <realloc@plt>:
   11fb8:	add	ip, pc, #0, 12
   11fbc:	add	ip, ip, #86016	; 0x15000
   11fc0:	ldr	pc, [ip, #96]!	; 0x60

00011fc4 <strcpy@plt>:
   11fc4:	add	ip, pc, #0, 12
   11fc8:	add	ip, ip, #86016	; 0x15000
   11fcc:	ldr	pc, [ip, #88]!	; 0x58

00011fd0 <puts@plt>:
   11fd0:	add	ip, pc, #0, 12
   11fd4:	add	ip, ip, #86016	; 0x15000
   11fd8:	ldr	pc, [ip, #80]!	; 0x50

00011fdc <malloc@plt>:
   11fdc:	add	ip, pc, #0, 12
   11fe0:	add	ip, ip, #86016	; 0x15000
   11fe4:	ldr	pc, [ip, #72]!	; 0x48

00011fe8 <__libc_start_main@plt>:
   11fe8:	add	ip, pc, #0, 12
   11fec:	add	ip, ip, #86016	; 0x15000
   11ff0:	ldr	pc, [ip, #64]!	; 0x40

00011ff4 <__gmon_start__@plt>:
   11ff4:	add	ip, pc, #0, 12
   11ff8:	add	ip, ip, #86016	; 0x15000
   11ffc:	ldr	pc, [ip, #56]!	; 0x38

00012000 <strlen@plt>:
   12000:	add	ip, pc, #0, 12
   12004:	add	ip, ip, #86016	; 0x15000
   12008:	ldr	pc, [ip, #48]!	; 0x30

0001200c <srand@plt>:
   1200c:	add	ip, pc, #0, 12
   12010:	add	ip, ip, #86016	; 0x15000
   12014:	ldr	pc, [ip, #40]!	; 0x28

00012018 <snprintf@plt>:
   12018:	add	ip, pc, #0, 12
   1201c:	add	ip, ip, #86016	; 0x15000
   12020:	ldr	pc, [ip, #32]!

00012024 <__isoc99_sscanf@plt>:
   12024:	add	ip, pc, #0, 12
   12028:	add	ip, ip, #86016	; 0x15000
   1202c:	ldr	pc, [ip, #24]!

00012030 <rand@plt>:
   12030:	add	ip, pc, #0, 12
   12034:	add	ip, ip, #86016	; 0x15000
   12038:	ldr	pc, [ip, #16]!

0001203c <abort@plt>:
   1203c:	add	ip, pc, #0, 12
   12040:	add	ip, ip, #86016	; 0x15000
   12044:	ldr	pc, [ip, #8]!

Disassembly of section .text:

00012048 <_start@@Base>:
   12048:	mov	fp, #0
   1204c:	mov	lr, #0
   12050:	pop	{r1}		; (ldr r1, [sp], #4)
   12054:	mov	r2, sp
   12058:	push	{r2}		; (str r2, [sp, #-4]!)
   1205c:	push	{r0}		; (str r0, [sp, #-4]!)
   12060:	ldr	ip, [pc, #16]	; 12078 <_start@@Base+0x30>
   12064:	push	{ip}		; (str ip, [sp, #-4]!)
   12068:	ldr	r0, [pc, #12]	; 1207c <_start@@Base+0x34>
   1206c:	ldr	r3, [pc, #12]	; 12080 <_start@@Base+0x38>
   12070:	bl	11fe8 <__libc_start_main@plt>
   12074:	bl	1203c <abort@plt>
   12078:	ldrdeq	r5, [r1], -r0
   1207c:	andeq	r2, r1, r8, lsr r1
   12080:	andeq	r5, r1, r0, ror sp
   12084:	ldr	r3, [pc, #20]	; 120a0 <_start@@Base+0x58>
   12088:	ldr	r2, [pc, #20]	; 120a4 <_start@@Base+0x5c>
   1208c:	add	r3, pc, r3
   12090:	ldr	r2, [r3, r2]
   12094:	cmp	r2, #0
   12098:	bxeq	lr
   1209c:	b	11ff4 <__gmon_start__@plt>
   120a0:	andeq	r4, r1, ip, ror #30
   120a4:	andeq	r0, r0, r0, asr r0
   120a8:	ldr	r0, [pc, #24]	; 120c8 <_start@@Base+0x80>
   120ac:	ldr	r3, [pc, #24]	; 120cc <_start@@Base+0x84>
   120b0:	cmp	r3, r0
   120b4:	bxeq	lr
   120b8:	ldr	r3, [pc, #16]	; 120d0 <_start@@Base+0x88>
   120bc:	cmp	r3, #0
   120c0:	bxeq	lr
   120c4:	bx	r3
   120c8:	andeq	r7, r2, ip, asr r0
   120cc:	andeq	r7, r2, ip, asr r0
   120d0:	andeq	r0, r0, r0
   120d4:	ldr	r0, [pc, #36]	; 12100 <_start@@Base+0xb8>
   120d8:	ldr	r1, [pc, #36]	; 12104 <_start@@Base+0xbc>
   120dc:	sub	r1, r1, r0
   120e0:	asr	r1, r1, #2
   120e4:	add	r1, r1, r1, lsr #31
   120e8:	asrs	r1, r1, #1
   120ec:	bxeq	lr
   120f0:	ldr	r3, [pc, #16]	; 12108 <_start@@Base+0xc0>
   120f4:	cmp	r3, #0
   120f8:	bxeq	lr
   120fc:	bx	r3
   12100:	andeq	r7, r2, ip, asr r0
   12104:	andeq	r7, r2, ip, asr r0
   12108:	andeq	r0, r0, r0
   1210c:	push	{r4, lr}
   12110:	ldr	r4, [pc, #24]	; 12130 <_start@@Base+0xe8>
   12114:	ldrb	r3, [r4]
   12118:	cmp	r3, #0
   1211c:	popne	{r4, pc}
   12120:	bl	120a8 <_start@@Base+0x60>
   12124:	mov	r3, #1
   12128:	strb	r3, [r4]
   1212c:	pop	{r4, pc}
   12130:	andeq	r7, r2, ip, asr r0
   12134:	b	120d4 <_start@@Base+0x8c>

00012138 <main@@Base>:
   12138:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1213c:	add	fp, sp, #28
   12140:	sub	sp, sp, #356	; 0x164
   12144:	sub	r0, fp, #92	; 0x5c
   12148:	bl	11fac <time@plt>
   1214c:	bl	1200c <srand@plt>
   12150:	bl	12030 <rand@plt>
   12154:	sub	r4, fp, #88	; 0x58
   12158:	mov	r5, r0
   1215c:	mov	r0, r4
   12160:	bl	125ec <table_init@@Base>
   12164:	movw	r0, #34079	; 0x851f
   12168:	mov	r6, #0
   1216c:	movt	r0, #20971	; 0x51eb
   12170:	umull	r0, r1, r5, r0
   12174:	lsr	r0, r1, #5
   12178:	mov	r1, #100	; 0x64
   1217c:	mls	r0, r0, r1, r5
   12180:	add	r5, r0, #100	; 0x64
   12184:	mov	r0, r4
   12188:	bl	14888 <table_add_row@@Base>
   1218c:	add	r6, r6, #1
   12190:	cmp	r6, r5
   12194:	bcc	12184 <main@@Base+0x4c>
   12198:	sub	r8, fp, #88	; 0x58
   1219c:	mov	r0, r8
   121a0:	bl	14880 <table_get_row_length@@Base>
   121a4:	mov	r9, r0
   121a8:	bl	12030 <rand@plt>
   121ac:	movw	r1, #52429	; 0xcccd
   121b0:	ldr	r4, [pc, #964]	; 1257c <main@@Base+0x444>
   121b4:	mov	r5, #0
   121b8:	add	r7, sp, #37	; 0x25
   121bc:	movt	r1, #52428	; 0xcccc
   121c0:	umull	r1, r2, r0, r1
   121c4:	add	r4, pc, r4
   121c8:	lsr	r1, r2, #2
   121cc:	add	r1, r1, r1, lsl #2
   121d0:	sub	r0, r0, r1
   121d4:	add	r6, r0, #2
   121d8:	mov	r0, r7
   121dc:	mov	r1, #255	; 0xff
   121e0:	mov	r2, r4
   121e4:	mov	r3, r5
   121e8:	bl	12018 <snprintf@plt>
   121ec:	mov	r0, r8
   121f0:	mov	r1, r7
   121f4:	mov	r2, #0
   121f8:	bl	13b6c <table_add_column@@Base>
   121fc:	add	r5, r5, #1
   12200:	cmp	r5, r6
   12204:	bcc	121d8 <main@@Base+0xa0>
   12208:	sub	r0, fp, #88	; 0x58
   1220c:	bl	13ae0 <table_get_column_length@@Base>
   12210:	mov	r8, r0
   12214:	cmp	r0, #1
   12218:	blt	12284 <main@@Base+0x14c>
   1221c:	movw	r6, #26215	; 0x6667
   12220:	mov	r4, #0
   12224:	sub	r5, fp, #88	; 0x58
   12228:	movt	r6, #26214	; 0x6666
   1222c:	cmp	r9, #1
   12230:	bge	12248 <main@@Base+0x110>
   12234:	add	r4, r4, #1
   12238:	cmp	r4, r8
   1223c:	beq	12284 <main@@Base+0x14c>
   12240:	cmp	r9, #1
   12244:	blt	12234 <main@@Base+0xfc>
   12248:	mov	r7, #0
   1224c:	bl	12030 <rand@plt>
   12250:	smmul	r1, r0, r6
   12254:	asr	r2, r1, #3
   12258:	add	r1, r2, r1, lsr #31
   1225c:	mov	r2, r4
   12260:	add	r1, r1, r1, lsl #2
   12264:	sub	r3, r0, r1, lsl #2
   12268:	mov	r0, r5
   1226c:	mov	r1, r7
   12270:	bl	14e38 <table_set_int@@Base>
   12274:	add	r7, r7, #1
   12278:	cmp	r9, r7
   1227c:	bne	1224c <main@@Base+0x114>
   12280:	b	12234 <main@@Base+0xfc>
   12284:	mov	r0, r8
   12288:	mov	r1, #4
   1228c:	bl	11f7c <calloc@plt>
   12290:	mov	r5, r0
   12294:	mov	r0, r8
   12298:	mov	r1, #4
   1229c:	bl	11f7c <calloc@plt>
   122a0:	mov	r6, r0
   122a4:	cmp	r8, #1
   122a8:	blt	122d4 <main@@Base+0x19c>
   122ac:	mov	r4, #0
   122b0:	str	r4, [r5, r4, lsl #2]
   122b4:	bl	12030 <rand@plt>
   122b8:	add	r1, r0, r0, lsr #31
   122bc:	bic	r1, r1, #1
   122c0:	sub	r0, r0, r1
   122c4:	str	r0, [r6, r4, lsl #2]
   122c8:	add	r4, r4, #1
   122cc:	cmp	r8, r4
   122d0:	bne	122b0 <main@@Base+0x178>
   122d4:	sub	r0, fp, #88	; 0x58
   122d8:	mov	r1, r5
   122dc:	mov	r2, r6
   122e0:	mov	r3, r8
   122e4:	bl	15970 <table_column_sort@@Base>
   122e8:	cmp	r9, #1
   122ec:	blt	12548 <main@@Base+0x410>
   122f0:	cmp	r8, #1
   122f4:	mov	r0, #0
   122f8:	str	r5, [sp, #8]
   122fc:	mov	r4, #0
   12300:	mvn	r1, #0
   12304:	sub	r5, fp, #88	; 0x58
   12308:	str	r8, [sp, #28]
   1230c:	str	r9, [sp, #24]
   12310:	movwlt	r0, #1
   12314:	str	r0, [sp, #20]
   12318:	mov	r0, #0
   1231c:	str	r0, [sp, #12]
   12320:	mvn	r0, #0
   12324:	str	r0, [sp, #16]
   12328:	b	12340 <main@@Base+0x208>
   1232c:	ldr	r1, [sp, #32]
   12330:	ldr	r9, [sp, #24]
   12334:	add	r4, r4, #1
   12338:	cmp	r4, r9
   1233c:	beq	1243c <main@@Base+0x304>
   12340:	ldr	r2, [sp, #20]
   12344:	clz	r0, r4
   12348:	lsr	r0, r0, #5
   1234c:	orrs	r0, r0, r2
   12350:	bne	12330 <main@@Base+0x1f8>
   12354:	sub	r8, r4, #1
   12358:	mov	r9, #0
   1235c:	cmp	r9, #0
   12360:	str	r1, [sp, #32]
   12364:	beq	123a4 <main@@Base+0x26c>
   12368:	mov	r7, r9
   1236c:	subs	r7, r7, #1
   12370:	blt	123a4 <main@@Base+0x26c>
   12374:	mov	r0, r5
   12378:	mov	r1, r4
   1237c:	mov	r2, r7
   12380:	bl	145d4 <table_get_int@@Base>
   12384:	mov	sl, r0
   12388:	mov	r0, r5
   1238c:	mov	r1, r8
   12390:	mov	r2, r7
   12394:	bl	145d4 <table_get_int@@Base>
   12398:	cmp	sl, r0
   1239c:	beq	1236c <main@@Base+0x234>
   123a0:	b	1232c <main@@Base+0x1f4>
   123a4:	mov	sl, r6
   123a8:	ldr	r6, [r6, r9, lsl #2]
   123ac:	mov	r0, r5
   123b0:	mov	r1, r8
   123b4:	mov	r2, r9
   123b8:	bl	145d4 <table_get_int@@Base>
   123bc:	mov	r7, r0
   123c0:	mov	r0, r5
   123c4:	mov	r1, r4
   123c8:	mov	r2, r9
   123cc:	bl	145d4 <table_get_int@@Base>
   123d0:	cmp	r6, #0
   123d4:	beq	123f4 <main@@Base+0x2bc>
   123d8:	ldr	r1, [sp, #32]
   123dc:	cmp	r7, r0
   123e0:	mov	r6, sl
   123e4:	bge	12428 <main@@Base+0x2f0>
   123e8:	ldr	r0, [pc, #404]	; 12584 <main@@Base+0x44c>
   123ec:	add	r0, pc, r0
   123f0:	b	1240c <main@@Base+0x2d4>
   123f4:	ldr	r1, [sp, #32]
   123f8:	cmp	r7, r0
   123fc:	mov	r6, sl
   12400:	ble	12428 <main@@Base+0x2f0>
   12404:	ldr	r0, [pc, #372]	; 12580 <main@@Base+0x448>
   12408:	add	r0, pc, r0
   1240c:	mov	r1, r4
   12410:	mov	r2, r9
   12414:	bl	11f94 <printf@plt>
   12418:	mvn	r0, #0
   1241c:	mov	r1, r9
   12420:	str	r4, [sp, #16]
   12424:	str	r0, [sp, #12]
   12428:	ldr	r0, [sp, #28]
   1242c:	add	r9, r9, #1
   12430:	cmp	r9, r0
   12434:	bne	1235c <main@@Base+0x224>
   12438:	b	12330 <main@@Base+0x1f8>
   1243c:	ldr	r0, [sp, #16]
   12440:	cmn	r0, #1
   12444:	beq	12550 <main@@Base+0x418>
   12448:	sub	r4, fp, #88	; 0x58
   1244c:	str	r1, [sp, #32]
   12450:	str	r6, [sp, #24]
   12454:	mov	r0, r4
   12458:	bl	14880 <table_get_row_length@@Base>
   1245c:	mov	r0, r4
   12460:	bl	14880 <table_get_row_length@@Base>
   12464:	mov	r4, r0
   12468:	ldr	r0, [pc, #280]	; 12588 <main@@Base+0x450>
   1246c:	add	r0, pc, r0
   12470:	bl	11fd0 <puts@plt>
   12474:	cmp	r4, #1
   12478:	str	r4, [sp, #28]
   1247c:	blt	1253c <main@@Base+0x404>
   12480:	ldr	sl, [sp, #32]
   12484:	ldr	r8, [sp, #16]
   12488:	ldr	r9, [pc, #252]	; 1258c <main@@Base+0x454>
   1248c:	mov	r6, #0
   12490:	sub	r7, fp, #88	; 0x58
   12494:	add	r5, sp, #37	; 0x25
   12498:	add	r9, pc, r9
   1249c:	b	124cc <main@@Base+0x394>
   124a0:	ldr	r0, [pc, #236]	; 12594 <main@@Base+0x45c>
   124a4:	ldr	r1, [pc, #236]	; 12598 <main@@Base+0x460>
   124a8:	cmp	r8, r6
   124ac:	add	r1, pc, r1
   124b0:	add	r0, pc, r0
   124b4:	moveq	r0, r1
   124b8:	bl	11fd0 <puts@plt>
   124bc:	ldr	r0, [sp, #28]
   124c0:	add	r6, r6, #1
   124c4:	cmp	r6, r0
   124c8:	beq	1253c <main@@Base+0x404>
   124cc:	mov	r0, r7
   124d0:	bl	13ae0 <table_get_column_length@@Base>
   124d4:	cmp	r0, #1
   124d8:	mov	r0, #255	; 0xff
   124dc:	blt	124a0 <main@@Base+0x368>
   124e0:	mov	r4, #0
   124e4:	str	r0, [sp]
   124e8:	mov	r0, r7
   124ec:	mov	r1, r6
   124f0:	mov	r2, r4
   124f4:	mov	r3, r5
   124f8:	bl	12fec <table_cell_to_buffer@@Base>
   124fc:	eor	r0, sl, r4
   12500:	eor	r1, r8, r6
   12504:	orrs	r0, r1, r0
   12508:	ldr	r1, [pc, #128]	; 12590 <main@@Base+0x458>
   1250c:	mov	r0, r9
   12510:	add	r1, pc, r1
   12514:	moveq	r0, r1
   12518:	mov	r1, r5
   1251c:	bl	11f94 <printf@plt>
   12520:	mov	r0, r7
   12524:	add	r4, r4, #1
   12528:	bl	13ae0 <table_get_column_length@@Base>
   1252c:	cmp	r4, r0
   12530:	mov	r0, #255	; 0xff
   12534:	blt	124e4 <main@@Base+0x3ac>
   12538:	b	124a0 <main@@Base+0x368>
   1253c:	ldr	r5, [sp, #8]
   12540:	ldr	r6, [sp, #24]
   12544:	b	12554 <main@@Base+0x41c>
   12548:	mov	r4, #0
   1254c:	b	12558 <main@@Base+0x420>
   12550:	ldr	r5, [sp, #8]
   12554:	ldr	r4, [sp, #12]
   12558:	sub	r0, fp, #88	; 0x58
   1255c:	bl	12648 <table_destroy@@Base>
   12560:	mov	r0, r5
   12564:	bl	11fa0 <free@plt>
   12568:	mov	r0, r6
   1256c:	bl	11fa0 <free@plt>
   12570:	mov	r0, r4
   12574:	sub	sp, fp, #28
   12578:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1257c:	andeq	r3, r0, r4, lsl ip
   12580:	ldrdeq	r3, [r0], -r7
   12584:	andeq	r3, r0, fp, lsr sl
   12588:	andeq	r3, r0, lr, lsl #20
   1258c:	ldrdeq	r3, [r0], -sp
   12590:	andeq	r3, r0, r0, ror #18
   12594:	andeq	r3, r0, sl, asr #19
   12598:	andeq	r3, r0, sp, asr #19

0001259c <table_new@@Base>:
   1259c:	push	{fp, lr}
   125a0:	mov	fp, sp
   125a4:	mov	r0, #56	; 0x38
   125a8:	bl	11fdc <malloc@plt>
   125ac:	vmov.i32	q8, #0	; 0x00000000
   125b0:	mov	r1, #0
   125b4:	mov	r2, #10
   125b8:	mov	r3, #20
   125bc:	str	r1, [r0]
   125c0:	stmib	r0, {r1, r2}
   125c4:	str	r1, [r0, #12]
   125c8:	str	r1, [r0, #16]
   125cc:	str	r1, [r0, #20]
   125d0:	str	r3, [r0, #24]
   125d4:	str	r1, [r0, #28]
   125d8:	str	r2, [r0, #48]	; 0x30
   125dc:	str	r1, [r0, #52]	; 0x34
   125e0:	add	r1, r0, #32
   125e4:	vst1.32	{d16-d17}, [r1]
   125e8:	pop	{fp, pc}

000125ec <table_init@@Base>:
   125ec:	vmov.i32	q8, #0	; 0x00000000
   125f0:	mov	r1, #0
   125f4:	mov	r2, #10
   125f8:	mov	r3, #20
   125fc:	str	r1, [r0]
   12600:	stmib	r0, {r1, r2}
   12604:	str	r1, [r0, #12]
   12608:	str	r1, [r0, #16]
   1260c:	str	r1, [r0, #20]
   12610:	str	r3, [r0, #24]
   12614:	str	r1, [r0, #28]
   12618:	str	r2, [r0, #48]	; 0x30
   1261c:	str	r1, [r0, #52]	; 0x34
   12620:	add	r0, r0, #32
   12624:	vst1.32	{d16-d17}, [r0]
   12628:	bx	lr

0001262c <table_delete@@Base>:
   1262c:	push	{r4, sl, fp, lr}
   12630:	add	fp, sp, #8
   12634:	mov	r4, r0
   12638:	bl	12648 <table_destroy@@Base>
   1263c:	mov	r0, r4
   12640:	pop	{r4, sl, fp, lr}
   12644:	b	11fa0 <free@plt>

00012648 <table_destroy@@Base>:
   12648:	cmp	r0, #0
   1264c:	bxeq	lr
   12650:	push	{r4, r5, r6, sl, fp, lr}
   12654:	add	fp, sp, #16
   12658:	mvn	r1, #0
   1265c:	mvn	r2, #0
   12660:	mov	r3, #64	; 0x40
   12664:	mov	r4, r0
   12668:	bl	12ee0 <table_notify@@Base>
   1266c:	mov	r0, r4
   12670:	bl	14880 <table_get_row_length@@Base>
   12674:	cmp	r0, #1
   12678:	blt	1269c <table_destroy@@Base+0x54>
   1267c:	mov	r5, r0
   12680:	mov	r6, #0
   12684:	mov	r0, r4
   12688:	mov	r1, r6
   1268c:	bl	14824 <table_row_destroy@@Base>
   12690:	add	r6, r6, #1
   12694:	cmp	r5, r6
   12698:	bne	12684 <table_destroy@@Base+0x3c>
   1269c:	ldr	r0, [r4, #16]
   126a0:	cmp	r0, #0
   126a4:	beq	126ac <table_destroy@@Base+0x64>
   126a8:	bl	11fa0 <free@plt>
   126ac:	mov	r0, r4
   126b0:	bl	13ae0 <table_get_column_length@@Base>
   126b4:	cmp	r0, #1
   126b8:	blt	126dc <table_destroy@@Base+0x94>
   126bc:	mov	r5, r0
   126c0:	mov	r6, #0
   126c4:	mov	r0, r4
   126c8:	mov	r1, r6
   126cc:	bl	13ac8 <table_column_destroy@@Base>
   126d0:	add	r6, r6, #1
   126d4:	cmp	r5, r6
   126d8:	bne	126c4 <table_destroy@@Base+0x7c>
   126dc:	ldr	r0, [r4]
   126e0:	cmp	r0, #0
   126e4:	beq	126ec <table_destroy@@Base+0xa4>
   126e8:	bl	11fa0 <free@plt>
   126ec:	ldr	r0, [r4, #36]	; 0x24
   126f0:	cmp	r0, #0
   126f4:	beq	126fc <table_destroy@@Base+0xb4>
   126f8:	bl	11fa0 <free@plt>
   126fc:	ldr	r0, [r4, #40]	; 0x28
   12700:	cmp	r0, #0
   12704:	beq	1270c <table_destroy@@Base+0xc4>
   12708:	bl	11fa0 <free@plt>
   1270c:	ldr	r0, [r4, #44]	; 0x2c
   12710:	cmp	r0, #0
   12714:	pop	{r4, r5, r6, sl, fp, lr}
   12718:	beq	12720 <table_destroy@@Base+0xd8>
   1271c:	b	11fa0 <free@plt>
   12720:	bx	lr

00012724 <table_dupe@@Base>:
   12724:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12728:	add	fp, sp, #28
   1272c:	sub	sp, sp, #12
   12730:	mov	r4, r0
   12734:	bl	14880 <table_get_row_length@@Base>
   12738:	mov	r8, r0
   1273c:	mov	r0, r4
   12740:	bl	13ae0 <table_get_column_length@@Base>
   12744:	mov	r6, r0
   12748:	mov	r0, #56	; 0x38
   1274c:	bl	11fdc <malloc@plt>
   12750:	vmov.i32	q8, #0	; 0x00000000
   12754:	mov	sl, r0
   12758:	mov	r5, #0
   1275c:	mov	r0, #10
   12760:	mov	r1, #20
   12764:	cmp	r6, #1
   12768:	str	r5, [sl]
   1276c:	str	r5, [sl, #4]
   12770:	str	r0, [sl, #8]
   12774:	str	r5, [sl, #12]
   12778:	str	r5, [sl, #16]
   1277c:	str	r5, [sl, #20]
   12780:	str	r1, [sl, #24]
   12784:	str	r5, [sl, #28]
   12788:	str	r0, [sl, #48]	; 0x30
   1278c:	add	r0, sl, #32
   12790:	str	r5, [sl, #52]	; 0x34
   12794:	vst1.32	{d16-d17}, [r0]
   12798:	blt	127d4 <table_dupe@@Base+0xb0>
   1279c:	mov	r0, r4
   127a0:	mov	r1, r5
   127a4:	bl	13b48 <table_get_column_name@@Base>
   127a8:	mov	r7, r0
   127ac:	mov	r0, r4
   127b0:	mov	r1, r5
   127b4:	bl	13b58 <table_get_column_data_type@@Base>
   127b8:	mov	r2, r0
   127bc:	mov	r0, sl
   127c0:	mov	r1, r7
   127c4:	bl	13b6c <table_add_column@@Base>
   127c8:	add	r5, r5, #1
   127cc:	cmp	r6, r5
   127d0:	bne	1279c <table_dupe@@Base+0x78>
   127d4:	cmp	r8, #1
   127d8:	blt	12c4c <table_dupe@@Base+0x528>
   127dc:	mov	r5, #0
   127e0:	add	r9, sp, #8
   127e4:	b	127f4 <table_dupe@@Base+0xd0>
   127e8:	add	r5, r5, #1
   127ec:	cmp	r5, r8
   127f0:	beq	12c4c <table_dupe@@Base+0x528>
   127f4:	mov	r0, sl
   127f8:	bl	14888 <table_add_row@@Base>
   127fc:	cmp	r6, #1
   12800:	blt	127e8 <table_dupe@@Base+0xc4>
   12804:	mov	r7, #0
   12808:	b	12840 <table_dupe@@Base+0x11c>
   1280c:	mov	r0, r4
   12810:	mov	r1, r5
   12814:	mov	r2, r7
   12818:	bl	147e0 <table_get_ptr@@Base>
   1281c:	str	r0, [sp, #8]
   12820:	mov	r0, sl
   12824:	mov	r1, r5
   12828:	mov	r2, r7
   1282c:	mov	r3, r9
   12830:	bl	15914 <table_set_ptr@@Base>
   12834:	add	r7, r7, #1
   12838:	cmp	r6, r7
   1283c:	beq	127e8 <table_dupe@@Base+0xc4>
   12840:	mov	r0, r4
   12844:	mov	r1, r7
   12848:	bl	13b58 <table_get_column_data_type@@Base>
   1284c:	cmp	r0, #23
   12850:	bhi	12834 <table_dupe@@Base+0x110>
   12854:	add	r1, pc, #4
   12858:	ldr	r0, [r1, r0, lsl #2]
   1285c:	add	pc, r1, r0
   12860:	andeq	r0, r0, r0, rrx
   12864:	andeq	r0, r0, r8, lsl #1
   12868:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   1286c:	ldrdeq	r0, [r0], -r8
   12870:	andeq	r0, r0, r0, lsl #2
   12874:	andeq	r0, r0, r8, lsr #2
   12878:	andeq	r0, r0, r0, asr r1
   1287c:	andeq	r0, r0, r8, ror r1
   12880:	andeq	r0, r0, r0, lsr #3
   12884:	andeq	r0, r0, r8, asr #3
   12888:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1288c:	andeq	r0, r0, r8, lsl r2
   12890:	andeq	r0, r0, r0, asr #4
   12894:	andeq	r0, r0, r8, ror #4
   12898:	muleq	r0, r0, r2
   1289c:			; <UNDEFINED> instruction: 0x000002b8
   128a0:	andeq	r0, r0, r0, ror #5
   128a4:	andeq	r0, r0, r4, lsl #6
   128a8:	andeq	r0, r0, r8, lsr #6
   128ac:	andeq	r0, r0, ip, asr #6
   128b0:	andeq	r0, r0, r4, ror r3
   128b4:	muleq	r0, ip, r3
   128b8:	andeq	r0, r0, r4, asr #7
   128bc:			; <UNDEFINED> instruction: 0xffffffac
   128c0:	mov	r0, r4
   128c4:	mov	r1, r5
   128c8:	mov	r2, r7
   128cc:	bl	145d4 <table_get_int@@Base>
   128d0:	mov	r3, r0
   128d4:	mov	r0, sl
   128d8:	mov	r1, r5
   128dc:	mov	r2, r7
   128e0:	bl	14e38 <table_set_int@@Base>
   128e4:	b	12834 <table_dupe@@Base+0x110>
   128e8:	mov	r0, r4
   128ec:	mov	r1, r5
   128f0:	mov	r2, r7
   128f4:	bl	145ec <table_get_uint@@Base>
   128f8:	mov	r3, r0
   128fc:	mov	r0, sl
   12900:	mov	r1, r5
   12904:	mov	r2, r7
   12908:	bl	14eb8 <table_set_uint@@Base>
   1290c:	b	12834 <table_dupe@@Base+0x110>
   12910:	mov	r0, r4
   12914:	mov	r1, r5
   12918:	mov	r2, r7
   1291c:	bl	14604 <table_get_int8@@Base>
   12920:	mov	r3, r0
   12924:	mov	r0, sl
   12928:	mov	r1, r5
   1292c:	mov	r2, r7
   12930:	bl	14f38 <table_set_int8@@Base>
   12934:	b	12834 <table_dupe@@Base+0x110>
   12938:	mov	r0, r4
   1293c:	mov	r1, r5
   12940:	mov	r2, r7
   12944:	bl	1461c <table_get_uint8@@Base>
   12948:	mov	r3, r0
   1294c:	mov	r0, sl
   12950:	mov	r1, r5
   12954:	mov	r2, r7
   12958:	bl	14fb8 <table_set_uint8@@Base>
   1295c:	b	12834 <table_dupe@@Base+0x110>
   12960:	mov	r0, r4
   12964:	mov	r1, r5
   12968:	mov	r2, r7
   1296c:	bl	14634 <table_get_int16@@Base>
   12970:	mov	r3, r0
   12974:	mov	r0, sl
   12978:	mov	r1, r5
   1297c:	mov	r2, r7
   12980:	bl	15038 <table_set_int16@@Base>
   12984:	b	12834 <table_dupe@@Base+0x110>
   12988:	mov	r0, r4
   1298c:	mov	r1, r5
   12990:	mov	r2, r7
   12994:	bl	1464c <table_get_uint16@@Base>
   12998:	mov	r3, r0
   1299c:	mov	r0, sl
   129a0:	mov	r1, r5
   129a4:	mov	r2, r7
   129a8:	bl	150b8 <table_set_uint16@@Base>
   129ac:	b	12834 <table_dupe@@Base+0x110>
   129b0:	mov	r0, r4
   129b4:	mov	r1, r5
   129b8:	mov	r2, r7
   129bc:	bl	14664 <table_get_int32@@Base>
   129c0:	mov	r3, r0
   129c4:	mov	r0, sl
   129c8:	mov	r1, r5
   129cc:	mov	r2, r7
   129d0:	bl	15138 <table_set_int32@@Base>
   129d4:	b	12834 <table_dupe@@Base+0x110>
   129d8:	mov	r0, r4
   129dc:	mov	r1, r5
   129e0:	mov	r2, r7
   129e4:	bl	1467c <table_get_uint32@@Base>
   129e8:	mov	r3, r0
   129ec:	mov	r0, sl
   129f0:	mov	r1, r5
   129f4:	mov	r2, r7
   129f8:	bl	151b8 <table_set_uint32@@Base>
   129fc:	b	12834 <table_dupe@@Base+0x110>
   12a00:	mov	r0, r4
   12a04:	mov	r1, r5
   12a08:	mov	r2, r7
   12a0c:	bl	14694 <table_get_int64@@Base>
   12a10:	stm	sp, {r0, r1}
   12a14:	mov	r0, sl
   12a18:	mov	r1, r5
   12a1c:	mov	r2, r7
   12a20:	bl	15238 <table_set_int64@@Base>
   12a24:	b	12834 <table_dupe@@Base+0x110>
   12a28:	mov	r0, r4
   12a2c:	mov	r1, r5
   12a30:	mov	r2, r7
   12a34:	bl	146ac <table_get_uint64@@Base>
   12a38:	stm	sp, {r0, r1}
   12a3c:	mov	r0, sl
   12a40:	mov	r1, r5
   12a44:	mov	r2, r7
   12a48:	bl	152c0 <table_set_uint64@@Base>
   12a4c:	b	12834 <table_dupe@@Base+0x110>
   12a50:	mov	r0, r4
   12a54:	mov	r1, r5
   12a58:	mov	r2, r7
   12a5c:	bl	146c4 <table_get_short@@Base>
   12a60:	mov	r3, r0
   12a64:	mov	r0, sl
   12a68:	mov	r1, r5
   12a6c:	mov	r2, r7
   12a70:	bl	15348 <table_set_short@@Base>
   12a74:	b	12834 <table_dupe@@Base+0x110>
   12a78:	mov	r0, r4
   12a7c:	mov	r1, r5
   12a80:	mov	r2, r7
   12a84:	bl	146dc <table_get_ushort@@Base>
   12a88:	mov	r3, r0
   12a8c:	mov	r0, sl
   12a90:	mov	r1, r5
   12a94:	mov	r2, r7
   12a98:	bl	153c8 <table_set_ushort@@Base>
   12a9c:	b	12834 <table_dupe@@Base+0x110>
   12aa0:	mov	r0, r4
   12aa4:	mov	r1, r5
   12aa8:	mov	r2, r7
   12aac:	bl	146f4 <table_get_long@@Base>
   12ab0:	mov	r3, r0
   12ab4:	mov	r0, sl
   12ab8:	mov	r1, r5
   12abc:	mov	r2, r7
   12ac0:	bl	15448 <table_set_long@@Base>
   12ac4:	b	12834 <table_dupe@@Base+0x110>
   12ac8:	mov	r0, r4
   12acc:	mov	r1, r5
   12ad0:	mov	r2, r7
   12ad4:	bl	1470c <table_get_ulong@@Base>
   12ad8:	mov	r3, r0
   12adc:	mov	r0, sl
   12ae0:	mov	r1, r5
   12ae4:	mov	r2, r7
   12ae8:	bl	154c8 <table_set_ulong@@Base>
   12aec:	b	12834 <table_dupe@@Base+0x110>
   12af0:	mov	r0, r4
   12af4:	mov	r1, r5
   12af8:	mov	r2, r7
   12afc:	bl	14724 <table_get_llong@@Base>
   12b00:	stm	sp, {r0, r1}
   12b04:	mov	r0, sl
   12b08:	mov	r1, r5
   12b0c:	mov	r2, r7
   12b10:	bl	15548 <table_set_llong@@Base>
   12b14:	b	12834 <table_dupe@@Base+0x110>
   12b18:	mov	r0, r4
   12b1c:	mov	r1, r5
   12b20:	mov	r2, r7
   12b24:	bl	1473c <table_get_ullong@@Base>
   12b28:	stm	sp, {r0, r1}
   12b2c:	mov	r0, sl
   12b30:	mov	r1, r5
   12b34:	mov	r2, r7
   12b38:	bl	155d0 <table_set_ullong@@Base>
   12b3c:	b	12834 <table_dupe@@Base+0x110>
   12b40:	mov	r0, r4
   12b44:	mov	r1, r5
   12b48:	mov	r2, r7
   12b4c:	bl	14754 <table_get_float@@Base>
   12b50:	mov	r0, sl
   12b54:	mov	r1, r5
   12b58:	mov	r2, r7
   12b5c:	bl	15658 <table_set_float@@Base>
   12b60:	b	12834 <table_dupe@@Base+0x110>
   12b64:	mov	r0, r4
   12b68:	mov	r1, r5
   12b6c:	mov	r2, r7
   12b70:	bl	1476c <table_get_double@@Base>
   12b74:	mov	r0, sl
   12b78:	mov	r1, r5
   12b7c:	mov	r2, r7
   12b80:	bl	156e4 <table_set_double@@Base>
   12b84:	b	12834 <table_dupe@@Base+0x110>
   12b88:	mov	r0, r4
   12b8c:	mov	r1, r5
   12b90:	mov	r2, r7
   12b94:	bl	14784 <table_get_ldouble@@Base>
   12b98:	mov	r0, sl
   12b9c:	mov	r1, r5
   12ba0:	mov	r2, r7
   12ba4:	bl	1576c <table_set_ldouble@@Base>
   12ba8:	b	12834 <table_dupe@@Base+0x110>
   12bac:	mov	r0, r4
   12bb0:	mov	r1, r5
   12bb4:	mov	r2, r7
   12bb8:	bl	1479c <table_get_char@@Base>
   12bbc:	mov	r3, r0
   12bc0:	mov	r0, sl
   12bc4:	mov	r1, r5
   12bc8:	mov	r2, r7
   12bcc:	bl	15814 <table_set_char@@Base>
   12bd0:	b	12834 <table_dupe@@Base+0x110>
   12bd4:	mov	r0, r4
   12bd8:	mov	r1, r5
   12bdc:	mov	r2, r7
   12be0:	bl	147b4 <table_get_uchar@@Base>
   12be4:	mov	r3, r0
   12be8:	mov	r0, sl
   12bec:	mov	r1, r5
   12bf0:	mov	r2, r7
   12bf4:	bl	15894 <table_set_uchar@@Base>
   12bf8:	b	12834 <table_dupe@@Base+0x110>
   12bfc:	mov	r0, r4
   12c00:	mov	r1, r5
   12c04:	mov	r2, r7
   12c08:	bl	147cc <table_get_string@@Base>
   12c0c:	mov	r3, r0
   12c10:	mov	r0, sl
   12c14:	mov	r1, r5
   12c18:	mov	r2, r7
   12c1c:	bl	157f4 <table_set_string@@Base>
   12c20:	b	12834 <table_dupe@@Base+0x110>
   12c24:	mov	r0, r4
   12c28:	mov	r1, r5
   12c2c:	mov	r2, r7
   12c30:	bl	145bc <table_get_bool@@Base>
   12c34:	mov	r3, r0
   12c38:	mov	r0, sl
   12c3c:	mov	r1, r5
   12c40:	mov	r2, r7
   12c44:	bl	14db8 <table_set_bool@@Base>
   12c48:	b	12834 <table_dupe@@Base+0x110>
   12c4c:	mov	r0, sl
   12c50:	sub	sp, fp, #28
   12c54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012c58 <table_get_major_version@@Base>:
   12c58:	mov	r0, #0
   12c5c:	bx	lr

00012c60 <table_get_minor_version@@Base>:
   12c60:	mov	r0, #0
   12c64:	bx	lr

00012c68 <table_get_patch_version@@Base>:
   12c68:	mov	r0, #0
   12c6c:	bx	lr

00012c70 <table_get_version@@Base>:
   12c70:	ldr	r0, [pc, #4]	; 12c7c <table_get_version@@Base+0xc>
   12c74:	add	r0, pc, r0
   12c78:	bx	lr
   12c7c:	andeq	r3, r0, r0, lsl #4

00012c80 <table_get_callback_length@@Base>:
   12c80:	ldr	r0, [r0, #32]
   12c84:	bx	lr

00012c88 <table_register_callback@@Base>:
   12c88:	push	{r4, r5, r6, r7, fp, lr}
   12c8c:	add	fp, sp, #16
   12c90:	mov	r5, r0
   12c94:	ldr	r0, [r0, #32]
   12c98:	mov	r4, r3
   12c9c:	mov	r6, r2
   12ca0:	mov	r7, r1
   12ca4:	cmp	r0, #1
   12ca8:	blt	12cfc <table_register_callback@@Base+0x74>
   12cac:	ldr	r2, [r5, #36]	; 0x24
   12cb0:	mov	r1, #0
   12cb4:	b	12cc4 <table_register_callback@@Base+0x3c>
   12cb8:	add	r1, r1, #1
   12cbc:	cmp	r0, r1
   12cc0:	beq	12cfc <table_register_callback@@Base+0x74>
   12cc4:	ldr	r3, [r2, r1, lsl #2]
   12cc8:	cmp	r3, r7
   12ccc:	bne	12cb8 <table_register_callback@@Base+0x30>
   12cd0:	ldr	r3, [r5, #40]	; 0x28
   12cd4:	ldr	r3, [r3, r1, lsl #2]
   12cd8:	cmp	r3, r6
   12cdc:	bne	12cb8 <table_register_callback@@Base+0x30>
   12ce0:	cmp	r1, #0
   12ce4:	beq	12cfc <table_register_callback@@Base+0x74>
   12ce8:	ldr	r0, [r5, #44]	; 0x2c
   12cec:	ldr	r2, [r0, r1, lsl #2]
   12cf0:	orr	r2, r2, r4
   12cf4:	str	r2, [r0, r1, lsl #2]
   12cf8:	pop	{r4, r5, r6, r7, fp, pc}
   12cfc:	ldr	r1, [r5, #48]	; 0x30
   12d00:	udiv	r2, r0, r1
   12d04:	mls	r2, r2, r1, r0
   12d08:	cmp	r2, #0
   12d0c:	bne	12d58 <table_register_callback@@Base+0xd0>
   12d10:	ldr	r2, [r5, #52]	; 0x34
   12d14:	ldr	r0, [r5, #36]	; 0x24
   12d18:	add	r1, r2, r1
   12d1c:	str	r1, [r5, #52]	; 0x34
   12d20:	lsl	r1, r1, #2
   12d24:	bl	11fb8 <realloc@plt>
   12d28:	str	r0, [r5, #36]	; 0x24
   12d2c:	ldr	r1, [r5, #52]	; 0x34
   12d30:	ldr	r0, [r5, #40]	; 0x28
   12d34:	lsl	r1, r1, #2
   12d38:	bl	11fb8 <realloc@plt>
   12d3c:	str	r0, [r5, #40]	; 0x28
   12d40:	ldr	r1, [r5, #52]	; 0x34
   12d44:	ldr	r0, [r5, #44]	; 0x2c
   12d48:	lsl	r1, r1, #2
   12d4c:	bl	11fb8 <realloc@plt>
   12d50:	str	r0, [r5, #44]	; 0x2c
   12d54:	ldr	r0, [r5, #32]
   12d58:	ldr	r1, [r5, #36]	; 0x24
   12d5c:	str	r7, [r1, r0, lsl #2]
   12d60:	ldr	r1, [r5, #40]	; 0x28
   12d64:	str	r6, [r1, r0, lsl #2]
   12d68:	ldr	r1, [r5, #44]	; 0x2c
   12d6c:	str	r4, [r1, r0, lsl #2]
   12d70:	ldr	r0, [r5, #32]
   12d74:	add	r0, r0, #1
   12d78:	str	r0, [r5, #32]
   12d7c:	pop	{r4, r5, r6, r7, fp, pc}

00012d80 <table_unregister_callback@@Base>:
   12d80:	push	{r4, r5, r6, sl, fp, lr}
   12d84:	add	fp, sp, #16
   12d88:	ldr	r4, [r0, #32]
   12d8c:	cmp	r4, #1
   12d90:	blt	12edc <table_unregister_callback@@Base+0x15c>
   12d94:	ldr	r3, [r0, #36]	; 0x24
   12d98:	mov	r6, r0
   12d9c:	mov	r0, #0
   12da0:	b	12db0 <table_unregister_callback@@Base+0x30>
   12da4:	add	r0, r0, #1
   12da8:	cmp	r0, r4
   12dac:	beq	12edc <table_unregister_callback@@Base+0x15c>
   12db0:	ldr	r5, [r3, r0, lsl #2]
   12db4:	cmp	r5, r1
   12db8:	bne	12da4 <table_unregister_callback@@Base+0x24>
   12dbc:	ldr	r5, [r6, #40]	; 0x28
   12dc0:	ldr	r5, [r5, r0, lsl #2]
   12dc4:	cmp	r5, r2
   12dc8:	bne	12da4 <table_unregister_callback@@Base+0x24>
   12dcc:	sub	r1, r4, #1
   12dd0:	cmp	r0, r1
   12dd4:	bge	12e58 <table_unregister_callback@@Base+0xd8>
   12dd8:	add	r2, r0, #1
   12ddc:	ldr	r1, [r3, r2, lsl #2]
   12de0:	str	r1, [r3, r0, lsl #2]
   12de4:	ldr	r1, [r6, #40]	; 0x28
   12de8:	ldr	r3, [r1, r2, lsl #2]
   12dec:	str	r3, [r1, r0, lsl #2]
   12df0:	ldr	r1, [r6, #44]	; 0x2c
   12df4:	ldr	r3, [r1, r2, lsl #2]
   12df8:	str	r3, [r1, r0, lsl #2]
   12dfc:	ldr	r1, [r6, #32]
   12e00:	sub	r1, r1, #1
   12e04:	cmp	r2, r1
   12e08:	bge	12e58 <table_unregister_callback@@Base+0xd8>
   12e0c:	ldr	r1, [r6, #36]	; 0x24
   12e10:	add	r1, r1, r0, lsl #2
   12e14:	ldr	r2, [r1, #8]
   12e18:	str	r2, [r1, #4]
   12e1c:	ldr	r1, [r6, #40]	; 0x28
   12e20:	add	r1, r1, r0, lsl #2
   12e24:	ldr	r2, [r1, #8]
   12e28:	str	r2, [r1, #4]
   12e2c:	ldr	r1, [r6, #44]	; 0x2c
   12e30:	add	r1, r1, r0, lsl #2
   12e34:	ldr	r2, [r1, #8]
   12e38:	str	r2, [r1, #4]
   12e3c:	add	r2, r0, #1
   12e40:	add	r0, r0, #2
   12e44:	ldr	r1, [r6, #32]
   12e48:	sub	r1, r1, #1
   12e4c:	cmp	r0, r1
   12e50:	mov	r0, r2
   12e54:	blt	12e0c <table_unregister_callback@@Base+0x8c>
   12e58:	str	r1, [r6, #32]
   12e5c:	ldr	r2, [r6, #48]	; 0x30
   12e60:	udiv	r0, r1, r2
   12e64:	mls	r0, r0, r2, r1
   12e68:	cmp	r0, #0
   12e6c:	popne	{r4, r5, r6, sl, fp, pc}
   12e70:	ldr	r1, [r6, #52]	; 0x34
   12e74:	ldr	r0, [r6, #36]	; 0x24
   12e78:	subs	r1, r1, r2
   12e7c:	str	r1, [r6, #52]	; 0x34
   12e80:	beq	12eb8 <table_unregister_callback@@Base+0x138>
   12e84:	lsl	r1, r1, #2
   12e88:	bl	11fb8 <realloc@plt>
   12e8c:	str	r0, [r6, #36]	; 0x24
   12e90:	ldr	r1, [r6, #52]	; 0x34
   12e94:	ldr	r0, [r6, #40]	; 0x28
   12e98:	lsl	r1, r1, #2
   12e9c:	bl	11fb8 <realloc@plt>
   12ea0:	str	r0, [r6, #40]	; 0x28
   12ea4:	ldr	r1, [r6, #52]	; 0x34
   12ea8:	ldr	r0, [r6, #44]	; 0x2c
   12eac:	lsl	r1, r1, #2
   12eb0:	bl	11fb8 <realloc@plt>
   12eb4:	b	12ed8 <table_unregister_callback@@Base+0x158>
   12eb8:	bl	11fa0 <free@plt>
   12ebc:	ldr	r0, [r6, #40]	; 0x28
   12ec0:	bl	11fa0 <free@plt>
   12ec4:	ldr	r0, [r6, #44]	; 0x2c
   12ec8:	bl	11fa0 <free@plt>
   12ecc:	mov	r0, #0
   12ed0:	str	r0, [r6, #36]	; 0x24
   12ed4:	str	r0, [r6, #40]	; 0x28
   12ed8:	str	r0, [r6, #44]	; 0x2c
   12edc:	pop	{r4, r5, r6, sl, fp, pc}

00012ee0 <table_notify@@Base>:
   12ee0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12ee4:	add	fp, sp, #24
   12ee8:	sub	sp, sp, #8
   12eec:	mov	r7, r0
   12ef0:	ldr	r0, [r0, #32]
   12ef4:	cmp	r0, #1
   12ef8:	blt	12f5c <table_notify@@Base+0x7c>
   12efc:	mov	r4, r3
   12f00:	mov	r8, r2
   12f04:	mov	r9, r1
   12f08:	mov	r5, #0
   12f0c:	b	12f1c <table_notify@@Base+0x3c>
   12f10:	add	r5, r5, #1
   12f14:	cmp	r5, r0
   12f18:	bge	12f5c <table_notify@@Base+0x7c>
   12f1c:	ldr	r1, [r7, #44]	; 0x2c
   12f20:	ldr	r1, [r1, r5, lsl #2]
   12f24:	tst	r1, r4
   12f28:	beq	12f10 <table_notify@@Base+0x30>
   12f2c:	ldr	r0, [r7, #36]	; 0x24
   12f30:	ldr	r1, [r7, #40]	; 0x28
   12f34:	mov	r2, r8
   12f38:	mov	r3, r4
   12f3c:	ldr	r6, [r0, r5, lsl #2]
   12f40:	ldr	r0, [r1, r5, lsl #2]
   12f44:	mov	r1, r9
   12f48:	str	r0, [sp]
   12f4c:	mov	r0, r7
   12f50:	blx	r6
   12f54:	ldr	r0, [r7, #32]
   12f58:	b	12f10 <table_notify@@Base+0x30>
   12f5c:	sub	sp, fp, #24
   12f60:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012f64 <table_cell_init@@Base>:
   12f64:	push	{r4, sl, fp, lr}
   12f68:	add	fp, sp, #8
   12f6c:	mov	r4, r2
   12f70:	bl	14818 <table_get_row_ptr@@Base>
   12f74:	ldr	r0, [r0]
   12f78:	mov	r1, #0
   12f7c:	str	r1, [r0, r4, lsl #2]
   12f80:	pop	{r4, sl, fp, pc}

00012f84 <table_get_cell_ptr@@Base>:
   12f84:	push	{r4, sl, fp, lr}
   12f88:	add	fp, sp, #8
   12f8c:	mov	r4, r2
   12f90:	bl	14818 <table_get_row_ptr@@Base>
   12f94:	ldr	r0, [r0]
   12f98:	add	r0, r0, r4, lsl #2
   12f9c:	pop	{r4, sl, fp, pc}

00012fa0 <table_cell_destroy@@Base>:
   12fa0:	push	{r4, r5, r6, sl, fp, lr}
   12fa4:	add	fp, sp, #16
   12fa8:	mov	r5, r1
   12fac:	mov	r1, r2
   12fb0:	mov	r4, r2
   12fb4:	mov	r6, r0
   12fb8:	bl	13b58 <table_get_column_data_type@@Base>
   12fbc:	cmp	r0, #23
   12fc0:	popeq	{r4, r5, r6, sl, fp, pc}
   12fc4:	mov	r0, r6
   12fc8:	mov	r1, r5
   12fcc:	bl	14818 <table_get_row_ptr@@Base>
   12fd0:	ldr	r0, [r0]
   12fd4:	ldr	r0, [r0, r4, lsl #2]
   12fd8:	cmp	r0, #0
   12fdc:	beq	12fe8 <table_cell_destroy@@Base+0x48>
   12fe0:	pop	{r4, r5, r6, sl, fp, lr}
   12fe4:	b	11fa0 <free@plt>
   12fe8:	pop	{r4, r5, r6, sl, fp, pc}

00012fec <table_cell_to_buffer@@Base>:
   12fec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12ff0:	add	fp, sp, #24
   12ff4:	sub	sp, sp, #8
   12ff8:	mov	r7, r1
   12ffc:	mov	r1, r2
   13000:	mov	r5, r3
   13004:	mov	r6, r2
   13008:	mov	r4, r0
   1300c:	bl	13b58 <table_get_column_data_type@@Base>
   13010:	cmp	r0, #23
   13014:	bhi	13308 <table_cell_to_buffer@@Base+0x31c>
   13018:	add	r1, pc, #8
   1301c:	ldr	r8, [fp, #8]
   13020:	ldr	r0, [r1, r0, lsl #2]
   13024:	add	pc, r1, r0
   13028:	andeq	r0, r0, r0, rrx
   1302c:	andeq	r0, r0, r4, ror r0
   13030:	andeq	r0, r0, r8, lsl #1
   13034:	muleq	r0, ip, r0
   13038:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   1303c:	andeq	r0, r0, r4, asr #1
   13040:	ldrdeq	r0, [r0], -r8
   13044:	andeq	r0, r0, ip, ror #1
   13048:	andeq	r0, r0, ip, lsl #2
   1304c:	andeq	r0, r0, r0, lsr #2
   13050:	andeq	r0, r0, r4, lsr r1
   13054:	andeq	r0, r0, r4, asr r1
   13058:	andeq	r0, r0, r4, ror r1
   1305c:	muleq	r0, r4, r1
   13060:			; <UNDEFINED> instruction: 0x000001b4
   13064:	ldrdeq	r0, [r0], -r4
   13068:	strdeq	r0, [r0], -r4
   1306c:	andeq	r0, r0, r8, lsl r2
   13070:	andeq	r0, r0, r8, lsr r2
   13074:	andeq	r0, r0, r4, ror #4
   13078:	andeq	r0, r0, r8, ror r2
   1307c:	muleq	r0, r8, r2
   13080:			; <UNDEFINED> instruction: 0x000002b8
   13084:	andeq	r0, r0, ip, ror #5
   13088:	mov	r0, r4
   1308c:	mov	r1, r7
   13090:	mov	r2, r6
   13094:	bl	145d4 <table_get_int@@Base>
   13098:	b	132f0 <table_cell_to_buffer@@Base+0x304>
   1309c:	mov	r0, r4
   130a0:	mov	r1, r7
   130a4:	mov	r2, r6
   130a8:	bl	145ec <table_get_uint@@Base>
   130ac:	b	13124 <table_cell_to_buffer@@Base+0x138>
   130b0:	mov	r0, r4
   130b4:	mov	r1, r7
   130b8:	mov	r2, r6
   130bc:	bl	14604 <table_get_int8@@Base>
   130c0:	b	132f0 <table_cell_to_buffer@@Base+0x304>
   130c4:	mov	r0, r4
   130c8:	mov	r1, r7
   130cc:	mov	r2, r6
   130d0:	bl	1461c <table_get_uint8@@Base>
   130d4:	b	13124 <table_cell_to_buffer@@Base+0x138>
   130d8:	mov	r0, r4
   130dc:	mov	r1, r7
   130e0:	mov	r2, r6
   130e4:	bl	14634 <table_get_int16@@Base>
   130e8:	b	132f0 <table_cell_to_buffer@@Base+0x304>
   130ec:	mov	r0, r4
   130f0:	mov	r1, r7
   130f4:	mov	r2, r6
   130f8:	bl	1464c <table_get_uint16@@Base>
   130fc:	b	13124 <table_cell_to_buffer@@Base+0x138>
   13100:	mov	r0, r4
   13104:	mov	r1, r7
   13108:	mov	r2, r6
   1310c:	bl	14664 <table_get_int32@@Base>
   13110:	b	132f0 <table_cell_to_buffer@@Base+0x304>
   13114:	mov	r0, r4
   13118:	mov	r1, r7
   1311c:	mov	r2, r6
   13120:	bl	1467c <table_get_uint32@@Base>
   13124:	ldr	r2, [pc, #524]	; 13338 <table_cell_to_buffer@@Base+0x34c>
   13128:	mov	r3, r0
   1312c:	add	r2, pc, r2
   13130:	b	132fc <table_cell_to_buffer@@Base+0x310>
   13134:	mov	r0, r4
   13138:	mov	r1, r7
   1313c:	mov	r2, r6
   13140:	bl	14694 <table_get_int64@@Base>
   13144:	b	131ec <table_cell_to_buffer@@Base+0x200>
   13148:	mov	r0, r4
   1314c:	mov	r1, r7
   13150:	mov	r2, r6
   13154:	bl	146ac <table_get_uint64@@Base>
   13158:	b	1320c <table_cell_to_buffer@@Base+0x220>
   1315c:	mov	r0, r4
   13160:	mov	r1, r7
   13164:	mov	r2, r6
   13168:	bl	146c4 <table_get_short@@Base>
   1316c:	ldr	r2, [pc, #464]	; 13344 <table_cell_to_buffer@@Base+0x358>
   13170:	mov	r3, r0
   13174:	add	r2, pc, r2
   13178:	b	132fc <table_cell_to_buffer@@Base+0x310>
   1317c:	mov	r0, r4
   13180:	mov	r1, r7
   13184:	mov	r2, r6
   13188:	bl	146dc <table_get_ushort@@Base>
   1318c:	ldr	r2, [pc, #436]	; 13348 <table_cell_to_buffer@@Base+0x35c>
   13190:	mov	r3, r0
   13194:	add	r2, pc, r2
   13198:	b	132fc <table_cell_to_buffer@@Base+0x310>
   1319c:	mov	r0, r4
   131a0:	mov	r1, r7
   131a4:	mov	r2, r6
   131a8:	bl	146f4 <table_get_long@@Base>
   131ac:	ldr	r2, [pc, #408]	; 1334c <table_cell_to_buffer@@Base+0x360>
   131b0:	mov	r3, r0
   131b4:	add	r2, pc, r2
   131b8:	b	132fc <table_cell_to_buffer@@Base+0x310>
   131bc:	mov	r0, r4
   131c0:	mov	r1, r7
   131c4:	mov	r2, r6
   131c8:	bl	1470c <table_get_ulong@@Base>
   131cc:	ldr	r2, [pc, #380]	; 13350 <table_cell_to_buffer@@Base+0x364>
   131d0:	mov	r3, r0
   131d4:	add	r2, pc, r2
   131d8:	b	132fc <table_cell_to_buffer@@Base+0x310>
   131dc:	mov	r0, r4
   131e0:	mov	r1, r7
   131e4:	mov	r2, r6
   131e8:	bl	14724 <table_get_llong@@Base>
   131ec:	stm	sp, {r0, r1}
   131f0:	ldr	r2, [pc, #324]	; 1333c <table_cell_to_buffer@@Base+0x350>
   131f4:	add	r2, pc, r2
   131f8:	b	1327c <table_cell_to_buffer@@Base+0x290>
   131fc:	mov	r0, r4
   13200:	mov	r1, r7
   13204:	mov	r2, r6
   13208:	bl	1473c <table_get_ullong@@Base>
   1320c:	stm	sp, {r0, r1}
   13210:	ldr	r2, [pc, #296]	; 13340 <table_cell_to_buffer@@Base+0x354>
   13214:	add	r2, pc, r2
   13218:	b	1327c <table_cell_to_buffer@@Base+0x290>
   1321c:	mov	r0, r4
   13220:	mov	r1, r7
   13224:	mov	r2, r6
   13228:	bl	14754 <table_get_float@@Base>
   1322c:	vcvt.f64.f32	d16, s0
   13230:	vstr	d16, [sp]
   13234:	ldr	r2, [pc, #284]	; 13358 <table_cell_to_buffer@@Base+0x36c>
   13238:	add	r2, pc, r2
   1323c:	b	1327c <table_cell_to_buffer@@Base+0x290>
   13240:	mov	r0, r4
   13244:	mov	r1, r7
   13248:	mov	r2, r6
   1324c:	bl	1476c <table_get_double@@Base>
   13250:	vstr	d0, [sp]
   13254:	ldr	r2, [pc, #256]	; 1335c <table_cell_to_buffer@@Base+0x370>
   13258:	add	r2, pc, r2
   1325c:	b	1327c <table_cell_to_buffer@@Base+0x290>
   13260:	mov	r0, r4
   13264:	mov	r1, r7
   13268:	mov	r2, r6
   1326c:	bl	14784 <table_get_ldouble@@Base>
   13270:	vstr	d0, [sp]
   13274:	ldr	r2, [pc, #228]	; 13360 <table_cell_to_buffer@@Base+0x374>
   13278:	add	r2, pc, r2
   1327c:	mov	r0, r5
   13280:	mov	r1, r8
   13284:	bl	12018 <snprintf@plt>
   13288:	b	13308 <table_cell_to_buffer@@Base+0x31c>
   1328c:	mov	r0, r4
   13290:	mov	r1, r7
   13294:	mov	r2, r6
   13298:	bl	1479c <table_get_char@@Base>
   1329c:	b	132b0 <table_cell_to_buffer@@Base+0x2c4>
   132a0:	mov	r0, r4
   132a4:	mov	r1, r7
   132a8:	mov	r2, r6
   132ac:	bl	147b4 <table_get_uchar@@Base>
   132b0:	ldr	r2, [pc, #172]	; 13364 <table_cell_to_buffer@@Base+0x378>
   132b4:	mov	r3, r0
   132b8:	add	r2, pc, r2
   132bc:	b	132fc <table_cell_to_buffer@@Base+0x310>
   132c0:	mov	r0, r4
   132c4:	mov	r1, r7
   132c8:	mov	r2, r6
   132cc:	bl	147cc <table_get_string@@Base>
   132d0:	ldr	r2, [pc, #124]	; 13354 <table_cell_to_buffer@@Base+0x368>
   132d4:	mov	r3, r0
   132d8:	add	r2, pc, r2
   132dc:	b	132fc <table_cell_to_buffer@@Base+0x310>
   132e0:	mov	r0, r4
   132e4:	mov	r1, r7
   132e8:	mov	r2, r6
   132ec:	bl	145bc <table_get_bool@@Base>
   132f0:	ldr	r2, [pc, #60]	; 13334 <table_cell_to_buffer@@Base+0x348>
   132f4:	mov	r3, r0
   132f8:	add	r2, pc, r2
   132fc:	mov	r0, r5
   13300:	mov	r1, r8
   13304:	bl	12018 <snprintf@plt>
   13308:	mov	r0, #0
   1330c:	sub	sp, fp, #24
   13310:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13314:	mov	r0, r4
   13318:	mov	r1, r7
   1331c:	mov	r2, r6
   13320:	bl	147e0 <table_get_ptr@@Base>
   13324:	ldr	r2, [pc, #60]	; 13368 <table_cell_to_buffer@@Base+0x37c>
   13328:	mov	r3, r0
   1332c:	add	r2, pc, r2
   13330:	b	132fc <table_cell_to_buffer@@Base+0x310>
   13334:	andeq	r2, r0, r4, ror #21
   13338:	andeq	r2, r0, r0, asr sp
   1333c:	andeq	r2, r0, fp, lsl #25
   13340:	andeq	r2, r0, r0, ror ip
   13344:	andeq	r2, r0, r5, lsl sp
   13348:	strdeq	r2, [r0], -r9
   1334c:	ldrdeq	r2, [r0], -sp
   13350:	andeq	r2, r0, r1, asr #25
   13354:	andeq	r2, r0, r1, asr #23
   13358:	andeq	r2, r0, r4, ror #24
   1335c:	andeq	r2, r0, r7, asr #24
   13360:	andeq	r2, r0, fp, lsr #24
   13364:	andeq	r2, r0, pc, ror #23
   13368:	andeq	r2, r0, lr, ror fp

0001336c <table_cell_from_buffer@@Base>:
   1336c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13370:	add	fp, sp, #24
   13374:	sub	sp, sp, #264	; 0x108
   13378:	mov	r5, r1
   1337c:	mov	r1, r2
   13380:	mov	r7, r3
   13384:	mov	r4, r2
   13388:	mov	r6, r0
   1338c:	bl	13b58 <table_get_column_data_type@@Base>
   13390:	cmp	r0, #23
   13394:	bhi	139c8 <table_cell_from_buffer@@Base+0x65c>
   13398:	add	r1, pc, #4
   1339c:	ldr	r0, [r1, r0, lsl #2]
   133a0:	add	pc, r1, r0
   133a4:	andeq	r0, r0, r0, rrx
   133a8:	muleq	r0, ip, r0
   133ac:	ldrdeq	r0, [r0], -r8
   133b0:	andeq	r0, r0, r4, lsl r1
   133b4:	andeq	r0, r0, r0, asr r1
   133b8:	andeq	r0, r0, ip, lsl #3
   133bc:	andeq	r0, r0, r8, asr #3
   133c0:	andeq	r0, r0, r4, lsl #4
   133c4:	andeq	r0, r0, r0, asr #4
   133c8:	andeq	r0, r0, r4, lsl #5
   133cc:	andeq	r0, r0, r8, asr #5
   133d0:	andeq	r0, r0, r4, lsl #6
   133d4:	andeq	r0, r0, r0, asr #6
   133d8:	andeq	r0, r0, ip, ror r3
   133dc:			; <UNDEFINED> instruction: 0x000003b8
   133e0:	strdeq	r0, [r0], -ip
   133e4:	andeq	r0, r0, r0, asr #8
   133e8:	andeq	r0, r0, ip, ror r4
   133ec:			; <UNDEFINED> instruction: 0x000004b8
   133f0:	strdeq	r0, [r0], -r4
   133f4:	andeq	r0, r0, r0, lsr r5
   133f8:	andeq	r0, r0, ip, ror #10
   133fc:	andeq	r0, r0, r8, lsr #11
   13400:	andeq	r0, r0, ip, ror #11
   13404:	ldr	r1, [pc, #1480]	; 139d4 <table_cell_from_buffer@@Base+0x668>
   13408:	add	r2, sp, #8
   1340c:	mov	r0, r7
   13410:	add	r1, pc, r1
   13414:	bl	12024 <__isoc99_sscanf@plt>
   13418:	mov	r1, r0
   1341c:	mvn	r0, #0
   13420:	cmp	r1, #1
   13424:	bne	139cc <table_cell_from_buffer@@Base+0x660>
   13428:	ldr	r3, [sp, #8]
   1342c:	mov	r0, r6
   13430:	mov	r1, r5
   13434:	mov	r2, r4
   13438:	bl	14e38 <table_set_int@@Base>
   1343c:	b	139c8 <table_cell_from_buffer@@Base+0x65c>
   13440:	ldr	r1, [pc, #1424]	; 139d8 <table_cell_from_buffer@@Base+0x66c>
   13444:	add	r2, sp, #8
   13448:	mov	r0, r7
   1344c:	add	r1, pc, r1
   13450:	bl	12024 <__isoc99_sscanf@plt>
   13454:	mov	r1, r0
   13458:	mvn	r0, #0
   1345c:	cmp	r1, #1
   13460:	bne	139cc <table_cell_from_buffer@@Base+0x660>
   13464:	ldr	r3, [sp, #8]
   13468:	mov	r0, r6
   1346c:	mov	r1, r5
   13470:	mov	r2, r4
   13474:	bl	14eb8 <table_set_uint@@Base>
   13478:	b	139c8 <table_cell_from_buffer@@Base+0x65c>
   1347c:	ldr	r1, [pc, #1368]	; 139dc <table_cell_from_buffer@@Base+0x670>
   13480:	add	r2, sp, #8
   13484:	mov	r0, r7
   13488:	add	r1, pc, r1
   1348c:	bl	12024 <__isoc99_sscanf@plt>
   13490:	mov	r1, r0
   13494:	mvn	r0, #0
   13498:	cmp	r1, #1
   1349c:	bne	139cc <table_cell_from_buffer@@Base+0x660>
   134a0:	ldrsb	r3, [sp, #8]
   134a4:	mov	r0, r6
   134a8:	mov	r1, r5
   134ac:	mov	r2, r4
   134b0:	bl	14f38 <table_set_int8@@Base>
   134b4:	b	139c8 <table_cell_from_buffer@@Base+0x65c>
   134b8:	ldr	r1, [pc, #1312]	; 139e0 <table_cell_from_buffer@@Base+0x674>
   134bc:	add	r2, sp, #8
   134c0:	mov	r0, r7
   134c4:	add	r1, pc, r1
   134c8:	bl	12024 <__isoc99_sscanf@plt>
   134cc:	mov	r1, r0
   134d0:	mvn	r0, #0
   134d4:	cmp	r1, #1
   134d8:	bne	139cc <table_cell_from_buffer@@Base+0x660>
   134dc:	ldrb	r3, [sp, #8]
   134e0:	mov	r0, r6
   134e4:	mov	r1, r5
   134e8:	mov	r2, r4
   134ec:	bl	14fb8 <table_set_uint8@@Base>
   134f0:	b	139c8 <table_cell_from_buffer@@Base+0x65c>
   134f4:	ldr	r1, [pc, #1256]	; 139e4 <table_cell_from_buffer@@Base+0x678>
   134f8:	add	r2, sp, #8
   134fc:	mov	r0, r7
   13500:	add	r1, pc, r1
   13504:	bl	12024 <__isoc99_sscanf@plt>
   13508:	mov	r1, r0
   1350c:	mvn	r0, #0
   13510:	cmp	r1, #1
   13514:	bne	139cc <table_cell_from_buffer@@Base+0x660>
   13518:	ldrsh	r3, [sp, #8]
   1351c:	mov	r0, r6
   13520:	mov	r1, r5
   13524:	mov	r2, r4
   13528:	bl	15038 <table_set_int16@@Base>
   1352c:	b	139c8 <table_cell_from_buffer@@Base+0x65c>
   13530:	ldr	r1, [pc, #1200]	; 139e8 <table_cell_from_buffer@@Base+0x67c>
   13534:	add	r2, sp, #8
   13538:	mov	r0, r7
   1353c:	add	r1, pc, r1
   13540:	bl	12024 <__isoc99_sscanf@plt>
   13544:	mov	r1, r0
   13548:	mvn	r0, #0
   1354c:	cmp	r1, #1
   13550:	bne	139cc <table_cell_from_buffer@@Base+0x660>
   13554:	ldrh	r3, [sp, #8]
   13558:	mov	r0, r6
   1355c:	mov	r1, r5
   13560:	mov	r2, r4
   13564:	bl	150b8 <table_set_uint16@@Base>
   13568:	b	139c8 <table_cell_from_buffer@@Base+0x65c>
   1356c:	ldr	r1, [pc, #1144]	; 139ec <table_cell_from_buffer@@Base+0x680>
   13570:	add	r2, sp, #8
   13574:	mov	r0, r7
   13578:	add	r1, pc, r1
   1357c:	bl	12024 <__isoc99_sscanf@plt>
   13580:	mov	r1, r0
   13584:	mvn	r0, #0
   13588:	cmp	r1, #1
   1358c:	bne	139cc <table_cell_from_buffer@@Base+0x660>
   13590:	ldr	r3, [sp, #8]
   13594:	mov	r0, r6
   13598:	mov	r1, r5
   1359c:	mov	r2, r4
   135a0:	bl	15138 <table_set_int32@@Base>
   135a4:	b	139c8 <table_cell_from_buffer@@Base+0x65c>
   135a8:	ldr	r1, [pc, #1088]	; 139f0 <table_cell_from_buffer@@Base+0x684>
   135ac:	add	r2, sp, #8
   135b0:	mov	r0, r7
   135b4:	add	r1, pc, r1
   135b8:	bl	12024 <__isoc99_sscanf@plt>
   135bc:	mov	r1, r0
   135c0:	mvn	r0, #0
   135c4:	cmp	r1, #1
   135c8:	bne	139cc <table_cell_from_buffer@@Base+0x660>
   135cc:	ldr	r3, [sp, #8]
   135d0:	mov	r0, r6
   135d4:	mov	r1, r5
   135d8:	mov	r2, r4
   135dc:	bl	151b8 <table_set_uint32@@Base>
   135e0:	b	139c8 <table_cell_from_buffer@@Base+0x65c>
   135e4:	ldr	r1, [pc, #1032]	; 139f4 <table_cell_from_buffer@@Base+0x688>
   135e8:	add	r2, sp, #8
   135ec:	mov	r0, r7
   135f0:	add	r1, pc, r1
   135f4:	bl	12024 <__isoc99_sscanf@plt>
   135f8:	mov	r1, r0
   135fc:	mvn	r0, #0
   13600:	cmp	r1, #1
   13604:	bne	139cc <table_cell_from_buffer@@Base+0x660>
   13608:	ldr	r0, [sp, #8]
   1360c:	ldr	r1, [sp, #12]
   13610:	mov	r2, r4
   13614:	stm	sp, {r0, r1}
   13618:	mov	r0, r6
   1361c:	mov	r1, r5
   13620:	bl	15238 <table_set_int64@@Base>
   13624:	b	139c8 <table_cell_from_buffer@@Base+0x65c>
   13628:	ldr	r1, [pc, #968]	; 139f8 <table_cell_from_buffer@@Base+0x68c>
   1362c:	add	r2, sp, #8
   13630:	mov	r0, r7
   13634:	add	r1, pc, r1
   13638:	bl	12024 <__isoc99_sscanf@plt>
   1363c:	mov	r1, r0
   13640:	mvn	r0, #0
   13644:	cmp	r1, #1
   13648:	bne	139cc <table_cell_from_buffer@@Base+0x660>
   1364c:	ldr	r0, [sp, #8]
   13650:	ldr	r1, [sp, #12]
   13654:	mov	r2, r4
   13658:	stm	sp, {r0, r1}
   1365c:	mov	r0, r6
   13660:	mov	r1, r5
   13664:	bl	152c0 <table_set_uint64@@Base>
   13668:	b	139c8 <table_cell_from_buffer@@Base+0x65c>
   1366c:	ldr	r1, [pc, #904]	; 139fc <table_cell_from_buffer@@Base+0x690>
   13670:	add	r2, sp, #8
   13674:	mov	r0, r7
   13678:	add	r1, pc, r1
   1367c:	bl	12024 <__isoc99_sscanf@plt>
   13680:	mov	r1, r0
   13684:	mvn	r0, #0
   13688:	cmp	r1, #1
   1368c:	bne	139cc <table_cell_from_buffer@@Base+0x660>
   13690:	ldrsh	r3, [sp, #8]
   13694:	mov	r0, r6
   13698:	mov	r1, r5
   1369c:	mov	r2, r4
   136a0:	bl	15348 <table_set_short@@Base>
   136a4:	b	139c8 <table_cell_from_buffer@@Base+0x65c>
   136a8:	ldr	r1, [pc, #848]	; 13a00 <table_cell_from_buffer@@Base+0x694>
   136ac:	add	r2, sp, #8
   136b0:	mov	r0, r7
   136b4:	add	r1, pc, r1
   136b8:	bl	12024 <__isoc99_sscanf@plt>
   136bc:	mov	r1, r0
   136c0:	mvn	r0, #0
   136c4:	cmp	r1, #1
   136c8:	bne	139cc <table_cell_from_buffer@@Base+0x660>
   136cc:	ldrh	r3, [sp, #8]
   136d0:	mov	r0, r6
   136d4:	mov	r1, r5
   136d8:	mov	r2, r4
   136dc:	bl	153c8 <table_set_ushort@@Base>
   136e0:	b	139c8 <table_cell_from_buffer@@Base+0x65c>
   136e4:	ldr	r1, [pc, #792]	; 13a04 <table_cell_from_buffer@@Base+0x698>
   136e8:	add	r2, sp, #8
   136ec:	mov	r0, r7
   136f0:	add	r1, pc, r1
   136f4:	bl	12024 <__isoc99_sscanf@plt>
   136f8:	mov	r1, r0
   136fc:	mvn	r0, #0
   13700:	cmp	r1, #1
   13704:	bne	139cc <table_cell_from_buffer@@Base+0x660>
   13708:	ldr	r3, [sp, #8]
   1370c:	mov	r0, r6
   13710:	mov	r1, r5
   13714:	mov	r2, r4
   13718:	bl	15448 <table_set_long@@Base>
   1371c:	b	139c8 <table_cell_from_buffer@@Base+0x65c>
   13720:	ldr	r1, [pc, #736]	; 13a08 <table_cell_from_buffer@@Base+0x69c>
   13724:	add	r2, sp, #8
   13728:	mov	r0, r7
   1372c:	add	r1, pc, r1
   13730:	bl	12024 <__isoc99_sscanf@plt>
   13734:	mov	r1, r0
   13738:	mvn	r0, #0
   1373c:	cmp	r1, #1
   13740:	bne	139cc <table_cell_from_buffer@@Base+0x660>
   13744:	ldr	r3, [sp, #8]
   13748:	mov	r0, r6
   1374c:	mov	r1, r5
   13750:	mov	r2, r4
   13754:	bl	154c8 <table_set_ulong@@Base>
   13758:	b	139c8 <table_cell_from_buffer@@Base+0x65c>
   1375c:	ldr	r1, [pc, #680]	; 13a0c <table_cell_from_buffer@@Base+0x6a0>
   13760:	add	r2, sp, #8
   13764:	mov	r0, r7
   13768:	add	r1, pc, r1
   1376c:	bl	12024 <__isoc99_sscanf@plt>
   13770:	mov	r1, r0
   13774:	mvn	r0, #0
   13778:	cmp	r1, #1
   1377c:	bne	139cc <table_cell_from_buffer@@Base+0x660>
   13780:	ldr	r0, [sp, #8]
   13784:	ldr	r1, [sp, #12]
   13788:	mov	r2, r4
   1378c:	stm	sp, {r0, r1}
   13790:	mov	r0, r6
   13794:	mov	r1, r5
   13798:	bl	15548 <table_set_llong@@Base>
   1379c:	b	139c8 <table_cell_from_buffer@@Base+0x65c>
   137a0:	ldr	r1, [pc, #616]	; 13a10 <table_cell_from_buffer@@Base+0x6a4>
   137a4:	add	r2, sp, #8
   137a8:	mov	r0, r7
   137ac:	add	r1, pc, r1
   137b0:	bl	12024 <__isoc99_sscanf@plt>
   137b4:	mov	r1, r0
   137b8:	mvn	r0, #0
   137bc:	cmp	r1, #1
   137c0:	bne	139cc <table_cell_from_buffer@@Base+0x660>
   137c4:	ldr	r0, [sp, #8]
   137c8:	ldr	r1, [sp, #12]
   137cc:	mov	r2, r4
   137d0:	stm	sp, {r0, r1}
   137d4:	mov	r0, r6
   137d8:	mov	r1, r5
   137dc:	bl	155d0 <table_set_ullong@@Base>
   137e0:	b	139c8 <table_cell_from_buffer@@Base+0x65c>
   137e4:	ldr	r1, [pc, #556]	; 13a18 <table_cell_from_buffer@@Base+0x6ac>
   137e8:	add	r2, sp, #8
   137ec:	mov	r0, r7
   137f0:	add	r1, pc, r1
   137f4:	bl	12024 <__isoc99_sscanf@plt>
   137f8:	mov	r1, r0
   137fc:	mvn	r0, #0
   13800:	cmp	r1, #1
   13804:	bne	139cc <table_cell_from_buffer@@Base+0x660>
   13808:	vldr	s0, [sp, #8]
   1380c:	mov	r0, r6
   13810:	mov	r1, r5
   13814:	mov	r2, r4
   13818:	bl	15658 <table_set_float@@Base>
   1381c:	b	139c8 <table_cell_from_buffer@@Base+0x65c>
   13820:	ldr	r1, [pc, #500]	; 13a1c <table_cell_from_buffer@@Base+0x6b0>
   13824:	add	r2, sp, #8
   13828:	mov	r0, r7
   1382c:	add	r1, pc, r1
   13830:	bl	12024 <__isoc99_sscanf@plt>
   13834:	mov	r1, r0
   13838:	mvn	r0, #0
   1383c:	cmp	r1, #1
   13840:	bne	139cc <table_cell_from_buffer@@Base+0x660>
   13844:	vldr	d0, [sp, #8]
   13848:	mov	r0, r6
   1384c:	mov	r1, r5
   13850:	mov	r2, r4
   13854:	bl	156e4 <table_set_double@@Base>
   13858:	b	139c8 <table_cell_from_buffer@@Base+0x65c>
   1385c:	ldr	r1, [pc, #444]	; 13a20 <table_cell_from_buffer@@Base+0x6b4>
   13860:	add	r2, sp, #8
   13864:	mov	r0, r7
   13868:	add	r1, pc, r1
   1386c:	bl	12024 <__isoc99_sscanf@plt>
   13870:	mov	r1, r0
   13874:	mvn	r0, #0
   13878:	cmp	r1, #1
   1387c:	bne	139cc <table_cell_from_buffer@@Base+0x660>
   13880:	vldr	d0, [sp, #8]
   13884:	mov	r0, r6
   13888:	mov	r1, r5
   1388c:	mov	r2, r4
   13890:	bl	1576c <table_set_ldouble@@Base>
   13894:	b	139c8 <table_cell_from_buffer@@Base+0x65c>
   13898:	ldr	r1, [pc, #392]	; 13a28 <table_cell_from_buffer@@Base+0x6bc>
   1389c:	add	r2, sp, #8
   138a0:	mov	r0, r7
   138a4:	add	r1, pc, r1
   138a8:	bl	12024 <__isoc99_sscanf@plt>
   138ac:	mov	r1, r0
   138b0:	mvn	r0, #0
   138b4:	cmp	r1, #1
   138b8:	bne	139cc <table_cell_from_buffer@@Base+0x660>
   138bc:	ldrb	r3, [sp, #8]
   138c0:	mov	r0, r6
   138c4:	mov	r1, r5
   138c8:	mov	r2, r4
   138cc:	bl	15814 <table_set_char@@Base>
   138d0:	b	139c8 <table_cell_from_buffer@@Base+0x65c>
   138d4:	ldr	r1, [pc, #336]	; 13a2c <table_cell_from_buffer@@Base+0x6c0>
   138d8:	add	r2, sp, #8
   138dc:	mov	r0, r7
   138e0:	add	r1, pc, r1
   138e4:	bl	12024 <__isoc99_sscanf@plt>
   138e8:	mov	r1, r0
   138ec:	mvn	r0, #0
   138f0:	cmp	r1, #1
   138f4:	bne	139cc <table_cell_from_buffer@@Base+0x660>
   138f8:	ldrb	r3, [sp, #8]
   138fc:	mov	r0, r6
   13900:	mov	r1, r5
   13904:	mov	r2, r4
   13908:	bl	15894 <table_set_uchar@@Base>
   1390c:	b	139c8 <table_cell_from_buffer@@Base+0x65c>
   13910:	ldr	r1, [pc, #252]	; 13a14 <table_cell_from_buffer@@Base+0x6a8>
   13914:	add	r2, sp, #8
   13918:	mov	r0, r7
   1391c:	add	r1, pc, r1
   13920:	bl	12024 <__isoc99_sscanf@plt>
   13924:	mov	r1, r0
   13928:	mvn	r0, #0
   1392c:	cmp	r1, #1
   13930:	bne	139cc <table_cell_from_buffer@@Base+0x660>
   13934:	add	r3, sp, #8
   13938:	mov	r0, r6
   1393c:	mov	r1, r5
   13940:	mov	r2, r4
   13944:	bl	157f4 <table_set_string@@Base>
   13948:	b	139c8 <table_cell_from_buffer@@Base+0x65c>
   1394c:	ldr	r1, [pc, #208]	; 13a24 <table_cell_from_buffer@@Base+0x6b8>
   13950:	add	r2, sp, #8
   13954:	mov	r0, r7
   13958:	add	r1, pc, r1
   1395c:	bl	12024 <__isoc99_sscanf@plt>
   13960:	mov	r1, r0
   13964:	mvn	r0, #0
   13968:	cmp	r1, #1
   1396c:	bne	139cc <table_cell_from_buffer@@Base+0x660>
   13970:	ldr	r3, [sp, #8]
   13974:	mov	r0, r6
   13978:	mov	r1, r5
   1397c:	mov	r2, r4
   13980:	cmp	r3, #0
   13984:	movwne	r3, #1
   13988:	bl	14db8 <table_set_bool@@Base>
   1398c:	b	139c8 <table_cell_from_buffer@@Base+0x65c>
   13990:	ldr	r1, [pc, #152]	; 13a30 <table_cell_from_buffer@@Base+0x6c4>
   13994:	add	r2, sp, #8
   13998:	mov	r0, r7
   1399c:	add	r1, pc, r1
   139a0:	bl	12024 <__isoc99_sscanf@plt>
   139a4:	mov	r1, r0
   139a8:	mvn	r0, #0
   139ac:	cmp	r1, #1
   139b0:	bne	139cc <table_cell_from_buffer@@Base+0x660>
   139b4:	ldr	r3, [sp, #8]
   139b8:	mov	r0, r6
   139bc:	mov	r1, r5
   139c0:	mov	r2, r4
   139c4:	bl	15914 <table_set_ptr@@Base>
   139c8:	mov	r0, #0
   139cc:	sub	sp, fp, #24
   139d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   139d4:	andeq	r2, r0, ip, asr #19
   139d8:	andeq	r2, r0, r0, lsr sl
   139dc:	andeq	r2, r0, r5, lsr #20
   139e0:	andeq	r2, r0, lr, ror #19
   139e4:	andeq	r2, r0, r9, lsl #19
   139e8:	andeq	r2, r0, r1, asr r9
   139ec:	andeq	r2, r0, r4, ror #16
   139f0:	andeq	r2, r0, r8, asr #17
   139f4:	andeq	r2, r0, pc, lsl #17
   139f8:	andeq	r2, r0, r0, asr r8
   139fc:	andeq	r2, r0, r1, lsl r8
   13a00:	ldrdeq	r2, [r0], -r9
   13a04:	andeq	r2, r0, r1, lsr #15
   13a08:	andeq	r2, r0, r9, ror #14
   13a0c:	andeq	r2, r0, r7, lsl r7
   13a10:	ldrdeq	r2, [r0], -r8
   13a14:	andeq	r2, r0, sp, ror r5
   13a18:	andeq	r2, r0, ip, lsr #13
   13a1c:	andeq	r2, r0, r3, ror r6
   13a20:	andeq	r2, r0, fp, lsr r6
   13a24:	andeq	r2, r0, r4, lsl #9
   13a28:	andeq	r2, r0, r3, lsl #12
   13a2c:	andeq	r2, r0, r7, asr #11
   13a30:	andeq	r2, r0, lr, lsl #10

00013a34 <table_cell_nullify@@Base>:
   13a34:	push	{r4, r5, fp, lr}
   13a38:	add	fp, sp, #8
   13a3c:	mov	r4, r2
   13a40:	bl	14818 <table_get_row_ptr@@Base>
   13a44:	ldr	r5, [r0]
   13a48:	ldr	r0, [r5, r4, lsl #2]
   13a4c:	cmp	r0, #0
   13a50:	beq	13a60 <table_cell_nullify@@Base+0x2c>
   13a54:	bl	11fa0 <free@plt>
   13a58:	mov	r0, #0
   13a5c:	str	r0, [r5, r4, lsl #2]
   13a60:	mov	r0, #0
   13a64:	pop	{r4, r5, fp, pc}

00013a68 <table_column_init@@Base>:
   13a68:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13a6c:	add	fp, sp, #24
   13a70:	ldr	r7, [r0]
   13a74:	mov	r0, r2
   13a78:	mov	r4, r3
   13a7c:	mov	r5, r2
   13a80:	mov	r6, r1
   13a84:	bl	12000 <strlen@plt>
   13a88:	add	r0, r0, #1
   13a8c:	bl	11fdc <malloc@plt>
   13a90:	ldr	r8, [fp, #8]
   13a94:	add	r6, r6, r6, lsl #1
   13a98:	cmp	r0, #0
   13a9c:	str	r0, [r7, r6, lsl #2]
   13aa0:	beq	13aac <table_column_init@@Base+0x44>
   13aa4:	mov	r1, r5
   13aa8:	bl	11fc4 <strcpy@plt>
   13aac:	add	r0, r7, r6, lsl #2
   13ab0:	stmib	r0, {r4, r8}
   13ab4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013ab8 <table_get_col_ptr@@Base>:
   13ab8:	ldr	r0, [r0]
   13abc:	add	r1, r1, r1, lsl #1
   13ac0:	add	r0, r0, r1, lsl #2
   13ac4:	bx	lr

00013ac8 <table_column_destroy@@Base>:
   13ac8:	ldr	r0, [r0]
   13acc:	add	r1, r1, r1, lsl #1
   13ad0:	ldr	r0, [r0, r1, lsl #2]
   13ad4:	cmp	r0, #0
   13ad8:	bxeq	lr
   13adc:	b	11fa0 <free@plt>

00013ae0 <table_get_column_length@@Base>:
   13ae0:	ldr	r0, [r0, #4]
   13ae4:	bx	lr

00013ae8 <table_get_column@@Base>:
   13ae8:	push	{r4, r5, r6, r7, fp, lr}
   13aec:	add	fp, sp, #16
   13af0:	ldr	r6, [r0, #4]
   13af4:	cmp	r6, #1
   13af8:	blt	13b34 <table_get_column@@Base+0x4c>
   13afc:	ldr	r7, [r0]
   13b00:	mov	r5, r1
   13b04:	mov	r4, #0
   13b08:	ldr	r0, [r7]
   13b0c:	mov	r1, r5
   13b10:	bl	11f88 <strcmp@plt>
   13b14:	cmp	r0, #0
   13b18:	beq	13b38 <table_get_column@@Base+0x50>
   13b1c:	add	r4, r4, #1
   13b20:	add	r7, r7, #12
   13b24:	cmp	r6, r4
   13b28:	bne	13b08 <table_get_column@@Base+0x20>
   13b2c:	mov	r4, r6
   13b30:	b	13b38 <table_get_column@@Base+0x50>
   13b34:	mov	r4, #0
   13b38:	cmp	r4, r6
   13b3c:	mvneq	r4, #0
   13b40:	mov	r0, r4
   13b44:	pop	{r4, r5, r6, r7, fp, pc}

00013b48 <table_get_column_name@@Base>:
   13b48:	ldr	r0, [r0]
   13b4c:	add	r1, r1, r1, lsl #1
   13b50:	ldr	r0, [r0, r1, lsl #2]
   13b54:	bx	lr

00013b58 <table_get_column_data_type@@Base>:
   13b58:	ldr	r0, [r0]
   13b5c:	add	r1, r1, r1, lsl #1
   13b60:	add	r0, r0, r1, lsl #2
   13b64:	ldr	r0, [r0, #4]
   13b68:	bx	lr

00013b6c <table_add_column@@Base>:
   13b6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b70:	add	fp, sp, #28
   13b74:	sub	sp, sp, #4
   13b78:	mov	r4, r0
   13b7c:	mov	r8, r1
   13b80:	ldr	r0, [r0, #4]
   13b84:	mov	r9, r2
   13b88:	ldr	r1, [r4, #8]
   13b8c:	udiv	r2, r0, r1
   13b90:	mls	r0, r2, r1, r0
   13b94:	cmp	r0, #0
   13b98:	bne	13c04 <table_add_column@@Base+0x98>
   13b9c:	ldr	r2, [r4, #12]
   13ba0:	ldr	r0, [r4]
   13ba4:	add	r1, r2, r1
   13ba8:	str	r1, [r4, #12]
   13bac:	add	r1, r1, r1, lsl #1
   13bb0:	lsl	r1, r1, #2
   13bb4:	bl	11fb8 <realloc@plt>
   13bb8:	str	r0, [r4]
   13bbc:	mov	r0, r4
   13bc0:	bl	14880 <table_get_row_length@@Base>
   13bc4:	cmp	r0, #1
   13bc8:	blt	13c04 <table_add_column@@Base+0x98>
   13bcc:	mov	r6, r0
   13bd0:	mov	r5, #0
   13bd4:	mov	r0, r4
   13bd8:	mov	r1, r5
   13bdc:	bl	14818 <table_get_row_ptr@@Base>
   13be0:	ldr	r1, [r4, #12]
   13be4:	mov	r7, r0
   13be8:	ldr	r0, [r0]
   13bec:	lsl	r1, r1, #2
   13bf0:	bl	11fb8 <realloc@plt>
   13bf4:	add	r5, r5, #1
   13bf8:	str	r0, [r7]
   13bfc:	cmp	r6, r5
   13c00:	bne	13bd4 <table_add_column@@Base+0x68>
   13c04:	mov	r0, r4
   13c08:	bl	14880 <table_get_row_length@@Base>
   13c0c:	ldr	r6, [r4, #4]
   13c10:	mov	r7, r0
   13c14:	mov	r0, r9
   13c18:	bl	14588 <table_get_default_compare_function_for_data_type@@Base>
   13c1c:	ldr	r5, [r4]
   13c20:	mov	sl, r0
   13c24:	mov	r0, r8
   13c28:	bl	12000 <strlen@plt>
   13c2c:	add	r0, r0, #1
   13c30:	bl	11fdc <malloc@plt>
   13c34:	mov	r1, r8
   13c38:	add	r8, r6, r6, lsl #1
   13c3c:	cmp	r0, #0
   13c40:	str	r0, [r5, r8, lsl #2]
   13c44:	beq	13c4c <table_add_column@@Base+0xe0>
   13c48:	bl	11fc4 <strcpy@plt>
   13c4c:	add	r0, r5, r8, lsl #2
   13c50:	cmp	r7, #1
   13c54:	stmib	r0, {r9, sl}
   13c58:	blt	13c7c <table_add_column@@Base+0x110>
   13c5c:	mov	r5, #0
   13c60:	mov	r0, r4
   13c64:	mov	r1, r5
   13c68:	mov	r2, r6
   13c6c:	bl	12f64 <table_cell_init@@Base>
   13c70:	add	r5, r5, #1
   13c74:	cmp	r7, r5
   13c78:	bne	13c60 <table_add_column@@Base+0xf4>
   13c7c:	ldr	r2, [r4, #4]
   13c80:	mov	r0, r4
   13c84:	mvn	r1, #0
   13c88:	mov	r3, #8
   13c8c:	bl	12ee0 <table_notify@@Base>
   13c90:	ldr	r0, [r4, #4]
   13c94:	add	r1, r0, #1
   13c98:	str	r1, [r4, #4]
   13c9c:	sub	sp, fp, #28
   13ca0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013ca4 <table_remove_column@@Base>:
   13ca4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ca8:	add	fp, sp, #28
   13cac:	sub	sp, sp, #12
   13cb0:	mov	r5, r0
   13cb4:	ldr	r0, [r0]
   13cb8:	add	r6, r1, r1, lsl #1
   13cbc:	mov	r4, r1
   13cc0:	ldr	r0, [r0, r6, lsl #2]
   13cc4:	cmp	r0, #0
   13cc8:	beq	13cd0 <table_remove_column@@Base+0x2c>
   13ccc:	bl	11fa0 <free@plt>
   13cd0:	ldr	r7, [r5, #4]
   13cd4:	sub	r8, r7, #1
   13cd8:	cmp	r8, r4
   13cdc:	ble	13d10 <table_remove_column@@Base+0x6c>
   13ce0:	mvn	r0, r4
   13ce4:	lsl	r1, r6, #2
   13ce8:	add	r0, r0, r7
   13cec:	ldr	r2, [r5]
   13cf0:	subs	r0, r0, #1
   13cf4:	add	r2, r2, r1
   13cf8:	add	r1, r1, #12
   13cfc:	vldr	d16, [r2, #12]
   13d00:	ldr	r3, [r2, #20]
   13d04:	str	r3, [r2, #8]
   13d08:	vstr	d16, [r2]
   13d0c:	bne	13cec <table_remove_column@@Base+0x48>
   13d10:	mov	r0, r5
   13d14:	bl	14880 <table_get_row_length@@Base>
   13d18:	cmp	r0, #1
   13d1c:	blt	13ddc <table_remove_column@@Base+0x138>
   13d20:	mov	r9, r0
   13d24:	mvn	r0, r4
   13d28:	sub	sl, r7, #2
   13d2c:	add	r0, r7, r0
   13d30:	mov	r7, #0
   13d34:	and	r0, r0, #1
   13d38:	str	r0, [sp, #8]
   13d3c:	add	r0, r4, #1
   13d40:	str	r0, [sp, #4]
   13d44:	b	13d54 <table_remove_column@@Base+0xb0>
   13d48:	add	r7, r7, #1
   13d4c:	cmp	r7, r9
   13d50:	beq	13ddc <table_remove_column@@Base+0x138>
   13d54:	mov	r0, r5
   13d58:	mov	r1, r7
   13d5c:	mov	r2, r4
   13d60:	bl	12fa0 <table_cell_destroy@@Base>
   13d64:	mov	r0, r5
   13d68:	mov	r1, r7
   13d6c:	bl	14818 <table_get_row_ptr@@Base>
   13d70:	cmp	r8, r4
   13d74:	ble	13d48 <table_remove_column@@Base+0xa4>
   13d78:	ldr	r1, [sp, #8]
   13d7c:	mov	r2, r4
   13d80:	cmp	r1, #0
   13d84:	beq	13d9c <table_remove_column@@Base+0xf8>
   13d88:	ldr	r1, [r0]
   13d8c:	add	r2, r1, r4, lsl #2
   13d90:	ldr	r2, [r2, #4]
   13d94:	str	r2, [r1, r4, lsl #2]
   13d98:	ldr	r2, [sp, #4]
   13d9c:	cmp	sl, r4
   13da0:	beq	13d48 <table_remove_column@@Base+0xa4>
   13da4:	sub	r1, r8, r2
   13da8:	lsl	r2, r2, #2
   13dac:	ldr	r3, [r0]
   13db0:	subs	r1, r1, #2
   13db4:	add	r6, r3, r2
   13db8:	ldr	r6, [r6, #4]
   13dbc:	str	r6, [r3, r2]
   13dc0:	ldr	r3, [r0]
   13dc4:	add	r3, r3, r2
   13dc8:	add	r2, r2, #8
   13dcc:	ldr	r6, [r3, #8]
   13dd0:	str	r6, [r3, #4]
   13dd4:	bne	13dac <table_remove_column@@Base+0x108>
   13dd8:	b	13d48 <table_remove_column@@Base+0xa4>
   13ddc:	ldmib	r5, {r0, r1}
   13de0:	sub	r0, r0, #1
   13de4:	udiv	r2, r0, r1
   13de8:	str	r0, [r5, #4]
   13dec:	mls	r0, r2, r1, r0
   13df0:	cmp	r0, #0
   13df4:	bne	13e60 <table_remove_column@@Base+0x1bc>
   13df8:	ldr	r2, [r5, #12]
   13dfc:	ldr	r0, [r5]
   13e00:	sub	r1, r2, r1
   13e04:	str	r1, [r5, #12]
   13e08:	add	r1, r1, r1, lsl #1
   13e0c:	lsl	r1, r1, #2
   13e10:	bl	11fb8 <realloc@plt>
   13e14:	str	r0, [r5]
   13e18:	mov	r0, r5
   13e1c:	bl	14880 <table_get_row_length@@Base>
   13e20:	cmp	r0, #1
   13e24:	blt	13e60 <table_remove_column@@Base+0x1bc>
   13e28:	mov	r8, r0
   13e2c:	mov	r7, #0
   13e30:	mov	r0, r5
   13e34:	mov	r1, r7
   13e38:	bl	14818 <table_get_row_ptr@@Base>
   13e3c:	ldr	r1, [r5, #12]
   13e40:	mov	r6, r0
   13e44:	ldr	r0, [r0]
   13e48:	lsl	r1, r1, #2
   13e4c:	bl	11fb8 <realloc@plt>
   13e50:	add	r7, r7, #1
   13e54:	str	r0, [r6]
   13e58:	cmp	r8, r7
   13e5c:	bne	13e30 <table_remove_column@@Base+0x18c>
   13e60:	mov	r0, r5
   13e64:	mvn	r1, #0
   13e68:	mov	r2, r4
   13e6c:	mov	r3, #16
   13e70:	bl	12ee0 <table_notify@@Base>
   13e74:	mov	r0, #0
   13e78:	sub	sp, fp, #28
   13e7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013e80 <table_get_column_compare_function@@Base>:
   13e80:	ldr	r0, [r0]
   13e84:	add	r1, r1, r1, lsl #1
   13e88:	add	r0, r0, r1, lsl #2
   13e8c:	ldr	r0, [r0, #8]
   13e90:	bx	lr

00013e94 <table_set_column_compare_function@@Base>:
   13e94:	ldr	r0, [r0]
   13e98:	add	r1, r1, r1, lsl #1
   13e9c:	add	r0, r0, r1, lsl #2
   13ea0:	str	r2, [r0, #8]
   13ea4:	bx	lr

00013ea8 <table_compare_bool@@Base>:
   13ea8:	cmp	r0, #0
   13eac:	beq	13ee0 <table_compare_bool@@Base+0x38>
   13eb0:	cmp	r1, #0
   13eb4:	moveq	r1, #1
   13eb8:	moveq	r0, r1
   13ebc:	bxeq	lr
   13ec0:	ldrb	r2, [r1]
   13ec4:	ldrb	r0, [r0]
   13ec8:	mov	r1, #0
   13ecc:	cmp	r0, r2
   13ed0:	mvncc	r1, #0
   13ed4:	movwhi	r1, #1
   13ed8:	mov	r0, r1
   13edc:	bx	lr
   13ee0:	cmp	r1, #0
   13ee4:	mvnne	r1, #0
   13ee8:	mov	r0, r1
   13eec:	bx	lr

00013ef0 <table_compare_int@@Base>:
   13ef0:	cmp	r0, #0
   13ef4:	beq	13f28 <table_compare_int@@Base+0x38>
   13ef8:	cmp	r1, #0
   13efc:	moveq	r1, #1
   13f00:	moveq	r0, r1
   13f04:	bxeq	lr
   13f08:	ldr	r2, [r1]
   13f0c:	ldr	r0, [r0]
   13f10:	mov	r1, #0
   13f14:	cmp	r0, r2
   13f18:	mvnlt	r1, #0
   13f1c:	movwgt	r1, #1
   13f20:	mov	r0, r1
   13f24:	bx	lr
   13f28:	cmp	r1, #0
   13f2c:	mvnne	r1, #0
   13f30:	mov	r0, r1
   13f34:	bx	lr

00013f38 <table_compare_uint@@Base>:
   13f38:	cmp	r0, #0
   13f3c:	beq	13f70 <table_compare_uint@@Base+0x38>
   13f40:	cmp	r1, #0
   13f44:	moveq	r1, #1
   13f48:	moveq	r0, r1
   13f4c:	bxeq	lr
   13f50:	ldr	r2, [r1]
   13f54:	ldr	r0, [r0]
   13f58:	mov	r1, #0
   13f5c:	cmp	r0, r2
   13f60:	mvncc	r1, #0
   13f64:	movwhi	r1, #1
   13f68:	mov	r0, r1
   13f6c:	bx	lr
   13f70:	cmp	r1, #0
   13f74:	mvnne	r1, #0
   13f78:	mov	r0, r1
   13f7c:	bx	lr

00013f80 <table_compare_int8@@Base>:
   13f80:	cmp	r0, #0
   13f84:	beq	13fb8 <table_compare_int8@@Base+0x38>
   13f88:	cmp	r1, #0
   13f8c:	moveq	r1, #1
   13f90:	moveq	r0, r1
   13f94:	bxeq	lr
   13f98:	ldrsb	r2, [r1]
   13f9c:	ldrsb	r0, [r0]
   13fa0:	mov	r1, #0
   13fa4:	cmp	r0, r2
   13fa8:	mvnlt	r1, #0
   13fac:	movwgt	r1, #1
   13fb0:	mov	r0, r1
   13fb4:	bx	lr
   13fb8:	cmp	r1, #0
   13fbc:	mvnne	r1, #0
   13fc0:	mov	r0, r1
   13fc4:	bx	lr

00013fc8 <table_compare_uint8@@Base>:
   13fc8:	cmp	r0, #0
   13fcc:	beq	14000 <table_compare_uint8@@Base+0x38>
   13fd0:	cmp	r1, #0
   13fd4:	moveq	r1, #1
   13fd8:	moveq	r0, r1
   13fdc:	bxeq	lr
   13fe0:	ldrb	r2, [r1]
   13fe4:	ldrb	r0, [r0]
   13fe8:	mov	r1, #0
   13fec:	cmp	r0, r2
   13ff0:	mvncc	r1, #0
   13ff4:	movwhi	r1, #1
   13ff8:	mov	r0, r1
   13ffc:	bx	lr
   14000:	cmp	r1, #0
   14004:	mvnne	r1, #0
   14008:	mov	r0, r1
   1400c:	bx	lr

00014010 <table_compare_int16@@Base>:
   14010:	cmp	r0, #0
   14014:	beq	14048 <table_compare_int16@@Base+0x38>
   14018:	cmp	r1, #0
   1401c:	moveq	r1, #1
   14020:	moveq	r0, r1
   14024:	bxeq	lr
   14028:	ldrsh	r2, [r1]
   1402c:	ldrsh	r0, [r0]
   14030:	mov	r1, #0
   14034:	cmp	r0, r2
   14038:	mvnlt	r1, #0
   1403c:	movwgt	r1, #1
   14040:	mov	r0, r1
   14044:	bx	lr
   14048:	cmp	r1, #0
   1404c:	mvnne	r1, #0
   14050:	mov	r0, r1
   14054:	bx	lr

00014058 <table_compare_uint16@@Base>:
   14058:	cmp	r0, #0
   1405c:	beq	14090 <table_compare_uint16@@Base+0x38>
   14060:	cmp	r1, #0
   14064:	moveq	r1, #1
   14068:	moveq	r0, r1
   1406c:	bxeq	lr
   14070:	ldrh	r2, [r1]
   14074:	ldrh	r0, [r0]
   14078:	mov	r1, #0
   1407c:	cmp	r0, r2
   14080:	mvncc	r1, #0
   14084:	movwhi	r1, #1
   14088:	mov	r0, r1
   1408c:	bx	lr
   14090:	cmp	r1, #0
   14094:	mvnne	r1, #0
   14098:	mov	r0, r1
   1409c:	bx	lr

000140a0 <table_compare_int32@@Base>:
   140a0:	cmp	r0, #0
   140a4:	beq	140d8 <table_compare_int32@@Base+0x38>
   140a8:	cmp	r1, #0
   140ac:	moveq	r1, #1
   140b0:	moveq	r0, r1
   140b4:	bxeq	lr
   140b8:	ldr	r2, [r1]
   140bc:	ldr	r0, [r0]
   140c0:	mov	r1, #0
   140c4:	cmp	r0, r2
   140c8:	mvnlt	r1, #0
   140cc:	movwgt	r1, #1
   140d0:	mov	r0, r1
   140d4:	bx	lr
   140d8:	cmp	r1, #0
   140dc:	mvnne	r1, #0
   140e0:	mov	r0, r1
   140e4:	bx	lr

000140e8 <table_compare_uint32@@Base>:
   140e8:	cmp	r0, #0
   140ec:	beq	14120 <table_compare_uint32@@Base+0x38>
   140f0:	cmp	r1, #0
   140f4:	moveq	r1, #1
   140f8:	moveq	r0, r1
   140fc:	bxeq	lr
   14100:	ldr	r2, [r1]
   14104:	ldr	r0, [r0]
   14108:	mov	r1, #0
   1410c:	cmp	r0, r2
   14110:	mvncc	r1, #0
   14114:	movwhi	r1, #1
   14118:	mov	r0, r1
   1411c:	bx	lr
   14120:	cmp	r1, #0
   14124:	mvnne	r1, #0
   14128:	mov	r0, r1
   1412c:	bx	lr

00014130 <table_compare_int64@@Base>:
   14130:	cmp	r0, #0
   14134:	beq	14188 <table_compare_int64@@Base+0x58>
   14138:	cmp	r1, #0
   1413c:	moveq	r1, #1
   14140:	moveq	r0, r1
   14144:	bxeq	lr
   14148:	push	{r5, r7, fp, lr}
   1414c:	add	fp, sp, #8
   14150:	ldm	r0, {r0, r5}
   14154:	ldm	r1, {r2, r7}
   14158:	mov	r1, #0
   1415c:	subs	r3, r0, r2
   14160:	sbcs	r3, r5, r7
   14164:	movwlt	r1, #1
   14168:	cmp	r1, #0
   1416c:	mvnne	r1, #0
   14170:	subs	r0, r2, r0
   14174:	sbcs	r0, r7, r5
   14178:	movwlt	r1, #1
   1417c:	pop	{r5, r7, fp, lr}
   14180:	mov	r0, r1
   14184:	bx	lr
   14188:	cmp	r1, #0
   1418c:	mvnne	r1, #0
   14190:	mov	r0, r1
   14194:	bx	lr

00014198 <table_compare_uint64@@Base>:
   14198:	cmp	r0, #0
   1419c:	beq	141f0 <table_compare_uint64@@Base+0x58>
   141a0:	cmp	r1, #0
   141a4:	moveq	r1, #1
   141a8:	moveq	r0, r1
   141ac:	bxeq	lr
   141b0:	push	{r5, r7, fp, lr}
   141b4:	add	fp, sp, #8
   141b8:	ldm	r0, {r0, r5}
   141bc:	ldm	r1, {r2, r7}
   141c0:	mov	r1, #0
   141c4:	subs	r3, r0, r2
   141c8:	sbcs	r3, r5, r7
   141cc:	movwcc	r1, #1
   141d0:	cmp	r1, #0
   141d4:	mvnne	r1, #0
   141d8:	subs	r0, r2, r0
   141dc:	sbcs	r0, r7, r5
   141e0:	movwcc	r1, #1
   141e4:	pop	{r5, r7, fp, lr}
   141e8:	mov	r0, r1
   141ec:	bx	lr
   141f0:	cmp	r1, #0
   141f4:	mvnne	r1, #0
   141f8:	mov	r0, r1
   141fc:	bx	lr

00014200 <table_compare_short@@Base>:
   14200:	cmp	r0, #0
   14204:	beq	14238 <table_compare_short@@Base+0x38>
   14208:	cmp	r1, #0
   1420c:	moveq	r1, #1
   14210:	moveq	r0, r1
   14214:	bxeq	lr
   14218:	ldrsh	r2, [r1]
   1421c:	ldrsh	r0, [r0]
   14220:	mov	r1, #0
   14224:	cmp	r0, r2
   14228:	mvnlt	r1, #0
   1422c:	movwgt	r1, #1
   14230:	mov	r0, r1
   14234:	bx	lr
   14238:	cmp	r1, #0
   1423c:	mvnne	r1, #0
   14240:	mov	r0, r1
   14244:	bx	lr

00014248 <table_compare_ushort@@Base>:
   14248:	cmp	r0, #0
   1424c:	beq	14280 <table_compare_ushort@@Base+0x38>
   14250:	cmp	r1, #0
   14254:	moveq	r1, #1
   14258:	moveq	r0, r1
   1425c:	bxeq	lr
   14260:	ldrh	r2, [r1]
   14264:	ldrh	r0, [r0]
   14268:	mov	r1, #0
   1426c:	cmp	r0, r2
   14270:	mvncc	r1, #0
   14274:	movwhi	r1, #1
   14278:	mov	r0, r1
   1427c:	bx	lr
   14280:	cmp	r1, #0
   14284:	mvnne	r1, #0
   14288:	mov	r0, r1
   1428c:	bx	lr

00014290 <table_compare_long@@Base>:
   14290:	cmp	r0, #0
   14294:	beq	142c8 <table_compare_long@@Base+0x38>
   14298:	cmp	r1, #0
   1429c:	moveq	r1, #1
   142a0:	moveq	r0, r1
   142a4:	bxeq	lr
   142a8:	ldr	r2, [r1]
   142ac:	ldr	r0, [r0]
   142b0:	mov	r1, #0
   142b4:	cmp	r0, r2
   142b8:	mvnlt	r1, #0
   142bc:	movwgt	r1, #1
   142c0:	mov	r0, r1
   142c4:	bx	lr
   142c8:	cmp	r1, #0
   142cc:	mvnne	r1, #0
   142d0:	mov	r0, r1
   142d4:	bx	lr

000142d8 <table_compare_ulong@@Base>:
   142d8:	cmp	r0, #0
   142dc:	beq	14310 <table_compare_ulong@@Base+0x38>
   142e0:	cmp	r1, #0
   142e4:	moveq	r1, #1
   142e8:	moveq	r0, r1
   142ec:	bxeq	lr
   142f0:	ldr	r2, [r1]
   142f4:	ldr	r0, [r0]
   142f8:	mov	r1, #0
   142fc:	cmp	r0, r2
   14300:	mvncc	r1, #0
   14304:	movwhi	r1, #1
   14308:	mov	r0, r1
   1430c:	bx	lr
   14310:	cmp	r1, #0
   14314:	mvnne	r1, #0
   14318:	mov	r0, r1
   1431c:	bx	lr

00014320 <table_compare_llong@@Base>:
   14320:	cmp	r0, #0
   14324:	beq	14378 <table_compare_llong@@Base+0x58>
   14328:	cmp	r1, #0
   1432c:	moveq	r1, #1
   14330:	moveq	r0, r1
   14334:	bxeq	lr
   14338:	push	{r5, r7, fp, lr}
   1433c:	add	fp, sp, #8
   14340:	ldm	r0, {r0, r5}
   14344:	ldm	r1, {r2, r7}
   14348:	mov	r1, #0
   1434c:	subs	r3, r0, r2
   14350:	sbcs	r3, r5, r7
   14354:	movwlt	r1, #1
   14358:	cmp	r1, #0
   1435c:	mvnne	r1, #0
   14360:	subs	r0, r2, r0
   14364:	sbcs	r0, r7, r5
   14368:	movwlt	r1, #1
   1436c:	pop	{r5, r7, fp, lr}
   14370:	mov	r0, r1
   14374:	bx	lr
   14378:	cmp	r1, #0
   1437c:	mvnne	r1, #0
   14380:	mov	r0, r1
   14384:	bx	lr

00014388 <table_compare_ullong@@Base>:
   14388:	cmp	r0, #0
   1438c:	beq	143c0 <table_compare_ullong@@Base+0x38>
   14390:	cmp	r1, #0
   14394:	moveq	r1, #1
   14398:	moveq	r0, r1
   1439c:	bxeq	lr
   143a0:	ldr	r2, [r1]
   143a4:	ldr	r0, [r0]
   143a8:	mov	r1, #0
   143ac:	cmp	r0, r2
   143b0:	mvncc	r1, #0
   143b4:	movwhi	r1, #1
   143b8:	mov	r0, r1
   143bc:	bx	lr
   143c0:	cmp	r1, #0
   143c4:	mvnne	r1, #0
   143c8:	mov	r0, r1
   143cc:	bx	lr

000143d0 <table_compare_float@@Base>:
   143d0:	cmp	r0, #0
   143d4:	beq	1440c <table_compare_float@@Base+0x3c>
   143d8:	cmp	r1, #0
   143dc:	moveq	r1, #1
   143e0:	moveq	r0, r1
   143e4:	bxeq	lr
   143e8:	vldr	s0, [r1]
   143ec:	vldr	s2, [r0]
   143f0:	mov	r1, #0
   143f4:	vcmpe.f32	s2, s0
   143f8:	vmrs	APSR_nzcv, fpscr
   143fc:	mvnmi	r1, #0
   14400:	movwgt	r1, #1
   14404:	mov	r0, r1
   14408:	bx	lr
   1440c:	cmp	r1, #0
   14410:	mvnne	r1, #0
   14414:	mov	r0, r1
   14418:	bx	lr

0001441c <table_compare_double@@Base>:
   1441c:	cmp	r0, #0
   14420:	beq	14458 <table_compare_double@@Base+0x3c>
   14424:	cmp	r1, #0
   14428:	moveq	r1, #1
   1442c:	moveq	r0, r1
   14430:	bxeq	lr
   14434:	vldr	d16, [r1]
   14438:	vldr	d17, [r0]
   1443c:	mov	r1, #0
   14440:	vcmpe.f64	d17, d16
   14444:	vmrs	APSR_nzcv, fpscr
   14448:	mvnmi	r1, #0
   1444c:	movwgt	r1, #1
   14450:	mov	r0, r1
   14454:	bx	lr
   14458:	cmp	r1, #0
   1445c:	mvnne	r1, #0
   14460:	mov	r0, r1
   14464:	bx	lr

00014468 <table_compare_ldouble@@Base>:
   14468:	cmp	r0, #0
   1446c:	beq	144a4 <table_compare_ldouble@@Base+0x3c>
   14470:	cmp	r1, #0
   14474:	moveq	r1, #1
   14478:	moveq	r0, r1
   1447c:	bxeq	lr
   14480:	vldr	d16, [r1]
   14484:	vldr	d17, [r0]
   14488:	mov	r1, #0
   1448c:	vcmpe.f64	d17, d16
   14490:	vmrs	APSR_nzcv, fpscr
   14494:	mvnmi	r1, #0
   14498:	movwgt	r1, #1
   1449c:	mov	r0, r1
   144a0:	bx	lr
   144a4:	cmp	r1, #0
   144a8:	mvnne	r1, #0
   144ac:	mov	r0, r1
   144b0:	bx	lr

000144b4 <table_compare_char@@Base>:
   144b4:	cmp	r0, #0
   144b8:	beq	144ec <table_compare_char@@Base+0x38>
   144bc:	cmp	r1, #0
   144c0:	moveq	r1, #1
   144c4:	moveq	r0, r1
   144c8:	bxeq	lr
   144cc:	ldrb	r2, [r1]
   144d0:	ldrb	r0, [r0]
   144d4:	mov	r1, #0
   144d8:	cmp	r0, r2
   144dc:	mvncc	r1, #0
   144e0:	movwhi	r1, #1
   144e4:	mov	r0, r1
   144e8:	bx	lr
   144ec:	cmp	r1, #0
   144f0:	mvnne	r1, #0
   144f4:	mov	r0, r1
   144f8:	bx	lr

000144fc <table_compare_uchar@@Base>:
   144fc:	cmp	r0, #0
   14500:	beq	14534 <table_compare_uchar@@Base+0x38>
   14504:	cmp	r1, #0
   14508:	moveq	r1, #1
   1450c:	moveq	r0, r1
   14510:	bxeq	lr
   14514:	ldrb	r2, [r1]
   14518:	ldrb	r0, [r0]
   1451c:	mov	r1, #0
   14520:	cmp	r0, r2
   14524:	mvncc	r1, #0
   14528:	movwhi	r1, #1
   1452c:	mov	r0, r1
   14530:	bx	lr
   14534:	cmp	r1, #0
   14538:	mvnne	r1, #0
   1453c:	mov	r0, r1
   14540:	bx	lr

00014544 <table_compare_string@@Base>:
   14544:	cmp	r0, #0
   14548:	beq	14560 <table_compare_string@@Base+0x1c>
   1454c:	cmp	r1, #0
   14550:	moveq	r1, #1
   14554:	moveq	r0, r1
   14558:	bxeq	lr
   1455c:	b	11f88 <strcmp@plt>
   14560:	cmp	r1, #0
   14564:	mvnne	r1, #0
   14568:	mov	r0, r1
   1456c:	bx	lr

00014570 <table_compare_ptr@@Base>:
   14570:	cmp	r0, r1
   14574:	mov	r2, #0
   14578:	mvncc	r2, #0
   1457c:	movwhi	r2, #1
   14580:	mov	r0, r2
   14584:	bx	lr

00014588 <table_get_default_compare_function_for_data_type@@Base>:
   14588:	cmp	r0, #23
   1458c:	movhi	r0, #0
   14590:	bxhi	lr
   14594:	ldr	r1, [pc, #8]	; 145a4 <table_get_default_compare_function_for_data_type@@Base+0x1c>
   14598:	add	r1, pc, r1
   1459c:	ldr	r0, [r1, r0, lsl #2]
   145a0:	bx	lr
   145a4:	andeq	r2, r1, r0, lsl r9

000145a8 <table_get@@Base>:
   145a8:	push	{fp, lr}
   145ac:	mov	fp, sp
   145b0:	bl	12f84 <table_get_cell_ptr@@Base>
   145b4:	ldr	r0, [r0]
   145b8:	pop	{fp, pc}

000145bc <table_get_bool@@Base>:
   145bc:	push	{fp, lr}
   145c0:	mov	fp, sp
   145c4:	bl	12f84 <table_get_cell_ptr@@Base>
   145c8:	ldr	r0, [r0]
   145cc:	ldrb	r0, [r0]
   145d0:	pop	{fp, pc}

000145d4 <table_get_int@@Base>:
   145d4:	push	{fp, lr}
   145d8:	mov	fp, sp
   145dc:	bl	12f84 <table_get_cell_ptr@@Base>
   145e0:	ldr	r0, [r0]
   145e4:	ldr	r0, [r0]
   145e8:	pop	{fp, pc}

000145ec <table_get_uint@@Base>:
   145ec:	push	{fp, lr}
   145f0:	mov	fp, sp
   145f4:	bl	12f84 <table_get_cell_ptr@@Base>
   145f8:	ldr	r0, [r0]
   145fc:	ldr	r0, [r0]
   14600:	pop	{fp, pc}

00014604 <table_get_int8@@Base>:
   14604:	push	{fp, lr}
   14608:	mov	fp, sp
   1460c:	bl	12f84 <table_get_cell_ptr@@Base>
   14610:	ldr	r0, [r0]
   14614:	ldrsb	r0, [r0]
   14618:	pop	{fp, pc}

0001461c <table_get_uint8@@Base>:
   1461c:	push	{fp, lr}
   14620:	mov	fp, sp
   14624:	bl	12f84 <table_get_cell_ptr@@Base>
   14628:	ldr	r0, [r0]
   1462c:	ldrb	r0, [r0]
   14630:	pop	{fp, pc}

00014634 <table_get_int16@@Base>:
   14634:	push	{fp, lr}
   14638:	mov	fp, sp
   1463c:	bl	12f84 <table_get_cell_ptr@@Base>
   14640:	ldr	r0, [r0]
   14644:	ldrsh	r0, [r0]
   14648:	pop	{fp, pc}

0001464c <table_get_uint16@@Base>:
   1464c:	push	{fp, lr}
   14650:	mov	fp, sp
   14654:	bl	12f84 <table_get_cell_ptr@@Base>
   14658:	ldr	r0, [r0]
   1465c:	ldrh	r0, [r0]
   14660:	pop	{fp, pc}

00014664 <table_get_int32@@Base>:
   14664:	push	{fp, lr}
   14668:	mov	fp, sp
   1466c:	bl	12f84 <table_get_cell_ptr@@Base>
   14670:	ldr	r0, [r0]
   14674:	ldr	r0, [r0]
   14678:	pop	{fp, pc}

0001467c <table_get_uint32@@Base>:
   1467c:	push	{fp, lr}
   14680:	mov	fp, sp
   14684:	bl	12f84 <table_get_cell_ptr@@Base>
   14688:	ldr	r0, [r0]
   1468c:	ldr	r0, [r0]
   14690:	pop	{fp, pc}

00014694 <table_get_int64@@Base>:
   14694:	push	{fp, lr}
   14698:	mov	fp, sp
   1469c:	bl	12f84 <table_get_cell_ptr@@Base>
   146a0:	ldr	r0, [r0]
   146a4:	ldrd	r0, [r0]
   146a8:	pop	{fp, pc}

000146ac <table_get_uint64@@Base>:
   146ac:	push	{fp, lr}
   146b0:	mov	fp, sp
   146b4:	bl	12f84 <table_get_cell_ptr@@Base>
   146b8:	ldr	r0, [r0]
   146bc:	ldrd	r0, [r0]
   146c0:	pop	{fp, pc}

000146c4 <table_get_short@@Base>:
   146c4:	push	{fp, lr}
   146c8:	mov	fp, sp
   146cc:	bl	12f84 <table_get_cell_ptr@@Base>
   146d0:	ldr	r0, [r0]
   146d4:	ldrsh	r0, [r0]
   146d8:	pop	{fp, pc}

000146dc <table_get_ushort@@Base>:
   146dc:	push	{fp, lr}
   146e0:	mov	fp, sp
   146e4:	bl	12f84 <table_get_cell_ptr@@Base>
   146e8:	ldr	r0, [r0]
   146ec:	ldrh	r0, [r0]
   146f0:	pop	{fp, pc}

000146f4 <table_get_long@@Base>:
   146f4:	push	{fp, lr}
   146f8:	mov	fp, sp
   146fc:	bl	12f84 <table_get_cell_ptr@@Base>
   14700:	ldr	r0, [r0]
   14704:	ldr	r0, [r0]
   14708:	pop	{fp, pc}

0001470c <table_get_ulong@@Base>:
   1470c:	push	{fp, lr}
   14710:	mov	fp, sp
   14714:	bl	12f84 <table_get_cell_ptr@@Base>
   14718:	ldr	r0, [r0]
   1471c:	ldr	r0, [r0]
   14720:	pop	{fp, pc}

00014724 <table_get_llong@@Base>:
   14724:	push	{fp, lr}
   14728:	mov	fp, sp
   1472c:	bl	12f84 <table_get_cell_ptr@@Base>
   14730:	ldr	r0, [r0]
   14734:	ldrd	r0, [r0]
   14738:	pop	{fp, pc}

0001473c <table_get_ullong@@Base>:
   1473c:	push	{fp, lr}
   14740:	mov	fp, sp
   14744:	bl	12f84 <table_get_cell_ptr@@Base>
   14748:	ldr	r0, [r0]
   1474c:	ldrd	r0, [r0]
   14750:	pop	{fp, pc}

00014754 <table_get_float@@Base>:
   14754:	push	{fp, lr}
   14758:	mov	fp, sp
   1475c:	bl	12f84 <table_get_cell_ptr@@Base>
   14760:	ldr	r0, [r0]
   14764:	vldr	s0, [r0]
   14768:	pop	{fp, pc}

0001476c <table_get_double@@Base>:
   1476c:	push	{fp, lr}
   14770:	mov	fp, sp
   14774:	bl	12f84 <table_get_cell_ptr@@Base>
   14778:	ldr	r0, [r0]
   1477c:	vldr	d0, [r0]
   14780:	pop	{fp, pc}

00014784 <table_get_ldouble@@Base>:
   14784:	push	{fp, lr}
   14788:	mov	fp, sp
   1478c:	bl	12f84 <table_get_cell_ptr@@Base>
   14790:	ldr	r0, [r0]
   14794:	vldr	d0, [r0]
   14798:	pop	{fp, pc}

0001479c <table_get_char@@Base>:
   1479c:	push	{fp, lr}
   147a0:	mov	fp, sp
   147a4:	bl	12f84 <table_get_cell_ptr@@Base>
   147a8:	ldr	r0, [r0]
   147ac:	ldrb	r0, [r0]
   147b0:	pop	{fp, pc}

000147b4 <table_get_uchar@@Base>:
   147b4:	push	{fp, lr}
   147b8:	mov	fp, sp
   147bc:	bl	12f84 <table_get_cell_ptr@@Base>
   147c0:	ldr	r0, [r0]
   147c4:	ldrb	r0, [r0]
   147c8:	pop	{fp, pc}

000147cc <table_get_string@@Base>:
   147cc:	push	{fp, lr}
   147d0:	mov	fp, sp
   147d4:	bl	12f84 <table_get_cell_ptr@@Base>
   147d8:	ldr	r0, [r0]
   147dc:	pop	{fp, pc}

000147e0 <table_get_ptr@@Base>:
   147e0:	push	{fp, lr}
   147e4:	mov	fp, sp
   147e8:	bl	12f84 <table_get_cell_ptr@@Base>
   147ec:	ldr	r0, [r0]
   147f0:	pop	{fp, pc}

000147f4 <table_row_init@@Base>:
   147f4:	push	{r4, r5, fp, lr}
   147f8:	add	fp, sp, #8
   147fc:	mov	r4, r1
   14800:	ldr	r1, [r0, #12]
   14804:	ldr	r5, [r0, #16]
   14808:	lsl	r0, r1, #2
   1480c:	bl	11fdc <malloc@plt>
   14810:	str	r0, [r5, r4, lsl #2]
   14814:	pop	{r4, r5, fp, pc}

00014818 <table_get_row_ptr@@Base>:
   14818:	ldr	r0, [r0, #16]
   1481c:	add	r0, r0, r1, lsl #2
   14820:	bx	lr

00014824 <table_row_destroy@@Base>:
   14824:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14828:	add	fp, sp, #24
   1482c:	mov	r4, r1
   14830:	mov	r5, r0
   14834:	bl	13ae0 <table_get_column_length@@Base>
   14838:	ldr	r8, [r5, #16]
   1483c:	cmp	r0, #1
   14840:	blt	14868 <table_row_destroy@@Base+0x44>
   14844:	mov	r6, r0
   14848:	mov	r7, #0
   1484c:	mov	r0, r5
   14850:	mov	r1, r4
   14854:	mov	r2, r7
   14858:	bl	12fa0 <table_cell_destroy@@Base>
   1485c:	add	r7, r7, #1
   14860:	cmp	r6, r7
   14864:	bne	1484c <table_row_destroy@@Base+0x28>
   14868:	ldr	r0, [r8, r4, lsl #2]
   1486c:	cmp	r0, #0
   14870:	beq	1487c <table_row_destroy@@Base+0x58>
   14874:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14878:	b	11fa0 <free@plt>
   1487c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014880 <table_get_row_length@@Base>:
   14880:	ldr	r0, [r0, #20]
   14884:	bx	lr

00014888 <table_add_row@@Base>:
   14888:	push	{r4, r5, r6, r7, fp, lr}
   1488c:	add	fp, sp, #16
   14890:	ldr	r5, [r0, #20]
   14894:	ldr	r1, [r0, #24]
   14898:	mov	r4, r0
   1489c:	udiv	r0, r5, r1
   148a0:	mls	r0, r0, r1, r5
   148a4:	cmp	r0, #0
   148a8:	bne	148cc <table_add_row@@Base+0x44>
   148ac:	ldr	r2, [r4, #28]
   148b0:	ldr	r0, [r4, #16]
   148b4:	add	r1, r2, r1
   148b8:	str	r1, [r4, #28]
   148bc:	lsl	r1, r1, #2
   148c0:	bl	11fb8 <realloc@plt>
   148c4:	str	r0, [r4, #16]
   148c8:	ldr	r5, [r4, #20]
   148cc:	mov	r0, r4
   148d0:	bl	13ae0 <table_get_column_length@@Base>
   148d4:	mov	r6, r0
   148d8:	ldr	r0, [r4, #12]
   148dc:	ldr	r7, [r4, #16]
   148e0:	lsl	r0, r0, #2
   148e4:	bl	11fdc <malloc@plt>
   148e8:	cmp	r6, #1
   148ec:	str	r0, [r7, r5, lsl #2]
   148f0:	blt	14914 <table_add_row@@Base+0x8c>
   148f4:	mov	r7, #0
   148f8:	mov	r0, r4
   148fc:	mov	r1, r5
   14900:	mov	r2, r7
   14904:	bl	12f64 <table_cell_init@@Base>
   14908:	add	r7, r7, #1
   1490c:	cmp	r6, r7
   14910:	bne	148f8 <table_add_row@@Base+0x70>
   14914:	ldr	r1, [r4, #20]
   14918:	mov	r0, r4
   1491c:	mvn	r2, #0
   14920:	mov	r3, #2
   14924:	bl	12ee0 <table_notify@@Base>
   14928:	ldr	r0, [r4, #20]
   1492c:	add	r1, r0, #1
   14930:	str	r1, [r4, #20]
   14934:	pop	{r4, r5, r6, r7, fp, pc}

00014938 <table_remove_row@@Base>:
   14938:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1493c:	add	fp, sp, #24
   14940:	ldr	r8, [r0, #20]
   14944:	mov	r4, r1
   14948:	mov	r5, r0
   1494c:	bl	13ae0 <table_get_column_length@@Base>
   14950:	cmp	r0, #1
   14954:	blt	149a8 <table_remove_row@@Base+0x70>
   14958:	mov	r6, r0
   1495c:	mov	r7, #0
   14960:	b	14970 <table_remove_row@@Base+0x38>
   14964:	add	r7, r7, #1
   14968:	cmp	r6, r7
   1496c:	beq	149a8 <table_remove_row@@Base+0x70>
   14970:	mov	r0, r5
   14974:	mov	r1, r7
   14978:	bl	13b58 <table_get_column_data_type@@Base>
   1497c:	cmp	r0, #23
   14980:	beq	14964 <table_remove_row@@Base+0x2c>
   14984:	mov	r0, r5
   14988:	mov	r1, r4
   1498c:	mov	r2, r7
   14990:	bl	12f84 <table_get_cell_ptr@@Base>
   14994:	ldr	r0, [r0]
   14998:	cmp	r0, #0
   1499c:	beq	14964 <table_remove_row@@Base+0x2c>
   149a0:	bl	11fa0 <free@plt>
   149a4:	b	14964 <table_remove_row@@Base+0x2c>
   149a8:	ldr	r0, [r5, #16]
   149ac:	ldr	r0, [r0, r4, lsl #2]
   149b0:	cmp	r0, #0
   149b4:	beq	149bc <table_remove_row@@Base+0x84>
   149b8:	bl	11fa0 <free@plt>
   149bc:	sub	r0, r8, #1
   149c0:	cmp	r0, r4
   149c4:	ble	14a34 <table_remove_row@@Base+0xfc>
   149c8:	mvn	r0, r4
   149cc:	add	r1, r8, r0
   149d0:	sub	r0, r8, #2
   149d4:	tst	r1, #1
   149d8:	mov	r1, r4
   149dc:	beq	149f4 <table_remove_row@@Base+0xbc>
   149e0:	ldr	r1, [r5, #16]
   149e4:	add	r2, r1, r4, lsl #2
   149e8:	ldr	r2, [r2, #4]
   149ec:	str	r2, [r1, r4, lsl #2]
   149f0:	add	r1, r4, #1
   149f4:	cmp	r0, r4
   149f8:	beq	14a34 <table_remove_row@@Base+0xfc>
   149fc:	mvn	r0, r1
   14a00:	lsl	r1, r1, #2
   14a04:	add	r0, r0, r8
   14a08:	ldr	r2, [r5, #16]
   14a0c:	subs	r0, r0, #2
   14a10:	add	r3, r2, r1
   14a14:	ldr	r3, [r3, #4]
   14a18:	str	r3, [r2, r1]
   14a1c:	ldr	r2, [r5, #16]
   14a20:	add	r2, r2, r1
   14a24:	add	r1, r1, #8
   14a28:	ldr	r3, [r2, #8]
   14a2c:	str	r3, [r2, #4]
   14a30:	bne	14a08 <table_remove_row@@Base+0xd0>
   14a34:	ldr	r0, [r5, #20]
   14a38:	ldr	r1, [r5, #24]
   14a3c:	sub	r0, r0, #1
   14a40:	udiv	r2, r0, r1
   14a44:	str	r0, [r5, #20]
   14a48:	mls	r0, r2, r1, r0
   14a4c:	cmp	r0, #0
   14a50:	bne	14a70 <table_remove_row@@Base+0x138>
   14a54:	ldr	r2, [r5, #28]
   14a58:	ldr	r0, [r5, #16]
   14a5c:	sub	r1, r2, r1
   14a60:	str	r1, [r5, #28]
   14a64:	lsl	r1, r1, #2
   14a68:	bl	11fb8 <realloc@plt>
   14a6c:	str	r0, [r5, #16]
   14a70:	mov	r0, r5
   14a74:	mov	r1, r4
   14a78:	mvn	r2, #0
   14a7c:	mov	r3, #4
   14a80:	bl	12ee0 <table_notify@@Base>
   14a84:	mov	r0, #0
   14a88:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014a8c <table_set_row_ptr@@Base>:
   14a8c:	ldr	r2, [r2]
   14a90:	ldr	r0, [r0, #16]
   14a94:	str	r2, [r0, r1, lsl #2]
   14a98:	bx	lr

00014a9c <table_set@@Base>:
   14a9c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14aa0:	add	fp, sp, #24
   14aa4:	mov	r8, r3
   14aa8:	mov	r4, r2
   14aac:	mov	r9, r1
   14ab0:	mov	r6, r0
   14ab4:	bl	12f84 <table_get_cell_ptr@@Base>
   14ab8:	mov	r5, r0
   14abc:	mov	r0, r6
   14ac0:	mov	r1, r4
   14ac4:	bl	13ab8 <table_get_col_ptr@@Base>
   14ac8:	ldr	r1, [fp, #8]
   14acc:	mvn	r7, #0
   14ad0:	cmp	r1, #23
   14ad4:	bhi	14d9c <table_set@@Base+0x300>
   14ad8:	add	r2, pc, #4
   14adc:	ldr	r1, [r2, r1, lsl #2]
   14ae0:	add	pc, r2, r1
   14ae4:	andeq	r0, r0, r0, rrx
   14ae8:	andeq	r0, r0, r0, ror r0
   14aec:	andeq	r0, r0, r0, lsl #1
   14af0:	muleq	r0, r0, r0
   14af4:	andeq	r0, r0, r0, lsr #1
   14af8:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   14afc:	andeq	r0, r0, r0, asr #1
   14b00:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   14b04:	andeq	r0, r0, r0, ror #1
   14b08:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   14b0c:	andeq	r0, r0, r0, lsl #2
   14b10:	andeq	r0, r0, r0, lsl r1
   14b14:	andeq	r0, r0, r8, asr #2
   14b18:	andeq	r0, r0, r8, asr r1
   14b1c:	andeq	r0, r0, r8, ror #2
   14b20:	andeq	r0, r0, r8, ror r1
   14b24:	andeq	r0, r0, r8, lsl #3
   14b28:	andeq	r0, r0, r0, asr #3
   14b2c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   14b30:	andeq	r0, r0, r0, lsl r2
   14b34:	andeq	r0, r0, r0, lsr #4
   14b38:	andeq	r0, r0, r0, lsr r2
   14b3c:	andeq	r0, r0, ip, ror #4
   14b40:	andeq	r0, r0, r0, asr #5
   14b44:	ldr	r0, [r0, #4]
   14b48:	cmp	r0, #0
   14b4c:	bne	14d9c <table_set@@Base+0x300>
   14b50:	b	14c78 <table_set@@Base+0x1dc>
   14b54:	ldr	r0, [r0, #4]
   14b58:	cmp	r0, #1
   14b5c:	beq	14c78 <table_set@@Base+0x1dc>
   14b60:	b	14d9c <table_set@@Base+0x300>
   14b64:	ldr	r0, [r0, #4]
   14b68:	cmp	r0, #2
   14b6c:	beq	14d5c <table_set@@Base+0x2c0>
   14b70:	b	14d9c <table_set@@Base+0x300>
   14b74:	ldr	r0, [r0, #4]
   14b78:	cmp	r0, #3
   14b7c:	beq	14d5c <table_set@@Base+0x2c0>
   14b80:	b	14d9c <table_set@@Base+0x300>
   14b84:	ldr	r0, [r0, #4]
   14b88:	cmp	r0, #4
   14b8c:	beq	14c00 <table_set@@Base+0x164>
   14b90:	b	14d9c <table_set@@Base+0x300>
   14b94:	ldr	r0, [r0, #4]
   14b98:	cmp	r0, #5
   14b9c:	beq	14c00 <table_set@@Base+0x164>
   14ba0:	b	14d9c <table_set@@Base+0x300>
   14ba4:	ldr	r0, [r0, #4]
   14ba8:	cmp	r0, #6
   14bac:	beq	14c78 <table_set@@Base+0x1dc>
   14bb0:	b	14d9c <table_set@@Base+0x300>
   14bb4:	ldr	r0, [r0, #4]
   14bb8:	cmp	r0, #7
   14bbc:	beq	14c78 <table_set@@Base+0x1dc>
   14bc0:	b	14d9c <table_set@@Base+0x300>
   14bc4:	ldr	r0, [r0, #4]
   14bc8:	cmp	r0, #8
   14bcc:	beq	14cc0 <table_set@@Base+0x224>
   14bd0:	b	14d9c <table_set@@Base+0x300>
   14bd4:	ldr	r0, [r0, #4]
   14bd8:	cmp	r0, #9
   14bdc:	beq	14cc0 <table_set@@Base+0x224>
   14be0:	b	14d9c <table_set@@Base+0x300>
   14be4:	ldr	r0, [r0, #4]
   14be8:	cmp	r0, #10
   14bec:	beq	14c00 <table_set@@Base+0x164>
   14bf0:	b	14d9c <table_set@@Base+0x300>
   14bf4:	ldr	r0, [r0, #4]
   14bf8:	cmp	r0, #11
   14bfc:	bne	14d9c <table_set@@Base+0x300>
   14c00:	ldr	r0, [r5]
   14c04:	cmp	r0, #0
   14c08:	bne	14c20 <table_set@@Base+0x184>
   14c0c:	mov	r0, #2
   14c10:	bl	11fdc <malloc@plt>
   14c14:	cmp	r0, #0
   14c18:	str	r0, [r5]
   14c1c:	beq	14d9c <table_set@@Base+0x300>
   14c20:	ldrh	r1, [r8]
   14c24:	strh	r1, [r0]
   14c28:	b	14d84 <table_set@@Base+0x2e8>
   14c2c:	ldr	r0, [r0, #4]
   14c30:	cmp	r0, #12
   14c34:	beq	14c78 <table_set@@Base+0x1dc>
   14c38:	b	14d9c <table_set@@Base+0x300>
   14c3c:	ldr	r0, [r0, #4]
   14c40:	cmp	r0, #13
   14c44:	beq	14c78 <table_set@@Base+0x1dc>
   14c48:	b	14d9c <table_set@@Base+0x300>
   14c4c:	ldr	r0, [r0, #4]
   14c50:	cmp	r0, #14
   14c54:	beq	14cc0 <table_set@@Base+0x224>
   14c58:	b	14d9c <table_set@@Base+0x300>
   14c5c:	ldr	r0, [r0, #4]
   14c60:	cmp	r0, #15
   14c64:	beq	14cc0 <table_set@@Base+0x224>
   14c68:	b	14d9c <table_set@@Base+0x300>
   14c6c:	ldr	r0, [r0, #4]
   14c70:	cmp	r0, #16
   14c74:	bne	14d9c <table_set@@Base+0x300>
   14c78:	ldr	r0, [r5]
   14c7c:	cmp	r0, #0
   14c80:	bne	14c98 <table_set@@Base+0x1fc>
   14c84:	mov	r0, #4
   14c88:	bl	11fdc <malloc@plt>
   14c8c:	cmp	r0, #0
   14c90:	str	r0, [r5]
   14c94:	beq	14d9c <table_set@@Base+0x300>
   14c98:	ldr	r1, [r8]
   14c9c:	str	r1, [r0]
   14ca0:	b	14d84 <table_set@@Base+0x2e8>
   14ca4:	ldr	r0, [r0, #4]
   14ca8:	cmp	r0, #17
   14cac:	beq	14cc0 <table_set@@Base+0x224>
   14cb0:	b	14d9c <table_set@@Base+0x300>
   14cb4:	ldr	r0, [r0, #4]
   14cb8:	cmp	r0, #18
   14cbc:	bne	14d9c <table_set@@Base+0x300>
   14cc0:	ldr	r0, [r5]
   14cc4:	cmp	r0, #0
   14cc8:	bne	14ce0 <table_set@@Base+0x244>
   14ccc:	mov	r0, #8
   14cd0:	bl	11fdc <malloc@plt>
   14cd4:	cmp	r0, #0
   14cd8:	str	r0, [r5]
   14cdc:	beq	14d9c <table_set@@Base+0x300>
   14ce0:	ldr	r1, [r8]
   14ce4:	ldr	r2, [r8, #4]
   14ce8:	str	r2, [r0, #4]
   14cec:	str	r1, [r0]
   14cf0:	b	14d84 <table_set@@Base+0x2e8>
   14cf4:	ldr	r0, [r0, #4]
   14cf8:	cmp	r0, #19
   14cfc:	beq	14d5c <table_set@@Base+0x2c0>
   14d00:	b	14d9c <table_set@@Base+0x300>
   14d04:	ldr	r0, [r0, #4]
   14d08:	cmp	r0, #20
   14d0c:	beq	14d5c <table_set@@Base+0x2c0>
   14d10:	b	14d9c <table_set@@Base+0x300>
   14d14:	ldr	r0, [r0, #4]
   14d18:	cmp	r0, #21
   14d1c:	bne	14d9c <table_set@@Base+0x300>
   14d20:	mov	r0, r8
   14d24:	bl	12000 <strlen@plt>
   14d28:	ldr	r2, [r5]
   14d2c:	add	r1, r0, #1
   14d30:	mov	r0, r2
   14d34:	bl	11fb8 <realloc@plt>
   14d38:	cmp	r0, #0
   14d3c:	str	r0, [r5]
   14d40:	beq	14d9c <table_set@@Base+0x300>
   14d44:	mov	r1, r8
   14d48:	bl	11fc4 <strcpy@plt>
   14d4c:	b	14d84 <table_set@@Base+0x2e8>
   14d50:	ldr	r0, [r0, #4]
   14d54:	cmp	r0, #22
   14d58:	bne	14d9c <table_set@@Base+0x300>
   14d5c:	ldr	r0, [r5]
   14d60:	cmp	r0, #0
   14d64:	bne	14d7c <table_set@@Base+0x2e0>
   14d68:	mov	r0, #1
   14d6c:	bl	11fdc <malloc@plt>
   14d70:	cmp	r0, #0
   14d74:	str	r0, [r5]
   14d78:	beq	14d9c <table_set@@Base+0x300>
   14d7c:	ldrb	r1, [r8]
   14d80:	strb	r1, [r0]
   14d84:	mov	r0, r6
   14d88:	mov	r1, r9
   14d8c:	mov	r2, r4
   14d90:	mov	r3, #1
   14d94:	bl	12ee0 <table_notify@@Base>
   14d98:	mov	r7, #0
   14d9c:	mov	r0, r7
   14da0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14da4:	ldr	r0, [r0, #4]
   14da8:	cmp	r0, #23
   14dac:	bne	14d9c <table_set@@Base+0x300>
   14db0:	str	r8, [r5]
   14db4:	b	14d84 <table_set@@Base+0x2e8>

00014db8 <table_set_bool@@Base>:
   14db8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14dbc:	add	fp, sp, #24
   14dc0:	mov	r8, r3
   14dc4:	mov	r4, r2
   14dc8:	mov	r9, r1
   14dcc:	mov	r6, r0
   14dd0:	bl	12f84 <table_get_cell_ptr@@Base>
   14dd4:	mov	r5, r0
   14dd8:	mov	r0, r6
   14ddc:	mov	r1, r4
   14de0:	bl	13ab8 <table_get_col_ptr@@Base>
   14de4:	ldr	r0, [r0, #4]
   14de8:	mvn	r7, #0
   14dec:	cmp	r0, #22
   14df0:	bne	14e30 <table_set_bool@@Base+0x78>
   14df4:	ldr	r0, [r5]
   14df8:	cmp	r0, #0
   14dfc:	bne	14e14 <table_set_bool@@Base+0x5c>
   14e00:	mov	r0, #1
   14e04:	bl	11fdc <malloc@plt>
   14e08:	cmp	r0, #0
   14e0c:	str	r0, [r5]
   14e10:	beq	14e30 <table_set_bool@@Base+0x78>
   14e14:	strb	r8, [r0]
   14e18:	mov	r0, r6
   14e1c:	mov	r1, r9
   14e20:	mov	r2, r4
   14e24:	mov	r3, #1
   14e28:	bl	12ee0 <table_notify@@Base>
   14e2c:	mov	r7, #0
   14e30:	mov	r0, r7
   14e34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014e38 <table_set_int@@Base>:
   14e38:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14e3c:	add	fp, sp, #24
   14e40:	mov	r8, r3
   14e44:	mov	r4, r2
   14e48:	mov	r5, r1
   14e4c:	mov	r6, r0
   14e50:	bl	12f84 <table_get_cell_ptr@@Base>
   14e54:	mov	r9, r0
   14e58:	mov	r0, r6
   14e5c:	mov	r1, r4
   14e60:	bl	13ab8 <table_get_col_ptr@@Base>
   14e64:	ldr	r0, [r0, #4]
   14e68:	mvn	r7, #0
   14e6c:	cmp	r0, #0
   14e70:	bne	14eb0 <table_set_int@@Base+0x78>
   14e74:	ldr	r0, [r9]
   14e78:	cmp	r0, #0
   14e7c:	bne	14e94 <table_set_int@@Base+0x5c>
   14e80:	mov	r0, #4
   14e84:	bl	11fdc <malloc@plt>
   14e88:	cmp	r0, #0
   14e8c:	str	r0, [r9]
   14e90:	beq	14eb0 <table_set_int@@Base+0x78>
   14e94:	str	r8, [r0]
   14e98:	mov	r0, r6
   14e9c:	mov	r1, r5
   14ea0:	mov	r2, r4
   14ea4:	mov	r3, #1
   14ea8:	bl	12ee0 <table_notify@@Base>
   14eac:	mov	r7, #0
   14eb0:	mov	r0, r7
   14eb4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014eb8 <table_set_uint@@Base>:
   14eb8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14ebc:	add	fp, sp, #24
   14ec0:	mov	r8, r3
   14ec4:	mov	r4, r2
   14ec8:	mov	r5, r1
   14ecc:	mov	r6, r0
   14ed0:	bl	12f84 <table_get_cell_ptr@@Base>
   14ed4:	mov	r9, r0
   14ed8:	mov	r0, r6
   14edc:	mov	r1, r4
   14ee0:	bl	13ab8 <table_get_col_ptr@@Base>
   14ee4:	ldr	r0, [r0, #4]
   14ee8:	mvn	r7, #0
   14eec:	cmp	r0, #1
   14ef0:	bne	14f30 <table_set_uint@@Base+0x78>
   14ef4:	ldr	r0, [r9]
   14ef8:	cmp	r0, #0
   14efc:	bne	14f14 <table_set_uint@@Base+0x5c>
   14f00:	mov	r0, #4
   14f04:	bl	11fdc <malloc@plt>
   14f08:	cmp	r0, #0
   14f0c:	str	r0, [r9]
   14f10:	beq	14f30 <table_set_uint@@Base+0x78>
   14f14:	str	r8, [r0]
   14f18:	mov	r0, r6
   14f1c:	mov	r1, r5
   14f20:	mov	r2, r4
   14f24:	mov	r3, #1
   14f28:	bl	12ee0 <table_notify@@Base>
   14f2c:	mov	r7, #0
   14f30:	mov	r0, r7
   14f34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014f38 <table_set_int8@@Base>:
   14f38:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14f3c:	add	fp, sp, #24
   14f40:	mov	r8, r3
   14f44:	mov	r4, r2
   14f48:	mov	r9, r1
   14f4c:	mov	r6, r0
   14f50:	bl	12f84 <table_get_cell_ptr@@Base>
   14f54:	mov	r5, r0
   14f58:	mov	r0, r6
   14f5c:	mov	r1, r4
   14f60:	bl	13ab8 <table_get_col_ptr@@Base>
   14f64:	ldr	r0, [r0, #4]
   14f68:	mvn	r7, #0
   14f6c:	cmp	r0, #2
   14f70:	bne	14fb0 <table_set_int8@@Base+0x78>
   14f74:	ldr	r0, [r5]
   14f78:	cmp	r0, #0
   14f7c:	bne	14f94 <table_set_int8@@Base+0x5c>
   14f80:	mov	r0, #1
   14f84:	bl	11fdc <malloc@plt>
   14f88:	cmp	r0, #0
   14f8c:	str	r0, [r5]
   14f90:	beq	14fb0 <table_set_int8@@Base+0x78>
   14f94:	strb	r8, [r0]
   14f98:	mov	r0, r6
   14f9c:	mov	r1, r9
   14fa0:	mov	r2, r4
   14fa4:	mov	r3, #1
   14fa8:	bl	12ee0 <table_notify@@Base>
   14fac:	mov	r7, #0
   14fb0:	mov	r0, r7
   14fb4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014fb8 <table_set_uint8@@Base>:
   14fb8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14fbc:	add	fp, sp, #24
   14fc0:	mov	r8, r3
   14fc4:	mov	r4, r2
   14fc8:	mov	r9, r1
   14fcc:	mov	r6, r0
   14fd0:	bl	12f84 <table_get_cell_ptr@@Base>
   14fd4:	mov	r5, r0
   14fd8:	mov	r0, r6
   14fdc:	mov	r1, r4
   14fe0:	bl	13ab8 <table_get_col_ptr@@Base>
   14fe4:	ldr	r0, [r0, #4]
   14fe8:	mvn	r7, #0
   14fec:	cmp	r0, #3
   14ff0:	bne	15030 <table_set_uint8@@Base+0x78>
   14ff4:	ldr	r0, [r5]
   14ff8:	cmp	r0, #0
   14ffc:	bne	15014 <table_set_uint8@@Base+0x5c>
   15000:	mov	r0, #1
   15004:	bl	11fdc <malloc@plt>
   15008:	cmp	r0, #0
   1500c:	str	r0, [r5]
   15010:	beq	15030 <table_set_uint8@@Base+0x78>
   15014:	strb	r8, [r0]
   15018:	mov	r0, r6
   1501c:	mov	r1, r9
   15020:	mov	r2, r4
   15024:	mov	r3, #1
   15028:	bl	12ee0 <table_notify@@Base>
   1502c:	mov	r7, #0
   15030:	mov	r0, r7
   15034:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015038 <table_set_int16@@Base>:
   15038:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1503c:	add	fp, sp, #24
   15040:	mov	r8, r3
   15044:	mov	r4, r2
   15048:	mov	r9, r1
   1504c:	mov	r6, r0
   15050:	bl	12f84 <table_get_cell_ptr@@Base>
   15054:	mov	r5, r0
   15058:	mov	r0, r6
   1505c:	mov	r1, r4
   15060:	bl	13ab8 <table_get_col_ptr@@Base>
   15064:	ldr	r0, [r0, #4]
   15068:	mvn	r7, #0
   1506c:	cmp	r0, #4
   15070:	bne	150b0 <table_set_int16@@Base+0x78>
   15074:	ldr	r0, [r5]
   15078:	cmp	r0, #0
   1507c:	bne	15094 <table_set_int16@@Base+0x5c>
   15080:	mov	r0, #2
   15084:	bl	11fdc <malloc@plt>
   15088:	cmp	r0, #0
   1508c:	str	r0, [r5]
   15090:	beq	150b0 <table_set_int16@@Base+0x78>
   15094:	strh	r8, [r0]
   15098:	mov	r0, r6
   1509c:	mov	r1, r9
   150a0:	mov	r2, r4
   150a4:	mov	r3, #1
   150a8:	bl	12ee0 <table_notify@@Base>
   150ac:	mov	r7, #0
   150b0:	mov	r0, r7
   150b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000150b8 <table_set_uint16@@Base>:
   150b8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   150bc:	add	fp, sp, #24
   150c0:	mov	r8, r3
   150c4:	mov	r4, r2
   150c8:	mov	r9, r1
   150cc:	mov	r6, r0
   150d0:	bl	12f84 <table_get_cell_ptr@@Base>
   150d4:	mov	r5, r0
   150d8:	mov	r0, r6
   150dc:	mov	r1, r4
   150e0:	bl	13ab8 <table_get_col_ptr@@Base>
   150e4:	ldr	r0, [r0, #4]
   150e8:	mvn	r7, #0
   150ec:	cmp	r0, #5
   150f0:	bne	15130 <table_set_uint16@@Base+0x78>
   150f4:	ldr	r0, [r5]
   150f8:	cmp	r0, #0
   150fc:	bne	15114 <table_set_uint16@@Base+0x5c>
   15100:	mov	r0, #2
   15104:	bl	11fdc <malloc@plt>
   15108:	cmp	r0, #0
   1510c:	str	r0, [r5]
   15110:	beq	15130 <table_set_uint16@@Base+0x78>
   15114:	strh	r8, [r0]
   15118:	mov	r0, r6
   1511c:	mov	r1, r9
   15120:	mov	r2, r4
   15124:	mov	r3, #1
   15128:	bl	12ee0 <table_notify@@Base>
   1512c:	mov	r7, #0
   15130:	mov	r0, r7
   15134:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015138 <table_set_int32@@Base>:
   15138:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1513c:	add	fp, sp, #24
   15140:	mov	r8, r3
   15144:	mov	r4, r2
   15148:	mov	r5, r1
   1514c:	mov	r6, r0
   15150:	bl	12f84 <table_get_cell_ptr@@Base>
   15154:	mov	r9, r0
   15158:	mov	r0, r6
   1515c:	mov	r1, r4
   15160:	bl	13ab8 <table_get_col_ptr@@Base>
   15164:	ldr	r0, [r0, #4]
   15168:	mvn	r7, #0
   1516c:	cmp	r0, #6
   15170:	bne	151b0 <table_set_int32@@Base+0x78>
   15174:	ldr	r0, [r9]
   15178:	cmp	r0, #0
   1517c:	bne	15194 <table_set_int32@@Base+0x5c>
   15180:	mov	r0, #4
   15184:	bl	11fdc <malloc@plt>
   15188:	cmp	r0, #0
   1518c:	str	r0, [r9]
   15190:	beq	151b0 <table_set_int32@@Base+0x78>
   15194:	str	r8, [r0]
   15198:	mov	r0, r6
   1519c:	mov	r1, r5
   151a0:	mov	r2, r4
   151a4:	mov	r3, #1
   151a8:	bl	12ee0 <table_notify@@Base>
   151ac:	mov	r7, #0
   151b0:	mov	r0, r7
   151b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000151b8 <table_set_uint32@@Base>:
   151b8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   151bc:	add	fp, sp, #24
   151c0:	mov	r8, r3
   151c4:	mov	r4, r2
   151c8:	mov	r5, r1
   151cc:	mov	r6, r0
   151d0:	bl	12f84 <table_get_cell_ptr@@Base>
   151d4:	mov	r9, r0
   151d8:	mov	r0, r6
   151dc:	mov	r1, r4
   151e0:	bl	13ab8 <table_get_col_ptr@@Base>
   151e4:	ldr	r0, [r0, #4]
   151e8:	mvn	r7, #0
   151ec:	cmp	r0, #7
   151f0:	bne	15230 <table_set_uint32@@Base+0x78>
   151f4:	ldr	r0, [r9]
   151f8:	cmp	r0, #0
   151fc:	bne	15214 <table_set_uint32@@Base+0x5c>
   15200:	mov	r0, #4
   15204:	bl	11fdc <malloc@plt>
   15208:	cmp	r0, #0
   1520c:	str	r0, [r9]
   15210:	beq	15230 <table_set_uint32@@Base+0x78>
   15214:	str	r8, [r0]
   15218:	mov	r0, r6
   1521c:	mov	r1, r5
   15220:	mov	r2, r4
   15224:	mov	r3, #1
   15228:	bl	12ee0 <table_notify@@Base>
   1522c:	mov	r7, #0
   15230:	mov	r0, r7
   15234:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015238 <table_set_int64@@Base>:
   15238:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1523c:	add	fp, sp, #24
   15240:	mov	r4, r2
   15244:	mov	r8, r1
   15248:	mov	r6, r0
   1524c:	bl	12f84 <table_get_cell_ptr@@Base>
   15250:	mov	r5, r0
   15254:	mov	r0, r6
   15258:	mov	r1, r4
   1525c:	bl	13ab8 <table_get_col_ptr@@Base>
   15260:	ldr	r0, [r0, #4]
   15264:	mvn	r7, #0
   15268:	cmp	r0, #8
   1526c:	bne	152b8 <table_set_int64@@Base+0x80>
   15270:	ldr	r0, [r5]
   15274:	cmp	r0, #0
   15278:	bne	15290 <table_set_int64@@Base+0x58>
   1527c:	mov	r0, #8
   15280:	bl	11fdc <malloc@plt>
   15284:	cmp	r0, #0
   15288:	str	r0, [r5]
   1528c:	beq	152b8 <table_set_int64@@Base+0x80>
   15290:	ldr	r1, [fp, #12]
   15294:	ldr	r2, [fp, #8]
   15298:	mov	r3, #1
   1529c:	str	r2, [r0]
   152a0:	str	r1, [r0, #4]
   152a4:	mov	r0, r6
   152a8:	mov	r1, r8
   152ac:	mov	r2, r4
   152b0:	bl	12ee0 <table_notify@@Base>
   152b4:	mov	r7, #0
   152b8:	mov	r0, r7
   152bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000152c0 <table_set_uint64@@Base>:
   152c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   152c4:	add	fp, sp, #24
   152c8:	mov	r4, r2
   152cc:	mov	r8, r1
   152d0:	mov	r6, r0
   152d4:	bl	12f84 <table_get_cell_ptr@@Base>
   152d8:	mov	r5, r0
   152dc:	mov	r0, r6
   152e0:	mov	r1, r4
   152e4:	bl	13ab8 <table_get_col_ptr@@Base>
   152e8:	ldr	r0, [r0, #4]
   152ec:	mvn	r7, #0
   152f0:	cmp	r0, #9
   152f4:	bne	15340 <table_set_uint64@@Base+0x80>
   152f8:	ldr	r0, [r5]
   152fc:	cmp	r0, #0
   15300:	bne	15318 <table_set_uint64@@Base+0x58>
   15304:	mov	r0, #8
   15308:	bl	11fdc <malloc@plt>
   1530c:	cmp	r0, #0
   15310:	str	r0, [r5]
   15314:	beq	15340 <table_set_uint64@@Base+0x80>
   15318:	ldr	r1, [fp, #12]
   1531c:	ldr	r2, [fp, #8]
   15320:	mov	r3, #1
   15324:	str	r2, [r0]
   15328:	str	r1, [r0, #4]
   1532c:	mov	r0, r6
   15330:	mov	r1, r8
   15334:	mov	r2, r4
   15338:	bl	12ee0 <table_notify@@Base>
   1533c:	mov	r7, #0
   15340:	mov	r0, r7
   15344:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015348 <table_set_short@@Base>:
   15348:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1534c:	add	fp, sp, #24
   15350:	mov	r8, r3
   15354:	mov	r4, r2
   15358:	mov	r9, r1
   1535c:	mov	r6, r0
   15360:	bl	12f84 <table_get_cell_ptr@@Base>
   15364:	mov	r5, r0
   15368:	mov	r0, r6
   1536c:	mov	r1, r4
   15370:	bl	13ab8 <table_get_col_ptr@@Base>
   15374:	ldr	r0, [r0, #4]
   15378:	mvn	r7, #0
   1537c:	cmp	r0, #10
   15380:	bne	153c0 <table_set_short@@Base+0x78>
   15384:	ldr	r0, [r5]
   15388:	cmp	r0, #0
   1538c:	bne	153a4 <table_set_short@@Base+0x5c>
   15390:	mov	r0, #2
   15394:	bl	11fdc <malloc@plt>
   15398:	cmp	r0, #0
   1539c:	str	r0, [r5]
   153a0:	beq	153c0 <table_set_short@@Base+0x78>
   153a4:	strh	r8, [r0]
   153a8:	mov	r0, r6
   153ac:	mov	r1, r9
   153b0:	mov	r2, r4
   153b4:	mov	r3, #1
   153b8:	bl	12ee0 <table_notify@@Base>
   153bc:	mov	r7, #0
   153c0:	mov	r0, r7
   153c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000153c8 <table_set_ushort@@Base>:
   153c8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   153cc:	add	fp, sp, #24
   153d0:	mov	r8, r3
   153d4:	mov	r4, r2
   153d8:	mov	r9, r1
   153dc:	mov	r6, r0
   153e0:	bl	12f84 <table_get_cell_ptr@@Base>
   153e4:	mov	r5, r0
   153e8:	mov	r0, r6
   153ec:	mov	r1, r4
   153f0:	bl	13ab8 <table_get_col_ptr@@Base>
   153f4:	ldr	r0, [r0, #4]
   153f8:	mvn	r7, #0
   153fc:	cmp	r0, #11
   15400:	bne	15440 <table_set_ushort@@Base+0x78>
   15404:	ldr	r0, [r5]
   15408:	cmp	r0, #0
   1540c:	bne	15424 <table_set_ushort@@Base+0x5c>
   15410:	mov	r0, #2
   15414:	bl	11fdc <malloc@plt>
   15418:	cmp	r0, #0
   1541c:	str	r0, [r5]
   15420:	beq	15440 <table_set_ushort@@Base+0x78>
   15424:	strh	r8, [r0]
   15428:	mov	r0, r6
   1542c:	mov	r1, r9
   15430:	mov	r2, r4
   15434:	mov	r3, #1
   15438:	bl	12ee0 <table_notify@@Base>
   1543c:	mov	r7, #0
   15440:	mov	r0, r7
   15444:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015448 <table_set_long@@Base>:
   15448:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1544c:	add	fp, sp, #24
   15450:	mov	r8, r3
   15454:	mov	r4, r2
   15458:	mov	r5, r1
   1545c:	mov	r6, r0
   15460:	bl	12f84 <table_get_cell_ptr@@Base>
   15464:	mov	r9, r0
   15468:	mov	r0, r6
   1546c:	mov	r1, r4
   15470:	bl	13ab8 <table_get_col_ptr@@Base>
   15474:	ldr	r0, [r0, #4]
   15478:	mvn	r7, #0
   1547c:	cmp	r0, #12
   15480:	bne	154c0 <table_set_long@@Base+0x78>
   15484:	ldr	r0, [r9]
   15488:	cmp	r0, #0
   1548c:	bne	154a4 <table_set_long@@Base+0x5c>
   15490:	mov	r0, #4
   15494:	bl	11fdc <malloc@plt>
   15498:	cmp	r0, #0
   1549c:	str	r0, [r9]
   154a0:	beq	154c0 <table_set_long@@Base+0x78>
   154a4:	str	r8, [r0]
   154a8:	mov	r0, r6
   154ac:	mov	r1, r5
   154b0:	mov	r2, r4
   154b4:	mov	r3, #1
   154b8:	bl	12ee0 <table_notify@@Base>
   154bc:	mov	r7, #0
   154c0:	mov	r0, r7
   154c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000154c8 <table_set_ulong@@Base>:
   154c8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   154cc:	add	fp, sp, #24
   154d0:	mov	r8, r3
   154d4:	mov	r4, r2
   154d8:	mov	r5, r1
   154dc:	mov	r6, r0
   154e0:	bl	12f84 <table_get_cell_ptr@@Base>
   154e4:	mov	r9, r0
   154e8:	mov	r0, r6
   154ec:	mov	r1, r4
   154f0:	bl	13ab8 <table_get_col_ptr@@Base>
   154f4:	ldr	r0, [r0, #4]
   154f8:	mvn	r7, #0
   154fc:	cmp	r0, #13
   15500:	bne	15540 <table_set_ulong@@Base+0x78>
   15504:	ldr	r0, [r9]
   15508:	cmp	r0, #0
   1550c:	bne	15524 <table_set_ulong@@Base+0x5c>
   15510:	mov	r0, #4
   15514:	bl	11fdc <malloc@plt>
   15518:	cmp	r0, #0
   1551c:	str	r0, [r9]
   15520:	beq	15540 <table_set_ulong@@Base+0x78>
   15524:	str	r8, [r0]
   15528:	mov	r0, r6
   1552c:	mov	r1, r5
   15530:	mov	r2, r4
   15534:	mov	r3, #1
   15538:	bl	12ee0 <table_notify@@Base>
   1553c:	mov	r7, #0
   15540:	mov	r0, r7
   15544:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015548 <table_set_llong@@Base>:
   15548:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1554c:	add	fp, sp, #24
   15550:	mov	r4, r2
   15554:	mov	r8, r1
   15558:	mov	r6, r0
   1555c:	bl	12f84 <table_get_cell_ptr@@Base>
   15560:	mov	r5, r0
   15564:	mov	r0, r6
   15568:	mov	r1, r4
   1556c:	bl	13ab8 <table_get_col_ptr@@Base>
   15570:	ldr	r0, [r0, #4]
   15574:	mvn	r7, #0
   15578:	cmp	r0, #14
   1557c:	bne	155c8 <table_set_llong@@Base+0x80>
   15580:	ldr	r0, [r5]
   15584:	cmp	r0, #0
   15588:	bne	155a0 <table_set_llong@@Base+0x58>
   1558c:	mov	r0, #8
   15590:	bl	11fdc <malloc@plt>
   15594:	cmp	r0, #0
   15598:	str	r0, [r5]
   1559c:	beq	155c8 <table_set_llong@@Base+0x80>
   155a0:	ldr	r1, [fp, #12]
   155a4:	ldr	r2, [fp, #8]
   155a8:	mov	r3, #1
   155ac:	str	r2, [r0]
   155b0:	str	r1, [r0, #4]
   155b4:	mov	r0, r6
   155b8:	mov	r1, r8
   155bc:	mov	r2, r4
   155c0:	bl	12ee0 <table_notify@@Base>
   155c4:	mov	r7, #0
   155c8:	mov	r0, r7
   155cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000155d0 <table_set_ullong@@Base>:
   155d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   155d4:	add	fp, sp, #24
   155d8:	mov	r4, r2
   155dc:	mov	r8, r1
   155e0:	mov	r6, r0
   155e4:	bl	12f84 <table_get_cell_ptr@@Base>
   155e8:	mov	r5, r0
   155ec:	mov	r0, r6
   155f0:	mov	r1, r4
   155f4:	bl	13ab8 <table_get_col_ptr@@Base>
   155f8:	ldr	r0, [r0, #4]
   155fc:	mvn	r7, #0
   15600:	cmp	r0, #15
   15604:	bne	15650 <table_set_ullong@@Base+0x80>
   15608:	ldr	r0, [r5]
   1560c:	cmp	r0, #0
   15610:	bne	15628 <table_set_ullong@@Base+0x58>
   15614:	mov	r0, #8
   15618:	bl	11fdc <malloc@plt>
   1561c:	cmp	r0, #0
   15620:	str	r0, [r5]
   15624:	beq	15650 <table_set_ullong@@Base+0x80>
   15628:	ldr	r1, [fp, #12]
   1562c:	ldr	r2, [fp, #8]
   15630:	mov	r3, #1
   15634:	str	r2, [r0]
   15638:	str	r1, [r0, #4]
   1563c:	mov	r0, r6
   15640:	mov	r1, r8
   15644:	mov	r2, r4
   15648:	bl	12ee0 <table_notify@@Base>
   1564c:	mov	r7, #0
   15650:	mov	r0, r7
   15654:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015658 <table_set_float@@Base>:
   15658:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1565c:	add	fp, sp, #24
   15660:	vpush	{d8}
   15664:	vmov.f32	s16, s0
   15668:	mov	r4, r2
   1566c:	mov	r8, r1
   15670:	mov	r6, r0
   15674:	bl	12f84 <table_get_cell_ptr@@Base>
   15678:	mov	r5, r0
   1567c:	mov	r0, r6
   15680:	mov	r1, r4
   15684:	bl	13ab8 <table_get_col_ptr@@Base>
   15688:	ldr	r0, [r0, #4]
   1568c:	mvn	r7, #0
   15690:	cmp	r0, #16
   15694:	bne	156d8 <table_set_float@@Base+0x80>
   15698:	ldr	r0, [r5]
   1569c:	cmp	r0, #0
   156a0:	bne	156b8 <table_set_float@@Base+0x60>
   156a4:	mov	r0, #4
   156a8:	bl	11fdc <malloc@plt>
   156ac:	cmp	r0, #0
   156b0:	str	r0, [r5]
   156b4:	beq	156d8 <table_set_float@@Base+0x80>
   156b8:	vmov	r1, s16
   156bc:	mov	r2, r4
   156c0:	mov	r3, #1
   156c4:	str	r1, [r0]
   156c8:	mov	r0, r6
   156cc:	mov	r1, r8
   156d0:	bl	12ee0 <table_notify@@Base>
   156d4:	mov	r7, #0
   156d8:	mov	r0, r7
   156dc:	vpop	{d8}
   156e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000156e4 <table_set_double@@Base>:
   156e4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   156e8:	add	fp, sp, #24
   156ec:	vpush	{d8}
   156f0:	vorr	d8, d0, d0
   156f4:	mov	r4, r2
   156f8:	mov	r5, r1
   156fc:	mov	r6, r0
   15700:	bl	12f84 <table_get_cell_ptr@@Base>
   15704:	mov	r8, r0
   15708:	mov	r0, r6
   1570c:	mov	r1, r4
   15710:	bl	13ab8 <table_get_col_ptr@@Base>
   15714:	ldr	r0, [r0, #4]
   15718:	mvn	r7, #0
   1571c:	cmp	r0, #17
   15720:	bne	15760 <table_set_double@@Base+0x7c>
   15724:	ldr	r0, [r8]
   15728:	cmp	r0, #0
   1572c:	bne	15744 <table_set_double@@Base+0x60>
   15730:	mov	r0, #8
   15734:	bl	11fdc <malloc@plt>
   15738:	cmp	r0, #0
   1573c:	str	r0, [r8]
   15740:	beq	15760 <table_set_double@@Base+0x7c>
   15744:	vst1.8	{d8}, [r0]
   15748:	mov	r0, r6
   1574c:	mov	r1, r5
   15750:	mov	r2, r4
   15754:	mov	r3, #1
   15758:	bl	12ee0 <table_notify@@Base>
   1575c:	mov	r7, #0
   15760:	mov	r0, r7
   15764:	vpop	{d8}
   15768:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001576c <table_set_ldouble@@Base>:
   1576c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15770:	add	fp, sp, #24
   15774:	vpush	{d8}
   15778:	vorr	d8, d0, d0
   1577c:	mov	r4, r2
   15780:	mov	r5, r1
   15784:	mov	r6, r0
   15788:	bl	12f84 <table_get_cell_ptr@@Base>
   1578c:	mov	r8, r0
   15790:	mov	r0, r6
   15794:	mov	r1, r4
   15798:	bl	13ab8 <table_get_col_ptr@@Base>
   1579c:	ldr	r0, [r0, #4]
   157a0:	mvn	r7, #0
   157a4:	cmp	r0, #18
   157a8:	bne	157e8 <table_set_ldouble@@Base+0x7c>
   157ac:	ldr	r0, [r8]
   157b0:	cmp	r0, #0
   157b4:	bne	157cc <table_set_ldouble@@Base+0x60>
   157b8:	mov	r0, #8
   157bc:	bl	11fdc <malloc@plt>
   157c0:	cmp	r0, #0
   157c4:	str	r0, [r8]
   157c8:	beq	157e8 <table_set_ldouble@@Base+0x7c>
   157cc:	vst1.8	{d8}, [r0]
   157d0:	mov	r0, r6
   157d4:	mov	r1, r5
   157d8:	mov	r2, r4
   157dc:	mov	r3, #1
   157e0:	bl	12ee0 <table_notify@@Base>
   157e4:	mov	r7, #0
   157e8:	mov	r0, r7
   157ec:	vpop	{d8}
   157f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000157f4 <table_set_string@@Base>:
   157f4:	push	{fp, lr}
   157f8:	mov	fp, sp
   157fc:	sub	sp, sp, #8
   15800:	mov	ip, #21
   15804:	str	ip, [sp]
   15808:	bl	14a9c <table_set@@Base>
   1580c:	mov	sp, fp
   15810:	pop	{fp, pc}

00015814 <table_set_char@@Base>:
   15814:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15818:	add	fp, sp, #24
   1581c:	mov	r8, r3
   15820:	mov	r4, r2
   15824:	mov	r9, r1
   15828:	mov	r6, r0
   1582c:	bl	12f84 <table_get_cell_ptr@@Base>
   15830:	mov	r5, r0
   15834:	mov	r0, r6
   15838:	mov	r1, r4
   1583c:	bl	13ab8 <table_get_col_ptr@@Base>
   15840:	ldr	r0, [r0, #4]
   15844:	mvn	r7, #0
   15848:	cmp	r0, #19
   1584c:	bne	1588c <table_set_char@@Base+0x78>
   15850:	ldr	r0, [r5]
   15854:	cmp	r0, #0
   15858:	bne	15870 <table_set_char@@Base+0x5c>
   1585c:	mov	r0, #1
   15860:	bl	11fdc <malloc@plt>
   15864:	cmp	r0, #0
   15868:	str	r0, [r5]
   1586c:	beq	1588c <table_set_char@@Base+0x78>
   15870:	strb	r8, [r0]
   15874:	mov	r0, r6
   15878:	mov	r1, r9
   1587c:	mov	r2, r4
   15880:	mov	r3, #1
   15884:	bl	12ee0 <table_notify@@Base>
   15888:	mov	r7, #0
   1588c:	mov	r0, r7
   15890:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015894 <table_set_uchar@@Base>:
   15894:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15898:	add	fp, sp, #24
   1589c:	mov	r8, r3
   158a0:	mov	r4, r2
   158a4:	mov	r9, r1
   158a8:	mov	r6, r0
   158ac:	bl	12f84 <table_get_cell_ptr@@Base>
   158b0:	mov	r5, r0
   158b4:	mov	r0, r6
   158b8:	mov	r1, r4
   158bc:	bl	13ab8 <table_get_col_ptr@@Base>
   158c0:	ldr	r0, [r0, #4]
   158c4:	mvn	r7, #0
   158c8:	cmp	r0, #20
   158cc:	bne	1590c <table_set_uchar@@Base+0x78>
   158d0:	ldr	r0, [r5]
   158d4:	cmp	r0, #0
   158d8:	bne	158f0 <table_set_uchar@@Base+0x5c>
   158dc:	mov	r0, #1
   158e0:	bl	11fdc <malloc@plt>
   158e4:	cmp	r0, #0
   158e8:	str	r0, [r5]
   158ec:	beq	1590c <table_set_uchar@@Base+0x78>
   158f0:	strb	r8, [r0]
   158f4:	mov	r0, r6
   158f8:	mov	r1, r9
   158fc:	mov	r2, r4
   15900:	mov	r3, #1
   15904:	bl	12ee0 <table_notify@@Base>
   15908:	mov	r7, #0
   1590c:	mov	r0, r7
   15910:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015914 <table_set_ptr@@Base>:
   15914:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15918:	add	fp, sp, #24
   1591c:	mov	r8, r3
   15920:	mov	r4, r2
   15924:	mov	r5, r1
   15928:	mov	r6, r0
   1592c:	bl	12f84 <table_get_cell_ptr@@Base>
   15930:	mov	r7, r0
   15934:	mov	r0, r6
   15938:	mov	r1, r4
   1593c:	bl	13ab8 <table_get_col_ptr@@Base>
   15940:	ldr	r1, [r0, #4]
   15944:	mvn	r0, #0
   15948:	cmp	r1, #23
   1594c:	bne	1596c <table_set_ptr@@Base+0x58>
   15950:	mov	r0, r6
   15954:	mov	r1, r5
   15958:	mov	r2, r4
   1595c:	mov	r3, #1
   15960:	str	r8, [r7]
   15964:	bl	12ee0 <table_notify@@Base>
   15968:	mov	r0, #0
   1596c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015970 <table_column_sort@@Base>:
   15970:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15974:	add	fp, sp, #28
   15978:	sub	sp, sp, #44	; 0x2c
   1597c:	mov	r4, r0
   15980:	cmp	r3, #1
   15984:	str	r2, [sp, #16]
   15988:	str	r1, [sp, #20]
   1598c:	str	r3, [sp, #12]
   15990:	blt	15b88 <table_column_sort@@Base+0x218>
   15994:	ldr	r0, [sp, #20]
   15998:	mov	r9, #0
   1599c:	sub	sl, r0, #4
   159a0:	b	159f8 <table_column_sort@@Base+0x88>
   159a4:	ldr	r0, [sp, #20]
   159a8:	mov	r1, #4
   159ac:	ldr	r8, [r0]
   159b0:	ldr	r0, [sp, #16]
   159b4:	ldr	r6, [r0]
   159b8:	mov	r0, r5
   159bc:	bl	11f7c <calloc@plt>
   159c0:	mov	r7, r0
   159c4:	sub	r0, r5, #1
   159c8:	mov	r2, r8
   159cc:	mov	r3, #0
   159d0:	stm	sp, {r0, r6}
   159d4:	mov	r0, r4
   159d8:	mov	r1, r7
   159dc:	bl	15ba4 <table_column_sort@@Base+0x234>
   159e0:	mov	r0, r7
   159e4:	bl	11fa0 <free@plt>
   159e8:	ldr	r0, [sp, #12]
   159ec:	add	r9, r9, #1
   159f0:	cmp	r9, r0
   159f4:	beq	15b88 <table_column_sort@@Base+0x218>
   159f8:	mov	r0, r4
   159fc:	bl	14880 <table_get_row_length@@Base>
   15a00:	mov	r5, r0
   15a04:	cmp	r9, #0
   15a08:	beq	159a4 <table_column_sort@@Base+0x34>
   15a0c:	ldr	r0, [sp, #20]
   15a10:	add	r0, r0, r9, lsl #2
   15a14:	ldr	r1, [r0, #-4]
   15a18:	mov	r0, r4
   15a1c:	bl	13e80 <table_get_column_compare_function@@Base>
   15a20:	cmp	r5, #1
   15a24:	blt	159e8 <table_column_sort@@Base+0x78>
   15a28:	mov	r6, r0
   15a2c:	sub	r0, r5, #1
   15a30:	mov	r7, #0
   15a34:	mvn	r2, #0
   15a38:	mvn	r8, #0
   15a3c:	str	r0, [sp, #24]
   15a40:	str	r9, [fp, #-32]	; 0xffffffe0
   15a44:	str	r5, [sp, #32]
   15a48:	cmp	r7, #0
   15a4c:	bne	15a6c <table_column_sort@@Base+0xfc>
   15a50:	b	15ad8 <table_column_sort@@Base+0x168>
   15a54:	mvn	r8, #0
   15a58:	add	r7, r7, #1
   15a5c:	cmp	r7, r5
   15a60:	beq	159e8 <table_column_sort@@Base+0x78>
   15a64:	cmp	r7, #0
   15a68:	beq	15ad8 <table_column_sort@@Base+0x168>
   15a6c:	str	r8, [sp, #36]	; 0x24
   15a70:	str	r2, [sp, #28]
   15a74:	sub	r8, r7, #1
   15a78:	mov	r5, r9
   15a7c:	ldr	r2, [sl, r5, lsl #2]
   15a80:	mov	r0, r4
   15a84:	mov	r1, r7
   15a88:	bl	145a8 <table_get@@Base>
   15a8c:	ldr	r2, [sl, r5, lsl #2]
   15a90:	mov	r9, r0
   15a94:	mov	r0, r4
   15a98:	mov	r1, r8
   15a9c:	bl	145a8 <table_get@@Base>
   15aa0:	mov	r1, r0
   15aa4:	mov	r0, r9
   15aa8:	blx	r6
   15aac:	cmp	r0, #0
   15ab0:	bne	15afc <table_column_sort@@Base+0x18c>
   15ab4:	sub	r5, r5, #1
   15ab8:	cmp	r5, #1
   15abc:	bge	15a7c <table_column_sort@@Base+0x10c>
   15ac0:	ldr	r0, [sp, #36]	; 0x24
   15ac4:	ldr	r9, [fp, #-32]	; 0xffffffe0
   15ac8:	ldr	r5, [sp, #32]
   15acc:	mov	r2, r7
   15ad0:	cmn	r0, #1
   15ad4:	movne	r8, r0
   15ad8:	cmn	r8, #1
   15adc:	beq	15a54 <table_column_sort@@Base+0xe4>
   15ae0:	cmp	r2, r7
   15ae4:	bne	15b18 <table_column_sort@@Base+0x1a8>
   15ae8:	ldr	r0, [sp, #24]
   15aec:	cmp	r2, r0
   15af0:	beq	15b18 <table_column_sort@@Base+0x1a8>
   15af4:	mov	r2, r7
   15af8:	b	15a58 <table_column_sort@@Base+0xe8>
   15afc:	ldr	r8, [sp, #36]	; 0x24
   15b00:	ldr	r9, [fp, #-32]	; 0xffffffe0
   15b04:	ldr	r5, [sp, #32]
   15b08:	ldr	r2, [sp, #28]
   15b0c:	cmn	r8, #1
   15b10:	bne	15ae0 <table_column_sort@@Base+0x170>
   15b14:	b	15a54 <table_column_sort@@Base+0xe4>
   15b18:	ldr	r0, [sp, #20]
   15b1c:	ldr	r0, [r0, r9, lsl #2]
   15b20:	mov	r9, r2
   15b24:	str	r0, [sp, #36]	; 0x24
   15b28:	ldr	r0, [sp, #16]
   15b2c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15b30:	ldr	r0, [r0, r1, lsl #2]
   15b34:	mov	r1, #4
   15b38:	str	r0, [sp, #28]
   15b3c:	sub	r0, r2, r8
   15b40:	add	r0, r0, #1
   15b44:	bl	11f7c <calloc@plt>
   15b48:	str	r9, [sp]
   15b4c:	mov	r5, r0
   15b50:	mov	r3, r8
   15b54:	ldr	r0, [sp, #28]
   15b58:	mov	r1, r5
   15b5c:	str	r0, [sp, #4]
   15b60:	mov	r0, r4
   15b64:	ldr	r2, [sp, #36]	; 0x24
   15b68:	ldr	r9, [fp, #-32]	; 0xffffffe0
   15b6c:	bl	15ba4 <table_column_sort@@Base+0x234>
   15b70:	mov	r0, r5
   15b74:	ldr	r5, [sp, #32]
   15b78:	bl	11fa0 <free@plt>
   15b7c:	mvn	r8, #0
   15b80:	mvn	r2, #0
   15b84:	b	15a58 <table_column_sort@@Base+0xe8>
   15b88:	mov	r0, r4
   15b8c:	mvn	r1, #0
   15b90:	mvn	r2, #0
   15b94:	mov	r3, #32
   15b98:	sub	sp, fp, #28
   15b9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ba0:	b	12ee0 <table_notify@@Base>
   15ba4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ba8:	add	fp, sp, #28
   15bac:	sub	sp, sp, #36	; 0x24
   15bb0:	mov	sl, r0
   15bb4:	ldr	r0, [fp, #8]
   15bb8:	cmp	r0, r3
   15bbc:	ble	15d68 <table_column_sort@@Base+0x3f8>
   15bc0:	ldr	r0, [fp, #8]
   15bc4:	ldr	r7, [fp, #12]
   15bc8:	mov	r4, r3
   15bcc:	mov	r6, r2
   15bd0:	mov	r9, r1
   15bd4:	add	r0, r0, r3
   15bd8:	add	r5, r0, r0, lsr #31
   15bdc:	asr	r0, r5, #1
   15be0:	str	r0, [sp, #32]
   15be4:	stm	sp, {r0, r7}
   15be8:	mov	r0, sl
   15bec:	bl	15ba4 <table_column_sort@@Base+0x234>
   15bf0:	ldr	r0, [fp, #8]
   15bf4:	mov	r1, r9
   15bf8:	mov	r2, r6
   15bfc:	stm	sp, {r0, r7}
   15c00:	mov	r0, #1
   15c04:	add	r7, r0, r5, asr #1
   15c08:	mov	r0, sl
   15c0c:	mov	r3, r7
   15c10:	bl	15ba4 <table_column_sort@@Base+0x234>
   15c14:	mov	r0, sl
   15c18:	mov	r1, r6
   15c1c:	str	r6, [sp, #28]
   15c20:	bl	13e80 <table_get_column_compare_function@@Base>
   15c24:	str	r0, [sp, #16]
   15c28:	ldr	r0, [fp, #8]
   15c2c:	sub	r8, r4, #1
   15c30:	mov	r5, r9
   15c34:	mov	r6, r4
   15c38:	str	sl, [sp, #24]
   15c3c:	add	r1, r0, #1
   15c40:	str	r1, [sp, #12]
   15c44:	b	15cb0 <table_column_sort@@Base+0x340>
   15c48:	ldr	r2, [sp, #28]
   15c4c:	mov	r0, sl
   15c50:	mov	r1, r6
   15c54:	bl	145a8 <table_get@@Base>
   15c58:	ldr	r2, [sp, #28]
   15c5c:	str	r0, [sp, #20]
   15c60:	mov	r0, sl
   15c64:	mov	r1, r7
   15c68:	bl	145a8 <table_get@@Base>
   15c6c:	mov	r1, r0
   15c70:	ldr	r0, [sp, #20]
   15c74:	ldr	r2, [sp, #16]
   15c78:	blx	r2
   15c7c:	cmn	r0, #1
   15c80:	ble	15d2c <table_column_sort@@Base+0x3bc>
   15c84:	mov	r0, sl
   15c88:	mov	r1, r7
   15c8c:	bl	14818 <table_get_row_ptr@@Base>
   15c90:	ldr	r0, [r0]
   15c94:	add	r7, r7, #1
   15c98:	str	r0, [r5]
   15c9c:	ldr	r0, [fp, #8]
   15ca0:	add	r8, r8, #1
   15ca4:	add	r5, r5, #4
   15ca8:	cmp	r0, r8
   15cac:	beq	15d44 <table_column_sort@@Base+0x3d4>
   15cb0:	ldr	r1, [fp, #12]
   15cb4:	cmp	r1, #0
   15cb8:	beq	15d18 <table_column_sort@@Base+0x3a8>
   15cbc:	ldr	r1, [sp, #32]
   15cc0:	cmp	r6, r1
   15cc4:	bgt	15c84 <table_column_sort@@Base+0x314>
   15cc8:	cmp	r7, r0
   15ccc:	bgt	15d2c <table_column_sort@@Base+0x3bc>
   15cd0:	mov	r0, sl
   15cd4:	ldr	sl, [sp, #28]
   15cd8:	mov	r1, r6
   15cdc:	mov	r2, sl
   15ce0:	bl	145a8 <table_get@@Base>
   15ce4:	str	r0, [sp, #20]
   15ce8:	ldr	r0, [sp, #24]
   15cec:	mov	r2, sl
   15cf0:	ldr	sl, [sp, #24]
   15cf4:	mov	r1, r7
   15cf8:	bl	145a8 <table_get@@Base>
   15cfc:	mov	r1, r0
   15d00:	ldr	r0, [sp, #20]
   15d04:	ldr	r2, [sp, #16]
   15d08:	blx	r2
   15d0c:	cmp	r0, #1
   15d10:	bge	15d2c <table_column_sort@@Base+0x3bc>
   15d14:	b	15c84 <table_column_sort@@Base+0x314>
   15d18:	ldr	r1, [sp, #32]
   15d1c:	cmp	r6, r1
   15d20:	bgt	15c84 <table_column_sort@@Base+0x314>
   15d24:	cmp	r7, r0
   15d28:	ble	15c48 <table_column_sort@@Base+0x2d8>
   15d2c:	mov	r0, sl
   15d30:	mov	r1, r6
   15d34:	bl	14818 <table_get_row_ptr@@Base>
   15d38:	ldr	r0, [r0]
   15d3c:	add	r6, r6, #1
   15d40:	b	15c98 <table_column_sort@@Base+0x328>
   15d44:	ldr	r5, [sp, #12]
   15d48:	mov	r0, sl
   15d4c:	mov	r1, r4
   15d50:	mov	r2, r9
   15d54:	bl	14a8c <table_set_row_ptr@@Base>
   15d58:	add	r4, r4, #1
   15d5c:	add	r9, r9, #4
   15d60:	cmp	r5, r4
   15d64:	bne	15d48 <table_column_sort@@Base+0x3d8>
   15d68:	sub	sp, fp, #28
   15d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015d70 <__libc_csu_init@@Base>:
   15d70:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15d74:	mov	r7, r0
   15d78:	ldr	r6, [pc, #72]	; 15dc8 <__libc_csu_init@@Base+0x58>
   15d7c:	ldr	r5, [pc, #72]	; 15dcc <__libc_csu_init@@Base+0x5c>
   15d80:	add	r6, pc, r6
   15d84:	add	r5, pc, r5
   15d88:	sub	r6, r6, r5
   15d8c:	mov	r8, r1
   15d90:	mov	r9, r2
   15d94:	bl	11f5c <calloc@plt-0x20>
   15d98:	asrs	r6, r6, #2
   15d9c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15da0:	mov	r4, #0
   15da4:	add	r4, r4, #1
   15da8:	ldr	r3, [r5], #4
   15dac:	mov	r2, r9
   15db0:	mov	r1, r8
   15db4:	mov	r0, r7
   15db8:	blx	r3
   15dbc:	cmp	r6, r4
   15dc0:	bne	15da4 <__libc_csu_init@@Base+0x34>
   15dc4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15dc8:	andeq	r1, r1, r4, lsr #2
   15dcc:	andeq	r1, r1, ip, lsl r1

00015dd0 <__libc_csu_fini@@Base>:
   15dd0:	bx	lr

Disassembly of section .fini:

00015dd4 <.fini>:
   15dd4:	push	{r3, lr}
   15dd8:	pop	{r3, pc}
