
../repos/eddieantonio-ocreval-3ab279a/ngram/ngram:     file format elf32-littlearm


Disassembly of section .init:

000108ac <.init>:
   108ac:	push	{r3, lr}
   108b0:	bl	10b38 <getc@plt+0xec>
   108b4:	pop	{r3, pc}

Disassembly of section .plt:

000108b8 <calloc@plt-0x14>:
   108b8:	push	{lr}		; (str lr, [sp, #-4]!)
   108bc:	ldr	lr, [pc, #4]	; 108c8 <calloc@plt-0x4>
   108c0:	add	lr, pc, lr
   108c4:	ldr	pc, [lr, #8]!
   108c8:	andeq	r2, r1, r8, lsr r7

000108cc <calloc@plt>:
   108cc:	add	ip, pc, #0, 12
   108d0:	add	ip, ip, #73728	; 0x12000
   108d4:	ldr	pc, [ip, #1848]!	; 0x738

000108d8 <strcmp@plt>:
   108d8:	add	ip, pc, #0, 12
   108dc:	add	ip, ip, #73728	; 0x12000
   108e0:	ldr	pc, [ip, #1840]!	; 0x730

000108e4 <printf@plt>:
   108e4:	add	ip, pc, #0, 12
   108e8:	add	ip, ip, #73728	; 0x12000
   108ec:	ldr	pc, [ip, #1832]!	; 0x728

000108f0 <fopen@plt>:
   108f0:	add	ip, pc, #0, 12
   108f4:	add	ip, ip, #73728	; 0x12000
   108f8:	ldr	pc, [ip, #1824]!	; 0x720

000108fc <free@plt>:
   108fc:	add	ip, pc, #0, 12
   10900:	add	ip, ip, #73728	; 0x12000
   10904:	ldr	pc, [ip, #1816]!	; 0x718

00010908 <utf8proc_get_property@plt>:
   10908:	add	ip, pc, #0, 12
   1090c:	add	ip, ip, #73728	; 0x12000
   10910:	ldr	pc, [ip, #1808]!	; 0x710

00010914 <fgets@plt>:
   10914:	add	ip, pc, #0, 12
   10918:	add	ip, ip, #73728	; 0x12000
   1091c:	ldr	pc, [ip, #1800]!	; 0x708

00010920 <utf8proc_encode_char@plt>:
   10920:	add	ip, pc, #0, 12
   10924:	add	ip, ip, #73728	; 0x12000
   10928:	ldr	pc, [ip, #1792]!	; 0x700

0001092c <strdup@plt>:
   1092c:	add	ip, pc, #0, 12
   10930:	add	ip, ip, #73728	; 0x12000
   10934:	ldr	pc, [ip, #1784]!	; 0x6f8

00010938 <rewind@plt>:
   10938:	add	ip, pc, #0, 12
   1093c:	add	ip, ip, #73728	; 0x12000
   10940:	ldr	pc, [ip, #1776]!	; 0x6f0

00010944 <unlink@plt>:
   10944:	add	ip, pc, #0, 12
   10948:	add	ip, ip, #73728	; 0x12000
   1094c:	ldr	pc, [ip, #1768]!	; 0x6e8

00010950 <utf8proc_tolower@plt>:
   10950:	add	ip, pc, #0, 12
   10954:	add	ip, ip, #73728	; 0x12000
   10958:	ldr	pc, [ip, #1760]!	; 0x6e0

0001095c <__xstat@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #73728	; 0x12000
   10964:	ldr	pc, [ip, #1752]!	; 0x6d8

00010968 <fwrite@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #73728	; 0x12000
   10970:	ldr	pc, [ip, #1744]!	; 0x6d0

00010974 <strcat@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #73728	; 0x12000
   1097c:	ldr	pc, [ip, #1736]!	; 0x6c8

00010980 <fread@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #73728	; 0x12000
   10988:	ldr	pc, [ip, #1728]!	; 0x6c0

0001098c <utf8proc_iterate@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #73728	; 0x12000
   10994:	ldr	pc, [ip, #1720]!	; 0x6b8

00010998 <puts@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #73728	; 0x12000
   109a0:	ldr	pc, [ip, #1712]!	; 0x6b0

000109a4 <__libc_start_main@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #73728	; 0x12000
   109ac:	ldr	pc, [ip, #1704]!	; 0x6a8

000109b0 <__sysv_signal@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #73728	; 0x12000
   109b8:	ldr	pc, [ip, #1696]!	; 0x6a0

000109bc <__gmon_start__@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #73728	; 0x12000
   109c4:	ldr	pc, [ip, #1688]!	; 0x698

000109c8 <getpid@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #73728	; 0x12000
   109d0:	ldr	pc, [ip, #1680]!	; 0x690

000109d4 <exit@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #73728	; 0x12000
   109dc:	ldr	pc, [ip, #1672]!	; 0x688

000109e0 <utf8proc_category@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #73728	; 0x12000
   109e8:	ldr	pc, [ip, #1664]!	; 0x680

000109ec <strlen@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #73728	; 0x12000
   109f4:	ldr	pc, [ip, #1656]!	; 0x678

000109f8 <fprintf@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #73728	; 0x12000
   10a00:	ldr	pc, [ip, #1648]!	; 0x670

00010a04 <fclose@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #73728	; 0x12000
   10a0c:	ldr	pc, [ip, #1640]!	; 0x668

00010a10 <sprintf@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #73728	; 0x12000
   10a18:	ldr	pc, [ip, #1632]!	; 0x660

00010a1c <utf8proc_errmsg@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #73728	; 0x12000
   10a24:	ldr	pc, [ip, #1624]!	; 0x658

00010a28 <fputs@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #73728	; 0x12000
   10a30:	ldr	pc, [ip, #1616]!	; 0x650

00010a34 <strncmp@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #73728	; 0x12000
   10a3c:	ldr	pc, [ip, #1608]!	; 0x648

00010a40 <abort@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #73728	; 0x12000
   10a48:	ldr	pc, [ip, #1600]!	; 0x640

00010a4c <getc@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #73728	; 0x12000
   10a54:	ldr	pc, [ip, #1592]!	; 0x638

Disassembly of section .text:

00010a58 <error@@Base-0xf98>:
   10a58:	push	{r4, r5, lr}
   10a5c:	sub	sp, sp, #12
   10a60:	ldr	r4, [pc, #128]	; 10ae8 <getc@plt+0x9c>
   10a64:	ldr	r3, [pc, #128]	; 10aec <getc@plt+0xa0>
   10a68:	add	ip, sp, #8
   10a6c:	add	r4, pc, r4
   10a70:	ldr	r2, [pc, #120]	; 10af0 <getc@plt+0xa4>
   10a74:	str	r0, [ip, #-4]!
   10a78:	add	r2, pc, r2
   10a7c:	ldr	r3, [r4, r3]
   10a80:	mov	r0, ip
   10a84:	mov	r5, r1
   10a88:	bl	11b90 <error@@Base+0x1a0>
   10a8c:	ldr	r3, [sp, #4]
   10a90:	cmp	r3, #0
   10a94:	bne	10aa4 <getc@plt+0x58>
   10a98:	ldr	r0, [pc, #84]	; 10af4 <getc@plt+0xa8>
   10a9c:	add	r0, pc, r0
   10aa0:	bl	119f0 <error@@Base>
   10aa4:	bl	10ce4 <getc@plt+0x298>
   10aa8:	ldr	r3, [pc, #72]	; 10af8 <getc@plt+0xac>
   10aac:	ldr	r2, [sp, #4]
   10ab0:	ldr	r3, [r4, r3]
   10ab4:	cmp	r2, #0
   10ab8:	subgt	r5, r5, #4
   10abc:	movgt	r4, #0
   10ac0:	strh	r0, [r3]
   10ac4:	ble	10ae0 <getc@plt+0x94>
   10ac8:	ldr	r0, [r5, #4]!
   10acc:	bl	10e30 <getc@plt+0x3e4>
   10ad0:	ldr	r3, [sp, #4]
   10ad4:	add	r4, r4, #1
   10ad8:	cmp	r3, r4
   10adc:	bgt	10ac8 <getc@plt+0x7c>
   10ae0:	bl	10ff8 <getc@plt+0x5ac>
   10ae4:	bl	1197c <getc@plt+0xf30>
   10ae8:	andeq	r2, r1, ip, lsl #11
   10aec:	strheq	r0, [r0], -r4
   10af0:	andeq	r1, r0, r0, lsl fp
   10af4:	andeq	r1, r0, ip, lsl fp
   10af8:	muleq	r0, ip, r0
   10afc:	mov	fp, #0
   10b00:	mov	lr, #0
   10b04:	pop	{r1}		; (ldr r1, [sp], #4)
   10b08:	mov	r2, sp
   10b0c:	push	{r2}		; (str r2, [sp, #-4]!)
   10b10:	push	{r0}		; (str r0, [sp, #-4]!)
   10b14:	ldr	ip, [pc, #16]	; 10b2c <getc@plt+0xe0>
   10b18:	push	{ip}		; (str ip, [sp, #-4]!)
   10b1c:	ldr	r0, [pc, #12]	; 10b30 <getc@plt+0xe4>
   10b20:	ldr	r3, [pc, #12]	; 10b34 <getc@plt+0xe8>
   10b24:	bl	109a4 <__libc_start_main@plt>
   10b28:	bl	10a40 <abort@plt>
   10b2c:	andeq	r2, r1, r4, lsr r5
   10b30:	andeq	r0, r1, r8, asr sl
   10b34:	ldrdeq	r2, [r1], -r4
   10b38:	ldr	r3, [pc, #20]	; 10b54 <getc@plt+0x108>
   10b3c:	ldr	r2, [pc, #20]	; 10b58 <getc@plt+0x10c>
   10b40:	add	r3, pc, r3
   10b44:	ldr	r2, [r3, r2]
   10b48:	cmp	r2, #0
   10b4c:	bxeq	lr
   10b50:	b	109bc <__gmon_start__@plt>
   10b54:			; <UNDEFINED> instruction: 0x000124b8
   10b58:	strheq	r0, [r0], -r8
   10b5c:	ldr	r3, [pc, #28]	; 10b80 <getc@plt+0x134>
   10b60:	ldr	r0, [pc, #28]	; 10b84 <getc@plt+0x138>
   10b64:	sub	r3, r3, r0
   10b68:	cmp	r3, #6
   10b6c:	bxls	lr
   10b70:	ldr	r3, [pc, #16]	; 10b88 <getc@plt+0x13c>
   10b74:	cmp	r3, #0
   10b78:	bxeq	lr
   10b7c:	bx	r3
   10b80:	andeq	r3, r2, r3, lsl r1
   10b84:	andeq	r3, r2, r0, lsl r1
   10b88:	andeq	r0, r0, r0
   10b8c:	ldr	r1, [pc, #36]	; 10bb8 <getc@plt+0x16c>
   10b90:	ldr	r0, [pc, #36]	; 10bbc <getc@plt+0x170>
   10b94:	sub	r1, r1, r0
   10b98:	asr	r1, r1, #2
   10b9c:	add	r1, r1, r1, lsr #31
   10ba0:	asrs	r1, r1, #1
   10ba4:	bxeq	lr
   10ba8:	ldr	r3, [pc, #16]	; 10bc0 <getc@plt+0x174>
   10bac:	cmp	r3, #0
   10bb0:	bxeq	lr
   10bb4:	bx	r3
   10bb8:	andeq	r3, r2, r0, lsl r1
   10bbc:	andeq	r3, r2, r0, lsl r1
   10bc0:	andeq	r0, r0, r0
   10bc4:	push	{r4, lr}
   10bc8:	ldr	r4, [pc, #24]	; 10be8 <getc@plt+0x19c>
   10bcc:	ldrb	r3, [r4]
   10bd0:	cmp	r3, #0
   10bd4:	popne	{r4, pc}
   10bd8:	bl	10b5c <getc@plt+0x110>
   10bdc:	mov	r3, #1
   10be0:	strb	r3, [r4]
   10be4:	pop	{r4, pc}
   10be8:	andeq	r3, r2, r0, lsl r1
   10bec:	ldr	r0, [pc, #40]	; 10c1c <getc@plt+0x1d0>
   10bf0:	ldr	r3, [r0]
   10bf4:	cmp	r3, #0
   10bf8:	bne	10c00 <getc@plt+0x1b4>
   10bfc:	b	10b8c <getc@plt+0x140>
   10c00:	ldr	r3, [pc, #24]	; 10c20 <getc@plt+0x1d4>
   10c04:	cmp	r3, #0
   10c08:	beq	10bfc <getc@plt+0x1b0>
   10c0c:	push	{r4, lr}
   10c10:	blx	r3
   10c14:	pop	{r4, lr}
   10c18:	b	10b8c <getc@plt+0x140>
   10c1c:	andeq	r2, r2, r4, lsl #30
   10c20:	andeq	r0, r0, r0
   10c24:	ldr	r3, [pc, #112]	; 10c9c <getc@plt+0x250>
   10c28:	ldr	r2, [pc, #112]	; 10ca0 <getc@plt+0x254>
   10c2c:	add	r3, pc, r3
   10c30:	ldr	r2, [r3, r2]
   10c34:	ldrsh	r3, [r2]
   10c38:	cmp	r3, #0
   10c3c:	ble	10c84 <getc@plt+0x238>
   10c40:	ldr	r2, [r0, #12]
   10c44:	ldr	ip, [r1, #12]
   10c48:	cmp	ip, r2
   10c4c:	bne	10c8c <getc@plt+0x240>
   10c50:	sub	r2, r3, #1
   10c54:	add	r1, r1, #16
   10c58:	uxth	r2, r2
   10c5c:	add	r2, r2, #4
   10c60:	add	r3, r0, #16
   10c64:	add	r0, r0, r2, lsl #2
   10c68:	b	10c7c <getc@plt+0x230>
   10c6c:	ldr	r2, [r3], #4
   10c70:	ldr	ip, [r1], #4
   10c74:	cmp	r2, ip
   10c78:	bne	10c8c <getc@plt+0x240>
   10c7c:	cmp	r3, r0
   10c80:	bne	10c6c <getc@plt+0x220>
   10c84:	mov	r0, #0
   10c88:	bx	lr
   10c8c:	cmp	ip, r2
   10c90:	movls	r0, #1
   10c94:	mvnhi	r0, #0
   10c98:	bx	lr
   10c9c:	andeq	r2, r1, ip, asr #7
   10ca0:	muleq	r0, ip, r0
   10ca4:	ldr	r2, [r0, #24]
   10ca8:	ldr	r3, [r1, #24]
   10cac:	cmp	r2, r3
   10cb0:	beq	10cbc <getc@plt+0x270>
   10cb4:	sub	r0, r3, r2
   10cb8:	bx	lr
   10cbc:	ldr	r2, [r0, #28]
   10cc0:	ldr	r3, [r1, #28]
   10cc4:	push	{lr}		; (str lr, [sp, #-4]!)
   10cc8:	cmp	r2, r3
   10ccc:	mov	lr, r0
   10cd0:	beq	10cdc <getc@plt+0x290>
   10cd4:	sub	r0, r3, r2
   10cd8:	pop	{pc}		; (ldr pc, [sp], #4)
   10cdc:	pop	{lr}		; (ldr lr, [sp], #4)
   10ce0:	b	10c24 <getc@plt+0x1d8>
   10ce4:	ldr	r3, [pc, #84]	; 10d40 <getc@plt+0x2f4>
   10ce8:	ldr	r2, [pc, #84]	; 10d44 <getc@plt+0x2f8>
   10cec:	add	r3, pc, r3
   10cf0:	ldr	r3, [r3, r2]
   10cf4:	ldr	r1, [r3]
   10cf8:	cmp	r1, #0
   10cfc:	beq	10d28 <getc@plt+0x2dc>
   10d00:	ldrb	r0, [r1]
   10d04:	sub	r3, r0, #49	; 0x31
   10d08:	cmp	r3, #2
   10d0c:	bhi	10d30 <getc@plt+0x2e4>
   10d10:	ldrb	r3, [r1, #1]
   10d14:	cmp	r3, #0
   10d18:	bne	10d30 <getc@plt+0x2e4>
   10d1c:	sub	r0, r0, #48	; 0x30
   10d20:	sxth	r0, r0
   10d24:	bx	lr
   10d28:	mov	r0, #1
   10d2c:	bx	lr
   10d30:	ldr	r0, [pc, #16]	; 10d48 <getc@plt+0x2fc>
   10d34:	push	{r4, lr}
   10d38:	add	r0, pc, r0
   10d3c:	bl	11aa0 <error@@Base+0xb0>
   10d40:	andeq	r2, r1, ip, lsl #6
   10d44:	andeq	r0, r0, r0, lsr #1
   10d48:	andeq	r1, r0, r4, lsl #16
   10d4c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10d50:	mov	r9, r0
   10d54:	ldr	r6, [pc, #200]	; 10e24 <getc@plt+0x3d8>
   10d58:	ldr	r3, [pc, #200]	; 10e28 <getc@plt+0x3dc>
   10d5c:	add	r6, pc, r6
   10d60:	mov	r8, r1
   10d64:	ldr	r4, [r6, r3]
   10d68:	mov	r1, r0
   10d6c:	mov	r0, r4
   10d70:	uxtb	r7, r2
   10d74:	bl	114c4 <getc@plt+0xa78>
   10d78:	subs	r5, r0, #0
   10d7c:	beq	10dc0 <getc@plt+0x374>
   10d80:	add	r0, r4, #4096	; 0x1000
   10d84:	ldr	r2, [r5, #24]
   10d88:	ldr	r3, [r0, #3960]	; 0xf78
   10d8c:	cmp	r7, #0
   10d90:	add	r3, r3, #1
   10d94:	add	r2, r2, #1
   10d98:	str	r2, [r5, #24]
   10d9c:	str	r3, [r0, #3960]	; 0xf78
   10da0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10da4:	ldr	r2, [r5, #28]
   10da8:	ldr	r3, [r0, #3964]	; 0xf7c
   10dac:	add	r2, r2, #1
   10db0:	add	r3, r3, #1
   10db4:	str	r2, [r5, #28]
   10db8:	str	r3, [r0, #3964]	; 0xf7c
   10dbc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10dc0:	mov	r1, #32
   10dc4:	mov	r0, #1
   10dc8:	bl	11a48 <error@@Base+0x58>
   10dcc:	mov	r5, r0
   10dd0:	mov	r0, r9
   10dd4:	bl	1092c <strdup@plt>
   10dd8:	ldr	r3, [pc, #76]	; 10e2c <getc@plt+0x3e0>
   10ddc:	str	r0, [r5, #8]
   10de0:	ldr	r3, [r6, r3]
   10de4:	ldrsh	r3, [r3]
   10de8:	cmp	r3, #0
   10dec:	ble	10e14 <getc@plt+0x3c8>
   10df0:	sub	r1, r3, #1
   10df4:	add	r2, r5, #12
   10df8:	uxth	r1, r1
   10dfc:	sub	r3, r8, #4
   10e00:	add	r8, r8, r1, lsl #2
   10e04:	ldr	r1, [r3, #4]!
   10e08:	cmp	r3, r8
   10e0c:	str	r1, [r2], #4
   10e10:	bne	10e04 <getc@plt+0x3b8>
   10e14:	mov	r1, r5
   10e18:	mov	r0, r4
   10e1c:	bl	11548 <getc@plt+0xafc>
   10e20:	b	10d80 <getc@plt+0x334>
   10e24:	muleq	r1, ip, r2
   10e28:	ldrdeq	r0, [r0], -r4
   10e2c:	muleq	r0, ip, r0
   10e30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e34:	mov	r6, r0
   10e38:	ldr	r4, [pc, #268]	; 10f4c <getc@plt+0x500>
   10e3c:	ldr	r3, [pc, #268]	; 10f50 <getc@plt+0x504>
   10e40:	add	r4, pc, r4
   10e44:	ldr	r2, [pc, #264]	; 10f54 <getc@plt+0x508>
   10e48:	ldr	r5, [r4, r3]
   10e4c:	sub	sp, sp, #68	; 0x44
   10e50:	ldr	r1, [r4, r2]
   10e54:	mov	r0, r5
   10e58:	bl	11264 <getc@plt+0x818>
   10e5c:	ldr	r3, [pc, #244]	; 10f58 <getc@plt+0x50c>
   10e60:	mov	r1, r6
   10e64:	mov	r0, r5
   10e68:	ldr	r2, [r4, r3]
   10e6c:	bl	11e50 <error@@Base+0x460>
   10e70:	ldr	r3, [r5]
   10e74:	cmp	r3, #0
   10e78:	str	r3, [sp]
   10e7c:	beq	10f44 <getc@plt+0x4f8>
   10e80:	ldr	r3, [pc, #212]	; 10f5c <getc@plt+0x510>
   10e84:	add	sl, sp, #36	; 0x24
   10e88:	mov	r8, #0
   10e8c:	add	r7, sp, #12
   10e90:	mov	fp, #1
   10e94:	ldr	r9, [r4, r3]
   10e98:	add	r3, sp, #24
   10e9c:	str	r3, [sp, #4]
   10ea0:	ldrsh	r3, [r9]
   10ea4:	strb	r8, [sp, #36]	; 0x24
   10ea8:	cmp	r3, #0
   10eac:	movle	r2, r8
   10eb0:	ble	10f24 <getc@plt+0x4d8>
   10eb4:	ldr	r5, [sp]
   10eb8:	mov	r4, r8
   10ebc:	mov	r6, #0
   10ec0:	b	10ecc <getc@plt+0x480>
   10ec4:	cmp	r5, #0
   10ec8:	beq	10f44 <getc@plt+0x4f8>
   10ecc:	mov	r3, fp
   10ed0:	mov	r2, r7
   10ed4:	ldr	r1, [r5, #12]
   10ed8:	mov	r0, r8
   10edc:	bl	12258 <error@@Base+0x868>
   10ee0:	mov	r1, r7
   10ee4:	mov	r0, sl
   10ee8:	bl	10974 <strcat@plt>
   10eec:	add	r3, sp, #64	; 0x40
   10ef0:	add	r3, r3, r4, lsl #2
   10ef4:	ldr	r2, [r5, #12]
   10ef8:	add	r4, r4, #1
   10efc:	str	r2, [r3, #-40]	; 0xffffffd8
   10f00:	ldrb	r2, [r5, #8]
   10f04:	ldrsh	r3, [r9]
   10f08:	sxth	r4, r4
   10f0c:	cmp	r2, #0
   10f10:	movne	r6, #1
   10f14:	cmp	r3, r4
   10f18:	ldr	r5, [r5, #4]
   10f1c:	bgt	10ec4 <getc@plt+0x478>
   10f20:	mov	r2, r6
   10f24:	ldr	r1, [sp, #4]
   10f28:	mov	r0, sl
   10f2c:	bl	10d4c <getc@plt+0x300>
   10f30:	ldr	r3, [sp]
   10f34:	ldr	r3, [r3, #4]
   10f38:	cmp	r3, #0
   10f3c:	str	r3, [sp]
   10f40:	bne	10ea0 <getc@plt+0x454>
   10f44:	add	sp, sp, #68	; 0x44
   10f48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f4c:			; <UNDEFINED> instruction: 0x000121b8
   10f50:	muleq	r0, r0, r0
   10f54:	muleq	r0, r8, r0
   10f58:	andeq	r0, r0, r8, lsr #1
   10f5c:	muleq	r0, ip, r0
   10f60:	ldr	r0, [pc, #124]	; 10fe4 <getc@plt+0x598>
   10f64:	push	{r4, r5, r6, r7, r8, lr}
   10f68:	add	r0, pc, r0
   10f6c:	bl	10998 <puts@plt>
   10f70:	ldr	r3, [pc, #112]	; 10fe8 <getc@plt+0x59c>
   10f74:	ldr	r2, [pc, #112]	; 10fec <getc@plt+0x5a0>
   10f78:	add	r3, pc, r3
   10f7c:	ldr	r6, [pc, #108]	; 10ff0 <getc@plt+0x5a4>
   10f80:	ldr	r7, [r3, r2]
   10f84:	add	r6, pc, r6
   10f88:	add	r5, r7, #4096	; 0x1000
   10f8c:	mov	r4, #0
   10f90:	ldr	r3, [r5, #3956]	; 0xf74
   10f94:	cmp	r3, #0
   10f98:	ble	10fc8 <getc@plt+0x57c>
   10f9c:	ldr	r3, [r5, #3952]	; 0xf70
   10fa0:	mov	r0, r6
   10fa4:	ldr	r1, [r3, r4, lsl #2]
   10fa8:	add	r4, r4, #1
   10fac:	ldr	r3, [r1, #8]
   10fb0:	ldr	r2, [r1, #28]
   10fb4:	ldr	r1, [r1, #24]
   10fb8:	bl	108e4 <printf@plt>
   10fbc:	ldr	r3, [r5, #3956]	; 0xf74
   10fc0:	cmp	r3, r4
   10fc4:	bgt	10f9c <getc@plt+0x550>
   10fc8:	add	r7, r7, #4096	; 0x1000
   10fcc:	ldr	r0, [pc, #32]	; 10ff4 <getc@plt+0x5a8>
   10fd0:	ldr	r2, [r7, #3964]	; 0xf7c
   10fd4:	ldr	r1, [r7, #3960]	; 0xf78
   10fd8:	add	r0, pc, r0
   10fdc:	pop	{r4, r5, r6, r7, r8, lr}
   10fe0:	b	108e4 <printf@plt>
   10fe4:	andeq	r1, r0, r4, ror #11
   10fe8:	andeq	r2, r1, r0, lsl #1
   10fec:	ldrdeq	r0, [r0], -r4
   10ff0:	strdeq	r1, [r0], -r0
   10ff4:	andeq	r1, r0, r8, lsl #11
   10ff8:	push	{r4, r5, r6, lr}
   10ffc:	ldr	r5, [pc, #84]	; 11058 <getc@plt+0x60c>
   11000:	ldr	r3, [pc, #84]	; 1105c <getc@plt+0x610>
   11004:	add	r5, pc, r5
   11008:	ldr	r4, [r5, r3]
   1100c:	mov	r0, r4
   11010:	bl	11650 <getc@plt+0xc04>
   11014:	ldr	r3, [pc, #68]	; 11060 <getc@plt+0x614>
   11018:	add	r4, r4, #4096	; 0x1000
   1101c:	ldr	r2, [r5, r3]
   11020:	ldr	r1, [r4, #3952]	; 0xf70
   11024:	ldr	r0, [r4, #3956]	; 0xf74
   11028:	bl	1145c <getc@plt+0xa10>
   1102c:	bl	10f60 <getc@plt+0x514>
   11030:	ldr	r0, [pc, #44]	; 11064 <getc@plt+0x618>
   11034:	add	r0, pc, r0
   11038:	bl	10998 <puts@plt>
   1103c:	ldr	r3, [pc, #36]	; 11068 <getc@plt+0x61c>
   11040:	ldr	r1, [r4, #3952]	; 0xf70
   11044:	ldr	r0, [r4, #3956]	; 0xf74
   11048:	ldr	r2, [r5, r3]
   1104c:	bl	1145c <getc@plt+0xa10>
   11050:	pop	{r4, r5, r6, lr}
   11054:	b	10f60 <getc@plt+0x514>
   11058:	strdeq	r1, [r1], -r4
   1105c:	ldrdeq	r0, [r0], -r4
   11060:	andeq	r0, r0, ip, lsr #1
   11064:	andeq	r1, r0, r0, asr r5
   11068:	ldrdeq	r0, [r0], -r8
   1106c:	mov	r3, #0
   11070:	str	r3, [r0, #4]
   11074:	str	r3, [r0]
   11078:	str	r3, [r0, #8]
   1107c:	str	r3, [r0, #12]
   11080:	bx	lr
   11084:	ldr	r3, [r0]
   11088:	mov	r2, #0
   1108c:	cmp	r3, r2
   11090:	push	{r4, lr}
   11094:	mov	r4, r0
   11098:	stm	r1, {r2, r3}
   1109c:	str	r1, [r0]
   110a0:	streq	r1, [r0, #4]
   110a4:	ldr	r0, [r0, #8]
   110a8:	strne	r1, [r3]
   110ac:	cmp	r0, #0
   110b0:	beq	110c0 <getc@plt+0x674>
   110b4:	bl	108fc <free@plt>
   110b8:	mov	r3, #0
   110bc:	str	r3, [r4, #8]
   110c0:	ldr	r3, [r4, #12]
   110c4:	add	r3, r3, #1
   110c8:	str	r3, [r4, #12]
   110cc:	pop	{r4, pc}
   110d0:	ldr	r3, [r0, #4]
   110d4:	mov	r2, #0
   110d8:	cmp	r3, r2
   110dc:	push	{r4, lr}
   110e0:	mov	r4, r0
   110e4:	str	r3, [r1]
   110e8:	str	r2, [r1, #4]
   110ec:	streq	r1, [r0]
   110f0:	ldr	r0, [r0, #8]
   110f4:	strne	r1, [r3, #4]
   110f8:	cmp	r0, #0
   110fc:	str	r1, [r4, #4]
   11100:	beq	11110 <getc@plt+0x6c4>
   11104:	bl	108fc <free@plt>
   11108:	mov	r3, #0
   1110c:	str	r3, [r4, #8]
   11110:	ldr	r3, [r4, #12]
   11114:	add	r3, r3, #1
   11118:	str	r3, [r4, #12]
   1111c:	pop	{r4, pc}
   11120:	ldr	r3, [r2]
   11124:	push	{r4, lr}
   11128:	cmp	r3, #0
   1112c:	str	r3, [r1]
   11130:	str	r2, [r1, #4]
   11134:	mov	r4, r0
   11138:	streq	r1, [r0]
   1113c:	ldr	r0, [r0, #8]
   11140:	strne	r1, [r3, #4]
   11144:	cmp	r0, #0
   11148:	str	r1, [r2]
   1114c:	beq	1115c <getc@plt+0x710>
   11150:	bl	108fc <free@plt>
   11154:	mov	r3, #0
   11158:	str	r3, [r4, #8]
   1115c:	ldr	r3, [r4, #12]
   11160:	add	r3, r3, #1
   11164:	str	r3, [r4, #12]
   11168:	pop	{r4, pc}
   1116c:	ldr	r3, [r1, #4]
   11170:	push	{r4, lr}
   11174:	cmp	r3, #0
   11178:	stm	r2, {r1, r3}
   1117c:	mov	r4, r0
   11180:	str	r2, [r1, #4]
   11184:	streq	r2, [r0, #4]
   11188:	ldr	r0, [r0, #8]
   1118c:	strne	r2, [r3]
   11190:	cmp	r0, #0
   11194:	beq	111a4 <getc@plt+0x758>
   11198:	bl	108fc <free@plt>
   1119c:	mov	r3, #0
   111a0:	str	r3, [r4, #8]
   111a4:	ldr	r3, [r4, #12]
   111a8:	add	r3, r3, #1
   111ac:	str	r3, [r4, #12]
   111b0:	pop	{r4, pc}
   111b4:	ldr	r3, [r1]
   111b8:	ldr	r2, [r1, #4]
   111bc:	cmp	r3, #0
   111c0:	push	{r4, r5, r6, lr}
   111c4:	mov	r4, r0
   111c8:	strne	r2, [r3, #4]
   111cc:	ldrne	r2, [r1, #4]
   111d0:	streq	r2, [r0]
   111d4:	cmp	r2, #0
   111d8:	streq	r3, [r0, #4]
   111dc:	ldr	r0, [r0, #8]
   111e0:	mov	r5, #0
   111e4:	strne	r3, [r2]
   111e8:	cmp	r0, r5
   111ec:	str	r5, [r1, #4]
   111f0:	str	r5, [r1]
   111f4:	beq	11200 <getc@plt+0x7b4>
   111f8:	bl	108fc <free@plt>
   111fc:	str	r5, [r4, #8]
   11200:	ldr	r3, [r4, #12]
   11204:	sub	r3, r3, #1
   11208:	str	r3, [r4, #12]
   1120c:	pop	{r4, r5, r6, pc}
   11210:	ldr	r3, [r0, #8]
   11214:	cmp	r3, #0
   11218:	bxne	lr
   1121c:	ldr	r3, [r0, #12]
   11220:	cmp	r3, #0
   11224:	bxeq	lr
   11228:	push	{r4, lr}
   1122c:	mov	r1, #4
   11230:	mov	r4, r0
   11234:	mov	r0, r3
   11238:	bl	11a48 <error@@Base+0x58>
   1123c:	ldr	r3, [r4]
   11240:	cmp	r3, #0
   11244:	str	r0, [r4, #8]
   11248:	popeq	{r4, pc}
   1124c:	sub	r0, r0, #4
   11250:	str	r3, [r0, #4]!
   11254:	ldr	r3, [r3, #4]
   11258:	cmp	r3, #0
   1125c:	bne	11250 <getc@plt+0x804>
   11260:	pop	{r4, pc}
   11264:	push	{r4, r5, r6, lr}
   11268:	ldr	r4, [r0]
   1126c:	cmp	r4, #0
   11270:	popeq	{r4, r5, r6, pc}
   11274:	mov	r5, r0
   11278:	mov	r6, r1
   1127c:	mov	r1, r4
   11280:	mov	r0, r5
   11284:	bl	111b4 <getc@plt+0x768>
   11288:	mov	r0, r4
   1128c:	blx	r6
   11290:	ldr	r4, [r5]
   11294:	cmp	r4, #0
   11298:	bne	1127c <getc@plt+0x830>
   1129c:	pop	{r4, r5, r6, pc}
   112a0:	ldr	r2, [pc, #420]	; 1144c <getc@plt+0xa00>
   112a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112a8:	sub	sp, sp, #28
   112ac:	add	r2, pc, r2
   112b0:	ldr	r9, [pc, #408]	; 11450 <getc@plt+0xa04>
   112b4:	ldr	r8, [pc, #408]	; 11454 <getc@plt+0xa08>
   112b8:	str	r2, [sp, #16]
   112bc:	ldr	r2, [pc, #404]	; 11458 <getc@plt+0xa0c>
   112c0:	add	r9, pc, r9
   112c4:	add	r8, pc, r8
   112c8:	add	r2, pc, r2
   112cc:	lsl	r3, r1, #2
   112d0:	str	r1, [sp, #12]
   112d4:	str	r2, [sp, #4]
   112d8:	str	r0, [sp, #8]
   112dc:	str	r3, [sp, #20]
   112e0:	ldr	r3, [sp, #16]
   112e4:	ldr	r2, [sp, #12]
   112e8:	ldr	r1, [r3]
   112ec:	ldr	r3, [sp, #8]
   112f0:	cmp	r3, r2
   112f4:	ldr	r7, [r1, r3, lsl #2]
   112f8:	bge	11430 <getc@plt+0x9e4>
   112fc:	ldr	r4, [sp, #8]
   11300:	ldr	r5, [sp, #12]
   11304:	lsl	r6, r5, #2
   11308:	b	11310 <getc@plt+0x8c4>
   1130c:	ldr	r1, [r9]
   11310:	ldr	r1, [r1, r6]
   11314:	ldr	r3, [r9, #4]
   11318:	mov	r0, r7
   1131c:	blx	r3
   11320:	cmp	r0, #0
   11324:	bge	1137c <getc@plt+0x930>
   11328:	sub	r5, r5, #1
   1132c:	cmp	r5, r4
   11330:	sub	r6, r6, #4
   11334:	bgt	1130c <getc@plt+0x8c0>
   11338:	bne	11378 <getc@plt+0x92c>
   1133c:	ldr	r1, [r9]
   11340:	mov	fp, r5
   11344:	add	r0, r1, fp, lsl #2
   11348:	ldr	r3, [sp, #8]
   1134c:	sub	r1, fp, #1
   11350:	cmp	r3, r1
   11354:	str	r7, [r0]
   11358:	blt	11414 <getc@plt+0x9c8>
   1135c:	ldr	r2, [sp, #12]
   11360:	add	r3, r5, #1
   11364:	cmp	r3, r2
   11368:	str	r3, [sp, #8]
   1136c:	blt	112e0 <getc@plt+0x894>
   11370:	add	sp, sp, #28
   11374:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11378:	lsl	r6, r5, #2
   1137c:	ldr	r3, [sp, #4]
   11380:	add	sl, r4, #1
   11384:	cmp	sl, r5
   11388:	ldr	r1, [r3]
   1138c:	add	r0, r1, r6
   11390:	ldr	r2, [r1, r6]
   11394:	str	r2, [r1, r4, lsl #2]
   11398:	lsl	r4, r4, #2
   1139c:	bge	11420 <getc@plt+0x9d4>
   113a0:	add	fp, r4, #4
   113a4:	b	113bc <getc@plt+0x970>
   113a8:	add	sl, sl, #1
   113ac:	cmp	sl, r5
   113b0:	add	fp, fp, #4
   113b4:	beq	11400 <getc@plt+0x9b4>
   113b8:	ldr	r1, [r8]
   113bc:	ldr	r1, [r1, fp]
   113c0:	ldr	r3, [r8, #4]
   113c4:	mov	r0, r7
   113c8:	blx	r3
   113cc:	cmp	r0, #0
   113d0:	bgt	113a8 <getc@plt+0x95c>
   113d4:	ldr	r1, [r8]
   113d8:	mov	r4, sl
   113dc:	add	r0, r1, r6
   113e0:	sub	r5, r5, #1
   113e4:	ldr	r2, [r1, fp]
   113e8:	cmp	r5, sl
   113ec:	str	r2, [r0]
   113f0:	bgt	11304 <getc@plt+0x8b8>
   113f4:	mov	fp, r5
   113f8:	mov	r5, r4
   113fc:	b	11344 <getc@plt+0x8f8>
   11400:	ldr	r0, [r8]
   11404:	mov	fp, sl
   11408:	add	r0, r0, r6
   1140c:	mov	r5, fp
   11410:	b	11348 <getc@plt+0x8fc>
   11414:	mov	r0, r3
   11418:	bl	112a0 <getc@plt+0x854>
   1141c:	b	1135c <getc@plt+0x910>
   11420:	beq	11444 <getc@plt+0x9f8>
   11424:	lsl	fp, sl, #2
   11428:	mov	r4, sl
   1142c:	b	113e0 <getc@plt+0x994>
   11430:	ldr	r3, [sp, #20]
   11434:	mov	fp, r2
   11438:	add	r0, r1, r3
   1143c:	ldr	r5, [sp, #8]
   11440:	b	11348 <getc@plt+0x8fc>
   11444:	mov	fp, sl
   11448:	b	1140c <getc@plt+0x9c0>
   1144c:	andeq	r1, r1, r0, ror #28
   11450:	andeq	r1, r1, ip, asr #28
   11454:	andeq	r1, r1, r8, asr #28
   11458:	andeq	r1, r1, r4, asr #28
   1145c:	cmp	r0, #1
   11460:	mov	ip, r1
   11464:	bxle	lr
   11468:	ldr	r3, [pc, #20]	; 11484 <getc@plt+0xa38>
   1146c:	sub	r1, r0, #1
   11470:	add	r3, pc, r3
   11474:	mov	r0, #0
   11478:	str	ip, [r3]
   1147c:	str	r2, [r3, #4]
   11480:	b	112a0 <getc@plt+0x854>
   11484:	muleq	r1, ip, ip
   11488:	push	{r4, r5, r6, lr}
   1148c:	add	r5, r0, #8000	; 0x1f40
   11490:	mov	r6, r0
   11494:	add	r5, r5, #48	; 0x30
   11498:	mov	r4, r0
   1149c:	mov	r0, r4
   114a0:	add	r4, r4, #16
   114a4:	bl	1106c <getc@plt+0x620>
   114a8:	cmp	r4, r5
   114ac:	bne	1149c <getc@plt+0xa50>
   114b0:	add	r6, r6, #4096	; 0x1000
   114b4:	mov	r3, #0
   114b8:	str	r3, [r6, #3952]	; 0xf70
   114bc:	str	r3, [r6, #3956]	; 0xf74
   114c0:	pop	{r4, r5, r6, pc}
   114c4:	push	{r4, r5, r6, lr}
   114c8:	mov	r5, r1
   114cc:	ldrb	r3, [r1]
   114d0:	cmp	r3, #0
   114d4:	beq	1150c <getc@plt+0xac0>
   114d8:	mov	r2, #0
   114dc:	add	r2, r2, r3
   114e0:	ldrb	r3, [r1, #1]!
   114e4:	cmp	r3, #0
   114e8:	bne	114dc <getc@plt+0xa90>
   114ec:	ldr	r1, [pc, #80]	; 11544 <getc@plt+0xaf8>
   114f0:	asr	r3, r2, #31
   114f4:	smull	ip, r1, r1, r2
   114f8:	add	r1, r1, r2
   114fc:	rsb	r3, r3, r1, asr #8
   11500:	rsb	r1, r3, r3, lsl #6
   11504:	rsb	r3, r3, r1, lsl #3
   11508:	sub	r3, r2, r3
   1150c:	ldr	r4, [r0, r3, lsl #4]
   11510:	cmp	r4, #0
   11514:	bne	11528 <getc@plt+0xadc>
   11518:	b	1153c <getc@plt+0xaf0>
   1151c:	ldr	r4, [r4, #4]
   11520:	cmp	r4, #0
   11524:	beq	1153c <getc@plt+0xaf0>
   11528:	ldr	r1, [r4, #8]
   1152c:	mov	r0, r5
   11530:	bl	108d8 <strcmp@plt>
   11534:	cmp	r0, #0
   11538:	bne	1151c <getc@plt+0xad0>
   1153c:	mov	r0, r4
   11540:	pop	{r4, r5, r6, pc}
   11544:	subhi	r4, sl, #1552	; 0x610
   11548:	ldr	ip, [r1, #8]
   1154c:	push	{r4, lr}
   11550:	ldrb	r3, [ip]
   11554:	cmp	r3, #0
   11558:	beq	11594 <getc@plt+0xb48>
   1155c:	mov	r2, #0
   11560:	add	r2, r2, r3
   11564:	ldrb	r3, [ip, #1]!
   11568:	cmp	r3, #0
   1156c:	bne	11560 <getc@plt+0xb14>
   11570:	ldr	ip, [pc, #80]	; 115c8 <getc@plt+0xb7c>
   11574:	asr	r3, r2, #31
   11578:	smull	lr, ip, ip, r2
   1157c:	add	ip, ip, r2
   11580:	rsb	r3, r3, ip, asr #8
   11584:	rsb	ip, r3, r3, lsl #6
   11588:	rsb	r3, r3, ip, lsl #3
   1158c:	sub	r3, r2, r3
   11590:	lsl	r3, r3, #4
   11594:	add	r4, r0, #4096	; 0x1000
   11598:	add	r0, r0, r3
   1159c:	bl	11084 <getc@plt+0x638>
   115a0:	ldr	r0, [r4, #3952]	; 0xf70
   115a4:	cmp	r0, #0
   115a8:	beq	115b8 <getc@plt+0xb6c>
   115ac:	bl	108fc <free@plt>
   115b0:	mov	r3, #0
   115b4:	str	r3, [r4, #3952]	; 0xf70
   115b8:	ldr	r3, [r4, #3956]	; 0xf74
   115bc:	add	r3, r3, #1
   115c0:	str	r3, [r4, #3956]	; 0xf74
   115c4:	pop	{r4, pc}
   115c8:	subhi	r4, sl, #1552	; 0x610
   115cc:	ldr	ip, [r1, #8]
   115d0:	push	{r4, lr}
   115d4:	ldrb	r3, [ip]
   115d8:	cmp	r3, #0
   115dc:	beq	11618 <getc@plt+0xbcc>
   115e0:	mov	r2, #0
   115e4:	add	r2, r2, r3
   115e8:	ldrb	r3, [ip, #1]!
   115ec:	cmp	r3, #0
   115f0:	bne	115e4 <getc@plt+0xb98>
   115f4:	ldr	ip, [pc, #80]	; 1164c <getc@plt+0xc00>
   115f8:	asr	r3, r2, #31
   115fc:	smull	lr, ip, ip, r2
   11600:	add	ip, ip, r2
   11604:	rsb	r3, r3, ip, asr #8
   11608:	rsb	ip, r3, r3, lsl #6
   1160c:	rsb	r3, r3, ip, lsl #3
   11610:	sub	r3, r2, r3
   11614:	lsl	r3, r3, #4
   11618:	add	r4, r0, #4096	; 0x1000
   1161c:	add	r0, r0, r3
   11620:	bl	111b4 <getc@plt+0x768>
   11624:	ldr	r0, [r4, #3952]	; 0xf70
   11628:	cmp	r0, #0
   1162c:	beq	1163c <getc@plt+0xbf0>
   11630:	bl	108fc <free@plt>
   11634:	mov	r3, #0
   11638:	str	r3, [r4, #3952]	; 0xf70
   1163c:	ldr	r3, [r4, #3956]	; 0xf74
   11640:	sub	r3, r3, #1
   11644:	str	r3, [r4, #3956]	; 0xf74
   11648:	pop	{r4, pc}
   1164c:	subhi	r4, sl, #1552	; 0x610
   11650:	push	{r4, r5, r6, lr}
   11654:	add	r6, r0, #4096	; 0x1000
   11658:	ldr	r4, [r6, #3952]	; 0xf70
   1165c:	cmp	r4, #0
   11660:	popne	{r4, r5, r6, pc}
   11664:	ldr	r3, [r6, #3956]	; 0xf74
   11668:	cmp	r3, #0
   1166c:	popeq	{r4, r5, r6, pc}
   11670:	mov	r5, r0
   11674:	mov	r1, #4
   11678:	mov	r0, r3
   1167c:	bl	11a48 <error@@Base+0x58>
   11680:	ldr	lr, [pc, #60]	; 116c4 <getc@plt+0xc78>
   11684:	mov	r2, r4
   11688:	mov	ip, r4
   1168c:	str	r0, [r6, #3952]	; 0xf70
   11690:	ldr	r3, [r5, ip, lsl #4]
   11694:	cmp	r3, #0
   11698:	beq	116b4 <getc@plt+0xc68>
   1169c:	add	r1, r0, r2, lsl #2
   116a0:	str	r3, [r1], #4
   116a4:	ldr	r3, [r3, #4]
   116a8:	add	r2, r2, #1
   116ac:	cmp	r3, #0
   116b0:	bne	116a0 <getc@plt+0xc54>
   116b4:	add	ip, ip, #1
   116b8:	cmp	ip, lr
   116bc:	bne	11690 <getc@plt+0xc44>
   116c0:	pop	{r4, r5, r6, pc}
   116c4:	strdeq	r0, [r0], -r7
   116c8:	push	{r4, r5, r6, r7, r8, lr}
   116cc:	add	r5, r0, #8000	; 0x1f40
   116d0:	mov	r7, r0
   116d4:	mov	r6, r1
   116d8:	add	r5, r5, #48	; 0x30
   116dc:	mov	r4, r0
   116e0:	mov	r0, r4
   116e4:	mov	r1, r6
   116e8:	add	r4, r4, #16
   116ec:	bl	11264 <getc@plt+0x818>
   116f0:	cmp	r4, r5
   116f4:	bne	116e0 <getc@plt+0xc94>
   116f8:	add	r7, r7, #4096	; 0x1000
   116fc:	ldr	r0, [r7, #3952]	; 0xf70
   11700:	cmp	r0, #0
   11704:	beq	11714 <getc@plt+0xcc8>
   11708:	bl	108fc <free@plt>
   1170c:	mov	r3, #0
   11710:	str	r3, [r7, #3952]	; 0xf70
   11714:	mov	r3, #0
   11718:	str	r3, [r7, #3956]	; 0xf74
   1171c:	pop	{r4, r5, r6, r7, r8, pc}
   11720:	ldr	r3, [pc, #76]	; 11774 <getc@plt+0xd28>
   11724:	ldr	r2, [pc, #76]	; 11778 <getc@plt+0xd2c>
   11728:	add	r3, pc, r3
   1172c:	push	{r4, r5, lr}
   11730:	sub	sp, sp, #116	; 0x74
   11734:	ldr	r3, [r3, r2]
   11738:	mov	r5, r0
   1173c:	ldr	r4, [r3]
   11740:	bl	109c8 <getpid@plt>
   11744:	ldr	r1, [pc, #48]	; 1177c <getc@plt+0xd30>
   11748:	mov	r2, r4
   1174c:	add	r4, sp, #12
   11750:	add	r1, pc, r1
   11754:	str	r5, [sp]
   11758:	mov	r3, r0
   1175c:	mov	r0, r4
   11760:	bl	10a10 <sprintf@plt>
   11764:	mov	r0, r4
   11768:	bl	1092c <strdup@plt>
   1176c:	add	sp, sp, #116	; 0x74
   11770:	pop	{r4, r5, pc}
   11774:	ldrdeq	r1, [r1], -r0
   11778:	strheq	r0, [r0], -ip
   1177c:	andeq	r0, r0, r0, lsl #29
   11780:	ldr	r3, [pc, #108]	; 117f4 <getc@plt+0xda8>
   11784:	ldr	r2, [pc, #108]	; 117f8 <getc@plt+0xdac>
   11788:	add	r3, pc, r3
   1178c:	push	{r7, lr}
   11790:	mov	r7, r0
   11794:	ldr	r3, [r3, r2]
   11798:	ldr	r3, [r3]
   1179c:	cmp	r3, #0
   117a0:	beq	117a8 <getc@plt+0xd5c>
   117a4:	blx	r3
   117a8:	ldr	r6, [pc, #76]	; 117fc <getc@plt+0xdb0>
   117ac:	add	r6, pc, r6
   117b0:	ldrsh	r3, [r6]
   117b4:	cmp	r3, #0
   117b8:	movgt	r4, #1
   117bc:	ble	117ec <getc@plt+0xda0>
   117c0:	mov	r0, r4
   117c4:	bl	11720 <getc@plt+0xcd4>
   117c8:	add	r4, r4, #1
   117cc:	sxth	r4, r4
   117d0:	mov	r5, r0
   117d4:	bl	10944 <unlink@plt>
   117d8:	mov	r0, r5
   117dc:	bl	108fc <free@plt>
   117e0:	ldrsh	r3, [r6]
   117e4:	cmp	r3, r4
   117e8:	bge	117c0 <getc@plt+0xd74>
   117ec:	mov	r0, r7
   117f0:	bl	109d4 <exit@plt>
   117f4:	andeq	r1, r1, r0, ror r8
   117f8:	andeq	r0, r0, r0, asr #1
   117fc:	andeq	r1, r1, r8, ror #18
   11800:	ldrb	r3, [r0]
   11804:	cmp	r3, #0
   11808:	beq	1186c <getc@plt+0xe20>
   1180c:	ldrb	ip, [r1]
   11810:	cmp	ip, r3
   11814:	bne	1187c <getc@plt+0xe30>
   11818:	push	{lr}		; (str lr, [sp, #-4]!)
   1181c:	mov	r2, #0
   11820:	mov	lr, r1
   11824:	b	11834 <getc@plt+0xde8>
   11828:	ldrb	ip, [lr, #1]!
   1182c:	cmp	r3, ip
   11830:	bne	11854 <getc@plt+0xe08>
   11834:	ldrb	r3, [r0, #1]!
   11838:	add	r2, r2, #1
   1183c:	cmp	r3, #0
   11840:	bne	11828 <getc@plt+0xddc>
   11844:	ldrb	ip, [r1, r2]
   11848:	cmp	ip, #0
   1184c:	movne	r3, #0
   11850:	beq	11864 <getc@plt+0xe18>
   11854:	cmp	r3, ip
   11858:	movcs	r0, #1
   1185c:	mvncc	r0, #0
   11860:	pop	{pc}		; (ldr pc, [sp], #4)
   11864:	mov	r0, ip
   11868:	pop	{pc}		; (ldr pc, [sp], #4)
   1186c:	ldrb	ip, [r1, r3]
   11870:	cmp	ip, #0
   11874:	movne	r3, #0
   11878:	beq	1188c <getc@plt+0xe40>
   1187c:	cmp	r3, ip
   11880:	movcs	r0, #1
   11884:	mvncc	r0, #0
   11888:	bx	lr
   1188c:	mov	r0, ip
   11890:	bx	lr
   11894:	ldr	r2, [pc, #44]	; 118c8 <getc@plt+0xe7c>
   11898:	ldr	r3, [pc, #44]	; 118cc <getc@plt+0xe80>
   1189c:	add	r2, pc, r2
   118a0:	ldr	r3, [r2, r3]
   118a4:	ldr	r3, [r3]
   118a8:	cmp	r3, r0
   118ac:	bxeq	lr
   118b0:	ldr	r3, [pc, #24]	; 118d0 <getc@plt+0xe84>
   118b4:	ldr	r3, [r2, r3]
   118b8:	ldr	r3, [r3]
   118bc:	cmp	r0, r3
   118c0:	bxeq	lr
   118c4:	b	10a04 <fclose@plt>
   118c8:	andeq	r1, r1, ip, asr r7
   118cc:	andeq	r0, r0, r8, asr #1
   118d0:	andeq	r0, r0, ip, asr #1
   118d4:	push	{lr}		; (str lr, [sp, #-4]!)
   118d8:	sub	sp, sp, #92	; 0x5c
   118dc:	mov	r1, r0
   118e0:	mov	r2, sp
   118e4:	mov	r0, #3
   118e8:	bl	1095c <__xstat@plt>
   118ec:	clz	r0, r0
   118f0:	lsr	r0, r0, #5
   118f4:	add	sp, sp, #92	; 0x5c
   118f8:	pop	{pc}		; (ldr pc, [sp], #4)
   118fc:	ldr	r2, [pc, #44]	; 11930 <getc@plt+0xee4>
   11900:	push	{r4, lr}
   11904:	add	r2, pc, r2
   11908:	ldrh	r3, [r2]
   1190c:	add	r3, r3, #1
   11910:	sxth	r3, r3
   11914:	mov	r0, r3
   11918:	strh	r3, [r2]
   1191c:	bl	11720 <getc@plt+0xcd4>
   11920:	mov	r4, r0
   11924:	bl	10944 <unlink@plt>
   11928:	mov	r0, r4
   1192c:	pop	{r4, pc}
   11930:	andeq	r1, r1, r0, lsl r8
   11934:	push	{r4, lr}
   11938:	mov	r4, r0
   1193c:	bl	109ec <strlen@plt>
   11940:	sub	r0, r0, #1
   11944:	sxth	r0, r0
   11948:	cmp	r0, #0
   1194c:	bge	11964 <getc@plt+0xf18>
   11950:	b	11970 <getc@plt+0xf24>
   11954:	sub	r0, r0, #1
   11958:	sxth	r0, r0
   1195c:	cmn	r0, #1
   11960:	beq	11970 <getc@plt+0xf24>
   11964:	ldrb	r3, [r4, r0]
   11968:	cmp	r3, #47	; 0x2f
   1196c:	bne	11954 <getc@plt+0xf08>
   11970:	add	r0, r0, #1
   11974:	add	r0, r4, r0
   11978:	pop	{r4, pc}
   1197c:	push	{r4, lr}
   11980:	mov	r0, #0
   11984:	bl	11780 <getc@plt+0xd34>
   11988:	ldr	r1, [pc, #76]	; 119dc <getc@plt+0xf90>
   1198c:	ldr	r2, [pc, #76]	; 119e0 <getc@plt+0xf94>
   11990:	add	r1, pc, r1
   11994:	push	{r4, lr}
   11998:	ldr	r2, [r1, r2]
   1199c:	ldr	r2, [r2]
   119a0:	cmp	r2, #0
   119a4:	beq	119b0 <getc@plt+0xf64>
   119a8:	blx	r2
   119ac:	bl	1197c <getc@plt+0xf30>
   119b0:	ldr	r2, [pc, #44]	; 119e4 <getc@plt+0xf98>
   119b4:	ldr	ip, [pc, #44]	; 119e8 <getc@plt+0xf9c>
   119b8:	mov	r3, r0
   119bc:	ldr	r0, [r1, r2]
   119c0:	ldr	ip, [r1, ip]
   119c4:	ldr	r1, [pc, #32]	; 119ec <getc@plt+0xfa0>
   119c8:	ldr	r0, [r0]
   119cc:	add	r1, pc, r1
   119d0:	ldr	r2, [ip]
   119d4:	bl	109f8 <fprintf@plt>
   119d8:	b	119ac <getc@plt+0xf60>
   119dc:	andeq	r1, r1, r8, ror #12
   119e0:	andeq	r0, r0, r4, lsr #1
   119e4:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   119e8:	strheq	r0, [r0], -ip
   119ec:	andeq	r0, r0, r4, lsl ip

000119f0 <error@@Base>:
   119f0:	push	{r4, lr}
   119f4:	mov	r3, r0
   119f8:	ldr	r4, [pc, #52]	; 11a34 <error@@Base+0x44>
   119fc:	ldr	r1, [pc, #52]	; 11a38 <error@@Base+0x48>
   11a00:	ldr	r2, [pc, #52]	; 11a3c <error@@Base+0x4c>
   11a04:	add	r4, pc, r4
   11a08:	ldr	ip, [r4, r1]
   11a0c:	ldr	r0, [r4, r2]
   11a10:	ldr	r1, [pc, #40]	; 11a40 <error@@Base+0x50>
   11a14:	ldr	r2, [ip]
   11a18:	add	r1, pc, r1
   11a1c:	ldr	r0, [r0]
   11a20:	bl	109f8 <fprintf@plt>
   11a24:	ldr	r3, [pc, #24]	; 11a44 <error@@Base+0x54>
   11a28:	ldr	r3, [r4, r3]
   11a2c:	ldr	r0, [r3]
   11a30:	bl	11780 <getc@plt+0xd34>
   11a34:	strdeq	r1, [r1], -r4
   11a38:	strheq	r0, [r0], -ip
   11a3c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   11a40:	ldrdeq	r0, [r0], -r8
   11a44:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11a48:	push	{r4, lr}
   11a4c:	bl	108cc <calloc@plt>
   11a50:	cmp	r0, #0
   11a54:	popne	{r4, pc}
   11a58:	ldr	r0, [pc, #4]	; 11a64 <error@@Base+0x74>
   11a5c:	add	r0, pc, r0
   11a60:	bl	119f0 <error@@Base>
   11a64:	muleq	r0, ip, fp
   11a68:	ldr	r3, [pc, #40]	; 11a98 <error@@Base+0xa8>
   11a6c:	add	r3, pc, r3
   11a70:	ldrb	r2, [r3, #2]
   11a74:	cmp	r2, #0
   11a78:	beq	11a80 <error@@Base+0x90>
   11a7c:	bx	lr
   11a80:	ldr	r0, [pc, #20]	; 11a9c <error@@Base+0xac>
   11a84:	push	{r4, lr}
   11a88:	mov	r2, #1
   11a8c:	add	r0, pc, r0
   11a90:	strb	r2, [r3, #2]
   11a94:	bl	119f0 <error@@Base>
   11a98:	andeq	r1, r1, r8, lsr #13
   11a9c:	andeq	r0, r0, r8, lsl #23
   11aa0:	ldr	r4, [pc, #68]	; 11aec <error@@Base+0xfc>
   11aa4:	ldr	r2, [pc, #68]	; 11af0 <error@@Base+0x100>
   11aa8:	ldr	ip, [pc, #68]	; 11af4 <error@@Base+0x104>
   11aac:	add	r4, pc, r4
   11ab0:	push	{lr}		; (str lr, [sp, #-4]!)
   11ab4:	sub	sp, sp, #12
   11ab8:	mov	r3, r0
   11abc:	ldr	ip, [r4, ip]
   11ac0:	ldr	r0, [r4, r2]
   11ac4:	str	r1, [sp]
   11ac8:	ldr	r1, [pc, #40]	; 11af8 <error@@Base+0x108>
   11acc:	ldr	r2, [ip]
   11ad0:	ldr	r0, [r0]
   11ad4:	add	r1, pc, r1
   11ad8:	bl	109f8 <fprintf@plt>
   11adc:	ldr	r3, [pc, #24]	; 11afc <error@@Base+0x10c>
   11ae0:	ldr	r3, [r4, r3]
   11ae4:	ldr	r0, [r3]
   11ae8:	bl	11780 <getc@plt+0xd34>
   11aec:	andeq	r1, r1, ip, asr #10
   11af0:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   11af4:	strheq	r0, [r0], -ip
   11af8:	andeq	r0, r0, r0, asr fp
   11afc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11b00:	ldr	ip, [pc, #116]	; 11b7c <error@@Base+0x18c>
   11b04:	subs	r2, r0, #0
   11b08:	push	{r4, r5, r6, lr}
   11b0c:	add	ip, pc, ip
   11b10:	mov	r4, r1
   11b14:	beq	11b44 <error@@Base+0x154>
   11b18:	mov	r5, r2
   11b1c:	bl	108f0 <fopen@plt>
   11b20:	cmp	r0, #0
   11b24:	popne	{r4, r5, r6, pc}
   11b28:	ldrb	r3, [r4]
   11b2c:	mov	r1, r5
   11b30:	cmp	r3, #119	; 0x77
   11b34:	beq	11b70 <error@@Base+0x180>
   11b38:	ldr	r0, [pc, #64]	; 11b80 <error@@Base+0x190>
   11b3c:	add	r0, pc, r0
   11b40:	bl	11aa0 <error@@Base+0xb0>
   11b44:	ldrb	r3, [r1]
   11b48:	cmp	r3, #114	; 0x72
   11b4c:	beq	11b60 <error@@Base+0x170>
   11b50:	ldr	r3, [pc, #44]	; 11b84 <error@@Base+0x194>
   11b54:	ldr	r3, [ip, r3]
   11b58:	ldr	r0, [r3]
   11b5c:	pop	{r4, r5, r6, pc}
   11b60:	ldr	r3, [pc, #32]	; 11b88 <error@@Base+0x198>
   11b64:	ldr	r3, [ip, r3]
   11b68:	ldr	r0, [r3]
   11b6c:	pop	{r4, r5, r6, pc}
   11b70:	ldr	r0, [pc, #20]	; 11b8c <error@@Base+0x19c>
   11b74:	add	r0, pc, r0
   11b78:	bl	11aa0 <error@@Base+0xb0>
   11b7c:	andeq	r1, r1, ip, ror #9
   11b80:	andeq	r0, r0, r0, lsl fp
   11b84:	andeq	r0, r0, ip, asr #1
   11b88:	andeq	r0, r0, r8, asr #1
   11b8c:	andeq	r0, r0, r0, asr #21
   11b90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b94:	sub	sp, sp, #20
   11b98:	mov	r7, r0
   11b9c:	str	r0, [sp, #8]
   11ba0:	ldr	r0, [r1]
   11ba4:	str	r2, [sp, #12]
   11ba8:	mov	r9, r1
   11bac:	mov	r6, r3
   11bb0:	bl	11934 <getc@plt+0xee8>
   11bb4:	ldr	r5, [pc, #496]	; 11dac <error@@Base+0x3bc>
   11bb8:	ldr	r3, [pc, #496]	; 11db0 <error@@Base+0x3c0>
   11bbc:	add	r5, pc, r5
   11bc0:	ldr	r4, [pc, #492]	; 11db4 <error@@Base+0x3c4>
   11bc4:	ldr	r3, [r5, r3]
   11bc8:	add	r4, pc, r4
   11bcc:	mov	r1, r4
   11bd0:	str	r0, [r3]
   11bd4:	mov	r0, #2
   11bd8:	bl	109b0 <__sysv_signal@plt>
   11bdc:	mov	r1, r4
   11be0:	mov	r0, #15
   11be4:	bl	109b0 <__sysv_signal@plt>
   11be8:	ldr	fp, [r7]
   11bec:	cmp	fp, #1
   11bf0:	beq	11d38 <error@@Base+0x348>
   11bf4:	mov	r7, #0
   11bf8:	ble	11d4c <error@@Base+0x35c>
   11bfc:	ldr	r3, [pc, #436]	; 11db8 <error@@Base+0x3c8>
   11c00:	mov	sl, #1
   11c04:	add	r3, pc, r3
   11c08:	str	r3, [sp, #4]
   11c0c:	mov	r4, sl
   11c10:	mov	r3, fp
   11c14:	b	11c38 <error@@Base+0x248>
   11c18:	add	r2, r7, #1
   11c1c:	str	r5, [r9, r7, lsl #2]
   11c20:	sxth	r7, r2
   11c24:	add	r4, r4, #1
   11c28:	sxth	r4, r4
   11c2c:	cmp	r4, r3
   11c30:	mov	sl, r4
   11c34:	bge	11d4c <error@@Base+0x35c>
   11c38:	ldr	r5, [r9, r4, lsl #2]
   11c3c:	lsl	fp, r4, #2
   11c40:	ldrb	r2, [r5]
   11c44:	cmp	r2, #45	; 0x2d
   11c48:	bne	11c18 <error@@Base+0x228>
   11c4c:	ldrb	r8, [r5, #1]
   11c50:	cmp	r8, #0
   11c54:	beq	11c18 <error@@Base+0x228>
   11c58:	mov	r0, r5
   11c5c:	str	r3, [sp]
   11c60:	bl	109ec <strlen@plt>
   11c64:	mov	r1, r5
   11c68:	mov	r2, r0
   11c6c:	ldr	r0, [sp, #4]
   11c70:	bl	10a34 <strncmp@plt>
   11c74:	cmp	r0, #0
   11c78:	beq	11d94 <error@@Base+0x3a4>
   11c7c:	ldr	r3, [sp]
   11c80:	add	sl, sl, #1
   11c84:	cmp	sl, r3
   11c88:	addlt	fp, r9, fp
   11c8c:	movge	ip, #0
   11c90:	ldrlt	ip, [fp, #4]
   11c94:	cmp	r6, #0
   11c98:	beq	11cdc <error@@Base+0x2ec>
   11c9c:	ldrb	r2, [r6]
   11ca0:	cmp	r2, #0
   11ca4:	beq	11cdc <error@@Base+0x2ec>
   11ca8:	cmp	r2, r8
   11cac:	beq	11cec <error@@Base+0x2fc>
   11cb0:	mov	r2, #0
   11cb4:	b	11cc0 <error@@Base+0x2d0>
   11cb8:	cmp	r8, r0
   11cbc:	beq	11cf0 <error@@Base+0x300>
   11cc0:	add	r2, r2, #1
   11cc4:	sxth	r2, r2
   11cc8:	add	r1, r2, r2, lsl #1
   11ccc:	ldrb	r0, [r6, r1, lsl #2]
   11cd0:	add	r1, r6, r1, lsl #2
   11cd4:	cmp	r0, #0
   11cd8:	bne	11cb8 <error@@Base+0x2c8>
   11cdc:	ldr	r0, [pc, #216]	; 11dbc <error@@Base+0x3cc>
   11ce0:	mov	r1, r5
   11ce4:	add	r0, pc, r0
   11ce8:	bl	11aa0 <error@@Base+0xb0>
   11cec:	mov	r1, r6
   11cf0:	ldr	r2, [r1, #4]
   11cf4:	cmp	r2, #0
   11cf8:	beq	11d5c <error@@Base+0x36c>
   11cfc:	ldrb	r0, [r5, #2]
   11d00:	cmp	r0, #0
   11d04:	cmpeq	ip, #0
   11d08:	beq	11d5c <error@@Base+0x36c>
   11d0c:	ldr	r1, [r2]
   11d10:	cmp	r1, #0
   11d14:	bne	11d9c <error@@Base+0x3ac>
   11d18:	cmp	r0, #0
   11d1c:	addne	ip, r5, #2
   11d20:	str	ip, [r2]
   11d24:	ldrb	r2, [r5, #2]
   11d28:	cmp	r2, #0
   11d2c:	addeq	r4, r4, #1
   11d30:	sxtheq	r4, r4
   11d34:	b	11c24 <error@@Base+0x234>
   11d38:	ldr	r3, [pc, #128]	; 11dc0 <error@@Base+0x3d0>
   11d3c:	ldr	r3, [r5, r3]
   11d40:	ldrb	r7, [r3]
   11d44:	cmp	r7, #0
   11d48:	bne	11d94 <error@@Base+0x3a4>
   11d4c:	ldr	r3, [sp, #8]
   11d50:	str	r7, [r3]
   11d54:	add	sp, sp, #20
   11d58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d5c:	ldr	r3, [r1, #8]
   11d60:	cmp	r3, #0
   11d64:	beq	11cdc <error@@Base+0x2ec>
   11d68:	ldrb	r2, [r5, #2]
   11d6c:	cmp	r2, #0
   11d70:	bne	11cdc <error@@Base+0x2ec>
   11d74:	ldrb	r2, [r3]
   11d78:	cmp	r2, #0
   11d7c:	bne	11d9c <error@@Base+0x3ac>
   11d80:	mov	r2, #1
   11d84:	strb	r2, [r3]
   11d88:	ldr	r3, [sp, #8]
   11d8c:	ldr	r3, [r3]
   11d90:	b	11c24 <error@@Base+0x234>
   11d94:	ldr	r0, [sp, #12]
   11d98:	bl	11988 <getc@plt+0xf3c>
   11d9c:	ldr	r0, [pc, #32]	; 11dc4 <error@@Base+0x3d4>
   11da0:	mov	r1, r5
   11da4:	add	r0, pc, r0
   11da8:	bl	11aa0 <error@@Base+0xb0>
   11dac:	andeq	r1, r1, ip, lsr r4
   11db0:	strheq	r0, [r0], -ip
   11db4:			; <UNDEFINED> instruction: 0xfffffe98
   11db8:	andeq	r0, r0, ip, asr sl
   11dbc:	andeq	r0, r0, r4, lsl #19
   11dc0:	muleq	r0, r4, r0
   11dc4:	ldrdeq	r0, [r0], -r4
   11dc8:	ldr	ip, [pc, #60]	; 11e0c <error@@Base+0x41c>
   11dcc:	push	{lr}		; (str lr, [sp, #-4]!)
   11dd0:	add	ip, pc, ip
   11dd4:	ldr	r2, [pc, #52]	; 11e10 <error@@Base+0x420>
   11dd8:	ldr	lr, [pc, #52]	; 11e14 <error@@Base+0x424>
   11ddc:	sub	sp, sp, #12
   11de0:	mov	r3, r0
   11de4:	ldr	lr, [ip, lr]
   11de8:	ldr	r0, [ip, r2]
   11dec:	str	r1, [sp]
   11df0:	ldr	r1, [pc, #32]	; 11e18 <error@@Base+0x428>
   11df4:	ldr	r2, [lr]
   11df8:	add	r1, pc, r1
   11dfc:	ldr	r0, [r0]
   11e00:	bl	109f8 <fprintf@plt>
   11e04:	add	sp, sp, #12
   11e08:	pop	{pc}		; (ldr pc, [sp], #4)
   11e0c:	andeq	r1, r1, r8, lsr #4
   11e10:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   11e14:	strheq	r0, [r0], -ip
   11e18:	andeq	r0, r0, ip, lsr #16
   11e1c:	push	{r4, r5, r6, lr}
   11e20:	mov	r4, r0
   11e24:	uxtb	r6, r1
   11e28:	mov	r0, #1
   11e2c:	mov	r1, #16
   11e30:	mov	r5, r2
   11e34:	bl	11a48 <error@@Base+0x58>
   11e38:	strb	r6, [r0, #8]
   11e3c:	str	r5, [r0, #12]
   11e40:	mov	r1, r0
   11e44:	mov	r0, r4
   11e48:	pop	{r4, r5, r6, lr}
   11e4c:	b	110d0 <getc@plt+0x684>
   11e50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e54:	sub	sp, sp, #132	; 0x84
   11e58:	ldrb	r3, [r2]
   11e5c:	ldr	r6, [pc, #936]	; 1220c <error@@Base+0x81c>
   11e60:	str	r2, [sp, #16]
   11e64:	adds	r3, r3, #0
   11e68:	movne	r3, #1
   11e6c:	cmp	r1, #0
   11e70:	movne	r3, #0
   11e74:	cmp	r3, #0
   11e78:	str	r0, [sp, #4]
   11e7c:	add	r6, pc, r6
   11e80:	bne	121f8 <error@@Base+0x808>
   11e84:	ldr	r3, [sp, #4]
   11e88:	mov	r0, r1
   11e8c:	ldr	r1, [pc, #892]	; 12210 <error@@Base+0x820>
   11e90:	ldr	r3, [r3, #4]
   11e94:	add	r1, pc, r1
   11e98:	str	r3, [sp, #20]
   11e9c:	bl	11b00 <error@@Base+0x110>
   11ea0:	ldr	r3, [sp, #16]
   11ea4:	ldrb	r3, [r3]
   11ea8:	cmp	r3, #0
   11eac:	mov	r7, r0
   11eb0:	bne	12138 <error@@Base+0x748>
   11eb4:	ldr	r2, [sp, #16]
   11eb8:	mov	r0, r7
   11ebc:	ldr	r3, [r2, #4]
   11ec0:	ldrb	fp, [r2, #1]
   11ec4:	mov	r4, r3
   11ec8:	bl	10a4c <getc@plt>
   11ecc:	cmp	r4, #0
   11ed0:	mov	r2, r4
   11ed4:	moveq	r2, #94	; 0x5e
   11ed8:	str	r2, [sp, #12]
   11edc:	cmn	r0, #1
   11ee0:	beq	11fa8 <error@@Base+0x5b8>
   11ee4:	ldr	r3, [pc, #808]	; 12214 <error@@Base+0x824>
   11ee8:	ldr	r3, [r6, r3]
   11eec:	str	r3, [sp]
   11ef0:	ldrsb	r4, [r3, r0]
   11ef4:	cmp	r4, #0
   11ef8:	ble	121e0 <error@@Base+0x7f0>
   11efc:	add	r3, sp, #25
   11f00:	mov	r6, #0
   11f04:	str	r3, [sp, #8]
   11f08:	add	sl, sp, #28
   11f0c:	add	r9, sp, #24
   11f10:	mov	r8, #4
   11f14:	b	11f28 <error@@Base+0x538>
   11f18:	ldr	r3, [sp]
   11f1c:	ldrsb	r4, [r3, r0]
   11f20:	cmp	r4, #0
   11f24:	ble	121e0 <error@@Base+0x7f0>
   11f28:	cmp	r4, #1
   11f2c:	strb	r0, [sp, #24]
   11f30:	beq	11f54 <error@@Base+0x564>
   11f34:	sub	r5, r4, #1
   11f38:	mov	r2, r5
   11f3c:	mov	r3, r7
   11f40:	mov	r1, #1
   11f44:	ldr	r0, [sp, #8]
   11f48:	bl	10980 <fread@plt>
   11f4c:	cmp	r5, r0
   11f50:	bne	121ec <error@@Base+0x7fc>
   11f54:	mov	r2, sl
   11f58:	mov	r1, r8
   11f5c:	mov	r0, r9
   11f60:	bl	1098c <utf8proc_iterate@plt>
   11f64:	cmp	r0, r4
   11f68:	bne	121d8 <error@@Base+0x7e8>
   11f6c:	cmp	fp, #0
   11f70:	ldr	r2, [sp, #28]
   11f74:	beq	11f88 <error@@Base+0x598>
   11f78:	ldr	r3, [sp, #12]
   11f7c:	cmp	r2, r3
   11f80:	moveq	r6, #1
   11f84:	beq	11f98 <error@@Base+0x5a8>
   11f88:	mov	r1, r6
   11f8c:	ldr	r0, [sp, #4]
   11f90:	bl	11e1c <error@@Base+0x42c>
   11f94:	mov	r6, #0
   11f98:	mov	r0, r7
   11f9c:	bl	10a4c <getc@plt>
   11fa0:	cmn	r0, #1
   11fa4:	bne	11f18 <error@@Base+0x528>
   11fa8:	mov	r0, r7
   11fac:	bl	11894 <getc@plt+0xe48>
   11fb0:	ldr	r3, [sp, #16]
   11fb4:	ldrb	r3, [r3, #9]
   11fb8:	cmp	r3, #0
   11fbc:	beq	120f0 <error@@Base+0x700>
   11fc0:	ldr	r3, [sp, #20]
   11fc4:	cmp	r3, #0
   11fc8:	ldreq	r3, [sp, #4]
   11fcc:	ldrne	r6, [r3, #4]
   11fd0:	ldreq	r6, [r3]
   11fd4:	cmp	r6, #0
   11fd8:	beq	120f0 <error@@Base+0x700>
   11fdc:	mov	r5, r6
   11fe0:	mov	r7, #32
   11fe4:	b	1200c <error@@Base+0x61c>
   11fe8:	cmp	r4, #11
   11fec:	bcs	12038 <error@@Base+0x648>
   11ff0:	cmp	r4, #9
   11ff4:	beq	12038 <error@@Base+0x648>
   11ff8:	cmp	r4, #10
   11ffc:	bne	12028 <error@@Base+0x638>
   12000:	ldr	r5, [r5, #4]
   12004:	cmp	r5, #0
   12008:	beq	12048 <error@@Base+0x658>
   1200c:	ldr	r4, [r5, #12]
   12010:	mov	r0, r4
   12014:	bl	10908 <utf8proc_get_property@plt>
   12018:	cmp	r4, #13
   1201c:	bls	11fe8 <error@@Base+0x5f8>
   12020:	cmp	r4, #160	; 0xa0
   12024:	beq	12038 <error@@Base+0x648>
   12028:	ldrsh	r3, [r0]
   1202c:	sub	r3, r3, #23
   12030:	cmp	r3, #2
   12034:	bhi	12000 <error@@Base+0x610>
   12038:	str	r7, [r5, #12]
   1203c:	ldr	r5, [r5, #4]
   12040:	cmp	r5, #0
   12044:	bne	1200c <error@@Base+0x61c>
   12048:	ldr	r7, [sp, #4]
   1204c:	b	120ac <error@@Base+0x6bc>
   12050:	cmp	r3, #10
   12054:	movne	r2, #0
   12058:	andeq	r2, r2, #1
   1205c:	cmp	r2, #0
   12060:	beq	120e0 <error@@Base+0x6f0>
   12064:	cmp	r4, #0
   12068:	moveq	r3, #0
   1206c:	andne	r3, r5, #1
   12070:	cmp	r3, #0
   12074:	beq	12090 <error@@Base+0x6a0>
   12078:	ldr	r3, [r4, #12]
   1207c:	cmp	r3, #32
   12080:	ldrbeq	r3, [r4, #8]
   12084:	ldrbeq	r2, [r6, #8]
   12088:	orreq	r3, r3, r2
   1208c:	strbeq	r3, [r4, #8]
   12090:	mov	r1, r6
   12094:	mov	r0, r7
   12098:	bl	111b4 <getc@plt+0x768>
   1209c:	mov	r0, r6
   120a0:	bl	108fc <free@plt>
   120a4:	subs	r6, r4, #0
   120a8:	beq	120f0 <error@@Base+0x700>
   120ac:	ldr	r3, [r6, #12]
   120b0:	ldr	r4, [r6, #4]
   120b4:	cmp	r3, #32
   120b8:	eor	r2, r5, #1
   120bc:	bne	12050 <error@@Base+0x660>
   120c0:	cmp	r4, #0
   120c4:	orreq	r2, r2, #1
   120c8:	cmp	r2, #0
   120cc:	bne	12064 <error@@Base+0x674>
   120d0:	ldr	r2, [r4, #12]
   120d4:	cmp	r2, #10
   120d8:	cmpne	r2, #32
   120dc:	beq	12064 <error@@Base+0x674>
   120e0:	subs	r5, r3, #10
   120e4:	movne	r5, #1
   120e8:	subs	r6, r4, #0
   120ec:	bne	120ac <error@@Base+0x6bc>
   120f0:	ldr	r3, [sp, #16]
   120f4:	ldrb	r3, [r3, #10]
   120f8:	cmp	r3, #0
   120fc:	beq	12130 <error@@Base+0x740>
   12100:	ldr	r3, [sp, #20]
   12104:	cmp	r3, #0
   12108:	ldreq	r3, [sp, #4]
   1210c:	ldrne	r4, [r3, #4]
   12110:	ldreq	r4, [r3]
   12114:	b	12128 <error@@Base+0x738>
   12118:	ldr	r0, [r4, #12]
   1211c:	bl	10950 <utf8proc_tolower@plt>
   12120:	str	r0, [r4, #12]
   12124:	ldr	r4, [r4, #4]
   12128:	cmp	r4, #0
   1212c:	bne	12118 <error@@Base+0x728>
   12130:	add	sp, sp, #132	; 0x84
   12134:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12138:	add	r5, sp, #28
   1213c:	mov	r0, r5
   12140:	mov	r2, r7
   12144:	mov	r1, #99	; 0x63
   12148:	bl	10914 <fgets@plt>
   1214c:	cmp	r0, #0
   12150:	beq	121c0 <error@@Base+0x7d0>
   12154:	ldr	r1, [pc, #188]	; 12218 <error@@Base+0x828>
   12158:	mov	r2, #51	; 0x33
   1215c:	add	r1, pc, r1
   12160:	mov	r0, r5
   12164:	bl	10a34 <strncmp@plt>
   12168:	subs	r4, r0, #0
   1216c:	bne	121c0 <error@@Base+0x7d0>
   12170:	ldr	r9, [pc, #164]	; 1221c <error@@Base+0x82c>
   12174:	mov	r8, #99	; 0x63
   12178:	add	r9, pc, r9
   1217c:	mov	r2, r7
   12180:	mov	r1, r8
   12184:	mov	r0, r5
   12188:	bl	10914 <fgets@plt>
   1218c:	cmp	r0, #0
   12190:	beq	121b8 <error@@Base+0x7c8>
   12194:	mov	r1, r9
   12198:	mov	r0, r5
   1219c:	bl	108d8 <strcmp@plt>
   121a0:	cmp	r0, #0
   121a4:	bne	1217c <error@@Base+0x78c>
   121a8:	add	r4, r4, #1
   121ac:	sxth	r4, r4
   121b0:	cmp	r4, #1
   121b4:	ble	1217c <error@@Base+0x78c>
   121b8:	mov	r3, #1
   121bc:	b	121cc <error@@Base+0x7dc>
   121c0:	mov	r0, r7
   121c4:	bl	10938 <rewind@plt>
   121c8:	mov	r3, #0
   121cc:	ldr	r2, [sp, #16]
   121d0:	strb	r3, [r2, #11]
   121d4:	b	11eb4 <error@@Base+0x4c4>
   121d8:	bl	10a1c <utf8proc_errmsg@plt>
   121dc:	bl	119f0 <error@@Base>
   121e0:	ldr	r0, [pc, #56]	; 12220 <error@@Base+0x830>
   121e4:	add	r0, pc, r0
   121e8:	bl	119f0 <error@@Base>
   121ec:	ldr	r0, [pc, #48]	; 12224 <error@@Base+0x834>
   121f0:	add	r0, pc, r0
   121f4:	bl	119f0 <error@@Base>
   121f8:	ldr	r1, [pc, #40]	; 12228 <error@@Base+0x838>
   121fc:	ldr	r0, [pc, #40]	; 1222c <error@@Base+0x83c>
   12200:	add	r1, pc, r1
   12204:	add	r0, pc, r0
   12208:	bl	11aa0 <error@@Base+0xb0>
   1220c:	andeq	r1, r1, ip, ror r1
   12210:	andeq	r0, r0, r4, lsl r8
   12214:	andeq	r0, r0, r4, asr #1
   12218:	andeq	r0, r0, r0, asr r5
   1221c:	andeq	r0, r0, ip, ror #10
   12220:	andeq	r0, r0, r8, lsr r5
   12224:	andeq	r0, r0, r4, asr #10
   12228:	andeq	r0, r0, ip, lsl #9
   1222c:	muleq	r0, r4, r4
   12230:	push	{r4, lr}
   12234:	bl	10920 <utf8proc_encode_char@plt>
   12238:	cmp	r0, #0
   1223c:	ble	12248 <error@@Base+0x858>
   12240:	sxtb	r0, r0
   12244:	pop	{r4, pc}
   12248:	ldr	r0, [pc, #4]	; 12254 <error@@Base+0x864>
   1224c:	add	r0, pc, r0
   12250:	bl	119f0 <error@@Base>
   12254:	andeq	r0, r0, r0, lsl #10
   12258:	push	{r4, r5, r6, r7, r8, lr}
   1225c:	uxtb	r4, r0
   12260:	cmp	r4, #0
   12264:	mov	r6, r1
   12268:	mov	r8, r2
   1226c:	uxtb	r5, r3
   12270:	moveq	r7, r4
   12274:	bne	122ec <error@@Base+0x8fc>
   12278:	cmp	r6, #10
   1227c:	beq	122cc <error@@Base+0x8dc>
   12280:	mov	r0, r6
   12284:	bl	10908 <utf8proc_get_property@plt>
   12288:	cmp	r6, #32
   1228c:	beq	12304 <error@@Base+0x914>
   12290:	ldrh	r3, [r0]
   12294:	cmp	r3, #29
   12298:	bhi	122ac <error@@Base+0x8bc>
   1229c:	mov	r1, #1
   122a0:	ldr	r2, [pc, #192]	; 12368 <error@@Base+0x978>
   122a4:	ands	r3, r2, r1, lsl r3
   122a8:	bne	12304 <error@@Base+0x914>
   122ac:	cmp	r6, #255	; 0xff
   122b0:	bls	12350 <error@@Base+0x960>
   122b4:	ldr	r1, [pc, #176]	; 1236c <error@@Base+0x97c>
   122b8:	mov	r2, r6
   122bc:	add	r0, r8, r4
   122c0:	add	r1, pc, r1
   122c4:	pop	{r4, r5, r6, r7, r8, lr}
   122c8:	b	10a10 <sprintf@plt>
   122cc:	ldr	r1, [pc, #156]	; 12370 <error@@Base+0x980>
   122d0:	cmp	r5, #0
   122d4:	add	r1, pc, r1
   122d8:	add	r0, r8, r4
   122dc:	ldreq	r1, [pc, #144]	; 12374 <error@@Base+0x984>
   122e0:	addeq	r1, pc, r1
   122e4:	pop	{r4, r5, r6, r7, r8, lr}
   122e8:	b	10a10 <sprintf@plt>
   122ec:	mov	r1, r2
   122f0:	mov	r0, #94	; 0x5e
   122f4:	bl	12230 <error@@Base+0x840>
   122f8:	mov	r4, r0
   122fc:	sxth	r7, r0
   12300:	b	12278 <error@@Base+0x888>
   12304:	mov	r0, r6
   12308:	bl	109e0 <utf8proc_category@plt>
   1230c:	sub	r0, r0, #6
   12310:	cmp	r0, #2
   12314:	bhi	12330 <error@@Base+0x940>
   12318:	add	r1, r8, r4
   1231c:	ldr	r0, [pc, #84]	; 12378 <error@@Base+0x988>
   12320:	bl	12230 <error@@Base+0x840>
   12324:	add	r7, r0, r7
   12328:	sxth	r7, r7
   1232c:	mov	r4, r7
   12330:	add	r1, r8, r4
   12334:	mov	r0, r6
   12338:	bl	12230 <error@@Base+0x840>
   1233c:	mov	r3, #0
   12340:	add	r0, r0, r7
   12344:	sxth	r0, r0
   12348:	strb	r3, [r8, r0]
   1234c:	pop	{r4, r5, r6, r7, r8, pc}
   12350:	ldr	r1, [pc, #36]	; 1237c <error@@Base+0x98c>
   12354:	mov	r2, r6
   12358:	add	r0, r8, r4
   1235c:	add	r1, pc, r1
   12360:	pop	{r4, r5, r6, r7, r8, lr}
   12364:	b	10a10 <sprintf@plt>
   12368:	ldrshtcs	pc, [pc], #-254	; <UNPREDICTABLE>
   1236c:			; <UNDEFINED> instruction: 0x000004b4
   12370:	muleq	r0, r0, r4
   12374:	andeq	r0, r0, r4, lsr #5
   12378:	andeq	r2, r0, ip, asr #11
   1237c:	andeq	r0, r0, r0, lsl r4
   12380:	push	{r4, r5, r6, r7, lr}
   12384:	mov	r7, r0
   12388:	mov	r0, r1
   1238c:	ldr	r1, [pc, #184]	; 1244c <error@@Base+0xa5c>
   12390:	sub	sp, sp, #20
   12394:	add	r1, pc, r1
   12398:	mov	r5, r2
   1239c:	bl	11b00 <error@@Base+0x110>
   123a0:	cmp	r5, #0
   123a4:	mov	r6, r0
   123a8:	beq	123fc <error@@Base+0xa0c>
   123ac:	mov	r3, r0
   123b0:	ldr	r4, [pc, #152]	; 12450 <error@@Base+0xa60>
   123b4:	ldr	r0, [pc, #152]	; 12454 <error@@Base+0xa64>
   123b8:	add	r4, pc, r4
   123bc:	mov	r2, #55	; 0x37
   123c0:	mov	r1, #1
   123c4:	add	r0, pc, r0
   123c8:	bl	10968 <fwrite@plt>
   123cc:	mov	r3, r6
   123d0:	mov	r2, #55	; 0x37
   123d4:	mov	r1, #1
   123d8:	mov	r0, r4
   123dc:	bl	10968 <fwrite@plt>
   123e0:	mov	r0, r6
   123e4:	blx	r5
   123e8:	mov	r3, r6
   123ec:	mov	r0, r4
   123f0:	mov	r2, #55	; 0x37
   123f4:	mov	r1, #1
   123f8:	bl	10968 <fwrite@plt>
   123fc:	ldr	r4, [r7]
   12400:	cmp	r4, #0
   12404:	addne	r5, sp, #4
   12408:	movne	r7, #0
   1240c:	beq	1243c <error@@Base+0xa4c>
   12410:	ldr	r1, [r4, #12]
   12414:	ldrb	r0, [r4, #8]
   12418:	mov	r3, r7
   1241c:	mov	r2, r5
   12420:	bl	12258 <error@@Base+0x868>
   12424:	mov	r1, r6
   12428:	mov	r0, r5
   1242c:	bl	10a28 <fputs@plt>
   12430:	ldr	r4, [r4, #4]
   12434:	cmp	r4, #0
   12438:	bne	12410 <error@@Base+0xa20>
   1243c:	mov	r0, r6
   12440:	bl	11894 <getc@plt+0xe48>
   12444:	add	sp, sp, #20
   12448:	pop	{r4, r5, r6, r7, pc}
   1244c:	andeq	r0, r0, r8, ror #7
   12450:	andeq	r0, r0, ip, lsr #6
   12454:	andeq	r0, r0, r8, ror #5
   12458:	push	{r4, r5, r6, r7, r8, r9, lr}
   1245c:	mov	r5, #0
   12460:	ldrb	r3, [r1]
   12464:	sub	sp, sp, #12
   12468:	cmp	r3, r5
   1246c:	str	r5, [sp, #4]
   12470:	movne	r4, r1
   12474:	movne	r6, r0
   12478:	addne	r8, sp, #4
   1247c:	mvnne	r7, #0
   12480:	bne	1249c <error@@Base+0xaac>
   12484:	b	124c8 <error@@Base+0xad8>
   12488:	ldr	r2, [sp, #4]
   1248c:	bl	11e1c <error@@Base+0x42c>
   12490:	ldrb	r3, [r4, r9]!
   12494:	cmp	r3, #0
   12498:	beq	124c8 <error@@Base+0xad8>
   1249c:	mov	r1, r7
   124a0:	mov	r2, r8
   124a4:	mov	r0, r4
   124a8:	bl	1098c <utf8proc_iterate@plt>
   124ac:	mov	r1, r5
   124b0:	subs	r9, r0, #0
   124b4:	mov	r0, r6
   124b8:	bgt	12488 <error@@Base+0xa98>
   124bc:	mov	r0, #0
   124c0:	add	sp, sp, #12
   124c4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   124c8:	mov	r0, #1
   124cc:	add	sp, sp, #12
   124d0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   124d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   124d8:	mov	r7, r0
   124dc:	ldr	r6, [pc, #72]	; 1252c <error@@Base+0xb3c>
   124e0:	ldr	r5, [pc, #72]	; 12530 <error@@Base+0xb40>
   124e4:	add	r6, pc, r6
   124e8:	add	r5, pc, r5
   124ec:	sub	r6, r6, r5
   124f0:	mov	r8, r1
   124f4:	mov	r9, r2
   124f8:	bl	108ac <calloc@plt-0x20>
   124fc:	asrs	r6, r6, #2
   12500:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12504:	mov	r4, #0
   12508:	add	r4, r4, #1
   1250c:	ldr	r3, [r5], #4
   12510:	mov	r2, r9
   12514:	mov	r1, r8
   12518:	mov	r0, r7
   1251c:	blx	r3
   12520:	cmp	r6, r4
   12524:	bne	12508 <error@@Base+0xb18>
   12528:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1252c:	andeq	r0, r1, r4, lsl sl
   12530:	andeq	r0, r1, ip, lsl #20
   12534:	bx	lr

Disassembly of section .fini:

00012538 <.fini>:
   12538:	push	{r3, lr}
   1253c:	pop	{r3, pc}
