
../repos/inetutils/src/inetd:     file format elf32-littlearm


Disassembly of section .init:

00011704 <.init>:
   11704:	push	{r3, lr}
   11708:	bl	11c70 <__assert_fail@plt+0x48>
   1170c:	pop	{r3, pc}

Disassembly of section .plt:

00011710 <calloc@plt-0x14>:
   11710:	push	{lr}		; (str lr, [sp, #-4]!)
   11714:	ldr	lr, [pc, #4]	; 11720 <calloc@plt-0x4>
   11718:	add	lr, pc, lr
   1171c:	ldr	pc, [lr, #8]!
   11720:	andeq	ip, r1, r0, ror #17

00011724 <calloc@plt>:
   11724:	add	ip, pc, #0, 12
   11728:	add	ip, ip, #28, 20	; 0x1c000
   1172c:	ldr	pc, [ip, #2272]!	; 0x8e0

00011730 <fputs_unlocked@plt>:
   11730:	add	ip, pc, #0, 12
   11734:	add	ip, ip, #28, 20	; 0x1c000
   11738:	ldr	pc, [ip, #2264]!	; 0x8d8

0001173c <__getdelim@plt>:
   1173c:	add	ip, pc, #0, 12
   11740:	add	ip, ip, #28, 20	; 0x1c000
   11744:	ldr	pc, [ip, #2256]!	; 0x8d0

00011748 <getpwnam@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #28, 20	; 0x1c000
   11750:	ldr	pc, [ip, #2248]!	; 0x8c8

00011754 <strcmp@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #28, 20	; 0x1c000
   1175c:	ldr	pc, [ip, #2240]!	; 0x8c0

00011760 <strtol@plt>:
   11760:	add	ip, pc, #0, 12
   11764:	add	ip, ip, #28, 20	; 0x1c000
   11768:	ldr	pc, [ip, #2232]!	; 0x8b8

0001176c <setsockopt@plt>:
   1176c:	add	ip, pc, #0, 12
   11770:	add	ip, ip, #28, 20	; 0x1c000
   11774:	ldr	pc, [ip, #2224]!	; 0x8b0

00011778 <strcspn@plt>:
   11778:	add	ip, pc, #0, 12
   1177c:	add	ip, ip, #28, 20	; 0x1c000
   11780:	ldr	pc, [ip, #2216]!	; 0x8a8

00011784 <pause@plt>:
   11784:	add	ip, pc, #0, 12
   11788:	add	ip, ip, #28, 20	; 0x1c000
   1178c:	ldr	pc, [ip, #2208]!	; 0x8a0

00011790 <printf@plt>:
   11790:	add	ip, pc, #0, 12
   11794:	add	ip, ip, #28, 20	; 0x1c000
   11798:	ldr	pc, [ip, #2200]!	; 0x898

0001179c <read@plt>:
   1179c:	add	ip, pc, #0, 12
   117a0:	add	ip, ip, #28, 20	; 0x1c000
   117a4:	ldr	pc, [ip, #2192]!	; 0x890

000117a8 <getprotobyname@plt>:
   117a8:	add	ip, pc, #0, 12
   117ac:	add	ip, ip, #28, 20	; 0x1c000
   117b0:	ldr	pc, [ip, #2184]!	; 0x888

000117b4 <sigprocmask@plt>:
   117b4:	add	ip, pc, #0, 12
   117b8:	add	ip, ip, #28, 20	; 0x1c000
   117bc:	ldr	pc, [ip, #2176]!	; 0x880

000117c0 <memmove@plt>:
   117c0:	add	ip, pc, #0, 12
   117c4:	add	ip, ip, #28, 20	; 0x1c000
   117c8:	ldr	pc, [ip, #2168]!	; 0x878

000117cc <strchrnul@plt>:
   117cc:	add	ip, pc, #0, 12
   117d0:	add	ip, ip, #28, 20	; 0x1c000
   117d4:	ldr	pc, [ip, #2160]!	; 0x870

000117d8 <free@plt>:
   117d8:	add	ip, pc, #0, 12
   117dc:	add	ip, ip, #28, 20	; 0x1c000
   117e0:	ldr	pc, [ip, #2152]!	; 0x868

000117e4 <gai_strerror@plt>:
   117e4:	add	ip, pc, #0, 12
   117e8:	add	ip, ip, #28, 20	; 0x1c000
   117ec:	ldr	pc, [ip, #2144]!	; 0x860

000117f0 <strndup@plt>:
   117f0:	add	ip, pc, #0, 12
   117f4:	add	ip, ip, #28, 20	; 0x1c000
   117f8:	ldr	pc, [ip, #2136]!	; 0x858

000117fc <_exit@plt>:
   117fc:	add	ip, pc, #0, 12
   11800:	add	ip, ip, #28, 20	; 0x1c000
   11804:	ldr	pc, [ip, #2128]!	; 0x850

00011808 <memcpy@plt>:
   11808:	add	ip, pc, #0, 12
   1180c:	add	ip, ip, #28, 20	; 0x1c000
   11810:	ldr	pc, [ip, #2120]!	; 0x848

00011814 <signal@plt>:
   11814:	add	ip, pc, #0, 12
   11818:	add	ip, ip, #28, 20	; 0x1c000
   1181c:	ldr	pc, [ip, #2112]!	; 0x840

00011820 <time@plt>:
   11820:	add	ip, pc, #0, 12
   11824:	add	ip, ip, #28, 20	; 0x1c000
   11828:	ldr	pc, [ip, #2104]!	; 0x838

0001182c <fwrite_unlocked@plt>:
   1182c:	add	ip, pc, #0, 12
   11830:	add	ip, ip, #28, 20	; 0x1c000
   11834:	ldr	pc, [ip, #2096]!	; 0x830

00011838 <memcmp@plt>:
   11838:	add	ip, pc, #0, 12
   1183c:	add	ip, ip, #28, 20	; 0x1c000
   11840:	ldr	pc, [ip, #2088]!	; 0x828

00011844 <select@plt>:
   11844:	add	ip, pc, #0, 12
   11848:	add	ip, ip, #28, 20	; 0x1c000
   1184c:	ldr	pc, [ip, #2080]!	; 0x820

00011850 <sleep@plt>:
   11850:	add	ip, pc, #0, 12
   11854:	add	ip, ip, #28, 20	; 0x1c000
   11858:	ldr	pc, [ip, #2072]!	; 0x818

0001185c <ctime@plt>:
   1185c:	add	ip, pc, #0, 12
   11860:	add	ip, ip, #28, 20	; 0x1c000
   11864:	ldr	pc, [ip, #2064]!	; 0x810

00011868 <recvfrom@plt>:
   11868:	add	ip, pc, #0, 12
   1186c:	add	ip, ip, #28, 20	; 0x1c000
   11870:	ldr	pc, [ip, #2056]!	; 0x808

00011874 <strdup@plt>:
   11874:	add	ip, pc, #0, 12
   11878:	add	ip, ip, #28, 20	; 0x1c000
   1187c:	ldr	pc, [ip, #2048]!	; 0x800

00011880 <alarm@plt>:
   11880:	add	ip, pc, #0, 12
   11884:	add	ip, ip, #28, 20	; 0x1c000
   11888:	ldr	pc, [ip, #2040]!	; 0x7f8

0001188c <sysconf@plt>:
   1188c:	add	ip, pc, #0, 12
   11890:	add	ip, ip, #28, 20	; 0x1c000
   11894:	ldr	pc, [ip, #2032]!	; 0x7f0

00011898 <dup2@plt>:
   11898:	add	ip, pc, #0, 12
   1189c:	add	ip, ip, #28, 20	; 0x1c000
   118a0:	ldr	pc, [ip, #2024]!	; 0x7e8

000118a4 <realloc@plt>:
   118a4:	add	ip, pc, #0, 12
   118a8:	add	ip, ip, #28, 20	; 0x1c000
   118ac:	ldr	pc, [ip, #2016]!	; 0x7e0

000118b0 <initgroups@plt>:
   118b0:	add	ip, pc, #0, 12
   118b4:	add	ip, ip, #28, 20	; 0x1c000
   118b8:	ldr	pc, [ip, #2008]!	; 0x7d8

000118bc <chdir@plt>:
   118bc:	add	ip, pc, #0, 12
   118c0:	add	ip, ip, #28, 20	; 0x1c000
   118c4:	ldr	pc, [ip, #2000]!	; 0x7d0

000118c8 <strcasecmp@plt>:
   118c8:	add	ip, pc, #0, 12
   118cc:	add	ip, ip, #28, 20	; 0x1c000
   118d0:	ldr	pc, [ip, #1992]!	; 0x7c8

000118d4 <funlockfile@plt>:
   118d4:	add	ip, pc, #0, 12
   118d8:	add	ip, ip, #28, 20	; 0x1c000
   118dc:	ldr	pc, [ip, #1984]!	; 0x7c0

000118e0 <accept@plt>:
   118e0:	add	ip, pc, #0, 12
   118e4:	add	ip, ip, #28, 20	; 0x1c000
   118e8:	ldr	pc, [ip, #1976]!	; 0x7b8

000118ec <sigaction@plt>:
   118ec:	add	ip, pc, #0, 12
   118f0:	add	ip, ip, #28, 20	; 0x1c000
   118f4:	ldr	pc, [ip, #1968]!	; 0x7b0

000118f8 <fwrite@plt>:
   118f8:	add	ip, pc, #0, 12
   118fc:	add	ip, ip, #28, 20	; 0x1c000
   11900:	ldr	pc, [ip, #1960]!	; 0x7a8

00011904 <strcat@plt>:
   11904:	add	ip, pc, #0, 12
   11908:	add	ip, ip, #28, 20	; 0x1c000
   1190c:	ldr	pc, [ip, #1952]!	; 0x7a0

00011910 <gettimeofday@plt>:
   11910:	add	ip, pc, #0, 12
   11914:	add	ip, ip, #28, 20	; 0x1c000
   11918:	ldr	pc, [ip, #1944]!	; 0x798

0001191c <error@plt>:
   1191c:	add	ip, pc, #0, 12
   11920:	add	ip, ip, #28, 20	; 0x1c000
   11924:	ldr	pc, [ip, #1936]!	; 0x790

00011928 <opendir@plt>:
   11928:	add	ip, pc, #0, 12
   1192c:	add	ip, ip, #28, 20	; 0x1c000
   11930:	ldr	pc, [ip, #1928]!	; 0x788

00011934 <open64@plt>:
   11934:	add	ip, pc, #0, 12
   11938:	add	ip, ip, #28, 20	; 0x1c000
   1193c:	ldr	pc, [ip, #1920]!	; 0x780

00011940 <getenv@plt>:
   11940:	add	ip, pc, #0, 12
   11944:	add	ip, ip, #28, 20	; 0x1c000
   11948:	ldr	pc, [ip, #1912]!	; 0x778

0001194c <setgid@plt>:
   1194c:	add	ip, pc, #0, 12
   11950:	add	ip, ip, #28, 20	; 0x1c000
   11954:	ldr	pc, [ip, #1904]!	; 0x770

00011958 <malloc@plt>:
   11958:	add	ip, pc, #0, 12
   1195c:	add	ip, ip, #28, 20	; 0x1c000
   11960:	ldr	pc, [ip, #1896]!	; 0x768

00011964 <sigaddset@plt>:
   11964:	add	ip, pc, #0, 12
   11968:	add	ip, ip, #28, 20	; 0x1c000
   1196c:	ldr	pc, [ip, #1888]!	; 0x760

00011970 <__libc_start_main@plt>:
   11970:	add	ip, pc, #0, 12
   11974:	add	ip, ip, #28, 20	; 0x1c000
   11978:	ldr	pc, [ip, #1880]!	; 0x758

0001197c <strerror@plt>:
   1197c:	add	ip, pc, #0, 12
   11980:	add	ip, ip, #28, 20	; 0x1c000
   11984:	ldr	pc, [ip, #1872]!	; 0x750

00011988 <__ctype_tolower_loc@plt>:
   11988:	add	ip, pc, #0, 12
   1198c:	add	ip, ip, #28, 20	; 0x1c000
   11990:	ldr	pc, [ip, #1864]!	; 0x748

00011994 <__gmon_start__@plt>:
   11994:	add	ip, pc, #0, 12
   11998:	add	ip, ip, #28, 20	; 0x1c000
   1199c:	ldr	pc, [ip, #1856]!	; 0x740

000119a0 <mempcpy@plt>:
   119a0:	add	ip, pc, #0, 12
   119a4:	add	ip, ip, #28, 20	; 0x1c000
   119a8:	ldr	pc, [ip, #1848]!	; 0x738

000119ac <__ctype_b_loc@plt>:
   119ac:	add	ip, pc, #0, 12
   119b0:	add	ip, ip, #28, 20	; 0x1c000
   119b4:	ldr	pc, [ip, #1840]!	; 0x730

000119b8 <getpid@plt>:
   119b8:	add	ip, pc, #0, 12
   119bc:	add	ip, ip, #28, 20	; 0x1c000
   119c0:	ldr	pc, [ip, #1832]!	; 0x728

000119c4 <exit@plt>:
   119c4:	add	ip, pc, #0, 12
   119c8:	add	ip, ip, #28, 20	; 0x1c000
   119cc:	ldr	pc, [ip, #1824]!	; 0x720

000119d0 <strtoul@plt>:
   119d0:	add	ip, pc, #0, 12
   119d4:	add	ip, ip, #28, 20	; 0x1c000
   119d8:	ldr	pc, [ip, #1816]!	; 0x718

000119dc <strlen@plt>:
   119dc:	add	ip, pc, #0, 12
   119e0:	add	ip, ip, #28, 20	; 0x1c000
   119e4:	ldr	pc, [ip, #1808]!	; 0x710

000119e8 <setsid@plt>:
   119e8:	add	ip, pc, #0, 12
   119ec:	add	ip, ip, #28, 20	; 0x1c000
   119f0:	ldr	pc, [ip, #1800]!	; 0x708

000119f4 <strchr@plt>:
   119f4:	add	ip, pc, #0, 12
   119f8:	add	ip, ip, #28, 20	; 0x1c000
   119fc:	ldr	pc, [ip, #1792]!	; 0x700

00011a00 <setenv@plt>:
   11a00:	add	ip, pc, #0, 12
   11a04:	add	ip, ip, #28, 20	; 0x1c000
   11a08:	ldr	pc, [ip, #1784]!	; 0x6f8

00011a0c <fprintf@plt>:
   11a0c:	add	ip, pc, #0, 12
   11a10:	add	ip, ip, #28, 20	; 0x1c000
   11a14:	ldr	pc, [ip, #1776]!	; 0x6f0

00011a18 <execv@plt>:
   11a18:	add	ip, pc, #0, 12
   11a1c:	add	ip, ip, #28, 20	; 0x1c000
   11a20:	ldr	pc, [ip, #1768]!	; 0x6e8

00011a24 <__errno_location@plt>:
   11a24:	add	ip, pc, #0, 12
   11a28:	add	ip, ip, #28, 20	; 0x1c000
   11a2c:	ldr	pc, [ip, #1760]!	; 0x6e0

00011a30 <snprintf@plt>:
   11a30:	add	ip, pc, #0, 12
   11a34:	add	ip, ip, #28, 20	; 0x1c000
   11a38:	ldr	pc, [ip, #1752]!	; 0x6d8

00011a3c <strerror_r@plt>:
   11a3c:	add	ip, pc, #0, 12
   11a40:	add	ip, ip, #28, 20	; 0x1c000
   11a44:	ldr	pc, [ip, #1744]!	; 0x6d0

00011a48 <bind@plt>:
   11a48:	add	ip, pc, #0, 12
   11a4c:	add	ip, ip, #28, 20	; 0x1c000
   11a50:	ldr	pc, [ip, #1736]!	; 0x6c8

00011a54 <memset@plt>:
   11a54:	add	ip, pc, #0, 12
   11a58:	add	ip, ip, #28, 20	; 0x1c000
   11a5c:	ldr	pc, [ip, #1728]!	; 0x6c0

00011a60 <strncpy@plt>:
   11a60:	add	ip, pc, #0, 12
   11a64:	add	ip, ip, #28, 20	; 0x1c000
   11a68:	ldr	pc, [ip, #1720]!	; 0x6b8

00011a6c <sigsuspend@plt>:
   11a6c:	add	ip, pc, #0, 12
   11a70:	add	ip, ip, #28, 20	; 0x1c000
   11a74:	ldr	pc, [ip, #1712]!	; 0x6b0

00011a78 <wait3@plt>:
   11a78:	add	ip, pc, #0, 12
   11a7c:	add	ip, ip, #28, 20	; 0x1c000
   11a80:	ldr	pc, [ip, #1704]!	; 0x6a8

00011a84 <write@plt>:
   11a84:	add	ip, pc, #0, 12
   11a88:	add	ip, ip, #28, 20	; 0x1c000
   11a8c:	ldr	pc, [ip, #1696]!	; 0x6a0

00011a90 <memchr@plt>:
   11a90:	add	ip, pc, #0, 12
   11a94:	add	ip, ip, #28, 20	; 0x1c000
   11a98:	ldr	pc, [ip, #1688]!	; 0x698

00011a9c <fclose@plt>:
   11a9c:	add	ip, pc, #0, 12
   11aa0:	add	ip, ip, #28, 20	; 0x1c000
   11aa4:	ldr	pc, [ip, #1680]!	; 0x690

00011aa8 <sendto@plt>:
   11aa8:	add	ip, pc, #0, 12
   11aac:	add	ip, ip, #28, 20	; 0x1c000
   11ab0:	ldr	pc, [ip, #1672]!	; 0x688

00011ab4 <__overflow@plt>:
   11ab4:	add	ip, pc, #0, 12
   11ab8:	add	ip, ip, #28, 20	; 0x1c000
   11abc:	ldr	pc, [ip, #1664]!	; 0x680

00011ac0 <sigemptyset@plt>:
   11ac0:	add	ip, pc, #0, 12
   11ac4:	add	ip, ip, #28, 20	; 0x1c000
   11ac8:	ldr	pc, [ip, #1656]!	; 0x678

00011acc <fork@plt>:
   11acc:	add	ip, pc, #0, 12
   11ad0:	add	ip, ip, #28, 20	; 0x1c000
   11ad4:	ldr	pc, [ip, #1648]!	; 0x670

00011ad8 <getnameinfo@plt>:
   11ad8:	add	ip, pc, #0, 12
   11adc:	add	ip, ip, #28, 20	; 0x1c000
   11ae0:	ldr	pc, [ip, #1640]!	; 0x668

00011ae4 <strrchr@plt>:
   11ae4:	add	ip, pc, #0, 12
   11ae8:	add	ip, ip, #28, 20	; 0x1c000
   11aec:	ldr	pc, [ip, #1632]!	; 0x660

00011af0 <listen@plt>:
   11af0:	add	ip, pc, #0, 12
   11af4:	add	ip, ip, #28, 20	; 0x1c000
   11af8:	ldr	pc, [ip, #1624]!	; 0x658

00011afc <vfprintf@plt>:
   11afc:	add	ip, pc, #0, 12
   11b00:	add	ip, ip, #28, 20	; 0x1c000
   11b04:	ldr	pc, [ip, #1616]!	; 0x650

00011b08 <fputc@plt>:
   11b08:	add	ip, pc, #0, 12
   11b0c:	add	ip, ip, #28, 20	; 0x1c000
   11b10:	ldr	pc, [ip, #1608]!	; 0x648

00011b14 <syslog@plt>:
   11b14:	add	ip, pc, #0, 12
   11b18:	add	ip, ip, #28, 20	; 0x1c000
   11b1c:	ldr	pc, [ip, #1600]!	; 0x640

00011b20 <setuid@plt>:
   11b20:	add	ip, pc, #0, 12
   11b24:	add	ip, ip, #28, 20	; 0x1c000
   11b28:	ldr	pc, [ip, #1592]!	; 0x638

00011b2c <sprintf@plt>:
   11b2c:	add	ip, pc, #0, 12
   11b30:	add	ip, ip, #28, 20	; 0x1c000
   11b34:	ldr	pc, [ip, #1584]!	; 0x630

00011b38 <readdir64@plt>:
   11b38:	add	ip, pc, #0, 12
   11b3c:	add	ip, ip, #28, 20	; 0x1c000
   11b40:	ldr	pc, [ip, #1576]!	; 0x628

00011b44 <openlog@plt>:
   11b44:	add	ip, pc, #0, 12
   11b48:	add	ip, ip, #28, 20	; 0x1c000
   11b4c:	ldr	pc, [ip, #1568]!	; 0x620

00011b50 <getsockname@plt>:
   11b50:	add	ip, pc, #0, 12
   11b54:	add	ip, ip, #28, 20	; 0x1c000
   11b58:	ldr	pc, [ip, #1560]!	; 0x618

00011b5c <flockfile@plt>:
   11b5c:	add	ip, pc, #0, 12
   11b60:	add	ip, ip, #28, 20	; 0x1c000
   11b64:	ldr	pc, [ip, #1552]!	; 0x610

00011b68 <vsnprintf@plt>:
   11b68:	add	ip, pc, #0, 12
   11b6c:	add	ip, ip, #28, 20	; 0x1c000
   11b70:	ldr	pc, [ip, #1544]!	; 0x608

00011b74 <fopen64@plt>:
   11b74:	add	ip, pc, #0, 12
   11b78:	add	ip, ip, #28, 20	; 0x1c000
   11b7c:	ldr	pc, [ip, #1536]!	; 0x600

00011b80 <qsort@plt>:
   11b80:	add	ip, pc, #0, 12
   11b84:	add	ip, ip, #28, 20	; 0x1c000
   11b88:	ldr	pc, [ip, #1528]!	; 0x5f8

00011b8c <getpeername@plt>:
   11b8c:	add	ip, pc, #0, 12
   11b90:	add	ip, ip, #28, 20	; 0x1c000
   11b94:	ldr	pc, [ip, #1520]!	; 0x5f0

00011b98 <freeaddrinfo@plt>:
   11b98:	add	ip, pc, #0, 12
   11b9c:	add	ip, ip, #28, 20	; 0x1c000
   11ba0:	ldr	pc, [ip, #1512]!	; 0x5e8

00011ba4 <getaddrinfo@plt>:
   11ba4:	add	ip, pc, #0, 12
   11ba8:	add	ip, ip, #28, 20	; 0x1c000
   11bac:	ldr	pc, [ip, #1504]!	; 0x5e0

00011bb0 <socket@plt>:
   11bb0:	add	ip, pc, #0, 12
   11bb4:	add	ip, ip, #28, 20	; 0x1c000
   11bb8:	ldr	pc, [ip, #1496]!	; 0x5d8

00011bbc <__xstat64@plt>:
   11bbc:	add	ip, pc, #0, 12
   11bc0:	add	ip, ip, #28, 20	; 0x1c000
   11bc4:	ldr	pc, [ip, #1488]!	; 0x5d0

00011bc8 <unsetenv@plt>:
   11bc8:	add	ip, pc, #0, 12
   11bcc:	add	ip, ip, #28, 20	; 0x1c000
   11bd0:	ldr	pc, [ip, #1480]!	; 0x5c8

00011bd4 <strncmp@plt>:
   11bd4:	add	ip, pc, #0, 12
   11bd8:	add	ip, ip, #28, 20	; 0x1c000
   11bdc:	ldr	pc, [ip, #1472]!	; 0x5c0

00011be0 <abort@plt>:
   11be0:	add	ip, pc, #0, 12
   11be4:	add	ip, ip, #28, 20	; 0x1c000
   11be8:	ldr	pc, [ip, #1464]!	; 0x5b8

00011bec <recv@plt>:
   11bec:	add	ip, pc, #0, 12
   11bf0:	add	ip, ip, #28, 20	; 0x1c000
   11bf4:	ldr	pc, [ip, #1456]!	; 0x5b0

00011bf8 <close@plt>:
   11bf8:	add	ip, pc, #0, 12
   11bfc:	add	ip, ip, #28, 20	; 0x1c000
   11c00:	ldr	pc, [ip, #1448]!	; 0x5a8

00011c04 <closedir@plt>:
   11c04:	add	ip, pc, #0, 12
   11c08:	add	ip, ip, #28, 20	; 0x1c000
   11c0c:	ldr	pc, [ip, #1440]!	; 0x5a0

00011c10 <getgrnam@plt>:
   11c10:	add	ip, pc, #0, 12
   11c14:	add	ip, ip, #28, 20	; 0x1c000
   11c18:	ldr	pc, [ip, #1432]!	; 0x598

00011c1c <strspn@plt>:
   11c1c:	add	ip, pc, #0, 12
   11c20:	add	ip, ip, #28, 20	; 0x1c000
   11c24:	ldr	pc, [ip, #1424]!	; 0x590

00011c28 <__assert_fail@plt>:
   11c28:	add	ip, pc, #0, 12
   11c2c:	add	ip, ip, #28, 20	; 0x1c000
   11c30:	ldr	pc, [ip, #1416]!	; 0x588

Disassembly of section .text:

00011c34 <daemon@@Base-0x408c>:
   11c34:	mov	fp, #0
   11c38:	mov	lr, #0
   11c3c:	pop	{r1}		; (ldr r1, [sp], #4)
   11c40:	mov	r2, sp
   11c44:	push	{r2}		; (str r2, [sp, #-4]!)
   11c48:	push	{r0}		; (str r0, [sp, #-4]!)
   11c4c:	ldr	ip, [pc, #16]	; 11c64 <__assert_fail@plt+0x3c>
   11c50:	push	{ip}		; (str ip, [sp, #-4]!)
   11c54:	ldr	r0, [pc, #12]	; 11c68 <__assert_fail@plt+0x40>
   11c58:	ldr	r3, [pc, #12]	; 11c6c <__assert_fail@plt+0x44>
   11c5c:	bl	11970 <__libc_start_main@plt>
   11c60:	bl	11be0 <abort@plt>
   11c64:	andeq	ip, r1, ip, lsr r0
   11c68:	andeq	r4, r1, ip, asr lr
   11c6c:	ldrdeq	fp, [r1], -ip
   11c70:	ldr	r3, [pc, #20]	; 11c8c <__assert_fail@plt+0x64>
   11c74:	ldr	r2, [pc, #20]	; 11c90 <__assert_fail@plt+0x68>
   11c78:	add	r3, pc, r3
   11c7c:	ldr	r2, [r3, r2]
   11c80:	cmp	r2, #0
   11c84:	bxeq	lr
   11c88:	b	11994 <__gmon_start__@plt>
   11c8c:	andeq	ip, r1, r0, lsl #7
   11c90:			; <UNDEFINED> instruction: 0x000001bc
   11c94:	ldr	r0, [pc, #24]	; 11cb4 <__assert_fail@plt+0x8c>
   11c98:	ldr	r3, [pc, #24]	; 11cb8 <__assert_fail@plt+0x90>
   11c9c:	cmp	r3, r0
   11ca0:	bxeq	lr
   11ca4:	ldr	r3, [pc, #16]	; 11cbc <__assert_fail@plt+0x94>
   11ca8:	cmp	r3, #0
   11cac:	bxeq	lr
   11cb0:	bx	r3
   11cb4:	andeq	lr, r2, r8, lsr #7
   11cb8:	andeq	lr, r2, r8, lsr #7
   11cbc:	andeq	r0, r0, r0
   11cc0:	ldr	r0, [pc, #36]	; 11cec <__assert_fail@plt+0xc4>
   11cc4:	ldr	r1, [pc, #36]	; 11cf0 <__assert_fail@plt+0xc8>
   11cc8:	sub	r1, r1, r0
   11ccc:	asr	r1, r1, #2
   11cd0:	add	r1, r1, r1, lsr #31
   11cd4:	asrs	r1, r1, #1
   11cd8:	bxeq	lr
   11cdc:	ldr	r3, [pc, #16]	; 11cf4 <__assert_fail@plt+0xcc>
   11ce0:	cmp	r3, #0
   11ce4:	bxeq	lr
   11ce8:	bx	r3
   11cec:	andeq	lr, r2, r8, lsr #7
   11cf0:	andeq	lr, r2, r8, lsr #7
   11cf4:	andeq	r0, r0, r0
   11cf8:	push	{r4, lr}
   11cfc:	ldr	r4, [pc, #24]	; 11d1c <__assert_fail@plt+0xf4>
   11d00:	ldrb	r3, [r4]
   11d04:	cmp	r3, #0
   11d08:	popne	{r4, pc}
   11d0c:	bl	11c94 <__assert_fail@plt+0x6c>
   11d10:	mov	r3, #1
   11d14:	strb	r3, [r4]
   11d18:	pop	{r4, pc}
   11d1c:			; <UNDEFINED> instruction: 0x0002e3b8
   11d20:	b	11cc0 <__assert_fail@plt+0x98>
   11d24:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11d28:	strd	r6, [sp, #8]
   11d2c:	strd	r8, [sp, #16]
   11d30:	str	sl, [sp, #24]
   11d34:	str	lr, [sp, #28]
   11d38:	sub	sp, sp, #8
   11d3c:	movw	r8, #58300	; 0xe3bc
   11d40:	movt	r8, #2
   11d44:	movw	sl, #49280	; 0xc080
   11d48:	movt	sl, #1
   11d4c:	movw	r9, #58288	; 0xe3b0
   11d50:	movt	r9, #2
   11d54:	movw	r7, #58728	; 0xe568
   11d58:	movt	r7, #2
   11d5c:	mov	r2, #0
   11d60:	mov	r1, #1
   11d64:	add	r0, sp, #4
   11d68:	bl	11a78 <wait3@plt>
   11d6c:	subs	r5, r0, #0
   11d70:	ble	11e60 <__assert_fail@plt+0x238>
   11d74:	ldrb	r3, [r8]
   11d78:	cmp	r3, #0
   11d7c:	bne	11da0 <__assert_fail@plt+0x178>
   11d80:	movw	r3, #58892	; 0xe60c
   11d84:	movt	r3, #2
   11d88:	ldr	r4, [r3]
   11d8c:	cmp	r4, #0
   11d90:	beq	11d5c <__assert_fail@plt+0x134>
   11d94:	movw	r6, #58860	; 0xe5ec
   11d98:	movt	r6, #2
   11d9c:	b	11e38 <__assert_fail@plt+0x210>
   11da0:	ldr	r3, [sp, #4]
   11da4:	mov	r2, r5
   11da8:	mov	r1, sl
   11dac:	ldr	r0, [r9]
   11db0:	bl	11a0c <fprintf@plt>
   11db4:	b	11d80 <__assert_fail@plt+0x158>
   11db8:	ldr	r2, [r4, #48]	; 0x30
   11dbc:	movw	r1, #49304	; 0xc098
   11dc0:	movt	r1, #1
   11dc4:	mov	r0, #4
   11dc8:	bl	11b14 <syslog@plt>
   11dcc:	b	11e50 <__assert_fail@plt+0x228>
   11dd0:	ldr	r3, [r4, #60]	; 0x3c
   11dd4:	ldr	r2, [r4, #12]
   11dd8:	movw	r1, #49328	; 0xc0b0
   11ddc:	movt	r1, #1
   11de0:	ldr	r0, [r9]
   11de4:	bl	11a0c <fprintf@plt>
   11de8:	ldr	r3, [r4, #60]	; 0x3c
   11dec:	add	r2, r3, #31
   11df0:	cmp	r3, #0
   11df4:	movge	r2, r3
   11df8:	asr	r2, r2, #5
   11dfc:	rsbs	r1, r3, #0
   11e00:	and	r3, r3, #31
   11e04:	and	r1, r1, #31
   11e08:	rsbpl	r3, r1, #0
   11e0c:	mov	r0, #1
   11e10:	ldr	r1, [r7, r2, lsl #2]
   11e14:	orr	r3, r1, r0, lsl r3
   11e18:	str	r3, [r7, r2, lsl #2]
   11e1c:	ldr	r3, [r6]
   11e20:	add	r3, r3, r0
   11e24:	str	r3, [r6]
   11e28:	str	r0, [r4, #24]
   11e2c:	ldr	r4, [r4, #220]	; 0xdc
   11e30:	cmp	r4, #0
   11e34:	beq	11d5c <__assert_fail@plt+0x134>
   11e38:	ldr	r3, [r4, #24]
   11e3c:	cmp	r3, r5
   11e40:	bne	11e2c <__assert_fail@plt+0x204>
   11e44:	ldr	r3, [sp, #4]
   11e48:	cmp	r3, #0
   11e4c:	bne	11db8 <__assert_fail@plt+0x190>
   11e50:	ldrb	r3, [r8]
   11e54:	cmp	r3, #0
   11e58:	beq	11de8 <__assert_fail@plt+0x1c0>
   11e5c:	b	11dd0 <__assert_fail@plt+0x1a8>
   11e60:	add	sp, sp, #8
   11e64:	ldrd	r4, [sp]
   11e68:	ldrd	r6, [sp, #8]
   11e6c:	ldrd	r8, [sp, #16]
   11e70:	ldr	sl, [sp, #24]
   11e74:	add	sp, sp, #28
   11e78:	pop	{pc}		; (ldr pc, [sp], #4)
   11e7c:	push	{lr}		; (str lr, [sp, #-4]!)
   11e80:	sub	sp, sp, #8192	; 0x2000
   11e84:	sub	sp, sp, #4
   11e88:	mov	r2, #8192	; 0x2000
   11e8c:	mov	r1, sp
   11e90:	bl	1179c <read@plt>
   11e94:	add	sp, sp, #8192	; 0x2000
   11e98:	add	sp, sp, #4
   11e9c:	pop	{pc}		; (ldr pc, [sp], #4)
   11ea0:	str	r4, [sp, #-8]!
   11ea4:	str	lr, [sp, #4]
   11ea8:	sub	sp, sp, #8320	; 0x2080
   11eac:	sub	sp, sp, #16
   11eb0:	mov	r4, r0
   11eb4:	add	r3, sp, #144	; 0x90
   11eb8:	mov	r2, #128	; 0x80
   11ebc:	str	r2, [r3, #-4]!
   11ec0:	str	r3, [sp, #4]
   11ec4:	add	r3, sp, #12
   11ec8:	str	r3, [sp]
   11ecc:	mov	r3, #0
   11ed0:	mov	r2, #8192	; 0x2000
   11ed4:	add	r1, sp, #144	; 0x90
   11ed8:	bl	11868 <recvfrom@plt>
   11edc:	subs	r2, r0, #0
   11ee0:	blt	11f04 <__assert_fail@plt+0x2dc>
   11ee4:	mov	r3, #128	; 0x80
   11ee8:	str	r3, [sp, #4]
   11eec:	add	r3, sp, #12
   11ef0:	str	r3, [sp]
   11ef4:	mov	r3, #0
   11ef8:	add	r1, sp, #144	; 0x90
   11efc:	mov	r0, r4
   11f00:	bl	11aa8 <sendto@plt>
   11f04:	add	sp, sp, #8320	; 0x2080
   11f08:	add	sp, sp, #16
   11f0c:	ldr	r4, [sp]
   11f10:	add	sp, sp, #4
   11f14:	pop	{pc}		; (ldr pc, [sp], #4)
   11f18:	str	r4, [sp, #-8]!
   11f1c:	str	lr, [sp, #4]
   11f20:	sub	sp, sp, #264	; 0x108
   11f24:	mov	r4, r0
   11f28:	mov	r0, #0
   11f2c:	bl	11820 <time@plt>
   11f30:	str	r0, [sp, #4]
   11f34:	add	r0, sp, #4
   11f38:	bl	1185c <ctime@plt>
   11f3c:	mov	r2, r0
   11f40:	movw	r1, #49348	; 0xc0c4
   11f44:	movt	r1, #1
   11f48:	add	r0, sp, #8
   11f4c:	bl	11b2c <sprintf@plt>
   11f50:	add	r0, sp, #8
   11f54:	bl	119dc <strlen@plt>
   11f58:	mov	r2, r0
   11f5c:	add	r1, sp, #8
   11f60:	mov	r0, r4
   11f64:	bl	11a84 <write@plt>
   11f68:	add	sp, sp, #264	; 0x108
   11f6c:	ldr	r4, [sp]
   11f70:	add	sp, sp, #4
   11f74:	pop	{pc}		; (ldr pc, [sp], #4)
   11f78:	str	r4, [sp, #-8]!
   11f7c:	str	lr, [sp, #4]
   11f80:	sub	sp, sp, #400	; 0x190
   11f84:	mov	r4, r0
   11f88:	mov	r0, #0
   11f8c:	bl	11820 <time@plt>
   11f90:	str	r0, [sp, #140]	; 0x8c
   11f94:	mov	r3, #128	; 0x80
   11f98:	str	r3, [sp, #8]
   11f9c:	add	r3, sp, #8
   11fa0:	str	r3, [sp, #4]
   11fa4:	add	r3, sp, #12
   11fa8:	str	r3, [sp]
   11fac:	mov	r3, #0
   11fb0:	mov	r2, #256	; 0x100
   11fb4:	add	r1, sp, #144	; 0x90
   11fb8:	mov	r0, r4
   11fbc:	bl	11868 <recvfrom@plt>
   11fc0:	cmp	r0, #0
   11fc4:	blt	12010 <__assert_fail@plt+0x3e8>
   11fc8:	add	r0, sp, #140	; 0x8c
   11fcc:	bl	1185c <ctime@plt>
   11fd0:	mov	r2, r0
   11fd4:	movw	r1, #49348	; 0xc0c4
   11fd8:	movt	r1, #1
   11fdc:	add	r0, sp, #144	; 0x90
   11fe0:	bl	11b2c <sprintf@plt>
   11fe4:	add	r0, sp, #144	; 0x90
   11fe8:	bl	119dc <strlen@plt>
   11fec:	mov	r3, #128	; 0x80
   11ff0:	str	r3, [sp, #4]
   11ff4:	add	r3, sp, #12
   11ff8:	str	r3, [sp]
   11ffc:	mov	r3, #0
   12000:	mov	r2, r0
   12004:	add	r1, sp, #144	; 0x90
   12008:	mov	r0, r4
   1200c:	bl	11aa8 <sendto@plt>
   12010:	add	sp, sp, #400	; 0x190
   12014:	ldr	r4, [sp]
   12018:	add	sp, sp, #4
   1201c:	pop	{pc}		; (ldr pc, [sp], #4)
   12020:	cmp	r0, #112	; 0x70
   12024:	beq	120bc <__assert_fail@plt+0x494>
   12028:	ble	12058 <__assert_fail@plt+0x430>
   1202c:	cmp	r0, #256	; 0x100
   12030:	beq	120a4 <__assert_fail@plt+0x47c>
   12034:	movw	r3, #257	; 0x101
   12038:	cmp	r0, r3
   1203c:	bne	1209c <__assert_fail@plt+0x474>
   12040:	movw	r3, #58300	; 0xe3bc
   12044:	movt	r3, #2
   12048:	mov	r2, #1
   1204c:	strb	r2, [r3, #2]
   12050:	mov	r0, #0
   12054:	bx	lr
   12058:	cmp	r0, #82	; 0x52
   1205c:	beq	120f8 <__assert_fail@plt+0x4d0>
   12060:	cmp	r0, #100	; 0x64
   12064:	bne	12094 <__assert_fail@plt+0x46c>
   12068:	movw	r3, #58300	; 0xe3bc
   1206c:	movt	r3, #2
   12070:	mov	r2, #1
   12074:	strb	r2, [r3]
   12078:	movw	r3, #58864	; 0xe5f0
   1207c:	movt	r3, #2
   12080:	ldr	r2, [r3]
   12084:	orr	r2, r2, #1
   12088:	str	r2, [r3]
   1208c:	mov	r0, #0
   12090:	bx	lr
   12094:	mov	r0, #7
   12098:	bx	lr
   1209c:	mov	r0, #7
   120a0:	bx	lr
   120a4:	movw	r3, #58300	; 0xe3bc
   120a8:	movt	r3, #2
   120ac:	mov	r2, #1
   120b0:	strb	r2, [r3, #1]
   120b4:	mov	r0, #0
   120b8:	bx	lr
   120bc:	cmp	r1, #0
   120c0:	beq	120e4 <__assert_fail@plt+0x4bc>
   120c4:	ldrb	r3, [r1]
   120c8:	cmp	r3, #0
   120cc:	beq	120e4 <__assert_fail@plt+0x4bc>
   120d0:	movw	r3, #57800	; 0xe1c8
   120d4:	movt	r3, #2
   120d8:	str	r1, [r3]
   120dc:	mov	r0, #0
   120e0:	bx	lr
   120e4:	movw	r3, #57800	; 0xe1c8
   120e8:	movt	r3, #2
   120ec:	mov	r0, #0
   120f0:	strb	r0, [r3, #4]
   120f4:	bx	lr
   120f8:	str	r4, [sp, #-8]!
   120fc:	str	lr, [sp, #4]
   12100:	sub	sp, sp, #8
   12104:	mov	r4, r1
   12108:	mov	r2, #0
   1210c:	add	r1, sp, #4
   12110:	mov	r0, r4
   12114:	bl	11760 <strtol@plt>
   12118:	cmp	r0, #0
   1211c:	ble	12130 <__assert_fail@plt+0x508>
   12120:	ldr	r3, [sp, #4]
   12124:	ldrb	r3, [r3]
   12128:	cmp	r3, #0
   1212c:	beq	12158 <__assert_fail@plt+0x530>
   12130:	mov	r2, r4
   12134:	movw	r1, #49356	; 0xc0cc
   12138:	movt	r1, #1
   1213c:	mov	r0, #3
   12140:	bl	11b14 <syslog@plt>
   12144:	mov	r0, #0
   12148:	add	sp, sp, #8
   1214c:	ldr	r4, [sp]
   12150:	add	sp, sp, #4
   12154:	pop	{pc}		; (ldr pc, [sp], #4)
   12158:	movw	r3, #57800	; 0xe1c8
   1215c:	movt	r3, #2
   12160:	str	r0, [r3, #8]
   12164:	mov	r0, #0
   12168:	b	12148 <__assert_fail@plt+0x520>
   1216c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12170:	strd	r6, [sp, #8]
   12174:	str	r8, [sp, #16]
   12178:	str	lr, [sp, #20]
   1217c:	mov	r7, r0
   12180:	movw	r3, #57800	; 0xe1c8
   12184:	movt	r3, #2
   12188:	ldr	r0, [r3, #12]
   1218c:	cmp	r0, #0
   12190:	beq	121cc <__assert_fail@plt+0x5a4>
   12194:	ldr	r5, [r7, #16]
   12198:	add	r4, r3, #12
   1219c:	b	121ac <__assert_fail@plt+0x584>
   121a0:	ldr	r0, [r4, #16]!
   121a4:	cmp	r0, #0
   121a8:	beq	121cc <__assert_fail@plt+0x5a4>
   121ac:	ldr	r3, [r4, #4]
   121b0:	cmp	r3, r5
   121b4:	bne	121a0 <__assert_fail@plt+0x578>
   121b8:	ldr	r1, [r7, #12]
   121bc:	bl	11754 <strcmp@plt>
   121c0:	cmp	r0, #0
   121c4:	bne	121a0 <__assert_fail@plt+0x578>
   121c8:	mov	r0, r4
   121cc:	ldrd	r4, [sp]
   121d0:	ldrd	r6, [sp, #8]
   121d4:	ldr	r8, [sp, #16]
   121d8:	add	sp, sp, #20
   121dc:	pop	{pc}		; (ldr pc, [sp], #4)
   121e0:	strd	r4, [sp, #-12]!
   121e4:	str	lr, [sp, #8]
   121e8:	sub	sp, sp, #148	; 0x94
   121ec:	mov	r4, r0
   121f0:	mov	r5, r1
   121f4:	mov	r2, #140	; 0x8c
   121f8:	mov	r1, #0
   121fc:	add	r0, sp, #4
   12200:	bl	11a54 <memset@plt>
   12204:	add	r0, sp, #8
   12208:	bl	11ac0 <sigemptyset@plt>
   1220c:	mov	r1, r4
   12210:	add	r0, sp, #8
   12214:	bl	11964 <sigaddset@plt>
   12218:	mov	r3, #268435456	; 0x10000000
   1221c:	str	r3, [sp, #136]	; 0x88
   12220:	str	r5, [sp, #4]
   12224:	mov	r2, #0
   12228:	add	r1, sp, #4
   1222c:	mov	r0, r4
   12230:	bl	118ec <sigaction@plt>
   12234:	add	sp, sp, #148	; 0x94
   12238:	ldrd	r4, [sp]
   1223c:	add	sp, sp, #8
   12240:	pop	{pc}		; (ldr pc, [sp], #4)
   12244:	str	r4, [sp, #-8]!
   12248:	str	lr, [sp, #4]
   1224c:	sub	sp, sp, #128	; 0x80
   12250:	mov	r4, r0
   12254:	mov	r0, sp
   12258:	bl	11ac0 <sigemptyset@plt>
   1225c:	mov	r1, #17
   12260:	mov	r0, sp
   12264:	bl	11964 <sigaddset@plt>
   12268:	mov	r1, #1
   1226c:	mov	r0, sp
   12270:	bl	11964 <sigaddset@plt>
   12274:	mov	r1, #14
   12278:	mov	r0, sp
   1227c:	bl	11964 <sigaddset@plt>
   12280:	mov	r2, r4
   12284:	mov	r1, sp
   12288:	mov	r0, #0
   1228c:	bl	117b4 <sigprocmask@plt>
   12290:	add	sp, sp, #128	; 0x80
   12294:	ldr	r4, [sp]
   12298:	add	sp, sp, #4
   1229c:	pop	{pc}		; (ldr pc, [sp], #4)
   122a0:	push	{lr}		; (str lr, [sp, #-4]!)
   122a4:	sub	sp, sp, #132	; 0x84
   122a8:	subs	r1, r0, #0
   122ac:	beq	122c4 <__assert_fail@plt+0x69c>
   122b0:	mov	r2, #0
   122b4:	mov	r0, #2
   122b8:	bl	117b4 <sigprocmask@plt>
   122bc:	add	sp, sp, #132	; 0x84
   122c0:	pop	{pc}		; (ldr pc, [sp], #4)
   122c4:	mov	r0, sp
   122c8:	bl	11ac0 <sigemptyset@plt>
   122cc:	mov	r2, #0
   122d0:	mov	r1, sp
   122d4:	mov	r0, #2
   122d8:	bl	117b4 <sigprocmask@plt>
   122dc:	b	122bc <__assert_fail@plt+0x694>
   122e0:	strd	r4, [sp, #-16]!
   122e4:	str	r6, [sp, #8]
   122e8:	str	lr, [sp, #12]
   122ec:	sub	sp, sp, #64	; 0x40
   122f0:	mov	r5, r0
   122f4:	mov	r4, r1
   122f8:	ldr	r3, [r1, #44]	; 0x2c
   122fc:	cmp	r3, #0
   12300:	beq	12320 <__assert_fail@plt+0x6f8>
   12304:	ldr	r3, [r3, #12]
   12308:	blx	r3
   1230c:	add	sp, sp, #64	; 0x40
   12310:	ldrd	r4, [sp]
   12314:	ldr	r6, [sp, #8]
   12318:	add	sp, sp, #12
   1231c:	pop	{pc}		; (ldr pc, [sp], #4)
   12320:	movw	r3, #58300	; 0xe3bc
   12324:	movt	r3, #2
   12328:	ldrb	r3, [r3]
   1232c:	cmp	r3, #0
   12330:	bne	123c8 <__assert_fail@plt+0x7a0>
   12334:	mov	r1, #0
   12338:	mov	r0, r5
   1233c:	bl	11898 <dup2@plt>
   12340:	mov	r0, r5
   12344:	bl	11bf8 <close@plt>
   12348:	mov	r1, #1
   1234c:	mov	r0, #0
   12350:	bl	11898 <dup2@plt>
   12354:	mov	r1, #2
   12358:	mov	r0, #0
   1235c:	bl	11898 <dup2@plt>
   12360:	ldr	r0, [r4, #36]	; 0x24
   12364:	bl	11748 <getpwnam@plt>
   12368:	subs	r5, r0, #0
   1236c:	beq	123f4 <__assert_fail@plt+0x7cc>
   12370:	ldr	r0, [r4, #40]	; 0x28
   12374:	cmp	r0, #0
   12378:	beq	12388 <__assert_fail@plt+0x760>
   1237c:	ldrb	r3, [r0]
   12380:	cmp	r3, #0
   12384:	bne	12440 <__assert_fail@plt+0x818>
   12388:	ldr	r3, [r5, #8]
   1238c:	cmp	r3, #0
   12390:	beq	1249c <__assert_fail@plt+0x874>
   12394:	ldr	r0, [r5, #12]
   12398:	bl	1194c <setgid@plt>
   1239c:	cmp	r0, #0
   123a0:	ldrge	r0, [r5]
   123a4:	bge	12484 <__assert_fail@plt+0x85c>
   123a8:	ldr	r3, [r5, #12]
   123ac:	ldr	r2, [r4, #12]
   123b0:	movw	r1, #49472	; 0xc140
   123b4:	movt	r1, #1
   123b8:	mov	r0, #3
   123bc:	bl	11b14 <syslog@plt>
   123c0:	mov	r0, #1
   123c4:	bl	117fc <_exit@plt>
   123c8:	movw	r3, #58288	; 0xe3b0
   123cc:	movt	r3, #2
   123d0:	ldr	r6, [r3]
   123d4:	bl	119b8 <getpid@plt>
   123d8:	ldr	r3, [r4, #48]	; 0x30
   123dc:	mov	r2, r0
   123e0:	movw	r1, #49404	; 0xc0fc
   123e4:	movt	r1, #1
   123e8:	mov	r0, r6
   123ec:	bl	11a0c <fprintf@plt>
   123f0:	b	12334 <__assert_fail@plt+0x70c>
   123f4:	ldr	r3, [r4, #36]	; 0x24
   123f8:	str	r3, [sp]
   123fc:	ldr	r3, [r4, #20]
   12400:	ldr	r2, [r4, #12]
   12404:	movw	r1, #49420	; 0xc10c
   12408:	movt	r1, #1
   1240c:	mov	r0, #3
   12410:	bl	11b14 <syslog@plt>
   12414:	ldr	r3, [r4, #16]
   12418:	cmp	r3, #1
   1241c:	bne	12428 <__assert_fail@plt+0x800>
   12420:	mov	r0, #1
   12424:	bl	117fc <_exit@plt>
   12428:	mov	r3, #0
   1242c:	mov	r2, #50	; 0x32
   12430:	add	r1, sp, #12
   12434:	mov	r0, r3
   12438:	bl	11bec <recv@plt>
   1243c:	b	12420 <__assert_fail@plt+0x7f8>
   12440:	bl	11c10 <getgrnam@plt>
   12444:	subs	r6, r0, #0
   12448:	beq	124d0 <__assert_fail@plt+0x8a8>
   1244c:	ldr	r3, [r5, #8]
   12450:	cmp	r3, #0
   12454:	beq	1249c <__assert_fail@plt+0x874>
   12458:	ldr	r0, [r6, #8]
   1245c:	cmp	r0, #0
   12460:	bne	1251c <__assert_fail@plt+0x8f4>
   12464:	ldr	r0, [r5, #12]
   12468:	bl	1194c <setgid@plt>
   1246c:	cmp	r0, #0
   12470:	blt	123a8 <__assert_fail@plt+0x780>
   12474:	ldr	r0, [r5]
   12478:	ldr	r1, [r6, #8]
   1247c:	cmp	r1, #0
   12480:	bne	12488 <__assert_fail@plt+0x860>
   12484:	ldr	r1, [r5, #12]
   12488:	bl	118b0 <initgroups@plt>
   1248c:	ldr	r0, [r5, #8]
   12490:	bl	11b20 <setuid@plt>
   12494:	cmp	r0, #0
   12498:	blt	1254c <__assert_fail@plt+0x924>
   1249c:	ldr	r1, [r4, #52]	; 0x34
   124a0:	ldr	r0, [r4, #48]	; 0x30
   124a4:	bl	11a18 <execv@plt>
   124a8:	ldr	r3, [r4, #16]
   124ac:	cmp	r3, #1
   124b0:	bne	1256c <__assert_fail@plt+0x944>
   124b4:	ldr	r2, [r4, #48]	; 0x30
   124b8:	movw	r1, #49528	; 0xc178
   124bc:	movt	r1, #1
   124c0:	mov	r0, #3
   124c4:	bl	11b14 <syslog@plt>
   124c8:	mov	r0, #1
   124cc:	bl	117fc <_exit@plt>
   124d0:	ldr	r3, [r4, #40]	; 0x28
   124d4:	str	r3, [sp]
   124d8:	ldr	r3, [r4, #20]
   124dc:	ldr	r2, [r4, #12]
   124e0:	movw	r1, #49444	; 0xc124
   124e4:	movt	r1, #1
   124e8:	mov	r0, #3
   124ec:	bl	11b14 <syslog@plt>
   124f0:	ldr	r3, [r4, #16]
   124f4:	cmp	r3, #1
   124f8:	bne	12504 <__assert_fail@plt+0x8dc>
   124fc:	mov	r0, #1
   12500:	bl	117fc <_exit@plt>
   12504:	mov	r3, #0
   12508:	mov	r2, #50	; 0x32
   1250c:	add	r1, sp, #12
   12510:	mov	r0, r3
   12514:	bl	11bec <recv@plt>
   12518:	b	124fc <__assert_fail@plt+0x8d4>
   1251c:	bl	1194c <setgid@plt>
   12520:	cmp	r0, #0
   12524:	ldrge	r0, [r5]
   12528:	bge	12478 <__assert_fail@plt+0x850>
   1252c:	ldr	r3, [r6, #8]
   12530:	ldr	r2, [r4, #12]
   12534:	movw	r1, #49472	; 0xc140
   12538:	movt	r1, #1
   1253c:	mov	r0, #3
   12540:	bl	11b14 <syslog@plt>
   12544:	mov	r0, #1
   12548:	bl	117fc <_exit@plt>
   1254c:	ldr	r3, [r5, #8]
   12550:	ldr	r2, [r4, #12]
   12554:	movw	r1, #49500	; 0xc15c
   12558:	movt	r1, #1
   1255c:	mov	r0, #3
   12560:	bl	11b14 <syslog@plt>
   12564:	mov	r0, #1
   12568:	bl	117fc <_exit@plt>
   1256c:	mov	r3, #0
   12570:	mov	r2, #50	; 0x32
   12574:	add	r1, sp, #12
   12578:	mov	r0, r3
   1257c:	bl	11bec <recv@plt>
   12580:	b	124b4 <__assert_fail@plt+0x88c>
   12584:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12588:	strd	r6, [sp, #8]
   1258c:	str	r8, [sp, #16]
   12590:	str	lr, [sp, #20]
   12594:	sub	sp, sp, #264	; 0x108
   12598:	mov	r6, r0
   1259c:	mov	r8, #0
   125a0:	add	r4, sp, #4
   125a4:	movw	r5, #258	; 0x102
   125a8:	movw	r7, #257	; 0x101
   125ac:	sub	r2, r5, r8
   125b0:	mov	r1, r4
   125b4:	mov	r0, r6
   125b8:	bl	1179c <read@plt>
   125bc:	cmp	r0, #0
   125c0:	beq	126b0 <__assert_fail@plt+0xa88>
   125c4:	blt	126c0 <__assert_fail@plt+0xa98>
   125c8:	ldrb	r2, [r4]
   125cc:	cmp	r2, #10
   125d0:	cmpne	r2, #13
   125d4:	moveq	r3, #1
   125d8:	movne	r3, #0
   125dc:	cmp	r2, #0
   125e0:	moveq	r3, #1
   125e4:	cmp	r3, #0
   125e8:	bne	126b8 <__assert_fail@plt+0xa90>
   125ec:	add	r3, r4, #1
   125f0:	add	r0, r4, r0
   125f4:	sub	r8, r8, r4
   125f8:	add	ip, r8, r3
   125fc:	mov	r4, r3
   12600:	cmp	r3, r0
   12604:	beq	126a0 <__assert_fail@plt+0xa78>
   12608:	ldrb	r1, [r3], #1
   1260c:	cmp	r1, #10
   12610:	cmpne	r1, #13
   12614:	moveq	r2, #1
   12618:	movne	r2, #0
   1261c:	cmp	r1, #0
   12620:	moveq	r2, #1
   12624:	cmp	r2, #0
   12628:	beq	125f8 <__assert_fail@plt+0x9d0>
   1262c:	cmp	ip, #0
   12630:	blt	126c0 <__assert_fail@plt+0xa98>
   12634:	add	r3, sp, #264	; 0x108
   12638:	add	ip, r3, ip
   1263c:	mov	r3, #0
   12640:	strb	r3, [ip, #-260]	; 0xfffffefc
   12644:	movw	r3, #58300	; 0xe3bc
   12648:	movt	r3, #2
   1264c:	ldrb	r3, [r3]
   12650:	cmp	r3, #0
   12654:	bne	126dc <__assert_fail@plt+0xab4>
   12658:	movw	r1, #49612	; 0xc1cc
   1265c:	movt	r1, #1
   12660:	add	r0, sp, #4
   12664:	bl	118c8 <strcasecmp@plt>
   12668:	cmp	r0, #0
   1266c:	beq	126fc <__assert_fail@plt+0xad4>
   12670:	movw	r3, #58892	; 0xe60c
   12674:	movt	r3, #2
   12678:	ldr	r4, [r3]
   1267c:	cmp	r4, #0
   12680:	bne	12798 <__assert_fail@plt+0xb70>
   12684:	mov	r2, #24
   12688:	movw	r1, #49632	; 0xc1e0
   1268c:	movt	r1, #1
   12690:	mov	r0, r6
   12694:	bl	11a84 <write@plt>
   12698:	mov	r0, #1
   1269c:	bl	119c4 <exit@plt>
   126a0:	mov	r8, ip
   126a4:	cmp	ip, r7
   126a8:	ble	125ac <__assert_fail@plt+0x984>
   126ac:	b	12634 <__assert_fail@plt+0xa0c>
   126b0:	mov	ip, r8
   126b4:	b	1262c <__assert_fail@plt+0xa04>
   126b8:	mov	ip, r8
   126bc:	b	1262c <__assert_fail@plt+0xa04>
   126c0:	mov	r2, #29
   126c4:	movw	r1, #49552	; 0xc190
   126c8:	movt	r1, #1
   126cc:	mov	r0, r6
   126d0:	bl	11a84 <write@plt>
   126d4:	mov	r0, #1
   126d8:	bl	117fc <_exit@plt>
   126dc:	movw	r3, #58288	; 0xe3b0
   126e0:	movt	r3, #2
   126e4:	add	r2, sp, #4
   126e8:	movw	r1, #49584	; 0xc1b0
   126ec:	movt	r1, #1
   126f0:	ldr	r0, [r3]
   126f4:	bl	11a0c <fprintf@plt>
   126f8:	b	12658 <__assert_fail@plt+0xa30>
   126fc:	movw	r3, #58892	; 0xe60c
   12700:	movt	r3, #2
   12704:	ldr	r4, [r3]
   12708:	cmp	r4, #0
   1270c:	beq	1276c <__assert_fail@plt+0xb44>
   12710:	movw	r5, #49620	; 0xc1d4
   12714:	movt	r5, #1
   12718:	mov	r8, #2
   1271c:	b	1272c <__assert_fail@plt+0xb04>
   12720:	ldr	r4, [r4, #220]	; 0xdc
   12724:	cmp	r4, #0
   12728:	beq	1276c <__assert_fail@plt+0xb44>
   1272c:	ldr	r3, [r4, #64]	; 0x40
   12730:	sub	r3, r3, #1
   12734:	cmp	r3, #1
   12738:	bhi	12720 <__assert_fail@plt+0xaf8>
   1273c:	ldr	r7, [r4, #12]
   12740:	mov	r0, r7
   12744:	bl	119dc <strlen@plt>
   12748:	mov	r2, r0
   1274c:	mov	r1, r7
   12750:	mov	r0, r6
   12754:	bl	11a84 <write@plt>
   12758:	mov	r2, r8
   1275c:	mov	r1, r5
   12760:	mov	r0, r6
   12764:	bl	11a84 <write@plt>
   12768:	b	12720 <__assert_fail@plt+0xaf8>
   1276c:	mov	r0, #1
   12770:	bl	117fc <_exit@plt>
   12774:	mov	r2, #5
   12778:	movw	r1, #49624	; 0xc1d8
   1277c:	movt	r1, #1
   12780:	mov	r0, r6
   12784:	bl	11a84 <write@plt>
   12788:	b	127c4 <__assert_fail@plt+0xb9c>
   1278c:	ldr	r4, [r4, #220]	; 0xdc
   12790:	cmp	r4, #0
   12794:	beq	12684 <__assert_fail@plt+0xa5c>
   12798:	ldr	r5, [r4, #64]	; 0x40
   1279c:	sub	r3, r5, #1
   127a0:	cmp	r3, #1
   127a4:	bhi	1278c <__assert_fail@plt+0xb64>
   127a8:	ldr	r1, [r4, #12]
   127ac:	add	r0, sp, #4
   127b0:	bl	118c8 <strcasecmp@plt>
   127b4:	cmp	r0, #0
   127b8:	bne	1278c <__assert_fail@plt+0xb64>
   127bc:	cmp	r5, #2
   127c0:	beq	12774 <__assert_fail@plt+0xb4c>
   127c4:	mov	r1, r4
   127c8:	mov	r0, r6
   127cc:	bl	122e0 <__assert_fail@plt+0x6b8>
   127d0:	add	sp, sp, #264	; 0x108
   127d4:	ldrd	r4, [sp]
   127d8:	ldrd	r6, [sp, #8]
   127dc:	ldr	r8, [sp, #16]
   127e0:	add	sp, sp, #20
   127e4:	pop	{pc}		; (ldr pc, [sp], #4)
   127e8:	str	r4, [sp, #-8]!
   127ec:	str	lr, [sp, #4]
   127f0:	movw	r3, #49656	; 0xc1f8
   127f4:	movt	r3, #1
   127f8:	cmp	r0, #0
   127fc:	moveq	r0, r3
   12800:	bl	11874 <strdup@plt>
   12804:	cmp	r0, #0
   12808:	beq	12818 <__assert_fail@plt+0xbf0>
   1280c:	ldr	r4, [sp]
   12810:	add	sp, sp, #4
   12814:	pop	{pc}		; (ldr pc, [sp], #4)
   12818:	movw	r1, #49660	; 0xc1fc
   1281c:	movt	r1, #1
   12820:	mov	r0, #3
   12824:	bl	11b14 <syslog@plt>
   12828:	mvn	r0, #0
   1282c:	bl	119c4 <exit@plt>
   12830:	strd	r4, [sp, #-16]!
   12834:	str	r6, [sp, #8]
   12838:	str	lr, [sp, #12]
   1283c:	mov	r5, r0
   12840:	mov	r4, r1
   12844:	mov	r0, r1
   12848:	bl	176b4 <argp_parse@@Base+0x1384>
   1284c:	subs	r6, r0, #0
   12850:	beq	12878 <__assert_fail@plt+0xc50>
   12854:	mov	r2, r4
   12858:	ldr	r1, [r5]
   1285c:	mov	r0, r6
   12860:	bl	11808 <memcpy@plt>
   12864:	str	r6, [r5]
   12868:	ldrd	r4, [sp]
   1286c:	ldr	r6, [sp, #8]
   12870:	add	sp, sp, #12
   12874:	pop	{pc}		; (ldr pc, [sp], #4)
   12878:	movw	r1, #49672	; 0xc208
   1287c:	movt	r1, #1
   12880:	mov	r0, #3
   12884:	bl	11b14 <syslog@plt>
   12888:	mvn	r0, #0
   1288c:	bl	119c4 <exit@plt>
   12890:	ldr	r3, [r0]
   12894:	cmp	r3, #0
   12898:	bxeq	lr
   1289c:	str	r4, [sp, #-8]!
   128a0:	str	lr, [sp, #4]
   128a4:	mov	r4, r0
   128a8:	mov	r0, r3
   128ac:	bl	119dc <strlen@plt>
   128b0:	add	r1, r0, #1
   128b4:	mov	r0, r4
   128b8:	bl	12830 <__assert_fail@plt+0xc08>
   128bc:	ldr	r4, [sp]
   128c0:	add	sp, sp, #4
   128c4:	pop	{pc}		; (ldr pc, [sp], #4)
   128c8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   128cc:	strd	r6, [sp, #8]
   128d0:	strd	r8, [sp, #16]
   128d4:	str	sl, [sp, #24]
   128d8:	str	lr, [sp, #28]
   128dc:	sub	sp, sp, #40	; 0x28
   128e0:	mov	r4, r0
   128e4:	movw	r3, #58288	; 0xe3b0
   128e8:	movt	r3, #2
   128ec:	ldr	r0, [r3]
   128f0:	ldr	r2, [r1]
   128f4:	ldr	r3, [r1, #4]
   128f8:	ldr	lr, [r1, #64]	; 0x40
   128fc:	sub	ip, lr, #1
   12900:	cmp	ip, #1
   12904:	bls	1299c <__assert_fail@plt+0xd74>
   12908:	ldr	ip, [r1, #8]
   1290c:	movw	lr, #49684	; 0xc214
   12910:	movt	lr, #1
   12914:	cmp	ip, #0
   12918:	moveq	ip, lr
   1291c:	ldr	r5, [r1, #12]
   12920:	ldr	r6, [r1, #20]
   12924:	ldr	r7, [r1, #24]
   12928:	ldr	r8, [r1, #28]
   1292c:	ldr	r9, [r1, #36]	; 0x24
   12930:	ldr	sl, [r1, #40]	; 0x28
   12934:	ldr	lr, [r1, #44]	; 0x2c
   12938:	cmp	lr, #0
   1293c:	ldrne	lr, [lr]
   12940:	movweq	lr, #49700	; 0xc224
   12944:	movteq	lr, #1
   12948:	ldr	r1, [r1, #48]	; 0x30
   1294c:	str	r1, [sp, #36]	; 0x24
   12950:	str	lr, [sp, #32]
   12954:	str	sl, [sp, #28]
   12958:	str	r9, [sp, #24]
   1295c:	str	r8, [sp, #20]
   12960:	str	r7, [sp, #16]
   12964:	str	r6, [sp, #12]
   12968:	str	r5, [sp, #8]
   1296c:	str	ip, [sp, #4]
   12970:	str	r4, [sp]
   12974:	movw	r1, #49704	; 0xc228
   12978:	movt	r1, #1
   1297c:	bl	11a0c <fprintf@plt>
   12980:	add	sp, sp, #40	; 0x28
   12984:	ldrd	r4, [sp]
   12988:	ldrd	r6, [sp, #8]
   1298c:	ldrd	r8, [sp, #16]
   12990:	ldr	sl, [sp, #24]
   12994:	add	sp, sp, #28
   12998:	pop	{pc}		; (ldr pc, [sp], #4)
   1299c:	movw	r5, #49688	; 0xc218
   129a0:	movt	r5, #1
   129a4:	movw	ip, #50724	; 0xc624
   129a8:	movt	ip, #1
   129ac:	cmp	lr, #2
   129b0:	moveq	ip, r5
   129b4:	b	1291c <__assert_fail@plt+0xcf4>
   129b8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   129bc:	strd	r6, [sp, #8]
   129c0:	str	r8, [sp, #16]
   129c4:	str	lr, [sp, #20]
   129c8:	sub	sp, sp, #16
   129cc:	mov	r4, r0
   129d0:	mov	r3, #1
   129d4:	str	r3, [sp, #12]
   129d8:	movw	r5, #49868	; 0xc2cc
   129dc:	movt	r5, #1
   129e0:	movw	r7, #49900	; 0xc2ec
   129e4:	movt	r7, #1
   129e8:	movw	r6, #58864	; 0xe5f0
   129ec:	movt	r6, #2
   129f0:	b	12b64 <__assert_fail@plt+0xf3c>
   129f4:	bl	11a24 <__errno_location@plt>
   129f8:	ldr	r0, [r0]
   129fc:	cmp	r0, #97	; 0x61
   12a00:	bne	12a28 <__assert_fail@plt+0xe00>
   12a04:	ldrh	r3, [r4, #68]	; 0x44
   12a08:	cmp	r3, #10
   12a0c:	bne	12a28 <__assert_fail@plt+0xe00>
   12a10:	ldrb	r3, [r4, #70]	; 0x46
   12a14:	cmp	r3, #0
   12a18:	beq	12a28 <__assert_fail@plt+0xe00>
   12a1c:	mov	r3, #2
   12a20:	strh	r3, [r4, #68]	; 0x44
   12a24:	b	12b64 <__assert_fail@plt+0xf3c>
   12a28:	movw	r3, #58300	; 0xe3bc
   12a2c:	movt	r3, #2
   12a30:	ldrb	r3, [r3]
   12a34:	cmp	r3, #0
   12a38:	bne	12a70 <__assert_fail@plt+0xe48>
   12a3c:	ldr	r3, [r4, #20]
   12a40:	ldr	r2, [r4, #12]
   12a44:	movw	r1, #49816	; 0xc298
   12a48:	movt	r1, #1
   12a4c:	mov	r0, #3
   12a50:	bl	11b14 <syslog@plt>
   12a54:	mov	r0, #1
   12a58:	add	sp, sp, #16
   12a5c:	ldrd	r4, [sp]
   12a60:	ldrd	r6, [sp, #8]
   12a64:	ldr	r8, [sp, #16]
   12a68:	add	sp, sp, #20
   12a6c:	pop	{pc}		; (ldr pc, [sp], #4)
   12a70:	movw	r3, #58288	; 0xe3b0
   12a74:	movt	r3, #2
   12a78:	ldr	r5, [r3]
   12a7c:	ldr	r6, [r4, #12]
   12a80:	ldr	r7, [r4, #20]
   12a84:	bl	1197c <strerror@plt>
   12a88:	str	r0, [sp]
   12a8c:	mov	r3, r7
   12a90:	mov	r2, r6
   12a94:	movw	r1, #49788	; 0xc27c
   12a98:	movt	r1, #1
   12a9c:	mov	r0, r5
   12aa0:	bl	11a0c <fprintf@plt>
   12aa4:	b	12a3c <__assert_fail@plt+0xe14>
   12aa8:	ldrb	r3, [r4, #70]	; 0x46
   12aac:	clz	r3, r3
   12ab0:	lsr	r3, r3, #5
   12ab4:	str	r3, [sp, #8]
   12ab8:	mov	r3, #4
   12abc:	str	r3, [sp]
   12ac0:	add	r3, sp, #8
   12ac4:	mov	r2, #26
   12ac8:	mov	r1, #41	; 0x29
   12acc:	bl	1176c <setsockopt@plt>
   12ad0:	cmp	r0, #0
   12ad4:	bge	12b8c <__assert_fail@plt+0xf64>
   12ad8:	movw	r1, #49836	; 0xc2ac
   12adc:	movt	r1, #1
   12ae0:	mov	r0, #3
   12ae4:	bl	11b14 <syslog@plt>
   12ae8:	b	12b8c <__assert_fail@plt+0xf64>
   12aec:	mov	r3, #4
   12af0:	str	r3, [sp]
   12af4:	add	r3, sp, #12
   12af8:	mov	r2, #2
   12afc:	mov	r1, #1
   12b00:	ldr	r0, [r4, #60]	; 0x3c
   12b04:	bl	1176c <setsockopt@plt>
   12b08:	cmp	r0, #0
   12b0c:	blt	12bf8 <__assert_fail@plt+0xfd0>
   12b10:	ldr	r2, [r4, #200]	; 0xc8
   12b14:	add	r1, r4, #72	; 0x48
   12b18:	ldr	r0, [r4, #60]	; 0x3c
   12b1c:	bl	11a48 <bind@plt>
   12b20:	cmp	r0, #0
   12b24:	bge	12d34 <__assert_fail@plt+0x110c>
   12b28:	bl	11a24 <__errno_location@plt>
   12b2c:	ldr	r0, [r0]
   12b30:	bic	r3, r0, #2
   12b34:	cmp	r3, #97	; 0x61
   12b38:	bne	12c08 <__assert_fail@plt+0xfe0>
   12b3c:	ldrh	r3, [r4, #68]	; 0x44
   12b40:	cmp	r3, #10
   12b44:	bne	12c08 <__assert_fail@plt+0xfe0>
   12b48:	ldrb	r3, [r4, #70]	; 0x46
   12b4c:	cmp	r3, #0
   12b50:	beq	12c08 <__assert_fail@plt+0xfe0>
   12b54:	mov	r3, #2
   12b58:	strh	r3, [r4, #68]	; 0x44
   12b5c:	ldr	r0, [r4, #60]	; 0x3c
   12b60:	bl	11bf8 <close@plt>
   12b64:	mov	r2, #0
   12b68:	ldr	r1, [r4, #16]
   12b6c:	ldrh	r0, [r4, #68]	; 0x44
   12b70:	bl	11bb0 <socket@plt>
   12b74:	str	r0, [r4, #60]	; 0x3c
   12b78:	cmp	r0, #0
   12b7c:	blt	129f4 <__assert_fail@plt+0xdcc>
   12b80:	ldrh	r3, [r4, #68]	; 0x44
   12b84:	cmp	r3, #10
   12b88:	beq	12aa8 <__assert_fail@plt+0xe80>
   12b8c:	mov	r2, #3
   12b90:	mov	r1, r5
   12b94:	ldr	r0, [r4, #20]
   12b98:	bl	11bd4 <strncmp@plt>
   12b9c:	cmp	r0, #0
   12ba0:	bne	12aec <__assert_fail@plt+0xec4>
   12ba4:	ldr	r3, [r6]
   12ba8:	tst	r3, #1
   12bac:	beq	12aec <__assert_fail@plt+0xec4>
   12bb0:	mov	r3, #4
   12bb4:	str	r3, [sp]
   12bb8:	add	r3, sp, #12
   12bbc:	mov	r2, #1
   12bc0:	mov	r1, r2
   12bc4:	ldr	r0, [r4, #60]	; 0x3c
   12bc8:	bl	1176c <setsockopt@plt>
   12bcc:	cmp	r0, #0
   12bd0:	bge	12aec <__assert_fail@plt+0xec4>
   12bd4:	bl	11a24 <__errno_location@plt>
   12bd8:	ldr	r3, [r0]
   12bdc:	cmp	r3, #13
   12be0:	beq	12aec <__assert_fail@plt+0xec4>
   12be4:	movw	r1, #49872	; 0xc2d0
   12be8:	movt	r1, #1
   12bec:	mov	r0, #3
   12bf0:	bl	11b14 <syslog@plt>
   12bf4:	b	12aec <__assert_fail@plt+0xec4>
   12bf8:	mov	r1, r7
   12bfc:	mov	r0, #3
   12c00:	bl	11b14 <syslog@plt>
   12c04:	b	12b10 <__assert_fail@plt+0xee8>
   12c08:	ldr	r5, [r4, #8]
   12c0c:	cmp	r5, #0
   12c10:	beq	12ccc <__assert_fail@plt+0x10a4>
   12c14:	movw	r3, #58300	; 0xe3bc
   12c18:	movt	r3, #2
   12c1c:	ldrb	r3, [r3]
   12c20:	cmp	r3, #0
   12c24:	bne	12c90 <__assert_fail@plt+0x1068>
   12c28:	ldr	r3, [r4, #20]
   12c2c:	str	r3, [sp]
   12c30:	ldr	r3, [r4, #12]
   12c34:	ldr	r2, [r4, #8]
   12c38:	movw	r1, #49964	; 0xc32c
   12c3c:	movt	r1, #1
   12c40:	mov	r0, #3
   12c44:	bl	11b14 <syslog@plt>
   12c48:	ldr	r0, [r4, #60]	; 0x3c
   12c4c:	bl	11bf8 <close@plt>
   12c50:	mvn	r3, #0
   12c54:	str	r3, [r4, #60]	; 0x3c
   12c58:	movw	r3, #58880	; 0xe600
   12c5c:	movt	r3, #2
   12c60:	ldr	r3, [r3]
   12c64:	cmp	r3, #0
   12c68:	movne	r0, #1
   12c6c:	bne	12a58 <__assert_fail@plt+0xe30>
   12c70:	movw	r3, #58880	; 0xe600
   12c74:	movt	r3, #2
   12c78:	mov	r4, #1
   12c7c:	str	r4, [r3]
   12c80:	mov	r0, #600	; 0x258
   12c84:	bl	11880 <alarm@plt>
   12c88:	mov	r0, r4
   12c8c:	b	12a58 <__assert_fail@plt+0xe30>
   12c90:	movw	r3, #58288	; 0xe3b0
   12c94:	movt	r3, #2
   12c98:	ldr	r6, [r3]
   12c9c:	ldr	r7, [r4, #12]
   12ca0:	ldr	r8, [r4, #20]
   12ca4:	bl	1197c <strerror@plt>
   12ca8:	str	r0, [sp, #4]
   12cac:	str	r8, [sp]
   12cb0:	mov	r3, r7
   12cb4:	mov	r2, r5
   12cb8:	movw	r1, #49932	; 0xc30c
   12cbc:	movt	r1, #1
   12cc0:	mov	r0, r6
   12cc4:	bl	11a0c <fprintf@plt>
   12cc8:	b	12c28 <__assert_fail@plt+0x1000>
   12ccc:	movw	r3, #58300	; 0xe3bc
   12cd0:	movt	r3, #2
   12cd4:	ldrb	r3, [r3]
   12cd8:	cmp	r3, #0
   12cdc:	bne	12cfc <__assert_fail@plt+0x10d4>
   12ce0:	ldr	r3, [r4, #20]
   12ce4:	ldr	r2, [r4, #12]
   12ce8:	movw	r1, #50012	; 0xc35c
   12cec:	movt	r1, #1
   12cf0:	mov	r0, #3
   12cf4:	bl	11b14 <syslog@plt>
   12cf8:	b	12c48 <__assert_fail@plt+0x1020>
   12cfc:	movw	r3, #58288	; 0xe3b0
   12d00:	movt	r3, #2
   12d04:	ldr	r5, [r3]
   12d08:	ldr	r6, [r4, #12]
   12d0c:	ldr	r7, [r4, #20]
   12d10:	bl	1197c <strerror@plt>
   12d14:	str	r0, [sp]
   12d18:	mov	r3, r7
   12d1c:	mov	r2, r6
   12d20:	movw	r1, #49984	; 0xc340
   12d24:	movt	r1, #1
   12d28:	mov	r0, r5
   12d2c:	bl	11a0c <fprintf@plt>
   12d30:	b	12ce0 <__assert_fail@plt+0x10b8>
   12d34:	mov	r0, #0
   12d38:	b	12a58 <__assert_fail@plt+0xe30>
   12d3c:	str	r4, [sp, #-8]!
   12d40:	str	lr, [sp, #4]
   12d44:	movw	r3, #58880	; 0xe600
   12d48:	movt	r3, #2
   12d4c:	mov	r2, #0
   12d50:	str	r2, [r3]
   12d54:	movw	r3, #58892	; 0xe60c
   12d58:	movt	r3, #2
   12d5c:	ldr	r4, [r3]
   12d60:	cmp	r4, r2
   12d64:	bne	12d80 <__assert_fail@plt+0x1158>
   12d68:	ldr	r4, [sp]
   12d6c:	add	sp, sp, #4
   12d70:	pop	{pc}		; (ldr pc, [sp], #4)
   12d74:	ldr	r4, [r4, #220]	; 0xdc
   12d78:	cmp	r4, #0
   12d7c:	beq	12d68 <__assert_fail@plt+0x1140>
   12d80:	ldr	r3, [r4, #60]	; 0x3c
   12d84:	cmn	r3, #1
   12d88:	bne	12d74 <__assert_fail@plt+0x114c>
   12d8c:	ldr	r3, [r4, #64]	; 0x40
   12d90:	sub	r3, r3, #1
   12d94:	cmp	r3, #1
   12d98:	bls	12d74 <__assert_fail@plt+0x114c>
   12d9c:	mov	r0, r4
   12da0:	bl	129b8 <__assert_fail@plt+0xd90>
   12da4:	b	12d74 <__assert_fail@plt+0x114c>
   12da8:	mov	r3, #1
   12dac:	strh	r3, [r0, #32]
   12db0:	ldr	r3, [r0, #60]	; 0x3c
   12db4:	cmn	r3, #1
   12db8:	bxne	lr
   12dbc:	str	r4, [sp, #-8]!
   12dc0:	str	lr, [sp, #4]
   12dc4:	mov	r4, r0
   12dc8:	bl	129b8 <__assert_fail@plt+0xd90>
   12dcc:	cmp	r0, #0
   12dd0:	bne	12e68 <__assert_fail@plt+0x1240>
   12dd4:	ldr	r3, [r4, #16]
   12dd8:	cmp	r3, #1
   12ddc:	beq	12e74 <__assert_fail@plt+0x124c>
   12de0:	ldr	r3, [r4, #60]	; 0x3c
   12de4:	add	r2, r3, #31
   12de8:	cmp	r3, #0
   12dec:	movge	r2, r3
   12df0:	asr	r2, r2, #5
   12df4:	movw	r1, #58728	; 0xe568
   12df8:	movt	r1, #2
   12dfc:	rsbs	r0, r3, #0
   12e00:	and	r3, r3, #31
   12e04:	and	r0, r0, #31
   12e08:	rsbpl	r3, r0, #0
   12e0c:	ldr	r0, [r1, r2, lsl #2]
   12e10:	mov	ip, #1
   12e14:	orr	r3, r0, ip, lsl r3
   12e18:	str	r3, [r1, r2, lsl #2]
   12e1c:	movw	r3, #58860	; 0xe5ec
   12e20:	movt	r3, #2
   12e24:	ldr	r2, [r3]
   12e28:	add	r2, r2, ip
   12e2c:	str	r2, [r3]
   12e30:	ldr	r3, [r4, #60]	; 0x3c
   12e34:	movw	r2, #58724	; 0xe564
   12e38:	movt	r2, #2
   12e3c:	ldr	r2, [r2]
   12e40:	cmp	r3, r2
   12e44:	ble	12e54 <__assert_fail@plt+0x122c>
   12e48:	movw	r2, #58724	; 0xe564
   12e4c:	movt	r2, #2
   12e50:	str	r3, [r2]
   12e54:	movw	r2, #58300	; 0xe3bc
   12e58:	movt	r2, #2
   12e5c:	ldrb	r2, [r2]
   12e60:	cmp	r2, #0
   12e64:	bne	12e84 <__assert_fail@plt+0x125c>
   12e68:	ldr	r4, [sp]
   12e6c:	add	sp, sp, #4
   12e70:	pop	{pc}		; (ldr pc, [sp], #4)
   12e74:	mov	r1, #10
   12e78:	ldr	r0, [r4, #60]	; 0x3c
   12e7c:	bl	11af0 <listen@plt>
   12e80:	b	12de0 <__assert_fail@plt+0x11b8>
   12e84:	movw	r0, #58288	; 0xe3b0
   12e88:	movt	r0, #2
   12e8c:	ldr	r2, [r4, #48]	; 0x30
   12e90:	movw	r1, #50028	; 0xc36c
   12e94:	movt	r1, #1
   12e98:	ldr	r0, [r0]
   12e9c:	bl	11a0c <fprintf@plt>
   12ea0:	b	12e68 <__assert_fail@plt+0x1240>
   12ea4:	str	r4, [sp, #-8]!
   12ea8:	str	lr, [sp, #4]
   12eac:	mov	r4, r0
   12eb0:	ldr	r3, [r0, #60]	; 0x3c
   12eb4:	cmp	r3, #0
   12eb8:	bge	12ee0 <__assert_fail@plt+0x12b8>
   12ebc:	mov	r3, #0
   12ec0:	str	r3, [r4, #208]	; 0xd0
   12ec4:	ldr	r3, [r4, #24]
   12ec8:	cmp	r3, #1
   12ecc:	movgt	r3, #1
   12ed0:	strgt	r3, [r4, #24]
   12ed4:	ldr	r4, [sp]
   12ed8:	add	sp, sp, #4
   12edc:	pop	{pc}		; (ldr pc, [sp], #4)
   12ee0:	movw	r2, #58860	; 0xe5ec
   12ee4:	movt	r2, #2
   12ee8:	ldr	r1, [r2]
   12eec:	sub	r1, r1, #1
   12ef0:	str	r1, [r2]
   12ef4:	add	r2, r3, #31
   12ef8:	cmp	r3, #0
   12efc:	movge	r2, r3
   12f00:	asr	r2, r2, #5
   12f04:	movw	r1, #58728	; 0xe568
   12f08:	movt	r1, #2
   12f0c:	rsbs	r0, r3, #0
   12f10:	and	r3, r3, #31
   12f14:	and	r0, r0, #31
   12f18:	rsbpl	r3, r0, #0
   12f1c:	ldr	r0, [r1, r2, lsl #2]
   12f20:	mov	ip, #1
   12f24:	bic	r3, r0, ip, lsl r3
   12f28:	str	r3, [r1, r2, lsl #2]
   12f2c:	ldr	r0, [r4, #60]	; 0x3c
   12f30:	bl	11bf8 <close@plt>
   12f34:	mvn	r3, #0
   12f38:	str	r3, [r4, #60]	; 0x3c
   12f3c:	b	12ebc <__assert_fail@plt+0x1294>
   12f40:	strd	r4, [sp, #-20]!	; 0xffffffec
   12f44:	strd	r6, [sp, #8]
   12f48:	str	lr, [sp, #16]
   12f4c:	sub	sp, sp, #132	; 0x84
   12f50:	mov	r5, r0
   12f54:	movw	r3, #58892	; 0xe60c
   12f58:	movt	r3, #2
   12f5c:	ldr	r4, [r3]
   12f60:	cmp	r4, #0
   12f64:	beq	130fc <__assert_fail@plt+0x14d4>
   12f68:	add	r7, r0, #72	; 0x48
   12f6c:	mov	r6, #128	; 0x80
   12f70:	b	12f80 <__assert_fail@plt+0x1358>
   12f74:	ldr	r4, [r4, #220]	; 0xdc
   12f78:	cmp	r4, #0
   12f7c:	beq	130fc <__assert_fail@plt+0x14d4>
   12f80:	mov	r2, r6
   12f84:	mov	r1, r7
   12f88:	add	r0, r4, #72	; 0x48
   12f8c:	bl	11838 <memcmp@plt>
   12f90:	cmp	r0, #0
   12f94:	bne	12f74 <__assert_fail@plt+0x134c>
   12f98:	ldr	r1, [r5, #12]
   12f9c:	ldr	r0, [r4, #12]
   12fa0:	bl	11754 <strcmp@plt>
   12fa4:	cmp	r0, #0
   12fa8:	bne	12f74 <__assert_fail@plt+0x134c>
   12fac:	ldr	r1, [r5, #20]
   12fb0:	ldr	r0, [r4, #20]
   12fb4:	bl	11754 <strcmp@plt>
   12fb8:	cmp	r0, #0
   12fbc:	bne	12f74 <__assert_fail@plt+0x134c>
   12fc0:	ldr	r2, [r4, #64]	; 0x40
   12fc4:	sub	r2, r2, #1
   12fc8:	ldr	r3, [r5, #64]	; 0x40
   12fcc:	sub	r3, r3, #1
   12fd0:	cmp	r2, #1
   12fd4:	movls	r2, #0
   12fd8:	movhi	r2, #1
   12fdc:	cmp	r3, #1
   12fe0:	movhi	r3, #0
   12fe4:	movls	r3, #1
   12fe8:	cmp	r2, r3
   12fec:	beq	12f74 <__assert_fail@plt+0x134c>
   12ff0:	mov	r0, sp
   12ff4:	bl	12244 <__assert_fail@plt+0x61c>
   12ff8:	ldr	r3, [r5, #44]	; 0x2c
   12ffc:	cmp	r3, #0
   13000:	beq	130ac <__assert_fail@plt+0x1484>
   13004:	ldr	r3, [r5, #36]	; 0x24
   13008:	cmp	r3, #0
   1300c:	beq	1301c <__assert_fail@plt+0x13f4>
   13010:	ldr	r2, [r4, #36]	; 0x24
   13014:	str	r3, [r4, #36]	; 0x24
   13018:	str	r2, [r5, #36]	; 0x24
   1301c:	ldr	r3, [r5, #40]	; 0x28
   13020:	cmp	r3, #0
   13024:	beq	13034 <__assert_fail@plt+0x140c>
   13028:	ldr	r2, [r4, #40]	; 0x28
   1302c:	str	r3, [r4, #40]	; 0x28
   13030:	str	r2, [r5, #40]	; 0x28
   13034:	ldr	r3, [r5, #48]	; 0x30
   13038:	cmp	r3, #0
   1303c:	beq	1304c <__assert_fail@plt+0x1424>
   13040:	ldr	r2, [r4, #48]	; 0x30
   13044:	str	r3, [r4, #48]	; 0x30
   13048:	str	r2, [r5, #48]	; 0x30
   1304c:	ldr	r1, [r4, #52]	; 0x34
   13050:	ldr	r0, [r4, #56]	; 0x38
   13054:	bl	15988 <__assert_fail@plt+0x3d60>
   13058:	ldr	r3, [r5, #56]	; 0x38
   1305c:	str	r3, [r4, #56]	; 0x38
   13060:	ldr	r3, [r5, #52]	; 0x34
   13064:	str	r3, [r4, #52]	; 0x34
   13068:	mov	r3, #0
   1306c:	str	r3, [r5, #56]	; 0x38
   13070:	str	r3, [r5, #52]	; 0x34
   13074:	mov	r3, #1
   13078:	strh	r3, [r4, #32]
   1307c:	mov	r0, sp
   13080:	bl	122a0 <__assert_fail@plt+0x678>
   13084:	movw	r3, #58300	; 0xe3bc
   13088:	movt	r3, #2
   1308c:	ldrb	r3, [r3]
   13090:	cmp	r3, #0
   13094:	beq	131c8 <__assert_fail@plt+0x15a0>
   13098:	mov	r1, r4
   1309c:	movw	r0, #50052	; 0xc384
   130a0:	movt	r0, #1
   130a4:	bl	128c8 <__assert_fail@plt+0xca0>
   130a8:	b	131c8 <__assert_fail@plt+0x15a0>
   130ac:	ldr	r3, [r4, #24]
   130b0:	cmp	r3, #1
   130b4:	beq	130c4 <__assert_fail@plt+0x149c>
   130b8:	ldr	r3, [r5, #24]
   130bc:	cmp	r3, #0
   130c0:	bne	13004 <__assert_fail@plt+0x13dc>
   130c4:	ldr	r3, [r5, #24]
   130c8:	str	r3, [r4, #24]
   130cc:	b	13004 <__assert_fail@plt+0x13dc>
   130d0:	mov	r1, r5
   130d4:	movw	r0, #50060	; 0xc38c
   130d8:	movt	r0, #1
   130dc:	bl	128c8 <__assert_fail@plt+0xca0>
   130e0:	b	13110 <__assert_fail@plt+0x14e8>
   130e4:	movw	r1, #50600	; 0xc5a8
   130e8:	movt	r1, #1
   130ec:	mov	r0, #3
   130f0:	bl	11b14 <syslog@plt>
   130f4:	mvn	r0, #0
   130f8:	bl	119c4 <exit@plt>
   130fc:	movw	r3, #58300	; 0xe3bc
   13100:	movt	r3, #2
   13104:	ldrb	r3, [r3]
   13108:	cmp	r3, #0
   1310c:	bne	130d0 <__assert_fail@plt+0x14a8>
   13110:	mov	r0, #224	; 0xe0
   13114:	bl	176b4 <argp_parse@@Base+0x1384>
   13118:	subs	r4, r0, #0
   1311c:	beq	130e4 <__assert_fail@plt+0x14bc>
   13120:	mov	r2, #224	; 0xe0
   13124:	mov	r1, r5
   13128:	mov	r0, r4
   1312c:	bl	11808 <memcpy@plt>
   13130:	add	r0, r4, #8
   13134:	bl	12890 <__assert_fail@plt+0xc68>
   13138:	add	r0, r4, #12
   1313c:	bl	12890 <__assert_fail@plt+0xc68>
   13140:	add	r0, r4, #20
   13144:	bl	12890 <__assert_fail@plt+0xc68>
   13148:	add	r0, r4, #36	; 0x24
   1314c:	bl	12890 <__assert_fail@plt+0xc68>
   13150:	add	r0, r4, #40	; 0x28
   13154:	bl	12890 <__assert_fail@plt+0xc68>
   13158:	add	r0, r4, #48	; 0x30
   1315c:	bl	12890 <__assert_fail@plt+0xc68>
   13160:	ldr	r1, [r4, #56]	; 0x38
   13164:	lsl	r1, r1, #2
   13168:	add	r0, r4, #52	; 0x34
   1316c:	bl	12830 <__assert_fail@plt+0xc08>
   13170:	ldr	r3, [r4, #56]	; 0x38
   13174:	cmp	r3, #0
   13178:	beq	1319c <__assert_fail@plt+0x1574>
   1317c:	mov	r5, #0
   13180:	ldr	r0, [r4, #52]	; 0x34
   13184:	add	r0, r0, r5, lsl #2
   13188:	bl	12890 <__assert_fail@plt+0xc68>
   1318c:	add	r5, r5, #1
   13190:	ldr	r3, [r4, #56]	; 0x38
   13194:	cmp	r3, r5
   13198:	bhi	13180 <__assert_fail@plt+0x1558>
   1319c:	mvn	r3, #0
   131a0:	str	r3, [r4, #60]	; 0x3c
   131a4:	mov	r0, sp
   131a8:	bl	12244 <__assert_fail@plt+0x61c>
   131ac:	movw	r3, #58892	; 0xe60c
   131b0:	movt	r3, #2
   131b4:	ldr	r2, [r3]
   131b8:	str	r2, [r4, #220]	; 0xdc
   131bc:	str	r4, [r3]
   131c0:	mov	r0, sp
   131c4:	bl	122a0 <__assert_fail@plt+0x678>
   131c8:	mov	r0, r4
   131cc:	add	sp, sp, #132	; 0x84
   131d0:	ldrd	r4, [sp]
   131d4:	ldrd	r6, [sp, #8]
   131d8:	add	sp, sp, #16
   131dc:	pop	{pc}		; (ldr pc, [sp], #4)
   131e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   131e4:	strd	r6, [sp, #8]
   131e8:	str	r8, [sp, #16]
   131ec:	str	lr, [sp, #20]
   131f0:	sub	sp, sp, #32
   131f4:	mov	r4, r0
   131f8:	mov	r6, r1
   131fc:	mov	r7, r2
   13200:	ldr	r5, [r0, #8]
   13204:	cmp	r5, #0
   13208:	beq	1328c <__assert_fail@plt+0x1664>
   1320c:	movw	r1, #50068	; 0xc394
   13210:	movt	r1, #1
   13214:	mov	r0, r5
   13218:	bl	11c1c <strspn@plt>
   1321c:	mov	r8, r0
   13220:	mov	r0, r5
   13224:	bl	119dc <strlen@plt>
   13228:	cmp	r8, r0
   1322c:	beq	13320 <__assert_fail@plt+0x16f8>
   13230:	mov	r1, #58	; 0x3a
   13234:	mov	r0, r5
   13238:	bl	119f4 <strchr@plt>
   1323c:	cmp	r0, #0
   13240:	beq	1325c <__assert_fail@plt+0x1634>
   13244:	movw	r1, #50080	; 0xc3a0
   13248:	movt	r1, #1
   1324c:	mov	r0, r5
   13250:	bl	11c1c <strspn@plt>
   13254:	cmp	r0, #0
   13258:	bne	13320 <__assert_fail@plt+0x16f8>
   1325c:	movw	r3, #58300	; 0xe3bc
   13260:	movt	r3, #2
   13264:	ldrb	r3, [r3]
   13268:	cmp	r3, #0
   1326c:	beq	1328c <__assert_fail@plt+0x1664>
   13270:	movw	r3, #58288	; 0xe3b0
   13274:	movt	r3, #2
   13278:	mov	r2, r5
   1327c:	movw	r1, #50108	; 0xc3bc
   13280:	movt	r1, #1
   13284:	ldr	r0, [r3]
   13288:	bl	11a0c <fprintf@plt>
   1328c:	mov	r3, #0
   13290:	str	r3, [sp, #16]
   13294:	str	r3, [sp, #20]
   13298:	str	r3, [sp, #24]
   1329c:	str	r3, [sp, #28]
   132a0:	mov	r3, #1
   132a4:	str	r3, [sp]
   132a8:	ldrb	r3, [r4, #70]	; 0x46
   132ac:	cmp	r3, #0
   132b0:	beq	132e0 <__assert_fail@plt+0x16b8>
   132b4:	ldrh	r3, [r4, #68]	; 0x44
   132b8:	cmp	r3, #2
   132bc:	movne	r2, #0
   132c0:	beq	132e0 <__assert_fail@plt+0x16b8>
   132c4:	mov	r3, #9
   132c8:	str	r3, [sp]
   132cc:	cmp	r2, #0
   132d0:	beq	132e0 <__assert_fail@plt+0x16b8>
   132d4:	ldr	r3, [sp]
   132d8:	orr	r3, r3, #4
   132dc:	str	r3, [sp]
   132e0:	ldrh	r3, [r4, #68]	; 0x44
   132e4:	str	r3, [sp, #4]
   132e8:	ldr	r3, [r4, #16]
   132ec:	str	r3, [sp, #8]
   132f0:	str	r6, [sp, #12]
   132f4:	mov	r3, r7
   132f8:	mov	r2, sp
   132fc:	ldr	r1, [r4, #12]
   13300:	ldr	r0, [r4, #8]
   13304:	bl	11ba4 <getaddrinfo@plt>
   13308:	add	sp, sp, #32
   1330c:	ldrd	r4, [sp]
   13310:	ldrd	r6, [sp, #8]
   13314:	ldr	r8, [sp, #16]
   13318:	add	sp, sp, #20
   1331c:	pop	{pc}		; (ldr pc, [sp], #4)
   13320:	mov	r3, #0
   13324:	str	r3, [sp, #16]
   13328:	str	r3, [sp, #20]
   1332c:	str	r3, [sp, #24]
   13330:	str	r3, [sp, #28]
   13334:	mov	r3, #1
   13338:	str	r3, [sp]
   1333c:	ldrb	r3, [r4, #70]	; 0x46
   13340:	cmp	r3, #0
   13344:	beq	132d4 <__assert_fail@plt+0x16ac>
   13348:	ldrh	r3, [r4, #68]	; 0x44
   1334c:	cmp	r3, #2
   13350:	movne	r2, #1
   13354:	bne	132c4 <__assert_fail@plt+0x169c>
   13358:	b	132d4 <__assert_fail@plt+0x16ac>
   1335c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   13360:	strd	r6, [sp, #8]
   13364:	strd	r8, [sp, #16]
   13368:	str	lr, [sp, #24]
   1336c:	sub	sp, sp, #20
   13370:	mov	r5, r0
   13374:	ldr	r4, [r0, #20]
   13378:	mov	r2, #3
   1337c:	movw	r1, #49868	; 0xc2cc
   13380:	movt	r1, #1
   13384:	mov	r0, r4
   13388:	bl	11bd4 <strncmp@plt>
   1338c:	cmp	r0, #0
   13390:	beq	13468 <__assert_fail@plt+0x1840>
   13394:	mov	r2, #3
   13398:	movw	r1, #50132	; 0xc3d4
   1339c:	movt	r1, #1
   133a0:	mov	r0, r4
   133a4:	bl	11bd4 <strncmp@plt>
   133a8:	cmp	r0, #0
   133ac:	movweq	r0, #50132	; 0xc3d4
   133b0:	movteq	r0, #1
   133b4:	movne	r0, r4
   133b8:	bl	117a8 <getprotobyname@plt>
   133bc:	mov	r4, r0
   133c0:	cmp	r4, #0
   133c4:	beq	1347c <__assert_fail@plt+0x1854>
   133c8:	add	r2, sp, #12
   133cc:	ldr	r1, [r4, #8]
   133d0:	mov	r0, r5
   133d4:	bl	131e0 <__assert_fail@plt+0x15b8>
   133d8:	mov	r9, r0
   133dc:	cmn	r0, #9
   133e0:	beq	13498 <__assert_fail@plt+0x1870>
   133e4:	cmp	r9, #0
   133e8:	bne	13528 <__assert_fail@plt+0x1900>
   133ec:	ldr	r4, [sp, #12]
   133f0:	cmp	r4, #0
   133f4:	beq	13444 <__assert_fail@plt+0x181c>
   133f8:	add	r6, r5, #72	; 0x48
   133fc:	mov	r8, #128	; 0x80
   13400:	mov	r7, #0
   13404:	mov	r2, r8
   13408:	mov	r1, r7
   1340c:	mov	r0, r6
   13410:	bl	11a54 <memset@plt>
   13414:	ldr	r2, [r4, #16]
   13418:	ldr	r1, [r4, #20]
   1341c:	mov	r0, r6
   13420:	bl	11808 <memcpy@plt>
   13424:	ldr	r3, [r4, #16]
   13428:	str	r3, [r5, #200]	; 0xc8
   1342c:	mov	r0, r5
   13430:	bl	12f40 <__assert_fail@plt+0x1318>
   13434:	bl	12da8 <__assert_fail@plt+0x1180>
   13438:	ldr	r4, [r4, #28]
   1343c:	cmp	r4, #0
   13440:	bne	13404 <__assert_fail@plt+0x17dc>
   13444:	ldr	r0, [sp, #12]
   13448:	bl	11b98 <freeaddrinfo@plt>
   1344c:	mov	r0, r9
   13450:	add	sp, sp, #20
   13454:	ldrd	r4, [sp]
   13458:	ldrd	r6, [sp, #8]
   1345c:	ldrd	r8, [sp, #16]
   13460:	add	sp, sp, #24
   13464:	pop	{pc}		; (ldr pc, [sp], #4)
   13468:	movw	r0, #49868	; 0xc2cc
   1346c:	movt	r0, #1
   13470:	bl	117a8 <getprotobyname@plt>
   13474:	mov	r4, r0
   13478:	b	133c0 <__assert_fail@plt+0x1798>
   1347c:	ldr	r2, [r5, #20]
   13480:	movw	r1, #50136	; 0xc3d8
   13484:	movt	r1, #1
   13488:	mov	r0, #3
   1348c:	bl	11b14 <syslog@plt>
   13490:	mov	r9, #1
   13494:	b	1344c <__assert_fail@plt+0x1824>
   13498:	ldrh	r3, [r5, #68]	; 0x44
   1349c:	cmp	r3, #10
   134a0:	beq	134fc <__assert_fail@plt+0x18d4>
   134a4:	mov	r0, r9
   134a8:	bl	117e4 <gai_strerror@plt>
   134ac:	mov	r4, r0
   134b0:	ldr	r2, [r5, #8]
   134b4:	cmp	r2, #0
   134b8:	beq	13570 <__assert_fail@plt+0x1948>
   134bc:	movw	r3, #58300	; 0xe3bc
   134c0:	movt	r3, #2
   134c4:	ldrb	r3, [r3]
   134c8:	cmp	r3, #0
   134cc:	bne	13544 <__assert_fail@plt+0x191c>
   134d0:	str	r4, [sp, #4]
   134d4:	ldr	r3, [r5, #20]
   134d8:	str	r3, [sp]
   134dc:	ldr	r3, [r5, #12]
   134e0:	ldr	r2, [r5, #8]
   134e4:	movw	r1, #50196	; 0xc414
   134e8:	movt	r1, #1
   134ec:	mov	r0, #3
   134f0:	bl	11b14 <syslog@plt>
   134f4:	mov	r9, #1
   134f8:	b	1344c <__assert_fail@plt+0x1824>
   134fc:	ldrb	r3, [r5, #70]	; 0x46
   13500:	cmp	r3, #0
   13504:	beq	134a4 <__assert_fail@plt+0x187c>
   13508:	mov	r3, #2
   1350c:	strh	r3, [r5, #68]	; 0x44
   13510:	add	r2, sp, #12
   13514:	ldr	r1, [r4, #8]
   13518:	mov	r0, r5
   1351c:	bl	131e0 <__assert_fail@plt+0x15b8>
   13520:	mov	r9, r0
   13524:	b	133e4 <__assert_fail@plt+0x17bc>
   13528:	cmn	r9, #11
   1352c:	bne	134a4 <__assert_fail@plt+0x187c>
   13530:	bl	11a24 <__errno_location@plt>
   13534:	ldr	r0, [r0]
   13538:	bl	1197c <strerror@plt>
   1353c:	mov	r4, r0
   13540:	b	134b0 <__assert_fail@plt+0x1888>
   13544:	movw	r0, #58288	; 0xe3b0
   13548:	movt	r0, #2
   1354c:	str	r4, [sp, #4]
   13550:	ldr	r3, [r5, #20]
   13554:	str	r3, [sp]
   13558:	ldr	r3, [r5, #12]
   1355c:	movw	r1, #50160	; 0xc3f0
   13560:	movt	r1, #1
   13564:	ldr	r0, [r0]
   13568:	bl	11a0c <fprintf@plt>
   1356c:	b	134d0 <__assert_fail@plt+0x18a8>
   13570:	movw	r3, #58300	; 0xe3bc
   13574:	movt	r3, #2
   13578:	ldrb	r3, [r3]
   1357c:	cmp	r3, #0
   13580:	bne	135a8 <__assert_fail@plt+0x1980>
   13584:	str	r4, [sp]
   13588:	ldr	r3, [r5, #20]
   1358c:	ldr	r2, [r5, #12]
   13590:	movw	r1, #50256	; 0xc450
   13594:	movt	r1, #1
   13598:	mov	r0, #3
   1359c:	bl	11b14 <syslog@plt>
   135a0:	mov	r9, #1
   135a4:	b	1344c <__assert_fail@plt+0x1824>
   135a8:	movw	r0, #58288	; 0xe3b0
   135ac:	movt	r0, #2
   135b0:	str	r4, [sp]
   135b4:	ldr	r3, [r5, #20]
   135b8:	ldr	r2, [r5, #12]
   135bc:	movw	r1, #50224	; 0xc430
   135c0:	movt	r1, #1
   135c4:	ldr	r0, [r0]
   135c8:	bl	11a0c <fprintf@plt>
   135cc:	b	13584 <__assert_fail@plt+0x195c>
   135d0:	str	r4, [sp, #-8]!
   135d4:	str	lr, [sp, #4]
   135d8:	movw	r1, #54328	; 0xd438
   135dc:	movt	r1, #1
   135e0:	bl	11b74 <fopen64@plt>
   135e4:	ldr	r4, [sp]
   135e8:	add	sp, sp, #4
   135ec:	pop	{pc}		; (ldr pc, [sp], #4)
   135f0:	cmp	r0, #0
   135f4:	bxeq	lr
   135f8:	str	r4, [sp, #-8]!
   135fc:	str	lr, [sp, #4]
   13600:	bl	11a9c <fclose@plt>
   13604:	ldr	r4, [sp]
   13608:	add	sp, sp, #4
   1360c:	pop	{pc}		; (ldr pc, [sp], #4)
   13610:	str	r4, [sp, #-8]!
   13614:	str	lr, [sp, #4]
   13618:	mov	r4, r0
   1361c:	ldr	r0, [r0, #8]
   13620:	bl	17008 <argp_parse@@Base+0xcd8>
   13624:	ldr	r0, [r4, #12]
   13628:	bl	17008 <argp_parse@@Base+0xcd8>
   1362c:	ldr	r0, [r4, #20]
   13630:	bl	17008 <argp_parse@@Base+0xcd8>
   13634:	ldr	r0, [r4, #36]	; 0x24
   13638:	bl	17008 <argp_parse@@Base+0xcd8>
   1363c:	ldr	r0, [r4, #40]	; 0x28
   13640:	bl	17008 <argp_parse@@Base+0xcd8>
   13644:	ldr	r0, [r4, #48]	; 0x30
   13648:	bl	17008 <argp_parse@@Base+0xcd8>
   1364c:	ldr	r1, [r4, #52]	; 0x34
   13650:	ldr	r0, [r4, #56]	; 0x38
   13654:	bl	15988 <__assert_fail@plt+0x3d60>
   13658:	ldr	r4, [sp]
   1365c:	add	sp, sp, #4
   13660:	pop	{pc}		; (ldr pc, [sp], #4)
   13664:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13668:	strd	r6, [sp, #8]
   1366c:	strd	r8, [sp, #16]
   13670:	str	sl, [sp, #24]
   13674:	str	lr, [sp, #28]
   13678:	mov	r8, r0
   1367c:	movw	r3, #58884	; 0xe604
   13680:	movt	r3, #2
   13684:	ldr	r3, [r3]
   13688:	cmp	r3, #0
   1368c:	beq	13710 <__assert_fail@plt+0x1ae8>
   13690:	movw	r2, #58876	; 0xe5fc
   13694:	movt	r2, #2
   13698:	ldr	r0, [r2]
   1369c:	movw	r1, #50280	; 0xc468
   136a0:	movt	r1, #1
   136a4:	add	r0, r3, r0
   136a8:	bl	11778 <strcspn@plt>
   136ac:	mov	r6, r0
   136b0:	add	r0, r0, #1
   136b4:	bl	176b4 <argp_parse@@Base+0x1384>
   136b8:	mov	r7, r0
   136bc:	str	r0, [r8, #8]
   136c0:	cmp	r0, #0
   136c4:	beq	1372c <__assert_fail@plt+0x1b04>
   136c8:	movw	r3, #58884	; 0xe604
   136cc:	movt	r3, #2
   136d0:	ldr	r9, [r3]
   136d4:	movw	r5, #58876	; 0xe5fc
   136d8:	movt	r5, #2
   136dc:	ldr	r4, [r5]
   136e0:	mov	r2, r6
   136e4:	add	r1, r9, r4
   136e8:	bl	11808 <memcpy@plt>
   136ec:	mov	r3, #0
   136f0:	strb	r3, [r7, r6]
   136f4:	add	r0, r4, r6
   136f8:	str	r0, [r5]
   136fc:	ldrb	r3, [r9, r0]
   13700:	cmp	r3, #0
   13704:	beq	13744 <__assert_fail@plt+0x1b1c>
   13708:	add	r0, r0, #1
   1370c:	str	r0, [r5]
   13710:	mov	r0, r8
   13714:	ldrd	r4, [sp]
   13718:	ldrd	r6, [sp, #8]
   1371c:	ldrd	r8, [sp, #16]
   13720:	ldr	sl, [sp, #24]
   13724:	add	sp, sp, #28
   13728:	pop	{pc}		; (ldr pc, [sp], #4)
   1372c:	movw	r1, #50284	; 0xc46c
   13730:	movt	r1, #1
   13734:	mov	r0, #3
   13738:	bl	11b14 <syslog@plt>
   1373c:	mvn	r0, #0
   13740:	bl	119c4 <exit@plt>
   13744:	mov	r0, r9
   13748:	bl	17008 <argp_parse@@Base+0xcd8>
   1374c:	movw	r3, #58884	; 0xe604
   13750:	movt	r3, #2
   13754:	mov	r2, #0
   13758:	str	r2, [r3]
   1375c:	b	13710 <__assert_fail@plt+0x1ae8>
   13760:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13764:	strd	r6, [sp, #8]
   13768:	strd	r8, [sp, #16]
   1376c:	strd	sl, [sp, #24]
   13770:	str	lr, [sp, #32]
   13774:	sub	sp, sp, #36	; 0x24
   13778:	str	r1, [sp, #12]
   1377c:	mov	r3, #0
   13780:	str	r3, [sp, #28]
   13784:	str	r3, [sp, #24]
   13788:	movw	r3, #58884	; 0xe604
   1378c:	movt	r3, #2
   13790:	ldr	r9, [r3]
   13794:	cmp	r9, #0
   13798:	beq	137c8 <__assert_fail@plt+0x1ba0>
   1379c:	ldr	r0, [pc, #1816]	; 13ebc <__assert_fail@plt+0x2294>
   137a0:	bl	13664 <__assert_fail@plt+0x1a3c>
   137a4:	mov	r9, r0
   137a8:	mov	r0, r9
   137ac:	add	sp, sp, #36	; 0x24
   137b0:	ldrd	r4, [sp]
   137b4:	ldrd	r6, [sp, #8]
   137b8:	ldrd	r8, [sp, #16]
   137bc:	ldrd	sl, [sp, #24]
   137c0:	add	sp, sp, #32
   137c4:	pop	{pc}		; (ldr pc, [sp], #4)
   137c8:	mov	r6, r0
   137cc:	mov	r5, r2
   137d0:	mov	r2, #224	; 0xe0
   137d4:	mov	r1, #0
   137d8:	ldr	r0, [pc, #1756]	; 13ebc <__assert_fail@plt+0x2294>
   137dc:	bl	11a54 <memset@plt>
   137e0:	movw	r4, #58300	; 0xe3bc
   137e4:	movt	r4, #2
   137e8:	movw	sl, #49656	; 0xc1f8
   137ec:	movt	sl, #1
   137f0:	movw	fp, #50324	; 0xc494
   137f4:	movt	fp, #1
   137f8:	ldr	r1, [sp, #24]
   137fc:	ldr	r0, [sp, #28]
   13800:	bl	15988 <__assert_fail@plt+0x3d60>
   13804:	ldr	r0, [pc, #1712]	; 13ebc <__assert_fail@plt+0x2294>
   13808:	bl	13610 <__assert_fail@plt+0x19e8>
   1380c:	mov	r2, #224	; 0xe0
   13810:	mov	r1, #0
   13814:	ldr	r0, [pc, #1696]	; 13ebc <__assert_fail@plt+0x2294>
   13818:	bl	11a54 <memset@plt>
   1381c:	add	r8, r4, #228	; 0xe4
   13820:	add	r7, r4, #232	; 0xe8
   13824:	b	1383c <__assert_fail@plt+0x1c14>
   13828:	ldr	r0, [r4, #232]	; 0xe8
   1382c:	ldrb	r3, [r0]
   13830:	cmp	r3, #0
   13834:	cmpne	r3, #35	; 0x23
   13838:	bne	13884 <__assert_fail@plt+0x1c5c>
   1383c:	mov	r3, r6
   13840:	mov	r2, #10
   13844:	mov	r1, r8
   13848:	mov	r0, r7
   1384c:	bl	1173c <__getdelim@plt>
   13850:	cmp	r0, #0
   13854:	blt	137a8 <__assert_fail@plt+0x1b80>
   13858:	beq	13828 <__assert_fail@plt+0x1c00>
   1385c:	sub	r0, r0, #1
   13860:	ldr	r3, [r4, #232]	; 0xe8
   13864:	ldrb	r2, [r3, r0]
   13868:	cmp	r2, #10
   1386c:	moveq	r2, #0
   13870:	strbeq	r2, [r3, r0]
   13874:	ldr	r3, [r5]
   13878:	add	r3, r3, #1
   1387c:	str	r3, [r5]
   13880:	b	13828 <__assert_fail@plt+0x1c00>
   13884:	add	r3, sp, #24
   13888:	add	r2, sp, #28
   1388c:	mov	r1, sl
   13890:	bl	15760 <__assert_fail@plt+0x3b38>
   13894:	cmp	r0, #0
   13898:	bne	137f8 <__assert_fail@plt+0x1bd0>
   1389c:	ldr	r3, [sp, #28]
   138a0:	cmp	r3, #5
   138a4:	ble	13c34 <__assert_fail@plt+0x200c>
   138a8:	ldr	r3, [sp, #12]
   138ac:	str	r3, [r4, #4]
   138b0:	ldr	r3, [r5]
   138b4:	str	r3, [r4, #8]
   138b8:	ldr	r3, [sp, #24]
   138bc:	ldr	r8, [r3]
   138c0:	mov	r1, #58	; 0x3a
   138c4:	mov	r0, r8
   138c8:	bl	11ae4 <strrchr@plt>
   138cc:	subs	r7, r0, #0
   138d0:	beq	13cc8 <__assert_fail@plt+0x20a0>
   138d4:	mov	r3, #0
   138d8:	strb	r3, [r7], #1
   138dc:	movw	r1, #49684	; 0xc214
   138e0:	movt	r1, #1
   138e4:	mov	r0, r8
   138e8:	bl	11754 <strcmp@plt>
   138ec:	cmp	r0, #0
   138f0:	bne	13d08 <__assert_fail@plt+0x20e0>
   138f4:	mov	r2, #7
   138f8:	ldr	r1, [pc, #1472]	; 13ec0 <__assert_fail@plt+0x2298>
   138fc:	mov	r0, r7
   13900:	bl	11bd4 <strncmp@plt>
   13904:	cmp	r0, #0
   13908:	bne	13d30 <__assert_fail@plt+0x2108>
   1390c:	ldrb	r3, [r7, #7]
   13910:	cmp	r3, #43	; 0x2b
   13914:	addne	r0, r7, #7
   13918:	movne	r3, #1
   1391c:	addeq	r0, r7, #8
   13920:	moveq	r3, #2
   13924:	str	r3, [r4, #68]	; 0x44
   13928:	bl	127e8 <__assert_fail@plt+0xbc0>
   1392c:	str	r0, [r4, #16]
   13930:	ldr	r3, [sp, #24]
   13934:	ldr	r7, [r3, #4]
   13938:	mov	r1, fp
   1393c:	mov	r0, r7
   13940:	bl	11754 <strcmp@plt>
   13944:	cmp	r0, #0
   13948:	moveq	r3, #1
   1394c:	streq	r3, [r4, #20]
   13950:	beq	139d4 <__assert_fail@plt+0x1dac>
   13954:	movw	r1, #50332	; 0xc49c
   13958:	movt	r1, #1
   1395c:	mov	r0, r7
   13960:	bl	11754 <strcmp@plt>
   13964:	cmp	r0, #0
   13968:	moveq	r3, #2
   1396c:	streq	r3, [r4, #20]
   13970:	beq	139d4 <__assert_fail@plt+0x1dac>
   13974:	movw	r1, #50340	; 0xc4a4
   13978:	movt	r1, #1
   1397c:	mov	r0, r7
   13980:	bl	11754 <strcmp@plt>
   13984:	cmp	r0, #0
   13988:	moveq	r3, #4
   1398c:	streq	r3, [r4, #20]
   13990:	beq	139d4 <__assert_fail@plt+0x1dac>
   13994:	movw	r1, #50344	; 0xc4a8
   13998:	movt	r1, #1
   1399c:	mov	r0, r7
   139a0:	bl	11754 <strcmp@plt>
   139a4:	cmp	r0, #0
   139a8:	moveq	r3, #5
   139ac:	streq	r3, [r4, #20]
   139b0:	beq	139d4 <__assert_fail@plt+0x1dac>
   139b4:	movw	r1, #50356	; 0xc4b4
   139b8:	movt	r1, #1
   139bc:	mov	r0, r7
   139c0:	bl	11754 <strcmp@plt>
   139c4:	cmp	r0, #0
   139c8:	bne	13d48 <__assert_fail@plt+0x2120>
   139cc:	mov	r3, #3
   139d0:	str	r3, [r4, #20]
   139d4:	ldr	r3, [sp, #24]
   139d8:	ldr	r0, [r3, #8]
   139dc:	bl	127e8 <__assert_fail@plt+0xbc0>
   139e0:	mov	r7, r0
   139e4:	str	r0, [r4, #24]
   139e8:	mov	r3, #2
   139ec:	strh	r3, [r4, #72]	; 0x48
   139f0:	mov	r3, #1
   139f4:	strb	r3, [r4, #74]	; 0x4a
   139f8:	mov	r2, #3
   139fc:	movw	r1, #49868	; 0xc2cc
   13a00:	movt	r1, #1
   13a04:	bl	11bd4 <strncmp@plt>
   13a08:	cmp	r0, #0
   13a0c:	beq	13a2c <__assert_fail@plt+0x1e04>
   13a10:	mov	r2, #3
   13a14:	movw	r1, #50132	; 0xc3d4
   13a18:	movt	r1, #1
   13a1c:	mov	r0, r7
   13a20:	bl	11bd4 <strncmp@plt>
   13a24:	cmp	r0, #0
   13a28:	bne	13a38 <__assert_fail@plt+0x1e10>
   13a2c:	ldrb	r3, [r7, #3]
   13a30:	cmp	r3, #54	; 0x36
   13a34:	beq	13d6c <__assert_fail@plt+0x2144>
   13a38:	mov	r1, #46	; 0x2e
   13a3c:	ldr	r3, [sp, #24]
   13a40:	ldr	r0, [r3, #12]
   13a44:	bl	119f4 <strchr@plt>
   13a48:	subs	r7, r0, #0
   13a4c:	movne	r3, #0
   13a50:	strbne	r3, [r7], #1
   13a54:	ldr	r3, [sp, #24]
   13a58:	ldr	r8, [r3, #12]
   13a5c:	movw	r1, #50384	; 0xc4d0
   13a60:	movt	r1, #1
   13a64:	mov	r0, r8
   13a68:	bl	11754 <strcmp@plt>
   13a6c:	cmp	r0, #0
   13a70:	moveq	r3, #1
   13a74:	streq	r3, [r4, #28]
   13a78:	beq	13a9c <__assert_fail@plt+0x1e74>
   13a7c:	movw	r1, #50392	; 0xc4d8
   13a80:	movt	r1, #1
   13a84:	mov	r0, r8
   13a88:	bl	11754 <strcmp@plt>
   13a8c:	cmp	r0, #0
   13a90:	bne	13d80 <__assert_fail@plt+0x2158>
   13a94:	mov	r3, #0
   13a98:	str	r3, [r4, #28]
   13a9c:	cmp	r7, #0
   13aa0:	beq	13ac8 <__assert_fail@plt+0x1ea0>
   13aa4:	mov	r2, #10
   13aa8:	add	r1, sp, #20
   13aac:	mov	r0, r7
   13ab0:	bl	119d0 <strtoul@plt>
   13ab4:	str	r0, [r4, #32]
   13ab8:	ldr	r3, [sp, #20]
   13abc:	ldrb	r3, [r3]
   13ac0:	cmp	r3, #0
   13ac4:	bne	13d9c <__assert_fail@plt+0x2174>
   13ac8:	ldr	r3, [r4, #68]	; 0x44
   13acc:	sub	r3, r3, #1
   13ad0:	cmp	r3, #1
   13ad4:	bhi	13b08 <__assert_fail@plt+0x1ee0>
   13ad8:	mov	r3, #0
   13adc:	str	r3, [r4, #28]
   13ae0:	mov	r2, #3
   13ae4:	movw	r1, #49868	; 0xc2cc
   13ae8:	movt	r1, #1
   13aec:	ldr	r0, [r4, #24]
   13af0:	bl	11bd4 <strncmp@plt>
   13af4:	cmp	r0, #0
   13af8:	bne	13dbc <__assert_fail@plt+0x2194>
   13afc:	ldr	r3, [r4, #20]
   13b00:	cmp	r3, #1
   13b04:	bne	13de0 <__assert_fail@plt+0x21b8>
   13b08:	ldr	r3, [sp, #24]
   13b0c:	ldr	r0, [r3, #16]
   13b10:	bl	127e8 <__assert_fail@plt+0xbc0>
   13b14:	mov	r7, r0
   13b18:	str	r0, [r4, #40]	; 0x28
   13b1c:	mov	r1, #58	; 0x3a
   13b20:	bl	119f4 <strchr@plt>
   13b24:	cmp	r0, #0
   13b28:	beq	13e04 <__assert_fail@plt+0x21dc>
   13b2c:	mov	r3, #0
   13b30:	strb	r3, [r0], #1
   13b34:	bl	127e8 <__assert_fail@plt+0xbc0>
   13b38:	str	r0, [r4, #44]	; 0x2c
   13b3c:	ldr	r3, [sp, #24]
   13b40:	ldr	r0, [r3, #20]
   13b44:	bl	127e8 <__assert_fail@plt+0xbc0>
   13b48:	str	r0, [r4, #52]	; 0x34
   13b4c:	movw	r1, #50544	; 0xc570
   13b50:	movt	r1, #1
   13b54:	bl	11754 <strcmp@plt>
   13b58:	cmp	r0, #0
   13b5c:	bne	13e4c <__assert_fail@plt+0x2224>
   13b60:	ldr	r0, [pc, #852]	; 13ebc <__assert_fail@plt+0x2294>
   13b64:	bl	1216c <__assert_fail@plt+0x544>
   13b68:	str	r0, [r4, #48]	; 0x30
   13b6c:	cmp	r0, #0
   13b70:	beq	13e28 <__assert_fail@plt+0x2200>
   13b74:	movw	r3, #58300	; 0xe3bc
   13b78:	movt	r3, #2
   13b7c:	ldrsh	r2, [r0, #10]
   13b80:	str	r2, [r3, #28]
   13b84:	ldr	r0, [sp, #28]
   13b88:	movw	r4, #58300	; 0xe3bc
   13b8c:	movt	r4, #2
   13b90:	sub	r3, r0, #5
   13b94:	str	r3, [r4, #60]	; 0x3c
   13b98:	mov	r1, #4
   13b9c:	sub	r0, r0, #4
   13ba0:	bl	17640 <argp_parse@@Base+0x1310>
   13ba4:	str	r0, [r4, #56]	; 0x38
   13ba8:	cmp	r0, #0
   13bac:	beq	13e60 <__assert_fail@plt+0x2238>
   13bb0:	ldr	r4, [r4, #60]	; 0x3c
   13bb4:	cmp	r4, #0
   13bb8:	beq	13c04 <__assert_fail@plt+0x1fdc>
   13bbc:	mov	r3, #24
   13bc0:	mov	r4, #0
   13bc4:	movw	r2, #58300	; 0xe3bc
   13bc8:	movt	r2, #2
   13bcc:	mov	ip, r4
   13bd0:	ldr	r1, [sp, #24]
   13bd4:	ldr	r0, [r1, r3]
   13bd8:	ldr	r1, [r2, #56]	; 0x38
   13bdc:	str	r0, [r1, r4, lsl #2]
   13be0:	ldr	r1, [sp, #24]
   13be4:	str	ip, [r1, r3]
   13be8:	add	r4, r4, #1
   13bec:	ldr	r1, [r2, #60]	; 0x3c
   13bf0:	add	r3, r3, #4
   13bf4:	cmp	r1, r4
   13bf8:	bhi	13bd0 <__assert_fail@plt+0x1fa8>
   13bfc:	cmp	r1, #1
   13c00:	beq	13e80 <__assert_fail@plt+0x2258>
   13c04:	movw	r5, #58300	; 0xe3bc
   13c08:	movt	r5, #2
   13c0c:	ldr	r3, [r5, #56]	; 0x38
   13c10:	mov	r2, #0
   13c14:	str	r2, [r3, r4, lsl #2]
   13c18:	ldr	r1, [sp, #24]
   13c1c:	ldr	r0, [sp, #28]
   13c20:	bl	15988 <__assert_fail@plt+0x3d60>
   13c24:	add	r0, r5, #4
   13c28:	bl	13664 <__assert_fail@plt+0x1a3c>
   13c2c:	mov	r9, r0
   13c30:	b	137a8 <__assert_fail@plt+0x1b80>
   13c34:	cmp	r3, #1
   13c38:	bne	13c5c <__assert_fail@plt+0x2034>
   13c3c:	ldr	r3, [sp, #24]
   13c40:	ldr	r7, [r3]
   13c44:	mov	r0, r7
   13c48:	bl	119dc <strlen@plt>
   13c4c:	sub	r0, r0, #1
   13c50:	ldrb	r3, [r7, r0]
   13c54:	cmp	r3, #58	; 0x3a
   13c58:	beq	13c78 <__assert_fail@plt+0x2050>
   13c5c:	ldr	r3, [r5]
   13c60:	ldr	r2, [sp, #12]
   13c64:	movw	r1, #50296	; 0xc478
   13c68:	movt	r1, #1
   13c6c:	mov	r0, #3
   13c70:	bl	11b14 <syslog@plt>
   13c74:	b	137f8 <__assert_fail@plt+0x1bd0>
   13c78:	mov	r3, #0
   13c7c:	strb	r3, [r7, r0]
   13c80:	movw	r3, #58896	; 0xe610
   13c84:	movt	r3, #2
   13c88:	ldr	r0, [r3]
   13c8c:	bl	17008 <argp_parse@@Base+0xcd8>
   13c90:	ldr	r3, [sp, #24]
   13c94:	ldr	r7, [r3]
   13c98:	movw	r1, #49684	; 0xc214
   13c9c:	movt	r1, #1
   13ca0:	mov	r0, r7
   13ca4:	bl	11754 <strcmp@plt>
   13ca8:	cmp	r0, #0
   13cac:	beq	137f8 <__assert_fail@plt+0x1bd0>
   13cb0:	mov	r0, r7
   13cb4:	bl	127e8 <__assert_fail@plt+0xbc0>
   13cb8:	movw	r3, #58896	; 0xe610
   13cbc:	movt	r3, #2
   13cc0:	str	r0, [r3]
   13cc4:	b	137f8 <__assert_fail@plt+0x1bd0>
   13cc8:	movw	r3, #58896	; 0xe610
   13ccc:	movt	r3, #2
   13cd0:	ldr	r0, [r3]
   13cd4:	cmp	r0, #0
   13cd8:	beq	13cfc <__assert_fail@plt+0x20d4>
   13cdc:	bl	127e8 <__assert_fail@plt+0xbc0>
   13ce0:	movw	r3, #58884	; 0xe604
   13ce4:	movt	r3, #2
   13ce8:	str	r0, [r3]
   13cec:	movw	r3, #58876	; 0xe5fc
   13cf0:	movt	r3, #2
   13cf4:	mov	r2, #0
   13cf8:	str	r2, [r3]
   13cfc:	ldr	r3, [sp, #24]
   13d00:	ldr	r7, [r3]
   13d04:	b	138f4 <__assert_fail@plt+0x1ccc>
   13d08:	mov	r0, r8
   13d0c:	bl	127e8 <__assert_fail@plt+0xbc0>
   13d10:	movw	r3, #58884	; 0xe604
   13d14:	movt	r3, #2
   13d18:	str	r0, [r3]
   13d1c:	movw	r3, #58876	; 0xe5fc
   13d20:	movt	r3, #2
   13d24:	mov	r2, #0
   13d28:	str	r2, [r3]
   13d2c:	b	138f4 <__assert_fail@plt+0x1ccc>
   13d30:	mov	r0, r7
   13d34:	bl	127e8 <__assert_fail@plt+0xbc0>
   13d38:	str	r0, [r4, #16]
   13d3c:	mov	r3, #0
   13d40:	str	r3, [r4, #68]	; 0x44
   13d44:	b	13930 <__assert_fail@plt+0x1d08>
   13d48:	ldr	r3, [r5]
   13d4c:	ldr	r2, [sp, #12]
   13d50:	movw	r1, #50360	; 0xc4b8
   13d54:	movt	r1, #1
   13d58:	mov	r0, #4
   13d5c:	bl	11b14 <syslog@plt>
   13d60:	mvn	r3, #0
   13d64:	str	r3, [r4, #20]
   13d68:	b	139d4 <__assert_fail@plt+0x1dac>
   13d6c:	mov	r3, #10
   13d70:	strh	r3, [r4, #72]	; 0x48
   13d74:	mov	r3, #0
   13d78:	strb	r3, [r4, #74]	; 0x4a
   13d7c:	b	13a38 <__assert_fail@plt+0x1e10>
   13d80:	ldr	r3, [r5]
   13d84:	ldr	r2, [sp, #12]
   13d88:	movw	r1, #50400	; 0xc4e0
   13d8c:	movt	r1, #1
   13d90:	mov	r0, #4
   13d94:	bl	11b14 <syslog@plt>
   13d98:	b	13a9c <__assert_fail@plt+0x1e74>
   13d9c:	str	r7, [sp]
   13da0:	ldr	r3, [r5]
   13da4:	ldr	r2, [sp, #12]
   13da8:	movw	r1, #50424	; 0xc4f8
   13dac:	movt	r1, #1
   13db0:	mov	r0, #4
   13db4:	bl	11b14 <syslog@plt>
   13db8:	b	13ac8 <__assert_fail@plt+0x1ea0>
   13dbc:	ldr	r3, [r4, #16]
   13dc0:	str	r3, [sp]
   13dc4:	ldr	r3, [r5]
   13dc8:	ldr	r2, [sp, #12]
   13dcc:	movw	r1, #50452	; 0xc514
   13dd0:	movt	r1, #1
   13dd4:	mov	r0, #3
   13dd8:	bl	11b14 <syslog@plt>
   13ddc:	b	137f8 <__assert_fail@plt+0x1bd0>
   13de0:	ldr	r3, [r4, #16]
   13de4:	str	r3, [sp]
   13de8:	ldr	r3, [r5]
   13dec:	ldr	r2, [sp, #12]
   13df0:	movw	r1, #50496	; 0xc540
   13df4:	movt	r1, #1
   13df8:	mov	r0, #3
   13dfc:	bl	11b14 <syslog@plt>
   13e00:	b	137f8 <__assert_fail@plt+0x1bd0>
   13e04:	mov	r1, #46	; 0x2e
   13e08:	mov	r0, r7
   13e0c:	bl	119f4 <strchr@plt>
   13e10:	cmp	r0, #0
   13e14:	bne	13b2c <__assert_fail@plt+0x1f04>
   13e18:	mov	r0, #0
   13e1c:	bl	127e8 <__assert_fail@plt+0xbc0>
   13e20:	str	r0, [r4, #44]	; 0x2c
   13e24:	b	13b3c <__assert_fail@plt+0x1f14>
   13e28:	ldr	r3, [r4, #16]
   13e2c:	str	r3, [sp]
   13e30:	ldr	r3, [r5]
   13e34:	ldr	r2, [sp, #12]
   13e38:	movw	r1, #50556	; 0xc57c
   13e3c:	movt	r1, #1
   13e40:	mov	r0, #3
   13e44:	bl	11b14 <syslog@plt>
   13e48:	b	137f8 <__assert_fail@plt+0x1bd0>
   13e4c:	movw	r3, #58300	; 0xe3bc
   13e50:	movt	r3, #2
   13e54:	mov	r2, #0
   13e58:	str	r2, [r3, #48]	; 0x30
   13e5c:	b	13b84 <__assert_fail@plt+0x1f5c>
   13e60:	ldr	r3, [r5]
   13e64:	ldr	r2, [sp, #12]
   13e68:	movw	r1, #50592	; 0xc5a0
   13e6c:	movt	r1, #1
   13e70:	mov	r0, #3
   13e74:	bl	11b14 <syslog@plt>
   13e78:	mvn	r0, #0
   13e7c:	bl	119c4 <exit@plt>
   13e80:	movw	r3, #58300	; 0xe3bc
   13e84:	movt	r3, #2
   13e88:	ldr	r5, [r3, #52]	; 0x34
   13e8c:	mov	r1, #47	; 0x2f
   13e90:	mov	r0, r5
   13e94:	bl	11ae4 <strrchr@plt>
   13e98:	cmp	r0, #0
   13e9c:	addne	r5, r0, #1
   13ea0:	movw	r3, #58300	; 0xe3bc
   13ea4:	movt	r3, #2
   13ea8:	ldr	r6, [r3, #56]	; 0x38
   13eac:	mov	r0, r5
   13eb0:	bl	127e8 <__assert_fail@plt+0xbc0>
   13eb4:	str	r0, [r6]
   13eb8:	b	13c04 <__assert_fail@plt+0x1fdc>
   13ebc:	andeq	lr, r2, r0, asr #7
   13ec0:	muleq	r2, r4, r2
   13ec4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   13ec8:	strd	r6, [sp, #8]
   13ecc:	strd	r8, [sp, #16]
   13ed0:	str	lr, [sp, #24]
   13ed4:	sub	sp, sp, #148	; 0x94
   13ed8:	mov	r6, r0
   13edc:	mov	r3, #0
   13ee0:	str	r3, [sp, #12]
   13ee4:	bl	135d0 <__assert_fail@plt+0x19a8>
   13ee8:	subs	r5, r0, #0
   13eec:	beq	13f0c <__assert_fail@plt+0x22e4>
   13ef0:	movw	r7, #58884	; 0xe604
   13ef4:	movt	r7, #2
   13ef8:	movw	r9, #50668	; 0xc5ec
   13efc:	movt	r9, #1
   13f00:	movw	r8, #50624	; 0xc5c0
   13f04:	movt	r8, #1
   13f08:	b	13f70 <__assert_fail@plt+0x2348>
   13f0c:	mov	r2, r6
   13f10:	movw	r1, #50616	; 0xc5b8
   13f14:	movt	r1, #1
   13f18:	mov	r0, #3
   13f1c:	bl	11b14 <syslog@plt>
   13f20:	b	140a0 <__assert_fail@plt+0x2478>
   13f24:	ldr	r3, [r4, #20]
   13f28:	ldr	r2, [r4, #12]
   13f2c:	ldr	r1, [r4, #36]	; 0x24
   13f30:	str	r1, [sp]
   13f34:	mov	r1, r8
   13f38:	mov	r0, #3
   13f3c:	bl	11b14 <syslog@plt>
   13f40:	b	13f70 <__assert_fail@plt+0x2348>
   13f44:	ldr	r3, [r4, #64]	; 0x40
   13f48:	sub	r3, r3, #1
   13f4c:	cmp	r3, #1
   13f50:	bls	13fdc <__assert_fail@plt+0x23b4>
   13f54:	mov	r0, r4
   13f58:	bl	1335c <__assert_fail@plt+0x1734>
   13f5c:	ldr	r3, [r7]
   13f60:	cmp	r3, #0
   13f64:	beq	13ff8 <__assert_fail@plt+0x23d0>
   13f68:	ldr	r0, [r4, #8]
   13f6c:	bl	17008 <argp_parse@@Base+0xcd8>
   13f70:	add	r2, sp, #12
   13f74:	mov	r1, r6
   13f78:	mov	r0, r5
   13f7c:	bl	13760 <__assert_fail@plt+0x1b38>
   13f80:	subs	r4, r0, #0
   13f84:	beq	14004 <__assert_fail@plt+0x23dc>
   13f88:	ldr	r0, [r4, #36]	; 0x24
   13f8c:	bl	11748 <getpwnam@plt>
   13f90:	cmp	r0, #0
   13f94:	beq	13f24 <__assert_fail@plt+0x22fc>
   13f98:	ldr	r0, [r4, #40]	; 0x28
   13f9c:	cmp	r0, #0
   13fa0:	beq	13f44 <__assert_fail@plt+0x231c>
   13fa4:	ldrb	r3, [r0]
   13fa8:	cmp	r3, #0
   13fac:	beq	13f44 <__assert_fail@plt+0x231c>
   13fb0:	bl	11c10 <getgrnam@plt>
   13fb4:	cmp	r0, #0
   13fb8:	bne	13f44 <__assert_fail@plt+0x231c>
   13fbc:	ldr	r3, [r4, #20]
   13fc0:	ldr	r2, [r4, #12]
   13fc4:	ldr	r1, [r4, #40]	; 0x28
   13fc8:	str	r1, [sp]
   13fcc:	mov	r1, r9
   13fd0:	mov	r0, #3
   13fd4:	bl	11b14 <syslog@plt>
   13fd8:	b	13f70 <__assert_fail@plt+0x2348>
   13fdc:	mvn	r3, #0
   13fe0:	str	r3, [r4, #60]	; 0x3c
   13fe4:	mov	r3, #1
   13fe8:	strh	r3, [r4, #32]
   13fec:	mov	r0, r4
   13ff0:	bl	12f40 <__assert_fail@plt+0x1318>
   13ff4:	b	13f5c <__assert_fail@plt+0x2334>
   13ff8:	mov	r0, r4
   13ffc:	bl	13610 <__assert_fail@plt+0x19e8>
   14000:	b	13f70 <__assert_fail@plt+0x2348>
   14004:	mov	r0, r5
   14008:	bl	135f0 <__assert_fail@plt+0x19c8>
   1400c:	add	r0, sp, #16
   14010:	bl	12244 <__assert_fail@plt+0x61c>
   14014:	movw	r5, #58892	; 0xe60c
   14018:	movt	r5, #2
   1401c:	movw	r6, #58300	; 0xe3bc
   14020:	movt	r6, #2
   14024:	movw	r7, #50712	; 0xc618
   14028:	movt	r7, #1
   1402c:	b	1404c <__assert_fail@plt+0x2424>
   14030:	ldrb	r3, [r6]
   14034:	cmp	r3, #0
   14038:	bne	14088 <__assert_fail@plt+0x2460>
   1403c:	mov	r0, r4
   14040:	bl	13610 <__assert_fail@plt+0x19e8>
   14044:	mov	r0, r4
   14048:	bl	17008 <argp_parse@@Base+0xcd8>
   1404c:	ldr	r4, [r5]
   14050:	cmp	r4, #0
   14054:	beq	14098 <__assert_fail@plt+0x2470>
   14058:	ldrsh	r3, [r4, #32]
   1405c:	cmp	r3, #0
   14060:	addne	r5, r4, #220	; 0xdc
   14064:	bne	1404c <__assert_fail@plt+0x2424>
   14068:	ldr	r3, [r4, #220]	; 0xdc
   1406c:	str	r3, [r5]
   14070:	ldr	r3, [r4, #60]	; 0x3c
   14074:	cmp	r3, #0
   14078:	blt	14030 <__assert_fail@plt+0x2408>
   1407c:	mov	r0, r4
   14080:	bl	12ea4 <__assert_fail@plt+0x127c>
   14084:	b	14030 <__assert_fail@plt+0x2408>
   14088:	mov	r1, r4
   1408c:	mov	r0, r7
   14090:	bl	128c8 <__assert_fail@plt+0xca0>
   14094:	b	1403c <__assert_fail@plt+0x2414>
   14098:	add	r0, sp, #16
   1409c:	bl	122a0 <__assert_fail@plt+0x678>
   140a0:	add	sp, sp, #148	; 0x94
   140a4:	ldrd	r4, [sp]
   140a8:	ldrd	r6, [sp, #8]
   140ac:	ldrd	r8, [sp, #16]
   140b0:	add	sp, sp, #24
   140b4:	pop	{pc}		; (ldr pc, [sp], #4)
   140b8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   140bc:	strd	r6, [sp, #8]
   140c0:	str	r8, [sp, #16]
   140c4:	str	lr, [sp, #20]
   140c8:	sub	sp, sp, #224	; 0xe0
   140cc:	movw	r3, #58892	; 0xe60c
   140d0:	movt	r3, #2
   140d4:	ldr	r4, [r3]
   140d8:	cmp	r4, #0
   140dc:	beq	14100 <__assert_fail@plt+0x24d8>
   140e0:	mov	r6, #0
   140e4:	mov	r7, r6
   140e8:	movw	r5, #50724	; 0xc624
   140ec:	movt	r5, #1
   140f0:	mov	r8, #1
   140f4:	b	14130 <__assert_fail@plt+0x2508>
   140f8:	cmp	r6, #0
   140fc:	beq	142c8 <__assert_fail@plt+0x26a0>
   14100:	add	sp, sp, #224	; 0xe0
   14104:	ldrd	r4, [sp]
   14108:	ldrd	r6, [sp, #8]
   1410c:	ldr	r8, [sp, #16]
   14110:	add	sp, sp, #20
   14114:	pop	{pc}		; (ldr pc, [sp], #4)
   14118:	cmp	r7, #0
   1411c:	bne	14100 <__assert_fail@plt+0x24d8>
   14120:	mov	r6, r8
   14124:	ldr	r4, [r4, #220]	; 0xdc
   14128:	cmp	r4, #0
   1412c:	beq	14164 <__assert_fail@plt+0x253c>
   14130:	ldrsh	r3, [r4, #32]
   14134:	cmp	r3, #0
   14138:	beq	14124 <__assert_fail@plt+0x24fc>
   1413c:	ldr	r3, [r4, #64]	; 0x40
   14140:	sub	r3, r3, #1
   14144:	cmp	r3, #1
   14148:	bls	140f8 <__assert_fail@plt+0x24d0>
   1414c:	mov	r1, r5
   14150:	ldr	r0, [r4, #12]
   14154:	bl	11754 <strcmp@plt>
   14158:	cmp	r0, #0
   1415c:	beq	14118 <__assert_fail@plt+0x24f0>
   14160:	b	14124 <__assert_fail@plt+0x24fc>
   14164:	eor	r6, r6, #1
   14168:	tst	r7, r6
   1416c:	beq	14100 <__assert_fail@plt+0x24d8>
   14170:	mov	r2, #220	; 0xdc
   14174:	mov	r1, #0
   14178:	add	r0, sp, #4
   1417c:	bl	11a54 <memset@plt>
   14180:	movw	r3, #50720	; 0xc620
   14184:	movt	r3, #1
   14188:	str	r3, [sp]
   1418c:	movw	r0, #50724	; 0xc624
   14190:	movt	r0, #1
   14194:	bl	127e8 <__assert_fail@plt+0xbc0>
   14198:	str	r0, [sp, #12]
   1419c:	mov	r3, #1
   141a0:	str	r3, [sp, #16]
   141a4:	strh	r3, [sp, #32]
   141a8:	movw	r0, #50732	; 0xc62c
   141ac:	movt	r0, #1
   141b0:	bl	127e8 <__assert_fail@plt+0xbc0>
   141b4:	str	r0, [sp, #36]	; 0x24
   141b8:	mov	r0, #0
   141bc:	bl	127e8 <__assert_fail@plt+0xbc0>
   141c0:	str	r0, [sp, #40]	; 0x28
   141c4:	mov	r0, sp
   141c8:	bl	1216c <__assert_fail@plt+0x544>
   141cc:	str	r0, [sp, #44]	; 0x2c
   141d0:	cmp	r0, #0
   141d4:	beq	14250 <__assert_fail@plt+0x2628>
   141d8:	ldrsh	r3, [r0, #10]
   141dc:	str	r3, [sp, #24]
   141e0:	movw	r0, #50544	; 0xc570
   141e4:	movt	r0, #1
   141e8:	bl	127e8 <__assert_fail@plt+0xbc0>
   141ec:	str	r0, [sp, #48]	; 0x30
   141f0:	mvn	r3, #0
   141f4:	str	r3, [sp, #60]	; 0x3c
   141f8:	mov	r3, #0
   141fc:	str	r3, [sp, #64]	; 0x40
   14200:	movw	r0, #50788	; 0xc664
   14204:	movt	r0, #1
   14208:	bl	127e8 <__assert_fail@plt+0xbc0>
   1420c:	str	r0, [sp, #20]
   14210:	mov	r3, #10
   14214:	strh	r3, [sp, #68]	; 0x44
   14218:	mov	r3, #1
   1421c:	strb	r3, [sp, #70]	; 0x46
   14220:	movw	r3, #58300	; 0xe3bc
   14224:	movt	r3, #2
   14228:	ldrb	r3, [r3]
   1422c:	cmp	r3, #0
   14230:	bne	142a4 <__assert_fail@plt+0x267c>
   14234:	movw	r1, #50828	; 0xc68c
   14238:	movt	r1, #1
   1423c:	mov	r0, #6
   14240:	bl	11b14 <syslog@plt>
   14244:	mov	r0, sp
   14248:	bl	1335c <__assert_fail@plt+0x1734>
   1424c:	b	14100 <__assert_fail@plt+0x24d8>
   14250:	mov	r0, sp
   14254:	bl	13610 <__assert_fail@plt+0x19e8>
   14258:	movw	r3, #58300	; 0xe3bc
   1425c:	movt	r3, #2
   14260:	ldrb	r3, [r3]
   14264:	cmp	r3, #0
   14268:	bne	14280 <__assert_fail@plt+0x2658>
   1426c:	movw	r1, #50740	; 0xc634
   14270:	movt	r1, #1
   14274:	mov	r0, #3
   14278:	bl	11b14 <syslog@plt>
   1427c:	b	14100 <__assert_fail@plt+0x24d8>
   14280:	movw	r3, #58288	; 0xe3b0
   14284:	movt	r3, #2
   14288:	ldr	r3, [r3]
   1428c:	mov	r2, #46	; 0x2e
   14290:	mov	r1, #1
   14294:	movw	r0, #50740	; 0xc634
   14298:	movt	r0, #1
   1429c:	bl	118f8 <fwrite@plt>
   142a0:	b	1426c <__assert_fail@plt+0x2644>
   142a4:	movw	r3, #58288	; 0xe3b0
   142a8:	movt	r3, #2
   142ac:	ldr	r3, [r3]
   142b0:	mov	r2, #31
   142b4:	mov	r1, #1
   142b8:	movw	r0, #50796	; 0xc66c
   142bc:	movt	r0, #1
   142c0:	bl	118f8 <fwrite@plt>
   142c4:	b	14234 <__assert_fail@plt+0x260c>
   142c8:	mov	r1, r5
   142cc:	ldr	r0, [r4, #12]
   142d0:	bl	11754 <strcmp@plt>
   142d4:	cmp	r0, #0
   142d8:	beq	14100 <__assert_fail@plt+0x24d8>
   142dc:	mov	r7, r8
   142e0:	b	14124 <__assert_fail@plt+0x24fc>
   142e4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   142e8:	strd	r6, [sp, #8]
   142ec:	strd	r8, [sp, #16]
   142f0:	strd	sl, [sp, #24]
   142f4:	str	lr, [sp, #32]
   142f8:	sub	sp, sp, #212	; 0xd4
   142fc:	mov	r9, r0
   14300:	movw	r3, #58892	; 0xe60c
   14304:	movt	r3, #2
   14308:	ldr	r3, [r3]
   1430c:	cmp	r3, #0
   14310:	beq	14328 <__assert_fail@plt+0x2700>
   14314:	mov	r2, #0
   14318:	strh	r2, [r3, #32]
   1431c:	ldr	r3, [r3, #220]	; 0xdc
   14320:	cmp	r3, #0
   14324:	bne	14318 <__assert_fail@plt+0x26f0>
   14328:	movw	r3, #58888	; 0xe608
   1432c:	movt	r3, #2
   14330:	ldr	r3, [r3]
   14334:	ldr	r1, [r3]
   14338:	cmp	r1, #0
   1433c:	beq	144c4 <__assert_fail@plt+0x289c>
   14340:	mov	r4, #0
   14344:	movw	r7, #58888	; 0xe608
   14348:	movt	r7, #2
   1434c:	movw	sl, #50616	; 0xc5b8
   14350:	movt	sl, #1
   14354:	movw	fp, #50860	; 0xc6ac
   14358:	movt	fp, #1
   1435c:	b	14470 <__assert_fail@plt+0x2848>
   14360:	ldr	r3, [r7]
   14364:	ldr	r0, [r3, r4]
   14368:	bl	11928 <opendir@plt>
   1436c:	subs	r8, r0, #0
   14370:	beq	1445c <__assert_fail@plt+0x2834>
   14374:	mov	r0, r8
   14378:	bl	11b38 <readdir64@plt>
   1437c:	subs	r5, r0, #0
   14380:	beq	14410 <__assert_fail@plt+0x27e8>
   14384:	ldr	r3, [r7]
   14388:	ldr	r0, [r3, r4]
   1438c:	bl	119dc <strlen@plt>
   14390:	mov	r6, r0
   14394:	add	r5, r5, #19
   14398:	mov	r0, r5
   1439c:	bl	119dc <strlen@plt>
   143a0:	add	r0, r6, r0
   143a4:	mov	r1, #1
   143a8:	add	r0, r0, #2
   143ac:	bl	17640 <argp_parse@@Base+0x1310>
   143b0:	subs	r6, r0, #0
   143b4:	beq	14374 <__assert_fail@plt+0x274c>
   143b8:	ldr	r2, [r7]
   143bc:	mov	r3, r5
   143c0:	ldr	r2, [r2, r4]
   143c4:	mov	r1, fp
   143c8:	mov	r0, r6
   143cc:	bl	11b2c <sprintf@plt>
   143d0:	add	r2, sp, #104	; 0x68
   143d4:	mov	r1, r6
   143d8:	mov	r0, #3
   143dc:	bl	11bbc <__xstat64@plt>
   143e0:	cmp	r0, #0
   143e4:	bne	143f8 <__assert_fail@plt+0x27d0>
   143e8:	ldr	r3, [sp, #120]	; 0x78
   143ec:	and	r3, r3, #61440	; 0xf000
   143f0:	cmp	r3, #32768	; 0x8000
   143f4:	beq	14404 <__assert_fail@plt+0x27dc>
   143f8:	mov	r0, r6
   143fc:	bl	17008 <argp_parse@@Base+0xcd8>
   14400:	b	14374 <__assert_fail@plt+0x274c>
   14404:	mov	r0, r6
   14408:	bl	13ec4 <__assert_fail@plt+0x229c>
   1440c:	b	143f8 <__assert_fail@plt+0x27d0>
   14410:	mov	r0, r8
   14414:	bl	11c04 <closedir@plt>
   14418:	b	1445c <__assert_fail@plt+0x2834>
   1441c:	cmp	r9, #0
   14420:	bne	144ac <__assert_fail@plt+0x2884>
   14424:	movw	r3, #58288	; 0xe3b0
   14428:	movt	r3, #2
   1442c:	ldr	r5, [r3]
   14430:	ldr	r3, [r7]
   14434:	ldr	r6, [r3, r4]
   14438:	bl	11a24 <__errno_location@plt>
   1443c:	ldr	r0, [r0]
   14440:	bl	1197c <strerror@plt>
   14444:	mov	r3, r0
   14448:	mov	r2, r6
   1444c:	movw	r1, #50868	; 0xc6b4
   14450:	movt	r1, #1
   14454:	mov	r0, r5
   14458:	bl	11a0c <fprintf@plt>
   1445c:	add	r4, r4, #4
   14460:	ldr	r3, [r7]
   14464:	ldr	r1, [r3, r4]
   14468:	cmp	r1, #0
   1446c:	beq	144c4 <__assert_fail@plt+0x289c>
   14470:	mov	r2, sp
   14474:	mov	r0, #3
   14478:	bl	11bbc <__xstat64@plt>
   1447c:	cmp	r0, #0
   14480:	bne	1441c <__assert_fail@plt+0x27f4>
   14484:	ldr	r3, [sp, #16]
   14488:	and	r3, r3, #61440	; 0xf000
   1448c:	cmp	r3, #16384	; 0x4000
   14490:	beq	14360 <__assert_fail@plt+0x2738>
   14494:	cmp	r3, #32768	; 0x8000
   14498:	bne	1445c <__assert_fail@plt+0x2834>
   1449c:	ldr	r3, [r7]
   144a0:	ldr	r0, [r3, r4]
   144a4:	bl	13ec4 <__assert_fail@plt+0x229c>
   144a8:	b	1445c <__assert_fail@plt+0x2834>
   144ac:	ldr	r3, [r7]
   144b0:	ldr	r2, [r3, r4]
   144b4:	mov	r1, sl
   144b8:	mov	r0, #3
   144bc:	bl	11b14 <syslog@plt>
   144c0:	b	1445c <__assert_fail@plt+0x2834>
   144c4:	movw	r4, #58300	; 0xe3bc
   144c8:	movt	r4, #2
   144cc:	ldr	r0, [r4, #232]	; 0xe8
   144d0:	bl	17008 <argp_parse@@Base+0xcd8>
   144d4:	mov	r3, #0
   144d8:	str	r3, [r4, #232]	; 0xe8
   144dc:	str	r3, [r4, #228]	; 0xe4
   144e0:	bl	140b8 <__assert_fail@plt+0x2490>
   144e4:	add	sp, sp, #212	; 0xd4
   144e8:	ldrd	r4, [sp]
   144ec:	ldrd	r6, [sp, #8]
   144f0:	ldrd	r8, [sp, #16]
   144f4:	ldrd	sl, [sp, #24]
   144f8:	add	sp, sp, #32
   144fc:	pop	{pc}		; (ldr pc, [sp], #4)
   14500:	strd	r4, [sp, #-12]!
   14504:	str	lr, [sp, #8]
   14508:	sub	sp, sp, #316	; 0x13c
   1450c:	mov	r5, r0
   14510:	mov	r0, r1
   14514:	movw	r3, #58868	; 0xe5f4
   14518:	movt	r3, #2
   1451c:	ldr	r3, [r3]
   14520:	ldr	r4, [r3]
   14524:	mov	r3, #128	; 0x80
   14528:	str	r3, [sp, #308]	; 0x134
   1452c:	add	r2, sp, #308	; 0x134
   14530:	add	r1, sp, #180	; 0xb4
   14534:	bl	11b8c <getpeername@plt>
   14538:	cmp	r0, #0
   1453c:	bne	145b0 <__assert_fail@plt+0x2988>
   14540:	mov	r3, #1
   14544:	str	r3, [sp, #8]
   14548:	mov	r3, #0
   1454c:	str	r3, [sp, #4]
   14550:	str	r3, [sp]
   14554:	mov	r3, #80	; 0x50
   14558:	add	r2, sp, #20
   1455c:	mov	r1, #128	; 0x80
   14560:	add	r0, sp, #180	; 0xb4
   14564:	bl	11ad8 <getnameinfo@plt>
   14568:	cmp	r0, #0
   1456c:	bne	14594 <__assert_fail@plt+0x296c>
   14570:	add	r3, sp, #20
   14574:	str	r3, [sp]
   14578:	mov	r3, r5
   1457c:	movw	r2, #50884	; 0xc6c4
   14580:	movt	r2, #1
   14584:	mov	r1, #80	; 0x50
   14588:	add	r0, sp, #100	; 0x64
   1458c:	bl	11a30 <snprintf@plt>
   14590:	b	145c8 <__assert_fail@plt+0x29a0>
   14594:	mov	r3, r5
   14598:	movw	r2, #50896	; 0xc6d0
   1459c:	movt	r2, #1
   145a0:	mov	r1, #80	; 0x50
   145a4:	add	r0, sp, #100	; 0x64
   145a8:	bl	11a30 <snprintf@plt>
   145ac:	b	145c8 <__assert_fail@plt+0x29a0>
   145b0:	mov	r3, r5
   145b4:	movw	r2, #50896	; 0xc6d0
   145b8:	movt	r2, #1
   145bc:	mov	r1, #80	; 0x50
   145c0:	add	r0, sp, #100	; 0x64
   145c4:	bl	11a30 <snprintf@plt>
   145c8:	movw	r5, #58872	; 0xe5f8
   145cc:	movt	r5, #2
   145d0:	ldr	r2, [r5]
   145d4:	sub	r2, r2, r4
   145d8:	add	r1, sp, #100	; 0x64
   145dc:	mov	r0, r4
   145e0:	bl	11a60 <strncpy@plt>
   145e4:	mov	r0, r4
   145e8:	bl	119dc <strlen@plt>
   145ec:	add	r0, r4, r0
   145f0:	ldr	r3, [r5]
   145f4:	cmp	r0, r3
   145f8:	bcs	14614 <__assert_fail@plt+0x29ec>
   145fc:	mov	r1, #32
   14600:	mov	r2, r5
   14604:	strb	r1, [r0], #1
   14608:	ldr	r3, [r2]
   1460c:	cmp	r3, r0
   14610:	bhi	14604 <__assert_fail@plt+0x29dc>
   14614:	add	sp, sp, #316	; 0x13c
   14618:	ldrd	r4, [sp]
   1461c:	add	sp, sp, #8
   14620:	pop	{pc}		; (ldr pc, [sp], #4)
   14624:	strd	r4, [sp, #-12]!
   14628:	str	lr, [sp, #8]
   1462c:	sub	sp, sp, #8192	; 0x2000
   14630:	sub	sp, sp, #4
   14634:	mov	r4, r0
   14638:	ldr	r0, [r1, #12]
   1463c:	mov	r1, r4
   14640:	bl	14500 <__assert_fail@plt+0x28d8>
   14644:	mov	r5, #8192	; 0x2000
   14648:	mov	r2, r5
   1464c:	mov	r1, sp
   14650:	mov	r0, r4
   14654:	bl	1179c <read@plt>
   14658:	subs	r2, r0, #0
   1465c:	ble	14674 <__assert_fail@plt+0x2a4c>
   14660:	mov	r1, sp
   14664:	mov	r0, r4
   14668:	bl	11a84 <write@plt>
   1466c:	cmp	r0, #0
   14670:	bgt	14648 <__assert_fail@plt+0x2a20>
   14674:	mov	r0, #0
   14678:	bl	119c4 <exit@plt>
   1467c:	strd	r4, [sp, #-12]!
   14680:	str	lr, [sp, #8]
   14684:	sub	sp, sp, #8192	; 0x2000
   14688:	sub	sp, sp, #4
   1468c:	mov	r4, r0
   14690:	ldr	r0, [r1, #12]
   14694:	mov	r1, r4
   14698:	bl	14500 <__assert_fail@plt+0x28d8>
   1469c:	mov	r5, #8192	; 0x2000
   146a0:	mov	r2, r5
   146a4:	mov	r1, sp
   146a8:	mov	r0, r4
   146ac:	bl	1179c <read@plt>
   146b0:	cmp	r0, #0
   146b4:	bgt	146a0 <__assert_fail@plt+0x2a78>
   146b8:	beq	146cc <__assert_fail@plt+0x2aa4>
   146bc:	bl	11a24 <__errno_location@plt>
   146c0:	ldr	r3, [r0]
   146c4:	cmp	r3, #4
   146c8:	beq	146a0 <__assert_fail@plt+0x2a78>
   146cc:	mov	r0, #0
   146d0:	bl	119c4 <exit@plt>
   146d4:	str	r4, [sp, #-8]!
   146d8:	str	lr, [sp, #4]
   146dc:	movw	r3, #58856	; 0xe5e8
   146e0:	movt	r3, #2
   146e4:	movw	r2, #58596	; 0xe4e4
   146e8:	movt	r2, #2
   146ec:	str	r2, [r3]
   146f0:	bl	119ac <__ctype_b_loc@plt>
   146f4:	mov	r3, #0
   146f8:	movw	ip, #58856	; 0xe5e8
   146fc:	movt	ip, #2
   14700:	b	14710 <__assert_fail@plt+0x2ae8>
   14704:	add	r3, r3, #1
   14708:	cmp	r3, #129	; 0x81
   1470c:	beq	14738 <__assert_fail@plt+0x2b10>
   14710:	ldr	r1, [r0]
   14714:	lsl	r2, r3, #1
   14718:	ldrh	r2, [r1, r2]
   1471c:	tst	r2, #16384	; 0x4000
   14720:	beq	14704 <__assert_fail@plt+0x2adc>
   14724:	ldr	r2, [ip]
   14728:	add	r1, r2, #1
   1472c:	str	r1, [ip]
   14730:	strb	r3, [r2]
   14734:	b	14704 <__assert_fail@plt+0x2adc>
   14738:	ldr	r4, [sp]
   1473c:	add	sp, sp, #4
   14740:	pop	{pc}		; (ldr pc, [sp], #4)
   14744:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14748:	strd	r6, [sp, #8]
   1474c:	str	r8, [sp, #16]
   14750:	str	lr, [sp, #20]
   14754:	sub	sp, sp, #80	; 0x50
   14758:	mov	r8, r0
   1475c:	ldr	r0, [r1, #12]
   14760:	mov	r1, r8
   14764:	bl	14500 <__assert_fail@plt+0x28d8>
   14768:	movw	r3, #58856	; 0xe5e8
   1476c:	movt	r3, #2
   14770:	ldr	r3, [r3]
   14774:	cmp	r3, #0
   14778:	beq	147a4 <__assert_fail@plt+0x2b7c>
   1477c:	mov	r3, #13
   14780:	strb	r3, [sp, #76]	; 0x4c
   14784:	mov	r3, #10
   14788:	strb	r3, [sp, #77]	; 0x4d
   1478c:	movw	r4, #58596	; 0xe4e4
   14790:	movt	r4, #2
   14794:	movw	r6, #58856	; 0xe5e8
   14798:	movt	r6, #2
   1479c:	mov	r7, r4
   147a0:	b	147f8 <__assert_fail@plt+0x2bd0>
   147a4:	bl	146d4 <__assert_fail@plt+0x2aac>
   147a8:	b	1477c <__assert_fail@plt+0x2b54>
   147ac:	mov	r2, r5
   147b0:	mov	r1, r4
   147b4:	add	r0, sp, #4
   147b8:	bl	11808 <memcpy@plt>
   147bc:	rsb	r2, r5, #72	; 0x48
   147c0:	mov	r1, r7
   147c4:	add	r3, sp, #4
   147c8:	add	r0, r3, r5
   147cc:	bl	11808 <memcpy@plt>
   147d0:	add	r4, r4, #1
   147d4:	ldr	r3, [r6]
   147d8:	cmp	r3, r4
   147dc:	moveq	r4, r7
   147e0:	mov	r2, #74	; 0x4a
   147e4:	add	r1, sp, #4
   147e8:	mov	r0, r8
   147ec:	bl	11a84 <write@plt>
   147f0:	cmp	r0, #74	; 0x4a
   147f4:	bne	1481c <__assert_fail@plt+0x2bf4>
   147f8:	ldr	r5, [r6]
   147fc:	sub	r5, r5, r4
   14800:	cmp	r5, #71	; 0x47
   14804:	ble	147ac <__assert_fail@plt+0x2b84>
   14808:	mov	r2, #72	; 0x48
   1480c:	mov	r1, r4
   14810:	add	r0, sp, #4
   14814:	bl	11808 <memcpy@plt>
   14818:	b	147d0 <__assert_fail@plt+0x2ba8>
   1481c:	mov	r0, #0
   14820:	bl	119c4 <exit@plt>
   14824:	strd	r4, [sp, #-20]!	; 0xffffffec
   14828:	strd	r6, [sp, #8]
   1482c:	str	lr, [sp, #16]
   14830:	sub	sp, sp, #220	; 0xdc
   14834:	mov	r5, r0
   14838:	movw	r3, #58856	; 0xe5e8
   1483c:	movt	r3, #2
   14840:	ldr	r3, [r3]
   14844:	cmp	r3, #0
   14848:	beq	1491c <__assert_fail@plt+0x2cf4>
   1484c:	mov	r3, #128	; 0x80
   14850:	str	r3, [sp, #84]	; 0x54
   14854:	add	r3, sp, #84	; 0x54
   14858:	str	r3, [sp, #4]
   1485c:	add	r3, sp, #88	; 0x58
   14860:	str	r3, [sp]
   14864:	mov	r3, #0
   14868:	mov	r2, #74	; 0x4a
   1486c:	add	r1, sp, #8
   14870:	mov	r0, r5
   14874:	bl	11868 <recvfrom@plt>
   14878:	cmp	r0, #0
   1487c:	blt	14908 <__assert_fail@plt+0x2ce0>
   14880:	movw	r3, #58856	; 0xe5e8
   14884:	movt	r3, #2
   14888:	ldr	r7, [r3]
   1488c:	movw	r3, #58300	; 0xe3bc
   14890:	movt	r3, #2
   14894:	ldr	r4, [r3, #236]	; 0xec
   14898:	sub	r6, r7, r4
   1489c:	cmp	r6, #71	; 0x47
   148a0:	ble	14938 <__assert_fail@plt+0x2d10>
   148a4:	mov	r2, #72	; 0x48
   148a8:	mov	r1, r4
   148ac:	add	r0, sp, #8
   148b0:	bl	117c0 <memmove@plt>
   148b4:	add	r4, r4, #1
   148b8:	cmp	r7, r4
   148bc:	movw	r3, #58300	; 0xe3bc
   148c0:	movt	r3, #2
   148c4:	strne	r4, [r3, #236]	; 0xec
   148c8:	movweq	r2, #58596	; 0xe4e4
   148cc:	movteq	r2, #2
   148d0:	streq	r2, [r3, #236]	; 0xec
   148d4:	mov	r3, #13
   148d8:	strb	r3, [sp, #80]	; 0x50
   148dc:	mov	r3, #10
   148e0:	strb	r3, [sp, #81]	; 0x51
   148e4:	mov	r3, #128	; 0x80
   148e8:	str	r3, [sp, #4]
   148ec:	add	r3, sp, #88	; 0x58
   148f0:	str	r3, [sp]
   148f4:	mov	r3, #0
   148f8:	mov	r2, #74	; 0x4a
   148fc:	add	r1, sp, #8
   14900:	mov	r0, r5
   14904:	bl	11aa8 <sendto@plt>
   14908:	add	sp, sp, #220	; 0xdc
   1490c:	ldrd	r4, [sp]
   14910:	ldrd	r6, [sp, #8]
   14914:	add	sp, sp, #16
   14918:	pop	{pc}		; (ldr pc, [sp], #4)
   1491c:	bl	146d4 <__assert_fail@plt+0x2aac>
   14920:	movw	r3, #58300	; 0xe3bc
   14924:	movt	r3, #2
   14928:	movw	r2, #58596	; 0xe4e4
   1492c:	movt	r2, #2
   14930:	str	r2, [r3, #236]	; 0xec
   14934:	b	1484c <__assert_fail@plt+0x2c24>
   14938:	mov	r2, r6
   1493c:	mov	r1, r4
   14940:	add	r0, sp, #8
   14944:	bl	117c0 <memmove@plt>
   14948:	rsb	r2, r6, #72	; 0x48
   1494c:	movw	r1, #58596	; 0xe4e4
   14950:	movt	r1, #2
   14954:	add	r3, sp, #8
   14958:	add	r0, r3, r6
   1495c:	bl	11808 <memcpy@plt>
   14960:	b	148b4 <__assert_fail@plt+0x2c8c>
   14964:	push	{lr}		; (str lr, [sp, #-4]!)
   14968:	sub	sp, sp, #12
   1496c:	mov	r1, #0
   14970:	mov	r0, sp
   14974:	bl	11910 <gettimeofday@plt>
   14978:	cmp	r0, #0
   1497c:	blt	1499c <__assert_fail@plt+0x2d74>
   14980:	movw	r0, #32384	; 0x7e80
   14984:	movt	r0, #33706	; 0x83aa
   14988:	ldr	r3, [sp]
   1498c:	add	r0, r3, r0
   14990:	rev	r0, r0
   14994:	add	sp, sp, #12
   14998:	pop	{pc}		; (ldr pc, [sp], #4)
   1499c:	movw	r3, #58300	; 0xe3bc
   149a0:	movt	r3, #2
   149a4:	ldrb	r3, [r3]
   149a8:	cmp	r3, #0
   149ac:	moveq	r0, #0
   149b0:	beq	14994 <__assert_fail@plt+0x2d6c>
   149b4:	movw	r3, #58288	; 0xe3b0
   149b8:	movt	r3, #2
   149bc:	ldr	r3, [r3]
   149c0:	mov	r2, #26
   149c4:	mov	r1, #1
   149c8:	movw	r0, #50900	; 0xc6d4
   149cc:	movt	r0, #1
   149d0:	bl	118f8 <fwrite@plt>
   149d4:	mov	r0, #0
   149d8:	b	14994 <__assert_fail@plt+0x2d6c>
   149dc:	str	r4, [sp, #-8]!
   149e0:	str	lr, [sp, #4]
   149e4:	sub	sp, sp, #8
   149e8:	mov	r4, r0
   149ec:	bl	14964 <__assert_fail@plt+0x2d3c>
   149f0:	str	r0, [sp, #4]
   149f4:	mov	r2, #4
   149f8:	add	r1, sp, r2
   149fc:	mov	r0, r4
   14a00:	bl	11a84 <write@plt>
   14a04:	add	sp, sp, #8
   14a08:	ldr	r4, [sp]
   14a0c:	add	sp, sp, #4
   14a10:	pop	{pc}		; (ldr pc, [sp], #4)
   14a14:	str	r4, [sp, #-8]!
   14a18:	str	lr, [sp, #4]
   14a1c:	sub	sp, sp, #144	; 0x90
   14a20:	mov	r4, r0
   14a24:	mov	r3, #128	; 0x80
   14a28:	str	r3, [sp, #8]
   14a2c:	add	r3, sp, #8
   14a30:	str	r3, [sp, #4]
   14a34:	add	r3, sp, #12
   14a38:	str	r3, [sp]
   14a3c:	mov	r3, #0
   14a40:	mov	r2, #4
   14a44:	add	r1, sp, #140	; 0x8c
   14a48:	bl	11868 <recvfrom@plt>
   14a4c:	cmp	r0, #0
   14a50:	blt	14a80 <__assert_fail@plt+0x2e58>
   14a54:	bl	14964 <__assert_fail@plt+0x2d3c>
   14a58:	str	r0, [sp, #140]	; 0x8c
   14a5c:	mov	r3, #128	; 0x80
   14a60:	str	r3, [sp, #4]
   14a64:	add	r3, sp, #12
   14a68:	str	r3, [sp]
   14a6c:	mov	r3, #0
   14a70:	mov	r2, #4
   14a74:	add	r1, sp, #140	; 0x8c
   14a78:	mov	r0, r4
   14a7c:	bl	11aa8 <sendto@plt>
   14a80:	add	sp, sp, #144	; 0x90
   14a84:	ldr	r4, [sp]
   14a88:	add	sp, sp, #4
   14a8c:	pop	{pc}		; (ldr pc, [sp], #4)
   14a90:	strd	r4, [sp, #-16]!
   14a94:	str	r6, [sp, #8]
   14a98:	str	lr, [sp, #12]
   14a9c:	sub	sp, sp, #352	; 0x160
   14aa0:	mov	r6, r0
   14aa4:	mov	r4, r1
   14aa8:	mov	r5, r2
   14aac:	mov	r3, #128	; 0x80
   14ab0:	str	r3, [sp, #20]
   14ab4:	mov	r2, #1
   14ab8:	movw	r1, #50928	; 0xc6f0
   14abc:	movt	r1, #1
   14ac0:	movw	r0, #50932	; 0xc6f4
   14ac4:	movt	r0, #1
   14ac8:	bl	11a00 <setenv@plt>
   14acc:	movw	r0, #50940	; 0xc6fc
   14ad0:	movt	r0, #1
   14ad4:	bl	11bc8 <unsetenv@plt>
   14ad8:	movw	r0, #50952	; 0xc708
   14adc:	movt	r0, #1
   14ae0:	bl	11bc8 <unsetenv@plt>
   14ae4:	movw	r0, #50968	; 0xc718
   14ae8:	movt	r0, #1
   14aec:	bl	11bc8 <unsetenv@plt>
   14af0:	movw	r0, #50984	; 0xc728
   14af4:	movt	r0, #1
   14af8:	bl	11bc8 <unsetenv@plt>
   14afc:	movw	r0, #50996	; 0xc734
   14b00:	movt	r0, #1
   14b04:	bl	11bc8 <unsetenv@plt>
   14b08:	movw	r0, #51012	; 0xc744
   14b0c:	movt	r0, #1
   14b10:	bl	11bc8 <unsetenv@plt>
   14b14:	add	r2, sp, #20
   14b18:	add	r1, sp, #24
   14b1c:	mov	r0, r6
   14b20:	bl	11b50 <getsockname@plt>
   14b24:	cmp	r0, #0
   14b28:	blt	14bc0 <__assert_fail@plt+0x2f98>
   14b2c:	mov	r3, #3
   14b30:	str	r3, [sp, #8]
   14b34:	mov	r3, #16
   14b38:	str	r3, [sp, #4]
   14b3c:	add	r3, sp, #336	; 0x150
   14b40:	str	r3, [sp]
   14b44:	mov	r3, #184	; 0xb8
   14b48:	add	r2, sp, #152	; 0x98
   14b4c:	ldr	r1, [sp, #20]
   14b50:	add	r0, sp, #24
   14b54:	bl	11ad8 <getnameinfo@plt>
   14b58:	cmp	r0, #0
   14b5c:	bne	14ce0 <__assert_fail@plt+0x30b8>
   14b60:	mov	r2, #1
   14b64:	add	r1, sp, #152	; 0x98
   14b68:	movw	r0, #50940	; 0xc6fc
   14b6c:	movt	r0, #1
   14b70:	bl	11a00 <setenv@plt>
   14b74:	cmp	r0, #0
   14b78:	blt	14cac <__assert_fail@plt+0x3084>
   14b7c:	movw	r3, #58300	; 0xe3bc
   14b80:	movt	r3, #2
   14b84:	ldrb	r3, [r3]
   14b88:	cmp	r3, #0
   14b8c:	bne	14cc0 <__assert_fail@plt+0x3098>
   14b90:	mov	r2, #1
   14b94:	add	r1, sp, #336	; 0x150
   14b98:	movw	r0, #50968	; 0xc718
   14b9c:	movt	r0, #1
   14ba0:	bl	11a00 <setenv@plt>
   14ba4:	cmp	r0, #0
   14ba8:	bge	14cf8 <__assert_fail@plt+0x30d0>
   14bac:	movw	r1, #51100	; 0xc79c
   14bb0:	movt	r1, #1
   14bb4:	mov	r0, #4
   14bb8:	bl	11b14 <syslog@plt>
   14bbc:	b	14cf8 <__assert_fail@plt+0x30d0>
   14bc0:	movw	r1, #51028	; 0xc754
   14bc4:	movt	r1, #1
   14bc8:	mov	r0, #4
   14bcc:	bl	11b14 <syslog@plt>
   14bd0:	mov	r3, #3
   14bd4:	str	r3, [sp, #8]
   14bd8:	mov	r3, #16
   14bdc:	str	r3, [sp, #4]
   14be0:	add	r3, sp, #336	; 0x150
   14be4:	str	r3, [sp]
   14be8:	mov	r3, #184	; 0xb8
   14bec:	add	r2, sp, #152	; 0x98
   14bf0:	mov	r1, r5
   14bf4:	mov	r0, r4
   14bf8:	bl	11ad8 <getnameinfo@plt>
   14bfc:	cmp	r0, #0
   14c00:	bne	14e30 <__assert_fail@plt+0x3208>
   14c04:	mov	r2, #1
   14c08:	add	r1, sp, #152	; 0x98
   14c0c:	movw	r0, #50984	; 0xc728
   14c10:	movt	r0, #1
   14c14:	bl	11a00 <setenv@plt>
   14c18:	cmp	r0, #0
   14c1c:	blt	14d84 <__assert_fail@plt+0x315c>
   14c20:	movw	r3, #58300	; 0xe3bc
   14c24:	movt	r3, #2
   14c28:	ldrb	r3, [r3]
   14c2c:	cmp	r3, #0
   14c30:	bne	14d98 <__assert_fail@plt+0x3170>
   14c34:	mov	r2, #1
   14c38:	add	r1, sp, #336	; 0x150
   14c3c:	movw	r0, #50996	; 0xc734
   14c40:	movt	r0, #1
   14c44:	bl	11a00 <setenv@plt>
   14c48:	cmp	r0, #0
   14c4c:	blt	14db8 <__assert_fail@plt+0x3190>
   14c50:	movw	r3, #58300	; 0xe3bc
   14c54:	movt	r3, #2
   14c58:	ldrb	r3, [r3, #2]
   14c5c:	cmp	r3, #0
   14c60:	beq	14e48 <__assert_fail@plt+0x3220>
   14c64:	mov	r3, #0
   14c68:	str	r3, [sp, #8]
   14c6c:	str	r3, [sp, #4]
   14c70:	str	r3, [sp]
   14c74:	mov	r3, #184	; 0xb8
   14c78:	add	r2, sp, #152	; 0x98
   14c7c:	mov	r1, r5
   14c80:	mov	r0, r4
   14c84:	bl	11ad8 <getnameinfo@plt>
   14c88:	cmp	r0, #0
   14c8c:	beq	14dcc <__assert_fail@plt+0x31a4>
   14c90:	bl	117e4 <gai_strerror@plt>
   14c94:	mov	r2, r0
   14c98:	movw	r1, #51128	; 0xc7b8
   14c9c:	movt	r1, #1
   14ca0:	mov	r0, #4
   14ca4:	bl	11b14 <syslog@plt>
   14ca8:	b	14e48 <__assert_fail@plt+0x3220>
   14cac:	movw	r1, #51048	; 0xc768
   14cb0:	movt	r1, #1
   14cb4:	mov	r0, #4
   14cb8:	bl	11b14 <syslog@plt>
   14cbc:	b	14b90 <__assert_fail@plt+0x2f68>
   14cc0:	movw	r3, #58288	; 0xe3b0
   14cc4:	movt	r3, #2
   14cc8:	add	r2, sp, #152	; 0x98
   14ccc:	movw	r1, #51072	; 0xc780
   14cd0:	movt	r1, #1
   14cd4:	ldr	r0, [r3]
   14cd8:	bl	11a0c <fprintf@plt>
   14cdc:	b	14b90 <__assert_fail@plt+0x2f68>
   14ce0:	bl	117e4 <gai_strerror@plt>
   14ce4:	mov	r2, r0
   14ce8:	movw	r1, #51128	; 0xc7b8
   14cec:	movt	r1, #1
   14cf0:	mov	r0, #4
   14cf4:	bl	11b14 <syslog@plt>
   14cf8:	movw	r3, #58300	; 0xe3bc
   14cfc:	movt	r3, #2
   14d00:	ldrb	r3, [r3, #2]
   14d04:	cmp	r3, #0
   14d08:	beq	14bd0 <__assert_fail@plt+0x2fa8>
   14d0c:	mov	r3, #0
   14d10:	str	r3, [sp, #8]
   14d14:	str	r3, [sp, #4]
   14d18:	str	r3, [sp]
   14d1c:	mov	r3, #184	; 0xb8
   14d20:	add	r2, sp, #152	; 0x98
   14d24:	ldr	r1, [sp, #20]
   14d28:	add	r0, sp, #24
   14d2c:	bl	11ad8 <getnameinfo@plt>
   14d30:	cmp	r0, #0
   14d34:	beq	14d54 <__assert_fail@plt+0x312c>
   14d38:	bl	117e4 <gai_strerror@plt>
   14d3c:	mov	r2, r0
   14d40:	movw	r1, #51128	; 0xc7b8
   14d44:	movt	r1, #1
   14d48:	mov	r0, #4
   14d4c:	bl	11b14 <syslog@plt>
   14d50:	b	14bd0 <__assert_fail@plt+0x2fa8>
   14d54:	mov	r2, #1
   14d58:	add	r1, sp, #152	; 0x98
   14d5c:	movw	r0, #50952	; 0xc708
   14d60:	movt	r0, #1
   14d64:	bl	11a00 <setenv@plt>
   14d68:	cmp	r0, #0
   14d6c:	bge	14bd0 <__assert_fail@plt+0x2fa8>
   14d70:	movw	r1, #51144	; 0xc7c8
   14d74:	movt	r1, #1
   14d78:	mov	r0, #4
   14d7c:	bl	11b14 <syslog@plt>
   14d80:	b	14bd0 <__assert_fail@plt+0x2fa8>
   14d84:	movw	r1, #51172	; 0xc7e4
   14d88:	movt	r1, #1
   14d8c:	mov	r0, #4
   14d90:	bl	11b14 <syslog@plt>
   14d94:	b	14c34 <__assert_fail@plt+0x300c>
   14d98:	movw	r3, #58288	; 0xe3b0
   14d9c:	movt	r3, #2
   14da0:	add	r2, sp, #152	; 0x98
   14da4:	movw	r1, #51196	; 0xc7fc
   14da8:	movt	r1, #1
   14dac:	ldr	r0, [r3]
   14db0:	bl	11a0c <fprintf@plt>
   14db4:	b	14c34 <__assert_fail@plt+0x300c>
   14db8:	movw	r1, #51224	; 0xc818
   14dbc:	movt	r1, #1
   14dc0:	mov	r0, #4
   14dc4:	bl	11b14 <syslog@plt>
   14dc8:	b	14c50 <__assert_fail@plt+0x3028>
   14dcc:	mov	r2, #1
   14dd0:	add	r1, sp, #152	; 0x98
   14dd4:	movw	r0, #51012	; 0xc744
   14dd8:	movt	r0, #1
   14ddc:	bl	11a00 <setenv@plt>
   14de0:	cmp	r0, #0
   14de4:	blt	14e1c <__assert_fail@plt+0x31f4>
   14de8:	movw	r3, #58300	; 0xe3bc
   14dec:	movt	r3, #2
   14df0:	ldrb	r3, [r3]
   14df4:	cmp	r3, #0
   14df8:	beq	14e48 <__assert_fail@plt+0x3220>
   14dfc:	movw	r3, #58288	; 0xe3b0
   14e00:	movt	r3, #2
   14e04:	add	r2, sp, #152	; 0x98
   14e08:	movw	r1, #51280	; 0xc850
   14e0c:	movt	r1, #1
   14e10:	ldr	r0, [r3]
   14e14:	bl	11a0c <fprintf@plt>
   14e18:	b	14e48 <__assert_fail@plt+0x3220>
   14e1c:	movw	r1, #51252	; 0xc834
   14e20:	movt	r1, #1
   14e24:	mov	r0, #4
   14e28:	bl	11b14 <syslog@plt>
   14e2c:	b	14e48 <__assert_fail@plt+0x3220>
   14e30:	bl	117e4 <gai_strerror@plt>
   14e34:	mov	r2, r0
   14e38:	movw	r1, #51128	; 0xc7b8
   14e3c:	movt	r1, #1
   14e40:	mov	r0, #4
   14e44:	bl	11b14 <syslog@plt>
   14e48:	add	sp, sp, #352	; 0x160
   14e4c:	ldrd	r4, [sp]
   14e50:	ldr	r6, [sp, #8]
   14e54:	add	sp, sp, #12
   14e58:	pop	{pc}		; (ldr pc, [sp], #4)
   14e5c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14e60:	strd	r6, [sp, #8]
   14e64:	strd	r8, [sp, #16]
   14e68:	strd	sl, [sp, #24]
   14e6c:	str	lr, [sp, #32]
   14e70:	sub	sp, sp, #284	; 0x11c
   14e74:	mov	r6, r0
   14e78:	mov	r4, r1
   14e7c:	mov	r5, r2
   14e80:	ldr	r0, [r1]
   14e84:	bl	17120 <argp_parse@@Base+0xdf0>
   14e88:	movw	r3, #58868	; 0xe5f4
   14e8c:	movt	r3, #2
   14e90:	str	r4, [r3]
   14e94:	cmp	r5, #0
   14e98:	beq	14fac <__assert_fail@plt+0x3384>
   14e9c:	ldr	r3, [r5]
   14ea0:	cmp	r3, #0
   14ea4:	beq	14fac <__assert_fail@plt+0x3384>
   14ea8:	ldr	r3, [r5, #4]!
   14eac:	cmp	r3, #0
   14eb0:	bne	14ea8 <__assert_fail@plt+0x3280>
   14eb4:	ldr	r5, [r5, #-4]
   14eb8:	mov	r0, r5
   14ebc:	bl	119dc <strlen@plt>
   14ec0:	movw	r3, #58872	; 0xe5f8
   14ec4:	movt	r3, #2
   14ec8:	add	r0, r5, r0
   14ecc:	str	r0, [r3]
   14ed0:	movw	r3, #58900	; 0xe614
   14ed4:	movt	r3, #2
   14ed8:	movw	r2, #51312	; 0xc870
   14edc:	movt	r2, #1
   14ee0:	str	r2, [r3]
   14ee4:	movw	r5, #57800	; 0xe1c8
   14ee8:	movt	r5, #2
   14eec:	add	r1, r5, #212	; 0xd4
   14ef0:	movw	r0, #51336	; 0xc888
   14ef4:	movt	r0, #1
   14ef8:	bl	16f1c <argp_parse@@Base+0xbec>
   14efc:	mov	r3, #0
   14f00:	str	r3, [sp, #4]
   14f04:	add	r2, sp, #276	; 0x114
   14f08:	str	r2, [sp]
   14f0c:	mov	r2, r4
   14f10:	mov	r1, r6
   14f14:	add	r0, r5, #252	; 0xfc
   14f18:	bl	16330 <argp_parse@@Base>
   14f1c:	movw	r3, #58300	; 0xe3bc
   14f20:	movt	r3, #2
   14f24:	ldrb	r3, [r3, #2]
   14f28:	cmp	r3, #0
   14f2c:	beq	14f40 <__assert_fail@plt+0x3318>
   14f30:	movw	r3, #58300	; 0xe3bc
   14f34:	movt	r3, #2
   14f38:	mov	r2, #1
   14f3c:	strb	r2, [r3, #1]
   14f40:	ldr	r3, [sp, #276]	; 0x114
   14f44:	cmp	r3, r6
   14f48:	bge	14fc4 <__assert_fail@plt+0x339c>
   14f4c:	sub	r3, r6, r3
   14f50:	mov	r1, #4
   14f54:	add	r0, r3, #1
   14f58:	bl	17640 <argp_parse@@Base+0x1310>
   14f5c:	movw	r3, #58888	; 0xe608
   14f60:	movt	r3, #2
   14f64:	str	r0, [r3]
   14f68:	ldr	r3, [sp, #276]	; 0x114
   14f6c:	cmp	r6, r3
   14f70:	ble	15004 <__assert_fail@plt+0x33dc>
   14f74:	mov	r7, #0
   14f78:	movw	r5, #58888	; 0xe608
   14f7c:	movt	r5, #2
   14f80:	ldr	r8, [r5]
   14f84:	ldr	r0, [r4, r3, lsl #2]
   14f88:	bl	11874 <strdup@plt>
   14f8c:	str	r0, [r8, r7]
   14f90:	ldr	r3, [sp, #276]	; 0x114
   14f94:	add	r3, r3, #1
   14f98:	str	r3, [sp, #276]	; 0x114
   14f9c:	add	r7, r7, #4
   14fa0:	cmp	r3, r6
   14fa4:	blt	14f80 <__assert_fail@plt+0x3358>
   14fa8:	b	15004 <__assert_fail@plt+0x33dc>
   14fac:	ldr	r3, [r4]
   14fb0:	cmp	r3, #0
   14fb4:	moveq	r5, r4
   14fb8:	beq	14eb4 <__assert_fail@plt+0x328c>
   14fbc:	mov	r5, r4
   14fc0:	b	14ea8 <__assert_fail@plt+0x3280>
   14fc4:	mov	r1, #4
   14fc8:	mov	r0, #3
   14fcc:	bl	17640 <argp_parse@@Base+0x1310>
   14fd0:	mov	r6, r0
   14fd4:	movw	r5, #58888	; 0xe608
   14fd8:	movt	r5, #2
   14fdc:	str	r0, [r5]
   14fe0:	movw	r0, #51344	; 0xc890
   14fe4:	movt	r0, #1
   14fe8:	bl	127e8 <__assert_fail@plt+0xbc0>
   14fec:	str	r0, [r6]
   14ff0:	ldr	r5, [r5]
   14ff4:	movw	r0, #51372	; 0xc8ac
   14ff8:	movt	r0, #1
   14ffc:	bl	127e8 <__assert_fail@plt+0xbc0>
   15000:	str	r0, [r5, #4]
   15004:	movw	r3, #58300	; 0xe3bc
   15008:	movt	r3, #2
   1500c:	ldrb	r3, [r3]
   15010:	cmp	r3, #0
   15014:	bne	1502c <__assert_fail@plt+0x3404>
   15018:	mov	r1, #0
   1501c:	mov	r0, r1
   15020:	bl	15cc0 <daemon@@Base>
   15024:	cmp	r0, #0
   15028:	blt	150e4 <__assert_fail@plt+0x34bc>
   1502c:	mov	r2, #24
   15030:	mov	r1, #17
   15034:	movw	r0, #51336	; 0xc888
   15038:	movt	r0, #1
   1503c:	bl	11b44 <openlog@plt>
   15040:	movw	r3, #57800	; 0xe1c8
   15044:	movt	r3, #2
   15048:	ldrb	r3, [r3, #4]
   1504c:	cmp	r3, #0
   15050:	bne	15100 <__assert_fail@plt+0x34d8>
   15054:	movw	r1, #11580	; 0x2d3c
   15058:	movt	r1, #1
   1505c:	mov	r0, #14
   15060:	bl	121e0 <__assert_fail@plt+0x5b8>
   15064:	mov	r0, #0
   15068:	bl	142e4 <__assert_fail@plt+0x26bc>
   1506c:	movw	r1, #17124	; 0x42e4
   15070:	movt	r1, #1
   15074:	mov	r0, #1
   15078:	bl	121e0 <__assert_fail@plt+0x5b8>
   1507c:	movw	r1, #7460	; 0x1d24
   15080:	movt	r1, #1
   15084:	mov	r0, #17
   15088:	bl	121e0 <__assert_fail@plt+0x5b8>
   1508c:	mov	r1, #1
   15090:	mov	r0, #13
   15094:	bl	121e0 <__assert_fail@plt+0x5b8>
   15098:	mov	r2, #99	; 0x63
   1509c:	mov	r1, #120	; 0x78
   150a0:	add	r0, sp, #148	; 0x94
   150a4:	bl	11a54 <memset@plt>
   150a8:	mov	r3, #0
   150ac:	strb	r3, [sp, #247]	; 0xf7
   150b0:	mov	r2, #1
   150b4:	add	r1, sp, #148	; 0x94
   150b8:	movw	r0, #51484	; 0xc91c
   150bc:	movt	r0, #1
   150c0:	bl	11a00 <setenv@plt>
   150c4:	movw	r8, #58860	; 0xe5ec
   150c8:	movt	r8, #2
   150cc:	mov	r6, #0
   150d0:	movw	fp, #58724	; 0xe564
   150d4:	movt	fp, #2
   150d8:	movw	sl, #58300	; 0xe3bc
   150dc:	movt	sl, #2
   150e0:	b	15208 <__assert_fail@plt+0x35e0>
   150e4:	ldr	r2, [r4]
   150e8:	movw	r1, #51396	; 0xc8c4
   150ec:	movt	r1, #1
   150f0:	mov	r0, #27
   150f4:	bl	11b14 <syslog@plt>
   150f8:	mov	r0, #1
   150fc:	bl	119c4 <exit@plt>
   15100:	movw	r3, #57800	; 0xe1c8
   15104:	movt	r3, #2
   15108:	movw	r1, #51432	; 0xc8e8
   1510c:	movt	r1, #1
   15110:	ldr	r0, [r3]
   15114:	bl	11b74 <fopen64@plt>
   15118:	subs	r4, r0, #0
   1511c:	beq	15180 <__assert_fail@plt+0x3558>
   15120:	movw	r3, #58300	; 0xe3bc
   15124:	movt	r3, #2
   15128:	ldrb	r3, [r3]
   1512c:	cmp	r3, #0
   15130:	bne	15158 <__assert_fail@plt+0x3530>
   15134:	bl	119b8 <getpid@plt>
   15138:	mov	r2, r0
   1513c:	movw	r1, #49344	; 0xc0c0
   15140:	movt	r1, #1
   15144:	mov	r0, r4
   15148:	bl	11a0c <fprintf@plt>
   1514c:	mov	r0, r4
   15150:	bl	11a9c <fclose@plt>
   15154:	b	15054 <__assert_fail@plt+0x342c>
   15158:	movw	r2, #57800	; 0xe1c8
   1515c:	movt	r2, #2
   15160:	movw	r3, #58288	; 0xe3b0
   15164:	movt	r3, #2
   15168:	ldr	r2, [r2]
   1516c:	movw	r1, #51436	; 0xc8ec
   15170:	movt	r1, #1
   15174:	ldr	r0, [r3]
   15178:	bl	11a0c <fprintf@plt>
   1517c:	b	15134 <__assert_fail@plt+0x350c>
   15180:	movw	r3, #57800	; 0xe1c8
   15184:	movt	r3, #2
   15188:	ldr	r4, [r3]
   1518c:	bl	11a24 <__errno_location@plt>
   15190:	ldr	r0, [r0]
   15194:	bl	1197c <strerror@plt>
   15198:	mov	r3, r0
   1519c:	mov	r2, r4
   151a0:	movw	r1, #51464	; 0xc908
   151a4:	movt	r1, #1
   151a8:	mov	r0, #2
   151ac:	bl	11b14 <syslog@plt>
   151b0:	b	15054 <__assert_fail@plt+0x342c>
   151b4:	add	r0, sp, #148	; 0x94
   151b8:	bl	11ac0 <sigemptyset@plt>
   151bc:	mov	r0, r6
   151c0:	bl	12244 <__assert_fail@plt+0x61c>
   151c4:	ldr	r3, [r8]
   151c8:	cmp	r3, #0
   151cc:	bne	151e4 <__assert_fail@plt+0x35bc>
   151d0:	add	r0, sp, #148	; 0x94
   151d4:	bl	11a6c <sigsuspend@plt>
   151d8:	ldr	r3, [r8]
   151dc:	cmp	r3, #0
   151e0:	beq	151d0 <__assert_fail@plt+0x35a8>
   151e4:	mov	r0, r6
   151e8:	bl	122a0 <__assert_fail@plt+0x678>
   151ec:	b	15214 <__assert_fail@plt+0x35ec>
   151f0:	movw	r1, #51496	; 0xc928
   151f4:	movt	r1, #1
   151f8:	mov	r0, #4
   151fc:	bl	11b14 <syslog@plt>
   15200:	mov	r0, #1
   15204:	bl	11850 <sleep@plt>
   15208:	ldr	r3, [r8]
   1520c:	cmp	r3, #0
   15210:	beq	151b4 <__assert_fail@plt+0x358c>
   15214:	mov	r2, #128	; 0x80
   15218:	movw	r1, #58728	; 0xe568
   1521c:	movt	r1, #2
   15220:	add	r0, sp, #20
   15224:	bl	11808 <memcpy@plt>
   15228:	ldr	r0, [fp]
   1522c:	str	r6, [sp]
   15230:	mov	r3, r6
   15234:	mov	r2, r6
   15238:	add	r1, sp, #20
   1523c:	add	r0, r0, #1
   15240:	bl	11844 <select@plt>
   15244:	subs	r5, r0, #0
   15248:	bgt	15264 <__assert_fail@plt+0x363c>
   1524c:	bge	15200 <__assert_fail@plt+0x35d8>
   15250:	bl	11a24 <__errno_location@plt>
   15254:	ldr	r3, [r0]
   15258:	cmp	r3, #4
   1525c:	beq	15200 <__assert_fail@plt+0x35d8>
   15260:	b	151f0 <__assert_fail@plt+0x35c8>
   15264:	movw	r3, #58892	; 0xe60c
   15268:	movt	r3, #2
   1526c:	ldr	r4, [r3]
   15270:	cmp	r4, #0
   15274:	beq	15208 <__assert_fail@plt+0x35e0>
   15278:	movw	r3, #51612	; 0xc99c
   1527c:	movt	r3, #1
   15280:	str	r3, [sp, #12]
   15284:	b	1547c <__assert_fail@plt+0x3854>
   15288:	movw	r3, #58288	; 0xe3b0
   1528c:	movt	r3, #2
   15290:	ldr	r2, [r4, #12]
   15294:	movw	r1, #49592	; 0xc1b8
   15298:	movt	r1, #1
   1529c:	ldr	r0, [r3]
   152a0:	bl	11a0c <fprintf@plt>
   152a4:	b	154d0 <__assert_fail@plt+0x38a8>
   152a8:	mov	r3, #128	; 0x80
   152ac:	str	r3, [sp, #16]
   152b0:	add	r2, sp, #16
   152b4:	add	r1, sp, #148	; 0x94
   152b8:	ldr	r0, [r4, #60]	; 0x3c
   152bc:	bl	118e0 <accept@plt>
   152c0:	mov	r9, r0
   152c4:	ldrb	r3, [sl]
   152c8:	cmp	r3, #0
   152cc:	bne	152f8 <__assert_fail@plt+0x36d0>
   152d0:	cmp	r9, #0
   152d4:	blt	15318 <__assert_fail@plt+0x36f0>
   152d8:	ldrb	r3, [sl, #1]
   152dc:	cmp	r3, #0
   152e0:	beq	154ec <__assert_fail@plt+0x38c4>
   152e4:	ldr	r2, [sp, #16]
   152e8:	add	r1, sp, #148	; 0x94
   152ec:	mov	r0, r9
   152f0:	bl	14a90 <__assert_fail@plt+0x2e68>
   152f4:	b	154ec <__assert_fail@plt+0x38c4>
   152f8:	movw	r3, #58288	; 0xe3b0
   152fc:	movt	r3, #2
   15300:	mov	r2, r0
   15304:	movw	r1, #51508	; 0xc934
   15308:	movt	r1, #1
   1530c:	ldr	r0, [r3]
   15310:	bl	11a0c <fprintf@plt>
   15314:	b	152d0 <__assert_fail@plt+0x36a8>
   15318:	bl	11a24 <__errno_location@plt>
   1531c:	ldr	r3, [r0]
   15320:	cmp	r3, #4
   15324:	beq	1546c <__assert_fail@plt+0x3844>
   15328:	ldr	r2, [r4, #12]
   1532c:	movw	r1, #51528	; 0xc948
   15330:	movt	r1, #1
   15334:	mov	r0, #4
   15338:	bl	11b14 <syslog@plt>
   1533c:	b	1546c <__assert_fail@plt+0x3844>
   15340:	mov	r1, r6
   15344:	add	r0, r4, #212	; 0xd4
   15348:	bl	11910 <gettimeofday@plt>
   1534c:	b	15574 <__assert_fail@plt+0x394c>
   15350:	ldr	r3, [r4, #20]
   15354:	ldr	r2, [r4, #12]
   15358:	movw	r1, #51548	; 0xc95c
   1535c:	movt	r1, #1
   15360:	mov	r0, #3
   15364:	bl	11b14 <syslog@plt>
   15368:	mov	r0, r4
   1536c:	bl	12ea4 <__assert_fail@plt+0x127c>
   15370:	ldr	r3, [r4, #24]
   15374:	cmp	r3, #0
   15378:	bne	15388 <__assert_fail@plt+0x3760>
   1537c:	ldr	r3, [r4, #16]
   15380:	cmp	r3, #1
   15384:	beq	153c0 <__assert_fail@plt+0x3798>
   15388:	mov	r0, r6
   1538c:	bl	122a0 <__assert_fail@plt+0x678>
   15390:	movw	r3, #58880	; 0xe600
   15394:	movt	r3, #2
   15398:	ldr	r3, [r3]
   1539c:	cmp	r3, #0
   153a0:	bne	1546c <__assert_fail@plt+0x3844>
   153a4:	movw	r3, #58880	; 0xe600
   153a8:	movt	r3, #2
   153ac:	mov	r2, #1
   153b0:	str	r2, [r3]
   153b4:	mov	r0, #600	; 0x258
   153b8:	bl	11880 <alarm@plt>
   153bc:	b	1546c <__assert_fail@plt+0x3844>
   153c0:	mov	r0, r9
   153c4:	bl	11bf8 <close@plt>
   153c8:	b	15388 <__assert_fail@plt+0x3760>
   153cc:	movw	r1, #51600	; 0xc990
   153d0:	movt	r1, #1
   153d4:	mov	r0, #3
   153d8:	bl	11b14 <syslog@plt>
   153dc:	ldr	r3, [r4, #24]
   153e0:	cmp	r3, #0
   153e4:	bne	153f4 <__assert_fail@plt+0x37cc>
   153e8:	ldr	r3, [r4, #16]
   153ec:	cmp	r3, #1
   153f0:	beq	15408 <__assert_fail@plt+0x37e0>
   153f4:	mov	r0, r6
   153f8:	bl	122a0 <__assert_fail@plt+0x678>
   153fc:	mov	r0, #1
   15400:	bl	11850 <sleep@plt>
   15404:	b	1546c <__assert_fail@plt+0x3844>
   15408:	mov	r0, r9
   1540c:	bl	11bf8 <close@plt>
   15410:	b	153f4 <__assert_fail@plt+0x37cc>
   15414:	sub	r7, r7, #1
   15418:	cmp	r7, #2
   1541c:	beq	15448 <__assert_fail@plt+0x3820>
   15420:	cmp	r9, r7
   15424:	beq	15414 <__assert_fail@plt+0x37ec>
   15428:	mov	r0, r7
   1542c:	bl	11bf8 <close@plt>
   15430:	b	15414 <__assert_fail@plt+0x37ec>
   15434:	mov	r0, r9
   15438:	bl	11bf8 <close@plt>
   1543c:	b	1546c <__assert_fail@plt+0x3844>
   15440:	mov	r0, r6
   15444:	bl	122a0 <__assert_fail@plt+0x678>
   15448:	mov	r1, r4
   1544c:	mov	r0, r9
   15450:	bl	122e0 <__assert_fail@plt+0x6b8>
   15454:	ldr	r3, [r4, #24]
   15458:	cmp	r3, #0
   1545c:	bne	1546c <__assert_fail@plt+0x3844>
   15460:	ldr	r3, [r4, #16]
   15464:	cmp	r3, #1
   15468:	beq	15434 <__assert_fail@plt+0x380c>
   1546c:	ldr	r4, [r4, #220]	; 0xdc
   15470:	cmp	r5, #0
   15474:	cmpne	r4, #0
   15478:	beq	15208 <__assert_fail@plt+0x35e0>
   1547c:	ldr	r3, [r4, #60]	; 0x3c
   15480:	cmn	r3, #1
   15484:	beq	1546c <__assert_fail@plt+0x3844>
   15488:	add	r2, r3, #31
   1548c:	cmp	r3, #0
   15490:	movge	r2, r3
   15494:	asr	r2, r2, #5
   15498:	add	r1, sp, #280	; 0x118
   1549c:	add	r2, r1, r2, lsl #2
   154a0:	rsbs	r1, r3, #0
   154a4:	and	r3, r3, #31
   154a8:	and	r1, r1, #31
   154ac:	rsbpl	r3, r1, #0
   154b0:	ldr	r2, [r2, #-260]	; 0xfffffefc
   154b4:	mov	r1, #1
   154b8:	ands	r3, r2, r1, lsl r3
   154bc:	beq	1546c <__assert_fail@plt+0x3844>
   154c0:	sub	r5, r5, #1
   154c4:	ldrb	r3, [sl]
   154c8:	cmp	r3, #0
   154cc:	bne	15288 <__assert_fail@plt+0x3660>
   154d0:	ldr	r3, [r4, #24]
   154d4:	cmp	r3, #0
   154d8:	bne	154e8 <__assert_fail@plt+0x38c0>
   154dc:	ldr	r3, [r4, #16]
   154e0:	cmp	r3, #1
   154e4:	beq	152a8 <__assert_fail@plt+0x3680>
   154e8:	ldr	r9, [r4, #60]	; 0x3c
   154ec:	mov	r0, r6
   154f0:	bl	12244 <__assert_fail@plt+0x61c>
   154f4:	ldr	r3, [r4, #44]	; 0x2c
   154f8:	cmp	r3, #0
   154fc:	beq	1550c <__assert_fail@plt+0x38e4>
   15500:	ldrsh	r3, [r3, #8]
   15504:	cmp	r3, #0
   15508:	beq	15440 <__assert_fail@plt+0x3818>
   1550c:	ldr	r2, [r4, #208]	; 0xd0
   15510:	add	r3, r2, #1
   15514:	str	r3, [r4, #208]	; 0xd0
   15518:	cmp	r2, #0
   1551c:	beq	15340 <__assert_fail@plt+0x3718>
   15520:	ldr	r2, [r4, #28]
   15524:	cmp	r2, #0
   15528:	cmpne	r3, r2
   1552c:	bhi	15544 <__assert_fail@plt+0x391c>
   15530:	movw	r2, #57800	; 0xe1c8
   15534:	movt	r2, #2
   15538:	ldr	r2, [r2, #8]
   1553c:	cmp	r3, r2
   15540:	bcc	15574 <__assert_fail@plt+0x394c>
   15544:	mov	r1, r6
   15548:	add	r0, sp, #148	; 0x94
   1554c:	bl	11910 <gettimeofday@plt>
   15550:	ldr	r2, [r4, #212]	; 0xd4
   15554:	ldr	r3, [sp, #148]	; 0x94
   15558:	sub	r3, r3, r2
   1555c:	cmp	r3, #60	; 0x3c
   15560:	ble	15350 <__assert_fail@plt+0x3728>
   15564:	ldrd	r2, [sp, #148]	; 0x94
   15568:	strd	r2, [r4, #212]	; 0xd4
   1556c:	mov	r3, #1
   15570:	str	r3, [r4, #208]	; 0xd0
   15574:	bl	11acc <fork@plt>
   15578:	cmp	r0, #0
   1557c:	blt	153cc <__assert_fail@plt+0x37a4>
   15580:	cmp	r0, #0
   15584:	beq	155f4 <__assert_fail@plt+0x39cc>
   15588:	ldr	r3, [r4, #24]
   1558c:	cmp	r3, #0
   15590:	beq	155e8 <__assert_fail@plt+0x39c0>
   15594:	str	r0, [r4, #24]
   15598:	ldr	r3, [r4, #60]	; 0x3c
   1559c:	cmp	r3, #0
   155a0:	blt	155e8 <__assert_fail@plt+0x39c0>
   155a4:	add	r2, r3, #31
   155a8:	cmp	r3, #0
   155ac:	movge	r2, r3
   155b0:	asr	r2, r2, #5
   155b4:	movw	r1, #58728	; 0xe568
   155b8:	movt	r1, #2
   155bc:	rsbs	r0, r3, #0
   155c0:	and	r3, r3, #31
   155c4:	and	r0, r0, #31
   155c8:	rsbpl	r3, r0, #0
   155cc:	ldr	r0, [r1, r2, lsl #2]
   155d0:	mov	ip, #1
   155d4:	bic	r3, r0, ip, lsl r3
   155d8:	str	r3, [r1, r2, lsl #2]
   155dc:	ldr	r3, [r8]
   155e0:	sub	r3, r3, #1
   155e4:	str	r3, [r8]
   155e8:	mov	r0, r6
   155ec:	bl	122a0 <__assert_fail@plt+0x678>
   155f0:	b	15454 <__assert_fail@plt+0x382c>
   155f4:	mov	r0, r6
   155f8:	bl	122a0 <__assert_fail@plt+0x678>
   155fc:	ldrb	r3, [sl]
   15600:	cmp	r3, #0
   15604:	beq	15630 <__assert_fail@plt+0x3a08>
   15608:	bl	119e8 <setsid@plt>
   1560c:	ldrb	r3, [sl]
   15610:	cmp	r3, #0
   15614:	beq	15630 <__assert_fail@plt+0x3a08>
   15618:	movw	r3, #58288	; 0xe3b0
   1561c:	movt	r3, #2
   15620:	ldr	r2, [fp]
   15624:	ldr	r1, [sp, #12]
   15628:	ldr	r0, [r3]
   1562c:	bl	11a0c <fprintf@plt>
   15630:	ldr	r7, [fp]
   15634:	cmp	r7, #2
   15638:	bgt	15420 <__assert_fail@plt+0x37f8>
   1563c:	b	15448 <__assert_fail@plt+0x3820>
   15640:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15644:	strd	r6, [sp, #8]
   15648:	strd	r8, [sp, #16]
   1564c:	str	sl, [sp, #24]
   15650:	str	lr, [sp, #28]
   15654:	ldr	r6, [sp, #36]	; 0x24
   15658:	ldr	r4, [r6]
   1565c:	cmp	r4, r0
   15660:	bge	156a0 <__assert_fail@plt+0x3a78>
   15664:	add	ip, r1, r4
   15668:	ldrb	lr, [r1, r4]
   1566c:	cmp	lr, #9
   15670:	cmpne	lr, #32
   15674:	bne	156a0 <__assert_fail@plt+0x3a78>
   15678:	sub	r5, r1, #1
   1567c:	add	r5, r5, r0
   15680:	rsb	r7, r1, #1
   15684:	add	r4, r7, ip
   15688:	cmp	ip, r5
   1568c:	beq	156a0 <__assert_fail@plt+0x3a78>
   15690:	ldrb	lr, [ip, #1]!
   15694:	cmp	lr, #9
   15698:	cmpne	lr, #32
   1569c:	beq	15684 <__assert_fail@plt+0x3a5c>
   156a0:	str	r4, [r3]
   156a4:	add	r3, r1, r4
   156a8:	ldrb	lr, [r1, r4]
   156ac:	cmp	lr, #34	; 0x22
   156b0:	beq	1570c <__assert_fail@plt+0x3ae4>
   156b4:	cmp	lr, #39	; 0x27
   156b8:	beq	1570c <__assert_fail@plt+0x3ae4>
   156bc:	add	r7, r1, r4
   156c0:	ldrb	r1, [r1, r4]
   156c4:	cmp	r1, #34	; 0x22
   156c8:	beq	156e4 <__assert_fail@plt+0x3abc>
   156cc:	mov	r8, r2
   156d0:	mov	r9, r0
   156d4:	mov	r0, r2
   156d8:	bl	119f4 <strchr@plt>
   156dc:	cmp	r0, #0
   156e0:	beq	1572c <__assert_fail@plt+0x3b04>
   156e4:	ldr	r3, [sp, #32]
   156e8:	str	r4, [r3]
   156ec:	add	r0, r4, #1
   156f0:	str	r0, [r6]
   156f4:	ldrd	r4, [sp]
   156f8:	ldrd	r6, [sp, #8]
   156fc:	ldrd	r8, [sp, #16]
   15700:	ldr	sl, [sp, #24]
   15704:	add	sp, sp, #28
   15708:	pop	{pc}		; (ldr pc, [sp], #4)
   1570c:	add	r4, r4, #1
   15710:	cmp	r0, r4
   15714:	ble	156bc <__assert_fail@plt+0x3a94>
   15718:	ldrb	ip, [r3, #1]!
   1571c:	cmp	ip, lr
   15720:	bne	1570c <__assert_fail@plt+0x3ae4>
   15724:	b	156e4 <__assert_fail@plt+0x3abc>
   15728:	mov	r4, r5
   1572c:	add	r5, r4, #1
   15730:	cmp	r9, r5
   15734:	ble	156e4 <__assert_fail@plt+0x3abc>
   15738:	ldrb	r1, [r7, #1]!
   1573c:	and	r3, r1, #253	; 0xfd
   15740:	cmp	r3, #32
   15744:	cmpne	r1, #9
   15748:	beq	156e4 <__assert_fail@plt+0x3abc>
   1574c:	mov	r0, r8
   15750:	bl	119f4 <strchr@plt>
   15754:	cmp	r0, #0
   15758:	beq	15728 <__assert_fail@plt+0x3b00>
   1575c:	b	156e4 <__assert_fail@plt+0x3abc>
   15760:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15764:	strd	r6, [sp, #8]
   15768:	strd	r8, [sp, #16]
   1576c:	strd	sl, [sp, #24]
   15770:	str	lr, [sp, #32]
   15774:	sub	sp, sp, #36	; 0x24
   15778:	mov	r6, r0
   1577c:	str	r1, [sp, #12]
   15780:	mov	r8, r2
   15784:	mov	r7, r3
   15788:	bl	119dc <strlen@plt>
   1578c:	mov	r3, #0
   15790:	str	r3, [r8]
   15794:	str	r3, [r7]
   15798:	cmp	r0, r3
   1579c:	ble	15970 <__assert_fail@plt+0x3d48>
   157a0:	mov	r5, r0
   157a4:	mov	r4, r0
   157a8:	bl	119ac <__ctype_b_loc@plt>
   157ac:	ldr	r2, [r0]
   157b0:	add	r0, r6, r5
   157b4:	ldrb	r3, [r0, #-1]!
   157b8:	lsl	r3, r3, #1
   157bc:	ldrh	r3, [r2, r3]
   157c0:	tst	r3, #8192	; 0x2000
   157c4:	beq	157f0 <__assert_fail@plt+0x3bc8>
   157c8:	subs	r4, r4, #1
   157cc:	bne	157b4 <__assert_fail@plt+0x3b8c>
   157d0:	mov	r0, #1
   157d4:	add	sp, sp, #36	; 0x24
   157d8:	ldrd	r4, [sp]
   157dc:	ldrd	r6, [sp, #8]
   157e0:	ldrd	r8, [sp, #16]
   157e4:	ldrd	sl, [sp, #24]
   157e8:	add	sp, sp, #32
   157ec:	pop	{pc}		; (ldr pc, [sp], #4)
   157f0:	cmp	r4, #0
   157f4:	ble	15978 <__assert_fail@plt+0x3d50>
   157f8:	mov	r3, #1
   157fc:	str	r3, [r8]
   15800:	mov	r3, #0
   15804:	str	r3, [sp, #20]
   15808:	add	r9, sp, #20
   1580c:	add	r5, sp, #24
   15810:	str	r9, [sp, #4]
   15814:	str	r5, [sp]
   15818:	add	r3, sp, #28
   1581c:	ldr	r2, [sp, #12]
   15820:	mov	r1, r6
   15824:	mov	r0, r4
   15828:	bl	15640 <__assert_fail@plt+0x3a18>
   1582c:	cmp	r0, r4
   15830:	bge	15844 <__assert_fail@plt+0x3c1c>
   15834:	ldr	r3, [r8]
   15838:	add	r3, r3, #1
   1583c:	str	r3, [r8]
   15840:	b	15810 <__assert_fail@plt+0x3be8>
   15844:	ldr	r0, [r8]
   15848:	mov	r1, #4
   1584c:	add	r0, r0, #1
   15850:	bl	17640 <argp_parse@@Base+0x1310>
   15854:	str	r0, [r7]
   15858:	mov	r3, #0
   1585c:	str	r3, [sp, #20]
   15860:	ldr	r3, [r8]
   15864:	cmp	r3, #0
   15868:	ble	1595c <__assert_fail@plt+0x3d34>
   1586c:	mov	r5, #0
   15870:	add	fp, sp, #20
   15874:	b	158ec <__assert_fail@plt+0x3cc4>
   15878:	ldr	r3, [sp, #24]
   1587c:	ldrb	r1, [r6, r3]
   15880:	cmp	r1, #34	; 0x22
   15884:	beq	15948 <__assert_fail@plt+0x3d20>
   15888:	ldr	r0, [sp, #24]
   1588c:	ldr	r3, [sp, #28]
   15890:	sub	r0, r0, r3
   15894:	add	r9, r0, #1
   15898:	ldr	sl, [r7]
   1589c:	mov	r1, #1
   158a0:	add	r0, r0, #2
   158a4:	bl	17640 <argp_parse@@Base+0x1310>
   158a8:	str	r0, [sl, r5, lsl #2]
   158ac:	ldr	r3, [r7]
   158b0:	ldr	r0, [r3, r5, lsl #2]
   158b4:	cmp	r0, #0
   158b8:	beq	15980 <__assert_fail@plt+0x3d58>
   158bc:	mov	r2, r9
   158c0:	ldr	r1, [sp, #28]
   158c4:	add	r1, r6, r1
   158c8:	bl	11808 <memcpy@plt>
   158cc:	ldr	r3, [r7]
   158d0:	ldr	r3, [r3, r5, lsl #2]
   158d4:	mov	r2, #0
   158d8:	strb	r2, [r3, r9]
   158dc:	add	r5, r5, #1
   158e0:	ldr	r3, [r8]
   158e4:	cmp	r3, r5
   158e8:	ble	15960 <__assert_fail@plt+0x3d38>
   158ec:	str	fp, [sp, #4]
   158f0:	add	r3, sp, #24
   158f4:	str	r3, [sp]
   158f8:	add	r3, sp, #28
   158fc:	ldr	r2, [sp, #12]
   15900:	mov	r1, r6
   15904:	mov	r0, r4
   15908:	bl	15640 <__assert_fail@plt+0x3a18>
   1590c:	ldr	r2, [sp, #28]
   15910:	ldrb	r3, [r6, r2]
   15914:	cmp	r3, #34	; 0x22
   15918:	beq	15878 <__assert_fail@plt+0x3c50>
   1591c:	cmp	r3, #39	; 0x27
   15920:	bne	15888 <__assert_fail@plt+0x3c60>
   15924:	ldr	r3, [sp, #24]
   15928:	ldrb	r1, [r6, r3]
   1592c:	cmp	r1, #39	; 0x27
   15930:	bne	15888 <__assert_fail@plt+0x3c60>
   15934:	add	r2, r2, #1
   15938:	str	r2, [sp, #28]
   1593c:	sub	r3, r3, #1
   15940:	str	r3, [sp, #24]
   15944:	b	15888 <__assert_fail@plt+0x3c60>
   15948:	add	r2, r2, #1
   1594c:	str	r2, [sp, #28]
   15950:	sub	r3, r3, #1
   15954:	str	r3, [sp, #24]
   15958:	b	15888 <__assert_fail@plt+0x3c60>
   1595c:	mov	r5, #0
   15960:	ldr	r3, [r7]
   15964:	mov	r0, #0
   15968:	str	r0, [r3, r5, lsl #2]
   1596c:	b	157d4 <__assert_fail@plt+0x3bac>
   15970:	mov	r0, #1
   15974:	b	157d4 <__assert_fail@plt+0x3bac>
   15978:	mov	r0, #1
   1597c:	b	157d4 <__assert_fail@plt+0x3bac>
   15980:	mov	r0, #1
   15984:	b	157d4 <__assert_fail@plt+0x3bac>
   15988:	strd	r4, [sp, #-16]!
   1598c:	str	r6, [sp, #8]
   15990:	str	lr, [sp, #12]
   15994:	mov	r6, r1
   15998:	cmp	r0, #0
   1599c:	ble	159b8 <__assert_fail@plt+0x3d90>
   159a0:	add	r4, r1, r0, lsl #2
   159a4:	mov	r5, r1
   159a8:	ldr	r0, [r4, #-4]!
   159ac:	bl	17008 <argp_parse@@Base+0xcd8>
   159b0:	cmp	r4, r5
   159b4:	bne	159a8 <__assert_fail@plt+0x3d80>
   159b8:	mov	r0, r6
   159bc:	bl	17008 <argp_parse@@Base+0xcd8>
   159c0:	mov	r0, #1
   159c4:	ldrd	r4, [sp]
   159c8:	ldr	r6, [sp, #8]
   159cc:	add	sp, sp, #12
   159d0:	pop	{pc}		; (ldr pc, [sp], #4)
   159d4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   159d8:	strd	r6, [sp, #8]
   159dc:	strd	r8, [sp, #16]
   159e0:	strd	sl, [sp, #24]
   159e4:	str	lr, [sp, #32]
   159e8:	sub	sp, sp, #4
   159ec:	subs	fp, r2, #0
   159f0:	moveq	r0, #1
   159f4:	beq	15ad4 <__assert_fail@plt+0x3eac>
   159f8:	mov	r5, r1
   159fc:	mov	r9, r0
   15a00:	mov	r0, #1
   15a04:	bl	176b4 <argp_parse@@Base+0x1384>
   15a08:	subs	r4, r0, #0
   15a0c:	moveq	r0, #1
   15a10:	beq	15ad4 <__assert_fail@plt+0x3eac>
   15a14:	mov	r3, #0
   15a18:	strb	r3, [r4]
   15a1c:	cmp	r9, r3
   15a20:	ble	15acc <__assert_fail@plt+0x3ea4>
   15a24:	sub	r5, r5, #4
   15a28:	mov	r7, r3
   15a2c:	mov	r6, r3
   15a30:	movw	sl, #52196	; 0xcbe4
   15a34:	movt	sl, #1
   15a38:	b	15a64 <__assert_fail@plt+0x3e3c>
   15a3c:	mov	r0, r4
   15a40:	bl	119dc <strlen@plt>
   15a44:	ldrh	r3, [sl]
   15a48:	strh	r3, [r4, r0]
   15a4c:	ldr	r1, [r8]
   15a50:	mov	r0, r4
   15a54:	bl	11904 <strcat@plt>
   15a58:	add	r6, r6, #1
   15a5c:	cmp	r9, r6
   15a60:	beq	15a9c <__assert_fail@plt+0x3e74>
   15a64:	add	r5, r5, #4
   15a68:	mov	r8, r5
   15a6c:	ldr	r0, [r5]
   15a70:	bl	119dc <strlen@plt>
   15a74:	add	r0, r0, #2
   15a78:	add	r7, r7, r0
   15a7c:	mov	r1, r7
   15a80:	mov	r0, r4
   15a84:	bl	176f0 <argp_parse@@Base+0x13c0>
   15a88:	subs	r4, r0, #0
   15a8c:	beq	15af0 <__assert_fail@plt+0x3ec8>
   15a90:	cmp	r6, #0
   15a94:	beq	15a4c <__assert_fail@plt+0x3e24>
   15a98:	b	15a3c <__assert_fail@plt+0x3e14>
   15a9c:	ldrb	r3, [r4]
   15aa0:	cmp	r3, #0
   15aa4:	movne	r5, #0
   15aa8:	bne	15ab4 <__assert_fail@plt+0x3e8c>
   15aac:	b	15acc <__assert_fail@plt+0x3ea4>
   15ab0:	strb	r5, [r4, r0]
   15ab4:	mov	r0, r4
   15ab8:	bl	119dc <strlen@plt>
   15abc:	sub	r0, r0, #1
   15ac0:	ldrb	r3, [r4, r0]
   15ac4:	cmp	r3, #32
   15ac8:	beq	15ab0 <__assert_fail@plt+0x3e88>
   15acc:	str	r4, [fp]
   15ad0:	mov	r0, #0
   15ad4:	add	sp, sp, #4
   15ad8:	ldrd	r4, [sp]
   15adc:	ldrd	r6, [sp, #8]
   15ae0:	ldrd	r8, [sp, #16]
   15ae4:	ldrd	sl, [sp, #24]
   15ae8:	add	sp, sp, #32
   15aec:	pop	{pc}		; (ldr pc, [sp], #4)
   15af0:	mov	r0, #1
   15af4:	b	15ad4 <__assert_fail@plt+0x3eac>
   15af8:	str	r4, [sp, #-8]!
   15afc:	str	lr, [sp, #4]
   15b00:	mov	r0, #0
   15b04:	bl	11880 <alarm@plt>
   15b08:	mov	r4, r0
   15b0c:	mov	r1, #0
   15b10:	mov	r0, #14
   15b14:	bl	11814 <signal@plt>
   15b18:	cmp	r4, #0
   15b1c:	beq	15b2c <__assert_fail@plt+0x3f04>
   15b20:	ldr	r4, [sp]
   15b24:	add	sp, sp, #4
   15b28:	pop	{pc}		; (ldr pc, [sp], #4)
   15b2c:	movw	r2, #52200	; 0xcbe8
   15b30:	movt	r2, #1
   15b34:	mov	r1, #0
   15b38:	mov	r0, #1
   15b3c:	bl	1191c <error@plt>
   15b40:	b	15b20 <__assert_fail@plt+0x3ef8>
   15b44:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15b48:	strd	r6, [sp, #8]
   15b4c:	str	r8, [sp, #16]
   15b50:	str	lr, [sp, #20]
   15b54:	mov	r6, r0
   15b58:	mov	r4, r1
   15b5c:	mov	r5, r2
   15b60:	bl	119b8 <getpid@plt>
   15b64:	mov	r7, r0
   15b68:	bl	11acc <fork@plt>
   15b6c:	cmn	r0, #1
   15b70:	beq	15bf4 <__assert_fail@plt+0x3fcc>
   15b74:	cmp	r0, #0
   15b78:	beq	15bac <__assert_fail@plt+0x3f84>
   15b7c:	cmp	r5, #0
   15b80:	bgt	15b8c <__assert_fail@plt+0x3f64>
   15b84:	mov	r0, #0
   15b88:	bl	117fc <_exit@plt>
   15b8c:	movw	r1, #23288	; 0x5af8
   15b90:	movt	r1, #1
   15b94:	mov	r0, #14
   15b98:	bl	11814 <signal@plt>
   15b9c:	mov	r0, r5
   15ba0:	bl	11880 <alarm@plt>
   15ba4:	bl	11784 <pause@plt>
   15ba8:	b	15b84 <__assert_fail@plt+0x3f5c>
   15bac:	bl	119e8 <setsid@plt>
   15bb0:	cmn	r0, #1
   15bb4:	beq	15bf4 <__assert_fail@plt+0x3fcc>
   15bb8:	mov	r1, #1
   15bbc:	mov	r0, r1
   15bc0:	bl	11814 <signal@plt>
   15bc4:	bl	11acc <fork@plt>
   15bc8:	cmn	r0, #1
   15bcc:	beq	15bf4 <__assert_fail@plt+0x3fcc>
   15bd0:	cmp	r0, #0
   15bd4:	beq	15be0 <__assert_fail@plt+0x3fb8>
   15bd8:	mov	r0, #0
   15bdc:	bl	117fc <_exit@plt>
   15be0:	cmp	r6, #0
   15be4:	beq	15c08 <__assert_fail@plt+0x3fe0>
   15be8:	cmp	r4, #0
   15bec:	movne	r0, r7
   15bf0:	beq	15c24 <__assert_fail@plt+0x3ffc>
   15bf4:	ldrd	r4, [sp]
   15bf8:	ldrd	r6, [sp, #8]
   15bfc:	ldr	r8, [sp, #16]
   15c00:	add	sp, sp, #20
   15c04:	pop	{pc}		; (ldr pc, [sp], #4)
   15c08:	movw	r0, #52228	; 0xcc04
   15c0c:	movt	r0, #1
   15c10:	bl	118bc <chdir@plt>
   15c14:	cmp	r0, #0
   15c18:	bge	15be8 <__assert_fail@plt+0x3fc0>
   15c1c:	mvn	r0, #0
   15c20:	b	15bf4 <__assert_fail@plt+0x3fcc>
   15c24:	mov	r0, #4
   15c28:	bl	1188c <sysconf@plt>
   15c2c:	mov	r5, r0
   15c30:	cmn	r0, #1
   15c34:	beq	15cb8 <__assert_fail@plt+0x4090>
   15c38:	cmp	r0, #0
   15c3c:	ble	15c54 <__assert_fail@plt+0x402c>
   15c40:	mov	r0, r4
   15c44:	bl	11bf8 <close@plt>
   15c48:	add	r4, r4, #1
   15c4c:	cmp	r4, r5
   15c50:	blt	15c40 <__assert_fail@plt+0x4018>
   15c54:	mov	r2, #0
   15c58:	mov	r1, #2
   15c5c:	movw	r0, #52232	; 0xcc08
   15c60:	movt	r0, #1
   15c64:	bl	11934 <open64@plt>
   15c68:	mov	r4, r0
   15c6c:	cmn	r0, #1
   15c70:	moveq	r0, r7
   15c74:	beq	15bf4 <__assert_fail@plt+0x3fcc>
   15c78:	mov	r1, #0
   15c7c:	mov	r0, r4
   15c80:	bl	11898 <dup2@plt>
   15c84:	mov	r1, #1
   15c88:	mov	r0, r4
   15c8c:	bl	11898 <dup2@plt>
   15c90:	mov	r1, #2
   15c94:	mov	r0, r4
   15c98:	bl	11898 <dup2@plt>
   15c9c:	cmp	r4, #2
   15ca0:	movle	r0, r7
   15ca4:	ble	15bf4 <__assert_fail@plt+0x3fcc>
   15ca8:	mov	r0, r4
   15cac:	bl	11bf8 <close@plt>
   15cb0:	mov	r0, r7
   15cb4:	b	15bf4 <__assert_fail@plt+0x3fcc>
   15cb8:	mov	r5, #64	; 0x40
   15cbc:	b	15c40 <__assert_fail@plt+0x4018>

00015cc0 <daemon@@Base>:
   15cc0:	str	r4, [sp, #-8]!
   15cc4:	str	lr, [sp, #4]
   15cc8:	mov	r2, #0
   15ccc:	bl	15b44 <__assert_fail@plt+0x3f1c>
   15cd0:	cmn	r0, #1
   15cd4:	movne	r0, #0
   15cd8:	moveq	r0, #1
   15cdc:	rsb	r0, r0, #0
   15ce0:	ldr	r4, [sp]
   15ce4:	add	sp, sp, #4
   15ce8:	pop	{pc}		; (ldr pc, [sp], #4)
   15cec:	ldr	ip, [r0]
   15cf0:	cmp	ip, #0
   15cf4:	beq	15d5c <daemon@@Base+0x9c>
   15cf8:	strd	r4, [sp, #-16]!
   15cfc:	str	r6, [sp, #8]
   15d00:	str	lr, [sp, #12]
   15d04:	mov	ip, r2
   15d08:	mov	r5, r1
   15d0c:	mov	r4, r0
   15d10:	ldr	r2, [r0, #32]
   15d14:	str	r2, [r1, #36]	; 0x24
   15d18:	ldr	r2, [r0, #24]
   15d1c:	str	r2, [r1, #28]
   15d20:	ldr	r2, [r0, #28]
   15d24:	str	r2, [r1, #32]
   15d28:	ldr	r2, [r0, #12]
   15d2c:	str	r2, [r1, #20]
   15d30:	ldr	r6, [r0]
   15d34:	mov	r2, r1
   15d38:	mov	r1, r3
   15d3c:	mov	r0, ip
   15d40:	blx	r6
   15d44:	ldr	r3, [r5, #36]	; 0x24
   15d48:	str	r3, [r4, #32]
   15d4c:	ldrd	r4, [sp]
   15d50:	ldr	r6, [sp, #8]
   15d54:	add	sp, sp, #12
   15d58:	pop	{pc}		; (ldr pc, [sp], #4)
   15d5c:	mov	r0, #7
   15d60:	bx	lr
   15d64:	strd	r4, [sp, #-16]!
   15d68:	str	r6, [sp, #8]
   15d6c:	str	lr, [sp, #12]
   15d70:	ldr	r5, [r0, #16]
   15d74:	ldr	r3, [r0]
   15d78:	cmp	r3, #0
   15d7c:	beq	15d94 <daemon@@Base+0xd4>
   15d80:	ldr	r2, [r1, #8]
   15d84:	add	r2, r2, #1
   15d88:	str	r2, [r1, #8]
   15d8c:	mov	r2, #0
   15d90:	b	15db4 <daemon@@Base+0xf4>
   15d94:	ldr	r3, [r0, #4]
   15d98:	cmp	r3, #0
   15d9c:	beq	15e04 <daemon@@Base+0x144>
   15da0:	ldr	r3, [r1, #8]
   15da4:	add	r3, r3, #1
   15da8:	str	r3, [r1, #8]
   15dac:	b	15e04 <daemon@@Base+0x144>
   15db0:	add	r2, r2, #1
   15db4:	add	r3, r3, #24
   15db8:	ldr	r0, [r3, #-20]	; 0xffffffec
   15dbc:	cmp	r0, #0
   15dc0:	bne	15db0 <daemon@@Base+0xf0>
   15dc4:	ldr	r0, [r3, #-24]	; 0xffffffe8
   15dc8:	cmp	r0, #0
   15dcc:	bne	15db0 <daemon@@Base+0xf0>
   15dd0:	ldr	r0, [r3, #-8]
   15dd4:	cmp	r0, #0
   15dd8:	bne	15db0 <daemon@@Base+0xf0>
   15ddc:	ldr	r0, [r3, #-4]
   15de0:	cmp	r0, #0
   15de4:	bne	15db0 <daemon@@Base+0xf0>
   15de8:	add	r0, r2, r2, lsl #1
   15dec:	ldr	r3, [r1]
   15df0:	add	r3, r3, r0
   15df4:	str	r3, [r1]
   15df8:	ldr	r3, [r1, #4]
   15dfc:	add	r2, r3, r2
   15e00:	str	r2, [r1, #4]
   15e04:	cmp	r5, #0
   15e08:	beq	15e3c <daemon@@Base+0x17c>
   15e0c:	ldr	r0, [r5]
   15e10:	cmp	r0, #0
   15e14:	beq	15e3c <daemon@@Base+0x17c>
   15e18:	mov	r4, r1
   15e1c:	mov	r1, r4
   15e20:	bl	15d64 <daemon@@Base+0xa4>
   15e24:	ldr	r3, [r4, #12]
   15e28:	add	r3, r3, #1
   15e2c:	str	r3, [r4, #12]
   15e30:	ldr	r0, [r5, #16]!
   15e34:	cmp	r0, #0
   15e38:	bne	15e1c <daemon@@Base+0x15c>
   15e3c:	ldrd	r4, [sp]
   15e40:	ldr	r6, [sp, #8]
   15e44:	add	sp, sp, #12
   15e48:	pop	{pc}		; (ldr pc, [sp], #4)
   15e4c:	cmp	r0, #86	; 0x56
   15e50:	beq	15e5c <daemon@@Base+0x19c>
   15e54:	mov	r0, #7
   15e58:	bx	lr
   15e5c:	str	r4, [sp, #-8]!
   15e60:	str	lr, [sp, #4]
   15e64:	mov	r4, r2
   15e68:	movw	r3, #58544	; 0xe4b0
   15e6c:	movt	r3, #2
   15e70:	ldr	r3, [r3]
   15e74:	cmp	r3, #0
   15e78:	beq	15ea4 <daemon@@Base+0x1e4>
   15e7c:	mov	r1, r2
   15e80:	ldr	r0, [r2, #48]	; 0x30
   15e84:	blx	r3
   15e88:	ldr	r3, [r4, #16]
   15e8c:	tst	r3, #32
   15e90:	beq	15ee8 <daemon@@Base+0x228>
   15e94:	mov	r0, #0
   15e98:	ldr	r4, [sp]
   15e9c:	add	sp, sp, #4
   15ea0:	pop	{pc}		; (ldr pc, [sp], #4)
   15ea4:	movw	r3, #58904	; 0xe618
   15ea8:	movt	r3, #2
   15eac:	ldr	r2, [r3]
   15eb0:	cmp	r2, #0
   15eb4:	beq	15ecc <daemon@@Base+0x20c>
   15eb8:	movw	r1, #52928	; 0xcec0
   15ebc:	movt	r1, #1
   15ec0:	ldr	r0, [r4, #48]	; 0x30
   15ec4:	bl	11a0c <fprintf@plt>
   15ec8:	b	15e88 <daemon@@Base+0x1c8>
   15ecc:	movw	r2, #52524	; 0xcd2c
   15ed0:	movt	r2, #1
   15ed4:	movw	r1, #50276	; 0xc464
   15ed8:	movt	r1, #1
   15edc:	mov	r0, r4
   15ee0:	bl	1aa38 <argp_error@@Base>
   15ee4:	b	15e88 <daemon@@Base+0x1c8>
   15ee8:	mov	r0, #0
   15eec:	bl	119c4 <exit@plt>
   15ef0:	strd	r4, [sp, #-16]!
   15ef4:	str	r6, [sp, #8]
   15ef8:	str	lr, [sp, #12]
   15efc:	mov	r4, r2
   15f00:	cmn	r0, #3
   15f04:	beq	15fbc <daemon@@Base+0x2fc>
   15f08:	mov	r5, r1
   15f0c:	ble	15f48 <daemon@@Base+0x288>
   15f10:	cmn	r0, #2
   15f14:	beq	15fd4 <daemon@@Base+0x314>
   15f18:	cmp	r0, #63	; 0x3f
   15f1c:	movne	r0, #7
   15f20:	bne	15f38 <daemon@@Base+0x278>
   15f24:	movw	r2, #634	; 0x27a
   15f28:	ldr	r1, [r4, #48]	; 0x30
   15f2c:	mov	r0, r4
   15f30:	bl	1a970 <argp_state_help@@Base>
   15f34:	mov	r0, #0
   15f38:	ldrd	r4, [sp]
   15f3c:	ldr	r6, [sp, #8]
   15f40:	add	sp, sp, #12
   15f44:	pop	{pc}		; (ldr pc, [sp], #4)
   15f48:	cmn	r0, #4
   15f4c:	movne	r0, #7
   15f50:	bne	15f38 <daemon@@Base+0x278>
   15f54:	movw	r0, #52560	; 0xcd50
   15f58:	movt	r0, #1
   15f5c:	mov	r2, #10
   15f60:	mov	r1, #0
   15f64:	cmp	r5, r1
   15f68:	movne	r0, r5
   15f6c:	bl	11760 <strtol@plt>
   15f70:	movw	r3, #58540	; 0xe4ac
   15f74:	movt	r3, #2
   15f78:	str	r0, [r3]
   15f7c:	ldr	r2, [r3]
   15f80:	sub	r1, r2, #1
   15f84:	str	r1, [r3]
   15f88:	cmp	r2, #0
   15f8c:	ble	1601c <daemon@@Base+0x35c>
   15f90:	mov	r5, #1
   15f94:	mov	r4, r3
   15f98:	mov	r0, r5
   15f9c:	bl	11850 <sleep@plt>
   15fa0:	ldr	r3, [r4]
   15fa4:	sub	r2, r3, #1
   15fa8:	str	r2, [r4]
   15fac:	cmp	r3, #0
   15fb0:	bgt	15f98 <daemon@@Base+0x2d8>
   15fb4:	mov	r0, #0
   15fb8:	b	15f38 <daemon@@Base+0x278>
   15fbc:	movw	r2, #513	; 0x201
   15fc0:	ldr	r1, [r4, #48]	; 0x30
   15fc4:	mov	r0, r4
   15fc8:	bl	1a970 <argp_state_help@@Base>
   15fcc:	mov	r0, #0
   15fd0:	b	15f38 <daemon@@Base+0x278>
   15fd4:	movw	r3, #58284	; 0xe3ac
   15fd8:	movt	r3, #2
   15fdc:	str	r1, [r3]
   15fe0:	mov	r0, r1
   15fe4:	bl	16f44 <argp_parse@@Base+0xc14>
   15fe8:	str	r0, [r4, #40]	; 0x28
   15fec:	movw	r3, #58280	; 0xe3a8
   15ff0:	movt	r3, #2
   15ff4:	str	r0, [r3]
   15ff8:	ldr	r3, [r4, #16]
   15ffc:	and	r3, r3, #3
   16000:	cmp	r3, #1
   16004:	movne	r0, #0
   16008:	bne	15f38 <daemon@@Base+0x278>
   1600c:	ldr	r3, [r4, #8]
   16010:	str	r5, [r3]
   16014:	mov	r0, #0
   16018:	b	15f38 <daemon@@Base+0x278>
   1601c:	mov	r0, #0
   16020:	b	15f38 <daemon@@Base+0x278>
   16024:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16028:	strd	r6, [sp, #8]
   1602c:	strd	r8, [sp, #16]
   16030:	strd	sl, [sp, #24]
   16034:	str	lr, [sp, #32]
   16038:	sub	sp, sp, #36	; 0x24
   1603c:	str	r0, [sp, #16]
   16040:	str	r1, [sp, #20]
   16044:	str	r2, [sp, #24]
   16048:	str	r3, [sp, #8]
   1604c:	ldr	r8, [sp, #72]	; 0x48
   16050:	ldr	r6, [r0]
   16054:	ldr	sl, [r0, #16]
   16058:	cmp	r6, #0
   1605c:	beq	16078 <daemon@@Base+0x3b8>
   16060:	mov	r4, r6
   16064:	movw	r3, #36409	; 0x8e39
   16068:	movt	r3, #14563	; 0x38e3
   1606c:	str	r3, [sp, #12]
   16070:	str	sl, [sp, #28]
   16074:	b	160bc <daemon@@Base+0x3fc>
   16078:	ldr	r3, [r0, #4]
   1607c:	cmp	r3, #0
   16080:	bne	16248 <daemon@@Base+0x588>
   16084:	ldr	r0, [sp, #8]
   16088:	str	r6, [sp, #8]
   1608c:	b	162cc <daemon@@Base+0x60c>
   16090:	ldr	r0, [r7, #16]!
   16094:	cmp	r0, #0
   16098:	beq	1619c <daemon@@Base+0x4dc>
   1609c:	mov	r1, r9
   160a0:	bl	11754 <strcmp@plt>
   160a4:	cmp	r0, #0
   160a8:	bne	16090 <daemon@@Base+0x3d0>
   160ac:	sub	sl, r7, fp
   160b0:	cmp	sl, #0
   160b4:	blt	1619c <daemon@@Base+0x4dc>
   160b8:	add	r4, r4, #24
   160bc:	ldr	r7, [r4, #4]
   160c0:	cmp	r7, #0
   160c4:	bne	160d4 <daemon@@Base+0x414>
   160c8:	ldr	r3, [r4]
   160cc:	cmp	r3, #0
   160d0:	beq	1622c <daemon@@Base+0x56c>
   160d4:	ldr	r3, [r4, #12]
   160d8:	and	r2, r3, #4
   160dc:	cmp	r2, #0
   160e0:	moveq	r6, r4
   160e4:	ldr	r5, [r6, #12]
   160e8:	ands	r5, r5, #8
   160ec:	bne	160b8 <daemon@@Base+0x3f8>
   160f0:	tst	r3, #8
   160f4:	bne	16174 <daemon@@Base+0x4b4>
   160f8:	sub	r3, r7, #1
   160fc:	cmp	r3, #254	; 0xfe
   16100:	bhi	16174 <daemon@@Base+0x4b4>
   16104:	bl	119ac <__ctype_b_loc@plt>
   16108:	ldr	r2, [r0]
   1610c:	lsl	r3, r7, #1
   16110:	ldrh	r3, [r2, r3]
   16114:	tst	r3, #16384	; 0x4000
   16118:	beq	16174 <daemon@@Base+0x4b4>
   1611c:	ldr	r3, [r8, #4]
   16120:	add	r2, r3, #1
   16124:	str	r2, [r8, #4]
   16128:	strb	r7, [r3]
   1612c:	ldr	r3, [r6, #8]
   16130:	cmp	r3, #0
   16134:	beq	16168 <daemon@@Base+0x4a8>
   16138:	ldr	r3, [r8, #4]
   1613c:	add	r2, r3, #1
   16140:	str	r2, [r8, #4]
   16144:	mov	r1, #58	; 0x3a
   16148:	strb	r1, [r3]
   1614c:	ldr	r3, [r6, #12]
   16150:	tst	r3, #1
   16154:	beq	16168 <daemon@@Base+0x4a8>
   16158:	ldr	r3, [r8, #4]
   1615c:	add	r2, r3, #1
   16160:	str	r2, [r8, #4]
   16164:	strb	r1, [r3]
   16168:	ldr	r3, [r8, #4]
   1616c:	mov	r2, #0
   16170:	strb	r2, [r3]
   16174:	ldr	r9, [r4]
   16178:	cmp	r9, #0
   1617c:	beq	160b8 <daemon@@Base+0x3f8>
   16180:	ldr	r3, [r8]
   16184:	ldr	fp, [r3, #8]
   16188:	ldr	r0, [fp]
   1618c:	cmp	r0, #0
   16190:	beq	1619c <daemon@@Base+0x4dc>
   16194:	mov	r7, fp
   16198:	b	1609c <daemon@@Base+0x3dc>
   1619c:	ldr	r3, [r8, #8]
   161a0:	str	r9, [r3]
   161a4:	ldr	r3, [r6, #8]
   161a8:	cmp	r3, #0
   161ac:	beq	161c4 <daemon@@Base+0x504>
   161b0:	ldr	r3, [r6, #12]
   161b4:	and	r3, r3, #1
   161b8:	cmp	r3, #0
   161bc:	movne	r5, #2
   161c0:	moveq	r5, #1
   161c4:	ldr	r3, [r8, #8]
   161c8:	str	r5, [r3, #4]
   161cc:	ldr	r3, [r8, #8]
   161d0:	mov	r2, #0
   161d4:	str	r2, [r3, #8]
   161d8:	ldr	r3, [r4, #4]
   161dc:	cmp	r3, r2
   161e0:	ldreq	r3, [r6, #4]
   161e4:	bic	r2, r3, #-16777216	; 0xff000000
   161e8:	ldr	r1, [r8, #8]
   161ec:	ldr	r3, [r8]
   161f0:	ldr	r3, [r3, #48]	; 0x30
   161f4:	ldr	r0, [sp, #8]
   161f8:	sub	r3, r0, r3
   161fc:	asr	r3, r3, #2
   16200:	ldr	r0, [sp, #12]
   16204:	mul	r3, r0, r3
   16208:	add	r3, r3, #1
   1620c:	add	r3, r2, r3, lsl #24
   16210:	str	r3, [r1, #12]
   16214:	ldr	r3, [r8, #8]
   16218:	add	r2, r3, #16
   1621c:	str	r2, [r8, #8]
   16220:	mov	r2, #0
   16224:	str	r2, [r3, #16]
   16228:	b	160b8 <daemon@@Base+0x3f8>
   1622c:	ldr	r3, [r4, #16]
   16230:	cmp	r3, #0
   16234:	bne	160d4 <daemon@@Base+0x414>
   16238:	ldr	r3, [r4, #20]
   1623c:	cmp	r3, #0
   16240:	bne	160d4 <daemon@@Base+0x414>
   16244:	ldr	sl, [sp, #28]
   16248:	ldr	r1, [sp, #16]
   1624c:	ldr	r3, [r1, #4]
   16250:	ldr	r2, [sp, #8]
   16254:	str	r3, [r2]
   16258:	str	r1, [r2, #4]
   1625c:	ldr	r3, [r8, #4]
   16260:	str	r3, [r2, #8]
   16264:	mov	r3, #0
   16268:	str	r3, [r2, #12]
   1626c:	ldr	r1, [sp, #20]
   16270:	str	r1, [r2, #16]
   16274:	ldr	r1, [sp, #24]
   16278:	str	r1, [r2, #20]
   1627c:	str	r3, [r2, #24]
   16280:	str	r3, [r2, #32]
   16284:	str	r3, [r2, #28]
   16288:	cmp	sl, r3
   1628c:	beq	162c4 <daemon@@Base+0x604>
   16290:	ldr	r3, [sl]
   16294:	cmp	r3, #0
   16298:	beq	16328 <daemon@@Base+0x668>
   1629c:	mov	r3, #0
   162a0:	add	r3, r3, #1
   162a4:	ldr	r2, [sl, r3, lsl #4]
   162a8:	cmp	r2, #0
   162ac:	bne	162a0 <daemon@@Base+0x5e0>
   162b0:	ldr	r2, [r8, #12]
   162b4:	ldr	r1, [sp, #8]
   162b8:	str	r2, [r1, #28]
   162bc:	add	r3, r2, r3, lsl #2
   162c0:	str	r3, [r8, #12]
   162c4:	ldr	r3, [sp, #8]
   162c8:	add	r0, r3, #36	; 0x24
   162cc:	cmp	sl, #0
   162d0:	beq	1630c <daemon@@Base+0x64c>
   162d4:	ldr	ip, [sl]
   162d8:	cmp	ip, #0
   162dc:	beq	1630c <daemon@@Base+0x64c>
   162e0:	mov	r2, #0
   162e4:	add	r4, r2, #1
   162e8:	str	r8, [sp]
   162ec:	mov	r3, r0
   162f0:	ldr	r1, [sp, #8]
   162f4:	mov	r0, ip
   162f8:	bl	16024 <daemon@@Base+0x364>
   162fc:	ldr	ip, [sl, r4, lsl #4]
   16300:	mov	r2, r4
   16304:	cmp	ip, #0
   16308:	bne	162e4 <daemon@@Base+0x624>
   1630c:	add	sp, sp, #36	; 0x24
   16310:	ldrd	r4, [sp]
   16314:	ldrd	r6, [sp, #8]
   16318:	ldrd	r8, [sp, #16]
   1631c:	ldrd	sl, [sp, #24]
   16320:	add	sp, sp, #32
   16324:	pop	{pc}		; (ldr pc, [sp], #4)
   16328:	mov	r3, #0
   1632c:	b	162b0 <daemon@@Base+0x5f0>

00016330 <argp_parse@@Base>:
   16330:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16334:	strd	r6, [sp, #8]
   16338:	strd	r8, [sp, #16]
   1633c:	strd	sl, [sp, #24]
   16340:	str	lr, [sp, #32]
   16344:	add	fp, sp, #32
   16348:	sub	sp, sp, #228	; 0xe4
   1634c:	mov	r8, r0
   16350:	str	r1, [fp, #-240]	; 0xffffff10
   16354:	str	r2, [fp, #-232]	; 0xffffff18
   16358:	mov	r7, r3
   1635c:	tst	r3, #1
   16360:	bne	1638c <argp_parse@@Base+0x5c>
   16364:	movw	r3, #58284	; 0xe3ac
   16368:	movt	r3, #2
   1636c:	ldr	r3, [r3]
   16370:	cmp	r3, #0
   16374:	beq	163e4 <argp_parse@@Base+0xb4>
   16378:	movw	r3, #58280	; 0xe3a8
   1637c:	movt	r3, #2
   16380:	ldr	r3, [r3]
   16384:	cmp	r3, #0
   16388:	beq	163f8 <argp_parse@@Base+0xc8>
   1638c:	tst	r7, #16
   16390:	beq	16414 <argp_parse@@Base+0xe4>
   16394:	str	r7, [fp, #-244]	; 0xffffff0c
   16398:	mov	r3, #0
   1639c:	str	r3, [fp, #-188]	; 0xffffff44
   163a0:	str	r3, [fp, #-184]	; 0xffffff48
   163a4:	str	r3, [fp, #-180]	; 0xffffff4c
   163a8:	str	r3, [fp, #-176]	; 0xffffff50
   163ac:	str	r3, [fp, #-172]	; 0xffffff54
   163b0:	str	r3, [fp, #-168]	; 0xffffff58
   163b4:	str	r3, [fp, #-164]	; 0xffffff5c
   163b8:	ands	r2, r7, #4
   163bc:	str	r2, [fp, #-248]	; 0xffffff08
   163c0:	moveq	r2, #1
   163c4:	movne	r2, r3
   163c8:	str	r2, [fp, #-228]	; 0xffffff1c
   163cc:	str	r3, [fp, #-224]	; 0xffffff20
   163d0:	str	r3, [fp, #-220]	; 0xffffff24
   163d4:	str	r3, [fp, #-216]	; 0xffffff28
   163d8:	cmp	r8, r3
   163dc:	beq	164e0 <argp_parse@@Base+0x1b0>
   163e0:	b	164d4 <argp_parse@@Base+0x1a4>
   163e4:	ldr	r2, [r2]
   163e8:	movw	r3, #58284	; 0xe3ac
   163ec:	movt	r3, #2
   163f0:	str	r2, [r3]
   163f4:	b	16378 <argp_parse@@Base+0x48>
   163f8:	ldr	r3, [fp, #-232]	; 0xffffff18
   163fc:	ldr	r0, [r3]
   16400:	bl	16f44 <argp_parse@@Base+0xc14>
   16404:	movw	r3, #58280	; 0xe3a8
   16408:	movt	r3, #2
   1640c:	str	r0, [r3]
   16410:	b	1638c <argp_parse@@Base+0x5c>
   16414:	sub	sp, sp, #64	; 0x40
   16418:	add	r5, sp, #8
   1641c:	sub	sp, sp, #32
   16420:	add	r4, sp, #8
   16424:	mov	r1, #0
   16428:	str	r1, [r4]
   1642c:	str	r1, [r4, #4]
   16430:	str	r1, [r4, #8]
   16434:	str	r1, [r4, #12]
   16438:	str	r1, [r4, #20]
   1643c:	str	r1, [r4, #24]
   16440:	str	r5, [r4, #16]
   16444:	mov	r2, #64	; 0x40
   16448:	mov	r0, r5
   1644c:	bl	11a54 <memset@plt>
   16450:	cmp	r8, #0
   16454:	mov	r0, r5
   16458:	strne	r8, [r0], #16
   1645c:	movw	r3, #52244	; 0xcc14
   16460:	movt	r3, #1
   16464:	str	r3, [r0]
   16468:	movw	r3, #58904	; 0xe618
   1646c:	movt	r3, #2
   16470:	ldr	r3, [r3]
   16474:	cmp	r3, #0
   16478:	beq	166a0 <argp_parse@@Base+0x370>
   1647c:	add	r2, r0, #32
   16480:	ldr	r3, [pc, #2548]	; 16e7c <argp_parse@@Base+0xb4c>
   16484:	str	r3, [r0, #16]
   16488:	mov	r3, #0
   1648c:	str	r3, [r2]
   16490:	str	r7, [fp, #-244]	; 0xffffff0c
   16494:	str	r3, [fp, #-188]	; 0xffffff44
   16498:	str	r3, [fp, #-184]	; 0xffffff48
   1649c:	str	r3, [fp, #-180]	; 0xffffff4c
   164a0:	str	r3, [fp, #-176]	; 0xffffff50
   164a4:	str	r3, [fp, #-172]	; 0xffffff54
   164a8:	str	r3, [fp, #-168]	; 0xffffff58
   164ac:	str	r3, [fp, #-164]	; 0xffffff5c
   164b0:	ands	r2, r7, #4
   164b4:	str	r2, [fp, #-248]	; 0xffffff08
   164b8:	moveq	r2, #1
   164bc:	movne	r2, r3
   164c0:	str	r2, [fp, #-228]	; 0xffffff1c
   164c4:	str	r3, [fp, #-224]	; 0xffffff20
   164c8:	str	r3, [fp, #-220]	; 0xffffff24
   164cc:	str	r3, [fp, #-216]	; 0xffffff28
   164d0:	mov	r8, r4
   164d4:	sub	r1, fp, #228	; 0xe4
   164d8:	mov	r0, r8
   164dc:	bl	15d64 <daemon@@Base+0xa4>
   164e0:	ldr	r4, [fp, #-220]	; 0xffffff24
   164e4:	add	r4, r4, #1
   164e8:	add	r4, r4, r4, lsl #3
   164ec:	lsl	r4, r4, #2
   164f0:	ldr	r3, [fp, #-216]	; 0xffffff28
   164f4:	lsl	r3, r3, #2
   164f8:	str	r3, [fp, #-236]	; 0xffffff14
   164fc:	add	r9, r3, r4
   16500:	ldr	r5, [fp, #-224]	; 0xffffff20
   16504:	add	r5, r5, #1
   16508:	add	r5, r9, r5, lsl #4
   1650c:	ldr	r0, [fp, #-228]	; 0xffffff1c
   16510:	add	r0, r0, #1
   16514:	add	r0, r0, r5
   16518:	bl	176b4 <argp_parse@@Base+0x1384>
   1651c:	mov	r6, r0
   16520:	str	r0, [fp, #-40]	; 0xffffffd8
   16524:	cmp	r0, #0
   16528:	moveq	r4, #12
   1652c:	beq	16c9c <argp_parse@@Base+0x96c>
   16530:	str	r0, [fp, #-112]	; 0xffffff90
   16534:	add	r4, r0, r4
   16538:	str	r4, [fp, #-104]	; 0xffffff98
   1653c:	add	r9, r0, r9
   16540:	str	r9, [fp, #-152]	; 0xffffff68
   16544:	add	sl, r0, r5
   16548:	str	sl, [fp, #-156]	; 0xffffff64
   1654c:	mov	r3, #1
   16550:	str	r3, [fp, #-196]	; 0xffffff3c
   16554:	str	r3, [fp, #-192]	; 0xffffff40
   16558:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   1655c:	strd	r2, [fp, #-148]	; 0xffffff6c
   16560:	ldrd	r2, [fp, #-188]	; 0xffffff44
   16564:	strd	r2, [fp, #-140]	; 0xffffff74
   16568:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   1656c:	strd	r2, [fp, #-132]	; 0xffffff7c
   16570:	ldrd	r2, [fp, #-172]	; 0xffffff54
   16574:	strd	r2, [fp, #-124]	; 0xffffff84
   16578:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1657c:	str	r3, [fp, #-116]	; 0xffffff8c
   16580:	ldr	r2, [fp, #-236]	; 0xffffff14
   16584:	mov	r1, #0
   16588:	mov	r0, r4
   1658c:	bl	11a54 <memset@plt>
   16590:	sub	r3, fp, #160	; 0xa0
   16594:	str	r3, [fp, #-212]	; 0xffffff2c
   16598:	str	sl, [fp, #-208]	; 0xffffff30
   1659c:	str	r9, [fp, #-204]	; 0xffffff34
   165a0:	str	r4, [fp, #-200]	; 0xffffff38
   165a4:	ldr	r3, [fp, #-244]	; 0xffffff0c
   165a8:	tst	r3, #8
   165ac:	beq	166bc <argp_parse@@Base+0x38c>
   165b0:	add	sl, sl, #1
   165b4:	str	sl, [fp, #-208]	; 0xffffff30
   165b8:	mov	r3, #45	; 0x2d
   165bc:	strb	r3, [r6, r5]
   165c0:	mov	r3, #0
   165c4:	ldr	r2, [fp, #-208]	; 0xffffff30
   165c8:	strb	r3, [r2]
   165cc:	ldr	r2, [fp, #-204]	; 0xffffff34
   165d0:	str	r3, [r2]
   165d4:	str	r8, [fp, #-160]	; 0xffffff60
   165d8:	cmp	r8, r3
   165dc:	beq	166dc <argp_parse@@Base+0x3ac>
   165e0:	sub	r3, fp, #212	; 0xd4
   165e4:	str	r3, [sp]
   165e8:	ldr	r3, [fp, #-112]	; 0xffffff90
   165ec:	mov	r2, #0
   165f0:	mov	r1, r2
   165f4:	mov	r0, r8
   165f8:	bl	16024 <daemon@@Base+0x364>
   165fc:	str	r0, [fp, #-108]	; 0xffffff94
   16600:	mov	r2, #0
   16604:	mov	r3, #0
   16608:	strd	r2, [fp, #-76]	; 0xffffffb4
   1660c:	strd	r2, [fp, #-68]	; 0xffffffbc
   16610:	strd	r2, [fp, #-60]	; 0xffffffc4
   16614:	ldr	r3, [fp, #-160]	; 0xffffff60
   16618:	str	r3, [fp, #-96]	; 0xffffffa0
   1661c:	ldr	r3, [fp, #-240]	; 0xffffff10
   16620:	str	r3, [fp, #-92]	; 0xffffffa4
   16624:	ldr	r3, [fp, #-232]	; 0xffffff18
   16628:	str	r3, [fp, #-88]	; 0xffffffa8
   1662c:	str	r7, [fp, #-80]	; 0xffffffb0
   16630:	movw	r3, #58288	; 0xe3b0
   16634:	movt	r3, #2
   16638:	ldr	r3, [r3]
   1663c:	str	r3, [fp, #-52]	; 0xffffffcc
   16640:	movw	r3, #58292	; 0xe3b4
   16644:	movt	r3, #2
   16648:	ldr	r3, [r3]
   1664c:	str	r3, [fp, #-48]	; 0xffffffd0
   16650:	mov	r3, #0
   16654:	str	r3, [fp, #-84]	; 0xffffffac
   16658:	sub	r3, fp, #160	; 0xa0
   1665c:	str	r3, [fp, #-44]	; 0xffffffd4
   16660:	mov	r3, #1
   16664:	str	r3, [fp, #-100]	; 0xffffff9c
   16668:	ldr	r3, [fp, #-112]	; 0xffffff90
   1666c:	ldr	r2, [fp, #-108]	; 0xffffff94
   16670:	cmp	r3, r2
   16674:	bcs	16788 <argp_parse@@Base+0x458>
   16678:	ldr	r2, [fp, #8]
   1667c:	str	r2, [r3, #24]
   16680:	ldr	r5, [fp, #-112]	; 0xffffff90
   16684:	ldr	r3, [fp, #-108]	; 0xffffff94
   16688:	cmp	r5, r3
   1668c:	bcs	16788 <argp_parse@@Base+0x458>
   16690:	mov	r6, #3
   16694:	movt	r6, #256	; 0x100
   16698:	mov	r7, #0
   1669c:	b	16724 <argp_parse@@Base+0x3f4>
   166a0:	movw	r3, #58544	; 0xe4b0
   166a4:	movt	r3, #2
   166a8:	ldr	r3, [r3]
   166ac:	cmp	r3, #0
   166b0:	addeq	r2, r0, #16
   166b4:	bne	1647c <argp_parse@@Base+0x14c>
   166b8:	b	16488 <argp_parse@@Base+0x158>
   166bc:	ldr	r3, [fp, #-248]	; 0xffffff08
   166c0:	cmp	r3, #0
   166c4:	beq	165c0 <argp_parse@@Base+0x290>
   166c8:	add	sl, sl, #1
   166cc:	str	sl, [fp, #-208]	; 0xffffff30
   166d0:	mov	r3, #43	; 0x2b
   166d4:	strb	r3, [r6, r5]
   166d8:	b	165c0 <argp_parse@@Base+0x290>
   166dc:	ldr	r3, [fp, #-112]	; 0xffffff90
   166e0:	str	r3, [fp, #-108]	; 0xffffff94
   166e4:	b	16600 <argp_parse@@Base+0x2d0>
   166e8:	ldr	r3, [r5]
   166ec:	cmp	r3, #0
   166f0:	beq	16744 <argp_parse@@Base+0x414>
   166f4:	mov	r3, r7
   166f8:	mov	r2, r6
   166fc:	sub	r1, fp, #96	; 0x60
   16700:	mov	r0, r5
   16704:	bl	15cec <daemon@@Base+0x2c>
   16708:	add	r5, r5, #36	; 0x24
   1670c:	ldr	r3, [fp, #-108]	; 0xffffff94
   16710:	cmp	r5, r3
   16714:	bcs	16778 <argp_parse@@Base+0x448>
   16718:	cmp	r0, #7
   1671c:	cmpne	r0, #0
   16720:	bne	16770 <argp_parse@@Base+0x440>
   16724:	ldr	r3, [r5, #16]
   16728:	cmp	r3, #0
   1672c:	beq	166e8 <argp_parse@@Base+0x3b8>
   16730:	ldr	r2, [r5, #20]
   16734:	ldr	r3, [r3, #28]
   16738:	ldr	r3, [r3, r2, lsl #2]
   1673c:	str	r3, [r5, #24]
   16740:	b	166e8 <argp_parse@@Base+0x3b8>
   16744:	ldr	r3, [r5, #4]
   16748:	ldr	r3, [r3, #16]
   1674c:	cmp	r3, #0
   16750:	beq	166f4 <argp_parse@@Base+0x3c4>
   16754:	ldr	r3, [r3]
   16758:	cmp	r3, #0
   1675c:	beq	166f4 <argp_parse@@Base+0x3c4>
   16760:	ldr	r3, [r5, #28]
   16764:	ldr	r2, [r5, #24]
   16768:	str	r2, [r3]
   1676c:	b	166f4 <argp_parse@@Base+0x3c4>
   16770:	mov	r4, r0
   16774:	b	16c9c <argp_parse@@Base+0x96c>
   16778:	mov	r4, r0
   1677c:	cmp	r0, #7
   16780:	cmpne	r0, #0
   16784:	bne	16c9c <argp_parse@@Base+0x96c>
   16788:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1678c:	tst	r3, #2
   16790:	moveq	r3, #1
   16794:	streq	r3, [fp, #-144]	; 0xffffff70
   16798:	beq	167c4 <argp_parse@@Base+0x494>
   1679c:	mov	r2, #0
   167a0:	str	r2, [fp, #-144]	; 0xffffff70
   167a4:	tst	r3, #1
   167a8:	beq	167c4 <argp_parse@@Base+0x494>
   167ac:	ldr	r3, [fp, #-88]	; 0xffffffa8
   167b0:	sub	r3, r3, #4
   167b4:	str	r3, [fp, #-88]	; 0xffffffa8
   167b8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   167bc:	add	r3, r3, #1
   167c0:	str	r3, [fp, #-92]	; 0xffffffa4
   167c4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   167c8:	ldr	r2, [fp, #-232]	; 0xffffff18
   167cc:	cmp	r2, r3
   167d0:	beq	167f8 <argp_parse@@Base+0x4c8>
   167d4:	movw	r3, #58280	; 0xe3a8
   167d8:	movt	r3, #2
   167dc:	ldr	r3, [r3]
   167e0:	str	r3, [fp, #-56]	; 0xffffffc8
   167e4:	movw	sl, #52572	; 0xcd5c
   167e8:	movt	sl, #1
   167ec:	mov	r9, #6
   167f0:	movt	r9, #256	; 0x100
   167f4:	b	168c0 <argp_parse@@Base+0x590>
   167f8:	ldr	r0, [r2]
   167fc:	cmp	r0, #0
   16800:	beq	167d4 <argp_parse@@Base+0x4a4>
   16804:	bl	16f44 <argp_parse@@Base+0xc14>
   16808:	str	r0, [fp, #-56]	; 0xffffffc8
   1680c:	b	167e4 <argp_parse@@Base+0x4b4>
   16810:	ldr	r3, [fp, #-84]	; 0xffffffac
   16814:	str	r3, [fp, #-148]	; 0xffffff6c
   16818:	mvn	r3, #0
   1681c:	str	r3, [fp, #-140]	; 0xffffff74
   16820:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16824:	tst	r3, #64	; 0x40
   16828:	beq	16944 <argp_parse@@Base+0x614>
   1682c:	sub	r3, fp, #148	; 0x94
   16830:	str	r3, [sp, #4]
   16834:	mov	r3, #0
   16838:	str	r3, [sp]
   1683c:	ldr	r3, [fp, #-152]	; 0xffffff68
   16840:	ldr	r2, [fp, #-156]	; 0xffffff64
   16844:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16848:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1684c:	bl	170ec <argp_parse@@Base+0xdbc>
   16850:	mov	r5, r0
   16854:	ldr	r4, [fp, #-148]	; 0xffffff6c
   16858:	str	r4, [fp, #-84]	; 0xffffffac
   1685c:	cmn	r5, #1
   16860:	beq	16970 <argp_parse@@Base+0x640>
   16864:	cmp	r5, #63	; 0x3f
   16868:	beq	169a0 <argp_parse@@Base+0x670>
   1686c:	cmp	r5, #1
   16870:	beq	1691c <argp_parse@@Base+0x5ec>
   16874:	ldr	r4, [fp, #-136]	; 0xffffff78
   16878:	asrs	r3, r5, #24
   1687c:	beq	169b0 <argp_parse@@Base+0x680>
   16880:	ands	r1, r5, #8388608	; 0x800000
   16884:	movne	r1, #-16777216	; 0xff000000
   16888:	bic	r2, r5, #-16777216	; 0xff000000
   1688c:	add	r0, r3, r3, lsl #3
   16890:	lsl	r0, r0, #2
   16894:	sub	r0, r0, #36	; 0x24
   16898:	mov	r3, r4
   1689c:	orr	r2, r2, r1
   168a0:	sub	r1, fp, #96	; 0x60
   168a4:	ldr	ip, [fp, #-112]	; 0xffffff90
   168a8:	add	r0, ip, r0
   168ac:	bl	15cec <daemon@@Base+0x2c>
   168b0:	cmp	r0, #7
   168b4:	beq	16b78 <argp_parse@@Base+0x848>
   168b8:	cmp	r0, #0
   168bc:	bne	16bfc <argp_parse@@Base+0x8cc>
   168c0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   168c4:	cmp	r3, #0
   168c8:	beq	168e0 <argp_parse@@Base+0x5b0>
   168cc:	ldr	r2, [fp, #-84]	; 0xffffffac
   168d0:	cmp	r3, r2
   168d4:	movgt	r3, #0
   168d8:	strgt	r3, [fp, #-72]	; 0xffffffb8
   168dc:	ble	168ec <argp_parse@@Base+0x5bc>
   168e0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   168e4:	cmp	r3, #0
   168e8:	bne	16810 <argp_parse@@Base+0x4e0>
   168ec:	ldr	r3, [fp, #-84]	; 0xffffffac
   168f0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   168f4:	cmp	r3, r2
   168f8:	bge	16e6c <argp_parse@@Base+0xb3c>
   168fc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   16900:	tst	r2, #4
   16904:	bne	16e74 <argp_parse@@Base+0xb44>
   16908:	add	r2, r3, #1
   1690c:	str	r2, [fp, #-84]	; 0xffffffac
   16910:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16914:	ldr	r3, [r2, r3, lsl #2]
   16918:	str	r3, [fp, #-136]	; 0xffffff78
   1691c:	ldr	r7, [fp, #-136]	; 0xffffff78
   16920:	ldr	r4, [fp, #-84]	; 0xffffffac
   16924:	sub	r4, r4, #1
   16928:	str	r4, [fp, #-84]	; 0xffffffac
   1692c:	ldr	r5, [fp, #-112]	; 0xffffff90
   16930:	ldr	r3, [fp, #-108]	; 0xffffff94
   16934:	cmp	r3, r5
   16938:	bls	16bf4 <argp_parse@@Base+0x8c4>
   1693c:	mov	r6, #0
   16940:	b	16a70 <argp_parse@@Base+0x740>
   16944:	sub	r3, fp, #148	; 0x94
   16948:	str	r3, [sp, #4]
   1694c:	mov	r3, #0
   16950:	str	r3, [sp]
   16954:	ldr	r3, [fp, #-152]	; 0xffffff68
   16958:	ldr	r2, [fp, #-156]	; 0xffffff64
   1695c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16960:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16964:	bl	17090 <argp_parse@@Base+0xd60>
   16968:	mov	r5, r0
   1696c:	b	16854 <argp_parse@@Base+0x524>
   16970:	mov	r3, #0
   16974:	str	r3, [fp, #-100]	; 0xffffff9c
   16978:	cmp	r4, #1
   1697c:	ble	168ec <argp_parse@@Base+0x5bc>
   16980:	sub	r3, r4, #-1073741823	; 0xc0000001
   16984:	mov	r1, sl
   16988:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1698c:	ldr	r0, [r2, r3, lsl #2]
   16990:	bl	11754 <strcmp@plt>
   16994:	cmp	r0, #0
   16998:	streq	r4, [fp, #-72]	; 0xffffffb8
   1699c:	b	168ec <argp_parse@@Base+0x5bc>
   169a0:	ldr	r3, [fp, #-140]	; 0xffffff74
   169a4:	cmn	r3, #1
   169a8:	bne	16e64 <argp_parse@@Base+0xb34>
   169ac:	ldr	r4, [fp, #-136]	; 0xffffff78
   169b0:	mov	r1, r5
   169b4:	ldr	r0, [fp, #-156]	; 0xffffff64
   169b8:	bl	119f4 <strchr@plt>
   169bc:	subs	r1, r0, #0
   169c0:	beq	16a10 <argp_parse@@Base+0x6e0>
   169c4:	ldr	r0, [fp, #-112]	; 0xffffff90
   169c8:	ldr	r2, [fp, #-108]	; 0xffffff94
   169cc:	cmp	r2, r0
   169d0:	bls	16a10 <argp_parse@@Base+0x6e0>
   169d4:	ldr	r3, [r0, #8]
   169d8:	cmp	r1, r3
   169dc:	bcc	169f8 <argp_parse@@Base+0x6c8>
   169e0:	add	r0, r0, #36	; 0x24
   169e4:	cmp	r2, r0
   169e8:	bls	16a10 <argp_parse@@Base+0x6e0>
   169ec:	ldr	r3, [r0, #8]
   169f0:	cmp	r1, r3
   169f4:	bcs	169e0 <argp_parse@@Base+0x6b0>
   169f8:	mov	r3, r4
   169fc:	mov	r2, r5
   16a00:	sub	r1, fp, #96	; 0x60
   16a04:	bl	15cec <daemon@@Base+0x2c>
   16a08:	cmp	r0, #7
   16a0c:	bne	168b8 <argp_parse@@Base+0x588>
   16a10:	ldr	r3, [pc, #1128]	; 16e80 <argp_parse@@Base+0xb50>
   16a14:	mov	r2, r5
   16a18:	movw	r1, #52576	; 0xcd60
   16a1c:	movt	r1, #1
   16a20:	sub	r0, fp, #96	; 0x60
   16a24:	bl	1aa38 <argp_error@@Base>
   16a28:	b	16ab0 <argp_parse@@Base+0x780>
   16a2c:	ldr	r3, [fp, #-84]	; 0xffffffac
   16a30:	sub	r3, r3, #1
   16a34:	str	r3, [fp, #-84]	; 0xffffffac
   16a38:	mov	r3, r6
   16a3c:	mov	r2, r9
   16a40:	sub	r1, fp, #96	; 0x60
   16a44:	mov	r0, r5
   16a48:	bl	15cec <daemon@@Base+0x2c>
   16a4c:	add	r5, r5, #36	; 0x24
   16a50:	ldr	r2, [fp, #-108]	; 0xffffff94
   16a54:	cmp	r5, r2
   16a58:	movcs	r3, #0
   16a5c:	movcc	r3, #1
   16a60:	cmp	r0, #7
   16a64:	movne	r3, #0
   16a68:	cmp	r3, #0
   16a6c:	beq	16b40 <argp_parse@@Base+0x810>
   16a70:	ldr	r3, [fp, #-84]	; 0xffffffac
   16a74:	add	r3, r3, #1
   16a78:	str	r3, [fp, #-84]	; 0xffffffac
   16a7c:	mov	r3, r7
   16a80:	mov	r2, r6
   16a84:	sub	r1, fp, #96	; 0x60
   16a88:	mov	r0, r5
   16a8c:	bl	15cec <daemon@@Base+0x2c>
   16a90:	cmp	r0, #7
   16a94:	beq	16a2c <argp_parse@@Base+0x6fc>
   16a98:	add	r5, r5, #36	; 0x24
   16a9c:	cmp	r0, #0
   16aa0:	beq	16b50 <argp_parse@@Base+0x820>
   16aa4:	cmp	r0, #7
   16aa8:	bne	168b8 <argp_parse@@Base+0x588>
   16aac:	mov	r5, #1
   16ab0:	add	r5, r5, #1
   16ab4:	bics	r3, r5, #2
   16ab8:	moveq	r3, #1
   16abc:	movne	r3, #0
   16ac0:	cmp	r3, #0
   16ac4:	beq	16e08 <argp_parse@@Base+0xad8>
   16ac8:	ldr	r3, [fp, #-84]	; 0xffffffac
   16acc:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16ad0:	cmp	r3, r2
   16ad4:	beq	16cbc <argp_parse@@Base+0x98c>
   16ad8:	ldr	r2, [fp, #4]
   16adc:	cmp	r2, #0
   16ae0:	strne	r3, [r2]
   16ae4:	beq	16de0 <argp_parse@@Base+0xab0>
   16ae8:	ldr	r5, [fp, #-108]	; 0xffffff94
   16aec:	sub	r5, r5, #36	; 0x24
   16af0:	ldr	r3, [fp, #-112]	; 0xffffff90
   16af4:	cmp	r5, r3
   16af8:	bcc	16e48 <argp_parse@@Base+0xb18>
   16afc:	mov	r6, #4
   16b00:	movt	r6, #256	; 0x100
   16b04:	mov	r7, #0
   16b08:	mov	r3, r7
   16b0c:	mov	r2, r6
   16b10:	sub	r1, fp, #96	; 0x60
   16b14:	mov	r0, r5
   16b18:	bl	15cec <daemon@@Base+0x2c>
   16b1c:	sub	r5, r5, #36	; 0x24
   16b20:	ldr	r3, [fp, #-112]	; 0xffffff90
   16b24:	cmp	r5, r3
   16b28:	bcc	16e20 <argp_parse@@Base+0xaf0>
   16b2c:	cmp	r0, #7
   16b30:	cmpne	r0, #0
   16b34:	beq	16b08 <argp_parse@@Base+0x7d8>
   16b38:	mov	r4, r0
   16b3c:	b	16e30 <argp_parse@@Base+0xb00>
   16b40:	cmp	r0, #0
   16b44:	bne	16aa4 <argp_parse@@Base+0x774>
   16b48:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16b4c:	str	r3, [fp, #-84]	; 0xffffffac
   16b50:	ldr	r3, [fp, #-84]	; 0xffffffac
   16b54:	cmp	r4, r3
   16b58:	movge	r3, #1
   16b5c:	strge	r3, [fp, #-100]	; 0xffffff9c
   16b60:	bge	168c0 <argp_parse@@Base+0x590>
   16b64:	sub	r4, r3, r4
   16b68:	ldr	r3, [r5, #-24]	; 0xffffffe8
   16b6c:	add	r4, r3, r4
   16b70:	str	r4, [r5, #-24]	; 0xffffffe8
   16b74:	b	168c0 <argp_parse@@Base+0x590>
   16b78:	ldr	r3, [fp, #-152]	; 0xffffff68
   16b7c:	ldr	r2, [r3, #12]
   16b80:	cmp	r2, r5
   16b84:	beq	16bbc <argp_parse@@Base+0x88c>
   16b88:	ldr	r2, [r3]
   16b8c:	cmp	r2, #0
   16b90:	beq	16be8 <argp_parse@@Base+0x8b8>
   16b94:	add	r3, r3, #16
   16b98:	ldr	r2, [r3, #12]
   16b9c:	cmp	r5, r2
   16ba0:	beq	16bbc <argp_parse@@Base+0x88c>
   16ba4:	ldr	r2, [r3]
   16ba8:	cmp	r2, #0
   16bac:	bne	16b94 <argp_parse@@Base+0x864>
   16bb0:	movw	r2, #52568	; 0xcd58
   16bb4:	movt	r2, #1
   16bb8:	b	16bd0 <argp_parse@@Base+0x8a0>
   16bbc:	ldr	r2, [r3]
   16bc0:	movw	r3, #52568	; 0xcd58
   16bc4:	movt	r3, #1
   16bc8:	cmp	r2, #0
   16bcc:	moveq	r2, r3
   16bd0:	ldr	r3, [pc, #680]	; 16e80 <argp_parse@@Base+0xb50>
   16bd4:	movw	r1, #52584	; 0xcd68
   16bd8:	movt	r1, #1
   16bdc:	sub	r0, fp, #96	; 0x60
   16be0:	bl	1aa38 <argp_error@@Base>
   16be4:	b	16ab0 <argp_parse@@Base+0x780>
   16be8:	movw	r2, #52568	; 0xcd58
   16bec:	movt	r2, #1
   16bf0:	b	16bd0 <argp_parse@@Base+0x8a0>
   16bf4:	mov	r5, #1
   16bf8:	b	16ab0 <argp_parse@@Base+0x780>
   16bfc:	mov	r4, r0
   16c00:	cmp	r4, #7
   16c04:	beq	16e08 <argp_parse@@Base+0xad8>
   16c08:	ldr	r5, [fp, #-112]	; 0xffffff90
   16c0c:	ldr	r3, [fp, #-108]	; 0xffffff94
   16c10:	cmp	r5, r3
   16c14:	bcs	16c48 <argp_parse@@Base+0x918>
   16c18:	mov	r6, #5
   16c1c:	movt	r6, #256	; 0x100
   16c20:	mov	r7, #0
   16c24:	mov	r3, r7
   16c28:	mov	r2, r6
   16c2c:	sub	r1, fp, #96	; 0x60
   16c30:	mov	r0, r5
   16c34:	bl	15cec <daemon@@Base+0x2c>
   16c38:	add	r5, r5, #36	; 0x24
   16c3c:	ldr	r3, [fp, #-108]	; 0xffffff94
   16c40:	cmp	r5, r3
   16c44:	bcc	16c24 <argp_parse@@Base+0x8f4>
   16c48:	ldr	r5, [fp, #-108]	; 0xffffff94
   16c4c:	sub	r5, r5, #36	; 0x24
   16c50:	ldr	r3, [fp, #-112]	; 0xffffff90
   16c54:	cmp	r3, r5
   16c58:	bhi	16c8c <argp_parse@@Base+0x95c>
   16c5c:	mov	r6, #7
   16c60:	movt	r6, #256	; 0x100
   16c64:	mov	r7, #0
   16c68:	mov	r3, r7
   16c6c:	mov	r2, r6
   16c70:	sub	r1, fp, #96	; 0x60
   16c74:	mov	r0, r5
   16c78:	bl	15cec <daemon@@Base+0x2c>
   16c7c:	sub	r5, r5, #36	; 0x24
   16c80:	ldr	r3, [fp, #-112]	; 0xffffff90
   16c84:	cmp	r5, r3
   16c88:	bcs	16c68 <argp_parse@@Base+0x938>
   16c8c:	cmp	r4, #7
   16c90:	moveq	r4, #22
   16c94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16c98:	bl	17008 <argp_parse@@Base+0xcd8>
   16c9c:	mov	r0, r4
   16ca0:	sub	sp, fp, #32
   16ca4:	ldrd	r4, [sp]
   16ca8:	ldrd	r6, [sp, #8]
   16cac:	ldrd	r8, [sp, #16]
   16cb0:	ldrd	sl, [sp, #24]
   16cb4:	add	sp, sp, #32
   16cb8:	pop	{pc}		; (ldr pc, [sp], #4)
   16cbc:	ldr	r6, [fp, #-112]	; 0xffffff90
   16cc0:	ldr	r5, [fp, #-108]	; 0xffffff94
   16cc4:	cmp	r5, r6
   16cc8:	bls	16e50 <argp_parse@@Base+0xb20>
   16ccc:	mov	r4, #0
   16cd0:	mov	r7, #2
   16cd4:	movt	r7, #256	; 0x100
   16cd8:	mov	r8, r4
   16cdc:	mov	r0, r4
   16ce0:	b	16d00 <argp_parse@@Base+0x9d0>
   16ce4:	add	r6, r6, #36	; 0x24
   16ce8:	ldr	r5, [fp, #-108]	; 0xffffff94
   16cec:	cmp	r6, r5
   16cf0:	bcs	16d3c <argp_parse@@Base+0xa0c>
   16cf4:	cmp	r0, #7
   16cf8:	cmpne	r0, #0
   16cfc:	bne	16d24 <argp_parse@@Base+0x9f4>
   16d00:	ldr	r3, [r6, #12]
   16d04:	cmp	r3, #0
   16d08:	bne	16ce4 <argp_parse@@Base+0x9b4>
   16d0c:	mov	r3, r8
   16d10:	mov	r2, r7
   16d14:	sub	r1, fp, #96	; 0x60
   16d18:	mov	r0, r6
   16d1c:	bl	15cec <daemon@@Base+0x2c>
   16d20:	b	16ce4 <argp_parse@@Base+0x9b4>
   16d24:	mov	r4, r0
   16d28:	sub	r5, r5, #36	; 0x24
   16d2c:	ldr	r3, [fp, #-112]	; 0xffffff90
   16d30:	cmp	r3, r5
   16d34:	bls	16d50 <argp_parse@@Base+0xa20>
   16d38:	b	16d9c <argp_parse@@Base+0xa6c>
   16d3c:	mov	r4, r0
   16d40:	sub	r5, r5, #36	; 0x24
   16d44:	ldr	r3, [fp, #-112]	; 0xffffff90
   16d48:	cmp	r3, r5
   16d4c:	bhi	16dc4 <argp_parse@@Base+0xa94>
   16d50:	cmp	r4, #7
   16d54:	cmpne	r4, #0
   16d58:	bne	16d9c <argp_parse@@Base+0xa6c>
   16d5c:	mov	r6, #1
   16d60:	movt	r6, #256	; 0x100
   16d64:	mov	r7, #0
   16d68:	mov	r3, r7
   16d6c:	mov	r2, r6
   16d70:	sub	r1, fp, #96	; 0x60
   16d74:	mov	r0, r5
   16d78:	bl	15cec <daemon@@Base+0x2c>
   16d7c:	sub	r5, r5, #36	; 0x24
   16d80:	ldr	r3, [fp, #-112]	; 0xffffff90
   16d84:	cmp	r5, r3
   16d88:	bcc	16dc0 <argp_parse@@Base+0xa90>
   16d8c:	cmp	r0, #7
   16d90:	cmpne	r0, #0
   16d94:	beq	16d68 <argp_parse@@Base+0xa38>
   16d98:	mov	r4, r0
   16d9c:	ldr	r3, [fp, #4]
   16da0:	cmp	r3, #0
   16da4:	beq	16db4 <argp_parse@@Base+0xa84>
   16da8:	ldr	r3, [fp, #-84]	; 0xffffffac
   16dac:	ldr	r2, [fp, #4]
   16db0:	str	r3, [r2]
   16db4:	cmp	r4, #0
   16db8:	beq	16ae8 <argp_parse@@Base+0x7b8>
   16dbc:	b	16c00 <argp_parse@@Base+0x8d0>
   16dc0:	mov	r4, r0
   16dc4:	cmp	r4, #7
   16dc8:	bne	16d9c <argp_parse@@Base+0xa6c>
   16dcc:	ldr	r3, [fp, #4]
   16dd0:	cmp	r3, #0
   16dd4:	movne	r4, #0
   16dd8:	bne	16da8 <argp_parse@@Base+0xa78>
   16ddc:	b	16ae8 <argp_parse@@Base+0x7b8>
   16de0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16de4:	tst	r3, #2
   16de8:	bne	16e08 <argp_parse@@Base+0xad8>
   16dec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16df0:	cmp	r0, #0
   16df4:	beq	16e08 <argp_parse@@Base+0xad8>
   16df8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16dfc:	movw	r1, #52596	; 0xcd74
   16e00:	movt	r1, #1
   16e04:	bl	11a0c <fprintf@plt>
   16e08:	mov	r2, #260	; 0x104
   16e0c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16e10:	sub	r0, fp, #96	; 0x60
   16e14:	bl	1a970 <argp_state_help@@Base>
   16e18:	mov	r4, #7
   16e1c:	b	16c08 <argp_parse@@Base+0x8d8>
   16e20:	mov	r4, r0
   16e24:	cmp	r0, #7
   16e28:	movne	r4, r0
   16e2c:	moveq	r4, #0
   16e30:	ldr	r5, [fp, #-108]	; 0xffffff94
   16e34:	sub	r5, r5, #36	; 0x24
   16e38:	ldr	r3, [fp, #-112]	; 0xffffff90
   16e3c:	cmp	r3, r5
   16e40:	bls	16c5c <argp_parse@@Base+0x92c>
   16e44:	b	16c94 <argp_parse@@Base+0x964>
   16e48:	mov	r4, #0
   16e4c:	b	16c94 <argp_parse@@Base+0x964>
   16e50:	sub	r5, r5, #36	; 0x24
   16e54:	cmp	r5, r6
   16e58:	movcc	r4, #0
   16e5c:	bcs	16d5c <argp_parse@@Base+0xa2c>
   16e60:	b	16d9c <argp_parse@@Base+0xa6c>
   16e64:	mov	r3, #0
   16e68:	b	16ac0 <argp_parse@@Base+0x790>
   16e6c:	mov	r3, #1
   16e70:	b	16ac0 <argp_parse@@Base+0x790>
   16e74:	mov	r3, #1
   16e78:	b	16ac0 <argp_parse@@Base+0x790>
   16e7c:	andeq	ip, r1, r0, lsr ip
   16e80:	andeq	ip, r1, ip, asr #24
   16e84:	cmp	r1, #0
   16e88:	beq	16ed4 <argp_parse@@Base+0xba4>
   16e8c:	ldr	r2, [r1, #52]	; 0x34
   16e90:	ldr	r3, [r2, #48]	; 0x30
   16e94:	ldr	r1, [r2, #52]	; 0x34
   16e98:	cmp	r3, r1
   16e9c:	bcs	16edc <argp_parse@@Base+0xbac>
   16ea0:	ldr	r2, [r3, #4]
   16ea4:	cmp	r0, r2
   16ea8:	beq	16ec4 <argp_parse@@Base+0xb94>
   16eac:	add	r3, r3, #36	; 0x24
   16eb0:	cmp	r3, r1
   16eb4:	bcs	16ecc <argp_parse@@Base+0xb9c>
   16eb8:	ldr	r2, [r3, #4]
   16ebc:	cmp	r2, r0
   16ec0:	bne	16eac <argp_parse@@Base+0xb7c>
   16ec4:	ldr	r0, [r3, #24]
   16ec8:	bx	lr
   16ecc:	mov	r0, #0
   16ed0:	bx	lr
   16ed4:	mov	r0, r1
   16ed8:	bx	lr
   16edc:	mov	r0, #0
   16ee0:	bx	lr
   16ee4:	push	{lr}		; (str lr, [sp, #-4]!)
   16ee8:	sub	sp, sp, #12
   16eec:	movw	r1, #58548	; 0xe4b4
   16ef0:	movt	r1, #2
   16ef4:	ldr	r3, [r1, #4]
   16ef8:	str	r3, [sp]
   16efc:	movw	r3, #52820	; 0xce54
   16f00:	movt	r3, #1
   16f04:	movw	r2, #52836	; 0xce64
   16f08:	movt	r2, #1
   16f0c:	ldr	r1, [r1]
   16f10:	bl	174f8 <argp_parse@@Base+0x11c8>
   16f14:	add	sp, sp, #12
   16f18:	pop	{pc}		; (ldr pc, [sp], #4)
   16f1c:	movw	r3, #58544	; 0xe4b0
   16f20:	movt	r3, #2
   16f24:	movw	r2, #28388	; 0x6ee4
   16f28:	movt	r2, #1
   16f2c:	str	r2, [r3]
   16f30:	movw	r3, #58548	; 0xe4b4
   16f34:	movt	r3, #2
   16f38:	str	r0, [r3]
   16f3c:	str	r1, [r3, #4]
   16f40:	bx	lr
   16f44:	ldrb	r3, [r0]
   16f48:	cmp	r3, #47	; 0x2f
   16f4c:	bne	16f5c <argp_parse@@Base+0xc2c>
   16f50:	ldrb	r3, [r0, #1]!
   16f54:	cmp	r3, #47	; 0x2f
   16f58:	beq	16f50 <argp_parse@@Base+0xc20>
   16f5c:	ldrb	r2, [r0]
   16f60:	cmp	r2, #0
   16f64:	bxeq	lr
   16f68:	push	{lr}		; (str lr, [sp, #-4]!)
   16f6c:	mov	r1, r0
   16f70:	mov	r3, #0
   16f74:	mov	lr, #1
   16f78:	mov	ip, r3
   16f7c:	b	16f98 <argp_parse@@Base+0xc68>
   16f80:	cmp	r3, #0
   16f84:	movne	r0, r1
   16f88:	movne	r3, ip
   16f8c:	ldrb	r2, [r1, #1]!
   16f90:	cmp	r2, #0
   16f94:	beq	16fa8 <argp_parse@@Base+0xc78>
   16f98:	cmp	r2, #47	; 0x2f
   16f9c:	moveq	r3, lr
   16fa0:	bne	16f80 <argp_parse@@Base+0xc50>
   16fa4:	b	16f8c <argp_parse@@Base+0xc5c>
   16fa8:	pop	{pc}		; (ldr pc, [sp], #4)
   16fac:	str	r4, [sp, #-8]!
   16fb0:	str	lr, [sp, #4]
   16fb4:	mov	r4, r0
   16fb8:	bl	119dc <strlen@plt>
   16fbc:	cmp	r0, #1
   16fc0:	bls	16fe0 <argp_parse@@Base+0xcb0>
   16fc4:	add	r3, r4, r0
   16fc8:	ldrb	r3, [r3, #-1]
   16fcc:	cmp	r3, #47	; 0x2f
   16fd0:	subeq	r0, r0, #2
   16fd4:	addeq	r3, r4, r0
   16fd8:	rsbeq	r1, r4, #1
   16fdc:	beq	16fec <argp_parse@@Base+0xcbc>
   16fe0:	ldr	r4, [sp]
   16fe4:	add	sp, sp, #4
   16fe8:	pop	{pc}		; (ldr pc, [sp], #4)
   16fec:	add	r0, r1, r3
   16ff0:	cmp	r3, r4
   16ff4:	beq	16fe0 <argp_parse@@Base+0xcb0>
   16ff8:	ldrb	r2, [r3], #-1
   16ffc:	cmp	r2, #47	; 0x2f
   17000:	bne	16fe0 <argp_parse@@Base+0xcb0>
   17004:	b	16fec <argp_parse@@Base+0xcbc>
   17008:	strd	r4, [sp, #-12]!
   1700c:	str	lr, [sp, #8]
   17010:	sub	sp, sp, #12
   17014:	mov	r5, r0
   17018:	bl	11a24 <__errno_location@plt>
   1701c:	mov	r4, r0
   17020:	ldr	r3, [r0]
   17024:	str	r3, [sp]
   17028:	str	r3, [sp, #4]
   1702c:	mov	r3, #0
   17030:	str	r3, [r0]
   17034:	mov	r0, r5
   17038:	bl	117d8 <free@plt>
   1703c:	ldr	r3, [r4]
   17040:	clz	r3, r3
   17044:	lsr	r3, r3, #5
   17048:	add	r2, sp, #8
   1704c:	add	r3, r2, r3, lsl #2
   17050:	ldr	r3, [r3, #-8]
   17054:	str	r3, [r4]
   17058:	add	sp, sp, #12
   1705c:	ldrd	r4, [sp]
   17060:	add	sp, sp, #8
   17064:	pop	{pc}		; (ldr pc, [sp], #4)
   17068:	push	{lr}		; (str lr, [sp, #-4]!)
   1706c:	sub	sp, sp, #20
   17070:	mov	ip, #0
   17074:	str	ip, [sp, #8]
   17078:	str	ip, [sp, #4]
   1707c:	ldr	ip, [sp, #24]
   17080:	str	ip, [sp]
   17084:	bl	1b798 <argp_error@@Base+0xd60>
   17088:	add	sp, sp, #20
   1708c:	pop	{pc}		; (ldr pc, [sp], #4)
   17090:	push	{lr}		; (str lr, [sp, #-4]!)
   17094:	sub	sp, sp, #20
   17098:	mov	ip, #0
   1709c:	str	ip, [sp, #12]
   170a0:	ldr	lr, [sp, #28]
   170a4:	str	lr, [sp, #8]
   170a8:	str	ip, [sp, #4]
   170ac:	ldr	ip, [sp, #24]
   170b0:	str	ip, [sp]
   170b4:	bl	1b1dc <argp_error@@Base+0x7a4>
   170b8:	add	sp, sp, #20
   170bc:	pop	{pc}		; (ldr pc, [sp], #4)
   170c0:	push	{lr}		; (str lr, [sp, #-4]!)
   170c4:	sub	sp, sp, #20
   170c8:	mov	ip, #0
   170cc:	str	ip, [sp, #8]
   170d0:	mov	ip, #1
   170d4:	str	ip, [sp, #4]
   170d8:	ldr	ip, [sp, #24]
   170dc:	str	ip, [sp]
   170e0:	bl	1b798 <argp_error@@Base+0xd60>
   170e4:	add	sp, sp, #20
   170e8:	pop	{pc}		; (ldr pc, [sp], #4)
   170ec:	push	{lr}		; (str lr, [sp, #-4]!)
   170f0:	sub	sp, sp, #20
   170f4:	mov	ip, #0
   170f8:	str	ip, [sp, #12]
   170fc:	ldr	ip, [sp, #28]
   17100:	str	ip, [sp, #8]
   17104:	mov	ip, #1
   17108:	str	ip, [sp, #4]
   1710c:	ldr	ip, [sp, #24]
   17110:	str	ip, [sp]
   17114:	bl	1b1dc <argp_error@@Base+0x7a4>
   17118:	add	sp, sp, #20
   1711c:	pop	{pc}		; (ldr pc, [sp], #4)
   17120:	strd	r4, [sp, #-16]!
   17124:	str	r6, [sp, #8]
   17128:	str	lr, [sp, #12]
   1712c:	subs	r4, r0, #0
   17130:	beq	171cc <argp_parse@@Base+0xe9c>
   17134:	mov	r1, #47	; 0x2f
   17138:	mov	r0, r4
   1713c:	bl	11ae4 <strrchr@plt>
   17140:	subs	r5, r0, #0
   17144:	beq	171a4 <argp_parse@@Base+0xe74>
   17148:	add	r6, r5, #1
   1714c:	sub	r3, r6, r4
   17150:	cmp	r3, #6
   17154:	ble	171a4 <argp_parse@@Base+0xe74>
   17158:	mov	r2, #7
   1715c:	movw	r1, #52908	; 0xceac
   17160:	movt	r1, #1
   17164:	sub	r0, r5, #6
   17168:	bl	11bd4 <strncmp@plt>
   1716c:	cmp	r0, #0
   17170:	bne	171a4 <argp_parse@@Base+0xe74>
   17174:	mov	r2, #3
   17178:	movw	r1, #52916	; 0xceb4
   1717c:	movt	r1, #1
   17180:	mov	r0, r6
   17184:	bl	11bd4 <strncmp@plt>
   17188:	cmp	r0, #0
   1718c:	movne	r4, r6
   17190:	bne	171a4 <argp_parse@@Base+0xe74>
   17194:	add	r4, r5, #4
   17198:	movw	r3, #58280	; 0xe3a8
   1719c:	movt	r3, #2
   171a0:	str	r4, [r3]
   171a4:	movw	r3, #58556	; 0xe4bc
   171a8:	movt	r3, #2
   171ac:	str	r4, [r3]
   171b0:	movw	r3, #58284	; 0xe3ac
   171b4:	movt	r3, #2
   171b8:	str	r4, [r3]
   171bc:	ldrd	r4, [sp]
   171c0:	ldr	r6, [sp, #8]
   171c4:	add	sp, sp, #12
   171c8:	pop	{pc}		; (ldr pc, [sp], #4)
   171cc:	movw	r3, #58288	; 0xe3b0
   171d0:	movt	r3, #2
   171d4:	ldr	r3, [r3]
   171d8:	mov	r2, #55	; 0x37
   171dc:	mov	r1, #1
   171e0:	movw	r0, #52852	; 0xce74
   171e4:	movt	r0, #1
   171e8:	bl	118f8 <fwrite@plt>
   171ec:	bl	11be0 <abort@plt>
   171f0:	strd	r4, [sp, #-16]!
   171f4:	str	r6, [sp, #8]
   171f8:	str	lr, [sp, #12]
   171fc:	sub	sp, sp, #32
   17200:	mov	r4, r0
   17204:	ldr	r5, [sp, #48]	; 0x30
   17208:	ldr	r6, [sp, #52]	; 0x34
   1720c:	cmp	r1, #0
   17210:	beq	172ac <argp_parse@@Base+0xf7c>
   17214:	str	r3, [sp]
   17218:	mov	r3, r2
   1721c:	mov	r2, r1
   17220:	movw	r1, #52920	; 0xceb8
   17224:	movt	r1, #1
   17228:	bl	11a0c <fprintf@plt>
   1722c:	movw	r3, #2022	; 0x7e6
   17230:	movw	r2, #52940	; 0xcecc
   17234:	movt	r2, #1
   17238:	movw	r1, #53708	; 0xd1cc
   1723c:	movt	r1, #1
   17240:	mov	r0, r4
   17244:	bl	11a0c <fprintf@plt>
   17248:	mov	r1, r4
   1724c:	mov	r0, #10
   17250:	bl	11b08 <fputc@plt>
   17254:	movw	r2, #52944	; 0xced0
   17258:	movt	r2, #1
   1725c:	movw	r1, #52980	; 0xcef4
   17260:	movt	r1, #1
   17264:	mov	r0, r4
   17268:	bl	11a0c <fprintf@plt>
   1726c:	mov	r1, r4
   17270:	mov	r0, #10
   17274:	bl	11b08 <fputc@plt>
   17278:	cmp	r6, #9
   1727c:	ldrls	pc, [pc, r6, lsl #2]
   17280:	b	174a4 <argp_parse@@Base+0x1174>
   17284:	ldrdeq	r7, [r1], -r0
   17288:			; <UNDEFINED> instruction: 0x000172bc
   1728c:	andeq	r7, r1, r4, ror #5
   17290:	andeq	r7, r1, r0, lsl #6
   17294:	andeq	r7, r1, r4, lsr #6
   17298:	andeq	r7, r1, r0, asr r3
   1729c:	andeq	r7, r1, r4, lsl #7
   172a0:	andeq	r7, r1, r0, asr #7
   172a4:	andeq	r7, r1, r4, lsl #8
   172a8:	andeq	r7, r1, r0, asr r4
   172ac:	movw	r1, #52932	; 0xcec4
   172b0:	movt	r1, #1
   172b4:	bl	11a0c <fprintf@plt>
   172b8:	b	1722c <argp_parse@@Base+0xefc>
   172bc:	ldr	r2, [r5]
   172c0:	movw	r1, #53152	; 0xcfa0
   172c4:	movt	r1, #1
   172c8:	mov	r0, r4
   172cc:	bl	11a0c <fprintf@plt>
   172d0:	add	sp, sp, #32
   172d4:	ldrd	r4, [sp]
   172d8:	ldr	r6, [sp, #8]
   172dc:	add	sp, sp, #12
   172e0:	pop	{pc}		; (ldr pc, [sp], #4)
   172e4:	ldr	r3, [r5, #4]
   172e8:	ldr	r2, [r5]
   172ec:	movw	r1, #53168	; 0xcfb0
   172f0:	movt	r1, #1
   172f4:	mov	r0, r4
   172f8:	bl	11a0c <fprintf@plt>
   172fc:	b	172d0 <argp_parse@@Base+0xfa0>
   17300:	ldr	r3, [r5, #8]
   17304:	str	r3, [sp]
   17308:	ldr	r3, [r5, #4]
   1730c:	ldr	r2, [r5]
   17310:	movw	r1, #53192	; 0xcfc8
   17314:	movt	r1, #1
   17318:	mov	r0, r4
   1731c:	bl	11a0c <fprintf@plt>
   17320:	b	172d0 <argp_parse@@Base+0xfa0>
   17324:	ldr	r3, [r5, #12]
   17328:	str	r3, [sp, #4]
   1732c:	ldr	r3, [r5, #8]
   17330:	str	r3, [sp]
   17334:	ldr	r3, [r5, #4]
   17338:	ldr	r2, [r5]
   1733c:	movw	r1, #53220	; 0xcfe4
   17340:	movt	r1, #1
   17344:	mov	r0, r4
   17348:	bl	11a0c <fprintf@plt>
   1734c:	b	172d0 <argp_parse@@Base+0xfa0>
   17350:	ldr	r3, [r5, #16]
   17354:	str	r3, [sp, #8]
   17358:	ldr	r3, [r5, #12]
   1735c:	str	r3, [sp, #4]
   17360:	ldr	r3, [r5, #8]
   17364:	str	r3, [sp]
   17368:	ldr	r3, [r5, #4]
   1736c:	ldr	r2, [r5]
   17370:	movw	r1, #53252	; 0xd004
   17374:	movt	r1, #1
   17378:	mov	r0, r4
   1737c:	bl	11a0c <fprintf@plt>
   17380:	b	172d0 <argp_parse@@Base+0xfa0>
   17384:	ldr	r3, [r5, #20]
   17388:	str	r3, [sp, #12]
   1738c:	ldr	r3, [r5, #16]
   17390:	str	r3, [sp, #8]
   17394:	ldr	r3, [r5, #12]
   17398:	str	r3, [sp, #4]
   1739c:	ldr	r3, [r5, #8]
   173a0:	str	r3, [sp]
   173a4:	ldr	r3, [r5, #4]
   173a8:	ldr	r2, [r5]
   173ac:	movw	r1, #53288	; 0xd028
   173b0:	movt	r1, #1
   173b4:	mov	r0, r4
   173b8:	bl	11a0c <fprintf@plt>
   173bc:	b	172d0 <argp_parse@@Base+0xfa0>
   173c0:	ldr	r3, [r5, #24]
   173c4:	str	r3, [sp, #16]
   173c8:	ldr	r3, [r5, #20]
   173cc:	str	r3, [sp, #12]
   173d0:	ldr	r3, [r5, #16]
   173d4:	str	r3, [sp, #8]
   173d8:	ldr	r3, [r5, #12]
   173dc:	str	r3, [sp, #4]
   173e0:	ldr	r3, [r5, #8]
   173e4:	str	r3, [sp]
   173e8:	ldr	r3, [r5, #4]
   173ec:	ldr	r2, [r5]
   173f0:	movw	r1, #53328	; 0xd050
   173f4:	movt	r1, #1
   173f8:	mov	r0, r4
   173fc:	bl	11a0c <fprintf@plt>
   17400:	b	172d0 <argp_parse@@Base+0xfa0>
   17404:	ldr	r3, [r5, #28]
   17408:	str	r3, [sp, #20]
   1740c:	ldr	r3, [r5, #24]
   17410:	str	r3, [sp, #16]
   17414:	ldr	r3, [r5, #20]
   17418:	str	r3, [sp, #12]
   1741c:	ldr	r3, [r5, #16]
   17420:	str	r3, [sp, #8]
   17424:	ldr	r3, [r5, #12]
   17428:	str	r3, [sp, #4]
   1742c:	ldr	r3, [r5, #8]
   17430:	str	r3, [sp]
   17434:	ldr	r3, [r5, #4]
   17438:	ldr	r2, [r5]
   1743c:	movw	r1, #53372	; 0xd07c
   17440:	movt	r1, #1
   17444:	mov	r0, r4
   17448:	bl	11a0c <fprintf@plt>
   1744c:	b	172d0 <argp_parse@@Base+0xfa0>
   17450:	ldr	r3, [r5, #32]
   17454:	str	r3, [sp, #24]
   17458:	ldr	r3, [r5, #28]
   1745c:	str	r3, [sp, #20]
   17460:	ldr	r3, [r5, #24]
   17464:	str	r3, [sp, #16]
   17468:	ldr	r3, [r5, #20]
   1746c:	str	r3, [sp, #12]
   17470:	ldr	r3, [r5, #16]
   17474:	str	r3, [sp, #8]
   17478:	ldr	r3, [r5, #12]
   1747c:	str	r3, [sp, #4]
   17480:	ldr	r3, [r5, #8]
   17484:	str	r3, [sp]
   17488:	ldr	r3, [r5, #4]
   1748c:	ldr	r2, [r5]
   17490:	movw	r1, #53420	; 0xd0ac
   17494:	movt	r1, #1
   17498:	mov	r0, r4
   1749c:	bl	11a0c <fprintf@plt>
   174a0:	b	172d0 <argp_parse@@Base+0xfa0>
   174a4:	ldr	r3, [r5, #32]
   174a8:	str	r3, [sp, #24]
   174ac:	ldr	r3, [r5, #28]
   174b0:	str	r3, [sp, #20]
   174b4:	ldr	r3, [r5, #24]
   174b8:	str	r3, [sp, #16]
   174bc:	ldr	r3, [r5, #20]
   174c0:	str	r3, [sp, #12]
   174c4:	ldr	r3, [r5, #16]
   174c8:	str	r3, [sp, #8]
   174cc:	ldr	r3, [r5, #12]
   174d0:	str	r3, [sp, #4]
   174d4:	ldr	r3, [r5, #8]
   174d8:	str	r3, [sp]
   174dc:	ldr	r3, [r5, #4]
   174e0:	ldr	r2, [r5]
   174e4:	movw	r1, #53472	; 0xd0e0
   174e8:	movt	r1, #1
   174ec:	mov	r0, r4
   174f0:	bl	11a0c <fprintf@plt>
   174f4:	b	172d0 <argp_parse@@Base+0xfa0>
   174f8:	strd	r4, [sp, #-12]!
   174fc:	str	lr, [sp, #8]
   17500:	sub	sp, sp, #12
   17504:	ldr	r5, [sp, #24]
   17508:	ldr	ip, [r5]
   1750c:	cmp	ip, #0
   17510:	beq	17548 <argp_parse@@Base+0x1218>
   17514:	mov	lr, r5
   17518:	mov	ip, #0
   1751c:	add	ip, ip, #1
   17520:	ldr	r4, [lr, #4]!
   17524:	cmp	r4, #0
   17528:	bne	1751c <argp_parse@@Base+0x11ec>
   1752c:	str	ip, [sp, #4]
   17530:	str	r5, [sp]
   17534:	bl	171f0 <argp_parse@@Base+0xec0>
   17538:	add	sp, sp, #12
   1753c:	ldrd	r4, [sp]
   17540:	add	sp, sp, #8
   17544:	pop	{pc}		; (ldr pc, [sp], #4)
   17548:	mov	ip, #0
   1754c:	b	1752c <argp_parse@@Base+0x11fc>
   17550:	strd	r4, [sp, #-12]!
   17554:	str	lr, [sp, #8]
   17558:	sub	sp, sp, #52	; 0x34
   1755c:	ldr	r5, [sp, #64]	; 0x40
   17560:	add	r4, sp, #8
   17564:	mov	ip, #0
   17568:	ldr	lr, [r5], #4
   1756c:	str	lr, [r4], #4
   17570:	cmp	lr, #0
   17574:	beq	17584 <argp_parse@@Base+0x1254>
   17578:	add	ip, ip, #1
   1757c:	cmp	ip, #10
   17580:	bne	17568 <argp_parse@@Base+0x1238>
   17584:	str	ip, [sp, #4]
   17588:	add	ip, sp, #8
   1758c:	str	ip, [sp]
   17590:	bl	171f0 <argp_parse@@Base+0xec0>
   17594:	add	sp, sp, #52	; 0x34
   17598:	ldrd	r4, [sp]
   1759c:	add	sp, sp, #8
   175a0:	pop	{pc}		; (ldr pc, [sp], #4)
   175a4:	push	{r3}		; (str r3, [sp, #-4]!)
   175a8:	push	{lr}		; (str lr, [sp, #-4]!)
   175ac:	sub	sp, sp, #16
   175b0:	add	r3, sp, #24
   175b4:	str	r3, [sp, #12]
   175b8:	str	r3, [sp]
   175bc:	ldr	r3, [sp, #20]
   175c0:	bl	17550 <argp_parse@@Base+0x1220>
   175c4:	add	sp, sp, #16
   175c8:	pop	{lr}		; (ldr lr, [sp], #4)
   175cc:	add	sp, sp, #4
   175d0:	bx	lr
   175d4:	str	r4, [sp, #-8]!
   175d8:	str	lr, [sp, #4]
   175dc:	movw	r3, #58292	; 0xe3b4
   175e0:	movt	r3, #2
   175e4:	ldr	r1, [r3]
   175e8:	mov	r0, #10
   175ec:	bl	11b08 <fputc@plt>
   175f0:	movw	r1, #53532	; 0xd11c
   175f4:	movt	r1, #1
   175f8:	movw	r0, #53556	; 0xd134
   175fc:	movt	r0, #1
   17600:	bl	11790 <printf@plt>
   17604:	movw	r2, #53576	; 0xd148
   17608:	movt	r2, #1
   1760c:	movw	r1, #52836	; 0xce64
   17610:	movt	r1, #1
   17614:	movw	r0, #53616	; 0xd170
   17618:	movt	r0, #1
   1761c:	bl	11790 <printf@plt>
   17620:	movw	r1, #53636	; 0xd184
   17624:	movt	r1, #1
   17628:	movw	r0, #53668	; 0xd1a4
   1762c:	movt	r0, #1
   17630:	bl	11790 <printf@plt>
   17634:	ldr	r4, [sp]
   17638:	add	sp, sp, #4
   1763c:	pop	{pc}		; (ldr pc, [sp], #4)
   17640:	strd	r4, [sp, #-16]!
   17644:	str	r6, [sp, #8]
   17648:	str	lr, [sp, #12]
   1764c:	cmp	r1, #0
   17650:	cmpne	r0, #0
   17654:	beq	17690 <argp_parse@@Base+0x1360>
   17658:	mov	r2, r0
   1765c:	mov	r3, r1
   17660:	umull	r4, r5, r0, r1
   17664:	adds	r1, r5, #0
   17668:	movne	r1, #1
   1766c:	cmp	r4, #0
   17670:	movlt	r1, #1
   17674:	cmp	r1, #0
   17678:	beq	17698 <argp_parse@@Base+0x1368>
   1767c:	bl	11a24 <__errno_location@plt>
   17680:	mov	r3, #12
   17684:	str	r3, [r0]
   17688:	mov	r0, #0
   1768c:	b	176a4 <argp_parse@@Base+0x1374>
   17690:	mov	r3, #1
   17694:	mov	r2, r3
   17698:	mov	r1, r3
   1769c:	mov	r0, r2
   176a0:	bl	11724 <calloc@plt>
   176a4:	ldrd	r4, [sp]
   176a8:	ldr	r6, [sp, #8]
   176ac:	add	sp, sp, #12
   176b0:	pop	{pc}		; (ldr pc, [sp], #4)
   176b4:	str	r4, [sp, #-8]!
   176b8:	str	lr, [sp, #4]
   176bc:	cmp	r0, #0
   176c0:	beq	176dc <argp_parse@@Base+0x13ac>
   176c4:	bge	176e0 <argp_parse@@Base+0x13b0>
   176c8:	bl	11a24 <__errno_location@plt>
   176cc:	mov	r3, #12
   176d0:	str	r3, [r0]
   176d4:	mov	r0, #0
   176d8:	b	176e4 <argp_parse@@Base+0x13b4>
   176dc:	mov	r0, #1
   176e0:	bl	11958 <malloc@plt>
   176e4:	ldr	r4, [sp]
   176e8:	add	sp, sp, #4
   176ec:	pop	{pc}		; (ldr pc, [sp], #4)
   176f0:	str	r4, [sp, #-8]!
   176f4:	str	lr, [sp, #4]
   176f8:	cmp	r0, #0
   176fc:	beq	17720 <argp_parse@@Base+0x13f0>
   17700:	cmp	r1, #0
   17704:	beq	1772c <argp_parse@@Base+0x13fc>
   17708:	cmp	r1, #0
   1770c:	blt	17738 <argp_parse@@Base+0x1408>
   17710:	bl	118a4 <realloc@plt>
   17714:	ldr	r4, [sp]
   17718:	add	sp, sp, #4
   1771c:	pop	{pc}		; (ldr pc, [sp], #4)
   17720:	mov	r0, r1
   17724:	bl	176b4 <argp_parse@@Base+0x1384>
   17728:	b	17714 <argp_parse@@Base+0x13e4>
   1772c:	bl	17008 <argp_parse@@Base+0xcd8>
   17730:	mov	r0, #0
   17734:	b	17714 <argp_parse@@Base+0x13e4>
   17738:	bl	11a24 <__errno_location@plt>
   1773c:	mov	r3, #12
   17740:	str	r3, [r0]
   17744:	mov	r0, #0
   17748:	b	17714 <argp_parse@@Base+0x13e4>
   1774c:	ldr	r3, [r0]
   17750:	ldr	r2, [r0, #4]
   17754:	cmp	r2, #0
   17758:	beq	17794 <argp_parse@@Base+0x1464>
   1775c:	add	r3, r3, #24
   17760:	b	17770 <argp_parse@@Base+0x1440>
   17764:	add	r3, r3, #24
   17768:	subs	r2, r2, #1
   1776c:	beq	1778c <argp_parse@@Base+0x145c>
   17770:	ldr	r0, [r3, #-24]	; 0xffffffe8
   17774:	cmp	r0, #0
   17778:	beq	17764 <argp_parse@@Base+0x1434>
   1777c:	ldr	r1, [r3, #-12]
   17780:	tst	r1, #2
   17784:	bne	17764 <argp_parse@@Base+0x1434>
   17788:	bx	lr
   1778c:	mov	r0, #0
   17790:	bx	lr
   17794:	mov	r0, #0
   17798:	b	17788 <argp_parse@@Base+0x1458>
   1779c:	ldr	r2, [r0, #8]
   177a0:	cmp	r2, #0
   177a4:	beq	177b0 <argp_parse@@Base+0x1480>
   177a8:	mov	r0, #0
   177ac:	bx	lr
   177b0:	ldr	r2, [r1, #8]
   177b4:	cmp	r2, #0
   177b8:	bne	177a8 <argp_parse@@Base+0x1478>
   177bc:	ldr	r2, [r0, #12]
   177c0:	ldr	r1, [r1, #12]
   177c4:	orr	r2, r2, r1
   177c8:	tst	r2, #16
   177cc:	bne	177a8 <argp_parse@@Base+0x1478>
   177d0:	ldr	r1, [r0, #4]
   177d4:	ldr	r2, [r3]
   177d8:	add	r0, r2, #1
   177dc:	str	r0, [r3]
   177e0:	strb	r1, [r2]
   177e4:	b	177a8 <argp_parse@@Base+0x1478>
   177e8:	str	r4, [sp, #-8]!
   177ec:	str	lr, [sp, #4]
   177f0:	mov	r4, r0
   177f4:	bl	119ac <__ctype_b_loc@plt>
   177f8:	ldr	r3, [r4]
   177fc:	ldrb	r2, [r3]
   17800:	ldr	ip, [r0]
   17804:	lsl	r1, r2, #1
   17808:	ldrh	r1, [ip, r1]
   1780c:	tst	r1, #8192	; 0x2000
   17810:	beq	17820 <argp_parse@@Base+0x14f0>
   17814:	add	r3, r3, #1
   17818:	str	r3, [r4]
   1781c:	b	177f8 <argp_parse@@Base+0x14c8>
   17820:	subs	ip, r2, #45	; 0x2d
   17824:	movne	ip, #1
   17828:	cmp	r2, #0
   1782c:	beq	17860 <argp_parse@@Base+0x1530>
   17830:	tst	r1, #8
   17834:	bne	17860 <argp_parse@@Base+0x1530>
   17838:	add	r3, r3, #1
   1783c:	str	r3, [r4]
   17840:	ldrb	r2, [r3]
   17844:	cmp	r2, #0
   17848:	beq	17860 <argp_parse@@Base+0x1530>
   1784c:	ldr	r1, [r0]
   17850:	lsl	r2, r2, #1
   17854:	ldrh	r2, [r1, r2]
   17858:	tst	r2, #8
   1785c:	beq	17838 <argp_parse@@Base+0x1508>
   17860:	mov	r0, ip
   17864:	ldr	r4, [sp]
   17868:	add	sp, sp, #4
   1786c:	pop	{pc}		; (ldr pc, [sp], #4)
   17870:	strd	r4, [sp, #-16]!
   17874:	str	r6, [sp, #8]
   17878:	str	lr, [sp, #12]
   1787c:	mov	r5, r0
   17880:	ldr	r0, [r0, #12]
   17884:	cmp	r0, #0
   17888:	beq	178a0 <argp_parse@@Base+0x1570>
   1788c:	ldr	r4, [r0, #24]
   17890:	bl	17008 <argp_parse@@Base+0xcd8>
   17894:	mov	r0, r4
   17898:	cmp	r4, #0
   1789c:	bne	1788c <argp_parse@@Base+0x155c>
   178a0:	ldr	r3, [r5, #4]
   178a4:	cmp	r3, #0
   178a8:	bne	178c4 <argp_parse@@Base+0x1594>
   178ac:	mov	r0, r5
   178b0:	bl	17008 <argp_parse@@Base+0xcd8>
   178b4:	ldrd	r4, [sp]
   178b8:	ldr	r6, [sp, #8]
   178bc:	add	sp, sp, #12
   178c0:	pop	{pc}		; (ldr pc, [sp], #4)
   178c4:	ldr	r0, [r5]
   178c8:	bl	17008 <argp_parse@@Base+0xcd8>
   178cc:	ldr	r0, [r5, #8]
   178d0:	bl	17008 <argp_parse@@Base+0xcd8>
   178d4:	b	178ac <argp_parse@@Base+0x157c>
   178d8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   178dc:	strd	r6, [sp, #8]
   178e0:	str	r8, [sp, #16]
   178e4:	str	lr, [sp, #20]
   178e8:	mov	r6, r1
   178ec:	ldr	r7, [r0]
   178f0:	ldr	r3, [r0, #4]
   178f4:	sub	r8, r3, #1
   178f8:	cmp	r3, #0
   178fc:	bne	17968 <argp_parse@@Base+0x1638>
   17900:	mov	r7, #0
   17904:	b	17940 <argp_parse@@Base+0x1610>
   17908:	sub	r5, r5, #1
   1790c:	add	r4, r4, #24
   17910:	cmn	r5, #1
   17914:	beq	17958 <argp_parse@@Base+0x1628>
   17918:	ldr	r0, [r4, #-24]	; 0xffffffe8
   1791c:	cmp	r0, #0
   17920:	beq	17908 <argp_parse@@Base+0x15d8>
   17924:	ldr	r3, [r4, #-12]
   17928:	tst	r3, #2
   1792c:	bne	17908 <argp_parse@@Base+0x15d8>
   17930:	mov	r1, r6
   17934:	bl	11754 <strcmp@plt>
   17938:	cmp	r0, #0
   1793c:	bne	17908 <argp_parse@@Base+0x15d8>
   17940:	mov	r0, r7
   17944:	ldrd	r4, [sp]
   17948:	ldrd	r6, [sp, #8]
   1794c:	ldr	r8, [sp, #16]
   17950:	add	sp, sp, #20
   17954:	pop	{pc}		; (ldr pc, [sp], #4)
   17958:	add	r7, r7, #28
   1795c:	sub	r8, r8, #1
   17960:	cmn	r8, #1
   17964:	beq	17984 <argp_parse@@Base+0x1654>
   17968:	ldr	r4, [r7]
   1796c:	ldr	r3, [r7, #4]
   17970:	sub	r5, r3, #1
   17974:	cmp	r3, #0
   17978:	beq	17958 <argp_parse@@Base+0x1628>
   1797c:	add	r4, r4, #24
   17980:	b	17918 <argp_parse@@Base+0x15e8>
   17984:	mov	r7, #0
   17988:	b	17940 <argp_parse@@Base+0x1610>
   1798c:	strd	r4, [sp, #-16]!
   17990:	str	r6, [sp, #8]
   17994:	str	lr, [sp, #12]
   17998:	ldr	r4, [r0, #16]
   1799c:	ldr	r0, [r0, #8]
   179a0:	cmp	r0, #0
   179a4:	moveq	r5, #0
   179a8:	beq	179bc <argp_parse@@Base+0x168c>
   179ac:	mov	r1, #10
   179b0:	bl	119f4 <strchr@plt>
   179b4:	adds	r5, r0, #0
   179b8:	movne	r5, #1
   179bc:	cmp	r4, #0
   179c0:	beq	179e4 <argp_parse@@Base+0x16b4>
   179c4:	ldr	r0, [r4]
   179c8:	cmp	r0, #0
   179cc:	beq	179e4 <argp_parse@@Base+0x16b4>
   179d0:	bl	1798c <argp_parse@@Base+0x165c>
   179d4:	add	r5, r5, r0
   179d8:	ldr	r0, [r4, #16]!
   179dc:	cmp	r0, #0
   179e0:	bne	179d0 <argp_parse@@Base+0x16a0>
   179e4:	mov	r0, r5
   179e8:	ldrd	r4, [sp]
   179ec:	ldr	r6, [sp, #8]
   179f0:	add	sp, sp, #12
   179f4:	pop	{pc}		; (ldr pc, [sp], #4)
   179f8:	strd	r4, [sp, #-16]!
   179fc:	str	r6, [sp, #8]
   17a00:	str	lr, [sp, #12]
   17a04:	mov	r4, r0
   17a08:	subs	r5, r2, #0
   17a0c:	beq	17a44 <argp_parse@@Base+0x1714>
   17a10:	mov	r6, r1
   17a14:	ldr	r2, [r5, #20]
   17a18:	cmp	r2, #0
   17a1c:	beq	17a44 <argp_parse@@Base+0x1714>
   17a20:	mov	r1, r3
   17a24:	mov	r0, r5
   17a28:	bl	16e84 <argp_parse@@Base+0xb54>
   17a2c:	ldr	r3, [r5, #20]
   17a30:	mov	r2, r0
   17a34:	mov	r1, r4
   17a38:	mov	r0, r6
   17a3c:	blx	r3
   17a40:	mov	r4, r0
   17a44:	mov	r0, r4
   17a48:	ldrd	r4, [sp]
   17a4c:	ldr	r6, [sp, #8]
   17a50:	add	sp, sp, #12
   17a54:	pop	{pc}		; (ldr pc, [sp], #4)
   17a58:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17a5c:	strd	r6, [sp, #8]
   17a60:	strd	r8, [sp, #16]
   17a64:	strd	sl, [sp, #24]
   17a68:	str	lr, [sp, #32]
   17a6c:	sub	sp, sp, #20
   17a70:	ldr	r4, [r0]
   17a74:	ldr	r9, [r0, #8]
   17a78:	ldr	r6, [r0, #4]
   17a7c:	cmp	r6, #0
   17a80:	beq	17ad4 <argp_parse@@Base+0x17a4>
   17a84:	str	r3, [sp, #12]
   17a88:	str	r2, [sp, #8]
   17a8c:	str	r1, [sp, #4]
   17a90:	mov	fp, r4
   17a94:	mov	sl, #0
   17a98:	b	17b24 <argp_parse@@Base+0x17f4>
   17a9c:	and	r3, r5, #4
   17aa0:	cmp	r3, #0
   17aa4:	moveq	fp, r4
   17aa8:	tst	r5, #2
   17aac:	bne	17acc <argp_parse@@Base+0x179c>
   17ab0:	ldr	r3, [sp, #12]
   17ab4:	ldr	r2, [sp, #8]
   17ab8:	mov	r1, fp
   17abc:	mov	r0, r4
   17ac0:	ldr	ip, [sp, #4]
   17ac4:	blx	ip
   17ac8:	mov	r7, r0
   17acc:	add	r9, r9, #1
   17ad0:	b	17b04 <argp_parse@@Base+0x17d4>
   17ad4:	mov	r7, #0
   17ad8:	mov	r0, r7
   17adc:	add	sp, sp, #20
   17ae0:	ldrd	r4, [sp]
   17ae4:	ldrd	r6, [sp, #8]
   17ae8:	ldrd	r8, [sp, #16]
   17aec:	ldrd	sl, [sp, #24]
   17af0:	add	sp, sp, #32
   17af4:	pop	{pc}		; (ldr pc, [sp], #4)
   17af8:	ldrb	r3, [r9]
   17afc:	cmp	r3, r8
   17b00:	beq	17a9c <argp_parse@@Base+0x176c>
   17b04:	add	r4, r4, #24
   17b08:	subs	r6, r6, #1
   17b0c:	movne	r3, #1
   17b10:	moveq	r3, #0
   17b14:	cmp	r7, #0
   17b18:	movne	r3, #0
   17b1c:	cmp	r3, #0
   17b20:	beq	17ad8 <argp_parse@@Base+0x17a8>
   17b24:	ldr	r5, [r4, #12]
   17b28:	ands	r7, r5, #8
   17b2c:	movne	r7, sl
   17b30:	bne	17b04 <argp_parse@@Base+0x17d4>
   17b34:	ldr	r8, [r4, #4]
   17b38:	sub	r3, r8, #1
   17b3c:	cmp	r3, #254	; 0xfe
   17b40:	bhi	17b04 <argp_parse@@Base+0x17d4>
   17b44:	bl	119ac <__ctype_b_loc@plt>
   17b48:	ldr	r2, [r0]
   17b4c:	lsl	r3, r8, #1
   17b50:	ldrh	r3, [r2, r3]
   17b54:	tst	r3, #16384	; 0x4000
   17b58:	bne	17af8 <argp_parse@@Base+0x17c8>
   17b5c:	b	17b04 <argp_parse@@Base+0x17d4>
   17b60:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17b64:	strd	r6, [sp, #8]
   17b68:	strd	r8, [sp, #16]
   17b6c:	strd	sl, [sp, #24]
   17b70:	str	lr, [sp, #32]
   17b74:	add	fp, sp, #32
   17b78:	sub	sp, sp, #20
   17b7c:	ldr	r5, [r0, #4]
   17b80:	cmp	r5, #0
   17b84:	beq	17d2c <argp_parse@@Base+0x19fc>
   17b88:	str	r1, [fp, #-48]	; 0xffffffd0
   17b8c:	mov	r6, r0
   17b90:	ldr	r0, [r0, #8]
   17b94:	bl	119dc <strlen@plt>
   17b98:	add	r3, r0, #8
   17b9c:	bic	r3, r3, #7
   17ba0:	sub	sp, sp, r3
   17ba4:	mov	r8, sp
   17ba8:	str	r8, [fp, #-40]	; 0xffffffd8
   17bac:	ldr	r4, [r6]
   17bb0:	movw	r7, #30620	; 0x779c
   17bb4:	movt	r7, #1
   17bb8:	ldr	r2, [r4, #20]
   17bbc:	sub	r3, fp, #40	; 0x28
   17bc0:	ldr	r2, [r2, #24]
   17bc4:	mov	r1, r7
   17bc8:	mov	r0, r4
   17bcc:	bl	17a58 <argp_parse@@Base+0x1728>
   17bd0:	add	r4, r4, #28
   17bd4:	subs	r5, r5, #1
   17bd8:	bne	17bb8 <argp_parse@@Base+0x1888>
   17bdc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17be0:	cmp	r3, r8
   17be4:	bhi	17c58 <argp_parse@@Base+0x1928>
   17be8:	ldr	r4, [r6]
   17bec:	ldr	r5, [r6, #4]
   17bf0:	cmp	r5, #0
   17bf4:	beq	17d2c <argp_parse@@Base+0x19fc>
   17bf8:	movw	r7, #32548	; 0x7f24
   17bfc:	movt	r7, #1
   17c00:	ldr	r2, [r4, #20]
   17c04:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17c08:	ldr	r2, [r2, #24]
   17c0c:	mov	r1, r7
   17c10:	mov	r0, r4
   17c14:	bl	17a58 <argp_parse@@Base+0x1728>
   17c18:	add	r4, r4, #28
   17c1c:	subs	r5, r5, #1
   17c20:	bne	17c00 <argp_parse@@Base+0x18d0>
   17c24:	ldr	r7, [r6]
   17c28:	ldr	r8, [r6, #4]
   17c2c:	cmp	r8, #0
   17c30:	beq	17d2c <argp_parse@@Base+0x19fc>
   17c34:	add	r7, r7, #28
   17c38:	movw	sl, #53948	; 0xd2bc
   17c3c:	movt	sl, #1
   17c40:	movw	r9, #53932	; 0xd2ac
   17c44:	movt	r9, #1
   17c48:	movw	r3, #53960	; 0xd2c8
   17c4c:	movt	r3, #1
   17c50:	str	r3, [fp, #-52]	; 0xffffffcc
   17c54:	b	17d14 <argp_parse@@Base+0x19e4>
   17c58:	add	r2, r3, #1
   17c5c:	str	r2, [fp, #-40]	; 0xffffffd8
   17c60:	mov	r2, #0
   17c64:	strb	r2, [r3]
   17c68:	mov	r2, r8
   17c6c:	movw	r1, #53924	; 0xd2a4
   17c70:	movt	r1, #1
   17c74:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17c78:	bl	1bf4c <argp_error@@Base+0x1514>
   17c7c:	b	17be8 <argp_parse@@Base+0x18b8>
   17c80:	tst	r1, #16
   17c84:	bne	17cb8 <argp_parse@@Base+0x1988>
   17c88:	ldr	r3, [r6, #8]
   17c8c:	cmp	r3, #0
   17c90:	bne	17ca4 <argp_parse@@Base+0x1974>
   17c94:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17c98:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17c9c:	bl	1bf4c <argp_error@@Base+0x1514>
   17ca0:	b	17cb8 <argp_parse@@Base+0x1988>
   17ca4:	tst	r1, #1
   17ca8:	movne	r1, r9
   17cac:	moveq	r1, sl
   17cb0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17cb4:	bl	1bf4c <argp_error@@Base+0x1514>
   17cb8:	add	r4, r4, #24
   17cbc:	subs	r5, r5, #1
   17cc0:	beq	17d08 <argp_parse@@Base+0x19d8>
   17cc4:	ldr	r2, [r4]
   17cc8:	cmp	r2, #0
   17ccc:	beq	17cb8 <argp_parse@@Base+0x1988>
   17cd0:	ldr	r1, [r4, #12]
   17cd4:	and	r3, r1, #4
   17cd8:	cmp	r3, #0
   17cdc:	moveq	r6, r4
   17ce0:	tst	r1, #2
   17ce4:	bne	17cb8 <argp_parse@@Base+0x1988>
   17ce8:	ldr	r3, [r4, #8]
   17cec:	ldr	r0, [r6, #12]
   17cf0:	orr	r1, r1, r0
   17cf4:	cmp	r3, #0
   17cf8:	beq	17c80 <argp_parse@@Base+0x1950>
   17cfc:	tst	r1, #16
   17d00:	beq	17ca4 <argp_parse@@Base+0x1974>
   17d04:	b	17cb8 <argp_parse@@Base+0x1988>
   17d08:	add	r7, r7, #28
   17d0c:	subs	r8, r8, #1
   17d10:	beq	17d2c <argp_parse@@Base+0x19fc>
   17d14:	ldr	r4, [r7, #-28]	; 0xffffffe4
   17d18:	ldr	r5, [r7, #-24]	; 0xffffffe8
   17d1c:	cmp	r5, #0
   17d20:	beq	17d08 <argp_parse@@Base+0x19d8>
   17d24:	mov	r6, r4
   17d28:	b	17cc4 <argp_parse@@Base+0x1994>
   17d2c:	sub	sp, fp, #32
   17d30:	ldrd	r4, [sp]
   17d34:	ldrd	r6, [sp, #8]
   17d38:	ldrd	r8, [sp, #16]
   17d3c:	ldrd	sl, [sp, #24]
   17d40:	add	sp, sp, #32
   17d44:	pop	{pc}		; (ldr pc, [sp], #4)
   17d48:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17d4c:	strd	r6, [sp, #8]
   17d50:	str	r8, [sp, #16]
   17d54:	str	lr, [sp, #20]
   17d58:	mov	r4, r0
   17d5c:	mov	r5, r1
   17d60:	ldr	r3, [r0, #28]
   17d64:	ldr	r2, [r0, #24]
   17d68:	sub	r3, r3, r2
   17d6c:	ldr	r2, [r0, #16]
   17d70:	cmp	r3, r2
   17d74:	bhi	17d90 <argp_parse@@Base+0x1a60>
   17d78:	ldr	r3, [r4, #20]
   17d7c:	cmp	r3, #0
   17d80:	subge	r5, r5, r3
   17d84:	mov	r6, #32
   17d88:	mov	r7, #1
   17d8c:	b	17dac <argp_parse@@Base+0x1a7c>
   17d90:	bl	1b8d4 <argp_error@@Base+0xe9c>
   17d94:	b	17d78 <argp_parse@@Base+0x1a48>
   17d98:	ldr	r3, [r4, #28]
   17d9c:	add	r2, r3, #1
   17da0:	str	r2, [r4, #28]
   17da4:	strb	r6, [r3]
   17da8:	sub	r5, r5, #1
   17dac:	cmp	r5, #0
   17db0:	ble	17ddc <argp_parse@@Base+0x1aac>
   17db4:	ldr	r2, [r4, #28]
   17db8:	ldr	r3, [r4, #32]
   17dbc:	cmp	r2, r3
   17dc0:	bcc	17d98 <argp_parse@@Base+0x1a68>
   17dc4:	mov	r1, r7
   17dc8:	mov	r0, r4
   17dcc:	bl	1be4c <argp_error@@Base+0x1414>
   17dd0:	cmp	r0, #0
   17dd4:	bne	17d98 <argp_parse@@Base+0x1a68>
   17dd8:	b	17da8 <argp_parse@@Base+0x1a78>
   17ddc:	ldrd	r4, [sp]
   17de0:	ldrd	r6, [sp, #8]
   17de4:	ldr	r8, [sp, #16]
   17de8:	add	sp, sp, #20
   17dec:	pop	{pc}		; (ldr pc, [sp], #4)
   17df0:	strd	r4, [sp, #-16]!
   17df4:	str	r6, [sp, #8]
   17df8:	str	lr, [sp, #12]
   17dfc:	ldr	r4, [r0, #12]
   17e00:	ands	r4, r4, #8
   17e04:	movne	r4, #0
   17e08:	bne	17e38 <argp_parse@@Base+0x1b08>
   17e0c:	ldr	r5, [r0, #4]
   17e10:	sub	r3, r5, #1
   17e14:	cmp	r3, #254	; 0xfe
   17e18:	bhi	17e38 <argp_parse@@Base+0x1b08>
   17e1c:	bl	119ac <__ctype_b_loc@plt>
   17e20:	ldr	r2, [r0]
   17e24:	lsl	r3, r5, #1
   17e28:	ldrh	r3, [r2, r3]
   17e2c:	and	r3, r3, #16384	; 0x4000
   17e30:	cmp	r3, #0
   17e34:	movne	r4, r5
   17e38:	mov	r0, r4
   17e3c:	ldrd	r4, [sp]
   17e40:	ldr	r6, [sp, #8]
   17e44:	add	sp, sp, #12
   17e48:	pop	{pc}		; (ldr pc, [sp], #4)
   17e4c:	strd	r4, [sp, #-16]!
   17e50:	str	r6, [sp, #8]
   17e54:	str	lr, [sp, #12]
   17e58:	mov	r4, r0
   17e5c:	mov	r5, r1
   17e60:	ldr	r3, [r0, #28]
   17e64:	ldr	r2, [r0, #24]
   17e68:	sub	r3, r3, r2
   17e6c:	ldr	r2, [r0, #16]
   17e70:	cmp	r3, r2
   17e74:	bhi	17ec4 <argp_parse@@Base+0x1b94>
   17e78:	ldr	r3, [r4, #20]
   17e7c:	cmp	r3, #0
   17e80:	addge	r5, r5, r3
   17e84:	ldr	r3, [r4, #8]
   17e88:	cmp	r5, r3
   17e8c:	bcc	17ee4 <argp_parse@@Base+0x1bb4>
   17e90:	ldr	r2, [r4, #28]
   17e94:	ldr	r3, [r4, #32]
   17e98:	cmp	r2, r3
   17e9c:	bcs	17ecc <argp_parse@@Base+0x1b9c>
   17ea0:	ldr	r3, [r4, #28]
   17ea4:	add	r2, r3, #1
   17ea8:	str	r2, [r4, #28]
   17eac:	mov	r2, #10
   17eb0:	strb	r2, [r3]
   17eb4:	ldrd	r4, [sp]
   17eb8:	ldr	r6, [sp, #8]
   17ebc:	add	sp, sp, #12
   17ec0:	pop	{pc}		; (ldr pc, [sp], #4)
   17ec4:	bl	1b8d4 <argp_error@@Base+0xe9c>
   17ec8:	b	17e78 <argp_parse@@Base+0x1b48>
   17ecc:	mov	r1, #1
   17ed0:	mov	r0, r4
   17ed4:	bl	1be4c <argp_error@@Base+0x1414>
   17ed8:	cmp	r0, #0
   17edc:	bne	17ea0 <argp_parse@@Base+0x1b70>
   17ee0:	b	17eb4 <argp_parse@@Base+0x1b84>
   17ee4:	ldr	r2, [r4, #28]
   17ee8:	ldr	r3, [r4, #32]
   17eec:	cmp	r2, r3
   17ef0:	bcs	17f0c <argp_parse@@Base+0x1bdc>
   17ef4:	ldr	r3, [r4, #28]
   17ef8:	add	r2, r3, #1
   17efc:	str	r2, [r4, #28]
   17f00:	mov	r2, #32
   17f04:	strb	r2, [r3]
   17f08:	b	17eb4 <argp_parse@@Base+0x1b84>
   17f0c:	mov	r1, #1
   17f10:	mov	r0, r4
   17f14:	bl	1be4c <argp_error@@Base+0x1414>
   17f18:	cmp	r0, #0
   17f1c:	bne	17ef4 <argp_parse@@Base+0x1bc4>
   17f20:	b	17eb4 <argp_parse@@Base+0x1b84>
   17f24:	strd	r4, [sp, #-16]!
   17f28:	str	r6, [sp, #8]
   17f2c:	str	lr, [sp, #12]
   17f30:	ldr	r5, [r0, #8]
   17f34:	cmp	r5, #0
   17f38:	beq	17f7c <argp_parse@@Base+0x1c4c>
   17f3c:	ldr	r2, [r0, #12]
   17f40:	ldr	r1, [r1, #12]
   17f44:	orr	r2, r2, r1
   17f48:	tst	r2, #16
   17f4c:	bne	17f88 <argp_parse@@Base+0x1c58>
   17f50:	mov	r6, r3
   17f54:	mov	r4, r0
   17f58:	tst	r2, #1
   17f5c:	beq	17f9c <argp_parse@@Base+0x1c6c>
   17f60:	mov	r3, r5
   17f64:	ldr	r2, [r0, #4]
   17f68:	movw	r1, #53968	; 0xd2d0
   17f6c:	movt	r1, #1
   17f70:	mov	r0, r6
   17f74:	bl	1bf4c <argp_error@@Base+0x1514>
   17f78:	b	17f88 <argp_parse@@Base+0x1c58>
   17f7c:	ldr	r5, [r1, #8]
   17f80:	cmp	r5, #0
   17f84:	bne	17f3c <argp_parse@@Base+0x1c0c>
   17f88:	mov	r0, #0
   17f8c:	ldrd	r4, [sp]
   17f90:	ldr	r6, [sp, #8]
   17f94:	add	sp, sp, #12
   17f98:	pop	{pc}		; (ldr pc, [sp], #4)
   17f9c:	mov	r0, r5
   17fa0:	bl	119dc <strlen@plt>
   17fa4:	add	r1, r0, #6
   17fa8:	mov	r0, r6
   17fac:	bl	17e4c <argp_parse@@Base+0x1b1c>
   17fb0:	mov	r3, r5
   17fb4:	ldr	r2, [r4, #4]
   17fb8:	movw	r1, #53980	; 0xd2dc
   17fbc:	movt	r1, #1
   17fc0:	mov	r0, r6
   17fc4:	bl	1bf4c <argp_error@@Base+0x1514>
   17fc8:	b	17f88 <argp_parse@@Base+0x1c58>
   17fcc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17fd0:	strd	r6, [sp, #8]
   17fd4:	strd	r8, [sp, #16]
   17fd8:	strd	sl, [sp, #24]
   17fdc:	str	lr, [sp, #32]
   17fe0:	sub	sp, sp, #28
   17fe4:	str	r1, [sp, #8]
   17fe8:	mov	sl, r2
   17fec:	mov	r4, r3
   17ff0:	ldr	r9, [sp, #64]	; 0x40
   17ff4:	ldr	r6, [r2]
   17ff8:	str	r6, [sp, #20]
   17ffc:	ldr	r7, [r0, #16]
   18000:	ldr	r2, [r0, #8]
   18004:	mov	ip, r2
   18008:	str	r2, [sp, #16]
   1800c:	mov	r3, r1
   18010:	mov	r2, r0
   18014:	mov	r1, #6
   18018:	movt	r1, #512	; 0x200
   1801c:	mov	r0, ip
   18020:	bl	179f8 <argp_parse@@Base+0x16c8>
   18024:	cmp	r0, #0
   18028:	str	r0, [sp, #12]
   1802c:	beq	181bc <argp_parse@@Base+0x1e8c>
   18030:	mov	r1, #10
   18034:	bl	117cc <strchrnul@plt>
   18038:	mov	r5, r0
   1803c:	ldrb	r3, [r0]
   18040:	cmp	r3, #0
   18044:	beq	1818c <argp_parse@@Base+0x1e5c>
   18048:	ldrb	fp, [r6]
   1804c:	cmp	fp, #0
   18050:	ble	18184 <argp_parse@@Base+0x1e54>
   18054:	mov	r6, #0
   18058:	add	r8, r0, #1
   1805c:	mov	r1, #10
   18060:	mov	r0, r8
   18064:	bl	117cc <strchrnul@plt>
   18068:	add	r6, r6, #1
   1806c:	cmp	r6, fp
   18070:	bne	18058 <argp_parse@@Base+0x1d28>
   18074:	mov	r5, r0
   18078:	ldr	r3, [sl]
   1807c:	add	r3, r3, #1
   18080:	str	r3, [sl]
   18084:	mov	fp, #1
   18088:	add	r1, r5, #1
   1808c:	sub	r1, r1, r8
   18090:	mov	r0, r9
   18094:	bl	17e4c <argp_parse@@Base+0x1b1c>
   18098:	sub	r6, r5, r8
   1809c:	ldr	r3, [r9, #28]
   180a0:	add	r3, r3, r6
   180a4:	ldr	r2, [r9, #32]
   180a8:	cmp	r2, r3
   180ac:	bcs	180c4 <argp_parse@@Base+0x1d94>
   180b0:	mov	r1, r6
   180b4:	mov	r0, r9
   180b8:	bl	1be4c <argp_error@@Base+0x1414>
   180bc:	cmp	r0, #0
   180c0:	beq	180e0 <argp_parse@@Base+0x1db0>
   180c4:	mov	r2, r6
   180c8:	mov	r1, r8
   180cc:	ldr	r0, [r9, #28]
   180d0:	bl	11808 <memcpy@plt>
   180d4:	ldr	r3, [r9, #28]
   180d8:	add	r6, r3, r6
   180dc:	str	r6, [r9, #28]
   180e0:	ldr	r2, [sp, #16]
   180e4:	ldr	r3, [sp, #12]
   180e8:	cmp	r2, r3
   180ec:	bne	18198 <argp_parse@@Base+0x1e68>
   180f0:	cmp	r7, #0
   180f4:	beq	18130 <argp_parse@@Base+0x1e00>
   180f8:	ldr	r0, [r7]
   180fc:	cmp	r0, #0
   18100:	beq	18130 <argp_parse@@Base+0x1e00>
   18104:	mov	r3, r4
   18108:	str	r9, [sp]
   1810c:	mov	r2, sl
   18110:	ldr	r1, [sp, #8]
   18114:	bl	17fcc <argp_parse@@Base+0x1c9c>
   18118:	clz	r3, r0
   1811c:	lsr	r3, r3, #5
   18120:	ldr	r0, [r7, #16]!
   18124:	cmp	r0, #0
   18128:	bne	18108 <argp_parse@@Base+0x1dd8>
   1812c:	mov	r4, r3
   18130:	cmp	r4, #0
   18134:	moveq	fp, #0
   18138:	cmp	fp, #0
   1813c:	beq	18160 <argp_parse@@Base+0x1e30>
   18140:	ldrb	r3, [r5]
   18144:	cmp	r3, #0
   18148:	beq	181a4 <argp_parse@@Base+0x1e74>
   1814c:	ldr	r2, [sp, #20]
   18150:	ldrb	r3, [r2]
   18154:	add	r3, r3, #1
   18158:	strb	r3, [r2]
   1815c:	mov	r4, #0
   18160:	clz	r0, r4
   18164:	lsr	r0, r0, #5
   18168:	add	sp, sp, #28
   1816c:	ldrd	r4, [sp]
   18170:	ldrd	r6, [sp, #8]
   18174:	ldrd	r8, [sp, #16]
   18178:	ldrd	sl, [sp, #24]
   1817c:	add	sp, sp, #32
   18180:	pop	{pc}		; (ldr pc, [sp], #4)
   18184:	ldr	r8, [sp, #12]
   18188:	b	18078 <argp_parse@@Base+0x1d48>
   1818c:	ldr	r8, [sp, #12]
   18190:	mov	fp, #0
   18194:	b	18088 <argp_parse@@Base+0x1d58>
   18198:	mov	r0, r3
   1819c:	bl	17008 <argp_parse@@Base+0xcd8>
   181a0:	b	180f0 <argp_parse@@Base+0x1dc0>
   181a4:	ldr	r2, [sp, #20]
   181a8:	ldrb	r3, [r2]
   181ac:	cmp	r3, #0
   181b0:	movne	r3, #0
   181b4:	strbne	r3, [r2]
   181b8:	b	18160 <argp_parse@@Base+0x1e30>
   181bc:	cmp	r7, #0
   181c0:	beq	18160 <argp_parse@@Base+0x1e30>
   181c4:	ldr	r5, [sp, #12]
   181c8:	mov	fp, #0
   181cc:	b	180f8 <argp_parse@@Base+0x1dc8>
   181d0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   181d4:	strd	r6, [sp, #8]
   181d8:	str	r8, [sp, #16]
   181dc:	str	lr, [sp, #20]
   181e0:	mov	r6, r0
   181e4:	mov	r4, r2
   181e8:	ldr	r3, [r2, #16]
   181ec:	mov	r2, r1
   181f0:	mov	r1, #3
   181f4:	movt	r1, #512	; 0x200
   181f8:	bl	179f8 <argp_parse@@Base+0x16c8>
   181fc:	subs	r5, r0, #0
   18200:	beq	18314 <argp_parse@@Base+0x1fe4>
   18204:	ldrb	r3, [r5]
   18208:	cmp	r3, #0
   1820c:	beq	18308 <argp_parse@@Base+0x1fd8>
   18210:	ldr	r3, [r4, #8]
   18214:	ldr	r3, [r3]
   18218:	cmp	r3, #0
   1821c:	beq	18248 <argp_parse@@Base+0x1f18>
   18220:	ldr	r7, [r4, #4]
   18224:	ldr	r2, [r7, #28]
   18228:	ldr	r3, [r7, #32]
   1822c:	cmp	r2, r3
   18230:	bcs	18338 <argp_parse@@Base+0x2008>
   18234:	ldr	r3, [r7, #28]
   18238:	add	r2, r3, #1
   1823c:	str	r2, [r7, #28]
   18240:	mov	r2, #10
   18244:	strb	r2, [r3]
   18248:	movw	r8, #58224	; 0xe370
   1824c:	movt	r8, #2
   18250:	ldr	r1, [r8, #24]
   18254:	ldr	r0, [r4, #4]
   18258:	bl	17d48 <argp_parse@@Base+0x1a18>
   1825c:	ldr	r7, [r4, #4]
   18260:	ldr	r8, [r8, #24]
   18264:	ldr	r3, [r7, #28]
   18268:	ldr	r2, [r7, #24]
   1826c:	sub	r3, r3, r2
   18270:	ldr	r2, [r7, #16]
   18274:	cmp	r3, r2
   18278:	bhi	18350 <argp_parse@@Base+0x2020>
   1827c:	str	r8, [r7, #4]
   18280:	ldr	r7, [r4, #4]
   18284:	movw	r3, #58224	; 0xe370
   18288:	movt	r3, #2
   1828c:	ldr	r8, [r3, #24]
   18290:	ldr	r3, [r7, #28]
   18294:	ldr	r2, [r7, #24]
   18298:	sub	r3, r3, r2
   1829c:	ldr	r2, [r7, #16]
   182a0:	cmp	r3, r2
   182a4:	bhi	1835c <argp_parse@@Base+0x202c>
   182a8:	str	r8, [r7, #12]
   182ac:	mov	r0, r5
   182b0:	bl	119dc <strlen@plt>
   182b4:	subs	r7, r0, #0
   182b8:	bne	18368 <argp_parse@@Base+0x2038>
   182bc:	ldr	r7, [r4, #4]
   182c0:	ldr	r3, [r7, #28]
   182c4:	ldr	r2, [r7, #24]
   182c8:	sub	r3, r3, r2
   182cc:	ldr	r2, [r7, #16]
   182d0:	cmp	r3, r2
   182d4:	bhi	183b4 <argp_parse@@Base+0x2084>
   182d8:	mov	r3, #0
   182dc:	str	r3, [r7, #4]
   182e0:	ldr	r7, [r4, #4]
   182e4:	ldr	r2, [r7, #28]
   182e8:	ldr	r3, [r7, #32]
   182ec:	cmp	r2, r3
   182f0:	bcs	183c0 <argp_parse@@Base+0x2090>
   182f4:	ldr	r3, [r7, #28]
   182f8:	add	r2, r3, #1
   182fc:	str	r2, [r7, #28]
   18300:	mov	r2, #10
   18304:	strb	r2, [r3]
   18308:	ldr	r3, [r4, #8]
   1830c:	mov	r2, #1
   18310:	str	r2, [r3, #4]
   18314:	cmp	r6, r5
   18318:	beq	18324 <argp_parse@@Base+0x1ff4>
   1831c:	mov	r0, r5
   18320:	bl	17008 <argp_parse@@Base+0xcd8>
   18324:	ldrd	r4, [sp]
   18328:	ldrd	r6, [sp, #8]
   1832c:	ldr	r8, [sp, #16]
   18330:	add	sp, sp, #20
   18334:	pop	{pc}		; (ldr pc, [sp], #4)
   18338:	mov	r1, #1
   1833c:	mov	r0, r7
   18340:	bl	1be4c <argp_error@@Base+0x1414>
   18344:	cmp	r0, #0
   18348:	bne	18234 <argp_parse@@Base+0x1f04>
   1834c:	b	18248 <argp_parse@@Base+0x1f18>
   18350:	mov	r0, r7
   18354:	bl	1b8d4 <argp_error@@Base+0xe9c>
   18358:	b	1827c <argp_parse@@Base+0x1f4c>
   1835c:	mov	r0, r7
   18360:	bl	1b8d4 <argp_error@@Base+0xe9c>
   18364:	b	182a8 <argp_parse@@Base+0x1f78>
   18368:	ldr	r8, [r4, #4]
   1836c:	ldr	r3, [r8, #28]
   18370:	add	r3, r3, r7
   18374:	ldr	r2, [r8, #32]
   18378:	cmp	r2, r3
   1837c:	bcs	18394 <argp_parse@@Base+0x2064>
   18380:	mov	r1, r7
   18384:	mov	r0, r8
   18388:	bl	1be4c <argp_error@@Base+0x1414>
   1838c:	cmp	r0, #0
   18390:	beq	182bc <argp_parse@@Base+0x1f8c>
   18394:	mov	r2, r7
   18398:	mov	r1, r5
   1839c:	ldr	r0, [r8, #28]
   183a0:	bl	11808 <memcpy@plt>
   183a4:	ldr	r3, [r8, #28]
   183a8:	add	r7, r3, r7
   183ac:	str	r7, [r8, #28]
   183b0:	b	182bc <argp_parse@@Base+0x1f8c>
   183b4:	mov	r0, r7
   183b8:	bl	1b8d4 <argp_error@@Base+0xe9c>
   183bc:	b	182d8 <argp_parse@@Base+0x1fa8>
   183c0:	mov	r1, #1
   183c4:	mov	r0, r7
   183c8:	bl	1be4c <argp_error@@Base+0x1414>
   183cc:	cmp	r0, #0
   183d0:	bne	182f4 <argp_parse@@Base+0x1fc4>
   183d4:	b	18308 <argp_parse@@Base+0x1fd8>
   183d8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   183dc:	strd	r6, [sp, #8]
   183e0:	str	r8, [sp, #16]
   183e4:	str	lr, [sp, #20]
   183e8:	mov	r6, r0
   183ec:	mov	r4, r1
   183f0:	ldr	r3, [r1, #12]
   183f4:	cmp	r3, #0
   183f8:	beq	1852c <argp_parse@@Base+0x21fc>
   183fc:	ldr	r3, [r1, #8]
   18400:	ldr	r7, [r3]
   18404:	ldr	r2, [r1]
   18408:	ldr	r5, [r2, #16]
   1840c:	ldr	r3, [r3, #4]
   18410:	cmp	r3, #0
   18414:	cmpne	r7, #0
   18418:	bne	184cc <argp_parse@@Base+0x219c>
   1841c:	cmp	r5, #0
   18420:	beq	184a4 <argp_parse@@Base+0x2174>
   18424:	ldr	r0, [r5]
   18428:	cmp	r0, #0
   1842c:	beq	184a4 <argp_parse@@Base+0x2174>
   18430:	ldrb	r3, [r0]
   18434:	cmp	r3, #0
   18438:	beq	184a4 <argp_parse@@Base+0x2174>
   1843c:	cmp	r7, #0
   18440:	beq	18470 <argp_parse@@Base+0x2140>
   18444:	ldr	r3, [r7, #16]
   18448:	cmp	r3, r5
   1844c:	beq	184a4 <argp_parse@@Base+0x2174>
   18450:	cmp	r3, #0
   18454:	beq	18470 <argp_parse@@Base+0x2140>
   18458:	ldr	r3, [r3, #12]
   1845c:	cmp	r3, #0
   18460:	cmpne	r5, r3
   18464:	bne	18458 <argp_parse@@Base+0x2128>
   18468:	cmp	r5, r3
   1846c:	beq	184a4 <argp_parse@@Base+0x2174>
   18470:	ldr	r3, [r4, #4]
   18474:	ldr	r7, [r3, #12]
   18478:	mov	r2, r4
   1847c:	ldr	r1, [r5, #16]
   18480:	bl	181d0 <argp_parse@@Base+0x1ea0>
   18484:	ldr	r5, [r4, #4]
   18488:	ldr	r3, [r5, #28]
   1848c:	ldr	r2, [r5, #24]
   18490:	sub	r3, r3, r2
   18494:	ldr	r2, [r5, #16]
   18498:	cmp	r3, r2
   1849c:	bhi	18520 <argp_parse@@Base+0x21f0>
   184a0:	str	r7, [r5, #12]
   184a4:	mov	r3, #0
   184a8:	str	r3, [r4, #12]
   184ac:	mov	r1, r6
   184b0:	ldr	r0, [r4, #4]
   184b4:	bl	17d48 <argp_parse@@Base+0x1a18>
   184b8:	ldrd	r4, [sp]
   184bc:	ldrd	r6, [sp, #8]
   184c0:	ldr	r8, [sp, #16]
   184c4:	add	sp, sp, #20
   184c8:	pop	{pc}		; (ldr pc, [sp], #4)
   184cc:	ldr	r2, [r2, #12]
   184d0:	ldr	r3, [r7, #12]
   184d4:	cmp	r2, r3
   184d8:	beq	1841c <argp_parse@@Base+0x20ec>
   184dc:	ldr	r8, [r1, #4]
   184e0:	ldr	r2, [r8, #28]
   184e4:	ldr	r3, [r8, #32]
   184e8:	cmp	r2, r3
   184ec:	bcs	18508 <argp_parse@@Base+0x21d8>
   184f0:	ldr	r3, [r8, #28]
   184f4:	add	r2, r3, #1
   184f8:	str	r2, [r8, #28]
   184fc:	mov	r2, #10
   18500:	strb	r2, [r3]
   18504:	b	1841c <argp_parse@@Base+0x20ec>
   18508:	mov	r1, #1
   1850c:	mov	r0, r8
   18510:	bl	1be4c <argp_error@@Base+0x1414>
   18514:	cmp	r0, #0
   18518:	bne	184f0 <argp_parse@@Base+0x21c0>
   1851c:	b	1841c <argp_parse@@Base+0x20ec>
   18520:	mov	r0, r5
   18524:	bl	1b8d4 <argp_error@@Base+0xe9c>
   18528:	b	184a0 <argp_parse@@Base+0x2170>
   1852c:	ldr	r5, [r1, #4]
   18530:	ldr	r3, [r5, #28]
   18534:	add	r3, r3, #2
   18538:	ldr	r2, [r5, #32]
   1853c:	cmp	r2, r3
   18540:	bcs	18558 <argp_parse@@Base+0x2228>
   18544:	mov	r1, #2
   18548:	mov	r0, r5
   1854c:	bl	1be4c <argp_error@@Base+0x1414>
   18550:	cmp	r0, #0
   18554:	beq	184ac <argp_parse@@Base+0x217c>
   18558:	ldr	r2, [r5, #28]
   1855c:	movw	r3, #53992	; 0xd2e8
   18560:	movt	r3, #1
   18564:	ldrh	r3, [r3]
   18568:	strh	r3, [r2]
   1856c:	ldr	r3, [r5, #28]
   18570:	add	r3, r3, #2
   18574:	str	r3, [r5, #28]
   18578:	b	184ac <argp_parse@@Base+0x217c>
   1857c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18580:	strd	r6, [sp, #8]
   18584:	strd	r8, [sp, #16]
   18588:	strd	sl, [sp, #24]
   1858c:	str	lr, [sp, #32]
   18590:	sub	sp, sp, #28
   18594:	mov	r8, r0
   18598:	str	r1, [sp, #12]
   1859c:	str	r2, [sp, #8]
   185a0:	mov	fp, r3
   185a4:	ldr	sl, [sp, #64]	; 0x40
   185a8:	ldr	r4, [sp, #68]	; 0x44
   185ac:	ldr	r6, [r0, #12]
   185b0:	ldr	r9, [r0, #16]
   185b4:	cmp	r6, #0
   185b8:	beq	18a34 <argp_parse@@Base+0x2704>
   185bc:	mov	r5, r2
   185c0:	mov	r1, #11
   185c4:	mov	r0, r6
   185c8:	bl	119f4 <strchr@plt>
   185cc:	cmp	r5, #0
   185d0:	beq	18610 <argp_parse@@Base+0x22e0>
   185d4:	cmp	r0, #0
   185d8:	addne	r6, r0, #1
   185dc:	beq	18a7c <argp_parse@@Base+0x274c>
   185e0:	ldr	r3, [r8, #20]
   185e4:	cmp	r3, #0
   185e8:	beq	18a84 <argp_parse@@Base+0x2754>
   185ec:	ldr	r1, [sp, #12]
   185f0:	mov	r0, r8
   185f4:	bl	16e84 <argp_parse@@Base+0xb54>
   185f8:	str	r0, [sp, #16]
   185fc:	ldr	r3, [r8, #20]
   18600:	mov	r7, #0
   18604:	mov	r0, #2
   18608:	movt	r0, #512	; 0x200
   1860c:	b	1865c <argp_parse@@Base+0x232c>
   18610:	cmp	r0, #0
   18614:	beq	18aa0 <argp_parse@@Base+0x2770>
   18618:	sub	r7, r0, r6
   1861c:	ldr	r3, [r8, #20]
   18620:	cmp	r3, #0
   18624:	beq	18844 <argp_parse@@Base+0x2514>
   18628:	cmp	r7, #0
   1862c:	beq	18640 <argp_parse@@Base+0x2310>
   18630:	mov	r1, r7
   18634:	mov	r0, r6
   18638:	bl	117f0 <strndup@plt>
   1863c:	mov	r6, r0
   18640:	ldr	r1, [sp, #12]
   18644:	mov	r0, r8
   18648:	bl	16e84 <argp_parse@@Base+0xb54>
   1864c:	str	r0, [sp, #16]
   18650:	ldr	r3, [r8, #20]
   18654:	mov	r0, #1
   18658:	movt	r0, #512	; 0x200
   1865c:	ldr	r2, [sp, #16]
   18660:	mov	r1, r6
   18664:	blx	r3
   18668:	subs	r5, r0, #0
   1866c:	beq	18950 <argp_parse@@Base+0x2620>
   18670:	cmp	fp, #0
   18674:	bne	18854 <argp_parse@@Base+0x2524>
   18678:	cmp	r5, r6
   1867c:	movne	r3, #0
   18680:	moveq	r3, #1
   18684:	cmp	r7, #0
   18688:	moveq	r3, #0
   1868c:	cmp	r3, #0
   18690:	beq	18894 <argp_parse@@Base+0x2564>
   18694:	ldr	r3, [r4, #28]
   18698:	add	r3, r3, r7
   1869c:	ldr	r2, [r4, #32]
   186a0:	cmp	r2, r3
   186a4:	bcs	186bc <argp_parse@@Base+0x238c>
   186a8:	mov	r1, r7
   186ac:	mov	r0, r4
   186b0:	bl	1be4c <argp_error@@Base+0x1414>
   186b4:	cmp	r0, #0
   186b8:	beq	186d8 <argp_parse@@Base+0x23a8>
   186bc:	mov	r2, r7
   186c0:	mov	r1, r6
   186c4:	ldr	r0, [r4, #28]
   186c8:	bl	11808 <memcpy@plt>
   186cc:	ldr	r3, [r4, #28]
   186d0:	add	r3, r3, r7
   186d4:	str	r3, [r4, #28]
   186d8:	ldr	r3, [r4, #28]
   186dc:	ldr	r2, [r4, #24]
   186e0:	sub	r3, r3, r2
   186e4:	ldr	r2, [r4, #16]
   186e8:	cmp	r3, r2
   186ec:	bhi	188f4 <argp_parse@@Base+0x25c4>
   186f0:	ldr	r3, [r4, #20]
   186f4:	bic	r3, r3, r3, asr #31
   186f8:	ldr	r2, [r4, #4]
   186fc:	cmp	r2, r3
   18700:	bcc	18900 <argp_parse@@Base+0x25d0>
   18704:	cmp	r5, r6
   18708:	moveq	r5, #1
   1870c:	bne	18940 <argp_parse@@Base+0x2610>
   18710:	cmp	r6, #0
   18714:	cmpne	r7, #0
   18718:	beq	18730 <argp_parse@@Base+0x2400>
   1871c:	ldr	r3, [r8, #20]
   18720:	cmp	r3, #0
   18724:	beq	187b4 <argp_parse@@Base+0x2484>
   18728:	mov	r0, r6
   1872c:	bl	17008 <argp_parse@@Base+0xcd8>
   18730:	ldr	r3, [sp, #8]
   18734:	cmp	r3, #0
   18738:	beq	187b4 <argp_parse@@Base+0x2484>
   1873c:	ldr	r3, [r8, #20]
   18740:	cmp	r3, #0
   18744:	beq	187b4 <argp_parse@@Base+0x2484>
   18748:	ldr	r2, [sp, #16]
   1874c:	mov	r1, #0
   18750:	mov	r0, #4
   18754:	movt	r0, #512	; 0x200
   18758:	blx	r3
   1875c:	subs	r6, r0, #0
   18760:	beq	187b4 <argp_parse@@Base+0x2484>
   18764:	orrs	r3, fp, r5
   18768:	bne	18958 <argp_parse@@Base+0x2628>
   1876c:	mov	r0, r6
   18770:	bl	119dc <strlen@plt>
   18774:	subs	r5, r0, #0
   18778:	bne	18998 <argp_parse@@Base+0x2668>
   1877c:	mov	r0, r6
   18780:	bl	17008 <argp_parse@@Base+0xcd8>
   18784:	ldr	r3, [r4, #28]
   18788:	ldr	r2, [r4, #24]
   1878c:	sub	r3, r3, r2
   18790:	ldr	r2, [r4, #16]
   18794:	cmp	r3, r2
   18798:	bhi	189e0 <argp_parse@@Base+0x26b0>
   1879c:	ldr	r3, [r4, #20]
   187a0:	bic	r3, r3, r3, asr #31
   187a4:	ldr	r2, [r4, #4]
   187a8:	cmp	r2, r3
   187ac:	movcs	r5, #1
   187b0:	bcc	189ec <argp_parse@@Base+0x26bc>
   187b4:	cmp	r9, #0
   187b8:	beq	18824 <argp_parse@@Base+0x24f4>
   187bc:	ldr	r0, [r9]
   187c0:	cmp	r0, #0
   187c4:	beq	18824 <argp_parse@@Base+0x24f4>
   187c8:	clz	r6, sl
   187cc:	lsr	r6, r6, #5
   187d0:	cmp	sl, #0
   187d4:	cmpne	r5, #0
   187d8:	bne	18824 <argp_parse@@Base+0x24f4>
   187dc:	orrs	r3, fp, r5
   187e0:	str	r4, [sp, #4]
   187e4:	str	sl, [sp]
   187e8:	movne	r3, #1
   187ec:	moveq	r3, #0
   187f0:	ldr	r2, [sp, #8]
   187f4:	ldr	r1, [sp, #12]
   187f8:	bl	1857c <argp_parse@@Base+0x224c>
   187fc:	orr	r5, r5, r0
   18800:	ldr	r0, [r9, #16]
   18804:	cmp	r0, #0
   18808:	beq	18824 <argp_parse@@Base+0x24f4>
   1880c:	add	r9, r9, #16
   18810:	cmp	r5, #0
   18814:	movne	r3, r6
   18818:	moveq	r3, #1
   1881c:	cmp	r3, #0
   18820:	bne	187dc <argp_parse@@Base+0x24ac>
   18824:	mov	r0, r5
   18828:	add	sp, sp, #28
   1882c:	ldrd	r4, [sp]
   18830:	ldrd	r6, [sp, #8]
   18834:	ldrd	r8, [sp, #16]
   18838:	ldrd	sl, [sp, #24]
   1883c:	add	sp, sp, #32
   18840:	pop	{pc}		; (ldr pc, [sp], #4)
   18844:	mov	r5, r6
   18848:	mov	r3, #0
   1884c:	str	r3, [sp, #16]
   18850:	b	18670 <argp_parse@@Base+0x2340>
   18854:	ldr	r2, [r4, #28]
   18858:	ldr	r3, [r4, #32]
   1885c:	cmp	r2, r3
   18860:	bcs	1887c <argp_parse@@Base+0x254c>
   18864:	ldr	r3, [r4, #28]
   18868:	add	r2, r3, #1
   1886c:	str	r2, [r4, #28]
   18870:	mov	r2, #10
   18874:	strb	r2, [r3]
   18878:	b	18678 <argp_parse@@Base+0x2348>
   1887c:	mov	r1, #1
   18880:	mov	r0, r4
   18884:	bl	1be4c <argp_error@@Base+0x1414>
   18888:	cmp	r0, #0
   1888c:	bne	18864 <argp_parse@@Base+0x2534>
   18890:	b	18678 <argp_parse@@Base+0x2348>
   18894:	mov	r0, r5
   18898:	bl	119dc <strlen@plt>
   1889c:	subs	r3, r0, #0
   188a0:	str	r3, [sp, #20]
   188a4:	beq	186d8 <argp_parse@@Base+0x23a8>
   188a8:	ldr	r3, [r4, #28]
   188ac:	mov	r1, r0
   188b0:	add	r3, r3, r0
   188b4:	ldr	r2, [r4, #32]
   188b8:	cmp	r2, r3
   188bc:	bcs	188d0 <argp_parse@@Base+0x25a0>
   188c0:	mov	r0, r4
   188c4:	bl	1be4c <argp_error@@Base+0x1414>
   188c8:	cmp	r0, #0
   188cc:	beq	186d8 <argp_parse@@Base+0x23a8>
   188d0:	ldr	r2, [sp, #20]
   188d4:	mov	r1, r5
   188d8:	ldr	r0, [r4, #28]
   188dc:	bl	11808 <memcpy@plt>
   188e0:	ldr	r3, [r4, #28]
   188e4:	ldr	r2, [sp, #20]
   188e8:	add	r3, r3, r2
   188ec:	str	r3, [r4, #28]
   188f0:	b	186d8 <argp_parse@@Base+0x23a8>
   188f4:	mov	r0, r4
   188f8:	bl	1b8d4 <argp_error@@Base+0xe9c>
   188fc:	b	186f0 <argp_parse@@Base+0x23c0>
   18900:	ldr	r2, [r4, #28]
   18904:	ldr	r3, [r4, #32]
   18908:	cmp	r2, r3
   1890c:	bcs	18928 <argp_parse@@Base+0x25f8>
   18910:	ldr	r3, [r4, #28]
   18914:	add	r2, r3, #1
   18918:	str	r2, [r4, #28]
   1891c:	mov	r2, #10
   18920:	strb	r2, [r3]
   18924:	b	18704 <argp_parse@@Base+0x23d4>
   18928:	mov	r1, #1
   1892c:	mov	r0, r4
   18930:	bl	1be4c <argp_error@@Base+0x1414>
   18934:	cmp	r0, #0
   18938:	bne	18910 <argp_parse@@Base+0x25e0>
   1893c:	b	18704 <argp_parse@@Base+0x23d4>
   18940:	mov	r0, r5
   18944:	bl	17008 <argp_parse@@Base+0xcd8>
   18948:	mov	r5, #1
   1894c:	b	18710 <argp_parse@@Base+0x23e0>
   18950:	mov	r5, #0
   18954:	b	18710 <argp_parse@@Base+0x23e0>
   18958:	ldr	r2, [r4, #28]
   1895c:	ldr	r3, [r4, #32]
   18960:	cmp	r2, r3
   18964:	bcs	18980 <argp_parse@@Base+0x2650>
   18968:	ldr	r3, [r4, #28]
   1896c:	add	r2, r3, #1
   18970:	str	r2, [r4, #28]
   18974:	mov	r2, #10
   18978:	strb	r2, [r3]
   1897c:	b	1876c <argp_parse@@Base+0x243c>
   18980:	mov	r1, #1
   18984:	mov	r0, r4
   18988:	bl	1be4c <argp_error@@Base+0x1414>
   1898c:	cmp	r0, #0
   18990:	bne	18968 <argp_parse@@Base+0x2638>
   18994:	b	1876c <argp_parse@@Base+0x243c>
   18998:	ldr	r3, [r4, #28]
   1899c:	add	r3, r3, r5
   189a0:	ldr	r2, [r4, #32]
   189a4:	cmp	r2, r3
   189a8:	bcs	189c0 <argp_parse@@Base+0x2690>
   189ac:	mov	r1, r5
   189b0:	mov	r0, r4
   189b4:	bl	1be4c <argp_error@@Base+0x1414>
   189b8:	cmp	r0, #0
   189bc:	beq	1877c <argp_parse@@Base+0x244c>
   189c0:	mov	r2, r5
   189c4:	mov	r1, r6
   189c8:	ldr	r0, [r4, #28]
   189cc:	bl	11808 <memcpy@plt>
   189d0:	ldr	r3, [r4, #28]
   189d4:	add	r5, r3, r5
   189d8:	str	r5, [r4, #28]
   189dc:	b	1877c <argp_parse@@Base+0x244c>
   189e0:	mov	r0, r4
   189e4:	bl	1b8d4 <argp_error@@Base+0xe9c>
   189e8:	b	1879c <argp_parse@@Base+0x246c>
   189ec:	ldr	r2, [r4, #28]
   189f0:	ldr	r3, [r4, #32]
   189f4:	cmp	r2, r3
   189f8:	bcs	18a18 <argp_parse@@Base+0x26e8>
   189fc:	ldr	r3, [r4, #28]
   18a00:	add	r2, r3, #1
   18a04:	str	r2, [r4, #28]
   18a08:	mov	r2, #10
   18a0c:	strb	r2, [r3]
   18a10:	mov	r5, #1
   18a14:	b	187b4 <argp_parse@@Base+0x2484>
   18a18:	mov	r1, #1
   18a1c:	mov	r0, r4
   18a20:	bl	1be4c <argp_error@@Base+0x1414>
   18a24:	cmp	r0, #0
   18a28:	bne	189fc <argp_parse@@Base+0x26cc>
   18a2c:	mov	r5, #1
   18a30:	b	187b4 <argp_parse@@Base+0x2484>
   18a34:	ldr	r3, [r0, #20]
   18a38:	cmp	r3, #0
   18a3c:	moveq	r5, r6
   18a40:	beq	18a88 <argp_parse@@Base+0x2758>
   18a44:	ldr	r1, [sp, #12]
   18a48:	mov	r0, r8
   18a4c:	bl	16e84 <argp_parse@@Base+0xb54>
   18a50:	str	r0, [sp, #16]
   18a54:	ldr	r3, [r8, #20]
   18a58:	mov	r7, #0
   18a5c:	mov	r0, #2
   18a60:	movt	r0, #512	; 0x200
   18a64:	mov	r2, #1
   18a68:	movt	r2, #512	; 0x200
   18a6c:	ldr	r1, [sp, #8]
   18a70:	cmp	r1, r7
   18a74:	moveq	r0, r2
   18a78:	b	1865c <argp_parse@@Base+0x232c>
   18a7c:	mov	r6, r0
   18a80:	b	185e0 <argp_parse@@Base+0x22b0>
   18a84:	mov	r5, r6
   18a88:	cmp	r5, #0
   18a8c:	streq	r5, [sp, #16]
   18a90:	beq	18730 <argp_parse@@Base+0x2400>
   18a94:	mov	r7, #0
   18a98:	str	r7, [sp, #16]
   18a9c:	b	18670 <argp_parse@@Base+0x2340>
   18aa0:	ldr	r3, [r8, #20]
   18aa4:	cmp	r3, #0
   18aa8:	moveq	r5, r6
   18aac:	beq	18a88 <argp_parse@@Base+0x2758>
   18ab0:	ldr	r1, [sp, #12]
   18ab4:	mov	r0, r8
   18ab8:	bl	16e84 <argp_parse@@Base+0xb54>
   18abc:	str	r0, [sp, #16]
   18ac0:	ldr	r3, [r8, #20]
   18ac4:	mov	r7, #0
   18ac8:	mov	r0, #1
   18acc:	movt	r0, #512	; 0x200
   18ad0:	b	1865c <argp_parse@@Base+0x232c>
   18ad4:	ldr	r3, [r0, #12]
   18ad8:	ldr	r2, [r1, #12]
   18adc:	cmp	r3, r2
   18ae0:	beq	18b50 <argp_parse@@Base+0x2820>
   18ae4:	strd	r4, [sp, #-16]!
   18ae8:	str	r6, [sp, #8]
   18aec:	str	lr, [sp, #12]
   18af0:	mov	r5, r1
   18af4:	mov	r4, r0
   18af8:	mov	r1, r2
   18afc:	mov	r0, r3
   18b00:	bl	18ad4 <argp_parse@@Base+0x27a4>
   18b04:	subs	r3, r0, #0
   18b08:	bne	18b3c <argp_parse@@Base+0x280c>
   18b0c:	ldr	r0, [r4, #8]
   18b10:	ldr	r3, [r5, #8]
   18b14:	mvn	r2, r3
   18b18:	lsr	r2, r2, #31
   18b1c:	cmp	r2, r0, lsr #31
   18b20:	subne	r3, r0, r3
   18b24:	subeq	r3, r3, r0
   18b28:	cmp	r3, #0
   18b2c:	bne	18b3c <argp_parse@@Base+0x280c>
   18b30:	ldr	r3, [r5, #4]
   18b34:	ldr	r0, [r4, #4]
   18b38:	sub	r3, r3, r0
   18b3c:	mov	r0, r3
   18b40:	ldrd	r4, [sp]
   18b44:	ldr	r6, [sp, #8]
   18b48:	add	sp, sp, #12
   18b4c:	pop	{pc}		; (ldr pc, [sp], #4)
   18b50:	ldr	r2, [r0, #8]
   18b54:	ldr	r3, [r1, #8]
   18b58:	mvn	ip, r3
   18b5c:	lsr	ip, ip, #31
   18b60:	cmp	ip, r2, lsr #31
   18b64:	subne	r3, r2, r3
   18b68:	subeq	r3, r3, r2
   18b6c:	cmp	r3, #0
   18b70:	bne	18b80 <argp_parse@@Base+0x2850>
   18b74:	ldr	r3, [r1, #4]
   18b78:	ldr	r0, [r0, #4]
   18b7c:	sub	r3, r3, r0
   18b80:	mov	r0, r3
   18b84:	bx	lr
   18b88:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18b8c:	strd	r6, [sp, #8]
   18b90:	str	r8, [sp, #16]
   18b94:	str	lr, [sp, #20]
   18b98:	sub	sp, sp, #8
   18b9c:	ldr	lr, [r0, #16]
   18ba0:	cmp	lr, #0
   18ba4:	movne	r3, lr
   18ba8:	bne	18bb8 <argp_parse@@Base+0x2888>
   18bac:	ldr	ip, [r0, #12]
   18bb0:	b	18bc8 <argp_parse@@Base+0x2898>
   18bb4:	mov	r3, r2
   18bb8:	ldr	r2, [r3, #12]
   18bbc:	cmp	r2, #0
   18bc0:	bne	18bb4 <argp_parse@@Base+0x2884>
   18bc4:	ldr	ip, [r3, #8]
   18bc8:	ldr	r5, [r1, #16]
   18bcc:	cmp	r5, #0
   18bd0:	movne	r3, r5
   18bd4:	bne	18be4 <argp_parse@@Base+0x28b4>
   18bd8:	ldr	r4, [r1, #12]
   18bdc:	b	18bf4 <argp_parse@@Base+0x28c4>
   18be0:	mov	r3, r2
   18be4:	ldr	r2, [r3, #12]
   18be8:	cmp	r2, #0
   18bec:	bne	18be0 <argp_parse@@Base+0x28b0>
   18bf0:	ldr	r4, [r3, #8]
   18bf4:	mvn	r3, r4
   18bf8:	lsr	r3, r3, #31
   18bfc:	cmp	r3, ip, lsr #31
   18c00:	subne	r4, ip, r4
   18c04:	subeq	r4, r4, ip
   18c08:	cmp	r4, #0
   18c0c:	bne	18d4c <argp_parse@@Base+0x2a1c>
   18c10:	adds	r4, r5, #0
   18c14:	movne	r4, #1
   18c18:	cmp	lr, #0
   18c1c:	rsbeq	r4, r4, #0
   18c20:	rsbne	r4, r4, #1
   18c24:	cmp	r4, #0
   18c28:	bne	18d4c <argp_parse@@Base+0x2a1c>
   18c2c:	mov	r7, r1
   18c30:	mov	r6, r0
   18c34:	cmp	lr, #0
   18c38:	beq	18cb8 <argp_parse@@Base+0x2988>
   18c3c:	ldr	r1, [lr, #20]
   18c40:	ldr	r2, [r5, #20]
   18c44:	cmp	r1, r2
   18c48:	ble	18c74 <argp_parse@@Base+0x2944>
   18c4c:	ldr	lr, [lr, #12]
   18c50:	ldr	r3, [lr, #20]
   18c54:	cmp	r2, r3
   18c58:	blt	18c4c <argp_parse@@Base+0x291c>
   18c5c:	mov	r1, r5
   18c60:	mov	r0, lr
   18c64:	bl	18ad4 <argp_parse@@Base+0x27a4>
   18c68:	subs	r4, r0, #0
   18c6c:	moveq	r4, #1
   18c70:	b	18d4c <argp_parse@@Base+0x2a1c>
   18c74:	cmp	r1, r2
   18c78:	bge	18ca4 <argp_parse@@Base+0x2974>
   18c7c:	ldr	r5, [r5, #12]
   18c80:	ldr	r3, [r5, #20]
   18c84:	cmp	r1, r3
   18c88:	blt	18c7c <argp_parse@@Base+0x294c>
   18c8c:	mov	r1, r5
   18c90:	mov	r0, lr
   18c94:	bl	18ad4 <argp_parse@@Base+0x27a4>
   18c98:	subs	r4, r0, #0
   18c9c:	mvneq	r4, #0
   18ca0:	b	18d4c <argp_parse@@Base+0x2a1c>
   18ca4:	mov	r1, r5
   18ca8:	mov	r0, lr
   18cac:	bl	18ad4 <argp_parse@@Base+0x27a4>
   18cb0:	subs	r4, r0, #0
   18cb4:	bne	18d4c <argp_parse@@Base+0x2a1c>
   18cb8:	ldr	r3, [r6, #12]
   18cbc:	ldr	r4, [r7, #12]
   18cc0:	mvn	r2, r4
   18cc4:	lsr	r2, r2, #31
   18cc8:	cmp	r2, r3, lsr #31
   18ccc:	subne	r4, r3, r4
   18cd0:	subeq	r4, r4, r3
   18cd4:	cmp	r4, #0
   18cd8:	bne	18d4c <argp_parse@@Base+0x2a1c>
   18cdc:	mov	r0, r6
   18ce0:	bl	1774c <argp_parse@@Base+0x141c>
   18ce4:	mov	r5, r0
   18ce8:	str	r0, [sp]
   18cec:	mov	r0, r7
   18cf0:	bl	1774c <argp_parse@@Base+0x141c>
   18cf4:	str	r0, [sp, #4]
   18cf8:	ldr	r3, [r6]
   18cfc:	ldr	r0, [r3, #12]
   18d00:	ubfx	r0, r0, #3, #1
   18d04:	cmp	r5, #0
   18d08:	moveq	r0, #0
   18d0c:	cmp	r0, #0
   18d10:	bne	18d68 <argp_parse@@Base+0x2a38>
   18d14:	ldr	r3, [r7]
   18d18:	ldr	r3, [r3, #12]
   18d1c:	tst	r3, #8
   18d20:	beq	18da0 <argp_parse@@Base+0x2a70>
   18d24:	ldr	r3, [sp, #4]
   18d28:	cmp	r3, #0
   18d2c:	beq	18da0 <argp_parse@@Base+0x2a70>
   18d30:	add	r0, sp, #4
   18d34:	bl	177e8 <argp_parse@@Base+0x14b8>
   18d38:	adds	r3, r0, #0
   18d3c:	movne	r3, #1
   18d40:	mov	r0, r4
   18d44:	subs	r4, r0, r3
   18d48:	beq	18da0 <argp_parse@@Base+0x2a70>
   18d4c:	mov	r0, r4
   18d50:	add	sp, sp, #8
   18d54:	ldrd	r4, [sp]
   18d58:	ldrd	r6, [sp, #8]
   18d5c:	ldr	r8, [sp, #16]
   18d60:	add	sp, sp, #20
   18d64:	pop	{pc}		; (ldr pc, [sp], #4)
   18d68:	mov	r0, sp
   18d6c:	bl	177e8 <argp_parse@@Base+0x14b8>
   18d70:	adds	r0, r0, #0
   18d74:	movne	r0, #1
   18d78:	ldr	r3, [r7]
   18d7c:	ldr	r3, [r3, #12]
   18d80:	ands	r3, r3, #8
   18d84:	beq	18d44 <argp_parse@@Base+0x2a14>
   18d88:	ldr	r3, [sp, #4]
   18d8c:	cmp	r3, #0
   18d90:	moveq	r3, r4
   18d94:	beq	18d44 <argp_parse@@Base+0x2a14>
   18d98:	mov	r4, r0
   18d9c:	b	18d30 <argp_parse@@Base+0x2a00>
   18da0:	ldr	r2, [r6, #20]
   18da4:	movw	r4, #32240	; 0x7df0
   18da8:	movt	r4, #1
   18dac:	mov	r3, #0
   18db0:	ldr	r2, [r2, #24]
   18db4:	mov	r1, r4
   18db8:	mov	r0, r6
   18dbc:	bl	17a58 <argp_parse@@Base+0x1728>
   18dc0:	mov	r5, r0
   18dc4:	uxtb	r8, r0
   18dc8:	ldr	r2, [r7, #20]
   18dcc:	mov	r3, #0
   18dd0:	ldr	r2, [r2, #24]
   18dd4:	mov	r1, r4
   18dd8:	mov	r0, r7
   18ddc:	bl	17a58 <argp_parse@@Base+0x1728>
   18de0:	uxtb	r7, r0
   18de4:	cmp	r8, #0
   18de8:	movne	r5, r8
   18dec:	bne	18e00 <argp_parse@@Base+0x2ad0>
   18df0:	ldr	r3, [sp]
   18df4:	cmp	r3, #0
   18df8:	ldrbne	r5, [r3]
   18dfc:	moveq	r5, #0
   18e00:	cmp	r7, #0
   18e04:	uxtbne	r6, r0
   18e08:	bne	18e1c <argp_parse@@Base+0x2aec>
   18e0c:	ldr	r3, [sp, #4]
   18e10:	cmp	r3, #0
   18e14:	ldrbne	r6, [r3]
   18e18:	moveq	r6, #0
   18e1c:	bl	11988 <__ctype_tolower_loc@plt>
   18e20:	ldr	r3, [r0]
   18e24:	ldr	r4, [r3, r5, lsl #2]
   18e28:	ldr	r3, [r3, r6, lsl #2]
   18e2c:	subs	r4, r4, r3
   18e30:	bne	18d4c <argp_parse@@Base+0x2a1c>
   18e34:	subs	r4, r6, r5
   18e38:	bne	18d4c <argp_parse@@Base+0x2a1c>
   18e3c:	adds	r4, r7, #0
   18e40:	movne	r4, #1
   18e44:	cmp	r8, #0
   18e48:	rsbeq	r4, r4, #0
   18e4c:	rsbne	r4, r4, #1
   18e50:	cmp	r4, #0
   18e54:	bne	18d4c <argp_parse@@Base+0x2a1c>
   18e58:	cmp	r8, #0
   18e5c:	bne	18d4c <argp_parse@@Base+0x2a1c>
   18e60:	ldr	r0, [sp]
   18e64:	ldr	r1, [sp, #4]
   18e68:	adds	r4, r1, #0
   18e6c:	movne	r4, #1
   18e70:	cmp	r0, #0
   18e74:	rsbeq	r4, r4, #0
   18e78:	rsbne	r4, r4, #1
   18e7c:	cmp	r4, #0
   18e80:	bne	18d4c <argp_parse@@Base+0x2a1c>
   18e84:	cmp	r0, #0
   18e88:	beq	18d4c <argp_parse@@Base+0x2a1c>
   18e8c:	bl	118c8 <strcasecmp@plt>
   18e90:	mov	r4, r0
   18e94:	b	18d4c <argp_parse@@Base+0x2a1c>
   18e98:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18e9c:	strd	r6, [sp, #8]
   18ea0:	strd	r8, [sp, #16]
   18ea4:	strd	sl, [sp, #24]
   18ea8:	str	lr, [sp, #32]
   18eac:	sub	sp, sp, #52	; 0x34
   18eb0:	str	r0, [sp, #12]
   18eb4:	str	r1, [sp, #4]
   18eb8:	ldr	fp, [r0, #16]
   18ebc:	ldr	r4, [r0]
   18ec0:	mov	r0, #16
   18ec4:	bl	176b4 <argp_parse@@Base+0x1384>
   18ec8:	subs	sl, r0, #0
   18ecc:	beq	18efc <argp_parse@@Base+0x2bcc>
   18ed0:	mov	r3, #0
   18ed4:	str	r3, [sl, #4]
   18ed8:	str	r3, [sl, #12]
   18edc:	cmp	r4, r3
   18ee0:	beq	19108 <argp_parse@@Base+0x2dd8>
   18ee4:	ldr	r3, [r4, #12]
   18ee8:	tst	r3, #4
   18eec:	bne	18f1c <argp_parse@@Base+0x2bec>
   18ef0:	add	r5, r4, #24
   18ef4:	mov	r6, #0
   18ef8:	b	18f40 <argp_parse@@Base+0x2c10>
   18efc:	movw	r3, #53756	; 0xd1fc
   18f00:	movt	r3, #1
   18f04:	movw	r2, #450	; 0x1c2
   18f08:	movw	r1, #53996	; 0xd2ec
   18f0c:	movt	r1, #1
   18f10:	movw	r0, #54008	; 0xd2f8
   18f14:	movt	r0, #1
   18f18:	bl	11c28 <__assert_fail@plt>
   18f1c:	movw	r3, #53756	; 0xd1fc
   18f20:	movt	r3, #1
   18f24:	mov	r2, #460	; 0x1cc
   18f28:	movw	r1, #53996	; 0xd2ec
   18f2c:	movt	r1, #1
   18f30:	movw	r0, #54012	; 0xd2fc
   18f34:	movt	r0, #1
   18f38:	bl	11c28 <__assert_fail@plt>
   18f3c:	add	r5, r5, #24
   18f40:	mov	r3, r5
   18f44:	ldr	r2, [r5, #-20]	; 0xffffffec
   18f48:	cmp	r2, #0
   18f4c:	bne	18f5c <argp_parse@@Base+0x2c2c>
   18f50:	ldr	r2, [r5, #-24]	; 0xffffffe8
   18f54:	cmp	r2, #0
   18f58:	beq	18fac <argp_parse@@Base+0x2c7c>
   18f5c:	ldr	r2, [r3, #-12]
   18f60:	tst	r2, #4
   18f64:	bne	18f74 <argp_parse@@Base+0x2c44>
   18f68:	ldr	r2, [sl, #4]
   18f6c:	add	r2, r2, #1
   18f70:	str	r2, [sl, #4]
   18f74:	ldr	r2, [r3, #-12]
   18f78:	tst	r2, #8
   18f7c:	bne	18f3c <argp_parse@@Base+0x2c0c>
   18f80:	ldr	r7, [r3, #-20]	; 0xffffffec
   18f84:	sub	r3, r7, #1
   18f88:	cmp	r3, #254	; 0xfe
   18f8c:	bhi	18f3c <argp_parse@@Base+0x2c0c>
   18f90:	bl	119ac <__ctype_b_loc@plt>
   18f94:	ldr	r3, [r0]
   18f98:	lsl	r7, r7, #1
   18f9c:	ldrh	r3, [r3, r7]
   18fa0:	tst	r3, #16384	; 0x4000
   18fa4:	addne	r6, r6, #1
   18fa8:	b	18f3c <argp_parse@@Base+0x2c0c>
   18fac:	ldr	r2, [r5, #-8]
   18fb0:	cmp	r2, #0
   18fb4:	bne	18f5c <argp_parse@@Base+0x2c2c>
   18fb8:	ldr	r9, [r5, #-4]
   18fbc:	cmp	r9, #0
   18fc0:	bne	18f5c <argp_parse@@Base+0x2c2c>
   18fc4:	ldr	r0, [sl, #4]
   18fc8:	rsb	r0, r0, r0, lsl #3
   18fcc:	lsl	r0, r0, #2
   18fd0:	bl	176b4 <argp_parse@@Base+0x1384>
   18fd4:	str	r0, [sl]
   18fd8:	add	r0, r6, #1
   18fdc:	bl	176b4 <argp_parse@@Base+0x1384>
   18fe0:	mov	r5, r0
   18fe4:	str	r0, [sl, #8]
   18fe8:	ldr	r7, [sl]
   18fec:	cmp	r0, #0
   18ff0:	cmpne	r7, #0
   18ff4:	beq	1901c <argp_parse@@Base+0x2cec>
   18ff8:	movw	r3, #37449	; 0x9249
   18ffc:	movt	r3, #2340	; 0x924
   19000:	ldr	r2, [sl, #4]
   19004:	cmp	r2, r3
   19008:	bhi	1903c <argp_parse@@Base+0x2d0c>
   1900c:	add	r7, r7, #28
   19010:	str	fp, [sp, #8]
   19014:	ldr	fp, [sp, #12]
   19018:	b	19088 <argp_parse@@Base+0x2d58>
   1901c:	movw	r3, #53756	; 0xd1fc
   19020:	movt	r3, #1
   19024:	movw	r2, #474	; 0x1da
   19028:	movw	r1, #53996	; 0xd2ec
   1902c:	movt	r1, #1
   19030:	movw	r0, #54028	; 0xd30c
   19034:	movt	r0, #1
   19038:	bl	11c28 <__assert_fail@plt>
   1903c:	movw	r3, #53756	; 0xd1fc
   19040:	movt	r3, #1
   19044:	mov	r2, #476	; 0x1dc
   19048:	movw	r1, #53996	; 0xd2ec
   1904c:	movt	r1, #1
   19050:	movw	r0, #54064	; 0xd330
   19054:	movt	r0, #1
   19058:	bl	11c28 <__assert_fail@plt>
   1905c:	ldr	r3, [r4, #4]
   19060:	cmp	r3, #0
   19064:	addeq	r9, r9, #1
   19068:	b	190d0 <argp_parse@@Base+0x2da0>
   1906c:	ldr	r3, [r4, #16]
   19070:	cmp	r3, #0
   19074:	bne	194a8 <argp_parse@@Base+0x3178>
   19078:	ldr	r3, [r4, #20]
   1907c:	cmp	r3, #0
   19080:	bne	194a8 <argp_parse@@Base+0x3178>
   19084:	add	r7, r7, #28
   19088:	ldr	r3, [r4, #4]
   1908c:	cmp	r3, #0
   19090:	bne	190a0 <argp_parse@@Base+0x2d70>
   19094:	ldr	r3, [r4]
   19098:	cmp	r3, #0
   1909c:	beq	190e4 <argp_parse@@Base+0x2db4>
   190a0:	mov	r8, r7
   190a4:	str	r4, [r7, #-28]	; 0xffffffe4
   190a8:	mov	r3, #0
   190ac:	str	r3, [r7, #-24]	; 0xffffffe8
   190b0:	str	r5, [r7, #-20]	; 0xffffffec
   190b4:	ldr	r3, [r4, #20]
   190b8:	cmp	r3, #0
   190bc:	movne	r9, r3
   190c0:	bne	190d0 <argp_parse@@Base+0x2da0>
   190c4:	ldr	r3, [r4]
   190c8:	cmp	r3, #0
   190cc:	beq	1905c <argp_parse@@Base+0x2d2c>
   190d0:	str	r9, [r8, #-16]
   190d4:	ldr	r3, [sp, #4]
   190d8:	str	r3, [r8, #-12]
   190dc:	str	fp, [r8, #-8]
   190e0:	b	194b4 <argp_parse@@Base+0x3184>
   190e4:	ldr	r3, [r4, #16]
   190e8:	cmp	r3, #0
   190ec:	bne	190a0 <argp_parse@@Base+0x2d70>
   190f0:	ldr	r3, [r4, #20]
   190f4:	cmp	r3, #0
   190f8:	bne	190a0 <argp_parse@@Base+0x2d70>
   190fc:	ldr	fp, [sp, #8]
   19100:	mov	r3, #0
   19104:	strb	r3, [r5]
   19108:	cmp	fp, #0
   1910c:	beq	1952c <argp_parse@@Base+0x31fc>
   19110:	ldr	r3, [fp]
   19114:	cmp	r3, #0
   19118:	beq	1952c <argp_parse@@Base+0x31fc>
   1911c:	movw	r3, #37449	; 0x9249
   19120:	movt	r3, #2340	; 0x924
   19124:	str	r3, [sp, #32]
   19128:	b	1919c <argp_parse@@Base+0x2e6c>
   1912c:	ldr	r1, [sp, #4]
   19130:	b	19214 <argp_parse@@Base+0x2ee4>
   19134:	mov	r3, r2
   19138:	ldr	r2, [r3, #24]
   1913c:	cmp	r2, #0
   19140:	bne	19134 <argp_parse@@Base+0x2e04>
   19144:	add	r3, r3, #24
   19148:	ldr	r2, [r5, #12]
   1914c:	str	r2, [r3]
   19150:	mov	r1, #0
   19154:	str	r1, [r5, #12]
   19158:	ldr	r3, [r5, #4]
   1915c:	cmp	r3, r1
   19160:	beq	19188 <argp_parse@@Base+0x2e58>
   19164:	ldr	r2, [sl, #4]
   19168:	cmp	r2, r1
   1916c:	bne	19234 <argp_parse@@Base+0x2f04>
   19170:	str	r3, [sl, #4]
   19174:	ldr	r3, [r5]
   19178:	str	r3, [sl]
   1917c:	ldr	r3, [r5, #8]
   19180:	str	r3, [sl, #8]
   19184:	str	r1, [r5, #4]
   19188:	mov	r0, r5
   1918c:	bl	17870 <argp_parse@@Base+0x1540>
   19190:	ldr	r3, [fp, #16]!
   19194:	cmp	r3, #0
   19198:	beq	1952c <argp_parse@@Base+0x31fc>
   1919c:	mov	r5, fp
   191a0:	ldr	r6, [fp, #12]
   191a4:	cmp	r6, #0
   191a8:	bne	191b8 <argp_parse@@Base+0x2e88>
   191ac:	ldr	r3, [fp, #8]
   191b0:	cmp	r3, #0
   191b4:	beq	1912c <argp_parse@@Base+0x2dfc>
   191b8:	ldr	r7, [r5, #8]
   191bc:	ldr	r8, [sp, #12]
   191c0:	ldr	r4, [r8, #16]
   191c4:	mov	r0, #28
   191c8:	bl	176b4 <argp_parse@@Base+0x1384>
   191cc:	subs	r1, r0, #0
   191d0:	beq	19214 <argp_parse@@Base+0x2ee4>
   191d4:	str	r6, [r1, #8]
   191d8:	str	r7, [r1]
   191dc:	sub	r4, r5, r4
   191e0:	asr	r4, r4, #4
   191e4:	str	r4, [r1, #4]
   191e8:	ldr	r3, [sp, #4]
   191ec:	str	r3, [r1, #12]
   191f0:	str	r8, [r1, #16]
   191f4:	cmp	r3, #0
   191f8:	ldrne	r3, [r3, #20]
   191fc:	addne	r3, r3, #1
   19200:	moveq	r3, #0
   19204:	str	r3, [r1, #20]
   19208:	ldr	r3, [sl, #12]
   1920c:	str	r3, [r1, #24]
   19210:	str	r1, [sl, #12]
   19214:	ldr	r0, [r5]
   19218:	bl	18e98 <argp_parse@@Base+0x2b68>
   1921c:	mov	r5, r0
   19220:	ldr	r3, [sl, #12]
   19224:	cmp	r3, #0
   19228:	bne	19138 <argp_parse@@Base+0x2e08>
   1922c:	add	r3, sl, #12
   19230:	b	19148 <argp_parse@@Base+0x2e18>
   19234:	add	r3, r3, r2
   19238:	str	r3, [sp, #24]
   1923c:	rsb	r0, r3, r3, lsl #3
   19240:	lsl	r0, r0, #2
   19244:	bl	176b4 <argp_parse@@Base+0x1384>
   19248:	mov	r4, r0
   1924c:	str	r0, [sp, #20]
   19250:	ldr	r0, [sl, #8]
   19254:	bl	119dc <strlen@plt>
   19258:	mov	r7, r0
   1925c:	ldr	r0, [r5, #8]
   19260:	bl	119dc <strlen@plt>
   19264:	add	r0, r7, r0
   19268:	add	r0, r0, #1
   1926c:	bl	176b4 <argp_parse@@Base+0x1384>
   19270:	mov	r9, r0
   19274:	cmp	r4, #0
   19278:	cmpne	r0, #0
   1927c:	beq	19348 <argp_parse@@Base+0x3018>
   19280:	ldr	r3, [sp, #24]
   19284:	ldr	r2, [sp, #32]
   19288:	cmp	r3, r2
   1928c:	bhi	19364 <argp_parse@@Base+0x3034>
   19290:	ldr	r1, [sl]
   19294:	str	r1, [sp, #28]
   19298:	ldr	r4, [sl, #4]
   1929c:	rsb	r8, r4, r4, lsl #3
   192a0:	lsl	r8, r8, #2
   192a4:	mov	r2, r8
   192a8:	ldr	r0, [sp, #20]
   192ac:	bl	119a0 <mempcpy@plt>
   192b0:	ldr	r3, [r5, #4]
   192b4:	str	r3, [sp, #16]
   192b8:	rsb	r2, r3, r3, lsl #3
   192bc:	lsl	r2, r2, #2
   192c0:	ldr	r1, [r5]
   192c4:	bl	11808 <memcpy@plt>
   192c8:	ldr	r6, [sl, #8]
   192cc:	mov	r2, r7
   192d0:	mov	r1, r6
   192d4:	mov	r0, r9
   192d8:	bl	11808 <memcpy@plt>
   192dc:	cmp	r4, #0
   192e0:	beq	19380 <argp_parse@@Base+0x3050>
   192e4:	ldr	r2, [sp, #20]
   192e8:	ldr	r3, [r2, #8]
   192ec:	sub	r3, r3, r6
   192f0:	add	r3, r9, r3
   192f4:	str	r3, [r2, #8]
   192f8:	add	r2, r2, #28
   192fc:	subs	r4, r4, #1
   19300:	bne	192e8 <argp_parse@@Base+0x2fb8>
   19304:	ldr	r3, [sp, #20]
   19308:	add	r4, r3, r8
   1930c:	add	r3, r9, r7
   19310:	str	r3, [sp, #8]
   19314:	ldr	r1, [r5, #8]
   19318:	ldr	r8, [sp, #16]
   1931c:	cmp	r8, #0
   19320:	beq	19424 <argp_parse@@Base+0x30f4>
   19324:	add	r4, r4, #28
   19328:	sub	r2, r3, #1
   1932c:	str	r2, [sp, #16]
   19330:	str	r5, [sp, #36]	; 0x24
   19334:	str	fp, [sp, #40]	; 0x28
   19338:	mov	fp, r3
   1933c:	str	sl, [sp, #44]	; 0x2c
   19340:	mov	sl, r1
   19344:	b	193cc <argp_parse@@Base+0x309c>
   19348:	ldr	r3, [pc, #508]	; 1954c <argp_parse@@Base+0x321c>
   1934c:	movw	r2, #970	; 0x3ca
   19350:	movw	r1, #53996	; 0xd2ec
   19354:	movt	r1, #1
   19358:	movw	r0, #54124	; 0xd36c
   1935c:	movt	r0, #1
   19360:	bl	11c28 <__assert_fail@plt>
   19364:	ldr	r3, [pc, #480]	; 1954c <argp_parse@@Base+0x321c>
   19368:	mov	r2, #972	; 0x3cc
   1936c:	movw	r1, #53996	; 0xd2ec
   19370:	movt	r1, #1
   19374:	movw	r0, #54152	; 0xd388
   19378:	movt	r0, #1
   1937c:	bl	11c28 <__assert_fail@plt>
   19380:	ldr	r4, [sp, #20]
   19384:	b	1930c <argp_parse@@Base+0x2fdc>
   19388:	ldr	r2, [sp, #8]
   1938c:	cmp	r9, r2
   19390:	bcs	1942c <argp_parse@@Base+0x30fc>
   19394:	ldrb	r2, [r9]
   19398:	cmp	r2, r3
   1939c:	beq	19430 <argp_parse@@Base+0x3100>
   193a0:	mov	r2, r9
   193a4:	ldr	r1, [sp, #16]
   193a8:	cmp	r1, r2
   193ac:	beq	1942c <argp_parse@@Base+0x30fc>
   193b0:	ldrb	r1, [r2, #1]!
   193b4:	cmp	r1, r3
   193b8:	bne	193a4 <argp_parse@@Base+0x3074>
   193bc:	b	19430 <argp_parse@@Base+0x3100>
   193c0:	add	r4, r4, #28
   193c4:	subs	r8, r8, #1
   193c8:	beq	193e4 <argp_parse@@Base+0x30b4>
   193cc:	str	fp, [r4, #-20]	; 0xffffffec
   193d0:	ldr	r5, [r4, #-24]	; 0xffffffe8
   193d4:	ldr	r6, [r4, #-28]	; 0xffffffe4
   193d8:	cmp	r5, #0
   193dc:	bne	19450 <argp_parse@@Base+0x3120>
   193e0:	b	193c0 <argp_parse@@Base+0x3090>
   193e4:	ldr	r5, [sp, #36]	; 0x24
   193e8:	mov	r3, fp
   193ec:	ldr	fp, [sp, #40]	; 0x28
   193f0:	ldr	sl, [sp, #44]	; 0x2c
   193f4:	mov	r2, #0
   193f8:	strb	r2, [r3]
   193fc:	ldr	r0, [sp, #28]
   19400:	bl	17008 <argp_parse@@Base+0xcd8>
   19404:	ldr	r0, [sl, #8]
   19408:	bl	17008 <argp_parse@@Base+0xcd8>
   1940c:	ldr	r3, [sp, #20]
   19410:	str	r3, [sl]
   19414:	ldr	r3, [sp, #24]
   19418:	str	r3, [sl, #4]
   1941c:	str	r9, [sl, #8]
   19420:	b	19188 <argp_parse@@Base+0x2e58>
   19424:	ldr	r3, [sp, #8]
   19428:	b	193f4 <argp_parse@@Base+0x30c4>
   1942c:	strb	r3, [fp], #1
   19430:	add	sl, sl, #1
   19434:	b	19444 <argp_parse@@Base+0x3114>
   19438:	ldrb	r3, [sl]
   1943c:	cmp	r3, r7
   19440:	beq	19388 <argp_parse@@Base+0x3058>
   19444:	add	r6, r6, #24
   19448:	subs	r5, r5, #1
   1944c:	beq	193c0 <argp_parse@@Base+0x3090>
   19450:	ldr	r3, [r6, #12]
   19454:	tst	r3, #8
   19458:	bne	19444 <argp_parse@@Base+0x3114>
   1945c:	ldr	r7, [r6, #4]
   19460:	sub	r3, r7, #1
   19464:	cmp	r3, #254	; 0xfe
   19468:	bhi	19444 <argp_parse@@Base+0x3114>
   1946c:	bl	119ac <__ctype_b_loc@plt>
   19470:	ldr	r2, [r0]
   19474:	lsl	r3, r7, #1
   19478:	ldrh	r3, [r2, r3]
   1947c:	tst	r3, #16384	; 0x4000
   19480:	bne	19438 <argp_parse@@Base+0x3108>
   19484:	b	19444 <argp_parse@@Base+0x3114>
   19488:	strb	r6, [r5], #1
   1948c:	add	r4, r4, #24
   19490:	ldr	r3, [r4, #4]
   19494:	cmp	r3, #0
   19498:	bne	194a8 <argp_parse@@Base+0x3178>
   1949c:	ldr	r3, [r4]
   194a0:	cmp	r3, #0
   194a4:	beq	1906c <argp_parse@@Base+0x2d3c>
   194a8:	ldr	r3, [r4, #12]
   194ac:	tst	r3, #4
   194b0:	beq	19084 <argp_parse@@Base+0x2d54>
   194b4:	ldr	r3, [r8, #-24]	; 0xffffffe8
   194b8:	add	r3, r3, #1
   194bc:	str	r3, [r8, #-24]	; 0xffffffe8
   194c0:	ldr	r3, [r4, #12]
   194c4:	tst	r3, #8
   194c8:	bne	1948c <argp_parse@@Base+0x315c>
   194cc:	ldr	r6, [r4, #4]
   194d0:	sub	r3, r6, #1
   194d4:	cmp	r3, #254	; 0xfe
   194d8:	bhi	1948c <argp_parse@@Base+0x315c>
   194dc:	bl	119ac <__ctype_b_loc@plt>
   194e0:	ldr	r2, [r0]
   194e4:	lsl	r3, r6, #1
   194e8:	ldrh	r3, [r2, r3]
   194ec:	tst	r3, #16384	; 0x4000
   194f0:	beq	1948c <argp_parse@@Base+0x315c>
   194f4:	uxtb	r6, r6
   194f8:	ldr	r3, [sl, #8]
   194fc:	cmp	r3, r5
   19500:	bcs	19488 <argp_parse@@Base+0x3158>
   19504:	ldrb	r2, [r3]
   19508:	cmp	r2, r6
   1950c:	beq	1948c <argp_parse@@Base+0x315c>
   19510:	sub	r2, r5, #1
   19514:	cmp	r3, r2
   19518:	beq	19488 <argp_parse@@Base+0x3158>
   1951c:	ldrb	r1, [r3, #1]!
   19520:	cmp	r1, r6
   19524:	bne	19514 <argp_parse@@Base+0x31e4>
   19528:	b	1948c <argp_parse@@Base+0x315c>
   1952c:	mov	r0, sl
   19530:	add	sp, sp, #52	; 0x34
   19534:	ldrd	r4, [sp]
   19538:	ldrd	r6, [sp, #8]
   1953c:	ldrd	r8, [sp, #16]
   19540:	ldrd	sl, [sp, #24]
   19544:	add	sp, sp, #32
   19548:	pop	{pc}		; (ldr pc, [sp], #4)
   1954c:	andeq	sp, r1, r8, lsl #4

00019550 <argp_failure@@Base>:
   19550:	push	{r3}		; (str r3, [sp, #-4]!)
   19554:	strd	r4, [sp, #-20]!	; 0xffffffec
   19558:	strd	r6, [sp, #8]
   1955c:	str	lr, [sp, #16]
   19560:	sub	sp, sp, #200	; 0xc8
   19564:	mov	r7, r1
   19568:	mov	r6, r2
   1956c:	subs	r5, r0, #0
   19570:	beq	196cc <argp_failure@@Base+0x17c>
   19574:	ldr	r3, [r5, #16]
   19578:	tst	r3, #2
   1957c:	bne	196b0 <argp_failure@@Base+0x160>
   19580:	ldr	r4, [r5, #44]	; 0x2c
   19584:	cmp	r4, #0
   19588:	beq	196b0 <argp_failure@@Base+0x160>
   1958c:	mov	r0, r4
   19590:	bl	11b5c <flockfile@plt>
   19594:	ldr	r0, [r5, #40]	; 0x28
   19598:	mov	r1, r4
   1959c:	bl	11730 <fputs_unlocked@plt>
   195a0:	ldr	r3, [sp, #220]	; 0xdc
   195a4:	cmp	r3, #0
   195a8:	beq	19604 <argp_failure@@Base+0xb4>
   195ac:	add	r3, sp, #224	; 0xe0
   195b0:	str	r3, [sp]
   195b4:	ldr	r3, [r4, #20]
   195b8:	ldr	r2, [r4, #24]
   195bc:	cmp	r3, r2
   195c0:	addcc	r2, r3, #1
   195c4:	strcc	r2, [r4, #20]
   195c8:	movcc	r2, #58	; 0x3a
   195cc:	strbcc	r2, [r3]
   195d0:	bcs	196f8 <argp_failure@@Base+0x1a8>
   195d4:	ldr	r3, [r4, #20]
   195d8:	ldr	r2, [r4, #24]
   195dc:	cmp	r3, r2
   195e0:	addcc	r2, r3, #1
   195e4:	strcc	r2, [r4, #20]
   195e8:	movcc	r2, #32
   195ec:	strbcc	r2, [r3]
   195f0:	bcs	19708 <argp_failure@@Base+0x1b8>
   195f4:	ldr	r2, [sp]
   195f8:	ldr	r1, [sp, #220]	; 0xdc
   195fc:	mov	r0, r4
   19600:	bl	11afc <vfprintf@plt>
   19604:	cmp	r6, #0
   19608:	beq	1966c <argp_failure@@Base+0x11c>
   1960c:	ldr	r3, [r4, #20]
   19610:	ldr	r2, [r4, #24]
   19614:	cmp	r3, r2
   19618:	addcc	r2, r3, #1
   1961c:	strcc	r2, [r4, #20]
   19620:	movcc	r2, #58	; 0x3a
   19624:	strbcc	r2, [r3]
   19628:	bcs	19718 <argp_failure@@Base+0x1c8>
   1962c:	ldr	r3, [r4, #20]
   19630:	ldr	r2, [r4, #24]
   19634:	cmp	r3, r2
   19638:	addcc	r2, r3, #1
   1963c:	strcc	r2, [r4, #20]
   19640:	movcc	r2, #32
   19644:	strbcc	r2, [r3]
   19648:	bcs	19728 <argp_failure@@Base+0x1d8>
   1964c:	mov	r2, #200	; 0xc8
   19650:	mov	r1, sp
   19654:	mov	r0, r6
   19658:	bl	11a3c <strerror_r@plt>
   1965c:	cmp	r0, #0
   19660:	beq	19738 <argp_failure@@Base+0x1e8>
   19664:	mov	r1, r4
   19668:	bl	11730 <fputs_unlocked@plt>
   1966c:	ldr	r3, [r4, #20]
   19670:	ldr	r2, [r4, #24]
   19674:	cmp	r3, r2
   19678:	addcc	r2, r3, #1
   1967c:	strcc	r2, [r4, #20]
   19680:	movcc	r2, #10
   19684:	strbcc	r2, [r3]
   19688:	bcs	19754 <argp_failure@@Base+0x204>
   1968c:	mov	r0, r4
   19690:	bl	118d4 <funlockfile@plt>
   19694:	cmp	r7, #0
   19698:	beq	196b0 <argp_failure@@Base+0x160>
   1969c:	cmp	r5, #0
   196a0:	beq	19764 <argp_failure@@Base+0x214>
   196a4:	ldr	r3, [r5, #16]
   196a8:	tst	r3, #32
   196ac:	beq	19764 <argp_failure@@Base+0x214>
   196b0:	add	sp, sp, #200	; 0xc8
   196b4:	ldrd	r4, [sp]
   196b8:	ldrd	r6, [sp, #8]
   196bc:	ldr	lr, [sp, #16]
   196c0:	add	sp, sp, #20
   196c4:	add	sp, sp, #4
   196c8:	bx	lr
   196cc:	movw	r3, #58288	; 0xe3b0
   196d0:	movt	r3, #2
   196d4:	ldr	r4, [r3]
   196d8:	cmp	r4, #0
   196dc:	beq	196b0 <argp_failure@@Base+0x160>
   196e0:	mov	r0, r4
   196e4:	bl	11b5c <flockfile@plt>
   196e8:	movw	r3, #58280	; 0xe3a8
   196ec:	movt	r3, #2
   196f0:	ldr	r0, [r3]
   196f4:	b	19598 <argp_failure@@Base+0x48>
   196f8:	mov	r1, #58	; 0x3a
   196fc:	mov	r0, r4
   19700:	bl	11ab4 <__overflow@plt>
   19704:	b	195d4 <argp_failure@@Base+0x84>
   19708:	mov	r1, #32
   1970c:	mov	r0, r4
   19710:	bl	11ab4 <__overflow@plt>
   19714:	b	195f4 <argp_failure@@Base+0xa4>
   19718:	mov	r1, #58	; 0x3a
   1971c:	mov	r0, r4
   19720:	bl	11ab4 <__overflow@plt>
   19724:	b	1962c <argp_failure@@Base+0xdc>
   19728:	mov	r1, #32
   1972c:	mov	r0, r4
   19730:	bl	11ab4 <__overflow@plt>
   19734:	b	1964c <argp_failure@@Base+0xfc>
   19738:	mov	r0, r6
   1973c:	bl	1197c <strerror@plt>
   19740:	movw	r3, #54204	; 0xd3bc
   19744:	movt	r3, #1
   19748:	cmp	r0, #0
   1974c:	moveq	r0, r3
   19750:	b	19664 <argp_failure@@Base+0x114>
   19754:	mov	r1, #10
   19758:	mov	r0, r4
   1975c:	bl	11ab4 <__overflow@plt>
   19760:	b	1968c <argp_failure@@Base+0x13c>
   19764:	mov	r0, r7
   19768:	bl	119c4 <exit@plt>
   1976c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19770:	strd	r6, [sp, #8]
   19774:	strd	r8, [sp, #16]
   19778:	strd	sl, [sp, #24]
   1977c:	str	lr, [sp, #32]
   19780:	add	fp, sp, #32
   19784:	sub	sp, sp, #124	; 0x7c
   19788:	str	r0, [fp, #-108]	; 0xffffff94
   1978c:	str	r1, [fp, #-104]	; 0xffffff98
   19790:	str	r3, [fp, #-100]	; 0xffffff9c
   19794:	subs	r3, r2, #0
   19798:	str	r3, [fp, #-132]	; 0xffffff7c
   1979c:	beq	1a784 <argp_failure@@Base+0x1234>
   197a0:	mov	r0, r3
   197a4:	bl	11b5c <flockfile@plt>
   197a8:	movw	r3, #58224	; 0xe370
   197ac:	movt	r3, #2
   197b0:	ldr	r9, [r3, #36]	; 0x24
   197b4:	cmp	r9, #0
   197b8:	beq	19890 <argp_failure@@Base+0x340>
   197bc:	movw	r2, #58224	; 0xe370
   197c0:	movt	r2, #2
   197c4:	mov	r3, #0
   197c8:	ldr	r2, [r2, #32]
   197cc:	mov	r1, r3
   197d0:	ldr	r0, [fp, #-132]	; 0xffffff7c
   197d4:	bl	1b83c <argp_error@@Base+0xe04>
   197d8:	subs	sl, r0, #0
   197dc:	beq	19c6c <argp_failure@@Base+0x71c>
   197e0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   197e4:	tst	r3, #11
   197e8:	moveq	r3, #0
   197ec:	streq	r3, [fp, #-128]	; 0xffffff80
   197f0:	bne	19c78 <argp_failure@@Base+0x728>
   197f4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   197f8:	tst	r3, #3
   197fc:	moveq	r4, #0
   19800:	bne	19d08 <argp_failure@@Base+0x7b8>
   19804:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19808:	tst	r3, #16
   1980c:	bne	19f2c <argp_failure@@Base+0x9dc>
   19810:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19814:	tst	r3, #4
   19818:	bne	19f54 <argp_failure@@Base+0xa04>
   1981c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19820:	tst	r3, #8
   19824:	beq	1a710 <argp_failure@@Base+0x11c0>
   19828:	ldr	r3, [fp, #-128]	; 0xffffff80
   1982c:	ldr	r3, [r3, #4]
   19830:	cmp	r3, #0
   19834:	beq	1a710 <argp_failure@@Base+0x11c0>
   19838:	cmp	r4, #0
   1983c:	bne	19f74 <argp_failure@@Base+0xa24>
   19840:	mov	r3, #0
   19844:	str	r3, [fp, #-88]	; 0xffffffa8
   19848:	str	r3, [fp, #-84]	; 0xffffffac
   1984c:	str	r3, [fp, #-80]	; 0xffffffb0
   19850:	ldr	r3, [fp, #-128]	; 0xffffff80
   19854:	ldr	r9, [r3]
   19858:	ldr	r3, [r3, #4]
   1985c:	str	r3, [fp, #-116]	; 0xffffff8c
   19860:	cmp	r3, #0
   19864:	beq	1a70c <argp_failure@@Base+0x11bc>
   19868:	movw	r3, #58224	; 0xe370
   1986c:	movt	r3, #2
   19870:	str	r3, [fp, #-96]	; 0xffffffa0
   19874:	movw	r3, #50888	; 0xc6c8
   19878:	movt	r3, #1
   1987c:	str	r3, [fp, #-140]	; 0xffffff74
   19880:	movw	r3, #52580	; 0xcd64
   19884:	movt	r3, #1
   19888:	str	r3, [fp, #-144]	; 0xffffff70
   1988c:	b	1a58c <argp_failure@@Base+0x103c>
   19890:	movw	r0, #54228	; 0xd3d4
   19894:	movt	r0, #1
   19898:	bl	11940 <getenv@plt>
   1989c:	movw	r1, #58224	; 0xe370
   198a0:	movt	r1, #2
   198a4:	ldrd	r2, [r1]
   198a8:	strd	r2, [fp, #-76]	; 0xffffffb4
   198ac:	ldrd	r2, [r1, #8]
   198b0:	strd	r2, [fp, #-68]	; 0xffffffbc
   198b4:	ldrd	r2, [r1, #16]
   198b8:	strd	r2, [fp, #-60]	; 0xffffffc4
   198bc:	ldrd	r2, [r1, #24]
   198c0:	strd	r2, [fp, #-52]	; 0xffffffcc
   198c4:	ldrd	r2, [r1, #32]
   198c8:	strd	r2, [fp, #-44]	; 0xffffffd4
   198cc:	subs	r6, r0, #0
   198d0:	beq	197bc <argp_failure@@Base+0x26c>
   198d4:	movw	sl, #53756	; 0xd1fc
   198d8:	movt	sl, #1
   198dc:	add	r8, sl, #168	; 0xa8
   198e0:	b	19b3c <argp_failure@@Base+0x5ec>
   198e4:	cmp	r0, #45	; 0x2d
   198e8:	cmpne	r0, #95	; 0x5f
   198ec:	moveq	r3, #1
   198f0:	movne	r3, #0
   198f4:	ubfx	r1, r1, #3, #1
   198f8:	orrs	r3, r3, r1
   198fc:	beq	1a8e8 <argp_failure@@Base+0x1398>
   19900:	mov	r4, r6
   19904:	ldrb	r3, [r4, #1]!
   19908:	lsl	r1, r3, #1
   1990c:	ldrh	r1, [r2, r1]
   19910:	ubfx	r1, r1, #3, #1
   19914:	cmp	r3, #95	; 0x5f
   19918:	cmpne	r3, #45	; 0x2d
   1991c:	moveq	r3, #1
   19920:	movne	r3, #0
   19924:	orrs	r3, r1, r3
   19928:	bne	19904 <argp_failure@@Base+0x3b4>
   1992c:	sub	r7, r4, r6
   19930:	ldrb	r3, [r4]
   19934:	lsl	r1, r3, #1
   19938:	ldrh	r1, [r2, r1]
   1993c:	tst	r1, #8192	; 0x2000
   19940:	beq	19958 <argp_failure@@Base+0x408>
   19944:	ldrb	r3, [r4, #1]!
   19948:	lsl	r1, r3, #1
   1994c:	ldrh	r1, [r2, r1]
   19950:	tst	r1, #8192	; 0x2000
   19954:	bne	19944 <argp_failure@@Base+0x3f4>
   19958:	cmp	r3, #44	; 0x2c
   1995c:	cmpne	r3, #0
   19960:	beq	199c4 <argp_failure@@Base+0x474>
   19964:	cmp	r3, #61	; 0x3d
   19968:	beq	19990 <argp_failure@@Base+0x440>
   1996c:	ldrb	r3, [r4]
   19970:	lsl	r3, r3, #1
   19974:	ldrh	r3, [r2, r3]
   19978:	tst	r3, #2048	; 0x800
   1997c:	streq	r9, [fp, #-96]	; 0xffffffa0
   19980:	streq	r9, [fp, #-112]	; 0xffffff90
   19984:	bne	19a28 <argp_failure@@Base+0x4d8>
   19988:	add	r5, sl, #24
   1998c:	b	19ad0 <argp_failure@@Base+0x580>
   19990:	add	r1, r4, #1
   19994:	ldrb	r3, [r4, #1]
   19998:	lsl	r3, r3, #1
   1999c:	ldrh	r3, [r2, r3]
   199a0:	tst	r3, #8192	; 0x2000
   199a4:	beq	19a20 <argp_failure@@Base+0x4d0>
   199a8:	ldrb	r3, [r1, #1]!
   199ac:	lsl	r3, r3, #1
   199b0:	ldrh	r3, [r2, r3]
   199b4:	tst	r3, #8192	; 0x2000
   199b8:	bne	199a8 <argp_failure@@Base+0x458>
   199bc:	mov	r4, r1
   199c0:	b	1996c <argp_failure@@Base+0x41c>
   199c4:	cmp	r0, #110	; 0x6e
   199c8:	movne	r3, #1
   199cc:	strne	r3, [fp, #-96]	; 0xffffffa0
   199d0:	strne	r3, [fp, #-112]	; 0xffffff90
   199d4:	bne	19988 <argp_failure@@Base+0x438>
   199d8:	ldrb	r3, [r6, #1]
   199dc:	cmp	r3, #111	; 0x6f
   199e0:	movne	r3, #1
   199e4:	strne	r3, [fp, #-96]	; 0xffffffa0
   199e8:	strne	r3, [fp, #-112]	; 0xffffff90
   199ec:	bne	19988 <argp_failure@@Base+0x438>
   199f0:	ldrb	r3, [r6, #2]
   199f4:	cmp	r3, #45	; 0x2d
   199f8:	movne	r3, #1
   199fc:	strne	r3, [fp, #-96]	; 0xffffffa0
   19a00:	strne	r3, [fp, #-112]	; 0xffffff90
   19a04:	bne	19988 <argp_failure@@Base+0x438>
   19a08:	add	r6, r6, #3
   19a0c:	sub	r7, r7, #3
   19a10:	str	r9, [fp, #-112]	; 0xffffff90
   19a14:	mov	r3, #1
   19a18:	str	r3, [fp, #-96]	; 0xffffffa0
   19a1c:	b	19988 <argp_failure@@Base+0x438>
   19a20:	mov	r4, r1
   19a24:	b	1996c <argp_failure@@Base+0x41c>
   19a28:	mov	r2, #10
   19a2c:	mov	r1, #0
   19a30:	mov	r0, r4
   19a34:	bl	11760 <strtol@plt>
   19a38:	str	r0, [fp, #-112]	; 0xffffff90
   19a3c:	ldr	r2, [r5]
   19a40:	ldrb	r3, [r4]
   19a44:	lsl	r3, r3, #1
   19a48:	ldrh	r3, [r2, r3]
   19a4c:	tst	r3, #2048	; 0x800
   19a50:	beq	19a68 <argp_failure@@Base+0x518>
   19a54:	ldrb	r3, [r4, #1]!
   19a58:	lsl	r3, r3, #1
   19a5c:	ldrh	r3, [r2, r3]
   19a60:	tst	r3, #2048	; 0x800
   19a64:	bne	19a54 <argp_failure@@Base+0x504>
   19a68:	ldrb	r3, [r4]
   19a6c:	lsl	r3, r3, #1
   19a70:	ldrh	r3, [r2, r3]
   19a74:	tst	r3, #8192	; 0x2000
   19a78:	beq	19a98 <argp_failure@@Base+0x548>
   19a7c:	ldrb	r3, [r4, #1]!
   19a80:	lsl	r3, r3, #1
   19a84:	ldrh	r3, [r2, r3]
   19a88:	tst	r3, #8192	; 0x2000
   19a8c:	bne	19a7c <argp_failure@@Base+0x52c>
   19a90:	str	r9, [fp, #-96]	; 0xffffffa0
   19a94:	b	19988 <argp_failure@@Base+0x438>
   19a98:	str	r9, [fp, #-96]	; 0xffffffa0
   19a9c:	b	19988 <argp_failure@@Base+0x438>
   19aa0:	str	r6, [sp, #4]
   19aa4:	str	r7, [sp]
   19aa8:	movw	r3, #54244	; 0xd3e4
   19aac:	movt	r3, #1
   19ab0:	mov	r2, #0
   19ab4:	mov	r1, r2
   19ab8:	ldr	r0, [fp, #-104]	; 0xffffff98
   19abc:	bl	19550 <argp_failure@@Base>
   19ac0:	b	19b24 <argp_failure@@Base+0x5d4>
   19ac4:	add	r5, r5, #16
   19ac8:	cmp	r5, r8
   19acc:	beq	19c0c <argp_failure@@Base+0x6bc>
   19ad0:	mov	r0, r5
   19ad4:	bl	119dc <strlen@plt>
   19ad8:	cmp	r0, r7
   19adc:	bne	19ac4 <argp_failure@@Base+0x574>
   19ae0:	mov	r2, r7
   19ae4:	mov	r1, r5
   19ae8:	mov	r0, r6
   19aec:	bl	11bd4 <strncmp@plt>
   19af0:	cmp	r0, #0
   19af4:	bne	19ac4 <argp_failure@@Base+0x574>
   19af8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19afc:	cmp	r3, #0
   19b00:	beq	19b10 <argp_failure@@Base+0x5c0>
   19b04:	ldrb	r3, [r5, #14]
   19b08:	cmp	r3, #0
   19b0c:	beq	19aa0 <argp_failure@@Base+0x550>
   19b10:	ldrb	r3, [r5, #15]
   19b14:	sub	r2, fp, #36	; 0x24
   19b18:	add	r3, r2, r3
   19b1c:	ldr	r2, [fp, #-112]	; 0xffffff90
   19b20:	str	r2, [r3, #-40]	; 0xffffffd8
   19b24:	cmp	r5, r8
   19b28:	beq	19c0c <argp_failure@@Base+0x6bc>
   19b2c:	ldrb	r3, [r4]
   19b30:	cmp	r3, #44	; 0x2c
   19b34:	addeq	r6, r4, #1
   19b38:	movne	r6, r4
   19b3c:	ldrb	r3, [r6]
   19b40:	cmp	r3, #0
   19b44:	beq	19b9c <argp_failure@@Base+0x64c>
   19b48:	bl	119ac <__ctype_b_loc@plt>
   19b4c:	mov	r5, r0
   19b50:	ldr	r2, [r0]
   19b54:	mov	r3, r6
   19b58:	mov	r6, r3
   19b5c:	ldrb	r0, [r3], #1
   19b60:	lsl	r1, r0, #1
   19b64:	ldrh	r1, [r2, r1]
   19b68:	tst	r1, #8192	; 0x2000
   19b6c:	bne	19b58 <argp_failure@@Base+0x608>
   19b70:	tst	r1, #1024	; 0x400
   19b74:	bne	198e4 <argp_failure@@Base+0x394>
   19b78:	cmp	r0, #0
   19b7c:	beq	19b3c <argp_failure@@Base+0x5ec>
   19b80:	str	r6, [sp]
   19b84:	movw	r3, #54332	; 0xd43c
   19b88:	movt	r3, #1
   19b8c:	mov	r2, #0
   19b90:	mov	r1, r2
   19b94:	ldr	r0, [fp, #-104]	; 0xffffff98
   19b98:	bl	19550 <argp_failure@@Base>
   19b9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ba0:	ldr	r3, [pc, #3488]	; 1a948 <argp_failure@@Base+0x13f8>
   19ba4:	add	r1, r3, #144	; 0x90
   19ba8:	add	r3, r3, #16
   19bac:	cmp	r3, r1
   19bb0:	beq	19c30 <argp_failure@@Base+0x6e0>
   19bb4:	ldrb	r2, [r3, #14]
   19bb8:	cmp	r2, #0
   19bbc:	bne	19ba8 <argp_failure@@Base+0x658>
   19bc0:	ldrb	r2, [r3, #15]
   19bc4:	cmp	r2, #32
   19bc8:	beq	19ba8 <argp_failure@@Base+0x658>
   19bcc:	sub	ip, fp, #36	; 0x24
   19bd0:	add	r2, ip, r2
   19bd4:	ldr	r2, [r2, #-40]	; 0xffffffd8
   19bd8:	cmp	r2, r0
   19bdc:	blt	19ba8 <argp_failure@@Base+0x658>
   19be0:	str	r3, [sp, #4]
   19be4:	movw	r3, #54416	; 0xd490
   19be8:	movt	r3, #1
   19bec:	str	r3, [sp]
   19bf0:	movw	r3, #54364	; 0xd45c
   19bf4:	movt	r3, #1
   19bf8:	mov	r2, #0
   19bfc:	mov	r1, r2
   19c00:	ldr	r0, [fp, #-104]	; 0xffffff98
   19c04:	bl	19550 <argp_failure@@Base>
   19c08:	b	197bc <argp_failure@@Base+0x26c>
   19c0c:	str	r6, [sp, #4]
   19c10:	str	r7, [sp]
   19c14:	movw	r3, #54292	; 0xd414
   19c18:	movt	r3, #1
   19c1c:	mov	r2, #0
   19c20:	mov	r1, r2
   19c24:	ldr	r0, [fp, #-104]	; 0xffffff98
   19c28:	bl	19550 <argp_failure@@Base>
   19c2c:	b	19b2c <argp_failure@@Base+0x5dc>
   19c30:	movw	r1, #58224	; 0xe370
   19c34:	movt	r1, #2
   19c38:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   19c3c:	strd	r2, [r1]
   19c40:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   19c44:	strd	r2, [r1, #8]
   19c48:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   19c4c:	strd	r2, [r1, #16]
   19c50:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   19c54:	strd	r2, [r1, #24]
   19c58:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   19c5c:	strd	r2, [r1, #32]
   19c60:	mov	r3, #1
   19c64:	str	r3, [r1, #36]	; 0x24
   19c68:	b	197bc <argp_failure@@Base+0x26c>
   19c6c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   19c70:	bl	118d4 <funlockfile@plt>
   19c74:	b	1a784 <argp_failure@@Base+0x1234>
   19c78:	mov	r1, #0
   19c7c:	ldr	r0, [fp, #-108]	; 0xffffff94
   19c80:	bl	18e98 <argp_parse@@Base+0x2b68>
   19c84:	str	r0, [fp, #-128]	; 0xffffff80
   19c88:	movw	r1, #49612	; 0xc1cc
   19c8c:	movt	r1, #1
   19c90:	bl	178d8 <argp_parse@@Base+0x15a8>
   19c94:	cmp	r0, #0
   19c98:	mvnne	r3, #0
   19c9c:	strne	r3, [r0, #12]
   19ca0:	movw	r1, #52628	; 0xcd94
   19ca4:	movt	r1, #1
   19ca8:	ldr	r0, [fp, #-128]	; 0xffffff80
   19cac:	bl	178d8 <argp_parse@@Base+0x15a8>
   19cb0:	cmp	r0, #0
   19cb4:	mvnne	r3, #0
   19cb8:	strne	r3, [r0, #12]
   19cbc:	ldr	r0, [fp, #-128]	; 0xffffff80
   19cc0:	ldr	r3, [r0, #4]
   19cc4:	cmp	r3, #0
   19cc8:	beq	197f4 <argp_failure@@Base+0x2a4>
   19ccc:	ldr	r2, [r0]
   19cd0:	mov	r3, #0
   19cd4:	str	r3, [r2, #24]
   19cd8:	add	r3, r3, #1
   19cdc:	add	r2, r2, #28
   19ce0:	ldr	r1, [r0, #4]
   19ce4:	cmp	r3, r1
   19ce8:	bcc	19cd4 <argp_failure@@Base+0x784>
   19cec:	movw	r3, #35720	; 0x8b88
   19cf0:	movt	r3, #1
   19cf4:	mov	r2, #28
   19cf8:	ldr	r0, [fp, #-128]	; 0xffffff80
   19cfc:	ldr	r0, [r0]
   19d00:	bl	11b80 <qsort@plt>
   19d04:	b	197f4 <argp_failure@@Base+0x2a4>
   19d08:	ldr	r0, [fp, #-108]	; 0xffffff94
   19d0c:	bl	1798c <argp_parse@@Base+0x165c>
   19d10:	mov	r2, r0
   19d14:	add	r3, r0, #7
   19d18:	bic	r3, r3, #7
   19d1c:	sub	sp, sp, r3
   19d20:	add	r9, sp, #8
   19d24:	mov	r1, #0
   19d28:	mov	r0, r9
   19d2c:	bl	11a54 <memset@plt>
   19d30:	mov	r5, #1
   19d34:	movw	r4, #58224	; 0xe370
   19d38:	movt	r4, #2
   19d3c:	movw	r3, #54440	; 0xd4a8
   19d40:	movt	r3, #1
   19d44:	str	r3, [fp, #-116]	; 0xffffff8c
   19d48:	movw	r8, #54432	; 0xd4a0
   19d4c:	movt	r8, #1
   19d50:	str	r9, [fp, #-96]	; 0xffffffa0
   19d54:	ldr	r9, [fp, #-128]	; 0xffffff80
   19d58:	str	r8, [fp, #-112]	; 0xffffff90
   19d5c:	ldr	r8, [fp, #-100]	; 0xffffff9c
   19d60:	b	19e10 <argp_failure@@Base+0x8c0>
   19d64:	mov	r0, sl
   19d68:	bl	1b8d4 <argp_error@@Base+0xe9c>
   19d6c:	b	19e2c <argp_failure@@Base+0x8dc>
   19d70:	mov	r0, sl
   19d74:	bl	1b8d4 <argp_error@@Base+0xe9c>
   19d78:	b	19e78 <argp_failure@@Base+0x928>
   19d7c:	mov	r1, sl
   19d80:	mov	r0, r9
   19d84:	bl	17b60 <argp_parse@@Base+0x1830>
   19d88:	orr	r8, r8, #2
   19d8c:	str	sl, [sp]
   19d90:	mov	r3, #1
   19d94:	sub	r2, fp, #76	; 0x4c
   19d98:	ldr	r1, [fp, #-104]	; 0xffffff98
   19d9c:	ldr	r0, [fp, #-108]	; 0xffffff94
   19da0:	bl	17fcc <argp_parse@@Base+0x1c9c>
   19da4:	mov	r6, r0
   19da8:	ldr	r3, [sl, #28]
   19dac:	ldr	r2, [sl, #24]
   19db0:	sub	r3, r3, r2
   19db4:	ldr	r2, [sl, #16]
   19db8:	cmp	r3, r2
   19dbc:	bhi	19ef0 <argp_failure@@Base+0x9a0>
   19dc0:	str	r7, [sl, #12]
   19dc4:	ldr	r3, [sl, #28]
   19dc8:	ldr	r2, [sl, #24]
   19dcc:	sub	r3, r3, r2
   19dd0:	ldr	r2, [sl, #16]
   19dd4:	cmp	r3, r2
   19dd8:	bhi	19efc <argp_failure@@Base+0x9ac>
   19ddc:	str	r5, [sl, #4]
   19de0:	ldr	r2, [sl, #28]
   19de4:	ldr	r3, [sl, #32]
   19de8:	cmp	r2, r3
   19dec:	bcs	19f08 <argp_failure@@Base+0x9b8>
   19df0:	ldr	r3, [sl, #28]
   19df4:	add	r2, r3, #1
   19df8:	str	r2, [sl, #28]
   19dfc:	mov	r2, #10
   19e00:	strb	r2, [r3]
   19e04:	mov	r5, #0
   19e08:	cmp	r6, r5
   19e0c:	beq	19f20 <argp_failure@@Base+0x9d0>
   19e10:	ldr	r6, [r4, #28]
   19e14:	ldr	r3, [sl, #28]
   19e18:	ldr	r2, [sl, #24]
   19e1c:	sub	r3, r3, r2
   19e20:	ldr	r2, [sl, #16]
   19e24:	cmp	r3, r2
   19e28:	bhi	19d64 <argp_failure@@Base+0x814>
   19e2c:	ldr	r7, [sl, #12]
   19e30:	str	r6, [sl, #12]
   19e34:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19e38:	str	r3, [fp, #-76]	; 0xffffffb4
   19e3c:	cmp	r5, #0
   19e40:	ldr	r3, [fp, #4]
   19e44:	movwne	r2, #54424	; 0xd498
   19e48:	movtne	r2, #1
   19e4c:	ldreq	r2, [fp, #-116]	; 0xffffff8c
   19e50:	ldr	r1, [fp, #-112]	; 0xffffff90
   19e54:	mov	r0, sl
   19e58:	bl	1bf4c <argp_error@@Base+0x1514>
   19e5c:	ldr	r6, [r4, #28]
   19e60:	ldr	r3, [sl, #28]
   19e64:	ldr	r2, [sl, #24]
   19e68:	sub	r3, r3, r2
   19e6c:	ldr	r2, [sl, #16]
   19e70:	cmp	r3, r2
   19e74:	bhi	19d70 <argp_failure@@Base+0x820>
   19e78:	ldr	r5, [sl, #4]
   19e7c:	str	r6, [sl, #4]
   19e80:	tst	r8, #2
   19e84:	beq	19d7c <argp_failure@@Base+0x82c>
   19e88:	ldr	r3, [r9, #4]
   19e8c:	cmp	r3, #0
   19e90:	beq	19d8c <argp_failure@@Base+0x83c>
   19e94:	ldr	r3, [sl, #28]
   19e98:	add	r3, r3, #12
   19e9c:	ldr	r2, [sl, #32]
   19ea0:	cmp	r2, r3
   19ea4:	bcs	19ebc <argp_failure@@Base+0x96c>
   19ea8:	mov	r1, #12
   19eac:	mov	r0, sl
   19eb0:	bl	1be4c <argp_error@@Base+0x1414>
   19eb4:	cmp	r0, #0
   19eb8:	beq	19d8c <argp_failure@@Base+0x83c>
   19ebc:	ldr	r2, [sl, #28]
   19ec0:	movw	r3, #54448	; 0xd4b0
   19ec4:	movt	r3, #1
   19ec8:	ldr	r0, [r3]
   19ecc:	ldr	r1, [r3, #4]
   19ed0:	str	r0, [r2]
   19ed4:	str	r1, [r2, #4]
   19ed8:	ldr	r3, [r3, #8]
   19edc:	str	r3, [r2, #8]
   19ee0:	ldr	r3, [sl, #28]
   19ee4:	add	r3, r3, #12
   19ee8:	str	r3, [sl, #28]
   19eec:	b	19d8c <argp_failure@@Base+0x83c>
   19ef0:	mov	r0, sl
   19ef4:	bl	1b8d4 <argp_error@@Base+0xe9c>
   19ef8:	b	19dc0 <argp_failure@@Base+0x870>
   19efc:	mov	r0, sl
   19f00:	bl	1b8d4 <argp_error@@Base+0xe9c>
   19f04:	b	19ddc <argp_failure@@Base+0x88c>
   19f08:	mov	r1, #1
   19f0c:	mov	r0, sl
   19f10:	bl	1be4c <argp_error@@Base+0x1414>
   19f14:	cmp	r0, #0
   19f18:	bne	19df0 <argp_failure@@Base+0x8a0>
   19f1c:	b	19e04 <argp_failure@@Base+0x8b4>
   19f20:	str	r8, [fp, #-100]	; 0xffffff9c
   19f24:	mov	r4, #1
   19f28:	b	19804 <argp_failure@@Base+0x2b4>
   19f2c:	str	sl, [sp, #4]
   19f30:	mov	r3, #1
   19f34:	str	r3, [sp]
   19f38:	mov	r3, #0
   19f3c:	mov	r2, r3
   19f40:	ldr	r1, [fp, #-104]	; 0xffffff98
   19f44:	ldr	r0, [fp, #-108]	; 0xffffff94
   19f48:	bl	1857c <argp_parse@@Base+0x224c>
   19f4c:	orr	r4, r4, r0
   19f50:	b	19810 <argp_failure@@Base+0x2c0>
   19f54:	ldr	r3, [fp, #4]
   19f58:	mov	r2, r3
   19f5c:	movw	r1, #54464	; 0xd4c0
   19f60:	movt	r1, #1
   19f64:	mov	r0, sl
   19f68:	bl	1bf4c <argp_error@@Base+0x1514>
   19f6c:	mov	r4, #1
   19f70:	b	1981c <argp_failure@@Base+0x2cc>
   19f74:	ldr	r2, [sl, #28]
   19f78:	ldr	r3, [sl, #32]
   19f7c:	cmp	r2, r3
   19f80:	bcs	19f9c <argp_failure@@Base+0xa4c>
   19f84:	ldr	r3, [sl, #28]
   19f88:	add	r2, r3, #1
   19f8c:	str	r2, [sl, #28]
   19f90:	mov	r2, #10
   19f94:	strb	r2, [r3]
   19f98:	b	19840 <argp_failure@@Base+0x2f0>
   19f9c:	mov	r1, #1
   19fa0:	mov	r0, sl
   19fa4:	bl	1be4c <argp_error@@Base+0x1414>
   19fa8:	cmp	r0, #0
   19fac:	bne	19f84 <argp_failure@@Base+0xa34>
   19fb0:	b	19840 <argp_failure@@Base+0x2f0>
   19fb4:	mov	r0, sl
   19fb8:	bl	1b8d4 <argp_error@@Base+0xe9c>
   19fbc:	b	1a5ac <argp_failure@@Base+0x105c>
   19fc0:	add	r3, r3, #24
   19fc4:	subs	r2, r2, #1
   19fc8:	beq	19fec <argp_failure@@Base+0xa9c>
   19fcc:	ldr	r1, [r3, #-24]	; 0xffffffe8
   19fd0:	cmp	r1, #0
   19fd4:	beq	19fc0 <argp_failure@@Base+0xa70>
   19fd8:	ldr	r1, [r3, #-12]
   19fdc:	tst	r1, #2
   19fe0:	bne	19fc0 <argp_failure@@Base+0xa70>
   19fe4:	mov	r3, #1
   19fe8:	str	r3, [fp, #-112]	; 0xffffff90
   19fec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19ff0:	ldr	r5, [r3, #8]
   19ff4:	ldr	r3, [sl, #28]
   19ff8:	ldr	r2, [sl, #24]
   19ffc:	sub	r3, r3, r2
   1a000:	ldr	r2, [sl, #16]
   1a004:	cmp	r3, r2
   1a008:	bhi	1a028 <argp_failure@@Base+0xad8>
   1a00c:	str	r5, [sl, #12]
   1a010:	ldr	r6, [r9, #4]
   1a014:	cmp	r6, #0
   1a018:	beq	1a128 <argp_failure@@Base+0xbd8>
   1a01c:	mov	r5, r4
   1a020:	str	r9, [fp, #-136]	; 0xffffff78
   1a024:	b	1a910 <argp_failure@@Base+0x13c0>
   1a028:	mov	r0, sl
   1a02c:	bl	1b8d4 <argp_error@@Base+0xe9c>
   1a030:	b	1a00c <argp_failure@@Base+0xabc>
   1a034:	tst	r9, #2
   1a038:	beq	1a044 <argp_failure@@Base+0xaf4>
   1a03c:	add	r8, r8, #1
   1a040:	b	1a904 <argp_failure@@Base+0x13b4>
   1a044:	sub	r1, fp, #76	; 0x4c
   1a048:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a04c:	ldr	r0, [r3, #8]
   1a050:	bl	183d8 <argp_parse@@Base+0x20a8>
   1a054:	ldr	r2, [sl, #28]
   1a058:	ldr	r3, [sl, #32]
   1a05c:	cmp	r2, r3
   1a060:	bcs	1a0e0 <argp_failure@@Base+0xb90>
   1a064:	ldr	r3, [sl, #28]
   1a068:	add	r2, r3, #1
   1a06c:	str	r2, [sl, #28]
   1a070:	mov	r2, #45	; 0x2d
   1a074:	strb	r2, [r3]
   1a078:	ldrb	r7, [r8]
   1a07c:	ldr	r2, [sl, #28]
   1a080:	ldr	r3, [sl, #32]
   1a084:	cmp	r2, r3
   1a088:	bcs	1a0f8 <argp_failure@@Base+0xba8>
   1a08c:	ldr	r3, [sl, #28]
   1a090:	add	r2, r3, #1
   1a094:	str	r2, [sl, #28]
   1a098:	strb	r7, [r3]
   1a09c:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a0a0:	cmp	r3, #0
   1a0a4:	beq	1a0b8 <argp_failure@@Base+0xb68>
   1a0a8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a0ac:	ldr	r3, [r3]
   1a0b0:	cmp	r3, #0
   1a0b4:	beq	1a110 <argp_failure@@Base+0xbc0>
   1a0b8:	ldr	r2, [r4, #8]
   1a0bc:	cmp	r2, #0
   1a0c0:	beq	1a03c <argp_failure@@Base+0xaec>
   1a0c4:	ldr	r3, [r4, #12]
   1a0c8:	tst	r3, #1
   1a0cc:	ldrne	r1, [fp, #-140]	; 0xffffff74
   1a0d0:	ldreq	r1, [fp, #-144]	; 0xffffff70
   1a0d4:	mov	r0, sl
   1a0d8:	bl	1bf4c <argp_error@@Base+0x1514>
   1a0dc:	b	1a03c <argp_failure@@Base+0xaec>
   1a0e0:	mov	r1, #1
   1a0e4:	mov	r0, sl
   1a0e8:	bl	1be4c <argp_error@@Base+0x1414>
   1a0ec:	cmp	r0, #0
   1a0f0:	bne	1a064 <argp_failure@@Base+0xb14>
   1a0f4:	b	1a078 <argp_failure@@Base+0xb28>
   1a0f8:	mov	r1, #1
   1a0fc:	mov	r0, sl
   1a100:	bl	1be4c <argp_error@@Base+0x1414>
   1a104:	cmp	r0, #0
   1a108:	bne	1a08c <argp_failure@@Base+0xb3c>
   1a10c:	b	1a09c <argp_failure@@Base+0xb4c>
   1a110:	ldr	r3, [r4, #8]
   1a114:	cmp	r3, #0
   1a118:	movne	r3, #1
   1a11c:	strne	r3, [fp, #-80]	; 0xffffffb0
   1a120:	b	1a03c <argp_failure@@Base+0xaec>
   1a124:	ldr	r9, [fp, #-136]	; 0xffffff78
   1a128:	ldr	r3, [r4, #12]
   1a12c:	tst	r3, #8
   1a130:	beq	1a208 <argp_failure@@Base+0xcb8>
   1a134:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a138:	ldr	r5, [r3, #16]
   1a13c:	ldr	r3, [sl, #28]
   1a140:	ldr	r2, [sl, #24]
   1a144:	sub	r3, r3, r2
   1a148:	ldr	r2, [sl, #16]
   1a14c:	cmp	r3, r2
   1a150:	bhi	1a16c <argp_failure@@Base+0xc1c>
   1a154:	str	r5, [sl, #12]
   1a158:	ldr	r6, [r9, #4]
   1a15c:	cmp	r6, #0
   1a160:	beq	1a2d0 <argp_failure@@Base+0xd80>
   1a164:	add	r5, r4, #24
   1a168:	b	1a1a0 <argp_failure@@Base+0xc50>
   1a16c:	mov	r0, sl
   1a170:	bl	1b8d4 <argp_error@@Base+0xe9c>
   1a174:	b	1a154 <argp_failure@@Base+0xc04>
   1a178:	mov	r2, r8
   1a17c:	mov	r1, r7
   1a180:	ldr	r0, [sl, #28]
   1a184:	bl	11808 <memcpy@plt>
   1a188:	ldr	r3, [sl, #28]
   1a18c:	add	r8, r3, r8
   1a190:	str	r8, [sl, #28]
   1a194:	add	r5, r5, #24
   1a198:	subs	r6, r6, #1
   1a19c:	beq	1a2d0 <argp_failure@@Base+0xd80>
   1a1a0:	ldr	r3, [r5, #-24]	; 0xffffffe8
   1a1a4:	cmp	r3, #0
   1a1a8:	beq	1a194 <argp_failure@@Base+0xc44>
   1a1ac:	ldr	r3, [r5, #-12]
   1a1b0:	tst	r3, #2
   1a1b4:	bne	1a194 <argp_failure@@Base+0xc44>
   1a1b8:	sub	r1, fp, #76	; 0x4c
   1a1bc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a1c0:	ldr	r0, [r3, #16]
   1a1c4:	bl	183d8 <argp_parse@@Base+0x20a8>
   1a1c8:	ldr	r7, [r5, #-24]	; 0xffffffe8
   1a1cc:	mov	r0, r7
   1a1d0:	bl	119dc <strlen@plt>
   1a1d4:	subs	r8, r0, #0
   1a1d8:	beq	1a194 <argp_failure@@Base+0xc44>
   1a1dc:	ldr	r3, [sl, #28]
   1a1e0:	add	r3, r3, r8
   1a1e4:	ldr	r2, [sl, #32]
   1a1e8:	cmp	r2, r3
   1a1ec:	bcs	1a178 <argp_failure@@Base+0xc28>
   1a1f0:	mov	r1, r8
   1a1f4:	mov	r0, sl
   1a1f8:	bl	1be4c <argp_error@@Base+0x1414>
   1a1fc:	cmp	r0, #0
   1a200:	beq	1a194 <argp_failure@@Base+0xc44>
   1a204:	b	1a178 <argp_failure@@Base+0xc28>
   1a208:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a20c:	ldr	r5, [r3, #12]
   1a210:	ldr	r3, [sl, #28]
   1a214:	ldr	r2, [sl, #24]
   1a218:	sub	r3, r3, r2
   1a21c:	ldr	r2, [sl, #16]
   1a220:	cmp	r3, r2
   1a224:	bhi	1a254 <argp_failure@@Base+0xd04>
   1a228:	str	r5, [sl, #12]
   1a22c:	ldr	r6, [r9, #4]
   1a230:	cmp	r6, #0
   1a234:	beq	1a2d0 <argp_failure@@Base+0xd80>
   1a238:	add	r5, r4, #24
   1a23c:	movw	r8, #54520	; 0xd4f8
   1a240:	movt	r8, #1
   1a244:	movw	r7, #54536	; 0xd508
   1a248:	movt	r7, #1
   1a24c:	str	r7, [fp, #-112]	; 0xffffff90
   1a250:	b	1a26c <argp_failure@@Base+0xd1c>
   1a254:	mov	r0, sl
   1a258:	bl	1b8d4 <argp_error@@Base+0xe9c>
   1a25c:	b	1a228 <argp_failure@@Base+0xcd8>
   1a260:	add	r5, r5, #24
   1a264:	subs	r6, r6, #1
   1a268:	beq	1a2d0 <argp_failure@@Base+0xd80>
   1a26c:	ldr	r3, [r5, #-24]	; 0xffffffe8
   1a270:	cmp	r3, #0
   1a274:	beq	1a260 <argp_failure@@Base+0xd10>
   1a278:	ldr	r3, [r5, #-12]
   1a27c:	tst	r3, #2
   1a280:	bne	1a260 <argp_failure@@Base+0xd10>
   1a284:	sub	r1, fp, #76	; 0x4c
   1a288:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a28c:	ldr	r0, [r3, #12]
   1a290:	bl	183d8 <argp_parse@@Base+0x20a8>
   1a294:	ldr	r2, [r5, #-24]	; 0xffffffe8
   1a298:	mov	r1, r8
   1a29c:	mov	r0, sl
   1a2a0:	bl	1bf4c <argp_error@@Base+0x1514>
   1a2a4:	ldr	r2, [r4, #8]
   1a2a8:	cmp	r2, #0
   1a2ac:	beq	1a260 <argp_failure@@Base+0xd10>
   1a2b0:	ldr	r3, [r4, #12]
   1a2b4:	tst	r3, #1
   1a2b8:	movwne	r1, #54528	; 0xd500
   1a2bc:	movtne	r1, #1
   1a2c0:	ldreq	r1, [fp, #-112]	; 0xffffff90
   1a2c4:	mov	r0, sl
   1a2c8:	bl	1bf4c <argp_error@@Base+0x1514>
   1a2cc:	b	1a260 <argp_failure@@Base+0xd10>
   1a2d0:	ldr	r3, [sl, #28]
   1a2d4:	ldr	r2, [sl, #24]
   1a2d8:	sub	r3, r3, r2
   1a2dc:	ldr	r2, [sl, #16]
   1a2e0:	cmp	r3, r2
   1a2e4:	bhi	1a350 <argp_failure@@Base+0xe00>
   1a2e8:	mov	r3, #0
   1a2ec:	str	r3, [sl, #4]
   1a2f0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a2f4:	cmp	r3, #0
   1a2f8:	beq	1a35c <argp_failure@@Base+0xe0c>
   1a2fc:	ldr	r3, [r4, #12]
   1a300:	tst	r3, #8
   1a304:	bne	1a330 <argp_failure@@Base+0xde0>
   1a308:	ldr	r5, [r4, #4]
   1a30c:	sub	r3, r5, #1
   1a310:	cmp	r3, #254	; 0xfe
   1a314:	bhi	1a330 <argp_failure@@Base+0xde0>
   1a318:	bl	119ac <__ctype_b_loc@plt>
   1a31c:	ldr	r3, [r0]
   1a320:	lsl	r5, r5, #1
   1a324:	ldrh	r3, [r3, r5]
   1a328:	tst	r3, #16384	; 0x4000
   1a32c:	bne	1a538 <argp_failure@@Base+0xfe8>
   1a330:	ldr	r3, [r4]
   1a334:	cmp	r3, #0
   1a338:	bne	1a538 <argp_failure@@Base+0xfe8>
   1a33c:	sub	r2, fp, #76	; 0x4c
   1a340:	ldr	r1, [r9, #20]
   1a344:	ldr	r0, [r4, #16]
   1a348:	bl	181d0 <argp_parse@@Base+0x1ea0>
   1a34c:	b	1a534 <argp_failure@@Base+0xfe4>
   1a350:	mov	r0, sl
   1a354:	bl	1b8d4 <argp_error@@Base+0xe9c>
   1a358:	b	1a2e8 <argp_failure@@Base+0xd98>
   1a35c:	ldr	r5, [r4, #16]
   1a360:	ldr	r3, [fp, #-104]	; 0xffffff98
   1a364:	ldr	r2, [r9, #20]
   1a368:	ldr	r1, [r4, #4]
   1a36c:	mov	r0, r5
   1a370:	bl	179f8 <argp_parse@@Base+0x16c8>
   1a374:	subs	r4, r0, #0
   1a378:	beq	1a4f0 <argp_failure@@Base+0xfa0>
   1a37c:	ldrb	r3, [r4]
   1a380:	cmp	r3, #0
   1a384:	beq	1a4e8 <argp_failure@@Base+0xf98>
   1a388:	ldr	r3, [sl, #28]
   1a38c:	ldr	r2, [sl, #24]
   1a390:	sub	r3, r3, r2
   1a394:	ldr	r2, [sl, #16]
   1a398:	cmp	r3, r2
   1a39c:	bhi	1a448 <argp_failure@@Base+0xef8>
   1a3a0:	ldr	r6, [sl, #20]
   1a3a4:	bic	r6, r6, r6, asr #31
   1a3a8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a3ac:	ldr	r7, [r3, #20]
   1a3b0:	str	r7, [sl, #4]
   1a3b4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a3b8:	ldr	r7, [r3, #20]
   1a3bc:	ldr	r3, [sl, #28]
   1a3c0:	ldr	r2, [sl, #24]
   1a3c4:	sub	r3, r3, r2
   1a3c8:	ldr	r2, [sl, #16]
   1a3cc:	cmp	r3, r2
   1a3d0:	bhi	1a484 <argp_failure@@Base+0xf34>
   1a3d4:	str	r7, [sl, #12]
   1a3d8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a3dc:	ldr	r1, [r3, #20]
   1a3e0:	add	r3, r1, #3
   1a3e4:	cmp	r6, r3
   1a3e8:	bhi	1a490 <argp_failure@@Base+0xf40>
   1a3ec:	cmp	r6, r1
   1a3f0:	bcc	1a4d0 <argp_failure@@Base+0xf80>
   1a3f4:	ldr	r3, [sl, #28]
   1a3f8:	add	r3, r3, #3
   1a3fc:	ldr	r2, [sl, #32]
   1a400:	cmp	r2, r3
   1a404:	bcs	1a41c <argp_failure@@Base+0xecc>
   1a408:	mov	r1, #3
   1a40c:	mov	r0, sl
   1a410:	bl	1be4c <argp_error@@Base+0x1414>
   1a414:	cmp	r0, #0
   1a418:	beq	1a4d8 <argp_failure@@Base+0xf88>
   1a41c:	ldr	r2, [sl, #28]
   1a420:	movw	r3, #54540	; 0xd50c
   1a424:	movt	r3, #1
   1a428:	ldrh	r1, [r3]
   1a42c:	strh	r1, [r2]
   1a430:	ldrb	r3, [r3, #2]
   1a434:	strb	r3, [r2, #2]
   1a438:	ldr	r3, [sl, #28]
   1a43c:	add	r3, r3, #3
   1a440:	str	r3, [sl, #28]
   1a444:	b	1a4d8 <argp_failure@@Base+0xf88>
   1a448:	mov	r0, sl
   1a44c:	bl	1b8d4 <argp_error@@Base+0xe9c>
   1a450:	ldr	r6, [sl, #20]
   1a454:	bic	r6, r6, r6, asr #31
   1a458:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a45c:	ldr	r7, [r3, #20]
   1a460:	ldr	r3, [sl, #28]
   1a464:	ldr	r2, [sl, #24]
   1a468:	sub	r3, r3, r2
   1a46c:	ldr	r2, [sl, #16]
   1a470:	cmp	r3, r2
   1a474:	bls	1a3b0 <argp_failure@@Base+0xe60>
   1a478:	mov	r0, sl
   1a47c:	bl	1b8d4 <argp_error@@Base+0xe9c>
   1a480:	b	1a3b0 <argp_failure@@Base+0xe60>
   1a484:	mov	r0, sl
   1a488:	bl	1b8d4 <argp_error@@Base+0xe9c>
   1a48c:	b	1a3d4 <argp_failure@@Base+0xe84>
   1a490:	ldr	r2, [sl, #28]
   1a494:	ldr	r3, [sl, #32]
   1a498:	cmp	r2, r3
   1a49c:	bcs	1a4b8 <argp_failure@@Base+0xf68>
   1a4a0:	ldr	r3, [sl, #28]
   1a4a4:	add	r2, r3, #1
   1a4a8:	str	r2, [sl, #28]
   1a4ac:	mov	r2, #10
   1a4b0:	strb	r2, [r3]
   1a4b4:	b	1a4d8 <argp_failure@@Base+0xf88>
   1a4b8:	mov	r1, #1
   1a4bc:	mov	r0, sl
   1a4c0:	bl	1be4c <argp_error@@Base+0x1414>
   1a4c4:	cmp	r0, #0
   1a4c8:	bne	1a4a0 <argp_failure@@Base+0xf50>
   1a4cc:	b	1a4d8 <argp_failure@@Base+0xf88>
   1a4d0:	mov	r0, sl
   1a4d4:	bl	17d48 <argp_parse@@Base+0x1a18>
   1a4d8:	mov	r0, r4
   1a4dc:	bl	119dc <strlen@plt>
   1a4e0:	subs	r6, r0, #0
   1a4e4:	bne	1a610 <argp_failure@@Base+0x10c0>
   1a4e8:	cmp	r5, r4
   1a4ec:	bne	1a658 <argp_failure@@Base+0x1108>
   1a4f0:	ldr	r3, [sl, #28]
   1a4f4:	ldr	r2, [sl, #24]
   1a4f8:	sub	r3, r3, r2
   1a4fc:	ldr	r2, [sl, #16]
   1a500:	cmp	r3, r2
   1a504:	bhi	1a664 <argp_failure@@Base+0x1114>
   1a508:	mov	r3, #0
   1a50c:	str	r3, [sl, #4]
   1a510:	ldr	r2, [sl, #28]
   1a514:	ldr	r3, [sl, #32]
   1a518:	cmp	r2, r3
   1a51c:	bcs	1a670 <argp_failure@@Base+0x1120>
   1a520:	ldr	r3, [sl, #28]
   1a524:	add	r2, r3, #1
   1a528:	str	r2, [sl, #28]
   1a52c:	mov	r2, #10
   1a530:	strb	r2, [r3]
   1a534:	str	r9, [fp, #-88]	; 0xffffffa8
   1a538:	ldr	r3, [sl, #28]
   1a53c:	ldr	r2, [sl, #24]
   1a540:	sub	r3, r3, r2
   1a544:	ldr	r2, [sl, #16]
   1a548:	cmp	r3, r2
   1a54c:	bhi	1a688 <argp_failure@@Base+0x1138>
   1a550:	ldr	r3, [fp, #-120]	; 0xffffff88
   1a554:	str	r3, [sl, #4]
   1a558:	ldr	r3, [sl, #28]
   1a55c:	ldr	r2, [sl, #24]
   1a560:	sub	r3, r3, r2
   1a564:	ldr	r2, [sl, #16]
   1a568:	cmp	r3, r2
   1a56c:	bhi	1a694 <argp_failure@@Base+0x1144>
   1a570:	ldr	r3, [fp, #-124]	; 0xffffff84
   1a574:	str	r3, [sl, #12]
   1a578:	add	r9, r9, #28
   1a57c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1a580:	subs	r3, r3, #1
   1a584:	str	r3, [fp, #-116]	; 0xffffff8c
   1a588:	beq	1a6a0 <argp_failure@@Base+0x1150>
   1a58c:	ldr	r4, [r9]
   1a590:	ldr	r8, [r9, #8]
   1a594:	ldr	r3, [sl, #28]
   1a598:	ldr	r2, [sl, #24]
   1a59c:	sub	r3, r3, r2
   1a5a0:	ldr	r2, [sl, #16]
   1a5a4:	cmp	r3, r2
   1a5a8:	bhi	19fb4 <argp_failure@@Base+0xa64>
   1a5ac:	ldr	r3, [sl, #4]
   1a5b0:	str	r3, [fp, #-120]	; 0xffffff88
   1a5b4:	mov	r3, #0
   1a5b8:	str	r3, [sl, #4]
   1a5bc:	ldr	r3, [sl, #12]
   1a5c0:	str	r3, [fp, #-124]	; 0xffffff84
   1a5c4:	str	r9, [fp, #-76]	; 0xffffffb4
   1a5c8:	str	sl, [fp, #-72]	; 0xffffffb8
   1a5cc:	sub	r3, fp, #88	; 0x58
   1a5d0:	str	r3, [fp, #-68]	; 0xffffffbc
   1a5d4:	mov	r3, #1
   1a5d8:	str	r3, [fp, #-64]	; 0xffffffc0
   1a5dc:	ldr	r3, [fp, #-104]	; 0xffffff98
   1a5e0:	str	r3, [fp, #-60]	; 0xffffffc4
   1a5e4:	ldr	r3, [r4, #12]
   1a5e8:	ands	r3, r3, #8
   1a5ec:	str	r3, [fp, #-112]	; 0xffffff90
   1a5f0:	movne	r3, #0
   1a5f4:	strne	r3, [fp, #-112]	; 0xffffff90
   1a5f8:	bne	19fec <argp_failure@@Base+0xa9c>
   1a5fc:	ldr	r2, [r9, #4]
   1a600:	cmp	r2, #0
   1a604:	beq	19fec <argp_failure@@Base+0xa9c>
   1a608:	add	r3, r4, #24
   1a60c:	b	19fcc <argp_failure@@Base+0xa7c>
   1a610:	ldr	r3, [sl, #28]
   1a614:	add	r3, r3, r6
   1a618:	ldr	r2, [sl, #32]
   1a61c:	cmp	r2, r3
   1a620:	bcs	1a638 <argp_failure@@Base+0x10e8>
   1a624:	mov	r1, r6
   1a628:	mov	r0, sl
   1a62c:	bl	1be4c <argp_error@@Base+0x1414>
   1a630:	cmp	r0, #0
   1a634:	beq	1a4e8 <argp_failure@@Base+0xf98>
   1a638:	mov	r2, r6
   1a63c:	mov	r1, r4
   1a640:	ldr	r0, [sl, #28]
   1a644:	bl	11808 <memcpy@plt>
   1a648:	ldr	r3, [sl, #28]
   1a64c:	add	r6, r3, r6
   1a650:	str	r6, [sl, #28]
   1a654:	b	1a4e8 <argp_failure@@Base+0xf98>
   1a658:	mov	r0, r4
   1a65c:	bl	17008 <argp_parse@@Base+0xcd8>
   1a660:	b	1a4f0 <argp_failure@@Base+0xfa0>
   1a664:	mov	r0, sl
   1a668:	bl	1b8d4 <argp_error@@Base+0xe9c>
   1a66c:	b	1a508 <argp_failure@@Base+0xfb8>
   1a670:	mov	r1, #1
   1a674:	mov	r0, sl
   1a678:	bl	1be4c <argp_error@@Base+0x1414>
   1a67c:	cmp	r0, #0
   1a680:	bne	1a520 <argp_failure@@Base+0xfd0>
   1a684:	b	1a534 <argp_failure@@Base+0xfe4>
   1a688:	mov	r0, sl
   1a68c:	bl	1b8d4 <argp_error@@Base+0xe9c>
   1a690:	b	1a550 <argp_failure@@Base+0x1000>
   1a694:	mov	r0, sl
   1a698:	bl	1b8d4 <argp_error@@Base+0xe9c>
   1a69c:	b	1a570 <argp_failure@@Base+0x1020>
   1a6a0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a6a4:	cmp	r3, #0
   1a6a8:	beq	1a70c <argp_failure@@Base+0x11bc>
   1a6ac:	movw	r3, #58224	; 0xe370
   1a6b0:	movt	r3, #2
   1a6b4:	ldr	r3, [r3, #4]
   1a6b8:	cmp	r3, #0
   1a6bc:	beq	1a70c <argp_failure@@Base+0x11bc>
   1a6c0:	ldr	r3, [fp, #-104]	; 0xffffff98
   1a6c4:	cmp	r3, #0
   1a6c8:	ldrne	r2, [r3]
   1a6cc:	ldreq	r2, [fp, #-104]	; 0xffffff98
   1a6d0:	ldr	r3, [fp, #-104]	; 0xffffff98
   1a6d4:	mov	r1, #5
   1a6d8:	movt	r1, #512	; 0x200
   1a6dc:	movw	r0, #54544	; 0xd510
   1a6e0:	movt	r0, #1
   1a6e4:	bl	179f8 <argp_parse@@Base+0x16c8>
   1a6e8:	subs	r4, r0, #0
   1a6ec:	beq	1a70c <argp_failure@@Base+0x11bc>
   1a6f0:	ldrb	r3, [r4]
   1a6f4:	cmp	r3, #0
   1a6f8:	bne	1a7a0 <argp_failure@@Base+0x1250>
   1a6fc:	movw	r3, #54544	; 0xd510
   1a700:	movt	r3, #1
   1a704:	cmp	r4, r3
   1a708:	bne	1a874 <argp_failure@@Base+0x1324>
   1a70c:	mov	r4, #1
   1a710:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a714:	tst	r3, #32
   1a718:	bne	1a880 <argp_failure@@Base+0x1330>
   1a71c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a720:	tst	r3, #64	; 0x40
   1a724:	beq	1a760 <argp_failure@@Base+0x1210>
   1a728:	movw	r3, #58900	; 0xe614
   1a72c:	movt	r3, #2
   1a730:	ldr	r3, [r3]
   1a734:	cmp	r3, #0
   1a738:	beq	1a760 <argp_failure@@Base+0x1210>
   1a73c:	cmp	r4, #0
   1a740:	bne	1a8a8 <argp_failure@@Base+0x1358>
   1a744:	movw	r3, #58900	; 0xe614
   1a748:	movt	r3, #2
   1a74c:	ldr	r2, [r3]
   1a750:	movw	r1, #54660	; 0xd584
   1a754:	movt	r1, #1
   1a758:	mov	r0, sl
   1a75c:	bl	1bf4c <argp_error@@Base+0x1514>
   1a760:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1a764:	bl	118d4 <funlockfile@plt>
   1a768:	ldr	r3, [fp, #-128]	; 0xffffff80
   1a76c:	cmp	r3, #0
   1a770:	beq	1a77c <argp_failure@@Base+0x122c>
   1a774:	mov	r0, r3
   1a778:	bl	17870 <argp_parse@@Base+0x1540>
   1a77c:	mov	r0, sl
   1a780:	bl	1be00 <argp_error@@Base+0x13c8>
   1a784:	sub	sp, fp, #32
   1a788:	ldrd	r4, [sp]
   1a78c:	ldrd	r6, [sp, #8]
   1a790:	ldrd	r8, [sp, #16]
   1a794:	ldrd	sl, [sp, #24]
   1a798:	add	sp, sp, #32
   1a79c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a7a0:	ldr	r2, [sl, #28]
   1a7a4:	ldr	r3, [sl, #32]
   1a7a8:	cmp	r2, r3
   1a7ac:	bcs	1a7fc <argp_failure@@Base+0x12ac>
   1a7b0:	ldr	r3, [sl, #28]
   1a7b4:	add	r2, r3, #1
   1a7b8:	str	r2, [sl, #28]
   1a7bc:	mov	r2, #10
   1a7c0:	strb	r2, [r3]
   1a7c4:	mov	r0, r4
   1a7c8:	bl	119dc <strlen@plt>
   1a7cc:	subs	r5, r0, #0
   1a7d0:	bne	1a814 <argp_failure@@Base+0x12c4>
   1a7d4:	ldr	r2, [sl, #28]
   1a7d8:	ldr	r3, [sl, #32]
   1a7dc:	cmp	r2, r3
   1a7e0:	bcs	1a85c <argp_failure@@Base+0x130c>
   1a7e4:	ldr	r3, [sl, #28]
   1a7e8:	add	r2, r3, #1
   1a7ec:	str	r2, [sl, #28]
   1a7f0:	mov	r2, #10
   1a7f4:	strb	r2, [r3]
   1a7f8:	b	1a6fc <argp_failure@@Base+0x11ac>
   1a7fc:	mov	r1, #1
   1a800:	mov	r0, sl
   1a804:	bl	1be4c <argp_error@@Base+0x1414>
   1a808:	cmp	r0, #0
   1a80c:	bne	1a7b0 <argp_failure@@Base+0x1260>
   1a810:	b	1a7c4 <argp_failure@@Base+0x1274>
   1a814:	ldr	r3, [sl, #28]
   1a818:	add	r3, r3, r5
   1a81c:	ldr	r2, [sl, #32]
   1a820:	cmp	r2, r3
   1a824:	bcs	1a83c <argp_failure@@Base+0x12ec>
   1a828:	mov	r1, r5
   1a82c:	mov	r0, sl
   1a830:	bl	1be4c <argp_error@@Base+0x1414>
   1a834:	cmp	r0, #0
   1a838:	beq	1a7d4 <argp_failure@@Base+0x1284>
   1a83c:	mov	r2, r5
   1a840:	mov	r1, r4
   1a844:	ldr	r0, [sl, #28]
   1a848:	bl	11808 <memcpy@plt>
   1a84c:	ldr	r3, [sl, #28]
   1a850:	add	r5, r3, r5
   1a854:	str	r5, [sl, #28]
   1a858:	b	1a7d4 <argp_failure@@Base+0x1284>
   1a85c:	mov	r1, #1
   1a860:	mov	r0, sl
   1a864:	bl	1be4c <argp_error@@Base+0x1414>
   1a868:	cmp	r0, #0
   1a86c:	bne	1a7e4 <argp_failure@@Base+0x1294>
   1a870:	b	1a6fc <argp_failure@@Base+0x11ac>
   1a874:	mov	r0, r4
   1a878:	bl	17008 <argp_parse@@Base+0xcd8>
   1a87c:	b	1a70c <argp_failure@@Base+0x11bc>
   1a880:	str	sl, [sp, #4]
   1a884:	mov	r3, #0
   1a888:	str	r3, [sp]
   1a88c:	mov	r3, r4
   1a890:	mov	r2, #1
   1a894:	ldr	r1, [fp, #-104]	; 0xffffff98
   1a898:	ldr	r0, [fp, #-108]	; 0xffffff94
   1a89c:	bl	1857c <argp_parse@@Base+0x224c>
   1a8a0:	orr	r4, r4, r0
   1a8a4:	b	1a71c <argp_failure@@Base+0x11cc>
   1a8a8:	ldr	r2, [sl, #28]
   1a8ac:	ldr	r3, [sl, #32]
   1a8b0:	cmp	r2, r3
   1a8b4:	bcs	1a8d0 <argp_failure@@Base+0x1380>
   1a8b8:	ldr	r3, [sl, #28]
   1a8bc:	add	r2, r3, #1
   1a8c0:	str	r2, [sl, #28]
   1a8c4:	mov	r2, #10
   1a8c8:	strb	r2, [r3]
   1a8cc:	b	1a744 <argp_failure@@Base+0x11f4>
   1a8d0:	mov	r1, #1
   1a8d4:	mov	r0, sl
   1a8d8:	bl	1be4c <argp_error@@Base+0x1414>
   1a8dc:	cmp	r0, #0
   1a8e0:	bne	1a8b8 <argp_failure@@Base+0x1368>
   1a8e4:	b	1a744 <argp_failure@@Base+0x11f4>
   1a8e8:	ldrb	r3, [r6]
   1a8ec:	mov	r4, r6
   1a8f0:	mov	r7, #0
   1a8f4:	b	19958 <argp_failure@@Base+0x408>
   1a8f8:	ldrb	r3, [r8]
   1a8fc:	cmp	r3, r7
   1a900:	beq	1a034 <argp_failure@@Base+0xae4>
   1a904:	add	r5, r5, #24
   1a908:	subs	r6, r6, #1
   1a90c:	beq	1a124 <argp_failure@@Base+0xbd4>
   1a910:	ldr	r9, [r5, #12]
   1a914:	tst	r9, #8
   1a918:	bne	1a904 <argp_failure@@Base+0x13b4>
   1a91c:	ldr	r7, [r5, #4]
   1a920:	sub	r3, r7, #1
   1a924:	cmp	r3, #254	; 0xfe
   1a928:	bhi	1a904 <argp_failure@@Base+0x13b4>
   1a92c:	bl	119ac <__ctype_b_loc@plt>
   1a930:	ldr	r2, [r0]
   1a934:	lsl	r3, r7, #1
   1a938:	ldrh	r3, [r2, r3]
   1a93c:	tst	r3, #16384	; 0x4000
   1a940:	bne	1a8f8 <argp_failure@@Base+0x13a8>
   1a944:	b	1a904 <argp_failure@@Base+0x13b4>
   1a948:	andeq	sp, r1, r4, lsl r2

0001a94c <argp_help@@Base>:
   1a94c:	push	{lr}		; (str lr, [sp, #-4]!)
   1a950:	sub	sp, sp, #12
   1a954:	str	r3, [sp]
   1a958:	mov	r3, r2
   1a95c:	mov	r2, r1
   1a960:	mov	r1, #0
   1a964:	bl	1976c <argp_failure@@Base+0x21c>
   1a968:	add	sp, sp, #12
   1a96c:	pop	{pc}		; (ldr pc, [sp], #4)

0001a970 <argp_state_help@@Base>:
   1a970:	strd	r4, [sp, #-12]!
   1a974:	str	lr, [sp, #8]
   1a978:	sub	sp, sp, #12
   1a97c:	mov	r5, r2
   1a980:	subs	r4, r0, #0
   1a984:	beq	1a9a4 <argp_state_help@@Base+0x34>
   1a988:	ldr	r3, [r4, #16]
   1a98c:	tst	r3, #2
   1a990:	beq	1a9e4 <argp_state_help@@Base+0x74>
   1a994:	add	sp, sp, #12
   1a998:	ldrd	r4, [sp]
   1a99c:	add	sp, sp, #8
   1a9a0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a9a4:	cmp	r1, #0
   1a9a8:	beq	1a994 <argp_state_help@@Base+0x24>
   1a9ac:	movw	r3, #58280	; 0xe3a8
   1a9b0:	movt	r3, #2
   1a9b4:	ldr	r3, [r3]
   1a9b8:	str	r3, [sp]
   1a9bc:	mov	r3, r2
   1a9c0:	mov	r2, r1
   1a9c4:	mov	r1, #0
   1a9c8:	mov	r0, r1
   1a9cc:	bl	1976c <argp_failure@@Base+0x21c>
   1a9d0:	b	1aa20 <argp_state_help@@Base+0xb0>
   1a9d4:	movw	r3, #58276	; 0xe3a4
   1a9d8:	movt	r3, #2
   1a9dc:	ldr	r0, [r3]
   1a9e0:	bl	119c4 <exit@plt>
   1a9e4:	cmp	r1, #0
   1a9e8:	beq	1a994 <argp_state_help@@Base+0x24>
   1a9ec:	ldr	r3, [r4, #16]
   1a9f0:	tst	r3, #64	; 0x40
   1a9f4:	orrne	r5, r5, #128	; 0x80
   1a9f8:	ldr	r3, [r4, #40]	; 0x28
   1a9fc:	str	r3, [sp]
   1aa00:	mov	r3, r5
   1aa04:	mov	r2, r1
   1aa08:	mov	r1, r4
   1aa0c:	ldr	r0, [r4]
   1aa10:	bl	1976c <argp_failure@@Base+0x21c>
   1aa14:	ldr	r3, [r4, #16]
   1aa18:	tst	r3, #32
   1aa1c:	bne	1a994 <argp_state_help@@Base+0x24>
   1aa20:	tst	r5, #256	; 0x100
   1aa24:	bne	1a9d4 <argp_state_help@@Base+0x64>
   1aa28:	tst	r5, #512	; 0x200
   1aa2c:	beq	1a994 <argp_state_help@@Base+0x24>
   1aa30:	mov	r0, #0
   1aa34:	bl	119c4 <exit@plt>

0001aa38 <argp_error@@Base>:
   1aa38:	push	{r1, r2, r3}
   1aa3c:	strd	r4, [sp, #-12]!
   1aa40:	str	lr, [sp, #8]
   1aa44:	sub	sp, sp, #8
   1aa48:	subs	r5, r0, #0
   1aa4c:	beq	1ab24 <argp_error@@Base+0xec>
   1aa50:	ldr	r3, [r5, #16]
   1aa54:	tst	r3, #2
   1aa58:	bne	1ab0c <argp_error@@Base+0xd4>
   1aa5c:	ldr	r4, [r5, #44]	; 0x2c
   1aa60:	cmp	r4, #0
   1aa64:	beq	1ab0c <argp_error@@Base+0xd4>
   1aa68:	mov	r0, r4
   1aa6c:	bl	11b5c <flockfile@plt>
   1aa70:	add	r3, sp, #24
   1aa74:	str	r3, [sp, #4]
   1aa78:	ldr	r0, [r5, #40]	; 0x28
   1aa7c:	mov	r1, r4
   1aa80:	bl	11730 <fputs_unlocked@plt>
   1aa84:	ldr	r3, [r4, #20]
   1aa88:	ldr	r2, [r4, #24]
   1aa8c:	cmp	r3, r2
   1aa90:	addcc	r2, r3, #1
   1aa94:	strcc	r2, [r4, #20]
   1aa98:	movcc	r2, #58	; 0x3a
   1aa9c:	strbcc	r2, [r3]
   1aaa0:	bcs	1ab58 <argp_error@@Base+0x120>
   1aaa4:	ldr	r3, [r4, #20]
   1aaa8:	ldr	r2, [r4, #24]
   1aaac:	cmp	r3, r2
   1aab0:	addcc	r2, r3, #1
   1aab4:	strcc	r2, [r4, #20]
   1aab8:	movcc	r2, #32
   1aabc:	strbcc	r2, [r3]
   1aac0:	bcs	1ab68 <argp_error@@Base+0x130>
   1aac4:	ldr	r2, [sp, #4]
   1aac8:	ldr	r1, [sp, #20]
   1aacc:	mov	r0, r4
   1aad0:	bl	11afc <vfprintf@plt>
   1aad4:	ldr	r3, [r4, #20]
   1aad8:	ldr	r2, [r4, #24]
   1aadc:	cmp	r3, r2
   1aae0:	addcc	r2, r3, #1
   1aae4:	strcc	r2, [r4, #20]
   1aae8:	movcc	r2, #10
   1aaec:	strbcc	r2, [r3]
   1aaf0:	bcs	1ab78 <argp_error@@Base+0x140>
   1aaf4:	mov	r2, #260	; 0x104
   1aaf8:	mov	r1, r4
   1aafc:	mov	r0, r5
   1ab00:	bl	1a970 <argp_state_help@@Base>
   1ab04:	mov	r0, r4
   1ab08:	bl	118d4 <funlockfile@plt>
   1ab0c:	add	sp, sp, #8
   1ab10:	ldrd	r4, [sp]
   1ab14:	ldr	lr, [sp, #8]
   1ab18:	add	sp, sp, #12
   1ab1c:	add	sp, sp, #12
   1ab20:	bx	lr
   1ab24:	movw	r3, #58288	; 0xe3b0
   1ab28:	movt	r3, #2
   1ab2c:	ldr	r4, [r3]
   1ab30:	cmp	r4, #0
   1ab34:	beq	1ab0c <argp_error@@Base+0xd4>
   1ab38:	mov	r0, r4
   1ab3c:	bl	11b5c <flockfile@plt>
   1ab40:	add	r3, sp, #24
   1ab44:	str	r3, [sp, #4]
   1ab48:	movw	r3, #58280	; 0xe3a8
   1ab4c:	movt	r3, #2
   1ab50:	ldr	r0, [r3]
   1ab54:	b	1aa7c <argp_error@@Base+0x44>
   1ab58:	mov	r1, #58	; 0x3a
   1ab5c:	mov	r0, r4
   1ab60:	bl	11ab4 <__overflow@plt>
   1ab64:	b	1aaa4 <argp_error@@Base+0x6c>
   1ab68:	mov	r1, #32
   1ab6c:	mov	r0, r4
   1ab70:	bl	11ab4 <__overflow@plt>
   1ab74:	b	1aac4 <argp_error@@Base+0x8c>
   1ab78:	mov	r1, #10
   1ab7c:	mov	r0, r4
   1ab80:	bl	11ab4 <__overflow@plt>
   1ab84:	b	1aaf4 <argp_error@@Base+0xbc>
   1ab88:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1ab8c:	strd	r6, [sp, #8]
   1ab90:	strd	r8, [sp, #16]
   1ab94:	str	lr, [sp, #24]
   1ab98:	ldr	r5, [r1, #28]
   1ab9c:	ldr	r6, [r1, #32]
   1aba0:	ldr	r8, [r1]
   1aba4:	add	r7, r0, r6, lsl #2
   1aba8:	b	1abd8 <argp_error@@Base+0x1a0>
   1abac:	add	r3, r0, r5, lsl #2
   1abb0:	add	r4, r9, r5
   1abb4:	add	r4, r0, r4, lsl #2
   1abb8:	mov	r2, r7
   1abbc:	ldr	ip, [r3]
   1abc0:	ldr	lr, [r2]
   1abc4:	str	lr, [r3], #4
   1abc8:	str	ip, [r2], #4
   1abcc:	cmp	r3, r4
   1abd0:	bne	1abbc <argp_error@@Base+0x184>
   1abd4:	add	r5, r5, r9
   1abd8:	cmp	r8, r6
   1abdc:	movle	r3, #0
   1abe0:	movgt	r3, #1
   1abe4:	cmp	r5, r6
   1abe8:	movge	r3, #0
   1abec:	cmp	r3, #0
   1abf0:	beq	1ac34 <argp_error@@Base+0x1fc>
   1abf4:	sub	r9, r8, r6
   1abf8:	sub	r3, r6, r5
   1abfc:	cmp	r9, r3
   1ac00:	ble	1abac <argp_error@@Base+0x174>
   1ac04:	add	r2, r0, r5, lsl #2
   1ac08:	sub	r9, r8, r3
   1ac0c:	add	r3, r0, r9, lsl #2
   1ac10:	add	r4, r0, r8, lsl #2
   1ac14:	ldr	ip, [r2]
   1ac18:	ldr	lr, [r3]
   1ac1c:	str	lr, [r2], #4
   1ac20:	str	ip, [r3], #4
   1ac24:	cmp	r3, r4
   1ac28:	bne	1ac14 <argp_error@@Base+0x1dc>
   1ac2c:	mov	r8, r9
   1ac30:	b	1abd8 <argp_error@@Base+0x1a0>
   1ac34:	ldr	r0, [r1]
   1ac38:	ldr	r3, [r1, #32]
   1ac3c:	sub	r2, r0, r3
   1ac40:	ldr	r3, [r1, #28]
   1ac44:	add	r3, r3, r2
   1ac48:	str	r3, [r1, #28]
   1ac4c:	str	r0, [r1, #32]
   1ac50:	ldrd	r4, [sp]
   1ac54:	ldrd	r6, [sp, #8]
   1ac58:	ldrd	r8, [sp, #16]
   1ac5c:	add	sp, sp, #24
   1ac60:	pop	{pc}		; (ldr pc, [sp], #4)
   1ac64:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1ac68:	strd	r6, [sp, #8]
   1ac6c:	strd	r8, [sp, #16]
   1ac70:	strd	sl, [sp, #24]
   1ac74:	str	lr, [sp, #32]
   1ac78:	sub	sp, sp, #52	; 0x34
   1ac7c:	str	r0, [sp, #32]
   1ac80:	str	r1, [sp, #20]
   1ac84:	str	r2, [sp, #28]
   1ac88:	str	r3, [sp, #16]
   1ac8c:	ldr	fp, [sp, #96]	; 0x60
   1ac90:	ldr	r9, [fp, #20]
   1ac94:	ldrb	r3, [r9]
   1ac98:	cmp	r3, #0
   1ac9c:	cmpne	r3, #61	; 0x3d
   1aca0:	beq	1acd8 <argp_error@@Base+0x2a0>
   1aca4:	mov	r8, r9
   1aca8:	ldrb	r3, [r8, #1]!
   1acac:	cmp	r3, #0
   1acb0:	cmpne	r3, #61	; 0x3d
   1acb4:	bne	1aca8 <argp_error@@Base+0x270>
   1acb8:	sub	r7, r8, r9
   1acbc:	ldr	r5, [sp, #16]
   1acc0:	ldr	sl, [r5]
   1acc4:	cmp	sl, #0
   1acc8:	beq	1b19c <argp_error@@Base+0x764>
   1accc:	mov	r4, sl
   1acd0:	mov	r6, #0
   1acd4:	b	1acf0 <argp_error@@Base+0x2b8>
   1acd8:	mov	r8, r9
   1acdc:	b	1acb8 <argp_error@@Base+0x280>
   1ace0:	add	r6, r6, #1
   1ace4:	ldr	r4, [r5, #16]!
   1ace8:	cmp	r4, #0
   1acec:	beq	1b1a0 <argp_error@@Base+0x768>
   1acf0:	str	r5, [sp, #12]
   1acf4:	mov	r2, r7
   1acf8:	mov	r1, r9
   1acfc:	mov	r0, r4
   1ad00:	bl	11bd4 <strncmp@plt>
   1ad04:	cmp	r0, #0
   1ad08:	bne	1ace0 <argp_error@@Base+0x2a8>
   1ad0c:	mov	r0, r4
   1ad10:	bl	119dc <strlen@plt>
   1ad14:	cmp	r0, r7
   1ad18:	bne	1ace0 <argp_error@@Base+0x2a8>
   1ad1c:	cmp	r5, #0
   1ad20:	beq	1b1a8 <argp_error@@Base+0x770>
   1ad24:	ldr	r3, [fp]
   1ad28:	add	r2, r3, #1
   1ad2c:	str	r2, [fp]
   1ad30:	mov	r1, #0
   1ad34:	str	r1, [fp, #20]
   1ad38:	ldrb	r1, [r8]
   1ad3c:	cmp	r1, #0
   1ad40:	beq	1b0f0 <argp_error@@Base+0x6b8>
   1ad44:	ldr	r3, [sp, #12]
   1ad48:	ldr	r3, [r3, #4]
   1ad4c:	cmp	r3, #0
   1ad50:	beq	1b09c <argp_error@@Base+0x664>
   1ad54:	add	r8, r8, #1
   1ad58:	str	r8, [fp, #12]
   1ad5c:	ldr	r3, [sp, #88]	; 0x58
   1ad60:	cmp	r3, #0
   1ad64:	strne	r6, [r3]
   1ad68:	ldr	r2, [sp, #12]
   1ad6c:	ldr	r3, [r2, #8]
   1ad70:	cmp	r3, #0
   1ad74:	beq	1b188 <argp_error@@Base+0x750>
   1ad78:	ldr	r2, [r2, #12]
   1ad7c:	str	r2, [r3]
   1ad80:	mov	r0, #0
   1ad84:	add	sp, sp, #52	; 0x34
   1ad88:	ldrd	r4, [sp]
   1ad8c:	ldrd	r6, [sp, #8]
   1ad90:	ldrd	r8, [sp, #16]
   1ad94:	ldrd	sl, [sp, #24]
   1ad98:	add	sp, sp, #32
   1ad9c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ada0:	ldr	r2, [sl, #8]
   1ada4:	ldr	r3, [r9, #8]
   1ada8:	cmp	r2, r3
   1adac:	bne	1ae6c <argp_error@@Base+0x434>
   1adb0:	ldr	r2, [sl, #12]
   1adb4:	ldr	r3, [r9, #12]
   1adb8:	cmp	r2, r3
   1adbc:	bne	1ae6c <argp_error@@Base+0x434>
   1adc0:	b	1ae24 <argp_error@@Base+0x3ec>
   1adc4:	mov	r0, r6
   1adc8:	bl	176b4 <argp_parse@@Base+0x1384>
   1adcc:	subs	r3, r0, #0
   1add0:	str	r3, [sp, #24]
   1add4:	beq	1ae9c <argp_error@@Base+0x464>
   1add8:	mov	r2, r6
   1addc:	mov	r1, #0
   1ade0:	ldr	r7, [sp, #24]
   1ade4:	mov	r0, r7
   1ade8:	bl	11a54 <memset@plt>
   1adec:	ldr	r2, [sp, #36]	; 0x24
   1adf0:	mov	r1, #1
   1adf4:	strb	r1, [r7, r2]
   1adf8:	ldr	r3, [sp, #44]	; 0x2c
   1adfc:	str	r3, [sp, #40]	; 0x28
   1ae00:	b	1ae8c <argp_error@@Base+0x454>
   1ae04:	ldr	r3, [sp, #24]
   1ae08:	cmp	r3, #0
   1ae0c:	moveq	r5, #1
   1ae10:	beq	1ae24 <argp_error@@Base+0x3ec>
   1ae14:	mov	r5, #1
   1ae18:	b	1ae8c <argp_error@@Base+0x454>
   1ae1c:	str	r4, [sp, #36]	; 0x24
   1ae20:	mov	sl, r9
   1ae24:	add	r4, r4, #1
   1ae28:	ldr	r0, [r9, #16]!
   1ae2c:	cmp	r0, #0
   1ae30:	beq	1aea4 <argp_error@@Base+0x46c>
   1ae34:	ldr	r2, [sp, #12]
   1ae38:	ldr	r1, [fp, #20]
   1ae3c:	bl	11bd4 <strncmp@plt>
   1ae40:	cmp	r0, #0
   1ae44:	bne	1ae24 <argp_error@@Base+0x3ec>
   1ae48:	cmp	sl, #0
   1ae4c:	beq	1ae1c <argp_error@@Base+0x3e4>
   1ae50:	ldr	r3, [sp, #92]	; 0x5c
   1ae54:	cmp	r3, #0
   1ae58:	bne	1ae6c <argp_error@@Base+0x434>
   1ae5c:	ldr	r2, [sl, #4]
   1ae60:	ldr	r3, [r9, #4]
   1ae64:	cmp	r2, r3
   1ae68:	beq	1ada0 <argp_error@@Base+0x368>
   1ae6c:	cmp	r5, #0
   1ae70:	bne	1ae24 <argp_error@@Base+0x3ec>
   1ae74:	ldr	r3, [sp, #100]	; 0x64
   1ae78:	cmp	r3, #0
   1ae7c:	beq	1ae04 <argp_error@@Base+0x3cc>
   1ae80:	ldr	r3, [sp, #24]
   1ae84:	cmp	r3, #0
   1ae88:	beq	1adc4 <argp_error@@Base+0x38c>
   1ae8c:	ldr	r3, [sp, #24]
   1ae90:	mov	r2, #1
   1ae94:	strb	r2, [r3, r4]
   1ae98:	b	1ae24 <argp_error@@Base+0x3ec>
   1ae9c:	mov	r5, #1
   1aea0:	b	1ae24 <argp_error@@Base+0x3ec>
   1aea4:	str	sl, [sp, #12]
   1aea8:	ldr	r3, [sp, #24]
   1aeac:	orrs	r3, r3, r5
   1aeb0:	bne	1af28 <argp_error@@Base+0x4f0>
   1aeb4:	ldr	r3, [sp, #12]
   1aeb8:	cmp	r3, #0
   1aebc:	bne	1b094 <argp_error@@Base+0x65c>
   1aec0:	ldr	r3, [sp, #92]	; 0x5c
   1aec4:	cmp	r3, #0
   1aec8:	beq	1aefc <argp_error@@Base+0x4c4>
   1aecc:	ldr	r3, [fp]
   1aed0:	ldr	r2, [sp, #20]
   1aed4:	ldr	r3, [r2, r3, lsl #2]
   1aed8:	ldrb	r3, [r3, #1]
   1aedc:	cmp	r3, #45	; 0x2d
   1aee0:	beq	1aefc <argp_error@@Base+0x4c4>
   1aee4:	ldr	r3, [fp, #20]
   1aee8:	ldrb	r1, [r3]
   1aeec:	ldr	r0, [sp, #28]
   1aef0:	bl	119f4 <strchr@plt>
   1aef4:	cmp	r0, #0
   1aef8:	bne	1b194 <argp_error@@Base+0x75c>
   1aefc:	ldr	r3, [sp, #100]	; 0x64
   1af00:	cmp	r3, #0
   1af04:	bne	1b064 <argp_error@@Base+0x62c>
   1af08:	mov	r2, #0
   1af0c:	str	r2, [fp, #20]
   1af10:	ldr	r3, [fp]
   1af14:	add	r3, r3, #1
   1af18:	str	r3, [fp]
   1af1c:	str	r2, [fp, #8]
   1af20:	mov	r0, #63	; 0x3f
   1af24:	b	1ad84 <argp_error@@Base+0x34c>
   1af28:	ldr	r3, [sp, #100]	; 0x64
   1af2c:	cmp	r3, #0
   1af30:	beq	1af68 <argp_error@@Base+0x530>
   1af34:	cmp	r5, #0
   1af38:	beq	1afa4 <argp_error@@Base+0x56c>
   1af3c:	movw	r0, #58288	; 0xe3b0
   1af40:	movt	r0, #2
   1af44:	ldr	r3, [fp, #20]
   1af48:	str	r3, [sp]
   1af4c:	ldr	r3, [sp, #104]	; 0x68
   1af50:	ldr	r2, [sp, #20]
   1af54:	ldr	r2, [r2]
   1af58:	movw	r1, #54680	; 0xd598
   1af5c:	movt	r1, #1
   1af60:	ldr	r0, [r0]
   1af64:	bl	11a0c <fprintf@plt>
   1af68:	ldr	r3, [sp, #40]	; 0x28
   1af6c:	cmp	r3, #0
   1af70:	bne	1b058 <argp_error@@Base+0x620>
   1af74:	ldr	r4, [fp, #20]
   1af78:	mov	r0, r4
   1af7c:	bl	119dc <strlen@plt>
   1af80:	add	r0, r4, r0
   1af84:	str	r0, [fp, #20]
   1af88:	ldr	r3, [fp]
   1af8c:	add	r3, r3, #1
   1af90:	str	r3, [fp]
   1af94:	mov	r3, #0
   1af98:	str	r3, [fp, #8]
   1af9c:	mov	r0, #63	; 0x3f
   1afa0:	b	1ad84 <argp_error@@Base+0x34c>
   1afa4:	movw	r4, #58288	; 0xe3b0
   1afa8:	movt	r4, #2
   1afac:	ldr	r0, [r4]
   1afb0:	bl	11b5c <flockfile@plt>
   1afb4:	ldr	r3, [fp, #20]
   1afb8:	str	r3, [sp]
   1afbc:	ldr	r3, [sp, #104]	; 0x68
   1afc0:	ldr	r2, [sp, #20]
   1afc4:	ldr	r2, [r2]
   1afc8:	movw	r1, #54712	; 0xd5b8
   1afcc:	movt	r1, #1
   1afd0:	ldr	r0, [r4]
   1afd4:	bl	11a0c <fprintf@plt>
   1afd8:	cmp	r6, #0
   1afdc:	ble	1b038 <argp_error@@Base+0x600>
   1afe0:	ldr	r2, [sp, #24]
   1afe4:	sub	r4, r2, #1
   1afe8:	sub	r3, r6, #1
   1afec:	add	r8, r2, r3
   1aff0:	movw	r7, #54760	; 0xd5e8
   1aff4:	movt	r7, #1
   1aff8:	movw	r6, #58288	; 0xe3b0
   1affc:	movt	r6, #2
   1b000:	ldr	r9, [sp, #16]
   1b004:	b	1b014 <argp_error@@Base+0x5dc>
   1b008:	add	r5, r5, #1
   1b00c:	cmp	r8, r4
   1b010:	beq	1b038 <argp_error@@Base+0x600>
   1b014:	ldrb	r3, [r4, #1]!
   1b018:	cmp	r3, #0
   1b01c:	beq	1b008 <argp_error@@Base+0x5d0>
   1b020:	ldr	r3, [r9, r5, lsl #4]
   1b024:	ldr	r2, [sp, #104]	; 0x68
   1b028:	mov	r1, r7
   1b02c:	ldr	r0, [r6]
   1b030:	bl	11a0c <fprintf@plt>
   1b034:	b	1b008 <argp_error@@Base+0x5d0>
   1b038:	movw	r4, #58288	; 0xe3b0
   1b03c:	movt	r4, #2
   1b040:	ldr	r1, [r4]
   1b044:	mov	r0, #10
   1b048:	bl	11b08 <fputc@plt>
   1b04c:	ldr	r0, [r4]
   1b050:	bl	118d4 <funlockfile@plt>
   1b054:	b	1af68 <argp_error@@Base+0x530>
   1b058:	ldr	r0, [sp, #24]
   1b05c:	bl	17008 <argp_parse@@Base+0xcd8>
   1b060:	b	1af74 <argp_error@@Base+0x53c>
   1b064:	movw	r0, #58288	; 0xe3b0
   1b068:	movt	r0, #2
   1b06c:	ldr	r3, [fp, #20]
   1b070:	str	r3, [sp]
   1b074:	ldr	r3, [sp, #104]	; 0x68
   1b078:	ldr	r2, [sp, #20]
   1b07c:	ldr	r2, [r2]
   1b080:	movw	r1, #54768	; 0xd5f0
   1b084:	movt	r1, #1
   1b088:	ldr	r0, [r0]
   1b08c:	bl	11a0c <fprintf@plt>
   1b090:	b	1af08 <argp_error@@Base+0x4d0>
   1b094:	ldr	r6, [sp, #36]	; 0x24
   1b098:	b	1ad24 <argp_error@@Base+0x2ec>
   1b09c:	ldr	r3, [sp, #100]	; 0x64
   1b0a0:	cmp	r3, #0
   1b0a4:	bne	1b0bc <argp_error@@Base+0x684>
   1b0a8:	ldr	r3, [sp, #12]
   1b0ac:	ldr	r3, [r3, #12]
   1b0b0:	str	r3, [fp, #8]
   1b0b4:	mov	r0, #63	; 0x3f
   1b0b8:	b	1ad84 <argp_error@@Base+0x34c>
   1b0bc:	movw	r0, #58288	; 0xe3b0
   1b0c0:	movt	r0, #2
   1b0c4:	ldr	r3, [sp, #12]
   1b0c8:	ldr	r3, [r3]
   1b0cc:	str	r3, [sp]
   1b0d0:	ldr	r3, [sp, #104]	; 0x68
   1b0d4:	ldr	r2, [sp, #20]
   1b0d8:	ldr	r2, [r2]
   1b0dc:	movw	r1, #54800	; 0xd610
   1b0e0:	movt	r1, #1
   1b0e4:	ldr	r0, [r0]
   1b0e8:	bl	11a0c <fprintf@plt>
   1b0ec:	b	1b0a8 <argp_error@@Base+0x670>
   1b0f0:	ldr	r1, [sp, #12]
   1b0f4:	ldr	r1, [r1, #4]
   1b0f8:	cmp	r1, #1
   1b0fc:	bne	1ad5c <argp_error@@Base+0x324>
   1b100:	ldr	r1, [sp, #32]
   1b104:	cmp	r2, r1
   1b108:	bge	1b124 <argp_error@@Base+0x6ec>
   1b10c:	add	r3, r3, #2
   1b110:	str	r3, [fp]
   1b114:	ldr	r3, [sp, #20]
   1b118:	ldr	r3, [r3, r2, lsl #2]
   1b11c:	str	r3, [fp, #12]
   1b120:	b	1ad5c <argp_error@@Base+0x324>
   1b124:	ldr	r3, [sp, #100]	; 0x64
   1b128:	cmp	r3, #0
   1b12c:	bne	1b154 <argp_error@@Base+0x71c>
   1b130:	ldr	r3, [sp, #12]
   1b134:	ldr	r3, [r3, #12]
   1b138:	str	r3, [fp, #8]
   1b13c:	ldr	r3, [sp, #28]
   1b140:	ldrb	r3, [r3]
   1b144:	cmp	r3, #58	; 0x3a
   1b148:	moveq	r0, #58	; 0x3a
   1b14c:	movne	r0, #63	; 0x3f
   1b150:	b	1ad84 <argp_error@@Base+0x34c>
   1b154:	movw	r0, #58288	; 0xe3b0
   1b158:	movt	r0, #2
   1b15c:	ldr	r3, [sp, #12]
   1b160:	ldr	r3, [r3]
   1b164:	str	r3, [sp]
   1b168:	ldr	r3, [sp, #104]	; 0x68
   1b16c:	ldr	r2, [sp, #20]
   1b170:	ldr	r2, [r2]
   1b174:	movw	r1, #54848	; 0xd640
   1b178:	movt	r1, #1
   1b17c:	ldr	r0, [r0]
   1b180:	bl	11a0c <fprintf@plt>
   1b184:	b	1b130 <argp_error@@Base+0x6f8>
   1b188:	ldr	r3, [sp, #12]
   1b18c:	ldr	r0, [r3, #12]
   1b190:	b	1ad84 <argp_error@@Base+0x34c>
   1b194:	mvn	r0, #0
   1b198:	b	1ad84 <argp_error@@Base+0x34c>
   1b19c:	mov	r6, #0
   1b1a0:	cmp	sl, #0
   1b1a4:	beq	1aec0 <argp_error@@Base+0x488>
   1b1a8:	ldr	r9, [sp, #16]
   1b1ac:	mvn	r3, #0
   1b1b0:	str	r3, [sp, #36]	; 0x24
   1b1b4:	mov	r5, #0
   1b1b8:	str	r5, [sp, #40]	; 0x28
   1b1bc:	str	r5, [sp, #24]
   1b1c0:	mov	r4, r5
   1b1c4:	mov	r3, #1
   1b1c8:	str	r3, [sp, #44]	; 0x2c
   1b1cc:	mov	r0, sl
   1b1d0:	mov	sl, r5
   1b1d4:	str	r7, [sp, #12]
   1b1d8:	b	1ae34 <argp_error@@Base+0x3fc>
   1b1dc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b1e0:	strd	r6, [sp, #8]
   1b1e4:	strd	r8, [sp, #16]
   1b1e8:	strd	sl, [sp, #24]
   1b1ec:	str	lr, [sp, #32]
   1b1f0:	sub	sp, sp, #36	; 0x24
   1b1f4:	str	r3, [sp, #24]
   1b1f8:	ldr	r4, [sp, #80]	; 0x50
   1b1fc:	ldr	r8, [r4, #4]
   1b200:	subs	r5, r0, #0
   1b204:	ble	1b740 <argp_error@@Base+0xd08>
   1b208:	mov	r9, r1
   1b20c:	mov	r6, r2
   1b210:	mov	r3, #0
   1b214:	str	r3, [r4, #12]
   1b218:	ldr	r3, [r4]
   1b21c:	cmp	r3, #0
   1b220:	beq	1b244 <argp_error@@Base+0x80c>
   1b224:	ldr	r3, [r4, #16]
   1b228:	cmp	r3, #0
   1b22c:	beq	1b24c <argp_error@@Base+0x814>
   1b230:	ldrb	r3, [r2]
   1b234:	sub	r3, r3, #43	; 0x2b
   1b238:	tst	r3, #253	; 0xfd
   1b23c:	addeq	r6, r2, #1
   1b240:	b	1b2a8 <argp_error@@Base+0x870>
   1b244:	mov	r3, #1
   1b248:	str	r3, [r4]
   1b24c:	ldr	r3, [r4]
   1b250:	str	r3, [r4, #32]
   1b254:	str	r3, [r4, #28]
   1b258:	mov	r3, #0
   1b25c:	str	r3, [r4, #20]
   1b260:	ldrb	r3, [r6]
   1b264:	cmp	r3, #45	; 0x2d
   1b268:	moveq	r3, #2
   1b26c:	streq	r3, [r4, #24]
   1b270:	addeq	r6, r6, #1
   1b274:	beq	1b2a0 <argp_error@@Base+0x868>
   1b278:	cmp	r3, #43	; 0x2b
   1b27c:	moveq	r3, #0
   1b280:	streq	r3, [r4, #24]
   1b284:	addeq	r6, r6, #1
   1b288:	beq	1b2a0 <argp_error@@Base+0x868>
   1b28c:	ldr	r3, [sp, #84]	; 0x54
   1b290:	cmp	r3, #0
   1b294:	beq	1b368 <argp_error@@Base+0x930>
   1b298:	mov	r3, #0
   1b29c:	str	r3, [r4, #24]
   1b2a0:	mov	r3, #1
   1b2a4:	str	r3, [r4, #16]
   1b2a8:	ldrb	r3, [r6]
   1b2ac:	cmp	r3, #58	; 0x3a
   1b2b0:	moveq	r8, #0
   1b2b4:	ldr	r3, [r4, #20]
   1b2b8:	cmp	r3, #0
   1b2bc:	beq	1b2cc <argp_error@@Base+0x894>
   1b2c0:	ldrb	r3, [r3]
   1b2c4:	cmp	r3, #0
   1b2c8:	bne	1b46c <argp_error@@Base+0xa34>
   1b2cc:	ldr	r3, [r4]
   1b2d0:	ldr	r2, [r4, #32]
   1b2d4:	cmp	r2, r3
   1b2d8:	strgt	r3, [r4, #32]
   1b2dc:	ldr	r2, [r4, #28]
   1b2e0:	cmp	r3, r2
   1b2e4:	strlt	r3, [r4, #28]
   1b2e8:	ldr	r2, [r4, #24]
   1b2ec:	cmp	r2, #1
   1b2f0:	beq	1b388 <argp_error@@Base+0x950>
   1b2f4:	ldr	r7, [r4]
   1b2f8:	cmp	r7, r5
   1b2fc:	beq	1b348 <argp_error@@Base+0x910>
   1b300:	ldr	sl, [r9, r7, lsl #2]
   1b304:	movw	r1, #52572	; 0xcd5c
   1b308:	movt	r1, #1
   1b30c:	mov	r0, sl
   1b310:	bl	11754 <strcmp@plt>
   1b314:	cmp	r0, #0
   1b318:	bne	1b750 <argp_error@@Base+0xd18>
   1b31c:	add	r7, r7, #1
   1b320:	str	r7, [r4]
   1b324:	ldr	r2, [r4, #28]
   1b328:	ldr	r3, [r4, #32]
   1b32c:	cmp	r2, r3
   1b330:	cmpne	r7, r3
   1b334:	bne	1b404 <argp_error@@Base+0x9cc>
   1b338:	cmp	r2, r3
   1b33c:	streq	r7, [r4, #28]
   1b340:	str	r5, [r4, #32]
   1b344:	str	r5, [r4]
   1b348:	ldr	r3, [r4, #28]
   1b34c:	ldr	r2, [r4, #32]
   1b350:	cmp	r3, r2
   1b354:	mvneq	r0, #0
   1b358:	beq	1b77c <argp_error@@Base+0xd44>
   1b35c:	str	r3, [r4]
   1b360:	mvn	r0, #0
   1b364:	b	1b77c <argp_error@@Base+0xd44>
   1b368:	movw	r0, #54888	; 0xd668
   1b36c:	movt	r0, #1
   1b370:	bl	11940 <getenv@plt>
   1b374:	cmp	r0, #0
   1b378:	bne	1b298 <argp_error@@Base+0x860>
   1b37c:	mov	r3, #1
   1b380:	str	r3, [r4, #24]
   1b384:	b	1b2a0 <argp_error@@Base+0x868>
   1b388:	ldr	r2, [r4, #32]
   1b38c:	ldr	r1, [r4, #28]
   1b390:	cmp	r1, r2
   1b394:	cmpne	r3, r2
   1b398:	bne	1b3b8 <argp_error@@Base+0x980>
   1b39c:	cmp	r3, r2
   1b3a0:	strne	r3, [r4, #28]
   1b3a4:	ldr	r3, [r4]
   1b3a8:	cmp	r5, r3
   1b3ac:	ble	1b3fc <argp_error@@Base+0x9c4>
   1b3b0:	add	r1, r9, r3, lsl #2
   1b3b4:	b	1b3d8 <argp_error@@Base+0x9a0>
   1b3b8:	mov	r1, r4
   1b3bc:	mov	r0, r9
   1b3c0:	bl	1ab88 <argp_error@@Base+0x150>
   1b3c4:	b	1b3a4 <argp_error@@Base+0x96c>
   1b3c8:	add	r3, r3, #1
   1b3cc:	str	r3, [r4]
   1b3d0:	cmp	r3, r5
   1b3d4:	beq	1b3f8 <argp_error@@Base+0x9c0>
   1b3d8:	ldr	r2, [r1], #4
   1b3dc:	ldrb	r0, [r2]
   1b3e0:	cmp	r0, #45	; 0x2d
   1b3e4:	bne	1b3c8 <argp_error@@Base+0x990>
   1b3e8:	ldrb	r2, [r2, #1]
   1b3ec:	cmp	r2, #0
   1b3f0:	beq	1b3c8 <argp_error@@Base+0x990>
   1b3f4:	b	1b3fc <argp_error@@Base+0x9c4>
   1b3f8:	mov	r3, r5
   1b3fc:	str	r3, [r4, #32]
   1b400:	b	1b2f4 <argp_error@@Base+0x8bc>
   1b404:	mov	r1, r4
   1b408:	mov	r0, r9
   1b40c:	bl	1ab88 <argp_error@@Base+0x150>
   1b410:	b	1b340 <argp_error@@Base+0x908>
   1b414:	ldrb	r1, [sl, #1]
   1b418:	cmp	r1, #0
   1b41c:	beq	1b75c <argp_error@@Base+0xd24>
   1b420:	ldr	r3, [sp, #24]
   1b424:	cmp	r3, #0
   1b428:	beq	1b45c <argp_error@@Base+0xa24>
   1b42c:	cmp	r1, #45	; 0x2d
   1b430:	beq	1b4d8 <argp_error@@Base+0xaa0>
   1b434:	ldr	r3, [sp, #76]	; 0x4c
   1b438:	cmp	r3, #0
   1b43c:	beq	1b45c <argp_error@@Base+0xa24>
   1b440:	ldrb	r3, [sl, #2]
   1b444:	cmp	r3, #0
   1b448:	bne	1b51c <argp_error@@Base+0xae4>
   1b44c:	mov	r0, r6
   1b450:	bl	119f4 <strchr@plt>
   1b454:	cmp	r0, #0
   1b458:	beq	1b51c <argp_error@@Base+0xae4>
   1b45c:	ldr	r3, [r4]
   1b460:	ldr	r3, [r9, r3, lsl #2]
   1b464:	add	r3, r3, #1
   1b468:	str	r3, [r4, #20]
   1b46c:	ldr	sl, [r4, #20]
   1b470:	add	fp, sl, #1
   1b474:	str	fp, [r4, #20]
   1b478:	ldrb	r7, [sl]
   1b47c:	str	r7, [sp, #28]
   1b480:	mov	r1, r7
   1b484:	mov	r0, r6
   1b488:	bl	119f4 <strchr@plt>
   1b48c:	ldrb	r3, [sl, #1]
   1b490:	cmp	r3, #0
   1b494:	bne	1b4a4 <argp_error@@Base+0xa6c>
   1b498:	ldr	r3, [r4]
   1b49c:	add	r3, r3, #1
   1b4a0:	str	r3, [r4]
   1b4a4:	sub	r3, r7, #58	; 0x3a
   1b4a8:	uxtb	r3, r3
   1b4ac:	cmp	r0, #0
   1b4b0:	cmpne	r3, #1
   1b4b4:	bls	1b568 <argp_error@@Base+0xb30>
   1b4b8:	ldrb	r3, [r0]
   1b4bc:	cmp	r3, #87	; 0x57
   1b4c0:	beq	1b5a4 <argp_error@@Base+0xb6c>
   1b4c4:	ldrb	r3, [r0, #1]
   1b4c8:	cmp	r3, #58	; 0x3a
   1b4cc:	beq	1b678 <argp_error@@Base+0xc40>
   1b4d0:	mov	r0, r7
   1b4d4:	b	1b77c <argp_error@@Base+0xd44>
   1b4d8:	add	sl, sl, #2
   1b4dc:	str	sl, [r4, #20]
   1b4e0:	movw	r3, #52572	; 0xcd5c
   1b4e4:	movt	r3, #1
   1b4e8:	str	r3, [sp, #16]
   1b4ec:	str	r8, [sp, #12]
   1b4f0:	str	r4, [sp, #8]
   1b4f4:	ldr	r3, [sp, #76]	; 0x4c
   1b4f8:	str	r3, [sp, #4]
   1b4fc:	ldr	r3, [sp, #72]	; 0x48
   1b500:	str	r3, [sp]
   1b504:	ldr	r3, [sp, #24]
   1b508:	mov	r2, r6
   1b50c:	mov	r1, r9
   1b510:	mov	r0, r5
   1b514:	bl	1ac64 <argp_error@@Base+0x22c>
   1b518:	b	1b77c <argp_error@@Base+0xd44>
   1b51c:	add	sl, sl, #1
   1b520:	str	sl, [r4, #20]
   1b524:	movw	r3, #54904	; 0xd678
   1b528:	movt	r3, #1
   1b52c:	str	r3, [sp, #16]
   1b530:	str	r8, [sp, #12]
   1b534:	str	r4, [sp, #8]
   1b538:	ldr	r3, [sp, #76]	; 0x4c
   1b53c:	str	r3, [sp, #4]
   1b540:	ldr	r3, [sp, #72]	; 0x48
   1b544:	str	r3, [sp]
   1b548:	ldr	r3, [sp, #24]
   1b54c:	mov	r2, r6
   1b550:	mov	r1, r9
   1b554:	mov	r0, r5
   1b558:	bl	1ac64 <argp_error@@Base+0x22c>
   1b55c:	cmn	r0, #1
   1b560:	bne	1b77c <argp_error@@Base+0xd44>
   1b564:	b	1b45c <argp_error@@Base+0xa24>
   1b568:	cmp	r8, #0
   1b56c:	bne	1b580 <argp_error@@Base+0xb48>
   1b570:	ldr	r3, [sp, #28]
   1b574:	str	r3, [r4, #8]
   1b578:	mov	r0, #63	; 0x3f
   1b57c:	b	1b77c <argp_error@@Base+0xd44>
   1b580:	movw	r0, #58288	; 0xe3b0
   1b584:	movt	r0, #2
   1b588:	ldr	r3, [sp, #28]
   1b58c:	ldr	r2, [r9]
   1b590:	movw	r1, #54908	; 0xd67c
   1b594:	movt	r1, #1
   1b598:	ldr	r0, [r0]
   1b59c:	bl	11a0c <fprintf@plt>
   1b5a0:	b	1b570 <argp_error@@Base+0xb38>
   1b5a4:	ldrb	r1, [r0, #1]
   1b5a8:	ldr	r2, [sp, #24]
   1b5ac:	cmp	r1, #59	; 0x3b
   1b5b0:	movne	r3, #0
   1b5b4:	moveq	r3, #1
   1b5b8:	cmp	r2, #0
   1b5bc:	moveq	r3, #0
   1b5c0:	cmp	r3, #0
   1b5c4:	beq	1b4c4 <argp_error@@Base+0xa8c>
   1b5c8:	ldrb	r3, [sl, #1]
   1b5cc:	cmp	r3, #0
   1b5d0:	strne	fp, [r4, #12]
   1b5d4:	bne	1b5ec <argp_error@@Base+0xbb4>
   1b5d8:	ldr	r3, [r4]
   1b5dc:	cmp	r3, r5
   1b5e0:	beq	1b634 <argp_error@@Base+0xbfc>
   1b5e4:	ldr	r3, [r9, r3, lsl #2]
   1b5e8:	str	r3, [r4, #12]
   1b5ec:	ldr	r3, [r4, #12]
   1b5f0:	str	r3, [r4, #20]
   1b5f4:	mov	r2, #0
   1b5f8:	str	r2, [r4, #12]
   1b5fc:	movw	r3, #54980	; 0xd6c4
   1b600:	movt	r3, #1
   1b604:	str	r3, [sp, #16]
   1b608:	str	r8, [sp, #12]
   1b60c:	str	r4, [sp, #8]
   1b610:	str	r2, [sp, #4]
   1b614:	ldr	r3, [sp, #72]	; 0x48
   1b618:	str	r3, [sp]
   1b61c:	ldr	r3, [sp, #24]
   1b620:	mov	r2, r6
   1b624:	mov	r1, r9
   1b628:	mov	r0, r5
   1b62c:	bl	1ac64 <argp_error@@Base+0x22c>
   1b630:	b	1b77c <argp_error@@Base+0xd44>
   1b634:	cmp	r8, #0
   1b638:	bne	1b654 <argp_error@@Base+0xc1c>
   1b63c:	ldr	r3, [sp, #28]
   1b640:	str	r3, [r4, #8]
   1b644:	ldrb	r0, [r6]
   1b648:	cmp	r0, #58	; 0x3a
   1b64c:	movne	r0, #63	; 0x3f
   1b650:	b	1b77c <argp_error@@Base+0xd44>
   1b654:	movw	r0, #58288	; 0xe3b0
   1b658:	movt	r0, #2
   1b65c:	ldr	r3, [sp, #28]
   1b660:	ldr	r2, [r9]
   1b664:	movw	r1, #54936	; 0xd698
   1b668:	movt	r1, #1
   1b66c:	ldr	r0, [r0]
   1b670:	bl	11a0c <fprintf@plt>
   1b674:	b	1b63c <argp_error@@Base+0xc04>
   1b678:	ldrb	r3, [r0, #2]
   1b67c:	cmp	r3, #58	; 0x3a
   1b680:	beq	1b6ac <argp_error@@Base+0xc74>
   1b684:	ldrb	r3, [sl, #1]
   1b688:	cmp	r3, #0
   1b68c:	beq	1b6dc <argp_error@@Base+0xca4>
   1b690:	str	fp, [r4, #12]
   1b694:	ldr	r3, [r4]
   1b698:	add	r3, r3, #1
   1b69c:	str	r3, [r4]
   1b6a0:	mov	r3, #0
   1b6a4:	str	r3, [r4, #20]
   1b6a8:	b	1b4d0 <argp_error@@Base+0xa98>
   1b6ac:	ldrb	r3, [sl, #1]
   1b6b0:	cmp	r3, #0
   1b6b4:	moveq	r3, #0
   1b6b8:	streq	r3, [r4, #12]
   1b6bc:	beq	1b6d0 <argp_error@@Base+0xc98>
   1b6c0:	str	fp, [r4, #12]
   1b6c4:	ldr	r3, [r4]
   1b6c8:	add	r3, r3, #1
   1b6cc:	str	r3, [r4]
   1b6d0:	mov	r3, #0
   1b6d4:	str	r3, [r4, #20]
   1b6d8:	b	1b4d0 <argp_error@@Base+0xa98>
   1b6dc:	ldr	r3, [r4]
   1b6e0:	cmp	r3, r5
   1b6e4:	beq	1b6fc <argp_error@@Base+0xcc4>
   1b6e8:	add	r2, r3, #1
   1b6ec:	str	r2, [r4]
   1b6f0:	ldr	r3, [r9, r3, lsl #2]
   1b6f4:	str	r3, [r4, #12]
   1b6f8:	b	1b6a0 <argp_error@@Base+0xc68>
   1b6fc:	cmp	r8, #0
   1b700:	bne	1b71c <argp_error@@Base+0xce4>
   1b704:	ldr	r3, [sp, #28]
   1b708:	str	r3, [r4, #8]
   1b70c:	ldrb	r7, [r6]
   1b710:	cmp	r7, #58	; 0x3a
   1b714:	movne	r7, #63	; 0x3f
   1b718:	b	1b6a0 <argp_error@@Base+0xc68>
   1b71c:	movw	r0, #58288	; 0xe3b0
   1b720:	movt	r0, #2
   1b724:	ldr	r3, [sp, #28]
   1b728:	ldr	r2, [r9]
   1b72c:	movw	r1, #54936	; 0xd698
   1b730:	movt	r1, #1
   1b734:	ldr	r0, [r0]
   1b738:	bl	11a0c <fprintf@plt>
   1b73c:	b	1b704 <argp_error@@Base+0xccc>
   1b740:	mvn	r0, #0
   1b744:	b	1b77c <argp_error@@Base+0xd44>
   1b748:	mvn	r0, #0
   1b74c:	b	1b77c <argp_error@@Base+0xd44>
   1b750:	ldrb	r3, [sl]
   1b754:	cmp	r3, #45	; 0x2d
   1b758:	beq	1b414 <argp_error@@Base+0x9dc>
   1b75c:	ldr	r3, [r4, #24]
   1b760:	cmp	r3, #0
   1b764:	beq	1b748 <argp_error@@Base+0xd10>
   1b768:	add	r3, r7, #1
   1b76c:	str	r3, [r4]
   1b770:	ldr	r3, [r9, r7, lsl #2]
   1b774:	str	r3, [r4, #12]
   1b778:	mov	r0, #1
   1b77c:	add	sp, sp, #36	; 0x24
   1b780:	ldrd	r4, [sp]
   1b784:	ldrd	r6, [sp, #8]
   1b788:	ldrd	r8, [sp, #16]
   1b78c:	ldrd	sl, [sp, #24]
   1b790:	add	sp, sp, #32
   1b794:	pop	{pc}		; (ldr pc, [sp], #4)
   1b798:	strd	r4, [sp, #-12]!
   1b79c:	str	lr, [sp, #8]
   1b7a0:	sub	sp, sp, #20
   1b7a4:	movw	r4, #58560	; 0xe4c0
   1b7a8:	movt	r4, #2
   1b7ac:	movw	r5, #58264	; 0xe398
   1b7b0:	movt	r5, #2
   1b7b4:	ldr	ip, [r5]
   1b7b8:	str	ip, [r4]
   1b7bc:	ldr	ip, [r5, #4]
   1b7c0:	str	ip, [r4, #4]
   1b7c4:	ldr	ip, [sp, #40]	; 0x28
   1b7c8:	str	ip, [sp, #12]
   1b7cc:	str	r4, [sp, #8]
   1b7d0:	ldr	ip, [sp, #36]	; 0x24
   1b7d4:	str	ip, [sp, #4]
   1b7d8:	ldr	ip, [sp, #32]
   1b7dc:	str	ip, [sp]
   1b7e0:	bl	1b1dc <argp_error@@Base+0x7a4>
   1b7e4:	ldr	r3, [r4]
   1b7e8:	str	r3, [r5]
   1b7ec:	movw	r3, #58908	; 0xe61c
   1b7f0:	movt	r3, #2
   1b7f4:	ldr	r2, [r4, #12]
   1b7f8:	str	r2, [r3]
   1b7fc:	ldr	r3, [r4, #8]
   1b800:	str	r3, [r5, #8]
   1b804:	add	sp, sp, #20
   1b808:	ldrd	r4, [sp]
   1b80c:	add	sp, sp, #8
   1b810:	pop	{pc}		; (ldr pc, [sp], #4)
   1b814:	push	{lr}		; (str lr, [sp, #-4]!)
   1b818:	sub	sp, sp, #20
   1b81c:	mov	r3, #1
   1b820:	str	r3, [sp, #8]
   1b824:	mov	r3, #0
   1b828:	str	r3, [sp, #4]
   1b82c:	str	r3, [sp]
   1b830:	bl	1b798 <argp_error@@Base+0xd60>
   1b834:	add	sp, sp, #20
   1b838:	pop	{pc}		; (ldr pc, [sp], #4)
   1b83c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b840:	strd	r6, [sp, #8]
   1b844:	str	r8, [sp, #16]
   1b848:	str	lr, [sp, #20]
   1b84c:	mov	r8, r0
   1b850:	mov	r7, r1
   1b854:	mov	r6, r2
   1b858:	mov	r5, r3
   1b85c:	mov	r0, #36	; 0x24
   1b860:	bl	176b4 <argp_parse@@Base+0x1384>
   1b864:	subs	r4, r0, #0
   1b868:	beq	1b8ac <argp_error@@Base+0xe74>
   1b86c:	str	r8, [r4]
   1b870:	str	r7, [r4, #4]
   1b874:	str	r6, [r4, #8]
   1b878:	str	r5, [r4, #12]
   1b87c:	mov	r3, #0
   1b880:	str	r3, [r4, #20]
   1b884:	str	r3, [r4, #16]
   1b888:	mov	r0, #200	; 0xc8
   1b88c:	bl	176b4 <argp_parse@@Base+0x1384>
   1b890:	mov	r5, r0
   1b894:	str	r0, [r4, #24]
   1b898:	cmp	r0, #0
   1b89c:	strne	r0, [r4, #28]
   1b8a0:	addne	r5, r0, #200	; 0xc8
   1b8a4:	strne	r5, [r4, #32]
   1b8a8:	beq	1b8c4 <argp_error@@Base+0xe8c>
   1b8ac:	mov	r0, r4
   1b8b0:	ldrd	r4, [sp]
   1b8b4:	ldrd	r6, [sp, #8]
   1b8b8:	ldr	r8, [sp, #16]
   1b8bc:	add	sp, sp, #20
   1b8c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b8c4:	mov	r0, r4
   1b8c8:	bl	17008 <argp_parse@@Base+0xcd8>
   1b8cc:	mov	r4, r5
   1b8d0:	b	1b8ac <argp_error@@Base+0xe74>
   1b8d4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b8d8:	strd	r6, [sp, #8]
   1b8dc:	strd	r8, [sp, #16]
   1b8e0:	strd	sl, [sp, #24]
   1b8e4:	str	lr, [sp, #32]
   1b8e8:	sub	sp, sp, #20
   1b8ec:	mov	r4, r0
   1b8f0:	ldr	r5, [r0, #24]
   1b8f4:	ldr	r3, [r0, #16]
   1b8f8:	add	r5, r5, r3
   1b8fc:	mov	sl, #32
   1b900:	str	sl, [sp, #8]
   1b904:	b	1b9ec <argp_error@@Base+0xfb4>
   1b908:	mov	r7, #0
   1b90c:	ldr	r0, [r4]
   1b910:	ldr	r3, [r0, #20]
   1b914:	ldr	r2, [r0, #24]
   1b918:	cmp	r3, r2
   1b91c:	addcc	r2, r3, #1
   1b920:	strcc	r2, [r0, #20]
   1b924:	strbcc	sl, [r3]
   1b928:	bcs	1ba58 <argp_error@@Base+0x1020>
   1b92c:	add	r7, r7, #1
   1b930:	cmp	r6, r7
   1b934:	bne	1b90c <argp_error@@Base+0xed4>
   1b938:	str	r6, [r4, #20]
   1b93c:	ldr	r8, [r4, #28]
   1b940:	sub	fp, r8, r5
   1b944:	mov	r2, fp
   1b948:	mov	r1, #10
   1b94c:	mov	r0, r5
   1b950:	bl	11a90 <memchr@plt>
   1b954:	mov	r6, r0
   1b958:	ldr	r3, [r4, #20]
   1b95c:	cmp	r3, #0
   1b960:	movlt	r3, #0
   1b964:	strlt	r3, [r4, #20]
   1b968:	cmp	r6, #0
   1b96c:	beq	1ba64 <argp_error@@Base+0x102c>
   1b970:	ldr	r0, [r4, #20]
   1b974:	ldr	r9, [r4, #8]
   1b978:	sub	r3, r6, r5
   1b97c:	add	r3, r3, r0
   1b980:	cmp	r3, r9
   1b984:	movlt	r3, #0
   1b988:	strlt	r3, [r4, #20]
   1b98c:	addlt	r5, r6, #1
   1b990:	blt	1b9ec <argp_error@@Base+0xfb4>
   1b994:	sub	r7, r9, #1
   1b998:	ldr	r3, [r4, #12]
   1b99c:	str	r3, [sp, #4]
   1b9a0:	cmp	r3, #0
   1b9a4:	bge	1ba90 <argp_error@@Base+0x1058>
   1b9a8:	cmp	r8, r6
   1b9ac:	bls	1bb20 <argp_error@@Base+0x10e8>
   1b9b0:	sub	r0, r7, r0
   1b9b4:	sub	r2, r8, r6
   1b9b8:	mov	r1, r6
   1b9bc:	add	r0, r5, r0
   1b9c0:	bl	117c0 <memmove@plt>
   1b9c4:	ldr	r3, [r4, #20]
   1b9c8:	sub	r7, r7, r3
   1b9cc:	add	r7, r5, r7
   1b9d0:	sub	r6, r7, r6
   1b9d4:	ldr	r3, [r4, #28]
   1b9d8:	sub	r6, r3, r6
   1b9dc:	str	r6, [r4, #28]
   1b9e0:	mov	r3, #0
   1b9e4:	str	r3, [r4, #20]
   1b9e8:	add	r5, r5, r9
   1b9ec:	ldr	r8, [r4, #28]
   1b9f0:	cmp	r8, r5
   1b9f4:	bls	1bb38 <argp_error@@Base+0x1100>
   1b9f8:	ldr	r3, [r4, #20]
   1b9fc:	cmp	r3, #0
   1ba00:	bne	1b93c <argp_error@@Base+0xf04>
   1ba04:	ldr	r6, [r4, #4]
   1ba08:	cmp	r6, #0
   1ba0c:	beq	1bde4 <argp_error@@Base+0x13ac>
   1ba10:	add	r3, r8, r6
   1ba14:	ldr	r2, [r4, #32]
   1ba18:	cmp	r2, r3
   1ba1c:	bls	1b908 <argp_error@@Base+0xed0>
   1ba20:	add	r7, r5, r6
   1ba24:	sub	r2, r8, r5
   1ba28:	mov	r1, r5
   1ba2c:	mov	r0, r7
   1ba30:	bl	117c0 <memmove@plt>
   1ba34:	ldr	r3, [r4, #28]
   1ba38:	add	r3, r3, r6
   1ba3c:	str	r3, [r4, #28]
   1ba40:	mov	r2, r6
   1ba44:	mov	r1, sl
   1ba48:	mov	r0, r5
   1ba4c:	bl	11a54 <memset@plt>
   1ba50:	mov	r5, r7
   1ba54:	b	1b938 <argp_error@@Base+0xf00>
   1ba58:	ldr	r1, [sp, #8]
   1ba5c:	bl	11ab4 <__overflow@plt>
   1ba60:	b	1b92c <argp_error@@Base+0xef4>
   1ba64:	ldr	r3, [r4, #20]
   1ba68:	add	r3, fp, r3
   1ba6c:	ldr	r7, [r4, #8]
   1ba70:	cmp	r3, r7
   1ba74:	bcc	1bb18 <argp_error@@Base+0x10e0>
   1ba78:	sub	r7, r7, #1
   1ba7c:	ldr	r3, [r4, #12]
   1ba80:	str	r3, [sp, #4]
   1ba84:	cmp	r3, #0
   1ba88:	blt	1bb20 <argp_error@@Base+0x10e8>
   1ba8c:	mov	r6, r8
   1ba90:	ldr	r3, [r4, #20]
   1ba94:	rsb	r3, r3, #1
   1ba98:	add	r7, r3, r7
   1ba9c:	adds	r7, r5, r7
   1baa0:	bcs	1bddc <argp_error@@Base+0x13a4>
   1baa4:	bl	119ac <__ctype_b_loc@plt>
   1baa8:	ldr	r0, [r0]
   1baac:	mov	r3, r7
   1bab0:	mov	r1, r3
   1bab4:	sub	r3, r3, #1
   1bab8:	ldrb	r2, [r1]
   1babc:	lsl	r2, r2, #1
   1bac0:	ldrh	r2, [r0, r2]
   1bac4:	tst	r2, #1
   1bac8:	bne	1bb64 <argp_error@@Base+0x112c>
   1bacc:	mov	r1, r3
   1bad0:	cmp	r3, r5
   1bad4:	bcs	1bab0 <argp_error@@Base+0x1078>
   1bad8:	add	r9, r1, #1
   1badc:	cmp	r9, r5
   1bae0:	bhi	1bba0 <argp_error@@Base+0x1168>
   1bae4:	cmp	r6, r7
   1bae8:	bhi	1bc3c <argp_error@@Base+0x1204>
   1baec:	cmp	r7, r6
   1baf0:	beq	1bc7c <argp_error@@Base+0x1244>
   1baf4:	bl	119ac <__ctype_b_loc@plt>
   1baf8:	ldr	r2, [r0]
   1bafc:	mov	r9, r7
   1bb00:	ldrb	r3, [r9, #1]!
   1bb04:	lsl	r3, r3, #1
   1bb08:	ldrh	r3, [r2, r3]
   1bb0c:	tst	r3, #1
   1bb10:	bne	1bb00 <argp_error@@Base+0x10c8>
   1bb14:	b	1bba4 <argp_error@@Base+0x116c>
   1bb18:	str	r3, [r4, #20]
   1bb1c:	b	1bb38 <argp_error@@Base+0x1100>
   1bb20:	ldr	r3, [r4, #20]
   1bb24:	add	r3, fp, r3
   1bb28:	str	r3, [r4, #20]
   1bb2c:	sub	r3, r7, r3
   1bb30:	add	r8, r8, r3
   1bb34:	str	r8, [r4, #28]
   1bb38:	ldr	r3, [r4, #28]
   1bb3c:	ldr	r2, [r4, #24]
   1bb40:	sub	r3, r3, r2
   1bb44:	str	r3, [r4, #16]
   1bb48:	add	sp, sp, #20
   1bb4c:	ldrd	r4, [sp]
   1bb50:	ldrd	r6, [sp, #8]
   1bb54:	ldrd	r8, [sp, #16]
   1bb58:	ldrd	sl, [sp, #24]
   1bb5c:	add	sp, sp, #32
   1bb60:	pop	{pc}		; (ldr pc, [sp], #4)
   1bb64:	add	r9, r1, #1
   1bb68:	cmp	r9, r5
   1bb6c:	bls	1bae4 <argp_error@@Base+0x10ac>
   1bb70:	cmp	r5, r1
   1bb74:	bhi	1bba0 <argp_error@@Base+0x1168>
   1bb78:	sub	ip, r5, #1
   1bb7c:	mov	r1, r3
   1bb80:	cmp	r3, ip
   1bb84:	beq	1bba0 <argp_error@@Base+0x1168>
   1bb88:	sub	r3, r3, #1
   1bb8c:	ldrb	r2, [r1]
   1bb90:	lsl	r2, r2, #1
   1bb94:	ldrh	r2, [r0, r2]
   1bb98:	tst	r2, #1
   1bb9c:	bne	1bb7c <argp_error@@Base+0x1144>
   1bba0:	add	r7, r1, #1
   1bba4:	add	r3, fp, #1
   1bba8:	add	r3, r5, r3
   1bbac:	cmp	r9, r3
   1bbb0:	beq	1bc8c <argp_error@@Base+0x1254>
   1bbb4:	add	r3, r7, #1
   1bbb8:	sub	r3, r9, r3
   1bbbc:	ldr	r2, [sp, #4]
   1bbc0:	cmp	r3, r2
   1bbc4:	bge	1bca0 <argp_error@@Base+0x1268>
   1bbc8:	cmp	r9, r8
   1bbcc:	bcs	1bca0 <argp_error@@Base+0x1268>
   1bbd0:	ldr	r3, [r4, #32]
   1bbd4:	sub	r3, r3, r8
   1bbd8:	ldr	r2, [sp, #4]
   1bbdc:	add	r2, r2, #1
   1bbe0:	cmp	r3, r2
   1bbe4:	bgt	1bd48 <argp_error@@Base+0x1310>
   1bbe8:	ldr	r0, [r4, #24]
   1bbec:	cmp	r0, r7
   1bbf0:	bcs	1bc04 <argp_error@@Base+0x11cc>
   1bbf4:	ldr	r3, [r4]
   1bbf8:	sub	r2, r7, r0
   1bbfc:	mov	r1, #1
   1bc00:	bl	1182c <fwrite_unlocked@plt>
   1bc04:	ldr	r0, [r4]
   1bc08:	ldr	r3, [r0, #20]
   1bc0c:	ldr	r2, [r0, #24]
   1bc10:	cmp	r3, r2
   1bc14:	addcc	r2, r3, #1
   1bc18:	strcc	r2, [r0, #20]
   1bc1c:	movcc	r2, #10
   1bc20:	strbcc	r2, [r3]
   1bc24:	bcs	1bd88 <argp_error@@Base+0x1350>
   1bc28:	ldr	r8, [r4, #24]
   1bc2c:	sub	r5, r5, r8
   1bc30:	add	fp, fp, r5
   1bc34:	mov	r5, r8
   1bc38:	b	1bcb0 <argp_error@@Base+0x1278>
   1bc3c:	add	r9, r7, #1
   1bc40:	str	r6, [sp, #12]
   1bc44:	mov	r7, r9
   1bc48:	cmp	r9, r6
   1bc4c:	beq	1bc74 <argp_error@@Base+0x123c>
   1bc50:	bl	119ac <__ctype_b_loc@plt>
   1bc54:	add	r9, r9, #1
   1bc58:	ldrb	r3, [r7]
   1bc5c:	ldr	r2, [r0]
   1bc60:	lsl	r3, r3, #1
   1bc64:	ldrh	r3, [r2, r3]
   1bc68:	tst	r3, #1
   1bc6c:	beq	1bc44 <argp_error@@Base+0x120c>
   1bc70:	b	1baf4 <argp_error@@Base+0x10bc>
   1bc74:	ldr	r6, [sp, #12]
   1bc78:	b	1baec <argp_error@@Base+0x10b4>
   1bc7c:	mov	r3, #0
   1bc80:	str	r3, [r4, #20]
   1bc84:	add	r5, r6, #1
   1bc88:	b	1b9ec <argp_error@@Base+0xfb4>
   1bc8c:	ldr	r3, [r4, #32]
   1bc90:	sub	r3, r3, r7
   1bc94:	ldr	r2, [sp, #4]
   1bc98:	cmp	r3, r2
   1bc9c:	ble	1bbc8 <argp_error@@Base+0x1190>
   1bca0:	mov	r3, #10
   1bca4:	strb	r3, [r7], #1
   1bca8:	mov	r8, r5
   1bcac:	mov	r5, r7
   1bcb0:	ldr	r3, [r4, #12]
   1bcb4:	sub	r2, r9, r5
   1bcb8:	cmp	r2, r3
   1bcbc:	bge	1bd94 <argp_error@@Base+0x135c>
   1bcc0:	add	r2, fp, #1
   1bcc4:	add	r2, r8, r2
   1bcc8:	cmp	r9, r2
   1bccc:	bne	1bce0 <argp_error@@Base+0x12a8>
   1bcd0:	ldr	r2, [r4, #32]
   1bcd4:	sub	r2, r2, r9
   1bcd8:	cmp	r3, r2
   1bcdc:	ble	1bd94 <argp_error@@Base+0x135c>
   1bce0:	cmp	r3, #0
   1bce4:	movgt	r6, #0
   1bce8:	ble	1bd1c <argp_error@@Base+0x12e4>
   1bcec:	ldr	r0, [r4]
   1bcf0:	ldr	r3, [r0, #20]
   1bcf4:	ldr	r2, [r0, #24]
   1bcf8:	cmp	r3, r2
   1bcfc:	addcc	r2, r3, #1
   1bd00:	strcc	r2, [r0, #20]
   1bd04:	strbcc	sl, [r3]
   1bd08:	bcs	1bdb8 <argp_error@@Base+0x1380>
   1bd0c:	add	r6, r6, #1
   1bd10:	ldr	r3, [r4, #12]
   1bd14:	cmp	r3, r6
   1bd18:	bgt	1bcec <argp_error@@Base+0x12b4>
   1bd1c:	cmp	r5, r9
   1bd20:	bcc	1bdc4 <argp_error@@Base+0x138c>
   1bd24:	sub	r9, r9, r8
   1bd28:	sub	fp, fp, r9
   1bd2c:	add	fp, r5, fp
   1bd30:	str	fp, [r4, #28]
   1bd34:	ldr	r3, [r4, #12]
   1bd38:	cmp	r3, #0
   1bd3c:	mvneq	r3, #0
   1bd40:	str	r3, [r4, #20]
   1bd44:	b	1b9ec <argp_error@@Base+0xfb4>
   1bd48:	sub	r8, r8, r9
   1bd4c:	mov	r0, r2
   1bd50:	mov	r2, r8
   1bd54:	mov	r1, r9
   1bd58:	add	r0, r7, r0
   1bd5c:	bl	117c0 <memmove@plt>
   1bd60:	ldr	r9, [r4, #12]
   1bd64:	add	r9, r9, #1
   1bd68:	add	r9, r7, r9
   1bd6c:	add	r8, r9, r8
   1bd70:	sub	fp, r8, r5
   1bd74:	mov	r3, #10
   1bd78:	strb	r3, [r7], #1
   1bd7c:	mov	r8, r5
   1bd80:	mov	r5, r7
   1bd84:	b	1bcb0 <argp_error@@Base+0x1278>
   1bd88:	mov	r1, #10
   1bd8c:	bl	11ab4 <__overflow@plt>
   1bd90:	b	1bc28 <argp_error@@Base+0x11f0>
   1bd94:	cmp	r3, #0
   1bd98:	movgt	r3, #0
   1bd9c:	ble	1bd1c <argp_error@@Base+0x12e4>
   1bda0:	strb	sl, [r5], #1
   1bda4:	add	r3, r3, #1
   1bda8:	ldr	r2, [r4, #12]
   1bdac:	cmp	r2, r3
   1bdb0:	bgt	1bda0 <argp_error@@Base+0x1368>
   1bdb4:	b	1bd1c <argp_error@@Base+0x12e4>
   1bdb8:	ldr	r1, [sp, #8]
   1bdbc:	bl	11ab4 <__overflow@plt>
   1bdc0:	b	1bd0c <argp_error@@Base+0x12d4>
   1bdc4:	add	r2, r8, fp
   1bdc8:	sub	r2, r2, r9
   1bdcc:	mov	r1, r9
   1bdd0:	mov	r0, r5
   1bdd4:	bl	117c0 <memmove@plt>
   1bdd8:	b	1bd24 <argp_error@@Base+0x12ec>
   1bddc:	mov	r1, r7
   1bde0:	b	1bad8 <argp_error@@Base+0x10a0>
   1bde4:	sub	fp, r8, r5
   1bde8:	mov	r2, fp
   1bdec:	mov	r1, #10
   1bdf0:	mov	r0, r5
   1bdf4:	bl	11a90 <memchr@plt>
   1bdf8:	mov	r6, r0
   1bdfc:	b	1b968 <argp_error@@Base+0xf30>
   1be00:	str	r4, [sp, #-8]!
   1be04:	str	lr, [sp, #4]
   1be08:	mov	r4, r0
   1be0c:	bl	1b8d4 <argp_error@@Base+0xe9c>
   1be10:	ldr	r2, [r4, #28]
   1be14:	ldr	r0, [r4, #24]
   1be18:	cmp	r2, r0
   1be1c:	bls	1be30 <argp_error@@Base+0x13f8>
   1be20:	ldr	r3, [r4]
   1be24:	sub	r2, r2, r0
   1be28:	mov	r1, #1
   1be2c:	bl	1182c <fwrite_unlocked@plt>
   1be30:	ldr	r0, [r4, #24]
   1be34:	bl	17008 <argp_parse@@Base+0xcd8>
   1be38:	mov	r0, r4
   1be3c:	bl	17008 <argp_parse@@Base+0xcd8>
   1be40:	ldr	r4, [sp]
   1be44:	add	sp, sp, #4
   1be48:	pop	{pc}		; (ldr pc, [sp], #4)
   1be4c:	ldr	r3, [r0, #32]
   1be50:	ldr	r2, [r0, #28]
   1be54:	sub	r3, r3, r2
   1be58:	cmp	r3, r1
   1be5c:	bcc	1be68 <argp_error@@Base+0x1430>
   1be60:	mov	r0, #1
   1be64:	bx	lr
   1be68:	strd	r4, [sp, #-16]!
   1be6c:	str	r6, [sp, #8]
   1be70:	str	lr, [sp, #12]
   1be74:	mov	r5, r1
   1be78:	mov	r4, r0
   1be7c:	bl	1b8d4 <argp_error@@Base+0xe9c>
   1be80:	ldr	r0, [r4, #24]
   1be84:	ldr	r2, [r4, #28]
   1be88:	ldr	r3, [r4]
   1be8c:	sub	r2, r2, r0
   1be90:	mov	r1, #1
   1be94:	bl	1182c <fwrite_unlocked@plt>
   1be98:	ldr	r2, [r4, #28]
   1be9c:	ldr	r3, [r4, #24]
   1bea0:	sub	r1, r2, r3
   1bea4:	cmp	r1, r0
   1bea8:	bne	1bee8 <argp_error@@Base+0x14b0>
   1beac:	str	r3, [r4, #28]
   1beb0:	mov	r2, #0
   1beb4:	str	r2, [r4, #16]
   1beb8:	ldr	r1, [r4, #32]
   1bebc:	sub	r1, r1, r3
   1bec0:	cmp	r1, r5
   1bec4:	movcs	r0, #1
   1bec8:	bcs	1bf10 <argp_error@@Base+0x14d8>
   1becc:	adds	r5, r1, r5
   1bed0:	bcc	1bf20 <argp_error@@Base+0x14e8>
   1bed4:	bl	11a24 <__errno_location@plt>
   1bed8:	mov	r3, #12
   1bedc:	str	r3, [r0]
   1bee0:	mov	r0, #0
   1bee4:	b	1bf10 <argp_error@@Base+0x14d8>
   1bee8:	sub	r2, r2, r0
   1beec:	str	r2, [r4, #28]
   1bef0:	ldr	r1, [r4, #16]
   1bef4:	sub	r1, r1, r0
   1bef8:	str	r1, [r4, #16]
   1befc:	sub	r2, r2, r3
   1bf00:	add	r1, r3, r0
   1bf04:	mov	r0, r3
   1bf08:	bl	117c0 <memmove@plt>
   1bf0c:	mov	r0, #0
   1bf10:	ldrd	r4, [sp]
   1bf14:	ldr	r6, [sp, #8]
   1bf18:	add	sp, sp, #12
   1bf1c:	pop	{pc}		; (ldr pc, [sp], #4)
   1bf20:	mov	r1, r5
   1bf24:	mov	r0, r3
   1bf28:	bl	176f0 <argp_parse@@Base+0x13c0>
   1bf2c:	cmp	r0, #0
   1bf30:	beq	1bed4 <argp_error@@Base+0x149c>
   1bf34:	str	r0, [r4, #24]
   1bf38:	add	r5, r0, r5
   1bf3c:	str	r5, [r4, #32]
   1bf40:	str	r0, [r4, #28]
   1bf44:	mov	r0, #1
   1bf48:	b	1bf10 <argp_error@@Base+0x14d8>
   1bf4c:	push	{r1, r2, r3}
   1bf50:	strd	r4, [sp, #-16]!
   1bf54:	str	r6, [sp, #8]
   1bf58:	str	lr, [sp, #12]
   1bf5c:	sub	sp, sp, #12
   1bf60:	mov	r5, r0
   1bf64:	mov	r1, #150	; 0x96
   1bf68:	add	r6, sp, #32
   1bf6c:	mov	r0, r5
   1bf70:	bl	1be4c <argp_error@@Base+0x1414>
   1bf74:	cmp	r0, #0
   1bf78:	beq	1bfac <argp_error@@Base+0x1574>
   1bf7c:	str	r6, [sp, #4]
   1bf80:	ldr	r0, [r5, #28]
   1bf84:	ldr	r4, [r5, #32]
   1bf88:	sub	r4, r4, r0
   1bf8c:	mov	r3, r6
   1bf90:	ldr	r2, [sp, #28]
   1bf94:	mov	r1, r4
   1bf98:	bl	11b68 <vsnprintf@plt>
   1bf9c:	cmp	r0, r4
   1bfa0:	bcc	1bfcc <argp_error@@Base+0x1594>
   1bfa4:	add	r1, r0, #1
   1bfa8:	b	1bf6c <argp_error@@Base+0x1534>
   1bfac:	mvn	r0, #0
   1bfb0:	add	sp, sp, #12
   1bfb4:	ldrd	r4, [sp]
   1bfb8:	ldr	r6, [sp, #8]
   1bfbc:	ldr	lr, [sp, #12]
   1bfc0:	add	sp, sp, #16
   1bfc4:	add	sp, sp, #12
   1bfc8:	bx	lr
   1bfcc:	ldr	r2, [r5, #28]
   1bfd0:	add	r3, r2, r0
   1bfd4:	str	r3, [r5, #28]
   1bfd8:	b	1bfb0 <argp_error@@Base+0x1578>
   1bfdc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1bfe0:	mov	r7, r0
   1bfe4:	ldr	r6, [pc, #72]	; 1c034 <argp_error@@Base+0x15fc>
   1bfe8:	ldr	r5, [pc, #72]	; 1c038 <argp_error@@Base+0x1600>
   1bfec:	add	r6, pc, r6
   1bff0:	add	r5, pc, r5
   1bff4:	sub	r6, r6, r5
   1bff8:	mov	r8, r1
   1bffc:	mov	r9, r2
   1c000:	bl	11704 <calloc@plt-0x20>
   1c004:	asrs	r6, r6, #2
   1c008:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c00c:	mov	r4, #0
   1c010:	add	r4, r4, #1
   1c014:	ldr	r3, [r5], #4
   1c018:	mov	r2, r9
   1c01c:	mov	r1, r8
   1c020:	mov	r0, r7
   1c024:	blx	r3
   1c028:	cmp	r6, r4
   1c02c:	bne	1c010 <argp_error@@Base+0x15d8>
   1c030:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c034:	andeq	r1, r1, r8, lsl pc
   1c038:	andeq	r1, r1, r0, lsl pc
   1c03c:	bx	lr

Disassembly of section .fini:

0001c040 <.fini>:
   1c040:	push	{r3, lr}
   1c044:	pop	{r3, pc}
