
../repos/dvidelabs-flatcc-3b39ef7/bin/flatcc:     file format elf32-littlearm


Disassembly of section .init:

00013fa0 <.init>:
   13fa0:	push	{r3, lr}
   13fa4:	bl	1449c <_start@@Base+0x3c>
   13fa8:	pop	{r3, pc}

Disassembly of section .plt:

00013fac <calloc@plt-0x14>:
   13fac:	push	{lr}		; (str lr, [sp, #-4]!)
   13fb0:	ldr	lr, [pc, #4]	; 13fbc <calloc@plt-0x4>
   13fb4:	add	lr, pc, lr
   13fb8:	ldr	pc, [lr, #8]!
   13fbc:	andeq	r7, r4, r4, asr #32

00013fc0 <calloc@plt>:
   13fc0:	add	ip, pc, #0, 12
   13fc4:	add	ip, ip, #290816	; 0x47000
   13fc8:	ldr	pc, [ip, #68]!	; 0x44

00013fcc <raise@plt>:
   13fcc:	add	ip, pc, #0, 12
   13fd0:	add	ip, ip, #290816	; 0x47000
   13fd4:	ldr	pc, [ip, #60]!	; 0x3c

00013fd8 <strcmp@plt>:
   13fd8:	add	ip, pc, #0, 12
   13fdc:	add	ip, ip, #290816	; 0x47000
   13fe0:	ldr	pc, [ip, #52]!	; 0x34

00013fe4 <fopen@plt>:
   13fe4:	add	ip, pc, #0, 12
   13fe8:	add	ip, ip, #290816	; 0x47000
   13fec:	ldr	pc, [ip, #44]!	; 0x2c

00013ff0 <free@plt>:
   13ff0:	add	ip, pc, #0, 12
   13ff4:	add	ip, ip, #290816	; 0x47000
   13ff8:	ldr	pc, [ip, #36]!	; 0x24

00013ffc <memcpy@plt>:
   13ffc:	add	ip, pc, #0, 12
   14000:	add	ip, ip, #290816	; 0x47000
   14004:	ldr	pc, [ip, #28]!

00014008 <ftell@plt>:
   14008:	add	ip, pc, #0, 12
   1400c:	add	ip, ip, #290816	; 0x47000
   14010:	ldr	pc, [ip, #20]!

00014014 <memcmp@plt>:
   14014:	add	ip, pc, #0, 12
   14018:	add	ip, ip, #290816	; 0x47000
   1401c:	ldr	pc, [ip, #12]!

00014020 <rewind@plt>:
   14020:	add	ip, pc, #0, 12
   14024:	add	ip, ip, #290816	; 0x47000
   14028:	ldr	pc, [ip, #4]!

0001402c <realloc@plt>:
   1402c:	add	ip, pc, #0, 12
   14030:	add	ip, ip, #286720	; 0x46000
   14034:	ldr	pc, [ip, #4092]!	; 0xffc

00014038 <fwrite@plt>:
   14038:	add	ip, pc, #0, 12
   1403c:	add	ip, ip, #286720	; 0x46000
   14040:	ldr	pc, [ip, #4084]!	; 0xff4

00014044 <strcpy@plt>:
   14044:	add	ip, pc, #0, 12
   14048:	add	ip, ip, #286720	; 0x46000
   1404c:	ldr	pc, [ip, #4076]!	; 0xfec

00014050 <fread@plt>:
   14050:	add	ip, pc, #0, 12
   14054:	add	ip, ip, #286720	; 0x46000
   14058:	ldr	pc, [ip, #4068]!	; 0xfe4

0001405c <puts@plt>:
   1405c:	add	ip, pc, #0, 12
   14060:	add	ip, ip, #286720	; 0x46000
   14064:	ldr	pc, [ip, #4060]!	; 0xfdc

00014068 <malloc@plt>:
   14068:	add	ip, pc, #0, 12
   1406c:	add	ip, ip, #286720	; 0x46000
   14070:	ldr	pc, [ip, #4052]!	; 0xfd4

00014074 <__libc_start_main@plt>:
   14074:	add	ip, pc, #0, 12
   14078:	add	ip, ip, #286720	; 0x46000
   1407c:	ldr	pc, [ip, #4044]!	; 0xfcc

00014080 <__ctype_toupper_loc@plt>:
   14080:	add	ip, pc, #0, 12
   14084:	add	ip, ip, #286720	; 0x46000
   14088:	ldr	pc, [ip, #4036]!	; 0xfc4

0001408c <__gmon_start__@plt>:
   1408c:	add	ip, pc, #0, 12
   14090:	add	ip, ip, #286720	; 0x46000
   14094:	ldr	pc, [ip, #4028]!	; 0xfbc

00014098 <exit@plt>:
   14098:	add	ip, pc, #0, 12
   1409c:	add	ip, ip, #286720	; 0x46000
   140a0:	ldr	pc, [ip, #4020]!	; 0xfb4

000140a4 <strlen@plt>:
   140a4:	add	ip, pc, #0, 12
   140a8:	add	ip, ip, #286720	; 0x46000
   140ac:	ldr	pc, [ip, #4012]!	; 0xfac

000140b0 <strchr@plt>:
   140b0:	add	ip, pc, #0, 12
   140b4:	add	ip, ip, #286720	; 0x46000
   140b8:	ldr	pc, [ip, #4004]!	; 0xfa4

000140bc <fprintf@plt>:
   140bc:	add	ip, pc, #0, 12
   140c0:	add	ip, ip, #286720	; 0x46000
   140c4:	ldr	pc, [ip, #3996]!	; 0xf9c

000140c8 <posix_memalign@plt>:
   140c8:	add	ip, pc, #0, 12
   140cc:	add	ip, ip, #286720	; 0x46000
   140d0:	ldr	pc, [ip, #3988]!	; 0xf94

000140d4 <memset@plt>:
   140d4:	add	ip, pc, #0, 12
   140d8:	add	ip, ip, #286720	; 0x46000
   140dc:	ldr	pc, [ip, #3980]!	; 0xf8c

000140e0 <strncpy@plt>:
   140e0:	add	ip, pc, #0, 12
   140e4:	add	ip, ip, #286720	; 0x46000
   140e8:	ldr	pc, [ip, #3972]!	; 0xf84

000140ec <strtod@plt>:
   140ec:	add	ip, pc, #0, 12
   140f0:	add	ip, ip, #286720	; 0x46000
   140f4:	ldr	pc, [ip, #3964]!	; 0xf7c

000140f8 <memchr@plt>:
   140f8:	add	ip, pc, #0, 12
   140fc:	add	ip, ip, #286720	; 0x46000
   14100:	ldr	pc, [ip, #3956]!	; 0xf74

00014104 <fclose@plt>:
   14104:	add	ip, pc, #0, 12
   14108:	add	ip, ip, #286720	; 0x46000
   1410c:	ldr	pc, [ip, #3948]!	; 0xf6c

00014110 <vfprintf@plt>:
   14110:	add	ip, pc, #0, 12
   14114:	add	ip, ip, #286720	; 0x46000
   14118:	ldr	pc, [ip, #3940]!	; 0xf64

0001411c <fputc@plt>:
   1411c:	add	ip, pc, #0, 12
   14120:	add	ip, ip, #286720	; 0x46000
   14124:	ldr	pc, [ip, #3932]!	; 0xf5c

00014128 <sprintf@plt>:
   14128:	add	ip, pc, #0, 12
   1412c:	add	ip, ip, #286720	; 0x46000
   14130:	ldr	pc, [ip, #3924]!	; 0xf54

00014134 <vsnprintf@plt>:
   14134:	add	ip, pc, #0, 12
   14138:	add	ip, ip, #286720	; 0x46000
   1413c:	ldr	pc, [ip, #3916]!	; 0xf4c

00014140 <qsort@plt>:
   14140:	add	ip, pc, #0, 12
   14144:	add	ip, ip, #286720	; 0x46000
   14148:	ldr	pc, [ip, #3908]!	; 0xf44

0001414c <fseek@plt>:
   1414c:	add	ip, pc, #0, 12
   14150:	add	ip, ip, #286720	; 0x46000
   14154:	ldr	pc, [ip, #3900]!	; 0xf3c

00014158 <fputs@plt>:
   14158:	add	ip, pc, #0, 12
   1415c:	add	ip, ip, #286720	; 0x46000
   14160:	ldr	pc, [ip, #3892]!	; 0xf34

00014164 <strncmp@plt>:
   14164:	add	ip, pc, #0, 12
   14168:	add	ip, ip, #286720	; 0x46000
   1416c:	ldr	pc, [ip, #3884]!	; 0xf2c

00014170 <abort@plt>:
   14170:	add	ip, pc, #0, 12
   14174:	add	ip, ip, #286720	; 0x46000
   14178:	ldr	pc, [ip, #3876]!	; 0xf24

0001417c <__assert_fail@plt>:
   1417c:	add	ip, pc, #0, 12
   14180:	add	ip, ip, #286720	; 0x46000
   14184:	ldr	pc, [ip, #3868]!	; 0xf1c

Disassembly of section .text:

00014188 <main@@Base>:
   14188:	cmp	r0, #1
   1418c:	push	{r4, r5, r6, r7, lr}
   14190:	sub	sp, sp, #228	; 0xe4
   14194:	bgt	141ac <main@@Base+0x24>
   14198:	ldr	r3, [pc, #668]	; 1443c <main@@Base+0x2b4>
   1419c:	ldr	r0, [r3]
   141a0:	bl	14550 <usage@@Base>
   141a4:	mvn	r0, #0
   141a8:	bl	14098 <exit@plt>
   141ac:	mov	r4, r0
   141b0:	mov	r0, sp
   141b4:	lsl	r5, r4, #2
   141b8:	mov	r6, r1
   141bc:	bl	14cb8 <flatcc_init_options@@Base>
   141c0:	mov	r0, r5
   141c4:	bl	14068 <malloc@plt>
   141c8:	cmp	r0, #0
   141cc:	str	r0, [sp, #200]	; 0xc8
   141d0:	bne	141e8 <main@@Base+0x60>
   141d4:	ldr	r3, [pc, #608]	; 1443c <main@@Base+0x2b4>
   141d8:	ldr	r0, [pc, #608]	; 14440 <main@@Base+0x2b8>
   141dc:	ldr	r1, [r3]
   141e0:	bl	14158 <fputs@plt>
   141e4:	b	141a4 <main@@Base+0x1c>
   141e8:	mov	r0, r5
   141ec:	bl	14068 <malloc@plt>
   141f0:	cmp	r0, #0
   141f4:	str	r0, [sp, #204]	; 0xcc
   141f8:	bne	14218 <main@@Base+0x90>
   141fc:	ldr	r3, [pc, #568]	; 1443c <main@@Base+0x2b4>
   14200:	ldr	r0, [pc, #568]	; 14440 <main@@Base+0x2b8>
   14204:	ldr	r1, [r3]
   14208:	bl	14158 <fputs@plt>
   1420c:	ldr	r0, [sp, #200]	; 0xc8
   14210:	bl	13ff0 <free@plt>
   14214:	b	141a4 <main@@Base+0x1c>
   14218:	mov	r2, sp
   1421c:	mov	r1, r6
   14220:	mov	r0, r4
   14224:	bl	14c10 <parse_opts@@Base>
   14228:	ldr	r3, [sp, #144]	; 0x90
   1422c:	ldr	r2, [sp, #156]	; 0x9c
   14230:	cmp	r2, #0
   14234:	moveq	r1, r2
   14238:	beq	14244 <main@@Base+0xbc>
   1423c:	adds	r1, r3, #0
   14240:	movne	r1, #1
   14244:	ldr	r0, [sp, #212]	; 0xd4
   14248:	str	r1, [sp, #148]	; 0x94
   1424c:	cmp	r0, #0
   14250:	bne	142e8 <main@@Base+0x160>
   14254:	cmp	r3, #0
   14258:	beq	14268 <main@@Base+0xe0>
   1425c:	ldr	r3, [sp, #180]	; 0xb4
   14260:	cmp	r3, #0
   14264:	beq	14290 <main@@Base+0x108>
   14268:	ldr	r3, [pc, #460]	; 1443c <main@@Base+0x2b4>
   1426c:	ldr	r0, [pc, #464]	; 14444 <main@@Base+0x2bc>
   14270:	ldr	r1, [r3]
   14274:	bl	14158 <fputs@plt>
   14278:	ldr	r3, [pc, #444]	; 1443c <main@@Base+0x2b4>
   1427c:	mvn	r5, #0
   14280:	ldr	r0, [pc, #448]	; 14448 <main@@Base+0x2c0>
   14284:	ldr	r1, [r3]
   14288:	bl	14158 <fputs@plt>
   1428c:	b	142cc <main@@Base+0x144>
   14290:	mov	r2, r3
   14294:	mov	r1, r3
   14298:	mov	r0, sp
   1429c:	bl	14d70 <flatcc_create_context@@Base>
   142a0:	subs	r4, r0, #0
   142a4:	bne	142b8 <main@@Base+0x130>
   142a8:	ldr	r3, [pc, #396]	; 1443c <main@@Base+0x2b4>
   142ac:	ldr	r0, [pc, #408]	; 1444c <main@@Base+0x2c4>
   142b0:	ldr	r1, [r3]
   142b4:	b	14274 <main@@Base+0xec>
   142b8:	bl	14e94 <flatcc_generate_files@@Base>
   142bc:	subs	r5, r0, #0
   142c0:	bne	1440c <main@@Base+0x284>
   142c4:	mov	r0, r4
   142c8:	bl	14fb8 <flatcc_destroy_context@@Base>
   142cc:	ldr	r0, [sp, #200]	; 0xc8
   142d0:	bl	13ff0 <free@plt>
   142d4:	ldr	r0, [sp, #204]	; 0xcc
   142d8:	bl	13ff0 <free@plt>
   142dc:	mov	r0, r5
   142e0:	add	sp, sp, #228	; 0xe4
   142e4:	pop	{r4, r5, r6, r7, pc}
   142e8:	ldr	ip, [sp, #152]	; 0x98
   142ec:	orr	r3, r2, r3
   142f0:	ldr	r0, [sp, #160]	; 0xa0
   142f4:	orr	r3, r3, ip
   142f8:	ldr	ip, [sp, #164]	; 0xa4
   142fc:	orr	r3, r3, r0
   14300:	orr	r3, r3, ip
   14304:	ldr	ip, [sp, #168]	; 0xa8
   14308:	orr	r3, r3, ip
   1430c:	orr	r3, r3, r1
   14310:	ldr	r1, [sp, #180]	; 0xb4
   14314:	cmp	r1, #0
   14318:	bne	14418 <main@@Base+0x290>
   1431c:	cmp	r3, #0
   14320:	beq	1432c <main@@Base+0x1a4>
   14324:	orrs	r3, r2, r0
   14328:	beq	14334 <main@@Base+0x1ac>
   1432c:	mov	r3, #1
   14330:	str	r3, [sp, #152]	; 0x98
   14334:	ldr	r3, [sp, #120]	; 0x78
   14338:	cmp	r3, #0
   1433c:	beq	14378 <main@@Base+0x1f0>
   14340:	ldr	r3, [sp, #116]	; 0x74
   14344:	cmp	r3, #0
   14348:	bne	14378 <main@@Base+0x1f0>
   1434c:	ldr	r3, [pc, #232]	; 1443c <main@@Base+0x2b4>
   14350:	ldr	r0, [pc, #248]	; 14450 <main@@Base+0x2c8>
   14354:	ldr	r1, [r3]
   14358:	b	14274 <main@@Base+0xec>
   1435c:	ldr	r3, [sp, #124]	; 0x7c
   14360:	cmp	r3, #0
   14364:	beq	14334 <main@@Base+0x1ac>
   14368:	ldr	r3, [pc, #204]	; 1443c <main@@Base+0x2b4>
   1436c:	ldr	r0, [pc, #224]	; 14454 <main@@Base+0x2cc>
   14370:	ldr	r1, [r3]
   14374:	b	14274 <main@@Base+0xec>
   14378:	ldr	r3, [sp, #108]	; 0x6c
   1437c:	cmp	r3, #0
   14380:	beq	143a0 <main@@Base+0x218>
   14384:	ldr	r3, [sp, #124]	; 0x7c
   14388:	cmp	r3, #0
   1438c:	beq	143a0 <main@@Base+0x218>
   14390:	ldr	r3, [pc, #164]	; 1443c <main@@Base+0x2b4>
   14394:	ldr	r0, [pc, #188]	; 14458 <main@@Base+0x2d0>
   14398:	ldr	r1, [r3]
   1439c:	b	14274 <main@@Base+0xec>
   143a0:	ldr	r6, [sp, #204]	; 0xcc
   143a4:	mov	r5, #0
   143a8:	mov	r7, #1
   143ac:	ldr	r3, [sp, #212]	; 0xd4
   143b0:	cmp	r3, r5
   143b4:	movle	r5, #0
   143b8:	ble	142cc <main@@Base+0x144>
   143bc:	mov	r3, #0
   143c0:	mov	r0, sp
   143c4:	ldr	r1, [r6, r5, lsl #2]
   143c8:	mov	r2, r3
   143cc:	bl	14d70 <flatcc_create_context@@Base>
   143d0:	subs	r4, r0, #0
   143d4:	beq	142a8 <main@@Base+0x120>
   143d8:	ldr	r1, [r6, r5, lsl #2]
   143dc:	bl	14fe4 <flatcc_parse_file@@Base>
   143e0:	cmp	r0, #0
   143e4:	bne	1440c <main@@Base+0x284>
   143e8:	mov	r0, r4
   143ec:	bl	14e94 <flatcc_generate_files@@Base>
   143f0:	cmp	r0, #0
   143f4:	bne	1440c <main@@Base+0x284>
   143f8:	mov	r0, r4
   143fc:	add	r5, r5, #1
   14400:	bl	14fb8 <flatcc_destroy_context@@Base>
   14404:	str	r7, [sp, #128]	; 0x80
   14408:	b	143ac <main@@Base+0x224>
   1440c:	mov	r0, r4
   14410:	bl	14fb8 <flatcc_destroy_context@@Base>
   14414:	b	14278 <main@@Base+0xf0>
   14418:	cmp	r3, #0
   1441c:	beq	14334 <main@@Base+0x1ac>
   14420:	ldr	r3, [sp, #108]	; 0x6c
   14424:	cmp	r3, #0
   14428:	beq	1435c <main@@Base+0x1d4>
   1442c:	ldr	r3, [pc, #8]	; 1443c <main@@Base+0x2b4>
   14430:	ldr	r0, [pc, #36]	; 1445c <main@@Base+0x2d4>
   14434:	ldr	r1, [r3]
   14438:	b	14274 <main@@Base+0xec>
   1443c:	strheq	fp, [r5], -r0
   14440:	andeq	r0, r3, ip, lsl #15
   14444:	andeq	r0, r3, r7, lsr #15
   14448:			; <UNDEFINED> instruction: 0x000308b4
   1444c:			; <UNDEFINED> instruction: 0x000307b9
   14450:	andeq	r0, r3, r0, ror #16
   14454:	andeq	r0, r3, r5, lsr #16
   14458:	andeq	r0, r3, sp, lsl #17
   1445c:	andeq	r0, r3, fp, ror #15

00014460 <_start@@Base>:
   14460:	mov	fp, #0
   14464:	mov	lr, #0
   14468:	pop	{r1}		; (ldr r1, [sp], #4)
   1446c:	mov	r2, sp
   14470:	push	{r2}		; (str r2, [sp, #-4]!)
   14474:	push	{r0}		; (str r0, [sp, #-4]!)
   14478:	ldr	ip, [pc, #16]	; 14490 <_start@@Base+0x30>
   1447c:	push	{ip}		; (str ip, [sp, #-4]!)
   14480:	ldr	r0, [pc, #12]	; 14494 <_start@@Base+0x34>
   14484:	ldr	r3, [pc, #12]	; 14498 <_start@@Base+0x38>
   14488:	bl	14074 <__libc_start_main@plt>
   1448c:	bl	14170 <abort@plt>
   14490:	andeq	pc, r2, r0, ror #4
   14494:	andeq	r4, r1, r8, lsl #3
   14498:	andeq	pc, r2, r0, lsl #4
   1449c:	ldr	r3, [pc, #20]	; 144b8 <_start@@Base+0x58>
   144a0:	ldr	r2, [pc, #20]	; 144bc <_start@@Base+0x5c>
   144a4:	add	r3, pc, r3
   144a8:	ldr	r2, [r3, r2]
   144ac:	cmp	r2, #0
   144b0:	bxeq	lr
   144b4:	b	1408c <__gmon_start__@plt>
   144b8:	andeq	r6, r4, r4, asr fp
   144bc:	andeq	r0, r0, r4, lsr #1
   144c0:	ldr	r0, [pc, #24]	; 144e0 <_start@@Base+0x80>
   144c4:	ldr	r3, [pc, #24]	; 144e4 <_start@@Base+0x84>
   144c8:	cmp	r3, r0
   144cc:	bxeq	lr
   144d0:	ldr	r3, [pc, #16]	; 144e8 <_start@@Base+0x88>
   144d4:	cmp	r3, #0
   144d8:	bxeq	lr
   144dc:	bx	r3
   144e0:	strheq	fp, [r5], -r0
   144e4:	strheq	fp, [r5], -r0
   144e8:	andeq	r0, r0, r0
   144ec:	ldr	r0, [pc, #36]	; 14518 <_start@@Base+0xb8>
   144f0:	ldr	r1, [pc, #36]	; 1451c <_start@@Base+0xbc>
   144f4:	sub	r1, r1, r0
   144f8:	asr	r1, r1, #2
   144fc:	add	r1, r1, r1, lsr #31
   14500:	asrs	r1, r1, #1
   14504:	bxeq	lr
   14508:	ldr	r3, [pc, #16]	; 14520 <_start@@Base+0xc0>
   1450c:	cmp	r3, #0
   14510:	bxeq	lr
   14514:	bx	r3
   14518:	strheq	fp, [r5], -r0
   1451c:	strheq	fp, [r5], -r0
   14520:	andeq	r0, r0, r0
   14524:	push	{r4, lr}
   14528:	ldr	r4, [pc, #24]	; 14548 <_start@@Base+0xe8>
   1452c:	ldrb	r3, [r4]
   14530:	cmp	r3, #0
   14534:	popne	{r4, pc}
   14538:	bl	144c0 <_start@@Base+0x60>
   1453c:	mov	r3, #1
   14540:	strb	r3, [r4]
   14544:	pop	{r4, pc}
   14548:	strheq	fp, [r5], -r8
   1454c:	b	144ec <_start@@Base+0x8c>

00014550 <usage@@Base>:
   14550:	push	{r4, lr}
   14554:	mov	r4, r0
   14558:	ldr	r2, [pc, #48]	; 14590 <usage@@Base+0x40>
   1455c:	ldr	r1, [pc, #48]	; 14594 <usage@@Base+0x44>
   14560:	bl	140bc <fprintf@plt>
   14564:	ldr	r2, [pc, #44]	; 14598 <usage@@Base+0x48>
   14568:	mov	r0, r4
   1456c:	ldr	r1, [pc, #40]	; 1459c <usage@@Base+0x4c>
   14570:	bl	140bc <fprintf@plt>
   14574:	mov	r1, r4
   14578:	ldr	r0, [pc, #32]	; 145a0 <usage@@Base+0x50>
   1457c:	bl	14158 <fputs@plt>
   14580:	mov	r1, r4
   14584:	ldr	r0, [pc, #24]	; 145a4 <usage@@Base+0x54>
   14588:	pop	{r4, lr}
   1458c:	b	14158 <fputs@plt>
   14590:	andeq	pc, r2, r4, ror r2	; <UNPREDICTABLE>
   14594:	andeq	r7, r4, lr, asr #13
   14598:	andeq	pc, r2, sl, lsr #5
   1459c:			; <UNDEFINED> instruction: 0x0002f2b0
   145a0:			; <UNDEFINED> instruction: 0x0002f2bd
   145a4:	andeq	pc, r2, r1, ror #5

000145a8 <help@@Base>:
   145a8:	push	{r4, lr}
   145ac:	mov	r4, r0
   145b0:	bl	14550 <usage@@Base>
   145b4:	mov	r1, r4
   145b8:	ldr	r0, [pc, #4]	; 145c4 <help@@Base+0x1c>
   145bc:	pop	{r4, lr}
   145c0:	b	14158 <fputs@plt>
   145c4:	andeq	pc, r2, r3, ror #16

000145c8 <parse_bool_arg@@Base>:
   145c8:	push	{r4, lr}
   145cc:	mov	r4, r0
   145d0:	ldr	r1, [pc, #104]	; 14640 <parse_bool_arg@@Base+0x78>
   145d4:	bl	13fd8 <strcmp@plt>
   145d8:	cmp	r0, #0
   145dc:	popeq	{r4, pc}
   145e0:	mov	r0, r4
   145e4:	ldr	r1, [pc, #88]	; 14644 <parse_bool_arg@@Base+0x7c>
   145e8:	bl	13fd8 <strcmp@plt>
   145ec:	cmp	r0, #0
   145f0:	popeq	{r4, pc}
   145f4:	mov	r0, r4
   145f8:	ldr	r1, [pc, #72]	; 14648 <parse_bool_arg@@Base+0x80>
   145fc:	bl	13fd8 <strcmp@plt>
   14600:	cmp	r0, #0
   14604:	beq	14638 <parse_bool_arg@@Base+0x70>
   14608:	ldr	r1, [pc, #60]	; 1464c <parse_bool_arg@@Base+0x84>
   1460c:	mov	r0, r4
   14610:	bl	13fd8 <strcmp@plt>
   14614:	cmp	r0, #0
   14618:	beq	14638 <parse_bool_arg@@Base+0x70>
   1461c:	ldr	r3, [pc, #44]	; 14650 <parse_bool_arg@@Base+0x88>
   14620:	mov	r2, r4
   14624:	ldr	r1, [pc, #40]	; 14654 <parse_bool_arg@@Base+0x8c>
   14628:	ldr	r0, [r3]
   1462c:	bl	140bc <fprintf@plt>
   14630:	mvn	r0, #0
   14634:	pop	{r4, pc}
   14638:	mov	r0, #1
   1463c:	pop	{r4, pc}
   14640:	andeq	r9, r3, fp, lsr r2
   14644:	andeq	r0, r3, r8, lsr #9
   14648:	andeq	sl, r4, fp, ror r6
   1464c:	andeq	r0, r3, fp, lsr #9
   14650:	strheq	fp, [r5], -r0
   14654:	andeq	r0, r3, pc, lsr #9

00014658 <match_long_arg@@Base>:
   14658:	push	{r4, r5, r6, lr}
   1465c:	mov	r5, r0
   14660:	mov	r4, r2
   14664:	bl	14164 <strncmp@plt>
   14668:	cmp	r0, #0
   1466c:	bne	14688 <match_long_arg@@Base+0x30>
   14670:	mov	r0, r5
   14674:	bl	140a4 <strlen@plt>
   14678:	sub	r0, r0, r4
   1467c:	clz	r0, r0
   14680:	lsr	r0, r0, #5
   14684:	pop	{r4, r5, r6, pc}
   14688:	mov	r0, #0
   1468c:	pop	{r4, r5, r6, pc}

00014690 <set_opt@@Base>:
   14690:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14694:	mov	r4, r0
   14698:	mov	r0, r1
   1469c:	mov	r5, r1
   146a0:	mov	r6, r2
   146a4:	bl	140a4 <strlen@plt>
   146a8:	mov	r9, r0
   146ac:	mov	r1, #61	; 0x3d
   146b0:	mov	r0, r5
   146b4:	bl	140b0 <strchr@plt>
   146b8:	ldrb	r7, [r5]
   146bc:	subs	r8, r0, #0
   146c0:	addne	r6, r8, #1
   146c4:	subne	r9, r8, r5
   146c8:	cmp	r7, #104	; 0x68
   146cc:	beq	146e4 <set_opt@@Base+0x54>
   146d0:	mov	r1, r5
   146d4:	ldr	r0, [pc, #1036]	; 14ae8 <set_opt@@Base+0x458>
   146d8:	bl	13fd8 <strcmp@plt>
   146dc:	cmp	r0, #0
   146e0:	bne	146f8 <set_opt@@Base+0x68>
   146e4:	ldr	r3, [pc, #1024]	; 14aec <set_opt@@Base+0x45c>
   146e8:	ldr	r0, [r3]
   146ec:	bl	145a8 <help@@Base>
   146f0:	mov	r0, #0
   146f4:	bl	14098 <exit@plt>
   146f8:	mov	r1, r5
   146fc:	ldr	r0, [pc, #1004]	; 14af0 <set_opt@@Base+0x460>
   14700:	bl	13fd8 <strcmp@plt>
   14704:	subs	sl, r0, #0
   14708:	bne	14734 <set_opt@@Base+0xa4>
   1470c:	ldr	r4, [pc, #992]	; 14af4 <set_opt@@Base+0x464>
   14710:	ldr	r2, [pc, #992]	; 14af8 <set_opt@@Base+0x468>
   14714:	ldr	r1, [pc, #992]	; 14afc <set_opt@@Base+0x46c>
   14718:	ldr	r0, [r4]
   1471c:	bl	140bc <fprintf@plt>
   14720:	ldr	r2, [pc, #984]	; 14b00 <set_opt@@Base+0x470>
   14724:	ldr	r1, [pc, #984]	; 14b04 <set_opt@@Base+0x474>
   14728:	ldr	r0, [r4]
   1472c:	bl	140bc <fprintf@plt>
   14730:	b	146f0 <set_opt@@Base+0x60>
   14734:	mov	r1, r5
   14738:	ldr	r0, [pc, #968]	; 14b08 <set_opt@@Base+0x478>
   1473c:	bl	13fd8 <strcmp@plt>
   14740:	cmp	r0, #0
   14744:	bne	14754 <set_opt@@Base+0xc4>
   14748:	mov	r3, #1
   1474c:	str	r3, [r4, #108]	; 0x6c
   14750:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14754:	mov	r1, r5
   14758:	ldr	r0, [pc, #940]	; 14b0c <set_opt@@Base+0x47c>
   1475c:	bl	13fd8 <strcmp@plt>
   14760:	cmp	r0, #0
   14764:	bne	14774 <set_opt@@Base+0xe4>
   14768:	mov	r3, #1
   1476c:	str	r3, [r4, #180]	; 0xb4
   14770:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14774:	mov	r1, r5
   14778:	ldr	r0, [pc, #912]	; 14b10 <set_opt@@Base+0x480>
   1477c:	bl	13fd8 <strcmp@plt>
   14780:	cmp	r0, #0
   14784:	bne	14794 <set_opt@@Base+0x104>
   14788:	mov	r3, #1
   1478c:	str	r3, [r4, #164]	; 0xa4
   14790:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14794:	mov	r1, r5
   14798:	ldr	r0, [pc, #884]	; 14b14 <set_opt@@Base+0x484>
   1479c:	bl	13fd8 <strcmp@plt>
   147a0:	cmp	r0, #0
   147a4:	moveq	r3, #1
   147a8:	beq	147c8 <set_opt@@Base+0x138>
   147ac:	mov	r1, r5
   147b0:	ldr	r0, [pc, #864]	; 14b18 <set_opt@@Base+0x488>
   147b4:	bl	13fd8 <strcmp@plt>
   147b8:	cmp	r0, #0
   147bc:	bne	147d0 <set_opt@@Base+0x140>
   147c0:	mov	r3, #1
   147c4:	str	r3, [r4, #164]	; 0xa4
   147c8:	str	r3, [r4, #168]	; 0xa8
   147cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   147d0:	mov	r2, r9
   147d4:	mov	r1, r5
   147d8:	ldr	r0, [pc, #828]	; 14b1c <set_opt@@Base+0x48c>
   147dc:	bl	14658 <match_long_arg@@Base>
   147e0:	cmp	r0, #0
   147e4:	beq	1482c <set_opt@@Base+0x19c>
   147e8:	ldr	r5, [pc, #772]	; 14af4 <set_opt@@Base+0x464>
   147ec:	ldr	r0, [pc, #812]	; 14b20 <set_opt@@Base+0x490>
   147f0:	ldr	r1, [r5]
   147f4:	bl	14158 <fputs@plt>
   147f8:	cmp	r6, #0
   147fc:	ldreq	r0, [pc, #800]	; 14b24 <set_opt@@Base+0x494>
   14800:	ldreq	r1, [r5]
   14804:	beq	14858 <set_opt@@Base+0x1c8>
   14808:	mov	r0, r6
   1480c:	bl	145c8 <parse_bool_arg@@Base>
   14810:	str	r0, [r4, #184]	; 0xb8
   14814:	cmp	r0, #0
   14818:	blt	1485c <set_opt@@Base+0x1cc>
   1481c:	cmp	r8, #0
   14820:	bne	14ae0 <set_opt@@Base+0x450>
   14824:	mov	r0, #2
   14828:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1482c:	mov	r2, r9
   14830:	mov	r1, r5
   14834:	ldr	r0, [pc, #748]	; 14b28 <set_opt@@Base+0x498>
   14838:	bl	14658 <match_long_arg@@Base>
   1483c:	cmp	r0, #0
   14840:	beq	14874 <set_opt@@Base+0x1e4>
   14844:	cmp	r6, #0
   14848:	bne	14864 <set_opt@@Base+0x1d4>
   1484c:	ldr	r3, [pc, #672]	; 14af4 <set_opt@@Base+0x464>
   14850:	ldr	r0, [pc, #724]	; 14b2c <set_opt@@Base+0x49c>
   14854:	ldr	r1, [r3]
   14858:	bl	14158 <fputs@plt>
   1485c:	mvn	r0, #0
   14860:	b	146f4 <set_opt@@Base+0x64>
   14864:	mov	r0, r6
   14868:	bl	145c8 <parse_bool_arg@@Base>
   1486c:	str	r0, [r4, #188]	; 0xbc
   14870:	b	14814 <set_opt@@Base+0x184>
   14874:	mov	r2, r9
   14878:	mov	r1, r5
   1487c:	ldr	r0, [pc, #684]	; 14b30 <set_opt@@Base+0x4a0>
   14880:	bl	14658 <match_long_arg@@Base>
   14884:	cmp	r0, #0
   14888:	beq	148b0 <set_opt@@Base+0x220>
   1488c:	cmp	r6, #0
   14890:	movne	r3, #1
   14894:	strne	r6, [r4, #116]	; 0x74
   14898:	strne	r3, [r4, #112]	; 0x70
   1489c:	bne	1481c <set_opt@@Base+0x18c>
   148a0:	ldr	r3, [pc, #588]	; 14af4 <set_opt@@Base+0x464>
   148a4:	ldr	r0, [pc, #648]	; 14b34 <set_opt@@Base+0x4a4>
   148a8:	ldr	r1, [r3]
   148ac:	b	14858 <set_opt@@Base+0x1c8>
   148b0:	mov	r2, r9
   148b4:	mov	r1, r5
   148b8:	ldr	r0, [pc, #632]	; 14b38 <set_opt@@Base+0x4a8>
   148bc:	bl	14658 <match_long_arg@@Base>
   148c0:	cmp	r0, #0
   148c4:	beq	148e4 <set_opt@@Base+0x254>
   148c8:	cmp	r6, #0
   148cc:	strne	r6, [r4, #120]	; 0x78
   148d0:	bne	1481c <set_opt@@Base+0x18c>
   148d4:	ldr	r3, [pc, #536]	; 14af4 <set_opt@@Base+0x464>
   148d8:	ldr	r0, [pc, #604]	; 14b3c <set_opt@@Base+0x4ac>
   148dc:	ldr	r1, [r3]
   148e0:	b	14858 <set_opt@@Base+0x1c8>
   148e4:	mov	r2, r9
   148e8:	mov	r1, r5
   148ec:	ldr	r0, [pc, #588]	; 14b40 <set_opt@@Base+0x4b0>
   148f0:	bl	14658 <match_long_arg@@Base>
   148f4:	cmp	r0, #0
   148f8:	beq	14918 <set_opt@@Base+0x288>
   148fc:	cmp	r6, #0
   14900:	strne	r6, [r4, #124]	; 0x7c
   14904:	bne	1481c <set_opt@@Base+0x18c>
   14908:	ldr	r3, [pc, #484]	; 14af4 <set_opt@@Base+0x464>
   1490c:	ldr	r0, [pc, #560]	; 14b44 <set_opt@@Base+0x4b4>
   14910:	ldr	r1, [r3]
   14914:	b	14858 <set_opt@@Base+0x1c8>
   14918:	mov	r2, r9
   1491c:	mov	r1, r5
   14920:	ldr	r0, [pc, #544]	; 14b48 <set_opt@@Base+0x4b8>
   14924:	bl	14658 <match_long_arg@@Base>
   14928:	cmp	r0, #0
   1492c:	beq	1494c <set_opt@@Base+0x2bc>
   14930:	cmp	r6, #0
   14934:	strne	r6, [r4, #196]	; 0xc4
   14938:	bne	1481c <set_opt@@Base+0x18c>
   1493c:	ldr	r3, [pc, #432]	; 14af4 <set_opt@@Base+0x464>
   14940:	ldr	r0, [pc, #516]	; 14b4c <set_opt@@Base+0x4bc>
   14944:	ldr	r1, [r3]
   14948:	b	14858 <set_opt@@Base+0x1c8>
   1494c:	mov	r2, r9
   14950:	mov	r1, r5
   14954:	ldr	r0, [pc, #500]	; 14b50 <set_opt@@Base+0x4c0>
   14958:	bl	14658 <match_long_arg@@Base>
   1495c:	cmp	r0, #0
   14960:	beq	14980 <set_opt@@Base+0x2f0>
   14964:	cmp	r6, #0
   14968:	strne	r6, [r4, #192]	; 0xc0
   1496c:	bne	1481c <set_opt@@Base+0x18c>
   14970:	ldr	r3, [pc, #380]	; 14af4 <set_opt@@Base+0x464>
   14974:	ldr	r0, [pc, #472]	; 14b54 <set_opt@@Base+0x4c4>
   14978:	ldr	r1, [r3]
   1497c:	b	14858 <set_opt@@Base+0x1c8>
   14980:	cmp	r7, #100	; 0x64
   14984:	beq	14abc <set_opt@@Base+0x42c>
   14988:	bhi	149dc <set_opt@@Base+0x34c>
   1498c:	cmp	r7, #73	; 0x49
   14990:	beq	14a28 <set_opt@@Base+0x398>
   14994:	bhi	149c0 <set_opt@@Base+0x330>
   14998:	cmp	r7, #45	; 0x2d
   1499c:	moveq	r2, r5
   149a0:	ldreq	r1, [pc, #432]	; 14b58 <set_opt@@Base+0x4c8>
   149a4:	beq	149b0 <set_opt@@Base+0x320>
   149a8:	mov	r2, r7
   149ac:	ldr	r1, [pc, #424]	; 14b5c <set_opt@@Base+0x4cc>
   149b0:	ldr	r3, [pc, #316]	; 14af4 <set_opt@@Base+0x464>
   149b4:	ldr	r0, [r3]
   149b8:	bl	140bc <fprintf@plt>
   149bc:	b	1485c <set_opt@@Base+0x1cc>
   149c0:	cmp	r7, #97	; 0x61
   149c4:	mov	r3, #1
   149c8:	beq	14ac8 <set_opt@@Base+0x438>
   149cc:	cmp	r7, #99	; 0x63
   149d0:	bne	149a8 <set_opt@@Base+0x318>
   149d4:	str	r3, [r4, #144]	; 0x90
   149d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   149dc:	cmp	r7, #114	; 0x72
   149e0:	beq	14ab0 <set_opt@@Base+0x420>
   149e4:	bhi	14a0c <set_opt@@Base+0x37c>
   149e8:	cmp	r7, #111	; 0x6f
   149ec:	bne	149a8 <set_opt@@Base+0x318>
   149f0:	ldr	r3, [r4, #216]	; 0xd8
   149f4:	cmp	r3, #0
   149f8:	beq	14a70 <set_opt@@Base+0x3e0>
   149fc:	ldr	r3, [pc, #240]	; 14af4 <set_opt@@Base+0x464>
   14a00:	ldr	r0, [pc, #344]	; 14b60 <set_opt@@Base+0x4d0>
   14a04:	ldr	r1, [r3]
   14a08:	b	14858 <set_opt@@Base+0x1c8>
   14a0c:	cmp	r7, #118	; 0x76
   14a10:	mov	r3, #1
   14a14:	beq	14aa8 <set_opt@@Base+0x418>
   14a18:	cmp	r7, #119	; 0x77
   14a1c:	bne	149a8 <set_opt@@Base+0x318>
   14a20:	str	r3, [r4, #156]	; 0x9c
   14a24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a28:	ldrb	r3, [r5, #1]
   14a2c:	cmp	r3, #0
   14a30:	addne	r6, r5, #1
   14a34:	movne	r0, #1
   14a38:	bne	14a58 <set_opt@@Base+0x3c8>
   14a3c:	cmp	r6, #0
   14a40:	movne	r0, #2
   14a44:	bne	14a58 <set_opt@@Base+0x3c8>
   14a48:	ldr	r3, [pc, #164]	; 14af4 <set_opt@@Base+0x464>
   14a4c:	ldr	r0, [pc, #272]	; 14b64 <set_opt@@Base+0x4d4>
   14a50:	ldr	r1, [r3]
   14a54:	b	14858 <set_opt@@Base+0x1c8>
   14a58:	ldr	r2, [r4, #200]	; 0xc8
   14a5c:	ldr	r3, [r4, #208]	; 0xd0
   14a60:	add	r1, r3, #1
   14a64:	str	r1, [r4, #208]	; 0xd0
   14a68:	str	r6, [r2, r3, lsl #2]
   14a6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a70:	ldrb	r3, [r5, #1]
   14a74:	cmp	r3, #0
   14a78:	addne	r6, r5, #1
   14a7c:	movne	r0, #1
   14a80:	bne	14aa0 <set_opt@@Base+0x410>
   14a84:	cmp	r6, #0
   14a88:	movne	r0, #2
   14a8c:	bne	14aa0 <set_opt@@Base+0x410>
   14a90:	ldr	r3, [pc, #92]	; 14af4 <set_opt@@Base+0x464>
   14a94:	ldr	r0, [pc, #204]	; 14b68 <set_opt@@Base+0x4d8>
   14a98:	ldr	r1, [r3]
   14a9c:	b	14858 <set_opt@@Base+0x1c8>
   14aa0:	str	r6, [r4, #216]	; 0xd8
   14aa4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14aa8:	str	r3, [r4, #160]	; 0xa0
   14aac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ab0:	mov	r3, #1
   14ab4:	str	r3, [r4, #172]	; 0xac
   14ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14abc:	mov	r3, #1
   14ac0:	str	r3, [r4, #112]	; 0x70
   14ac4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ac8:	str	r3, [r4, #144]	; 0x90
   14acc:	str	r3, [r4, #148]	; 0x94
   14ad0:	str	r3, [r4, #152]	; 0x98
   14ad4:	str	r3, [r4, #156]	; 0x9c
   14ad8:	str	r3, [r4, #160]	; 0xa0
   14adc:	b	14ab4 <set_opt@@Base+0x424>
   14ae0:	mov	r0, #0
   14ae4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ae8:	strdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   14aec:	strheq	fp, [r5], -r4
   14af0:	strdeq	r0, [r3], -r6
   14af4:	strheq	fp, [r5], -r0
   14af8:	andeq	pc, r2, r4, ror r2	; <UNPREDICTABLE>
   14afc:	andeq	r7, r4, lr, asr #13
   14b00:	andeq	pc, r2, sl, lsr #5
   14b04:			; <UNDEFINED> instruction: 0x0002f2b0
   14b08:	andeq	r0, r3, ip, lsr #17
   14b0c:	strdeq	r0, [r3], -pc	; <UNPREDICTABLE>
   14b10:	andeq	r0, r3, r7, lsl #10
   14b14:	andeq	r0, r3, r4, lsl r5
   14b18:	andeq	r0, r3, r2, lsr #10
   14b1c:	andeq	r0, r3, r8, lsr #10
   14b20:	andeq	r0, r3, sl, lsr r5
   14b24:	andeq	r0, r3, fp, lsr #11
   14b28:	ldrdeq	r0, [r3], -r8
   14b2c:	andeq	r0, r3, r7, ror #11
   14b30:	andeq	r0, r3, r4, lsl #17
   14b34:	andeq	r0, r3, r1, lsl r6
   14b38:	andeq	r0, r3, r5, lsr r6
   14b3c:	andeq	r0, r3, r0, asr #12
   14b40:	andeq	r0, r3, r6, ror #12
   14b44:	andeq	r0, r3, pc, ror #12
   14b48:	muleq	r3, r3, r6
   14b4c:	andeq	r0, r3, r2, lsr #13
   14b50:	muleq	r3, sl, r6
   14b54:	andeq	r0, r3, ip, asr #13
   14b58:	andeq	r0, r3, r9, ror #13
   14b5c:	andeq	r0, r3, lr, asr r7
   14b60:	andeq	r0, r3, fp, lsl r7
   14b64:	strdeq	r0, [r3], -lr
   14b68:	andeq	r0, r3, r1, asr #14

00014b6c <get_opt@@Base>:
   14b6c:	push	{r4, r5, r6, lr}
   14b70:	mov	r4, r1
   14b74:	ldrb	r3, [r4, #1]!
   14b78:	cmp	r3, #45	; 0x2d
   14b7c:	bne	14b98 <get_opt@@Base+0x2c>
   14b80:	mov	r1, r4
   14b84:	bl	14690 <set_opt@@Base>
   14b88:	sub	r0, r0, #2
   14b8c:	clz	r0, r0
   14b90:	lsr	r0, r0, #5
   14b94:	pop	{r4, r5, r6, pc}
   14b98:	cmp	r3, #0
   14b9c:	mov	r5, r0
   14ba0:	mov	r6, r2
   14ba4:	bne	14be8 <get_opt@@Base+0x7c>
   14ba8:	ldr	r3, [pc, #88]	; 14c08 <get_opt@@Base+0x9c>
   14bac:	ldr	r0, [pc, #88]	; 14c0c <get_opt@@Base+0xa0>
   14bb0:	ldr	r1, [r3]
   14bb4:	bl	14158 <fputs@plt>
   14bb8:	mvn	r0, #0
   14bbc:	bl	14098 <exit@plt>
   14bc0:	mov	r2, r6
   14bc4:	mov	r1, r4
   14bc8:	mov	r0, r5
   14bcc:	bl	14690 <set_opt@@Base>
   14bd0:	cmp	r0, #1
   14bd4:	beq	14bf8 <get_opt@@Base+0x8c>
   14bd8:	cmp	r0, #2
   14bdc:	beq	14c00 <get_opt@@Base+0x94>
   14be0:	cmp	r0, #0
   14be4:	addeq	r4, r4, #1
   14be8:	ldrb	r0, [r4]
   14bec:	cmp	r0, #0
   14bf0:	bne	14bc0 <get_opt@@Base+0x54>
   14bf4:	pop	{r4, r5, r6, pc}
   14bf8:	mov	r0, #0
   14bfc:	pop	{r4, r5, r6, pc}
   14c00:	mov	r0, #1
   14c04:	pop	{r4, r5, r6, pc}
   14c08:	strheq	fp, [r5], -r0
   14c0c:	andeq	r0, r3, r3, ror r7

00014c10 <parse_opts@@Base>:
   14c10:	push	{r4, r5, r6, r7, r8, lr}
   14c14:	mov	r6, r0
   14c18:	mov	r7, r1
   14c1c:	mov	r5, r2
   14c20:	mov	r4, #1
   14c24:	cmp	r4, r6
   14c28:	popge	{r4, r5, r6, r7, r8, pc}
   14c2c:	lsl	r3, r4, #2
   14c30:	ldr	r1, [r7, r4, lsl #2]
   14c34:	ldrb	r2, [r1]
   14c38:	cmp	r2, #45	; 0x2d
   14c3c:	bne	14c68 <parse_opts@@Base+0x58>
   14c40:	add	r2, r4, #1
   14c44:	mov	r0, r5
   14c48:	cmp	r6, r2
   14c4c:	addgt	r3, r7, r3
   14c50:	movle	r2, #0
   14c54:	ldrgt	r2, [r3, #4]
   14c58:	bl	14b6c <get_opt@@Base>
   14c5c:	add	r4, r4, r0
   14c60:	add	r4, r4, #1
   14c64:	b	14c24 <parse_opts@@Base+0x14>
   14c68:	ldr	r2, [r5, #204]	; 0xcc
   14c6c:	ldr	r3, [r5, #212]	; 0xd4
   14c70:	add	r0, r3, #1
   14c74:	str	r0, [r5, #212]	; 0xd4
   14c78:	str	r1, [r2, r3, lsl #2]
   14c7c:	b	14c60 <parse_opts@@Base+0x50>
   14c80:	mov	r2, #1
   14c84:	add	r0, r0, #172	; 0xac
   14c88:	b	229f8 <ptr_set_insert_item@@Base>
   14c8c:	cmp	r0, #0
   14c90:	bxne	lr
   14c94:	ldr	r3, [pc, #20]	; 14cb0 <parse_opts@@Base+0xa0>
   14c98:	push	{r4, lr}
   14c9c:	ldr	r0, [pc, #16]	; 14cb4 <parse_opts@@Base+0xa4>
   14ca0:	ldr	r1, [r3]
   14ca4:	bl	14158 <fputs@plt>
   14ca8:	mov	r0, #1
   14cac:	bl	14098 <exit@plt>
   14cb0:	strheq	fp, [r5], -r0
   14cb4:	ldrdeq	r0, [r3], -sp

00014cb8 <flatcc_init_options@@Base>:
   14cb8:	push	{r4, lr}
   14cbc:	mov	r2, #212	; 0xd4
   14cc0:	mov	r4, r0
   14cc4:	mov	r1, #0
   14cc8:	add	r0, r0, #12
   14ccc:	bl	140d4 <memset@plt>
   14cd0:	mov	r1, #2
   14cd4:	movw	r0, #65534	; 0xfffe
   14cd8:	mov	r3, #65536	; 0x10000
   14cdc:	mov	r2, #4
   14ce0:	str	r1, [r4, #68]	; 0x44
   14ce4:	mov	r1, #0
   14ce8:	str	r3, [r4]
   14cec:	mov	r3, #100	; 0x64
   14cf0:	strd	r0, [r4, #88]	; 0x58
   14cf4:	ldr	r1, [pc, #104]	; 14d64 <flatcc_init_options@@Base+0xac>
   14cf8:	str	r3, [r4, #4]
   14cfc:	str	r3, [r4, #8]
   14d00:	mov	r3, #1
   14d04:	str	r2, [r4, #64]	; 0x40
   14d08:	str	r3, [r4, #16]
   14d0c:	str	r3, [r4, #20]
   14d10:	str	r1, [r4, #96]	; 0x60
   14d14:	ldr	r1, [pc, #76]	; 14d68 <flatcc_init_options@@Base+0xb0>
   14d18:	str	r3, [r4, #24]
   14d1c:	str	r3, [r4, #28]
   14d20:	str	r3, [r4, #32]
   14d24:	str	r3, [r4, #36]	; 0x24
   14d28:	str	r3, [r4, #40]	; 0x28
   14d2c:	str	r1, [r4, #100]	; 0x64
   14d30:	ldr	r1, [pc, #52]	; 14d6c <flatcc_init_options@@Base+0xb4>
   14d34:	str	r3, [r4, #44]	; 0x2c
   14d38:	str	r3, [r4, #48]	; 0x30
   14d3c:	str	r3, [r4, #52]	; 0x34
   14d40:	str	r3, [r4, #72]	; 0x48
   14d44:	str	r3, [r4, #76]	; 0x4c
   14d48:	str	r3, [r4, #84]	; 0x54
   14d4c:	str	r1, [r4, #104]	; 0x68
   14d50:	str	r3, [r4, #136]	; 0x88
   14d54:	str	r3, [r4, #140]	; 0x8c
   14d58:	str	r2, [r4, #176]	; 0xb0
   14d5c:	str	r3, [r4, #184]	; 0xb8
   14d60:	pop	{r4, pc}
   14d64:	andeq	r0, r3, r0, lsl #18
   14d68:	andeq	r0, r3, r5, lsl #18
   14d6c:	andeq	r0, r3, fp, lsl #18

00014d70 <flatcc_create_context@@Base>:
   14d70:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   14d74:	mov	r6, r0
   14d78:	mov	r0, #560	; 0x230
   14d7c:	mov	r7, r1
   14d80:	mov	r8, r2
   14d84:	mov	r9, r3
   14d88:	bl	14068 <malloc@plt>
   14d8c:	subs	r4, r0, #0
   14d90:	beq	14dc4 <flatcc_create_context@@Base+0x54>
   14d94:	mov	r5, #0
   14d98:	mov	r3, r8
   14d9c:	str	r9, [sp]
   14da0:	mov	r2, r7
   14da4:	mov	r1, r6
   14da8:	str	r5, [sp, #4]
   14dac:	bl	253a8 <__flatcc_fb_init_parser@@Base>
   14db0:	cmp	r0, r5
   14db4:	beq	14dc4 <flatcc_create_context@@Base+0x54>
   14db8:	mov	r0, r4
   14dbc:	mov	r4, r5
   14dc0:	bl	13ff0 <free@plt>
   14dc4:	mov	r0, r4
   14dc8:	add	sp, sp, #12
   14dcc:	pop	{r4, r5, r6, r7, r8, r9, pc}

00014dd0 <flatcc_parse_buffer@@Base>:
   14dd0:	ldr	r3, [r0, #128]	; 0x80
   14dd4:	push	{r4, r5, r6, r7, r8, lr}
   14dd8:	mov	r6, r2
   14ddc:	mov	r2, #1
   14de0:	str	r2, [r0, #140]	; 0x8c
   14de4:	cmp	r3, #0
   14de8:	cmpne	r3, r6
   14dec:	movcc	r5, #1
   14df0:	movcs	r5, #0
   14df4:	bcs	14e08 <flatcc_parse_buffer@@Base+0x38>
   14df8:	ldr	r1, [pc, #80]	; 14e50 <flatcc_parse_buffer@@Base+0x80>
   14dfc:	bl	2441c <__flatcc_fb_print_error@@Base>
   14e00:	mvn	r0, #0
   14e04:	pop	{r4, r5, r6, r7, r8, pc}
   14e08:	mov	r4, r0
   14e0c:	mov	r7, r1
   14e10:	add	r1, r0, #352	; 0x160
   14e14:	add	r0, r0, #524	; 0x20c
   14e18:	bl	229f8 <ptr_set_insert_item@@Base>
   14e1c:	mov	r3, r5
   14e20:	mov	r2, r6
   14e24:	mov	r1, r7
   14e28:	mov	r0, r4
   14e2c:	bl	2559c <__flatcc_fb_parse@@Base>
   14e30:	cmp	r0, #0
   14e34:	bne	14e00 <flatcc_parse_buffer@@Base+0x30>
   14e38:	mov	r0, r4
   14e3c:	bl	28498 <__flatcc_fb_build_schema@@Base>
   14e40:	adds	r0, r0, #0
   14e44:	movne	r0, #1
   14e48:	rsb	r0, r0, #0
   14e4c:	pop	{r4, r5, r6, r7, r8, pc}
   14e50:	andeq	r0, r3, r0, lsl r9

00014e54 <flatcc_generate_binary_schema_to_buffer@@Base>:
   14e54:	push	{r0, r1, r2, lr}
   14e58:	add	r3, sp, #4
   14e5c:	str	r2, [sp, #4]
   14e60:	mov	r2, r1
   14e64:	add	r1, r0, #352	; 0x160
   14e68:	add	r0, r0, #128	; 0x80
   14e6c:	bl	21ddc <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
   14e70:	cmp	r0, #0
   14e74:	ldrne	r0, [sp, #4]
   14e78:	mvneq	r0, #0
   14e7c:	add	sp, sp, #12
   14e80:	pop	{pc}		; (ldr pc, [sp], #4)

00014e84 <flatcc_generate_binary_schema@@Base>:
   14e84:	mov	r2, r1
   14e88:	add	r1, r0, #352	; 0x160
   14e8c:	add	r0, r0, #128	; 0x80
   14e90:	b	21e4c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>

00014e94 <flatcc_generate_files@@Base>:
   14e94:	push	{r4, r5, r6, lr}
   14e98:	subs	r4, r0, #0
   14e9c:	sub	sp, sp, #232	; 0xe8
   14ea0:	bne	14eb4 <flatcc_generate_files@@Base+0x20>
   14ea4:	mvn	r6, #0
   14ea8:	mov	r0, r6
   14eac:	add	sp, sp, #232	; 0xe8
   14eb0:	pop	{r4, r5, r6, pc}
   14eb4:	ldr	r3, [r4, #108]	; 0x6c
   14eb8:	cmp	r3, #0
   14ebc:	moveq	r5, r4
   14ec0:	bne	14ea4 <flatcc_generate_files@@Base+0x10>
   14ec4:	ldr	r2, [r5]
   14ec8:	str	r3, [r5, #4]
   14ecc:	mov	r3, r5
   14ed0:	cmp	r2, #0
   14ed4:	bne	14f20 <flatcc_generate_files@@Base+0x8c>
   14ed8:	ldr	r3, [r4, #308]	; 0x134
   14edc:	add	r6, r4, #128	; 0x80
   14ee0:	cmp	r3, #0
   14ee4:	bne	14f28 <flatcc_generate_files@@Base+0x94>
   14ee8:	mov	r1, r6
   14eec:	mov	r0, sp
   14ef0:	bl	156a8 <__flatcc_fb_init_output_c@@Base>
   14ef4:	cmp	r0, #0
   14ef8:	bne	14ea4 <flatcc_generate_files@@Base+0x10>
   14efc:	ldr	r3, [r4, #256]	; 0x100
   14f00:	cmp	r3, #0
   14f04:	beq	14f40 <flatcc_generate_files@@Base+0xac>
   14f08:	ldr	r6, [r4, #120]	; 0x78
   14f0c:	cmp	r6, #0
   14f10:	bne	14f54 <flatcc_generate_files@@Base+0xc0>
   14f14:	mov	r0, sp
   14f18:	bl	15674 <__flatcc_fb_end_output_c@@Base>
   14f1c:	b	14ea8 <flatcc_generate_files@@Base+0x14>
   14f20:	mov	r5, r2
   14f24:	b	14ec4 <flatcc_generate_files@@Base+0x30>
   14f28:	add	r1, r4, #352	; 0x160
   14f2c:	mov	r0, r6
   14f30:	bl	21eb0 <__flatcc_fb_codegen_bfbs_to_file@@Base>
   14f34:	cmp	r0, #0
   14f38:	beq	14ee8 <flatcc_generate_files@@Base+0x54>
   14f3c:	b	14ea4 <flatcc_generate_files@@Base+0x10>
   14f40:	mov	r0, sp
   14f44:	bl	15a98 <__flatcc_fb_codegen_common_c@@Base>
   14f48:	subs	r6, r0, #0
   14f4c:	beq	14f08 <flatcc_generate_files@@Base+0x74>
   14f50:	b	14f14 <flatcc_generate_files@@Base+0x80>
   14f54:	ldr	r3, [r4, #300]	; 0x12c
   14f58:	cmp	r3, #0
   14f5c:	bne	14f74 <flatcc_generate_files@@Base+0xe0>
   14f60:	add	r1, r4, #352	; 0x160
   14f64:	mov	r0, sp
   14f68:	bl	15b48 <__flatcc_fb_codegen_c@@Base>
   14f6c:	mov	r6, r0
   14f70:	b	14f14 <flatcc_generate_files@@Base+0x80>
   14f74:	ldr	r3, [r5, #108]	; 0x6c
   14f78:	cmp	r3, #0
   14f7c:	movne	r6, #1
   14f80:	bne	14f98 <flatcc_generate_files@@Base+0x104>
   14f84:	add	r1, r5, #352	; 0x160
   14f88:	mov	r0, sp
   14f8c:	bl	15b48 <__flatcc_fb_codegen_c@@Base>
   14f90:	adds	r6, r0, #0
   14f94:	movne	r6, #1
   14f98:	ldr	r5, [r5, #4]
   14f9c:	eor	r3, r6, #1
   14fa0:	cmp	r5, #0
   14fa4:	moveq	r3, #0
   14fa8:	andne	r3, r3, #1
   14fac:	cmp	r3, #0
   14fb0:	bne	14f74 <flatcc_generate_files@@Base+0xe0>
   14fb4:	b	14f14 <flatcc_generate_files@@Base+0x80>

00014fb8 <flatcc_destroy_context@@Base>:
   14fb8:	push	{r4, r5, r6, lr}
   14fbc:	mov	r4, r0
   14fc0:	cmp	r4, #0
   14fc4:	popeq	{r4, r5, r6, pc}
   14fc8:	mov	r0, r4
   14fcc:	ldr	r5, [r4]
   14fd0:	bl	274f4 <__flatcc_fb_clear_parser@@Base>
   14fd4:	mov	r0, r4
   14fd8:	bl	13ff0 <free@plt>
   14fdc:	mov	r4, r5
   14fe0:	b	14fc0 <flatcc_destroy_context@@Base+0x8>

00014fe4 <flatcc_parse_file@@Base>:
   14fe4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14fe8:	mov	r4, r0
   14fec:	sub	sp, sp, #28
   14ff0:	mov	r0, r1
   14ff4:	mov	r7, r1
   14ff8:	add	r8, r4, #352	; 0x160
   14ffc:	bl	140a4 <strlen@plt>
   15000:	mov	sl, r0
   15004:	ldr	r0, [r4, #412]	; 0x19c
   15008:	mov	r2, #1
   1500c:	mov	r1, r8
   15010:	add	r0, r0, #32
   15014:	bl	23b2c <fb_schema_table_insert_item@@Base>
   15018:	subs	r5, r0, #0
   1501c:	beq	15030 <flatcc_parse_file@@Base+0x4c>
   15020:	mov	r9, #0
   15024:	mov	r0, r9
   15028:	add	sp, sp, #28
   1502c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15030:	ldr	r6, [r4, #552]	; 0x228
   15034:	cmp	r6, #0
   15038:	beq	150f0 <flatcc_parse_file@@Base+0x10c>
   1503c:	mov	r9, #0
   15040:	ldr	r3, [r4, #336]	; 0x150
   15044:	cmp	r3, r9
   15048:	bgt	151f4 <flatcc_parse_file@@Base+0x210>
   1504c:	cmp	r6, #0
   15050:	beq	150cc <flatcc_parse_file@@Base+0xe8>
   15054:	ldr	r5, [r4, #552]	; 0x228
   15058:	mov	r0, r5
   1505c:	bl	140a4 <strlen@plt>
   15060:	mov	r1, r0
   15064:	mov	r0, r5
   15068:	bl	23f3c <__flatcc_fb_find_basename@@Base>
   1506c:	mov	r3, #1
   15070:	mov	r1, r0
   15074:	mov	r2, r7
   15078:	mov	r0, r5
   1507c:	str	r3, [sp, #4]
   15080:	ldr	r3, [pc, #1156]	; 1550c <flatcc_parse_file@@Base+0x528>
   15084:	str	r3, [sp]
   15088:	mov	r3, sl
   1508c:	bl	23c44 <__flatcc_fb_create_join_path_n@@Base>
   15090:	mov	r9, r0
   15094:	bl	14c8c <parse_opts@@Base+0x7c>
   15098:	add	r2, sp, #20
   1509c:	mov	r0, r9
   150a0:	ldr	r1, [r4, #128]	; 0x80
   150a4:	bl	23fc4 <__flatcc_fb_read_file@@Base>
   150a8:	subs	r5, r0, #0
   150ac:	bne	15154 <flatcc_parse_file@@Base+0x170>
   150b0:	mov	r0, r9
   150b4:	bl	13ff0 <free@plt>
   150b8:	ldr	r2, [sp, #20]
   150bc:	ldr	r3, [r4, #128]	; 0x80
   150c0:	cmp	r3, #0
   150c4:	cmpne	r3, r2
   150c8:	bcc	15128 <flatcc_parse_file@@Base+0x144>
   150cc:	mov	r2, r7
   150d0:	ldr	r1, [pc, #1080]	; 15510 <flatcc_parse_file@@Base+0x52c>
   150d4:	mov	r0, r4
   150d8:	bl	2441c <__flatcc_fb_print_error@@Base>
   150dc:	cmp	r5, #0
   150e0:	beq	15134 <flatcc_parse_file@@Base+0x150>
   150e4:	mov	r0, r5
   150e8:	bl	13ff0 <free@plt>
   150ec:	b	15134 <flatcc_parse_file@@Base+0x150>
   150f0:	add	r2, sp, #20
   150f4:	mov	r0, r7
   150f8:	ldr	r1, [r4, #128]	; 0x80
   150fc:	bl	23fc4 <__flatcc_fb_read_file@@Base>
   15100:	subs	fp, r0, #0
   15104:	bne	1513c <flatcc_parse_file@@Base+0x158>
   15108:	ldr	r1, [sp, #20]
   1510c:	ldr	r3, [r4, #412]	; 0x19c
   15110:	ldr	r2, [r4, #128]	; 0x80
   15114:	ldr	r3, [r3, #56]	; 0x38
   15118:	add	r3, r3, r1
   1511c:	cmp	r2, #0
   15120:	cmpne	r3, r2
   15124:	bls	1503c <flatcc_parse_file@@Base+0x58>
   15128:	ldr	r1, [pc, #996]	; 15514 <flatcc_parse_file@@Base+0x530>
   1512c:	mov	r0, r4
   15130:	bl	2441c <__flatcc_fb_print_error@@Base>
   15134:	mvn	r9, #0
   15138:	b	15024 <flatcc_parse_file@@Base+0x40>
   1513c:	mov	r0, r7
   15140:	bl	23bbc <__flatcc_fb_copy_path@@Base>
   15144:	mov	r5, r0
   15148:	bl	14c8c <parse_opts@@Base+0x7c>
   1514c:	mov	r9, r5
   15150:	mov	r5, fp
   15154:	ldr	r1, [r4, #412]	; 0x19c
   15158:	mov	r0, r4
   1515c:	ldr	r2, [sp, #20]
   15160:	ldr	r3, [r1, #56]	; 0x38
   15164:	add	r3, r3, r2
   15168:	str	r3, [r1, #56]	; 0x38
   1516c:	mov	r3, #1
   15170:	mov	r1, r5
   15174:	str	r9, [r4, #548]	; 0x224
   15178:	bl	2559c <__flatcc_fb_parse@@Base>
   1517c:	subs	r9, r0, #0
   15180:	addeq	r3, r4, #128	; 0x80
   15184:	ldreq	fp, [r4, #352]	; 0x160
   15188:	streq	r3, [sp, #12]
   1518c:	bne	15020 <flatcc_parse_file@@Base+0x3c>
   15190:	cmp	fp, #0
   15194:	bne	15278 <flatcc_parse_file@@Base+0x294>
   15198:	mov	r2, #1
   1519c:	mov	r1, r8
   151a0:	add	r0, r4, #524	; 0x20c
   151a4:	bl	229f8 <ptr_set_insert_item@@Base>
   151a8:	mov	r0, r4
   151ac:	bl	28498 <__flatcc_fb_build_schema@@Base>
   151b0:	subs	r9, r0, #0
   151b4:	bne	15020 <flatcc_parse_file@@Base+0x3c>
   151b8:	ldr	r3, [r4, #240]	; 0xf0
   151bc:	clz	r6, r6
   151c0:	lsr	r6, r6, #5
   151c4:	cmp	r3, #0
   151c8:	moveq	r6, #0
   151cc:	cmp	r6, #0
   151d0:	beq	15020 <flatcc_parse_file@@Base+0x3c>
   151d4:	ldr	r3, [r4, #552]	; 0x228
   151d8:	cmp	r3, #0
   151dc:	beq	153a8 <flatcc_parse_file@@Base+0x3c4>
   151e0:	ldr	r3, [pc, #816]	; 15518 <flatcc_parse_file@@Base+0x534>
   151e4:	mov	r2, #220	; 0xdc
   151e8:	ldr	r1, [pc, #812]	; 1551c <flatcc_parse_file@@Base+0x538>
   151ec:	ldr	r0, [pc, #812]	; 15520 <flatcc_parse_file@@Base+0x53c>
   151f0:	bl	1417c <__assert_fail@plt>
   151f4:	ldr	r3, [r4, #328]	; 0x148
   151f8:	ldr	r5, [r3, r9, lsl #2]
   151fc:	mov	r0, r5
   15200:	bl	140a4 <strlen@plt>
   15204:	mov	r3, #1
   15208:	mov	r1, r0
   1520c:	mov	r2, r7
   15210:	mov	r0, r5
   15214:	str	r3, [sp, #4]
   15218:	ldr	r3, [pc, #748]	; 1550c <flatcc_parse_file@@Base+0x528>
   1521c:	str	r3, [sp]
   15220:	mov	r3, sl
   15224:	bl	23c44 <__flatcc_fb_create_join_path_n@@Base>
   15228:	mov	r5, r0
   1522c:	bl	14c8c <parse_opts@@Base+0x7c>
   15230:	add	r2, sp, #20
   15234:	mov	r0, r5
   15238:	ldr	r1, [r4, #128]	; 0x80
   1523c:	bl	23fc4 <__flatcc_fb_read_file@@Base>
   15240:	subs	fp, r0, #0
   15244:	bne	15268 <flatcc_parse_file@@Base+0x284>
   15248:	mov	r0, r5
   1524c:	bl	13ff0 <free@plt>
   15250:	ldr	r1, [sp, #20]
   15254:	ldr	r2, [r4, #128]	; 0x80
   15258:	cmp	r2, #0
   1525c:	cmpne	r2, r1
   15260:	bcc	15128 <flatcc_parse_file@@Base+0x144>
   15264:	mov	r5, fp
   15268:	cmp	fp, #0
   1526c:	add	r9, r9, #1
   15270:	beq	15040 <flatcc_parse_file@@Base+0x5c>
   15274:	b	1514c <flatcc_parse_file@@Base+0x168>
   15278:	ldrd	r0, [fp, #8]
   1527c:	bl	23b70 <__flatcc_fb_copy_path_n@@Base>
   15280:	mov	sl, r0
   15284:	bl	14c8c <parse_opts@@Base+0x7c>
   15288:	ldr	r3, [r4, #132]	; 0x84
   1528c:	ldr	r7, [r4, #412]	; 0x19c
   15290:	ldr	r2, [r7, #52]	; 0x34
   15294:	cmp	r2, r3
   15298:	cmpge	r3, #0
   1529c:	ble	152c0 <flatcc_parse_file@@Base+0x2dc>
   152a0:	ldr	r1, [pc, #636]	; 15524 <flatcc_parse_file@@Base+0x540>
   152a4:	mov	r0, r4
   152a8:	bl	2441c <__flatcc_fb_print_error@@Base>
   152ac:	cmp	sl, #0
   152b0:	beq	15020 <flatcc_parse_file@@Base+0x3c>
   152b4:	mov	r0, sl
   152b8:	bl	13ff0 <free@plt>
   152bc:	b	15024 <flatcc_parse_file@@Base+0x40>
   152c0:	ldr	r2, [r7, #48]	; 0x30
   152c4:	ldr	r3, [r4, #136]	; 0x88
   152c8:	cmp	r2, r3
   152cc:	cmpge	r3, #0
   152d0:	ldrgt	r1, [pc, #592]	; 15528 <flatcc_parse_file@@Base+0x544>
   152d4:	bgt	152a4 <flatcc_parse_file@@Base+0x2c0>
   152d8:	mov	r0, #560	; 0x230
   152dc:	bl	14068 <malloc@plt>
   152e0:	subs	r5, r0, #0
   152e4:	beq	152ac <flatcc_parse_file@@Base+0x2c8>
   152e8:	str	r7, [sp, #4]
   152ec:	mov	r2, sl
   152f0:	ldr	r3, [r4, #12]
   152f4:	ldr	r1, [sp, #12]
   152f8:	str	r3, [sp]
   152fc:	ldr	r3, [r4, #8]
   15300:	bl	253a8 <__flatcc_fb_init_parser@@Base>
   15304:	cmp	r0, #0
   15308:	beq	15318 <flatcc_parse_file@@Base+0x334>
   1530c:	mov	r0, r5
   15310:	bl	13ff0 <free@plt>
   15314:	b	152ac <flatcc_parse_file@@Base+0x2c8>
   15318:	add	r1, r5, #352	; 0x160
   1531c:	add	r0, r7, #32
   15320:	bl	23b50 <fb_schema_table_find_item@@Base>
   15324:	cmp	r0, #0
   15328:	beq	15354 <flatcc_parse_file@@Base+0x370>
   1532c:	add	r0, r0, #172	; 0xac
   15330:	mov	r2, r8
   15334:	ldr	r1, [pc, #496]	; 1552c <flatcc_parse_file@@Base+0x548>
   15338:	bl	22a14 <ptr_set_visit@@Base>
   1533c:	mov	r0, r5
   15340:	bl	14fb8 <flatcc_destroy_context@@Base>
   15344:	mov	r0, sl
   15348:	bl	13ff0 <free@plt>
   1534c:	ldr	fp, [fp]
   15350:	b	15190 <flatcc_parse_file@@Base+0x1ac>
   15354:	ldr	r3, [r4]
   15358:	mov	r1, sl
   1535c:	mov	r0, r5
   15360:	str	r5, [r4]
   15364:	str	r3, [r5]
   15368:	ldr	r3, [r4, #548]	; 0x224
   1536c:	str	r3, [r5, #552]	; 0x228
   15370:	ldr	r3, [r7, #52]	; 0x34
   15374:	add	r3, r3, #1
   15378:	str	r3, [r7, #52]	; 0x34
   1537c:	ldr	r3, [r7, #48]	; 0x30
   15380:	add	r3, r3, #1
   15384:	str	r3, [r7, #48]	; 0x30
   15388:	bl	14fe4 <flatcc_parse_file@@Base>
   1538c:	cmp	r0, #0
   15390:	bne	152ac <flatcc_parse_file@@Base+0x2c8>
   15394:	mov	r2, r8
   15398:	ldr	r1, [pc, #396]	; 1552c <flatcc_parse_file@@Base+0x548>
   1539c:	add	r0, r5, #524	; 0x20c
   153a0:	bl	22a14 <ptr_set_visit@@Base>
   153a4:	b	15344 <flatcc_parse_file@@Base+0x360>
   153a8:	ldr	r2, [pc, #348]	; 1550c <flatcc_parse_file@@Base+0x528>
   153ac:	ldr	r5, [r4, #344]	; 0x158
   153b0:	ldr	r1, [r4, #244]	; 0xf4
   153b4:	ldr	r3, [r4, #248]	; 0xf8
   153b8:	cmp	r5, #0
   153bc:	ldr	r8, [r4, #512]	; 0x200
   153c0:	moveq	r5, r2
   153c4:	cmp	r1, #0
   153c8:	movne	r0, r2
   153cc:	moveq	r0, r5
   153d0:	ldreq	r2, [pc, #344]	; 15530 <flatcc_parse_file@@Base+0x54c>
   153d4:	moveq	r1, r8
   153d8:	cmp	r3, #0
   153dc:	bne	15498 <flatcc_parse_file@@Base+0x4b4>
   153e0:	ldr	ip, [r4, #308]	; 0x134
   153e4:	ldr	r3, [pc, #328]	; 15534 <flatcc_parse_file@@Base+0x550>
   153e8:	ldr	r7, [pc, #328]	; 15538 <flatcc_parse_file@@Base+0x554>
   153ec:	cmp	ip, #0
   153f0:	moveq	r7, r3
   153f4:	mov	r3, #1
   153f8:	bl	23d68 <__flatcc_fb_create_join_path@@Base>
   153fc:	mov	r6, r0
   15400:	bl	14c8c <parse_opts@@Base+0x7c>
   15404:	mov	r2, r7
   15408:	mov	r3, #1
   1540c:	mov	r1, r8
   15410:	mov	r0, r5
   15414:	bl	23d68 <__flatcc_fb_create_join_path@@Base>
   15418:	mov	r5, r0
   1541c:	bl	14c8c <parse_opts@@Base+0x7c>
   15420:	mov	r0, r5
   15424:	bl	23f20 <__flatcc_fb_create_make_path@@Base>
   15428:	mov	r7, r0
   1542c:	bl	14c8c <parse_opts@@Base+0x7c>
   15430:	cmp	r5, #0
   15434:	beq	15440 <flatcc_parse_file@@Base+0x45c>
   15438:	mov	r0, r5
   1543c:	bl	13ff0 <free@plt>
   15440:	ldr	r1, [pc, #244]	; 1553c <flatcc_parse_file@@Base+0x558>
   15444:	mov	r0, r6
   15448:	bl	13fe4 <fopen@plt>
   1544c:	subs	r5, r0, #0
   15450:	bne	154a8 <flatcc_parse_file@@Base+0x4c4>
   15454:	mov	r2, r6
   15458:	ldr	r1, [pc, #224]	; 15540 <flatcc_parse_file@@Base+0x55c>
   1545c:	mov	r0, r4
   15460:	bl	2441c <__flatcc_fb_print_error@@Base>
   15464:	cmp	r6, #0
   15468:	beq	15474 <flatcc_parse_file@@Base+0x490>
   1546c:	mov	r0, r6
   15470:	bl	13ff0 <free@plt>
   15474:	cmp	r7, #0
   15478:	beq	15484 <flatcc_parse_file@@Base+0x4a0>
   1547c:	mov	r0, r7
   15480:	bl	13ff0 <free@plt>
   15484:	cmp	r5, #0
   15488:	beq	15020 <flatcc_parse_file@@Base+0x3c>
   1548c:	mov	r0, r5
   15490:	bl	14104 <fclose@plt>
   15494:	b	15024 <flatcc_parse_file@@Base+0x40>
   15498:	ldr	r5, [pc, #108]	; 1550c <flatcc_parse_file@@Base+0x528>
   1549c:	mov	r8, r3
   154a0:	mov	r7, r5
   154a4:	b	153f4 <flatcc_parse_file@@Base+0x410>
   154a8:	mov	r2, r7
   154ac:	ldr	r1, [pc, #144]	; 15544 <flatcc_parse_file@@Base+0x560>
   154b0:	bl	140bc <fprintf@plt>
   154b4:	ldr	sl, [pc, #140]	; 15548 <flatcc_parse_file@@Base+0x564>
   154b8:	ldr	r4, [r4]
   154bc:	cmp	r4, #0
   154c0:	bne	154d4 <flatcc_parse_file@@Base+0x4f0>
   154c4:	mov	r1, r5
   154c8:	mov	r0, #10
   154cc:	bl	1411c <fputc@plt>
   154d0:	b	15464 <flatcc_parse_file@@Base+0x480>
   154d4:	ldr	r0, [r4, #548]	; 0x224
   154d8:	bl	23f20 <__flatcc_fb_create_make_path@@Base>
   154dc:	mov	r8, r0
   154e0:	bl	14c8c <parse_opts@@Base+0x7c>
   154e4:	mov	r2, r8
   154e8:	mov	r1, sl
   154ec:	mov	r0, r5
   154f0:	bl	140bc <fprintf@plt>
   154f4:	cmp	r8, #0
   154f8:	ldr	r4, [r4]
   154fc:	beq	154bc <flatcc_parse_file@@Base+0x4d8>
   15500:	mov	r0, r8
   15504:	bl	13ff0 <free@plt>
   15508:	b	154bc <flatcc_parse_file@@Base+0x4d8>
   1550c:	strdeq	r2, [r3], -r7
   15510:	andeq	r0, r3, fp, lsr r9
   15514:	andeq	r0, r3, r0, lsl r9
   15518:	andeq	r0, r3, r3, asr #17
   1551c:	andeq	r0, r3, r1, lsr #19
   15520:	andeq	r0, r3, r7, ror #19
   15524:	andeq	r0, r3, r3, ror #18
   15528:	andeq	r0, r3, r3, lsl #19
   1552c:	andeq	r4, r1, r0, lsl #25
   15530:	andeq	r0, r3, r4, lsr r9
   15534:	andeq	r7, r4, pc
   15538:	andeq	r0, r3, r5, lsl #18
   1553c:	strdeq	r0, [r3], -ip
   15540:	strdeq	r0, [r3], -pc	; <UNPREDICTABLE>
   15544:	andeq	r0, r3, lr, lsr #20
   15548:	andeq	r0, r3, r2, lsr sl
   1554c:	mov	r0, r1
   15550:	b	13ff0 <free@plt>
   15554:	ldr	r3, [pc, #20]	; 15570 <flatcc_parse_file@@Base+0x58c>
   15558:	push	{r4, lr}
   1555c:	ldr	r0, [pc, #16]	; 15574 <flatcc_parse_file@@Base+0x590>
   15560:	ldr	r1, [r3]
   15564:	bl	14158 <fputs@plt>
   15568:	mov	r0, #1
   1556c:	bl	14098 <exit@plt>
   15570:	strheq	fp, [r5], -r0
   15574:	ldrdeq	r0, [r3], -sp

00015578 <__flatcc_fb_open_output_file@@Base>:
   15578:	ldr	ip, [r0, #212]	; 0xd4
   1557c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   15580:	ldr	r4, [r0, #204]	; 0xcc
   15584:	ldr	r5, [ip, #216]	; 0xd8
   15588:	ldr	ip, [pc, #148]	; 15624 <__flatcc_fb_open_output_file@@Base+0xac>
   1558c:	cmp	r5, #0
   15590:	moveq	r5, ip
   15594:	cmp	r4, #0
   15598:	movne	r4, #0
   1559c:	bne	15618 <__flatcc_fb_open_output_file@@Base+0xa0>
   155a0:	mov	r9, r0
   155a4:	mov	r0, r5
   155a8:	mov	r8, r3
   155ac:	mov	r7, r2
   155b0:	mov	r6, r1
   155b4:	bl	140a4 <strlen@plt>
   155b8:	mov	r3, #1
   155bc:	mov	r1, r0
   155c0:	str	r8, [sp]
   155c4:	mov	r0, r5
   155c8:	mov	r2, r6
   155cc:	str	r3, [sp, #4]
   155d0:	mov	r3, r7
   155d4:	bl	23c44 <__flatcc_fb_create_join_path_n@@Base>
   155d8:	subs	r5, r0, #0
   155dc:	bne	155e4 <__flatcc_fb_open_output_file@@Base+0x6c>
   155e0:	bl	15554 <flatcc_parse_file@@Base+0x570>
   155e4:	ldr	r1, [pc, #60]	; 15628 <__flatcc_fb_open_output_file@@Base+0xb0>
   155e8:	bl	13fe4 <fopen@plt>
   155ec:	cmp	r0, #0
   155f0:	str	r0, [r9, #204]	; 0xcc
   155f4:	bne	15610 <__flatcc_fb_open_output_file@@Base+0x98>
   155f8:	ldr	r3, [pc, #44]	; 1562c <__flatcc_fb_open_output_file@@Base+0xb4>
   155fc:	mov	r2, r5
   15600:	mvn	r4, #0
   15604:	ldr	r1, [pc, #36]	; 15630 <__flatcc_fb_open_output_file@@Base+0xb8>
   15608:	ldr	r0, [r3]
   1560c:	bl	140bc <fprintf@plt>
   15610:	mov	r0, r5
   15614:	bl	13ff0 <free@plt>
   15618:	mov	r0, r4
   1561c:	add	sp, sp, #12
   15620:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15624:	strdeq	r2, [r3], -r7
   15628:	strdeq	r0, [r3], -ip
   1562c:	strheq	fp, [r5], -r0
   15630:	andeq	r0, r3, r6, lsr sl

00015634 <__flatcc_fb_close_output_file@@Base>:
   15634:	ldr	r3, [r0, #212]	; 0xd4
   15638:	ldr	r2, [r3, #124]	; 0x7c
   1563c:	cmp	r2, #0
   15640:	bxne	lr
   15644:	push	{r4, r5, r6, lr}
   15648:	ldr	r5, [r3, #108]	; 0x6c
   1564c:	cmp	r5, #0
   15650:	popne	{r4, r5, r6, pc}
   15654:	ldr	r3, [r0, #204]	; 0xcc
   15658:	cmp	r3, #0
   1565c:	popeq	{r4, r5, r6, pc}
   15660:	mov	r4, r0
   15664:	mov	r0, r3
   15668:	bl	14104 <fclose@plt>
   1566c:	str	r5, [r4, #204]	; 0xcc
   15670:	pop	{r4, r5, r6, pc}

00015674 <__flatcc_fb_end_output_c@@Base>:
   15674:	ldr	r3, [pc, #40]	; 156a4 <__flatcc_fb_end_output_c@@Base+0x30>
   15678:	push	{r4, lr}
   1567c:	mov	r4, r0
   15680:	ldr	r0, [r0, #204]	; 0xcc
   15684:	ldr	r3, [r3]
   15688:	cmp	r3, r0
   1568c:	cmpne	r0, #0
   15690:	beq	15698 <__flatcc_fb_end_output_c@@Base+0x24>
   15694:	bl	14104 <fclose@plt>
   15698:	mov	r3, #0
   1569c:	str	r3, [r4, #204]	; 0xcc
   156a0:	pop	{r4, pc}
   156a4:	strheq	fp, [r5], -r4

000156a8 <__flatcc_fb_init_output_c@@Base>:
   156a8:	ldr	r2, [r1, #128]	; 0x80
   156ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   156b0:	mov	r5, r1
   156b4:	mov	r4, r0
   156b8:	ldr	r3, [pc, #344]	; 15818 <__flatcc_fb_init_output_c@@Base+0x170>
   156bc:	cmp	r2, #0
   156c0:	mov	r2, #232	; 0xe8
   156c4:	ldr	r8, [r1, #216]	; 0xd8
   156c8:	mov	r1, #0
   156cc:	ldr	r9, [pc, #328]	; 1581c <__flatcc_fb_init_output_c@@Base+0x174>
   156d0:	moveq	r9, r3
   156d4:	ldr	r3, [pc, #324]	; 15820 <__flatcc_fb_init_output_c@@Base+0x178>
   156d8:	cmp	r8, #0
   156dc:	moveq	r8, r3
   156e0:	bl	140d4 <memset@plt>
   156e4:	ldr	r7, [r5, #196]	; 0xc4
   156e8:	str	r5, [r4, #212]	; 0xd4
   156ec:	cmp	r7, #0
   156f0:	beq	15728 <__flatcc_fb_init_output_c@@Base+0x80>
   156f4:	mov	r0, r7
   156f8:	bl	140a4 <strlen@plt>
   156fc:	cmp	r0, #100	; 0x64
   15700:	mov	r6, r0
   15704:	bls	15730 <__flatcc_fb_init_output_c@@Base+0x88>
   15708:	ldr	r3, [pc, #276]	; 15824 <__flatcc_fb_init_output_c@@Base+0x17c>
   1570c:	mov	r2, #100	; 0x64
   15710:	mvn	r5, #0
   15714:	ldr	r1, [pc, #268]	; 15828 <__flatcc_fb_init_output_c@@Base+0x180>
   15718:	ldr	r0, [r3]
   1571c:	bl	140bc <fprintf@plt>
   15720:	mov	r0, r5
   15724:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15728:	ldr	r7, [pc, #252]	; 1582c <__flatcc_fb_init_output_c@@Base+0x184>
   1572c:	mov	r6, #11
   15730:	mov	r1, r7
   15734:	mov	r2, #100	; 0x64
   15738:	mov	r0, r4
   1573c:	add	sl, r4, #102	; 0x66
   15740:	bl	140e0 <strncpy@plt>
   15744:	mov	r2, #0
   15748:	cmp	r6, r2
   1574c:	movne	r3, r4
   15750:	movne	r1, #95	; 0x5f
   15754:	strb	r2, [r4, #100]	; 0x64
   15758:	strbne	r1, [r3, r6]!
   1575c:	strbne	r2, [r3, #1]
   15760:	ldrb	r7, [sl, #-102]	; 0xffffff9a
   15764:	cmp	r7, #0
   15768:	bne	157a0 <__flatcc_fb_init_output_c@@Base+0xf8>
   1576c:	add	r6, r4, r6
   15770:	strb	r7, [sl]
   15774:	strb	r7, [r6, #102]	; 0x66
   15778:	ldr	r3, [r5, #176]	; 0xb0
   1577c:	ldr	r5, [r5, #108]	; 0x6c
   15780:	str	r3, [r4, #224]	; 0xe0
   15784:	cmp	r5, #0
   15788:	beq	157b4 <__flatcc_fb_init_output_c@@Base+0x10c>
   1578c:	ldr	r3, [pc, #156]	; 15830 <__flatcc_fb_init_output_c@@Base+0x188>
   15790:	mov	r5, r7
   15794:	ldr	r3, [r3]
   15798:	str	r3, [r4, #204]	; 0xcc
   1579c:	b	15720 <__flatcc_fb_init_output_c@@Base+0x78>
   157a0:	bl	14080 <__ctype_toupper_loc@plt>
   157a4:	ldr	r3, [r0]
   157a8:	ldr	r3, [r3, r7, lsl #2]
   157ac:	strb	r3, [sl], #1
   157b0:	b	15760 <__flatcc_fb_init_output_c@@Base+0xb8>
   157b4:	ldr	r3, [r4, #212]	; 0xd4
   157b8:	ldr	r1, [r3, #124]	; 0x7c
   157bc:	cmp	r1, #0
   157c0:	beq	15720 <__flatcc_fb_init_output_c@@Base+0x78>
   157c4:	mov	r3, #1
   157c8:	ldr	r2, [pc, #80]	; 15820 <__flatcc_fb_init_output_c@@Base+0x178>
   157cc:	mov	r0, r8
   157d0:	bl	23d68 <__flatcc_fb_create_join_path@@Base>
   157d4:	subs	r6, r0, #0
   157d8:	bne	157e0 <__flatcc_fb_init_output_c@@Base+0x138>
   157dc:	bl	15554 <flatcc_parse_file@@Base+0x570>
   157e0:	mov	r1, r9
   157e4:	bl	13fe4 <fopen@plt>
   157e8:	cmp	r0, #0
   157ec:	str	r0, [r4, #204]	; 0xcc
   157f0:	bne	1580c <__flatcc_fb_init_output_c@@Base+0x164>
   157f4:	ldr	r3, [pc, #40]	; 15824 <__flatcc_fb_init_output_c@@Base+0x17c>
   157f8:	mov	r2, r6
   157fc:	mvn	r5, #0
   15800:	ldr	r1, [pc, #44]	; 15834 <__flatcc_fb_init_output_c@@Base+0x18c>
   15804:	ldr	r0, [r3]
   15808:	bl	140bc <fprintf@plt>
   1580c:	mov	r0, r6
   15810:	bl	13ff0 <free@plt>
   15814:	b	15720 <__flatcc_fb_init_output_c@@Base+0x78>
   15818:	strdeq	r0, [r3], -ip
   1581c:	andeq	r0, r3, r8, asr sl
   15820:	strdeq	r2, [r3], -r7
   15824:	strheq	fp, [r5], -r0
   15828:	andeq	r0, r3, r7, ror #20
   1582c:	andeq	r0, r3, fp, asr sl
   15830:	strheq	fp, [r5], -r4
   15834:	andeq	r0, r3, r6, lsr sl

00015838 <__flatcc_fb_gen_c_includes@@Base>:
   15838:	ldr	r3, [r0, #208]	; 0xd0
   1583c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15840:	mov	r6, r0
   15844:	sub	sp, sp, #36	; 0x24
   15848:	mov	r0, #0
   1584c:	mov	r9, r1
   15850:	mov	r1, #0
   15854:	mov	sl, r2
   15858:	ldr	fp, [pc, #224]	; 15940 <__flatcc_fb_gen_c_includes@@Base+0x108>
   1585c:	ldr	r4, [r3]
   15860:	strd	r0, [sp, #16]
   15864:	strd	r0, [sp, #24]
   15868:	ldr	r0, [r3, #164]	; 0xa4
   1586c:	bl	23bbc <__flatcc_fb_copy_path@@Base>
   15870:	mov	r1, r0
   15874:	mov	r2, #1
   15878:	add	r0, sp, #16
   1587c:	bl	224f0 <str_set_insert_item@@Base>
   15880:	cmp	r4, #0
   15884:	bne	158a0 <__flatcc_fb_gen_c_includes@@Base+0x68>
   15888:	ldr	r1, [pc, #180]	; 15944 <__flatcc_fb_gen_c_includes@@Base+0x10c>
   1588c:	mov	r2, r4
   15890:	add	r0, sp, #16
   15894:	bl	22478 <str_set_destroy@@Base>
   15898:	add	sp, sp, #36	; 0x24
   1589c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158a0:	ldr	r3, [r6, #212]	; 0xd4
   158a4:	ldrd	r0, [r4, #8]
   158a8:	ldr	r2, [r3, #96]	; 0x60
   158ac:	bl	23f6c <__flatcc_fb_create_basename@@Base>
   158b0:	subs	r7, r0, #0
   158b4:	bne	158bc <__flatcc_fb_gen_c_includes@@Base+0x84>
   158b8:	bl	15554 <flatcc_parse_file@@Base+0x570>
   158bc:	ldr	r4, [r4]
   158c0:	bl	23bbc <__flatcc_fb_copy_path@@Base>
   158c4:	subs	r5, r0, #0
   158c8:	beq	158b8 <__flatcc_fb_gen_c_includes@@Base+0x80>
   158cc:	sub	r8, r5, #1
   158d0:	ldrb	r3, [r8, #1]!
   158d4:	cmp	r3, #0
   158d8:	bne	15908 <__flatcc_fb_gen_c_includes@@Base+0xd0>
   158dc:	mov	r2, #1
   158e0:	mov	r1, r5
   158e4:	add	r0, sp, #16
   158e8:	bl	224f0 <str_set_insert_item@@Base>
   158ec:	cmp	r0, #0
   158f0:	beq	15924 <__flatcc_fb_gen_c_includes@@Base+0xec>
   158f4:	mov	r0, r5
   158f8:	bl	13ff0 <free@plt>
   158fc:	mov	r0, r7
   15900:	bl	13ff0 <free@plt>
   15904:	b	15880 <__flatcc_fb_gen_c_includes@@Base+0x48>
   15908:	str	r3, [sp, #12]
   1590c:	bl	14080 <__ctype_toupper_loc@plt>
   15910:	ldr	r2, [r0]
   15914:	ldr	r3, [sp, #12]
   15918:	ldr	r3, [r2, r3, lsl #2]
   1591c:	strb	r3, [r8]
   15920:	b	158d0 <__flatcc_fb_gen_c_includes@@Base+0x98>
   15924:	mov	r3, sl
   15928:	mov	r2, r5
   1592c:	ldr	r0, [r6, #204]	; 0xcc
   15930:	mov	r1, fp
   15934:	stm	sp, {r7, r9}
   15938:	bl	140bc <fprintf@plt>
   1593c:	b	158fc <__flatcc_fb_gen_c_includes@@Base+0xc4>
   15940:	muleq	r3, lr, sl
   15944:	andeq	r5, r1, ip, asr #10

00015948 <__flatcc_fb_copy_scope@@Base>:
   15948:	push	{r4, r5, r6, r7, r8, lr}
   1594c:	ldr	r3, [r0]
   15950:	ldr	r4, [r0, #24]
   15954:	mov	r2, r4
   15958:	cmp	r3, #0
   1595c:	bne	15974 <__flatcc_fb_copy_scope@@Base+0x2c>
   15960:	cmp	r2, #101	; 0x65
   15964:	bls	15988 <__flatcc_fb_copy_scope@@Base+0x40>
   15968:	mvn	r0, #0
   1596c:	strb	r3, [r1]
   15970:	pop	{r4, r5, r6, r7, r8, pc}
   15974:	ldm	r3, {r3, ip}
   15978:	ldr	ip, [ip, #4]
   1597c:	add	ip, ip, #1
   15980:	add	r2, r2, ip
   15984:	b	15958 <__flatcc_fb_copy_scope@@Base+0x10>
   15988:	mov	r6, r0
   1598c:	mov	r5, r1
   15990:	mov	r0, r1
   15994:	mov	r2, r4
   15998:	ldr	r1, [r6, #20]
   1599c:	bl	13ffc <memcpy@plt>
   159a0:	ldr	r6, [r6]
   159a4:	mov	r8, #95	; 0x5f
   159a8:	cmp	r6, #0
   159ac:	add	r0, r5, r4
   159b0:	bne	159c0 <__flatcc_fb_copy_scope@@Base+0x78>
   159b4:	strb	r6, [r0]
   159b8:	mov	r0, r4
   159bc:	pop	{r4, r5, r6, r7, r8, pc}
   159c0:	ldr	r3, [r6, #4]
   159c4:	ldm	r3, {r1, r7}
   159c8:	mov	r2, r7
   159cc:	add	r7, r4, r7
   159d0:	bl	13ffc <memcpy@plt>
   159d4:	add	r4, r7, #1
   159d8:	strb	r8, [r5, r7]
   159dc:	ldr	r6, [r6]
   159e0:	b	159a8 <__flatcc_fb_copy_scope@@Base+0x60>

000159e4 <__flatcc_fb_scoped_symbol_name@@Base>:
   159e4:	ldr	r3, [r2, #204]	; 0xcc
   159e8:	push	{r4, r5, r6, lr}
   159ec:	mov	r4, r2
   159f0:	ldr	r5, [r1, #4]
   159f4:	cmp	r3, r0
   159f8:	beq	15a28 <__flatcc_fb_scoped_symbol_name@@Base+0x44>
   159fc:	mov	r1, r2
   15a00:	bl	15948 <__flatcc_fb_copy_scope@@Base>
   15a04:	cmp	r0, #0
   15a08:	strge	r0, [r4, #208]	; 0xd0
   15a0c:	bge	15a28 <__flatcc_fb_scoped_symbol_name@@Base+0x44>
   15a10:	mov	r3, #0
   15a14:	ldr	r0, [pc, #112]	; 15a8c <__flatcc_fb_scoped_symbol_name@@Base+0xa8>
   15a18:	str	r3, [r4, #208]	; 0xd0
   15a1c:	ldr	r3, [pc, #108]	; 15a90 <__flatcc_fb_scoped_symbol_name@@Base+0xac>
   15a20:	ldr	r1, [r3]
   15a24:	bl	14158 <fputs@plt>
   15a28:	ldr	r2, [r5, #4]
   15a2c:	ldr	r3, [r4, #208]	; 0xd0
   15a30:	add	r3, r2, r3
   15a34:	cmp	r3, #203	; 0xcb
   15a38:	strd	r2, [r4, #212]	; 0xd4
   15a3c:	ble	15a68 <__flatcc_fb_scoped_symbol_name@@Base+0x84>
   15a40:	ldr	r0, [pc, #72]	; 15a90 <__flatcc_fb_scoped_symbol_name@@Base+0xac>
   15a44:	ldr	r1, [pc, #72]	; 15a94 <__flatcc_fb_scoped_symbol_name@@Base+0xb0>
   15a48:	ldr	r3, [r5]
   15a4c:	ldr	r0, [r0]
   15a50:	bl	140bc <fprintf@plt>
   15a54:	ldr	r3, [r4, #208]	; 0xd0
   15a58:	rsb	r3, r3, #203	; 0xcb
   15a5c:	str	r3, [r4, #212]	; 0xd4
   15a60:	mov	r3, #203	; 0xcb
   15a64:	str	r3, [r4, #216]	; 0xd8
   15a68:	ldr	r0, [r4, #208]	; 0xd0
   15a6c:	ldr	r1, [r5]
   15a70:	ldr	r2, [r4, #212]	; 0xd4
   15a74:	add	r0, r4, r0
   15a78:	bl	13ffc <memcpy@plt>
   15a7c:	ldr	r3, [r4, #216]	; 0xd8
   15a80:	mov	r2, #0
   15a84:	strb	r2, [r4, r3]
   15a88:	pop	{r4, r5, r6, pc}
   15a8c:	andeq	r0, r3, r3, asr #21
   15a90:	strheq	fp, [r5], -r0
   15a94:	andeq	r0, r3, r0, ror #21

00015a98 <__flatcc_fb_codegen_common_c@@Base>:
   15a98:	push	{r4, r5, r6, lr}
   15a9c:	mov	r4, r0
   15aa0:	bl	140a4 <strlen@plt>
   15aa4:	ldr	r3, [r4, #212]	; 0xd4
   15aa8:	sub	r6, r0, #1
   15aac:	ldr	r3, [r3, #144]	; 0x90
   15ab0:	cmp	r3, #0
   15ab4:	bne	15af8 <__flatcc_fb_codegen_common_c@@Base+0x60>
   15ab8:	ldr	r3, [r4, #212]	; 0xd4
   15abc:	ldr	r5, [r3, #148]	; 0x94
   15ac0:	cmp	r5, #0
   15ac4:	beq	15b18 <__flatcc_fb_codegen_common_c@@Base+0x80>
   15ac8:	ldr	r3, [pc, #112]	; 15b40 <__flatcc_fb_codegen_common_c@@Base+0xa8>
   15acc:	mov	r2, r6
   15ad0:	mov	r1, r4
   15ad4:	mov	r0, r4
   15ad8:	bl	15578 <__flatcc_fb_open_output_file@@Base>
   15adc:	subs	r5, r0, #0
   15ae0:	bne	15b14 <__flatcc_fb_codegen_common_c@@Base+0x7c>
   15ae4:	mov	r0, r4
   15ae8:	bl	1a210 <__flatcc_fb_gen_common_c_builder_header@@Base>
   15aec:	mov	r0, r4
   15af0:	bl	15634 <__flatcc_fb_close_output_file@@Base>
   15af4:	b	15b18 <__flatcc_fb_codegen_common_c@@Base+0x80>
   15af8:	ldr	r3, [pc, #68]	; 15b44 <__flatcc_fb_codegen_common_c@@Base+0xac>
   15afc:	mov	r2, r6
   15b00:	mov	r1, r4
   15b04:	mov	r0, r4
   15b08:	bl	15578 <__flatcc_fb_open_output_file@@Base>
   15b0c:	cmp	r0, #0
   15b10:	beq	15b20 <__flatcc_fb_codegen_common_c@@Base+0x88>
   15b14:	mvn	r5, #0
   15b18:	mov	r0, r5
   15b1c:	pop	{r4, r5, r6, pc}
   15b20:	mov	r0, r4
   15b24:	bl	175ec <__flatcc_fb_gen_common_c_header@@Base>
   15b28:	mov	r5, r0
   15b2c:	mov	r0, r4
   15b30:	bl	15634 <__flatcc_fb_close_output_file@@Base>
   15b34:	cmp	r5, #0
   15b38:	beq	15ab8 <__flatcc_fb_codegen_common_c@@Base+0x20>
   15b3c:	b	15b18 <__flatcc_fb_codegen_common_c@@Base+0x80>
   15b40:	andeq	r0, r3, r7, lsl fp
   15b44:	andeq	r0, r3, r6, lsl #22

00015b48 <__flatcc_fb_codegen_c@@Base>:
   15b48:	push	{r4, r5, r6, lr}
   15b4c:	mov	r4, r0
   15b50:	mov	r2, #0
   15b54:	ldr	r0, [r1, #60]	; 0x3c
   15b58:	str	r1, [r4, #208]	; 0xd0
   15b5c:	mov	r1, r2
   15b60:	bl	23610 <fb_scope_table_find@@Base>
   15b64:	ldr	r3, [r4, #208]	; 0xd0
   15b68:	ldr	r5, [r3, #160]	; 0xa0
   15b6c:	str	r0, [r4, #216]	; 0xd8
   15b70:	mov	r0, r5
   15b74:	bl	140a4 <strlen@plt>
   15b78:	ldr	r3, [r4, #212]	; 0xd4
   15b7c:	mov	r6, r0
   15b80:	ldr	r3, [r3, #152]	; 0x98
   15b84:	cmp	r3, #0
   15b88:	beq	15bcc <__flatcc_fb_codegen_c@@Base+0x84>
   15b8c:	mov	r2, r0
   15b90:	ldr	r3, [pc, #344]	; 15cf0 <__flatcc_fb_codegen_c@@Base+0x1a8>
   15b94:	mov	r1, r5
   15b98:	mov	r0, r4
   15b9c:	bl	15578 <__flatcc_fb_open_output_file@@Base>
   15ba0:	cmp	r0, #0
   15ba4:	beq	15bb4 <__flatcc_fb_codegen_c@@Base+0x6c>
   15ba8:	mvn	r5, #0
   15bac:	mov	r0, r5
   15bb0:	pop	{r4, r5, r6, pc}
   15bb4:	mov	r0, r4
   15bb8:	bl	181fc <__flatcc_fb_gen_c_reader@@Base>
   15bbc:	subs	r5, r0, #0
   15bc0:	bne	15bac <__flatcc_fb_codegen_c@@Base+0x64>
   15bc4:	mov	r0, r4
   15bc8:	bl	15634 <__flatcc_fb_close_output_file@@Base>
   15bcc:	ldr	r3, [r4, #212]	; 0xd4
   15bd0:	ldr	r3, [r3, #156]	; 0x9c
   15bd4:	cmp	r3, #0
   15bd8:	beq	15c14 <__flatcc_fb_codegen_c@@Base+0xcc>
   15bdc:	ldr	r1, [r4, #208]	; 0xd0
   15be0:	mov	r2, r6
   15be4:	mov	r0, r4
   15be8:	ldr	r3, [pc, #260]	; 15cf4 <__flatcc_fb_codegen_c@@Base+0x1ac>
   15bec:	ldr	r1, [r1, #160]	; 0xa0
   15bf0:	bl	15578 <__flatcc_fb_open_output_file@@Base>
   15bf4:	cmp	r0, #0
   15bf8:	bne	15ba8 <__flatcc_fb_codegen_c@@Base+0x60>
   15bfc:	mov	r0, r4
   15c00:	bl	1aa80 <__flatcc_fb_gen_c_builder@@Base>
   15c04:	subs	r5, r0, #0
   15c08:	bne	15bac <__flatcc_fb_codegen_c@@Base+0x64>
   15c0c:	mov	r0, r4
   15c10:	bl	15634 <__flatcc_fb_close_output_file@@Base>
   15c14:	ldr	r3, [r4, #212]	; 0xd4
   15c18:	ldr	r3, [r3, #160]	; 0xa0
   15c1c:	cmp	r3, #0
   15c20:	beq	15c5c <__flatcc_fb_codegen_c@@Base+0x114>
   15c24:	ldr	r1, [r4, #208]	; 0xd0
   15c28:	mov	r2, r6
   15c2c:	mov	r0, r4
   15c30:	ldr	r3, [pc, #192]	; 15cf8 <__flatcc_fb_codegen_c@@Base+0x1b0>
   15c34:	ldr	r1, [r1, #160]	; 0xa0
   15c38:	bl	15578 <__flatcc_fb_open_output_file@@Base>
   15c3c:	cmp	r0, #0
   15c40:	bne	15ba8 <__flatcc_fb_codegen_c@@Base+0x60>
   15c44:	mov	r0, r4
   15c48:	bl	1b670 <__flatcc_fb_gen_c_verifier@@Base>
   15c4c:	subs	r5, r0, #0
   15c50:	bne	15bac <__flatcc_fb_codegen_c@@Base+0x64>
   15c54:	mov	r0, r4
   15c58:	bl	15634 <__flatcc_fb_close_output_file@@Base>
   15c5c:	ldr	r3, [r4, #212]	; 0xd4
   15c60:	ldr	r3, [r3, #164]	; 0xa4
   15c64:	cmp	r3, #0
   15c68:	beq	15ca4 <__flatcc_fb_codegen_c@@Base+0x15c>
   15c6c:	ldr	r1, [r4, #208]	; 0xd0
   15c70:	mov	r2, r6
   15c74:	mov	r0, r4
   15c78:	ldr	r3, [pc, #124]	; 15cfc <__flatcc_fb_codegen_c@@Base+0x1b4>
   15c7c:	ldr	r1, [r1, #160]	; 0xa0
   15c80:	bl	15578 <__flatcc_fb_open_output_file@@Base>
   15c84:	cmp	r0, #0
   15c88:	bne	15ba8 <__flatcc_fb_codegen_c@@Base+0x60>
   15c8c:	mov	r0, r4
   15c90:	bl	1e2e0 <__flatcc_fb_gen_c_json_parser@@Base>
   15c94:	subs	r5, r0, #0
   15c98:	bne	15bac <__flatcc_fb_codegen_c@@Base+0x64>
   15c9c:	mov	r0, r4
   15ca0:	bl	15634 <__flatcc_fb_close_output_file@@Base>
   15ca4:	ldr	r3, [r4, #212]	; 0xd4
   15ca8:	ldr	r5, [r3, #168]	; 0xa8
   15cac:	cmp	r5, #0
   15cb0:	beq	15bac <__flatcc_fb_codegen_c@@Base+0x64>
   15cb4:	ldr	r1, [r4, #208]	; 0xd0
   15cb8:	mov	r2, r6
   15cbc:	mov	r0, r4
   15cc0:	ldr	r3, [pc, #56]	; 15d00 <__flatcc_fb_codegen_c@@Base+0x1b8>
   15cc4:	ldr	r1, [r1, #160]	; 0xa0
   15cc8:	bl	15578 <__flatcc_fb_open_output_file@@Base>
   15ccc:	cmp	r0, #0
   15cd0:	bne	15ba8 <__flatcc_fb_codegen_c@@Base+0x60>
   15cd4:	mov	r0, r4
   15cd8:	bl	20734 <__flatcc_fb_gen_c_json_printer@@Base>
   15cdc:	subs	r5, r0, #0
   15ce0:	bne	15bac <__flatcc_fb_codegen_c@@Base+0x64>
   15ce4:	mov	r0, r4
   15ce8:	bl	15634 <__flatcc_fb_close_output_file@@Base>
   15cec:	b	15bac <__flatcc_fb_codegen_c@@Base+0x64>
   15cf0:	andeq	r7, r4, pc
   15cf4:	andeq	r6, r4, r3, lsr #30
   15cf8:	andeq	r0, r3, r9, lsr #22
   15cfc:	andeq	r0, r3, r5, lsr fp
   15d00:	andeq	r0, r3, r4, asr #22
   15d04:	mov	r2, r1
   15d08:	mov	r1, r0
   15d0c:	ldr	r0, [r0, #12]
   15d10:	b	159e4 <__flatcc_fb_scoped_symbol_name@@Base>
   15d14:	push	{r4, r5, lr}
   15d18:	sub	sp, sp, #228	; 0xe4
   15d1c:	mov	r5, r1
   15d20:	mov	r4, r0
   15d24:	mov	r2, #220	; 0xdc
   15d28:	mov	r1, #0
   15d2c:	add	r0, sp, #4
   15d30:	bl	140d4 <memset@plt>
   15d34:	ldrh	r3, [r5, #8]
   15d38:	cmp	r3, #1
   15d3c:	bls	15d54 <__flatcc_fb_codegen_c@@Base+0x20c>
   15d40:	ldr	r3, [pc, #232]	; 15e30 <__flatcc_fb_codegen_c@@Base+0x2e8>
   15d44:	movw	r2, #863	; 0x35f
   15d48:	ldr	r1, [pc, #228]	; 15e34 <__flatcc_fb_codegen_c@@Base+0x2ec>
   15d4c:	ldr	r0, [pc, #228]	; 15e38 <__flatcc_fb_codegen_c@@Base+0x2f0>
   15d50:	bl	1417c <__assert_fail@plt>
   15d54:	add	r1, sp, #4
   15d58:	mov	r0, r5
   15d5c:	bl	15d04 <__flatcc_fb_codegen_c@@Base+0x1bc>
   15d60:	ldrh	r3, [r5, #8]
   15d64:	cmp	r3, #1
   15d68:	bne	15df4 <__flatcc_fb_codegen_c@@Base+0x2ac>
   15d6c:	ldrd	r2, [r5, #112]	; 0x70
   15d70:	ldr	r0, [r4, #204]	; 0xcc
   15d74:	orrs	r3, r2, r3
   15d78:	bne	15de0 <__flatcc_fb_codegen_c@@Base+0x298>
   15d7c:	add	r2, sp, #4
   15d80:	ldr	r1, [pc, #180]	; 15e3c <__flatcc_fb_codegen_c@@Base+0x2f4>
   15d84:	bl	140bc <fprintf@plt>
   15d88:	add	r3, sp, #4
   15d8c:	ldr	r1, [pc, #172]	; 15e40 <__flatcc_fb_codegen_c@@Base+0x2f8>
   15d90:	mov	r2, r3
   15d94:	ldr	r0, [r4, #204]	; 0xcc
   15d98:	bl	140bc <fprintf@plt>
   15d9c:	add	r3, sp, #4
   15da0:	ldr	r1, [pc, #156]	; 15e44 <__flatcc_fb_codegen_c@@Base+0x2fc>
   15da4:	mov	r2, r3
   15da8:	ldr	r0, [r4, #204]	; 0xcc
   15dac:	bl	140bc <fprintf@plt>
   15db0:	add	r3, sp, #4
   15db4:	ldr	r1, [pc, #140]	; 15e48 <__flatcc_fb_codegen_c@@Base+0x300>
   15db8:	mov	r2, r3
   15dbc:	ldr	r0, [r4, #204]	; 0xcc
   15dc0:	bl	140bc <fprintf@plt>
   15dc4:	ldr	r1, [pc, #128]	; 15e4c <__flatcc_fb_codegen_c@@Base+0x304>
   15dc8:	add	r3, sp, #4
   15dcc:	mov	r2, r3
   15dd0:	ldr	r0, [r4, #204]	; 0xcc
   15dd4:	bl	140bc <fprintf@plt>
   15dd8:	add	sp, sp, #228	; 0xe4
   15ddc:	pop	{r4, r5, pc}
   15de0:	add	r3, sp, #4
   15de4:	ldr	r1, [pc, #100]	; 15e50 <__flatcc_fb_codegen_c@@Base+0x308>
   15de8:	mov	r2, r3
   15dec:	bl	140bc <fprintf@plt>
   15df0:	b	15d88 <__flatcc_fb_codegen_c@@Base+0x240>
   15df4:	add	r3, sp, #4
   15df8:	ldr	r1, [pc, #84]	; 15e54 <__flatcc_fb_codegen_c@@Base+0x30c>
   15dfc:	mov	r2, r3
   15e00:	ldr	r0, [r4, #204]	; 0xcc
   15e04:	bl	140bc <fprintf@plt>
   15e08:	add	r3, sp, #4
   15e0c:	mov	r2, r4
   15e10:	ldr	r1, [pc, #64]	; 15e58 <__flatcc_fb_codegen_c@@Base+0x310>
   15e14:	ldr	r0, [r4, #204]	; 0xcc
   15e18:	bl	140bc <fprintf@plt>
   15e1c:	add	r3, sp, #4
   15e20:	mov	r2, r4
   15e24:	ldr	r1, [pc, #48]	; 15e5c <__flatcc_fb_codegen_c@@Base+0x314>
   15e28:	ldr	r0, [r4, #204]	; 0xcc
   15e2c:	b	15dd4 <__flatcc_fb_codegen_c@@Base+0x28c>
   15e30:	andeq	r0, r3, r4, asr fp
   15e34:			; <UNDEFINED> instruction: 0x00030cb0
   15e38:	andeq	r0, r3, r0, lsl #26
   15e3c:	andeq	r0, r3, r2, asr #26
   15e40:	andeq	r0, r3, r2, lsl #27
   15e44:	andeq	r0, r3, r4, lsr #27
   15e48:	andeq	r0, r3, r8, asr #27
   15e4c:	andeq	r0, r3, r7, ror #27
   15e50:	andeq	r0, r3, r9, ror #26
   15e54:	andeq	r0, r3, r8, lsl #28
   15e58:	andeq	r0, r3, r4, lsr lr
   15e5c:	andeq	r0, r3, sl, asr lr
   15e60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15e64:	subs	r4, r2, #0
   15e68:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15e6c:	mov	r5, r0
   15e70:	mov	r6, r1
   15e74:	ldr	r8, [pc, #116]	; 15ef0 <__flatcc_fb_codegen_c@@Base+0x3a8>
   15e78:	mov	r3, #1
   15e7c:	mov	r2, #0
   15e80:	ldr	r9, [pc, #108]	; 15ef4 <__flatcc_fb_codegen_c@@Base+0x3ac>
   15e84:	ldr	r7, [pc, #108]	; 15ef8 <__flatcc_fb_codegen_c@@Base+0x3b0>
   15e88:	ldr	r1, [r4, #4]
   15e8c:	ldr	r1, [r1, #8]
   15e90:	cmp	r1, r2
   15e94:	beq	15eb0 <__flatcc_fb_codegen_c@@Base+0x368>
   15e98:	cmp	r3, #0
   15e9c:	mov	r2, r6
   15ea0:	ldr	r0, [r5]
   15ea4:	movne	r1, r9
   15ea8:	moveq	r1, r8
   15eac:	bl	140bc <fprintf@plt>
   15eb0:	ldr	r2, [r4, #4]
   15eb4:	mov	r1, r7
   15eb8:	ldr	r0, [r5]
   15ebc:	ldr	r3, [r2]
   15ec0:	ldr	r2, [r2, #4]
   15ec4:	bl	140bc <fprintf@plt>
   15ec8:	ldr	r3, [r4, #4]
   15ecc:	ldr	r4, [r4]
   15ed0:	ldr	r2, [r3, #8]
   15ed4:	mov	r3, #0
   15ed8:	cmp	r4, r3
   15edc:	bne	15e88 <__flatcc_fb_codegen_c@@Base+0x340>
   15ee0:	ldr	r0, [pc, #20]	; 15efc <__flatcc_fb_codegen_c@@Base+0x3b4>
   15ee4:	ldr	r1, [r5]
   15ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   15eec:	b	14158 <fputs@plt>
   15ef0:	andeq	r0, r3, r9, lsl #29
   15ef4:	andeq	r0, r3, r2, lsl #29
   15ef8:	andeq	r9, r3, fp, asr #4
   15efc:	muleq	r4, r3, r9
   15f00:	push	{r0, r1, r2, lr}
   15f04:	ldr	r4, [pc, #48]	; 15f3c <__flatcc_fb_codegen_c@@Base+0x3f4>
   15f08:	ldr	r3, [pc, #48]	; 15f40 <__flatcc_fb_codegen_c@@Base+0x3f8>
   15f0c:	ldr	r0, [pc, #48]	; 15f44 <__flatcc_fb_codegen_c@@Base+0x3fc>
   15f10:	mov	r2, r4
   15f14:	ldr	r1, [pc, #44]	; 15f48 <__flatcc_fb_codegen_c@@Base+0x400>
   15f18:	str	r3, [sp]
   15f1c:	mov	r3, #141	; 0x8d
   15f20:	ldr	r0, [r0]
   15f24:	bl	140bc <fprintf@plt>
   15f28:	ldr	r3, [pc, #28]	; 15f4c <__flatcc_fb_codegen_c@@Base+0x404>
   15f2c:	mov	r2, #141	; 0x8d
   15f30:	mov	r1, r4
   15f34:	ldr	r0, [pc, #20]	; 15f50 <__flatcc_fb_codegen_c@@Base+0x408>
   15f38:	bl	1417c <__assert_fail@plt>
   15f3c:	muleq	r3, r0, lr
   15f40:	andeq	r0, r3, r4, ror #29
   15f44:	strheq	fp, [r5], -r0
   15f48:	ldrdeq	r0, [r3], -r9
   15f4c:	andeq	r0, r3, r5, ror #22
   15f50:	andeq	r9, r3, fp, lsr r2
   15f54:	push	{r0, r1, r2, lr}
   15f58:	ldr	r4, [pc, #48]	; 15f90 <__flatcc_fb_codegen_c@@Base+0x448>
   15f5c:	ldr	r3, [pc, #48]	; 15f94 <__flatcc_fb_codegen_c@@Base+0x44c>
   15f60:	ldr	r0, [pc, #48]	; 15f98 <__flatcc_fb_codegen_c@@Base+0x450>
   15f64:	mov	r2, r4
   15f68:	ldr	r1, [pc, #44]	; 15f9c <__flatcc_fb_codegen_c@@Base+0x454>
   15f6c:	str	r3, [sp]
   15f70:	mov	r3, #96	; 0x60
   15f74:	ldr	r0, [r0]
   15f78:	bl	140bc <fprintf@plt>
   15f7c:	ldr	r3, [pc, #28]	; 15fa0 <__flatcc_fb_codegen_c@@Base+0x458>
   15f80:	mov	r2, #96	; 0x60
   15f84:	mov	r1, r4
   15f88:	ldr	r0, [pc, #20]	; 15fa4 <__flatcc_fb_codegen_c@@Base+0x45c>
   15f8c:	bl	1417c <__assert_fail@plt>
   15f90:	muleq	r3, r0, lr
   15f94:	andeq	r0, r3, r4, ror #29
   15f98:	strheq	fp, [r5], -r0
   15f9c:	ldrdeq	r0, [r3], -r9
   15fa0:	andeq	r0, r3, r6, ror fp
   15fa4:	andeq	r9, r3, fp, lsr r2
   15fa8:	push	{r0, r1, r2, lr}
   15fac:	ldr	r4, [pc, #48]	; 15fe4 <__flatcc_fb_codegen_c@@Base+0x49c>
   15fb0:	ldr	r3, [pc, #48]	; 15fe8 <__flatcc_fb_codegen_c@@Base+0x4a0>
   15fb4:	ldr	r0, [pc, #48]	; 15fec <__flatcc_fb_codegen_c@@Base+0x4a4>
   15fb8:	mov	r2, r4
   15fbc:	ldr	r1, [pc, #44]	; 15ff0 <__flatcc_fb_codegen_c@@Base+0x4a8>
   15fc0:	str	r3, [sp]
   15fc4:	mov	r3, #226	; 0xe2
   15fc8:	ldr	r0, [r0]
   15fcc:	bl	140bc <fprintf@plt>
   15fd0:	ldr	r3, [pc, #28]	; 15ff4 <__flatcc_fb_codegen_c@@Base+0x4ac>
   15fd4:	mov	r2, #226	; 0xe2
   15fd8:	mov	r1, r4
   15fdc:	ldr	r0, [pc, #20]	; 15ff8 <__flatcc_fb_codegen_c@@Base+0x4b0>
   15fe0:	bl	1417c <__assert_fail@plt>
   15fe4:	muleq	r3, r0, lr
   15fe8:	andeq	r0, r3, r4, ror #29
   15fec:	strheq	fp, [r5], -r0
   15ff0:	ldrdeq	r0, [r3], -r9
   15ff4:	andeq	r0, r3, r9, lsl #23
   15ff8:	andeq	r9, r3, fp, lsr r2
   15ffc:	push	{r0, r1, r2, r4, r5, lr}
   16000:	mov	r3, r0
   16004:	mov	r0, r2
   16008:	ldrh	r2, [r1, #8]
   1600c:	sub	r2, r2, #3
   16010:	cmp	r2, #3
   16014:	ldrls	pc, [pc, r2, lsl #2]
   16018:	b	160e0 <__flatcc_fb_codegen_c@@Base+0x598>
   1601c:	strheq	r6, [r1], -r4
   16020:	andeq	r6, r1, r0, rrx
   16024:	andeq	r6, r1, ip, lsr #32
   16028:	andeq	r6, r1, r8, lsl #1
   1602c:	sub	r3, r3, #1
   16030:	cmp	r3, #8
   16034:	bhi	1605c <__flatcc_fb_codegen_c@@Base+0x514>
   16038:	ldr	r2, [pc, #212]	; 16114 <__flatcc_fb_codegen_c@@Base+0x5cc>
   1603c:	ldrd	r4, [r1]
   16040:	ldr	r1, [pc, #208]	; 16118 <__flatcc_fb_codegen_c@@Base+0x5d0>
   16044:	add	r3, r2, r3, lsl #2
   16048:	ldr	r2, [r3, #68]	; 0x44
   1604c:	strd	r4, [sp]
   16050:	bl	14128 <sprintf@plt>
   16054:	add	sp, sp, #12
   16058:	pop	{r4, r5, pc}
   1605c:	bl	15fa8 <__flatcc_fb_codegen_c@@Base+0x460>
   16060:	sub	r3, r3, #1
   16064:	cmp	r3, #8
   16068:	bhi	1605c <__flatcc_fb_codegen_c@@Base+0x514>
   1606c:	ldr	r2, [pc, #160]	; 16114 <__flatcc_fb_codegen_c@@Base+0x5cc>
   16070:	ldrd	r4, [r1]
   16074:	ldr	r1, [pc, #160]	; 1611c <__flatcc_fb_codegen_c@@Base+0x5d4>
   16078:	add	r3, r2, r3, lsl #2
   1607c:	strd	r4, [sp]
   16080:	ldr	r2, [r3, #68]	; 0x44
   16084:	b	16050 <__flatcc_fb_codegen_c@@Base+0x508>
   16088:	sub	r3, r3, #1
   1608c:	cmp	r3, #8
   16090:	bhi	1605c <__flatcc_fb_codegen_c@@Base+0x514>
   16094:	ldr	r2, [pc, #120]	; 16114 <__flatcc_fb_codegen_c@@Base+0x5cc>
   16098:	add	r2, r2, r3, lsl #2
   1609c:	ldrb	r3, [r1]
   160a0:	ldr	r1, [pc, #120]	; 16120 <__flatcc_fb_codegen_c@@Base+0x5d8>
   160a4:	ldr	r2, [r2, #68]	; 0x44
   160a8:	add	sp, sp, #12
   160ac:	pop	{r4, r5, lr}
   160b0:	b	14128 <sprintf@plt>
   160b4:	cmp	r3, #11
   160b8:	ldrdne	r2, [r1]
   160bc:	vldreq	d7, [r1]
   160c0:	ldrne	r1, [pc, #92]	; 16124 <__flatcc_fb_codegen_c@@Base+0x5dc>
   160c4:	ldreq	r1, [pc, #92]	; 16128 <__flatcc_fb_codegen_c@@Base+0x5e0>
   160c8:	vcvteq.f32.f64	s14, d7
   160cc:	vcvteq.f64.f32	d7, s14
   160d0:	vmoveq	r2, r3, d7
   160d4:	add	sp, sp, #12
   160d8:	pop	{r4, r5, lr}
   160dc:	b	14128 <sprintf@plt>
   160e0:	ldr	r3, [pc, #68]	; 1612c <__flatcc_fb_codegen_c@@Base+0x5e4>
   160e4:	ldr	r0, [pc, #68]	; 16130 <__flatcc_fb_codegen_c@@Base+0x5e8>
   160e8:	ldr	r2, [pc, #68]	; 16134 <__flatcc_fb_codegen_c@@Base+0x5ec>
   160ec:	str	r3, [sp]
   160f0:	mov	r3, #260	; 0x104
   160f4:	ldr	r1, [pc, #60]	; 16138 <__flatcc_fb_codegen_c@@Base+0x5f0>
   160f8:	ldr	r0, [r0]
   160fc:	bl	140bc <fprintf@plt>
   16100:	ldr	r3, [pc, #52]	; 1613c <__flatcc_fb_codegen_c@@Base+0x5f4>
   16104:	mov	r2, #260	; 0x104
   16108:	ldr	r1, [pc, #36]	; 16134 <__flatcc_fb_codegen_c@@Base+0x5ec>
   1610c:	ldr	r0, [pc, #44]	; 16140 <__flatcc_fb_codegen_c@@Base+0x5f8>
   16110:	bl	1417c <__assert_fail@plt>
   16114:	andeq	r0, r3, r4, asr fp
   16118:	andeq	r0, r3, fp, lsl pc
   1611c:	andeq	r0, r3, r4, lsr #30
   16120:	andeq	r0, r3, sp, lsr #30
   16124:	andeq	r0, r3, r8, lsr pc
   16128:	andeq	r0, r3, r4, lsr pc
   1612c:	andeq	r0, r3, r4, ror #29
   16130:	strheq	fp, [r5], -r0
   16134:	muleq	r3, r0, lr
   16138:	ldrdeq	r0, [r3], -r9
   1613c:			; <UNDEFINED> instruction: 0x00030bbc
   16140:	andeq	r9, r3, fp, lsr r2
   16144:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16148:	sub	sp, sp, #348	; 0x15c
   1614c:	mov	r6, r1
   16150:	add	r5, sp, #124	; 0x7c
   16154:	mov	r4, r0
   16158:	mov	r2, #220	; 0xdc
   1615c:	mov	r1, #0
   16160:	mov	r0, r5
   16164:	bl	140d4 <memset@plt>
   16168:	ldrh	r7, [r6, #8]
   1616c:	sub	r3, r7, #3
   16170:	cmp	r3, #1
   16174:	bls	1618c <__flatcc_fb_codegen_c@@Base+0x644>
   16178:	ldr	r3, [pc, #672]	; 16420 <__flatcc_fb_codegen_c@@Base+0x8d8>
   1617c:	movw	r2, #1204	; 0x4b4
   16180:	ldr	r1, [pc, #668]	; 16424 <__flatcc_fb_codegen_c@@Base+0x8dc>
   16184:	ldr	r0, [pc, #668]	; 16428 <__flatcc_fb_codegen_c@@Base+0x8e0>
   16188:	bl	1417c <__assert_fail@plt>
   1618c:	ldrh	r3, [r6, #48]	; 0x30
   16190:	cmp	r3, #8
   16194:	beq	161ac <__flatcc_fb_codegen_c@@Base+0x664>
   16198:	ldr	r3, [pc, #640]	; 16420 <__flatcc_fb_codegen_c@@Base+0x8d8>
   1619c:	movw	r2, #1205	; 0x4b5
   161a0:	ldr	r1, [pc, #636]	; 16424 <__flatcc_fb_codegen_c@@Base+0x8dc>
   161a4:	ldr	r0, [pc, #640]	; 1642c <__flatcc_fb_codegen_c@@Base+0x8e4>
   161a8:	b	16188 <__flatcc_fb_codegen_c@@Base+0x640>
   161ac:	ldr	r3, [r6, #40]	; 0x28
   161b0:	ldr	sl, [pc, #632]	; 16430 <__flatcc_fb_codegen_c@@Base+0x8e8>
   161b4:	cmp	r3, #5
   161b8:	sub	r3, r3, #1
   161bc:	moveq	fp, r4
   161c0:	movne	fp, sl
   161c4:	cmp	r3, #10
   161c8:	bhi	1633c <__flatcc_fb_codegen_c@@Base+0x7f4>
   161cc:	ldr	r2, [pc, #608]	; 16434 <__flatcc_fb_codegen_c@@Base+0x8ec>
   161d0:	cmp	r7, #3
   161d4:	mov	r1, r5
   161d8:	mov	r0, r6
   161dc:	ldr	r9, [r6, #112]	; 0x70
   161e0:	ldr	r8, [pc, #592]	; 16438 <__flatcc_fb_codegen_c@@Base+0x8f0>
   161e4:	add	r3, r2, r3, lsl #2
   161e8:	ldr	r2, [pc, #588]	; 1643c <__flatcc_fb_codegen_c@@Base+0x8f4>
   161ec:	lsl	r9, r9, #3
   161f0:	ldr	r3, [r3, #128]	; 0x80
   161f4:	moveq	r8, r2
   161f8:	str	r3, [sp, #20]
   161fc:	bl	15d04 <__flatcc_fb_codegen_c@@Base+0x1bc>
   16200:	add	r3, r4, #204	; 0xcc
   16204:	mov	r1, sl
   16208:	ldr	r2, [r6, #32]
   1620c:	mov	r0, r3
   16210:	str	r3, [sp, #16]
   16214:	bl	15e60 <__flatcc_fb_codegen_c@@Base+0x318>
   16218:	mov	r2, fp
   1621c:	ldr	r1, [pc, #540]	; 16440 <__flatcc_fb_codegen_c@@Base+0x8f8>
   16220:	ldr	r3, [sp, #20]
   16224:	ldr	r0, [r4, #204]	; 0xcc
   16228:	stm	sp, {r5, r8}
   1622c:	bl	140bc <fprintf@plt>
   16230:	mov	r3, r5
   16234:	mov	r2, r4
   16238:	ldr	r1, [pc, #516]	; 16444 <__flatcc_fb_codegen_c@@Base+0x8fc>
   1623c:	ldr	r0, [r4, #204]	; 0xcc
   16240:	stm	sp, {r5, r8, r9}
   16244:	bl	140bc <fprintf@plt>
   16248:	cmp	r7, #3
   1624c:	beq	16268 <__flatcc_fb_codegen_c@@Base+0x720>
   16250:	mov	r3, r4
   16254:	mov	r2, r4
   16258:	ldr	r1, [pc, #488]	; 16448 <__flatcc_fb_codegen_c@@Base+0x900>
   1625c:	ldr	r0, [r4, #204]	; 0xcc
   16260:	str	r5, [sp]
   16264:	bl	140bc <fprintf@plt>
   16268:	ldr	r9, [r6, #20]
   1626c:	add	sl, sp, #24
   16270:	cmp	r9, #0
   16274:	bne	16340 <__flatcc_fb_codegen_c@@Base+0x7f8>
   16278:	mov	r0, #10
   1627c:	ldr	r1, [r4, #204]	; 0xcc
   16280:	bl	1411c <fputc@plt>
   16284:	cmp	r7, #3
   16288:	mov	r3, r5
   1628c:	mov	r2, r5
   16290:	beq	16394 <__flatcc_fb_codegen_c@@Base+0x84c>
   16294:	ldr	r1, [pc, #432]	; 1644c <__flatcc_fb_codegen_c@@Base+0x904>
   16298:	ldr	r0, [r4, #204]	; 0xcc
   1629c:	bl	140bc <fprintf@plt>
   162a0:	ldr	r0, [pc, #424]	; 16450 <__flatcc_fb_codegen_c@@Base+0x908>
   162a4:	ldr	r1, [r4, #204]	; 0xcc
   162a8:	bl	14158 <fputs@plt>
   162ac:	ldr	r9, [pc, #416]	; 16454 <__flatcc_fb_codegen_c@@Base+0x90c>
   162b0:	ldr	sl, [pc, #416]	; 16458 <__flatcc_fb_codegen_c@@Base+0x910>
   162b4:	ldr	r8, [r6, #20]
   162b8:	cmp	r8, #0
   162bc:	ldr	r0, [r4, #204]	; 0xcc
   162c0:	bne	163ac <__flatcc_fb_codegen_c@@Base+0x864>
   162c4:	mov	r1, r0
   162c8:	ldr	r0, [pc, #396]	; 1645c <__flatcc_fb_codegen_c@@Base+0x914>
   162cc:	bl	14158 <fputs@plt>
   162d0:	mov	r0, #10
   162d4:	ldr	r1, [r4, #204]	; 0xcc
   162d8:	bl	1411c <fputc@plt>
   162dc:	cmp	r7, #3
   162e0:	mov	r3, r5
   162e4:	mov	r2, r5
   162e8:	beq	163dc <__flatcc_fb_codegen_c@@Base+0x894>
   162ec:	ldr	r1, [pc, #364]	; 16460 <__flatcc_fb_codegen_c@@Base+0x918>
   162f0:	ldr	r0, [r4, #204]	; 0xcc
   162f4:	bl	140bc <fprintf@plt>
   162f8:	ldr	r0, [pc, #336]	; 16450 <__flatcc_fb_codegen_c@@Base+0x908>
   162fc:	ldr	r1, [r4, #204]	; 0xcc
   16300:	bl	14158 <fputs@plt>
   16304:	ldr	r7, [pc, #344]	; 16464 <__flatcc_fb_codegen_c@@Base+0x91c>
   16308:	ldr	r8, [pc, #344]	; 16468 <__flatcc_fb_codegen_c@@Base+0x920>
   1630c:	ldr	r6, [r6, #20]
   16310:	cmp	r6, #0
   16314:	ldr	r0, [r4, #204]	; 0xcc
   16318:	bne	163f4 <__flatcc_fb_codegen_c@@Base+0x8ac>
   1631c:	mov	r1, r0
   16320:	ldr	r0, [pc, #324]	; 1646c <__flatcc_fb_codegen_c@@Base+0x924>
   16324:	bl	14158 <fputs@plt>
   16328:	ldr	r1, [r4, #204]	; 0xcc
   1632c:	mov	r0, #10
   16330:	bl	1411c <fputc@plt>
   16334:	add	sp, sp, #348	; 0x15c
   16338:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1633c:	bl	15f00 <__flatcc_fb_codegen_c@@Base+0x3b8>
   16340:	ldr	r1, [pc, #232]	; 16430 <__flatcc_fb_codegen_c@@Base+0x8e8>
   16344:	ldr	r0, [sp, #16]
   16348:	ldr	r2, [r9, #68]	; 0x44
   1634c:	bl	15e60 <__flatcc_fb_codegen_c@@Base+0x318>
   16350:	ldr	r2, [r9, #4]
   16354:	add	r1, r9, #48	; 0x30
   16358:	ldr	r0, [r6, #40]	; 0x28
   1635c:	ldr	fp, [r2]
   16360:	ldr	r3, [r2, #4]
   16364:	mov	r2, sl
   16368:	str	r3, [sp, #20]
   1636c:	bl	15ffc <__flatcc_fb_codegen_c@@Base+0x4b4>
   16370:	mov	r2, r5
   16374:	ldr	r1, [pc, #244]	; 16470 <__flatcc_fb_codegen_c@@Base+0x928>
   16378:	ldr	r3, [sp, #20]
   1637c:	ldr	r0, [r4, #204]	; 0xcc
   16380:	str	fp, [sp]
   16384:	stmib	sp, {r5, r8, sl}
   16388:	bl	140bc <fprintf@plt>
   1638c:	ldr	r9, [r9]
   16390:	b	16270 <__flatcc_fb_codegen_c@@Base+0x728>
   16394:	ldr	r1, [pc, #216]	; 16474 <__flatcc_fb_codegen_c@@Base+0x92c>
   16398:	ldr	r0, [r4, #204]	; 0xcc
   1639c:	bl	140bc <fprintf@plt>
   163a0:	ldr	r0, [pc, #208]	; 16478 <__flatcc_fb_codegen_c@@Base+0x930>
   163a4:	ldr	r1, [r4, #204]	; 0xcc
   163a8:	b	162a8 <__flatcc_fb_codegen_c@@Base+0x760>
   163ac:	ldr	r2, [r8, #4]
   163b0:	ldrh	r1, [r8, #10]
   163b4:	ldrd	r2, [r2]
   163b8:	tst	r1, #4
   163bc:	movne	r1, sl
   163c0:	moveq	r1, r9
   163c4:	strd	r2, [sp]
   163c8:	str	r2, [sp, #8]
   163cc:	mov	r2, r5
   163d0:	bl	140bc <fprintf@plt>
   163d4:	ldr	r8, [r8]
   163d8:	b	162b8 <__flatcc_fb_codegen_c@@Base+0x770>
   163dc:	ldr	r1, [pc, #152]	; 1647c <__flatcc_fb_codegen_c@@Base+0x934>
   163e0:	ldr	r0, [r4, #204]	; 0xcc
   163e4:	bl	140bc <fprintf@plt>
   163e8:	ldr	r0, [pc, #136]	; 16478 <__flatcc_fb_codegen_c@@Base+0x930>
   163ec:	ldr	r1, [r4, #204]	; 0xcc
   163f0:	b	16300 <__flatcc_fb_codegen_c@@Base+0x7b8>
   163f4:	ldr	r2, [r6, #4]
   163f8:	ldrh	r1, [r6, #10]
   163fc:	ldrd	r2, [r2]
   16400:	tst	r1, #4
   16404:	movne	r1, r8
   16408:	moveq	r1, r7
   1640c:	str	r2, [sp]
   16410:	mov	r2, r5
   16414:	bl	140bc <fprintf@plt>
   16418:	ldr	r6, [r6]
   1641c:	b	16310 <__flatcc_fb_codegen_c@@Base+0x7c8>
   16420:	andeq	r0, r3, sl, asr #23
   16424:			; <UNDEFINED> instruction: 0x00030cb0
   16428:	andeq	r0, r3, r7, asr #30
   1642c:	andeq	r0, r3, r7, lsl #31
   16430:	strdeq	r2, [r3], -r7
   16434:	andeq	r0, r3, r4, asr fp
   16438:	andeq	r0, r3, ip, lsr pc
   1643c:	strdeq	r8, [r4], -r5
   16440:	andeq	r0, r3, r7, lsr #31
   16444:			; <UNDEFINED> instruction: 0x00030fbe
   16448:	andeq	r0, r3, r8, ror #31
   1644c:	andeq	r1, r3, r1, lsr #32
   16450:	andeq	r6, r4, fp, asr #23
   16454:	andeq	r1, r3, r1, ror #1
   16458:	andeq	r1, r3, sp, lsr #1
   1645c:	andeq	r1, r3, r3, lsl #2
   16460:	andeq	r1, r3, r4, lsr #2
   16464:	andeq	r1, r3, r7, asr #3
   16468:	muleq	r3, r8, r1
   1646c:	andeq	r1, r3, r4, ror #3
   16470:	andeq	r1, r3, r2
   16474:	andeq	r1, r3, r1, rrx
   16478:	muleq	r3, r7, r0
   1647c:	andeq	r1, r3, r0, ror #2
   16480:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16484:	sub	sp, sp, #1040	; 0x410
   16488:	sub	sp, sp, #4
   1648c:	ldrh	r9, [r1, #8]
   16490:	str	r1, [sp, #44]	; 0x2c
   16494:	cmp	r9, #0
   16498:	beq	164b0 <__flatcc_fb_codegen_c@@Base+0x968>
   1649c:	ldr	r3, [pc, #2204]	; 16d40 <__flatcc_fb_codegen_c@@Base+0x11f8>
   164a0:	movw	r2, #1362	; 0x552
   164a4:	ldr	r1, [pc, #2200]	; 16d44 <__flatcc_fb_codegen_c@@Base+0x11fc>
   164a8:	ldr	r0, [pc, #2200]	; 16d48 <__flatcc_fb_codegen_c@@Base+0x1200>
   164ac:	bl	1417c <__assert_fail@plt>
   164b0:	add	r5, sp, #160	; 0xa0
   164b4:	mov	r4, r0
   164b8:	mov	r2, #220	; 0xdc
   164bc:	mov	r1, r9
   164c0:	mov	r0, r5
   164c4:	bl	140d4 <memset@plt>
   164c8:	mov	r2, #220	; 0xdc
   164cc:	mov	r1, r9
   164d0:	add	r0, sp, #380	; 0x17c
   164d4:	bl	140d4 <memset@plt>
   164d8:	mov	r3, r4
   164dc:	mov	r0, #10
   164e0:	ldr	r1, [r3, #204]!	; 0xcc
   164e4:	str	r3, [sp, #48]	; 0x30
   164e8:	bl	1411c <fputc@plt>
   164ec:	mov	r1, r5
   164f0:	ldr	r0, [sp, #44]	; 0x2c
   164f4:	bl	15d04 <__flatcc_fb_codegen_c@@Base+0x1bc>
   164f8:	ldr	r3, [sp, #44]	; 0x2c
   164fc:	ldr	r1, [pc, #2120]	; 16d4c <__flatcc_fb_codegen_c@@Base+0x1204>
   16500:	ldr	r0, [sp, #48]	; 0x30
   16504:	ldr	r2, [r3, #32]
   16508:	bl	15e60 <__flatcc_fb_codegen_c@@Base+0x318>
   1650c:	mov	r2, r5
   16510:	ldr	r1, [pc, #2104]	; 16d50 <__flatcc_fb_codegen_c@@Base+0x1208>
   16514:	ldr	r0, [r4, #204]	; 0xcc
   16518:	bl	140bc <fprintf@plt>
   1651c:	mov	r3, r5
   16520:	mov	r2, r5
   16524:	ldr	r1, [pc, #2088]	; 16d54 <__flatcc_fb_codegen_c@@Base+0x120c>
   16528:	str	r4, [sp]
   1652c:	ldr	r0, [r4, #204]	; 0xcc
   16530:	bl	140bc <fprintf@plt>
   16534:	mov	r3, r5
   16538:	mov	r2, r5
   1653c:	ldr	r1, [pc, #2068]	; 16d58 <__flatcc_fb_codegen_c@@Base+0x1210>
   16540:	str	r5, [sp]
   16544:	strd	r4, [sp, #4]
   16548:	ldr	r0, [r4, #204]	; 0xcc
   1654c:	bl	140bc <fprintf@plt>
   16550:	mov	r3, r5
   16554:	mov	r2, r4
   16558:	ldr	r1, [pc, #2044]	; 16d5c <__flatcc_fb_codegen_c@@Base+0x1214>
   1655c:	ldr	r0, [r4, #204]	; 0xcc
   16560:	bl	140bc <fprintf@plt>
   16564:	mov	r0, #10
   16568:	ldr	r1, [r4, #204]	; 0xcc
   1656c:	bl	1411c <fputc@plt>
   16570:	ldr	r3, [sp, #44]	; 0x2c
   16574:	ldr	r5, [r3, #20]
   16578:	cmp	r5, #0
   1657c:	bne	1658c <__flatcc_fb_codegen_c@@Base+0xa44>
   16580:	add	sp, sp, #1040	; 0x410
   16584:	add	sp, sp, #4
   16588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1658c:	ldr	r1, [pc, #1976]	; 16d4c <__flatcc_fb_codegen_c@@Base+0x1204>
   16590:	add	r8, sp, #160	; 0xa0
   16594:	ldr	r0, [sp, #48]	; 0x30
   16598:	ldr	r2, [r5, #68]	; 0x44
   1659c:	bl	15e60 <__flatcc_fb_codegen_c@@Base+0x318>
   165a0:	ldrh	fp, [r5, #72]	; 0x48
   165a4:	ldr	r3, [r5, #4]
   165a8:	tst	fp, #4
   165ac:	ldr	r7, [r3]
   165b0:	ldr	r6, [r3, #4]
   165b4:	beq	165d8 <__flatcc_fb_codegen_c@@Base+0xa90>
   165b8:	mov	r3, r6
   165bc:	mov	r2, r8
   165c0:	str	r7, [sp]
   165c4:	ldr	r1, [pc, #1940]	; 16d60 <__flatcc_fb_codegen_c@@Base+0x1218>
   165c8:	ldr	r0, [r4, #204]	; 0xcc
   165cc:	bl	140bc <fprintf@plt>
   165d0:	ldr	r5, [r5]
   165d4:	b	16578 <__flatcc_fb_codegen_c@@Base+0xa30>
   165d8:	ldrh	r3, [r5, #24]
   165dc:	ubfx	fp, fp, #8, #1
   165e0:	sub	r3, r3, #7
   165e4:	cmp	r3, #8
   165e8:	ldrls	pc, [pc, r3, lsl #2]
   165ec:	b	16d14 <__flatcc_fb_codegen_c@@Base+0x11cc>
   165f0:	andeq	r6, r1, r8, ror #15
   165f4:	andeq	r6, r1, r4, lsl r6
   165f8:	andeq	r6, r1, r0, asr sl
   165fc:	andeq	r6, r1, ip, asr r9
   16600:	andeq	r6, r1, r4, lsl sp
   16604:	andeq	r6, r1, r4, lsl sp
   16608:	andeq	r6, r1, r4, lsl sp
   1660c:	andeq	r6, r1, ip, ror sl
   16610:	andeq	r6, r1, r0, lsl #25
   16614:	ldr	r0, [r5, #16]
   16618:	ldr	sl, [pc, #1836]	; 16d4c <__flatcc_fb_codegen_c@@Base+0x1204>
   1661c:	cmp	r0, #5
   16620:	sub	r2, r0, #1
   16624:	moveq	sl, r4
   16628:	cmp	r2, #10
   1662c:	bhi	1674c <__flatcc_fb_codegen_c@@Base+0xc04>
   16630:	ldr	r3, [pc, #1836]	; 16d64 <__flatcc_fb_codegen_c@@Base+0x121c>
   16634:	add	r8, sp, #60	; 0x3c
   16638:	add	r1, r5, #48	; 0x30
   1663c:	add	r3, r3, r2, lsl #2
   16640:	mov	r2, r8
   16644:	ldr	fp, [r3, #128]	; 0x80
   16648:	ldr	r3, [r3, #184]	; 0xb8
   1664c:	str	r3, [sp, #52]	; 0x34
   16650:	bl	15ffc <__flatcc_fb_codegen_c@@Base+0x4b4>
   16654:	ldr	r3, [sp, #52]	; 0x34
   16658:	strd	r6, [sp, #12]
   1665c:	str	r8, [sp, #36]	; 0x24
   16660:	add	r8, sp, #160	; 0xa0
   16664:	ldr	r1, [pc, #1788]	; 16d68 <__flatcc_fb_codegen_c@@Base+0x1220>
   16668:	str	r8, [sp, #8]
   1666c:	str	r4, [sp, #20]
   16670:	str	r3, [sp, #24]
   16674:	strd	sl, [sp, #28]
   16678:	ldrd	r2, [r5, #96]	; 0x60
   1667c:	strd	r2, [sp]
   16680:	mov	r2, r4
   16684:	ldr	r0, [r4, #204]	; 0xcc
   16688:	bl	140bc <fprintf@plt>
   1668c:	ldr	r3, [r4, #212]	; 0xd4
   16690:	ldr	r0, [r3, #32]
   16694:	cmp	r0, #0
   16698:	beq	16750 <__flatcc_fb_codegen_c@@Base+0xc08>
   1669c:	ldrh	r0, [r5, #72]	; 0x48
   166a0:	ands	r0, r0, #128	; 0x80
   166a4:	beq	16724 <__flatcc_fb_codegen_c@@Base+0xbdc>
   166a8:	cmp	r9, #0
   166ac:	beq	166bc <__flatcc_fb_codegen_c@@Base+0xb74>
   166b0:	ldr	r0, [pc, #1716]	; 16d6c <__flatcc_fb_codegen_c@@Base+0x1224>
   166b4:	ldr	r1, [r4, #204]	; 0xcc
   166b8:	bl	14158 <fputs@plt>
   166bc:	ldr	r0, [pc, #1708]	; 16d70 <__flatcc_fb_codegen_c@@Base+0x1228>
   166c0:	ldr	r1, [r4, #204]	; 0xcc
   166c4:	bl	14158 <fputs@plt>
   166c8:	mov	r3, r8
   166cc:	mov	r2, r4
   166d0:	ldr	r1, [pc, #1692]	; 16d74 <__flatcc_fb_codegen_c@@Base+0x122c>
   166d4:	strd	r6, [sp]
   166d8:	strd	sl, [sp, #8]
   166dc:	ldr	r0, [r4, #204]	; 0xcc
   166e0:	bl	140bc <fprintf@plt>
   166e4:	ldr	r3, [r4, #212]	; 0xd4
   166e8:	ldr	r3, [r3, #136]	; 0x88
   166ec:	cmp	r3, #0
   166f0:	beq	16714 <__flatcc_fb_codegen_c@@Base+0xbcc>
   166f4:	mov	r3, r8
   166f8:	mov	r2, r4
   166fc:	ldr	r1, [pc, #1652]	; 16d78 <__flatcc_fb_codegen_c@@Base+0x1230>
   16700:	strd	r6, [sp]
   16704:	strd	sl, [sp, #8]
   16708:	str	r4, [sp, #16]
   1670c:	ldr	r0, [r4, #204]	; 0xcc
   16710:	bl	140bc <fprintf@plt>
   16714:	cmp	r9, #0
   16718:	beq	1677c <__flatcc_fb_codegen_c@@Base+0xc34>
   1671c:	mov	r0, #1
   16720:	mov	r9, r0
   16724:	ldrh	r3, [r5, #72]	; 0x48
   16728:	eor	r6, r0, #1
   1672c:	and	r6, r6, #1
   16730:	ands	r3, r6, r3, lsr #7
   16734:	beq	165d0 <__flatcc_fb_codegen_c@@Base+0xa88>
   16738:	ldr	r0, [pc, #1596]	; 16d7c <__flatcc_fb_codegen_c@@Base+0x1234>
   1673c:	mov	r9, #1
   16740:	ldr	r1, [r4, #204]	; 0xcc
   16744:	bl	14158 <fputs@plt>
   16748:	b	165d0 <__flatcc_fb_codegen_c@@Base+0xa88>
   1674c:	bl	15f00 <__flatcc_fb_codegen_c@@Base+0x3b8>
   16750:	ldrh	r3, [r5, #72]	; 0x48
   16754:	tst	r3, #128	; 0x80
   16758:	beq	16724 <__flatcc_fb_codegen_c@@Base+0xbdc>
   1675c:	mov	r3, r8
   16760:	mov	r2, r4
   16764:	ldr	r1, [pc, #1556]	; 16d80 <__flatcc_fb_codegen_c@@Base+0x1238>
   16768:	strd	r6, [sp]
   1676c:	strd	sl, [sp, #8]
   16770:	ldr	r0, [r4, #204]	; 0xcc
   16774:	bl	140bc <fprintf@plt>
   16778:	b	1669c <__flatcc_fb_codegen_c@@Base+0xb54>
   1677c:	mov	r3, r8
   16780:	mov	r2, r4
   16784:	ldr	r1, [pc, #1528]	; 16d84 <__flatcc_fb_codegen_c@@Base+0x123c>
   16788:	strd	r6, [sp]
   1678c:	strd	sl, [sp, #8]
   16790:	ldr	r0, [r4, #204]	; 0xcc
   16794:	bl	140bc <fprintf@plt>
   16798:	mov	r3, r8
   1679c:	mov	r2, r4
   167a0:	ldr	r1, [pc, #1504]	; 16d88 <__flatcc_fb_codegen_c@@Base+0x1240>
   167a4:	strd	r6, [sp]
   167a8:	strd	sl, [sp, #8]
   167ac:	ldr	r0, [r4, #204]	; 0xcc
   167b0:	bl	140bc <fprintf@plt>
   167b4:	ldr	r3, [r4, #212]	; 0xd4
   167b8:	ldr	r3, [r3, #136]	; 0x88
   167bc:	cmp	r3, #0
   167c0:	beq	1671c <__flatcc_fb_codegen_c@@Base+0xbd4>
   167c4:	mov	r3, r8
   167c8:	mov	r2, r8
   167cc:	ldr	r1, [pc, #1464]	; 16d8c <__flatcc_fb_codegen_c@@Base+0x1244>
   167d0:	mov	r9, #1
   167d4:	strd	r6, [sp]
   167d8:	ldr	r0, [r4, #204]	; 0xcc
   167dc:	bl	140bc <fprintf@plt>
   167e0:	mov	r0, r9
   167e4:	b	16724 <__flatcc_fb_codegen_c@@Base+0xbdc>
   167e8:	ldr	r3, [r5, #16]
   167ec:	sub	r3, r3, #1
   167f0:	cmp	r3, #10
   167f4:	bhi	16844 <__flatcc_fb_codegen_c@@Base+0xcfc>
   167f8:	ldr	sl, [pc, #1380]	; 16d64 <__flatcc_fb_codegen_c@@Base+0x121c>
   167fc:	str	r8, [sp, #8]
   16800:	strd	r6, [sp, #12]
   16804:	str	r4, [sp, #20]
   16808:	str	fp, [sp, #28]
   1680c:	add	r3, sl, r3, lsl #2
   16810:	ldr	r1, [pc, #1400]	; 16d90 <__flatcc_fb_codegen_c@@Base+0x1248>
   16814:	ldr	r3, [r3, #228]	; 0xe4
   16818:	str	r3, [sp, #24]
   1681c:	ldrd	r2, [r5, #96]	; 0x60
   16820:	strd	r2, [sp]
   16824:	mov	r2, r4
   16828:	ldr	r0, [r4, #204]	; 0xcc
   1682c:	bl	140bc <fprintf@plt>
   16830:	ldr	r6, [r5, #104]	; 0x68
   16834:	cmp	r6, #0
   16838:	bne	16878 <__flatcc_fb_codegen_c@@Base+0xd30>
   1683c:	mov	r0, #0
   16840:	b	16724 <__flatcc_fb_codegen_c@@Base+0xbdc>
   16844:	ldr	r3, [pc, #1352]	; 16d94 <__flatcc_fb_codegen_c@@Base+0x124c>
   16848:	ldr	r0, [pc, #1352]	; 16d98 <__flatcc_fb_codegen_c@@Base+0x1250>
   1684c:	ldr	r2, [pc, #1352]	; 16d9c <__flatcc_fb_codegen_c@@Base+0x1254>
   16850:	str	r3, [sp]
   16854:	mov	r3, #186	; 0xba
   16858:	ldr	r1, [pc, #1344]	; 16da0 <__flatcc_fb_codegen_c@@Base+0x1258>
   1685c:	ldr	r0, [r0]
   16860:	bl	140bc <fprintf@plt>
   16864:	ldr	r3, [pc, #1336]	; 16da4 <__flatcc_fb_codegen_c@@Base+0x125c>
   16868:	mov	r2, #186	; 0xba
   1686c:	ldr	r1, [pc, #1320]	; 16d9c <__flatcc_fb_codegen_c@@Base+0x1254>
   16870:	ldr	r0, [pc, #1328]	; 16da8 <__flatcc_fb_codegen_c@@Base+0x1260>
   16874:	b	164ac <__flatcc_fb_codegen_c@@Base+0x964>
   16878:	add	r7, sp, #600	; 0x258
   1687c:	mov	r2, #220	; 0xdc
   16880:	mov	r1, #0
   16884:	mov	r0, r7
   16888:	bl	140d4 <memset@plt>
   1688c:	mov	r2, #220	; 0xdc
   16890:	mov	r1, #0
   16894:	add	r0, sp, #820	; 0x334
   16898:	bl	140d4 <memset@plt>
   1689c:	ldrh	r3, [r6, #8]
   168a0:	cmp	r3, #0
   168a4:	beq	168e0 <__flatcc_fb_codegen_c@@Base+0xd98>
   168a8:	cmp	r3, #1
   168ac:	beq	16914 <__flatcc_fb_codegen_c@@Base+0xdcc>
   168b0:	ldr	r3, [pc, #1268]	; 16dac <__flatcc_fb_codegen_c@@Base+0x1264>
   168b4:	ldr	r0, [pc, #1244]	; 16d98 <__flatcc_fb_codegen_c@@Base+0x1250>
   168b8:	ldr	r2, [pc, #1156]	; 16d44 <__flatcc_fb_codegen_c@@Base+0x11fc>
   168bc:	str	r3, [sp]
   168c0:	movw	r3, #1339	; 0x53b
   168c4:	ldr	r1, [pc, #1236]	; 16da0 <__flatcc_fb_codegen_c@@Base+0x1258>
   168c8:	ldr	r0, [r0]
   168cc:	bl	140bc <fprintf@plt>
   168d0:	add	r3, sl, #296	; 0x128
   168d4:	movw	r2, #1339	; 0x53b
   168d8:	ldr	r1, [pc, #1124]	; 16d44 <__flatcc_fb_codegen_c@@Base+0x11fc>
   168dc:	b	16870 <__flatcc_fb_codegen_c@@Base+0xd28>
   168e0:	ldr	r8, [pc, #1224]	; 16db0 <__flatcc_fb_codegen_c@@Base+0x1268>
   168e4:	mov	r0, r6
   168e8:	mov	r1, r7
   168ec:	bl	15d04 <__flatcc_fb_codegen_c@@Base+0x1bc>
   168f0:	ldr	r3, [sp, #44]	; 0x2c
   168f4:	ldrh	r6, [r3, #8]
   168f8:	cmp	r6, #0
   168fc:	beq	1691c <__flatcc_fb_codegen_c@@Base+0xdd4>
   16900:	ldr	r3, [pc, #1196]	; 16db4 <__flatcc_fb_codegen_c@@Base+0x126c>
   16904:	movw	r2, #1343	; 0x53f
   16908:	ldr	r1, [pc, #1076]	; 16d44 <__flatcc_fb_codegen_c@@Base+0x11fc>
   1690c:	ldr	r0, [pc, #1188]	; 16db8 <__flatcc_fb_codegen_c@@Base+0x1270>
   16910:	b	164ac <__flatcc_fb_codegen_c@@Base+0x964>
   16914:	ldr	r8, [pc, #1184]	; 16dbc <__flatcc_fb_codegen_c@@Base+0x1274>
   16918:	b	168e4 <__flatcc_fb_codegen_c@@Base+0xd9c>
   1691c:	add	r1, sp, #820	; 0x334
   16920:	ldr	r0, [sp, #44]	; 0x2c
   16924:	bl	15d04 <__flatcc_fb_codegen_c@@Base+0x1bc>
   16928:	ldr	r3, [r5, #4]
   1692c:	str	r7, [sp, #8]
   16930:	str	r8, [sp, #12]
   16934:	ldr	r1, [pc, #1156]	; 16dc0 <__flatcc_fb_codegen_c@@Base+0x1278>
   16938:	ldr	r2, [r3]
   1693c:	str	r2, [sp, #4]
   16940:	mov	r2, r4
   16944:	ldr	r3, [r3, #4]
   16948:	str	r3, [sp]
   1694c:	add	r3, sp, #820	; 0x334
   16950:	ldr	r0, [r4, #204]	; 0xcc
   16954:	bl	140bc <fprintf@plt>
   16958:	b	1683c <__flatcc_fb_codegen_c@@Base+0xcf4>
   1695c:	str	r8, [sp, #8]
   16960:	strd	r6, [sp, #12]
   16964:	str	fp, [sp, #20]
   16968:	ldrd	r2, [r5, #96]	; 0x60
   1696c:	ldr	r1, [pc, #1104]	; 16dc4 <__flatcc_fb_codegen_c@@Base+0x127c>
   16970:	strd	r2, [sp]
   16974:	mov	r2, r4
   16978:	ldr	r0, [r4, #204]	; 0xcc
   1697c:	bl	140bc <fprintf@plt>
   16980:	ldr	r3, [r4, #212]	; 0xd4
   16984:	ldr	r0, [r3, #32]
   16988:	cmp	r0, #0
   1698c:	bne	169b4 <__flatcc_fb_codegen_c@@Base+0xe6c>
   16990:	ldrh	r3, [r5, #72]	; 0x48
   16994:	tst	r3, #128	; 0x80
   16998:	beq	16724 <__flatcc_fb_codegen_c@@Base+0xbdc>
   1699c:	mov	r3, r8
   169a0:	mov	r2, r4
   169a4:	ldr	r1, [pc, #1052]	; 16dc8 <__flatcc_fb_codegen_c@@Base+0x1280>
   169a8:	strd	r6, [sp]
   169ac:	ldr	r0, [r4, #204]	; 0xcc
   169b0:	bl	140bc <fprintf@plt>
   169b4:	ldrh	r0, [r5, #72]	; 0x48
   169b8:	ands	r0, r0, #128	; 0x80
   169bc:	beq	16724 <__flatcc_fb_codegen_c@@Base+0xbdc>
   169c0:	cmp	r9, #0
   169c4:	beq	169d4 <__flatcc_fb_codegen_c@@Base+0xe8c>
   169c8:	ldr	r0, [pc, #924]	; 16d6c <__flatcc_fb_codegen_c@@Base+0x1224>
   169cc:	ldr	r1, [r4, #204]	; 0xcc
   169d0:	bl	14158 <fputs@plt>
   169d4:	mov	r3, r8
   169d8:	mov	r2, r4
   169dc:	ldr	r1, [pc, #1000]	; 16dcc <__flatcc_fb_codegen_c@@Base+0x1284>
   169e0:	strd	r6, [sp]
   169e4:	ldr	r0, [r4, #204]	; 0xcc
   169e8:	bl	140bc <fprintf@plt>
   169ec:	ldr	r3, [r4, #212]	; 0xd4
   169f0:	ldr	r3, [r3, #136]	; 0x88
   169f4:	cmp	r3, #0
   169f8:	beq	16a14 <__flatcc_fb_codegen_c@@Base+0xecc>
   169fc:	mov	r3, r8
   16a00:	mov	r2, r4
   16a04:	ldr	r1, [pc, #964]	; 16dd0 <__flatcc_fb_codegen_c@@Base+0x1288>
   16a08:	strd	r6, [sp]
   16a0c:	ldr	r0, [r4, #204]	; 0xcc
   16a10:	bl	140bc <fprintf@plt>
   16a14:	cmp	r9, #0
   16a18:	bne	1671c <__flatcc_fb_codegen_c@@Base+0xbd4>
   16a1c:	mov	r3, r8
   16a20:	mov	r2, r4
   16a24:	ldr	r1, [pc, #936]	; 16dd4 <__flatcc_fb_codegen_c@@Base+0x128c>
   16a28:	strd	r6, [sp]
   16a2c:	ldr	r0, [r4, #204]	; 0xcc
   16a30:	bl	140bc <fprintf@plt>
   16a34:	mov	r3, r8
   16a38:	mov	r2, r4
   16a3c:	ldr	r1, [pc, #916]	; 16dd8 <__flatcc_fb_codegen_c@@Base+0x1290>
   16a40:	strd	r6, [sp]
   16a44:	ldr	r0, [r4, #204]	; 0xcc
   16a48:	bl	140bc <fprintf@plt>
   16a4c:	b	167b4 <__flatcc_fb_codegen_c@@Base+0xc6c>
   16a50:	str	r8, [sp, #8]
   16a54:	strd	r6, [sp, #12]
   16a58:	str	r4, [sp, #20]
   16a5c:	str	fp, [sp, #24]
   16a60:	ldrd	r2, [r5, #96]	; 0x60
   16a64:	ldr	r1, [pc, #880]	; 16ddc <__flatcc_fb_codegen_c@@Base+0x1294>
   16a68:	strd	r2, [sp]
   16a6c:	mov	r2, r4
   16a70:	ldr	r0, [r4, #204]	; 0xcc
   16a74:	bl	140bc <fprintf@plt>
   16a78:	b	1683c <__flatcc_fb_codegen_c@@Base+0xcf4>
   16a7c:	add	sl, sp, #380	; 0x17c
   16a80:	ldr	r0, [r5, #16]
   16a84:	mov	r1, sl
   16a88:	bl	15d04 <__flatcc_fb_codegen_c@@Base+0x1bc>
   16a8c:	ldr	r3, [r5, #16]
   16a90:	ldrh	r2, [r3, #8]
   16a94:	cmp	r2, #4
   16a98:	ldrls	pc, [pc, r2, lsl #2]
   16a9c:	b	16c54 <__flatcc_fb_codegen_c@@Base+0x110c>
   16aa0:	ldrdeq	r6, [r1], -r4
   16aa4:			; <UNDEFINED> instruction: 0x00016ab4
   16aa8:	andeq	r6, r1, r4, asr ip
   16aac:	strdeq	r6, [r1], -r4
   16ab0:	andeq	r6, r1, r8, lsr #24
   16ab4:	str	r8, [sp, #8]
   16ab8:	strd	r6, [sp, #12]
   16abc:	strd	sl, [sp, #20]
   16ac0:	ldrd	r2, [r5, #96]	; 0x60
   16ac4:	ldr	r1, [pc, #788]	; 16de0 <__flatcc_fb_codegen_c@@Base+0x1298>
   16ac8:	strd	r2, [sp]
   16acc:	mov	r2, r4
   16ad0:	b	16a70 <__flatcc_fb_codegen_c@@Base+0xf28>
   16ad4:	str	r8, [sp, #8]
   16ad8:	strd	r6, [sp, #12]
   16adc:	strd	sl, [sp, #20]
   16ae0:	ldrd	r2, [r5, #96]	; 0x60
   16ae4:	ldr	r1, [pc, #760]	; 16de4 <__flatcc_fb_codegen_c@@Base+0x129c>
   16ae8:	strd	r2, [sp]
   16aec:	mov	r2, r4
   16af0:	b	16a70 <__flatcc_fb_codegen_c@@Base+0xf28>
   16af4:	add	fp, sp, #60	; 0x3c
   16af8:	add	r1, r5, #48	; 0x30
   16afc:	ldr	r0, [r3, #40]	; 0x28
   16b00:	mov	r2, fp
   16b04:	bl	15ffc <__flatcc_fb_codegen_c@@Base+0x4b4>
   16b08:	str	r8, [sp, #8]
   16b0c:	strd	r6, [sp, #12]
   16b10:	str	sl, [sp, #20]
   16b14:	strd	sl, [sp, #24]
   16b18:	ldrd	r2, [r5, #96]	; 0x60
   16b1c:	ldr	r1, [pc, #708]	; 16de8 <__flatcc_fb_codegen_c@@Base+0x12a0>
   16b20:	strd	r2, [sp]
   16b24:	mov	r2, r4
   16b28:	ldr	r0, [r4, #204]	; 0xcc
   16b2c:	bl	140bc <fprintf@plt>
   16b30:	ldr	r3, [r4, #212]	; 0xd4
   16b34:	ldr	r0, [r3, #32]
   16b38:	cmp	r0, #0
   16b3c:	bne	16b68 <__flatcc_fb_codegen_c@@Base+0x1020>
   16b40:	ldrh	r3, [r5, #72]	; 0x48
   16b44:	tst	r3, #128	; 0x80
   16b48:	beq	16724 <__flatcc_fb_codegen_c@@Base+0xbdc>
   16b4c:	mov	r3, r8
   16b50:	mov	r2, r4
   16b54:	ldr	r1, [pc, #656]	; 16dec <__flatcc_fb_codegen_c@@Base+0x12a4>
   16b58:	strd	r6, [sp]
   16b5c:	str	sl, [sp, #8]
   16b60:	ldr	r0, [r4, #204]	; 0xcc
   16b64:	bl	140bc <fprintf@plt>
   16b68:	ldrh	r0, [r5, #72]	; 0x48
   16b6c:	ands	r0, r0, #128	; 0x80
   16b70:	beq	16724 <__flatcc_fb_codegen_c@@Base+0xbdc>
   16b74:	cmp	r9, #0
   16b78:	beq	16b88 <__flatcc_fb_codegen_c@@Base+0x1040>
   16b7c:	ldr	r0, [pc, #488]	; 16d6c <__flatcc_fb_codegen_c@@Base+0x1224>
   16b80:	ldr	r1, [r4, #204]	; 0xcc
   16b84:	bl	14158 <fputs@plt>
   16b88:	add	fp, sp, #380	; 0x17c
   16b8c:	ldr	r0, [pc, #476]	; 16d70 <__flatcc_fb_codegen_c@@Base+0x1228>
   16b90:	ldr	r1, [r4, #204]	; 0xcc
   16b94:	bl	14158 <fputs@plt>
   16b98:	mov	r3, r8
   16b9c:	mov	r2, r4
   16ba0:	ldr	r1, [pc, #584]	; 16df0 <__flatcc_fb_codegen_c@@Base+0x12a8>
   16ba4:	strd	r6, [sp]
   16ba8:	str	fp, [sp, #8]
   16bac:	ldr	r0, [r4, #204]	; 0xcc
   16bb0:	bl	140bc <fprintf@plt>
   16bb4:	ldr	r3, [r4, #212]	; 0xd4
   16bb8:	ldr	r3, [r3, #136]	; 0x88
   16bbc:	cmp	r3, #0
   16bc0:	beq	16be4 <__flatcc_fb_codegen_c@@Base+0x109c>
   16bc4:	mov	r3, r8
   16bc8:	mov	r2, r4
   16bcc:	ldr	r1, [pc, #544]	; 16df4 <__flatcc_fb_codegen_c@@Base+0x12ac>
   16bd0:	strd	r6, [sp]
   16bd4:	str	fp, [sp, #8]
   16bd8:	str	r4, [sp, #12]
   16bdc:	ldr	r0, [r4, #204]	; 0xcc
   16be0:	bl	140bc <fprintf@plt>
   16be4:	cmp	r9, #0
   16be8:	bne	1671c <__flatcc_fb_codegen_c@@Base+0xbd4>
   16bec:	mov	r3, r8
   16bf0:	mov	r2, r4
   16bf4:	ldr	r1, [pc, #508]	; 16df8 <__flatcc_fb_codegen_c@@Base+0x12b0>
   16bf8:	strd	r6, [sp]
   16bfc:	str	sl, [sp, #8]
   16c00:	ldr	r0, [r4, #204]	; 0xcc
   16c04:	bl	140bc <fprintf@plt>
   16c08:	mov	r3, r8
   16c0c:	mov	r2, r4
   16c10:	ldr	r1, [pc, #484]	; 16dfc <__flatcc_fb_codegen_c@@Base+0x12b4>
   16c14:	strd	r6, [sp]
   16c18:	str	sl, [sp, #8]
   16c1c:	ldr	r0, [r4, #204]	; 0xcc
   16c20:	bl	140bc <fprintf@plt>
   16c24:	b	167b4 <__flatcc_fb_codegen_c@@Base+0xc6c>
   16c28:	str	r8, [sp, #8]
   16c2c:	strd	r6, [sp, #12]
   16c30:	strd	sl, [sp, #20]
   16c34:	ldrd	r2, [r5, #96]	; 0x60
   16c38:	ldr	r1, [pc, #448]	; 16e00 <__flatcc_fb_codegen_c@@Base+0x12b8>
   16c3c:	strd	r2, [sp]
   16c40:	mov	r3, r4
   16c44:	mov	r2, r4
   16c48:	ldr	r0, [r4, #204]	; 0xcc
   16c4c:	bl	140bc <fprintf@plt>
   16c50:	b	1683c <__flatcc_fb_codegen_c@@Base+0xcf4>
   16c54:	ldr	r3, [pc, #424]	; 16e04 <__flatcc_fb_codegen_c@@Base+0x12bc>
   16c58:	ldr	r0, [pc, #312]	; 16d98 <__flatcc_fb_codegen_c@@Base+0x1250>
   16c5c:	ldr	r2, [pc, #224]	; 16d44 <__flatcc_fb_codegen_c@@Base+0x11fc>
   16c60:	str	r3, [sp]
   16c64:	mov	r3, #1568	; 0x620
   16c68:	ldr	r1, [pc, #304]	; 16da0 <__flatcc_fb_codegen_c@@Base+0x1258>
   16c6c:	ldr	r0, [r0]
   16c70:	bl	140bc <fprintf@plt>
   16c74:	ldr	r3, [pc, #196]	; 16d40 <__flatcc_fb_codegen_c@@Base+0x11f8>
   16c78:	mov	r2, #1568	; 0x620
   16c7c:	b	168d8 <__flatcc_fb_codegen_c@@Base+0xd90>
   16c80:	add	sl, sp, #380	; 0x17c
   16c84:	ldr	r0, [r5, #16]
   16c88:	mov	r1, sl
   16c8c:	bl	15d04 <__flatcc_fb_codegen_c@@Base+0x1bc>
   16c90:	ldr	r3, [r5, #16]
   16c94:	ldrh	r1, [r3, #8]
   16c98:	cmp	r1, #4
   16c9c:	bhi	16cb0 <__flatcc_fb_codegen_c@@Base+0x1168>
   16ca0:	mov	r3, #1
   16ca4:	lsl	r3, r3, r1
   16ca8:	tst	r3, #27
   16cac:	bne	16cdc <__flatcc_fb_codegen_c@@Base+0x1194>
   16cb0:	ldr	r3, [pc, #336]	; 16e08 <__flatcc_fb_codegen_c@@Base+0x12c0>
   16cb4:	ldr	r0, [pc, #220]	; 16d98 <__flatcc_fb_codegen_c@@Base+0x1250>
   16cb8:	ldr	r2, [pc, #132]	; 16d44 <__flatcc_fb_codegen_c@@Base+0x11fc>
   16cbc:	str	r3, [sp]
   16cc0:	mov	r3, #1584	; 0x630
   16cc4:	ldr	r1, [pc, #212]	; 16da0 <__flatcc_fb_codegen_c@@Base+0x1258>
   16cc8:	ldr	r0, [r0]
   16ccc:	bl	140bc <fprintf@plt>
   16cd0:	ldr	r3, [pc, #104]	; 16d40 <__flatcc_fb_codegen_c@@Base+0x11f8>
   16cd4:	mov	r2, #1584	; 0x630
   16cd8:	b	168d8 <__flatcc_fb_codegen_c@@Base+0xd90>
   16cdc:	ldrd	r2, [r5, #96]	; 0x60
   16ce0:	cmp	r1, #4
   16ce4:	ldrne	r1, [pc, #288]	; 16e0c <__flatcc_fb_codegen_c@@Base+0x12c4>
   16ce8:	ldr	r0, [r4, #204]	; 0xcc
   16cec:	strd	r2, [sp]
   16cf0:	movne	r2, r4
   16cf4:	str	r8, [sp, #8]
   16cf8:	strd	r6, [sp, #12]
   16cfc:	strd	sl, [sp, #20]
   16d00:	bne	16a74 <__flatcc_fb_codegen_c@@Base+0xf2c>
   16d04:	mov	r3, r4
   16d08:	mov	r2, r4
   16d0c:	ldr	r1, [pc, #252]	; 16e10 <__flatcc_fb_codegen_c@@Base+0x12c8>
   16d10:	b	16c4c <__flatcc_fb_codegen_c@@Base+0x1104>
   16d14:	ldr	r3, [pc, #248]	; 16e14 <__flatcc_fb_codegen_c@@Base+0x12cc>
   16d18:	ldr	r0, [pc, #120]	; 16d98 <__flatcc_fb_codegen_c@@Base+0x1250>
   16d1c:	ldr	r2, [pc, #32]	; 16d44 <__flatcc_fb_codegen_c@@Base+0x11fc>
   16d20:	str	r3, [sp]
   16d24:	movw	r3, #1599	; 0x63f
   16d28:	ldr	r1, [pc, #112]	; 16da0 <__flatcc_fb_codegen_c@@Base+0x1258>
   16d2c:	ldr	r0, [r0]
   16d30:	bl	140bc <fprintf@plt>
   16d34:	ldr	r3, [pc, #4]	; 16d40 <__flatcc_fb_codegen_c@@Base+0x11f8>
   16d38:	movw	r2, #1599	; 0x63f
   16d3c:	b	168d8 <__flatcc_fb_codegen_c@@Base+0xd90>
   16d40:	andeq	r0, r3, r0, lsl #24
   16d44:			; <UNDEFINED> instruction: 0x00030cb0
   16d48:	andeq	r0, r3, r3, lsr #26
   16d4c:	strdeq	r2, [r3], -r7
   16d50:	andeq	r1, r3, r3, lsl r2
   16d54:	andeq	r1, r3, ip, lsr r2
   16d58:	andeq	r1, r3, ip, ror r2
   16d5c:	andeq	r1, r3, r1, ror #5
   16d60:	strdeq	r1, [r3], -r8
   16d64:	andeq	r0, r3, r4, asr fp
   16d68:	andeq	r1, r3, r5, lsr #6
   16d6c:	andeq	r1, r3, pc, lsl #7
   16d70:	ldrdeq	r1, [r3], -r2
   16d74:	andeq	r1, r3, r0, lsl r4
   16d78:	andeq	r1, r3, r1, asr #8
   16d7c:	andeq	r1, r3, sl, ror sl
   16d80:	andeq	r1, r3, lr, asr r3
   16d84:	andeq	r1, r3, pc, ror r4
   16d88:			; <UNDEFINED> instruction: 0x000314b8
   16d8c:	strdeq	r1, [r3], -r1	; <UNPREDICTABLE>
   16d90:	andeq	r1, r3, sl, lsl r5
   16d94:	andeq	r0, r3, r4, ror #29
   16d98:	strheq	fp, [r5], -r0
   16d9c:	muleq	r3, r0, lr
   16da0:	ldrdeq	r0, [r3], -r9
   16da4:	andeq	r0, r3, r4, ror #24
   16da8:	andeq	r9, r3, fp, lsr r2
   16dac:	andeq	r1, r3, sp, asr #10
   16db0:	andeq	r1, r3, r4, lsl #4
   16db4:	andeq	r0, r3, ip, ror ip
   16db8:	andeq	r1, r3, r1, lsl #11
   16dbc:	andeq	r1, r3, fp, lsl #4
   16dc0:	andeq	r1, r3, r0, lsr #11
   16dc4:	andeq	r1, r3, sp, asr #11
   16dc8:	strdeq	r1, [r3], -sl
   16dcc:	andeq	r1, r3, r5, lsr #12
   16dd0:	andeq	r1, r3, r0, asr r6
   16dd4:	andeq	r1, r3, fp, ror r6
   16dd8:	andeq	r1, r3, lr, lsr #13
   16ddc:	andeq	r1, r3, r1, ror #13
   16de0:	andeq	r1, r3, lr, lsl r7
   16de4:	andeq	r1, r3, r8, asr r7
   16de8:	muleq	r3, r0, r7
   16dec:	andeq	r1, r3, ip, asr #15
   16df0:	andeq	r1, r3, r2, lsl #16
   16df4:	andeq	r1, r3, r8, lsr r8
   16df8:	andeq	r1, r3, fp, ror r8
   16dfc:			; <UNDEFINED> instruction: 0x000318b9
   16e00:	strdeq	r1, [r3], -r7
   16e04:	andeq	r1, r3, fp, lsr #18
   16e08:	andeq	r1, r3, r4, ror r9
   16e0c:	strdeq	r1, [r3], -pc	; <UNPREDICTABLE>
   16e10:	andeq	r1, r3, r4, asr #19
   16e14:	andeq	r1, r3, r6, lsr sl
   16e18:	ldr	r3, [r0, #212]	; 0xd4
   16e1c:	mov	r2, #220	; 0xdc
   16e20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16e24:	sub	sp, sp, #492	; 0x1ec
   16e28:	mov	r7, r1
   16e2c:	add	r5, sp, #48	; 0x30
   16e30:	mov	r1, #0
   16e34:	mov	r4, r0
   16e38:	mov	r0, r5
   16e3c:	ldr	r8, [r3, #132]	; 0x84
   16e40:	bl	140d4 <memset@plt>
   16e44:	mov	r2, #220	; 0xdc
   16e48:	mov	r1, #0
   16e4c:	add	r0, sp, #268	; 0x10c
   16e50:	bl	140d4 <memset@plt>
   16e54:	ldrh	r3, [r7, #8]
   16e58:	cmp	r3, #1
   16e5c:	beq	16e74 <__flatcc_fb_codegen_c@@Base+0x132c>
   16e60:	ldr	r3, [pc, #1720]	; 17520 <__flatcc_fb_codegen_c@@Base+0x19d8>
   16e64:	mov	r2, #936	; 0x3a8
   16e68:	ldr	r1, [pc, #1716]	; 17524 <__flatcc_fb_codegen_c@@Base+0x19dc>
   16e6c:	ldr	r0, [pc, #1716]	; 17528 <__flatcc_fb_codegen_c@@Base+0x19e0>
   16e70:	bl	1417c <__assert_fail@plt>
   16e74:	ldrh	r3, [r7, #104]	; 0x68
   16e78:	cmp	r3, #0
   16e7c:	bne	16ea0 <__flatcc_fb_codegen_c@@Base+0x1358>
   16e80:	ldrd	r2, [r7, #96]	; 0x60
   16e84:	orrs	r3, r2, r3
   16e88:	beq	16ea0 <__flatcc_fb_codegen_c@@Base+0x1358>
   16e8c:	ldr	r3, [pc, #1676]	; 17520 <__flatcc_fb_codegen_c@@Base+0x19d8>
   16e90:	movw	r2, #937	; 0x3a9
   16e94:	ldr	r1, [pc, #1672]	; 17524 <__flatcc_fb_codegen_c@@Base+0x19dc>
   16e98:	ldr	r0, [pc, #1676]	; 1752c <__flatcc_fb_codegen_c@@Base+0x19e4>
   16e9c:	b	16e70 <__flatcc_fb_codegen_c@@Base+0x1328>
   16ea0:	ldrd	r2, [r7, #112]	; 0x70
   16ea4:	orrs	r3, r2, r3
   16ea8:	bne	16ecc <__flatcc_fb_codegen_c@@Base+0x1384>
   16eac:	ldrd	r2, [r7, #96]	; 0x60
   16eb0:	orrs	r3, r2, r3
   16eb4:	beq	16ecc <__flatcc_fb_codegen_c@@Base+0x1384>
   16eb8:	ldr	r3, [pc, #1632]	; 17520 <__flatcc_fb_codegen_c@@Base+0x19d8>
   16ebc:	movw	r2, #938	; 0x3aa
   16ec0:	ldr	r1, [pc, #1628]	; 17524 <__flatcc_fb_codegen_c@@Base+0x19dc>
   16ec4:	ldr	r0, [pc, #1636]	; 17530 <__flatcc_fb_codegen_c@@Base+0x19e8>
   16ec8:	b	16e70 <__flatcc_fb_codegen_c@@Base+0x1328>
   16ecc:	mov	r1, r5
   16ed0:	mov	r0, r7
   16ed4:	bl	15d04 <__flatcc_fb_codegen_c@@Base+0x1bc>
   16ed8:	add	r3, r4, #204	; 0xcc
   16edc:	ldr	r1, [pc, #1616]	; 17534 <__flatcc_fb_codegen_c@@Base+0x19ec>
   16ee0:	mov	r0, r3
   16ee4:	ldr	r2, [r7, #32]
   16ee8:	str	r3, [sp, #40]	; 0x28
   16eec:	bl	15e60 <__flatcc_fb_codegen_c@@Base+0x318>
   16ef0:	ldrd	r2, [r7, #112]	; 0x70
   16ef4:	orrs	r3, r2, r3
   16ef8:	bne	16fcc <__flatcc_fb_codegen_c@@Base+0x1484>
   16efc:	mov	r2, r5
   16f00:	ldr	r1, [pc, #1584]	; 17538 <__flatcc_fb_codegen_c@@Base+0x19f0>
   16f04:	ldr	r0, [r4, #204]	; 0xcc
   16f08:	bl	140bc <fprintf@plt>
   16f0c:	mov	r3, r5
   16f10:	mov	r2, r5
   16f14:	ldr	r1, [pc, #1568]	; 1753c <__flatcc_fb_codegen_c@@Base+0x19f4>
   16f18:	ldr	r0, [r4, #204]	; 0xcc
   16f1c:	str	r5, [sp]
   16f20:	bl	140bc <fprintf@plt>
   16f24:	mov	r3, r5
   16f28:	mov	r2, r5
   16f2c:	ldr	r1, [pc, #1548]	; 17540 <__flatcc_fb_codegen_c@@Base+0x19f8>
   16f30:	ldr	r0, [r4, #204]	; 0xcc
   16f34:	str	r5, [sp]
   16f38:	bl	140bc <fprintf@plt>
   16f3c:	mov	r3, r5
   16f40:	mov	r2, r5
   16f44:	ldr	r1, [pc, #1528]	; 17544 <__flatcc_fb_codegen_c@@Base+0x19fc>
   16f48:	ldr	r0, [r4, #204]	; 0xcc
   16f4c:	str	r5, [sp]
   16f50:	bl	140bc <fprintf@plt>
   16f54:	ldrd	r2, [r7, #112]	; 0x70
   16f58:	mov	r9, #0
   16f5c:	mov	fp, r9
   16f60:	ldr	r1, [pc, #1504]	; 17548 <__flatcc_fb_codegen_c@@Base+0x1a00>
   16f64:	ldr	r0, [r4, #204]	; 0xcc
   16f68:	strd	r2, [sp]
   16f6c:	mov	r2, r5
   16f70:	bl	140bc <fprintf@plt>
   16f74:	mov	r3, r5
   16f78:	mov	r2, r5
   16f7c:	ldr	r1, [pc, #1480]	; 1754c <__flatcc_fb_codegen_c@@Base+0x1a04>
   16f80:	ldr	r0, [r4, #204]	; 0xcc
   16f84:	str	r4, [sp]
   16f88:	bl	140bc <fprintf@plt>
   16f8c:	mov	r3, r5
   16f90:	mov	r2, r4
   16f94:	ldr	r1, [pc, #1460]	; 17550 <__flatcc_fb_codegen_c@@Base+0x1a08>
   16f98:	ldr	r0, [r4, #204]	; 0xcc
   16f9c:	bl	140bc <fprintf@plt>
   16fa0:	mov	r0, #10
   16fa4:	ldr	r1, [r4, #204]	; 0xcc
   16fa8:	bl	1411c <fputc@plt>
   16fac:	ldr	r6, [r7, #20]
   16fb0:	cmp	r6, #0
   16fb4:	bne	172d4 <__flatcc_fb_codegen_c@@Base+0x178c>
   16fb8:	ldr	r1, [r4, #204]	; 0xcc
   16fbc:	mov	r0, #10
   16fc0:	bl	1411c <fputc@plt>
   16fc4:	add	sp, sp, #492	; 0x1ec
   16fc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16fcc:	cmp	r8, #0
   16fd0:	beq	16fe0 <__flatcc_fb_codegen_c@@Base+0x1498>
   16fd4:	ldr	r0, [pc, #1400]	; 17554 <__flatcc_fb_codegen_c@@Base+0x1a0c>
   16fd8:	ldr	r1, [r4, #204]	; 0xcc
   16fdc:	bl	14158 <fputs@plt>
   16fe0:	mov	r2, r5
   16fe4:	ldr	r1, [pc, #1388]	; 17558 <__flatcc_fb_codegen_c@@Base+0x1a10>
   16fe8:	mov	r9, #0
   16fec:	ldr	r0, [r4, #204]	; 0xcc
   16ff0:	bl	140bc <fprintf@plt>
   16ff4:	ldr	r6, [r7, #20]
   16ff8:	mov	r3, r9
   16ffc:	str	r9, [sp, #28]
   17000:	cmp	r6, #0
   17004:	bne	170b4 <__flatcc_fb_codegen_c@@Base+0x156c>
   17008:	cmp	r8, #0
   1700c:	beq	1702c <__flatcc_fb_codegen_c@@Base+0x14e4>
   17010:	ldr	r2, [r7, #112]	; 0x70
   17014:	subs	r3, r2, r3
   17018:	beq	1702c <__flatcc_fb_codegen_c@@Base+0x14e4>
   1701c:	ldr	r1, [pc, #1336]	; 1755c <__flatcc_fb_codegen_c@@Base+0x1a14>
   17020:	ldr	r2, [sp, #28]
   17024:	ldr	r0, [r4, #204]	; 0xcc
   17028:	bl	140bc <fprintf@plt>
   1702c:	ldr	r0, [pc, #1324]	; 17560 <__flatcc_fb_codegen_c@@Base+0x1a18>
   17030:	ldr	r1, [r4, #204]	; 0xcc
   17034:	bl	14158 <fputs@plt>
   17038:	cmp	r8, #0
   1703c:	beq	1704c <__flatcc_fb_codegen_c@@Base+0x1504>
   17040:	ldr	r0, [pc, #1308]	; 17564 <__flatcc_fb_codegen_c@@Base+0x1a1c>
   17044:	ldr	r1, [r4, #204]	; 0xcc
   17048:	bl	14158 <fputs@plt>
   1704c:	ldrd	r2, [r7, #112]	; 0x70
   17050:	ldr	r1, [pc, #1296]	; 17568 <__flatcc_fb_codegen_c@@Base+0x1a20>
   17054:	ldr	r0, [r4, #204]	; 0xcc
   17058:	strd	r2, [sp]
   1705c:	mov	r2, r5
   17060:	bl	140bc <fprintf@plt>
   17064:	mov	r3, r5
   17068:	mov	r2, r5
   1706c:	ldr	r1, [pc, #1272]	; 1756c <__flatcc_fb_codegen_c@@Base+0x1a24>
   17070:	ldr	r0, [r4, #204]	; 0xcc
   17074:	str	r5, [sp]
   17078:	bl	140bc <fprintf@plt>
   1707c:	mov	r3, r5
   17080:	mov	r2, r5
   17084:	ldr	r1, [pc, #1252]	; 17570 <__flatcc_fb_codegen_c@@Base+0x1a28>
   17088:	ldr	r0, [r4, #204]	; 0xcc
   1708c:	str	r5, [sp]
   17090:	bl	140bc <fprintf@plt>
   17094:	mov	r3, r5
   17098:	mov	r2, r5
   1709c:	ldr	r1, [pc, #1232]	; 17574 <__flatcc_fb_codegen_c@@Base+0x1a2c>
   170a0:	ldr	r0, [r4, #204]	; 0xcc
   170a4:	str	r5, [sp]
   170a8:	str	r4, [sp, #4]
   170ac:	bl	140bc <fprintf@plt>
   170b0:	b	16f54 <__flatcc_fb_codegen_c@@Base+0x140c>
   170b4:	ldr	r1, [pc, #1212]	; 17578 <__flatcc_fb_codegen_c@@Base+0x1a30>
   170b8:	str	r3, [sp, #44]	; 0x2c
   170bc:	ldr	r0, [sp, #40]	; 0x28
   170c0:	ldr	r2, [r6, #68]	; 0x44
   170c4:	bl	15e60 <__flatcc_fb_codegen_c@@Base+0x318>
   170c8:	ldr	r2, [r6, #4]
   170cc:	ldr	r3, [r2, #4]
   170d0:	str	r3, [sp, #32]
   170d4:	ldr	r3, [r2]
   170d8:	str	r3, [sp, #36]	; 0x24
   170dc:	ldr	r3, [sp, #44]	; 0x2c
   170e0:	cmp	r3, #0
   170e4:	ldrheq	sl, [r7, #104]	; 0x68
   170e8:	ldrhne	sl, [r6, #74]	; 0x4a
   170ec:	cmp	r8, #0
   170f0:	beq	17118 <__flatcc_fb_codegen_c@@Base+0x15d0>
   170f4:	ldr	r2, [r6, #80]	; 0x50
   170f8:	subs	r3, r2, r3
   170fc:	beq	17118 <__flatcc_fb_codegen_c@@Base+0x15d0>
   17100:	ldr	r2, [sp, #28]
   17104:	ldr	r1, [pc, #1104]	; 1755c <__flatcc_fb_codegen_c@@Base+0x1a14>
   17108:	ldr	r0, [r4, #204]	; 0xcc
   1710c:	add	fp, r2, #1
   17110:	bl	140bc <fprintf@plt>
   17114:	str	fp, [sp, #28]
   17118:	ldrh	r3, [r6, #72]	; 0x48
   1711c:	tst	r3, #4
   17120:	beq	17190 <__flatcc_fb_codegen_c@@Base+0x1648>
   17124:	cmp	r8, #0
   17128:	add	fp, r9, #1
   1712c:	ldr	r2, [sp, #36]	; 0x24
   17130:	ldr	r3, [r6, #88]	; 0x58
   17134:	ldr	r0, [r4, #204]	; 0xcc
   17138:	beq	1716c <__flatcc_fb_codegen_c@@Base+0x1624>
   1713c:	str	r2, [sp, #4]
   17140:	ldr	r2, [sp, #32]
   17144:	ldr	r1, [pc, #1072]	; 1757c <__flatcc_fb_codegen_c@@Base+0x1a34>
   17148:	str	r2, [sp]
   1714c:	mov	r2, r9
   17150:	bl	140bc <fprintf@plt>
   17154:	ldr	r2, [r6, #80]	; 0x50
   17158:	mov	r9, fp
   1715c:	ldr	r3, [r6, #88]	; 0x58
   17160:	add	r3, r2, r3
   17164:	ldr	r6, [r6]
   17168:	b	17000 <__flatcc_fb_codegen_c@@Base+0x14b8>
   1716c:	ldr	r1, [pc, #1036]	; 17580 <__flatcc_fb_codegen_c@@Base+0x1a38>
   17170:	str	r2, [sp, #8]
   17174:	ldr	r2, [sp, #32]
   17178:	str	r3, [sp]
   1717c:	mov	r3, r9
   17180:	str	r2, [sp, #4]
   17184:	mov	r2, sl
   17188:	bl	140bc <fprintf@plt>
   1718c:	b	17154 <__flatcc_fb_codegen_c@@Base+0x160c>
   17190:	ldrh	r3, [r6, #24]
   17194:	cmp	r3, #8
   17198:	beq	171e8 <__flatcc_fb_codegen_c@@Base+0x16a0>
   1719c:	cmp	r3, #14
   171a0:	beq	17260 <__flatcc_fb_codegen_c@@Base+0x1718>
   171a4:	ldr	r2, [pc, #984]	; 17584 <__flatcc_fb_codegen_c@@Base+0x1a3c>
   171a8:	ldr	r1, [pc, #984]	; 17588 <__flatcc_fb_codegen_c@@Base+0x1a40>
   171ac:	ldr	r0, [r4, #204]	; 0xcc
   171b0:	bl	140bc <fprintf@plt>
   171b4:	ldr	r3, [pc, #976]	; 1758c <__flatcc_fb_codegen_c@@Base+0x1a44>
   171b8:	ldr	r0, [pc, #976]	; 17590 <__flatcc_fb_codegen_c@@Base+0x1a48>
   171bc:	ldr	r2, [pc, #864]	; 17524 <__flatcc_fb_codegen_c@@Base+0x19dc>
   171c0:	str	r3, [sp]
   171c4:	movw	r3, #1029	; 0x405
   171c8:	ldr	r1, [pc, #964]	; 17594 <__flatcc_fb_codegen_c@@Base+0x1a4c>
   171cc:	ldr	r0, [r0]
   171d0:	bl	140bc <fprintf@plt>
   171d4:	ldr	r3, [pc, #836]	; 17520 <__flatcc_fb_codegen_c@@Base+0x19d8>
   171d8:	movw	r2, #1029	; 0x405
   171dc:	ldr	r1, [pc, #832]	; 17524 <__flatcc_fb_codegen_c@@Base+0x19dc>
   171e0:	ldr	r0, [pc, #944]	; 17598 <__flatcc_fb_codegen_c@@Base+0x1a50>
   171e4:	b	16e70 <__flatcc_fb_codegen_c@@Base+0x1328>
   171e8:	ldr	r3, [r6, #16]
   171ec:	ldr	r2, [pc, #832]	; 17534 <__flatcc_fb_codegen_c@@Base+0x19ec>
   171f0:	cmp	r3, #5
   171f4:	sub	r3, r3, #1
   171f8:	moveq	r2, r4
   171fc:	cmp	r3, #10
   17200:	bhi	17234 <__flatcc_fb_codegen_c@@Base+0x16ec>
   17204:	ldr	r1, [pc, #912]	; 1759c <__flatcc_fb_codegen_c@@Base+0x1a54>
   17208:	cmp	r8, #0
   1720c:	ldr	r0, [r4, #204]	; 0xcc
   17210:	add	r3, r1, r3, lsl #2
   17214:	ldr	r3, [r3, #128]	; 0x80
   17218:	bne	17238 <__flatcc_fb_codegen_c@@Base+0x16f0>
   1721c:	str	r3, [sp]
   17220:	mov	r3, r2
   17224:	mov	r2, sl
   17228:	ldr	r1, [pc, #880]	; 175a0 <__flatcc_fb_codegen_c@@Base+0x1a58>
   1722c:	bl	140bc <fprintf@plt>
   17230:	b	17240 <__flatcc_fb_codegen_c@@Base+0x16f8>
   17234:	bl	15f00 <__flatcc_fb_codegen_c@@Base+0x3b8>
   17238:	ldr	r1, [pc, #868]	; 175a4 <__flatcc_fb_codegen_c@@Base+0x1a5c>
   1723c:	bl	140bc <fprintf@plt>
   17240:	ldr	r1, [pc, #864]	; 175a8 <__flatcc_fb_codegen_c@@Base+0x1a60>
   17244:	ldrd	r2, [sp, #32]
   17248:	ldr	r0, [r4, #204]	; 0xcc
   1724c:	bl	140bc <fprintf@plt>
   17250:	ldr	r2, [r6, #80]	; 0x50
   17254:	ldr	r3, [r6, #88]	; 0x58
   17258:	add	r3, r2, r3
   1725c:	b	17164 <__flatcc_fb_codegen_c@@Base+0x161c>
   17260:	ldr	r0, [r6, #16]
   17264:	ldrh	r3, [r0, #8]
   17268:	bic	r2, r3, #2
   1726c:	cmp	r2, #1
   17270:	beq	17288 <__flatcc_fb_codegen_c@@Base+0x1740>
   17274:	ldr	r3, [pc, #676]	; 17520 <__flatcc_fb_codegen_c@@Base+0x19d8>
   17278:	movw	r2, #1018	; 0x3fa
   1727c:	ldr	r1, [pc, #672]	; 17524 <__flatcc_fb_codegen_c@@Base+0x19dc>
   17280:	ldr	r0, [pc, #804]	; 175ac <__flatcc_fb_codegen_c@@Base+0x1a64>
   17284:	b	16e70 <__flatcc_fb_codegen_c@@Base+0x1328>
   17288:	ldr	r2, [pc, #800]	; 175b0 <__flatcc_fb_codegen_c@@Base+0x1a68>
   1728c:	cmp	r3, #1
   17290:	add	r1, sp, #268	; 0x10c
   17294:	ldr	fp, [pc, #664]	; 17534 <__flatcc_fb_codegen_c@@Base+0x19ec>
   17298:	movne	fp, r2
   1729c:	bl	15d04 <__flatcc_fb_codegen_c@@Base+0x1bc>
   172a0:	cmp	r8, #0
   172a4:	beq	172bc <__flatcc_fb_codegen_c@@Base+0x1774>
   172a8:	mov	r3, fp
   172ac:	add	r2, sp, #268	; 0x10c
   172b0:	ldr	r1, [pc, #764]	; 175b4 <__flatcc_fb_codegen_c@@Base+0x1a6c>
   172b4:	ldr	r0, [r4, #204]	; 0xcc
   172b8:	b	1723c <__flatcc_fb_codegen_c@@Base+0x16f4>
   172bc:	add	r3, sp, #268	; 0x10c
   172c0:	mov	r2, sl
   172c4:	ldr	r1, [pc, #748]	; 175b8 <__flatcc_fb_codegen_c@@Base+0x1a70>
   172c8:	ldr	r0, [r4, #204]	; 0xcc
   172cc:	str	fp, [sp]
   172d0:	b	1722c <__flatcc_fb_codegen_c@@Base+0x16e4>
   172d4:	ldrh	r3, [r6, #72]	; 0x48
   172d8:	tst	r3, #4
   172dc:	bne	17324 <__flatcc_fb_codegen_c@@Base+0x17dc>
   172e0:	ldr	r3, [r6, #4]
   172e4:	ldr	r8, [r3]
   172e8:	ldr	r7, [r3, #4]
   172ec:	ldrh	r3, [r6, #24]
   172f0:	cmp	r3, #8
   172f4:	beq	1732c <__flatcc_fb_codegen_c@@Base+0x17e4>
   172f8:	cmp	r3, #14
   172fc:	beq	17384 <__flatcc_fb_codegen_c@@Base+0x183c>
   17300:	ldrh	r3, [r6, #72]	; 0x48
   17304:	tst	r3, #128	; 0x80
   17308:	beq	17324 <__flatcc_fb_codegen_c@@Base+0x17dc>
   1730c:	cmp	fp, #0
   17310:	bne	17324 <__flatcc_fb_codegen_c@@Base+0x17dc>
   17314:	ldr	r0, [pc, #672]	; 175bc <__flatcc_fb_codegen_c@@Base+0x1a74>
   17318:	mov	r9, #1
   1731c:	ldr	r1, [r4, #204]	; 0xcc
   17320:	bl	14158 <fputs@plt>
   17324:	ldr	r6, [r6]
   17328:	b	16fb0 <__flatcc_fb_codegen_c@@Base+0x1468>
   1732c:	ldr	r3, [r6, #16]
   17330:	ldr	r2, [pc, #508]	; 17534 <__flatcc_fb_codegen_c@@Base+0x19ec>
   17334:	cmp	r3, #5
   17338:	sub	r3, r3, #1
   1733c:	moveq	r2, r4
   17340:	cmp	r3, #10
   17344:	bhi	17234 <__flatcc_fb_codegen_c@@Base+0x16ec>
   17348:	ldr	r1, [pc, #588]	; 1759c <__flatcc_fb_codegen_c@@Base+0x1a54>
   1734c:	ldr	r0, [r4, #204]	; 0xcc
   17350:	stm	sp, {r7, r8}
   17354:	str	r4, [sp, #8]
   17358:	add	r3, r1, r3, lsl #2
   1735c:	str	r2, [sp, #16]
   17360:	mov	r2, r4
   17364:	ldr	r1, [r3, #128]	; 0x80
   17368:	ldr	r3, [r3, #184]	; 0xb8
   1736c:	str	r3, [sp, #12]
   17370:	mov	r3, r5
   17374:	str	r1, [sp, #20]
   17378:	ldr	r1, [pc, #576]	; 175c0 <__flatcc_fb_codegen_c@@Base+0x1a78>
   1737c:	bl	140bc <fprintf@plt>
   17380:	b	17300 <__flatcc_fb_codegen_c@@Base+0x17b8>
   17384:	add	sl, sp, #268	; 0x10c
   17388:	ldr	r0, [r6, #16]
   1738c:	mov	r1, sl
   17390:	bl	15d04 <__flatcc_fb_codegen_c@@Base+0x1bc>
   17394:	ldr	r3, [r6, #16]
   17398:	ldrh	r2, [r3, #8]
   1739c:	cmp	r2, #1
   173a0:	beq	17504 <__flatcc_fb_codegen_c@@Base+0x19bc>
   173a4:	cmp	r2, #3
   173a8:	bne	17300 <__flatcc_fb_codegen_c@@Base+0x17b8>
   173ac:	ldr	r3, [r3, #40]	; 0x28
   173b0:	sub	r3, r3, #1
   173b4:	cmp	r3, #10
   173b8:	bhi	1746c <__flatcc_fb_codegen_c@@Base+0x1924>
   173bc:	mov	r3, r5
   173c0:	mov	r2, r4
   173c4:	ldr	r1, [pc, #504]	; 175c4 <__flatcc_fb_codegen_c@@Base+0x1a7c>
   173c8:	ldr	r0, [r4, #204]	; 0xcc
   173cc:	stm	sp, {r7, r8, sl}
   173d0:	str	sl, [sp, #12]
   173d4:	bl	140bc <fprintf@plt>
   173d8:	ldr	r3, [r4, #212]	; 0xd4
   173dc:	ldr	r3, [r3, #32]
   173e0:	cmp	r3, #0
   173e4:	beq	17470 <__flatcc_fb_codegen_c@@Base+0x1928>
   173e8:	ldrh	r3, [r6, #72]	; 0x48
   173ec:	tst	r3, #128	; 0x80
   173f0:	beq	17300 <__flatcc_fb_codegen_c@@Base+0x17b8>
   173f4:	cmp	r9, #0
   173f8:	beq	17408 <__flatcc_fb_codegen_c@@Base+0x18c0>
   173fc:	ldr	r0, [pc, #452]	; 175c8 <__flatcc_fb_codegen_c@@Base+0x1a80>
   17400:	ldr	r1, [r4, #204]	; 0xcc
   17404:	bl	14158 <fputs@plt>
   17408:	ldr	r0, [pc, #444]	; 175cc <__flatcc_fb_codegen_c@@Base+0x1a84>
   1740c:	ldr	r1, [r4, #204]	; 0xcc
   17410:	bl	14158 <fputs@plt>
   17414:	mov	r3, r5
   17418:	mov	r2, r4
   1741c:	ldr	r1, [pc, #428]	; 175d0 <__flatcc_fb_codegen_c@@Base+0x1a88>
   17420:	ldr	r0, [r4, #204]	; 0xcc
   17424:	stm	sp, {r7, r8, sl}
   17428:	bl	140bc <fprintf@plt>
   1742c:	ldr	r3, [r4, #212]	; 0xd4
   17430:	ldr	r3, [r3, #136]	; 0x88
   17434:	cmp	r3, #0
   17438:	beq	17458 <__flatcc_fb_codegen_c@@Base+0x1910>
   1743c:	mov	r3, r5
   17440:	mov	r2, r4
   17444:	ldr	r1, [pc, #392]	; 175d4 <__flatcc_fb_codegen_c@@Base+0x1a8c>
   17448:	ldr	r0, [r4, #204]	; 0xcc
   1744c:	stm	sp, {r7, r8, sl}
   17450:	str	r5, [sp, #12]
   17454:	bl	140bc <fprintf@plt>
   17458:	cmp	r9, #0
   1745c:	beq	17498 <__flatcc_fb_codegen_c@@Base+0x1950>
   17460:	mov	r9, #1
   17464:	mov	fp, r9
   17468:	b	17300 <__flatcc_fb_codegen_c@@Base+0x17b8>
   1746c:	bl	15f54 <__flatcc_fb_codegen_c@@Base+0x40c>
   17470:	ldrh	r3, [r6, #72]	; 0x48
   17474:	tst	r3, #128	; 0x80
   17478:	beq	17300 <__flatcc_fb_codegen_c@@Base+0x17b8>
   1747c:	mov	r3, r5
   17480:	mov	r2, r4
   17484:	ldr	r1, [pc, #332]	; 175d8 <__flatcc_fb_codegen_c@@Base+0x1a90>
   17488:	ldr	r0, [r4, #204]	; 0xcc
   1748c:	stm	sp, {r7, r8, sl}
   17490:	bl	140bc <fprintf@plt>
   17494:	b	173e8 <__flatcc_fb_codegen_c@@Base+0x18a0>
   17498:	add	r3, sp, #268	; 0x10c
   1749c:	mov	r2, r4
   174a0:	ldr	r1, [pc, #308]	; 175dc <__flatcc_fb_codegen_c@@Base+0x1a94>
   174a4:	ldr	r0, [r4, #204]	; 0xcc
   174a8:	stm	sp, {r7, r8}
   174ac:	str	r3, [sp, #8]
   174b0:	mov	r3, r5
   174b4:	bl	140bc <fprintf@plt>
   174b8:	add	r3, sp, #268	; 0x10c
   174bc:	mov	r2, r4
   174c0:	ldr	r1, [pc, #280]	; 175e0 <__flatcc_fb_codegen_c@@Base+0x1a98>
   174c4:	ldr	r0, [r4, #204]	; 0xcc
   174c8:	stm	sp, {r7, r8}
   174cc:	str	r3, [sp, #8]
   174d0:	mov	r3, r5
   174d4:	bl	140bc <fprintf@plt>
   174d8:	ldr	r3, [r4, #212]	; 0xd4
   174dc:	ldr	r3, [r3, #136]	; 0x88
   174e0:	cmp	r3, #0
   174e4:	beq	17460 <__flatcc_fb_codegen_c@@Base+0x1918>
   174e8:	mov	r3, r5
   174ec:	mov	r2, r5
   174f0:	ldr	r1, [pc, #236]	; 175e4 <__flatcc_fb_codegen_c@@Base+0x1a9c>
   174f4:	ldr	r0, [r4, #204]	; 0xcc
   174f8:	stm	sp, {r7, r8}
   174fc:	bl	140bc <fprintf@plt>
   17500:	b	17460 <__flatcc_fb_codegen_c@@Base+0x1918>
   17504:	mov	r3, r5
   17508:	mov	r2, r4
   1750c:	ldr	r1, [pc, #212]	; 175e8 <__flatcc_fb_codegen_c@@Base+0x1aa0>
   17510:	ldr	r0, [r4, #204]	; 0xcc
   17514:	stm	sp, {r7, r8, sl}
   17518:	bl	140bc <fprintf@plt>
   1751c:	b	17300 <__flatcc_fb_codegen_c@@Base+0x17b8>
   17520:	andeq	r0, r3, ip, lsl #25
   17524:			; <UNDEFINED> instruction: 0x00030cb0
   17528:	ldrdeq	r1, [r3], -r5
   1752c:	strdeq	r1, [r3], -r5
   17530:	andeq	r1, r3, r5, lsl fp
   17534:	strdeq	r2, [r3], -r7
   17538:	andeq	r1, r3, r4, lsr fp
   1753c:	muleq	r3, r5, fp
   17540:	andeq	r1, r3, r9, ror #23
   17544:	andeq	r1, r3, fp, lsr #24
   17548:	andeq	r1, r3, r7, lsr pc
   1754c:	andeq	r1, r3, ip, lsr r2
   17550:	andeq	r1, r3, r9, ror #30
   17554:	andeq	r1, r3, r8, ror ip
   17558:	andeq	r1, r3, r9, lsl #25
   1755c:	muleq	r3, r6, ip
   17560:	andeq	r9, r3, r6, asr #14
   17564:	strdeq	r1, [r3], -r3
   17568:	andeq	r1, r3, r3, lsl #28
   1756c:	andeq	r1, r3, r2, asr #28
   17570:	muleq	r3, sl, lr
   17574:	andeq	r1, r3, r0, ror #29
   17578:	ldrdeq	r5, [r4], -r1
   1757c:			; <UNDEFINED> instruction: 0x00031cb4
   17580:	andeq	r1, r3, r7, ror #25
   17584:	andeq	r1, r3, r5, asr #27
   17588:	andeq	r1, r3, r4, ror #27
   1758c:	andeq	r0, r3, r4, ror #29
   17590:	strheq	fp, [r5], -r0
   17594:	ldrdeq	r0, [r3], -r9
   17598:	andeq	r9, r3, fp, lsr r2
   1759c:	andeq	r0, r3, r4, asr fp
   175a0:	andeq	r1, r3, r0, lsr sp
   175a4:	andeq	r1, r3, r6, lsr #26
   175a8:	andeq	r1, r3, ip, ror #27
   175ac:	andeq	r1, r3, r6, asr #26
   175b0:	andeq	r1, r3, pc, asr #21
   175b4:	andeq	r1, r3, r1, lsr #27
   175b8:	andeq	r1, r3, sp, lsr #27
   175bc:	andeq	r1, r3, sl, ror sl
   175c0:	andeq	r1, r3, r1, lsl #31
   175c4:			; <UNDEFINED> instruction: 0x00031fb7
   175c8:	andeq	r1, r3, pc, lsl #7
   175cc:	ldrdeq	r1, [r3], -r2
   175d0:	andeq	r1, r3, r2, lsl #16
   175d4:	strdeq	r1, [r3], -r0
   175d8:	andeq	r1, r3, ip, asr #15
   175dc:	andeq	r1, r3, fp, ror r8
   175e0:			; <UNDEFINED> instruction: 0x000318b9
   175e4:	strdeq	r1, [r3], -r1	; <UNPREDICTABLE>
   175e8:	andeq	r2, r3, ip, lsr #32

000175ec <__flatcc_fb_gen_common_c_header@@Base>:
   175ec:	push	{r4, r5, lr}
   175f0:	add	r5, r0, #102	; 0x66
   175f4:	mov	r4, r0
   175f8:	mov	r3, r5
   175fc:	sub	sp, sp, #236	; 0xec
   17600:	mov	r2, r5
   17604:	ldr	r1, [pc, #2736]	; 180bc <__flatcc_fb_gen_common_c_header@@Base+0xad0>
   17608:	ldr	r0, [r0, #204]	; 0xcc
   1760c:	bl	140bc <fprintf@plt>
   17610:	ldr	r0, [pc, #2728]	; 180c0 <__flatcc_fb_gen_common_c_header@@Base+0xad4>
   17614:	ldr	r1, [r4, #204]	; 0xcc
   17618:	bl	14158 <fputs@plt>
   1761c:	ldr	r0, [pc, #2720]	; 180c4 <__flatcc_fb_gen_common_c_header@@Base+0xad8>
   17620:	ldr	r1, [r4, #204]	; 0xcc
   17624:	bl	14158 <fputs@plt>
   17628:	ldr	r3, [r4, #212]	; 0xd4
   1762c:	ldr	r3, [r3, #136]	; 0x88
   17630:	cmp	r3, #0
   17634:	bne	17644 <__flatcc_fb_gen_common_c_header@@Base+0x58>
   17638:	ldr	r0, [pc, #2696]	; 180c8 <__flatcc_fb_gen_common_c_header@@Base+0xadc>
   1763c:	ldr	r1, [r4, #204]	; 0xcc
   17640:	bl	14158 <fputs@plt>
   17644:	ldr	r3, [r4, #212]	; 0xd4
   17648:	ldr	r3, [r3, #140]	; 0x8c
   1764c:	cmp	r3, #0
   17650:	beq	17660 <__flatcc_fb_gen_common_c_header@@Base+0x74>
   17654:	ldr	r0, [pc, #2672]	; 180cc <__flatcc_fb_gen_common_c_header@@Base+0xae0>
   17658:	ldr	r1, [r4, #204]	; 0xcc
   1765c:	bl	14158 <fputs@plt>
   17660:	ldr	r0, [pc, #2664]	; 180d0 <__flatcc_fb_gen_common_c_header@@Base+0xae4>
   17664:	ldr	r1, [r4, #204]	; 0xcc
   17668:	bl	14158 <fputs@plt>
   1766c:	ldr	r1, [pc, #2656]	; 180d4 <__flatcc_fb_gen_common_c_header@@Base+0xae8>
   17670:	mov	r0, r4
   17674:	bl	13fd8 <strcmp@plt>
   17678:	cmp	r0, #0
   1767c:	beq	176f0 <__flatcc_fb_gen_common_c_header@@Base+0x104>
   17680:	mov	r3, r4
   17684:	mov	r2, r4
   17688:	ldr	r1, [pc, #2632]	; 180d8 <__flatcc_fb_gen_common_c_header@@Base+0xaec>
   1768c:	ldr	r0, [r4, #204]	; 0xcc
   17690:	str	r4, [sp]
   17694:	str	r4, [sp, #4]
   17698:	str	r4, [sp, #8]
   1769c:	bl	140bc <fprintf@plt>
   176a0:	mov	r3, r4
   176a4:	ldr	r2, [pc, #2608]	; 180dc <__flatcc_fb_gen_common_c_header@@Base+0xaf0>
   176a8:	ldr	r1, [pc, #2608]	; 180e0 <__flatcc_fb_gen_common_c_header@@Base+0xaf4>
   176ac:	ldr	r0, [r4, #204]	; 0xcc
   176b0:	str	r4, [sp]
   176b4:	str	r4, [sp, #4]
   176b8:	bl	140bc <fprintf@plt>
   176bc:	mov	r3, r4
   176c0:	mov	r2, r4
   176c4:	ldr	r1, [pc, #2584]	; 180e4 <__flatcc_fb_gen_common_c_header@@Base+0xaf8>
   176c8:	ldr	r0, [r4, #204]	; 0xcc
   176cc:	str	r4, [sp]
   176d0:	str	r4, [sp, #4]
   176d4:	str	r4, [sp, #8]
   176d8:	bl	140bc <fprintf@plt>
   176dc:	mov	r3, r5
   176e0:	mov	r2, r5
   176e4:	ldr	r1, [pc, #2556]	; 180e8 <__flatcc_fb_gen_common_c_header@@Base+0xafc>
   176e8:	ldr	r0, [r4, #204]	; 0xcc
   176ec:	bl	140bc <fprintf@plt>
   176f0:	mov	r3, r4
   176f4:	mov	r2, r4
   176f8:	ldr	r1, [pc, #2540]	; 180ec <__flatcc_fb_gen_common_c_header@@Base+0xb00>
   176fc:	ldr	r0, [r4, #204]	; 0xcc
   17700:	bl	140bc <fprintf@plt>
   17704:	mov	r3, r4
   17708:	mov	r2, r4
   1770c:	ldr	r1, [pc, #2524]	; 180f0 <__flatcc_fb_gen_common_c_header@@Base+0xb04>
   17710:	ldr	r0, [r4, #204]	; 0xcc
   17714:	str	r4, [sp]
   17718:	str	r4, [sp, #4]
   1771c:	str	r4, [sp, #8]
   17720:	str	r4, [sp, #12]
   17724:	str	r4, [sp, #16]
   17728:	bl	140bc <fprintf@plt>
   1772c:	mov	r3, r4
   17730:	mov	r2, r4
   17734:	ldr	r1, [pc, #2488]	; 180f4 <__flatcc_fb_gen_common_c_header@@Base+0xb08>
   17738:	ldr	r0, [r4, #204]	; 0xcc
   1773c:	bl	140bc <fprintf@plt>
   17740:	mov	r3, r4
   17744:	mov	r2, r4
   17748:	ldr	r1, [pc, #2472]	; 180f8 <__flatcc_fb_gen_common_c_header@@Base+0xb0c>
   1774c:	ldr	r0, [r4, #204]	; 0xcc
   17750:	str	r4, [sp]
   17754:	str	r4, [sp, #4]
   17758:	bl	140bc <fprintf@plt>
   1775c:	ldr	r3, [r4, #212]	; 0xd4
   17760:	ldr	r3, [r3, #32]
   17764:	cmp	r3, #0
   17768:	beq	1806c <__flatcc_fb_gen_common_c_header@@Base+0xa80>
   1776c:	mov	r2, r4
   17770:	ldr	r1, [pc, #2436]	; 180fc <__flatcc_fb_gen_common_c_header@@Base+0xb10>
   17774:	ldr	r0, [r4, #204]	; 0xcc
   17778:	bl	140bc <fprintf@plt>
   1777c:	mov	r3, r4
   17780:	mov	r2, r4
   17784:	ldr	r1, [pc, #2420]	; 18100 <__flatcc_fb_gen_common_c_header@@Base+0xb14>
   17788:	ldr	r0, [r4, #204]	; 0xcc
   1778c:	bl	140bc <fprintf@plt>
   17790:	mov	r3, r4
   17794:	mov	r2, r4
   17798:	ldr	r1, [pc, #2404]	; 18104 <__flatcc_fb_gen_common_c_header@@Base+0xb18>
   1779c:	ldr	r0, [r4, #204]	; 0xcc
   177a0:	str	r4, [sp]
   177a4:	str	r4, [sp, #4]
   177a8:	str	r4, [sp, #8]
   177ac:	bl	140bc <fprintf@plt>
   177b0:	mov	r3, r4
   177b4:	mov	r2, r4
   177b8:	ldr	r1, [pc, #2376]	; 18108 <__flatcc_fb_gen_common_c_header@@Base+0xb1c>
   177bc:	ldr	r0, [r4, #204]	; 0xcc
   177c0:	str	r4, [sp]
   177c4:	str	r4, [sp, #4]
   177c8:	str	r4, [sp, #8]
   177cc:	bl	140bc <fprintf@plt>
   177d0:	mov	r3, r4
   177d4:	mov	r2, r4
   177d8:	ldr	r1, [pc, #2348]	; 1810c <__flatcc_fb_gen_common_c_header@@Base+0xb20>
   177dc:	ldr	r0, [r4, #204]	; 0xcc
   177e0:	str	r4, [sp]
   177e4:	bl	140bc <fprintf@plt>
   177e8:	mov	r3, r4
   177ec:	mov	r2, r4
   177f0:	ldr	r1, [pc, #2328]	; 18110 <__flatcc_fb_gen_common_c_header@@Base+0xb24>
   177f4:	ldr	r0, [r4, #204]	; 0xcc
   177f8:	str	r4, [sp]
   177fc:	bl	140bc <fprintf@plt>
   17800:	mov	r3, r4
   17804:	mov	r2, r4
   17808:	ldr	r1, [pc, #2308]	; 18114 <__flatcc_fb_gen_common_c_header@@Base+0xb28>
   1780c:	ldr	r0, [r4, #204]	; 0xcc
   17810:	str	r4, [sp]
   17814:	bl	140bc <fprintf@plt>
   17818:	mov	r3, r4
   1781c:	mov	r2, r4
   17820:	ldr	r1, [pc, #2288]	; 18118 <__flatcc_fb_gen_common_c_header@@Base+0xb2c>
   17824:	ldr	r0, [r4, #204]	; 0xcc
   17828:	str	r4, [sp]
   1782c:	str	r4, [sp, #4]
   17830:	str	r4, [sp, #8]
   17834:	bl	140bc <fprintf@plt>
   17838:	ldr	r3, [r4, #212]	; 0xd4
   1783c:	ldr	r3, [r3, #32]
   17840:	cmp	r3, #0
   17844:	beq	1807c <__flatcc_fb_gen_common_c_header@@Base+0xa90>
   17848:	mov	r2, r4
   1784c:	ldr	r1, [pc, #2248]	; 1811c <__flatcc_fb_gen_common_c_header@@Base+0xb30>
   17850:	ldr	r0, [r4, #204]	; 0xcc
   17854:	bl	140bc <fprintf@plt>
   17858:	mov	r3, r4
   1785c:	mov	r2, r4
   17860:	ldr	r1, [pc, #2232]	; 18120 <__flatcc_fb_gen_common_c_header@@Base+0xb34>
   17864:	ldr	r0, [r4, #204]	; 0xcc
   17868:	str	r4, [sp]
   1786c:	str	r4, [sp, #4]
   17870:	bl	140bc <fprintf@plt>
   17874:	mov	r3, r4
   17878:	mov	r2, r4
   1787c:	ldr	r1, [pc, #2208]	; 18124 <__flatcc_fb_gen_common_c_header@@Base+0xb38>
   17880:	ldr	r0, [r4, #204]	; 0xcc
   17884:	bl	140bc <fprintf@plt>
   17888:	mov	r3, r4
   1788c:	mov	r2, r4
   17890:	ldr	r1, [pc, #2192]	; 18128 <__flatcc_fb_gen_common_c_header@@Base+0xb3c>
   17894:	ldr	r0, [r4, #204]	; 0xcc
   17898:	str	r4, [sp]
   1789c:	bl	140bc <fprintf@plt>
   178a0:	mov	r3, r4
   178a4:	mov	r2, r4
   178a8:	ldr	r1, [pc, #2172]	; 1812c <__flatcc_fb_gen_common_c_header@@Base+0xb40>
   178ac:	ldr	r0, [r4, #204]	; 0xcc
   178b0:	bl	140bc <fprintf@plt>
   178b4:	mov	r3, r4
   178b8:	mov	r2, r4
   178bc:	ldr	r1, [pc, #2156]	; 18130 <__flatcc_fb_gen_common_c_header@@Base+0xb44>
   178c0:	ldr	r0, [r4, #204]	; 0xcc
   178c4:	str	r4, [sp]
   178c8:	str	r4, [sp, #4]
   178cc:	bl	140bc <fprintf@plt>
   178d0:	mov	r3, r4
   178d4:	mov	r2, r4
   178d8:	ldr	r1, [pc, #2132]	; 18134 <__flatcc_fb_gen_common_c_header@@Base+0xb48>
   178dc:	ldr	r0, [r4, #204]	; 0xcc
   178e0:	bl	140bc <fprintf@plt>
   178e4:	mov	r3, r4
   178e8:	mov	r2, r4
   178ec:	ldr	r1, [pc, #2116]	; 18138 <__flatcc_fb_gen_common_c_header@@Base+0xb4c>
   178f0:	ldr	r0, [r4, #204]	; 0xcc
   178f4:	bl	140bc <fprintf@plt>
   178f8:	mov	r3, r4
   178fc:	mov	r2, r4
   17900:	ldr	r1, [pc, #2100]	; 1813c <__flatcc_fb_gen_common_c_header@@Base+0xb50>
   17904:	ldr	r0, [r4, #204]	; 0xcc
   17908:	str	r4, [sp]
   1790c:	str	r4, [sp, #4]
   17910:	bl	140bc <fprintf@plt>
   17914:	mov	r3, r4
   17918:	mov	r2, r4
   1791c:	ldr	r1, [pc, #2076]	; 18140 <__flatcc_fb_gen_common_c_header@@Base+0xb54>
   17920:	ldr	r0, [r4, #204]	; 0xcc
   17924:	str	r4, [sp]
   17928:	str	r4, [sp, #4]
   1792c:	str	r4, [sp, #8]
   17930:	str	r4, [sp, #12]
   17934:	str	r4, [sp, #16]
   17938:	str	r4, [sp, #20]
   1793c:	str	r4, [sp, #24]
   17940:	str	r4, [sp, #28]
   17944:	str	r4, [sp, #32]
   17948:	str	r4, [sp, #36]	; 0x24
   1794c:	bl	140bc <fprintf@plt>
   17950:	mov	r2, r4
   17954:	ldr	r1, [pc, #2024]	; 18144 <__flatcc_fb_gen_common_c_header@@Base+0xb58>
   17958:	ldr	r0, [r4, #204]	; 0xcc
   1795c:	bl	140bc <fprintf@plt>
   17960:	mov	r3, r4
   17964:	mov	r2, r4
   17968:	ldr	r1, [pc, #2008]	; 18148 <__flatcc_fb_gen_common_c_header@@Base+0xb5c>
   1796c:	ldr	r0, [r4, #204]	; 0xcc
   17970:	str	r4, [sp]
   17974:	str	r4, [sp, #4]
   17978:	bl	140bc <fprintf@plt>
   1797c:	mov	r3, r4
   17980:	mov	r2, r4
   17984:	ldr	r1, [pc, #1984]	; 1814c <__flatcc_fb_gen_common_c_header@@Base+0xb60>
   17988:	ldr	r0, [r4, #204]	; 0xcc
   1798c:	str	r4, [sp]
   17990:	str	r4, [sp, #4]
   17994:	str	r4, [sp, #8]
   17998:	str	r4, [sp, #12]
   1799c:	str	r4, [sp, #16]
   179a0:	str	r4, [sp, #20]
   179a4:	str	r4, [sp, #24]
   179a8:	str	r4, [sp, #28]
   179ac:	str	r4, [sp, #32]
   179b0:	str	r4, [sp, #36]	; 0x24
   179b4:	str	r4, [sp, #40]	; 0x28
   179b8:	str	r4, [sp, #44]	; 0x2c
   179bc:	str	r4, [sp, #48]	; 0x30
   179c0:	str	r4, [sp, #52]	; 0x34
   179c4:	str	r4, [sp, #56]	; 0x38
   179c8:	bl	140bc <fprintf@plt>
   179cc:	mov	r3, r4
   179d0:	mov	r2, r4
   179d4:	ldr	r1, [pc, #1908]	; 18150 <__flatcc_fb_gen_common_c_header@@Base+0xb64>
   179d8:	ldr	r0, [r4, #204]	; 0xcc
   179dc:	str	r4, [sp]
   179e0:	str	r4, [sp, #4]
   179e4:	str	r4, [sp, #8]
   179e8:	str	r4, [sp, #12]
   179ec:	str	r4, [sp, #16]
   179f0:	str	r4, [sp, #20]
   179f4:	bl	140bc <fprintf@plt>
   179f8:	mov	r3, r4
   179fc:	mov	r2, r4
   17a00:	ldr	r1, [pc, #1868]	; 18154 <__flatcc_fb_gen_common_c_header@@Base+0xb68>
   17a04:	ldr	r0, [r4, #204]	; 0xcc
   17a08:	str	r4, [sp]
   17a0c:	str	r4, [sp, #4]
   17a10:	bl	140bc <fprintf@plt>
   17a14:	mov	r3, r4
   17a18:	mov	r2, r4
   17a1c:	ldr	r1, [pc, #1844]	; 18158 <__flatcc_fb_gen_common_c_header@@Base+0xb6c>
   17a20:	ldr	r0, [r4, #204]	; 0xcc
   17a24:	str	r4, [sp]
   17a28:	str	r4, [sp, #4]
   17a2c:	bl	140bc <fprintf@plt>
   17a30:	mov	r2, r4
   17a34:	ldr	r1, [pc, #1824]	; 1815c <__flatcc_fb_gen_common_c_header@@Base+0xb70>
   17a38:	ldr	r0, [r4, #204]	; 0xcc
   17a3c:	bl	140bc <fprintf@plt>
   17a40:	mov	r2, r4
   17a44:	ldr	r1, [pc, #1812]	; 18160 <__flatcc_fb_gen_common_c_header@@Base+0xb74>
   17a48:	ldr	r0, [r4, #204]	; 0xcc
   17a4c:	bl	140bc <fprintf@plt>
   17a50:	mov	r2, r4
   17a54:	ldr	r1, [pc, #1800]	; 18164 <__flatcc_fb_gen_common_c_header@@Base+0xb78>
   17a58:	ldr	r0, [r4, #204]	; 0xcc
   17a5c:	bl	140bc <fprintf@plt>
   17a60:	mov	r2, r4
   17a64:	ldr	r1, [pc, #1788]	; 18168 <__flatcc_fb_gen_common_c_header@@Base+0xb7c>
   17a68:	ldr	r0, [r4, #204]	; 0xcc
   17a6c:	bl	140bc <fprintf@plt>
   17a70:	mov	r2, r4
   17a74:	ldr	r1, [pc, #1776]	; 1816c <__flatcc_fb_gen_common_c_header@@Base+0xb80>
   17a78:	ldr	r0, [r4, #204]	; 0xcc
   17a7c:	bl	140bc <fprintf@plt>
   17a80:	mov	r3, r4
   17a84:	mov	r2, r4
   17a88:	ldr	r1, [pc, #1760]	; 18170 <__flatcc_fb_gen_common_c_header@@Base+0xb84>
   17a8c:	ldr	r0, [r4, #204]	; 0xcc
   17a90:	str	r4, [sp]
   17a94:	str	r4, [sp, #4]
   17a98:	bl	140bc <fprintf@plt>
   17a9c:	mov	r3, r4
   17aa0:	mov	r2, r4
   17aa4:	ldr	r1, [pc, #1736]	; 18174 <__flatcc_fb_gen_common_c_header@@Base+0xb88>
   17aa8:	ldr	r0, [r4, #204]	; 0xcc
   17aac:	str	r4, [sp]
   17ab0:	str	r4, [sp, #4]
   17ab4:	str	r4, [sp, #8]
   17ab8:	str	r4, [sp, #12]
   17abc:	bl	140bc <fprintf@plt>
   17ac0:	mov	r3, r4
   17ac4:	mov	r2, r4
   17ac8:	ldr	r1, [pc, #1704]	; 18178 <__flatcc_fb_gen_common_c_header@@Base+0xb8c>
   17acc:	ldr	r0, [r4, #204]	; 0xcc
   17ad0:	str	r4, [sp]
   17ad4:	bl	140bc <fprintf@plt>
   17ad8:	mov	r3, r4
   17adc:	mov	r2, r4
   17ae0:	ldr	r1, [pc, #1684]	; 1817c <__flatcc_fb_gen_common_c_header@@Base+0xb90>
   17ae4:	ldr	r0, [r4, #204]	; 0xcc
   17ae8:	str	r4, [sp]
   17aec:	str	r4, [sp, #4]
   17af0:	str	r4, [sp, #8]
   17af4:	str	r4, [sp, #12]
   17af8:	str	r4, [sp, #16]
   17afc:	str	r4, [sp, #20]
   17b00:	str	r4, [sp, #24]
   17b04:	str	r4, [sp, #28]
   17b08:	str	r4, [sp, #32]
   17b0c:	bl	140bc <fprintf@plt>
   17b10:	mov	r3, r4
   17b14:	mov	r2, r4
   17b18:	ldr	r1, [pc, #1632]	; 18180 <__flatcc_fb_gen_common_c_header@@Base+0xb94>
   17b1c:	ldr	r0, [r4, #204]	; 0xcc
   17b20:	bl	140bc <fprintf@plt>
   17b24:	mov	r3, r4
   17b28:	mov	r2, r4
   17b2c:	ldr	r1, [pc, #1616]	; 18184 <__flatcc_fb_gen_common_c_header@@Base+0xb98>
   17b30:	ldr	r0, [r4, #204]	; 0xcc
   17b34:	str	r4, [sp]
   17b38:	bl	140bc <fprintf@plt>
   17b3c:	mov	r3, r4
   17b40:	mov	r2, r4
   17b44:	ldr	r1, [pc, #1596]	; 18188 <__flatcc_fb_gen_common_c_header@@Base+0xb9c>
   17b48:	ldr	r0, [r4, #204]	; 0xcc
   17b4c:	str	r4, [sp]
   17b50:	bl	140bc <fprintf@plt>
   17b54:	mov	r2, r4
   17b58:	ldr	r1, [pc, #1580]	; 1818c <__flatcc_fb_gen_common_c_header@@Base+0xba0>
   17b5c:	ldr	r0, [r4, #204]	; 0xcc
   17b60:	bl	140bc <fprintf@plt>
   17b64:	mov	r2, r4
   17b68:	ldr	r1, [pc, #1568]	; 18190 <__flatcc_fb_gen_common_c_header@@Base+0xba4>
   17b6c:	ldr	r0, [r4, #204]	; 0xcc
   17b70:	bl	140bc <fprintf@plt>
   17b74:	mov	r3, r4
   17b78:	mov	r2, r4
   17b7c:	ldr	r1, [pc, #1552]	; 18194 <__flatcc_fb_gen_common_c_header@@Base+0xba8>
   17b80:	ldr	r0, [r4, #204]	; 0xcc
   17b84:	bl	140bc <fprintf@plt>
   17b88:	mov	r3, r4
   17b8c:	mov	r2, r4
   17b90:	ldr	r1, [pc, #1536]	; 18198 <__flatcc_fb_gen_common_c_header@@Base+0xbac>
   17b94:	ldr	r0, [r4, #204]	; 0xcc
   17b98:	bl	140bc <fprintf@plt>
   17b9c:	mov	r3, r4
   17ba0:	mov	r2, r4
   17ba4:	ldr	r1, [pc, #1520]	; 1819c <__flatcc_fb_gen_common_c_header@@Base+0xbb0>
   17ba8:	ldr	r0, [r4, #204]	; 0xcc
   17bac:	str	r4, [sp]
   17bb0:	str	r4, [sp, #4]
   17bb4:	str	r4, [sp, #8]
   17bb8:	str	r4, [sp, #12]
   17bbc:	str	r4, [sp, #16]
   17bc0:	str	r4, [sp, #20]
   17bc4:	str	r4, [sp, #24]
   17bc8:	str	r4, [sp, #28]
   17bcc:	str	r4, [sp, #32]
   17bd0:	bl	140bc <fprintf@plt>
   17bd4:	mov	r3, r4
   17bd8:	mov	r2, r4
   17bdc:	ldr	r1, [pc, #1468]	; 181a0 <__flatcc_fb_gen_common_c_header@@Base+0xbb4>
   17be0:	ldr	r0, [r4, #204]	; 0xcc
   17be4:	str	r4, [sp]
   17be8:	str	r4, [sp, #4]
   17bec:	str	r4, [sp, #8]
   17bf0:	str	r4, [sp, #12]
   17bf4:	str	r4, [sp, #16]
   17bf8:	str	r4, [sp, #20]
   17bfc:	str	r4, [sp, #24]
   17c00:	str	r4, [sp, #28]
   17c04:	str	r4, [sp, #32]
   17c08:	bl	140bc <fprintf@plt>
   17c0c:	mov	r3, r4
   17c10:	mov	r2, r4
   17c14:	ldr	r1, [pc, #1416]	; 181a4 <__flatcc_fb_gen_common_c_header@@Base+0xbb8>
   17c18:	ldr	r0, [r4, #204]	; 0xcc
   17c1c:	str	r4, [sp]
   17c20:	str	r4, [sp, #4]
   17c24:	str	r4, [sp, #8]
   17c28:	str	r4, [sp, #12]
   17c2c:	str	r4, [sp, #16]
   17c30:	bl	140bc <fprintf@plt>
   17c34:	mov	r3, r4
   17c38:	mov	r2, r4
   17c3c:	ldr	r1, [pc, #1380]	; 181a8 <__flatcc_fb_gen_common_c_header@@Base+0xbbc>
   17c40:	ldr	r0, [r4, #204]	; 0xcc
   17c44:	str	r4, [sp]
   17c48:	str	r4, [sp, #4]
   17c4c:	str	r4, [sp, #8]
   17c50:	str	r4, [sp, #12]
   17c54:	str	r4, [sp, #16]
   17c58:	str	r4, [sp, #20]
   17c5c:	str	r4, [sp, #24]
   17c60:	str	r4, [sp, #28]
   17c64:	str	r4, [sp, #32]
   17c68:	bl	140bc <fprintf@plt>
   17c6c:	mov	r3, r4
   17c70:	mov	r2, r4
   17c74:	ldr	r1, [pc, #1328]	; 181ac <__flatcc_fb_gen_common_c_header@@Base+0xbc0>
   17c78:	ldr	r0, [r4, #204]	; 0xcc
   17c7c:	str	r4, [sp]
   17c80:	str	r4, [sp, #4]
   17c84:	str	r4, [sp, #8]
   17c88:	str	r4, [sp, #12]
   17c8c:	str	r4, [sp, #16]
   17c90:	str	r4, [sp, #20]
   17c94:	str	r4, [sp, #24]
   17c98:	str	r4, [sp, #28]
   17c9c:	str	r4, [sp, #32]
   17ca0:	str	r4, [sp, #36]	; 0x24
   17ca4:	str	r4, [sp, #40]	; 0x28
   17ca8:	bl	140bc <fprintf@plt>
   17cac:	mov	r2, r4
   17cb0:	ldr	r1, [pc, #1272]	; 181b0 <__flatcc_fb_gen_common_c_header@@Base+0xbc4>
   17cb4:	ldr	r0, [r4, #204]	; 0xcc
   17cb8:	bl	140bc <fprintf@plt>
   17cbc:	mov	r2, r4
   17cc0:	ldr	r1, [pc, #1260]	; 181b4 <__flatcc_fb_gen_common_c_header@@Base+0xbc8>
   17cc4:	ldr	r0, [r4, #204]	; 0xcc
   17cc8:	bl	140bc <fprintf@plt>
   17ccc:	ldr	r3, [r4, #212]	; 0xd4
   17cd0:	ldr	r3, [r3, #136]	; 0x88
   17cd4:	cmp	r3, #0
   17cd8:	beq	1808c <__flatcc_fb_gen_common_c_header@@Base+0xaa0>
   17cdc:	mov	r0, r4
   17ce0:	bl	1864c <__flatcc_gen_sort@@Base>
   17ce4:	mov	r3, r4
   17ce8:	mov	r2, r4
   17cec:	ldr	r1, [pc, #1220]	; 181b8 <__flatcc_fb_gen_common_c_header@@Base+0xbcc>
   17cf0:	ldr	r0, [r4, #204]	; 0xcc
   17cf4:	str	r4, [sp]
   17cf8:	str	r4, [sp, #4]
   17cfc:	str	r4, [sp, #8]
   17d00:	bl	140bc <fprintf@plt>
   17d04:	ldr	r3, [r4, #212]	; 0xd4
   17d08:	ldr	r3, [r3, #136]	; 0x88
   17d0c:	cmp	r3, #0
   17d10:	beq	1809c <__flatcc_fb_gen_common_c_header@@Base+0xab0>
   17d14:	mov	r2, r4
   17d18:	ldr	r1, [pc, #1180]	; 181bc <__flatcc_fb_gen_common_c_header@@Base+0xbd0>
   17d1c:	ldr	r0, [r4, #204]	; 0xcc
   17d20:	bl	140bc <fprintf@plt>
   17d24:	mov	r0, #10
   17d28:	ldr	r1, [r4, #204]	; 0xcc
   17d2c:	bl	1411c <fputc@plt>
   17d30:	mov	r3, r4
   17d34:	mov	r2, r4
   17d38:	ldr	r1, [pc, #1152]	; 181c0 <__flatcc_fb_gen_common_c_header@@Base+0xbd4>
   17d3c:	ldr	r0, [r4, #204]	; 0xcc
   17d40:	str	r4, [sp]
   17d44:	bl	140bc <fprintf@plt>
   17d48:	mov	r3, r4
   17d4c:	mov	r2, r4
   17d50:	ldr	r1, [pc, #1132]	; 181c4 <__flatcc_fb_gen_common_c_header@@Base+0xbd8>
   17d54:	ldr	r0, [r4, #204]	; 0xcc
   17d58:	str	r4, [sp]
   17d5c:	str	r4, [sp, #4]
   17d60:	str	r4, [sp, #8]
   17d64:	str	r4, [sp, #12]
   17d68:	str	r4, [sp, #16]
   17d6c:	str	r4, [sp, #20]
   17d70:	str	r4, [sp, #24]
   17d74:	str	r4, [sp, #28]
   17d78:	str	r4, [sp, #32]
   17d7c:	str	r4, [sp, #36]	; 0x24
   17d80:	str	r4, [sp, #40]	; 0x28
   17d84:	str	r4, [sp, #44]	; 0x2c
   17d88:	str	r4, [sp, #48]	; 0x30
   17d8c:	str	r4, [sp, #52]	; 0x34
   17d90:	str	r4, [sp, #56]	; 0x38
   17d94:	str	r4, [sp, #60]	; 0x3c
   17d98:	str	r4, [sp, #64]	; 0x40
   17d9c:	str	r4, [sp, #68]	; 0x44
   17da0:	str	r4, [sp, #72]	; 0x48
   17da4:	str	r4, [sp, #76]	; 0x4c
   17da8:	str	r4, [sp, #80]	; 0x50
   17dac:	str	r4, [sp, #84]	; 0x54
   17db0:	str	r4, [sp, #88]	; 0x58
   17db4:	str	r4, [sp, #92]	; 0x5c
   17db8:	bl	140bc <fprintf@plt>
   17dbc:	mov	r3, r4
   17dc0:	mov	r2, r4
   17dc4:	ldr	r1, [pc, #1020]	; 181c8 <__flatcc_fb_gen_common_c_header@@Base+0xbdc>
   17dc8:	ldr	r0, [r4, #204]	; 0xcc
   17dcc:	str	r4, [sp]
   17dd0:	str	r4, [sp, #4]
   17dd4:	str	r4, [sp, #8]
   17dd8:	str	r4, [sp, #12]
   17ddc:	str	r4, [sp, #16]
   17de0:	str	r4, [sp, #20]
   17de4:	str	r4, [sp, #24]
   17de8:	str	r4, [sp, #28]
   17dec:	str	r4, [sp, #32]
   17df0:	str	r4, [sp, #36]	; 0x24
   17df4:	bl	140bc <fprintf@plt>
   17df8:	mov	r3, r4
   17dfc:	mov	r2, r4
   17e00:	ldr	r1, [pc, #964]	; 181cc <__flatcc_fb_gen_common_c_header@@Base+0xbe0>
   17e04:	str	r4, [sp, #104]	; 0x68
   17e08:	str	r4, [sp, #108]	; 0x6c
   17e0c:	str	r4, [sp, #112]	; 0x70
   17e10:	str	r4, [sp, #116]	; 0x74
   17e14:	str	r4, [sp, #120]	; 0x78
   17e18:	str	r4, [sp, #124]	; 0x7c
   17e1c:	str	r4, [sp, #128]	; 0x80
   17e20:	str	r4, [sp, #132]	; 0x84
   17e24:	str	r4, [sp, #136]	; 0x88
   17e28:	str	r4, [sp, #140]	; 0x8c
   17e2c:	str	r4, [sp, #144]	; 0x90
   17e30:	str	r4, [sp, #148]	; 0x94
   17e34:	str	r4, [sp, #152]	; 0x98
   17e38:	str	r4, [sp, #156]	; 0x9c
   17e3c:	str	r4, [sp, #160]	; 0xa0
   17e40:	str	r4, [sp, #164]	; 0xa4
   17e44:	str	r4, [sp, #168]	; 0xa8
   17e48:	str	r4, [sp, #172]	; 0xac
   17e4c:	str	r4, [sp, #176]	; 0xb0
   17e50:	str	r4, [sp, #180]	; 0xb4
   17e54:	str	r4, [sp, #184]	; 0xb8
   17e58:	str	r4, [sp, #188]	; 0xbc
   17e5c:	str	r4, [sp, #192]	; 0xc0
   17e60:	str	r4, [sp, #196]	; 0xc4
   17e64:	str	r4, [sp, #200]	; 0xc8
   17e68:	str	r4, [sp, #204]	; 0xcc
   17e6c:	str	r4, [sp, #208]	; 0xd0
   17e70:	str	r4, [sp, #212]	; 0xd4
   17e74:	str	r4, [sp, #216]	; 0xd8
   17e78:	str	r4, [sp, #220]	; 0xdc
   17e7c:	str	r4, [sp, #224]	; 0xe0
   17e80:	str	r4, [sp, #228]	; 0xe4
   17e84:	str	r4, [sp, #100]	; 0x64
   17e88:	str	r4, [sp]
   17e8c:	str	r4, [sp, #4]
   17e90:	str	r4, [sp, #8]
   17e94:	str	r4, [sp, #12]
   17e98:	str	r4, [sp, #16]
   17e9c:	str	r4, [sp, #20]
   17ea0:	str	r4, [sp, #24]
   17ea4:	str	r4, [sp, #28]
   17ea8:	str	r4, [sp, #32]
   17eac:	str	r4, [sp, #36]	; 0x24
   17eb0:	str	r4, [sp, #40]	; 0x28
   17eb4:	str	r4, [sp, #44]	; 0x2c
   17eb8:	str	r4, [sp, #48]	; 0x30
   17ebc:	str	r4, [sp, #52]	; 0x34
   17ec0:	str	r4, [sp, #56]	; 0x38
   17ec4:	str	r4, [sp, #60]	; 0x3c
   17ec8:	str	r4, [sp, #64]	; 0x40
   17ecc:	str	r4, [sp, #68]	; 0x44
   17ed0:	str	r4, [sp, #72]	; 0x48
   17ed4:	str	r4, [sp, #76]	; 0x4c
   17ed8:	str	r4, [sp, #80]	; 0x50
   17edc:	str	r4, [sp, #84]	; 0x54
   17ee0:	str	r4, [sp, #88]	; 0x58
   17ee4:	str	r4, [sp, #92]	; 0x5c
   17ee8:	str	r4, [sp, #96]	; 0x60
   17eec:	ldr	r0, [r4, #204]	; 0xcc
   17ef0:	bl	140bc <fprintf@plt>
   17ef4:	ldr	r3, [r4, #212]	; 0xd4
   17ef8:	ldr	r3, [r3, #136]	; 0x88
   17efc:	cmp	r3, #0
   17f00:	beq	17f14 <__flatcc_fb_gen_common_c_header@@Base+0x928>
   17f04:	mov	r2, r4
   17f08:	ldr	r1, [pc, #704]	; 181d0 <__flatcc_fb_gen_common_c_header@@Base+0xbe4>
   17f0c:	ldr	r0, [r4, #204]	; 0xcc
   17f10:	bl	140bc <fprintf@plt>
   17f14:	mov	r3, r4
   17f18:	mov	r2, r4
   17f1c:	ldr	r1, [pc, #688]	; 181d4 <__flatcc_fb_gen_common_c_header@@Base+0xbe8>
   17f20:	ldr	r0, [r4, #204]	; 0xcc
   17f24:	bl	140bc <fprintf@plt>
   17f28:	ldr	r3, [r4, #212]	; 0xd4
   17f2c:	ldr	r3, [r3, #32]
   17f30:	cmp	r3, #0
   17f34:	beq	180ac <__flatcc_fb_gen_common_c_header@@Base+0xac0>
   17f38:	mov	r2, r4
   17f3c:	ldr	r1, [pc, #440]	; 180fc <__flatcc_fb_gen_common_c_header@@Base+0xb10>
   17f40:	ldr	r0, [r4, #204]	; 0xcc
   17f44:	bl	140bc <fprintf@plt>
   17f48:	mov	r2, r4
   17f4c:	ldr	r1, [pc, #644]	; 181d8 <__flatcc_fb_gen_common_c_header@@Base+0xbec>
   17f50:	ldr	r0, [r4, #204]	; 0xcc
   17f54:	bl	140bc <fprintf@plt>
   17f58:	mov	r3, r4
   17f5c:	mov	r2, r4
   17f60:	ldr	r1, [pc, #628]	; 181dc <__flatcc_fb_gen_common_c_header@@Base+0xbf0>
   17f64:	ldr	r0, [r4, #204]	; 0xcc
   17f68:	str	r4, [sp]
   17f6c:	str	r4, [sp, #4]
   17f70:	str	r4, [sp, #8]
   17f74:	str	r4, [sp, #12]
   17f78:	str	r4, [sp, #16]
   17f7c:	str	r4, [sp, #20]
   17f80:	str	r4, [sp, #24]
   17f84:	str	r4, [sp, #28]
   17f88:	str	r4, [sp, #32]
   17f8c:	str	r4, [sp, #36]	; 0x24
   17f90:	str	r4, [sp, #40]	; 0x28
   17f94:	str	r4, [sp, #44]	; 0x2c
   17f98:	bl	140bc <fprintf@plt>
   17f9c:	mov	r3, r4
   17fa0:	mov	r2, r4
   17fa4:	ldr	r1, [pc, #564]	; 181e0 <__flatcc_fb_gen_common_c_header@@Base+0xbf4>
   17fa8:	ldr	r0, [r4, #204]	; 0xcc
   17fac:	str	r4, [sp]
   17fb0:	bl	140bc <fprintf@plt>
   17fb4:	mov	r3, r4
   17fb8:	mov	r2, r4
   17fbc:	ldr	r1, [pc, #544]	; 181e4 <__flatcc_fb_gen_common_c_header@@Base+0xbf8>
   17fc0:	ldr	r0, [r4, #204]	; 0xcc
   17fc4:	str	r4, [sp]
   17fc8:	str	r4, [sp, #4]
   17fcc:	str	r4, [sp, #8]
   17fd0:	str	r4, [sp, #12]
   17fd4:	bl	140bc <fprintf@plt>
   17fd8:	mov	r3, r4
   17fdc:	mov	r2, r4
   17fe0:	ldr	r1, [pc, #512]	; 181e8 <__flatcc_fb_gen_common_c_header@@Base+0xbfc>
   17fe4:	ldr	r0, [r4, #204]	; 0xcc
   17fe8:	str	r4, [sp]
   17fec:	str	r4, [sp, #4]
   17ff0:	bl	140bc <fprintf@plt>
   17ff4:	mov	r3, r4
   17ff8:	mov	r2, r4
   17ffc:	ldr	r1, [pc, #488]	; 181ec <__flatcc_fb_gen_common_c_header@@Base+0xc00>
   18000:	ldr	r0, [r4, #204]	; 0xcc
   18004:	str	r4, [sp]
   18008:	str	r4, [sp, #4]
   1800c:	str	r4, [sp, #8]
   18010:	str	r4, [sp, #12]
   18014:	str	r4, [sp, #16]
   18018:	str	r4, [sp, #20]
   1801c:	str	r4, [sp, #24]
   18020:	str	r4, [sp, #28]
   18024:	bl	140bc <fprintf@plt>
   18028:	mov	r0, #10
   1802c:	ldr	r1, [r4, #204]	; 0xcc
   18030:	bl	1411c <fputc@plt>
   18034:	ldr	r3, [r4, #212]	; 0xd4
   18038:	ldr	r3, [r3, #140]	; 0x8c
   1803c:	cmp	r3, #0
   18040:	beq	18050 <__flatcc_fb_gen_common_c_header@@Base+0xa64>
   18044:	ldr	r0, [pc, #420]	; 181f0 <__flatcc_fb_gen_common_c_header@@Base+0xc04>
   18048:	ldr	r1, [r4, #204]	; 0xcc
   1804c:	bl	14158 <fputs@plt>
   18050:	ldr	r1, [pc, #412]	; 181f4 <__flatcc_fb_gen_common_c_header@@Base+0xc08>
   18054:	mov	r2, r5
   18058:	ldr	r0, [r4, #204]	; 0xcc
   1805c:	bl	140bc <fprintf@plt>
   18060:	mov	r0, #0
   18064:	add	sp, sp, #236	; 0xec
   18068:	pop	{r4, r5, pc}
   1806c:	mov	r0, #10
   18070:	ldr	r1, [r4, #204]	; 0xcc
   18074:	bl	1411c <fputc@plt>
   18078:	b	1777c <__flatcc_fb_gen_common_c_header@@Base+0x190>
   1807c:	mov	r0, #10
   18080:	ldr	r1, [r4, #204]	; 0xcc
   18084:	bl	1411c <fputc@plt>
   18088:	b	17858 <__flatcc_fb_gen_common_c_header@@Base+0x26c>
   1808c:	ldr	r0, [pc, #356]	; 181f8 <__flatcc_fb_gen_common_c_header@@Base+0xc0c>
   18090:	ldr	r1, [r4, #204]	; 0xcc
   18094:	bl	14158 <fputs@plt>
   18098:	b	17ce4 <__flatcc_fb_gen_common_c_header@@Base+0x6f8>
   1809c:	mov	r0, #10
   180a0:	ldr	r1, [r4, #204]	; 0xcc
   180a4:	bl	1411c <fputc@plt>
   180a8:	b	17d24 <__flatcc_fb_gen_common_c_header@@Base+0x738>
   180ac:	mov	r0, #10
   180b0:	ldr	r1, [r4, #204]	; 0xcc
   180b4:	bl	1411c <fputc@plt>
   180b8:	b	17f48 <__flatcc_fb_gen_common_c_header@@Base+0x95c>
   180bc:	andeq	r2, r3, r3, rrx
   180c0:	muleq	r3, sl, r0
   180c4:	andeq	r2, r3, ip, ror #1
   180c8:	andeq	r2, r3, r1, lsr #2
   180cc:	andeq	r2, r3, r9, lsr #3
   180d0:	andeq	r2, r3, lr, asr #3
   180d4:	strdeq	r2, [r3], -r8
   180d8:	andeq	r2, r3, r5, lsl #4
   180dc:	strdeq	r2, [r3], -r6
   180e0:	ldrdeq	r2, [r3], -r4
   180e4:	andeq	r2, r3, fp, lsr #8
   180e8:	muleq	r3, r1, r6
   180ec:	andeq	r2, r3, r1, ror #13
   180f0:	andeq	r2, r3, lr, ror #14
   180f4:	andeq	r2, r3, r1, ror #17
   180f8:	andeq	r2, r3, r6, lsr r9
   180fc:	andeq	r2, r3, fp, asr sl
   18100:	andeq	r2, r3, r8, lsl #21
   18104:	andeq	r2, r3, fp, asr fp
   18108:	andeq	r2, r3, r5, lsl #26
   1810c:	andeq	r2, r3, r5, lsr #27
   18110:	andeq	r2, r3, pc, ror lr
   18114:	andeq	r2, r3, r9, asr pc
   18118:	andeq	r3, r3, r1, lsr r0
   1811c:	andeq	r3, r3, r9, lsl r1
   18120:	andeq	r3, r3, r3, asr #2
   18124:	andeq	r3, r3, r2, ror #3
   18128:	andeq	r3, r3, r4, lsr #4
   1812c:	andeq	r3, r3, lr, lsr #5
   18130:	andeq	r3, r3, r0, lsr #6
   18134:	andeq	r3, r3, r0, asr #8
   18138:			; <UNDEFINED> instruction: 0x000334b7
   1813c:	andeq	r3, r3, r7, lsr r5
   18140:	muleq	r3, sl, r5
   18144:			; <UNDEFINED> instruction: 0x000336bb
   18148:	ldrdeq	r3, [r3], -sp
   1814c:	andeq	r3, r3, r4, ror #14
   18150:	andeq	r3, r3, r3, lsl r9
   18154:	ldrdeq	r3, [r3], -r6
   18158:	andeq	r3, r3, pc, ror #20
   1815c:	andeq	r3, r3, r6, ror #21
   18160:			; <UNDEFINED> instruction: 0x00033db7
   18164:	andeq	r4, r3, r9, asr #32
   18168:	andeq	r4, r3, sl, asr #1
   1816c:	andeq	r4, r3, r8, lsr r1
   18170:	andeq	r4, r3, ip, lsl r3
   18174:	andeq	r4, r3, r5, asr #7
   18178:	andeq	r4, r3, r0, lsr #11
   1817c:			; <UNDEFINED> instruction: 0x000347ba
   18180:	andeq	r4, r3, r1, lsl r9
   18184:	andeq	r4, r3, r0, ror #19
   18188:	muleq	r3, r5, sl
   1818c:	andeq	r4, r3, sl, asr #24
   18190:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   18194:	andeq	r4, r3, r1, lsr #28
   18198:	andeq	r4, r3, r1, ror pc
   1819c:	andeq	r5, r3, r5, asr #32
   181a0:	andeq	r5, r3, r0, asr #3
   181a4:	andeq	r5, r3, r1, asr #6
   181a8:	muleq	r3, r6, r6
   181ac:			; <UNDEFINED> instruction: 0x000359b6
   181b0:	andeq	r6, r3, pc, ror r0
   181b4:	andeq	r6, r3, pc, asr #5
   181b8:	andeq	r6, r3, r5, lsr #15
   181bc:	andeq	r6, r3, r6, lsl #17
   181c0:	andeq	r6, r3, r6, lsr #17
   181c4:	andeq	r6, r3, r6, lsr #18
   181c8:	andeq	r6, r3, r9, lsr fp
   181cc:	andeq	r6, r3, r3, lsl #25
   181d0:	andeq	r7, r3, ip, lsr r3
   181d4:	andeq	r7, r3, r6, asr r3
   181d8:	andeq	r7, r3, pc, ror #7
   181dc:	andeq	r7, r3, lr, ror #8
   181e0:			; <UNDEFINED> instruction: 0x000377b7
   181e4:	andeq	r7, r3, lr, ror #16
   181e8:	andeq	r7, r3, r5, lsr sl
   181ec:			; <UNDEFINED> instruction: 0x00037cb1
   181f0:	muleq	r3, r3, pc	; <UNPREDICTABLE>
   181f4:			; <UNDEFINED> instruction: 0x00037fb8
   181f8:	muleq	r3, r0, r7

000181fc <__flatcc_fb_gen_c_reader@@Base>:
   181fc:	ldr	r3, [r0, #212]	; 0xd4
   18200:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18204:	mov	r4, r0
   18208:	sub	sp, sp, #248	; 0xf8
   1820c:	add	r6, r0, #102	; 0x66
   18210:	ldr	r1, [pc, #980]	; 185ec <__flatcc_fb_gen_c_reader@@Base+0x3f0>
   18214:	ldr	r5, [r3, #132]	; 0x84
   18218:	ldr	r3, [r0, #208]	; 0xd0
   1821c:	ldr	r0, [r0, #204]	; 0xcc
   18220:	ldr	r3, [r3, #164]	; 0xa4
   18224:	mov	r2, r3
   18228:	bl	140bc <fprintf@plt>
   1822c:	ldr	r0, [pc, #956]	; 185f0 <__flatcc_fb_gen_c_reader@@Base+0x3f4>
   18230:	ldr	r1, [r4, #204]	; 0xcc
   18234:	bl	14158 <fputs@plt>
   18238:	cmp	r5, #0
   1823c:	beq	1824c <__flatcc_fb_gen_c_reader@@Base+0x50>
   18240:	ldr	r0, [pc, #940]	; 185f4 <__flatcc_fb_gen_c_reader@@Base+0x3f8>
   18244:	ldr	r1, [r4, #204]	; 0xcc
   18248:	bl	14158 <fputs@plt>
   1824c:	mov	r3, r4
   18250:	mov	r2, r6
   18254:	ldr	r1, [pc, #924]	; 185f8 <__flatcc_fb_gen_c_reader@@Base+0x3fc>
   18258:	ldr	r0, [r4, #204]	; 0xcc
   1825c:	bl	140bc <fprintf@plt>
   18260:	ldr	r2, [pc, #916]	; 185fc <__flatcc_fb_gen_c_reader@@Base+0x400>
   18264:	mov	r0, r4
   18268:	ldr	r1, [pc, #912]	; 18600 <__flatcc_fb_gen_c_reader@@Base+0x404>
   1826c:	bl	15838 <__flatcc_fb_gen_c_includes@@Base>
   18270:	ldr	r0, [pc, #908]	; 18604 <__flatcc_fb_gen_c_reader@@Base+0x408>
   18274:	ldr	r1, [r4, #204]	; 0xcc
   18278:	bl	14158 <fputs@plt>
   1827c:	cmp	r5, #0
   18280:	bne	18290 <__flatcc_fb_gen_c_reader@@Base+0x94>
   18284:	ldr	r0, [pc, #892]	; 18608 <__flatcc_fb_gen_c_reader@@Base+0x40c>
   18288:	ldr	r1, [r4, #204]	; 0xcc
   1828c:	bl	14158 <fputs@plt>
   18290:	ldr	r3, [r4, #212]	; 0xd4
   18294:	ldr	r3, [r3, #140]	; 0x8c
   18298:	cmp	r3, #0
   1829c:	beq	182ac <__flatcc_fb_gen_c_reader@@Base+0xb0>
   182a0:	ldr	r0, [pc, #868]	; 1860c <__flatcc_fb_gen_c_reader@@Base+0x410>
   182a4:	ldr	r1, [r4, #204]	; 0xcc
   182a8:	bl	14158 <fputs@plt>
   182ac:	ldr	r0, [r4, #204]	; 0xcc
   182b0:	ldr	r3, [r4, #208]	; 0xd0
   182b4:	ldrh	r2, [r3, #16]
   182b8:	cmp	r2, #2
   182bc:	bne	183f8 <__flatcc_fb_gen_c_reader@@Base+0x1fc>
   182c0:	ldr	r2, [r3, #8]
   182c4:	ldr	r1, [pc, #836]	; 18610 <__flatcc_fb_gen_c_reader@@Base+0x414>
   182c8:	str	r2, [sp, #4]
   182cc:	mov	r2, r4
   182d0:	ldr	r3, [r3, #12]
   182d4:	str	r3, [sp]
   182d8:	mov	r3, r4
   182dc:	bl	140bc <fprintf@plt>
   182e0:	ldr	r0, [r4, #204]	; 0xcc
   182e4:	ldr	r3, [r4, #208]	; 0xd0
   182e8:	ldrh	r2, [r3, #32]
   182ec:	cmp	r2, #2
   182f0:	bne	1840c <__flatcc_fb_gen_c_reader@@Base+0x210>
   182f4:	ldr	r2, [r3, #24]
   182f8:	ldr	r1, [pc, #788]	; 18614 <__flatcc_fb_gen_c_reader@@Base+0x418>
   182fc:	str	r2, [sp, #4]
   18300:	mov	r2, r4
   18304:	ldr	r3, [r3, #28]
   18308:	str	r3, [sp]
   1830c:	mov	r3, r4
   18310:	bl	140bc <fprintf@plt>
   18314:	mov	r0, #10
   18318:	ldr	r1, [r4, #204]	; 0xcc
   1831c:	bl	1411c <fputc@plt>
   18320:	ldr	r3, [r4, #208]	; 0xd0
   18324:	ldr	r5, [r3, #44]	; 0x2c
   18328:	cmp	r5, #0
   1832c:	bne	1842c <__flatcc_fb_gen_c_reader@@Base+0x230>
   18330:	mov	r0, #10
   18334:	ldr	r1, [r4, #204]	; 0xcc
   18338:	bl	1411c <fputc@plt>
   1833c:	ldr	r3, [r4, #208]	; 0xd0
   18340:	ldr	r5, [r3, #40]	; 0x28
   18344:	cmp	r5, #0
   18348:	bne	18440 <__flatcc_fb_gen_c_reader@@Base+0x244>
   1834c:	ldr	r3, [r4, #208]	; 0xd0
   18350:	ldr	r7, [pc, #704]	; 18618 <__flatcc_fb_gen_c_reader@@Base+0x41c>
   18354:	ldr	r8, [pc, #704]	; 1861c <__flatcc_fb_gen_c_reader@@Base+0x420>
   18358:	ldr	r9, [pc, #704]	; 18620 <__flatcc_fb_gen_c_reader@@Base+0x424>
   1835c:	ldr	r5, [r3, #40]	; 0x28
   18360:	cmp	r5, #0
   18364:	bne	18460 <__flatcc_fb_gen_c_reader@@Base+0x264>
   18368:	mov	r0, #10
   1836c:	ldr	r1, [r4, #204]	; 0xcc
   18370:	bl	1411c <fputc@plt>
   18374:	ldr	r3, [r4, #208]	; 0xd0
   18378:	ldr	r5, [r3, #40]	; 0x28
   1837c:	cmp	r5, #0
   18380:	bne	1853c <__flatcc_fb_gen_c_reader@@Base+0x340>
   18384:	mov	r0, #10
   18388:	ldr	r1, [r4, #204]	; 0xcc
   1838c:	bl	1411c <fputc@plt>
   18390:	ldr	r3, [r4, #208]	; 0xd0
   18394:	ldr	r5, [r3, #44]	; 0x2c
   18398:	cmp	r5, #0
   1839c:	bne	1855c <__flatcc_fb_gen_c_reader@@Base+0x360>
   183a0:	ldr	r3, [r4, #208]	; 0xd0
   183a4:	ldr	r5, [r3, #40]	; 0x28
   183a8:	cmp	r5, #0
   183ac:	bne	18570 <__flatcc_fb_gen_c_reader@@Base+0x374>
   183b0:	mov	r0, #10
   183b4:	ldr	r1, [r4, #204]	; 0xcc
   183b8:	bl	1411c <fputc@plt>
   183bc:	ldr	r3, [r4, #212]	; 0xd4
   183c0:	ldr	r3, [r3, #140]	; 0x8c
   183c4:	cmp	r3, #0
   183c8:	beq	183d8 <__flatcc_fb_gen_c_reader@@Base+0x1dc>
   183cc:	ldr	r0, [pc, #592]	; 18624 <__flatcc_fb_gen_c_reader@@Base+0x428>
   183d0:	ldr	r1, [r4, #204]	; 0xcc
   183d4:	bl	14158 <fputs@plt>
   183d8:	ldr	r1, [pc, #584]	; 18628 <__flatcc_fb_gen_c_reader@@Base+0x42c>
   183dc:	ldr	r3, [r4, #208]	; 0xd0
   183e0:	ldr	r0, [r4, #204]	; 0xcc
   183e4:	ldr	r2, [r3, #164]	; 0xa4
   183e8:	bl	140bc <fprintf@plt>
   183ec:	mov	r0, #0
   183f0:	add	sp, sp, #248	; 0xf8
   183f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   183f8:	mov	r3, r4
   183fc:	mov	r2, r4
   18400:	ldr	r1, [pc, #548]	; 1862c <__flatcc_fb_gen_c_reader@@Base+0x430>
   18404:	bl	140bc <fprintf@plt>
   18408:	b	182e0 <__flatcc_fb_gen_c_reader@@Base+0xe4>
   1840c:	ldr	r3, [r4, #212]	; 0xd4
   18410:	mov	r2, r4
   18414:	ldr	r1, [pc, #532]	; 18630 <__flatcc_fb_gen_c_reader@@Base+0x434>
   18418:	ldr	r3, [r3, #104]	; 0x68
   1841c:	str	r3, [sp]
   18420:	mov	r3, r4
   18424:	bl	140bc <fprintf@plt>
   18428:	b	18314 <__flatcc_fb_gen_c_reader@@Base+0x118>
   1842c:	mov	r1, r5
   18430:	mov	r0, r4
   18434:	bl	15d14 <__flatcc_fb_codegen_c@@Base+0x1cc>
   18438:	ldr	r5, [r5, #120]	; 0x78
   1843c:	b	18328 <__flatcc_fb_gen_c_reader@@Base+0x12c>
   18440:	ldrh	r3, [r5, #8]
   18444:	cmp	r3, #0
   18448:	bne	18458 <__flatcc_fb_gen_c_reader@@Base+0x25c>
   1844c:	mov	r1, r5
   18450:	mov	r0, r4
   18454:	bl	15d14 <__flatcc_fb_codegen_c@@Base+0x1cc>
   18458:	ldr	r5, [r5]
   1845c:	b	18344 <__flatcc_fb_gen_c_reader@@Base+0x148>
   18460:	ldrh	r3, [r5, #8]
   18464:	cmp	r3, #1
   18468:	bhi	184f0 <__flatcc_fb_gen_c_reader@@Base+0x2f4>
   1846c:	mov	r2, #220	; 0xdc
   18470:	mov	r1, #0
   18474:	add	r0, sp, #28
   18478:	bl	140d4 <memset@plt>
   1847c:	add	r1, sp, #28
   18480:	mov	r0, r5
   18484:	bl	15d04 <__flatcc_fb_codegen_c@@Base+0x1bc>
   18488:	ldr	r6, [r5, #88]	; 0x58
   1848c:	add	r3, sp, #28
   18490:	mov	r1, r7
   18494:	mov	r2, r3
   18498:	ldr	r0, [r4, #204]	; 0xcc
   1849c:	str	r4, [sp]
   184a0:	bl	140bc <fprintf@plt>
   184a4:	mov	r3, r4
   184a8:	add	r2, sp, #28
   184ac:	ldr	r0, [r4, #204]	; 0xcc
   184b0:	mov	r1, r8
   184b4:	str	r6, [sp]
   184b8:	bl	140bc <fprintf@plt>
   184bc:	add	r2, sp, #8
   184c0:	mov	r0, #4
   184c4:	mov	r3, r2
   184c8:	mov	ip, #92	; 0x5c
   184cc:	mov	lr, #120	; 0x78
   184d0:	subs	r0, r0, #1
   184d4:	bcs	184f8 <__flatcc_fb_gen_c_reader@@Base+0x2fc>
   184d8:	mov	r2, #0
   184dc:	mov	r1, r9
   184e0:	ldr	r0, [r4, #204]	; 0xcc
   184e4:	strb	r2, [sp, #24]
   184e8:	add	r2, sp, #28
   184ec:	bl	140bc <fprintf@plt>
   184f0:	ldr	r5, [r5]
   184f4:	b	18360 <__flatcc_fb_gen_c_reader@@Base+0x164>
   184f8:	and	r1, r6, #15
   184fc:	add	r2, r2, #4
   18500:	strb	ip, [r2, #-4]
   18504:	cmp	r1, #9
   18508:	strb	lr, [r2, #-3]
   1850c:	movhi	sl, #87	; 0x57
   18510:	movls	sl, #48	; 0x30
   18514:	add	r1, r1, sl
   18518:	strb	r1, [r2, #-1]
   1851c:	ubfx	r1, r6, #4, #4
   18520:	lsr	r6, r6, #8
   18524:	cmp	r1, #9
   18528:	movhi	sl, #87	; 0x57
   1852c:	movls	sl, #48	; 0x30
   18530:	add	r1, r1, sl
   18534:	strb	r1, [r2, #-2]
   18538:	b	184d0 <__flatcc_fb_gen_c_reader@@Base+0x2d4>
   1853c:	ldrh	r3, [r5, #8]
   18540:	cmp	r3, #3
   18544:	bne	18554 <__flatcc_fb_gen_c_reader@@Base+0x358>
   18548:	mov	r1, r5
   1854c:	mov	r0, r4
   18550:	bl	16144 <__flatcc_fb_codegen_c@@Base+0x5fc>
   18554:	ldr	r5, [r5]
   18558:	b	1837c <__flatcc_fb_gen_c_reader@@Base+0x180>
   1855c:	mov	r1, r5
   18560:	mov	r0, r4
   18564:	bl	16e18 <__flatcc_fb_codegen_c@@Base+0x12d0>
   18568:	ldr	r5, [r5, #120]	; 0x78
   1856c:	b	18398 <__flatcc_fb_gen_c_reader@@Base+0x19c>
   18570:	ldrh	r3, [r5, #8]
   18574:	cmp	r3, #4
   18578:	ldrls	pc, [pc, r3, lsl #2]
   1857c:	b	185b8 <__flatcc_fb_gen_c_reader@@Base+0x3bc>
   18580:	andeq	r8, r1, r8, lsr #11
   18584:	andeq	r8, r1, r0, lsr #11
   18588:	andeq	r8, r1, r0, lsr #11
   1858c:	andeq	r8, r1, r0, lsr #11
   18590:	muleq	r1, r4, r5
   18594:	mov	r1, r5
   18598:	mov	r0, r4
   1859c:	bl	16144 <__flatcc_fb_codegen_c@@Base+0x5fc>
   185a0:	ldr	r5, [r5]
   185a4:	b	183a8 <__flatcc_fb_gen_c_reader@@Base+0x1ac>
   185a8:	mov	r1, r5
   185ac:	mov	r0, r4
   185b0:	bl	16480 <__flatcc_fb_codegen_c@@Base+0x938>
   185b4:	b	185a0 <__flatcc_fb_gen_c_reader@@Base+0x3a4>
   185b8:	ldr	r3, [pc, #116]	; 18634 <__flatcc_fb_gen_c_reader@@Base+0x438>
   185bc:	ldr	r0, [pc, #116]	; 18638 <__flatcc_fb_gen_c_reader@@Base+0x43c>
   185c0:	ldr	r2, [pc, #116]	; 1863c <__flatcc_fb_gen_c_reader@@Base+0x440>
   185c4:	str	r3, [sp]
   185c8:	movw	r3, #1672	; 0x688
   185cc:	ldr	r1, [pc, #108]	; 18640 <__flatcc_fb_gen_c_reader@@Base+0x444>
   185d0:	ldr	r0, [r0]
   185d4:	bl	140bc <fprintf@plt>
   185d8:	ldr	r3, [pc, #100]	; 18644 <__flatcc_fb_gen_c_reader@@Base+0x448>
   185dc:	movw	r2, #1672	; 0x688
   185e0:	ldr	r1, [pc, #84]	; 1863c <__flatcc_fb_gen_c_reader@@Base+0x440>
   185e4:	ldr	r0, [pc, #92]	; 18648 <__flatcc_fb_gen_c_reader@@Base+0x44c>
   185e8:	bl	1417c <__assert_fail@plt>
   185ec:	ldrdeq	r7, [r3], -r2
   185f0:	muleq	r3, sl, r0
   185f4:	strdeq	r7, [r3], -fp
   185f8:			; <UNDEFINED> instruction: 0x000381b7
   185fc:	strdeq	r8, [r3], -r7
   18600:	andeq	r7, r4, pc
   18604:	andeq	r8, r3, r1, lsl #4
   18608:	andeq	r8, r3, r9, lsr #4
   1860c:	andeq	r2, r3, r9, lsr #3
   18610:	andeq	r8, r3, r4, ror #4
   18614:	andeq	r8, r3, r9, asr #5
   18618:	andeq	r8, r3, lr, lsr #6
   1861c:	andeq	r8, r3, pc, ror #6
   18620:	muleq	r3, r8, r3
   18624:	muleq	r3, r3, pc	; <UNPREDICTABLE>
   18628:	andeq	r8, r3, r5, ror #7
   1862c:	muleq	r3, r5, r2
   18630:	strdeq	r8, [r3], -r9
   18634:			; <UNDEFINED> instruction: 0x000383b9
   18638:	strheq	fp, [r5], -r0
   1863c:			; <UNDEFINED> instruction: 0x00030cb0
   18640:	ldrdeq	r0, [r3], -r9
   18644:	muleq	r3, r7, ip
   18648:	andeq	r9, r3, fp, lsr r2

0001864c <__flatcc_gen_sort@@Base>:
   1864c:	push	{r4, lr}
   18650:	mov	r2, r0
   18654:	mov	r4, r0
   18658:	sub	sp, sp, #24
   1865c:	ldr	r1, [pc, #240]	; 18754 <__flatcc_gen_sort@@Base+0x108>
   18660:	ldr	r0, [r0, #204]	; 0xcc
   18664:	bl	140bc <fprintf@plt>
   18668:	mov	r3, r4
   1866c:	mov	r2, r4
   18670:	ldr	r1, [pc, #224]	; 18758 <__flatcc_gen_sort@@Base+0x10c>
   18674:	ldr	r0, [r4, #204]	; 0xcc
   18678:	bl	140bc <fprintf@plt>
   1867c:	mov	r3, r4
   18680:	mov	r2, r4
   18684:	ldr	r1, [pc, #208]	; 1875c <__flatcc_gen_sort@@Base+0x110>
   18688:	ldr	r0, [r4, #204]	; 0xcc
   1868c:	str	r4, [sp]
   18690:	bl	140bc <fprintf@plt>
   18694:	mov	r3, r4
   18698:	mov	r2, r4
   1869c:	ldr	r1, [pc, #188]	; 18760 <__flatcc_gen_sort@@Base+0x114>
   186a0:	ldr	r0, [r4, #204]	; 0xcc
   186a4:	str	r4, [sp]
   186a8:	str	r4, [sp, #4]
   186ac:	bl	140bc <fprintf@plt>
   186b0:	mov	r3, r4
   186b4:	mov	r2, r4
   186b8:	ldr	r1, [pc, #164]	; 18764 <__flatcc_gen_sort@@Base+0x118>
   186bc:	ldr	r0, [r4, #204]	; 0xcc
   186c0:	bl	140bc <fprintf@plt>
   186c4:	mov	r3, r4
   186c8:	mov	r2, r4
   186cc:	ldr	r1, [pc, #148]	; 18768 <__flatcc_gen_sort@@Base+0x11c>
   186d0:	ldr	r0, [r4, #204]	; 0xcc
   186d4:	str	r4, [sp]
   186d8:	str	r4, [sp, #4]
   186dc:	bl	140bc <fprintf@plt>
   186e0:	mov	r3, r4
   186e4:	mov	r2, r4
   186e8:	ldr	r1, [pc, #124]	; 1876c <__flatcc_gen_sort@@Base+0x120>
   186ec:	ldr	r0, [r4, #204]	; 0xcc
   186f0:	str	r4, [sp]
   186f4:	str	r4, [sp, #4]
   186f8:	str	r4, [sp, #8]
   186fc:	str	r4, [sp, #12]
   18700:	bl	140bc <fprintf@plt>
   18704:	mov	r3, r4
   18708:	mov	r2, r4
   1870c:	ldr	r1, [pc, #92]	; 18770 <__flatcc_gen_sort@@Base+0x124>
   18710:	ldr	r0, [r4, #204]	; 0xcc
   18714:	str	r4, [sp]
   18718:	str	r4, [sp, #4]
   1871c:	bl	140bc <fprintf@plt>
   18720:	ldr	r1, [pc, #76]	; 18774 <__flatcc_gen_sort@@Base+0x128>
   18724:	mov	r3, r4
   18728:	mov	r2, r4
   1872c:	str	r4, [sp]
   18730:	str	r4, [sp, #4]
   18734:	str	r4, [sp, #8]
   18738:	str	r4, [sp, #12]
   1873c:	str	r4, [sp, #16]
   18740:	ldr	r0, [r4, #204]	; 0xcc
   18744:	bl	140bc <fprintf@plt>
   18748:	mov	r0, #0
   1874c:	add	sp, sp, #24
   18750:	pop	{r4, pc}
   18754:	andeq	r8, r3, fp, asr #9
   18758:	muleq	r3, r9, r8
   1875c:	andeq	r8, r3, r9, lsr #19
   18760:	andeq	r8, r3, sp, ror sl
   18764:	andeq	r8, r3, r1, lsl fp
   18768:	andeq	r8, r3, r8, lsr #25
   1876c:	andeq	r8, r3, sp, lsr #26
   18770:			; <UNDEFINED> instruction: 0x00038dbb
   18774:	andeq	r8, r3, ip, lsl lr
   18778:	mov	r2, r1
   1877c:	mov	r1, r0
   18780:	ldr	r0, [r0, #12]
   18784:	b	159e4 <__flatcc_fb_scoped_symbol_name@@Base>
   18788:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1878c:	sub	sp, sp, #484	; 0x1e4
   18790:	mov	sl, r2
   18794:	mov	fp, r3
   18798:	add	r7, sp, #40	; 0x28
   1879c:	mov	r4, r0
   187a0:	mov	r9, r1
   187a4:	ldr	r3, [pc, #400]	; 1893c <__flatcc_gen_sort@@Base+0x2f0>
   187a8:	mov	r1, #0
   187ac:	mov	r0, r7
   187b0:	add	r8, sp, #260	; 0x104
   187b4:	ldr	r2, [sp, #524]	; 0x20c
   187b8:	ldr	r5, [sp, #520]	; 0x208
   187bc:	ldr	r6, [pc, #380]	; 18940 <__flatcc_gen_sort@@Base+0x2f4>
   187c0:	cmp	r2, #0
   187c4:	mov	r2, #220	; 0xdc
   187c8:	moveq	r6, r3
   187cc:	bl	140d4 <memset@plt>
   187d0:	mov	r2, #220	; 0xdc
   187d4:	mov	r1, #0
   187d8:	mov	r0, r8
   187dc:	bl	140d4 <memset@plt>
   187e0:	mov	r0, r5
   187e4:	mov	r1, r7
   187e8:	bl	18778 <__flatcc_gen_sort@@Base+0x12c>
   187ec:	ldr	r5, [r5, #20]
   187f0:	cmp	r5, #0
   187f4:	bne	18804 <__flatcc_gen_sort@@Base+0x1b8>
   187f8:	mov	r0, r5
   187fc:	add	sp, sp, #484	; 0x1e4
   18800:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18804:	ldrh	r1, [r5, #24]
   18808:	ldr	r2, [r5, #4]
   1880c:	cmp	r1, #10
   18810:	ldrd	r2, [r2]
   18814:	beq	188e8 <__flatcc_gen_sort@@Base+0x29c>
   18818:	cmp	r1, #14
   1881c:	beq	18830 <__flatcc_gen_sort@@Base+0x1e4>
   18820:	cmp	r1, #0
   18824:	bne	18910 <__flatcc_gen_sort@@Base+0x2c4>
   18828:	ldr	r5, [r5]
   1882c:	b	187f0 <__flatcc_gen_sort@@Base+0x1a4>
   18830:	mov	r1, r8
   18834:	ldr	r0, [r5, #16]
   18838:	str	r3, [sp, #32]
   1883c:	str	r2, [sp, #36]	; 0x24
   18840:	bl	18778 <__flatcc_gen_sort@@Base+0x12c>
   18844:	ldr	r1, [r5, #16]
   18848:	ldr	r3, [sp, #32]
   1884c:	ldr	r2, [sp, #36]	; 0x24
   18850:	ldrh	r1, [r1, #8]
   18854:	cmp	r1, #0
   18858:	beq	18898 <__flatcc_gen_sort@@Base+0x24c>
   1885c:	cmp	r1, #1
   18860:	beq	188c4 <__flatcc_gen_sort@@Base+0x278>
   18864:	ldr	r3, [pc, #216]	; 18944 <__flatcc_gen_sort@@Base+0x2f8>
   18868:	ldr	r0, [pc, #216]	; 18948 <__flatcc_gen_sort@@Base+0x2fc>
   1886c:	ldr	r2, [pc, #216]	; 1894c <__flatcc_gen_sort@@Base+0x300>
   18870:	str	r3, [sp]
   18874:	movw	r3, #1358	; 0x54e
   18878:	ldr	r1, [pc, #208]	; 18950 <__flatcc_gen_sort@@Base+0x304>
   1887c:	ldr	r0, [r0]
   18880:	bl	140bc <fprintf@plt>
   18884:	ldr	r3, [pc, #200]	; 18954 <__flatcc_gen_sort@@Base+0x308>
   18888:	movw	r2, #1358	; 0x54e
   1888c:	ldr	r1, [pc, #184]	; 1894c <__flatcc_gen_sort@@Base+0x300>
   18890:	ldr	r0, [pc, #192]	; 18958 <__flatcc_gen_sort@@Base+0x30c>
   18894:	bl	1417c <__assert_fail@plt>
   18898:	ldr	r1, [pc, #188]	; 1895c <__flatcc_gen_sort@@Base+0x310>
   1889c:	stm	sp, {r4, r9, sl, fp}
   188a0:	str	r3, [sp, #20]
   188a4:	mov	r3, r6
   188a8:	str	r2, [sp, #24]
   188ac:	mov	r2, r4
   188b0:	str	r7, [sp, #16]
   188b4:	str	r8, [sp, #28]
   188b8:	ldr	r0, [r4, #204]	; 0xcc
   188bc:	bl	140bc <fprintf@plt>
   188c0:	b	18828 <__flatcc_gen_sort@@Base+0x1dc>
   188c4:	ldr	r1, [pc, #148]	; 18960 <__flatcc_gen_sort@@Base+0x314>
   188c8:	stm	sp, {r4, r9, sl, fp}
   188cc:	str	r7, [sp, #16]
   188d0:	str	r3, [sp, #20]
   188d4:	mov	r3, r6
   188d8:	str	r2, [sp, #24]
   188dc:	mov	r2, r4
   188e0:	str	r8, [sp, #28]
   188e4:	b	188b8 <__flatcc_gen_sort@@Base+0x26c>
   188e8:	ldr	r1, [pc, #116]	; 18964 <__flatcc_gen_sort@@Base+0x318>
   188ec:	ldr	r0, [r4, #204]	; 0xcc
   188f0:	stm	sp, {r4, r9, sl, fp}
   188f4:	str	r7, [sp, #16]
   188f8:	str	r3, [sp, #20]
   188fc:	mov	r3, r6
   18900:	str	r2, [sp, #24]
   18904:	mov	r2, r4
   18908:	bl	140bc <fprintf@plt>
   1890c:	b	18828 <__flatcc_gen_sort@@Base+0x1dc>
   18910:	ldr	r3, [pc, #80]	; 18968 <__flatcc_gen_sort@@Base+0x31c>
   18914:	ldr	r0, [pc, #44]	; 18948 <__flatcc_gen_sort@@Base+0x2fc>
   18918:	ldr	r2, [pc, #44]	; 1894c <__flatcc_gen_sort@@Base+0x300>
   1891c:	str	r3, [sp]
   18920:	movw	r3, #1368	; 0x558
   18924:	ldr	r1, [pc, #36]	; 18950 <__flatcc_gen_sort@@Base+0x304>
   18928:	ldr	r0, [r0]
   1892c:	bl	140bc <fprintf@plt>
   18930:	ldr	r3, [pc, #28]	; 18954 <__flatcc_gen_sort@@Base+0x308>
   18934:	movw	r2, #1368	; 0x558
   18938:	b	1888c <__flatcc_gen_sort@@Base+0x240>
   1893c:	andeq	r9, r4, r7, lsl #7
   18940:	andeq	r8, r3, r7, ror #31
   18944:	strheq	r9, [r3], -ip
   18948:	strheq	fp, [r5], -r0
   1894c:	andeq	r9, r3, fp, rrx
   18950:	ldrdeq	r0, [r3], -r9
   18954:	muleq	r3, r4, lr
   18958:	andeq	r9, r3, fp, lsr r2
   1895c:	strdeq	r8, [r3], -r4
   18960:	andeq	r9, r3, pc, lsr #32
   18964:	strdeq	r9, [r3], -r2
   18968:	andeq	r9, r3, sl, lsr #2
   1896c:	push	{r4, r5, r6, lr}
   18970:	mov	r4, r0
   18974:	mov	r5, #0
   18978:	cmp	r4, #0
   1897c:	bne	18988 <__flatcc_gen_sort@@Base+0x33c>
   18980:	mov	r0, r5
   18984:	pop	{r4, r5, r6, pc}
   18988:	ldrh	r3, [r4, #72]	; 0x48
   1898c:	tst	r3, #4
   18990:	bne	189bc <__flatcc_gen_sort@@Base+0x370>
   18994:	ldrh	r3, [r4, #24]
   18998:	cmp	r3, #14
   1899c:	bne	189c4 <__flatcc_gen_sort@@Base+0x378>
   189a0:	ldr	r3, [r4, #16]
   189a4:	ldrh	r2, [r3, #8]
   189a8:	cmp	r2, #1
   189ac:	bne	189c4 <__flatcc_gen_sort@@Base+0x378>
   189b0:	ldr	r0, [r3, #20]
   189b4:	bl	1896c <__flatcc_gen_sort@@Base+0x320>
   189b8:	add	r5, r5, r0
   189bc:	ldr	r4, [r4]
   189c0:	b	18978 <__flatcc_gen_sort@@Base+0x32c>
   189c4:	add	r5, r5, #1
   189c8:	b	189bc <__flatcc_gen_sort@@Base+0x370>
   189cc:	ldr	ip, [pc, #96]	; 18a34 <__flatcc_gen_sort@@Base+0x3e8>
   189d0:	cmp	r3, #0
   189d4:	push	{lr}		; (str lr, [sp, #-4]!)
   189d8:	ldr	lr, [pc, #88]	; 18a38 <__flatcc_gen_sort@@Base+0x3ec>
   189dc:	movne	r3, ip
   189e0:	moveq	r3, lr
   189e4:	cmp	r2, #0
   189e8:	popeq	{pc}		; (ldreq pc, [sp], #4)
   189ec:	cmp	r1, #0
   189f0:	ldr	r0, [r0]
   189f4:	bne	18a10 <__flatcc_gen_sort@@Base+0x3c4>
   189f8:	cmp	r2, #4
   189fc:	bgt	18a24 <__flatcc_gen_sort@@Base+0x3d8>
   18a00:	mov	r1, r0
   18a04:	ldr	r0, [pc, #48]	; 18a3c <__flatcc_gen_sort@@Base+0x3f0>
   18a08:	pop	{lr}		; (ldr lr, [sp], #4)
   18a0c:	b	14158 <fputs@plt>
   18a10:	tst	r1, #3
   18a14:	bne	18a00 <__flatcc_gen_sort@@Base+0x3b4>
   18a18:	sub	r2, r2, r1
   18a1c:	cmp	r2, #2
   18a20:	b	189fc <__flatcc_gen_sort@@Base+0x3b0>
   18a24:	mov	r2, r3
   18a28:	ldr	r1, [pc, #16]	; 18a40 <__flatcc_gen_sort@@Base+0x3f4>
   18a2c:	pop	{lr}		; (ldr lr, [sp], #4)
   18a30:	b	140bc <fprintf@plt>
   18a34:	andeq	r3, r3, r0, lsl r9
   18a38:	strdeq	r2, [r3], -r6
   18a3c:	andeq	r6, r4, r9, lsl #27
   18a40:	andeq	r9, r3, r7, asr r1
   18a44:	push	{r0, r1, r2, lr}
   18a48:	ldr	r4, [pc, #48]	; 18a80 <__flatcc_gen_sort@@Base+0x434>
   18a4c:	ldr	r3, [pc, #48]	; 18a84 <__flatcc_gen_sort@@Base+0x438>
   18a50:	ldr	r0, [pc, #48]	; 18a88 <__flatcc_gen_sort@@Base+0x43c>
   18a54:	mov	r2, r4
   18a58:	ldr	r1, [pc, #44]	; 18a8c <__flatcc_gen_sort@@Base+0x440>
   18a5c:	str	r3, [sp]
   18a60:	mov	r3, #141	; 0x8d
   18a64:	ldr	r0, [r0]
   18a68:	bl	140bc <fprintf@plt>
   18a6c:	ldr	r3, [pc, #28]	; 18a90 <__flatcc_gen_sort@@Base+0x444>
   18a70:	mov	r2, #141	; 0x8d
   18a74:	mov	r1, r4
   18a78:	ldr	r0, [pc, #20]	; 18a94 <__flatcc_gen_sort@@Base+0x448>
   18a7c:	bl	1417c <__assert_fail@plt>
   18a80:	muleq	r3, r0, lr
   18a84:	andeq	r0, r3, r4, ror #29
   18a88:	strheq	fp, [r5], -r0
   18a8c:	ldrdeq	r0, [r3], -r9
   18a90:	andeq	r8, r3, r5, lsr #29
   18a94:	andeq	r9, r3, fp, lsr r2
   18a98:	push	{r0, r1, r2, lr}
   18a9c:	ldr	r4, [pc, #48]	; 18ad4 <__flatcc_gen_sort@@Base+0x488>
   18aa0:	ldr	r3, [pc, #48]	; 18ad8 <__flatcc_gen_sort@@Base+0x48c>
   18aa4:	ldr	r0, [pc, #48]	; 18adc <__flatcc_gen_sort@@Base+0x490>
   18aa8:	mov	r2, r4
   18aac:	ldr	r1, [pc, #44]	; 18ae0 <__flatcc_gen_sort@@Base+0x494>
   18ab0:	str	r3, [sp]
   18ab4:	mov	r3, #96	; 0x60
   18ab8:	ldr	r0, [r0]
   18abc:	bl	140bc <fprintf@plt>
   18ac0:	ldr	r3, [pc, #28]	; 18ae4 <__flatcc_gen_sort@@Base+0x498>
   18ac4:	mov	r2, #96	; 0x60
   18ac8:	mov	r1, r4
   18acc:	ldr	r0, [pc, #20]	; 18ae8 <__flatcc_gen_sort@@Base+0x49c>
   18ad0:	bl	1417c <__assert_fail@plt>
   18ad4:	muleq	r3, r0, lr
   18ad8:	andeq	r0, r3, r4, ror #29
   18adc:	strheq	fp, [r5], -r0
   18ae0:	ldrdeq	r0, [r3], -r9
   18ae4:			; <UNDEFINED> instruction: 0x00038eb6
   18ae8:	andeq	r9, r3, fp, lsr r2
   18aec:	push	{r0, r1, r2, lr}
   18af0:	ldr	r4, [pc, #48]	; 18b28 <__flatcc_gen_sort@@Base+0x4dc>
   18af4:	ldr	r3, [pc, #48]	; 18b2c <__flatcc_gen_sort@@Base+0x4e0>
   18af8:	ldr	r0, [pc, #48]	; 18b30 <__flatcc_gen_sort@@Base+0x4e4>
   18afc:	mov	r2, r4
   18b00:	ldr	r1, [pc, #44]	; 18b34 <__flatcc_gen_sort@@Base+0x4e8>
   18b04:	str	r3, [sp]
   18b08:	mov	r3, #226	; 0xe2
   18b0c:	ldr	r0, [r0]
   18b10:	bl	140bc <fprintf@plt>
   18b14:	ldr	r3, [pc, #28]	; 18b38 <__flatcc_gen_sort@@Base+0x4ec>
   18b18:	mov	r2, #226	; 0xe2
   18b1c:	mov	r1, r4
   18b20:	ldr	r0, [pc, #20]	; 18b3c <__flatcc_gen_sort@@Base+0x4f0>
   18b24:	bl	1417c <__assert_fail@plt>
   18b28:	muleq	r3, r0, lr
   18b2c:	andeq	r0, r3, r4, ror #29
   18b30:	strheq	fp, [r5], -r0
   18b34:	ldrdeq	r0, [r3], -r9
   18b38:	andeq	r8, r3, r9, asr #29
   18b3c:	andeq	r9, r3, fp, lsr r2
   18b40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18b44:	sub	sp, sp, #236	; 0xec
   18b48:	mov	r5, r1
   18b4c:	mov	r6, r0
   18b50:	mov	r4, r2
   18b54:	mov	r1, #0
   18b58:	mov	r2, #220	; 0xdc
   18b5c:	add	r0, sp, #12
   18b60:	mov	r7, r3
   18b64:	ldr	r8, [pc, #316]	; 18ca8 <__flatcc_gen_sort@@Base+0x65c>
   18b68:	bl	140d4 <memset@plt>
   18b6c:	ldr	r9, [pc, #312]	; 18cac <__flatcc_gen_sort@@Base+0x660>
   18b70:	ldr	sl, [pc, #312]	; 18cb0 <__flatcc_gen_sort@@Base+0x664>
   18b74:	ldr	r5, [r5]
   18b78:	cmp	r5, #0
   18b7c:	bne	18b8c <__flatcc_gen_sort@@Base+0x540>
   18b80:	mov	r0, r4
   18b84:	add	sp, sp, #236	; 0xec
   18b88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18b8c:	ldrh	r3, [r5, #72]	; 0x48
   18b90:	tst	r3, #4
   18b94:	bne	18bdc <__flatcc_gen_sort@@Base+0x590>
   18b98:	ldrh	r3, [r5, #24]
   18b9c:	cmp	r3, #8
   18ba0:	beq	18c20 <__flatcc_gen_sort@@Base+0x5d4>
   18ba4:	cmp	r3, #14
   18ba8:	bne	18c74 <__flatcc_gen_sort@@Base+0x628>
   18bac:	ldr	r1, [r5, #16]
   18bb0:	ldrh	r3, [r1, #8]
   18bb4:	cmp	r3, #1
   18bb8:	ldr	r3, [sp, #272]	; 0x110
   18bbc:	bne	18be4 <__flatcc_gen_sort@@Base+0x598>
   18bc0:	mov	r2, r4
   18bc4:	add	r1, r1, #20
   18bc8:	str	r3, [sp]
   18bcc:	mov	r0, r6
   18bd0:	mov	r3, r7
   18bd4:	bl	18b40 <__flatcc_gen_sort@@Base+0x4f4>
   18bd8:	mov	r4, r0
   18bdc:	ldr	r5, [r5]
   18be0:	b	18b78 <__flatcc_gen_sort@@Base+0x52c>
   18be4:	mov	r2, r7
   18be8:	mov	r1, r4
   18bec:	add	r0, r6, #204	; 0xcc
   18bf0:	add	fp, r4, #1
   18bf4:	bl	189cc <__flatcc_gen_sort@@Base+0x380>
   18bf8:	add	r1, sp, #12
   18bfc:	ldr	r0, [r5, #16]
   18c00:	bl	18778 <__flatcc_gen_sort@@Base+0x12c>
   18c04:	mov	r3, r4
   18c08:	add	r2, sp, #12
   18c0c:	ldr	r1, [pc, #160]	; 18cb4 <__flatcc_gen_sort@@Base+0x668>
   18c10:	ldr	r0, [r6, #204]	; 0xcc
   18c14:	bl	140bc <fprintf@plt>
   18c18:	mov	r4, fp
   18c1c:	b	18bdc <__flatcc_gen_sort@@Base+0x590>
   18c20:	mov	r2, r7
   18c24:	mov	r1, r4
   18c28:	ldr	r3, [sp, #272]	; 0x110
   18c2c:	add	r0, r6, #204	; 0xcc
   18c30:	bl	189cc <__flatcc_gen_sort@@Base+0x380>
   18c34:	ldr	r3, [r5, #16]
   18c38:	cmp	r3, #5
   18c3c:	sub	r3, r3, #1
   18c40:	moveq	r2, r6
   18c44:	movne	r2, r8
   18c48:	cmp	r3, #10
   18c4c:	bhi	18c70 <__flatcc_gen_sort@@Base+0x624>
   18c50:	add	r3, r9, r3, lsl #2
   18c54:	mov	r1, sl
   18c58:	ldr	r0, [r6, #204]	; 0xcc
   18c5c:	str	r4, [sp]
   18c60:	add	fp, r4, #1
   18c64:	ldr	r3, [r3, #68]	; 0x44
   18c68:	bl	140bc <fprintf@plt>
   18c6c:	b	18c18 <__flatcc_gen_sort@@Base+0x5cc>
   18c70:	bl	18a44 <__flatcc_gen_sort@@Base+0x3f8>
   18c74:	ldr	r3, [pc, #60]	; 18cb8 <__flatcc_gen_sort@@Base+0x66c>
   18c78:	ldr	r0, [pc, #60]	; 18cbc <__flatcc_gen_sort@@Base+0x670>
   18c7c:	ldr	r2, [pc, #60]	; 18cc0 <__flatcc_gen_sort@@Base+0x674>
   18c80:	str	r3, [sp]
   18c84:	movw	r3, #850	; 0x352
   18c88:	ldr	r1, [pc, #52]	; 18cc4 <__flatcc_gen_sort@@Base+0x678>
   18c8c:	ldr	r0, [r0]
   18c90:	bl	140bc <fprintf@plt>
   18c94:	ldr	r3, [pc, #44]	; 18cc8 <__flatcc_gen_sort@@Base+0x67c>
   18c98:	movw	r2, #850	; 0x352
   18c9c:	ldr	r1, [pc, #28]	; 18cc0 <__flatcc_gen_sort@@Base+0x674>
   18ca0:	ldr	r0, [pc, #36]	; 18ccc <__flatcc_gen_sort@@Base+0x680>
   18ca4:	bl	1417c <__assert_fail@plt>
   18ca8:	strdeq	r2, [r3], -r7
   18cac:	muleq	r3, r4, lr
   18cb0:	andeq	r9, r3, fp, ror #2
   18cb4:	andeq	r9, r3, sp, asr r1
   18cb8:	andeq	r9, r3, r4, ror r1
   18cbc:	strheq	fp, [r5], -r0
   18cc0:	andeq	r9, r3, fp, rrx
   18cc4:	ldrdeq	r0, [r3], -r9
   18cc8:	andeq	r8, r3, r4, lsl #30
   18ccc:	andeq	r9, r3, fp, lsr r2
   18cd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18cd4:	sub	sp, sp, #260	; 0x104
   18cd8:	mov	r8, r3
   18cdc:	mov	r9, r0
   18ce0:	mov	r4, r1
   18ce4:	add	r0, sp, #36	; 0x24
   18ce8:	mov	r1, #0
   18cec:	str	r2, [sp, #24]
   18cf0:	mov	r2, #220	; 0xdc
   18cf4:	bl	140d4 <memset@plt>
   18cf8:	cmp	r8, #1
   18cfc:	ldreq	r3, [pc, #916]	; 19098 <__flatcc_gen_sort@@Base+0xa4c>
   18d00:	streq	r3, [sp, #20]
   18d04:	beq	18d1c <__flatcc_gen_sort@@Base+0x6d0>
   18d08:	ldr	r3, [pc, #908]	; 1909c <__flatcc_gen_sort@@Base+0xa50>
   18d0c:	cmp	r8, #2
   18d10:	ldr	r2, [pc, #904]	; 190a0 <__flatcc_gen_sort@@Base+0xa54>
   18d14:	movne	r2, r3
   18d18:	str	r2, [sp, #20]
   18d1c:	mov	r6, #0
   18d20:	ldr	r5, [r4]
   18d24:	mov	r4, r6
   18d28:	cmp	r5, #0
   18d2c:	bne	18d54 <__flatcc_gen_sort@@Base+0x708>
   18d30:	ldr	r3, [sp, #24]
   18d34:	cmp	r3, #0
   18d38:	ble	18d48 <__flatcc_gen_sort@@Base+0x6fc>
   18d3c:	ldr	r0, [pc, #864]	; 190a4 <__flatcc_gen_sort@@Base+0xa58>
   18d40:	ldr	r1, [r9, #204]	; 0xcc
   18d44:	bl	14158 <fputs@plt>
   18d48:	mov	r0, r4
   18d4c:	add	sp, sp, #260	; 0x104
   18d50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d54:	ldr	r3, [r5, #4]
   18d58:	cmp	r4, #0
   18d5c:	ldr	sl, [r3]
   18d60:	ldr	r7, [r3, #4]
   18d64:	ble	18d7c <__flatcc_gen_sort@@Base+0x730>
   18d68:	tst	r4, #3
   18d6c:	ldreq	r0, [pc, #816]	; 190a4 <__flatcc_gen_sort@@Base+0xa58>
   18d70:	ldrne	r0, [pc, #816]	; 190a8 <__flatcc_gen_sort@@Base+0xa5c>
   18d74:	ldr	r1, [r9, #204]	; 0xcc
   18d78:	bl	14158 <fputs@plt>
   18d7c:	ldrh	r3, [r5, #24]
   18d80:	cmp	r3, #8
   18d84:	beq	18f84 <__flatcc_gen_sort@@Base+0x938>
   18d88:	cmp	r3, #14
   18d8c:	bne	19064 <__flatcc_gen_sort@@Base+0xa18>
   18d90:	add	r1, sp, #36	; 0x24
   18d94:	ldr	r0, [r5, #16]
   18d98:	bl	18778 <__flatcc_gen_sort@@Base+0x12c>
   18d9c:	ldr	r3, [r5, #16]
   18da0:	ldr	r0, [r9, #204]	; 0xcc
   18da4:	ldrh	r3, [r3, #8]
   18da8:	cmp	r3, #1
   18dac:	ldrh	r3, [r5, #72]	; 0x48
   18db0:	bne	18ea0 <__flatcc_gen_sort@@Base+0x854>
   18db4:	tst	r3, #4
   18db8:	beq	18dec <__flatcc_gen_sort@@Base+0x7a0>
   18dbc:	mov	r3, r6
   18dc0:	mov	r2, r6
   18dc4:	ldr	r1, [pc, #736]	; 190ac <__flatcc_gen_sort@@Base+0xa60>
   18dc8:	bl	140bc <fprintf@plt>
   18dcc:	ldr	r3, [r5, #16]
   18dd0:	add	r6, r6, #1
   18dd4:	ldr	r0, [r3, #20]
   18dd8:	bl	1896c <__flatcc_gen_sort@@Base+0x320>
   18ddc:	add	fp, r4, r0
   18de0:	mov	r4, fp
   18de4:	ldr	r5, [r5]
   18de8:	b	18d28 <__flatcc_gen_sort@@Base+0x6dc>
   18dec:	ldr	r3, [sp, #296]	; 0x128
   18df0:	cmp	r3, #0
   18df4:	beq	18e1c <__flatcc_gen_sort@@Base+0x7d0>
   18df8:	add	r2, sp, #36	; 0x24
   18dfc:	ldr	r1, [pc, #684]	; 190b0 <__flatcc_gen_sort@@Base+0xa64>
   18e00:	add	fp, r4, #1
   18e04:	stm	sp, {r7, sl}
   18e08:	str	r7, [sp, #8]
   18e0c:	str	sl, [sp, #12]
   18e10:	ldr	r3, [sp, #20]
   18e14:	bl	140bc <fprintf@plt>
   18e18:	b	18de0 <__flatcc_gen_sort@@Base+0x794>
   18e1c:	add	r2, sp, #36	; 0x24
   18e20:	ldr	r1, [pc, #652]	; 190b4 <__flatcc_gen_sort@@Base+0xa68>
   18e24:	stm	sp, {r7, sl}
   18e28:	add	sl, r9, #204	; 0xcc
   18e2c:	ldr	r3, [sp, #20]
   18e30:	bl	140bc <fprintf@plt>
   18e34:	ldr	r3, [r5, #16]
   18e38:	ldr	r0, [r3, #20]
   18e3c:	bl	1896c <__flatcc_gen_sort@@Base+0x320>
   18e40:	ldr	r7, [sp, #296]	; 0x128
   18e44:	mov	fp, r0
   18e48:	add	r3, r7, r4
   18e4c:	cmp	fp, r7
   18e50:	str	r3, [sp, #28]
   18e54:	bgt	18e74 <__flatcc_gen_sort@@Base+0x828>
   18e58:	mov	r0, #41	; 0x29
   18e5c:	ldr	r1, [r9, #204]	; 0xcc
   18e60:	cmp	fp, #0
   18e64:	addge	fp, r4, fp
   18e68:	addlt	fp, r4, #0
   18e6c:	bl	1411c <fputc@plt>
   18e70:	b	18de0 <__flatcc_gen_sort@@Base+0x794>
   18e74:	mov	r1, r7
   18e78:	mov	r0, sl
   18e7c:	ldr	r2, [sp, #24]
   18e80:	mov	r3, #0
   18e84:	add	r7, r7, #1
   18e88:	bl	189cc <__flatcc_gen_sort@@Base+0x380>
   18e8c:	ldr	r1, [pc, #548]	; 190b8 <__flatcc_gen_sort@@Base+0xa6c>
   18e90:	ldr	r2, [sp, #28]
   18e94:	ldr	r0, [r9, #204]	; 0xcc
   18e98:	bl	140bc <fprintf@plt>
   18e9c:	b	18e48 <__flatcc_gen_sort@@Base+0x7fc>
   18ea0:	tst	r3, #4
   18ea4:	add	fp, r4, #1
   18ea8:	beq	18ec4 <__flatcc_gen_sort@@Base+0x878>
   18eac:	mov	r2, r6
   18eb0:	add	r4, r6, #1
   18eb4:	ldr	r1, [pc, #512]	; 190bc <__flatcc_gen_sort@@Base+0xa70>
   18eb8:	bl	140bc <fprintf@plt>
   18ebc:	mov	r6, r4
   18ec0:	b	18de0 <__flatcc_gen_sort@@Base+0x794>
   18ec4:	ldrd	r2, [r5, #88]	; 0x58
   18ec8:	cmp	r3, #0
   18ecc:	cmpeq	r2, #1
   18ed0:	beq	18ee4 <__flatcc_gen_sort@@Base+0x898>
   18ed4:	cmp	r8, #1
   18ed8:	beq	18f04 <__flatcc_gen_sort@@Base+0x8b8>
   18edc:	cmp	r8, #2
   18ee0:	beq	18f48 <__flatcc_gen_sort@@Base+0x8fc>
   18ee4:	ldr	r3, [sp, #296]	; 0x128
   18ee8:	cmp	r3, #0
   18eec:	beq	1904c <__flatcc_gen_sort@@Base+0xa00>
   18ef0:	mov	r3, sl
   18ef4:	mov	r2, r7
   18ef8:	ldr	r1, [pc, #448]	; 190c0 <__flatcc_gen_sort@@Base+0xa74>
   18efc:	stm	sp, {r7, sl}
   18f00:	b	18f40 <__flatcc_gen_sort@@Base+0x8f4>
   18f04:	ldr	r3, [sp, #296]	; 0x128
   18f08:	cmp	r3, #0
   18f0c:	beq	18f2c <__flatcc_gen_sort@@Base+0x8e0>
   18f10:	ldr	r1, [pc, #428]	; 190c4 <__flatcc_gen_sort@@Base+0xa78>
   18f14:	mov	r3, r7
   18f18:	add	r2, sp, #36	; 0x24
   18f1c:	str	sl, [sp]
   18f20:	stmib	sp, {r7, sl}
   18f24:	bl	140bc <fprintf@plt>
   18f28:	b	18de0 <__flatcc_gen_sort@@Base+0x794>
   18f2c:	ldr	r1, [pc, #404]	; 190c8 <__flatcc_gen_sort@@Base+0xa7c>
   18f30:	mov	r3, r7
   18f34:	add	r2, sp, #36	; 0x24
   18f38:	str	sl, [sp]
   18f3c:	str	r4, [sp, #4]
   18f40:	bl	140bc <fprintf@plt>
   18f44:	b	18de0 <__flatcc_gen_sort@@Base+0x794>
   18f48:	ldr	r3, [sp, #296]	; 0x128
   18f4c:	cmp	r3, #0
   18f50:	beq	18f6c <__flatcc_gen_sort@@Base+0x920>
   18f54:	mov	r3, r7
   18f58:	add	r2, sp, #36	; 0x24
   18f5c:	ldr	r1, [pc, #360]	; 190cc <__flatcc_gen_sort@@Base+0xa80>
   18f60:	str	sl, [sp]
   18f64:	stmib	sp, {r7, sl}
   18f68:	b	18f24 <__flatcc_gen_sort@@Base+0x8d8>
   18f6c:	mov	r3, r7
   18f70:	add	r2, sp, #36	; 0x24
   18f74:	ldr	r1, [pc, #340]	; 190d0 <__flatcc_gen_sort@@Base+0xa84>
   18f78:	str	sl, [sp]
   18f7c:	str	r4, [sp, #4]
   18f80:	b	18f40 <__flatcc_gen_sort@@Base+0x8f4>
   18f84:	ldr	r3, [r5, #16]
   18f88:	sub	r1, r3, #1
   18f8c:	cmp	r1, #10
   18f90:	bhi	18ff8 <__flatcc_gen_sort@@Base+0x9ac>
   18f94:	ldrh	r2, [r5, #72]	; 0x48
   18f98:	add	fp, r4, #1
   18f9c:	ldr	r0, [r9, #204]	; 0xcc
   18fa0:	tst	r2, #4
   18fa4:	bne	18eac <__flatcc_gen_sort@@Base+0x860>
   18fa8:	ldrd	r2, [r5, #88]	; 0x58
   18fac:	cmp	r3, #0
   18fb0:	cmpeq	r2, #1
   18fb4:	beq	18ee4 <__flatcc_gen_sort@@Base+0x898>
   18fb8:	ldr	r2, [pc, #276]	; 190d4 <__flatcc_gen_sort@@Base+0xa88>
   18fbc:	cmp	r8, #1
   18fc0:	add	r3, r2, r1, lsl #2
   18fc4:	ldr	r3, [r3, #136]	; 0x88
   18fc8:	beq	18ffc <__flatcc_gen_sort@@Base+0x9b0>
   18fcc:	cmp	r8, #2
   18fd0:	bne	18ee4 <__flatcc_gen_sort@@Base+0x898>
   18fd4:	ldr	r2, [sp, #296]	; 0x128
   18fd8:	cmp	r2, #0
   18fdc:	beq	19038 <__flatcc_gen_sort@@Base+0x9ec>
   18fe0:	mov	r2, r9
   18fe4:	ldr	r1, [pc, #236]	; 190d8 <__flatcc_gen_sort@@Base+0xa8c>
   18fe8:	stm	sp, {r7, sl}
   18fec:	str	r7, [sp, #8]
   18ff0:	str	sl, [sp, #12]
   18ff4:	b	1901c <__flatcc_gen_sort@@Base+0x9d0>
   18ff8:	bl	18a98 <__flatcc_gen_sort@@Base+0x44c>
   18ffc:	ldr	r2, [sp, #296]	; 0x128
   19000:	cmp	r2, #0
   19004:	beq	19024 <__flatcc_gen_sort@@Base+0x9d8>
   19008:	ldr	r1, [pc, #204]	; 190dc <__flatcc_gen_sort@@Base+0xa90>
   1900c:	mov	r2, r9
   19010:	stm	sp, {r7, sl}
   19014:	str	r7, [sp, #8]
   19018:	str	sl, [sp, #12]
   1901c:	bl	140bc <fprintf@plt>
   19020:	b	18de0 <__flatcc_gen_sort@@Base+0x794>
   19024:	mov	r2, r9
   19028:	ldr	r1, [pc, #176]	; 190e0 <__flatcc_gen_sort@@Base+0xa94>
   1902c:	stm	sp, {r7, sl}
   19030:	str	r4, [sp, #8]
   19034:	b	18f24 <__flatcc_gen_sort@@Base+0x8d8>
   19038:	mov	r2, r9
   1903c:	ldr	r1, [pc, #160]	; 190e4 <__flatcc_gen_sort@@Base+0xa98>
   19040:	stm	sp, {r7, sl}
   19044:	str	r4, [sp, #8]
   19048:	b	18f24 <__flatcc_gen_sort@@Base+0x8d8>
   1904c:	mov	r3, sl
   19050:	mov	r2, r7
   19054:	ldr	r1, [pc, #140]	; 190e8 <__flatcc_gen_sort@@Base+0xa9c>
   19058:	str	r4, [sp]
   1905c:	bl	140bc <fprintf@plt>
   19060:	b	18de0 <__flatcc_gen_sort@@Base+0x794>
   19064:	ldr	r3, [pc, #128]	; 190ec <__flatcc_gen_sort@@Base+0xaa0>
   19068:	ldr	r0, [pc, #128]	; 190f0 <__flatcc_gen_sort@@Base+0xaa4>
   1906c:	ldr	r2, [pc, #128]	; 190f4 <__flatcc_gen_sort@@Base+0xaa8>
   19070:	str	r3, [sp]
   19074:	movw	r3, #993	; 0x3e1
   19078:	ldr	r1, [pc, #120]	; 190f8 <__flatcc_gen_sort@@Base+0xaac>
   1907c:	ldr	r0, [r0]
   19080:	bl	140bc <fprintf@plt>
   19084:	ldr	r3, [pc, #112]	; 190fc <__flatcc_gen_sort@@Base+0xab0>
   19088:	movw	r2, #993	; 0x3e1
   1908c:	ldr	r1, [pc, #96]	; 190f4 <__flatcc_gen_sort@@Base+0xaa8>
   19090:	ldr	r0, [pc, #104]	; 19100 <__flatcc_gen_sort@@Base+0xab4>
   19094:	bl	1417c <__assert_fail@plt>
   19098:	andeq	r9, r3, r9, lsr #3
   1909c:	strdeq	r2, [r3], -r7
   190a0:	andeq	r9, r3, r2, lsr #3
   190a4:			; <UNDEFINED> instruction: 0x000391b2
   190a8:			; <UNDEFINED> instruction: 0x000391b7
   190ac:			; <UNDEFINED> instruction: 0x000391ba
   190b0:	strdeq	r9, [r3], -r3
   190b4:	andeq	r9, r3, r2, lsl r2
   190b8:	andeq	r9, r3, sl, asr r2
   190bc:	andeq	r9, r3, r7, lsr #4
   190c0:	andeq	r9, r3, sp, lsr r2
   190c4:	andeq	r9, r3, r0, ror #4
   190c8:	andeq	r9, r3, r7, lsl #5
   190cc:	andeq	r9, r3, sl, lsr #5
   190d0:	andeq	r9, r3, pc, asr #5
   190d4:	muleq	r3, r4, lr
   190d8:	andeq	r9, r3, r8, lsr #5
   190dc:	andeq	r9, r3, lr, asr r2
   190e0:	andeq	r9, r3, r5, lsl #5
   190e4:	andeq	r9, r3, sp, asr #5
   190e8:	andeq	r9, r3, r0, asr r2
   190ec:	andeq	r9, r3, lr, ror #5
   190f0:	strheq	fp, [r5], -r0
   190f4:	andeq	r9, r3, fp, rrx
   190f8:	ldrdeq	r0, [r3], -r9
   190fc:	andeq	r8, r3, r8, asr #30
   19100:	andeq	r9, r3, fp, lsr r2
   19104:	push	{r0, r1, r2, r4, r5, lr}
   19108:	mov	r3, r0
   1910c:	mov	r0, r2
   19110:	ldrh	r2, [r1, #8]
   19114:	sub	r2, r2, #3
   19118:	cmp	r2, #3
   1911c:	ldrls	pc, [pc, r2, lsl #2]
   19120:	b	191e8 <__flatcc_gen_sort@@Base+0xb9c>
   19124:			; <UNDEFINED> instruction: 0x000191bc
   19128:	andeq	r9, r1, r8, ror #2
   1912c:	andeq	r9, r1, r4, lsr r1
   19130:	muleq	r1, r0, r1
   19134:	sub	r3, r3, #1
   19138:	cmp	r3, #8
   1913c:	bhi	19164 <__flatcc_gen_sort@@Base+0xb18>
   19140:	ldr	r2, [pc, #212]	; 1921c <__flatcc_gen_sort@@Base+0xbd0>
   19144:	ldrd	r4, [r1]
   19148:	ldr	r1, [pc, #208]	; 19220 <__flatcc_gen_sort@@Base+0xbd4>
   1914c:	add	r3, r2, r3, lsl #2
   19150:	ldr	r2, [r3, #212]	; 0xd4
   19154:	strd	r4, [sp]
   19158:	bl	14128 <sprintf@plt>
   1915c:	add	sp, sp, #12
   19160:	pop	{r4, r5, pc}
   19164:	bl	18aec <__flatcc_gen_sort@@Base+0x4a0>
   19168:	sub	r3, r3, #1
   1916c:	cmp	r3, #8
   19170:	bhi	19164 <__flatcc_gen_sort@@Base+0xb18>
   19174:	ldr	r2, [pc, #160]	; 1921c <__flatcc_gen_sort@@Base+0xbd0>
   19178:	ldrd	r4, [r1]
   1917c:	ldr	r1, [pc, #160]	; 19224 <__flatcc_gen_sort@@Base+0xbd8>
   19180:	add	r3, r2, r3, lsl #2
   19184:	strd	r4, [sp]
   19188:	ldr	r2, [r3, #212]	; 0xd4
   1918c:	b	19158 <__flatcc_gen_sort@@Base+0xb0c>
   19190:	sub	r3, r3, #1
   19194:	cmp	r3, #8
   19198:	bhi	19164 <__flatcc_gen_sort@@Base+0xb18>
   1919c:	ldr	r2, [pc, #120]	; 1921c <__flatcc_gen_sort@@Base+0xbd0>
   191a0:	add	r2, r2, r3, lsl #2
   191a4:	ldrb	r3, [r1]
   191a8:	ldr	r1, [pc, #120]	; 19228 <__flatcc_gen_sort@@Base+0xbdc>
   191ac:	ldr	r2, [r2, #212]	; 0xd4
   191b0:	add	sp, sp, #12
   191b4:	pop	{r4, r5, lr}
   191b8:	b	14128 <sprintf@plt>
   191bc:	cmp	r3, #11
   191c0:	ldrdne	r2, [r1]
   191c4:	vldreq	d7, [r1]
   191c8:	ldrne	r1, [pc, #92]	; 1922c <__flatcc_gen_sort@@Base+0xbe0>
   191cc:	ldreq	r1, [pc, #92]	; 19230 <__flatcc_gen_sort@@Base+0xbe4>
   191d0:	vcvteq.f32.f64	s14, d7
   191d4:	vcvteq.f64.f32	d7, s14
   191d8:	vmoveq	r2, r3, d7
   191dc:	add	sp, sp, #12
   191e0:	pop	{r4, r5, lr}
   191e4:	b	14128 <sprintf@plt>
   191e8:	ldr	r3, [pc, #68]	; 19234 <__flatcc_gen_sort@@Base+0xbe8>
   191ec:	ldr	r0, [pc, #68]	; 19238 <__flatcc_gen_sort@@Base+0xbec>
   191f0:	ldr	r2, [pc, #68]	; 1923c <__flatcc_gen_sort@@Base+0xbf0>
   191f4:	str	r3, [sp]
   191f8:	mov	r3, #260	; 0x104
   191fc:	ldr	r1, [pc, #60]	; 19240 <__flatcc_gen_sort@@Base+0xbf4>
   19200:	ldr	r0, [r0]
   19204:	bl	140bc <fprintf@plt>
   19208:	ldr	r3, [pc, #52]	; 19244 <__flatcc_gen_sort@@Base+0xbf8>
   1920c:	mov	r2, #260	; 0x104
   19210:	ldr	r1, [pc, #36]	; 1923c <__flatcc_gen_sort@@Base+0xbf0>
   19214:	ldr	r0, [pc, #44]	; 19248 <__flatcc_gen_sort@@Base+0xbfc>
   19218:	bl	1417c <__assert_fail@plt>
   1921c:	muleq	r3, r4, lr
   19220:	andeq	r0, r3, fp, lsl pc
   19224:	andeq	r0, r3, r4, lsr #30
   19228:	andeq	r0, r3, sp, lsr #30
   1922c:	andeq	r0, r3, r8, lsr pc
   19230:	andeq	r0, r3, r4, lsr pc
   19234:	andeq	r0, r3, r4, ror #29
   19238:	strheq	fp, [r5], -r0
   1923c:	muleq	r3, r0, lr
   19240:	ldrdeq	r0, [r3], -r9
   19244:	andeq	r8, r3, ip, lsl #31
   19248:	andeq	r9, r3, fp, lsr r2
   1924c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19250:	sub	sp, sp, #612	; 0x264
   19254:	mov	r5, r1
   19258:	add	r7, sp, #168	; 0xa8
   1925c:	mov	r2, #220	; 0xdc
   19260:	mov	r1, #0
   19264:	mov	r4, r0
   19268:	add	r6, sp, #388	; 0x184
   1926c:	mov	r0, r7
   19270:	bl	140d4 <memset@plt>
   19274:	mov	r2, #220	; 0xdc
   19278:	mov	r1, #0
   1927c:	mov	r0, r6
   19280:	bl	140d4 <memset@plt>
   19284:	mov	r0, r5
   19288:	mov	r1, r7
   1928c:	bl	18778 <__flatcc_gen_sort@@Base+0x12c>
   19290:	ldr	r5, [r5, #20]
   19294:	cmp	r5, #0
   19298:	bne	192b4 <__flatcc_gen_sort@@Base+0xc68>
   1929c:	ldr	r1, [r4, #204]	; 0xcc
   192a0:	mov	r0, #10
   192a4:	bl	1411c <fputc@plt>
   192a8:	mov	r0, r5
   192ac:	add	sp, sp, #612	; 0x264
   192b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   192b4:	ldr	r3, [r5, #4]
   192b8:	ldr	r9, [r3]
   192bc:	ldr	r8, [r3, #4]
   192c0:	ldrh	r3, [r5, #72]	; 0x48
   192c4:	tst	r3, #4
   192c8:	beq	192ec <__flatcc_gen_sort@@Base+0xca0>
   192cc:	mov	r3, r8
   192d0:	mov	r2, r7
   192d4:	ldr	r1, [pc, #1316]	; 19800 <__flatcc_gen_sort@@Base+0x11b4>
   192d8:	ldr	r0, [r4, #204]	; 0xcc
   192dc:	str	r9, [sp]
   192e0:	bl	140bc <fprintf@plt>
   192e4:	ldr	r5, [r5]
   192e8:	b	19294 <__flatcc_gen_sort@@Base+0xc48>
   192ec:	ldrh	r3, [r5, #24]
   192f0:	sub	r3, r3, #7
   192f4:	cmp	r3, #8
   192f8:	ldrls	pc, [pc, r3, lsl #2]
   192fc:	b	197d4 <__flatcc_gen_sort@@Base+0x1188>
   19300:	andeq	r9, r1, r0, asr #7
   19304:	andeq	r9, r1, r4, lsr #6
   19308:	andeq	r9, r1, r8, lsl #10
   1930c:	andeq	r9, r1, r0, ror #9
   19310:	ldrdeq	r9, [r1], -r4
   19314:	ldrdeq	r9, [r1], -r4
   19318:	ldrdeq	r9, [r1], -r4
   1931c:	andeq	r9, r1, r8, lsr #10
   19320:	muleq	r1, r8, r6
   19324:	ldr	r0, [r5, #16]
   19328:	ldr	sl, [pc, #1236]	; 19804 <__flatcc_gen_sort@@Base+0x11b8>
   1932c:	cmp	r0, #5
   19330:	sub	r3, r0, #1
   19334:	moveq	sl, r4
   19338:	cmp	r3, #10
   1933c:	bhi	193bc <__flatcc_gen_sort@@Base+0xd70>
   19340:	ldr	r2, [pc, #1216]	; 19808 <__flatcc_gen_sort@@Base+0x11bc>
   19344:	add	fp, sp, #68	; 0x44
   19348:	add	r1, r5, #48	; 0x30
   1934c:	add	r2, r2, r3, lsl #2
   19350:	ldr	r3, [r2, #68]	; 0x44
   19354:	str	r3, [sp, #60]	; 0x3c
   19358:	ldr	r3, [r2, #136]	; 0x88
   1935c:	mov	r2, fp
   19360:	str	r3, [sp, #56]	; 0x38
   19364:	bl	19104 <__flatcc_gen_sort@@Base+0xab8>
   19368:	str	fp, [sp, #52]	; 0x34
   1936c:	ldrh	r2, [r5, #74]	; 0x4a
   19370:	ldr	r3, [sp, #60]	; 0x3c
   19374:	str	r2, [sp, #48]	; 0x30
   19378:	ldrd	r0, [r5, #88]	; 0x58
   1937c:	str	r4, [sp, #8]
   19380:	str	r3, [sp, #36]	; 0x24
   19384:	ldr	r3, [sp, #56]	; 0x38
   19388:	str	r7, [sp, #12]
   1938c:	strd	r8, [sp, #16]
   19390:	str	r4, [sp, #24]
   19394:	str	sl, [sp, #32]
   19398:	strd	r0, [sp, #40]	; 0x28
   1939c:	ldr	r0, [r4, #204]	; 0xcc
   193a0:	str	r3, [sp, #28]
   193a4:	ldrd	r2, [r5, #96]	; 0x60
   193a8:	ldr	r1, [pc, #1116]	; 1980c <__flatcc_gen_sort@@Base+0x11c0>
   193ac:	strd	r2, [sp]
   193b0:	mov	r2, r4
   193b4:	bl	140bc <fprintf@plt>
   193b8:	b	192e4 <__flatcc_gen_sort@@Base+0xc98>
   193bc:	bl	18a44 <__flatcc_gen_sort@@Base+0x3f8>
   193c0:	ldr	r3, [r5, #16]
   193c4:	ldr	r1, [pc, #1080]	; 19804 <__flatcc_gen_sort@@Base+0x11b8>
   193c8:	cmp	r3, #5
   193cc:	sub	r3, r3, #1
   193d0:	moveq	r1, r4
   193d4:	cmp	r3, #10
   193d8:	bhi	193bc <__flatcc_gen_sort@@Base+0xd70>
   193dc:	ldr	r2, [pc, #1060]	; 19808 <__flatcc_gen_sort@@Base+0x11bc>
   193e0:	ldr	r0, [r4, #204]	; 0xcc
   193e4:	str	r4, [sp, #8]
   193e8:	str	r7, [sp, #12]
   193ec:	add	r3, r2, r3, lsl #2
   193f0:	strd	r8, [sp, #16]
   193f4:	str	r4, [sp, #24]
   193f8:	ldr	r2, [r3, #68]	; 0x44
   193fc:	str	r1, [sp, #32]
   19400:	ldr	r3, [r3, #136]	; 0x88
   19404:	ldr	r1, [pc, #1028]	; 19810 <__flatcc_gen_sort@@Base+0x11c4>
   19408:	str	r3, [sp, #28]
   1940c:	str	r2, [sp, #36]	; 0x24
   19410:	ldrd	r2, [r5, #96]	; 0x60
   19414:	strd	r2, [sp]
   19418:	mov	r2, r4
   1941c:	bl	140bc <fprintf@plt>
   19420:	ldr	r0, [r5, #104]	; 0x68
   19424:	cmp	r0, #0
   19428:	beq	192e4 <__flatcc_gen_sort@@Base+0xc98>
   1942c:	ldrh	r3, [r0, #8]
   19430:	cmp	r3, #0
   19434:	beq	19474 <__flatcc_gen_sort@@Base+0xe28>
   19438:	cmp	r3, #1
   1943c:	beq	194a4 <__flatcc_gen_sort@@Base+0xe58>
   19440:	ldr	r3, [pc, #972]	; 19814 <__flatcc_gen_sort@@Base+0x11c8>
   19444:	ldr	r0, [pc, #972]	; 19818 <__flatcc_gen_sort@@Base+0x11cc>
   19448:	ldr	r2, [pc, #972]	; 1981c <__flatcc_gen_sort@@Base+0x11d0>
   1944c:	str	r3, [sp]
   19450:	movw	r3, #1430	; 0x596
   19454:	ldr	r1, [pc, #964]	; 19820 <__flatcc_gen_sort@@Base+0x11d4>
   19458:	ldr	r0, [r0]
   1945c:	bl	140bc <fprintf@plt>
   19460:	ldr	r3, [pc, #956]	; 19824 <__flatcc_gen_sort@@Base+0x11d8>
   19464:	movw	r2, #1430	; 0x596
   19468:	ldr	r1, [pc, #940]	; 1981c <__flatcc_gen_sort@@Base+0x11d0>
   1946c:	ldr	r0, [pc, #948]	; 19828 <__flatcc_gen_sort@@Base+0x11dc>
   19470:	bl	1417c <__assert_fail@plt>
   19474:	mov	r1, r6
   19478:	bl	18778 <__flatcc_gen_sort@@Base+0x12c>
   1947c:	mov	r3, r4
   19480:	mov	r2, r4
   19484:	ldr	r1, [pc, #928]	; 1982c <__flatcc_gen_sort@@Base+0x11e0>
   19488:	ldr	r0, [r4, #204]	; 0xcc
   1948c:	stm	sp, {r7, r8, r9}
   19490:	str	r6, [sp, #12]
   19494:	str	r6, [sp, #16]
   19498:	str	r6, [sp, #20]
   1949c:	bl	140bc <fprintf@plt>
   194a0:	b	192e4 <__flatcc_gen_sort@@Base+0xc98>
   194a4:	mov	r1, r6
   194a8:	bl	18778 <__flatcc_gen_sort@@Base+0x12c>
   194ac:	ldr	r0, [r4, #204]	; 0xcc
   194b0:	mov	r2, r4
   194b4:	str	r6, [sp, #20]
   194b8:	str	r6, [sp, #24]
   194bc:	ldr	r3, [r5, #104]	; 0x68
   194c0:	ldr	r1, [pc, #872]	; 19830 <__flatcc_gen_sort@@Base+0x11e4>
   194c4:	ldrh	r3, [r3, #104]	; 0x68
   194c8:	stm	sp, {r7, r8, r9}
   194cc:	str	r6, [sp, #12]
   194d0:	str	r3, [sp, #16]
   194d4:	mov	r3, r4
   194d8:	bl	140bc <fprintf@plt>
   194dc:	b	192e4 <__flatcc_gen_sort@@Base+0xc98>
   194e0:	str	r4, [sp, #8]
   194e4:	str	r7, [sp, #12]
   194e8:	strd	r8, [sp, #16]
   194ec:	ldrd	r2, [r5, #96]	; 0x60
   194f0:	ldr	r1, [pc, #828]	; 19834 <__flatcc_gen_sort@@Base+0x11e8>
   194f4:	strd	r2, [sp]
   194f8:	mov	r2, r4
   194fc:	ldr	r0, [r4, #204]	; 0xcc
   19500:	bl	140bc <fprintf@plt>
   19504:	b	192e4 <__flatcc_gen_sort@@Base+0xc98>
   19508:	str	r4, [sp, #8]
   1950c:	str	r7, [sp, #12]
   19510:	strd	r8, [sp, #16]
   19514:	ldrd	r2, [r5, #96]	; 0x60
   19518:	ldr	r1, [pc, #792]	; 19838 <__flatcc_gen_sort@@Base+0x11ec>
   1951c:	strd	r2, [sp]
   19520:	mov	r2, r4
   19524:	b	194fc <__flatcc_gen_sort@@Base+0xeb0>
   19528:	mov	r1, r6
   1952c:	ldr	r0, [r5, #16]
   19530:	bl	18778 <__flatcc_gen_sort@@Base+0x12c>
   19534:	ldr	r3, [r5, #16]
   19538:	ldrh	r2, [r3, #8]
   1953c:	cmp	r2, #4
   19540:	ldrls	pc, [pc, r2, lsl #2]
   19544:	b	1966c <__flatcc_gen_sort@@Base+0x1020>
   19548:	muleq	r1, r8, r5
   1954c:	andeq	r9, r1, ip, asr r5
   19550:	andeq	r9, r1, ip, ror #12
   19554:	andeq	r9, r1, r4, asr #11
   19558:	andeq	r9, r1, ip, lsl r6
   1955c:	ldrh	r3, [r5, #74]	; 0x4a
   19560:	ldr	r0, [r4, #204]	; 0xcc
   19564:	ldr	r1, [pc, #720]	; 1983c <__flatcc_gen_sort@@Base+0x11f0>
   19568:	str	r3, [sp, #40]	; 0x28
   1956c:	ldrd	r2, [r5, #88]	; 0x58
   19570:	str	r4, [sp, #8]
   19574:	str	r7, [sp, #12]
   19578:	strd	r8, [sp, #16]
   1957c:	str	r6, [sp, #24]
   19580:	strd	r2, [sp, #32]
   19584:	ldrd	r2, [r5, #96]	; 0x60
   19588:	strd	r2, [sp]
   1958c:	mov	r2, r4
   19590:	bl	140bc <fprintf@plt>
   19594:	b	192e4 <__flatcc_gen_sort@@Base+0xc98>
   19598:	str	r4, [sp, #8]
   1959c:	str	r7, [sp, #12]
   195a0:	strd	r8, [sp, #16]
   195a4:	str	r6, [sp, #24]
   195a8:	ldrd	r2, [r5, #96]	; 0x60
   195ac:	ldr	r1, [pc, #652]	; 19840 <__flatcc_gen_sort@@Base+0x11f4>
   195b0:	strd	r2, [sp]
   195b4:	mov	r2, r4
   195b8:	ldr	r0, [r4, #204]	; 0xcc
   195bc:	bl	140bc <fprintf@plt>
   195c0:	b	192e4 <__flatcc_gen_sort@@Base+0xc98>
   195c4:	add	sl, sp, #68	; 0x44
   195c8:	add	r1, r5, #48	; 0x30
   195cc:	ldr	r0, [r3, #40]	; 0x28
   195d0:	mov	r2, sl
   195d4:	bl	19104 <__flatcc_gen_sort@@Base+0xab8>
   195d8:	ldr	r0, [r4, #204]	; 0xcc
   195dc:	str	sl, [sp, #44]	; 0x2c
   195e0:	ldrh	r3, [r5, #74]	; 0x4a
   195e4:	ldr	r1, [pc, #600]	; 19844 <__flatcc_gen_sort@@Base+0x11f8>
   195e8:	str	r3, [sp, #40]	; 0x28
   195ec:	ldrd	r2, [r5, #88]	; 0x58
   195f0:	str	r4, [sp, #8]
   195f4:	str	r7, [sp, #12]
   195f8:	strd	r8, [sp, #16]
   195fc:	str	r6, [sp, #24]
   19600:	str	r6, [sp, #28]
   19604:	strd	r2, [sp, #32]
   19608:	ldrd	r2, [r5, #96]	; 0x60
   1960c:	strd	r2, [sp]
   19610:	mov	r2, r4
   19614:	bl	140bc <fprintf@plt>
   19618:	b	192e4 <__flatcc_gen_sort@@Base+0xc98>
   1961c:	ldr	r0, [r4, #204]	; 0xcc
   19620:	str	r4, [sp, #8]
   19624:	str	r7, [sp, #12]
   19628:	strd	r8, [sp, #16]
   1962c:	str	r6, [sp, #24]
   19630:	ldrd	r2, [r5, #96]	; 0x60
   19634:	ldr	r1, [pc, #524]	; 19848 <__flatcc_gen_sort@@Base+0x11fc>
   19638:	strd	r2, [sp]
   1963c:	mov	r2, r4
   19640:	bl	140bc <fprintf@plt>
   19644:	mov	r3, #0
   19648:	str	r3, [sp, #4]
   1964c:	mov	r2, r8
   19650:	mov	r1, r7
   19654:	ldr	r3, [r5, #16]
   19658:	mov	r0, r4
   1965c:	str	r3, [sp]
   19660:	mov	r3, r9
   19664:	bl	18788 <__flatcc_gen_sort@@Base+0x13c>
   19668:	b	192e4 <__flatcc_gen_sort@@Base+0xc98>
   1966c:	ldr	r3, [pc, #472]	; 1984c <__flatcc_gen_sort@@Base+0x1200>
   19670:	ldr	r0, [pc, #416]	; 19818 <__flatcc_gen_sort@@Base+0x11cc>
   19674:	ldr	r2, [pc, #416]	; 1981c <__flatcc_gen_sort@@Base+0x11d0>
   19678:	str	r3, [sp]
   1967c:	mov	r3, #1472	; 0x5c0
   19680:	ldr	r1, [pc, #408]	; 19820 <__flatcc_gen_sort@@Base+0x11d4>
   19684:	ldr	r0, [r0]
   19688:	bl	140bc <fprintf@plt>
   1968c:	ldr	r3, [pc, #400]	; 19824 <__flatcc_gen_sort@@Base+0x11d8>
   19690:	mov	r2, #1472	; 0x5c0
   19694:	b	19468 <__flatcc_gen_sort@@Base+0xe1c>
   19698:	mov	r1, r6
   1969c:	ldr	r0, [r5, #16]
   196a0:	bl	18778 <__flatcc_gen_sort@@Base+0x12c>
   196a4:	ldr	r3, [r5, #16]
   196a8:	ldrh	r2, [r3, #8]
   196ac:	cmp	r2, #4
   196b0:	ldrls	pc, [pc, r2, lsl #2]
   196b4:	b	197a8 <__flatcc_gen_sort@@Base+0x115c>
   196b8:	andeq	r9, r1, r4, lsl r7
   196bc:	andeq	r9, r1, ip, asr #13
   196c0:	andeq	r9, r1, r8, lsr #15
   196c4:	andeq	r9, r1, r0, asr r7
   196c8:	andeq	r9, r1, r8, ror r7
   196cc:	ldrh	r3, [r3, #10]
   196d0:	tst	r3, #8
   196d4:	beq	196e4 <__flatcc_gen_sort@@Base+0x1098>
   196d8:	ldr	r0, [pc, #368]	; 19850 <__flatcc_gen_sort@@Base+0x1204>
   196dc:	ldr	r1, [r4, #204]	; 0xcc
   196e0:	bl	14158 <fputs@plt>
   196e4:	str	r4, [sp, #8]
   196e8:	str	r7, [sp, #12]
   196ec:	strd	r8, [sp, #16]
   196f0:	str	r6, [sp, #24]
   196f4:	str	r6, [sp, #28]
   196f8:	ldrd	r2, [r5, #96]	; 0x60
   196fc:	ldr	r1, [pc, #336]	; 19854 <__flatcc_gen_sort@@Base+0x1208>
   19700:	strd	r2, [sp]
   19704:	mov	r2, r4
   19708:	ldr	r0, [r4, #204]	; 0xcc
   1970c:	bl	140bc <fprintf@plt>
   19710:	b	192e4 <__flatcc_gen_sort@@Base+0xc98>
   19714:	ldrh	r3, [r3, #10]
   19718:	tst	r3, #8
   1971c:	beq	1972c <__flatcc_gen_sort@@Base+0x10e0>
   19720:	ldr	r0, [pc, #296]	; 19850 <__flatcc_gen_sort@@Base+0x1204>
   19724:	ldr	r1, [r4, #204]	; 0xcc
   19728:	bl	14158 <fputs@plt>
   1972c:	str	r4, [sp, #8]
   19730:	str	r7, [sp, #12]
   19734:	strd	r8, [sp, #16]
   19738:	str	r6, [sp, #24]
   1973c:	ldrd	r2, [r5, #96]	; 0x60
   19740:	ldr	r1, [pc, #272]	; 19858 <__flatcc_gen_sort@@Base+0x120c>
   19744:	strd	r2, [sp]
   19748:	mov	r2, r4
   1974c:	b	195b8 <__flatcc_gen_sort@@Base+0xf6c>
   19750:	str	r4, [sp, #8]
   19754:	str	r7, [sp, #12]
   19758:	strd	r8, [sp, #16]
   1975c:	str	r6, [sp, #24]
   19760:	str	r6, [sp, #28]
   19764:	ldrd	r2, [r5, #96]	; 0x60
   19768:	ldr	r1, [pc, #236]	; 1985c <__flatcc_gen_sort@@Base+0x1210>
   1976c:	strd	r2, [sp]
   19770:	mov	r2, r4
   19774:	b	19708 <__flatcc_gen_sort@@Base+0x10bc>
   19778:	ldr	r0, [r4, #204]	; 0xcc
   1977c:	str	r4, [sp, #8]
   19780:	str	r7, [sp, #12]
   19784:	strd	r8, [sp, #16]
   19788:	str	r6, [sp, #24]
   1978c:	ldrd	r2, [r5, #96]	; 0x60
   19790:	ldr	r1, [pc, #200]	; 19860 <__flatcc_gen_sort@@Base+0x1214>
   19794:	strd	r2, [sp]
   19798:	mov	r2, r4
   1979c:	bl	140bc <fprintf@plt>
   197a0:	mov	r3, #1
   197a4:	b	19648 <__flatcc_gen_sort@@Base+0xffc>
   197a8:	ldr	r3, [pc, #180]	; 19864 <__flatcc_gen_sort@@Base+0x1218>
   197ac:	ldr	r0, [pc, #100]	; 19818 <__flatcc_gen_sort@@Base+0x11cc>
   197b0:	ldr	r2, [pc, #100]	; 1981c <__flatcc_gen_sort@@Base+0x11d0>
   197b4:	str	r3, [sp]
   197b8:	movw	r3, #1507	; 0x5e3
   197bc:	ldr	r1, [pc, #92]	; 19820 <__flatcc_gen_sort@@Base+0x11d4>
   197c0:	ldr	r0, [r0]
   197c4:	bl	140bc <fprintf@plt>
   197c8:	ldr	r3, [pc, #84]	; 19824 <__flatcc_gen_sort@@Base+0x11d8>
   197cc:	movw	r2, #1507	; 0x5e3
   197d0:	b	19468 <__flatcc_gen_sort@@Base+0xe1c>
   197d4:	ldr	r3, [pc, #140]	; 19868 <__flatcc_gen_sort@@Base+0x121c>
   197d8:	ldr	r0, [pc, #56]	; 19818 <__flatcc_gen_sort@@Base+0x11cc>
   197dc:	ldr	r2, [pc, #56]	; 1981c <__flatcc_gen_sort@@Base+0x11d0>
   197e0:	str	r3, [sp]
   197e4:	movw	r3, #1512	; 0x5e8
   197e8:	ldr	r1, [pc, #48]	; 19820 <__flatcc_gen_sort@@Base+0x11d4>
   197ec:	ldr	r0, [r0]
   197f0:	bl	140bc <fprintf@plt>
   197f4:	ldr	r3, [pc, #40]	; 19824 <__flatcc_gen_sort@@Base+0x11d8>
   197f8:	movw	r2, #1512	; 0x5e8
   197fc:	b	19468 <__flatcc_gen_sort@@Base+0xe1c>
   19800:	andeq	r9, r3, r9, lsl #6
   19804:	strdeq	r2, [r3], -r7
   19808:	muleq	r3, r4, lr
   1980c:	andeq	r9, r3, pc, lsr r3
   19810:	andeq	r9, r3, r4, lsl #7
   19814:	andeq	r9, r3, r2, ror #8
   19818:	strheq	fp, [r5], -r0
   1981c:	andeq	r9, r3, fp, rrx
   19820:	ldrdeq	r0, [r3], -r9
   19824:	muleq	r3, sl, pc	; <UNPREDICTABLE>
   19828:	andeq	r9, r3, fp, lsr r2
   1982c:			; <UNDEFINED> instruction: 0x000393bb
   19830:	andeq	r9, r3, ip, lsl #8
   19834:	andeq	r9, r3, r9, lsl #9
   19838:			; <UNDEFINED> instruction: 0x000394b4
   1983c:	andeq	r9, r3, r6, ror #9
   19840:	andeq	r9, r3, pc, lsl r5
   19844:	andeq	r9, r3, sp, asr #10
   19848:	muleq	r3, r5, r5
   1984c:	andeq	r1, r3, fp, lsr #18
   19850:	andeq	r9, r3, r3, asr #11
   19854:	andeq	r9, r3, r4, ror #11
   19858:	andeq	r9, r3, r9, lsl r6
   1985c:	andeq	r9, r3, lr, asr #12
   19860:	andeq	r9, r3, r8, lsl #13
   19864:	andeq	r1, r3, r4, ror r9
   19868:	andeq	r1, r3, r6, lsr sl
   1986c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19870:	sub	sp, sp, #484	; 0x1e4
   19874:	mov	r4, r0
   19878:	add	sl, sp, #260	; 0x104
   1987c:	mov	r2, #220	; 0xdc
   19880:	mov	r1, #0
   19884:	mov	r0, sl
   19888:	bl	140d4 <memset@plt>
   1988c:	ldr	r3, [r4, #208]	; 0xd0
   19890:	ldr	r6, [pc, #2252]	; 1a164 <__flatcc_gen_sort@@Base+0x1b18>
   19894:	ldr	r5, [r3, #40]	; 0x28
   19898:	mov	r3, #0
   1989c:	cmp	r5, #0
   198a0:	bne	1995c <__flatcc_gen_sort@@Base+0x1310>
   198a4:	cmp	r3, #0
   198a8:	beq	198b8 <__flatcc_gen_sort@@Base+0x126c>
   198ac:	mov	r0, #10
   198b0:	ldr	r1, [r4, #204]	; 0xcc
   198b4:	bl	1411c <fputc@plt>
   198b8:	ldr	r3, [r4, #208]	; 0xd0
   198bc:	ldr	fp, [pc, #2212]	; 1a168 <__flatcc_gen_sort@@Base+0x1b1c>
   198c0:	ldr	r6, [r3, #40]	; 0x28
   198c4:	mov	r3, #0
   198c8:	str	r3, [sp, #32]
   198cc:	cmp	r6, #0
   198d0:	bne	19998 <__flatcc_gen_sort@@Base+0x134c>
   198d4:	ldr	r3, [r4, #208]	; 0xd0
   198d8:	ldr	r6, [r3, #40]	; 0x28
   198dc:	cmp	r6, #0
   198e0:	bne	19abc <__flatcc_gen_sort@@Base+0x1470>
   198e4:	ldr	r3, [sp, #32]
   198e8:	cmp	r3, #0
   198ec:	beq	198fc <__flatcc_gen_sort@@Base+0x12b0>
   198f0:	mov	r0, #10
   198f4:	ldr	r1, [r4, #204]	; 0xcc
   198f8:	bl	1411c <fputc@plt>
   198fc:	ldr	r3, [r4, #208]	; 0xd0
   19900:	ldr	r8, [pc, #2148]	; 1a16c <__flatcc_gen_sort@@Base+0x1b20>
   19904:	ldr	r9, [pc, #2148]	; 1a170 <__flatcc_gen_sort@@Base+0x1b24>
   19908:	ldr	fp, [pc, #2148]	; 1a174 <__flatcc_gen_sort@@Base+0x1b28>
   1990c:	ldr	r7, [r3, #40]	; 0x28
   19910:	mov	r3, #0
   19914:	cmp	r7, #0
   19918:	bne	19e40 <__flatcc_gen_sort@@Base+0x17f4>
   1991c:	cmp	r3, #0
   19920:	beq	19930 <__flatcc_gen_sort@@Base+0x12e4>
   19924:	mov	r0, #10
   19928:	ldr	r1, [r4, #204]	; 0xcc
   1992c:	bl	1411c <fputc@plt>
   19930:	ldr	r3, [sp, #32]
   19934:	cmp	r3, #0
   19938:	beq	19950 <__flatcc_gen_sort@@Base+0x1304>
   1993c:	ldr	r3, [r4, #208]	; 0xd0
   19940:	ldr	fp, [pc, #2096]	; 1a178 <__flatcc_gen_sort@@Base+0x1b2c>
   19944:	ldr	r5, [r3, #40]	; 0x28
   19948:	cmp	r5, #0
   1994c:	bne	19f88 <__flatcc_gen_sort@@Base+0x193c>
   19950:	mov	r0, #0
   19954:	add	sp, sp, #484	; 0x1e4
   19958:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1995c:	ldrh	r2, [r5, #8]
   19960:	cmp	r2, #4
   19964:	bne	19990 <__flatcc_gen_sort@@Base+0x1344>
   19968:	mov	r1, sl
   1996c:	mov	r0, r5
   19970:	bl	18778 <__flatcc_gen_sort@@Base+0x12c>
   19974:	mov	r3, sl
   19978:	mov	r2, r4
   1997c:	ldr	r0, [r4, #204]	; 0xcc
   19980:	mov	r1, r6
   19984:	stm	sp, {r4, sl}
   19988:	bl	140bc <fprintf@plt>
   1998c:	mov	r3, #1
   19990:	ldr	r5, [r5]
   19994:	b	1989c <__flatcc_gen_sort@@Base+0x1250>
   19998:	ldrh	r7, [r6, #8]
   1999c:	cmp	r7, #0
   199a0:	bne	19a48 <__flatcc_gen_sort@@Base+0x13fc>
   199a4:	mov	r2, #220	; 0xdc
   199a8:	mov	r1, r7
   199ac:	mov	r0, sl
   199b0:	bl	140d4 <memset@plt>
   199b4:	ldr	r5, [r6, #20]
   199b8:	cmp	r5, #0
   199bc:	bne	19a50 <__flatcc_gen_sort@@Base+0x1404>
   199c0:	mov	r1, sl
   199c4:	mov	r0, r6
   199c8:	mov	r9, r4
   199cc:	bl	18778 <__flatcc_gen_sort@@Base+0x12c>
   199d0:	mov	r3, sl
   199d4:	mov	r2, r4
   199d8:	ldr	r1, [pc, #1948]	; 1a17c <__flatcc_gen_sort@@Base+0x1b30>
   199dc:	ldr	r0, [r9, #204]!	; 0xcc
   199e0:	bl	140bc <fprintf@plt>
   199e4:	ldr	r8, [r6, #20]
   199e8:	cmp	r8, #0
   199ec:	bne	19a64 <__flatcc_gen_sort@@Base+0x1418>
   199f0:	cmp	r5, #0
   199f4:	ldr	r1, [r4, #204]	; 0xcc
   199f8:	ldrne	r0, [pc, #1920]	; 1a180 <__flatcc_gen_sort@@Base+0x1b34>
   199fc:	ldreq	r0, [pc, #1920]	; 1a184 <__flatcc_gen_sort@@Base+0x1b38>
   19a00:	bl	14158 <fputs@plt>
   19a04:	mov	r2, #220	; 0xdc
   19a08:	mov	r1, #0
   19a0c:	mov	r0, sl
   19a10:	bl	140d4 <memset@plt>
   19a14:	mov	r1, sl
   19a18:	mov	r0, r6
   19a1c:	bl	18778 <__flatcc_gen_sort@@Base+0x12c>
   19a20:	ldrd	r2, [r6, #96]	; 0x60
   19a24:	mov	r1, fp
   19a28:	ldr	r0, [r4, #204]	; 0xcc
   19a2c:	str	sl, [sp]
   19a30:	strd	r2, [sp, #8]
   19a34:	mov	r3, r4
   19a38:	mov	r2, r4
   19a3c:	bl	140bc <fprintf@plt>
   19a40:	mov	r3, #1
   19a44:	str	r3, [sp, #32]
   19a48:	ldr	r6, [r6]
   19a4c:	b	198cc <__flatcc_gen_sort@@Base+0x1280>
   19a50:	ldrh	r3, [r5, #72]	; 0x48
   19a54:	ldr	r5, [r5]
   19a58:	tst	r3, #4
   19a5c:	addeq	r7, r7, #1
   19a60:	b	199b8 <__flatcc_gen_sort@@Base+0x136c>
   19a64:	ldrh	r2, [r8, #72]	; 0x48
   19a68:	ands	r3, r2, #4
   19a6c:	bne	19aa4 <__flatcc_gen_sort@@Base+0x1458>
   19a70:	tst	r2, #256	; 0x100
   19a74:	beq	19aa4 <__flatcc_gen_sort@@Base+0x1458>
   19a78:	cmp	r5, #0
   19a7c:	beq	19aac <__flatcc_gen_sort@@Base+0x1460>
   19a80:	mov	r2, r7
   19a84:	mov	r1, r5
   19a88:	mov	r0, r9
   19a8c:	bl	189cc <__flatcc_gen_sort@@Base+0x380>
   19a90:	ldr	r1, [pc, #1776]	; 1a188 <__flatcc_gen_sort@@Base+0x1b3c>
   19a94:	add	r5, r5, #1
   19a98:	ldr	r2, [r8, #96]	; 0x60
   19a9c:	ldr	r0, [r4, #204]	; 0xcc
   19aa0:	bl	140bc <fprintf@plt>
   19aa4:	ldr	r8, [r8]
   19aa8:	b	199e8 <__flatcc_gen_sort@@Base+0x139c>
   19aac:	mov	r0, #32
   19ab0:	ldr	r1, [r4, #204]	; 0xcc
   19ab4:	bl	1411c <fputc@plt>
   19ab8:	b	19a90 <__flatcc_gen_sort@@Base+0x1444>
   19abc:	ldrh	fp, [r6, #8]
   19ac0:	cmp	fp, #0
   19ac4:	bne	19b6c <__flatcc_gen_sort@@Base+0x1520>
   19ac8:	add	r7, sp, #40	; 0x28
   19acc:	mov	r2, #220	; 0xdc
   19ad0:	mov	r1, fp
   19ad4:	mov	r0, r7
   19ad8:	bl	140d4 <memset@plt>
   19adc:	mov	r1, r7
   19ae0:	mov	r0, r6
   19ae4:	bl	18778 <__flatcc_gen_sort@@Base+0x12c>
   19ae8:	ldr	r8, [r6, #20]
   19aec:	cmp	r8, #0
   19af0:	bne	19b74 <__flatcc_gen_sort@@Base+0x1528>
   19af4:	mov	r2, r7
   19af8:	ldr	r1, [pc, #1676]	; 1a18c <__flatcc_gen_sort@@Base+0x1b40>
   19afc:	ldr	r0, [r4, #204]	; 0xcc
   19b00:	bl	140bc <fprintf@plt>
   19b04:	mov	r1, r8
   19b08:	mov	r2, #220	; 0xdc
   19b0c:	ldr	r9, [pc, #1660]	; 1a190 <__flatcc_gen_sort@@Base+0x1b44>
   19b10:	mov	r0, sl
   19b14:	bl	140d4 <memset@plt>
   19b18:	ldr	r5, [r6, #20]
   19b1c:	mov	r1, r8
   19b20:	cmp	r5, #0
   19b24:	bne	19b88 <__flatcc_gen_sort@@Base+0x153c>
   19b28:	mov	r9, r4
   19b2c:	mov	r2, r7
   19b30:	ldr	r1, [pc, #1628]	; 1a194 <__flatcc_gen_sort@@Base+0x1b48>
   19b34:	ldr	r0, [r9, #204]!	; 0xcc
   19b38:	bl	140bc <fprintf@plt>
   19b3c:	ldr	r8, [r6, #20]
   19b40:	cmp	r8, #0
   19b44:	bne	19e04 <__flatcc_gen_sort@@Base+0x17b8>
   19b48:	mov	r0, #10
   19b4c:	ldr	r1, [r4, #204]	; 0xcc
   19b50:	bl	1411c <fputc@plt>
   19b54:	mov	r3, r7
   19b58:	mov	r2, r7
   19b5c:	ldr	r1, [pc, #1588]	; 1a198 <__flatcc_gen_sort@@Base+0x1b4c>
   19b60:	ldr	r0, [r4, #204]	; 0xcc
   19b64:	stm	sp, {r4, r7}
   19b68:	bl	140bc <fprintf@plt>
   19b6c:	ldr	r6, [r6]
   19b70:	b	198dc <__flatcc_gen_sort@@Base+0x1290>
   19b74:	ldrh	r3, [r8, #72]	; 0x48
   19b78:	ldr	r8, [r8]
   19b7c:	tst	r3, #4
   19b80:	addeq	fp, fp, #1
   19b84:	b	19aec <__flatcc_gen_sort@@Base+0x14a0>
   19b88:	ldrh	r3, [r5, #72]	; 0x48
   19b8c:	tst	r3, #4
   19b90:	bne	19dfc <__flatcc_gen_sort@@Base+0x17b0>
   19b94:	mov	r3, #1
   19b98:	mov	r2, fp
   19b9c:	add	r0, r4, #204	; 0xcc
   19ba0:	add	r8, r1, #1
   19ba4:	bl	189cc <__flatcc_gen_sort@@Base+0x380>
   19ba8:	ldrh	r3, [r5, #24]
   19bac:	sub	r3, r3, #7
   19bb0:	cmp	r3, #8
   19bb4:	ldrls	pc, [pc, r3, lsl #2]
   19bb8:	b	19dd0 <__flatcc_gen_sort@@Base+0x1784>
   19bbc:	andeq	r9, r1, r4, ror sp
   19bc0:	andeq	r9, r1, r8, lsr #26
   19bc4:			; <UNDEFINED> instruction: 0x00019dbc
   19bc8:	andeq	r9, r1, r8, lsr #27
   19bcc:	ldrdeq	r9, [r1], -r0
   19bd0:	ldrdeq	r9, [r1], -r0
   19bd4:	ldrdeq	r9, [r1], -r0
   19bd8:	andeq	r9, r1, r0, ror #23
   19bdc:	andeq	r9, r1, r0, lsr #25
   19be0:	mov	r1, sl
   19be4:	ldr	r0, [r5, #16]
   19be8:	bl	18778 <__flatcc_gen_sort@@Base+0x12c>
   19bec:	ldr	r3, [r5, #16]
   19bf0:	ldrh	r3, [r3, #8]
   19bf4:	cmp	r3, #4
   19bf8:	ldrls	pc, [pc, r3, lsl #2]
   19bfc:	b	19c6c <__flatcc_gen_sort@@Base+0x1620>
   19c00:	andeq	r9, r1, r4, asr #24
   19c04:	andeq	r9, r1, r4, lsl ip
   19c08:	andeq	r9, r1, ip, ror #24
   19c0c:	andeq	r9, r1, r0, lsr ip
   19c10:	andeq	r9, r1, r8, asr ip
   19c14:	ldrd	r2, [r5, #96]	; 0x60
   19c18:	ldr	r1, [pc, #1404]	; 1a19c <__flatcc_gen_sort@@Base+0x1b50>
   19c1c:	strd	r2, [sp]
   19c20:	mov	r2, sl
   19c24:	ldr	r0, [r4, #204]	; 0xcc
   19c28:	bl	140bc <fprintf@plt>
   19c2c:	b	19d64 <__flatcc_gen_sort@@Base+0x1718>
   19c30:	ldrd	r2, [r5, #96]	; 0x60
   19c34:	ldr	r1, [pc, #1380]	; 1a1a0 <__flatcc_gen_sort@@Base+0x1b54>
   19c38:	strd	r2, [sp]
   19c3c:	mov	r2, sl
   19c40:	b	19c24 <__flatcc_gen_sort@@Base+0x15d8>
   19c44:	ldrd	r2, [r5, #96]	; 0x60
   19c48:	ldr	r1, [pc, #1364]	; 1a1a4 <__flatcc_gen_sort@@Base+0x1b58>
   19c4c:	strd	r2, [sp]
   19c50:	mov	r2, sl
   19c54:	b	19c24 <__flatcc_gen_sort@@Base+0x15d8>
   19c58:	ldrd	r2, [r5, #96]	; 0x60
   19c5c:	ldr	r1, [pc, #1348]	; 1a1a8 <__flatcc_gen_sort@@Base+0x1b5c>
   19c60:	strd	r2, [sp]
   19c64:	mov	r2, sl
   19c68:	b	19c24 <__flatcc_gen_sort@@Base+0x15d8>
   19c6c:	ldr	r3, [pc, #1336]	; 1a1ac <__flatcc_gen_sort@@Base+0x1b60>
   19c70:	ldr	r0, [pc, #1336]	; 1a1b0 <__flatcc_gen_sort@@Base+0x1b64>
   19c74:	ldr	r2, [pc, #1336]	; 1a1b4 <__flatcc_gen_sort@@Base+0x1b68>
   19c78:	str	r3, [sp]
   19c7c:	movw	r3, #1173	; 0x495
   19c80:	ldr	r1, [pc, #1328]	; 1a1b8 <__flatcc_gen_sort@@Base+0x1b6c>
   19c84:	ldr	r0, [r0]
   19c88:	bl	140bc <fprintf@plt>
   19c8c:	ldr	r3, [pc, #1320]	; 1a1bc <__flatcc_gen_sort@@Base+0x1b70>
   19c90:	movw	r2, #1173	; 0x495
   19c94:	ldr	r1, [pc, #1304]	; 1a1b4 <__flatcc_gen_sort@@Base+0x1b68>
   19c98:	ldr	r0, [pc, #1312]	; 1a1c0 <__flatcc_gen_sort@@Base+0x1b74>
   19c9c:	bl	1417c <__assert_fail@plt>
   19ca0:	mov	r1, sl
   19ca4:	ldr	r0, [r5, #16]
   19ca8:	bl	18778 <__flatcc_gen_sort@@Base+0x12c>
   19cac:	ldr	r3, [r5, #16]
   19cb0:	ldrh	r3, [r3, #8]
   19cb4:	cmp	r3, #4
   19cb8:	ldrls	pc, [pc, r3, lsl #2]
   19cbc:	b	19cfc <__flatcc_gen_sort@@Base+0x16b0>
   19cc0:	ldrdeq	r9, [r1], -r4
   19cc4:	ldrdeq	r9, [r1], -r4
   19cc8:	strdeq	r9, [r1], -ip
   19ccc:	ldrdeq	r9, [r1], -r4
   19cd0:	andeq	r9, r1, r8, ror #25
   19cd4:	ldrd	r2, [r5, #96]	; 0x60
   19cd8:	ldr	r1, [pc, #1252]	; 1a1c4 <__flatcc_gen_sort@@Base+0x1b78>
   19cdc:	strd	r2, [sp]
   19ce0:	mov	r2, sl
   19ce4:	b	19c24 <__flatcc_gen_sort@@Base+0x15d8>
   19ce8:	ldrd	r2, [r5, #96]	; 0x60
   19cec:	ldr	r1, [pc, #1236]	; 1a1c8 <__flatcc_gen_sort@@Base+0x1b7c>
   19cf0:	strd	r2, [sp]
   19cf4:	mov	r2, sl
   19cf8:	b	19c24 <__flatcc_gen_sort@@Base+0x15d8>
   19cfc:	ldr	r3, [pc, #1224]	; 1a1cc <__flatcc_gen_sort@@Base+0x1b80>
   19d00:	ldr	r0, [pc, #1192]	; 1a1b0 <__flatcc_gen_sort@@Base+0x1b64>
   19d04:	ldr	r2, [pc, #1192]	; 1a1b4 <__flatcc_gen_sort@@Base+0x1b68>
   19d08:	str	r3, [sp]
   19d0c:	movw	r3, #1189	; 0x4a5
   19d10:	ldr	r1, [pc, #1184]	; 1a1b8 <__flatcc_gen_sort@@Base+0x1b6c>
   19d14:	ldr	r0, [r0]
   19d18:	bl	140bc <fprintf@plt>
   19d1c:	ldr	r3, [pc, #1176]	; 1a1bc <__flatcc_gen_sort@@Base+0x1b70>
   19d20:	movw	r2, #1189	; 0x4a5
   19d24:	b	19c94 <__flatcc_gen_sort@@Base+0x1648>
   19d28:	ldr	r3, [r5, #16]
   19d2c:	ldr	r2, [pc, #1180]	; 1a1d0 <__flatcc_gen_sort@@Base+0x1b84>
   19d30:	cmp	r3, #5
   19d34:	sub	r3, r3, #1
   19d38:	moveq	r2, r4
   19d3c:	cmp	r3, #10
   19d40:	bhi	19d70 <__flatcc_gen_sort@@Base+0x1724>
   19d44:	ldr	r1, [pc, #1160]	; 1a1d4 <__flatcc_gen_sort@@Base+0x1b88>
   19d48:	add	r3, r1, r3, lsl #2
   19d4c:	ldrd	r0, [r5, #96]	; 0x60
   19d50:	ldr	r3, [r3, #68]	; 0x44
   19d54:	strd	r0, [sp]
   19d58:	ldr	r1, [pc, #1144]	; 1a1d8 <__flatcc_gen_sort@@Base+0x1b8c>
   19d5c:	ldr	r0, [r4, #204]	; 0xcc
   19d60:	bl	140bc <fprintf@plt>
   19d64:	mov	r1, r8
   19d68:	ldr	r5, [r5]
   19d6c:	b	19b20 <__flatcc_gen_sort@@Base+0x14d4>
   19d70:	bl	18a44 <__flatcc_gen_sort@@Base+0x3f8>
   19d74:	ldr	r3, [r5, #16]
   19d78:	sub	r3, r3, #1
   19d7c:	cmp	r3, #10
   19d80:	bhi	19da4 <__flatcc_gen_sort@@Base+0x1758>
   19d84:	ldr	r2, [pc, #1096]	; 1a1d4 <__flatcc_gen_sort@@Base+0x1b88>
   19d88:	add	r1, r2, r3, lsl #2
   19d8c:	ldrd	r2, [r5, #96]	; 0x60
   19d90:	strd	r2, [sp]
   19d94:	mov	r2, r4
   19d98:	ldr	r3, [r1, #136]	; 0x88
   19d9c:	ldr	r1, [pc, #1080]	; 1a1dc <__flatcc_gen_sort@@Base+0x1b90>
   19da0:	b	19d5c <__flatcc_gen_sort@@Base+0x1710>
   19da4:	bl	18a98 <__flatcc_gen_sort@@Base+0x44c>
   19da8:	ldrd	r2, [r5, #96]	; 0x60
   19dac:	mov	r1, r9
   19db0:	strd	r2, [sp]
   19db4:	mov	r2, r4
   19db8:	b	19c24 <__flatcc_gen_sort@@Base+0x15d8>
   19dbc:	ldrd	r2, [r5, #96]	; 0x60
   19dc0:	ldr	r1, [pc, #1048]	; 1a1e0 <__flatcc_gen_sort@@Base+0x1b94>
   19dc4:	strd	r2, [sp]
   19dc8:	mov	r2, r4
   19dcc:	b	19c24 <__flatcc_gen_sort@@Base+0x15d8>
   19dd0:	ldr	r3, [pc, #1036]	; 1a1e4 <__flatcc_gen_sort@@Base+0x1b98>
   19dd4:	ldr	r0, [pc, #980]	; 1a1b0 <__flatcc_gen_sort@@Base+0x1b64>
   19dd8:	ldr	r2, [pc, #980]	; 1a1b4 <__flatcc_gen_sort@@Base+0x1b68>
   19ddc:	str	r3, [sp]
   19de0:	movw	r3, #1209	; 0x4b9
   19de4:	ldr	r1, [pc, #972]	; 1a1b8 <__flatcc_gen_sort@@Base+0x1b6c>
   19de8:	ldr	r0, [r0]
   19dec:	bl	140bc <fprintf@plt>
   19df0:	ldr	r3, [pc, #964]	; 1a1bc <__flatcc_gen_sort@@Base+0x1b70>
   19df4:	movw	r2, #1209	; 0x4b9
   19df8:	b	19c94 <__flatcc_gen_sort@@Base+0x1648>
   19dfc:	mov	r8, r1
   19e00:	b	19d64 <__flatcc_gen_sort@@Base+0x1718>
   19e04:	ldrh	r3, [r8, #72]	; 0x48
   19e08:	tst	r3, #4
   19e0c:	bne	19e38 <__flatcc_gen_sort@@Base+0x17ec>
   19e10:	mov	r1, r5
   19e14:	mov	r3, #1
   19e18:	mov	r2, fp
   19e1c:	mov	r0, r9
   19e20:	bl	189cc <__flatcc_gen_sort@@Base+0x380>
   19e24:	ldr	r1, [pc, #956]	; 1a1e8 <__flatcc_gen_sort@@Base+0x1b9c>
   19e28:	add	r5, r5, #1
   19e2c:	ldrd	r2, [r8, #96]	; 0x60
   19e30:	ldr	r0, [r4, #204]	; 0xcc
   19e34:	bl	140bc <fprintf@plt>
   19e38:	ldr	r8, [r8]
   19e3c:	b	19b40 <__flatcc_gen_sort@@Base+0x14f4>
   19e40:	ldrh	r2, [r7, #8]
   19e44:	cmp	r2, #4
   19e48:	bne	19ea4 <__flatcc_gen_sort@@Base+0x1858>
   19e4c:	add	r5, sp, #40	; 0x28
   19e50:	mov	r2, #220	; 0xdc
   19e54:	mov	r1, #0
   19e58:	mov	r0, r5
   19e5c:	bl	140d4 <memset@plt>
   19e60:	mov	r2, #220	; 0xdc
   19e64:	mov	r1, #0
   19e68:	mov	r0, sl
   19e6c:	bl	140d4 <memset@plt>
   19e70:	mov	r1, r5
   19e74:	mov	r0, r7
   19e78:	bl	18778 <__flatcc_gen_sort@@Base+0x12c>
   19e7c:	ldr	r6, [r7, #20]
   19e80:	cmp	r6, #0
   19e84:	bne	19eac <__flatcc_gen_sort@@Base+0x1860>
   19e88:	mov	r3, r4
   19e8c:	mov	r2, r4
   19e90:	ldr	r1, [pc, #852]	; 1a1ec <__flatcc_gen_sort@@Base+0x1ba0>
   19e94:	ldr	r0, [r4, #204]	; 0xcc
   19e98:	str	r5, [sp]
   19e9c:	bl	140bc <fprintf@plt>
   19ea0:	mov	r3, #1
   19ea4:	ldr	r7, [r7]
   19ea8:	b	19914 <__flatcc_gen_sort@@Base+0x12c8>
   19eac:	ldrh	r3, [r6, #24]
   19eb0:	cmp	r3, #10
   19eb4:	beq	19f30 <__flatcc_gen_sort@@Base+0x18e4>
   19eb8:	cmp	r3, #14
   19ebc:	beq	19ee8 <__flatcc_gen_sort@@Base+0x189c>
   19ec0:	cmp	r3, #0
   19ec4:	bne	19f5c <__flatcc_gen_sort@@Base+0x1910>
   19ec8:	mov	r3, r5
   19ecc:	mov	r2, r5
   19ed0:	ldr	r0, [r4, #204]	; 0xcc
   19ed4:	mov	r1, fp
   19ed8:	str	r5, [sp]
   19edc:	str	r5, [sp, #4]
   19ee0:	bl	140bc <fprintf@plt>
   19ee4:	b	19f28 <__flatcc_gen_sort@@Base+0x18dc>
   19ee8:	mov	r1, sl
   19eec:	ldr	r0, [r6, #16]
   19ef0:	bl	18778 <__flatcc_gen_sort@@Base+0x12c>
   19ef4:	ldr	r2, [r6, #4]
   19ef8:	mov	r1, r9
   19efc:	ldrd	r2, [r2]
   19f00:	str	r3, [sp]
   19f04:	stmib	sp, {r2, sl}
   19f08:	str	r5, [sp, #12]
   19f0c:	str	r3, [sp, #20]
   19f10:	mov	r3, r5
   19f14:	str	r2, [sp, #24]
   19f18:	mov	r2, r5
   19f1c:	str	r5, [sp, #16]
   19f20:	ldr	r0, [r4, #204]	; 0xcc
   19f24:	bl	140bc <fprintf@plt>
   19f28:	ldr	r6, [r6]
   19f2c:	b	19e80 <__flatcc_gen_sort@@Base+0x1834>
   19f30:	ldr	r2, [r6, #4]
   19f34:	mov	r1, r8
   19f38:	ldrd	r2, [r2]
   19f3c:	str	r3, [sp]
   19f40:	stmib	sp, {r2, r4, r5}
   19f44:	str	r5, [sp, #16]
   19f48:	str	r3, [sp, #20]
   19f4c:	mov	r3, r5
   19f50:	str	r2, [sp, #24]
   19f54:	mov	r2, r5
   19f58:	b	19f20 <__flatcc_gen_sort@@Base+0x18d4>
   19f5c:	ldr	r3, [pc, #652]	; 1a1f0 <__flatcc_gen_sort@@Base+0x1ba4>
   19f60:	ldr	r0, [pc, #584]	; 1a1b0 <__flatcc_gen_sort@@Base+0x1b64>
   19f64:	ldr	r2, [pc, #584]	; 1a1b4 <__flatcc_gen_sort@@Base+0x1b68>
   19f68:	str	r3, [sp]
   19f6c:	movw	r3, #1608	; 0x648
   19f70:	ldr	r1, [pc, #576]	; 1a1b8 <__flatcc_gen_sort@@Base+0x1b6c>
   19f74:	ldr	r0, [r0]
   19f78:	bl	140bc <fprintf@plt>
   19f7c:	ldr	r3, [pc, #624]	; 1a1f4 <__flatcc_gen_sort@@Base+0x1ba8>
   19f80:	movw	r2, #1608	; 0x648
   19f84:	b	19c94 <__flatcc_gen_sort@@Base+0x1648>
   19f88:	ldrh	r7, [r5, #8]
   19f8c:	cmp	r7, #0
   19f90:	bne	1a06c <__flatcc_gen_sort@@Base+0x1a20>
   19f94:	mov	r1, r5
   19f98:	mov	r0, r4
   19f9c:	ldr	r9, [pc, #596]	; 1a1f8 <__flatcc_gen_sort@@Base+0x1bac>
   19fa0:	bl	1924c <__flatcc_gen_sort@@Base+0xc00>
   19fa4:	ldrh	r8, [r5, #92]	; 0x5c
   19fa8:	mov	r2, #220	; 0xdc
   19fac:	mov	r1, r7
   19fb0:	mov	r0, sl
   19fb4:	ands	r8, r8, #8
   19fb8:	moveq	r3, #1
   19fbc:	movne	r3, #0
   19fc0:	str	r3, [sp, #36]	; 0x24
   19fc4:	bl	140d4 <memset@plt>
   19fc8:	mov	r1, sl
   19fcc:	mov	r0, r5
   19fd0:	bl	18778 <__flatcc_gen_sort@@Base+0x12c>
   19fd4:	mov	r3, sl
   19fd8:	mov	r2, sl
   19fdc:	ldr	r1, [pc, #536]	; 1a1fc <__flatcc_gen_sort@@Base+0x1bb0>
   19fe0:	ldr	r0, [r4, #204]	; 0xcc
   19fe4:	stm	sp, {r4, sl}
   19fe8:	bl	140bc <fprintf@plt>
   19fec:	mov	r2, sl
   19ff0:	ldr	r1, [pc, #520]	; 1a200 <__flatcc_gen_sort@@Base+0x1bb4>
   19ff4:	ldr	r0, [r4, #204]	; 0xcc
   19ff8:	bl	140bc <fprintf@plt>
   19ffc:	ldr	r6, [r5, #24]
   1a000:	cmp	r6, #0
   1a004:	bne	1a074 <__flatcc_gen_sort@@Base+0x1a28>
   1a008:	ldr	r3, [sp, #36]	; 0x24
   1a00c:	tst	r7, r3
   1a010:	bne	1a0fc <__flatcc_gen_sort@@Base+0x1ab0>
   1a014:	mov	r2, sl
   1a018:	ldr	r1, [pc, #484]	; 1a204 <__flatcc_gen_sort@@Base+0x1bb8>
   1a01c:	ldr	r0, [r4, #204]	; 0xcc
   1a020:	bl	140bc <fprintf@plt>
   1a024:	mov	r2, #220	; 0xdc
   1a028:	mov	r1, #0
   1a02c:	mov	r0, sl
   1a030:	bl	140d4 <memset@plt>
   1a034:	mov	r1, sl
   1a038:	mov	r0, r5
   1a03c:	bl	18778 <__flatcc_gen_sort@@Base+0x12c>
   1a040:	ldr	r1, [pc, #448]	; 1a208 <__flatcc_gen_sort@@Base+0x1bbc>
   1a044:	mov	r3, r4
   1a048:	mov	r2, r4
   1a04c:	ldr	r0, [r4, #204]	; 0xcc
   1a050:	str	sl, [sp]
   1a054:	str	sl, [sp, #4]
   1a058:	str	sl, [sp, #8]
   1a05c:	bl	140bc <fprintf@plt>
   1a060:	mov	r0, #10
   1a064:	ldr	r1, [r4, #204]	; 0xcc
   1a068:	bl	1411c <fputc@plt>
   1a06c:	ldr	r5, [r5]
   1a070:	b	19948 <__flatcc_gen_sort@@Base+0x12fc>
   1a074:	ldrh	r3, [r6, #72]	; 0x48
   1a078:	tst	r3, #4
   1a07c:	bne	1a0d8 <__flatcc_gen_sort@@Base+0x1a8c>
   1a080:	ldrh	lr, [r6, #24]
   1a084:	ldr	r3, [r6, #4]
   1a088:	ldr	r0, [r4, #204]	; 0xcc
   1a08c:	cmp	lr, #14
   1a090:	ldr	ip, [r3]
   1a094:	ldr	r1, [r3, #4]
   1a098:	ldrd	r2, [r6, #96]	; 0x60
   1a09c:	bne	1a0e0 <__flatcc_gen_sort@@Base+0x1a94>
   1a0a0:	ldr	lr, [r6, #16]
   1a0a4:	ldrh	lr, [lr, #8]
   1a0a8:	cmp	lr, #4
   1a0ac:	bne	1a0e0 <__flatcc_gen_sort@@Base+0x1a94>
   1a0b0:	cmp	r8, #0
   1a0b4:	ldrne	r7, [sp, #32]
   1a0b8:	bne	1a0e0 <__flatcc_gen_sort@@Base+0x1a94>
   1a0bc:	str	ip, [sp]
   1a0c0:	strd	r2, [sp, #8]
   1a0c4:	mov	r3, r1
   1a0c8:	mov	r2, sl
   1a0cc:	mov	r1, r9
   1a0d0:	bl	140bc <fprintf@plt>
   1a0d4:	ldr	r7, [sp, #32]
   1a0d8:	ldr	r6, [r6, #108]	; 0x6c
   1a0dc:	b	1a000 <__flatcc_gen_sort@@Base+0x19b4>
   1a0e0:	str	ip, [sp]
   1a0e4:	strd	r2, [sp, #8]
   1a0e8:	mov	r3, r1
   1a0ec:	mov	r2, sl
   1a0f0:	mov	r1, fp
   1a0f4:	bl	140bc <fprintf@plt>
   1a0f8:	b	1a0d8 <__flatcc_gen_sort@@Base+0x1a8c>
   1a0fc:	ldr	r7, [pc, #264]	; 1a20c <__flatcc_gen_sort@@Base+0x1bc0>
   1a100:	ldr	r6, [r5, #24]
   1a104:	cmp	r6, #0
   1a108:	beq	1a014 <__flatcc_gen_sort@@Base+0x19c8>
   1a10c:	ldrh	r3, [r6, #72]	; 0x48
   1a110:	tst	r3, #4
   1a114:	bne	1a15c <__flatcc_gen_sort@@Base+0x1b10>
   1a118:	ldrh	r3, [r6, #24]
   1a11c:	cmp	r3, #14
   1a120:	bne	1a15c <__flatcc_gen_sort@@Base+0x1b10>
   1a124:	ldr	r3, [r6, #16]
   1a128:	ldrh	r3, [r3, #8]
   1a12c:	cmp	r3, #4
   1a130:	bne	1a15c <__flatcc_gen_sort@@Base+0x1b10>
   1a134:	ldr	r1, [r6, #4]
   1a138:	ldrd	r2, [r6, #96]	; 0x60
   1a13c:	ldr	r0, [r4, #204]	; 0xcc
   1a140:	strd	r2, [sp, #8]
   1a144:	mov	r2, sl
   1a148:	ldr	r3, [r1]
   1a14c:	str	r3, [sp]
   1a150:	ldr	r3, [r1, #4]
   1a154:	mov	r1, r7
   1a158:	bl	140bc <fprintf@plt>
   1a15c:	ldr	r6, [r6, #108]	; 0x6c
   1a160:	b	1a104 <__flatcc_gen_sort@@Base+0x1ab8>
   1a164:			; <UNDEFINED> instruction: 0x000396bd
   1a168:	andeq	r9, r3, sl, asr #14
   1a16c:	andeq	r9, r3, r3, ror #18
   1a170:	ldrdeq	r9, [r3], -pc	; <UNPREDICTABLE>
   1a174:	andeq	r9, r3, sp, ror #19
   1a178:	andeq	r9, r3, r0, lsr fp
   1a17c:	andeq	r9, r3, r2, lsl r7
   1a180:	andeq	r9, r3, r2, asr #14
   1a184:	andeq	r9, r3, r3, asr #14
   1a188:	andeq	r9, r3, pc, lsr r7
   1a18c:	andeq	r9, r3, r9, ror #14
   1a190:	andeq	r9, r3, r4, asr r8
   1a194:	andeq	r9, r3, r2, lsl #17
   1a198:	muleq	r3, fp, r8
   1a19c:	andeq	r9, r3, r3, lsl #15
   1a1a0:	andeq	r9, r3, pc, lsl #15
   1a1a4:	muleq	r3, pc, r7	; <UNPREDICTABLE>
   1a1a8:	andeq	r9, r3, lr, lsr #15
   1a1ac:	andeq	r9, r3, r3, asr #15
   1a1b0:	strheq	fp, [r5], -r0
   1a1b4:	andeq	r9, r3, fp, rrx
   1a1b8:	ldrdeq	r0, [r3], -r9
   1a1bc:			; <UNDEFINED> instruction: 0x00038fb3
   1a1c0:	andeq	r9, r3, fp, lsr r2
   1a1c4:	andeq	r9, r3, r1, asr #16
   1a1c8:	andeq	r9, r3, pc, ror #15
   1a1cc:	andeq	r9, r3, r8, lsl #16
   1a1d0:	strdeq	r2, [r3], -r7
   1a1d4:	muleq	r3, r4, lr
   1a1d8:	andeq	r9, r3, r4, lsr r8
   1a1dc:	andeq	r9, r3, pc, lsr r8
   1a1e0:	andeq	r9, r3, r9, ror #16
   1a1e4:	andeq	r9, r3, r4, ror r1
   1a1e8:	andeq	r9, r3, r9, lsr r8
   1a1ec:	andeq	r9, r3, pc, lsl #21
   1a1f0:	andeq	r9, r3, r3, ror #20
   1a1f4:	andeq	r8, r3, sl, asr #31
   1a1f8:	andeq	r9, r3, r8, lsl #22
   1a1fc:	andeq	r9, r3, pc, lsr #21
   1a200:	strdeq	r9, [r3], -r2
   1a204:	andeq	r9, r3, r2, asr fp
   1a208:	andeq	r9, r3, r7, lsl #23
   1a20c:	andeq	r9, r3, sl, asr #23

0001a210 <__flatcc_fb_gen_common_c_builder_header@@Base>:
   1a210:	push	{r0, r1, r2, r4, r5, lr}
   1a214:	add	r5, r0, #102	; 0x66
   1a218:	mov	r4, r0
   1a21c:	mov	r2, r5
   1a220:	ldr	r1, [pc, #1764]	; 1a90c <__flatcc_fb_gen_common_c_builder_header@@Base+0x6fc>
   1a224:	ldr	r0, [r0, #204]	; 0xcc
   1a228:	bl	140bc <fprintf@plt>
   1a22c:	mov	r2, r5
   1a230:	ldr	r1, [pc, #1752]	; 1a910 <__flatcc_fb_gen_common_c_builder_header@@Base+0x700>
   1a234:	ldr	r0, [r4, #204]	; 0xcc
   1a238:	bl	140bc <fprintf@plt>
   1a23c:	ldr	r0, [pc, #1744]	; 1a914 <__flatcc_fb_gen_common_c_builder_header@@Base+0x704>
   1a240:	ldr	r1, [r4, #204]	; 0xcc
   1a244:	bl	14158 <fputs@plt>
   1a248:	ldr	r0, [pc, #1736]	; 1a918 <__flatcc_fb_gen_common_c_builder_header@@Base+0x708>
   1a24c:	ldr	r1, [r4, #204]	; 0xcc
   1a250:	bl	14158 <fputs@plt>
   1a254:	ldr	r3, [r4, #212]	; 0xd4
   1a258:	ldr	r3, [r3, #140]	; 0x8c
   1a25c:	cmp	r3, #0
   1a260:	beq	1a270 <__flatcc_fb_gen_common_c_builder_header@@Base+0x60>
   1a264:	ldr	r0, [pc, #1712]	; 1a91c <__flatcc_fb_gen_common_c_builder_header@@Base+0x70c>
   1a268:	ldr	r1, [r4, #204]	; 0xcc
   1a26c:	bl	14158 <fputs@plt>
   1a270:	ldr	r0, [pc, #1704]	; 1a920 <__flatcc_fb_gen_common_c_builder_header@@Base+0x710>
   1a274:	ldr	r1, [r4, #204]	; 0xcc
   1a278:	bl	14158 <fputs@plt>
   1a27c:	ldr	r0, [pc, #1696]	; 1a924 <__flatcc_fb_gen_common_c_builder_header@@Base+0x714>
   1a280:	ldr	r1, [r4, #204]	; 0xcc
   1a284:	bl	14158 <fputs@plt>
   1a288:	ldr	r0, [pc, #1688]	; 1a928 <__flatcc_fb_gen_common_c_builder_header@@Base+0x718>
   1a28c:	ldr	r1, [r4, #204]	; 0xcc
   1a290:	bl	14158 <fputs@plt>
   1a294:	ldr	r1, [pc, #1680]	; 1a92c <__flatcc_fb_gen_common_c_builder_header@@Base+0x71c>
   1a298:	mov	r0, r4
   1a29c:	bl	13fd8 <strcmp@plt>
   1a2a0:	cmp	r0, #0
   1a2a4:	beq	1a308 <__flatcc_fb_gen_common_c_builder_header@@Base+0xf8>
   1a2a8:	mov	r2, r4
   1a2ac:	ldr	r1, [pc, #1660]	; 1a930 <__flatcc_fb_gen_common_c_builder_header@@Base+0x720>
   1a2b0:	ldr	r0, [r4, #204]	; 0xcc
   1a2b4:	bl	140bc <fprintf@plt>
   1a2b8:	mov	r2, r4
   1a2bc:	ldr	r1, [pc, #1648]	; 1a934 <__flatcc_fb_gen_common_c_builder_header@@Base+0x724>
   1a2c0:	ldr	r0, [r4, #204]	; 0xcc
   1a2c4:	bl	140bc <fprintf@plt>
   1a2c8:	mov	r2, r4
   1a2cc:	ldr	r1, [pc, #1636]	; 1a938 <__flatcc_fb_gen_common_c_builder_header@@Base+0x728>
   1a2d0:	ldr	r0, [r4, #204]	; 0xcc
   1a2d4:	bl	140bc <fprintf@plt>
   1a2d8:	mov	r2, r4
   1a2dc:	ldr	r1, [pc, #1624]	; 1a93c <__flatcc_fb_gen_common_c_builder_header@@Base+0x72c>
   1a2e0:	ldr	r0, [r4, #204]	; 0xcc
   1a2e4:	bl	140bc <fprintf@plt>
   1a2e8:	mov	r2, r4
   1a2ec:	ldr	r1, [pc, #1612]	; 1a940 <__flatcc_fb_gen_common_c_builder_header@@Base+0x730>
   1a2f0:	ldr	r0, [r4, #204]	; 0xcc
   1a2f4:	bl	140bc <fprintf@plt>
   1a2f8:	mov	r2, r4
   1a2fc:	ldr	r1, [pc, #1600]	; 1a944 <__flatcc_fb_gen_common_c_builder_header@@Base+0x734>
   1a300:	ldr	r0, [r4, #204]	; 0xcc
   1a304:	bl	140bc <fprintf@plt>
   1a308:	mov	r3, r4
   1a30c:	mov	r2, r4
   1a310:	ldr	r1, [pc, #1584]	; 1a948 <__flatcc_fb_gen_common_c_builder_header@@Base+0x738>
   1a314:	ldr	r0, [r4, #204]	; 0xcc
   1a318:	bl	140bc <fprintf@plt>
   1a31c:	mov	r3, r4
   1a320:	mov	r2, r4
   1a324:	ldr	r1, [pc, #1568]	; 1a94c <__flatcc_fb_gen_common_c_builder_header@@Base+0x73c>
   1a328:	ldr	r0, [r4, #204]	; 0xcc
   1a32c:	bl	140bc <fprintf@plt>
   1a330:	ldr	r1, [pc, #1560]	; 1a950 <__flatcc_fb_gen_common_c_builder_header@@Base+0x740>
   1a334:	mov	r0, r4
   1a338:	bl	13fd8 <strcmp@plt>
   1a33c:	cmp	r0, #0
   1a340:	beq	1a364 <__flatcc_fb_gen_common_c_builder_header@@Base+0x154>
   1a344:	mov	r2, r4
   1a348:	ldr	r1, [pc, #1540]	; 1a954 <__flatcc_fb_gen_common_c_builder_header@@Base+0x744>
   1a34c:	ldr	r0, [r4, #204]	; 0xcc
   1a350:	bl	140bc <fprintf@plt>
   1a354:	mov	r2, r4
   1a358:	ldr	r1, [pc, #1528]	; 1a958 <__flatcc_fb_gen_common_c_builder_header@@Base+0x748>
   1a35c:	ldr	r0, [r4, #204]	; 0xcc
   1a360:	bl	140bc <fprintf@plt>
   1a364:	mov	r0, #10
   1a368:	ldr	r1, [r4, #204]	; 0xcc
   1a36c:	bl	1411c <fputc@plt>
   1a370:	mov	r2, r4
   1a374:	ldr	r1, [pc, #1504]	; 1a95c <__flatcc_fb_gen_common_c_builder_header@@Base+0x74c>
   1a378:	ldr	r0, [r4, #204]	; 0xcc
   1a37c:	bl	140bc <fprintf@plt>
   1a380:	mov	r2, r4
   1a384:	ldr	r1, [pc, #1492]	; 1a960 <__flatcc_fb_gen_common_c_builder_header@@Base+0x750>
   1a388:	ldr	r0, [r4, #204]	; 0xcc
   1a38c:	bl	140bc <fprintf@plt>
   1a390:	mov	r3, r4
   1a394:	mov	r2, r4
   1a398:	ldr	r1, [pc, #1476]	; 1a964 <__flatcc_fb_gen_common_c_builder_header@@Base+0x754>
   1a39c:	ldr	r0, [r4, #204]	; 0xcc
   1a3a0:	str	r4, [sp]
   1a3a4:	bl	140bc <fprintf@plt>
   1a3a8:	mov	r2, r4
   1a3ac:	ldr	r1, [pc, #1460]	; 1a968 <__flatcc_fb_gen_common_c_builder_header@@Base+0x758>
   1a3b0:	ldr	r0, [r4, #204]	; 0xcc
   1a3b4:	bl	140bc <fprintf@plt>
   1a3b8:	mov	r2, r4
   1a3bc:	ldr	r1, [pc, #1448]	; 1a96c <__flatcc_fb_gen_common_c_builder_header@@Base+0x75c>
   1a3c0:	ldr	r0, [r4, #204]	; 0xcc
   1a3c4:	bl	140bc <fprintf@plt>
   1a3c8:	mov	r2, r4
   1a3cc:	ldr	r1, [pc, #1436]	; 1a970 <__flatcc_fb_gen_common_c_builder_header@@Base+0x760>
   1a3d0:	ldr	r0, [r4, #204]	; 0xcc
   1a3d4:	bl	140bc <fprintf@plt>
   1a3d8:	mov	r2, r4
   1a3dc:	ldr	r1, [pc, #1424]	; 1a974 <__flatcc_fb_gen_common_c_builder_header@@Base+0x764>
   1a3e0:	ldr	r0, [r4, #204]	; 0xcc
   1a3e4:	bl	140bc <fprintf@plt>
   1a3e8:	mov	r3, r4
   1a3ec:	mov	r2, r4
   1a3f0:	ldr	r1, [pc, #1408]	; 1a978 <__flatcc_fb_gen_common_c_builder_header@@Base+0x768>
   1a3f4:	ldr	r0, [r4, #204]	; 0xcc
   1a3f8:	bl	140bc <fprintf@plt>
   1a3fc:	mov	r3, r4
   1a400:	mov	r2, r4
   1a404:	ldr	r1, [pc, #1392]	; 1a97c <__flatcc_fb_gen_common_c_builder_header@@Base+0x76c>
   1a408:	ldr	r0, [r4, #204]	; 0xcc
   1a40c:	str	r4, [sp]
   1a410:	bl	140bc <fprintf@plt>
   1a414:	mov	r2, r4
   1a418:	ldr	r1, [pc, #1376]	; 1a980 <__flatcc_fb_gen_common_c_builder_header@@Base+0x770>
   1a41c:	ldr	r0, [r4, #204]	; 0xcc
   1a420:	bl	140bc <fprintf@plt>
   1a424:	mov	r2, r4
   1a428:	ldr	r1, [pc, #1364]	; 1a984 <__flatcc_fb_gen_common_c_builder_header@@Base+0x774>
   1a42c:	ldr	r0, [r4, #204]	; 0xcc
   1a430:	bl	140bc <fprintf@plt>
   1a434:	mov	r2, r4
   1a438:	ldr	r1, [pc, #1352]	; 1a988 <__flatcc_fb_gen_common_c_builder_header@@Base+0x778>
   1a43c:	ldr	r0, [r4, #204]	; 0xcc
   1a440:	bl	140bc <fprintf@plt>
   1a444:	mov	r3, r4
   1a448:	mov	r2, r4
   1a44c:	ldr	r1, [pc, #1336]	; 1a98c <__flatcc_fb_gen_common_c_builder_header@@Base+0x77c>
   1a450:	ldr	r0, [r4, #204]	; 0xcc
   1a454:	bl	140bc <fprintf@plt>
   1a458:	mov	r2, r4
   1a45c:	ldr	r1, [pc, #1324]	; 1a990 <__flatcc_fb_gen_common_c_builder_header@@Base+0x780>
   1a460:	ldr	r0, [r4, #204]	; 0xcc
   1a464:	bl	140bc <fprintf@plt>
   1a468:	mov	r3, r4
   1a46c:	mov	r2, r4
   1a470:	ldr	r1, [pc, #1308]	; 1a994 <__flatcc_fb_gen_common_c_builder_header@@Base+0x784>
   1a474:	ldr	r0, [r4, #204]	; 0xcc
   1a478:	str	r4, [sp]
   1a47c:	bl	140bc <fprintf@plt>
   1a480:	mov	r3, r4
   1a484:	mov	r2, r4
   1a488:	ldr	r1, [pc, #1288]	; 1a998 <__flatcc_fb_gen_common_c_builder_header@@Base+0x788>
   1a48c:	ldr	r0, [r4, #204]	; 0xcc
   1a490:	str	r4, [sp]
   1a494:	str	r4, [sp, #4]
   1a498:	bl	140bc <fprintf@plt>
   1a49c:	mov	r3, r4
   1a4a0:	mov	r2, r4
   1a4a4:	ldr	r1, [pc, #1264]	; 1a99c <__flatcc_fb_gen_common_c_builder_header@@Base+0x78c>
   1a4a8:	ldr	r0, [r4, #204]	; 0xcc
   1a4ac:	bl	140bc <fprintf@plt>
   1a4b0:	mov	r3, r4
   1a4b4:	mov	r2, r4
   1a4b8:	ldr	r1, [pc, #1248]	; 1a9a0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x790>
   1a4bc:	ldr	r0, [r4, #204]	; 0xcc
   1a4c0:	str	r4, [sp]
   1a4c4:	str	r4, [sp, #4]
   1a4c8:	bl	140bc <fprintf@plt>
   1a4cc:	mov	r3, r4
   1a4d0:	mov	r2, r4
   1a4d4:	ldr	r1, [pc, #1224]	; 1a9a4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x794>
   1a4d8:	ldr	r0, [r4, #204]	; 0xcc
   1a4dc:	bl	140bc <fprintf@plt>
   1a4e0:	mov	r2, r4
   1a4e4:	ldr	r1, [pc, #1212]	; 1a9a8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x798>
   1a4e8:	ldr	r0, [r4, #204]	; 0xcc
   1a4ec:	bl	140bc <fprintf@plt>
   1a4f0:	mov	r2, r4
   1a4f4:	ldr	r1, [pc, #1200]	; 1a9ac <__flatcc_fb_gen_common_c_builder_header@@Base+0x79c>
   1a4f8:	ldr	r0, [r4, #204]	; 0xcc
   1a4fc:	bl	140bc <fprintf@plt>
   1a500:	mov	r2, r4
   1a504:	ldr	r1, [pc, #1188]	; 1a9b0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7a0>
   1a508:	ldr	r0, [r4, #204]	; 0xcc
   1a50c:	bl	140bc <fprintf@plt>
   1a510:	mov	r2, r4
   1a514:	ldr	r1, [pc, #1176]	; 1a9b4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7a4>
   1a518:	ldr	r0, [r4, #204]	; 0xcc
   1a51c:	bl	140bc <fprintf@plt>
   1a520:	mov	r3, r4
   1a524:	mov	r2, r4
   1a528:	ldr	r1, [pc, #1160]	; 1a9b8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7a8>
   1a52c:	ldr	r0, [r4, #204]	; 0xcc
   1a530:	bl	140bc <fprintf@plt>
   1a534:	mov	r2, r4
   1a538:	ldr	r1, [pc, #1148]	; 1a9bc <__flatcc_fb_gen_common_c_builder_header@@Base+0x7ac>
   1a53c:	ldr	r0, [r4, #204]	; 0xcc
   1a540:	bl	140bc <fprintf@plt>
   1a544:	mov	r2, r4
   1a548:	ldr	r1, [pc, #1136]	; 1a9c0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7b0>
   1a54c:	ldr	r0, [r4, #204]	; 0xcc
   1a550:	bl	140bc <fprintf@plt>
   1a554:	mov	r3, r4
   1a558:	mov	r2, r4
   1a55c:	ldr	r1, [pc, #1120]	; 1a9c4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7b4>
   1a560:	ldr	r0, [r4, #204]	; 0xcc
   1a564:	bl	140bc <fprintf@plt>
   1a568:	mov	r3, r4
   1a56c:	mov	r2, r4
   1a570:	ldr	r1, [pc, #1104]	; 1a9c8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7b8>
   1a574:	ldr	r0, [r4, #204]	; 0xcc
   1a578:	bl	140bc <fprintf@plt>
   1a57c:	mov	r3, r4
   1a580:	mov	r2, r4
   1a584:	ldr	r1, [pc, #1088]	; 1a9cc <__flatcc_fb_gen_common_c_builder_header@@Base+0x7bc>
   1a588:	ldr	r0, [r4, #204]	; 0xcc
   1a58c:	bl	140bc <fprintf@plt>
   1a590:	mov	r3, r4
   1a594:	mov	r2, r4
   1a598:	ldr	r1, [pc, #1072]	; 1a9d0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c0>
   1a59c:	ldr	r0, [r4, #204]	; 0xcc
   1a5a0:	bl	140bc <fprintf@plt>
   1a5a4:	mov	r3, r4
   1a5a8:	mov	r2, r4
   1a5ac:	ldr	r1, [pc, #1056]	; 1a9d4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c4>
   1a5b0:	ldr	r0, [r4, #204]	; 0xcc
   1a5b4:	str	r4, [sp]
   1a5b8:	bl	140bc <fprintf@plt>
   1a5bc:	mov	r3, r4
   1a5c0:	mov	r2, r4
   1a5c4:	ldr	r1, [pc, #1036]	; 1a9d8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c8>
   1a5c8:	ldr	r0, [r4, #204]	; 0xcc
   1a5cc:	bl	140bc <fprintf@plt>
   1a5d0:	mov	r2, r4
   1a5d4:	ldr	r1, [pc, #1024]	; 1a9dc <__flatcc_fb_gen_common_c_builder_header@@Base+0x7cc>
   1a5d8:	ldr	r0, [r4, #204]	; 0xcc
   1a5dc:	bl	140bc <fprintf@plt>
   1a5e0:	mov	r2, r4
   1a5e4:	ldr	r1, [pc, #1012]	; 1a9e0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7d0>
   1a5e8:	ldr	r0, [r4, #204]	; 0xcc
   1a5ec:	bl	140bc <fprintf@plt>
   1a5f0:	mov	r2, r4
   1a5f4:	ldr	r1, [pc, #1000]	; 1a9e4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7d4>
   1a5f8:	ldr	r0, [r4, #204]	; 0xcc
   1a5fc:	bl	140bc <fprintf@plt>
   1a600:	mov	r3, r4
   1a604:	mov	r2, r4
   1a608:	ldr	r1, [pc, #984]	; 1a9e8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7d8>
   1a60c:	ldr	r0, [r4, #204]	; 0xcc
   1a610:	str	r4, [sp]
   1a614:	bl	140bc <fprintf@plt>
   1a618:	mov	r2, r4
   1a61c:	ldr	r1, [pc, #968]	; 1a9ec <__flatcc_fb_gen_common_c_builder_header@@Base+0x7dc>
   1a620:	ldr	r0, [r4, #204]	; 0xcc
   1a624:	bl	140bc <fprintf@plt>
   1a628:	mov	r2, r4
   1a62c:	ldr	r1, [pc, #956]	; 1a9f0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e0>
   1a630:	ldr	r0, [r4, #204]	; 0xcc
   1a634:	bl	140bc <fprintf@plt>
   1a638:	mov	r2, r4
   1a63c:	ldr	r1, [pc, #944]	; 1a9f4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e4>
   1a640:	ldr	r0, [r4, #204]	; 0xcc
   1a644:	bl	140bc <fprintf@plt>
   1a648:	mov	r2, r4
   1a64c:	ldr	r1, [pc, #932]	; 1a9f8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e8>
   1a650:	ldr	r0, [r4, #204]	; 0xcc
   1a654:	bl	140bc <fprintf@plt>
   1a658:	mov	r3, r4
   1a65c:	mov	r2, r4
   1a660:	ldr	r1, [pc, #916]	; 1a9fc <__flatcc_fb_gen_common_c_builder_header@@Base+0x7ec>
   1a664:	ldr	r0, [r4, #204]	; 0xcc
   1a668:	bl	140bc <fprintf@plt>
   1a66c:	mov	r2, r4
   1a670:	ldr	r1, [pc, #904]	; 1aa00 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f0>
   1a674:	ldr	r0, [r4, #204]	; 0xcc
   1a678:	bl	140bc <fprintf@plt>
   1a67c:	mov	r2, r4
   1a680:	ldr	r1, [pc, #892]	; 1aa04 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f4>
   1a684:	ldr	r0, [r4, #204]	; 0xcc
   1a688:	bl	140bc <fprintf@plt>
   1a68c:	mov	r2, r4
   1a690:	ldr	r1, [pc, #880]	; 1aa08 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f8>
   1a694:	ldr	r0, [r4, #204]	; 0xcc
   1a698:	bl	140bc <fprintf@plt>
   1a69c:	mov	r2, r4
   1a6a0:	ldr	r1, [pc, #868]	; 1aa0c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7fc>
   1a6a4:	ldr	r0, [r4, #204]	; 0xcc
   1a6a8:	bl	140bc <fprintf@plt>
   1a6ac:	mov	r2, r4
   1a6b0:	ldr	r1, [pc, #856]	; 1aa10 <__flatcc_fb_gen_common_c_builder_header@@Base+0x800>
   1a6b4:	ldr	r0, [r4, #204]	; 0xcc
   1a6b8:	bl	140bc <fprintf@plt>
   1a6bc:	mov	r2, r4
   1a6c0:	ldr	r1, [pc, #844]	; 1aa14 <__flatcc_fb_gen_common_c_builder_header@@Base+0x804>
   1a6c4:	ldr	r0, [r4, #204]	; 0xcc
   1a6c8:	bl	140bc <fprintf@plt>
   1a6cc:	mov	r2, r4
   1a6d0:	ldr	r1, [pc, #832]	; 1aa18 <__flatcc_fb_gen_common_c_builder_header@@Base+0x808>
   1a6d4:	ldr	r0, [r4, #204]	; 0xcc
   1a6d8:	bl	140bc <fprintf@plt>
   1a6dc:	mov	r2, r4
   1a6e0:	ldr	r1, [pc, #820]	; 1aa1c <__flatcc_fb_gen_common_c_builder_header@@Base+0x80c>
   1a6e4:	ldr	r0, [r4, #204]	; 0xcc
   1a6e8:	bl	140bc <fprintf@plt>
   1a6ec:	mov	r2, r4
   1a6f0:	ldr	r1, [pc, #808]	; 1aa20 <__flatcc_fb_gen_common_c_builder_header@@Base+0x810>
   1a6f4:	ldr	r0, [r4, #204]	; 0xcc
   1a6f8:	bl	140bc <fprintf@plt>
   1a6fc:	mov	r2, r4
   1a700:	ldr	r1, [pc, #796]	; 1aa24 <__flatcc_fb_gen_common_c_builder_header@@Base+0x814>
   1a704:	ldr	r0, [r4, #204]	; 0xcc
   1a708:	bl	140bc <fprintf@plt>
   1a70c:	mov	r2, r4
   1a710:	ldr	r1, [pc, #784]	; 1aa28 <__flatcc_fb_gen_common_c_builder_header@@Base+0x818>
   1a714:	ldr	r0, [r4, #204]	; 0xcc
   1a718:	bl	140bc <fprintf@plt>
   1a71c:	mov	r2, r4
   1a720:	ldr	r1, [pc, #772]	; 1aa2c <__flatcc_fb_gen_common_c_builder_header@@Base+0x81c>
   1a724:	ldr	r0, [r4, #204]	; 0xcc
   1a728:	bl	140bc <fprintf@plt>
   1a72c:	mov	r2, r4
   1a730:	ldr	r1, [pc, #760]	; 1aa30 <__flatcc_fb_gen_common_c_builder_header@@Base+0x820>
   1a734:	ldr	r0, [r4, #204]	; 0xcc
   1a738:	bl	140bc <fprintf@plt>
   1a73c:	mov	r2, r4
   1a740:	ldr	r1, [pc, #748]	; 1aa34 <__flatcc_fb_gen_common_c_builder_header@@Base+0x824>
   1a744:	ldr	r0, [r4, #204]	; 0xcc
   1a748:	bl	140bc <fprintf@plt>
   1a74c:	mov	r2, r4
   1a750:	ldr	r1, [pc, #736]	; 1aa38 <__flatcc_fb_gen_common_c_builder_header@@Base+0x828>
   1a754:	ldr	r0, [r4, #204]	; 0xcc
   1a758:	bl	140bc <fprintf@plt>
   1a75c:	mov	r2, r4
   1a760:	ldr	r1, [pc, #724]	; 1aa3c <__flatcc_fb_gen_common_c_builder_header@@Base+0x82c>
   1a764:	ldr	r0, [r4, #204]	; 0xcc
   1a768:	bl	140bc <fprintf@plt>
   1a76c:	mov	r2, r4
   1a770:	ldr	r1, [pc, #712]	; 1aa40 <__flatcc_fb_gen_common_c_builder_header@@Base+0x830>
   1a774:	ldr	r0, [r4, #204]	; 0xcc
   1a778:	bl	140bc <fprintf@plt>
   1a77c:	mov	r0, #10
   1a780:	ldr	r1, [r4, #204]	; 0xcc
   1a784:	bl	1411c <fputc@plt>
   1a788:	mov	r3, r4
   1a78c:	mov	r2, r4
   1a790:	ldr	r1, [pc, #684]	; 1aa44 <__flatcc_fb_gen_common_c_builder_header@@Base+0x834>
   1a794:	ldr	r0, [r4, #204]	; 0xcc
   1a798:	str	r4, [sp]
   1a79c:	bl	140bc <fprintf@plt>
   1a7a0:	mov	r3, r4
   1a7a4:	mov	r2, r4
   1a7a8:	ldr	r1, [pc, #664]	; 1aa48 <__flatcc_fb_gen_common_c_builder_header@@Base+0x838>
   1a7ac:	ldr	r0, [r4, #204]	; 0xcc
   1a7b0:	str	r4, [sp]
   1a7b4:	bl	140bc <fprintf@plt>
   1a7b8:	mov	r3, r4
   1a7bc:	mov	r2, r4
   1a7c0:	ldr	r1, [pc, #644]	; 1aa4c <__flatcc_fb_gen_common_c_builder_header@@Base+0x83c>
   1a7c4:	ldr	r0, [r4, #204]	; 0xcc
   1a7c8:	str	r4, [sp]
   1a7cc:	str	r4, [sp, #4]
   1a7d0:	bl	140bc <fprintf@plt>
   1a7d4:	mov	r3, r4
   1a7d8:	mov	r2, r4
   1a7dc:	ldr	r1, [pc, #620]	; 1aa50 <__flatcc_fb_gen_common_c_builder_header@@Base+0x840>
   1a7e0:	ldr	r0, [r4, #204]	; 0xcc
   1a7e4:	str	r4, [sp]
   1a7e8:	bl	140bc <fprintf@plt>
   1a7ec:	mov	r3, r4
   1a7f0:	mov	r2, r4
   1a7f4:	ldr	r1, [pc, #600]	; 1aa54 <__flatcc_fb_gen_common_c_builder_header@@Base+0x844>
   1a7f8:	ldr	r0, [r4, #204]	; 0xcc
   1a7fc:	str	r4, [sp]
   1a800:	bl	140bc <fprintf@plt>
   1a804:	mov	r3, r4
   1a808:	mov	r2, r4
   1a80c:	ldr	r1, [pc, #580]	; 1aa58 <__flatcc_fb_gen_common_c_builder_header@@Base+0x848>
   1a810:	ldr	r0, [r4, #204]	; 0xcc
   1a814:	str	r4, [sp]
   1a818:	bl	140bc <fprintf@plt>
   1a81c:	mov	r3, r4
   1a820:	mov	r2, r4
   1a824:	ldr	r1, [pc, #560]	; 1aa5c <__flatcc_fb_gen_common_c_builder_header@@Base+0x84c>
   1a828:	ldr	r0, [r4, #204]	; 0xcc
   1a82c:	str	r4, [sp]
   1a830:	bl	140bc <fprintf@plt>
   1a834:	mov	r3, r4
   1a838:	mov	r2, r4
   1a83c:	ldr	r1, [pc, #540]	; 1aa60 <__flatcc_fb_gen_common_c_builder_header@@Base+0x850>
   1a840:	ldr	r0, [r4, #204]	; 0xcc
   1a844:	str	r4, [sp]
   1a848:	bl	140bc <fprintf@plt>
   1a84c:	mov	r3, r4
   1a850:	mov	r2, r4
   1a854:	ldr	r1, [pc, #520]	; 1aa64 <__flatcc_fb_gen_common_c_builder_header@@Base+0x854>
   1a858:	ldr	r0, [r4, #204]	; 0xcc
   1a85c:	str	r4, [sp]
   1a860:	bl	140bc <fprintf@plt>
   1a864:	mov	r3, r4
   1a868:	mov	r2, r4
   1a86c:	ldr	r1, [pc, #500]	; 1aa68 <__flatcc_fb_gen_common_c_builder_header@@Base+0x858>
   1a870:	ldr	r0, [r4, #204]	; 0xcc
   1a874:	str	r4, [sp]
   1a878:	bl	140bc <fprintf@plt>
   1a87c:	mov	r3, r4
   1a880:	mov	r2, r4
   1a884:	ldr	r1, [pc, #480]	; 1aa6c <__flatcc_fb_gen_common_c_builder_header@@Base+0x85c>
   1a888:	ldr	r0, [r4, #204]	; 0xcc
   1a88c:	str	r4, [sp]
   1a890:	bl	140bc <fprintf@plt>
   1a894:	mov	r0, #10
   1a898:	ldr	r1, [r4, #204]	; 0xcc
   1a89c:	bl	1411c <fputc@plt>
   1a8a0:	mov	r3, r4
   1a8a4:	mov	r2, r4
   1a8a8:	ldr	r1, [pc, #448]	; 1aa70 <__flatcc_fb_gen_common_c_builder_header@@Base+0x860>
   1a8ac:	ldr	r0, [r4, #204]	; 0xcc
   1a8b0:	bl	140bc <fprintf@plt>
   1a8b4:	mov	r0, #10
   1a8b8:	ldr	r1, [r4, #204]	; 0xcc
   1a8bc:	bl	1411c <fputc@plt>
   1a8c0:	mov	r3, r4
   1a8c4:	mov	r2, r4
   1a8c8:	ldr	r1, [pc, #420]	; 1aa74 <__flatcc_fb_gen_common_c_builder_header@@Base+0x864>
   1a8cc:	ldr	r0, [r4, #204]	; 0xcc
   1a8d0:	bl	140bc <fprintf@plt>
   1a8d4:	ldr	r3, [r4, #212]	; 0xd4
   1a8d8:	ldr	r3, [r3, #140]	; 0x8c
   1a8dc:	cmp	r3, #0
   1a8e0:	beq	1a8f0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x6e0>
   1a8e4:	ldr	r0, [pc, #396]	; 1aa78 <__flatcc_fb_gen_common_c_builder_header@@Base+0x868>
   1a8e8:	ldr	r1, [r4, #204]	; 0xcc
   1a8ec:	bl	14158 <fputs@plt>
   1a8f0:	ldr	r1, [pc, #388]	; 1aa7c <__flatcc_fb_gen_common_c_builder_header@@Base+0x86c>
   1a8f4:	mov	r2, r5
   1a8f8:	ldr	r0, [r4, #204]	; 0xcc
   1a8fc:	bl	140bc <fprintf@plt>
   1a900:	mov	r0, #0
   1a904:	add	sp, sp, #12
   1a908:	pop	{r4, r5, pc}
   1a90c:	strdeq	r9, [r3], -r6
   1a910:	andeq	r9, r3, r3, lsl ip
   1a914:	muleq	r3, sl, r0
   1a918:	andeq	r9, r3, r0, lsr ip
   1a91c:	andeq	r2, r3, r9, lsr #3
   1a920:	andeq	r9, r3, r6, ror #24
   1a924:	andeq	r9, r3, sp, ror ip
   1a928:	andeq	r8, r3, pc, ror #3
   1a92c:	andeq	r9, r3, r1, lsr #25
   1a930:			; <UNDEFINED> instruction: 0x00039cb1
   1a934:	ldrdeq	r9, [r3], -r8
   1a938:	strdeq	r9, [r3], -pc	; <UNPREDICTABLE>
   1a93c:	andeq	r9, r3, sl, lsr #26
   1a940:	andeq	r9, r3, sp, asr sp
   1a944:	muleq	r3, r8, sp
   1a948:	strdeq	r9, [r3], -r0
   1a94c:	andeq	r9, r3, fp, lsl #28
   1a950:	strdeq	r2, [r3], -r8
   1a954:	andeq	r9, r3, r2, lsr lr
   1a958:	andeq	r9, r3, r3, ror #28
   1a95c:	andeq	r9, r3, r7, lsl #29
   1a960:	strdeq	sl, [r3], -sl	; <UNPREDICTABLE>
   1a964:	andeq	sl, r3, r3, asr #17
   1a968:	andeq	sl, r3, ip, asr #18
   1a96c:	andeq	fp, r3, r7, lsl #8
   1a970:	andeq	fp, r3, r2, ror #15
   1a974:	andeq	fp, r3, r8, lsl lr
   1a978:	muleq	r3, r4, r2
   1a97c:	andeq	ip, r3, r7, lsl #20
   1a980:	andeq	ip, r3, pc, asr #30
   1a984:	andeq	sp, r3, sp, asr #7
   1a988:	andeq	sp, r3, fp, asr r5
   1a98c:			; <UNDEFINED> instruction: 0x0003d8b5
   1a990:			; <UNDEFINED> instruction: 0x0003daba
   1a994:	andeq	sp, r3, r3, lsr #28
   1a998:	andeq	lr, r3, pc, lsl r3
   1a99c:	andeq	lr, r3, r8, lsr #8
   1a9a0:	muleq	r3, r0, r7
   1a9a4:	andeq	lr, r3, lr, lsl #27
   1a9a8:	andeq	lr, r3, r1, asr #30
   1a9ac:	andeq	pc, r3, r6, ror #2
   1a9b0:	andeq	pc, r3, r6, lsr #10
   1a9b4:	andeq	pc, r3, r3, ror #15
   1a9b8:	strdeq	pc, [r3], -r7
   1a9bc:	andeq	pc, r3, r3, ror #25
   1a9c0:	andeq	pc, r3, r4, asr #30
   1a9c4:			; <UNDEFINED> instruction: 0x000402bb
   1a9c8:	andeq	r0, r4, sl, lsl #14
   1a9cc:	andeq	r0, r4, r2, lsr #19
   1a9d0:	muleq	r4, lr, sp
   1a9d4:	andeq	r0, r4, sl, lsr #29
   1a9d8:	andeq	r0, r4, r5, lsr pc
   1a9dc:	andeq	r1, r4, r1, lsl #5
   1a9e0:	andeq	r1, r4, r9, lsl #10
   1a9e4:	muleq	r4, r7, r7
   1a9e8:	andeq	r1, r4, sp, asr #26
   1a9ec:	ldrdeq	r1, [r4], -ip
   1a9f0:	andeq	r1, r4, r8, lsl #28
   1a9f4:	andeq	r1, r4, sl, lsr #28
   1a9f8:	andeq	r1, r4, r4, asr lr
   1a9fc:	andeq	r1, r4, r5, ror lr
   1aa00:	andeq	r1, r4, r1, lsr #29
   1aa04:	andeq	r1, r4, r2, asr #29
   1aa08:	strdeq	r1, [r4], -r0
   1aa0c:	andeq	r1, r4, r3, lsl pc
   1aa10:	andeq	r1, r4, r1, asr #30
   1aa14:	andeq	r1, r4, r4, ror #30
   1aa18:	muleq	r4, r2, pc	; <UNPREDICTABLE>
   1aa1c:			; <UNDEFINED> instruction: 0x00041fb5
   1aa20:	andeq	r1, r4, r1, ror #31
   1aa24:	andeq	r2, r4, r3
   1aa28:	andeq	r2, r4, pc, lsr #32
   1aa2c:	andeq	r2, r4, r1, asr r0
   1aa30:	andeq	r2, r4, sp, ror r0
   1aa34:	muleq	r4, pc, r0	; <UNPREDICTABLE>
   1aa38:	andeq	r2, r4, r9, asr #1
   1aa3c:	andeq	r2, r4, fp, ror #1
   1aa40:	andeq	r2, r4, r7, lsl r1
   1aa44:	andeq	r2, r4, sl, lsr r1
   1aa48:	andeq	r2, r4, r2, ror #2
   1aa4c:	andeq	r2, r4, r8, lsl #3
   1aa50:			; <UNDEFINED> instruction: 0x000421b0
   1aa54:	ldrdeq	r2, [r4], -sl
   1aa58:	andeq	r2, r4, r4, lsl #4
   1aa5c:	andeq	r2, r4, lr, lsr #4
   1aa60:	andeq	r2, r4, r6, asr r2
   1aa64:	andeq	r2, r4, lr, ror r2
   1aa68:	andeq	r2, r4, r6, lsr #5
   1aa6c:	andeq	r2, r4, ip, asr #5
   1aa70:	strdeq	r2, [r4], -r4
   1aa74:	andeq	r2, r4, sl, lsl #6
   1aa78:	muleq	r3, r3, pc	; <UNPREDICTABLE>
   1aa7c:	andeq	r2, r4, r0, lsr #6

0001aa80 <__flatcc_fb_gen_c_builder@@Base>:
   1aa80:	ldr	r3, [r0, #208]	; 0xd0
   1aa84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aa88:	mov	r4, r0
   1aa8c:	sub	sp, sp, #268	; 0x10c
   1aa90:	ldr	r1, [pc, #1392]	; 1b008 <__flatcc_fb_gen_c_builder@@Base+0x588>
   1aa94:	ldr	r3, [r3, #164]	; 0xa4
   1aa98:	ldr	r0, [r0, #204]	; 0xcc
   1aa9c:	mov	r2, r3
   1aaa0:	bl	140bc <fprintf@plt>
   1aaa4:	ldr	r0, [pc, #1376]	; 1b00c <__flatcc_fb_gen_c_builder@@Base+0x58c>
   1aaa8:	ldr	r1, [r4, #204]	; 0xcc
   1aaac:	bl	14158 <fputs@plt>
   1aab0:	ldr	r1, [pc, #1368]	; 1b010 <__flatcc_fb_gen_c_builder@@Base+0x590>
   1aab4:	ldr	r3, [r4, #208]	; 0xd0
   1aab8:	ldr	r0, [r4, #204]	; 0xcc
   1aabc:	ldr	r2, [r3, #164]	; 0xa4
   1aac0:	bl	140bc <fprintf@plt>
   1aac4:	ldr	r1, [pc, #1352]	; 1b014 <__flatcc_fb_gen_c_builder@@Base+0x594>
   1aac8:	ldr	r3, [r4, #208]	; 0xd0
   1aacc:	ldr	r0, [r4, #204]	; 0xcc
   1aad0:	ldr	r2, [r3, #160]	; 0xa0
   1aad4:	bl	140bc <fprintf@plt>
   1aad8:	ldr	r0, [pc, #1336]	; 1b018 <__flatcc_fb_gen_c_builder@@Base+0x598>
   1aadc:	ldr	r1, [r4, #204]	; 0xcc
   1aae0:	bl	14158 <fputs@plt>
   1aae4:	add	r2, r4, #102	; 0x66
   1aae8:	ldr	r1, [pc, #1324]	; 1b01c <__flatcc_fb_gen_c_builder@@Base+0x59c>
   1aaec:	ldr	r0, [r4, #204]	; 0xcc
   1aaf0:	bl	140bc <fprintf@plt>
   1aaf4:	mov	r2, r4
   1aaf8:	ldr	r1, [pc, #1312]	; 1b020 <__flatcc_fb_gen_c_builder@@Base+0x5a0>
   1aafc:	ldr	r0, [r4, #204]	; 0xcc
   1ab00:	bl	140bc <fprintf@plt>
   1ab04:	ldr	r0, [pc, #1292]	; 1b018 <__flatcc_fb_gen_c_builder@@Base+0x598>
   1ab08:	ldr	r1, [r4, #204]	; 0xcc
   1ab0c:	bl	14158 <fputs@plt>
   1ab10:	ldr	r2, [pc, #1292]	; 1b024 <__flatcc_fb_gen_c_builder@@Base+0x5a4>
   1ab14:	mov	r0, r4
   1ab18:	ldr	r1, [pc, #1288]	; 1b028 <__flatcc_fb_gen_c_builder@@Base+0x5a8>
   1ab1c:	bl	15838 <__flatcc_fb_gen_c_includes@@Base>
   1ab20:	ldr	r3, [r4, #212]	; 0xd4
   1ab24:	ldr	r3, [r3, #140]	; 0x8c
   1ab28:	cmp	r3, #0
   1ab2c:	beq	1ab3c <__flatcc_fb_gen_c_builder@@Base+0xbc>
   1ab30:	ldr	r0, [pc, #1268]	; 1b02c <__flatcc_fb_gen_c_builder@@Base+0x5ac>
   1ab34:	ldr	r1, [r4, #204]	; 0xcc
   1ab38:	bl	14158 <fputs@plt>
   1ab3c:	ldr	r0, [r4, #204]	; 0xcc
   1ab40:	ldr	r3, [r4, #208]	; 0xd0
   1ab44:	ldrh	r2, [r3, #16]
   1ab48:	cmp	r2, #2
   1ab4c:	bne	1ac48 <__flatcc_fb_gen_c_builder@@Base+0x1c8>
   1ab50:	ldr	r2, [r3, #8]
   1ab54:	ldr	r1, [pc, #1236]	; 1b030 <__flatcc_fb_gen_c_builder@@Base+0x5b0>
   1ab58:	str	r2, [sp, #4]
   1ab5c:	mov	r2, r4
   1ab60:	ldr	r3, [r3, #12]
   1ab64:	str	r3, [sp]
   1ab68:	mov	r3, r4
   1ab6c:	bl	140bc <fprintf@plt>
   1ab70:	ldr	r0, [r4, #204]	; 0xcc
   1ab74:	ldr	r3, [r4, #208]	; 0xd0
   1ab78:	ldrh	r2, [r3, #32]
   1ab7c:	cmp	r2, #2
   1ab80:	bne	1ac5c <__flatcc_fb_gen_c_builder@@Base+0x1dc>
   1ab84:	ldr	r2, [r3, #24]
   1ab88:	ldr	r1, [pc, #1188]	; 1b034 <__flatcc_fb_gen_c_builder@@Base+0x5b4>
   1ab8c:	str	r2, [sp, #4]
   1ab90:	mov	r2, r4
   1ab94:	ldr	r3, [r3, #28]
   1ab98:	str	r3, [sp]
   1ab9c:	mov	r3, r4
   1aba0:	bl	140bc <fprintf@plt>
   1aba4:	mov	r0, #10
   1aba8:	add	r5, sp, #44	; 0x2c
   1abac:	ldr	r1, [r4, #204]	; 0xcc
   1abb0:	bl	1411c <fputc@plt>
   1abb4:	mov	r2, #220	; 0xdc
   1abb8:	mov	r1, #0
   1abbc:	ldr	r7, [pc, #1140]	; 1b038 <__flatcc_fb_gen_c_builder@@Base+0x5b8>
   1abc0:	mov	r0, r5
   1abc4:	bl	140d4 <memset@plt>
   1abc8:	ldr	r3, [r4, #208]	; 0xd0
   1abcc:	ldr	r8, [pc, #1128]	; 1b03c <__flatcc_fb_gen_c_builder@@Base+0x5bc>
   1abd0:	ldr	r6, [r3, #40]	; 0x28
   1abd4:	mov	r3, #0
   1abd8:	cmp	r6, #0
   1abdc:	bne	1ac7c <__flatcc_fb_gen_c_builder@@Base+0x1fc>
   1abe0:	cmp	r3, #0
   1abe4:	beq	1abf4 <__flatcc_fb_gen_c_builder@@Base+0x174>
   1abe8:	mov	r0, #10
   1abec:	ldr	r1, [r4, #204]	; 0xcc
   1abf0:	bl	1411c <fputc@plt>
   1abf4:	ldr	r3, [r4, #208]	; 0xd0
   1abf8:	ldr	r8, [r3, #44]	; 0x2c
   1abfc:	cmp	r8, #0
   1ac00:	bne	1acd4 <__flatcc_fb_gen_c_builder@@Base+0x254>
   1ac04:	mov	r0, r4
   1ac08:	bl	1986c <__flatcc_gen_sort@@Base+0x1220>
   1ac0c:	ldr	r3, [r4, #212]	; 0xd4
   1ac10:	ldr	r3, [r3, #140]	; 0x8c
   1ac14:	cmp	r3, #0
   1ac18:	beq	1ac28 <__flatcc_fb_gen_c_builder@@Base+0x1a8>
   1ac1c:	ldr	r0, [pc, #1052]	; 1b040 <__flatcc_fb_gen_c_builder@@Base+0x5c0>
   1ac20:	ldr	r1, [r4, #204]	; 0xcc
   1ac24:	bl	14158 <fputs@plt>
   1ac28:	ldr	r1, [pc, #1044]	; 1b044 <__flatcc_fb_gen_c_builder@@Base+0x5c4>
   1ac2c:	ldr	r3, [r4, #208]	; 0xd0
   1ac30:	ldr	r0, [r4, #204]	; 0xcc
   1ac34:	ldr	r2, [r3, #164]	; 0xa4
   1ac38:	bl	140bc <fprintf@plt>
   1ac3c:	mov	r0, #0
   1ac40:	add	sp, sp, #268	; 0x10c
   1ac44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ac48:	mov	r3, r4
   1ac4c:	mov	r2, r4
   1ac50:	ldr	r1, [pc, #1008]	; 1b048 <__flatcc_fb_gen_c_builder@@Base+0x5c8>
   1ac54:	bl	140bc <fprintf@plt>
   1ac58:	b	1ab70 <__flatcc_fb_gen_c_builder@@Base+0xf0>
   1ac5c:	ldr	r3, [r4, #212]	; 0xd4
   1ac60:	mov	r2, r4
   1ac64:	ldr	r1, [pc, #992]	; 1b04c <__flatcc_fb_gen_c_builder@@Base+0x5cc>
   1ac68:	ldr	r3, [r3, #104]	; 0x68
   1ac6c:	str	r3, [sp]
   1ac70:	mov	r3, r4
   1ac74:	bl	140bc <fprintf@plt>
   1ac78:	b	1aba4 <__flatcc_fb_gen_c_builder@@Base+0x124>
   1ac7c:	ldrh	r2, [r6, #8]
   1ac80:	cmp	r2, #3
   1ac84:	bne	1accc <__flatcc_fb_gen_c_builder@@Base+0x24c>
   1ac88:	mov	r1, r5
   1ac8c:	mov	r0, r6
   1ac90:	bl	18778 <__flatcc_gen_sort@@Base+0x12c>
   1ac94:	mov	r3, r5
   1ac98:	mov	r2, r5
   1ac9c:	ldr	r0, [r4, #204]	; 0xcc
   1aca0:	mov	r1, r7
   1aca4:	str	r5, [sp]
   1aca8:	bl	140bc <fprintf@plt>
   1acac:	mov	r3, r4
   1acb0:	mov	r2, r4
   1acb4:	ldr	r0, [r4, #204]	; 0xcc
   1acb8:	mov	r1, r8
   1acbc:	str	r5, [sp]
   1acc0:	str	r5, [sp, #4]
   1acc4:	bl	140bc <fprintf@plt>
   1acc8:	mov	r3, #1
   1accc:	ldr	r6, [r6]
   1acd0:	b	1abd8 <__flatcc_fb_gen_c_builder@@Base+0x158>
   1acd4:	mov	r2, #220	; 0xdc
   1acd8:	mov	r1, #0
   1acdc:	mov	r0, r5
   1ace0:	bl	140d4 <memset@plt>
   1ace4:	ldrh	r9, [r8, #8]
   1ace8:	cmp	r9, #1
   1acec:	beq	1ad04 <__flatcc_fb_gen_c_builder@@Base+0x284>
   1acf0:	ldr	r3, [pc, #856]	; 1b050 <__flatcc_fb_gen_c_builder@@Base+0x5d0>
   1acf4:	movw	r2, #1010	; 0x3f2
   1acf8:	ldr	r1, [pc, #852]	; 1b054 <__flatcc_fb_gen_c_builder@@Base+0x5d4>
   1acfc:	ldr	r0, [pc, #852]	; 1b058 <__flatcc_fb_gen_c_builder@@Base+0x5d8>
   1ad00:	bl	1417c <__assert_fail@plt>
   1ad04:	mov	r1, r5
   1ad08:	mov	r0, r8
   1ad0c:	mov	r6, r8
   1ad10:	mov	sl, r4
   1ad14:	bl	18778 <__flatcc_gen_sort@@Base+0x12c>
   1ad18:	ldr	r0, [r6, #20]!
   1ad1c:	bl	1896c <__flatcc_gen_sort@@Base+0x320>
   1ad20:	mov	r7, r0
   1ad24:	mov	r2, r5
   1ad28:	ldr	r1, [pc, #812]	; 1b05c <__flatcc_fb_gen_c_builder@@Base+0x5dc>
   1ad2c:	ldr	r0, [r4, #204]	; 0xcc
   1ad30:	bl	140bc <fprintf@plt>
   1ad34:	mov	r3, r7
   1ad38:	mov	r2, #0
   1ad3c:	str	r9, [sp]
   1ad40:	mov	r1, r6
   1ad44:	mov	r0, r4
   1ad48:	bl	18b40 <__flatcc_gen_sort@@Base+0x4f4>
   1ad4c:	mov	r2, r5
   1ad50:	ldr	r1, [pc, #776]	; 1b060 <__flatcc_fb_gen_c_builder@@Base+0x5e0>
   1ad54:	mov	r9, #0
   1ad58:	ldr	r0, [sl, #204]!	; 0xcc
   1ad5c:	bl	140bc <fprintf@plt>
   1ad60:	ldr	r0, [r8, #20]
   1ad64:	bl	1896c <__flatcc_gen_sort@@Base+0x320>
   1ad68:	mov	fp, r0
   1ad6c:	cmp	fp, r9
   1ad70:	bgt	1afd0 <__flatcc_fb_gen_c_builder@@Base+0x550>
   1ad74:	mov	r9, #0
   1ad78:	mov	r0, #10
   1ad7c:	ldr	r1, [r4, #204]	; 0xcc
   1ad80:	bl	1411c <fputc@plt>
   1ad84:	mov	r3, r5
   1ad88:	mov	r2, r5
   1ad8c:	ldr	r1, [pc, #720]	; 1b064 <__flatcc_fb_gen_c_builder@@Base+0x5e4>
   1ad90:	mov	sl, #1
   1ad94:	ldr	r0, [r4, #204]	; 0xcc
   1ad98:	str	r5, [sp]
   1ad9c:	bl	140bc <fprintf@plt>
   1ada0:	mov	r3, r7
   1ada4:	mov	r2, r9
   1ada8:	str	r9, [sp]
   1adac:	mov	r1, r6
   1adb0:	mov	r0, r4
   1adb4:	bl	18b40 <__flatcc_gen_sort@@Base+0x4f4>
   1adb8:	ldr	r0, [pc, #680]	; 1b068 <__flatcc_fb_gen_c_builder@@Base+0x5e8>
   1adbc:	ldr	r1, [r4, #204]	; 0xcc
   1adc0:	bl	14158 <fputs@plt>
   1adc4:	mov	r3, r9
   1adc8:	mov	r2, r7
   1adcc:	str	r9, [sp]
   1add0:	mov	r1, r6
   1add4:	mov	r0, r4
   1add8:	bl	18cd0 <__flatcc_gen_sort@@Base+0x684>
   1addc:	ldr	r0, [pc, #648]	; 1b06c <__flatcc_fb_gen_c_builder@@Base+0x5ec>
   1ade0:	ldr	r1, [r4, #204]	; 0xcc
   1ade4:	bl	14158 <fputs@plt>
   1ade8:	mov	r3, r5
   1adec:	mov	r2, r5
   1adf0:	ldr	r1, [pc, #632]	; 1b070 <__flatcc_fb_gen_c_builder@@Base+0x5f0>
   1adf4:	ldr	r0, [r4, #204]	; 0xcc
   1adf8:	str	r5, [sp]
   1adfc:	str	r5, [sp, #4]
   1ae00:	bl	140bc <fprintf@plt>
   1ae04:	ldr	r0, [pc, #616]	; 1b074 <__flatcc_fb_gen_c_builder@@Base+0x5f4>
   1ae08:	ldr	r1, [r4, #204]	; 0xcc
   1ae0c:	bl	14158 <fputs@plt>
   1ae10:	mov	r3, r9
   1ae14:	mov	r2, r7
   1ae18:	str	sl, [sp]
   1ae1c:	mov	r1, r6
   1ae20:	mov	r0, r4
   1ae24:	bl	18cd0 <__flatcc_gen_sort@@Base+0x684>
   1ae28:	ldr	r0, [pc, #572]	; 1b06c <__flatcc_fb_gen_c_builder@@Base+0x5ec>
   1ae2c:	ldr	r1, [r4, #204]	; 0xcc
   1ae30:	bl	14158 <fputs@plt>
   1ae34:	mov	r3, r5
   1ae38:	mov	r2, r5
   1ae3c:	ldr	r1, [pc, #564]	; 1b078 <__flatcc_fb_gen_c_builder@@Base+0x5f8>
   1ae40:	ldr	r0, [r4, #204]	; 0xcc
   1ae44:	str	r5, [sp]
   1ae48:	bl	140bc <fprintf@plt>
   1ae4c:	mov	r3, r7
   1ae50:	mov	r2, r9
   1ae54:	str	r9, [sp]
   1ae58:	mov	r1, r6
   1ae5c:	mov	r0, r4
   1ae60:	bl	18b40 <__flatcc_gen_sort@@Base+0x4f4>
   1ae64:	ldr	r0, [pc, #508]	; 1b068 <__flatcc_fb_gen_c_builder@@Base+0x5e8>
   1ae68:	ldr	r1, [r4, #204]	; 0xcc
   1ae6c:	bl	14158 <fputs@plt>
   1ae70:	mov	r3, #2
   1ae74:	mov	r2, r7
   1ae78:	str	r9, [sp]
   1ae7c:	mov	r1, r6
   1ae80:	mov	r0, r4
   1ae84:	bl	18cd0 <__flatcc_gen_sort@@Base+0x684>
   1ae88:	ldr	r0, [pc, #476]	; 1b06c <__flatcc_fb_gen_c_builder@@Base+0x5ec>
   1ae8c:	ldr	r1, [r4, #204]	; 0xcc
   1ae90:	bl	14158 <fputs@plt>
   1ae94:	mov	r3, r5
   1ae98:	mov	r2, r5
   1ae9c:	ldr	r1, [pc, #472]	; 1b07c <__flatcc_fb_gen_c_builder@@Base+0x5fc>
   1aea0:	ldr	r0, [r4, #204]	; 0xcc
   1aea4:	str	r5, [sp]
   1aea8:	str	r5, [sp, #4]
   1aeac:	bl	140bc <fprintf@plt>
   1aeb0:	ldr	r0, [pc, #444]	; 1b074 <__flatcc_fb_gen_c_builder@@Base+0x5f4>
   1aeb4:	ldr	r1, [r4, #204]	; 0xcc
   1aeb8:	bl	14158 <fputs@plt>
   1aebc:	mov	r3, #2
   1aec0:	mov	r2, r7
   1aec4:	str	sl, [sp]
   1aec8:	mov	r1, r6
   1aecc:	mov	r0, r4
   1aed0:	bl	18cd0 <__flatcc_gen_sort@@Base+0x684>
   1aed4:	ldr	r0, [pc, #400]	; 1b06c <__flatcc_fb_gen_c_builder@@Base+0x5ec>
   1aed8:	ldr	r1, [r4, #204]	; 0xcc
   1aedc:	bl	14158 <fputs@plt>
   1aee0:	mov	r3, r5
   1aee4:	mov	r2, r5
   1aee8:	ldr	r1, [pc, #400]	; 1b080 <__flatcc_fb_gen_c_builder@@Base+0x600>
   1aeec:	ldr	r0, [r4, #204]	; 0xcc
   1aef0:	str	r5, [sp]
   1aef4:	bl	140bc <fprintf@plt>
   1aef8:	mov	r3, r7
   1aefc:	mov	r2, r9
   1af00:	str	r9, [sp]
   1af04:	mov	r1, r6
   1af08:	mov	r0, r4
   1af0c:	bl	18b40 <__flatcc_gen_sort@@Base+0x4f4>
   1af10:	ldr	r0, [pc, #336]	; 1b068 <__flatcc_fb_gen_c_builder@@Base+0x5e8>
   1af14:	ldr	r1, [r4, #204]	; 0xcc
   1af18:	bl	14158 <fputs@plt>
   1af1c:	mov	r3, sl
   1af20:	mov	r2, r7
   1af24:	str	r9, [sp]
   1af28:	mov	r1, r6
   1af2c:	mov	r0, r4
   1af30:	bl	18cd0 <__flatcc_gen_sort@@Base+0x684>
   1af34:	ldr	r0, [pc, #304]	; 1b06c <__flatcc_fb_gen_c_builder@@Base+0x5ec>
   1af38:	ldr	r1, [r4, #204]	; 0xcc
   1af3c:	bl	14158 <fputs@plt>
   1af40:	mov	r3, r5
   1af44:	mov	r2, r5
   1af48:	ldr	r1, [pc, #308]	; 1b084 <__flatcc_fb_gen_c_builder@@Base+0x604>
   1af4c:	ldr	r0, [r4, #204]	; 0xcc
   1af50:	str	r5, [sp]
   1af54:	str	r5, [sp, #4]
   1af58:	bl	140bc <fprintf@plt>
   1af5c:	ldr	r0, [pc, #272]	; 1b074 <__flatcc_fb_gen_c_builder@@Base+0x5f4>
   1af60:	ldr	r1, [r4, #204]	; 0xcc
   1af64:	bl	14158 <fputs@plt>
   1af68:	mov	r3, sl
   1af6c:	mov	r2, r7
   1af70:	str	sl, [sp]
   1af74:	mov	r1, r6
   1af78:	mov	r0, r4
   1af7c:	bl	18cd0 <__flatcc_gen_sort@@Base+0x684>
   1af80:	ldr	r0, [pc, #228]	; 1b06c <__flatcc_fb_gen_c_builder@@Base+0x5ec>
   1af84:	ldr	r1, [r4, #204]	; 0xcc
   1af88:	bl	14158 <fputs@plt>
   1af8c:	ldr	r0, [r4, #204]	; 0xcc
   1af90:	str	r5, [sp, #20]
   1af94:	str	r5, [sp, #24]
   1af98:	ldrh	r3, [r8, #104]	; 0x68
   1af9c:	ldr	r1, [pc, #228]	; 1b088 <__flatcc_fb_gen_c_builder@@Base+0x608>
   1afa0:	str	r3, [sp, #16]
   1afa4:	ldrd	r2, [r8, #112]	; 0x70
   1afa8:	str	r5, [sp]
   1afac:	strd	r2, [sp, #8]
   1afb0:	mov	r3, r4
   1afb4:	mov	r2, r4
   1afb8:	bl	140bc <fprintf@plt>
   1afbc:	mov	r0, #10
   1afc0:	ldr	r1, [r4, #204]	; 0xcc
   1afc4:	bl	1411c <fputc@plt>
   1afc8:	ldr	r8, [r8, #120]	; 0x78
   1afcc:	b	1abfc <__flatcc_fb_gen_c_builder@@Base+0x17c>
   1afd0:	mov	r1, r9
   1afd4:	mov	r3, #1
   1afd8:	mov	r2, r7
   1afdc:	mov	r0, sl
   1afe0:	bl	189cc <__flatcc_gen_sort@@Base+0x380>
   1afe4:	add	r3, r9, #1
   1afe8:	mov	r2, r9
   1afec:	ldr	r1, [pc, #152]	; 1b08c <__flatcc_fb_gen_c_builder@@Base+0x60c>
   1aff0:	ldr	r0, [r4, #204]	; 0xcc
   1aff4:	str	r3, [sp, #36]	; 0x24
   1aff8:	bl	140bc <fprintf@plt>
   1affc:	ldr	r3, [sp, #36]	; 0x24
   1b000:	mov	r9, r3
   1b004:	b	1ad6c <__flatcc_fb_gen_c_builder@@Base+0x2ec>
   1b008:	andeq	r2, r4, r2, asr #6
   1b00c:	muleq	r3, sl, r0
   1b010:	andeq	r2, r4, sp, ror #6
   1b014:	andeq	r2, r4, r2, lsl #7
   1b018:	andeq	r8, r3, pc, ror #3
   1b01c:	strdeq	r9, [r3], -r6
   1b020:	muleq	r4, sl, r3
   1b024:			; <UNDEFINED> instruction: 0x000423b9
   1b028:	andeq	r6, r4, r3, lsr #30
   1b02c:	andeq	r2, r3, r9, lsr #3
   1b030:	andeq	r8, r3, r4, ror #4
   1b034:	andeq	r8, r3, r9, asr #5
   1b038:	andeq	r2, r4, r4, asr #7
   1b03c:	andeq	r2, r4, r9, lsl #8
   1b040:	muleq	r3, r3, pc	; <UNPREDICTABLE>
   1b044:	andeq	r2, r4, sl, lsr #11
   1b048:	muleq	r3, r5, r2
   1b04c:	strdeq	r8, [r3], -r9
   1b050:	ldrdeq	r8, [r3], -r4
   1b054:	andeq	r9, r3, fp, rrx
   1b058:	ldrdeq	r1, [r3], -r5
   1b05c:	andeq	r9, r3, r9, ror #14
   1b060:	andeq	r9, r3, r2, lsl #17
   1b064:	andeq	r2, r4, lr, lsr #8
   1b068:	andeq	r2, r4, r4, asr r4
   1b06c:	ldrdeq	r1, [r3], -ip
   1b070:	andeq	r2, r4, r9, asr r4
   1b074:	andeq	r2, r4, r6, asr r4
   1b078:	andeq	r2, r4, pc, lsl #9
   1b07c:			; <UNDEFINED> instruction: 0x000424bb
   1b080:	strdeq	r2, [r4], -r7
   1b084:	andeq	r2, r4, r5, lsr #10
   1b088:	andeq	r2, r4, r3, ror #10
   1b08c:	andeq	r9, r3, sl, asr r2
   1b090:	mov	r2, r1
   1b094:	mov	r1, r0
   1b098:	ldr	r0, [r0, #12]
   1b09c:	b	159e4 <__flatcc_fb_scoped_symbol_name@@Base>
   1b0a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b0a4:	sub	sp, sp, #492	; 0x1ec
   1b0a8:	mov	r4, r1
   1b0ac:	add	r6, sp, #48	; 0x30
   1b0b0:	mov	r5, r0
   1b0b4:	mov	r2, #220	; 0xdc
   1b0b8:	mov	r1, #0
   1b0bc:	mov	r0, r6
   1b0c0:	add	sl, sp, #268	; 0x10c
   1b0c4:	bl	140d4 <memset@plt>
   1b0c8:	mov	r2, #220	; 0xdc
   1b0cc:	mov	r1, #0
   1b0d0:	mov	r0, sl
   1b0d4:	bl	140d4 <memset@plt>
   1b0d8:	mov	r0, r4
   1b0dc:	mov	r1, r6
   1b0e0:	bl	1b090 <__flatcc_fb_gen_c_builder@@Base+0x610>
   1b0e4:	mov	r2, r6
   1b0e8:	ldr	r1, [pc, #848]	; 1b440 <__flatcc_fb_gen_c_builder@@Base+0x9c0>
   1b0ec:	ldr	r0, [r5, #204]	; 0xcc
   1b0f0:	bl	140bc <fprintf@plt>
   1b0f4:	ldr	r4, [r4, #20]
   1b0f8:	mov	r3, #1
   1b0fc:	cmp	r4, #0
   1b100:	ldr	r1, [r5, #204]	; 0xcc
   1b104:	bne	1b198 <__flatcc_fb_gen_c_builder@@Base+0x718>
   1b108:	cmp	r3, #0
   1b10c:	bne	1b118 <__flatcc_fb_gen_c_builder@@Base+0x698>
   1b110:	ldr	r0, [pc, #812]	; 1b444 <__flatcc_fb_gen_c_builder@@Base+0x9c4>
   1b114:	bl	14158 <fputs@plt>
   1b118:	ldr	r0, [pc, #808]	; 1b448 <__flatcc_fb_gen_c_builder@@Base+0x9c8>
   1b11c:	ldr	r1, [r5, #204]	; 0xcc
   1b120:	bl	14158 <fputs@plt>
   1b124:	ldr	r0, [pc, #800]	; 1b44c <__flatcc_fb_gen_c_builder@@Base+0x9cc>
   1b128:	ldr	r1, [r5, #204]	; 0xcc
   1b12c:	bl	14158 <fputs@plt>
   1b130:	mov	r3, r6
   1b134:	mov	r2, r6
   1b138:	ldr	r1, [pc, #784]	; 1b450 <__flatcc_fb_gen_c_builder@@Base+0x9d0>
   1b13c:	ldr	r0, [r5, #204]	; 0xcc
   1b140:	str	r6, [sp]
   1b144:	bl	140bc <fprintf@plt>
   1b148:	mov	r3, r6
   1b14c:	mov	r2, r6
   1b150:	ldr	r1, [pc, #764]	; 1b454 <__flatcc_fb_gen_c_builder@@Base+0x9d4>
   1b154:	ldr	r0, [r5, #204]	; 0xcc
   1b158:	str	r6, [sp]
   1b15c:	bl	140bc <fprintf@plt>
   1b160:	mov	r3, r6
   1b164:	mov	r2, r6
   1b168:	ldr	r1, [pc, #744]	; 1b458 <__flatcc_fb_gen_c_builder@@Base+0x9d8>
   1b16c:	ldr	r0, [r5, #204]	; 0xcc
   1b170:	bl	140bc <fprintf@plt>
   1b174:	ldr	r1, [pc, #736]	; 1b45c <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   1b178:	mov	r3, r5
   1b17c:	mov	r2, r6
   1b180:	str	r6, [sp]
   1b184:	ldr	r0, [r5, #204]	; 0xcc
   1b188:	bl	140bc <fprintf@plt>
   1b18c:	mov	r0, #0
   1b190:	add	sp, sp, #492	; 0x1ec
   1b194:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b198:	ldrh	r2, [r4, #72]	; 0x48
   1b19c:	tst	r2, #4
   1b1a0:	bne	1b254 <__flatcc_fb_gen_c_builder@@Base+0x7d4>
   1b1a4:	cmp	r3, #0
   1b1a8:	ldrne	r0, [pc, #688]	; 1b460 <__flatcc_fb_gen_c_builder@@Base+0x9e0>
   1b1ac:	ldreq	r0, [pc, #688]	; 1b464 <__flatcc_fb_gen_c_builder@@Base+0x9e4>
   1b1b0:	bl	14158 <fputs@plt>
   1b1b4:	ldrh	r3, [r4, #24]
   1b1b8:	ldrh	r7, [r4, #72]	; 0x48
   1b1bc:	sub	r3, r3, #7
   1b1c0:	ubfx	r7, r7, #8, #1
   1b1c4:	cmp	r3, #8
   1b1c8:	ldrls	pc, [pc, r3, lsl #2]
   1b1cc:	b	1b238 <__flatcc_fb_gen_c_builder@@Base+0x7b8>
   1b1d0:	strdeq	fp, [r1], -r4
   1b1d4:	andeq	fp, r1, r0, ror #5
   1b1d8:	muleq	r1, ip, r2
   1b1dc:	andeq	fp, r1, r4, lsl #5
   1b1e0:	andeq	fp, r1, r8, lsr r2
   1b1e4:	andeq	fp, r1, r8, lsr r2
   1b1e8:	andeq	fp, r1, r8, lsr r2
   1b1ec:	andeq	fp, r1, ip, lsr #5
   1b1f0:	andeq	fp, r1, r0, ror #6
   1b1f4:	ldr	r0, [r4, #104]	; 0x68
   1b1f8:	cmp	r0, #0
   1b1fc:	beq	1b3a4 <__flatcc_fb_gen_c_builder@@Base+0x924>
   1b200:	mov	r1, sl
   1b204:	bl	1b090 <__flatcc_fb_gen_c_builder@@Base+0x610>
   1b208:	ldr	r3, [r4, #104]	; 0x68
   1b20c:	ldrh	r3, [r3, #8]
   1b210:	cmp	r3, #0
   1b214:	bne	1b25c <__flatcc_fb_gen_c_builder@@Base+0x7dc>
   1b218:	ldr	r0, [r5, #204]	; 0xcc
   1b21c:	str	sl, [sp, #8]
   1b220:	ldrh	r3, [r4, #74]	; 0x4a
   1b224:	str	r7, [sp]
   1b228:	ldr	r1, [pc, #568]	; 1b468 <__flatcc_fb_gen_c_builder@@Base+0x9e8>
   1b22c:	str	r3, [sp, #4]
   1b230:	ldrd	r2, [r4, #96]	; 0x60
   1b234:	bl	140bc <fprintf@plt>
   1b238:	ldr	r2, [r4, #4]
   1b23c:	ldr	r1, [pc, #552]	; 1b46c <__flatcc_fb_gen_c_builder@@Base+0x9ec>
   1b240:	ldr	r0, [r5, #204]	; 0xcc
   1b244:	ldr	r3, [r2]
   1b248:	ldr	r2, [r2, #4]
   1b24c:	bl	140bc <fprintf@plt>
   1b250:	mov	r3, #0
   1b254:	ldr	r4, [r4]
   1b258:	b	1b0fc <__flatcc_fb_gen_c_builder@@Base+0x67c>
   1b25c:	ldrh	r3, [r4, #74]	; 0x4a
   1b260:	ldr	r0, [r5, #204]	; 0xcc
   1b264:	ldr	r1, [pc, #516]	; 1b470 <__flatcc_fb_gen_c_builder@@Base+0x9f0>
   1b268:	str	r3, [sp, #16]
   1b26c:	ldrd	r2, [r4, #88]	; 0x58
   1b270:	str	r7, [sp]
   1b274:	strd	r2, [sp, #8]
   1b278:	ldrd	r2, [r4, #96]	; 0x60
   1b27c:	bl	140bc <fprintf@plt>
   1b280:	b	1b238 <__flatcc_fb_gen_c_builder@@Base+0x7b8>
   1b284:	ldr	r1, [pc, #488]	; 1b474 <__flatcc_fb_gen_c_builder@@Base+0x9f4>
   1b288:	str	r7, [sp]
   1b28c:	ldrd	r2, [r4, #96]	; 0x60
   1b290:	ldr	r0, [r5, #204]	; 0xcc
   1b294:	bl	140bc <fprintf@plt>
   1b298:	b	1b238 <__flatcc_fb_gen_c_builder@@Base+0x7b8>
   1b29c:	ldr	r1, [pc, #468]	; 1b478 <__flatcc_fb_gen_c_builder@@Base+0x9f8>
   1b2a0:	str	r7, [sp]
   1b2a4:	ldrd	r2, [r4, #96]	; 0x60
   1b2a8:	b	1b290 <__flatcc_fb_gen_c_builder@@Base+0x810>
   1b2ac:	mov	r1, sl
   1b2b0:	ldr	r0, [r4, #16]
   1b2b4:	bl	1b090 <__flatcc_fb_gen_c_builder@@Base+0x610>
   1b2b8:	ldr	r3, [r4, #16]
   1b2bc:	ldrh	r3, [r3, #8]
   1b2c0:	cmp	r3, #4
   1b2c4:	ldrls	pc, [pc, r3, lsl #2]
   1b2c8:	b	1b32c <__flatcc_fb_gen_c_builder@@Base+0x8ac>
   1b2cc:	andeq	fp, r1, r4, lsl #6
   1b2d0:	andeq	fp, r1, r0, ror #5
   1b2d4:	andeq	fp, r1, ip, lsr #6
   1b2d8:	andeq	fp, r1, r0, ror #5
   1b2dc:	andeq	fp, r1, ip, lsl r3
   1b2e0:	ldrh	r3, [r4, #74]	; 0x4a
   1b2e4:	ldr	r0, [r5, #204]	; 0xcc
   1b2e8:	ldr	r1, [pc, #396]	; 1b47c <__flatcc_fb_gen_c_builder@@Base+0x9fc>
   1b2ec:	str	r3, [sp, #8]
   1b2f0:	ldrd	r2, [r4, #88]	; 0x58
   1b2f4:	strd	r2, [sp]
   1b2f8:	ldrd	r2, [r4, #96]	; 0x60
   1b2fc:	bl	140bc <fprintf@plt>
   1b300:	b	1b238 <__flatcc_fb_gen_c_builder@@Base+0x7b8>
   1b304:	ldr	r1, [pc, #372]	; 1b480 <__flatcc_fb_gen_c_builder@@Base+0xa00>
   1b308:	stm	sp, {r7, sl}
   1b30c:	ldrd	r2, [r4, #96]	; 0x60
   1b310:	ldr	r0, [r5, #204]	; 0xcc
   1b314:	bl	140bc <fprintf@plt>
   1b318:	b	1b238 <__flatcc_fb_gen_c_builder@@Base+0x7b8>
   1b31c:	ldr	r1, [pc, #352]	; 1b484 <__flatcc_fb_gen_c_builder@@Base+0xa04>
   1b320:	stm	sp, {r7, sl}
   1b324:	ldrd	r2, [r4, #96]	; 0x60
   1b328:	b	1b310 <__flatcc_fb_gen_c_builder@@Base+0x890>
   1b32c:	ldr	r3, [pc, #340]	; 1b488 <__flatcc_fb_gen_c_builder@@Base+0xa08>
   1b330:	ldr	r0, [pc, #340]	; 1b48c <__flatcc_fb_gen_c_builder@@Base+0xa0c>
   1b334:	ldr	r2, [pc, #340]	; 1b490 <__flatcc_fb_gen_c_builder@@Base+0xa10>
   1b338:	str	r3, [sp]
   1b33c:	mov	r3, #178	; 0xb2
   1b340:	ldr	r1, [pc, #332]	; 1b494 <__flatcc_fb_gen_c_builder@@Base+0xa14>
   1b344:	ldr	r0, [r0]
   1b348:	bl	140bc <fprintf@plt>
   1b34c:	ldr	r3, [pc, #324]	; 1b498 <__flatcc_fb_gen_c_builder@@Base+0xa18>
   1b350:	mov	r2, #178	; 0xb2
   1b354:	ldr	r1, [pc, #308]	; 1b490 <__flatcc_fb_gen_c_builder@@Base+0xa10>
   1b358:	ldr	r0, [pc, #316]	; 1b49c <__flatcc_fb_gen_c_builder@@Base+0xa1c>
   1b35c:	bl	1417c <__assert_fail@plt>
   1b360:	mov	r1, sl
   1b364:	ldr	r0, [r4, #16]
   1b368:	bl	1b090 <__flatcc_fb_gen_c_builder@@Base+0x610>
   1b36c:	ldr	r3, [r4, #16]
   1b370:	ldrh	r3, [r3, #8]
   1b374:	cmp	r3, #4
   1b378:	ldrls	pc, [pc, r3, lsl #2]
   1b37c:	b	1b414 <__flatcc_fb_gen_c_builder@@Base+0x994>
   1b380:	muleq	r1, r4, r3
   1b384:	andeq	fp, r1, r4, lsr #7
   1b388:	andeq	fp, r1, r4, lsl r4
   1b38c:	andeq	fp, r1, r4, lsr #7
   1b390:	andeq	fp, r1, r4, lsl #8
   1b394:	ldr	r1, [pc, #260]	; 1b4a0 <__flatcc_fb_gen_c_builder@@Base+0xa20>
   1b398:	stm	sp, {r7, sl}
   1b39c:	ldrd	r2, [r4, #96]	; 0x60
   1b3a0:	b	1b310 <__flatcc_fb_gen_c_builder@@Base+0x890>
   1b3a4:	ldr	r3, [r5, #204]	; 0xcc
   1b3a8:	ldrd	r8, [r4, #88]	; 0x58
   1b3ac:	ldrh	fp, [r4, #74]	; 0x4a
   1b3b0:	str	r3, [sp, #36]	; 0x24
   1b3b4:	ldrd	r2, [r4, #96]	; 0x60
   1b3b8:	strd	r2, [sp, #40]	; 0x28
   1b3bc:	orrs	r3, r8, r9
   1b3c0:	mvneq	r0, #0
   1b3c4:	moveq	r1, #0
   1b3c8:	beq	1b3e0 <__flatcc_fb_gen_c_builder@@Base+0x960>
   1b3cc:	mov	r2, r8
   1b3d0:	mov	r3, r9
   1b3d4:	mvn	r0, #0
   1b3d8:	mov	r1, #0
   1b3dc:	bl	2efb0 <fb_value_set_visit@@Base+0x614>
   1b3e0:	str	r7, [sp]
   1b3e4:	strd	r8, [sp, #8]
   1b3e8:	str	fp, [sp, #16]
   1b3ec:	strd	r0, [sp, #24]
   1b3f0:	ldr	r1, [pc, #172]	; 1b4a4 <__flatcc_fb_gen_c_builder@@Base+0xa24>
   1b3f4:	ldr	r0, [sp, #36]	; 0x24
   1b3f8:	ldrd	r2, [sp, #40]	; 0x28
   1b3fc:	bl	140bc <fprintf@plt>
   1b400:	b	1b238 <__flatcc_fb_gen_c_builder@@Base+0x7b8>
   1b404:	ldr	r1, [pc, #156]	; 1b4a8 <__flatcc_fb_gen_c_builder@@Base+0xa28>
   1b408:	stm	sp, {r7, sl}
   1b40c:	ldrd	r2, [r4, #96]	; 0x60
   1b410:	b	1b310 <__flatcc_fb_gen_c_builder@@Base+0x890>
   1b414:	ldr	r3, [pc, #144]	; 1b4ac <__flatcc_fb_gen_c_builder@@Base+0xa2c>
   1b418:	ldr	r0, [pc, #108]	; 1b48c <__flatcc_fb_gen_c_builder@@Base+0xa0c>
   1b41c:	ldr	r2, [pc, #108]	; 1b490 <__flatcc_fb_gen_c_builder@@Base+0xa10>
   1b420:	str	r3, [sp]
   1b424:	mov	r3, #202	; 0xca
   1b428:	ldr	r1, [pc, #100]	; 1b494 <__flatcc_fb_gen_c_builder@@Base+0xa14>
   1b42c:	ldr	r0, [r0]
   1b430:	bl	140bc <fprintf@plt>
   1b434:	ldr	r3, [pc, #92]	; 1b498 <__flatcc_fb_gen_c_builder@@Base+0xa18>
   1b438:	mov	r2, #202	; 0xca
   1b43c:	b	1b354 <__flatcc_fb_gen_c_builder@@Base+0x8d4>
   1b440:	andeq	r2, r4, fp, ror #11
   1b444:	andeq	r2, r4, r4, lsl #19
   1b448:	muleq	r4, r4, r9
   1b44c:	andeq	r6, r4, r3, asr #14
   1b450:			; <UNDEFINED> instruction: 0x000429b2
   1b454:	andeq	r2, r4, r2, asr sl
   1b458:	strdeq	r2, [r4], -sp
   1b45c:			; <UNDEFINED> instruction: 0x00042bb4
   1b460:	andeq	r2, r4, r1, lsr r6
   1b464:	andeq	r2, r4, lr, asr #12
   1b468:	muleq	r4, r5, r6
   1b46c:	andeq	r3, r4, r9, asr r6
   1b470:	ldrdeq	r2, [r4], -lr
   1b474:	andeq	r2, r4, r0, ror #14
   1b478:	andeq	r2, r4, r9, lsl #15
   1b47c:	andeq	r2, r4, sp, ror #12
   1b480:			; <UNDEFINED> instruction: 0x000427b9
   1b484:	strdeq	r2, [r4], -r3
   1b488:	andeq	r2, r4, r1, lsl #17
   1b48c:	strheq	fp, [r5], -r0
   1b490:	andeq	r2, r4, pc, lsr #16
   1b494:	ldrdeq	r0, [r3], -r9
   1b498:	andeq	r2, r4, r5, asr #11
   1b49c:	andeq	r9, r3, fp, lsr r2
   1b4a0:			; <UNDEFINED> instruction: 0x000428bd
   1b4a4:	andeq	r2, r4, lr, lsl r7
   1b4a8:	strdeq	r2, [r4], -lr
   1b4ac:	andeq	r2, r4, r1, asr #18
   1b4b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b4b4:	sub	sp, sp, #464	; 0x1d0
   1b4b8:	mov	r4, r1
   1b4bc:	mov	r5, r0
   1b4c0:	mov	r2, #220	; 0xdc
   1b4c4:	mov	r1, #0
   1b4c8:	add	r0, sp, #24
   1b4cc:	bl	140d4 <memset@plt>
   1b4d0:	mov	r2, #220	; 0xdc
   1b4d4:	mov	r1, #0
   1b4d8:	ldr	r8, [pc, #352]	; 1b640 <__flatcc_fb_gen_c_builder@@Base+0xbc0>
   1b4dc:	add	r0, sp, #244	; 0xf4
   1b4e0:	bl	140d4 <memset@plt>
   1b4e4:	mov	r0, r4
   1b4e8:	add	r1, sp, #24
   1b4ec:	ldr	r9, [pc, #336]	; 1b644 <__flatcc_fb_gen_c_builder@@Base+0xbc4>
   1b4f0:	bl	1b090 <__flatcc_fb_gen_c_builder@@Base+0x610>
   1b4f4:	add	r2, sp, #24
   1b4f8:	ldr	r1, [pc, #328]	; 1b648 <__flatcc_fb_gen_c_builder@@Base+0xbc8>
   1b4fc:	ldr	r0, [r5]
   1b500:	bl	140bc <fprintf@plt>
   1b504:	ldr	sl, [pc, #320]	; 1b64c <__flatcc_fb_gen_c_builder@@Base+0xbcc>
   1b508:	ldr	r4, [r4, #20]
   1b50c:	cmp	r4, #0
   1b510:	bne	1b52c <__flatcc_fb_gen_c_builder@@Base+0xaac>
   1b514:	ldr	r1, [r5]
   1b518:	ldr	r0, [pc, #304]	; 1b650 <__flatcc_fb_gen_c_builder@@Base+0xbd0>
   1b51c:	bl	14158 <fputs@plt>
   1b520:	mov	r0, r4
   1b524:	add	sp, sp, #464	; 0x1d0
   1b528:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b52c:	ldr	r3, [r4, #4]
   1b530:	ldr	r7, [r3]
   1b534:	ldr	r6, [r3, #4]
   1b538:	ldrh	r3, [r4, #24]
   1b53c:	cmp	r3, #10
   1b540:	beq	1b5f8 <__flatcc_fb_gen_c_builder@@Base+0xb78>
   1b544:	cmp	r3, #14
   1b548:	beq	1b55c <__flatcc_fb_gen_c_builder@@Base+0xadc>
   1b54c:	cmp	r3, #0
   1b550:	bne	1b614 <__flatcc_fb_gen_c_builder@@Base+0xb94>
   1b554:	ldr	r4, [r4]
   1b558:	b	1b50c <__flatcc_fb_gen_c_builder@@Base+0xa8c>
   1b55c:	add	r1, sp, #244	; 0xf4
   1b560:	ldr	r0, [r4, #16]
   1b564:	bl	1b090 <__flatcc_fb_gen_c_builder@@Base+0x610>
   1b568:	ldr	r3, [r4, #16]
   1b56c:	ldrh	r2, [r3, #8]
   1b570:	cmp	r2, #0
   1b574:	beq	1b5b4 <__flatcc_fb_gen_c_builder@@Base+0xb34>
   1b578:	cmp	r2, #1
   1b57c:	beq	1b5d0 <__flatcc_fb_gen_c_builder@@Base+0xb50>
   1b580:	ldr	r3, [pc, #204]	; 1b654 <__flatcc_fb_gen_c_builder@@Base+0xbd4>
   1b584:	ldr	r0, [pc, #204]	; 1b658 <__flatcc_fb_gen_c_builder@@Base+0xbd8>
   1b588:	ldr	r2, [pc, #204]	; 1b65c <__flatcc_fb_gen_c_builder@@Base+0xbdc>
   1b58c:	str	r3, [sp]
   1b590:	mov	r3, #74	; 0x4a
   1b594:	ldr	r1, [pc, #196]	; 1b660 <__flatcc_fb_gen_c_builder@@Base+0xbe0>
   1b598:	ldr	r0, [r0]
   1b59c:	bl	140bc <fprintf@plt>
   1b5a0:	ldr	r3, [pc, #188]	; 1b664 <__flatcc_fb_gen_c_builder@@Base+0xbe4>
   1b5a4:	mov	r2, #74	; 0x4a
   1b5a8:	ldr	r1, [pc, #172]	; 1b65c <__flatcc_fb_gen_c_builder@@Base+0xbdc>
   1b5ac:	ldr	r0, [pc, #180]	; 1b668 <__flatcc_fb_gen_c_builder@@Base+0xbe8>
   1b5b0:	bl	1417c <__assert_fail@plt>
   1b5b4:	add	r3, sp, #244	; 0xf4
   1b5b8:	mov	r1, r9
   1b5bc:	ldr	r0, [r5]
   1b5c0:	strd	r6, [sp]
   1b5c4:	ldr	r2, [r4, #48]	; 0x30
   1b5c8:	bl	140bc <fprintf@plt>
   1b5cc:	b	1b554 <__flatcc_fb_gen_c_builder@@Base+0xad4>
   1b5d0:	ldr	r0, [r5]
   1b5d4:	mov	r1, sl
   1b5d8:	strd	r6, [sp, #12]
   1b5dc:	ldrh	r2, [r3, #104]	; 0x68
   1b5e0:	str	r2, [sp, #8]
   1b5e4:	ldrd	r2, [r3, #112]	; 0x70
   1b5e8:	strd	r2, [sp]
   1b5ec:	ldr	r2, [r4, #48]	; 0x30
   1b5f0:	bl	140bc <fprintf@plt>
   1b5f4:	b	1b554 <__flatcc_fb_gen_c_builder@@Base+0xad4>
   1b5f8:	mov	r3, r6
   1b5fc:	mov	r1, r8
   1b600:	ldr	r0, [r5]
   1b604:	str	r7, [sp]
   1b608:	ldr	r2, [r4, #48]	; 0x30
   1b60c:	bl	140bc <fprintf@plt>
   1b610:	b	1b554 <__flatcc_fb_gen_c_builder@@Base+0xad4>
   1b614:	ldr	r3, [pc, #80]	; 1b66c <__flatcc_fb_gen_c_builder@@Base+0xbec>
   1b618:	ldr	r0, [pc, #56]	; 1b658 <__flatcc_fb_gen_c_builder@@Base+0xbd8>
   1b61c:	ldr	r2, [pc, #56]	; 1b65c <__flatcc_fb_gen_c_builder@@Base+0xbdc>
   1b620:	str	r3, [sp]
   1b624:	mov	r3, #83	; 0x53
   1b628:	ldr	r1, [pc, #48]	; 1b660 <__flatcc_fb_gen_c_builder@@Base+0xbe0>
   1b62c:	ldr	r0, [r0]
   1b630:	bl	140bc <fprintf@plt>
   1b634:	ldr	r3, [pc, #40]	; 1b664 <__flatcc_fb_gen_c_builder@@Base+0xbe4>
   1b638:	mov	r2, #83	; 0x53
   1b63c:	b	1b5a8 <__flatcc_fb_gen_c_builder@@Base+0xb28>
   1b640:	andeq	r2, r4, r8, lsr #27
   1b644:	ldrdeq	r2, [r4], -r2	; <UNPREDICTABLE>
   1b648:	andeq	r2, r4, r2, ror ip
   1b64c:	andeq	r2, r4, r2, lsr #26
   1b650:	andeq	r2, r4, fp, lsl lr
   1b654:	andeq	r2, r4, ip, ror #26
   1b658:	strheq	fp, [r5], -r0
   1b65c:	andeq	r2, r4, pc, lsr #16
   1b660:	ldrdeq	r0, [r3], -r9
   1b664:	ldrdeq	r2, [r4], -r8
   1b668:	andeq	r9, r3, fp, lsr r2
   1b66c:	andeq	r2, r4, r8, ror #27

0001b670 <__flatcc_fb_gen_c_verifier@@Base>:
   1b670:	ldr	r3, [r0, #208]	; 0xd0
   1b674:	push	{r4, r5, r6, r7, r8, lr}
   1b678:	mov	r4, r0
   1b67c:	sub	sp, sp, #240	; 0xf0
   1b680:	ldr	r1, [pc, #616]	; 1b8f0 <__flatcc_fb_gen_c_verifier@@Base+0x280>
   1b684:	ldr	r3, [r3, #164]	; 0xa4
   1b688:	ldr	r0, [r0, #204]	; 0xcc
   1b68c:	mov	r2, r3
   1b690:	bl	140bc <fprintf@plt>
   1b694:	ldr	r0, [pc, #600]	; 1b8f4 <__flatcc_fb_gen_c_verifier@@Base+0x284>
   1b698:	ldr	r1, [r4, #204]	; 0xcc
   1b69c:	bl	14158 <fputs@plt>
   1b6a0:	ldr	r1, [pc, #592]	; 1b8f8 <__flatcc_fb_gen_c_verifier@@Base+0x288>
   1b6a4:	ldr	r3, [r4, #208]	; 0xd0
   1b6a8:	ldr	r0, [r4, #204]	; 0xcc
   1b6ac:	ldr	r2, [r3, #164]	; 0xa4
   1b6b0:	bl	140bc <fprintf@plt>
   1b6b4:	ldr	r1, [pc, #576]	; 1b8fc <__flatcc_fb_gen_c_verifier@@Base+0x28c>
   1b6b8:	ldr	r3, [r4, #208]	; 0xd0
   1b6bc:	ldr	r0, [r4, #204]	; 0xcc
   1b6c0:	ldr	r2, [r3, #160]	; 0xa0
   1b6c4:	bl	140bc <fprintf@plt>
   1b6c8:	ldr	r0, [pc, #560]	; 1b900 <__flatcc_fb_gen_c_verifier@@Base+0x290>
   1b6cc:	ldr	r1, [r4, #204]	; 0xcc
   1b6d0:	bl	14158 <fputs@plt>
   1b6d4:	ldr	r0, [pc, #552]	; 1b904 <__flatcc_fb_gen_c_verifier@@Base+0x294>
   1b6d8:	ldr	r1, [r4, #204]	; 0xcc
   1b6dc:	bl	14158 <fputs@plt>
   1b6e0:	ldr	r2, [pc, #544]	; 1b908 <__flatcc_fb_gen_c_verifier@@Base+0x298>
   1b6e4:	mov	r0, r4
   1b6e8:	ldr	r1, [pc, #540]	; 1b90c <__flatcc_fb_gen_c_verifier@@Base+0x29c>
   1b6ec:	bl	15838 <__flatcc_fb_gen_c_includes@@Base>
   1b6f0:	ldr	r3, [r4, #212]	; 0xd4
   1b6f4:	ldr	r3, [r3, #140]	; 0x8c
   1b6f8:	cmp	r3, #0
   1b6fc:	beq	1b70c <__flatcc_fb_gen_c_verifier@@Base+0x9c>
   1b700:	ldr	r0, [pc, #520]	; 1b910 <__flatcc_fb_gen_c_verifier@@Base+0x2a0>
   1b704:	ldr	r1, [r4, #204]	; 0xcc
   1b708:	bl	14158 <fputs@plt>
   1b70c:	mov	r0, #10
   1b710:	ldr	r1, [r4, #204]	; 0xcc
   1b714:	bl	1411c <fputc@plt>
   1b718:	mov	r2, #220	; 0xdc
   1b71c:	mov	r1, #0
   1b720:	ldr	r6, [pc, #492]	; 1b914 <__flatcc_fb_gen_c_verifier@@Base+0x2a4>
   1b724:	add	r0, sp, #20
   1b728:	bl	140d4 <memset@plt>
   1b72c:	ldr	r3, [r4, #208]	; 0xd0
   1b730:	ldr	r5, [r3, #40]	; 0x28
   1b734:	cmp	r5, #0
   1b738:	bne	1b7c4 <__flatcc_fb_gen_c_verifier@@Base+0x154>
   1b73c:	mov	r0, #10
   1b740:	ldr	r1, [r4, #204]	; 0xcc
   1b744:	add	r6, r4, #204	; 0xcc
   1b748:	bl	1411c <fputc@plt>
   1b74c:	ldr	r3, [r4, #208]	; 0xd0
   1b750:	ldr	r5, [r3, #40]	; 0x28
   1b754:	cmp	r5, #0
   1b758:	bne	1b7f4 <__flatcc_fb_gen_c_verifier@@Base+0x184>
   1b75c:	ldr	r3, [r4, #208]	; 0xd0
   1b760:	ldr	r6, [pc, #432]	; 1b918 <__flatcc_fb_gen_c_verifier@@Base+0x2a8>
   1b764:	ldr	r7, [pc, #432]	; 1b91c <__flatcc_fb_gen_c_verifier@@Base+0x2ac>
   1b768:	ldr	r8, [pc, #432]	; 1b920 <__flatcc_fb_gen_c_verifier@@Base+0x2b0>
   1b76c:	ldr	r5, [r3, #40]	; 0x28
   1b770:	cmp	r5, #0
   1b774:	bne	1b814 <__flatcc_fb_gen_c_verifier@@Base+0x1a4>
   1b778:	ldr	r3, [r4, #208]	; 0xd0
   1b77c:	ldr	r5, [r3, #40]	; 0x28
   1b780:	cmp	r5, #0
   1b784:	bne	1b8d0 <__flatcc_fb_gen_c_verifier@@Base+0x260>
   1b788:	ldr	r3, [r4, #212]	; 0xd4
   1b78c:	ldr	r3, [r3, #140]	; 0x8c
   1b790:	cmp	r3, #0
   1b794:	beq	1b7a4 <__flatcc_fb_gen_c_verifier@@Base+0x134>
   1b798:	ldr	r0, [pc, #388]	; 1b924 <__flatcc_fb_gen_c_verifier@@Base+0x2b4>
   1b79c:	ldr	r1, [r4, #204]	; 0xcc
   1b7a0:	bl	14158 <fputs@plt>
   1b7a4:	ldr	r1, [pc, #380]	; 1b928 <__flatcc_fb_gen_c_verifier@@Base+0x2b8>
   1b7a8:	ldr	r3, [r4, #208]	; 0xd0
   1b7ac:	ldr	r0, [r4, #204]	; 0xcc
   1b7b0:	ldr	r2, [r3, #164]	; 0xa4
   1b7b4:	bl	140bc <fprintf@plt>
   1b7b8:	mov	r0, #0
   1b7bc:	add	sp, sp, #240	; 0xf0
   1b7c0:	pop	{r4, r5, r6, r7, r8, pc}
   1b7c4:	ldrh	r3, [r5, #8]
   1b7c8:	cmp	r3, #0
   1b7cc:	bne	1b7ec <__flatcc_fb_gen_c_verifier@@Base+0x17c>
   1b7d0:	add	r1, sp, #20
   1b7d4:	mov	r0, r5
   1b7d8:	bl	1b090 <__flatcc_fb_gen_c_builder@@Base+0x610>
   1b7dc:	add	r2, sp, #20
   1b7e0:	mov	r1, r6
   1b7e4:	ldr	r0, [r4, #204]	; 0xcc
   1b7e8:	bl	140bc <fprintf@plt>
   1b7ec:	ldr	r5, [r5]
   1b7f0:	b	1b734 <__flatcc_fb_gen_c_verifier@@Base+0xc4>
   1b7f4:	ldrh	r3, [r5, #8]
   1b7f8:	cmp	r3, #4
   1b7fc:	bne	1b80c <__flatcc_fb_gen_c_verifier@@Base+0x19c>
   1b800:	mov	r1, r5
   1b804:	mov	r0, r6
   1b808:	bl	1b4b0 <__flatcc_fb_gen_c_builder@@Base+0xa30>
   1b80c:	ldr	r5, [r5]
   1b810:	b	1b754 <__flatcc_fb_gen_c_verifier@@Base+0xe4>
   1b814:	ldrh	r3, [r5, #8]
   1b818:	cmp	r3, #1
   1b81c:	bne	1b8c8 <__flatcc_fb_gen_c_verifier@@Base+0x258>
   1b820:	mov	r2, #220	; 0xdc
   1b824:	mov	r1, #0
   1b828:	add	r0, sp, #20
   1b82c:	bl	140d4 <memset@plt>
   1b830:	add	r1, sp, #20
   1b834:	mov	r0, r5
   1b838:	bl	1b090 <__flatcc_fb_gen_c_builder@@Base+0x610>
   1b83c:	ldrh	r3, [r5, #104]	; 0x68
   1b840:	mov	r1, r6
   1b844:	ldr	r0, [r4, #204]	; 0xcc
   1b848:	str	r3, [sp, #8]
   1b84c:	ldrd	r2, [r5, #112]	; 0x70
   1b850:	strd	r2, [sp]
   1b854:	add	r3, sp, #20
   1b858:	mov	r2, r3
   1b85c:	bl	140bc <fprintf@plt>
   1b860:	ldrh	r3, [r5, #104]	; 0x68
   1b864:	mov	r1, r7
   1b868:	ldr	r0, [r4, #204]	; 0xcc
   1b86c:	str	r3, [sp, #8]
   1b870:	ldrd	r2, [r5, #112]	; 0x70
   1b874:	strd	r2, [sp]
   1b878:	add	r3, sp, #20
   1b87c:	mov	r2, r3
   1b880:	bl	140bc <fprintf@plt>
   1b884:	ldrh	r3, [r5, #104]	; 0x68
   1b888:	mov	r1, r8
   1b88c:	ldr	r0, [r4, #204]	; 0xcc
   1b890:	str	r3, [sp, #8]
   1b894:	ldrd	r2, [r5, #112]	; 0x70
   1b898:	strd	r2, [sp]
   1b89c:	mov	r3, r4
   1b8a0:	add	r2, sp, #20
   1b8a4:	bl	140bc <fprintf@plt>
   1b8a8:	ldrh	r3, [r5, #104]	; 0x68
   1b8ac:	ldr	r0, [r4, #204]	; 0xcc
   1b8b0:	ldr	r1, [pc, #116]	; 1b92c <__flatcc_fb_gen_c_verifier@@Base+0x2bc>
   1b8b4:	str	r3, [sp, #8]
   1b8b8:	ldrd	r2, [r5, #112]	; 0x70
   1b8bc:	strd	r2, [sp]
   1b8c0:	add	r2, sp, #20
   1b8c4:	bl	140bc <fprintf@plt>
   1b8c8:	ldr	r5, [r5]
   1b8cc:	b	1b770 <__flatcc_fb_gen_c_verifier@@Base+0x100>
   1b8d0:	ldrh	r3, [r5, #8]
   1b8d4:	cmp	r3, #0
   1b8d8:	bne	1b8e8 <__flatcc_fb_gen_c_verifier@@Base+0x278>
   1b8dc:	mov	r1, r5
   1b8e0:	mov	r0, r4
   1b8e4:	bl	1b0a0 <__flatcc_fb_gen_c_builder@@Base+0x620>
   1b8e8:	ldr	r5, [r5]
   1b8ec:	b	1b780 <__flatcc_fb_gen_c_verifier@@Base+0x110>
   1b8f0:	andeq	r2, r4, fp, asr #28
   1b8f4:	muleq	r3, sl, r0
   1b8f8:	andeq	r2, r4, sp, ror #6
   1b8fc:	andeq	r2, r4, r2, lsl #7
   1b900:	andeq	r8, r3, pc, ror #3
   1b904:	andeq	r2, r4, r8, ror lr
   1b908:	muleq	r4, sp, lr
   1b90c:	andeq	r0, r3, r9, lsr #22
   1b910:	andeq	r2, r3, r9, lsr #3
   1b914:	andeq	r2, r4, r9, lsr #29
   1b918:	andeq	r2, r4, lr, ror #29
   1b91c:	andeq	r2, r4, r7, lsl #31
   1b920:	andeq	r3, r4, fp, lsr #32
   1b924:	muleq	r3, r3, pc	; <UNPREDICTABLE>
   1b928:	muleq	r4, r2, r1
   1b92c:	andeq	r3, r4, r2, ror #1
   1b930:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b934:	mov	r8, r3
   1b938:	ldr	r3, [r0, #4]
   1b93c:	ldr	r7, [sp, #48]	; 0x30
   1b940:	ldr	r6, [sp, #52]	; 0x34
   1b944:	cmp	r3, r1
   1b948:	movlt	ip, #0
   1b94c:	movlt	r0, ip
   1b950:	blt	1b9b4 <__flatcc_fb_gen_c_verifier@@Base+0x344>
   1b954:	ldr	ip, [r0]
   1b958:	sub	r0, r3, r1
   1b95c:	mov	r3, #0
   1b960:	cmp	r0, #8
   1b964:	mvn	sl, #7
   1b968:	movge	r0, #8
   1b96c:	mov	r9, r3
   1b970:	mov	lr, r0
   1b974:	add	ip, ip, r1
   1b978:	subs	lr, lr, #1
   1b97c:	bcs	1b9cc <__flatcc_fb_gen_c_verifier@@Base+0x35c>
   1b980:	rsb	r1, r0, #8
   1b984:	mov	lr, #1
   1b988:	stm	r2, {r3, r9}
   1b98c:	lsl	r1, r1, #3
   1b990:	mov	r3, #0
   1b994:	sub	r5, r1, #32
   1b998:	rsb	r4, r1, #32
   1b99c:	lsl	r2, lr, r1
   1b9a0:	orr	r3, r3, lr, lsl r5
   1b9a4:	rsbs	r2, r2, #0
   1b9a8:	orr	r3, r3, lr, lsr r4
   1b9ac:	rsc	r3, r3, #0
   1b9b0:	strd	r2, [r8]
   1b9b4:	cmp	r7, #0
   1b9b8:	strne	ip, [r7]
   1b9bc:	cmp	r6, #0
   1b9c0:	strne	r0, [r6]
   1b9c4:	add	sp, sp, #12
   1b9c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b9cc:	ldrb	r4, [ip, lr]
   1b9d0:	mov	r5, #0
   1b9d4:	mul	r1, sl, lr
   1b9d8:	strd	r4, [sp]
   1b9dc:	add	r5, r1, #56	; 0x38
   1b9e0:	add	r1, r1, #24
   1b9e4:	ldr	r4, [sp]
   1b9e8:	rsb	fp, r5, #32
   1b9ec:	lsl	r1, r4, r1
   1b9f0:	orr	r3, r3, r4, lsl r5
   1b9f4:	orr	r1, r1, r4, lsr fp
   1b9f8:	orr	r9, r1, r9
   1b9fc:	b	1b978 <__flatcc_fb_gen_c_verifier@@Base+0x308>
   1ba00:	ldrh	r3, [r0, #24]
   1ba04:	sub	r3, r3, #14
   1ba08:	cmp	r3, #1
   1ba0c:	ldrls	r3, [r0, #16]
   1ba10:	ldrhls	r0, [r3, #8]
   1ba14:	subls	r0, r0, #4
   1ba18:	clzls	r0, r0
   1ba1c:	lsrls	r0, r0, #5
   1ba20:	movhi	r0, #0
   1ba24:	bx	lr
   1ba28:	push	{r1, r2, r3}
   1ba2c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, lr}
   1ba30:	mov	r5, r0
   1ba34:	ldr	r3, [r0, #212]	; 0xd4
   1ba38:	ldr	r7, [r0, #220]	; 0xdc
   1ba3c:	ldr	r0, [pc, #152]	; 1badc <__flatcc_fb_gen_c_verifier@@Base+0x46c>
   1ba40:	ldr	r4, [r3, #176]	; 0xb0
   1ba44:	ldr	r6, [sp, #36]	; 0x24
   1ba48:	ldrb	r3, [r0]
   1ba4c:	cmp	r3, #0
   1ba50:	bne	1ba60 <__flatcc_fb_gen_c_verifier@@Base+0x3f0>
   1ba54:	mov	r2, #64	; 0x40
   1ba58:	mov	r1, #32
   1ba5c:	bl	140d4 <memset@plt>
   1ba60:	ldrb	r3, [r6]
   1ba64:	cmp	r3, #0
   1ba68:	beq	1baa8 <__flatcc_fb_gen_c_verifier@@Base+0x438>
   1ba6c:	mul	r4, r4, r7
   1ba70:	ldr	r8, [pc, #104]	; 1bae0 <__flatcc_fb_gen_c_verifier@@Base+0x470>
   1ba74:	ldr	r7, [pc, #96]	; 1badc <__flatcc_fb_gen_c_verifier@@Base+0x46c>
   1ba78:	cmp	r4, #64	; 0x40
   1ba7c:	ldr	r0, [r5, #204]	; 0xcc
   1ba80:	bgt	1bac4 <__flatcc_fb_gen_c_verifier@@Base+0x454>
   1ba84:	mov	r2, r4
   1ba88:	ldr	r1, [pc, #80]	; 1bae0 <__flatcc_fb_gen_c_verifier@@Base+0x470>
   1ba8c:	ldr	r3, [pc, #72]	; 1badc <__flatcc_fb_gen_c_verifier@@Base+0x46c>
   1ba90:	bl	140bc <fprintf@plt>
   1ba94:	add	r2, sp, #40	; 0x28
   1ba98:	mov	r1, r6
   1ba9c:	ldr	r0, [r5, #204]	; 0xcc
   1baa0:	str	r2, [sp, #4]
   1baa4:	bl	14110 <vfprintf@plt>
   1baa8:	ldr	r1, [r5, #204]	; 0xcc
   1baac:	mov	r0, #10
   1bab0:	bl	1411c <fputc@plt>
   1bab4:	add	sp, sp, #12
   1bab8:	pop	{r4, r5, r6, r7, r8, lr}
   1babc:	add	sp, sp, #12
   1bac0:	bx	lr
   1bac4:	mov	r3, r7
   1bac8:	mov	r2, #64	; 0x40
   1bacc:	mov	r1, r8
   1bad0:	sub	r4, r4, #64	; 0x40
   1bad4:	bl	140bc <fprintf@plt>
   1bad8:	b	1ba78 <__flatcc_fb_gen_c_verifier@@Base+0x408>
   1badc:	strheq	fp, [r5], -r9
   1bae0:	andeq	r9, r3, fp, asr #4
   1bae4:	ldr	r1, [pc]	; 1baec <__flatcc_fb_gen_c_verifier@@Base+0x47c>
   1bae8:	b	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1baec:	muleq	r4, r6, r3
   1baf0:	ldr	r1, [pc]	; 1baf8 <__flatcc_fb_gen_c_verifier@@Base+0x488>
   1baf4:	b	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1baf8:	ldrdeq	r3, [r4], -r0
   1bafc:	b	1baf0 <__flatcc_fb_gen_c_verifier@@Base+0x480>
   1bb00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bb04:	mov	r8, r2
   1bb08:	mov	r9, r3
   1bb0c:	sub	r6, r9, r8
   1bb10:	sub	sp, sp, #44	; 0x2c
   1bb14:	add	r6, r6, #1
   1bb18:	mov	r2, #0
   1bb1c:	mov	r3, #0
   1bb20:	add	r6, r6, r6, lsr #31
   1bb24:	mov	r4, r0
   1bb28:	ldr	r0, [r1]
   1bb2c:	mov	r5, r1
   1bb30:	add	r6, r8, r6, asr #1
   1bb34:	strd	r2, [sp, #24]
   1bb38:	strd	r2, [sp, #32]
   1bb3c:	add	r3, sp, #20
   1bb40:	add	r2, sp, #24
   1bb44:	lsl	fp, r6, #4
   1bb48:	ldr	r1, [sp, #80]	; 0x50
   1bb4c:	str	r3, [sp, #4]
   1bb50:	add	r3, sp, #16
   1bb54:	add	r0, r0, fp
   1bb58:	ldr	r7, [sp, #84]	; 0x54
   1bb5c:	str	r3, [sp]
   1bb60:	add	r3, sp, #32
   1bb64:	bl	1b930 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1bb68:	cmp	r0, #8
   1bb6c:	mov	sl, r0
   1bb70:	ldrd	r2, [sp, #16]
   1bb74:	bne	1bc20 <__flatcc_fb_gen_c_verifier@@Base+0x5b0>
   1bb78:	ldr	r1, [pc, #592]	; 1bdd0 <__flatcc_fb_gen_c_verifier@@Base+0x760>
   1bb7c:	mov	r0, r4
   1bb80:	str	r3, [sp]
   1bb84:	str	r2, [sp, #4]
   1bb88:	ldrd	r2, [sp, #24]
   1bb8c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bb90:	ldr	r3, [r4, #220]	; 0xdc
   1bb94:	cmp	r8, r6
   1bb98:	add	r3, r3, #1
   1bb9c:	str	r3, [r4, #220]	; 0xdc
   1bba0:	bne	1bcdc <__flatcc_fb_gen_c_verifier@@Base+0x66c>
   1bba4:	ldm	r5, {r3, r6}
   1bba8:	mov	r0, r4
   1bbac:	ldr	r1, [r5, #12]
   1bbb0:	str	sl, [sp]
   1bbb4:	add	fp, r3, fp
   1bbb8:	ldrd	r2, [fp, #8]
   1bbbc:	blx	r6
   1bbc0:	cmp	r7, #0
   1bbc4:	ble	1bc44 <__flatcc_fb_gen_c_verifier@@Base+0x5d4>
   1bbc8:	mov	r2, r7
   1bbcc:	ldr	r1, [pc, #512]	; 1bdd4 <__flatcc_fb_gen_c_verifier@@Base+0x764>
   1bbd0:	mov	r0, r4
   1bbd4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bbd8:	ldr	r3, [r4, #220]	; 0xdc
   1bbdc:	cmp	r3, #0
   1bbe0:	ldreq	r3, [pc, #496]	; 1bdd8 <__flatcc_fb_gen_c_verifier@@Base+0x768>
   1bbe4:	moveq	r2, #888	; 0x378
   1bbe8:	beq	1bc14 <__flatcc_fb_gen_c_verifier@@Base+0x5a4>
   1bbec:	sub	r3, r3, #1
   1bbf0:	mov	r0, r4
   1bbf4:	ldr	r1, [pc, #480]	; 1bddc <__flatcc_fb_gen_c_verifier@@Base+0x76c>
   1bbf8:	str	r3, [r4, #220]	; 0xdc
   1bbfc:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bc00:	ldr	r3, [r4, #220]	; 0xdc
   1bc04:	cmp	r3, #0
   1bc08:	bne	1bc54 <__flatcc_fb_gen_c_verifier@@Base+0x5e4>
   1bc0c:	ldr	r3, [pc, #452]	; 1bdd8 <__flatcc_fb_gen_c_verifier@@Base+0x768>
   1bc10:	movw	r2, #889	; 0x379
   1bc14:	ldr	r1, [pc, #452]	; 1bde0 <__flatcc_fb_gen_c_verifier@@Base+0x770>
   1bc18:	ldr	r0, [pc, #452]	; 1bde4 <__flatcc_fb_gen_c_verifier@@Base+0x774>
   1bc1c:	bl	1417c <__assert_fail@plt>
   1bc20:	str	r3, [sp, #8]
   1bc24:	mov	r0, r4
   1bc28:	str	r2, [sp, #12]
   1bc2c:	ldrd	r2, [sp, #24]
   1bc30:	ldr	r1, [pc, #432]	; 1bde8 <__flatcc_fb_gen_c_verifier@@Base+0x778>
   1bc34:	strd	r2, [sp]
   1bc38:	ldrd	r2, [sp, #32]
   1bc3c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bc40:	b	1bb90 <__flatcc_fb_gen_c_verifier@@Base+0x520>
   1bc44:	mov	r0, r4
   1bc48:	ldr	r3, [r5, #8]
   1bc4c:	blx	r3
   1bc50:	b	1bbd8 <__flatcc_fb_gen_c_verifier@@Base+0x568>
   1bc54:	sub	r3, r3, #1
   1bc58:	ldr	r1, [pc, #396]	; 1bdec <__flatcc_fb_gen_c_verifier@@Base+0x77c>
   1bc5c:	mov	r0, r4
   1bc60:	str	r3, [r4, #220]	; 0xdc
   1bc64:	ldr	r3, [sp, #16]
   1bc68:	ldr	r2, [sp, #20]
   1bc6c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bc70:	ldr	r3, [r4, #220]	; 0xdc
   1bc74:	cmp	r7, #0
   1bc78:	add	r3, r3, #1
   1bc7c:	str	r3, [r4, #220]	; 0xdc
   1bc80:	ble	1bccc <__flatcc_fb_gen_c_verifier@@Base+0x65c>
   1bc84:	mov	r2, r7
   1bc88:	ldr	r1, [pc, #324]	; 1bdd4 <__flatcc_fb_gen_c_verifier@@Base+0x764>
   1bc8c:	mov	r0, r4
   1bc90:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bc94:	ldr	r3, [r4, #220]	; 0xdc
   1bc98:	cmp	r3, #0
   1bc9c:	ldreq	r3, [pc, #308]	; 1bdd8 <__flatcc_fb_gen_c_verifier@@Base+0x768>
   1bca0:	movweq	r2, #910	; 0x38e
   1bca4:	beq	1bc14 <__flatcc_fb_gen_c_verifier@@Base+0x5a4>
   1bca8:	sub	r3, r3, #1
   1bcac:	mov	r0, r4
   1bcb0:	ldr	r1, [pc, #312]	; 1bdf0 <__flatcc_fb_gen_c_verifier@@Base+0x780>
   1bcb4:	str	r3, [r4, #220]	; 0xdc
   1bcb8:	ldr	r3, [sp, #16]
   1bcbc:	ldr	r2, [sp, #20]
   1bcc0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bcc4:	add	sp, sp, #44	; 0x2c
   1bcc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bccc:	mov	r0, r4
   1bcd0:	ldr	r3, [r5, #8]
   1bcd4:	blx	r3
   1bcd8:	b	1bc94 <__flatcc_fb_gen_c_verifier@@Base+0x624>
   1bcdc:	cmp	r9, r6
   1bce0:	bne	1bdb0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
   1bce4:	ldm	r5, {r3, r9}
   1bce8:	mov	r0, r4
   1bcec:	ldr	r1, [r5, #12]
   1bcf0:	str	sl, [sp]
   1bcf4:	add	fp, r3, fp
   1bcf8:	ldrd	r2, [fp, #8]
   1bcfc:	blx	r9
   1bd00:	cmp	r7, #0
   1bd04:	ble	1bda0 <__flatcc_fb_gen_c_verifier@@Base+0x730>
   1bd08:	mov	r2, r7
   1bd0c:	ldr	r1, [pc, #192]	; 1bdd4 <__flatcc_fb_gen_c_verifier@@Base+0x764>
   1bd10:	mov	r0, r4
   1bd14:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bd18:	ldr	r3, [r4, #220]	; 0xdc
   1bd1c:	cmp	r3, #0
   1bd20:	ldreq	r3, [pc, #176]	; 1bdd8 <__flatcc_fb_gen_c_verifier@@Base+0x768>
   1bd24:	movweq	r2, #903	; 0x387
   1bd28:	beq	1bc14 <__flatcc_fb_gen_c_verifier@@Base+0x5a4>
   1bd2c:	sub	r3, r3, #1
   1bd30:	mov	r0, r4
   1bd34:	ldr	r1, [pc, #160]	; 1bddc <__flatcc_fb_gen_c_verifier@@Base+0x76c>
   1bd38:	str	r3, [r4, #220]	; 0xdc
   1bd3c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bd40:	ldr	r3, [r4, #220]	; 0xdc
   1bd44:	cmp	r3, #0
   1bd48:	ldreq	r3, [pc, #136]	; 1bdd8 <__flatcc_fb_gen_c_verifier@@Base+0x768>
   1bd4c:	movweq	r2, #907	; 0x38b
   1bd50:	beq	1bc14 <__flatcc_fb_gen_c_verifier@@Base+0x5a4>
   1bd54:	sub	r3, r3, #1
   1bd58:	mov	r0, r4
   1bd5c:	ldr	r1, [pc, #136]	; 1bdec <__flatcc_fb_gen_c_verifier@@Base+0x77c>
   1bd60:	str	r3, [r4, #220]	; 0xdc
   1bd64:	ldr	r3, [sp, #16]
   1bd68:	ldr	r2, [sp, #20]
   1bd6c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bd70:	ldr	r3, [r4, #220]	; 0xdc
   1bd74:	mov	r2, r8
   1bd78:	mov	r1, r5
   1bd7c:	mov	r0, r4
   1bd80:	add	r3, r3, #1
   1bd84:	str	r3, [r4, #220]	; 0xdc
   1bd88:	ldr	r3, [sp, #80]	; 0x50
   1bd8c:	str	r3, [sp]
   1bd90:	sub	r3, r6, #1
   1bd94:	str	r7, [sp, #4]
   1bd98:	bl	1bb00 <__flatcc_fb_gen_c_verifier@@Base+0x490>
   1bd9c:	b	1bc94 <__flatcc_fb_gen_c_verifier@@Base+0x624>
   1bda0:	mov	r0, r4
   1bda4:	ldr	r3, [r5, #8]
   1bda8:	blx	r3
   1bdac:	b	1bd18 <__flatcc_fb_gen_c_verifier@@Base+0x6a8>
   1bdb0:	ldr	r3, [sp, #80]	; 0x50
   1bdb4:	mov	r2, r6
   1bdb8:	mov	r1, r5
   1bdbc:	mov	r0, r4
   1bdc0:	stm	sp, {r3, r7}
   1bdc4:	mov	r3, r9
   1bdc8:	bl	1bb00 <__flatcc_fb_gen_c_verifier@@Base+0x490>
   1bdcc:	b	1bd40 <__flatcc_fb_gen_c_verifier@@Base+0x6d0>
   1bdd0:	andeq	r3, r4, r2, ror #7
   1bdd4:	andeq	r3, r4, sp, lsr #8
   1bdd8:			; <UNDEFINED> instruction: 0x000431b0
   1bddc:	andeq	r7, r3, sp, ror #7
   1bde0:	andeq	r3, r4, sp, lsr r4
   1bde4:	muleq	r4, r2, r4
   1bde8:	andeq	r3, r4, r2, lsl #8
   1bdec:	muleq	r4, lr, r4
   1bdf0:			; <UNDEFINED> instruction: 0x000434b4
   1bdf4:	push	{r4, lr}
   1bdf8:	sub	sp, sp, #208	; 0xd0
   1bdfc:	mov	r4, r0
   1be00:	mov	r0, r1
   1be04:	add	r1, sp, #4
   1be08:	bl	15948 <__flatcc_fb_copy_scope@@Base>
   1be0c:	ldr	r2, [r4, #208]	; 0xd0
   1be10:	add	r3, sp, #4
   1be14:	mov	r0, r4
   1be18:	ldr	r1, [pc, #24]	; 1be38 <__flatcc_fb_gen_c_verifier@@Base+0x7c8>
   1be1c:	ldr	r2, [r2, #160]	; 0xa0
   1be20:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1be24:	ldr	r1, [pc, #16]	; 1be3c <__flatcc_fb_gen_c_verifier@@Base+0x7cc>
   1be28:	mov	r0, r4
   1be2c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1be30:	add	sp, sp, #208	; 0xd0
   1be34:	pop	{r4, pc}
   1be38:	andeq	r3, r4, r3, asr #9
   1be3c:	andeq	r3, r4, pc, lsr #10
   1be40:	mov	r2, r1
   1be44:	mov	r1, r0
   1be48:	ldr	r0, [r0, #12]
   1be4c:	b	159e4 <__flatcc_fb_scoped_symbol_name@@Base>
   1be50:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1be54:	sub	sp, sp, #448	; 0x1c0
   1be58:	mov	r4, r0
   1be5c:	mov	r5, r1
   1be60:	mov	r2, #220	; 0xdc
   1be64:	mov	r1, #0
   1be68:	add	r0, sp, #8
   1be6c:	bl	140d4 <memset@plt>
   1be70:	mov	r2, #220	; 0xdc
   1be74:	mov	r1, #0
   1be78:	add	r0, sp, #228	; 0xe4
   1be7c:	bl	140d4 <memset@plt>
   1be80:	add	r1, sp, #8
   1be84:	mov	r0, r5
   1be88:	bl	1be40 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1be8c:	add	r2, sp, #8
   1be90:	ldr	r1, [pc, #904]	; 1c220 <__flatcc_fb_gen_c_verifier@@Base+0xbb0>
   1be94:	mov	r0, r4
   1be98:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1be9c:	ldr	r1, [pc, #896]	; 1c224 <__flatcc_fb_gen_c_verifier@@Base+0xbb4>
   1bea0:	mov	r0, r4
   1bea4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bea8:	ldr	r3, [r4, #220]	; 0xdc
   1beac:	mov	r0, r4
   1beb0:	ldr	r1, [pc, #880]	; 1c228 <__flatcc_fb_gen_c_verifier@@Base+0xbb8>
   1beb4:	add	r3, r3, #1
   1beb8:	str	r3, [r4, #220]	; 0xdc
   1bebc:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bec0:	ldr	r1, [pc, #868]	; 1c22c <__flatcc_fb_gen_c_verifier@@Base+0xbbc>
   1bec4:	mov	r0, r4
   1bec8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1becc:	ldr	r1, [pc, #860]	; 1c230 <__flatcc_fb_gen_c_verifier@@Base+0xbc0>
   1bed0:	mov	r0, r4
   1bed4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bed8:	ldr	r1, [pc, #852]	; 1c234 <__flatcc_fb_gen_c_verifier@@Base+0xbc4>
   1bedc:	mov	r0, r4
   1bee0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bee4:	ldr	r3, [r4, #220]	; 0xdc
   1bee8:	mov	r0, r4
   1beec:	ldr	r1, [pc, #836]	; 1c238 <__flatcc_fb_gen_c_verifier@@Base+0xbc8>
   1bef0:	add	r3, r3, #1
   1bef4:	str	r3, [r4, #220]	; 0xdc
   1bef8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1befc:	ldr	r3, [r4, #220]	; 0xdc
   1bf00:	cmp	r3, #0
   1bf04:	ldreq	r3, [pc, #816]	; 1c23c <__flatcc_fb_gen_c_verifier@@Base+0xbcc>
   1bf08:	movweq	r2, #1503	; 0x5df
   1bf0c:	beq	1c154 <__flatcc_fb_gen_c_verifier@@Base+0xae4>
   1bf10:	sub	r3, r3, #1
   1bf14:	ldr	r6, [pc, #804]	; 1c240 <__flatcc_fb_gen_c_verifier@@Base+0xbd0>
   1bf18:	ldr	r8, [pc, #804]	; 1c244 <__flatcc_fb_gen_c_verifier@@Base+0xbd4>
   1bf1c:	ldr	r7, [pc, #804]	; 1c248 <__flatcc_fb_gen_c_verifier@@Base+0xbd8>
   1bf20:	ldr	r5, [r5, #20]
   1bf24:	str	r3, [r4, #220]	; 0xdc
   1bf28:	cmp	r5, #0
   1bf2c:	bne	1c078 <__flatcc_fb_gen_c_verifier@@Base+0xa08>
   1bf30:	ldr	r1, [pc, #788]	; 1c24c <__flatcc_fb_gen_c_verifier@@Base+0xbdc>
   1bf34:	mov	r0, r4
   1bf38:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bf3c:	ldr	r3, [r4, #220]	; 0xdc
   1bf40:	mov	r0, r4
   1bf44:	ldr	r1, [pc, #772]	; 1c250 <__flatcc_fb_gen_c_verifier@@Base+0xbe0>
   1bf48:	add	r3, r3, #1
   1bf4c:	str	r3, [r4, #220]	; 0xdc
   1bf50:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bf54:	ldr	r3, [r4, #220]	; 0xdc
   1bf58:	mov	r0, r4
   1bf5c:	ldr	r1, [pc, #752]	; 1c254 <__flatcc_fb_gen_c_verifier@@Base+0xbe4>
   1bf60:	add	r3, r3, #1
   1bf64:	str	r3, [r4, #220]	; 0xdc
   1bf68:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bf6c:	ldr	r3, [r4, #220]	; 0xdc
   1bf70:	cmp	r3, #0
   1bf74:	ldreq	r3, [pc, #704]	; 1c23c <__flatcc_fb_gen_c_verifier@@Base+0xbcc>
   1bf78:	movweq	r2, #1543	; 0x607
   1bf7c:	beq	1c154 <__flatcc_fb_gen_c_verifier@@Base+0xae4>
   1bf80:	sub	r3, r3, #1
   1bf84:	mov	r0, r4
   1bf88:	ldr	r1, [pc, #712]	; 1c258 <__flatcc_fb_gen_c_verifier@@Base+0xbe8>
   1bf8c:	str	r3, [r4, #220]	; 0xdc
   1bf90:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bf94:	ldr	r3, [r4, #220]	; 0xdc
   1bf98:	mov	r0, r4
   1bf9c:	ldr	r1, [pc, #696]	; 1c25c <__flatcc_fb_gen_c_verifier@@Base+0xbec>
   1bfa0:	add	r3, r3, #1
   1bfa4:	str	r3, [r4, #220]	; 0xdc
   1bfa8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bfac:	ldr	r3, [r4, #220]	; 0xdc
   1bfb0:	cmp	r3, #0
   1bfb4:	ldreq	r3, [pc, #640]	; 1c23c <__flatcc_fb_gen_c_verifier@@Base+0xbcc>
   1bfb8:	movweq	r2, #1545	; 0x609
   1bfbc:	beq	1c154 <__flatcc_fb_gen_c_verifier@@Base+0xae4>
   1bfc0:	sub	r3, r3, #1
   1bfc4:	mov	r0, r4
   1bfc8:	ldr	r1, [pc, #656]	; 1c260 <__flatcc_fb_gen_c_verifier@@Base+0xbf0>
   1bfcc:	str	r3, [r4, #220]	; 0xdc
   1bfd0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bfd4:	ldr	r3, [r4, #220]	; 0xdc
   1bfd8:	cmp	r3, #0
   1bfdc:	ldreq	r3, [pc, #600]	; 1c23c <__flatcc_fb_gen_c_verifier@@Base+0xbcc>
   1bfe0:	movweq	r2, #1546	; 0x60a
   1bfe4:	beq	1c154 <__flatcc_fb_gen_c_verifier@@Base+0xae4>
   1bfe8:	sub	r3, r3, #1
   1bfec:	mov	r0, r4
   1bff0:	ldr	r1, [pc, #616]	; 1c260 <__flatcc_fb_gen_c_verifier@@Base+0xbf0>
   1bff4:	str	r3, [r4, #220]	; 0xdc
   1bff8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bffc:	ldr	r1, [pc, #608]	; 1c264 <__flatcc_fb_gen_c_verifier@@Base+0xbf4>
   1c000:	mov	r0, r4
   1c004:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c008:	ldr	r1, [pc, #600]	; 1c268 <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   1c00c:	mov	r0, r4
   1c010:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c014:	ldr	r3, [r4, #220]	; 0xdc
   1c018:	mov	r0, r4
   1c01c:	ldr	r1, [pc, #584]	; 1c26c <__flatcc_fb_gen_c_verifier@@Base+0xbfc>
   1c020:	add	r3, r3, #1
   1c024:	str	r3, [r4, #220]	; 0xdc
   1c028:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c02c:	ldr	r3, [r4, #220]	; 0xdc
   1c030:	cmp	r3, #0
   1c034:	ldreq	r3, [pc, #512]	; 1c23c <__flatcc_fb_gen_c_verifier@@Base+0xbcc>
   1c038:	movweq	r2, #1550	; 0x60e
   1c03c:	beq	1c154 <__flatcc_fb_gen_c_verifier@@Base+0xae4>
   1c040:	sub	r3, r3, #1
   1c044:	mov	r0, r4
   1c048:	ldr	r1, [pc, #528]	; 1c260 <__flatcc_fb_gen_c_verifier@@Base+0xbf0>
   1c04c:	str	r3, [r4, #220]	; 0xdc
   1c050:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c054:	ldr	r1, [pc, #532]	; 1c270 <__flatcc_fb_gen_c_verifier@@Base+0xc00>
   1c058:	mov	r0, r4
   1c05c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c060:	ldr	r3, [r4, #220]	; 0xdc
   1c064:	cmp	r3, #0
   1c068:	bne	1c1f4 <__flatcc_fb_gen_c_verifier@@Base+0xb84>
   1c06c:	ldr	r3, [pc, #456]	; 1c23c <__flatcc_fb_gen_c_verifier@@Base+0xbcc>
   1c070:	mov	r2, #1552	; 0x610
   1c074:	b	1c154 <__flatcc_fb_gen_c_verifier@@Base+0xae4>
   1c078:	ldrh	r2, [r5, #24]
   1c07c:	ldr	r3, [r5, #4]
   1c080:	cmp	r2, #10
   1c084:	ldr	sl, [r3]
   1c088:	ldr	r9, [r3, #4]
   1c08c:	beq	1c16c <__flatcc_fb_gen_c_verifier@@Base+0xafc>
   1c090:	cmp	r2, #14
   1c094:	beq	1c0a8 <__flatcc_fb_gen_c_verifier@@Base+0xa38>
   1c098:	cmp	r2, #0
   1c09c:	bne	1c1c8 <__flatcc_fb_gen_c_verifier@@Base+0xb58>
   1c0a0:	ldr	r5, [r5]
   1c0a4:	b	1bf28 <__flatcc_fb_gen_c_verifier@@Base+0x8b8>
   1c0a8:	add	r1, sp, #228	; 0xe4
   1c0ac:	ldr	r0, [r5, #16]
   1c0b0:	bl	1be40 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1c0b4:	mov	r3, r9
   1c0b8:	mov	r1, r6
   1c0bc:	str	sl, [sp]
   1c0c0:	mov	r0, r4
   1c0c4:	ldr	r2, [r5, #48]	; 0x30
   1c0c8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c0cc:	ldr	r3, [r4, #220]	; 0xdc
   1c0d0:	add	r3, r3, #1
   1c0d4:	str	r3, [r4, #220]	; 0xdc
   1c0d8:	ldr	r3, [r5, #16]
   1c0dc:	ldrh	r3, [r3, #8]
   1c0e0:	cmp	r3, #0
   1c0e4:	beq	1c124 <__flatcc_fb_gen_c_verifier@@Base+0xab4>
   1c0e8:	cmp	r3, #1
   1c0ec:	beq	1c160 <__flatcc_fb_gen_c_verifier@@Base+0xaf0>
   1c0f0:	ldr	r3, [pc, #380]	; 1c274 <__flatcc_fb_gen_c_verifier@@Base+0xc04>
   1c0f4:	ldr	r0, [pc, #380]	; 1c278 <__flatcc_fb_gen_c_verifier@@Base+0xc08>
   1c0f8:	ldr	r2, [pc, #380]	; 1c27c <__flatcc_fb_gen_c_verifier@@Base+0xc0c>
   1c0fc:	str	r3, [sp]
   1c100:	movw	r3, #1522	; 0x5f2
   1c104:	ldr	r1, [pc, #372]	; 1c280 <__flatcc_fb_gen_c_verifier@@Base+0xc10>
   1c108:	ldr	r0, [r0]
   1c10c:	bl	140bc <fprintf@plt>
   1c110:	ldr	r3, [pc, #292]	; 1c23c <__flatcc_fb_gen_c_verifier@@Base+0xbcc>
   1c114:	movw	r2, #1522	; 0x5f2
   1c118:	ldr	r1, [pc, #348]	; 1c27c <__flatcc_fb_gen_c_verifier@@Base+0xc0c>
   1c11c:	ldr	r0, [pc, #352]	; 1c284 <__flatcc_fb_gen_c_verifier@@Base+0xc14>
   1c120:	bl	1417c <__assert_fail@plt>
   1c124:	ldr	r1, [pc, #348]	; 1c288 <__flatcc_fb_gen_c_verifier@@Base+0xc18>
   1c128:	add	r2, sp, #228	; 0xe4
   1c12c:	mov	r0, r4
   1c130:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c134:	mov	r1, r7
   1c138:	mov	r0, r4
   1c13c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c140:	ldr	r3, [r4, #220]	; 0xdc
   1c144:	cmp	r3, #0
   1c148:	bne	1c1bc <__flatcc_fb_gen_c_verifier@@Base+0xb4c>
   1c14c:	ldr	r3, [pc, #232]	; 1c23c <__flatcc_fb_gen_c_verifier@@Base+0xbcc>
   1c150:	movw	r2, #1526	; 0x5f6
   1c154:	ldr	r1, [pc, #288]	; 1c27c <__flatcc_fb_gen_c_verifier@@Base+0xc0c>
   1c158:	ldr	r0, [pc, #300]	; 1c28c <__flatcc_fb_gen_c_verifier@@Base+0xc1c>
   1c15c:	b	1c120 <__flatcc_fb_gen_c_verifier@@Base+0xab0>
   1c160:	add	r2, sp, #228	; 0xe4
   1c164:	ldr	r1, [pc, #292]	; 1c290 <__flatcc_fb_gen_c_verifier@@Base+0xc20>
   1c168:	b	1c12c <__flatcc_fb_gen_c_verifier@@Base+0xabc>
   1c16c:	mov	r3, r9
   1c170:	mov	r1, r6
   1c174:	str	sl, [sp]
   1c178:	mov	r0, r4
   1c17c:	ldr	r2, [r5, #48]	; 0x30
   1c180:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c184:	ldr	r3, [r4, #220]	; 0xdc
   1c188:	mov	r1, r8
   1c18c:	mov	r0, r4
   1c190:	add	r3, r3, #1
   1c194:	str	r3, [r4, #220]	; 0xdc
   1c198:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c19c:	mov	r1, r7
   1c1a0:	mov	r0, r4
   1c1a4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c1a8:	ldr	r3, [r4, #220]	; 0xdc
   1c1ac:	cmp	r3, #0
   1c1b0:	ldreq	r3, [pc, #132]	; 1c23c <__flatcc_fb_gen_c_verifier@@Base+0xbcc>
   1c1b4:	movweq	r2, #1532	; 0x5fc
   1c1b8:	beq	1c154 <__flatcc_fb_gen_c_verifier@@Base+0xae4>
   1c1bc:	sub	r3, r3, #1
   1c1c0:	str	r3, [r4, #220]	; 0xdc
   1c1c4:	b	1c0a0 <__flatcc_fb_gen_c_verifier@@Base+0xa30>
   1c1c8:	ldr	r3, [pc, #196]	; 1c294 <__flatcc_fb_gen_c_verifier@@Base+0xc24>
   1c1cc:	ldr	r0, [pc, #164]	; 1c278 <__flatcc_fb_gen_c_verifier@@Base+0xc08>
   1c1d0:	ldr	r2, [pc, #164]	; 1c27c <__flatcc_fb_gen_c_verifier@@Base+0xc0c>
   1c1d4:	str	r3, [sp]
   1c1d8:	movw	r3, #1535	; 0x5ff
   1c1dc:	ldr	r1, [pc, #156]	; 1c280 <__flatcc_fb_gen_c_verifier@@Base+0xc10>
   1c1e0:	ldr	r0, [r0]
   1c1e4:	bl	140bc <fprintf@plt>
   1c1e8:	ldr	r3, [pc, #76]	; 1c23c <__flatcc_fb_gen_c_verifier@@Base+0xbcc>
   1c1ec:	movw	r2, #1535	; 0x5ff
   1c1f0:	b	1c118 <__flatcc_fb_gen_c_verifier@@Base+0xaa8>
   1c1f4:	sub	r3, r3, #1
   1c1f8:	mov	r0, r4
   1c1fc:	ldr	r1, [pc, #92]	; 1c260 <__flatcc_fb_gen_c_verifier@@Base+0xbf0>
   1c200:	str	r3, [r4, #220]	; 0xdc
   1c204:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c208:	ldr	r1, [pc, #24]	; 1c228 <__flatcc_fb_gen_c_verifier@@Base+0xbb8>
   1c20c:	mov	r0, r4
   1c210:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c214:	mov	r0, r5
   1c218:	add	sp, sp, #448	; 0x1c0
   1c21c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c220:	andeq	r3, r4, r2, ror #10
   1c224:	andeq	r5, r4, lr, asr #31
   1c228:	strdeq	r2, [r3], -r7
   1c22c:	strdeq	r3, [r4], -r2
   1c230:	strdeq	r3, [r4], -pc	; <UNPREDICTABLE>
   1c234:	andeq	r3, r4, pc, lsl #12
   1c238:	andeq	r3, r4, r2, lsr #12
   1c23c:	andeq	r3, r4, r0, asr #3
   1c240:	andeq	r3, r4, r1, asr r6
   1c244:	andeq	r3, r4, r8, lsl #14
   1c248:	andeq	r3, r4, r1, lsl #14
   1c24c:	andeq	r3, r4, r4, ror r7
   1c250:	andeq	r3, r4, sp, ror r7
   1c254:			; <UNDEFINED> instruction: 0x000437b6
   1c258:	andeq	r3, r4, r2, lsl r8
   1c25c:	andeq	r3, r4, fp, lsl r8
   1c260:	andeq	r7, r3, sp, ror #7
   1c264:	andeq	r3, r4, r2, asr r8
   1c268:	andeq	r3, r4, lr, ror #16
   1c26c:	andeq	r3, r4, lr, ror r8
   1c270:	andeq	r3, r4, r2, ror #16
   1c274:	andeq	r3, r4, sl, asr #13
   1c278:	strheq	fp, [r5], -r0
   1c27c:	andeq	r3, r4, sp, lsr r4
   1c280:	ldrdeq	r0, [r3], -r9
   1c284:	andeq	r9, r3, fp, lsr r2
   1c288:	andeq	r3, r4, r5, ror #12
   1c28c:	muleq	r4, r2, r4
   1c290:	muleq	r4, r7, r6
   1c294:	andeq	r3, r4, r6, asr #14
   1c298:	push	{r4, r5, r6, r7, lr}
   1c29c:	sub	sp, sp, #452	; 0x1c4
   1c2a0:	mov	r4, r0
   1c2a4:	mov	r5, r1
   1c2a8:	mov	r2, #220	; 0xdc
   1c2ac:	mov	r1, #0
   1c2b0:	add	r0, sp, #8
   1c2b4:	bl	140d4 <memset@plt>
   1c2b8:	mov	r2, #220	; 0xdc
   1c2bc:	mov	r1, #0
   1c2c0:	ldr	r6, [pc, #284]	; 1c3e4 <__flatcc_fb_gen_c_verifier@@Base+0xd74>
   1c2c4:	add	r0, sp, #228	; 0xe4
   1c2c8:	bl	140d4 <memset@plt>
   1c2cc:	mov	r0, r5
   1c2d0:	add	r1, sp, #8
   1c2d4:	ldr	r7, [pc, #268]	; 1c3e8 <__flatcc_fb_gen_c_verifier@@Base+0xd78>
   1c2d8:	bl	1be40 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1c2dc:	add	r2, sp, #8
   1c2e0:	ldr	r1, [pc, #260]	; 1c3ec <__flatcc_fb_gen_c_verifier@@Base+0xd7c>
   1c2e4:	mov	r0, r4
   1c2e8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c2ec:	ldr	r1, [pc, #252]	; 1c3f0 <__flatcc_fb_gen_c_verifier@@Base+0xd80>
   1c2f0:	mov	r0, r4
   1c2f4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c2f8:	ldr	r3, [r4, #220]	; 0xdc
   1c2fc:	mov	r0, r4
   1c300:	ldr	r1, [pc, #236]	; 1c3f4 <__flatcc_fb_gen_c_verifier@@Base+0xd84>
   1c304:	add	r3, r3, #1
   1c308:	str	r3, [r4, #220]	; 0xdc
   1c30c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c310:	ldr	r5, [r5, #20]
   1c314:	cmp	r5, #0
   1c318:	bne	1c374 <__flatcc_fb_gen_c_verifier@@Base+0xd04>
   1c31c:	ldr	r1, [pc, #212]	; 1c3f8 <__flatcc_fb_gen_c_verifier@@Base+0xd88>
   1c320:	mov	r0, r4
   1c324:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c328:	ldr	r3, [r4, #220]	; 0xdc
   1c32c:	add	r2, r3, #1
   1c330:	cmp	r2, #0
   1c334:	ldreq	r3, [pc, #192]	; 1c3fc <__flatcc_fb_gen_c_verifier@@Base+0xd8c>
   1c338:	str	r2, [r4, #220]	; 0xdc
   1c33c:	movweq	r2, #1582	; 0x62e
   1c340:	beq	1c368 <__flatcc_fb_gen_c_verifier@@Base+0xcf8>
   1c344:	ldr	r1, [pc, #180]	; 1c400 <__flatcc_fb_gen_c_verifier@@Base+0xd90>
   1c348:	mov	r0, r4
   1c34c:	str	r3, [r4, #220]	; 0xdc
   1c350:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c354:	ldr	r3, [r4, #220]	; 0xdc
   1c358:	cmp	r3, #0
   1c35c:	bne	1c3b8 <__flatcc_fb_gen_c_verifier@@Base+0xd48>
   1c360:	ldr	r3, [pc, #148]	; 1c3fc <__flatcc_fb_gen_c_verifier@@Base+0xd8c>
   1c364:	movw	r2, #1583	; 0x62f
   1c368:	ldr	r1, [pc, #148]	; 1c404 <__flatcc_fb_gen_c_verifier@@Base+0xd94>
   1c36c:	ldr	r0, [pc, #148]	; 1c408 <__flatcc_fb_gen_c_verifier@@Base+0xd98>
   1c370:	bl	1417c <__assert_fail@plt>
   1c374:	ldrh	r3, [r5, #24]
   1c378:	cmp	r3, #0
   1c37c:	bne	1c394 <__flatcc_fb_gen_c_verifier@@Base+0xd24>
   1c380:	mov	r1, r7
   1c384:	mov	r0, r4
   1c388:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c38c:	ldr	r5, [r5]
   1c390:	b	1c314 <__flatcc_fb_gen_c_verifier@@Base+0xca4>
   1c394:	ldr	r3, [r5, #4]
   1c398:	mov	r1, r6
   1c39c:	mov	r0, r4
   1c3a0:	ldr	r2, [r3]
   1c3a4:	str	r2, [sp]
   1c3a8:	ldr	r3, [r3, #4]
   1c3ac:	ldr	r2, [r5, #48]	; 0x30
   1c3b0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c3b4:	b	1c38c <__flatcc_fb_gen_c_verifier@@Base+0xd1c>
   1c3b8:	sub	r3, r3, #1
   1c3bc:	mov	r0, r4
   1c3c0:	ldr	r1, [pc, #56]	; 1c400 <__flatcc_fb_gen_c_verifier@@Base+0xd90>
   1c3c4:	str	r3, [r4, #220]	; 0xdc
   1c3c8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c3cc:	ldr	r1, [pc, #56]	; 1c40c <__flatcc_fb_gen_c_verifier@@Base+0xd9c>
   1c3d0:	mov	r0, r4
   1c3d4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c3d8:	mov	r0, r5
   1c3dc:	add	sp, sp, #452	; 0x1c4
   1c3e0:	pop	{r4, r5, r6, r7, pc}
   1c3e4:	andeq	r3, r4, r4, lsr #18
   1c3e8:	andeq	r3, r4, r7, lsl #18
   1c3ec:	ldrdeq	r3, [r4], -r4
   1c3f0:	andeq	r5, r4, lr, asr #31
   1c3f4:	strdeq	r3, [r4], -pc	; <UNPREDICTABLE>
   1c3f8:	andeq	r3, r4, r2, asr #18
   1c3fc:	ldrdeq	r3, [r4], -r1
   1c400:	andeq	r7, r3, sp, ror #7
   1c404:	andeq	r3, r4, sp, lsr r4
   1c408:	muleq	r4, r2, r4
   1c40c:	strdeq	r2, [r3], -r7
   1c410:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c414:	sub	sp, sp, #516	; 0x204
   1c418:	mov	r5, r1
   1c41c:	mov	r7, r2
   1c420:	mov	r1, #0
   1c424:	mov	r2, #220	; 0xdc
   1c428:	mov	r4, r0
   1c42c:	add	r0, sp, #292	; 0x124
   1c430:	str	r3, [sp, #36]	; 0x24
   1c434:	bl	140d4 <memset@plt>
   1c438:	add	r1, sp, #88	; 0x58
   1c43c:	ldr	r0, [r5, #12]
   1c440:	bl	15948 <__flatcc_fb_copy_scope@@Base>
   1c444:	ldrh	r3, [r5, #8]
   1c448:	cmp	r3, #1
   1c44c:	str	r3, [sp, #76]	; 0x4c
   1c450:	movne	r3, #0
   1c454:	moveq	r3, #1
   1c458:	str	r3, [sp, #84]	; 0x54
   1c45c:	ldrh	r3, [r7, #24]
   1c460:	sub	r3, r3, #7
   1c464:	uxth	r2, r3
   1c468:	cmp	r2, #8
   1c46c:	bhi	1c608 <__flatcc_fb_gen_c_verifier@@Base+0xf98>
   1c470:	mov	r0, #1
   1c474:	movw	r1, #261	; 0x105
   1c478:	ands	r2, r1, r0, lsl r2
   1c47c:	movne	r6, r0
   1c480:	moveq	r6, #0
   1c484:	cmp	r3, #8
   1c488:	ldrls	pc, [pc, r3, lsl #2]
   1c48c:	b	1c638 <__flatcc_fb_gen_c_verifier@@Base+0xfc8>
   1c490:			; <UNDEFINED> instruction: 0x0001c5b8
   1c494:	strdeq	ip, [r1], -r8
   1c498:			; <UNDEFINED> instruction: 0x0001c4b4
   1c49c:			; <UNDEFINED> instruction: 0x0001c4b4
   1c4a0:	andeq	ip, r1, r8, lsr r6
   1c4a4:	andeq	ip, r1, r8, lsr r6
   1c4a8:	andeq	ip, r1, r8, lsr r6
   1c4ac:	andeq	ip, r1, r8, lsr r5
   1c4b0:	andeq	ip, r1, r8, lsr r5
   1c4b4:	mov	r5, #0
   1c4b8:	mov	r3, #1
   1c4bc:	mov	r9, r5
   1c4c0:	mov	r8, r5
   1c4c4:	mov	fp, r5
   1c4c8:	mov	sl, r5
   1c4cc:	str	r5, [sp, #20]
   1c4d0:	str	r5, [sp, #24]
   1c4d4:	str	r5, [sp, #28]
   1c4d8:	str	r3, [sp, #32]
   1c4dc:	str	r5, [sp, #40]	; 0x28
   1c4e0:	ldr	r3, [sp, #20]
   1c4e4:	ldr	r2, [sp, #28]
   1c4e8:	orrs	r3, r3, r2
   1c4ec:	str	r3, [sp, #60]	; 0x3c
   1c4f0:	beq	1c698 <__flatcc_fb_gen_c_verifier@@Base+0x1028>
   1c4f4:	eor	sl, r6, #1
   1c4f8:	cmp	r5, #4
   1c4fc:	orrne	sl, sl, #1
   1c500:	cmp	sl, #0
   1c504:	beq	1ce30 <__flatcc_fb_gen_c_verifier@@Base+0x17c0>
   1c508:	ldr	r3, [pc, #2380]	; 1ce5c <__flatcc_fb_gen_c_verifier@@Base+0x17ec>
   1c50c:	ldr	r0, [pc, #2380]	; 1ce60 <__flatcc_fb_gen_c_verifier@@Base+0x17f0>
   1c510:	ldr	r2, [pc, #2380]	; 1ce64 <__flatcc_fb_gen_c_verifier@@Base+0x17f4>
   1c514:	str	r3, [sp]
   1c518:	movw	r3, #466	; 0x1d2
   1c51c:	ldr	r1, [pc, #2372]	; 1ce68 <__flatcc_fb_gen_c_verifier@@Base+0x17f8>
   1c520:	ldr	r0, [r0]
   1c524:	bl	140bc <fprintf@plt>
   1c528:	ldr	r3, [pc, #2364]	; 1ce6c <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1c52c:	movw	r2, #466	; 0x1d2
   1c530:	ldr	r1, [pc, #2348]	; 1ce64 <__flatcc_fb_gen_c_verifier@@Base+0x17f4>
   1c534:	b	1c88c <__flatcc_fb_gen_c_verifier@@Base+0x121c>
   1c538:	add	r1, sp, #292	; 0x124
   1c53c:	ldr	r0, [r7, #16]
   1c540:	bl	1be40 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1c544:	ldr	r1, [r7, #16]
   1c548:	ldrh	r3, [r1, #8]
   1c54c:	sub	r2, r3, #3
   1c550:	cmp	r3, #1
   1c554:	clz	r2, r2
   1c558:	clz	fp, r3
   1c55c:	lsr	r2, r2, #5
   1c560:	lsr	fp, fp, #5
   1c564:	str	r2, [sp, #40]	; 0x28
   1c568:	movne	r2, #0
   1c56c:	moveq	r2, #1
   1c570:	str	r2, [sp, #24]
   1c574:	ldr	r2, [sp, #36]	; 0x24
   1c578:	cmp	r3, #4
   1c57c:	cmpeq	r2, #0
   1c580:	moveq	r2, #1
   1c584:	movne	r2, #0
   1c588:	beq	1c660 <__flatcc_fb_gen_c_verifier@@Base+0xff0>
   1c58c:	cmp	r3, #3
   1c590:	bne	1c680 <__flatcc_fb_gen_c_verifier@@Base+0x1010>
   1c594:	mov	sl, #1
   1c598:	mov	r9, r2
   1c59c:	str	r2, [sp, #20]
   1c5a0:	mov	r8, r2
   1c5a4:	str	r2, [sp, #28]
   1c5a8:	str	r2, [sp, #32]
   1c5ac:	str	sl, [sp, #40]	; 0x28
   1c5b0:	ldr	r5, [r1, #40]	; 0x28
   1c5b4:	b	1c4e0 <__flatcc_fb_gen_c_verifier@@Base+0xe70>
   1c5b8:	ldr	r3, [r7, #104]	; 0x68
   1c5bc:	adds	r9, r3, #0
   1c5c0:	ldrh	r3, [r7, #72]	; 0x48
   1c5c4:	movne	r9, #1
   1c5c8:	and	r2, r3, #1024	; 0x400
   1c5cc:	and	r3, r3, #2048	; 0x800
   1c5d0:	str	r2, [sp, #20]
   1c5d4:	str	r3, [sp, #28]
   1c5d8:	mov	r8, #0
   1c5dc:	mov	sl, #1
   1c5e0:	ldr	r5, [r7, #16]
   1c5e4:	mov	fp, r8
   1c5e8:	str	r8, [sp, #24]
   1c5ec:	str	r8, [sp, #32]
   1c5f0:	str	r8, [sp, #40]	; 0x28
   1c5f4:	b	1c4e0 <__flatcc_fb_gen_c_verifier@@Base+0xe70>
   1c5f8:	mov	r9, #0
   1c5fc:	str	r9, [sp, #20]
   1c600:	str	r9, [sp, #28]
   1c604:	b	1c5d8 <__flatcc_fb_gen_c_verifier@@Base+0xf68>
   1c608:	mov	r6, #0
   1c60c:	mov	r5, r6
   1c610:	mov	r9, r6
   1c614:	mov	r8, r6
   1c618:	mov	fp, r6
   1c61c:	str	r6, [sp, #20]
   1c620:	mov	sl, r6
   1c624:	str	r6, [sp, #24]
   1c628:	str	r6, [sp, #28]
   1c62c:	str	r6, [sp, #32]
   1c630:	str	r6, [sp, #40]	; 0x28
   1c634:	b	1c4e0 <__flatcc_fb_gen_c_verifier@@Base+0xe70>
   1c638:	mov	r5, #0
   1c63c:	mov	r9, r5
   1c640:	mov	r8, r5
   1c644:	mov	fp, r5
   1c648:	str	r5, [sp, #20]
   1c64c:	str	r5, [sp, #24]
   1c650:	str	r5, [sp, #28]
   1c654:	mov	sl, r5
   1c658:	str	r5, [sp, #40]	; 0x28
   1c65c:	b	1c678 <__flatcc_fb_gen_c_verifier@@Base+0x1008>
   1c660:	mov	r5, #0
   1c664:	mov	r8, #1
   1c668:	mov	r9, r5
   1c66c:	mov	sl, r5
   1c670:	str	r5, [sp, #20]
   1c674:	str	r5, [sp, #28]
   1c678:	str	r5, [sp, #32]
   1c67c:	b	1c4e0 <__flatcc_fb_gen_c_verifier@@Base+0xe70>
   1c680:	mov	r5, r2
   1c684:	mov	r9, r2
   1c688:	str	r2, [sp, #20]
   1c68c:	mov	r8, r2
   1c690:	str	r2, [sp, #28]
   1c694:	b	1c654 <__flatcc_fb_gen_c_verifier@@Base+0xfe4>
   1c698:	ldr	r3, [sp, #36]	; 0x24
   1c69c:	cmp	r3, #0
   1c6a0:	beq	1c7b8 <__flatcc_fb_gen_c_verifier@@Base+0x1148>
   1c6a4:	ldr	sl, [sp, #60]	; 0x3c
   1c6a8:	str	r6, [sp, #52]	; 0x34
   1c6ac:	mov	r6, sl
   1c6b0:	str	sl, [sp, #44]	; 0x2c
   1c6b4:	cmp	r9, #1
   1c6b8:	bne	1c6d4 <__flatcc_fb_gen_c_verifier@@Base+0x1064>
   1c6bc:	ldr	r1, [pc, #1964]	; 1ce70 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   1c6c0:	mov	r0, r4
   1c6c4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c6c8:	ldr	r3, [r4, #220]	; 0xdc
   1c6cc:	add	r3, r3, #1
   1c6d0:	str	r3, [r4, #220]	; 0xdc
   1c6d4:	ldr	r3, [pc, #1944]	; 1ce74 <__flatcc_fb_gen_c_verifier@@Base+0x1804>
   1c6d8:	str	r3, [sp, #56]	; 0x38
   1c6dc:	str	r3, [sp, #72]	; 0x48
   1c6e0:	ldr	r3, [sp, #24]
   1c6e4:	cmp	sl, #0
   1c6e8:	ldr	r2, [sp, #36]	; 0x24
   1c6ec:	orr	r3, sl, r3
   1c6f0:	orr	r3, r3, r2
   1c6f4:	str	r3, [sp, #48]	; 0x30
   1c6f8:	beq	1c894 <__flatcc_fb_gen_c_verifier@@Base+0x1224>
   1c6fc:	sub	r2, r5, #1
   1c700:	cmp	r2, #10
   1c704:	bhi	1c860 <__flatcc_fb_gen_c_verifier@@Base+0x11f0>
   1c708:	ldr	r3, [pc, #1896]	; 1ce78 <__flatcc_fb_gen_c_verifier@@Base+0x1808>
   1c70c:	cmp	r5, #5
   1c710:	add	r3, r3, r2, lsl #2
   1c714:	ldr	r2, [r3, #80]	; 0x50
   1c718:	ldreq	r3, [pc, #1884]	; 1ce7c <__flatcc_fb_gen_c_verifier@@Base+0x180c>
   1c71c:	str	r2, [sp, #56]	; 0x38
   1c720:	ldrne	r3, [r3, #144]	; 0x90
   1c724:	cmp	r6, #0
   1c728:	str	r3, [sp, #72]	; 0x48
   1c72c:	bne	1c984 <__flatcc_fb_gen_c_verifier@@Base+0x1314>
   1c730:	ldr	r1, [pc, #1864]	; 1ce80 <__flatcc_fb_gen_c_verifier@@Base+0x1810>
   1c734:	mov	r0, r4
   1c738:	ldr	r2, [sp, #72]	; 0x48
   1c73c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c740:	ldr	r1, [pc, #1852]	; 1ce84 <__flatcc_fb_gen_c_verifier@@Base+0x1814>
   1c744:	mov	r0, r4
   1c748:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c74c:	ldr	r3, [r4, #220]	; 0xdc
   1c750:	add	r3, r3, #2
   1c754:	str	r3, [r4, #220]	; 0xdc
   1c758:	ldr	r3, [sp, #40]	; 0x28
   1c75c:	cmp	r3, #0
   1c760:	beq	1c774 <__flatcc_fb_gen_c_verifier@@Base+0x1104>
   1c764:	add	r2, sp, #292	; 0x124
   1c768:	ldr	r1, [pc, #1816]	; 1ce88 <__flatcc_fb_gen_c_verifier@@Base+0x1818>
   1c76c:	mov	r0, r4
   1c770:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c774:	ldr	r2, [r4, #208]	; 0xd0
   1c778:	add	r3, sp, #88	; 0x58
   1c77c:	mov	r0, r4
   1c780:	ldr	r1, [pc, #1796]	; 1ce8c <__flatcc_fb_gen_c_verifier@@Base+0x181c>
   1c784:	ldr	r2, [r2, #160]	; 0xa0
   1c788:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c78c:	ldr	r3, [r4, #208]	; 0xd0
   1c790:	mov	r0, r4
   1c794:	ldr	r1, [pc, #1780]	; 1ce90 <__flatcc_fb_gen_c_verifier@@Base+0x1820>
   1c798:	ldr	r2, [r3, #160]	; 0xa0
   1c79c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c7a0:	ldr	r3, [r4, #220]	; 0xdc
   1c7a4:	cmp	r3, #0
   1c7a8:	bne	1c9d8 <__flatcc_fb_gen_c_verifier@@Base+0x1368>
   1c7ac:	ldr	r3, [pc, #1720]	; 1ce6c <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1c7b0:	movw	r2, #539	; 0x21b
   1c7b4:	b	1c7ec <__flatcc_fb_gen_c_verifier@@Base+0x117c>
   1c7b8:	ands	r3, r8, r6
   1c7bc:	movne	r6, #0
   1c7c0:	str	r3, [sp, #44]	; 0x2c
   1c7c4:	strne	r6, [sp, #52]	; 0x34
   1c7c8:	bne	1c6b4 <__flatcc_fb_gen_c_verifier@@Base+0x1044>
   1c7cc:	ands	r3, r8, r6
   1c7d0:	str	r3, [sp, #52]	; 0x34
   1c7d4:	b	1c6b4 <__flatcc_fb_gen_c_verifier@@Base+0x1044>
   1c7d8:	ldr	r3, [r4, #220]	; 0xdc
   1c7dc:	cmp	r3, #0
   1c7e0:	bne	1c7f8 <__flatcc_fb_gen_c_verifier@@Base+0x1188>
   1c7e4:	ldr	r3, [pc, #1664]	; 1ce6c <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1c7e8:	movw	r2, #490	; 0x1ea
   1c7ec:	ldr	r1, [pc, #1648]	; 1ce64 <__flatcc_fb_gen_c_verifier@@Base+0x17f4>
   1c7f0:	ldr	r0, [pc, #1692]	; 1ce94 <__flatcc_fb_gen_c_verifier@@Base+0x1824>
   1c7f4:	bl	1417c <__assert_fail@plt>
   1c7f8:	sub	r3, r3, #1
   1c7fc:	mov	r0, r4
   1c800:	ldr	r1, [pc, #1680]	; 1ce98 <__flatcc_fb_gen_c_verifier@@Base+0x1828>
   1c804:	mov	r6, #0
   1c808:	str	r3, [r4, #220]	; 0xdc
   1c80c:	mov	sl, r6
   1c810:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c814:	ldr	r3, [r4, #220]	; 0xdc
   1c818:	add	r1, sp, #292	; 0x124
   1c81c:	ldr	r0, [r7, #104]	; 0x68
   1c820:	add	r3, r3, #1
   1c824:	str	r3, [r4, #220]	; 0xdc
   1c828:	bl	1be40 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1c82c:	ldr	r3, [r7, #104]	; 0x68
   1c830:	mov	r0, r4
   1c834:	ldr	r1, [pc, #1632]	; 1ce9c <__flatcc_fb_gen_c_verifier@@Base+0x182c>
   1c838:	ldrh	r3, [r3, #8]
   1c83c:	cmp	r3, #0
   1c840:	ldr	r3, [sp, #24]
   1c844:	movne	r3, #1
   1c848:	movne	r9, fp
   1c84c:	mov	fp, r9
   1c850:	mov	r9, #2
   1c854:	str	r3, [sp, #24]
   1c858:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c85c:	b	1c6e0 <__flatcc_fb_gen_c_verifier@@Base+0x1070>
   1c860:	ldr	r3, [pc, #1592]	; 1cea0 <__flatcc_fb_gen_c_verifier@@Base+0x1830>
   1c864:	ldr	r0, [pc, #1524]	; 1ce60 <__flatcc_fb_gen_c_verifier@@Base+0x17f0>
   1c868:	ldr	r2, [pc, #1588]	; 1cea4 <__flatcc_fb_gen_c_verifier@@Base+0x1834>
   1c86c:	str	r3, [sp]
   1c870:	mov	r3, #96	; 0x60
   1c874:	ldr	r1, [pc, #1516]	; 1ce68 <__flatcc_fb_gen_c_verifier@@Base+0x17f8>
   1c878:	ldr	r0, [r0]
   1c87c:	bl	140bc <fprintf@plt>
   1c880:	ldr	r3, [pc, #1568]	; 1cea8 <__flatcc_fb_gen_c_verifier@@Base+0x1838>
   1c884:	mov	r2, #96	; 0x60
   1c888:	ldr	r1, [pc, #1556]	; 1cea4 <__flatcc_fb_gen_c_verifier@@Base+0x1834>
   1c88c:	ldr	r0, [pc, #1560]	; 1ceac <__flatcc_fb_gen_c_verifier@@Base+0x183c>
   1c890:	b	1c7f4 <__flatcc_fb_gen_c_verifier@@Base+0x1184>
   1c894:	cmp	r6, #0
   1c898:	beq	1c8e0 <__flatcc_fb_gen_c_verifier@@Base+0x1270>
   1c89c:	ldr	r3, [sp, #48]	; 0x30
   1c8a0:	cmp	r3, #0
   1c8a4:	bne	1c984 <__flatcc_fb_gen_c_verifier@@Base+0x1314>
   1c8a8:	ldr	r1, [pc, #1536]	; 1ceb0 <__flatcc_fb_gen_c_verifier@@Base+0x1840>
   1c8ac:	mov	r0, r4
   1c8b0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c8b4:	ldr	r1, [pc, #1528]	; 1ceb4 <__flatcc_fb_gen_c_verifier@@Base+0x1844>
   1c8b8:	mov	r0, r4
   1c8bc:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c8c0:	ldr	r1, [pc, #1520]	; 1ceb8 <__flatcc_fb_gen_c_verifier@@Base+0x1848>
   1c8c4:	mov	r0, r4
   1c8c8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c8cc:	ldr	r3, [r4, #220]	; 0xdc
   1c8d0:	cmp	sl, #0
   1c8d4:	add	r3, r3, #1
   1c8d8:	str	r3, [r4, #220]	; 0xdc
   1c8dc:	bne	1c730 <__flatcc_fb_gen_c_verifier@@Base+0x10c0>
   1c8e0:	ldr	r3, [sp, #48]	; 0x30
   1c8e4:	cmp	r3, #0
   1c8e8:	movne	r3, r6
   1c8ec:	moveq	r3, #0
   1c8f0:	cmp	r3, #0
   1c8f4:	beq	1c904 <__flatcc_fb_gen_c_verifier@@Base+0x1294>
   1c8f8:	ldr	r1, [pc, #1468]	; 1cebc <__flatcc_fb_gen_c_verifier@@Base+0x184c>
   1c8fc:	mov	r0, r4
   1c900:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c904:	ldr	r3, [sp, #76]	; 0x4c
   1c908:	cmp	r3, #1
   1c90c:	bne	1c9f4 <__flatcc_fb_gen_c_verifier@@Base+0x1384>
   1c910:	ldr	r1, [pc, #1448]	; 1cec0 <__flatcc_fb_gen_c_verifier@@Base+0x1850>
   1c914:	mov	r0, r4
   1c918:	ldrd	r2, [r7, #80]	; 0x50
   1c91c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c920:	cmp	sl, #0
   1c924:	beq	1cbd4 <__flatcc_fb_gen_c_verifier@@Base+0x1564>
   1c928:	ldr	r1, [pc, #1428]	; 1cec4 <__flatcc_fb_gen_c_verifier@@Base+0x1854>
   1c92c:	mov	r0, r4
   1c930:	ldr	r2, [sp, #56]	; 0x38
   1c934:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c938:	ldr	r1, [pc, #1416]	; 1cec8 <__flatcc_fb_gen_c_verifier@@Base+0x1858>
   1c93c:	mov	r0, r4
   1c940:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c944:	ldr	r3, [r4, #220]	; 0xdc
   1c948:	mov	r0, r4
   1c94c:	ldr	r1, [pc, #1400]	; 1cecc <__flatcc_fb_gen_c_verifier@@Base+0x185c>
   1c950:	ldr	r2, [sp, #56]	; 0x38
   1c954:	add	r3, r3, #1
   1c958:	str	r3, [r4, #220]	; 0xdc
   1c95c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c960:	ldr	r1, [pc, #1384]	; 1ced0 <__flatcc_fb_gen_c_verifier@@Base+0x1860>
   1c964:	mov	r0, r4
   1c968:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c96c:	ldr	r3, [r4, #220]	; 0xdc
   1c970:	cmp	r3, #0
   1c974:	bne	1ca48 <__flatcc_fb_gen_c_verifier@@Base+0x13d8>
   1c978:	ldr	r3, [pc, #1260]	; 1ce6c <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1c97c:	movw	r2, #559	; 0x22f
   1c980:	b	1c7ec <__flatcc_fb_gen_c_verifier@@Base+0x117c>
   1c984:	ldrd	r2, [r7, #88]	; 0x58
   1c988:	strd	r2, [sp, #64]	; 0x40
   1c98c:	ldrsh	r3, [r7, #74]	; 0x4a
   1c990:	str	r3, [sp, #80]	; 0x50
   1c994:	ldrd	r2, [sp, #64]	; 0x40
   1c998:	orrs	r3, r2, r3
   1c99c:	mvneq	r0, #0
   1c9a0:	moveq	r1, #0
   1c9a4:	beq	1c9b8 <__flatcc_fb_gen_c_verifier@@Base+0x1348>
   1c9a8:	mvn	r0, #0
   1c9ac:	mov	r1, #0
   1c9b0:	ldrd	r2, [sp, #64]	; 0x40
   1c9b4:	bl	2efb0 <fb_value_set_visit@@Base+0x614>
   1c9b8:	ldr	r3, [sp, #80]	; 0x50
   1c9bc:	str	r3, [sp]
   1c9c0:	strd	r0, [sp, #8]
   1c9c4:	mov	r0, r4
   1c9c8:	ldr	r1, [pc, #1284]	; 1ced4 <__flatcc_fb_gen_c_verifier@@Base+0x1864>
   1c9cc:	ldrd	r2, [sp, #64]	; 0x40
   1c9d0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c9d4:	b	1c8b4 <__flatcc_fb_gen_c_verifier@@Base+0x1244>
   1c9d8:	cmp	r3, #1
   1c9dc:	moveq	r3, #0
   1c9e0:	streq	r3, [r4, #220]	; 0xdc
   1c9e4:	beq	1c7ac <__flatcc_fb_gen_c_verifier@@Base+0x113c>
   1c9e8:	sub	r3, r3, #2
   1c9ec:	str	r3, [r4, #220]	; 0xdc
   1c9f0:	b	1c8e0 <__flatcc_fb_gen_c_verifier@@Base+0x1270>
   1c9f4:	ldr	r2, [sp, #24]
   1c9f8:	eor	r3, r6, #1
   1c9fc:	tst	r3, r2
   1ca00:	beq	1c920 <__flatcc_fb_gen_c_verifier@@Base+0x12b0>
   1ca04:	ldrh	r3, [r7, #74]	; 0x4a
   1ca08:	mov	r0, r4
   1ca0c:	ldr	r1, [pc, #1220]	; 1ced8 <__flatcc_fb_gen_c_verifier@@Base+0x1868>
   1ca10:	str	r3, [sp, #8]
   1ca14:	ldrd	r2, [r7, #88]	; 0x58
   1ca18:	strd	r2, [sp]
   1ca1c:	ldrd	r2, [r7, #96]	; 0x60
   1ca20:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ca24:	cmp	sl, #0
   1ca28:	bne	1c928 <__flatcc_fb_gen_c_verifier@@Base+0x12b8>
   1ca2c:	add	r2, sp, #292	; 0x124
   1ca30:	ldr	r1, [pc, #1188]	; 1cedc <__flatcc_fb_gen_c_verifier@@Base+0x186c>
   1ca34:	mov	r0, r4
   1ca38:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ca3c:	cmp	r6, #0
   1ca40:	bne	1cd88 <__flatcc_fb_gen_c_verifier@@Base+0x1718>
   1ca44:	b	1cb64 <__flatcc_fb_gen_c_verifier@@Base+0x14f4>
   1ca48:	sub	r3, r3, #1
   1ca4c:	ldr	r1, [pc, #1164]	; 1cee0 <__flatcc_fb_gen_c_verifier@@Base+0x1870>
   1ca50:	mov	r0, r4
   1ca54:	str	r3, [r4, #220]	; 0xdc
   1ca58:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ca5c:	ldr	r3, [sp, #84]	; 0x54
   1ca60:	orr	sl, r6, r3
   1ca64:	ldr	r3, [sp, #60]	; 0x3c
   1ca68:	orrs	r3, r3, sl
   1ca6c:	bne	1cad0 <__flatcc_fb_gen_c_verifier@@Base+0x1460>
   1ca70:	ldrh	r3, [r7, #56]	; 0x38
   1ca74:	sub	r3, r3, #3
   1ca78:	cmp	r3, #3
   1ca7c:	ldrls	pc, [pc, r3, lsl #2]
   1ca80:	b	1cb24 <__flatcc_fb_gen_c_verifier@@Base+0x14b4>
   1ca84:	andeq	ip, r1, r0, lsl fp
   1ca88:	andeq	ip, r1, r4, lsl #22
   1ca8c:	muleq	r1, r4, sl
   1ca90:	muleq	r1, r4, sl
   1ca94:	ldr	r1, [pc, #1096]	; 1cee4 <__flatcc_fb_gen_c_verifier@@Base+0x1874>
   1ca98:	ldrd	r2, [r7, #48]	; 0x30
   1ca9c:	mov	r0, r4
   1caa0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1caa4:	ldr	r3, [r4, #220]	; 0xdc
   1caa8:	mov	r0, r4
   1caac:	ldr	r1, [pc, #1076]	; 1cee8 <__flatcc_fb_gen_c_verifier@@Base+0x1878>
   1cab0:	add	r3, r3, #1
   1cab4:	str	r3, [r4, #220]	; 0xdc
   1cab8:	ldrsh	r3, [r7, #74]	; 0x4a
   1cabc:	str	r3, [sp, #8]
   1cac0:	ldrd	r2, [r7, #88]	; 0x58
   1cac4:	strd	r2, [sp]
   1cac8:	ldrd	r2, [r7, #96]	; 0x60
   1cacc:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1cad0:	mov	r2, r4
   1cad4:	ldr	r1, [pc, #1040]	; 1ceec <__flatcc_fb_gen_c_verifier@@Base+0x187c>
   1cad8:	mov	r0, r4
   1cadc:	ldr	r3, [sp, #56]	; 0x38
   1cae0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1cae4:	cmp	sl, #0
   1cae8:	bne	1ca3c <__flatcc_fb_gen_c_verifier@@Base+0x13cc>
   1caec:	ldr	r3, [r4, #220]	; 0xdc
   1caf0:	cmp	r3, #0
   1caf4:	bne	1cb50 <__flatcc_fb_gen_c_verifier@@Base+0x14e0>
   1caf8:	ldr	r3, [pc, #876]	; 1ce6c <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1cafc:	movw	r2, #602	; 0x25a
   1cb00:	b	1c7ec <__flatcc_fb_gen_c_verifier@@Base+0x117c>
   1cb04:	ldr	r1, [pc, #996]	; 1cef0 <__flatcc_fb_gen_c_verifier@@Base+0x1880>
   1cb08:	ldrd	r2, [r7, #48]	; 0x30
   1cb0c:	b	1ca9c <__flatcc_fb_gen_c_verifier@@Base+0x142c>
   1cb10:	ldr	r1, [pc, #988]	; 1cef4 <__flatcc_fb_gen_c_verifier@@Base+0x1884>
   1cb14:	mov	r0, r4
   1cb18:	ldrd	r2, [r7, #48]	; 0x30
   1cb1c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1cb20:	b	1caa4 <__flatcc_fb_gen_c_verifier@@Base+0x1434>
   1cb24:	ldr	r3, [pc, #972]	; 1cef8 <__flatcc_fb_gen_c_verifier@@Base+0x1888>
   1cb28:	ldr	r0, [pc, #816]	; 1ce60 <__flatcc_fb_gen_c_verifier@@Base+0x17f0>
   1cb2c:	ldr	r2, [pc, #816]	; 1ce64 <__flatcc_fb_gen_c_verifier@@Base+0x17f4>
   1cb30:	str	r3, [sp]
   1cb34:	movw	r3, #590	; 0x24e
   1cb38:	ldr	r1, [pc, #808]	; 1ce68 <__flatcc_fb_gen_c_verifier@@Base+0x17f8>
   1cb3c:	ldr	r0, [r0]
   1cb40:	bl	140bc <fprintf@plt>
   1cb44:	ldr	r3, [pc, #800]	; 1ce6c <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1cb48:	movw	r2, #590	; 0x24e
   1cb4c:	b	1c530 <__flatcc_fb_gen_c_verifier@@Base+0xec0>
   1cb50:	ldr	r1, [pc, #904]	; 1cee0 <__flatcc_fb_gen_c_verifier@@Base+0x1870>
   1cb54:	sub	r3, r3, #1
   1cb58:	str	r3, [r4, #220]	; 0xdc
   1cb5c:	mov	r0, r4
   1cb60:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1cb64:	cmp	r9, #1
   1cb68:	beq	1c7d8 <__flatcc_fb_gen_c_verifier@@Base+0x1168>
   1cb6c:	cmp	r9, #2
   1cb70:	bne	1ce00 <__flatcc_fb_gen_c_verifier@@Base+0x1790>
   1cb74:	ldr	r1, [pc, #896]	; 1cefc <__flatcc_fb_gen_c_verifier@@Base+0x188c>
   1cb78:	mov	r0, r4
   1cb7c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1cb80:	ldr	r1, [pc, #888]	; 1cf00 <__flatcc_fb_gen_c_verifier@@Base+0x1890>
   1cb84:	mov	r0, r4
   1cb88:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1cb8c:	ldr	r3, [r4, #220]	; 0xdc
   1cb90:	cmp	r3, #0
   1cb94:	ldreq	r3, [pc, #720]	; 1ce6c <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1cb98:	movweq	r2, #661	; 0x295
   1cb9c:	beq	1c7ec <__flatcc_fb_gen_c_verifier@@Base+0x117c>
   1cba0:	sub	r3, r3, #1
   1cba4:	mov	r0, r4
   1cba8:	ldr	r1, [pc, #852]	; 1cf04 <__flatcc_fb_gen_c_verifier@@Base+0x1894>
   1cbac:	str	r3, [r4, #220]	; 0xdc
   1cbb0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1cbb4:	mov	r0, r4
   1cbb8:	ldr	r1, [pc, #840]	; 1cf08 <__flatcc_fb_gen_c_verifier@@Base+0x1898>
   1cbbc:	ldrd	r2, [r7, #96]	; 0x60
   1cbc0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1cbc4:	ldr	r1, [pc, #832]	; 1cf0c <__flatcc_fb_gen_c_verifier@@Base+0x189c>
   1cbc8:	mov	r0, r4
   1cbcc:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1cbd0:	b	1ce24 <__flatcc_fb_gen_c_verifier@@Base+0x17b4>
   1cbd4:	ldr	r3, [sp, #24]
   1cbd8:	cmp	r3, #0
   1cbdc:	bne	1ca2c <__flatcc_fb_gen_c_verifier@@Base+0x13bc>
   1cbe0:	ldr	r3, [sp, #32]
   1cbe4:	cmp	r3, #0
   1cbe8:	beq	1cc10 <__flatcc_fb_gen_c_verifier@@Base+0x15a0>
   1cbec:	ldr	r1, [pc, #796]	; 1cf10 <__flatcc_fb_gen_c_verifier@@Base+0x18a0>
   1cbf0:	mov	r0, r4
   1cbf4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1cbf8:	cmp	r6, #0
   1cbfc:	beq	1cb64 <__flatcc_fb_gen_c_verifier@@Base+0x14f4>
   1cc00:	ldr	r3, [sp, #48]	; 0x30
   1cc04:	cmp	r3, #0
   1cc08:	beq	1cd70 <__flatcc_fb_gen_c_verifier@@Base+0x1700>
   1cc0c:	b	1cd88 <__flatcc_fb_gen_c_verifier@@Base+0x1718>
   1cc10:	ldr	r3, [sp, #60]	; 0x3c
   1cc14:	cmp	r3, #0
   1cc18:	beq	1cc38 <__flatcc_fb_gen_c_verifier@@Base+0x15c8>
   1cc1c:	ldr	r3, [sp, #20]
   1cc20:	ldr	r1, [pc, #748]	; 1cf14 <__flatcc_fb_gen_c_verifier@@Base+0x18a4>
   1cc24:	clz	r2, r3
   1cc28:	lsr	r2, r2, #5
   1cc2c:	mov	r0, r4
   1cc30:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1cc34:	b	1cbf8 <__flatcc_fb_gen_c_verifier@@Base+0x1588>
   1cc38:	cmp	fp, #0
   1cc3c:	addne	r2, sp, #292	; 0x124
   1cc40:	ldrne	r1, [pc, #720]	; 1cf18 <__flatcc_fb_gen_c_verifier@@Base+0x18a8>
   1cc44:	bne	1cc2c <__flatcc_fb_gen_c_verifier@@Base+0x15bc>
   1cc48:	cmp	r8, #0
   1cc4c:	beq	1cc88 <__flatcc_fb_gen_c_verifier@@Base+0x1618>
   1cc50:	ldr	r3, [sp, #44]	; 0x2c
   1cc54:	ldrd	r0, [r7, #96]	; 0x60
   1cc58:	ldr	r2, [r7, #112]	; 0x70
   1cc5c:	cmp	r3, #0
   1cc60:	add	r3, sp, #292	; 0x124
   1cc64:	strd	r0, [sp]
   1cc68:	mov	r0, r4
   1cc6c:	ldrne	r1, [pc, #680]	; 1cf1c <__flatcc_fb_gen_c_verifier@@Base+0x18ac>
   1cc70:	str	r3, [sp, #8]
   1cc74:	movne	r3, fp
   1cc78:	ldreq	r1, [pc, #672]	; 1cf20 <__flatcc_fb_gen_c_verifier@@Base+0x18b0>
   1cc7c:	ldreq	r3, [sp, #44]	; 0x2c
   1cc80:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1cc84:	b	1cbf8 <__flatcc_fb_gen_c_verifier@@Base+0x1588>
   1cc88:	ldr	r3, [sp, #36]	; 0x24
   1cc8c:	cmp	r3, #0
   1cc90:	beq	1cd68 <__flatcc_fb_gen_c_verifier@@Base+0x16f8>
   1cc94:	ldr	r1, [pc, #488]	; 1ce84 <__flatcc_fb_gen_c_verifier@@Base+0x1814>
   1cc98:	mov	r0, r4
   1cc9c:	add	sl, sp, #292	; 0x124
   1cca0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1cca4:	ldr	r3, [r4, #220]	; 0xdc
   1cca8:	mov	r2, sl
   1ccac:	mov	r0, r4
   1ccb0:	ldr	r1, [pc, #464]	; 1ce88 <__flatcc_fb_gen_c_verifier@@Base+0x1818>
   1ccb4:	add	r3, r3, #2
   1ccb8:	str	r3, [r4, #220]	; 0xdc
   1ccbc:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ccc0:	ldr	r2, [r4, #208]	; 0xd0
   1ccc4:	add	r3, sp, #88	; 0x58
   1ccc8:	mov	r0, r4
   1cccc:	ldr	r1, [pc, #440]	; 1ce8c <__flatcc_fb_gen_c_verifier@@Base+0x181c>
   1ccd0:	ldr	r2, [r2, #160]	; 0xa0
   1ccd4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ccd8:	ldr	r3, [r4, #208]	; 0xd0
   1ccdc:	mov	r0, r4
   1cce0:	ldr	r1, [pc, #424]	; 1ce90 <__flatcc_fb_gen_c_verifier@@Base+0x1820>
   1cce4:	ldr	r2, [r3, #160]	; 0xa0
   1cce8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ccec:	ldr	r3, [r4, #220]	; 0xdc
   1ccf0:	cmp	r3, #0
   1ccf4:	bne	1cd04 <__flatcc_fb_gen_c_verifier@@Base+0x1694>
   1ccf8:	ldr	r3, [pc, #364]	; 1ce6c <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1ccfc:	movw	r2, #627	; 0x273
   1cd00:	b	1c7ec <__flatcc_fb_gen_c_verifier@@Base+0x117c>
   1cd04:	cmp	r3, #1
   1cd08:	streq	r8, [r4, #220]	; 0xdc
   1cd0c:	beq	1ccf8 <__flatcc_fb_gen_c_verifier@@Base+0x1688>
   1cd10:	sub	r3, r3, #2
   1cd14:	ldrd	r0, [r7, #96]	; 0x60
   1cd18:	ldr	r2, [r7, #112]	; 0x70
   1cd1c:	str	r3, [r4, #220]	; 0xdc
   1cd20:	ldr	r3, [sp, #52]	; 0x34
   1cd24:	cmp	r3, #0
   1cd28:	beq	1cd4c <__flatcc_fb_gen_c_verifier@@Base+0x16dc>
   1cd2c:	mov	r3, #0
   1cd30:	strd	r0, [sp]
   1cd34:	mov	r0, r4
   1cd38:	ldr	r1, [pc, #484]	; 1cf24 <__flatcc_fb_gen_c_verifier@@Base+0x18b4>
   1cd3c:	str	sl, [sp, #8]
   1cd40:	str	sl, [sp, #12]
   1cd44:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1cd48:	b	1ca3c <__flatcc_fb_gen_c_verifier@@Base+0x13cc>
   1cd4c:	mov	r3, #0
   1cd50:	strd	r0, [sp]
   1cd54:	mov	r0, r4
   1cd58:	ldr	r1, [pc, #456]	; 1cf28 <__flatcc_fb_gen_c_verifier@@Base+0x18b8>
   1cd5c:	str	sl, [sp, #8]
   1cd60:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1cd64:	b	1ca3c <__flatcc_fb_gen_c_verifier@@Base+0x13cc>
   1cd68:	cmp	r6, #0
   1cd6c:	beq	1cdac <__flatcc_fb_gen_c_verifier@@Base+0x173c>
   1cd70:	ldr	r1, [pc, #436]	; 1cf2c <__flatcc_fb_gen_c_verifier@@Base+0x18bc>
   1cd74:	mov	r0, r4
   1cd78:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1cd7c:	ldr	r1, [pc, #392]	; 1cf0c <__flatcc_fb_gen_c_verifier@@Base+0x189c>
   1cd80:	mov	r0, r4
   1cd84:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1cd88:	ldr	r1, [pc, #416]	; 1cf30 <__flatcc_fb_gen_c_verifier@@Base+0x18c0>
   1cd8c:	mov	r0, r4
   1cd90:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1cd94:	ldr	r3, [r4, #220]	; 0xdc
   1cd98:	cmp	r3, #0
   1cd9c:	bne	1cdd8 <__flatcc_fb_gen_c_verifier@@Base+0x1768>
   1cda0:	ldr	r3, [pc, #196]	; 1ce6c <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1cda4:	movw	r2, #647	; 0x287
   1cda8:	b	1c7ec <__flatcc_fb_gen_c_verifier@@Base+0x117c>
   1cdac:	ldr	r3, [pc, #384]	; 1cf34 <__flatcc_fb_gen_c_verifier@@Base+0x18c4>
   1cdb0:	ldr	r0, [pc, #168]	; 1ce60 <__flatcc_fb_gen_c_verifier@@Base+0x17f0>
   1cdb4:	ldr	r2, [pc, #168]	; 1ce64 <__flatcc_fb_gen_c_verifier@@Base+0x17f4>
   1cdb8:	str	r3, [sp]
   1cdbc:	mov	r3, #636	; 0x27c
   1cdc0:	ldr	r1, [pc, #160]	; 1ce68 <__flatcc_fb_gen_c_verifier@@Base+0x17f8>
   1cdc4:	ldr	r0, [r0]
   1cdc8:	bl	140bc <fprintf@plt>
   1cdcc:	ldr	r3, [pc, #152]	; 1ce6c <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1cdd0:	mov	r2, #636	; 0x27c
   1cdd4:	b	1c530 <__flatcc_fb_gen_c_verifier@@Base+0xec0>
   1cdd8:	sub	r3, r3, #1
   1cddc:	ldr	r1, [pc, #252]	; 1cee0 <__flatcc_fb_gen_c_verifier@@Base+0x1870>
   1cde0:	mov	r0, r4
   1cde4:	str	r3, [r4, #220]	; 0xdc
   1cde8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1cdec:	ldr	r3, [sp, #48]	; 0x30
   1cdf0:	cmp	r3, #0
   1cdf4:	ldreq	r1, [pc, #316]	; 1cf38 <__flatcc_fb_gen_c_verifier@@Base+0x18c8>
   1cdf8:	ldrne	r1, [pc, #316]	; 1cf3c <__flatcc_fb_gen_c_verifier@@Base+0x18cc>
   1cdfc:	b	1cb5c <__flatcc_fb_gen_c_verifier@@Base+0x14ec>
   1ce00:	ldr	r2, [sp, #20]
   1ce04:	ldr	r3, [sp, #32]
   1ce08:	orr	r3, r3, r2
   1ce0c:	ldr	r2, [sp, #28]
   1ce10:	orr	r3, r3, r2
   1ce14:	orr	r6, r3, r6
   1ce18:	orr	r6, r6, fp
   1ce1c:	orrs	r3, r6, r9
   1ce20:	bne	1cbb4 <__flatcc_fb_gen_c_verifier@@Base+0x1544>
   1ce24:	mov	r0, #0
   1ce28:	add	sp, sp, #516	; 0x204
   1ce2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ce30:	ldr	r3, [sp, #36]	; 0x24
   1ce34:	cmp	r3, #0
   1ce38:	moveq	r9, r3
   1ce3c:	moveq	sl, r9
   1ce40:	moveq	r6, sl
   1ce44:	beq	1c7b8 <__flatcc_fb_gen_c_verifier@@Base+0x1148>
   1ce48:	mov	r6, sl
   1ce4c:	mov	r9, sl
   1ce50:	str	sl, [sp, #44]	; 0x2c
   1ce54:	str	sl, [sp, #52]	; 0x34
   1ce58:	b	1c6d4 <__flatcc_fb_gen_c_verifier@@Base+0x1064>
   1ce5c:	andeq	r3, r4, r9, asr r9
   1ce60:	strheq	fp, [r5], -r0
   1ce64:	andeq	r3, r4, sp, lsr r4
   1ce68:	ldrdeq	r0, [r3], -r9
   1ce6c:	andeq	r3, r4, r7, ror #3
   1ce70:	muleq	r4, r4, r9
   1ce74:	andeq	r3, r4, r5, asr r9
   1ce78:			; <UNDEFINED> instruction: 0x000431b0
   1ce7c:			; <UNDEFINED> instruction: 0x000384bc
   1ce80:	strdeq	r3, [r4], -ip
   1ce84:	andeq	r3, r4, r8, lsl #22
   1ce88:	andeq	r3, r4, ip, asr #22
   1ce8c:	andeq	r3, r4, r0, ror #22
   1ce90:	andeq	r3, r4, sp, ror fp
   1ce94:	muleq	r4, r2, r4
   1ce98:	andeq	r3, r4, r8, asr #19
   1ce9c:	ldrdeq	r3, [r4], -lr
   1cea0:	andeq	r0, r3, r4, ror #29
   1cea4:	muleq	r3, r0, lr
   1cea8:	andeq	r3, r4, ip, lsr #4
   1ceac:	andeq	r9, r3, fp, lsr r2
   1ceb0:	andeq	r3, r4, pc, lsl sl
   1ceb4:			; <UNDEFINED> instruction: 0x00043ab1
   1ceb8:	andeq	r3, r4, sp, ror #21
   1cebc:	muleq	r4, lr, fp
   1cec0:	andeq	r3, r4, r4, ror #23
   1cec4:	muleq	r4, r8, ip
   1cec8:	ldrdeq	r3, [r4], -r3	; <UNPREDICTABLE>
   1cecc:	andeq	r3, r4, r6, ror #25
   1ced0:	andeq	r3, r4, ip, lsr sp
   1ced4:	andeq	r3, r4, lr, asr sl
   1ced8:	andeq	r3, r4, r1, lsl ip
   1cedc:	andeq	r3, r4, r0, ror #24
   1cee0:	andeq	r7, r3, sp, ror #7
   1cee4:	andeq	r3, r4, r8, ror #26
   1cee8:	andeq	r3, r4, r2, ror #28
   1ceec:			; <UNDEFINED> instruction: 0x00043eb2
   1cef0:	andeq	r3, r4, ip, lsr #27
   1cef4:	strdeq	r3, [r4], -r0
   1cef8:	andeq	r3, r4, r3, lsr lr
   1cefc:	andeq	r4, r4, r1, ror r2
   1cf00:	andeq	r4, r4, r8, lsl #5
   1cf04:			; <UNDEFINED> instruction: 0x000442b8
   1cf08:	andeq	r4, r4, fp, asr #5
   1cf0c:	muleq	r4, ip, r1
   1cf10:	andeq	r3, r4, pc, asr #29
   1cf14:	andeq	r3, r4, fp, lsl #30
   1cf18:	andeq	r3, r4, r8, asr pc
   1cf1c:	andeq	r3, r4, r8, lsl #31
   1cf20:	andeq	r3, r4, r9, ror #31
   1cf24:	andeq	r4, r4, r3, asr #32
   1cf28:	ldrdeq	r4, [r4], -r6
   1cf2c:	andeq	r4, r4, r7, asr #2
   1cf30:	ldrdeq	r4, [r4], -sl
   1cf34:	andeq	r4, r4, r9, lsr #3
   1cf38:	andeq	r4, r4, r4, lsl r2
   1cf3c:	andeq	r4, r4, r6, asr #4
   1cf40:	add	r3, r1, #4
   1cf44:	mov	r2, r0
   1cf48:	ldr	r1, [pc, #4]	; 1cf54 <__flatcc_fb_gen_c_verifier@@Base+0x18e4>
   1cf4c:	mov	r0, r3
   1cf50:	b	22f50 <fb_symbol_table_visit@@Base>
   1cf54:	andeq	sp, r1, ip, ror r3
   1cf58:	add	r3, r1, #4
   1cf5c:	mov	r2, r0
   1cf60:	ldr	r1, [pc, #4]	; 1cf6c <__flatcc_fb_gen_c_verifier@@Base+0x18fc>
   1cf64:	mov	r0, r3
   1cf68:	b	22f50 <fb_symbol_table_visit@@Base>
   1cf6c:	andeq	sp, r1, r0, ror #11
   1cf70:	push	{r4, r5, r6, lr}
   1cf74:	mov	r2, #8
   1cf78:	mov	r5, r0
   1cf7c:	mov	r4, r1
   1cf80:	ldr	r3, [pc, #28]	; 1cfa4 <__flatcc_fb_gen_c_verifier@@Base+0x1934>
   1cf84:	bl	14140 <qsort@plt>
   1cf88:	mov	r3, #0
   1cf8c:	cmp	r3, r4
   1cf90:	popge	{r4, r5, r6, pc}
   1cf94:	ldr	r2, [r5, r3, lsl #3]
   1cf98:	str	r3, [r2, #124]	; 0x7c
   1cf9c:	add	r3, r3, #1
   1cfa0:	b	1cf8c <__flatcc_fb_gen_c_verifier@@Base+0x191c>
   1cfa4:	andeq	sp, r1, r8, lsr #32
   1cfa8:	push	{r4, r5, r6, lr}
   1cfac:	ldm	r0, {r0, r5}
   1cfb0:	ldm	r1, {r1, r4}
   1cfb4:	cmp	r5, r4
   1cfb8:	movlt	r2, r5
   1cfbc:	movge	r2, r4
   1cfc0:	bl	14014 <memcmp@plt>
   1cfc4:	cmp	r0, #0
   1cfc8:	subeq	r0, r5, r4
   1cfcc:	pop	{r4, r5, r6, pc}
   1cfd0:	cmp	r0, #0
   1cfd4:	bxeq	lr
   1cfd8:	b	13ff0 <free@plt>
   1cfdc:	push	{r4, lr}
   1cfe0:	mov	r4, r0
   1cfe4:	ldr	r0, [r0, #16]
   1cfe8:	cmp	r0, #0
   1cfec:	beq	1cff4 <__flatcc_fb_gen_c_verifier@@Base+0x1984>
   1cff0:	bl	13ff0 <free@plt>
   1cff4:	ldr	r0, [r4, #20]
   1cff8:	cmp	r0, #0
   1cffc:	beq	1d004 <__flatcc_fb_gen_c_verifier@@Base+0x1994>
   1d000:	bl	13ff0 <free@plt>
   1d004:	ldr	r0, [r4, #24]
   1d008:	cmp	r0, #0
   1d00c:	beq	1d014 <__flatcc_fb_gen_c_verifier@@Base+0x19a4>
   1d010:	bl	13ff0 <free@plt>
   1d014:	mov	r0, r4
   1d018:	mov	r2, #44	; 0x2c
   1d01c:	pop	{r4, lr}
   1d020:	mov	r1, #0
   1d024:	b	140d4 <memset@plt>
   1d028:	ldr	r0, [r0, #4]
   1d02c:	ldr	r1, [r1, #4]
   1d030:	b	13fd8 <strcmp@plt>
   1d034:	push	{r0, r1, r4, r5, r6, lr}
   1d038:	mov	r4, r0
   1d03c:	mov	r6, r1
   1d040:	mov	r5, r2
   1d044:	ldr	r1, [pc, #248]	; 1d144 <__flatcc_fb_gen_c_verifier@@Base+0x1ad4>
   1d048:	ldr	r2, [sp, #24]
   1d04c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d050:	ldr	r1, [pc, #240]	; 1d148 <__flatcc_fb_gen_c_verifier@@Base+0x1ad8>
   1d054:	mov	r0, r4
   1d058:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d05c:	ldr	r3, [r4, #220]	; 0xdc
   1d060:	add	r3, r3, #1
   1d064:	str	r3, [r4, #220]	; 0xdc
   1d068:	ldr	r3, [r6, #40]	; 0x28
   1d06c:	sub	r3, r3, #1
   1d070:	cmp	r3, #8
   1d074:	ldrls	pc, [pc, r3, lsl #2]
   1d078:	b	1d0e8 <__flatcc_fb_gen_c_verifier@@Base+0x1a78>
   1d07c:	andeq	sp, r1, r0, lsr #1
   1d080:	andeq	sp, r1, r0, lsr #1
   1d084:	andeq	sp, r1, r0, lsr #1
   1d088:	andeq	sp, r1, r0, lsr #1
   1d08c:	andeq	sp, r1, r0, lsr #1
   1d090:	andeq	sp, r1, ip, lsr #1
   1d094:	andeq	sp, r1, ip, lsr #1
   1d098:	andeq	sp, r1, ip, lsr #1
   1d09c:	andeq	sp, r1, ip, lsr #1
   1d0a0:	ldrd	r2, [r5, #48]	; 0x30
   1d0a4:	ldr	r1, [pc, #160]	; 1d14c <__flatcc_fb_gen_c_verifier@@Base+0x1adc>
   1d0a8:	b	1d0c0 <__flatcc_fb_gen_c_verifier@@Base+0x1a50>
   1d0ac:	ldrd	r2, [r5, #48]	; 0x30
   1d0b0:	cmp	r2, #0
   1d0b4:	sbcs	r1, r3, #0
   1d0b8:	ldrlt	r1, [pc, #144]	; 1d150 <__flatcc_fb_gen_c_verifier@@Base+0x1ae0>
   1d0bc:	bge	1d0a4 <__flatcc_fb_gen_c_verifier@@Base+0x1a34>
   1d0c0:	mov	r0, r4
   1d0c4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d0c8:	ldr	r3, [r4, #220]	; 0xdc
   1d0cc:	cmp	r3, #0
   1d0d0:	bne	1d11c <__flatcc_fb_gen_c_verifier@@Base+0x1aac>
   1d0d4:	ldr	r3, [pc, #120]	; 1d154 <__flatcc_fb_gen_c_verifier@@Base+0x1ae4>
   1d0d8:	movw	r2, #719	; 0x2cf
   1d0dc:	ldr	r1, [pc, #116]	; 1d158 <__flatcc_fb_gen_c_verifier@@Base+0x1ae8>
   1d0e0:	ldr	r0, [pc, #116]	; 1d15c <__flatcc_fb_gen_c_verifier@@Base+0x1aec>
   1d0e4:	b	1d118 <__flatcc_fb_gen_c_verifier@@Base+0x1aa8>
   1d0e8:	ldr	r3, [pc, #112]	; 1d160 <__flatcc_fb_gen_c_verifier@@Base+0x1af0>
   1d0ec:	ldr	r0, [pc, #112]	; 1d164 <__flatcc_fb_gen_c_verifier@@Base+0x1af4>
   1d0f0:	ldr	r2, [pc, #96]	; 1d158 <__flatcc_fb_gen_c_verifier@@Base+0x1ae8>
   1d0f4:	str	r3, [sp]
   1d0f8:	movw	r3, #710	; 0x2c6
   1d0fc:	ldr	r1, [pc, #100]	; 1d168 <__flatcc_fb_gen_c_verifier@@Base+0x1af8>
   1d100:	ldr	r0, [r0]
   1d104:	bl	140bc <fprintf@plt>
   1d108:	ldr	r3, [pc, #92]	; 1d16c <__flatcc_fb_gen_c_verifier@@Base+0x1afc>
   1d10c:	movw	r2, #710	; 0x2c6
   1d110:	ldr	r1, [pc, #64]	; 1d158 <__flatcc_fb_gen_c_verifier@@Base+0x1ae8>
   1d114:	ldr	r0, [pc, #84]	; 1d170 <__flatcc_fb_gen_c_verifier@@Base+0x1b00>
   1d118:	bl	1417c <__assert_fail@plt>
   1d11c:	sub	r3, r3, #1
   1d120:	ldr	r1, [pc, #76]	; 1d174 <__flatcc_fb_gen_c_verifier@@Base+0x1b04>
   1d124:	mov	r0, r4
   1d128:	str	r3, [r4, #220]	; 0xdc
   1d12c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d130:	ldr	r3, [r4, #220]	; 0xdc
   1d134:	add	r3, r3, #1
   1d138:	str	r3, [r4, #220]	; 0xdc
   1d13c:	add	sp, sp, #8
   1d140:	pop	{r4, r5, r6, pc}
   1d144:	andeq	r4, r4, pc, lsl r3
   1d148:	andeq	r4, r4, pc, ror #6
   1d14c:	andeq	r4, r4, r2, lsl #7
   1d150:	andeq	r4, r4, ip, lsr #7
   1d154:	andeq	r3, r4, r3, lsl #5
   1d158:	andeq	r3, r4, sp, lsr r4
   1d15c:	muleq	r4, r2, r4
   1d160:	ldrdeq	r4, [r4], -r6
   1d164:	strheq	fp, [r5], -r0
   1d168:	ldrdeq	r0, [r3], -r9
   1d16c:	andeq	r3, r4, ip, ror #4
   1d170:	andeq	r9, r3, fp, lsr r2
   1d174:	andeq	r3, r4, r2, lsl r8
   1d178:	push	{r4, r5, lr}
   1d17c:	sub	sp, sp, #228	; 0xe4
   1d180:	mov	r4, r0
   1d184:	mov	r5, r2
   1d188:	ldr	r1, [pc, #180]	; 1d244 <__flatcc_fb_gen_c_verifier@@Base+0x1bd4>
   1d18c:	ldr	r2, [sp, #240]	; 0xf0
   1d190:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d194:	ldr	r1, [pc, #172]	; 1d248 <__flatcc_fb_gen_c_verifier@@Base+0x1bd8>
   1d198:	mov	r0, r4
   1d19c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d1a0:	ldr	r3, [r4, #220]	; 0xdc
   1d1a4:	add	r3, r3, #1
   1d1a8:	str	r3, [r4, #220]	; 0xdc
   1d1ac:	ldrh	r3, [r5, #8]
   1d1b0:	sub	r3, r3, #3
   1d1b4:	cmp	r3, #1
   1d1b8:	bls	1d1d0 <__flatcc_fb_gen_c_verifier@@Base+0x1b60>
   1d1bc:	ldr	r3, [pc, #136]	; 1d24c <__flatcc_fb_gen_c_verifier@@Base+0x1bdc>
   1d1c0:	movw	r2, #729	; 0x2d9
   1d1c4:	ldr	r1, [pc, #132]	; 1d250 <__flatcc_fb_gen_c_verifier@@Base+0x1be0>
   1d1c8:	ldr	r0, [pc, #132]	; 1d254 <__flatcc_fb_gen_c_verifier@@Base+0x1be4>
   1d1cc:	bl	1417c <__assert_fail@plt>
   1d1d0:	mov	r2, #220	; 0xdc
   1d1d4:	mov	r1, #0
   1d1d8:	add	r0, sp, #4
   1d1dc:	bl	140d4 <memset@plt>
   1d1e0:	add	r1, sp, #4
   1d1e4:	mov	r0, r5
   1d1e8:	bl	1be40 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1d1ec:	add	r2, sp, #4
   1d1f0:	ldr	r1, [pc, #96]	; 1d258 <__flatcc_fb_gen_c_verifier@@Base+0x1be8>
   1d1f4:	mov	r0, r4
   1d1f8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d1fc:	ldr	r3, [r4, #220]	; 0xdc
   1d200:	cmp	r3, #0
   1d204:	bne	1d21c <__flatcc_fb_gen_c_verifier@@Base+0x1bac>
   1d208:	ldr	r3, [pc, #76]	; 1d25c <__flatcc_fb_gen_c_verifier@@Base+0x1bec>
   1d20c:	movw	r2, #742	; 0x2e6
   1d210:	ldr	r1, [pc, #56]	; 1d250 <__flatcc_fb_gen_c_verifier@@Base+0x1be0>
   1d214:	ldr	r0, [pc, #68]	; 1d260 <__flatcc_fb_gen_c_verifier@@Base+0x1bf0>
   1d218:	b	1d1cc <__flatcc_fb_gen_c_verifier@@Base+0x1b5c>
   1d21c:	sub	r3, r3, #1
   1d220:	ldr	r1, [pc, #60]	; 1d264 <__flatcc_fb_gen_c_verifier@@Base+0x1bf4>
   1d224:	mov	r0, r4
   1d228:	str	r3, [r4, #220]	; 0xdc
   1d22c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d230:	ldr	r3, [r4, #220]	; 0xdc
   1d234:	add	r3, r3, #1
   1d238:	str	r3, [r4, #220]	; 0xdc
   1d23c:	add	sp, sp, #228	; 0xe4
   1d240:	pop	{r4, r5, pc}
   1d244:	strdeq	r4, [r4], -r9
   1d248:	andeq	r4, r4, pc, ror #6
   1d24c:	muleq	r4, r2, r2
   1d250:	andeq	r3, r4, sp, lsr r4
   1d254:	andeq	r0, r3, r7, asr #30
   1d258:	andeq	r4, r4, fp, lsr r4
   1d25c:	andeq	r3, r4, sl, lsr #5
   1d260:	muleq	r4, r2, r4
   1d264:	andeq	r3, r4, r2, lsl r8
   1d268:	push	{r4, r5, r6, r7, r8, lr}
   1d26c:	mov	r4, r0
   1d270:	mov	r5, r1
   1d274:	mov	r6, r2
   1d278:	mov	r7, r3
   1d27c:	ldr	r1, [pc, #116]	; 1d2f8 <__flatcc_fb_gen_c_verifier@@Base+0x1c88>
   1d280:	ldr	r2, [sp, #24]
   1d284:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d288:	ldr	r1, [pc, #108]	; 1d2fc <__flatcc_fb_gen_c_verifier@@Base+0x1c8c>
   1d28c:	mov	r0, r4
   1d290:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d294:	ldr	r2, [r4, #220]	; 0xdc
   1d298:	mov	r3, r7
   1d29c:	mov	r1, r5
   1d2a0:	mov	r0, r4
   1d2a4:	add	r2, r2, #1
   1d2a8:	str	r2, [r4, #220]	; 0xdc
   1d2ac:	mov	r2, r6
   1d2b0:	bl	1c410 <__flatcc_fb_gen_c_verifier@@Base+0xda0>
   1d2b4:	ldr	r3, [r4, #220]	; 0xdc
   1d2b8:	cmp	r3, #0
   1d2bc:	bne	1d2d4 <__flatcc_fb_gen_c_verifier@@Base+0x1c64>
   1d2c0:	ldr	r3, [pc, #56]	; 1d300 <__flatcc_fb_gen_c_verifier@@Base+0x1c90>
   1d2c4:	movw	r2, #675	; 0x2a3
   1d2c8:	ldr	r1, [pc, #52]	; 1d304 <__flatcc_fb_gen_c_verifier@@Base+0x1c94>
   1d2cc:	ldr	r0, [pc, #52]	; 1d308 <__flatcc_fb_gen_c_verifier@@Base+0x1c98>
   1d2d0:	bl	1417c <__assert_fail@plt>
   1d2d4:	sub	r3, r3, #1
   1d2d8:	ldr	r1, [pc, #44]	; 1d30c <__flatcc_fb_gen_c_verifier@@Base+0x1c9c>
   1d2dc:	mov	r0, r4
   1d2e0:	str	r3, [r4, #220]	; 0xdc
   1d2e4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d2e8:	ldr	r3, [r4, #220]	; 0xdc
   1d2ec:	add	r3, r3, #1
   1d2f0:	str	r3, [r4, #220]	; 0xdc
   1d2f4:	pop	{r4, r5, r6, r7, r8, pc}
   1d2f8:	andeq	r4, r4, r2, lsl #9
   1d2fc:	andeq	r4, r4, r5, asr #9
   1d300:			; <UNDEFINED> instruction: 0x000432ba
   1d304:	andeq	r3, r4, sp, lsr r4
   1d308:	muleq	r4, r2, r4
   1d30c:	andeq	r3, r4, r2, lsl r8
   1d310:	push	{r4, lr}
   1d314:	add	r0, r0, #172	; 0xac
   1d318:	mov	r4, r1
   1d31c:	ldr	r1, [r1, #16]
   1d320:	bl	22a08 <ptr_set_find_item@@Base>
   1d324:	cmp	r0, #0
   1d328:	movne	r0, r4
   1d32c:	moveq	r0, #0
   1d330:	pop	{r4, pc}
   1d334:	ldrh	r3, [r1, #8]
   1d338:	sub	r3, r3, #3
   1d33c:	cmp	r3, #1
   1d340:	bxhi	lr
   1d344:	push	{r4, r5, r6, lr}
   1d348:	mov	r4, r0
   1d34c:	mov	r5, r1
   1d350:	ldr	r0, [r0, #4]
   1d354:	bl	1d310 <__flatcc_fb_gen_c_verifier@@Base+0x1ca0>
   1d358:	cmp	r0, #0
   1d35c:	popeq	{r4, r5, r6, pc}
   1d360:	ldr	r2, [r5, #4]
   1d364:	ldr	r3, [r4, #8]
   1d368:	ldm	r2, {r1, r2}
   1d36c:	stm	r3, {r1, r2, r5}
   1d370:	add	r3, r3, #16
   1d374:	str	r3, [r4, #8]
   1d378:	pop	{r4, r5, r6, pc}
   1d37c:	ldrh	r3, [r1, #8]
   1d380:	cmp	r3, #4
   1d384:	bxhi	lr
   1d388:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d38c:	mov	r4, r0
   1d390:	mov	r5, r1
   1d394:	ldr	r0, [r0, #40]	; 0x28
   1d398:	bl	1d310 <__flatcc_fb_gen_c_verifier@@Base+0x1ca0>
   1d39c:	cmp	r0, #0
   1d3a0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d3a4:	ldr	r3, [r4]
   1d3a8:	ldr	r6, [r4, #36]	; 0x24
   1d3ac:	cmp	r3, #0
   1d3b0:	moveq	r3, r6
   1d3b4:	beq	1d3d0 <__flatcc_fb_gen_c_verifier@@Base+0x1d60>
   1d3b8:	ldr	r3, [r0, #12]
   1d3bc:	mov	r9, #46	; 0x2e
   1d3c0:	ldr	r7, [r3]
   1d3c4:	mov	r3, r6
   1d3c8:	cmp	r7, #0
   1d3cc:	bne	1d41c <__flatcc_fb_gen_c_verifier@@Base+0x1dac>
   1d3d0:	ldr	r1, [r5, #4]
   1d3d4:	mov	r0, r3
   1d3d8:	ldm	r1, {r1, r7}
   1d3dc:	mov	r2, r7
   1d3e0:	bl	13ffc <memcpy@plt>
   1d3e4:	add	r2, r0, r7
   1d3e8:	mov	r1, #0
   1d3ec:	add	r3, r2, #1
   1d3f0:	strb	r1, [r0, r7]
   1d3f4:	str	r3, [r4, #36]	; 0x24
   1d3f8:	ldrh	r3, [r5, #8]
   1d3fc:	cmp	r3, #4
   1d400:	ldrls	pc, [pc, r3, lsl #2]
   1d404:	b	1d464 <__flatcc_fb_gen_c_verifier@@Base+0x1df4>
   1d408:	andeq	sp, r1, r0, asr #8
   1d40c:	andeq	sp, r1, r0, asr #8
   1d410:	andeq	sp, r1, r4, ror #8
   1d414:	andeq	sp, r1, r4, asr r4
   1d418:	andeq	sp, r1, r4, asr r4
   1d41c:	ldr	r1, [r7, #4]
   1d420:	mov	r0, r3
   1d424:	ldm	r1, {r1, r8}
   1d428:	mov	r2, r8
   1d42c:	bl	13ffc <memcpy@plt>
   1d430:	add	r3, r0, r8
   1d434:	strb	r9, [r3], #1
   1d438:	ldr	r7, [r7]
   1d43c:	b	1d3c8 <__flatcc_fb_gen_c_verifier@@Base+0x1d58>
   1d440:	ldr	r3, [r4, #28]
   1d444:	stm	r3, {r5, r6}
   1d448:	add	r3, r3, #8
   1d44c:	str	r3, [r4, #28]
   1d450:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d454:	ldr	r3, [r4, #32]
   1d458:	stm	r3, {r5, r6}
   1d45c:	add	r3, r3, #8
   1d460:	str	r3, [r4, #32]
   1d464:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d468:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d46c:	mov	r2, #0
   1d470:	mov	r6, r0
   1d474:	mov	r4, r0
   1d478:	mov	r7, r2
   1d47c:	cmp	r4, #0
   1d480:	bne	1d4e0 <__flatcc_fb_gen_c_verifier@@Base+0x1e70>
   1d484:	cmp	r7, #0
   1d488:	str	r7, [r1]
   1d48c:	beq	1d4d4 <__flatcc_fb_gen_c_verifier@@Base+0x1e64>
   1d490:	lsl	r8, r7, #4
   1d494:	add	r0, r2, r8
   1d498:	bl	14068 <malloc@plt>
   1d49c:	subs	r9, r0, #0
   1d4a0:	beq	1d4d4 <__flatcc_fb_gen_c_verifier@@Base+0x1e64>
   1d4a4:	ldr	sl, [pc, #248]	; 1d5a4 <__flatcc_fb_gen_c_verifier@@Base+0x1f34>
   1d4a8:	add	r8, r9, r8
   1d4ac:	mov	r5, r9
   1d4b0:	mov	fp, #1
   1d4b4:	cmp	r6, #0
   1d4b8:	bne	1d51c <__flatcc_fb_gen_c_verifier@@Base+0x1eac>
   1d4bc:	ldr	r3, [pc, #228]	; 1d5a8 <__flatcc_fb_gen_c_verifier@@Base+0x1f38>
   1d4c0:	mov	r2, #16
   1d4c4:	mov	r1, r7
   1d4c8:	mov	r0, r9
   1d4cc:	mov	r4, r9
   1d4d0:	bl	14140 <qsort@plt>
   1d4d4:	mov	r0, r4
   1d4d8:	add	sp, sp, #12
   1d4dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d4e0:	ldrh	r3, [r4, #72]	; 0x48
   1d4e4:	tst	r3, #4
   1d4e8:	bne	1d514 <__flatcc_fb_gen_c_verifier@@Base+0x1ea4>
   1d4ec:	mov	r0, r4
   1d4f0:	bl	1ba00 <__flatcc_fb_gen_c_verifier@@Base+0x390>
   1d4f4:	cmp	r0, #0
   1d4f8:	beq	1d510 <__flatcc_fb_gen_c_verifier@@Base+0x1ea0>
   1d4fc:	ldr	r3, [r4, #4]
   1d500:	add	r7, r7, #1
   1d504:	ldr	r3, [r3, #4]
   1d508:	add	r3, r3, #6
   1d50c:	add	r2, r2, r3
   1d510:	add	r7, r7, #1
   1d514:	ldr	r4, [r4]
   1d518:	b	1d47c <__flatcc_fb_gen_c_verifier@@Base+0x1e0c>
   1d51c:	ldrh	r3, [r6, #72]	; 0x48
   1d520:	ands	r3, r3, #4
   1d524:	bne	1d59c <__flatcc_fb_gen_c_verifier@@Base+0x1f2c>
   1d528:	ldr	r2, [r6, #4]
   1d52c:	mov	r0, r6
   1d530:	ldm	r2, {r1, r2}
   1d534:	stm	r5, {r1, r2, r6}
   1d538:	str	r3, [r5, #12]
   1d53c:	bl	1ba00 <__flatcc_fb_gen_c_verifier@@Base+0x390>
   1d540:	cmp	r0, #0
   1d544:	addeq	r5, r5, #16
   1d548:	beq	1d59c <__flatcc_fb_gen_c_verifier@@Base+0x1f2c>
   1d54c:	add	r0, r2, #5
   1d550:	add	r3, r4, #1
   1d554:	str	r4, [r6, #112]	; 0x70
   1d558:	str	r8, [r5, #16]
   1d55c:	add	r5, r5, #32
   1d560:	str	r0, [r5, #-12]
   1d564:	mov	r0, r8
   1d568:	str	r3, [sp, #4]
   1d56c:	bl	13ffc <memcpy@plt>
   1d570:	ldr	r2, [r6, #4]
   1d574:	mov	r1, sl
   1d578:	ldr	r2, [r2, #4]
   1d57c:	add	r8, r8, r2
   1d580:	mov	r0, r8
   1d584:	add	r8, r8, #6
   1d588:	bl	14044 <strcpy@plt>
   1d58c:	ldr	r3, [sp, #4]
   1d590:	str	r6, [r5, #-8]
   1d594:	str	fp, [r5, #-4]
   1d598:	mov	r4, r3
   1d59c:	ldr	r6, [r6]
   1d5a0:	b	1d4b4 <__flatcc_fb_gen_c_verifier@@Base+0x1e44>
   1d5a4:	andeq	r0, r3, r1, asr #30
   1d5a8:	andeq	ip, r1, r8, lsr #31
   1d5ac:	ldrh	r3, [r1, #8]
   1d5b0:	sub	r3, r3, #3
   1d5b4:	cmp	r3, #1
   1d5b8:	bxhi	lr
   1d5bc:	push	{r4, lr}
   1d5c0:	mov	r4, r0
   1d5c4:	ldr	r0, [r0, #4]
   1d5c8:	bl	1d310 <__flatcc_fb_gen_c_verifier@@Base+0x1ca0>
   1d5cc:	cmp	r0, #0
   1d5d0:	ldrne	r3, [r4]
   1d5d4:	addne	r3, r3, #1
   1d5d8:	strne	r3, [r4]
   1d5dc:	pop	{r4, pc}
   1d5e0:	ldrh	r3, [r1, #8]
   1d5e4:	cmp	r3, #4
   1d5e8:	bxhi	lr
   1d5ec:	push	{r4, r5, r6, lr}
   1d5f0:	mov	r4, r0
   1d5f4:	mov	r5, r1
   1d5f8:	ldr	r0, [r0, #40]	; 0x28
   1d5fc:	bl	1d310 <__flatcc_fb_gen_c_verifier@@Base+0x1ca0>
   1d600:	cmp	r0, #0
   1d604:	popeq	{r4, r5, r6, pc}
   1d608:	ldr	r3, [r4]
   1d60c:	cmp	r3, #0
   1d610:	ldrne	r3, [r0, #12]
   1d614:	movne	r2, #0
   1d618:	ldrne	r3, [r3]
   1d61c:	bne	1d63c <__flatcc_fb_gen_c_verifier@@Base+0x1fcc>
   1d620:	mov	r2, r3
   1d624:	b	1d644 <__flatcc_fb_gen_c_verifier@@Base+0x1fd4>
   1d628:	ldr	r1, [r3, #4]
   1d62c:	ldr	r3, [r3]
   1d630:	ldr	r1, [r1, #4]
   1d634:	add	r1, r1, #1
   1d638:	add	r2, r2, r1
   1d63c:	cmp	r3, #0
   1d640:	bne	1d628 <__flatcc_fb_gen_c_verifier@@Base+0x1fb8>
   1d644:	ldr	r3, [r5, #4]
   1d648:	ldr	r1, [r4, #12]
   1d64c:	ldr	r3, [r3, #4]
   1d650:	add	r3, r3, r1
   1d654:	add	r3, r3, #1
   1d658:	add	r3, r3, r2
   1d65c:	str	r3, [r4, #12]
   1d660:	ldrh	r3, [r5, #8]
   1d664:	cmp	r3, #4
   1d668:	ldrls	pc, [pc, r3, lsl #2]
   1d66c:	b	1d6a0 <__flatcc_fb_gen_c_verifier@@Base+0x2030>
   1d670:	andeq	sp, r1, r4, lsl #13
   1d674:	andeq	sp, r1, r4, lsl #13
   1d678:	andeq	sp, r1, r0, lsr #13
   1d67c:	muleq	r1, r4, r6
   1d680:	muleq	r1, r4, r6
   1d684:	ldr	r3, [r4, #4]
   1d688:	add	r3, r3, #1
   1d68c:	str	r3, [r4, #4]
   1d690:	pop	{r4, r5, r6, pc}
   1d694:	ldr	r3, [r4, #8]
   1d698:	add	r3, r3, #1
   1d69c:	str	r3, [r4, #8]
   1d6a0:	pop	{r4, r5, r6, pc}
   1d6a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d6a8:	sub	sp, sp, #108	; 0x6c
   1d6ac:	mov	r6, r2
   1d6b0:	mov	r2, #0
   1d6b4:	mov	r4, r0
   1d6b8:	mov	r5, r1
   1d6bc:	str	r3, [sp, #8]
   1d6c0:	mov	r3, #0
   1d6c4:	ldr	fp, [r1]
   1d6c8:	strd	r2, [sp, #56]	; 0x38
   1d6cc:	strd	r2, [sp, #64]	; 0x40
   1d6d0:	ldr	r3, [pc, #1640]	; 1dd40 <__flatcc_fb_gen_c_verifier@@Base+0x26d0>
   1d6d4:	ldr	r9, [sp, #144]	; 0x90
   1d6d8:	str	r3, [sp, #48]	; 0x30
   1d6dc:	mov	r3, #0
   1d6e0:	str	r3, [sp, #52]	; 0x34
   1d6e4:	add	r3, fp, r6, lsl #4
   1d6e8:	add	r2, r9, #7
   1d6ec:	ldr	r3, [r3, #4]
   1d6f0:	str	r2, [sp, #40]	; 0x28
   1d6f4:	cmp	r3, r2
   1d6f8:	ble	1d708 <__flatcc_fb_gen_c_verifier@@Base+0x2098>
   1d6fc:	sub	r3, r3, r9
   1d700:	cmp	r3, #8
   1d704:	bne	1d76c <__flatcc_fb_gen_c_verifier@@Base+0x20fc>
   1d708:	ldr	r3, [sp, #8]
   1d70c:	cmp	r6, r3
   1d710:	beq	1d744 <__flatcc_fb_gen_c_verifier@@Base+0x20d4>
   1d714:	ldr	r2, [sp, #8]
   1d718:	add	r3, r6, #1
   1d71c:	cmp	r3, r2
   1d720:	bne	1d76c <__flatcc_fb_gen_c_verifier@@Base+0x20fc>
   1d724:	add	r3, fp, r2, lsl #4
   1d728:	add	r2, r9, #7
   1d72c:	ldr	r3, [r3, #4]
   1d730:	cmp	r3, r2
   1d734:	ble	1d744 <__flatcc_fb_gen_c_verifier@@Base+0x20d4>
   1d738:	sub	r3, r3, r9
   1d73c:	cmp	r3, #8
   1d740:	bne	1d76c <__flatcc_fb_gen_c_verifier@@Base+0x20fc>
   1d744:	mov	r3, #0
   1d748:	mov	r2, r6
   1d74c:	str	r9, [sp]
   1d750:	mov	r1, r5
   1d754:	mov	r0, r4
   1d758:	str	r3, [sp, #4]
   1d75c:	ldr	r3, [sp, #8]
   1d760:	bl	1bb00 <__flatcc_fb_gen_c_verifier@@Base+0x490>
   1d764:	add	sp, sp, #108	; 0x6c
   1d768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d76c:	ldr	r3, [sp, #8]
   1d770:	mov	r2, #0
   1d774:	mov	sl, #0
   1d778:	sub	r3, r3, r6
   1d77c:	add	r3, r3, r3, lsr #31
   1d780:	add	r3, r6, r3, asr #1
   1d784:	str	r3, [sp, #12]
   1d788:	mov	r3, #0
   1d78c:	ldr	r7, [sp, #12]
   1d790:	strd	r2, [sp, #72]	; 0x48
   1d794:	strd	r2, [sp, #80]	; 0x50
   1d798:	strd	r2, [sp, #88]	; 0x58
   1d79c:	strd	r2, [sp, #96]	; 0x60
   1d7a0:	ldr	r3, [sp, #12]
   1d7a4:	lsl	r3, r3, #4
   1d7a8:	add	fp, fp, r3
   1d7ac:	str	r3, [sp, #16]
   1d7b0:	cmp	r6, r7
   1d7b4:	blt	1d7e4 <__flatcc_fb_gen_c_verifier@@Base+0x2174>
   1d7b8:	mov	r3, #0
   1d7bc:	mov	r2, #0
   1d7c0:	ldr	r7, [r5]
   1d7c4:	mov	r8, #0
   1d7c8:	strd	r2, [sp, #72]	; 0x48
   1d7cc:	strd	r2, [sp, #80]	; 0x50
   1d7d0:	strd	r2, [sp, #88]	; 0x58
   1d7d4:	strd	r2, [sp, #96]	; 0x60
   1d7d8:	ldr	r3, [sp, #16]
   1d7dc:	add	r7, r7, r3
   1d7e0:	b	1d8f4 <__flatcc_fb_gen_c_verifier@@Base+0x2284>
   1d7e4:	sub	r3, fp, #16
   1d7e8:	add	r2, sp, #72	; 0x48
   1d7ec:	str	sl, [sp]
   1d7f0:	mov	r1, r9
   1d7f4:	str	sl, [sp, #4]
   1d7f8:	sub	r8, r7, #1
   1d7fc:	str	r3, [sp, #20]
   1d800:	add	r3, sp, #88	; 0x58
   1d804:	ldr	r0, [sp, #20]
   1d808:	bl	1b930 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1d80c:	lsl	r3, r7, #4
   1d810:	add	r2, sp, #80	; 0x50
   1d814:	mov	r1, r9
   1d818:	mov	r0, fp
   1d81c:	str	sl, [sp]
   1d820:	str	sl, [sp, #4]
   1d824:	str	r3, [sp, #44]	; 0x2c
   1d828:	add	r3, sp, #96	; 0x60
   1d82c:	bl	1b930 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1d830:	ldr	fp, [sp, #20]
   1d834:	ldr	r2, [sp, #72]	; 0x48
   1d838:	ldr	r3, [sp, #80]	; 0x50
   1d83c:	ldr	r1, [sp, #84]	; 0x54
   1d840:	eor	r2, r2, r3
   1d844:	ldr	r3, [sp, #76]	; 0x4c
   1d848:	eor	r3, r3, r1
   1d84c:	ldr	r1, [sp, #88]	; 0x58
   1d850:	and	r2, r2, r1
   1d854:	str	r2, [sp, #24]
   1d858:	ldr	r2, [sp, #92]	; 0x5c
   1d85c:	and	r3, r3, r2
   1d860:	str	r3, [sp, #28]
   1d864:	ldrd	r2, [sp, #24]
   1d868:	orrs	r3, r2, r3
   1d86c:	bne	1dcb0 <__flatcc_fb_gen_c_verifier@@Base+0x2640>
   1d870:	mov	r7, r8
   1d874:	b	1d7b0 <__flatcc_fb_gen_c_verifier@@Base+0x2140>
   1d878:	sub	r3, r3, #1
   1d87c:	ldr	r1, [pc, #1216]	; 1dd44 <__flatcc_fb_gen_c_verifier@@Base+0x26d4>
   1d880:	mov	r0, r4
   1d884:	str	r3, [r4, #220]	; 0xdc
   1d888:	ldr	r3, [sp, #48]	; 0x30
   1d88c:	ldr	r2, [sp, #52]	; 0x34
   1d890:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d894:	ldr	r3, [r4, #220]	; 0xdc
   1d898:	mov	r2, r7
   1d89c:	mov	r1, r5
   1d8a0:	mov	r0, r4
   1d8a4:	add	r3, r3, #1
   1d8a8:	str	r3, [r4, #220]	; 0xdc
   1d8ac:	str	r9, [sp]
   1d8b0:	ldr	r3, [sp, #8]
   1d8b4:	bl	1d6a4 <__flatcc_fb_gen_c_verifier@@Base+0x2034>
   1d8b8:	ldr	r3, [r4, #220]	; 0xdc
   1d8bc:	cmp	r3, #0
   1d8c0:	ldreq	r3, [pc, #1152]	; 1dd48 <__flatcc_fb_gen_c_verifier@@Base+0x26d8>
   1d8c4:	movweq	r2, #975	; 0x3cf
   1d8c8:	beq	1dd34 <__flatcc_fb_gen_c_verifier@@Base+0x26c4>
   1d8cc:	sub	r3, r3, #1
   1d8d0:	ldr	r1, [pc, #1140]	; 1dd4c <__flatcc_fb_gen_c_verifier@@Base+0x26dc>
   1d8d4:	str	r3, [r4, #220]	; 0xdc
   1d8d8:	ldr	r3, [sp, #48]	; 0x30
   1d8dc:	ldr	r2, [sp, #52]	; 0x34
   1d8e0:	mov	r0, r4
   1d8e4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d8e8:	b	1d764 <__flatcc_fb_gen_c_verifier@@Base+0x20f4>
   1d8ec:	ldr	r3, [sp, #16]
   1d8f0:	str	r3, [sp, #12]
   1d8f4:	ldr	r3, [sp, #12]
   1d8f8:	ldr	r2, [sp, #12]
   1d8fc:	add	r3, r3, #1
   1d900:	str	r3, [sp, #16]
   1d904:	ldr	r3, [sp, #8]
   1d908:	cmp	r3, r2
   1d90c:	ble	1d988 <__flatcc_fb_gen_c_verifier@@Base+0x2318>
   1d910:	add	r3, sp, #88	; 0x58
   1d914:	add	r2, sp, #72	; 0x48
   1d918:	str	r8, [sp]
   1d91c:	mov	r1, r9
   1d920:	mov	r0, r7
   1d924:	str	r8, [sp, #4]
   1d928:	add	r7, r7, #16
   1d92c:	bl	1b930 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1d930:	add	r3, sp, #96	; 0x60
   1d934:	add	r2, sp, #80	; 0x50
   1d938:	str	r8, [sp]
   1d93c:	mov	r1, r9
   1d940:	mov	r0, r7
   1d944:	str	r8, [sp, #4]
   1d948:	bl	1b930 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1d94c:	ldr	r2, [sp, #72]	; 0x48
   1d950:	ldr	r3, [sp, #80]	; 0x50
   1d954:	ldr	r1, [sp, #84]	; 0x54
   1d958:	eor	r2, r2, r3
   1d95c:	ldr	r3, [sp, #76]	; 0x4c
   1d960:	eor	r3, r3, r1
   1d964:	ldr	r1, [sp, #88]	; 0x58
   1d968:	and	r2, r2, r1
   1d96c:	str	r2, [sp, #32]
   1d970:	ldr	r2, [sp, #92]	; 0x5c
   1d974:	and	r3, r3, r2
   1d978:	str	r3, [sp, #36]	; 0x24
   1d97c:	ldrd	r2, [sp, #32]
   1d980:	orrs	r3, r2, r3
   1d984:	beq	1d8ec <__flatcc_fb_gen_c_verifier@@Base+0x227c>
   1d988:	ldr	r0, [r5]
   1d98c:	mov	r7, r6
   1d990:	add	r2, r0, #4
   1d994:	ldr	r3, [sp, #12]
   1d998:	cmp	r7, r3
   1d99c:	ble	1dbe8 <__flatcc_fb_gen_c_verifier@@Base+0x2578>
   1d9a0:	ldr	r3, [sp, #16]
   1d9a4:	cmp	r7, r3
   1d9a8:	bge	1dc1c <__flatcc_fb_gen_c_verifier@@Base+0x25ac>
   1d9ac:	cmp	r6, r7
   1d9b0:	add	fp, r9, #8
   1d9b4:	bge	1dc0c <__flatcc_fb_gen_c_verifier@@Base+0x259c>
   1d9b8:	add	r3, r0, r7, lsl #4
   1d9bc:	ldr	r8, [r3, #-12]
   1d9c0:	cmp	r8, fp
   1d9c4:	bgt	1dc0c <__flatcc_fb_gen_c_verifier@@Base+0x259c>
   1d9c8:	sub	r8, r8, r9
   1d9cc:	sub	r8, r8, #8
   1d9d0:	clz	r8, r8
   1d9d4:	lsr	r8, r8, #5
   1d9d8:	add	r3, sp, #52	; 0x34
   1d9dc:	lsl	sl, r7, #4
   1d9e0:	add	r2, sp, #56	; 0x38
   1d9e4:	mov	r1, r9
   1d9e8:	str	r3, [sp, #4]
   1d9ec:	add	r3, sp, #48	; 0x30
   1d9f0:	add	r0, r0, sl
   1d9f4:	str	r3, [sp]
   1d9f8:	add	r3, sp, #64	; 0x40
   1d9fc:	bl	1b930 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1da00:	ldr	r3, [sp, #48]	; 0x30
   1da04:	mov	r0, r4
   1da08:	ldr	r1, [pc, #832]	; 1dd50 <__flatcc_fb_gen_c_verifier@@Base+0x26e0>
   1da0c:	str	r3, [sp, #4]
   1da10:	ldr	r3, [sp, #52]	; 0x34
   1da14:	str	r3, [sp]
   1da18:	ldrd	r2, [sp, #56]	; 0x38
   1da1c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1da20:	ldr	r3, [r4, #220]	; 0xdc
   1da24:	cmp	r8, #0
   1da28:	add	r3, r3, #1
   1da2c:	str	r3, [r4, #220]	; 0xdc
   1da30:	beq	1da80 <__flatcc_fb_gen_c_verifier@@Base+0x2410>
   1da34:	ldr	r1, [pc, #792]	; 1dd54 <__flatcc_fb_gen_c_verifier@@Base+0x26e4>
   1da38:	mov	r0, r4
   1da3c:	sub	sl, sl, #16
   1da40:	ldr	r3, [sp, #48]	; 0x30
   1da44:	ldr	r2, [sp, #52]	; 0x34
   1da48:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1da4c:	ldm	r5, {r3, ip}
   1da50:	mov	r0, r4
   1da54:	ldr	r1, [r5, #12]
   1da58:	add	sl, r3, sl
   1da5c:	mov	r3, #8
   1da60:	str	r3, [sp]
   1da64:	ldrd	r2, [sl, #8]
   1da68:	blx	ip
   1da6c:	ldr	r1, [pc, #740]	; 1dd58 <__flatcc_fb_gen_c_verifier@@Base+0x26e8>
   1da70:	mov	r0, r4
   1da74:	ldr	r3, [sp, #48]	; 0x30
   1da78:	ldr	r2, [sp, #52]	; 0x34
   1da7c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1da80:	ldr	r1, [pc, #724]	; 1dd5c <__flatcc_fb_gen_c_verifier@@Base+0x26ec>
   1da84:	mov	r0, r4
   1da88:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1da8c:	ldr	r1, [pc, #716]	; 1dd60 <__flatcc_fb_gen_c_verifier@@Base+0x26f0>
   1da90:	mov	r0, r4
   1da94:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1da98:	mov	r2, r7
   1da9c:	mov	r1, r5
   1daa0:	str	fp, [sp]
   1daa4:	mov	r0, r4
   1daa8:	ldr	r3, [sp, #12]
   1daac:	bl	1d6a4 <__flatcc_fb_gen_c_verifier@@Base+0x2034>
   1dab0:	cmp	r8, #0
   1dab4:	beq	1dc14 <__flatcc_fb_gen_c_verifier@@Base+0x25a4>
   1dab8:	ldr	r3, [r4, #220]	; 0xdc
   1dabc:	cmp	r3, #0
   1dac0:	ldreq	r3, [pc, #640]	; 1dd48 <__flatcc_fb_gen_c_verifier@@Base+0x26d8>
   1dac4:	moveq	r2, #1040	; 0x410
   1dac8:	beq	1dd34 <__flatcc_fb_gen_c_verifier@@Base+0x26c4>
   1dacc:	sub	r3, r3, #1
   1dad0:	mov	r0, r4
   1dad4:	ldr	r1, [pc, #648]	; 1dd64 <__flatcc_fb_gen_c_verifier@@Base+0x26f4>
   1dad8:	sub	sl, r7, #1
   1dadc:	str	r3, [r4, #220]	; 0xdc
   1dae0:	ldr	r3, [sp, #48]	; 0x30
   1dae4:	ldr	r2, [sp, #52]	; 0x34
   1dae8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1daec:	ldr	r3, [r4, #220]	; 0xdc
   1daf0:	cmp	r3, #0
   1daf4:	ldreq	r3, [pc, #588]	; 1dd48 <__flatcc_fb_gen_c_verifier@@Base+0x26d8>
   1daf8:	movweq	r2, #1044	; 0x414
   1dafc:	beq	1dd34 <__flatcc_fb_gen_c_verifier@@Base+0x26c4>
   1db00:	sub	r3, r3, #1
   1db04:	mov	r0, r4
   1db08:	ldr	r1, [pc, #600]	; 1dd68 <__flatcc_fb_gen_c_verifier@@Base+0x26f8>
   1db0c:	str	r3, [r4, #220]	; 0xdc
   1db10:	ldr	r3, [sp, #48]	; 0x30
   1db14:	ldr	r2, [sp, #52]	; 0x34
   1db18:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1db1c:	ldr	r3, [r4, #220]	; 0xdc
   1db20:	add	r3, r3, #1
   1db24:	str	r3, [r4, #220]	; 0xdc
   1db28:	ldr	r3, [sp, #8]
   1db2c:	ldr	r2, [sp, #16]
   1db30:	cmp	r3, r2
   1db34:	cmpge	sl, r6
   1db38:	ldrgt	r8, [r5, #24]
   1db3c:	movgt	fp, #1
   1db40:	movle	fp, #0
   1db44:	addgt	r8, r8, #1
   1db48:	strgt	r8, [r5, #24]
   1db4c:	bgt	1db5c <__flatcc_fb_gen_c_verifier@@Base+0x24ec>
   1db50:	cmp	sl, r6
   1db54:	mov	r8, fp
   1db58:	ble	1db80 <__flatcc_fb_gen_c_verifier@@Base+0x2510>
   1db5c:	sub	r3, sl, #1
   1db60:	mov	r2, r6
   1db64:	str	r9, [sp]
   1db68:	mov	r1, r5
   1db6c:	mov	r0, r4
   1db70:	str	r8, [sp, #4]
   1db74:	bl	1bb00 <__flatcc_fb_gen_c_verifier@@Base+0x490>
   1db78:	cmp	fp, #0
   1db7c:	bne	1dc24 <__flatcc_fb_gen_c_verifier@@Base+0x25b4>
   1db80:	ldr	r3, [sp, #8]
   1db84:	ldr	r2, [sp, #16]
   1db88:	cmp	r3, r2
   1db8c:	blt	1dc60 <__flatcc_fb_gen_c_verifier@@Base+0x25f0>
   1db90:	mov	r1, r5
   1db94:	mov	r0, r4
   1db98:	str	r9, [sp]
   1db9c:	ldr	r3, [sp, #8]
   1dba0:	ldr	r2, [sp, #16]
   1dba4:	bl	1d6a4 <__flatcc_fb_gen_c_verifier@@Base+0x2034>
   1dba8:	cmp	fp, #0
   1dbac:	bne	1dc78 <__flatcc_fb_gen_c_verifier@@Base+0x2608>
   1dbb0:	ldr	r3, [sp, #16]
   1dbb4:	cmp	r7, r3
   1dbb8:	bge	1d764 <__flatcc_fb_gen_c_verifier@@Base+0x20f4>
   1dbbc:	ldr	r3, [r4, #220]	; 0xdc
   1dbc0:	cmp	r3, #0
   1dbc4:	ldreq	r3, [pc, #380]	; 1dd48 <__flatcc_fb_gen_c_verifier@@Base+0x26d8>
   1dbc8:	moveq	r2, #1072	; 0x430
   1dbcc:	beq	1dd34 <__flatcc_fb_gen_c_verifier@@Base+0x26c4>
   1dbd0:	sub	r3, r3, #1
   1dbd4:	ldr	r1, [pc, #400]	; 1dd6c <__flatcc_fb_gen_c_verifier@@Base+0x26fc>
   1dbd8:	str	r3, [r4, #220]	; 0xdc
   1dbdc:	ldr	r3, [sp, #48]	; 0x30
   1dbe0:	ldr	r2, [sp, #52]	; 0x34
   1dbe4:	b	1d8e0 <__flatcc_fb_gen_c_verifier@@Base+0x2270>
   1dbe8:	ldr	r3, [r2, r7, lsl #4]
   1dbec:	ldr	r1, [sp, #40]	; 0x28
   1dbf0:	cmp	r1, r3
   1dbf4:	bge	1dc04 <__flatcc_fb_gen_c_verifier@@Base+0x2594>
   1dbf8:	sub	r3, r3, r9
   1dbfc:	cmp	r3, #8
   1dc00:	bgt	1d9a0 <__flatcc_fb_gen_c_verifier@@Base+0x2330>
   1dc04:	add	r7, r7, #1
   1dc08:	b	1d994 <__flatcc_fb_gen_c_verifier@@Base+0x2324>
   1dc0c:	mov	r8, #0
   1dc10:	b	1d9d8 <__flatcc_fb_gen_c_verifier@@Base+0x2368>
   1dc14:	mov	sl, r7
   1dc18:	b	1daec <__flatcc_fb_gen_c_verifier@@Base+0x247c>
   1dc1c:	mov	sl, r7
   1dc20:	b	1db28 <__flatcc_fb_gen_c_verifier@@Base+0x24b8>
   1dc24:	mov	r2, r8
   1dc28:	ldr	r1, [pc, #320]	; 1dd70 <__flatcc_fb_gen_c_verifier@@Base+0x2700>
   1dc2c:	mov	r0, r4
   1dc30:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1dc34:	ldr	r3, [r4, #220]	; 0xdc
   1dc38:	mov	r2, r8
   1dc3c:	mov	r0, r4
   1dc40:	ldr	r1, [pc, #300]	; 1dd74 <__flatcc_fb_gen_c_verifier@@Base+0x2704>
   1dc44:	str	r3, [r4, #228]	; 0xe4
   1dc48:	mov	r3, #0
   1dc4c:	str	r3, [r4, #220]	; 0xdc
   1dc50:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1dc54:	ldr	r3, [r4, #228]	; 0xe4
   1dc58:	str	r3, [r4, #220]	; 0xdc
   1dc5c:	b	1db90 <__flatcc_fb_gen_c_verifier@@Base+0x2520>
   1dc60:	cmp	sl, r6
   1dc64:	bgt	1dbb0 <__flatcc_fb_gen_c_verifier@@Base+0x2540>
   1dc68:	mov	r0, r4
   1dc6c:	ldr	r3, [r5, #8]
   1dc70:	blx	r3
   1dc74:	b	1dbb0 <__flatcc_fb_gen_c_verifier@@Base+0x2540>
   1dc78:	ldr	r3, [r4, #220]	; 0xdc
   1dc7c:	mov	r0, r4
   1dc80:	mov	r2, r8
   1dc84:	ldr	r1, [pc, #236]	; 1dd78 <__flatcc_fb_gen_c_verifier@@Base+0x2708>
   1dc88:	str	r3, [r4, #228]	; 0xe4
   1dc8c:	mov	r3, #0
   1dc90:	str	r3, [r4, #220]	; 0xdc
   1dc94:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1dc98:	ldr	r3, [r4, #228]	; 0xe4
   1dc9c:	mov	r0, r4
   1dca0:	ldr	r1, [pc, #212]	; 1dd7c <__flatcc_fb_gen_c_verifier@@Base+0x270c>
   1dca4:	str	r3, [r4, #220]	; 0xdc
   1dca8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1dcac:	b	1dbb0 <__flatcc_fb_gen_c_verifier@@Base+0x2540>
   1dcb0:	ldr	r0, [r5]
   1dcb4:	add	r3, sp, #52	; 0x34
   1dcb8:	lsl	ip, r7, #4
   1dcbc:	add	r2, sp, #56	; 0x38
   1dcc0:	mov	r1, r9
   1dcc4:	str	r3, [sp, #4]
   1dcc8:	add	r3, sp, #48	; 0x30
   1dccc:	str	r3, [sp]
   1dcd0:	add	r3, sp, #64	; 0x40
   1dcd4:	add	r0, r0, ip
   1dcd8:	bl	1b930 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1dcdc:	ldr	r3, [sp, #48]	; 0x30
   1dce0:	mov	r0, r4
   1dce4:	ldr	r1, [pc, #148]	; 1dd80 <__flatcc_fb_gen_c_verifier@@Base+0x2710>
   1dce8:	str	r3, [sp, #4]
   1dcec:	ldr	r3, [sp, #52]	; 0x34
   1dcf0:	str	r3, [sp]
   1dcf4:	ldrd	r2, [sp, #56]	; 0x38
   1dcf8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1dcfc:	ldr	r3, [r4, #220]	; 0xdc
   1dd00:	mov	r2, r6
   1dd04:	mov	r1, r5
   1dd08:	mov	r0, r4
   1dd0c:	add	r3, r3, #1
   1dd10:	str	r3, [r4, #220]	; 0xdc
   1dd14:	mov	r3, r8
   1dd18:	str	r9, [sp]
   1dd1c:	bl	1d6a4 <__flatcc_fb_gen_c_verifier@@Base+0x2034>
   1dd20:	ldr	r3, [r4, #220]	; 0xdc
   1dd24:	cmp	r3, #0
   1dd28:	bne	1d878 <__flatcc_fb_gen_c_verifier@@Base+0x2208>
   1dd2c:	ldr	r3, [pc, #20]	; 1dd48 <__flatcc_fb_gen_c_verifier@@Base+0x26d8>
   1dd30:	movw	r2, #973	; 0x3cd
   1dd34:	ldr	r1, [pc, #72]	; 1dd84 <__flatcc_fb_gen_c_verifier@@Base+0x2714>
   1dd38:	ldr	r0, [pc, #72]	; 1dd88 <__flatcc_fb_gen_c_verifier@@Base+0x2718>
   1dd3c:	bl	1417c <__assert_fail@plt>
   1dd40:	strdeq	r2, [r3], -r7
   1dd44:	ldrdeq	r4, [r4], -r8
   1dd48:	andeq	r3, r4, sl, asr #5
   1dd4c:	strdeq	r4, [r4], -r5
   1dd50:	andeq	r4, r4, fp, lsl #10
   1dd54:	andeq	r4, r4, r3, lsr r5
   1dd58:	andeq	r4, r4, r3, asr r5
   1dd5c:	andeq	r4, r4, pc, ror #10
   1dd60:	andeq	r4, r4, r9, ror r5
   1dd64:	andeq	r4, r4, r7, lsr #11
   1dd68:	andeq	r4, r4, r4, asr #11
   1dd6c:	andeq	r4, r4, ip, lsl #12
   1dd70:	andeq	r4, r4, r2, ror #11
   1dd74:	strdeq	r4, [r4], -r8
   1dd78:	strdeq	r4, [r4], -r5
   1dd7c:	andeq	r4, r4, r3, lsl #12
   1dd80:	andeq	r4, r4, r3, lsr #12
   1dd84:	andeq	r3, r4, sp, lsr r4
   1dd88:	muleq	r4, r2, r4
   1dd8c:	push	{r4, r5, r6, r7, lr}
   1dd90:	sub	sp, sp, #260	; 0x104
   1dd94:	mov	r6, r1
   1dd98:	mov	r2, #28
   1dd9c:	mov	r4, r0
   1dda0:	mov	r1, #0
   1dda4:	add	r0, sp, #24
   1dda8:	bl	140d4 <memset@plt>
   1ddac:	add	r1, sp, #52	; 0x34
   1ddb0:	mov	r0, r6
   1ddb4:	bl	15948 <__flatcc_fb_copy_scope@@Base>
   1ddb8:	ldr	r2, [r4, #208]	; 0xd0
   1ddbc:	mov	r3, #0
   1ddc0:	add	r6, r6, #4
   1ddc4:	mov	r0, r6
   1ddc8:	ldr	r1, [pc, #528]	; 1dfe0 <__flatcc_fb_gen_c_verifier@@Base+0x2970>
   1ddcc:	str	r3, [sp, #12]
   1ddd0:	strd	r2, [sp, #16]
   1ddd4:	add	r2, sp, #12
   1ddd8:	bl	22f50 <fb_symbol_table_visit@@Base>
   1dddc:	ldr	r5, [sp, #12]
   1dde0:	cmp	r5, #0
   1dde4:	streq	r5, [sp, #24]
   1dde8:	beq	1de68 <__flatcc_fb_gen_c_verifier@@Base+0x27f8>
   1ddec:	lsl	r0, r5, #4
   1ddf0:	bl	14068 <malloc@plt>
   1ddf4:	subs	r7, r0, #0
   1ddf8:	bne	1de3c <__flatcc_fb_gen_c_verifier@@Base+0x27cc>
   1ddfc:	cmp	r5, #0
   1de00:	str	r7, [sp, #24]
   1de04:	ble	1de68 <__flatcc_fb_gen_c_verifier@@Base+0x27f8>
   1de08:	ldr	r3, [pc, #468]	; 1dfe4 <__flatcc_fb_gen_c_verifier@@Base+0x2974>
   1de0c:	ldr	r0, [pc, #468]	; 1dfe8 <__flatcc_fb_gen_c_verifier@@Base+0x2978>
   1de10:	ldr	r2, [pc, #468]	; 1dfec <__flatcc_fb_gen_c_verifier@@Base+0x297c>
   1de14:	str	r3, [sp]
   1de18:	movw	r3, #1140	; 0x474
   1de1c:	ldr	r1, [pc, #460]	; 1dff0 <__flatcc_fb_gen_c_verifier@@Base+0x2980>
   1de20:	ldr	r0, [r0]
   1de24:	bl	140bc <fprintf@plt>
   1de28:	ldr	r3, [pc, #452]	; 1dff4 <__flatcc_fb_gen_c_verifier@@Base+0x2984>
   1de2c:	movw	r2, #1140	; 0x474
   1de30:	ldr	r1, [pc, #436]	; 1dfec <__flatcc_fb_gen_c_verifier@@Base+0x297c>
   1de34:	ldr	r0, [pc, #444]	; 1dff8 <__flatcc_fb_gen_c_verifier@@Base+0x2988>
   1de38:	bl	1417c <__assert_fail@plt>
   1de3c:	add	r2, sp, #12
   1de40:	ldr	r1, [pc, #436]	; 1dffc <__flatcc_fb_gen_c_verifier@@Base+0x298c>
   1de44:	mov	r0, r6
   1de48:	str	r7, [sp, #20]
   1de4c:	bl	22f50 <fb_symbol_table_visit@@Base>
   1de50:	ldr	r3, [pc, #424]	; 1e000 <__flatcc_fb_gen_c_verifier@@Base+0x2990>
   1de54:	mov	r2, #16
   1de58:	mov	r0, r7
   1de5c:	ldr	r1, [sp, #12]
   1de60:	bl	14140 <qsort@plt>
   1de64:	str	r7, [sp, #24]
   1de68:	mov	r3, #3
   1de6c:	ldr	r2, [r4, #208]	; 0xd0
   1de70:	mov	r6, #0
   1de74:	mov	r0, r4
   1de78:	ldr	r1, [pc, #388]	; 1e004 <__flatcc_fb_gen_c_verifier@@Base+0x2994>
   1de7c:	str	r3, [sp, #40]	; 0x28
   1de80:	ldr	r3, [pc, #384]	; 1e008 <__flatcc_fb_gen_c_verifier@@Base+0x2998>
   1de84:	ldr	r2, [r2, #160]	; 0xa0
   1de88:	str	r3, [sp, #28]
   1de8c:	ldr	r3, [pc, #376]	; 1e00c <__flatcc_fb_gen_c_verifier@@Base+0x299c>
   1de90:	str	r6, [sp, #36]	; 0x24
   1de94:	str	r3, [sp, #32]
   1de98:	add	r3, sp, #52	; 0x34
   1de9c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1dea0:	ldr	r3, [r4, #220]	; 0xdc
   1dea4:	mov	r0, r4
   1dea8:	ldr	r1, [pc, #352]	; 1e010 <__flatcc_fb_gen_c_verifier@@Base+0x29a0>
   1deac:	add	r3, r3, #2
   1deb0:	str	r3, [r4, #220]	; 0xdc
   1deb4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1deb8:	ldr	r3, [r4, #220]	; 0xdc
   1debc:	cmp	r3, r6
   1dec0:	bne	1ded8 <__flatcc_fb_gen_c_verifier@@Base+0x2868>
   1dec4:	ldr	r3, [pc, #296]	; 1dff4 <__flatcc_fb_gen_c_verifier@@Base+0x2984>
   1dec8:	mov	r2, #1152	; 0x480
   1decc:	ldr	r1, [pc, #280]	; 1dfec <__flatcc_fb_gen_c_verifier@@Base+0x297c>
   1ded0:	ldr	r0, [pc, #316]	; 1e014 <__flatcc_fb_gen_c_verifier@@Base+0x29a4>
   1ded4:	b	1de38 <__flatcc_fb_gen_c_verifier@@Base+0x27c8>
   1ded8:	cmp	r3, #1
   1dedc:	streq	r6, [r4, #220]	; 0xdc
   1dee0:	beq	1dec4 <__flatcc_fb_gen_c_verifier@@Base+0x2854>
   1dee4:	sub	r3, r3, #2
   1dee8:	ldr	r1, [pc, #296]	; 1e018 <__flatcc_fb_gen_c_verifier@@Base+0x29a8>
   1deec:	mov	r0, r4
   1def0:	str	r3, [r4, #220]	; 0xdc
   1def4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1def8:	ldr	r3, [r4, #220]	; 0xdc
   1defc:	cmp	r5, #0
   1df00:	add	r3, r3, #1
   1df04:	str	r3, [r4, #220]	; 0xdc
   1df08:	bne	1df68 <__flatcc_fb_gen_c_verifier@@Base+0x28f8>
   1df0c:	ldr	r1, [pc, #264]	; 1e01c <__flatcc_fb_gen_c_verifier@@Base+0x29ac>
   1df10:	mov	r0, r4
   1df14:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1df18:	ldr	r1, [pc, #256]	; 1e020 <__flatcc_fb_gen_c_verifier@@Base+0x29b0>
   1df1c:	mov	r0, r4
   1df20:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1df24:	ldr	r3, [r4, #220]	; 0xdc
   1df28:	cmp	r3, #0
   1df2c:	ldreq	r3, [pc, #192]	; 1dff4 <__flatcc_fb_gen_c_verifier@@Base+0x2984>
   1df30:	movweq	r2, #1157	; 0x485
   1df34:	beq	1decc <__flatcc_fb_gen_c_verifier@@Base+0x285c>
   1df38:	sub	r3, r3, #1
   1df3c:	mov	r0, r4
   1df40:	ldr	r1, [pc, #220]	; 1e024 <__flatcc_fb_gen_c_verifier@@Base+0x29b4>
   1df44:	str	r3, [r4, #220]	; 0xdc
   1df48:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1df4c:	ldr	r1, [pc, #212]	; 1e028 <__flatcc_fb_gen_c_verifier@@Base+0x29b8>
   1df50:	mov	r0, r4
   1df54:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1df58:	ldr	r0, [sp, #24]
   1df5c:	bl	1cfd0 <__flatcc_fb_gen_c_verifier@@Base+0x1960>
   1df60:	add	sp, sp, #260	; 0x104
   1df64:	pop	{r4, r5, r6, r7, pc}
   1df68:	ldr	r1, [pc, #188]	; 1e02c <__flatcc_fb_gen_c_verifier@@Base+0x29bc>
   1df6c:	mov	r0, r4
   1df70:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1df74:	ldr	r1, [pc, #180]	; 1e030 <__flatcc_fb_gen_c_verifier@@Base+0x29c0>
   1df78:	mov	r0, r4
   1df7c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1df80:	ldr	r1, [pc, #172]	; 1e034 <__flatcc_fb_gen_c_verifier@@Base+0x29c4>
   1df84:	mov	r0, r4
   1df88:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1df8c:	ldr	r1, [pc, #148]	; 1e028 <__flatcc_fb_gen_c_verifier@@Base+0x29b8>
   1df90:	mov	r0, r4
   1df94:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1df98:	ldr	r1, [pc, #152]	; 1e038 <__flatcc_fb_gen_c_verifier@@Base+0x29c8>
   1df9c:	mov	r0, r4
   1dfa0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1dfa4:	sub	r3, r5, #1
   1dfa8:	mov	r2, r6
   1dfac:	str	r6, [sp]
   1dfb0:	add	r1, sp, #24
   1dfb4:	mov	r0, r4
   1dfb8:	bl	1d6a4 <__flatcc_fb_gen_c_verifier@@Base+0x2034>
   1dfbc:	ldr	r1, [pc, #120]	; 1e03c <__flatcc_fb_gen_c_verifier@@Base+0x29cc>
   1dfc0:	mov	r0, r4
   1dfc4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1dfc8:	ldr	r3, [r4, #220]	; 0xdc
   1dfcc:	cmp	r3, #0
   1dfd0:	ldreq	r3, [pc, #28]	; 1dff4 <__flatcc_fb_gen_c_verifier@@Base+0x2984>
   1dfd4:	movweq	r2, #1166	; 0x48e
   1dfd8:	bne	1df38 <__flatcc_fb_gen_c_verifier@@Base+0x28c8>
   1dfdc:	b	1decc <__flatcc_fb_gen_c_verifier@@Base+0x285c>
   1dfe0:	andeq	sp, r1, ip, lsr #11
   1dfe4:	andeq	r4, r4, r9, asr #12
   1dfe8:	strheq	fp, [r5], -r0
   1dfec:	andeq	r3, r4, sp, lsr r4
   1dff0:	ldrdeq	r0, [r3], -r9
   1dff4:	ldrdeq	r3, [r4], -r3	; <UNPREDICTABLE>
   1dff8:	andeq	r9, r3, fp, lsr r2
   1dffc:	andeq	sp, r1, r4, lsr r3
   1e000:	andeq	ip, r1, r8, lsr #31
   1e004:	andeq	r3, r4, r3, asr #9
   1e008:	andeq	sp, r1, r8, ror r1
   1e00c:	strdeq	fp, [r1], -ip
   1e010:	andeq	r4, r4, r5, lsl #13
   1e014:	muleq	r4, r2, r4
   1e018:	andeq	r5, r4, lr, asr #31
   1e01c:			; <UNDEFINED> instruction: 0x000446b7
   1e020:	andeq	r4, r4, r9, ror #13
   1e024:	andeq	r7, r3, sp, ror #7
   1e028:	strdeq	r2, [r3], -r7
   1e02c:	andeq	r4, r4, r6, lsl #14
   1e030:	andeq	r4, r4, r3, lsr #14
   1e034:	andeq	r4, r4, r5, lsr r7
   1e038:	andeq	r4, r4, r9, ror r5
   1e03c:	andeq	r3, r4, r2, ror #16
   1e040:	push	{r4, r5, lr}
   1e044:	mov	r5, r1
   1e048:	sub	sp, sp, #268	; 0x10c
   1e04c:	mov	r1, #0
   1e050:	mov	r4, r0
   1e054:	mov	r2, #28
   1e058:	add	r0, sp, #16
   1e05c:	str	r1, [sp, #12]
   1e060:	bl	140d4 <memset@plt>
   1e064:	ldrh	r3, [r5, #8]
   1e068:	sub	r3, r3, #3
   1e06c:	cmp	r3, #1
   1e070:	bls	1e088 <__flatcc_fb_gen_c_verifier@@Base+0x2a18>
   1e074:	ldr	r3, [pc, #520]	; 1e284 <__flatcc_fb_gen_c_verifier@@Base+0x2c14>
   1e078:	movw	r2, #1246	; 0x4de
   1e07c:	ldr	r1, [pc, #516]	; 1e288 <__flatcc_fb_gen_c_verifier@@Base+0x2c18>
   1e080:	ldr	r0, [pc, #516]	; 1e28c <__flatcc_fb_gen_c_verifier@@Base+0x2c1c>
   1e084:	bl	1417c <__assert_fail@plt>
   1e088:	add	r1, sp, #12
   1e08c:	ldr	r0, [r5, #20]
   1e090:	bl	1d468 <__flatcc_fb_gen_c_verifier@@Base+0x1df8>
   1e094:	cmp	r0, #0
   1e098:	str	r0, [sp, #16]
   1e09c:	bne	1e0e0 <__flatcc_fb_gen_c_verifier@@Base+0x2a70>
   1e0a0:	ldr	r3, [sp, #12]
   1e0a4:	cmp	r3, #0
   1e0a8:	ble	1e0e0 <__flatcc_fb_gen_c_verifier@@Base+0x2a70>
   1e0ac:	ldr	r3, [pc, #476]	; 1e290 <__flatcc_fb_gen_c_verifier@@Base+0x2c20>
   1e0b0:	ldr	r0, [pc, #476]	; 1e294 <__flatcc_fb_gen_c_verifier@@Base+0x2c24>
   1e0b4:	ldr	r2, [pc, #460]	; 1e288 <__flatcc_fb_gen_c_verifier@@Base+0x2c18>
   1e0b8:	str	r3, [sp]
   1e0bc:	movw	r3, #1249	; 0x4e1
   1e0c0:	ldr	r1, [pc, #464]	; 1e298 <__flatcc_fb_gen_c_verifier@@Base+0x2c28>
   1e0c4:	ldr	r0, [r0]
   1e0c8:	bl	140bc <fprintf@plt>
   1e0cc:	ldr	r3, [pc, #432]	; 1e284 <__flatcc_fb_gen_c_verifier@@Base+0x2c14>
   1e0d0:	movw	r2, #1249	; 0x4e1
   1e0d4:	ldr	r1, [pc, #428]	; 1e288 <__flatcc_fb_gen_c_verifier@@Base+0x2c18>
   1e0d8:	ldr	r0, [pc, #444]	; 1e29c <__flatcc_fb_gen_c_verifier@@Base+0x2c2c>
   1e0dc:	b	1e084 <__flatcc_fb_gen_c_verifier@@Base+0x2a14>
   1e0e0:	mov	r3, #2
   1e0e4:	mov	r2, #220	; 0xdc
   1e0e8:	str	r5, [sp, #28]
   1e0ec:	mov	r1, #0
   1e0f0:	add	r0, sp, #44	; 0x2c
   1e0f4:	str	r3, [sp, #32]
   1e0f8:	ldr	r3, [pc, #416]	; 1e2a0 <__flatcc_fb_gen_c_verifier@@Base+0x2c30>
   1e0fc:	str	r3, [sp, #20]
   1e100:	ldr	r3, [pc, #412]	; 1e2a4 <__flatcc_fb_gen_c_verifier@@Base+0x2c34>
   1e104:	str	r3, [sp, #24]
   1e108:	bl	140d4 <memset@plt>
   1e10c:	add	r1, sp, #44	; 0x2c
   1e110:	mov	r0, r5
   1e114:	bl	1be40 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1e118:	add	r2, sp, #44	; 0x2c
   1e11c:	ldr	r1, [pc, #388]	; 1e2a8 <__flatcc_fb_gen_c_verifier@@Base+0x2c38>
   1e120:	mov	r0, r4
   1e124:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e128:	ldr	r3, [r4, #220]	; 0xdc
   1e12c:	mov	r0, r4
   1e130:	ldr	r1, [pc, #372]	; 1e2ac <__flatcc_fb_gen_c_verifier@@Base+0x2c3c>
   1e134:	add	r3, r3, #2
   1e138:	str	r3, [r4, #220]	; 0xdc
   1e13c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e140:	ldr	r3, [r4, #220]	; 0xdc
   1e144:	cmp	r3, #0
   1e148:	bne	1e160 <__flatcc_fb_gen_c_verifier@@Base+0x2af0>
   1e14c:	ldr	r3, [pc, #304]	; 1e284 <__flatcc_fb_gen_c_verifier@@Base+0x2c14>
   1e150:	movw	r2, #1263	; 0x4ef
   1e154:	ldr	r1, [pc, #300]	; 1e288 <__flatcc_fb_gen_c_verifier@@Base+0x2c18>
   1e158:	ldr	r0, [pc, #336]	; 1e2b0 <__flatcc_fb_gen_c_verifier@@Base+0x2c40>
   1e15c:	b	1e084 <__flatcc_fb_gen_c_verifier@@Base+0x2a14>
   1e160:	cmp	r3, #1
   1e164:	moveq	r3, #0
   1e168:	streq	r3, [r4, #220]	; 0xdc
   1e16c:	beq	1e14c <__flatcc_fb_gen_c_verifier@@Base+0x2adc>
   1e170:	sub	r3, r3, #2
   1e174:	ldr	r1, [pc, #312]	; 1e2b4 <__flatcc_fb_gen_c_verifier@@Base+0x2c44>
   1e178:	mov	r0, r4
   1e17c:	str	r3, [r4, #220]	; 0xdc
   1e180:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e184:	ldr	r3, [r4, #220]	; 0xdc
   1e188:	add	r3, r3, #1
   1e18c:	str	r3, [r4, #220]	; 0xdc
   1e190:	ldr	r3, [sp, #12]
   1e194:	cmp	r3, #0
   1e198:	bne	1e208 <__flatcc_fb_gen_c_verifier@@Base+0x2b98>
   1e19c:	ldr	r1, [pc, #276]	; 1e2b8 <__flatcc_fb_gen_c_verifier@@Base+0x2c48>
   1e1a0:	mov	r0, r4
   1e1a4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e1a8:	ldr	r1, [pc, #268]	; 1e2bc <__flatcc_fb_gen_c_verifier@@Base+0x2c4c>
   1e1ac:	mov	r0, r4
   1e1b0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e1b4:	ldr	r1, [pc, #260]	; 1e2c0 <__flatcc_fb_gen_c_verifier@@Base+0x2c50>
   1e1b8:	mov	r0, r4
   1e1bc:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e1c0:	ldr	r3, [r4, #220]	; 0xdc
   1e1c4:	cmp	r3, #0
   1e1c8:	ldreq	r3, [pc, #180]	; 1e284 <__flatcc_fb_gen_c_verifier@@Base+0x2c14>
   1e1cc:	movweq	r2, #1269	; 0x4f5
   1e1d0:	beq	1e154 <__flatcc_fb_gen_c_verifier@@Base+0x2ae4>
   1e1d4:	sub	r3, r3, #1
   1e1d8:	mov	r0, r4
   1e1dc:	ldr	r1, [pc, #224]	; 1e2c4 <__flatcc_fb_gen_c_verifier@@Base+0x2c54>
   1e1e0:	str	r3, [r4, #220]	; 0xdc
   1e1e4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e1e8:	ldr	r1, [pc, #216]	; 1e2c8 <__flatcc_fb_gen_c_verifier@@Base+0x2c58>
   1e1ec:	mov	r0, r4
   1e1f0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e1f4:	ldr	r0, [sp, #16]
   1e1f8:	bl	1cfd0 <__flatcc_fb_gen_c_verifier@@Base+0x1960>
   1e1fc:	mov	r0, #0
   1e200:	add	sp, sp, #268	; 0x10c
   1e204:	pop	{r4, r5, pc}
   1e208:	ldr	r1, [pc, #188]	; 1e2cc <__flatcc_fb_gen_c_verifier@@Base+0x2c5c>
   1e20c:	mov	r0, r4
   1e210:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e214:	ldr	r1, [pc, #180]	; 1e2d0 <__flatcc_fb_gen_c_verifier@@Base+0x2c60>
   1e218:	mov	r0, r4
   1e21c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e220:	ldr	r1, [pc, #172]	; 1e2d4 <__flatcc_fb_gen_c_verifier@@Base+0x2c64>
   1e224:	mov	r0, r4
   1e228:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e22c:	ldr	r1, [pc, #148]	; 1e2c8 <__flatcc_fb_gen_c_verifier@@Base+0x2c58>
   1e230:	mov	r0, r4
   1e234:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e238:	ldr	r1, [pc, #152]	; 1e2d8 <__flatcc_fb_gen_c_verifier@@Base+0x2c68>
   1e23c:	mov	r0, r4
   1e240:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e244:	ldr	r3, [sp, #12]
   1e248:	mov	r2, #0
   1e24c:	add	r1, sp, #16
   1e250:	mov	r0, r4
   1e254:	str	r2, [sp]
   1e258:	sub	r3, r3, #1
   1e25c:	bl	1d6a4 <__flatcc_fb_gen_c_verifier@@Base+0x2034>
   1e260:	ldr	r1, [pc, #116]	; 1e2dc <__flatcc_fb_gen_c_verifier@@Base+0x2c6c>
   1e264:	mov	r0, r4
   1e268:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e26c:	ldr	r3, [r4, #220]	; 0xdc
   1e270:	cmp	r3, #0
   1e274:	bne	1e1d4 <__flatcc_fb_gen_c_verifier@@Base+0x2b64>
   1e278:	ldr	r3, [pc, #4]	; 1e284 <__flatcc_fb_gen_c_verifier@@Base+0x2c14>
   1e27c:	movw	r2, #1278	; 0x4fe
   1e280:	b	1e154 <__flatcc_fb_gen_c_verifier@@Base+0x2ae4>
   1e284:	andeq	r3, r4, sl, ror #5
   1e288:	andeq	r3, r4, sp, lsr r4
   1e28c:	andeq	r0, r3, r7, asr #30
   1e290:	andeq	r4, r4, r9, asr #12
   1e294:	strheq	fp, [r5], -r0
   1e298:	ldrdeq	r0, [r3], -r9
   1e29c:	andeq	r9, r3, fp, lsr r2
   1e2a0:	andeq	sp, r1, r4, lsr r0
   1e2a4:	strdeq	fp, [r1], -r0
   1e2a8:	andeq	r4, r4, r1, asr #14
   1e2ac:	andeq	r4, r4, r4, lsr #15
   1e2b0:	muleq	r4, r2, r4
   1e2b4:	andeq	r5, r4, lr, asr #31
   1e2b8:	ldrdeq	r4, [r4], -r6
   1e2bc:	strdeq	r4, [r4], -r0
   1e2c0:	andeq	r4, r4, r9, ror #13
   1e2c4:	andeq	r7, r3, sp, ror #7
   1e2c8:	strdeq	r2, [r3], -r7
   1e2cc:	andeq	r4, r4, r6, lsl #14
   1e2d0:	andeq	r4, r4, r3, lsr #14
   1e2d4:	andeq	r4, r4, r5, lsr r7
   1e2d8:	andeq	r4, r4, r9, ror r5
   1e2dc:	andeq	r3, r4, r2, ror #16

0001e2e0 <__flatcc_fb_gen_c_json_parser@@Base>:
   1e2e0:	ldr	r3, [r0, #208]	; 0xd0
   1e2e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e2e8:	mov	r4, r0
   1e2ec:	sub	sp, sp, #276	; 0x114
   1e2f0:	ldr	r1, [pc, #3996]	; 1f294 <__flatcc_fb_gen_c_json_parser@@Base+0xfb4>
   1e2f4:	ldr	r2, [r3, #164]	; 0xa4
   1e2f8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e2fc:	ldr	r3, [r4, #208]	; 0xd0
   1e300:	mov	r0, r4
   1e304:	ldr	r1, [pc, #3980]	; 1f298 <__flatcc_fb_gen_c_json_parser@@Base+0xfb8>
   1e308:	ldr	r2, [r3, #164]	; 0xa4
   1e30c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e310:	ldr	r1, [pc, #3972]	; 1f29c <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1e314:	mov	r0, r4
   1e318:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e31c:	ldr	r1, [pc, #3964]	; 1f2a0 <__flatcc_fb_gen_c_json_parser@@Base+0xfc0>
   1e320:	mov	r0, r4
   1e324:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e328:	ldr	r1, [pc, #3948]	; 1f29c <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1e32c:	mov	r0, r4
   1e330:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e334:	ldr	r1, [pc, #3944]	; 1f2a4 <__flatcc_fb_gen_c_json_parser@@Base+0xfc4>
   1e338:	mov	r0, r4
   1e33c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e340:	ldr	r2, [pc, #3936]	; 1f2a8 <__flatcc_fb_gen_c_json_parser@@Base+0xfc8>
   1e344:	mov	r0, r4
   1e348:	ldr	r1, [pc, #3932]	; 1f2ac <__flatcc_fb_gen_c_json_parser@@Base+0xfcc>
   1e34c:	bl	15838 <__flatcc_fb_gen_c_includes@@Base>
   1e350:	ldr	r3, [r4, #212]	; 0xd4
   1e354:	ldr	r3, [r3, #140]	; 0x8c
   1e358:	cmp	r3, #0
   1e35c:	beq	1e36c <__flatcc_fb_gen_c_json_parser@@Base+0x8c>
   1e360:	ldr	r0, [pc, #3912]	; 1f2b0 <__flatcc_fb_gen_c_json_parser@@Base+0xfd0>
   1e364:	ldr	r1, [r4, #204]	; 0xcc
   1e368:	bl	14158 <fputs@plt>
   1e36c:	ldr	r1, [pc, #3880]	; 1f29c <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1e370:	mov	r0, r4
   1e374:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e378:	ldr	r3, [r4, #208]	; 0xd0
   1e37c:	mov	r2, #220	; 0xdc
   1e380:	mov	r1, #0
   1e384:	add	r0, sp, #52	; 0x34
   1e388:	ldr	r5, [r3, #52]	; 0x34
   1e38c:	bl	140d4 <memset@plt>
   1e390:	cmp	r5, #0
   1e394:	beq	1e480 <__flatcc_fb_gen_c_json_parser@@Base+0x1a0>
   1e398:	ldrh	r3, [r5, #8]
   1e39c:	cmp	r3, #1
   1e3a0:	bhi	1e480 <__flatcc_fb_gen_c_json_parser@@Base+0x1a0>
   1e3a4:	ldr	r1, [pc, #3848]	; 1f2b4 <__flatcc_fb_gen_c_json_parser@@Base+0xfd4>
   1e3a8:	mov	r0, r4
   1e3ac:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e3b0:	ldr	r1, [pc, #3840]	; 1f2b8 <__flatcc_fb_gen_c_json_parser@@Base+0xfd8>
   1e3b4:	mov	r0, r4
   1e3b8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e3bc:	ldr	r1, [pc, #3832]	; 1f2bc <__flatcc_fb_gen_c_json_parser@@Base+0xfdc>
   1e3c0:	mov	r0, r4
   1e3c4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e3c8:	ldr	r1, [pc, #3824]	; 1f2c0 <__flatcc_fb_gen_c_json_parser@@Base+0xfe0>
   1e3cc:	mov	r0, r4
   1e3d0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e3d4:	ldr	r1, [pc, #3816]	; 1f2c4 <__flatcc_fb_gen_c_json_parser@@Base+0xfe4>
   1e3d8:	mov	r0, r4
   1e3dc:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e3e0:	ldr	r1, [pc, #3808]	; 1f2c8 <__flatcc_fb_gen_c_json_parser@@Base+0xfe8>
   1e3e4:	mov	r0, r4
   1e3e8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e3ec:	ldr	r1, [pc, #3800]	; 1f2cc <__flatcc_fb_gen_c_json_parser@@Base+0xfec>
   1e3f0:	mov	r0, r4
   1e3f4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e3f8:	ldr	r1, [pc, #3792]	; 1f2d0 <__flatcc_fb_gen_c_json_parser@@Base+0xff0>
   1e3fc:	mov	r0, r4
   1e400:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e404:	ldr	r1, [pc, #3784]	; 1f2d4 <__flatcc_fb_gen_c_json_parser@@Base+0xff4>
   1e408:	mov	r0, r4
   1e40c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e410:	ldr	r3, [r4, #208]	; 0xd0
   1e414:	mov	r0, r4
   1e418:	ldr	r1, [pc, #3768]	; 1f2d8 <__flatcc_fb_gen_c_json_parser@@Base+0xff8>
   1e41c:	ldr	r2, [r3, #160]	; 0xa0
   1e420:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e424:	ldr	r3, [r4, #220]	; 0xdc
   1e428:	mov	r0, r4
   1e42c:	ldr	r1, [pc, #3752]	; 1f2dc <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   1e430:	add	r3, r3, #2
   1e434:	str	r3, [r4, #220]	; 0xdc
   1e438:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e43c:	ldr	r3, [r4, #220]	; 0xdc
   1e440:	cmp	r3, #0
   1e444:	bne	1e45c <__flatcc_fb_gen_c_json_parser@@Base+0x17c>
   1e448:	ldr	r3, [pc, #3728]	; 1f2e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1000>
   1e44c:	movw	r2, #1716	; 0x6b4
   1e450:	ldr	r1, [pc, #3724]	; 1f2e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   1e454:	ldr	r0, [pc, #3724]	; 1f2e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   1e458:	bl	1417c <__assert_fail@plt>
   1e45c:	cmp	r3, #1
   1e460:	moveq	r3, #0
   1e464:	streq	r3, [r4, #220]	; 0xdc
   1e468:	beq	1e448 <__flatcc_fb_gen_c_json_parser@@Base+0x168>
   1e46c:	sub	r3, r3, #2
   1e470:	ldr	r1, [pc, #3620]	; 1f29c <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1e474:	mov	r0, r4
   1e478:	str	r3, [r4, #220]	; 0xdc
   1e47c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e480:	ldr	r3, [r4, #208]	; 0xd0
   1e484:	ldr	r6, [pc, #3680]	; 1f2ec <__flatcc_fb_gen_c_json_parser@@Base+0x100c>
   1e488:	ldr	r7, [pc, #3680]	; 1f2f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1010>
   1e48c:	ldr	r8, [pc, #3680]	; 1f2f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1014>
   1e490:	ldr	r5, [r3, #40]	; 0x28
   1e494:	cmp	r5, #0
   1e498:	bne	1e4f4 <__flatcc_fb_gen_c_json_parser@@Base+0x214>
   1e49c:	ldr	r3, [r4, #208]	; 0xd0
   1e4a0:	mov	r2, r4
   1e4a4:	ldr	r1, [pc, #3660]	; 1f2f8 <__flatcc_fb_gen_c_json_parser@@Base+0x1018>
   1e4a8:	ldr	r0, [r3, #60]	; 0x3c
   1e4ac:	bl	23630 <fb_scope_table_visit@@Base>
   1e4b0:	ldr	r3, [r4, #208]	; 0xd0
   1e4b4:	mov	r0, r4
   1e4b8:	ldr	r1, [pc, #3644]	; 1f2fc <__flatcc_fb_gen_c_json_parser@@Base+0x101c>
   1e4bc:	ldr	r2, [r3, #160]	; 0xa0
   1e4c0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e4c4:	ldr	r3, [r4, #220]	; 0xdc
   1e4c8:	mov	r0, r4
   1e4cc:	ldr	r1, [pc, #3612]	; 1f2f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1010>
   1e4d0:	add	r3, r3, #2
   1e4d4:	str	r3, [r4, #220]	; 0xdc
   1e4d8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e4dc:	ldr	r3, [r4, #220]	; 0xdc
   1e4e0:	cmp	r3, #0
   1e4e4:	bne	1e650 <__flatcc_fb_gen_c_json_parser@@Base+0x370>
   1e4e8:	ldr	r3, [pc, #3568]	; 1f2e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1000>
   1e4ec:	movw	r2, #1755	; 0x6db
   1e4f0:	b	1e450 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1e4f4:	ldrh	r3, [r5, #8]
   1e4f8:	cmp	r3, #4
   1e4fc:	ldrls	pc, [pc, r3, lsl #2]
   1e500:	b	1e5c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e4>
   1e504:	andeq	lr, r1, ip, asr #11
   1e508:	muleq	r1, r8, r5
   1e50c:	andeq	lr, r1, r4, asr #11
   1e510:	andeq	lr, r1, r4, ror #11
   1e514:	andeq	lr, r1, r8, lsl r5
   1e518:	add	r1, sp, #52	; 0x34
   1e51c:	mov	r0, r5
   1e520:	bl	1be40 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1e524:	add	r2, sp, #52	; 0x34
   1e528:	ldr	r1, [pc, #3536]	; 1f300 <__flatcc_fb_gen_c_json_parser@@Base+0x1020>
   1e52c:	mov	r0, r4
   1e530:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e534:	add	r2, sp, #52	; 0x34
   1e538:	ldr	r1, [pc, #3524]	; 1f304 <__flatcc_fb_gen_c_json_parser@@Base+0x1024>
   1e53c:	mov	r0, r4
   1e540:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e544:	add	r2, sp, #52	; 0x34
   1e548:	mov	r1, r6
   1e54c:	mov	r0, r4
   1e550:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e554:	ldr	r3, [r4, #220]	; 0xdc
   1e558:	mov	r1, r7
   1e55c:	mov	r0, r4
   1e560:	add	r3, r3, #2
   1e564:	str	r3, [r4, #220]	; 0xdc
   1e568:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e56c:	ldr	r3, [r4, #220]	; 0xdc
   1e570:	cmp	r3, #0
   1e574:	bne	1e584 <__flatcc_fb_gen_c_json_parser@@Base+0x2a4>
   1e578:	ldr	r3, [pc, #3424]	; 1f2e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1000>
   1e57c:	movw	r2, #1731	; 0x6c3
   1e580:	b	1e450 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1e584:	cmp	r3, #1
   1e588:	bne	1e644 <__flatcc_fb_gen_c_json_parser@@Base+0x364>
   1e58c:	mov	r3, #0
   1e590:	str	r3, [r4, #220]	; 0xdc
   1e594:	b	1e578 <__flatcc_fb_gen_c_json_parser@@Base+0x298>
   1e598:	add	r1, sp, #52	; 0x34
   1e59c:	mov	r0, r5
   1e5a0:	bl	1be40 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1e5a4:	add	r2, sp, #52	; 0x34
   1e5a8:	ldr	r1, [pc, #3416]	; 1f308 <__flatcc_fb_gen_c_json_parser@@Base+0x1028>
   1e5ac:	mov	r0, r4
   1e5b0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e5b4:	ldr	r1, [pc, #3408]	; 1f30c <__flatcc_fb_gen_c_json_parser@@Base+0x102c>
   1e5b8:	add	r2, sp, #52	; 0x34
   1e5bc:	mov	r0, r4
   1e5c0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e5c4:	ldr	r5, [r5]
   1e5c8:	b	1e494 <__flatcc_fb_gen_c_json_parser@@Base+0x1b4>
   1e5cc:	add	r1, sp, #52	; 0x34
   1e5d0:	mov	r0, r5
   1e5d4:	bl	1be40 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1e5d8:	add	r2, sp, #52	; 0x34
   1e5dc:	mov	r1, r8
   1e5e0:	b	1e5bc <__flatcc_fb_gen_c_json_parser@@Base+0x2dc>
   1e5e4:	add	r1, sp, #52	; 0x34
   1e5e8:	mov	r0, r5
   1e5ec:	bl	1be40 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1e5f0:	add	r2, sp, #52	; 0x34
   1e5f4:	mov	r1, r6
   1e5f8:	mov	r0, r4
   1e5fc:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e600:	ldr	r3, [r4, #220]	; 0xdc
   1e604:	add	r2, sp, #52	; 0x34
   1e608:	mov	r1, r7
   1e60c:	mov	r0, r4
   1e610:	add	r3, r3, #2
   1e614:	str	r3, [r4, #220]	; 0xdc
   1e618:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e61c:	ldr	r3, [r4, #220]	; 0xdc
   1e620:	cmp	r3, #0
   1e624:	bne	1e634 <__flatcc_fb_gen_c_json_parser@@Base+0x354>
   1e628:	ldr	r3, [pc, #3248]	; 1f2e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1000>
   1e62c:	movw	r2, #1747	; 0x6d3
   1e630:	b	1e450 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1e634:	cmp	r3, #1
   1e638:	moveq	r3, #0
   1e63c:	streq	r3, [r4, #220]	; 0xdc
   1e640:	beq	1e628 <__flatcc_fb_gen_c_json_parser@@Base+0x348>
   1e644:	sub	r3, r3, #2
   1e648:	str	r3, [r4, #220]	; 0xdc
   1e64c:	b	1e5c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e4>
   1e650:	cmp	r3, #1
   1e654:	streq	r5, [r4, #220]	; 0xdc
   1e658:	beq	1e4e8 <__flatcc_fb_gen_c_json_parser@@Base+0x208>
   1e65c:	sub	r3, r3, #2
   1e660:	ldr	r1, [pc, #3124]	; 1f29c <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1e664:	mov	r0, r4
   1e668:	str	r3, [r4, #220]	; 0xdc
   1e66c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e670:	ldr	r3, [r4, #208]	; 0xd0
   1e674:	ldr	r8, [pc, #3220]	; 1f310 <__flatcc_fb_gen_c_json_parser@@Base+0x1030>
   1e678:	ldr	r9, [pc, #3220]	; 1f314 <__flatcc_fb_gen_c_json_parser@@Base+0x1034>
   1e67c:	ldr	r5, [r3, #40]	; 0x28
   1e680:	cmp	r5, #0
   1e684:	bne	1e7e4 <__flatcc_fb_gen_c_json_parser@@Base+0x504>
   1e688:	ldr	r3, [r4, #208]	; 0xd0
   1e68c:	mov	r2, r4
   1e690:	ldr	r1, [pc, #3200]	; 1f318 <__flatcc_fb_gen_c_json_parser@@Base+0x1038>
   1e694:	ldr	r0, [r3, #60]	; 0x3c
   1e698:	bl	23630 <fb_scope_table_visit@@Base>
   1e69c:	mov	r2, #28
   1e6a0:	mov	r1, r5
   1e6a4:	add	r0, sp, #24
   1e6a8:	bl	140d4 <memset@plt>
   1e6ac:	ldr	r6, [r4, #208]	; 0xd0
   1e6b0:	mov	r2, #36	; 0x24
   1e6b4:	mov	r1, r5
   1e6b8:	add	r0, sp, #56	; 0x38
   1e6bc:	ldr	r8, [r6, #60]	; 0x3c
   1e6c0:	bl	140d4 <memset@plt>
   1e6c4:	mov	r3, #1
   1e6c8:	add	r2, sp, #52	; 0x34
   1e6cc:	ldr	r1, [pc, #3144]	; 1f31c <__flatcc_fb_gen_c_json_parser@@Base+0x103c>
   1e6d0:	str	r3, [sp, #52]	; 0x34
   1e6d4:	mov	r0, r8
   1e6d8:	str	r6, [sp, #92]	; 0x5c
   1e6dc:	bl	23630 <fb_scope_table_visit@@Base>
   1e6e0:	ldr	r9, [sp, #56]	; 0x38
   1e6e4:	mov	r1, #8
   1e6e8:	mov	r0, r9
   1e6ec:	bl	13fc0 <calloc@plt>
   1e6f0:	ldr	r7, [sp, #60]	; 0x3c
   1e6f4:	mov	fp, r0
   1e6f8:	mov	r1, #8
   1e6fc:	str	fp, [sp, #68]	; 0x44
   1e700:	mov	r0, r7
   1e704:	bl	13fc0 <calloc@plt>
   1e708:	ldr	r6, [sp, #64]	; 0x40
   1e70c:	mov	sl, r0
   1e710:	str	sl, [sp, #72]	; 0x48
   1e714:	mov	r0, r6
   1e718:	bl	14068 <malloc@plt>
   1e71c:	cmp	r9, #0
   1e720:	str	r0, [sp, #76]	; 0x4c
   1e724:	movle	r9, #0
   1e728:	movgt	r9, #1
   1e72c:	str	fp, [sp, #80]	; 0x50
   1e730:	cmp	fp, #0
   1e734:	str	sl, [sp, #84]	; 0x54
   1e738:	movne	r9, #0
   1e73c:	str	r0, [sp, #88]	; 0x58
   1e740:	cmp	r9, #0
   1e744:	bne	1e77c <__flatcc_fb_gen_c_json_parser@@Base+0x49c>
   1e748:	cmp	r7, #0
   1e74c:	movle	r7, #0
   1e750:	movgt	r7, #1
   1e754:	cmp	sl, #0
   1e758:	movne	r7, #0
   1e75c:	cmp	r7, #0
   1e760:	bne	1e77c <__flatcc_fb_gen_c_json_parser@@Base+0x49c>
   1e764:	adds	r6, r6, #0
   1e768:	movne	r6, #1
   1e76c:	cmp	r0, #0
   1e770:	movne	r6, #0
   1e774:	cmp	r6, #0
   1e778:	beq	1f0c0 <__flatcc_fb_gen_c_json_parser@@Base+0xde0>
   1e77c:	add	r0, sp, #52	; 0x34
   1e780:	bl	1cfdc <__flatcc_fb_gen_c_verifier@@Base+0x196c>
   1e784:	ldr	r3, [r4, #208]	; 0xd0
   1e788:	ldr	r5, [r3, #52]	; 0x34
   1e78c:	cmp	r5, #0
   1e790:	beq	1e7a8 <__flatcc_fb_gen_c_json_parser@@Base+0x4c8>
   1e794:	ldrh	r6, [r5, #8]
   1e798:	cmp	r6, #0
   1e79c:	beq	1f4dc <__flatcc_fb_gen_c_json_parser@@Base+0x11fc>
   1e7a0:	cmp	r6, #1
   1e7a4:	beq	1f690 <__flatcc_fb_gen_c_json_parser@@Base+0x13b0>
   1e7a8:	ldr	r3, [r4, #212]	; 0xd4
   1e7ac:	ldr	r3, [r3, #140]	; 0x8c
   1e7b0:	cmp	r3, #0
   1e7b4:	beq	1e7c4 <__flatcc_fb_gen_c_json_parser@@Base+0x4e4>
   1e7b8:	ldr	r0, [pc, #2912]	; 1f320 <__flatcc_fb_gen_c_json_parser@@Base+0x1040>
   1e7bc:	ldr	r1, [r4, #204]	; 0xcc
   1e7c0:	bl	14158 <fputs@plt>
   1e7c4:	ldr	r3, [r4, #208]	; 0xd0
   1e7c8:	mov	r0, r4
   1e7cc:	ldr	r1, [pc, #2896]	; 1f324 <__flatcc_fb_gen_c_json_parser@@Base+0x1044>
   1e7d0:	ldr	r2, [r3, #164]	; 0xa4
   1e7d4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e7d8:	mov	r0, #0
   1e7dc:	add	sp, sp, #276	; 0x114
   1e7e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e7e4:	ldrh	r3, [r5, #8]
   1e7e8:	cmp	r3, #4
   1e7ec:	ldrls	pc, [pc, r3, lsl #2]
   1e7f0:	b	1ec28 <__flatcc_fb_gen_c_json_parser@@Base+0x948>
   1e7f4:	andeq	lr, r1, r0, lsr ip
   1e7f8:	andeq	lr, r1, r0, lsr r8
   1e7fc:	andeq	lr, r1, r8, lsr #24
   1e800:	andeq	lr, r1, r0, lsr #16
   1e804:	andeq	lr, r1, r8, lsl #16
   1e808:	mov	r1, r5
   1e80c:	mov	r0, r4
   1e810:	bl	1be50 <__flatcc_fb_gen_c_verifier@@Base+0x7e0>
   1e814:	mov	r1, r5
   1e818:	mov	r0, r4
   1e81c:	bl	1c298 <__flatcc_fb_gen_c_verifier@@Base+0xc28>
   1e820:	mov	r1, r5
   1e824:	mov	r0, r4
   1e828:	bl	1e040 <__flatcc_fb_gen_c_verifier@@Base+0x29d0>
   1e82c:	b	1ec28 <__flatcc_fb_gen_c_json_parser@@Base+0x948>
   1e830:	mov	r2, #28
   1e834:	mov	r1, #0
   1e838:	add	r0, sp, #24
   1e83c:	bl	140d4 <memset@plt>
   1e840:	ldrh	r3, [r5, #8]
   1e844:	cmp	r3, #1
   1e848:	beq	1e860 <__flatcc_fb_gen_c_json_parser@@Base+0x580>
   1e84c:	ldr	r3, [pc, #2772]	; 1f328 <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   1e850:	movw	r2, #1301	; 0x515
   1e854:	ldr	r1, [pc, #2696]	; 1f2e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   1e858:	ldr	r0, [pc, #2764]	; 1f32c <__flatcc_fb_gen_c_json_parser@@Base+0x104c>
   1e85c:	b	1e458 <__flatcc_fb_gen_c_json_parser@@Base+0x178>
   1e860:	add	r1, sp, #20
   1e864:	ldr	r0, [r5, #20]
   1e868:	bl	1d468 <__flatcc_fb_gen_c_verifier@@Base+0x1df8>
   1e86c:	cmp	r0, #0
   1e870:	str	r0, [sp, #24]
   1e874:	bne	1e8b8 <__flatcc_fb_gen_c_json_parser@@Base+0x5d8>
   1e878:	ldr	r3, [sp, #20]
   1e87c:	cmp	r3, #0
   1e880:	ble	1e8b8 <__flatcc_fb_gen_c_json_parser@@Base+0x5d8>
   1e884:	ldr	r3, [pc, #2724]	; 1f330 <__flatcc_fb_gen_c_json_parser@@Base+0x1050>
   1e888:	ldr	r0, [pc, #2724]	; 1f334 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   1e88c:	ldr	r2, [pc, #2640]	; 1f2e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   1e890:	str	r3, [sp]
   1e894:	movw	r3, #1303	; 0x517
   1e898:	ldr	r1, [pc, #2712]	; 1f338 <__flatcc_fb_gen_c_json_parser@@Base+0x1058>
   1e89c:	ldr	r0, [r0]
   1e8a0:	bl	140bc <fprintf@plt>
   1e8a4:	ldr	r3, [pc, #2684]	; 1f328 <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   1e8a8:	movw	r2, #1303	; 0x517
   1e8ac:	ldr	r1, [pc, #2608]	; 1f2e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   1e8b0:	ldr	r0, [pc, #2692]	; 1f33c <__flatcc_fb_gen_c_json_parser@@Base+0x105c>
   1e8b4:	b	1e458 <__flatcc_fb_gen_c_json_parser@@Base+0x178>
   1e8b8:	mov	r3, #1
   1e8bc:	mov	r2, #220	; 0xdc
   1e8c0:	strd	r8, [sp, #28]
   1e8c4:	mov	r1, #0
   1e8c8:	add	r0, sp, #52	; 0x34
   1e8cc:	str	r5, [sp, #36]	; 0x24
   1e8d0:	str	r3, [sp, #40]	; 0x28
   1e8d4:	bl	140d4 <memset@plt>
   1e8d8:	add	r1, sp, #52	; 0x34
   1e8dc:	mov	r0, r5
   1e8e0:	bl	1be40 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1e8e4:	add	r2, sp, #52	; 0x34
   1e8e8:	ldr	r1, [pc, #2640]	; 1f340 <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   1e8ec:	mov	r0, r4
   1e8f0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e8f4:	ldr	r1, [pc, #2856]	; 1f424 <__flatcc_fb_gen_c_json_parser@@Base+0x1144>
   1e8f8:	mov	r0, r4
   1e8fc:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e900:	ldr	r3, [r4, #220]	; 0xdc
   1e904:	mov	r0, r4
   1e908:	ldr	r1, [pc, #2612]	; 1f344 <__flatcc_fb_gen_c_json_parser@@Base+0x1064>
   1e90c:	add	r3, r3, #1
   1e910:	str	r3, [r4, #220]	; 0xdc
   1e914:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e918:	ldr	r3, [sp, #20]
   1e91c:	cmp	r3, #0
   1e920:	ble	1e954 <__flatcc_fb_gen_c_json_parser@@Base+0x674>
   1e924:	ldr	r1, [pc, #2588]	; 1f348 <__flatcc_fb_gen_c_json_parser@@Base+0x1068>
   1e928:	mov	r0, r4
   1e92c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e930:	ldr	r1, [pc, #2580]	; 1f34c <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   1e934:	mov	r0, r4
   1e938:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e93c:	ldr	r1, [pc, #2740]	; 1f3f8 <__flatcc_fb_gen_c_json_parser@@Base+0x1118>
   1e940:	mov	r0, r4
   1e944:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e948:	ldr	r1, [pc, #2732]	; 1f3fc <__flatcc_fb_gen_c_json_parser@@Base+0x111c>
   1e94c:	mov	r0, r4
   1e950:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e954:	ldr	r1, [pc, #2368]	; 1f29c <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1e958:	mov	r0, r4
   1e95c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e960:	ldr	r1, [pc, #2536]	; 1f350 <__flatcc_fb_gen_c_json_parser@@Base+0x1070>
   1e964:	mov	r0, r4
   1e968:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e96c:	ldr	r1, [pc, #2528]	; 1f354 <__flatcc_fb_gen_c_json_parser@@Base+0x1074>
   1e970:	mov	r0, r4
   1e974:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e978:	ldr	r3, [r4, #220]	; 0xdc
   1e97c:	add	r3, r3, #1
   1e980:	str	r3, [r4, #220]	; 0xdc
   1e984:	ldr	r3, [sp, #20]
   1e988:	cmp	r3, #0
   1e98c:	bne	1e9cc <__flatcc_fb_gen_c_json_parser@@Base+0x6ec>
   1e990:	ldr	r1, [pc, #2496]	; 1f358 <__flatcc_fb_gen_c_json_parser@@Base+0x1078>
   1e994:	mov	r0, r4
   1e998:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e99c:	ldr	r1, [pc, #2488]	; 1f35c <__flatcc_fb_gen_c_json_parser@@Base+0x107c>
   1e9a0:	mov	r0, r4
   1e9a4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e9a8:	ldr	r1, [pc, #2480]	; 1f360 <__flatcc_fb_gen_c_json_parser@@Base+0x1080>
   1e9ac:	mov	r0, r4
   1e9b0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e9b4:	ldr	r3, [r4, #220]	; 0xdc
   1e9b8:	cmp	r3, #0
   1e9bc:	bne	1ea04 <__flatcc_fb_gen_c_json_parser@@Base+0x724>
   1e9c0:	ldr	r3, [pc, #2400]	; 1f328 <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   1e9c4:	movw	r2, #1334	; 0x536
   1e9c8:	b	1e450 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1e9cc:	mov	r0, r4
   1e9d0:	ldr	r1, [pc, #2444]	; 1f364 <__flatcc_fb_gen_c_json_parser@@Base+0x1084>
   1e9d4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e9d8:	mov	r0, r4
   1e9dc:	ldr	r1, [pc, #2588]	; 1f400 <__flatcc_fb_gen_c_json_parser@@Base+0x1120>
   1e9e0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e9e4:	ldr	r3, [sp, #20]
   1e9e8:	mov	r2, #0
   1e9ec:	add	r1, sp, #24
   1e9f0:	mov	r0, r4
   1e9f4:	str	r2, [sp]
   1e9f8:	sub	r3, r3, #1
   1e9fc:	bl	1d6a4 <__flatcc_fb_gen_c_verifier@@Base+0x2034>
   1ea00:	b	1e9a8 <__flatcc_fb_gen_c_json_parser@@Base+0x6c8>
   1ea04:	sub	r3, r3, #1
   1ea08:	ldr	r1, [pc, #2620]	; 1f44c <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1ea0c:	mov	r0, r4
   1ea10:	str	r3, [r4, #220]	; 0xdc
   1ea14:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ea18:	ldr	r1, [pc, #2532]	; 1f404 <__flatcc_fb_gen_c_json_parser@@Base+0x1124>
   1ea1c:	mov	r0, r4
   1ea20:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ea24:	ldr	r3, [sp, #20]
   1ea28:	cmp	r3, #0
   1ea2c:	ble	1ea60 <__flatcc_fb_gen_c_json_parser@@Base+0x780>
   1ea30:	ldr	r3, [r4, #220]	; 0xdc
   1ea34:	mov	r0, r4
   1ea38:	ldr	r1, [pc, #2344]	; 1f368 <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   1ea3c:	str	r3, [r4, #228]	; 0xe4
   1ea40:	mov	r3, #0
   1ea44:	str	r3, [r4, #220]	; 0xdc
   1ea48:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ea4c:	ldr	r3, [r4, #228]	; 0xe4
   1ea50:	mov	r0, r4
   1ea54:	ldr	r1, [pc, #2320]	; 1f36c <__flatcc_fb_gen_c_json_parser@@Base+0x108c>
   1ea58:	str	r3, [r4, #220]	; 0xdc
   1ea5c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ea60:	ldr	r3, [r4, #220]	; 0xdc
   1ea64:	cmp	r3, #0
   1ea68:	ldreq	r3, [pc, #2232]	; 1f328 <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   1ea6c:	movweq	r2, #1343	; 0x53f
   1ea70:	beq	1e450 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1ea74:	sub	r3, r3, #1
   1ea78:	ldr	r1, [pc, #2508]	; 1f44c <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1ea7c:	mov	r0, r4
   1ea80:	str	r3, [r4, #220]	; 0xdc
   1ea84:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ea88:	ldr	r1, [pc, #2060]	; 1f29c <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1ea8c:	mov	r0, r4
   1ea90:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ea94:	ldr	r0, [sp, #24]
   1ea98:	bl	1cfd0 <__flatcc_fb_gen_c_verifier@@Base+0x1960>
   1ea9c:	ldrh	r3, [r5, #8]
   1eaa0:	cmp	r3, #1
   1eaa4:	ldrne	r3, [pc, #2244]	; 1f370 <__flatcc_fb_gen_c_json_parser@@Base+0x1090>
   1eaa8:	movwne	r2, #1353	; 0x549
   1eaac:	bne	1e854 <__flatcc_fb_gen_c_json_parser@@Base+0x574>
   1eab0:	mov	r2, #220	; 0xdc
   1eab4:	mov	r1, #0
   1eab8:	add	r0, sp, #52	; 0x34
   1eabc:	bl	140d4 <memset@plt>
   1eac0:	add	r1, sp, #52	; 0x34
   1eac4:	mov	r0, r5
   1eac8:	bl	1be40 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1eacc:	add	r2, sp, #52	; 0x34
   1ead0:	ldr	r1, [pc, #2204]	; 1f374 <__flatcc_fb_gen_c_json_parser@@Base+0x1094>
   1ead4:	mov	r0, r4
   1ead8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1eadc:	ldr	r1, [pc, #2368]	; 1f424 <__flatcc_fb_gen_c_json_parser@@Base+0x1144>
   1eae0:	mov	r0, r4
   1eae4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1eae8:	ldr	r3, [r4, #220]	; 0xdc
   1eaec:	mov	r0, r4
   1eaf0:	ldr	r1, [pc, #2132]	; 1f34c <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   1eaf4:	add	r3, r3, #1
   1eaf8:	str	r3, [r4, #220]	; 0xdc
   1eafc:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1eb00:	ldr	r1, [pc, #1940]	; 1f29c <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1eb04:	mov	r0, r4
   1eb08:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1eb0c:	ldr	r1, [pc, #2148]	; 1f378 <__flatcc_fb_gen_c_json_parser@@Base+0x1098>
   1eb10:	mov	r0, r4
   1eb14:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1eb18:	ldrh	r3, [r5, #104]	; 0x68
   1eb1c:	mov	r0, r4
   1eb20:	ldr	r1, [pc, #2132]	; 1f37c <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   1eb24:	str	r3, [sp]
   1eb28:	ldrd	r2, [r5, #112]	; 0x70
   1eb2c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1eb30:	add	r2, sp, #52	; 0x34
   1eb34:	ldr	r1, [pc, #2116]	; 1f380 <__flatcc_fb_gen_c_json_parser@@Base+0x10a0>
   1eb38:	mov	r0, r4
   1eb3c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1eb40:	ldr	r1, [pc, #2108]	; 1f384 <__flatcc_fb_gen_c_json_parser@@Base+0x10a4>
   1eb44:	mov	r0, r4
   1eb48:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1eb4c:	ldr	r1, [pc, #2224]	; 1f404 <__flatcc_fb_gen_c_json_parser@@Base+0x1124>
   1eb50:	mov	r0, r4
   1eb54:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1eb58:	ldr	r3, [r4, #220]	; 0xdc
   1eb5c:	mov	r0, r4
   1eb60:	ldr	r1, [pc, #2048]	; 1f368 <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   1eb64:	str	r3, [r4, #228]	; 0xe4
   1eb68:	mov	r3, #0
   1eb6c:	str	r3, [r4, #220]	; 0xdc
   1eb70:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1eb74:	ldr	r3, [r4, #228]	; 0xe4
   1eb78:	mov	r0, r4
   1eb7c:	ldr	r1, [pc, #2024]	; 1f36c <__flatcc_fb_gen_c_json_parser@@Base+0x108c>
   1eb80:	str	r3, [r4, #220]	; 0xdc
   1eb84:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1eb88:	ldr	r3, [r4, #220]	; 0xdc
   1eb8c:	cmp	r3, #0
   1eb90:	ldreq	r3, [pc, #2008]	; 1f370 <__flatcc_fb_gen_c_json_parser@@Base+0x1090>
   1eb94:	movweq	r2, #1370	; 0x55a
   1eb98:	beq	1e450 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1eb9c:	sub	r3, r3, #1
   1eba0:	ldr	r1, [pc, #2212]	; 1f44c <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1eba4:	mov	r0, r4
   1eba8:	str	r3, [r4, #220]	; 0xdc
   1ebac:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ebb0:	ldr	r1, [pc, #1764]	; 1f29c <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1ebb4:	mov	r0, r4
   1ebb8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ebbc:	add	r2, sp, #52	; 0x34
   1ebc0:	ldr	r1, [pc, #1984]	; 1f388 <__flatcc_fb_gen_c_json_parser@@Base+0x10a8>
   1ebc4:	mov	r0, r4
   1ebc8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ebcc:	ldr	r1, [pc, #2128]	; 1f424 <__flatcc_fb_gen_c_json_parser@@Base+0x1144>
   1ebd0:	mov	r0, r4
   1ebd4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ebd8:	ldr	r3, [r4, #220]	; 0xdc
   1ebdc:	add	r2, sp, #52	; 0x34
   1ebe0:	mov	r0, r4
   1ebe4:	ldr	r1, [pc, #1952]	; 1f38c <__flatcc_fb_gen_c_json_parser@@Base+0x10ac>
   1ebe8:	add	r3, r3, #1
   1ebec:	str	r3, [r4, #220]	; 0xdc
   1ebf0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ebf4:	ldr	r3, [r4, #220]	; 0xdc
   1ebf8:	cmp	r3, #0
   1ebfc:	ldreq	r3, [pc, #1900]	; 1f370 <__flatcc_fb_gen_c_json_parser@@Base+0x1090>
   1ec00:	moveq	r2, #1376	; 0x560
   1ec04:	beq	1e450 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1ec08:	sub	r3, r3, #1
   1ec0c:	ldr	r1, [pc, #2104]	; 1f44c <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1ec10:	mov	r0, r4
   1ec14:	str	r3, [r4, #220]	; 0xdc
   1ec18:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ec1c:	ldr	r1, [pc, #1656]	; 1f29c <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1ec20:	mov	r0, r4
   1ec24:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ec28:	ldr	r5, [r5]
   1ec2c:	b	1e680 <__flatcc_fb_gen_c_json_parser@@Base+0x3a0>
   1ec30:	mov	r2, #28
   1ec34:	mov	r1, #0
   1ec38:	add	r0, sp, #24
   1ec3c:	bl	140d4 <memset@plt>
   1ec40:	ldrh	r3, [r5, #8]
   1ec44:	cmp	r3, #0
   1ec48:	beq	1ec60 <__flatcc_fb_gen_c_json_parser@@Base+0x980>
   1ec4c:	ldr	r3, [pc, #1852]	; 1f390 <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   1ec50:	movw	r2, #1390	; 0x56e
   1ec54:	ldr	r1, [pc, #1672]	; 1f2e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   1ec58:	ldr	r0, [pc, #1844]	; 1f394 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   1ec5c:	b	1e458 <__flatcc_fb_gen_c_json_parser@@Base+0x178>
   1ec60:	add	r1, sp, #20
   1ec64:	ldr	r0, [r5, #20]
   1ec68:	bl	1d468 <__flatcc_fb_gen_c_verifier@@Base+0x1df8>
   1ec6c:	cmp	r0, #0
   1ec70:	str	r0, [sp, #24]
   1ec74:	ldr	ip, [sp, #20]
   1ec78:	bne	1ecb0 <__flatcc_fb_gen_c_json_parser@@Base+0x9d0>
   1ec7c:	cmp	ip, #0
   1ec80:	ble	1ecb0 <__flatcc_fb_gen_c_json_parser@@Base+0x9d0>
   1ec84:	ldr	r3, [pc, #1700]	; 1f330 <__flatcc_fb_gen_c_json_parser@@Base+0x1050>
   1ec88:	ldr	r0, [pc, #1700]	; 1f334 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   1ec8c:	ldr	r2, [pc, #1616]	; 1f2e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   1ec90:	str	r3, [sp]
   1ec94:	mov	r3, #1392	; 0x570
   1ec98:	ldr	r1, [pc, #1688]	; 1f338 <__flatcc_fb_gen_c_json_parser@@Base+0x1058>
   1ec9c:	ldr	r0, [r0]
   1eca0:	bl	140bc <fprintf@plt>
   1eca4:	ldr	r3, [pc, #1764]	; 1f390 <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   1eca8:	mov	r2, #1392	; 0x570
   1ecac:	b	1e8ac <__flatcc_fb_gen_c_json_parser@@Base+0x5cc>
   1ecb0:	mov	r3, #0
   1ecb4:	add	r0, r0, #12
   1ecb8:	strd	r8, [sp, #28]
   1ecbc:	mov	r1, r3
   1ecc0:	mov	r2, r3
   1ecc4:	str	r5, [sp, #36]	; 0x24
   1ecc8:	str	r3, [sp, #40]	; 0x28
   1eccc:	str	r3, [sp, #44]	; 0x2c
   1ecd0:	cmp	r2, ip
   1ecd4:	blt	1ee50 <__flatcc_fb_gen_c_json_parser@@Base+0xb70>
   1ecd8:	cmp	r3, #0
   1ecdc:	mov	r2, #220	; 0xdc
   1ece0:	add	r0, sp, #52	; 0x34
   1ece4:	strne	r1, [sp, #44]	; 0x2c
   1ece8:	mov	r1, #0
   1ecec:	bl	140d4 <memset@plt>
   1ecf0:	add	r1, sp, #52	; 0x34
   1ecf4:	mov	r0, r5
   1ecf8:	bl	1be40 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1ecfc:	add	r2, sp, #52	; 0x34
   1ed00:	ldr	r1, [pc, #1680]	; 1f398 <__flatcc_fb_gen_c_json_parser@@Base+0x10b8>
   1ed04:	mov	r0, r4
   1ed08:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ed0c:	ldr	r1, [pc, #1808]	; 1f424 <__flatcc_fb_gen_c_json_parser@@Base+0x1144>
   1ed10:	mov	r0, r4
   1ed14:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ed18:	ldr	r3, [r4, #220]	; 0xdc
   1ed1c:	mov	r0, r4
   1ed20:	ldr	r1, [pc, #1564]	; 1f344 <__flatcc_fb_gen_c_json_parser@@Base+0x1064>
   1ed24:	add	r3, r3, #1
   1ed28:	str	r3, [r4, #220]	; 0xdc
   1ed2c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ed30:	ldr	r3, [sp, #20]
   1ed34:	cmp	r3, #0
   1ed38:	ble	1ed6c <__flatcc_fb_gen_c_json_parser@@Base+0xa8c>
   1ed3c:	ldr	r1, [pc, #1544]	; 1f34c <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   1ed40:	mov	r0, r4
   1ed44:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ed48:	ldr	r1, [pc, #1612]	; 1f39c <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   1ed4c:	mov	r0, r4
   1ed50:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ed54:	ldr	r1, [pc, #1692]	; 1f3f8 <__flatcc_fb_gen_c_json_parser@@Base+0x1118>
   1ed58:	mov	r0, r4
   1ed5c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ed60:	ldr	r1, [pc, #1684]	; 1f3fc <__flatcc_fb_gen_c_json_parser@@Base+0x111c>
   1ed64:	mov	r0, r4
   1ed68:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ed6c:	ldr	r3, [sp, #44]	; 0x2c
   1ed70:	cmp	r3, #0
   1ed74:	beq	1ed84 <__flatcc_fb_gen_c_json_parser@@Base+0xaa4>
   1ed78:	ldr	r1, [pc, #1568]	; 1f3a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10c0>
   1ed7c:	mov	r0, r4
   1ed80:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ed84:	ldr	r1, [pc, #1296]	; 1f29c <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1ed88:	mov	r0, r4
   1ed8c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ed90:	ldr	r1, [pc, #1504]	; 1f378 <__flatcc_fb_gen_c_json_parser@@Base+0x1098>
   1ed94:	mov	r0, r4
   1ed98:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ed9c:	ldr	r1, [pc, #1536]	; 1f3a4 <__flatcc_fb_gen_c_json_parser@@Base+0x10c4>
   1eda0:	mov	r0, r4
   1eda4:	ldrd	r2, [r5, #96]	; 0x60
   1eda8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1edac:	ldr	r2, [sp, #44]	; 0x2c
   1edb0:	cmp	r2, #0
   1edb4:	beq	1edc8 <__flatcc_fb_gen_c_json_parser@@Base+0xae8>
   1edb8:	asr	r3, r2, #31
   1edbc:	ldr	r1, [pc, #1508]	; 1f3a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10c8>
   1edc0:	mov	r0, r4
   1edc4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1edc8:	ldr	r1, [pc, #1408]	; 1f350 <__flatcc_fb_gen_c_json_parser@@Base+0x1070>
   1edcc:	mov	r0, r4
   1edd0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1edd4:	ldr	r1, [pc, #1400]	; 1f354 <__flatcc_fb_gen_c_json_parser@@Base+0x1074>
   1edd8:	mov	r0, r4
   1eddc:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ede0:	ldr	r3, [r4, #220]	; 0xdc
   1ede4:	mov	r0, r4
   1ede8:	ldr	r1, [pc, #1396]	; 1f364 <__flatcc_fb_gen_c_json_parser@@Base+0x1084>
   1edec:	add	r3, r3, #1
   1edf0:	str	r3, [r4, #220]	; 0xdc
   1edf4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1edf8:	ldr	r3, [sp, #20]
   1edfc:	cmp	r3, #0
   1ee00:	ble	1ee68 <__flatcc_fb_gen_c_json_parser@@Base+0xb88>
   1ee04:	ldr	r1, [pc, #1524]	; 1f400 <__flatcc_fb_gen_c_json_parser@@Base+0x1120>
   1ee08:	mov	r0, r4
   1ee0c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ee10:	ldr	r3, [sp, #20]
   1ee14:	mov	r2, #0
   1ee18:	add	r1, sp, #24
   1ee1c:	mov	r0, r4
   1ee20:	str	r2, [sp]
   1ee24:	sub	r3, r3, #1
   1ee28:	bl	1d6a4 <__flatcc_fb_gen_c_verifier@@Base+0x2034>
   1ee2c:	ldr	r1, [pc, #1400]	; 1f3ac <__flatcc_fb_gen_c_json_parser@@Base+0x10cc>
   1ee30:	mov	r0, r4
   1ee34:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ee38:	ldr	r3, [r4, #220]	; 0xdc
   1ee3c:	cmp	r3, #0
   1ee40:	bne	1ee84 <__flatcc_fb_gen_c_json_parser@@Base+0xba4>
   1ee44:	ldr	r3, [pc, #1348]	; 1f390 <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   1ee48:	movw	r2, #1438	; 0x59e
   1ee4c:	b	1e450 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1ee50:	ldr	r3, [r0, r2, lsl #4]
   1ee54:	add	r2, r2, #1
   1ee58:	cmp	r3, #0
   1ee5c:	addne	r1, r1, #1
   1ee60:	mov	r3, #1
   1ee64:	b	1ecd0 <__flatcc_fb_gen_c_json_parser@@Base+0x9f0>
   1ee68:	mov	r0, r4
   1ee6c:	ldr	r1, [pc, #1340]	; 1f3b0 <__flatcc_fb_gen_c_json_parser@@Base+0x10d0>
   1ee70:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ee74:	ldr	r1, [pc, #1248]	; 1f35c <__flatcc_fb_gen_c_json_parser@@Base+0x107c>
   1ee78:	mov	r0, r4
   1ee7c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ee80:	b	1ee2c <__flatcc_fb_gen_c_json_parser@@Base+0xb4c>
   1ee84:	sub	r3, r3, #1
   1ee88:	ldr	r1, [pc, #1468]	; 1f44c <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1ee8c:	mov	r0, r4
   1ee90:	mov	r6, #0
   1ee94:	mov	r7, #1
   1ee98:	str	r3, [r4, #220]	; 0xdc
   1ee9c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1eea0:	ldr	r1, [pc, #1292]	; 1f3b4 <__flatcc_fb_gen_c_json_parser@@Base+0x10d4>
   1eea4:	mov	r0, r4
   1eea8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1eeac:	ldr	r3, [sp, #20]
   1eeb0:	cmp	r6, r3
   1eeb4:	blt	1eed8 <__flatcc_fb_gen_c_json_parser@@Base+0xbf8>
   1eeb8:	cmp	r7, #0
   1eebc:	bne	1efb4 <__flatcc_fb_gen_c_json_parser@@Base+0xcd4>
   1eec0:	ldr	r3, [r4, #220]	; 0xdc
   1eec4:	cmp	r3, #0
   1eec8:	bne	1ef54 <__flatcc_fb_gen_c_json_parser@@Base+0xc74>
   1eecc:	ldr	r3, [pc, #1212]	; 1f390 <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   1eed0:	movw	r2, #1458	; 0x5b2
   1eed4:	b	1e450 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1eed8:	ldr	r3, [sp, #24]
   1eedc:	add	r3, r3, r6, lsl #4
   1eee0:	ldr	r2, [r3, #8]
   1eee4:	ldrh	r3, [r2, #72]	; 0x48
   1eee8:	ands	r1, r3, #4
   1eeec:	str	r1, [sp, #12]
   1eef0:	bne	1ef3c <__flatcc_fb_gen_c_json_parser@@Base+0xc5c>
   1eef4:	tst	r3, #256	; 0x100
   1eef8:	beq	1ef3c <__flatcc_fb_gen_c_json_parser@@Base+0xc5c>
   1eefc:	mov	r0, r2
   1ef00:	bl	1ba00 <__flatcc_fb_gen_c_verifier@@Base+0x390>
   1ef04:	ldrd	r2, [r2, #96]	; 0x60
   1ef08:	subs	sl, r2, r0
   1ef0c:	sbc	fp, r3, r0, asr #31
   1ef10:	cmp	r7, #0
   1ef14:	mov	r2, sl
   1ef18:	mov	r3, fp
   1ef1c:	beq	1ef44 <__flatcc_fb_gen_c_json_parser@@Base+0xc64>
   1ef20:	ldr	r1, [pc, #1168]	; 1f3b8 <__flatcc_fb_gen_c_json_parser@@Base+0x10d8>
   1ef24:	mov	r0, r4
   1ef28:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ef2c:	ldr	r3, [r4, #220]	; 0xdc
   1ef30:	ldr	r7, [sp, #12]
   1ef34:	add	r3, r3, #1
   1ef38:	str	r3, [r4, #220]	; 0xdc
   1ef3c:	add	r6, r6, #1
   1ef40:	b	1eeac <__flatcc_fb_gen_c_json_parser@@Base+0xbcc>
   1ef44:	ldr	r1, [pc, #1136]	; 1f3bc <__flatcc_fb_gen_c_json_parser@@Base+0x10dc>
   1ef48:	mov	r0, r4
   1ef4c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ef50:	b	1ef3c <__flatcc_fb_gen_c_json_parser@@Base+0xc5c>
   1ef54:	sub	r3, r3, #1
   1ef58:	ldr	r1, [pc, #1120]	; 1f3c0 <__flatcc_fb_gen_c_json_parser@@Base+0x10e0>
   1ef5c:	mov	r0, r4
   1ef60:	str	r3, [r4, #220]	; 0xdc
   1ef64:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ef68:	ldr	r3, [r4, #220]	; 0xdc
   1ef6c:	mov	r0, r4
   1ef70:	ldr	r1, [pc, #1100]	; 1f3c4 <__flatcc_fb_gen_c_json_parser@@Base+0x10e4>
   1ef74:	add	r3, r3, #1
   1ef78:	str	r3, [r4, #220]	; 0xdc
   1ef7c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ef80:	ldr	r1, [pc, #1088]	; 1f3c8 <__flatcc_fb_gen_c_json_parser@@Base+0x10e8>
   1ef84:	mov	r0, r4
   1ef88:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ef8c:	ldr	r3, [r4, #220]	; 0xdc
   1ef90:	cmp	r3, #0
   1ef94:	ldreq	r3, [pc, #1012]	; 1f390 <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   1ef98:	movweq	r2, #1461	; 0x5b5
   1ef9c:	beq	1e450 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1efa0:	sub	r3, r3, #1
   1efa4:	ldr	r1, [pc, #1184]	; 1f44c <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1efa8:	mov	r0, r4
   1efac:	str	r3, [r4, #220]	; 0xdc
   1efb0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1efb4:	ldr	r3, [sp, #44]	; 0x2c
   1efb8:	cmp	r3, #0
   1efbc:	beq	1efcc <__flatcc_fb_gen_c_json_parser@@Base+0xcec>
   1efc0:	ldr	r1, [pc, #1028]	; 1f3cc <__flatcc_fb_gen_c_json_parser@@Base+0x10ec>
   1efc4:	mov	r0, r4
   1efc8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1efcc:	ldr	r1, [pc, #1020]	; 1f3d0 <__flatcc_fb_gen_c_json_parser@@Base+0x10f0>
   1efd0:	mov	r0, r4
   1efd4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1efd8:	ldr	r1, [pc, #1060]	; 1f404 <__flatcc_fb_gen_c_json_parser@@Base+0x1124>
   1efdc:	mov	r0, r4
   1efe0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1efe4:	ldr	r3, [r4, #220]	; 0xdc
   1efe8:	mov	r0, r4
   1efec:	ldr	r1, [pc, #884]	; 1f368 <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   1eff0:	str	r3, [r4, #228]	; 0xe4
   1eff4:	mov	r3, #0
   1eff8:	str	r3, [r4, #220]	; 0xdc
   1effc:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f000:	ldr	r3, [r4, #228]	; 0xe4
   1f004:	mov	r0, r4
   1f008:	ldr	r1, [pc, #860]	; 1f36c <__flatcc_fb_gen_c_json_parser@@Base+0x108c>
   1f00c:	str	r3, [r4, #220]	; 0xdc
   1f010:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f014:	ldr	r3, [r4, #220]	; 0xdc
   1f018:	cmp	r3, #0
   1f01c:	ldreq	r3, [pc, #876]	; 1f390 <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   1f020:	movweq	r2, #1473	; 0x5c1
   1f024:	beq	1e450 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f028:	sub	r3, r3, #1
   1f02c:	ldr	r1, [pc, #1048]	; 1f44c <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1f030:	mov	r0, r4
   1f034:	str	r3, [r4, #220]	; 0xdc
   1f038:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f03c:	ldr	r1, [pc, #600]	; 1f29c <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1f040:	mov	r0, r4
   1f044:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f048:	add	r2, sp, #52	; 0x34
   1f04c:	ldr	r1, [pc, #820]	; 1f388 <__flatcc_fb_gen_c_json_parser@@Base+0x10a8>
   1f050:	mov	r0, r4
   1f054:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f058:	ldr	r1, [pc, #964]	; 1f424 <__flatcc_fb_gen_c_json_parser@@Base+0x1144>
   1f05c:	mov	r0, r4
   1f060:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f064:	ldr	r3, [r4, #220]	; 0xdc
   1f068:	add	r2, sp, #52	; 0x34
   1f06c:	mov	r0, r4
   1f070:	ldr	r1, [pc, #860]	; 1f3d4 <__flatcc_fb_gen_c_json_parser@@Base+0x10f4>
   1f074:	add	r3, r3, #1
   1f078:	str	r3, [r4, #220]	; 0xdc
   1f07c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f080:	ldr	r3, [r4, #220]	; 0xdc
   1f084:	cmp	r3, #0
   1f088:	ldreq	r3, [pc, #768]	; 1f390 <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   1f08c:	movweq	r2, #1479	; 0x5c7
   1f090:	beq	1e450 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f094:	sub	r3, r3, #1
   1f098:	mov	r0, r4
   1f09c:	ldr	r1, [pc, #936]	; 1f44c <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1f0a0:	str	r3, [r4, #220]	; 0xdc
   1f0a4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f0a8:	mov	r0, r4
   1f0ac:	ldr	r1, [pc, #488]	; 1f29c <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1f0b0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f0b4:	ldr	r0, [sp, #24]
   1f0b8:	bl	1cfd0 <__flatcc_fb_gen_c_verifier@@Base+0x1960>
   1f0bc:	b	1ec28 <__flatcc_fb_gen_c_json_parser@@Base+0x948>
   1f0c0:	add	r2, sp, #52	; 0x34
   1f0c4:	ldr	r1, [pc, #780]	; 1f3d8 <__flatcc_fb_gen_c_json_parser@@Base+0x10f8>
   1f0c8:	mov	r0, r8
   1f0cc:	bl	23630 <fb_scope_table_visit@@Base>
   1f0d0:	ldr	r1, [sp, #56]	; 0x38
   1f0d4:	ldr	r0, [sp, #68]	; 0x44
   1f0d8:	bl	1cf70 <__flatcc_fb_gen_c_verifier@@Base+0x1900>
   1f0dc:	ldr	r1, [sp, #60]	; 0x3c
   1f0e0:	ldr	r0, [sp, #72]	; 0x48
   1f0e4:	bl	1cf70 <__flatcc_fb_gen_c_verifier@@Base+0x1900>
   1f0e8:	ldr	r7, [sp, #60]	; 0x3c
   1f0ec:	cmp	r7, #0
   1f0f0:	beq	1f110 <__flatcc_fb_gen_c_json_parser@@Base+0xe30>
   1f0f4:	lsl	r0, r7, #4
   1f0f8:	bl	14068 <malloc@plt>
   1f0fc:	subs	r5, r0, #0
   1f100:	movne	r8, r5
   1f104:	movne	sl, r6
   1f108:	ldrne	r9, [sp, #72]	; 0x48
   1f10c:	bne	1f17c <__flatcc_fb_gen_c_json_parser@@Base+0xe9c>
   1f110:	cmp	r7, #0
   1f114:	str	r5, [sp, #24]
   1f118:	movle	r6, #0
   1f11c:	movgt	r6, #1
   1f120:	cmp	r5, #0
   1f124:	movne	r6, #0
   1f128:	cmp	r6, #0
   1f12c:	beq	1f1a8 <__flatcc_fb_gen_c_json_parser@@Base+0xec8>
   1f130:	add	r0, sp, #52	; 0x34
   1f134:	bl	1cfdc <__flatcc_fb_gen_c_verifier@@Base+0x196c>
   1f138:	ldr	r3, [pc, #496]	; 1f330 <__flatcc_fb_gen_c_json_parser@@Base+0x1050>
   1f13c:	ldr	r0, [pc, #496]	; 1f334 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   1f140:	ldr	r2, [pc, #412]	; 1f2e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   1f144:	str	r3, [sp]
   1f148:	movw	r3, #1194	; 0x4aa
   1f14c:	ldr	r1, [pc, #484]	; 1f338 <__flatcc_fb_gen_c_json_parser@@Base+0x1058>
   1f150:	ldr	r0, [r0]
   1f154:	bl	140bc <fprintf@plt>
   1f158:	ldr	r3, [pc, #680]	; 1f408 <__flatcc_fb_gen_c_json_parser@@Base+0x1128>
   1f15c:	movw	r2, #1194	; 0x4aa
   1f160:	b	1e8ac <__flatcc_fb_gen_c_json_parser@@Base+0x5cc>
   1f164:	ldr	r0, [r9, #-4]
   1f168:	add	r6, r6, #1
   1f16c:	str	r0, [r8, #-16]
   1f170:	bl	140a4 <strlen@plt>
   1f174:	ldr	r3, [r9, #-8]
   1f178:	stmdb	r8, {r0, r3, sl}
   1f17c:	cmp	r7, r6
   1f180:	add	r9, r9, #8
   1f184:	add	r8, r8, #16
   1f188:	bgt	1f164 <__flatcc_fb_gen_c_json_parser@@Base+0xe84>
   1f18c:	mov	r1, r7
   1f190:	ldr	r3, [pc, #580]	; 1f3dc <__flatcc_fb_gen_c_json_parser@@Base+0x10fc>
   1f194:	mov	r2, #16
   1f198:	mov	r0, r5
   1f19c:	bl	14140 <qsort@plt>
   1f1a0:	ldr	r7, [sp, #60]	; 0x3c
   1f1a4:	b	1f110 <__flatcc_fb_gen_c_json_parser@@Base+0xe30>
   1f1a8:	mov	r3, #4
   1f1ac:	ldr	r1, [pc, #328]	; 1f2fc <__flatcc_fb_gen_c_json_parser@@Base+0x101c>
   1f1b0:	mov	r0, r4
   1f1b4:	str	r6, [sp, #36]	; 0x24
   1f1b8:	str	r3, [sp, #40]	; 0x28
   1f1bc:	ldr	r3, [pc, #540]	; 1f3e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1100>
   1f1c0:	str	r3, [sp, #28]
   1f1c4:	ldr	r3, [pc, #536]	; 1f3e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1104>
   1f1c8:	str	r3, [sp, #32]
   1f1cc:	ldr	r3, [r4, #208]	; 0xd0
   1f1d0:	ldr	r2, [r3, #160]	; 0xa0
   1f1d4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f1d8:	ldr	r3, [r4, #220]	; 0xdc
   1f1dc:	mov	r0, r4
   1f1e0:	ldr	r1, [pc, #512]	; 1f3e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1108>
   1f1e4:	add	r3, r3, #2
   1f1e8:	str	r3, [r4, #220]	; 0xdc
   1f1ec:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f1f0:	ldr	r3, [r4, #220]	; 0xdc
   1f1f4:	cmp	r3, #0
   1f1f8:	bne	1f208 <__flatcc_fb_gen_c_json_parser@@Base+0xf28>
   1f1fc:	ldr	r3, [pc, #516]	; 1f408 <__flatcc_fb_gen_c_json_parser@@Base+0x1128>
   1f200:	movw	r2, #1205	; 0x4b5
   1f204:	b	1e450 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f208:	cmp	r3, #1
   1f20c:	streq	r6, [r4, #220]	; 0xdc
   1f210:	beq	1f1fc <__flatcc_fb_gen_c_json_parser@@Base+0xf1c>
   1f214:	sub	r3, r3, #2
   1f218:	ldr	r1, [pc, #516]	; 1f424 <__flatcc_fb_gen_c_json_parser@@Base+0x1144>
   1f21c:	mov	r0, r4
   1f220:	str	r3, [r4, #220]	; 0xdc
   1f224:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f228:	ldr	r3, [r4, #220]	; 0xdc
   1f22c:	cmp	r7, #0
   1f230:	add	r3, r3, #1
   1f234:	str	r3, [r4, #220]	; 0xdc
   1f238:	bne	1f464 <__flatcc_fb_gen_c_json_parser@@Base+0x1184>
   1f23c:	ldr	r1, [pc, #424]	; 1f3ec <__flatcc_fb_gen_c_json_parser@@Base+0x110c>
   1f240:	mov	r0, r4
   1f244:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f248:	ldr	r1, [pc, #416]	; 1f3f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1110>
   1f24c:	mov	r0, r4
   1f250:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f254:	ldr	r3, [r4, #220]	; 0xdc
   1f258:	cmp	r3, #0
   1f25c:	ldreq	r3, [pc, #420]	; 1f408 <__flatcc_fb_gen_c_json_parser@@Base+0x1128>
   1f260:	movweq	r2, #1210	; 0x4ba
   1f264:	beq	1e450 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f268:	sub	r3, r3, #1
   1f26c:	mov	r0, r4
   1f270:	ldr	r1, [pc, #468]	; 1f44c <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1f274:	str	r3, [r4, #220]	; 0xdc
   1f278:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f27c:	mov	r0, r4
   1f280:	ldr	r1, [pc, #20]	; 1f29c <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1f284:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f288:	ldr	r0, [sp, #24]
   1f28c:	bl	1cfd0 <__flatcc_fb_gen_c_verifier@@Base+0x1960>
   1f290:	b	1e77c <__flatcc_fb_gen_c_json_parser@@Base+0x49c>
   1f294:	andeq	r4, r4, r0, lsl #16
   1f298:	andeq	r4, r4, r9, lsl r8
   1f29c:	strdeq	r2, [r3], -r7
   1f2a0:	andeq	r4, r4, r2, lsr r8
   1f2a4:	andeq	r4, r4, r1, lsl #17
   1f2a8:	andeq	r4, r4, r3, lsr #16
   1f2ac:	andeq	r0, r3, r5, lsr fp
   1f2b0:	andeq	r2, r3, r9, lsr #3
   1f2b4:	andeq	r4, r4, r8, lsr #17
   1f2b8:	andeq	r4, r4, fp, lsr #17
   1f2bc:	andeq	r4, r4, r1, lsl #18
   1f2c0:	andeq	r4, r4, r4, lsl #18
   1f2c4:	andeq	r4, r4, r8, asr #18
   1f2c8:	andeq	r4, r4, lr, ror r9
   1f2cc:	andeq	r4, r4, r6, lsr #19
   1f2d0:	andeq	r4, r4, lr, ror #19
   1f2d4:	andeq	r3, r4, r9, lsr #8
   1f2d8:	andeq	r4, r4, ip, lsr #20
   1f2dc:	andeq	r4, r4, r5, ror sl
   1f2e0:	strdeq	r3, [r4], -sl
   1f2e4:	andeq	r3, r4, sp, lsr r4
   1f2e8:	muleq	r4, r2, r4
   1f2ec:	andeq	r4, r4, r1, asr #14
   1f2f0:	andeq	r3, r4, pc, lsr #10
   1f2f4:	andeq	r4, r4, r8, ror #24
   1f2f8:	strdeq	fp, [r1], -r4
   1f2fc:	andeq	r4, r4, fp, ror #25
   1f300:	andeq	r4, r4, r1, lsr #21
   1f304:	andeq	r4, r4, r0, lsr fp
   1f308:	andeq	r4, r4, r4, ror #22
   1f30c:	andeq	r4, r4, r4, ror #23
   1f310:	andeq	sp, r1, r8, ror #4
   1f314:	andeq	fp, r1, r4, ror #21
   1f318:	andeq	sp, r1, ip, lsl #27
   1f31c:	andeq	ip, r1, r8, asr pc
   1f320:	muleq	r3, r3, pc	; <UNPREDICTABLE>
   1f324:	andeq	r5, r4, r7, asr #13
   1f328:	andeq	r3, r4, r5, lsl r3
   1f32c:	ldrdeq	r1, [r3], -r5
   1f330:	andeq	r4, r4, r9, asr #12
   1f334:	strheq	fp, [r5], -r0
   1f338:	ldrdeq	r0, [r3], -r9
   1f33c:	andeq	r9, r3, fp, lsr r2
   1f340:	andeq	r4, r4, r6, asr sp
   1f344:	ldrdeq	r4, [r4], -r5
   1f348:	ldrdeq	r4, [r4], -pc	; <UNPREDICTABLE>
   1f34c:	strdeq	r4, [r4], -r9
   1f350:	andeq	r4, r4, r5, lsl #28
   1f354:	andeq	r3, r4, sp, ror #21
   1f358:	andeq	r4, r4, r2, asr #28
   1f35c:	muleq	r4, r6, r3
   1f360:	andeq	r4, r4, ip, lsl #29
   1f364:	andeq	r4, r4, r6, asr lr
   1f368:	andeq	r4, r4, r8, asr #29
   1f36c:	andeq	r3, r4, lr, ror r8
   1f370:	andeq	r3, r4, lr, lsr #6
   1f374:	ldrdeq	r4, [r4], -r0
   1f378:	strdeq	r3, [r4], -r2
   1f37c:	andeq	r4, r4, r3, asr pc
   1f380:	andeq	r3, r4, r0, ror #24
   1f384:	muleq	r4, pc, pc	; <UNPREDICTABLE>
   1f388:	strdeq	r4, [r4], -r0
   1f38c:	andeq	r5, r4, r4, lsl #1
   1f390:	andeq	r3, r4, r0, asr #6
   1f394:	andeq	r0, r3, r3, lsr #26
   1f398:	andeq	r5, r4, r5, ror #1
   1f39c:	andeq	r5, r4, r7, ror #2
   1f3a0:	andeq	r5, r4, r8, lsl #3
   1f3a4:	muleq	r4, r9, r1
   1f3a8:	ldrdeq	r5, [r4], -r6
   1f3ac:	andeq	r5, r4, ip, asr #4
   1f3b0:	andeq	r5, r4, r1, lsr r2
   1f3b4:	andeq	r5, r4, r7, lsl #5
   1f3b8:	andeq	r5, r4, r4, lsr #5
   1f3bc:	ldrdeq	r5, [r4], -sp
   1f3c0:	andeq	r3, r4, ip, ror #27
   1f3c4:	andeq	r5, r4, r6, lsl r3
   1f3c8:	ldrdeq	r3, [r4], -r7
   1f3cc:	andeq	r5, r4, ip, ror #6
   1f3d0:	andeq	r5, r4, pc, lsr #7
   1f3d4:	strdeq	r5, [r4], -r1
   1f3d8:	andeq	ip, r1, r0, asr #30
   1f3dc:	andeq	ip, r1, r8, lsr #31
   1f3e0:	andeq	sp, r1, r8, ror r1
   1f3e4:	strdeq	fp, [r1], -ip
   1f3e8:	andeq	r4, r4, r5, lsl #13
   1f3ec:	andeq	r5, r4, r0, asr r4
   1f3f0:	andeq	r4, r4, r9, ror #13
   1f3f4:	andeq	r4, r4, r6, lsl #14
   1f3f8:	andeq	r4, r4, r3, lsr #14
   1f3fc:	andeq	r4, r4, r5, lsr r7
   1f400:	andeq	r4, r4, r9, ror r5
   1f404:	andeq	r3, r4, r2, ror #16
   1f408:	andeq	r3, r4, r1, asr r3
   1f40c:			; <UNDEFINED> instruction: 0x000454b4
   1f410:	andeq	r5, r4, ip, ror #9
   1f414:			; <UNDEFINED> instruction: 0x000455b7
   1f418:	andeq	r3, r4, r9, ror #6
   1f41c:	andeq	r4, r4, ip, lsr #20
   1f420:	andeq	r5, r4, r9, lsl #9
   1f424:	andeq	r5, r4, lr, asr #31
   1f428:	andeq	r5, r4, r8, asr r6
   1f42c:	ldrdeq	r5, [r4], -r1
   1f430:	strdeq	r2, [r3], -r7
   1f434:	andeq	r5, r4, r3, ror r6
   1f438:	andeq	r5, r4, r7, lsl #10
   1f43c:	andeq	r5, r4, r2, asr #10
   1f440:	andeq	r5, r4, ip, lsl #13
   1f444:	andeq	r5, r4, fp, ror #11
   1f448:	strdeq	r5, [r4], -sp
   1f44c:	andeq	r7, r3, sp, ror #7
   1f450:	andeq	r5, r4, r0, lsl r6
   1f454:	andeq	r5, r4, r4, asr #12
   1f458:	andeq	r3, r4, fp, asr #18
   1f45c:	andeq	r3, r4, pc, ror r3
   1f460:	andeq	r5, r4, pc, ror r5
   1f464:	ldr	r1, [pc, #-120]	; 1f3f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1114>
   1f468:	mov	r0, r4
   1f46c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f470:	ldr	r1, [pc, #-128]	; 1f3f8 <__flatcc_fb_gen_c_json_parser@@Base+0x1118>
   1f474:	mov	r0, r4
   1f478:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f47c:	ldr	r1, [pc, #-136]	; 1f3fc <__flatcc_fb_gen_c_json_parser@@Base+0x111c>
   1f480:	mov	r0, r4
   1f484:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f488:	ldr	r1, [pc, #-96]	; 1f430 <__flatcc_fb_gen_c_json_parser@@Base+0x1150>
   1f48c:	mov	r0, r4
   1f490:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f494:	ldr	r1, [pc, #-156]	; 1f400 <__flatcc_fb_gen_c_json_parser@@Base+0x1120>
   1f498:	mov	r0, r4
   1f49c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f4a0:	sub	r3, r7, #1
   1f4a4:	mov	r2, r6
   1f4a8:	str	r6, [sp]
   1f4ac:	add	r1, sp, #24
   1f4b0:	mov	r0, r4
   1f4b4:	bl	1d6a4 <__flatcc_fb_gen_c_verifier@@Base+0x2034>
   1f4b8:	ldr	r1, [pc, #-188]	; 1f404 <__flatcc_fb_gen_c_json_parser@@Base+0x1124>
   1f4bc:	mov	r0, r4
   1f4c0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f4c4:	ldr	r3, [r4, #220]	; 0xdc
   1f4c8:	cmp	r3, #0
   1f4cc:	ldreq	r3, [pc, #-204]	; 1f408 <__flatcc_fb_gen_c_json_parser@@Base+0x1128>
   1f4d0:	movweq	r2, #1219	; 0x4c3
   1f4d4:	bne	1f268 <__flatcc_fb_gen_c_json_parser@@Base+0xf88>
   1f4d8:	b	1e450 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f4dc:	mov	r2, #220	; 0xdc
   1f4e0:	mov	r1, r6
   1f4e4:	add	r0, sp, #52	; 0x34
   1f4e8:	bl	140d4 <memset@plt>
   1f4ec:	add	r1, sp, #52	; 0x34
   1f4f0:	mov	r0, r5
   1f4f4:	bl	1be40 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1f4f8:	ldr	r3, [r4, #208]	; 0xd0
   1f4fc:	mov	r0, r4
   1f500:	ldr	r1, [pc, #-236]	; 1f41c <__flatcc_fb_gen_c_json_parser@@Base+0x113c>
   1f504:	ldr	r2, [r3, #160]	; 0xa0
   1f508:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f50c:	ldr	r3, [r4, #220]	; 0xdc
   1f510:	mov	r0, r4
   1f514:	ldr	r1, [pc, #-252]	; 1f420 <__flatcc_fb_gen_c_json_parser@@Base+0x1140>
   1f518:	add	r3, r3, #2
   1f51c:	str	r3, [r4, #220]	; 0xdc
   1f520:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f524:	ldr	r3, [r4, #220]	; 0xdc
   1f528:	cmp	r3, #0
   1f52c:	bne	1f53c <__flatcc_fb_gen_c_json_parser@@Base+0x125c>
   1f530:	ldr	r3, [pc, #-288]	; 1f418 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   1f534:	movw	r2, #1610	; 0x64a
   1f538:	b	1e450 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f53c:	cmp	r3, #1
   1f540:	streq	r6, [r4, #220]	; 0xdc
   1f544:	beq	1f530 <__flatcc_fb_gen_c_json_parser@@Base+0x1250>
   1f548:	sub	r3, r3, #2
   1f54c:	ldr	r1, [pc, #-304]	; 1f424 <__flatcc_fb_gen_c_json_parser@@Base+0x1144>
   1f550:	mov	r0, r4
   1f554:	str	r3, [r4, #220]	; 0xdc
   1f558:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f55c:	ldr	r3, [r4, #220]	; 0xdc
   1f560:	mov	r0, r4
   1f564:	ldr	r1, [pc, #-352]	; 1f40c <__flatcc_fb_gen_c_json_parser@@Base+0x112c>
   1f568:	add	r3, r3, #1
   1f56c:	str	r3, [r4, #220]	; 0xdc
   1f570:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f574:	ldr	r1, [pc, #-336]	; 1f42c <__flatcc_fb_gen_c_json_parser@@Base+0x114c>
   1f578:	mov	r0, r4
   1f57c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f580:	ldr	r1, [pc, #-344]	; 1f430 <__flatcc_fb_gen_c_json_parser@@Base+0x1150>
   1f584:	mov	r0, r4
   1f588:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f58c:	ldr	r1, [pc, #-388]	; 1f410 <__flatcc_fb_gen_c_json_parser@@Base+0x1130>
   1f590:	mov	r0, r4
   1f594:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f598:	ldr	r1, [pc, #-360]	; 1f438 <__flatcc_fb_gen_c_json_parser@@Base+0x1158>
   1f59c:	mov	r0, r4
   1f5a0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f5a4:	ldr	r2, [r4, #208]	; 0xd0
   1f5a8:	ldrh	r3, [r2, #16]
   1f5ac:	cmp	r3, #2
   1f5b0:	bne	1f680 <__flatcc_fb_gen_c_json_parser@@Base+0x13a0>
   1f5b4:	ldr	r1, [pc, #-384]	; 1f43c <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   1f5b8:	mov	r0, r4
   1f5bc:	ldr	r3, [r2, #8]
   1f5c0:	ldr	r2, [r2, #12]
   1f5c4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f5c8:	add	r2, sp, #52	; 0x34
   1f5cc:	ldr	r1, [pc, #-448]	; 1f414 <__flatcc_fb_gen_c_json_parser@@Base+0x1134>
   1f5d0:	mov	r0, r4
   1f5d4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f5d8:	ldr	r1, [pc, #-412]	; 1f444 <__flatcc_fb_gen_c_json_parser@@Base+0x1164>
   1f5dc:	mov	r0, r4
   1f5e0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f5e4:	ldr	r3, [r4, #220]	; 0xdc
   1f5e8:	mov	r0, r4
   1f5ec:	ldr	r1, [pc, #-428]	; 1f448 <__flatcc_fb_gen_c_json_parser@@Base+0x1168>
   1f5f0:	add	r3, r3, #1
   1f5f4:	str	r3, [r4, #220]	; 0xdc
   1f5f8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f5fc:	ldr	r3, [r4, #220]	; 0xdc
   1f600:	cmp	r3, #0
   1f604:	ldreq	r3, [pc, #-500]	; 1f418 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   1f608:	movweq	r2, #1626	; 0x65a
   1f60c:	beq	1e450 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f610:	sub	r3, r3, #1
   1f614:	mov	r0, r4
   1f618:	ldr	r1, [pc, #-468]	; 1f44c <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1f61c:	str	r3, [r4, #220]	; 0xdc
   1f620:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f624:	ldr	r1, [pc, #-476]	; 1f450 <__flatcc_fb_gen_c_json_parser@@Base+0x1170>
   1f628:	mov	r0, r4
   1f62c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f630:	ldr	r1, [pc, #-484]	; 1f454 <__flatcc_fb_gen_c_json_parser@@Base+0x1174>
   1f634:	mov	r0, r4
   1f638:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f63c:	ldr	r1, [pc, #-492]	; 1f458 <__flatcc_fb_gen_c_json_parser@@Base+0x1178>
   1f640:	mov	r0, r4
   1f644:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f648:	ldr	r3, [r4, #220]	; 0xdc
   1f64c:	cmp	r3, #0
   1f650:	ldreq	r3, [pc, #-576]	; 1f418 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   1f654:	movweq	r2, #1630	; 0x65e
   1f658:	beq	1e450 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f65c:	sub	r3, r3, #1
   1f660:	mov	r0, r4
   1f664:	ldr	r1, [pc, #-544]	; 1f44c <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1f668:	str	r3, [r4, #220]	; 0xdc
   1f66c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f670:	ldr	r1, [pc, #-584]	; 1f430 <__flatcc_fb_gen_c_json_parser@@Base+0x1150>
   1f674:	mov	r0, r4
   1f678:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f67c:	b	1e7a8 <__flatcc_fb_gen_c_json_parser@@Base+0x4c8>
   1f680:	ldr	r1, [pc, #-552]	; 1f460 <__flatcc_fb_gen_c_json_parser@@Base+0x1180>
   1f684:	mov	r0, r4
   1f688:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f68c:	b	1f5c8 <__flatcc_fb_gen_c_json_parser@@Base+0x12e8>
   1f690:	mov	r2, #220	; 0xdc
   1f694:	mov	r1, #0
   1f698:	add	r0, sp, #52	; 0x34
   1f69c:	bl	140d4 <memset@plt>
   1f6a0:	add	r1, sp, #52	; 0x34
   1f6a4:	mov	r0, r5
   1f6a8:	bl	1be40 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1f6ac:	ldr	r3, [r4, #208]	; 0xd0
   1f6b0:	mov	r0, r4
   1f6b4:	ldr	r1, [pc, #-672]	; 1f41c <__flatcc_fb_gen_c_json_parser@@Base+0x113c>
   1f6b8:	ldr	r2, [r3, #160]	; 0xa0
   1f6bc:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f6c0:	ldr	r3, [r4, #220]	; 0xdc
   1f6c4:	mov	r0, r4
   1f6c8:	ldr	r1, [pc, #-688]	; 1f420 <__flatcc_fb_gen_c_json_parser@@Base+0x1140>
   1f6cc:	add	r3, r3, #2
   1f6d0:	str	r3, [r4, #220]	; 0xdc
   1f6d4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f6d8:	ldr	r3, [r4, #220]	; 0xdc
   1f6dc:	cmp	r3, #0
   1f6e0:	bne	1f6f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1410>
   1f6e4:	ldr	r3, [pc, #-656]	; 1f45c <__flatcc_fb_gen_c_json_parser@@Base+0x117c>
   1f6e8:	movw	r2, #1645	; 0x66d
   1f6ec:	b	1e450 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f6f0:	cmp	r3, #1
   1f6f4:	moveq	r3, #0
   1f6f8:	streq	r3, [r4, #220]	; 0xdc
   1f6fc:	beq	1f6e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1404>
   1f700:	sub	r3, r3, #2
   1f704:	ldr	r1, [pc, #-744]	; 1f424 <__flatcc_fb_gen_c_json_parser@@Base+0x1144>
   1f708:	mov	r0, r4
   1f70c:	str	r3, [r4, #220]	; 0xdc
   1f710:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f714:	ldr	r3, [r4, #220]	; 0xdc
   1f718:	mov	r0, r4
   1f71c:	ldr	r1, [pc, #-764]	; 1f428 <__flatcc_fb_gen_c_json_parser@@Base+0x1148>
   1f720:	add	r3, r3, #1
   1f724:	str	r3, [r4, #220]	; 0xdc
   1f728:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f72c:	ldr	r1, [pc, #-776]	; 1f42c <__flatcc_fb_gen_c_json_parser@@Base+0x114c>
   1f730:	mov	r0, r4
   1f734:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f738:	ldr	r1, [pc, #-784]	; 1f430 <__flatcc_fb_gen_c_json_parser@@Base+0x1150>
   1f73c:	mov	r0, r4
   1f740:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f744:	ldr	r1, [pc, #-792]	; 1f434 <__flatcc_fb_gen_c_json_parser@@Base+0x1154>
   1f748:	mov	r0, r4
   1f74c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f750:	ldr	r1, [pc, #-800]	; 1f438 <__flatcc_fb_gen_c_json_parser@@Base+0x1158>
   1f754:	mov	r0, r4
   1f758:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f75c:	ldr	r2, [r4, #208]	; 0xd0
   1f760:	ldrh	r3, [r2, #16]
   1f764:	cmp	r3, #2
   1f768:	bne	1f818 <__flatcc_fb_gen_c_json_parser@@Base+0x1538>
   1f76c:	ldr	r1, [pc, #-824]	; 1f43c <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   1f770:	mov	r0, r4
   1f774:	ldr	r3, [r2, #8]
   1f778:	ldr	r2, [r2, #12]
   1f77c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f780:	add	r2, sp, #52	; 0x34
   1f784:	ldr	r1, [pc, #-844]	; 1f440 <__flatcc_fb_gen_c_json_parser@@Base+0x1160>
   1f788:	mov	r0, r4
   1f78c:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f790:	ldr	r1, [pc, #-852]	; 1f444 <__flatcc_fb_gen_c_json_parser@@Base+0x1164>
   1f794:	mov	r0, r4
   1f798:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f79c:	ldr	r3, [r4, #220]	; 0xdc
   1f7a0:	mov	r0, r4
   1f7a4:	ldr	r1, [pc, #-868]	; 1f448 <__flatcc_fb_gen_c_json_parser@@Base+0x1168>
   1f7a8:	add	r3, r3, #1
   1f7ac:	str	r3, [r4, #220]	; 0xdc
   1f7b0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f7b4:	ldr	r3, [r4, #220]	; 0xdc
   1f7b8:	cmp	r3, #0
   1f7bc:	ldreq	r3, [pc, #-872]	; 1f45c <__flatcc_fb_gen_c_json_parser@@Base+0x117c>
   1f7c0:	movweq	r2, #1661	; 0x67d
   1f7c4:	beq	1e450 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f7c8:	sub	r3, r3, #1
   1f7cc:	mov	r0, r4
   1f7d0:	ldr	r1, [pc, #-908]	; 1f44c <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1f7d4:	str	r3, [r4, #220]	; 0xdc
   1f7d8:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f7dc:	ldr	r1, [pc, #-916]	; 1f450 <__flatcc_fb_gen_c_json_parser@@Base+0x1170>
   1f7e0:	mov	r0, r4
   1f7e4:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f7e8:	ldr	r1, [pc, #-924]	; 1f454 <__flatcc_fb_gen_c_json_parser@@Base+0x1174>
   1f7ec:	mov	r0, r4
   1f7f0:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f7f4:	ldr	r1, [pc, #-932]	; 1f458 <__flatcc_fb_gen_c_json_parser@@Base+0x1178>
   1f7f8:	mov	r0, r4
   1f7fc:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f800:	ldr	r3, [r4, #220]	; 0xdc
   1f804:	cmp	r3, #0
   1f808:	ldreq	r3, [pc, #-948]	; 1f45c <__flatcc_fb_gen_c_json_parser@@Base+0x117c>
   1f80c:	movweq	r2, #1665	; 0x681
   1f810:	bne	1f65c <__flatcc_fb_gen_c_json_parser@@Base+0x137c>
   1f814:	b	1e450 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1f818:	ldr	r1, [pc, #-960]	; 1f460 <__flatcc_fb_gen_c_json_parser@@Base+0x1180>
   1f81c:	mov	r0, r4
   1f820:	bl	1ba28 <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1f824:	b	1f780 <__flatcc_fb_gen_c_json_parser@@Base+0x14a0>
   1f828:	mov	r2, r1
   1f82c:	mov	r1, r0
   1f830:	ldr	r0, [r0, #12]
   1f834:	b	159e4 <__flatcc_fb_scoped_symbol_name@@Base>
   1f838:	push	{r0, r1, r2, lr}
   1f83c:	sub	r0, r0, #1
   1f840:	cmp	r0, #10
   1f844:	bls	1f87c <__flatcc_fb_gen_c_json_parser@@Base+0x159c>
   1f848:	ldr	r3, [pc, #60]	; 1f88c <__flatcc_fb_gen_c_json_parser@@Base+0x15ac>
   1f84c:	ldr	r0, [pc, #60]	; 1f890 <__flatcc_fb_gen_c_json_parser@@Base+0x15b0>
   1f850:	ldr	r2, [pc, #60]	; 1f894 <__flatcc_fb_gen_c_json_parser@@Base+0x15b4>
   1f854:	str	r3, [sp]
   1f858:	mov	r3, #96	; 0x60
   1f85c:	ldr	r1, [pc, #52]	; 1f898 <__flatcc_fb_gen_c_json_parser@@Base+0x15b8>
   1f860:	ldr	r0, [r0]
   1f864:	bl	140bc <fprintf@plt>
   1f868:	ldr	r3, [pc, #44]	; 1f89c <__flatcc_fb_gen_c_json_parser@@Base+0x15bc>
   1f86c:	mov	r2, #96	; 0x60
   1f870:	ldr	r1, [pc, #28]	; 1f894 <__flatcc_fb_gen_c_json_parser@@Base+0x15b4>
   1f874:	ldr	r0, [pc, #36]	; 1f8a0 <__flatcc_fb_gen_c_json_parser@@Base+0x15c0>
   1f878:	bl	1417c <__assert_fail@plt>
   1f87c:	ldr	r3, [pc, #32]	; 1f8a4 <__flatcc_fb_gen_c_json_parser@@Base+0x15c4>
   1f880:	ldr	r0, [r3, r0, lsl #2]
   1f884:	add	sp, sp, #12
   1f888:	pop	{pc}		; (ldr pc, [sp], #4)
   1f88c:	andeq	r0, r3, r4, ror #29
   1f890:	strheq	fp, [r5], -r0
   1f894:	muleq	r3, r0, lr
   1f898:	ldrdeq	r0, [r3], -r9
   1f89c:	andeq	r5, r4, r4, lsl r7
   1f8a0:	andeq	r9, r3, fp, lsr r2
   1f8a4:	andeq	r5, r4, r8, ror #13
   1f8a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f8ac:	sub	sp, sp, #468	; 0x1d4
   1f8b0:	mov	r7, r1
   1f8b4:	mov	r2, #220	; 0xdc
   1f8b8:	mov	r1, #0
   1f8bc:	mov	r6, r0
   1f8c0:	add	r0, sp, #24
   1f8c4:	bl	140d4 <memset@plt>
   1f8c8:	mov	r2, #220	; 0xdc
   1f8cc:	mov	r1, #0
   1f8d0:	add	r0, sp, #244	; 0xf4
   1f8d4:	bl	140d4 <memset@plt>
   1f8d8:	add	r1, sp, #24
   1f8dc:	mov	r0, r7
   1f8e0:	bl	1f828 <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   1f8e4:	ldr	r4, [r7, #40]	; 0x28
   1f8e8:	mov	r0, r4
   1f8ec:	bl	1f838 <__flatcc_fb_gen_c_json_parser@@Base+0x1558>
   1f8f0:	sub	r1, r4, #1
   1f8f4:	cmp	r1, #10
   1f8f8:	bhi	1fa2c <__flatcc_fb_gen_c_json_parser@@Base+0x174c>
   1f8fc:	ldr	r2, [pc, #908]	; 1fc90 <__flatcc_fb_gen_c_json_parser@@Base+0x19b0>
   1f900:	mov	sl, r0
   1f904:	cmp	r4, #5
   1f908:	moveq	r3, r6
   1f90c:	ldrh	r0, [r7, #92]	; 0x5c
   1f910:	add	r1, r2, r1, lsl #2
   1f914:	ldr	fp, [r1, #64]	; 0x40
   1f918:	ldr	r1, [pc, #884]	; 1fc94 <__flatcc_fb_gen_c_json_parser@@Base+0x19b4>
   1f91c:	movne	r3, r1
   1f920:	ands	r0, r0, #32
   1f924:	str	r0, [sp, #20]
   1f928:	beq	1fabc <__flatcc_fb_gen_c_json_parser@@Base+0x17dc>
   1f92c:	ldr	r1, [r7, #112]	; 0x70
   1f930:	ldr	r0, [r7, #116]	; 0x74
   1f934:	subs	r8, r1, #1
   1f938:	sbc	r9, r0, #0
   1f93c:	cmp	r9, #0
   1f940:	cmpeq	r8, #3
   1f944:	bhi	1fa60 <__flatcc_fb_gen_c_json_parser@@Base+0x1780>
   1f948:	add	r1, r2, r8, lsl #3
   1f94c:	add	r8, r2, r8, lsl #2
   1f950:	ldrd	r4, [r1, #128]	; 0x80
   1f954:	ldr	r9, [r8, #160]	; 0xa0
   1f958:	ldr	r8, [r8, #176]	; 0xb0
   1f95c:	ldr	r2, [r7, #20]
   1f960:	cmp	r2, #0
   1f964:	bne	1fa74 <__flatcc_fb_gen_c_json_parser@@Base+0x1794>
   1f968:	add	r2, sp, #24
   1f96c:	ldr	r1, [pc, #804]	; 1fc98 <__flatcc_fb_gen_c_json_parser@@Base+0x19b8>
   1f970:	ldr	r0, [r6, #204]	; 0xcc
   1f974:	str	fp, [sp]
   1f978:	bl	140bc <fprintf@plt>
   1f97c:	ldr	r3, [sp, #20]
   1f980:	cmp	r3, #0
   1f984:	beq	1fb94 <__flatcc_fb_gen_c_json_parser@@Base+0x18b4>
   1f988:	mov	r1, fp
   1f98c:	mov	r0, r8
   1f990:	bl	13fd8 <strcmp@plt>
   1f994:	cmp	r0, #0
   1f998:	ldr	ip, [r6, #204]	; 0xcc
   1f99c:	beq	1fad0 <__flatcc_fb_gen_c_json_parser@@Base+0x17f0>
   1f9a0:	mov	r3, r8
   1f9a4:	mov	r2, r8
   1f9a8:	ldr	r1, [pc, #748]	; 1fc9c <__flatcc_fb_gen_c_json_parser@@Base+0x19bc>
   1f9ac:	mov	r0, ip
   1f9b0:	bl	140bc <fprintf@plt>
   1f9b4:	ldr	r0, [pc, #740]	; 1fca0 <__flatcc_fb_gen_c_json_parser@@Base+0x19c0>
   1f9b8:	ldr	r1, [r6, #204]	; 0xcc
   1f9bc:	bl	14158 <fputs@plt>
   1f9c0:	mov	r0, #10
   1f9c4:	ldr	r1, [r6, #204]	; 0xcc
   1f9c8:	bl	1411c <fputc@plt>
   1f9cc:	orrs	r3, r4, r5
   1f9d0:	beq	1f9ec <__flatcc_fb_gen_c_json_parser@@Base+0x170c>
   1f9d4:	mov	r2, r4
   1f9d8:	mov	r3, r5
   1f9dc:	ldr	r1, [pc, #704]	; 1fca4 <__flatcc_fb_gen_c_json_parser@@Base+0x19c4>
   1f9e0:	ldr	r0, [r6, #204]	; 0xcc
   1f9e4:	str	sl, [sp]
   1f9e8:	bl	140bc <fprintf@plt>
   1f9ec:	ldr	r0, [pc, #692]	; 1fca8 <__flatcc_fb_gen_c_json_parser@@Base+0x19c8>
   1f9f0:	ldr	r1, [r6, #204]	; 0xcc
   1f9f4:	bl	14158 <fputs@plt>
   1f9f8:	ldr	r5, [pc, #684]	; 1fcac <__flatcc_fb_gen_c_json_parser@@Base+0x19cc>
   1f9fc:	ldr	r4, [r7, #20]
   1fa00:	cmp	r4, #0
   1fa04:	bne	1fae4 <__flatcc_fb_gen_c_json_parser@@Base+0x1804>
   1fa08:	ldr	r0, [pc, #664]	; 1fca8 <__flatcc_fb_gen_c_json_parser@@Base+0x19c8>
   1fa0c:	ldr	r1, [r6, #204]	; 0xcc
   1fa10:	bl	14158 <fputs@plt>
   1fa14:	ldr	r1, [r6, #204]	; 0xcc
   1fa18:	ldr	r0, [pc, #656]	; 1fcb0 <__flatcc_fb_gen_c_json_parser@@Base+0x19d0>
   1fa1c:	bl	14158 <fputs@plt>
   1fa20:	mov	r0, #0
   1fa24:	add	sp, sp, #468	; 0x1d4
   1fa28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fa2c:	ldr	r3, [pc, #640]	; 1fcb4 <__flatcc_fb_gen_c_json_parser@@Base+0x19d4>
   1fa30:	ldr	r0, [pc, #640]	; 1fcb8 <__flatcc_fb_gen_c_json_parser@@Base+0x19d8>
   1fa34:	ldr	r2, [pc, #640]	; 1fcbc <__flatcc_fb_gen_c_json_parser@@Base+0x19dc>
   1fa38:	str	r3, [sp]
   1fa3c:	mov	r3, #141	; 0x8d
   1fa40:	ldr	r1, [pc, #632]	; 1fcc0 <__flatcc_fb_gen_c_json_parser@@Base+0x19e0>
   1fa44:	ldr	r0, [r0]
   1fa48:	bl	140bc <fprintf@plt>
   1fa4c:	ldr	r3, [pc, #624]	; 1fcc4 <__flatcc_fb_gen_c_json_parser@@Base+0x19e4>
   1fa50:	mov	r2, #141	; 0x8d
   1fa54:	ldr	r1, [pc, #608]	; 1fcbc <__flatcc_fb_gen_c_json_parser@@Base+0x19dc>
   1fa58:	ldr	r0, [pc, #616]	; 1fcc8 <__flatcc_fb_gen_c_json_parser@@Base+0x19e8>
   1fa5c:	bl	1417c <__assert_fail@plt>
   1fa60:	ldr	r8, [pc, #612]	; 1fccc <__flatcc_fb_gen_c_json_parser@@Base+0x19ec>
   1fa64:	mvn	r4, #0
   1fa68:	mvn	r5, #0
   1fa6c:	ldr	r9, [pc, #604]	; 1fcd0 <__flatcc_fb_gen_c_json_parser@@Base+0x19f0>
   1fa70:	b	1f95c <__flatcc_fb_gen_c_json_parser@@Base+0x167c>
   1fa74:	ldrh	r1, [r2, #56]	; 0x38
   1fa78:	cmp	r1, #5
   1fa7c:	beq	1fa90 <__flatcc_fb_gen_c_json_parser@@Base+0x17b0>
   1fa80:	cmp	r1, #6
   1fa84:	beq	1faac <__flatcc_fb_gen_c_json_parser@@Base+0x17cc>
   1fa88:	cmp	r1, #4
   1fa8c:	bne	1faa4 <__flatcc_fb_gen_c_json_parser@@Base+0x17c4>
   1fa90:	ldrd	r0, [r2, #48]	; 0x30
   1fa94:	bic	r0, r4, r0
   1fa98:	bic	r1, r5, r1
   1fa9c:	mov	r4, r0
   1faa0:	mov	r5, r1
   1faa4:	ldr	r2, [r2]
   1faa8:	b	1f960 <__flatcc_fb_gen_c_json_parser@@Base+0x1680>
   1faac:	ldrb	r0, [r2, #48]	; 0x30
   1fab0:	mov	r1, r5
   1fab4:	bic	r0, r4, r0
   1fab8:	b	1fa9c <__flatcc_fb_gen_c_json_parser@@Base+0x17bc>
   1fabc:	mov	r8, r1
   1fac0:	mov	r9, r1
   1fac4:	mov	r4, #0
   1fac8:	mov	r5, #0
   1facc:	b	1f968 <__flatcc_fb_gen_c_json_parser@@Base+0x1688>
   1fad0:	mov	r2, r8
   1fad4:	ldr	r1, [pc, #504]	; 1fcd4 <__flatcc_fb_gen_c_json_parser@@Base+0x19f4>
   1fad8:	mov	r0, ip
   1fadc:	bl	140bc <fprintf@plt>
   1fae0:	b	1f9b4 <__flatcc_fb_gen_c_json_parser@@Base+0x16d4>
   1fae4:	ldrh	r3, [r4, #56]	; 0x38
   1fae8:	cmp	r3, #5
   1faec:	beq	1fb00 <__flatcc_fb_gen_c_json_parser@@Base+0x1820>
   1faf0:	cmp	r3, #6
   1faf4:	beq	1fb34 <__flatcc_fb_gen_c_json_parser@@Base+0x1854>
   1faf8:	cmp	r3, #4
   1fafc:	bne	1fb64 <__flatcc_fb_gen_c_json_parser@@Base+0x1884>
   1fb00:	ldr	r2, [r4, #4]
   1fb04:	ldr	r3, [r2, #4]
   1fb08:	str	r3, [sp, #12]
   1fb0c:	ldr	r2, [r2]
   1fb10:	str	r9, [sp]
   1fb14:	str	r3, [sp, #4]
   1fb18:	str	r2, [sp, #8]
   1fb1c:	ldrd	r2, [r4, #48]	; 0x30
   1fb20:	mov	r1, r5
   1fb24:	ldr	r0, [r6, #204]	; 0xcc
   1fb28:	bl	140bc <fprintf@plt>
   1fb2c:	ldr	r4, [r4]
   1fb30:	b	1fa00 <__flatcc_fb_gen_c_json_parser@@Base+0x1720>
   1fb34:	ldr	r2, [r4, #4]
   1fb38:	mov	r1, #0
   1fb3c:	ldrb	r0, [r4, #48]	; 0x30
   1fb40:	ldr	r3, [r2, #4]
   1fb44:	str	r3, [sp, #12]
   1fb48:	ldr	r2, [r2]
   1fb4c:	str	r9, [sp]
   1fb50:	str	r3, [sp, #4]
   1fb54:	mov	r3, r1
   1fb58:	str	r2, [sp, #8]
   1fb5c:	mov	r2, r0
   1fb60:	b	1fb20 <__flatcc_fb_gen_c_json_parser@@Base+0x1840>
   1fb64:	ldr	r3, [pc, #364]	; 1fcd8 <__flatcc_fb_gen_c_json_parser@@Base+0x19f8>
   1fb68:	ldr	r0, [pc, #328]	; 1fcb8 <__flatcc_fb_gen_c_json_parser@@Base+0x19d8>
   1fb6c:	ldr	r2, [pc, #360]	; 1fcdc <__flatcc_fb_gen_c_json_parser@@Base+0x19fc>
   1fb70:	str	r3, [sp]
   1fb74:	mov	r3, #134	; 0x86
   1fb78:	ldr	r1, [pc, #320]	; 1fcc0 <__flatcc_fb_gen_c_json_parser@@Base+0x19e0>
   1fb7c:	ldr	r0, [r0]
   1fb80:	bl	140bc <fprintf@plt>
   1fb84:	ldr	r3, [pc, #340]	; 1fce0 <__flatcc_fb_gen_c_json_parser@@Base+0x1a00>
   1fb88:	mov	r2, #134	; 0x86
   1fb8c:	ldr	r1, [pc, #328]	; 1fcdc <__flatcc_fb_gen_c_json_parser@@Base+0x19fc>
   1fb90:	b	1fa58 <__flatcc_fb_gen_c_json_parser@@Base+0x1778>
   1fb94:	ldr	r0, [pc, #328]	; 1fce4 <__flatcc_fb_gen_c_json_parser@@Base+0x1a04>
   1fb98:	ldr	r1, [r6, #204]	; 0xcc
   1fb9c:	bl	14158 <fputs@plt>
   1fba0:	ldr	r5, [pc, #320]	; 1fce8 <__flatcc_fb_gen_c_json_parser@@Base+0x1a08>
   1fba4:	ldr	r8, [pc, #320]	; 1fcec <__flatcc_fb_gen_c_json_parser@@Base+0x1a0c>
   1fba8:	ldr	r4, [r7, #20]
   1fbac:	ldr	r7, [pc, #316]	; 1fcf0 <__flatcc_fb_gen_c_json_parser@@Base+0x1a10>
   1fbb0:	cmp	r4, #0
   1fbb4:	bne	1fbcc <__flatcc_fb_gen_c_json_parser@@Base+0x18ec>
   1fbb8:	mov	r2, sl
   1fbbc:	ldr	r1, [pc, #304]	; 1fcf4 <__flatcc_fb_gen_c_json_parser@@Base+0x1a14>
   1fbc0:	ldr	r0, [r6, #204]	; 0xcc
   1fbc4:	bl	140bc <fprintf@plt>
   1fbc8:	b	1fa14 <__flatcc_fb_gen_c_json_parser@@Base+0x1734>
   1fbcc:	ldrh	r3, [r4, #56]	; 0x38
   1fbd0:	cmp	r3, #5
   1fbd4:	beq	1fc0c <__flatcc_fb_gen_c_json_parser@@Base+0x192c>
   1fbd8:	cmp	r3, #6
   1fbdc:	beq	1fc3c <__flatcc_fb_gen_c_json_parser@@Base+0x195c>
   1fbe0:	cmp	r3, #4
   1fbe4:	bne	1fc64 <__flatcc_fb_gen_c_json_parser@@Base+0x1984>
   1fbe8:	ldr	r2, [r4, #4]
   1fbec:	mov	r1, r8
   1fbf0:	ldr	r3, [r2, #4]
   1fbf4:	str	r3, [sp, #8]
   1fbf8:	ldr	r2, [r2]
   1fbfc:	str	r3, [sp]
   1fc00:	str	r2, [sp, #4]
   1fc04:	ldrd	r2, [r4, #48]	; 0x30
   1fc08:	b	1fc2c <__flatcc_fb_gen_c_json_parser@@Base+0x194c>
   1fc0c:	ldr	r2, [r4, #4]
   1fc10:	mov	r1, r5
   1fc14:	ldr	r3, [r2, #4]
   1fc18:	str	r3, [sp, #8]
   1fc1c:	ldr	r2, [r2]
   1fc20:	str	r3, [sp]
   1fc24:	str	r2, [sp, #4]
   1fc28:	ldrd	r2, [r4, #48]	; 0x30
   1fc2c:	ldr	r0, [r6, #204]	; 0xcc
   1fc30:	bl	140bc <fprintf@plt>
   1fc34:	ldr	r4, [r4]
   1fc38:	b	1fbb0 <__flatcc_fb_gen_c_json_parser@@Base+0x18d0>
   1fc3c:	ldr	r1, [r4, #4]
   1fc40:	ldrb	r2, [r4, #48]	; 0x30
   1fc44:	ldr	r0, [r6, #204]	; 0xcc
   1fc48:	ldr	r3, [r1, #4]
   1fc4c:	str	r3, [sp, #4]
   1fc50:	ldr	r1, [r1]
   1fc54:	str	r1, [sp]
   1fc58:	mov	r1, r7
   1fc5c:	bl	140bc <fprintf@plt>
   1fc60:	b	1fc34 <__flatcc_fb_gen_c_json_parser@@Base+0x1954>
   1fc64:	ldr	r3, [pc, #108]	; 1fcd8 <__flatcc_fb_gen_c_json_parser@@Base+0x19f8>
   1fc68:	ldr	r0, [pc, #72]	; 1fcb8 <__flatcc_fb_gen_c_json_parser@@Base+0x19d8>
   1fc6c:	ldr	r2, [pc, #104]	; 1fcdc <__flatcc_fb_gen_c_json_parser@@Base+0x19fc>
   1fc70:	str	r3, [sp]
   1fc74:	mov	r3, #157	; 0x9d
   1fc78:	ldr	r1, [pc, #64]	; 1fcc0 <__flatcc_fb_gen_c_json_parser@@Base+0x19e0>
   1fc7c:	ldr	r0, [r0]
   1fc80:	bl	140bc <fprintf@plt>
   1fc84:	ldr	r3, [pc, #84]	; 1fce0 <__flatcc_fb_gen_c_json_parser@@Base+0x1a00>
   1fc88:	mov	r2, #157	; 0x9d
   1fc8c:	b	1fb8c <__flatcc_fb_gen_c_json_parser@@Base+0x18ac>
   1fc90:	andeq	r5, r4, r8, ror #13
   1fc94:	strdeq	r2, [r3], -r7
   1fc98:	strdeq	r5, [r4], -r7
   1fc9c:	andeq	r5, r4, sp, lsr r8
   1fca0:	andeq	r5, r4, pc, asr r8
   1fca4:	muleq	r4, r6, r8
   1fca8:	strdeq	r5, [r4], -r7
   1fcac:	andeq	r5, r4, r3, lsr r9
   1fcb0:	andeq	r6, r4, r3, asr #14
   1fcb4:	andeq	r0, r3, r4, ror #29
   1fcb8:	strheq	fp, [r5], -r0
   1fcbc:	muleq	r3, r0, lr
   1fcc0:	ldrdeq	r0, [r3], -r9
   1fcc4:	andeq	r5, r4, r4, asr r7
   1fcc8:	andeq	r9, r3, fp, lsr r2
   1fccc:	andeq	r8, r3, r1, lsr #9
   1fcd0:	strdeq	r5, [r4], -r3
   1fcd4:	andeq	r5, r4, r0, asr r8
   1fcd8:	ldrdeq	r5, [r4], -r6
   1fcdc:	andeq	r5, r4, r0, lsl #19
   1fce0:	andeq	r5, r4, r8, lsr #15
   1fce4:	andeq	r5, r4, r0, lsl sl
   1fce8:	andeq	r5, r4, r3, lsr #20
   1fcec:	andeq	r5, r4, r6, ror #20
   1fcf0:	andeq	r5, r4, r9, lsr #21
   1fcf4:	andeq	r5, r4, sl, ror #21
   1fcf8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1fcfc:	sub	sp, sp, #464	; 0x1d0
   1fd00:	mov	r4, r1
   1fd04:	mov	r5, r0
   1fd08:	mov	r2, #220	; 0xdc
   1fd0c:	mov	r1, #0
   1fd10:	add	r0, sp, #24
   1fd14:	add	r7, sp, #244	; 0xf4
   1fd18:	ldr	r8, [pc, #380]	; 1fe9c <__flatcc_fb_gen_c_json_parser@@Base+0x1bbc>
   1fd1c:	mov	r6, #0
   1fd20:	bl	140d4 <memset@plt>
   1fd24:	mov	r2, #220	; 0xdc
   1fd28:	mov	r1, #0
   1fd2c:	ldr	r9, [pc, #364]	; 1fea0 <__flatcc_fb_gen_c_json_parser@@Base+0x1bc0>
   1fd30:	mov	r0, r7
   1fd34:	bl	140d4 <memset@plt>
   1fd38:	mov	r0, r4
   1fd3c:	add	r1, sp, #24
   1fd40:	ldr	sl, [pc, #348]	; 1fea4 <__flatcc_fb_gen_c_json_parser@@Base+0x1bc4>
   1fd44:	bl	1f828 <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   1fd48:	add	r2, sp, #24
   1fd4c:	ldr	r1, [pc, #340]	; 1fea8 <__flatcc_fb_gen_c_json_parser@@Base+0x1bc8>
   1fd50:	ldr	r0, [r5]
   1fd54:	bl	140bc <fprintf@plt>
   1fd58:	ldr	r4, [r4, #20]
   1fd5c:	cmp	r4, #0
   1fd60:	bne	1fd90 <__flatcc_fb_gen_c_json_parser@@Base+0x1ab0>
   1fd64:	ldr	r0, [pc, #320]	; 1feac <__flatcc_fb_gen_c_json_parser@@Base+0x1bcc>
   1fd68:	ldr	r1, [r5]
   1fd6c:	bl	14158 <fputs@plt>
   1fd70:	ldr	r1, [pc, #312]	; 1feb0 <__flatcc_fb_gen_c_json_parser@@Base+0x1bd0>
   1fd74:	add	r3, sp, #24
   1fd78:	mov	r2, r3
   1fd7c:	ldr	r0, [r5]
   1fd80:	bl	140bc <fprintf@plt>
   1fd84:	mov	r0, r4
   1fd88:	add	sp, sp, #464	; 0x1d0
   1fd8c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fd90:	ldrh	r3, [r4, #72]	; 0x48
   1fd94:	tst	r3, #4
   1fd98:	bne	1fdb0 <__flatcc_fb_gen_c_json_parser@@Base+0x1ad0>
   1fd9c:	ldrh	r3, [r4, #24]
   1fda0:	cmp	r3, #8
   1fda4:	beq	1fdbc <__flatcc_fb_gen_c_json_parser@@Base+0x1adc>
   1fda8:	cmp	r3, #14
   1fdac:	beq	1fdfc <__flatcc_fb_gen_c_json_parser@@Base+0x1b1c>
   1fdb0:	add	r6, r6, #1
   1fdb4:	ldr	r4, [r4]
   1fdb8:	b	1fd5c <__flatcc_fb_gen_c_json_parser@@Base+0x1a7c>
   1fdbc:	ldr	r0, [r4, #16]
   1fdc0:	bl	1f838 <__flatcc_fb_gen_c_json_parser@@Base+0x1558>
   1fdc4:	ldr	r2, [r4, #4]
   1fdc8:	mov	r1, r8
   1fdcc:	ldr	r3, [r2, #4]
   1fdd0:	str	r3, [sp, #16]
   1fdd4:	ldr	r2, [r2]
   1fdd8:	str	r3, [sp, #8]
   1fddc:	str	r2, [sp, #12]
   1fde0:	ldrd	r2, [r4, #80]	; 0x50
   1fde4:	strd	r2, [sp]
   1fde8:	mov	r2, r0
   1fdec:	mov	r3, r6
   1fdf0:	ldr	r0, [r5]
   1fdf4:	bl	140bc <fprintf@plt>
   1fdf8:	b	1fdb0 <__flatcc_fb_gen_c_json_parser@@Base+0x1ad0>
   1fdfc:	mov	r1, r7
   1fe00:	ldr	r0, [r4, #16]
   1fe04:	bl	1f828 <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   1fe08:	ldr	r3, [r4, #16]
   1fe0c:	ldrh	r2, [r3, #8]
   1fe10:	cmp	r2, #1
   1fe14:	beq	1fe64 <__flatcc_fb_gen_c_json_parser@@Base+0x1b84>
   1fe18:	cmp	r2, #3
   1fe1c:	bne	1fdb0 <__flatcc_fb_gen_c_json_parser@@Base+0x1ad0>
   1fe20:	ldr	r0, [r3, #40]	; 0x28
   1fe24:	bl	1f838 <__flatcc_fb_gen_c_json_parser@@Base+0x1558>
   1fe28:	ldr	r2, [r4, #4]
   1fe2c:	mov	r1, sl
   1fe30:	ldr	r3, [r2, #4]
   1fe34:	str	r3, [sp, #16]
   1fe38:	str	r7, [sp, #20]
   1fe3c:	ldr	r2, [r2]
   1fe40:	str	r3, [sp, #8]
   1fe44:	str	r2, [sp, #12]
   1fe48:	ldrd	r2, [r4, #80]	; 0x50
   1fe4c:	strd	r2, [sp]
   1fe50:	mov	r2, r0
   1fe54:	mov	r3, r6
   1fe58:	ldr	r0, [r5]
   1fe5c:	bl	140bc <fprintf@plt>
   1fe60:	b	1fdb0 <__flatcc_fb_gen_c_json_parser@@Base+0x1ad0>
   1fe64:	ldr	r2, [r4, #4]
   1fe68:	mov	r1, r9
   1fe6c:	ldr	r0, [r5]
   1fe70:	ldr	r3, [r2, #4]
   1fe74:	str	r3, [sp, #16]
   1fe78:	str	r7, [sp, #20]
   1fe7c:	ldr	r2, [r2]
   1fe80:	str	r3, [sp, #8]
   1fe84:	str	r2, [sp, #12]
   1fe88:	ldrd	r2, [r4, #80]	; 0x50
   1fe8c:	strd	r2, [sp]
   1fe90:	mov	r2, r6
   1fe94:	bl	140bc <fprintf@plt>
   1fe98:	b	1fdb0 <__flatcc_fb_gen_c_json_parser@@Base+0x1ad0>
   1fe9c:	andeq	r5, r4, r4, ror fp
   1fea0:	andeq	r5, r4, pc, lsl ip
   1fea4:			; <UNDEFINED> instruction: 0x00045bbd
   1fea8:	andeq	r5, r4, r5, lsr #22
   1feac:	andeq	r6, r4, r3, asr #14
   1feb0:	andeq	r5, r4, r4, lsl #25
   1feb4:	push	{r4, r5, r6, r7, r8, lr}
   1feb8:	sub	sp, sp, #448	; 0x1c0
   1febc:	mov	r4, r1
   1fec0:	mov	r5, r0
   1fec4:	mov	r2, #220	; 0xdc
   1fec8:	mov	r1, #0
   1fecc:	add	r0, sp, #8
   1fed0:	bl	140d4 <memset@plt>
   1fed4:	mov	r2, #220	; 0xdc
   1fed8:	mov	r1, #0
   1fedc:	ldr	r6, [pc, #316]	; 20020 <__flatcc_fb_gen_c_json_parser@@Base+0x1d40>
   1fee0:	add	r0, sp, #228	; 0xe4
   1fee4:	bl	140d4 <memset@plt>
   1fee8:	mov	r0, r4
   1feec:	add	r1, sp, #8
   1fef0:	ldr	r7, [pc, #300]	; 20024 <__flatcc_fb_gen_c_json_parser@@Base+0x1d44>
   1fef4:	bl	1f828 <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   1fef8:	add	r2, sp, #8
   1fefc:	ldr	r1, [pc, #292]	; 20028 <__flatcc_fb_gen_c_json_parser@@Base+0x1d48>
   1ff00:	ldr	r0, [r5]
   1ff04:	bl	140bc <fprintf@plt>
   1ff08:	ldr	r8, [pc, #284]	; 2002c <__flatcc_fb_gen_c_json_parser@@Base+0x1d4c>
   1ff0c:	ldr	r4, [r4, #20]
   1ff10:	cmp	r4, #0
   1ff14:	bne	1ff3c <__flatcc_fb_gen_c_json_parser@@Base+0x1c5c>
   1ff18:	ldr	r0, [pc, #272]	; 20030 <__flatcc_fb_gen_c_json_parser@@Base+0x1d50>
   1ff1c:	ldr	r1, [r5]
   1ff20:	bl	14158 <fputs@plt>
   1ff24:	ldr	r1, [r5]
   1ff28:	ldr	r0, [pc, #260]	; 20034 <__flatcc_fb_gen_c_json_parser@@Base+0x1d54>
   1ff2c:	bl	14158 <fputs@plt>
   1ff30:	mov	r0, r4
   1ff34:	add	sp, sp, #448	; 0x1c0
   1ff38:	pop	{r4, r5, r6, r7, r8, pc}
   1ff3c:	ldrh	r3, [r4, #24]
   1ff40:	cmp	r3, #10
   1ff44:	beq	1ffe0 <__flatcc_fb_gen_c_json_parser@@Base+0x1d00>
   1ff48:	cmp	r3, #14
   1ff4c:	beq	1ff60 <__flatcc_fb_gen_c_json_parser@@Base+0x1c80>
   1ff50:	cmp	r3, #0
   1ff54:	bne	1fff4 <__flatcc_fb_gen_c_json_parser@@Base+0x1d14>
   1ff58:	ldr	r4, [r4]
   1ff5c:	b	1ff10 <__flatcc_fb_gen_c_json_parser@@Base+0x1c30>
   1ff60:	add	r1, sp, #228	; 0xe4
   1ff64:	ldr	r0, [r4, #16]
   1ff68:	bl	1f828 <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   1ff6c:	ldr	r3, [r4, #16]
   1ff70:	ldrh	r3, [r3, #8]
   1ff74:	cmp	r3, #0
   1ff78:	beq	1ffb8 <__flatcc_fb_gen_c_json_parser@@Base+0x1cd8>
   1ff7c:	cmp	r3, #1
   1ff80:	beq	1ffd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1cf0>
   1ff84:	ldr	r3, [pc, #172]	; 20038 <__flatcc_fb_gen_c_json_parser@@Base+0x1d58>
   1ff88:	ldr	r0, [pc, #172]	; 2003c <__flatcc_fb_gen_c_json_parser@@Base+0x1d5c>
   1ff8c:	ldr	r2, [pc, #172]	; 20040 <__flatcc_fb_gen_c_json_parser@@Base+0x1d60>
   1ff90:	str	r3, [sp]
   1ff94:	mov	r3, #240	; 0xf0
   1ff98:	ldr	r1, [pc, #164]	; 20044 <__flatcc_fb_gen_c_json_parser@@Base+0x1d64>
   1ff9c:	ldr	r0, [r0]
   1ffa0:	bl	140bc <fprintf@plt>
   1ffa4:	ldr	r3, [pc, #156]	; 20048 <__flatcc_fb_gen_c_json_parser@@Base+0x1d68>
   1ffa8:	mov	r2, #240	; 0xf0
   1ffac:	ldr	r1, [pc, #140]	; 20040 <__flatcc_fb_gen_c_json_parser@@Base+0x1d60>
   1ffb0:	ldr	r0, [pc, #148]	; 2004c <__flatcc_fb_gen_c_json_parser@@Base+0x1d6c>
   1ffb4:	bl	1417c <__assert_fail@plt>
   1ffb8:	ldr	r2, [r4, #48]	; 0x30
   1ffbc:	add	r3, sp, #228	; 0xe4
   1ffc0:	mov	r1, r7
   1ffc4:	ldr	r0, [r5]
   1ffc8:	bl	140bc <fprintf@plt>
   1ffcc:	b	1ff58 <__flatcc_fb_gen_c_json_parser@@Base+0x1c78>
   1ffd0:	add	r3, sp, #228	; 0xe4
   1ffd4:	mov	r1, r8
   1ffd8:	ldr	r2, [r4, #48]	; 0x30
   1ffdc:	b	1ffc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1ce4>
   1ffe0:	mov	r1, r6
   1ffe4:	ldr	r0, [r5]
   1ffe8:	ldr	r2, [r4, #48]	; 0x30
   1ffec:	bl	140bc <fprintf@plt>
   1fff0:	b	1ff58 <__flatcc_fb_gen_c_json_parser@@Base+0x1c78>
   1fff4:	ldr	r3, [pc, #60]	; 20038 <__flatcc_fb_gen_c_json_parser@@Base+0x1d58>
   1fff8:	ldr	r0, [pc, #60]	; 2003c <__flatcc_fb_gen_c_json_parser@@Base+0x1d5c>
   1fffc:	ldr	r2, [pc, #60]	; 20040 <__flatcc_fb_gen_c_json_parser@@Base+0x1d60>
   20000:	str	r3, [sp]
   20004:	mov	r3, #251	; 0xfb
   20008:	ldr	r1, [pc, #52]	; 20044 <__flatcc_fb_gen_c_json_parser@@Base+0x1d64>
   2000c:	ldr	r0, [r0]
   20010:	bl	140bc <fprintf@plt>
   20014:	ldr	r3, [pc, #44]	; 20048 <__flatcc_fb_gen_c_json_parser@@Base+0x1d68>
   20018:	mov	r2, #251	; 0xfb
   2001c:	b	1ffac <__flatcc_fb_gen_c_json_parser@@Base+0x1ccc>
   20020:	andeq	r5, r4, pc, asr #29
   20024:	ldrdeq	r5, [r4], -lr
   20028:	andeq	r5, r4, fp, asr sp
   2002c:	andeq	r5, r4, r2, asr #28
   20030:	andeq	r5, r4, pc, lsl pc
   20034:	andeq	r2, r4, r1, asr #28
   20038:	andeq	r5, r4, r8, lsr #29
   2003c:	strheq	fp, [r5], -r0
   20040:	andeq	r5, r4, r0, lsl #19
   20044:	ldrdeq	r0, [r3], -r9
   20048:			; <UNDEFINED> instruction: 0x000457be
   2004c:	andeq	r9, r3, fp, lsr r2
   20050:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20054:	sub	sp, sp, #484	; 0x1e4
   20058:	mov	r6, r1
   2005c:	mov	r2, #220	; 0xdc
   20060:	mov	r1, #0
   20064:	mov	r4, r0
   20068:	add	r5, sp, #260	; 0x104
   2006c:	add	r0, sp, #40	; 0x28
   20070:	bl	140d4 <memset@plt>
   20074:	mov	r2, #220	; 0xdc
   20078:	mov	r1, #0
   2007c:	mov	r0, r5
   20080:	bl	140d4 <memset@plt>
   20084:	add	r1, sp, #40	; 0x28
   20088:	mov	r0, r6
   2008c:	bl	1f828 <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   20090:	ldr	r7, [r6, #96]	; 0x60
   20094:	mov	r1, #4
   20098:	ldr	r8, [r6, #100]	; 0x64
   2009c:	mov	r0, r7
   200a0:	bl	13fc0 <calloc@plt>
   200a4:	orrs	r3, r7, r8
   200a8:	movne	r3, #1
   200ac:	moveq	r3, #0
   200b0:	cmp	r0, #0
   200b4:	movne	r3, #0
   200b8:	cmp	r3, #0
   200bc:	moveq	r7, r0
   200c0:	ldreq	r3, [r6, #20]
   200c4:	beq	20108 <__flatcc_fb_gen_c_json_parser@@Base+0x1e28>
   200c8:	ldr	r3, [pc, #1508]	; 206b4 <__flatcc_fb_gen_c_json_parser@@Base+0x23d4>
   200cc:	ldr	r0, [pc, #1508]	; 206b8 <__flatcc_fb_gen_c_json_parser@@Base+0x23d8>
   200d0:	ldr	r2, [pc, #1508]	; 206bc <__flatcc_fb_gen_c_json_parser@@Base+0x23dc>
   200d4:	str	r3, [sp]
   200d8:	movw	r3, #361	; 0x169
   200dc:	ldr	r1, [pc, #1500]	; 206c0 <__flatcc_fb_gen_c_json_parser@@Base+0x23e0>
   200e0:	ldr	r0, [r0]
   200e4:	bl	140bc <fprintf@plt>
   200e8:	ldr	r3, [pc, #1492]	; 206c4 <__flatcc_fb_gen_c_json_parser@@Base+0x23e4>
   200ec:	movw	r2, #361	; 0x169
   200f0:	ldr	r1, [pc, #1476]	; 206bc <__flatcc_fb_gen_c_json_parser@@Base+0x23dc>
   200f4:	ldr	r0, [pc, #1484]	; 206c8 <__flatcc_fb_gen_c_json_parser@@Base+0x23e8>
   200f8:	bl	1417c <__assert_fail@plt>
   200fc:	ldr	r2, [r3, #96]	; 0x60
   20100:	str	r3, [r7, r2, lsl #2]
   20104:	ldr	r3, [r3]
   20108:	cmp	r3, #0
   2010c:	bne	200fc <__flatcc_fb_gen_c_json_parser@@Base+0x1e1c>
   20110:	add	r2, sp, #40	; 0x28
   20114:	ldr	r1, [pc, #1456]	; 206cc <__flatcc_fb_gen_c_json_parser@@Base+0x23ec>
   20118:	mov	r8, #0
   2011c:	mov	r9, #0
   20120:	ldr	r0, [r4]
   20124:	ldr	sl, [pc, #1444]	; 206d0 <__flatcc_fb_gen_c_json_parser@@Base+0x23f0>
   20128:	bl	140bc <fprintf@plt>
   2012c:	ldrd	r2, [r6, #96]	; 0x60
   20130:	ldr	r1, [r4]
   20134:	cmp	r9, r3
   20138:	cmpeq	r8, r2
   2013c:	bcc	20178 <__flatcc_fb_gen_c_json_parser@@Base+0x1e98>
   20140:	ldr	r0, [pc, #1420]	; 206d4 <__flatcc_fb_gen_c_json_parser@@Base+0x23f4>
   20144:	bl	14158 <fputs@plt>
   20148:	add	r3, sp, #40	; 0x28
   2014c:	ldr	r1, [pc, #1412]	; 206d8 <__flatcc_fb_gen_c_json_parser@@Base+0x23f8>
   20150:	mov	r2, r3
   20154:	ldr	r0, [r4]
   20158:	bl	140bc <fprintf@plt>
   2015c:	cmp	r7, #0
   20160:	beq	2016c <__flatcc_fb_gen_c_json_parser@@Base+0x1e8c>
   20164:	mov	r0, r7
   20168:	bl	13ff0 <free@plt>
   2016c:	mov	r0, #0
   20170:	add	sp, sp, #484	; 0x1e4
   20174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20178:	lsl	r3, r8, #2
   2017c:	ldr	fp, [r7, r3]
   20180:	cmp	fp, #0
   20184:	beq	20238 <__flatcc_fb_gen_c_json_parser@@Base+0x1f58>
   20188:	ldrh	r3, [fp, #72]	; 0x48
   2018c:	tst	r3, #4
   20190:	bne	20238 <__flatcc_fb_gen_c_json_parser@@Base+0x1f58>
   20194:	ldr	r0, [pc, #1344]	; 206dc <__flatcc_fb_gen_c_json_parser@@Base+0x23fc>
   20198:	bl	14158 <fputs@plt>
   2019c:	ldrh	r3, [fp, #24]
   201a0:	sub	r3, r3, #7
   201a4:	cmp	r3, #8
   201a8:	ldrls	pc, [pc, r3, lsl #2]
   201ac:	b	20238 <__flatcc_fb_gen_c_json_parser@@Base+0x1f58>
   201b0:	ldrdeq	r0, [r2], -r8
   201b4:	ldrdeq	r0, [r2], -r4
   201b8:	andeq	r0, r2, r4, asr #7
   201bc:	muleq	r2, r8, r3
   201c0:	andeq	r0, r2, r8, lsr r2
   201c4:	andeq	r0, r2, r8, lsr r2
   201c8:	andeq	r0, r2, r8, lsr r2
   201cc:	andeq	r0, r2, r8, ror #7
   201d0:	andeq	r0, r2, ip, lsl #11
   201d4:	ldr	r0, [fp, #16]
   201d8:	bl	1f838 <__flatcc_fb_gen_c_json_parser@@Base+0x1558>
   201dc:	ldrh	r3, [fp, #56]	; 0x38
   201e0:	mov	r2, r0
   201e4:	sub	r3, r3, #3
   201e8:	cmp	r3, #3
   201ec:	ldrls	pc, [pc, r3, lsl #2]
   201f0:	b	202ac <__flatcc_fb_gen_c_json_parser@@Base+0x1fcc>
   201f4:	andeq	r0, r2, r4, ror r2
   201f8:	andeq	r0, r2, r4, asr #4
   201fc:	andeq	r0, r2, r4, lsl #4
   20200:	andeq	r0, r2, r4, lsl #4
   20204:	ldr	ip, [fp, #4]
   20208:	ldrd	r0, [fp, #48]	; 0x30
   2020c:	ldr	r3, [ip, #4]
   20210:	str	r3, [sp, #16]
   20214:	strd	r0, [sp, #24]
   20218:	ldr	r1, [ip]
   2021c:	str	r3, [sp, #8]
   20220:	str	r1, [sp, #12]
   20224:	ldrd	r0, [fp, #96]	; 0x60
   20228:	strd	r0, [sp]
   2022c:	ldr	r1, [pc, #1196]	; 206e0 <__flatcc_fb_gen_c_json_parser@@Base+0x2400>
   20230:	ldr	r0, [r4]
   20234:	bl	140bc <fprintf@plt>
   20238:	adds	r8, r8, #1
   2023c:	adc	r9, r9, #0
   20240:	b	2012c <__flatcc_fb_gen_c_json_parser@@Base+0x1e4c>
   20244:	ldr	ip, [fp, #4]
   20248:	ldrd	r0, [fp, #48]	; 0x30
   2024c:	ldr	r3, [ip, #4]
   20250:	str	r3, [sp, #16]
   20254:	strd	r0, [sp, #24]
   20258:	ldr	r1, [ip]
   2025c:	str	r3, [sp, #8]
   20260:	str	r1, [sp, #12]
   20264:	ldrd	r0, [fp, #96]	; 0x60
   20268:	strd	r0, [sp]
   2026c:	ldr	r1, [pc, #1136]	; 206e4 <__flatcc_fb_gen_c_json_parser@@Base+0x2404>
   20270:	b	20230 <__flatcc_fb_gen_c_json_parser@@Base+0x1f50>
   20274:	ldr	r1, [fp, #4]
   20278:	vldr	d7, [fp, #48]	; 0x30
   2027c:	ldr	r3, [r1, #4]
   20280:	str	r3, [sp, #16]
   20284:	vstr	d7, [sp, #24]
   20288:	ldr	r1, [r1]
   2028c:	str	r3, [sp, #8]
   20290:	str	r1, [sp, #12]
   20294:	ldrd	r0, [fp, #96]	; 0x60
   20298:	strd	r0, [sp]
   2029c:	ldr	r1, [pc, #1092]	; 206e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2408>
   202a0:	ldr	r0, [r4]
   202a4:	bl	140bc <fprintf@plt>
   202a8:	b	20238 <__flatcc_fb_gen_c_json_parser@@Base+0x1f58>
   202ac:	ldr	r3, [pc, #1080]	; 206ec <__flatcc_fb_gen_c_json_parser@@Base+0x240c>
   202b0:	ldr	r0, [pc, #1024]	; 206b8 <__flatcc_fb_gen_c_json_parser@@Base+0x23d8>
   202b4:	ldr	r2, [pc, #1024]	; 206bc <__flatcc_fb_gen_c_json_parser@@Base+0x23dc>
   202b8:	str	r3, [sp]
   202bc:	movw	r3, #406	; 0x196
   202c0:	ldr	r1, [pc, #1016]	; 206c0 <__flatcc_fb_gen_c_json_parser@@Base+0x23e0>
   202c4:	ldr	r0, [r0]
   202c8:	bl	140bc <fprintf@plt>
   202cc:	ldr	r3, [pc, #1008]	; 206c4 <__flatcc_fb_gen_c_json_parser@@Base+0x23e4>
   202d0:	movw	r2, #406	; 0x196
   202d4:	b	200f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1e10>
   202d8:	ldrh	r3, [fp, #72]	; 0x48
   202dc:	tst	r3, #3072	; 0xc00
   202e0:	beq	20314 <__flatcc_fb_gen_c_json_parser@@Base+0x2034>
   202e4:	ldr	r1, [fp, #4]
   202e8:	eor	r3, r3, #1024	; 0x400
   202ec:	ubfx	r3, r3, #10, #1
   202f0:	ldr	r2, [r1, #4]
   202f4:	strd	r2, [sp, #8]
   202f8:	ldr	r3, [r1]
   202fc:	ldr	r1, [pc, #1004]	; 206f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2410>
   20300:	strd	r2, [sp]
   20304:	ldrd	r2, [fp, #96]	; 0x60
   20308:	ldr	r0, [r4]
   2030c:	bl	140bc <fprintf@plt>
   20310:	b	20238 <__flatcc_fb_gen_c_json_parser@@Base+0x1f58>
   20314:	ldr	r0, [fp, #104]	; 0x68
   20318:	cmp	r0, #0
   2031c:	beq	2035c <__flatcc_fb_gen_c_json_parser@@Base+0x207c>
   20320:	mov	r1, r5
   20324:	bl	1f828 <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   20328:	ldr	r3, [fp, #104]	; 0x68
   2032c:	ldrh	r3, [r3, #8]
   20330:	cmp	r3, #0
   20334:	ldr	r3, [fp, #4]
   20338:	ldrne	r1, [pc, #948]	; 206f4 <__flatcc_fb_gen_c_json_parser@@Base+0x2414>
   2033c:	ldreq	r1, [pc, #948]	; 206f8 <__flatcc_fb_gen_c_json_parser@@Base+0x2418>
   20340:	ldr	r2, [r3, #4]
   20344:	str	r2, [sp, #8]
   20348:	str	r5, [sp, #12]
   2034c:	ldr	r3, [r3]
   20350:	strd	r2, [sp]
   20354:	ldrd	r2, [fp, #96]	; 0x60
   20358:	b	20308 <__flatcc_fb_gen_c_json_parser@@Base+0x2028>
   2035c:	ldr	r0, [fp, #16]
   20360:	bl	1f838 <__flatcc_fb_gen_c_json_parser@@Base+0x1558>
   20364:	ldr	r2, [fp, #4]
   20368:	ldr	r1, [pc, #908]	; 206fc <__flatcc_fb_gen_c_json_parser@@Base+0x241c>
   2036c:	ldr	r3, [r2, #4]
   20370:	str	r3, [sp, #16]
   20374:	ldr	r2, [r2]
   20378:	str	r3, [sp, #8]
   2037c:	str	r2, [sp, #12]
   20380:	ldrd	r2, [fp, #96]	; 0x60
   20384:	strd	r2, [sp]
   20388:	mov	r2, r0
   2038c:	ldr	r0, [r4]
   20390:	bl	140bc <fprintf@plt>
   20394:	b	20238 <__flatcc_fb_gen_c_json_parser@@Base+0x1f58>
   20398:	ldr	r2, [fp, #4]
   2039c:	ldr	r1, [pc, #860]	; 20700 <__flatcc_fb_gen_c_json_parser@@Base+0x2420>
   203a0:	ldr	r3, [r2, #4]
   203a4:	str	r3, [sp, #8]
   203a8:	ldr	r2, [r2]
   203ac:	str	r3, [sp]
   203b0:	str	r2, [sp, #4]
   203b4:	ldrd	r2, [fp, #96]	; 0x60
   203b8:	ldr	r0, [r4]
   203bc:	bl	140bc <fprintf@plt>
   203c0:	b	20238 <__flatcc_fb_gen_c_json_parser@@Base+0x1f58>
   203c4:	ldr	r2, [fp, #4]
   203c8:	ldr	r1, [pc, #820]	; 20704 <__flatcc_fb_gen_c_json_parser@@Base+0x2424>
   203cc:	ldr	r3, [r2, #4]
   203d0:	str	r3, [sp, #8]
   203d4:	ldr	r2, [r2]
   203d8:	str	r3, [sp]
   203dc:	str	r2, [sp, #4]
   203e0:	ldrd	r2, [fp, #96]	; 0x60
   203e4:	b	203b8 <__flatcc_fb_gen_c_json_parser@@Base+0x20d8>
   203e8:	mov	r1, r5
   203ec:	ldr	r0, [fp, #16]
   203f0:	bl	1f828 <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   203f4:	ldr	r3, [fp, #16]
   203f8:	ldrh	r2, [r3, #8]
   203fc:	cmp	r2, #4
   20400:	ldrls	pc, [pc, r2, lsl #2]
   20404:	b	20560 <__flatcc_fb_gen_c_json_parser@@Base+0x2280>
   20408:	andeq	r0, r2, r4, lsl #10
   2040c:	ldrdeq	r0, [r2], -ip
   20410:	andeq	r0, r2, r0, ror #10
   20414:	andeq	r0, r2, ip, lsl r4
   20418:	andeq	r0, r2, ip, lsr #10
   2041c:	ldr	r0, [r3, #40]	; 0x28
   20420:	bl	1f838 <__flatcc_fb_gen_c_json_parser@@Base+0x1558>
   20424:	ldrh	r3, [fp, #56]	; 0x38
   20428:	mov	r2, r0
   2042c:	cmp	r3, #4
   20430:	beq	2047c <__flatcc_fb_gen_c_json_parser@@Base+0x219c>
   20434:	bcc	204b0 <__flatcc_fb_gen_c_json_parser@@Base+0x21d0>
   20438:	cmp	r3, #6
   2043c:	bhi	204b0 <__flatcc_fb_gen_c_json_parser@@Base+0x21d0>
   20440:	ldr	ip, [fp, #4]
   20444:	ldr	r3, [ip, #4]
   20448:	str	r5, [sp, #32]
   2044c:	ldrd	r0, [fp, #48]	; 0x30
   20450:	str	r3, [sp, #16]
   20454:	strd	r0, [sp, #24]
   20458:	ldr	r1, [ip]
   2045c:	str	r3, [sp, #8]
   20460:	str	r1, [sp, #12]
   20464:	ldrd	r0, [fp, #96]	; 0x60
   20468:	strd	r0, [sp]
   2046c:	ldr	r1, [pc, #660]	; 20708 <__flatcc_fb_gen_c_json_parser@@Base+0x2428>
   20470:	ldr	r0, [r4]
   20474:	bl	140bc <fprintf@plt>
   20478:	b	20238 <__flatcc_fb_gen_c_json_parser@@Base+0x1f58>
   2047c:	ldr	ip, [fp, #4]
   20480:	ldr	r3, [ip, #4]
   20484:	str	r5, [sp, #32]
   20488:	ldrd	r0, [fp, #48]	; 0x30
   2048c:	str	r3, [sp, #16]
   20490:	strd	r0, [sp, #24]
   20494:	ldr	r1, [ip]
   20498:	str	r3, [sp, #8]
   2049c:	str	r1, [sp, #12]
   204a0:	ldrd	r0, [fp, #96]	; 0x60
   204a4:	strd	r0, [sp]
   204a8:	ldr	r1, [pc, #604]	; 2070c <__flatcc_fb_gen_c_json_parser@@Base+0x242c>
   204ac:	b	20470 <__flatcc_fb_gen_c_json_parser@@Base+0x2190>
   204b0:	ldr	r3, [pc, #600]	; 20710 <__flatcc_fb_gen_c_json_parser@@Base+0x2430>
   204b4:	ldr	r0, [pc, #508]	; 206b8 <__flatcc_fb_gen_c_json_parser@@Base+0x23d8>
   204b8:	ldr	r2, [pc, #508]	; 206bc <__flatcc_fb_gen_c_json_parser@@Base+0x23dc>
   204bc:	str	r3, [sp]
   204c0:	movw	r3, #483	; 0x1e3
   204c4:	ldr	r1, [pc, #500]	; 206c0 <__flatcc_fb_gen_c_json_parser@@Base+0x23e0>
   204c8:	ldr	r0, [r0]
   204cc:	bl	140bc <fprintf@plt>
   204d0:	ldr	r3, [pc, #492]	; 206c4 <__flatcc_fb_gen_c_json_parser@@Base+0x23e4>
   204d4:	movw	r2, #483	; 0x1e3
   204d8:	b	200f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1e10>
   204dc:	ldr	r2, [fp, #4]
   204e0:	ldr	r1, [pc, #556]	; 20714 <__flatcc_fb_gen_c_json_parser@@Base+0x2434>
   204e4:	ldr	r3, [r2, #4]
   204e8:	str	r3, [sp, #8]
   204ec:	str	r5, [sp, #12]
   204f0:	ldr	r2, [r2]
   204f4:	str	r3, [sp]
   204f8:	str	r2, [sp, #4]
   204fc:	ldrd	r2, [fp, #96]	; 0x60
   20500:	b	20308 <__flatcc_fb_gen_c_json_parser@@Base+0x2028>
   20504:	ldr	r2, [fp, #4]
   20508:	ldr	r1, [pc, #520]	; 20718 <__flatcc_fb_gen_c_json_parser@@Base+0x2438>
   2050c:	ldr	r3, [r2, #4]
   20510:	str	r3, [sp, #8]
   20514:	str	r5, [sp, #12]
   20518:	ldr	r2, [r2]
   2051c:	str	r3, [sp]
   20520:	str	r2, [sp, #4]
   20524:	ldrd	r2, [fp, #96]	; 0x60
   20528:	b	20308 <__flatcc_fb_gen_c_json_parser@@Base+0x2028>
   2052c:	ldr	r2, [fp, #4]
   20530:	ldr	r1, [pc, #484]	; 2071c <__flatcc_fb_gen_c_json_parser@@Base+0x243c>
   20534:	ldr	r3, [r2, #4]
   20538:	str	r3, [sp, #8]
   2053c:	str	r5, [sp, #12]
   20540:	str	r5, [sp, #16]
   20544:	ldr	r2, [r2]
   20548:	str	r3, [sp]
   2054c:	str	r2, [sp, #4]
   20550:	ldrd	r2, [fp, #96]	; 0x60
   20554:	ldr	r0, [r4]
   20558:	bl	140bc <fprintf@plt>
   2055c:	b	20238 <__flatcc_fb_gen_c_json_parser@@Base+0x1f58>
   20560:	ldr	r3, [pc, #440]	; 20720 <__flatcc_fb_gen_c_json_parser@@Base+0x2440>
   20564:	ldr	r0, [pc, #332]	; 206b8 <__flatcc_fb_gen_c_json_parser@@Base+0x23d8>
   20568:	ldr	r2, [pc, #332]	; 206bc <__flatcc_fb_gen_c_json_parser@@Base+0x23dc>
   2056c:	str	r3, [sp]
   20570:	mov	r3, #504	; 0x1f8
   20574:	ldr	r1, [pc, #324]	; 206c0 <__flatcc_fb_gen_c_json_parser@@Base+0x23e0>
   20578:	ldr	r0, [r0]
   2057c:	bl	140bc <fprintf@plt>
   20580:	ldr	r3, [pc, #316]	; 206c4 <__flatcc_fb_gen_c_json_parser@@Base+0x23e4>
   20584:	mov	r2, #504	; 0x1f8
   20588:	b	200f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1e10>
   2058c:	mov	r1, r5
   20590:	ldr	r0, [fp, #16]
   20594:	bl	1f828 <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   20598:	ldr	r3, [fp, #16]
   2059c:	ldrh	r3, [r3, #8]
   205a0:	cmp	r3, #4
   205a4:	ldrls	pc, [pc, r3, lsl #2]
   205a8:	b	20688 <__flatcc_fb_gen_c_json_parser@@Base+0x23a8>
   205ac:	andeq	r0, r2, r0, asr #11
   205b0:	andeq	r0, r2, r8, lsr #12
   205b4:	andeq	r0, r2, r8, lsl #13
   205b8:	andeq	r0, r2, r8, ror #11
   205bc:	andeq	r0, r2, ip, asr r6
   205c0:	ldr	r2, [fp, #4]
   205c4:	ldr	r1, [pc, #344]	; 20724 <__flatcc_fb_gen_c_json_parser@@Base+0x2444>
   205c8:	ldr	r3, [r2, #4]
   205cc:	str	r3, [sp, #8]
   205d0:	str	r5, [sp, #12]
   205d4:	ldr	r2, [r2]
   205d8:	str	r3, [sp]
   205dc:	str	r2, [sp, #4]
   205e0:	ldrd	r2, [fp, #96]	; 0x60
   205e4:	b	20308 <__flatcc_fb_gen_c_json_parser@@Base+0x2028>
   205e8:	ldr	r0, [fp, #16]
   205ec:	bl	1f838 <__flatcc_fb_gen_c_json_parser@@Base+0x1558>
   205f0:	ldr	ip, [fp, #4]
   205f4:	ldrd	r2, [r6, #112]	; 0x70
   205f8:	ldr	r1, [ip, #4]
   205fc:	str	r5, [sp, #32]
   20600:	str	r1, [sp, #16]
   20604:	strd	r2, [sp, #24]
   20608:	ldr	r3, [ip]
   2060c:	str	r1, [sp, #8]
   20610:	ldr	r1, [pc, #272]	; 20728 <__flatcc_fb_gen_c_json_parser@@Base+0x2448>
   20614:	str	r3, [sp, #12]
   20618:	ldrd	r2, [fp, #96]	; 0x60
   2061c:	strd	r2, [sp]
   20620:	mov	r2, r0
   20624:	b	20470 <__flatcc_fb_gen_c_json_parser@@Base+0x2190>
   20628:	ldr	r0, [fp, #4]
   2062c:	ldr	r1, [r0, #4]
   20630:	str	r5, [sp, #24]
   20634:	ldrd	r2, [fp, #88]	; 0x58
   20638:	str	r1, [sp, #8]
   2063c:	strd	r2, [sp, #16]
   20640:	ldr	r3, [r0]
   20644:	ldr	r0, [r4]
   20648:	stm	sp, {r1, r3}
   2064c:	mov	r1, sl
   20650:	ldrd	r2, [fp, #96]	; 0x60
   20654:	bl	140bc <fprintf@plt>
   20658:	b	20238 <__flatcc_fb_gen_c_json_parser@@Base+0x1f58>
   2065c:	ldr	r2, [fp, #4]
   20660:	ldr	r1, [pc, #196]	; 2072c <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   20664:	ldr	r3, [r2, #4]
   20668:	str	r3, [sp, #8]
   2066c:	str	r5, [sp, #12]
   20670:	str	r5, [sp, #16]
   20674:	ldr	r2, [r2]
   20678:	str	r3, [sp]
   2067c:	str	r2, [sp, #4]
   20680:	ldrd	r2, [fp, #96]	; 0x60
   20684:	b	20554 <__flatcc_fb_gen_c_json_parser@@Base+0x2274>
   20688:	ldr	r3, [pc, #160]	; 20730 <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   2068c:	ldr	r0, [pc, #36]	; 206b8 <__flatcc_fb_gen_c_json_parser@@Base+0x23d8>
   20690:	ldr	r2, [pc, #36]	; 206bc <__flatcc_fb_gen_c_json_parser@@Base+0x23dc>
   20694:	str	r3, [sp]
   20698:	movw	r3, #543	; 0x21f
   2069c:	ldr	r1, [pc, #28]	; 206c0 <__flatcc_fb_gen_c_json_parser@@Base+0x23e0>
   206a0:	ldr	r0, [r0]
   206a4:	bl	140bc <fprintf@plt>
   206a8:	ldr	r3, [pc, #20]	; 206c4 <__flatcc_fb_gen_c_json_parser@@Base+0x23e4>
   206ac:	movw	r2, #543	; 0x21f
   206b0:	b	200f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1e10>
   206b4:	andeq	r5, r4, ip, lsr pc
   206b8:	strheq	fp, [r5], -r0
   206bc:	andeq	r5, r4, r0, lsl #19
   206c0:	ldrdeq	r0, [r3], -r9
   206c4:	ldrdeq	r5, [r4], -ip
   206c8:	andeq	r9, r3, fp, lsr r2
   206cc:	andeq	r5, r4, r6, ror #30
   206d0:	andeq	r6, r4, r9, asr r5
   206d4:	andeq	r6, r4, r2, asr #14
   206d8:	andeq	r6, r4, r2, ror r6
   206dc:	ldrdeq	r5, [r4], -r0
   206e0:	ldrdeq	r5, [r4], -r6
   206e4:	andeq	r6, r4, r6, lsl r0
   206e8:	andeq	r6, r4, r6, asr r0
   206ec:	andeq	r3, r4, r3, lsr lr
   206f0:	muleq	r4, r5, r0
   206f4:	andeq	r6, r4, r2, asr #2
   206f8:	andeq	r6, r4, r4, ror #1
   206fc:	andeq	r6, r4, r2, lsr #3
   20700:	andeq	r6, r4, r3, ror #3
   20704:	andeq	r6, r4, r1, lsr #4
   20708:	andeq	r6, r4, r6, ror #4
   2070c:			; <UNDEFINED> instruction: 0x000462bf
   20710:	andeq	r6, r4, r8, lsl r3
   20714:	andeq	r6, r4, r0, asr r3
   20718:	andeq	r6, r4, r4, lsr #7
   2071c:	strdeq	r6, [r4], -r6	; <UNPREDICTABLE>
   20720:	andeq	r6, r4, r2, ror #8
   20724:	andeq	r6, r4, r0, lsr #9
   20728:	strdeq	r6, [r4], -r9
   2072c:			; <UNDEFINED> instruction: 0x000465ba
   20730:	andeq	r6, r4, sp, lsr #12

00020734 <__flatcc_fb_gen_c_json_printer@@Base>:
   20734:	ldr	r3, [r0, #208]	; 0xd0
   20738:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2073c:	mov	r4, r0
   20740:	sub	sp, sp, #232	; 0xe8
   20744:	ldr	r1, [pc, #900]	; 20ad0 <__flatcc_fb_gen_c_json_printer@@Base+0x39c>
   20748:	ldr	r3, [r3, #164]	; 0xa4
   2074c:	ldr	r0, [r0, #204]	; 0xcc
   20750:	mov	r2, r3
   20754:	bl	140bc <fprintf@plt>
   20758:	ldr	r0, [pc, #884]	; 20ad4 <__flatcc_fb_gen_c_json_printer@@Base+0x3a0>
   2075c:	ldr	r1, [r4, #204]	; 0xcc
   20760:	bl	14158 <fputs@plt>
   20764:	ldr	r0, [pc, #876]	; 20ad8 <__flatcc_fb_gen_c_json_printer@@Base+0x3a4>
   20768:	ldr	r1, [r4, #204]	; 0xcc
   2076c:	bl	14158 <fputs@plt>
   20770:	ldr	r2, [pc, #868]	; 20adc <__flatcc_fb_gen_c_json_printer@@Base+0x3a8>
   20774:	mov	r0, r4
   20778:	ldr	r1, [pc, #864]	; 20ae0 <__flatcc_fb_gen_c_json_printer@@Base+0x3ac>
   2077c:	bl	15838 <__flatcc_fb_gen_c_includes@@Base>
   20780:	ldr	r3, [r4, #212]	; 0xd4
   20784:	ldr	r3, [r3, #140]	; 0x8c
   20788:	cmp	r3, #0
   2078c:	beq	2079c <__flatcc_fb_gen_c_json_printer@@Base+0x68>
   20790:	ldr	r0, [pc, #844]	; 20ae4 <__flatcc_fb_gen_c_json_printer@@Base+0x3b0>
   20794:	ldr	r1, [r4, #204]	; 0xcc
   20798:	bl	14158 <fputs@plt>
   2079c:	mov	r0, #10
   207a0:	ldr	r1, [r4, #204]	; 0xcc
   207a4:	bl	1411c <fputc@plt>
   207a8:	ldr	r3, [r4, #208]	; 0xd0
   207ac:	mov	r2, #220	; 0xdc
   207b0:	mov	r1, #0
   207b4:	add	r0, sp, #12
   207b8:	ldr	r5, [r3, #52]	; 0x34
   207bc:	bl	140d4 <memset@plt>
   207c0:	cmp	r5, #0
   207c4:	beq	207f4 <__flatcc_fb_gen_c_json_printer@@Base+0xc0>
   207c8:	ldrh	r3, [r5, #8]
   207cc:	cmp	r3, #1
   207d0:	bhi	207f4 <__flatcc_fb_gen_c_json_printer@@Base+0xc0>
   207d4:	ldr	r0, [pc, #780]	; 20ae8 <__flatcc_fb_gen_c_json_printer@@Base+0x3b4>
   207d8:	ldr	r1, [r4, #204]	; 0xcc
   207dc:	bl	14158 <fputs@plt>
   207e0:	ldr	r1, [pc, #772]	; 20aec <__flatcc_fb_gen_c_json_printer@@Base+0x3b8>
   207e4:	ldr	r3, [r4, #208]	; 0xd0
   207e8:	ldr	r0, [r4, #204]	; 0xcc
   207ec:	ldr	r2, [r3, #160]	; 0xa0
   207f0:	bl	140bc <fprintf@plt>
   207f4:	ldr	r3, [r4, #208]	; 0xd0
   207f8:	ldr	r6, [pc, #752]	; 20af0 <__flatcc_fb_gen_c_json_printer@@Base+0x3bc>
   207fc:	ldr	r7, [pc, #752]	; 20af4 <__flatcc_fb_gen_c_json_printer@@Base+0x3c0>
   20800:	ldr	r8, [pc, #752]	; 20af8 <__flatcc_fb_gen_c_json_printer@@Base+0x3c4>
   20804:	ldr	r5, [r3, #40]	; 0x28
   20808:	cmp	r5, #0
   2080c:	bne	20938 <__flatcc_fb_gen_c_json_printer@@Base+0x204>
   20810:	mov	r0, #10
   20814:	ldr	r1, [r4, #204]	; 0xcc
   20818:	bl	1411c <fputc@plt>
   2081c:	ldr	r3, [r4, #208]	; 0xd0
   20820:	ldr	r5, [r3, #40]	; 0x28
   20824:	cmp	r5, #0
   20828:	bne	209b4 <__flatcc_fb_gen_c_json_printer@@Base+0x280>
   2082c:	ldr	r3, [r4, #208]	; 0xd0
   20830:	ldr	r7, [pc, #708]	; 20afc <__flatcc_fb_gen_c_json_printer@@Base+0x3c8>
   20834:	ldr	r8, [pc, #708]	; 20b00 <__flatcc_fb_gen_c_json_printer@@Base+0x3cc>
   20838:	ldr	r9, [pc, #708]	; 20b04 <__flatcc_fb_gen_c_json_printer@@Base+0x3d0>
   2083c:	ldr	r5, [r3, #40]	; 0x28
   20840:	cmp	r5, #0
   20844:	bne	209d4 <__flatcc_fb_gen_c_json_printer@@Base+0x2a0>
   20848:	ldr	r3, [r4, #208]	; 0xd0
   2084c:	add	r6, r4, #204	; 0xcc
   20850:	ldr	r5, [r3, #40]	; 0x28
   20854:	cmp	r5, #0
   20858:	bne	20a80 <__flatcc_fb_gen_c_json_printer@@Base+0x34c>
   2085c:	ldr	r3, [r4, #208]	; 0xd0
   20860:	add	r6, r4, #204	; 0xcc
   20864:	ldr	r5, [r3, #40]	; 0x28
   20868:	cmp	r5, #0
   2086c:	bne	20aa0 <__flatcc_fb_gen_c_json_printer@@Base+0x36c>
   20870:	ldr	r3, [r4, #208]	; 0xd0
   20874:	ldr	r6, [r3, #52]	; 0x34
   20878:	cmp	r6, #0
   2087c:	beq	208fc <__flatcc_fb_gen_c_json_printer@@Base+0x1c8>
   20880:	ldrh	r3, [r6, #8]
   20884:	cmp	r3, #1
   20888:	bhi	208fc <__flatcc_fb_gen_c_json_printer@@Base+0x1c8>
   2088c:	mov	r2, #220	; 0xdc
   20890:	mov	r1, r5
   20894:	add	r0, sp, #12
   20898:	bl	140d4 <memset@plt>
   2089c:	add	r1, sp, #12
   208a0:	mov	r0, r6
   208a4:	bl	1f828 <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   208a8:	ldr	r1, [pc, #600]	; 20b08 <__flatcc_fb_gen_c_json_printer@@Base+0x3d4>
   208ac:	ldr	r3, [r4, #208]	; 0xd0
   208b0:	ldr	r0, [r4, #204]	; 0xcc
   208b4:	ldr	r2, [r3, #160]	; 0xa0
   208b8:	bl	140bc <fprintf@plt>
   208bc:	add	r2, sp, #12
   208c0:	ldr	r1, [pc, #580]	; 20b0c <__flatcc_fb_gen_c_json_printer@@Base+0x3d8>
   208c4:	ldr	r0, [r4, #204]	; 0xcc
   208c8:	bl	140bc <fprintf@plt>
   208cc:	ldr	r2, [r4, #208]	; 0xd0
   208d0:	ldrh	r3, [r2, #16]
   208d4:	cmp	r3, #2
   208d8:	bne	20ac0 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   208dc:	ldr	r1, [pc, #556]	; 20b10 <__flatcc_fb_gen_c_json_printer@@Base+0x3dc>
   208e0:	ldr	r3, [r2, #8]
   208e4:	ldr	r2, [r2, #12]
   208e8:	ldr	r0, [r4, #204]	; 0xcc
   208ec:	bl	140bc <fprintf@plt>
   208f0:	ldr	r0, [pc, #540]	; 20b14 <__flatcc_fb_gen_c_json_printer@@Base+0x3e0>
   208f4:	ldr	r1, [r4, #204]	; 0xcc
   208f8:	bl	14158 <fputs@plt>
   208fc:	ldr	r3, [r4, #212]	; 0xd4
   20900:	ldr	r3, [r3, #140]	; 0x8c
   20904:	cmp	r3, #0
   20908:	beq	20918 <__flatcc_fb_gen_c_json_printer@@Base+0x1e4>
   2090c:	ldr	r0, [pc, #516]	; 20b18 <__flatcc_fb_gen_c_json_printer@@Base+0x3e4>
   20910:	ldr	r1, [r4, #204]	; 0xcc
   20914:	bl	14158 <fputs@plt>
   20918:	ldr	r1, [pc, #508]	; 20b1c <__flatcc_fb_gen_c_json_printer@@Base+0x3e8>
   2091c:	ldr	r3, [r4, #208]	; 0xd0
   20920:	ldr	r0, [r4, #204]	; 0xcc
   20924:	ldr	r2, [r3, #164]	; 0xa4
   20928:	bl	140bc <fprintf@plt>
   2092c:	mov	r0, #0
   20930:	add	sp, sp, #232	; 0xe8
   20934:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20938:	ldrh	r3, [r5, #8]
   2093c:	cmp	r3, #1
   20940:	beq	2099c <__flatcc_fb_gen_c_json_printer@@Base+0x268>
   20944:	cmp	r3, #0
   20948:	beq	2097c <__flatcc_fb_gen_c_json_printer@@Base+0x248>
   2094c:	cmp	r3, #4
   20950:	bne	20974 <__flatcc_fb_gen_c_json_printer@@Base+0x240>
   20954:	add	r1, sp, #12
   20958:	mov	r0, r5
   2095c:	bl	1f828 <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   20960:	add	r3, sp, #12
   20964:	mov	r1, r8
   20968:	ldr	r0, [r4, #204]	; 0xcc
   2096c:	mov	r2, r3
   20970:	bl	140bc <fprintf@plt>
   20974:	ldr	r5, [r5]
   20978:	b	20808 <__flatcc_fb_gen_c_json_printer@@Base+0xd4>
   2097c:	add	r1, sp, #12
   20980:	mov	r0, r5
   20984:	bl	1f828 <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   20988:	add	r2, sp, #12
   2098c:	mov	r1, r7
   20990:	ldr	r0, [r4, #204]	; 0xcc
   20994:	bl	140bc <fprintf@plt>
   20998:	b	20974 <__flatcc_fb_gen_c_json_printer@@Base+0x240>
   2099c:	add	r1, sp, #12
   209a0:	mov	r0, r5
   209a4:	bl	1f828 <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   209a8:	add	r2, sp, #12
   209ac:	mov	r1, r6
   209b0:	b	20990 <__flatcc_fb_gen_c_json_printer@@Base+0x25c>
   209b4:	ldrh	r3, [r5, #8]
   209b8:	cmp	r3, #3
   209bc:	bne	209cc <__flatcc_fb_gen_c_json_printer@@Base+0x298>
   209c0:	mov	r1, r5
   209c4:	mov	r0, r4
   209c8:	bl	1f8a8 <__flatcc_fb_gen_c_json_parser@@Base+0x15c8>
   209cc:	ldr	r5, [r5]
   209d0:	b	20824 <__flatcc_fb_gen_c_json_printer@@Base+0xf0>
   209d4:	ldrh	r3, [r5, #8]
   209d8:	cmp	r3, #4
   209dc:	bne	20a44 <__flatcc_fb_gen_c_json_printer@@Base+0x310>
   209e0:	mov	r2, #220	; 0xdc
   209e4:	mov	r1, #0
   209e8:	add	r0, sp, #12
   209ec:	add	sl, r4, #204	; 0xcc
   209f0:	bl	140d4 <memset@plt>
   209f4:	add	r1, sp, #12
   209f8:	mov	r0, r5
   209fc:	bl	1f828 <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   20a00:	add	r2, sp, #12
   20a04:	mov	r1, r7
   20a08:	ldr	r0, [r4, #204]	; 0xcc
   20a0c:	bl	140bc <fprintf@plt>
   20a10:	ldr	r6, [r5, #20]
   20a14:	cmp	r6, #0
   20a18:	ldr	r0, [r4, #204]	; 0xcc
   20a1c:	bne	20a4c <__flatcc_fb_gen_c_json_printer@@Base+0x318>
   20a20:	mov	r1, r0
   20a24:	mov	r0, r9
   20a28:	bl	14158 <fputs@plt>
   20a2c:	ldr	r0, [pc, #236]	; 20b20 <__flatcc_fb_gen_c_json_printer@@Base+0x3ec>
   20a30:	ldr	r1, [r4, #204]	; 0xcc
   20a34:	bl	14158 <fputs@plt>
   20a38:	mov	r1, r5
   20a3c:	mov	r0, sl
   20a40:	bl	1feb4 <__flatcc_fb_gen_c_json_parser@@Base+0x1bd4>
   20a44:	ldr	r5, [r5]
   20a48:	b	20840 <__flatcc_fb_gen_c_json_printer@@Base+0x10c>
   20a4c:	ldrh	r3, [r6, #24]
   20a50:	cmp	r3, #0
   20a54:	beq	20a78 <__flatcc_fb_gen_c_json_printer@@Base+0x344>
   20a58:	ldr	r2, [r6, #4]
   20a5c:	mov	r1, r8
   20a60:	ldr	r3, [r2, #4]
   20a64:	str	r3, [sp, #4]
   20a68:	ldr	r2, [r2]
   20a6c:	str	r2, [sp]
   20a70:	ldr	r2, [r6, #48]	; 0x30
   20a74:	bl	140bc <fprintf@plt>
   20a78:	ldr	r6, [r6]
   20a7c:	b	20a14 <__flatcc_fb_gen_c_json_printer@@Base+0x2e0>
   20a80:	ldrh	r3, [r5, #8]
   20a84:	cmp	r3, #1
   20a88:	bne	20a98 <__flatcc_fb_gen_c_json_printer@@Base+0x364>
   20a8c:	mov	r1, r5
   20a90:	mov	r0, r6
   20a94:	bl	1fcf8 <__flatcc_fb_gen_c_json_parser@@Base+0x1a18>
   20a98:	ldr	r5, [r5]
   20a9c:	b	20854 <__flatcc_fb_gen_c_json_printer@@Base+0x120>
   20aa0:	ldrh	r3, [r5, #8]
   20aa4:	cmp	r3, #0
   20aa8:	bne	20ab8 <__flatcc_fb_gen_c_json_printer@@Base+0x384>
   20aac:	mov	r1, r5
   20ab0:	mov	r0, r6
   20ab4:	bl	20050 <__flatcc_fb_gen_c_json_parser@@Base+0x1d70>
   20ab8:	ldr	r5, [r5]
   20abc:	b	20868 <__flatcc_fb_gen_c_json_printer@@Base+0x134>
   20ac0:	ldr	r0, [pc, #92]	; 20b24 <__flatcc_fb_gen_c_json_printer@@Base+0x3f0>
   20ac4:	ldr	r1, [r4, #204]	; 0xcc
   20ac8:	bl	14158 <fputs@plt>
   20acc:	b	208f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1bc>
   20ad0:	andeq	r6, r4, r7, asr #14
   20ad4:	muleq	r3, sl, r0
   20ad8:	andeq	r6, r4, ip, ror r7
   20adc:	andeq	r6, r4, r5, lsr #15
   20ae0:	andeq	r0, r3, r4, asr #22
   20ae4:	andeq	r2, r3, r9, lsr #3
   20ae8:			; <UNDEFINED> instruction: 0x000467b5
   20aec:	muleq	r4, r8, r9
   20af0:	andeq	r6, r4, r0, lsr #22
   20af4:			; <UNDEFINED> instruction: 0x00046ab6
   20af8:	strdeq	r6, [r4], -r0
   20afc:	andeq	r6, r4, lr, ror #22
   20b00:	andeq	r6, r4, r0, ror #23
   20b04:	andeq	r6, r4, r1, lsr ip
   20b08:	andeq	r6, r4, r0, lsl #25
   20b0c:	ldrdeq	r6, [r4], -r6	; <UNPREDICTABLE>
   20b10:	andeq	r6, r4, ip, lsl #27
   20b14:	andeq	r6, r4, r3, asr #14
   20b18:	muleq	r3, r3, pc	; <UNPREDICTABLE>
   20b1c:	muleq	r4, sl, sp
   20b20:	andeq	r2, r4, r1, asr #28
   20b24:	muleq	r4, r6, sp
   20b28:	push	{r4, lr}
   20b2c:	mov	r4, r0
   20b30:	ldr	r0, [r0, #16]
   20b34:	cmp	r0, #0
   20b38:	beq	20b40 <__flatcc_fb_gen_c_json_printer@@Base+0x40c>
   20b3c:	bl	13ff0 <free@plt>
   20b40:	ldr	r0, [r4, #20]
   20b44:	cmp	r0, #0
   20b48:	beq	20b50 <__flatcc_fb_gen_c_json_printer@@Base+0x41c>
   20b4c:	bl	13ff0 <free@plt>
   20b50:	ldr	r0, [r4, #24]
   20b54:	cmp	r0, #0
   20b58:	beq	20b60 <__flatcc_fb_gen_c_json_printer@@Base+0x42c>
   20b5c:	bl	13ff0 <free@plt>
   20b60:	mov	r0, r4
   20b64:	mov	r2, #44	; 0x2c
   20b68:	pop	{r4, lr}
   20b6c:	mov	r1, #0
   20b70:	b	140d4 <memset@plt>
   20b74:	add	r3, r1, #4
   20b78:	mov	r2, r0
   20b7c:	ldr	r1, [pc, #4]	; 20b88 <__flatcc_fb_gen_c_json_printer@@Base+0x454>
   20b80:	mov	r0, r3
   20b84:	b	22f50 <fb_symbol_table_visit@@Base>
   20b88:	ldrdeq	r0, [r2], -r8
   20b8c:	add	r3, r1, #4
   20b90:	mov	r2, r0
   20b94:	ldr	r1, [pc, #4]	; 20ba0 <__flatcc_fb_gen_c_json_printer@@Base+0x46c>
   20b98:	mov	r0, r3
   20b9c:	b	22f50 <fb_symbol_table_visit@@Base>
   20ba0:	andeq	r1, r2, r0, lsl #23
   20ba4:	push	{r4, r5, r6, lr}
   20ba8:	mov	r2, #8
   20bac:	mov	r5, r0
   20bb0:	mov	r4, r1
   20bb4:	ldr	r3, [pc, #28]	; 20bd8 <__flatcc_fb_gen_c_json_printer@@Base+0x4a4>
   20bb8:	bl	14140 <qsort@plt>
   20bbc:	mov	r3, #0
   20bc0:	cmp	r3, r4
   20bc4:	popge	{r4, r5, r6, pc}
   20bc8:	ldr	r2, [r5, r3, lsl #3]
   20bcc:	str	r3, [r2, #124]	; 0x7c
   20bd0:	add	r3, r3, #1
   20bd4:	b	20bc0 <__flatcc_fb_gen_c_json_printer@@Base+0x48c>
   20bd8:	ldrdeq	r0, [r2], -ip
   20bdc:	ldr	r0, [r0, #4]
   20be0:	ldr	r1, [r1, #4]
   20be4:	b	13fd8 <strcmp@plt>
   20be8:	push	{r4, lr}
   20bec:	subs	r4, r1, #0
   20bf0:	bne	20bfc <__flatcc_fb_gen_c_json_printer@@Base+0x4c8>
   20bf4:	mvn	r0, #0
   20bf8:	pop	{r4, pc}
   20bfc:	mov	r1, #0
   20c00:	bl	2c8f0 <flatcc_builder_table_add_offset@@Base>
   20c04:	cmp	r0, #0
   20c08:	beq	20bf4 <__flatcc_fb_gen_c_json_printer@@Base+0x4c0>
   20c0c:	str	r4, [r0]
   20c10:	mov	r0, #0
   20c14:	pop	{r4, pc}
   20c18:	push	{r4, lr}
   20c1c:	subs	r4, r1, #0
   20c20:	bne	20c2c <__flatcc_fb_gen_c_json_printer@@Base+0x4f8>
   20c24:	mvn	r0, #0
   20c28:	pop	{r4, pc}
   20c2c:	mov	r1, #1
   20c30:	bl	2c8f0 <flatcc_builder_table_add_offset@@Base>
   20c34:	cmp	r0, #0
   20c38:	beq	20c24 <__flatcc_fb_gen_c_json_printer@@Base+0x4f0>
   20c3c:	str	r4, [r0]
   20c40:	mov	r0, #0
   20c44:	pop	{r4, pc}
   20c48:	cmp	r1, #0
   20c4c:	beq	20c7c <__flatcc_fb_gen_c_json_printer@@Base+0x548>
   20c50:	mov	r3, #1
   20c54:	push	{r4, lr}
   20c58:	mov	r1, #2
   20c5c:	mov	r2, r3
   20c60:	bl	2c74c <flatcc_builder_table_add@@Base>
   20c64:	cmp	r0, #0
   20c68:	beq	20c84 <__flatcc_fb_gen_c_json_printer@@Base+0x550>
   20c6c:	mov	r3, #1
   20c70:	strb	r3, [r0]
   20c74:	mov	r0, #0
   20c78:	pop	{r4, pc}
   20c7c:	mov	r0, r1
   20c80:	bx	lr
   20c84:	mvn	r0, #0
   20c88:	pop	{r4, pc}
   20c8c:	push	{r4, r5, r6, r7, r8, lr}
   20c90:	mov	r6, r1
   20c94:	mov	r1, #3
   20c98:	mov	r4, r0
   20c9c:	mov	r5, r2
   20ca0:	mov	r7, r3
   20ca4:	bl	2b7c8 <flatcc_builder_start_table@@Base>
   20ca8:	cmp	r0, #0
   20cac:	bne	20d60 <__flatcc_fb_gen_c_json_printer@@Base+0x62c>
   20cb0:	cmn	r7, #1
   20cb4:	beq	20cd8 <__flatcc_fb_gen_c_json_printer@@Base+0x5a4>
   20cb8:	mov	r3, #4
   20cbc:	mov	r1, #2
   20cc0:	mov	r2, r3
   20cc4:	mov	r0, r4
   20cc8:	bl	2c74c <flatcc_builder_table_add@@Base>
   20ccc:	cmp	r0, #0
   20cd0:	beq	20d60 <__flatcc_fb_gen_c_json_printer@@Base+0x62c>
   20cd4:	str	r7, [r0]
   20cd8:	cmp	r6, #0
   20cdc:	beq	20d00 <__flatcc_fb_gen_c_json_printer@@Base+0x5cc>
   20ce0:	mov	r3, #1
   20ce4:	mov	r1, #0
   20ce8:	mov	r2, r3
   20cec:	mov	r0, r4
   20cf0:	bl	2c74c <flatcc_builder_table_add@@Base>
   20cf4:	cmp	r0, #0
   20cf8:	beq	20d60 <__flatcc_fb_gen_c_json_printer@@Base+0x62c>
   20cfc:	strb	r6, [r0]
   20d00:	cmp	r5, #0
   20d04:	beq	20d28 <__flatcc_fb_gen_c_json_printer@@Base+0x5f4>
   20d08:	mov	r3, #1
   20d0c:	mov	r0, r4
   20d10:	mov	r2, r3
   20d14:	mov	r1, r3
   20d18:	bl	2c74c <flatcc_builder_table_add@@Base>
   20d1c:	cmp	r0, #0
   20d20:	beq	20d60 <__flatcc_fb_gen_c_json_printer@@Base+0x62c>
   20d24:	strb	r5, [r0]
   20d28:	mov	r2, #0
   20d2c:	ldr	r1, [pc, #52]	; 20d68 <__flatcc_fb_gen_c_json_printer@@Base+0x634>
   20d30:	mov	r0, r4
   20d34:	bl	2bd74 <flatcc_builder_check_required@@Base>
   20d38:	cmp	r0, #0
   20d3c:	bne	20d54 <__flatcc_fb_gen_c_json_printer@@Base+0x620>
   20d40:	ldr	r3, [pc, #36]	; 20d6c <__flatcc_fb_gen_c_json_printer@@Base+0x638>
   20d44:	mov	r2, #23
   20d48:	ldr	r1, [pc, #32]	; 20d70 <__flatcc_fb_gen_c_json_printer@@Base+0x63c>
   20d4c:	ldr	r0, [pc, #32]	; 20d74 <__flatcc_fb_gen_c_json_printer@@Base+0x640>
   20d50:	bl	1417c <__assert_fail@plt>
   20d54:	mov	r0, r4
   20d58:	pop	{r4, r5, r6, r7, r8, lr}
   20d5c:	b	2bdf0 <flatcc_builder_end_table@@Base>
   20d60:	mov	r0, #0
   20d64:	pop	{r4, r5, r6, r7, r8, pc}
   20d68:	andeq	r6, r4, r0, asr #27
   20d6c:	andeq	r6, r4, r2, asr #27
   20d70:	andeq	r6, r4, pc, asr #29
   20d74:	andeq	r6, r4, lr, lsr #30
   20d78:	push	{r4, lr}
   20d7c:	mov	r4, r0
   20d80:	bl	2c0ac <flatcc_builder_end_offset_vector@@Base>
   20d84:	mov	r1, r0
   20d88:	mov	r0, r4
   20d8c:	pop	{r4, lr}
   20d90:	b	20c18 <__flatcc_fb_gen_c_json_printer@@Base+0x4e4>
   20d94:	cmp	r0, #0
   20d98:	push	{r4, r5, r6, lr}
   20d9c:	mov	r5, r2
   20da0:	moveq	r4, r0
   20da4:	ldrne	r4, [r0, #-4]
   20da8:	cmp	r2, r4
   20dac:	movcs	r2, r4
   20db0:	bl	14164 <strncmp@plt>
   20db4:	cmp	r0, #0
   20db8:	popne	{r4, r5, r6, pc}
   20dbc:	cmp	r5, r4
   20dc0:	bhi	20dd0 <__flatcc_fb_gen_c_json_printer@@Base+0x69c>
   20dc4:	movcc	r0, #1
   20dc8:	movcs	r0, #0
   20dcc:	pop	{r4, r5, r6, pc}
   20dd0:	mvn	r0, #0
   20dd4:	pop	{r4, r5, r6, pc}
   20dd8:	ldrh	r3, [r1, #8]
   20ddc:	cmp	r3, #4
   20de0:	bxhi	lr
   20de4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20de8:	mov	r4, r0
   20dec:	mov	r5, r1
   20df0:	ldr	r0, [r0, #40]	; 0x28
   20df4:	ldr	r1, [r1, #16]
   20df8:	add	r0, r0, #172	; 0xac
   20dfc:	bl	22a08 <ptr_set_find_item@@Base>
   20e00:	cmp	r0, #0
   20e04:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   20e08:	ldr	r3, [r4]
   20e0c:	ldr	r6, [r4, #36]	; 0x24
   20e10:	cmp	r3, #0
   20e14:	moveq	r3, r6
   20e18:	beq	20e34 <__flatcc_fb_gen_c_json_printer@@Base+0x700>
   20e1c:	ldr	r3, [r5, #12]
   20e20:	mov	r9, #46	; 0x2e
   20e24:	ldr	r7, [r3]
   20e28:	mov	r3, r6
   20e2c:	cmp	r7, #0
   20e30:	bne	20e80 <__flatcc_fb_gen_c_json_printer@@Base+0x74c>
   20e34:	ldr	r1, [r5, #4]
   20e38:	mov	r0, r3
   20e3c:	ldm	r1, {r1, r7}
   20e40:	mov	r2, r7
   20e44:	bl	13ffc <memcpy@plt>
   20e48:	add	r2, r0, r7
   20e4c:	mov	r1, #0
   20e50:	add	r3, r2, #1
   20e54:	strb	r1, [r0, r7]
   20e58:	str	r3, [r4, #36]	; 0x24
   20e5c:	ldrh	r3, [r5, #8]
   20e60:	cmp	r3, #4
   20e64:	ldrls	pc, [pc, r3, lsl #2]
   20e68:	b	20ec8 <__flatcc_fb_gen_c_json_printer@@Base+0x794>
   20e6c:	andeq	r0, r2, r4, lsr #29
   20e70:	andeq	r0, r2, r4, lsr #29
   20e74:	andeq	r0, r2, r8, asr #29
   20e78:			; <UNDEFINED> instruction: 0x00020eb8
   20e7c:			; <UNDEFINED> instruction: 0x00020eb8
   20e80:	ldr	r1, [r7, #4]
   20e84:	mov	r0, r3
   20e88:	ldm	r1, {r1, r8}
   20e8c:	mov	r2, r8
   20e90:	bl	13ffc <memcpy@plt>
   20e94:	add	r3, r0, r8
   20e98:	strb	r9, [r3], #1
   20e9c:	ldr	r7, [r7]
   20ea0:	b	20e2c <__flatcc_fb_gen_c_json_printer@@Base+0x6f8>
   20ea4:	ldr	r3, [r4, #28]
   20ea8:	stm	r3, {r5, r6}
   20eac:	add	r3, r3, #8
   20eb0:	str	r3, [r4, #28]
   20eb4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20eb8:	ldr	r3, [r4, #32]
   20ebc:	stm	r3, {r5, r6}
   20ec0:	add	r3, r3, #8
   20ec4:	str	r3, [r4, #32]
   20ec8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20ecc:	push	{r4, lr}
   20ed0:	subs	r4, r1, #0
   20ed4:	beq	20ef4 <__flatcc_fb_gen_c_json_printer@@Base+0x7c0>
   20ed8:	mov	r3, #2
   20edc:	mov	r2, r3
   20ee0:	mov	r1, r3
   20ee4:	bl	2c74c <flatcc_builder_table_add@@Base>
   20ee8:	cmp	r0, #0
   20eec:	beq	20efc <__flatcc_fb_gen_c_json_printer@@Base+0x7c8>
   20ef0:	strh	r4, [r0]
   20ef4:	mov	r0, #0
   20ef8:	pop	{r4, pc}
   20efc:	mvn	r0, #0
   20f00:	pop	{r4, pc}
   20f04:	push	{r4, lr}
   20f08:	subs	r4, r1, #0
   20f0c:	beq	20f2c <__flatcc_fb_gen_c_json_printer@@Base+0x7f8>
   20f10:	mov	r3, #2
   20f14:	mov	r1, #3
   20f18:	mov	r2, r3
   20f1c:	bl	2c74c <flatcc_builder_table_add@@Base>
   20f20:	cmp	r0, #0
   20f24:	beq	20f34 <__flatcc_fb_gen_c_json_printer@@Base+0x800>
   20f28:	strh	r4, [r0]
   20f2c:	mov	r0, #0
   20f30:	pop	{r4, pc}
   20f34:	mvn	r0, #0
   20f38:	pop	{r4, pc}
   20f3c:	cmp	r0, #0
   20f40:	add	r2, r0, r1, lsl #2
   20f44:	beq	20f54 <__flatcc_fb_gen_c_json_printer@@Base+0x820>
   20f48:	ldr	r3, [r0, #-4]
   20f4c:	cmp	r1, r3
   20f50:	bcc	20f6c <__flatcc_fb_gen_c_json_printer@@Base+0x838>
   20f54:	push	{r4, lr}
   20f58:	mov	r2, #192	; 0xc0
   20f5c:	ldr	r3, [pc, #20]	; 20f78 <__flatcc_fb_gen_c_json_printer@@Base+0x844>
   20f60:	ldr	r1, [pc, #20]	; 20f7c <__flatcc_fb_gen_c_json_printer@@Base+0x848>
   20f64:	ldr	r0, [pc, #20]	; 20f80 <__flatcc_fb_gen_c_json_printer@@Base+0x84c>
   20f68:	bl	1417c <__assert_fail@plt>
   20f6c:	ldr	r0, [r0, r1, lsl #2]
   20f70:	add	r0, r2, r0
   20f74:	bx	lr
   20f78:	ldrdeq	r6, [r4], -r6	; <UNPREDICTABLE>
   20f7c:			; <UNDEFINED> instruction: 0x00046fbb
   20f80:	andeq	r7, r4, r9, lsl r0
   20f84:	cmp	r0, #0
   20f88:	push	{r4, lr}
   20f8c:	bne	20fa4 <__flatcc_fb_gen_c_json_printer@@Base+0x870>
   20f90:	ldr	r3, [pc, #84]	; 20fec <__flatcc_fb_gen_c_json_printer@@Base+0x8b8>
   20f94:	mov	r2, #195	; 0xc3
   20f98:	ldr	r1, [pc, #80]	; 20ff0 <__flatcc_fb_gen_c_json_printer@@Base+0x8bc>
   20f9c:	ldr	r0, [pc, #80]	; 20ff4 <__flatcc_fb_gen_c_json_printer@@Base+0x8c0>
   20fa0:	bl	1417c <__assert_fail@plt>
   20fa4:	ldr	r3, [r0]
   20fa8:	sub	r3, r0, r3
   20fac:	ldrh	r2, [r3]
   20fb0:	cmp	r2, #5
   20fb4:	bls	20fc4 <__flatcc_fb_gen_c_json_printer@@Base+0x890>
   20fb8:	ldrh	r2, [r3, #4]
   20fbc:	cmp	r2, #0
   20fc0:	bne	20fd8 <__flatcc_fb_gen_c_json_printer@@Base+0x8a4>
   20fc4:	ldr	r3, [pc, #32]	; 20fec <__flatcc_fb_gen_c_json_printer@@Base+0x8b8>
   20fc8:	mov	r2, #195	; 0xc3
   20fcc:	ldr	r1, [pc, #28]	; 20ff0 <__flatcc_fb_gen_c_json_printer@@Base+0x8bc>
   20fd0:	ldr	r0, [pc, #32]	; 20ff8 <__flatcc_fb_gen_c_json_printer@@Base+0x8c4>
   20fd4:	b	20fa0 <__flatcc_fb_gen_c_json_printer@@Base+0x86c>
   20fd8:	add	r3, r0, r2
   20fdc:	ldr	r0, [r0, r2]
   20fe0:	add	r0, r0, #4
   20fe4:	add	r0, r3, r0
   20fe8:	pop	{r4, pc}
   20fec:	andeq	r6, r4, lr, ror #27
   20ff0:			; <UNDEFINED> instruction: 0x00046fbb
   20ff4:	andeq	r7, r4, r0, asr r0
   20ff8:	andeq	r7, r4, r6, ror r0
   20ffc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21000:	mov	r5, r0
   21004:	mov	r6, r1
   21008:	mov	r7, r2
   2100c:	lsl	r4, r6, #1
   21010:	cmp	r4, r7
   21014:	pophi	{r4, r5, r6, r7, r8, r9, sl, pc}
   21018:	bcs	21060 <__flatcc_fb_gen_c_json_printer@@Base+0x92c>
   2101c:	mov	r1, r4
   21020:	mov	r0, r5
   21024:	bl	20f3c <__flatcc_fb_gen_c_json_printer@@Base+0x808>
   21028:	bl	20f84 <__flatcc_fb_gen_c_json_printer@@Base+0x850>
   2102c:	add	r8, r4, #1
   21030:	mov	r9, r0
   21034:	mov	r1, r8
   21038:	mov	r0, r5
   2103c:	bl	20f3c <__flatcc_fb_gen_c_json_printer@@Base+0x808>
   21040:	bl	20f84 <__flatcc_fb_gen_c_json_printer@@Base+0x850>
   21044:	subs	r1, r0, #0
   21048:	mov	r0, r9
   2104c:	ldrne	r2, [r1, #-4]
   21050:	moveq	r2, r1
   21054:	bl	20d94 <__flatcc_fb_gen_c_json_printer@@Base+0x660>
   21058:	cmp	r0, #0
   2105c:	movlt	r4, r8
   21060:	mov	r1, r6
   21064:	mov	r0, r5
   21068:	bl	20f3c <__flatcc_fb_gen_c_json_printer@@Base+0x808>
   2106c:	bl	20f84 <__flatcc_fb_gen_c_json_printer@@Base+0x850>
   21070:	mov	r8, r0
   21074:	mov	r1, r4
   21078:	mov	r0, r5
   2107c:	bl	20f3c <__flatcc_fb_gen_c_json_printer@@Base+0x808>
   21080:	bl	20f84 <__flatcc_fb_gen_c_json_printer@@Base+0x850>
   21084:	subs	r1, r0, #0
   21088:	mov	r0, r8
   2108c:	ldrne	r2, [r1, #-4]
   21090:	moveq	r2, r1
   21094:	bl	20d94 <__flatcc_fb_gen_c_json_printer@@Base+0x660>
   21098:	cmp	r0, #0
   2109c:	popge	{r4, r5, r6, r7, r8, r9, sl, pc}
   210a0:	sub	r3, r6, r4
   210a4:	ldr	r2, [r5, r6, lsl #2]
   210a8:	lsl	r3, r3, #2
   210ac:	ldr	r1, [r5, r4, lsl #2]
   210b0:	add	r2, r3, r2
   210b4:	sub	r3, r1, r3
   210b8:	str	r3, [r5, r6, lsl #2]
   210bc:	mov	r6, r4
   210c0:	str	r2, [r5, r4, lsl #2]
   210c4:	b	2100c <__flatcc_fb_gen_c_json_printer@@Base+0x8d8>
   210c8:	sub	r2, r2, #2
   210cc:	push	{lr}		; (str lr, [sp, #-4]!)
   210d0:	cmp	r2, #13
   210d4:	ldrls	pc, [pc, r2, lsl #2]
   210d8:	b	21220 <__flatcc_fb_gen_c_json_printer@@Base+0xaec>
   210dc:	andeq	r1, r2, r8, ror #2
   210e0:	andeq	r1, r2, r0, lsr #4
   210e4:	andeq	r1, r2, r0, lsr #4
   210e8:	andeq	r1, r2, r0, lsr #4
   210ec:	andeq	r1, r2, r0, lsr #4
   210f0:	andeq	r1, r2, r8, lsl #4
   210f4:	andeq	r1, r2, r4, lsl r1
   210f8:	andeq	r1, r2, r4, lsr #2
   210fc:	andeq	r1, r2, r0, lsr #4
   21100:	andeq	r1, r2, r0, lsr #4
   21104:	andeq	r1, r2, r0, lsr #4
   21108:	andeq	r1, r2, r0, lsr #4
   2110c:	andeq	r1, r2, r8, ror r1
   21110:	andeq	r1, r2, r8, lsr r1
   21114:	mov	r2, #0
   21118:	mov	lr, r2
   2111c:	mvn	r3, #0
   21120:	b	211c8 <__flatcc_fb_gen_c_json_printer@@Base+0xa94>
   21124:	mov	r2, #13
   21128:	mov	lr, #14
   2112c:	mvn	r3, #0
   21130:	mov	r1, #0
   21134:	b	211c8 <__flatcc_fb_gen_c_json_printer@@Base+0xa94>
   21138:	ldrh	r2, [r1, #8]
   2113c:	ldr	r3, [r1, #124]	; 0x7c
   21140:	cmp	r2, #1
   21144:	bls	21214 <__flatcc_fb_gen_c_json_printer@@Base+0xae0>
   21148:	cmp	r2, #3
   2114c:	moveq	r2, #0
   21150:	moveq	lr, #14
   21154:	ldreq	r1, [r1, #40]	; 0x28
   21158:	beq	211c8 <__flatcc_fb_gen_c_json_printer@@Base+0xa94>
   2115c:	mov	r2, #0
   21160:	mov	lr, r2
   21164:	b	211a8 <__flatcc_fb_gen_c_json_printer@@Base+0xa74>
   21168:	mov	r2, #0
   2116c:	mov	lr, #13
   21170:	mvn	r3, #0
   21174:	b	211a8 <__flatcc_fb_gen_c_json_printer@@Base+0xa74>
   21178:	ldrh	r2, [r1, #8]
   2117c:	ldr	r3, [r1, #124]	; 0x7c
   21180:	cmp	r2, #4
   21184:	ldrls	pc, [pc, r2, lsl #2]
   21188:	b	21220 <__flatcc_fb_gen_c_json_printer@@Base+0xaec>
   2118c:			; <UNDEFINED> instruction: 0x000211b0
   21190:			; <UNDEFINED> instruction: 0x000211b0
   21194:	andeq	r1, r2, r0, lsr #4
   21198:			; <UNDEFINED> instruction: 0x000211bc
   2119c:	andeq	r1, r2, r0, lsr #3
   211a0:	mov	r2, #0
   211a4:	mov	lr, #16
   211a8:	mov	r1, r2
   211ac:	b	211c8 <__flatcc_fb_gen_c_json_printer@@Base+0xa94>
   211b0:	mov	r2, #0
   211b4:	mov	lr, #15
   211b8:	b	211a8 <__flatcc_fb_gen_c_json_printer@@Base+0xa74>
   211bc:	ldr	r1, [r1, #40]	; 0x28
   211c0:	mov	r2, #0
   211c4:	mov	lr, r2
   211c8:	sub	ip, r1, #1
   211cc:	cmp	ip, #10
   211d0:	ldrls	r1, [pc, #84]	; 2122c <__flatcc_fb_gen_c_json_printer@@Base+0xaf8>
   211d4:	movhi	r1, #0
   211d8:	addls	r1, r1, ip
   211dc:	ldrsbls	r1, [r1, #68]	; 0x44
   211e0:	cmp	lr, #0
   211e4:	moveq	lr, r1
   211e8:	beq	211fc <__flatcc_fb_gen_c_json_printer@@Base+0xac8>
   211ec:	cmp	lr, #14
   211f0:	bne	211fc <__flatcc_fb_gen_c_json_printer@@Base+0xac8>
   211f4:	cmp	r2, #0
   211f8:	moveq	r2, r1
   211fc:	mov	r1, lr
   21200:	pop	{lr}		; (ldr lr, [sp], #4)
   21204:	b	20c8c <__flatcc_fb_gen_c_json_printer@@Base+0x558>
   21208:	mov	r2, #0
   2120c:	mov	lr, #14
   21210:	b	2111c <__flatcc_fb_gen_c_json_printer@@Base+0x9e8>
   21214:	mov	r2, #15
   21218:	mov	lr, #14
   2121c:	b	21130 <__flatcc_fb_gen_c_json_printer@@Base+0x9fc>
   21220:	mov	r2, #0
   21224:	mov	lr, r2
   21228:	b	21170 <__flatcc_fb_gen_c_json_printer@@Base+0xa3c>
   2122c:	andeq	r6, r4, r0, asr #27
   21230:	push	{r4, lr}
   21234:	mov	r2, #2
   21238:	mov	r4, r0
   2123c:	ldr	r1, [pc, #56]	; 2127c <__flatcc_fb_gen_c_json_printer@@Base+0xb48>
   21240:	bl	2bd74 <flatcc_builder_check_required@@Base>
   21244:	cmp	r0, #0
   21248:	bne	21260 <__flatcc_fb_gen_c_json_printer@@Base+0xb2c>
   2124c:	ldr	r3, [pc, #44]	; 21280 <__flatcc_fb_gen_c_json_printer@@Base+0xb4c>
   21250:	mov	r2, #29
   21254:	ldr	r1, [pc, #40]	; 21284 <__flatcc_fb_gen_c_json_printer@@Base+0xb50>
   21258:	ldr	r0, [pc, #40]	; 21288 <__flatcc_fb_gen_c_json_printer@@Base+0xb54>
   2125c:	bl	1417c <__assert_fail@plt>
   21260:	mov	r0, r4
   21264:	bl	2bdf0 <flatcc_builder_end_table@@Base>
   21268:	subs	r1, r0, #0
   2126c:	popeq	{r4, pc}
   21270:	mov	r0, r4
   21274:	pop	{r4, lr}
   21278:	b	2b350 <flatcc_builder_offset_vector_push@@Base>
   2127c:	andeq	r6, r4, r0, lsl lr
   21280:	andeq	r6, r4, r6, lsl lr
   21284:	andeq	r6, r4, pc, asr #29
   21288:	muleq	r4, r7, r0
   2128c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21290:	mov	r4, r0
   21294:	mov	r7, r1
   21298:	vpush	{d8}
   2129c:	sub	sp, sp, #84	; 0x54
   212a0:	add	r0, sp, #40	; 0x28
   212a4:	ldr	r8, [r2, #60]	; 0x3c
   212a8:	str	r2, [sp]
   212ac:	mov	r2, #36	; 0x24
   212b0:	ldr	r5, [r1, #184]	; 0xb8
   212b4:	mov	r1, #0
   212b8:	bl	140d4 <memset@plt>
   212bc:	ldr	r3, [sp]
   212c0:	add	r2, sp, #36	; 0x24
   212c4:	mov	r0, r8
   212c8:	ldr	r1, [pc, #2156]	; 21b3c <__flatcc_fb_gen_c_json_printer@@Base+0x1408>
   212cc:	str	r5, [sp, #36]	; 0x24
   212d0:	str	r3, [sp, #76]	; 0x4c
   212d4:	bl	23630 <fb_scope_table_visit@@Base>
   212d8:	ldr	r9, [sp, #40]	; 0x28
   212dc:	mov	r1, #8
   212e0:	mov	r0, r9
   212e4:	bl	13fc0 <calloc@plt>
   212e8:	ldr	r6, [sp, #44]	; 0x2c
   212ec:	mov	fp, r0
   212f0:	mov	r1, #8
   212f4:	str	r0, [sp, #52]	; 0x34
   212f8:	mov	r0, r6
   212fc:	bl	13fc0 <calloc@plt>
   21300:	ldr	r5, [sp, #48]	; 0x30
   21304:	mov	sl, r0
   21308:	str	r0, [sp, #56]	; 0x38
   2130c:	mov	r0, r5
   21310:	bl	14068 <malloc@plt>
   21314:	cmp	r9, #0
   21318:	str	r0, [sp, #60]	; 0x3c
   2131c:	movle	r9, #0
   21320:	movgt	r9, #1
   21324:	str	fp, [sp, #64]	; 0x40
   21328:	cmp	fp, #0
   2132c:	str	sl, [sp, #68]	; 0x44
   21330:	movne	r9, #0
   21334:	str	r0, [sp, #72]	; 0x48
   21338:	cmp	r9, #0
   2133c:	bne	21378 <__flatcc_fb_gen_c_json_printer@@Base+0xc44>
   21340:	cmp	r6, #0
   21344:	movle	r6, #0
   21348:	movgt	r6, #1
   2134c:	cmp	sl, #0
   21350:	movne	r6, #0
   21354:	cmp	r6, #0
   21358:	bne	21378 <__flatcc_fb_gen_c_json_printer@@Base+0xc44>
   2135c:	adds	r5, r5, #0
   21360:	movne	r5, #1
   21364:	cmp	r0, #0
   21368:	moveq	fp, r5
   2136c:	movne	fp, #0
   21370:	cmp	fp, #0
   21374:	beq	21390 <__flatcc_fb_gen_c_json_printer@@Base+0xc5c>
   21378:	add	r0, sp, #36	; 0x24
   2137c:	bl	20b28 <__flatcc_fb_gen_c_json_printer@@Base+0x3f4>
   21380:	mvn	r0, #0
   21384:	add	sp, sp, #84	; 0x54
   21388:	vpop	{d8}
   2138c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21390:	add	r2, sp, #36	; 0x24
   21394:	ldr	r1, [pc, #1956]	; 21b40 <__flatcc_fb_gen_c_json_printer@@Base+0x140c>
   21398:	mov	r0, r8
   2139c:	bl	23630 <fb_scope_table_visit@@Base>
   213a0:	ldr	r1, [sp, #40]	; 0x28
   213a4:	ldr	r0, [sp, #52]	; 0x34
   213a8:	bl	20ba4 <__flatcc_fb_gen_c_json_printer@@Base+0x470>
   213ac:	ldr	r1, [sp, #44]	; 0x2c
   213b0:	ldr	r0, [sp, #56]	; 0x38
   213b4:	bl	20ba4 <__flatcc_fb_gen_c_json_printer@@Base+0x470>
   213b8:	ldr	r0, [sp, #40]	; 0x28
   213bc:	cmp	r0, #0
   213c0:	ble	213d4 <__flatcc_fb_gen_c_json_printer@@Base+0xca0>
   213c4:	lsl	r0, r0, #2
   213c8:	bl	14068 <malloc@plt>
   213cc:	subs	fp, r0, #0
   213d0:	beq	21378 <__flatcc_fb_gen_c_json_printer@@Base+0xc44>
   213d4:	ldr	r3, [r7, #188]	; 0xbc
   213d8:	mov	r2, #0
   213dc:	mov	r0, r4
   213e0:	ldr	r1, [pc, #1884]	; 21b44 <__flatcc_fb_gen_c_json_printer@@Base+0x1410>
   213e4:	cmp	r3, #0
   213e8:	movne	r3, #2
   213ec:	bl	2afec <flatcc_builder_start_buffer@@Base>
   213f0:	cmp	r0, #0
   213f4:	bne	21404 <__flatcc_fb_gen_c_json_printer@@Base+0xcd0>
   213f8:	mov	r1, #5
   213fc:	mov	r0, r4
   21400:	bl	2b7c8 <flatcc_builder_start_table@@Base>
   21404:	ldr	r3, [sp]
   21408:	ldrh	r5, [r3, #16]
   2140c:	cmp	r5, #2
   21410:	bne	21440 <__flatcc_fb_gen_c_json_printer@@Base+0xd0c>
   21414:	mov	r0, r4
   21418:	ldr	r1, [r3, #8]
   2141c:	ldr	r2, [r3, #12]
   21420:	bl	2c5c0 <flatcc_builder_create_string@@Base>
   21424:	subs	r6, r0, #0
   21428:	beq	21440 <__flatcc_fb_gen_c_json_printer@@Base+0xd0c>
   2142c:	mov	r1, r5
   21430:	mov	r0, r4
   21434:	bl	2c8f0 <flatcc_builder_table_add_offset@@Base>
   21438:	cmp	r0, #0
   2143c:	strne	r6, [r0]
   21440:	ldr	r3, [sp]
   21444:	ldrh	r3, [r3, #32]
   21448:	cmp	r3, #2
   2144c:	bne	21480 <__flatcc_fb_gen_c_json_printer@@Base+0xd4c>
   21450:	ldr	r3, [sp]
   21454:	mov	r0, r4
   21458:	ldr	r1, [r3, #24]
   2145c:	ldr	r2, [r3, #28]
   21460:	bl	2c5c0 <flatcc_builder_create_string@@Base>
   21464:	subs	r5, r0, #0
   21468:	beq	21480 <__flatcc_fb_gen_c_json_printer@@Base+0xd4c>
   2146c:	mov	r1, #3
   21470:	mov	r0, r4
   21474:	bl	2c8f0 <flatcc_builder_table_add_offset@@Base>
   21478:	cmp	r0, #0
   2147c:	strne	r5, [r0]
   21480:	ldr	r3, [sp, #52]	; 0x34
   21484:	mov	r8, #0
   21488:	str	r3, [sp, #12]
   2148c:	ldr	r3, [sp, #40]	; 0x28
   21490:	str	r3, [sp, #16]
   21494:	ldr	r3, [sp, #16]
   21498:	cmp	r3, r8
   2149c:	bgt	2155c <__flatcc_fb_gen_c_json_printer@@Base+0xe28>
   214a0:	mov	r2, r3
   214a4:	mov	r1, fp
   214a8:	ldr	sl, [pc, #1688]	; 21b48 <__flatcc_fb_gen_c_json_printer@@Base+0x1414>
   214ac:	mov	r0, r4
   214b0:	mov	r6, #0
   214b4:	bl	2c108 <flatcc_builder_create_offset_vector@@Base>
   214b8:	mov	r1, r0
   214bc:	mov	r0, r4
   214c0:	bl	20be8 <__flatcc_fb_gen_c_json_printer@@Base+0x4b4>
   214c4:	ldr	r3, [sp, #56]	; 0x38
   214c8:	mov	r0, r4
   214cc:	str	r3, [sp, #4]
   214d0:	ldr	r3, [sp, #44]	; 0x2c
   214d4:	str	r3, [sp, #12]
   214d8:	bl	2b708 <flatcc_builder_start_offset_vector@@Base>
   214dc:	ldr	r3, [sp, #12]
   214e0:	cmp	r3, r6
   214e4:	bgt	21934 <__flatcc_fb_gen_c_json_printer@@Base+0x1200>
   214e8:	mov	r0, r4
   214ec:	bl	20d78 <__flatcc_fb_gen_c_json_printer@@Base+0x644>
   214f0:	ldr	r3, [sp]
   214f4:	ldr	r3, [r3, #52]	; 0x34
   214f8:	cmp	r3, #0
   214fc:	beq	21530 <__flatcc_fb_gen_c_json_printer@@Base+0xdfc>
   21500:	ldrh	r2, [r3, #8]
   21504:	cmp	r2, #0
   21508:	bne	21530 <__flatcc_fb_gen_c_json_printer@@Base+0xdfc>
   2150c:	ldr	r3, [r3, #124]	; 0x7c
   21510:	ldr	r5, [fp, r3, lsl #2]
   21514:	cmp	r5, #0
   21518:	beq	21530 <__flatcc_fb_gen_c_json_printer@@Base+0xdfc>
   2151c:	mov	r1, #4
   21520:	mov	r0, r4
   21524:	bl	2c8f0 <flatcc_builder_table_add_offset@@Base>
   21528:	cmp	r0, #0
   2152c:	strne	r5, [r0]
   21530:	mov	r2, #2
   21534:	ldr	r1, [pc, #1552]	; 21b4c <__flatcc_fb_gen_c_json_printer@@Base+0x1418>
   21538:	mov	r0, r4
   2153c:	bl	2bd74 <flatcc_builder_check_required@@Base>
   21540:	cmp	r0, #0
   21544:	bne	21b0c <__flatcc_fb_gen_c_json_printer@@Base+0x13d8>
   21548:	ldr	r3, [pc, #1536]	; 21b50 <__flatcc_fb_gen_c_json_printer@@Base+0x141c>
   2154c:	mov	r2, #33	; 0x21
   21550:	ldr	r1, [pc, #1532]	; 21b54 <__flatcc_fb_gen_c_json_printer@@Base+0x1420>
   21554:	ldr	r0, [pc, #1532]	; 21b58 <__flatcc_fb_gen_c_json_printer@@Base+0x1424>
   21558:	b	2164c <__flatcc_fb_gen_c_json_printer@@Base+0xf18>
   2155c:	ldr	r3, [sp, #12]
   21560:	mov	r1, #5
   21564:	mov	r0, r4
   21568:	ldr	r9, [r3, r8, lsl #3]
   2156c:	bl	2b7c8 <flatcc_builder_start_table@@Base>
   21570:	ldr	r3, [sp, #12]
   21574:	mov	r0, r4
   21578:	add	r3, r3, #4
   2157c:	ldr	r1, [r3, r8, lsl #3]
   21580:	bl	2c658 <flatcc_builder_create_string_str@@Base>
   21584:	mov	r1, r0
   21588:	mov	r0, r4
   2158c:	bl	20be8 <__flatcc_fb_gen_c_json_printer@@Base+0x4b4>
   21590:	mov	r0, r4
   21594:	bl	2b708 <flatcc_builder_start_offset_vector@@Base>
   21598:	ldr	r5, [r9, #20]
   2159c:	mov	r3, #0
   215a0:	str	r3, [sp, #4]
   215a4:	cmp	r5, #0
   215a8:	bne	21650 <__flatcc_fb_gen_c_json_printer@@Base+0xf1c>
   215ac:	mov	r0, r4
   215b0:	bl	20d78 <__flatcc_fb_gen_c_json_printer@@Base+0x644>
   215b4:	ldrh	r3, [r9, #8]
   215b8:	cmp	r3, #1
   215bc:	moveq	r6, #1
   215c0:	movne	r6, #0
   215c4:	bne	215f0 <__flatcc_fb_gen_c_json_printer@@Base+0xebc>
   215c8:	ldr	r5, [r9, #112]	; 0x70
   215cc:	cmp	r5, #0
   215d0:	beq	215f0 <__flatcc_fb_gen_c_json_printer@@Base+0xebc>
   215d4:	mov	r3, #4
   215d8:	mov	r0, r4
   215dc:	mov	r2, r3
   215e0:	mov	r1, r3
   215e4:	bl	2c74c <flatcc_builder_table_add@@Base>
   215e8:	cmp	r0, #0
   215ec:	strne	r5, [r0]
   215f0:	mov	r1, r6
   215f4:	mov	r0, r4
   215f8:	bl	20c48 <__flatcc_fb_gen_c_json_printer@@Base+0x514>
   215fc:	ldrh	r5, [r9, #104]	; 0x68
   21600:	cmp	r5, #0
   21604:	beq	21624 <__flatcc_fb_gen_c_json_printer@@Base+0xef0>
   21608:	mov	r3, #4
   2160c:	mov	r1, #3
   21610:	mov	r2, r3
   21614:	mov	r0, r4
   21618:	bl	2c74c <flatcc_builder_table_add@@Base>
   2161c:	cmp	r0, #0
   21620:	strne	r5, [r0]
   21624:	mov	r2, #2
   21628:	ldr	r1, [pc, #1324]	; 21b5c <__flatcc_fb_gen_c_json_printer@@Base+0x1428>
   2162c:	mov	r0, r4
   21630:	bl	2bd74 <flatcc_builder_check_required@@Base>
   21634:	cmp	r0, #0
   21638:	bne	21920 <__flatcc_fb_gen_c_json_printer@@Base+0x11ec>
   2163c:	ldr	r3, [pc, #1308]	; 21b60 <__flatcc_fb_gen_c_json_printer@@Base+0x142c>
   21640:	mov	r2, #31
   21644:	ldr	r1, [pc, #1288]	; 21b54 <__flatcc_fb_gen_c_json_printer@@Base+0x1420>
   21648:	ldr	r0, [pc, #1300]	; 21b64 <__flatcc_fb_gen_c_json_printer@@Base+0x1430>
   2164c:	bl	1417c <__assert_fail@plt>
   21650:	ldr	r3, [sp, #4]
   21654:	ldrh	sl, [r5, #72]	; 0x48
   21658:	cmp	r3, #0
   2165c:	movne	r3, #0
   21660:	ubfxeq	r3, sl, #7, #1
   21664:	str	r3, [sp, #8]
   21668:	ldrb	r3, [sp, #8]
   2166c:	str	r3, [sp, #20]
   21670:	and	r3, sl, #4
   21674:	str	r3, [sp, #24]
   21678:	ubfx	r3, sl, #2, #1
   2167c:	str	r3, [sp, #28]
   21680:	ldrh	r3, [r5, #24]
   21684:	cmp	r3, #14
   21688:	bne	21764 <__flatcc_fb_gen_c_json_printer@@Base+0x1030>
   2168c:	ldr	r3, [r5, #16]
   21690:	ldrh	r3, [r3, #8]
   21694:	cmp	r3, #4
   21698:	bne	21764 <__flatcc_fb_gen_c_json_printer@@Base+0x1030>
   2169c:	mov	r1, #9
   216a0:	mov	r0, r4
   216a4:	bl	2b7c8 <flatcc_builder_start_table@@Base>
   216a8:	mov	r0, r4
   216ac:	bl	2b750 <flatcc_builder_start_string@@Base>
   216b0:	ldr	r3, [r5, #4]
   216b4:	mov	r0, r4
   216b8:	ldm	r3, {r1, r2}
   216bc:	bl	2b48c <flatcc_builder_append_string@@Base>
   216c0:	mov	r2, #5
   216c4:	ldr	r1, [pc, #1180]	; 21b68 <__flatcc_fb_gen_c_json_printer@@Base+0x1434>
   216c8:	mov	r0, r4
   216cc:	bl	2b48c <flatcc_builder_append_string@@Base>
   216d0:	mov	r0, r4
   216d4:	bl	2c6b8 <flatcc_builder_end_string@@Base>
   216d8:	mov	r1, r0
   216dc:	mov	r0, r4
   216e0:	bl	20be8 <__flatcc_fb_gen_c_json_printer@@Base+0x4b4>
   216e4:	mvn	r3, #0
   216e8:	mov	r2, #0
   216ec:	mov	r1, #1
   216f0:	mov	r0, r4
   216f4:	bl	20c8c <__flatcc_fb_gen_c_json_printer@@Base+0x558>
   216f8:	mov	r1, r0
   216fc:	mov	r0, r4
   21700:	bl	20c18 <__flatcc_fb_gen_c_json_printer@@Base+0x4e4>
   21704:	ldrh	r1, [r5, #96]	; 0x60
   21708:	mov	r0, r4
   2170c:	add	r1, r1, #1
   21710:	lsl	r1, r1, #1
   21714:	uxth	r1, r1
   21718:	bl	20f04 <__flatcc_fb_gen_c_json_printer@@Base+0x7d0>
   2171c:	ldrh	r1, [r5, #96]	; 0x60
   21720:	mov	r0, r4
   21724:	sub	r1, r1, #1
   21728:	uxth	r1, r1
   2172c:	bl	20ecc <__flatcc_fb_gen_c_json_printer@@Base+0x798>
   21730:	and	r3, sl, #4
   21734:	cmp	r3, #0
   21738:	beq	2175c <__flatcc_fb_gen_c_json_printer@@Base+0x1028>
   2173c:	mov	r3, #1
   21740:	mov	r1, #6
   21744:	mov	r2, r3
   21748:	mov	r0, r4
   2174c:	bl	2c74c <flatcc_builder_table_add@@Base>
   21750:	cmp	r0, #0
   21754:	ubfxne	r3, sl, #2, #1
   21758:	strbne	r3, [r0]
   2175c:	mov	r0, r4
   21760:	bl	21230 <__flatcc_fb_gen_c_json_printer@@Base+0xafc>
   21764:	mov	r1, #9
   21768:	mov	r0, r4
   2176c:	bl	2b7c8 <flatcc_builder_start_table@@Base>
   21770:	ldr	r3, [r5, #4]
   21774:	mov	r0, r4
   21778:	ldm	r3, {r1, r2}
   2177c:	bl	2c5c0 <flatcc_builder_create_string@@Base>
   21780:	mov	r1, r0
   21784:	mov	r0, r4
   21788:	bl	20be8 <__flatcc_fb_gen_c_json_printer@@Base+0x4b4>
   2178c:	ldrh	r2, [r5, #24]
   21790:	mov	r0, r4
   21794:	ldr	r1, [r5, #16]
   21798:	bl	210c8 <__flatcc_fb_gen_c_json_printer@@Base+0x994>
   2179c:	mov	r1, r0
   217a0:	mov	r0, r4
   217a4:	bl	20c18 <__flatcc_fb_gen_c_json_printer@@Base+0x4e4>
   217a8:	ldrh	r3, [r9, #8]
   217ac:	cmp	r3, #0
   217b0:	beq	21808 <__flatcc_fb_gen_c_json_printer@@Base+0x10d4>
   217b4:	cmp	r3, #1
   217b8:	beq	21910 <__flatcc_fb_gen_c_json_printer@@Base+0x11dc>
   217bc:	ldr	r3, [sp, #24]
   217c0:	cmp	r3, #0
   217c4:	beq	217e8 <__flatcc_fb_gen_c_json_printer@@Base+0x10b4>
   217c8:	mov	r3, #1
   217cc:	mov	r1, #6
   217d0:	mov	r2, r3
   217d4:	mov	r0, r4
   217d8:	bl	2c74c <flatcc_builder_table_add@@Base>
   217dc:	cmp	r0, #0
   217e0:	ldrne	r3, [sp, #28]
   217e4:	strbne	r3, [r0]
   217e8:	mov	r0, r4
   217ec:	bl	21230 <__flatcc_fb_gen_c_json_printer@@Base+0xafc>
   217f0:	ldr	r3, [sp, #4]
   217f4:	ldr	r2, [sp, #20]
   217f8:	ldr	r5, [r5]
   217fc:	orr	r3, r3, r2
   21800:	str	r3, [sp, #4]
   21804:	b	215a4 <__flatcc_fb_gen_c_json_printer@@Base+0xe70>
   21808:	ldrh	r3, [r5, #56]	; 0x38
   2180c:	sub	r3, r3, #3
   21810:	cmp	r3, #3
   21814:	ldrls	pc, [pc, r3, lsl #2]
   21818:	b	21874 <__flatcc_fb_gen_c_json_printer@@Base+0x1140>
   2181c:	andeq	r1, r2, r4, ror #16
   21820:	andeq	r1, r2, ip, lsr #16
   21824:	andeq	r1, r2, ip, lsr #16
   21828:	andeq	r1, r2, r8, asr r8
   2182c:	ldrd	r6, [r5, #48]	; 0x30
   21830:	orrs	r3, r6, r7
   21834:	beq	21874 <__flatcc_fb_gen_c_json_printer@@Base+0x1140>
   21838:	mov	r3, #8
   2183c:	mov	r1, #4
   21840:	mov	r2, r3
   21844:	mov	r0, r4
   21848:	bl	2c74c <flatcc_builder_table_add@@Base>
   2184c:	cmp	r0, #0
   21850:	strdne	r6, [r0]
   21854:	b	21874 <__flatcc_fb_gen_c_json_printer@@Base+0x1140>
   21858:	ldrb	r6, [r5, #48]	; 0x30
   2185c:	mov	r7, #0
   21860:	b	21830 <__flatcc_fb_gen_c_json_printer@@Base+0x10fc>
   21864:	vldr	d8, [r5, #48]	; 0x30
   21868:	vcmp.f64	d8, #0.0
   2186c:	vmrs	APSR_nzcv, fpscr
   21870:	bne	218f0 <__flatcc_fb_gen_c_json_printer@@Base+0x11bc>
   21874:	ldrh	r1, [r5, #96]	; 0x60
   21878:	mov	r0, r4
   2187c:	bl	20ecc <__flatcc_fb_gen_c_json_printer@@Base+0x798>
   21880:	ldrh	r1, [r5, #96]	; 0x60
   21884:	mov	r0, r4
   21888:	add	r1, r1, #2
   2188c:	lsl	r1, r1, #1
   21890:	uxth	r1, r1
   21894:	bl	20f04 <__flatcc_fb_gen_c_json_printer@@Base+0x7d0>
   21898:	ldr	r3, [sp, #8]
   2189c:	cmp	r3, #0
   218a0:	beq	218c4 <__flatcc_fb_gen_c_json_printer@@Base+0x1190>
   218a4:	mov	r3, #1
   218a8:	mov	r1, #8
   218ac:	mov	r2, r3
   218b0:	mov	r0, r4
   218b4:	bl	2c74c <flatcc_builder_table_add@@Base>
   218b8:	cmp	r0, #0
   218bc:	movne	r3, #1
   218c0:	strbne	r3, [r0]
   218c4:	tst	sl, #256	; 0x100
   218c8:	beq	217bc <__flatcc_fb_gen_c_json_printer@@Base+0x1088>
   218cc:	mov	r3, #1
   218d0:	mov	r1, #7
   218d4:	mov	r2, r3
   218d8:	mov	r0, r4
   218dc:	bl	2c74c <flatcc_builder_table_add@@Base>
   218e0:	cmp	r0, #0
   218e4:	movne	r3, #1
   218e8:	strbne	r3, [r0]
   218ec:	b	217bc <__flatcc_fb_gen_c_json_printer@@Base+0x1088>
   218f0:	mov	r3, #8
   218f4:	mov	r1, #5
   218f8:	mov	r2, r3
   218fc:	mov	r0, r4
   21900:	bl	2c74c <flatcc_builder_table_add@@Base>
   21904:	cmp	r0, #0
   21908:	vstrne	d8, [r0]
   2190c:	b	21874 <__flatcc_fb_gen_c_json_printer@@Base+0x1140>
   21910:	ldrh	r1, [r5, #80]	; 0x50
   21914:	mov	r0, r4
   21918:	bl	20f04 <__flatcc_fb_gen_c_json_printer@@Base+0x7d0>
   2191c:	b	217bc <__flatcc_fb_gen_c_json_printer@@Base+0x1088>
   21920:	mov	r0, r4
   21924:	bl	2bdf0 <flatcc_builder_end_table@@Base>
   21928:	str	r0, [fp, r8, lsl #2]
   2192c:	add	r8, r8, #1
   21930:	b	21494 <__flatcc_fb_gen_c_json_printer@@Base+0xd60>
   21934:	ldr	r3, [sp, #4]
   21938:	mov	r1, #4
   2193c:	mov	r0, r4
   21940:	ldr	r7, [r3, r6, lsl #3]
   21944:	ldrh	r8, [r7, #8]
   21948:	sub	r3, r8, #4
   2194c:	clz	r3, r3
   21950:	lsr	r3, r3, #5
   21954:	str	r3, [sp, #16]
   21958:	bl	2b7c8 <flatcc_builder_start_table@@Base>
   2195c:	ldr	r3, [sp, #4]
   21960:	mov	r0, r4
   21964:	add	r3, r3, #4
   21968:	ldr	r1, [r3, r6, lsl #3]
   2196c:	bl	2c658 <flatcc_builder_create_string_str@@Base>
   21970:	mov	r1, r0
   21974:	mov	r0, r4
   21978:	bl	20be8 <__flatcc_fb_gen_c_json_printer@@Base+0x4b4>
   2197c:	mov	r0, r4
   21980:	bl	2b708 <flatcc_builder_start_offset_vector@@Base>
   21984:	ldr	r5, [r7, #20]
   21988:	cmp	r8, #4
   2198c:	moveq	r3, fp
   21990:	movne	r3, #0
   21994:	str	r3, [sp, #8]
   21998:	cmp	r5, #0
   2199c:	bne	21a0c <__flatcc_fb_gen_c_json_printer@@Base+0x12d8>
   219a0:	mov	r0, r4
   219a4:	bl	20d78 <__flatcc_fb_gen_c_json_printer@@Base+0x644>
   219a8:	mov	r0, r4
   219ac:	ldr	r1, [sp, #16]
   219b0:	bl	20c48 <__flatcc_fb_gen_c_json_printer@@Base+0x514>
   219b4:	ldrh	r2, [r7, #48]	; 0x30
   219b8:	mov	r0, r4
   219bc:	ldr	r1, [r7, #40]	; 0x28
   219c0:	bl	210c8 <__flatcc_fb_gen_c_json_printer@@Base+0x994>
   219c4:	subs	r5, r0, #0
   219c8:	beq	219e0 <__flatcc_fb_gen_c_json_printer@@Base+0x12ac>
   219cc:	mov	r1, #3
   219d0:	mov	r0, r4
   219d4:	bl	2c8f0 <flatcc_builder_table_add_offset@@Base>
   219d8:	cmp	r0, #0
   219dc:	strne	r5, [r0]
   219e0:	mov	r2, #3
   219e4:	ldr	r1, [pc, #384]	; 21b6c <__flatcc_fb_gen_c_json_printer@@Base+0x1438>
   219e8:	mov	r0, r4
   219ec:	bl	2bd74 <flatcc_builder_check_required@@Base>
   219f0:	cmp	r0, #0
   219f4:	bne	21aec <__flatcc_fb_gen_c_json_printer@@Base+0x13b8>
   219f8:	ldr	r3, [pc, #368]	; 21b70 <__flatcc_fb_gen_c_json_printer@@Base+0x143c>
   219fc:	mov	r2, #27
   21a00:	ldr	r1, [pc, #332]	; 21b54 <__flatcc_fb_gen_c_json_printer@@Base+0x1420>
   21a04:	ldr	r0, [pc, #360]	; 21b74 <__flatcc_fb_gen_c_json_printer@@Base+0x1440>
   21a08:	b	2164c <__flatcc_fb_gen_c_json_printer@@Base+0xf18>
   21a0c:	mov	r1, #3
   21a10:	mov	r0, r4
   21a14:	bl	2b7c8 <flatcc_builder_start_table@@Base>
   21a18:	ldr	r3, [r5, #4]
   21a1c:	mov	r0, r4
   21a20:	ldm	r3, {r1, r2}
   21a24:	bl	2c5c0 <flatcc_builder_create_string@@Base>
   21a28:	mov	r1, r0
   21a2c:	mov	r0, r4
   21a30:	bl	20be8 <__flatcc_fb_gen_c_json_printer@@Base+0x4b4>
   21a34:	ldr	r3, [sp, #8]
   21a38:	cmp	r3, #0
   21a3c:	beq	21a78 <__flatcc_fb_gen_c_json_printer@@Base+0x1344>
   21a40:	ldrh	r3, [r5, #24]
   21a44:	cmp	r3, #14
   21a48:	bne	21a78 <__flatcc_fb_gen_c_json_printer@@Base+0x1344>
   21a4c:	ldr	r3, [r5, #16]
   21a50:	ldr	r2, [sp, #8]
   21a54:	ldr	r3, [r3, #124]	; 0x7c
   21a58:	ldr	r8, [r2, r3, lsl #2]
   21a5c:	cmp	r8, #0
   21a60:	beq	21a78 <__flatcc_fb_gen_c_json_printer@@Base+0x1344>
   21a64:	mov	r1, #2
   21a68:	mov	r0, r4
   21a6c:	bl	2c8f0 <flatcc_builder_table_add_offset@@Base>
   21a70:	cmp	r0, #0
   21a74:	strne	r8, [r0]
   21a78:	ldrd	r8, [r5, #48]	; 0x30
   21a7c:	orrs	r3, r8, r9
   21a80:	beq	21aa0 <__flatcc_fb_gen_c_json_printer@@Base+0x136c>
   21a84:	mov	r3, #8
   21a88:	mov	r1, #1
   21a8c:	mov	r2, r3
   21a90:	mov	r0, r4
   21a94:	bl	2c74c <flatcc_builder_table_add@@Base>
   21a98:	cmp	r0, #0
   21a9c:	strdne	r8, [r0]
   21aa0:	mov	r2, #1
   21aa4:	mov	r1, sl
   21aa8:	mov	r0, r4
   21aac:	bl	2bd74 <flatcc_builder_check_required@@Base>
   21ab0:	cmp	r0, #0
   21ab4:	bne	21acc <__flatcc_fb_gen_c_json_printer@@Base+0x1398>
   21ab8:	ldr	r3, [pc, #184]	; 21b78 <__flatcc_fb_gen_c_json_printer@@Base+0x1444>
   21abc:	mov	r2, #25
   21ac0:	ldr	r1, [pc, #140]	; 21b54 <__flatcc_fb_gen_c_json_printer@@Base+0x1420>
   21ac4:	ldr	r0, [pc, #176]	; 21b7c <__flatcc_fb_gen_c_json_printer@@Base+0x1448>
   21ac8:	b	2164c <__flatcc_fb_gen_c_json_printer@@Base+0xf18>
   21acc:	mov	r0, r4
   21ad0:	bl	2bdf0 <flatcc_builder_end_table@@Base>
   21ad4:	subs	r1, r0, #0
   21ad8:	beq	21ae4 <__flatcc_fb_gen_c_json_printer@@Base+0x13b0>
   21adc:	mov	r0, r4
   21ae0:	bl	2b350 <flatcc_builder_offset_vector_push@@Base>
   21ae4:	ldr	r5, [r5]
   21ae8:	b	21998 <__flatcc_fb_gen_c_json_printer@@Base+0x1264>
   21aec:	mov	r0, r4
   21af0:	bl	2bdf0 <flatcc_builder_end_table@@Base>
   21af4:	subs	r1, r0, #0
   21af8:	beq	21b04 <__flatcc_fb_gen_c_json_printer@@Base+0x13d0>
   21afc:	mov	r0, r4
   21b00:	bl	2b350 <flatcc_builder_offset_vector_push@@Base>
   21b04:	add	r6, r6, #1
   21b08:	b	214dc <__flatcc_fb_gen_c_json_printer@@Base+0xda8>
   21b0c:	mov	r0, r4
   21b10:	bl	2bdf0 <flatcc_builder_end_table@@Base>
   21b14:	mov	r1, r0
   21b18:	mov	r0, r4
   21b1c:	bl	2b088 <flatcc_builder_end_buffer@@Base>
   21b20:	add	r0, sp, #36	; 0x24
   21b24:	bl	20b28 <__flatcc_fb_gen_c_json_printer@@Base+0x3f4>
   21b28:	subs	r0, fp, #0
   21b2c:	beq	21384 <__flatcc_fb_gen_c_json_printer@@Base+0xc50>
   21b30:	bl	13ff0 <free@plt>
   21b34:	mov	r0, #0
   21b38:	b	21384 <__flatcc_fb_gen_c_json_printer@@Base+0xc50>
   21b3c:	andeq	r0, r2, ip, lsl #23
   21b40:	andeq	r0, r2, r4, ror fp
   21b44:	andeq	r7, r4, r7, lsr #2
   21b48:	andeq	r6, r4, r8, asr #28
   21b4c:	andeq	r6, r4, r0, lsl #29
   21b50:	andeq	r6, r4, r6, lsl #29
   21b54:	andeq	r6, r4, pc, asr #29
   21b58:	andeq	r7, r4, r2, ror #5
   21b5c:	andeq	r6, r4, ip, lsr #28
   21b60:	andeq	r6, r4, r2, lsr lr
   21b64:	andeq	r7, r4, ip, lsr #2
   21b68:	andeq	r0, r3, r1, asr #30
   21b6c:	andeq	r6, r4, r4, ror #28
   21b70:	andeq	r6, r4, ip, ror #28
   21b74:	andeq	r7, r4, r5, asr r2
   21b78:	andeq	r6, r4, ip, asr #28
   21b7c:			; <UNDEFINED> instruction: 0x000471bf
   21b80:	ldrh	r3, [r1, #8]
   21b84:	cmp	r3, #4
   21b88:	bxhi	lr
   21b8c:	push	{r4, r5, r6, lr}
   21b90:	mov	r4, r0
   21b94:	mov	r5, r1
   21b98:	ldr	r0, [r0, #40]	; 0x28
   21b9c:	ldr	r1, [r1, #16]
   21ba0:	add	r0, r0, #172	; 0xac
   21ba4:	bl	22a08 <ptr_set_find_item@@Base>
   21ba8:	cmp	r0, #0
   21bac:	popeq	{r4, r5, r6, pc}
   21bb0:	ldr	r3, [r4]
   21bb4:	cmp	r3, #0
   21bb8:	ldrne	r3, [r5, #12]
   21bbc:	movne	r2, #0
   21bc0:	ldrne	r3, [r3]
   21bc4:	bne	21be4 <__flatcc_fb_gen_c_json_printer@@Base+0x14b0>
   21bc8:	mov	r2, r3
   21bcc:	b	21bec <__flatcc_fb_gen_c_json_printer@@Base+0x14b8>
   21bd0:	ldr	r1, [r3, #4]
   21bd4:	ldr	r3, [r3]
   21bd8:	ldr	r1, [r1, #4]
   21bdc:	add	r1, r1, #1
   21be0:	add	r2, r2, r1
   21be4:	cmp	r3, #0
   21be8:	bne	21bd0 <__flatcc_fb_gen_c_json_printer@@Base+0x149c>
   21bec:	ldr	r3, [r5, #4]
   21bf0:	ldr	r1, [r4, #12]
   21bf4:	ldr	r3, [r3, #4]
   21bf8:	add	r3, r3, r1
   21bfc:	add	r3, r3, #1
   21c00:	add	r3, r3, r2
   21c04:	str	r3, [r4, #12]
   21c08:	ldrh	r3, [r5, #8]
   21c0c:	cmp	r3, #4
   21c10:	ldrls	pc, [pc, r3, lsl #2]
   21c14:	b	21c48 <__flatcc_fb_gen_c_json_printer@@Base+0x1514>
   21c18:	andeq	r1, r2, ip, lsr #24
   21c1c:	andeq	r1, r2, ip, lsr #24
   21c20:	andeq	r1, r2, r8, asr #24
   21c24:	andeq	r1, r2, ip, lsr ip
   21c28:	andeq	r1, r2, ip, lsr ip
   21c2c:	ldr	r3, [r4, #4]
   21c30:	add	r3, r3, #1
   21c34:	str	r3, [r4, #4]
   21c38:	pop	{r4, r5, r6, pc}
   21c3c:	ldr	r3, [r4, #8]
   21c40:	add	r3, r3, #1
   21c44:	str	r3, [r4, #8]
   21c48:	pop	{r4, r5, r6, pc}
   21c4c:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   21c50:	cmp	r0, #0
   21c54:	beq	21c78 <__flatcc_fb_gen_c_json_printer@@Base+0x1544>
   21c58:	ldr	r3, [pc, #356]	; 21dc4 <__flatcc_fb_gen_c_json_printer@@Base+0x1690>
   21c5c:	ldr	r2, [r0, #4]
   21c60:	str	r3, [sp, #4]
   21c64:	cmp	r2, r3
   21c68:	bne	21c78 <__flatcc_fb_gen_c_json_printer@@Base+0x1544>
   21c6c:	ldr	r3, [r0]
   21c70:	adds	r2, r0, r3
   21c74:	bne	21c8c <__flatcc_fb_gen_c_json_printer@@Base+0x1558>
   21c78:	ldr	r3, [pc, #328]	; 21dc8 <__flatcc_fb_gen_c_json_printer@@Base+0x1694>
   21c7c:	mov	r2, #237	; 0xed
   21c80:	ldr	r1, [pc, #324]	; 21dcc <__flatcc_fb_gen_c_json_printer@@Base+0x1698>
   21c84:	ldr	r0, [pc, #324]	; 21dd0 <__flatcc_fb_gen_c_json_printer@@Base+0x169c>
   21c88:	b	21cf4 <__flatcc_fb_gen_c_json_printer@@Base+0x15c0>
   21c8c:	ldr	r3, [r0, r3]
   21c90:	sub	r3, r2, r3
   21c94:	ldrh	r1, [r3]
   21c98:	cmp	r1, #5
   21c9c:	bls	21ce4 <__flatcc_fb_gen_c_json_printer@@Base+0x15b0>
   21ca0:	ldrh	r3, [r3, #4]
   21ca4:	cmp	r3, #0
   21ca8:	beq	21ce4 <__flatcc_fb_gen_c_json_printer@@Base+0x15b0>
   21cac:	add	r7, r2, r3
   21cb0:	ldr	r3, [r2, r3]
   21cb4:	mov	r8, #0
   21cb8:	mvn	r9, #3
   21cbc:	add	r3, r3, #4
   21cc0:	add	r7, r7, r3
   21cc4:	mov	sl, r7
   21cc8:	cmp	r7, #0
   21ccc:	beq	21cdc <__flatcc_fb_gen_c_json_printer@@Base+0x15a8>
   21cd0:	ldr	r3, [r7, #-4]
   21cd4:	cmp	r8, r3
   21cd8:	bcc	21cf8 <__flatcc_fb_gen_c_json_printer@@Base+0x15c4>
   21cdc:	add	sp, sp, #8
   21ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21ce4:	ldr	r3, [pc, #220]	; 21dc8 <__flatcc_fb_gen_c_json_printer@@Base+0x1694>
   21ce8:	mov	r2, #237	; 0xed
   21cec:	ldr	r1, [pc, #216]	; 21dcc <__flatcc_fb_gen_c_json_printer@@Base+0x1698>
   21cf0:	ldr	r0, [pc, #220]	; 21dd4 <__flatcc_fb_gen_c_json_printer@@Base+0x16a0>
   21cf4:	bl	1417c <__assert_fail@plt>
   21cf8:	mov	r3, sl
   21cfc:	add	sl, sl, #4
   21d00:	ldr	r1, [r3]
   21d04:	adds	r2, r3, r1
   21d08:	ldreq	r3, [pc, #200]	; 21dd8 <__flatcc_fb_gen_c_json_printer@@Base+0x16a4>
   21d0c:	moveq	r2, #224	; 0xe0
   21d10:	beq	21c80 <__flatcc_fb_gen_c_json_printer@@Base+0x154c>
   21d14:	ldr	r3, [r3, r1]
   21d18:	sub	r3, r2, r3
   21d1c:	ldrh	r1, [r3]
   21d20:	cmp	r1, #7
   21d24:	bls	21d50 <__flatcc_fb_gen_c_json_printer@@Base+0x161c>
   21d28:	ldrh	r3, [r3, #6]
   21d2c:	cmp	r3, #0
   21d30:	beq	21d50 <__flatcc_fb_gen_c_json_printer@@Base+0x161c>
   21d34:	add	r4, r2, r3
   21d38:	ldr	r3, [r2, r3]
   21d3c:	add	r3, r3, #4
   21d40:	adds	r4, r4, r3
   21d44:	bne	21d5c <__flatcc_fb_gen_c_json_printer@@Base+0x1628>
   21d48:	add	r8, r8, #1
   21d4c:	b	21cc8 <__flatcc_fb_gen_c_json_printer@@Base+0x1594>
   21d50:	ldr	r3, [pc, #128]	; 21dd8 <__flatcc_fb_gen_c_json_printer@@Base+0x16a4>
   21d54:	mov	r2, #224	; 0xe0
   21d58:	b	21cec <__flatcc_fb_gen_c_json_printer@@Base+0x15b8>
   21d5c:	ldr	r6, [r4, #-4]
   21d60:	cmp	r6, #0
   21d64:	beq	21d48 <__flatcc_fb_gen_c_json_printer@@Base+0x1614>
   21d68:	sub	r5, r6, #1
   21d6c:	lsr	r6, r6, #1
   21d70:	mov	r1, r6
   21d74:	mov	r2, r5
   21d78:	mov	r0, r4
   21d7c:	bl	20ffc <__flatcc_fb_gen_c_json_printer@@Base+0x8c8>
   21d80:	subs	r6, r6, #1
   21d84:	bcs	21d70 <__flatcc_fb_gen_c_json_printer@@Base+0x163c>
   21d88:	cmp	r5, #0
   21d8c:	beq	21d48 <__flatcc_fb_gen_c_json_printer@@Base+0x1614>
   21d90:	ldr	r2, [r4, r5, lsl #2]
   21d94:	mul	r1, r9, r5
   21d98:	mov	r0, r4
   21d9c:	ldr	r3, [r4]
   21da0:	sub	r2, r2, r1
   21da4:	add	r3, r1, r3
   21da8:	str	r2, [r4]
   21dac:	mov	r1, #0
   21db0:	str	r3, [r4, r5, lsl #2]
   21db4:	sub	r5, r5, #1
   21db8:	mov	r2, r5
   21dbc:	bl	20ffc <__flatcc_fb_gen_c_json_printer@@Base+0x8c8>
   21dc0:	b	21d88 <__flatcc_fb_gen_c_json_printer@@Base+0x1654>
   21dc4:	movtpl	r4, #9794	; 0x2642
   21dc8:	muleq	r4, ip, lr
   21dcc:			; <UNDEFINED> instruction: 0x00046fbb
   21dd0:	andeq	r7, r4, r0, asr r0
   21dd4:	andeq	r7, r4, r6, ror r0
   21dd8:			; <UNDEFINED> instruction: 0x00046eb6

00021ddc <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
   21ddc:	push	{r4, r5, r6, r7, lr}
   21de0:	sub	sp, sp, #236	; 0xec
   21de4:	mov	r7, r1
   21de8:	mov	r6, r0
   21dec:	mov	r0, sp
   21df0:	mov	r5, r3
   21df4:	mov	r4, r2
   21df8:	bl	2a90c <flatcc_builder_init@@Base>
   21dfc:	mov	r2, r7
   21e00:	mov	r1, r6
   21e04:	mov	r0, sp
   21e08:	bl	2128c <__flatcc_fb_gen_c_json_printer@@Base+0xb58>
   21e0c:	mov	r1, r4
   21e10:	mov	r0, sp
   21e14:	ldr	r2, [r5]
   21e18:	bl	2cd14 <flatcc_builder_copy_buffer@@Base>
   21e1c:	cmp	r0, #0
   21e20:	beq	21e2c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x50>
   21e24:	mov	r0, r4
   21e28:	bl	21c4c <__flatcc_fb_gen_c_json_printer@@Base+0x1518>
   21e2c:	mov	r0, sp
   21e30:	bl	2cc48 <flatcc_builder_get_buffer_size@@Base>
   21e34:	str	r0, [r5]
   21e38:	mov	r0, sp
   21e3c:	bl	2aa88 <flatcc_builder_clear@@Base>
   21e40:	mov	r0, r4
   21e44:	add	sp, sp, #236	; 0xec
   21e48:	pop	{r4, r5, r6, r7, pc}

00021e4c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
   21e4c:	push	{r4, r5, r6, lr}
   21e50:	sub	sp, sp, #232	; 0xe8
   21e54:	mov	r6, r1
   21e58:	mov	r5, r0
   21e5c:	mov	r0, sp
   21e60:	mov	r4, r2
   21e64:	bl	2a90c <flatcc_builder_init@@Base>
   21e68:	mov	r2, r6
   21e6c:	mov	r1, r5
   21e70:	mov	r0, sp
   21e74:	bl	2128c <__flatcc_fb_gen_c_json_printer@@Base+0xb58>
   21e78:	cmp	r0, #0
   21e7c:	movne	r4, #0
   21e80:	bne	21e9c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x50>
   21e84:	mov	r1, r4
   21e88:	mov	r0, sp
   21e8c:	bl	2cd5c <flatcc_builder_finalize_buffer@@Base>
   21e90:	subs	r4, r0, #0
   21e94:	beq	21e9c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x50>
   21e98:	bl	21c4c <__flatcc_fb_gen_c_json_printer@@Base+0x1518>
   21e9c:	mov	r0, sp
   21ea0:	bl	2aa88 <flatcc_builder_clear@@Base>
   21ea4:	mov	r0, r4
   21ea8:	add	sp, sp, #232	; 0xe8
   21eac:	pop	{r4, r5, r6, pc}

00021eb0 <__flatcc_fb_codegen_bfbs_to_file@@Base>:
   21eb0:	push	{r4, r5, r6, r7, r8, r9, lr}
   21eb4:	mov	r5, r0
   21eb8:	sub	sp, sp, #20
   21ebc:	mov	r6, r1
   21ec0:	ldr	r4, [r0, #216]	; 0xd8
   21ec4:	ldr	r3, [pc, #304]	; 21ffc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x14c>
   21ec8:	cmp	r4, #0
   21ecc:	moveq	r4, r3
   21ed0:	ldr	r3, [r0, #108]	; 0x6c
   21ed4:	cmp	r3, #0
   21ed8:	ldrne	r3, [pc, #288]	; 22000 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x150>
   21edc:	ldrne	r4, [r3]
   21ee0:	bne	21f68 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb8>
   21ee4:	mov	r0, r4
   21ee8:	mov	r8, #1
   21eec:	bl	140a4 <strlen@plt>
   21ef0:	ldr	r7, [r6, #160]	; 0xa0
   21ef4:	mov	r9, r0
   21ef8:	mov	r0, r7
   21efc:	bl	140a4 <strlen@plt>
   21f00:	ldr	r3, [pc, #252]	; 22004 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x154>
   21f04:	mov	r2, r7
   21f08:	mov	r1, r9
   21f0c:	stm	sp, {r3, r8}
   21f10:	mov	r3, r0
   21f14:	mov	r0, r4
   21f18:	bl	23c44 <__flatcc_fb_create_join_path_n@@Base>
   21f1c:	subs	r7, r0, #0
   21f20:	bne	21f3c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x8c>
   21f24:	ldr	r3, [pc, #220]	; 22008 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x158>
   21f28:	ldr	r0, [pc, #220]	; 2200c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15c>
   21f2c:	ldr	r1, [r3]
   21f30:	bl	14158 <fputs@plt>
   21f34:	mov	r0, r8
   21f38:	bl	14098 <exit@plt>
   21f3c:	ldr	r1, [pc, #204]	; 22010 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x160>
   21f40:	bl	13fe4 <fopen@plt>
   21f44:	subs	r4, r0, #0
   21f48:	bne	21f60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb0>
   21f4c:	ldr	r3, [pc, #180]	; 22008 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x158>
   21f50:	mov	r2, r7
   21f54:	ldr	r1, [pc, #184]	; 22014 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x164>
   21f58:	ldr	r0, [r3]
   21f5c:	bl	140bc <fprintf@plt>
   21f60:	mov	r0, r7
   21f64:	bl	13ff0 <free@plt>
   21f68:	cmp	r4, #0
   21f6c:	mvneq	r5, #0
   21f70:	beq	21fb0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x100>
   21f74:	mov	r1, r6
   21f78:	add	r2, sp, #12
   21f7c:	mov	r0, r5
   21f80:	bl	21e4c <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
   21f84:	subs	r6, r0, #0
   21f88:	bne	21fbc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x10c>
   21f8c:	ldr	r0, [pc, #132]	; 22018 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x168>
   21f90:	mvn	r5, #0
   21f94:	bl	1405c <puts@plt>
   21f98:	ldr	r3, [pc, #96]	; 22000 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x150>
   21f9c:	ldr	r3, [r3]
   21fa0:	cmp	r4, r3
   21fa4:	beq	21fb0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x100>
   21fa8:	mov	r0, r4
   21fac:	bl	14104 <fclose@plt>
   21fb0:	mov	r0, r5
   21fb4:	add	sp, sp, #20
   21fb8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   21fbc:	mov	r3, r4
   21fc0:	mov	r1, #1
   21fc4:	ldr	r2, [sp, #12]
   21fc8:	bl	14038 <fwrite@plt>
   21fcc:	ldr	r3, [sp, #12]
   21fd0:	cmp	r0, r3
   21fd4:	moveq	r5, #0
   21fd8:	beq	21ff0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x140>
   21fdc:	ldr	r3, [pc, #36]	; 22008 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x158>
   21fe0:	mvn	r5, #0
   21fe4:	ldr	r0, [pc, #48]	; 2201c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x16c>
   21fe8:	ldr	r1, [r3]
   21fec:	bl	14158 <fputs@plt>
   21ff0:	mov	r0, r6
   21ff4:	bl	13ff0 <free@plt>
   21ff8:	b	21f98 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xe8>
   21ffc:	strdeq	r2, [r3], -r7
   22000:	strheq	fp, [r5], -r4
   22004:	andeq	r0, r3, r5, lsl #18
   22008:	strheq	fp, [r5], -r0
   2200c:	ldrdeq	r0, [r3], -sp
   22010:	strdeq	r0, [r3], -ip
   22014:	andeq	r7, r4, r5, ror r3
   22018:	andeq	r7, r4, r7, lsr #7
   2201c:	andeq	r7, r4, r8, asr #7
   22020:	push	{r4, r5, r6, r7, r8, lr}
   22024:	mov	r5, r0
   22028:	mov	r7, r1
   2202c:	mov	r8, r2
   22030:	mov	r4, #0
   22034:	ldr	r6, [r0]
   22038:	ldr	r3, [r5, #12]
   2203c:	cmp	r3, r4
   22040:	popls	{r4, r5, r6, r7, r8, pc}
   22044:	ldr	r1, [r6, r4, lsl #2]
   22048:	cmp	r1, #0
   2204c:	cmpne	r1, #2
   22050:	beq	2205c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ac>
   22054:	mov	r0, r8
   22058:	blx	r7
   2205c:	add	r4, r4, #1
   22060:	b	22038 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x188>
   22064:	push	{r4, lr}
   22068:	mov	r4, r0
   2206c:	ldr	r0, [r0]
   22070:	cmp	r0, #0
   22074:	beq	2207c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cc>
   22078:	bl	13ff0 <free@plt>
   2207c:	mov	r0, r4
   22080:	mov	r2, #16
   22084:	pop	{r4, lr}
   22088:	mov	r1, #0
   2208c:	b	140d4 <memset@plt>
   22090:	push	{r0, r1, r2, r3, r4, lr}
   22094:	add	r3, sp, #8
   22098:	mov	r2, r1
   2209c:	str	r3, [sp, #4]
   220a0:	ldr	r3, [pc, #20]	; 220bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x20c>
   220a4:	str	r3, [sp]
   220a8:	mov	r3, #0
   220ac:	bl	2d37c <cmetrohash64_1@@Base>
   220b0:	ldr	r0, [sp, #8]
   220b4:	add	sp, sp, #20
   220b8:	pop	{pc}		; (ldr pc, [sp], #4)
   220bc:	svccs	0x00693b52
   220c0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   220c4:	subs	r8, r3, #0
   220c8:	str	r1, [sp]
   220cc:	bne	220e4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x234>
   220d0:	ldr	r3, [pc, #384]	; 22258 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3a8>
   220d4:	mov	r2, #114	; 0x72
   220d8:	ldr	r1, [pc, #380]	; 2225c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3ac>
   220dc:	ldr	r0, [pc, #380]	; 22260 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b0>
   220e0:	bl	1417c <__assert_fail@plt>
   220e4:	cmp	r8, #2
   220e8:	bne	22100 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x250>
   220ec:	ldr	r3, [pc, #356]	; 22258 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3a8>
   220f0:	mov	r2, #115	; 0x73
   220f4:	ldr	r1, [pc, #352]	; 2225c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3ac>
   220f8:	ldr	r0, [pc, #356]	; 22264 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b4>
   220fc:	b	220e0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x230>
   22100:	cmp	r8, #1
   22104:	bne	2211c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x26c>
   22108:	ldr	r3, [pc, #328]	; 22258 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3a8>
   2210c:	mov	r2, #116	; 0x74
   22110:	ldr	r1, [pc, #324]	; 2225c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3ac>
   22114:	ldr	r0, [pc, #332]	; 22268 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b8>
   22118:	b	220e0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x230>
   2211c:	mov	fp, r2
   22120:	mov	r3, #179	; 0xb3
   22124:	ldr	r1, [r0, #8]
   22128:	mov	r6, r0
   2212c:	ldr	r2, [r0, #12]
   22130:	mul	r3, r3, r2
   22134:	cmp	r1, r3, lsr #8
   22138:	bcc	22168 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2b8>
   2213c:	lsl	r1, r1, #1
   22140:	bl	22278 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c8>
   22144:	cmp	r0, #0
   22148:	beq	22168 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2b8>
   2214c:	ldr	r3, [pc, #280]	; 2226c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3bc>
   22150:	ldr	r2, [pc, #280]	; 22270 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c0>
   22154:	ldr	r1, [pc, #280]	; 22274 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c4>
   22158:	ldr	r0, [r3]
   2215c:	bl	140bc <fprintf@plt>
   22160:	mov	r0, #1
   22164:	bl	14098 <exit@plt>
   22168:	mov	r1, fp
   2216c:	ldr	r0, [sp]
   22170:	ldr	sl, [r6]
   22174:	ldr	r9, [r6, #12]
   22178:	bl	22090 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1e0>
   2217c:	ldr	r3, [sp, #48]	; 0x30
   22180:	add	r4, r0, #1
   22184:	sub	r9, r9, #1
   22188:	and	r2, r9, r0
   2218c:	sub	r3, r3, #2
   22190:	cmp	r3, #1
   22194:	ldrls	r3, [r6, #8]
   22198:	movhi	r7, #0
   2219c:	addls	r3, r3, #1
   221a0:	strls	r3, [r6, #8]
   221a4:	bls	221dc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x32c>
   221a8:	ldr	r5, [sl, r2, lsl #2]
   221ac:	add	r3, sl, r2, lsl #2
   221b0:	cmp	r5, #0
   221b4:	bne	2220c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x35c>
   221b8:	cmp	r7, #0
   221bc:	moveq	r7, r3
   221c0:	ldr	r3, [r6, #8]
   221c4:	add	r3, r3, #1
   221c8:	str	r3, [r6, #8]
   221cc:	str	r8, [r7]
   221d0:	b	22200 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x350>
   221d4:	and	r2, r9, r4
   221d8:	add	r4, r4, #1
   221dc:	ldr	r3, [sl, r2, lsl #2]
   221e0:	add	r1, sl, r2, lsl #2
   221e4:	subs	r5, r3, #2
   221e8:	movne	r5, #1
   221ec:	cmp	r3, #0
   221f0:	moveq	r5, #0
   221f4:	cmp	r5, #0
   221f8:	bne	221d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x324>
   221fc:	str	r8, [r1]
   22200:	mov	r0, r5
   22204:	add	sp, sp, #12
   22208:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2220c:	cmp	r5, #2
   22210:	bne	22228 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x378>
   22214:	cmp	r7, #0
   22218:	moveq	r7, r3
   2221c:	and	r2, r9, r4
   22220:	add	r4, r4, #1
   22224:	b	221a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2f8>
   22228:	mov	r2, fp
   2222c:	mov	r1, r5
   22230:	ldr	r0, [sp]
   22234:	str	r3, [sp, #4]
   22238:	bl	14164 <strncmp@plt>
   2223c:	cmp	r0, #0
   22240:	ldr	r3, [sp, #4]
   22244:	bne	2221c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x36c>
   22248:	ldr	r2, [sp, #48]	; 0x30
   2224c:	cmp	r2, #0
   22250:	streq	r8, [r3]
   22254:	b	22200 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x350>
   22258:	strdeq	r7, [r4], -r0
   2225c:	andeq	r7, r4, r8, lsl #8
   22260:	andeq	r7, r4, r8, asr r4
   22264:	andeq	r7, r4, pc, ror #8
   22268:	andeq	r7, r4, r6, lsl #9
   2226c:	strheq	fp, [r5], -r0
   22270:	muleq	r4, fp, r4
   22274:	andeq	r7, r4, lr, asr #9
   22278:	ldr	r3, [r0, #8]
   2227c:	mov	r2, #179	; 0xb3
   22280:	push	{r4, r5, r6, r7, r8, lr}
   22284:	mov	r4, r0
   22288:	sub	sp, sp, #24
   2228c:	mov	r6, #4
   22290:	ldr	r7, [r0]
   22294:	cmp	r1, r3
   22298:	movcc	r1, r3
   2229c:	mul	r3, r2, r6
   222a0:	cmp	r1, r3, lsr #8
   222a4:	bhi	22320 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x470>
   222a8:	mov	r1, #4
   222ac:	mov	r0, r6
   222b0:	bl	13fc0 <calloc@plt>
   222b4:	cmp	r0, #0
   222b8:	str	r0, [sp, #8]
   222bc:	mvneq	r0, #0
   222c0:	beq	22318 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x468>
   222c4:	mov	r5, #0
   222c8:	mov	r8, #3
   222cc:	str	r5, [sp, #12]
   222d0:	str	r5, [sp, #16]
   222d4:	str	r6, [sp, #20]
   222d8:	ldr	r3, [r4, #12]
   222dc:	cmp	r3, r5
   222e0:	bhi	22328 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x478>
   222e4:	mov	r0, r4
   222e8:	bl	22064 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b4>
   222ec:	add	r2, sp, #8
   222f0:	add	ip, sp, #24
   222f4:	mov	r3, r2
   222f8:	add	r4, r4, #8
   222fc:	ldm	r3!, {r0, r1}
   22300:	cmp	r3, ip
   22304:	mov	r2, r3
   22308:	str	r0, [r4, #-8]
   2230c:	str	r1, [r4, #-4]
   22310:	bne	222f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x444>
   22314:	mov	r0, #0
   22318:	add	sp, sp, #24
   2231c:	pop	{r4, r5, r6, r7, r8, pc}
   22320:	lsl	r6, r6, #1
   22324:	b	2229c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3ec>
   22328:	ldr	r6, [r7, r5, lsl #2]
   2232c:	cmp	r6, #0
   22330:	cmpne	r6, #2
   22334:	beq	22358 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4a8>
   22338:	mov	r0, r6
   2233c:	bl	140a4 <strlen@plt>
   22340:	mov	r2, r0
   22344:	mov	r3, r6
   22348:	str	r8, [sp]
   2234c:	mov	r1, r6
   22350:	add	r0, sp, #8
   22354:	bl	220c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x210>
   22358:	add	r5, r5, #1
   2235c:	b	222d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x428>
   22360:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   22364:	ldr	r9, [r0]
   22368:	cmp	r9, #0
   2236c:	bne	2237c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4cc>
   22370:	mov	r5, #0
   22374:	mov	r0, r5
   22378:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2237c:	ldr	r6, [r0, #12]
   22380:	mov	r7, r1
   22384:	mov	r1, r2
   22388:	mov	r0, r7
   2238c:	mov	r8, r2
   22390:	bl	22090 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1e0>
   22394:	add	r4, r0, #1
   22398:	sub	r6, r6, #1
   2239c:	and	r3, r6, r0
   223a0:	ldr	r5, [r9, r3, lsl #2]
   223a4:	cmp	r5, #0
   223a8:	beq	22370 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c0>
   223ac:	cmp	r5, #2
   223b0:	beq	223cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x51c>
   223b4:	mov	r2, r8
   223b8:	mov	r1, r5
   223bc:	mov	r0, r7
   223c0:	bl	14164 <strncmp@plt>
   223c4:	cmp	r0, #0
   223c8:	beq	22374 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c4>
   223cc:	and	r3, r6, r4
   223d0:	add	r4, r4, #1
   223d4:	b	223a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4f0>
   223d8:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   223dc:	ldr	sl, [r0]
   223e0:	cmp	sl, #0
   223e4:	bne	223f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x548>
   223e8:	mov	r6, #0
   223ec:	mov	r0, r6
   223f0:	add	sp, sp, #4
   223f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   223f8:	mov	r5, r0
   223fc:	mov	r8, r1
   22400:	ldr	r7, [r5, #12]
   22404:	mov	r1, r2
   22408:	mov	r0, r8
   2240c:	mov	r9, r2
   22410:	bl	22090 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1e0>
   22414:	add	r4, r0, #1
   22418:	sub	r7, r7, #1
   2241c:	and	r3, r7, r0
   22420:	ldr	r6, [sl, r3, lsl #2]
   22424:	add	fp, sl, r3, lsl #2
   22428:	cmp	r6, #0
   2242c:	beq	223e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x538>
   22430:	cmp	r6, #2
   22434:	beq	22468 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5b8>
   22438:	mov	r2, r9
   2243c:	mov	r1, r6
   22440:	mov	r0, r8
   22444:	bl	14164 <strncmp@plt>
   22448:	cmp	r0, #0
   2244c:	bne	22468 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5b8>
   22450:	mov	r3, #2
   22454:	str	r3, [fp]
   22458:	ldr	r3, [r5, #8]
   2245c:	sub	r3, r3, #1
   22460:	str	r3, [r5, #8]
   22464:	b	223ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x53c>
   22468:	and	r3, r4, r7
   2246c:	add	r4, r4, #1
   22470:	b	22420 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x570>

00022474 <str_set_clear@@Base>:
   22474:	b	22064 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b4>

00022478 <str_set_destroy@@Base>:
   22478:	cmp	r1, #0
   2247c:	push	{r4, lr}
   22480:	mov	r4, r0
   22484:	beq	2248c <str_set_destroy@@Base+0x14>
   22488:	bl	22020 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x170>
   2248c:	mov	r0, r4
   22490:	pop	{r4, lr}
   22494:	b	22064 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b4>

00022498 <str_set_init@@Base>:
   22498:	push	{r4, r5, r6, lr}
   2249c:	mov	r2, #179	; 0xb3
   224a0:	mov	r5, r0
   224a4:	mov	r4, #4
   224a8:	mul	r3, r2, r4
   224ac:	cmp	r1, r3, lsr #8
   224b0:	bhi	224e0 <str_set_init@@Base+0x48>
   224b4:	mov	r1, #4
   224b8:	mov	r0, r4
   224bc:	bl	13fc0 <calloc@plt>
   224c0:	cmp	r0, #0
   224c4:	str	r0, [r5]
   224c8:	movne	r0, #0
   224cc:	mvneq	r0, #0
   224d0:	strne	r4, [r5, #12]
   224d4:	strne	r0, [r5, #4]
   224d8:	strne	r0, [r5, #8]
   224dc:	pop	{r4, r5, r6, pc}
   224e0:	lsl	r4, r4, #1
   224e4:	b	224a8 <str_set_init@@Base+0x10>

000224e8 <str_set_resize@@Base>:
   224e8:	b	22278 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c8>

000224ec <str_set_insert@@Base>:
   224ec:	b	220c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x210>

000224f0 <str_set_insert_item@@Base>:
   224f0:	push	{r0, r1, r4, r5, r6, lr}
   224f4:	mov	r6, r2
   224f8:	mov	r5, r0
   224fc:	mov	r0, r1
   22500:	mov	r4, r1
   22504:	bl	140a4 <strlen@plt>
   22508:	mov	r2, r0
   2250c:	mov	r3, r4
   22510:	str	r6, [sp]
   22514:	mov	r1, r4
   22518:	mov	r0, r5
   2251c:	bl	220c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x210>
   22520:	add	sp, sp, #8
   22524:	pop	{r4, r5, r6, pc}

00022528 <str_set_find@@Base>:
   22528:	b	22360 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4b0>

0002252c <str_set_find_item@@Base>:
   2252c:	push	{r4, r5, r6, lr}
   22530:	mov	r5, r0
   22534:	mov	r0, r1
   22538:	mov	r4, r1
   2253c:	bl	140a4 <strlen@plt>
   22540:	mov	r2, r0
   22544:	mov	r1, r4
   22548:	mov	r0, r5
   2254c:	pop	{r4, r5, r6, lr}
   22550:	b	22360 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4b0>

00022554 <str_set_remove@@Base>:
   22554:	b	223d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x528>

00022558 <str_set_remove_item@@Base>:
   22558:	push	{r4, r5, r6, lr}
   2255c:	mov	r5, r0
   22560:	mov	r0, r1
   22564:	mov	r4, r1
   22568:	bl	140a4 <strlen@plt>
   2256c:	mov	r2, r0
   22570:	mov	r1, r4
   22574:	mov	r0, r5
   22578:	pop	{r4, r5, r6, lr}
   2257c:	b	223d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x528>

00022580 <str_set_visit@@Base>:
   22580:	b	22020 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x170>
   22584:	push	{r4, r5, r6, r7, r8, lr}
   22588:	mov	r5, r0
   2258c:	mov	r7, r1
   22590:	mov	r8, r2
   22594:	mov	r4, #0
   22598:	ldr	r6, [r0]
   2259c:	ldr	r3, [r5, #12]
   225a0:	cmp	r3, r4
   225a4:	popls	{r4, r5, r6, r7, r8, pc}
   225a8:	ldr	r1, [r6, r4, lsl #2]
   225ac:	cmp	r1, #0
   225b0:	cmpne	r1, #2
   225b4:	beq	225c0 <str_set_visit@@Base+0x40>
   225b8:	mov	r0, r8
   225bc:	blx	r7
   225c0:	add	r4, r4, #1
   225c4:	b	2259c <str_set_visit@@Base+0x1c>
   225c8:	push	{r4, lr}
   225cc:	mov	r4, r0
   225d0:	ldr	r0, [r0]
   225d4:	cmp	r0, #0
   225d8:	beq	225e0 <str_set_visit@@Base+0x60>
   225dc:	bl	13ff0 <free@plt>
   225e0:	mov	r0, r4
   225e4:	mov	r2, #16
   225e8:	pop	{r4, lr}
   225ec:	mov	r1, #0
   225f0:	b	140d4 <memset@plt>
   225f4:	push	{r0, r1, r2, r3, r4, lr}
   225f8:	add	r3, sp, #8
   225fc:	mov	r2, #4
   22600:	str	r3, [sp, #4]
   22604:	ldr	r3, [pc, #20]	; 22620 <str_set_visit@@Base+0xa0>
   22608:	str	r3, [sp]
   2260c:	mov	r3, #0
   22610:	bl	2d37c <cmetrohash64_1@@Base>
   22614:	ldr	r0, [sp, #8]
   22618:	add	sp, sp, #20
   2261c:	pop	{pc}		; (ldr pc, [sp], #4)
   22620:	svccs	0x00693b52
   22624:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   22628:	subs	r5, r2, #0
   2262c:	bne	22644 <str_set_visit@@Base+0xc4>
   22630:	ldr	r3, [pc, #352]	; 22798 <str_set_visit@@Base+0x218>
   22634:	mov	r2, #114	; 0x72
   22638:	ldr	r1, [pc, #348]	; 2279c <str_set_visit@@Base+0x21c>
   2263c:	ldr	r0, [pc, #348]	; 227a0 <str_set_visit@@Base+0x220>
   22640:	bl	1417c <__assert_fail@plt>
   22644:	cmp	r5, #2
   22648:	bne	22660 <str_set_visit@@Base+0xe0>
   2264c:	ldr	r3, [pc, #324]	; 22798 <str_set_visit@@Base+0x218>
   22650:	mov	r2, #115	; 0x73
   22654:	ldr	r1, [pc, #320]	; 2279c <str_set_visit@@Base+0x21c>
   22658:	ldr	r0, [pc, #324]	; 227a4 <str_set_visit@@Base+0x224>
   2265c:	b	22640 <str_set_visit@@Base+0xc0>
   22660:	cmp	r5, #1
   22664:	bne	2267c <str_set_visit@@Base+0xfc>
   22668:	ldr	r3, [pc, #296]	; 22798 <str_set_visit@@Base+0x218>
   2266c:	mov	r2, #116	; 0x74
   22670:	ldr	r1, [pc, #292]	; 2279c <str_set_visit@@Base+0x21c>
   22674:	ldr	r0, [pc, #300]	; 227a8 <str_set_visit@@Base+0x228>
   22678:	b	22640 <str_set_visit@@Base+0xc0>
   2267c:	ldr	r2, [r0, #12]
   22680:	mov	r6, r1
   22684:	mov	r7, r3
   22688:	mov	r3, #179	; 0xb3
   2268c:	mov	r4, r0
   22690:	ldr	r1, [r0, #8]
   22694:	mul	r3, r3, r2
   22698:	cmp	r1, r3, lsr #8
   2269c:	bcc	226cc <str_set_visit@@Base+0x14c>
   226a0:	lsl	r1, r1, #1
   226a4:	bl	227b8 <str_set_visit@@Base+0x238>
   226a8:	cmp	r0, #0
   226ac:	beq	226cc <str_set_visit@@Base+0x14c>
   226b0:	ldr	r3, [pc, #244]	; 227ac <str_set_visit@@Base+0x22c>
   226b4:	ldr	r2, [pc, #244]	; 227b0 <str_set_visit@@Base+0x230>
   226b8:	ldr	r1, [pc, #244]	; 227b4 <str_set_visit@@Base+0x234>
   226bc:	ldr	r0, [r3]
   226c0:	bl	140bc <fprintf@plt>
   226c4:	mov	r0, #1
   226c8:	bl	14098 <exit@plt>
   226cc:	add	r0, sp, #4
   226d0:	str	r6, [sp, #4]
   226d4:	ldr	r9, [r4]
   226d8:	ldr	r8, [r4, #12]
   226dc:	bl	225f4 <str_set_visit@@Base+0x74>
   226e0:	sub	r3, r7, #2
   226e4:	cmp	r3, #1
   226e8:	add	r3, r0, #1
   226ec:	ldrls	r2, [r4, #8]
   226f0:	movhi	r2, #0
   226f4:	sub	r8, r8, #1
   226f8:	and	r1, r8, r0
   226fc:	addls	r2, r2, #1
   22700:	strls	r2, [r4, #8]
   22704:	bls	2273c <str_set_visit@@Base+0x1bc>
   22708:	ldr	r0, [r9, r1, lsl #2]
   2270c:	add	ip, r9, r1, lsl #2
   22710:	cmp	r0, #0
   22714:	bne	22764 <str_set_visit@@Base+0x1e4>
   22718:	ldr	r3, [r4, #8]
   2271c:	cmp	r2, #0
   22720:	moveq	r2, ip
   22724:	add	r3, r3, #1
   22728:	str	r3, [r4, #8]
   2272c:	str	r5, [r2]
   22730:	b	22790 <str_set_visit@@Base+0x210>
   22734:	and	r1, r8, r3
   22738:	add	r3, r3, #1
   2273c:	ldr	r2, [r9, r1, lsl #2]
   22740:	add	ip, r9, r1, lsl #2
   22744:	subs	r0, r2, #2
   22748:	movne	r0, #1
   2274c:	cmp	r2, #0
   22750:	moveq	r0, #0
   22754:	cmp	r0, #0
   22758:	bne	22734 <str_set_visit@@Base+0x1b4>
   2275c:	str	r5, [ip]
   22760:	b	22790 <str_set_visit@@Base+0x210>
   22764:	cmp	r0, #2
   22768:	bne	22780 <str_set_visit@@Base+0x200>
   2276c:	cmp	r2, #0
   22770:	moveq	r2, ip
   22774:	and	r1, r8, r3
   22778:	add	r3, r3, #1
   2277c:	b	22708 <str_set_visit@@Base+0x188>
   22780:	cmp	r6, r0
   22784:	bne	22774 <str_set_visit@@Base+0x1f4>
   22788:	cmp	r7, #0
   2278c:	beq	2275c <str_set_visit@@Base+0x1dc>
   22790:	add	sp, sp, #12
   22794:	pop	{r4, r5, r6, r7, r8, r9, pc}
   22798:	andeq	r7, r4, r8, ror #9
   2279c:	andeq	r7, r4, r8, lsl #8
   227a0:	andeq	r7, r4, r8, asr r4
   227a4:	andeq	r7, r4, pc, ror #8
   227a8:	andeq	r7, r4, r6, lsl #9
   227ac:	strheq	fp, [r5], -r0
   227b0:	muleq	r4, fp, r4
   227b4:	andeq	r7, r4, lr, asr #9
   227b8:	ldr	r3, [r0, #8]
   227bc:	mov	r2, #179	; 0xb3
   227c0:	push	{r4, r5, r6, r7, lr}
   227c4:	mov	r4, r0
   227c8:	sub	sp, sp, #20
   227cc:	mov	r6, #4
   227d0:	ldr	r7, [r0]
   227d4:	cmp	r1, r3
   227d8:	movcc	r1, r3
   227dc:	mul	r3, r2, r6
   227e0:	cmp	r1, r3, lsr #8
   227e4:	bhi	2285c <str_set_visit@@Base+0x2dc>
   227e8:	mov	r1, #4
   227ec:	mov	r0, r6
   227f0:	bl	13fc0 <calloc@plt>
   227f4:	cmp	r0, #0
   227f8:	str	r0, [sp]
   227fc:	mvneq	r0, #0
   22800:	beq	22854 <str_set_visit@@Base+0x2d4>
   22804:	mov	r5, #0
   22808:	str	r5, [sp, #4]
   2280c:	str	r5, [sp, #8]
   22810:	str	r6, [sp, #12]
   22814:	ldr	r3, [r4, #12]
   22818:	cmp	r3, r5
   2281c:	bhi	22864 <str_set_visit@@Base+0x2e4>
   22820:	mov	r0, r4
   22824:	bl	225c8 <str_set_visit@@Base+0x48>
   22828:	mov	r2, sp
   2282c:	add	ip, sp, #16
   22830:	mov	r3, r2
   22834:	add	r4, r4, #8
   22838:	ldm	r3!, {r0, r1}
   2283c:	cmp	r3, ip
   22840:	mov	r2, r3
   22844:	str	r0, [r4, #-8]
   22848:	str	r1, [r4, #-4]
   2284c:	bne	22830 <str_set_visit@@Base+0x2b0>
   22850:	mov	r0, #0
   22854:	add	sp, sp, #20
   22858:	pop	{r4, r5, r6, r7, pc}
   2285c:	lsl	r6, r6, #1
   22860:	b	227dc <str_set_visit@@Base+0x25c>
   22864:	ldr	r2, [r7, r5, lsl #2]
   22868:	cmp	r2, #0
   2286c:	cmpne	r2, #2
   22870:	beq	22884 <str_set_visit@@Base+0x304>
   22874:	mov	r3, #3
   22878:	mov	r1, r2
   2287c:	mov	r0, sp
   22880:	bl	22624 <str_set_visit@@Base+0xa4>
   22884:	add	r5, r5, #1
   22888:	b	22814 <str_set_visit@@Base+0x294>
   2288c:	push	{r0, r1, r4, r5, r6, lr}
   22890:	ldr	r6, [r0]
   22894:	cmp	r6, #0
   22898:	bne	228a8 <str_set_visit@@Base+0x328>
   2289c:	mov	r0, #0
   228a0:	add	sp, sp, #8
   228a4:	pop	{r4, r5, r6, pc}
   228a8:	ldr	r4, [r0, #12]
   228ac:	add	r0, sp, #4
   228b0:	mov	r5, r1
   228b4:	str	r1, [sp, #4]
   228b8:	bl	225f4 <str_set_visit@@Base+0x74>
   228bc:	add	r3, r0, #1
   228c0:	sub	r4, r4, #1
   228c4:	and	r2, r4, r0
   228c8:	ldr	r0, [r6, r2, lsl #2]
   228cc:	cmp	r0, #0
   228d0:	beq	2289c <str_set_visit@@Base+0x31c>
   228d4:	cmp	r0, #2
   228d8:	beq	228e4 <str_set_visit@@Base+0x364>
   228dc:	cmp	r5, r0
   228e0:	beq	228a0 <str_set_visit@@Base+0x320>
   228e4:	and	r2, r4, r3
   228e8:	add	r3, r3, #1
   228ec:	b	228c8 <str_set_visit@@Base+0x348>
   228f0:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   228f4:	ldr	r7, [r0]
   228f8:	cmp	r7, #0
   228fc:	bne	2290c <str_set_visit@@Base+0x38c>
   22900:	mov	r0, #0
   22904:	add	sp, sp, #12
   22908:	pop	{r4, r5, r6, r7, pc}
   2290c:	mov	r4, r0
   22910:	add	r0, sp, #4
   22914:	str	r1, [sp, #4]
   22918:	ldr	r5, [r4, #12]
   2291c:	mov	r6, r1
   22920:	bl	225f4 <str_set_visit@@Base+0x74>
   22924:	add	r3, r0, #1
   22928:	sub	r5, r5, #1
   2292c:	and	r2, r5, r0
   22930:	ldr	r0, [r7, r2, lsl #2]
   22934:	add	r1, r7, r2, lsl #2
   22938:	cmp	r0, #0
   2293c:	beq	22900 <str_set_visit@@Base+0x380>
   22940:	cmp	r0, #2
   22944:	beq	22968 <str_set_visit@@Base+0x3e8>
   22948:	cmp	r6, r0
   2294c:	bne	22968 <str_set_visit@@Base+0x3e8>
   22950:	mov	r3, #2
   22954:	str	r3, [r1]
   22958:	ldr	r3, [r4, #8]
   2295c:	sub	r3, r3, #1
   22960:	str	r3, [r4, #8]
   22964:	b	22904 <str_set_visit@@Base+0x384>
   22968:	and	r2, r5, r3
   2296c:	add	r3, r3, #1
   22970:	b	22930 <str_set_visit@@Base+0x3b0>

00022974 <ptr_set_clear@@Base>:
   22974:	b	225c8 <str_set_visit@@Base+0x48>

00022978 <ptr_set_destroy@@Base>:
   22978:	cmp	r1, #0
   2297c:	push	{r4, lr}
   22980:	mov	r4, r0
   22984:	beq	2298c <ptr_set_destroy@@Base+0x14>
   22988:	bl	22584 <str_set_visit@@Base+0x4>
   2298c:	mov	r0, r4
   22990:	pop	{r4, lr}
   22994:	b	225c8 <str_set_visit@@Base+0x48>

00022998 <ptr_set_init@@Base>:
   22998:	push	{r4, r5, r6, lr}
   2299c:	mov	r2, #179	; 0xb3
   229a0:	mov	r5, r0
   229a4:	mov	r4, #4
   229a8:	mul	r3, r2, r4
   229ac:	cmp	r1, r3, lsr #8
   229b0:	bhi	229e0 <ptr_set_init@@Base+0x48>
   229b4:	mov	r1, #4
   229b8:	mov	r0, r4
   229bc:	bl	13fc0 <calloc@plt>
   229c0:	cmp	r0, #0
   229c4:	str	r0, [r5]
   229c8:	movne	r0, #0
   229cc:	mvneq	r0, #0
   229d0:	strne	r4, [r5, #12]
   229d4:	strne	r0, [r5, #4]
   229d8:	strne	r0, [r5, #8]
   229dc:	pop	{r4, r5, r6, pc}
   229e0:	lsl	r4, r4, #1
   229e4:	b	229a8 <ptr_set_init@@Base+0x10>

000229e8 <ptr_set_resize@@Base>:
   229e8:	b	227b8 <str_set_visit@@Base+0x238>

000229ec <ptr_set_insert@@Base>:
   229ec:	mov	r2, r3
   229f0:	ldr	r3, [sp]
   229f4:	b	22624 <str_set_visit@@Base+0xa4>

000229f8 <ptr_set_insert_item@@Base>:
   229f8:	mov	r3, r2
   229fc:	mov	r2, r1
   22a00:	b	22624 <str_set_visit@@Base+0xa4>

00022a04 <ptr_set_find@@Base>:
   22a04:	b	2288c <str_set_visit@@Base+0x30c>

00022a08 <ptr_set_find_item@@Base>:
   22a08:	b	2288c <str_set_visit@@Base+0x30c>

00022a0c <ptr_set_remove@@Base>:
   22a0c:	b	228f0 <str_set_visit@@Base+0x370>

00022a10 <ptr_set_remove_item@@Base>:
   22a10:	b	228f0 <str_set_visit@@Base+0x370>

00022a14 <ptr_set_visit@@Base>:
   22a14:	b	22584 <str_set_visit@@Base+0x4>
   22a18:	push	{r4, r5, r6, r7, r8, lr}
   22a1c:	mov	r5, r0
   22a20:	mov	r7, r1
   22a24:	mov	r8, r2
   22a28:	mov	r4, #0
   22a2c:	ldr	r6, [r0]
   22a30:	ldr	r3, [r5, #12]
   22a34:	cmp	r3, r4
   22a38:	popls	{r4, r5, r6, r7, r8, pc}
   22a3c:	ldr	r1, [r6, r4, lsl #2]
   22a40:	cmp	r1, #0
   22a44:	cmpne	r1, #2
   22a48:	beq	22a54 <ptr_set_visit@@Base+0x40>
   22a4c:	mov	r0, r8
   22a50:	blx	r7
   22a54:	add	r4, r4, #1
   22a58:	b	22a30 <ptr_set_visit@@Base+0x1c>
   22a5c:	push	{r4, lr}
   22a60:	mov	r4, r0
   22a64:	ldr	r0, [r0]
   22a68:	cmp	r0, #0
   22a6c:	beq	22a74 <ptr_set_visit@@Base+0x60>
   22a70:	bl	13ff0 <free@plt>
   22a74:	mov	r0, r4
   22a78:	mov	r2, #16
   22a7c:	pop	{r4, lr}
   22a80:	mov	r1, #0
   22a84:	b	140d4 <memset@plt>
   22a88:	push	{r0, r1, r2, r3, r4, lr}
   22a8c:	add	r3, sp, #8
   22a90:	mov	r2, r1
   22a94:	str	r3, [sp, #4]
   22a98:	ldr	r3, [pc, #20]	; 22ab4 <ptr_set_visit@@Base+0xa0>
   22a9c:	str	r3, [sp]
   22aa0:	mov	r3, #0
   22aa4:	bl	2d37c <cmetrohash64_1@@Base>
   22aa8:	ldr	r0, [sp, #8]
   22aac:	add	sp, sp, #20
   22ab0:	pop	{pc}		; (ldr pc, [sp], #4)
   22ab4:	svccs	0x00693b52
   22ab8:	ldr	r3, [r2, #4]
   22abc:	ldr	r2, [r3, #4]
   22ac0:	cmp	r1, r2
   22ac4:	bne	22ae4 <ptr_set_visit@@Base+0xd0>
   22ac8:	mov	r2, r1
   22acc:	push	{r4, lr}
   22ad0:	ldr	r1, [r3]
   22ad4:	bl	14014 <memcmp@plt>
   22ad8:	clz	r0, r0
   22adc:	lsr	r0, r0, #5
   22ae0:	pop	{r4, pc}
   22ae4:	mov	r0, #0
   22ae8:	bx	lr
   22aec:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22af0:	subs	r8, r3, #0
   22af4:	str	r1, [sp]
   22af8:	bne	22b10 <ptr_set_visit@@Base+0xfc>
   22afc:	ldr	r3, [pc, #384]	; 22c84 <ptr_set_visit@@Base+0x270>
   22b00:	mov	r2, #114	; 0x72
   22b04:	ldr	r1, [pc, #380]	; 22c88 <ptr_set_visit@@Base+0x274>
   22b08:	ldr	r0, [pc, #380]	; 22c8c <ptr_set_visit@@Base+0x278>
   22b0c:	bl	1417c <__assert_fail@plt>
   22b10:	cmp	r8, #2
   22b14:	bne	22b2c <ptr_set_visit@@Base+0x118>
   22b18:	ldr	r3, [pc, #356]	; 22c84 <ptr_set_visit@@Base+0x270>
   22b1c:	mov	r2, #115	; 0x73
   22b20:	ldr	r1, [pc, #352]	; 22c88 <ptr_set_visit@@Base+0x274>
   22b24:	ldr	r0, [pc, #356]	; 22c90 <ptr_set_visit@@Base+0x27c>
   22b28:	b	22b0c <ptr_set_visit@@Base+0xf8>
   22b2c:	cmp	r8, #1
   22b30:	bne	22b48 <ptr_set_visit@@Base+0x134>
   22b34:	ldr	r3, [pc, #328]	; 22c84 <ptr_set_visit@@Base+0x270>
   22b38:	mov	r2, #116	; 0x74
   22b3c:	ldr	r1, [pc, #324]	; 22c88 <ptr_set_visit@@Base+0x274>
   22b40:	ldr	r0, [pc, #332]	; 22c94 <ptr_set_visit@@Base+0x280>
   22b44:	b	22b0c <ptr_set_visit@@Base+0xf8>
   22b48:	mov	fp, r2
   22b4c:	mov	r3, #179	; 0xb3
   22b50:	ldr	r1, [r0, #8]
   22b54:	mov	r6, r0
   22b58:	ldr	r2, [r0, #12]
   22b5c:	mul	r3, r3, r2
   22b60:	cmp	r1, r3, lsr #8
   22b64:	bcc	22b94 <ptr_set_visit@@Base+0x180>
   22b68:	lsl	r1, r1, #1
   22b6c:	bl	22ca4 <ptr_set_visit@@Base+0x290>
   22b70:	cmp	r0, #0
   22b74:	beq	22b94 <ptr_set_visit@@Base+0x180>
   22b78:	ldr	r3, [pc, #280]	; 22c98 <ptr_set_visit@@Base+0x284>
   22b7c:	ldr	r2, [pc, #280]	; 22c9c <ptr_set_visit@@Base+0x288>
   22b80:	ldr	r1, [pc, #280]	; 22ca0 <ptr_set_visit@@Base+0x28c>
   22b84:	ldr	r0, [r3]
   22b88:	bl	140bc <fprintf@plt>
   22b8c:	mov	r0, #1
   22b90:	bl	14098 <exit@plt>
   22b94:	mov	r1, fp
   22b98:	ldr	r0, [sp]
   22b9c:	ldr	sl, [r6]
   22ba0:	ldr	r9, [r6, #12]
   22ba4:	bl	22a88 <ptr_set_visit@@Base+0x74>
   22ba8:	ldr	r3, [sp, #48]	; 0x30
   22bac:	add	r4, r0, #1
   22bb0:	sub	r9, r9, #1
   22bb4:	and	r2, r9, r0
   22bb8:	sub	r3, r3, #2
   22bbc:	cmp	r3, #1
   22bc0:	ldrls	r3, [r6, #8]
   22bc4:	movhi	r7, #0
   22bc8:	addls	r3, r3, #1
   22bcc:	strls	r3, [r6, #8]
   22bd0:	bls	22c08 <ptr_set_visit@@Base+0x1f4>
   22bd4:	ldr	r5, [sl, r2, lsl #2]
   22bd8:	add	r3, sl, r2, lsl #2
   22bdc:	cmp	r5, #0
   22be0:	bne	22c38 <ptr_set_visit@@Base+0x224>
   22be4:	cmp	r7, #0
   22be8:	moveq	r7, r3
   22bec:	ldr	r3, [r6, #8]
   22bf0:	add	r3, r3, #1
   22bf4:	str	r3, [r6, #8]
   22bf8:	str	r8, [r7]
   22bfc:	b	22c2c <ptr_set_visit@@Base+0x218>
   22c00:	and	r2, r9, r4
   22c04:	add	r4, r4, #1
   22c08:	ldr	r3, [sl, r2, lsl #2]
   22c0c:	add	r1, sl, r2, lsl #2
   22c10:	subs	r5, r3, #2
   22c14:	movne	r5, #1
   22c18:	cmp	r3, #0
   22c1c:	moveq	r5, #0
   22c20:	cmp	r5, #0
   22c24:	bne	22c00 <ptr_set_visit@@Base+0x1ec>
   22c28:	str	r8, [r1]
   22c2c:	mov	r0, r5
   22c30:	add	sp, sp, #12
   22c34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22c38:	cmp	r5, #2
   22c3c:	bne	22c54 <ptr_set_visit@@Base+0x240>
   22c40:	cmp	r7, #0
   22c44:	moveq	r7, r3
   22c48:	and	r2, r9, r4
   22c4c:	add	r4, r4, #1
   22c50:	b	22bd4 <ptr_set_visit@@Base+0x1c0>
   22c54:	mov	r2, r5
   22c58:	mov	r1, fp
   22c5c:	ldr	r0, [sp]
   22c60:	str	r3, [sp, #4]
   22c64:	bl	22ab8 <ptr_set_visit@@Base+0xa4>
   22c68:	cmp	r0, #0
   22c6c:	ldr	r3, [sp, #4]
   22c70:	beq	22c48 <ptr_set_visit@@Base+0x234>
   22c74:	ldr	r2, [sp, #48]	; 0x30
   22c78:	cmp	r2, #0
   22c7c:	streq	r8, [r3]
   22c80:	b	22c2c <ptr_set_visit@@Base+0x218>
   22c84:	andeq	r7, r4, r0, lsl #10
   22c88:	andeq	r7, r4, r8, lsl #8
   22c8c:	andeq	r7, r4, r8, asr r4
   22c90:	andeq	r7, r4, pc, ror #8
   22c94:	andeq	r7, r4, r6, lsl #9
   22c98:	strheq	fp, [r5], -r0
   22c9c:	muleq	r4, fp, r4
   22ca0:	andeq	r7, r4, lr, asr #9
   22ca4:	ldr	r3, [r0, #8]
   22ca8:	mov	r2, #179	; 0xb3
   22cac:	push	{r4, r5, r6, r7, lr}
   22cb0:	mov	r4, r0
   22cb4:	sub	sp, sp, #28
   22cb8:	mov	r6, #4
   22cbc:	ldr	r7, [r0]
   22cc0:	cmp	r1, r3
   22cc4:	movcc	r1, r3
   22cc8:	mul	r3, r2, r6
   22ccc:	cmp	r1, r3, lsr #8
   22cd0:	bhi	22d4c <ptr_set_visit@@Base+0x338>
   22cd4:	mov	r1, #4
   22cd8:	mov	r0, r6
   22cdc:	bl	13fc0 <calloc@plt>
   22ce0:	cmp	r0, #0
   22ce4:	str	r0, [sp, #8]
   22ce8:	mvneq	r0, #0
   22cec:	beq	22d44 <ptr_set_visit@@Base+0x330>
   22cf0:	mov	r5, #0
   22cf4:	str	r6, [sp, #20]
   22cf8:	mov	r6, #3
   22cfc:	str	r5, [sp, #12]
   22d00:	str	r5, [sp, #16]
   22d04:	ldr	r3, [r4, #12]
   22d08:	cmp	r3, r5
   22d0c:	bhi	22d54 <ptr_set_visit@@Base+0x340>
   22d10:	mov	r0, r4
   22d14:	bl	22a5c <ptr_set_visit@@Base+0x48>
   22d18:	add	r2, sp, #8
   22d1c:	add	ip, sp, #24
   22d20:	mov	r3, r2
   22d24:	add	r4, r4, #8
   22d28:	ldm	r3!, {r0, r1}
   22d2c:	cmp	r3, ip
   22d30:	mov	r2, r3
   22d34:	str	r0, [r4, #-8]
   22d38:	str	r1, [r4, #-4]
   22d3c:	bne	22d20 <ptr_set_visit@@Base+0x30c>
   22d40:	mov	r0, #0
   22d44:	add	sp, sp, #28
   22d48:	pop	{r4, r5, r6, r7, pc}
   22d4c:	lsl	r6, r6, #1
   22d50:	b	22cc8 <ptr_set_visit@@Base+0x2b4>
   22d54:	ldr	r3, [r7, r5, lsl #2]
   22d58:	cmp	r3, #0
   22d5c:	cmpne	r3, #2
   22d60:	beq	22d78 <ptr_set_visit@@Base+0x364>
   22d64:	ldr	r1, [r3, #4]
   22d68:	add	r0, sp, #8
   22d6c:	str	r6, [sp]
   22d70:	ldm	r1, {r1, r2}
   22d74:	bl	22aec <ptr_set_visit@@Base+0xd8>
   22d78:	add	r5, r5, #1
   22d7c:	b	22d04 <ptr_set_visit@@Base+0x2f0>
   22d80:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   22d84:	ldr	r9, [r0]
   22d88:	cmp	r9, #0
   22d8c:	bne	22d9c <ptr_set_visit@@Base+0x388>
   22d90:	mov	r5, #0
   22d94:	mov	r0, r5
   22d98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22d9c:	ldr	r6, [r0, #12]
   22da0:	mov	r7, r1
   22da4:	mov	r1, r2
   22da8:	mov	r0, r7
   22dac:	mov	r8, r2
   22db0:	bl	22a88 <ptr_set_visit@@Base+0x74>
   22db4:	add	r4, r0, #1
   22db8:	sub	r6, r6, #1
   22dbc:	and	r3, r6, r0
   22dc0:	ldr	r5, [r9, r3, lsl #2]
   22dc4:	cmp	r5, #0
   22dc8:	beq	22d90 <ptr_set_visit@@Base+0x37c>
   22dcc:	cmp	r5, #2
   22dd0:	beq	22dec <ptr_set_visit@@Base+0x3d8>
   22dd4:	mov	r2, r5
   22dd8:	mov	r1, r8
   22ddc:	mov	r0, r7
   22de0:	bl	22ab8 <ptr_set_visit@@Base+0xa4>
   22de4:	cmp	r0, #0
   22de8:	bne	22d94 <ptr_set_visit@@Base+0x380>
   22dec:	and	r3, r6, r4
   22df0:	add	r4, r4, #1
   22df4:	b	22dc0 <ptr_set_visit@@Base+0x3ac>
   22df8:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22dfc:	ldr	sl, [r0]
   22e00:	cmp	sl, #0
   22e04:	bne	22e18 <ptr_set_visit@@Base+0x404>
   22e08:	mov	r6, #0
   22e0c:	mov	r0, r6
   22e10:	add	sp, sp, #4
   22e14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22e18:	mov	r5, r0
   22e1c:	mov	r8, r1
   22e20:	ldr	r7, [r5, #12]
   22e24:	mov	r1, r2
   22e28:	mov	r0, r8
   22e2c:	mov	r9, r2
   22e30:	bl	22a88 <ptr_set_visit@@Base+0x74>
   22e34:	add	r4, r0, #1
   22e38:	sub	r7, r7, #1
   22e3c:	and	r3, r7, r0
   22e40:	ldr	r6, [sl, r3, lsl #2]
   22e44:	add	fp, sl, r3, lsl #2
   22e48:	cmp	r6, #0
   22e4c:	beq	22e08 <ptr_set_visit@@Base+0x3f4>
   22e50:	cmp	r6, #2
   22e54:	beq	22e88 <ptr_set_visit@@Base+0x474>
   22e58:	mov	r2, r6
   22e5c:	mov	r1, r9
   22e60:	mov	r0, r8
   22e64:	bl	22ab8 <ptr_set_visit@@Base+0xa4>
   22e68:	cmp	r0, #0
   22e6c:	beq	22e88 <ptr_set_visit@@Base+0x474>
   22e70:	mov	r3, #2
   22e74:	str	r3, [fp]
   22e78:	ldr	r3, [r5, #8]
   22e7c:	sub	r3, r3, #1
   22e80:	str	r3, [r5, #8]
   22e84:	b	22e0c <ptr_set_visit@@Base+0x3f8>
   22e88:	and	r3, r4, r7
   22e8c:	add	r4, r4, #1
   22e90:	b	22e40 <ptr_set_visit@@Base+0x42c>

00022e94 <fb_symbol_table_clear@@Base>:
   22e94:	b	22a5c <ptr_set_visit@@Base+0x48>

00022e98 <fb_symbol_table_destroy@@Base>:
   22e98:	cmp	r1, #0
   22e9c:	push	{r4, lr}
   22ea0:	mov	r4, r0
   22ea4:	beq	22eac <fb_symbol_table_destroy@@Base+0x14>
   22ea8:	bl	22a18 <ptr_set_visit@@Base+0x4>
   22eac:	mov	r0, r4
   22eb0:	pop	{r4, lr}
   22eb4:	b	22a5c <ptr_set_visit@@Base+0x48>

00022eb8 <fb_symbol_table_init@@Base>:
   22eb8:	push	{r4, r5, r6, lr}
   22ebc:	mov	r2, #179	; 0xb3
   22ec0:	mov	r5, r0
   22ec4:	mov	r4, #4
   22ec8:	mul	r3, r2, r4
   22ecc:	cmp	r1, r3, lsr #8
   22ed0:	bhi	22f00 <fb_symbol_table_init@@Base+0x48>
   22ed4:	mov	r1, #4
   22ed8:	mov	r0, r4
   22edc:	bl	13fc0 <calloc@plt>
   22ee0:	cmp	r0, #0
   22ee4:	str	r0, [r5]
   22ee8:	movne	r0, #0
   22eec:	mvneq	r0, #0
   22ef0:	strne	r4, [r5, #12]
   22ef4:	strne	r0, [r5, #4]
   22ef8:	strne	r0, [r5, #8]
   22efc:	pop	{r4, r5, r6, pc}
   22f00:	lsl	r4, r4, #1
   22f04:	b	22ec8 <fb_symbol_table_init@@Base+0x10>

00022f08 <fb_symbol_table_resize@@Base>:
   22f08:	b	22ca4 <ptr_set_visit@@Base+0x290>

00022f0c <fb_symbol_table_insert@@Base>:
   22f0c:	b	22aec <ptr_set_visit@@Base+0xd8>

00022f10 <fb_symbol_table_insert_item@@Base>:
   22f10:	ldr	ip, [r1, #4]
   22f14:	mov	r3, r1
   22f18:	push	{r0, r1, r2, lr}
   22f1c:	str	r2, [sp]
   22f20:	ldm	ip, {r1, r2}
   22f24:	bl	22aec <ptr_set_visit@@Base+0xd8>
   22f28:	add	sp, sp, #12
   22f2c:	pop	{pc}		; (ldr pc, [sp], #4)

00022f30 <fb_symbol_table_find@@Base>:
   22f30:	b	22d80 <ptr_set_visit@@Base+0x36c>

00022f34 <fb_symbol_table_find_item@@Base>:
   22f34:	ldr	r3, [r1, #4]
   22f38:	ldm	r3, {r1, r2}
   22f3c:	b	22d80 <ptr_set_visit@@Base+0x36c>

00022f40 <fb_symbol_table_remove@@Base>:
   22f40:	b	22df8 <ptr_set_visit@@Base+0x3e4>

00022f44 <fb_symbol_table_remove_item@@Base>:
   22f44:	ldr	r3, [r1, #4]
   22f48:	ldm	r3, {r1, r2}
   22f4c:	b	22df8 <ptr_set_visit@@Base+0x3e4>

00022f50 <fb_symbol_table_visit@@Base>:
   22f50:	b	22a18 <ptr_set_visit@@Base+0x4>
   22f54:	push	{r4, r5, r6, r7, r8, lr}
   22f58:	mov	r5, r0
   22f5c:	mov	r7, r1
   22f60:	mov	r8, r2
   22f64:	mov	r4, #0
   22f68:	ldr	r6, [r0]
   22f6c:	ldr	r3, [r5, #12]
   22f70:	cmp	r3, r4
   22f74:	popls	{r4, r5, r6, r7, r8, pc}
   22f78:	ldr	r1, [r6, r4, lsl #2]
   22f7c:	cmp	r1, #0
   22f80:	cmpne	r1, #2
   22f84:	beq	22f90 <fb_symbol_table_visit@@Base+0x40>
   22f88:	mov	r0, r8
   22f8c:	blx	r7
   22f90:	add	r4, r4, #1
   22f94:	b	22f6c <fb_symbol_table_visit@@Base+0x1c>
   22f98:	push	{r4, lr}
   22f9c:	mov	r4, r0
   22fa0:	ldr	r0, [r0]
   22fa4:	cmp	r0, #0
   22fa8:	beq	22fb0 <fb_symbol_table_visit@@Base+0x60>
   22fac:	bl	13ff0 <free@plt>
   22fb0:	mov	r0, r4
   22fb4:	mov	r2, #16
   22fb8:	pop	{r4, lr}
   22fbc:	mov	r1, #0
   22fc0:	b	140d4 <memset@plt>
   22fc4:	cmp	r1, #0
   22fc8:	push	{r4, r5, r6, lr}
   22fcc:	mov	r5, r0
   22fd0:	mov	r4, r2
   22fd4:	movle	r6, r1
   22fd8:	ble	23034 <fb_symbol_table_visit@@Base+0xe4>
   22fdc:	cmp	r4, #0
   22fe0:	bne	23050 <fb_symbol_table_visit@@Base+0x100>
   22fe4:	mov	r0, #0
   22fe8:	pop	{r4, r5, r6, pc}
   22fec:	ldr	r3, [r4, #4]
   22ff0:	ldr	r1, [r5, #4]
   22ff4:	ldr	r2, [r3, #4]
   22ff8:	ldr	r0, [r1, #4]
   22ffc:	cmp	r2, r0
   23000:	bne	22fe4 <fb_symbol_table_visit@@Base+0x94>
   23004:	ldr	r1, [r1]
   23008:	ldr	r0, [r3]
   2300c:	bl	14164 <strncmp@plt>
   23010:	cmp	r0, #0
   23014:	bne	22fe4 <fb_symbol_table_visit@@Base+0x94>
   23018:	adds	r6, r6, #1
   2301c:	ldr	r4, [r4]
   23020:	ldr	r5, [r5]
   23024:	bne	23034 <fb_symbol_table_visit@@Base+0xe4>
   23028:	clz	r0, r4
   2302c:	lsr	r0, r0, #5
   23030:	pop	{r4, r5, r6, pc}
   23034:	cmp	r4, #0
   23038:	cmpne	r5, #0
   2303c:	bne	22fec <fb_symbol_table_visit@@Base+0x9c>
   23040:	orrs	r3, r4, r5
   23044:	moveq	r0, #1
   23048:	movne	r0, #0
   2304c:	pop	{r4, r5, r6, pc}
   23050:	ldr	r3, [r4, #4]
   23054:	ldm	r3, {r0, r3}
   23058:	cmp	r3, r1
   2305c:	bhi	22fe4 <fb_symbol_table_visit@@Base+0x94>
   23060:	mov	r2, #0
   23064:	cmp	r3, r2
   23068:	bne	23080 <fb_symbol_table_visit@@Base+0x130>
   2306c:	cmp	r3, r1
   23070:	bne	23098 <fb_symbol_table_visit@@Base+0x148>
   23074:	ldr	r0, [r4]
   23078:	clz	r0, r0
   2307c:	b	2302c <fb_symbol_table_visit@@Base+0xdc>
   23080:	ldrb	lr, [r0, r2]
   23084:	ldrb	ip, [r5, r2]
   23088:	cmp	lr, ip
   2308c:	bne	22fe4 <fb_symbol_table_visit@@Base+0x94>
   23090:	add	r2, r2, #1
   23094:	b	23064 <fb_symbol_table_visit@@Base+0x114>
   23098:	ldrb	r2, [r5, r3]
   2309c:	cmp	r2, #46	; 0x2e
   230a0:	bne	22fe4 <fb_symbol_table_visit@@Base+0x94>
   230a4:	mvn	r2, r3
   230a8:	add	r3, r3, #1
   230ac:	ldr	r4, [r4]
   230b0:	add	r1, r1, r2
   230b4:	add	r5, r5, r3
   230b8:	b	22fdc <fb_symbol_table_visit@@Base+0x8c>
   230bc:	cmp	r1, #0
   230c0:	push	{r4, r5, r6, r7, r8, lr}
   230c4:	mov	ip, r0
   230c8:	ble	23154 <fb_symbol_table_visit@@Base+0x204>
   230cc:	mov	r0, #0
   230d0:	ldr	r7, [pc, #236]	; 231c4 <fb_symbol_table_visit@@Base+0x274>
   230d4:	ldr	r5, [pc, #236]	; 231c8 <fb_symbol_table_visit@@Base+0x278>
   230d8:	ldr	r6, [pc, #236]	; 231cc <fb_symbol_table_visit@@Base+0x27c>
   230dc:	mov	r3, #0
   230e0:	cmp	r3, r1
   230e4:	bne	2316c <fb_symbol_table_visit@@Base+0x21c>
   230e8:	sub	r4, r3, #1
   230ec:	mov	lr, ip
   230f0:	add	r4, ip, r4
   230f4:	mov	r2, r7
   230f8:	b	23188 <fb_symbol_table_visit@@Base+0x238>
   230fc:	ldr	r3, [ip, #4]
   23100:	ldm	r3, {r1, r2}
   23104:	mov	r3, r4
   23108:	sub	r2, r2, #1
   2310c:	add	r2, r1, r2
   23110:	cmp	r2, r1
   23114:	beq	23124 <fb_symbol_table_visit@@Base+0x1d4>
   23118:	ldrb	r7, [r1], #1
   2311c:	cmp	r7, #0
   23120:	bne	23148 <fb_symbol_table_visit@@Base+0x1f8>
   23124:	eor	r2, r0, r3
   23128:	adds	lr, lr, #1
   2312c:	ldr	ip, [ip]
   23130:	eor	r2, r2, r5
   23134:	mul	r0, r6, r2
   23138:	popeq	{r4, r5, r6, r7, r8, pc}
   2313c:	cmp	ip, #0
   23140:	bne	230fc <fb_symbol_table_visit@@Base+0x1ac>
   23144:	pop	{r4, r5, r6, r7, r8, pc}
   23148:	add	r3, r3, r3, lsl #5
   2314c:	eor	r3, r3, r7
   23150:	b	23110 <fb_symbol_table_visit@@Base+0x1c0>
   23154:	mov	lr, r1
   23158:	mov	r0, #0
   2315c:	ldr	r4, [pc, #96]	; 231c4 <fb_symbol_table_visit@@Base+0x274>
   23160:	ldr	r5, [pc, #96]	; 231c8 <fb_symbol_table_visit@@Base+0x278>
   23164:	ldr	r6, [pc, #96]	; 231cc <fb_symbol_table_visit@@Base+0x27c>
   23168:	b	2313c <fb_symbol_table_visit@@Base+0x1ec>
   2316c:	ldrb	r2, [ip, r3]
   23170:	cmp	r2, #46	; 0x2e
   23174:	beq	230e8 <fb_symbol_table_visit@@Base+0x198>
   23178:	add	r3, r3, #1
   2317c:	b	230e0 <fb_symbol_table_visit@@Base+0x190>
   23180:	add	r2, r2, r2, lsl #5
   23184:	eor	r2, r2, r8
   23188:	cmp	r4, lr
   2318c:	beq	2319c <fb_symbol_table_visit@@Base+0x24c>
   23190:	ldrb	r8, [lr], #1
   23194:	cmp	r8, #0
   23198:	bne	23180 <fb_symbol_table_visit@@Base+0x230>
   2319c:	eor	r2, r2, r0
   231a0:	cmp	r1, r3
   231a4:	eor	r2, r2, r5
   231a8:	mul	r0, r6, r2
   231ac:	popeq	{r4, r5, r6, r7, r8, pc}
   231b0:	mvn	r2, r3
   231b4:	add	r3, r3, #1
   231b8:	add	r1, r1, r2
   231bc:	add	ip, ip, r3
   231c0:	b	230dc <fb_symbol_table_visit@@Base+0x18c>
   231c4:	svccs	0x00692e57
   231c8:	svccs	0x00693b52
   231cc:			; <UNDEFINED> instruction: 0x9e3779b1
   231d0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   231d4:	subs	r8, r3, #0
   231d8:	str	r1, [sp]
   231dc:	bne	231f4 <fb_symbol_table_visit@@Base+0x2a4>
   231e0:	ldr	r3, [pc, #384]	; 23368 <fb_symbol_table_visit@@Base+0x418>
   231e4:	mov	r2, #114	; 0x72
   231e8:	ldr	r1, [pc, #380]	; 2336c <fb_symbol_table_visit@@Base+0x41c>
   231ec:	ldr	r0, [pc, #380]	; 23370 <fb_symbol_table_visit@@Base+0x420>
   231f0:	bl	1417c <__assert_fail@plt>
   231f4:	cmp	r8, #2
   231f8:	bne	23210 <fb_symbol_table_visit@@Base+0x2c0>
   231fc:	ldr	r3, [pc, #356]	; 23368 <fb_symbol_table_visit@@Base+0x418>
   23200:	mov	r2, #115	; 0x73
   23204:	ldr	r1, [pc, #352]	; 2336c <fb_symbol_table_visit@@Base+0x41c>
   23208:	ldr	r0, [pc, #356]	; 23374 <fb_symbol_table_visit@@Base+0x424>
   2320c:	b	231f0 <fb_symbol_table_visit@@Base+0x2a0>
   23210:	cmp	r8, #1
   23214:	bne	2322c <fb_symbol_table_visit@@Base+0x2dc>
   23218:	ldr	r3, [pc, #328]	; 23368 <fb_symbol_table_visit@@Base+0x418>
   2321c:	mov	r2, #116	; 0x74
   23220:	ldr	r1, [pc, #324]	; 2336c <fb_symbol_table_visit@@Base+0x41c>
   23224:	ldr	r0, [pc, #332]	; 23378 <fb_symbol_table_visit@@Base+0x428>
   23228:	b	231f0 <fb_symbol_table_visit@@Base+0x2a0>
   2322c:	mov	fp, r2
   23230:	mov	r3, #179	; 0xb3
   23234:	ldr	r1, [r0, #8]
   23238:	mov	r6, r0
   2323c:	ldr	r2, [r0, #12]
   23240:	mul	r3, r3, r2
   23244:	cmp	r1, r3, lsr #8
   23248:	bcc	23278 <fb_symbol_table_visit@@Base+0x328>
   2324c:	lsl	r1, r1, #1
   23250:	bl	23388 <fb_symbol_table_visit@@Base+0x438>
   23254:	cmp	r0, #0
   23258:	beq	23278 <fb_symbol_table_visit@@Base+0x328>
   2325c:	ldr	r3, [pc, #280]	; 2337c <fb_symbol_table_visit@@Base+0x42c>
   23260:	ldr	r2, [pc, #280]	; 23380 <fb_symbol_table_visit@@Base+0x430>
   23264:	ldr	r1, [pc, #280]	; 23384 <fb_symbol_table_visit@@Base+0x434>
   23268:	ldr	r0, [r3]
   2326c:	bl	140bc <fprintf@plt>
   23270:	mov	r0, #1
   23274:	bl	14098 <exit@plt>
   23278:	mov	r1, fp
   2327c:	ldr	r0, [sp]
   23280:	bl	230bc <fb_symbol_table_visit@@Base+0x16c>
   23284:	ldr	r3, [sp, #48]	; 0x30
   23288:	add	r4, r0, #1
   2328c:	ldr	sl, [r6]
   23290:	ldr	r9, [r6, #12]
   23294:	sub	r3, r3, #2
   23298:	cmp	r3, #1
   2329c:	ldrls	r3, [r6, #8]
   232a0:	movhi	r7, #0
   232a4:	sub	r9, r9, #1
   232a8:	and	r2, r9, r0
   232ac:	addls	r3, r3, #1
   232b0:	strls	r3, [r6, #8]
   232b4:	bls	232ec <fb_symbol_table_visit@@Base+0x39c>
   232b8:	ldr	r5, [sl, r2, lsl #2]
   232bc:	add	r3, sl, r2, lsl #2
   232c0:	cmp	r5, #0
   232c4:	bne	2331c <fb_symbol_table_visit@@Base+0x3cc>
   232c8:	cmp	r7, #0
   232cc:	moveq	r7, r3
   232d0:	ldr	r3, [r6, #8]
   232d4:	add	r3, r3, #1
   232d8:	str	r3, [r6, #8]
   232dc:	str	r8, [r7]
   232e0:	b	23310 <fb_symbol_table_visit@@Base+0x3c0>
   232e4:	and	r2, r9, r4
   232e8:	add	r4, r4, #1
   232ec:	ldr	r3, [sl, r2, lsl #2]
   232f0:	add	r1, sl, r2, lsl #2
   232f4:	subs	r5, r3, #2
   232f8:	movne	r5, #1
   232fc:	cmp	r3, #0
   23300:	moveq	r5, #0
   23304:	cmp	r5, #0
   23308:	bne	232e4 <fb_symbol_table_visit@@Base+0x394>
   2330c:	str	r8, [r1]
   23310:	mov	r0, r5
   23314:	add	sp, sp, #12
   23318:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2331c:	cmp	r5, #2
   23320:	bne	23338 <fb_symbol_table_visit@@Base+0x3e8>
   23324:	cmp	r7, #0
   23328:	moveq	r7, r3
   2332c:	and	r2, r9, r4
   23330:	add	r4, r4, #1
   23334:	b	232b8 <fb_symbol_table_visit@@Base+0x368>
   23338:	mov	r1, fp
   2333c:	ldr	r2, [r5]
   23340:	str	r3, [sp, #4]
   23344:	ldr	r0, [sp]
   23348:	bl	22fc4 <fb_symbol_table_visit@@Base+0x74>
   2334c:	cmp	r0, #0
   23350:	ldr	r3, [sp, #4]
   23354:	beq	2332c <fb_symbol_table_visit@@Base+0x3dc>
   23358:	ldr	r2, [sp, #48]	; 0x30
   2335c:	cmp	r2, #0
   23360:	streq	r8, [r3]
   23364:	b	23310 <fb_symbol_table_visit@@Base+0x3c0>
   23368:	andeq	r7, r4, r8, lsl r5
   2336c:	andeq	r7, r4, r8, lsl #8
   23370:	andeq	r7, r4, r8, asr r4
   23374:	andeq	r7, r4, pc, ror #8
   23378:	andeq	r7, r4, r6, lsl #9
   2337c:	strheq	fp, [r5], -r0
   23380:	muleq	r4, fp, r4
   23384:	andeq	r7, r4, lr, asr #9
   23388:	ldr	r3, [r0, #8]
   2338c:	mov	r2, #179	; 0xb3
   23390:	push	{r4, r5, r6, r7, lr}
   23394:	mov	r4, r0
   23398:	sub	sp, sp, #28
   2339c:	mov	r6, #4
   233a0:	ldr	r7, [r0]
   233a4:	cmp	r1, r3
   233a8:	movcc	r1, r3
   233ac:	mul	r3, r2, r6
   233b0:	cmp	r1, r3, lsr #8
   233b4:	bhi	23430 <fb_symbol_table_visit@@Base+0x4e0>
   233b8:	mov	r1, #4
   233bc:	mov	r0, r6
   233c0:	bl	13fc0 <calloc@plt>
   233c4:	cmp	r0, #0
   233c8:	str	r0, [sp, #8]
   233cc:	mvneq	r0, #0
   233d0:	beq	23428 <fb_symbol_table_visit@@Base+0x4d8>
   233d4:	mov	r5, #0
   233d8:	str	r6, [sp, #20]
   233dc:	mov	r6, #3
   233e0:	str	r5, [sp, #12]
   233e4:	str	r5, [sp, #16]
   233e8:	ldr	r3, [r4, #12]
   233ec:	cmp	r3, r5
   233f0:	bhi	23438 <fb_symbol_table_visit@@Base+0x4e8>
   233f4:	mov	r0, r4
   233f8:	bl	22f98 <fb_symbol_table_visit@@Base+0x48>
   233fc:	add	r2, sp, #8
   23400:	add	ip, sp, #24
   23404:	mov	r3, r2
   23408:	add	r4, r4, #8
   2340c:	ldm	r3!, {r0, r1}
   23410:	cmp	r3, ip
   23414:	mov	r2, r3
   23418:	str	r0, [r4, #-8]
   2341c:	str	r1, [r4, #-4]
   23420:	bne	23404 <fb_symbol_table_visit@@Base+0x4b4>
   23424:	mov	r0, #0
   23428:	add	sp, sp, #28
   2342c:	pop	{r4, r5, r6, r7, pc}
   23430:	lsl	r6, r6, #1
   23434:	b	233ac <fb_symbol_table_visit@@Base+0x45c>
   23438:	ldr	r3, [r7, r5, lsl #2]
   2343c:	cmp	r3, #0
   23440:	cmpne	r3, #2
   23444:	beq	2345c <fb_symbol_table_visit@@Base+0x50c>
   23448:	mov	r2, #0
   2344c:	add	r0, sp, #8
   23450:	str	r6, [sp]
   23454:	ldr	r1, [r3]
   23458:	bl	231d0 <fb_symbol_table_visit@@Base+0x280>
   2345c:	add	r5, r5, #1
   23460:	b	233e8 <fb_symbol_table_visit@@Base+0x498>
   23464:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   23468:	ldr	r9, [r0]
   2346c:	cmp	r9, #0
   23470:	moveq	r5, r9
   23474:	beq	234a8 <fb_symbol_table_visit@@Base+0x558>
   23478:	ldr	r6, [r0, #12]
   2347c:	mov	r7, r1
   23480:	mov	r1, r2
   23484:	mov	r0, r7
   23488:	mov	r8, r2
   2348c:	bl	230bc <fb_symbol_table_visit@@Base+0x16c>
   23490:	add	r4, r0, #1
   23494:	sub	r6, r6, #1
   23498:	and	r3, r6, r0
   2349c:	ldr	r5, [r9, r3, lsl #2]
   234a0:	cmp	r5, #0
   234a4:	bne	234b0 <fb_symbol_table_visit@@Base+0x560>
   234a8:	mov	r0, r5
   234ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   234b0:	cmp	r5, #2
   234b4:	beq	234d0 <fb_symbol_table_visit@@Base+0x580>
   234b8:	mov	r1, r8
   234bc:	mov	r0, r7
   234c0:	ldr	r2, [r5]
   234c4:	bl	22fc4 <fb_symbol_table_visit@@Base+0x74>
   234c8:	cmp	r0, #0
   234cc:	bne	234a8 <fb_symbol_table_visit@@Base+0x558>
   234d0:	and	r3, r6, r4
   234d4:	add	r4, r4, #1
   234d8:	b	2349c <fb_symbol_table_visit@@Base+0x54c>
   234dc:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   234e0:	ldr	r7, [r0]
   234e4:	cmp	r7, #0
   234e8:	moveq	r6, r7
   234ec:	beq	2355c <fb_symbol_table_visit@@Base+0x60c>
   234f0:	mov	r9, r1
   234f4:	mov	r5, r0
   234f8:	mov	r1, r2
   234fc:	mov	r0, r9
   23500:	mov	sl, r2
   23504:	bl	230bc <fb_symbol_table_visit@@Base+0x16c>
   23508:	ldr	r8, [r5, #12]
   2350c:	add	r4, r0, #1
   23510:	sub	r8, r8, #1
   23514:	and	r3, r8, r0
   23518:	ldr	r6, [r7, r3, lsl #2]
   2351c:	add	fp, r7, r3, lsl #2
   23520:	cmp	r6, #0
   23524:	beq	2355c <fb_symbol_table_visit@@Base+0x60c>
   23528:	cmp	r6, #2
   2352c:	beq	23568 <fb_symbol_table_visit@@Base+0x618>
   23530:	mov	r1, sl
   23534:	mov	r0, r9
   23538:	ldr	r2, [r6]
   2353c:	bl	22fc4 <fb_symbol_table_visit@@Base+0x74>
   23540:	cmp	r0, #0
   23544:	beq	23568 <fb_symbol_table_visit@@Base+0x618>
   23548:	mov	r3, #2
   2354c:	str	r3, [fp]
   23550:	ldr	r3, [r5, #8]
   23554:	sub	r3, r3, #1
   23558:	str	r3, [r5, #8]
   2355c:	mov	r0, r6
   23560:	add	sp, sp, #4
   23564:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23568:	and	r3, r4, r8
   2356c:	add	r4, r4, #1
   23570:	b	23518 <fb_symbol_table_visit@@Base+0x5c8>

00023574 <fb_scope_table_clear@@Base>:
   23574:	b	22f98 <fb_symbol_table_visit@@Base+0x48>

00023578 <fb_scope_table_destroy@@Base>:
   23578:	cmp	r1, #0
   2357c:	push	{r4, lr}
   23580:	mov	r4, r0
   23584:	beq	2358c <fb_scope_table_destroy@@Base+0x14>
   23588:	bl	22f54 <fb_symbol_table_visit@@Base+0x4>
   2358c:	mov	r0, r4
   23590:	pop	{r4, lr}
   23594:	b	22f98 <fb_symbol_table_visit@@Base+0x48>

00023598 <fb_scope_table_init@@Base>:
   23598:	push	{r4, r5, r6, lr}
   2359c:	mov	r2, #179	; 0xb3
   235a0:	mov	r5, r0
   235a4:	mov	r4, #4
   235a8:	mul	r3, r2, r4
   235ac:	cmp	r1, r3, lsr #8
   235b0:	bhi	235e0 <fb_scope_table_init@@Base+0x48>
   235b4:	mov	r1, #4
   235b8:	mov	r0, r4
   235bc:	bl	13fc0 <calloc@plt>
   235c0:	cmp	r0, #0
   235c4:	str	r0, [r5]
   235c8:	movne	r0, #0
   235cc:	mvneq	r0, #0
   235d0:	strne	r4, [r5, #12]
   235d4:	strne	r0, [r5, #4]
   235d8:	strne	r0, [r5, #8]
   235dc:	pop	{r4, r5, r6, pc}
   235e0:	lsl	r4, r4, #1
   235e4:	b	235a8 <fb_scope_table_init@@Base+0x10>

000235e8 <fb_scope_table_resize@@Base>:
   235e8:	b	23388 <fb_symbol_table_visit@@Base+0x438>

000235ec <fb_scope_table_insert@@Base>:
   235ec:	b	231d0 <fb_symbol_table_visit@@Base+0x280>

000235f0 <fb_scope_table_insert_item@@Base>:
   235f0:	push	{r0, r1, r2, lr}
   235f4:	mov	r3, r1
   235f8:	ldr	r1, [r1]
   235fc:	str	r2, [sp]
   23600:	mov	r2, #0
   23604:	bl	231d0 <fb_symbol_table_visit@@Base+0x280>
   23608:	add	sp, sp, #12
   2360c:	pop	{pc}		; (ldr pc, [sp], #4)

00023610 <fb_scope_table_find@@Base>:
   23610:	b	23464 <fb_symbol_table_visit@@Base+0x514>

00023614 <fb_scope_table_find_item@@Base>:
   23614:	mov	r2, #0
   23618:	ldr	r1, [r1]
   2361c:	b	23464 <fb_symbol_table_visit@@Base+0x514>

00023620 <fb_scope_table_remove@@Base>:
   23620:	b	234dc <fb_symbol_table_visit@@Base+0x58c>

00023624 <fb_scope_table_remove_item@@Base>:
   23624:	mov	r2, #0
   23628:	ldr	r1, [r1]
   2362c:	b	234dc <fb_symbol_table_visit@@Base+0x58c>

00023630 <fb_scope_table_visit@@Base>:
   23630:	b	22f54 <fb_symbol_table_visit@@Base+0x4>
   23634:	push	{r4, r5, r6, r7, r8, lr}
   23638:	mov	r5, r0
   2363c:	mov	r7, r1
   23640:	mov	r8, r2
   23644:	mov	r4, #0
   23648:	ldr	r6, [r0]
   2364c:	ldr	r3, [r5, #12]
   23650:	cmp	r3, r4
   23654:	popls	{r4, r5, r6, r7, r8, pc}
   23658:	ldr	r1, [r6, r4, lsl #2]
   2365c:	cmp	r1, #0
   23660:	cmpne	r1, #2
   23664:	beq	23670 <fb_scope_table_visit@@Base+0x40>
   23668:	mov	r0, r8
   2366c:	blx	r7
   23670:	add	r4, r4, #1
   23674:	b	2364c <fb_scope_table_visit@@Base+0x1c>
   23678:	push	{r4, lr}
   2367c:	mov	r4, r0
   23680:	ldr	r0, [r0]
   23684:	cmp	r0, #0
   23688:	beq	23690 <fb_scope_table_visit@@Base+0x60>
   2368c:	bl	13ff0 <free@plt>
   23690:	mov	r0, r4
   23694:	mov	r2, #16
   23698:	pop	{r4, lr}
   2369c:	mov	r1, #0
   236a0:	b	140d4 <memset@plt>
   236a4:	push	{r0, r1, r2, r3, r4, lr}
   236a8:	add	r3, sp, #8
   236ac:	mov	r2, r1
   236b0:	str	r3, [sp, #4]
   236b4:	ldr	r3, [pc, #20]	; 236d0 <fb_scope_table_visit@@Base+0xa0>
   236b8:	str	r3, [sp]
   236bc:	mov	r3, #0
   236c0:	bl	2d37c <cmetrohash64_1@@Base>
   236c4:	ldr	r0, [sp, #8]
   236c8:	add	sp, sp, #20
   236cc:	pop	{pc}		; (ldr pc, [sp], #4)
   236d0:	svccs	0x00693b52
   236d4:	ldr	ip, [r2, #148]	; 0x94
   236d8:	cmp	ip, r1
   236dc:	bne	23700 <fb_scope_table_visit@@Base+0xd0>
   236e0:	mov	r3, r2
   236e4:	push	{r4, lr}
   236e8:	mov	r2, ip
   236ec:	ldr	r1, [r3, #144]	; 0x90
   236f0:	bl	14014 <memcmp@plt>
   236f4:	clz	r0, r0
   236f8:	lsr	r0, r0, #5
   236fc:	pop	{r4, pc}
   23700:	mov	r0, #0
   23704:	bx	lr
   23708:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2370c:	subs	r8, r3, #0
   23710:	str	r1, [sp]
   23714:	bne	2372c <fb_scope_table_visit@@Base+0xfc>
   23718:	ldr	r3, [pc, #384]	; 238a0 <fb_scope_table_visit@@Base+0x270>
   2371c:	mov	r2, #114	; 0x72
   23720:	ldr	r1, [pc, #380]	; 238a4 <fb_scope_table_visit@@Base+0x274>
   23724:	ldr	r0, [pc, #380]	; 238a8 <fb_scope_table_visit@@Base+0x278>
   23728:	bl	1417c <__assert_fail@plt>
   2372c:	cmp	r8, #2
   23730:	bne	23748 <fb_scope_table_visit@@Base+0x118>
   23734:	ldr	r3, [pc, #356]	; 238a0 <fb_scope_table_visit@@Base+0x270>
   23738:	mov	r2, #115	; 0x73
   2373c:	ldr	r1, [pc, #352]	; 238a4 <fb_scope_table_visit@@Base+0x274>
   23740:	ldr	r0, [pc, #356]	; 238ac <fb_scope_table_visit@@Base+0x27c>
   23744:	b	23728 <fb_scope_table_visit@@Base+0xf8>
   23748:	cmp	r8, #1
   2374c:	bne	23764 <fb_scope_table_visit@@Base+0x134>
   23750:	ldr	r3, [pc, #328]	; 238a0 <fb_scope_table_visit@@Base+0x270>
   23754:	mov	r2, #116	; 0x74
   23758:	ldr	r1, [pc, #324]	; 238a4 <fb_scope_table_visit@@Base+0x274>
   2375c:	ldr	r0, [pc, #332]	; 238b0 <fb_scope_table_visit@@Base+0x280>
   23760:	b	23728 <fb_scope_table_visit@@Base+0xf8>
   23764:	mov	fp, r2
   23768:	mov	r3, #179	; 0xb3
   2376c:	ldr	r1, [r0, #8]
   23770:	mov	r6, r0
   23774:	ldr	r2, [r0, #12]
   23778:	mul	r3, r3, r2
   2377c:	cmp	r1, r3, lsr #8
   23780:	bcc	237b0 <fb_scope_table_visit@@Base+0x180>
   23784:	lsl	r1, r1, #1
   23788:	bl	238c0 <fb_scope_table_visit@@Base+0x290>
   2378c:	cmp	r0, #0
   23790:	beq	237b0 <fb_scope_table_visit@@Base+0x180>
   23794:	ldr	r3, [pc, #280]	; 238b4 <fb_scope_table_visit@@Base+0x284>
   23798:	ldr	r2, [pc, #280]	; 238b8 <fb_scope_table_visit@@Base+0x288>
   2379c:	ldr	r1, [pc, #280]	; 238bc <fb_scope_table_visit@@Base+0x28c>
   237a0:	ldr	r0, [r3]
   237a4:	bl	140bc <fprintf@plt>
   237a8:	mov	r0, #1
   237ac:	bl	14098 <exit@plt>
   237b0:	mov	r1, fp
   237b4:	ldr	r0, [sp]
   237b8:	ldr	sl, [r6]
   237bc:	ldr	r9, [r6, #12]
   237c0:	bl	236a4 <fb_scope_table_visit@@Base+0x74>
   237c4:	ldr	r3, [sp, #48]	; 0x30
   237c8:	add	r4, r0, #1
   237cc:	sub	r9, r9, #1
   237d0:	and	r2, r9, r0
   237d4:	sub	r3, r3, #2
   237d8:	cmp	r3, #1
   237dc:	ldrls	r3, [r6, #8]
   237e0:	movhi	r7, #0
   237e4:	addls	r3, r3, #1
   237e8:	strls	r3, [r6, #8]
   237ec:	bls	23824 <fb_scope_table_visit@@Base+0x1f4>
   237f0:	ldr	r5, [sl, r2, lsl #2]
   237f4:	add	r3, sl, r2, lsl #2
   237f8:	cmp	r5, #0
   237fc:	bne	23854 <fb_scope_table_visit@@Base+0x224>
   23800:	cmp	r7, #0
   23804:	moveq	r7, r3
   23808:	ldr	r3, [r6, #8]
   2380c:	add	r3, r3, #1
   23810:	str	r3, [r6, #8]
   23814:	str	r8, [r7]
   23818:	b	23848 <fb_scope_table_visit@@Base+0x218>
   2381c:	and	r2, r9, r4
   23820:	add	r4, r4, #1
   23824:	ldr	r3, [sl, r2, lsl #2]
   23828:	add	r1, sl, r2, lsl #2
   2382c:	subs	r5, r3, #2
   23830:	movne	r5, #1
   23834:	cmp	r3, #0
   23838:	moveq	r5, #0
   2383c:	cmp	r5, #0
   23840:	bne	2381c <fb_scope_table_visit@@Base+0x1ec>
   23844:	str	r8, [r1]
   23848:	mov	r0, r5
   2384c:	add	sp, sp, #12
   23850:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23854:	cmp	r5, #2
   23858:	bne	23870 <fb_scope_table_visit@@Base+0x240>
   2385c:	cmp	r7, #0
   23860:	moveq	r7, r3
   23864:	and	r2, r9, r4
   23868:	add	r4, r4, #1
   2386c:	b	237f0 <fb_scope_table_visit@@Base+0x1c0>
   23870:	mov	r2, r5
   23874:	mov	r1, fp
   23878:	ldr	r0, [sp]
   2387c:	str	r3, [sp, #4]
   23880:	bl	236d4 <fb_scope_table_visit@@Base+0xa4>
   23884:	cmp	r0, #0
   23888:	ldr	r3, [sp, #4]
   2388c:	beq	23864 <fb_scope_table_visit@@Base+0x234>
   23890:	ldr	r2, [sp, #48]	; 0x30
   23894:	cmp	r2, #0
   23898:	streq	r8, [r3]
   2389c:	b	23848 <fb_scope_table_visit@@Base+0x218>
   238a0:	andeq	r7, r4, r0, lsr r5
   238a4:	andeq	r7, r4, r8, lsl #8
   238a8:	andeq	r7, r4, r8, asr r4
   238ac:	andeq	r7, r4, pc, ror #8
   238b0:	andeq	r7, r4, r6, lsl #9
   238b4:	strheq	fp, [r5], -r0
   238b8:	muleq	r4, fp, r4
   238bc:	andeq	r7, r4, lr, asr #9
   238c0:	ldr	r3, [r0, #8]
   238c4:	mov	r2, #179	; 0xb3
   238c8:	push	{r4, r5, r6, r7, lr}
   238cc:	mov	r4, r0
   238d0:	sub	sp, sp, #28
   238d4:	mov	r6, #4
   238d8:	ldr	r7, [r0]
   238dc:	cmp	r1, r3
   238e0:	movcc	r1, r3
   238e4:	mul	r3, r2, r6
   238e8:	cmp	r1, r3, lsr #8
   238ec:	bhi	23968 <fb_scope_table_visit@@Base+0x338>
   238f0:	mov	r1, #4
   238f4:	mov	r0, r6
   238f8:	bl	13fc0 <calloc@plt>
   238fc:	cmp	r0, #0
   23900:	str	r0, [sp, #8]
   23904:	mvneq	r0, #0
   23908:	beq	23960 <fb_scope_table_visit@@Base+0x330>
   2390c:	mov	r5, #0
   23910:	str	r6, [sp, #20]
   23914:	mov	r6, #3
   23918:	str	r5, [sp, #12]
   2391c:	str	r5, [sp, #16]
   23920:	ldr	r3, [r4, #12]
   23924:	cmp	r3, r5
   23928:	bhi	23970 <fb_scope_table_visit@@Base+0x340>
   2392c:	mov	r0, r4
   23930:	bl	23678 <fb_scope_table_visit@@Base+0x48>
   23934:	add	r2, sp, #8
   23938:	add	ip, sp, #24
   2393c:	mov	r3, r2
   23940:	add	r4, r4, #8
   23944:	ldm	r3!, {r0, r1}
   23948:	cmp	r3, ip
   2394c:	mov	r2, r3
   23950:	str	r0, [r4, #-8]
   23954:	str	r1, [r4, #-4]
   23958:	bne	2393c <fb_scope_table_visit@@Base+0x30c>
   2395c:	mov	r0, #0
   23960:	add	sp, sp, #28
   23964:	pop	{r4, r5, r6, r7, pc}
   23968:	lsl	r6, r6, #1
   2396c:	b	238e4 <fb_scope_table_visit@@Base+0x2b4>
   23970:	ldr	r3, [r7, r5, lsl #2]
   23974:	cmp	r3, #0
   23978:	cmpne	r3, #2
   2397c:	beq	23994 <fb_scope_table_visit@@Base+0x364>
   23980:	add	r0, sp, #8
   23984:	str	r6, [sp]
   23988:	ldr	r1, [r3, #144]	; 0x90
   2398c:	ldr	r2, [r3, #148]	; 0x94
   23990:	bl	23708 <fb_scope_table_visit@@Base+0xd8>
   23994:	add	r5, r5, #1
   23998:	b	23920 <fb_scope_table_visit@@Base+0x2f0>
   2399c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   239a0:	ldr	r9, [r0]
   239a4:	cmp	r9, #0
   239a8:	bne	239b8 <fb_scope_table_visit@@Base+0x388>
   239ac:	mov	r5, #0
   239b0:	mov	r0, r5
   239b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   239b8:	ldr	r6, [r0, #12]
   239bc:	mov	r7, r1
   239c0:	mov	r1, r2
   239c4:	mov	r0, r7
   239c8:	mov	r8, r2
   239cc:	bl	236a4 <fb_scope_table_visit@@Base+0x74>
   239d0:	add	r4, r0, #1
   239d4:	sub	r6, r6, #1
   239d8:	and	r3, r6, r0
   239dc:	ldr	r5, [r9, r3, lsl #2]
   239e0:	cmp	r5, #0
   239e4:	beq	239ac <fb_scope_table_visit@@Base+0x37c>
   239e8:	cmp	r5, #2
   239ec:	beq	23a08 <fb_scope_table_visit@@Base+0x3d8>
   239f0:	mov	r2, r5
   239f4:	mov	r1, r8
   239f8:	mov	r0, r7
   239fc:	bl	236d4 <fb_scope_table_visit@@Base+0xa4>
   23a00:	cmp	r0, #0
   23a04:	bne	239b0 <fb_scope_table_visit@@Base+0x380>
   23a08:	and	r3, r6, r4
   23a0c:	add	r4, r4, #1
   23a10:	b	239dc <fb_scope_table_visit@@Base+0x3ac>
   23a14:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23a18:	ldr	sl, [r0]
   23a1c:	cmp	sl, #0
   23a20:	bne	23a34 <fb_scope_table_visit@@Base+0x404>
   23a24:	mov	r6, #0
   23a28:	mov	r0, r6
   23a2c:	add	sp, sp, #4
   23a30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23a34:	mov	r5, r0
   23a38:	mov	r8, r1
   23a3c:	ldr	r7, [r5, #12]
   23a40:	mov	r1, r2
   23a44:	mov	r0, r8
   23a48:	mov	r9, r2
   23a4c:	bl	236a4 <fb_scope_table_visit@@Base+0x74>
   23a50:	add	r4, r0, #1
   23a54:	sub	r7, r7, #1
   23a58:	and	r3, r7, r0
   23a5c:	ldr	r6, [sl, r3, lsl #2]
   23a60:	add	fp, sl, r3, lsl #2
   23a64:	cmp	r6, #0
   23a68:	beq	23a24 <fb_scope_table_visit@@Base+0x3f4>
   23a6c:	cmp	r6, #2
   23a70:	beq	23aa4 <fb_scope_table_visit@@Base+0x474>
   23a74:	mov	r2, r6
   23a78:	mov	r1, r9
   23a7c:	mov	r0, r8
   23a80:	bl	236d4 <fb_scope_table_visit@@Base+0xa4>
   23a84:	cmp	r0, #0
   23a88:	beq	23aa4 <fb_scope_table_visit@@Base+0x474>
   23a8c:	mov	r3, #2
   23a90:	str	r3, [fp]
   23a94:	ldr	r3, [r5, #8]
   23a98:	sub	r3, r3, #1
   23a9c:	str	r3, [r5, #8]
   23aa0:	b	23a28 <fb_scope_table_visit@@Base+0x3f8>
   23aa4:	and	r3, r4, r7
   23aa8:	add	r4, r4, #1
   23aac:	b	23a5c <fb_scope_table_visit@@Base+0x42c>

00023ab0 <fb_schema_table_clear@@Base>:
   23ab0:	b	23678 <fb_scope_table_visit@@Base+0x48>

00023ab4 <fb_schema_table_destroy@@Base>:
   23ab4:	cmp	r1, #0
   23ab8:	push	{r4, lr}
   23abc:	mov	r4, r0
   23ac0:	beq	23ac8 <fb_schema_table_destroy@@Base+0x14>
   23ac4:	bl	23634 <fb_scope_table_visit@@Base+0x4>
   23ac8:	mov	r0, r4
   23acc:	pop	{r4, lr}
   23ad0:	b	23678 <fb_scope_table_visit@@Base+0x48>

00023ad4 <fb_schema_table_init@@Base>:
   23ad4:	push	{r4, r5, r6, lr}
   23ad8:	mov	r2, #179	; 0xb3
   23adc:	mov	r5, r0
   23ae0:	mov	r4, #4
   23ae4:	mul	r3, r2, r4
   23ae8:	cmp	r1, r3, lsr #8
   23aec:	bhi	23b1c <fb_schema_table_init@@Base+0x48>
   23af0:	mov	r1, #4
   23af4:	mov	r0, r4
   23af8:	bl	13fc0 <calloc@plt>
   23afc:	cmp	r0, #0
   23b00:	str	r0, [r5]
   23b04:	movne	r0, #0
   23b08:	mvneq	r0, #0
   23b0c:	strne	r4, [r5, #12]
   23b10:	strne	r0, [r5, #4]
   23b14:	strne	r0, [r5, #8]
   23b18:	pop	{r4, r5, r6, pc}
   23b1c:	lsl	r4, r4, #1
   23b20:	b	23ae4 <fb_schema_table_init@@Base+0x10>

00023b24 <fb_schema_table_resize@@Base>:
   23b24:	b	238c0 <fb_scope_table_visit@@Base+0x290>

00023b28 <fb_schema_table_insert@@Base>:
   23b28:	b	23708 <fb_scope_table_visit@@Base+0xd8>

00023b2c <fb_schema_table_insert_item@@Base>:
   23b2c:	mov	r3, r1
   23b30:	push	{r0, r1, r2, lr}
   23b34:	str	r2, [sp]
   23b38:	ldr	r1, [r1, #144]	; 0x90
   23b3c:	ldr	r2, [r3, #148]	; 0x94
   23b40:	bl	23708 <fb_scope_table_visit@@Base+0xd8>
   23b44:	add	sp, sp, #12
   23b48:	pop	{pc}		; (ldr pc, [sp], #4)

00023b4c <fb_schema_table_find@@Base>:
   23b4c:	b	2399c <fb_scope_table_visit@@Base+0x36c>

00023b50 <fb_schema_table_find_item@@Base>:
   23b50:	ldr	r2, [r1, #148]	; 0x94
   23b54:	ldr	r1, [r1, #144]	; 0x90
   23b58:	b	2399c <fb_scope_table_visit@@Base+0x36c>

00023b5c <fb_schema_table_remove@@Base>:
   23b5c:	b	23a14 <fb_scope_table_visit@@Base+0x3e4>

00023b60 <fb_schema_table_remove_item@@Base>:
   23b60:	ldr	r2, [r1, #148]	; 0x94
   23b64:	ldr	r1, [r1, #144]	; 0x90
   23b68:	b	23a14 <fb_scope_table_visit@@Base+0x3e4>

00023b6c <fb_schema_table_visit@@Base>:
   23b6c:	b	23634 <fb_scope_table_visit@@Base+0x4>

00023b70 <__flatcc_fb_copy_path_n@@Base>:
   23b70:	push	{r4, r5, r6, lr}
   23b74:	mov	r2, r1
   23b78:	mov	r4, r1
   23b7c:	mov	r1, #0
   23b80:	mov	r6, r0
   23b84:	bl	140f8 <memchr@plt>
   23b88:	cmp	r0, #0
   23b8c:	subne	r4, r0, r6
   23b90:	add	r0, r4, #1
   23b94:	bl	14068 <malloc@plt>
   23b98:	subs	r5, r0, #0
   23b9c:	beq	23bb4 <__flatcc_fb_copy_path_n@@Base+0x44>
   23ba0:	mov	r2, r4
   23ba4:	mov	r1, r6
   23ba8:	bl	13ffc <memcpy@plt>
   23bac:	mov	r3, #0
   23bb0:	strb	r3, [r5, r4]
   23bb4:	mov	r0, r5
   23bb8:	pop	{r4, r5, r6, pc}

00023bbc <__flatcc_fb_copy_path@@Base>:
   23bbc:	push	{r4, r5, r6, lr}
   23bc0:	mov	r6, r0
   23bc4:	bl	140a4 <strlen@plt>
   23bc8:	mov	r4, r0
   23bcc:	add	r0, r0, #1
   23bd0:	bl	14068 <malloc@plt>
   23bd4:	subs	r5, r0, #0
   23bd8:	beq	23bf0 <__flatcc_fb_copy_path@@Base+0x34>
   23bdc:	mov	r2, r4
   23be0:	mov	r1, r6
   23be4:	bl	13ffc <memcpy@plt>
   23be8:	mov	r3, #0
   23bec:	strb	r3, [r5, r4]
   23bf0:	mov	r0, r5
   23bf4:	pop	{r4, r5, r6, pc}

00023bf8 <__flatcc_fb_chomp@@Base>:
   23bf8:	push	{r4, r5, r6, r7, r8, lr}
   23bfc:	subs	r5, r2, #0
   23c00:	mov	r7, r0
   23c04:	mov	r4, r1
   23c08:	moveq	r2, r5
   23c0c:	beq	23c1c <__flatcc_fb_chomp@@Base+0x24>
   23c10:	mov	r0, r5
   23c14:	bl	140a4 <strlen@plt>
   23c18:	mov	r2, r0
   23c1c:	cmp	r2, r4
   23c20:	bcs	23c3c <__flatcc_fb_chomp@@Base+0x44>
   23c24:	sub	r6, r4, r2
   23c28:	mov	r1, r5
   23c2c:	add	r0, r7, r6
   23c30:	bl	14164 <strncmp@plt>
   23c34:	cmp	r0, #0
   23c38:	moveq	r4, r6
   23c3c:	mov	r0, r4
   23c40:	pop	{r4, r5, r6, r7, r8, pc}

00023c44 <__flatcc_fb_create_join_path_n@@Base>:
   23c44:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23c48:	mov	r9, r0
   23c4c:	mov	r4, r1
   23c50:	mov	fp, r2
   23c54:	mov	r8, r3
   23c58:	ldr	sl, [sp, #40]	; 0x28
   23c5c:	ldr	r5, [sp, #44]	; 0x2c
   23c60:	cmp	sl, #0
   23c64:	moveq	r6, sl
   23c68:	beq	23c78 <__flatcc_fb_create_join_path_n@@Base+0x34>
   23c6c:	mov	r0, sl
   23c70:	bl	140a4 <strlen@plt>
   23c74:	mov	r6, r0
   23c78:	cmp	r9, #0
   23c7c:	moveq	r4, r9
   23c80:	moveq	r5, r9
   23c84:	beq	23ce0 <__flatcc_fb_create_join_path_n@@Base+0x9c>
   23c88:	cmp	r8, #0
   23c8c:	beq	23cbc <__flatcc_fb_create_join_path_n@@Base+0x78>
   23c90:	ldrb	r3, [fp]
   23c94:	cmp	r3, #92	; 0x5c
   23c98:	cmpne	r3, #47	; 0x2f
   23c9c:	moveq	r3, #1
   23ca0:	movne	r3, #0
   23ca4:	beq	23d54 <__flatcc_fb_create_join_path_n@@Base+0x110>
   23ca8:	cmp	r8, #1
   23cac:	bls	23cbc <__flatcc_fb_create_join_path_n@@Base+0x78>
   23cb0:	ldrb	r2, [fp, #1]
   23cb4:	cmp	r2, #58	; 0x3a
   23cb8:	beq	23d60 <__flatcc_fb_create_join_path_n@@Base+0x11c>
   23cbc:	cmp	r5, #0
   23cc0:	beq	23ce0 <__flatcc_fb_create_join_path_n@@Base+0x9c>
   23cc4:	cmp	r4, #0
   23cc8:	beq	23d58 <__flatcc_fb_create_join_path_n@@Base+0x114>
   23ccc:	add	r3, r9, r4
   23cd0:	ldrb	r3, [r3, #-1]
   23cd4:	cmp	r3, #92	; 0x5c
   23cd8:	cmpne	r3, #47	; 0x2f
   23cdc:	moveq	r5, #0
   23ce0:	add	r0, r8, #1
   23ce4:	add	r0, r0, r6
   23ce8:	add	r0, r0, r4
   23cec:	add	r0, r0, r5
   23cf0:	bl	14068 <malloc@plt>
   23cf4:	subs	r7, r0, #0
   23cf8:	beq	23d48 <__flatcc_fb_create_join_path_n@@Base+0x104>
   23cfc:	mov	r2, r4
   23d00:	mov	r1, r9
   23d04:	bl	13ffc <memcpy@plt>
   23d08:	cmp	r5, #0
   23d0c:	mov	r2, r8
   23d10:	movne	r3, #47	; 0x2f
   23d14:	mov	r1, fp
   23d18:	strbne	r3, [r7, r4]
   23d1c:	addne	r4, r4, #1
   23d20:	add	r0, r7, r4
   23d24:	add	r4, r4, r8
   23d28:	bl	13ffc <memcpy@plt>
   23d2c:	mov	r2, r6
   23d30:	mov	r1, sl
   23d34:	add	r0, r7, r4
   23d38:	add	r6, r7, r6
   23d3c:	bl	13ffc <memcpy@plt>
   23d40:	mov	r3, #0
   23d44:	strb	r3, [r6, r4]
   23d48:	mov	r0, r7
   23d4c:	add	sp, sp, #4
   23d50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23d54:	mov	r4, #0
   23d58:	mov	r5, r4
   23d5c:	b	23ce0 <__flatcc_fb_create_join_path_n@@Base+0x9c>
   23d60:	mov	r4, r3
   23d64:	b	23d58 <__flatcc_fb_create_join_path_n@@Base+0x114>

00023d68 <__flatcc_fb_create_join_path@@Base>:
   23d68:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   23d6c:	subs	r5, r0, #0
   23d70:	mov	r4, r1
   23d74:	mov	r7, r2
   23d78:	mov	r8, r3
   23d7c:	moveq	r6, r5
   23d80:	beq	23d8c <__flatcc_fb_create_join_path@@Base+0x24>
   23d84:	bl	140a4 <strlen@plt>
   23d88:	mov	r6, r0
   23d8c:	cmp	r4, #0
   23d90:	moveq	r3, r4
   23d94:	beq	23da4 <__flatcc_fb_create_join_path@@Base+0x3c>
   23d98:	mov	r0, r4
   23d9c:	bl	140a4 <strlen@plt>
   23da0:	mov	r3, r0
   23da4:	mov	r2, r4
   23da8:	mov	r1, r6
   23dac:	stm	sp, {r7, r8}
   23db0:	mov	r0, r5
   23db4:	bl	23c44 <__flatcc_fb_create_join_path_n@@Base>
   23db8:	add	sp, sp, #8
   23dbc:	pop	{r4, r5, r6, r7, r8, pc}

00023dc0 <__flatcc_fb_create_path_ext_n@@Base>:
   23dc0:	mov	ip, #0
   23dc4:	push	{r0, r1, r2, lr}
   23dc8:	mov	r3, r1
   23dcc:	mov	r1, ip
   23dd0:	stm	sp, {r2, ip}
   23dd4:	mov	r2, r0
   23dd8:	mov	r0, ip
   23ddc:	bl	23c44 <__flatcc_fb_create_join_path_n@@Base>
   23de0:	add	sp, sp, #12
   23de4:	pop	{pc}		; (ldr pc, [sp], #4)

00023de8 <__flatcc_fb_create_path_ext@@Base>:
   23de8:	mov	r3, #0
   23dec:	mov	r2, r1
   23df0:	mov	r1, r0
   23df4:	mov	r0, r3
   23df8:	b	23d68 <__flatcc_fb_create_join_path@@Base>

00023dfc <__flatcc_fb_create_make_path_n@@Base>:
   23dfc:	cmp	r1, #1
   23e00:	push	{r4, r5, r6, lr}
   23e04:	mov	r4, r0
   23e08:	bne	23e44 <__flatcc_fb_create_make_path_n@@Base+0x48>
   23e0c:	ldrb	r5, [r0]
   23e10:	cmp	r5, #92	; 0x5c
   23e14:	cmpne	r5, #32
   23e18:	bne	23e50 <__flatcc_fb_create_make_path_n@@Base+0x54>
   23e1c:	mov	r0, #3
   23e20:	bl	14068 <malloc@plt>
   23e24:	cmp	r0, #0
   23e28:	popeq	{r4, r5, r6, pc}
   23e2c:	mov	r3, #92	; 0x5c
   23e30:	strb	r3, [r0]
   23e34:	mov	r3, #0
   23e38:	strb	r5, [r0, #1]
   23e3c:	strb	r3, [r0, #2]
   23e40:	pop	{r4, r5, r6, pc}
   23e44:	movhi	r3, r0
   23e48:	addhi	r5, r1, r0
   23e4c:	bhi	23e78 <__flatcc_fb_create_make_path_n@@Base+0x7c>
   23e50:	mov	r0, r4
   23e54:	pop	{r4, r5, r6, lr}
   23e58:	b	23b70 <__flatcc_fb_copy_path_n@@Base>
   23e5c:	cmp	r0, #92	; 0x5c
   23e60:	ldrb	r2, [r3]
   23e64:	bne	23e70 <__flatcc_fb_create_make_path_n@@Base+0x74>
   23e68:	cmp	r2, #32
   23e6c:	addeq	r1, r1, #1
   23e70:	cmp	r0, #32
   23e74:	addeq	r1, r1, #1
   23e78:	ldrb	r0, [r3], #1
   23e7c:	cmp	r5, r3
   23e80:	bne	23e5c <__flatcc_fb_create_make_path_n@@Base+0x60>
   23e84:	add	r1, r1, #1
   23e88:	cmp	r0, #32
   23e8c:	movne	r0, r1
   23e90:	addeq	r0, r1, #1
   23e94:	bl	14068 <malloc@plt>
   23e98:	cmp	r0, #0
   23e9c:	addne	r4, r4, #1
   23ea0:	movne	r3, #0
   23ea4:	movne	r6, #92	; 0x5c
   23ea8:	popeq	{r4, r5, r6, pc}
   23eac:	add	ip, r3, #1
   23eb0:	add	lr, r0, r3
   23eb4:	ldrb	r2, [r4, #-1]
   23eb8:	ldrb	r1, [r4], #1
   23ebc:	cmp	r2, #92	; 0x5c
   23ec0:	bne	23f0c <__flatcc_fb_create_make_path_n@@Base+0x110>
   23ec4:	cmp	r1, #32
   23ec8:	strbeq	r2, [lr]
   23ecc:	beq	23f18 <__flatcc_fb_create_make_path_n@@Base+0x11c>
   23ed0:	cmp	r5, r4
   23ed4:	strb	r2, [r0, r3]
   23ed8:	add	r2, r3, #1
   23edc:	bne	23f04 <__flatcc_fb_create_make_path_n@@Base+0x108>
   23ee0:	cmp	r1, #32
   23ee4:	moveq	ip, #92	; 0x5c
   23ee8:	strbeq	ip, [r0, r2]
   23eec:	addeq	r2, r3, #2
   23ef0:	mov	r3, r0
   23ef4:	strb	r1, [r3, r2]!
   23ef8:	mov	r2, #0
   23efc:	strb	r2, [r3, #1]
   23f00:	pop	{r4, r5, r6, pc}
   23f04:	mov	r3, r2
   23f08:	b	23eac <__flatcc_fb_create_make_path_n@@Base+0xb0>
   23f0c:	cmp	r2, #32
   23f10:	bne	23ed0 <__flatcc_fb_create_make_path_n@@Base+0xd4>
   23f14:	strb	r6, [lr]
   23f18:	mov	r3, ip
   23f1c:	b	23ed0 <__flatcc_fb_create_make_path_n@@Base+0xd4>

00023f20 <__flatcc_fb_create_make_path@@Base>:
   23f20:	push	{r4, lr}
   23f24:	mov	r4, r0
   23f28:	bl	140a4 <strlen@plt>
   23f2c:	mov	r1, r0
   23f30:	mov	r0, r4
   23f34:	pop	{r4, lr}
   23f38:	b	23dfc <__flatcc_fb_create_make_path_n@@Base>

00023f3c <__flatcc_fb_find_basename@@Base>:
   23f3c:	add	r1, r0, r1
   23f40:	cmp	r1, r0
   23f44:	bne	23f50 <__flatcc_fb_find_basename@@Base+0x14>
   23f48:	sub	r0, r1, r0
   23f4c:	bx	lr
   23f50:	ldrb	r3, [r1, #-1]
   23f54:	sub	r2, r1, #1
   23f58:	cmp	r3, #92	; 0x5c
   23f5c:	cmpne	r3, #47	; 0x2f
   23f60:	beq	23f48 <__flatcc_fb_find_basename@@Base+0xc>
   23f64:	mov	r1, r2
   23f68:	b	23f40 <__flatcc_fb_find_basename@@Base+0x4>

00023f6c <__flatcc_fb_create_basename@@Base>:
   23f6c:	push	{r4, r5, r6, lr}
   23f70:	mov	r5, r1
   23f74:	mov	r6, r2
   23f78:	mov	r4, r0
   23f7c:	bl	23f3c <__flatcc_fb_find_basename@@Base>
   23f80:	add	r4, r4, r0
   23f84:	sub	r1, r5, r0
   23f88:	mov	r2, r6
   23f8c:	mov	r0, r4
   23f90:	bl	23bf8 <__flatcc_fb_chomp@@Base>
   23f94:	mov	r5, r0
   23f98:	add	r0, r0, #1
   23f9c:	bl	14068 <malloc@plt>
   23fa0:	subs	r6, r0, #0
   23fa4:	beq	23fbc <__flatcc_fb_create_basename@@Base+0x50>
   23fa8:	mov	r2, r5
   23fac:	mov	r1, r4
   23fb0:	bl	13ffc <memcpy@plt>
   23fb4:	mov	r3, #0
   23fb8:	strb	r3, [r6, r5]
   23fbc:	mov	r0, r6
   23fc0:	pop	{r4, r5, r6, pc}

00023fc4 <__flatcc_fb_read_file@@Base>:
   23fc4:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   23fc8:	subs	r8, r2, #0
   23fcc:	mov	r6, r1
   23fd0:	addeq	r8, sp, #4
   23fd4:	ldr	r1, [pc, #212]	; 240b0 <__flatcc_fb_read_file@@Base+0xec>
   23fd8:	bl	13fe4 <fopen@plt>
   23fdc:	subs	r7, r0, #0
   23fe0:	beq	24080 <__flatcc_fb_read_file@@Base+0xbc>
   23fe4:	mov	r2, #2
   23fe8:	mov	r1, #0
   23fec:	bl	1414c <fseek@plt>
   23ff0:	mov	r0, r7
   23ff4:	bl	14008 <ftell@plt>
   23ff8:	cmp	r0, r6
   23ffc:	mov	r5, r0
   24000:	str	r0, [r8]
   24004:	movls	r4, #0
   24008:	movhi	r4, #1
   2400c:	cmp	r6, #0
   24010:	moveq	r4, #0
   24014:	cmp	r4, #0
   24018:	bne	24088 <__flatcc_fb_read_file@@Base+0xc4>
   2401c:	mov	r0, r7
   24020:	bl	14020 <rewind@plt>
   24024:	cmp	r5, #0
   24028:	movne	r0, r5
   2402c:	moveq	r0, #1
   24030:	bl	14068 <malloc@plt>
   24034:	subs	r6, r0, #0
   24038:	beq	24088 <__flatcc_fb_read_file@@Base+0xc4>
   2403c:	mov	r3, r7
   24040:	sub	r2, r5, r4
   24044:	mov	r1, #1
   24048:	add	r0, r6, r4
   2404c:	bl	14050 <fread@plt>
   24050:	cmp	r0, #0
   24054:	bne	24078 <__flatcc_fb_read_file@@Base+0xb4>
   24058:	cmp	r4, r5
   2405c:	bne	2408c <__flatcc_fb_read_file@@Base+0xc8>
   24060:	mov	r0, r7
   24064:	bl	14104 <fclose@plt>
   24068:	str	r4, [r8]
   2406c:	mov	r0, r6
   24070:	add	sp, sp, #8
   24074:	pop	{r4, r5, r6, r7, r8, pc}
   24078:	add	r4, r4, r0
   2407c:	b	2403c <__flatcc_fb_read_file@@Base+0x78>
   24080:	mov	r5, r7
   24084:	b	240a4 <__flatcc_fb_read_file@@Base+0xe0>
   24088:	mov	r6, #0
   2408c:	mov	r0, r7
   24090:	bl	14104 <fclose@plt>
   24094:	cmp	r6, #0
   24098:	beq	240a4 <__flatcc_fb_read_file@@Base+0xe0>
   2409c:	mov	r0, r6
   240a0:	bl	13ff0 <free@plt>
   240a4:	mov	r6, #0
   240a8:	str	r5, [r8]
   240ac:	b	2406c <__flatcc_fb_read_file@@Base+0xa8>
   240b0:	andeq	r7, r4, r8, asr #10
   240b4:	ldr	r3, [r0]
   240b8:	mov	r2, #0
   240bc:	cmp	r3, #0
   240c0:	bne	240cc <__flatcc_fb_read_file@@Base+0x108>
   240c4:	str	r2, [r0]
   240c8:	bx	lr
   240cc:	ldr	r1, [r3]
   240d0:	str	r2, [r3]
   240d4:	mov	r2, r3
   240d8:	mov	r3, r1
   240dc:	b	240bc <__flatcc_fb_read_file@@Base+0xf8>

000240e0 <__flatcc_fb_default_error_out@@Base>:
   240e0:	ldr	r3, [pc, #12]	; 240f4 <__flatcc_fb_default_error_out@@Base+0x14>
   240e4:	mov	r0, r1
   240e8:	mov	r1, #1
   240ec:	ldr	r3, [r3]
   240f0:	b	14038 <fwrite@plt>
   240f4:	strheq	fp, [r5], -r0
   240f8:	add	r0, r1, #4
   240fc:	b	22e94 <fb_symbol_table_clear@@Base>
   24100:	ldr	r3, [pc, #20]	; 2411c <__flatcc_fb_default_error_out@@Base+0x3c>
   24104:	push	{r4, lr}
   24108:	ldr	r0, [pc, #16]	; 24120 <__flatcc_fb_default_error_out@@Base+0x40>
   2410c:	ldr	r1, [r3]
   24110:	bl	14158 <fputs@plt>
   24114:	mov	r0, #1
   24118:	bl	14098 <exit@plt>
   2411c:	strheq	fp, [r5], -r0
   24120:	ldrdeq	r0, [r3], -sp
   24124:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   24128:	mov	r4, r0
   2412c:	mov	r6, r1
   24130:	mov	r5, r2
   24134:	mov	r7, r3
   24138:	mov	r2, #20
   2413c:	ldr	r0, [r0, #20]
   24140:	ldr	r1, [r4, #28]
   24144:	ldr	r3, [r4, #40]	; 0x28
   24148:	mla	r2, r2, r1, r0
   2414c:	cmp	r2, r3
   24150:	str	r2, [r4, #24]
   24154:	bne	2419c <__flatcc_fb_default_error_out@@Base+0xbc>
   24158:	cmp	r1, #0
   2415c:	mov	r9, #20
   24160:	lslne	r1, r1, #1
   24164:	moveq	r1, #1024	; 0x400
   24168:	sub	r8, r2, r0
   2416c:	str	r1, [r4, #28]
   24170:	mul	r1, r9, r1
   24174:	bl	1402c <realloc@plt>
   24178:	cmp	r0, #0
   2417c:	str	r0, [r4, #20]
   24180:	bne	24188 <__flatcc_fb_default_error_out@@Base+0xa8>
   24184:	bl	24100 <__flatcc_fb_default_error_out@@Base+0x20>
   24188:	ldr	r3, [r4, #28]
   2418c:	mla	r3, r9, r3, r0
   24190:	add	r0, r0, r8
   24194:	str	r3, [r4, #24]
   24198:	str	r0, [r4, #40]	; 0x28
   2419c:	ldr	r1, [r4, #40]	; 0x28
   241a0:	sub	r7, r7, r5
   241a4:	ldrd	r2, [r4, #60]	; 0x3c
   241a8:	stm	r1, {r5, r7}
   241ac:	add	r1, r1, #20
   241b0:	sub	r5, r5, r2
   241b4:	str	r3, [r1, #-12]
   241b8:	add	r5, r5, #1
   241bc:	str	r6, [r1, #-4]
   241c0:	str	r5, [r1, #-8]
   241c4:	str	r1, [r4, #40]	; 0x28
   241c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   241cc:	mov	r3, r2
   241d0:	ldr	r2, [r0, #32]
   241d4:	cmp	r2, #0
   241d8:	bxeq	lr
   241dc:	mov	r2, r1
   241e0:	ldr	r1, [pc]	; 241e8 <__flatcc_fb_default_error_out@@Base+0x108>
   241e4:	b	24124 <__flatcc_fb_default_error_out@@Base+0x44>
   241e8:			; <UNDEFINED> instruction: 0xfffffc3c
   241ec:	push	{r4, r5, r6, lr}
   241f0:	mov	r4, r0
   241f4:	add	r1, r1, #15
   241f8:	bic	r5, r1, #15
   241fc:	ldr	r0, [r0, #52]	; 0x34
   24200:	ldr	r3, [r4, #44]	; 0x2c
   24204:	add	r2, r5, r0
   24208:	cmp	r2, r3
   2420c:	bls	24244 <__flatcc_fb_default_error_out@@Base+0x164>
   24210:	mov	r1, #1
   24214:	mov	r0, #65536	; 0x10000
   24218:	bl	13fc0 <calloc@plt>
   2421c:	subs	r3, r0, #0
   24220:	bne	24228 <__flatcc_fb_default_error_out@@Base+0x148>
   24224:	bl	24100 <__flatcc_fb_default_error_out@@Base+0x20>
   24228:	ldr	r2, [r4, #48]	; 0x30
   2422c:	add	r0, r3, #16
   24230:	str	r3, [r4, #48]	; 0x30
   24234:	str	r0, [r4, #52]	; 0x34
   24238:	str	r2, [r3]
   2423c:	add	r3, r3, #65536	; 0x10000
   24240:	str	r3, [r4, #44]	; 0x2c
   24244:	ldr	r1, [r4, #52]	; 0x34
   24248:	add	r5, r1, r5
   2424c:	str	r5, [r4, #52]	; 0x34
   24250:	pop	{r4, r5, r6, pc}
   24254:	push	{r4, r5, r6, lr}
   24258:	mov	r2, #0
   2425c:	mov	r5, r0
   24260:	mov	r6, r1
   24264:	ldr	r0, [r0, #412]	; 0x19c
   24268:	bl	23610 <fb_scope_table_find@@Base>
   2426c:	subs	r4, r0, #0
   24270:	bne	242a8 <__flatcc_fb_default_error_out@@Base+0x1c8>
   24274:	mov	r1, #28
   24278:	mov	r0, r5
   2427c:	bl	241ec <__flatcc_fb_default_error_out@@Base+0x10c>
   24280:	add	r2, r5, #476	; 0x1dc
   24284:	mov	r3, r0
   24288:	mov	r4, r0
   2428c:	ldm	r2, {r0, r1}
   24290:	mov	r2, #1
   24294:	str	r6, [r3], #20
   24298:	stm	r3, {r0, r1}
   2429c:	mov	r1, r4
   242a0:	ldr	r0, [r5, #412]	; 0x19c
   242a4:	bl	235f0 <fb_scope_table_insert_item@@Base>
   242a8:	mov	r0, r4
   242ac:	pop	{r4, r5, r6, pc}
   242b0:	push	{r4, r5, r6, lr}
   242b4:	mov	r4, r0
   242b8:	ldr	r2, [r4, #24]
   242bc:	ldr	r3, [r4, #40]	; 0x28
   242c0:	add	r5, r3, #20
   242c4:	cmp	r5, r2
   242c8:	str	r5, [r4, #40]	; 0x28
   242cc:	bne	242e8 <__flatcc_fb_default_error_out@@Base+0x208>
   242d0:	movw	r2, #341	; 0x155
   242d4:	ldr	r1, [pc, #60]	; 24318 <__flatcc_fb_default_error_out@@Base+0x238>
   242d8:	str	r3, [r4, #40]	; 0x28
   242dc:	ldr	r0, [pc, #56]	; 2431c <__flatcc_fb_default_error_out@@Base+0x23c>
   242e0:	ldr	r3, [pc, #56]	; 24320 <__flatcc_fb_default_error_out@@Base+0x240>
   242e4:	bl	1417c <__assert_fail@plt>
   242e8:	ldr	r3, [r3, #36]	; 0x24
   242ec:	cmn	r3, #964	; 0x3c4
   242f0:	bne	24310 <__flatcc_fb_default_error_out@@Base+0x230>
   242f4:	mov	r1, #12
   242f8:	mov	r0, r4
   242fc:	bl	241ec <__flatcc_fb_default_error_out@@Base+0x10c>
   24300:	ldr	r3, [r4, #36]	; 0x24
   24304:	stm	r0, {r3, r5}
   24308:	str	r0, [r4, #36]	; 0x24
   2430c:	b	242b8 <__flatcc_fb_default_error_out@@Base+0x1d8>
   24310:	mov	r0, r5
   24314:	pop	{r4, r5, r6, pc}
   24318:	andeq	r7, r4, sp, ror #12
   2431c:	andeq	r9, r3, fp, lsr r2
   24320:	andeq	r7, r4, fp, asr #10
   24324:	push	{r4, lr}
   24328:	ldr	r4, [r0, #40]	; 0x28
   2432c:	ldr	r3, [r4, #16]
   24330:	cmp	r3, r1
   24334:	movne	r4, #0
   24338:	bne	24340 <__flatcc_fb_default_error_out@@Base+0x260>
   2433c:	bl	242b0 <__flatcc_fb_default_error_out@@Base+0x1d0>
   24340:	mov	r0, r4
   24344:	pop	{r4, pc}
   24348:	push	{r4, lr}
   2434c:	mov	r4, r0
   24350:	ldr	r3, [r4, #40]	; 0x28
   24354:	ldr	r3, [r3, #16]
   24358:	cmp	r3, #0
   2435c:	popeq	{r4, pc}
   24360:	cmp	r3, #59	; 0x3b
   24364:	bne	2437c <__flatcc_fb_default_error_out@@Base+0x29c>
   24368:	mov	r0, r4
   2436c:	bl	242b0 <__flatcc_fb_default_error_out@@Base+0x1d0>
   24370:	mov	r3, #0
   24374:	str	r3, [r4, #36]	; 0x24
   24378:	pop	{r4, pc}
   2437c:	cmp	r3, #125	; 0x7d
   24380:	beq	24370 <__flatcc_fb_default_error_out@@Base+0x290>
   24384:	mov	r0, r4
   24388:	bl	242b0 <__flatcc_fb_default_error_out@@Base+0x1d0>
   2438c:	b	24350 <__flatcc_fb_default_error_out@@Base+0x270>
   24390:	push	{r4, r5, r6, lr}
   24394:	mov	r4, r0
   24398:	mov	r5, r1
   2439c:	ldr	r3, [r4, #40]	; 0x28
   243a0:	ldr	r3, [r3, #16]
   243a4:	cmp	r3, #0
   243a8:	popeq	{r4, r5, r6, pc}
   243ac:	cmp	r5, r3
   243b0:	mov	r0, r4
   243b4:	bne	243c8 <__flatcc_fb_default_error_out@@Base+0x2e8>
   243b8:	bl	242b0 <__flatcc_fb_default_error_out@@Base+0x1d0>
   243bc:	mov	r3, #0
   243c0:	str	r3, [r4, #36]	; 0x24
   243c4:	pop	{r4, r5, r6, pc}
   243c8:	bl	242b0 <__flatcc_fb_default_error_out@@Base+0x1d0>
   243cc:	b	2439c <__flatcc_fb_default_error_out@@Base+0x2bc>
   243d0:	push	{r4, r5, r6, lr}
   243d4:	mov	r6, r1
   243d8:	mov	r1, #120	; 0x78
   243dc:	mov	r5, r0
   243e0:	bl	241ec <__flatcc_fb_default_error_out@@Base+0x10c>
   243e4:	ldr	r3, [r6]
   243e8:	mov	r4, r0
   243ec:	add	r0, r5, #36	; 0x24
   243f0:	str	r3, [r4]
   243f4:	mov	r3, #5
   243f8:	strh	r3, [r4, #8]
   243fc:	str	r4, [r6]
   24400:	bl	240b4 <__flatcc_fb_read_file@@Base+0xf0>
   24404:	ldr	r3, [r5, #36]	; 0x24
   24408:	mov	r0, r4
   2440c:	str	r3, [r4, #68]	; 0x44
   24410:	mov	r3, #0
   24414:	str	r3, [r5, #36]	; 0x24
   24418:	pop	{r4, r5, r6, pc}

0002441c <__flatcc_fb_print_error@@Base>:
   2441c:	push	{r1, r2, r3}
   24420:	mov	r1, #200	; 0xc8
   24424:	push	{r4, r5, lr}
   24428:	sub	sp, sp, #208	; 0xd0
   2442c:	mov	r5, r0
   24430:	add	r3, sp, #224	; 0xe0
   24434:	add	r0, sp, #8
   24438:	ldr	r2, [sp, #220]	; 0xdc
   2443c:	str	r3, [sp, #4]
   24440:	bl	14134 <vsnprintf@plt>
   24444:	cmp	r0, #199	; 0xc7
   24448:	movle	r4, r0
   2444c:	ble	24460 <__flatcc_fb_print_error@@Base+0x44>
   24450:	ldr	r1, [pc, #48]	; 24488 <__flatcc_fb_print_error@@Base+0x6c>
   24454:	add	r0, sp, #203	; 0xcb
   24458:	mov	r4, #199	; 0xc7
   2445c:	bl	14044 <strcpy@plt>
   24460:	ldr	r3, [r5, #8]
   24464:	mov	r2, r4
   24468:	add	r1, sp, #8
   2446c:	ldr	r0, [r5, #12]
   24470:	blx	r3
   24474:	mov	r0, r4
   24478:	add	sp, sp, #208	; 0xd0
   2447c:	pop	{r4, r5, lr}
   24480:	add	sp, sp, #12
   24484:	bx	lr
   24488:	strdeq	r0, [r3], -fp

0002448c <__flatcc_error_find_file_of_token@@Base>:
   2448c:	cmp	r0, #0
   24490:	bne	2449c <__flatcc_error_find_file_of_token@@Base+0x10>
   24494:	ldr	r0, [pc, #40]	; 244c4 <__flatcc_error_find_file_of_token@@Base+0x38>
   24498:	bx	lr
   2449c:	ldr	r3, [r0, #20]
   244a0:	cmp	r3, r1
   244a4:	bhi	244bc <__flatcc_error_find_file_of_token@@Base+0x30>
   244a8:	ldr	r3, [r0, #24]
   244ac:	cmp	r3, r1
   244b0:	bls	244bc <__flatcc_error_find_file_of_token@@Base+0x30>
   244b4:	ldr	r0, [r0, #520]	; 0x208
   244b8:	bx	lr
   244bc:	ldr	r0, [r0]
   244c0:	b	2448c <__flatcc_error_find_file_of_token@@Base>
   244c4:	strdeq	r2, [r3], -r7

000244c8 <__flatcc_error_report@@Base>:
   244c8:	push	{r4, r5, r6, r7, r8, r9, lr}
   244cc:	sub	sp, sp, #44	; 0x2c
   244d0:	mov	r4, r3
   244d4:	adds	r3, r1, #0
   244d8:	mov	r6, r1
   244dc:	movne	r3, #1
   244e0:	mov	r5, r0
   244e4:	ldr	r7, [sp, #72]	; 0x48
   244e8:	ldr	r8, [sp, #76]	; 0x4c
   244ec:	cmp	r7, #0
   244f0:	moveq	r1, r3
   244f4:	movne	r1, #0
   244f8:	cmp	r1, #0
   244fc:	ldr	r1, [pc, #320]	; 24644 <__flatcc_error_report@@Base+0x17c>
   24500:	ldmne	r6, {r7, r8}
   24504:	cmp	r2, #0
   24508:	moveq	r2, r1
   2450c:	cmp	r7, #0
   24510:	moveq	r8, r7
   24514:	moveq	r7, r1
   24518:	cmp	r4, #0
   2451c:	moveq	r1, r3
   24520:	movne	r1, #0
   24524:	cmp	r1, #0
   24528:	beq	24560 <__flatcc_error_report@@Base+0x98>
   2452c:	mov	r1, r6
   24530:	bl	2448c <__flatcc_error_find_file_of_token@@Base>
   24534:	str	r8, [sp, #4]
   24538:	str	r7, [sp, #8]
   2453c:	str	r2, [sp, #12]
   24540:	mov	r2, r0
   24544:	ldr	r3, [r6, #12]
   24548:	ldr	r1, [pc, #248]	; 24648 <__flatcc_error_report@@Base+0x180>
   2454c:	str	r3, [sp]
   24550:	ldr	r3, [r6, #8]
   24554:	mov	r0, r5
   24558:	bl	2441c <__flatcc_fb_print_error@@Base>
   2455c:	b	245d4 <__flatcc_error_report@@Base+0x10c>
   24560:	cmp	r4, #0
   24564:	moveq	r3, #0
   24568:	cmp	r3, #0
   2456c:	beq	245e8 <__flatcc_error_report@@Base+0x120>
   24570:	mov	r1, r6
   24574:	bl	2448c <__flatcc_error_find_file_of_token@@Base>
   24578:	mov	r9, r0
   2457c:	mov	r1, r4
   24580:	mov	r0, r5
   24584:	bl	2448c <__flatcc_error_find_file_of_token@@Base>
   24588:	ldr	r3, [r4]
   2458c:	str	r8, [sp, #4]
   24590:	str	r7, [sp, #8]
   24594:	str	r2, [sp, #12]
   24598:	mov	r2, r9
   2459c:	str	r0, [sp, #16]
   245a0:	mov	r0, r5
   245a4:	str	r3, [sp, #32]
   245a8:	ldr	r3, [r4, #4]
   245ac:	ldr	r1, [pc, #152]	; 2464c <__flatcc_error_report@@Base+0x184>
   245b0:	str	r3, [sp, #28]
   245b4:	ldr	r3, [r4, #12]
   245b8:	str	r3, [sp, #24]
   245bc:	ldr	r3, [r4, #8]
   245c0:	str	r3, [sp, #20]
   245c4:	ldr	r3, [r6, #12]
   245c8:	str	r3, [sp]
   245cc:	ldr	r3, [r6, #8]
   245d0:	bl	2441c <__flatcc_fb_print_error@@Base>
   245d4:	ldr	r3, [r5, #108]	; 0x6c
   245d8:	add	r3, r3, #1
   245dc:	str	r3, [r5, #108]	; 0x6c
   245e0:	add	sp, sp, #44	; 0x2c
   245e4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   245e8:	orrs	r3, r6, r4
   245ec:	bne	245fc <__flatcc_error_report@@Base+0x134>
   245f0:	ldr	r1, [pc, #88]	; 24650 <__flatcc_error_report@@Base+0x188>
   245f4:	bl	2441c <__flatcc_fb_print_error@@Base>
   245f8:	b	245d4 <__flatcc_error_report@@Base+0x10c>
   245fc:	cmp	r4, #0
   24600:	beq	24638 <__flatcc_error_report@@Base+0x170>
   24604:	mov	r1, r4
   24608:	bl	2448c <__flatcc_error_find_file_of_token@@Base>
   2460c:	ldr	r3, [r4]
   24610:	ldr	r1, [pc, #60]	; 24654 <__flatcc_error_report@@Base+0x18c>
   24614:	str	r3, [sp, #12]
   24618:	ldr	r3, [r4, #4]
   2461c:	str	r3, [sp, #8]
   24620:	ldr	r3, [r4, #12]
   24624:	str	r3, [sp, #4]
   24628:	ldr	r3, [r4, #8]
   2462c:	str	r3, [sp]
   24630:	mov	r3, r0
   24634:	b	24554 <__flatcc_error_report@@Base+0x8c>
   24638:	ldr	r1, [pc, #24]	; 24658 <__flatcc_error_report@@Base+0x190>
   2463c:	bl	2441c <__flatcc_fb_print_error@@Base>
   24640:	b	245d4 <__flatcc_error_report@@Base+0x10c>
   24644:	strdeq	r2, [r3], -r7
   24648:			; <UNDEFINED> instruction: 0x000476b3
   2464c:	ldrdeq	r7, [r4], -r2
   24650:	andeq	r7, r4, r5, lsl #14
   24654:	andeq	r7, r4, r0, lsl r7
   24658:	andeq	r7, r4, pc, lsr #14
   2465c:	mov	r3, #0
   24660:	push	{r0, r1, r2, lr}
   24664:	str	r3, [sp]
   24668:	str	r3, [sp, #4]
   2466c:	bl	244c8 <__flatcc_error_report@@Base>
   24670:	add	sp, sp, #12
   24674:	pop	{pc}		; (ldr pc, [sp], #4)
   24678:	push	{r4, lr}
   2467c:	ldr	r4, [r0, #40]	; 0x28
   24680:	ldr	r3, [r4, #16]
   24684:	cmp	r3, r1
   24688:	bne	24698 <__flatcc_error_report@@Base+0x1d0>
   2468c:	bl	242b0 <__flatcc_fb_default_error_out@@Base+0x1d0>
   24690:	mov	r0, r4
   24694:	pop	{r4, pc}
   24698:	mov	r1, r4
   2469c:	mov	r4, #0
   246a0:	bl	2465c <__flatcc_error_report@@Base+0x194>
   246a4:	b	24690 <__flatcc_error_report@@Base+0x1c8>
   246a8:	push	{r4, r5, r6, lr}
   246ac:	mov	r5, r1
   246b0:	mov	r1, #12
   246b4:	mov	r4, r0
   246b8:	ldr	r6, [r0, #40]	; 0x28
   246bc:	bl	241ec <__flatcc_fb_default_error_out@@Base+0x10c>
   246c0:	str	r6, [r0, #4]
   246c4:	str	r0, [r5]
   246c8:	mov	r0, r4
   246cc:	bl	242b0 <__flatcc_fb_default_error_out@@Base+0x1d0>
   246d0:	ldr	r6, [r5]
   246d4:	mov	r1, #46	; 0x2e
   246d8:	mov	r0, r4
   246dc:	bl	24324 <__flatcc_fb_default_error_out@@Base+0x244>
   246e0:	cmp	r0, #0
   246e4:	popeq	{r4, r5, r6, pc}
   246e8:	ldr	r5, [r4, #40]	; 0x28
   246ec:	ldr	r3, [r5, #16]
   246f0:	cmp	r3, #9
   246f4:	beq	2470c <__flatcc_error_report@@Base+0x244>
   246f8:	mov	r1, r5
   246fc:	mov	r0, r4
   24700:	ldr	r2, [pc, #40]	; 24730 <__flatcc_error_report@@Base+0x268>
   24704:	pop	{r4, r5, r6, lr}
   24708:	b	2465c <__flatcc_error_report@@Base+0x194>
   2470c:	mov	r1, #12
   24710:	mov	r0, r4
   24714:	bl	241ec <__flatcc_fb_default_error_out@@Base+0x10c>
   24718:	str	r5, [r0, #4]
   2471c:	str	r0, [r6]
   24720:	mov	r6, r0
   24724:	mov	r0, r4
   24728:	bl	242b0 <__flatcc_fb_default_error_out@@Base+0x1d0>
   2472c:	b	246d4 <__flatcc_error_report@@Base+0x20c>
   24730:	andeq	r7, r4, r1, asr r7
   24734:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   24738:	mov	r3, #2
   2473c:	mov	r5, r0
   24740:	mov	r4, r1
   24744:	ldr	r6, [pc, #300]	; 24878 <__flatcc_error_report@@Base+0x3b0>
   24748:	strh	r3, [r1, #8]
   2474c:	mov	r3, #0
   24750:	ldr	r7, [pc, #292]	; 2487c <__flatcc_error_report@@Base+0x3b4>
   24754:	str	r3, [r1]
   24758:	ldr	r8, [pc, #288]	; 24880 <__flatcc_error_report@@Base+0x3b8>
   2475c:	str	r3, [r1, #4]
   24760:	ldr	r1, [r5, #40]	; 0x28
   24764:	ldr	r3, [r1, #16]
   24768:	sub	r3, r3, #6
   2476c:	cmp	r3, #17
   24770:	ldrls	pc, [pc, r3, lsl #2]
   24774:	b	24828 <__flatcc_error_report@@Base+0x360>
   24778:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   2477c:	andeq	r4, r2, r8, lsr #16
   24780:	andeq	r4, r2, r8, lsr #16
   24784:	andeq	r4, r2, r8, lsr #16
   24788:	andeq	r4, r2, r8, lsr #16
   2478c:	andeq	r4, r2, r8, lsr #16
   24790:	andeq	r4, r2, r8, lsr #16
   24794:	andeq	r4, r2, r8, lsr #16
   24798:	andeq	r4, r2, r8, lsr #16
   2479c:	andeq	r4, r2, r8, lsr #16
   247a0:	andeq	r4, r2, r8, lsr #16
   247a4:	andeq	r4, r2, r8, lsr #16
   247a8:	andeq	r4, r2, r8, lsl r8
   247ac:	andeq	r4, r2, r8, lsr #16
   247b0:	andeq	r4, r2, r0, asr #15
   247b4:	ldrdeq	r4, [r2], -ip
   247b8:	andeq	r4, r2, ip, lsr r8
   247bc:	andeq	r4, r2, ip, lsr r8
   247c0:	ldr	r3, [r4]
   247c4:	cmp	r3, #0
   247c8:	ldreq	r3, [r1]
   247cc:	streq	r3, [r4]
   247d0:	mov	r0, r5
   247d4:	bl	242b0 <__flatcc_fb_default_error_out@@Base+0x1d0>
   247d8:	b	24760 <__flatcc_error_report@@Base+0x298>
   247dc:	ldr	r2, [pc, #160]	; 24884 <__flatcc_error_report@@Base+0x3bc>
   247e0:	mov	r3, #1
   247e4:	strh	r3, [r4, #8]
   247e8:	mov	r0, r5
   247ec:	bl	2465c <__flatcc_error_report@@Base+0x194>
   247f0:	b	247d0 <__flatcc_error_report@@Base+0x308>
   247f4:	mov	r3, #1
   247f8:	mov	r2, r8
   247fc:	mov	r0, r5
   24800:	strh	r3, [r4, #8]
   24804:	str	r7, [sp]
   24808:	str	r3, [sp, #4]
   2480c:	mov	r3, #0
   24810:	bl	244c8 <__flatcc_error_report@@Base>
   24814:	b	247d0 <__flatcc_error_report@@Base+0x308>
   24818:	mov	r3, #1
   2481c:	mov	r2, r6
   24820:	strh	r3, [r4, #8]
   24824:	b	247e8 <__flatcc_error_report@@Base+0x320>
   24828:	ldr	r2, [pc, #88]	; 24888 <__flatcc_error_report@@Base+0x3c0>
   2482c:	mov	r0, r5
   24830:	bl	2465c <__flatcc_error_report@@Base+0x194>
   24834:	mov	r3, #1
   24838:	strh	r3, [r4, #8]
   2483c:	ldr	r2, [r4]
   24840:	mov	r1, #22
   24844:	mov	r0, r5
   24848:	cmp	r2, #0
   2484c:	ldrne	r3, [r5, #40]	; 0x28
   24850:	ldrne	r3, [r3]
   24854:	subne	r3, r3, r2
   24858:	ldr	r2, [pc, #44]	; 2488c <__flatcc_error_report@@Base+0x3c4>
   2485c:	strne	r3, [r4, #4]
   24860:	bl	24678 <__flatcc_error_report@@Base+0x1b0>
   24864:	cmp	r0, #0
   24868:	moveq	r3, #1
   2486c:	strheq	r3, [r4, #8]
   24870:	add	sp, sp, #8
   24874:	pop	{r4, r5, r6, r7, r8, pc}
   24878:	andeq	r7, r4, r0, asr #15
   2487c:			; <UNDEFINED> instruction: 0x000477be
   24880:	muleq	r4, r4, r7
   24884:	andeq	r7, r4, r6, ror r7
   24888:	ldrdeq	r7, [r4], -pc	; <UNPREDICTABLE>
   2488c:	andeq	r7, r4, sl, lsl #16
   24890:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24894:	mov	r6, r0
   24898:	sub	sp, sp, #36	; 0x24
   2489c:	mov	r4, r1
   248a0:	mov	r1, #45	; 0x2d
   248a4:	mov	r7, r3
   248a8:	mov	r8, r2
   248ac:	bl	24324 <__flatcc_fb_default_error_out@@Base+0x244>
   248b0:	ldr	r5, [r6, #40]	; 0x28
   248b4:	mov	sl, r0
   248b8:	ldr	r3, [r5, #16]
   248bc:	cmp	r3, #10
   248c0:	beq	24af8 <__flatcc_error_report@@Base+0x630>
   248c4:	bgt	24918 <__flatcc_error_report@@Base+0x450>
   248c8:	ldr	r2, [pc, #1040]	; 24ce0 <__flatcc_error_report@@Base+0x818>
   248cc:	cmp	r3, r2
   248d0:	beq	24bf0 <__flatcc_error_report@@Base+0x728>
   248d4:	cmp	r3, #9
   248d8:	beq	24c44 <__flatcc_error_report@@Base+0x77c>
   248dc:	cmn	r3, #988	; 0x3dc
   248e0:	bne	24c70 <__flatcc_error_report@@Base+0x7a8>
   248e4:	mov	r3, #1
   248e8:	strb	r3, [r4]
   248ec:	mov	r3, #6
   248f0:	cmp	sl, #0
   248f4:	strh	r3, [r4, #8]
   248f8:	beq	24ccc <__flatcc_error_report@@Base+0x804>
   248fc:	mov	r3, #1
   24900:	ldr	r2, [pc, #988]	; 24ce4 <__flatcc_error_report@@Base+0x81c>
   24904:	mov	r1, r5
   24908:	mov	r0, r6
   2490c:	strh	r3, [r4, #8]
   24910:	bl	2465c <__flatcc_error_report@@Base+0x194>
   24914:	b	24ccc <__flatcc_error_report@@Base+0x804>
   24918:	cmp	r3, #14
   2491c:	beq	2498c <__flatcc_error_report@@Base+0x4c4>
   24920:	cmp	r3, #19
   24924:	beq	24bf8 <__flatcc_error_report@@Base+0x730>
   24928:	cmp	r3, #11
   2492c:	bne	24c70 <__flatcc_error_report@@Base+0x7a8>
   24930:	mov	r3, #3
   24934:	add	r1, sp, #28
   24938:	ldr	r0, [r5]
   2493c:	strh	r3, [r4, #8]
   24940:	bl	140ec <strtod@plt>
   24944:	ldrd	r2, [r5]
   24948:	vstr	d0, [r4]
   2494c:	ldr	r1, [sp, #28]
   24950:	add	r3, r2, r3
   24954:	cmp	r1, r3
   24958:	beq	24bc0 <__flatcc_error_report@@Base+0x6f8>
   2495c:	ldr	r2, [pc, #900]	; 24ce8 <__flatcc_error_report@@Base+0x820>
   24960:	mov	r3, #1
   24964:	strh	r3, [r4, #8]
   24968:	mov	r1, r5
   2496c:	mov	r0, r6
   24970:	bl	2465c <__flatcc_error_report@@Base+0x194>
   24974:	cmp	sl, #0
   24978:	beq	24ccc <__flatcc_error_report@@Base+0x804>
   2497c:	ldrh	r3, [r4, #8]
   24980:	cmp	r3, #6
   24984:	bne	24ccc <__flatcc_error_report@@Base+0x804>
   24988:	b	248fc <__flatcc_error_report@@Base+0x434>
   2498c:	mov	r3, #5
   24990:	ldr	r2, [r5, #4]
   24994:	strh	r3, [r4, #8]
   24998:	ldr	r3, [r5]
   2499c:	add	lr, r3, r2
   249a0:	cmp	r3, lr
   249a4:	beq	24aa8 <__flatcc_error_report@@Base+0x5e0>
   249a8:	ldrb	r9, [r3]
   249ac:	sub	r0, r9, #45	; 0x2d
   249b0:	clz	r0, r0
   249b4:	lsr	r0, r0, #5
   249b8:	sub	r2, r2, r0
   249bc:	cmp	r2, #1
   249c0:	ble	24aa8 <__flatcc_error_report@@Base+0x5e0>
   249c4:	add	r1, r3, r0
   249c8:	ldrb	r3, [r3, r0]
   249cc:	cmp	r3, #48	; 0x30
   249d0:	bne	24aa8 <__flatcc_error_report@@Base+0x5e0>
   249d4:	ldrb	r3, [r1, #1]
   249d8:	orr	r3, r3, #32
   249dc:	cmp	r3, #120	; 0x78
   249e0:	bne	24aa8 <__flatcc_error_report@@Base+0x5e0>
   249e4:	add	r8, r1, #2
   249e8:	sub	r3, lr, r8
   249ec:	cmp	r3, #16
   249f0:	addgt	r1, r1, #18
   249f4:	movle	r1, lr
   249f8:	mov	r7, r8
   249fc:	mov	r2, #0
   24a00:	mov	r3, #0
   24a04:	b	24a40 <__flatcc_error_report@@Base+0x578>
   24a08:	ldrb	r0, [r7], #1
   24a0c:	sub	fp, r0, #48	; 0x30
   24a10:	cmp	fp, #9
   24a14:	bhi	24ac4 <__flatcc_error_report@@Base+0x5fc>
   24a18:	lsl	ip, r3, #4
   24a1c:	lsl	fp, r2, #4
   24a20:	orr	ip, ip, r2, lsr #28
   24a24:	subs	r3, fp, #48	; 0x30
   24a28:	str	r3, [sp]
   24a2c:	sbc	r3, ip, #0
   24a30:	str	r3, [sp, #4]
   24a34:	ldrd	r2, [sp]
   24a38:	adds	r2, r2, r0
   24a3c:	adc	r3, r3, #0
   24a40:	cmp	r1, r7
   24a44:	mov	ip, r7
   24a48:	bne	24a08 <__flatcc_error_report@@Base+0x540>
   24a4c:	cmp	r8, ip
   24a50:	beq	24aa8 <__flatcc_error_report@@Base+0x5e0>
   24a54:	cmp	lr, ip
   24a58:	beq	24a9c <__flatcc_error_report@@Base+0x5d4>
   24a5c:	cmp	ip, r1
   24a60:	ldrb	r0, [ip]
   24a64:	bne	24a84 <__flatcc_error_report@@Base+0x5bc>
   24a68:	sub	r1, r0, #48	; 0x30
   24a6c:	cmp	r1, #9
   24a70:	bls	24aa8 <__flatcc_error_report@@Base+0x5e0>
   24a74:	orr	r0, r0, #32
   24a78:	sub	r1, r0, #97	; 0x61
   24a7c:	cmp	r1, #5
   24a80:	bls	24aa8 <__flatcc_error_report@@Base+0x5e0>
   24a84:	cmp	r0, #80	; 0x50
   24a88:	beq	24aa8 <__flatcc_error_report@@Base+0x5e0>
   24a8c:	cmp	r0, #112	; 0x70
   24a90:	beq	24aa8 <__flatcc_error_report@@Base+0x5e0>
   24a94:	cmp	r0, #46	; 0x2e
   24a98:	beq	24aa8 <__flatcc_error_report@@Base+0x5e0>
   24a9c:	cmp	r9, #45	; 0x2d
   24aa0:	strd	r2, [r4]
   24aa4:	bne	24cac <__flatcc_error_report@@Base+0x7e4>
   24aa8:	ldr	r2, [pc, #572]	; 24cec <__flatcc_error_report@@Base+0x824>
   24aac:	mov	r3, #1
   24ab0:	strh	r3, [r4, #8]
   24ab4:	mov	r1, r5
   24ab8:	mov	r0, r6
   24abc:	bl	2465c <__flatcc_error_report@@Base+0x194>
   24ac0:	b	24cac <__flatcc_error_report@@Base+0x7e4>
   24ac4:	orr	r0, r0, #32
   24ac8:	sub	fp, r0, #97	; 0x61
   24acc:	cmp	fp, #5
   24ad0:	bhi	24a4c <__flatcc_error_report@@Base+0x584>
   24ad4:	lsl	ip, r3, #4
   24ad8:	lsl	fp, r2, #4
   24adc:	orr	ip, ip, r2, lsr #28
   24ae0:	subs	r3, fp, #87	; 0x57
   24ae4:	str	r3, [sp, #8]
   24ae8:	sbc	r3, ip, #0
   24aec:	str	r3, [sp, #12]
   24af0:	ldrd	r2, [sp, #8]
   24af4:	b	24a38 <__flatcc_error_report@@Base+0x570>
   24af8:	ldr	lr, [r5]
   24afc:	mov	r2, #5
   24b00:	ldr	ip, [r5, #4]
   24b04:	strh	r2, [r4, #8]
   24b08:	add	ip, lr, ip
   24b0c:	cmp	lr, ip
   24b10:	beq	24b5c <__flatcc_error_report@@Base+0x694>
   24b14:	ldrb	r9, [lr]
   24b18:	mov	r0, #0
   24b1c:	mov	r1, #0
   24b20:	mov	fp, r3
   24b24:	strd	r0, [sp]
   24b28:	cmp	r9, #45	; 0x2d
   24b2c:	movne	r8, lr
   24b30:	addeq	r8, lr, #1
   24b34:	mov	r7, r8
   24b38:	cmp	ip, r7
   24b3c:	mov	r1, r7
   24b40:	beq	24cd8 <__flatcc_error_report@@Base+0x810>
   24b44:	ldrb	r2, [r7], #1
   24b48:	sub	r0, r2, #48	; 0x30
   24b4c:	cmp	r0, #9
   24b50:	bls	24b6c <__flatcc_error_report@@Base+0x6a4>
   24b54:	cmp	lr, r1
   24b58:	bne	24c78 <__flatcc_error_report@@Base+0x7b0>
   24b5c:	mov	r3, #1
   24b60:	ldr	r2, [pc, #392]	; 24cf0 <__flatcc_error_report@@Base+0x828>
   24b64:	strh	r3, [r4, #8]
   24b68:	b	24ab4 <__flatcc_error_report@@Base+0x5ec>
   24b6c:	ldr	r3, [sp]
   24b70:	umull	r0, r1, r3, fp
   24b74:	ldr	r3, [sp, #4]
   24b78:	mla	r1, fp, r3, r1
   24b7c:	subs	r3, r0, #48	; 0x30
   24b80:	str	r3, [sp, #16]
   24b84:	sbc	r3, r1, #0
   24b88:	str	r3, [sp, #20]
   24b8c:	ldrd	r0, [sp, #16]
   24b90:	adds	r0, r0, r2
   24b94:	ldrd	r2, [sp]
   24b98:	adc	r1, r1, #0
   24b9c:	cmp	r3, r1
   24ba0:	cmpeq	r2, r0
   24ba4:	bhi	24b5c <__flatcc_error_report@@Base+0x694>
   24ba8:	strd	r0, [sp]
   24bac:	b	24b38 <__flatcc_error_report@@Base+0x670>
   24bb0:	cmp	r2, #101	; 0x65
   24bb4:	beq	24b5c <__flatcc_error_report@@Base+0x694>
   24bb8:	cmp	r2, #112	; 0x70
   24bbc:	b	24c98 <__flatcc_error_report@@Base+0x7d0>
   24bc0:	ldrb	r3, [r2]
   24bc4:	cmp	r3, #46	; 0x2e
   24bc8:	bne	24bdc <__flatcc_error_report@@Base+0x714>
   24bcc:	mov	r3, #1
   24bd0:	ldr	r2, [pc, #284]	; 24cf4 <__flatcc_error_report@@Base+0x82c>
   24bd4:	strh	r3, [r4, #8]
   24bd8:	b	24968 <__flatcc_error_report@@Base+0x4a0>
   24bdc:	cmp	sl, #0
   24be0:	vnegne.f64	d0, d0
   24be4:	vstrne	d0, [r4]
   24be8:	bne	2497c <__flatcc_error_report@@Base+0x4b4>
   24bec:	b	24ccc <__flatcc_error_report@@Base+0x804>
   24bf0:	mov	r3, #0
   24bf4:	b	248e8 <__flatcc_error_report@@Base+0x420>
   24bf8:	mov	r0, r6
   24bfc:	bl	242b0 <__flatcc_fb_default_error_out@@Base+0x1d0>
   24c00:	mov	r1, r4
   24c04:	mov	r0, r6
   24c08:	bl	24734 <__flatcc_error_report@@Base+0x26c>
   24c0c:	tst	r8, #1
   24c10:	moveq	r3, #1
   24c14:	strheq	r3, [r4, #8]
   24c18:	beq	24c70 <__flatcc_error_report@@Base+0x7a8>
   24c1c:	cmp	sl, #0
   24c20:	beq	24c3c <__flatcc_error_report@@Base+0x774>
   24c24:	ldr	r2, [pc, #204]	; 24cf8 <__flatcc_error_report@@Base+0x830>
   24c28:	mov	r3, #1
   24c2c:	strh	r3, [r4, #8]
   24c30:	mov	r1, r5
   24c34:	mov	r0, r6
   24c38:	bl	2465c <__flatcc_error_report@@Base+0x194>
   24c3c:	add	sp, sp, #36	; 0x24
   24c40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24c44:	mov	r1, r4
   24c48:	mov	r0, r6
   24c4c:	bl	246a8 <__flatcc_error_report@@Base+0x1e0>
   24c50:	cmp	sl, #0
   24c54:	moveq	r3, #13
   24c58:	strheq	r3, [r4, #8]
   24c5c:	beq	24c3c <__flatcc_error_report@@Base+0x774>
   24c60:	mov	r3, #1
   24c64:	ldr	r2, [pc, #144]	; 24cfc <__flatcc_error_report@@Base+0x834>
   24c68:	strh	r3, [r4, #8]
   24c6c:	b	24c30 <__flatcc_error_report@@Base+0x768>
   24c70:	mov	r2, r7
   24c74:	b	24c30 <__flatcc_error_report@@Base+0x768>
   24c78:	cmp	r8, r1
   24c7c:	beq	24b5c <__flatcc_error_report@@Base+0x694>
   24c80:	cmp	r2, #80	; 0x50
   24c84:	beq	24b5c <__flatcc_error_report@@Base+0x694>
   24c88:	bhi	24bb0 <__flatcc_error_report@@Base+0x6e8>
   24c8c:	cmp	r2, #46	; 0x2e
   24c90:	beq	24b5c <__flatcc_error_report@@Base+0x694>
   24c94:	cmp	r2, #69	; 0x45
   24c98:	beq	24b5c <__flatcc_error_report@@Base+0x694>
   24c9c:	ldrd	r2, [sp]
   24ca0:	cmp	r9, #45	; 0x2d
   24ca4:	strd	r2, [r4]
   24ca8:	beq	24b5c <__flatcc_error_report@@Base+0x694>
   24cac:	cmp	sl, #0
   24cb0:	beq	24ccc <__flatcc_error_report@@Base+0x804>
   24cb4:	ldrd	r2, [r4]
   24cb8:	rsbs	r2, r2, #0
   24cbc:	rsc	r3, r3, #0
   24cc0:	strd	r2, [r4]
   24cc4:	mov	r3, #4
   24cc8:	strh	r3, [r4, #8]
   24ccc:	mov	r0, r6
   24cd0:	bl	242b0 <__flatcc_fb_default_error_out@@Base+0x1d0>
   24cd4:	b	24c3c <__flatcc_error_report@@Base+0x774>
   24cd8:	cmp	r8, ip
   24cdc:	b	24c98 <__flatcc_error_report@@Base+0x7d0>
   24ce0:			; <UNDEFINED> instruction: 0xfffffc26
   24ce4:	andeq	r7, r4, ip, asr #17
   24ce8:	andeq	r7, r4, r0, asr r8
   24cec:	andeq	r7, r4, lr, lsl r8
   24cf0:	andeq	r7, r4, r9, lsr r8
   24cf4:	andeq	r7, r4, r5, ror #16
   24cf8:	andeq	r7, r4, ip, lsl #17
   24cfc:	andeq	r7, r4, lr, lsr #17
   24d00:	push	{r0, r1, r2, r4, r5, lr}
   24d04:	mov	lr, #0
   24d08:	ldr	r5, [r0, #40]	; 0x28
   24d0c:	ldr	ip, [r5, #16]
   24d10:	str	lr, [r0, #36]	; 0x24
   24d14:	cmp	ip, r1
   24d18:	bne	24d28 <__flatcc_error_report@@Base+0x860>
   24d1c:	add	sp, sp, #12
   24d20:	pop	{r4, r5, lr}
   24d24:	b	242b0 <__flatcc_fb_default_error_out@@Base+0x1d0>
   24d28:	mov	r4, r0
   24d2c:	mov	r1, r5
   24d30:	str	lr, [sp]
   24d34:	str	lr, [sp, #4]
   24d38:	bl	244c8 <__flatcc_error_report@@Base>
   24d3c:	ldr	r0, [r4, #40]	; 0x28
   24d40:	add	sp, sp, #12
   24d44:	pop	{r4, r5, pc}
   24d48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   24d4c:	mov	r1, #40	; 0x28
   24d50:	mov	r5, r0
   24d54:	bl	24324 <__flatcc_fb_default_error_out@@Base+0x244>
   24d58:	subs	r6, r0, #0
   24d5c:	moveq	r4, r6
   24d60:	beq	24e28 <__flatcc_error_report@@Base+0x960>
   24d64:	mov	r1, #9
   24d68:	mov	r0, r5
   24d6c:	bl	24324 <__flatcc_fb_default_error_out@@Base+0x244>
   24d70:	subs	r4, r0, #0
   24d74:	beq	24e04 <__flatcc_error_report@@Base+0x93c>
   24d78:	ldr	sl, [pc, #196]	; 24e44 <__flatcc_error_report@@Base+0x97c>
   24d7c:	mov	r7, r4
   24d80:	mov	r8, #0
   24d84:	ldr	r9, [pc, #188]	; 24e48 <__flatcc_error_report@@Base+0x980>
   24d88:	mov	r1, #24
   24d8c:	mov	r0, r5
   24d90:	bl	241ec <__flatcc_fb_default_error_out@@Base+0x10c>
   24d94:	mov	r4, r0
   24d98:	mov	r1, #58	; 0x3a
   24d9c:	mov	r0, r5
   24da0:	str	r8, [r4]
   24da4:	str	r7, [r4, #4]
   24da8:	bl	24324 <__flatcc_fb_default_error_out@@Base+0x244>
   24dac:	cmp	r0, #0
   24db0:	beq	24dc8 <__flatcc_error_report@@Base+0x900>
   24db4:	mov	r3, sl
   24db8:	mov	r2, #1
   24dbc:	add	r1, r4, #8
   24dc0:	mov	r0, r5
   24dc4:	bl	24890 <__flatcc_error_report@@Base+0x3c8>
   24dc8:	ldr	r3, [r5, #108]	; 0x6c
   24dcc:	cmp	r3, #9
   24dd0:	bgt	24e28 <__flatcc_error_report@@Base+0x960>
   24dd4:	mov	r1, #44	; 0x2c
   24dd8:	mov	r0, r5
   24ddc:	bl	24324 <__flatcc_fb_default_error_out@@Base+0x244>
   24de0:	cmp	r0, #0
   24de4:	beq	24e04 <__flatcc_error_report@@Base+0x93c>
   24de8:	mov	r2, r9
   24dec:	mov	r1, #9
   24df0:	mov	r0, r5
   24df4:	mov	r8, r4
   24df8:	bl	24678 <__flatcc_error_report@@Base+0x1b0>
   24dfc:	subs	r7, r0, #0
   24e00:	bne	24d88 <__flatcc_error_report@@Base+0x8c0>
   24e04:	mov	r3, r6
   24e08:	ldr	r2, [pc, #60]	; 24e4c <__flatcc_error_report@@Base+0x984>
   24e0c:	mov	r1, #41	; 0x29
   24e10:	mov	r0, r5
   24e14:	bl	24d00 <__flatcc_error_report@@Base+0x838>
   24e18:	mov	r3, r4
   24e1c:	mov	r4, #0
   24e20:	cmp	r3, #0
   24e24:	bne	24e30 <__flatcc_error_report@@Base+0x968>
   24e28:	mov	r0, r4
   24e2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24e30:	ldr	r2, [r3]
   24e34:	str	r4, [r3]
   24e38:	mov	r4, r3
   24e3c:	mov	r3, r2
   24e40:	b	24e20 <__flatcc_error_report@@Base+0x958>
   24e44:	andeq	r7, r4, pc, ror #17
   24e48:	andeq	r7, r4, pc, lsl #18
   24e4c:	andeq	r7, r4, ip, lsr r9
   24e50:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   24e54:	mov	r3, #1
   24e58:	mov	r4, r0
   24e5c:	mov	r6, r1
   24e60:	mov	r5, #0
   24e64:	ldr	r7, [r0, #40]	; 0x28
   24e68:	strh	r3, [r1, #8]
   24e6c:	mov	r1, #91	; 0x5b
   24e70:	mov	r0, r4
   24e74:	bl	24324 <__flatcc_fb_default_error_out@@Base+0x244>
   24e78:	cmp	r0, #0
   24e7c:	bne	24f2c <__flatcc_error_report@@Base+0xa64>
   24e80:	cmp	r5, #1
   24e84:	ble	24e98 <__flatcc_error_report@@Base+0x9d0>
   24e88:	ldr	r2, [pc, #404]	; 25024 <__flatcc_error_report@@Base+0xb5c>
   24e8c:	mov	r1, r7
   24e90:	mov	r0, r4
   24e94:	bl	2465c <__flatcc_error_report@@Base+0x194>
   24e98:	ldr	r2, [r4, #40]	; 0x28
   24e9c:	ldr	r3, [r2, #16]
   24ea0:	cmn	r3, #984	; 0x3d8
   24ea4:	bgt	24f54 <__flatcc_error_report@@Base+0xa8c>
   24ea8:	mvn	r1, #984	; 0x3d8
   24eac:	cmp	r3, r1
   24eb0:	bge	24ed4 <__flatcc_error_report@@Base+0xa0c>
   24eb4:	cmn	r3, #988	; 0x3dc
   24eb8:	bge	24f34 <__flatcc_error_report@@Base+0xa6c>
   24ebc:	cmn	r3, #996	; 0x3e4
   24ec0:	bge	24ed4 <__flatcc_error_report@@Base+0xa0c>
   24ec4:	add	r3, r3, #996	; 0x3e4
   24ec8:	add	r3, r3, #3
   24ecc:	cmp	r3, #1
   24ed0:	bhi	24f40 <__flatcc_error_report@@Base+0xa78>
   24ed4:	cmp	r5, #0
   24ed8:	str	r2, [r6]
   24edc:	movne	r3, #7
   24ee0:	moveq	r3, #8
   24ee4:	mov	r0, r4
   24ee8:	strh	r3, [r6, #8]
   24eec:	bl	242b0 <__flatcc_fb_default_error_out@@Base+0x1d0>
   24ef0:	mov	r1, #93	; 0x5d
   24ef4:	mov	r0, r4
   24ef8:	bl	24324 <__flatcc_fb_default_error_out@@Base+0x244>
   24efc:	cmp	r0, #0
   24f00:	beq	24fd0 <__flatcc_error_report@@Base+0xb08>
   24f04:	subs	r5, r5, #1
   24f08:	bcs	24ef0 <__flatcc_error_report@@Base+0xa28>
   24f0c:	mov	r1, #0
   24f10:	mov	r3, r7
   24f14:	ldr	r2, [pc, #268]	; 25028 <__flatcc_error_report@@Base+0xb60>
   24f18:	mov	r0, r4
   24f1c:	str	r1, [sp]
   24f20:	str	r1, [sp, #4]
   24f24:	bl	244c8 <__flatcc_error_report@@Base>
   24f28:	b	24fd8 <__flatcc_error_report@@Base+0xb10>
   24f2c:	add	r5, r5, #1
   24f30:	b	24e6c <__flatcc_error_report@@Base+0x9a4>
   24f34:	ldr	r1, [pc, #240]	; 2502c <__flatcc_error_report@@Base+0xb64>
   24f38:	cmp	r3, r1
   24f3c:	beq	24ed4 <__flatcc_error_report@@Base+0xa0c>
   24f40:	ldr	r2, [pc, #232]	; 25030 <__flatcc_error_report@@Base+0xb68>
   24f44:	mov	r1, #0
   24f48:	mov	r0, r4
   24f4c:	bl	2465c <__flatcc_error_report@@Base+0x194>
   24f50:	b	24ef0 <__flatcc_error_report@@Base+0xa28>
   24f54:	ldr	r1, [pc, #216]	; 25034 <__flatcc_error_report@@Base+0xb6c>
   24f58:	cmp	r3, r1
   24f5c:	beq	24f9c <__flatcc_error_report@@Base+0xad4>
   24f60:	bgt	24f80 <__flatcc_error_report@@Base+0xab8>
   24f64:	sub	r1, r1, #8
   24f68:	cmp	r3, r1
   24f6c:	blt	24f40 <__flatcc_error_report@@Base+0xa78>
   24f70:	cmn	r3, #976	; 0x3d0
   24f74:	blt	24ed4 <__flatcc_error_report@@Base+0xa0c>
   24f78:	add	r1, r1, #7
   24f7c:	b	24f38 <__flatcc_error_report@@Base+0xa70>
   24f80:	cmp	r3, #9
   24f84:	beq	24fb0 <__flatcc_error_report@@Base+0xae8>
   24f88:	cmp	r3, #93	; 0x5d
   24f8c:	ldreq	r2, [pc, #164]	; 25038 <__flatcc_error_report@@Base+0xb70>
   24f90:	beq	24f44 <__flatcc_error_report@@Base+0xa7c>
   24f94:	cmn	r3, #972	; 0x3cc
   24f98:	b	24f3c <__flatcc_error_report@@Base+0xa74>
   24f9c:	cmp	r5, #0
   24fa0:	str	r2, [r6]
   24fa4:	movne	r3, #9
   24fa8:	moveq	r3, #10
   24fac:	b	24ee4 <__flatcc_error_report@@Base+0xa1c>
   24fb0:	mov	r1, r6
   24fb4:	mov	r0, r4
   24fb8:	bl	246a8 <__flatcc_error_report@@Base+0x1e0>
   24fbc:	cmp	r5, #0
   24fc0:	movne	r3, #11
   24fc4:	moveq	r3, #12
   24fc8:	strh	r3, [r6, #8]
   24fcc:	b	24ef0 <__flatcc_error_report@@Base+0xa28>
   24fd0:	cmp	r5, #0
   24fd4:	bne	24f0c <__flatcc_error_report@@Base+0xa44>
   24fd8:	mov	r1, #93	; 0x5d
   24fdc:	mov	r0, r4
   24fe0:	bl	24324 <__flatcc_fb_default_error_out@@Base+0x244>
   24fe4:	subs	r1, r0, #0
   24fe8:	beq	2501c <__flatcc_error_report@@Base+0xb54>
   24fec:	mov	r3, #0
   24ff0:	ldr	r2, [pc, #68]	; 2503c <__flatcc_error_report@@Base+0xb74>
   24ff4:	mov	r0, r4
   24ff8:	str	r3, [sp]
   24ffc:	str	r3, [sp, #4]
   25000:	mov	r3, r7
   25004:	bl	244c8 <__flatcc_error_report@@Base>
   25008:	mov	r1, #93	; 0x5d
   2500c:	mov	r0, r4
   25010:	bl	24324 <__flatcc_fb_default_error_out@@Base+0x244>
   25014:	cmp	r0, #0
   25018:	bne	25008 <__flatcc_error_report@@Base+0xb40>
   2501c:	add	sp, sp, #12
   25020:	pop	{r4, r5, r6, r7, pc}
   25024:	andeq	r7, r4, fp, asr r9
   25028:			; <UNDEFINED> instruction: 0x000479b6
   2502c:			; <UNDEFINED> instruction: 0xfffffc25
   25030:	muleq	r4, pc, r9	; <UNPREDICTABLE>
   25034:			; <UNDEFINED> instruction: 0xfffffc32
   25038:	andeq	r7, r4, r3, lsl #19
   2503c:	ldrdeq	r7, [r4], -r7	; <UNPREDICTABLE>
   25040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25044:	mov	r6, r1
   25048:	sub	sp, sp, #20
   2504c:	mov	r8, r2
   25050:	mov	r1, #9
   25054:	mov	r4, r0
   25058:	ldr	r2, [pc, #564]	; 25294 <__flatcc_error_report@@Base+0xdcc>
   2505c:	bl	24678 <__flatcc_error_report@@Base+0x1b0>
   25060:	cmp	r0, #0
   25064:	beq	251d0 <__flatcc_error_report@@Base+0xd08>
   25068:	str	r0, [r6, #4]
   2506c:	mov	r0, r4
   25070:	bl	24d48 <__flatcc_error_report@@Base+0x880>
   25074:	ldr	r2, [pc, #540]	; 25298 <__flatcc_error_report@@Base+0xdd0>
   25078:	mov	r1, #123	; 0x7b
   2507c:	str	r0, [r6, #28]
   25080:	mov	r0, r4
   25084:	bl	24678 <__flatcc_error_report@@Base+0x1b0>
   25088:	cmp	r0, #0
   2508c:	beq	251d0 <__flatcc_error_report@@Base+0xd08>
   25090:	ldr	r9, [pc, #516]	; 2529c <__flatcc_error_report@@Base+0xdd4>
   25094:	ldr	sl, [pc, #516]	; 252a0 <__flatcc_error_report@@Base+0xdd8>
   25098:	ldr	fp, [pc, #516]	; 252a4 <__flatcc_error_report@@Base+0xddc>
   2509c:	ldr	r7, [r4, #40]	; 0x28
   250a0:	add	r5, r6, #20
   250a4:	ldr	r3, [r4, #40]	; 0x28
   250a8:	ldr	r1, [r3, #16]
   250ac:	cmp	r1, #125	; 0x7d
   250b0:	bne	25104 <__flatcc_error_report@@Base+0xc3c>
   250b4:	mov	r0, r4
   250b8:	bl	24324 <__flatcc_fb_default_error_out@@Base+0x244>
   250bc:	clz	r0, r0
   250c0:	cmp	r7, #0
   250c4:	lsr	r0, r0, #5
   250c8:	moveq	r0, #0
   250cc:	cmp	r0, #0
   250d0:	beq	250f4 <__flatcc_error_report@@Base+0xc2c>
   250d4:	mov	r3, #0
   250d8:	ldr	r2, [pc, #456]	; 252a8 <__flatcc_error_report@@Base+0xde0>
   250dc:	mov	r0, r4
   250e0:	ldr	r1, [r4, #40]	; 0x28
   250e4:	str	r3, [sp]
   250e8:	str	r3, [sp, #4]
   250ec:	mov	r3, r7
   250f0:	bl	244c8 <__flatcc_error_report@@Base>
   250f4:	mov	r0, r5
   250f8:	add	sp, sp, #20
   250fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25100:	b	240b4 <__flatcc_fb_read_file@@Base+0xf0>
   25104:	cmp	r8, r9
   25108:	mov	r1, r5
   2510c:	mov	r0, r4
   25110:	bne	2520c <__flatcc_error_report@@Base+0xd44>
   25114:	bl	243d0 <__flatcc_fb_default_error_out@@Base+0x2f0>
   25118:	mov	r5, r0
   2511c:	ldr	r2, [pc, #392]	; 252ac <__flatcc_error_report@@Base+0xde4>
   25120:	mov	r1, #9
   25124:	mov	r0, r4
   25128:	bl	24678 <__flatcc_error_report@@Base+0x1b0>
   2512c:	cmp	r0, #0
   25130:	beq	251bc <__flatcc_error_report@@Base+0xcf4>
   25134:	ldr	r2, [pc, #372]	; 252b0 <__flatcc_error_report@@Base+0xde8>
   25138:	mov	r1, #40	; 0x28
   2513c:	str	r0, [r5, #4]
   25140:	mov	r0, r4
   25144:	bl	24678 <__flatcc_error_report@@Base+0x1b0>
   25148:	cmp	r0, #0
   2514c:	beq	251bc <__flatcc_error_report@@Base+0xcf4>
   25150:	add	r1, r5, #32
   25154:	mov	r0, r4
   25158:	bl	24e50 <__flatcc_error_report@@Base+0x988>
   2515c:	ldr	r2, [pc, #336]	; 252b4 <__flatcc_error_report@@Base+0xdec>
   25160:	mov	r1, #41	; 0x29
   25164:	mov	r0, r4
   25168:	bl	24678 <__flatcc_error_report@@Base+0x1b0>
   2516c:	cmp	r0, #0
   25170:	beq	251bc <__flatcc_error_report@@Base+0xcf4>
   25174:	ldr	r2, [pc, #316]	; 252b8 <__flatcc_error_report@@Base+0xdf0>
   25178:	mov	r1, #58	; 0x3a
   2517c:	mov	r0, r4
   25180:	bl	24678 <__flatcc_error_report@@Base+0x1b0>
   25184:	cmp	r0, #0
   25188:	beq	251bc <__flatcc_error_report@@Base+0xcf4>
   2518c:	add	r1, r5, #16
   25190:	mov	r0, r4
   25194:	bl	24e50 <__flatcc_error_report@@Base+0x988>
   25198:	mov	r1, #61	; 0x3d
   2519c:	mov	r0, r4
   251a0:	bl	24324 <__flatcc_fb_default_error_out@@Base+0x244>
   251a4:	subs	r3, r0, #0
   251a8:	beq	251e4 <__flatcc_error_report@@Base+0xd1c>
   251ac:	ldr	r2, [pc, #264]	; 252bc <__flatcc_error_report@@Base+0xdf4>
   251b0:	mov	r1, r3
   251b4:	mov	r0, r4
   251b8:	bl	2465c <__flatcc_error_report@@Base+0x194>
   251bc:	mov	r0, r4
   251c0:	bl	24348 <__flatcc_fb_default_error_out@@Base+0x268>
   251c4:	ldr	r3, [r4, #108]	; 0x6c
   251c8:	cmp	r3, #9
   251cc:	ble	250a0 <__flatcc_error_report@@Base+0xbd8>
   251d0:	mov	r1, #125	; 0x7d
   251d4:	mov	r0, r4
   251d8:	add	sp, sp, #20
   251dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   251e0:	b	24390 <__flatcc_fb_default_error_out@@Base+0x2b0>
   251e4:	mov	r0, r4
   251e8:	str	r3, [sp, #12]
   251ec:	bl	24d48 <__flatcc_error_report@@Base+0x880>
   251f0:	ldr	r2, [pc, #200]	; 252c0 <__flatcc_error_report@@Base+0xdf8>
   251f4:	str	r0, [r5, #64]	; 0x40
   251f8:	ldr	r3, [sp, #12]
   251fc:	mov	r1, #59	; 0x3b
   25200:	mov	r0, r4
   25204:	bl	24d00 <__flatcc_error_report@@Base+0x838>
   25208:	b	251c4 <__flatcc_error_report@@Base+0xcfc>
   2520c:	bl	243d0 <__flatcc_fb_default_error_out@@Base+0x2f0>
   25210:	mov	r5, r0
   25214:	mov	r2, sl
   25218:	mov	r1, #9
   2521c:	mov	r0, r4
   25220:	bl	24678 <__flatcc_error_report@@Base+0x1b0>
   25224:	cmp	r0, #0
   25228:	beq	251bc <__flatcc_error_report@@Base+0xcf4>
   2522c:	mov	r2, fp
   25230:	mov	r1, #58	; 0x3a
   25234:	str	r0, [r5, #4]
   25238:	mov	r0, r4
   2523c:	bl	24678 <__flatcc_error_report@@Base+0x1b0>
   25240:	cmp	r0, #0
   25244:	beq	251bc <__flatcc_error_report@@Base+0xcf4>
   25248:	add	r1, r5, #16
   2524c:	mov	r0, r4
   25250:	bl	24e50 <__flatcc_error_report@@Base+0x988>
   25254:	mov	r1, #61	; 0x3d
   25258:	mov	r0, r4
   2525c:	bl	24324 <__flatcc_fb_default_error_out@@Base+0x244>
   25260:	cmp	r0, #0
   25264:	beq	2527c <__flatcc_error_report@@Base+0xdb4>
   25268:	ldr	r3, [pc, #84]	; 252c4 <__flatcc_error_report@@Base+0xdfc>
   2526c:	mov	r2, #2
   25270:	add	r1, r5, #48	; 0x30
   25274:	mov	r0, r4
   25278:	bl	24890 <__flatcc_error_report@@Base+0x3c8>
   2527c:	mov	r0, r4
   25280:	bl	24d48 <__flatcc_error_report@@Base+0x880>
   25284:	mov	r3, #0
   25288:	ldr	r2, [pc, #56]	; 252c8 <__flatcc_error_report@@Base+0xe00>
   2528c:	str	r0, [r5, #64]	; 0x40
   25290:	b	251fc <__flatcc_error_report@@Base+0xd34>
   25294:	andeq	r7, r4, lr, ror #19
   25298:	andeq	r7, r4, r1, lsl sl
   2529c:			; <UNDEFINED> instruction: 0xfffffc39
   252a0:	andeq	r7, r4, sp, lsl #22
   252a4:	andeq	r7, r4, r7, lsr #22
   252a8:	muleq	r4, r5, fp
   252ac:	andeq	r7, r4, sl, lsr #20
   252b0:	andeq	r7, r4, r5, asr #20
   252b4:	andeq	r7, r4, sl, ror #20
   252b8:	muleq	r4, r1, sl
   252bc:	andeq	r7, r4, r4, asr #21
   252c0:	andeq	r7, r4, sl, ror #21
   252c4:	andeq	r7, r4, r0, asr fp
   252c8:	andeq	r7, r4, r3, ror fp

000252cc <error_ref_sym@@Base>:
   252cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   252d0:	mov	sl, r0
   252d4:	sub	sp, sp, #68	; 0x44
   252d8:	mov	r9, r1
   252dc:	mov	fp, r2
   252e0:	mov	r7, r3
   252e4:	mov	r8, r1
   252e8:	mov	r4, #0
   252ec:	mov	r6, #50	; 0x32
   252f0:	cmp	r6, #0
   252f4:	add	r3, sp, #12
   252f8:	movle	r2, #0
   252fc:	movgt	r2, #1
   25300:	cmp	r8, #0
   25304:	moveq	r2, #0
   25308:	cmp	r2, #0
   2530c:	bne	25360 <error_ref_sym@@Base+0x94>
   25310:	add	r1, sp, #64	; 0x40
   25314:	cmp	r4, #0
   25318:	add	r1, r1, r4
   2531c:	subgt	r4, r4, #1
   25320:	cmp	r6, #0
   25324:	mov	r0, sl
   25328:	strb	r2, [r1, #-52]	; 0xffffffcc
   2532c:	movle	r4, #50	; 0x32
   25330:	ldrle	r2, [pc, #108]	; 253a4 <error_ref_sym@@Base+0xd8>
   25334:	ldr	r1, [r9, #4]
   25338:	ldrle	r2, [r2]
   2533c:	strle	r2, [sp, #59]	; 0x3b
   25340:	cmp	r7, #0
   25344:	mov	r2, fp
   25348:	ldrne	r7, [r7, #4]
   2534c:	stm	sp, {r3, r4}
   25350:	mov	r3, r7
   25354:	bl	244c8 <__flatcc_error_report@@Base>
   25358:	add	sp, sp, #68	; 0x44
   2535c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25360:	ldr	r1, [r8, #4]
   25364:	add	r0, r3, r4
   25368:	ldm	r1, {r1, r5}
   2536c:	cmp	r6, r5
   25370:	movlt	r5, r6
   25374:	mov	r2, r5
   25378:	add	r4, r4, r5
   2537c:	bl	13ffc <memcpy@plt>
   25380:	add	r3, sp, #64	; 0x40
   25384:	sub	r6, r6, r5
   25388:	add	r2, r3, r4
   2538c:	mov	r3, #46	; 0x2e
   25390:	sub	r6, r6, #1
   25394:	add	r4, r4, #1
   25398:	strb	r3, [r2, #-52]	; 0xffffffcc
   2539c:	ldr	r8, [r8]
   253a0:	b	252f0 <error_ref_sym@@Base+0x24>
   253a4:	andeq	r7, r4, r0, asr r5

000253a8 <__flatcc_fb_init_parser@@Base>:
   253a8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   253ac:	mov	r8, r3
   253b0:	mov	r6, r1
   253b4:	mov	r5, r2
   253b8:	mov	r1, #0
   253bc:	mov	r2, #560	; 0x230
   253c0:	mov	r4, r0
   253c4:	ldr	r7, [sp, #52]	; 0x34
   253c8:	bl	140d4 <memset@plt>
   253cc:	cmp	r8, #0
   253d0:	add	r0, r4, #128	; 0x80
   253d4:	ldrne	r3, [sp, #48]	; 0x30
   253d8:	strne	r8, [r4, #8]
   253dc:	ldreq	r3, [pc, #408]	; 2557c <__flatcc_fb_init_parser@@Base+0x1d4>
   253e0:	strne	r3, [r4, #12]
   253e4:	streq	r3, [r4, #8]
   253e8:	cmp	r6, #0
   253ec:	beq	25440 <__flatcc_fb_init_parser@@Base+0x98>
   253f0:	mov	r2, #224	; 0xe0
   253f4:	mov	r1, r6
   253f8:	bl	13ffc <memcpy@plt>
   253fc:	ldr	r2, [r4, #192]	; 0xc0
   25400:	cmp	r7, #0
   25404:	addeq	r7, r4, #416	; 0x1a0
   25408:	str	r7, [r4, #412]	; 0x19c
   2540c:	cmp	r2, #8
   25410:	bhi	25424 <__flatcc_fb_init_parser@@Base+0x7c>
   25414:	mov	r3, #1
   25418:	lsl	r2, r3, r2
   2541c:	tst	r2, #276	; 0x114
   25420:	bne	25448 <__flatcc_fb_init_parser@@Base+0xa0>
   25424:	ldr	r2, [pc, #340]	; 25580 <__flatcc_fb_init_parser@@Base+0x1d8>
   25428:	mov	r0, r4
   2542c:	mov	r1, #0
   25430:	bl	2465c <__flatcc_error_report@@Base+0x194>
   25434:	mvn	r0, #0
   25438:	add	sp, sp, #12
   2543c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25440:	bl	14cb8 <flatcc_init_options@@Base>
   25444:	b	253fc <__flatcc_fb_init_parser@@Base+0x54>
   25448:	ldr	r2, [r4, #196]	; 0xc4
   2544c:	cmp	r2, #8
   25450:	bhi	25460 <__flatcc_fb_init_parser@@Base+0xb8>
   25454:	lsl	r3, r3, r2
   25458:	tst	r3, #276	; 0x114
   2545c:	bne	25468 <__flatcc_fb_init_parser@@Base+0xc0>
   25460:	ldr	r2, [pc, #284]	; 25584 <__flatcc_fb_init_parser@@Base+0x1dc>
   25464:	b	25428 <__flatcc_fb_init_parser@@Base+0x80>
   25468:	ldr	r3, [pc, #280]	; 25588 <__flatcc_fb_init_parser@@Base+0x1e0>
   2546c:	cmp	r5, #0
   25470:	moveq	r5, r3
   25474:	mov	r0, r5
   25478:	bl	140a4 <strlen@plt>
   2547c:	mov	r1, r0
   25480:	mov	sl, r0
   25484:	ldr	r2, [r6, #96]	; 0x60
   25488:	mov	r0, r5
   2548c:	bl	23f6c <__flatcc_fb_create_basename@@Base>
   25490:	cmp	r0, #0
   25494:	mov	r7, r0
   25498:	str	r0, [r4, #512]	; 0x200
   2549c:	bne	254a4 <__flatcc_fb_init_parser@@Base+0xfc>
   254a0:	bl	24100 <__flatcc_fb_default_error_out@@Base+0x20>
   254a4:	bl	140a4 <strlen@plt>
   254a8:	mov	r9, r0
   254ac:	mov	r1, r0
   254b0:	mov	r0, r7
   254b4:	bl	23b70 <__flatcc_fb_copy_path_n@@Base>
   254b8:	subs	r7, r0, #0
   254bc:	movne	r8, r7
   254c0:	addne	r3, r7, r9
   254c4:	beq	254a0 <__flatcc_fb_init_parser@@Base+0xf8>
   254c8:	cmp	r8, r3
   254cc:	beq	254dc <__flatcc_fb_init_parser@@Base+0x134>
   254d0:	ldrb	fp, [r8]
   254d4:	cmp	fp, #0
   254d8:	bne	25560 <__flatcc_fb_init_parser@@Base+0x1b8>
   254dc:	ldr	r2, [pc, #168]	; 2558c <__flatcc_fb_init_parser@@Base+0x1e4>
   254e0:	mov	r1, sl
   254e4:	mov	r0, r5
   254e8:	str	r7, [r4, #496]	; 0x1f0
   254ec:	str	r9, [r4, #500]	; 0x1f4
   254f0:	str	r7, [r4, #516]	; 0x204
   254f4:	bl	23f6c <__flatcc_fb_create_basename@@Base>
   254f8:	cmp	r0, #0
   254fc:	str	r0, [r4, #520]	; 0x208
   25500:	beq	254a0 <__flatcc_fb_init_parser@@Base+0xf8>
   25504:	ldr	r0, [r6, #192]	; 0xc0
   25508:	cmp	r0, #0
   2550c:	beq	2551c <__flatcc_fb_init_parser@@Base+0x174>
   25510:	str	r0, [r4, #476]	; 0x1dc
   25514:	bl	140a4 <strlen@plt>
   25518:	str	r0, [r4, #480]	; 0x1e0
   2551c:	mov	r1, #0
   25520:	mov	r0, r4
   25524:	bl	24254 <__flatcc_fb_default_error_out@@Base+0x174>
   25528:	mov	r5, r0
   2552c:	mov	r2, #0
   25530:	ldr	r0, [r4, #412]	; 0x19c
   25534:	mov	r1, r2
   25538:	str	r5, [r4, #544]	; 0x220
   2553c:	bl	23610 <fb_scope_table_find@@Base>
   25540:	cmp	r5, r0
   25544:	moveq	r0, #0
   25548:	beq	25438 <__flatcc_fb_init_parser@@Base+0x90>
   2554c:	ldr	r3, [pc, #60]	; 25590 <__flatcc_fb_init_parser@@Base+0x1e8>
   25550:	movw	r2, #1331	; 0x533
   25554:	ldr	r1, [pc, #56]	; 25594 <__flatcc_fb_init_parser@@Base+0x1ec>
   25558:	ldr	r0, [pc, #56]	; 25598 <__flatcc_fb_init_parser@@Base+0x1f0>
   2555c:	bl	1417c <__assert_fail@plt>
   25560:	str	r3, [sp, #4]
   25564:	bl	14080 <__ctype_toupper_loc@plt>
   25568:	ldr	r2, [r0]
   2556c:	ldr	r3, [sp, #4]
   25570:	ldr	r2, [r2, fp, lsl #2]
   25574:	strb	r2, [r8], #1
   25578:	b	254c8 <__flatcc_fb_init_parser@@Base+0x120>
   2557c:	andeq	r4, r2, r0, ror #1
   25580:	andeq	r7, r4, r3, asr #23
   25584:	strdeq	r7, [r4], -fp
   25588:			; <UNDEFINED> instruction: 0x00047bbe
   2558c:	strdeq	r2, [r3], -r7
   25590:	andeq	r7, r4, r5, asr r5
   25594:	andeq	r7, r4, sp, ror #12
   25598:	andeq	r7, r4, r4, lsr ip

0002559c <__flatcc_fb_parse@@Base>:
   2559c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   255a0:	mov	r5, r1
   255a4:	mov	r4, r0
   255a8:	sub	sp, sp, #28
   255ac:	add	r7, r5, r2
   255b0:	str	r1, [r0, #60]	; 0x3c
   255b4:	mov	r1, #1
   255b8:	ldr	r8, [pc, #4024]	; 26578 <__flatcc_fb_parse@@Base+0xfdc>
   255bc:	str	r1, [r0, #64]	; 0x40
   255c0:	mov	r1, #9
   255c4:	ldr	r9, [pc, #4016]	; 2657c <__flatcc_fb_parse@@Base+0xfe0>
   255c8:	str	r1, [r0, #84]	; 0x54
   255cc:	ldr	r1, [pc, #4012]	; 26580 <__flatcc_fb_parse@@Base+0xfe4>
   255d0:	str	r1, [r0, #68]	; 0x44
   255d4:	mov	r1, #4
   255d8:	str	r1, [r0, #72]	; 0x48
   255dc:	mov	r1, #0
   255e0:	cmp	r3, r1
   255e4:	str	r1, [r0, #76]	; 0x4c
   255e8:	str	r1, [r0, #80]	; 0x50
   255ec:	str	r1, [r0, #96]	; 0x60
   255f0:	str	r1, [r0, #100]	; 0x64
   255f4:	ldr	r0, [pc, #3976]	; 26584 <__flatcc_fb_parse@@Base+0xfe8>
   255f8:	strne	r5, [r4, #16]
   255fc:	str	r0, [r4, #104]	; 0x68
   25600:	ldr	r0, [pc, #3968]	; 26588 <__flatcc_fb_parse@@Base+0xfec>
   25604:	str	r0, [r4, #88]	; 0x58
   25608:	mov	r0, #5
   2560c:	str	r0, [r4, #92]	; 0x5c
   25610:	ldr	sl, [pc, #3956]	; 2658c <__flatcc_fb_parse@@Base+0xff0>
   25614:	cmp	r7, r5
   25618:	beq	258c4 <__flatcc_fb_parse@@Base+0x328>
   2561c:	ldrb	r1, [r5]
   25620:	cmp	r1, #57	; 0x39
   25624:	bhi	25b24 <__flatcc_fb_parse@@Base+0x588>
   25628:	cmp	r1, #49	; 0x31
   2562c:	bcs	2627c <__flatcc_fb_parse@@Base+0xce0>
   25630:	cmp	r1, #38	; 0x26
   25634:	beq	25e4c <__flatcc_fb_parse@@Base+0x8b0>
   25638:	bhi	25a78 <__flatcc_fb_parse@@Base+0x4dc>
   2563c:	cmp	r1, #13
   25640:	beq	25ce0 <__flatcc_fb_parse@@Base+0x744>
   25644:	bhi	25a00 <__flatcc_fb_parse@@Base+0x464>
   25648:	cmp	r1, #9
   2564c:	beq	25a14 <__flatcc_fb_parse@@Base+0x478>
   25650:	cmp	r1, #10
   25654:	beq	25cb4 <__flatcc_fb_parse@@Base+0x718>
   25658:	cmp	r1, #0
   2565c:	beq	258c4 <__flatcc_fb_parse@@Base+0x328>
   25660:	cmp	r1, #127	; 0x7f
   25664:	cmpne	r1, #31
   25668:	add	r6, r5, #1
   2566c:	mov	r3, r6
   25670:	mov	r2, r5
   25674:	movls	r1, #5
   25678:	movhi	r1, #8
   2567c:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   25680:	mov	sl, r6
   25684:	b	25708 <__flatcc_fb_parse@@Base+0x16c>
   25688:	cmp	r3, #0
   2568c:	cmpne	r7, r6
   25690:	bne	256b0 <__flatcc_fb_parse@@Base+0x114>
   25694:	mov	r3, r6
   25698:	mov	r2, r6
   2569c:	mov	r1, #23
   256a0:	mov	r0, r4
   256a4:	bl	24124 <__flatcc_fb_default_error_out@@Base+0x44>
   256a8:	mov	r5, r6
   256ac:	b	25610 <__flatcc_fb_parse@@Base+0x74>
   256b0:	cmp	r3, #92	; 0x5c
   256b4:	bne	257e4 <__flatcc_fb_parse@@Base+0x248>
   256b8:	add	r5, sl, #2
   256bc:	mov	r2, r6
   256c0:	mov	r3, r5
   256c4:	mov	r1, #21
   256c8:	mov	r0, r4
   256cc:	bl	24124 <__flatcc_fb_default_error_out@@Base+0x44>
   256d0:	cmp	r7, r5
   256d4:	beq	256e4 <__flatcc_fb_parse@@Base+0x148>
   256d8:	ldrb	r3, [r6, #1]
   256dc:	cmp	r3, #0
   256e0:	bne	256f4 <__flatcc_fb_parse@@Base+0x158>
   256e4:	mov	r3, r5
   256e8:	mov	r2, r5
   256ec:	mov	r1, #23
   256f0:	b	25768 <__flatcc_fb_parse@@Base+0x1cc>
   256f4:	cmp	r3, #34	; 0x22
   256f8:	cmpne	r3, #92	; 0x5c
   256fc:	bne	25774 <__flatcc_fb_parse@@Base+0x1d8>
   25700:	add	sl, r6, #2
   25704:	sub	sl, sl, #1
   25708:	add	r6, sl, #1
   2570c:	cmp	r7, r6
   25710:	beq	25730 <__flatcc_fb_parse@@Base+0x194>
   25714:	ldrb	r3, [sl, #1]
   25718:	cmp	r3, #34	; 0x22
   2571c:	cmpne	r3, #92	; 0x5c
   25720:	beq	25730 <__flatcc_fb_parse@@Base+0x194>
   25724:	cmp	r3, #127	; 0x7f
   25728:	cmpne	r3, #31
   2572c:	bhi	25680 <__flatcc_fb_parse@@Base+0xe4>
   25730:	cmp	r6, r5
   25734:	beq	2574c <__flatcc_fb_parse@@Base+0x1b0>
   25738:	mov	r3, r6
   2573c:	mov	r2, r5
   25740:	mov	r1, #20
   25744:	mov	r0, r4
   25748:	bl	24124 <__flatcc_fb_default_error_out@@Base+0x44>
   2574c:	ldrb	r3, [r6]
   25750:	cmp	r3, #34	; 0x22
   25754:	bne	25688 <__flatcc_fb_parse@@Base+0xec>
   25758:	add	r5, sl, #2
   2575c:	mov	r2, r6
   25760:	mov	r3, r5
   25764:	mov	r1, #22
   25768:	mov	r0, r4
   2576c:	bl	24124 <__flatcc_fb_default_error_out@@Base+0x44>
   25770:	b	25610 <__flatcc_fb_parse@@Base+0x74>
   25774:	cmp	r3, #10
   25778:	bne	257c0 <__flatcc_fb_parse@@Base+0x224>
   2577c:	add	sl, r6, #2
   25780:	cmp	r7, sl
   25784:	beq	25794 <__flatcc_fb_parse@@Base+0x1f8>
   25788:	ldrb	r3, [r6, #2]
   2578c:	cmp	r3, #13
   25790:	addeq	sl, r6, #3
   25794:	ldr	r3, [r4, #64]	; 0x40
   25798:	mov	r2, r5
   2579c:	mov	r1, #18
   257a0:	str	sl, [r4, #60]	; 0x3c
   257a4:	add	r3, r3, #1
   257a8:	str	r3, [r4, #64]	; 0x40
   257ac:	mov	r3, sl
   257b0:	mov	r0, r4
   257b4:	mov	r5, sl
   257b8:	bl	24124 <__flatcc_fb_default_error_out@@Base+0x44>
   257bc:	b	25704 <__flatcc_fb_parse@@Base+0x168>
   257c0:	cmp	r3, #13
   257c4:	movne	r6, r5
   257c8:	bne	257e4 <__flatcc_fb_parse@@Base+0x248>
   257cc:	add	sl, r6, #2
   257d0:	cmp	r7, sl
   257d4:	beq	25794 <__flatcc_fb_parse@@Base+0x1f8>
   257d8:	ldrb	r3, [r6, #2]
   257dc:	cmp	r3, #10
   257e0:	b	25790 <__flatcc_fb_parse@@Base+0x1f4>
   257e4:	ldrb	r3, [r6]
   257e8:	cmp	r3, #13
   257ec:	cmpne	r3, #10
   257f0:	beq	25694 <__flatcc_fb_parse@@Base+0xf8>
   257f4:	add	sl, r6, #1
   257f8:	mov	r2, r6
   257fc:	mov	r3, sl
   25800:	mov	r1, #6
   25804:	b	257b0 <__flatcc_fb_parse@@Base+0x214>
   25808:	mov	sl, r5
   2580c:	b	2586c <__flatcc_fb_parse@@Base+0x2d0>
   25810:	ldrb	r3, [r5]
   25814:	cmp	r3, #0
   25818:	beq	258a8 <__flatcc_fb_parse@@Base+0x30c>
   2581c:	cmp	r3, #13
   25820:	cmpne	r3, #10
   25824:	moveq	r3, #0
   25828:	streq	r3, [r4, #32]
   2582c:	beq	25610 <__flatcc_fb_parse@@Base+0x74>
   25830:	cmp	r3, #9
   25834:	cmpne	r3, #32
   25838:	add	r6, sl, #2
   2583c:	bne	25854 <__flatcc_fb_parse@@Base+0x2b8>
   25840:	mov	r2, r6
   25844:	mov	r1, r5
   25848:	mov	r0, r4
   2584c:	bl	241cc <__flatcc_fb_default_error_out@@Base+0xec>
   25850:	b	25868 <__flatcc_fb_parse@@Base+0x2cc>
   25854:	mov	r3, r6
   25858:	mov	r2, r5
   2585c:	mov	r1, #7
   25860:	mov	r0, r4
   25864:	bl	24124 <__flatcc_fb_default_error_out@@Base+0x44>
   25868:	sub	sl, r6, #1
   2586c:	add	r5, sl, #1
   25870:	cmp	r7, r5
   25874:	beq	274e0 <__flatcc_fb_parse@@Base+0x1f44>
   25878:	ldrb	r3, [sl, #1]
   2587c:	cmp	r3, #127	; 0x7f
   25880:	cmpne	r3, #31
   25884:	bhi	25808 <__flatcc_fb_parse@@Base+0x26c>
   25888:	cmp	r6, r5
   2588c:	beq	25810 <__flatcc_fb_parse@@Base+0x274>
   25890:	mov	r2, r5
   25894:	mov	r1, r6
   25898:	mov	r0, r4
   2589c:	bl	241cc <__flatcc_fb_default_error_out@@Base+0xec>
   258a0:	cmp	r7, r5
   258a4:	bne	25810 <__flatcc_fb_parse@@Base+0x274>
   258a8:	mov	r3, r5
   258ac:	mov	r2, r5
   258b0:	mov	r1, #27
   258b4:	mov	r0, r4
   258b8:	bl	24124 <__flatcc_fb_default_error_out@@Base+0x44>
   258bc:	cmp	r7, r5
   258c0:	bne	26b00 <__flatcc_fb_parse@@Base+0x1564>
   258c4:	mov	r3, r5
   258c8:	mov	r2, r5
   258cc:	mov	r1, #0
   258d0:	b	26b14 <__flatcc_fb_parse@@Base+0x1578>
   258d4:	cmp	r3, #47	; 0x2f
   258d8:	bne	258e8 <__flatcc_fb_parse@@Base+0x34c>
   258dc:	ldrb	r3, [r6, #-1]
   258e0:	cmp	r3, #42	; 0x2a
   258e4:	beq	258f0 <__flatcc_fb_parse@@Base+0x354>
   258e8:	mov	r5, r6
   258ec:	b	25958 <__flatcc_fb_parse@@Base+0x3bc>
   258f0:	cmp	sl, r5
   258f4:	beq	25910 <__flatcc_fb_parse@@Base+0x374>
   258f8:	mov	r6, r5
   258fc:	mov	r2, r6
   25900:	mov	r1, sl
   25904:	mov	r0, r4
   25908:	mov	r5, r6
   2590c:	bl	241cc <__flatcc_fb_default_error_out@@Base+0xec>
   25910:	cmp	r5, r7
   25914:	beq	258a8 <__flatcc_fb_parse@@Base+0x30c>
   25918:	ldrb	r3, [r5]
   2591c:	cmp	r3, #0
   25920:	beq	258a8 <__flatcc_fb_parse@@Base+0x30c>
   25924:	cmp	r3, #10
   25928:	bne	25984 <__flatcc_fb_parse@@Base+0x3e8>
   2592c:	add	sl, r5, #1
   25930:	cmp	r7, sl
   25934:	beq	25944 <__flatcc_fb_parse@@Base+0x3a8>
   25938:	ldrb	r3, [r5, #1]
   2593c:	cmp	r3, #13
   25940:	addeq	sl, r5, #2
   25944:	ldr	r3, [r4, #64]	; 0x40
   25948:	str	sl, [r4, #60]	; 0x3c
   2594c:	add	r3, r3, #1
   25950:	str	r3, [r4, #64]	; 0x40
   25954:	sub	r5, sl, #1
   25958:	add	r6, r5, #1
   2595c:	cmp	r7, r6
   25960:	beq	274d0 <__flatcc_fb_parse@@Base+0x1f34>
   25964:	ldrb	r3, [r5, #1]
   25968:	cmp	r3, #127	; 0x7f
   2596c:	cmpne	r3, #31
   25970:	bhi	258d4 <__flatcc_fb_parse@@Base+0x338>
   25974:	cmp	sl, r6
   25978:	moveq	r5, sl
   2597c:	beq	25918 <__flatcc_fb_parse@@Base+0x37c>
   25980:	b	258fc <__flatcc_fb_parse@@Base+0x360>
   25984:	cmp	r3, #13
   25988:	bne	259a4 <__flatcc_fb_parse@@Base+0x408>
   2598c:	add	sl, r5, #1
   25990:	cmp	r7, sl
   25994:	beq	25944 <__flatcc_fb_parse@@Base+0x3a8>
   25998:	ldrb	r3, [r5, #1]
   2599c:	cmp	r3, #10
   259a0:	b	25940 <__flatcc_fb_parse@@Base+0x3a4>
   259a4:	cmp	r3, #127	; 0x7f
   259a8:	cmpne	r3, #31
   259ac:	movls	r2, #1
   259b0:	movhi	r2, #0
   259b4:	bhi	259f4 <__flatcc_fb_parse@@Base+0x458>
   259b8:	cmp	r3, #9
   259bc:	cmpne	r3, #32
   259c0:	add	sl, r5, #1
   259c4:	bne	259dc <__flatcc_fb_parse@@Base+0x440>
   259c8:	mov	r2, sl
   259cc:	mov	r1, r5
   259d0:	mov	r0, r4
   259d4:	bl	241cc <__flatcc_fb_default_error_out@@Base+0xec>
   259d8:	b	25954 <__flatcc_fb_parse@@Base+0x3b8>
   259dc:	mov	r3, sl
   259e0:	mov	r2, r5
   259e4:	mov	r1, #7
   259e8:	mov	r0, r4
   259ec:	bl	24124 <__flatcc_fb_default_error_out@@Base+0x44>
   259f0:	b	25954 <__flatcc_fb_parse@@Base+0x3b8>
   259f4:	add	r5, r5, #2
   259f8:	str	r2, [r4, #32]
   259fc:	b	25610 <__flatcc_fb_parse@@Base+0x74>
   25a00:	cmp	r1, #33	; 0x21
   25a04:	beq	25a4c <__flatcc_fb_parse@@Base+0x4b0>
   25a08:	bhi	25a3c <__flatcc_fb_parse@@Base+0x4a0>
   25a0c:	cmp	r1, #32
   25a10:	bne	25660 <__flatcc_fb_parse@@Base+0xc4>
   25a14:	add	r5, r5, #1
   25a18:	cmp	r7, r5
   25a1c:	mov	r6, r5
   25a20:	beq	25a34 <__flatcc_fb_parse@@Base+0x498>
   25a24:	ldrb	r3, [r5], #1
   25a28:	cmp	r3, #9
   25a2c:	cmpne	r3, #32
   25a30:	beq	25a18 <__flatcc_fb_parse@@Base+0x47c>
   25a34:	mov	r5, r6
   25a38:	b	25614 <__flatcc_fb_parse@@Base+0x78>
   25a3c:	cmp	r1, #34	; 0x22
   25a40:	beq	25cf8 <__flatcc_fb_parse@@Base+0x75c>
   25a44:	cmp	r1, #37	; 0x25
   25a48:	bne	25660 <__flatcc_fb_parse@@Base+0xc4>
   25a4c:	add	r6, r5, #1
   25a50:	cmp	r7, r6
   25a54:	beq	25aa0 <__flatcc_fb_parse@@Base+0x504>
   25a58:	ldrb	r3, [r5, #1]
   25a5c:	cmp	r3, #61	; 0x3d
   25a60:	bne	25aa0 <__flatcc_fb_parse@@Base+0x504>
   25a64:	add	r6, r5, #2
   25a68:	mov	r2, r5
   25a6c:	mov	r3, r6
   25a70:	orr	r1, r1, #15616	; 0x3d00
   25a74:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   25a78:	cmp	r1, #44	; 0x2c
   25a7c:	beq	25a9c <__flatcc_fb_parse@@Base+0x500>
   25a80:	add	r3, r5, #1
   25a84:	bhi	25aac <__flatcc_fb_parse@@Base+0x510>
   25a88:	cmp	r1, #42	; 0x2a
   25a8c:	beq	25fa8 <__flatcc_fb_parse@@Base+0xa0c>
   25a90:	bhi	261b4 <__flatcc_fb_parse@@Base+0xc18>
   25a94:	cmp	r1, #40	; 0x28
   25a98:	bcc	25660 <__flatcc_fb_parse@@Base+0xc4>
   25a9c:	add	r6, r5, #1
   25aa0:	mov	r3, r6
   25aa4:	mov	r2, r5
   25aa8:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   25aac:	cmp	r1, #46	; 0x2e
   25ab0:	beq	26208 <__flatcc_fb_parse@@Base+0xc6c>
   25ab4:	bcc	26144 <__flatcc_fb_parse@@Base+0xba8>
   25ab8:	cmp	r1, #47	; 0x2f
   25abc:	beq	25d0c <__flatcc_fb_parse@@Base+0x770>
   25ac0:	cmp	r1, #48	; 0x30
   25ac4:	bne	25660 <__flatcc_fb_parse@@Base+0xc4>
   25ac8:	cmp	r7, r3
   25acc:	beq	2627c <__flatcc_fb_parse@@Base+0xce0>
   25ad0:	ldrb	r3, [r5, #1]
   25ad4:	cmp	r3, #88	; 0x58
   25ad8:	beq	25ae4 <__flatcc_fb_parse@@Base+0x548>
   25adc:	cmp	r3, #120	; 0x78
   25ae0:	bne	2627c <__flatcc_fb_parse@@Base+0xce0>
   25ae4:	add	r2, r5, #2
   25ae8:	cmp	r2, r7
   25aec:	mov	r6, r2
   25af0:	beq	25b14 <__flatcc_fb_parse@@Base+0x578>
   25af4:	ldrb	r3, [r2], #1
   25af8:	sub	r1, r3, #48	; 0x30
   25afc:	cmp	r1, #9
   25b00:	bls	25ae8 <__flatcc_fb_parse@@Base+0x54c>
   25b04:	orr	r3, r3, #32
   25b08:	sub	r3, r3, #97	; 0x61
   25b0c:	cmp	r3, #5
   25b10:	bls	25ae8 <__flatcc_fb_parse@@Base+0x54c>
   25b14:	mov	r3, r6
   25b18:	mov	r2, r5
   25b1c:	mov	r1, #14
   25b20:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   25b24:	cmp	r1, #93	; 0x5d
   25b28:	add	r3, r5, #1
   25b2c:	bhi	25c74 <__flatcc_fb_parse@@Base+0x6d8>
   25b30:	cmp	r1, #91	; 0x5b
   25b34:	bcs	25a9c <__flatcc_fb_parse@@Base+0x500>
   25b38:	cmp	r1, #61	; 0x3d
   25b3c:	beq	25ea8 <__flatcc_fb_parse@@Base+0x90c>
   25b40:	bhi	25b8c <__flatcc_fb_parse@@Base+0x5f0>
   25b44:	cmp	r1, #59	; 0x3b
   25b48:	beq	25a9c <__flatcc_fb_parse@@Base+0x500>
   25b4c:	bls	25f2c <__flatcc_fb_parse@@Base+0x990>
   25b50:	cmp	r7, r3
   25b54:	mov	r6, r3
   25b58:	beq	26078 <__flatcc_fb_parse@@Base+0xadc>
   25b5c:	ldrb	r2, [r5, #1]
   25b60:	cmp	r2, #60	; 0x3c
   25b64:	beq	25ff8 <__flatcc_fb_parse@@Base+0xa5c>
   25b68:	cmp	r2, #61	; 0x3d
   25b6c:	beq	25fe4 <__flatcc_fb_parse@@Base+0xa48>
   25b70:	cmp	r2, #45	; 0x2d
   25b74:	bne	26078 <__flatcc_fb_parse@@Base+0xadc>
   25b78:	add	r6, r5, #2
   25b7c:	mov	r2, r5
   25b80:	mov	r3, r6
   25b84:	movw	r1, #11580	; 0x2d3c
   25b88:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   25b8c:	cmp	r1, #63	; 0x3f
   25b90:	beq	25a9c <__flatcc_fb_parse@@Base+0x500>
   25b94:	bcc	26084 <__flatcc_fb_parse@@Base+0xae8>
   25b98:	cmp	r1, #65	; 0x41
   25b9c:	bcc	25660 <__flatcc_fb_parse@@Base+0xc4>
   25ba0:	cmp	r7, r3
   25ba4:	lsl	r1, r1, #8
   25ba8:	mov	r6, r3
   25bac:	beq	25bf4 <__flatcc_fb_parse@@Base+0x658>
   25bb0:	ldrb	r2, [r5, #1]
   25bb4:	ldr	r3, [pc, #2516]	; 26590 <__flatcc_fb_parse@@Base+0xff4>
   25bb8:	add	r0, r3, r2
   25bbc:	ldrb	r0, [r0, #34]	; 0x22
   25bc0:	cmp	r0, #0
   25bc4:	beq	25bf4 <__flatcc_fb_parse@@Base+0x658>
   25bc8:	orr	r1, r1, r2, lsl #16
   25bcc:	add	r2, r5, #2
   25bd0:	cmp	r7, r2
   25bd4:	mov	r6, r2
   25bd8:	beq	25bf4 <__flatcc_fb_parse@@Base+0x658>
   25bdc:	ldrb	r0, [r6]
   25be0:	add	r2, r2, #1
   25be4:	add	r0, r3, r0
   25be8:	ldrb	r0, [r0, #34]	; 0x22
   25bec:	cmp	r0, #0
   25bf0:	bne	25bd0 <__flatcc_fb_parse@@Base+0x634>
   25bf4:	ldrb	r3, [r6, #-1]
   25bf8:	orr	r1, r1, r3, lsl #24
   25bfc:	sub	r3, r6, r5
   25c00:	uxtb	r3, r3
   25c04:	add	r3, r3, #48	; 0x30
   25c08:	orr	r1, r3, r1
   25c0c:	cmp	r1, r8
   25c10:	beq	26aa8 <__flatcc_fb_parse@@Base+0x150c>
   25c14:	bhi	2648c <__flatcc_fb_parse@@Base+0xef0>
   25c18:	ldr	r3, [pc, #2420]	; 26594 <__flatcc_fb_parse@@Base+0xff8>
   25c1c:	cmp	r1, r3
   25c20:	beq	26930 <__flatcc_fb_parse@@Base+0x1394>
   25c24:	bhi	263bc <__flatcc_fb_parse@@Base+0xe20>
   25c28:	add	r3, r3, #-67108863	; 0xfc000001
   25c2c:	cmp	r1, r3
   25c30:	beq	269fc <__flatcc_fb_parse@@Base+0x1460>
   25c34:	bhi	26340 <__flatcc_fb_parse@@Base+0xda4>
   25c38:	ldr	r3, [pc, #2392]	; 26598 <__flatcc_fb_parse@@Base+0xffc>
   25c3c:	cmp	r1, r3
   25c40:	beq	26a34 <__flatcc_fb_parse@@Base+0x1498>
   25c44:	add	r3, r3, #131072	; 0x20000
   25c48:	add	r3, r3, #764	; 0x2fc
   25c4c:	add	r3, r3, #2
   25c50:	cmp	r1, r3
   25c54:	beq	268dc <__flatcc_fb_parse@@Base+0x1340>
   25c58:	add	r3, r3, #-67108863	; 0xfc000001
   25c5c:	add	r3, r3, #66584576	; 0x3f80000
   25c60:	add	r3, r3, #199680	; 0x30c00
   25c64:	cmp	r1, r3
   25c68:	beq	269c4 <__flatcc_fb_parse@@Base+0x1428>
   25c6c:	mov	r1, #9
   25c70:	b	25aa0 <__flatcc_fb_parse@@Base+0x504>
   25c74:	cmp	r1, #122	; 0x7a
   25c78:	bhi	25c98 <__flatcc_fb_parse@@Base+0x6fc>
   25c7c:	cmp	r1, #97	; 0x61
   25c80:	bcs	25ba0 <__flatcc_fb_parse@@Base+0x604>
   25c84:	cmp	r1, #94	; 0x5e
   25c88:	beq	25a4c <__flatcc_fb_parse@@Base+0x4b0>
   25c8c:	cmp	r1, #95	; 0x5f
   25c90:	beq	25ba0 <__flatcc_fb_parse@@Base+0x604>
   25c94:	b	25660 <__flatcc_fb_parse@@Base+0xc4>
   25c98:	cmp	r1, #124	; 0x7c
   25c9c:	beq	25dec <__flatcc_fb_parse@@Base+0x850>
   25ca0:	bcc	25a9c <__flatcc_fb_parse@@Base+0x500>
   25ca4:	cmp	r1, #125	; 0x7d
   25ca8:	beq	25a9c <__flatcc_fb_parse@@Base+0x500>
   25cac:	cmp	r1, #126	; 0x7e
   25cb0:	b	25a48 <__flatcc_fb_parse@@Base+0x4ac>
   25cb4:	add	r6, r5, #1
   25cb8:	cmp	r7, r6
   25cbc:	beq	25ccc <__flatcc_fb_parse@@Base+0x730>
   25cc0:	ldrb	r3, [r5, #1]
   25cc4:	cmp	r3, #13
   25cc8:	addeq	r6, r5, #2
   25ccc:	ldr	r3, [r4, #64]	; 0x40
   25cd0:	str	r6, [r4, #60]	; 0x3c
   25cd4:	add	r3, r3, #1
   25cd8:	str	r3, [r4, #64]	; 0x40
   25cdc:	b	25a34 <__flatcc_fb_parse@@Base+0x498>
   25ce0:	add	r6, r5, #1
   25ce4:	cmp	r7, r6
   25ce8:	beq	25ccc <__flatcc_fb_parse@@Base+0x730>
   25cec:	ldrb	r3, [r5, #1]
   25cf0:	cmp	r3, #10
   25cf4:	b	25cc8 <__flatcc_fb_parse@@Base+0x72c>
   25cf8:	add	sl, r5, #1
   25cfc:	mov	r2, r5
   25d00:	mov	r3, sl
   25d04:	mov	r1, #19
   25d08:	b	257b0 <__flatcc_fb_parse@@Base+0x214>
   25d0c:	cmp	r7, r3
   25d10:	mov	r6, r3
   25d14:	beq	25de0 <__flatcc_fb_parse@@Base+0x844>
   25d18:	ldrb	r2, [r5, #1]
   25d1c:	cmp	r2, #47	; 0x2f
   25d20:	beq	25d7c <__flatcc_fb_parse@@Base+0x7e0>
   25d24:	cmp	r2, #61	; 0x3d
   25d28:	beq	25dc4 <__flatcc_fb_parse@@Base+0x828>
   25d2c:	cmp	r2, #42	; 0x2a
   25d30:	bne	25de0 <__flatcc_fb_parse@@Base+0x844>
   25d34:	add	sl, r5, #2
   25d38:	cmp	r7, sl
   25d3c:	moveq	r3, #0
   25d40:	beq	25d58 <__flatcc_fb_parse@@Base+0x7bc>
   25d44:	ldrb	r3, [r5, #2]
   25d48:	cmp	r3, #33	; 0x21
   25d4c:	cmpne	r3, #42	; 0x2a
   25d50:	moveq	r3, #1
   25d54:	movne	r3, #0
   25d58:	add	sl, sl, r3
   25d5c:	sub	r5, sl, r5
   25d60:	mov	r2, sl
   25d64:	sub	r5, r5, #3
   25d68:	mov	r1, sl
   25d6c:	clz	r5, r5
   25d70:	lsr	r5, r5, #5
   25d74:	str	r5, [r4, #32]
   25d78:	b	259d0 <__flatcc_fb_parse@@Base+0x434>
   25d7c:	add	r6, r5, #2
   25d80:	cmp	r7, r6
   25d84:	moveq	r3, #0
   25d88:	beq	25da0 <__flatcc_fb_parse@@Base+0x804>
   25d8c:	ldrb	r3, [r5, #2]
   25d90:	cmp	r3, #33	; 0x21
   25d94:	cmpne	r3, #47	; 0x2f
   25d98:	moveq	r3, #1
   25d9c:	movne	r3, #0
   25da0:	add	r6, r6, r3
   25da4:	sub	r5, r6, r5
   25da8:	mov	r2, r6
   25dac:	sub	r5, r5, #3
   25db0:	mov	r1, r6
   25db4:	clz	r5, r5
   25db8:	lsr	r5, r5, #5
   25dbc:	str	r5, [r4, #32]
   25dc0:	b	25848 <__flatcc_fb_parse@@Base+0x2ac>
   25dc4:	add	r6, r5, #2
   25dc8:	mov	r2, r5
   25dcc:	mov	r3, r6
   25dd0:	movw	r1, #15663	; 0x3d2f
   25dd4:	mov	r0, r4
   25dd8:	bl	24124 <__flatcc_fb_default_error_out@@Base+0x44>
   25ddc:	b	25a34 <__flatcc_fb_parse@@Base+0x498>
   25de0:	mov	r2, r5
   25de4:	mov	r1, #47	; 0x2f
   25de8:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   25dec:	cmp	r7, r3
   25df0:	mov	r6, r3
   25df4:	beq	25e0c <__flatcc_fb_parse@@Base+0x870>
   25df8:	ldrb	r3, [r5, #1]
   25dfc:	cmp	r3, #61	; 0x3d
   25e00:	beq	25e1c <__flatcc_fb_parse@@Base+0x880>
   25e04:	cmp	r3, #124	; 0x7c
   25e08:	beq	25e30 <__flatcc_fb_parse@@Base+0x894>
   25e0c:	mov	r3, r6
   25e10:	mov	r2, r5
   25e14:	mov	r1, #124	; 0x7c
   25e18:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   25e1c:	add	r6, r5, #2
   25e20:	mov	r2, r5
   25e24:	mov	r3, r6
   25e28:	movw	r1, #15740	; 0x3d7c
   25e2c:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   25e30:	add	r6, r5, #2
   25e34:	mov	r2, r5
   25e38:	mov	r3, r6
   25e3c:	movw	r1, #31868	; 0x7c7c
   25e40:	mov	r0, r4
   25e44:	bl	24124 <__flatcc_fb_default_error_out@@Base+0x44>
   25e48:	b	25e0c <__flatcc_fb_parse@@Base+0x870>
   25e4c:	add	r6, r5, #1
   25e50:	cmp	r7, r6
   25e54:	beq	25e98 <__flatcc_fb_parse@@Base+0x8fc>
   25e58:	ldrb	r3, [r5, #1]
   25e5c:	cmp	r3, #38	; 0x26
   25e60:	beq	25e80 <__flatcc_fb_parse@@Base+0x8e4>
   25e64:	cmp	r3, #61	; 0x3d
   25e68:	bne	25e98 <__flatcc_fb_parse@@Base+0x8fc>
   25e6c:	add	r6, r5, #2
   25e70:	mov	r2, r5
   25e74:	mov	r3, r6
   25e78:	movw	r1, #15654	; 0x3d26
   25e7c:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   25e80:	add	r6, r5, #2
   25e84:	mov	r2, r5
   25e88:	mov	r3, r6
   25e8c:	movw	r1, #9766	; 0x2626
   25e90:	mov	r0, r4
   25e94:	bl	24124 <__flatcc_fb_default_error_out@@Base+0x44>
   25e98:	mov	r3, r6
   25e9c:	mov	r2, r5
   25ea0:	mov	r1, #38	; 0x26
   25ea4:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   25ea8:	cmp	r7, r3
   25eac:	mov	r6, r3
   25eb0:	beq	25f1c <__flatcc_fb_parse@@Base+0x980>
   25eb4:	ldrb	r3, [r5, #1]
   25eb8:	cmp	r3, #61	; 0x3d
   25ebc:	beq	25edc <__flatcc_fb_parse@@Base+0x940>
   25ec0:	cmp	r3, #62	; 0x3e
   25ec4:	bne	25f1c <__flatcc_fb_parse@@Base+0x980>
   25ec8:	add	r6, r5, #2
   25ecc:	mov	r2, r5
   25ed0:	mov	r3, r6
   25ed4:	movw	r1, #15933	; 0x3e3d
   25ed8:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   25edc:	add	r6, r5, #2
   25ee0:	cmp	r7, r6
   25ee4:	beq	25f08 <__flatcc_fb_parse@@Base+0x96c>
   25ee8:	ldrb	r3, [r5, #2]
   25eec:	cmp	r3, #61	; 0x3d
   25ef0:	bne	25f08 <__flatcc_fb_parse@@Base+0x96c>
   25ef4:	add	r6, r5, #3
   25ef8:	mov	r2, r5
   25efc:	ldr	r1, [pc, #1688]	; 2659c <__flatcc_fb_parse@@Base+0x1000>
   25f00:	mov	r3, r6
   25f04:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   25f08:	mov	r3, r6
   25f0c:	mov	r2, r5
   25f10:	movw	r1, #15677	; 0x3d3d
   25f14:	mov	r0, r4
   25f18:	bl	24124 <__flatcc_fb_default_error_out@@Base+0x44>
   25f1c:	mov	r3, r6
   25f20:	mov	r2, r5
   25f24:	mov	r1, #61	; 0x3d
   25f28:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   25f2c:	cmp	r7, r3
   25f30:	mov	r6, r3
   25f34:	beq	25f9c <__flatcc_fb_parse@@Base+0xa00>
   25f38:	ldrb	r2, [r5, #1]
   25f3c:	cmp	r2, #58	; 0x3a
   25f40:	beq	25f60 <__flatcc_fb_parse@@Base+0x9c4>
   25f44:	cmp	r2, #61	; 0x3d
   25f48:	bne	25f9c <__flatcc_fb_parse@@Base+0xa00>
   25f4c:	add	r6, r5, #2
   25f50:	mov	r2, r5
   25f54:	mov	r3, r6
   25f58:	movw	r1, #15674	; 0x3d3a
   25f5c:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   25f60:	add	r6, r5, #2
   25f64:	cmp	r7, r6
   25f68:	beq	25f8c <__flatcc_fb_parse@@Base+0x9f0>
   25f6c:	ldrb	r3, [r5, #2]
   25f70:	cmp	r3, #61	; 0x3d
   25f74:	bne	25f8c <__flatcc_fb_parse@@Base+0x9f0>
   25f78:	add	r6, r5, #3
   25f7c:	mov	r2, r5
   25f80:	ldr	r1, [pc, #1560]	; 265a0 <__flatcc_fb_parse@@Base+0x1004>
   25f84:	mov	r3, r6
   25f88:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   25f8c:	mov	r3, r6
   25f90:	mov	r2, r5
   25f94:	movw	r1, #14906	; 0x3a3a
   25f98:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   25f9c:	mov	r2, r5
   25fa0:	mov	r1, #58	; 0x3a
   25fa4:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   25fa8:	cmp	r7, r3
   25fac:	mov	r6, r3
   25fb0:	beq	25fd8 <__flatcc_fb_parse@@Base+0xa3c>
   25fb4:	ldrb	r2, [r5, #1]
   25fb8:	cmp	r2, #42	; 0x2a
   25fbc:	moveq	r2, r5
   25fc0:	movweq	r1, #10794	; 0x2a2a
   25fc4:	beq	25dd4 <__flatcc_fb_parse@@Base+0x838>
   25fc8:	cmp	r2, #61	; 0x3d
   25fcc:	moveq	r2, r5
   25fd0:	movweq	r1, #15658	; 0x3d2a
   25fd4:	beq	25dd4 <__flatcc_fb_parse@@Base+0x838>
   25fd8:	mov	r2, r5
   25fdc:	mov	r1, #42	; 0x2a
   25fe0:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   25fe4:	add	r6, r5, #2
   25fe8:	mov	r2, r5
   25fec:	mov	r3, r6
   25ff0:	movw	r1, #15676	; 0x3d3c
   25ff4:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   25ff8:	add	r6, r5, #2
   25ffc:	cmp	r7, r6
   26000:	beq	26068 <__flatcc_fb_parse@@Base+0xacc>
   26004:	ldrb	r3, [r5, #2]
   26008:	cmp	r3, #60	; 0x3c
   2600c:	beq	2602c <__flatcc_fb_parse@@Base+0xa90>
   26010:	cmp	r3, #61	; 0x3d
   26014:	bne	26068 <__flatcc_fb_parse@@Base+0xacc>
   26018:	add	r6, r5, #3
   2601c:	mov	r2, r5
   26020:	ldr	r1, [pc, #1404]	; 265a4 <__flatcc_fb_parse@@Base+0x1008>
   26024:	mov	r3, r6
   26028:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   2602c:	add	r6, r5, #3
   26030:	cmp	r7, r6
   26034:	beq	26058 <__flatcc_fb_parse@@Base+0xabc>
   26038:	ldrb	r3, [r5, #3]
   2603c:	cmp	r3, #61	; 0x3d
   26040:	bne	26058 <__flatcc_fb_parse@@Base+0xabc>
   26044:	add	r6, r5, #4
   26048:	mov	r2, r5
   2604c:	ldr	r1, [pc, #1364]	; 265a8 <__flatcc_fb_parse@@Base+0x100c>
   26050:	mov	r3, r6
   26054:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   26058:	mov	r3, r6
   2605c:	mov	r2, r5
   26060:	ldr	r1, [pc, #1348]	; 265ac <__flatcc_fb_parse@@Base+0x1010>
   26064:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   26068:	mov	r3, r6
   2606c:	mov	r2, r5
   26070:	movw	r1, #15420	; 0x3c3c
   26074:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   26078:	mov	r2, r5
   2607c:	mov	r1, #60	; 0x3c
   26080:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   26084:	cmp	r7, r3
   26088:	mov	r6, r3
   2608c:	beq	260a4 <__flatcc_fb_parse@@Base+0xb08>
   26090:	ldrb	r2, [r5, #1]
   26094:	cmp	r2, #61	; 0x3d
   26098:	beq	260b0 <__flatcc_fb_parse@@Base+0xb14>
   2609c:	cmp	r2, #62	; 0x3e
   260a0:	beq	260c4 <__flatcc_fb_parse@@Base+0xb28>
   260a4:	mov	r2, r5
   260a8:	mov	r1, #62	; 0x3e
   260ac:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   260b0:	add	r6, r5, #2
   260b4:	mov	r2, r5
   260b8:	mov	r3, r6
   260bc:	movw	r1, #15678	; 0x3d3e
   260c0:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   260c4:	add	r6, r5, #2
   260c8:	cmp	r7, r6
   260cc:	beq	260e4 <__flatcc_fb_parse@@Base+0xb48>
   260d0:	ldrb	r3, [r5, #2]
   260d4:	cmp	r3, #61	; 0x3d
   260d8:	beq	260f4 <__flatcc_fb_parse@@Base+0xb58>
   260dc:	cmp	r3, #62	; 0x3e
   260e0:	beq	26108 <__flatcc_fb_parse@@Base+0xb6c>
   260e4:	mov	r3, r6
   260e8:	mov	r2, r5
   260ec:	movw	r1, #15934	; 0x3e3e
   260f0:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   260f4:	add	r6, r5, #3
   260f8:	mov	r2, r5
   260fc:	ldr	r1, [pc, #1196]	; 265b0 <__flatcc_fb_parse@@Base+0x1014>
   26100:	mov	r3, r6
   26104:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   26108:	add	r6, r5, #3
   2610c:	cmp	r7, r6
   26110:	beq	26134 <__flatcc_fb_parse@@Base+0xb98>
   26114:	ldrb	r3, [r5, #3]
   26118:	cmp	r3, #61	; 0x3d
   2611c:	bne	26134 <__flatcc_fb_parse@@Base+0xb98>
   26120:	add	r6, r5, #4
   26124:	mov	r2, r5
   26128:	ldr	r1, [pc, #1156]	; 265b4 <__flatcc_fb_parse@@Base+0x1018>
   2612c:	mov	r3, r6
   26130:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   26134:	mov	r3, r6
   26138:	mov	r2, r5
   2613c:	ldr	r1, [pc, #1140]	; 265b8 <__flatcc_fb_parse@@Base+0x101c>
   26140:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   26144:	cmp	r7, r3
   26148:	mov	r6, r3
   2614c:	beq	261a8 <__flatcc_fb_parse@@Base+0xc0c>
   26150:	ldrb	r2, [r5, #1]
   26154:	cmp	r2, #61	; 0x3d
   26158:	beq	26180 <__flatcc_fb_parse@@Base+0xbe4>
   2615c:	cmp	r2, #62	; 0x3e
   26160:	beq	26194 <__flatcc_fb_parse@@Base+0xbf8>
   26164:	cmp	r2, #45	; 0x2d
   26168:	bne	261a8 <__flatcc_fb_parse@@Base+0xc0c>
   2616c:	add	r6, r5, #2
   26170:	mov	r2, r5
   26174:	mov	r3, r6
   26178:	movw	r1, #11565	; 0x2d2d
   2617c:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   26180:	add	r6, r5, #2
   26184:	mov	r2, r5
   26188:	mov	r3, r6
   2618c:	movw	r1, #15661	; 0x3d2d
   26190:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   26194:	add	r6, r5, #2
   26198:	mov	r2, r5
   2619c:	mov	r3, r6
   261a0:	movw	r1, #15917	; 0x3e2d
   261a4:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   261a8:	mov	r2, r5
   261ac:	mov	r1, #45	; 0x2d
   261b0:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   261b4:	cmp	r7, r3
   261b8:	mov	r6, r3
   261bc:	beq	261fc <__flatcc_fb_parse@@Base+0xc60>
   261c0:	ldrb	r2, [r5, #1]
   261c4:	cmp	r2, #43	; 0x2b
   261c8:	beq	261e8 <__flatcc_fb_parse@@Base+0xc4c>
   261cc:	cmp	r2, #61	; 0x3d
   261d0:	bne	261fc <__flatcc_fb_parse@@Base+0xc60>
   261d4:	add	r6, r5, #2
   261d8:	mov	r2, r5
   261dc:	mov	r3, r6
   261e0:	movw	r1, #15659	; 0x3d2b
   261e4:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   261e8:	add	r6, r5, #2
   261ec:	mov	r2, r5
   261f0:	mov	r3, r6
   261f4:	movw	r1, #11051	; 0x2b2b
   261f8:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   261fc:	mov	r2, r5
   26200:	mov	r1, #43	; 0x2b
   26204:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   26208:	cmp	r7, r3
   2620c:	mov	r6, r3
   26210:	beq	26234 <__flatcc_fb_parse@@Base+0xc98>
   26214:	ldrb	r2, [r5, #1]
   26218:	cmp	r2, #46	; 0x2e
   2621c:	beq	26240 <__flatcc_fb_parse@@Base+0xca4>
   26220:	bcc	26234 <__flatcc_fb_parse@@Base+0xc98>
   26224:	sub	r2, r2, #48	; 0x30
   26228:	cmp	r2, #9
   2622c:	movls	r2, r5
   26230:	bls	262a8 <__flatcc_fb_parse@@Base+0xd0c>
   26234:	mov	r2, r5
   26238:	mov	r1, #46	; 0x2e
   2623c:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   26240:	add	r6, r5, #2
   26244:	cmp	r7, r6
   26248:	beq	2626c <__flatcc_fb_parse@@Base+0xcd0>
   2624c:	ldrb	r3, [r5, #2]
   26250:	cmp	r3, #46	; 0x2e
   26254:	bne	2626c <__flatcc_fb_parse@@Base+0xcd0>
   26258:	add	r6, r5, #3
   2625c:	mov	r2, r5
   26260:	ldr	r1, [pc, #852]	; 265bc <__flatcc_fb_parse@@Base+0x1020>
   26264:	mov	r3, r6
   26268:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   2626c:	mov	r3, r6
   26270:	mov	r2, r5
   26274:	movw	r1, #11822	; 0x2e2e
   26278:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   2627c:	add	r3, r5, #1
   26280:	subs	r6, r3, #0
   26284:	beq	274ec <__flatcc_fb_parse@@Base+0x1f50>
   26288:	ldrb	r2, [r3]
   2628c:	add	r3, r6, #1
   26290:	sub	r1, r2, #48	; 0x30
   26294:	cmp	r1, #9
   26298:	bls	26280 <__flatcc_fb_parse@@Base+0xce4>
   2629c:	cmp	r2, #46	; 0x2e
   262a0:	bne	274c0 <__flatcc_fb_parse@@Base+0x1f24>
   262a4:	mov	r2, r6
   262a8:	add	r3, r6, #1
   262ac:	cmp	r7, r3
   262b0:	mov	r6, r3
   262b4:	beq	2631c <__flatcc_fb_parse@@Base+0xd80>
   262b8:	ldrb	r1, [r6]
   262bc:	add	r3, r3, #1
   262c0:	sub	r1, r1, #48	; 0x30
   262c4:	cmp	r1, #9
   262c8:	bls	262ac <__flatcc_fb_parse@@Base+0xd10>
   262cc:	ldrb	r3, [r6]
   262d0:	and	r3, r3, #223	; 0xdf
   262d4:	cmp	r3, #69	; 0x45
   262d8:	bne	2631c <__flatcc_fb_parse@@Base+0xd80>
   262dc:	add	r3, r6, #1
   262e0:	cmp	r7, r3
   262e4:	beq	262f8 <__flatcc_fb_parse@@Base+0xd5c>
   262e8:	ldrb	r1, [r6, #1]
   262ec:	sub	r1, r1, #43	; 0x2b
   262f0:	tst	r1, #253	; 0xfd
   262f4:	movne	r3, r6
   262f8:	add	r3, r3, #1
   262fc:	cmp	r7, r3
   26300:	mov	r6, r3
   26304:	beq	2631c <__flatcc_fb_parse@@Base+0xd80>
   26308:	ldrb	r1, [r6]
   2630c:	add	r3, r3, #1
   26310:	sub	r1, r1, #48	; 0x30
   26314:	cmp	r1, #9
   26318:	bls	262fc <__flatcc_fb_parse@@Base+0xd60>
   2631c:	cmp	r6, r2
   26320:	movne	r3, r6
   26324:	movne	r2, r5
   26328:	movne	r1, #11
   2632c:	bne	25dd4 <__flatcc_fb_parse@@Base+0x838>
   26330:	mov	r3, r6
   26334:	mov	r2, r5
   26338:	mov	r1, #10
   2633c:	b	25dd4 <__flatcc_fb_parse@@Base+0x838>
   26340:	ldr	r3, [pc, #632]	; 265c0 <__flatcc_fb_parse@@Base+0x1024>
   26344:	cmp	r1, r3
   26348:	beq	268f8 <__flatcc_fb_parse@@Base+0x135c>
   2634c:	bhi	26380 <__flatcc_fb_parse@@Base+0xde4>
   26350:	sub	r3, r3, #131072	; 0x20000
   26354:	sub	r3, r3, #764	; 0x2fc
   26358:	sub	r3, r3, #2
   2635c:	cmp	r1, r3
   26360:	bne	25c6c <__flatcc_fb_parse@@Base+0x6d0>
   26364:	mov	r1, r5
   26368:	mov	r2, #7
   2636c:	ldr	r0, [pc, #592]	; 265c4 <__flatcc_fb_parse@@Base+0x1028>
   26370:	bl	14014 <memcmp@plt>
   26374:	cmp	r0, #0
   26378:	ldr	r1, [pc, #584]	; 265c8 <__flatcc_fb_parse@@Base+0x102c>
   2637c:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   26380:	ldr	r3, [pc, #580]	; 265cc <__flatcc_fb_parse@@Base+0x1030>
   26384:	cmp	r1, r3
   26388:	beq	269e0 <__flatcc_fb_parse@@Base+0x1444>
   2638c:	add	r3, r3, #323584	; 0x4f000
   26390:	add	r3, r3, #1020	; 0x3fc
   26394:	add	r3, r3, #3
   26398:	cmp	r1, r3
   2639c:	bne	25c6c <__flatcc_fb_parse@@Base+0x6d0>
   263a0:	mov	r1, r5
   263a4:	mov	r2, #5
   263a8:	ldr	r0, [pc, #544]	; 265d0 <__flatcc_fb_parse@@Base+0x1034>
   263ac:	bl	14014 <memcmp@plt>
   263b0:	cmp	r0, #0
   263b4:	ldr	r1, [pc, #536]	; 265d4 <__flatcc_fb_parse@@Base+0x1038>
   263b8:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   263bc:	ldr	r3, [pc, #532]	; 265d8 <__flatcc_fb_parse@@Base+0x103c>
   263c0:	cmp	r1, r3
   263c4:	beq	26914 <__flatcc_fb_parse@@Base+0x1378>
   263c8:	bhi	26414 <__flatcc_fb_parse@@Base+0xe78>
   263cc:	sub	r3, r3, #3584	; 0xe00
   263d0:	cmp	r1, r3
   263d4:	beq	268c0 <__flatcc_fb_parse@@Base+0x1324>
   263d8:	add	r3, r3, #2048	; 0x800
   263dc:	add	r3, r3, #4
   263e0:	cmp	r1, r3
   263e4:	beq	26a88 <__flatcc_fb_parse@@Base+0x14ec>
   263e8:	ldr	r3, [pc, #492]	; 265dc <__flatcc_fb_parse@@Base+0x1040>
   263ec:	cmp	r1, r3
   263f0:	bne	25c6c <__flatcc_fb_parse@@Base+0x6d0>
   263f4:	mov	r1, r5
   263f8:	mov	r2, #4
   263fc:	ldr	r0, [pc, #476]	; 265e0 <__flatcc_fb_parse@@Base+0x1044>
   26400:	bl	14014 <memcmp@plt>
   26404:	cmp	r0, #0
   26408:	movne	r1, #9
   2640c:	mvneq	r1, #992	; 0x3e0
   26410:	b	25aa0 <__flatcc_fb_parse@@Base+0x504>
   26414:	ldr	r3, [pc, #456]	; 265e4 <__flatcc_fb_parse@@Base+0x1048>
   26418:	cmp	r1, r3
   2641c:	beq	26a50 <__flatcc_fb_parse@@Base+0x14b4>
   26420:	bhi	26454 <__flatcc_fb_parse@@Base+0xeb8>
   26424:	sub	r3, r3, #782336	; 0xbf000
   26428:	sub	r3, r3, #1024	; 0x400
   2642c:	sub	r3, r3, #2
   26430:	cmp	r1, r3
   26434:	bne	25c6c <__flatcc_fb_parse@@Base+0x6d0>
   26438:	mov	r1, r5
   2643c:	mov	r2, #5
   26440:	ldr	r0, [pc, #320]	; 26588 <__flatcc_fb_parse@@Base+0xfec>
   26444:	bl	14014 <memcmp@plt>
   26448:	cmp	r0, #0
   2644c:	ldr	r1, [pc, #304]	; 26584 <__flatcc_fb_parse@@Base+0xfe8>
   26450:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   26454:	ldr	r3, [pc, #396]	; 265e8 <__flatcc_fb_parse@@Base+0x104c>
   26458:	cmp	r1, r3
   2645c:	beq	2698c <__flatcc_fb_parse@@Base+0x13f0>
   26460:	add	r3, r3, #3584	; 0xe00
   26464:	add	r3, r3, #3
   26468:	cmp	r1, r3
   2646c:	bne	25c6c <__flatcc_fb_parse@@Base+0x6d0>
   26470:	mov	r1, r5
   26474:	mov	r2, #9
   26478:	ldr	r0, [pc, #364]	; 265ec <__flatcc_fb_parse@@Base+0x1050>
   2647c:	bl	14014 <memcmp@plt>
   26480:	cmp	r0, #0
   26484:	ldr	r1, [pc, #356]	; 265f0 <__flatcc_fb_parse@@Base+0x1054>
   26488:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   2648c:	cmp	r1, r9
   26490:	beq	26ac4 <__flatcc_fb_parse@@Base+0x1528>
   26494:	bhi	26774 <__flatcc_fb_parse@@Base+0x11d8>
   26498:	ldr	r3, [pc, #340]	; 265f4 <__flatcc_fb_parse@@Base+0x1058>
   2649c:	cmp	r1, r3
   264a0:	beq	26950 <__flatcc_fb_parse@@Base+0x13b4>
   264a4:	bhi	264f8 <__flatcc_fb_parse@@Base+0xf5c>
   264a8:	sub	r3, r3, #33030144	; 0x1f80000
   264ac:	sub	r3, r3, #5056	; 0x13c0
   264b0:	sub	r3, r3, #60	; 0x3c
   264b4:	cmp	r1, r3
   264b8:	beq	26a6c <__flatcc_fb_parse@@Base+0x14d0>
   264bc:	add	r3, r3, #327680	; 0x50000
   264c0:	add	r3, r3, #251	; 0xfb
   264c4:	cmp	r1, r3
   264c8:	beq	26888 <__flatcc_fb_parse@@Base+0x12ec>
   264cc:	sub	r3, r3, #450560	; 0x6e000
   264d0:	sub	r3, r3, #3584	; 0xe00
   264d4:	cmp	r1, r3
   264d8:	bne	25c6c <__flatcc_fb_parse@@Base+0x6d0>
   264dc:	mov	r1, r5
   264e0:	mov	r2, #4
   264e4:	ldr	r0, [pc, #268]	; 265f8 <__flatcc_fb_parse@@Base+0x105c>
   264e8:	bl	14014 <memcmp@plt>
   264ec:	cmp	r0, #0
   264f0:	ldr	r1, [pc, #260]	; 265fc <__flatcc_fb_parse@@Base+0x1060>
   264f4:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   264f8:	ldr	r3, [pc, #256]	; 26600 <__flatcc_fb_parse@@Base+0x1064>
   264fc:	cmp	r1, r3
   26500:	beq	269a8 <__flatcc_fb_parse@@Base+0x140c>
   26504:	bhi	2653c <__flatcc_fb_parse@@Base+0xfa0>
   26508:	sub	r3, r3, #327680	; 0x50000
   2650c:	sub	r3, r3, #1792	; 0x700
   26510:	sub	r3, r3, #2
   26514:	cmp	r1, r3
   26518:	bne	25c6c <__flatcc_fb_parse@@Base+0x6d0>
   2651c:	mov	r1, r5
   26520:	mov	r2, #4
   26524:	ldr	r0, [pc, #216]	; 26604 <__flatcc_fb_parse@@Base+0x1068>
   26528:	bl	14014 <memcmp@plt>
   2652c:	cmp	r0, #0
   26530:	movne	r1, #9
   26534:	mvneq	r1, #988	; 0x3dc
   26538:	b	25aa0 <__flatcc_fb_parse@@Base+0x504>
   2653c:	ldr	r3, [pc, #196]	; 26608 <__flatcc_fb_parse@@Base+0x106c>
   26540:	cmp	r1, r3
   26544:	beq	2686c <__flatcc_fb_parse@@Base+0x12d0>
   26548:	add	r3, r3, #16711680	; 0xff0000
   2654c:	add	r3, r3, #768	; 0x300
   26550:	cmp	r1, r3
   26554:	bne	25c6c <__flatcc_fb_parse@@Base+0x6d0>
   26558:	mov	r1, r5
   2655c:	mov	r2, #4
   26560:	ldr	r0, [pc, #164]	; 2660c <__flatcc_fb_parse@@Base+0x1070>
   26564:	bl	14014 <memcmp@plt>
   26568:	cmp	r0, #0
   2656c:	movne	r1, #9
   26570:	mvneq	r1, #996	; 0x3e4
   26574:	b	25aa0 <__flatcc_fb_parse@@Base+0x504>
   26578:	ldrbvs	r7, [r0, #-571]!	; 0xfffffdc5
   2657c:	mcrvs	6, 3, r6, cr9, cr14, {1}
   26580:	andeq	r7, r4, r7, lsl #25
   26584:			; <UNDEFINED> instruction: 0xfffffc2a
   26588:	andeq	r9, r4, r2, asr #1
   2658c:	strbtvc	r7, [r9], #-1332	; 0xfffffacc
   26590:	andeq	r7, r4, fp, asr #10
   26594:	stmdacc	r9!, {r0, r2, r4, r5, r8, sl, ip, sp, lr}^
   26598:	rsbcc	r6, ip, #57671680	; 0x3700000
   2659c:	eorseq	r3, sp, sp, lsr sp
   265a0:	eorseq	r3, sp, sl, lsr sl
   265a4:	eorseq	r3, sp, ip, lsr ip
   265a8:	ldccc	12, cr3, [ip, #-240]!	; 0xffffff10
   265ac:	eorseq	r3, ip, ip, lsr ip
   265b0:	eorseq	r3, sp, lr, lsr lr
   265b4:	ldccc	14, cr3, [lr, #-248]!	; 0xffffff08
   265b8:	eorseq	r3, lr, lr, lsr lr
   265bc:	eoreq	r2, lr, lr, lsr #28
   265c0:	strbtcc	r6, [lr], #-2357	; 0xfffff6cb
   265c4:	andeq	r7, r4, ip, lsr #25
   265c8:			; <UNDEFINED> instruction: 0xfffffc1d
   265cc:			; <UNDEFINED> instruction: 0x36697536
   265d0:	andeq	r8, r3, r8, lsl #9
   265d4:			; <UNDEFINED> instruction: 0xfffffc20
   265d8:	strbvs	r7, [r1, #-1077]!	; 0xfffffbcb
   265dc:	stmdacc	lr!, {r2, r4, r5, r8, fp, sp, lr}^
   265e0:	andeq	r8, r3, pc, lsl #9
   265e4:	strbvs	r6, [lr, #-2359]!	; 0xfffff6c9
   265e8:	strbvs	r6, [pc, #-1078]!	; 261ba <__flatcc_fb_parse@@Base+0xc1e>
   265ec:	andeq	r7, r4, r6, asr #25
   265f0:			; <UNDEFINED> instruction: 0xfffffc38
   265f4:			; <UNDEFINED> instruction: 0x676c7535
   265f8:	andeq	r8, r4, r0, asr r7
   265fc:			; <UNDEFINED> instruction: 0xfffffc24
   26600:			; <UNDEFINED> instruction: 0x67747336
   26604:	muleq	r4, r8, ip
   26608:	sfmvs	f6, 2, [pc], #-208	; 26540 <__flatcc_fb_parse@@Base+0xfa4>
   2660c:	strdeq	r8, [r4], -r5
   26610:	rsbvc	r6, r9, #66060288	; 0x3f00000
   26614:	andeq	r0, r3, r1, lsl #31
   26618:			; <UNDEFINED> instruction: 0xfffffc30
   2661c:	strbtvc	r6, [lr], #-2355	; 0xfffff6cd
   26620:	muleq	r3, fp, r4
   26624:	ldrbtvc	r7, [r3], #-1334	; 0xfffffaca
   26628:	andeq	r8, r4, r5, ror r6
   2662c:	muleq	r4, ip, r4
   26630:			; <UNDEFINED> instruction: 0xfffffc1e
   26634:	andeq	r8, r4, ip, lsr r5
   26638:			; <UNDEFINED> instruction: 0xfffffc19
   2663c:	andeq	r9, r4, r3, asr #1
   26640:			; <UNDEFINED> instruction: 0xfffffc1a
   26644:	andeq	r7, r4, ip, lsl #25
   26648:			; <UNDEFINED> instruction: 0xfffffc25
   2664c:	muleq	r4, r1, ip
   26650:			; <UNDEFINED> instruction: 0xfffffc26
   26654:	andeq	r8, r3, r1, lsl #9
   26658:			; <UNDEFINED> instruction: 0xfffffc21
   2665c:	andeq	r8, r3, sl, ror r4
   26660:			; <UNDEFINED> instruction: 0xfffffc22
   26664:	andeq	r9, r4, r2, ror #15
   26668:			; <UNDEFINED> instruction: 0xfffffc29
   2666c:	andeq	r8, r3, lr, lsl #9
   26670:	muleq	r4, r7, ip
   26674:	muleq	r4, lr, ip
   26678:			; <UNDEFINED> instruction: 0xfffffc28
   2667c:	muleq	r3, r4, r4
   26680:			; <UNDEFINED> instruction: 0xfffffc31
   26684:	ldrdeq	r8, [r4], -sl
   26688:			; <UNDEFINED> instruction: 0xfffffc32
   2668c:	andeq	r8, r3, r0, lsl #9
   26690:			; <UNDEFINED> instruction: 0xfffffc2d
   26694:	andeq	r8, r3, r7, lsl #9
   26698:			; <UNDEFINED> instruction: 0xfffffc2c
   2669c:	andeq	r8, r3, r9, ror r4
   266a0:			; <UNDEFINED> instruction: 0xfffffc2e
   266a4:	muleq	r4, sp, ip
   266a8:			; <UNDEFINED> instruction: 0xfffffc34
   266ac:	andeq	r7, r4, r4, lsr #25
   266b0:			; <UNDEFINED> instruction: 0xfffffc1c
   266b4:			; <UNDEFINED> instruction: 0x00047cb4
   266b8:			; <UNDEFINED> instruction: 0x00047cbc
   266bc:	andeq	r0, r3, r0, lsr r5
   266c0:	ldrdeq	r7, [r4], -r0
   266c4:	ldrdeq	r7, [r4], -ip
   266c8:	andeq	r7, r4, fp, ror #25
   266cc:			; <UNDEFINED> instruction: 0xfffffc35
   266d0:	strdeq	r7, [r4], -fp
   266d4:	andeq	r7, r4, r3, lsr sp
   266d8:	andeq	r7, r4, ip, lsr pc
   266dc:	eoreq	r0, r0, r3, lsl #16
   266e0:	andeq	r7, r4, r1, ror #30
   266e4:	andeq	r7, r4, r8, ror pc
   266e8:	muleq	r4, r6, pc	; <UNPREDICTABLE>
   266ec:	andeq	r7, r4, r1, ror #26
   266f0:			; <UNDEFINED> instruction: 0xfffffc36
   266f4:	andeq	r8, r4, fp, lsr #1
   266f8:			; <UNDEFINED> instruction: 0x000481b8
   266fc:			; <UNDEFINED> instruction: 0xfffffc3a
   26700:	andeq	r7, r4, r3, lsr #28
   26704:	andeq	r7, r4, pc, lsr lr
   26708:	andeq	r7, r4, r7, ror #28
   2670c:	andeq	r7, r4, ip, lsl #29
   26710:	andeq	r8, r4, r5, ror r1
   26714:	andeq	r7, r4, r0, lsl #27
   26718:	andeq	r7, r4, r0, lsr #27
   2671c:	ldrdeq	r8, [r4], -lr
   26720:	andeq	r7, r4, r5, asr #27
   26724:	andeq	r7, r4, r0, ror #27
   26728:	andeq	r7, r4, r7, lsl #28
   2672c:	andeq	r7, r4, r9, lsr #29
   26730:			; <UNDEFINED> instruction: 0x00047ebf
   26734:	andeq	r7, r4, r4, ror #29
   26738:	andeq	r7, r4, r6, lsl #30
   2673c:	andeq	r7, r4, r5, lsr #30
   26740:			; <UNDEFINED> instruction: 0xfffffc39
   26744:	andeq	r7, r4, ip, asr #31
   26748:	andeq	r7, r4, lr, ror #31
   2674c:	andeq	r8, r4, r4, lsl r0
   26750:	andeq	r8, r4, pc, asr #32
   26754:	andeq	r8, r4, r3, lsr r0
   26758:			; <UNDEFINED> instruction: 0x00047fb1
   2675c:	andeq	r8, r4, r8, lsl #1
   26760:	andeq	r8, r4, r1, ror #1
   26764:	andeq	r8, r4, r3, asr #2
   26768:			; <UNDEFINED> instruction: 0x000477be
   2676c:	muleq	r4, sp, r1
   26770:			; <UNDEFINED> instruction: 0x000481b2
   26774:	cmp	r1, sl
   26778:	beq	268a4 <__flatcc_fb_parse@@Base+0x1308>
   2677c:	bhi	267d0 <__flatcc_fb_parse@@Base+0x1234>
   26780:	ldr	r3, [pc, #-376]	; 26610 <__flatcc_fb_parse@@Base+0x1074>
   26784:	cmp	r1, r3
   26788:	beq	26ae0 <__flatcc_fb_parse@@Base+0x1544>
   2678c:	add	r3, r3, #33292288	; 0x1fc0000
   26790:	add	r3, r3, #199680	; 0x30c00
   26794:	add	r3, r3, #246	; 0xf6
   26798:	cmp	r1, r3
   2679c:	beq	26970 <__flatcc_fb_parse@@Base+0x13d4>
   267a0:	add	r3, r3, #-100663296	; 0xfa000000
   267a4:	add	r3, r3, #393216	; 0x60000
   267a8:	add	r3, r3, #512	; 0x200
   267ac:	cmp	r1, r3
   267b0:	bne	25c6c <__flatcc_fb_parse@@Base+0x6d0>
   267b4:	mov	r1, r5
   267b8:	mov	r2, #5
   267bc:	ldr	r0, [pc, #-432]	; 26614 <__flatcc_fb_parse@@Base+0x1078>
   267c0:	bl	14014 <memcmp@plt>
   267c4:	cmp	r0, #0
   267c8:	ldr	r1, [pc, #-440]	; 26618 <__flatcc_fb_parse@@Base+0x107c>
   267cc:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   267d0:	ldr	r3, [pc, #-444]	; 2661c <__flatcc_fb_parse@@Base+0x1080>
   267d4:	cmp	r1, r3
   267d8:	beq	2684c <__flatcc_fb_parse@@Base+0x12b0>
   267dc:	bhi	26814 <__flatcc_fb_parse@@Base+0x1278>
   267e0:	sub	r3, r3, #131072	; 0x20000
   267e4:	sub	r3, r3, #764	; 0x2fc
   267e8:	sub	r3, r3, #2
   267ec:	cmp	r1, r3
   267f0:	bne	25c6c <__flatcc_fb_parse@@Base+0x6d0>
   267f4:	mov	r1, r5
   267f8:	mov	r2, #5
   267fc:	ldr	r0, [pc, #-484]	; 26620 <__flatcc_fb_parse@@Base+0x1084>
   26800:	bl	14014 <memcmp@plt>
   26804:	cmp	r0, #0
   26808:	movne	r1, #9
   2680c:	mvneq	r1, #984	; 0x3d8
   26810:	b	25aa0 <__flatcc_fb_parse@@Base+0x504>
   26814:	ldr	r3, [pc, #-504]	; 26624 <__flatcc_fb_parse@@Base+0x1088>
   26818:	cmp	r1, r3
   2681c:	beq	26a18 <__flatcc_fb_parse@@Base+0x147c>
   26820:	add	r3, r3, #65024	; 0xfe00
   26824:	cmp	r1, r3
   26828:	bne	25c6c <__flatcc_fb_parse@@Base+0x6d0>
   2682c:	mov	r1, r5
   26830:	mov	r2, #6
   26834:	ldr	r0, [pc, #-532]	; 26628 <__flatcc_fb_parse@@Base+0x108c>
   26838:	bl	14014 <memcmp@plt>
   2683c:	cmp	r0, #0
   26840:	movne	r1, #9
   26844:	mvneq	r1, #972	; 0x3cc
   26848:	b	25aa0 <__flatcc_fb_parse@@Base+0x504>
   2684c:	mov	r1, r5
   26850:	mov	r2, #3
   26854:	ldr	r0, [pc, #-560]	; 2662c <__flatcc_fb_parse@@Base+0x1090>
   26858:	bl	14014 <memcmp@plt>
   2685c:	ldr	r1, [pc, #-564]	; 26630 <__flatcc_fb_parse@@Base+0x1094>
   26860:	cmp	r0, #0
   26864:	movne	r1, #9
   26868:	b	25aa0 <__flatcc_fb_parse@@Base+0x504>
   2686c:	mov	r1, r5
   26870:	mov	r2, #4
   26874:	ldr	r0, [pc, #-584]	; 26634 <__flatcc_fb_parse@@Base+0x1098>
   26878:	bl	14014 <memcmp@plt>
   2687c:	cmp	r0, #0
   26880:	ldr	r1, [pc, #-592]	; 26638 <__flatcc_fb_parse@@Base+0x109c>
   26884:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   26888:	mov	r1, r5
   2688c:	mov	r2, #4
   26890:	ldr	r0, [pc, #-604]	; 2663c <__flatcc_fb_parse@@Base+0x10a0>
   26894:	bl	14014 <memcmp@plt>
   26898:	cmp	r0, #0
   2689c:	ldr	r1, [pc, #-612]	; 26640 <__flatcc_fb_parse@@Base+0x10a4>
   268a0:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   268a4:	mov	r1, r5
   268a8:	mov	r2, #4
   268ac:	ldr	r0, [pc, #-624]	; 26644 <__flatcc_fb_parse@@Base+0x10a8>
   268b0:	bl	14014 <memcmp@plt>
   268b4:	cmp	r0, #0
   268b8:	ldr	r1, [pc, #-632]	; 26648 <__flatcc_fb_parse@@Base+0x10ac>
   268bc:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   268c0:	mov	r1, r5
   268c4:	mov	r2, #5
   268c8:	ldr	r0, [pc, #-644]	; 2664c <__flatcc_fb_parse@@Base+0x10b0>
   268cc:	bl	14014 <memcmp@plt>
   268d0:	cmp	r0, #0
   268d4:	ldr	r1, [pc, #-652]	; 26650 <__flatcc_fb_parse@@Base+0x10b4>
   268d8:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   268dc:	mov	r1, r5
   268e0:	mov	r2, #5
   268e4:	ldr	r0, [pc, #-664]	; 26654 <__flatcc_fb_parse@@Base+0x10b8>
   268e8:	bl	14014 <memcmp@plt>
   268ec:	cmp	r0, #0
   268f0:	ldr	r1, [pc, #-672]	; 26658 <__flatcc_fb_parse@@Base+0x10bc>
   268f4:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   268f8:	mov	r1, r5
   268fc:	mov	r2, #5
   26900:	ldr	r0, [pc, #-684]	; 2665c <__flatcc_fb_parse@@Base+0x10c0>
   26904:	bl	14014 <memcmp@plt>
   26908:	cmp	r0, #0
   2690c:	ldr	r1, [pc, #-692]	; 26660 <__flatcc_fb_parse@@Base+0x10c4>
   26910:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   26914:	mov	r1, r5
   26918:	mov	r2, #5
   2691c:	ldr	r0, [pc, #-704]	; 26664 <__flatcc_fb_parse@@Base+0x10c8>
   26920:	bl	14014 <memcmp@plt>
   26924:	cmp	r0, #0
   26928:	ldr	r1, [pc, #-712]	; 26668 <__flatcc_fb_parse@@Base+0x10cc>
   2692c:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   26930:	mov	r1, r5
   26934:	mov	r2, #5
   26938:	ldr	r0, [pc, #-724]	; 2666c <__flatcc_fb_parse@@Base+0x10d0>
   2693c:	bl	14014 <memcmp@plt>
   26940:	cmp	r0, #0
   26944:	movne	r1, #9
   26948:	mvneq	r1, #980	; 0x3d4
   2694c:	b	25aa0 <__flatcc_fb_parse@@Base+0x504>
   26950:	mov	r1, r5
   26954:	mov	r2, #5
   26958:	ldr	r0, [pc, #-752]	; 26670 <__flatcc_fb_parse@@Base+0x10d4>
   2695c:	bl	14014 <memcmp@plt>
   26960:	cmp	r0, #0
   26964:	movne	r1, #9
   26968:	mvneq	r1, #976	; 0x3d0
   2696c:	b	25aa0 <__flatcc_fb_parse@@Base+0x504>
   26970:	mov	r1, r5
   26974:	mov	r2, #5
   26978:	ldr	r0, [pc, #-780]	; 26674 <__flatcc_fb_parse@@Base+0x10d8>
   2697c:	bl	14014 <memcmp@plt>
   26980:	cmp	r0, #0
   26984:	ldr	r1, [pc, #-788]	; 26678 <__flatcc_fb_parse@@Base+0x10dc>
   26988:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   2698c:	mov	r1, r5
   26990:	mov	r2, #6
   26994:	ldr	r0, [pc, #-800]	; 2667c <__flatcc_fb_parse@@Base+0x10e0>
   26998:	bl	14014 <memcmp@plt>
   2699c:	cmp	r0, #0
   269a0:	ldr	r1, [pc, #-808]	; 26680 <__flatcc_fb_parse@@Base+0x10e4>
   269a4:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   269a8:	mov	r1, r5
   269ac:	mov	r2, #6
   269b0:	ldr	r0, [pc, #-820]	; 26684 <__flatcc_fb_parse@@Base+0x10e8>
   269b4:	bl	14014 <memcmp@plt>
   269b8:	cmp	r0, #0
   269bc:	ldr	r1, [pc, #-828]	; 26688 <__flatcc_fb_parse@@Base+0x10ec>
   269c0:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   269c4:	mov	r1, r5
   269c8:	mov	r2, #6
   269cc:	ldr	r0, [pc, #-840]	; 2668c <__flatcc_fb_parse@@Base+0x10f0>
   269d0:	bl	14014 <memcmp@plt>
   269d4:	cmp	r0, #0
   269d8:	ldr	r1, [pc, #-848]	; 26690 <__flatcc_fb_parse@@Base+0x10f4>
   269dc:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   269e0:	mov	r1, r5
   269e4:	mov	r2, #6
   269e8:	ldr	r0, [pc, #-860]	; 26694 <__flatcc_fb_parse@@Base+0x10f8>
   269ec:	bl	14014 <memcmp@plt>
   269f0:	cmp	r0, #0
   269f4:	ldr	r1, [pc, #-868]	; 26698 <__flatcc_fb_parse@@Base+0x10fc>
   269f8:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   269fc:	mov	r1, r5
   26a00:	mov	r2, #6
   26a04:	ldr	r0, [pc, #-880]	; 2669c <__flatcc_fb_parse@@Base+0x1100>
   26a08:	bl	14014 <memcmp@plt>
   26a0c:	cmp	r0, #0
   26a10:	ldr	r1, [pc, #-888]	; 266a0 <__flatcc_fb_parse@@Base+0x1104>
   26a14:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   26a18:	mov	r1, r5
   26a1c:	mov	r2, #6
   26a20:	ldr	r0, [pc, #-900]	; 266a4 <__flatcc_fb_parse@@Base+0x1108>
   26a24:	bl	14014 <memcmp@plt>
   26a28:	cmp	r0, #0
   26a2c:	ldr	r1, [pc, #-908]	; 266a8 <__flatcc_fb_parse@@Base+0x110c>
   26a30:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   26a34:	mov	r1, r5
   26a38:	mov	r2, #7
   26a3c:	ldr	r0, [pc, #-920]	; 266ac <__flatcc_fb_parse@@Base+0x1110>
   26a40:	bl	14014 <memcmp@plt>
   26a44:	cmp	r0, #0
   26a48:	ldr	r1, [pc, #-928]	; 266b0 <__flatcc_fb_parse@@Base+0x1114>
   26a4c:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   26a50:	mov	r1, r5
   26a54:	mov	r2, #7
   26a58:	ldr	r0, [pc, #-940]	; 266b4 <__flatcc_fb_parse@@Base+0x1118>
   26a5c:	bl	14014 <memcmp@plt>
   26a60:	cmp	r0, #0
   26a64:	ldr	r1, [pc, #-928]	; 266cc <__flatcc_fb_parse@@Base+0x1130>
   26a68:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   26a6c:	mov	r1, r5
   26a70:	mov	r2, #9
   26a74:	ldr	r0, [pc, #-964]	; 266b8 <__flatcc_fb_parse@@Base+0x111c>
   26a78:	bl	14014 <memcmp@plt>
   26a7c:	cmp	r0, #0
   26a80:	ldr	r1, [pc, #-920]	; 266f0 <__flatcc_fb_parse@@Base+0x1154>
   26a84:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   26a88:	mov	r1, r5
   26a8c:	mov	r2, #9
   26a90:	ldr	r0, [pc, #-988]	; 266bc <__flatcc_fb_parse@@Base+0x1120>
   26a94:	bl	14014 <memcmp@plt>
   26a98:	cmp	r0, #0
   26a9c:	movne	r1, #9
   26aa0:	mvneq	r1, #968	; 0x3c8
   26aa4:	b	25aa0 <__flatcc_fb_parse@@Base+0x504>
   26aa8:	mov	r1, r5
   26aac:	mov	r2, #11
   26ab0:	ldr	r0, [pc, #-1016]	; 266c0 <__flatcc_fb_parse@@Base+0x1124>
   26ab4:	bl	14014 <memcmp@plt>
   26ab8:	cmp	r0, #0
   26abc:	ldr	r1, [pc, #-900]	; 26740 <__flatcc_fb_parse@@Base+0x11a4>
   26ac0:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   26ac4:	mov	r1, r5
   26ac8:	mov	r2, #14
   26acc:	ldr	r0, [pc, #-1040]	; 266c4 <__flatcc_fb_parse@@Base+0x1128>
   26ad0:	bl	14014 <memcmp@plt>
   26ad4:	cmp	r0, #0
   26ad8:	ldr	r1, [pc, #-996]	; 266fc <__flatcc_fb_parse@@Base+0x1160>
   26adc:	b	26864 <__flatcc_fb_parse@@Base+0x12c8>
   26ae0:	mov	r1, r5
   26ae4:	mov	r2, #15
   26ae8:	ldr	r0, [pc, #-1064]	; 266c8 <__flatcc_fb_parse@@Base+0x112c>
   26aec:	bl	14014 <memcmp@plt>
   26af0:	cmp	r0, #0
   26af4:	movne	r1, #9
   26af8:	mvneq	r1, #964	; 0x3c4
   26afc:	b	25aa0 <__flatcc_fb_parse@@Base+0x504>
   26b00:	ldrb	r1, [r5]
   26b04:	cmp	r1, #0
   26b08:	moveq	r3, r5
   26b0c:	moveq	r2, r3
   26b10:	bne	258c4 <__flatcc_fb_parse@@Base+0x328>
   26b14:	mov	r0, r4
   26b18:	bl	24124 <__flatcc_fb_default_error_out@@Base+0x44>
   26b1c:	ldr	r5, [r4, #20]
   26b20:	ldr	r3, [r4, #40]	; 0x28
   26b24:	ldr	r0, [r4, #216]	; 0xd8
   26b28:	str	r3, [r4, #24]
   26b2c:	str	r5, [r4, #40]	; 0x28
   26b30:	bl	14068 <malloc@plt>
   26b34:	cmp	r0, #0
   26b38:	str	r0, [r4, #112]	; 0x70
   26b3c:	bne	26b44 <__flatcc_fb_parse@@Base+0x15a8>
   26b40:	bl	24100 <__flatcc_fb_default_error_out@@Base+0x20>
   26b44:	ldr	r3, [r5, #16]
   26b48:	cmn	r3, #964	; 0x3c4
   26b4c:	bne	26b58 <__flatcc_fb_parse@@Base+0x15bc>
   26b50:	mov	r0, r4
   26b54:	bl	242b0 <__flatcc_fb_default_error_out@@Base+0x1d0>
   26b58:	ldr	r5, [pc, #-1172]	; 266cc <__flatcc_fb_parse@@Base+0x1130>
   26b5c:	ldr	r7, [pc, #-1172]	; 266d0 <__flatcc_fb_parse@@Base+0x1134>
   26b60:	ldr	r8, [pc, #-1172]	; 266d4 <__flatcc_fb_parse@@Base+0x1138>
   26b64:	ldr	r6, [r4, #40]	; 0x28
   26b68:	mov	r1, r5
   26b6c:	mov	r0, r4
   26b70:	bl	24324 <__flatcc_fb_default_error_out@@Base+0x244>
   26b74:	cmp	r0, #0
   26b78:	beq	26ba4 <__flatcc_fb_parse@@Base+0x1608>
   26b7c:	ldr	r3, [r4, #140]	; 0x8c
   26b80:	cmp	r3, #0
   26b84:	beq	26b98 <__flatcc_fb_parse@@Base+0x15fc>
   26b88:	mov	r2, r7
   26b8c:	mov	r1, r6
   26b90:	mov	r0, r4
   26b94:	bl	2465c <__flatcc_error_report@@Base+0x194>
   26b98:	ldr	r3, [r4, #108]	; 0x6c
   26b9c:	cmp	r3, #9
   26ba0:	ble	26d9c <__flatcc_fb_parse@@Base+0x1800>
   26ba4:	ldr	r6, [r4, #40]	; 0x28
   26ba8:	ldr	r3, [r6, #16]
   26bac:	cmp	r3, #0
   26bb0:	beq	27490 <__flatcc_fb_parse@@Base+0x1ef4>
   26bb4:	ldr	r3, [r4, #108]	; 0x6c
   26bb8:	cmp	r3, #9
   26bbc:	bgt	26fd4 <__flatcc_fb_parse@@Base+0x1a38>
   26bc0:	ldr	r1, [r4, #40]	; 0x28
   26bc4:	ldr	r5, [r1, #16]
   26bc8:	cmn	r5, #968	; 0x3c8
   26bcc:	beq	27054 <__flatcc_fb_parse@@Base+0x1ab8>
   26bd0:	bgt	26e28 <__flatcc_fb_parse@@Base+0x188c>
   26bd4:	mvn	r3, #972	; 0x3cc
   26bd8:	cmp	r5, r3
   26bdc:	beq	27124 <__flatcc_fb_parse@@Base+0x1b88>
   26be0:	cmn	r5, #972	; 0x3cc
   26be4:	bge	26e00 <__flatcc_fb_parse@@Base+0x1864>
   26be8:	sub	r3, r3, #10
   26bec:	cmp	r5, r3
   26bf0:	beq	27184 <__flatcc_fb_parse@@Base+0x1be8>
   26bf4:	cmn	r5, #976	; 0x3d0
   26bf8:	beq	27250 <__flatcc_fb_parse@@Base+0x1cb4>
   26bfc:	mvn	r3, #996	; 0x3e4
   26c00:	cmp	r5, r3
   26c04:	bne	26e20 <__flatcc_fb_parse@@Base+0x1884>
   26c08:	mov	r0, r4
   26c0c:	bl	242b0 <__flatcc_fb_default_error_out@@Base+0x1d0>
   26c10:	mov	r1, #128	; 0x80
   26c14:	mov	r0, r4
   26c18:	bl	241ec <__flatcc_fb_default_error_out@@Base+0x10c>
   26c1c:	ldr	r3, [r4, #392]	; 0x188
   26c20:	mov	r5, r0
   26c24:	add	r0, r4, #36	; 0x24
   26c28:	str	r3, [r5]
   26c2c:	mov	r3, #3
   26c30:	strh	r3, [r5, #8]
   26c34:	ldr	r3, [r4, #544]	; 0x220
   26c38:	str	r5, [r4, #392]	; 0x188
   26c3c:	str	r3, [r5, #12]
   26c40:	bl	240b4 <__flatcc_fb_read_file@@Base+0xf0>
   26c44:	ldr	r3, [r4, #36]	; 0x24
   26c48:	mov	r1, #9
   26c4c:	mov	r0, r4
   26c50:	ldr	r2, [pc, #-1408]	; 266d8 <__flatcc_fb_parse@@Base+0x113c>
   26c54:	str	r3, [r5, #32]
   26c58:	mov	r3, #0
   26c5c:	str	r3, [r4, #36]	; 0x24
   26c60:	bl	24678 <__flatcc_error_report@@Base+0x1b0>
   26c64:	cmp	r0, #0
   26c68:	str	r0, [r5, #4]
   26c6c:	beq	27248 <__flatcc_fb_parse@@Base+0x1cac>
   26c70:	mov	r1, #58	; 0x3a
   26c74:	mov	r0, r4
   26c78:	bl	24324 <__flatcc_fb_default_error_out@@Base+0x244>
   26c7c:	cmp	r0, #0
   26c80:	beq	26cd4 <__flatcc_fb_parse@@Base+0x1738>
   26c84:	add	r1, r5, #40	; 0x28
   26c88:	mov	r0, r4
   26c8c:	bl	24e50 <__flatcc_error_report@@Base+0x988>
   26c90:	ldrh	r3, [r5, #48]	; 0x30
   26c94:	cmp	r3, #8
   26c98:	ldrne	r2, [pc, #-1472]	; 266e0 <__flatcc_fb_parse@@Base+0x1144>
   26c9c:	ldrne	r1, [r5, #40]	; 0x28
   26ca0:	bne	26ccc <__flatcc_fb_parse@@Base+0x1730>
   26ca4:	ldr	r1, [r5, #40]	; 0x28
   26ca8:	ldr	r3, [r1, #16]
   26cac:	add	r3, r3, #996	; 0x3e4
   26cb0:	cmp	r3, #21
   26cb4:	bhi	26cd4 <__flatcc_fb_parse@@Base+0x1738>
   26cb8:	ldr	r0, [pc, #-1508]	; 266dc <__flatcc_fb_parse@@Base+0x1140>
   26cbc:	mov	r2, #1
   26cc0:	ands	r3, r0, r2, lsl r3
   26cc4:	beq	26cd4 <__flatcc_fb_parse@@Base+0x1738>
   26cc8:	ldr	r2, [pc, #-1520]	; 266e0 <__flatcc_fb_parse@@Base+0x1144>
   26ccc:	mov	r0, r4
   26cd0:	bl	2465c <__flatcc_error_report@@Base+0x194>
   26cd4:	mov	r0, r4
   26cd8:	bl	24d48 <__flatcc_error_report@@Base+0x880>
   26cdc:	ldr	r2, [pc, #-1536]	; 266e4 <__flatcc_fb_parse@@Base+0x1148>
   26ce0:	mov	r1, #123	; 0x7b
   26ce4:	str	r0, [r5, #28]
   26ce8:	mov	r0, r4
   26cec:	bl	24678 <__flatcc_error_report@@Base+0x1b0>
   26cf0:	subs	r9, r0, #0
   26cf4:	beq	27248 <__flatcc_fb_parse@@Base+0x1cac>
   26cf8:	ldr	sl, [pc, #-1560]	; 266e8 <__flatcc_fb_parse@@Base+0x114c>
   26cfc:	ldr	fp, [pc, #-1452]	; 26758 <__flatcc_fb_parse@@Base+0x11bc>
   26d00:	mov	r2, sl
   26d04:	mov	r1, #9
   26d08:	mov	r0, r4
   26d0c:	bl	24678 <__flatcc_error_report@@Base+0x1b0>
   26d10:	subs	r3, r0, #0
   26d14:	str	r3, [sp, #12]
   26d18:	beq	27248 <__flatcc_fb_parse@@Base+0x1cac>
   26d1c:	ldr	r2, [r4, #108]	; 0x6c
   26d20:	cmp	r2, #9
   26d24:	bgt	27248 <__flatcc_fb_parse@@Base+0x1cac>
   26d28:	add	r7, r5, #20
   26d2c:	mov	r0, r4
   26d30:	mov	r1, r7
   26d34:	bl	243d0 <__flatcc_fb_default_error_out@@Base+0x2f0>
   26d38:	ldr	r3, [sp, #12]
   26d3c:	mov	r8, r0
   26d40:	mov	r1, #61	; 0x3d
   26d44:	mov	r0, r4
   26d48:	str	r3, [r8, #4]
   26d4c:	bl	24324 <__flatcc_fb_default_error_out@@Base+0x244>
   26d50:	cmp	r0, #0
   26d54:	beq	26d6c <__flatcc_fb_parse@@Base+0x17d0>
   26d58:	mov	r3, fp
   26d5c:	mov	r2, #0
   26d60:	add	r1, r8, #48	; 0x30
   26d64:	mov	r0, r4
   26d68:	bl	24890 <__flatcc_error_report@@Base+0x3c8>
   26d6c:	mov	r1, #44	; 0x2c
   26d70:	mov	r0, r4
   26d74:	bl	24324 <__flatcc_fb_default_error_out@@Base+0x244>
   26d78:	cmp	r0, #0
   26d7c:	beq	27228 <__flatcc_fb_parse@@Base+0x1c8c>
   26d80:	ldr	r3, [r4, #40]	; 0x28
   26d84:	ldr	r3, [r3, #16]
   26d88:	cmp	r3, #125	; 0x7d
   26d8c:	beq	27228 <__flatcc_fb_parse@@Base+0x1c8c>
   26d90:	mov	r3, #0
   26d94:	str	r3, [r4, #36]	; 0x24
   26d98:	b	26d00 <__flatcc_fb_parse@@Base+0x1764>
   26d9c:	mov	r2, r8
   26da0:	mov	r1, #19
   26da4:	mov	r0, r4
   26da8:	bl	24678 <__flatcc_error_report@@Base+0x1b0>
   26dac:	cmp	r0, #0
   26db0:	bne	26dc0 <__flatcc_fb_parse@@Base+0x1824>
   26db4:	mov	r1, #59	; 0x3b
   26db8:	mov	r0, r4
   26dbc:	bl	24390 <__flatcc_fb_default_error_out@@Base+0x2b0>
   26dc0:	mov	r1, #24
   26dc4:	mov	r0, r4
   26dc8:	bl	241ec <__flatcc_fb_default_error_out@@Base+0x10c>
   26dcc:	ldr	r3, [r4, #352]	; 0x160
   26dd0:	add	r1, r0, #8
   26dd4:	str	r3, [r0]
   26dd8:	str	r0, [r4, #352]	; 0x160
   26ddc:	mov	r0, r4
   26de0:	bl	24734 <__flatcc_error_report@@Base+0x26c>
   26de4:	ldr	r2, [pc, #-1792]	; 266ec <__flatcc_fb_parse@@Base+0x1150>
   26de8:	mov	r1, #59	; 0x3b
   26dec:	mov	r0, r4
   26df0:	bl	24678 <__flatcc_error_report@@Base+0x1b0>
   26df4:	b	26b68 <__flatcc_fb_parse@@Base+0x15cc>
   26df8:	mov	r6, r3
   26dfc:	b	26ba8 <__flatcc_fb_parse@@Base+0x160c>
   26e00:	ldr	r3, [pc, #-1816]	; 266f0 <__flatcc_fb_parse@@Base+0x1154>
   26e04:	cmp	r5, r3
   26e08:	beq	270ac <__flatcc_fb_parse@@Base+0x1b10>
   26e0c:	bgt	26f20 <__flatcc_fb_parse@@Base+0x1984>
   26e10:	sub	r3, r3, #1
   26e14:	cmp	r5, r3
   26e18:	ldreq	r2, [pc, #-1836]	; 266f4 <__flatcc_fb_parse@@Base+0x1158>
   26e1c:	beq	27444 <__flatcc_fb_parse@@Base+0x1ea8>
   26e20:	ldr	r2, [pc, #-1840]	; 266f8 <__flatcc_fb_parse@@Base+0x115c>
   26e24:	b	27444 <__flatcc_fb_parse@@Base+0x1ea8>
   26e28:	cmp	r5, #5
   26e2c:	beq	27450 <__flatcc_fb_parse@@Base+0x1eb4>
   26e30:	bgt	26eec <__flatcc_fb_parse@@Base+0x1950>
   26e34:	ldr	r3, [pc, #-1856]	; 266fc <__flatcc_fb_parse@@Base+0x1160>
   26e38:	cmp	r5, r3
   26e3c:	beq	26fe0 <__flatcc_fb_parse@@Base+0x1a44>
   26e40:	blt	271d0 <__flatcc_fb_parse@@Base+0x1c34>
   26e44:	mvn	r3, #964	; 0x3c4
   26e48:	cmp	r5, r3
   26e4c:	bne	26e20 <__flatcc_fb_parse@@Base+0x1884>
   26e50:	mov	r0, r4
   26e54:	add	r5, r4, #360	; 0x168
   26e58:	bl	242b0 <__flatcc_fb_default_error_out@@Base+0x1d0>
   26e5c:	ldrh	r3, [r5, #8]
   26e60:	cmp	r3, #0
   26e64:	beq	26e8c <__flatcc_fb_parse@@Base+0x18f0>
   26e68:	ldr	r1, [r4, #40]	; 0x28
   26e6c:	mov	r0, r4
   26e70:	ldr	r3, [r4, #364]	; 0x16c
   26e74:	ldr	r2, [pc, #-1916]	; 26700 <__flatcc_fb_parse@@Base+0x1164>
   26e78:	str	r3, [sp, #4]
   26e7c:	ldr	r3, [r4, #360]	; 0x168
   26e80:	str	r3, [sp]
   26e84:	mov	r3, #0
   26e88:	bl	244c8 <__flatcc_error_report@@Base>
   26e8c:	ldr	r2, [pc, #-1936]	; 26704 <__flatcc_fb_parse@@Base+0x1168>
   26e90:	mov	r1, #19
   26e94:	mov	r0, r4
   26e98:	bl	24678 <__flatcc_error_report@@Base+0x1b0>
   26e9c:	cmp	r0, #0
   26ea0:	beq	26f6c <__flatcc_fb_parse@@Base+0x19d0>
   26ea4:	mov	r1, r5
   26ea8:	mov	r0, r4
   26eac:	ldr	r7, [r4, #40]	; 0x28
   26eb0:	bl	24734 <__flatcc_error_report@@Base+0x26c>
   26eb4:	ldr	r3, [r4, #360]	; 0x168
   26eb8:	cmp	r3, #0
   26ebc:	beq	26ee4 <__flatcc_fb_parse@@Base+0x1948>
   26ec0:	ldr	r3, [r4, #364]	; 0x16c
   26ec4:	cmp	r3, #4
   26ec8:	beq	26ee4 <__flatcc_fb_parse@@Base+0x1948>
   26ecc:	mov	r3, #1
   26ed0:	ldr	r2, [pc, #-2000]	; 26708 <__flatcc_fb_parse@@Base+0x116c>
   26ed4:	mov	r1, r7
   26ed8:	mov	r0, r4
   26edc:	strh	r3, [r5, #8]
   26ee0:	bl	2465c <__flatcc_error_report@@Base+0x194>
   26ee4:	ldr	r2, [pc, #-2016]	; 2670c <__flatcc_fb_parse@@Base+0x1170>
   26ee8:	b	27044 <__flatcc_fb_parse@@Base+0x1aa8>
   26eec:	cmp	r5, #27
   26ef0:	beq	27474 <__flatcc_fb_parse@@Base+0x1ed8>
   26ef4:	cmp	r5, #123	; 0x7b
   26ef8:	beq	27440 <__flatcc_fb_parse@@Base+0x1ea4>
   26efc:	cmp	r5, #7
   26f00:	bne	26e20 <__flatcc_fb_parse@@Base+0x1884>
   26f04:	mov	r3, #1
   26f08:	ldr	r2, [pc, #-2048]	; 26710 <__flatcc_fb_parse@@Base+0x1174>
   26f0c:	str	r3, [sp, #4]
   26f10:	ldr	r3, [pc, #-1968]	; 26768 <__flatcc_fb_parse@@Base+0x11cc>
   26f14:	str	r3, [sp]
   26f18:	mov	r3, #0
   26f1c:	b	27468 <__flatcc_fb_parse@@Base+0x1ecc>
   26f20:	mov	r0, r4
   26f24:	mov	r7, #0
   26f28:	bl	242b0 <__flatcc_fb_default_error_out@@Base+0x1d0>
   26f2c:	ldr	r5, [r4, #40]	; 0x28
   26f30:	mov	r1, #59	; 0x3b
   26f34:	mov	r0, r4
   26f38:	str	r7, [sp, #20]
   26f3c:	bl	24324 <__flatcc_fb_default_error_out@@Base+0x244>
   26f40:	cmp	r0, r7
   26f44:	cmpne	r5, r7
   26f48:	strne	r7, [r4, #544]	; 0x220
   26f4c:	bne	26fac <__flatcc_fb_parse@@Base+0x1a10>
   26f50:	ldr	r1, [r4, #40]	; 0x28
   26f54:	ldr	r3, [r1, #16]
   26f58:	cmp	r3, #9
   26f5c:	beq	26f7c <__flatcc_fb_parse@@Base+0x19e0>
   26f60:	ldr	r2, [pc, #-2132]	; 26714 <__flatcc_fb_parse@@Base+0x1178>
   26f64:	mov	r0, r4
   26f68:	bl	2465c <__flatcc_error_report@@Base+0x194>
   26f6c:	mov	r1, #59	; 0x3b
   26f70:	mov	r0, r4
   26f74:	bl	24390 <__flatcc_fb_default_error_out@@Base+0x2b0>
   26f78:	b	26fac <__flatcc_fb_parse@@Base+0x1a10>
   26f7c:	add	r1, sp, #20
   26f80:	mov	r0, r4
   26f84:	bl	246a8 <__flatcc_error_report@@Base+0x1e0>
   26f88:	mov	r3, r5
   26f8c:	ldr	r2, [pc, #-2172]	; 26718 <__flatcc_fb_parse@@Base+0x117c>
   26f90:	mov	r1, #59	; 0x3b
   26f94:	mov	r0, r4
   26f98:	bl	24d00 <__flatcc_error_report@@Base+0x838>
   26f9c:	mov	r0, r4
   26fa0:	ldr	r1, [sp, #20]
   26fa4:	bl	24254 <__flatcc_fb_default_error_out@@Base+0x174>
   26fa8:	str	r0, [r4, #544]	; 0x220
   26fac:	ldr	r3, [r4, #40]	; 0x28
   26fb0:	cmp	r6, r3
   26fb4:	bne	26df8 <__flatcc_fb_parse@@Base+0x185c>
   26fb8:	ldr	r3, [r4, #108]	; 0x6c
   26fbc:	cmp	r3, #0
   26fc0:	bne	26fd4 <__flatcc_fb_parse@@Base+0x1a38>
   26fc4:	ldr	r2, [pc, #-2224]	; 2671c <__flatcc_fb_parse@@Base+0x1180>
   26fc8:	mov	r1, r6
   26fcc:	mov	r0, r4
   26fd0:	bl	2465c <__flatcc_error_report@@Base+0x194>
   26fd4:	ldr	r0, [r4, #108]	; 0x6c
   26fd8:	add	sp, sp, #28
   26fdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26fe0:	mov	r0, r4
   26fe4:	add	r5, r4, #376	; 0x178
   26fe8:	bl	242b0 <__flatcc_fb_default_error_out@@Base+0x1d0>
   26fec:	ldrh	r3, [r5, #8]
   26ff0:	cmp	r3, #2
   26ff4:	bne	2701c <__flatcc_fb_parse@@Base+0x1a80>
   26ff8:	ldr	r1, [r4, #40]	; 0x28
   26ffc:	mov	r0, r4
   27000:	ldr	r3, [r4, #380]	; 0x17c
   27004:	ldr	r2, [pc, #-2284]	; 26720 <__flatcc_fb_parse@@Base+0x1184>
   27008:	str	r3, [sp, #4]
   2700c:	ldr	r3, [r4, #376]	; 0x178
   27010:	str	r3, [sp]
   27014:	mov	r3, #0
   27018:	bl	244c8 <__flatcc_error_report@@Base>
   2701c:	ldr	r2, [pc, #-2304]	; 26724 <__flatcc_fb_parse@@Base+0x1188>
   27020:	mov	r1, #19
   27024:	mov	r0, r4
   27028:	bl	24678 <__flatcc_error_report@@Base+0x1b0>
   2702c:	cmp	r0, #0
   27030:	beq	26f6c <__flatcc_fb_parse@@Base+0x19d0>
   27034:	mov	r1, r5
   27038:	mov	r0, r4
   2703c:	bl	24734 <__flatcc_error_report@@Base+0x26c>
   27040:	ldr	r2, [pc, #-2336]	; 26728 <__flatcc_fb_parse@@Base+0x118c>
   27044:	mov	r1, #59	; 0x3b
   27048:	mov	r0, r4
   2704c:	bl	24678 <__flatcc_error_report@@Base+0x1b0>
   27050:	b	26fac <__flatcc_fb_parse@@Base+0x1a10>
   27054:	mov	r0, r4
   27058:	add	r7, r4, #400	; 0x190
   2705c:	bl	242b0 <__flatcc_fb_default_error_out@@Base+0x1d0>
   27060:	ldr	r5, [r4, #40]	; 0x28
   27064:	ldr	r3, [r4, #400]	; 0x190
   27068:	cmp	r3, #0
   2706c:	beq	27080 <__flatcc_fb_parse@@Base+0x1ae4>
   27070:	ldr	r2, [pc, #-2380]	; 2672c <__flatcc_fb_parse@@Base+0x1190>
   27074:	mov	r1, r5
   27078:	mov	r0, r4
   2707c:	bl	2465c <__flatcc_error_report@@Base+0x194>
   27080:	mov	r1, r7
   27084:	mov	r0, r4
   27088:	bl	246a8 <__flatcc_error_report@@Base+0x1e0>
   2708c:	ldr	r3, [r4, #544]	; 0x220
   27090:	mov	r1, #59	; 0x3b
   27094:	mov	r0, r4
   27098:	ldr	r2, [pc, #-2416]	; 26730 <__flatcc_fb_parse@@Base+0x1194>
   2709c:	str	r3, [r4, #408]	; 0x198
   270a0:	mov	r3, r5
   270a4:	bl	24d00 <__flatcc_error_report@@Base+0x838>
   270a8:	b	26fac <__flatcc_fb_parse@@Base+0x1a10>
   270ac:	mov	r0, r4
   270b0:	bl	242b0 <__flatcc_fb_default_error_out@@Base+0x1d0>
   270b4:	mov	r1, #32
   270b8:	mov	r0, r4
   270bc:	bl	241ec <__flatcc_fb_default_error_out@@Base+0x10c>
   270c0:	mov	r5, r0
   270c4:	ldr	r2, [pc, #-2456]	; 26734 <__flatcc_fb_parse@@Base+0x1198>
   270c8:	mov	r1, #19
   270cc:	mov	r0, r4
   270d0:	ldr	r3, [r4, #356]	; 0x164
   270d4:	ldr	r7, [r4, #40]	; 0x28
   270d8:	str	r3, [r5]
   270dc:	str	r5, [r4, #356]	; 0x164
   270e0:	bl	24678 <__flatcc_error_report@@Base+0x1b0>
   270e4:	cmp	r0, #0
   270e8:	beq	2711c <__flatcc_fb_parse@@Base+0x1b80>
   270ec:	add	r1, r5, #8
   270f0:	mov	r0, r4
   270f4:	bl	24734 <__flatcc_error_report@@Base+0x26c>
   270f8:	ldr	r3, [r5, #12]
   270fc:	cmp	r3, #0
   27100:	bne	2711c <__flatcc_fb_parse@@Base+0x1b80>
   27104:	ldr	r2, [pc, #-2516]	; 26738 <__flatcc_fb_parse@@Base+0x119c>
   27108:	mov	r1, r7
   2710c:	mov	r0, r4
   27110:	str	r3, [sp]
   27114:	str	r3, [sp, #4]
   27118:	bl	244c8 <__flatcc_error_report@@Base>
   2711c:	ldr	r2, [pc, #-2536]	; 2673c <__flatcc_fb_parse@@Base+0x11a0>
   27120:	b	27044 <__flatcc_fb_parse@@Base+0x1aa8>
   27124:	mov	r0, r4
   27128:	bl	242b0 <__flatcc_fb_default_error_out@@Base+0x1d0>
   2712c:	mov	r1, #128	; 0x80
   27130:	mov	r0, r4
   27134:	bl	241ec <__flatcc_fb_default_error_out@@Base+0x10c>
   27138:	ldr	r3, [r4, #392]	; 0x188
   2713c:	mov	r7, r0
   27140:	add	r0, r4, #36	; 0x24
   27144:	str	r3, [r7]
   27148:	mov	r3, #1
   2714c:	strh	r3, [r7, #8]
   27150:	ldr	r3, [r4, #544]	; 0x220
   27154:	str	r7, [r4, #392]	; 0x188
   27158:	str	r3, [r7, #12]
   2715c:	bl	240b4 <__flatcc_fb_read_file@@Base+0xf0>
   27160:	ldr	r3, [r4, #36]	; 0x24
   27164:	str	r3, [r7, #32]
   27168:	mov	r3, #0
   2716c:	str	r3, [r4, #36]	; 0x24
   27170:	mov	r2, r5
   27174:	mov	r1, r7
   27178:	mov	r0, r4
   2717c:	bl	25040 <__flatcc_error_report@@Base+0xb78>
   27180:	b	26fac <__flatcc_fb_parse@@Base+0x1a10>
   27184:	mov	r0, r4
   27188:	mov	r8, #0
   2718c:	bl	242b0 <__flatcc_fb_default_error_out@@Base+0x1d0>
   27190:	mov	r1, #128	; 0x80
   27194:	mov	r0, r4
   27198:	bl	241ec <__flatcc_fb_default_error_out@@Base+0x10c>
   2719c:	ldr	r3, [r4, #392]	; 0x188
   271a0:	mov	r7, r0
   271a4:	add	r0, r4, #36	; 0x24
   271a8:	str	r3, [r7]
   271ac:	ldr	r3, [r4, #544]	; 0x220
   271b0:	strh	r8, [r7, #8]
   271b4:	str	r7, [r4, #392]	; 0x188
   271b8:	str	r3, [r7, #12]
   271bc:	bl	240b4 <__flatcc_fb_read_file@@Base+0xf0>
   271c0:	ldr	r3, [r4, #36]	; 0x24
   271c4:	str	r3, [r7, #32]
   271c8:	str	r8, [r4, #36]	; 0x24
   271cc:	b	27170 <__flatcc_fb_parse@@Base+0x1bd4>
   271d0:	mov	r0, r4
   271d4:	bl	242b0 <__flatcc_fb_default_error_out@@Base+0x1d0>
   271d8:	mov	r1, #128	; 0x80
   271dc:	mov	r0, r4
   271e0:	bl	241ec <__flatcc_fb_default_error_out@@Base+0x10c>
   271e4:	ldr	r3, [r4, #392]	; 0x188
   271e8:	mov	r5, r0
   271ec:	add	r0, r4, #36	; 0x24
   271f0:	str	r3, [r5]
   271f4:	mov	r3, #2
   271f8:	strh	r3, [r5, #8]
   271fc:	ldr	r3, [r4, #544]	; 0x220
   27200:	str	r5, [r4, #392]	; 0x188
   27204:	str	r3, [r5, #12]
   27208:	bl	240b4 <__flatcc_fb_read_file@@Base+0xf0>
   2720c:	ldr	r3, [r4, #36]	; 0x24
   27210:	mov	r1, r5
   27214:	ldr	r2, [pc, #-2780]	; 26740 <__flatcc_fb_parse@@Base+0x11a4>
   27218:	str	r3, [r5, #32]
   2721c:	mov	r3, #0
   27220:	str	r3, [r4, #36]	; 0x24
   27224:	b	27178 <__flatcc_fb_parse@@Base+0x1bdc>
   27228:	mov	r3, r9
   2722c:	ldr	r2, [pc, #-2800]	; 26744 <__flatcc_fb_parse@@Base+0x11a8>
   27230:	mov	r1, #125	; 0x7d
   27234:	mov	r0, r4
   27238:	bl	24d00 <__flatcc_error_report@@Base+0x838>
   2723c:	mov	r0, r7
   27240:	bl	240b4 <__flatcc_fb_read_file@@Base+0xf0>
   27244:	b	26fac <__flatcc_fb_parse@@Base+0x1a10>
   27248:	mov	r1, #125	; 0x7d
   2724c:	b	26f70 <__flatcc_fb_parse@@Base+0x19d4>
   27250:	mov	r0, r4
   27254:	bl	242b0 <__flatcc_fb_default_error_out@@Base+0x1d0>
   27258:	mov	r1, #128	; 0x80
   2725c:	mov	r0, r4
   27260:	bl	241ec <__flatcc_fb_default_error_out@@Base+0x10c>
   27264:	ldr	r3, [r4, #392]	; 0x188
   27268:	mov	r5, r0
   2726c:	add	r0, r4, #36	; 0x24
   27270:	str	r3, [r5]
   27274:	mov	r3, #4
   27278:	strh	r3, [r5, #8]
   2727c:	ldr	r3, [r4, #544]	; 0x220
   27280:	str	r5, [r4, #392]	; 0x188
   27284:	str	r3, [r5, #12]
   27288:	bl	240b4 <__flatcc_fb_read_file@@Base+0xf0>
   2728c:	ldr	r3, [r4, #36]	; 0x24
   27290:	mov	r1, #9
   27294:	mov	r0, r4
   27298:	ldr	r2, [pc, #-2904]	; 26748 <__flatcc_fb_parse@@Base+0x11ac>
   2729c:	str	r3, [r5, #32]
   272a0:	mov	r3, #0
   272a4:	str	r3, [r4, #36]	; 0x24
   272a8:	bl	24678 <__flatcc_error_report@@Base+0x1b0>
   272ac:	cmp	r0, #0
   272b0:	str	r0, [r5, #4]
   272b4:	beq	27300 <__flatcc_fb_parse@@Base+0x1d64>
   272b8:	mov	r0, r4
   272bc:	bl	24d48 <__flatcc_error_report@@Base+0x880>
   272c0:	ldr	r2, [pc, #-2940]	; 2674c <__flatcc_fb_parse@@Base+0x11b0>
   272c4:	mov	r1, #123	; 0x7b
   272c8:	str	r0, [r5, #28]
   272cc:	mov	r0, r4
   272d0:	bl	24678 <__flatcc_error_report@@Base+0x1b0>
   272d4:	subs	r9, r0, #0
   272d8:	beq	27300 <__flatcc_fb_parse@@Base+0x1d64>
   272dc:	ldr	sl, [pc, #-2964]	; 26750 <__flatcc_fb_parse@@Base+0x11b4>
   272e0:	ldr	fp, [r4, #40]	; 0x28
   272e4:	ldr	r3, [fp, #16]
   272e8:	cmp	r3, #9
   272ec:	beq	2730c <__flatcc_fb_parse@@Base+0x1d70>
   272f0:	ldr	r2, [pc, #-2980]	; 26754 <__flatcc_fb_parse@@Base+0x11b8>
   272f4:	mov	r1, fp
   272f8:	mov	r0, r4
   272fc:	bl	2465c <__flatcc_error_report@@Base+0x194>
   27300:	mov	r0, r4
   27304:	bl	24348 <__flatcc_fb_default_error_out@@Base+0x268>
   27308:	b	26fac <__flatcc_fb_parse@@Base+0x1a10>
   2730c:	ldr	r3, [r4, #108]	; 0x6c
   27310:	cmp	r3, #9
   27314:	bgt	27300 <__flatcc_fb_parse@@Base+0x1d64>
   27318:	add	r8, r5, #20
   2731c:	mov	r0, r4
   27320:	mov	r1, r8
   27324:	bl	243d0 <__flatcc_fb_default_error_out@@Base+0x2f0>
   27328:	mov	r7, r0
   2732c:	add	r1, sp, #20
   27330:	mov	r0, r4
   27334:	bl	246a8 <__flatcc_error_report@@Base+0x1e0>
   27338:	ldr	r3, [sp, #20]
   2733c:	mov	r2, #12
   27340:	strh	r2, [r7, #24]
   27344:	mov	r2, #0
   27348:	str	r3, [r7, #16]
   2734c:	ldr	r1, [r3]
   27350:	cmp	r1, #0
   27354:	bne	27400 <__flatcc_fb_parse@@Base+0x1e64>
   27358:	cmp	r2, #0
   2735c:	mov	r1, #58	; 0x3a
   27360:	mov	r0, r4
   27364:	strne	r3, [sp, #20]
   27368:	ldr	r3, [r3, #4]
   2736c:	str	r3, [r7, #4]
   27370:	bl	24324 <__flatcc_fb_default_error_out@@Base+0x244>
   27374:	cmp	r0, #0
   27378:	beq	273a8 <__flatcc_fb_parse@@Base+0x1e0c>
   2737c:	ldr	r3, [r7, #16]
   27380:	ldr	r3, [r3]
   27384:	cmp	r3, #0
   27388:	beq	2739c <__flatcc_fb_parse@@Base+0x1e00>
   2738c:	mov	r2, sl
   27390:	mov	r1, fp
   27394:	mov	r0, r4
   27398:	bl	2465c <__flatcc_error_report@@Base+0x194>
   2739c:	add	r1, r7, #16
   273a0:	mov	r0, r4
   273a4:	bl	24e50 <__flatcc_error_report@@Base+0x988>
   273a8:	mov	r1, #61	; 0x3d
   273ac:	mov	r0, r4
   273b0:	bl	24324 <__flatcc_fb_default_error_out@@Base+0x244>
   273b4:	cmp	r0, #0
   273b8:	beq	273d0 <__flatcc_fb_parse@@Base+0x1e34>
   273bc:	ldr	r3, [pc, #-3180]	; 26758 <__flatcc_fb_parse@@Base+0x11bc>
   273c0:	mov	r2, #0
   273c4:	add	r1, r7, #48	; 0x30
   273c8:	mov	r0, r4
   273cc:	bl	24890 <__flatcc_error_report@@Base+0x3c8>
   273d0:	mov	r1, #44	; 0x2c
   273d4:	mov	r0, r4
   273d8:	bl	24324 <__flatcc_fb_default_error_out@@Base+0x244>
   273dc:	cmp	r0, #0
   273e0:	beq	2740c <__flatcc_fb_parse@@Base+0x1e70>
   273e4:	ldr	r3, [r4, #40]	; 0x28
   273e8:	ldr	r3, [r3, #16]
   273ec:	cmp	r3, #125	; 0x7d
   273f0:	beq	2740c <__flatcc_fb_parse@@Base+0x1e70>
   273f4:	mov	r3, #0
   273f8:	str	r3, [r4, #36]	; 0x24
   273fc:	b	272e0 <__flatcc_fb_parse@@Base+0x1d44>
   27400:	mov	r2, #1
   27404:	mov	r3, r1
   27408:	b	2734c <__flatcc_fb_parse@@Base+0x1db0>
   2740c:	mov	r3, r9
   27410:	ldr	r2, [pc, #-3260]	; 2675c <__flatcc_fb_parse@@Base+0x11c0>
   27414:	mov	r1, #125	; 0x7d
   27418:	mov	r0, r4
   2741c:	bl	24d00 <__flatcc_error_report@@Base+0x838>
   27420:	mov	r0, r8
   27424:	bl	240b4 <__flatcc_fb_read_file@@Base+0xf0>
   27428:	mov	r1, r8
   2742c:	mov	r0, r4
   27430:	bl	243d0 <__flatcc_fb_default_error_out@@Base+0x2f0>
   27434:	add	r3, r4, #68	; 0x44
   27438:	str	r3, [r0, #4]
   2743c:	b	26fac <__flatcc_fb_parse@@Base+0x1a10>
   27440:	ldr	r2, [pc, #-3304]	; 26760 <__flatcc_fb_parse@@Base+0x11c4>
   27444:	mov	r0, r4
   27448:	bl	2465c <__flatcc_error_report@@Base+0x194>
   2744c:	b	26fac <__flatcc_fb_parse@@Base+0x1a10>
   27450:	mov	r3, #1
   27454:	ldr	r2, [pc, #-3320]	; 26764 <__flatcc_fb_parse@@Base+0x11c8>
   27458:	str	r3, [sp, #4]
   2745c:	ldr	r3, [pc, #-3324]	; 26768 <__flatcc_fb_parse@@Base+0x11cc>
   27460:	str	r3, [sp]
   27464:	mov	r3, #0
   27468:	mov	r0, r4
   2746c:	bl	244c8 <__flatcc_error_report@@Base>
   27470:	b	26fac <__flatcc_fb_parse@@Base+0x1a10>
   27474:	mov	r3, #5
   27478:	ldr	r2, [pc, #-3348]	; 2676c <__flatcc_fb_parse@@Base+0x11d0>
   2747c:	str	r3, [sp, #4]
   27480:	ldr	r3, [pc, #-3352]	; 26770 <__flatcc_fb_parse@@Base+0x11d4>
   27484:	str	r3, [sp]
   27488:	mov	r3, #0
   2748c:	b	27468 <__flatcc_fb_parse@@Base+0x1ecc>
   27490:	ldr	r2, [r4, #356]	; 0x164
   27494:	cmp	r2, #0
   27498:	bne	274ac <__flatcc_fb_parse@@Base+0x1f10>
   2749c:	add	r0, r4, #392	; 0x188
   274a0:	str	r3, [r4, #356]	; 0x164
   274a4:	bl	240b4 <__flatcc_fb_read_file@@Base+0xf0>
   274a8:	b	26fd4 <__flatcc_fb_parse@@Base+0x1a38>
   274ac:	ldr	r1, [r2]
   274b0:	str	r3, [r2]
   274b4:	mov	r3, r2
   274b8:	mov	r2, r1
   274bc:	b	27494 <__flatcc_fb_parse@@Base+0x1ef8>
   274c0:	cmp	r7, r6
   274c4:	movne	r2, r6
   274c8:	bne	262cc <__flatcc_fb_parse@@Base+0xd30>
   274cc:	b	26330 <__flatcc_fb_parse@@Base+0xd94>
   274d0:	cmp	sl, r7
   274d4:	bne	258fc <__flatcc_fb_parse@@Base+0x360>
   274d8:	mov	r5, r7
   274dc:	b	258a8 <__flatcc_fb_parse@@Base+0x30c>
   274e0:	cmp	r6, r7
   274e4:	bne	25890 <__flatcc_fb_parse@@Base+0x2f4>
   274e8:	b	258a8 <__flatcc_fb_parse@@Base+0x30c>
   274ec:	ldrb	r3, [r3]
   274f0:	udf	#0

000274f4 <__flatcc_fb_clear_parser@@Base>:
   274f4:	push	{r4, r5, r6, lr}
   274f8:	mov	r4, r0
   274fc:	ldr	r5, [r0, #392]	; 0x188
   27500:	cmp	r5, #0
   27504:	bne	275c0 <__flatcc_fb_clear_parser@@Base+0xcc>
   27508:	add	r0, r4, #448	; 0x1c0
   2750c:	bl	23ab0 <fb_schema_table_clear@@Base>
   27510:	add	r0, r4, #432	; 0x1b0
   27514:	bl	2e380 <fb_name_table_clear@@Base>
   27518:	add	r0, r4, #524	; 0x20c
   2751c:	bl	22974 <ptr_set_clear@@Base>
   27520:	ldr	r0, [r4, #112]	; 0x70
   27524:	cmp	r0, #0
   27528:	beq	27530 <__flatcc_fb_clear_parser@@Base+0x3c>
   2752c:	bl	13ff0 <free@plt>
   27530:	ldr	r0, [r4, #20]
   27534:	cmp	r0, #0
   27538:	beq	27540 <__flatcc_fb_clear_parser@@Base+0x4c>
   2753c:	bl	13ff0 <free@plt>
   27540:	ldr	r0, [r4, #512]	; 0x200
   27544:	cmp	r0, #0
   27548:	beq	27550 <__flatcc_fb_clear_parser@@Base+0x5c>
   2754c:	bl	13ff0 <free@plt>
   27550:	ldr	r0, [r4, #516]	; 0x204
   27554:	cmp	r0, #0
   27558:	beq	27560 <__flatcc_fb_clear_parser@@Base+0x6c>
   2755c:	bl	13ff0 <free@plt>
   27560:	ldr	r0, [r4, #520]	; 0x208
   27564:	cmp	r0, #0
   27568:	beq	27570 <__flatcc_fb_clear_parser@@Base+0x7c>
   2756c:	bl	13ff0 <free@plt>
   27570:	ldr	r0, [r4, #548]	; 0x224
   27574:	cmp	r0, #0
   27578:	beq	27580 <__flatcc_fb_clear_parser@@Base+0x8c>
   2757c:	bl	13ff0 <free@plt>
   27580:	add	r0, r4, #416	; 0x1a0
   27584:	mov	r2, #0
   27588:	ldr	r1, [pc, #100]	; 275f4 <__flatcc_fb_clear_parser@@Base+0x100>
   2758c:	bl	23578 <fb_scope_table_destroy@@Base>
   27590:	ldr	r0, [r4, #48]	; 0x30
   27594:	cmp	r0, #0
   27598:	bne	275e4 <__flatcc_fb_clear_parser@@Base+0xf0>
   2759c:	ldr	r0, [r4, #16]
   275a0:	cmp	r0, #0
   275a4:	beq	275ac <__flatcc_fb_clear_parser@@Base+0xb8>
   275a8:	bl	13ff0 <free@plt>
   275ac:	mov	r0, r4
   275b0:	mov	r2, #560	; 0x230
   275b4:	pop	{r4, r5, r6, lr}
   275b8:	mov	r1, #0
   275bc:	b	140d4 <memset@plt>
   275c0:	ldrh	r3, [r5, #8]
   275c4:	cmp	r3, #4
   275c8:	bhi	275dc <__flatcc_fb_clear_parser@@Base+0xe8>
   275cc:	add	r0, r5, #56	; 0x38
   275d0:	bl	22e94 <fb_symbol_table_clear@@Base>
   275d4:	add	r0, r5, #72	; 0x48
   275d8:	bl	2e8fc <fb_value_set_clear@@Base>
   275dc:	ldr	r5, [r5]
   275e0:	b	27500 <__flatcc_fb_clear_parser@@Base+0xc>
   275e4:	ldr	r5, [r0]
   275e8:	bl	13ff0 <free@plt>
   275ec:	mov	r0, r5
   275f0:	b	27594 <__flatcc_fb_clear_parser@@Base+0xa0>
   275f4:	strdeq	r4, [r2], -r8
   275f8:	mov	ip, #0
   275fc:	push	{r0, r1, r2, lr}
   27600:	str	ip, [sp]
   27604:	str	ip, [sp, #4]
   27608:	bl	244c8 <__flatcc_error_report@@Base>
   2760c:	add	sp, sp, #12
   27610:	pop	{pc}		; (ldr pc, [sp], #4)
   27614:	mov	r3, #0
   27618:	b	275f8 <__flatcc_fb_clear_parser@@Base+0x104>
   2761c:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27620:	mov	r5, r0
   27624:	mov	r4, r1
   27628:	mov	r9, r2
   2762c:	mov	r1, #0
   27630:	mov	r2, #48	; 0x30
   27634:	mov	r0, r3
   27638:	ldr	sl, [pc, #328]	; 27788 <__flatcc_fb_clear_parser@@Base+0x294>
   2763c:	mov	r7, #100	; 0x64
   27640:	mov	r6, #0
   27644:	mov	r8, r3
   27648:	ldr	fp, [pc, #316]	; 2778c <__flatcc_fb_clear_parser@@Base+0x298>
   2764c:	bl	140d4 <memset@plt>
   27650:	cmp	r4, #0
   27654:	cmpne	r7, #0
   27658:	bne	27680 <__flatcc_fb_clear_parser@@Base+0x18c>
   2765c:	cmp	r4, #0
   27660:	beq	27674 <__flatcc_fb_clear_parser@@Base+0x180>
   27664:	ldr	r2, [pc, #292]	; 27790 <__flatcc_fb_clear_parser@@Base+0x29c>
   27668:	mov	r0, r5
   2766c:	ldr	r1, [r4, #4]
   27670:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   27674:	mov	r0, r6
   27678:	add	sp, sp, #4
   2767c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27680:	ldr	r3, [r4, #4]
   27684:	ldr	r0, [r5, #412]	; 0x19c
   27688:	ldm	r3, {r1, r2}
   2768c:	add	r0, r0, #16
   27690:	bl	2e41c <fb_name_table_find@@Base>
   27694:	cmp	r0, #0
   27698:	ldreq	r2, [pc, #244]	; 27794 <__flatcc_fb_clear_parser@@Base+0x2a0>
   2769c:	beq	27720 <__flatcc_fb_clear_parser@@Base+0x22c>
   276a0:	ldr	r3, [r0, #24]
   276a4:	cmp	r3, #0
   276a8:	beq	276fc <__flatcc_fb_clear_parser@@Base+0x208>
   276ac:	asr	r2, r9, r3
   276b0:	tst	r2, #1
   276b4:	ldreq	r2, [pc, #220]	; 27798 <__flatcc_fb_clear_parser@@Base+0x2a4>
   276b8:	beq	27720 <__flatcc_fb_clear_parser@@Base+0x22c>
   276bc:	mov	r2, #1
   276c0:	orr	r6, r6, r2, lsl r3
   276c4:	ldr	r2, [r8, r3, lsl #2]
   276c8:	uxth	r6, r6
   276cc:	cmp	r2, #0
   276d0:	ldrne	r2, [pc, #196]	; 2779c <__flatcc_fb_clear_parser@@Base+0x2a8>
   276d4:	bne	27720 <__flatcc_fb_clear_parser@@Base+0x22c>
   276d8:	str	r4, [r8, r3, lsl #2]
   276dc:	ldr	r2, [pc, #188]	; 277a0 <__flatcc_fb_clear_parser@@Base+0x2ac>
   276e0:	ldr	r3, [r2, r3, lsl #2]
   276e4:	cmp	r3, #0
   276e8:	bne	27708 <__flatcc_fb_clear_parser@@Base+0x214>
   276ec:	ldrh	r3, [r4, #16]
   276f0:	cmp	r3, #0
   276f4:	ldrne	r2, [pc, #168]	; 277a4 <__flatcc_fb_clear_parser@@Base+0x2b0>
   276f8:	bne	27720 <__flatcc_fb_clear_parser@@Base+0x22c>
   276fc:	sub	r7, r7, #1
   27700:	ldr	r4, [r4]
   27704:	b	27650 <__flatcc_fb_clear_parser@@Base+0x15c>
   27708:	cmp	r3, #2
   2770c:	bne	27730 <__flatcc_fb_clear_parser@@Base+0x23c>
   27710:	ldrh	r3, [r4, #16]
   27714:	cmp	r3, #2
   27718:	ldrne	r2, [pc, #136]	; 277a8 <__flatcc_fb_clear_parser@@Base+0x2b4>
   2771c:	beq	276fc <__flatcc_fb_clear_parser@@Base+0x208>
   27720:	mov	r0, r5
   27724:	ldr	r1, [r4, #4]
   27728:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   2772c:	b	276fc <__flatcc_fb_clear_parser@@Base+0x208>
   27730:	cmp	r3, #5
   27734:	bne	2774c <__flatcc_fb_clear_parser@@Base+0x258>
   27738:	ldrh	r3, [r4, #16]
   2773c:	cmp	r3, #5
   27740:	ldrne	r2, [pc, #100]	; 277ac <__flatcc_fb_clear_parser@@Base+0x2b8>
   27744:	beq	276fc <__flatcc_fb_clear_parser@@Base+0x208>
   27748:	b	27720 <__flatcc_fb_clear_parser@@Base+0x22c>
   2774c:	cmp	r3, #4
   27750:	bne	2776c <__flatcc_fb_clear_parser@@Base+0x278>
   27754:	ldrh	r3, [r4, #16]
   27758:	sub	r3, r3, #4
   2775c:	cmp	r3, #1
   27760:	movhi	r2, fp
   27764:	bls	276fc <__flatcc_fb_clear_parser@@Base+0x208>
   27768:	b	27720 <__flatcc_fb_clear_parser@@Base+0x22c>
   2776c:	cmp	r3, #6
   27770:	bne	276fc <__flatcc_fb_clear_parser@@Base+0x208>
   27774:	ldrh	r3, [r4, #16]
   27778:	cmp	r3, #6
   2777c:	beq	276fc <__flatcc_fb_clear_parser@@Base+0x208>
   27780:	mov	r2, sl
   27784:	b	27720 <__flatcc_fb_clear_parser@@Base+0x22c>
   27788:	andeq	r8, r4, r0, lsr r4
   2778c:	andeq	r8, r4, sp, lsl #8
   27790:	andeq	r8, r4, sl, asr r4
   27794:	andeq	r8, r4, r6, lsr #6
   27798:	andeq	r8, r4, r5, asr #6
   2779c:	andeq	r8, r4, r2, ror r3
   277a0:	strdeq	r8, [r4], -r4
   277a4:	muleq	r4, r8, r3
   277a8:	andeq	r8, r4, r0, asr #7
   277ac:	andeq	r8, r4, r1, ror #7
   277b0:	cmp	r0, #0
   277b4:	beq	277cc <__flatcc_fb_clear_parser@@Base+0x2d8>
   277b8:	ldr	r0, [r0, #60]	; 0x3c
   277bc:	cmp	r0, #0
   277c0:	beq	277cc <__flatcc_fb_clear_parser@@Base+0x2d8>
   277c4:	rsb	r2, r2, #0
   277c8:	b	23610 <fb_scope_table_find@@Base>
   277cc:	mov	r0, #0
   277d0:	bx	lr
   277d4:	push	{r4, lr}
   277d8:	mov	r2, #108	; 0x6c
   277dc:	ldr	r3, [pc, #8]	; 277ec <__flatcc_fb_clear_parser@@Base+0x2f8>
   277e0:	ldr	r1, [pc, #8]	; 277f0 <__flatcc_fb_clear_parser@@Base+0x2fc>
   277e4:	ldr	r0, [pc, #8]	; 277f4 <__flatcc_fb_clear_parser@@Base+0x300>
   277e8:	bl	1417c <__assert_fail@plt>
   277ec:	andeq	r8, r4, r4, lsr #4
   277f0:	andeq	r8, r4, lr, ror #8
   277f4:			; <UNDEFINED> instruction: 0x000484b7
   277f8:	push	{r4, r5, r6, lr}
   277fc:	subs	r6, r1, #0
   27800:	movne	r5, r0
   27804:	movne	r4, #0
   27808:	ldrne	r0, [r6]
   2780c:	bne	27820 <__flatcc_fb_clear_parser@@Base+0x32c>
   27810:	mov	r0, r6
   27814:	pop	{r4, r5, r6, pc}
   27818:	ldr	r0, [r0]
   2781c:	add	r4, r4, #1
   27820:	cmp	r0, #0
   27824:	bne	27818 <__flatcc_fb_clear_parser@@Base+0x324>
   27828:	cmp	r4, #0
   2782c:	addne	r5, r5, #352	; 0x160
   27830:	popeq	{r4, r5, r6, pc}
   27834:	subs	r4, r4, #1
   27838:	mov	r2, r4
   2783c:	bne	27850 <__flatcc_fb_clear_parser@@Base+0x35c>
   27840:	mov	r1, r4
   27844:	mov	r0, r5
   27848:	pop	{r4, r5, r6, lr}
   2784c:	b	277b0 <__flatcc_fb_clear_parser@@Base+0x2bc>
   27850:	mov	r0, r5
   27854:	ldr	r1, [r6]
   27858:	bl	277b0 <__flatcc_fb_clear_parser@@Base+0x2bc>
   2785c:	cmp	r0, #0
   27860:	beq	27834 <__flatcc_fb_clear_parser@@Base+0x340>
   27864:	pop	{r4, r5, r6, pc}
   27868:	push	{r4, lr}
   2786c:	add	r0, r0, #172	; 0xac
   27870:	mov	r4, r1
   27874:	ldr	r1, [r1, #16]
   27878:	bl	22a08 <ptr_set_find_item@@Base>
   2787c:	cmp	r0, #0
   27880:	movne	r0, r4
   27884:	moveq	r0, #0
   27888:	pop	{r4, pc}
   2788c:	push	{r4, r5, r6, r7, r8, lr}
   27890:	mov	r6, r0
   27894:	mov	r7, r1
   27898:	mov	r0, r2
   2789c:	mov	r1, r2
   278a0:	mov	r2, #0
   278a4:	mov	r5, r2
   278a8:	mov	ip, r2
   278ac:	cmp	r0, #0
   278b0:	bne	278d8 <__flatcc_fb_clear_parser@@Base+0x3e4>
   278b4:	cmp	r3, #0
   278b8:	subne	r2, r2, #1
   278bc:	strne	r5, [r3]
   278c0:	movne	r5, ip
   278c4:	cmp	r5, #0
   278c8:	bne	278ec <__flatcc_fb_clear_parser@@Base+0x3f8>
   278cc:	mov	r4, #0
   278d0:	mov	r0, r4
   278d4:	pop	{r4, r5, r6, r7, r8, pc}
   278d8:	mov	ip, r5
   278dc:	add	r2, r2, #1
   278e0:	mov	r5, r0
   278e4:	ldr	r0, [r0]
   278e8:	b	278ac <__flatcc_fb_clear_parser@@Base+0x3b8>
   278ec:	sub	r3, r2, #1
   278f0:	cmp	r7, #0
   278f4:	clz	r3, r3
   278f8:	lsr	r3, r3, #5
   278fc:	moveq	r3, #0
   27900:	cmp	r3, #0
   27904:	beq	27960 <__flatcc_fb_clear_parser@@Base+0x46c>
   27908:	add	r8, r6, #352	; 0x160
   2790c:	ldr	r3, [r5, #4]
   27910:	add	r0, r7, #4
   27914:	ldm	r3, {r1, r2}
   27918:	bl	22f30 <fb_symbol_table_find@@Base>
   2791c:	subs	r4, r0, #0
   27920:	bne	2793c <__flatcc_fb_clear_parser@@Base+0x448>
   27924:	mov	r1, r7
   27928:	mov	r0, r6
   2792c:	bl	277f8 <__flatcc_fb_clear_parser@@Base+0x304>
   27930:	subs	r7, r0, #0
   27934:	bne	2790c <__flatcc_fb_clear_parser@@Base+0x418>
   27938:	b	278cc <__flatcc_fb_clear_parser@@Base+0x3d8>
   2793c:	ldrh	r3, [r4, #8]
   27940:	cmp	r3, #4
   27944:	bhi	27924 <__flatcc_fb_clear_parser@@Base+0x430>
   27948:	mov	r1, r4
   2794c:	mov	r0, r8
   27950:	bl	27868 <__flatcc_fb_clear_parser@@Base+0x374>
   27954:	cmp	r0, #0
   27958:	beq	27924 <__flatcc_fb_clear_parser@@Base+0x430>
   2795c:	b	278d0 <__flatcc_fb_clear_parser@@Base+0x3dc>
   27960:	cmp	r2, #1
   27964:	add	r6, r6, #352	; 0x160
   27968:	moveq	r1, #0
   2796c:	sub	r2, r2, #1
   27970:	mov	r0, r6
   27974:	bl	277b0 <__flatcc_fb_clear_parser@@Base+0x2bc>
   27978:	cmp	r0, #0
   2797c:	beq	278cc <__flatcc_fb_clear_parser@@Base+0x3d8>
   27980:	ldr	r3, [r5, #4]
   27984:	add	r0, r0, #4
   27988:	ldm	r3, {r1, r2}
   2798c:	bl	22f30 <fb_symbol_table_find@@Base>
   27990:	subs	r4, r0, #0
   27994:	beq	278cc <__flatcc_fb_clear_parser@@Base+0x3d8>
   27998:	ldrh	r3, [r4, #8]
   2799c:	cmp	r3, #4
   279a0:	bhi	278cc <__flatcc_fb_clear_parser@@Base+0x3d8>
   279a4:	mov	r1, r4
   279a8:	mov	r0, r6
   279ac:	bl	27868 <__flatcc_fb_clear_parser@@Base+0x374>
   279b0:	cmp	r0, #0
   279b4:	bne	278d0 <__flatcc_fb_clear_parser@@Base+0x3dc>
   279b8:	b	278cc <__flatcc_fb_clear_parser@@Base+0x3d8>
   279bc:	push	{r0, r1, r4, r5, r6, lr}
   279c0:	mov	r5, r2
   279c4:	mov	r2, #0
   279c8:	subs	r6, r3, #0
   279cc:	str	r2, [sp, #4]
   279d0:	ldr	r4, [sp, #24]
   279d4:	bne	279ec <__flatcc_fb_clear_parser@@Base+0x4f8>
   279d8:	ldr	r3, [pc, #176]	; 27a90 <__flatcc_fb_clear_parser@@Base+0x59c>
   279dc:	movw	r2, #347	; 0x15b
   279e0:	ldr	r1, [pc, #172]	; 27a94 <__flatcc_fb_clear_parser@@Base+0x5a0>
   279e4:	ldr	r0, [pc, #172]	; 27a98 <__flatcc_fb_clear_parser@@Base+0x5a4>
   279e8:	bl	1417c <__assert_fail@plt>
   279ec:	cmp	r5, #0
   279f0:	beq	27a14 <__flatcc_fb_clear_parser@@Base+0x520>
   279f4:	ldrh	r3, [r5, #8]
   279f8:	cmp	r3, #3
   279fc:	beq	27a14 <__flatcc_fb_clear_parser@@Base+0x520>
   27a00:	ldr	r3, [pc, #136]	; 27a90 <__flatcc_fb_clear_parser@@Base+0x59c>
   27a04:	mov	r2, #348	; 0x15c
   27a08:	ldr	r1, [pc, #132]	; 27a94 <__flatcc_fb_clear_parser@@Base+0x5a0>
   27a0c:	ldr	r0, [pc, #136]	; 27a9c <__flatcc_fb_clear_parser@@Base+0x5a8>
   27a10:	b	279e8 <__flatcc_fb_clear_parser@@Base+0x4f4>
   27a14:	add	r3, sp, #4
   27a18:	mov	r2, r6
   27a1c:	bl	2788c <__flatcc_fb_clear_parser@@Base+0x398>
   27a20:	cmp	r0, #0
   27a24:	beq	27a34 <__flatcc_fb_clear_parser@@Base+0x540>
   27a28:	ldrh	r3, [r0, #8]
   27a2c:	cmp	r3, #3
   27a30:	beq	27a60 <__flatcc_fb_clear_parser@@Base+0x56c>
   27a34:	ldr	r2, [r6]
   27a38:	clz	r3, r5
   27a3c:	lsr	r3, r3, #5
   27a40:	cmp	r2, #0
   27a44:	movne	r3, #1
   27a48:	cmp	r3, #0
   27a4c:	moveq	r0, r5
   27a50:	beq	27a60 <__flatcc_fb_clear_parser@@Base+0x56c>
   27a54:	mvn	r0, #0
   27a58:	add	sp, sp, #8
   27a5c:	pop	{r4, r5, r6, pc}
   27a60:	ldr	r3, [sp, #4]
   27a64:	add	r0, r0, #56	; 0x38
   27a68:	ldr	r3, [r3, #4]
   27a6c:	ldm	r3, {r1, r2}
   27a70:	bl	22f30 <fb_symbol_table_find@@Base>
   27a74:	cmp	r0, #0
   27a78:	beq	27a54 <__flatcc_fb_clear_parser@@Base+0x560>
   27a7c:	add	r0, r0, #48	; 0x30
   27a80:	ldm	r0, {r0, r1, r2, r3}
   27a84:	stm	r4, {r0, r1, r2, r3}
   27a88:	mov	r0, #0
   27a8c:	b	27a58 <__flatcc_fb_clear_parser@@Base+0x564>
   27a90:	andeq	r8, r4, sp, lsr #4
   27a94:	andeq	r8, r4, lr, ror #8
   27a98:	andeq	r8, r4, sp, asr #9
   27a9c:	ldrdeq	r8, [r4], -r1
   27aa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27aa4:	mov	r5, r0
   27aa8:	sub	sp, sp, #92	; 0x5c
   27aac:	mov	r6, r1
   27ab0:	ldrh	r8, [r1, #8]
   27ab4:	cmp	r8, #4
   27ab8:	beq	27bc4 <__flatcc_fb_clear_parser@@Base+0x6d0>
   27abc:	cmp	r8, #3
   27ac0:	beq	27ad8 <__flatcc_fb_clear_parser@@Base+0x5e4>
   27ac4:	ldr	r3, [pc, #1384]	; 28034 <__flatcc_fb_clear_parser@@Base+0xb40>
   27ac8:	movw	r2, #1229	; 0x4cd
   27acc:	ldr	r1, [pc, #1380]	; 28038 <__flatcc_fb_clear_parser@@Base+0xb44>
   27ad0:	ldr	r0, [pc, #1380]	; 2803c <__flatcc_fb_clear_parser@@Base+0xb48>
   27ad4:	bl	1417c <__assert_fail@plt>
   27ad8:	ldrh	r3, [r1, #48]	; 0x30
   27adc:	cmp	r3, #0
   27ae0:	bne	27b00 <__flatcc_fb_clear_parser@@Base+0x60c>
   27ae4:	ldr	r2, [pc, #1364]	; 28040 <__flatcc_fb_clear_parser@@Base+0xb4c>
   27ae8:	mov	r3, #1
   27aec:	strh	r3, [r1, #48]	; 0x30
   27af0:	ldr	r1, [r6, #4]
   27af4:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   27af8:	mvn	r0, #0
   27afc:	b	27bb4 <__flatcc_fb_clear_parser@@Base+0x6c0>
   27b00:	cmp	r3, #8
   27b04:	bne	27bbc <__flatcc_fb_clear_parser@@Base+0x6c8>
   27b08:	ldr	r3, [r1, #40]	; 0x28
   27b0c:	ldr	r2, [pc, #1328]	; 28044 <__flatcc_fb_clear_parser@@Base+0xb50>
   27b10:	ldr	r3, [r3, #16]
   27b14:	add	r3, r3, #996	; 0x3e4
   27b18:	add	r3, r3, #3
   27b1c:	cmp	r3, #27
   27b20:	addls	r3, r2, r3
   27b24:	movhi	r3, #0
   27b28:	ldrbls	r3, [r3, #87]	; 0x57
   27b2c:	add	r2, r2, r3, lsl #2
   27b30:	str	r3, [r1, #40]	; 0x28
   27b34:	ldr	r3, [r2, #116]	; 0x74
   27b38:	mov	r2, #0
   27b3c:	str	r3, [r1, #112]	; 0x70
   27b40:	str	r2, [r1, #116]	; 0x74
   27b44:	mov	r2, #32
   27b48:	mov	r0, r5
   27b4c:	strh	r3, [r6, #104]	; 0x68
   27b50:	add	r3, sp, #40	; 0x28
   27b54:	ldr	r1, [r6, #28]
   27b58:	add	r7, sp, #8
   27b5c:	bl	2761c <__flatcc_fb_clear_parser@@Base+0x128>
   27b60:	ands	r9, r0, #32
   27b64:	strh	r0, [r6, #92]	; 0x5c
   27b68:	movne	r2, #0
   27b6c:	movne	r3, #0
   27b70:	movne	r9, #1
   27b74:	strdne	r2, [sp, #8]
   27b78:	ldr	r2, [r6, #40]	; 0x28
   27b7c:	cmp	r2, #5
   27b80:	bne	27bf4 <__flatcc_fb_clear_parser@@Base+0x700>
   27b84:	mov	r3, #0
   27b88:	strb	r3, [sp, #8]
   27b8c:	mov	r3, #6
   27b90:	strh	r3, [sp, #16]
   27b94:	ldm	r7, {r0, r1, r2, r3}
   27b98:	add	ip, sp, #24
   27b9c:	mov	fp, #1
   27ba0:	ldr	r4, [r6, #20]
   27ba4:	stm	ip, {r0, r1, r2, r3}
   27ba8:	cmp	r4, #0
   27bac:	bne	27c30 <__flatcc_fb_clear_parser@@Base+0x73c>
   27bb0:	mov	r0, r4
   27bb4:	add	sp, sp, #92	; 0x5c
   27bb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27bbc:	ldr	r2, [pc, #1156]	; 28048 <__flatcc_fb_clear_parser@@Base+0xb54>
   27bc0:	b	27af0 <__flatcc_fb_clear_parser@@Base+0x5fc>
   27bc4:	ldrh	r3, [r1, #48]	; 0x30
   27bc8:	cmp	r3, #0
   27bcc:	ldrne	r2, [pc, #1144]	; 2804c <__flatcc_fb_clear_parser@@Base+0xb58>
   27bd0:	bne	27af0 <__flatcc_fb_clear_parser@@Base+0x5fc>
   27bd4:	mov	r3, #8
   27bd8:	mov	r2, #1
   27bdc:	str	r8, [r1, #40]	; 0x28
   27be0:	strh	r3, [r1, #48]	; 0x30
   27be4:	mov	r3, #0
   27be8:	strd	r2, [r1, #112]	; 0x70
   27bec:	mov	r3, #1
   27bf0:	b	27b44 <__flatcc_fb_clear_parser@@Base+0x650>
   27bf4:	mov	r0, #0
   27bf8:	mov	r1, #0
   27bfc:	mov	r3, #4
   27c00:	strd	r0, [sp, #8]
   27c04:	mov	r1, r6
   27c08:	mov	r0, r5
   27c0c:	strh	r3, [sp, #16]
   27c10:	mov	r3, r7
   27c14:	bl	29c2c <__flatcc_fb_coerce_scalar_type@@Base>
   27c18:	cmp	r0, #0
   27c1c:	ldrne	r2, [pc, #1068]	; 28050 <__flatcc_fb_clear_parser@@Base+0xb5c>
   27c20:	movne	r1, #0
   27c24:	beq	27b94 <__flatcc_fb_clear_parser@@Base+0x6a0>
   27c28:	mov	r0, r5
   27c2c:	b	27af4 <__flatcc_fb_clear_parser@@Base+0x600>
   27c30:	mov	r2, #1
   27c34:	mov	r1, r4
   27c38:	add	r0, r6, #56	; 0x38
   27c3c:	bl	22f10 <fb_symbol_table_insert_item@@Base>
   27c40:	cmp	r0, #0
   27c44:	beq	27c80 <__flatcc_fb_clear_parser@@Base+0x78c>
   27c48:	ldr	r3, [r0, #4]
   27c4c:	add	r2, r5, #68	; 0x44
   27c50:	ldr	r1, [r4, #4]
   27c54:	cmp	r3, r2
   27c58:	ldreq	r2, [pc, #1012]	; 28054 <__flatcc_fb_clear_parser@@Base+0xb60>
   27c5c:	beq	27d8c <__flatcc_fb_clear_parser@@Base+0x898>
   27c60:	ldr	r2, [pc, #1008]	; 28058 <__flatcc_fb_clear_parser@@Base+0xb64>
   27c64:	mov	r0, r5
   27c68:	bl	275f8 <__flatcc_fb_clear_parser@@Base+0x104>
   27c6c:	mov	r3, #1
   27c70:	strh	r3, [r4, #24]
   27c74:	mov	fp, #0
   27c78:	ldr	r4, [r4]
   27c7c:	b	27ba8 <__flatcc_fb_clear_parser@@Base+0x6b4>
   27c80:	ldrh	r3, [r4, #8]
   27c84:	cmp	r3, #5
   27c88:	beq	27c98 <__flatcc_fb_clear_parser@@Base+0x7a4>
   27c8c:	ldr	r2, [pc, #968]	; 2805c <__flatcc_fb_clear_parser@@Base+0xb68>
   27c90:	ldr	r1, [r4, #4]
   27c94:	b	27c28 <__flatcc_fb_clear_parser@@Base+0x734>
   27c98:	ldr	r3, [r4, #64]	; 0x40
   27c9c:	cmp	r3, #0
   27ca0:	beq	27cb8 <__flatcc_fb_clear_parser@@Base+0x7c4>
   27ca4:	ldr	r3, [pc, #904]	; 28034 <__flatcc_fb_clear_parser@@Base+0xb40>
   27ca8:	movw	r2, #1315	; 0x523
   27cac:	ldr	r1, [pc, #900]	; 28038 <__flatcc_fb_clear_parser@@Base+0xb44>
   27cb0:	ldr	r0, [pc, #936]	; 28060 <__flatcc_fb_clear_parser@@Base+0xb6c>
   27cb4:	b	27ad4 <__flatcc_fb_clear_parser@@Base+0x5e0>
   27cb8:	cmp	r8, #4
   27cbc:	bne	27cec <__flatcc_fb_clear_parser@@Base+0x7f8>
   27cc0:	ldr	r1, [r4, #4]
   27cc4:	add	r2, r5, #68	; 0x44
   27cc8:	cmp	r1, r2
   27ccc:	strheq	r3, [r4, #24]
   27cd0:	beq	27cec <__flatcc_fb_clear_parser@@Base+0x7f8>
   27cd4:	ldrh	r2, [r4, #24]
   27cd8:	cmp	r2, #10
   27cdc:	bne	27d78 <__flatcc_fb_clear_parser@@Base+0x884>
   27ce0:	mov	r2, #0
   27ce4:	mov	r3, #0
   27ce8:	strd	r2, [r4, #88]	; 0x58
   27cec:	ldrh	r3, [r4, #56]	; 0x38
   27cf0:	eor	fp, fp, #1
   27cf4:	cmp	r3, #0
   27cf8:	moveq	r3, fp
   27cfc:	movne	r3, #0
   27d00:	cmp	r3, #0
   27d04:	beq	27d54 <__flatcc_fb_clear_parser@@Base+0x860>
   27d08:	ldrh	r3, [sp, #16]
   27d0c:	cmp	r3, #5
   27d10:	bne	27df0 <__flatcc_fb_clear_parser@@Base+0x8fc>
   27d14:	ldr	r3, [r6, #40]	; 0x28
   27d18:	cmp	r3, #6
   27d1c:	bne	27d3c <__flatcc_fb_clear_parser@@Base+0x848>
   27d20:	ldrd	r2, [sp, #8]
   27d24:	mvn	r1, #0
   27d28:	mvn	r0, #0
   27d2c:	cmp	r3, r1
   27d30:	cmpeq	r2, r0
   27d34:	ldreq	r2, [pc, #808]	; 28064 <__flatcc_fb_clear_parser@@Base+0xb70>
   27d38:	beq	27e20 <__flatcc_fb_clear_parser@@Base+0x92c>
   27d3c:	ldr	r3, [sp, #8]
   27d40:	ldr	r2, [sp, #12]
   27d44:	adds	r3, r3, #1
   27d48:	adc	r2, r2, #0
   27d4c:	str	r3, [sp, #8]
   27d50:	str	r2, [sp, #12]
   27d54:	cmp	r9, #0
   27d58:	ldrh	r3, [r4, #56]	; 0x38
   27d5c:	beq	27f54 <__flatcc_fb_clear_parser@@Base+0xa60>
   27d60:	cmp	r3, #0
   27d64:	beq	27e6c <__flatcc_fb_clear_parser@@Base+0x978>
   27d68:	cmp	r3, #5
   27d6c:	beq	27e60 <__flatcc_fb_clear_parser@@Base+0x96c>
   27d70:	ldr	r2, [pc, #752]	; 28068 <__flatcc_fb_clear_parser@@Base+0xb74>
   27d74:	b	27c90 <__flatcc_fb_clear_parser@@Base+0x79c>
   27d78:	cmp	r2, #12
   27d7c:	beq	27d98 <__flatcc_fb_clear_parser@@Base+0x8a4>
   27d80:	cmp	r2, #1
   27d84:	beq	27c74 <__flatcc_fb_clear_parser@@Base+0x780>
   27d88:	ldr	r2, [pc, #732]	; 2806c <__flatcc_fb_clear_parser@@Base+0xb78>
   27d8c:	mov	r0, r5
   27d90:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   27d94:	b	27c6c <__flatcc_fb_clear_parser@@Base+0x778>
   27d98:	mov	r0, r5
   27d9c:	ldr	r1, [r6, #12]
   27da0:	ldr	r2, [r4, #16]
   27da4:	bl	2788c <__flatcc_fb_clear_parser@@Base+0x398>
   27da8:	cmp	r0, #0
   27dac:	bne	27dc8 <__flatcc_fb_clear_parser@@Base+0x8d4>
   27db0:	mov	r3, r4
   27db4:	ldr	r2, [pc, #692]	; 28070 <__flatcc_fb_clear_parser@@Base+0xb7c>
   27db8:	mov	r0, r5
   27dbc:	ldr	r1, [r4, #16]
   27dc0:	bl	252cc <error_ref_sym@@Base>
   27dc4:	b	27c6c <__flatcc_fb_clear_parser@@Base+0x778>
   27dc8:	ldrh	r3, [r0, #8]
   27dcc:	cmp	r3, #1
   27dd0:	movls	r3, #14
   27dd4:	strls	r0, [r4, #16]
   27dd8:	strhls	r3, [r4, #24]
   27ddc:	bls	27ce0 <__flatcc_fb_clear_parser@@Base+0x7ec>
   27de0:	ldr	r2, [pc, #652]	; 28074 <__flatcc_fb_clear_parser@@Base+0xb80>
   27de4:	ldr	r3, [r0, #4]
   27de8:	ldr	r1, [r4, #4]
   27dec:	b	27c64 <__flatcc_fb_clear_parser@@Base+0x770>
   27df0:	cmp	r3, #4
   27df4:	bne	27e30 <__flatcc_fb_clear_parser@@Base+0x93c>
   27df8:	ldr	r3, [r6, #40]	; 0x28
   27dfc:	cmp	r3, #6
   27e00:	bne	27d3c <__flatcc_fb_clear_parser@@Base+0x848>
   27e04:	ldrd	r2, [sp, #8]
   27e08:	mvn	r1, #-2147483648	; 0x80000000
   27e0c:	mvn	r0, #0
   27e10:	cmp	r3, r1
   27e14:	cmpeq	r2, r0
   27e18:	bne	27d3c <__flatcc_fb_clear_parser@@Base+0x848>
   27e1c:	ldr	r2, [pc, #596]	; 28078 <__flatcc_fb_clear_parser@@Base+0xb84>
   27e20:	mov	r0, r5
   27e24:	ldr	r1, [r4, #4]
   27e28:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   27e2c:	b	27d3c <__flatcc_fb_clear_parser@@Base+0x848>
   27e30:	cmp	r3, #6
   27e34:	bne	27d54 <__flatcc_fb_clear_parser@@Base+0x860>
   27e38:	ldrb	r3, [sp, #8]
   27e3c:	cmp	r3, #1
   27e40:	bne	27e54 <__flatcc_fb_clear_parser@@Base+0x960>
   27e44:	ldr	r2, [pc, #560]	; 2807c <__flatcc_fb_clear_parser@@Base+0xb88>
   27e48:	mov	r0, r5
   27e4c:	ldr	r1, [r4, #4]
   27e50:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   27e54:	mov	r3, #1
   27e58:	strb	r3, [sp, #8]
   27e5c:	b	27d54 <__flatcc_fb_clear_parser@@Base+0x860>
   27e60:	add	r3, r4, #48	; 0x30
   27e64:	ldm	r3, {r0, r1, r2, r3}
   27e68:	stm	r7, {r0, r1, r2, r3}
   27e6c:	ldrd	r2, [sp, #8]
   27e70:	ldr	ip, [r6, #40]	; 0x28
   27e74:	strd	r2, [sp]
   27e78:	ldr	r3, [pc, #452]	; 28044 <__flatcc_fb_clear_parser@@Base+0xb50>
   27e7c:	add	r1, r3, ip, lsl #2
   27e80:	ldrd	r2, [sp]
   27e84:	ldr	r0, [r1, #116]	; 0x74
   27e88:	mov	r1, #0
   27e8c:	cmp	r3, r1
   27e90:	lsl	r0, r0, #3
   27e94:	cmpeq	r2, r0
   27e98:	bcc	27ea4 <__flatcc_fb_clear_parser@@Base+0x9b0>
   27e9c:	ldr	r2, [pc, #476]	; 28080 <__flatcc_fb_clear_parser@@Base+0xb8c>
   27ea0:	b	27c90 <__flatcc_fb_clear_parser@@Base+0x79c>
   27ea4:	ldr	r3, [sp]
   27ea8:	mov	r1, #1
   27eac:	ldr	r2, [sp]
   27eb0:	sub	r3, r3, #32
   27eb4:	lsl	r3, r1, r3
   27eb8:	rsb	r0, r2, #32
   27ebc:	lsl	r2, r1, r2
   27ec0:	orr	r3, r3, r1, lsr r0
   27ec4:	mov	r1, r4
   27ec8:	mov	r0, r5
   27ecc:	strd	r2, [r4, #48]	; 0x30
   27ed0:	mov	r3, #5
   27ed4:	mov	r2, ip
   27ed8:	strh	r3, [r4, #56]	; 0x38
   27edc:	add	r3, r4, #48	; 0x30
   27ee0:	bl	29c2c <__flatcc_fb_coerce_scalar_type@@Base>
   27ee4:	cmp	r0, #0
   27ee8:	bne	27e9c <__flatcc_fb_clear_parser@@Base+0x9a8>
   27eec:	cmp	fp, #0
   27ef0:	beq	27fb0 <__flatcc_fb_clear_parser@@Base+0xabc>
   27ef4:	ldr	r3, [r5, #180]	; 0xb4
   27ef8:	cmp	r3, #0
   27efc:	beq	27fb0 <__flatcc_fb_clear_parser@@Base+0xabc>
   27f00:	ldrh	r3, [sp, #16]
   27f04:	cmp	r3, #5
   27f08:	bne	27f94 <__flatcc_fb_clear_parser@@Base+0xaa0>
   27f0c:	ldrd	r0, [sp, #8]
   27f10:	ldrd	r2, [sp, #24]
   27f14:	cmp	r1, r3
   27f18:	cmpeq	r0, r2
   27f1c:	bhi	27fb0 <__flatcc_fb_clear_parser@@Base+0xabc>
   27f20:	cmp	r8, #4
   27f24:	ldr	r1, [r4, #4]
   27f28:	bne	27f3c <__flatcc_fb_clear_parser@@Base+0xa48>
   27f2c:	ldrd	r2, [sp, #24]
   27f30:	orrs	r3, r2, r3
   27f34:	ldreq	r2, [pc, #328]	; 28084 <__flatcc_fb_clear_parser@@Base+0xb90>
   27f38:	beq	27f40 <__flatcc_fb_clear_parser@@Base+0xa4c>
   27f3c:	ldr	r2, [pc, #324]	; 28088 <__flatcc_fb_clear_parser@@Base+0xb94>
   27f40:	mov	r0, r5
   27f44:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   27f48:	mov	r3, #1
   27f4c:	strh	r3, [r4, #56]	; 0x38
   27f50:	b	27af8 <__flatcc_fb_clear_parser@@Base+0x604>
   27f54:	cmp	r3, #0
   27f58:	add	sl, r4, #48	; 0x30
   27f5c:	bne	27f6c <__flatcc_fb_clear_parser@@Base+0xa78>
   27f60:	ldm	r7, {r0, r1, r2, r3}
   27f64:	stm	sl, {r0, r1, r2, r3}
   27f68:	b	27eec <__flatcc_fb_clear_parser@@Base+0x9f8>
   27f6c:	ldm	sl, {r0, r1, r2, r3}
   27f70:	stm	r7, {r0, r1, r2, r3}
   27f74:	mov	r3, r7
   27f78:	mov	r1, r4
   27f7c:	mov	r0, r5
   27f80:	ldr	r2, [r6, #40]	; 0x28
   27f84:	bl	29c2c <__flatcc_fb_coerce_scalar_type@@Base>
   27f88:	cmp	r0, #0
   27f8c:	beq	27f60 <__flatcc_fb_clear_parser@@Base+0xa6c>
   27f90:	b	27af8 <__flatcc_fb_clear_parser@@Base+0x604>
   27f94:	cmp	r3, #4
   27f98:	bne	27fe4 <__flatcc_fb_clear_parser@@Base+0xaf0>
   27f9c:	ldrd	r2, [sp, #8]
   27fa0:	ldrd	r0, [sp, #24]
   27fa4:	cmp	r0, r2
   27fa8:	sbcs	r3, r1, r3
   27fac:	bge	27f20 <__flatcc_fb_clear_parser@@Base+0xa2c>
   27fb0:	ldm	r7, {r0, r1, r2, r3}
   27fb4:	add	ip, sp, #24
   27fb8:	stm	ip, {r0, r1, r2, r3}
   27fbc:	mov	r2, #1
   27fc0:	add	r1, r4, #48	; 0x30
   27fc4:	add	r0, r6, #72	; 0x48
   27fc8:	bl	2e980 <fb_value_set_insert_item@@Base>
   27fcc:	cmp	r0, #0
   27fd0:	beq	28014 <__flatcc_fb_clear_parser@@Base+0xb20>
   27fd4:	cmp	r8, #4
   27fd8:	bne	28008 <__flatcc_fb_clear_parser@@Base+0xb14>
   27fdc:	ldr	r2, [pc, #168]	; 2808c <__flatcc_fb_clear_parser@@Base+0xb98>
   27fe0:	b	28000 <__flatcc_fb_clear_parser@@Base+0xb0c>
   27fe4:	cmp	r3, #6
   27fe8:	bne	27fb0 <__flatcc_fb_clear_parser@@Base+0xabc>
   27fec:	ldrb	r2, [sp, #8]
   27ff0:	ldrb	r3, [sp, #24]
   27ff4:	cmp	r2, r3
   27ff8:	bhi	27fb0 <__flatcc_fb_clear_parser@@Base+0xabc>
   27ffc:	ldr	r2, [pc, #140]	; 28090 <__flatcc_fb_clear_parser@@Base+0xb9c>
   28000:	ldr	r1, [r4, #4]
   28004:	b	27f40 <__flatcc_fb_clear_parser@@Base+0xa4c>
   28008:	ldrh	r3, [r4, #10]
   2800c:	orr	r3, r3, #4
   28010:	strh	r3, [r4, #10]
   28014:	ldr	r3, [r4, #64]	; 0x40
   28018:	cmp	r3, #0
   2801c:	beq	27c74 <__flatcc_fb_clear_parser@@Base+0x780>
   28020:	ldr	r2, [pc, #108]	; 28094 <__flatcc_fb_clear_parser@@Base+0xba0>
   28024:	mov	r0, r5
   28028:	ldr	r1, [r4, #4]
   2802c:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   28030:	b	27c74 <__flatcc_fb_clear_parser@@Base+0x780>
   28034:	andeq	r8, r4, lr, lsr r2
   28038:	andeq	r8, r4, lr, ror #8
   2803c:	ldrdeq	r8, [r4], -ip
   28040:	strdeq	r8, [r4], -sl
   28044:	strdeq	r8, [r4], -r4
   28048:	andeq	r8, r4, r0, lsl r5
   2804c:	andeq	r8, r4, r1, asr #10
   28050:	andeq	r8, r4, r0, lsl #11
   28054:			; <UNDEFINED> instruction: 0x000485be
   28058:	ldrdeq	r8, [r4], -fp
   2805c:	strdeq	r8, [r4], -r6
   28060:	andeq	r8, r4, pc, lsl r6
   28064:	strdeq	r8, [r4], -r0
   28068:	andeq	r8, r4, r5, asr r7
   2806c:	andeq	r8, r4, r5, lsr r6
   28070:	andeq	r8, r4, ip, ror r6
   28074:	andeq	r8, r4, sl, lsr #13
   28078:	andeq	r8, r4, sp, lsl #14
   2807c:	andeq	r8, r4, r8, lsr #14
   28080:	muleq	r4, r0, r7
   28084:	andeq	r8, r4, r3, asr #15
   28088:	andeq	r8, r4, r4, lsl #16
   2808c:	andeq	r8, r4, fp, ror #16
   28090:	andeq	r8, r4, fp, lsr #16
   28094:			; <UNDEFINED> instruction: 0x000488b5
   28098:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2809c:	sub	sp, sp, #36	; 0x24
   280a0:	ldrh	r7, [r1, #8]
   280a4:	cmp	r7, #1
   280a8:	beq	280c0 <__flatcc_fb_clear_parser@@Base+0xbcc>
   280ac:	ldr	r3, [pc, #940]	; 28460 <__flatcc_fb_clear_parser@@Base+0xf6c>
   280b0:	movw	r2, #502	; 0x1f6
   280b4:	ldr	r1, [pc, #936]	; 28464 <__flatcc_fb_clear_parser@@Base+0xf70>
   280b8:	ldr	r0, [pc, #936]	; 28468 <__flatcc_fb_clear_parser@@Base+0xf74>
   280bc:	bl	1417c <__assert_fail@plt>
   280c0:	ldrh	r3, [r1, #10]
   280c4:	mov	r6, r0
   280c8:	mov	r5, r1
   280cc:	ands	r0, r3, #1
   280d0:	beq	280e8 <__flatcc_fb_clear_parser@@Base+0xbf4>
   280d4:	ldr	r3, [pc, #900]	; 28460 <__flatcc_fb_clear_parser@@Base+0xf6c>
   280d8:	mov	r2, #504	; 0x1f8
   280dc:	ldr	r1, [pc, #896]	; 28464 <__flatcc_fb_clear_parser@@Base+0xf70>
   280e0:	ldr	r0, [pc, #900]	; 2846c <__flatcc_fb_clear_parser@@Base+0xf78>
   280e4:	b	280bc <__flatcc_fb_clear_parser@@Base+0xbc8>
   280e8:	tst	r3, #2
   280ec:	bne	281f4 <__flatcc_fb_clear_parser@@Base+0xd00>
   280f0:	ldr	r2, [r1, #120]	; 0x78
   280f4:	cmp	r2, #0
   280f8:	beq	28110 <__flatcc_fb_clear_parser@@Base+0xc1c>
   280fc:	ldr	r3, [pc, #860]	; 28460 <__flatcc_fb_clear_parser@@Base+0xf6c>
   28100:	mov	r2, #508	; 0x1fc
   28104:	ldr	r1, [pc, #856]	; 28464 <__flatcc_fb_clear_parser@@Base+0xf70>
   28108:	ldr	r0, [pc, #864]	; 28470 <__flatcc_fb_clear_parser@@Base+0xf7c>
   2810c:	b	280bc <__flatcc_fb_clear_parser@@Base+0xbc8>
   28110:	ldr	sl, [pc, #860]	; 28474 <__flatcc_fb_clear_parser@@Base+0xf80>
   28114:	orr	r3, r3, #1
   28118:	ldr	fp, [pc, #856]	; 28478 <__flatcc_fb_clear_parser@@Base+0xf84>
   2811c:	strh	r3, [r1, #10]
   28120:	ldr	r4, [r1, #20]
   28124:	cmp	r4, #0
   28128:	bne	281b0 <__flatcc_fb_clear_parser@@Base+0xcbc>
   2812c:	ldrh	r3, [r5, #104]	; 0x68
   28130:	cmp	r3, #0
   28134:	beq	28150 <__flatcc_fb_clear_parser@@Base+0xc5c>
   28138:	cmp	r3, r7
   2813c:	bcs	28154 <__flatcc_fb_clear_parser@@Base+0xc60>
   28140:	ldr	r2, [pc, #820]	; 2847c <__flatcc_fb_clear_parser@@Base+0xf88>
   28144:	mov	r0, r6
   28148:	ldr	r1, [r5, #4]
   2814c:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   28150:	strh	r7, [r5, #104]	; 0x68
   28154:	ldrh	r2, [r5, #104]	; 0x68
   28158:	mov	r3, #0
   2815c:	ldr	r1, [r5, #112]	; 0x70
   28160:	ldr	r0, [r5, #116]	; 0x74
   28164:	subs	ip, r2, #1
   28168:	str	ip, [sp, #24]
   2816c:	sbc	ip, r3, #0
   28170:	str	ip, [sp, #28]
   28174:	ldrd	r8, [sp, #24]
   28178:	cmp	r9, #0
   2817c:	cmpeq	r8, #255	; 0xff
   28180:	bhi	282a4 <__flatcc_fb_clear_parser@@Base+0xdb0>
   28184:	mov	r8, #1
   28188:	mov	r9, #0
   2818c:	cmp	r3, r9
   28190:	cmpeq	r2, r8
   28194:	beq	28414 <__flatcc_fb_clear_parser@@Base+0xf20>
   28198:	adds	r8, r8, r8
   2819c:	adc	r9, r9, r9
   281a0:	cmp	r3, r9
   281a4:	cmpeq	r2, r8
   281a8:	bcs	2818c <__flatcc_fb_clear_parser@@Base+0xc98>
   281ac:	b	282a4 <__flatcc_fb_clear_parser@@Base+0xdb0>
   281b0:	ldr	r3, [r6, #116]	; 0x74
   281b4:	cmp	r3, #99	; 0x63
   281b8:	ble	281d0 <__flatcc_fb_clear_parser@@Base+0xcdc>
   281bc:	ldr	r2, [pc, #700]	; 28480 <__flatcc_fb_clear_parser@@Base+0xf8c>
   281c0:	mov	r1, #0
   281c4:	mov	r0, r6
   281c8:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   281cc:	b	281f0 <__flatcc_fb_clear_parser@@Base+0xcfc>
   281d0:	ldrh	r3, [r4, #24]
   281d4:	cmp	r3, #8
   281d8:	beq	281fc <__flatcc_fb_clear_parser@@Base+0xd08>
   281dc:	cmp	r3, #14
   281e0:	beq	282a8 <__flatcc_fb_clear_parser@@Base+0xdb4>
   281e4:	cmp	r3, #1
   281e8:	ldrne	r2, [pc, #660]	; 28484 <__flatcc_fb_clear_parser@@Base+0xf90>
   281ec:	bne	2835c <__flatcc_fb_clear_parser@@Base+0xe68>
   281f0:	mvn	r0, #0
   281f4:	add	sp, sp, #36	; 0x24
   281f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   281fc:	ldr	r3, [r4, #16]
   28200:	ldr	r2, [r3, #16]
   28204:	add	r2, r2, #996	; 0x3e4
   28208:	add	r2, r2, #3
   2820c:	cmp	r2, #27
   28210:	addls	r2, sl, r2
   28214:	movhi	r2, #0
   28218:	ldrbls	r2, [r2, #87]	; 0x57
   2821c:	str	r2, [r4, #16]
   28220:	add	r2, sl, r2, lsl #2
   28224:	ldr	r2, [r2, #116]	; 0x74
   28228:	cmp	r2, #0
   2822c:	bne	28244 <__flatcc_fb_clear_parser@@Base+0xd50>
   28230:	ldr	r2, [pc, #588]	; 28484 <__flatcc_fb_clear_parser@@Base+0xf90>
   28234:	mov	r0, r6
   28238:	ldr	r1, [r4, #4]
   2823c:	bl	275f8 <__flatcc_fb_clear_parser@@Base+0x104>
   28240:	b	281f0 <__flatcc_fb_clear_parser@@Base+0xcfc>
   28244:	mov	r3, #0
   28248:	strh	r2, [r4, #74]	; 0x4a
   2824c:	strd	r2, [r4, #88]	; 0x58
   28250:	ldrh	r2, [r4, #74]	; 0x4a
   28254:	mov	r3, #0
   28258:	ldrd	r8, [r5, #112]	; 0x70
   2825c:	subs	r1, r2, #1
   28260:	str	r1, [sp, #16]
   28264:	sbc	r1, r3, #0
   28268:	str	r1, [sp, #20]
   2826c:	ldrd	r0, [sp, #16]
   28270:	cmp	r1, #0
   28274:	cmpeq	r0, #255	; 0xff
   28278:	bhi	282a4 <__flatcc_fb_clear_parser@@Base+0xdb0>
   2827c:	mov	r0, #1
   28280:	mov	r1, #0
   28284:	cmp	r3, r1
   28288:	cmpeq	r2, r0
   2828c:	beq	283a0 <__flatcc_fb_clear_parser@@Base+0xeac>
   28290:	adds	r0, r0, r0
   28294:	adc	r1, r1, r1
   28298:	cmp	r3, r1
   2829c:	cmpeq	r2, r0
   282a0:	bcs	28284 <__flatcc_fb_clear_parser@@Base+0xd90>
   282a4:	bl	277d4 <__flatcc_fb_clear_parser@@Base+0x2e0>
   282a8:	ldr	r8, [r4, #16]
   282ac:	ldrh	r3, [r8, #8]
   282b0:	cmp	r3, #3
   282b4:	bne	282d0 <__flatcc_fb_clear_parser@@Base+0xddc>
   282b8:	ldr	r3, [r8, #112]	; 0x70
   282bc:	ldr	r2, [r8, #116]	; 0x74
   282c0:	strh	r3, [r4, #74]	; 0x4a
   282c4:	str	r3, [r4, #88]	; 0x58
   282c8:	str	r2, [r4, #92]	; 0x5c
   282cc:	b	28250 <__flatcc_fb_clear_parser@@Base+0xd5c>
   282d0:	cmp	r3, #1
   282d4:	bne	28358 <__flatcc_fb_clear_parser@@Base+0xe64>
   282d8:	ldrh	r3, [r8, #10]
   282dc:	tst	r3, #1
   282e0:	ldrne	r2, [pc, #416]	; 28488 <__flatcc_fb_clear_parser@@Base+0xf94>
   282e4:	ldrne	r3, [r8, #4]
   282e8:	bne	28234 <__flatcc_fb_clear_parser@@Base+0xd40>
   282ec:	tst	r3, #2
   282f0:	beq	28308 <__flatcc_fb_clear_parser@@Base+0xe14>
   282f4:	ldrh	r3, [r8, #104]	; 0x68
   282f8:	strh	r3, [r4, #74]	; 0x4a
   282fc:	ldrd	r2, [r8, #112]	; 0x70
   28300:	strd	r2, [r4, #88]	; 0x58
   28304:	b	28250 <__flatcc_fb_clear_parser@@Base+0xd5c>
   28308:	ldr	r3, [r6, #188]	; 0xbc
   2830c:	cmp	r3, #0
   28310:	beq	28328 <__flatcc_fb_clear_parser@@Base+0xe34>
   28314:	mov	r2, fp
   28318:	mov	r0, r6
   2831c:	ldr	r1, [r4, #4]
   28320:	ldr	r3, [r8, #4]
   28324:	bl	275f8 <__flatcc_fb_clear_parser@@Base+0x104>
   28328:	ldr	r3, [r6, #116]	; 0x74
   2832c:	mov	r1, r8
   28330:	mov	r0, r6
   28334:	add	r3, r3, #1
   28338:	str	r3, [r6, #116]	; 0x74
   2833c:	bl	28098 <__flatcc_fb_clear_parser@@Base+0xba4>
   28340:	ldr	r3, [r6, #116]	; 0x74
   28344:	cmp	r0, #0
   28348:	sub	r3, r3, #1
   2834c:	str	r3, [r6, #116]	; 0x74
   28350:	beq	282f4 <__flatcc_fb_clear_parser@@Base+0xe00>
   28354:	b	281f4 <__flatcc_fb_clear_parser@@Base+0xd00>
   28358:	ldr	r2, [pc, #300]	; 2848c <__flatcc_fb_clear_parser@@Base+0xf98>
   2835c:	ldr	r1, [r4, #4]
   28360:	b	281c4 <__flatcc_fb_clear_parser@@Base+0xcd0>
   28364:	mov	r3, #0
   28368:	movw	r2, #65535	; 0xffff
   2836c:	cmp	r9, r3
   28370:	cmpeq	r8, r2
   28374:	bls	28388 <__flatcc_fb_clear_parser@@Base+0xe94>
   28378:	ldr	r2, [pc, #272]	; 28490 <__flatcc_fb_clear_parser@@Base+0xf9c>
   2837c:	mov	r0, r6
   28380:	ldr	r1, [r4, #4]
   28384:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   28388:	ldrh	r3, [r4, #74]	; 0x4a
   2838c:	ldr	r4, [r4]
   28390:	strd	r8, [r5, #112]	; 0x70
   28394:	cmp	r3, r7
   28398:	movcs	r7, r3
   2839c:	b	28124 <__flatcc_fb_clear_parser@@Base+0xc30>
   283a0:	subs	r1, r8, #1
   283a4:	sbc	r0, r9, #0
   283a8:	adds	r1, r1, r2
   283ac:	adc	r0, r0, r3
   283b0:	rsbs	r2, r2, #0
   283b4:	rsc	r3, r3, #0
   283b8:	and	r1, r1, r2
   283bc:	and	r3, r0, r3
   283c0:	stm	sp, {r1, r3}
   283c4:	ldrd	r2, [sp]
   283c8:	cmp	r9, r3
   283cc:	strd	r2, [r4, #80]	; 0x50
   283d0:	cmpeq	r8, r2
   283d4:	bhi	2840c <__flatcc_fb_clear_parser@@Base+0xf18>
   283d8:	mov	r2, #0
   283dc:	mov	r3, #0
   283e0:	ldrd	r0, [sp]
   283e4:	strd	r2, [sp, #8]
   283e8:	ldrd	r2, [r4, #88]	; 0x58
   283ec:	adds	r8, r2, r0
   283f0:	adcs	r9, r3, r1
   283f4:	movcs	r2, #1
   283f8:	movcs	r3, #0
   283fc:	strdcs	r2, [sp, #8]
   28400:	ldrd	r2, [sp, #8]
   28404:	orrs	r3, r2, r3
   28408:	beq	28364 <__flatcc_fb_clear_parser@@Base+0xe70>
   2840c:	ldr	r2, [pc, #128]	; 28494 <__flatcc_fb_clear_parser@@Base+0xfa0>
   28410:	b	2835c <__flatcc_fb_clear_parser@@Base+0xe68>
   28414:	subs	r1, r1, #1
   28418:	sbc	r0, r0, #0
   2841c:	adds	r1, r1, r2
   28420:	adc	r0, r0, r3
   28424:	rsbs	r2, r2, #0
   28428:	rsc	r3, r3, #0
   2842c:	and	r1, r1, r2
   28430:	and	r3, r3, r0
   28434:	mov	r0, #0
   28438:	str	r1, [r5, #112]	; 0x70
   2843c:	str	r3, [r5, #116]	; 0x74
   28440:	ldrh	r3, [r5, #10]
   28444:	bic	r3, r3, #1
   28448:	orr	r3, r3, #2
   2844c:	strh	r3, [r5, #10]
   28450:	ldr	r3, [r6, #396]	; 0x18c
   28454:	str	r3, [r5, #120]	; 0x78
   28458:	str	r5, [r6, #396]	; 0x18c
   2845c:	b	281f4 <__flatcc_fb_clear_parser@@Base+0xd00>
   28460:	muleq	r4, r8, r2
   28464:	andeq	r8, r4, lr, ror #8
   28468:	ldrdeq	r1, [r3], -r5
   2846c:	ldrdeq	r8, [r4], -r8	; <UNPREDICTABLE>
   28470:	strdeq	r8, [r4], -pc	; <UNPREDICTABLE>
   28474:	strdeq	r8, [r4], -r4
   28478:	andeq	r8, r4, r3, lsl #19
   2847c:	andeq	r8, r4, r5, lsr sl
   28480:	andeq	r8, r4, sl, lsl #18
   28484:	andeq	r8, r4, r3, asr r9
   28488:	andeq	r8, r4, r3, ror #18
   2848c:	andeq	r8, r4, sl, asr #19
   28490:	andeq	r8, r4, r2, lsl #20
   28494:	andeq	r8, r4, sp, ror #19

00028498 <__flatcc_fb_build_schema@@Base>:
   28498:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2849c:	add	r3, r0, #352	; 0x160
   284a0:	sub	sp, sp, #212	; 0xd4
   284a4:	mov	r4, r0
   284a8:	mov	r1, r3
   284ac:	add	r0, r0, #524	; 0x20c
   284b0:	str	r3, [sp, #44]	; 0x2c
   284b4:	bl	22a08 <ptr_set_find_item@@Base>
   284b8:	cmp	r0, #0
   284bc:	bne	284d4 <__flatcc_fb_build_schema@@Base+0x3c>
   284c0:	ldr	r3, [pc, #3992]	; 29460 <__flatcc_fb_build_schema@@Base+0xfc8>
   284c4:	movw	r2, #1558	; 0x616
   284c8:	ldr	r1, [pc, #3988]	; 29464 <__flatcc_fb_build_schema@@Base+0xfcc>
   284cc:	ldr	r0, [pc, #3988]	; 29468 <__flatcc_fb_build_schema@@Base+0xfd0>
   284d0:	bl	1417c <__assert_fail@plt>
   284d4:	ldr	r6, [pc, #3984]	; 2946c <__flatcc_fb_build_schema@@Base+0xfd4>
   284d8:	ldr	r7, [pc, #3984]	; 29470 <__flatcc_fb_build_schema@@Base+0xfd8>
   284dc:	ldr	r5, [r4, #392]	; 0x188
   284e0:	cmp	r5, #0
   284e4:	bne	28540 <__flatcc_fb_build_schema@@Base+0xa8>
   284e8:	ldr	r5, [pc, #3972]	; 29474 <__flatcc_fb_build_schema@@Base+0xfdc>
   284ec:	ldr	r7, [r4, #356]	; 0x164
   284f0:	cmp	r7, #0
   284f4:	bne	2861c <__flatcc_fb_build_schema@@Base+0x184>
   284f8:	ldr	r5, [pc, #3960]	; 29478 <__flatcc_fb_build_schema@@Base+0xfe0>
   284fc:	mov	r6, #2
   28500:	ldr	r3, [r4, #44]	; 0x2c
   28504:	ldr	r8, [r4, #52]	; 0x34
   28508:	add	r2, r8, #32
   2850c:	cmp	r2, r3
   28510:	bls	28680 <__flatcc_fb_build_schema@@Base+0x1e8>
   28514:	mov	r1, #1
   28518:	mov	r0, #65536	; 0x10000
   2851c:	bl	13fc0 <calloc@plt>
   28520:	cmp	r0, #0
   28524:	bne	28664 <__flatcc_fb_build_schema@@Base+0x1cc>
   28528:	ldr	r3, [pc, #3916]	; 2947c <__flatcc_fb_build_schema@@Base+0xfe4>
   2852c:	ldr	r0, [pc, #3916]	; 29480 <__flatcc_fb_build_schema@@Base+0xfe8>
   28530:	ldr	r1, [r3]
   28534:	bl	14158 <fputs@plt>
   28538:	mov	r0, #1
   2853c:	bl	14098 <exit@plt>
   28540:	ldrh	r3, [r5, #8]
   28544:	cmp	r3, #4
   28548:	bhi	285c8 <__flatcc_fb_build_schema@@Base+0x130>
   2854c:	ldr	r0, [r5, #12]
   28550:	cmp	r0, #0
   28554:	beq	28604 <__flatcc_fb_build_schema@@Base+0x16c>
   28558:	ldr	r3, [pc, #3856]	; 29470 <__flatcc_fb_build_schema@@Base+0xfd8>
   2855c:	ldr	r2, [r0]
   28560:	cmp	r2, #0
   28564:	bne	285d0 <__flatcc_fb_build_schema@@Base+0x138>
   28568:	ldr	r1, [r5, #4]
   2856c:	ldr	r2, [r1]
   28570:	ldr	r1, [r1, #4]
   28574:	add	r1, r2, r1
   28578:	cmp	r2, r1
   2857c:	bne	2860c <__flatcc_fb_build_schema@@Base+0x174>
   28580:	cmp	r3, #0
   28584:	moveq	r3, r7
   28588:	cmp	r0, #0
   2858c:	str	r3, [r5, #88]	; 0x58
   28590:	ldr	r3, [sp, #44]	; 0x2c
   28594:	str	r3, [r5, #16]
   28598:	beq	285c8 <__flatcc_fb_build_schema@@Base+0x130>
   2859c:	mov	r2, #1
   285a0:	mov	r1, r5
   285a4:	add	r0, r0, #4
   285a8:	bl	22f10 <fb_symbol_table_insert_item@@Base>
   285ac:	cmp	r0, #0
   285b0:	beq	285c8 <__flatcc_fb_build_schema@@Base+0x130>
   285b4:	ldr	r2, [pc, #3784]	; 29484 <__flatcc_fb_build_schema@@Base+0xfec>
   285b8:	ldr	r3, [r0, #4]
   285bc:	mov	r0, r4
   285c0:	ldr	r1, [r5, #4]
   285c4:	bl	275f8 <__flatcc_fb_clear_parser@@Base+0x104>
   285c8:	ldr	r5, [r5]
   285cc:	b	284e0 <__flatcc_fb_build_schema@@Base+0x48>
   285d0:	ldr	ip, [r2, #4]
   285d4:	ldm	ip, {r1, ip}
   285d8:	add	ip, r1, ip
   285dc:	cmp	r1, ip
   285e0:	bne	285f4 <__flatcc_fb_build_schema@@Base+0x15c>
   285e4:	eor	r3, r3, #46	; 0x2e
   285e8:	ldr	r2, [r2]
   285ec:	mul	r3, r6, r3
   285f0:	b	28560 <__flatcc_fb_build_schema@@Base+0xc8>
   285f4:	ldrb	lr, [r1], #1
   285f8:	eor	r3, r3, lr
   285fc:	mul	r3, r6, r3
   28600:	b	285dc <__flatcc_fb_build_schema@@Base+0x144>
   28604:	ldr	r3, [pc, #3684]	; 29470 <__flatcc_fb_build_schema@@Base+0xfd8>
   28608:	b	28568 <__flatcc_fb_build_schema@@Base+0xd0>
   2860c:	ldrb	ip, [r2], #1
   28610:	eor	r3, r3, ip
   28614:	mul	r3, r6, r3
   28618:	b	28578 <__flatcc_fb_build_schema@@Base+0xe0>
   2861c:	ldr	r0, [r4, #412]	; 0x19c
   28620:	mov	r2, #1
   28624:	mov	r1, r7
   28628:	add	r0, r0, #16
   2862c:	bl	2e3fc <fb_name_table_insert_item@@Base>
   28630:	cmp	r0, #0
   28634:	beq	2865c <__flatcc_fb_build_schema@@Base+0x1c4>
   28638:	ldr	r3, [r7, #12]
   2863c:	mov	r2, r5
   28640:	mov	r0, r4
   28644:	str	r3, [sp, #4]
   28648:	ldr	r3, [r7, #8]
   2864c:	str	r3, [sp]
   28650:	mov	r3, #0
   28654:	mov	r1, r3
   28658:	bl	244c8 <__flatcc_error_report@@Base>
   2865c:	ldr	r7, [r7]
   28660:	b	284f0 <__flatcc_fb_build_schema@@Base+0x58>
   28664:	ldr	r3, [r4, #48]	; 0x30
   28668:	add	r8, r0, #16
   2866c:	str	r0, [r4, #48]	; 0x30
   28670:	str	r8, [r4, #52]	; 0x34
   28674:	str	r3, [r0]
   28678:	add	r0, r0, #65536	; 0x10000
   2867c:	str	r0, [r4, #44]	; 0x2c
   28680:	ldr	r3, [r4, #52]	; 0x34
   28684:	ldr	r0, [r5], #4
   28688:	add	r3, r3, #32
   2868c:	str	r3, [r4, #52]	; 0x34
   28690:	str	r0, [r8, #8]
   28694:	str	r7, [r8, #24]
   28698:	bl	140a4 <strlen@plt>
   2869c:	str	r0, [r8, #12]
   286a0:	mov	r3, #0
   286a4:	mov	r2, #1
   286a8:	ldr	r0, [r4, #412]	; 0x19c
   286ac:	mov	r1, r8
   286b0:	str	r3, [r8]
   286b4:	strh	r6, [r8, #16]
   286b8:	add	r0, r0, #16
   286bc:	bl	2e3fc <fb_name_table_insert_item@@Base>
   286c0:	cmp	r0, #0
   286c4:	strne	r7, [r0, #24]
   286c8:	add	r7, r7, #1
   286cc:	cmp	r7, #12
   286d0:	bne	28500 <__flatcc_fb_build_schema@@Base+0x68>
   286d4:	ldr	r3, [r4, #184]	; 0xb8
   286d8:	cmp	r3, #0
   286dc:	moveq	r6, #1
   286e0:	ldreq	r5, [r4, #392]	; 0x188
   286e4:	beq	28798 <__flatcc_fb_build_schema@@Base+0x300>
   286e8:	ldr	r8, [pc, #3480]	; 29488 <__flatcc_fb_build_schema@@Base+0xff0>
   286ec:	ldr	r9, [pc, #3480]	; 2948c <__flatcc_fb_build_schema@@Base+0xff4>
   286f0:	ldr	sl, [pc, #3480]	; 29490 <__flatcc_fb_build_schema@@Base+0xff8>
   286f4:	ldr	r6, [r4, #392]	; 0x188
   286f8:	cmp	r6, #0
   286fc:	bne	287a4 <__flatcc_fb_build_schema@@Base+0x30c>
   28700:	ldr	r5, [r4, #392]	; 0x188
   28704:	cmp	r5, #0
   28708:	bne	28a98 <__flatcc_fb_build_schema@@Base+0x600>
   2870c:	ldr	r7, [r4, #392]	; 0x188
   28710:	cmp	r7, #0
   28714:	bne	28acc <__flatcc_fb_build_schema@@Base+0x634>
   28718:	ldr	r3, [r4, #396]	; 0x18c
   2871c:	cmp	r3, #0
   28720:	bne	29988 <__flatcc_fb_build_schema@@Base+0x14f0>
   28724:	ldr	r5, [r4, #392]	; 0x188
   28728:	str	r7, [r4, #396]	; 0x18c
   2872c:	mov	r7, #1
   28730:	cmp	r5, #0
   28734:	bne	2999c <__flatcc_fb_build_schema@@Base+0x1504>
   28738:	ldr	r2, [r4, #400]	; 0x190
   2873c:	cmp	r2, #0
   28740:	bne	29b68 <__flatcc_fb_build_schema@@Base+0x16d0>
   28744:	ldr	r3, [r4, #208]	; 0xd0
   28748:	cmp	r3, #0
   2874c:	beq	28760 <__flatcc_fb_build_schema@@Base+0x2c8>
   28750:	ldr	r2, [pc, #3388]	; 29494 <__flatcc_fb_build_schema@@Base+0xffc>
   28754:	mov	r1, r5
   28758:	mov	r0, r4
   2875c:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   28760:	ldr	r0, [r4, #108]	; 0x6c
   28764:	clz	r3, r0
   28768:	lsr	r3, r3, #5
   2876c:	str	r3, [r4, #120]	; 0x78
   28770:	b	28a90 <__flatcc_fb_build_schema@@Base+0x5f8>
   28774:	ldrh	r3, [r5, #8]
   28778:	cmp	r3, #3
   2877c:	bne	28794 <__flatcc_fb_build_schema@@Base+0x2fc>
   28780:	mov	r1, r5
   28784:	mov	r0, r4
   28788:	bl	27aa0 <__flatcc_fb_clear_parser@@Base+0x5ac>
   2878c:	cmp	r0, #0
   28790:	strhne	r6, [r5, #48]	; 0x30
   28794:	ldr	r5, [r5]
   28798:	cmp	r5, #0
   2879c:	bne	28774 <__flatcc_fb_build_schema@@Base+0x2dc>
   287a0:	b	286e8 <__flatcc_fb_build_schema@@Base+0x250>
   287a4:	ldrh	r3, [r6, #8]
   287a8:	cmp	r3, #4
   287ac:	ldrls	pc, [pc, r3, lsl #2]
   287b0:	b	28a7c <__flatcc_fb_build_schema@@Base+0x5e4>
   287b4:	andeq	r8, r2, r4, ror sl
   287b8:	andeq	r8, r2, r8, asr #15
   287bc:	andeq	r8, r2, r4, ror sl
   287c0:	andeq	r8, r2, r4, asr sl
   287c4:	andeq	r8, r2, r0, ror #20
   287c8:	ldrh	r3, [r6, #48]	; 0x30
   287cc:	cmp	r3, #0
   287d0:	ldrne	r2, [pc, #3264]	; 29498 <__flatcc_fb_build_schema@@Base+0x1000>
   287d4:	bne	28894 <__flatcc_fb_build_schema@@Base+0x3fc>
   287d8:	add	r3, sp, #108	; 0x6c
   287dc:	mov	r2, #16
   287e0:	mov	r0, r4
   287e4:	ldr	r1, [r6, #28]
   287e8:	bl	2761c <__flatcc_fb_clear_parser@@Base+0x128>
   287ec:	ldr	r3, [sp, #124]	; 0x7c
   287f0:	strh	r0, [r6, #92]	; 0x5c
   287f4:	cmp	r3, #0
   287f8:	beq	28858 <__flatcc_fb_build_schema@@Base+0x3c0>
   287fc:	ldrd	r0, [r3, #8]
   28800:	subs	r3, r0, #1
   28804:	str	r3, [sp, #8]
   28808:	sbc	r3, r1, #0
   2880c:	str	r3, [sp, #12]
   28810:	ldrd	r2, [sp, #8]
   28814:	cmp	r3, #0
   28818:	cmpeq	r2, #255	; 0xff
   2881c:	bhi	28848 <__flatcc_fb_build_schema@@Base+0x3b0>
   28820:	mov	r2, #1
   28824:	mov	r3, #0
   28828:	cmp	r1, r3
   2882c:	cmpeq	r0, r2
   28830:	beq	29bd8 <__flatcc_fb_build_schema@@Base+0x1740>
   28834:	adds	r2, r2, r2
   28838:	adc	r3, r3, r3
   2883c:	cmp	r1, r3
   28840:	cmpeq	r0, r2
   28844:	bcs	28828 <__flatcc_fb_build_schema@@Base+0x390>
   28848:	ldr	r2, [pc, #3148]	; 2949c <__flatcc_fb_build_schema@@Base+0x1004>
   2884c:	mov	r0, r4
   28850:	ldr	r1, [r6, #4]
   28854:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   28858:	ldr	r5, [r6, #20]
   2885c:	mov	r7, #0
   28860:	cmp	r5, #0
   28864:	bne	2889c <__flatcc_fb_build_schema@@Base+0x404>
   28868:	cmp	r7, #0
   2886c:	beq	28a74 <__flatcc_fb_build_schema@@Base+0x5dc>
   28870:	ldrh	r3, [r6, #10]
   28874:	cmp	r7, #1
   28878:	orr	r3, r3, #8
   2887c:	strh	r3, [r6, #10]
   28880:	beq	28a74 <__flatcc_fb_build_schema@@Base+0x5dc>
   28884:	ldr	r3, [r4, #156]	; 0x9c
   28888:	cmp	r3, #0
   2888c:	bne	28a74 <__flatcc_fb_build_schema@@Base+0x5dc>
   28890:	ldr	r2, [pc, #3080]	; 294a0 <__flatcc_fb_build_schema@@Base+0x1008>
   28894:	ldr	r1, [r6, #4]
   28898:	b	288e4 <__flatcc_fb_build_schema@@Base+0x44c>
   2889c:	mov	r2, #1
   288a0:	mov	r1, r5
   288a4:	add	r0, r6, #56	; 0x38
   288a8:	bl	22f10 <fb_symbol_table_insert_item@@Base>
   288ac:	cmp	r0, #0
   288b0:	beq	288d0 <__flatcc_fb_build_schema@@Base+0x438>
   288b4:	mov	r2, sl
   288b8:	ldr	r3, [r0, #4]
   288bc:	mov	r0, r4
   288c0:	ldr	r1, [r5, #4]
   288c4:	bl	275f8 <__flatcc_fb_clear_parser@@Base+0x104>
   288c8:	ldr	r5, [r5]
   288cc:	b	28860 <__flatcc_fb_build_schema@@Base+0x3c8>
   288d0:	ldrh	r3, [r5, #8]
   288d4:	cmp	r3, #5
   288d8:	beq	288f0 <__flatcc_fb_build_schema@@Base+0x458>
   288dc:	ldr	r2, [pc, #3008]	; 294a4 <__flatcc_fb_build_schema@@Base+0x100c>
   288e0:	ldr	r1, [r5, #4]
   288e4:	mov	r0, r4
   288e8:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   288ec:	b	289e4 <__flatcc_fb_build_schema@@Base+0x54c>
   288f0:	ldr	r3, [r4, #172]	; 0xac
   288f4:	mov	r0, r4
   288f8:	ldr	r1, [r5, #64]	; 0x40
   288fc:	cmp	r3, #0
   28900:	ldr	r3, [r4, #168]	; 0xa8
   28904:	movne	r2, #128	; 0x80
   28908:	moveq	r2, #0
   2890c:	cmp	r3, #0
   28910:	add	r3, sp, #108	; 0x6c
   28914:	orrne	r2, r2, #4
   28918:	bl	2761c <__flatcc_fb_clear_parser@@Base+0x128>
   2891c:	ldrh	r3, [r5, #24]
   28920:	strh	r0, [r5, #72]	; 0x48
   28924:	cmp	r3, #8
   28928:	beq	28a20 <__flatcc_fb_build_schema@@Base+0x588>
   2892c:	cmp	r3, #12
   28930:	bne	28a4c <__flatcc_fb_build_schema@@Base+0x5b4>
   28934:	mov	r3, #0
   28938:	mov	r0, r4
   2893c:	ldr	r1, [r6, #12]
   28940:	ldr	r2, [r5, #16]
   28944:	bl	2788c <__flatcc_fb_clear_parser@@Base+0x398>
   28948:	cmp	r0, #0
   2894c:	bne	28970 <__flatcc_fb_build_schema@@Base+0x4d8>
   28950:	mov	r3, r5
   28954:	mov	r2, r9
   28958:	ldr	r1, [r5, #16]
   2895c:	mov	r0, r4
   28960:	bl	252cc <error_ref_sym@@Base>
   28964:	mov	r3, #1
   28968:	strh	r3, [r5, #24]
   2896c:	b	288c8 <__flatcc_fb_build_schema@@Base+0x430>
   28970:	ldrh	fp, [r0, #8]
   28974:	mov	r3, #14
   28978:	str	r0, [r5, #16]
   2897c:	strh	r3, [r5, #24]
   28980:	cmp	fp, #1
   28984:	beq	289fc <__flatcc_fb_build_schema@@Base+0x564>
   28988:	ldr	r3, [r4, #152]	; 0x98
   2898c:	cmp	r3, #0
   28990:	beq	289f0 <__flatcc_fb_build_schema@@Base+0x558>
   28994:	cmp	fp, #3
   28998:	beq	289b4 <__flatcc_fb_build_schema@@Base+0x51c>
   2899c:	ldr	r2, [pc, #2820]	; 294a8 <__flatcc_fb_build_schema@@Base+0x1010>
   289a0:	ldr	r3, [r0, #4]
   289a4:	mov	r0, r4
   289a8:	ldr	r1, [r5, #4]
   289ac:	bl	275f8 <__flatcc_fb_clear_parser@@Base+0x104>
   289b0:	b	289dc <__flatcc_fb_build_schema@@Base+0x544>
   289b4:	ldrh	r3, [r5, #72]	; 0x48
   289b8:	tst	r3, #128	; 0x80
   289bc:	beq	28a2c <__flatcc_fb_build_schema@@Base+0x594>
   289c0:	ldr	r3, [r4, #148]	; 0x94
   289c4:	cmp	r3, #0
   289c8:	bne	28a28 <__flatcc_fb_build_schema@@Base+0x590>
   289cc:	ldr	r2, [pc, #2776]	; 294ac <__flatcc_fb_build_schema@@Base+0x1014>
   289d0:	mov	r0, r4
   289d4:	ldr	r1, [r5, #4]
   289d8:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   289dc:	mov	r3, #1
   289e0:	strh	r3, [r5, #24]
   289e4:	mov	r3, #1
   289e8:	strh	r3, [r6, #48]	; 0x30
   289ec:	b	28a74 <__flatcc_fb_build_schema@@Base+0x5dc>
   289f0:	ldr	r2, [pc, #2744]	; 294b0 <__flatcc_fb_build_schema@@Base+0x1018>
   289f4:	ldr	r3, [r0, #4]
   289f8:	b	289a4 <__flatcc_fb_build_schema@@Base+0x50c>
   289fc:	ldrh	r3, [r5, #72]	; 0x48
   28a00:	tst	r3, #128	; 0x80
   28a04:	beq	28a2c <__flatcc_fb_build_schema@@Base+0x594>
   28a08:	ldr	r2, [pc, #2716]	; 294ac <__flatcc_fb_build_schema@@Base+0x1014>
   28a0c:	mov	r0, r4
   28a10:	ldr	r1, [r5, #4]
   28a14:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   28a18:	strh	fp, [r5, #24]
   28a1c:	b	289e4 <__flatcc_fb_build_schema@@Base+0x54c>
   28a20:	tst	r0, #128	; 0x80
   28a24:	beq	28a2c <__flatcc_fb_build_schema@@Base+0x594>
   28a28:	add	r7, r7, #1
   28a2c:	ldrh	r3, [r5, #56]	; 0x38
   28a30:	cmp	r3, #0
   28a34:	beq	288c8 <__flatcc_fb_build_schema@@Base+0x430>
   28a38:	mov	r2, r8
   28a3c:	mov	r0, r4
   28a40:	ldr	r1, [r5, #4]
   28a44:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   28a48:	b	288c8 <__flatcc_fb_build_schema@@Base+0x430>
   28a4c:	ldr	r2, [pc, #2656]	; 294b4 <__flatcc_fb_build_schema@@Base+0x101c>
   28a50:	b	288e0 <__flatcc_fb_build_schema@@Base+0x448>
   28a54:	ldr	r3, [r4, #184]	; 0xb8
   28a58:	cmp	r3, #0
   28a5c:	beq	28a74 <__flatcc_fb_build_schema@@Base+0x5dc>
   28a60:	mov	r1, r6
   28a64:	mov	r0, r4
   28a68:	bl	27aa0 <__flatcc_fb_clear_parser@@Base+0x5ac>
   28a6c:	cmp	r0, #0
   28a70:	bne	289e4 <__flatcc_fb_build_schema@@Base+0x54c>
   28a74:	ldr	r6, [r6]
   28a78:	b	286f8 <__flatcc_fb_build_schema@@Base+0x260>
   28a7c:	mov	r0, r4
   28a80:	ldr	r2, [pc, #2608]	; 294b8 <__flatcc_fb_build_schema@@Base+0x1020>
   28a84:	ldr	r1, [r6, #4]
   28a88:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   28a8c:	mvn	r0, #0
   28a90:	add	sp, sp, #212	; 0xd4
   28a94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28a98:	ldrh	r6, [r5, #8]
   28a9c:	cmp	r6, #1
   28aa0:	bne	28ac4 <__flatcc_fb_build_schema@@Base+0x62c>
   28aa4:	ldrh	r3, [r5, #48]	; 0x30
   28aa8:	cmp	r3, #1
   28aac:	beq	28ac4 <__flatcc_fb_build_schema@@Base+0x62c>
   28ab0:	mov	r1, r5
   28ab4:	mov	r0, r4
   28ab8:	bl	28098 <__flatcc_fb_clear_parser@@Base+0xba4>
   28abc:	cmp	r0, #0
   28ac0:	strhne	r6, [r5, #48]	; 0x30
   28ac4:	ldr	r5, [r5]
   28ac8:	b	28704 <__flatcc_fb_build_schema@@Base+0x26c>
   28acc:	ldrh	r3, [r7, #8]
   28ad0:	cmp	r3, #0
   28ad4:	beq	28ae8 <__flatcc_fb_build_schema@@Base+0x650>
   28ad8:	cmp	r3, #2
   28adc:	beq	297e4 <__flatcc_fb_build_schema@@Base+0x134c>
   28ae0:	ldr	r7, [r7]
   28ae4:	b	28710 <__flatcc_fb_build_schema@@Base+0x278>
   28ae8:	ldrh	r6, [r7, #48]	; 0x30
   28aec:	cmp	r6, #1
   28af0:	beq	28ae0 <__flatcc_fb_build_schema@@Base+0x648>
   28af4:	cmp	r6, #0
   28af8:	beq	28b10 <__flatcc_fb_build_schema@@Base+0x678>
   28afc:	ldr	r3, [pc, #2488]	; 294bc <__flatcc_fb_build_schema@@Base+0x1024>
   28b00:	movw	r2, #770	; 0x302
   28b04:	ldr	r1, [pc, #2392]	; 29464 <__flatcc_fb_build_schema@@Base+0xfcc>
   28b08:	ldr	r0, [pc, #2480]	; 294c0 <__flatcc_fb_build_schema@@Base+0x1028>
   28b0c:	b	284d0 <__flatcc_fb_build_schema@@Base+0x38>
   28b10:	add	r3, sp, #60	; 0x3c
   28b14:	mov	r2, #8
   28b18:	ldr	r1, [r7, #28]
   28b1c:	mov	r0, r4
   28b20:	bl	2761c <__flatcc_fb_clear_parser@@Base+0x128>
   28b24:	ldr	r5, [r7, #20]
   28b28:	mov	r2, #0
   28b2c:	mov	r3, #0
   28b30:	str	r6, [sp, #16]
   28b34:	str	r6, [sp, #20]
   28b38:	strd	r2, [sp, #32]
   28b3c:	mov	r2, #0
   28b40:	mov	r3, #0
   28b44:	strh	r0, [r7, #92]	; 0x5c
   28b48:	strd	r2, [sp, #8]
   28b4c:	str	r6, [sp, #40]	; 0x28
   28b50:	cmp	r5, #0
   28b54:	bne	28bf8 <__flatcc_fb_build_schema@@Base+0x760>
   28b58:	cmp	r6, #0
   28b5c:	bne	29bf0 <__flatcc_fb_build_schema@@Base+0x1758>
   28b60:	ldrd	r2, [sp, #8]
   28b64:	strd	r2, [r7, #96]	; 0x60
   28b68:	ldr	r3, [sp, #16]
   28b6c:	cmp	r3, #0
   28b70:	beq	29c00 <__flatcc_fb_build_schema@@Base+0x1768>
   28b74:	ldr	r3, [sp, #8]
   28b78:	ldrd	r0, [sp, #8]
   28b7c:	ldr	r2, [sp, #12]
   28b80:	ldrd	r8, [sp, #32]
   28b84:	orrs	r3, r3, r2
   28b88:	movne	r3, #1
   28b8c:	moveq	r3, #0
   28b90:	cmp	r1, r9
   28b94:	cmpeq	r0, r8
   28b98:	movhi	r3, #0
   28b9c:	andls	r3, r3, #1
   28ba0:	cmp	r3, #0
   28ba4:	bne	297d0 <__flatcc_fb_build_schema@@Base+0x1338>
   28ba8:	ldr	r3, [sp, #40]	; 0x28
   28bac:	cmp	r3, #0
   28bb0:	beq	28ae0 <__flatcc_fb_build_schema@@Base+0x648>
   28bb4:	str	r6, [sp, #16]
   28bb8:	ldrh	r3, [r7, #10]
   28bbc:	orr	r3, r3, #8
   28bc0:	strh	r3, [r7, #10]
   28bc4:	ldr	r3, [sp, #40]	; 0x28
   28bc8:	cmp	r3, #1
   28bcc:	beq	29be0 <__flatcc_fb_build_schema@@Base+0x1748>
   28bd0:	ldr	r3, [r4, #156]	; 0x9c
   28bd4:	cmp	r3, #0
   28bd8:	bne	29be0 <__flatcc_fb_build_schema@@Base+0x1748>
   28bdc:	ldr	r2, [pc, #2236]	; 294a0 <__flatcc_fb_build_schema@@Base+0x1008>
   28be0:	ldr	r1, [r7, #4]
   28be4:	mov	r0, r4
   28be8:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   28bec:	mov	r3, #1
   28bf0:	strh	r3, [r7, #48]	; 0x30
   28bf4:	b	28ae0 <__flatcc_fb_build_schema@@Base+0x648>
   28bf8:	mov	r2, #1
   28bfc:	mov	r1, r5
   28c00:	add	r0, r7, #56	; 0x38
   28c04:	bl	22f10 <fb_symbol_table_insert_item@@Base>
   28c08:	subs	r8, r0, #0
   28c0c:	beq	28c2c <__flatcc_fb_build_schema@@Base+0x794>
   28c10:	ldr	r2, [pc, #2220]	; 294c4 <__flatcc_fb_build_schema@@Base+0x102c>
   28c14:	mov	r0, r4
   28c18:	ldr	r1, [r5, #4]
   28c1c:	ldr	r3, [r8, #4]
   28c20:	bl	275f8 <__flatcc_fb_clear_parser@@Base+0x104>
   28c24:	ldr	r5, [r5]
   28c28:	b	28b50 <__flatcc_fb_build_schema@@Base+0x6b8>
   28c2c:	ldrh	r3, [r5, #8]
   28c30:	cmp	r3, #5
   28c34:	beq	28c44 <__flatcc_fb_build_schema@@Base+0x7ac>
   28c38:	ldr	r2, [pc, #2184]	; 294c8 <__flatcc_fb_build_schema@@Base+0x1030>
   28c3c:	ldr	r1, [r5, #4]
   28c40:	b	28be4 <__flatcc_fb_build_schema@@Base+0x74c>
   28c44:	ldrh	r3, [r5, #24]
   28c48:	cmp	r3, #1
   28c4c:	beq	28c24 <__flatcc_fb_build_schema@@Base+0x78c>
   28c50:	sub	r3, r3, #7
   28c54:	cmp	r3, #1
   28c58:	bhi	28c84 <__flatcc_fb_build_schema@@Base+0x7ec>
   28c5c:	ldr	r3, [r5, #16]
   28c60:	ldr	r3, [r3, #16]
   28c64:	add	r3, r3, #996	; 0x3e4
   28c68:	add	r3, r3, #3
   28c6c:	cmp	r3, #27
   28c70:	ldrls	r2, [pc, #2132]	; 294cc <__flatcc_fb_build_schema@@Base+0x1034>
   28c74:	movhi	r3, r8
   28c78:	addls	r3, r2, r3
   28c7c:	ldrbls	r3, [r3, #87]	; 0x57
   28c80:	str	r3, [r5, #16]
   28c84:	add	r3, sp, #60	; 0x3c
   28c88:	movw	r2, #4038	; 0xfc6
   28c8c:	ldr	r1, [r5, #64]	; 0x40
   28c90:	mov	r0, r4
   28c94:	bl	2761c <__flatcc_fb_clear_parser@@Base+0x128>
   28c98:	ldr	r9, [sp, #84]	; 0x54
   28c9c:	strh	r0, [r5, #72]	; 0x48
   28ca0:	cmp	r9, #0
   28ca4:	beq	28cd4 <__flatcc_fb_build_schema@@Base+0x83c>
   28ca8:	ldrh	r2, [r5, #24]
   28cac:	ldr	r3, [r7, #12]
   28cb0:	cmp	r2, #7
   28cb4:	bne	28cc4 <__flatcc_fb_build_schema@@Base+0x82c>
   28cb8:	ldr	r2, [r5, #16]
   28cbc:	cmp	r2, #4
   28cc0:	beq	28e44 <__flatcc_fb_build_schema@@Base+0x9ac>
   28cc4:	ldr	r2, [pc, #2052]	; 294d0 <__flatcc_fb_build_schema@@Base+0x1038>
   28cc8:	mov	r0, r4
   28ccc:	ldr	r1, [r9, #4]
   28cd0:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   28cd4:	ldrh	r3, [r5, #72]	; 0x48
   28cd8:	tst	r3, #256	; 0x100
   28cdc:	beq	28cfc <__flatcc_fb_build_schema@@Base+0x864>
   28ce0:	ldrh	r3, [r5, #24]
   28ce4:	cmp	r3, #8
   28ce8:	bne	28cfc <__flatcc_fb_build_schema@@Base+0x864>
   28cec:	ldr	r2, [pc, #2016]	; 294d4 <__flatcc_fb_build_schema@@Base+0x103c>
   28cf0:	mov	r0, r4
   28cf4:	ldr	r1, [r5, #4]
   28cf8:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   28cfc:	ldrh	r3, [r5, #72]	; 0x48
   28d00:	tst	r3, #1024	; 0x400
   28d04:	beq	28d30 <__flatcc_fb_build_schema@@Base+0x898>
   28d08:	ldrh	r3, [r5, #24]
   28d0c:	cmp	r3, #7
   28d10:	bne	28d20 <__flatcc_fb_build_schema@@Base+0x888>
   28d14:	ldr	r3, [r5, #16]
   28d18:	cmp	r3, #4
   28d1c:	beq	28d30 <__flatcc_fb_build_schema@@Base+0x898>
   28d20:	ldr	r2, [pc, #1968]	; 294d8 <__flatcc_fb_build_schema@@Base+0x1040>
   28d24:	mov	r0, r4
   28d28:	ldr	r1, [r5, #4]
   28d2c:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   28d30:	ldrh	r3, [r5, #72]	; 0x48
   28d34:	tst	r3, #2048	; 0x800
   28d38:	beq	28d64 <__flatcc_fb_build_schema@@Base+0x8cc>
   28d3c:	ldrh	r3, [r5, #24]
   28d40:	cmp	r3, #7
   28d44:	bne	28d54 <__flatcc_fb_build_schema@@Base+0x8bc>
   28d48:	ldr	r3, [r5, #16]
   28d4c:	cmp	r3, #4
   28d50:	beq	28d64 <__flatcc_fb_build_schema@@Base+0x8cc>
   28d54:	ldr	r2, [pc, #1920]	; 294dc <__flatcc_fb_build_schema@@Base+0x1044>
   28d58:	mov	r0, r4
   28d5c:	ldr	r1, [r5, #4]
   28d60:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   28d64:	ldrh	r3, [r5, #72]	; 0x48
   28d68:	and	r3, r3, #3072	; 0xc00
   28d6c:	cmp	r3, #3072	; 0xc00
   28d70:	bne	28d84 <__flatcc_fb_build_schema@@Base+0x8ec>
   28d74:	ldr	r2, [pc, #1892]	; 294e0 <__flatcc_fb_build_schema@@Base+0x1048>
   28d78:	mov	r0, r4
   28d7c:	ldr	r1, [r5, #4]
   28d80:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   28d84:	ldr	r2, [sp, #12]
   28d88:	ldr	sl, [sp, #64]	; 0x40
   28d8c:	adds	r3, sl, #0
   28d90:	movne	r3, #1
   28d94:	str	r3, [sp, #48]	; 0x30
   28d98:	ldr	r3, [sp, #8]
   28d9c:	orrs	r3, r3, r2
   28da0:	ldr	r3, [sp, #48]	; 0x30
   28da4:	movne	r3, #0
   28da8:	cmp	r3, #0
   28dac:	beq	28dd0 <__flatcc_fb_build_schema@@Base+0x938>
   28db0:	ldr	r3, [r4, #112]	; 0x70
   28db4:	mov	r1, #0
   28db8:	ldr	r2, [r4, #216]	; 0xd8
   28dbc:	mov	r0, r3
   28dc0:	str	r3, [sp, #20]
   28dc4:	bl	140d4 <memset@plt>
   28dc8:	mov	r3, #1
   28dcc:	str	r3, [sp, #16]
   28dd0:	cmp	r6, #0
   28dd4:	bne	28e18 <__flatcc_fb_build_schema@@Base+0x980>
   28dd8:	ldrd	r0, [sp, #8]
   28ddc:	ldrd	r2, [r4, #216]	; 0xd8
   28de0:	cmp	r1, r3
   28de4:	cmpeq	r0, r2
   28de8:	bcc	28fbc <__flatcc_fb_build_schema@@Base+0xb24>
   28dec:	ldr	r2, [pc, #1776]	; 294e4 <__flatcc_fb_build_schema@@Base+0x104c>
   28df0:	mov	r0, r4
   28df4:	mov	r6, #1
   28df8:	ldr	r1, [r5, #4]
   28dfc:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   28e00:	ldr	r3, [sp, #8]
   28e04:	adds	r3, r3, #1
   28e08:	str	r3, [sp, #8]
   28e0c:	ldr	r3, [sp, #12]
   28e10:	adc	r3, r3, #0
   28e14:	str	r3, [sp, #12]
   28e18:	ldrh	r3, [r5, #24]
   28e1c:	sub	r3, r3, #7
   28e20:	cmp	r3, #5
   28e24:	ldrls	pc, [pc, r3, lsl #2]
   28e28:	b	2968c <__flatcc_fb_build_schema@@Base+0x11f4>
   28e2c:	andeq	r9, r2, r8, asr r1
   28e30:	andeq	r8, r2, r0, ror #31
   28e34:			; <UNDEFINED> instruction: 0x000291b0
   28e38:	muleq	r2, r8, r1
   28e3c:	andeq	r9, r2, r8, ror #7
   28e40:	andeq	r9, r2, r4, asr #3
   28e44:	ldrh	r2, [r9, #16]
   28e48:	cmp	r2, #2
   28e4c:	ldreq	sl, [r9, #12]
   28e50:	ldreq	r1, [r9, #8]
   28e54:	moveq	r2, sl
   28e58:	bne	28cd4 <__flatcc_fb_build_schema@@Base+0x83c>
   28e5c:	cmp	r2, #0
   28e60:	movle	fp, r1
   28e64:	ble	28e84 <__flatcc_fb_build_schema@@Base+0x9ec>
   28e68:	sub	r0, r2, #1
   28e6c:	ldrb	ip, [r1, r0]
   28e70:	cmp	ip, #46	; 0x2e
   28e74:	bne	28efc <__flatcc_fb_build_schema@@Base+0xa64>
   28e78:	add	fp, r1, r2
   28e7c:	sub	sl, sl, #1
   28e80:	mov	r2, r0
   28e84:	clz	r0, r2
   28e88:	cmp	r3, #0
   28e8c:	lsr	r0, r0, #5
   28e90:	moveq	r0, #0
   28e94:	sub	sl, sl, r2
   28e98:	cmp	r0, #0
   28e9c:	beq	28f6c <__flatcc_fb_build_schema@@Base+0xad4>
   28ea0:	mov	r2, sl
   28ea4:	add	r0, r3, #4
   28ea8:	str	r3, [sp, #48]	; 0x30
   28eac:	mov	r1, fp
   28eb0:	bl	22f30 <fb_symbol_table_find@@Base>
   28eb4:	subs	r2, r0, #0
   28eb8:	ldr	r3, [sp, #48]	; 0x30
   28ebc:	bne	28f04 <__flatcc_fb_build_schema@@Base+0xa6c>
   28ec0:	mov	r1, r3
   28ec4:	mov	r0, r4
   28ec8:	bl	277f8 <__flatcc_fb_clear_parser@@Base+0x304>
   28ecc:	subs	r3, r0, #0
   28ed0:	bne	28ea0 <__flatcc_fb_build_schema@@Base+0xa08>
   28ed4:	ldr	r3, [r9, #12]
   28ed8:	mov	r0, r4
   28edc:	ldr	r2, [pc, #1540]	; 294e8 <__flatcc_fb_build_schema@@Base+0x1050>
   28ee0:	str	r3, [sp, #4]
   28ee4:	ldr	r3, [r9, #8]
   28ee8:	str	r3, [sp]
   28eec:	mov	r3, #0
   28ef0:	ldr	r1, [r9, #4]
   28ef4:	bl	244c8 <__flatcc_error_report@@Base>
   28ef8:	b	28cd4 <__flatcc_fb_build_schema@@Base+0x83c>
   28efc:	mov	r2, r0
   28f00:	b	28e5c <__flatcc_fb_build_schema@@Base+0x9c4>
   28f04:	ldrh	r1, [r2, #8]
   28f08:	cmp	r1, #4
   28f0c:	bhi	28ec0 <__flatcc_fb_build_schema@@Base+0xa28>
   28f10:	mov	r1, r2
   28f14:	ldr	r0, [sp, #44]	; 0x2c
   28f18:	strd	r2, [sp, #48]	; 0x30
   28f1c:	bl	27868 <__flatcc_fb_clear_parser@@Base+0x374>
   28f20:	cmp	r0, #0
   28f24:	ldrd	r2, [sp, #48]	; 0x30
   28f28:	beq	28ec0 <__flatcc_fb_build_schema@@Base+0xa28>
   28f2c:	ldrh	r3, [r2, #8]
   28f30:	cmp	r3, #0
   28f34:	beq	28fb4 <__flatcc_fb_build_schema@@Base+0xb1c>
   28f38:	ldr	r1, [r4, #176]	; 0xb0
   28f3c:	cmp	r1, #0
   28f40:	ldreq	r3, [r2, #4]
   28f44:	ldreq	r2, [pc, #1440]	; 294ec <__flatcc_fb_build_schema@@Base+0x1054>
   28f48:	beq	28f5c <__flatcc_fb_build_schema@@Base+0xac4>
   28f4c:	cmp	r3, #1
   28f50:	beq	28fb4 <__flatcc_fb_build_schema@@Base+0xb1c>
   28f54:	ldr	r3, [r2, #4]
   28f58:	ldr	r2, [pc, #1424]	; 294f0 <__flatcc_fb_build_schema@@Base+0x1058>
   28f5c:	mov	r0, r4
   28f60:	ldr	r1, [r9, #4]
   28f64:	bl	275f8 <__flatcc_fb_clear_parser@@Base+0x104>
   28f68:	b	28cd4 <__flatcc_fb_build_schema@@Base+0x83c>
   28f6c:	ldr	r3, [sp, #44]	; 0x2c
   28f70:	cmp	r3, #0
   28f74:	beq	28ed4 <__flatcc_fb_build_schema@@Base+0xa3c>
   28f78:	ldr	r0, [r4, #412]	; 0x19c
   28f7c:	cmp	r0, #0
   28f80:	beq	28ed4 <__flatcc_fb_build_schema@@Base+0xa3c>
   28f84:	cmp	r2, #0
   28f88:	moveq	r1, #0
   28f8c:	bl	23610 <fb_scope_table_find@@Base>
   28f90:	cmp	r0, #0
   28f94:	beq	28ed4 <__flatcc_fb_build_schema@@Base+0xa3c>
   28f98:	mov	r2, sl
   28f9c:	mov	r1, fp
   28fa0:	add	r0, r0, #4
   28fa4:	bl	22f30 <fb_symbol_table_find@@Base>
   28fa8:	subs	r2, r0, #0
   28fac:	bne	28f2c <__flatcc_fb_build_schema@@Base+0xa94>
   28fb0:	b	28ed4 <__flatcc_fb_build_schema@@Base+0xa3c>
   28fb4:	str	r2, [r5, #104]	; 0x68
   28fb8:	b	28cd4 <__flatcc_fb_build_schema@@Base+0x83c>
   28fbc:	ldr	r3, [sp, #16]
   28fc0:	cmp	r3, #0
   28fc4:	bne	28e00 <__flatcc_fb_build_schema@@Base+0x968>
   28fc8:	ldrh	r3, [sp, #8]
   28fcc:	str	r3, [r5, #96]	; 0x60
   28fd0:	ldr	r3, [sp, #16]
   28fd4:	mov	r6, r3
   28fd8:	str	r3, [r5, #100]	; 0x64
   28fdc:	b	28e00 <__flatcc_fb_build_schema@@Base+0x968>
   28fe0:	ldrh	r3, [r5, #56]	; 0x38
   28fe4:	add	r9, r5, #48	; 0x30
   28fe8:	cmp	r3, #13
   28fec:	bne	29018 <__flatcc_fb_build_schema@@Base+0xb80>
   28ff0:	mov	r2, #0
   28ff4:	mov	r0, r4
   28ff8:	str	r9, [sp]
   28ffc:	ldr	r1, [r7, #12]
   29000:	ldr	r3, [r5, #48]	; 0x30
   29004:	bl	279bc <__flatcc_fb_clear_parser@@Base+0x4c8>
   29008:	cmp	r0, #0
   2900c:	movne	r3, r5
   29010:	ldrne	r2, [pc, #1244]	; 294f4 <__flatcc_fb_build_schema@@Base+0x105c>
   29014:	bne	292f8 <__flatcc_fb_build_schema@@Base+0xe60>
   29018:	ldrh	r3, [r5, #56]	; 0x38
   2901c:	cmp	r3, #0
   29020:	bne	29038 <__flatcc_fb_build_schema@@Base+0xba0>
   29024:	mov	r3, #5
   29028:	mov	r2, #0
   2902c:	strh	r3, [r5, #56]	; 0x38
   29030:	mov	r3, #0
   29034:	strd	r2, [r5, #48]	; 0x30
   29038:	mov	r3, r9
   2903c:	mov	r1, r5
   29040:	ldr	r2, [r5, #16]
   29044:	mov	r0, r4
   29048:	bl	29c2c <__flatcc_fb_coerce_scalar_type@@Base>
   2904c:	cmp	r0, #0
   29050:	beq	29060 <__flatcc_fb_build_schema@@Base+0xbc8>
   29054:	mov	r3, #1
   29058:	strh	r3, [r5, #24]
   2905c:	b	28c24 <__flatcc_fb_build_schema@@Base+0x78c>
   29060:	ldr	r3, [pc, #1124]	; 294cc <__flatcc_fb_build_schema@@Base+0x1034>
   29064:	mov	r9, #1
   29068:	str	r0, [r5, #92]	; 0x5c
   2906c:	ldr	r2, [r5, #16]
   29070:	add	r3, r3, r2, lsl #2
   29074:	ldr	r3, [r3, #116]	; 0x74
   29078:	strh	r3, [r5, #74]	; 0x4a
   2907c:	str	r3, [r5, #88]	; 0x58
   29080:	cmp	r6, #0
   29084:	beq	2960c <__flatcc_fb_build_schema@@Base+0x1174>
   29088:	ldr	r3, [sp, #16]
   2908c:	eor	fp, r6, #1
   29090:	ands	fp, fp, r3
   29094:	beq	29124 <__flatcc_fb_build_schema@@Base+0xc8c>
   29098:	ldr	r1, [sp, #20]
   2909c:	ldr	r3, [r5, #96]	; 0x60
   290a0:	ldr	r2, [sp, #20]
   290a4:	ldrb	r6, [r1, r3]
   290a8:	add	r2, r2, r3
   290ac:	cmp	r6, #2
   290b0:	bne	296e0 <__flatcc_fb_build_schema@@Base+0x1248>
   290b4:	ldr	r2, [pc, #1084]	; 294f8 <__flatcc_fb_build_schema@@Base+0x1060>
   290b8:	mov	r0, r4
   290bc:	mov	r6, fp
   290c0:	ldr	r1, [sl, #4]
   290c4:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   290c8:	eor	r3, r6, #1
   290cc:	cmp	r8, #0
   290d0:	moveq	r3, #0
   290d4:	andne	r3, r3, #1
   290d8:	cmp	r3, #0
   290dc:	beq	29124 <__flatcc_fb_build_schema@@Base+0xc8c>
   290e0:	ldrh	r3, [r8, #8]
   290e4:	cmp	r3, #4
   290e8:	movne	r6, #0
   290ec:	bne	29124 <__flatcc_fb_build_schema@@Base+0xc8c>
   290f0:	ldrd	r0, [r5, #96]	; 0x60
   290f4:	ldrh	r3, [r5, #24]
   290f8:	cmp	r1, #0
   290fc:	cmpeq	r0, #1
   29100:	bhi	29708 <__flatcc_fb_build_schema@@Base+0x1270>
   29104:	ldr	r1, [pc, #1008]	; 294fc <__flatcc_fb_build_schema@@Base+0x1064>
   29108:	ldr	r2, [pc, #1008]	; 29500 <__flatcc_fb_build_schema@@Base+0x1068>
   2910c:	cmp	r3, #11
   29110:	moveq	r2, r1
   29114:	mov	r0, r4
   29118:	ldr	r1, [sl, #4]
   2911c:	mov	r6, fp
   29120:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   29124:	ldrh	r3, [r5, #72]	; 0x48
   29128:	tst	r3, #128	; 0x80
   2912c:	beq	28c24 <__flatcc_fb_build_schema@@Base+0x78c>
   29130:	ldr	r3, [sp, #40]	; 0x28
   29134:	cmp	r9, #0
   29138:	add	r3, r3, #1
   2913c:	str	r3, [sp, #40]	; 0x28
   29140:	bne	28c24 <__flatcc_fb_build_schema@@Base+0x78c>
   29144:	ldr	r2, [pc, #952]	; 29504 <__flatcc_fb_build_schema@@Base+0x106c>
   29148:	mov	r0, r4
   2914c:	ldr	r1, [r5, #4]
   29150:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   29154:	b	28c24 <__flatcc_fb_build_schema@@Base+0x78c>
   29158:	ldr	r3, [pc, #876]	; 294cc <__flatcc_fb_build_schema@@Base+0x1034>
   2915c:	ldr	r2, [r5, #16]
   29160:	ldrh	r9, [r5, #56]	; 0x38
   29164:	add	r3, r3, r2, lsl #2
   29168:	mov	r2, #0
   2916c:	ldr	r3, [r3, #116]	; 0x74
   29170:	cmp	r9, r2
   29174:	strh	r3, [r5, #74]	; 0x4a
   29178:	str	r3, [r5, #88]	; 0x58
   2917c:	str	r2, [r5, #92]	; 0x5c
   29180:	ldrne	r2, [pc, #896]	; 29508 <__flatcc_fb_build_schema@@Base+0x1070>
   29184:	beq	29080 <__flatcc_fb_build_schema@@Base+0xbe8>
   29188:	mov	r0, r4
   2918c:	ldr	r1, [r5, #4]
   29190:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   29194:	b	29054 <__flatcc_fb_build_schema@@Base+0xbbc>
   29198:	ldrh	r3, [r5, #56]	; 0x38
   2919c:	cmp	r3, #0
   291a0:	ldreq	r9, [r4, #164]	; 0xa4
   291a4:	ldrne	r2, [pc, #864]	; 2950c <__flatcc_fb_build_schema@@Base+0x1074>
   291a8:	beq	29080 <__flatcc_fb_build_schema@@Base+0xbe8>
   291ac:	b	29188 <__flatcc_fb_build_schema@@Base+0xcf0>
   291b0:	ldrh	r9, [r5, #56]	; 0x38
   291b4:	cmp	r9, #0
   291b8:	ldrne	r2, [pc, #848]	; 29510 <__flatcc_fb_build_schema@@Base+0x1078>
   291bc:	beq	29080 <__flatcc_fb_build_schema@@Base+0xbe8>
   291c0:	b	29188 <__flatcc_fb_build_schema@@Base+0xcf0>
   291c4:	mov	r3, #0
   291c8:	mov	r0, r4
   291cc:	ldr	r1, [r7, #12]
   291d0:	ldr	r2, [r5, #16]
   291d4:	bl	2788c <__flatcc_fb_clear_parser@@Base+0x398>
   291d8:	subs	r8, r0, #0
   291dc:	bne	29200 <__flatcc_fb_build_schema@@Base+0xd68>
   291e0:	mov	r6, #1
   291e4:	mov	r3, r5
   291e8:	ldr	r2, [pc, #804]	; 29514 <__flatcc_fb_build_schema@@Base+0x107c>
   291ec:	mov	r0, r4
   291f0:	ldr	r1, [r5, #16]
   291f4:	bl	252cc <error_ref_sym@@Base>
   291f8:	strh	r6, [r5, #24]
   291fc:	b	28c24 <__flatcc_fb_build_schema@@Base+0x78c>
   29200:	ldrh	r3, [r8, #8]
   29204:	cmp	r3, #4
   29208:	ldrls	pc, [pc, r3, lsl #2]
   2920c:	b	29320 <__flatcc_fb_build_schema@@Base+0xe88>
   29210:	andeq	r9, r2, ip, lsr #6
   29214:	andeq	r9, r2, ip, lsr #6
   29218:	andeq	r9, r2, r8, lsl #6
   2921c:	andeq	r9, r2, r4, lsr #4
   29220:	andeq	r9, r2, ip, lsr #6
   29224:	ldrh	r3, [r5, #72]	; 0x48
   29228:	tst	r3, #256	; 0x100
   2922c:	beq	29240 <__flatcc_fb_build_schema@@Base+0xda8>
   29230:	ldr	r2, [pc, #736]	; 29518 <__flatcc_fb_build_schema@@Base+0x1080>
   29234:	mov	r0, r4
   29238:	ldr	r1, [r5, #4]
   2923c:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   29240:	ldr	r9, [r4, #148]	; 0x94
   29244:	mov	r3, #14
   29248:	str	r8, [r5, #16]
   2924c:	strh	r3, [r5, #24]
   29250:	ldrd	r2, [r8, #112]	; 0x70
   29254:	strd	r2, [r5, #88]	; 0x58
   29258:	eor	r2, r6, #1
   2925c:	ldrh	r3, [r8, #104]	; 0x68
   29260:	strh	r3, [r5, #74]	; 0x4a
   29264:	ldrh	r3, [r8, #8]
   29268:	cmp	r3, #4
   2926c:	movne	r2, #0
   29270:	andeq	r2, r2, #1
   29274:	cmp	r2, #0
   29278:	beq	292ac <__flatcc_fb_build_schema@@Base+0xe14>
   2927c:	ldr	r2, [sp, #16]
   29280:	cmp	r2, #0
   29284:	ldrheq	r2, [sp, #8]
   29288:	streq	r2, [r5, #96]	; 0x60
   2928c:	ldreq	r2, [sp, #16]
   29290:	streq	r2, [r5, #100]	; 0x64
   29294:	ldr	r2, [sp, #8]
   29298:	adds	r2, r2, #1
   2929c:	str	r2, [sp, #8]
   292a0:	ldr	r2, [sp, #12]
   292a4:	adc	r2, r2, #0
   292a8:	str	r2, [sp, #12]
   292ac:	ldrh	r2, [r5, #56]	; 0x38
   292b0:	cmp	r2, #0
   292b4:	beq	2937c <__flatcc_fb_build_schema@@Base+0xee4>
   292b8:	cmp	r3, #3
   292bc:	ldrne	r2, [pc, #600]	; 2951c <__flatcc_fb_build_schema@@Base+0x1084>
   292c0:	bne	29188 <__flatcc_fb_build_schema@@Base+0xcf0>
   292c4:	cmp	r2, #13
   292c8:	add	fp, r5, #48	; 0x30
   292cc:	bne	29334 <__flatcc_fb_build_schema@@Base+0xe9c>
   292d0:	mov	r2, r8
   292d4:	mov	r0, r4
   292d8:	str	fp, [sp]
   292dc:	ldr	r1, [r7, #12]
   292e0:	ldr	r3, [r5, #48]	; 0x30
   292e4:	bl	279bc <__flatcc_fb_clear_parser@@Base+0x4c8>
   292e8:	cmp	r0, #0
   292ec:	beq	29080 <__flatcc_fb_build_schema@@Base+0xbe8>
   292f0:	ldr	r2, [pc, #552]	; 29520 <__flatcc_fb_build_schema@@Base+0x1088>
   292f4:	mov	r3, r5
   292f8:	ldr	r1, [r5, #48]	; 0x30
   292fc:	mov	r0, r4
   29300:	bl	252cc <error_ref_sym@@Base>
   29304:	b	29054 <__flatcc_fb_build_schema@@Base+0xbbc>
   29308:	ldr	r2, [pc, #532]	; 29524 <__flatcc_fb_build_schema@@Base+0x108c>
   2930c:	ldr	r3, [r8, #4]
   29310:	mov	r0, r4
   29314:	ldr	r1, [r5, #4]
   29318:	bl	275f8 <__flatcc_fb_clear_parser@@Base+0x104>
   2931c:	b	29054 <__flatcc_fb_build_schema@@Base+0xbbc>
   29320:	ldr	r2, [pc, #512]	; 29528 <__flatcc_fb_build_schema@@Base+0x1090>
   29324:	ldr	r3, [r8, #4]
   29328:	b	29310 <__flatcc_fb_build_schema@@Base+0xe78>
   2932c:	mov	r9, #0
   29330:	b	29244 <__flatcc_fb_build_schema@@Base+0xdac>
   29334:	mov	r3, fp
   29338:	mov	r1, r5
   2933c:	ldr	r2, [r8, #40]	; 0x28
   29340:	mov	r0, r4
   29344:	bl	29c2c <__flatcc_fb_coerce_scalar_type@@Base>
   29348:	cmp	r0, #0
   2934c:	bne	29054 <__flatcc_fb_build_schema@@Base+0xbbc>
   29350:	ldr	r3, [r4, #212]	; 0xd4
   29354:	cmp	r3, #0
   29358:	beq	29080 <__flatcc_fb_build_schema@@Base+0xbe8>
   2935c:	ldr	r0, [r5, #16]
   29360:	mov	r1, fp
   29364:	add	r0, r0, #72	; 0x48
   29368:	bl	2e990 <fb_value_set_find_item@@Base>
   2936c:	cmp	r0, #0
   29370:	ldreq	r2, [pc, #436]	; 2952c <__flatcc_fb_build_schema@@Base+0x1094>
   29374:	bne	29080 <__flatcc_fb_build_schema@@Base+0xbe8>
   29378:	b	29188 <__flatcc_fb_build_schema@@Base+0xcf0>
   2937c:	cmp	r3, #3
   29380:	bne	29080 <__flatcc_fb_build_schema@@Base+0xbe8>
   29384:	mov	r3, #5
   29388:	mov	fp, r5
   2938c:	mov	r2, #0
   29390:	mov	r1, r8
   29394:	strh	r3, [r5, #56]	; 0x38
   29398:	mov	r3, #0
   2939c:	mov	r0, r4
   293a0:	strd	r2, [fp, #48]!	; 0x30
   293a4:	mov	r3, fp
   293a8:	ldr	r2, [r8, #40]	; 0x28
   293ac:	bl	29c2c <__flatcc_fb_coerce_scalar_type@@Base>
   293b0:	cmp	r0, #0
   293b4:	bne	29054 <__flatcc_fb_build_schema@@Base+0xbbc>
   293b8:	ldr	r3, [r4, #212]	; 0xd4
   293bc:	cmp	r3, #0
   293c0:	beq	29080 <__flatcc_fb_build_schema@@Base+0xbe8>
   293c4:	ldr	r0, [r5, #16]
   293c8:	mov	r1, fp
   293cc:	add	r0, r0, #72	; 0x48
   293d0:	bl	2e990 <fb_value_set_find_item@@Base>
   293d4:	cmp	r0, #0
   293d8:	ldreq	r2, [pc, #336]	; 29530 <__flatcc_fb_build_schema@@Base+0x1098>
   293dc:	ldreq	r3, [r8, #4]
   293e0:	bne	29080 <__flatcc_fb_build_schema@@Base+0xbe8>
   293e4:	b	29310 <__flatcc_fb_build_schema@@Base+0xe78>
   293e8:	mov	r3, #0
   293ec:	mov	r0, r4
   293f0:	ldr	r1, [r7, #12]
   293f4:	ldr	r2, [r5, #16]
   293f8:	bl	2788c <__flatcc_fb_clear_parser@@Base+0x398>
   293fc:	subs	r8, r0, #0
   29400:	bne	29414 <__flatcc_fb_build_schema@@Base+0xf7c>
   29404:	mov	r3, r5
   29408:	ldr	r2, [pc, #292]	; 29534 <__flatcc_fb_build_schema@@Base+0x109c>
   2940c:	ldr	r1, [r5, #16]
   29410:	b	292fc <__flatcc_fb_build_schema@@Base+0xe64>
   29414:	ldrh	r1, [r8, #8]
   29418:	cmp	r1, #4
   2941c:	bhi	29430 <__flatcc_fb_build_schema@@Base+0xf98>
   29420:	mov	fp, #1
   29424:	lsl	r3, fp, r1
   29428:	tst	r3, #27
   2942c:	bne	2943c <__flatcc_fb_build_schema@@Base+0xfa4>
   29430:	ldr	r2, [pc, #256]	; 29538 <__flatcc_fb_build_schema@@Base+0x10a0>
   29434:	ldr	r3, [r5, #16]
   29438:	b	29310 <__flatcc_fb_build_schema@@Base+0xe78>
   2943c:	ldrh	r9, [r5, #56]	; 0x38
   29440:	cmp	r9, #0
   29444:	beq	295ac <__flatcc_fb_build_schema@@Base+0x1114>
   29448:	ldr	r2, [pc, #204]	; 2951c <__flatcc_fb_build_schema@@Base+0x1084>
   2944c:	mov	r0, r4
   29450:	ldr	r1, [r5, #4]
   29454:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   29458:	strh	fp, [r5, #24]
   2945c:	b	28c24 <__flatcc_fb_build_schema@@Base+0x78c>
   29460:	andeq	r8, r4, r7, lsr #5
   29464:	andeq	r8, r4, lr, ror #8
   29468:	andeq	r8, r4, r7, ror #24
   2946c:			; <UNDEFINED> instruction: 0x01000193
   29470:	tsthi	ip, r5, asr #27
   29474:			; <UNDEFINED> instruction: 0x00048cb9
   29478:	andeq	r8, r4, r0, asr #5
   2947c:	strheq	fp, [r5], -r0
   29480:	ldrdeq	r0, [r3], -sp
   29484:	muleq	r4, sp, ip
   29488:	andeq	r8, r4, r5, lsr #29
   2948c:	andeq	r8, r4, ip, lsl #27
   29490:	andeq	r8, r4, r6, asr #26
   29494:	andeq	r9, r4, sp, ror r7
   29498:	ldrdeq	r8, [r4], -r3
   2949c:	strdeq	r8, [r4], -sp
   294a0:	ldrdeq	r8, [r4], -r6
   294a4:	andeq	r8, r4, r8, ror #26
   294a8:			; <UNDEFINED> instruction: 0x00048dba
   294ac:	strdeq	r8, [r4], -lr
   294b0:	andeq	r8, r4, pc, lsr #28
   294b4:	andeq	r8, r4, fp, ror #28
   294b8:	andeq	r8, r4, r2, lsl pc
   294bc:	strdeq	r8, [r4], -r0
   294c0:	andeq	r8, r4, r4, asr #30
   294c4:	andeq	r8, r4, r3, asr pc
   294c8:	andeq	r8, r4, r5, ror pc
   294cc:	strdeq	r8, [r4], -r4
   294d0:	muleq	r4, sl, pc	; <UNPREDICTABLE>
   294d4:	andeq	r9, r4, r4, asr r0
   294d8:	andeq	r9, r4, ip, lsl #1
   294dc:	andeq	r9, r4, r8, asr #1
   294e0:	andeq	r9, r4, r7, lsl #2
   294e4:	andeq	r9, r4, lr, lsr r1
   294e8:	ldrdeq	r8, [r4], -r7
   294ec:	strdeq	r8, [r4], -r2
   294f0:	andeq	r9, r4, sp, lsl r0
   294f4:	andeq	r9, r4, lr, asr r1
   294f8:	andeq	r9, r4, r5, lsl #10
   294fc:	andeq	r8, r4, r0, ror sl
   29500:	andeq	r8, r4, r0, asr #21
   29504:	andeq	r9, r4, fp, ror #10
   29508:	muleq	r4, r0, r1
   2950c:			; <UNDEFINED> instruction: 0x000491ba
   29510:	ldrdeq	r9, [r4], -sp
   29514:	andeq	r9, r4, r7, lsl #4
   29518:	andeq	r9, r4, r4, lsr r2
   2951c:			; <UNDEFINED> instruction: 0x000492bc
   29520:	andeq	r9, r4, r8, ror #5
   29524:	andeq	r9, r4, sl, ror #4
   29528:	muleq	r4, r6, r2
   2952c:	andeq	r9, r4, r8, lsl r3
   29530:	andeq	r9, r4, r8, asr #6
   29534:	andeq	r9, r4, sp, lsl #7
   29538:	andeq	r9, r4, r1, asr #7
   2953c:	andeq	r9, r4, r4, lsr r4
   29540:	andeq	r9, r4, r1, ror r4
   29544:	andeq	r9, r4, fp, lsr #9
   29548:	andeq	r9, r4, ip, lsl #8
   2954c:	andeq	r9, r4, r9, asr #9
   29550:	andeq	r9, r4, r9, ror #9
   29554:	andeq	r9, r4, fp, lsr r5
   29558:	andeq	r8, r4, r9, lsl #22
   2955c:	andeq	r8, r4, sl, ror #22
   29560:	andeq	r8, r4, r9, lsl ip
   29564:	andeq	r8, r4, r4, asr #23
   29568:	muleq	r4, ip, r5
   2956c:			; <UNDEFINED> instruction: 0x000495b2
   29570:	strdeq	r8, [r4], -lr
   29574:	andeq	r9, r4, r4, ror #11
   29578:	andeq	r9, r4, r0, asr #14
   2957c:	andeq	r9, r4, sp, lsl #14
   29580:	andeq	r9, r4, r8, lsl #12
   29584:	andeq	r9, r4, r8, lsr #12
   29588:	andeq	r9, r4, r8, ror #12
   2958c:	andeq	r9, r4, r5, lsr #13
   29590:	ldrdeq	r9, [r4], -r7
   29594:	andeq	r8, r4, r2, lsl r3
   29598:	andeq	r8, r4, lr, ror #8
   2959c:	andeq	r9, r4, r7, ror r7
   295a0:	muleq	r4, r4, r7
   295a4:	andeq	r9, r4, r8, lsr #15
   295a8:	andeq	r9, r4, lr, asr #15
   295ac:	mov	r3, #15
   295b0:	cmp	r1, #4
   295b4:	str	r8, [r5, #16]
   295b8:	strh	r3, [r5, #24]
   295bc:	ldrd	r2, [r8, #112]	; 0x70
   295c0:	strd	r2, [r5, #88]	; 0x58
   295c4:	ldrh	r3, [r8, #104]	; 0x68
   295c8:	strh	r3, [r5, #74]	; 0x4a
   295cc:	bne	29080 <__flatcc_fb_build_schema@@Base+0xbe8>
   295d0:	cmp	r6, #0
   295d4:	bne	29088 <__flatcc_fb_build_schema@@Base+0xbf0>
   295d8:	ldr	r3, [sp, #16]
   295dc:	mov	r9, #0
   295e0:	cmp	r3, #0
   295e4:	ldrheq	r3, [sp, #8]
   295e8:	streq	r3, [r5, #96]	; 0x60
   295ec:	ldreq	r3, [sp, #16]
   295f0:	streq	r3, [r5, #100]	; 0x64
   295f4:	ldr	r3, [sp, #8]
   295f8:	adds	r3, r3, #1
   295fc:	str	r3, [sp, #8]
   29600:	ldr	r3, [sp, #12]
   29604:	adc	r3, r3, #0
   29608:	str	r3, [sp, #12]
   2960c:	ldr	r3, [sp, #16]
   29610:	adds	r2, sl, #0
   29614:	movne	r2, #1
   29618:	eor	r3, r3, #1
   2961c:	tst	r3, r2
   29620:	ldrne	r2, [pc, #-236]	; 2953c <__flatcc_fb_build_schema@@Base+0x10a4>
   29624:	ldrne	r1, [sl, #4]
   29628:	bne	2967c <__flatcc_fb_build_schema@@Base+0x11e4>
   2962c:	cmp	sl, #0
   29630:	ldr	r3, [sp, #16]
   29634:	movne	ip, #0
   29638:	andeq	ip, r3, #1
   2963c:	cmp	ip, #0
   29640:	ldrne	r2, [pc, #-264]	; 29540 <__flatcc_fb_build_schema@@Base+0x10a8>
   29644:	bne	29678 <__flatcc_fb_build_schema@@Base+0x11e0>
   29648:	cmp	sl, #0
   2964c:	moveq	r6, sl
   29650:	beq	29088 <__flatcc_fb_build_schema@@Base+0xbf0>
   29654:	ldrh	r3, [sl, #16]
   29658:	cmp	r3, #5
   2965c:	bne	296cc <__flatcc_fb_build_schema@@Base+0x1234>
   29660:	ldrd	r0, [sl, #8]
   29664:	ldrd	r2, [r4, #216]	; 0xd8
   29668:	cmp	r1, r3
   2966c:	cmpeq	r0, r2
   29670:	bcc	29694 <__flatcc_fb_build_schema@@Base+0x11fc>
   29674:	ldr	r2, [pc, #-312]	; 29544 <__flatcc_fb_build_schema@@Base+0x10ac>
   29678:	ldr	r1, [r5, #4]
   2967c:	mov	r0, r4
   29680:	mov	r6, #1
   29684:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   29688:	b	29088 <__flatcc_fb_build_schema@@Base+0xbf0>
   2968c:	ldr	r2, [pc, #-332]	; 29548 <__flatcc_fb_build_schema@@Base+0x10b0>
   29690:	b	29188 <__flatcc_fb_build_schema@@Base+0xcf0>
   29694:	uxth	r3, r0
   29698:	mov	r6, #0
   2969c:	str	r3, [sp, #24]
   296a0:	str	ip, [sp, #28]
   296a4:	ldrd	r2, [sp, #24]
   296a8:	ldrd	r0, [sp, #24]
   296ac:	strd	r2, [r5, #96]	; 0x60
   296b0:	ldrd	r2, [sp, #32]
   296b4:	cmp	r3, r1
   296b8:	cmpeq	r2, r0
   296bc:	movcc	r2, r0
   296c0:	movcc	r3, r1
   296c4:	strdcc	r2, [sp, #32]
   296c8:	b	29088 <__flatcc_fb_build_schema@@Base+0xbf0>
   296cc:	cmp	r3, #4
   296d0:	ldr	r1, [sl, #4]
   296d4:	ldreq	r2, [pc, #-400]	; 2954c <__flatcc_fb_build_schema@@Base+0x10b4>
   296d8:	ldrne	r2, [pc, #-400]	; 29550 <__flatcc_fb_build_schema@@Base+0x10b8>
   296dc:	b	2967c <__flatcc_fb_build_schema@@Base+0x11e4>
   296e0:	cmp	r6, #0
   296e4:	moveq	r3, #1
   296e8:	strbeq	r3, [r2]
   296ec:	beq	290c8 <__flatcc_fb_build_schema@@Base+0xc30>
   296f0:	ldr	r2, [pc, #-420]	; 29554 <__flatcc_fb_build_schema@@Base+0x10bc>
   296f4:	mov	r0, r4
   296f8:	mov	r6, #0
   296fc:	ldr	r1, [sl, #4]
   29700:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   29704:	b	290c8 <__flatcc_fb_build_schema@@Base+0xc30>
   29708:	ldr	r1, [sp, #20]
   2970c:	sub	r0, r0, #1
   29710:	ldr	r2, [sp, #20]
   29714:	ldrb	r6, [r1, r0]
   29718:	add	r2, r2, r0
   2971c:	cmp	r6, #2
   29720:	ldreq	r1, [pc, #-464]	; 29558 <__flatcc_fb_build_schema@@Base+0x10c0>
   29724:	ldreq	r2, [pc, #-464]	; 2955c <__flatcc_fb_build_schema@@Base+0x10c4>
   29728:	beq	2910c <__flatcc_fb_build_schema@@Base+0xc74>
   2972c:	cmp	r6, #0
   29730:	moveq	r3, #2
   29734:	strbeq	r3, [r2]
   29738:	beq	29124 <__flatcc_fb_build_schema@@Base+0xc8c>
   2973c:	ldr	r1, [pc, #-484]	; 29560 <__flatcc_fb_build_schema@@Base+0x10c8>
   29740:	cmp	r3, #11
   29744:	ldr	r2, [pc, #-488]	; 29564 <__flatcc_fb_build_schema@@Base+0x10cc>
   29748:	movne	r2, r1
   2974c:	b	29114 <__flatcc_fb_build_schema@@Base+0xc7c>
   29750:	mov	r3, r9
   29754:	mov	r2, r8
   29758:	mov	r1, r5
   2975c:	add	r0, sp, #108	; 0x6c
   29760:	bl	14128 <sprintf@plt>
   29764:	add	r2, sp, #108	; 0x6c
   29768:	mov	r0, r4
   2976c:	ldr	r1, [r7, #4]
   29770:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   29774:	mov	r3, r6
   29778:	adds	r8, r8, #1
   2977c:	adc	r9, r9, #0
   29780:	ldrd	r0, [sp, #32]
   29784:	cmp	r1, r9
   29788:	cmpeq	r0, r8
   2978c:	beq	297c0 <__flatcc_fb_build_schema@@Base+0x1328>
   29790:	ldr	r2, [sp, #20]
   29794:	add	r2, r2, r8
   29798:	ldrb	r2, [r2]
   2979c:	cmp	r2, #0
   297a0:	bne	29778 <__flatcc_fb_build_schema@@Base+0x12e0>
   297a4:	cmp	r3, #0
   297a8:	sub	r6, r3, #1
   297ac:	bne	29750 <__flatcc_fb_build_schema@@Base+0x12b8>
   297b0:	ldr	r2, [pc, #-592]	; 29568 <__flatcc_fb_build_schema@@Base+0x10d0>
   297b4:	mov	r0, r4
   297b8:	ldr	r1, [r7, #4]
   297bc:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   297c0:	ldr	r3, [sp, #40]	; 0x28
   297c4:	cmp	r3, #0
   297c8:	bne	28bb8 <__flatcc_fb_build_schema@@Base+0x720>
   297cc:	b	28bec <__flatcc_fb_build_schema@@Base+0x754>
   297d0:	mov	r3, #10
   297d4:	mov	r8, #0
   297d8:	ldr	r5, [pc, #-628]	; 2956c <__flatcc_fb_build_schema@@Base+0x10d4>
   297dc:	mov	r9, #0
   297e0:	b	29780 <__flatcc_fb_build_schema@@Base+0x12e8>
   297e4:	ldrh	r3, [r7, #48]	; 0x30
   297e8:	cmp	r3, #1
   297ec:	beq	28ae0 <__flatcc_fb_build_schema@@Base+0x648>
   297f0:	cmp	r3, #0
   297f4:	ldrne	r3, [pc, #-652]	; 29570 <__flatcc_fb_build_schema@@Base+0x10d8>
   297f8:	movwne	r2, #1129	; 0x469
   297fc:	bne	28b04 <__flatcc_fb_build_schema@@Base+0x66c>
   29800:	ldr	r3, [r7, #28]
   29804:	cmp	r3, #0
   29808:	beq	2981c <__flatcc_fb_build_schema@@Base+0x1384>
   2980c:	ldr	r2, [pc, #-672]	; 29574 <__flatcc_fb_build_schema@@Base+0x10dc>
   29810:	mov	r0, r4
   29814:	ldr	r1, [r7, #4]
   29818:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   2981c:	ldr	r8, [pc, #-684]	; 29578 <__flatcc_fb_build_schema@@Base+0x10e0>
   29820:	ldr	r9, [pc, #-684]	; 2957c <__flatcc_fb_build_schema@@Base+0x10e4>
   29824:	ldr	r5, [r7, #20]
   29828:	cmp	r5, #0
   2982c:	beq	28ae0 <__flatcc_fb_build_schema@@Base+0x648>
   29830:	mov	r2, #1
   29834:	mov	r1, r5
   29838:	add	r0, r7, #56	; 0x38
   2983c:	bl	22f10 <fb_symbol_table_insert_item@@Base>
   29840:	cmp	r0, #0
   29844:	beq	29864 <__flatcc_fb_build_schema@@Base+0x13cc>
   29848:	ldr	r2, [pc, #-720]	; 29580 <__flatcc_fb_build_schema@@Base+0x10e8>
   2984c:	ldr	r3, [r0, #4]
   29850:	mov	r0, r4
   29854:	ldr	r1, [r5, #4]
   29858:	bl	275f8 <__flatcc_fb_clear_parser@@Base+0x104>
   2985c:	ldr	r5, [r5]
   29860:	b	29828 <__flatcc_fb_build_schema@@Base+0x1390>
   29864:	ldrh	r3, [r5, #8]
   29868:	cmp	r3, #5
   2986c:	bne	28c38 <__flatcc_fb_build_schema@@Base+0x7a0>
   29870:	ldrh	r3, [r5, #56]	; 0x38
   29874:	cmp	r3, #0
   29878:	beq	2988c <__flatcc_fb_build_schema@@Base+0x13f4>
   2987c:	ldr	r2, [pc, #-768]	; 29584 <__flatcc_fb_build_schema@@Base+0x10ec>
   29880:	mov	r0, r4
   29884:	ldr	r1, [r5, #4]
   29888:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   2988c:	ldrh	r3, [r5, #24]
   29890:	cmp	r3, #1
   29894:	beq	2985c <__flatcc_fb_build_schema@@Base+0x13c4>
   29898:	cmp	r3, #12
   2989c:	beq	298b0 <__flatcc_fb_build_schema@@Base+0x1418>
   298a0:	ldr	r2, [pc, #-800]	; 29588 <__flatcc_fb_build_schema@@Base+0x10f0>
   298a4:	mov	r0, r4
   298a8:	ldr	r1, [r5, #4]
   298ac:	bl	27614 <__flatcc_fb_clear_parser@@Base+0x120>
   298b0:	mov	r3, #0
   298b4:	mov	r0, r4
   298b8:	ldr	r1, [r7, #12]
   298bc:	ldr	r2, [r5, #32]
   298c0:	bl	2788c <__flatcc_fb_clear_parser@@Base+0x398>
   298c4:	cmp	r0, #0
   298c8:	bne	298e4 <__flatcc_fb_build_schema@@Base+0x144c>
   298cc:	ldr	r2, [pc, #-840]	; 2958c <__flatcc_fb_build_schema@@Base+0x10f4>
   298d0:	mov	r3, r5
   298d4:	ldr	r1, [r5, #32]
   298d8:	mov	r0, r4
   298dc:	bl	252cc <error_ref_sym@@Base>
   298e0:	b	29904 <__flatcc_fb_build_schema@@Base+0x146c>
   298e4:	ldrh	r3, [r0, #8]
   298e8:	cmp	r3, #0
   298ec:	beq	29910 <__flatcc_fb_build_schema@@Base+0x1478>
   298f0:	ldr	r2, [pc, #-872]	; 29590 <__flatcc_fb_build_schema@@Base+0x10f8>
   298f4:	ldr	r3, [r0, #4]
   298f8:	mov	r0, r4
   298fc:	ldr	r1, [r5, #4]
   29900:	bl	275f8 <__flatcc_fb_clear_parser@@Base+0x104>
   29904:	mov	r3, #1
   29908:	strh	r3, [r5, #24]
   2990c:	b	2985c <__flatcc_fb_build_schema@@Base+0x13c4>
   29910:	mov	r6, #14
   29914:	ldr	r1, [r7, #12]
   29918:	str	r0, [r5, #32]
   2991c:	mov	r0, r4
   29920:	strh	r6, [r5, #40]	; 0x28
   29924:	ldr	r2, [r5, #16]
   29928:	bl	2788c <__flatcc_fb_clear_parser@@Base+0x398>
   2992c:	cmp	r0, #0
   29930:	bne	29944 <__flatcc_fb_build_schema@@Base+0x14ac>
   29934:	mov	r3, r5
   29938:	mov	r2, r9
   2993c:	ldr	r1, [r5, #16]
   29940:	b	298d8 <__flatcc_fb_build_schema@@Base+0x1440>
   29944:	ldrh	r3, [r0, #8]
   29948:	cmp	r3, #0
   2994c:	movne	r2, r8
   29950:	ldrne	r3, [r0, #4]
   29954:	bne	298f8 <__flatcc_fb_build_schema@@Base+0x1460>
   29958:	mov	r2, #0
   2995c:	mov	r3, #0
   29960:	str	r0, [r5, #16]
   29964:	mov	r0, r4
   29968:	strh	r6, [r5, #24]
   2996c:	strd	r2, [r5, #88]	; 0x58
   29970:	add	r3, sp, #108	; 0x6c
   29974:	mov	r2, #4
   29978:	ldr	r1, [r5, #64]	; 0x40
   2997c:	bl	2761c <__flatcc_fb_clear_parser@@Base+0x128>
   29980:	strh	r0, [r5, #72]	; 0x48
   29984:	b	2985c <__flatcc_fb_build_schema@@Base+0x13c4>
   29988:	ldr	r2, [r3, #120]	; 0x78
   2998c:	str	r7, [r3, #120]	; 0x78
   29990:	mov	r7, r3
   29994:	mov	r3, r2
   29998:	b	2871c <__flatcc_fb_build_schema@@Base+0x284>
   2999c:	ldrh	r3, [r5, #8]
   299a0:	cmp	r3, #0
   299a4:	bne	29a74 <__flatcc_fb_build_schema@@Base+0x15dc>
   299a8:	ldrh	r8, [r5, #92]	; 0x5c
   299ac:	ldr	r6, [r5, #20]
   299b0:	ands	r8, r8, #8
   299b4:	strne	r3, [sp, #108]	; 0x6c
   299b8:	addne	r3, sp, #108	; 0x6c
   299bc:	bne	29a60 <__flatcc_fb_build_schema@@Base+0x15c8>
   299c0:	mov	r2, #36	; 0x24
   299c4:	mov	r1, r8
   299c8:	add	r0, sp, #60	; 0x3c
   299cc:	bl	140d4 <memset@plt>
   299d0:	mov	r2, #36	; 0x24
   299d4:	mov	r1, r8
   299d8:	add	r0, sp, #108	; 0x6c
   299dc:	bl	140d4 <memset@plt>
   299e0:	mov	r3, r6
   299e4:	movw	r0, #34432	; 0x8680
   299e8:	cmp	r3, #0
   299ec:	bne	29a7c <__flatcc_fb_build_schema@@Base+0x15e4>
   299f0:	add	r3, sp, #92	; 0x5c
   299f4:	mov	r2, #8
   299f8:	str	r3, [sp, #140]	; 0x8c
   299fc:	sub	r1, r2, #1
   29a00:	add	r3, sp, #60	; 0x3c
   29a04:	uxth	r1, r1
   29a08:	add	r1, r3, r1, lsl #2
   29a0c:	mov	r3, r2
   29a10:	ldr	r0, [r1], #-4
   29a14:	sub	r3, r3, #1
   29a18:	uxth	r3, r3
   29a1c:	cmp	r0, #0
   29a20:	bne	29a2c <__flatcc_fb_build_schema@@Base+0x1594>
   29a24:	cmp	r3, #0
   29a28:	bne	29a10 <__flatcc_fb_build_schema@@Base+0x1578>
   29a2c:	add	r1, sp, #208	; 0xd0
   29a30:	add	r0, sp, #208	; 0xd0
   29a34:	add	r1, r1, r3, lsl #2
   29a38:	cmp	r3, #0
   29a3c:	add	r2, r0, r2, lsl #2
   29a40:	ldr	r1, [r1, #-148]	; 0xffffff6c
   29a44:	ldr	r2, [r2, #-100]	; 0xffffff9c
   29a48:	str	r1, [r2]
   29a4c:	bne	29b60 <__flatcc_fb_build_schema@@Base+0x16c8>
   29a50:	ldr	r3, [sp, #92]	; 0x5c
   29a54:	b	29a70 <__flatcc_fb_build_schema@@Base+0x15d8>
   29a58:	mov	r3, r6
   29a5c:	ldr	r6, [r3], #108	; 0x6c
   29a60:	cmp	r6, #0
   29a64:	str	r6, [r3]
   29a68:	bne	29a58 <__flatcc_fb_build_schema@@Base+0x15c0>
   29a6c:	ldr	r3, [sp, #108]	; 0x6c
   29a70:	str	r3, [r5, #24]
   29a74:	ldr	r5, [r5]
   29a78:	b	28730 <__flatcc_fb_build_schema@@Base+0x298>
   29a7c:	ldrh	r2, [r3, #24]
   29a80:	ldrh	r1, [r3, #74]	; 0x4a
   29a84:	cmp	r2, #15
   29a88:	bhi	29ac4 <__flatcc_fb_build_schema@@Base+0x162c>
   29a8c:	lsl	r2, r7, r2
   29a90:	ands	ip, r2, r0
   29a94:	bne	29ae0 <__flatcc_fb_build_schema@@Base+0x1648>
   29a98:	tst	r2, #2
   29a9c:	bne	29ae8 <__flatcc_fb_build_schema@@Base+0x1650>
   29aa0:	tst	r2, #16384	; 0x4000
   29aa4:	beq	29ac4 <__flatcc_fb_build_schema@@Base+0x162c>
   29aa8:	ldr	r2, [r3, #16]
   29aac:	ldrh	r1, [r2, #8]
   29ab0:	cmp	r1, #1
   29ab4:	beq	29ac0 <__flatcc_fb_build_schema@@Base+0x1628>
   29ab8:	cmp	r1, #3
   29abc:	bne	29ae0 <__flatcc_fb_build_schema@@Base+0x1648>
   29ac0:	ldrh	r1, [r2, #104]	; 0x68
   29ac4:	cmp	r1, #0
   29ac8:	bne	29b0c <__flatcc_fb_build_schema@@Base+0x1674>
   29acc:	ldr	r3, [pc, #-1344]	; 29594 <__flatcc_fb_build_schema@@Base+0x10fc>
   29ad0:	movw	r2, #1521	; 0x5f1
   29ad4:	ldr	r1, [pc, #-1348]	; 29598 <__flatcc_fb_build_schema@@Base+0x1100>
   29ad8:	ldr	r0, [pc, #-1348]	; 2959c <__flatcc_fb_build_schema@@Base+0x1104>
   29adc:	b	284d0 <__flatcc_fb_build_schema@@Base+0x38>
   29ae0:	ldrh	r1, [r4, #192]	; 0xc0
   29ae4:	b	29ac4 <__flatcc_fb_build_schema@@Base+0x162c>
   29ae8:	add	r3, sp, #56	; 0x38
   29aec:	str	ip, [sp, #56]	; 0x38
   29af0:	cmp	r6, #0
   29af4:	str	r6, [r3]
   29af8:	ldreq	r3, [sp, #56]	; 0x38
   29afc:	beq	29a70 <__flatcc_fb_build_schema@@Base+0x15d8>
   29b00:	mov	r3, r6
   29b04:	ldr	r6, [r3], #108	; 0x6c
   29b08:	b	29af0 <__flatcc_fb_build_schema@@Base+0x1658>
   29b0c:	mov	ip, #0
   29b10:	lsrs	r1, r1, #1
   29b14:	uxth	r2, ip
   29b18:	add	ip, ip, #1
   29b1c:	bne	29b10 <__flatcc_fb_build_schema@@Base+0x1678>
   29b20:	cmp	r2, #7
   29b24:	add	r1, sp, #208	; 0xd0
   29b28:	movcs	r2, #7
   29b2c:	lsl	r2, r2, #2
   29b30:	add	r1, r1, r2
   29b34:	ldr	ip, [r1, #-148]	; 0xffffff6c
   29b38:	cmp	ip, #0
   29b3c:	ldrne	r1, [r1, #-100]	; 0xffffff9c
   29b40:	streq	r3, [r1, #-148]	; 0xffffff6c
   29b44:	strne	r3, [r1]
   29b48:	add	r1, sp, #208	; 0xd0
   29b4c:	add	r2, r1, r2
   29b50:	add	r1, r3, #108	; 0x6c
   29b54:	ldr	r3, [r3]
   29b58:	str	r1, [r2, #-100]	; 0xffffff9c
   29b5c:	b	299e8 <__flatcc_fb_build_schema@@Base+0x1550>
   29b60:	mov	r2, r3
   29b64:	b	299fc <__flatcc_fb_build_schema@@Base+0x1564>
   29b68:	mov	r3, r5
   29b6c:	mov	r0, r4
   29b70:	ldr	r1, [r4, #408]	; 0x198
   29b74:	bl	2788c <__flatcc_fb_clear_parser@@Base+0x398>
   29b78:	cmp	r0, #0
   29b7c:	str	r0, [r4, #404]	; 0x194
   29b80:	moveq	r3, r5
   29b84:	ldreq	r2, [pc, #-1516]	; 295a0 <__flatcc_fb_build_schema@@Base+0x1108>
   29b88:	beq	29bc8 <__flatcc_fb_build_schema@@Base+0x1730>
   29b8c:	ldr	r2, [r4, #176]	; 0xb0
   29b90:	ldrh	r3, [r0, #8]
   29b94:	cmp	r2, #0
   29b98:	beq	29bb8 <__flatcc_fb_build_schema@@Base+0x1720>
   29b9c:	cmp	r3, #1
   29ba0:	movhi	r3, r5
   29ba4:	ldrhi	r2, [pc, #-1544]	; 295a4 <__flatcc_fb_build_schema@@Base+0x110c>
   29ba8:	bhi	29bc8 <__flatcc_fb_build_schema@@Base+0x1730>
   29bac:	mov	r3, #0
   29bb0:	str	r3, [r4, #400]	; 0x190
   29bb4:	b	28760 <__flatcc_fb_build_schema@@Base+0x2c8>
   29bb8:	cmp	r3, #0
   29bbc:	beq	29bac <__flatcc_fb_build_schema@@Base+0x1714>
   29bc0:	ldr	r2, [pc, #-1568]	; 295a8 <__flatcc_fb_build_schema@@Base+0x1110>
   29bc4:	mov	r3, r5
   29bc8:	mov	r0, r4
   29bcc:	ldr	r1, [r4, #400]	; 0x190
   29bd0:	bl	252cc <error_ref_sym@@Base>
   29bd4:	b	29bac <__flatcc_fb_build_schema@@Base+0x1714>
   29bd8:	strh	r0, [r6, #104]	; 0x68
   29bdc:	b	28858 <__flatcc_fb_build_schema@@Base+0x3c0>
   29be0:	ldr	r3, [sp, #16]
   29be4:	cmp	r3, #0
   29be8:	beq	28ae0 <__flatcc_fb_build_schema@@Base+0x648>
   29bec:	b	28bec <__flatcc_fb_build_schema@@Base+0x754>
   29bf0:	ldr	r3, [sp, #40]	; 0x28
   29bf4:	cmp	r3, #0
   29bf8:	bne	28bb4 <__flatcc_fb_build_schema@@Base+0x71c>
   29bfc:	b	28bec <__flatcc_fb_build_schema@@Base+0x754>
   29c00:	ldr	r3, [sp, #40]	; 0x28
   29c04:	cmp	r3, #0
   29c08:	beq	28ae0 <__flatcc_fb_build_schema@@Base+0x648>
   29c0c:	b	28bb8 <__flatcc_fb_build_schema@@Base+0x720>
   29c10:	mov	r3, #0
   29c14:	push	{r0, r1, r2, lr}
   29c18:	str	r3, [sp]
   29c1c:	str	r3, [sp, #4]
   29c20:	bl	244c8 <__flatcc_error_report@@Base>
   29c24:	add	sp, sp, #12
   29c28:	pop	{pc}		; (ldr pc, [sp], #4)

00029c2c <__flatcc_fb_coerce_scalar_type@@Base>:
   29c2c:	ldrh	ip, [r3, #8]
   29c30:	cmp	ip, #0
   29c34:	bne	29c40 <__flatcc_fb_coerce_scalar_type@@Base+0x14>
   29c38:	mov	r0, #0
   29c3c:	bx	lr
   29c40:	cmp	ip, #4
   29c44:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   29c48:	vpush	{d8}
   29c4c:	bne	29c64 <__flatcc_fb_coerce_scalar_type@@Base+0x38>
   29c50:	ldrd	r4, [r3]
   29c54:	cmp	r4, #0
   29c58:	sbcs	ip, r5, #0
   29c5c:	movge	ip, #5
   29c60:	strhge	ip, [r3, #8]
   29c64:	ldrh	ip, [r3, #8]
   29c68:	cmp	ip, #1
   29c6c:	beq	29d18 <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   29c70:	cmp	ip, #6
   29c74:	mov	r4, r3
   29c78:	mov	sl, r1
   29c7c:	mov	r5, r0
   29c80:	bne	29ccc <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
   29c84:	cmp	r2, #5
   29c88:	beq	29efc <__flatcc_fb_coerce_scalar_type@@Base+0x2d0>
   29c8c:	ldr	r3, [r0, #144]	; 0x90
   29c90:	cmp	r3, #0
   29c94:	beq	29ccc <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
   29c98:	ldrb	r0, [r4]
   29c9c:	mov	r1, #0
   29ca0:	mov	r3, #5
   29ca4:	cmp	r1, #0
   29ca8:	cmpeq	r0, #1
   29cac:	strd	r0, [r4]
   29cb0:	strh	r3, [r4, #8]
   29cb4:	bls	29ccc <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
   29cb8:	ldr	r3, [pc, #884]	; 2a034 <__flatcc_fb_coerce_scalar_type@@Base+0x408>
   29cbc:	mov	r2, #52	; 0x34
   29cc0:	ldr	r1, [pc, #880]	; 2a038 <__flatcc_fb_coerce_scalar_type@@Base+0x40c>
   29cc4:	ldr	r0, [pc, #880]	; 2a03c <__flatcc_fb_coerce_scalar_type@@Base+0x410>
   29cc8:	bl	1417c <__assert_fail@plt>
   29ccc:	sub	r2, r2, #1
   29cd0:	cmp	r2, #10
   29cd4:	ldrls	pc, [pc, r2, lsl #2]
   29cd8:	b	2a02c <__flatcc_fb_coerce_scalar_type@@Base+0x400>
   29cdc:	andeq	r9, r2, r8, lsl #26
   29ce0:	andeq	r9, r2, r0, lsr #26
   29ce4:	andeq	r9, r2, ip, ror #26
   29ce8:	muleq	r2, ip, sp
   29cec:	strdeq	r9, [r2], -ip
   29cf0:	andeq	r9, r2, r4, asr #27
   29cf4:	andeq	r9, r2, r0, lsl #28
   29cf8:	andeq	r9, r2, r4, asr lr
   29cfc:	andeq	r9, r2, r8, lsr #29
   29d00:	andeq	r9, r2, ip, lsr pc
   29d04:			; <UNDEFINED> instruction: 0x00029fb8
   29d08:	ldrh	r3, [r4, #8]
   29d0c:	cmp	r3, #5
   29d10:	ldrne	r2, [pc, #808]	; 2a040 <__flatcc_fb_coerce_scalar_type@@Base+0x414>
   29d14:	bne	29d4c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29d18:	mov	r0, #0
   29d1c:	b	29d64 <__flatcc_fb_coerce_scalar_type@@Base+0x138>
   29d20:	ldrh	r3, [r4, #8]
   29d24:	cmp	r3, #5
   29d28:	ldrne	r2, [pc, #788]	; 2a044 <__flatcc_fb_coerce_scalar_type@@Base+0x418>
   29d2c:	bne	29d4c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29d30:	mov	r1, #0
   29d34:	mvn	r0, #0
   29d38:	ldrd	r2, [r4]
   29d3c:	cmp	r3, r1
   29d40:	cmpeq	r2, r0
   29d44:	ldrhi	r2, [pc, #764]	; 2a048 <__flatcc_fb_coerce_scalar_type@@Base+0x41c>
   29d48:	bls	29d18 <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   29d4c:	mov	r0, r5
   29d50:	ldr	r1, [sl, #4]
   29d54:	bl	29c10 <__flatcc_fb_build_schema@@Base+0x1778>
   29d58:	mov	r3, #1
   29d5c:	mvn	r0, #0
   29d60:	strh	r3, [r4, #8]
   29d64:	vpop	{d8}
   29d68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   29d6c:	ldrh	r3, [r4, #8]
   29d70:	cmp	r3, #5
   29d74:	ldrne	r2, [pc, #720]	; 2a04c <__flatcc_fb_coerce_scalar_type@@Base+0x420>
   29d78:	bne	29d4c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29d7c:	mov	r1, #0
   29d80:	movw	r0, #65535	; 0xffff
   29d84:	ldrd	r2, [r4]
   29d88:	cmp	r3, r1
   29d8c:	cmpeq	r2, r0
   29d90:	ldrhi	r2, [pc, #696]	; 2a050 <__flatcc_fb_coerce_scalar_type@@Base+0x424>
   29d94:	bls	29d18 <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   29d98:	b	29d4c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29d9c:	ldrh	r3, [r4, #8]
   29da0:	cmp	r3, #5
   29da4:	ldrne	r2, [pc, #680]	; 2a054 <__flatcc_fb_coerce_scalar_type@@Base+0x428>
   29da8:	bne	29d4c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29dac:	ldrd	r2, [r4]
   29db0:	cmp	r3, #0
   29db4:	cmpeq	r2, #255	; 0xff
   29db8:	ldrhi	r2, [pc, #664]	; 2a058 <__flatcc_fb_coerce_scalar_type@@Base+0x42c>
   29dbc:	bls	29d18 <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   29dc0:	b	29d4c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29dc4:	ldrh	r3, [r4, #8]
   29dc8:	cmp	r3, #4
   29dcc:	beq	29d18 <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   29dd0:	cmp	r3, #5
   29dd4:	bne	29df8 <__flatcc_fb_coerce_scalar_type@@Base+0x1cc>
   29dd8:	ldrd	r2, [r4]
   29ddc:	cmp	r2, #0
   29de0:	sbcs	r3, r3, #0
   29de4:	ldrlt	r2, [pc, #624]	; 2a05c <__flatcc_fb_coerce_scalar_type@@Base+0x430>
   29de8:	blt	29d4c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29dec:	mov	r3, #4
   29df0:	strh	r3, [r4, #8]
   29df4:	b	29d18 <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   29df8:	ldr	r2, [pc, #608]	; 2a060 <__flatcc_fb_coerce_scalar_type@@Base+0x434>
   29dfc:	b	29d4c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29e00:	ldrh	r3, [r4, #8]
   29e04:	cmp	r3, #4
   29e08:	bne	29e2c <__flatcc_fb_coerce_scalar_type@@Base+0x200>
   29e0c:	ldrd	r2, [r4]
   29e10:	mov	r0, #-2147483648	; 0x80000000
   29e14:	mvn	r1, #0
   29e18:	cmp	r2, r0
   29e1c:	sbcs	r3, r3, r1
   29e20:	ldrlt	r2, [pc, #572]	; 2a064 <__flatcc_fb_coerce_scalar_type@@Base+0x438>
   29e24:	bge	29d18 <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   29e28:	b	29d4c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29e2c:	cmp	r3, #5
   29e30:	bne	29e4c <__flatcc_fb_coerce_scalar_type@@Base+0x220>
   29e34:	ldrd	r2, [r4]
   29e38:	cmp	r2, #-2147483648	; 0x80000000
   29e3c:	sbcs	r3, r3, #0
   29e40:	ldrge	r2, [pc, #544]	; 2a068 <__flatcc_fb_coerce_scalar_type@@Base+0x43c>
   29e44:	blt	29dec <__flatcc_fb_coerce_scalar_type@@Base+0x1c0>
   29e48:	b	29d4c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29e4c:	ldr	r2, [pc, #536]	; 2a06c <__flatcc_fb_coerce_scalar_type@@Base+0x440>
   29e50:	b	29d4c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29e54:	ldrh	r3, [r4, #8]
   29e58:	cmp	r3, #4
   29e5c:	bne	29e80 <__flatcc_fb_coerce_scalar_type@@Base+0x254>
   29e60:	ldr	r0, [pc, #520]	; 2a070 <__flatcc_fb_coerce_scalar_type@@Base+0x444>
   29e64:	mvn	r1, #0
   29e68:	ldrd	r2, [r4]
   29e6c:	cmp	r2, r0
   29e70:	sbcs	r3, r3, r1
   29e74:	ldrlt	r2, [pc, #504]	; 2a074 <__flatcc_fb_coerce_scalar_type@@Base+0x448>
   29e78:	bge	29d18 <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   29e7c:	b	29d4c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29e80:	cmp	r3, #5
   29e84:	bne	29ea0 <__flatcc_fb_coerce_scalar_type@@Base+0x274>
   29e88:	ldrd	r2, [r4]
   29e8c:	cmp	r2, #32768	; 0x8000
   29e90:	sbcs	r3, r3, #0
   29e94:	ldrge	r2, [pc, #476]	; 2a078 <__flatcc_fb_coerce_scalar_type@@Base+0x44c>
   29e98:	blt	29dec <__flatcc_fb_coerce_scalar_type@@Base+0x1c0>
   29e9c:	b	29d4c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29ea0:	ldr	r2, [pc, #468]	; 2a07c <__flatcc_fb_coerce_scalar_type@@Base+0x450>
   29ea4:	b	29d4c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29ea8:	ldrh	r3, [r4, #8]
   29eac:	cmp	r3, #4
   29eb0:	bne	29ed4 <__flatcc_fb_coerce_scalar_type@@Base+0x2a8>
   29eb4:	ldrd	r2, [r4]
   29eb8:	mvn	r0, #127	; 0x7f
   29ebc:	mvn	r1, #0
   29ec0:	cmp	r2, r0
   29ec4:	sbcs	r3, r3, r1
   29ec8:	ldrlt	r2, [pc, #432]	; 2a080 <__flatcc_fb_coerce_scalar_type@@Base+0x454>
   29ecc:	bge	29d18 <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   29ed0:	b	29d4c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29ed4:	cmp	r3, #5
   29ed8:	bne	29ef4 <__flatcc_fb_coerce_scalar_type@@Base+0x2c8>
   29edc:	ldrd	r2, [r4]
   29ee0:	cmp	r2, #128	; 0x80
   29ee4:	sbcs	r3, r3, #0
   29ee8:	ldrge	r2, [pc, #404]	; 2a084 <__flatcc_fb_coerce_scalar_type@@Base+0x458>
   29eec:	blt	29dec <__flatcc_fb_coerce_scalar_type@@Base+0x1c0>
   29ef0:	b	29d4c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29ef4:	ldr	r2, [pc, #396]	; 2a088 <__flatcc_fb_coerce_scalar_type@@Base+0x45c>
   29ef8:	b	29d4c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29efc:	ldrh	r3, [r4, #8]
   29f00:	cmp	r3, #5
   29f04:	bne	29f2c <__flatcc_fb_coerce_scalar_type@@Base+0x300>
   29f08:	ldr	r3, [r5, #144]	; 0x90
   29f0c:	cmp	r3, #0
   29f10:	beq	29f34 <__flatcc_fb_coerce_scalar_type@@Base+0x308>
   29f14:	ldrd	r2, [r4]
   29f18:	cmp	r3, #0
   29f1c:	cmpeq	r2, #1
   29f20:	ldrhi	r2, [pc, #356]	; 2a08c <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   29f24:	bls	29d18 <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   29f28:	b	29d4c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29f2c:	cmp	r3, #6
   29f30:	beq	29d18 <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   29f34:	ldr	r2, [pc, #340]	; 2a090 <__flatcc_fb_coerce_scalar_type@@Base+0x464>
   29f38:	b	29d4c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29f3c:	ldrh	r3, [r4, #8]
   29f40:	cmp	r3, #4
   29f44:	beq	29f60 <__flatcc_fb_coerce_scalar_type@@Base+0x334>
   29f48:	cmp	r3, #5
   29f4c:	beq	29f98 <__flatcc_fb_coerce_scalar_type@@Base+0x36c>
   29f50:	cmp	r3, #3
   29f54:	ldrne	r2, [pc, #312]	; 2a094 <__flatcc_fb_coerce_scalar_type@@Base+0x468>
   29f58:	bne	29d4c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29f5c:	b	29d18 <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   29f60:	ldrd	r6, [r4]
   29f64:	mov	r0, r6
   29f68:	mov	r1, r7
   29f6c:	bl	2ed00 <fb_value_set_visit@@Base+0x364>
   29f70:	mov	r8, r0
   29f74:	mov	r9, r1
   29f78:	bl	2f028 <fb_value_set_visit@@Base+0x68c>
   29f7c:	cmp	r7, r1
   29f80:	cmpeq	r6, r0
   29f84:	ldrne	r2, [pc, #268]	; 2a098 <__flatcc_fb_coerce_scalar_type@@Base+0x46c>
   29f88:	bne	29d4c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29f8c:	strd	r8, [r4]
   29f90:	mov	r3, #3
   29f94:	b	29df0 <__flatcc_fb_coerce_scalar_type@@Base+0x1c4>
   29f98:	ldrd	r6, [r4]
   29f9c:	mov	r0, r6
   29fa0:	mov	r1, r7
   29fa4:	bl	2ecec <fb_value_set_visit@@Base+0x350>
   29fa8:	mov	r8, r0
   29fac:	mov	r9, r1
   29fb0:	bl	2f098 <fb_value_set_visit@@Base+0x6fc>
   29fb4:	b	29f7c <__flatcc_fb_coerce_scalar_type@@Base+0x350>
   29fb8:	ldrh	r3, [r4, #8]
   29fbc:	cmp	r3, #4
   29fc0:	beq	29fdc <__flatcc_fb_coerce_scalar_type@@Base+0x3b0>
   29fc4:	cmp	r3, #5
   29fc8:	beq	2a010 <__flatcc_fb_coerce_scalar_type@@Base+0x3e4>
   29fcc:	cmp	r3, #3
   29fd0:	ldrne	r2, [pc, #196]	; 2a09c <__flatcc_fb_coerce_scalar_type@@Base+0x470>
   29fd4:	bne	29d4c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29fd8:	b	29d18 <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   29fdc:	ldrd	r6, [r4]
   29fe0:	mov	r0, r6
   29fe4:	mov	r1, r7
   29fe8:	bl	2ef34 <fb_value_set_visit@@Base+0x598>
   29fec:	vmov	s16, r0
   29ff0:	bl	2effc <fb_value_set_visit@@Base+0x660>
   29ff4:	cmp	r7, r1
   29ff8:	cmpeq	r6, r0
   29ffc:	ldrne	r2, [pc, #156]	; 2a0a0 <__flatcc_fb_coerce_scalar_type@@Base+0x474>
   2a000:	bne	29d4c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   2a004:	vcvt.f64.f32	d8, s16
   2a008:	vstr	d8, [r4]
   2a00c:	b	29f90 <__flatcc_fb_coerce_scalar_type@@Base+0x364>
   2a010:	ldrd	r6, [r4]
   2a014:	mov	r0, r6
   2a018:	mov	r1, r7
   2a01c:	bl	2ef24 <fb_value_set_visit@@Base+0x588>
   2a020:	vmov	s16, r0
   2a024:	bl	2f058 <fb_value_set_visit@@Base+0x6bc>
   2a028:	b	29ff4 <__flatcc_fb_coerce_scalar_type@@Base+0x3c8>
   2a02c:	ldr	r2, [pc, #112]	; 2a0a4 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2a030:	b	29d4c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   2a034:	andeq	r9, r4, r0, asr r8
   2a038:	andeq	r9, r4, pc, ror #16
   2a03c:			; <UNDEFINED> instruction: 0x000498b5
   2a040:	ldrdeq	r9, [r4], -r4
   2a044:	andeq	r9, r4, r8, lsl #18
   2a048:	andeq	r9, r4, r0, asr #18
   2a04c:	andeq	r9, r4, sp, asr r9
   2a050:	muleq	r4, r7, r9
   2a054:			; <UNDEFINED> instruction: 0x000499b6
   2a058:	andeq	r9, r4, lr, ror #19
   2a05c:	andeq	r9, r4, fp, lsl #20
   2a060:	andeq	r9, r4, sl, lsr #20
   2a064:	andeq	r9, r4, r4, asr sl
   2a068:	andeq	r9, r4, r0, ror sl
   2a06c:	andeq	r9, r4, fp, lsl #21
   2a070:			; <UNDEFINED> instruction: 0xffff8000
   2a074:			; <UNDEFINED> instruction: 0x00049ab8
   2a078:	ldrdeq	r9, [r4], -r6
   2a07c:	strdeq	r9, [r4], -r3
   2a080:	andeq	r9, r4, r2, lsr #22
   2a084:	andeq	r9, r4, lr, lsr fp
   2a088:	andeq	r9, r4, r9, asr fp
   2a08c:	andeq	r9, r4, r6, lsl #23
   2a090:	andeq	r9, r4, r4, asr #23
   2a094:	andeq	r9, r4, sl, lsr #24
   2a098:	strdeq	r9, [r4], -sl
   2a09c:	muleq	r4, r2, ip
   2a0a0:	andeq	r9, r4, r3, ror #24
   2a0a4:	andeq	r9, r4, sl, asr #25
   2a0a8:	ldr	ip, [r0, #28]
   2a0ac:	ldrd	r2, [r0, #60]	; 0x3c
   2a0b0:	sub	r3, r3, ip
   2a0b4:	add	r2, r2, ip
   2a0b8:	cmp	r3, r1
   2a0bc:	strls	r3, [r0, #24]
   2a0c0:	strhi	r1, [r0, #24]
   2a0c4:	ldr	r3, [r0, #32]
   2a0c8:	str	r2, [r0, #16]
   2a0cc:	str	r1, [r3, #4]
   2a0d0:	bx	lr
   2a0d4:	push	{r0, r1, r4, r5, r6, lr}
   2a0d8:	mov	r6, r2
   2a0dc:	mov	r3, #1
   2a0e0:	mov	r4, r0
   2a0e4:	ldr	r2, [r0, #28]
   2a0e8:	str	r3, [sp]
   2a0ec:	ldr	r5, [r0, #48]	; 0x30
   2a0f0:	add	r2, r1, r2
   2a0f4:	add	r1, r0, #60	; 0x3c
   2a0f8:	ldr	r0, [r0, #40]	; 0x28
   2a0fc:	blx	r5
   2a100:	subs	r5, r0, #0
   2a104:	mvnne	r5, #0
   2a108:	bne	2a118 <__flatcc_fb_coerce_scalar_type@@Base+0x4ec>
   2a10c:	mov	r1, r6
   2a110:	mov	r0, r4
   2a114:	bl	2a0a8 <__flatcc_fb_coerce_scalar_type@@Base+0x47c>
   2a118:	mov	r0, r5
   2a11c:	add	sp, sp, #8
   2a120:	pop	{r4, r5, r6, pc}
   2a124:	push	{r4, r5, r6, lr}
   2a128:	mov	r4, r0
   2a12c:	ldr	r5, [r0, #20]
   2a130:	ldr	r3, [r0, #24]
   2a134:	add	r1, r5, r1
   2a138:	cmp	r1, r3
   2a13c:	str	r1, [r0, #20]
   2a140:	bcs	2a150 <__flatcc_fb_coerce_scalar_type@@Base+0x524>
   2a144:	ldr	r0, [r4, #16]
   2a148:	add	r0, r0, r5
   2a14c:	pop	{r4, r5, r6, pc}
   2a150:	mvn	r2, #3
   2a154:	add	r1, r1, #1
   2a158:	bl	2a0d4 <__flatcc_fb_coerce_scalar_type@@Base+0x4a8>
   2a15c:	cmp	r0, #0
   2a160:	beq	2a144 <__flatcc_fb_coerce_scalar_type@@Base+0x518>
   2a164:	mov	r0, #0
   2a168:	pop	{r4, r5, r6, pc}
   2a16c:	push	{r4, lr}
   2a170:	mov	r1, #0
   2a174:	mov	r4, r0
   2a178:	ldr	r2, [r0, #20]
   2a17c:	ldr	r0, [r0, #16]
   2a180:	bl	140d4 <memset@plt>
   2a184:	ldr	r3, [r4, #32]
   2a188:	mov	r0, r4
   2a18c:	ldmib	r3, {r1, r2}
   2a190:	str	r2, [r4, #20]
   2a194:	ldr	r2, [r3]
   2a198:	str	r2, [r4, #28]
   2a19c:	bl	2a0a8 <__flatcc_fb_coerce_scalar_type@@Base+0x47c>
   2a1a0:	ldrh	r3, [r4, #130]	; 0x82
   2a1a4:	ldrh	r2, [r4, #128]	; 0x80
   2a1a8:	cmp	r2, r3
   2a1ac:	strhcc	r3, [r4, #128]	; 0x80
   2a1b0:	ldr	r3, [r4, #32]
   2a1b4:	ldrh	r2, [r3, #12]
   2a1b8:	sub	r3, r3, #36	; 0x24
   2a1bc:	str	r3, [r4, #32]
   2a1c0:	ldr	r3, [r4, #156]	; 0x9c
   2a1c4:	strh	r2, [r4, #130]	; 0x82
   2a1c8:	sub	r3, r3, #1
   2a1cc:	str	r3, [r4, #156]	; 0x9c
   2a1d0:	pop	{r4, pc}
   2a1d4:	ldr	r3, [r0, #20]
   2a1d8:	mov	r2, r1
   2a1dc:	mov	r1, #0
   2a1e0:	sub	r3, r3, r2
   2a1e4:	str	r3, [r0, #20]
   2a1e8:	ldr	r0, [r0, #16]
   2a1ec:	add	r0, r0, r3
   2a1f0:	b	140d4 <memset@plt>
   2a1f4:	push	{r4, r5, r6, lr}
   2a1f8:	mov	r6, r1
   2a1fc:	mov	r1, r2
   2a200:	mov	r4, r2
   2a204:	bl	2a124 <__flatcc_fb_coerce_scalar_type@@Base+0x4f8>
   2a208:	subs	r5, r0, #0
   2a20c:	beq	2a21c <__flatcc_fb_coerce_scalar_type@@Base+0x5f0>
   2a210:	mov	r2, r4
   2a214:	mov	r1, r6
   2a218:	bl	13ffc <memcpy@plt>
   2a21c:	mov	r0, r5
   2a220:	pop	{r4, r5, r6, pc}
   2a224:	push	{r0, r1, r4, lr}
   2a228:	cmp	r0, #4
   2a22c:	mov	r4, #0
   2a230:	mov	r2, r1
   2a234:	movcs	r1, r0
   2a238:	movcc	r1, #4
   2a23c:	add	r0, sp, #4
   2a240:	str	r4, [sp, #4]
   2a244:	bl	140c8 <posix_memalign@plt>
   2a248:	cmp	r0, r4
   2a24c:	beq	2a264 <__flatcc_fb_coerce_scalar_type@@Base+0x638>
   2a250:	ldr	r0, [sp, #4]
   2a254:	cmp	r0, r4
   2a258:	beq	2a264 <__flatcc_fb_coerce_scalar_type@@Base+0x638>
   2a25c:	bl	13ff0 <free@plt>
   2a260:	str	r4, [sp, #4]
   2a264:	ldr	r0, [sp, #4]
   2a268:	add	sp, sp, #8
   2a26c:	pop	{r4, pc}

0002a270 <flatcc_builder_default_alloc@@Base>:
   2a270:	push	{r4, r5, r6, r7, r8, lr}
   2a274:	subs	r6, r2, #0
   2a278:	mov	r5, r1
   2a27c:	bne	2a2a0 <flatcc_builder_default_alloc@@Base+0x30>
   2a280:	ldr	r0, [r1]
   2a284:	cmp	r0, #0
   2a288:	popeq	{r4, r5, r6, r7, r8, pc}
   2a28c:	bl	13ff0 <free@plt>
   2a290:	str	r6, [r5]
   2a294:	str	r6, [r5, #4]
   2a298:	mov	r0, #0
   2a29c:	pop	{r4, r5, r6, r7, r8, pc}
   2a2a0:	ldr	r2, [sp, #24]
   2a2a4:	mov	r7, r3
   2a2a8:	sub	r2, r2, #1
   2a2ac:	cmp	r2, #6
   2a2b0:	ldrls	pc, [pc, r2, lsl #2]
   2a2b4:	b	2a348 <flatcc_builder_default_alloc@@Base+0xd8>
   2a2b8:	andeq	sl, r2, r0, asr r3
   2a2bc:	andeq	sl, r2, r8, asr #6
   2a2c0:	andeq	sl, r2, r8, asr #6
   2a2c4:	andeq	sl, r2, r8, lsr r3
   2a2c8:	ldrdeq	sl, [r2], -r4
   2a2cc:	andeq	sl, r2, r8, asr #6
   2a2d0:	andeq	sl, r2, r0, asr #6
   2a2d4:	mov	r4, r6
   2a2d8:	cmp	r6, r4
   2a2dc:	bhi	2a358 <flatcc_builder_default_alloc@@Base+0xe8>
   2a2e0:	ldr	r2, [r5, #4]
   2a2e4:	cmp	r6, r2
   2a2e8:	bhi	2a2f4 <flatcc_builder_default_alloc@@Base+0x84>
   2a2ec:	cmp	r4, r2, lsr #1
   2a2f0:	bls	2a298 <flatcc_builder_default_alloc@@Base+0x28>
   2a2f4:	mov	r1, r4
   2a2f8:	ldr	r0, [r5]
   2a2fc:	bl	1402c <realloc@plt>
   2a300:	subs	r6, r0, #0
   2a304:	beq	2a360 <flatcc_builder_default_alloc@@Base+0xf0>
   2a308:	cmp	r7, #0
   2a30c:	beq	2a32c <flatcc_builder_default_alloc@@Base+0xbc>
   2a310:	ldr	r0, [r5, #4]
   2a314:	cmp	r4, r0
   2a318:	bls	2a32c <flatcc_builder_default_alloc@@Base+0xbc>
   2a31c:	sub	r2, r4, r0
   2a320:	mov	r1, #0
   2a324:	add	r0, r6, r0
   2a328:	bl	140d4 <memset@plt>
   2a32c:	str	r6, [r5]
   2a330:	str	r4, [r5, #4]
   2a334:	b	2a298 <flatcc_builder_default_alloc@@Base+0x28>
   2a338:	mov	r4, #288	; 0x120
   2a33c:	b	2a2d8 <flatcc_builder_default_alloc@@Base+0x68>
   2a340:	mov	r4, #64	; 0x40
   2a344:	b	2a2d8 <flatcc_builder_default_alloc@@Base+0x68>
   2a348:	mov	r4, #32
   2a34c:	b	2a2d8 <flatcc_builder_default_alloc@@Base+0x68>
   2a350:	mov	r4, #256	; 0x100
   2a354:	b	2a2d8 <flatcc_builder_default_alloc@@Base+0x68>
   2a358:	lsl	r4, r4, #1
   2a35c:	b	2a2d8 <flatcc_builder_default_alloc@@Base+0x68>
   2a360:	mvn	r0, #0
   2a364:	pop	{r4, r5, r6, r7, r8, pc}
   2a368:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2a36c:	add	r6, r0, #52	; 0x34
   2a370:	mov	r4, r1
   2a374:	add	r1, r6, r1, lsl #3
   2a378:	mov	r5, r2
   2a37c:	add	r2, r2, r3
   2a380:	ldr	r3, [r1, #4]
   2a384:	cmp	r2, r3
   2a388:	bls	2a3bc <flatcc_builder_default_alloc@@Base+0x14c>
   2a38c:	str	r4, [sp]
   2a390:	ldr	r3, [sp, #32]
   2a394:	ldr	r7, [r0, #48]	; 0x30
   2a398:	ldr	r0, [r0, #40]	; 0x28
   2a39c:	blx	r7
   2a3a0:	cmp	r0, #0
   2a3a4:	beq	2a3bc <flatcc_builder_default_alloc@@Base+0x14c>
   2a3a8:	ldr	r3, [pc, #28]	; 2a3cc <flatcc_builder_default_alloc@@Base+0x15c>
   2a3ac:	mov	r2, #308	; 0x134
   2a3b0:	ldr	r1, [pc, #24]	; 2a3d0 <flatcc_builder_default_alloc@@Base+0x160>
   2a3b4:	ldr	r0, [pc, #24]	; 2a3d4 <flatcc_builder_default_alloc@@Base+0x164>
   2a3b8:	bl	1417c <__assert_fail@plt>
   2a3bc:	ldr	r0, [r6, r4, lsl #3]
   2a3c0:	add	r0, r0, r5
   2a3c4:	add	sp, sp, #12
   2a3c8:	pop	{r4, r5, r6, r7, pc}
   2a3cc:	ldrdeq	r9, [r4], -pc	; <UNPREDICTABLE>
   2a3d0:	ldrdeq	sl, [r4], -lr
   2a3d4:	andeq	r9, r3, fp, lsr r2
   2a3d8:	ldrd	r2, [r0, #156]	; 0x9c
   2a3dc:	push	{r0, r1, r4, r5, r6, lr}
   2a3e0:	mov	r5, r1
   2a3e4:	mov	r4, r0
   2a3e8:	add	r1, r2, #1
   2a3ec:	cmp	r1, r3
   2a3f0:	str	r1, [r0, #156]	; 0x9c
   2a3f4:	ble	2a4a0 <flatcc_builder_default_alloc@@Base+0x230>
   2a3f8:	ldr	r3, [r0, #176]	; 0xb0
   2a3fc:	cmp	r1, r3
   2a400:	cmpgt	r3, #0
   2a404:	movgt	r3, #1
   2a408:	movle	r3, #0
   2a40c:	ble	2a41c <flatcc_builder_default_alloc@@Base+0x1ac>
   2a410:	mvn	r0, #0
   2a414:	add	sp, sp, #8
   2a418:	pop	{r4, r5, r6, pc}
   2a41c:	mov	r6, #36	; 0x24
   2a420:	mov	r1, #4
   2a424:	str	r3, [sp]
   2a428:	mov	r3, r6
   2a42c:	mul	r2, r6, r2
   2a430:	bl	2a368 <flatcc_builder_default_alloc@@Base+0xf8>
   2a434:	cmp	r0, #0
   2a438:	str	r0, [r4, #32]
   2a43c:	beq	2a410 <flatcc_builder_default_alloc@@Base+0x1a0>
   2a440:	ldr	r3, [r4, #88]	; 0x58
   2a444:	ldr	r2, [r4, #176]	; 0xb0
   2a448:	udiv	r3, r3, r6
   2a44c:	cmp	r2, #0
   2a450:	cmpgt	r3, r2
   2a454:	movgt	r3, r2
   2a458:	str	r3, [r4, #160]	; 0xa0
   2a45c:	ldrh	r1, [r4, #130]	; 0x82
   2a460:	mvn	r0, #3
   2a464:	ldr	r3, [r4, #20]
   2a468:	ldr	r2, [r4, #32]
   2a46c:	str	r3, [r2, #8]
   2a470:	strh	r1, [r2, #12]
   2a474:	ldr	r1, [r4, #28]
   2a478:	strh	r5, [r4, #130]	; 0x82
   2a47c:	add	r3, r3, r1
   2a480:	str	r0, [r2, #4]
   2a484:	mov	r0, #0
   2a488:	add	r3, r3, #7
   2a48c:	str	r1, [r2]
   2a490:	bic	r3, r3, #7
   2a494:	str	r0, [r4, #20]
   2a498:	str	r3, [r4, #28]
   2a49c:	b	2a414 <flatcc_builder_default_alloc@@Base+0x1a4>
   2a4a0:	ldr	r3, [r0, #32]
   2a4a4:	add	r3, r3, #36	; 0x24
   2a4a8:	str	r3, [r0, #32]
   2a4ac:	b	2a45c <flatcc_builder_default_alloc@@Base+0x1ec>
   2a4b0:	ldr	r3, [r0, #32]
   2a4b4:	push	{r0, r1, r2, r4, r5, lr}
   2a4b8:	add	r1, r1, #2
   2a4bc:	mov	r4, r0
   2a4c0:	lsl	r5, r1, #1
   2a4c4:	ldrh	r1, [r3, #28]
   2a4c8:	ldr	r2, [r3, #16]
   2a4cc:	mov	r3, #1
   2a4d0:	str	r3, [sp]
   2a4d4:	mov	r3, r5
   2a4d8:	add	r2, r2, r1, lsl #1
   2a4dc:	mov	r1, #0
   2a4e0:	bl	2a368 <flatcc_builder_default_alloc@@Base+0xf8>
   2a4e4:	cmp	r0, #0
   2a4e8:	streq	r0, [r4, #4]
   2a4ec:	mvneq	r0, #0
   2a4f0:	beq	2a52c <flatcc_builder_default_alloc@@Base+0x2bc>
   2a4f4:	ldr	r2, [r4, #32]
   2a4f8:	add	r0, r0, #4
   2a4fc:	mov	r3, #0
   2a500:	mov	r1, #3
   2a504:	str	r0, [r4, #4]
   2a508:	mov	r0, r4
   2a50c:	str	r3, [sp]
   2a510:	sub	r3, r5, #3
   2a514:	ldr	r2, [r2, #20]
   2a518:	bl	2a368 <flatcc_builder_default_alloc@@Base+0xf8>
   2a51c:	str	r0, [r4]
   2a520:	clz	r0, r0
   2a524:	lsr	r0, r0, #5
   2a528:	rsb	r0, r0, #0
   2a52c:	add	sp, sp, #12
   2a530:	pop	{r4, r5, pc}
   2a534:	push	{r0, r1, r2, r4, r5, lr}
   2a538:	ldr	r3, [r1]
   2a53c:	ldr	r4, [r0, #140]	; 0x8c
   2a540:	add	r2, r3, r4
   2a544:	cmp	r2, r4
   2a548:	ldrlt	r3, [pc, #76]	; 2a59c <flatcc_builder_default_alloc@@Base+0x32c>
   2a54c:	str	r2, [r0, #140]	; 0x8c
   2a550:	movwlt	r2, #673	; 0x2a1
   2a554:	blt	2a584 <flatcc_builder_default_alloc@@Base+0x314>
   2a558:	add	r1, r1, #8
   2a55c:	str	r3, [sp]
   2a560:	mov	r3, r4
   2a564:	ldr	r2, [r1, #-4]
   2a568:	ldr	r5, [r0, #44]	; 0x2c
   2a56c:	ldr	r0, [r0, #36]	; 0x24
   2a570:	blx	r5
   2a574:	cmp	r0, #0
   2a578:	beq	2a590 <flatcc_builder_default_alloc@@Base+0x320>
   2a57c:	ldr	r3, [pc, #24]	; 2a59c <flatcc_builder_default_alloc@@Base+0x32c>
   2a580:	movw	r2, #677	; 0x2a5
   2a584:	ldr	r1, [pc, #20]	; 2a5a0 <flatcc_builder_default_alloc@@Base+0x330>
   2a588:	ldr	r0, [pc, #20]	; 2a5a4 <flatcc_builder_default_alloc@@Base+0x334>
   2a58c:	bl	1417c <__assert_fail@plt>
   2a590:	add	r0, r4, #1
   2a594:	add	sp, sp, #12
   2a598:	pop	{r4, r5, pc}
   2a59c:	andeq	r9, r4, lr, ror #25
   2a5a0:	ldrdeq	sl, [r4], -lr
   2a5a4:	andeq	r9, r3, fp, lsr r2
   2a5a8:	cmp	r2, #0
   2a5ac:	bne	2a5bc <flatcc_builder_default_alloc@@Base+0x34c>
   2a5b0:	ldrh	r2, [r0, #132]	; 0x84
   2a5b4:	cmp	r2, #0
   2a5b8:	moveq	r2, #1
   2a5bc:	ldrh	ip, [r1]
   2a5c0:	cmp	ip, #3
   2a5c4:	movls	ip, #4
   2a5c8:	strhls	ip, [r1]
   2a5cc:	ldrh	ip, [r1]
   2a5d0:	cmp	ip, r2
   2a5d4:	strhcc	r2, [r1]
   2a5d8:	cmp	r3, #0
   2a5dc:	bne	2a63c <flatcc_builder_default_alloc@@Base+0x3cc>
   2a5e0:	ldr	r3, [r0, #140]	; 0x8c
   2a5e4:	sub	r2, r2, #1
   2a5e8:	ands	r2, r2, r3
   2a5ec:	beq	2a63c <flatcc_builder_default_alloc@@Base+0x3cc>
   2a5f0:	push	{r4, lr}
   2a5f4:	mov	r3, #1
   2a5f8:	sub	sp, sp, #72	; 0x48
   2a5fc:	mov	r1, sp
   2a600:	ldr	r4, [pc, #60]	; 2a644 <flatcc_builder_default_alloc@@Base+0x3d4>
   2a604:	strd	r2, [sp]
   2a608:	str	r4, [sp, #8]
   2a60c:	str	r2, [sp, #12]
   2a610:	bl	2a534 <flatcc_builder_default_alloc@@Base+0x2c4>
   2a614:	cmp	r0, #0
   2a618:	bne	2a630 <flatcc_builder_default_alloc@@Base+0x3c0>
   2a61c:	add	r3, r4, #512	; 0x200
   2a620:	movw	r2, #702	; 0x2be
   2a624:	ldr	r1, [pc, #28]	; 2a648 <flatcc_builder_default_alloc@@Base+0x3d8>
   2a628:	ldr	r0, [pc, #28]	; 2a64c <flatcc_builder_default_alloc@@Base+0x3dc>
   2a62c:	bl	1417c <__assert_fail@plt>
   2a630:	mov	r0, #0
   2a634:	add	sp, sp, #72	; 0x48
   2a638:	pop	{r4, pc}
   2a63c:	mov	r0, #0
   2a640:	bx	lr
   2a644:	strdeq	r9, [r4], -r8
   2a648:	ldrdeq	sl, [r4], -lr
   2a64c:	andeq	r9, r3, fp, lsr r2
   2a650:	ldr	r3, [r1]
   2a654:	push	{r0, r1, r4, r5, r6, lr}
   2a658:	ldr	r2, [r0, #136]	; 0x88
   2a65c:	sub	r4, r2, r3
   2a660:	cmp	r2, r4
   2a664:	ldrle	r3, [pc, #80]	; 2a6bc <flatcc_builder_default_alloc@@Base+0x44c>
   2a668:	movwle	r2, #647	; 0x287
   2a66c:	ble	2a6a0 <flatcc_builder_default_alloc@@Base+0x430>
   2a670:	mov	r5, r0
   2a674:	add	r1, r1, #8
   2a678:	str	r3, [sp]
   2a67c:	mov	r3, r4
   2a680:	ldr	r2, [r1, #-4]
   2a684:	ldr	r0, [r0, #36]	; 0x24
   2a688:	ldr	r6, [r5, #44]	; 0x2c
   2a68c:	blx	r6
   2a690:	cmp	r0, #0
   2a694:	beq	2a6ac <flatcc_builder_default_alloc@@Base+0x43c>
   2a698:	ldr	r3, [pc, #28]	; 2a6bc <flatcc_builder_default_alloc@@Base+0x44c>
   2a69c:	movw	r2, #651	; 0x28b
   2a6a0:	ldr	r1, [pc, #24]	; 2a6c0 <flatcc_builder_default_alloc@@Base+0x450>
   2a6a4:	ldr	r0, [pc, #24]	; 2a6c4 <flatcc_builder_default_alloc@@Base+0x454>
   2a6a8:	bl	1417c <__assert_fail@plt>
   2a6ac:	mov	r0, r4
   2a6b0:	str	r4, [r5, #136]	; 0x88
   2a6b4:	add	sp, sp, #8
   2a6b8:	pop	{r4, r5, r6, pc}
   2a6bc:	andeq	r9, r4, r7, lsl #30
   2a6c0:	ldrdeq	sl, [r4], -lr
   2a6c4:	andeq	r9, r3, fp, lsr r2
   2a6c8:	ldr	r3, [r0, #20]
   2a6cc:	adds	r1, r3, r1
   2a6d0:	movcs	r3, #1
   2a6d4:	movcc	r3, #0
   2a6d8:	cmp	r1, r2
   2a6dc:	movls	r2, r3
   2a6e0:	orrhi	r2, r3, #1
   2a6e4:	cmp	r2, #0
   2a6e8:	beq	2a704 <flatcc_builder_default_alloc@@Base+0x494>
   2a6ec:	push	{r4, lr}
   2a6f0:	mov	r2, #892	; 0x37c
   2a6f4:	ldr	r3, [pc, #20]	; 2a710 <flatcc_builder_default_alloc@@Base+0x4a0>
   2a6f8:	ldr	r1, [pc, #20]	; 2a714 <flatcc_builder_default_alloc@@Base+0x4a4>
   2a6fc:	ldr	r0, [pc, #20]	; 2a718 <flatcc_builder_default_alloc@@Base+0x4a8>
   2a700:	bl	1417c <__assert_fail@plt>
   2a704:	str	r1, [r0, #20]
   2a708:	mov	r0, r2
   2a70c:	bx	lr
   2a710:	andeq	r9, r4, r2, lsl pc
   2a714:	ldrdeq	sl, [r4], -lr
   2a718:	andeq	sl, r4, r4, lsr #8
   2a71c:	ldrh	ip, [r0, #128]	; 0x80
   2a720:	push	{r4, r5, r6, lr}
   2a724:	sub	sp, sp, #80	; 0x50
   2a728:	ldr	r5, [r0, #136]	; 0x88
   2a72c:	cmp	ip, #3
   2a730:	movls	ip, #4
   2a734:	strhls	ip, [r0, #128]	; 0x80
   2a738:	mov	ip, #4
   2a73c:	add	lr, sp, ip
   2a740:	and	r4, r5, #3
   2a744:	stmib	sp, {r2, ip}
   2a748:	str	lr, [sp, #16]
   2a74c:	str	ip, [sp, #20]
   2a750:	mov	ip, #1
   2a754:	str	ip, [sp, #12]
   2a758:	lsls	ip, r2, #2
   2a75c:	beq	2a778 <flatcc_builder_default_alloc@@Base+0x508>
   2a760:	add	lr, ip, #4
   2a764:	str	ip, [sp, #28]
   2a768:	mov	ip, #2
   2a76c:	str	lr, [sp, #8]
   2a770:	str	ip, [sp, #12]
   2a774:	str	r1, [sp, #24]
   2a778:	cmp	r4, #0
   2a77c:	beq	2a7ac <flatcc_builder_default_alloc@@Base+0x53c>
   2a780:	ldr	ip, [sp, #8]
   2a784:	add	lr, sp, #80	; 0x50
   2a788:	ldr	r6, [pc, #204]	; 2a85c <flatcc_builder_default_alloc@@Base+0x5ec>
   2a78c:	add	ip, ip, r4
   2a790:	str	ip, [sp, #8]
   2a794:	ldr	ip, [sp, #12]
   2a798:	add	ip, ip, #1
   2a79c:	add	lr, lr, ip, lsl #3
   2a7a0:	str	ip, [sp, #12]
   2a7a4:	str	r6, [lr, #-72]	; 0xffffffb8
   2a7a8:	str	r4, [lr, #-68]	; 0xffffffbc
   2a7ac:	ldr	lr, [sp, #8]
   2a7b0:	mov	ip, #0
   2a7b4:	mvn	r6, #3
   2a7b8:	sub	lr, lr, #4
   2a7bc:	sub	lr, lr, r5
   2a7c0:	cmp	r2, ip
   2a7c4:	bne	2a7d8 <flatcc_builder_default_alloc@@Base+0x568>
   2a7c8:	add	r1, sp, #8
   2a7cc:	bl	2a650 <flatcc_builder_default_alloc@@Base+0x3e0>
   2a7d0:	add	sp, sp, #80	; 0x50
   2a7d4:	pop	{r4, r5, r6, pc}
   2a7d8:	ldr	r5, [r1, ip, lsl #2]
   2a7dc:	cmp	r5, #0
   2a7e0:	beq	2a818 <flatcc_builder_default_alloc@@Base+0x5a8>
   2a7e4:	mla	r4, r6, ip, lr
   2a7e8:	cmp	r3, #0
   2a7ec:	add	r4, r4, r5
   2a7f0:	str	r4, [r1, ip, lsl #2]
   2a7f4:	beq	2a854 <flatcc_builder_default_alloc@@Base+0x5e4>
   2a7f8:	ldrb	r4, [r3, ip]
   2a7fc:	cmp	r4, #0
   2a800:	bne	2a854 <flatcc_builder_default_alloc@@Base+0x5e4>
   2a804:	ldr	r3, [pc, #84]	; 2a860 <flatcc_builder_default_alloc@@Base+0x5f0>
   2a808:	movw	r2, #1457	; 0x5b1
   2a80c:	ldr	r1, [pc, #80]	; 2a864 <flatcc_builder_default_alloc@@Base+0x5f4>
   2a810:	ldr	r0, [pc, #80]	; 2a868 <flatcc_builder_default_alloc@@Base+0x5f8>
   2a814:	bl	1417c <__assert_fail@plt>
   2a818:	cmp	r3, #0
   2a81c:	beq	2a840 <flatcc_builder_default_alloc@@Base+0x5d0>
   2a820:	ldrb	r4, [r3, ip]
   2a824:	cmp	r4, #0
   2a828:	beq	2a854 <flatcc_builder_default_alloc@@Base+0x5e4>
   2a82c:	ldr	r3, [pc, #44]	; 2a860 <flatcc_builder_default_alloc@@Base+0x5f0>
   2a830:	movw	r2, #1461	; 0x5b5
   2a834:	ldr	r1, [pc, #40]	; 2a864 <flatcc_builder_default_alloc@@Base+0x5f4>
   2a838:	ldr	r0, [pc, #44]	; 2a86c <flatcc_builder_default_alloc@@Base+0x5fc>
   2a83c:	b	2a814 <flatcc_builder_default_alloc@@Base+0x5a4>
   2a840:	ldr	r3, [pc, #24]	; 2a860 <flatcc_builder_default_alloc@@Base+0x5f0>
   2a844:	movw	r2, #1463	; 0x5b7
   2a848:	ldr	r1, [pc, #20]	; 2a864 <flatcc_builder_default_alloc@@Base+0x5f4>
   2a84c:	ldr	r0, [pc, #28]	; 2a870 <flatcc_builder_default_alloc@@Base+0x600>
   2a850:	b	2a814 <flatcc_builder_default_alloc@@Base+0x5a4>
   2a854:	add	ip, ip, #1
   2a858:	b	2a7c0 <flatcc_builder_default_alloc@@Base+0x550>
   2a85c:	strdeq	r9, [r4], -r8
   2a860:	andeq	r9, r4, r3, lsr #30
   2a864:	ldrdeq	sl, [r4], -lr
   2a868:	andeq	sl, r4, pc, lsr r4
   2a86c:	andeq	sl, r4, sp, asr #8
   2a870:	andeq	r9, r3, fp, lsr r2

0002a874 <flatcc_builder_flush_vtable_cache@@Base>:
   2a874:	ldr	r3, [r0, #116]	; 0x74
   2a878:	cmp	r3, #0
   2a87c:	bxeq	lr
   2a880:	push	{r4, lr}
   2a884:	mov	r4, r0
   2a888:	mov	r1, #0
   2a88c:	ldr	r0, [r0, #92]	; 0x5c
   2a890:	ldr	r2, [r4, #96]	; 0x60
   2a894:	bl	140d4 <memset@plt>
   2a898:	mov	r0, #0
   2a89c:	mov	r1, #16
   2a8a0:	strd	r0, [r4, #120]	; 0x78
   2a8a4:	pop	{r4, pc}

0002a8a8 <flatcc_builder_custom_init@@Base>:
   2a8a8:	push	{r4, r5, r6, r7, r8, lr}
   2a8ac:	mov	r6, r1
   2a8b0:	mov	r7, r2
   2a8b4:	mov	r1, #0
   2a8b8:	mov	r2, #232	; 0xe8
   2a8bc:	mov	r4, r0
   2a8c0:	mov	r5, r3
   2a8c4:	bl	140d4 <memset@plt>
   2a8c8:	cmp	r6, #0
   2a8cc:	mov	r0, #0
   2a8d0:	moveq	r3, #1
   2a8d4:	addeq	r7, r4, #188	; 0xbc
   2a8d8:	ldreq	r6, [pc, #36]	; 2a904 <flatcc_builder_custom_init@@Base+0x5c>
   2a8dc:	streq	r3, [r4, #184]	; 0xb8
   2a8e0:	cmp	r5, #0
   2a8e4:	ldr	r3, [pc, #28]	; 2a908 <flatcc_builder_custom_init@@Base+0x60>
   2a8e8:	str	r7, [r4, #36]	; 0x24
   2a8ec:	str	r6, [r4, #44]	; 0x2c
   2a8f0:	moveq	r5, r3
   2a8f4:	ldr	r3, [sp, #24]
   2a8f8:	str	r3, [r4, #40]	; 0x28
   2a8fc:	str	r5, [r4, #48]	; 0x30
   2a900:	pop	{r4, r5, r6, r7, r8, pc}
   2a904:			; <UNDEFINED> instruction: 0x0002cfb8
   2a908:	andeq	sl, r2, r0, ror r2

0002a90c <flatcc_builder_init@@Base>:
   2a90c:	push	{r4, lr}
   2a910:	mov	r2, #232	; 0xe8
   2a914:	mov	r1, #0
   2a918:	bl	140d4 <memset@plt>
   2a91c:	mov	r3, r0
   2a920:	mov	r2, #1
   2a924:	mov	r0, #0
   2a928:	str	r2, [r3, #184]	; 0xb8
   2a92c:	ldr	r2, [pc, #20]	; 2a948 <flatcc_builder_init@@Base+0x3c>
   2a930:	str	r2, [r3, #48]	; 0x30
   2a934:	add	r2, r3, #188	; 0xbc
   2a938:	str	r2, [r3, #36]	; 0x24
   2a93c:	ldr	r2, [pc, #8]	; 2a94c <flatcc_builder_init@@Base+0x40>
   2a940:	str	r2, [r3, #44]	; 0x2c
   2a944:	pop	{r4, pc}
   2a948:	andeq	sl, r2, r0, ror r2
   2a94c:			; <UNDEFINED> instruction: 0x0002cfb8

0002a950 <flatcc_builder_custom_reset@@Base>:
   2a950:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   2a954:	mov	r4, r0
   2a958:	mov	r7, r1
   2a95c:	mov	r8, r2
   2a960:	mov	r5, r0
   2a964:	mov	r6, #0
   2a968:	ldr	r3, [r5, #52]	; 0x34
   2a96c:	add	r1, r5, #52	; 0x34
   2a970:	cmp	r3, #0
   2a974:	beq	2aa50 <flatcc_builder_custom_reset@@Base+0x100>
   2a978:	cmp	r6, #5
   2a97c:	cmpne	r8, #0
   2a980:	bne	2aa28 <flatcc_builder_custom_reset@@Base+0xd8>
   2a984:	mov	r1, #0
   2a988:	ldr	r0, [r5, #52]	; 0x34
   2a98c:	ldr	r2, [r5, #56]	; 0x38
   2a990:	bl	140d4 <memset@plt>
   2a994:	add	r6, r6, #1
   2a998:	add	r5, r5, #8
   2a99c:	cmp	r6, #8
   2a9a0:	bne	2a968 <flatcc_builder_custom_reset@@Base+0x18>
   2a9a4:	ldr	r2, [r4, #124]	; 0x7c
   2a9a8:	mov	r3, #0
   2a9ac:	ldr	r0, [r4, #184]	; 0xb8
   2a9b0:	str	r3, [r4, #24]
   2a9b4:	str	r3, [r4, #32]
   2a9b8:	cmp	r2, r3
   2a9bc:	str	r3, [r4, #120]	; 0x78
   2a9c0:	movne	r2, #16
   2a9c4:	strh	r3, [r4, #128]	; 0x80
   2a9c8:	str	r3, [r4, #136]	; 0x88
   2a9cc:	strne	r2, [r4, #124]	; 0x7c
   2a9d0:	cmp	r7, #0
   2a9d4:	ldr	r2, [r4, #60]	; 0x3c
   2a9d8:	strne	r3, [r4, #172]	; 0xac
   2a9dc:	strne	r3, [r4, #176]	; 0xb0
   2a9e0:	strne	r3, [r4, #180]	; 0xb4
   2a9e4:	cmp	r0, #0
   2a9e8:	strd	r2, [r4, #16]
   2a9ec:	ldr	r2, [r4, #76]	; 0x4c
   2a9f0:	str	r2, [r4]
   2a9f4:	ldr	r2, [r4, #52]	; 0x34
   2a9f8:	str	r3, [r4, #140]	; 0x8c
   2a9fc:	str	r3, [r4, #148]	; 0x94
   2aa00:	str	r3, [r4, #152]	; 0x98
   2aa04:	str	r3, [r4, #156]	; 0x9c
   2aa08:	str	r2, [r4, #4]
   2aa0c:	str	r3, [r4, #160]	; 0xa0
   2aa10:	beq	2aa20 <flatcc_builder_custom_reset@@Base+0xd0>
   2aa14:	add	r0, r4, #188	; 0xbc
   2aa18:	bl	2ceb8 <flatcc_emitter_reset@@Base>
   2aa1c:	mov	r0, #0
   2aa20:	add	sp, sp, #12
   2aa24:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2aa28:	mov	r3, #1
   2aa2c:	ldr	r0, [r4, #40]	; 0x28
   2aa30:	mov	r2, r3
   2aa34:	ldr	r9, [r4, #48]	; 0x30
   2aa38:	str	r6, [sp]
   2aa3c:	blx	r9
   2aa40:	cmp	r0, #0
   2aa44:	beq	2a984 <flatcc_builder_custom_reset@@Base+0x34>
   2aa48:	mvn	r0, #0
   2aa4c:	b	2aa20 <flatcc_builder_custom_reset@@Base+0xd0>
   2aa50:	ldr	r3, [r5, #56]	; 0x38
   2aa54:	cmp	r3, #0
   2aa58:	beq	2a994 <flatcc_builder_custom_reset@@Base+0x44>
   2aa5c:	ldr	r3, [pc, #12]	; 2aa70 <flatcc_builder_custom_reset@@Base+0x120>
   2aa60:	movw	r2, #434	; 0x1b2
   2aa64:	ldr	r1, [pc, #8]	; 2aa74 <flatcc_builder_custom_reset@@Base+0x124>
   2aa68:	ldr	r0, [pc, #8]	; 2aa78 <flatcc_builder_custom_reset@@Base+0x128>
   2aa6c:	bl	1417c <__assert_fail@plt>
   2aa70:	andeq	r9, r4, r0, asr #30
   2aa74:	ldrdeq	sl, [r4], -lr
   2aa78:	andeq	sl, r4, fp, asr r4

0002aa7c <flatcc_builder_reset@@Base>:
   2aa7c:	mov	r2, #0
   2aa80:	mov	r1, r2
   2aa84:	b	2a950 <flatcc_builder_custom_reset@@Base>

0002aa88 <flatcc_builder_clear@@Base>:
   2aa88:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2aa8c:	mov	r4, r0
   2aa90:	add	r6, r0, #52	; 0x34
   2aa94:	mov	r5, #0
   2aa98:	mov	r3, #0
   2aa9c:	mov	r1, r6
   2aaa0:	mov	r2, r3
   2aaa4:	ldr	r0, [r4, #40]	; 0x28
   2aaa8:	add	r6, r6, #8
   2aaac:	ldr	r7, [r4, #48]	; 0x30
   2aab0:	str	r5, [sp]
   2aab4:	add	r5, r5, #1
   2aab8:	blx	r7
   2aabc:	cmp	r5, #8
   2aac0:	bne	2aa98 <flatcc_builder_clear@@Base+0x10>
   2aac4:	ldr	r3, [r4, #184]	; 0xb8
   2aac8:	cmp	r3, #0
   2aacc:	beq	2aad8 <flatcc_builder_clear@@Base+0x50>
   2aad0:	add	r0, r4, #188	; 0xbc
   2aad4:	bl	2cf60 <flatcc_emitter_clear@@Base>
   2aad8:	mov	r2, #232	; 0xe8
   2aadc:	mov	r1, #0
   2aae0:	mov	r0, r4
   2aae4:	add	sp, sp, #12
   2aae8:	pop	{r4, r5, r6, r7, lr}
   2aaec:	b	140d4 <memset@plt>

0002aaf0 <flatcc_builder_enter_user_frame_ptr@@Base>:
   2aaf0:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2aaf4:	add	r5, r1, #3
   2aaf8:	mov	r7, #0
   2aafc:	bic	r5, r5, #3
   2ab00:	mov	r1, #7
   2ab04:	add	r5, r5, #4
   2ab08:	mov	r6, r0
   2ab0c:	mov	r3, r5
   2ab10:	str	r7, [sp]
   2ab14:	ldr	r2, [r0, #228]	; 0xe4
   2ab18:	bl	2a368 <flatcc_builder_default_alloc@@Base+0xf8>
   2ab1c:	subs	r4, r0, #0
   2ab20:	beq	2ab4c <flatcc_builder_enter_user_frame_ptr@@Base+0x5c>
   2ab24:	mov	r2, r5
   2ab28:	mov	r1, r7
   2ab2c:	bl	140d4 <memset@plt>
   2ab30:	ldr	r3, [r6, #224]	; 0xe0
   2ab34:	str	r3, [r4], #4
   2ab38:	ldr	r1, [r6, #228]	; 0xe4
   2ab3c:	add	r3, r1, #4
   2ab40:	add	r5, r1, r5
   2ab44:	str	r3, [r6, #224]	; 0xe0
   2ab48:	str	r5, [r6, #228]	; 0xe4
   2ab4c:	mov	r0, r4
   2ab50:	add	sp, sp, #12
   2ab54:	pop	{r4, r5, r6, r7, pc}

0002ab58 <flatcc_builder_enter_user_frame@@Base>:
   2ab58:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2ab5c:	add	r4, r1, #3
   2ab60:	mov	r7, #0
   2ab64:	bic	r4, r4, #3
   2ab68:	mov	r1, #7
   2ab6c:	add	r4, r4, #4
   2ab70:	mov	r6, r0
   2ab74:	mov	r3, r4
   2ab78:	str	r7, [sp]
   2ab7c:	ldr	r2, [r0, #228]	; 0xe4
   2ab80:	bl	2a368 <flatcc_builder_default_alloc@@Base+0xf8>
   2ab84:	subs	r5, r0, #0
   2ab88:	moveq	r0, r5
   2ab8c:	beq	2abb8 <flatcc_builder_enter_user_frame@@Base+0x60>
   2ab90:	mov	r2, r4
   2ab94:	mov	r1, r7
   2ab98:	bl	140d4 <memset@plt>
   2ab9c:	ldr	r3, [r6, #224]	; 0xe0
   2aba0:	str	r3, [r5]
   2aba4:	ldr	r1, [r6, #228]	; 0xe4
   2aba8:	add	r0, r1, #4
   2abac:	add	r4, r1, r4
   2abb0:	str	r0, [r6, #224]	; 0xe0
   2abb4:	str	r4, [r6, #228]	; 0xe4
   2abb8:	add	sp, sp, #12
   2abbc:	pop	{r4, r5, r6, r7, pc}

0002abc0 <flatcc_builder_exit_user_frame@@Base>:
   2abc0:	ldr	r3, [r0, #224]	; 0xe0
   2abc4:	cmp	r3, #0
   2abc8:	bne	2abe4 <flatcc_builder_exit_user_frame@@Base+0x24>
   2abcc:	push	{r4, lr}
   2abd0:	movw	r2, #542	; 0x21e
   2abd4:	ldr	r3, [pc, #40]	; 2ac04 <flatcc_builder_exit_user_frame@@Base+0x44>
   2abd8:	ldr	r1, [pc, #40]	; 2ac08 <flatcc_builder_exit_user_frame@@Base+0x48>
   2abdc:	ldr	r0, [pc, #40]	; 2ac0c <flatcc_builder_exit_user_frame@@Base+0x4c>
   2abe0:	bl	1417c <__assert_fail@plt>
   2abe4:	ldr	r1, [r0, #108]	; 0x6c
   2abe8:	mov	r2, r0
   2abec:	add	r1, r1, r3
   2abf0:	sub	r3, r3, #4
   2abf4:	str	r3, [r0, #228]	; 0xe4
   2abf8:	ldr	r0, [r1, #-4]
   2abfc:	str	r0, [r2, #224]	; 0xe0
   2ac00:	bx	lr
   2ac04:	andeq	r9, r4, ip, asr pc
   2ac08:	ldrdeq	sl, [r4], -lr
   2ac0c:	andeq	sl, r4, sp, ror #8

0002ac10 <flatcc_builder_exit_user_frame_at@@Base>:
   2ac10:	ldr	r2, [r0, #224]	; 0xe0
   2ac14:	cmp	r2, r1
   2ac18:	bcs	2ac34 <flatcc_builder_exit_user_frame_at@@Base+0x24>
   2ac1c:	push	{r4, lr}
   2ac20:	movw	r2, #551	; 0x227
   2ac24:	ldr	r3, [pc, #16]	; 2ac3c <flatcc_builder_exit_user_frame_at@@Base+0x2c>
   2ac28:	ldr	r1, [pc, #16]	; 2ac40 <flatcc_builder_exit_user_frame_at@@Base+0x30>
   2ac2c:	ldr	r0, [pc, #16]	; 2ac44 <flatcc_builder_exit_user_frame_at@@Base+0x34>
   2ac30:	bl	1417c <__assert_fail@plt>
   2ac34:	str	r1, [r0, #224]	; 0xe0
   2ac38:	b	2abc0 <flatcc_builder_exit_user_frame@@Base>
   2ac3c:	andeq	r9, r4, fp, ror pc
   2ac40:	ldrdeq	sl, [r4], -lr
   2ac44:	andeq	sl, r4, r6, lsl #9

0002ac48 <flatcc_builder_get_current_user_frame@@Base>:
   2ac48:	ldr	r0, [r0, #224]	; 0xe0
   2ac4c:	bx	lr

0002ac50 <flatcc_builder_get_user_frame_ptr@@Base>:
   2ac50:	ldr	r0, [r0, #108]	; 0x6c
   2ac54:	add	r0, r0, r1
   2ac58:	bx	lr

0002ac5c <flatcc_builder_embed_buffer@@Base>:
   2ac5c:	push	{r4, r5, r6, lr}
   2ac60:	mov	r4, r3
   2ac64:	sub	sp, sp, #80	; 0x50
   2ac68:	mov	r6, r2
   2ac6c:	mov	r2, r1
   2ac70:	add	r1, sp, #96	; 0x60
   2ac74:	mov	r5, r0
   2ac78:	ldr	r3, [r0, #152]	; 0x98
   2ac7c:	adds	r3, r3, #0
   2ac80:	movne	r3, #1
   2ac84:	bl	2a5a8 <flatcc_builder_default_alloc@@Base+0x338>
   2ac88:	cmp	r0, #0
   2ac8c:	movne	r0, #0
   2ac90:	bne	2ad64 <flatcc_builder_embed_buffer@@Base+0x108>
   2ac94:	ldr	r3, [sp, #100]	; 0x64
   2ac98:	str	r0, [sp, #8]
   2ac9c:	str	r0, [sp, #12]
   2aca0:	tst	r3, #2
   2aca4:	ldr	r3, [r5, #136]	; 0x88
   2aca8:	movne	r2, #4
   2acac:	moveq	r2, #0
   2acb0:	sub	r3, r3, r4
   2acb4:	sub	r3, r3, r2
   2acb8:	ldrh	r2, [sp, #96]	; 0x60
   2acbc:	sub	r2, r2, #1
   2acc0:	and	r3, r3, r2
   2acc4:	add	r2, r4, r3
   2acc8:	str	r2, [sp, #4]
   2accc:	ldr	r2, [r5, #152]	; 0x98
   2acd0:	cmp	r2, #0
   2acd4:	beq	2acf4 <flatcc_builder_embed_buffer@@Base+0x98>
   2acd8:	mov	r2, #4
   2acdc:	add	r1, sp, r2
   2ace0:	str	r2, [sp, #8]
   2ace4:	str	r1, [sp, #16]
   2ace8:	str	r2, [sp, #20]
   2acec:	mov	r2, #1
   2acf0:	str	r2, [sp, #12]
   2acf4:	cmp	r4, #0
   2acf8:	beq	2ad24 <flatcc_builder_embed_buffer@@Base+0xc8>
   2acfc:	ldr	r2, [sp, #8]
   2ad00:	add	r1, sp, #80	; 0x50
   2ad04:	add	r2, r2, r4
   2ad08:	str	r2, [sp, #8]
   2ad0c:	ldr	r2, [sp, #12]
   2ad10:	add	r2, r2, #1
   2ad14:	add	r1, r1, r2, lsl #3
   2ad18:	str	r2, [sp, #12]
   2ad1c:	str	r6, [r1, #-72]	; 0xffffffb8
   2ad20:	str	r4, [r1, #-68]	; 0xffffffbc
   2ad24:	cmp	r3, #0
   2ad28:	beq	2ad58 <flatcc_builder_embed_buffer@@Base+0xfc>
   2ad2c:	ldr	r2, [sp, #8]
   2ad30:	add	r1, sp, #80	; 0x50
   2ad34:	ldr	r0, [pc, #48]	; 2ad6c <flatcc_builder_embed_buffer@@Base+0x110>
   2ad38:	add	r2, r2, r3
   2ad3c:	str	r2, [sp, #8]
   2ad40:	ldr	r2, [sp, #12]
   2ad44:	add	r2, r2, #1
   2ad48:	add	r1, r1, r2, lsl #3
   2ad4c:	str	r2, [sp, #12]
   2ad50:	str	r0, [r1, #-72]	; 0xffffffb8
   2ad54:	str	r3, [r1, #-68]	; 0xffffffbc
   2ad58:	add	r1, sp, #8
   2ad5c:	mov	r0, r5
   2ad60:	bl	2a650 <flatcc_builder_default_alloc@@Base+0x3e0>
   2ad64:	add	sp, sp, #80	; 0x50
   2ad68:	pop	{r4, r5, r6, pc}
   2ad6c:	strdeq	r9, [r4], -r8

0002ad70 <flatcc_builder_create_buffer@@Base>:
   2ad70:	push	{r4, r5, r6, r7, r8, r9, lr}
   2ad74:	sub	sp, sp, #92	; 0x5c
   2ad78:	mov	r8, #0
   2ad7c:	mov	r9, r1
   2ad80:	mov	r5, r3
   2ad84:	add	r1, sp, #120	; 0x78
   2ad88:	mov	r4, r0
   2ad8c:	ldr	r7, [sp, #124]	; 0x7c
   2ad90:	str	r8, [sp, #12]
   2ad94:	and	r6, r7, #1
   2ad98:	mov	r3, r6
   2ad9c:	bl	2a5a8 <flatcc_builder_default_alloc@@Base+0x338>
   2ada0:	cmp	r0, r8
   2ada4:	bne	2af14 <flatcc_builder_create_buffer@@Base+0x1a4>
   2ada8:	ldrh	r3, [r4, #128]	; 0x80
   2adac:	ldrh	r1, [sp, #120]	; 0x78
   2adb0:	ldr	r2, [r4, #136]	; 0x88
   2adb4:	cmp	r3, r1
   2adb8:	strhcc	r1, [r4, #128]	; 0x80
   2adbc:	cmp	r9, #0
   2adc0:	sub	r1, r1, #1
   2adc4:	ldrne	r3, [r9]
   2adc8:	strne	r3, [sp, #12]
   2adcc:	sub	r3, r2, #4
   2add0:	ldr	r0, [sp, #12]
   2add4:	cmp	r0, #0
   2add8:	movne	r0, #4
   2addc:	tst	r7, #2
   2ade0:	movne	ip, #4
   2ade4:	moveq	ip, #0
   2ade8:	sub	r3, r3, r0
   2adec:	ands	r7, r7, #3
   2adf0:	sub	r3, r3, ip
   2adf4:	and	r3, r3, r1
   2adf8:	mov	r1, #0
   2adfc:	str	r1, [sp, #16]
   2ae00:	str	r1, [sp, #20]
   2ae04:	beq	2ae24 <flatcc_builder_create_buffer@@Base+0xb4>
   2ae08:	mov	r1, #4
   2ae0c:	add	ip, sp, #8
   2ae10:	str	r1, [sp, #16]
   2ae14:	str	ip, [sp, #24]
   2ae18:	str	r1, [sp, #28]
   2ae1c:	mov	r1, #1
   2ae20:	str	r1, [sp, #20]
   2ae24:	ldr	ip, [sp, #16]
   2ae28:	add	r8, sp, #88	; 0x58
   2ae2c:	add	r9, sp, #4
   2ae30:	cmp	r0, #0
   2ae34:	ldr	lr, [sp, #20]
   2ae38:	add	ip, ip, #4
   2ae3c:	add	r1, lr, #1
   2ae40:	str	ip, [sp, #16]
   2ae44:	add	r8, r8, r1, lsl #3
   2ae48:	str	r1, [sp, #20]
   2ae4c:	str	r9, [r8, #-72]	; 0xffffffb8
   2ae50:	mov	r9, #4
   2ae54:	str	r9, [r8, #-68]	; 0xffffffbc
   2ae58:	beq	2ae84 <flatcc_builder_create_buffer@@Base+0x114>
   2ae5c:	add	ip, ip, r0
   2ae60:	add	r1, lr, #2
   2ae64:	add	lr, lr, #2
   2ae68:	str	ip, [sp, #16]
   2ae6c:	add	ip, sp, #88	; 0x58
   2ae70:	add	r1, ip, r1, lsl #3
   2ae74:	add	ip, sp, #12
   2ae78:	str	lr, [sp, #20]
   2ae7c:	str	ip, [r1, #-72]	; 0xffffffb8
   2ae80:	str	r0, [r1, #-68]	; 0xffffffbc
   2ae84:	cmp	r3, #0
   2ae88:	beq	2aeb8 <flatcc_builder_create_buffer@@Base+0x148>
   2ae8c:	ldr	r1, [sp, #16]
   2ae90:	add	r0, sp, #88	; 0x58
   2ae94:	ldr	ip, [pc, #132]	; 2af20 <flatcc_builder_create_buffer@@Base+0x1b0>
   2ae98:	add	r1, r1, r3
   2ae9c:	str	r1, [sp, #16]
   2aea0:	ldr	r1, [sp, #20]
   2aea4:	add	r1, r1, #1
   2aea8:	add	r0, r0, r1, lsl #3
   2aeac:	str	r1, [sp, #20]
   2aeb0:	str	ip, [r0, #-72]	; 0xffffffb8
   2aeb4:	str	r3, [r0, #-68]	; 0xffffffbc
   2aeb8:	ldr	r3, [sp, #16]
   2aebc:	cmp	r7, #0
   2aec0:	add	r1, sp, #16
   2aec4:	mov	r0, r4
   2aec8:	sub	r3, r2, r3
   2aecc:	movne	r2, #4
   2aed0:	moveq	r2, #0
   2aed4:	cmp	r6, #0
   2aed8:	add	r3, r3, r2
   2aedc:	ldrne	r2, [r4, #144]	; 0x90
   2aee0:	ldreq	r2, [r4, #140]	; 0x8c
   2aee4:	sub	r2, r2, r3
   2aee8:	sub	r3, r5, r3
   2aeec:	str	r3, [sp, #4]
   2aef0:	str	r2, [sp, #8]
   2aef4:	bl	2a650 <flatcc_builder_default_alloc@@Base+0x3e0>
   2aef8:	cmp	r0, #0
   2aefc:	bne	2af18 <flatcc_builder_create_buffer@@Base+0x1a8>
   2af00:	ldr	r3, [pc, #28]	; 2af24 <flatcc_builder_create_buffer@@Base+0x1b4>
   2af04:	mov	r2, #772	; 0x304
   2af08:	ldr	r1, [pc, #24]	; 2af28 <flatcc_builder_create_buffer@@Base+0x1b8>
   2af0c:	ldr	r0, [pc, #24]	; 2af2c <flatcc_builder_create_buffer@@Base+0x1bc>
   2af10:	bl	1417c <__assert_fail@plt>
   2af14:	mov	r0, r8
   2af18:	add	sp, sp, #92	; 0x5c
   2af1c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2af20:	strdeq	r9, [r4], -r8
   2af24:	muleq	r4, sp, pc	; <UNPREDICTABLE>
   2af28:	ldrdeq	sl, [r4], -lr
   2af2c:	andeq	r9, r3, fp, lsr r2

0002af30 <flatcc_builder_create_struct@@Base>:
   2af30:	cmp	r3, #0
   2af34:	push	{lr}		; (str lr, [sp, #-4]!)
   2af38:	sub	sp, sp, #76	; 0x4c
   2af3c:	bne	2af54 <flatcc_builder_create_struct@@Base+0x24>
   2af40:	ldr	r3, [pc, #148]	; 2afdc <flatcc_builder_create_struct@@Base+0xac>
   2af44:	movw	r2, #783	; 0x30f
   2af48:	ldr	r1, [pc, #144]	; 2afe0 <flatcc_builder_create_struct@@Base+0xb0>
   2af4c:	ldr	r0, [pc, #144]	; 2afe4 <flatcc_builder_create_struct@@Base+0xb4>
   2af50:	bl	1417c <__assert_fail@plt>
   2af54:	ldrh	ip, [r0, #128]	; 0x80
   2af58:	cmp	ip, r3
   2af5c:	ldr	ip, [r0, #136]	; 0x88
   2af60:	strhcc	r3, [r0, #128]	; 0x80
   2af64:	sub	r3, r3, #1
   2af68:	sub	ip, ip, r2
   2af6c:	and	r3, r3, ip
   2af70:	mov	ip, #0
   2af74:	cmp	r2, ip
   2af78:	str	ip, [sp]
   2af7c:	str	ip, [sp, #4]
   2af80:	beq	2af98 <flatcc_builder_create_struct@@Base+0x68>
   2af84:	str	r2, [sp]
   2af88:	str	r1, [sp, #8]
   2af8c:	str	r2, [sp, #12]
   2af90:	mov	r2, #1
   2af94:	str	r2, [sp, #4]
   2af98:	cmp	r3, #0
   2af9c:	beq	2afcc <flatcc_builder_create_struct@@Base+0x9c>
   2afa0:	ldr	r2, [sp]
   2afa4:	add	r1, sp, #72	; 0x48
   2afa8:	ldr	ip, [pc, #56]	; 2afe8 <flatcc_builder_create_struct@@Base+0xb8>
   2afac:	add	r2, r2, r3
   2afb0:	str	r2, [sp]
   2afb4:	ldr	r2, [sp, #4]
   2afb8:	add	r2, r2, #1
   2afbc:	add	r1, r1, r2, lsl #3
   2afc0:	str	r2, [sp, #4]
   2afc4:	str	ip, [r1, #-72]	; 0xffffffb8
   2afc8:	str	r3, [r1, #-68]	; 0xffffffbc
   2afcc:	mov	r1, sp
   2afd0:	bl	2a650 <flatcc_builder_default_alloc@@Base+0x3e0>
   2afd4:	add	sp, sp, #76	; 0x4c
   2afd8:	pop	{pc}		; (ldr pc, [sp], #4)
   2afdc:			; <UNDEFINED> instruction: 0x00049fba
   2afe0:	ldrdeq	sl, [r4], -lr
   2afe4:	andeq	sl, r4, r5, lsr #9
   2afe8:	strdeq	r9, [r4], -r8

0002afec <flatcc_builder_start_buffer@@Base>:
   2afec:	push	{r4, r5, r6, r7, r8, lr}
   2aff0:	mov	r5, r1
   2aff4:	mov	r4, r0
   2aff8:	mov	r7, r2
   2affc:	mov	r6, r3
   2b000:	ldrh	r1, [r0, #128]	; 0x80
   2b004:	bl	2a3d8 <flatcc_builder_default_alloc@@Base+0x168>
   2b008:	cmp	r0, #0
   2b00c:	bne	2b07c <flatcc_builder_start_buffer@@Base+0x90>
   2b010:	ldrh	r3, [r4, #132]	; 0x84
   2b014:	mov	ip, #1
   2b018:	cmp	r5, #0
   2b01c:	ldr	r1, [r4, #32]
   2b020:	strh	ip, [r4, #128]	; 0x80
   2b024:	strh	r3, [r1, #34]	; 0x22
   2b028:	ldrh	r3, [r4, #164]	; 0xa4
   2b02c:	strh	r7, [r4, #132]	; 0x84
   2b030:	strh	r3, [r1, #32]
   2b034:	ldr	r3, [r4, #144]	; 0x90
   2b038:	strh	r6, [r4, #164]	; 0xa4
   2b03c:	str	r3, [r1, #20]
   2b040:	ldr	r3, [r4, #152]	; 0x98
   2b044:	str	r3, [r1, #28]
   2b048:	ldr	r3, [r4, #136]	; 0x88
   2b04c:	str	r3, [r4, #144]	; 0x90
   2b050:	ldr	r3, [r4, #148]	; 0x94
   2b054:	add	r2, r3, ip
   2b058:	strd	r2, [r4, #148]	; 0x94
   2b05c:	ldr	r3, [r4, #168]	; 0xa8
   2b060:	str	r3, [r1, #16]
   2b064:	ldr	r3, [pc, #24]	; 2b084 <flatcc_builder_start_buffer@@Base+0x98>
   2b068:	moveq	r5, r3
   2b06c:	ldr	r3, [r5]
   2b070:	str	r3, [r4, #168]	; 0xa8
   2b074:	strh	ip, [r1, #14]
   2b078:	pop	{r4, r5, r6, r7, r8, pc}
   2b07c:	mvn	r0, #0
   2b080:	pop	{r4, r5, r6, r7, r8, pc}
   2b084:	strdeq	r9, [r4], -r8

0002b088 <flatcc_builder_end_buffer@@Base>:
   2b088:	push	{r0, r1, r2, r4, r5, lr}
   2b08c:	mov	r4, r0
   2b090:	ldrh	r0, [r0, #164]	; 0xa4
   2b094:	ldr	r2, [r4, #152]	; 0x98
   2b098:	and	r0, r0, #2
   2b09c:	cmp	r2, #0
   2b0a0:	orrne	r0, r0, #1
   2b0a4:	ldr	r2, [r4, #32]
   2b0a8:	ldrh	r2, [r2, #14]
   2b0ac:	cmp	r2, #1
   2b0b0:	beq	2b0c8 <flatcc_builder_end_buffer@@Base+0x40>
   2b0b4:	ldr	r3, [pc, #120]	; 2b134 <flatcc_builder_end_buffer@@Base+0xac>
   2b0b8:	movw	r2, #838	; 0x346
   2b0bc:	ldr	r1, [pc, #116]	; 2b138 <flatcc_builder_end_buffer@@Base+0xb0>
   2b0c0:	ldr	r0, [pc, #116]	; 2b13c <flatcc_builder_end_buffer@@Base+0xb4>
   2b0c4:	bl	1417c <__assert_fail@plt>
   2b0c8:	ldrh	r2, [r4, #132]	; 0x84
   2b0cc:	mov	r3, r1
   2b0d0:	ldrh	r1, [r4, #128]	; 0x80
   2b0d4:	cmp	r1, r2
   2b0d8:	strhcc	r2, [r4, #128]	; 0x80
   2b0dc:	ldrh	r1, [r4, #128]	; 0x80
   2b0e0:	str	r1, [sp]
   2b0e4:	add	r1, r4, #168	; 0xa8
   2b0e8:	str	r0, [sp, #4]
   2b0ec:	mov	r0, r4
   2b0f0:	bl	2ad70 <flatcc_builder_create_buffer@@Base>
   2b0f4:	subs	r5, r0, #0
   2b0f8:	beq	2b128 <flatcc_builder_end_buffer@@Base+0xa0>
   2b0fc:	ldr	r3, [r4, #32]
   2b100:	mov	r0, r4
   2b104:	ldr	r2, [r3, #20]
   2b108:	str	r2, [r4, #144]	; 0x90
   2b10c:	ldr	r2, [r3, #28]
   2b110:	str	r2, [r4, #152]	; 0x98
   2b114:	ldr	r2, [r3, #16]
   2b118:	ldrh	r3, [r3, #32]
   2b11c:	strh	r3, [r4, #164]	; 0xa4
   2b120:	str	r2, [r4, #168]	; 0xa8
   2b124:	bl	2a16c <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2b128:	mov	r0, r5
   2b12c:	add	sp, sp, #12
   2b130:	pop	{r4, r5, pc}
   2b134:	ldrdeq	r9, [r4], -r7
   2b138:	ldrdeq	sl, [r4], -lr
   2b13c:			; <UNDEFINED> instruction: 0x0004a4b0

0002b140 <flatcc_builder_start_struct@@Base>:
   2b140:	push	{r4, r5, r6, lr}
   2b144:	mov	r5, r1
   2b148:	mov	r1, r2
   2b14c:	mov	r4, r0
   2b150:	bl	2a3d8 <flatcc_builder_default_alloc@@Base+0x168>
   2b154:	cmp	r0, #0
   2b158:	bne	2b180 <flatcc_builder_start_struct@@Base+0x40>
   2b15c:	ldr	r3, [r4, #32]
   2b160:	mov	r2, #2
   2b164:	mvn	r1, #3
   2b168:	mov	r0, r4
   2b16c:	strh	r2, [r3, #14]
   2b170:	bl	2a0a8 <__flatcc_fb_coerce_scalar_type@@Base+0x47c>
   2b174:	mov	r1, r5
   2b178:	pop	{r4, r5, r6, lr}
   2b17c:	b	2a124 <__flatcc_fb_coerce_scalar_type@@Base+0x4f8>
   2b180:	mov	r0, #0
   2b184:	pop	{r4, r5, r6, pc}

0002b188 <flatcc_builder_struct_edit@@Base>:
   2b188:	ldr	r0, [r0, #16]
   2b18c:	bx	lr

0002b190 <flatcc_builder_end_struct@@Base>:
   2b190:	ldr	r3, [r0, #32]
   2b194:	push	{r4, r5, r6, lr}
   2b198:	ldrh	r3, [r3, #14]
   2b19c:	cmp	r3, #2
   2b1a0:	beq	2b1b8 <flatcc_builder_end_struct@@Base+0x28>
   2b1a4:	ldr	r3, [pc, #56]	; 2b1e4 <flatcc_builder_end_struct@@Base+0x54>
   2b1a8:	mov	r2, #872	; 0x368
   2b1ac:	ldr	r1, [pc, #52]	; 2b1e8 <flatcc_builder_end_struct@@Base+0x58>
   2b1b0:	ldr	r0, [pc, #52]	; 2b1ec <flatcc_builder_end_struct@@Base+0x5c>
   2b1b4:	bl	1417c <__assert_fail@plt>
   2b1b8:	ldrh	r3, [r0, #130]	; 0x82
   2b1bc:	mov	r4, r0
   2b1c0:	ldr	r1, [r0, #16]
   2b1c4:	ldr	r2, [r0, #20]
   2b1c8:	bl	2af30 <flatcc_builder_create_struct@@Base>
   2b1cc:	subs	r5, r0, #0
   2b1d0:	beq	2b1dc <flatcc_builder_end_struct@@Base+0x4c>
   2b1d4:	mov	r0, r4
   2b1d8:	bl	2a16c <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2b1dc:	mov	r0, r5
   2b1e0:	pop	{r4, r5, r6, pc}
   2b1e4:	strdeq	r9, [r4], -r1
   2b1e8:	ldrdeq	sl, [r4], -lr
   2b1ec:	ldrdeq	sl, [r4], -ip

0002b1f0 <flatcc_builder_extend_vector@@Base>:
   2b1f0:	push	{r4, r5, r6, lr}
   2b1f4:	mov	r4, r0
   2b1f8:	mov	r5, r1
   2b1fc:	ldr	r0, [r0, #32]
   2b200:	ldr	r2, [r0, #24]
   2b204:	bl	2a6c8 <flatcc_builder_default_alloc@@Base+0x458>
   2b208:	cmp	r0, #0
   2b20c:	bne	2b228 <flatcc_builder_extend_vector@@Base+0x38>
   2b210:	ldr	r3, [r4, #32]
   2b214:	mov	r0, r4
   2b218:	ldr	r1, [r3, #16]
   2b21c:	mul	r1, r1, r5
   2b220:	pop	{r4, r5, r6, lr}
   2b224:	b	2a124 <__flatcc_fb_coerce_scalar_type@@Base+0x4f8>
   2b228:	mov	r0, #0
   2b22c:	pop	{r4, r5, r6, pc}

0002b230 <flatcc_builder_vector_push@@Base>:
   2b230:	ldr	r3, [r0, #32]
   2b234:	push	{r4, lr}
   2b238:	ldrh	r2, [r3, #14]
   2b23c:	cmp	r2, #4
   2b240:	beq	2b258 <flatcc_builder_vector_push@@Base+0x28>
   2b244:	ldr	r3, [pc, #68]	; 2b290 <flatcc_builder_vector_push@@Base+0x60>
   2b248:	movw	r2, #907	; 0x38b
   2b24c:	ldr	r1, [pc, #64]	; 2b294 <flatcc_builder_vector_push@@Base+0x64>
   2b250:	ldr	r0, [pc, #64]	; 2b298 <flatcc_builder_vector_push@@Base+0x68>
   2b254:	bl	1417c <__assert_fail@plt>
   2b258:	ldr	r2, [r3, #20]
   2b25c:	ldr	ip, [r3, #24]
   2b260:	cmp	r2, ip
   2b264:	bls	2b27c <flatcc_builder_vector_push@@Base+0x4c>
   2b268:	ldr	r3, [pc, #32]	; 2b290 <flatcc_builder_vector_push@@Base+0x60>
   2b26c:	mov	r2, #908	; 0x38c
   2b270:	ldr	r1, [pc, #28]	; 2b294 <flatcc_builder_vector_push@@Base+0x64>
   2b274:	ldr	r0, [pc, #32]	; 2b29c <flatcc_builder_vector_push@@Base+0x6c>
   2b278:	b	2b254 <flatcc_builder_vector_push@@Base+0x24>
   2b27c:	add	r2, r2, #1
   2b280:	pop	{r4, lr}
   2b284:	str	r2, [r3, #20]
   2b288:	ldr	r2, [r3, #16]
   2b28c:	b	2a1f4 <__flatcc_fb_coerce_scalar_type@@Base+0x5c8>
   2b290:	andeq	sl, r4, fp
   2b294:	ldrdeq	sl, [r4], -lr
   2b298:	andeq	sl, r4, r8, lsl #10
   2b29c:	andeq	sl, r4, r4, lsr r5

0002b2a0 <flatcc_builder_append_vector@@Base>:
   2b2a0:	push	{r4, r5, r6, lr}
   2b2a4:	mov	r4, r0
   2b2a8:	ldr	r0, [r0, #32]
   2b2ac:	ldrh	r3, [r0, #14]
   2b2b0:	cmp	r3, #4
   2b2b4:	beq	2b2cc <flatcc_builder_append_vector@@Base+0x2c>
   2b2b8:	ldr	r3, [pc, #76]	; 2b30c <flatcc_builder_append_vector@@Base+0x6c>
   2b2bc:	movw	r2, #915	; 0x393
   2b2c0:	ldr	r1, [pc, #72]	; 2b310 <flatcc_builder_append_vector@@Base+0x70>
   2b2c4:	ldr	r0, [pc, #72]	; 2b314 <flatcc_builder_append_vector@@Base+0x74>
   2b2c8:	bl	1417c <__assert_fail@plt>
   2b2cc:	mov	r6, r1
   2b2d0:	mov	r5, r2
   2b2d4:	mov	r1, r2
   2b2d8:	ldr	r2, [r0, #24]
   2b2dc:	bl	2a6c8 <flatcc_builder_default_alloc@@Base+0x458>
   2b2e0:	cmp	r0, #0
   2b2e4:	bne	2b304 <flatcc_builder_append_vector@@Base+0x64>
   2b2e8:	ldr	r3, [r4, #32]
   2b2ec:	mov	r1, r6
   2b2f0:	mov	r0, r4
   2b2f4:	ldr	r2, [r3, #16]
   2b2f8:	mul	r2, r2, r5
   2b2fc:	pop	{r4, r5, r6, lr}
   2b300:	b	2a1f4 <__flatcc_fb_coerce_scalar_type@@Base+0x5c8>
   2b304:	mov	r0, #0
   2b308:	pop	{r4, r5, r6, pc}
   2b30c:	andeq	sl, r4, r6, lsr #32
   2b310:	ldrdeq	sl, [r4], -lr
   2b314:	andeq	sl, r4, r8, lsl #10

0002b318 <flatcc_builder_extend_offset_vector@@Base>:
   2b318:	push	{r4, r5, r6, lr}
   2b31c:	mvn	r2, #-1073741824	; 0xc0000000
   2b320:	mov	r4, r0
   2b324:	mov	r5, r1
   2b328:	ldr	r0, [r0, #32]
   2b32c:	bl	2a6c8 <flatcc_builder_default_alloc@@Base+0x458>
   2b330:	cmp	r0, #0
   2b334:	bne	2b348 <flatcc_builder_extend_offset_vector@@Base+0x30>
   2b338:	lsl	r1, r5, #2
   2b33c:	mov	r0, r4
   2b340:	pop	{r4, r5, r6, lr}
   2b344:	b	2a124 <__flatcc_fb_coerce_scalar_type@@Base+0x4f8>
   2b348:	mov	r0, #0
   2b34c:	pop	{r4, r5, r6, pc}

0002b350 <flatcc_builder_offset_vector_push@@Base>:
   2b350:	ldr	r2, [r0, #32]
   2b354:	push	{r4, lr}
   2b358:	ldrh	r3, [r2, #14]
   2b35c:	cmp	r3, #5
   2b360:	beq	2b378 <flatcc_builder_offset_vector_push@@Base+0x28>
   2b364:	ldr	r3, [pc, #64]	; 2b3ac <flatcc_builder_offset_vector_push@@Base+0x5c>
   2b368:	movw	r2, #934	; 0x3a6
   2b36c:	ldr	r1, [pc, #60]	; 2b3b0 <flatcc_builder_offset_vector_push@@Base+0x60>
   2b370:	ldr	r0, [pc, #60]	; 2b3b4 <flatcc_builder_offset_vector_push@@Base+0x64>
   2b374:	bl	1417c <__assert_fail@plt>
   2b378:	ldr	r3, [r2, #20]
   2b37c:	cmn	r3, #-1073741823	; 0xc0000001
   2b380:	beq	2b3a4 <flatcc_builder_offset_vector_push@@Base+0x54>
   2b384:	add	r3, r3, #1
   2b388:	mov	r4, r1
   2b38c:	mov	r1, #4
   2b390:	str	r3, [r2, #20]
   2b394:	bl	2a124 <__flatcc_fb_coerce_scalar_type@@Base+0x4f8>
   2b398:	cmp	r0, #0
   2b39c:	strne	r4, [r0]
   2b3a0:	pop	{r4, pc}
   2b3a4:	mov	r0, #0
   2b3a8:	pop	{r4, pc}
   2b3ac:	andeq	sl, r4, r3, asr #32
   2b3b0:	ldrdeq	sl, [r4], -lr
   2b3b4:	andeq	sl, r4, r1, ror r5

0002b3b8 <flatcc_builder_append_offset_vector@@Base>:
   2b3b8:	push	{r4, r5, r6, lr}
   2b3bc:	mov	r4, r0
   2b3c0:	ldr	r0, [r0, #32]
   2b3c4:	ldrh	r3, [r0, #14]
   2b3c8:	cmp	r3, #5
   2b3cc:	beq	2b3e4 <flatcc_builder_append_offset_vector@@Base+0x2c>
   2b3d0:	ldr	r3, [pc, #68]	; 2b41c <flatcc_builder_append_offset_vector@@Base+0x64>
   2b3d4:	mov	r2, #948	; 0x3b4
   2b3d8:	ldr	r1, [pc, #64]	; 2b420 <flatcc_builder_append_offset_vector@@Base+0x68>
   2b3dc:	ldr	r0, [pc, #64]	; 2b424 <flatcc_builder_append_offset_vector@@Base+0x6c>
   2b3e0:	bl	1417c <__assert_fail@plt>
   2b3e4:	mov	r5, r2
   2b3e8:	mov	r6, r1
   2b3ec:	mvn	r2, #-1073741824	; 0xc0000000
   2b3f0:	mov	r1, r5
   2b3f4:	bl	2a6c8 <flatcc_builder_default_alloc@@Base+0x458>
   2b3f8:	cmp	r0, #0
   2b3fc:	bne	2b414 <flatcc_builder_append_offset_vector@@Base+0x5c>
   2b400:	lsl	r2, r5, #2
   2b404:	mov	r1, r6
   2b408:	mov	r0, r4
   2b40c:	pop	{r4, r5, r6, lr}
   2b410:	b	2a1f4 <__flatcc_fb_coerce_scalar_type@@Base+0x5c8>
   2b414:	mov	r0, #0
   2b418:	pop	{r4, r5, r6, pc}
   2b41c:	andeq	sl, r4, r5, rrx
   2b420:	ldrdeq	sl, [r4], -lr
   2b424:	andeq	sl, r4, r1, ror r5

0002b428 <flatcc_builder_extend_string@@Base>:
   2b428:	push	{r4, r5, r6, lr}
   2b42c:	mov	r4, r0
   2b430:	ldr	r0, [r0, #32]
   2b434:	ldrh	r3, [r0, #14]
   2b438:	cmp	r3, #6
   2b43c:	beq	2b454 <flatcc_builder_extend_string@@Base+0x2c>
   2b440:	ldr	r3, [pc, #56]	; 2b480 <flatcc_builder_extend_string@@Base+0x58>
   2b444:	movw	r2, #957	; 0x3bd
   2b448:	ldr	r1, [pc, #52]	; 2b484 <flatcc_builder_extend_string@@Base+0x5c>
   2b44c:	ldr	r0, [pc, #52]	; 2b488 <flatcc_builder_extend_string@@Base+0x60>
   2b450:	bl	1417c <__assert_fail@plt>
   2b454:	mvn	r2, #0
   2b458:	mov	r5, r1
   2b45c:	bl	2a6c8 <flatcc_builder_default_alloc@@Base+0x458>
   2b460:	cmp	r0, #0
   2b464:	bne	2b478 <flatcc_builder_extend_string@@Base+0x50>
   2b468:	mov	r1, r5
   2b46c:	mov	r0, r4
   2b470:	pop	{r4, r5, r6, lr}
   2b474:	b	2a124 <__flatcc_fb_coerce_scalar_type@@Base+0x4f8>
   2b478:	mov	r0, #0
   2b47c:	pop	{r4, r5, r6, pc}
   2b480:	andeq	sl, r4, r9, lsl #1
   2b484:	ldrdeq	sl, [r4], -lr
   2b488:	andeq	sl, r4, r4, lsr #11

0002b48c <flatcc_builder_append_string@@Base>:
   2b48c:	push	{r4, r5, r6, lr}
   2b490:	mov	r4, r0
   2b494:	ldr	r0, [r0, #32]
   2b498:	ldrh	r3, [r0, #14]
   2b49c:	cmp	r3, #6
   2b4a0:	beq	2b4b8 <flatcc_builder_append_string@@Base+0x2c>
   2b4a4:	ldr	r3, [pc, #68]	; 2b4f0 <flatcc_builder_append_string@@Base+0x64>
   2b4a8:	movw	r2, #966	; 0x3c6
   2b4ac:	ldr	r1, [pc, #64]	; 2b4f4 <flatcc_builder_append_string@@Base+0x68>
   2b4b0:	ldr	r0, [pc, #64]	; 2b4f8 <flatcc_builder_append_string@@Base+0x6c>
   2b4b4:	bl	1417c <__assert_fail@plt>
   2b4b8:	mov	r5, r2
   2b4bc:	mov	r6, r1
   2b4c0:	mvn	r2, #0
   2b4c4:	mov	r1, r5
   2b4c8:	bl	2a6c8 <flatcc_builder_default_alloc@@Base+0x458>
   2b4cc:	cmp	r0, #0
   2b4d0:	bne	2b4e8 <flatcc_builder_append_string@@Base+0x5c>
   2b4d4:	mov	r2, r5
   2b4d8:	mov	r1, r6
   2b4dc:	mov	r0, r4
   2b4e0:	pop	{r4, r5, r6, lr}
   2b4e4:	b	2a1f4 <__flatcc_fb_coerce_scalar_type@@Base+0x5c8>
   2b4e8:	mov	r0, #0
   2b4ec:	pop	{r4, r5, r6, pc}
   2b4f0:	andeq	sl, r4, r6, lsr #1
   2b4f4:	ldrdeq	sl, [r4], -lr
   2b4f8:	andeq	sl, r4, r4, lsr #11

0002b4fc <flatcc_builder_append_string_str@@Base>:
   2b4fc:	push	{r4, r5, r6, lr}
   2b500:	mov	r5, r0
   2b504:	mov	r0, r1
   2b508:	mov	r4, r1
   2b50c:	bl	140a4 <strlen@plt>
   2b510:	mov	r2, r0
   2b514:	mov	r1, r4
   2b518:	mov	r0, r5
   2b51c:	pop	{r4, r5, r6, lr}
   2b520:	b	2b48c <flatcc_builder_append_string@@Base>

0002b524 <flatcc_builder_append_string_strn@@Base>:
   2b524:	push	{r4, r5, r6, lr}
   2b528:	mov	r4, r1
   2b52c:	mov	r6, r0
   2b530:	mov	r1, #0
   2b534:	mov	r0, r4
   2b538:	mov	r5, r2
   2b53c:	bl	140f8 <memchr@plt>
   2b540:	cmp	r0, #0
   2b544:	mov	r1, r4
   2b548:	subne	r5, r0, r4
   2b54c:	mov	r0, r6
   2b550:	mov	r2, r5
   2b554:	pop	{r4, r5, r6, lr}
   2b558:	b	2b48c <flatcc_builder_append_string@@Base>

0002b55c <flatcc_builder_truncate_vector@@Base>:
   2b55c:	ldr	r3, [r0, #32]
   2b560:	push	{r4, lr}
   2b564:	ldrh	r2, [r3, #14]
   2b568:	cmp	r2, #4
   2b56c:	beq	2b584 <flatcc_builder_truncate_vector@@Base+0x28>
   2b570:	ldr	r3, [pc, #72]	; 2b5c0 <flatcc_builder_truncate_vector@@Base+0x64>
   2b574:	movw	r2, #985	; 0x3d9
   2b578:	ldr	r1, [pc, #68]	; 2b5c4 <flatcc_builder_truncate_vector@@Base+0x68>
   2b57c:	ldr	r0, [pc, #68]	; 2b5c8 <flatcc_builder_truncate_vector@@Base+0x6c>
   2b580:	bl	1417c <__assert_fail@plt>
   2b584:	ldr	r2, [r3, #20]
   2b588:	cmp	r2, r1
   2b58c:	bcs	2b5a4 <flatcc_builder_truncate_vector@@Base+0x48>
   2b590:	ldr	r3, [pc, #40]	; 2b5c0 <flatcc_builder_truncate_vector@@Base+0x64>
   2b594:	movw	r2, #986	; 0x3da
   2b598:	ldr	r1, [pc, #36]	; 2b5c4 <flatcc_builder_truncate_vector@@Base+0x68>
   2b59c:	ldr	r0, [pc, #40]	; 2b5cc <flatcc_builder_truncate_vector@@Base+0x70>
   2b5a0:	b	2b580 <flatcc_builder_truncate_vector@@Base+0x24>
   2b5a4:	sub	r2, r2, r1
   2b5a8:	str	r2, [r3, #20]
   2b5ac:	ldr	r3, [r3, #16]
   2b5b0:	mul	r1, r3, r1
   2b5b4:	bl	2a1d4 <__flatcc_fb_coerce_scalar_type@@Base+0x5a8>
   2b5b8:	mov	r0, #0
   2b5bc:	pop	{r4, pc}
   2b5c0:	andeq	sl, r4, r3, asr #1
   2b5c4:	ldrdeq	sl, [r4], -lr
   2b5c8:	andeq	sl, r4, r8, lsl #10
   2b5cc:	ldrdeq	sl, [r4], -r0

0002b5d0 <flatcc_builder_truncate_offset_vector@@Base>:
   2b5d0:	ldr	r3, [r0, #32]
   2b5d4:	push	{r4, lr}
   2b5d8:	ldrh	r2, [r3, #14]
   2b5dc:	cmp	r2, #5
   2b5e0:	beq	2b5f8 <flatcc_builder_truncate_offset_vector@@Base+0x28>
   2b5e4:	ldr	r3, [pc, #72]	; 2b634 <flatcc_builder_truncate_offset_vector@@Base+0x64>
   2b5e8:	movw	r2, #994	; 0x3e2
   2b5ec:	ldr	r1, [pc, #68]	; 2b638 <flatcc_builder_truncate_offset_vector@@Base+0x68>
   2b5f0:	ldr	r0, [pc, #68]	; 2b63c <flatcc_builder_truncate_offset_vector@@Base+0x6c>
   2b5f4:	bl	1417c <__assert_fail@plt>
   2b5f8:	ldr	r2, [r3, #20]
   2b5fc:	cmp	r2, r1
   2b600:	bcs	2b618 <flatcc_builder_truncate_offset_vector@@Base+0x48>
   2b604:	ldr	r3, [pc, #40]	; 2b634 <flatcc_builder_truncate_offset_vector@@Base+0x64>
   2b608:	movw	r2, #995	; 0x3e3
   2b60c:	ldr	r1, [pc, #36]	; 2b638 <flatcc_builder_truncate_offset_vector@@Base+0x68>
   2b610:	ldr	r0, [pc, #40]	; 2b640 <flatcc_builder_truncate_offset_vector@@Base+0x70>
   2b614:	b	2b5f4 <flatcc_builder_truncate_offset_vector@@Base+0x24>
   2b618:	sub	r2, r2, r1
   2b61c:	str	r2, [r3, #20]
   2b620:	ldr	r3, [r3, #16]
   2b624:	mul	r1, r3, r1
   2b628:	bl	2a1d4 <__flatcc_fb_coerce_scalar_type@@Base+0x5a8>
   2b62c:	mov	r0, #0
   2b630:	pop	{r4, pc}
   2b634:	andeq	sl, r4, r2, ror #1
   2b638:	ldrdeq	sl, [r4], -lr
   2b63c:	andeq	sl, r4, r1, ror r5
   2b640:	strdeq	sl, [r4], -r4

0002b644 <flatcc_builder_truncate_string@@Base>:
   2b644:	ldr	r2, [r0, #32]
   2b648:	push	{r4, lr}
   2b64c:	ldrh	r3, [r2, #14]
   2b650:	cmp	r3, #6
   2b654:	beq	2b66c <flatcc_builder_truncate_string@@Base+0x28>
   2b658:	ldr	r3, [pc, #64]	; 2b6a0 <flatcc_builder_truncate_string@@Base+0x5c>
   2b65c:	movw	r2, #1003	; 0x3eb
   2b660:	ldr	r1, [pc, #60]	; 2b6a4 <flatcc_builder_truncate_string@@Base+0x60>
   2b664:	ldr	r0, [pc, #60]	; 2b6a8 <flatcc_builder_truncate_string@@Base+0x64>
   2b668:	bl	1417c <__assert_fail@plt>
   2b66c:	ldr	r3, [r2, #20]
   2b670:	cmp	r3, r1
   2b674:	bcs	2b68c <flatcc_builder_truncate_string@@Base+0x48>
   2b678:	ldr	r3, [pc, #32]	; 2b6a0 <flatcc_builder_truncate_string@@Base+0x5c>
   2b67c:	mov	r2, #1004	; 0x3ec
   2b680:	ldr	r1, [pc, #28]	; 2b6a4 <flatcc_builder_truncate_string@@Base+0x60>
   2b684:	ldr	r0, [pc, #32]	; 2b6ac <flatcc_builder_truncate_string@@Base+0x68>
   2b688:	b	2b668 <flatcc_builder_truncate_string@@Base+0x24>
   2b68c:	sub	r3, r3, r1
   2b690:	str	r3, [r2, #20]
   2b694:	bl	2a1d4 <__flatcc_fb_coerce_scalar_type@@Base+0x5a8>
   2b698:	mov	r0, #0
   2b69c:	pop	{r4, pc}
   2b6a0:	andeq	sl, r4, r8, lsl #2
   2b6a4:	ldrdeq	sl, [r4], -lr
   2b6a8:	andeq	sl, r4, r4, lsr #11
   2b6ac:	andeq	sl, r4, pc, lsr #12

0002b6b0 <flatcc_builder_start_vector@@Base>:
   2b6b0:	cmp	r2, #4
   2b6b4:	push	{r4, r5, r6, r7, r8, lr}
   2b6b8:	mov	r7, r1
   2b6bc:	movcs	r1, r2
   2b6c0:	movcc	r1, #4
   2b6c4:	mov	r5, r0
   2b6c8:	mov	r6, r3
   2b6cc:	bl	2a3d8 <flatcc_builder_default_alloc@@Base+0x168>
   2b6d0:	subs	r4, r0, #0
   2b6d4:	mvnne	r4, #0
   2b6d8:	bne	2b700 <flatcc_builder_start_vector@@Base+0x50>
   2b6dc:	ldr	r2, [r5, #32]
   2b6e0:	mov	r3, #4
   2b6e4:	mvn	r1, #3
   2b6e8:	mov	r0, r5
   2b6ec:	strh	r3, [r2, #14]
   2b6f0:	str	r7, [r2, #16]
   2b6f4:	str	r4, [r2, #20]
   2b6f8:	str	r6, [r2, #24]
   2b6fc:	bl	2a0a8 <__flatcc_fb_coerce_scalar_type@@Base+0x47c>
   2b700:	mov	r0, r4
   2b704:	pop	{r4, r5, r6, r7, r8, pc}

0002b708 <flatcc_builder_start_offset_vector@@Base>:
   2b708:	push	{r4, r5, r6, lr}
   2b70c:	mov	r1, #4
   2b710:	mov	r5, r0
   2b714:	bl	2a3d8 <flatcc_builder_default_alloc@@Base+0x168>
   2b718:	subs	r4, r0, #0
   2b71c:	mvnne	r4, #0
   2b720:	bne	2b748 <flatcc_builder_start_offset_vector@@Base+0x40>
   2b724:	ldr	r3, [r5, #32]
   2b728:	mov	r2, #4
   2b72c:	mvn	r1, #3
   2b730:	mov	r0, r5
   2b734:	str	r2, [r3, #16]
   2b738:	mov	r2, #5
   2b73c:	strh	r2, [r3, #14]
   2b740:	str	r4, [r3, #20]
   2b744:	bl	2a0a8 <__flatcc_fb_coerce_scalar_type@@Base+0x47c>
   2b748:	mov	r0, r4
   2b74c:	pop	{r4, r5, r6, pc}

0002b750 <flatcc_builder_start_string@@Base>:
   2b750:	push	{r4, r5, r6, lr}
   2b754:	mov	r1, #1
   2b758:	mov	r5, r0
   2b75c:	bl	2a3d8 <flatcc_builder_default_alloc@@Base+0x168>
   2b760:	subs	r4, r0, #0
   2b764:	mvnne	r4, #0
   2b768:	bne	2b790 <flatcc_builder_start_string@@Base+0x40>
   2b76c:	ldr	r3, [r5, #32]
   2b770:	mov	r2, #1
   2b774:	mvn	r1, #3
   2b778:	mov	r0, r5
   2b77c:	str	r2, [r3, #16]
   2b780:	mov	r2, #6
   2b784:	strh	r2, [r3, #14]
   2b788:	str	r4, [r3, #20]
   2b78c:	bl	2a0a8 <__flatcc_fb_coerce_scalar_type@@Base+0x47c>
   2b790:	mov	r0, r4
   2b794:	pop	{r4, r5, r6, pc}

0002b798 <flatcc_builder_reserve_table@@Base>:
   2b798:	cmp	r1, #0
   2b79c:	bge	2b7b8 <flatcc_builder_reserve_table@@Base+0x20>
   2b7a0:	push	{r4, lr}
   2b7a4:	movw	r2, #1065	; 0x429
   2b7a8:	ldr	r3, [pc, #12]	; 2b7bc <flatcc_builder_reserve_table@@Base+0x24>
   2b7ac:	ldr	r1, [pc, #12]	; 2b7c0 <flatcc_builder_reserve_table@@Base+0x28>
   2b7b0:	ldr	r0, [pc, #12]	; 2b7c4 <flatcc_builder_reserve_table@@Base+0x2c>
   2b7b4:	bl	1417c <__assert_fail@plt>
   2b7b8:	b	2a4b0 <flatcc_builder_default_alloc@@Base+0x240>
   2b7bc:	andeq	sl, r4, r7, lsr #2
   2b7c0:	ldrdeq	sl, [r4], -lr
   2b7c4:	andeq	sl, r4, r7, ror #12

0002b7c8 <flatcc_builder_start_table@@Base>:
   2b7c8:	push	{r4, r5, r6, lr}
   2b7cc:	mov	r5, r1
   2b7d0:	mov	r1, #4
   2b7d4:	mov	r4, r0
   2b7d8:	bl	2a3d8 <flatcc_builder_default_alloc@@Base+0x168>
   2b7dc:	cmp	r0, #0
   2b7e0:	beq	2b7f0 <flatcc_builder_start_table@@Base+0x28>
   2b7e4:	mvn	r5, #0
   2b7e8:	mov	r0, r5
   2b7ec:	pop	{r4, r5, r6, pc}
   2b7f0:	ldr	r2, [r4, #4]
   2b7f4:	ldr	r3, [r4, #32]
   2b7f8:	ldr	r1, [r4, #52]	; 0x34
   2b7fc:	sub	r2, r2, r1
   2b800:	ldr	r1, [r4, #76]	; 0x4c
   2b804:	str	r2, [r3, #16]
   2b808:	ldr	r2, [r4]
   2b80c:	sub	r2, r2, r1
   2b810:	mov	r1, r5
   2b814:	str	r2, [r3, #20]
   2b818:	ldr	r2, [r4, #12]
   2b81c:	str	r2, [r3, #24]
   2b820:	ldrh	r2, [r4, #8]
   2b824:	strh	r2, [r3, #28]
   2b828:	ldr	r2, [pc, #44]	; 2b85c <flatcc_builder_start_table@@Base+0x94>
   2b82c:	strh	r0, [r4, #8]
   2b830:	mov	r0, r4
   2b834:	str	r2, [r4, #12]
   2b838:	mov	r2, #3
   2b83c:	strh	r2, [r3, #14]
   2b840:	bl	2a4b0 <flatcc_builder_default_alloc@@Base+0x240>
   2b844:	subs	r5, r0, #0
   2b848:	bne	2b7e4 <flatcc_builder_start_table@@Base+0x1c>
   2b84c:	movw	r1, #65532	; 0xfffc
   2b850:	mov	r0, r4
   2b854:	bl	2a0a8 <__flatcc_fb_coerce_scalar_type@@Base+0x47c>
   2b858:	b	2b7e8 <flatcc_builder_start_table@@Base+0x20>
   2b85c:	svccs	0x00693b52

0002b860 <flatcc_builder_create_vtable@@Base>:
   2b860:	mov	r3, #0
   2b864:	push	{lr}		; (str lr, [sp, #-4]!)
   2b868:	sub	sp, sp, #76	; 0x4c
   2b86c:	cmp	r2, #0
   2b870:	str	r3, [sp]
   2b874:	str	r3, [sp, #4]
   2b878:	movne	r3, #1
   2b87c:	strne	r1, [sp, #8]
   2b880:	mov	r1, sp
   2b884:	strdne	r2, [sp]
   2b888:	ldr	r3, [r0, #152]	; 0x98
   2b88c:	strne	r2, [sp, #12]
   2b890:	cmp	r3, #0
   2b894:	bne	2b8b0 <flatcc_builder_create_vtable@@Base+0x50>
   2b898:	ldr	r3, [r0, #180]	; 0xb4
   2b89c:	cmp	r3, #0
   2b8a0:	bne	2b8b0 <flatcc_builder_create_vtable@@Base+0x50>
   2b8a4:	bl	2a534 <flatcc_builder_default_alloc@@Base+0x2c4>
   2b8a8:	add	sp, sp, #76	; 0x4c
   2b8ac:	pop	{pc}		; (ldr pc, [sp], #4)
   2b8b0:	bl	2a650 <flatcc_builder_default_alloc@@Base+0x3e0>
   2b8b4:	cmp	r0, #0
   2b8b8:	addne	r0, r0, #1
   2b8bc:	b	2b8a8 <flatcc_builder_create_vtable@@Base+0x48>

0002b8c0 <flatcc_builder_create_cached_vtable@@Base>:
   2b8c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b8c4:	mov	r6, r3
   2b8c8:	sub	sp, sp, #20
   2b8cc:	mov	r4, r0
   2b8d0:	mov	sl, r1
   2b8d4:	mov	r7, r2
   2b8d8:	ldr	r3, [r0, #116]	; 0x74
   2b8dc:	cmp	r3, #0
   2b8e0:	bne	2b988 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   2b8e4:	ldr	r5, [r0, #124]	; 0x7c
   2b8e8:	add	r9, r0, #92	; 0x5c
   2b8ec:	cmp	r5, #0
   2b8f0:	beq	2b908 <flatcc_builder_create_cached_vtable@@Base+0x48>
   2b8f4:	ldr	r3, [pc, #560]	; 2bb2c <flatcc_builder_create_cached_vtable@@Base+0x26c>
   2b8f8:	movw	r2, #342	; 0x156
   2b8fc:	ldr	r1, [pc, #556]	; 2bb30 <flatcc_builder_create_cached_vtable@@Base+0x270>
   2b900:	ldr	r0, [pc, #556]	; 2bb34 <flatcc_builder_create_cached_vtable@@Base+0x274>
   2b904:	bl	1417c <__assert_fail@plt>
   2b908:	mov	r3, #16
   2b90c:	mov	r2, r5
   2b910:	str	r5, [sp]
   2b914:	mov	r1, #6
   2b918:	bl	2a368 <flatcc_builder_default_alloc@@Base+0xf8>
   2b91c:	cmp	r0, #0
   2b920:	bne	2b930 <flatcc_builder_create_cached_vtable@@Base+0x70>
   2b924:	mov	r0, #0
   2b928:	add	sp, sp, #20
   2b92c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b930:	mov	r3, #16
   2b934:	mov	r1, r9
   2b938:	ldr	r0, [r4, #40]	; 0x28
   2b93c:	mov	r2, #256	; 0x100
   2b940:	str	r3, [r4, #124]	; 0x7c
   2b944:	mov	r3, #5
   2b948:	ldr	r8, [r4, #48]	; 0x30
   2b94c:	str	r3, [sp]
   2b950:	mov	r3, #1
   2b954:	blx	r8
   2b958:	cmp	r0, #0
   2b95c:	moveq	r3, #256	; 0x100
   2b960:	ldreq	r1, [r4, #96]	; 0x60
   2b964:	bne	2b924 <flatcc_builder_create_cached_vtable@@Base+0x64>
   2b968:	lsl	r2, r3, #1
   2b96c:	cmp	r2, r1
   2b970:	bls	2ba48 <flatcc_builder_create_cached_vtable@@Base+0x188>
   2b974:	lsr	r3, r3, #2
   2b978:	mov	r2, #1
   2b97c:	cmp	r3, r2, lsl r5
   2b980:	bhi	2ba50 <flatcc_builder_create_cached_vtable@@Base+0x190>
   2b984:	str	r5, [r4, #116]	; 0x74
   2b988:	ldr	r8, [r4, #92]	; 0x5c
   2b98c:	ldr	r3, [r4, #116]	; 0x74
   2b990:	rsb	r3, r3, #32
   2b994:	lsr	r6, r6, r3
   2b998:	adds	r3, r8, r6, lsl #2
   2b99c:	ldrne	r9, [r8, r6, lsl #2]
   2b9a0:	movne	fp, #0
   2b9a4:	str	r3, [sp, #8]
   2b9a8:	beq	2b924 <flatcc_builder_create_cached_vtable@@Base+0x64>
   2b9ac:	cmp	r9, #0
   2b9b0:	bne	2ba58 <flatcc_builder_create_cached_vtable@@Base+0x198>
   2b9b4:	mov	r3, #16
   2b9b8:	mov	r1, #6
   2b9bc:	ldr	r2, [r4, #124]	; 0x7c
   2b9c0:	mov	r0, r4
   2b9c4:	str	r9, [sp]
   2b9c8:	bl	2a368 <flatcc_builder_default_alloc@@Base+0xf8>
   2b9cc:	subs	r5, r0, #0
   2b9d0:	beq	2b924 <flatcc_builder_create_cached_vtable@@Base+0x64>
   2b9d4:	ldr	r3, [r4, #124]	; 0x7c
   2b9d8:	mov	r1, sl
   2b9dc:	mov	r0, r4
   2b9e0:	add	r2, r3, #16
   2b9e4:	str	r2, [r4, #124]	; 0x7c
   2b9e8:	ldr	r2, [r4, #152]	; 0x98
   2b9ec:	str	r2, [r5, #4]
   2b9f0:	ldr	r2, [r8, r6, lsl #2]
   2b9f4:	str	r2, [r5, #12]
   2b9f8:	mov	r2, r7
   2b9fc:	str	r3, [r8, r6, lsl #2]
   2ba00:	bl	2b860 <flatcc_builder_create_vtable@@Base>
   2ba04:	cmp	r0, #0
   2ba08:	str	r0, [r5]
   2ba0c:	beq	2b924 <flatcc_builder_create_cached_vtable@@Base+0x64>
   2ba10:	cmp	fp, #0
   2ba14:	ldrne	r3, [fp, #8]
   2ba18:	strne	r3, [r5, #8]
   2ba1c:	bne	2bae0 <flatcc_builder_create_cached_vtable@@Base+0x220>
   2ba20:	ldr	r2, [r4, #120]	; 0x78
   2ba24:	ldr	r3, [r4, #172]	; 0xac
   2ba28:	cmp	r3, #0
   2ba2c:	beq	2bae8 <flatcc_builder_create_cached_vtable@@Base+0x228>
   2ba30:	add	r1, r7, r2
   2ba34:	cmp	r3, r1
   2ba38:	bcs	2bae8 <flatcc_builder_create_cached_vtable@@Base+0x228>
   2ba3c:	mov	r0, r4
   2ba40:	bl	2a874 <flatcc_builder_flush_vtable_cache@@Base>
   2ba44:	b	2bae0 <flatcc_builder_create_cached_vtable@@Base+0x220>
   2ba48:	mov	r3, r2
   2ba4c:	b	2b968 <flatcc_builder_create_cached_vtable@@Base+0xa8>
   2ba50:	add	r5, r5, #1
   2ba54:	b	2b97c <flatcc_builder_create_cached_vtable@@Base+0xbc>
   2ba58:	ldr	r0, [r4, #68]	; 0x44
   2ba5c:	str	r3, [sp, #12]
   2ba60:	ldr	r5, [r4, #100]	; 0x64
   2ba64:	add	r5, r5, r9
   2ba68:	ldr	r2, [r5, #8]
   2ba6c:	add	r1, r0, r2
   2ba70:	ldrh	r2, [r0, r2]
   2ba74:	cmp	r2, r7
   2ba78:	bne	2ba94 <flatcc_builder_create_cached_vtable@@Base+0x1d4>
   2ba7c:	mov	r2, r7
   2ba80:	mov	r0, sl
   2ba84:	bl	14014 <memcmp@plt>
   2ba88:	cmp	r0, #0
   2ba8c:	ldr	r3, [sp, #12]
   2ba90:	beq	2baa0 <flatcc_builder_create_cached_vtable@@Base+0x1e0>
   2ba94:	add	r3, r5, #12
   2ba98:	ldr	r9, [r5, #12]
   2ba9c:	b	2b9ac <flatcc_builder_create_cached_vtable@@Base+0xec>
   2baa0:	ldr	r1, [r5, #4]
   2baa4:	ldr	r2, [r4, #152]	; 0x98
   2baa8:	cmp	r1, r2
   2baac:	beq	2bac0 <flatcc_builder_create_cached_vtable@@Base+0x200>
   2bab0:	add	r3, r5, #12
   2bab4:	mov	fp, r5
   2bab8:	ldr	r9, [r5, #12]
   2babc:	b	2b9ac <flatcc_builder_create_cached_vtable@@Base+0xec>
   2bac0:	ldr	r2, [sp, #8]
   2bac4:	cmp	r3, r2
   2bac8:	beq	2bae0 <flatcc_builder_create_cached_vtable@@Base+0x220>
   2bacc:	ldr	r2, [r5, #12]
   2bad0:	str	r2, [r3]
   2bad4:	ldr	r3, [r8, r6, lsl #2]
   2bad8:	str	r3, [r5, #12]
   2badc:	str	r9, [r8, r6, lsl #2]
   2bae0:	ldr	r0, [r5]
   2bae4:	b	2b928 <flatcc_builder_create_cached_vtable@@Base+0x68>
   2bae8:	mov	r3, #0
   2baec:	mov	r1, #2
   2baf0:	mov	r0, r4
   2baf4:	str	r3, [sp]
   2baf8:	mov	r3, r7
   2bafc:	bl	2a368 <flatcc_builder_default_alloc@@Base+0xf8>
   2bb00:	cmp	r0, #0
   2bb04:	mvneq	r0, #0
   2bb08:	beq	2b928 <flatcc_builder_create_cached_vtable@@Base+0x68>
   2bb0c:	ldr	r3, [r4, #120]	; 0x78
   2bb10:	mov	r2, r7
   2bb14:	mov	r1, sl
   2bb18:	str	r3, [r5, #8]
   2bb1c:	add	r3, r3, r7
   2bb20:	str	r3, [r4, #120]	; 0x78
   2bb24:	bl	13ffc <memcpy@plt>
   2bb28:	b	2bae0 <flatcc_builder_create_cached_vtable@@Base+0x220>
   2bb2c:	andeq	sl, r4, r4, asr #2
   2bb30:	ldrdeq	sl, [r4], -lr
   2bb34:	andeq	sl, r4, r1, asr r6

0002bb38 <flatcc_builder_create_table@@Base>:
   2bb38:	push	{r4, r5, r6, r7, lr}
   2bb3c:	sub	sp, sp, #84	; 0x54
   2bb40:	ldr	r4, [sp, #108]	; 0x6c
   2bb44:	ldr	ip, [sp, #112]	; 0x70
   2bb48:	cmp	r4, #0
   2bb4c:	bge	2bb64 <flatcc_builder_create_table@@Base+0x2c>
   2bb50:	ldr	r3, [pc, #276]	; 2bc6c <flatcc_builder_create_table@@Base+0x134>
   2bb54:	movw	r2, #1237	; 0x4d5
   2bb58:	ldr	r1, [pc, #272]	; 2bc70 <flatcc_builder_create_table@@Base+0x138>
   2bb5c:	ldr	r0, [pc, #272]	; 2bc74 <flatcc_builder_create_table@@Base+0x13c>
   2bb60:	bl	1417c <__assert_fail@plt>
   2bb64:	tst	ip, #1
   2bb68:	bne	2bb80 <flatcc_builder_create_table@@Base+0x48>
   2bb6c:	ldr	r3, [pc, #248]	; 2bc6c <flatcc_builder_create_table@@Base+0x134>
   2bb70:	movw	r2, #1243	; 0x4db
   2bb74:	ldr	r1, [pc, #244]	; 2bc70 <flatcc_builder_create_table@@Base+0x138>
   2bb78:	ldr	r0, [pc, #248]	; 2bc78 <flatcc_builder_create_table@@Base+0x140>
   2bb7c:	b	2bb60 <flatcc_builder_create_table@@Base+0x28>
   2bb80:	cmp	r3, #4
   2bb84:	sub	ip, ip, #1
   2bb88:	movcs	lr, r3
   2bb8c:	ldrh	r3, [r0, #128]	; 0x80
   2bb90:	movcc	lr, #4
   2bb94:	cmp	r3, lr
   2bb98:	ldr	r3, [r0, #136]	; 0x88
   2bb9c:	strhcc	lr, [r0, #128]	; 0x80
   2bba0:	sub	lr, lr, #1
   2bba4:	sub	r5, r3, r2
   2bba8:	sub	r3, r5, #4
   2bbac:	and	lr, lr, r5
   2bbb0:	sub	ip, r3, ip
   2bbb4:	sub	r3, lr, r3
   2bbb8:	sub	ip, ip, lr
   2bbbc:	sub	r3, r3, #4
   2bbc0:	str	ip, [sp, #4]
   2bbc4:	ldr	ip, [sp, #104]	; 0x68
   2bbc8:	add	r4, ip, r4, lsl #1
   2bbcc:	cmp	r4, ip
   2bbd0:	bne	2bc54 <flatcc_builder_create_table@@Base+0x11c>
   2bbd4:	mov	r3, #4
   2bbd8:	cmp	r2, #0
   2bbdc:	add	ip, sp, r3
   2bbe0:	str	r3, [sp, #8]
   2bbe4:	str	ip, [sp, #16]
   2bbe8:	str	r3, [sp, #20]
   2bbec:	mov	r3, #1
   2bbf0:	str	r3, [sp, #12]
   2bbf4:	beq	2bc10 <flatcc_builder_create_table@@Base+0xd8>
   2bbf8:	add	r3, r2, #4
   2bbfc:	str	r3, [sp, #8]
   2bc00:	mov	r3, #2
   2bc04:	str	r1, [sp, #24]
   2bc08:	str	r3, [sp, #12]
   2bc0c:	str	r2, [sp, #28]
   2bc10:	cmp	lr, #0
   2bc14:	beq	2bc44 <flatcc_builder_create_table@@Base+0x10c>
   2bc18:	ldr	r3, [sp, #8]
   2bc1c:	add	r2, sp, #80	; 0x50
   2bc20:	ldr	r1, [pc, #84]	; 2bc7c <flatcc_builder_create_table@@Base+0x144>
   2bc24:	add	r3, r3, lr
   2bc28:	str	r3, [sp, #8]
   2bc2c:	ldr	r3, [sp, #12]
   2bc30:	add	r3, r3, #1
   2bc34:	add	r2, r2, r3, lsl #3
   2bc38:	str	r3, [sp, #12]
   2bc3c:	str	r1, [r2, #-72]	; 0xffffffb8
   2bc40:	str	lr, [r2, #-68]	; 0xffffffbc
   2bc44:	add	r1, sp, #8
   2bc48:	bl	2a650 <flatcc_builder_default_alloc@@Base+0x3e0>
   2bc4c:	add	sp, sp, #84	; 0x54
   2bc50:	pop	{r4, r5, r6, r7, pc}
   2bc54:	ldrh	r5, [ip], #2
   2bc58:	ldr	r6, [r1, r5]
   2bc5c:	sub	r7, r3, r5
   2bc60:	add	r6, r6, r7
   2bc64:	str	r6, [r1, r5]
   2bc68:	b	2bbcc <flatcc_builder_create_table@@Base+0x94>
   2bc6c:	andeq	sl, r4, sp, asr #2
   2bc70:	ldrdeq	sl, [r4], -lr
   2bc74:	andeq	sl, r4, r0, ror #12
   2bc78:	andeq	sl, r4, r2, ror r6
   2bc7c:	strdeq	r9, [r4], -r8

0002bc80 <flatcc_builder_check_required_field@@Base>:
   2bc80:	ldr	r3, [r0, #32]
   2bc84:	ldrh	r3, [r3, #14]
   2bc88:	cmp	r3, #3
   2bc8c:	beq	2bca8 <flatcc_builder_check_required_field@@Base+0x28>
   2bc90:	push	{r4, lr}
   2bc94:	movw	r2, #1272	; 0x4f8
   2bc98:	ldr	r3, [pc, #52]	; 2bcd4 <flatcc_builder_check_required_field@@Base+0x54>
   2bc9c:	ldr	r1, [pc, #52]	; 2bcd8 <flatcc_builder_check_required_field@@Base+0x58>
   2bca0:	ldr	r0, [pc, #52]	; 2bcdc <flatcc_builder_check_required_field@@Base+0x5c>
   2bca4:	bl	1417c <__assert_fail@plt>
   2bca8:	ldrh	r3, [r0, #8]
   2bcac:	cmp	r3, r1
   2bcb0:	bls	2bccc <flatcc_builder_check_required_field@@Base+0x4c>
   2bcb4:	ldr	r3, [r0, #4]
   2bcb8:	lsl	r1, r1, #1
   2bcbc:	ldrh	r0, [r3, r1]
   2bcc0:	adds	r0, r0, #0
   2bcc4:	movne	r0, #1
   2bcc8:	bx	lr
   2bccc:	mov	r0, #0
   2bcd0:	bx	lr
   2bcd4:	andeq	sl, r4, r9, ror #2
   2bcd8:	ldrdeq	sl, [r4], -lr
   2bcdc:	andeq	sl, r4, sp, ror r6

0002bce0 <flatcc_builder_check_union_field@@Base>:
   2bce0:	ldr	r3, [r0, #32]
   2bce4:	ldrh	r3, [r3, #14]
   2bce8:	cmp	r3, #3
   2bcec:	beq	2bd08 <flatcc_builder_check_union_field@@Base+0x28>
   2bcf0:	push	{r4, lr}
   2bcf4:	movw	r2, #1279	; 0x4ff
   2bcf8:	ldr	r3, [pc, #104]	; 2bd68 <flatcc_builder_check_union_field@@Base+0x88>
   2bcfc:	ldr	r1, [pc, #104]	; 2bd6c <flatcc_builder_check_union_field@@Base+0x8c>
   2bd00:	ldr	r0, [pc, #104]	; 2bd70 <flatcc_builder_check_union_field@@Base+0x90>
   2bd04:	bl	1417c <__assert_fail@plt>
   2bd08:	cmp	r1, #0
   2bd0c:	beq	2bd60 <flatcc_builder_check_union_field@@Base+0x80>
   2bd10:	ldrh	r3, [r0, #8]
   2bd14:	cmp	r3, r1
   2bd18:	bls	2bd60 <flatcc_builder_check_union_field@@Base+0x80>
   2bd1c:	ldr	r3, [r0, #4]
   2bd20:	sub	r1, r1, #-2147483647	; 0x80000001
   2bd24:	lsl	r1, r1, #1
   2bd28:	ldrh	r2, [r3, r1]!
   2bd2c:	cmp	r2, #0
   2bd30:	ldrh	r1, [r3, #2]
   2bd34:	bne	2bd44 <flatcc_builder_check_union_field@@Base+0x64>
   2bd38:	clz	r0, r1
   2bd3c:	lsr	r0, r0, #5
   2bd40:	bx	lr
   2bd44:	ldr	r3, [r0, #16]
   2bd48:	ldrb	r3, [r3, r2]
   2bd4c:	cmp	r3, #0
   2bd50:	beq	2bd38 <flatcc_builder_check_union_field@@Base+0x58>
   2bd54:	adds	r0, r1, #0
   2bd58:	movne	r0, #1
   2bd5c:	bx	lr
   2bd60:	mov	r0, #0
   2bd64:	bx	lr
   2bd68:	andeq	sl, r4, sp, lsl #3
   2bd6c:	ldrdeq	sl, [r4], -lr
   2bd70:	andeq	sl, r4, sp, ror r6

0002bd74 <flatcc_builder_check_required@@Base>:
   2bd74:	ldr	r3, [r0, #32]
   2bd78:	push	{r4, lr}
   2bd7c:	ldrh	r3, [r3, #14]
   2bd80:	cmp	r3, #3
   2bd84:	beq	2bd9c <flatcc_builder_check_required@@Base+0x28>
   2bd88:	ldr	r3, [pc, #84]	; 2bde4 <flatcc_builder_check_required@@Base+0x70>
   2bd8c:	movw	r2, #1297	; 0x511
   2bd90:	ldr	r1, [pc, #80]	; 2bde8 <flatcc_builder_check_required@@Base+0x74>
   2bd94:	ldr	r0, [pc, #80]	; 2bdec <flatcc_builder_check_required@@Base+0x78>
   2bd98:	bl	1417c <__assert_fail@plt>
   2bd9c:	ldrh	r3, [r0, #8]
   2bda0:	cmp	r3, r2
   2bda4:	subge	r1, r1, #2
   2bda8:	movge	ip, #0
   2bdac:	bge	2bdd4 <flatcc_builder_check_required@@Base+0x60>
   2bdb0:	mov	r0, #0
   2bdb4:	pop	{r4, pc}
   2bdb8:	ldrh	r3, [r1, #2]!
   2bdbc:	ldr	lr, [r0, #4]
   2bdc0:	lsl	r3, r3, #1
   2bdc4:	ldrh	r3, [lr, r3]
   2bdc8:	cmp	r3, #0
   2bdcc:	beq	2bdb0 <flatcc_builder_check_required@@Base+0x3c>
   2bdd0:	add	ip, ip, #1
   2bdd4:	cmp	ip, r2
   2bdd8:	blt	2bdb8 <flatcc_builder_check_required@@Base+0x44>
   2bddc:	mov	r0, #1
   2bde0:	pop	{r4, pc}
   2bde4:	andeq	sl, r4, lr, lsr #3
   2bde8:	ldrdeq	sl, [r4], -lr
   2bdec:	andeq	sl, r4, sp, ror r6

0002bdf0 <flatcc_builder_end_table@@Base>:
   2bdf0:	ldr	r3, [r0, #32]
   2bdf4:	push	{r4, r5, r6, r7, lr}
   2bdf8:	sub	sp, sp, #20
   2bdfc:	ldrh	r3, [r3, #14]
   2be00:	cmp	r3, #3
   2be04:	beq	2be1c <flatcc_builder_end_table@@Base+0x2c>
   2be08:	ldr	r3, [pc, #260]	; 2bf14 <flatcc_builder_end_table@@Base+0x124>
   2be0c:	movw	r2, #1317	; 0x525
   2be10:	ldr	r1, [pc, #256]	; 2bf18 <flatcc_builder_end_table@@Base+0x128>
   2be14:	ldr	r0, [pc, #256]	; 2bf1c <flatcc_builder_end_table@@Base+0x12c>
   2be18:	bl	1417c <__assert_fail@plt>
   2be1c:	ldrh	r5, [r0, #8]
   2be20:	mov	r4, r0
   2be24:	ldr	r1, [r0, #4]
   2be28:	ldr	r3, [r0, #20]
   2be2c:	add	r5, r5, #2
   2be30:	lsl	r5, r5, #1
   2be34:	sub	r6, r1, #4
   2be38:	uxth	r5, r5
   2be3c:	add	r3, r3, #4
   2be40:	uxth	r2, r3
   2be44:	ldr	r3, [r0, #12]
   2be48:	strh	r5, [r1, #-4]
   2be4c:	strh	r2, [r1, #-2]
   2be50:	ldr	r1, [pc, #200]	; 2bf20 <flatcc_builder_end_table@@Base+0x130>
   2be54:	eor	r3, r3, r5
   2be58:	mul	r3, r1, r3
   2be5c:	eor	r3, r3, r2
   2be60:	mov	r2, r5
   2be64:	mul	r3, r1, r3
   2be68:	mov	r1, r6
   2be6c:	str	r3, [r0, #12]
   2be70:	bl	2b8c0 <flatcc_builder_create_cached_vtable@@Base>
   2be74:	subs	r7, r0, #0
   2be78:	beq	2bf08 <flatcc_builder_end_table@@Base+0x118>
   2be7c:	mov	r2, r5
   2be80:	mov	r1, #0
   2be84:	mov	r0, r6
   2be88:	bl	140d4 <memset@plt>
   2be8c:	ldr	r3, [r4, #32]
   2be90:	mov	r0, r4
   2be94:	ldr	r2, [r4, #76]	; 0x4c
   2be98:	ldr	r3, [r3, #20]
   2be9c:	str	r7, [sp, #8]
   2bea0:	add	r2, r2, r3
   2bea4:	ldr	r3, [r4]
   2bea8:	sub	r3, r3, r2
   2beac:	asr	r3, r3, #1
   2beb0:	strd	r2, [sp]
   2beb4:	ldrh	r3, [r4, #130]	; 0x82
   2beb8:	ldr	r1, [r4, #16]
   2bebc:	ldr	r2, [r4, #20]
   2bec0:	bl	2bb38 <flatcc_builder_create_table@@Base>
   2bec4:	subs	r7, r0, #0
   2bec8:	beq	2bf08 <flatcc_builder_end_table@@Base+0x118>
   2becc:	ldr	r3, [r4, #32]
   2bed0:	mov	r0, r4
   2bed4:	ldr	r1, [r3, #16]
   2bed8:	ldr	r2, [r3, #24]
   2bedc:	str	r2, [r4, #12]
   2bee0:	ldrh	r2, [r3, #28]
   2bee4:	ldr	r3, [r3, #20]
   2bee8:	strh	r2, [r4, #8]
   2beec:	ldr	r2, [r4, #52]	; 0x34
   2bef0:	add	r2, r2, r1
   2bef4:	str	r2, [r4, #4]
   2bef8:	ldr	r2, [r4, #76]	; 0x4c
   2befc:	add	r3, r2, r3
   2bf00:	str	r3, [r4]
   2bf04:	bl	2a16c <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2bf08:	mov	r0, r7
   2bf0c:	add	sp, sp, #20
   2bf10:	pop	{r4, r5, r6, r7, pc}
   2bf14:	andeq	sl, r4, ip, asr #3
   2bf18:	ldrdeq	sl, [r4], -lr
   2bf1c:	andeq	sl, r4, sp, ror r6
   2bf20:			; <UNDEFINED> instruction: 0x9e3779b1

0002bf24 <flatcc_builder_create_vector@@Base>:
   2bf24:	push	{lr}		; (str lr, [sp, #-4]!)
   2bf28:	sub	sp, sp, #84	; 0x54
   2bf2c:	ldr	lr, [sp, #92]	; 0x5c
   2bf30:	ldrh	ip, [sp, #88]	; 0x58
   2bf34:	cmp	r2, lr
   2bf38:	bls	2bf50 <flatcc_builder_create_vector@@Base+0x2c>
   2bf3c:	ldr	r3, [pc, #184]	; 2bffc <flatcc_builder_create_vector@@Base+0xd8>
   2bf40:	movw	r2, #1365	; 0x555
   2bf44:	ldr	r1, [pc, #180]	; 2c000 <flatcc_builder_create_vector@@Base+0xdc>
   2bf48:	ldr	r0, [pc, #180]	; 2c004 <flatcc_builder_create_vector@@Base+0xe0>
   2bf4c:	bl	1417c <__assert_fail@plt>
   2bf50:	ldrh	lr, [r0, #128]	; 0x80
   2bf54:	mul	r3, r3, r2
   2bf58:	cmp	ip, #4
   2bf5c:	str	r2, [sp, #4]
   2bf60:	movcc	ip, #4
   2bf64:	ldr	r2, [r0, #136]	; 0x88
   2bf68:	cmp	lr, ip
   2bf6c:	sub	r2, r2, r3
   2bf70:	strhcc	ip, [r0, #128]	; 0x80
   2bf74:	sub	ip, ip, #1
   2bf78:	and	ip, ip, r2
   2bf7c:	mov	r2, #4
   2bf80:	add	lr, sp, r2
   2bf84:	cmp	r3, #0
   2bf88:	str	r2, [sp, #8]
   2bf8c:	str	lr, [sp, #16]
   2bf90:	str	r2, [sp, #20]
   2bf94:	mov	r2, #1
   2bf98:	str	r2, [sp, #12]
   2bf9c:	beq	2bfb8 <flatcc_builder_create_vector@@Base+0x94>
   2bfa0:	add	r2, r3, #4
   2bfa4:	str	r3, [sp, #28]
   2bfa8:	mov	r3, #2
   2bfac:	str	r2, [sp, #8]
   2bfb0:	str	r3, [sp, #12]
   2bfb4:	str	r1, [sp, #24]
   2bfb8:	cmp	ip, #0
   2bfbc:	beq	2bfec <flatcc_builder_create_vector@@Base+0xc8>
   2bfc0:	ldr	r3, [sp, #8]
   2bfc4:	add	r2, sp, #80	; 0x50
   2bfc8:	ldr	r1, [pc, #56]	; 2c008 <flatcc_builder_create_vector@@Base+0xe4>
   2bfcc:	add	r3, r3, ip
   2bfd0:	str	r3, [sp, #8]
   2bfd4:	ldr	r3, [sp, #12]
   2bfd8:	add	r3, r3, #1
   2bfdc:	add	r2, r2, r3, lsl #3
   2bfe0:	str	r3, [sp, #12]
   2bfe4:	str	r1, [r2, #-72]	; 0xffffffb8
   2bfe8:	str	ip, [r2, #-68]	; 0xffffffbc
   2bfec:	add	r1, sp, #8
   2bff0:	bl	2a650 <flatcc_builder_default_alloc@@Base+0x3e0>
   2bff4:	add	sp, sp, #84	; 0x54
   2bff8:	pop	{pc}		; (ldr pc, [sp], #4)
   2bffc:	andeq	sl, r4, r5, ror #3
   2c000:	ldrdeq	sl, [r4], -lr
   2c004:	andeq	sl, r4, r8, lsr #13
   2c008:	strdeq	r9, [r4], -r8

0002c00c <flatcc_builder_end_vector@@Base>:
   2c00c:	push	{r0, r1, r2, r4, r5, lr}
   2c010:	ldr	r2, [r0, #32]
   2c014:	ldrh	r3, [r2, #14]
   2c018:	cmp	r3, #4
   2c01c:	beq	2c034 <flatcc_builder_end_vector@@Base+0x28>
   2c020:	ldr	r3, [pc, #76]	; 2c074 <flatcc_builder_end_vector@@Base+0x68>
   2c024:	movw	r2, #1400	; 0x578
   2c028:	ldr	r1, [pc, #72]	; 2c078 <flatcc_builder_end_vector@@Base+0x6c>
   2c02c:	ldr	r0, [pc, #72]	; 2c07c <flatcc_builder_end_vector@@Base+0x70>
   2c030:	bl	1417c <__assert_fail@plt>
   2c034:	ldr	r3, [r2, #24]
   2c038:	mov	r4, r0
   2c03c:	str	r3, [sp, #4]
   2c040:	ldrh	r3, [r0, #130]	; 0x82
   2c044:	str	r3, [sp]
   2c048:	ldr	r3, [r2, #16]
   2c04c:	ldr	r1, [r0, #16]
   2c050:	ldr	r2, [r2, #20]
   2c054:	bl	2bf24 <flatcc_builder_create_vector@@Base>
   2c058:	subs	r5, r0, #0
   2c05c:	beq	2c068 <flatcc_builder_end_vector@@Base+0x5c>
   2c060:	mov	r0, r4
   2c064:	bl	2a16c <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2c068:	mov	r0, r5
   2c06c:	add	sp, sp, #12
   2c070:	pop	{r4, r5, pc}
   2c074:	andeq	sl, r4, r2, lsl #4
   2c078:	ldrdeq	sl, [r4], -lr
   2c07c:	andeq	sl, r4, r8, lsl #10

0002c080 <flatcc_builder_vector_count@@Base>:
   2c080:	ldr	r3, [r0, #32]
   2c084:	ldr	r0, [r3, #20]
   2c088:	bx	lr

0002c08c <flatcc_builder_vector_edit@@Base>:
   2c08c:	ldr	r0, [r0, #16]
   2c090:	bx	lr

0002c094 <flatcc_builder_create_offset_vector_direct@@Base>:
   2c094:	cmn	r2, #-1073741823	; 0xc0000001
   2c098:	bhi	2c0a4 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
   2c09c:	mov	r3, #0
   2c0a0:	b	2a71c <flatcc_builder_default_alloc@@Base+0x4ac>
   2c0a4:	mov	r0, #0
   2c0a8:	bx	lr

0002c0ac <flatcc_builder_end_offset_vector@@Base>:
   2c0ac:	ldr	r3, [r0, #32]
   2c0b0:	push	{r4, r5, r6, lr}
   2c0b4:	ldrh	r2, [r3, #14]
   2c0b8:	cmp	r2, #5
   2c0bc:	beq	2c0d4 <flatcc_builder_end_offset_vector@@Base+0x28>
   2c0c0:	ldr	r3, [pc, #52]	; 2c0fc <flatcc_builder_end_offset_vector@@Base+0x50>
   2c0c4:	movw	r2, #1480	; 0x5c8
   2c0c8:	ldr	r1, [pc, #48]	; 2c100 <flatcc_builder_end_offset_vector@@Base+0x54>
   2c0cc:	ldr	r0, [pc, #48]	; 2c104 <flatcc_builder_end_offset_vector@@Base+0x58>
   2c0d0:	bl	1417c <__assert_fail@plt>
   2c0d4:	ldr	r1, [r0, #16]
   2c0d8:	mov	r4, r0
   2c0dc:	ldr	r2, [r3, #20]
   2c0e0:	bl	2c094 <flatcc_builder_create_offset_vector_direct@@Base>
   2c0e4:	subs	r5, r0, #0
   2c0e8:	beq	2c0f4 <flatcc_builder_end_offset_vector@@Base+0x48>
   2c0ec:	mov	r0, r4
   2c0f0:	bl	2a16c <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2c0f4:	mov	r0, r5
   2c0f8:	pop	{r4, r5, r6, pc}
   2c0fc:	andeq	sl, r4, ip, lsl r2
   2c100:	ldrdeq	sl, [r4], -lr
   2c104:	andeq	sl, r4, r1, ror r5

0002c108 <flatcc_builder_create_offset_vector@@Base>:
   2c108:	push	{r4, r5, r6, lr}
   2c10c:	mov	r4, r0
   2c110:	mov	r6, r1
   2c114:	mov	r5, r2
   2c118:	bl	2b708 <flatcc_builder_start_offset_vector@@Base>
   2c11c:	cmp	r0, #0
   2c120:	bne	2c150 <flatcc_builder_create_offset_vector@@Base+0x48>
   2c124:	mov	r1, r5
   2c128:	mov	r0, r4
   2c12c:	bl	2b318 <flatcc_builder_extend_offset_vector@@Base>
   2c130:	cmp	r0, #0
   2c134:	beq	2c150 <flatcc_builder_create_offset_vector@@Base+0x48>
   2c138:	lsl	r2, r5, #2
   2c13c:	mov	r1, r6
   2c140:	bl	13ffc <memcpy@plt>
   2c144:	mov	r0, r4
   2c148:	pop	{r4, r5, r6, lr}
   2c14c:	b	2c0ac <flatcc_builder_end_offset_vector@@Base>
   2c150:	mov	r0, #0
   2c154:	pop	{r4, r5, r6, pc}

0002c158 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   2c158:	ldr	r2, [r0, #32]
   2c15c:	mov	r3, r1
   2c160:	push	{r4, r5, r6, lr}
   2c164:	ldrh	r1, [r2, #14]
   2c168:	cmp	r1, #5
   2c16c:	beq	2c184 <flatcc_builder_end_offset_vector_for_unions@@Base+0x2c>
   2c170:	ldr	r3, [pc, #64]	; 2c1b8 <flatcc_builder_end_offset_vector_for_unions@@Base+0x60>
   2c174:	movw	r2, #1493	; 0x5d5
   2c178:	ldr	r1, [pc, #60]	; 2c1bc <flatcc_builder_end_offset_vector_for_unions@@Base+0x64>
   2c17c:	ldr	r0, [pc, #60]	; 2c1c0 <flatcc_builder_end_offset_vector_for_unions@@Base+0x68>
   2c180:	bl	1417c <__assert_fail@plt>
   2c184:	ldr	r2, [r2, #20]
   2c188:	cmn	r2, #-1073741823	; 0xc0000001
   2c18c:	movhi	r5, #0
   2c190:	bhi	2c1b0 <flatcc_builder_end_offset_vector_for_unions@@Base+0x58>
   2c194:	ldr	r1, [r0, #16]
   2c198:	mov	r4, r0
   2c19c:	bl	2a71c <flatcc_builder_default_alloc@@Base+0x4ac>
   2c1a0:	subs	r5, r0, #0
   2c1a4:	beq	2c1b0 <flatcc_builder_end_offset_vector_for_unions@@Base+0x58>
   2c1a8:	mov	r0, r4
   2c1ac:	bl	2a16c <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2c1b0:	mov	r0, r5
   2c1b4:	pop	{r4, r5, r6, pc}
   2c1b8:	andeq	sl, r4, sp, lsr r2
   2c1bc:	ldrdeq	sl, [r4], -lr
   2c1c0:	andeq	sl, r4, r1, ror r5

0002c1c4 <flatcc_builder_offset_vector_edit@@Base>:
   2c1c4:	ldr	r0, [r0, #16]
   2c1c8:	bx	lr

0002c1cc <flatcc_builder_offset_vector_count@@Base>:
   2c1cc:	ldr	r3, [r0, #32]
   2c1d0:	ldr	r0, [r3, #20]
   2c1d4:	bx	lr

0002c1d8 <flatcc_builder_create_union_vector_direct@@Base>:
   2c1d8:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   2c1dc:	mov	r4, r0
   2c1e0:	ldr	r5, [sp, #32]
   2c1e4:	cmn	r5, #-1073741823	; 0xc0000001
   2c1e8:	bls	2c204 <flatcc_builder_create_union_vector_direct@@Base+0x2c>
   2c1ec:	mov	r3, #0
   2c1f0:	str	r3, [r4]
   2c1f4:	str	r3, [r4, #4]
   2c1f8:	mov	r0, r4
   2c1fc:	add	sp, sp, #8
   2c200:	pop	{r4, r5, r6, r7, r8, pc}
   2c204:	mov	r7, r1
   2c208:	mov	r8, r2
   2c20c:	mov	r1, r3
   2c210:	mov	r0, r7
   2c214:	mov	r3, r2
   2c218:	mov	r2, r5
   2c21c:	bl	2a71c <flatcc_builder_default_alloc@@Base+0x4ac>
   2c220:	subs	r6, r0, #0
   2c224:	beq	2c1ec <flatcc_builder_create_union_vector_direct@@Base+0x14>
   2c228:	mvn	r3, #0
   2c22c:	mov	r2, r5
   2c230:	mov	r1, r8
   2c234:	mov	r0, r7
   2c238:	str	r3, [sp, #4]
   2c23c:	mov	r3, #1
   2c240:	str	r3, [sp]
   2c244:	bl	2bf24 <flatcc_builder_create_vector@@Base>
   2c248:	stm	r4, {r0, r6}
   2c24c:	b	2c1f8 <flatcc_builder_create_union_vector_direct@@Base+0x20>

0002c250 <flatcc_builder_create_union_vector@@Base>:
   2c250:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   2c254:	mov	r6, r0
   2c258:	mov	r0, r1
   2c25c:	mov	r5, r1
   2c260:	mov	r8, r2
   2c264:	mov	r7, r3
   2c268:	bl	2b708 <flatcc_builder_start_offset_vector@@Base>
   2c26c:	subs	r4, r0, #0
   2c270:	beq	2c28c <flatcc_builder_create_union_vector@@Base+0x3c>
   2c274:	mov	r3, #0
   2c278:	str	r3, [r6]
   2c27c:	str	r3, [r6, #4]
   2c280:	mov	r0, r6
   2c284:	add	sp, sp, #16
   2c288:	pop	{r4, r5, r6, r7, r8, pc}
   2c28c:	mov	r1, r7
   2c290:	mov	r0, r5
   2c294:	bl	2b318 <flatcc_builder_extend_offset_vector@@Base>
   2c298:	cmp	r0, #0
   2c29c:	beq	2c274 <flatcc_builder_create_union_vector@@Base+0x24>
   2c2a0:	mov	r1, r7
   2c2a4:	mov	r0, r5
   2c2a8:	bl	2a124 <__flatcc_fb_coerce_scalar_type@@Base+0x4f8>
   2c2ac:	subs	r2, r0, #0
   2c2b0:	movne	r1, r4
   2c2b4:	addne	r0, r8, #4
   2c2b8:	ldrne	r3, [r5, #16]
   2c2bc:	beq	2c274 <flatcc_builder_create_union_vector@@Base+0x24>
   2c2c0:	cmp	r1, r7
   2c2c4:	bne	2c2f4 <flatcc_builder_create_union_vector@@Base+0xa4>
   2c2c8:	add	r0, sp, #8
   2c2cc:	str	r1, [sp]
   2c2d0:	mov	r1, r5
   2c2d4:	bl	2c1d8 <flatcc_builder_create_union_vector_direct@@Base>
   2c2d8:	ldr	r7, [sp, #8]
   2c2dc:	mov	r0, r5
   2c2e0:	ldr	r4, [sp, #12]
   2c2e4:	bl	2a16c <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2c2e8:	str	r7, [r6]
   2c2ec:	str	r4, [r6, #4]
   2c2f0:	b	2c280 <flatcc_builder_create_union_vector@@Base+0x30>
   2c2f4:	ldrb	ip, [r8, r1, lsl #3]
   2c2f8:	strb	ip, [r2, r1]
   2c2fc:	ldr	ip, [r0, r1, lsl #3]
   2c300:	str	ip, [r3, r1, lsl #2]
   2c304:	add	r1, r1, #1
   2c308:	b	2c2c0 <flatcc_builder_create_union_vector@@Base+0x70>

0002c30c <flatcc_builder_start_union_vector@@Base>:
   2c30c:	push	{r4, r5, r6, lr}
   2c310:	mov	r1, #4
   2c314:	mov	r5, r0
   2c318:	bl	2a3d8 <flatcc_builder_default_alloc@@Base+0x168>
   2c31c:	subs	r4, r0, #0
   2c320:	mvnne	r4, #0
   2c324:	bne	2c34c <flatcc_builder_start_union_vector@@Base+0x40>
   2c328:	ldr	r3, [r5, #32]
   2c32c:	mov	r2, #8
   2c330:	mvn	r1, #3
   2c334:	mov	r0, r5
   2c338:	str	r2, [r3, #16]
   2c33c:	mov	r2, #7
   2c340:	strh	r2, [r3, #14]
   2c344:	str	r4, [r3, #20]
   2c348:	bl	2a0a8 <__flatcc_fb_coerce_scalar_type@@Base+0x47c>
   2c34c:	mov	r0, r4
   2c350:	pop	{r4, r5, r6, pc}

0002c354 <flatcc_builder_end_union_vector@@Base>:
   2c354:	ldr	r3, [r1, #32]
   2c358:	push	{r4, r5, r6, r7, lr}
   2c35c:	sub	sp, sp, #20
   2c360:	ldrh	r2, [r3, #14]
   2c364:	cmp	r2, #7
   2c368:	beq	2c380 <flatcc_builder_end_union_vector@@Base+0x2c>
   2c36c:	ldr	r3, [pc, #156]	; 2c410 <flatcc_builder_end_union_vector@@Base+0xbc>
   2c370:	movw	r2, #1617	; 0x651
   2c374:	ldr	r1, [pc, #152]	; 2c414 <flatcc_builder_end_union_vector@@Base+0xc0>
   2c378:	ldr	r0, [pc, #152]	; 2c418 <flatcc_builder_end_union_vector@@Base+0xc4>
   2c37c:	bl	1417c <__assert_fail@plt>
   2c380:	ldr	r7, [r3, #20]
   2c384:	mov	r4, r0
   2c388:	mov	r5, r1
   2c38c:	mov	r0, r1
   2c390:	lsl	r6, r7, #2
   2c394:	add	r1, r6, r7
   2c398:	bl	2a124 <__flatcc_fb_coerce_scalar_type@@Base+0x4f8>
   2c39c:	subs	r3, r0, #0
   2c3a0:	streq	r3, [r4]
   2c3a4:	streq	r3, [r4, #4]
   2c3a8:	beq	2c3ec <flatcc_builder_end_union_vector@@Base+0x98>
   2c3ac:	ldr	r0, [r5, #16]
   2c3b0:	add	r2, r3, r6
   2c3b4:	mov	r1, #0
   2c3b8:	add	ip, r0, #4
   2c3bc:	cmp	r1, r7
   2c3c0:	bne	2c3f8 <flatcc_builder_end_union_vector@@Base+0xa4>
   2c3c4:	add	r0, sp, #8
   2c3c8:	str	r1, [sp]
   2c3cc:	mov	r1, r5
   2c3d0:	bl	2c1d8 <flatcc_builder_create_union_vector_direct@@Base>
   2c3d4:	ldr	r7, [sp, #8]
   2c3d8:	mov	r0, r5
   2c3dc:	ldr	r6, [sp, #12]
   2c3e0:	bl	2a16c <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2c3e4:	str	r7, [r4]
   2c3e8:	str	r6, [r4, #4]
   2c3ec:	mov	r0, r4
   2c3f0:	add	sp, sp, #20
   2c3f4:	pop	{r4, r5, r6, r7, pc}
   2c3f8:	ldrb	lr, [r0, r1, lsl #3]
   2c3fc:	strb	lr, [r2, r1]
   2c400:	ldr	lr, [ip, r1, lsl #3]
   2c404:	str	lr, [r3, r1, lsl #2]
   2c408:	add	r1, r1, #1
   2c40c:	b	2c3bc <flatcc_builder_end_union_vector@@Base+0x68>
   2c410:	andeq	sl, r4, r9, ror #4
   2c414:	ldrdeq	sl, [r4], -lr
   2c418:			; <UNDEFINED> instruction: 0x0004a6bb

0002c41c <flatcc_builder_union_vector_edit@@Base>:
   2c41c:	ldr	r0, [r0, #16]
   2c420:	bx	lr

0002c424 <flatcc_builder_union_vector_count@@Base>:
   2c424:	ldr	r3, [r0, #32]
   2c428:	ldr	r0, [r3, #20]
   2c42c:	bx	lr

0002c430 <flatcc_builder_extend_union_vector@@Base>:
   2c430:	push	{r4, r5, r6, lr}
   2c434:	mvn	r2, #-536870912	; 0xe0000000
   2c438:	mov	r4, r0
   2c43c:	mov	r5, r1
   2c440:	ldr	r0, [r0, #32]
   2c444:	bl	2a6c8 <flatcc_builder_default_alloc@@Base+0x458>
   2c448:	cmp	r0, #0
   2c44c:	bne	2c460 <flatcc_builder_extend_union_vector@@Base+0x30>
   2c450:	lsl	r1, r5, #3
   2c454:	mov	r0, r4
   2c458:	pop	{r4, r5, r6, lr}
   2c45c:	b	2a124 <__flatcc_fb_coerce_scalar_type@@Base+0x4f8>
   2c460:	mov	r0, #0
   2c464:	pop	{r4, r5, r6, pc}

0002c468 <flatcc_builder_truncate_union_vector@@Base>:
   2c468:	ldr	r3, [r0, #32]
   2c46c:	push	{r4, lr}
   2c470:	ldrh	r2, [r3, #14]
   2c474:	cmp	r2, #7
   2c478:	beq	2c490 <flatcc_builder_truncate_union_vector@@Base+0x28>
   2c47c:	ldr	r3, [pc, #72]	; 2c4cc <flatcc_builder_truncate_union_vector@@Base+0x64>
   2c480:	movw	r2, #1665	; 0x681
   2c484:	ldr	r1, [pc, #68]	; 2c4d0 <flatcc_builder_truncate_union_vector@@Base+0x68>
   2c488:	ldr	r0, [pc, #68]	; 2c4d4 <flatcc_builder_truncate_union_vector@@Base+0x6c>
   2c48c:	bl	1417c <__assert_fail@plt>
   2c490:	ldr	r2, [r3, #20]
   2c494:	cmp	r2, r1
   2c498:	bcs	2c4b0 <flatcc_builder_truncate_union_vector@@Base+0x48>
   2c49c:	ldr	r3, [pc, #40]	; 2c4cc <flatcc_builder_truncate_union_vector@@Base+0x64>
   2c4a0:	movw	r2, #1666	; 0x682
   2c4a4:	ldr	r1, [pc, #36]	; 2c4d0 <flatcc_builder_truncate_union_vector@@Base+0x68>
   2c4a8:	ldr	r0, [pc, #40]	; 2c4d8 <flatcc_builder_truncate_union_vector@@Base+0x70>
   2c4ac:	b	2c48c <flatcc_builder_truncate_union_vector@@Base+0x24>
   2c4b0:	sub	r2, r2, r1
   2c4b4:	str	r2, [r3, #20]
   2c4b8:	ldr	r3, [r3, #16]
   2c4bc:	mul	r1, r3, r1
   2c4c0:	bl	2a1d4 <__flatcc_fb_coerce_scalar_type@@Base+0x5a8>
   2c4c4:	mov	r0, #0
   2c4c8:	pop	{r4, pc}
   2c4cc:	andeq	sl, r4, r9, lsl #5
   2c4d0:	ldrdeq	sl, [r4], -lr
   2c4d4:			; <UNDEFINED> instruction: 0x0004a6bb
   2c4d8:	strdeq	sl, [r4], -r4

0002c4dc <flatcc_builder_union_vector_push@@Base>:
   2c4dc:	push	{r0, r1, r4, lr}
   2c4e0:	mov	r4, sp
   2c4e4:	stm	r4, {r1, r2}
   2c4e8:	ldr	r2, [r0, #32]
   2c4ec:	ldrh	r3, [r2, #14]
   2c4f0:	cmp	r3, #7
   2c4f4:	beq	2c50c <flatcc_builder_union_vector_push@@Base+0x30>
   2c4f8:	ldr	r3, [pc, #68]	; 2c544 <flatcc_builder_union_vector_push@@Base+0x68>
   2c4fc:	movw	r2, #1677	; 0x68d
   2c500:	ldr	r1, [pc, #64]	; 2c548 <flatcc_builder_union_vector_push@@Base+0x6c>
   2c504:	ldr	r0, [pc, #64]	; 2c54c <flatcc_builder_union_vector_push@@Base+0x70>
   2c508:	bl	1417c <__assert_fail@plt>
   2c50c:	ldr	r3, [r2, #20]
   2c510:	cmn	r3, #-536870911	; 0xe0000001
   2c514:	moveq	r3, #0
   2c518:	beq	2c538 <flatcc_builder_union_vector_push@@Base+0x5c>
   2c51c:	add	r3, r3, #1
   2c520:	mov	r1, #8
   2c524:	str	r3, [r2, #20]
   2c528:	bl	2a124 <__flatcc_fb_coerce_scalar_type@@Base+0x4f8>
   2c52c:	subs	r3, r0, #0
   2c530:	ldmne	r4, {r0, r1}
   2c534:	stmne	r3, {r0, r1}
   2c538:	mov	r0, r3
   2c53c:	add	sp, sp, #8
   2c540:	pop	{r4, pc}
   2c544:	andeq	sl, r4, lr, lsr #5
   2c548:	ldrdeq	sl, [r4], -lr
   2c54c:			; <UNDEFINED> instruction: 0x0004a6bb

0002c550 <flatcc_builder_append_union_vector@@Base>:
   2c550:	push	{r4, r5, r6, lr}
   2c554:	mov	r4, r0
   2c558:	ldr	r0, [r0, #32]
   2c55c:	ldrh	r3, [r0, #14]
   2c560:	cmp	r3, #7
   2c564:	beq	2c57c <flatcc_builder_append_union_vector@@Base+0x2c>
   2c568:	ldr	r3, [pc, #68]	; 2c5b4 <flatcc_builder_append_union_vector@@Base+0x64>
   2c56c:	movw	r2, #1692	; 0x69c
   2c570:	ldr	r1, [pc, #64]	; 2c5b8 <flatcc_builder_append_union_vector@@Base+0x68>
   2c574:	ldr	r0, [pc, #64]	; 2c5bc <flatcc_builder_append_union_vector@@Base+0x6c>
   2c578:	bl	1417c <__assert_fail@plt>
   2c57c:	mov	r5, r2
   2c580:	mov	r6, r1
   2c584:	mvn	r2, #-536870912	; 0xe0000000
   2c588:	mov	r1, r5
   2c58c:	bl	2a6c8 <flatcc_builder_default_alloc@@Base+0x458>
   2c590:	cmp	r0, #0
   2c594:	bne	2c5ac <flatcc_builder_append_union_vector@@Base+0x5c>
   2c598:	lsl	r2, r5, #3
   2c59c:	mov	r1, r6
   2c5a0:	mov	r0, r4
   2c5a4:	pop	{r4, r5, r6, lr}
   2c5a8:	b	2a1f4 <__flatcc_fb_coerce_scalar_type@@Base+0x5c8>
   2c5ac:	mov	r0, #0
   2c5b0:	pop	{r4, r5, r6, pc}
   2c5b4:	andeq	sl, r4, pc, asr #5
   2c5b8:	ldrdeq	sl, [r4], -lr
   2c5bc:			; <UNDEFINED> instruction: 0x0004a6bb

0002c5c0 <flatcc_builder_create_string@@Base>:
   2c5c0:	ldr	r3, [r0, #136]	; 0x88
   2c5c4:	mov	ip, #4
   2c5c8:	cmp	r2, #0
   2c5cc:	push	{lr}		; (str lr, [sp, #-4]!)
   2c5d0:	sub	sp, sp, #84	; 0x54
   2c5d4:	add	lr, sp, ip
   2c5d8:	stmib	sp, {r2, ip}
   2c5dc:	sub	r3, r3, r2
   2c5e0:	str	lr, [sp, #16]
   2c5e4:	sub	r3, r3, #1
   2c5e8:	str	ip, [sp, #20]
   2c5ec:	mov	ip, #1
   2c5f0:	and	r3, r3, #3
   2c5f4:	add	r3, r3, #1
   2c5f8:	str	ip, [sp, #12]
   2c5fc:	beq	2c618 <flatcc_builder_create_string@@Base+0x58>
   2c600:	add	ip, r2, #4
   2c604:	str	r2, [sp, #28]
   2c608:	mov	r2, #2
   2c60c:	str	ip, [sp, #8]
   2c610:	str	r2, [sp, #12]
   2c614:	str	r1, [sp, #24]
   2c618:	ldr	r2, [sp, #8]
   2c61c:	add	r1, sp, #80	; 0x50
   2c620:	ldr	ip, [pc, #44]	; 2c654 <flatcc_builder_create_string@@Base+0x94>
   2c624:	add	r2, r2, r3
   2c628:	str	r2, [sp, #8]
   2c62c:	ldr	r2, [sp, #12]
   2c630:	add	r2, r2, #1
   2c634:	add	r1, r1, r2, lsl #3
   2c638:	str	r2, [sp, #12]
   2c63c:	str	ip, [r1, #-72]	; 0xffffffb8
   2c640:	str	r3, [r1, #-68]	; 0xffffffbc
   2c644:	add	r1, sp, #8
   2c648:	bl	2a650 <flatcc_builder_default_alloc@@Base+0x3e0>
   2c64c:	add	sp, sp, #84	; 0x54
   2c650:	pop	{pc}		; (ldr pc, [sp], #4)
   2c654:	strdeq	r9, [r4], -r8

0002c658 <flatcc_builder_create_string_str@@Base>:
   2c658:	push	{r4, r5, r6, lr}
   2c65c:	mov	r5, r0
   2c660:	mov	r0, r1
   2c664:	mov	r4, r1
   2c668:	bl	140a4 <strlen@plt>
   2c66c:	mov	r2, r0
   2c670:	mov	r1, r4
   2c674:	mov	r0, r5
   2c678:	pop	{r4, r5, r6, lr}
   2c67c:	b	2c5c0 <flatcc_builder_create_string@@Base>

0002c680 <flatcc_builder_create_string_strn@@Base>:
   2c680:	push	{r4, r5, r6, lr}
   2c684:	mov	r4, r1
   2c688:	mov	r6, r0
   2c68c:	mov	r1, #0
   2c690:	mov	r0, r4
   2c694:	mov	r5, r2
   2c698:	bl	140f8 <memchr@plt>
   2c69c:	cmp	r0, #0
   2c6a0:	mov	r1, r4
   2c6a4:	subne	r5, r0, r4
   2c6a8:	mov	r0, r6
   2c6ac:	mov	r2, r5
   2c6b0:	pop	{r4, r5, r6, lr}
   2c6b4:	b	2c5c0 <flatcc_builder_create_string@@Base>

0002c6b8 <flatcc_builder_end_string@@Base>:
   2c6b8:	ldr	r3, [r0, #32]
   2c6bc:	push	{r4, r5, r6, lr}
   2c6c0:	ldrh	r2, [r3, #14]
   2c6c4:	cmp	r2, #6
   2c6c8:	beq	2c6e0 <flatcc_builder_end_string@@Base+0x28>
   2c6cc:	ldr	r3, [pc, #84]	; 2c728 <flatcc_builder_end_string@@Base+0x70>
   2c6d0:	movw	r2, #1732	; 0x6c4
   2c6d4:	ldr	r1, [pc, #80]	; 2c72c <flatcc_builder_end_string@@Base+0x74>
   2c6d8:	ldr	r0, [pc, #80]	; 2c730 <flatcc_builder_end_string@@Base+0x78>
   2c6dc:	bl	1417c <__assert_fail@plt>
   2c6e0:	ldr	r2, [r3, #20]
   2c6e4:	mov	r4, r0
   2c6e8:	ldr	r1, [r0, #20]
   2c6ec:	cmp	r2, r1
   2c6f0:	beq	2c708 <flatcc_builder_end_string@@Base+0x50>
   2c6f4:	ldr	r3, [pc, #44]	; 2c728 <flatcc_builder_end_string@@Base+0x70>
   2c6f8:	movw	r2, #1733	; 0x6c5
   2c6fc:	ldr	r1, [pc, #40]	; 2c72c <flatcc_builder_end_string@@Base+0x74>
   2c700:	ldr	r0, [pc, #44]	; 2c734 <flatcc_builder_end_string@@Base+0x7c>
   2c704:	b	2c6dc <flatcc_builder_end_string@@Base+0x24>
   2c708:	ldr	r1, [r0, #16]
   2c70c:	bl	2c5c0 <flatcc_builder_create_string@@Base>
   2c710:	subs	r5, r0, #0
   2c714:	beq	2c720 <flatcc_builder_end_string@@Base+0x68>
   2c718:	mov	r0, r4
   2c71c:	bl	2a16c <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2c720:	mov	r0, r5
   2c724:	pop	{r4, r5, r6, pc}
   2c728:	strdeq	sl, [r4], -r2
   2c72c:	ldrdeq	sl, [r4], -lr
   2c730:	andeq	sl, r4, r4, lsr #11
   2c734:	andeq	sl, r4, sp, ror #13

0002c738 <flatcc_builder_string_edit@@Base>:
   2c738:	ldr	r0, [r0, #16]
   2c73c:	bx	lr

0002c740 <flatcc_builder_string_len@@Base>:
   2c740:	ldr	r3, [r0, #32]
   2c744:	ldr	r0, [r3, #20]
   2c748:	bx	lr

0002c74c <flatcc_builder_table_add@@Base>:
   2c74c:	push	{r4, r5, r6, r7, r8, lr}
   2c750:	mov	r4, r0
   2c754:	ldr	r0, [r0, #32]
   2c758:	ldrh	r0, [r0, #14]
   2c75c:	cmp	r0, #3
   2c760:	beq	2c778 <flatcc_builder_table_add@@Base+0x2c>
   2c764:	ldr	r3, [pc, #240]	; 2c85c <flatcc_builder_table_add@@Base+0x110>
   2c768:	movw	r2, #1773	; 0x6ed
   2c76c:	ldr	r1, [pc, #236]	; 2c860 <flatcc_builder_table_add@@Base+0x114>
   2c770:	ldr	r0, [pc, #236]	; 2c864 <flatcc_builder_table_add@@Base+0x118>
   2c774:	bl	1417c <__assert_fail@plt>
   2c778:	movw	r0, #32764	; 0x7ffc
   2c77c:	cmp	r1, r0
   2c780:	bls	2c798 <flatcc_builder_table_add@@Base+0x4c>
   2c784:	ldr	r3, [pc, #208]	; 2c85c <flatcc_builder_table_add@@Base+0x110>
   2c788:	movw	r2, #1774	; 0x6ee
   2c78c:	ldr	r1, [pc, #204]	; 2c860 <flatcc_builder_table_add@@Base+0x114>
   2c790:	ldr	r0, [pc, #208]	; 2c868 <flatcc_builder_table_add@@Base+0x11c>
   2c794:	b	2c774 <flatcc_builder_table_add@@Base+0x28>
   2c798:	ldrh	r0, [r4, #130]	; 0x82
   2c79c:	lsl	r7, r1, #1
   2c7a0:	cmp	r0, r3
   2c7a4:	ldr	r0, [r4, #4]
   2c7a8:	strhcc	r3, [r4, #130]	; 0x82
   2c7ac:	ldrh	r5, [r0, r7]
   2c7b0:	cmp	r5, #0
   2c7b4:	beq	2c7cc <flatcc_builder_table_add@@Base+0x80>
   2c7b8:	ldr	r3, [pc, #156]	; 2c85c <flatcc_builder_table_add@@Base+0x110>
   2c7bc:	movw	r2, #1784	; 0x6f8
   2c7c0:	ldr	r1, [pc, #152]	; 2c860 <flatcc_builder_table_add@@Base+0x114>
   2c7c4:	ldr	r0, [pc, #160]	; 2c86c <flatcc_builder_table_add@@Base+0x120>
   2c7c8:	b	2c774 <flatcc_builder_table_add@@Base+0x28>
   2c7cc:	ldr	ip, [r4, #12]
   2c7d0:	sub	r0, r3, #1
   2c7d4:	rsb	r3, r3, #0
   2c7d8:	uxth	r8, r1
   2c7dc:	ldr	lr, [pc, #140]	; 2c870 <flatcc_builder_table_add@@Base+0x124>
   2c7e0:	ldr	r6, [r4, #20]
   2c7e4:	eor	ip, ip, r1
   2c7e8:	mul	ip, lr, ip
   2c7ec:	add	r0, r0, r6
   2c7f0:	and	r6, r0, r3
   2c7f4:	ldr	r3, [r4, #24]
   2c7f8:	eor	ip, ip, r2
   2c7fc:	add	r1, r2, r6
   2c800:	mul	ip, lr, ip
   2c804:	cmp	r1, r3
   2c808:	str	ip, [r4, #12]
   2c80c:	str	r1, [r4, #20]
   2c810:	bcs	2c83c <flatcc_builder_table_add@@Base+0xf0>
   2c814:	ldr	r3, [r4, #4]
   2c818:	add	r2, r6, #4
   2c81c:	ldr	r0, [r4, #16]
   2c820:	strh	r2, [r3, r7]
   2c824:	ldrh	r3, [r4, #8]
   2c828:	add	r0, r0, r6
   2c82c:	cmp	r3, r8
   2c830:	addls	r1, r8, #1
   2c834:	strhls	r1, [r4, #8]
   2c838:	pop	{r4, r5, r6, r7, r8, pc}
   2c83c:	movw	r2, #65532	; 0xfffc
   2c840:	add	r1, r1, #1
   2c844:	mov	r0, r4
   2c848:	bl	2a0d4 <__flatcc_fb_coerce_scalar_type@@Base+0x4a8>
   2c84c:	cmp	r0, #0
   2c850:	beq	2c814 <flatcc_builder_table_add@@Base+0xc8>
   2c854:	mov	r0, r5
   2c858:	pop	{r4, r5, r6, r7, r8, pc}
   2c85c:	andeq	sl, r4, ip, lsl #6
   2c860:	ldrdeq	sl, [r4], -lr
   2c864:	andeq	sl, r4, sp, ror r6
   2c868:	andeq	sl, r4, r1, lsl r7
   2c86c:	andeq	r9, r3, fp, lsr r2
   2c870:			; <UNDEFINED> instruction: 0x9e3779b1

0002c874 <flatcc_builder_table_edit@@Base>:
   2c874:	ldr	r3, [r0, #32]
   2c878:	ldrh	r3, [r3, #14]
   2c87c:	cmp	r3, #3
   2c880:	beq	2c89c <flatcc_builder_table_edit@@Base+0x28>
   2c884:	push	{r4, lr}
   2c888:	movw	r2, #1794	; 0x702
   2c88c:	ldr	r3, [pc, #28]	; 2c8b0 <flatcc_builder_table_edit@@Base+0x3c>
   2c890:	ldr	r1, [pc, #28]	; 2c8b4 <flatcc_builder_table_edit@@Base+0x40>
   2c894:	ldr	r0, [pc, #28]	; 2c8b8 <flatcc_builder_table_edit@@Base+0x44>
   2c898:	bl	1417c <__assert_fail@plt>
   2c89c:	ldr	r3, [r0, #20]
   2c8a0:	ldr	r0, [r0, #16]
   2c8a4:	sub	r3, r3, r1
   2c8a8:	add	r0, r0, r3
   2c8ac:	bx	lr
   2c8b0:	andeq	sl, r4, r5, lsr #6
   2c8b4:	ldrdeq	sl, [r4], -lr
   2c8b8:	andeq	sl, r4, sp, ror r6

0002c8bc <flatcc_builder_table_add_copy@@Base>:
   2c8bc:	push	{r4, r5, r6, lr}
   2c8c0:	mov	r4, r3
   2c8c4:	mov	r6, r2
   2c8c8:	mov	r2, r4
   2c8cc:	ldrh	r3, [sp, #16]
   2c8d0:	bl	2c74c <flatcc_builder_table_add@@Base>
   2c8d4:	subs	r5, r0, #0
   2c8d8:	beq	2c8e8 <flatcc_builder_table_add_copy@@Base+0x2c>
   2c8dc:	mov	r2, r4
   2c8e0:	mov	r1, r6
   2c8e4:	bl	13ffc <memcpy@plt>
   2c8e8:	mov	r0, r5
   2c8ec:	pop	{r4, r5, r6, pc}

0002c8f0 <flatcc_builder_table_add_offset@@Base>:
   2c8f0:	ldr	r3, [r0, #32]
   2c8f4:	push	{r4, r5, r6, r7, r8, lr}
   2c8f8:	ldrh	r3, [r3, #14]
   2c8fc:	cmp	r3, #3
   2c900:	beq	2c918 <flatcc_builder_table_add_offset@@Base+0x28>
   2c904:	ldr	r3, [pc, #236]	; 2c9f8 <flatcc_builder_table_add_offset@@Base+0x108>
   2c908:	movw	r2, #1811	; 0x713
   2c90c:	ldr	r1, [pc, #232]	; 2c9fc <flatcc_builder_table_add_offset@@Base+0x10c>
   2c910:	ldr	r0, [pc, #232]	; 2ca00 <flatcc_builder_table_add_offset@@Base+0x110>
   2c914:	bl	1417c <__assert_fail@plt>
   2c918:	movw	r3, #32764	; 0x7ffc
   2c91c:	cmp	r1, r3
   2c920:	bls	2c938 <flatcc_builder_table_add_offset@@Base+0x48>
   2c924:	ldr	r3, [pc, #204]	; 2c9f8 <flatcc_builder_table_add_offset@@Base+0x108>
   2c928:	movw	r2, #1812	; 0x714
   2c92c:	ldr	r1, [pc, #200]	; 2c9fc <flatcc_builder_table_add_offset@@Base+0x10c>
   2c930:	ldr	r0, [pc, #204]	; 2ca04 <flatcc_builder_table_add_offset@@Base+0x114>
   2c934:	b	2c914 <flatcc_builder_table_add_offset@@Base+0x24>
   2c938:	ldr	r3, [r0, #4]
   2c93c:	lsl	r7, r1, #1
   2c940:	mov	r4, r0
   2c944:	ldrh	r6, [r3, r7]
   2c948:	cmp	r6, #0
   2c94c:	beq	2c964 <flatcc_builder_table_add_offset@@Base+0x74>
   2c950:	ldr	r3, [pc, #160]	; 2c9f8 <flatcc_builder_table_add_offset@@Base+0x108>
   2c954:	movw	r2, #1819	; 0x71b
   2c958:	ldr	r1, [pc, #156]	; 2c9fc <flatcc_builder_table_add_offset@@Base+0x10c>
   2c95c:	ldr	r0, [pc, #164]	; 2ca08 <flatcc_builder_table_add_offset@@Base+0x118>
   2c960:	b	2c914 <flatcc_builder_table_add_offset@@Base+0x24>
   2c964:	ldr	r3, [r0, #12]
   2c968:	uxth	r5, r1
   2c96c:	ldr	r2, [pc, #152]	; 2ca0c <flatcc_builder_table_add_offset@@Base+0x11c>
   2c970:	ldr	r8, [r0, #20]
   2c974:	eor	r3, r3, r1
   2c978:	mul	r3, r2, r3
   2c97c:	add	r8, r8, #3
   2c980:	eor	r3, r3, #4
   2c984:	bic	r8, r8, #3
   2c988:	add	r1, r8, #4
   2c98c:	mul	r3, r2, r3
   2c990:	str	r3, [r0, #12]
   2c994:	ldr	r3, [r0, #24]
   2c998:	str	r1, [r0, #20]
   2c99c:	cmp	r1, r3
   2c9a0:	bhi	2c9e0 <flatcc_builder_table_add_offset@@Base+0xf0>
   2c9a4:	ldr	r3, [r4, #4]
   2c9a8:	uxth	r2, r8
   2c9ac:	add	r1, r2, #4
   2c9b0:	ldr	r0, [r4, #16]
   2c9b4:	strh	r1, [r3, r7]
   2c9b8:	ldrh	r3, [r4, #8]
   2c9bc:	add	r0, r0, r8
   2c9c0:	cmp	r3, r5
   2c9c4:	ldr	r3, [r4]
   2c9c8:	addls	r1, r5, #1
   2c9cc:	strhls	r1, [r4, #8]
   2c9d0:	add	r1, r3, #2
   2c9d4:	str	r1, [r4]
   2c9d8:	strh	r2, [r3]
   2c9dc:	pop	{r4, r5, r6, r7, r8, pc}
   2c9e0:	movw	r2, #65532	; 0xfffc
   2c9e4:	bl	2a0d4 <__flatcc_fb_coerce_scalar_type@@Base+0x4a8>
   2c9e8:	cmp	r0, #0
   2c9ec:	beq	2c9a4 <flatcc_builder_table_add_offset@@Base+0xb4>
   2c9f0:	mov	r0, r6
   2c9f4:	pop	{r4, r5, r6, r7, r8, pc}
   2c9f8:	andeq	sl, r4, pc, lsr r3
   2c9fc:	ldrdeq	sl, [r4], -lr
   2ca00:	andeq	sl, r4, sp, ror r6
   2ca04:	andeq	sl, r4, r1, lsl r7
   2ca08:	andeq	r9, r3, fp, lsr r2
   2ca0c:			; <UNDEFINED> instruction: 0x9e3779b1

0002ca10 <flatcc_builder_table_add_union@@Base>:
   2ca10:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2ca14:	add	ip, sp, #8
   2ca18:	stmdb	ip, {r2, r3}
   2ca1c:	ldr	r3, [r0, #32]
   2ca20:	ldrb	r5, [sp]
   2ca24:	ldr	r4, [sp, #4]
   2ca28:	ldrh	r3, [r3, #14]
   2ca2c:	cmp	r3, #3
   2ca30:	beq	2ca48 <flatcc_builder_table_add_union@@Base+0x38>
   2ca34:	ldr	r3, [pc, #164]	; 2cae0 <flatcc_builder_table_add_union@@Base+0xd0>
   2ca38:	movw	r2, #1518	; 0x5ee
   2ca3c:	ldr	r1, [pc, #160]	; 2cae4 <flatcc_builder_table_add_union@@Base+0xd4>
   2ca40:	ldr	r0, [pc, #160]	; 2cae8 <flatcc_builder_table_add_union@@Base+0xd8>
   2ca44:	bl	1417c <__assert_fail@plt>
   2ca48:	cmp	r5, #0
   2ca4c:	mov	r6, r0
   2ca50:	mov	r7, r1
   2ca54:	bne	2ca74 <flatcc_builder_table_add_union@@Base+0x64>
   2ca58:	cmp	r4, #0
   2ca5c:	beq	2caa0 <flatcc_builder_table_add_union@@Base+0x90>
   2ca60:	ldr	r3, [pc, #120]	; 2cae0 <flatcc_builder_table_add_union@@Base+0xd0>
   2ca64:	movw	r2, #1519	; 0x5ef
   2ca68:	ldr	r1, [pc, #116]	; 2cae4 <flatcc_builder_table_add_union@@Base+0xd4>
   2ca6c:	ldr	r0, [pc, #120]	; 2caec <flatcc_builder_table_add_union@@Base+0xdc>
   2ca70:	b	2ca44 <flatcc_builder_table_add_union@@Base+0x34>
   2ca74:	cmp	r4, #0
   2ca78:	beq	2caa0 <flatcc_builder_table_add_union@@Base+0x90>
   2ca7c:	bl	2c8f0 <flatcc_builder_table_add_offset@@Base>
   2ca80:	cmp	r0, #0
   2ca84:	strne	r4, [r0]
   2ca88:	bne	2caa0 <flatcc_builder_table_add_union@@Base+0x90>
   2ca8c:	ldr	r3, [pc, #76]	; 2cae0 <flatcc_builder_table_add_union@@Base+0xd0>
   2ca90:	movw	r2, #1522	; 0x5f2
   2ca94:	ldr	r1, [pc, #72]	; 2cae4 <flatcc_builder_table_add_union@@Base+0xd4>
   2ca98:	ldr	r0, [pc, #80]	; 2caf0 <flatcc_builder_table_add_union@@Base+0xe0>
   2ca9c:	b	2ca44 <flatcc_builder_table_add_union@@Base+0x34>
   2caa0:	mov	r3, #1
   2caa4:	sub	r1, r7, #1
   2caa8:	mov	r2, r3
   2caac:	mov	r0, r6
   2cab0:	bl	2c74c <flatcc_builder_table_add@@Base>
   2cab4:	cmp	r0, #0
   2cab8:	bne	2cad0 <flatcc_builder_table_add_union@@Base+0xc0>
   2cabc:	ldr	r3, [pc, #28]	; 2cae0 <flatcc_builder_table_add_union@@Base+0xd0>
   2cac0:	movw	r2, #1526	; 0x5f6
   2cac4:	ldr	r1, [pc, #24]	; 2cae4 <flatcc_builder_table_add_union@@Base+0xd4>
   2cac8:	ldr	r0, [pc, #36]	; 2caf4 <flatcc_builder_table_add_union@@Base+0xe4>
   2cacc:	b	2ca44 <flatcc_builder_table_add_union@@Base+0x34>
   2cad0:	strb	r5, [r0]
   2cad4:	mov	r0, #0
   2cad8:	add	sp, sp, #12
   2cadc:	pop	{r4, r5, r6, r7, pc}
   2cae0:	andeq	sl, r4, pc, asr r3
   2cae4:	ldrdeq	sl, [r4], -lr
   2cae8:	andeq	sl, r4, sp, ror r6
   2caec:	andeq	sl, r4, r5, asr r7
   2caf0:	andeq	sl, r4, r7, ror r7
   2caf4:	andeq	sl, r4, r1, lsl #15

0002caf8 <flatcc_builder_table_add_union_vector@@Base>:
   2caf8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2cafc:	mov	r7, r1
   2cb00:	add	r1, sp, #8
   2cb04:	stmdb	r1, {r2, r3}
   2cb08:	ldr	r3, [r0, #32]
   2cb0c:	ldrd	r4, [sp]
   2cb10:	ldrh	r3, [r3, #14]
   2cb14:	cmp	r3, #3
   2cb18:	beq	2cb30 <flatcc_builder_table_add_union_vector@@Base+0x38>
   2cb1c:	ldr	r3, [pc, #176]	; 2cbd4 <flatcc_builder_table_add_union_vector@@Base+0xdc>
   2cb20:	mov	r2, #1536	; 0x600
   2cb24:	ldr	r1, [pc, #172]	; 2cbd8 <flatcc_builder_table_add_union_vector@@Base+0xe0>
   2cb28:	ldr	r0, [pc, #172]	; 2cbdc <flatcc_builder_table_add_union_vector@@Base+0xe4>
   2cb2c:	bl	1417c <__assert_fail@plt>
   2cb30:	clz	r3, r5
   2cb34:	clz	r2, r4
   2cb38:	lsr	r3, r3, #5
   2cb3c:	lsr	r2, r2, #5
   2cb40:	cmp	r2, r3
   2cb44:	beq	2cb70 <flatcc_builder_table_add_union_vector@@Base+0x78>
   2cb48:	adds	r4, r4, #0
   2cb4c:	movne	r4, #1
   2cb50:	cmp	r4, r3
   2cb54:	mvnne	r4, #0
   2cb58:	bne	2cbc8 <flatcc_builder_table_add_union_vector@@Base+0xd0>
   2cb5c:	ldr	r3, [pc, #112]	; 2cbd4 <flatcc_builder_table_add_union_vector@@Base+0xdc>
   2cb60:	movw	r2, #1537	; 0x601
   2cb64:	ldr	r1, [pc, #108]	; 2cbd8 <flatcc_builder_table_add_union_vector@@Base+0xe0>
   2cb68:	ldr	r0, [pc, #112]	; 2cbe0 <flatcc_builder_table_add_union_vector@@Base+0xe8>
   2cb6c:	b	2cb2c <flatcc_builder_table_add_union_vector@@Base+0x34>
   2cb70:	cmp	r4, #0
   2cb74:	beq	2cbc8 <flatcc_builder_table_add_union_vector@@Base+0xd0>
   2cb78:	sub	r1, r7, #1
   2cb7c:	mov	r6, r0
   2cb80:	bl	2c8f0 <flatcc_builder_table_add_offset@@Base>
   2cb84:	cmp	r0, #0
   2cb88:	ldreq	r3, [pc, #68]	; 2cbd4 <flatcc_builder_table_add_union_vector@@Base+0xdc>
   2cb8c:	movweq	r2, #1540	; 0x604
   2cb90:	beq	2cbbc <flatcc_builder_table_add_union_vector@@Base+0xc4>
   2cb94:	mov	r1, r7
   2cb98:	str	r4, [r0]
   2cb9c:	mov	r0, r6
   2cba0:	bl	2c8f0 <flatcc_builder_table_add_offset@@Base>
   2cba4:	cmp	r0, #0
   2cba8:	movne	r4, #0
   2cbac:	strne	r5, [r0]
   2cbb0:	bne	2cbc8 <flatcc_builder_table_add_union_vector@@Base+0xd0>
   2cbb4:	ldr	r3, [pc, #24]	; 2cbd4 <flatcc_builder_table_add_union_vector@@Base+0xdc>
   2cbb8:	movw	r2, #1544	; 0x608
   2cbbc:	ldr	r1, [pc, #20]	; 2cbd8 <flatcc_builder_table_add_union_vector@@Base+0xe0>
   2cbc0:	ldr	r0, [pc, #28]	; 2cbe4 <flatcc_builder_table_add_union_vector@@Base+0xec>
   2cbc4:	b	2cb2c <flatcc_builder_table_add_union_vector@@Base+0x34>
   2cbc8:	mov	r0, r4
   2cbcc:	add	sp, sp, #12
   2cbd0:	pop	{r4, r5, r6, r7, pc}
   2cbd4:	andeq	sl, r4, lr, ror r3
   2cbd8:	ldrdeq	sl, [r4], -lr
   2cbdc:	andeq	sl, r4, sp, ror r6
   2cbe0:	andeq	sl, r4, sp, lsl #15
   2cbe4:	andeq	sl, r4, r7, ror r7

0002cbe8 <flatcc_builder_push_buffer_alignment@@Base>:
   2cbe8:	mov	r3, r0
   2cbec:	mov	r2, #4
   2cbf0:	ldrh	r0, [r0, #128]	; 0x80
   2cbf4:	strh	r2, [r3, #128]	; 0x80
   2cbf8:	bx	lr

0002cbfc <flatcc_builder_pop_buffer_alignment@@Base>:
   2cbfc:	ldrh	r3, [r0, #128]	; 0x80
   2cc00:	cmp	r3, r1
   2cc04:	strhcc	r1, [r0, #128]	; 0x80
   2cc08:	bx	lr

0002cc0c <flatcc_builder_get_buffer_alignment@@Base>:
   2cc0c:	ldrh	r0, [r0, #128]	; 0x80
   2cc10:	bx	lr

0002cc14 <flatcc_builder_set_vtable_clustering@@Base>:
   2cc14:	clz	r1, r1
   2cc18:	lsr	r1, r1, #5
   2cc1c:	str	r1, [r0, #180]	; 0xb4
   2cc20:	bx	lr

0002cc24 <flatcc_builder_set_block_align@@Base>:
   2cc24:	strh	r1, [r0, #132]	; 0x84
   2cc28:	bx	lr

0002cc2c <flatcc_builder_get_level@@Base>:
   2cc2c:	ldr	r0, [r0, #156]	; 0x9c
   2cc30:	bx	lr

0002cc34 <flatcc_builder_set_max_level@@Base>:
   2cc34:	ldr	r3, [r0, #160]	; 0xa0
   2cc38:	str	r1, [r0, #176]	; 0xb0
   2cc3c:	cmp	r3, r1
   2cc40:	strlt	r1, [r0, #160]	; 0xa0
   2cc44:	bx	lr

0002cc48 <flatcc_builder_get_buffer_size@@Base>:
   2cc48:	ldr	r2, [r0, #140]	; 0x8c
   2cc4c:	ldr	r0, [r0, #136]	; 0x88
   2cc50:	sub	r0, r2, r0
   2cc54:	bx	lr

0002cc58 <flatcc_builder_get_buffer_start@@Base>:
   2cc58:	ldr	r0, [r0, #136]	; 0x88
   2cc5c:	bx	lr

0002cc60 <flatcc_builder_get_buffer_end@@Base>:
   2cc60:	ldr	r0, [r0, #140]	; 0x8c
   2cc64:	bx	lr

0002cc68 <flatcc_builder_set_vtable_cache_limit@@Base>:
   2cc68:	str	r1, [r0, #172]	; 0xac
   2cc6c:	bx	lr

0002cc70 <flatcc_builder_set_identifier@@Base>:
   2cc70:	ldr	r3, [pc, #16]	; 2cc88 <flatcc_builder_set_identifier@@Base+0x18>
   2cc74:	cmp	r1, #0
   2cc78:	moveq	r1, r3
   2cc7c:	ldr	r3, [r1]
   2cc80:	str	r3, [r0, #168]	; 0xa8
   2cc84:	bx	lr
   2cc88:	strdeq	r9, [r4], -r8

0002cc8c <flatcc_builder_get_type@@Base>:
   2cc8c:	ldr	r0, [r0, #32]
   2cc90:	cmp	r0, #0
   2cc94:	ldrhne	r0, [r0, #14]
   2cc98:	bx	lr

0002cc9c <flatcc_builder_get_type_at@@Base>:
   2cc9c:	cmp	r1, #0
   2cca0:	ble	2ccc8 <flatcc_builder_get_type_at@@Base+0x2c>
   2cca4:	ldr	r3, [r0, #156]	; 0x9c
   2cca8:	cmp	r3, r1
   2ccac:	blt	2ccc8 <flatcc_builder_get_type_at@@Base+0x2c>
   2ccb0:	sub	r1, r1, r3
   2ccb4:	ldr	r3, [r0, #32]
   2ccb8:	mov	r2, #36	; 0x24
   2ccbc:	mla	r1, r2, r1, r3
   2ccc0:	ldrh	r0, [r1, #14]
   2ccc4:	bx	lr
   2ccc8:	mov	r0, #0
   2cccc:	bx	lr

0002ccd0 <flatcc_builder_get_direct_buffer@@Base>:
   2ccd0:	ldr	r3, [r0, #184]	; 0xb8
   2ccd4:	cmp	r3, #0
   2ccd8:	beq	2cd00 <flatcc_builder_get_direct_buffer@@Base+0x30>
   2ccdc:	ldrd	r2, [r0, #188]	; 0xbc
   2cce0:	cmp	r2, r3
   2cce4:	bne	2cd00 <flatcc_builder_get_direct_buffer@@Base+0x30>
   2cce8:	cmp	r1, #0
   2ccec:	ldrne	r3, [r0, #212]	; 0xd4
   2ccf0:	strne	r3, [r1]
   2ccf4:	ldr	r1, [r0, #196]	; 0xc4
   2ccf8:	mov	r0, r1
   2ccfc:	bx	lr
   2cd00:	cmp	r1, #0
   2cd04:	movne	r3, #0
   2cd08:	strne	r3, [r1]
   2cd0c:	movne	r1, r3
   2cd10:	b	2ccf8 <flatcc_builder_get_direct_buffer@@Base+0x28>

0002cd14 <flatcc_builder_copy_buffer@@Base>:
   2cd14:	ldr	r3, [r0, #184]	; 0xb8
   2cd18:	cmp	r3, #0
   2cd1c:	beq	2cd48 <flatcc_builder_copy_buffer@@Base+0x34>
   2cd20:	push	{r4, lr}
   2cd24:	add	r0, r0, #188	; 0xbc
   2cd28:	bl	2d2bc <flatcc_emitter_copy_buffer@@Base>
   2cd2c:	cmp	r0, #0
   2cd30:	popne	{r4, pc}
   2cd34:	ldr	r3, [pc, #20]	; 2cd50 <flatcc_builder_copy_buffer@@Base+0x3c>
   2cd38:	movw	r2, #1926	; 0x786
   2cd3c:	ldr	r1, [pc, #16]	; 2cd54 <flatcc_builder_copy_buffer@@Base+0x40>
   2cd40:	ldr	r0, [pc, #16]	; 2cd58 <flatcc_builder_copy_buffer@@Base+0x44>
   2cd44:	bl	1417c <__assert_fail@plt>
   2cd48:	mov	r0, r3
   2cd4c:	bx	lr
   2cd50:	andeq	sl, r4, r4, lsr #7
   2cd54:	ldrdeq	sl, [r4], -lr
   2cd58:	ldrdeq	sl, [r4], -r5

0002cd5c <flatcc_builder_finalize_buffer@@Base>:
   2cd5c:	push	{r4, r5, r6, lr}
   2cd60:	cmp	r1, #0
   2cd64:	mov	r5, r0
   2cd68:	ldr	r2, [r0, #136]	; 0x88
   2cd6c:	ldr	r4, [r0, #140]	; 0x8c
   2cd70:	sub	r4, r4, r2
   2cd74:	mov	r0, r4
   2cd78:	strne	r4, [r1]
   2cd7c:	bl	14068 <malloc@plt>
   2cd80:	subs	r6, r0, #0
   2cd84:	ldreq	r3, [pc, #56]	; 2cdc4 <flatcc_builder_finalize_buffer@@Base+0x68>
   2cd88:	movweq	r2, #1944	; 0x798
   2cd8c:	beq	2cdb0 <flatcc_builder_finalize_buffer@@Base+0x54>
   2cd90:	mov	r2, r4
   2cd94:	mov	r1, r6
   2cd98:	mov	r0, r5
   2cd9c:	bl	2cd14 <flatcc_builder_copy_buffer@@Base>
   2cda0:	cmp	r0, #0
   2cda4:	bne	2cdbc <flatcc_builder_finalize_buffer@@Base+0x60>
   2cda8:	ldr	r3, [pc, #20]	; 2cdc4 <flatcc_builder_finalize_buffer@@Base+0x68>
   2cdac:	movw	r2, #1948	; 0x79c
   2cdb0:	ldr	r1, [pc, #16]	; 2cdc8 <flatcc_builder_finalize_buffer@@Base+0x6c>
   2cdb4:	ldr	r0, [pc, #16]	; 2cdcc <flatcc_builder_finalize_buffer@@Base+0x70>
   2cdb8:	bl	1417c <__assert_fail@plt>
   2cdbc:	mov	r0, r6
   2cdc0:	pop	{r4, r5, r6, pc}
   2cdc4:			; <UNDEFINED> instruction: 0x0004a3bf
   2cdc8:	ldrdeq	sl, [r4], -lr
   2cdcc:	andeq	r9, r3, fp, lsr r2

0002cdd0 <flatcc_builder_finalize_aligned_buffer@@Base>:
   2cdd0:	push	{r4, r5, r6, r7, r8, lr}
   2cdd4:	mov	r6, r0
   2cdd8:	subs	r7, r1, #0
   2cddc:	ldr	r2, [r0, #136]	; 0x88
   2cde0:	ldr	r4, [r0, #140]	; 0x8c
   2cde4:	ldrh	r0, [r0, #128]	; 0x80
   2cde8:	sub	r2, r4, r2
   2cdec:	sub	r4, r0, #1
   2cdf0:	strne	r2, [r7]
   2cdf4:	add	r4, r4, r2
   2cdf8:	rsb	r2, r0, #0
   2cdfc:	and	r4, r4, r2
   2ce00:	mov	r1, r4
   2ce04:	bl	2a224 <__flatcc_fb_coerce_scalar_type@@Base+0x5f8>
   2ce08:	subs	r5, r0, #0
   2ce0c:	beq	2ce34 <flatcc_builder_finalize_aligned_buffer@@Base+0x64>
   2ce10:	mov	r2, r4
   2ce14:	mov	r1, r5
   2ce18:	mov	r0, r6
   2ce1c:	bl	2cd14 <flatcc_builder_copy_buffer@@Base>
   2ce20:	subs	r4, r0, #0
   2ce24:	bne	2ce34 <flatcc_builder_finalize_aligned_buffer@@Base+0x64>
   2ce28:	mov	r0, r5
   2ce2c:	mov	r5, r4
   2ce30:	bl	13ff0 <free@plt>
   2ce34:	adds	r3, r7, #0
   2ce38:	mov	r0, r5
   2ce3c:	movne	r3, #1
   2ce40:	cmp	r5, #0
   2ce44:	movne	r3, #0
   2ce48:	cmp	r3, #0
   2ce4c:	movne	r3, #0
   2ce50:	strne	r3, [r7]
   2ce54:	pop	{r4, r5, r6, r7, r8, pc}

0002ce58 <flatcc_builder_aligned_alloc@@Base>:
   2ce58:	b	2a224 <__flatcc_fb_coerce_scalar_type@@Base+0x5f8>

0002ce5c <flatcc_builder_aligned_free@@Base>:
   2ce5c:	b	13ff0 <free@plt>

0002ce60 <flatcc_builder_get_emit_context@@Base>:
   2ce60:	ldr	r0, [r0, #36]	; 0x24
   2ce64:	bx	lr

0002ce68 <flatcc_emitter_recycle_page@@Base>:
   2ce68:	ldr	r3, [r0]
   2ce6c:	cmp	r3, r1
   2ce70:	beq	2ceb0 <flatcc_emitter_recycle_page@@Base+0x48>
   2ce74:	ldr	r2, [r0, #4]
   2ce78:	cmp	r2, r1
   2ce7c:	beq	2ceb0 <flatcc_emitter_recycle_page@@Base+0x48>
   2ce80:	ldr	r0, [r1, #2944]	; 0xb80
   2ce84:	ldr	r2, [r1, #2948]	; 0xb84
   2ce88:	str	r2, [r0, #2948]	; 0xb84
   2ce8c:	str	r0, [r2, #2944]	; 0xb80
   2ce90:	mov	r0, #0
   2ce94:	ldr	r2, [r3, #2948]	; 0xb84
   2ce98:	str	r3, [r1, #2944]	; 0xb80
   2ce9c:	str	r2, [r1, #2948]	; 0xb84
   2cea0:	str	r1, [r2, #2944]	; 0xb80
   2cea4:	ldr	r3, [r1, #2944]	; 0xb80
   2cea8:	str	r1, [r3, #2948]	; 0xb84
   2ceac:	bx	lr
   2ceb0:	mvn	r0, #0
   2ceb4:	bx	lr

0002ceb8 <flatcc_emitter_reset@@Base>:
   2ceb8:	ldr	r3, [r0]
   2cebc:	cmp	r3, #0
   2cec0:	bxeq	lr
   2cec4:	add	r2, r3, #1472	; 0x5c0
   2cec8:	push	{r4, lr}
   2cecc:	mov	r4, r0
   2ced0:	str	r3, [r0, #4]
   2ced4:	str	r2, [r0, #8]
   2ced8:	str	r2, [r0, #16]
   2cedc:	mov	r2, #1472	; 0x5c0
   2cee0:	str	r2, [r0, #12]
   2cee4:	str	r2, [r0, #20]
   2cee8:	sub	r2, r2, #2944	; 0xb80
   2ceec:	str	r2, [r3, #2952]	; 0xb88
   2cef0:	ldr	r3, [r0, #24]
   2cef4:	ldr	r2, [r0, #32]
   2cef8:	cmp	r2, #0
   2cefc:	streq	r3, [r0, #32]
   2cf00:	lsr	r3, r3, #2
   2cf04:	ldr	r2, [r0, #32]
   2cf08:	add	r2, r2, r2, lsl #1
   2cf0c:	add	r3, r3, r2, lsr #2
   2cf10:	str	r3, [r0, #32]
   2cf14:	mov	r3, #0
   2cf18:	str	r3, [r0, #24]
   2cf1c:	ldr	r3, [r4, #28]
   2cf20:	ldr	r2, [r4, #32]
   2cf24:	cmp	r3, r2, lsl #1
   2cf28:	popls	{r4, pc}
   2cf2c:	ldrd	r2, [r4]
   2cf30:	ldr	r0, [r3, #2944]	; 0xb80
   2cf34:	cmp	r0, r2
   2cf38:	popeq	{r4, pc}
   2cf3c:	ldr	r2, [r0, #2944]	; 0xb80
   2cf40:	str	r2, [r3, #2944]	; 0xb80
   2cf44:	ldr	r2, [r0, #2944]	; 0xb80
   2cf48:	str	r3, [r2, #2948]	; 0xb84
   2cf4c:	bl	13ff0 <free@plt>
   2cf50:	ldr	r3, [r4, #28]
   2cf54:	sub	r3, r3, #2944	; 0xb80
   2cf58:	str	r3, [r4, #28]
   2cf5c:	b	2cf1c <flatcc_emitter_reset@@Base+0x64>

0002cf60 <flatcc_emitter_clear@@Base>:
   2cf60:	ldr	r3, [r0]
   2cf64:	cmp	r3, #0
   2cf68:	bxeq	lr
   2cf6c:	push	{r4, r5, r6, lr}
   2cf70:	mov	r1, #0
   2cf74:	mov	r4, r0
   2cf78:	ldr	r2, [r3, #2948]	; 0xb84
   2cf7c:	str	r1, [r2, #2944]	; 0xb80
   2cf80:	ldr	r5, [r3, #2944]	; 0xb80
   2cf84:	cmp	r5, #0
   2cf88:	bne	2cfa8 <flatcc_emitter_clear@@Base+0x48>
   2cf8c:	mov	r0, r3
   2cf90:	bl	13ff0 <free@plt>
   2cf94:	mov	r1, r5
   2cf98:	mov	r0, r4
   2cf9c:	pop	{r4, r5, r6, lr}
   2cfa0:	mov	r2, #36	; 0x24
   2cfa4:	b	140d4 <memset@plt>
   2cfa8:	ldr	r0, [r5, #2948]	; 0xb84
   2cfac:	bl	13ff0 <free@plt>
   2cfb0:	mov	r3, r5
   2cfb4:	b	2cf80 <flatcc_emitter_clear@@Base+0x20>

0002cfb8 <flatcc_emitter@@Base>:
   2cfb8:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cfbc:	mov	r4, r0
   2cfc0:	mov	r6, r2
   2cfc4:	cmp	r3, #0
   2cfc8:	ldr	r0, [r0, #24]
   2cfcc:	ldr	r2, [sp, #40]	; 0x28
   2cfd0:	add	r0, r0, r2
   2cfd4:	str	r0, [r4, #24]
   2cfd8:	bge	2d170 <flatcc_emitter@@Base+0x1b8>
   2cfdc:	ldr	r0, [r4, #12]
   2cfe0:	cmp	r0, r2
   2cfe4:	bcc	2d028 <flatcc_emitter@@Base+0x70>
   2cfe8:	ldr	r3, [r4, #8]
   2cfec:	sub	r3, r3, r2
   2cff0:	sub	r2, r0, r2
   2cff4:	str	r3, [r4, #8]
   2cff8:	str	r2, [r4, #12]
   2cffc:	mov	r4, r1
   2d000:	sub	r6, r6, #1
   2d004:	add	r4, r4, #8
   2d008:	cmn	r6, #1
   2d00c:	beq	2d03c <flatcc_emitter@@Base+0x84>
   2d010:	mov	r0, r3
   2d014:	ldmdb	r4, {r1, r2}
   2d018:	bl	13ffc <memcpy@plt>
   2d01c:	ldr	r2, [r4, #-4]
   2d020:	add	r3, r0, r2
   2d024:	b	2d000 <flatcc_emitter@@Base+0x48>
   2d028:	ldr	r9, [pc, #648]	; 2d2b8 <flatcc_emitter@@Base+0x300>
   2d02c:	add	r5, r1, r6, lsl #3
   2d030:	mov	r8, #2944	; 0xb80
   2d034:	cmp	r6, #0
   2d038:	bne	2d044 <flatcc_emitter@@Base+0x8c>
   2d03c:	mov	r0, #0
   2d040:	b	2d0dc <flatcc_emitter@@Base+0x124>
   2d044:	ldr	sl, [r5, #-8]
   2d048:	ldr	r7, [r5, #-4]
   2d04c:	add	sl, sl, r7
   2d050:	cmp	r7, #0
   2d054:	subeq	r5, r5, #8
   2d058:	subeq	r6, r6, #1
   2d05c:	beq	2d034 <flatcc_emitter@@Base+0x7c>
   2d060:	ldr	r3, [r4, #12]
   2d064:	cmp	r3, r7
   2d068:	bcs	2d140 <flatcc_emitter@@Base+0x188>
   2d06c:	cmp	r3, #0
   2d070:	movne	r2, r3
   2d074:	bne	2d144 <flatcc_emitter@@Base+0x18c>
   2d078:	ldr	fp, [r4]
   2d07c:	cmp	fp, #0
   2d080:	beq	2d0c8 <flatcc_emitter@@Base+0x110>
   2d084:	ldr	r2, [r4, #4]
   2d088:	ldr	r3, [fp, #2948]	; 0xb84
   2d08c:	cmp	r3, r2
   2d090:	beq	2d0c8 <flatcc_emitter@@Base+0x110>
   2d094:	ldr	r2, [fp, #2952]	; 0xb88
   2d098:	sub	r2, r2, #2944	; 0xb80
   2d09c:	str	r2, [r3, #2952]	; 0xb88
   2d0a0:	str	r3, [r4]
   2d0a4:	ldr	r3, [r4]
   2d0a8:	str	r8, [r4, #12]
   2d0ac:	add	r2, r3, #2944	; 0xb80
   2d0b0:	str	r2, [r4, #8]
   2d0b4:	ldr	r2, [r3, #2944]	; 0xb80
   2d0b8:	ldr	r2, [r2, #2952]	; 0xb88
   2d0bc:	sub	r2, r2, #2944	; 0xb80
   2d0c0:	str	r2, [r3, #2952]	; 0xb88
   2d0c4:	b	2d050 <flatcc_emitter@@Base+0x98>
   2d0c8:	movw	r0, #2956	; 0xb8c
   2d0cc:	bl	14068 <malloc@plt>
   2d0d0:	cmp	r0, #0
   2d0d4:	bne	2d0e4 <flatcc_emitter@@Base+0x12c>
   2d0d8:	mvn	r0, #0
   2d0dc:	add	sp, sp, #4
   2d0e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d0e4:	ldr	r3, [r4, #28]
   2d0e8:	cmp	fp, #0
   2d0ec:	add	r3, r3, #2944	; 0xb80
   2d0f0:	str	r3, [r4, #28]
   2d0f4:	beq	2d114 <flatcc_emitter@@Base+0x15c>
   2d0f8:	ldr	r3, [r4, #4]
   2d0fc:	str	fp, [r0, #2944]	; 0xb80
   2d100:	str	r3, [r0, #2948]	; 0xb84
   2d104:	str	r0, [fp, #2948]	; 0xb84
   2d108:	str	r0, [r3, #2944]	; 0xb80
   2d10c:	str	r0, [r4]
   2d110:	b	2d0a4 <flatcc_emitter@@Base+0xec>
   2d114:	add	r3, r0, #1472	; 0x5c0
   2d118:	str	r0, [r4]
   2d11c:	str	r0, [r0, #2944]	; 0xb80
   2d120:	stmib	r4, {r0, r3}
   2d124:	str	r3, [r4, #16]
   2d128:	mov	r3, #1472	; 0x5c0
   2d12c:	str	r0, [r0, #2948]	; 0xb84
   2d130:	str	r3, [r4, #12]
   2d134:	str	r3, [r4, #20]
   2d138:	str	r9, [r0, #2952]	; 0xb88
   2d13c:	b	2d050 <flatcc_emitter@@Base+0x98>
   2d140:	mov	r2, r7
   2d144:	ldr	r0, [r4, #8]
   2d148:	rsb	r1, r2, #0
   2d14c:	sub	r3, r3, r2
   2d150:	add	sl, sl, r1
   2d154:	sub	r7, r7, r2
   2d158:	str	r3, [r4, #12]
   2d15c:	add	r0, r0, r1
   2d160:	mov	r1, sl
   2d164:	str	r0, [r4, #8]
   2d168:	bl	13ffc <memcpy@plt>
   2d16c:	b	2d050 <flatcc_emitter@@Base+0x98>
   2d170:	ldr	r0, [r4, #20]
   2d174:	cmp	r0, r2
   2d178:	bcs	2d1ac <flatcc_emitter@@Base+0x1f4>
   2d17c:	ldr	sl, [pc, #308]	; 2d2b8 <flatcc_emitter@@Base+0x300>
   2d180:	add	r5, r1, #8
   2d184:	mov	r9, #2944	; 0xb80
   2d188:	cmp	r6, #0
   2d18c:	beq	2d03c <flatcc_emitter@@Base+0x84>
   2d190:	ldr	fp, [r5, #-8]
   2d194:	ldr	r8, [r5, #-4]
   2d198:	cmp	r8, #0
   2d19c:	bne	2d1c4 <flatcc_emitter@@Base+0x20c>
   2d1a0:	sub	r6, r6, #1
   2d1a4:	add	r5, r5, #8
   2d1a8:	b	2d188 <flatcc_emitter@@Base+0x1d0>
   2d1ac:	ldr	r3, [r4, #16]
   2d1b0:	add	ip, r3, r2
   2d1b4:	sub	r2, r0, r2
   2d1b8:	str	ip, [r4, #16]
   2d1bc:	str	r2, [r4, #20]
   2d1c0:	b	2cffc <flatcc_emitter@@Base+0x44>
   2d1c4:	ldr	r7, [r4, #20]
   2d1c8:	cmp	r7, r8
   2d1cc:	bcs	2d280 <flatcc_emitter@@Base+0x2c8>
   2d1d0:	cmp	r7, #0
   2d1d4:	bne	2d284 <flatcc_emitter@@Base+0x2cc>
   2d1d8:	ldr	r7, [r4, #4]
   2d1dc:	cmp	r7, #0
   2d1e0:	beq	2d1f8 <flatcc_emitter@@Base+0x240>
   2d1e4:	ldr	r2, [r4]
   2d1e8:	ldr	r3, [r7, #2944]	; 0xb80
   2d1ec:	cmp	r3, r2
   2d1f0:	strne	r3, [r4, #4]
   2d1f4:	bne	2d234 <flatcc_emitter@@Base+0x27c>
   2d1f8:	movw	r0, #2956	; 0xb8c
   2d1fc:	bl	14068 <malloc@plt>
   2d200:	cmp	r0, #0
   2d204:	beq	2d0d8 <flatcc_emitter@@Base+0x120>
   2d208:	ldr	r3, [r4, #28]
   2d20c:	cmp	r7, #0
   2d210:	add	r3, r3, #2944	; 0xb80
   2d214:	str	r3, [r4, #28]
   2d218:	beq	2d254 <flatcc_emitter@@Base+0x29c>
   2d21c:	ldr	r3, [r4]
   2d220:	str	r3, [r0, #2944]	; 0xb80
   2d224:	str	r7, [r0, #2948]	; 0xb84
   2d228:	str	r0, [r3, #2948]	; 0xb84
   2d22c:	str	r0, [r7, #2944]	; 0xb80
   2d230:	str	r0, [r4, #4]
   2d234:	ldr	r3, [r4, #4]
   2d238:	ldr	r2, [r3, #2948]	; 0xb84
   2d23c:	ldr	r2, [r2, #2952]	; 0xb88
   2d240:	str	r3, [r4, #16]
   2d244:	str	r9, [r4, #20]
   2d248:	add	r2, r2, #2944	; 0xb80
   2d24c:	str	r2, [r3, #2952]	; 0xb88
   2d250:	b	2d198 <flatcc_emitter@@Base+0x1e0>
   2d254:	add	r3, r0, #1472	; 0x5c0
   2d258:	str	r0, [r4]
   2d25c:	str	r0, [r0, #2944]	; 0xb80
   2d260:	stmib	r4, {r0, r3}
   2d264:	str	r3, [r4, #16]
   2d268:	mov	r3, #1472	; 0x5c0
   2d26c:	str	r0, [r0, #2948]	; 0xb84
   2d270:	str	r3, [r4, #12]
   2d274:	str	r3, [r4, #20]
   2d278:	str	sl, [r0, #2952]	; 0xb88
   2d27c:	b	2d198 <flatcc_emitter@@Base+0x1e0>
   2d280:	mov	r7, r8
   2d284:	mov	r2, r7
   2d288:	mov	r1, fp
   2d28c:	ldr	r0, [r4, #16]
   2d290:	bl	13ffc <memcpy@plt>
   2d294:	ldr	r3, [r4, #16]
   2d298:	sub	r8, r8, r7
   2d29c:	add	fp, fp, r7
   2d2a0:	add	r3, r3, r7
   2d2a4:	str	r3, [r4, #16]
   2d2a8:	ldr	r3, [r4, #20]
   2d2ac:	sub	r7, r3, r7
   2d2b0:	str	r7, [r4, #20]
   2d2b4:	b	2d198 <flatcc_emitter@@Base+0x1e0>
   2d2b8:			; <UNDEFINED> instruction: 0xfffffa40

0002d2bc <flatcc_emitter_copy_buffer@@Base>:
   2d2bc:	ldr	ip, [r0, #24]
   2d2c0:	push	{r4, r5, r6, lr}
   2d2c4:	cmp	ip, r2
   2d2c8:	movhi	r6, #0
   2d2cc:	bhi	2d304 <flatcc_emitter_copy_buffer@@Base+0x48>
   2d2d0:	ldr	r6, [r0]
   2d2d4:	cmp	r6, #0
   2d2d8:	beq	2d304 <flatcc_emitter_copy_buffer@@Base+0x48>
   2d2dc:	ldr	r2, [r0, #4]
   2d2e0:	mov	r5, r1
   2d2e4:	mov	r4, r0
   2d2e8:	ldr	r1, [r0, #8]
   2d2ec:	cmp	r6, r2
   2d2f0:	bne	2d30c <flatcc_emitter_copy_buffer@@Base+0x50>
   2d2f4:	mov	r2, ip
   2d2f8:	mov	r0, r5
   2d2fc:	mov	r6, r5
   2d300:	bl	13ffc <memcpy@plt>
   2d304:	mov	r0, r6
   2d308:	pop	{r4, r5, r6, pc}
   2d30c:	ldr	r3, [r4, #12]
   2d310:	mov	r0, r5
   2d314:	rsb	r6, r3, #2944	; 0xb80
   2d318:	mov	r2, r6
   2d31c:	add	r6, r5, r6
   2d320:	bl	13ffc <memcpy@plt>
   2d324:	ldr	r2, [r4]
   2d328:	ldr	r5, [r2, #2944]	; 0xb80
   2d32c:	ldr	r2, [r4, #4]
   2d330:	cmp	r2, r5
   2d334:	bne	2d350 <flatcc_emitter_copy_buffer@@Base+0x94>
   2d338:	ldr	r2, [r4, #20]
   2d33c:	mov	r1, r5
   2d340:	mov	r0, r6
   2d344:	rsb	r2, r2, #2944	; 0xb80
   2d348:	bl	13ffc <memcpy@plt>
   2d34c:	b	2d304 <flatcc_emitter_copy_buffer@@Base+0x48>
   2d350:	mov	r1, r5
   2d354:	mov	r0, r6
   2d358:	mov	r2, #2944	; 0xb80
   2d35c:	add	r6, r6, #2944	; 0xb80
   2d360:	bl	13ffc <memcpy@plt>
   2d364:	ldr	r5, [r5, #2944]	; 0xb80
   2d368:	b	2d32c <flatcc_emitter_copy_buffer@@Base+0x70>
   2d36c:	mov	r3, r0
   2d370:	ldr	r0, [r0]
   2d374:	ldr	r1, [r3, #4]
   2d378:	bx	lr

0002d37c <cmetrohash64_1@@Base>:
   2d37c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d380:	add	r1, r0, r2
   2d384:	sub	sp, sp, #44	; 0x2c
   2d388:	mov	r4, r0
   2d38c:	str	r1, [sp, #8]
   2d390:	ldr	r1, [pc, #1404]	; 2d914 <cmetrohash64_1@@Base+0x598>
   2d394:	ldr	r0, [sp, #80]	; 0x50
   2d398:	adds	r6, r2, r1
   2d39c:	add	r1, r1, #-1308622848	; 0xb2000000
   2d3a0:	sub	r1, r1, #2359296	; 0x240000
   2d3a4:	sub	r1, r1, #416	; 0x1a0
   2d3a8:	adc	r7, r3, r1
   2d3ac:	ldr	r1, [pc, #1380]	; 2d918 <cmetrohash64_1@@Base+0x59c>
   2d3b0:	cmp	r3, #0
   2d3b4:	cmpeq	r2, #31
   2d3b8:	umlal	r6, r7, r1, r0
   2d3bc:	mov	r2, r1
   2d3c0:	strd	r6, [sp]
   2d3c4:	strd	r6, [sp, #32]
   2d3c8:	bls	2d640 <cmetrohash64_1@@Base+0x2c4>
   2d3cc:	ldr	r3, [sp]
   2d3d0:	ldr	fp, [sp]
   2d3d4:	ldr	r1, [sp, #8]
   2d3d8:	str	r3, [sp, #12]
   2d3dc:	ldr	r3, [sp, #4]
   2d3e0:	mov	r8, fp
   2d3e4:	ldr	r5, [pc, #1328]	; 2d91c <cmetrohash64_1@@Base+0x5a0>
   2d3e8:	sub	r1, r1, #32
   2d3ec:	str	r3, [sp, #16]
   2d3f0:	ldr	r3, [sp]
   2d3f4:	str	r3, [sp, #20]
   2d3f8:	ldr	r3, [sp, #4]
   2d3fc:	str	r1, [sp, #28]
   2d400:	mov	r9, r3
   2d404:	mov	sl, r3
   2d408:	str	r3, [sp, #24]
   2d40c:	mov	r0, r4
   2d410:	bl	2d36c <flatcc_emitter_copy_buffer@@Base+0xb0>
   2d414:	umull	r6, r7, r0, r2
   2d418:	add	r0, r4, #8
   2d41c:	mla	r3, r2, r1, r7
   2d420:	adds	r1, r6, r8
   2d424:	lsr	r8, r1, #29
   2d428:	mov	r7, r3
   2d42c:	ldr	r3, [sp, #20]
   2d430:	adc	sl, r7, sl
   2d434:	orr	r8, r8, sl, lsl #3
   2d438:	lsr	sl, sl, #29
   2d43c:	adds	r8, r8, r3
   2d440:	ldr	r3, [sp, #24]
   2d444:	orr	sl, sl, r1, lsl #3
   2d448:	adc	sl, sl, r3
   2d44c:	bl	2d36c <flatcc_emitter_copy_buffer@@Base+0xb0>
   2d450:	umull	r6, r7, r0, r5
   2d454:	add	r0, r4, #16
   2d458:	mla	r3, r5, r1, r7
   2d45c:	adds	lr, r6, fp
   2d460:	lsr	fp, lr, #29
   2d464:	mov	r7, r3
   2d468:	ldr	r3, [sp, #12]
   2d46c:	adc	r1, r7, r9
   2d470:	orr	fp, fp, r1, lsl #3
   2d474:	lsr	r1, r1, #29
   2d478:	adds	fp, fp, r3
   2d47c:	ldr	r3, [sp, #16]
   2d480:	orr	r1, r1, lr, lsl #3
   2d484:	adc	r9, r1, r3
   2d488:	bl	2d36c <flatcc_emitter_copy_buffer@@Base+0xb0>
   2d48c:	ldr	r3, [pc, #1164]	; 2d920 <cmetrohash64_1@@Base+0x5a4>
   2d490:	umull	r6, r7, r0, r3
   2d494:	ldr	r0, [sp, #24]
   2d498:	mla	r3, r3, r1, r7
   2d49c:	ldr	r1, [sp, #20]
   2d4a0:	mov	r7, r3
   2d4a4:	adds	r1, r6, r1
   2d4a8:	lsr	r6, r1, #29
   2d4ac:	adc	r7, r7, r0
   2d4b0:	add	r0, r4, #24
   2d4b4:	add	r4, r4, #32
   2d4b8:	orr	r6, r6, r7, lsl #3
   2d4bc:	lsr	r7, r7, #29
   2d4c0:	adds	r3, r6, r8
   2d4c4:	orr	r7, r7, r1, lsl #3
   2d4c8:	str	r3, [sp, #20]
   2d4cc:	adc	r3, r7, sl
   2d4d0:	str	r3, [sp, #24]
   2d4d4:	bl	2d36c <flatcc_emitter_copy_buffer@@Base+0xb0>
   2d4d8:	ldr	r3, [pc, #1092]	; 2d924 <cmetrohash64_1@@Base+0x5a8>
   2d4dc:	umull	r6, r7, r0, r3
   2d4e0:	ldr	r0, [sp, #12]
   2d4e4:	mla	r1, r3, r1, r7
   2d4e8:	adds	ip, r6, r0
   2d4ec:	ldr	r0, [sp, #16]
   2d4f0:	mov	r7, r1
   2d4f4:	adc	r1, r7, r0
   2d4f8:	lsr	r0, ip, #29
   2d4fc:	orr	r0, r0, r1, lsl #3
   2d500:	lsr	r1, r1, #29
   2d504:	adds	r0, r0, fp
   2d508:	orr	r1, r1, ip, lsl #3
   2d50c:	adc	r1, r1, r9
   2d510:	strd	r0, [sp, #12]
   2d514:	ldr	r1, [sp, #28]
   2d518:	cmp	r4, r1
   2d51c:	bls	2d40c <cmetrohash64_1@@Base+0x90>
   2d520:	ldr	r3, [sp, #16]
   2d524:	adds	r0, r8, r0
   2d528:	umull	r0, r1, r0, r2
   2d52c:	adc	r3, sl, r3
   2d530:	mla	r1, r2, r3, r1
   2d534:	adds	r3, r0, fp
   2d538:	lsl	r0, r3, #31
   2d53c:	adc	r1, r1, r9
   2d540:	orr	r0, r0, r1, lsr #1
   2d544:	lsl	ip, r1, #31
   2d548:	umull	r0, r1, r0, r5
   2d54c:	orr	ip, ip, r3, lsr #1
   2d550:	ldr	r3, [sp, #20]
   2d554:	mla	r1, r5, ip, r1
   2d558:	ldr	ip, [sp, #24]
   2d55c:	eor	r3, r3, r0
   2d560:	adds	r6, fp, r3
   2d564:	eor	ip, ip, r1
   2d568:	umull	r6, r7, r6, r5
   2d56c:	adc	r1, r9, ip
   2d570:	mla	r7, r5, r1, r7
   2d574:	adds	r1, r6, r8
   2d578:	adc	r6, r7, sl
   2d57c:	lsl	lr, r6, #31
   2d580:	orr	lr, lr, r1, lsr #1
   2d584:	lsl	r1, r1, #31
   2d588:	orr	r1, r1, r6, lsr #1
   2d58c:	ldr	r6, [sp, #16]
   2d590:	umull	r0, r1, r1, r2
   2d594:	mla	r1, r2, lr, r1
   2d598:	ldr	lr, [sp, #12]
   2d59c:	eor	r1, r1, r6
   2d5a0:	adds	r6, r8, r3
   2d5a4:	eor	r8, r8, fp
   2d5a8:	umull	r6, r7, r6, r2
   2d5ac:	str	r1, [sp, #12]
   2d5b0:	eor	lr, r0, lr
   2d5b4:	adc	r1, sl, ip
   2d5b8:	ldr	r0, [sp, #12]
   2d5bc:	eor	sl, sl, r9
   2d5c0:	mla	r7, r2, r1, r7
   2d5c4:	adds	r1, r6, lr
   2d5c8:	adc	r7, r7, r0
   2d5cc:	adds	lr, fp, lr
   2d5d0:	lsl	r6, r7, #31
   2d5d4:	orr	r6, r6, r1, lsr #1
   2d5d8:	lsl	r1, r1, #31
   2d5dc:	orr	r1, r1, r7, lsr #1
   2d5e0:	umull	r0, r1, r1, r5
   2d5e4:	mla	r1, r5, r6, r1
   2d5e8:	eor	r8, r8, r0
   2d5ec:	eor	sl, sl, r1
   2d5f0:	ldr	r1, [sp, #12]
   2d5f4:	adc	r9, r9, r1
   2d5f8:	umull	r0, r1, lr, r5
   2d5fc:	mla	r1, r5, r9, r1
   2d600:	adds	r3, r0, r3
   2d604:	adc	r0, r1, ip
   2d608:	lsl	lr, r0, #31
   2d60c:	orr	lr, lr, r3, lsr #1
   2d610:	lsl	r3, r3, #31
   2d614:	orr	r0, r3, r0, lsr #1
   2d618:	umull	r0, r1, r0, r2
   2d61c:	mla	r1, r2, lr, r1
   2d620:	eor	r3, r8, r0
   2d624:	eor	ip, sl, r1
   2d628:	ldr	r1, [sp]
   2d62c:	adds	r3, r3, r1
   2d630:	ldr	r1, [sp, #4]
   2d634:	str	r3, [sp, #32]
   2d638:	adc	ip, ip, r1
   2d63c:	str	ip, [sp, #36]	; 0x24
   2d640:	ldr	r3, [sp, #8]
   2d644:	sub	r3, r3, r4
   2d648:	cmp	r3, #15
   2d64c:	ble	2d760 <cmetrohash64_1@@Base+0x3e4>
   2d650:	mov	r0, r4
   2d654:	bl	2d36c <flatcc_emitter_copy_buffer@@Base+0xb0>
   2d658:	umull	r6, r7, r0, r2
   2d65c:	ldr	r5, [sp, #32]
   2d660:	ldr	r8, [sp, #36]	; 0x24
   2d664:	mla	r7, r2, r1, r7
   2d668:	adds	r0, r6, r5
   2d66c:	ldr	r6, [pc, #680]	; 2d91c <cmetrohash64_1@@Base+0x5a0>
   2d670:	adc	r9, r7, r8
   2d674:	lsl	sl, r9, #31
   2d678:	orr	r3, sl, r0, lsr #1
   2d67c:	lsl	r0, r0, #31
   2d680:	orr	r9, r0, r9, lsr #1
   2d684:	str	r3, [sp, #12]
   2d688:	umull	r0, r1, r9, r6
   2d68c:	strd	r0, [sp]
   2d690:	add	r0, r4, #8
   2d694:	add	r4, r4, #16
   2d698:	ldr	r1, [sp, #4]
   2d69c:	mla	r3, r6, r3, r1
   2d6a0:	str	r3, [sp, #4]
   2d6a4:	bl	2d36c <flatcc_emitter_copy_buffer@@Base+0xb0>
   2d6a8:	umull	sl, fp, r0, r6
   2d6ac:	ldr	r0, [pc, #628]	; 2d928 <cmetrohash64_1@@Base+0x5ac>
   2d6b0:	ldr	ip, [sp, #12]
   2d6b4:	mla	fp, r6, r1, fp
   2d6b8:	adds	r3, sl, r5
   2d6bc:	adc	r1, fp, r8
   2d6c0:	lsl	lr, r1, #31
   2d6c4:	orr	lr, lr, r3, lsr #1
   2d6c8:	lsl	r3, r3, #31
   2d6cc:	orr	r3, r3, r1, lsr #1
   2d6d0:	ldr	r1, [pc, #584]	; 2d920 <cmetrohash64_1@@Base+0x5a4>
   2d6d4:	umull	r6, r7, r3, r1
   2d6d8:	mla	r7, r1, lr, r7
   2d6dc:	ldr	r1, [pc, #584]	; 2d92c <cmetrohash64_1@@Base+0x5b0>
   2d6e0:	mul	r1, r1, r9
   2d6e4:	mla	sl, r0, ip, r1
   2d6e8:	umull	r0, r1, r9, r0
   2d6ec:	lsl	ip, r0, #29
   2d6f0:	add	r1, sl, r1
   2d6f4:	lsl	sl, r1, #29
   2d6f8:	orr	ip, ip, r1, lsr #3
   2d6fc:	ldr	r1, [sp]
   2d700:	orr	r9, sl, r0, lsr #3
   2d704:	adds	ip, ip, r6
   2d708:	ldr	r0, [pc, #544]	; 2d930 <cmetrohash64_1@@Base+0x5b4>
   2d70c:	adc	r9, r9, r7
   2d710:	eor	sl, ip, r1
   2d714:	ldr	r1, [sp, #4]
   2d718:	eor	fp, r9, r1
   2d71c:	ldr	r1, [pc, #528]	; 2d934 <cmetrohash64_1@@Base+0x5b8>
   2d720:	mul	r1, r1, r3
   2d724:	mla	lr, r0, lr, r1
   2d728:	umull	r0, r1, r3, r0
   2d72c:	add	r1, lr, r1
   2d730:	lsl	r3, r0, #29
   2d734:	lsl	lr, r1, #29
   2d738:	orr	r3, r3, r1, lsr #3
   2d73c:	orr	ip, lr, r0, lsr #3
   2d740:	adds	sl, sl, r3
   2d744:	adc	fp, fp, ip
   2d748:	eor	r1, r6, sl
   2d74c:	adds	r5, r1, r5
   2d750:	eor	r3, r7, fp
   2d754:	adc	r8, r3, r8
   2d758:	str	r5, [sp, #32]
   2d75c:	str	r8, [sp, #36]	; 0x24
   2d760:	ldr	r3, [sp, #8]
   2d764:	sub	r3, r3, r4
   2d768:	cmp	r3, #7
   2d76c:	ble	2d7c4 <cmetrohash64_1@@Base+0x448>
   2d770:	mov	r0, r4
   2d774:	add	r4, r4, #8
   2d778:	bl	2d36c <flatcc_emitter_copy_buffer@@Base+0xb0>
   2d77c:	ldr	r3, [pc, #416]	; 2d924 <cmetrohash64_1@@Base+0x5a8>
   2d780:	ldr	r5, [sp, #32]
   2d784:	ldr	ip, [sp, #36]	; 0x24
   2d788:	umull	r6, r7, r0, r3
   2d78c:	mla	r7, r3, r1, r7
   2d790:	adds	r3, r6, r5
   2d794:	ldr	r5, [pc, #384]	; 2d91c <cmetrohash64_1@@Base+0x5a0>
   2d798:	lsl	r0, r3, #31
   2d79c:	adc	ip, r7, ip
   2d7a0:	orr	r0, r0, ip, lsr #1
   2d7a4:	lsl	lr, ip, #31
   2d7a8:	umull	r0, r1, r0, r5
   2d7ac:	orr	lr, lr, r3, lsr #1
   2d7b0:	eor	r3, r3, r0
   2d7b4:	mla	r1, r5, lr, r1
   2d7b8:	str	r3, [sp, #32]
   2d7bc:	eor	ip, ip, r1
   2d7c0:	str	ip, [sp, #36]	; 0x24
   2d7c4:	ldr	r3, [sp, #8]
   2d7c8:	sub	r3, r3, r4
   2d7cc:	cmp	r3, #3
   2d7d0:	ble	2d810 <cmetrohash64_1@@Base+0x494>
   2d7d4:	ldr	ip, [r4], #4
   2d7d8:	ldr	r3, [pc, #324]	; 2d924 <cmetrohash64_1@@Base+0x5a8>
   2d7dc:	ldrd	r0, [sp, #32]
   2d7e0:	umlal	r0, r1, r3, ip
   2d7e4:	ldr	ip, [pc, #304]	; 2d91c <cmetrohash64_1@@Base+0x5a0>
   2d7e8:	lsr	r6, r0, #15
   2d7ec:	lsr	r3, r1, #15
   2d7f0:	orr	r6, r6, r1, lsl #17
   2d7f4:	orr	r3, r3, r0, lsl #17
   2d7f8:	umull	r6, r7, r6, ip
   2d7fc:	mla	r7, ip, r3, r7
   2d800:	eor	r0, r0, r6
   2d804:	str	r0, [sp, #32]
   2d808:	eor	r3, r7, r1
   2d80c:	str	r3, [sp, #36]	; 0x24
   2d810:	ldr	r3, [sp, #8]
   2d814:	sub	r3, r3, r4
   2d818:	cmp	r3, #1
   2d81c:	ble	2d85c <cmetrohash64_1@@Base+0x4e0>
   2d820:	ldrh	ip, [r4], #2
   2d824:	ldr	r3, [pc, #248]	; 2d924 <cmetrohash64_1@@Base+0x5a8>
   2d828:	ldrd	r0, [sp, #32]
   2d82c:	umlal	r0, r1, r3, ip
   2d830:	ldr	ip, [pc, #228]	; 2d91c <cmetrohash64_1@@Base+0x5a0>
   2d834:	lsr	r6, r0, #13
   2d838:	lsr	r3, r1, #13
   2d83c:	orr	r6, r6, r1, lsl #19
   2d840:	orr	r3, r3, r0, lsl #19
   2d844:	umull	r6, r7, r6, ip
   2d848:	mla	r7, ip, r3, r7
   2d84c:	eor	r0, r0, r6
   2d850:	str	r0, [sp, #32]
   2d854:	eor	r3, r7, r1
   2d858:	str	r3, [sp, #36]	; 0x24
   2d85c:	ldr	r3, [sp, #8]
   2d860:	sub	r3, r3, r4
   2d864:	cmp	r3, #0
   2d868:	ble	2d8b4 <cmetrohash64_1@@Base+0x538>
   2d86c:	ldrb	r0, [r4]
   2d870:	ldr	r3, [pc, #172]	; 2d924 <cmetrohash64_1@@Base+0x5a8>
   2d874:	ldr	ip, [sp, #36]	; 0x24
   2d878:	ldr	r4, [pc, #156]	; 2d91c <cmetrohash64_1@@Base+0x5a0>
   2d87c:	umull	r0, r1, r0, r3
   2d880:	ldr	r3, [sp, #32]
   2d884:	adds	r3, r0, r3
   2d888:	lsr	r0, r3, #25
   2d88c:	adc	ip, r1, ip
   2d890:	lsr	lr, ip, #25
   2d894:	orr	r0, r0, ip, lsl #7
   2d898:	orr	lr, lr, r3, lsl #7
   2d89c:	umull	r0, r1, r0, r4
   2d8a0:	mla	r1, r4, lr, r1
   2d8a4:	eor	r3, r3, r0
   2d8a8:	str	r3, [sp, #32]
   2d8ac:	eor	ip, ip, r1
   2d8b0:	str	ip, [sp, #36]	; 0x24
   2d8b4:	ldr	ip, [sp, #32]
   2d8b8:	ldr	r1, [sp, #36]	; 0x24
   2d8bc:	lsl	r0, ip, #31
   2d8c0:	lsl	r3, r1, #31
   2d8c4:	orr	r0, r0, r1, lsr #1
   2d8c8:	orr	r3, r3, ip, lsr #1
   2d8cc:	eor	r0, r0, ip
   2d8d0:	eor	r3, r3, r1
   2d8d4:	umull	r0, r1, r0, r2
   2d8d8:	mla	r1, r2, r3, r1
   2d8dc:	lsl	r2, r0, #31
   2d8e0:	lsl	r3, r1, #31
   2d8e4:	orr	r2, r2, r1, lsr #1
   2d8e8:	orr	r3, r3, r0, lsr #1
   2d8ec:	eor	r2, r2, r0
   2d8f0:	eor	r3, r3, r1
   2d8f4:	strd	r2, [sp, #32]
   2d8f8:	add	r3, sp, #32
   2d8fc:	ldm	r3!, {r0, r1}
   2d900:	ldr	r3, [sp, #84]	; 0x54
   2d904:	str	r0, [r3]
   2d908:	str	r1, [r3, #4]
   2d90c:	add	sp, sp, #44	; 0x2c
   2d910:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d914:	svcge	0x00065edb
   2d918:	ldmdagt	sl!, {r0, r5, r6, r7, r8, ip, pc}
   2d91c:			; <UNDEFINED> instruction: 0x8648dbdb
   2d920:	blvc	ff7dda14 <__bss_end__@@Base+0xff782918>
   2d924:	svccs	0x005870a5
   2d928:	eorcc	r4, lr, #128974848	; 0x7b00000
   2d92c:	stmdbvs	r7, {r1, r3, r6, r7, sl, sp, pc}
   2d930:	mvnscc	fp, #7340032	; 0x700000
   2d934:	usatne	fp, #8, lr, asr #0

0002d938 <cmetrohash64_2@@Base>:
   2d938:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d93c:	add	r1, r0, r2
   2d940:	sub	sp, sp, #44	; 0x2c
   2d944:	mov	r4, r0
   2d948:	str	r1, [sp, #8]
   2d94c:	ldr	r1, [pc, #1416]	; 2dedc <cmetrohash64_2@@Base+0x5a4>
   2d950:	ldr	r0, [sp, #80]	; 0x50
   2d954:	adds	r6, r2, r1
   2d958:	ldr	r1, [pc, #1408]	; 2dee0 <cmetrohash64_2@@Base+0x5a8>
   2d95c:	adc	r7, r3, r1
   2d960:	ldr	r1, [pc, #1404]	; 2dee4 <cmetrohash64_2@@Base+0x5ac>
   2d964:	cmp	r3, #0
   2d968:	cmpeq	r2, #31
   2d96c:	umlal	r6, r7, r1, r0
   2d970:	mov	r2, r1
   2d974:	strd	r6, [sp]
   2d978:	strd	r6, [sp, #32]
   2d97c:	bls	2dbf0 <cmetrohash64_2@@Base+0x2b8>
   2d980:	ldr	r3, [sp]
   2d984:	ldr	sl, [sp]
   2d988:	ldr	r5, [pc, #1368]	; 2dee8 <cmetrohash64_2@@Base+0x5b0>
   2d98c:	str	r3, [sp, #12]
   2d990:	ldr	r3, [sp, #4]
   2d994:	mov	r8, sl
   2d998:	str	r3, [sp, #16]
   2d99c:	ldr	r3, [sp]
   2d9a0:	str	r3, [sp, #20]
   2d9a4:	ldr	r3, [sp, #4]
   2d9a8:	mov	fp, r3
   2d9ac:	mov	r9, r3
   2d9b0:	str	r3, [sp, #24]
   2d9b4:	ldr	r3, [sp, #8]
   2d9b8:	sub	r3, r3, #32
   2d9bc:	mov	r0, r4
   2d9c0:	str	r3, [sp, #28]
   2d9c4:	bl	2d36c <flatcc_emitter_copy_buffer@@Base+0xb0>
   2d9c8:	umull	r6, r7, r0, r2
   2d9cc:	add	r0, r4, #8
   2d9d0:	mla	r3, r2, r1, r7
   2d9d4:	adds	r1, r6, r8
   2d9d8:	lsr	r8, r1, #29
   2d9dc:	mov	r7, r3
   2d9e0:	ldr	r3, [sp, #20]
   2d9e4:	adc	r9, r7, r9
   2d9e8:	orr	r8, r8, r9, lsl #3
   2d9ec:	lsr	r9, r9, #29
   2d9f0:	adds	r8, r8, r3
   2d9f4:	ldr	r3, [sp, #24]
   2d9f8:	orr	r9, r9, r1, lsl #3
   2d9fc:	adc	r9, r9, r3
   2da00:	bl	2d36c <flatcc_emitter_copy_buffer@@Base+0xb0>
   2da04:	umull	r6, r7, r0, r5
   2da08:	mla	r3, r5, r1, r7
   2da0c:	adds	r0, r6, sl
   2da10:	lsr	sl, r0, #29
   2da14:	mov	r7, r3
   2da18:	ldr	r3, [sp, #12]
   2da1c:	adc	fp, r7, fp
   2da20:	orr	sl, sl, fp, lsl #3
   2da24:	lsr	fp, fp, #29
   2da28:	adds	sl, sl, r3
   2da2c:	ldr	r3, [sp, #16]
   2da30:	orr	fp, fp, r0, lsl #3
   2da34:	add	r0, r4, #16
   2da38:	adc	fp, fp, r3
   2da3c:	bl	2d36c <flatcc_emitter_copy_buffer@@Base+0xb0>
   2da40:	ldr	ip, [pc, #1188]	; 2deec <cmetrohash64_2@@Base+0x5b4>
   2da44:	umull	r6, r7, r0, ip
   2da48:	mla	r3, ip, r1, r7
   2da4c:	ldr	r1, [sp, #20]
   2da50:	mov	r7, r3
   2da54:	adds	ip, r6, r1
   2da58:	ldr	r1, [sp, #24]
   2da5c:	lsr	r0, ip, #29
   2da60:	adc	r1, r7, r1
   2da64:	orr	r0, r0, r1, lsl #3
   2da68:	lsr	r1, r1, #29
   2da6c:	adds	r3, r0, r8
   2da70:	add	r0, r4, #24
   2da74:	orr	r1, r1, ip, lsl #3
   2da78:	add	r4, r4, #32
   2da7c:	str	r3, [sp, #20]
   2da80:	adc	r3, r1, r9
   2da84:	str	r3, [sp, #24]
   2da88:	bl	2d36c <flatcc_emitter_copy_buffer@@Base+0xb0>
   2da8c:	ldr	ip, [pc, #1116]	; 2def0 <cmetrohash64_2@@Base+0x5b8>
   2da90:	umull	r6, r7, r0, ip
   2da94:	mla	r3, ip, r1, r7
   2da98:	ldr	r1, [sp, #12]
   2da9c:	mov	r7, r3
   2daa0:	adds	ip, r6, r1
   2daa4:	ldr	r1, [sp, #16]
   2daa8:	lsr	r0, ip, #29
   2daac:	adc	r1, r7, r1
   2dab0:	orr	r0, r0, r1, lsl #3
   2dab4:	lsr	r1, r1, #29
   2dab8:	adds	r3, r0, sl
   2dabc:	orr	r1, r1, ip, lsl #3
   2dac0:	str	r3, [sp, #12]
   2dac4:	adc	r3, r1, fp
   2dac8:	str	r3, [sp, #16]
   2dacc:	ldr	r3, [sp, #28]
   2dad0:	cmp	r4, r3
   2dad4:	bls	2d9bc <cmetrohash64_2@@Base+0x84>
   2dad8:	ldr	r3, [sp, #12]
   2dadc:	ldr	r1, [sp, #20]
   2dae0:	adds	r0, r8, r3
   2dae4:	ldr	r3, [sp, #16]
   2dae8:	umull	r6, r7, r0, r2
   2daec:	adc	r3, r9, r3
   2daf0:	adds	r0, r6, sl
   2daf4:	lsr	r6, r0, #30
   2daf8:	mla	r7, r2, r3, r7
   2dafc:	adc	r3, r7, fp
   2db00:	orr	r6, r6, r3, lsl #2
   2db04:	lsr	r3, r3, #30
   2db08:	umull	r6, r7, r6, r5
   2db0c:	orr	r3, r3, r0, lsl #2
   2db10:	eor	r1, r1, r6
   2db14:	mla	r7, r5, r3, r7
   2db18:	ldr	r3, [sp, #24]
   2db1c:	adds	r6, sl, r1
   2db20:	eor	r3, r3, r7
   2db24:	umull	r6, r7, r6, r5
   2db28:	adc	r0, fp, r3
   2db2c:	mla	r7, r5, r0, r7
   2db30:	adds	ip, r6, r8
   2db34:	lsr	r6, ip, #30
   2db38:	adc	r0, r7, r9
   2db3c:	orr	r6, r6, r0, lsl #2
   2db40:	lsr	r0, r0, #30
   2db44:	umull	r6, r7, r6, r2
   2db48:	orr	r0, r0, ip, lsl #2
   2db4c:	ldr	ip, [sp, #16]
   2db50:	mla	r7, r2, r0, r7
   2db54:	ldr	r0, [sp, #12]
   2db58:	eor	ip, r7, ip
   2db5c:	eor	r0, r6, r0
   2db60:	adds	r6, r8, r1
   2db64:	adc	lr, r9, r3
   2db68:	eor	r8, r8, sl
   2db6c:	umull	r6, r7, r6, r2
   2db70:	eor	r9, r9, fp
   2db74:	mla	r7, r2, lr, r7
   2db78:	adds	lr, r6, r0
   2db7c:	lsr	r6, lr, #30
   2db80:	adc	r7, r7, ip
   2db84:	adds	sl, sl, r0
   2db88:	adc	ip, fp, ip
   2db8c:	orr	r6, r6, r7, lsl #2
   2db90:	umull	sl, fp, sl, r5
   2db94:	lsr	r7, r7, #30
   2db98:	mla	fp, r5, ip, fp
   2db9c:	adds	r1, sl, r1
   2dba0:	lsr	r0, r1, #30
   2dba4:	orr	lr, r7, lr, lsl #2
   2dba8:	adc	r3, fp, r3
   2dbac:	umull	r6, r7, r6, r5
   2dbb0:	orr	r0, r0, r3, lsl #2
   2dbb4:	lsr	r3, r3, #30
   2dbb8:	mla	r7, r5, lr, r7
   2dbbc:	eor	r8, r8, r6
   2dbc0:	orr	r3, r3, r1, lsl #2
   2dbc4:	umull	r0, r1, r0, r2
   2dbc8:	eor	r9, r9, r7
   2dbcc:	mla	r1, r2, r3, r1
   2dbd0:	eor	r3, r8, r0
   2dbd4:	eor	ip, r9, r1
   2dbd8:	ldr	r1, [sp]
   2dbdc:	adds	r3, r3, r1
   2dbe0:	ldr	r1, [sp, #4]
   2dbe4:	str	r3, [sp, #32]
   2dbe8:	adc	ip, ip, r1
   2dbec:	str	ip, [sp, #36]	; 0x24
   2dbf0:	ldr	r3, [sp, #8]
   2dbf4:	sub	r3, r3, r4
   2dbf8:	cmp	r3, #15
   2dbfc:	ble	2dd28 <cmetrohash64_2@@Base+0x3f0>
   2dc00:	ldr	r6, [pc, #740]	; 2deec <cmetrohash64_2@@Base+0x5b4>
   2dc04:	mov	r0, r4
   2dc08:	ldr	r3, [sp, #36]	; 0x24
   2dc0c:	ldr	r5, [sp, #32]
   2dc10:	str	r3, [sp, #12]
   2dc14:	bl	2d36c <flatcc_emitter_copy_buffer@@Base+0xb0>
   2dc18:	umull	sl, fp, r0, r6
   2dc1c:	mla	fp, r6, r1, fp
   2dc20:	ldr	r1, [sp, #12]
   2dc24:	adds	r3, sl, r5
   2dc28:	lsr	r0, r3, #29
   2dc2c:	adc	r9, fp, r1
   2dc30:	ldr	fp, [pc, #696]	; 2def0 <cmetrohash64_2@@Base+0x5b8>
   2dc34:	orr	sl, r0, r9, lsl #3
   2dc38:	lsr	r9, r9, #29
   2dc3c:	orr	r3, r9, r3, lsl #3
   2dc40:	umull	r0, r1, sl, fp
   2dc44:	strd	r0, [sp]
   2dc48:	add	r0, r4, #8
   2dc4c:	add	r4, r4, #16
   2dc50:	str	r3, [sp, #16]
   2dc54:	ldr	r3, [sp, #4]
   2dc58:	ldr	r1, [sp, #16]
   2dc5c:	mla	r3, fp, r1, r3
   2dc60:	str	r3, [sp, #4]
   2dc64:	bl	2d36c <flatcc_emitter_copy_buffer@@Base+0xb0>
   2dc68:	umull	r8, r9, r0, r6
   2dc6c:	ldr	r0, [sp, #12]
   2dc70:	mla	r3, r6, r1, r9
   2dc74:	ldr	r1, [sp, #16]
   2dc78:	mov	r9, r3
   2dc7c:	adds	r3, r8, r5
   2dc80:	lsr	lr, r3, #29
   2dc84:	adc	ip, r9, r0
   2dc88:	ldr	r0, [pc, #612]	; 2def4 <cmetrohash64_2@@Base+0x5bc>
   2dc8c:	orr	lr, lr, ip, lsl #3
   2dc90:	lsr	ip, ip, #29
   2dc94:	orr	ip, ip, r3, lsl #3
   2dc98:	ldr	r3, [pc, #600]	; 2def8 <cmetrohash64_2@@Base+0x5c0>
   2dc9c:	umull	r6, r7, lr, fp
   2dca0:	mla	r7, fp, ip, r7
   2dca4:	mul	r3, r3, sl
   2dca8:	mla	r9, r0, r1, r3
   2dcac:	umull	r0, r1, sl, r0
   2dcb0:	lsl	r3, r0, #30
   2dcb4:	add	r1, r9, r1
   2dcb8:	lsl	sl, r1, #30
   2dcbc:	orr	r3, r3, r1, lsr #2
   2dcc0:	ldr	r1, [sp]
   2dcc4:	orr	r9, sl, r0, lsr #2
   2dcc8:	adds	r3, r3, r6
   2dccc:	ldr	r0, [pc, #552]	; 2defc <cmetrohash64_2@@Base+0x5c4>
   2dcd0:	adc	r9, r9, r7
   2dcd4:	eor	sl, r3, r1
   2dcd8:	ldr	r3, [sp, #4]
   2dcdc:	eor	fp, r9, r3
   2dce0:	ldr	r3, [pc, #536]	; 2df00 <cmetrohash64_2@@Base+0x5c8>
   2dce4:	mul	r3, r3, lr
   2dce8:	mla	ip, r0, ip, r3
   2dcec:	umull	r0, r1, lr, r0
   2dcf0:	lsl	r3, r0, #30
   2dcf4:	add	r1, ip, r1
   2dcf8:	lsl	lr, r1, #30
   2dcfc:	orr	r3, r3, r1, lsr #2
   2dd00:	orr	ip, lr, r0, lsr #2
   2dd04:	adds	sl, sl, r3
   2dd08:	eor	r1, r6, sl
   2dd0c:	adc	fp, fp, ip
   2dd10:	adds	r5, r1, r5
   2dd14:	ldr	r1, [sp, #12]
   2dd18:	eor	r3, r7, fp
   2dd1c:	str	r5, [sp, #32]
   2dd20:	adc	r8, r3, r1
   2dd24:	str	r8, [sp, #36]	; 0x24
   2dd28:	ldr	r3, [sp, #8]
   2dd2c:	sub	r3, r3, r4
   2dd30:	cmp	r3, #7
   2dd34:	ble	2dd8c <cmetrohash64_2@@Base+0x454>
   2dd38:	mov	r0, r4
   2dd3c:	add	r4, r4, #8
   2dd40:	bl	2d36c <flatcc_emitter_copy_buffer@@Base+0xb0>
   2dd44:	ldr	r3, [pc, #420]	; 2def0 <cmetrohash64_2@@Base+0x5b8>
   2dd48:	ldr	r5, [sp, #32]
   2dd4c:	ldr	ip, [sp, #36]	; 0x24
   2dd50:	umull	r6, r7, r0, r3
   2dd54:	mla	r7, r3, r1, r7
   2dd58:	adds	r3, r6, r5
   2dd5c:	ldr	r5, [pc, #388]	; 2dee8 <cmetrohash64_2@@Base+0x5b0>
   2dd60:	lsl	r0, r3, #28
   2dd64:	adc	ip, r7, ip
   2dd68:	orr	r0, r0, ip, lsr #4
   2dd6c:	lsl	lr, ip, #28
   2dd70:	umull	r0, r1, r0, r5
   2dd74:	orr	lr, lr, r3, lsr #4
   2dd78:	eor	r3, r3, r0
   2dd7c:	mla	r1, r5, lr, r1
   2dd80:	str	r3, [sp, #32]
   2dd84:	eor	ip, ip, r1
   2dd88:	str	ip, [sp, #36]	; 0x24
   2dd8c:	ldr	r3, [sp, #8]
   2dd90:	sub	r3, r3, r4
   2dd94:	cmp	r3, #3
   2dd98:	ble	2ddd8 <cmetrohash64_2@@Base+0x4a0>
   2dd9c:	ldr	ip, [r4], #4
   2dda0:	ldr	r3, [pc, #328]	; 2def0 <cmetrohash64_2@@Base+0x5b8>
   2dda4:	ldrd	r0, [sp, #32]
   2dda8:	umlal	r0, r1, r3, ip
   2ddac:	ldr	ip, [pc, #308]	; 2dee8 <cmetrohash64_2@@Base+0x5b0>
   2ddb0:	lsr	r6, r0, #15
   2ddb4:	lsr	r3, r1, #15
   2ddb8:	orr	r6, r6, r1, lsl #17
   2ddbc:	orr	r3, r3, r0, lsl #17
   2ddc0:	umull	r6, r7, r6, ip
   2ddc4:	mla	r7, ip, r3, r7
   2ddc8:	eor	r0, r0, r6
   2ddcc:	str	r0, [sp, #32]
   2ddd0:	eor	r3, r7, r1
   2ddd4:	str	r3, [sp, #36]	; 0x24
   2ddd8:	ldr	r3, [sp, #8]
   2dddc:	sub	r3, r3, r4
   2dde0:	cmp	r3, #1
   2dde4:	ble	2de24 <cmetrohash64_2@@Base+0x4ec>
   2dde8:	ldrh	ip, [r4], #2
   2ddec:	ldr	r3, [pc, #252]	; 2def0 <cmetrohash64_2@@Base+0x5b8>
   2ddf0:	ldrd	r0, [sp, #32]
   2ddf4:	umlal	r0, r1, r3, ip
   2ddf8:	ldr	ip, [pc, #232]	; 2dee8 <cmetrohash64_2@@Base+0x5b0>
   2ddfc:	lsr	r6, r0, #15
   2de00:	lsr	r3, r1, #15
   2de04:	orr	r6, r6, r1, lsl #17
   2de08:	orr	r3, r3, r0, lsl #17
   2de0c:	umull	r6, r7, r6, ip
   2de10:	mla	r7, ip, r3, r7
   2de14:	eor	r0, r0, r6
   2de18:	str	r0, [sp, #32]
   2de1c:	eor	r3, r7, r1
   2de20:	str	r3, [sp, #36]	; 0x24
   2de24:	ldr	r3, [sp, #8]
   2de28:	sub	r3, r3, r4
   2de2c:	cmp	r3, #0
   2de30:	ble	2de7c <cmetrohash64_2@@Base+0x544>
   2de34:	ldrb	r0, [r4]
   2de38:	ldr	r3, [pc, #176]	; 2def0 <cmetrohash64_2@@Base+0x5b8>
   2de3c:	ldr	ip, [sp, #36]	; 0x24
   2de40:	ldr	r4, [pc, #160]	; 2dee8 <cmetrohash64_2@@Base+0x5b0>
   2de44:	umull	r0, r1, r0, r3
   2de48:	ldr	r3, [sp, #32]
   2de4c:	adds	r3, r0, r3
   2de50:	lsr	r0, r3, #23
   2de54:	adc	ip, r1, ip
   2de58:	lsr	lr, ip, #23
   2de5c:	orr	r0, r0, ip, lsl #9
   2de60:	orr	lr, lr, r3, lsl #9
   2de64:	umull	r0, r1, r0, r4
   2de68:	mla	r1, r4, lr, r1
   2de6c:	eor	r3, r3, r0
   2de70:	str	r3, [sp, #32]
   2de74:	eor	ip, ip, r1
   2de78:	str	ip, [sp, #36]	; 0x24
   2de7c:	ldr	ip, [sp, #32]
   2de80:	ldr	r1, [sp, #36]	; 0x24
   2de84:	lsr	r0, ip, #28
   2de88:	lsr	r3, r1, #28
   2de8c:	orr	r0, r0, r1, lsl #4
   2de90:	orr	r3, r3, ip, lsl #4
   2de94:	eor	r0, r0, ip
   2de98:	eor	r3, r3, r1
   2de9c:	umull	r0, r1, r0, r2
   2dea0:	mla	r1, r2, r3, r1
   2dea4:	lsr	r2, r0, #29
   2dea8:	lsr	r3, r1, #29
   2deac:	orr	r2, r2, r1, lsl #3
   2deb0:	orr	r3, r3, r0, lsl #3
   2deb4:	eor	r2, r2, r0
   2deb8:	eor	r3, r3, r1
   2debc:	strd	r2, [sp, #32]
   2dec0:	add	r3, sp, #32
   2dec4:	ldm	r3!, {r0, r1}
   2dec8:	ldr	r3, [sp, #84]	; 0x54
   2decc:	str	r0, [r3]
   2ded0:	str	r1, [r3, #4]
   2ded4:	add	sp, sp, #44	; 0x2c
   2ded8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2dedc:	blle	ff960db8 <__bss_end__@@Base+0xff905cbc>
   2dee0:	adcspl	r3, ip, #-134217725	; 0xf8000003
   2dee4:			; <UNDEFINED> instruction: 0xd6d018f5
   2dee8:	adcge	r0, sl, #-335544320	; 0xec000000
   2deec:	addsvs	r2, r9, #772	; 0x304
   2def0:	adcscc	r5, ip, r9, lsr #22
   2def4:	ldrge	r1, [pc], #-1597	; 2defc <cmetrohash64_2@@Base+0x5c4>
   2def8:	stmiacs	r5!, {r1, r2, r3, r4, r5, r6, r7, r8, ip}^
   2defc:	strtvs	r2, [lr], #3217	; 0xc91
   2df00:	stmdbeq	r7, {r0, r2, r6, r7, sl, fp, sp}^
   2df04:	push	{r4, r5, r6, r7, r8, lr}
   2df08:	mov	r5, r0
   2df0c:	mov	r7, r1
   2df10:	mov	r8, r2
   2df14:	mov	r4, #0
   2df18:	ldr	r6, [r0]
   2df1c:	ldr	r3, [r5, #12]
   2df20:	cmp	r3, r4
   2df24:	popls	{r4, r5, r6, r7, r8, pc}
   2df28:	ldr	r1, [r6, r4, lsl #2]
   2df2c:	cmp	r1, #0
   2df30:	cmpne	r1, #2
   2df34:	beq	2df40 <cmetrohash64_2@@Base+0x608>
   2df38:	mov	r0, r8
   2df3c:	blx	r7
   2df40:	add	r4, r4, #1
   2df44:	b	2df1c <cmetrohash64_2@@Base+0x5e4>
   2df48:	push	{r4, lr}
   2df4c:	mov	r4, r0
   2df50:	ldr	r0, [r0]
   2df54:	cmp	r0, #0
   2df58:	beq	2df60 <cmetrohash64_2@@Base+0x628>
   2df5c:	bl	13ff0 <free@plt>
   2df60:	mov	r0, r4
   2df64:	mov	r2, #16
   2df68:	pop	{r4, lr}
   2df6c:	mov	r1, #0
   2df70:	b	140d4 <memset@plt>
   2df74:	push	{r0, r1, r2, r3, r4, lr}
   2df78:	add	r3, sp, #8
   2df7c:	mov	r2, r1
   2df80:	str	r3, [sp, #4]
   2df84:	ldr	r3, [pc, #20]	; 2dfa0 <cmetrohash64_2@@Base+0x668>
   2df88:	str	r3, [sp]
   2df8c:	mov	r3, #0
   2df90:	bl	2d37c <cmetrohash64_1@@Base>
   2df94:	ldr	r0, [sp, #8]
   2df98:	add	sp, sp, #20
   2df9c:	pop	{pc}		; (ldr pc, [sp], #4)
   2dfa0:	svccs	0x00693b52
   2dfa4:	ldr	ip, [r2, #12]
   2dfa8:	cmp	ip, r1
   2dfac:	bne	2dfd0 <cmetrohash64_2@@Base+0x698>
   2dfb0:	mov	r3, r2
   2dfb4:	push	{r4, lr}
   2dfb8:	mov	r2, ip
   2dfbc:	ldr	r1, [r3, #8]
   2dfc0:	bl	14014 <memcmp@plt>
   2dfc4:	clz	r0, r0
   2dfc8:	lsr	r0, r0, #5
   2dfcc:	pop	{r4, pc}
   2dfd0:	mov	r0, #0
   2dfd4:	bx	lr
   2dfd8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dfdc:	subs	r8, r3, #0
   2dfe0:	str	r1, [sp]
   2dfe4:	bne	2dffc <cmetrohash64_2@@Base+0x6c4>
   2dfe8:	ldr	r3, [pc, #384]	; 2e170 <cmetrohash64_2@@Base+0x838>
   2dfec:	mov	r2, #114	; 0x72
   2dff0:	ldr	r1, [pc, #380]	; 2e174 <cmetrohash64_2@@Base+0x83c>
   2dff4:	ldr	r0, [pc, #380]	; 2e178 <cmetrohash64_2@@Base+0x840>
   2dff8:	bl	1417c <__assert_fail@plt>
   2dffc:	cmp	r8, #2
   2e000:	bne	2e018 <cmetrohash64_2@@Base+0x6e0>
   2e004:	ldr	r3, [pc, #356]	; 2e170 <cmetrohash64_2@@Base+0x838>
   2e008:	mov	r2, #115	; 0x73
   2e00c:	ldr	r1, [pc, #352]	; 2e174 <cmetrohash64_2@@Base+0x83c>
   2e010:	ldr	r0, [pc, #356]	; 2e17c <cmetrohash64_2@@Base+0x844>
   2e014:	b	2dff8 <cmetrohash64_2@@Base+0x6c0>
   2e018:	cmp	r8, #1
   2e01c:	bne	2e034 <cmetrohash64_2@@Base+0x6fc>
   2e020:	ldr	r3, [pc, #328]	; 2e170 <cmetrohash64_2@@Base+0x838>
   2e024:	mov	r2, #116	; 0x74
   2e028:	ldr	r1, [pc, #324]	; 2e174 <cmetrohash64_2@@Base+0x83c>
   2e02c:	ldr	r0, [pc, #332]	; 2e180 <cmetrohash64_2@@Base+0x848>
   2e030:	b	2dff8 <cmetrohash64_2@@Base+0x6c0>
   2e034:	mov	fp, r2
   2e038:	mov	r3, #179	; 0xb3
   2e03c:	ldr	r1, [r0, #8]
   2e040:	mov	r6, r0
   2e044:	ldr	r2, [r0, #12]
   2e048:	mul	r3, r3, r2
   2e04c:	cmp	r1, r3, lsr #8
   2e050:	bcc	2e080 <cmetrohash64_2@@Base+0x748>
   2e054:	lsl	r1, r1, #1
   2e058:	bl	2e190 <cmetrohash64_2@@Base+0x858>
   2e05c:	cmp	r0, #0
   2e060:	beq	2e080 <cmetrohash64_2@@Base+0x748>
   2e064:	ldr	r3, [pc, #280]	; 2e184 <cmetrohash64_2@@Base+0x84c>
   2e068:	ldr	r2, [pc, #280]	; 2e188 <cmetrohash64_2@@Base+0x850>
   2e06c:	ldr	r1, [pc, #280]	; 2e18c <cmetrohash64_2@@Base+0x854>
   2e070:	ldr	r0, [r3]
   2e074:	bl	140bc <fprintf@plt>
   2e078:	mov	r0, #1
   2e07c:	bl	14098 <exit@plt>
   2e080:	mov	r1, fp
   2e084:	ldr	r0, [sp]
   2e088:	ldr	sl, [r6]
   2e08c:	ldr	r9, [r6, #12]
   2e090:	bl	2df74 <cmetrohash64_2@@Base+0x63c>
   2e094:	ldr	r3, [sp, #48]	; 0x30
   2e098:	add	r4, r0, #1
   2e09c:	sub	r9, r9, #1
   2e0a0:	and	r2, r9, r0
   2e0a4:	sub	r3, r3, #2
   2e0a8:	cmp	r3, #1
   2e0ac:	ldrls	r3, [r6, #8]
   2e0b0:	movhi	r7, #0
   2e0b4:	addls	r3, r3, #1
   2e0b8:	strls	r3, [r6, #8]
   2e0bc:	bls	2e0f4 <cmetrohash64_2@@Base+0x7bc>
   2e0c0:	ldr	r5, [sl, r2, lsl #2]
   2e0c4:	add	r3, sl, r2, lsl #2
   2e0c8:	cmp	r5, #0
   2e0cc:	bne	2e124 <cmetrohash64_2@@Base+0x7ec>
   2e0d0:	cmp	r7, #0
   2e0d4:	moveq	r7, r3
   2e0d8:	ldr	r3, [r6, #8]
   2e0dc:	add	r3, r3, #1
   2e0e0:	str	r3, [r6, #8]
   2e0e4:	str	r8, [r7]
   2e0e8:	b	2e118 <cmetrohash64_2@@Base+0x7e0>
   2e0ec:	and	r2, r9, r4
   2e0f0:	add	r4, r4, #1
   2e0f4:	ldr	r3, [sl, r2, lsl #2]
   2e0f8:	add	r1, sl, r2, lsl #2
   2e0fc:	subs	r5, r3, #2
   2e100:	movne	r5, #1
   2e104:	cmp	r3, #0
   2e108:	moveq	r5, #0
   2e10c:	cmp	r5, #0
   2e110:	bne	2e0ec <cmetrohash64_2@@Base+0x7b4>
   2e114:	str	r8, [r1]
   2e118:	mov	r0, r5
   2e11c:	add	sp, sp, #12
   2e120:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e124:	cmp	r5, #2
   2e128:	bne	2e140 <cmetrohash64_2@@Base+0x808>
   2e12c:	cmp	r7, #0
   2e130:	moveq	r7, r3
   2e134:	and	r2, r9, r4
   2e138:	add	r4, r4, #1
   2e13c:	b	2e0c0 <cmetrohash64_2@@Base+0x788>
   2e140:	mov	r2, r5
   2e144:	mov	r1, fp
   2e148:	ldr	r0, [sp]
   2e14c:	str	r3, [sp, #4]
   2e150:	bl	2dfa4 <cmetrohash64_2@@Base+0x66c>
   2e154:	cmp	r0, #0
   2e158:	ldr	r3, [sp, #4]
   2e15c:	beq	2e134 <cmetrohash64_2@@Base+0x7fc>
   2e160:	ldr	r2, [sp, #48]	; 0x30
   2e164:	cmp	r2, #0
   2e168:	streq	r8, [r3]
   2e16c:	b	2e118 <cmetrohash64_2@@Base+0x7e0>
   2e170:			; <UNDEFINED> instruction: 0x0004a7b8
   2e174:	andeq	r7, r4, r8, lsl #8
   2e178:	andeq	r7, r4, r8, asr r4
   2e17c:	andeq	r7, r4, pc, ror #8
   2e180:	andeq	r7, r4, r6, lsl #9
   2e184:	strheq	fp, [r5], -r0
   2e188:	muleq	r4, fp, r4
   2e18c:	andeq	r7, r4, lr, asr #9
   2e190:	ldr	r3, [r0, #8]
   2e194:	mov	r2, #179	; 0xb3
   2e198:	push	{r4, r5, r6, r7, lr}
   2e19c:	mov	r4, r0
   2e1a0:	sub	sp, sp, #28
   2e1a4:	mov	r6, #4
   2e1a8:	ldr	r7, [r0]
   2e1ac:	cmp	r1, r3
   2e1b0:	movcc	r1, r3
   2e1b4:	mul	r3, r2, r6
   2e1b8:	cmp	r1, r3, lsr #8
   2e1bc:	bhi	2e238 <cmetrohash64_2@@Base+0x900>
   2e1c0:	mov	r1, #4
   2e1c4:	mov	r0, r6
   2e1c8:	bl	13fc0 <calloc@plt>
   2e1cc:	cmp	r0, #0
   2e1d0:	str	r0, [sp, #8]
   2e1d4:	mvneq	r0, #0
   2e1d8:	beq	2e230 <cmetrohash64_2@@Base+0x8f8>
   2e1dc:	mov	r5, #0
   2e1e0:	str	r6, [sp, #20]
   2e1e4:	mov	r6, #3
   2e1e8:	str	r5, [sp, #12]
   2e1ec:	str	r5, [sp, #16]
   2e1f0:	ldr	r3, [r4, #12]
   2e1f4:	cmp	r3, r5
   2e1f8:	bhi	2e240 <cmetrohash64_2@@Base+0x908>
   2e1fc:	mov	r0, r4
   2e200:	bl	2df48 <cmetrohash64_2@@Base+0x610>
   2e204:	add	r2, sp, #8
   2e208:	add	ip, sp, #24
   2e20c:	mov	r3, r2
   2e210:	add	r4, r4, #8
   2e214:	ldm	r3!, {r0, r1}
   2e218:	cmp	r3, ip
   2e21c:	mov	r2, r3
   2e220:	str	r0, [r4, #-8]
   2e224:	str	r1, [r4, #-4]
   2e228:	bne	2e20c <cmetrohash64_2@@Base+0x8d4>
   2e22c:	mov	r0, #0
   2e230:	add	sp, sp, #28
   2e234:	pop	{r4, r5, r6, r7, pc}
   2e238:	lsl	r6, r6, #1
   2e23c:	b	2e1b4 <cmetrohash64_2@@Base+0x87c>
   2e240:	ldr	r3, [r7, r5, lsl #2]
   2e244:	cmp	r3, #0
   2e248:	cmpne	r3, #2
   2e24c:	beq	2e264 <cmetrohash64_2@@Base+0x92c>
   2e250:	add	r0, sp, #8
   2e254:	str	r6, [sp]
   2e258:	ldr	r1, [r3, #8]
   2e25c:	ldr	r2, [r3, #12]
   2e260:	bl	2dfd8 <cmetrohash64_2@@Base+0x6a0>
   2e264:	add	r5, r5, #1
   2e268:	b	2e1f0 <cmetrohash64_2@@Base+0x8b8>
   2e26c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2e270:	ldr	r9, [r0]
   2e274:	cmp	r9, #0
   2e278:	bne	2e288 <cmetrohash64_2@@Base+0x950>
   2e27c:	mov	r5, #0
   2e280:	mov	r0, r5
   2e284:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2e288:	ldr	r6, [r0, #12]
   2e28c:	mov	r7, r1
   2e290:	mov	r1, r2
   2e294:	mov	r0, r7
   2e298:	mov	r8, r2
   2e29c:	bl	2df74 <cmetrohash64_2@@Base+0x63c>
   2e2a0:	add	r4, r0, #1
   2e2a4:	sub	r6, r6, #1
   2e2a8:	and	r3, r6, r0
   2e2ac:	ldr	r5, [r9, r3, lsl #2]
   2e2b0:	cmp	r5, #0
   2e2b4:	beq	2e27c <cmetrohash64_2@@Base+0x944>
   2e2b8:	cmp	r5, #2
   2e2bc:	beq	2e2d8 <cmetrohash64_2@@Base+0x9a0>
   2e2c0:	mov	r2, r5
   2e2c4:	mov	r1, r8
   2e2c8:	mov	r0, r7
   2e2cc:	bl	2dfa4 <cmetrohash64_2@@Base+0x66c>
   2e2d0:	cmp	r0, #0
   2e2d4:	bne	2e280 <cmetrohash64_2@@Base+0x948>
   2e2d8:	and	r3, r6, r4
   2e2dc:	add	r4, r4, #1
   2e2e0:	b	2e2ac <cmetrohash64_2@@Base+0x974>
   2e2e4:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e2e8:	ldr	sl, [r0]
   2e2ec:	cmp	sl, #0
   2e2f0:	bne	2e304 <cmetrohash64_2@@Base+0x9cc>
   2e2f4:	mov	r6, #0
   2e2f8:	mov	r0, r6
   2e2fc:	add	sp, sp, #4
   2e300:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e304:	mov	r5, r0
   2e308:	mov	r8, r1
   2e30c:	ldr	r7, [r5, #12]
   2e310:	mov	r1, r2
   2e314:	mov	r0, r8
   2e318:	mov	r9, r2
   2e31c:	bl	2df74 <cmetrohash64_2@@Base+0x63c>
   2e320:	add	r4, r0, #1
   2e324:	sub	r7, r7, #1
   2e328:	and	r3, r7, r0
   2e32c:	ldr	r6, [sl, r3, lsl #2]
   2e330:	add	fp, sl, r3, lsl #2
   2e334:	cmp	r6, #0
   2e338:	beq	2e2f4 <cmetrohash64_2@@Base+0x9bc>
   2e33c:	cmp	r6, #2
   2e340:	beq	2e374 <cmetrohash64_2@@Base+0xa3c>
   2e344:	mov	r2, r6
   2e348:	mov	r1, r9
   2e34c:	mov	r0, r8
   2e350:	bl	2dfa4 <cmetrohash64_2@@Base+0x66c>
   2e354:	cmp	r0, #0
   2e358:	beq	2e374 <cmetrohash64_2@@Base+0xa3c>
   2e35c:	mov	r3, #2
   2e360:	str	r3, [fp]
   2e364:	ldr	r3, [r5, #8]
   2e368:	sub	r3, r3, #1
   2e36c:	str	r3, [r5, #8]
   2e370:	b	2e2f8 <cmetrohash64_2@@Base+0x9c0>
   2e374:	and	r3, r4, r7
   2e378:	add	r4, r4, #1
   2e37c:	b	2e32c <cmetrohash64_2@@Base+0x9f4>

0002e380 <fb_name_table_clear@@Base>:
   2e380:	b	2df48 <cmetrohash64_2@@Base+0x610>

0002e384 <fb_name_table_destroy@@Base>:
   2e384:	cmp	r1, #0
   2e388:	push	{r4, lr}
   2e38c:	mov	r4, r0
   2e390:	beq	2e398 <fb_name_table_destroy@@Base+0x14>
   2e394:	bl	2df04 <cmetrohash64_2@@Base+0x5cc>
   2e398:	mov	r0, r4
   2e39c:	pop	{r4, lr}
   2e3a0:	b	2df48 <cmetrohash64_2@@Base+0x610>

0002e3a4 <fb_name_table_init@@Base>:
   2e3a4:	push	{r4, r5, r6, lr}
   2e3a8:	mov	r2, #179	; 0xb3
   2e3ac:	mov	r5, r0
   2e3b0:	mov	r4, #4
   2e3b4:	mul	r3, r2, r4
   2e3b8:	cmp	r1, r3, lsr #8
   2e3bc:	bhi	2e3ec <fb_name_table_init@@Base+0x48>
   2e3c0:	mov	r1, #4
   2e3c4:	mov	r0, r4
   2e3c8:	bl	13fc0 <calloc@plt>
   2e3cc:	cmp	r0, #0
   2e3d0:	str	r0, [r5]
   2e3d4:	movne	r0, #0
   2e3d8:	mvneq	r0, #0
   2e3dc:	strne	r4, [r5, #12]
   2e3e0:	strne	r0, [r5, #4]
   2e3e4:	strne	r0, [r5, #8]
   2e3e8:	pop	{r4, r5, r6, pc}
   2e3ec:	lsl	r4, r4, #1
   2e3f0:	b	2e3b4 <fb_name_table_init@@Base+0x10>

0002e3f4 <fb_name_table_resize@@Base>:
   2e3f4:	b	2e190 <cmetrohash64_2@@Base+0x858>

0002e3f8 <fb_name_table_insert@@Base>:
   2e3f8:	b	2dfd8 <cmetrohash64_2@@Base+0x6a0>

0002e3fc <fb_name_table_insert_item@@Base>:
   2e3fc:	mov	r3, r1
   2e400:	push	{r0, r1, r2, lr}
   2e404:	str	r2, [sp]
   2e408:	ldr	r1, [r1, #8]
   2e40c:	ldr	r2, [r3, #12]
   2e410:	bl	2dfd8 <cmetrohash64_2@@Base+0x6a0>
   2e414:	add	sp, sp, #12
   2e418:	pop	{pc}		; (ldr pc, [sp], #4)

0002e41c <fb_name_table_find@@Base>:
   2e41c:	b	2e26c <cmetrohash64_2@@Base+0x934>

0002e420 <fb_name_table_find_item@@Base>:
   2e420:	ldr	r2, [r1, #12]
   2e424:	ldr	r1, [r1, #8]
   2e428:	b	2e26c <cmetrohash64_2@@Base+0x934>

0002e42c <fb_name_table_remove@@Base>:
   2e42c:	b	2e2e4 <cmetrohash64_2@@Base+0x9ac>

0002e430 <fb_name_table_remove_item@@Base>:
   2e430:	ldr	r2, [r1, #12]
   2e434:	ldr	r1, [r1, #8]
   2e438:	b	2e2e4 <cmetrohash64_2@@Base+0x9ac>

0002e43c <fb_name_table_visit@@Base>:
   2e43c:	b	2df04 <cmetrohash64_2@@Base+0x5cc>
   2e440:	push	{r4, r5, r6, r7, r8, lr}
   2e444:	mov	r5, r0
   2e448:	mov	r7, r1
   2e44c:	mov	r8, r2
   2e450:	mov	r4, #0
   2e454:	ldr	r6, [r0]
   2e458:	ldr	r3, [r5, #12]
   2e45c:	cmp	r3, r4
   2e460:	popls	{r4, r5, r6, r7, r8, pc}
   2e464:	ldr	r1, [r6, r4, lsl #2]
   2e468:	cmp	r1, #0
   2e46c:	cmpne	r1, #2
   2e470:	beq	2e47c <fb_name_table_visit@@Base+0x40>
   2e474:	mov	r0, r8
   2e478:	blx	r7
   2e47c:	add	r4, r4, #1
   2e480:	b	2e458 <fb_name_table_visit@@Base+0x1c>
   2e484:	push	{r4, lr}
   2e488:	mov	r4, r0
   2e48c:	ldr	r0, [r0]
   2e490:	cmp	r0, #0
   2e494:	beq	2e49c <fb_name_table_visit@@Base+0x60>
   2e498:	bl	13ff0 <free@plt>
   2e49c:	mov	r0, r4
   2e4a0:	mov	r2, #16
   2e4a4:	pop	{r4, lr}
   2e4a8:	mov	r1, #0
   2e4ac:	b	140d4 <memset@plt>
   2e4b0:	ldrh	r3, [r0, #8]
   2e4b4:	cmp	r3, #5
   2e4b8:	beq	2e4e4 <fb_name_table_visit@@Base+0xa8>
   2e4bc:	cmp	r3, #6
   2e4c0:	beq	2e4f0 <fb_name_table_visit@@Base+0xb4>
   2e4c4:	cmp	r3, #4
   2e4c8:	bne	2e4fc <fb_name_table_visit@@Base+0xc0>
   2e4cc:	ldr	r3, [pc, #48]	; 2e504 <fb_name_table_visit@@Base+0xc8>
   2e4d0:	ldr	r2, [r0]
   2e4d4:	eor	r3, r3, r2
   2e4d8:	ldr	r0, [pc, #40]	; 2e508 <fb_name_table_visit@@Base+0xcc>
   2e4dc:	mul	r0, r0, r3
   2e4e0:	bx	lr
   2e4e4:	ldr	r3, [pc, #32]	; 2e50c <fb_name_table_visit@@Base+0xd0>
   2e4e8:	ldr	r2, [r0]
   2e4ec:	b	2e4d4 <fb_name_table_visit@@Base+0x98>
   2e4f0:	ldrb	r2, [r0]
   2e4f4:	ldr	r3, [pc, #20]	; 2e510 <fb_name_table_visit@@Base+0xd4>
   2e4f8:	b	2e4d4 <fb_name_table_visit@@Base+0x98>
   2e4fc:	mov	r0, #0
   2e500:	bx	lr
   2e504:	svccs	0x00693b56
   2e508:			; <UNDEFINED> instruction: 0x9e3779b1
   2e50c:	svccs	0x00693b57
   2e510:	svccs	0x00693b54
   2e514:	ldrh	r2, [r0, #8]
   2e518:	ldrh	r3, [r1, #8]
   2e51c:	cmp	r3, r2
   2e520:	bne	2e574 <fb_name_table_visit@@Base+0x138>
   2e524:	cmp	r3, #5
   2e528:	push	{r4, r5, lr}
   2e52c:	beq	2e540 <fb_name_table_visit@@Base+0x104>
   2e530:	cmp	r3, #6
   2e534:	beq	2e55c <fb_name_table_visit@@Base+0x120>
   2e538:	cmp	r3, #4
   2e53c:	bne	2e57c <fb_name_table_visit@@Base+0x140>
   2e540:	ldrd	r4, [r0]
   2e544:	ldrd	r2, [r1]
   2e548:	cmp	r5, r3
   2e54c:	cmpeq	r4, r2
   2e550:	moveq	r0, #1
   2e554:	movne	r0, #0
   2e558:	pop	{r4, r5, pc}
   2e55c:	ldrb	r0, [r0]
   2e560:	ldrb	r3, [r1]
   2e564:	sub	r0, r0, r3
   2e568:	clz	r0, r0
   2e56c:	lsr	r0, r0, #5
   2e570:	pop	{r4, r5, pc}
   2e574:	mov	r0, #0
   2e578:	bx	lr
   2e57c:	mov	r0, #0
   2e580:	pop	{r4, r5, pc}
   2e584:	push	{r4, r5, r6, r7, r8, lr}
   2e588:	ldr	r8, [r0]
   2e58c:	cmp	r8, #0
   2e590:	moveq	r5, r8
   2e594:	beq	2e5c0 <fb_name_table_visit@@Base+0x184>
   2e598:	ldr	r6, [r0, #12]
   2e59c:	mov	r0, r1
   2e5a0:	mov	r7, r1
   2e5a4:	bl	2e4b0 <fb_name_table_visit@@Base+0x74>
   2e5a8:	add	r4, r0, #1
   2e5ac:	sub	r6, r6, #1
   2e5b0:	and	r3, r6, r0
   2e5b4:	ldr	r5, [r8, r3, lsl #2]
   2e5b8:	cmp	r5, #0
   2e5bc:	bne	2e5c8 <fb_name_table_visit@@Base+0x18c>
   2e5c0:	mov	r0, r5
   2e5c4:	pop	{r4, r5, r6, r7, r8, pc}
   2e5c8:	cmp	r5, #2
   2e5cc:	beq	2e5e4 <fb_name_table_visit@@Base+0x1a8>
   2e5d0:	mov	r1, r5
   2e5d4:	mov	r0, r7
   2e5d8:	bl	2e514 <fb_name_table_visit@@Base+0xd8>
   2e5dc:	cmp	r0, #0
   2e5e0:	bne	2e5c0 <fb_name_table_visit@@Base+0x184>
   2e5e4:	and	r3, r6, r4
   2e5e8:	add	r4, r4, #1
   2e5ec:	b	2e5b4 <fb_name_table_visit@@Base+0x178>
   2e5f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2e5f4:	ldr	r7, [r0]
   2e5f8:	cmp	r7, #0
   2e5fc:	moveq	r6, r7
   2e600:	beq	2e664 <fb_name_table_visit@@Base+0x228>
   2e604:	mov	r5, r0
   2e608:	mov	r0, r1
   2e60c:	mov	r8, r1
   2e610:	bl	2e4b0 <fb_name_table_visit@@Base+0x74>
   2e614:	ldr	r9, [r5, #12]
   2e618:	add	r4, r0, #1
   2e61c:	sub	r9, r9, #1
   2e620:	and	r3, r9, r0
   2e624:	ldr	r6, [r7, r3, lsl #2]
   2e628:	add	sl, r7, r3, lsl #2
   2e62c:	cmp	r6, #0
   2e630:	beq	2e664 <fb_name_table_visit@@Base+0x228>
   2e634:	cmp	r6, #2
   2e638:	beq	2e66c <fb_name_table_visit@@Base+0x230>
   2e63c:	mov	r1, r6
   2e640:	mov	r0, r8
   2e644:	bl	2e514 <fb_name_table_visit@@Base+0xd8>
   2e648:	cmp	r0, #0
   2e64c:	beq	2e66c <fb_name_table_visit@@Base+0x230>
   2e650:	mov	r3, #2
   2e654:	str	r3, [sl]
   2e658:	ldr	r3, [r5, #8]
   2e65c:	sub	r3, r3, #1
   2e660:	str	r3, [r5, #8]
   2e664:	mov	r0, r6
   2e668:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2e66c:	and	r3, r9, r4
   2e670:	add	r4, r4, #1
   2e674:	b	2e624 <fb_name_table_visit@@Base+0x1e8>
   2e678:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e67c:	subs	r7, r2, #0
   2e680:	bne	2e698 <fb_name_table_visit@@Base+0x25c>
   2e684:	ldr	r3, [pc, #380]	; 2e808 <fb_name_table_visit@@Base+0x3cc>
   2e688:	mov	r2, #114	; 0x72
   2e68c:	ldr	r1, [pc, #376]	; 2e80c <fb_name_table_visit@@Base+0x3d0>
   2e690:	ldr	r0, [pc, #376]	; 2e810 <fb_name_table_visit@@Base+0x3d4>
   2e694:	bl	1417c <__assert_fail@plt>
   2e698:	cmp	r7, #2
   2e69c:	bne	2e6b4 <fb_name_table_visit@@Base+0x278>
   2e6a0:	ldr	r3, [pc, #352]	; 2e808 <fb_name_table_visit@@Base+0x3cc>
   2e6a4:	mov	r2, #115	; 0x73
   2e6a8:	ldr	r1, [pc, #348]	; 2e80c <fb_name_table_visit@@Base+0x3d0>
   2e6ac:	ldr	r0, [pc, #352]	; 2e814 <fb_name_table_visit@@Base+0x3d8>
   2e6b0:	b	2e694 <fb_name_table_visit@@Base+0x258>
   2e6b4:	cmp	r7, #1
   2e6b8:	bne	2e6d0 <fb_name_table_visit@@Base+0x294>
   2e6bc:	ldr	r3, [pc, #324]	; 2e808 <fb_name_table_visit@@Base+0x3cc>
   2e6c0:	mov	r2, #116	; 0x74
   2e6c4:	ldr	r1, [pc, #320]	; 2e80c <fb_name_table_visit@@Base+0x3d0>
   2e6c8:	ldr	r0, [pc, #328]	; 2e818 <fb_name_table_visit@@Base+0x3dc>
   2e6cc:	b	2e694 <fb_name_table_visit@@Base+0x258>
   2e6d0:	ldr	r2, [r0, #12]
   2e6d4:	mov	r9, r1
   2e6d8:	mov	sl, r3
   2e6dc:	mov	r3, #179	; 0xb3
   2e6e0:	mov	r6, r0
   2e6e4:	ldr	r1, [r0, #8]
   2e6e8:	mul	r3, r3, r2
   2e6ec:	cmp	r1, r3, lsr #8
   2e6f0:	bcc	2e720 <fb_name_table_visit@@Base+0x2e4>
   2e6f4:	lsl	r1, r1, #1
   2e6f8:	bl	2e828 <fb_name_table_visit@@Base+0x3ec>
   2e6fc:	cmp	r0, #0
   2e700:	beq	2e720 <fb_name_table_visit@@Base+0x2e4>
   2e704:	ldr	r3, [pc, #272]	; 2e81c <fb_name_table_visit@@Base+0x3e0>
   2e708:	ldr	r2, [pc, #272]	; 2e820 <fb_name_table_visit@@Base+0x3e4>
   2e70c:	ldr	r1, [pc, #272]	; 2e824 <fb_name_table_visit@@Base+0x3e8>
   2e710:	ldr	r0, [r3]
   2e714:	bl	140bc <fprintf@plt>
   2e718:	mov	r0, #1
   2e71c:	bl	14098 <exit@plt>
   2e720:	mov	r0, r9
   2e724:	bl	2e4b0 <fb_name_table_visit@@Base+0x74>
   2e728:	sub	r3, sl, #2
   2e72c:	add	r4, r0, #1
   2e730:	ldr	fp, [r6]
   2e734:	cmp	r3, #1
   2e738:	ldrls	r3, [r6, #8]
   2e73c:	movhi	r3, #0
   2e740:	ldr	r8, [r6, #12]
   2e744:	addls	r3, r3, #1
   2e748:	sub	r8, r8, #1
   2e74c:	strls	r3, [r6, #8]
   2e750:	and	r1, r8, r0
   2e754:	bls	2e78c <fb_name_table_visit@@Base+0x350>
   2e758:	ldr	r5, [fp, r1, lsl #2]
   2e75c:	add	r2, fp, r1, lsl #2
   2e760:	cmp	r5, #0
   2e764:	bne	2e7b4 <fb_name_table_visit@@Base+0x378>
   2e768:	cmp	r3, #0
   2e76c:	moveq	r3, r2
   2e770:	ldr	r2, [r6, #8]
   2e774:	add	r2, r2, #1
   2e778:	str	r2, [r6, #8]
   2e77c:	str	r7, [r3]
   2e780:	b	2e7fc <fb_name_table_visit@@Base+0x3c0>
   2e784:	and	r1, r8, r4
   2e788:	add	r4, r4, #1
   2e78c:	ldr	r3, [fp, r1, lsl #2]
   2e790:	add	r2, fp, r1, lsl #2
   2e794:	subs	r5, r3, #2
   2e798:	movne	r5, #1
   2e79c:	cmp	r3, #0
   2e7a0:	moveq	r5, #0
   2e7a4:	cmp	r5, #0
   2e7a8:	bne	2e784 <fb_name_table_visit@@Base+0x348>
   2e7ac:	str	r7, [r2]
   2e7b0:	b	2e7fc <fb_name_table_visit@@Base+0x3c0>
   2e7b4:	cmp	r5, #2
   2e7b8:	bne	2e7d0 <fb_name_table_visit@@Base+0x394>
   2e7bc:	cmp	r3, #0
   2e7c0:	moveq	r3, r2
   2e7c4:	and	r1, r8, r4
   2e7c8:	add	r4, r4, #1
   2e7cc:	b	2e758 <fb_name_table_visit@@Base+0x31c>
   2e7d0:	mov	r1, r5
   2e7d4:	mov	r0, r9
   2e7d8:	str	r3, [sp]
   2e7dc:	str	r2, [sp, #4]
   2e7e0:	bl	2e514 <fb_name_table_visit@@Base+0xd8>
   2e7e4:	cmp	r0, #0
   2e7e8:	ldr	r3, [sp]
   2e7ec:	ldr	r2, [sp, #4]
   2e7f0:	beq	2e7c4 <fb_name_table_visit@@Base+0x388>
   2e7f4:	cmp	sl, #0
   2e7f8:	beq	2e7ac <fb_name_table_visit@@Base+0x370>
   2e7fc:	mov	r0, r5
   2e800:	add	sp, sp, #12
   2e804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e808:	ldrdeq	sl, [r4], -r0
   2e80c:	andeq	r7, r4, r8, lsl #8
   2e810:	andeq	r7, r4, r8, asr r4
   2e814:	andeq	r7, r4, pc, ror #8
   2e818:	andeq	r7, r4, r6, lsl #9
   2e81c:	strheq	fp, [r5], -r0
   2e820:	muleq	r4, fp, r4
   2e824:	andeq	r7, r4, lr, asr #9
   2e828:	ldr	r3, [r0, #8]
   2e82c:	mov	r2, #179	; 0xb3
   2e830:	push	{r4, r5, r6, r7, lr}
   2e834:	mov	r4, r0
   2e838:	sub	sp, sp, #20
   2e83c:	mov	r6, #4
   2e840:	ldr	r7, [r0]
   2e844:	cmp	r1, r3
   2e848:	movcc	r1, r3
   2e84c:	mul	r3, r2, r6
   2e850:	cmp	r1, r3, lsr #8
   2e854:	bhi	2e8cc <fb_name_table_visit@@Base+0x490>
   2e858:	mov	r1, #4
   2e85c:	mov	r0, r6
   2e860:	bl	13fc0 <calloc@plt>
   2e864:	cmp	r0, #0
   2e868:	str	r0, [sp]
   2e86c:	mvneq	r0, #0
   2e870:	beq	2e8c4 <fb_name_table_visit@@Base+0x488>
   2e874:	mov	r5, #0
   2e878:	str	r5, [sp, #4]
   2e87c:	str	r5, [sp, #8]
   2e880:	str	r6, [sp, #12]
   2e884:	ldr	r3, [r4, #12]
   2e888:	cmp	r3, r5
   2e88c:	bhi	2e8d4 <fb_name_table_visit@@Base+0x498>
   2e890:	mov	r0, r4
   2e894:	bl	2e484 <fb_name_table_visit@@Base+0x48>
   2e898:	mov	r2, sp
   2e89c:	add	ip, sp, #16
   2e8a0:	mov	r3, r2
   2e8a4:	add	r4, r4, #8
   2e8a8:	ldm	r3!, {r0, r1}
   2e8ac:	cmp	r3, ip
   2e8b0:	mov	r2, r3
   2e8b4:	str	r0, [r4, #-8]
   2e8b8:	str	r1, [r4, #-4]
   2e8bc:	bne	2e8a0 <fb_name_table_visit@@Base+0x464>
   2e8c0:	mov	r0, #0
   2e8c4:	add	sp, sp, #20
   2e8c8:	pop	{r4, r5, r6, r7, pc}
   2e8cc:	lsl	r6, r6, #1
   2e8d0:	b	2e84c <fb_name_table_visit@@Base+0x410>
   2e8d4:	ldr	r2, [r7, r5, lsl #2]
   2e8d8:	cmp	r2, #0
   2e8dc:	cmpne	r2, #2
   2e8e0:	beq	2e8f4 <fb_name_table_visit@@Base+0x4b8>
   2e8e4:	mov	r3, #3
   2e8e8:	mov	r1, r2
   2e8ec:	mov	r0, sp
   2e8f0:	bl	2e678 <fb_name_table_visit@@Base+0x23c>
   2e8f4:	add	r5, r5, #1
   2e8f8:	b	2e884 <fb_name_table_visit@@Base+0x448>

0002e8fc <fb_value_set_clear@@Base>:
   2e8fc:	b	2e484 <fb_name_table_visit@@Base+0x48>

0002e900 <fb_value_set_destroy@@Base>:
   2e900:	cmp	r1, #0
   2e904:	push	{r4, lr}
   2e908:	mov	r4, r0
   2e90c:	beq	2e914 <fb_value_set_destroy@@Base+0x14>
   2e910:	bl	2e440 <fb_name_table_visit@@Base+0x4>
   2e914:	mov	r0, r4
   2e918:	pop	{r4, lr}
   2e91c:	b	2e484 <fb_name_table_visit@@Base+0x48>

0002e920 <fb_value_set_init@@Base>:
   2e920:	push	{r4, r5, r6, lr}
   2e924:	mov	r2, #179	; 0xb3
   2e928:	mov	r5, r0
   2e92c:	mov	r4, #4
   2e930:	mul	r3, r2, r4
   2e934:	cmp	r1, r3, lsr #8
   2e938:	bhi	2e968 <fb_value_set_init@@Base+0x48>
   2e93c:	mov	r1, #4
   2e940:	mov	r0, r4
   2e944:	bl	13fc0 <calloc@plt>
   2e948:	cmp	r0, #0
   2e94c:	str	r0, [r5]
   2e950:	movne	r0, #0
   2e954:	mvneq	r0, #0
   2e958:	strne	r4, [r5, #12]
   2e95c:	strne	r0, [r5, #4]
   2e960:	strne	r0, [r5, #8]
   2e964:	pop	{r4, r5, r6, pc}
   2e968:	lsl	r4, r4, #1
   2e96c:	b	2e930 <fb_value_set_init@@Base+0x10>

0002e970 <fb_value_set_resize@@Base>:
   2e970:	b	2e828 <fb_name_table_visit@@Base+0x3ec>

0002e974 <fb_value_set_insert@@Base>:
   2e974:	mov	r2, r3
   2e978:	ldr	r3, [sp]
   2e97c:	b	2e678 <fb_name_table_visit@@Base+0x23c>

0002e980 <fb_value_set_insert_item@@Base>:
   2e980:	mov	r3, r2
   2e984:	mov	r2, r1
   2e988:	b	2e678 <fb_name_table_visit@@Base+0x23c>

0002e98c <fb_value_set_find@@Base>:
   2e98c:	b	2e584 <fb_name_table_visit@@Base+0x148>

0002e990 <fb_value_set_find_item@@Base>:
   2e990:	b	2e584 <fb_name_table_visit@@Base+0x148>

0002e994 <fb_value_set_remove@@Base>:
   2e994:	b	2e5f0 <fb_name_table_visit@@Base+0x1b4>

0002e998 <fb_value_set_remove_item@@Base>:
   2e998:	b	2e5f0 <fb_name_table_visit@@Base+0x1b4>

0002e99c <fb_value_set_visit@@Base>:
   2e99c:	b	2e440 <fb_name_table_visit@@Base+0x4>
   2e9a0:	eor	r1, r1, #-2147483648	; 0x80000000
   2e9a4:	b	2e9ac <fb_value_set_visit@@Base+0x10>
   2e9a8:	eor	r3, r3, #-2147483648	; 0x80000000
   2e9ac:	push	{r4, r5, lr}
   2e9b0:	lsl	r4, r1, #1
   2e9b4:	lsl	r5, r3, #1
   2e9b8:	teq	r4, r5
   2e9bc:	teqeq	r0, r2
   2e9c0:	orrsne	ip, r4, r0
   2e9c4:	orrsne	ip, r5, r2
   2e9c8:	mvnsne	ip, r4, asr #21
   2e9cc:	mvnsne	ip, r5, asr #21
   2e9d0:	beq	2ebbc <fb_value_set_visit@@Base+0x220>
   2e9d4:	lsr	r4, r4, #21
   2e9d8:	rsbs	r5, r4, r5, lsr #21
   2e9dc:	rsblt	r5, r5, #0
   2e9e0:	ble	2ea00 <fb_value_set_visit@@Base+0x64>
   2e9e4:	add	r4, r4, r5
   2e9e8:	eor	r2, r0, r2
   2e9ec:	eor	r3, r1, r3
   2e9f0:	eor	r0, r2, r0
   2e9f4:	eor	r1, r3, r1
   2e9f8:	eor	r2, r0, r2
   2e9fc:	eor	r3, r1, r3
   2ea00:	cmp	r5, #54	; 0x36
   2ea04:	pophi	{r4, r5, pc}
   2ea08:	tst	r1, #-2147483648	; 0x80000000
   2ea0c:	lsl	r1, r1, #12
   2ea10:	mov	ip, #1048576	; 0x100000
   2ea14:	orr	r1, ip, r1, lsr #12
   2ea18:	beq	2ea24 <fb_value_set_visit@@Base+0x88>
   2ea1c:	rsbs	r0, r0, #0
   2ea20:	rsc	r1, r1, #0
   2ea24:	tst	r3, #-2147483648	; 0x80000000
   2ea28:	lsl	r3, r3, #12
   2ea2c:	orr	r3, ip, r3, lsr #12
   2ea30:	beq	2ea3c <fb_value_set_visit@@Base+0xa0>
   2ea34:	rsbs	r2, r2, #0
   2ea38:	rsc	r3, r3, #0
   2ea3c:	teq	r4, r5
   2ea40:	beq	2eba4 <fb_value_set_visit@@Base+0x208>
   2ea44:	sub	r4, r4, #1
   2ea48:	rsbs	lr, r5, #32
   2ea4c:	blt	2ea68 <fb_value_set_visit@@Base+0xcc>
   2ea50:	lsl	ip, r2, lr
   2ea54:	adds	r0, r0, r2, lsr r5
   2ea58:	adc	r1, r1, #0
   2ea5c:	adds	r0, r0, r3, lsl lr
   2ea60:	adcs	r1, r1, r3, asr r5
   2ea64:	b	2ea84 <fb_value_set_visit@@Base+0xe8>
   2ea68:	sub	r5, r5, #32
   2ea6c:	add	lr, lr, #32
   2ea70:	cmp	r2, #1
   2ea74:	lsl	ip, r3, lr
   2ea78:	orrcs	ip, ip, #2
   2ea7c:	adds	r0, r0, r3, asr r5
   2ea80:	adcs	r1, r1, r3, asr #31
   2ea84:	and	r5, r1, #-2147483648	; 0x80000000
   2ea88:	bpl	2ea98 <fb_value_set_visit@@Base+0xfc>
   2ea8c:	rsbs	ip, ip, #0
   2ea90:	rscs	r0, r0, #0
   2ea94:	rsc	r1, r1, #0
   2ea98:	cmp	r1, #1048576	; 0x100000
   2ea9c:	bcc	2eadc <fb_value_set_visit@@Base+0x140>
   2eaa0:	cmp	r1, #2097152	; 0x200000
   2eaa4:	bcc	2eac4 <fb_value_set_visit@@Base+0x128>
   2eaa8:	lsrs	r1, r1, #1
   2eaac:	rrxs	r0, r0
   2eab0:	rrx	ip, ip
   2eab4:	add	r4, r4, #1
   2eab8:	lsl	r2, r4, #21
   2eabc:	cmn	r2, #4194304	; 0x400000
   2eac0:	bcs	2ec1c <fb_value_set_visit@@Base+0x280>
   2eac4:	cmp	ip, #-2147483648	; 0x80000000
   2eac8:	lsrseq	ip, r0, #1
   2eacc:	adcs	r0, r0, #0
   2ead0:	adc	r1, r1, r4, lsl #20
   2ead4:	orr	r1, r1, r5
   2ead8:	pop	{r4, r5, pc}
   2eadc:	lsls	ip, ip, #1
   2eae0:	adcs	r0, r0, r0
   2eae4:	adc	r1, r1, r1
   2eae8:	tst	r1, #1048576	; 0x100000
   2eaec:	sub	r4, r4, #1
   2eaf0:	bne	2eac4 <fb_value_set_visit@@Base+0x128>
   2eaf4:	teq	r1, #0
   2eaf8:	moveq	r1, r0
   2eafc:	moveq	r0, #0
   2eb00:	clz	r3, r1
   2eb04:	addeq	r3, r3, #32
   2eb08:	sub	r3, r3, #11
   2eb0c:	subs	r2, r3, #32
   2eb10:	bge	2eb34 <fb_value_set_visit@@Base+0x198>
   2eb14:	adds	r2, r2, #12
   2eb18:	ble	2eb30 <fb_value_set_visit@@Base+0x194>
   2eb1c:	add	ip, r2, #20
   2eb20:	rsb	r2, r2, #12
   2eb24:	lsl	r0, r1, ip
   2eb28:	lsr	r1, r1, r2
   2eb2c:	b	2eb44 <fb_value_set_visit@@Base+0x1a8>
   2eb30:	add	r2, r2, #20
   2eb34:	rsble	ip, r2, #32
   2eb38:	lsl	r1, r1, r2
   2eb3c:	orrle	r1, r1, r0, lsr ip
   2eb40:	lslle	r0, r0, r2
   2eb44:	subs	r4, r4, r3
   2eb48:	addge	r1, r1, r4, lsl #20
   2eb4c:	orrge	r1, r1, r5
   2eb50:	popge	{r4, r5, pc}
   2eb54:	mvn	r4, r4
   2eb58:	subs	r4, r4, #31
   2eb5c:	bge	2eb98 <fb_value_set_visit@@Base+0x1fc>
   2eb60:	adds	r4, r4, #12
   2eb64:	bgt	2eb80 <fb_value_set_visit@@Base+0x1e4>
   2eb68:	add	r4, r4, #20
   2eb6c:	rsb	r2, r4, #32
   2eb70:	lsr	r0, r0, r4
   2eb74:	orr	r0, r0, r1, lsl r2
   2eb78:	orr	r1, r5, r1, lsr r4
   2eb7c:	pop	{r4, r5, pc}
   2eb80:	rsb	r4, r4, #12
   2eb84:	rsb	r2, r4, #32
   2eb88:	lsr	r0, r0, r2
   2eb8c:	orr	r0, r0, r1, lsl r4
   2eb90:	mov	r1, r5
   2eb94:	pop	{r4, r5, pc}
   2eb98:	lsr	r0, r1, r4
   2eb9c:	mov	r1, r5
   2eba0:	pop	{r4, r5, pc}
   2eba4:	teq	r4, #0
   2eba8:	eor	r3, r3, #1048576	; 0x100000
   2ebac:	eoreq	r1, r1, #1048576	; 0x100000
   2ebb0:	addeq	r4, r4, #1
   2ebb4:	subne	r5, r5, #1
   2ebb8:	b	2ea44 <fb_value_set_visit@@Base+0xa8>
   2ebbc:	mvns	ip, r4, asr #21
   2ebc0:	mvnsne	ip, r5, asr #21
   2ebc4:	beq	2ec2c <fb_value_set_visit@@Base+0x290>
   2ebc8:	teq	r4, r5
   2ebcc:	teqeq	r0, r2
   2ebd0:	beq	2ebe4 <fb_value_set_visit@@Base+0x248>
   2ebd4:	orrs	ip, r4, r0
   2ebd8:	moveq	r1, r3
   2ebdc:	moveq	r0, r2
   2ebe0:	pop	{r4, r5, pc}
   2ebe4:	teq	r1, r3
   2ebe8:	movne	r1, #0
   2ebec:	movne	r0, #0
   2ebf0:	popne	{r4, r5, pc}
   2ebf4:	lsrs	ip, r4, #21
   2ebf8:	bne	2ec0c <fb_value_set_visit@@Base+0x270>
   2ebfc:	lsls	r0, r0, #1
   2ec00:	adcs	r1, r1, r1
   2ec04:	orrcs	r1, r1, #-2147483648	; 0x80000000
   2ec08:	pop	{r4, r5, pc}
   2ec0c:	adds	r4, r4, #4194304	; 0x400000
   2ec10:	addcc	r1, r1, #1048576	; 0x100000
   2ec14:	popcc	{r4, r5, pc}
   2ec18:	and	r5, r1, #-2147483648	; 0x80000000
   2ec1c:	orr	r1, r5, #2130706432	; 0x7f000000
   2ec20:	orr	r1, r1, #15728640	; 0xf00000
   2ec24:	mov	r0, #0
   2ec28:	pop	{r4, r5, pc}
   2ec2c:	mvns	ip, r4, asr #21
   2ec30:	movne	r1, r3
   2ec34:	movne	r0, r2
   2ec38:	mvnseq	ip, r5, asr #21
   2ec3c:	movne	r3, r1
   2ec40:	movne	r2, r0
   2ec44:	orrs	r4, r0, r1, lsl #12
   2ec48:	orrseq	r5, r2, r3, lsl #12
   2ec4c:	teqeq	r1, r3
   2ec50:	orrne	r1, r1, #524288	; 0x80000
   2ec54:	pop	{r4, r5, pc}
   2ec58:	teq	r0, #0
   2ec5c:	moveq	r1, #0
   2ec60:	bxeq	lr
   2ec64:	push	{r4, r5, lr}
   2ec68:	mov	r4, #1024	; 0x400
   2ec6c:	add	r4, r4, #50	; 0x32
   2ec70:	mov	r5, #0
   2ec74:	mov	r1, #0
   2ec78:	b	2eaf4 <fb_value_set_visit@@Base+0x158>
   2ec7c:	teq	r0, #0
   2ec80:	moveq	r1, #0
   2ec84:	bxeq	lr
   2ec88:	push	{r4, r5, lr}
   2ec8c:	mov	r4, #1024	; 0x400
   2ec90:	add	r4, r4, #50	; 0x32
   2ec94:	ands	r5, r0, #-2147483648	; 0x80000000
   2ec98:	rsbmi	r0, r0, #0
   2ec9c:	mov	r1, #0
   2eca0:	b	2eaf4 <fb_value_set_visit@@Base+0x158>
   2eca4:	lsls	r2, r0, #1
   2eca8:	asr	r1, r2, #3
   2ecac:	rrx	r1, r1
   2ecb0:	lsl	r0, r2, #28
   2ecb4:	andsne	r3, r2, #-16777216	; 0xff000000
   2ecb8:	teqne	r3, #-16777216	; 0xff000000
   2ecbc:	eorne	r1, r1, #939524096	; 0x38000000
   2ecc0:	bxne	lr
   2ecc4:	bics	r2, r2, #-16777216	; 0xff000000
   2ecc8:	bxeq	lr
   2eccc:	teq	r3, #-16777216	; 0xff000000
   2ecd0:	orreq	r1, r1, #524288	; 0x80000
   2ecd4:	bxeq	lr
   2ecd8:	push	{r4, r5, lr}
   2ecdc:	mov	r4, #896	; 0x380
   2ece0:	and	r5, r1, #-2147483648	; 0x80000000
   2ece4:	bic	r1, r1, #-2147483648	; 0x80000000
   2ece8:	b	2eaf4 <fb_value_set_visit@@Base+0x158>
   2ecec:	orrs	r2, r0, r1
   2ecf0:	bxeq	lr
   2ecf4:	push	{r4, r5, lr}
   2ecf8:	mov	r5, #0
   2ecfc:	b	2ed1c <fb_value_set_visit@@Base+0x380>
   2ed00:	orrs	r2, r0, r1
   2ed04:	bxeq	lr
   2ed08:	push	{r4, r5, lr}
   2ed0c:	ands	r5, r1, #-2147483648	; 0x80000000
   2ed10:	bpl	2ed1c <fb_value_set_visit@@Base+0x380>
   2ed14:	rsbs	r0, r0, #0
   2ed18:	rsc	r1, r1, #0
   2ed1c:	mov	r4, #1024	; 0x400
   2ed20:	add	r4, r4, #50	; 0x32
   2ed24:	lsrs	ip, r1, #22
   2ed28:	beq	2ea98 <fb_value_set_visit@@Base+0xfc>
   2ed2c:	mov	r2, #3
   2ed30:	lsrs	ip, ip, #3
   2ed34:	addne	r2, r2, #3
   2ed38:	lsrs	ip, ip, #3
   2ed3c:	addne	r2, r2, #3
   2ed40:	add	r2, r2, ip, lsr #3
   2ed44:	rsb	r3, r2, #32
   2ed48:	lsl	ip, r0, r3
   2ed4c:	lsr	r0, r0, r2
   2ed50:	orr	r0, r0, r1, lsl r3
   2ed54:	lsr	r1, r1, r2
   2ed58:	add	r4, r4, r2
   2ed5c:	b	2ea98 <fb_value_set_visit@@Base+0xfc>
   2ed60:	eor	r0, r0, #-2147483648	; 0x80000000
   2ed64:	b	2ed6c <fb_value_set_visit@@Base+0x3d0>
   2ed68:	eor	r1, r1, #-2147483648	; 0x80000000
   2ed6c:	lsls	r2, r0, #1
   2ed70:	lslsne	r3, r1, #1
   2ed74:	teqne	r2, r3
   2ed78:	mvnsne	ip, r2, asr #24
   2ed7c:	mvnsne	ip, r3, asr #24
   2ed80:	beq	2ee78 <fb_value_set_visit@@Base+0x4dc>
   2ed84:	lsr	r2, r2, #24
   2ed88:	rsbs	r3, r2, r3, lsr #24
   2ed8c:	addgt	r2, r2, r3
   2ed90:	eorgt	r1, r0, r1
   2ed94:	eorgt	r0, r1, r0
   2ed98:	eorgt	r1, r0, r1
   2ed9c:	rsblt	r3, r3, #0
   2eda0:	cmp	r3, #25
   2eda4:	bxhi	lr
   2eda8:	tst	r0, #-2147483648	; 0x80000000
   2edac:	orr	r0, r0, #8388608	; 0x800000
   2edb0:	bic	r0, r0, #-16777216	; 0xff000000
   2edb4:	rsbne	r0, r0, #0
   2edb8:	tst	r1, #-2147483648	; 0x80000000
   2edbc:	orr	r1, r1, #8388608	; 0x800000
   2edc0:	bic	r1, r1, #-16777216	; 0xff000000
   2edc4:	rsbne	r1, r1, #0
   2edc8:	teq	r2, r3
   2edcc:	beq	2ee60 <fb_value_set_visit@@Base+0x4c4>
   2edd0:	sub	r2, r2, #1
   2edd4:	adds	r0, r0, r1, asr r3
   2edd8:	rsb	r3, r3, #32
   2eddc:	lsl	r1, r1, r3
   2ede0:	and	r3, r0, #-2147483648	; 0x80000000
   2ede4:	bpl	2edf0 <fb_value_set_visit@@Base+0x454>
   2ede8:	rsbs	r1, r1, #0
   2edec:	rsc	r0, r0, #0
   2edf0:	cmp	r0, #8388608	; 0x800000
   2edf4:	bcc	2ee28 <fb_value_set_visit@@Base+0x48c>
   2edf8:	cmp	r0, #16777216	; 0x1000000
   2edfc:	bcc	2ee14 <fb_value_set_visit@@Base+0x478>
   2ee00:	lsrs	r0, r0, #1
   2ee04:	rrx	r1, r1
   2ee08:	add	r2, r2, #1
   2ee0c:	cmp	r2, #254	; 0xfe
   2ee10:	bcs	2eecc <fb_value_set_visit@@Base+0x530>
   2ee14:	cmp	r1, #-2147483648	; 0x80000000
   2ee18:	adc	r0, r0, r2, lsl #23
   2ee1c:	biceq	r0, r0, #1
   2ee20:	orr	r0, r0, r3
   2ee24:	bx	lr
   2ee28:	lsls	r1, r1, #1
   2ee2c:	adc	r0, r0, r0
   2ee30:	tst	r0, #8388608	; 0x800000
   2ee34:	sub	r2, r2, #1
   2ee38:	bne	2ee14 <fb_value_set_visit@@Base+0x478>
   2ee3c:	clz	ip, r0
   2ee40:	sub	ip, ip, #8
   2ee44:	subs	r2, r2, ip
   2ee48:	lsl	r0, r0, ip
   2ee4c:	addge	r0, r0, r2, lsl #23
   2ee50:	rsblt	r2, r2, #0
   2ee54:	orrge	r0, r0, r3
   2ee58:	orrlt	r0, r3, r0, lsr r2
   2ee5c:	bx	lr
   2ee60:	teq	r2, #0
   2ee64:	eor	r1, r1, #8388608	; 0x800000
   2ee68:	eoreq	r0, r0, #8388608	; 0x800000
   2ee6c:	addeq	r2, r2, #1
   2ee70:	subne	r3, r3, #1
   2ee74:	b	2edd0 <fb_value_set_visit@@Base+0x434>
   2ee78:	lsl	r3, r1, #1
   2ee7c:	mvns	ip, r2, asr #24
   2ee80:	mvnsne	ip, r3, asr #24
   2ee84:	beq	2eed8 <fb_value_set_visit@@Base+0x53c>
   2ee88:	teq	r2, r3
   2ee8c:	beq	2ee9c <fb_value_set_visit@@Base+0x500>
   2ee90:	teq	r2, #0
   2ee94:	moveq	r0, r1
   2ee98:	bx	lr
   2ee9c:	teq	r0, r1
   2eea0:	movne	r0, #0
   2eea4:	bxne	lr
   2eea8:	tst	r2, #-16777216	; 0xff000000
   2eeac:	bne	2eebc <fb_value_set_visit@@Base+0x520>
   2eeb0:	lsls	r0, r0, #1
   2eeb4:	orrcs	r0, r0, #-2147483648	; 0x80000000
   2eeb8:	bx	lr
   2eebc:	adds	r2, r2, #33554432	; 0x2000000
   2eec0:	addcc	r0, r0, #8388608	; 0x800000
   2eec4:	bxcc	lr
   2eec8:	and	r3, r0, #-2147483648	; 0x80000000
   2eecc:	orr	r0, r3, #2130706432	; 0x7f000000
   2eed0:	orr	r0, r0, #8388608	; 0x800000
   2eed4:	bx	lr
   2eed8:	mvns	r2, r2, asr #24
   2eedc:	movne	r0, r1
   2eee0:	mvnseq	r3, r3, asr #24
   2eee4:	movne	r1, r0
   2eee8:	lsls	r2, r0, #9
   2eeec:	lslseq	r3, r1, #9
   2eef0:	teqeq	r0, r1
   2eef4:	orrne	r0, r0, #4194304	; 0x400000
   2eef8:	bx	lr
   2eefc:	mov	r3, #0
   2ef00:	b	2ef0c <fb_value_set_visit@@Base+0x570>
   2ef04:	ands	r3, r0, #-2147483648	; 0x80000000
   2ef08:	rsbmi	r0, r0, #0
   2ef0c:	movs	ip, r0
   2ef10:	bxeq	lr
   2ef14:	orr	r3, r3, #1258291200	; 0x4b000000
   2ef18:	mov	r1, r0
   2ef1c:	mov	r0, #0
   2ef20:	b	2ef64 <fb_value_set_visit@@Base+0x5c8>
   2ef24:	orrs	r2, r0, r1
   2ef28:	bxeq	lr
   2ef2c:	mov	r3, #0
   2ef30:	b	2ef4c <fb_value_set_visit@@Base+0x5b0>
   2ef34:	orrs	r2, r0, r1
   2ef38:	bxeq	lr
   2ef3c:	ands	r3, r1, #-2147483648	; 0x80000000
   2ef40:	bpl	2ef4c <fb_value_set_visit@@Base+0x5b0>
   2ef44:	rsbs	r0, r0, #0
   2ef48:	rsc	r1, r1, #0
   2ef4c:	movs	ip, r1
   2ef50:	moveq	ip, r0
   2ef54:	moveq	r1, r0
   2ef58:	moveq	r0, #0
   2ef5c:	orr	r3, r3, #1526726656	; 0x5b000000
   2ef60:	subeq	r3, r3, #268435456	; 0x10000000
   2ef64:	sub	r3, r3, #8388608	; 0x800000
   2ef68:	clz	r2, ip
   2ef6c:	subs	r2, r2, #8
   2ef70:	sub	r3, r3, r2, lsl #23
   2ef74:	blt	2ef94 <fb_value_set_visit@@Base+0x5f8>
   2ef78:	add	r3, r3, r1, lsl r2
   2ef7c:	lsl	ip, r0, r2
   2ef80:	rsb	r2, r2, #32
   2ef84:	cmp	ip, #-2147483648	; 0x80000000
   2ef88:	adc	r0, r3, r0, lsr r2
   2ef8c:	biceq	r0, r0, #1
   2ef90:	bx	lr
   2ef94:	add	r2, r2, #32
   2ef98:	lsl	ip, r1, r2
   2ef9c:	rsb	r2, r2, #32
   2efa0:	orrs	r0, r0, ip, lsl #1
   2efa4:	adc	r0, r3, r1, lsr r2
   2efa8:	biceq	r0, r0, ip, lsr #31
   2efac:	bx	lr
   2efb0:	cmp	r3, #0
   2efb4:	cmpeq	r2, #0
   2efb8:	bne	2efd0 <fb_value_set_visit@@Base+0x634>
   2efbc:	cmp	r1, #0
   2efc0:	cmpeq	r0, #0
   2efc4:	mvnne	r1, #0
   2efc8:	mvnne	r0, #0
   2efcc:	b	2efec <fb_value_set_visit@@Base+0x650>
   2efd0:	sub	sp, sp, #8
   2efd4:	push	{sp, lr}
   2efd8:	bl	2f0d8 <fb_value_set_visit@@Base+0x73c>
   2efdc:	ldr	lr, [sp, #4]
   2efe0:	add	sp, sp, #8
   2efe4:	pop	{r2, r3}
   2efe8:	bx	lr
   2efec:	push	{r1, lr}
   2eff0:	mov	r0, #8
   2eff4:	bl	13fcc <raise@plt>
   2eff8:	pop	{r1, pc}
   2effc:	vmov	s15, r0
   2f000:	vcmpe.f32	s15, #0.0
   2f004:	vmrs	APSR_nzcv, fpscr
   2f008:	bmi	2f010 <fb_value_set_visit@@Base+0x674>
   2f00c:	b	2f058 <fb_value_set_visit@@Base+0x6bc>
   2f010:	push	{r4, lr}
   2f014:	eor	r0, r0, #-2147483648	; 0x80000000
   2f018:	bl	2f058 <fb_value_set_visit@@Base+0x6bc>
   2f01c:	rsbs	r0, r0, #0
   2f020:	rsc	r1, r1, #0
   2f024:	pop	{r4, pc}
   2f028:	vmov	d7, r0, r1
   2f02c:	vcmpe.f64	d7, #0.0
   2f030:	vmrs	APSR_nzcv, fpscr
   2f034:	bmi	2f03c <fb_value_set_visit@@Base+0x6a0>
   2f038:	b	2f098 <fb_value_set_visit@@Base+0x6fc>
   2f03c:	push	{r4, lr}
   2f040:	eor	r1, r1, #-2147483648	; 0x80000000
   2f044:	bl	2f098 <fb_value_set_visit@@Base+0x6fc>
   2f048:	rsbs	r0, r0, #0
   2f04c:	rsc	r1, r1, #0
   2f050:	pop	{r4, pc}
   2f054:	andeq	r0, r0, r0
   2f058:	vmov	s15, r0
   2f05c:	vldr	d5, [pc, #36]	; 2f088 <fb_value_set_visit@@Base+0x6ec>
   2f060:	vcvt.f64.f32	d6, s15
   2f064:	vldr	d7, [pc, #36]	; 2f090 <fb_value_set_visit@@Base+0x6f4>
   2f068:	vmul.f64	d7, d6, d7
   2f06c:	vcvt.u32.f64	s14, d7
   2f070:	vcvt.f64.u32	d4, s14
   2f074:	vmov	r1, s14
   2f078:	vmls.f64	d6, d4, d5
   2f07c:	vcvt.u32.f64	s15, d6
   2f080:	vmov	r0, s15
   2f084:	bx	lr
   2f088:	andeq	r0, r0, r0
   2f08c:	mvnsmi	r0, r0
   2f090:	andeq	r0, r0, r0
   2f094:	ldclcc	0, cr0, [r0]
   2f098:	vmov	d6, r0, r1
   2f09c:	vldr	d7, [pc, #36]	; 2f0c8 <fb_value_set_visit@@Base+0x72c>
   2f0a0:	vldr	d5, [pc, #40]	; 2f0d0 <fb_value_set_visit@@Base+0x734>
   2f0a4:	vmul.f64	d7, d6, d7
   2f0a8:	vcvt.u32.f64	s14, d7
   2f0ac:	vcvt.f64.u32	d4, s14
   2f0b0:	vmov	r1, s14
   2f0b4:	vmls.f64	d6, d4, d5
   2f0b8:	vcvt.u32.f64	s15, d6
   2f0bc:	vmov	r0, s15
   2f0c0:	bx	lr
   2f0c4:	nop			; (mov r0, r0)
   2f0c8:	andeq	r0, r0, r0
   2f0cc:	ldclcc	0, cr0, [r0]
   2f0d0:	andeq	r0, r0, r0
   2f0d4:	mvnsmi	r0, r0
   2f0d8:	cmp	r1, r3
   2f0dc:	cmpeq	r0, r2
   2f0e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f0e4:	mov	r4, r0
   2f0e8:	movcc	r0, #0
   2f0ec:	mov	r5, r1
   2f0f0:	ldr	lr, [sp, #36]	; 0x24
   2f0f4:	movcc	r1, r0
   2f0f8:	bcc	2f1f4 <fb_value_set_visit@@Base+0x858>
   2f0fc:	cmp	r3, #0
   2f100:	clzeq	ip, r2
   2f104:	clzne	ip, r3
   2f108:	addeq	ip, ip, #32
   2f10c:	cmp	r5, #0
   2f110:	clzeq	r1, r4
   2f114:	addeq	r1, r1, #32
   2f118:	clzne	r1, r5
   2f11c:	sub	ip, ip, r1
   2f120:	sub	sl, ip, #32
   2f124:	lsl	r9, r3, ip
   2f128:	rsb	fp, ip, #32
   2f12c:	orr	r9, r9, r2, lsl sl
   2f130:	orr	r9, r9, r2, lsr fp
   2f134:	lsl	r8, r2, ip
   2f138:	cmp	r5, r9
   2f13c:	cmpeq	r4, r8
   2f140:	movcc	r0, #0
   2f144:	movcc	r1, r0
   2f148:	bcc	2f164 <fb_value_set_visit@@Base+0x7c8>
   2f14c:	mov	r0, #1
   2f150:	subs	r4, r4, r8
   2f154:	lsl	r1, r0, sl
   2f158:	orr	r1, r1, r0, lsr fp
   2f15c:	lsl	r0, r0, ip
   2f160:	sbc	r5, r5, r9
   2f164:	cmp	ip, #0
   2f168:	beq	2f1f4 <fb_value_set_visit@@Base+0x858>
   2f16c:	lsr	r6, r8, #1
   2f170:	orr	r6, r6, r9, lsl #31
   2f174:	lsr	r7, r9, #1
   2f178:	mov	r2, ip
   2f17c:	b	2f1a0 <fb_value_set_visit@@Base+0x804>
   2f180:	subs	r3, r4, r6
   2f184:	sbc	r8, r5, r7
   2f188:	adds	r3, r3, r3
   2f18c:	adc	r8, r8, r8
   2f190:	adds	r4, r3, #1
   2f194:	adc	r5, r8, #0
   2f198:	subs	r2, r2, #1
   2f19c:	beq	2f1bc <fb_value_set_visit@@Base+0x820>
   2f1a0:	cmp	r5, r7
   2f1a4:	cmpeq	r4, r6
   2f1a8:	bcs	2f180 <fb_value_set_visit@@Base+0x7e4>
   2f1ac:	adds	r4, r4, r4
   2f1b0:	adc	r5, r5, r5
   2f1b4:	subs	r2, r2, #1
   2f1b8:	bne	2f1a0 <fb_value_set_visit@@Base+0x804>
   2f1bc:	lsr	r3, r4, ip
   2f1c0:	orr	r3, r3, r5, lsl fp
   2f1c4:	lsr	r2, r5, ip
   2f1c8:	orr	r3, r3, r5, lsr sl
   2f1cc:	adds	r0, r0, r4
   2f1d0:	mov	r4, r3
   2f1d4:	lsl	r3, r2, ip
   2f1d8:	orr	r3, r3, r4, lsl sl
   2f1dc:	lsl	ip, r4, ip
   2f1e0:	orr	r3, r3, r4, lsr fp
   2f1e4:	adc	r1, r1, r5
   2f1e8:	subs	r0, r0, ip
   2f1ec:	mov	r5, r2
   2f1f0:	sbc	r1, r1, r3
   2f1f4:	cmp	lr, #0
   2f1f8:	strdne	r4, [lr]
   2f1fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002f200 <__libc_csu_init@@Base>:
   2f200:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2f204:	mov	r7, r0
   2f208:	ldr	r6, [pc, #72]	; 2f258 <__libc_csu_init@@Base+0x58>
   2f20c:	ldr	r5, [pc, #72]	; 2f25c <__libc_csu_init@@Base+0x5c>
   2f210:	add	r6, pc, r6
   2f214:	add	r5, pc, r5
   2f218:	sub	r6, r6, r5
   2f21c:	mov	r8, r1
   2f220:	mov	r9, r2
   2f224:	bl	13fa0 <calloc@plt-0x20>
   2f228:	asrs	r6, r6, #2
   2f22c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2f230:	mov	r4, #0
   2f234:	add	r4, r4, #1
   2f238:	ldr	r3, [r5], #4
   2f23c:	mov	r2, r9
   2f240:	mov	r1, r8
   2f244:	mov	r0, r7
   2f248:	blx	r3
   2f24c:	cmp	r6, r4
   2f250:	bne	2f234 <__libc_csu_init@@Base+0x34>
   2f254:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2f258:	strdeq	fp, [r2], -ip
   2f25c:	strdeq	fp, [r2], -r4

0002f260 <__libc_csu_fini@@Base>:
   2f260:	bx	lr

Disassembly of section .fini:

0002f264 <.fini>:
   2f264:	push	{r3, lr}
   2f268:	pop	{r3, pc}
