
../repos/charybdis/extensions/.libs/m_roleplay.so:     file format elf32-littlearm


Disassembly of section .init:

00000844 <_init>:
 844:	push	{r3, lr}
 848:	bl	924 <call_weak_fn>
 84c:	pop	{r3, pc}

Disassembly of section .plt:

00000850 <.plt>:
 850:	push	{lr}		; (str lr, [sp, #-4]!)
 854:	ldr	lr, [pc, #4]	; 860 <.plt+0x10>
 858:	add	lr, pc, lr
 85c:	ldr	pc, [lr, #8]!
 860:	.word	0x000117a0

00000864 <sendto_channel_local@plt>:
 864:	add	ip, pc, #0, 12
 868:	add	ip, ip, #69632	; 0x11000
 86c:	ldr	pc, [ip, #1952]!	; 0x7a0

00000870 <can_send@plt>:
 870:	add	ip, pc, #0, 12
 874:	add	ip, ip, #69632	; 0x11000
 878:	ldr	pc, [ip, #1944]!	; 0x798

0000087c <cflag_add@plt>:
 87c:	add	ip, pc, #0, 12
 880:	add	ip, ip, #69632	; 0x11000
 884:	ldr	pc, [ip, #1936]!	; 0x790

00000888 <sendto_match_servs@plt>:
 888:	add	ip, pc, #0, 12
 88c:	add	ip, ip, #69632	; 0x11000
 890:	ldr	pc, [ip, #1928]!	; 0x788

00000894 <__cxa_finalize@plt>:
 894:	add	ip, pc, #0, 12
 898:	add	ip, ip, #69632	; 0x11000
 89c:	ldr	pc, [ip, #1920]!	; 0x780

000008a0 <sendto_one@plt>:
 8a0:	add	ip, pc, #0, 12
 8a4:	add	ip, ip, #69632	; 0x11000
 8a8:	ldr	pc, [ip, #1912]!	; 0x778

000008ac <find_channel@plt>:
 8ac:	add	ip, pc, #0, 12
 8b0:	add	ip, ip, #69632	; 0x11000
 8b4:	ldr	pc, [ip, #1904]!	; 0x770

000008b8 <find_channel_membership@plt>:
 8b8:	add	ip, pc, #0, 12
 8bc:	add	ip, ip, #69632	; 0x11000
 8c0:	ldr	pc, [ip, #1896]!	; 0x768

000008c4 <__gmon_start__@plt>:
 8c4:	add	ip, pc, #0, 12
 8c8:	add	ip, ip, #69632	; 0x11000
 8cc:	ldr	pc, [ip, #1888]!	; 0x760

000008d0 <sendto_one_numeric@plt>:
 8d0:	add	ip, pc, #0, 12
 8d4:	add	ip, ip, #69632	; 0x11000
 8d8:	ldr	pc, [ip, #1880]!	; 0x758

000008dc <add_channel_target@plt>:
 8dc:	add	ip, pc, #0, 12
 8e0:	add	ip, ip, #69632	; 0x11000
 8e4:	ldr	pc, [ip, #1872]!	; 0x750

000008e8 <snprintf@plt>:
 8e8:	add	ip, pc, #0, 12
 8ec:	add	ip, ip, #69632	; 0x11000
 8f0:	ldr	pc, [ip, #1864]!	; 0x748

000008f4 <flood_endgrace@plt>:
 8f4:	add	ip, pc, #0, 12
 8f8:	add	ip, ip, #69632	; 0x11000
 8fc:	ldr	pc, [ip, #1856]!	; 0x740

00000900 <rb_strlcpy@plt>:
 900:	add	ip, pc, #0, 12
 904:	add	ip, ip, #69632	; 0x11000
 908:	ldr	pc, [ip, #1848]!	; 0x738

0000090c <flood_attack_channel@plt>:
 90c:	add	ip, pc, #0, 12
 910:	add	ip, ip, #69632	; 0x11000
 914:	ldr	pc, [ip, #1840]!	; 0x730

00000918 <cflag_orphan@plt>:
 918:	add	ip, pc, #0, 12
 91c:	add	ip, ip, #69632	; 0x11000
 920:	ldr	pc, [ip, #1832]!	; 0x728

Disassembly of section .text:

00000924 <call_weak_fn>:
     924:	ldr	r3, [pc, #20]	; 940 <call_weak_fn+0x1c>
     928:	ldr	r2, [pc, #20]	; 944 <call_weak_fn+0x20>
     92c:	add	r3, pc, r3
     930:	ldr	r2, [r3, r2]
     934:	cmp	r2, #0
     938:	bxeq	lr
     93c:	b	8c4 <__gmon_start__@plt>
     940:	.word	0x000116cc
     944:	.word	0x00000058

00000948 <deregister_tm_clones>:
     948:	ldr	r3, [pc, #52]	; 984 <deregister_tm_clones+0x3c>
     94c:	ldr	r0, [pc, #52]	; 988 <deregister_tm_clones+0x40>
     950:	add	r3, pc, r3
     954:	add	r0, pc, r0
     958:	add	r3, r3, #3
     95c:	sub	r3, r3, r0
     960:	cmp	r3, #6
     964:	ldr	r3, [pc, #32]	; 98c <deregister_tm_clones+0x44>
     968:	add	r3, pc, r3
     96c:	bxls	lr
     970:	ldr	r2, [pc, #24]	; 990 <deregister_tm_clones+0x48>
     974:	ldr	r3, [r3, r2]
     978:	cmp	r3, #0
     97c:	bxeq	lr
     980:	bx	r3
     984:	.word	0x00011944
     988:	.word	0x00011940
     98c:	.word	0x00011690
     990:	.word	0x00000050

00000994 <register_tm_clones>:
     994:	ldr	r1, [pc, #56]	; 9d4 <register_tm_clones+0x40>
     998:	ldr	r0, [pc, #56]	; 9d8 <register_tm_clones+0x44>
     99c:	add	r1, pc, r1
     9a0:	add	r0, pc, r0
     9a4:	sub	r1, r1, r0
     9a8:	ldr	r3, [pc, #44]	; 9dc <register_tm_clones+0x48>
     9ac:	asr	r1, r1, #2
     9b0:	add	r3, pc, r3
     9b4:	add	r1, r1, r1, lsr #31
     9b8:	asrs	r1, r1, #1
     9bc:	bxeq	lr
     9c0:	ldr	r2, [pc, #24]	; 9e0 <register_tm_clones+0x4c>
     9c4:	ldr	r3, [r3, r2]
     9c8:	cmp	r3, #0
     9cc:	bxeq	lr
     9d0:	bx	r3
     9d4:	.word	0x000118f8
     9d8:	.word	0x000118f4
     9dc:	.word	0x00011648
     9e0:	.word	0x00000068

000009e4 <__do_global_dtors_aux>:
     9e4:	ldr	r3, [pc, #76]	; a38 <__do_global_dtors_aux+0x54>
     9e8:	ldr	r2, [pc, #76]	; a3c <__do_global_dtors_aux+0x58>
     9ec:	add	r3, pc, r3
     9f0:	add	r2, pc, r2
     9f4:	ldrb	r3, [r3]
     9f8:	cmp	r3, #0
     9fc:	bxne	lr
     a00:	ldr	r3, [pc, #56]	; a40 <__do_global_dtors_aux+0x5c>
     a04:	push	{r4, lr}
     a08:	ldr	r3, [r2, r3]
     a0c:	cmp	r3, #0
     a10:	beq	a20 <__do_global_dtors_aux+0x3c>
     a14:	ldr	r3, [pc, #40]	; a44 <__do_global_dtors_aux+0x60>
     a18:	ldr	r0, [pc, r3]
     a1c:	bl	894 <__cxa_finalize@plt>
     a20:	bl	948 <deregister_tm_clones>
     a24:	ldr	r3, [pc, #28]	; a48 <__do_global_dtors_aux+0x64>
     a28:	mov	r2, #1
     a2c:	add	r3, pc, r3
     a30:	strb	r2, [r3]
     a34:	pop	{r4, pc}
     a38:	.word	0x000118a8
     a3c:	.word	0x00011608
     a40:	.word	0x0000004c
     a44:	.word	0x00011654
     a48:	.word	0x00011868

00000a4c <frame_dummy>:
     a4c:	ldr	r0, [pc, #56]	; a8c <frame_dummy+0x40>
     a50:	ldr	r3, [pc, #56]	; a90 <frame_dummy+0x44>
     a54:	add	r0, pc, r0
     a58:	ldr	r2, [r0]
     a5c:	add	r3, pc, r3
     a60:	cmp	r2, #0
     a64:	bne	a6c <frame_dummy+0x20>
     a68:	b	994 <register_tm_clones>
     a6c:	ldr	r2, [pc, #32]	; a94 <frame_dummy+0x48>
     a70:	ldr	r3, [r3, r2]
     a74:	cmp	r3, #0
     a78:	beq	a68 <frame_dummy+0x1c>
     a7c:	push	{r4, lr}
     a80:	blx	r3
     a84:	pop	{r4, lr}
     a88:	b	994 <register_tm_clones>
     a8c:	.word	0x000114a0
     a90:	.word	0x0001159c
     a94:	.word	0x00000064

00000a98 <strip_unprintable>:
     a98:	push	{fp}		; (str fp, [sp, #-4]!)
     a9c:	add	fp, sp, #0
     aa0:	sub	sp, sp, #28
     aa4:	str	r0, [fp, #-24]	; 0xffffffe8
     aa8:	ldr	r3, [pc, #476]	; c8c <strip_unprintable+0x1f4>
     aac:	add	r3, pc, r3
     ab0:	ldr	r2, [fp, #-24]	; 0xffffffe8
     ab4:	str	r2, [fp, #-8]
     ab8:	ldr	r2, [fp, #-24]	; 0xffffffe8
     abc:	str	r2, [fp, #-12]
     ac0:	mov	r2, #0
     ac4:	str	r2, [fp, #-16]
     ac8:	b	c38 <strip_unprintable+0x1a0>
     acc:	ldr	r2, [fp, #-8]
     ad0:	ldrb	r2, [r2]
     ad4:	cmp	r2, #3
     ad8:	beq	ae8 <strip_unprintable+0x50>
     adc:	cmp	r2, #32
     ae0:	beq	bd0 <strip_unprintable+0x138>
     ae4:	b	bec <strip_unprintable+0x154>
     ae8:	ldr	r2, [fp, #-8]
     aec:	add	r2, r2, #1
     af0:	ldrb	r2, [r2]
     af4:	mov	r1, r2
     af8:	ldr	r2, [pc, #400]	; c90 <strip_unprintable+0x1f8>
     afc:	ldr	r2, [r3, r2]
     b00:	ldr	r2, [r2, r1, lsl #2]
     b04:	and	r2, r2, #16
     b08:	cmp	r2, #0
     b0c:	beq	c20 <strip_unprintable+0x188>
     b10:	ldr	r2, [fp, #-8]
     b14:	add	r2, r2, #1
     b18:	str	r2, [fp, #-8]
     b1c:	ldr	r2, [fp, #-8]
     b20:	add	r2, r2, #1
     b24:	ldrb	r2, [r2]
     b28:	mov	r1, r2
     b2c:	ldr	r2, [pc, #348]	; c90 <strip_unprintable+0x1f8>
     b30:	ldr	r2, [r3, r2]
     b34:	ldr	r2, [r2, r1, lsl #2]
     b38:	and	r2, r2, #16
     b3c:	cmp	r2, #0
     b40:	beq	b50 <strip_unprintable+0xb8>
     b44:	ldr	r2, [fp, #-8]
     b48:	add	r2, r2, #1
     b4c:	str	r2, [fp, #-8]
     b50:	ldr	r2, [fp, #-8]
     b54:	add	r2, r2, #1
     b58:	ldrb	r2, [r2]
     b5c:	cmp	r2, #44	; 0x2c
     b60:	bne	c20 <strip_unprintable+0x188>
     b64:	ldr	r2, [fp, #-8]
     b68:	add	r2, r2, #2
     b6c:	ldrb	r2, [r2]
     b70:	mov	r1, r2
     b74:	ldr	r2, [pc, #276]	; c90 <strip_unprintable+0x1f8>
     b78:	ldr	r2, [r3, r2]
     b7c:	ldr	r2, [r2, r1, lsl #2]
     b80:	and	r2, r2, #16
     b84:	cmp	r2, #0
     b88:	beq	c20 <strip_unprintable+0x188>
     b8c:	ldr	r2, [fp, #-8]
     b90:	add	r2, r2, #2
     b94:	str	r2, [fp, #-8]
     b98:	ldr	r2, [fp, #-8]
     b9c:	add	r2, r2, #1
     ba0:	ldrb	r2, [r2]
     ba4:	mov	r1, r2
     ba8:	ldr	r2, [pc, #224]	; c90 <strip_unprintable+0x1f8>
     bac:	ldr	r2, [r3, r2]
     bb0:	ldr	r2, [r2, r1, lsl #2]
     bb4:	and	r2, r2, #16
     bb8:	cmp	r2, #0
     bbc:	beq	c20 <strip_unprintable+0x188>
     bc0:	ldr	r2, [fp, #-8]
     bc4:	add	r2, r2, #1
     bc8:	str	r2, [fp, #-8]
     bcc:	b	c20 <strip_unprintable+0x188>
     bd0:	ldr	r2, [fp, #-12]
     bd4:	add	r1, r2, #1
     bd8:	str	r1, [fp, #-12]
     bdc:	ldr	r1, [fp, #-8]
     be0:	ldrb	r1, [r1]
     be4:	strb	r1, [r2]
     be8:	b	c2c <strip_unprintable+0x194>
     bec:	ldr	r2, [fp, #-8]
     bf0:	ldrb	r2, [r2]
     bf4:	cmp	r2, #31
     bf8:	bls	c28 <strip_unprintable+0x190>
     bfc:	ldr	r2, [fp, #-12]
     c00:	add	r1, r2, #1
     c04:	str	r1, [fp, #-12]
     c08:	ldr	r1, [fp, #-8]
     c0c:	ldrb	r1, [r1]
     c10:	strb	r1, [r2]
     c14:	ldr	r2, [fp, #-12]
     c18:	str	r2, [fp, #-16]
     c1c:	b	c2c <strip_unprintable+0x194>
     c20:	nop			; (mov r0, r0)
     c24:	b	c2c <strip_unprintable+0x194>
     c28:	nop			; (mov r0, r0)
     c2c:	ldr	r2, [fp, #-8]
     c30:	add	r2, r2, #1
     c34:	str	r2, [fp, #-8]
     c38:	ldr	r2, [fp, #-8]
     c3c:	cmp	r2, #0
     c40:	beq	c54 <strip_unprintable+0x1bc>
     c44:	ldr	r2, [fp, #-8]
     c48:	ldrb	r2, [r2]
     c4c:	cmp	r2, #0
     c50:	bne	acc <strip_unprintable+0x34>
     c54:	ldr	r3, [fp, #-12]
     c58:	mov	r2, #0
     c5c:	strb	r2, [r3]
     c60:	ldr	r3, [fp, #-16]
     c64:	cmp	r3, #0
     c68:	beq	c78 <strip_unprintable+0x1e0>
     c6c:	ldr	r3, [fp, #-16]
     c70:	mov	r2, #0
     c74:	strb	r2, [r3]
     c78:	ldr	r3, [fp, #-24]	; 0xffffffe8
     c7c:	mov	r0, r3
     c80:	add	sp, fp, #0
     c84:	pop	{fp}		; (ldr fp, [sp], #4)
     c88:	bx	lr
     c8c:	.word	0x0001154c
     c90:	.word	0x0000005c

00000c94 <_modinit>:
     c94:	push	{fp, lr}
     c98:	add	fp, sp, #4
     c9c:	ldr	r2, [pc, #76]	; cf0 <_modinit+0x5c>
     ca0:	add	r2, pc, r2
     ca4:	ldr	r3, [pc, #72]	; cf4 <_modinit+0x60>
     ca8:	ldr	r3, [r2, r3]
     cac:	mov	r1, r3
     cb0:	mov	r0, #78	; 0x4e
     cb4:	bl	87c <cflag_add@plt>
     cb8:	mov	r2, r0
     cbc:	ldr	r3, [pc, #52]	; cf8 <_modinit+0x64>
     cc0:	add	r3, pc, r3
     cc4:	str	r2, [r3]
     cc8:	ldr	r3, [pc, #44]	; cfc <_modinit+0x68>
     ccc:	add	r3, pc, r3
     cd0:	ldr	r3, [r3]
     cd4:	cmp	r3, #0
     cd8:	bne	ce4 <_modinit+0x50>
     cdc:	mvn	r3, #0
     ce0:	b	ce8 <_modinit+0x54>
     ce4:	mov	r3, #0
     ce8:	mov	r0, r3
     cec:	pop	{fp, pc}
     cf0:	.word	0x00011358
     cf4:	.word	0x00000054
     cf8:	.word	0x000115d8
     cfc:	.word	0x000115cc

00000d00 <_moddeinit>:
     d00:	push	{fp, lr}
     d04:	add	fp, sp, #4
     d08:	mov	r0, #78	; 0x4e
     d0c:	bl	918 <cflag_orphan@plt>
     d10:	nop			; (mov r0, r0)
     d14:	pop	{fp, pc}

00000d18 <m_scene>:
     d18:	push	{fp, lr}
     d1c:	add	fp, sp, #4
     d20:	sub	sp, sp, #32
     d24:	str	r0, [fp, #-8]
     d28:	str	r1, [fp, #-12]
     d2c:	str	r2, [fp, #-16]
     d30:	str	r3, [fp, #-20]	; 0xffffffec
     d34:	ldr	r3, [fp, #4]
     d38:	add	r3, r3, #4
     d3c:	ldr	r2, [r3]
     d40:	ldr	r3, [fp, #4]
     d44:	add	r3, r3, #8
     d48:	ldr	r3, [r3]
     d4c:	str	r3, [sp, #8]
     d50:	ldr	r3, [pc, #40]	; d80 <m_scene+0x68>
     d54:	add	r3, pc, r3
     d58:	str	r3, [sp, #4]
     d5c:	mov	r3, #0
     d60:	str	r3, [sp]
     d64:	mov	r3, #0
     d68:	ldr	r1, [fp, #-16]
     d6c:	ldr	r0, [fp, #-8]
     d70:	bl	f44 <m_displaymsg>
     d74:	nop			; (mov r0, r0)
     d78:	sub	sp, fp, #4
     d7c:	pop	{fp, pc}
     d80:	.word	0x00000700

00000d84 <m_fsay>:
     d84:	push	{fp, lr}
     d88:	add	fp, sp, #4
     d8c:	sub	sp, sp, #32
     d90:	str	r0, [fp, #-8]
     d94:	str	r1, [fp, #-12]
     d98:	str	r2, [fp, #-16]
     d9c:	str	r3, [fp, #-20]	; 0xffffffec
     da0:	ldr	r3, [fp, #4]
     da4:	add	r3, r3, #4
     da8:	ldr	r1, [r3]
     dac:	ldr	r3, [fp, #4]
     db0:	add	r3, r3, #8
     db4:	ldr	r3, [r3]
     db8:	ldr	r2, [fp, #4]
     dbc:	add	r2, r2, #12
     dc0:	ldr	r2, [r2]
     dc4:	str	r2, [sp, #8]
     dc8:	str	r3, [sp, #4]
     dcc:	mov	r3, #0
     dd0:	str	r3, [sp]
     dd4:	mov	r3, #0
     dd8:	mov	r2, r1
     ddc:	ldr	r1, [fp, #-16]
     de0:	ldr	r0, [fp, #-8]
     de4:	bl	f44 <m_displaymsg>
     de8:	nop			; (mov r0, r0)
     dec:	sub	sp, fp, #4
     df0:	pop	{fp, pc}

00000df4 <m_faction>:
     df4:	push	{fp, lr}
     df8:	add	fp, sp, #4
     dfc:	sub	sp, sp, #32
     e00:	str	r0, [fp, #-8]
     e04:	str	r1, [fp, #-12]
     e08:	str	r2, [fp, #-16]
     e0c:	str	r3, [fp, #-20]	; 0xffffffec
     e10:	ldr	r3, [fp, #4]
     e14:	add	r3, r3, #4
     e18:	ldr	r1, [r3]
     e1c:	ldr	r3, [fp, #4]
     e20:	add	r3, r3, #8
     e24:	ldr	r3, [r3]
     e28:	ldr	r2, [fp, #4]
     e2c:	add	r2, r2, #12
     e30:	ldr	r2, [r2]
     e34:	str	r2, [sp, #8]
     e38:	str	r3, [sp, #4]
     e3c:	mov	r3, #1
     e40:	str	r3, [sp]
     e44:	mov	r3, #0
     e48:	mov	r2, r1
     e4c:	ldr	r1, [fp, #-16]
     e50:	ldr	r0, [fp, #-8]
     e54:	bl	f44 <m_displaymsg>
     e58:	nop			; (mov r0, r0)
     e5c:	sub	sp, fp, #4
     e60:	pop	{fp, pc}

00000e64 <m_npc>:
     e64:	push	{fp, lr}
     e68:	add	fp, sp, #4
     e6c:	sub	sp, sp, #32
     e70:	str	r0, [fp, #-8]
     e74:	str	r1, [fp, #-12]
     e78:	str	r2, [fp, #-16]
     e7c:	str	r3, [fp, #-20]	; 0xffffffec
     e80:	ldr	r3, [fp, #4]
     e84:	add	r3, r3, #4
     e88:	ldr	r1, [r3]
     e8c:	ldr	r3, [fp, #4]
     e90:	add	r3, r3, #8
     e94:	ldr	r3, [r3]
     e98:	ldr	r2, [fp, #4]
     e9c:	add	r2, r2, #12
     ea0:	ldr	r2, [r2]
     ea4:	str	r2, [sp, #8]
     ea8:	str	r3, [sp, #4]
     eac:	mov	r3, #0
     eb0:	str	r3, [sp]
     eb4:	mov	r3, #1
     eb8:	mov	r2, r1
     ebc:	ldr	r1, [fp, #-16]
     ec0:	ldr	r0, [fp, #-8]
     ec4:	bl	f44 <m_displaymsg>
     ec8:	nop			; (mov r0, r0)
     ecc:	sub	sp, fp, #4
     ed0:	pop	{fp, pc}

00000ed4 <m_npca>:
     ed4:	push	{fp, lr}
     ed8:	add	fp, sp, #4
     edc:	sub	sp, sp, #32
     ee0:	str	r0, [fp, #-8]
     ee4:	str	r1, [fp, #-12]
     ee8:	str	r2, [fp, #-16]
     eec:	str	r3, [fp, #-20]	; 0xffffffec
     ef0:	ldr	r3, [fp, #4]
     ef4:	add	r3, r3, #4
     ef8:	ldr	r1, [r3]
     efc:	ldr	r3, [fp, #4]
     f00:	add	r3, r3, #8
     f04:	ldr	r3, [r3]
     f08:	ldr	r2, [fp, #4]
     f0c:	add	r2, r2, #12
     f10:	ldr	r2, [r2]
     f14:	str	r2, [sp, #8]
     f18:	str	r3, [sp, #4]
     f1c:	mov	r3, #1
     f20:	str	r3, [sp]
     f24:	mov	r3, #1
     f28:	mov	r2, r1
     f2c:	ldr	r1, [fp, #-16]
     f30:	ldr	r0, [fp, #-8]
     f34:	bl	f44 <m_displaymsg>
     f38:	nop			; (mov r0, r0)
     f3c:	sub	sp, fp, #4
     f40:	pop	{fp, pc}

00000f44 <m_displaymsg>:
     f44:	push	{r4, fp, lr}
     f48:	add	fp, sp, #8
     f4c:	sub	sp, sp, #1136	; 0x470
     f50:	sub	sp, sp, #4
     f54:	str	r0, [fp, #-1120]	; 0xfffffba0
     f58:	str	r1, [fp, #-1124]	; 0xfffffb9c
     f5c:	str	r2, [fp, #-1128]	; 0xfffffb98
     f60:	str	r3, [fp, #-1132]	; 0xfffffb94
     f64:	ldr	r4, [pc, #860]	; 12c8 <m_displaymsg+0x384>
     f68:	add	r4, pc, r4
     f6c:	sub	r3, fp, #92	; 0x5c
     f70:	mov	r2, #33	; 0x21
     f74:	ldr	r1, [fp, #8]
     f78:	mov	r0, r3
     f7c:	bl	900 <rb_strlcpy@plt>
     f80:	ldr	r3, [fp, #-1124]	; 0xfffffb9c
     f84:	ldrd	r2, [r3, #64]	; 0x40
     f88:	mov	r0, #256	; 0x100
     f8c:	mov	r1, #0
     f90:	and	r2, r2, r0
     f94:	and	r3, r3, r1
     f98:	orrs	r3, r2, r3
     f9c:	bne	fa8 <m_displaymsg+0x64>
     fa0:	ldr	r0, [fp, #-1124]	; 0xfffffb9c
     fa4:	bl	8f4 <flood_endgrace@plt>
     fa8:	ldr	r0, [fp, #-1128]	; 0xfffffb98
     fac:	bl	8ac <find_channel@plt>
     fb0:	str	r0, [fp, #-16]
     fb4:	ldr	r3, [fp, #-16]
     fb8:	cmp	r3, #0
     fbc:	bne	fdc <m_displaymsg+0x98>
     fc0:	ldr	r3, [fp, #-1128]	; 0xfffffb98
     fc4:	ldr	r2, [pc, #768]	; 12cc <m_displaymsg+0x388>
     fc8:	add	r2, pc, r2
     fcc:	ldr	r1, [pc, #764]	; 12d0 <m_displaymsg+0x38c>
     fd0:	ldr	r0, [fp, #-1124]	; 0xfffffb9c
     fd4:	bl	8d0 <sendto_one_numeric@plt>
     fd8:	b	12c0 <m_displaymsg+0x37c>
     fdc:	ldr	r1, [fp, #-1124]	; 0xfffffb9c
     fe0:	ldr	r0, [fp, #-16]
     fe4:	bl	8b8 <find_channel_membership@plt>
     fe8:	str	r0, [fp, #-20]	; 0xffffffec
     fec:	ldr	r3, [fp, #-20]	; 0xffffffec
     ff0:	cmp	r3, #0
     ff4:	bne	1018 <m_displaymsg+0xd4>
     ff8:	ldr	r3, [fp, #-16]
     ffc:	ldr	r3, [r3, #236]	; 0xec
    1000:	ldr	r2, [pc, #716]	; 12d4 <m_displaymsg+0x390>
    1004:	add	r2, pc, r2
    1008:	ldr	r1, [pc, #712]	; 12d8 <m_displaymsg+0x394>
    100c:	ldr	r0, [fp, #-1124]	; 0xfffffb9c
    1010:	bl	8d0 <sendto_one_numeric@plt>
    1014:	b	12c0 <m_displaymsg+0x37c>
    1018:	ldr	r3, [fp, #-16]
    101c:	ldr	r3, [r3, #12]
    1020:	ldr	r2, [pc, #692]	; 12dc <m_displaymsg+0x398>
    1024:	ldr	r2, [r4, r2]
    1028:	ldr	r2, [r2, #312]	; 0x138
    102c:	and	r3, r3, r2
    1030:	cmp	r3, #0
    1034:	bne	1058 <m_displaymsg+0x114>
    1038:	ldr	r3, [fp, #-16]
    103c:	ldr	r3, [r3, #236]	; 0xec
    1040:	ldr	r2, [pc, #664]	; 12e0 <m_displaymsg+0x39c>
    1044:	add	r2, pc, r2
    1048:	ldr	r1, [pc, #660]	; 12e4 <m_displaymsg+0x3a0>
    104c:	ldr	r0, [fp, #-1124]	; 0xfffffb9c
    1050:	bl	8d0 <sendto_one_numeric@plt>
    1054:	b	12c0 <m_displaymsg+0x37c>
    1058:	ldr	r2, [fp, #-20]	; 0xffffffec
    105c:	ldr	r1, [fp, #-1124]	; 0xfffffb9c
    1060:	ldr	r0, [fp, #-16]
    1064:	bl	870 <can_send@plt>
    1068:	mov	r3, r0
    106c:	cmp	r3, #0
    1070:	bne	1094 <m_displaymsg+0x150>
    1074:	ldr	r3, [fp, #-16]
    1078:	ldr	r3, [r3, #236]	; 0xec
    107c:	ldr	r2, [pc, #612]	; 12e8 <m_displaymsg+0x3a4>
    1080:	add	r2, pc, r2
    1084:	ldr	r1, [pc, #600]	; 12e4 <m_displaymsg+0x3a0>
    1088:	ldr	r0, [fp, #-1124]	; 0xfffffb9c
    108c:	bl	8d0 <sendto_one_numeric@plt>
    1090:	b	12c0 <m_displaymsg+0x37c>
    1094:	ldr	r3, [fp, #-16]
    1098:	ldr	r3, [r3, #236]	; 0xec
    109c:	ldr	r2, [fp, #-16]
    10a0:	ldr	r1, [fp, #-1124]	; 0xfffffb9c
    10a4:	mov	r0, #0
    10a8:	bl	90c <flood_attack_channel@plt>
    10ac:	mov	r3, r0
    10b0:	cmp	r3, #0
    10b4:	bne	12bc <m_displaymsg+0x378>
    10b8:	ldr	r3, [fp, #-20]	; 0xffffffec
    10bc:	cmp	r3, #0
    10c0:	beq	10d8 <m_displaymsg+0x194>
    10c4:	ldr	r3, [fp, #-20]	; 0xffffffec
    10c8:	ldr	r3, [r3, #44]	; 0x2c
    10cc:	and	r3, r3, #3
    10d0:	cmp	r3, #0
    10d4:	bne	113c <m_displaymsg+0x1f8>
    10d8:	ldr	r3, [fp, #-1124]	; 0xfffffb9c
    10dc:	ldr	r3, [r3, #56]	; 0x38
    10e0:	and	r3, r3, #4096	; 0x1000
    10e4:	cmp	r3, #0
    10e8:	bne	113c <m_displaymsg+0x1f8>
    10ec:	ldr	r1, [fp, #-16]
    10f0:	ldr	r0, [fp, #-1124]	; 0xfffffb9c
    10f4:	bl	8dc <add_channel_target@plt>
    10f8:	mov	r3, r0
    10fc:	cmp	r3, #0
    1100:	bne	113c <m_displaymsg+0x1f8>
    1104:	ldr	r3, [fp, #-1124]	; 0xfffffb9c
    1108:	add	r2, r3, #88	; 0x58
    110c:	ldr	r3, [fp, #-16]
    1110:	ldr	r3, [r3, #236]	; 0xec
    1114:	str	r3, [sp]
    1118:	mov	r3, r2
    111c:	ldr	r2, [pc, #456]	; 12ec <m_displaymsg+0x3a8>
    1120:	ldr	r2, [r4, r2]
    1124:	add	r2, r2, #88	; 0x58
    1128:	ldr	r1, [pc, #448]	; 12f0 <m_displaymsg+0x3ac>
    112c:	add	r1, pc, r1
    1130:	ldr	r0, [fp, #-1124]	; 0xfffffb9c
    1134:	bl	8a0 <sendto_one@plt>
    1138:	b	12c0 <m_displaymsg+0x37c>
    113c:	ldr	r3, [fp, #-1132]	; 0xfffffb94
    1140:	cmp	r3, #0
    1144:	beq	1170 <m_displaymsg+0x22c>
    1148:	sub	r3, fp, #92	; 0x5c
    114c:	mov	r0, r3
    1150:	bl	a98 <strip_unprintable>
    1154:	mov	r3, r0
    1158:	sub	r0, fp, #56	; 0x38
    115c:	ldr	r2, [pc, #400]	; 12f4 <m_displaymsg+0x3b0>
    1160:	add	r2, pc, r2
    1164:	mov	r1, #33	; 0x21
    1168:	bl	8e8 <snprintf@plt>
    116c:	b	1194 <m_displaymsg+0x250>
    1170:	sub	r3, fp, #92	; 0x5c
    1174:	mov	r0, r3
    1178:	bl	a98 <strip_unprintable>
    117c:	mov	r3, r0
    1180:	sub	r0, fp, #56	; 0x38
    1184:	ldr	r2, [pc, #364]	; 12f8 <m_displaymsg+0x3b4>
    1188:	add	r2, pc, r2
    118c:	mov	r1, #33	; 0x21
    1190:	bl	8e8 <snprintf@plt>
    1194:	ldrb	r3, [fp, #-92]	; 0xffffffa4
    1198:	cmp	r3, #0
    119c:	bne	11c0 <m_displaymsg+0x27c>
    11a0:	ldr	r3, [fp, #-16]
    11a4:	ldr	r3, [r3, #236]	; 0xec
    11a8:	ldr	r2, [pc, #332]	; 12fc <m_displaymsg+0x3b8>
    11ac:	add	r2, pc, r2
    11b0:	ldr	r1, [pc, #300]	; 12e4 <m_displaymsg+0x3a0>
    11b4:	ldr	r0, [fp, #-1124]	; 0xfffffb9c
    11b8:	bl	8d0 <sendto_one_numeric@plt>
    11bc:	b	12c0 <m_displaymsg+0x37c>
    11c0:	ldr	r3, [fp, #-1124]	; 0xfffffb9c
    11c4:	add	r3, r3, #88	; 0x58
    11c8:	sub	r0, fp, #604	; 0x25c
    11cc:	str	r3, [sp]
    11d0:	ldr	r3, [fp, #12]
    11d4:	ldr	r2, [pc, #292]	; 1300 <m_displaymsg+0x3bc>
    11d8:	add	r2, pc, r2
    11dc:	mov	r1, #512	; 0x200
    11e0:	bl	8e8 <snprintf@plt>
    11e4:	ldr	r3, [fp, #4]
    11e8:	cmp	r3, #0
    11ec:	beq	1210 <m_displaymsg+0x2cc>
    11f0:	sub	r3, fp, #604	; 0x25c
    11f4:	sub	r0, fp, #1104	; 0x450
    11f8:	sub	r0, r0, #12
    11fc:	ldr	r2, [pc, #256]	; 1304 <m_displaymsg+0x3c0>
    1200:	add	r2, pc, r2
    1204:	mov	r1, #512	; 0x200
    1208:	bl	8e8 <snprintf@plt>
    120c:	b	122c <m_displaymsg+0x2e8>
    1210:	sub	r3, fp, #604	; 0x25c
    1214:	sub	r0, fp, #1104	; 0x450
    1218:	sub	r0, r0, #12
    121c:	ldr	r2, [pc, #228]	; 1308 <m_displaymsg+0x3c4>
    1220:	add	r2, pc, r2
    1224:	mov	r1, #512	; 0x200
    1228:	bl	8e8 <snprintf@plt>
    122c:	ldr	r3, [fp, #-1124]	; 0xfffffb9c
    1230:	add	r3, r3, #88	; 0x58
    1234:	sub	r2, fp, #1104	; 0x450
    1238:	sub	r2, r2, #12
    123c:	str	r2, [sp, #12]
    1240:	ldr	r2, [fp, #-1128]	; 0xfffffb98
    1244:	str	r2, [sp, #8]
    1248:	str	r3, [sp, #4]
    124c:	sub	r3, fp, #56	; 0x38
    1250:	str	r3, [sp]
    1254:	ldr	r3, [pc, #176]	; 130c <m_displaymsg+0x3c8>
    1258:	add	r3, pc, r3
    125c:	ldr	r2, [fp, #-16]
    1260:	mov	r1, #0
    1264:	ldr	r0, [fp, #-1124]	; 0xfffffb9c
    1268:	bl	864 <sendto_channel_local@plt>
    126c:	ldr	r3, [pc, #156]	; 1310 <m_displaymsg+0x3cc>
    1270:	ldr	r3, [r4, r3]
    1274:	ldr	r3, [r3]
    1278:	mov	r2, r3
    127c:	sub	r3, fp, #1104	; 0x450
    1280:	sub	r3, r3, #12
    1284:	str	r3, [sp, #12]
    1288:	sub	r3, fp, #56	; 0x38
    128c:	str	r3, [sp, #8]
    1290:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    1294:	str	r3, [sp, #4]
    1298:	ldr	r3, [pc, #116]	; 1314 <m_displaymsg+0x3d0>
    129c:	add	r3, pc, r3
    12a0:	str	r3, [sp]
    12a4:	mov	r3, #0
    12a8:	ldr	r1, [pc, #104]	; 1318 <m_displaymsg+0x3d4>
    12ac:	add	r1, pc, r1
    12b0:	ldr	r0, [fp, #-1124]	; 0xfffffb9c
    12b4:	bl	888 <sendto_match_servs@plt>
    12b8:	b	12c0 <m_displaymsg+0x37c>
    12bc:	nop			; (mov r0, r0)
    12c0:	sub	sp, fp, #8
    12c4:	pop	{r4, fp, pc}
    12c8:	.word	0x00011090
    12cc:	.word	0x00000494
    12d0:	.word	0x00000193
    12d4:	.word	0x0000046c
    12d8:	.word	0x000001ba
    12dc:	.word	0x00000060
    12e0:	.word	0x0000044c
    12e4:	.word	0x0000023d
    12e8:	.word	0x00000448
    12ec:	.word	0x0000006c
    12f0:	.word	0x000003b8
    12f4:	.word	0x000003c0
    12f8:	.word	0x000003a0
    12fc:	.word	0x00000380
    1300:	.word	0x00000384
    1304:	.word	0x00000364
    1308:	.word	0x00000308
    130c:	.word	0x0000031c
    1310:	.word	0x00000070
    1314:	.word	0x00000308
    1318:	.word	0x000002f4

0000131c <me_roleplay>:
    131c:	push	{fp, lr}
    1320:	add	fp, sp, #4
    1324:	sub	sp, sp, #40	; 0x28
    1328:	str	r0, [fp, #-16]
    132c:	str	r1, [fp, #-20]	; 0xffffffec
    1330:	str	r2, [fp, #-24]	; 0xffffffe8
    1334:	str	r3, [fp, #-28]	; 0xffffffe4
    1338:	ldr	r3, [fp, #4]
    133c:	add	r3, r3, #4
    1340:	ldr	r3, [r3]
    1344:	mov	r0, r3
    1348:	bl	8ac <find_channel@plt>
    134c:	str	r0, [fp, #-8]
    1350:	ldr	r3, [fp, #-8]
    1354:	cmp	r3, #0
    1358:	beq	13b4 <me_roleplay+0x98>
    135c:	ldr	r3, [fp, #4]
    1360:	add	r3, r3, #8
    1364:	ldr	r3, [r3]
    1368:	ldr	r2, [fp, #-24]	; 0xffffffe8
    136c:	add	r2, r2, #88	; 0x58
    1370:	ldr	r1, [fp, #4]
    1374:	add	r1, r1, #4
    1378:	ldr	r1, [r1]
    137c:	ldr	r0, [fp, #4]
    1380:	add	r0, r0, #12
    1384:	ldr	r0, [r0]
    1388:	str	r0, [sp, #12]
    138c:	str	r1, [sp, #8]
    1390:	str	r2, [sp, #4]
    1394:	str	r3, [sp]
    1398:	ldr	r3, [pc, #32]	; 13c0 <me_roleplay+0xa4>
    139c:	add	r3, pc, r3
    13a0:	ldr	r2, [fp, #-8]
    13a4:	mov	r1, #0
    13a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    13ac:	bl	864 <sendto_channel_local@plt>
    13b0:	b	13b8 <me_roleplay+0x9c>
    13b4:	nop			; (mov r0, r0)
    13b8:	sub	sp, fp, #4
    13bc:	pop	{fp, pc}
    13c0:	.word	0x000001d8

Disassembly of section .fini:

000013c4 <_fini>:
    13c4:	push	{r3, lr}
    13c8:	pop	{r3, pc}
